push
push
mov
push
mov
push
push
push
call
mov
add
mov
xor
cmp
mov
je
mov
call
movl
mov
mov
pop
mov
add
ret
mov
mov
push
push
push
push
mov
push
mov
push
mov
push
push
push
call
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
call
test
jne
push
push
push
call
jmp
push
call
add
mov
call
push
lea
call
lea
lea
movl
mov
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
movl
movb
movl
call
push
push
push
call
push
call
mov
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
or
xor
repnz
mov
mov
not
dec
push
push
mov
call
mov
mov
push
push
call
mov
sub
sub
add
mov
mov
mov
add
shr
rep
mov
and
rep
pop
pop
pop
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
jmp
mov
pusha
pushl
lea
jmp
mov
call
movb
call
call
add
push
sbb
movzbl
movw
xor
call
add
pushl
pushf
pushf
push
lea
jmp
push
call
pusha
cwtl
lahf
movw
mov
push
mov
movb
mov
pushf
lea
jmp
call
pushf
mov
call
pushf
pushf
mov
movb
pushf
call
cmp
stc
cmc
shl
push
jmp
pusha
cmc
sub
test
mov
mov
cmp
and
pushl
push
pushf
popl
pushf
mov
pushl
popl
pushf
push
pushf
push
lea
jmp
pushl
movb
inc
pusha
test
xor
cmc
test
mov
bt
clc
clc
clc
sub
call
jmp
push
pushf
popl
call
lahf
lahf
stc
mov
clc
pusha
add
pushf
push
mov
jmp
mov
call
jmp
jmp
add
jmp
call
int3
lea
movb
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
lea
push
movl
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
jmp
mov
bswap
mov
movsbw
pushf
popl
shrd
bt
shl
cmp
pushl
popl
sar
movl
cmp
neg
cmc
mov
test
call
dec
shl
adc
shl
movb
add
shl
mov
add
pusha
sub
movsbw
bswap
mov
jmp
bswap
not
lea
setno
mov
pushf
push
jmp
movw
pushl
popl
mov
movl
mov
lea
jmp
sub
xor
inc
cmp
mov
clc
inc
bt
shr
add
setle
not
mov
pushf
pushl
mov
pushf
lea
jmp
mov
pushf
pushl
pusha
mov
mov
mov
pushf
pushf
mov
mov
jmp
pushf
pushf
mov
push
pushf
pushf
mov
movw
movw
lea
jmp
pusha
pushl
pushl
mov
pusha
pushf
jmp
call
out
add
add
ret
mov
mov
lea
push
mov
call
not
pushf
push
rcl
stc
pushl
popl
neg
push
sar
rol
mov
bt
call
push
mov
pushf
call
pusha
mov
call
call
sub
mov
lock
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
jmp
test
cmp
pushl
popf
movb
push
movb
lea
jmp
add
push
mov
lea
jmp
bsf
push
bts
shrd
movzbl
ror
clc
movzbw
xor
dec
add
sub
pushf
movsbw
btr
shrd
xor
not
inc
sub
movzbw
not
xor
and
lea
neg
shr
mov
jmp
push
movzbw
mov
shl
shr
cmp
pusha
mov
test
call
push
pushf
mov
mov
pushf
pushf
popl
movl
pushl
popl
pushf
pushf
pushf
lea
jmp
mov
movw
movb
movb
lea
jmp
xor
jmp
inc
call
add
push
pushf
jmp
bt
std
cld
popf
pushf
pushl
mov
lea
jmp
mov
lea
pushf
popl
adc
sbb
pushl
popl
bswap
movl
adc
shrd
mov
clc
stc
not
stc
pushl
jmp
call
push
mov
pusha
pushl
jmp
pusha
jmp
xor
xor
neg
movzww
clc
add
pushf
not
clc
movb
rol
cmc
neg
pushf
pushf
mov
add
cmp
test
clc
bt
lea
pusha
stc
call
inc
cmc
ror
jmp
jmp
inc
dec
sub
neg
sub
and
dec
seto
sete
push
mov
pushf
sub
push
mov
pushl
push
pushf
lea
jmp
adc
mov
neg
shl
shl
pushf
mov
cmp
call
add
pushf
call
pushf
push
call
pusha
pushf
mov
call
mov
pusha
mov
lea
jmp
movzbl
mov
pushf
pushl
bswap
call
call
aam
ficomps
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
push
call
test
je
push
push
push
lea
call
mov
mov
push
push
push
push
call
mov
push
call
push
mov
call
mov
mov
lea
push
push
call
mov
mov
mov
sub
sub
push
inc
cltd
sub
mov
sar
push
mov
sub
sub
inc
cltd
sub
sar
push
mov
push
call
lea
call
pop
pop
pop
add
ret
mov
call
pop
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
jmp
mov
pusha
xchg
call
push
mov
movw
lea
jmp
setp
pushf
mov
push
bsf
mov
jmp
push
setg
pushl
mov
push
lea
mov
pushf
mov
not
mov
lea
mov
mov
pushl
ret
shl
movsbw
jmp
mov
pushl
lea
jmp
push
add
pushf
push
pusha
lea
jmp
lahf
bsr
shld
btr
mov
pushf
cmp
cmc
add
movb
pushf
popl
pushf
pusha
jmp
push
pushf
pushf
popl
jmp
mov
push
pusha
jmp
dec
clc
movzbl
mov
sar
ror
mov
call
pushl
popl
mov
push
mov
lea
jmp
call
je
pop
mov
pop
pop
add
ret
nop
nop
nop
sub
push
push
mov
call
mov
lea
push
push
call
lea
push
call
mov
mov
push
lea
push
push
call
test
je
mov
push
call
mov
pop
add
ret
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
jmp
pushf
pushf
mov
bsr
shld
mov
clc
cmp
not
cmc
stc
pushf
not
pusha
cmp
cmc
and
jmp
mov
call
cli
ret
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
mov
push
push
push
call
mov
test
je
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
mov
sub
add
push
push
mov
sub
mov
push
push
push
push
call
mov
mov
mov
sub
mov
add
push
sub
push
push
jmp
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
mov
sub
sub
push
push
mov
sub
mov
push
push
push
push
call
mov
mov
mov
sub
sub
push
push
mov
sub
push
push
push
lea
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
push
call
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
mov
cmpw
jne
cmp
je
mov
push
push
push
push
call
mov
push
push
push
push
call
push
push
push
lea
call
mov
pop
pop
pop
movl
ret
mov
pop
pop
pop
movl
ret
mov
pop
pop
pop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
push
call
push
push
push
push
test
push
je
mov
push
mov
call
pop
ret
mov
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
jmp
push
push
mov
pusha
pushf
pushf
mov
lea
jmp
movw
cmp
cmc
not
test
pushf
pushf
push
add
pushf
mov
movb
lea
jmp
pop
bswap
movzbw
movzbw
jle
pop
setbe
pop
push
pop
pop
xchg
pop
call
pushl
popl
cmp
neg
bts
movl
sub
sar
mov
mov
push
pusha
cmc
not
jmp
test
mov
jmp
pushf
mov
pusha
pusha
mov
mov
pushf
jmp
pusha
jmp
not
mov
lea
mov
lea
pushf
xchg
movzbw
xchg
movw
mov
movzbw
movsbw
movzbw
jmp
mov
push
lea
jmp
das
rcl
pushf
mov
call
mov
pushf
popl
push
pushl
popl
mov
lea
jmp
cwtl
cmp
cmc
call
call
jmp
jmp
call
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
pushl
pushl
pushl
call
ret
call
mov
mov
test
mov
mov
jne
push
call
pop
push
pop
ret
jmp
push
push
call
mov
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
add
mov
inc
mov
add
nop
add
lret
add
adc
add
nop
add
sbb
add
incb
inc
xchg
nop
add
mov
inc
mov
add
nop
add
lret
add
adc
add
nop
add
nop
add
adc
add
nop
add
aas
add
adc
add
nop
add
mov
inc
mov
add
nop
add
ljmp
lcall
inc
sbb
add
adc
add
nop
add
addl
inc
fwait
xchg
add
nop
add
inc
add
adc
add
nop
add
test
add
and
inc
xchg
nop
add
lret
add
adc
add
nop
add
iret
add
adc
add
nop
add
mov
add
mov
inc
xchg
nop
add
mov
add
mov
inc
push
mov
add
mov
inc
mov
add
dec
add
mov
add
jge
inc
mov
add
call
add
movsl
add
add
adc
inc
sbb
add
incb
inc
mov
inc
test
inc
mov
inc
xchg
movsb
add
mov
inc
xchg
nop
add
mov
add
mov
inc
mov
inc
sbb
add
mov
inc
sbb
add
adc
inc
es
inc
push
mov
add
movsl
add
int3
add
mov
inc
mov
add
add
add
mov
inc
lcall
inc
sbb
inc
fwait
xchg
add
mov
inc
sbb
inc
mov
inc
sbb
add
jne
inc
sbb
add
sbb
add
mov
inc
test
add
faddl
inc
nop
movsl
add
mov
add
addl
inc
test
inc
mov
add
mov
inc
pop
xchg
inc
mov
add
cwtl
add
mov
inc
mov
inc
sbb
std
add
loop
inc
push
jne
inc
sbb
inc
sbb
insb
add
movsl
add
fiadds
inc
es
inc
fwait
xchg
add
lret
add
and
inc
sbb
add
adc
inc
sbb
inc
lcall
inc
mov
inc
push
jne
inc
lea
add
mov
inc
xchg
add
jge
inc
xchg
std
add
push
add
adc
inc
xchg
fiadds
inc
push
aas
add
call
add
movsl
add
jne
inc
push
mov
inc
xchg
jge
inc
pop
xchg
inc
push
aas
add
xchg
add
adc
inc
mov
add
faddl
inc
sbb
add
inc
add
std
add
ljmp
fwait
xchg
add
mov
inc
sbb
add
movsl
add
dec
add
jge
inc
pop
jne
inc
lcall
inc
xchg
fiadds
inc
push
mov
add
ljmp
test
inc
test
inc
mov
inc
sbb
add
dec
add
addl
inc
mov
add
mov
inc
pop
xchg
inc
xchg
nop
add
jge
inc
sbb
add
add
test
add
int3
add
xchg
add
jge
inc
es
inc
xchg
push
add
loop
inc
mov
add
push
add
call
add
ljmp
mov
add
jne
inc
sbb
add
repnz
lret
add
add
mov
inc
push
mov
inc
xchg
movsb
add
xchg
add
nop
add
mov
inc
xchg
nop
add
dec
add
repnz
sbb
shr
movl
pushl
mov
pushf
call
mov
sub
jmp
mov
clc
not
stc
bt
not
bt
cmp
sub
mov
stc
stc
and
pusha
movb
pushf
mov
mov
pushf
popl
pushf
jmp
bt
cmc
cmc
rol
pushf
bt
clc
test
xor
jmp
pusha
mov
mov
mov
mov
not
movsbl
mov
push
pushl
ret
pushl
stc
clc
pusha
add
call
pushf
movb
mov
jmp
pushl
popl
push
push
pushf
push
lea
jmp
xchg
movsbw
mov
pushf
pop
mov
movzbw
pushf
popl
sar
mov
pushl
popl
add
clc
movl
sar
cmp
pushf
mov
jmp
pushl
popl
mov
lea
jmp
daa
aam
mov
rol
btc
sar
bsf
mov
jmp
shl
mov
shl
mov
call
push
movw
jmp
pushf
inc
pushl
call
mov
jmp
movsbl
mov
lea
mov
pushf
call
mov
jmp
pusha
pushf
mov
mov
pusha
pushf
popl
pushf
mov
mov
pushl
popl
push
movw
mov
lea
jmp
mov
mov
bswap
movzbw
bswap
mov
movsbw
pop
bswap
mov
mov
not
pushf
popl
sar
not
pushl
popl
pusha
push
test
test
movl
clc
bsr
mov
push
not
call
neg
push
add
test
call
call
movb
call
mov
call
mov
movb
xchg
mov
lea
movsbw
bswap
mov
movzbl
mov
mov
pushf
popl
rcr
not
shr
pushl
popl
dec
neg
ror
bt
movl
bts
pop
bsr
cmc
mov
cmc
not
cmc
jmp
shld
mov
call
stc
jmp
pushf
jmp
call
mov
mov
xchg
mov
mov
movzbw
mov
lea
pushf
pusha
mov
push
pushf
popl
cmc
sbb
cmp
shl
pushl
popl
pop
neg
movzbw
inc
movl
stc
mov
pushf
not
bt
cmc
add
movb
lea
jmp
pushf
popl
shld
jmp
call
aad
bsf
or
pop
sbb
and
xor
daa
pop
btr
setg
neg
popf
jmp
pusha
push
test
xor
mov
clc
stc
cmc
rol
movb
add
jmp
add
movb
lea
jmp
rcl
mov
stc
call
mov
pushf
pushf
push
pusha
lea
jmp
push
pusha
mov
lea
jp
pusha
mov
movb
call
movw
movb
mov
push
mov
movb
push
mov
call
call
sub
movb
jmp
pusha
pushf
popl
mov
pushl
popl
mov
lea
jmp
movsbl
jmp
call
call
push
movb
mov
call
test
test
shl
pusha
mov
push
jmp
pusha
lea
ja
aaa
mov
shl
mov
sub
pushf
lea
xor
jmp
pushf
jmp
stc
clc
test
add
pusha
ror
push
pushf
call
mov
ror
pushf
dec
clc
jmp
add
mov
pushf
lea
jmp
shr
call
pusha
sub
pushf
pushf
movl
mov
pushf
movw
pushf
lea
jmp
mov
call
neg
mov
bt
bt
test
cmp
sub
call
cmp
bt
test
cmc
add
test
pushf
sub
cmp
pushf
jmp
pusha
mov
pushl
push
pushl
jmp
jmp
jmp
movb
pusha
stc
add
pusha
mov
mov
pushf
push
lea
jmp
xor
neg
mov
jmp
clc
pushf
pushf
shrd
pushf
pushl
mov
jmp
bt
call
movb
pushf
pushl
popl
pushf
push
pusha
pushf
lea
jmp
call
jmp
bswap
jmp
jmp
mov
push
add
pusha
lea
jmp
cmc
add
jmp
mov
push
movb
pusha
pusha
lea
jmp
pop
jmp
aam
xadd
mov
rcr
btc
pusha
call
sub
stc
stc
mov
sub
pusha
jmp
xchg
movsbw
mov
lea
mov
mov
pushf
popl
clc
btr
pushl
popl
pushf
call
movl
mov
pusha
pushf
push
mov
movw
pushf
mov
pusha
jmp
sub
mov
lea
jno
mov
push
pusha
pushl
mov
lea
jmp
and
stc
sbb
inc
mov
push
pushf
stc
xor
clc
rol
stc
clc
xor
call
bswap
bsf
stc
mov
bt
mov
bt
push
cmp
sub
movb
pushf
call
shld
neg
movzbw
push
inc
bt
shrd
neg
or
sbb
stc
and
bsr
bsf
sub
jnp
shl
mov
call
js
mov
push
lea
jmp
mov
push
pushf
pushf
mov
push
movb
jmp
sbb
shl
sub
adc
inc
lea
rcr
neg
and
shl
clc
sub
movzbw
mov
lea
not
mov
call
pushl
mov
pusha
pushf
lea
jmp
pop
mov
mov
movzbw
mov
jmp
sub
jns
add
push
pusha
lea
jmp
movb
xchg
not
mov
movsbw
call
movl
shld
sar
mov
push
clc
not
jmp
mov
jmp
mov
sub
movb
jmp
mov
bt
pusha
add
clc
jmp
mov
mov
pushl
pushf
pushl
lea
jmp
bt
mov
jmp
mov
pushf
mov
jmp
mov
movw
pushl
pusha
mov
pushl
call
pushf
mov
pushf
movsbw
mov
movsbl
mov
mov
bswap
pushf
popl
lea
bsr
sar
pushl
popl
xor
movl
neg
call
bt
stc
not
stc
cmc
push
add
pushl
lea
jmp
shl
shr
shl
mov
jmp
jmp
lea
jp
push
jmp
cbtw
cmc
cwtl
pushf
cmp
clc
clc
sub
movl
pusha
movb
mov
pushf
movb
lea
jmp
jmp
pushl
popl
movb
mov
lea
jmp
mov
push
pushf
popl
movb
push
lea
jns
popl
pushf
push
lea
jmp
pushf
popl
call
shl
mov
stc
call
add
bt
bt
cmc
pusha
not
stc
bt
movb
stc
rol
call
pushf
mov
jmp
not
pusha
pushl
add
mov
lea
jmp
pushf
mov
call
pushl
call
jmp
mov
push
pushf
pushf
mov
movl
push
jmp
call
movzbw
mov
pushl
stc
add
pushf
pusha
mov
push
pushf
lea
jmp
cmp
clc
sub
call
not
cmp
test
cmp
add
pushf
lea
jmp
cmp
inc
ror
rcl
mov
cmp
pusha
stc
add
jmp
pushf
mov
push
lea
jmp
mov
push
mov
lea
jb
pushf
pushf
popl
rol
pushl
shld
adc
bswap
push
mov
rol
mov
pusha
cmp
pusha
stc
not
push
call
stc
movzbw
lahf
bt
mov
pushf
pusha
test
stc
sub
mov
test
jmp
rol
bt
test
xor
clc
cmp
push
sub
jno
sub
pusha
mov
pushf
mov
pushf
pushl
mov
push
lea
jmp
add
call
jmp
bt
test
not
push
jmp
xchg
movzbl
pop
pop
mov
not
mov
jmp
sub
rcr
mov
clc
pushf
call
push
pusha
sub
call
pushf
mov
push
mov
movl
xchg
bswap
call
not
mov
mov
jmp
add
pushl
pusha
pushf
mov
pushl
mov
lea
jmp
pushf
push
mov
mov
pushf
popl
pusha
pushl
popl
pushl
lea
jmp
push
movb
movb
add
push
movl
pushf
mov
pusha
lea
jmp
bt
add
pusha
mov
movw
lea
jmp
mov
pushf
mov
movl
pushl
lea
jmp
mov
mov
call
rcr
aas
mov
cmp
clc
pushf
sub
pusha
mov
pushf
pushf
mov
lea
jmp
pushf
call
movzbw
ror
shld
mov
pushf
pusha
add
movw
pushf
mov
push
lea
jmp
mov
bswap
pop
mov
not
jmp
sub
push
mov
mov
lea
jmp
not
pop
lea
pop
movzbw
mov
pop
jmp
pushf
pusha
sub
pushf
movb
pushf
mov
mov
mov
lea
jmp
jmp
push
pushf
popl
pushl
jmp
push
mov
jmp
mov
call
mov
push
pushf
pushf
mov
jmp
mov
pusha
jmp
bswap
mov
pushf
popl
dec
pushf
shl
pushl
popl
inc
or
bt
test
movl
neg
mov
bt
not
test
pushf
pushf
add
mov
mov
lea
jmp
mov
pushf
mov
pushf
pushf
pushl
lea
jmp
push
mov
call
mov
cld
pusha
cld
pushf
mov
pushf
rep
neg
mov
rcr
cmc
mov
call
sbb
test
mov
cmp
mov
test
cmp
test
sub
bt
add
jp
pusha
shr
pusha
pushf
jmp
lea
sbb
mov
jmp
mov
mov
movb
movw
movb
lea
jmp
jmp
movb
add
call
mov
call
movzbl
mov
movzbw
pushf
mov
movsbw
pushf
popl
clc
pushl
popl
clc
movl
test
inc
lea
dec
mov
test
not
cmp
stc
add
push
push
lea
jmp
mov
jmp
mov
pusha
call
add
jl
stc
popf
push
pusha
lea
jmp
pushf
popl
mov
jmp
pushf
movl
xor
call
sar
neg
notl
shrd
aaa
bts
movzbw
mov
cmp
jmp
call
pushf
movl
mov
pusha
push
mov
mov
mov
mov
pushf
mov
push
pushf
pushl
mov
pushl
jmp
pushf
popl
pushf
jmp
and
lea
pusha
cmp
call
mov
pushf
xchg
lea
mov
movsbl
mov
movzbl
movsbw
push
pushf
pushf
popl
push
movzbw
rcl
pushl
popl
shrd
bswap
bswap
rcr
movl
btc
sub
mov
mov
stc
pushf
not
test
cmp
mov
add
mov
lea
jmp
add
pushl
popl
stc
movl
sbb
mov
call
mov
call
pushf
pushf
popl
push
call
mov
not
pushf
lea
movzbw
mov
call
bts
mov
pushf
jmp
stc
jmp
shld
not
test
shrd
neg
pushf
jmp
mov
pusha
pushf
clc
add
movb
jmp
pushl
popl
movw
push
pushf
lea
jmp
movzbw
pop
pushf
popl
pushf
pushl
popl
bsr
bswap
cmp
movl
bts
or
and
shl
mov
test
cmp
not
stc
bt
push
add
push
lea
jmp
pushf
push
pushf
popl
pushf
pushf
pushf
pushl
popl
pushf
movw
mov
lea
jmp
pushf
pusha
push
mov
call
push
inc
clc
pushf
bt
cmp
mov
push
jmp
push
mov
pusha
push
pusha
mov
pushf
push
jmp
pushl
popl
pushf
lea
jmp
clc
bt
shrd
call
pushf
mov
push
call
call
call
pusha
mov
push
mov
push
jmp
mov
call
bt
cmc
pushf
call
shl
call
bsr
mov
push
dec
mov
bt
cmc
add
pusha
mov
movb
pushf
lea
jmp
pushl
call
add
add
shr
pushf
pushf
pushf
pushf
mov
pushf
call
mov
movb
mov
push
xchg
pop
push
mov
pushf
movsbw
pop
mov
lea
pop
push
push
pushf
popl
jmp
call
pushl
pushf
mov
mov
call
jmp
shl
movzbl
clc
test
add
pusha
mov
mov
pushl
inc
call
add
pushf
call
pushf
lea
pusha
not
mov
pusha
jmp
rol
test
sub
mov
sbb
test
setle
mov
clc
test
sub
call
pushf
mov
mov
pushf
push
lea
jmp
pushf
mov
mov
lea
jnp
pushf
mov
push
pushf
jmp
sub
pushf
call
pushl
popl
pushf
lea
jmp
sar
dec
btr
jmp
pusha
push
mov
jmp
cmc
add
mov
dec
add
pushf
pusha
mov
mov
mov
pusha
mov
pushf
lea
jmp
bsf
shld
lea
mov
shld
mov
cmc
shl
setnp
dec
mov
pushf
cmc
add
test
stc
pushf
call
mov
pusha
call
jmp
jmp
mov
movw
pushf
pushf
pushl
ret
pushf
movw
pusha
mov
pushf
jmp
pushf
mov
jmp
pushf
call
call
stc
stc
test
add
pushf
pushl
push
lea
jmp
pusha
pushf
popl
mov
pushl
popl
pushf
lea
jmp
push
pusha
pop
mov
pop
bswap
lea
cld
jmp
mov
push
jmp
pushf
popl
movb
jmp
stc
call
jmp
mov
jmp
pusha
movb
call
movb
inc
cmp
clc
pushf
bswap
sub
jle
push
mov
add
call
add
movb
pushf
movl
pushf
lea
jmp
aad
shld
btc
sar
mov
pusha
add
jmp
push
call
pushf
pushl
popl
movb
mov
mov
lea
jmp
push
mov
push
movb
lea
pushf
pushf
lea
jmp
xchg
mov
btr
lea
mov
inc
and
jb
sar
mov
stc
pushf
test
pushf
add
mov
cmp
add
jge
pushf
shrd
lea
jp
push
pushl
push
mov
call
call
pushf
popl
shrd
movl
pushl
popl
bsr
shl
push
cmc
mov
rol
bt
and
push
not
btr
add
add
add
shl
dec
btr
clc
xor
and
cmp
ror
mov
btc
and
or
sub
sub
btc
rcr
mov
xchg
movzbw
cmc
mov
mov
shld
add
rol
mov
seto
test
sar
stc
xor
bswap
mov
pusha
pushf
dec
pushl
add
bswap
shrd
sets
btr
not
pop
push
bt
dec
sub
clc
test
inc
xor
add
rcl
movzbl
lea
shld
add
mov
clc
clc
cmc
bswap
pushf
cmc
cmp
add
call
stc
not
test
jmp
mov
pushf
movb
pushf
mov
xchg
pushf
not
not
movsbl
mov
movsbw
pushf
jmp
jmp
xor
xor
mov
mov
adc
push
sbb
add
push
not
not
mov
call
mov
jmp
pushf
popl
movsbw
clc
pushl
popl
inc
movzbw
mov
and
movl
and
bsr
mov
test
test
cmp
jmp
pusha
push
xchg
movzbw
mov
movsbw
movsbw
mov
xchg
mov
jmp
adc
mov
bsf
sbb
mov
neg
shrd
sub
shl
mov
cmp
cmp
clc
add
jmp
shl
movzbl
bswap
shrd
add
inc
push
pushf
call
push
mov
pusha
call
pushl
movl
call
call
test
pop
add
pop
push
and
jle
jbe
js
pop
push
pop
stos
jecxz
add
inc
inc
sti
aaa
cwtl
lcall
or
push
jp
sub
mov
jmp
cltd
cmpsb
aam
fstl
in
movsl
hlt
pushf
add
ljmp
lds
and
scas
in
cmp
dec
adcl
jg
or
stos
jae
or
jl
sbb
int3
popf
cmc
mov
jbe
inc
xchg
les
push
pop
test
out
subl
pushl
lcall
test
pop
aad
aad
dec
add
jae
je
jmp
and
arpl
pop
push
jg
push
mov
fidivrl
mov
inc
and
mov
pushf
push
mov
mov
lea
jmp
jecxz
push
push
stos
jae
adc
dec
xor
sbb
and
dec
inc
addr16
adc
leave
insb
insl
inc
stos
jl
rorb
jl
mov
xchg
test
test
add
mov
dec
outsl
scas
pop
xchg
and
mov
cltd
mov
pop
data16
imul
in
sbb
pop
sub
outsb
mov
mov
jecxz
je
jae
addr16
add
push
jae
push
cmp
add
add
outsb
ret
stos
fwait
orb
iret
sahf
mov
addl
xchg
lcall
sti
leave
clc
or
out
adc
int
into
enter
pop
sub
inc
dec
push
pop
push
call
pushf
movl
call
loopne
mov
push
and
fsubl
sub
or
ljmp
sti
cmp
jnp
sub
dec
jge
sbb
pop
daa
das
add
sbb
push
jnp
sti
mov
inc
mov
stos
test
xchg
mov
xchg
enter
in
push
add
jmp
push
movl
pushf
lea
jmp
push
jmp
call
je
out
adc
jae
inc
jnp
and
ss
push
dec
pop
jns
inc
das
fldenv
cltd
cli
mov
movsb
sbb
or
out
mov
or
mov
and
in
and
sub
mov
dec
shll
out
fcmovne
and
imul
sbb
es
fs
adc
fcompl
lods
bound
xor
inc
jmp
mov
rolb
lcall
test
fwait
or
pushf
pushf
movl
jmp
movl
mov
pushf
lea
jmp
out
es
jae
sbb
cmp
cmp
add
mov
sbb
lods
mov
mov
repnz
lret
shlb
mov
sub
xchg
and
push
mov
mov
xchg
jmp
es
and
xchg
xchg
xchg
cmpsb
mov
xor
dec
cwtl
fs
mov
lods
pop
in
fnstsw
xor
pop
pushf
shl
cmc
nop
rol
rcr
fld
xchg
mov
cld
mov
xchg
ljmp
test
into
rcr
loope
stos
inc
dec
mov
cld
rcll
add
add
xlat
cmp
movl
pushl
pusha
push
pushl
lea
jmp
cld
fcompl
stos
jae
cli
idivl
ret
out
into
inc
ljmp
ljmp
and
or
ja
xchg
cmp
dec
adc
js
sub
cmp
imul
popa
icebp
mov
push
movl
pushf
pushf
pushl
push
lea
jmp
push
movl
pusha
push
movw
pushf
lea
jmp
pusha
movb
movl
movw
movl
push
pushf
pushf
lea
jmp
cmp
adc
stos
jae
add
inc
jnp
sbb
and
pop
and
adc
js
rcr
daa
leave
mov
mov
cmp
stos
clc
dec
xor
outsb
imul
dec
xchg
pushf
jmp
pusha
movl
mov
movw
push
lea
jmp
call
call
movl
pushf
pushf
pushl
lea
jmp
call
pushf
movl
pushf
pushf
movl
movb
pushl
push
mov
lea
jmp
js
pusha
movl
call
movl
push
call
call
movw
pusha
movl
push
lea
jmp
and
aam
stos
jae
push
inc
outsl
dec
or
push
pop
add
das
sub
sub
mov
cs
cltd
cmpsb
loop
lods
test
or
pop
adc
fisttpll
add
sbb
and
adc
aaa
and
push
jne
pusha
fbstp
es
pushf
movl
push
lea
jmp
pushf
movl
jmp
adc
dec
sbb
push
jne
or
pop
ja
shlb
data16
cmp
cltd
sbb
arpl
pop
add
cmp
adc
xor
and
add
jbe
push
push
push
outsb
jg
data16
push
push
in
dec
add
pop
divb
movsb
add
pop
and
stc
loop
insl
xor
push
insb
lret
imul
sub
repz
dec
inc
push
mov
inc
js
jnp
xor
xor
sub
sbb
inc
sbb
dec
aas
xor
add
add
mov
mov
lahf
cmpsb
shr
shl
jae
aad
leave
mov
ss
js
xor
pop
push
xlat
mov
movsb
stc
mov
mov
loop
pop
outsb
imul
push
sub
add
pop
adc
pop
jge
popa
xor
sub
mov
cmp
ja
dec
jnp
mov
inc
mov
js
dec
stos
popa
mov
mov
repz
push
lock
std
std
xchg
xchg
imul
ja
xor
and
or
ss
daa
out
sub
jge
pop
in
call
mov
add
jmp
and
movl
jno
hlt
inc
push
std
repz
xchg
push
test
test
pusha
in
mov
lret
nop
enter
fisttpl
xor
call
call
adc
cltd
rsm
jae
lods
xchg
mov
test
add
inc
dec
fldl
jmp
adc
or
inc
sub
aas
pushw
popa
jne
shll
or
dec
mov
mov
test
in
hlt
xchg
insl
pusha
movl
push
movl
mov
pusha
lea
jmp
jmp
push
movl
call
push
call
lea
scas
div
lahf
repz
add
loop
push
adc
in
insl
mov
testb
xchg
subl
ljmp
ret
cli
mov
ljmp
mov
push
outsl
add
inc
movb
pushf
pushf
movl
pushl
pusha
lea
jmp
imul
push
stos
jae
lods
test
dec
sbb
push
popf
mov
dec
add
out
pop
mov
aam
movsb
popf
lods
mov
mov
xchg
enter
gs
sbb
and
push
lret
push
stos
jae
nop
lea
icebp
lods
rcrl
cmpsb
xchg
scas
les
xlat
jb
mov
je
mov
xchg
dec
stos
movb
lds
aad
pushf
movl
pushf
pushf
jmp
pushf
pushf
movl
pusha
push
push
push
lea
jmp
jmp
pushf
pusha
call
inc
insl
adc
stos
jae
lock
int3
cltd
les
in
in
out
bnd
ljmp
jp
jno
fistl
shr
push
mov
call
leave
nop
call
or
aad
mov
daa
outsb
push
mov
fidivrs
int
cmp
mov
pop
xchg
or
inc
jl
add
jge
stc
mov
sbb
pushf
movsb
jne
scas
sarl
jmp
mov
mov
fmuls
xchg
jmp
je
push
shlb
cmp
cmpsl
addl
xor
jb
xchg
scas
addl
jb
push
test
and
dec
stos
mov
loopne
mov
hlt
jecxz
repz
inc
and
mov
addr16
call
dec
jp
or
jae
jo
dec
dec
push
js
test
jle
inc
outsb
mov
adc
mov
loop
lret
notl
push
repnz
xchg
loopne
in
and
fdivrl
cmp
mov
lahf
pop
inc
add
inc
ret
loopne
fmuls
call
xor
pushf
push
pushl
movl
pushf
push
lea
jmp
mov
jae
sbb
and
adc
inc
adc
pop
cli
pop
stos
arpl
in
or
pusha
mov
leave
xchg
mov
add
outsl
testb
inc
pusha
cmp
inc
jne
gs
push
jns
sub
jbe
pcmpgtb
mov
movb
movl
pushf
movl
pusha
lea
jmp
xor
fisttps
stos
jae
mov
jmp
fsub
mov
pop
mov
xchg
cld
dec
xor
insb
and
icebp
or
sbb
xor
data16
sbb
push
jle
inc
insb
jne
insl
sub
jmp
sbb
dec
xor
lahf
jle
lock
sub
mov
outsb
or
xor
loop
fiaddl
mov
mov
gs
cmp
cmp
dec
dec
or
lock
in
std
lcall
or
fwait
mov
pop
andb
cli
stos
lcall
mov
adc
nop
pop
out
aaa
daa
scas
lahf
xchg
mov
mov
jne
pop
jno
pop
or
cmc
in
std
push
arpl
jecxz
lcall
fldl
addr16
das
xor
test
push
jge
ds
xchg
sarb
enter
adc
mov
mov
adcb
sbb
jle
popf
sub
imul
rolb
std
pop
js
jno
pop
xor
pop
add
sahf
stos
fstpl
jns
push
bound
sbb
jns
arpl
xchg
mov
in
sbb
mov
xorb
lds
pop
sbb
cltd
or
lods
in
test
incl
xchg
or
mov
mov
push
and
mov
add
inc
push
add
pop
add
hlt
call
mov
out
subl
clc
orl
jae
mov
jmp
mov
mov
inc
iret
call
in
xlat
mov
fdiv
xchg
mov
stc
clc
flds
shrb
cltd
mov
sbb
lock
in
push
jle
scas
outsb
dec
jne
in
xlat
shlb
call
cmpsl
loop
lcall
mov
gs
sbb
lea
data16
pop
cs
jl
add
pop
pop
and
js
or
mov
dec
mov
dec
in
or
lahf
rcrb
dec
or
daa
adc
mov
fsts
stos
lret
and
popa
inc
sbb
movb
jno
sarb
xchg
pop
es
gs
aas
push
sub
imul
pop
test
jmp
pusha
xor
push
pushf
xchg
push
push
pop
xchg
mov
jbe
dec
jl
js
xor
pop
jecxz
mov
call
push
test
stos
xchg
call
push
pushf
outsl
mov
inc
pop
and
or
push
aas
push
ss
dec
vshufps
outsb
adc
cltd
stos
ret
jmp
pop
fbstp
movsb
mov
mov
mov
jmp
out
mov
inc
and
add
in
inc
dec
dec
ja
pop
and
jl
push
wrmsr
jg
pop
mov
adc
jecxz
in
fidivrl
sub
and
and
sbb
dec
cld
mov
pop
push
pushf
add
lds
mov
adc
lods
mov
icebp
mov
aaa
sahf
jp
cmp
repz
jp
imul
push
cmp
or
sub
jo
or
mov
mov
scas
arpl
pushf
fistpl
insl
jns
leave
shll
out
pop
cmp
lds
lahf
mov
bound
arpl
movsl
das
rcrb
jmp
dec
jo
jl
lods
int
in
int
mov
int3
loopne
inc
cmp
ds
in
je
xchg
sub
inc
sub
inc
pop
xor
push
outsb
lods
push
adc
into
outsl
sub
pop
push
movl
call
mov
jae
mov
adc
cmp
lods
cmp
sbb
cmp
or
dec
and
pop
pop
sub
rcr
xchg
mov
xchg
cmpsl
test
mov
cld
vhsubpd
jl
adc
push
and
outsl
pop
insb
imul
mov
ret
js
pop
insb
inc
push
cld
cmp
lods
lahf
mov
xchg
or
pop
sub
sub
cs
adc
sbb
adc
out
cmpsl
pushf
movl
pushf
lea
jmp
lret
pop
stos
jae
cwtl
in
repz
into
lret
lret
add
into
lret
lcall
sub
jbe
inc
and
dec
push
jl
ja
insl
or
out
cmp
inc
aad
out
fldl
xor
pop
xchg
jb
rorb
cmp
jo
or
daa
cmp
ja
lods
aad
mov
dec
ss
push
call
aas
pop
fiadds
stos
jae
push
add
push
imul
test
dec
pop
jmp
clc
xchg
test
cmp
sbb
mov
mov
dec
das
pop
jp
inc
inc
clc
stc
icebp
stc
push
shl
mov
mov
sahf
movsl
sub
and
ds
xor
add
cmp
jae
rsqrtps
jg
pop
push
add
mov
leave
cwtl
loope
xor
cwtl
pushf
rcl
shl
aas
push
cmp
shlb
loopne
mov
or
pop
mov
js
or
mov
and
insb
aaa
xor
xchg
push
dec
pop
jp
gs
inc
ja
hlt
adc
mov
sub
adc
adc
aas
pop
inc
xlat
fwait
pop
and
ret
mov
mov
mov
add
std
pop
pop
sub
push
stos
jae
enter
enter
xchg
int
fiadds
insb
push
jb
pop
sar
std
cmc
mov
cwtl
sbb
inc
inc
dec
inc
jnp
inc
lds
cmpsl
outsb
enter
sahf
shll
fldcw
xor
add
jmp
js
xor
cmp
pop
inc
mov
loopne
mov
hlt
loopne
push
fistps
push
mov
xor
cmp
pop
add
je
call
cmc
add
dec
mov
jg
mov
rclb
movsb
adc
in
pop
insb
jmp
pop
nop
out
fcomi
lret
push
call
ret
pop
das
push
cmp
fdivr
loope
add
jle
dec
jne
dec
cmp
sti
xor
ss
mov
jae
into
lret
out
mov
pop
jns
lret
sbb
aad
lock
dec
shrb
ss
push
inc
dec
lods
insb
mov
cltd
int3
fwait
ret
mov
scas
mov
cmpsb
aam
out
xor
lcall
sub
cs
cmp
cmp
test
fwait
adc
orb
call
cmpsl
mov
stos
mov
mov
stos
jp
xor
clc
cmp
sbb
ret
mov
clc
push
mov
sub
jne
pop
insb
push
xor
cmp
ret
ret
scas
test
xchg
jge
adc
lret
ret
shr
jmp
mov
stos
sub
push
push
imul
stos
jae
out
xor
mov
in
iret
push
push
enter
mov
cld
mov
xor
pop
xor
push
xor
sub
sub
pusha
ja
sub
dec
fwait
aad
adc
pushf
push
add
mov
test
mov
mov
xor
jno
and
mov
inc
popf
mov
test
movsl
ds
jp
push
push
or
aaa
adc
out
xor
in
pop
adc
jbe
inc
and
popf
pandn
lods
loop
inc
inc
and
push
lods
hlt
jge
add
in
pushf
mov
pushl
lea
jmp
push
movl
mov
call
daa
push
add
jae
xchg
ret
fimull
cltd
lods
stos
xchg
push
push
or
loopne
jg
dec
dec
xor
cwtl
leave
test
mov
mov
mov
cmpsb
arpl
sbb
jnp
sbb
dec
call
mov
adc
jno
and
push
js
and
adc
jae
rdpmc
xchg
test
jne
push
call
lahf
xchg
push
add
int
loope
mov
call
add
or
pop
enter
cmovo
push
aaa
add
inc
and
insb
add
mov
and
loope
add
es
in
add
js
je
fdivrs
lock
sbb
and
sub
cmp
cmp
adc
pop
xor
mov
or
or
dec
das
push
fneni(8087
mov
ds
xchg
arpl
out
lret
lods
repz
hlt
roll
cmp
les
add
jmp
movl
pushf
pushf
movl
pushf
pusha
pushf
lea
jmp
in
nop
add
mov
out
rolb
addr16
push
jo
inc
movsl
pushf
imul
pop
aaa
loopne
out
or
pop
sbb
cmp
jnp
pop
and
sub
sbb
pusha
jecxz
addb
xlat
xchg
push
add
pop
das
push
inc
pop
push
cmp
sbb
push
fs
pop
mov
negl
jno
pop
fstps
inc
push
dec
dec
imul
sub
pop
iret
aad
pushf
pop
cs
or
call
stos
shl
std
aad
xchg
fwait
jl
jge
push
jg
add
aas
or
dec
arpl
xchg
cwtl
fwait
aaa
es
bound
ss
stos
jae
daa
jp
jb
jbe
jbe
jb
sub
pop
adc
adc
into
rclb
subb
xor
jbe,pn
push
aas
and
test
mov
movsb
sbb
mov
jmp
adc
popf
lcall
jae
clc
mov
imul
sub
push
in
insl
xlat
or
dec
adc
add
adc
pop
addr16
push
inc
movsb
jmp
dec
sbb
inc
imul
mov
int3
mov
imul
inc
pusha
pop
inc
cmp
jo
push
pop
mov
jecxz
fnstsw
mov
jb
add
push
lea
je
pusha
movl
pusha
movb
jmp
push
lock
std
std
mov
out
ret
jp
add
int
das
mov
mov
pop
sub
xor
testl
fxam
inc
push
pusha
aam
pop
lret
add
jecxz
es
test
mov
lahf
mov
jbe
je
push
out
in
xchg
push
cmpsb
stos
and
cwtl
jne
add
pusha
enter
aam
repz
add
mov
in
mov
jmp
das
scas
xchg
ljmp
movl
jmp
pusha
movl
movl
call
push
movb
lea
jno
pusha
movl
movw
pushl
pusha
pushf
movl
push
pushf
lea
jmp
push
pusha
lea
jmp
jle
push
movl
push
pusha
pushl
movl
mov
mov
lea
jmp
pusha
pushl
movl
push
movw
jmp
movb
movl
movw
pushf
lea
jmp
lahf
rcll
bound
xor
test
aad
fwait
daa
push
ss
mov
pop
lea
scas
mov
mov
cmp
sub
lds
fldt
fstpl
ja
inc
push
ja
arpl
inc
pop
jnp
sti
pop
xchg
in
lds
add
inc
fs
test
push
or
push
pop
inc
outsl
imul
inc
call
pop
data16
arpl
push
sbb
adc
insb
add
movsl
out
mov
pop
and
bswap
inc
jb
andl
das
push
and
bound
add
mov
add
lret
cmpsl
xchg
and
into
sti
mov
pop
pop
sub
mov
cmpl
dec
xor
ss
mov
push
test
scas
inc
sbb
push
jne
jno
sbb
pushf
pushl
pusha
movl
pushf
movl
pushf
movb
movb
pushf
lea
jmp
call
jmp
jae
int3
stc
lock
mov
clc
jl
inc
inc
or
mov
cltd
xchg
mov
in
xor
lods
mov
js
mov
pop
stos
xchg
aam
mov
mov
stos
mov
dec
addr16
sub
aas
je
inc
mov
and
jp
push
or
js
jecxz
fimull
add
int
ret
ss
lods
cmp
stos
or
cwtl
stc
rol
ftst
xchg
cmpsl
sahf
das
xlat
inc
das
or
xor
adc
inc
add
mov
pop
in
mov
fadd
mov
jecxz
dec
and
add
push
sub
movl
pushl
pushf
lea
jmp
movl
push
lea
jns
pusha
pushf
movl
pusha
pushl
mov
mov
lea
jmp
mov
aaa
std
test
add
adc
daa
sbb
bound
and
mov
mov
dec
test
mov
test
loopne
mov
lea
je
pusha
movl
movb
pusha
lea
jmp
inc
inc
in
test
ret
stos
xchg
loop
in
fstpt
jmp
leave
in
out
pop
mov
bound
ja
addr16
daa
sbb
bound
mov
call
mov
cs
es
xor
dec
dec
sub
scas
cld
test
mov
scas
lcall
lock
mov
cltd
stos
mov
sbb
mov
mov
cld
adc
movsl
push
iret
cmp
add
xor
cmpsl
loope
ljmp
inc
pop
xchg
lods
cmpsl
mov
mov
andl
add
push
orl
jne
inc
mov
shr
cmpsl
movsb
sar
mov
cld
into
cmp
xor
cmp
mov
jle
std
jb
out
or
mov
adc
pop
icebp
test
loopne
lret
pop
xor
dec
jb
int3
movl
pushf
pushf
mov
lea
jmp
stc
xor
add
pop
sbb
cmp
cld
mov
fcoms
or
lods
xlat
jg
jns
pop
fisttpll
jecxz
icebp
lods
pop
and
cli
dec
ret
and
inc
push
dec
scas
inc
test
or
lods
jne
mov
iret
add
push
lock
jg
xchg
out
repnz
mov
adc
sbb
pop
divb
xor
popa
mov
dec
enter
mov
jecxz
and
jnp
inc
fcmovnbe
stc
dec
repz
jno
popf
xchg
pop
aas
std
sbb
sarb
or
pop
mov
movb
mov
cmpsb
popa
xchg
push
xlat
lods
and
mov
notl
repz
movl
push
pushf
pushf
lea
jmp
js
test
ret
mov
div
add
adc
sahf
ret
stos
rorb
dec
mov
fsub
mov
mov
cmpb
fwait
test
mov
cmp
pop
fwait
test
std
ret
mov
loop
scas
xchg
and
xchg
cmpsl
test
repnz
jge
test
mov
rcll
mov
vmread
jmp
ret
into
mov
faddp
int
pop
or
dec
xchg
popf
sbb
lods
mov
mov
xchg
loope
frstor
add
jae
pop
and
push
adc
sub
add
sahf
nop
int
adc
stc
pop
push
xor
pop
inc
xor
cmp
pop
sbb
imul
jmp
pop
cmp
cmpsb
repz
arpl
js
fs
mov
pop
inc
lret
test
mov
xchg
mov
mov
pmulhw
xchg
not
xchg
pop
pop
bt
fs
mov
mov
cmpb
ja
and
pop
push
mov
adc
dec
mov
movsl
ret
mov
mov
mov
pop
add
pop
dec
stos
out
aas
sub
jbe
inc
push
cmp
push
cmc
cmc
js
test
arpl
push
jae
jne
push
push
aam
push
sbb
and
pop
jnp
inc
lahf
xchg
fwait
scas
repnz
repnz
inc
outsb
out
mov
push
sub
dec
push
dec
xor
aad
or
dec
popa
ds
add
sbb
popa
int3
sahf
lods
frstor
mov
inc
and
scas
xor
adc
sbb
jecxz
fs
jmp
movb
pusha
movl
pushf
pushf
mov
lea
jmp
jne
pusha
mov
pushf
movl
lea
jge
push
movl
push
pusha
lea
jmp
push
lock
std
std
andb
ret
jno
cmp
frstor
push
pushf
mov
pop
push
ss
aad
cmp
jge
dec
in
clc
dec
inc
or
aam
pop
into
add
out
fsubl
movl
in
je
mulb
xchg
in
xchg
push
cmpsb
mov
adc
test
test
rcrb
enter
inc
movl
pushf
pusha
lea
jmp
aam
aaa
clc
test
or
mov
or
shl
aas
cmpsl
stos
test
out
ret
call
xchg
fnstenv
mov
sbb
orb
hlt
adc
and
or
cmp
cmp
inc
insb
cmp
and
test
cld
f2xm1
movsl
mov
pop
pop
or
out
inc
addl
dec
mul
ss
idiv
lret
pop
push
push
mov
sub
in
mov
cltd
mov
es
cmpsb
movsb
je
mov
cmp
cmp
xchg
sti
xor
cmc
mov
mov
mov
mov
arpl
lcall
das
adc
add
jge
adc
push
adc
or
xchg
sbb
out
mov
lea
jle
push
push
movl
pushf
lea
jmp
test
jae
mov
mov
iret
xchg
mov
jl
enter
inc
loopne
mov
adcl
hlt
pop
popa
inc
cmp
mov
idivl
mov
int3
lock
adc
mov
frstor
xor
push
pusha
movl
pusha
lea
jmp
movl
pushf
lea
jmp
mov
call
or
mov
test
pop
add
jb
jbe
push
and
dec
std
pop
lock
push
sub
pop
cld
jno
outsb
inc
jg
fmull
mov
pop
jp
push
push
xchg
jo
out
mov
mov
test
mov
xchg
or
mov
movsb
adc
enter
mov
or
mov
pop
sahf
mov
mov
jo
jbe
outsl
dec
inc
jnp
mov
scas
cmp
mov
mov
mov
mov
pop
lock
jp
and
sub
fwait
mov
fcomp
shl
mov
mov
ss
in
cmc
test
push
insl
push
pop
pop
push
push
push
outsl
push
aad
pop
lock
and
pop
cld
sub
jnp,pn
push
or
push
dec
xchg
popf
daa
push
pushf
leave
xchg
mov
mov
cwtl
mov
xchg
lret
add
mov
movl
call
pushf
movl
pushl
pushf
movb
pusha
lea
jmp
jmp
pushl
mov
movl
mov
pushf
movb
lea
jmp
in
outsl
cmc
test
mov
mov
push
push
pop
cmp
sahf
adc
aas
sub
in
in
sbb
inc
popa
cwtl
es
stc
das
sbb
push
sub
movsb
cs
ja,pn
cmp
cmp
or
push
add
mov
lods
roll
in
hlt
test
mov
xchg
iret
cmpsb
lahf
cwtl
cmpl
in
scas
je
pusha
pop
dec
stos
icebp
inc
in
imul
mov
xchg
in
pop
mov
fistpl
pushf
dec
out
and
mov
push
inc
mov
push
imul
push
dec
inc
shrb
and
cli
lret
adc
add
jp
fcoms
pop
or
mov
inc
out
xor
mov
in
aaa
jne
jg
dec
lret
loopne
mov
sbb
in
sbb
andb
or
jb
loopne
sbb
sbb
test
mov
orb
repnz
mov
mov
movsl
ret
jge
leave
mov
sbb
arpl
gs
and
mov
sub
mov
hlt
xlat
test
xchg
movl
pushf
lea
jmp
and
test
mov
inc
mov
adc
cmp
fiaddl
sub
jge
mov
mov
cmp
dec
test
mov
in
xchg
xchg
add
mov
test
mov
mov
cwtl
lods
fiaddl
out
and
sbb
aas
dec
gs
sub
push
xor
mov
lds
and
aas
es
movl
pushf
pushl
movl
push
movw
lea
jmp
lcall
cwtl
test
loopne
mov
xchg
jnp
icebp
xchg
lret
rcrl
movb
pushf
movl
pushf
call
push
push
push
pushf
movl
movb
push
lea
jmp
gs
repnz
xchg
and
scas
out
mov
mov
mov
nop
dec
loopne
repz
xchg
mov
mov
shl
cltd
roll
xchg
lcall
or
fs
in
xor
dec
dec
insb
cmp
adc
andl
push
jmp
stc
cmpsb
scas
movsb
adc
or
in
xchg
ljmp
movsl
lock
xchg
int3
xchg
fnsetpm(287
cwtl
sti
mov
jge
in
nop
repnz
data16
enter
lock
push
test
clc
and
mov
mov
stos
mov
mov
fwait
mov
fstps
notl
shll
dec
add
dec
sub
in
xchg
sahf
faddl
stos
xchg
filds
mov
xchg
idivb
mov
movl
pushl
pushf
pushf
movb
lea
jmp
movl
push
movl
pushf
push
pushf
lea
jmp
outsl
pop
xchg
icebp
test
mov
mov
cmpsb
mov
imul
clc
enter
xchg
push
in
rcrb
scas
out
popf
fadds
mov
push
or
in
xorl
enter
int3
mov
leave
jl
test
fcmovnu
xlat
subb
fcmovnbe
stos
repz
jg
mov
xchg
cmp
div
mov
shl
fadd
test
outsb
sub
and
inc
mov
add
movsb
pop
call
scas
xchg
adc
je
pop
jne
sbb
xchg
xchg
xlat
mov
icebp
icebp
test
out
stos
inc
fstpt
lea
mov
mov
mov
add
mov
xor
or
jbe
adc
dec
adc
int3
lock
add
jp
jp
push
inc
aas
js
xchg
sahf
xlat
ret
jmp
aad
fldt
aaa
aam
xchg
sahf
movsb
enter
pop
je
adc
pusha
push
and
push
push
movl
pusha
lea
jo
pushf
push
movl
pusha
lea
jmp
in
xchg
lock
jne
xor
dec
imul
jnp
mov
je
sbb
outsl
leave
mov
xacquire
test
insb
inc
inc
shrl
stos
test
push
loopne
ret
cli
fsts
xchg
mov
sub
sbb
xor
test
jmp
xchg
ret
mov
test
fsubs
aad
pop
out
daa
sub
adc
and
outsb
mov
jnp
push
lcall
mov
push
add
pop
cmp
add
in
mov
fsubr
nop
ljmp
or
cmp
sub
movl
call
daa
pop
sahf
out
test
icebp
sbb
rcrb
mov
insb
add
int
subl
xchg
xchg
inc
into
lods
or
cli
cld
fstpl
fcmovbe
mov
pop
enter
out
iret
xchg
add
sub
out
call
xchg
xchg
rclb
je
or
inc
and
xor
ret
xor
mov
pusha
movl
pushl
movw
pushl
pushf
lea
jmp
popf
popf
and
test
in
loopne
mov
std
lds
and
sub
mov
mov
in
xchg
enter
stos
repnz
sti
in
pop
mov
mov
hlt
mov
out
insb
sub
sahf
sbb
test
clc
in
lods
popf
subb
loope
das
in
testb
sbb
xchg
pop
loop
clc
rol
mov
in
xor
fdivrs
and
test
aaa
ss
dec
arpl
sbb
movsb
movsl
cli
xchg
jp
push
push
and
sbb
sbb
push
mov
push
xchg
mov
sub
sub
fs
push
popf
aam
pop
fs
sub
mov
dec
sub
jno
xor
cmp
out
in
sbb
jae
fucomi
lahf
lret
repz
iret
cli
icebp
dec
xchg
ljmp
sub
xchg
or
mov
sbb
outsl
rolb
xor
lods
xlat
loop
hlt
mov
jb
repnz
pop
pop
xor
add
pop
adc
dec
addr16
or
or
xor
fstpt
adc
inc
and
mov
cmp
push
push
lea
jmp
movl
pushf
movb
pushf
lea
jmp
push
jmp
call
call
pushf
push
push
movl
pusha
pushf
jmp
pushf
pushf
movl
mov
movl
push
mov
pushf
lea
jmp
stos
mov
inc
add
xor
cmp
pop
jno
popf
fiaddl
add
jp
bound
sub
pop
xchg
mov
cs
cmp
inc
sarl
pop
push
adc
sub
push
cld
pop
xor
mov
jb
in
test
push
jne
add
push
sbb
cmc
je
xor
xchg
dec
inc
inc
pop
add
ljmp
bound
lods
nop
adc
insb
push
pusha
popa
push
inc
push
cmp
or
inc
cmp
inc
mov
xor
sub
cmpsl
clc
fwait
mov
in
pop
fs
and
test
push
jmp
pushf
movl
call
mov
sub
pusha
gs
test
add
jecxz
cld
and
push
lods
movsl
nop
xchg
cmp
mov
cwtl
push
es
scas
dec
cmp
push
leave
and
pop
add
enter
aas
neg
clc
lret
pushf
sti
clc
fnstsw
out
incl
das
sbbb
cmp
inc
and
icebp
mov
mov
add
jb
ljmp
repz
jae
mov
scas
adc
mov
lods
xchg
andb
push
mov
inc
push
mov
aas
xchg
lds
clc
loop
mov
mov
or
sbb
adc
popa
cmpsb
outsb
andl
ret
mov
pusha
jae
rclb
xchg
addb
lods
scas
fldl
sbb
pop
add
movl
pushf
mov
pushf
lea
jmp
movsb
lods
push
jmp
jae
push
jno
sbb
sub
adc
adc
gs
movl
mov
cmp
outsl
jae
fistpll
ljmp
clc
imul
xor
bound
add
insl
add
mov
mov
or
in
jno
pusha
lea
jmp
movl
call
aas
jae
ljmp
pop
dec
or
xor
sub
imul
mov
call
cltd
hlt
leave
fcomps
push
mov
popa
inc
jnp
pusha
xor
aam
pop
div
subl
sahf
mov
mov
lods
incl
push
sbb
das
and
jge
dec
js
mov
cld
and
sbb
ljmp
inc
inc
add
jp
sub
aad
testb
push
hlt
fisttpll
std
test
in
or
icebp
pop
sub
sbb
jnp
pop
popf
test
push
mov
jns
pop
xor
ret
xchg
adc
les
and
jp
je
xchg
push
sarl
cmp
push
or
push
push
movsl
int3
loopne
push
and
scas
scas
dec
ljmp
loopne
mov
or
xlat
and
add
inc
aad
iret
call
cli
das
out
dec
or
adc
xor
or
outsb
sbb
cmp
dec
imul
loopne
mov
mov
mov
mov
adcb
jb
ss
lock
fwait
pop
xor
lock
xor
mulps
mov
test
mov
mov
aam
nop
mov
mov
loopne
jp
jo
xor
movl
pusha
movl
pushf
pushf
lea
jmp
std
mov
jae
jecxz
fisttpl
push
fnstsw
lret
sbb
or
js
jb
xlat
flds
out
aam
fdivp
stos
inc
jle
hlt
dec
je
jne
xor
hlt
push
cmp
getsec
pusha
iret
or
or
mov
in
ret
mov
test
loope
or
movsb
in
jmp
mov
xor
gs
sti
popf
mov
mov
jno
pop
and
or
lock
mov
cmp
ja
cmp
imul
mov
cltd
pop
and
or
test
jmp
cmpsb
in
std
mov
inc
push
dec
xor
cmp
mov
or
outsb
add
arpl
add
imul
xchg
into
mov
aas
lret
sub
movsb
sbb
es
bound
push
movl
pusha
call
push
pushf
movl
mov
jmp
clc
int3
ja
test
mov
out
cli
add
cmp
clc
test
inc
test
mov
jns
jg
insl
cmp
pop
mov
sbb
and
dec
jle
jge
leave
mov
repnz
add
mov
les
mov
dec
or
cmp
cmp
and
jle
and
call
jmp
iret
into
mov
mov
arpl
stos
xorl
dec
mov
popa
sti
xchg
sahf
push
stos
int3
adc
bound
push
cmp
popf
out
jae
nop
mov
mov
lock
mov
cmp
sub
cmp
mov
mov
jae
sub
sub
push
jmp
add
es
push
push
jp
and
mov
fistps
test
jl
xor
sub
fs
js
or
inc
inc
data16
aam
movsb
mov
call
mov
xor
mov
lods
rolb
add
or
das
xor
inc
sbb
sbb
sub
sbb
outsl
push
out
jae
or
dec
adc
jne
pop
cmp
ss
dec
or
sbb
je
pop
hlt
add
dec
inc
inc
leave
xor
mov
mov
mov
popa
lret
lcall
ficomps
test
inc
pop
cmp
ret
sbb
push
jle
or
sub
das
das
xchg
dec
loope
adc
lods
shrl
cmp
jmp
sub
inc
add
sbb
loop
mov
cmp
test
cltd
fadd
lds
scas
into
jle
pop
in
push
mov
out
inc
in
fcmovnbe
sti
cmpsl
testb
jns
lea
in
pushl
bound
sahf
and
mov
sub
fnsave
scas
mov
fs
lds
pop
adc
out
insl
inc
cmp
push
popa
push
xor
jo
leave
sub
incb
add
es
mov
xchg
pushf
mov
cmpsl
call
push
call
cltd
sbb
or
test
sbb
push
add
data16
pushf
inc
stos
mov
cld
add
sub
ja
sub
jae
push
push
sub
sbb
cmp
xchg
mov
mov
jge
aaa
mov
xor
push
out
shl
mov
mov
rcl
lds
test
adc
aaa
inc
fwait
dec
dec
adc
push
add
addr16
jo
ss
loopne
mull
clc
out
enter
mov
test
icebp
subb
mov
dec
mov
push
jle
inc
inc
push
imull
xlat
dec
stos
mov
dec
cwtl
xor
test
jno
adc
or
mov
test
jne
adc
cmp
jge
pop
addr16
push
insl
push
lret
push
out
mov
xchg
inc
push
mov
std
dec
mov
mov
push
dec
mov
clc
jecxz
dec
push
or
pop
or
inc
inc
or
sbb
add
inc
and
push
shll
mov
mov
pusha
lea
jmp
pusha
jmp
push
call
cmp
mov
test
ds
push
push
jbe
addr16
in
nop
and
in
adc
xchg
stc
and
inc
sbb
ss
add
pop
gs
es
cmp
xchg
pop
adc
orl
push
cmc
xchg
cld
ja
mov
mov
ftst
stc
out
jmp
mov
loop
scas
xor
push
mov
jg
daa
cs
jae
add
pop
jbe
cmp
mov
cmc
pop
pop
sub
jns
add
jns
or
arpl
divb
fistl
sub
mov
jns
jl
jbe
jae
aam
adc
adc
sub
pop
mov
cs
push
push
push
shll
cmp
mov
mov
lock
aas
xor
jne
xor
pop
push
or
cmp
and
pop
pushf
pushf
movl
call
push
pusha
movl
pusha
movb
push
mov
lea
jmp
call
jmp
movw
call
pushl
jmp
pushf
inc
add
test
jge
sub
push
aam
and
mulb
aas
leave
jae
or
call
std
mov
cs
pop
push
add
mov
dec
nop
movsb
lret
push
dec
stos
inc
mov
cmp
sbb
push
inc
sub
rorl
add
pushf
movl
pushf
push
movb
lea
jmp
pusha
pusha
movl
mov
pushl
movl
pushf
movb
lea
jmp
outsb
push
loop
jae
movsb
icebp
mov
popf
pushf
test
mov
cmp
dec
jge
pop
gs
add
xchg
mov
mov
lret
mov
pusha
gs
das
iret
std
adc
cmc
stos
xchg
out
cli
cltd
scas
ret
enter
rcrl
call
rcrl
test
leave
mov
aam
hlt
rcl
cmc
clc
movsl
push
sbb
dec
jno
and
push
out
fstps
xchg
adc
int3
movsb
add
mov
or
add
cmpsl
stc
cmp
adc
push
adc
xor
sbb
xor
or
pop
sbb
xor
push
and
add
cld
dec
add
pusha
movb
movb
movl
pushl
lea
jmp
jmp
pushf
push
movb
mov
movl
pusha
movw
call
pop
outsb
aad
test
dec
inc
sbb
mov
adc
jle
jge
jl
mov
mov
sub
xor
daa
sub
xchg
dec
mov
or
xlat
lcall
or
add
pop
pop
jnp
stos
push
jmp
jnp
mov
inc
lea
dec
fs
movsl
nop
shl
mov
rcrl
pop
pop
push
cmc
or
pusha
out
push
xor
push
aad
mov
mov
mov
lahf
imul
repnz
rol
lret
mov
push
adc
mov
sub
cmc
into
test
mov
lret
loope
jae
sbb
dec
sbb
mov
test
sti
push
jnp
dec
inc
mov
mov
xchg
mov
lret
loop
ficoml
push
add
add
add
outsl
cmp
je
add
sbb
sbb
movl
mov
mov
pushf
pusha
lea
jmp
movl
push
movl
mov
push
mov
lea
jmp
sub
movsl
loopne
jae
les
add
or
dec
ja
jbe
int3
mov
pop
add
and
or
add
mov
test
scas
shr
jno
sub
add
scas
fucomi
jns
js
mov
cmpsl
push
push
push
sarl
xor
aad
mov
sub
lcall
iret
ds
fucomip
loopne
jne
mov
mov
out
popf
imul
pop
jbe
cmpsb
mov
jmp
popa
movsb
fcoml
sbb
imul
mov
std
imul
sbb
adc
rcrl
inc
mov
sub
adc
push
mov
and
sbb
pop
pop
push
gs
push
cmp
aad
mov
testl
xor
insl
dec
jl
cmp
mov
cmp
xchg
aas
inc
dec
lods
lahf
pushf
movsb
jmp
jae
mov
cmp
es
pop
inc
hlt
fwait
test
xchg
insl
mov
adc
insb
xchg
push
push
xorb
stos
out
insb
xor
pop
jecxz
jge
lcall
add
mov
pop
int3
loop
jmp
stos
pop
add
cmpsl
cli
xchg
leave
mov
mov
cmc
mov
loop
xor
add
and
mov
int
nop
xchg
jae
int3
clc
int
adc
pop
add
int
repz
out
fucomi
scas
cli
scas
ljmp
cmp
rol
cltd
out
mov
cli
aad
sub
inc
and
mov
pop
movl
pushf
lea
jmp
movl
call
fs
fisubrs
mov
ret
xor
pop
in
inc
mov
test
sub
xor
or
cmp
insb
jne
lret
sbb
ds
inc
mov
dec
subl
pop
inc
sti
xor
dec
fcomps
add
and
pop
cmpb
adc
mov
lahf
jb
enter
dec
pop
pop
add
pop
es
pusha
mov
pop
or
lret
or
xchg
notb
lods
out
out
mov
mov
sti
push
test
sldt
roll
sub
dec
adc
push
push
pop
dec
fidivrs
loope
push
imul
lds
nop
mov
mov
mov
stos
movsb
and
fists
std
mov
out
in
mov
mov
mov
mov
mov
loop
mov
cmpsb
fildl
leave
cmp
xor
inc
dec
dec
jle
loope
out
rcll
loopne
ss
inc
mov
mov
add
and
stos
cs
sti
test
mov
aam
xor
pushf
push
jmp
and
xchg
shr
les
daa
sub
arpl
jmp
aam
in
and
aam
fcomps
push
mov
pushf
xchg
shl
mov
mov
lret
testl
push
and
xor
sbb
dec
pop
mov
hlt
push
bound
arpl
out
lea
cmp
mov
rolb
xor
add
inc
subl
imul
hlt
and
or
mov
lret
loop
jne
push
lods
pop
popa
bound
rcrb
stc
fadds
es
sbb
dec
lock
pushf
lea
mov
daa
imul
sbb
inc
jne
loop
lds
mov
bnd
mov
xchg
push
inc
lahf
sarb
scas
fstpt
in
cli
jns
lods
inc
xchg
out
inc
push
outsl
lea
dec
fbstp
xlat
push
mov
fxch
in
jo
xor
mov
retw
jo
push
jle
xor
fnstcw
stos
push
xchg
in
mov
pop
loope
loopne
scas
xorl
mov
fwait
dec
fsubrl
cmp
adc
sub
lcall
jmp
bound
loop
loope
pop
push
inc
xchg
sti
lcall
loope
cli
out
pop
movsl
cmp
dec
sbb
add
callw
push
fsubrl
sub
jbe
mov
fcoml
jge
sub
or
scas
out
imul
lods
or
rorb
jo
sbb
aas
mov
outsl
jae
adc
mov
lret
loopne
cli
jb
lods
pop
das
inc
stos
data16
negl
addr16
jle
xor
jle
xor
sub
mov
bound
arpl
pop
xchg
cli
lret
shlb
ljmp
int
test
jb
fcoml
repnz
mov
outsl
push
mov
ret
sbb
jae
jmp
mov
add
dec
push
cwtl
rorb
pop
or
sbb
adc
push
data16
cs
into
je
leave
lock
lret
loope
cmc
sub
jae
pop
xor
sub
adc
cmp
rorb
mov
inc
stos
pop
push
pop
push
push
dec
and
and
jns
fs
out
fisubrl
dec
push
xor
outsl
addr16
add
pop
pop
jp
insb
xorl
gs
lret
dec
and
sub
inc
mov
jno
mov
mov
or
sub
mov
fs
jmp
ret
xchg
repz
ror
out
fwait
add
popf
shr
into
or
add
xor
xchg
or
int3
iret
cmp
add
adc
push
xlat
js
pop
mov
in
inc
cmp
sub
xchg
adc
dec
mov
out
jne
push
dec
sub
out
mov
inc
dec
xchg
ja
adc
out
adc
mov
pop
sbb
and
cmp
push
clc
mov
adc
cld
jmp
stc
lds
lahf
rolb
fwait
in
fldl2e
sub
add
fildl
cld
out
repz
adc
cmp
sbb
mov
bound
jle
aad
add
movb
mov
stos
data16
push
xlat
movsb
add
xlat
rcrl
mov
pusha
movl
call
dec
sub
fldcw
mov
fisttpll
push
cltd
cmpsl
cltd
test
ja,pt
data16
push
mov
mov
mov
neg
mov
stc
rcrb
rorb
pushf
mov
testl
cmpsb
inc
fldcw
call
hlt
mov
scas
mov
push
dec
push
jl
imul
push
test
cmpsl
cmpsb
stos
mov
xor
ret
fcom
mov
xlat
sbb
clc
fsubrs
daa
add
jae
sub
add
sbb
cmpsl
lahf
mov
jbe
sbb
aam
jecxz
dec
lcall
jnp
cmpsb
inc
sbb
sbb
and
push
push
sub
adc
inc
inc
out
lods
pop
jg
fdivr
xor
pushf
movl
mov
pushf
jmp
push
call
pusha
mov
pushf
jmp
xor
xchg
fsubrs
xor
aas
jp
inc
outsl
sub
dec
fs
clc
ret
adcb
sbb
add
push
jno
pop
int3
cmp
ds
mov
cmp
pop
push
dec
test
cmp
or
or
adc
cltd
mov
and
js
or
xor
stc
aaa
or
inc
xor
lock
leave
in
fdiv
push
scas
push
push
jno
cmp
jb
daa
aam
pop
pusha
sbb
jae
bound
scas
mov
push
rolb
flds
adc
cmp
sub
or
and
pop
pop
sub
pop
jle
jo
adc
jle
fst
test
adc
jne
push
xor
xor
jg
inc
loopne
jno
xor
movsl
add
ds
sbb
xor
or
insl
mov
xchg
test
pop
fmulp
call
sti
enter
addb
pushf
jmp
call
movl
pusha
movl
lea
jmp
fxam
pusha
xlat
test
dec
add
cmp
mov
ljmp
mov
jo
mov
mov
inc
aas
add
inc
cmp
sbb
mov
xlat
test
mov
out
sahf
lret
sar
cmpsb
fwait
loop
jnp
mov
movsb
and
mov
mov
leave
mov
mov
jmp
es
add
sub
icebp
stos
mov
pusha
lret
pusha
xor
push
sbb
xor
test
mov
sbb
arpl
add
inc
and
adc
ret
add
fsubrp
mov
inc
and
mov
ret
jns
decl
iret
test
pop
cmp
pop
outsl
mov
mov
cmpsl
out
xchg
iret
scas
xor
scas
cwtl
stc
lret
enter
sar
hlt
fucomi
les
mov
push
in
mov
sbbb
test
xor
movsb
sbb
ss
icebp
xchg
bound
repnz
mov
mov
test
fsubrs
mov
xchg
inc
dec
jne
sub
lea
mov
cmpsb
or
out
fwait
out
into
mov
push
inc
inc
mov
out
fstpl
mov
push
jge
in
into
push
hlt
sbb
adc
test
or
arpl
fsubrl
mov
lcall
jbe
aad
jae
pusha
popa
inc
adc
jb
push
outsb
push
mov
mov
and
xorb
mov
mov
xchg
mov
test
lcall
pop
mov
adc
inc
lds
roll
stc
enter
pop
lods
dec
lahf
jp
gs
pop
inc
dec
inc
inc
cmp
mov
sub
aad
jae
jne
sub
inc
pop
dec
dec
or
scas
xlat
sbb
stc
lret
in
movsb
stos
dec
lahf
mov
test
xchg
sub
popa
xor
cli
out
fsubrl
loop
lds
jecxz
addr16
mov
jnp
cmp
shlb
sub
aam
add
movaps
test
mov
xlat
loop
fdivl
dec
stos
out
out
js
rcl
test
pop
lods
xchg
call
lret
hlt
lret
mov
xor
or
adc
push
mov
adc
dec
stos
lret
jne
mov
hlt
popf
xchg
mov
mov
sti
int3
cmp
add
clc
cmp
pushf
and
sbb
mov
repz
ret
pushf
loopne
testl
push
pushf
movl
movw
lea
jmp
inc
inc
pmullw
mov
sbb
mov
lods
mov
jno
mov
fidivrs
into
sti
sarb
cmp
jg
call
mov
dec
dec
dec
lds
and
add
scas
adc
testl
dec
arpl
and
dec
gs
adc
addl
pusha
movl
call
jmp
push
lock
std
std
mov
xchg
ret
jge
pop
lcall
loope
mov
pop
or
pop
inc
cmp
js
in
cmp
jae
mov
pop
push
les
out
xlat
and
test
inc
sub
adc
push
mov
xchg
shr
xchg
push
data16
ss
or
jo
jmp
push
fadds
in
adc
add
lock
ljmp
out
jbe
jmp
jmp
push
jmp
pushl
movl
push
lea
jmp
movl
pushf
lea
jmp
pusha
mov
movl
call
call
xlat
jmp
shrl
xor
push
jne
adc
cmp
test
xor
xchg
or
pop
mov
mov
mov
add
inc
jo
stc
test
jle
pop
test
repz
cmp
add
icebp
jns
xor
arpl
or
inc
imul
jg
pop
adc
arpl
inc
xor
jbe
dec
lock
cmp
sbb
andl
out
lret
out
rcr
int3
inc
fnsave
or
jecxz
pop
or
push
outsb
inc
push
push
push
jo
mov
inc
cmp
push
sub
jne
inc
cmp
xchg
jbe
ljmp
cwtl
test
sbb
js
xchg
cs
mov
fstp
mov
int
cmc
fwait
stc
xor
adc
xchg
hlt
push
jnp
int3
sub
fwait
cld
mov
xlat
cmovnp
adc
mov
jnp
imul
sub
clc
and
xchg
adc
pushl
dec
test
mov
out
push
dec
mov
mov
push
test
out
loop
jp
cmpsb
dec
mov
or
and
and
and
sbb
and
shll
mov
loop
sub
orb
jnp
or
repz
inc
xchg
mov
std
sbb
pop
sub
leave
jle
aad
pop
sbb
mov
mov
stos
addr16
push
push
push
xlat
cmpsl
add
mov
inc
insb
add
vpavgw
icebp
jge
test
test
iret
xchg
lahf
xchg
xchg
lahf
loop
push
jb
in
ss
aas
jmp
adcb
sbb
add
mov
and
ficompl
dec
jnp
pop
sub
pop
add
push
imul
mov
lds
add
test
ret
adc
add
xor
push
call
pusha
pushf
call
pushf
movsb
inc
shrl
xor
adc
js
jl
or
mov
scas
jns
mov
clc
fldz
cmp
jle
sub
mov
movl
xchg
test
lret
loop
iret
out
out
cmp
sub
push
call
jnp
je
pop
inc
jb
jb
pop
inc
cs
inc
xchg
sub
test
fcomps
mov
add
call
movl
push
pusha
call
stc
xor
test
xchg
push
jnp
sbb
cmp
cld
mov
fildll
jae
sahf
loope
jg
sbb
pop
idivb
and
stc
sub
cltd
adc
pop
xchg
mov
inc
movsl
dec
test
test
mov
imul
insb
cmpsb
iret
inc
jg
out
jb
jp
mov
js
rcrb
aam
and
icebp
xor
icebp
mov
out
jp
mov
adc
incl
push
mov
jnp
int3
xchg
jbe
sub
push
cmc
jle
cmp
mov
insl
ja
cmpb
sbb
outsb
inc
int
sub
loopne
sbb
dec
inc
ja
adc
mov
cmpsl
push
push
xlat
mov
arpl
in
dec
xlat
in
ret
clc
movl
mov
pushf
lea
jmp
push
mov
jmp
movl
pushl
movl
pushf
lea
jmp
pop
sub
std
int3
lea
rclb
mov
add
je
fwait
clc
cli
ret
sti
push
pop
daa
movsb
mov
pop
sbb
jae
mov
rep
cmpsl
pushf
xchg
out
mov
test
mov
movl
pushf
jmp
call
jmp
iret
test
in
loopne
loopne
jecxz
xor
leave
test
in
fsubr
xchg
loopne
xchg
out
cvtps2pd
adc
and
arpl
out
mov
das
in
popa
imul
pop
decb
arpl
repz
mov
lea
push
gs
jmp
push
dec
or
lret
aad
jmp
inc
pushf
fdivr
hlt
std
shl
mov
dec
das
xchg
gs
int
xchg
repz
dec
fcmovnb
cmpsl
call
mov
out
dec
arpl
pushf
call
movl
jmp
cmp
xchg
into
test
insl
adc
add
jge
and
cmp
sub
jecxz
iret
lret
mov
or
xor
stc
cld
rcr
mov
das
xor
push
jg
daa
add
loop
mov
test
adc
jl
or
jo
pusha
inc
adc
dec
fwait
mov
daa
push
scas
cmpl
rcr
mov
scas
test
mov
pusha
pusha
mov
push
movl
movb
push
pushl
lea
jmp
stos
cmpsl
push
into
test
add
std
fsubrs
sub
xor
in
and
inc
mov
mov
sar
fstp
icebp
mov
movsl
repz
xchg
jnp
mov
or
jnp
or
inc
push
enter
pop
pusha
cmp
sbb
inc
sbb
jg
mov
add
enter
push
mov
call
jmp
adc
pushf
int
jae
inc
pop
jg
adc
jb
pop
pop
sahf
mov
shll
mov
push
add
loop
cmpsb
into
mov
pop
xor
adc
pusha
and
getsec
mov
pop
mov
xchg
cwtl
shrl
out
pop
inc
movsl
test
insl
popa
jp
mov
test
stos
test
push
rol
sub
test
or
mov
jl
mov
out
add
fildl
test
call
add
bound
adc
and
dec
jnp
cmpsl
lret
inc
push
into
push
xchg
jno
and
fnstenv
mov
pop
stos
out
jo
lock
lret
mov
inc
out
fstpl
sbb
sbb
mov
sub
int3
test
mov
cmpsl
sub
adc
cmc
xchg
push
jb
test
lock
jmp
out
push
jo
movsl
xchg
xchg
rclb
aad
out
xchg
sub
cmpsb
cmpsb
xchg
mov
cltd
mulb
jnp
xor
in
push
jno
jnp
pushf
lahf
cmp
mov
aam
dec
or
jae
jnp
sbb
js
mov
hlt
xor
scas
pop
pusha
aam
mov
in
jne
cmp
mov
inc
cld
idiv
mov
imul
mov
nop
sbb
xchg
xor
icebp
mov
mov
lahf
xor
test
dec
sbb
jnp
fwait
lret
add
ds
jno
lea
pop
cmp
sbb
xchg
adc
flds
bound
inc
ja
adc
mov
lods
bound
xlat
mov
imul
jmp
std
pop
pop
sahf
lret
test
outsb
pop
push
push
dec
pop
icebp
xor
push
and
adcl
sub
das
sbb
and
mov
or
push
xchg
lcall
es
dec
adc
test
std
ret
bound
test
out
mov
mov
imul
imul
jmp
inc
adc
add
mov
in
xor
jge
xchg
fwait
notb
add
sbb
or
or
fwait
xor
or
cld
loop
loop
and
cld
pop
dec
xor
inc
xor
inc
nop
repz
jae
adc
ret
xchg
jns
jo
and
test
outsb
and
mov
or
jae
inc
push
inc
outsl
inc
pop
cs
inc
dec
sbb
ret
insb
mov
out
test
out
daa
es
jle
ds
dec
pop
cmp
stos
stos
test
sub
jbe
push
pop
push
sbb
adc
outsb
stos
shr
cmpsb
mov
into
aad
shl
stc
repnz
jmp
mov
icebp
mov
out
cli
xchg
out
ret
mul
cmp
xor
jecxz
or
sub
and
jbe
daa
sub
cmp
and
imulb
hlt
adc
adc
add
sbb
outsl
add
mov
inc
lret
push
rcll
jmp
xlat
ret
test
push
sahf
mov
mov
mov
jl
adc
movsb
icebp
mov
dec
shr
xlat
in
cmp
sbb
sbb
mov
shrb
mov
jmp
fldz
sub
dec
sub
lahf
out
mov
aad
out
movsl
pop
into
enter
fcomp
in
jecxz
xchg
mov
inc
scas
sbbl
xor
sbb
mov
clc
leave
cld
mov
test
mov
mov
mov
icebp
enter
shlb
fists
cmp
jl
push
sbb
cmp
dec
hlt
shrl
orb
ret
les
mov
xchg
mov
idivl
and
mov
test
lock
lods
mov
mov
fsubr
out
sti
leave
loopne
xor
cmp
dec
add
pop
jb
and
je
sbbl
movb
push
pusha
movl
jmp
movl
pushf
lea
jmp
pushl
lea
jbe
push
pushf
lea
jmp
jne
aam
test
dec
data16
ljmp
faddl
fwait
lret
cld
sbb
cmp
dec
dec
or
or
mov
jg
cmp
dec
xchg
lds
push
stos
sub
imul
sbbb
dec
out
sti
rcll
scas
sub
xlat
jmp
xor
enter
or
repnz
or
movsl
mov
mov
sbb
lock
add
dec
int
or
adc
sub
mov
std
aam
lret
fmull
in
pop
test
lea
mov
lds
mov
pop
or
cwtl
pushf
jo
inc
bnd
and
sub
pop
aas
and
xor
push
dec
cmp
mov
roll
push
pop
ja
dec
icebp
test
js
js
je
idivb
mov
jnp
sbb
cmp
jns
dec
adc
sbb
cs
sub
std
xchg
shll
aad
jmp
test
push
inc
add
push
fcmovnbe
lods
lods
test
xlat
fcmovnu
cmpsb
cs
sub
or
ja
daa
es
push
sub
mov
mov
push
negb
arpl
mov
cmp
dec
mov
cli
ficoms
push
sub
mov
sbb
sub
push
and
iret
loop
in
call
mov
pop
mov
fwait
in
repz
mov
shl
dec
or
or
sub
cmpsl
jle
imul
outsw
inc
adc
cmp
imul
sub
test
cmp
cld
dec
pop
and
das
mov
pop
into
in
pop
cwtl
xchg
ds
loopne
fcmovnbe
outsb
scas
lods
inc
push
rcrl
dec
inc
ret
xchg
mov
nop
mov
sub
jmp
lock
push
fwait
and
lcall
cmp
jno
adc
push
int
test
mov
repnz
pop
xor
cmp
repnz
out
xchg
push
sub
inc
push
test
adc
xlat
mov
lret
sbb
or
pop
pop
dec
cmpsb
jnp
jmp
mov
cltd
push
pushf
jmp
movl
push
mov
pusha
movb
lea
jmp
pusha
mov
movl
pusha
pushf
pushl
pushl
movl
pushf
lea
jmp
scas
xchg
lret
ret
xchg
cli
ret
ret
or
int3
stc
cmc
mov
stos
shl
cmp
lcall
sar
ret
mov
test
rol
xor
mov
cmp
sub
inc
jnp
and
and
jns
push
mov
mov
pop
daa
addr16
fldl2t
cmp
inc
cmp
fsubrs
sbb
pop
into
lds
push
dec
pop
pop
cwtl
leave
out
into
lret
mov
mov
pop
daa
addr16
shll
sahf
out
mov
scas
out
jmp
movsb
mov
lahf
daa
sub
dec
pop
jle
jae
in
xor
cmp
sbb
mulb
pop
mov
aad
rclb
fldt
test
nop
leave
test
aam
int3
out
aam
hlt
mov
mov
daa
or
lea
jae
loope
int
in
and
pop
test
push
divb
mov
jmp
cmpsl
out
mov
xlat
popl
frstor
mov
cmp
test
inc
pop
push
dec
dec
loop
es
orb
test
sbb
cmp
cltd
cmp
xor
or
lret
aam
pop
xor
xchg
popf
mov
xchg
sarb
hlt
clc
pop
movsb
cmpl
les
mov
fcmovu
in
stc
dec
aaa
sahf
cwtl
testl
push
or
adc
cmp
add
push
daa
jbe
pusha
inc
sub
in
clc
xchg
scas
aas
add
push
pusha
insb
popf
out
dec
xchg
cmpsl
stos
sub
cli
xor
xor
and
jbe
pop
xor
lea
es
loope
pusha
call
push
lock
std
std
mov
xchg
outsl
mov
ret
jp
pop
lret
lret
lahf
frstor
mov
adc
leave
ss
inc
iret
cld
fnstsw
cmp
shrl
fsubs
aam
push
int3
add
out
fsubl
adc
test
jnp
xchg
popa
rorl
mov
mov
sub
push
inc
stos
les
mov
or
ret
enter
rorb
movl
jmp
stc
xor
outsl
sbb
sub
cmp
cld
mov
xchg
adc
push
xlat
jae
fnstcw
repnz
push
and
hlt
lret
adc
dec
mov
out
xorl
out
mov
inc
pushf
cmpsb
sub
and
xchg
out
adc
mov
in
test
xor
pop
sti
xor
sbb
mov
out
fdivs
mov
test
cmp
add
inc
sub
lcall
cmc
repz
popa
xchg
popf
xchg
push
cmp
sbb
jle
fldl
mov
aad
inc
test
dec
jg
mov
stos
push
lods
push
pop
push
xlat
stos
inc
dec
mov
inc
test
call
movl
pushf
mov
mov
jmp
pusha
movl
lea
jb
push
movl
push
pusha
lea
jmp
aaa
imul
test
dec
adc
fs
sbb
pusha
push
add
jae
repz
sarl
ret
push
shrl
cmpsl
jb
imul
out
mov
nop
stos
mov
test
xor
push
jo
jl
sub
faddl
mov
sar
inc
test
stos
mov
mov
aam
rol
jl
cli
int
out
xchg
mov
jmp
jno
push
jb
sub
cmp
lret
fnstsw
push
xlat
out
jecxz
push
adc
pop
mov
lea
mov
std
add
hlt
icebp
scas
aad
daa
mov
inc
jmp
adc
xchg
jmp
lret
jl
jp
lea
outsl
inc
pop
cmp
pop
dec
add
push
js
jg
mov
imul
iret
mov
mov
mov
in
repz
pop
test
test
add
pop
adc
or
fisubrl
and
stos
adc
xchg
arpl
lods
movsb
add
push
loope
lahf
mov
divl
negl
jp
aaa
xchg
leave
mov
in
les
test
gs
insl
sbb
lahf
inc
jbe
mov
jle
pop
inc
loop
push
push
or
adc
cmpsb
jmp
cmpsl
out
lods
hlt
in
sbb
add
lods
xchg
sub
test
mov
movsb
lock
iret
xchg
cmpsl
loopne
test
ljmp
jns
lods
negl
jo
push
push
ja
pop
inc
sub
adc
inc
dec
fs
push
sarl
push
sub
add
lods
shrb
cltd
test
lock
mov
nop
mov
lret
sub
adc
daa
mov
into
popf
popf
mov
sub
inc
add
cmp
push
popa
push
popa
flds
shrb
xor
inc
fs
cmp
pop
jnp
not
xchg
mov
jns
or
cmpsl
xor
call
nop
mov
arpl
dec
cld
in
aad
mov
xor
lods
test
fldl
sbb
jae
cld
test
shr
das
jbe
mov
dec
repnz
inc
fsubrl
repnz
add
das
sbb
imul
sbb
add
stc
shlb
mov
inc
std
mov
fsubrp
fdivrp
mov
xchg
cmpsl
pop
push
mov
inc
dec
push
call
fists
mov
or
jge,pt
popa
jp
data16
lods
bound
mov
xchg
pop
add
mov
mov
mov
xchg
mov
lea
push
je
xchg
mov
in
clc
leave
cld
mov
mov
movsb
mov
or
xchg
outsb
mov
out
xlat
sub
mov
pushf
jmp
stc
xor
pushf
ficoml
mov
mov
adc
sbb
jl
cmp
lds
push
cs
repz
adc
jg
loopne
inc
mov
in
pop
jne
xchg
dec
mov
inc
insb
push
rcrl
out
bound
mov
inc
sbb
xor
pop
std
popa
xor
mov
jb
or
mov
out
jecxz
jbe
movsl
mov
jmp
repz
repz
mov
and
push
sbb
cmp
iret
bound
mov
aad
pop
xchg
inc
ja
adc
mov
stos
push
pushf
pop
push
push
xlat
stos
mov
mov
dec
pop
lret
gs
movl
movb
pushf
pushf
pushf
movl
pushf
mov
lea
jmp
in
xor
lea
dec
push
ljmp
push
imul
dec
inc
insb
popa
push
add
rcl
and
pop
sti
clc
xchg
loopne
loopne
call
mov
nop
mov
mov
iret
div
shrb
filds
sarl
and
xchg
mov
inc
fimull
cmpsl
test
fwait
xor
adc
jae
mov
pop
adc
popa
push
jge
jne
inc
or
loop
test
jns
dec
xor
cmp
sub
push
jl
jmp
push
inc
dec
pop
adc
adc
add
jae
adc
inc
dec
inc
bound
jecxz
stc
stos
rorl
jl
imul
inc
arpl
jb
jp
xor
scas
pop
dec
daa
je
fildll
mov
movsb
das
mov
rcll
mov
inc
arpl
int
ds
stos
xchg
jecxz
ret
xchg
iret
sahf
mov
jmp
inc
ret
sbb
push
xor
cs
jg
and
jno
adc
std
les
adc
in
loop
xlat
mov
cs
mov
lahf
add
mov
pop
push
pop
add
cmp
jp
inc
or
fldenv
mov
push
pop
pop
fidivrs
dec
dec
adc
data16
out
mov
mov
mov
mov
int
ds
mov
xchg
and
popf
mov
stos
mov
cmpsl
sub
sub
stos
cli
adc
movsb
mov
jbe
xor
push
fstl
pop
or
scas
outsb
in
popf
shrb
mov
repz
or
mov
cmp
bound
or
adc
dec
mov
mov
test
iret
mov
int3
xchg
mov
pop
test
pop
jecxz
in
stos
test
mov
repnz
repz
sar
inc
and
arpl
lods
pop
sub
dec
adc
dec
adc
push
ja
dec
shll
add
cmp
fldenv
icebp
into
test
idivl
cltd
lds
mov
orl
mov
and
or
and
push
lea
jmp
pusha
pushl
movl
mov
call
jmp
pushf
pushf
jmp
add
lods
mov
push
push
push
adc
inc
push
mov
inc
mov
les
jne
sbb
or
dec
sbb
sahf
and
scas
sub
out
adc
inc
inc
xor
jo
rclb
pop
insb
insl
jecxz
sub
daa
js
dec
cmp
outsl
sub
std
fs
lea
xchg
pusha
mov
rcr
mov
test
sub
repz
in
insb
xchg
outsb
cmpsl
push
pop
push
ja
jae
insl
inc
lcall
sub
pop
adc
mov
cmp
fcomp
sub
dec
movsb
and
stos
jmp
or
int3
pushf
mov
sbb
inc
insl
cmp
inc
cmp
mov
rcll
arpl
sub
stc
test
mov
aad
movsl
xchg
cmpsb
loope
dec
fsubrs
outsl
out
jl
idivl
mov
mov
lock
int
mov
push
sbb
arpl
fists
mov
clc
mov
inc
jle
xlat
out
pop
and
xor
push
adc
push
push
movsl
jno
out
xor
and
shl
jl
test
das
xchg
mov
fwait
ficoml
inc
fstpl
fstp
mov
push
mov
std
lods
xchg
mov
in
aad
jmp
or
push
add
push
or
lods
cmc
aam
rep
inc
adc
shlb
int3
jmp
call
imul
stos
lock
stos
xchg
push
mov
sub
mov
dec
mov
inc
dec
adc
xchg
nop
cmp
sub
rclb
push
mov
xchg
rcrb
cmp
mov
punpckhbw
sbb
mov
test
das
mov
mov
mov
and
xor
cwtl
addl
incl
hlt
mov
jp
or
ljmp
test
daa
add
daa
popa
pushl
xor
ss
ljmp
arpl
sub
push
add
stos
loope
ss
or
xor
mov
sbbb
aas
stc
cld
movsl
cwtl
jo
popa
inc
std
pop
inc
xor
jns
add
inc
aad
pop
cmp
push
add
dec
ss
sub
cmp
cmp
outsl
test
inc
fldl
dec
fcmovb
sbb
sbb
mov
fwait
and
dec
sub
lahf
mov
push
pusha
je
dec
fcmovb
scas
and
iret
bnd
shl
mov
lret
xchg
add
ds
push
sub
outsl
push
aaa
or
jo
and
xor
inc
and
jae
ret
call
pusha
push
pusha
movl
call
insl
cmp
scas
stos
out
mov
mov
xor
sub
pop
jl
push
or
aas
cmp
xor
mull
lcall
ljmp
jo
push
cmovg
dec
imul
fcomp
push
iret
int3
cmp
push
lock
pusha
nop
or
push
ret
dec
movsb
mov
xlat
jbe
je
pusha
aaa
push
cwtl
mov
nop
nop
sub
pop
xchg
and
or
pop
lcall
and
jb
adc
pop
fnsave
inc
add
inc
push
ret
push
mov
inc
and
sub
into
addr16
push
movl
lea
jmp
dec
bound
mov
adc
sub
and
inc
xor
cmp
scas
mov
inc
adc
mov
lods
shr
mov
fistps
mov
mov
push
xor
xchg
xchg
xchg
xchg
xchg
cmpsb
int
aad
mov
call
pop
scas
mov
xchg
icebp
pop
xor
cmp
jnp
imul
sbb
inc
popa
popa
cltd
inc
repnz
int
jmp
and
xor
movsl
mov
sarl
push
or
pop
lret
dec
xor
jle
inc
bound
dec
jl
je
je
jl
js
inc
push
push
pop
mov
mov
leave
jmp
movl
pushf
pushf
push
mov
lea
jmp
pushf
movl
pushf
lea
jmp
push
pusha
pushf
pusha
pushl
lea
jmp
and
mov
jae
js
pop
jns
pop
sbb
sub
shr
xchg
adc
nopl
add
inc
imul
aad
add
jle
add
jle
lods
mov
dec
int
cmpsl
xchg
xchg
xor
jae
orps
push
dec
jnp,pt
pop
dec
outsl
ss
outsl
or
rcrl
es
stc
insl
dec
stos
shlb
ret
int
leave
sahf
mov
in
enter
test
inc
dec
inc
sbb
push
adc
dec
sub
pop
mov
adc
fs
dec
push
mov
sbb
sbb
and
or
sti
stc
jno
add
addr16
mov
stc
icebp
mov
cmc
jg
add
jae
loopne
inc
enter
push
and
xor
and
xchg
mov
repnz
adc
push
clc
sub
arpl
push
dec
mov
or
insl
js
test
jnp
ljmp
push
daa
sub
rorl
addr16
jg
daa
adc
out
mov
or
mov
stos
into
repz
sbb
stos
ljmp
daa
out
and
cli
sti
mov
inc
add
ljmp
push
add
pop
mov
pop
mov
jae
ljmp
lcall
sbb
lahf
fidivs
mov
cwtl
jnp
mov
pop
out
out
mov
fwait
enter
mov
cmp
mov
mov
jmp
test
jmp
and
jae
inc
fcoml
imul
xor
test
and
imulb
mov
in
in
xlat
sti
push
in
mov
xchg
xor
inc
das
add
pop
xchg
pop
inc
pop
push
cltd
xchg
inc
sub
pop
int
mov
rcl
sar
enter
aas
data16
mov
push
pop
loope
test
mov
lods
xchg
xchg
mov
sbb
aaa
pop
ss
cltd
jbe
dec
inc
gs
mov
arpl
pop
adc
jle
ret
lcall
adc
mov
loop
imul
jmp
daa
xor
test
mov
cwtl
adcl
clc
int
mov
cmp
es
cmp
adc
jb
jb
jne
or
jne
pushf
mov
push
fs
xchg
je
push
push
aas
push
jne
dec
test
xchg
or
adc
and
aas
inc
xor
jg
das
inc
adc
jb
in
pusha
fs
xchg
ljmp
repnz
pop
dec
jae
cvtps2pd
pop
push
into
into
xchg
stos
adc
mov
inc
out
in
or
or
out
jno
out
xchg
stos
mov
xchg
push
lcall
mov
out
aad
hlt
rcll
mov
shl
push
mov
fistps
xchg
icebp
push
jno
mov
fcmovu
js
mov
xchg
mov
out
sahf
test
push
repnz
mov
daa
add
xor
push
adc
lock
sbb
scas
pop
and
and
out
push
push
jecxz
pop
arpl
xchg
dec
sub
push
add
fstpt
dec
sti
add
inc
adc
pop
loope
mov
bound
jns
pop
std
outsl
orl
xchg
jbe
and
std
nop
data16
sbb
pop
ljmp
call
and
jmp
pusha
jmp
pushf
pushf
movl
push
movl
movb
pusha
push
push
lea
jmp
call
movl
pusha
lea
jmp
mov
movl
pusha
pushf
pushf
jmp
pusha
dec
repz
jae
xchg
cwtl
jmp
clc
fstpl
sub
mov
add
and
dec
ja
xor
dec
adc
xor
movl
movb
mov
lea
jmp
movl
push
pushl
lea
jmp
in
sub
js
js
pop
adc
xor
cmp
sub
in
int
mov
cltd
pop
jle
dec
pop
inc
xor
dec
inc
dec
scas
sbb
xor
cmpsb
arpl
fucomp
xchg
aaa
jnp
je
call
xor
cmpsl
pop
xchg
in
scas
mov
cmpsb
lods
mov
ret
mov
inc
and
ss
addr16
pushf
call
xor
jae
push
push
add
imul
imul
insb
leave
pop
mov
dec
jecxz
cmpsb
mov
test
cmpsb
or
or
mov
pop
test
jle
dec
jno
push
es
and
add
push
cltd
mov
jae
test
test
cwtl
leave
cld
mov
xchg
adc
xchg
in
pushf
leave
cmpsb
stos
mov
loopne
mov
shl
lds
lcall
cmp
and
roll
push
push
ja
push
outsb
push
add
js
arpl
imul
dec
out
in
cltd
sub
xor
jmp
pop
adc
or
mov
iret
fcoms
mov
test
pop
and
mov
test
lock
std
std
xorb
ret
jae
lcall
popa
mov
mov
pop
add
inc
lock
dec
fnstsw
cltd
in
mov
scas
and
aam
push
movb
fldt
adc
test
push
ds
inc
data16
in
xchg
push
cmpsb
xchg
inc
adc
aaa
mov
repnz
ror
insb
sbb
inc
movl
pushl
pushf
push
movl
push
pushf
lea
jmp
pushf
movl
pushf
pusha
movl
pushf
lea
jmp
mov
push
mov
jae
ret
ffreep
mov
mov
ret
popf
cmp
mov
mov
xchg
cmpsb
cmpb
mov
dec
test
or
push
ss
pop
jbe
cmp
mov
sbb
pop
daa
mov
movl
pusha
movb
pushf
mov
lea
jmp
rolb
addr16
pop
fistps
push
sbb
pop
test
lret
nop
shlb
lea
mov
mov
jo
and
jno
imul
mov
test
jmp
inc
adc
stc
mov
mov
and
fistpll
xchg
ret
jbe
cmp
test
insb
add
insl
call
mov
test
add
cltd
scas
test
inc
cmc
mov
dec
fwait
ds
mov
jp
call
xor
pop
cmp
pop
xor
pop
outsb
push
add
push
hlt
test
or
test
inc
jb
imul
cmp
xchg
call
bound
add
ret
int
stos
iret
mov
les
cmpsb
test
ret
sarb
or
lods
dec
scas
test
mov
mov
mov
cmp
ds
test
inc
insl
call
or
clc
sar
lods
call
leave
mov
insl
adc
lret
cmpsl
mov
inc
imul
js
inc
dec
ficoms
cmc
pop
mov
test
xchg
movsb
mov
mov
mov
mov
dec
dec
movsl
call
ret
mov
xchg
mov
sti
lods
stos
cld
ret
call
jecxz
mov
inc
sahf
stc
mov
scas
test
outsb
dec
and
cmp
and
outsl
add
addr16
shlb
dec
adc
jg
or
outsl
pop
push
cmp
add
xchg
mov
scas
test
push
pop
pop
sbb
push
outsb
dec
jge
sbb
sbbb
mov
lds
xchg
int3
ror
call
mov
xor
adc
jno
bound
mov
and
pop
cmp
adc
and
sub
adc
stc
cmp
repz
test
das
bnd
mov
lea
jno
push
push
pushl
push
movl
lea
jmp
adc
scas
test
push
pop
push
cmovp
or
xor
sbb
lods
leave
imul
jae
lcall
mov
into
mov
in
xchg
mov
mov
or
in
test
inc
and
xor
addr16
movl
pusha
movl
mov
lea
jmp
vucomiss
adc
pop
lret
jns
int3
push
decb
enter
xchg
int3
dec
sbb
sub
mov
testl
mov
pusha
movl
pusha
push
push
lea
jmp
call
das
push
lods
test
xchg
pushf
test
movsb
mov
rorl
or
xor
add
dec
mov
jl
pop
test
mov
mov
mov
xlat
shlb
repnz
test
or
insl
jo
je
sbb
cwtl
in
pop
pusha
jae
aaa
dec
repz
ret
mov
adc
xchg
xor
push
gs
cmp
jp
pop
mov
fxch
js
test
sti
xchg
ret
loop
scas
mov
scas
sti
and
mov
dec
jbe
imul
jge
mov
pop
pusha
pop
or
mov
mov
loope
add
push
dec
cmp
push
jno
add
repz
pusha
pop
rorl
adc
movl
push
lea
jmp
andl
adc
pop
sbb
cmp
mov
stos
fyl2x
test
enter
cli
ret
mov
or
push
jle
push
inc
jns
and
cmp
inc
fdivrl
pop
adc
xor
es
push
sbb
dec
js
cwtl
push
popf
push
mov
xor
jbe
mov
dec
push
ret
pop
loope
rolb
jne
jnp
scas
mov
mov
lret
mov
sub
in
rcr
ljmp
mov
insb
add
add
jae
lret
out
ret
jmp
in
stc
or
jae
mov
les
cmp
insl
pop
push
inc
loop
mov
xchg
das
sbb
daa
add
imul
scas
sti
and
mov
movsb
pop
jle
gs
stos
sahf
xchg
ret
mov
test
in
xlat
cwtl
sti
rorb
call
add
das
mov
stos
mov
jae
xchg
ret
rcr
clc
mov
mov
sub
fdivrp
lret
scas
cmpb
ret
xchg
mov
out
roll
adc
pop
xchg
lods
mov
mov
repnz
fs
loope
mov
nop
jmp
test
punpckhwd
addr16
jmp
mov
cs
test
pop
dec
sbb
adc
movntps
rcll
into
test
xlat
shll
popa
ret
clc
outsl
js
test
loopne
imul
stos
sti
scas
and
test
and
cmovg
and
mov
leave
scas
cmc
pop
addr16
mov
pushf
xchg
xchg
or
in
cmpsb
mov
push
sbb
out
jno
mov
repz
sbb
clc
flds
add
das
rclb
adc
test
mov
in
mov
xchg
in
mov
aad
push
idiv
or
mov
dec
fs
mov
dec
popa
repnz
jno
or
jne
clc
xchg
enter
xchg
cli
hlt
cmc
xlat
cmp
aam
clc
lods
into
jle
daa
bound
sbb
and
add
sub
scas
cmc
jmp
or
int3
sarb
loope
fcomi
idiv
sti
loopne
fcomp
lods
out
jecxz
push
sbb
add
adc
xor
inc
and
addr16
jmp
dec
xor
jns
inc
push
popa
adc
sbb
in
test
push
jg
mov
cld
fwait
test
mov
and
call
fidivl
cli
leave
faddp
subl
xor
dec
add
add
push
movl
pushf
pushf
lea
je
push
pushf
lea
jmp
push
call
call
cmpsb
iret
outsb
test
add
cmp
sbb
and
push
push
mov
out
in
and
inc
ja
std
push
repz
fimull
sub
in
inc
stos
lcall
aas
sbb
push
push
pop
dec
aaa
sbb
xor
jmp
call
lret
mov
mov
mov
imul
sbb
sahf
mov
sbb
cmc
test
sahf
jnp
repnz
xor
pop
mov
push
push
pop
outsb
or
pop
inc
sub
jle
movzwl
cs
sbb
or
pop
repz
outsl
pushf
pusha
push
movl
call
push
call
pushf
pushl
jmp
movl
pushf
lea
jmp
incl
aad
mov
and
pop
orl
rorl
fwait
cli
shl
incb
cmp
sbb
pop
mov
insb
aaa
daa
fstps
xchg
pop
pop
je
push
cwtl
dec
ret
ret
call
mov
ret
call
cs
pop
xlat
enter
jno
or
add
jmp
xlat
rol
into
int
xchg
jne
dec
das
popf
mov
or
sub
add
rolb
fdivrp
cmpsb
lahf
fistl
or
jo
out
xchg
movsl
xchg
sbb
ja
stos
stos
xchg
jl
in
sbb
rcrl
in
mov
sbb
sub
inc
dec
sbb
or
in
jecxz
xlat
icebp
popf
int3
movsb
xchg
js
shlb
mov
scas
test
scas
movsl
sahf
sbb
push
xchg
mov
cmpsl
test
sbb
push
ds
sbb
push
cmp
dec
or
jmp
sub
cltd
mov
xchg
std
fcmovbe
movl
push
push
jmp
xchg
xchg
sbb
aad
leave
sahf
mov
out
loop
dec
add
into
mov
or
ds
cmp
sbb
pop
or
shl
sub
inc
outsb
adc
xor
int
ss
jbe
mov
xchg
fists
fucom
cmc
mov
in
push
sbb
adc
std
repnz
cmp
in
jp
mov
aas
push
mov
add
insl
ret
add
add
inc
push
fistpl
inc
sbb
adc
push
dec
dec
jl
inc
pop
push
push
and
das
add
dec
add
cmp
inc
in
pop
lea
mov
icebp
icebp
jl
test
sbb
sbb
jbe
dec
add
sbb
pop
pop
dec
negl
cmpsl
xchg
ljmp
jg
jmp
out
rol
out
mov
movsb
lahf
aam
push
movl
push
mov
mov
movl
pusha
pushf
lea
jmp
movl
mov
mov
lea
jmp
mov
mov
call
pushf
push
pushf
movl
movb
lea
jmp
or
jae
jecxz
iret
xchg
orl
stos
cltd
mov
push
popa
outsb
aam
or
pop
push
or
mov
xchg
lret
fs
xor
pop
outsb
or
mov
maxps
push
daa
fwait
sahf
out
out
iret
call
xchg
enter
sahf
mov
jg
jo
mov
test
mov
stos
mov
fdiv
int3
repz
idivl
adc
jbe
mov
or
mov
out
mov
in
xlat
jns
pop
lret
xor
sub
jns
pop
or
adc
fsub
unpckhps
push
pop
popa
jle
jb
push
inc
push
xor
cmp
stos
jne
test
jle
movsb
test
int
stc
mov
mov
mov
push
imul
push
xchg
dec
xor
sti
hlt
cld
or
push
test
dec
xor
push
sub
pop
inc
outsb
pushf
sti
movsb
test
pop
sub
inc
enter
ret
jp
fstpl
lret
push
mov
ljmp
mov
loope
dec
or
jno
ss
popf
roll
test
test
loop
stos
popf
scas
xor
inc
and
jae
inc
popf
push
lea
jmp
push
pushl
movl
push
pushf
call
push
movl
pusha
movl
pushf
pusha
lea
jmp
push
jmp
pushl
movl
push
lea
ja
pushf
movl
push
pusha
pushf
lea
jmp
push
pushl
jmp
pop
jno
mov
xchg
mov
fcmovnu
in
dec
xor
mov
xchg
lcall
in
push
mov
fucomip
jecxz
fcomps
and
jne
in
inc
xchg
enter
push
push
shll
mov
jecxz
ret
push
fsubl
loop
xchg
nop
lds
in
in
or
test
cmovo
out
inc
push
inc
cmp
mov
add
xchg
scas
repnz
mov
pop
fmuls
add
or
mov
cmp
ljmp
sbb
hlt
clc
pop
push
mov
fbstp
test
int
jmp
faddl
fisttpl
add
xchg
lcall
mov
ret
testb
dec
dec
adc
push
and
push
mov
rorb
jg
mov
jo
out
mov
sbb
adc
inc
scas
cwtl
roll
xchg
pusha
movl
pusha
call
add
stos
mov
mov
jmp
ficoml
ret
xor
scas
inc
data16
sbb
ljmp
fcmovnb
mov
push
leave
rol
or
mov
xchg
sub
xor
sti
repz
dec
sub
fucomi
jmp
movsb
neg
lret
cwtl
mov
out
dec
int
int
jne
push
sbb
lcall
sarl
pop
jp
mov
push
mov
in
shrb
shl
test
cmpsb
ds
or
mov
mov
jg
mov
dec
and
outsb
cwtl
xchg
mov
call
and
pop
dec
and
inc
xor
imul
pop
add
pop
add
mov
idivb
xchg
idiv
ljmp
repnz
fisttps
mov
mov
xor
xor
xor
sub
insb
xchg
das
sub
xchg
fcoml
mov
lock
mov
movl
push
pushf
pushf
pushf
lea
jmp
mov
jae
or
jl
xor
xor
adc
pop
adc
movsb
lock
out
inc
mov
push
in
jmp
rol
cmp
jg
or
pop
cmp
xchg
cltd
lock
sbb
imul
inc
pop
out
adc
mov
or
xor
out
mov
clc
lea
insb
mov
and
mov
outsb
push
xor
inc
sub
dec
jb
in
hlt
ror
and
cwtl
nop
pop
call
jbe
push
xor
adc
jle
imul
stc
shl
jno
fsubrs
inc
mov
pop
mov
pusha
test
outsb
lahf
mov
cltd
int3
cmpb
xchg
les
sahf
mov
xchg
cmp
jb
pop
out
in
mov
sti
pop
push
dec
mov
jne
inc
sbb
inc
dec
dec
xor
inc
mov
neg
in
cwtl
cmp
call
popf
rcr
jne
sbb
xor
rcr
insl
pop
adc
adc
push
jge
inc
sbb
cld
add
adc
pop
std
test
rcll
push
push
jae
imul
push
sbb
inc
inc
or
xor
ret
jo,pt
rcll
pop
xor
in
xchg
xor
xor
xor
cmp
fldenv
loop
mov
lock
mov
mov
dec
hlt
lahf
test
addl
add
sbb
fwait
lret
jle
stos
xchg
mov
sbb
sahf
mov
sbb
jmp
sarb
or
adc
or
rcrl
mov
cmpsb
ljmp
jmp
stc
xor
dec
mov
mov
mov
aam
inc
or
adc
js
dec
mov
cli
sub
pop
daa
or
adc
pop
push
andb
test
sub
fnsave
add
and
out
mov
inc
in
jbe
cmp
add
mov
movsb
sbb
insb
daa
jbe
xor
xorl
out
xor
sahf
enter
incl
rolb
xor
sub
cmpsl
dec
ret
std
ds
and
cmp
sbb
into
adc
outsb
sub
bound
mov
aad
test
adc
mov
movsb
orw
xlat
stos
jae
mov
rol
xor
jle
sahf
test
dec
sbb
jg
and
das
ss
pop
je
jae
xor
test
in
and
adc
fs
sbb
outsb
push
repnz
sahf
mov
ljmp
mov
in
and
cli
rclb
cs
adc
dec
inc
push
cmp
xchg
in
mov
cwtl
dec
pop
je
nop
mov
mov
je
add
xchg
aad
movl
push
movl
movb
lea
jmp
mov
jae
hlt
lods
loopne
aam
pushf
ror
movsb
test
adc
sbb
ja
in
cli
inc
mov
xchg
rol
popf
inc
sbb
je
fmull
cwtl
mov
mov
mov
ljmp
es
cmpsl
addr16
inc
and
push
add
mov
and
xor
pushl
movl
pusha
pushf
push
lea
jmp
movl
movl
ja
push
mov
mov
movl
push
lea
jmp
pushf
movl
jmp
and
popf
test
gs
jl
js
ja
fsts
mov
mov
mov
out
fisubs
test
in
orb
add
jecxz
lahf
push
dec
push
push
and
jp
push
dec
xchg
stos
xchg
sbb
mov
std
cld
aam
orb
mov
and
mov
arpl
imul
test
std
or
mov
cmc
mov
add
hlt
enter
stos
aaa
div
clc
fbstp
enter
test
pushf
test
inc
pop
push
bound
jle
fimull
adc
mov
rorl
mov
aad
pop
inc
fdivrl
in
pushf
leave
lods
cltd
fisubrs
gs
cmc
in
aas
and
inc
test
mov
adcb
inc
scas
adcl
mov
cltd
sbb
jb
dec
jle
arpl
xchg
push
pop
call
addr16
int
mov
cltd
mov
leave
lcall
jp
cld
fcmovnb
push
push
push
lea
jmp
cmpsl
addl
jae
mov
std
lock
leave
mov
and
data16
push
int
into
ficompl
scas
add
in
sbb
aas
push
mov
subl
cmpsb
sbb
push
enter
dec
sub
add
mov
out
jmp
jmp
push
pushf
movl
movw
pusha
lea
jmp
pusha
pushf
movl
mov
push
movl
movw
pusha
pushf
mov
lea
jmp
jmp
xlat
out
mov
lock
mov
clc
jb
mov
pop
adc
es
ret
in
fadd
enter
shl
cld
xlat
fbstp
orl
jbe
inc
cmpsb
pusha
iret
adc
and
sbb
add
fwait
test
int3
in
in
frstor
xchg
in
ja
or
test
shrb
pop
idivb
xchg
cmp
pop
push
bound
lods
shr
inc
stos
stos
xor
lock
cmpsl
cwtl
iret
in
xchg
jmp
insl
insl
adc
stos
xchg
dec
out
into
jmp
stc
fisttpll
sub
pop
mov
jp
adc
adc
data16
lea
cmp
popf
fxch
leave
cli
xchg
cltd
cmc
or
pop
std
std
lea
pusha
sbb
dec
fmull
and
pushf
mov
pop
xchg
xor
rorb
fnstsw
or
mov
dec
dec
dec
and
aam
push
ret
add
loope
das
adc
test
lea
add
and
adc
xchg
push
scas
add
push
inc
das
enter
pop
and
enter
xlat
inc
push
jmp
push
call
call
cmpsl
mov
loop
shl
cli
fwait
stos
lahf
out
call
pop
push
outsb
sub
ss
or
sub
cmpsl
notb
mov
mov
cld
decl
xor
rcl
xlat
push
cmp
or
pop
push
pushf
mov
push
add
inc
sbb
add
insb
add
js
mov
sti
loopne
push
pop
sbb
cltd
test
pop
dec
xor
fs
add
xor
dec
pop
jno
cmpsb
xchg
jno,pt
cmp
outsb
push
mov
lock
lret
push
xchg
icebp
shl
test
in
mov
add
jl
js
pop
add
dec
scas
xchg
int
pop
jb
mov
adc
pop
pushf
inc
jo
dec
jg
jle
jns
add
repnz
stos
popf
enter
mov
adcl
test
jne
xor
cmp
and
and
std
or
scas
xchg
gs
mov
int
scas
dec
add
and
or
sbb
je
js
pushf
call
sub
jae
push
je
imul
lret
movsb
push
std
sub
mov
sbb
imul
inc
push
decb
rcrl
mov
sarl
xor
fwait
mov
push
cmc
fisubrl
arpl
inc
cmp
fcom
loop
das
inc
mov
not
inc
clc
std
nop
jmp
insb
sub
xchg
fidivs
adc
incb
hlt
sar
push
cmc
xchg
fisubs
aad
repz
test
pop
push
xchg
int
leave
out
xchg
cwtl
test
adc
adc
sbb
jmp
or
cmp
pop
and
sbb
lods
iret
fdivrp
cmpsb
decl
sti
mov
xor
sub
pop
adc
jb
mov
popf
xchg
or
iret
aaa
mov
dec
inc
adc
dec
scas
out
xchg
xchg
in
mov
mov
cmp
pop
insb
movaps
mov
push
iret
inc
popf
add
sti
add
mov
loopne
loope
in
int
std
mov
fistpl
pop
adc
aam
cmpsl
cmpsb
or
daa
or
shll
dec
fisttps
mov
das
xchg
xchg
test
mov
mov
data16
jmp
cltd
aad
cmp
or
pop
mov
xchg
enter
cld
loope
xchg
test
int3
in
cltd
sub
mov
cmc
mov
add
sbb
dec
add
jmp
pushl
call
add
cmpsl
out
movswl
push
sti
xor
movl
pushf
movl
pushf
movw
lea
jmp
jmp
push
pushf
pushf
movl
push
movl
pusha
pushf
movb
lea
jmp
movl
jmp
pop
inc
add
loope
xchg
mov
in
fldenv
ljmp
and
aaa
imul
pop
adc
sahf
dec
sbb
lods
xchg
loopne
mov
fdivrp
ret
in
mov
shlb
mov
repnz
add
dec
fsin
cld
loop
lods
mov
scas
mov
test
fwait
jle
dec
mov
jge
and
add
xchg
jnp
cmp
rcl
mov
xchg
int3
mov
out
sar
adc
mov
cmp
jae
sub
sbb
int
enter
lock
push
fnstenv
addr16
and
stos
lret
mov
pop
data16
dec
fdivr
or
hlt
jmp
fwait
ror
mov
push
call
movl
push
pushf
jmp
fs
xchg
test
or
in
mov
sub
aas
mov
push
call
sbb
push
popa
sbb
mov
sub
mov
fidivl
insb
add
push
dec
push
imul
les
jnp
roll
add
xor
inc
jns
es
inc
mov
push
mov
test
cmp
dec
xor
imul
outsl
and
jmp
dec
jns
mov
jnp
mov
add
mov
jno
mov
push
dec
insb
mov
and
adc
int3
fnsave
add
adc
dec
push
test
leave
inc
jbe
mov
dec
addr16
jecxz
sbb
jno
adc
dec
bound
or
pop
xor
jbe
and
or
mov
lock
sbb
dec
adc
je
inc
add
inc
mov
mov
jnp
add
data16
js
pop
xor
add
push
scas
cmp
enter
add
dec
outsl
push
jmp
or
add
adc
mov
jne
push
mov
icebp
mov
mov
jg
sbb
dec
jo
cmp
jbe
xchg
scas
int
adc
aam
jecxz
hlt
jmp
mov
sub
imul
lret
jmp
movl
pusha
pusha
movl
push
movb
pushf
movb
lea
jmp
call
out
ljmp
push
aas
push
outsb
pop
adc
and
dec
mov
arpl
push
xchg
jp
xor
aad
sbb
mov
movsb
mov
loopne
pushf
movl
pushl
pushf
movl
pushf
pushf
push
lea
jmp
xchg
adc
clc
rorl
push
pop
out
nop
mov
test
test
push
jne
mov
and
ljmp
push
push
xchg
repz
dec
out
sbb
cs
mov
and
shr
pop
mov
xchg
xchg
mov
shl
arpl
and
mov
ret
call
movl
push
pushf
lea
jmp
inc
or
jle
xchg
mov
fcomp
shll
sub
jge
test
and
sub
aaa
pushf
jns
cwtl
push
jge
jno
jb
lea
aad
hlt
push
aad
mov
mov
fmuls
pop
push
pop
or
inc
adc
cmpsb
jmp
inc
and
mov
addr16
ret
xchg
iret
mov
mov
rcrb
push
fidivs
mov
test
sbb
mov
xchg
or
mov
and
add
jno
ret
call
pushf
movl
pushl
mov
mov
pushf
lea
jmp
js
pusha
push
movl
pusha
pushf
mov
movl
push
movb
lea
jmp
call
fimull
in
mov
xchg
test
nop
test
mov
lret
cmp
outsb
adc
xchg
imul
pop
data16
push
scas
xchg
push
push
push
and
dec
imul
or
aam
dec
movl
pushf
lea
jmp
pushf
movb
movl
jmp
pusha
jmp
cmpsl
repz
pop
add
push
sbb
jmp
js
mov
call
cmp
jge
cmp
dec
inc
inc
adc
gs
clc
push
cli
leave
loop
mov
fdivp
inc
inc
mov
insl
jns
xchg
test
dec
jbe
push
xor
inc
inc
push
insb
pusha
mov
inc
push
scas
xor
fisttpll
jae
sub
adc
ja
outsl
sub
xchg
hlt
lcall
ret
mov
mov
movw
movl
push
pusha
mov
lea
jmp
pusha
pusha
movl
pushf
jmp
pusha
call
stc
xor
lods
lcall
aam
xlat
cld
mov
shll
dec
or
pop
xlat
jne
imul
and
xchg
adc
or
xor
cmpsl
dec
test
call
dec
xchg
add
mov
inc
pop
jbe
jo
aas
xchg
out
repnz
mov
dec
sbb
data16
ss
std
shll
icebp
mov
ret
iret
leave
xchg
xor
loopne
add
add
ret
mov
sti
adc
push
repz
adcl
dec
mov
bound
mov
aad
inc
test
mov
mov
scas
test
push
xlat
mov
out
gs
xchg
into
loope
lock
mov
scas
xchg
out
mov
andl
divb
or
sub
mov
fnsave
mov
or
push
dec
push
sbb
add
cmp
sbb
je
and
rcrl
push
jae
and
mov
clc
movsl
aam
xlat
nop
mov
inc
sub
cwtl
dec
adc
in
gs
mov
dec
stos
out
outsl
pop
pop
lods
inc
dec
bound
inc
lock
cs
push
sbb
add
cli
mov
mulb
add
jge
ret
mov
push
mov
inc
mov
sbb
jae
mov
nop
mov
test
ljmp
mov
popa
mov
out
mov
cltd
fsubrs
ror
fs
jb
xchg
xor
in
popl
sub
and
add
sbb
inc
jp
pop
xor
inc
xor
dec
clc
imul
clc
adc
loope
lods
xor
out
dec
cmp
adc
es
mov
mov
fnsave
sbb
sub
sub
out
fstps
mov
lods
jne
decl
adc
enter
jne
dec
js
add
cmp
xor
fcoml
clc
mov
lock
xlat
in
es
xchg
dec
and
es
popa
sbb
jne
insl
push
subb
es
xlat
mov
inc
add
stc
test
clc
stc
hlt
int3
shrl
mov
push
in
jp
inc
aam
push
outsb
pop
pop
jg
dec
stos
mov
pop
stos
mov
and
xor
outsl
xor
outsl
icebp
jmp
push
pushf
jmp
push
movl
mov
pusha
movl
pushl
lea
jmp
cs
cmc
xchg
jmp
pop
lcall
mov
cmp
mov
push
push
lea
jmp
pop
mov
arpl
dec
push
jg
and
pop
cmp
cmc
jae
scas
fmull
cmpsb
loop
sub
adc
shl
int3
mov
lds
adc
loope
xchg
inc
jb
jg
adc
call
or
push
sub
cmp
mov
js
sub
movl
movl
lea
jmp
push
movl
jmp
pusha
movl
call
pusha
movl
pushf
push
mov
mov
lea
jmp
push
movl
movb
pushl
pushf
pushf
lea
jmp
jmp
pushf
jmp
mov
jae
out
mov
ljmp
mov
cmpsl
repz
inc
nop
out
xorb
out
loope
fucomp
in
fstl
cmpsl
inc
lea
in
cmc
movsb
xchg
int3
test
cltd
mov
test
clc
clc
test
cmpsb
cmp
icebp
les
add
pushf
int
movsl
repnz
adc
cmp
stos
inc
stos
popa
pusha
dec
jl
adc
push
push
and
inc
and
ret
xlat
loopne
push
lea
jmp
adc
lea
pop
data16
push
add
aas
dec
adc
sbb
fistpl
sub
sub
adc
jecxz
xor
ja
pop
ja
jnp
cmpsb
add
or
or
sub
or
sbb
je
jbe
in
mov
mov
sbb
cmp
addr16
call
movl
pusha
pushl
mov
movl
pushf
lea
jmp
jle
test
inc
jnp
addr16
and
push
aaa
push
dec
add
xchg
scas
mov
movaps
sbb
mov
subb
decl
fnstsw
cmp
lods
ds
and
outsl
dec
addr16
adc
cmp
je
sub
or
loop
mov
std
std
ja
bound
mov
ret
jg
push
push
rol
dec
sub
mov
pop
mov
xor
jp
or
jge
jmp
dec
push
and
aam
pop
lret
ljmp
mov
lock
std
xchg
xchg
xchg
cmp
xchg
mov
es
in
xchg
push
lods
push
adc
or
push
enter
fimuls
pushf
call
call
sub
inc
jle
pop
add
sbb
cmp
pop
sbb
daa
insl
and
sbb
test
lock
sarl
cltd
scas
push
sbb
testl
mov
andb
mov
mov
int3
mov
std
mov
mov
cwtl
add
mov
push
mov
xchg
into
xchg
xchg
stc
fmulp
pushf
call
rcrl
push
filds
xchg
mov
stos
loop
fsubrl
stos
jecxz
insl
jns
pop
int
fdivrl
sbb
cs
jp
sbb
sub
jb
mov
jmp
rclb
movsb
popa
pop
sub
pop
and
outsl
push
mov
jne
and
push
or
sbb
pop
adc
mov
inc
fildll
add
mov
xor
add
sbb
cmp
sbb
cmp
mov
rol
test
sahf
test
dec
xchg
aam
mov
movsl
out
ljmp
addr16
lea
jl
push
xlat
call
bnd
test
sub
cmp
ss
push
lock
sbb
sub
fmul
negl
ss
dec
mov
pop
scas
nop
mov
es
test
push
inc
inc
insl
push
and
or
fisubrs
sbb
dec
test
pop
mov
and
and
sub
sbb
add
dec
xlat
jecxz
jecxz
clc
push
cltd
jle
js
lods
jo
lahf
mov
loop
stos
es
mov
mov
cmp
imul
test
ror
test
fsub
fldenv
cmc
mov
mov
lahf
push
or
dec
fisubrs
aas
sbb
ret
out
lcall
std
loopne
loope
push
jnp
mov
lock
inc
jnp
test
fidivl
and
xchg
scas
mov
test
push
inc
dec
xchg
stos
cs
sti
push
test
xor
js
and
imul
lods
mov
lods
stos
jbe
mov
push
lock
push
push
sbb
jg
jnp
dec
push
push
push
xor
lret
sbb
push
outsl
sbb
cltd
lods
cmpsl
xchg
mov
bound
jmp
ret
lahf
cltd
inc
adc
fdivrs
ret
mov
shrl
mov
std
movsl
clc
pusha
mull
and
adc
aaa
es
adc
pop
lcall
push
mov
ret
lds
dec
sub
and
aam
add
ss
sbb
loope
into
iret
sahf
stos
out
ljmp
nop
movsb
add
xchg
or
pop
cmpsb
sti
and
mov
call
popf
mov
movb
sbb
mov
mov
xchg
cmpsl
mov
fnstenv
into
fcos
iret
enter
sbb
in
lea
movsb
icebp
or
js
fmull
pop
scas
ret
inc
nop
mov
or
and
rcrl
sbb
pop
sub
ret
add
xor
xchg
pop
sbb
cmp
or
daa
cmp
xor
call
fstpl
lret
cmp
pop
lock
jnp
adc
xchg
aaa
addr16
fstpl
scas
test
ret
cmpsl
fwait
mov
sub
mov
xor
push
lcall
lret
into
inc
mov
sbb
mov
pop
pop
lret
sbb
mov
test
sbb
or
sbb
or
sti
mov
test
decb
pop
out
jns
inc
mov
int
nop
adc
and
dec
cmp
xchg
sahf
test
dec
fldcw
fiaddl
fdivp
out
fcomip
je
in
inc
popa
fimuls
xor
push
inc
mov
or
adc
int
imul
push
and
aad
repz
cmp
mov
mov
in
ret
lds
mulb
icebp
mov
aas
into
leave
xchg
xchg
fcmovb
pop
cmp
mov
dec
inc
call
stos
mov
lahf
xchg
iret
iret
dec
sub
mov
imul
mov
fnstenv
pop
jmp
jmp
inc
jne
outsb
push
push
or
ss
inc
and
je
ret
call
movl
pushf
push
lea
jmp
push
movl
mov
pushl
pushf
movl
movl
lea
jmp
call
stc
subl
adc
es
push
sub
das
sbb
out
lods
adc
out
in
scas
dec
icebp
test
loopne
subb
jmp
stc
test
in
push
lds
jne
push
pop
xlat
xchg
push
xor
add
and
push
add
sbb
jp
sub
and
shlb
or
aad
jmp
add
sub
xchg
mov
pushl
and
das
in
jmp
jae
add
lcall
jmp
sti
in
sarl
pop
out
lods
dec
sahf
mov
xor
jne
push
cmp
roll
cmpsl
loopne
or
mov
mov
mov
imull
mulb
mov
fistps
jge
pop
xchg
gs
loop
inc
inc
pop
xchg
enter
lret
test
enter
lock
pushf
les
push
mov
jne
cltd
lods
sbb
pop
imul
add
es
or
mov
inc
xlat
push
stos
push
insb
mov
in
add
mov
dec
outsl
push
lods
xor
cmpb
jl
pop
cmp
pop
push
gs
and
cmp
jno
popf
pop
and
jmp
jns
push
call
pushf
pushl
call
add
jecxz
test
fldt
mov
movd
sub
popf
and
dec
dec
call
dec
incl
jmp
movsl
hlt
bswap
ret
mov
out
int
xchg
pop
cld
scas
mov
inc
es
imul
aam
hlt
dec
and
cmp
mov
rclb
shlb
fs
xchg
mov
pop
out
mov
xor
insl
dec
sbb
daa
or
mov
mov
lea
shl
ret
mov
mov
out
int3
pop
cwtl
sbb
mov
or
int3
xchg
test
lods
into
xchg
push
xchg
idiv
subl
fstpl
in
and
or
jo
sub
mov
nop
movsl
mov
mov
or
sti
gs
dec
hlt
inc
or
inc
pop
mov
mov
cmp
imul
pop
pop
pop
pop
jg
es
jp
add
push
inc
jns
aad
adc
jl
mov
into
ja
sub
ficompl
std
mov
clc
inc
adc
mov
insb
sub
mov
inc
mov
ja
js
inc
pop
ss
test
jmp
repz
call
sub
xchg
rcll
sbb
or
mov
sbb
jp
mov
jae
ss
xchg
xchg
pop
inc
cmp
xchg
imul
loopne
xchg
xchg
jns
xchg
imul
sub
repz
push
push
repz
aaa
push
in
add
sbb
pop
arpl
pop
ss
jmp
mov
push
stos
flds
jne
xchg
pop
add
out
mov
jge
hlt
int
fistpl
call
pusha
imul
mov
imull
mov
sbb
das
push
mov
subl
sti
xchg
sub
mov
or
sub
add
xchg
leave
cmpb
mov
mov
inc
stos
adc
adc
push
sub
mov
xchg
loop
jne
inc
fldenv
sub
adc
add
icebp
or
int
xchg
fxch
sahf
cs
pop
cmp
leave
jl
movb
out
mov
mov
xchg
lods
lahf
repz
push
pop
fsubr
clc
mov
rcrb
cmpsb
sbb
inc
push
mov
mov
in
mov
ret
mov
inc
pusha
or
mov
idiv
fstpl
xchg
idiv
cli
xor
push
jbe
fstl
jbe
scas
mov
lret
xor
xor
loopne
nop
add
xor
inc
adc
dec
adc
cmp
jae
insb
jns
adc
push
jge
gs
imul
mov
int
leave
lret
ljmp
pop
push
movsb
lods
xor
pop
push
cwtl
pop
inc
dec
jp
dec
adc
mov
div
jne
test
pop
or
sbb
dec
push
and
sbb
xor
xor
and
push
dec
inc
out
xchg
imul
sbb
inc
stos
in
inc
xchg
enter
sti
mov
push
lea
das
jp
push
pop
aaa
js
dec
or
aaa
inc
stos
lahf
xchg
movsl
mov
outsb
cmp
jge
push
cmp
or
sbbb
stc
add
call
xchg
mov
imul
scas
outsb
lea
test
loopne
mov
adc
adc
mov
arpl
jle
push
inc
gs
sbb
inc
stos
stos
adc
outsl
sub
pop
sti
xchg
xchg
repnz
into
fwait
cmpsb
fwait
aam
cmpsl
into
xchg
aad
outsb
mov
cmp
bound
mov
push
cs
ds
pop
aaa
imul
and
and
and
pop
pusha
pop
mov
out
cli
mov
or
push
dec
sbb
dec
pop
sub
xchg
les
sub
out
jecxz
out
ror
xchg
jecxz
rcrb
out
shr
mov
loop
loope
inc
inc
and
add
mov
mov
or
mov
lea
jmp
gs
shl
xlat
mov
cmp
add
scas
ret
lret
pop
sahf
mov
xchg
or
lds
sbb
add
pop
sti
mov
fs
sahf
ficomps
incl
cld
ljmp
hlt
pop
dec
or
lret
in
shr
jp
pop
dec
js
ja
pop
cmc
mov
subl
out
rcr
xchg
test
fcomp
add
push
cmp
push
pop
aas
fucomip
cli
int3
add
xchg
ljmp
iret
int
and
inc
push
sbb
push
outsb
leave
adc
test
dec
js
xchg
divl
pop
xor
stos
dec
pop
xor
push
jae
push
dec
insb
mov
cwtl
sbb
cmp
dec
mov
rcl
dec
push
jmp
enter
push
pop
addr16
mul
cmpsb
and
lock
jnp
ror
adc
popf
imul
rol
adc
or
xchg
dec
push
incb
jge
cld
sub
out
jb
xchg
pushf
adc
pop
lcall
cmp
pop
inc
sahf
xchg
lods
pop
mov
stos
sub
fstpl
adc
fisubrl
lods
sub
mov
add
das
lds
movsl
orb
mov
pop
jno
sar
gs
jnp
fs
outsl
sub
cmp
sbb
das
cmpl
mov
inc
lcall
out
xchg
loopne
cmpsl
sbb
xchg
pushf
es
lret
pop
hlt
sub
cmp
in
subl
leave
xor
fdiv
lcall
cmp
stos
xchg
jnp
push
pop
dec
cmp
pop
pop
test
test
lds
cmp
cmp
adc
inc
imul
cmp
bound
add
push
add
mov
sbb
xchg
fucompp
lds
mov
and
jge
jae
mov
mov
popf
mov
pop
das
pop
sahf
mov
push
jl
ja
xor
cmp
jnp
or
in
fdivrs
mov
out
movsl
mov
mov
inc
and
pop
dec
ret
aad
inc
add
dec
movl
mov
pushf
movw
movl
push
lea
jmp
push
pushf
movl
movw
movb
pushf
pusha
lea
jmp
into
cli
imul
add
inc
push
adc
lcall
jnp
cmc
flds
aam
mov
out
out
fbld
iret
insb
lock
adc
popf
mov
mov
add
and
cmp
dec
stos
add
pop
imul
jne
inc
ss
call
movl
call
and
jl
jae
add
sbb
cmp
xchg
mov
stos
aam
pop
jbe
insl
mov
push
sub
adc
xchg
mov
je
cmp
mov
int3
aas
pop
imul
jg
jge
gs
mov
popa
pusha
repz
enter
addl
mov
jne
fldl
push
cltd
in
dec
jb
add
enter
mov
pop
mov
cmp
mov
sbb
jp
insl
mov
sahf
xchg
repnz
stos
cwtl
cmp
insb
pop
je
and
lock
stos
aam
push
popa
inc
xor
and
shl
rcrl
cs
mov
xchg
push
jl
jae
dec
or
jne
xor
adc
or
add
xchg
enter
inc
and
push
push
and
imul
jnp
cmp
jecxz
xchg
in
andb
push
pusha
call
movl
pushf
push
jmp
call
adc
jnp
jae
pusha
popa
push
push
sbb
flds
faddl
sbb
add
lcall
loopne
xchg
xchg
mov
mov
lcall
jne
pop
adc
inc
sub
sbb
ds
sbb
cmp
mov
push
cmp
out
cs
xor
stos
or
pop
jae
or
popa
push
icebp
jne
ja
stos
xchg
test
out
or
mov
daa
jno
cmp
add
es
ja
dec
mov
in
out
xchg
xchg
repz
test
mov
mov
mov
or
add
test
push
pop
fsubrp
int3
leave
loop
mov
mov
insl
fdivrs
jae
enter
enter
cmpl
jg
sub
fisubrs
jge
pop
addr16
sbb
pop
sbb
or
adc
mov
fmuls
stc
ficoml
mov
jp
jae
daa
inc
pop
adc
pop
push
dec
adc
xor
scas
mov
cmpsb
mov
mov
or
scas
sbb
stos
aad
out
in
mov
loopne
movsb
jmp
push
jmp
sti
repz
test
hlt
mov
cmpsb
mov
adc
aas
add
nop
outsb
sahf
lret
xchg
scas
jmp
shll
cmp
jmp
arpl
pusha
inc
insb
inc
add
or
or
pusha
call
sarl
mov
fbstp
mov
hlt
test
loopne
in
stos
test
neg
add
sbb
sub
insb
adc
loopne
shlb
pop
bound
or
cltd
popf
jl
ds
ss
scas
js
mov
lods
or
lods
sti
push
inc
ja
icebp
dec
xchg
mov
lret
clc
ror
aad
fsubp
jecxz
arpl
adc
push
push
ss
adc
sub
add
inc
pop
and
rorl
push
roll
jns
jae
add
pop
jne
adc
push
mov
icebp
sahf
mov
into
daa
hlt
hlt
ja
test
dec
sbb
xor
push
addr16
paddusw
psubd
mov
rol
insl
cwtl
mov
cwtl
dec
jbe
jnp
push
das
adc
scas
push
outsl
sub
jo
jo
jl
sbb
pop
mov
in
xchg
inc
call
pushl
mov
movl
pushf
pushl
lea
jmp
int3
pusha
movl
call
dec
inc
std
js
jae
lahf
stos
fiaddl
cmpsl
imull
push
in
cld
dec
mov
adc
addl
cmpsl
adc
cmp
stc
repnz
aad
jecxz
fsqrt
fstl
cmc
mov
out
push
cltd
cmp
fucompp
xchg
movl
pushf
movb
pushl
push
lea
jmp
call
pushf
pushf
movl
call
iret
out
js
jae
inc
addr16
push
dec
pop
xor
dec
dec
in
inc
insl
aad
or
pop
jg
cmp
test
mov
rclb
popf
rep
mov
inc
sbb
and
or
imul
icebp
icebp
sbb
test
xchg
mov
int
mov
pop
jl
dec
inc
je
or
adc
jl
sbb
neg
cltd
inc
jp
js
jae
fs
adc
jns
and
mov
mov
add
mov
xchg
xlat
sahf
xchg
mov
aam
cmpsl
mov
cli
cli
pop
push
xor
sub
movsb
jns
daa
fabs
movsb
sti
adc
cwtl
lds
lock
xchg
jmp
xlat
in
nop
repz
push
jno
inc
and
ret
cmp
inc
dec
decl
and
xor
inc
pusha
movw
lea
jmp
pushf
movl
pusha
lea
jmp
call
pusha
movl
jmp
subb
cmp
sbb
add
dec
pop
pop
push
jb
or
sub
mov
lahf
mov
sbb
sub
xchg
mov
sahf
xchg
xchg
mov
adc
mov
lods
out
mov
iret
fdivr
jmp
jg
jbe
jae
jge
insl
inc
add
or
dec
je
adc
adc
and
dec
inc
mov
je
xor
mov
pop
pop
ret
dec
push
lahf
idivb
inc
dec
cli
test
addb
shr
push
sub
arpl
outsl
inc
arpl
adc
push
arpl
or
add
nop
push
fcmovnbe
int3
je
aas
cltd
pop
pop
pop
dec
add
inc
push
mov
ss
xor
jae
lcall
loope
xchg
mov
mov
in
fdivrl
sbb
add
ret
inc
mov
pop
and
stc
xor
push
jnp
insb
cmp
mov
push
inc
or
lahf
xlat
jg
sbb
in
cwtl
mov
sahf
add
mov
test
fsubr
cmp
imul
iret
mov
inc
sbb
ror
push
pop
xchg
out
loop
jp
repz
sub
les
cmp
push
cli
shll
and
scas
int
gs
jo
inc
jecxz
out
sub
das
jnp
in
ret
sti
mov
xchg
aas
add
aaa
std
sbb
cld
lods
mov
cmpb
adc
outsb
adc
mov
mov
push
push
xlat
scas
and
shl
xchg
jle
enter
repnz
movl
mov
lea
jmp
in
lock
test
lcall
bound
mov
xor
push
js
add
fs
push
popa
adc
jl
fs
les
cmp
imul
xchg
push
pop
sub
sbb
push
add
or
jmp
sub
je
jae
pusha
jne
inc
inc
jns
imul
push
pop
std
sti
cs
xor
in
stos
mov
insb
inc
insb
pop
dec
xchg
fimull
frndint
mov
es
cmpsb
mov
gs
cmpsl
xchg
cltd
pop
add
jecxz
sub
adc
sbb
sub
aad
push
inc
lea
mov
mov
movsb
stos
sti
fidivrs
outsl
pusha
cld
sub
mov
lahf
mov
add
shrb
inc
dec
push
push
pusha
arpl
cmp
ret
in
maxps
xor
xchg
mov
mov
icebp
mov
movsl
loope
scas
cli
inc
sbb
push
inc
in
enter
js
push
mov
std
repz
enter
sub
mov
and
mov
stos
adc
jecxz
pop
inc
loope
lret
sbb
or
in
in
mov
in
xchg
pop
in
shl
push
cmp
jne
std
sti
xchg
les
mov
or
jb
inc
sub
out
pop
inc
jge
test
test
mov
mov
jb
push
std
sti
push
imul
mov
stos
mov
jns
imul
rcrl
adc
insb
dec
je
adc
add
sub
jl
xchg
pop
ret
cwtl
sar
inc
inc
and
fcomps
mov
push
pushf
lea
jmp
xchg
aam
jo
xchg
push
das
scas
call
push
push
movl
push
pusha
mov
pushf
lea
jmp
test
jae
into
sti
lret
rep
repz
scas
test
outsl
popa
inc
inc
sub
decl
das
lcall
fmuls
rcll
stos
ficoml
fsubl
jg
out
addr16
cltd
pop
jnp
pop
pmaxsw
aaa
sbb
sub
push
add
arpl
push
dec
dec
inc
inc
outsl
dec
es
and
add
fistps
les
adc
mov
xor
adc
adc
es
jbe
and
sbb
xor
outsb
out
sbb
test
mov
dec
add
push
fbstp
xor
push
call
movl
movl
jmp
xchg
adcb
jae
fsub
mov
fdivr
rcll
movsl
fisttpll
or
and
in
mov
out
mov
shlb
loop
mov
ljmp
xchg
gs
adc
sbb
cmp
mov
and
pop
mov
int3
cmp
arpl
lcall
ss
xor
sub
cmp
jp
mov
ror
ret
cltd
into
cmc
std
inc
cmc
dec
xor
push
pop
add
push
lock
std
std
test
lods
ret
jbe
sbb
rol
cmp
mov
pop
xor
jmp
fmull
jno
in
cmp
hlt
and
aam
push
lret
add
jecxz
and
test
mov
xchg
loope
sahf
out
addl
jae
xchg
push
xchg
shl
or
add
jmp
push
rorl
jno
jmp
roll
mov
xchg
xchg
mov
add
les
xchg
nop
lods
sub
in
adc
push
imul
inc
mov
xlat
or
add
dec
stos
nop
inc
sbb
imul
pusha
outsl
add
sub
jmp
scas
stos
sbb
jae
xchg
lret
mov
or
lods
sub
xlat
cmp
jecxz
push
pop
pop
cltd
adc
sub
jg
pop
jbe
push
imul
mov
adc
ret
fnclex
test
shr
jp
push
mov
imul
bound
subb
fcmovb
jae
and
cld
icebp
inc
add
scas
daa
nop
adc
adc
inc
rcrl
xchg
ficomps
xor
out
test
inc
stos
mov
imul
dec
xor
in
mov
mov
xchg
test
fiadds
int
push
push
add
cli
mov
or
jl
ja
and
mov
divl
test
test
or
adc
lods
adc
ja
xchg
stos
cli
repz
fcmovnu
fists
pusha
into
movsl
lock
lret
int3
mov
cltd
int3
cwtl
dec
jo
jae
add
cmp
cmp
es
stos
testb
dec
pop
cltd
and
int3
stc
clc
test
int3
in
enter
mov
lahf
loop
mov
out
jg
leave
out
mov
cmp
cmpsl
mov
jbe
sub
outsl
mov
xor
push
jo
andl
pop
out
fwait
neg
bound
jnp
pop
inc
add
jp
jg
push
adc
sub
adc
les
mov
mov
scas
clc
mov
mov
cld
out
cld
adc
leave
jl
test
jecxz
out
sti
leave
int3
mov
repz
jg
ds
stc
pop
mov
fsubp
xchg
cmpsl
out
mov
in
inc
jge
cmpb
das
push
sub
push
cmp
mov
mov
cmp
sti
mov
fsubrl
push
fimull
cli
int3
std
push
dec
cltd
in
repz
in
test
jae
popf
icebp
fdiv
fsubrs
fisttps
dec
jge
push
adc
xor
shl
lock
adc
lods
cwtl
in
mov
out
leave
cli
or
mov
dec
push
add
xor
insl
aas
rorb
fstpt
push
xor
and
ja,pt
jno
loope
pop
inc
ds
dec
mov
mov
mov
cmpsb
movsl
lea
push
pop
sub
call
fucom
mov
jae
sbbl
mov
xchg
scas
add
and
mov
xchg
add
mov
dec
stc
test
in
inc
jmp
int
fs
pop
jbe
in
cmp
xchg
cltd
les
push
jnp
and
outsb
pop
aaa
arpl
sub
xor
dec
sub
and
xchg
mov
sub
mov
adc
popa
dec
push
call
aad
in
lods
inc
stos
dec
daa
push
pop
sub
fs
js
push
daa
sbb
movl
pushf
mov
movl
pusha
pusha
push
pushl
lea
jmp
jmp
add
jae
mov
xchg
mov
cmc
mov
xchg
loopne
mov
or
xor
jb
or
pop
or
shl
insl
test
push
or
pop
dec
imul
aaa
mov
daa
test
inc
inc
ja
rorl
inc
aam
scas
bound
or
or
inc
push
es
rcll
bound
ja
jg
or
sbb
jp
adc
xlat
mov
ljmp
gs
push
push
and
add
insb
lcall
mov
mov
and
dec
fwait
rcrb
jmp
movl
mov
lea
jmp
outsb
push
adc
jae
adc
and
add
and
add
rorb
sti
enter
test
pop
rcl
js
pushf
push
into
sbb
xlat
push
xchg
cmpsl
jb
add
xor
sbb
sub
cmp
adc
fdivr
lea
test
rsqrtps
outsb
jg
jae
dec
sub
or
mov
dec
inc
mov
cwtl
add
xchg
mov
int
fnsave
push
push
push
imul
push
cs
mov
out
cmpb
je
stc
sub
jmp
ljmp
mov
xorb
mov
push
sbb
push
mov
je
dec
outsl
insb
xor
or
add
xchg
stos
loope
xchg
dec
jae
in
xor
sub
push
pushf
movl
push
lea
jmp
call
pusha
movl
pushf
movl
push
push
lea
jmp
jmp
jmp
movl
pusha
pushf
movl
movl
pusha
pushl
push
lea
jmp
add
add
call
mov
push
jo
adc
pop
cmp
or
or
cmc
int
inc
hlt
out
int
dec
xorb
lcall
dec
pop
push
pop
or
add
sbb
in
cmp
inc
and
xor
fwait
ret
jae
fisubl
cmc
test
test
enter
cli
dec
push
test
mulb
mov
cmp
xchg
push
cltd
push
idivb
jns
enter
pop
jb
add
mov
jmp
test
dec
sahf
pop
daa
movsb
in
out
dec
adc
movups
movsl
das
add
inc
hlt
lcall
push
xor
dec
adc
je
and
add
pop
pop
je
mov
mov
cmp
push
jae
xchg
sti
scas
stos
cmpsb
lahf
xchg
xchg
lret
jne
popf
hlt
aad
hlt
ljmp
andl
mov
mov
jne
shll
mov
xor
cmp
or
inc
xor
add
add
jae
rclb
ror
cli
ret
ljmp
jns
cmp
push
cli
ret
xor
cmp
sbb
cmp
push
xorl
cwtl
fisubl
rorb
int3
xchg
add
test
xchg
in
stos
mov
mov
jae
int
stc
cld
ror
aad
mov
sbb
sbb
and
addb
les
mov
jge
or
sbb
pop
jo
inc
mov
test
data16
outsb
inc
xor
cmp
xlat
lahf
mov
push
gs
mov
clc
out
jne
jle
scas
mov
arpl
push
ljmp
add
mov
sbbl
ret
cli
out
push
clc
out
dec
inc
imul
jl
inc
jns
xor
xor
adc
iret
call
aad
cmpsl
movsb
cmpsb
mov
mov
jp
fcomps
cmpsl
fbld
cmp
pop
jb
mov
leave
mov
imul
fmuls
xor
xchg
out
sbb
aas
or
cld
fdivrs
push
push
pop
adc
or
fsubrs
roll
inc
mov
add
dec
stos
jmp
xchg
lds
test
movsl
xchg
cld
movl
mov
mov
push
lea
jmp
push
mov
movl
pushf
pushf
lea
jmp
imul
ja
push
push
pop
std
sahf
lret
in
sahf
lahf
sbb
arpl
jbe
fwait
outsl
cmp
sbb
sub
pop
jbe
es
inc
mov
xor
sub
push
or
mulb
movsb
dec
loope
and
out
outsb
add
sbb
int
mov
inc
xor
dec
sbb
xor
mov
mov
ret
inc
shr
into
cmp
roll
push
fildll
jnp
xchg
outsb
in
dec
or
push
sub
pop
addr16
aas
adc
push
dec
jns
arpl
test
mov
dec
data16
pop
inc
pop
sbb
dec
cld
shr
std
mov
mov
lea
push
jp
jle
es
orb
mov
mov
popa
lcall
pop
or
push
dec
sbb
stos
cli
lds
addr16
lret
icebp
stc
xchg
nopl
addr16
mov
cmpsb
or
movsl
rcrl
mov
mov
push
add
pop
push
push
das
push
sbb
ret
int
shrb
mov
mov
inc
gs
adc
imul
add
inc
dec
jl
sub
test
or
dec
push
or
sbb
bound
ljmp
pop
sbb
dec
js
jg
and
sbb
jbe
pop
loopne
or
mov
push
push
pushf
pushf
call
movl
mov
pushf
movl
lea
jmp
jmp
jmp
rcll
mov
xchg
lock
pop
std
std
test
xchg
imul
inc
cmpsb
sahf
vmovdqu
sub
inc
pushf
mov
pop
cld
ss
xchg
pushf
in
jge
pop
in
fmuls
add
ljmp
out
add
repnz
imul
push
push
scas
test
adc
sarl
ret
enter
fmull
and
xchg
mov
add
movw
lea
jmp
pusha
movl
jmp
cmc
std
andb
inc
xor
mov
push
fimull
inc
inc
jp
mov
mov
dec
push
pop
push
pop
daa
hlt
setl
mov
mov
les
std
test
je
jg
mov
xchg
out
clc
mov
cwtl
sbbb
xchg
push
xchg
jl
mov
and
add
inc
and
jl
out
mov
fs
jmp
movb
movl
mov
pusha
lea
jmp
movl
push
pushf
lea
jmp
insl
cmp
outsb
push
pop
imul
push
imul
cmp
pop
jle
adc
sub
mov
lret
int
dec
lret
mov
ret
xor
pusha
push
mov
mov
in
aam
repnz
loop
into
int3
ror
and
lret
inc
mov
sbb
cmp
adc
xor
jbe
iret
out
inc
push
subb
out
repnz
mov
mov
icebp
cli
test
fidivrl
fcomip
sub
cmpsl
test
push
call
movl
pushf
movl
mov
pushl
pusha
lea
jmp
rcr
arpl
jae
aas
ss
lcall
icebp
jnp
lret
jge
aaa
and
jns
ljmp
push
outsl
punpcklbw
mov
mov
lret
scas
dec
andb
mov
repz
mov
add
push
mov
mov
in
inc
xor
xor
sub
push
popa
push
xor
sub
fadds
or
ror
push
sbb
inc
jnp
aaa
dec
cmp
daa
or
xchg
and
cmc
outsl
rclb
movsl
fs
cmp
xlat
cmpb
imul
push
push
in
mov
xlat
loopne
and
inc
cmp
or
daa
cmp
push
push
jb
add
jge,pn
mov
repz
sarl
dec
call
mov
daa
push
sub
cmp
push
sub
inc
xor
dec
negb
jnp
nop
lock
aas
scas
cs
and
imul
mov
aad
mov
lret
fadd
inc
and
idiv
ret
call
dec
push
rcll
sbb
outsl
push
or
jle
inc
pop
push
xlat
mov
aas
cmc
mov
lods
sbb
sub
lea
addb
imul
stos
mov
mov
neg
repnz
mov
int3
bound
jnp
