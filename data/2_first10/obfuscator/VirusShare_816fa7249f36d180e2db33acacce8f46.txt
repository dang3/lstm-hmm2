sbb
add
sub
and
dec
decl
xor
jp
stos
ss
lret
sub
pop
outsb
or
add
push
out
lret
jns
pop
jns
fnstsw
ret
mov
sahf
loop
xchg
shr
test
enter
fnstenv
aad
pushf
add
inc
jmp
jae
pop
xor
lock
insl
inc
xchg
popf
lahf
fwait
iret
inc
outsl
jae
push
dec
cmp
inc
cmpb
inc
mov
lahf
push
in
aam
in
sub
rcrb
push
arpl
fwait
dec
adc
lods
xchg
jg
push
dec
pop
dec
enter
cmp
cmp
jl
out
xchg
jne
add
dec
shll
push
sub
inc
mov
je
call
fidivrs
pop
sub
mov
leave
dec
or
mov
jo
adc
pusha
and
jmp
adc
leave
cmp
stc
lea
stos
fdivs
xchg
imul
scas
xor
sti
push
lock
pop
pushf
hlt
fidivs
mov
and
loope
xchg
ja
mov
lods
ljmp
dec
pop
pop
insl
pop
fldcw
fs
mov
lret
jl
mov
or
sub
outsb
insb
jns
or
out
scas
adc
mov
icebp
out
repz
hlt
cwtl
sbb
das
mov
lret
test
xor
mov
in
lods
adc
fmull
ret
pop
xchg
fsubr
ds
jle
xlat
lret
dec
adc
fsubs
cli
mov
push
aad
jg
mov
sbb
xlat
mov
mov
fcompl
fwait
ds
dec
mov
into
out
dec
je
movsb
sarl
aaa
lcall
add
add
jmp
ja
sbb
cmp
mov
sarb
fidivl
mov
jge
aam
pop
jb
divb
nop
sti
pop
adc
fwait
scas
stc
adc
mov
data16
enter
jle
pop
push
lret
dec
jl
pop
dec
pop
arpl
js
mov
mov
fdivs
lret
cmpsl
dec
xchg
shll
push
dec
jns
iret
daa
fwait
push
and
jne
mov
daa
test
andb
movsb
mov
mov
add
jge
mov
dec
clc
nop
mov
dec
fsts
adc
es
dec
inc
push
jno
push
and
outsb
cmpsl
xor
sub
les
mov
cmpsl
pusha
loope
push
adc
dec
push
lds
test
dec
dec
cmp
jns
mov
imul
fimull
test
xchg
arpl
cs
dec
popa
pop
dec
aas
inc
test
mov
lret
push
clc
cmp
gs
mov
pop
add
xchg
dec
mov
enter
sbb
les
and
xchg
sub
cmp
xor
fcmovnb
sbb
add
lret
aad
icebp
or
add
cmpsb
dec
pushf
cwtl
mov
insb
fst
jle
xor
int
fsubr
add
imul
das
lret
mov
xchg
and
insl
xlat
dec
pop
inc
push
scas
push
rol
mov
in
adc
or
stos
into
adc
push
movsl
dec
and
popa
cltd
je
jb
cs
or
out
sub
jns
inc
insb
inc
fiadds
sbb
nop
movsl
das
dec
push
aaa
sti
das
ret
xlat
xor
dec
pusha
pop
push
sbb
dec
rorl
xchg
je
xchg
loope
mov
add
push
xor
loop
push
stos
sbb
stos
mov
jbe
push
call
in
jno
or
js
add
pop
sub
jnp
ds
dec
out
adc
rcrb
cwtl
aas
or
push
and
inc
adc
cld
outsb
jae
in
popl
fldl
inc
push
outsl
mov
and
loopne
iret
jge
push
flds
sbb
mov
adc
or
fadds
sbb
or
sahf
pop
mov
adc
fdivr
je
xchg
and
jns
mov
mov
push
mov
dec
rcr
push
xor
addr16
cmp
dec
or
sub
push
or
or
and
test
gs
clc
out
lret
test
pop
and
dec
or
aam
lods
addb
cli
xor
dec
jmp
jne
mov
pop
push
jg
cmp
mov
push
jno
fnsave
cltd
dec
aaa
xchg
sbb
sbb
subb
cmp
scas
in
push
jno
push
out
add
cmc
out
mov
inc
dec
add
popf
or
jl
xchg
push
fcomip
xor
loopne
aaa
xchg
loope
dec
dec
lret
pop
mov
jne
xchg
cli
mov
in
push
dec
jp
in
mov
or
into
dec
cmpsl
inc
repnz
ja
pop
rcll
add
int
imull
sbb
jns
add
stos
pop
xchg
push
push
fsubs
mov
push
mov
loop
push
loop
mov
hlt
out
sub
fs
xor
jge
repnz
out
pop
jno
aam
lea
dec
jle
mov
add
in
and
mov
sub
jmp
sahf
lds
mul
ficomps
mov
xchg
dec
push
cmp
cs
xor
sbb
out
jns
pop
jle
in
loopne
sub
pop
mov
jge
sub
inc
push
inc
rclb
popf
add
shr
jg
in
and
jno
xchg
es
sub
push
mov
rorb
or
clc
add
xchg
cmp
fs
daa
mov
dec
pop
push
iret
popf
loop
add
bound
jmp
icebp
data16
lea
ret
popa
in
mov
lret
rolb
xlat
push
mov
cmpsb
fdivrl
ss
nop
int3
icebp
mov
add
sbb
testb
sbb
scas
cmpsb
add
mov
pop
mov
inc
sub
sub
sub
frstor
mov
mov
adc
jae
jo
push
mov
mov
jle
lea
adc
adc
xor
pop
iret
push
mov
sbb
dec
push
jne
jmp
lods
inc
in
xor
xchg
test
xor
scas
movsl
inc
ret
pop
shll
fcomps
lcall
cld
icebp
sub
cli
jmp
and
push
and
data16
jae
insl
or
int3
adc
fdiv
lods
pop
les
sub
mov
xchg
daa
clc
dec
das
cmp
adc
lock
push
cmc
pushf
ljmp
cmp
dec
jo
fs
fdivrl
jmp
or
cmpsb
sub
lahf
sti
arpl
xchg
jle
mov
outsb
mov
xor
leave
push
fcmovb
jo
inc
into
or
fs
mov
cltd
frstor
test
cmp
xchg
mov
lret
bound
add
sarl
cmp
out
cwtl
lcall
push
int
dec
jae
ret
cmp
xchg
xorb
mov
inc
push
pop
inc
inc
lods
sbb
lcall
or
push
push
push
test
popa
daa
xlat
push
push
cmp
xor
and
add
fidivrs
flds
stos
and
and
imul
and
pop
xor
adc
mov
push
pop
sbb
jbe
in
dec
mov
sbb
inc
lods
je
mulb
inc
sbb
pusha
mov
xor
jnp
lods
xchg
cmp
dec
pop
ds
xor
adc
jge
push
movsl
scas
dec
ja
sub
loope
jnp
xor
dec
cld
xor
sbb
mov
int
sub
inc
mov
aas
in
xor
dec
stos
dec
scas
xor
scas
add
pop
xchg
dec
dec
dec
inc
mov
mov
mov
adc
sub
sub
or
sahf
ja
mov
stos
inc
ror
jge
mov
push
popa
cmp
test
pop
xor
lcall
repnz
out
dec
and
fists
das
xchg
fidivl
fisttps
clc
je,pn
aaa
scas
or
in
rcrl
xchg
cmc
nop
dec
scas
jno
dec
notb
mov
xchg
ja
ret
dec
imul
ret
add
mov
shll
ja
inc
mov
bound
mov
inc
dec
jbe
ljmp
lahf
sub
cmp
and
adc
rol
aaa
sarl
je
nop
sub
cld
ss
mov
add
ljmp
inc
mov
outsl
cmp
inc
jo
jns
mov
inc
dec
in
mov
mov
fstps
scas
mov
mov
cmp
pop
lock
cmc
mov
fidivl
push
mov
sub
jno
rcll
jo
and
jo
lea
or
cmp
flds
mov
int
or
je
loopne
sbb
push
inc
add
scas
or
jne
and
sub
and
mov
sbb
push
stc
ja
cs
fwait
cmp
ss
mov
sub
push
jns
cmp
mov
xor
push
sbb
adc
add
lcall
stos
mov
std
cli
sub
adc
mov
hlt
mov
inc
lret
lcall
int3
push
mov
packuswb
or
aas
imul
pop
pop
pop
sub
push
dec
out
mov
aas
mov
mov
xorb
shlb
lcall
sbb
mov
or
test
pop
mov
pop
lock
jecxz
mov
pop
mov
jp
or
push
pop
cs
cmpsl
cld
mov
fnsave
jb
jno
outsb
sbb
outsl
ds
mov
aas
incb
out
jae
mov
clc
and
in
xor
mov
and
imul
mov
dec
mov
push
mov
pop
fadd
pop
xchg
jp
ljmp
rcll
loop
pop
insl
dec
mov
push
lock
mov
sbbb
cmc
mov
pop
sbb
mov
fcoml
loopne
fdivs
push
jp
iret
das
popf
sbbl
cltd
mov
sbb
cmc
cltd
mov
lret
mov
xlat
cmc
and
testb
mov
push
mov
shll
pop
inc
dec
and
js
or
int
loopne
mov
dec
lods
stos
mov
lock
sub
pop
inc
sbbb
test
test
sub
popa
push
sub
cld
scas
mov
cmp
sbb
dec
lahf
ja
jnp
les
movsl
add
sbb
out
inc
test
inc
pop
sahf
pop
shr
fdivl
outsl
popf
inc
lds
xchg
rcrl
xchg
push
les
sarl
stos
mov
push
inc
mov
stos
xor
and
lods
mov
popf
mov
jmp
add
adc
pxor
adc
aas
cmpsb
ds
ficoml
arpl
pop
xchg
out
inc
pop
push
mov
insb
push
mov
rclb
add
call
add
mov
enter
adc
shl
adc
mov
cli
inc
or
lods
ljmp
popa
notl
inc
mov
push
inc
test
cld
es
cmp
pop
loopne
mov
mov
fimull
cltd
add
adc
adcl
ror
aas
icebp
in
or
data16
imul
lret
pop
aaa
pop
sahf
sbb
push
lods
mov
sbb
xor
push
jge
xlat
jg
mov
mov
xorl
mov
daa
into
ljmp
cmpsl
push
adc
xchg
rclb
negl
inc
pop
outsl
mov
dec
pop
lret
push
rorb
xor
add
add
repz
scas
lods
das
push
leave
outsl
stos
ret
sti
callw
test
and
imul
gs
shr
gs
imul
push
lahf
aam
ficompl
movsb
mov
sbb
arpl
push
inc
out
mov
or
pop
jmp
fldcw
dec
jno
cmp
mov
outsl
sub
adc
inc
and
adc
xor
stos
cltd
test
jmp
in
jle
adc
iret
pop
jle
and
jg
mov
in
sti
add
leave
ja
je
pop
test
pop
fs
jge
les
test
or
cmp
mov
aaa
mov
pushf
lods
xchg
xchg
dec
xchg
cwtl
xor
ljmp
xor
addr16
mov
pop
jne
mov
movsl
and
push
inc
or
hlt
js
jne
dec
push
daa
shrb
fwait
test
fsubl
push
xor
mov
insb
xlat
rorl
icebp
push
mov
inc
inc
sub
enter
aam
cmp
mov
cmp
cs
xchg
push
repnz
sub
out
or
cmovbe
popl
push
sti
add
mov
inc
jg
pop
fcomps
jnp
push
movsb
cmp
cmpsl
add
fucom
daa
mov
cmp
movsb
jl
cmpsl
and
mov
add
data16
jecxz
hlt
mov
out
outsl
addr16
incb
pop
mov
pop
das
in
adcb
arpl
jo
data16
add
mov
xor
adc
cmp
push
mov
jbe
out
insl
pop
ja
mov
sbb
adc
mov
add
dec
cwtl
adc
jecxz
xor
mov
outsl
and
cwtl
add
cmp
inc
jl
cmp
notw
jns
loopne
mov
sub
fs
push
ja
mov
pop
fildl
lret
cmpsl
enter
xchg
mov
out
movsl
pop
xor
imul
inc
into
int3
insb
out
cmc
pushf
sub
cltd
inc
ret
lods
pushf
loope
in
fadds
push
cltd
push
xchg
sti
js
rorl
cmp
adc
inc
xchg
ss
out
jb
movsb
enter
lods
mov
cmpb
mov
pop
inc
lret
test
dec
push
mov
movsb
mov
pop
push
xchg
adc
rolb
mov
xor
adc
in
test
xor
xor
cmp
jg
icebp
sahf
sbb
test
int
add
adc
jo
sbb
out
or
pop
inc
mov
mov
mov
mov
cmc
push
loopne
pop
adc
into
and
jb
ret
mov
push
icebp
and
aad
adc
pushf
loope
lcall
sub
ja
jbe
push
cwtl
mov
jo
imul
xor
xchg
loop
fs
cmp
out
mov
stos
addr16
jb
or
mov
jg
mov
dec
ret
ja
mov
add
out
xor
dec
jae
xor
cmp
fsub
mov
lcall
sub
push
in
int3
es
sbb
add
mov
add
pop
dec
lahf
xlat
insl
or
std
adc
outsl
sahf
xchg
iret
push
mov
out
cli
ss
jns
ret
cmp
in
fwait
dec
cmpsb
jae
fcmovnu
out
pop
add
jge
daa
out
in
call
subb
push
aad
js
test
mov
xchg
les
rclb
mov
or
push
jbe
hlt
inc
aad
jns
jbe
xchg
loop
sti
clc
sub
adcb
aaa
inc
out
out
pop
jecxz
lds
or
pop
or
and
sub
jae
pop
jb
dec
rorb
cmp
push
loop
outsb
cmpsl
adcl
or
in
jecxz
pop
out
fiaddl
mov
in
outsl
push
push
sti
leave
pop
xor
xor
and
aad
sbb
mov
test
ljmp
xor
adc
jnp
mov
mov
sbb
daa
xor
mov
mov
lods
cmp
jno
jae
or
mov
movsb
shll
cwtl
push
jle
mov
sub
inc
sub
aad
xor
cmp
xor
push
add
inc
shll
xchg
and
dec
mov
iret
push
push
insl
pop
mov
xor
jl
mov
into
jne
mov
aam
push
add
sub
sub
sub
pop
out
ret
sbb
pop
fucom
xchg
xor
shr
jp
stc
stos
xor
aaa
xorb
imul
cmp
pop
insb
in
cmpsl
ss
movswl
jne
movsb
lods
into
inc
push
rolb
mov
sbb
xor
xor
pop
fmuls
js
add
push
cmp
sbb
enter
in
clc
lret
dec
lcall
pop
pushf
js
nop
push
xor
mov
pop
sahf
push
jb
push
mov
popa
or
out
addr16
mov
or
jp
adc
xchg
sub
repnz
ss
adc
add
sbb
inc
push
mov
jl
pop
roll
je
mov
stos
push
jmp
mov
xchg
fists
and
cmp
out
add
nop
sub
xor
add
push
pop
mov
roll
ljmp
jnp
mov
inc
je
adc
cmp
sub
rorb
jecxz
jae
pushf
pop
mov
insb
aad
stos
inc
les
and
add
popf
mov
inc
rol
lds
in
or
sub
test
shll
movl
ja
push
rcrb
movsb
cmp
int3
ja
popf
xchg
jecxz
stc
inc
xchg
inc
or
inc
lods
dec
push
jae
outsb
push
push
jae
xor
mov
iret
ret
movsb
push
push
add
ret
pop
inc
arpl
xchg
stos
or
pop
fisttpl
dec
adc
sub
inc
mov
inc
fisttpll
arpl
dec
mov
add
aad
mov
mov
xor
repnz
push
mov
sahf
or
jo
xor
mov
sub
push
rcrl
lds
cmpsb
fstl
ss
sub
inc
cmp
es
sbb
enter
fnsave
xor
adc
testl
or
in
repnz
and
push
dec
scas
sbb
mov
sub
jmp
adc
xor
cmp
xor
mov
cli
add
add
pop
xchg
loopne
mov
xchg
test
or
xor
pop
push
adc
lcall
mov
bound
int
sub
repz
fldl
leave
aaa
fildl
popa
add
insl
mov
sbb
pop
pop
pop
pop
cmp
loopne
push
movsl
and
data16
movsl
aas
xchg
mov
xchg
adc
dec
jne
pop
push
rol
push
daa
stos
jae
add
or
add
loope
push
mov
roll
cmp
addr16
nop
fsubs
les
jo
rcrl
lock
out
gs
rcrl
adc
aam
add
cwtl
add
frstor
lods
inc
and
fnstenv
out
out
adc
ja
loope
mov
clc
sti
iret
lds
sub
scas
sub
repnz
add
es
xchg
sti
cli
aaa
cld
mov
sbb
cs
fwait
and
iret
fs
mov
xor
xchg
mov
fistpl
imul
repz
cwtl
push
gs
insb
jp
inc
push
cmp
sbb
push
dec
bound
inc
test
sub
or
dec
je
and
lea
adc
into
sub
insl
je
popf
adc
push
push
int3
gs
into
js
gs
pcmpeqb
pop
inc
pop
mov
jnp
adc
divb
add
int3
fldl
dec
mov
iret
xor
je
cli
xorl
mov
add
or
and
push
in
rcrb
mov
icebp
jnp
lds
test
fcmovbe
jp
into
mov
xchg
enter
sbb
inc
jnp
repz
dec
push
jo
shl
xor
cmpsb
lcall
xchg
aaa
jnp
movsb
insb
cwtl
shrl
aaa
fmuls
mov
aam
inc
or
es
or
shrb
lds
insl
cs
and
fdivr
xor
fisubs
repnz
sub
test
mov
stc
push
popf
int
or
outsl
shll
mov
push
ljmp
mov
lock
aas
push
sti
inc
imul
xorl
ret
push
shl
mov
movsb
adc
das
lods
testl
repnz
inc
push
mov
lods
lcall
cs
lcall
sbb
es
jne
mov
pop
mov
outsl
loop
xchg
adc
icebp
xchg
mov
sti
sbbl
stc
popa
inc
fbstp
imul
cmp
mov
pop
scas
dec
pop
mov
push
rcrl
dec
jecxz
mov
ret
jb
add
popa
fstpl
push
fs
cmp
je
aam
mov
outsb
inc
dec
mov
daa
dec
jle
rcr
lds
clc
lock
pop
inc
movsb
sbb
jno
and
jmp
stos
outsb
mov
pop
imul
pop
sub
enter
cmp
mov
int
pop
inc
and
pmuludq
adc
repz
mov
pop
adc
clc
loopne
inc
cmc
jmp
mov
scas
lret
sub
mov
xchg
pop
lcall
sub
push
popa
xor
lret
adc
mov
sub
loopne
pop
adc
popa
pop
push
pop
and
mov
lea
in
mov
add
adc
test
push
xchg
sub
shl
add
or
imul
jp
dec
mov
scas
pop
push
add
pop
orb
sbb
jmp
mov
idivl
ret
repnz
sub
ds
xchg
mov
outsl
bound
je
scas
mov
sahf
jle
xor
loop
mov
iret
pop
mov
dec
push
pop
xchg
mov
mov
adc
xor
add
pop
jno
outsl
in
pop
mov
imul
jne
lds
stos
stc
hlt
pop
fdivrl
inc
jmp
cmc
in
mov
ljmp
xchg
xor
dec
popa
outsl
inc
push
add
movsl
lahf
mov
std
rcll
lods
lods
rorl
fidivrl
jl
mov
xchg
ss
xor
rorb
xchg
popf
sbb
xchg
jns
pop
sahf
pmaddwd
mov
pop
xchg
adcb
sub
addb
lock
cmp
mov
jg
jbe
les
leave
jbe
mov
data16
inc
fwait
add
push
lds
popf
xor
in
mov
jno
aaa
xor
in
aad
out
mov
mov
adc
add
xor
or
stos
jecxz
movsl
cmp
pop
inc
lds
fidivl
fldt
jp
int3
adc
mov
dec
sub
stos
cmp
sahf
cmp
sbb
mov
sub
loopne
in
mov
loope
inc
shlb
inc
dec
lods
mov
jne
stc
xchg
mov
pop
push
inc
sub
cld
shlb
ret
test
faddl
mov
lock
cltd
in
bound
insb
in
dec
mov
pushf
or
push
cmp
shlb
lcall
mov
xchg
jecxz
pop
inc
push
mov
sbb
sbb
data16
arpl
repnz
divb
mov
mov
and
insb
mov
cli
lods
cwtl
dec
push
aaa
std
cwtl
sbb
jbe
jns
mov
not
pop
and
or
adcl
fiadds
test
push
mov
adcl
arpl
dec
ja
add
cmpsb
dec
xor
das
sbb
scas
jg
lcall
lods
sub
mov
lgs
sbb
nop
inc
push
imul
stos
mov
xlat
jbe
pop
out
aas
mov
mov
icebp
fdivrp
ds
or
xlat
pop
inc
push
cmp
repz
mov
fisubrs
pop
movsb
aad
pop
ljmp
mov
sub
inc
adc
rorl
aad
xor
pop
rcrl
in
imul
loope
xchg
dec
mov
sahf
and
lahf
cmp
and
ljmp
lock
inc
xchg
lret
out
jb
rcll
mov
icebp
jge
push
aas
cltd
enter
xlat
jo
adc
xchg
lahf
ret
xor
dec
je,pn
icebp
or
add
popa
jp
add
push
test
mov
sbb
jns
cmpsb
out
lock
xor
lret
int3
or
xchg
sub
fnstcw
adc
cmp
add
xor
scas
push
pop
and
push
lock
fildl
xchg
push
sub
jmp
stos
inc
jmp
xor
jle
bound
arpl
or
mov
mov
test
aam
into
add
jl
arpl
adc
cs
xor
or
hlt
jge
adc
dec
mov
sbb
jmp
adc
xchg
cmp
inc
lgs
mov
aad
les
jb
movl
and
movsl
lods
mov
cmp
mov
mov
cmp
loope
insl
or
add
adc
adc
lcall
jl
push
sbb
inc
sbb
xor
rcl
pop
jl
xorl
lcall
cvtps2pi
or
fs
sbb
ss
cwtl
sar
sub
js
inc
push
sbb
adc
pop
pushf
jmp
push
and
fisubl
outsl
es
clc
sti
push
dec
adc
je
outsl
gs
push
repnz
xchg
cmp
icebp
dec
jnp
sbb
jmp
mov
dec
popa
lcall
inc
hlt
push
push
daa
jp
inc
sbb
sub
dec
iret
loope
push
jno
popf
ljmp
push
and
mov
out
aam
fildll
mov
ljmp
xchg
mov
int3
pusha
cli
mov
ret
jg
cltd
cltd
test
dec
nop
xor
in
xor
dec
into
mov
lea
outsb
sbb
js
in
in
jecxz
push
xlat
bound
sbb
mov
jne
fdivl
cmpsb
out
imul
insb
ss
pop
pop
mul
std
push
xchg
mov
push
scas
jae
xor
fadd
xlat
adc
jmp
test
xchg
les
std
xor
adc
sub
jb
or
movl
popf
aas
and
inc
sbb
push
jnp
loope
fwait
mov
or
repnz
popa
insl
gs
in
mov
lds
jae
xchg
out
cmp
mov
shlb
jle
lods
xor
aaa
scas
push
enter
jmp
call
call
mov
test
jo
jo
notb
mov
cltd
cmp
int
push
ret
aaa
or
int
xor
dec
icebp
jbe
mov
movsl
scas
add
test
jecxz
lret
xchg
mov
cli
sbb
ret
push
and
pop
push
in
add
rcrb
lods
sub
sbb
ljmp
sti
cmp
test
jbe
fcoms
sti
addr16
lea
idivb
lods
add
sub
push
add
mov
xor
insl
jmp
push
push
movsb
pushf
movsb
scas
fwait
pop
mov
loope
cmc
mov
mov
addl
loope
push
stos
bound
mov
xchg
ret
adc
into
jo
sbb
sub
mov
ss
lea
push
loopne
aas
mov
rol
cwtl
les
xor
lods
les
sbb
mov
xchg
or
xor
lds
jl
push
inc
int3
test
out
mov
xor
loopne
jae
pop
and
lea
sub
imul
cmp
add
filds
icebp
push
shrb
sbb
push
sub
aam
push
cmc
in
dec
rep
push
add
into
mov
scas
out
lods
dec
pushf
ljmp
inc
mov
mov
or
adc
rol
cltd
adc
cld
inc
outsb
xor
push
sbb
xchg
cmp
mov
jmp
loopne
cmpsl
sub
decl
xchg
daa
test
aam
xor
pop
jnp
out
sub
xchg
mov
stos
mov
test
lods
int
adc
cmp
jmp
les
cld
cmpsl
mov
shrb
lods
out
or
jecxz
push
js
cmp
pop
scas
pmulhuw
clc
xor
bound
in
pop
sahf
jbe
sti
testl
cltd
mov
pusha
inc
pop
mov
mov
aam
leave
mov
xchg
jge
shlb
dec
not
js
cmp
dec
fsqrt
mov
test
xlat
addb
xchg
mov
or
rclb
pushf
push
jge
jp
ret
sqrtps
fcmovb
in
gs
or
add
rclb
stos
nop
lret
das
or
rcrl
adc
and
jns
iret
leave
test
cmp
mov
cmp
push
js
addr16
mov
pop
pop
xor
lcall
mov
out
inc
cmc
mov
cmp
imul
mov
mov
push
jp
sbb
ljmp
sbb
mov
push
mov
xor
lock
mov
sub
pop
negl
inc
jg
pop
ja
mov
pop
divl
out
loopw
or
testb
loope
arpl
into
ret
pop
adc
push
pop
cmp
in
repnz
mov
cwtl
jno
nop
mov
ja
push
mov
dec
leave
mov
mov
adc
outsb
push
dec
movsl
xchg
and
mov
jmp
por
push
les
fnsave
outsb
adc
pop
push
call
js
scas
push
sub
fisttps
arpl
in
iret
pusha
fsubr
shl
jp
int3
inc
arpl
pusha
ss
cmpsb
insb
xchg
jle
pop
cmp
cmc
xor
mov
xchg
sarb
mov
hlt
inc
int3
inc
sti
pop
jl
push
xchg
mov
das
adc
fmull
xchg
pop
sarb
xchg
inc
cmp
or
testl
pop
bnd
lods
ja
jle
pop
out
leave
or
mov
inc
dec
lods
or
icebp
lahf
xor
mov
std
outsl
imul
jmp
push
jo
sarb
insb
cmp
pushf
or
inc
jp
rcll
icebp
fsts
sub
ficoml
loop
mov
sbb
in
cli
or
push
popa
and
cmp
cwtl
pop
mov
lea
or
mov
inc
inc
jl
addr16
or
mov
mov
pop
adc
out
or
dec
pop
pop
jns
mov
and
push
or
sbb
xor
arpl
sbb
das
nop
pusha
add
outsl
fs
mov
pop
push
cmp
pop
test
sbb
jno
ljmp
mov
dec
in
jmp
imul
andl
cltd
dec
cmp
sub
ja
test
lret
push
test
stc
mov
daa
sbb
inc
lahf
sbb
icebp
sbb
pop
dec
fs
daa
pop
xorl
in
andl
and
lods
push
addr16
imul
imul
adcb
xchg
lcall
lods
lret
popl
cwtl
push
dec
lret
pop
fs
jp
mov
xchg
clc
jnp
cmc
call
xchg
xor
in
jne
add
loope
dec
test
fistpl
nop
push
lret
daa
imul
push
cli
lods
or
cmp
out
jp
fdiv
pop
mov
mov
push
inc
pop
ret
dec
push
dec
cltd
cwtl
pop
cmp
xchg
mov
add
pop
pop
push
ss
mov
addb
jmp
fs
sbb
push
adc
mull
push
sti
jmp
pop
shl
xor
or
aad
cmp
cmp
aam
adc
pop
mov
and
jl
popf
and
xor
sahf
or
fcomp
ret
in
inc
inc
call
xor
and
sbbl
push
cld
lret
xor
insb
dec
not
cltd
push
ljmp
movd
mov
dec
adc
push
enter
ss
cmpl
xchg
push
stos
sub
repnz
fs
and
xchg
lret
dec
cmp
lcall
jmp
pop
in
xchg
pop
mov
andl
sbbb
rcrb
rcll
push
andb
mov
push
lea
dec
out
adc
cltd
outsl
sbb
repz
xchg
mov
es
lods
mov
jne
cs
loope
insb
jl
mov
lret
adcb
out
sub
sub
sub
pop
imul
dec
aam
repz
mov
push
out
cmp
lds
cmp
out
int
fmuls
and
cmpsl
adc
in
jg
xor
lret
aas
jp
loop
outsb
sbb
or
popa
movsl
movsl
mov
lea
pop
call
inc
sahf
pusha
jg
xor
xchg
das
mov
push
mov
in
jg
and
jbe
data16
int
inc
mov
lret
mov
jnp
decb
jne
or
adc
inc
jmp
testl
enter
cmc
xor
adc
cli
popf
and
enter
add
mov
icebp
mov
push
sub
sbb
add
jp
adc
cmp
test
xlat
pop
daa
jmp
dec
cmp
sahf
in
push
insb
sub
adc
out
in
movsb
std
and
nop
dec
lea
out
push
mov
jle
inc
lds
push
aad
xchg
js
fmull
stos
sub
mov
jle
xchg
or
mov
or
push
fisttps
jge
xor
lret
xchg
dec
mov
hlt
add
mov
pop
mov
scas
aad
xchg
enter
test
repnz
sbb
xchg
repz
mov
mov
and
xor
sbb
cmpsl
call
mov
or
fisubl
mov
xchg
aas
inc
nop
mov
mov
sahf
ljmp
mov
cld
sbb
dec
mov
sub
fs
inc
les
or
sbb
adc
inc
xchg
mov
sub
insl
cld
push
inc
loop
dec
pop
mov
scas
and
pushf
xchg
call
and
into
and
push
push
ret
sbb
sub
js
push
inc
or
outsb
call
cmp
gs
adc
sbb
xchg
fwait
mov
xchg
jb
icebp
xchg
sti
ret
inc
in
loop
add
inc
pushf
mov
pop
bound
inc
and
xchg
arpl
stc
loope
sub
or
int
movsl
adc
push
dec
test
ja
or
jno
adc
jbe
scas
dec
ja
dec
mov
push
mov
call
xchg
jb
out
fxch
mov
in
fs
lahf
dec
inc
lret
inc
jl
icebp
xchg
scas
imulb
and
loopne
dec
jbe
inc
jo
les
and
es
cs
dec
pop
test
cwtl
cmp
jbe
mov
mov
inc
out
aaa
jae
or
push
mov
push
scas
jbe
cmp
loopne
cmp
int3
imul
inc
dec
jp
jmp
imul
lds
leave
sub
sub
add
add
test
ds
and
push
inc
xchg
mov
andb
in
cmp
mov
xor
push
mov
cmp
lods
sub
test
mov
xchg
rolb
imul
xor
push
inc
dec
jne
cmp
pop
jg
mov
mov
stos
insb
ret
icebp
sub
fwait
cld
sbb
cmpsb
jle
fadds
mov
mov
loopne
dec
out
rorb
testb
pop
or
into
cwtl
jge
xchg
mov
ss
lods
pop
push
les
push
rclb
jmp
js
mov
ret
iret
sbb
fwait
cld
sti
sbb
cli
cmpsl
mov
push
jae
mov
movsl
dec
in
jb
orl
iret
jle
icebp
xorl
jae
test
xchg
jb
test
fsts
ret
jns
loopne
adc
jbe
adc
cmpsl
mov
jle
enter
jb
mov
push
add
xchg
push
jmp
lods
dec
cli
xor
push
jmp
or
fists
out
rcll
mov
cwtl
xchg
xor
pop
sub
xchg
inc
lods
xor
cli
cli
mov
sub
sbb
sbb
xor
dec
mov
sbb
imull
loope
int3
lods
inc
cmpsb
test
push
aaa
push
push
pop
outsl
jmp
fsubr
jo
dec
and
jnp
insl
jp
lret
jecxz
icebp
test
cli
sbb
nop
fadds
mov
cmp
mov
lock
cmp
push
pop
out
idivl
sub
ja
repz
sbb
xor
jecxz
dec
ljmp
xor
mov
insb
dec
push
outsl
scas
pop
mov
fcoml
adc
adcl
pop
sub
stc
cmpsl
in
jmp
stc
movsl
cltd
jle
lock
sub
out
jnp
adc
int
dec
out
cltd
or
es
mov
cmc
push
push
outsb
dec
mov
mov
insb
call
in
f2xm1
cmp
test
out
adc
dec
adc
jl
imulb
adc
inc
bnd
jp
pop
mov
ljmp
mov
jbe
mov
inc
xchg
rcr
pop
and
dec
push
in
sahf
inc
ja
mov
jno
into
mov
push
and
dec
out
mov
mov
xchg
pusha
jp
mov
xor
ljmp
je
adc
and
sub
das
inc
pop
mov
add
cmp
inc
and
mov
les
adc
inc
ljmp
mov
int
aam
lahf
inc
adc
repnz
iret
mov
aad
in
rolb
add
es
mov
shll
jno
cmpb
shlb
fcoms
mov
rolb
js
add
dec
mov
sbb
enter
jg
cmpl
xchg
imull
xor
pop
pop
dec
pop
jno
out
and
imull
into
cmpsb
inc
xchg
ret
push
dec
popa
lock
test
into
loope
outsl
sub
pand
notl
in
pop
lcall
aas
mov
mov
stos
pop
andb
add
pop
xchg
jbe
and
jmp
xor
rcrl
pusha
cmpsb
roll
les
iret
inc
xlat
addr16
xor
sub
mov
mov
xor
jge
pop
insl
xorb
mov
inc
mov
pop
cmp
lea
xchg
inc
insl
jg
cmc
movsl
sbb
rol
push
cmp
sub
cmpsb
lret
add
jbe
jns
jno
jecxz
iret
mov
push
movl
addr16
cltd
sbb
imul
mov
sarl
sbb
fldt
pop
enter
repz
outsl
lahf
testb
mov
in
imul
test
stos
clc
dec
xor
lock
pop
push
cmpsb
out
xor
call
fwait
or
jns
sbb
lea
xchg
pop
push
push
push
in
sbb
loopne
pop
inc
dec
sub
lret
outsb
xchg
add
and
push
test
arpl
add
adc
les
add
in
cmp
shll
out
or
iret
or
xchg
push
ss
sub
lods
xor
and
ja
cmp
cmpsl
mov
mov
gs
mov
dec
push
dec
inc
and
ss
push
sbb
mov
or
push
sbb
divl
add
mov
daa
in
ss
in
mov
cmpsl
mov
cli
xor
mov
fldcw
imul
push
cmp
adc
ret
mov
adc
push
push
lret
jne
out
cli
xchg
insl
cmp
sbb
xlat
sub
cmp
cmp
sub
insb
mov
jle
and
insl
push
push
add
int
scas
pop
mov
rcll
jae
inc
imul
dec
aam
test
adc
ret
imul
cmpsl
adc
js
out
adc
addl
push
int3
inc
mov
xchg
loop
sbb
and
pop
push
mov
jb
cmp
sbb
dec
inc
roll
jl
insl
cmc
push
pop
shlb
fbld
lahf
cmp
aam
xchg
pop
mov
add
or
scas
arpl
or
stc
in
imul
sub
inc
mov
adc
pop
mov
inc
xchg
test
fcmovnbe
jmp
jne
fadd
sub
jo
ljmp
pop
mov
jle
cmp
aam
cltd
gs
dec
shlb
add
and
call
dec
in
movb
loope
xchg
imul
add
in
pop
xor
dec
ja
adc
in
dec
inc
push
outsl
mov
scas
add
or
sub
dec
std
mov
xchg
popa
sbb
fsts
and
lds
pop
fcmovnu
jle
add
iret
pop
loope
adc
movsb
out
stos
sub
pop
pop
pop
je
mov
lahf
fstpt
cmc
and
dec
sbbl
push
or
sbb
sub
mov
js
mov
push
andb
es
movl
pop
xchg
mov
dec
inc
and
bound
adc
xlat
cmc
out
ret
aaa
mov
cmovp
fcoml
out
jge
lock
xchg
jns
in
daa
mov
or
or
and
aas
add
pop
xor
push
cli
lcall
dec
fwait
xchg
in
pop
int
jecxz
lock
mov
push
insb
mov
jae
out
stc
sub
rcrl
inc
test
adc
adc
test
iret
iret
and
mov
push
xlat
decl
lcall
dec
mov
mov
and
test
mov
xchg
push
cmp
insl
loope
dec
popf
and
jbe
js
cmpsb
or
mov
iret
popf
andb
roll
jae
jbe
lcall
and
cmp
inc
in
aaa
push
inc
iret
cmp
adc
pop
mov
fdivl
adc
xchg
mov
fstpt
mov
or
xchg
mov
mov
sbb
pop
roll
inc
push
pop
adc
add
xor
gs
scas
mov
outsb
adc
aam
xchg
mov
mov
dec
adc
rclb
cmp
mov
pusha
sub
sub
mov
jmp
pop
mov
xlat
xor
xchg
inc
in
push
das
add
inc
scas
sub
nop
lret
sub
stos
pop
jb
pop
stc
push
imul
xor
push
test
push
pop
cmp
sbb
fs
sub
popa
repnz
fs
addb
or
lea
pop
pop
xlat
mov
mov
aam
dec
or
scas
adc
jbe
jne
inc
xchg
popl
sbb
std
js
pop
gs
idiv
fldenv
jae
jp
pop
repz
jmp
pop
pop
sbb
jp
stos
aam
sar
std
or
pop
xor
cmpsb
pop
pop
inc
or
mov
jnp
sub
std
sti
push
imul
insb
jno
push
gs
ds
mov
and
xchg
jns
and
and
lahf
adc
in
mov
push
push
dec
jmp
aas
pushf
pop
clc
jno
mov
adc
mov
cmp
scas
cld
lods
pop
or
ret
je
push
mov
insb
or
and
cli
xor
stos
cli
add
lret
cs
and
inc
clc
push
cmpsl
imul
lods
mov
lods
or
cltd
sbb
sti
mov
pop
sbb
ret
sbb
pop
lcall
mov
data16
jb
mov
pop
lret
sti
ss
pop
xchg
pop
push
sub
test
div
mov
mov
js
jle
add
cmp
mov
das
insb
adc
nop
inc
fsubrs
xchg
lahf
lret
in
shll
mov
dec
aam
fsubr
inc
mov
insb
sub
fadds
adc
out
push
mov
sbb
rcpps
cmp
and
imul
data16
mov
aam
add
jmp
aaa
lea
cmpsl
adc
aad
mov
stos
inc
jb
fdivl
inc
jbe
xor
mov
add
test
jp
ret
adc
inc
and
pop
sub
sbb
pop
and
push
mov
loopne
cmp
neg
xchg
rcrl
call
lahf
sbb
sub
adcl
and
or
iret
push
jne
xchg
bound
mov
popf
loope
cmpsl
fldcw
inc
loope
ss
adc
cmpsl
sub
scas
nop
scas
adc
inc
lods
sbb
xchg
push
popf
mov
or
fistpll
aaa
cmpsb
test
leave
xor
fnsave
add
jo
aam
dec
stos
mov
ret
das
xchg
out
lock
call
xchg
mov
inc
push
ret
test
jo
mov
inc
andl
lcall
and
loope
mov
jno
and
jp
sti
mov
movl
out
xor
iret
mov
scas
pop
jnp
or
mov
ja
dec
sub
xchg
xchg
sarl
dec
adc
xor
xor
dec
push
int
mov
subb
jo
imul
sbb
jl
cmp
inc
fcmovnu
push
movsb
lods
test
dec
fcoms
lds
push
imul
mov
mov
cs
push
pop
lahf
scas
mov
mov
ficoml
fsubl
jae
cwtl
xchg
cltd
test
fst
subb
fucomi
ja
stc
add
ret
rcl
fmuls
movsl
bound
sahf
push
add
cmp
push
or
pop
sub
jne
add
adc
sbb
hlt
lock
push
mov
shr
mov
sti
inc
pop
filds
xchg
mov
outsb
xor
lahf
push
in
mov
notb
je
mov
stos
xchg
xorb
jecxz
in
fadds
cmp
int3
leave
call
dec
insl
aam
dec
jae
lret
mov
loope
mov
insl
mov
add
ljmp
or
sub
mov
fwait
andl
shlb
inc
fdivrs
add
jns
jb
mov
cmp
shrb
rcl
pop
mov
jle
pushf
test
mulb
popa
dec
push
hlt
mov
xor
xor
daa
mov
pop
js
jne
pop
mov
sbb
pop
fst
out
push
aad
cmpsb
aaa
out
cmc
dec
stos
loopne
jo
in
je
and
mov
mov
aaa
jecxz
xchg
jmp
or
sbb
mov
dec
cmpsb
hlt
movsl
lret
fcmovnb
fsts
jp
xor
inc
cs
and
sub
mov
lret
xchg
add
jg
js
in
cmp
xor
hlt
lahf
or
callw
sahf
xor
pop
mov
in
xor
sub
dec
aad
icebp
pop
mov
push
xor
int3
xchg
mov
mov
stos
pushf
lods
scas
ja
mov
hlt
xorb
cwtl
inc
pop
leave
adc
xchg
cs
add
cld
push
outsl
test
push
mov
cmpsb
push
or
inc
jbe
push
clc
push
out
push
movsl
fwait
mov
cmc
nop
and
sbb
leave
push
cmc
outsb
mov
arpl
in
mov
mov
jl
or
mov
mov
aad
xchg
lret
xchg
scas
mov
cmp
out
test
pusha
mov
push
test
scas
lahf
hlt
call
popl
fists
or
lods
in
mov
loope
adc
dec
decb
loope
jp
mov
nop
cmpsl
lret
in
cmc
daa
shrl
xor
inc
jmp
adc
xchg
sbb
fs
mov
clc
cmp
stos
nop
mov
out
jl
ss
mov
fs
test
call
mov
pop
dec
out
into
movsl
sub
push
aas
mov
sbb
and
mov
adc
shlb
jp
xchg
cli
mov
sbb
stc
shrb
jns
outsb
sub
out
mov
push
in
or
xor
mov
rolb
ss
cld
cld
stc
mov
xor
pop
mov
call
es
mov
xlat
jns
mov
sbb
mov
xchg
scas
xor
out
jl
aas
jns
fcompl
dec
ljmp
mov
loope
aas
xlat
jmp
lret
movsb
adc
lods
push
mov
xor
dec
pop
add
aas
pop
mov
ds
je
add
sti
subl
mov
scas
ds
cli
xor
xchg
add
shl
pop
aad
out
xchg
je
into
loopne
xor
add
incl
inc
sub
mov
add
mov
sti
popa
xchg
cmp
pushl
sub
mov
imul
fnstcw
pop
popf
jb
mov
data16
imul
addr16
aas
push
fsubrs
sbb
std
lret
bound
mov
fiaddl
adc
or
gs
call
sbb
mov
out
pop
repnz
movsb
ja
ret
adc
dec
adc
cmpsb
xchg
mov
mov
jo
add
xor
test
mov
in
and
push
xchg
jl
stos
jbe
xor
pop
setns
add
add
jne
mov
mov
test
add
loopne
mov
cmp
std
dec
stos
rclb
out
stos
sti
adc
pop
jg
outsb
test
cmpsl
adc
ss
and
cld
ds
mov
jo
pop
xlat
les
mov
dec
sahf
inc
push
cmp
enter
sbb
mov
bound
push
out
mov
mov
call
jae
add
sbb
mov
lahf
call
jge,pt
mov
xchg
sbb
cmpsl
inc
jnp
add
divb
xchg
add
je
cmp
or
cwtl
pushf
sbb
mov
in
or
adc
or
and
aas
es
stos
clc
ror
pushf
roll
enter
nop
out
repnz
jp
xor
mov
mov
ljmp
jbe,pt
loopne
adc
popa
dec
inc
push
out
lock
and
add
sbb
imul
xlat
mov
imul
std
arpl
jp
cmpsl
out
xorb
das
out
or
shrb
bound
lahf
fbstp
add
mov
jb
out
push
dec
inc
adc
jle
ds
add
mov
jbe
test
jno
shl
inc
or
pusha
scas
sarb
pushf
movsl
sahf
and
sbb
adc
mov
xchg
lods
stos
mov
dec
or
dec
stos
movsb
gs
inc
sbb
ficoms
push
fstpt
and
mov
mov
nop
mov
adc
and
daa
ss
push
jbe
xor
or
inc
fs
add
movsbl
out
inc
fst
imul
inc
adc
int
mov
ret
jecxz
xorb
lock
shrb
mov
cwtl
inc
mov
fidivs
pushl
jns
push
rorb
dec
push
test
pop
fbstp
mov
jo
aaa
inc
lret
clc
mov
sti
mov
jnp
mov
aad
push
dec
fcmovne
push
mov
lock
mov
mov
jp
cmc
fsubl
push
lea
mov
arpl
lock
or
pusha
cmp
insb
push
cs
sub
sub
stc
lds
sub
cmp
sbb
sub
mov
jmp
dec
add
ret
popa
cld
into
push
dec
test
rolb
outsb
push
sbb
cmpsl
not
dec
fsubl
rolb
sbb
xchg
jmp
scas
push
cli
and
mov
push
iret
int3
in
cltd
cmp
mov
push
call
mov
jl
and
sub
shll
and
mov
mov
cwtl
int
out
xchg
je
inc
mov
lods
lods
push
push
mov
adc
dec
ret
shlb
popa
mov
jns
mov
fisttpll
mov
mov
and
mov
fstps
sub
mov
fs
jmp
xchg
cmc
xor
sbb
ret
xchg
gs
jno
popa
mov
xchg
fistl
lahf
or
retw
xchg
insl
fs
jl
sub
test
push
fstl
jl
out
movsl
popa
iret
xchg
fdivrl
jno
jae
jae
jg
fldt
std
repnz
adc
mov
mov
sub
inc
sbbb
mov
add
sbb
out
push
mov
pop
add
in
inc
sub
es
cmp
ret
and
loop
std
jecxz
lds
loopne
xor
adc
and
stos
xchg
insb
shlb
cmpsb
adc
sub
out
cli
mov
repz
shl
cmpsl
in
int
jno
xchg
nop
mov
mov
cli
call
pop
nop
adc
mov
mov
in
fs
cltd
cmp
mov
rclb
jg
lock
add
ret
int3
or
mov
xchg
dec
jne
or
dec
or
mov
sub
pop
rcr
push
popf
fsubrs
fsubl
arpl
mov
imul
loope
sub
ss
dec
test
test
setns
je
icebp
rorb
int3
mov
dec
pop
movsb
arpl
xchg
mov
test
push
jbe
enter
icebp
rorb
lahf
jb
aad
lcall
adc
sbb
jne
mov
pop
jmp
jecxz
inc
jb
lods
cmp
hlt
adc
inc
ds
repnz
push
addr16
fs
sahf
or
dec
lods
xchg
stos
mov
mov
pop
fiadds
cmc
sahf
mov
das
sarb
pop
or
xor
lret
cmpsl
add
pop
ret
push
or
out
ja
xchg
popf
cmp
pop
inc
jo
xlat
push
push
or
stc
jecxz
mov
rorl
add
mov
aas
sbb
das
clc
pusha
icebp
cmpb
dec
rclb
cmp
or
add
add
and
mov
or
cmp
xchg
sahf
je
scas
mov
scas
jmp
sti
and
and
lcall
hlt
adc
pusha
imul
xchg
xor
dec
sub
ja
fidivs
jle
fistpl
icebp
jae
movsb
mov
lock
cmp
negb
jo
fbld
popa
dec
and
cli
icebp
xor
push
sub
xchg
js
jge
sbb
lds
cltd
or
sbb
and
inc
hlt
jmp
sbb
in
inc
xchg
pop
stos
cld
pop
or
pop
int3
jo
inc
popa
fcompl
mov
stc
push
movsl
mov
aaa
add
ret
cmp
repnz
and
cmp
or
test
loop
fstpt
ja
mov
push
ret
push
adc
jmp
icebp
cmp
dec
sub
mov
jle
sub
mov
sub
test
push
jae
dec
push
jo
pusha
pop
lcall
inc
idiv
in
nop
jge
lds
movsb
arpl
push
pop
lcall
loop
inc
add
cmp
out
mov
inc
sub
lea
sub
xchg
xor
ficomps
adc
jg
mov
xchg
ja
insb
lds
dec
sbb
sarl
bound
jle
dec
sbb
cs
test
ljmp
fidivrl
das
outsl
repz
xchg
add
addb
cmp
fnstsw
cmp
xor
add
and
jne
and
popl
je
sbb
jns
add
jg
dec
movsl
sub
xlat
jp
cwtl
aam
mov
and
shlb
xchg
or
lcall
add
mov
test
mov
mov
jae
add
stos
dec
mov
jp
mov
or
mov
hlt
cmp
inc
xchg
je
jmp
jp
xchg
imul
xchg
jg
xchg
jge
icebp
dec
jo
pop
mov
shlb
dec
lahf
cs
loop
test
sbb
mov
hlt
sbb
fists
pop
dec
clc
push
mov
inc
test
pop
xchg
and
jns
mov
or
or
dec
lahf
dec
loope
test
stos
mov
pop
mov
imull
mov
jne
or
test
gs
pop
mov
divl
sub
xchg
mov
xchg
jg
mov
ja
inc
ljmp
mov
mov
lea
sub
call
push
push
repnz
xor
pushf
cmp
or
idivb
out
pop
fiaddl
bound
imul
pop
mov
fs
sbb
cmpsl
jmp
idivb
push
pop
cmp
cmp
mov
adcl
mov
ficoml
cmp
add
roll
push
loope,pt
jl
pop
or
dec
push
clc
daa
jle
cmpl
int
mov
jbe
inc
ss
sbb
flds
xchg
andl
cld
add
sub
sar
or
in
cli
test
xchg
aaa
loop
push
pop
xchg
cs
push
out
cmp
push
lds
scas
ja
icebp
mov
pop
inc
jecxz
lea
adc
jmp
test
pusha
int3
mov
push
ljmp
mov
in
dec
dec
scas
inc
dec
push
in
pushf
lret
test
fs
movsb
sbb
lds
dec
xchg
adc
andl
sarl
mov
mov
lahf
lahf
int
pop
repnz
out
loope
int
scas
adc
jo
fcomi
test
fcom
aaa
cmp
pop
mov
gs
xlat
push
adc
pop
jne
dec
test
pop
add
cmpl
push
rclb
mov
push
shll
sbb
mov
xchg
subl
insl
or
push
nop
inc
stc
push
pusha
popa
or
fisubs
mov
fcompl
sub
stos
lods
fildll
sub
shrl
dec
mov
sti
cmp
jmp
das
iret
cmpsl
rcl
xor
mov
add
jmp
cmpsl
sub
jge
fwait
jb
cmpsl
xchg
push
add
push
in
and
xchg
pop
in
or
adc
shl
push
loop
cld
aad
int
ret
jns
push
divl
stos
scas
in
mov
leave
sti
xor
repnz
lock
push
xchg
cmc
repz
aad
xorb
push
fwait
mov
jmp
pop
dec
mov
lcall
in
and
jns
ret
sahf
popa
sub
jmp
sbb
aas
lods
repz
ss
lret
daa
push
lahf
ss
inc
jb
or
fwait
popa
ljmp
adc
mov
sub
ficoms
adc
lods
int3
sub
aam
scas
dec
fcmovnb
xor
lahf
xor
mov
pushf
std
hlt
aaa
xchg
xchg
mov
push
aaa
mov
and
xchg
xor
aas
cmc
test
push
jmp
cmpsb
mov
movsl
orl
fs
xor
cmpb
adc
inc
jge
cmp
les
pop
inc
push
sbb
or
gs
pusha
lahf
leavew
ret
out
pop
mov
outsb
push
jb
cld
sbb
mov
mov
xor
imul
xchg
mov
pop
pop
push
popf
xchg
ror
xchg
mov
fiaddl
inc
fucomi
mov
jmp
push
sub
push
dec
ficoml
ja
test
or
push
jecxz
jmp
sbb
int3
popf
mov
lea
imul
fxch
mov
and
jmp
fcomi
xor
xor
xor
xor
fldt
sub
jecxz
xor
ret
mov
mov
js
loop
pushf
movsl
repnz
imul
out
sub
mov
repz
xchg
mov
test
scas
bound
clc
or
cmp
xor
cmp
es
shlb
mov
push
std
xchg
stos
mov
mov
ljmp
inc
mov
xchg
pop
xor
fisubrl
repnz
lods
mov
mov
and
daa
pop
dec
or
inc
daa
loope
mov
call
shrl
push
mov
and
lcall
jno
jg
or
jmp
enter
enter
pop
cmpsl
ror
or
cmovp
repnz
jne
mov
jge
std
dec
mov
pop
add
sbb
orb
xchg
mov
pusha
addb
push
inc
fs
and
xorl
aam
flds
adc
pop
int
jae
and
push
xor
adc
rorl
and
lods
iret
js
sub
dec
jecxz
pop
les
pop
sub
xchg
cltd
sub
leave
mull
lods
cltd
mov
mov
jnp
jp
aam
dec
add
imul
loop
pop
jo
mov
outsb
lods
sub
and
or
cmp
nop
adc
mov
idivl
mov
into
mov
je
int
pusha
rorb
cmp
sub
mov
push
mov
adc
adc
cltd
outsl
sub
repz
inc
ret
cwtl
icebp
outsb
sbb
aad
scas
lret
pushf
cmp
push
inc
sti
shl
int
mov
or
xor
inc
movsl
clc
jl
mov
xor
rorl
xchg
outsl
pop
fmuls
jmp
pop
ror
mov
fdivr
xor
cmpb
mov
shr
repnz
cmp
adc
cmpsl
push
sub
lods
or
pop
push
leave
sbb
sub
je
adc
ret
insl
lret
sbb
mov
mov
incb
adc
pop
popf
jge
imul
lret
jecxz
sub
dec
fiaddl
imul
pop
into
arpl
mov
in
cs
xchg
test
cmp
ljmp
cmp
adc
in
sub
cmp
stc
loope
cmpsb
pop
mov
call
jmp
adc
jne
sbb
or
lea
sahf
jl
bound
dec
lea
decl
addb
xchg
icebp
jns
dec
jae
xchg
lret
loope
jmp
aaa
push
aad
ret
imul
push
push
sbb
loop
mov
mov
lds
mov
or
push
ret
jae
mov
mov
pop
rorb
adc
scas
pop
pusha
jnp
imull
mov
sub
out
mov
ss
faddl
mov
push
cmp
clc
add
sub
sub
loop
aas
out
sbb
mov
out
mov
xchg
outsb
scas
and
add
fidivl
xchg
ret
cmp
cmc
shl
xor
push
sbb
bound
pushf
or
loop
mov
lea
lea
sub
push
push
xchg
pusha
adc
int
lret
jle
mov
aaa
inc
nop
and
jbe
cs
hlt
bound
jmp
xchg
lret
out
dec
xorb
lret
movsl
mov
push
hlt
loope
mov
inc
or
adc
je
jo
pop
cld
rcrl
leave
push
ret
push
sub
dec
scas
cmc
inc
les
leave
mov
rcrb
mov
roll
xor
adc
idivb
dec
or
subps
out
inc
fidivrs
daa
jl
add
pusha
or
pop
xchg
or
dec
mov
cmovo
jns
pop
iret
jl
fildl
aas
push
mov
fidivrl
push
cmp
xorl
shl
lock
inc
aam
push
or
xchg
imul
loope
cmp
dec
xor
mov
pop
mov
mov
jno
enter
pop
xor
daa
enter
mov
fisttpl
xlat
mov
loope
adc
je
es
enter
adc
pop
movsb
out
xchg
pop
fxch
insb
stos
test
or
into
cmc
ret
mov
jo
roll
fildll
mov
dec
loope
or
mov
inc
lea
dec
dec
movsb
std
mov
into
cmp
push
jge
pop
int
jmp
aas
out
ja
push
cltd
enter
mov
and
sub
xchg
jmp
das
sbb
cmpsl
pop
pushf
dec
jbe
mov
sbb
push
fmull
sahf
imul
xor
xor
fcoms
dec
pop
add
xchg
out
loope
xor
and
xorl
push
push
sub
mov
jp
lea
int3
adc
push
and
sub
outsl
cmp
shll
pop
lods
mov
mov
mov
push
inc
xchg
sbb
sbb
arpl
inc
lods
lods
cmp
push
dec
cmpsl
adcb
std
out
das
pop
daa
cmp
out
fsubs
cmp
fcoms
cmpsb
loope
add
in
imul
punpckhwd
daa
mov
sbb
xorb
stos
mov
mov
push
daa
fdivr
ljmp
frstor
push
loope
jb
push
mov
cmovno
daa
mov
jns
ret
pop
adc
mov
je
js
jl
shlb
nop
test
sub
pop
mov
movsl
sbb
push
xchg
fnstsw
dec
std
leave
jp
lcall
ret
test
inc
lds
popf
pop
pop
ds
jmp
jg
popa
add
push
xchg
ret
add
andb
mov
adc
shlb
jecxz
sti
inc
outsb
mov
leave
cmp
pop
mov
jle
adc
cld
loope
ss
fnsave
out
ss
mov
xchg
mov
inc
cmp
out
xchg
adc
enter
testl
inc
cmc
adc
adc
mov
outsl
sarl
mov
inc
lock
scas
mov
pop
roll
jbe
mov
mov
cwtl
leave
psubsw
jge
fcomps
in
fwait
lods
and
and
sub
pusha
pushw
leave
mov
js
add
jg
nop
mov
dec
dec
jb
je
xor
in
stc
xor
fs
mov
loope
sub
pop
mov
sbb
xchg
push
test
dec
cmpsb
popa
cmp
mov
cmp
test
aas
mov
xchg
jae
jg
mov
pop
mov
adc
clc
pop
subb
push
pop
push
cmp
mov
aaa
out
cmpb
xchg
test
mov
adc
popa
popf
mov
add
pop
mov
mov
lea
push
push
es
sbb
and
out
adc
add
popa
jl
jo
and
mov
mov
mov
fmuls
xor
movsl
in
ja
adc
push
cli
orl
repnz
add
test
push
cmp
pushf
in
je
clc
int
shll
test
arpl
fisubrs
xor
cmpsl
or
and
mov
xchg
jae
outsl
int
jb
push
sahf
jg
cmp
sbb
dec
iret
je
push
insb
mov
mov
xor
jbe
xor
ljmp
push
add
lods
pushf
popf
gs
xor
xchg
in
sbb
xchg
inc
mov
loop
or
push
pusha
jg
or
push
lret
jno
rolb
xor
cld
rcrl
test
cmp
inc
jns
inc
sti
clc
jae
fnstenv
gs
in
test
dec
sahf
and
adc
cmp
aaa
fstpt
push
bound
dec
into
popa
mov
test
bound
lahf
movsb
or
std
mov
sahf
sti
repz
into
ficomps
mov
cmp
mov
notl
mov
xor
jge
and
imul
adc
cmpsl
jp
dec
stc
cmp
insb
cwtl
push
shll
inc
lods
lahf
sbb
into
ret
cmp
mov
inc
test
pop
cmpb
mov
into
shll
in
into
xchg
lret
jne
push
pop
xchg
leave
adc
lods
rdtsc
shl
cmp
push
and
movsl
loop
call
pop
daa
iret
sbb
sub
and
mov
sub
cmpsl
stos
push
pop
jbe
subb
subb
insb
jns
cwtl
cli
sbb
test
mov
nop
xchg
cltd
mov
loopne
lods
bound
out
mov
push
mov
in
lret
mov
inc
popa
sbb
mov
fldenv
lahf
out
pop
and
jae
jp
mov
mov
je
add
push
xchg
loopne
mov
xor
and
cmc
add
xchg
mov
xlat
or
and
push
pop
and
inc
scas
and
inc
mov
add
xchg
mov
and
in
xorb
cltd
push
mov
xchg
loopne
jle
jmp
pop
adc
sahf
inc
fidivl
dec
xchg
or
rorb
mov
add
cmp
cmc
mov
add
sub
add
or
xchg
cmpsl
cmp
inc
scas
in
ljmp
shrl
and
pop
xchg
sbb
call
mov
or
jl
cltd
push
xchg
push
xor
cmp
lcall
xor
mov
sbb
lods
sub
scas
pop
sbb
inc
dec
int3
mov
sbb
pop
and
dec
sub
jecxz
ja
push
pop
mov
inc
xchg
xchg
and
pop
lret
imul
mov
cmpsl
mov
or
movsl
adc
pop
in
jmp
out
negl
pushf
rcll
ds
dec
xor
js
mov
lods
fdivl
or
xor
xchg
subb
out
imul
clc
cwtl
add
lods
mov
xor
test
scas
mov
mov
or
or
imull
xchg
pop
push
pop
daa
xlat
sub
ja
lods
fisubl
gs
test
sub
or
shr
mov
inc
and
inc
lods
mov
sbb
mov
fs
lret
mov
ja
lcall
lret
cmp
adc
ss
push
push
push
dec
or
call
and
fisubrs
in
pop
lahf
pushw
xchg
aad
inc
mov
notl
inc
xlat
adc
and
repnz
xchg
call
fwait
cmp
mov
fs
int3
mov
scas
jmp
cld
jno
xchg
inc
push
test
ret
xor
sbb
pushf
xor
mov
mov
mov
xchg
in
out
pop
mov
dec
xor
mov
add
inc
lret
mov
cmpsl
popl
jo
subb
outsb
sbb
mov
insl
and
mov
das
fstl
sbb
mov
pop
icebp
nop
add
mov
xor
ret
imul
or
mov
into
mov
cmp
dec
popf
pop
and
jl
cwtl
addb
push
movntq
inc
mov
push
int3
roll
sub
add
test
jne
jmp
adc
into
ret
lds
filds
xor
inc
cmp
inc
ret
scas
and
movsb
inc
cmp
ds
sub
cmp
add
call
mov
inc
divb
push
jecxz
popa
mov
jg
cmc
aam
pop
mov
mov
cli
sbb
inc
pop
outsb
icebp
push
mov
pop
loopne
dec
sbb
mov
outsb
fistps
stos
arpl
jge
mov
insl
jno
sub
mov
xor
sub
sbb
rorb
test
sub
mov
xchg
call
sub
shl
mov
shr
lahf
test
in
mov
pop
das
xchg
lahf
push
sbb
scas
push
sub
ja
xchg
pshufw
push
cmp
mov
or
aad
fwait
mov
decb
and
mov
movsl
lret
sbb
ficompl
cmp
dec
sub
in
cmp
lock
xchg
lods
mov
or
lods
mov
sub
push
addr16
jo
lea
jmp
push
pop
sahf
movsl
jo
scas
mov
inc
pop
xchg
mov
sbb
out
int
aam
and
jge
jp
sahf
cmp
or
cli
sub
xor
lret
fcmove
sbb
push
mov
push
shl
sti
pop
dec
arpl
ljmp
bound
iret
js
fnstsw
cmp
gs
filds
xchg
xchg
out
and
movsl
push
adc
in
and
insl
mov
fcoml
jne
adc
stc
xor
and
mov
lcall
shl
ret
sti
js
sbb
lret
mov
jecxz
daa
pushf
jg
jnp
xchg
jge
xchg
fldt
subl
sbb
mov
fwait
mov
fs
scas
rol
fs
xor
cmpsb
cmp
push
xchg
aam
insb
mov
ret
shll
ds
cmp
mov
fimuls
aas
ror
push
jg
mov
or
push
add
pop
in
inc
lcall
jo
push
cwtl
jb
dec
sub
and
pop
loope
out
sbb
or
cmp
sub
inc
dec
hlt
push
test
dec
mov
fmuls
leave
sbb
push
jne
cwtl
jo
adc
mov
shrb
inc
jecxz
or
dec
outsl
fadds
add
jae
xchg
mov
int3
push
test
stc
xor
into
xor
js
ficoml
push
int3
jbe
or
or
ljmp
mulb
iret
cwtl
dec
jbe
add
xchg
or
mov
jns
out
icebp
sub
or
ljmp
and
mov
sub
mov
xchg
clc
or
sbb
int
stos
outsb
mov
jge
dec
lods
cmp
pop
pop
in
inc
or
jno
cmp
les
inc
cld
push
push
sub
add
ljmp
and
mov
lods
int3
dec
pop
xchg
iret
or
dec
and
mov
roll
sub
mov
fwait
in
jmp
mov
mov
xor
sbb
pusha
in
lcall
cwtl
out
push
sub
les
or
imul
or
gs
pop
mov
push
cltd
xlat
xor
shll
dec
fcmovb
push
fcmovnbe
sub
pop
pop
nop
jmp
xor
sub
lahf
or
dec
out
dec
mov
jecxz
lea
mov
dec
xorb
inc
mov
loope
push
outsl
hlt
mov
or
adcl
push
shrb
sub
mov
test
mov
mov
cmc
popf
sub
sub
pop
and
shr
xchg
mov
outsb
push
mov
aad
xor
cwtl
int3
xor
sbb
ljmp
fimull
aas
test
jp
iret
xor
mov
push
loopne
lods
adcb
mov
and
push
cmpsb
dec
mov
jo
cmc
pop
out
jmp
cmp
mov
loope
aas
out
jp
outsl
adc
or
mov
add
xor
out
mov
mov
aaa
jnp
cld
mov
scas
jns
pop
jae
hlt
push
push
pop
mov
push
imul
clc
cmp
jp
push
xor
icebp
loope
sbb
and
int
or
mov
dec
push
sti
imul
mov
and
cmp
movsb
rcll
mov
mov
pushf
and
sub
jns
pop
test
in
insl
ds
ret
rorb
hlt
orb
cmp
in
or
fstpt
jns
and
icebp
jns
int
xor
sbb
and
aas
arpl
sbb
sub
aad
mov
or
jno
jbe
xlat
ret
iret
push
js
jp
icebp
adc
cmpsl
mov
or
mov
adc
xor
out
ret
imul
dec
mov
xchg
pop
rcrb
mov
xchg
mov
inc
fidivrs
lret
subb
repz
scas
lahf
push
mov
and
insb
in
xchg
jne
lret
inc
cli
sti
mov
cs
lods
pop
imul
mov
lods
xor
sub
je
xchg
movsl
shrb
inc
inc
push
adc
inc
add
imul
mov
push
lcall
rol
test
mov
dec
mov
mov
imull
pushf
imul
jbe
xor
jbe
jns
pop
mov
jle
inc
and
gs
aad
xchg
dec
inc
xchg
fwait
pop
push
pop
cltd
mov
or
fs
in
add
aas
or
jge
pop
lret
sbb
pop
pop
lods
je
xchg
in
arpl
or
xor
test
add
clc
mov
xchg
imul
lcall
xor
mov
lods
cmpsl
push
es
int3
decl
cmc
ficompl
lret
cmp
push
aas
cmpb
in
mov
stc
push
stos
push
pop
xchg
icebp
or
iret
mov
mov
cld
pop
adc
and
pop
jl
into
xchg
inc
fnstcw
push
xor
mov
or
mov
or
mov
movsb
stc
add
mov
subb
scas
xorb
outsl
test
inc
ret
cmpsb
jl
outsb
xor
inc
inc
bound
sub
add
int3
xchg
xchg
push
sub
les
inc
jno
rcr
or
insb
lea
and
or
gs
fwait
je
iret
in
cld
shll
cli
and
int
in
mov
sarl
clc
clc
popf
and
jbe
push
arpl
xor
mov
sub
mov
xchg
xchg
mov
mov
inc
xor
clc
test
imul
and
xchg
jmp
int3
data16
pop
pop
inc
test
enter
sahf
mov
out
cmp
leave
push
mov
push
mov
gs
and
in
je
cmpsl
fisttpll
lock
outsl
cmp
fidivs
cmpsb
lea
dec
cmp
dec
mov
or
sbb
lods
shl
cmp
push
and
xchg
cmp
xlat
and
dec
mov
mov
xchg
cmp
mov
inc
sub
sbb
lahf
adc
fldcw
xchg
or
mov
pushf
mov
mov
mov
int3
jns
lds
xorl
fdivrs
push
dec
add
add
mov
in
and
mov
sahf
test
outsb
push
lea
mov
scas
jg
mov
push
sahf
repz
add
or
pop
xlat
adcb
mov
mov
cmc
mov
int
in
sti
loop
scas
ds
notl
mov
cld
jl
sahf
inc
fists
pusha
cltd
dec
pop
ss
mov
popa
repnz
jne
sbb
pop
mov
sbb
ljmp
fucomi
jg
int
push
cltd
inc
fsubl
jnp
and
sbb
test
jnp
or
push
push
iret
xchg
scas
cmp
test
mov
icebp
push
adc
sbb
cmpsl
cmpsl
push
clc
int
dec
xor
cmp
fsts
push
xor
push
jp
cmp
xorl
repnz
shrb
push
sbb
jle
mov
add
ret
cwtl
mov
mov
nop
mov
es
ljmp
rcr
fdivl
dec
cli
bound
arpl
jo
mov
loopne
int3
lods
into
idivl
and
sub
jnp
aam
popa
push
enterw
aad
jb
cmp
cmp
add
daa
cs
dec
jge
push
mov
dec
adc
sub
loope
cld
leave
rolb
testb
es
pop
popa
fidivl
cmpsl
mov
jle
lods
int
xchg
xchg
in
lret
sti
popf
icebp
xchg
pop
pop
push
push
inc
push
and
xchg
jnp
xor
xchg
dec
xchg
imul
cmp
mov
adc
sbb
cmp
and
mov
icebp
dec
daa
inc
insl
sub
sbb
sbbb
ljmp
xchg
cmpsl
or
ret
pop
mov
mov
mov
lods
or
repz
xchg
cmp
push
arpl
cwtl
add
xchg
cwtl
mov
mov
imul
mov
lcall
fs
fldenv
sbb
jnp
jns
or
test
dec
les
mov
jge
roll
mov
bound
add
mov
cmpsl
jmp
shlb
popf
test
jecxz,pn
adc
daa
add
in
xor
push
mov
jl
xor
daa
mov
xor
or
lret
inc
cmp
xor
lock
jmp
dec
insl
vmovaps
jecxz
nop
push
push
push
xchg
sbb
mov
jmp
dec
mov
movsl
clc
test
mov
mov
xor
mov
js
add
xor
pop
cmp
pop
push
mov
adc
xor
sub
adc
and
push
add
pushf
sub
or
lcall
pop
cwtl
mov
jl
cmpsb
les
mov
loope
dec
in
adc
addl
push
cli
stos
stos
sub
aad
jl
imul
add
or
mov
cmp
aas
test
sbb
mov
aaa
xchg
orl
push
bound
jns
das
pop
sbb
shl
hlt
cmpsl
mov
mov
add
test
ljmp
jmp
ret
bound
pop
mov
js
cmp
inc
lea
xchg
mov
sbb
fisttpll
shl
stos
out
shl
sbb
lahf
mov
xor
out
sbb
cmp
mov
sub
pusha
cli
push
andb
jg
mov
rolb
mov
inc
dec
pop
arpl
gs
je
call
mov
push
sbbb
std
sti
sub
and
add
and
call
push
lds
arpl
mov
in
std
popa
inc
jne
dec
cmp
in
in
cmp
jne
sub
cmpl
insb
les
mov
hlt
es
les
pop
cmp
stc
jmp
scas
dec
scas
mov
push
pop
lds
xlat
imul
inc
mov
icebp
imul
pushf
adc
frstor
lods
xchg
or
jnp
scas
add
jnp
jb
scas
adc
inc
jb
mov
sub
or
lods
das
pop
das
pushl
mov
jno
lock
cmp
cmp
decl
flds
mov
imul
cmp
mov
push
pop
xchg
in
push
sbb
xchg
movsb
test
in
in
jae
add
mov
inc
jecxz
imul
cmp
inc
sub
xchg
ss
cmp
jg
lds
xchg
xchg
push
mov
jg
add
cmp
stos
cmp
nop
push
mov
adc
lock
mov
lods
inc
xor
ss
dec
mov
mulb
or
es
fmul
mov
lds
lock
mov
inc
stc
fistps
lock
ror
stc
pop
jb
push
in
jge
das
add
rcrl
push
dec
dec
out
dec
cmp
lret
adc
test
frstor
mov
mov
xchg
cmp
addr16
jg
int
pop
lret
aad
xchg
scas
outsb
inc
in
stos
xchg
lods
push
xchg
lret
addr16
imul
pop
push
fwait
dec
jb
bound
xor
shrb
ss
mov
dec
mov
push
and
icebp
dec
mov
sbb
out
jecxz
push
movsb
mov
jae
mov
stos
adc
cltd
push
movsb
cli
push
in
mov
iret
push
jae
pop
cmp
imul
adc
mov
cmp
cmp
frstor
fadd
jmp
pop
push
pop
sub
fcompl
ja
sub
sbb
les
adc
cli
cmp
je
mov
aad
xor
test
add
nop
jnp
mov
in
rcrl
mov
jg
sub
jnp
test
aad
mov
push
lock
or
mov
enter
ds
addr16
fcoml
inc
inc
push
pop
adc
jge
inc
addr16
test
cltd
sbb
aas
or
cmp
xor
inc
movsb
lock
addr16
into
mov
aad
aam
cmc
int
pusha
ljmp
sub
dec
cmpsb
jmp
roll
add
andb
xchg
mov
ret
sbb
pushf
pop
fdivl
je
xchg
inc
pop
sub
adcb
fwait
mov
jo
push
cmp
xchg
daa
pushf
call
imul
out
sub
jb
xor
mov
scas
jnp
cmp
jo
pop
or
xlat
and
add
jg
mul
ja
adc
inc
test
out
lea
lds
aam
rcrl
ret
mov
mov
jo
sub
daa
sbbb
or
pop
pop
mov
push
ja
and
lret
push
repnz
fsubrl
pusha
addr16
mov
imull
data16
punpcklwd
inc
call
inc
cmp
ret
pop
rcrl
mov
andl
cmc
int
xchg
mov
scas
rorb
cmp
fxsave
enterw
clc
inc
in
dec
mov
call
sti
adc
mov
jns
ljmp
push
push
aad
adc
lods
inc
imul
pushf
inc
aad
add
adc
cli
jmp
rcrl
test
mov
loopne
in
shll
dec
lods
xchg
and
jae
dec
pusha
pop
ret
mov
mov
int
mov
and
mov
jb
xor
xchg
sbb
lds
adc
hlt
lods
pop
repnz
stos
inc
jmp
dec
push
mov
movb
fistps
add
bound
jne
and
ror
stos
movsb
cmp
inc
lcall
fdivrs
movsb
mov
jg
fimull
in
xchg
add
leave
adc
lret
fiaddl
or
daa
dec
repnz
lret
sub
adc
in
and
bound
inc
inc
insb
push
stc
andb
notb
sbb
test
adc
shrl
inc
ja
loopne
jmp
cmp
loopne
or
dec
push
fnsave
test
aam
mov
sbb
push
scas
shl
xchg
loop
xor
dec
in
outsl
cmp
aaa
in
cmp
xchg
xor
iret
inc
inc
sbb
jg
loopne
mov
lcall
and
js
les
sahf
repnz
fadds
cmpsl
add
je
or
adc
mov
cmp
pop
xchg
pop
loopne
or
xchg
call
jb
xchg
cmp
test
pop
sbb
jns
cld
xlat
enter
push
insl
pushf
gs
inc
or
testl
mov
mov
jmp
into
clc
movsl
jno
cmc
and
cli
data16
jo
movsb
pop
sub
or
cmp
dec
fwait
aam
push
repnz
push
dec
fisttpll
mov
and
mov
into
inc
std
in
mov
jno
into
sbb
pop
pop
or
leave
inc
aas
inc
lods
cmp
pop
js
push
cwtl
inc
push
out
sbb
or
movsb
les
fdivl
sub
insl
xor
mov
decl
lcall
xor
mov
adcl
and
pop
rolb
icebp
inc
loop
mov
addr16
push
test
jmp
inc
jne
mov
pop
mull
and
sub
rcrb
aam
or
test
mov
mul
inc
lret
into
das
sahf
xor
push
inc
cmp
cmpsl
pop
dec
dec
insl
pusha
inc
adc
lahf
decb
and
push
jl
mov
fwait
mov
lods
mov
outsl
lock
rol
jae
push
xchg
adcl
pop
mov
pop
sub
cmp
out
inc
mov
cmp
int3
inc
mov
test
jl
mov
popf
mov
test
sbb
jg
adc
xchg
scas
adc
xor
cld
les
xchg
jbe
pop
push
fcompl
insb
mov
mov
pop
sub
push
rolb
push
pop
cld
enter
cmp
jmp
pop
insl
stos
mov
xchg
dec
jo
loopne
stc
insl
jnp
inc
das
or
xchg
sub
rcll
lods
jp
fwait
and
iret
xor
les
add
xor
out
sub
add
adc
mov
sub
sahf
test
je
mov
mov
adc
mov
loope
jle
iret
pop
sarb
pop
jge
add
stos
in
cmp
or
or
pop
mov
cltd
and
fsubrs
in
push
test
into
cltd
xor
jns
push
clc
shll
or
mov
daa
incl
test
or
fimuls
stos
loop
je
scas
sub
rcrb
mov
cmp
leave
sahf
adc
mov
dec
pusha
jge
stos
test
add
negl
lock
jns
dec
sbb
enter
push
mov
mov
shrl
test
add
aam
cmp
add
aaa
dec
mov
hlt
dec
sub
sbb
bound
xor
adc
aaa
mov
cs
es
out
pop
dec
out
push
lock
into
xchg
xchg
jbe
adc
rol
sub
fsub
dec
lea
sbb
cmp
lods
out
js
les
mov
jecxz
dec
sub
sub
adc
in
push
stc
sub
and
push
mov
xchg
les
popa
and
paddd
jnp
and
dec
jno
inc
cmp
jmp
pop
mov
adc
jge
mov
push
sub
rcr
cli
add
and
pop
sbbb
jg
repnz
dec
cwtl
int
sub
or
xchg
call
test
clc
mov
pop
popf
rclb
fcmovne
cli
lods
cltd
pop
push
subb
mov
lods
icebp
test
sti
inc
dec
stc
lea
add
shll
repz
stc
add
add
xchg
gs
je
fiaddl
out
mov
and
aas
pop
cmp
call
ljmp
cmp
jae
pop
mov
loopne
mov
push
fs
push
stos
out
fildll
sub
in
inc
mov
wbinvd
sarb
lods
sub
or
pop
scas
iret
in
cmpb
pop
inc
data16
cmc
das
sarl
push
dec
dec
mov
or
jno
add
xor
shll
jmp
jecxz
push
mov
jl
inc
mov
mov
call
cli
push
movsl
lods
push
out
jg
shrl
cmc
sub
mov
ja
or
jge
mov
or
adc
outsl
jle
cmpsl
decb
mov
push
or
inc
xchg
push
jmp
out
in
jl
mov
in
pusha
or
mov
adcl
xlat
push
es
lock
cli
xchg
repnz
adc
outsl
pushf
mov
inc
shl
dec
sbb
inc
loope
adc
sbb
lret
cmp
xor
or
sbb
mov
pop
std
xchg
xchg
cmpsl
clc
inc
lahf
ja
jae
mov
mov
je
mov
add
lcall
xchg
movsb
xor
in
fdivrs
xor
fbstp
mov
int
sub
add
xor
mov
mov
mov
mov
std
cwtl
iret
adc
jl
add
ja
sbb
aas
and
loop
lahf
or
loop
outsb
je
and
mov
and
add
lret
fwait
and
cmc
test
shrb
pop
xchg
mov
mov
pop
xor
jbe
push
rorb
idivb
mov
lcall
inc
imul
add
lcall
test
jnp
hlt
aas
loope
xchg
call
xor
cmp
shlb
pop
mov
jecxz
adc
out
ret
popf
add
sbb
sub
sahf
mov
inc
bound
scas
daa
cld
adc
notl
and
sub
int3
out
fmull
arpl
jge
fsts
int3
in
jb
adc
loope
cmp
dec
inc
cmpsb
sahf
push
je
loopne
sbb
inc
mov
or
out
inc
inc
scas
mov
inc
nop
or
jo
cmpsl
sbb
push
jl
cmp
push
push
imul
stos
xor
mov
adc
pop
popf
and
psrlq
std
in
dec
mov
shll
lret
add
pop
shrl
mov
jg
sub
dec
in
xor
dec
loopne
test
inc
sub
mov
enter
sub
lret
aad
xchg
leave
ss
xchg
fcoml
add
inc
adc
lcall
mov
cld
jle
test
xchg
pop
adc
and
outsb
sahf
scas
xchg
addr16
sbb
xchg
lahf
xor
scas
pavgb
adc
shlb
ja
or
xchg
test
out
or
and
lea
push
xor
pop
jae
xor
fisubs
adcl
shlb
cmp
xchg
in
div
pop
out
jecxz
sub
sub
dec
lret
inc
push
mov
mov
fcom
push
aaa
add
cmp
test
push
fwait
xchg
enter
add
faddl
cmp
repnz
or
lret
cmp
pop
js
mov
imul
mov
mov
cmp
sub
mov
shll
cmc
and
cmp
add
cltd
dec
out
jb
cs
sub
cmp
std
xor
add
in
cmpsl
pop
in
cmp
icebp
cmp
add
psadbw
xlat
mov
out
xchg
jnp
xchg
stos
loopne
lods
outsl
jns
push
js
add
mov
dec
aas
xchg
push
cld
sbb
mov
jns
sub
mov
xchg
xchg
into
fwait
divb
jmp
mov
lods
cmp
notl
clc
out
leave
out
pop
jp
xchg
dec
call
mov
outsl
iret
adc
pop
sbb
cwtl
test
inc
inc
movsb
fwait
pusha
cli
daa
ljmp
ret
popa
rclb
sub
shll
cwtl
dec
xchg
pop
mov
js
mov
inc
or
test
iret
cs
hlt
push
imul
jns
jbe
jl
jne
xchg
inc
pop
cs
ret
or
pop
test
or
mov
scas
mov
xchg
movsl
mov
dec
jp
repz
xchg
sahf
xor
dec
xor
xchg
xchg
ds
or
loope
push
jbe
xchg
cs
dec
outsb
sahf
ja
insb
cmpsl
stc
dec
mov
pop
jmp
dec
pop
int
sbb
mov
in
inc
fs
sti
in
cmp
jg
aas
cld
dec
jge
jmp
shll
test
cmpsl
xchg
pop
std
add
lods
aas
push
mov
ficomps
push
adc
std
in
stos
push
clc
pop
mov
mov
inc
cli
push
adcl
jl
cld
add
mov
test
lea
jle
lods
mov
cltd
dec
call
cmpsl
cmp
addl
mov
xchg
xchg
or
sub
mov
fldenv
cmp
add
imul
clc
or
int
jno
and
mov
jne
fsub
push
movsb
fsubrs
or
leave
pop
lods
mov
cmpsb
movsb
icebp
loop
inc
mov
imul
sub
fldl
mov
add
test
mov
pop
aad
je
mov
cltd
ljmp
sbb
add
dec
mov
lcall
jp
pushf
or
mov
xorb
and
in
sub
out
mov
push
popf
dec
jmp
popa
cltd
mov
sbb
sub
leave
sahf
fildl
shlb
cwtl
push
xchg
jg
and
in
dec
dec
js
pop
mov
aas
add
out
iret
inc
movsl
lods
xchg
jo
mov
adc
sub
ja
sahf
mov
ds
test
mov
inc
testl
test
lea
add
xchg
shlb
insb
sahf
mov
clc
pop
xchg
scas
xor
sub
outsb
jg
sub
sbb
and
out
cmp
pushf
push
mov
ds
fsubr
or
scas
xchg
pop
xlat
outsb
or
stc
sub
dec
fldenv
cmp
cmpsb
lock
sarb
ds
dec
stos
sarl
push
idivb
dec
mov
pop
mov
mov
enter
mulb
sbb
aaa
nop
loopne
daa
add
out
add
mov
jl
out
sub
fsubrl
mov
jge
int
mov
xlat
add
ja
jg
test
in
out
mov
daa
push
adc
out
mov
mov
lret
xchg
xlat
das
add
push
mov
xor
sub
or
rolb
or
xor
js
pusha
imul
shlb
je
cmp
bound
loopne
mov
mov
sahf
and
insl
push
rolb
stc
adc
ficoml
call
add
sbb
inc
leave
ja
das
sbb
popf
xchg
mov
inc
call
inc
ljmp
fucomi
std
xor
add
lock
push
xor
cltd
pop
lds
mov
xchg
fstpl
stos
sub
stos
cmp
je
inc
out
cmp
cmp
rorl
in
mov
clc
adc
rclb
int
add
sbb
add
mov
xor
mov
xor
inc
and
std
inc
in
sub
sahf
adc
je
je
test
cmp
and
jl
xor
sbb
push
pop
rcr
add
mov
inc
les
clc
imul
aam
mov
dec
gs
push
or
and
jmp
mov
mov
sub
mov
cmpsb
jo
add
xchg
ds
push
cltd
jge
adc
mov
or
aad
mov
inc
lds
mov
and
or
xchg
out
mov
imul
or
out
cli
sub
je
inc
or
mov
js
fdivl
push
int3
das
cmp
xor
push
out
add
fbstp
add
testb
test
fwait
data16
fidivrl
pop
pop
and
aam
xchg
mov
fldl
and
and
push
push
rcl
cmp
add
hlt
ljmp
mov
mov
mov
xchg
mov
pop
mov
test
cmp
push
adc
lods
push
ficoml
mov
movsl
push
mov
pop
cltd
cmpsb
lahf
enter
dec
xchg
aam
adc
ja
sbb
pop
jle
mov
shll
inc
mov
imull
lods
mov
mov
mov
movsb
std
or
in
add
mov
bound
divps
stc
xor
std
imulb
adc
inc
mov
xchg
dec
aas
aam
fldenv
out
outsb
inc
push
test
xchg
push
insl
aaa
js
lcall
fdivrs
cli
fstpl
inc
scas
scas
push
sub
mov
cmpsb
in
sub
call
jno
mov
mov
xlat
push
call
jg
movsb
lds
movsl
add
cmp
int3
mov
jg
mov
imul
sbbl
jp
add
testb
roll
jecxz
aas
stc
clc
push
mov
jle
movsb
mov
sahf
push
outsb
fbld
insl
int
cmp
js
repz
sbb
ror
adcb
jecxz
jge
inc
mov
in
ja
pop
out
pushf
jbe
arpl
cmp
mov
add
and
mov
jae
push
push
sar
sbbb
lret
pop
rolb
lcall
test
dec
movsb
and
adc
and
stos
loopne
hlt
enter
mov
sbbb
lcall
cmpsb
sbb
xchg
fildll
ljmp
mov
fs
dec
inc
adc
push
sahf
mov
mov
lret
mov
cli
mov
lods
test
push
js
fsincos
xor
xchg
mov
nop
jno
lret
lret
fdivp
mov
lock
cli
sti
jne
call
rcrl
mov
cmp
cmp
insl
add
ljmp
mov
cmpb
cltd
dec
imul
repnz
je
add
push
test
loope
sbb
jo
jbe
fbstp
push
clc
bound
mov
loop
outsl
xor
and
rcll
sahf
enter
cmp
pop
inc
cmp
aas
movsw
pop
shrb
inc
sub
push
ret
adc
jmp
sbb
lahf
sbb
pusha
cli
mov
inc
mov
fs
adc
jl
leave
push
add
xchg
movsb
int3
or
into
mov
xchg
dec
daa
dec
arpl
das
push
jmp
and
sahf
jb
stc
cmpsb
sbb
faddl
shrl
cmpsb
pop
repz
jb
sub
sbb
mov
icebp
sahf
aaa
cmpl
jecxz
in
or
push
pop
sbbl
adc
jo
call
mulb
fisubrs
jnp
mov
sub
fsts
push
lods
int
xchg
mov
loop
xchg
loopne
xlat
jp
xchg
pusha
cmpsl
cli
rorb
mov
movsl
dec
inc
mov
or
clc
divb
imul
xchg
pushf
clc
push
dec
push
cmp
cmp
inc
xchg
stos
xorl
jg
inc
int3
arpl
std
fiaddl
insl
mov
dec
cmp
rcr
or
lcall
pop
imull
or
lret
imul
adc
fstps
mov
hlt
aam
das
xchg
push
pusha
in
pop
addl
inc
dec
paddusb
in
daa
inc
lea
insb
nop
lock
inc
xor
jle
pop
nop
dec
push
cli
sub
mov
push
lahf
mov
daa
aaa
pop
dec
pop
nop
or
xor
or
cs
jl
data16
notl
mov
enter
jb
pop
sub
push
jle
xchg
xchg
sbb
nop
adc
push
push
sti
adc
addr16
sbb
pop
mov
adc
push
stos
or
xchg
jle
inc
leave
sbb
cmp
gs
sbb
add
pushf
cmp
mov
icebp
idivb
push
stc
inc
pop
imull
mov
adcl
mov
or
fidivrl
fidivl
in
inc
fsubs
dec
enter
lcall
scas
and
push
in
rcrb
stos
nop
jecxz
xchg
orb
das
out
mov
jae
and
inc
jecxz
outsl
mov
or
push
fnstenv
shll
sarb
mov
xchg
nop
outsb
push
jo
or
mov
fadd
roll
or
inc
fwait
jp
ret
xchg
stc
push
mov
movsl
rcr
cmp
add
insb
pop
pop
mov
xchg
push
mov
movsl
jnp
lods
dec
aad
mov
lret
lret
adc
lea
in
sbb
or
xlat
es
sahf
jecxz
mov
in
jnp
test
fdivrs
int
ret
xchg
mov
push
dec
arpl
cs
test
mov
nop
xlat
adc
cmp
shlb
cmp
sbb
fmul
in
fwait
jp
cmp
jnp
xchg
inc
in
cmc
leave
jmp
rclb
dec
sub
out
lods
cmp
mov
cld
cmpsb
and
out
lcall
mov
jo
js
std
jge
sub
push
sti
insb
push
dec
les
cmp
mov
jle
xor
mov
push
or
cwtl
lret
add
fisttpll
adc
lret
jl
test
jne
mov
add
lcall
icebp
shlb
mov
dec
xor
aaa
add
jl
push
pop
mov
popf
loope
scas
ljmp
jnp
jbe
scas
fs
and
mov
aad
mov
ss
or
xor
xchg
xlat
mov
jmp
jg
leave
or
sbb
bound
inc
and
mov
sbb
mov
fnsave
test
out
xchg
cld
push
cmp
cmpsb
or
xor
aad
cmp
cmp
add
sbb
cmp
jno
push
loope
xchg
mov
mov
jnp
ret
stos
jecxz
add
mov
mov
mov
fwait
imul
xchg
mov
data16
lds
popf
mov
sub
daa
mov
in
fwait
lcall
ret
adc
jo
push
mov
test
jl
mov
add
push
sbb
cmp
repnz
daa
arpl
push
jg
push
mov
pop
loope
aad
cmpsb
adc
fcompl
adc
enter
xor
je
addr16
imul
mov
sahf
pusha
out
call
jg
push
inc
add
add
lret
sub
mov
push
adc
lods
daa
jge
sti
jge
and
jg
jno
rorl
sbb
mov
call
jecxz
xor
cld
push
insb
xlat
aaa
mov
incb
nop
in
fsts
add
sbb
lret
adc
inc
mov
sub
cmpsb
cwtl
cmp
shlb
inc
or
sbb
repz
int
mov
cli
in
xchg
mov
mov
or
imul
or
loopne
js
repz
pop
or
pushf
stc
xchg
or
add
mov
lret
in
add
inc
jno
push
add
imull
test
bound
in
xor
in
aas
cmp
cwtl
popa
pop
push
rcr
leave
jb
sub
jge
sahf
bound
push
aas
mov
mov
sbb
loop
out
pop
rcrl
cmp
dec
mov
fadds
xchg
notl
call
mov
xlat
xchg
or
popf
imul
fs
loop
push
xor
pop
inc
xchg
xchg
cmpsl
jno
out
mov
cmp
fnsave
dec
clc
imul
in
cmc
mov
cmp
mov
sbb
scas
and
jle
mov
mov
and
pop
cmpsb
sahf
fsub
out
mov
mov
sub
xor
mov
inc
sbb
sbb
fadd
pop
sub
out
xchg
cmpsb
mov
sbb
sbb
cmp
mov
lea
cltd
mov
loop
cmp
or
sub
fcompl
add
insl
xchg
dec
ja
out
sar
xor
popa
fbld
pop
mov
out
cmc
add
cltd
push
stc
enter
sbb
orps
fisttpl
stos
iret
daa
pop
js,pt
xlat
sbb
sub
or
test
stos
jne
pop
nop
scas
inc
inc
repz
inc
enter
dec
cmp
lock
test
add
cmp
or
mov
sbb
cmp
repnz
jge
jno
repz
or
inc
jne
dec
inc
sbb
push
inc
sub
mov
sti
adc
jne
ljmp
adc
jl
iret
jbe
jns
xor
outsb
push
ljmp
lods
jmp
iret
hlt
cltd
inc
test
shlb
adc
idivl
lahf
loop
cmpsb
jge
sbb
pop
pop
fisubl
push
iret
aad
test
jns
mov
fdivrp
nop
mov
mov
push
pop
adc
pushl
movsb
ja
xlat
mov
xchg
fidivs
ljmp
sti
sub
das
adc
mov
push
sbbb
mov
lret
subl
mov
nop
mov
inc
cmp
mov
push
lods
mov
notl
mov
push
arpl
mov
lret
jmp
cmp
pushf
mov
xorb
adc
ss
aam
bound
data16
sarb
inc
adc
and
mov
push
lods
jle
cmp
mov
fs
add
and
mov
popl
sbb
mov
and
xchg
jnp
mov
sbb
add
fcoms
mov
fidivrs
loop
mov
ljmp
fcoml
xchg
divb
sub
or
sub
mov
jge
mov
stos
xor
mov
mov
addb
push
pusha
mov
jno
push
jne
mov
mov
pop
mov
fnstcw
mov
inc
cmp
ja
scas
test
mov
push
and
mov
xor
inc
outsl
fimull
and
cmp
and
pop
cli
loop
cmp
sbb
lret
aaa
xor
test
aad
cmp
int3
mov
push
dec
popf
bound
or
cmp
insl
shrl
sub
dec
hlt
add
cmpb
test
add
jge
addr16
and
jo
xor
jae
pop
xchg
push
lea
nop
cmp
cmpsb
adc
xor
fisubrl
stc
jg
xchg
push
jecxz
cld
mov
push
xor
aam
das
test
fadds
pop
xchg
clc
cmp
fisubl
mov
loop
mov
add
push
cltd
cmpsb
adc
andb
jl
outsb
sarb
push
sub
pop
ja
pop
mov
aaa
ja
daa
aad
adc
arpl
test
adc
movsb
enter
scas
popf
loope
adc
adcl
sub
add
xchg
loop
enter
aaa
pop
inc
stc
cmp
sbb
jae
xor
xor
popf
mov
lcall
sbbb
fmuls
in
verr
adc
or
push
push
and
push
hlt
push
push
int
out
popl
cwtl
jo
int
mov
pop
lods
in
and
mov
push
mov
jge
xchg
pusha
mov
fsqrt
cmp
mov
rcrl
mov
out
push
shll
aaa
xchg
icebp
pop
add
int
dec
repnz
aaa
push
stos
stos
mov
push
dec
cmp
pop
dec
arpl
shll
aam
cmpsl
sbb
mov
lods
lods
or
enter
sub
xchg
xchg
adc
add
sub
xlat
pusha
cmp
loopne
pop
cmpsl
mov
dec
mov
sub
xor
aam
lret
inc
sbb
outsl
adc
lea
dec
cmp
jae
pop
adc
hlt
xchg
push
xor
aaa
dec
add
push
or
mov
push
xor
into
jne
loopnew
call
in
pop
adc
repz
imul
inc
mov
pushf
or
mov
pushf
test
int
xor
lahf
shlb
cmpsl
sahf
xor
mov
stc
aad
add
adc
cmp
fdivs
xor
mov
mov
fisubs
mov
int
ficoms
jno
popa
mov
rcr
or
shr
push
xorb
pop
cmp
cmpsb
leave
icebp
mov
jo
test
sbb
outsl
jo
fidivl
out
filds
fstpl
sahf
push
mov
dec
mov
outsb
mov
pop
push
lock
adc
mov
ret
push
adc
mov
jecxz
repz
shl
jmp
mov
aas
mov
mov
ss
lea
push
out
dec
nop
inc
nop
jbe
loop
cmp
xor
fptan
out
dec
jl
push
shl
ss
and
jo
jmp
inc
fwait
pop
mov
sub
lcall
xchg
hlt
outsb
repnz
dec
cmp
add
and
mov
jle
test
daa
mov
shlb
dec
inc
xor
adc
pop
or
adc
mov
lea
dec
xchg
imul
int3
mov
shrl
jbe
cmpsl
mov
leave
jnp
stos
pop
aad
sbb
mov
loop
insb
push
nop
lds
into
das
enter
pushf
aaa
bound
int
cltd
icebp
lea
test
add
fistl
sbb
mov
cmp
mov
jmp
ficompl
pop
in
mov
inc
dec
addr16
out
pop
mov
scas
mov
fsubr
sub
push
mov
inc
dec
dec
add
jg
adc
cmpsb
push
sub
insl
mov
sub
lods
sub
sub
adc
decl
mov
cwtl
dec
inc
int3
push
fwait
outsb
xor
push
test
pop
push
lret
ret
test
or
add
aad
ficoms
fistps
push
dec
dec
jns
sub
ret
aam
mov
iret
sbb
jge
cmpsl
stos
inc
adc
gs
fidivrl
mov
mov
and
xor
ret
ret
xchg
sbb
mov
fldl
fwait
and
daa
in
sbb
out
push
add
mov
data16
fiadds
ja
mov
fwait
ds
sub
jge
mov
pop
mov
dec
es
sti
div
jmp
sub
repz
call
mov
xchg
jno
sahf
addr16
sbb
inc
xor
jle
sbb
jnp
out
lret
call
or
mov
lea
movsb
pushf
enter
fistpl
test
push
inc
mov
out
je
aas
pop
in
arpl
xchg
pop
dec
daa
sub
mov
sub
into
fdivrs
add
push
add
jp
sub
sti
push
ss
test
test
cmpsl
cltd
sbb
fisttps
fistps
add
out
data16
jg
push
sbb
mov
lods
insb
cs
test
jp
lods
dec
dec
mov
add
xchg
xlat
push
dec
lock
xor
xchg
push
xchg
inc
mov
ret
ljmp
faddl
mov
stc
outsl
dec
push
outsb
or
aaa
push
or
sahf
dec
addr16
aad
push
or
jg
add
xchg
pop
dec
jmp
in
pop
mov
inc
repz
int3
inc
adc
add
inc
jmp
adc
sahf
movsb
jecxz
pushl
pushf
lea
mov
sbb
jge
pushf
adc
add
jbe
pop
and
pop
pushf
testb
and
gs
mov
mov
scas
loope
movsb
lret
sbb
sbb
cmp
hlt
sub
pop
xor
cmp
mov
pop
push
aam
pusha
cmp
push
jno
xchg
insb
pop
pop
in
jmp
inc
insb
mov
sbb
loop
sarb
pushf
out
cmp
popf
out
and
addr16
mov
scas
xchg
ffreep
xor
icebp
jne
out
xor
add
test
aad
test
in
inc
mov
frstor
les
imul
jbe
fnsave
push
xor
and
xchg
and
and
icebp
sub
xchg
pop
idivl
pop
mov
scas
dec
jb
fidivl
push
sub
mov
std
add
or
stc
push
rorb
and
pusha
jns
cmc
fidivl
mov
pushf
fsub
xchg
sbb
xchg
out
sub
repz
inc
dec
stos
imull
andb
lods
pusha
sub
mov
and
ret
jp,pn
ljmp
stc
or
je
fistpl
dec
jmp
xor
and
or
adc
push
testb
push
scas
jecxz
jg
arpl
mov
push
aam
sub
xchg
daa
fsubs
add
pop
stos
jb
push
pop
pop
or
fiaddl
sti
xor
gs
fdivrl
pop
aaa
ja
jge
loopne
jg
cmpsl
adc
out
popa
mov
shlb
sahf
stc
mov
ds
sbb
fnstenv
push
or
sub
cmp
push
aas
xor
outsl
lods
xchg
loopne
mov
mov
leave
cmp
mov
xor
pop
into
je
inc
addr16
aaa
and
daa
shll
or
pop
jle
lcall
dec
pop
inc
jge
push
pop
pop
mov
lods
or
xchg
lea
xor
jmp
mov
clc
shl
cwtl
jnp
push
subl
aad
mov
lods
andb
jl
pop
mov
roll
or
cmp
mov
pop
cmp
pusha
push
or
or
dec
mov
dec
xchg
mov
add
push
sbb
jbe
ficoms
mov
mov
xor
or
test
test
or
pusha
cltd
arpl
fisubrs
gs
stc
add
nop
out
jnp
jne
xor
jbe
stc
xor
cmp
lret
cmpsb
or
mov
ficompl
add
icebp
sbb
pop
out
adc
inc
shrl
ret
push
add
loopne
dec
adc
cmp
xchg
movsl
cmpsb
mov
add
mov
dec
stos
cmp
adc
jae
and
dec
push
in
xchg
xor
xchg
ja
cld
fs
ss
mov
ss
mov
hlt
cwtl
inc
cwtl
xchg
stos
repz
ja
adcb
sbb
pop
sbb
outsb
add
in
loope
test
pmaddwd
adc
add
jno
and
daa
leave
mov
std
xchg
test
fsubrp
mov
cli
aas
shl
push
or
sub
into
loope
inc
sbb
ret
nop
sub
mov
sub
sbb
enter
sub
fs
jle
sbb
xor
push
xchg
and
push
out
add
repz
out
das
or
xorb
jne
cmpsl
aas
jmp
stc
mov
aam
push
mul
add
and
inc
lds
jae
and
dec
in
loopne
add
xor
aam
jno
mov
push
dec
xor
adc
push
lret
in
sub
jmp
jnp
cmpb
enter
lods
jnp
orb
negb
jo
xor
sbb
call
add
mov
mov
xor
jo
adc
add
xor
ficoml
mov
js
inc
out
push
fbstp
adc
js
add
push
pop
rorl
rorb
stos
repz
imul
or
push
clc
test
insb
jp
or
cmp
jp
dec
lahf
lcall
cmpsl
push
and
push
add
ret
mov
mov
mov
lret
pop
shll
mov
ds
ss
loop
imul
adc
ja
lcall
rcrb
push
aas
std
pushf
add
jns
scas
stc
jmp
in
paddb
adc
cld
xor
push
dec
insl
in
inc
pop
aam
mov
and
inc
pop
repnz
out
fmul
cmp
push
jge
mov
repnz
gs
adc
inc
inc
lret
sbb
mov
stos
cltd
setbe
leave
outsb
mov
iret
jnp
in
add
std
das
iret
scas
fwait
in
dec
mov
repnz
leave
subb
popf
fidivs
imul
data16
sbb
xchg
cmpsb
cmpsb
mov
mov
pop
cmc
shlb
nop
adc
mov
out
inc
xchg
dec
insl
cmp
imul
shrl
pop
jp
xor
sahf
cltd
lret
mov
jo
imul
inc
cmc
lods
cmp
inc
and
sbb
mov
rorb
lock
std
or
rcrb
mov
flds
and
jno
adc
mov
andl
dec
inc
add
push
jns
lahf
and
push
fsincos
incb
pop
add
and
lret
adc
mov
les
add
subb
add
mov
push
outsb
adc
or
int3
cmp
and
lods
daa
inc
out
ror
mov
jecxz
in
jp
jnp
jb
dec
stos
outsl
mov
fsubs
adc
cltd
jb
dec
mov
jae
int3
icebp
xchg
mov
xor
test
xchg
sub
jge
sbb
sub
adc
pop
enter
add
fcoml
push
outsl
je
push
dec
ret
and
test
loope
or
dec
push
stos
mov
fst
dec
dec
out
fs
sahf
add
xor
and
cmp
in
aad
lahf
ret
push
aam
cwtl
mov
shll
fwait
inc
sub
jmp
mov
shlb
adc
mov
icebp
in
mov
cmpsb
push
test
pop
xchg
push
pushf
inc
push
or
mov
xor
or
cmp
cmp
jg
test
sbb
adc
xor
inc
imul
fisubrl
arpl
stc
mov
pop
xlat
fs
cmp
mov
stc
mov
sub
mov
and
pop
or
js
jns
mov
lds
ljmp
pop
push
jmp
in
out
outsb
sbb
xor
push
std
xor
push
out
xchg
add
lds
adc
int
or
aad
xchg
mov
loopne
adc
aam
dec
sub
cli
bound
sti
test
fildll
scas
mov
cs
dec
lahf
clc
js
jns
add
push
jbe
cmc
int3
jbe
pop
add
lcall
sub
test
inc
mov
pop
xchg
mov
xchg
loop
lods
loop
lahf
or
adcb
cmpsl
sub
decb
cmc
jle
pop
rcrb
and
std
cltd
push
lret
push
lret
jge
jp
adc
xorl
shl
orl
mov
test
inc
in
mov
das
insw
lock
enter
dec
lea
daa
inc
je
inc
or
lods
sbb
sub
in
jne
push
mov
xchg
push
mov
popf
test
xchg
sbb
ret
pop
sbb
mov
mov
icebp
shrl
cmp
fcoms
cmp
and
xchg
pop
jnp
mov
pop
das
cmp
cmc
filds
jno
aas
cmp
mov
sbb
lcall
aad
sahf
scas
push
xor
xor
test
fnstsw
cmp
jno
lcall
test
in
idivb
sbb
outsb
jecxz
nop
imul
imul
sti
xchg
sbb
clc
arpl
clc
push
incl
push
cmpb
pop
mov
aas
add
mov
and
push
sub
stos
fidivs
lods
adc
jg
mov
lret
xchg
mov
stc
adc
xchg
ja
not
out
mov
dec
adc
xor
mov
xchg
test
xor
lea
or
jle
push
jae
jle
inc
hlt
fldenv
aam
add
sbb
inc
out
dec
scas
push
xchg
dec
das
lock
or
into
and
negl
fwait
shl
dec
xchg
shll
lcall
mov
push
sub
fstp
cmp
movsb
add
and
fsubr
std
sarl
pop
and
stos
pop
push
pop
inc
adc
mov
xlat
xchg
shlb
call
ret
out
cmpsb
push
iret
imul
mov
jns
ror
in
mov
rcll
ss
stos
xchg
and
adc
clc
ret
cmp
shrb
jecxz
loop
shlb
scas
jge
push
imul
call
fwait
mov
and
aaa
and
sub
push
popf
lea
mov
jne
xchg
adc
pop
jns
mov
inc
imul
stc
mov
xchg
push
scas
rolb
lea
cmp
push
jp
stos
scas
dec
lods
jns
xchg
mov
xor
aas
cmc
xor
sbb
sbb
push
ss
xchg
jle
add
das
jecxz
enter
cmp
fldcw
divl
test
fldcw
sub
cli
mov
lahf
or
push
mov
cmp
or
idivl
push
jbe
xchg
test
ja
sar
ds
jle
sub
dec
jp
sub
mov
ja
xor
popa
mov
mov
in
lds
testb
neg
pop
sub
dec
or
setbe
mov
stos
out
icebp
call
cmp
fcmove
jge
dec
into
pop
cmpsl
cli
dec
cmp
or
sahf
stos
rorl
popl
or
jbe
xchg
mov
fcmovu
nop
ret
xor
xchg
jle
dec
sbb
fs
adc
mov
jo
pop
mov
cmc
lods
xchg
push
cmpsb
dec
xchg
pop
sbb
add
sub
pop
pop
cmp
push
int
push
push
and
xor
adc
mov
mov
jo
lcall
imul
mov
mov
dec
stos
mov
es
or
pop
dec
xchg
repnz
outsl
jne
jle
xchg
pusha
aad
jecxz
sub
ljmp
cmp
cmpsl
jne
pop
insl
sbb
adc
pop
testl
negl
int
push
push
adc
dec
and
xchg
mov
idivl
lds
inc
popa
lods
add
ret
aas
inc
rorl
sub
lahf
pop
dec
fistl
leave
sbb
outsl
sar
ja
lods
jne
dec
mov
enter
adcb
inc
lods
ljmp
mov
lds
inc
aaa
icebp
push
test
lock
mov
insb
xchg
in
dec
push
test
cmp
aaa
dec
or
jo
xchg
mov
orb
cmp
test
dec
aaa
xor
mov
mov
xchg
add
in
jge
movaps
mov
sbb
sbb
sub
std
lds
push
cltd
mov
pusha
aas
scas
ret
clc
lea
icebp
arpl
add
cwtl
pop
cmp
data16
dec
sbb
xchg
pop
jmp
ss
les
cmpsl
dec
test
movsb
and
xor
cs
add
pop
cmp
arpl
xchg
fwait
mov
cmc
std
aaa
or
inc
imull
andb
add
cmp
subl
mov
mov
loop
push
mov
test
addr16
repz
xchg
aas
lret
stos
test
pop
mov
nop
aas
test
or
mov
les
imul
sbb
lcall
std
xlat
int3
stc
or
lods
inc
push
sub
popa
cmpb
pushf
loopne
mov
xchg
jae
xor
or
sub
pusha
lods
mov
int3
in
push
mov
mov
cmp
xorb
and
int
mov
roll
xchg
js
cmp
push
orl
jmp
mov
mov
and
notb
xchg
jecxz
or
xchg
lcall
mov
mov
stc
inc
or
push
lret
push
iret
ret
callw
mov
lock
sub
shlb
or
es
mov
stos
arpl
sub
sub
out
mov
jo
mov
mov
sub
add
adc
or
inc
daa
popf
jge
and
inc
inc
xchg
in
push
ficoml
push
insl
dec
inc
cmp
mov
mov
aam
jae
dec
ja
lret
enter
xchg
ja
xor
imul
cmp
ss
fs
cmp
sub
ret
in
pop
fsubs
imull
out
mov
insl
repz
add
xchg
ficoms
rcll
les
inc
cli
inc
lods
or
out
ret
lock
inc
and
mov
es
out
daa
rep
mov
xor
lea
loop
jp
jnp
ljmp
and
ja
shlb
pop
add
loopne
fmul
testb
std
or
mov
mov
faddl
repz
fiaddl
sbb
xchg
xchg
jns
jp
fisubrs
pop
in
jl
or
inc
out
mov
xor
dec
jne
leave
loope
mov
fdivs
loop
mov
adc
dec
ss
xchg
adcl
leave
aaa
out
mov
or
nop
repz
iret
push
mov
adc
and
imul
arpl
test
ret
fdivl
fxsave
jbe
outsl
in
dec
fisubs
call
xorl
sbb
xor
test
ja
mov
sub
aaa
jnp
vphaddubq
loop
xor
mov
andb
mov
stos
inc
mov
sub
subb
lahf
cmp
les
and
cmp
popa
cmc
mov
xchg
lods
cmpsb
xor
aas
jno
dec
pop
bound
lahf
pop
mov
cld
xchg
inc
lret
push
rol
push
in
divl
or
in
sbb
xchg
sbb
enter
xchg
lods
roll
into
inc
fisttpll
sahf
push
popf
es
dec
push
cmp
leave
mov
iret
fwait
jle
dec
xadd
adc
loop
fwait
call
roll
leave
cmp
jge
mov
add
rorb
pop
adc
jecxz
jbe
push
push
imul
rorb
xor
jge
dec
outsl
mov
pop
cwtl
xchg
push
sbb
mov
lea
andl
mov
sub
fwait
and
xor
in
mov
dec
and
ja
loope
jns
imul
aaa
sbb
outsl
pop
repz
or
dec
sub
dec
lock
cs
add
inc
inc
push
pop
mov
cmp
je
jno
ret
mov
mov
or
and
push
lock
cli
lret
mov
ret
int
jg
out
loopne
jecxz
aaa
loope
fs
or
jo
push
push
aas
cld
shll
jno
push
gs
sti
add
dec
lret
out
iret
mov
mov
out
xor
sub
pop
add
rorl
mov
aas
js
imulb
fisubs
cmp
das
jne
pop
cmp
jae
int3
aaa
adc
mov
cmp
movsb
pusha
rorb
dec
or
lea
cwtl
mov
add
test
xor
inc
mov
cmp
pushf
test
rolb
push
dec
int3
xchg
jnp
stos
popa
int
arpl
mov
fsts
pop
out
add
pop
in
inc
sbb
add
std
xchg
bound
sub
xor
adc
ja
enter
lock
jno
out
or
xchg
or
jns
add
cmp
xchg
jle
lock
and
das
inc
sub
adc
mov
cmp
adc
js
inc
sbbl
jo
pop
adc
std
aam
or
sub
cmp
mov
dec
pop
adc
pop
sub
cltd
inc
ja
out
cmp
inc
mov
loopne
or
ss
xor
fs
jns
lea
jl
inc
dec
or
mov
or
pop
mov
jmp
rorb
das
jle
hlt
or
pop
testb
xor
pop
push
xor
mov
xchg
decl
sbb
popf
sbb
dec
sahf
cmp
clc
das
sub
cmp
leave
push
push
push
loope
lret
mov
jmp
clc
test
adc
mov
ret
push
jg
xor
jmp
xchg
xor
push
and
mov
push
scas
and
or
inc
out
mov
fimull
dec
push
sahf
push
add
sub
mov
push
das
xor
sub
xchg
shrl
mov
pop
lahf
popf
test
call
rolb
dec
push
aad
xlat
sti
jp
aam
fisttps
push
js
add
fcoml
or
pop
cli
cld
rcll
sarl
repz
adc
push
icebp
mov
fidivl
or
lds
xchg
adc
push
mov
gs
mov
xor
add
push
test
out
add
mov
ret
ret
data16
test
imul
int3
add
inc
mov
hlt
imul
insb
mov
push
mov
std
and
mov
pop
test
movsl
loopne
ljmp
sub
inc
jecxz
xchg
add
add
pop
movl
inc
mov
xchg
ret
in
and
lahf
loope
clc
dec
sub
rcll
js
sbb
outsb
loop
fisttps
push
mov
xchg
jle
test
push
fnstsw
ds
mov
mov
clc
jae
and
mov
out
mov
cli
or
mov
ss
inc
push
xchg
faddl
outsl
cmp
cmp
lds
mov
popa
push
mov
xor
int
push
pop
aad
adc
xor
jle
adc
test
push
mov
call
pop
stos
cs
adc
sub
xchg
dec
dec
movsb
xchg
mov
pusha
je
out
mulb
mov
push
sbb
in
mov
pusha
mov
pop
xchg
into
push
xchg
add
add
inc
stc
inc
in
sti
cmp
mov
dec
add
insb
insl
lds
sbb
xchg
ret
inc
outsb
mov
loopne
jne
jnp
xor
out
adc
fcmovnbe
aad
dec
in
or
dec
mov
fstl
mov
arpl
mov
push
aad
lret
in
out
dec
incb
or
pop
and
and
loope
push
fwait
xchg
repz
sbb
mov
lods
jecxz
xchg
mov
inc
bnd
sbb
sahf
stos
or
jmp
movsb
push
fbld
loopne
pop
jecxz
jo
test
and
into
jmp
mov
or
mov
lods
cmp
push
dec
in
inc
mov
mov
mov
push
mov
std
or
pop
fistpll
sub
push
sub
movsb
lret
out
jle
lods
and
and
add
sub
insb
icebp
jbe
xor
mov
jns,pt
add
cmp
lcall
pop
mov
jmp
xor
fs
sysexit
out
stos
sbb
frstor
mov
in
pop
push
mov
mov
xor
popf
push
cmc
ljmp
xor
or
pop
pop
out
mov
pop
xchg
imul
in
or
ficomps
mov
movsl
decl
inc
test
and
ljmp
xchg
cwtl
push
out
pop
push
sub
or
mov
mov
in
imul
sbbl
bound
xchg
and
push
adc
in
fwait
pop
ficomps
cli
jno
push
stc
xchg
jecxz
push
inc
xchg
jo
sbb
scas
aas
arpl
fimuls
mov
dec
scas
xchg
fs
sub
in
dec
jl
cwtl
rcll
jp
lock
mov
cmpsl
mov
cld
notl
cmp
mov
mov
je
insl
and
dec
in
out
jns
scas
jbe
in
ret
xchg
ja
add
and
lret
sub
rclb
mov
xor
daa
xchg
shrb
dec
mov
iret
cmp
sbb
cld
out
stos
cmpsb
les
outsb
lods
call
push
push
movb
aas
lds
stc
inc
fstps
das
jl
mov
ret
lcall
push
aad
xor
inc
push
pop
xor
jl
push
ja
stos
xlat
sbb
into
inc
cmp
and
cmp
adcl
cltd
xor
sbb
pop
or
push
ljmp
orl
adc
and
sti
push
int
mov
sub
mov
pop
pop
xchg
mov
bound
ds
mov
imul
dec
mov
in
pop
mov
rolb
inc
scas
inc
cmp
dec
arpl
imul
add
adc
mov
aaa
ss
in
adc
push
sti
insb
jnp
out
call
iret
xchg
or
or
in
push
lahf
shl
mov
pushf
repnz
and
les
in
xchg
sub
jbe
or
xchg
pop
push
shrl
mov
fcomps
imul
add
pop
inc
adc
mov
jle
rol
fcmovnb
and
lock
xchg
push
jl
dec
lahf
repz
xchg
sub
or
jge
outsb
imul
in
cmp
or
or
push
ds
lods
or
insb
scas
lods
cld
push
stos
mov
aas
sbb
or
stos
mov
dec
pop
mov
and
xor
sahf
sbb
dec
dec
and
mov
mov
sahf
dec
push
loope
push
hlt
sbb
test
jl
rclb
sbb
rorb
sahf
push
dec
cs
pop
clc
push
fstp
xor
js
aad
repz
es
outsl
popa
cmpsb
dec
es
xchg
ud1
aaa
leave
mov
mov
mov
and
pop
or
scas
xchg
adc
or
inc
inc
pop
pushf
pushf
ffreep
adc
xor
test
cmp
push
xchg
mov
stos
pop
movsb
push
xor
push
ljmp
mov
jns
add
cmp
test
and
jb
mov
pop
sti
lret
and
js
add
mov
sub
cmp
fistpll
int3
cwtl
jl
pop
xchg
stos
arpl
jge
repnz
push
fldenv
arpl
pop
mov
bnd
outsl
xor
sub
push
jno
xlat
dec
getsec
je
pop
scas
idivl
or
adc
jmp
fisubrl
or
scas
and
dec
add
push
std
fwait
mov
int3
cwtl
roll
std
loopne
inc
xlat
or
xchg
hlt
fsubs
out
cli
dec
sahf
sbb
fisttpll
mov
xor
mov
jae
daa
mov
cmpl
fcmovnu
cmp
scas
dec
lahf
xor
mov
adc
fstpl
lcall
test
xor
pop
shl
cmp
imul
inc
repz
mov
pusha
cmp
sub
scas
lods
jmp
xor
mov
orl
or
and
cmpsb
addr16
mov
mov
jmp
add
rcl
lret
sahf
shlb
jmp
cmp
push
test
incb
jnp
dec
xchg
ror
fistpll
jmp
pusha
hlt
add
cmp
lret
inc
push
arpl
mov
fs
int3
jmp
sub
imul
mov
xor
jl
data16
fldl
test
aam
jle
mov
push
in
fnstcw
adc
pop
bound
pop
sub
push
sbb
leave
clc
add
addr16
dec
push
push
add
add
and
sahf
addr16
mov
fs
dec
call
mov
xor
mov
and
test
cmp
ror
sbb
sbb
movsb
mov
hlt
hlt
add
xor
movsb
ds
pop
popf
sti
fsubs
dec
sarb
shll
push
in
pop
pop
jle
mov
adc
cwtl
loop
adc
scas
fs
daa
and
les
movsb
cmc
xor
xchg
push
push
mov
loop
movsl
lods
pop
fcom
cld
fwait
cld
xor
jmp
lods
mov
hlt
mov
and
repnz
cmpsb
inc
inc
cltd
cwtl
xchg
test
aam
push
xchg
popf
insl
lea
lcall
lock
std
cmpsb
mov
sbb
inc
fs
fnsave
aas
push
cmp
addr16
in
shrb
xchg
adc
mov
mov
insb
outsl
mov
loopne
sahf
cmp
rolb
dec
rep
or
inc
sub
std
les
xlat
add
insb
pop
scas
insb
add
or
adc
and
std
aaa
rolb
jmp
or
mov
cwtl
mov
push
or
mulb
sbb
inc
jge
inc
jnp
pop
xor
add
fisttpll
push
and
shlb
mov
jmp
cmp
jb
and
scas
or
mov
mov
cmp
ret
xor
aam
icebp
or
mov
ficoms
aaa
dec
cmpsb
sub
push
shr
mov
mov
push
and
subl
jmp
jae
xor
mov
mov
call
std
dec
out
lahf
es
ss
subl
jl
push
imull
sub
arpl
cwtl
cmp
or
fldl
ds
movl
jle
rcr
flds
xchg
fmuls
sbbl
hlt
or
inc
cmpsb
pop
arpl
insl
stos
or
and
sarb
jge
addr16
imul
in
mov
xor
sub
mov
pop
cmc
jo
add
mov
add
fnsave
into
dec
cmp
xor
add
lahf
or
in
loopne
gs
in
or
mov
scas
mov
inc
lea
stc
jle
sti
adc
pop
faddl
pop
mov
jnp
daa
or
mov
mov
sbb
outsl
test
dec
lcall
cmp
out
add
jecxz
fs
adc
push
nop
add
xor
std
push
lret
mov
fisubs
lds
in
xchg
fcom
push
jge
lahf
add
xor
inc
aad
inc
adc
in
cld
addb
fdivrs
xchg
scas
adc
clc
add
sbb
pop
adc
mov
xchg
in
ret
fiadds
bound
fsubrs
subl
sbb
sbb
pop
jae
rcll
loop
fwait
or
mov
push
iret
add
scas
cmp
repnz
mov
aaa
mov
ret
in
jb
mov
into
or
xor
lcall
add
fdivrs
pop
xchg
icebp
push
sbbb
loope
lahf
mov
les
fsubl
lahf
add
pusha
addb
inc
iret
loopne
arpl
fcompl
jmp
gs
push
mov
mov
dec
or
dec
xor
arpl
pop
pop
sahf
dec
mov
mov
push
clc
out
popf
push
negb
aam
pop
cmpsl
fwait
idivb
pop
adc
mov
dec
adc
jnp
jl
loopne
mov
pop
mov
scas
add
pushf
and
repnz
pop
and
orb
mov
lahf
push
bound
das
mov
loope
clc
cwtl
cmc
mov
jp
mov
mov
jecxz
mov
imul
xchg
sbbl
ja
adc
repnz
mov
mov
mov
jb
out
add
inc
lahf
out
rcrb
in
mov
ss
cmpl
mov
cld
shr
popa
or
ret
aad
pop
push
ret
adc
cld
insb
pop
mov
inc
push
pop
fisttpl
sub
or
aam
scas
fwait
fwait
outsl
outsl
lcall
push
lahf
push
ja
push
orl
cs
mov
jmp
xorb
fadds
xor
ljmp
divl
sub
jb
inc
mov
leave
call
mov
jne
jbe
mov
lea
rcll
dec
cmc
pushf
push
test
insl
in
lret
lcall
sub
and
add
outsb
pop
scas
jnp
dec
lock
cli
push
xor
scas
or
add
mov
loope
in
jmp
sub
addr16
andl
addb
popa
xchg
inc
xchg
test
sub
mov
push
aas
loop
add
loopne
cs
iret
pushf
adc
pop
aam
movsl
add
aam
shll
shlb
push
pop
je
ja
cld
cli
js
mov
pop
fstpl
or
lahf
orl
mov
sub
mov
loope
movsb
push
push
cmp
sbb
push
mov
icebp
mov
sub
xchg
cmp
xor
jle
jns
loope
hlt
mov
bound
lds
repz
in
rclb
out
jge
jnp
stc
shlb
sub
shrl
push
mov
icebp
pop
aas
mov
sbb
mov
lea
sub
mov
push
push
dec
mov
dec
shrl
stos
fdivrp
mov
sub
sub
sub
push
xor
push
sub
rolb
xchg
push
cltd
shrb
adc
dec
adc
jmp
sbb
inc
xchg
mov
pusha
dec
dec
roll
inc
inc
inc
stc
dec
fldl
inc
neg
mov
fldl
xchg
pop
fistps
cmp
mov
cvttps2pi
sub
push
and
mov
xor
jo
lret
xchg
stos
jnp
out
mov
jno
inc
cwtl
sbb
push
pushf
popf
out
inc
mov
sarl
lods
jno
int
inc
mov
mov
adc
or
and
mov
cmp
mov
repnz
and
xor
add
xor
inc
jle
adc
xorb
aad
repz
aam
in
sarl
movsl
or
movsl
sbbl
std
lods
outsl
in
and
out
out
mov
inc
push
enter
out
ja
scas
inc
out
mov
cmpsl
jl
fnstcw
jge
inc
push
repnz
or
lahf
push
addr16
xchg
lcall
xor
ds
xor
mov
inc
sub
jnp
push
lahf
xlat
add
enter
jg
pop
sbb
mov
jbe
push
push
lds
dec
lods
cltd
or
dec
repz
lcall
test
repnz
mov
and
rcrb
and
fnstsw
sub
lcall
insl
cmpsb
jmp
insb
sub
mov
arpl
mov
pop
mov
lcall
xlat
out
xor
aam
and
bnd
ds
cli
jge
es
jo
mov
inc
pop
addr16
mov
mov
repnz
jp
mov
pop
add
push
rcr
imul
in
mov
gs
lahf
xlat
loopne
sbb
insl
push
add
hlt
out
mov
pop
sti
mov
fldl2e
xchg
sbb
aaa
pop
mov
popf
into
cmpl
or
aam
dec
mov
mov
sbb
or
insl
or
sub
inc
pushf
dec
inc
sbb
lahf
stos
aad
rcr
push
jbe
inc
cmpsl
cwtl
mov
data16
test
out
add
cltd
push
or
loope
mov
pusha
adc
mov
add
or
lea
and
stos
inc
xchg
out
lds
xchg
js
iret
scas
cld
fisubl
push
movsl
and
clc
sbb
xlat
push
sbb
sub
push
daa
sbb
aam
dec
outsb
inc
mov
add
test
sbb
sub
test
pop
xchg
push
in
cmpsl
xchg
add
clc
lea
xor
icebp
test
lds
popa
and
out
jae
hlt
pop
inc
mov
xchg
daa
lcall
push
dec
dec
sbbb
fwait
adc
and
fwait
mov
cld
out
jae
dec
pop
cmp
jo
rcr
mov
test
hlt
hlt
mov
stc
sbb
fcmovnu
pop
mov
in
fistpl
imulb
les
fmuls
mov
push
dec
mov
adc
mov
and
imul
fnstcw
loop
ret
mov
xchg
int3
scas
loopne
loopne
lods
aas
xor
pop
xchg
or
scas
test
or
dec
xorl
jne
xchg
mov
mov
sub
leave
xor
cld
pop
fcoml
shlb
mov
xor
add
data16
int
push
adc
inc
push
aaa
adc
loop
mov
push
dec
gs
sub
push
in
mov
cltd
mov
ljmp
xchg
add
jo
sbb
les
and
xor
mov
pushf
dec
dec
imul
in
cmpl
aad
xchg
cld
leave
xchg
je
dec
sahf
adc
sbb
xor
cwtl
orl
push
roll
pop
xor
testb
leave
stc
jno
sbb
fsub
dec
aam
insl
movsl
mov
pop
scas
sub
outsl
sbb
leave
das
mov
movsb
push
dec
pop
pavgb
les
mov
hlt
jno
rcrl
faddl
sbb
xor
adc
leave
iret
sub
mov
sub
xchg
xlat
sbb
leave
mov
sbb
outsb
or
sub
add
jnp
fistpl
jns
lret
or
jb
jge
mov
jp
sub
sbb
outsl
test
addr16
call
xor
push
add
inc
adc
sahf
xor
aas
imul
loop
es
or
clc
mov
and
mov
xchg
test
imul
cwtl
shlb
rcrl
jmp
jo
inc
rcrb
and
lods
xlat
jno
xchg
pushf
mov
and
imul
lds
xor
cmp
push
sbb
pop
xchg
mov
in
mov
filds
mov
hlt
sti
jns
outsb
or
rcll
in
fwait
or
popf
mov
divb
lods
out
shlb
inc
call
dec
ret
lods
test
and
push
xor
leave
rcrb
mov
xor
cmp
testl
repz
cltd
xor
lret
aad
pop
fs
adc
and
xor
jae
repnz
dec
sub
mov
test
inc
jmp
mov
scas
cli
ret
add
int3
fs
mov
push
test
fmul
adc
je
sbb
sub
scas
push
cli
mov
pop
or
xor
cmp
in
loopne
push
xchg
mov
int
mov
shl
xchg
sbb
stos
rolb
xor
cwtl
sbb
loope
fcomip
pop
or
sub
lods
mov
xchg
sub
jne
stc
sahf
push
test
adc
movsb
pop
xchg
outsb
lea
scas
roll
inc
inc
cmpsl
xchg
in
das
fstl
xchg
push
mov
sbb
mov
xchg
pop
or
sub
jle
iret
xlat
mov
push
jmp
and
jno
inc
add
aas
jbe
sub
mov
push
ljmp
std
mov
mov
cmpsb
in
lret
and
es
xchg
push
xchg
jbe
mov
leave
xor
subb
mov
mov
mov
mov
jge
out
enter
or
xchg
inc
xchg
dec
jb
inc
icebp
xor
inc
jno
sbb
sar
jnp
fistpl
mov
aaa
mov
adc
dec
jno
mov
sub
ljmp
sbbb
mov
shlb
mov
loopne
outsl
cmp
adc
iret
or
mov
and
and
imul
cmpsb
xchg
sbb
mov
sub
push
inc
cmp
cmp
jbe
dec
lds
sub
or
sub
mov
in
xchg
cld
sbbl
iret
xor
in
mov
sbb
pop
outsb
movsb
aad
and
dec
rclb
mov
lods
and
pop
pop
out
and
push
push
sbb
inc
and
dec
test
adc
pop
ds
divl
xchg
mov
push
mov
inc
ror
imul
inc
jne
dec
flds
movsl
cmpb
ss
xchg
xchg
cmc
nop
test
and
ds
xor
push
sub
idiv
pusha
shlb
pop
mov
negl
push
xor
sub
dec
stos
jne
xchg
jno
and
data16
stos
leave
mov
or
xchg
data16
pop
loopne
or
push
stos
inc
sbb
mov
lahf
cmpsb
data16
mov
loope
out
add
pop
lcall
lock
aad
sbb
mov
sbb
shl
inc
jp
add
adcl
cbtw
out
push
repz
notl
sub
daa
cwtl
adc
push
roll
out
or
lods
mov
out
outsb
aam
inc
lahf
and
arpl
and
cmpsl
fstps
xchg
js
xor
loope
mov
dec
and
or
xorb
inc
lret
adc
xor
xchg
xorb
mov
ret
sub
mov
int3
in
xor
ret
sbb
mov
cmp
sbb
sbb
add
insl
push
mov
pop
lret
imul
pusha
and
arpl
int
sbb
aaa
mov
mov
pushf
fsubrs
jno
std
in
movsl
cmp
das
mov
pushf
xlat
and
inc
shr
pop
sub
inc
dec
lret
push
fnstenv
dec
sbbl
sbbb
insb
xor
jge
js
rorb
push
loop
cmpsb
mov
loopne
aas
pusha
mov
decb
ss
bnd
jb
rol
add
addr16
xchg
aas
cmp
shl
sbb
leave
lcall
xchg
pop
loopne
pop
add
outsl
cmc
jbe
shl
xor
adc
jecxz
push
ret
int3
adc
and
jmp
icebp
mov
dec
jbe
ds
mov
jg
sub
mov
jne
mov
imul
out
push
dec
lock
mov
push
stos
add
push
push
dec
push
or
push
orb
inc
jle
outsb
loopne
xor
push
ljmp
ficomps
arpl
mov
xchg
sub
mov
mov
sub
jnp
das
in
cmc
mov
pop
mov
sbbb
inc
in
jl
je
push
call
add
jb
stos
imul
pop
in
mov
into
sqrtps
movsb
sub
int3
loop
mov
xchg
ljmp
lret
jmp
sbb
and
addr16
fimuls
adc
dec
stc
sub
aad
jns
jno
cli
test
mov
inc
and
xchg
testb
fs
popf
sbb
pushf
xlat
inc
repz
js
jae
shll
stc
clc
out
mov
xchg
and
in
cmp
fnstcw
ficompl
xor
sbb
inc
out
sbb
sahf
addb
shl
mov
jno
sbb
dec
in
xchg
push
jle
ljmp
in
xchg
ret
sbb
cmp
xchg
repz
aad
pop
fimull
cmp
shlb
mov
adc
stc
xchg
push
push
cltd
lds
repz
jne
stos
outsb
loop
and
clc
push
fdivr
mov
shr
rcll
inc
fistps
mov
adc
fidivl
sub
cmp
mov
inc
stos
movsb
xor
xor
cld
arpl
xor
out
pop
inc
mov
push
jne
loopne
mov
mov
and
fs
adc
popf
daa
mov
lods
xor
cwtl
call
gs
xlat
into
fnstsw
mov
lods
movsb
and
fsubrp
and
lds
xchg
fisubrs
push
lea
call
xchg
out
adcb
stc
fildl
imul
sub
mov
xchg
icebp
iret
cmp
pushf
mov
in
aaa
jmp
add
dec
mov
pop
call
cmp
jne
jmp
repnz
cmpsl
fdivrl
adc
movsl
rep
xchg
rcll
adc
or
pushl
ljmp
push
fsubr
inc
mov
mov
out
inc
push
popa
cmc
cmp
lcall
in
or
inc
cmpsl
mov
repnz
push
lods
sub
out
jmp
nop
adc
or
inc
sub
xorl
xchg
addb
mov
insb
aad
sbb
sbb
outsl
dec
add
jp
cmpsb
xor
and
fcoml
jbe
pop
adc
out
cmpsb
inc
jge
lods
hlt
cmc
cli
call
aam
push
mov
jnp
push
xchg
sahf
push
imul
mov
aam
mov
inc
es
notb
psraw
push
jbe
sub
dec
mov
jb
pop
adc
sarl
aad
mov
xchg
lret
fadds
cmp
repnz
jmp
mov
in
add
jecxz
loop
sahf
jle
xor
clc
inc
sbb
sbbb
dec
mov
out
sub
shlb
movsl
jecxz
imul
outsl
pushf
add
and
cmp
mov
and
mov
repz
or
cmp
inc
nop
xor
js
test
sub
nop
aam
dec
push
push
cmpsl
mov
mov
sbb
mov
lret
lret
jae
out
das
sbb
sub
lods
les
rol
movsl
stos
cli
jecxz
mov
xchg
or
dec
test
xor
repz
mov
sbb
mov
jl
xor
daa
rorl
adc
mov
mov
test
push
insb
cmp
idiv
es
out
adcl
cmp
pop
mov
fldl
inc
imul
jle
outsb
xchg
pop
pop
mov
sub
sub
push
arpl
rcl
add
jnp
sbb
inc
out
sbb
sub
xchg
andb
lods
fisubs
mov
pop
fs
mov
or
mov
jnp
jbe
mov
pop
add
jp
mov
pushf
mov
mov
sub
jne
lods
pop
push
push
scas
adc
pusha
pop
sbb
fisttpll
sarb
cmp
sbb
jle
push
fwait
add
sbb
xlat
pop
pop
mov
cmpsl
and
loopne
out
inc
mov
pop
call
pop
int
aam
out
shlb
lret
popa
dec
and
mov
popf
scas
ret
fsubl
insl
and
loopne
data16
sub
mov
dec
sbb
jl
out
popa
pop
jbe
and
xor
out
outsb
pop
fwait
or
into
mov
outsb
fisubrl
pushf
ja
mov
sti
inc
sbb
sbb
jl
andl
nop
sub
lea
rclb
insl
cli
xchg
cmp
movl
lds
sub
mov
and
mov
test
inc
and
popf
fldl
xor
xchg
in
repz
lret
cmpsb
dec
mov
add
add
ss
mov
out
inc
jmp
sbb
nop
popa
push
mov
dec
xor
add
or
or
ljmp
imulb
or
mov
sbb
in
out
repnz
cmpsb
sub
loop
push
adc
je
dec
mov
rorb
fildl
mov
push
gs
or
mov
xor
adc
xchg
cmc
loope
call
add
dec
and
jo
lea
or
or
push
pushf
jp
bound
xor
xchg
arpl
fdivrs
outsl
cmc
and
insl
popa
dec
nop
xchg
out
lods
mov
jne
mov
and
jb
sub
mov
pop
lods
xor
inc
scas
sub
out
ret
clc
mov
pop
lea
cmp
sub
or
cli
xor
pop
orb
inc
rolb
xchg
orl
inc
stos
inc
pop
mov
add
ljmp
pop
push
xchg
xchg
fmull
das
inc
aam
cld
pushf
testl
and
mov
aam
xchg
lret
pop
data16
addr16
insb
sbb
movsb
mov
sbb
push
loope
xor
mov
mov
sub
mov
icebp
sub
sbb
mov
andb
dec
or
or
sbb
aas
pop
daa
dec
cmp
test
cmpsl
cmc
push
xchg
jo
xor
mov
inc
cmpsl
loope
dec
inc
stos
xacquire
dec
out
mov
dec
fimuls
loop
testb
jg
pop
out
cmc
in
jmp
adc
notl
jo
xor
mul
fistpll
pop
test
dec
pop
pop
jp
loop
pop
daa
and
jle
pop
movsb
mov
aas
pop
cld
inc
cmpsb
std
fdivl
scas
addb
push
rorb
push
mov
fdivrs
push
in
aas
imul
sub
and
xchg
jbe
outsl
xchg
sub
pushf
jns
fimull
movl
adc
les
movsb
icebp
test
pushf
stc
or
enter
cmpsl
arpl
flds
mov
out
bnd
and
mov
jge
jae
push
sub
lcall
lds
es
xchg
dec
ffreep
xchg
mov
jo
out
dec
insb
or
adc
push
jb
xlat
add
in
push
mov
and
push
or
jmp
data16
incb
icebp
sbb
inc
popa
jbe
sub
mov
popa
aaa
add
push
arpl
xor
or
push
out
test
mov
or
sub
push
sbb
or
jb
inc
adcl
xchg
jg
jo
xchg
or
ret
dec
in
clc
sarl
add
adc
jno
repnz
and
add
add
test
jmp
aam
clc
fcoms
add
lret
add
arpl
mov
add
mov
push
jecxz
push
lret
mov
xchg
testb
mov
jbe
add
imul
imul
push
xchg
lock
pop
aaa
mov
pop
xorb
test
add
push
out
dec
js
jb
jecxz
mov
and
dec
pop
sbb
adc
inc
push
xchg
stos
sub
add
mov
jmp
dec
sub
add
xlat
xchg
cmp
adc
bound
scas
mov
cmpsb
inc
add
popa
fstl
shrl
cmp
add
and
rcrl
add
sbb
hlt
std
test
and
adc
mov
mov
adc
or
addb
push
mov
fwait
sbb
das
lret
dec
jl
in
xchg
mov
ret
mull
push
jp
popf
pop
outsl
lea
xchg
xor
pop
jbe
xchg
ja
mov
mov
daa
push
in
pop
fsubs
xchg
je
and
setnp
arpl
mov
adc
mov
loop
iret
lods
hlt
fmuls
sbb
icebp
repz
ljmp
stos
push
push
je
out
jecxz
mov
xor
fildl
jno
mov
jnp
std
inc
inc
pop
movsl
cmpsb
xchg
cmp
icebp
xor
leave
cmpl
and
cs
or
gs
mov
pop
insb
setbe
out
clc
xor
xchg
aam
mov
mov
lcall
mov
cmc
outsl
sub
pop
cld
scas
pop
movsb
add
sub
in
fnsave
pop
lods
xchg
xchg
mov
scas
inc
adc
popa
nop
sbb
xchg
test
cs
or
add
loope
loope
cli
out
cmp
inc
into
mov
xchg
mov
cmp
xor
out
and
outsl
std
jp
xchg
mov
push
stos
fwait
rcr
sbb
mov
cwtl
add
and
leave
lea
or
out
hlt
xlat
ljmp
std
rcpps
imul
rcrl
int3
mov
cmc
inc
cmpsb
cld
xor
inc
fcomp
cld
pop
pusha
cli
adc
shrl
jmp
out
jmp
test
xchg
mov
enter
add
decb
mov
dec
push
outsl
pop
aaa
insl
mov
sbbl
jnp
cmc
loopne
gs
dec
loop
sbb
popf
mov
mov
sti
xchg
jne
out
testb
inc
mov
mov
sbb
daa
dec
adc
push
xchg
sbb
push
arpl
addb
lock
cld
test
pop
fmuls
dec
je
adc
lcall
mov
xchg
cli
ljmp
mov
test
aad
mov
mov
stos
fldcw
mov
jae
mov
fldl
loop
xchg
out
jge
nop
iret
ss
pop
test
outsl
shlb
mov
dec
lods
insl
or
fwait
test
lods
mov
insb
add
stos
inc
fstpt
push
xor
stc
sbb
pop
sub
dec
cmp
repnz
pop
outsb
hlt
stos
xchg
into
mov
sbb
dec
mov
and
loop
lods
jg
xchg
mov
adc
imul
cmp
or
xor
adc
mov
mov
icebp
cmpsb
roll
scas
adc
jle
mov
mov
stos
xchg
cli
xlat
dec
jbe
and
sub
enter
popf
pushf
loop
sbb
add
movsb
adc
adc
mov
push
push
push
xchg
fcmovu
bound
cmp
mov
dec
out
test
fwait
sarl
idivl
scas
lret
xchg
cmp
xor
lcall
testb
xchg
sbb
mov
xchg
push
mov
jge
shrb
pusha
dec
cmpsl
shr
pop
sbb
dec
jp
scas
pop
sub
adc
sbb
or
aas
fdivs
int3
jnp
leave
aas
lcall
mov
xlat
jae
mov
nop
pop
dec
rorb
sbb
enter
push
lods
adc
ret
dec
insb
outsb
lds
pop
test
jmp
mov
neg
pop
push
push
shll
out
inc
cmp
mov
das
loopne
xor
sti
shr
scas
rcrb
mov
insl
nop
daa
lcall
pop
jle
cwtl
add
mov
loope
jb
gs
cmp
pop
int3
aam
mov
rcl
xchg
push
and
rorl
ret
sub
stos
gs
cmpsb
mov
or
mov
xor
fmul
cmp
fbld
pop
sti
scas
nop
lret
jg
pop
mov
dec
jnp
movsb
jbe
sbb
mov
addl
xor
xchg
mov
repnz
mov
cmp
pop
fcomps
mov
test
dec
cwtl
and
rcl
in
pop
adc
jne
stc
fildl
dec
cld
xchg
sbb
pop
jb
mov
fdivrs
lret
xor
pushf
pushf
xor
jae
lcall
and
jae
into
mov
in
leave
sbb
std
cmp
add
push
imul
mov
dec
pushf
arpl
jle
xchg
in
mov
dec
cmp
ss
out
sbb
fimuls
mov
lcall
int3
mov
mov
in
add
jno
add
mov
jp
icebp
sbb
jnp
daa
push
or
call
jae
mov
pop
mov
cmp
aaa
gs
sub
sub
inc
cmp
mov
and
and
ret
xor
out
das
push
dec
fwait
push
push
iret
sarl
clc
stc
daa
push
or
inc
mov
dec
addr16
daa
shll
or
hlt
jo
mov
xor
xchg
sbb
lods
adc
pop
sub
nop
lret
add
loope
adc
or
adc
mov
mov
jl
sti
mov
inc
cmpsb
sbb
fld
insl
mull
nop
jo
fbstp
repnz
xor
in
cmp
int
add
xchg
adc
into
inc
mov
sub
sbb
push
add
inc
lods
xchg
pop
sar
push
push
imul
cmp
dec
jecxz
or
ret
stos
mov
push
push
movsl
loope
call
jo
lods
sub
sub
cli
out
fdivrs
add
push
in
shll
fsubrs
imul
shl
jae
push
sbb
xor
imul
mov
jo
inc
xchg
pop
loope
add
mov
in
cli
aas
arpl
pop
out
mov
sub
pop
jge
sbb
cmpsl
jp
ja
dec
xchg
push
sub
xchg
stos
push
inc
mov
icebp
outsl
xor
jb
mov
xor
pusha
push
aas
adc
jecxz
out
inc
out
es
xor
sarl
pop
pop
adc
sub
jns
outsl
adc
mov
nop
and
ret
shlb
movsl
mov
mov
cs
enter
xchg
repnz
les
dec
shrb
scas
rcl
and
jecxz
ror
lahf
mov
cmp
cmpsb
popa
repz
mov
popf
xchg
or
sbb
xor
mov
test
pop
cltd
pop
xchg
movsb
iret
inc
stc
xchg
cmp
js
push
cli
push
push
in
inc
leave
inc
push
popf
dec
mov
xor
mull
rolb
inc
std
aad
mov
and
in
lds
or
add
sub
adc
cltd
dec
jg
lds
or
push
mov
mov
sub
sbb
in
stos
ljmp
shr
sub
inc
pusha
adc
jl
bound
mov
and
jns
inc
ss
and
mov
out
lret
rcl
in
sbb
nop
mov
sub
shll
xchg
lcall
pusha
adc
cltd
dec
rorl
popf
xor
mov
inc
lods
ficoml
pushf
mov
popf
add
aas
in
fldcw
mov
push
and
fs
cmpsb
stos
jp
ret
pop
stc
jg
out
fcoms
sub
mov
mov
mov
cmc
mov
push
or
rol
insb
test
cli
sar
jmp
mov
imul
dec
arpl
mov
stos
pusha
frstor
xchg
and
inc
jne
inc
pop
push
pop
popf
jno
jno
inc
jno
imul
dec
adc
xor
mov
dec
jp
inc
sbb
lret
xor
mov
sub
scas
testl
ret
and
dec
inc
jge
ja
mov
mov
and
push
cld
leave
push
cmp
xadd
fwait
test
pusha
add
movsb
xor
sbb
sti
mov
outsl
gs
xor
push
mov
mov
ret
inc
aam
xor
push
and
aaa
dec
mov
mov
rol
jo
outsb
jne
xchg
push
icebp
push
xchg
xor
repnz
push
in
adc
jnp
inc
push
mov
jno
test
fwait
aas
lea
stos
negl
push
jbe
fdivrs
int
cld
dec
pushf
imul
push
xlat
mov
pop
add
pop
rcll
push
loope
mov
push
mov
mov
push
lea
arpl
xor
rorb
inc
out
pop
pop
push
aas
jmp
shl
cmp
fwait
shr
lret
out
inc
jle
mov
fwait
outsb
aad
roll
xor
loop
jns
mov
js
rcll
jle
jl
outsb
mov
fucomip
push
movsl
mov
ret
cmp
dec
ja
test
icebp
mov
xchg
push
xor
fldcw
nop
movsl
mov
insl
mov
adc
fidivrs
dec
out
test
fistpll
into
icebp
inc
fildll
or
xor
out
jecxz
push
jle
sub
cmp
inc
mov
dec
add
add
mov
jo
testb
and
cmpsl
adc
mov
and
sbb
ljmp
jmp
adc
push
jl
push
movsl
sbb
ss
ret
jb
imul
repnz
or
dec
jns
pop
std
rcrb
rcpps
sbb
out
adc
lret
push
xor
insl
fistps
cmp
jp
scas
mov
pop
icebp
rcrl
pop
lea
push
sub
inc
push
jno
push
xchg
or
fsts
jle
popa
shlb
cmp
repnz
mov
cmpsb
dec
pusha
or
aaa
insl
jno
mov
dec
inc
push
test
sbb
and
decb
and
and
or
inc
mov
imul
lret
mov
and
sarl
addb
mov
lea
ja
mov
lret
inc
xor
mov
test
xlat
mov
inc
xchg
or
lods
push
xlat
add
fildl
outsl
out
xor
cmpl
jae
jecxz
jg
xchg
mov
push
daa
andl
or
mov
cmp
loop
cmp
into
aaa
in
mov
mov
mov
mov
repnz
adc
mov
and
sub
enter
out
mov
and
inc
loop
enter
push
cmp
bound
push
cmc
mov
dec
cmp
frstpm(287
call
scas
pop
xchg
mov
or
inc
and
sbb
repnz
add
addr16
outsl
jmp
jge
bound
in
jecxz
push
daa
adc
dec
addr16
ret
nop
dec
iret
stos
adc
outsb
aam
lea
pop
ret
sbb
jge
js
dec
data16
out
mov
sub
jno
fadds
test
insb
fimuls
mov
into
in
les
imul
pop
iret
rorb
dec
jg
xor
xchg
push
mov
fstl
cmp
out
ja
bnd
cmpsl
out
sbb
aaa
je
pop
push
lcall
test
movsl
add
pop
mov
out
inc
mov
push
cmp
cld
dec
pop
sub
cmp
xor
push
and
out
out
push
xchg
jmp
mov
sbb
das
pop
and
dec
dec
xlat
cmp
adc
sub
sahf
or
jae
jno
fs
data16
pop
mov
push
adcb
pop
sub
mov
mov
jbe
lahf
insl
gs
xchg
popf
adc
push
adc
fmull
test
add
lods
scas
subb
fildl
ret
or
lret
popa
mov
mov
pop
imul
orl
adc
test
adc
add
loope
cwtl
cs
jne
pop
dec
je
pusha
in
mov
jl
out
dec
push
inc
xchg
or
or
and
pop
lret
mov
xor
xchg
mov
xchg
out
fs
and
jecxz
sbb
jns
scas
adc
pop
gs
jmp
cwtl
addr16
cmp
mov
loop
mov
out
pop
mov
inc
mov
or
repz
dec
sub
push
sub
ror
in
inc
push
sub
pop
cmc
pushf
mov
mov
xchg
jno
inc
data16
lcall
lea
in
sub
insb
add
es
or
fdivs
push
sbb
popf
jae
movsl
std
pop
mov
stos
mov
enter
adc
mov
dec
daa
xor
sub
stos
cmp
fsubl
and
faddl
mov
push
lahf
jle
dec
call
in
sbb
add
mov
cmp
push
sarb
ljmp
mov
hlt
lods
pop
jge
lods
push
jecxz
xor
push
or
outsb
xchg
xchg
loope
ds
push
mov
iret
aas
lret
xchg
mov
outsl
fldenv
dec
lds
loop
aaa
pop
mov
imul
pushl
lods
das
hlt
ret
push
movsb
mov
ds
jmp
dec
mov
jne
mov
push
shr
add
jbe
fcmovu
mov
shll
pop
jmp
push
les
pop
movsb
adc
adc
lret
push
outsl
inc
cmpsl
push
stos
jb
push
mov
or
jne
ss
test
xchg
sar
into
push
mov
dec
or
sbb
inc
test
xlat
mov
inc
mov
pop
jae
clc
lahf
jecxz
and
rolb
mov
or
push
arpl
mov
scas
fistps
xor
lea
jle
add
fwait
add
out
mov
es
fnstsw
imul
dec
shlb
add
in
dec
xor
vrsqrtps
clc
cmp
call
or
test
jp
cmpsl
jbe
mov
add
rorb
scas
adc
inc
lods
xor
inc
andl
cld
jae
add
sub
xor
test
mov
test
lods
scas
data16
push
mov
into
loop
into
mov
jle
cmp
js
je
dec
inc
pusha
and
sub
xor
jbe
jl
pop
vpsllw
in
test
sub
and
xchg
int
adc
xchg
inc
call
leave
cmpsl
icebp
jno
sub
add
or
pop
dec
das
pop
lret
stos
mov
and
jns
xchg
jl
outsb
jmp
inc
adc
sub
gs
adc
cmp
pop
sub
jnp
push
sbb
in
stos
push
push
fs
sti
repz
mov
xlat
lret
dec
pusha
shll
out
imul
adc
les
fidivrl
push
mov
arpl
lds
adc
and
fsubrl
push
lock
sub
jb
jns
arpl
fidivrl
lret
cld
scas
ja
inc
lret
xor
dec
mov
cmp
stos
ror
cmp
in
adc
lds
repnz
cmp
clc
inc
loop
push
jmp
mov
stos
cmp
push
cmp
loop
jo
aam
add
adc
fstpl
loopne
jae
adc
cmp
push
repnz
cmp
mov
int
loopne
pop
dec
cs
mov
xor
mov
andl
dec
loopne
adc
cmpb
bnd
xchg
hlt
scas
pop
push
jle
or
cmp
pop
test
sahf
pop
outsl
jbe
add
out
push
or
pand
into
out
cmpsb
fcoms
aas
sahf
icebp
jge
pop
push
push
add
sbb
movl
stos
jno
jo
mov
ljmp
sbb
outsb
sbb
sub
and
jecxz
aas
push
sbb
push
jmp
jmp
es
aad
cld
jge
jg
adc
ffreep
int
xchg
into
inc
mov
lret
int3
cmp
xchg
xlat
movsl
popf
xor
fnstsw
pop
ds
pop
in
imul
ficomps
or
loop
rcl
das
add
imul
inc
xlat
sbb
stos
xor
ss
add
imul
add
jg
les
mov
std
call
pop
push
adc
test
mov
lock
pop
mov
out
dec
ficoms
ds
xchg
fidivs
mov
cltd
ljmp
xchg
push
and
leave
mov
pop
mov
clc
sahf
jb
sub
repz
push
idivb
in
sahf
repnz
push
and
push
xlat
xor
xchg
push
in
lods
jle
out
aas
pop
add
pop
or
fidivl
repnz
mov
rol
inc
int
pop
mov
xchg
loop
nop
movl
inc
ja
jb
dec
sub
in
jo
jge
shr
sub
pop
out
mov
ret
lock
cmc
mov
rorl
daa
mov
negb
mov
in
out
mov
data16
pop
sar
or
stc
in
cmp
cld
fidivrs
adc
jno
jb
out
stc
cmp
pop
inc
and
cmp
jp
pop
and
out
inc
xchg
dec
xor
pop
add
xor
mov
pop
lea
and
dec
jle
popf
xor
das
sbb
cmp
or
stos
popa
mov
xor
fbstp
sbb
cmp
scas
ret
cmp
xchg
mov
mov
data16
lret
loop
push
ss
loopne
and
dec
xor
movsb
leave
fwait
adc
ret
je
pushf
stos
inc
popa
int3
add
mov
xor
sub
push
mov
dec
and
jmp
jl
inc
cmc
imul
sub
rclb
jno
ljmp
fsubl
dec
aad
xlat
pop
inc
adc
dec
daa
xor
or
mov
data16
sbb
push
jne
jecxz
jns
loopne
mov
xchg
push
fwait
inc
xchg
out
iret
scas
sbb
sbb
cld
dec
lods
push
and
fcomip
push
clc
xorl
aaa
js
int3
cmp
das
push
sti
sbb
sbb
xchg
iret
ret
inc
cmp
xor
add
cmpl
dec
nop
or
push
insb
push
adc
adc
inc
js
mov
ja
xchg
fisttpll
ret
out
pop
xchg
mov
rcll
sbb
inc
push
cs
test
ljmp
jge
sbb
push
lock
in
inc
mov
pop
stc
scas
testb
cmp
mov
xor
mov
xchg
mov
jle
push
and
daa
decl
xchg
clc
aam
daa
and
mov
mov
popa
xor
sbb
dec
inc
test
jecxz
push
enter
push
jmp
push
pusha
shl
stos
sahf
sbb
cmpsl
add
test
jne
cmp
fiadds
icebp
lahf
push
xchg
pushf
int
lods
je
xor
and
add
pop
mov
jbe
jne
nop
push
pop
das
pushf
stc
data16
pop
xchg
rorb
not
xchg
ss
dec
loop
rorl
bound
ret
pushf
je
test
cmc
shl
mov
dec
leave
mov
outsb
add
push
lcall
dec
fs
or
mov
jbe
repz
mov
jbe
popa
test
push
xor
cld
ret
jb
sub
ds
mov
xchg
mov
cli
gs
adc
or
and
leave
imul
ret
out
mov
push
stos
movsl
sarl
nop
push
int
js
jae
fcompl
pushf
std
cs
mov
fbld
dec
movsb
gs
mov
subb
xor
repz
add
push
in
jg
loope
jns
xchg
mov
mov
jns
cld
pushl
sbb
lods
jne
out
mov
popa
stos
push
pop
pop
pop
xor
daa
insl
shlb
push
cmpsl
jp
aas
ljmp
mov
aaa
xchg
test
jp
aas
mov
ret
dec
repnz
test
data16
ss
and
pop
lds
sbb
adc
mov
adc
call
pop
cmp
clc
push
xchg
jo
pop
ja
gs
addb
adc
sub
xchg
mov
mov
inc
xchg
fcompl
xchg
xor
fistpll
and
imul
jmp
adc
push
loopw
lret
mov
jecxz
std
fstp
fdivrl
or
pop
xlat
scas
jnp
mov
adc
dec
loopne
jl
jg
push
jns
jo
lds
push
aam
mov
ja
loop
xchg
pop
dec
cmp
lcall
arpl
cmp
in
pop
and
shl
sbb
div
xor
sub
shl
mov
sbb
popf
sarb
data16
adc
in
popf
ljmp
test
lret
scas
and
sahf
loop
xor
stc
fcoms
aas
test
cmp
add
sarl
test
notl
push
jns
test
mov
xor
repnz
rol
mov
pop
js
call
shll
adc
pop
add
ss
inc
repnz
in
xchg
rcrl
push
aam
pop
lods
movsl
pop
sahf
inc
mov
icebp
movsb
pop
cmp
int3
fidivl
mov
sub
cltd
mov
jae
sbb
push
cmp
popf
out
test
xchg
add
inc
in
push
sahf
xlat
ljmp
out
iret
cmp
movsl
pushf
push
jo
jnp
inc
cmp
cli
and
into
add
arpl
and
jle
xchg
xchg
out
out
dec
cli
leave
or
xchg
outsl
in
jae
add
add
fnstsw
rcr
cld
sub
jae
sarl
scas
pop
fadds
test
pop
jae
insb
xchg
inc
into
mov
jge
fbld
adc
lods
lret
out
test
sbb
pop
pusha
push
arpl
mov
mov
inc
es
dec
stos
sbb
test
jg
out
mov
sub
cmp
lea
ret
xor
and
js
jb
test
jge
insb
pop
push
test
std
rcll
ljmp
rorl
das
in
and
outsb
sub
cmp
cmp
xchg
push
arpl
xchg
jae
or
negl
repnz
pop
std
add
insl
pop
xor
add
stc
pop
aas
imul
push
cli
dec
xor
aam
sahf
pop
inc
and
movsb
inc
or
jg
xchg
mulb
sbb
out
fdivr
aam
jmp
nop
cmp
icebp
adc
cmp
cmp
or
hlt
or
lret
repnz
stos
jmp
inc
push
add
or
sub
jecxz
mov
adcb
xchg
mov
dec
jns
push
test
fdivr
push
sbb
sti
xor
cmp
or
daa
mov
push
push
add
insb
push
subb
mov
mov
cld
dec
daa
int
pop
xor
sbb
xor
fcmovnu
fsubr
push
mov
out
fnstsw
xchg
cmp
push
jl
gs
mov
lock
xchg
in
xchg
jbe
divl
lods
add
sbb
arpl
dec
dec
and
push
sub
mov
mov
jmp
loop
cmp
js
rorl
fldt
sub
sbbl
test
out
out
fsubp
adc
pop
mov
ss
mov
push
cmp
mov
add
sub
les
test
lcall
jp
jl
push
mov
jb
mov
cwtl
xorl
je
xor
inc
int
cmp
add
lods
mov
icebp
inc
pop
gs
and
sahf
or
and
loope
dec
bound
fistl
sarb
stos
shr
pop
out
inc
sub
div
push
pop
push
mov
adc
int3
imul
sti
pop
inc
lods
mov
nop
add
pop
in
nop
or
inc
in
xor
mov
jnp
jb
mov
inc
xchg
mov
sbbl
ret
mov
mov
sarb
or
jbe
jge
into
jmp
and
xchg
lret
add
call
mov
fcomps
mov
sarl
add
dec
xchg
jp
pop
mov
seta
lea
add
arpl
dec
rcll
or
xor
add
fwait
jo
mov
pop
loope
xchg
push
mov
cmp
out
sbb
pop
lahf
pop
jge
xchg
sahf
es
jns
jg
pop
fcmovnu
dec
push
and
rorb
nop
push
sarb
adcb
inc
and
pop
inc
pop
pop
cmp
ret
xor
imul
int
test
push
lock
adc
or
icebp
mov
sub
fwait
push
data16
xchg
push
push
loope
and
sub
addl
xor
rclb
xor
das
dec
inc
cwtl
lahf
mov
insl
pop
dec
jo
addb
adcl
pop
inc
pop
cmc
xchg
call
and
sub
push
xchg
inc
std
stos
stos
fst
call
and
dec
test
cli
fs
mov
shlb
test
sub
pop
mov
outsb
in
mov
mov
es
push
pop
loop
add
or
test
jmp
ljmp
fnstenv
mov
movsl
pushf
xor
push
pop
jg
push
xchg
jl
dec
jnp
adc
test
cmp
pop
ret
sub
jp
rcrl
mov
cmp
dec
mov
mov
in
jle
jo
ss
sti
or
adcb
push
add
inc
sub
daa
xor
in
orb
mov
mov
rcr
jne
mov
and
enter
jp
inc
nop
ret
jbe
inc
or
xchg
cltd
movsl
popa
shlb
lock
mov
sbb
jp
movsb
pop
dec
lret
adc
clc
lahf
dec
add
xor
fildll
inc
mov
repnz
lea
andb
jg
push
dec
idivl
push
bound
mov
sbb
sbb
fisttpl
repz
add
or
xchg
mov
testb
sbb
add
repnz
stos
mov
xchg
cmp
fadd
out
jecxz
pop
pushf
fimuls
test
push
or
rcl
or
in
pop
jo
jo
cmp
push
fstpt
rorb
repz
pop
std
sub
fistpl
or
jp
jno
fiadds
xor
push
jae
popf
rcrb
xlat
cs
call
inc
fdivrp
fistpl
mov
xor
and
push
inc
xchg
stos
std
jo
ret
test
mov
xchg
mov
sub
into
and
scas
adc
pop
ss
fisttps
testb
rcrb
jmp
pop
mov
aad
imul
in
mov
gs
rcll
adc
pop
xchg
xor
mov
push
int
add
inc
sti
pop
xor
jl
pushl
sbb
mov
pop
repnz
add
hlt
sbb
jne
fmuls
add
cmp
data16
ret
jo
pop
sbb
pop
repnz
mov
add
mov
cmpl
mov
dec
mov
stos
sbbl
insl
out
data16
hlt
imul
rol
hlt
cltd
mov
pop
and
adc
jbe
jle
mov
adc
loope
clc
xchg
xor
les
leave
dec
imul
xchg
int3
sbbl
xor
mov
repz
es
xchg
jns
jno
pop
adc
cmpsb
idiv
mov
imul
fsubl
rorl
pop
cmpsb
and
test
inc
mov
nop
mov
or
rol
push
mov
xchg
xchg
repz
push
sub
daa
mov
mov
jne
pop
cmp
add
pop
mov
ja
dec
int
loop
mov
jmp
mov
out
rcll
sub
push
jl
scas
sbb
sub
cs
xor
and
jo
lods
pop
xchg
aas
test
dec
js
dec
fstps
movsb
cmp
call
aas
idiv
push
out
idivl
ss
daa
mov
jbe
mov
je
jle
divl
iret
add
jp
loope
idivl
iret
and
fs
faddp
inc
aad
cltd
jmp
add
cmpsl
adc
adc
stos
add
mov
sbb
das
mov
out
incb
std
jecxz
jns
prefetcht1
cmp
xlat
add
push
inc
pop
bound
out
outsl
stc
mov
nop
mov
lret
movsl
lahf
inc
or
mov
insl
sbb
pop
out
jge
mov
adc
aad
and
fcomps
cmp
mov
sbb
aam
repz
inc
clc
clc
and
cmp
out
aas
adc
adcl
jnp
js
dec
js
aaa
push
add
lcall
fidivrs
popa
inc
jl
sub
shl
out
push
xor
sbb
add
arpl
inc
mov
enter
aad
jns
mov
inc
and
mov
mov
mov
sbb
push
push
and
push
js
shrb
movsl
mov
out
mov
sbb
sbb
sbb
aad
and
inc
and
xacquire
pop
push
push
xchg
cmp
xor
mov
sbb
jb
daa
or
loopne
cmpsb
clc
movsb
shlb
fs
fcmovu
lea
cmpsl
pop
daa
sbb
sub
dec
or
mov
xchg
push
dec
sbb
shll
add
scas
stos
out
mov
idivb
mov
test
mov
jmp
mov
dec
scas
cli
or
stos
sbb
cmp
add
scas
or
inc
cmp
jmp
out
cmovb
jge
cmp
fildl
inc
in
ucomiss
mov
jnp
push
mov
mov
add
and
out
mov
xchg
mov
aam
jge
and
sbb
pop
add
fsubp
jg
int
pushf
aam
inc
jp
adc
int3
or
and
sub
mov
call
push
movsl
sub
cmp
push
and
fimuls
scas
xchg
addr16
mov
cmp
and
pop
mov
lods
add
and
fmull
lea
ficoms
mov
lods
stos
mov
adc
inc
mov
dec
repnz
sbb
push
dec
data16
mov
fldenv
incl
and
jp
sub
push
in
xchg
jle
or
mov
xchg
cmp
out
out
lock
movsb
mov
xchg
cmp
dec
movsb
mov
cld
fdivrp
push
mov
adc
sbb
jb
popa
jns
bound
arpl
jns
fnstsw
clc
loop
adc
pop
add
in
sub
popa
lret
fwait
std
das
aaa
adc
push
pop
fdivrl
xchg
sub
cmpsl
pop
inc
mov
add
push
flds
lock
sahf
mov
dec
imul
testl
popf
out
jecxz
xor
stos
mov
or
sbb
pop
in
fidivrs
mov
fwait
fs
inc
iret
sbb
test
aaa
js
xadd
jb
js
test
jne
bound
lds
fnsave
enter
nop
sahf
sub
dec
mov
add
dec
ss
dec
mov
mov
mov
add
outsl
sub
jmp
push
popa
xchg
add
push
xchg
add
aas
pop
xor
rorl
mov
add
adcb
pop
sub
sbb
leave
shll
popa
gs
push
packssdw
shlb
cmp
ds
movsl
mov
push
int3
mov
mov
aas
fwait
xlat
lods
dec
js
in
jg
xor
mov
hlt
aam
sbb
jmp
sub
push
adc
sti
fdivrl
into
mov
and
in
stos
and
mov
outsb
repz
cmc
jbe
jnp
xchg
in
dec
shll
jns
push
mov
dec
jle
lret
pop
pop
xchg
outsl
adc
fimull
add
mov
mov
les
cltd
movsb
push
jno
mov
lahf
add
cs
fstps
clc
ljmp
movsl
mov
push
mov
mov
mov
cmpsl
and
adc
sub
lret
aaa
nop
pop
push
je
ret
in
mov
dec
js
mov
xor
mov
xor
or
mov
mov
lods
dec
sbb
in
sub
in
fsts
cwtl
sub
cltd
pop
fisubl
mov
mov
mov
jnp
ljmp
xor
mov
sti
push
mov
sti
scas
ljmp
inc
popf
and
roll
inc
fwait
cli
inc
in
push
jb
xchg
mov
dec
lods
inc
dec
sti
out
movsl
bnd
inc
test
adc
mov
in
mov
movsb
aaa
cmp
jg
xchg
in
push
inc
adc
push
stos
testl
mov
je
lret
jno
mov
add
daa
and
clc
sahf
lods
mov
test
fidivl
xchg
out
stos
adc
cmp
push
or
js
aam
xor
sbb
andl
dec
jge
adc
stc
xor
xchg
outsl
adc
pop
fsubl
xchg
sbb
jl
mov
cmpsb
mov
imul
popa
pop
out
pop
sti
sbb
mov
and
inc
shrb
mov
int3
in
pop
jl
in
mov
out
dec
jg
mov
test
shlb
push
cs
out
fsubr
push
jecxz
repz
mov
xor
inc
or
dec
in
jne
xchg
mov
jnp
loop
pop
cltd
mov
xchg
push
iret
lahf
imul
push
stos
imul
or
gs
clc
loop
add
lret
stc
xchg
pop
outsl
sub
test
es
mov
cmp
daa
call
pop
mov
dec
xorl
mov
and
mov
xchg
dec
inc
xchg
add
lret
test
push
adc
out
add
andb
sbb
loop
ja
xchg
pop
pushf
aam
and
mov
mov
push
push
pop
fldt
je
mov
jb
and
jge
mov
xchg
mov
push
mov
test
pop
mov
fists
inc
mov
les
xchg
pushf
mov
xchg
jnp
dec
pop
and
inc
scas
outsl
stc
test
inc
ds
lds
mov
sbbb
add
mov
pop
adc
aam
in
fyl2xp1
cmp
sub
imul
or
jmp
xchg
inc
aad
mov
and
adc
aas
push
pop
mov
and
push
mov
cli
rclw
mov
dec
jb
mov
scas
pop
adc
sbb
ffreep
adc
sub
loope
mov
push
inc
jno
outsb
loop
add
lcall
scas
fsubr
cmp
jl
int
add
imul
sbb
push
jl
push
mov
push
pop
dec
sti
mov
pop
sbb
movsb
xchg
insb
mov
add
pop
pop
push
div
out
aaa
push
test
sbb
cmp
mov
xor
inc
mov
xchg
lods
arpl
sbb
push
sub
sub
add
dec
shlb
cs
dec
mov
popa
cmp
test
push
add
stc
pop
mov
ret
inc
add
out
jecxz
sbb
sbb
and
add
xor
test
inc
dec
fs
dec
push
jmp
dec
pop
pop
call
jg
imul
mov
aam
push
jbe
hlt
jnp
xor
jnp
cmp
sti
ret
packssdw
inc
stc
mov
mov
test
inc
aaa
inc
adc
xor
xor
imul
jo
enter
pop
je
sbb
cmpsl
iret
jo
aaa
inc
adc
daa
pop
mov
lcall
rorb
inc
sub
xchg
inc
sub
xor
xchg
emms
pmulhw
and
jmp
insl
xchg
xchg
icebp
lds
mov
iret
and
scas
push
test
push
mov
pop
fwait
and
jg
mov
fnstsw
push
repz
sub
ucomiss
dec
inc
dec
sbbb
xchg
pop
xchg
fucomip
std
outsb
negb
and
push
sub
rcrb
mov
out
roll
sbb
jmp
add
mov
pop
rcrb
orb
pop
sbb
mov
jmp
fdivrl
jmp
xchg
and
popf
mov
ljmp
insl
gs
ret
mov
int3
loope
nop
lds
or
fisttpl
cmp
pop
imul
cmp
mov
dec
add
sbb
xchg
data16
sbb
xchg
lret
leave
push
loopne
push
clc
add
and
mov
sarb
daa
arpl
dec
es
push
aaa
jmp
movsb
dec
rorl
xlat
movsb
cmp
je
sbb
imul
push
push
sub
mov
ret
push
mov
das
push
push
or
xchg
cs
outsl
adc
out
mov
lock
rcrb
sar
lahf
inc
cmp
ljmp
pop
aas
sti
lock
in
fwait
lret
rcll
cmp
lret
scas
gs
pop
mov
xchg
cwtl
mov
out
sub
sbb
dec
jecxz
je
xor
je
negb
popl
je
test
call
shrb
mov
xor
mov
rcl
rclb
jb
and
pop
fildl
mov
shll
jmp
xor
pop
icebp
fmul
sbb
leave
cwtl
xlat
ljmp
sbb
sbb
pop
outsl
jmp
cmpsl
mov
fsub
in
mov
out
add
pop
mov
and
add
gs
adc
mov
push
dec
enter
sbb
jp
out
fs
fwait
cmp
dec
cmp
mov
sub
sbb
sbb
mov
aad
fidivs
inc
jnp
dec
cwtl
cltd
loopne
into
add
mov
addr16
repnz
jmp
cmp
imul
mov
sub
lret
mov
xchg
pop
or
xor
jecxz
rorl
push
lock
jbe
imul
lea
mov
xchg
mov
dec
mov
xor
and
push
dec
sub
or
sub
mov
aam
shll
xor
outsl
mov
fldl
pop
or
mov
sub
cltd
push
dec
lret
je
iret
lahf
pop
cmp
lods
pop
jns
adc
cli
rclb
fsts
push
pop
inc
in
cmp
lahf
scas
subl
enter
pusha
aam
lock
sahf
aaa
fimuls
dec
cld
add
jb
adc
leave
adc
clc
cs
subl
aad
out
xchg
mov
mov
imul
sti
cld
mov
mov
popa
stc
push
in
inc
push
test
sub
je
lock
lds
inc
cltd
adc
xchg
sarl
mov
test
mov
repnz
je
mov
aam
or
and
cmp
cmc
cmp
js
add
inc
mov
ror
into
mov
mov
push
or
push
or
or
or
icebp
pop
cmp
cmpsb
pop
add
decl
orl
pusha
int3
adc
pusha
adc
es
add
nop
bound
push
mov
and
int
jnp
jns
sbb
xchg
rolb
or
jnp
imul
jbe
loopne
lret
out
addr16
popa
pop
jns
sbb
mov
repz
addr16
xchg
pop
xor
in
mov
fdivs
sub
orl
push
cltd
nop
negb
adc
sub
or
push
mov
and
xor
or
ret
pop
loop
shll
shr
xor
mov
inc
cmp
xor
jle
cmc
sbb
in
es
cmp
xor
enter
adc
aaa
sbb
movsl
cmpsb
pop
daa
orl
jp
sub
dec
pop
push
xor
mov
ret
repnz
dec
lods
sbb
pop
sbb
lea
fldenv
xchg
add
mov
scas
daa
fidivrs
ret
rclb
cs
iret
fs
out
push
mov
or
add
dec
js
int3
or
push
aad
push
cld
dec
mov
jge
xchg
scas
jne
and
push
popf
hlt
xor
stos
jmp
loop
adc
add
sub
bnd
rorl
dec
iret
xchg
fcmovne
cli
mov
adc
clc
into
mov
cmc
sahf
shrb
jmp
ficoms
mov
add
sahf
jo
adc
or
outsl
adc
fidivrs
or
pop
inc
sub
inc
push
pop
and
adc
xchg
sub
in
divb
movsb
fwait
jg
lcall
push
jae
add
iret
or
mov
fildl
adc
or
or
scas
in
pop
aam
xor
testb
outsb
mov
loopne
xchg
icebp
pop
jp
cli
jb
ljmp
filds
inc
or
outsl
ja
pop
xchg
mov
xchg
fnstcw
add
jle
mov
lcall
adc
add
popf
xchg
sub
xchg
fs
test
mov
aam
sbb
cld
jae
cltd
outsb
mov
js
or
ret
nop
or
mov
xchg
movsl
push
or
add
add
aam
inc
sub
push
jbe
mov
jle
int
push
cltd
adcb
shrl
out
je
int
pop
jns
sbb
inc
cmp
and
cmp
nop
dec
push
push
je
scas
cmp
shll
jb
adc
movsl
and
inc
loope
test
std
idiv
outsl
mov
xor
es
mov
cmpsb
xchg
ret
and
adc
in
dec
push
jecxz
cmc
and
push
mov
inc
mov
scas
shll
das
push
mov
push
push
sub
ret
and
jp
jl
testb
pop
sbb
xor
jg
cmpb
or
add
inc
or
stos
push
push
xchg
pushf
pop
mov
insb
or
xor
imul
mov
ja
mov
jbe
jmp
and
pusha
push
and
and
or
xchg
les
mov
push
sub
call
jne
in
das
fisttpl
adc
test
adc
add
mov
loope
mov
push
int
push
loop
fsubrs
adcb
mov
mov
adc
bound
dec
je
test
stos
test
inc
pop
js
push
loop
mov
andl
dec
rclb
push
rclb
in
xchg
dec
pop
mov
mov
ds
sub
dec
leave
ljmp
add
cmp
iret
clc
cmpsb
rcll
jecxz
ja
ret
enter
fildll
sti
insl
ficompl
in
inc
je
mov
dec
stc
icebp
inc
adc
rcrl
add
int
movsl
in
cmpsb
shl
xlat
fwait
test
sbb
in
jle
push
rcll
ljmp
pop
cmp
inc
add
es
add
inc
mov
dec
aaa
adc
fisubs
loop
in
int3
ret
push
in
rclb
adc
repz
lds
adc
lods
mov
cmpsb
jp
je
mov
adc
sub
ljmp
int3
or
ret
and
xchg
je
rcll
out
mov
push
dec
stos
jae
das
add
cmp
or
mov
xchg
clc
pop
mov
mov
sbb
and
in
test
and
mov
push
int3
push
mov
mov
xchg
bound
mov
push
bound
cmp
pop
adc
inc
paddq
out
stos
adc
mov
ret
inc
xor
je
mov
loopne
out
jmp
shr
mov
fwait
lods
cmpsl
adc
mov
sbb
iret
or
das
sub
or
adc
shll
iret
ret
scas
sbb
shlb
inc
stos
call
and
cmp
inc
imul
cmp
iret
les
jmp
jp
std
cmp
js
inc
cmp
pop
sub
out
push
mov
imul
mov
js
adc
test
cmpsb
jge
in
not
inc
jnp
imul
les
xor
sbb
sub
mov
sub
divb
andps
imull
rolb
xorl
sbb
inc
jmp
out
daa
inc
scas
inc
scas
test
cmp
jne
and
push
loopne
adc
mov
adcb
js
xchg
outsl
inc
sbb
add
push
je
add
mov
insb
aam
dec
shl
loop
imul
imul
pop
mov
and
imul
xchg
test
movsl
inc
add
xchg
in
sbb
add
inc
and
mov
xchg
fs
xor
iret
ret
mov
enter
scas
adc
mov
push
fcomps
cwtl
sub
sbb
mov
inc
adc
fxsave
cmpsb
mov
mov
out
clc
outsl
cmp
mov
or
pop
js
or
insl
jl
pop
push
sub
pusha
jne
and
push
xor
imul
sbb
ror
ffreep
roll
mov
ljmp
xor
sub
nop
pop
test
shll
mov
adc
aam
xchg
inc
aaa
jge
mov
cmp
loopne
scas
sbb
dec
mov
sub
push
insl
or
pop
shl
lods
fnstcw
and
cltd
les
repnz
jmp
cmp
adcb
mov
leave
add
pop
cmpsl
lret
xchg
adc
dec
pop
pop
cwtl
jp
sub
pop
pop
sahf
lods
cmp
sub
out
xchg
xlat
shrb
outsl
aaa
and
insl
inc
mov
mov
ljmp
pop
rcrb
loope
pop
jne
iret
or
ljmp
push
in
add
inc
mov
pop
fwait
mov
add
subb
xor
pop
jae
rclb
stos
cmpsb
pusha
fmuls
bnd
adc
sbb
daa
inc
mov
dec
aaa
push
xor
movsb
mov
dec
sbbl
cli
inc
lret
jg
subb
sbb
sti
jl
push
ret
cwtl
cmp
sbbb
mov
push
and
mov
push
js
and
fcmove
adc
js
mov
ja
cmp
pop
stos
jle
pop
adc
jge
sbb
xchg
icebp
inc
or
push
and
jo
or
iret
outsb
lds
jl
loope
pop
sbb
jbe
call
repnz
in
loope
jns
test
sub
jae
xchg
outsl
pop
cmpb
iret
xchg
out
pop
ss
adc
dec
push
dec
mov
jecxz
sbb
sahf
fadds
cmp
lea
push
and
cmp
sub
cmp
jae
js
inc
jae
insl
dec
and
cmp
add
or
das
arpl
les
sub
cmp
pushf
hlt
insl
fldl
mov
inc
cmpsl
sub
xor
xor
shll
jg
mov
js
ret
aas
sbb
adc
loopne
cmp
mov
xchg
cmp
xorb
jecxz
bound
inc
test
bound
out
test
stos
lds
lcall
bound
sub
fisubrl
xor
sub
jno
outsb
js
loop
mov
jge
jge
shl
outsl
jne
iret
mov
mov
jmp
and
xchg
adc
fucom
jo
iret
inc
or
xor
mov
sbb
jnp
adc
or
leave
mov
popf
call
popa
daa
dec
mov
cmpsb
pop
fcom
imul
dec
and
pcmpgtd
push
sub
mov
cmpsl
data16
adc
pop
xchg
mov
lcall
dec
mov
hlt
mov
ja
nop
lds
dec
dec
pop
cmpl
cmc
add
repnz
cmp
cmc
mov
cmpsb
push
idivl
mov
fidivrl
fisubl
cltd
fs
mov
sahf
shll
or
dec
push
dec
cmp
inc
addr16
jle
insb
jae
in
in
xchg
adcl
in
ja
adc
scas
pushf
and
dec
fs
fcomip
mov
inc
sbb
dec
fwait
aam
xchg
dec
push
inc
mov
push
test
pop
cmp
adc
sub
and
inc
mov
es
addr16
mov
jno
int3
push
adc
lods
test
ja
fiadds
cld
mov
mov
sbb
ficompl
xchg
cld
xchg
mov
adc
aam
pop
cmp
lods
fidivs
mov
fildll
ljmp
aam
mov
push
add
xor
movsb
out
push
loope
leave
hlt
add
sbb
int
insl
aas
mov
xchg
pop
aam
je
in
stc
or
mov
sbb
repnz
or
out
pop
lahf
jno
out
test
fucomi
sbb
sbb
cld
jns
sbb
cmp
inc
push
and
ret
notl
push
pop
pop
cmp
mov
push
ss
mull
lds
dec
mov
mov
sbb
cmp
out
xchg
mov
iret
popf
cwtl
xchg
pop
mov
xchg
push
jp
mov
insl
inc
pusha
das
sub
outsl
xor
js
adc
lahf
pop
mov
fs
imul
es
sbb
in
dec
sub
leave
dec
cwtl
enter
xchg
test
clc
mov
lret
cmp
sbb
mov
stos
adc
and
loope
aam
add
cli
adc
pop
mov
adc
sub
in
mov
in
jns
dec
adc
or
stos
fadds
clc
xchg
iret
xchg
push
push
scas
mov
test
out
pop
xor
aam
sbb
cmp
or
and
scas
xor
cmp
into
into
pop
lea
and
add
les
pop
mov
dec
ljmp
pop
sbb
jmp
mov
cmp
inc
movsl
bound
dec
jb
sbb
jg
je
and
mov
xchg
and
js
outsl
test
shll
inc
fsts
mov
mov
ss
jmp
xor
popa
loope
mov
repz
ret
jge
push
ja
add
aas
push
sub
xchg
int3
mov
cmpsl
movsb
xchg
bound
pop
dec
inc
mov
cmp
gs
mov
scas
test
add
jl
or
test
out
je
sbb
aas
popa
js
inc
mov
xchg
test
jbe
xchg
xor
dec
test
es
ret
dec
push
jnp
pop
cmp
idiv
aas
pop
mov
andl
sub
jno
and
xor
sar
fcomps
aas
mov
cld
lods
imul
test
xchg
mov
faddl
push
js
sbbb
aaa
out
ret
mov
daa
dec
pop
ret
dec
fdivp
adc
insl
dec
mov
loop
das
push
mov
inc
lcall
sti
xchg
iret
mov
sub
out
fldenv
adc
mov
fdivr
jmp
mov
xchg
iret
cmp
cmp
icebp
mov
cli
lock
lds
add
mov
enter
cmc
dec
or
cmp
inc
aad
test
ds
jg
jb
out
out
xchg
adc
dec
inc
cmp
cli
xchg
jnp
in
push
jmp
in
mov
add
sub
fsubrp
pop
into
mov
or
call
imul
xchg
or
test
xor
mov
jb
shll
xchg
inc
arpl
pop
adc
sbb
pop
imul
enter
sub
jne
or
mov
lds
cmpsl
faddl
dec
out
fimull
test
jmp
cmp
je
test
shrd
in
or
push
pushf
not
and
daa
mov
shlb
mov
daa
push
and
adc
cmp
jl
inc
jne
sub
mov
jns
jge
rorl
push
or
xchg
rcll
mov
push
push
dec
fmull
dec
xor
fadd
lods
xchg
ds
mov
sbb
sub
xor
dec
aam
insl
inc
loop
testw
push
mov
pop
roll
push
pushf
inc
adc
lret
stos
push
xor
mov
cltd
push
iret
sub
cmp
sbb
and
out
cwtl
ss
mov
or
sbb
pusha
into
sub
pusha
add
dec
mov
leave
mov
lock
icebp
inc
psubd
xor
jge
push
in
es
mov
or
js
xor
fcmovnbe
aam
xchg
aas
ret
fdivs
dec
call
mov
out
pop
and
dec
xlat
mov
ds
cmp
adc
and
lods
call
push
or
pop
mov
lret
dec
out
gs
outsb
push
xchg
sar
pop
xchg
sbb
fiaddl
fsubs
push
xor
push
addr16
sub
cmp
adc
push
orb
repnz
adc
imul
add
xchg
xchg
adc
add
and
iret
and
pop
sahf
rep
add
adcl
lahf
mov
mov
andb
xor
test
sbb
and
sbb
test
inc
stos
aas
test
sub
outsb
jne
test
ficompl
xlat
cmpsb
xor
stos
out
pushl
jl
hlt
xorl
sbb
rorb
les
mov
fisttpl
mov
int
mov
mov
inc
mov
xor
scas
push
test
movsb
cmp
jo
jge
jmp
shrb
outsb
and
inc
sbb
adc
xchg
xor
mov
in
stc
dec
add
je
rolb
jp
cld
xchg
mov
xlat
or
cwtl
add
inc
repz
js
cmp
rcrl
repnz
dec
nopl
and
xor
sarl
mov
lock
jg
ret
inc
push
arpl
cmpsl
dec
loope
fldcw
pop
shl
xor
lret
sub
clc
sti
push
movsb
fwait
push
pop
ret
and
inc
call
rep
je
mov
lock
mov
and
inc
mov
dec
arpl
sbb
fisubrs
push
xor
fs
scas
mov
push
mov
push
sbb
lock
fisubrl
cltd
lret
mov
push
jb
call
lock
imul
into
ljmp
cmp
jb
push
popf
xor
data16
cltd
es
stos
xlat
pop
pop
aam
js
xchg
scas
pop
mov
pop
les
and
rcrb
das
add
push
dec
pop
mov
mov
cmp
sub
cmp
scas
std
jmp
test
cmpsb
aam
cmc
fwait
mov
insb
ss
cmp
mov
or
int3
inc
mov
negb
mov
fcmovnu
add
test
inc
mov
pushf
das
fbld
outsb
lret
int
aad
or
sahf
aas
and
aam
add
out
cmp
pop
in
das
push
xchg
test
jnp
andb
cmp
cmc
pop
xchg
shll
xor
fnsave
test
mov
lret
or
cld
ss
out
das
sbb
inc
loope
sub
aas
jg
adc
loop
enter
sbb
add
fprem1
icebp
nop
xchg
push
jns
xchg
arpl
jbe
addr16
push
or
daa
adc
push
loope
ds
mov
cmpsb
mull
mov
mov
xor
lret
xor
mov
cli
and
dec
je
cmc
inc
shll
push
jbe
mov
xchg
xchg
imul
les
jne
loope
movsb
imul
and
adc
inc
andb
imul
cmpsl
scas
les
enter
mov
filds
mov
fcoms
gs
push
jb
xor
cmp
jbe
pop
jb
mov
ja
dec
into
or
push
mov
or
mov
sbb
les
mov
jl
js
mov
bound
adc
mov
nop
call
xchg
xchg
daa
pop
popf
bound
or
popa
imull
sub
stc
imul
addr16
xlat
loop
sbb
call
sti
mov
or
xchg
lock
psubsb
pop
adc
std
hlt
in
lea
rcl
rcrl
pop
xor
add
js
lds
aaa
repz
in
je
stc
inc
push
int3
movsl
sbbl
pop
bound
jge
fildl
nop
dec
cs
inc
dec
pop
or
xchg
lahf
sub
and
loopne
imul
insb
adc
or
push
mov
stos
popa
xchg
das
ljmp
fadd
push
enter
pop
je
lret
push
adc
jne
pop
pusha
imulb
xchg
mov
andb
in
sbb
inc
lret
imul
xor
mov
shrb
lea
add
call
out
stos
pusha
jns
fadd
push
and
jl
insl
mov
inc
sbb
addb
int3
mov
imul
test
lcall
sub
xor
push
in
rorb
filds
mov
rclb
sbb
xchg
pop
movsl
mov
test
in
push
sbb
std
movsl
inc
sbb
loope
cltd
add
sub
aad
scas
popa
push
xor
inc
loopne
sub
stc
mov
mov
insb
nop
inc
lret
adc
jbe
scas
setb
in
cmp
mov
repnz
pushf
and
outsl
jo
in
and
xchg
shll
mov
and
jp
mov
cmc
push
shll
jbe
ret
mov
inc
adc
cmp
cs
push
ja
pusha
test
mov
out
sub
idivb
xor
or
or
pop
xchg
push
cmpsb
mov
std
jno
ret
lcall
sahf
cmpsb
cltd
jl
mov
jns
push
cltd
in
divl
jg
xchg
jne
lret
ja
ljmp
sub
ficomps
mov
mov
lock
dec
insl
inc
inc
cmp
mov
mov
push
lea
xor
dec
ret
pop
test
orb
pop
dec
or
dec
mov
jmp
test
and
in
cmpb
dec
js
mov
jo
inc
repz
out
mov
stos
into
fisubl
and
aas
orb
rorl
leave
mov
jecxz
syscall
mov
cmp
add
ret
dec
sub
cmp
ljmp
mov
cmp
sbb
jno
call
mov
les
cmpsl
aaa
mov
decl
mov
jg
loop
imulb
in
psubusb
pop
in
cmp
inc
hlt
mov
or
in
adc
lods
cmp
and
lods
push
jle
pop
cld
and
mov
fdivrs
nop
mov
xchg
push
int3
insb
or
out
jae
inc
lcall
cmp
fstpl
into
hlt
das
or
jge
xchg
icebp
pop
add
add
into
jo
mov
cli
add
jecxz
cmp
stos
loopne
or
xchg
cs
dec
pop
push
xchg
jo
mov
and
popa
mov
jbe
fadd
lock
mov
inc
out
cmpsl
daa
fcomp
mov
or
pop
jo
mov
subl
and
imul
inc
lret
stos
imul
bnd
sbb
mov
test
cmp
iret
movb
fcmovnb
pop
call
cs
mov
cmp
sahf
leave
mov
push
imul
push
sbb
add
xchg
and
mov
aas
cltd
out
mov
add
rcrl
scas
xchg
les
cmpsl
xor
push
lahf
popa
inc
insb
lea
inc
aad
stos
in
das
lret
movsb
arpl
mov
xchg
lahf
lock
sbb
call
cmc
pop
aas
lock
mov
jge
push
mov
add
cld
mov
sub
dec
fs
popf
movsl
das
cwtl
int
pop
cmp
mov
pop
pushf
outsl
sub
stos
pcmpgtd
out
mov
lret
push
xor
imul
mov
jp
fldt
sub
dec
sub
stc
addr16
fistps
mov
aaa
outsb
inc
sbb
mov
addr16
int3
rorb
dec
xchg
mov
imul
sub
lods
ret
orl
filds
mov
outsb
arpl
and
loop
inc
testb
ret
jbe
jae
xor
dec
sub
sbb
dec
outsl
cltd
ja
dec
sub
mov
dec
fcmovne
push
mov
pop
sbb
imul
andl
mov
xchg
cmpsl
scas
std
mov
mov
sub
loopne
sbb
or
repnz
dec
out
ret
cmpsl
cmp
mov
outsl
push
ret
mov
ja
scas
xor
mov
mov
cmp
aaa
dec
lock
pop
lock
jecxz
jmp
ror
cwtl
pop
lds
ror
lods
mov
dec
aas
cmp
push
add
inc
mov
andb
mov
mov
jle
jmp
lock
movsb
es
adc
ss
adc
repz
and
clc
ss
cmp
divb
adc
or
or
inc
sbb
push
aaa
sbb
out
mov
pop
sbb
inc
and
aad
mov
push
mov
popa
xchg
lea
test
in
push
jge
out
je
stos
popf
pop
ficompl
mov
clc
fstl
xor
mov
fmull
push
inc
shrb
xchg
mov
adc
xchg
xchg
lcallw
insl
fsub
adc
xchg
loopne
mov
sub
das
clc
fmuls
sbb
es
rol
int3
lock
rorb
jbe
test
mov
das
popf
and
cli
repz
ftst
test
jg
hlt
repnz
cmpsb
fidivs
push
sub
adc
inc
hlt
fistps
sahf
pop
jae
popa
mov
inc
and
lock
and
test
pop
lea
iretw
and
icebp
js
out
cmp
lret
lea
cmc
cwtl
jmp
decl
mov
mov
jno
mov
lea
inc
jle
or
data16
mov
popf
sbb
sub
in
xor
out
sbbb
pop
fcomi
dec
or
mov
xchg
cltd
cmovo
sbb
and
mov
das
fstl
stos
push
mov
mov
sbb
lods
shll
inc
or
inc
xchg
mov
mov
cmpps
dec
jns
xchg
xlat
jae
stos
out
cld
sub
push
stos
xor
jmp
jmp
lcall
jno
ret
sbb
xchg
push
jns,pn
jle
cmpsl
mov
sbb
adc
adc
fcompl
lods
xchg
mov
dec
dec
push
ficomps
test
jmp
jle
in
insb
mov
js
xor
divb
or
test
inc
or
cwtl
jge
rcrb
push
inc
ljmp
cmc
sarl
sti
rorb
mov
mov
or
dec
andb
js
and
cmc
xchg
rcrb
pop
pop
cmp
stos
arpl
mov
adc
inc
mov
in
jno
push
push
rcr
test
lods
inc
aaa
xchg
or
les
in
imul
ljmp
imul
xchg
jecxz
mov
fbstp
inc
mov
mov
fistps
lods
dec
pop
das
jo
stos
xchg
movsb
adc
andb
xchg
icebp
adc
test
iret
pop
fs
int
jl
fs
lret
xchg
mov
xor
push
js
cmp
in
cs
sub
adc
push
out
loop
push
pop
lds
pushf
jmp
inc
dec
jp
sbb
mov
inc
jl
add
adcl
or
lret
xchg
pop
add
adc
inc
jo
jbe
aad
xchg
xor
mov
icebp
insb
div
dec
jo
js
je
loopne
and
and
push
flds
mov
pushf
das
sub
xchg
pop
leave
fisttps
xchg
add
jmp
jge
sub
cmpsl
cs
dec
dec
mov
mov
scas
sarb
in
insl
xor
dec
jp
jmp
cmp
push
mov
les
dec
fcoms
subb
add
sbb
or
pushf
and
shlb
pop
xchg
int
das
in
xor
bound
je
fcoml
gs
mov
sub
in
inc
push
fsub
jno
push
and
cmpsl
in
int
data16
pop
inc
mov
and
push
daa
mov
pop
sub
mov
lock
fisubl
mov
frstor
aaa
hlt
sbb
pop
jp
jns
inc
and
sub
pop
mov
lret
xchg
pop
and
movsb
push
stos
movsl
nop
dec
sar
sahf
gs
cmovp
xor
rep
push
leave
aas
push
out
sti
adc
dec
mov
icebp
cmp
adcb
mov
lods
daa
jne
rolb
cmp
dec
mov
sub
sub
cmp
movsb
fisttpl
sub
adc
js
into
jmp
push
mov
xchg
subb
pop
dec
nop
decb
or
dec
cmp
pusha
das
pop
call
ror
mov
and
cmp
mov
jecxz
or
sub
imul
pop
roll
sub
and
add
mov
and
push
pop
lahf
xor
push
clc
sbb
aad
js
hlt
and
mov
mov
cld
inc
cmp
push
imul
sahf
arpl
insl
ret
icebp
loopne
dec
cli
push
adc
shl
xor
sti
imul
imul
fcmovbe
push
enter
mov
dec
fildl
cwtl
push
cli
pop
insb
xor
insb
insl
dec
xchg
lea
jp
mov
iret
and
aam
xchg
aas
sarl
js
dec
hlt
dec
scas
out
mov
dec
cmp
icebp
data16
cli
sbb
ja
mov
and
fs
inc
sbb
lcall
out
xchg
jbe
scas
jge
lret
ja
aaa
loop
push
call
dec
sbb
arpl
loope
xchg
pop
popa
pop
mov
popf
mov
xchg
mov
cmp
or
fidivrl
test
jno
sar
imul
rclb
xor
das
jb
les
sbb
sub
test
add
fildl
das
lahf
jnp
add
hlt
fs
mov
pop
fwait
or
jge
adc
ja
fcom
push
mov
imull
testb
arpl
mov
push
add
jecxz
inc
mov
mov
into
cmpsl
mov
inc
sub
mov
cmpsl
mov
and
es
add
std
gs
push
pushf
jns
ret
in
outsl
mov
sbb
push
in
add
push
or
xchg
jns
xlat
push
repnz
jle
jb
popa
mov
lods
pop
pop
xor
xchg
lds
mov
pop
pop
xchg
int
inc
cwtl
cld
das
fnsave
sub
dec
inc
mov
mov
test
or
clc
xchg
mov
mov
inc
inc
and
test
jnp
mov
fidivl
cltd
xor
push
mov
mov
ret
push
cmp
push
pusha
or
push
mov
es
inc
lock
movsb
icebp
adc
push
rcrl
outsl
jbe
fwait
push
mov
ja
das
ljmp
subl
cltd
or
pop
ds
xchg
xchg
lret
cmp
mov
outsb
jmp
jnp
dec
cmp
and
bound
and
add
cltd
sti
cmpsl
aas
mov
sub
xchg
push
jmp
cmp
xor
inc
into
pushf
mov
xchg
jmp
jb
cmpsl
insl
fs
adc
test
int3
add
lcall
add
push
mov
dec
cmp
ss
or
aaa
sbb
jns
call
scas
lret
xor
cmpsl
xchg
mov
ss
mov
pop
jb
mov
test
test
clc
clc
cld
pop
movb
lods
gs
jbe
lods
push
lahf
xchg
adc
pop
imul
xlat
pop
push
test
xor
cmp
sar
sahf
and
hlt
cmp
mov
push
sub
adc
scas
xchg
fldl
inc
cltd
iret
push
in
dec
pop
mov
jge
xchg
xor
or
mov
cmc
lret
aad
nopl
fldl
insb
in
xlat
push
stos
mov
cltd
lahf
mov
es
dec
int3
push
mov
xor
aaa
scas
sbbl
inc
lret
jmp
push
pop
xor
mov
pop
push
jne
xchg
and
jecxz
outsl
mov
adc
mov
push
dec
sub
jge
dec
out
pop
outsb
dec
lret
popf
fnstenv
and
push
dec
std
lds
inc
aaa
imul
imul
ret
scas
pop
shld
mov
adc
rcr
lret
add
mov
int
cld
jno
std
push
fidivrs
lret
xor
cmp
jno
dec
push
fdivrl
push
pusha
push
daa
jnp
pop
cmpsl
movsb
int
pop
push
add
cld
dec
add
adc
loopne
adc
jmp
xchg
adcl
aad
xchg
call
int
push
mov
out
pop
call
test
or
mov
mov
mov
faddl
lret
push
movsl
idivb
into
jl
popa
xchg
mov
and
fwait
popa
repz
fisubs
xchg
out
inc
cmc
mov
out
push
adc
xchg
loopne
inc
iret
mov
cs
adc
xchg
pop
or
jmp
jo
jg
cld
mov
loop
add
outsb
xchg
lahf
fistl
push
les
negl
sbb
aas
leave
jo
sahf
mulb
pop
xor
sub
pop
int
jnp
mov
pop
mov
add
inc
insl
add
test
shlb
fwait
nop
mov
push
jg
dec
sti
mov
xchg
sahf
scas
cmpsl
jne
scas
mov
mov
push
jmp
into
mov
add
int
or
cmp
fs
bound
inc
and
pop
nop
cmp
or
daa
pop
es
test
test
out
pop
jmp
sbb
sbb
pop
shrl
lods
jnp
cmp
loop
fldenv
add
dec
movsl
lock
push
stos
aad
mov
es
int
xor
daa
mov
loope
jmp
pop
dec
dec
mov
fcompl
push
dec
pop
movsb
nop
nop
outsl
cmpsb
loopne
ret
or
push
lds
mov
into
push
sub
mov
or
jecxz
pop
rolb
cmpsb
cmp
mov
lods
popf
jmp
push
popf
je
in
bound
jnp
mov
jbe
mov
add
adc
mov
xchg
aam
xchg
and
dec
aad
stos
inc
dec
xor
cmp
pop
scas
mov
inc
or
in
mov
or
mov
jl
ss
stos
idivb
imul
xchg
mov
jbe
mov
cmc
push
pop
pop
or
hlt
adc
cmp
mull
add
lahf
mov
jnp
jo
sbb
fwait
data16
in
jno
add
jecxz
xchg
pop
bound
or
mov
or
inc
scas
push
sbb
scas
xchg
fildll
stos
fisubs
pop
and
ror
dec
push
arpl
mov
pop
jnp
mov
or
push
pushf
adc
pop
je
xor
sub
adc
sub
xchg
cltd
sbb
xor
lea
cmp
and
addr16
jns
testl
pop
dec
shll
mov
es
or
push
push
xor
add
hlt
pop
rcr
enter
xor
mov
out
pop
push
jmp
sub
jno
xchg
fldt
xor
fs
fs
mov
cmp
mov
jle
sarb
adc
mov
leave
stc
mov
not
pop
imul
add
aad
movsl
rcll
push
js
mov
lods
mov
inc
add
into
mov
loope
aas
or
jg
cmc
xchg
cmpsb
lock
ret
int
iret
mov
sub
inc
lods
stc
jge
test
lret
inc
ljmp
in
repz
mov
notb
jo
lret
jmp
imul
icebp
jno
pushf
adc
or
fsts
ja
mov
mov
mov
add
mov
insl
push
push
wbinvd
and
test
scas
xchg
imul
aaa
test
sub
clc
shrb
mov
pop
fstpl
lahf
outsb
adc
mov
mov
insl
in
dec
xor
mov
icebp
cmp
aad
aam
dec
cmp
adc
bound
testb
push
pop
fsubl
addr16
jl
mov
rcrb
inc
addr16
out
jnp
sub
jle
push
or
pop
mul
stc
aam
pop
fistl
ret
ficomps
in
pop
les
mov
jg
sub
shrl
mov
jle
mov
inc
or
mov
cmp
insl
jae
add
hlt
test
cmp
in
cmpsb
push
dec
ja
fwait
stc
fildll
dec
pop
flds
dec
out
push
mov
testl
add
outsb
je
xlat
es
stos
fwait
xor
mov
mov
mov
mov
rcrl
stos
cmc
lock
push
leave
sbb
outsl
out
mov
jnp
jb
cmp
dec
fistpll
adcl
cmp
or
insb
arpl
inc
iret
or
aad
and
gs
cmp
scas
jg
xchg
loopne
lods
mulb
xorl
mov
and
xor
pop
mov
ret
inc
adc
jp
in
shl
sbb
cmpl
out
mov
pushf
gs
notb
rorl
mov
jecxz
jge
dec
icebp
cmpsb
add
mov
adc
cmc
movsl
jecxz,pt
outsl
loope
inc
cltd
lea
xorb
jne
loopne
sbb
push
loop
movsl
adc
psubsw
test
inc
xor
aas
and
loope
dec
cltd
mov
cmp
movsl
rcrl
inc
mov
xor
mov
nop
adc
aas
lcall
ja
andb
loopne
out
inc
inc
pop
pop
pop
mov
lcall
mov
cmp
test
and
stos
popf
push
xchg
push
adc
push
jae
jp
fs
sbb
xchg
cwtl
subb
popf
lret
outsb
push
push
add
add
mov
xchg
mov
jae
mov
jp
or
push
repz
das
push
sub
mov
xchg
popf
xchg
pop
or
imul
test
jns
fbld
mov
in
jo
leave
lock
aam
insb
lret
xchg
adc
inc
and
mov
int3
push
xchg
dec
xchg
clc
add
sub
adcl
ret
movsb
aad
pop
xor
les
bound
adc
sar
mov
scas
out
out
es
push
push
or
insl
rclb
rclb
and
test
sub
dec
rcrl
mov
sbb
sub
inc
xchg
fmul
sbb
and
shlb
in
and
fcmovbe
inc
jmp
cmc
inc
fcoml
cmpsb
imull
aas
add
sarl
sub
pop
cs
mov
je
stos
lret
xchg
or
xchg
push
sub
pushf
rol
cmc
xchg
mov
dec
and
outsl
xchg
ja
mov
push
mov
test
pushf
std
std
and
inc
ja
jns
xchg
xchg
clc
cmp
mov
adc
ret
popf
test
push
ror
hlt
aam
shll
push
mov
shll
fcomip
mov
cmp
inc
insl
mov
fucomp
in
outsl
in
xorb
inc
cli
dec
ret
sub
mov
es
out
jne
mov
movsl
xchg
dec
test
xor
jge
test
push
push
iret
outsl
and
aad
call
lret
out
adc
jno
push
mov
dec
cmp
aam
push
add
loop
lahf
push
mov
lods
iret
add
ljmp
lods
jbe
xchg
mov
jecxz
test
test
dec
je
adcl
xchg
jl
xor
repz
cmpsl
loopne
js
mov
out
lods
mov
sbb
mov
ljmp
push
out
ja
sub
cmp
negb
dec
test
lcall
cltd
test
dec
sarb
adc
and
mov
ret
and
add
movsb
jo
ja
push
insl
mov
shrl
or
mov
sbb
ret
sbb
stc
ljmp
and
sub
out
arpl
movsl
cmp
jmp
sub
jl
sub
and
fnsave
nop
mov
mov
push
or
adcb
aas
aad
lret
repnz
sbb
lea
mov
stc
add
dec
lods
scas
out
mov
sub
scas
push
sub
jmp
je
loopne
xchg
and
xchg
cmp
cltd
xchg
daa
cwtl
je
fsubl
xchg
iret
stc
out
mov
roll
inc
sahf
nop
mov
mov
pop
mov
stos
mov
push
inc
dec
inc
shll
xor
push
jae
mov
sub
or
stc
fcmovnbe
dec
push
out
cmp
inc
mov
test
mov
mov
lea
jo
cmp
popa
ds
jo
shr
loope
pop
or
jecxz
sbb
push
out
test
jg
ljmp
mov
sub
aam
mov
loop
fnstsw
xor
insl
xlat
mov
jg
aas
push
inc
call
fcomp
mov
pop
hlt
pusha
das
out
arpl
pop
cmpsb
out
xchg
cmc
rcl
pop
cmpb
mov
cld
or
push
cmpsb
mov
lsl
repnz
adc
sub
cmp
push
frstor
push
test
xor
dec
jno
aas
mov
push
stc
cmp
or
pop
outsb
mov
inc
jnp
outsb
mov
jmp
stos
jmp
push
repnz
mov
int3
adc
inc
cmp
xchg
xor
adc
ds
adc
sub
frstor
enter
cmp
mov
or
xor
sub
jne
mov
aam
shlb
shl
sub
mov
in
lret
and
xor
insb
inc
push
jp
std
mov
adc
push
mov
and
dec
mov
inc
mov
imul
bound
es
orl
stos
cmp
mov
dec
movb
push
push
shl
ficoms
mov
rolb
lcall
popa
inc
outsl
insb
sub
mov
mull
ja
cmp
sub
inc
sub
lock
push
mov
fnstenv
mov
pop
mov
lods
xor
popl
ret
pop
icebp
mov
pop
sbb
jbe
jle
sub
or
sub
lea
inc
cmp
push
mov
test
adc
imul
jg
sub
imul
and
xchg
icebp
xor
push
sub
aad
mov
mov
mov
fcoms
mov
jo
mov
push
inc
inc
repnz
aam
push
add
adc
mov
stos
fsts
enter
dec
mov
jnp
adc
lds
and
int
mov
jo
lret
cli
in
mov
mov
inc
fcmovu
dec
mov
mov
sub
into
out
js
in
and
bound
or
sub
test
jbe
or
push
fiaddl
sub
jae
jo
fcmovnb
dec
stos
std
xchg
iret
mov
and
hlt
push
or
scas
leave
test
dec
xchg
ss
add
sub
inc
mov
sarb
adc
pop
lcall
sbb
mov
add
cmp
pushf
test
test
mov
sbb
xor
ds
cmc
or
sarl
movsb
inc
and
es
adc
lcall
das
pop
pop
jecxz
out
mov
sbb
mov
lds
sbb
push
cmpl
mov
inc
into
cltd
jg
pop
fsubs
popa
stc
inc
xchg
arpl
mov
push
xor
fs
mov
sbb
lcall
movsl
in
mov
and
push
sahf
mov
or
cmp
cld
jne
lcall
outsl
stos
pop
push
push
int
mov
pushf
sbb
fstpt
dec
pop
mov
or
xor
movsl
dec
jb
andl
enter
push
pop
mov
xchg
mov
sti
add
nop
xchg
mov
repnz
scas
push
sub
lret
sahf
inc
pop
inc
fwait
leave
cld
adc
pop
repz
fwait
ds
sub
mov
jae
inc
and
and
mov
xchg
dec
lret
jne
movsb
jae
cmpsl
mov
int3
icebp
das
jge
sbb
mov
loop
xor
adcl
repnz
cmp
pop
and
xchg
add
cmp
pushf
fsubrl
pop
sti
xor
adc
sub
mov
jne
out
cld
lahf
mov
sub
mov
mov
push
mov
sarb
cmpsb
adc
imul
or
loopne
sbb
les
test
lret
mov
rcrb
dec
in
pop
mov
mov
stc
decl
sub
int
int
adc
lock
inc
lea
push
mov
fcomi
mov
lods
sub
repz
in
sarb
fwait
and
and
mov
test
mov
xor
in
loop
and
mov
aam
push
adc
outsb
dec
or
sbb
rcrl
mov
hlt
cmpsl
push
adc
loopne
add
fwait
adc
rolb
mov
pusha
xor
pop
ret
stos
sbb
lret
cmp
push
pop
xchg
leave
xchg
pop
pop
loop
outsb
loope
cwtl
cwtl
sub
stos
fsub
ret
sbb
mov
pop
addr16
pushf
mov
cli
test
loopne
icebp
jae
mov
notb
ffreep
adc
rcrl
mov
lea
test
sti
jo
mov
pop
push
push
stos
cs
mov
scas
cmpsl
cmpsb
clc
mov
cwtl
and
fistpl
sbb
cmpsb
dec
in
adc
sub
lock
cmp
imul
mul
dec
xor
aad
mov
in
jno
mov
ss
fcomps
lea
xchg
repz
scas
mov
testl
inc
inc
pop
add
xchg
mov
xchg
ret
add
jb
xchg
xor
out
into
cwtl
jg
pop
cmp
lcall
cmpsb
jg
insl
fcoms
push
or
inc
mov
shrb
loop
xchg
push
xchg
loope
mov
loope
sub
mov
bnd
fidivrl
and
pop
cmp
or
add
cmc
inc
jmp
mov
xor
fdivrs
push
iret
pop
int3
clc
mov
or
push
ljmp
fptan
call
das
add
in
loop
mov
fwait
push
dec
in
loopne
cs
fimuls
sub
out
iret
sahf
mov
insb
jne
push
dec
jecxz
sar
rcr
out
mov
lea
jecxz
enter
sbb
inc
sub
push
jo
fucom
cltd
sbb
add
push
xchg
add
repnz
and
sub
xor
ret
cmp
add
insl
rcrb
xor
shll
test
ret
jbe
cmp
xchg
xchg
adc
inc
fcompl
add
cmpsb
mov
mull
js
xchg
andl
cld
out
xchg
push
xor
jnp
or
mov
mov
cld
ljmp
aam
mov
mov
cld
scas
dec
and
sbb
sub
or
sub
push
jns
sub
mov
sbbl
in
xor
pop
jo
enter
bound
jo
dec
cmc
adc
mov
out
in
loop
in
sub
and
js
or
and
iret
clc
test
sub
loopne
inc
mov
insb
insb
adc
ja
adc
pop
je
loopne
ss
sarl
jmp
sti
xchg
or
and
inc
les
add
lods
push
sbb
mov
loop
sbb
outsl
sahf
adc
jge
mov
add
push
dec
enter
mov
jmp
push
repnz
adc
push
xor
lret
xor
push
cmpsb
adc
dec
mov
hlt
clc
jmp
add
lret
cli
xor
loope
inc
enter
mov
and
in
cltd
mov
xchg
pop
inc
or
mov
jle
in
fldenv
lret
repz
mov
mov
fcmovu
enter
cli
test
push
and
dec
loope
popa
cld
pop
push
sbb
jnp
std
jmp
jnp
xchg
cwtl
mov
lds
les
pop
orl
nop
dec
enter
leave
or
aam
scas
ret
adc
pop
jns
jl
leave
xchg
and
xchg
pop
cld
mov
int
xchg
xchg
mov
addr16
int
fstpl
xchg
and
pop
test
pop
xchg
sub
enter
push
mov
test
xor
mov
mov
mov
jne
sbb
mov
xchg
loope
call
push
mov
xor
js
lret
xor
xchg
xchg
fwait
rcrb
es
adc
pusha
popf
or
cli
cmp
movsb
es
mull
scas
push
scas
jmp
jno
sbb
aaa
mov
icebp
pop
shlb
arpl
dec
xchg
inc
clc
flds
mov
out
out
hlt
jmp
mov
sbb
adc
jmp
ljmp
or
mov
or
push
inc
js
pop
ret
in
push
sbbb
roll
lea
mov
arpl
inc
inc
or
sub
in
hlt
xchg
fwait
rcll
inc
lea
bound
xchg
mov
pop
repnz
mov
int3
sbb
or
mov
sub
je
pop
jmp
cmp
adcl
mov
out
adcb
fiaddl
fstps
pushf
mov
pop
adc
into
loop
into
jecxz
pushf
lds
nop
cmp
push
sbb
push
dec
mov
pop
jns
aas
push
shl
shlb
lods
ja
enter
stos
gs
add
movsl
xchg
nop
popf
xchg
adc
lods
mov
mov
cs
lock
mov
dec
jb
cwtl
fs
mov
mov
xchg
add
or
push
jns
popa
cwtl
addr16
popa
popa
in
lds
push
adc
jno
dec
mov
jne
xor
scas
inc
jo
cmp
jne
arpl
mov
xchg
mov
mov
inc
pop
push
sub
dec
movsb
jecxz
ja
shrl
aaa
int3
dec
lret
outsl
xor
push
and
je
ss
aas
mov
inc
into
jg
inc
push
pop
cmp
sahf
mov
sub
sub
mov
xor
and
jg
dec
das
andb
popa
dec
mov
or
sbb
xchg
cmc
dec
ss
jecxz
xlat
jle
out
sar
add
and
mov
clc
or
mov
cmpsl
inc
out
sti
lret
out
in
imul
lcall
xlat
pop
loopne
adc
adc
fwait
test
push
jmp
or
rolb
adcl
lods
in
or
in
leave
mov
sub
pop
xchg
fwait
sarb
fldpi
rcll
dec
push
inc
jp
push
mov
lret
fs
push
xchg
pop
sub
dec
mov
cmp
cmpb
mov
pop
dec
mov
add
cmp
or
mov
push
mov
pop
sub
xchg
add
inc
bound
ret
adc
jl
sbb
add
aam
cmp
sbb
in
fwait
xor
ret
out
sti
insb
pop
sbb
xchg
mov
xlat
into
test
out
push
in
call
bswap
jb
aaa
mov
add
out
filds
imul
imul
mov
inc
jecxz
dec
push
adc
xchg
sahf
out
jno
add
adc
fdivs
sbb
aas
repnz
fnstenv
push
mov
sub
or
push
in
add
sub
scas
scas
jp
shll
inc
xchg
outsl
lcall
adc
xor
sub
mov
push
or
out
mov
and
cmp
test
mov
mov
push
mov
cmp
pop
popf
cld
xchg
xchg
xor
scas
jbe
cs
lods
je
sbbl
sub
cmp
xchg
mov
shr
into
mov
testl
cmp
xchg
loopne
or
pusha
xor
dec
pop
sbb
fisubl
cmp
add
xor
sub
xorb
inc
cmp
into
mov
adc
mov
callw
xor
xlat
push
fstpt
lods
xchg
lea
repnz
xor
xchg
xor
scas
sbb
cmp
and
daa
test
pop
pop
pop
nop
movsb
sub
mov
repz
iret
push
mov
sti
pop
aas
push
lret
xor
sbb
dec
push
pop
mov
sbb
jo
and
and
pushf
shll
push
clc
add
pop
and
jl
imulb
pop
cmp
cmp
xor
repz
xchg
test
addr16
stos
test
jp
outsl
popf
mov
xchg
ja
jg,pn
cmp
dec
dec
xchg
xchg
das
int
cmpsb
mov
in
sbbl
mov
lret
out
xchg
push
jnp
dec
cmpl
dec
jbe
jp
stc
cmpsb
scas
mov
mov
repnz
xor
inc
fcmovbe
xor
mov
outsb
daa
inc
cmp
addr16
or
pop
sahf
inc
sub
cwtl
xchg
fidivrs
and
gs
dec
shll
lods
ljmp
idivb
push
cmp
mov
shrl
adc
stos
or
push
fwait
push
mov
cld
push
leave
inc
stc
fcompl
rclb
mov
push
fisttpll
mov
cli
fisubrl
pop
push
pop
xchg
and
mov
jno
mov
addr16
sub
repz
xchg
subb
insb
insb
fs
scas
out
cmp
cmp
je
push
or
or
jno
jp
in
loop
test
sbb
pop
pop
xlat
pop
sbb
mov
xchg
stos
out
adc
or
cs
sbb
jg
or
mov
sbb
mov
cmpsl
lret
out
xor
mul
es
push
sub
ret
mov
pushf
xchg
mov
push
dec
jg
xlat
xor
data16
mov
inc
fnstcw
lock
push
aaa
pop
clc
mov
and
adc
mov
cmpsl
sti
cld
repnz
popa
or
aam
popf
in
repz
stos
mov
fcmovb
repnz
adc
sub
jnp
xchg
push
dec
cmpsb
cmp
mov
shll
lds
xchg
xor
clc
rcrb
out
jb
stos
pop
outsb
and
mov
subb
test
aas
push
push
sub
ljmp
and
test
mov
aam
inc
sub
jge
jne
dec
in
scas
pop
repz
add
xchg
xchg
cmp
jl
mov
and
js
adc
add
cmp
aam
jmp
pop
mov
leave
and
mov
cltd
xor
std
cltd
cmp
aaa
cmp
jbe
lcall
imul
clc
and
mov
add
rolb
into
mov
mov
jp
cmpsl
and
push
sub
sub
xchg
test
push
xor
outsb
xor
sub
push
push
jno
pushf
mov
stc
stos
rcrl
ror
xchg
sahf
lods
fwait
repnz
aas
pusha
dec
cmpsl
mov
or
pop
test
dec
dec
pop
out
push
push
inc
adc
outsl
xchg
add
jo
or
cmp
xlat
call
sbb
test
stos
cmp
xor
jno
push
push
pushf
out
popf
fucomi
cltd
movl
or
push
shlb
jg
fwait
xchg
ljmp
pop
sub
jl
pusha
repz
sbb
jbe
insl
mov
or
shlb
or
push
inc
adc
mov
test
in
fsubrs
push
insb
pop
lret
pop
fs
mov
in
dec
cli
or
adc
jmp
sbb
mov
pop
xchg
aas
mov
adc
pop
in
das
call
outsb
sahf
stos
push
pop
and
aaa
pushf
add
cmp
js
cmpl
push
negl
out
repz
mov
das
sbb
pushf
xchg
stc
inc
mov
jge
leave
stc
inc
loop
pop
cltd
pop
and
mov
shll
sbb
jo
leave
xor
outsb
mov
rclb
push
mov
sbb
xor
and
loopne
sbb
loop
cmp
jecxz
clc
daa
mov
mov
cli
outsl
ret
pop
push
inc
div
mov
mov
lcall
mov
orl
mov
cmp
xchg
jne
mov
inc
ret
out
lods
push
pop
mov
pop
into
and
or
call
insb
or
sbb
inc
test
bound
stos
push
movsb
xchg
adc
mov
jle
mov
jae
mov
push
leave
lret
add
mov
pop
movsl
scas
loopne
out
adc
mov
jp
test
jns
pop
hlt
push
orl
lock
mov
in
mov
sbb
xchg
stc
faddp
popa
dec
sub
cmp
pushf
add
jo
adc
enter
and
jmp
dec
xor
loopne
cmp
movsb
lcall
popf
fs
push
pop
xchg
fs
je
push
push
mov
mov
outsl
loop
sahf
into
in
push
push
out
ljmp
jp
lock
jg
repnz
dec
xor
dec
dec
pop
pop
add
xchg
mov
shll
ret
sub
cmp
mov
imul
mov
and
mov
sbb
pop
dec
shrb
xchg
inc
loopne
les
mov
loope
subl
daa
into
jp
shll
cmpl
pop
or
sub
dec
test
clc
in
dec
ds
pop
stos
out
inc
sti
sub
xchg
sar
hlt
pminub
xchg
fistps
leave
pop
imul
aaa
jno
out
or
add
or
shll
dec
and
dec
mov
out
adc
jle
bnd
push
outsb
mov
pop
ficomps
pop
pop
test
xchg
int
mov
aaa
mov
mov
push
adc
or
xor
inc
lcall
nop
push
dec
xchg
addr16
fnsave
sub
pop
or
roll
or
cmp
adc
daa
mov
and
scas
push
pushf
pop
push
scas
pop
inc
mov
sbb
sarl
outsl
push
repnz
sub
div
test
movsl
mov
pop
aas
adc
adcl
cmpsl
inc
sub
dec
add
cmpsl
add
push
cmp
lret
push
jnp
mov
loope
push
lods
sahf
mov
stos
mov
jl
mov
sub
add
in
mov
mov
stc
xchg
cmpsl
lock
xchg
jmp
cltd
mov
hlt
loopne
cmp
xchg
int3
mov
sbb
xchg
jecxz
int
push
mov
push
add
cmp
pop
das
sbb
ljmp
popl
add
fsubr
push
xchg
aaa
dec
dec
test
test
ljmp
fisubl
cmp
dec
frstor
sub
push
xchg
xchg
sub
adc
lea
mov
imul
mov
fsubr
in
push
jae
sti
cwtl
adc
sub
mov
jo
add
dec
jp
xor
daa
hlt
mov
pop
xchg
sub
rclb
scas
push
das
fwait
cmp
pop
xchg
mov
pusha
rcl
ret
xchg
jbe
in
scas
dec
and
int
add
fidivl
pop
push
pop
mov
popf
stc
imul
setns
hlt
jl
faddl
sbb
mov
in
aaa
loope
sbb
xor
pop
pushl
sub
movsb
xor
cwtl
jb
sbb
xchg
in
paddusw
xchg
pop
mov
out
mov
jae
push
pushf
xchg
sbb
xor
lds
shll
push
inc
scas
push
xchg
js
jae
dec
mov
xchg
ljmp
movsl
inc
les
loope
jle
mov
pop
sti
lret
mov
push
adc
sahf
ljmp
dec
inc
fdivs
inc
lcall
jl
mov
mov
jg
dec
imull
or
add
cmp
das
popa
shrb
mov
pop
dec
jmp
and
pop
lods
js
fsubs
movl
loopne
in
je
or
out
push
push
loopne
in
push
loop
iret
das
push
mov
adc
mov
in
xchg
add
and
sahf
push
movsl
out
push
sti
lods
and
push
sub
sbb
insb
push
pusha
push
inc
addr16
insb
addl
shl
cmpsl
sub
xchg
in
adc
and
fdivs
push
pop
jb
mov
scas
sub
push
fcomp
mov
xor
pop
inc
inc
test
fld
scas
and
inc
push
insb
push
divb
jbe
jg
arpl
mov
cmp
pop
inc
nop
xor
mov
fcompl
inc
in
xor
sub
sub
jp
sub
mov
lock
lret
loopne
enter
jge
push
inc
and
daa
test
fcomp
xchg
cld
dec
xchg
loop
sub
testl
js
mov
es
mov
xchg
pop
rcrl
mov
rcll
xchg
and
mov
fwait
mov
aad
sub
scas
inc
test
addr16
fdivrs
shlb
inc
divb
out
pop
insl
sahf
lods
aam
imul
mov
sbb
aaa
testb
xchg
sub
adc
insl
push
add
adc
mov
lret
cmp
push
cld
sub
les
adc
dec
jecxz
stc
adc
bound
jmp
mov
jg
add
dec
xchg
test
inc
inc
imul
push
mov
pusha
aam
jmp
out
or
nop
ficoml
adc
fldcw
loop
cmp
adcl
jbe
push
add
call
lret
fucomp
adc
add
movsl
aas
pop
loope
dec
pop
cs
fistps
es
mov
push
mov
push
jmp
in
cmpsl
add
mov
in
mov
lods
or
inc
xchg
xchg
inc
mov
movsb
pop
mov
js
clc
and
jg
inc
jns
dec
inc
stc
ret
adcb
mov
or
sub
lock
add
orb
dec
ss
fisubs
inc
lods
aaa
frstor
in
jo
xor
or
xchg
cmp
ss
sbb
fwait
out
mov
pop
pop
in
clc
xchg
scas
stos
mov
mov
in
insl
push
imul
push
ret
or
stos
dec
mov
dec
push
inc
sub
fs
mov
pop
and
adc
xor
addb
cmp
xchg
stos
push
pop
out
xor
sub
and
mov
es
cmp
dec
pop
out
mov
stos
mov
push
mov
dec
jnp
pop
movl
xchg
insb
mov
jg
push
test
dec
mov
rorb
test
lods
jge
cwtl
cli
dec
and
rcl
rcrb
lret
mov
pop
adc
stos
rcll
push
fadds
mov
pop
ret
and
adc
inc
int
sub
aad
popf
andb
mov
push
sub
mov
std
out
fisubrs
dec
imul
dec
mov
in
scas
xlat
jne
mov
stc
repnz
movsb
bound
xchg
sub
xor
addr16
popa
leave
sbb
popa
push
je
mov
add
inc
aad
xchg
mov
jnp
idivb
jecxz
jl
popf
test
mov
enter
int
cli
push
jmp
pop
sbb
mov
into
leave
add
sub
adc
push
mov
out
mov
pop
ret
idivl
jmp
inc
insl
jp
cmpsl
dec
xor
add
xchg
sbb
mov
xchg
cmp
mov
mov
ds
lret
add
je
sarl
sbb
in
ljmp
sub
inc
sub
aam
mov
lods
mov
testl
jp
mov
stos
and
push
push
jns
in
sahf
movsl
cmp
add
pop
adc
es
inc
scas
jno
dec
test
inc
into
pop
or
rorl
or
or
xchg
xor
fldl
push
testb
or
out
repnz
add
ds
mov
xchg
dec
xchg
dec
pop
dec
stos
inc
fldcw
insl
loopne
fsubs
scas
test
cwtl
pop
iret
inc
mov
shrb
dec
into
xchg
jp
hlt
sbb
fisttpll
out
cmpsb
out
test
xchg
fiadds
aad
pop
popa
dec
push
or
or
xchg
cmc
out
ja
lret
cmp
icebp
adc
hlt
test
mov
jge
mov
cmp
jne
nop
incb
dec
adc
sub
pop
ljmp
cmc
jge
leave
imul
ret
pop
adc
xor
nopl
iret
stos
or
pop
xor
hlt
insb
out
incb
jecxz
jecxz
jle
and
xor
repz
sub
adc
jo
sub
mov
aam
hlt
rolb
or
adc
jp
mov
cmc
cwtl
fxch
or
pop
out
scas
mov
loop
jns
nop
les
lods
pop
sbb
push
int3
cmp
and
notl
outsb
test
dec
movl
fnsave
lret
subl
fimull
aas
xchg
daa
push
and
mov
rorb
and
shlb
and
push
loop
mov
xor
dec
add
in
pusha
in
mov
and
scas
lock
dec
xchg
push
aaa
mov
mov
push
pop
adc
mov
mov
xlat
push
out
cmc
out
jmp
test
sti
loopne
movl
or
lret
outsb
clc
rorl
mov
jo
pop
adc
shll
fisttpll
cmp
jg
mov
push
loope
lds
add
mov
pop
mov
add
mov
rcr
mov
lahf
mov
push
ja
imul
lods
mov
push
fbstp
shlb
ljmp
mov
xor
pop
addb
mov
push
pop
test
sub
call
pop
pop
lods
sarl
aad
push
or
push
sti
mov
mov
jecxz
inc
int
xchg
mov
testb
push
inc
jno
movsb
cmp
jns
and
inc
outsl
and
mov
les
in
sbb
sub
das
push
movsb
ja
pusha
out
or
nop
in
add
inc
mov
push
rol
loop
je
imul
xlat
in
push
addr16
inc
mov
xchg
icebp
pop
or
jns
pop
in
pop
insb
jo
stc
and
enter
add
mov
mov
add
mov
out
out
and
mov
mov
mov
inc
mov
lahf
or
sub
sbb
jbe
aam
mov
fwait
xchg
mov
mov
fs
add
mov
sbb
mov
fldz
movb
sub
cmp
xor
fwait
ljmp
imul
xor
lods
adc
mov
ja
pop
mov
xchg
rcr
xchg
mov
hlt
mov
mov
sbb
or
test
jne
int
sbbl
insl
jl
pop
sbb
mov
cmpsb
fsts
xchg
psubw
pusha
arpl
movsl
or
and
ja
inc
mov
jbe
cmp
sbb
nop
pop
mov
mov
mov
sbb
and
xchg
inc
cmp
fbld
daa
pop
dec
lds
push
jo
loopne
adc
sarb
mov
iret
rol
xor
repz
xchg
aas
mov
sbb
idivb
je
push
lahf
imul
xchg
movsl
js
fwait
jl
xchg
shll
stc
out
es
daa
or
mov
sub
pop
stos
cltd
push
pop
fpatan
dec
inc
mov
and
xchg
dec
lret
ljmp
js
add
or
cwtl
lcall
rol
sbb
das
test
mov
sub
jne
or
aad
cmp
test
adc
mov
sub
imul
mov
das
hlt
pop
xchg
xchg
popf
shr
insb
adc
fldenv
imul
push
imul
sbbb
adc
sub
imul
test
xlat
ja
rcrl
and
mov
fidivs
dec
dec
jg
mov
movsl
popa
mov
jle
cmp
cmp
ss
push
in
loope
pusha
pop
fadds
call
xor
adcl
xchg
inc
js
xor
mov
dec
ds
orb
dec
mov
clts
and
lret
xor
or
inc
push
add
negb
cmp
inc
mov
shll
cmc
xor
fbstp
es
and
bound
push
jmp
dec
rclb
mov
pop
mov
in
insl
es
daa
loope
sub
xchg
lock
sbb
into
inc
pop
sbb
mov
push
push
mov
scas
cmp
ljmp
insb
aas
or
xchg
xchg
xor
and
inc
repz
popa
xchg
mov
loope
insb
or
lea
mov
jge
sub
popa
shrb
inc
push
shl
xchg
jb
pop
mov
in
fnstsw
repnz
popa
loopne
lock
add
dec
jbe
and
lret
imul
sbb
fwait
sbb
mov
cmp
scas
mov
dec
aam
push
inc
add
add
pop
cwtl
push
hlt
lret
xorb
mull
popa
xor
mov
iret
lea
inc
cmp
mov
pop
mov
sahf
dec
out
leave
pop
or
pop
movsl
adc
cmp
imul
fcmovnbe
inc
outsl
inc
push
pop
fdivrs
cmp
xor
insb
nop
adc
xchg
or
dec
mov
mov
ret
rol
rcrb
push
cltd
inc
pop
shl
aas
mov
out
mov
or
adc
gs
push
jo
fistl
test
mov
testl
jmp
sbb
in
lea
imul
test
aam
cwtl
mov
out
xor
out
lods
sub
into
add
pop
sbb
testl
push
sbb
daa
adc
lock
in
push
cmp
clc
add
mov
loope
jmp
xlat
sub
daa
pop
push
fstps
hlt
lock
pop
repnz
fiaddl
in
pop
pushf
cmc
dec
stos
or
dec
call
jb
cmpsb
sub
push
or
mov
inc
sti
mov
iret
sbb
cmc
mov
out
jne
movsl
push
xchg
push
xchg
lcall
dec
add
pop
imul
stc
stos
sarb
pop
aaa
mov
leave
mov
push
xchg
insb
repnz
mov
fidivrs
out
es
mov
xchg
in
filds
push
xchg
jno
lret
insl
jbe
int
les
nop
mov
nop
or
popf
push
sbb
cmp
or
rcrl
mov
in
inc
stos
pop
add
bound
push
pop
xor
outsl
or
sub
inc
cmp
je
icebp
push
xchg
sub
push
inc
fsubrs
cwtl
mov
lahf
mov
mov
cmpl
cmp
hlt
iret
ret
incl
mov
dec
cwtl
pop
xor
inc
inc
add
mov
inc
ss
imul
ljmp
inc
mov
stos
sti
mov
outsb
xor
rorb
es
pop
repnz
lret
mov
popa
outsb
sub
aam
xchg
dec
dec
bound
push
fnstcw
shll
jnp
xor
pop
xlat
shlb
jge
cltd
fwait
repnz
mov
out
pop
fcoml
jg
sbb
loope
testl
xchg
pop
push
jp
jge
xchg
rcrl
mov
ds
rolb
cld
rcrb
pushf
jg
cmpsb
call
pop
pop
fsubrl
subb
cltd
pop
push
fldl
scas
mov
or
mov
push
icebp
aaa
jb
out
cld
lods
cmp
insb
int3
xchg
lret
push
inc
mov
scas
pop
adc
movsl
testl
lret
fucom
mov
pop
push
sbb
fcomps
test
pop
cwtl
shlb
cld
adcb
mov
mov
push
mov
xorl
sub
and
leave
loop
mov
addb
xor
pop
or
push
mov
pop
outsl
inc
cmpsb
xchg
adc
add
inc
ja
daa
in
push
xchg
or
xchg
popa
lods
stc
push
pop
xchg
test
cld
xchg
sub
cmpsl
fldl
mov
and
popf
adc
sub
jnp
pop
add
adc
lret
adc
or
cmpsb
ljmp
repnz
mov
outsl
mov
mov
push
adc
movsl
lods
sbb
aad
push
pop
cmc
sub
lds
shll
dec
and
xchg
jae
test
inc
sub
arpl
dec
jecxz
pushf
ds
cmp
pop
popa
cmp
jns
movsl
call
inc
sub
loopne
or
andl
ljmp
popf
adc
or
popaw
in
lock
pmulhuw
and
sbb
clc
lret
xchg
cmp
shl
xchg
inc
lods
lcall
ljmp
jecxz
int3
sbb
in
pop
xchg
icebp
or
mov
andl
dec
cmp
aaa
cmc
nop
fisubrs
rclb
nop
pop
push
jp
aam
sub
lods
arpl
frstor
mov
fsubl
pop
testb
cmpsb
sbb
int
and
arpl
push
lea
jmp
dec
mov
xor
xchg
rclb
add
xor
dec
enter
clc
push
push
mov
ret
cmp
inc
xchg
rorl
pop
dec
mov
roll
clc
cmpsl
push
xchg
pop
aad
xchg
jge
outsl
cltd
add
mov
sbb
ja
int
leave
adc
scas
cmp
mov
pop
mov
std
pop
add
out
add
aas
or
lret
lret
test
pop
pop
imul
sbb
xchg
push
sbb
and
icebp
loop
add
add
sub
subb
adc
add
sub
or
jo
mov
or
lods
inc
and
mov
inc
inc
mov
and
ficoml
add
popf
insl
adc
scas
popf
mov
adc
jbe
jno
int3
and
jl
add
mov
in
xchg
mov
xchg
mov
fwait
xchg
ret
mov
mov
ja
dec
mov
in
jbe
mov
std
cmpsb
xchg
outsb
pop
cmp
ss
stos
xor
aaa
jmp
dec
mov
enter
imul
mov
in
sub
sbb
xchg
addb
cli
test
push
lret
and
clc
test
int
imul
daa
nop
xchg
jp
adc
cwtl
rcrl
lret
call
jl
insl
orl
outsb
loop
mov
leave
or
fstl
stos
bnd
insl
cltd
sbb
pop
pop
in
in
sub
popf
jo
mov
pop
fisubl
ss
inc
inc
cmpl
mov
cli
sub
mov
test
or
adc
nop
loopne
jae
mov
lock
mov
jno
or
insb
mov
stos
dec
pop
mov
cltd
data16
mov
pop
mov
push
je
xchg
pop
bound
sub
inc
cmp
pusha
icebp
insl
push
std
lds
or
cmp
lret
imul
and
push
inc
add
stos
pop
xor
lcall
sbb
mov
jae
or
cli
mov
ja
adc
faddl
sbb
repz
lods
cmp
fwait
xchg
cmp
push
jecxz
repnz
in
xor
pop
jp
pop
in
lret
mov
icebp
test
iret
flds
ljmp
xchg
mov
mov
pop
andb
imul
mov
inc
mov
pop
mov
cmp
scas
rcrb
movsb
lahf
sar
daa
stc
add
add
bound
cmpsl
daa
mov
or
fsts
xor
or
popa
sub
push
js
push
cmpsb
js
xor
cmp
cmpsl
mov
stos
aaa
jp
mov
or
fcmovu
call
jne
hlt
nop
cmp
stos
incb
mov
lea
xchg
adc
add
jb
mov
ret
fisubrl
imulb
mov
dec
jb
jge
or
inc
push
xchg
jbe
daa
push
push
pop
cs
aad
imul
jp
mov
rorl
dec
push
sub
jae
negl
ss
test
add
lret
cmc
adc
sbb
adcb
popf
sub
adc
inc
imul
cmp
fbld
mov
pop
push
shlb
push
cmp
lods
sbb
add
andl
xchg
add
add
mov
xchg
adc
daa
fwait
mov
jg
pop
push
sub
push
insb
cld
popa
pop
int3
sub
add
mov
fstpl
cmpsl
cmc
mov
repnz
cmp
out
clc
pop
sub
cs
and
sub
pop
pop
aas
inc
dec
push
sub
xor
rcr
sub
mov
jnp
test
out
mov
shll
mov
cli
xor
xchg
xchg
jb
cmc
out
inc
sbb
dec
cltd
mov
outsl
ja
jno
cwtl
jns
and
ficoms
add
les
xchg
imul
gs
cmp
pop
xor
dec
sbb
shlb
call
pushf
mov
cmp
cli
push
mov
xchg
fcmovu
out
pop
cmc
cmp
pushf
xlat
imul
andl
cmpsb
adcb
enter
jb
ret
pop
jo
js
lret
out
mov
cmpsl
ret
cli
cmp
addr16
xchg
dec
in
insl
and
fadds
das
fs
or
clc
hlt
inc
cwtl
inc
cmpsb
cld
xor
notb
movsl
dec
jb
movsb
dec
jae
scas
lds
jmp
bound
stos
xchg
sbb
in
dec
fdivrl
hlt
fwait
subl
mov
pop
and
cmpsl
orl
clc
sbb
pop
in
push
sub
mov
dec
xlat
sarl
sub
dec
dec
movsb
loopne
out
mov
pop
mov
dec
gs
sub
test
mov
int
pop
out
xor
push
mov
out
das
je
mov
mov
das
or
mov
xor
adc
add
icebp
dec
icebp
iret
nop
xor
inc
xorb
push
jnp
push
test
ret
xor
sub
ret
sub
mov
into
das
int
push
das
pop
dec
mov
cmp
loope
and
test
sub
xchg
repz
mov
dec
jg
push
xchg
and
lea
int3
sbb
add
lcall
into
jle
adcb
pop
inc
mov
in
pop
stos
inc
mov
and
lahf
shrl
xchg
test
movsb
cs
aad
outsb
xor
xchg
push
pop
aam
xchg
xchg
jbe
push
loopne
cmp
lahf
or
int3
jbe
pop
cli
lock
lock
rcrl
xchg
or
scas
push
mov
dec
jns
sbb
push
lret
pop
xchg
adc
add
push
jle
addr16
es
jne
sub
adc
mov
ret
sub
xchg
and
movl
das
jbe
pop
cld
ret
inc
sbb
push
aas
inc
ficoms
cmc
sbb
xor
shll
test
push
scas
mov
sahf
add
int3
lds
push
jne
cmpb
popf
aam
movsl
fsubs
mul
popa
xchg
fsubs
add
sub
cld
mov
inc
fmuls
mov
lahf
jle
lds
fisttpl
ret
inc
mov
jae
enter
frstpm(287
neg
pop
fdivs
imulb
mov
mov
in
bound
fsts
cmpsl
inc
xlat
out
jbe
fildl
push
lret
lcall
sti
adc
inc
or
into
inc
sbb
push
hlt
push
dec
js
bnd
adc
shlb
aas
test
pop
sahf
xchg
inc
mov
repnz
push
cmc
pop
xchg
inc
pushl
les
fbld
fldl
dec
sbb
add
add
out
dec
mov
ret
inc
jmp
sub
cmp
mov
addb
cmpsl
shrb
xor
push
ljmp
cmpsb
incl
adc
xor
fldenv
data16
out
fisubl
add
in
enter
ret
and
inc
sbb
cmp
cld
gs
jae
xchg
push
adc
push
movsb
mov
cmpl
jno
mov
nop
loopne,pt
dec
adc
aaa
sub
mov
dec
je
cmp
mov
insb
mov
test
push
lods
mov
inc
loop
mov
jmp
and
out
jg
push
mov
mov
fabs
xchg
test
scas
cmpsb
mov
rorb
nop
pop
ret
add
sub
cmp
xchg
call
out
fiaddl
jb
sub
fisubrs
inc
mov
adc
mov
or
mov
out
scas
mov
pop
outsl
mov
nop
jbe
negl
out
push
sub
jp
push
fwait
and
push
sub
dec
xchg
test
inc
fwait
mov
scas
dec
aas
xchg
jno
roll
dec
lahf
movsb
test
lock
push
mov
decl
mov
push
pop
in
dec
mov
dec
inc
or
mov
cli
add
cmp
imul
adc
leave
sub
push
dec
jle
xor
es
adc
mov
aas
adc
mov
int
aam
pop
and
aaa
and
rcr
test
fisttpll
dec
rolb
in
lods
sub
cmpsb
sbb
test
in
dec
ss
jecxz
sub
fnstsw
leave
xacquire
mov
leave
mov
std
xor
int
and
sub
push
xor
sbb
push
es
mov
mov
out
mov
jnp
pop
mov
adc
fldcw
sbbb
xchg
je
mov
sub
jns
add
push
insl
clc
aam
xlat
cld
pop
clc
fmull
or
xchg
test
mov
adc
cli
lahf
xchg
or
dec
movsb
loopne
and
cli
lods
pop
inc
add
mov
jbe
pop
adc
push
xchg
and
lock
and
sbb
jne
mov
add
inc
sbb
sbbb
or
test
movb
pop
cld
shl
in
pusha
and
subl
cmp
add
mov
xchg
mov
push
mov
test
push
sti
cmp
ficomps
dec
jo
aam
mov
jge
test
xchg
insl
cmp
push
sbb
into
imul
mov
iret
js
mov
xchg
gs
aad
lret
negl
daa
incb
out
test
test
dec
sbb
js
test
jno
lcall
sub
dec
inc
push
xor
icebp
hlt
pop
ljmp
add
cmpsb
pop
daa
xor
stos
in
xor
and
dec
push
je
pushf
add
arpl
xchg
out
sub
xchg
push
mov
mov
jns
es
jge
jg
fcompl
and
jle
test
dec
lods
and
jbe
or
repnz
mov
mov
int3
test
inc
sbb
sub
xchg
jle
pusha
dec
icebp
fistpl
cpuid
ljmp
or
lock
popa
adc
int
sub
xchg
sub
fmuls
ja
cmpsl
cmp
int3
or
insl
pop
pop
mov
call
cltd
cli
enter
push
dec
jns
out
dec
jno
shlb
adc
push
test
dec
cmp
sbb
es
in
adc
test
and
or
out
or
das
or
es
sbb
push
mov
in
and
jp
inc
and
mov
jg
hlt
insb
wrmsr
or
not
sub
cmp
or
xor
push
lods
push
sub
jmp
sub
cmp
aas
idivb
sub
jb
das
push
adc
outsb
rcrl
jbe
xchg
add
push
mov
stc
inc
subb
mov
cmp
mov
mov
sbb
dec
jp
push
mov
roll
lea
sti
mov
shlb
cmpsl
push
out
mov
stos
je
into
mov
inc
mov
test
clc
cmpsl
push
xor
xchg
cli
mov
insb
aaa
icebp
out
push
add
mov
insb
or
mov
cmpsb
mov
mov
leave
insb
inc
jno
jne
ds
jo
aaa
ja
dec
cmp
ret
lret
or
inc
mov
xlat
dec
inc
testl
mov
pop
xor
jns
xor
out
dec
inc
iret
sahf
adc
daa
stos
sbb
lods
addl
scas
repz
xchg
jp
into
insl
jae
add
push
inc
ds
jle
mov
dec
xchg
jne
call
sub
jno
inc
dec
test
xor
pop
sub
jae
cmp
sbb
aam
scas
adc
push
lods
push
nop
jns
and
shlb
jp
adc
xlat
outsl
pop
not
jmp
pop
in
inc
pop
mov
les
comiss
rclb
dec
imul
call
adc
repnz
shll
fbld
inc
rclb
xor
or
in
jge
cwtl
imul
cli
in
test
fidivrs
and
or
aaa
mov
cmp
cmc
sub
pop
xor
scas
mov
js
imul
or
xchg
xchg
or
sub
or
cltd
lea
xor
in
adc
rclb
aas
das
mov
xchg
xor
insl
mov
inc
stc
into
push
push
and
loopne
dec
cmpsl
mov
rep
mov
rcrl
pop
jae
mov
pop
int3
pop
into
xchg
cmp
movsb
jge
insl
aam
sub
xchg
dec
inc
cs
sbb
pop
xor
and
adc
xlat
outsb
int
mov
pop
sbb
jb
dec
xchg
clc
es
aas
push
or
xor
xorb
cld
jecxz
cmp
jle
cmp
inc
call
out
dec
insl
std
mov
int3
adc
data16
ja
rcrl
aad
xchg
cs
cmp
push
pushf
mov
sub
inc
pusha
pop
push
lock
mov
dec
sbb
inc
lea
movsb
scas
jno
jae
scas
xor
pushf
xchg
sbb
int3
add
test
mov
js
push
jmp
call
fadds
arpl
pop
dec
sub
adc
jnp
dec
mov
sbb
ja
sbb
mov
pop
js
out
push
aam
mov
insb
hlt
sub
mov
sub
seto
movl
dec
mov
inc
pop
xor
jmp
jmp
fwait
outsb
out
ret
flds
loopne
add
in
scas
ror
stos
movsl
sbb
jnp
inc
xchg
rorl
inc
push
mov
push
fwait
sub
fisttpll
cmp
push
ss
mov
mov
and
shll
adc
mov
push
lahf
test
out
in
inc
repnz
inc
mov
xchg
rolb
fistpl
stc
clc
pop
or
dec
insl
mov
pop
cmp
mov
lret
mov
sbb
pop
ror
std
jns
cmpb
js
sbb
in
dec
and
add
shlb
pop
das
lcall
out
lds
dec
xchg
leave
fs
and
insb
jmp
std
pop
lds
aad
addl
popa
jl
outsl
lcall
out
idivl
push
rorb
ret
sbb
test
sbb
sub
popf
push
lahf
shl
add
js
jl
idivb
sub
inc
ds
mov
or
jbe
repz
xor
out
push
or
popa
push
jnp
pop
cmp
mov
call
ficoml
test
inc
jae
cmpb
ret
and
sub
shrl
sub
jnp
jge
std
mov
and
enter
or
scas
in
pop
nop
push
inc
enter
in
fiadds
aam
add
add
pop
jecxz
std
push
movsl
outsl
mov
mov
xchg
insb
ss
in
pop
fisttpl
mov
sub
pop
loopne
fnsave
scas
jns
add
mov
sarb
repz
cltd
add
xchg
mov
pop
loopne
fs
sub
sbb
ss
out
sbb
dec
imul
adc
mov
dec
sub
ret
xchg
cli
mov
pop
push
outsl
inc
pop
mov
cs
loop
iret
inc
adcl
mov
inc
or
pop
or
mov
fwait
test
stc
stos
rcl
sub
cmp
sub
cmpsb
and
jae
jmp
jl
fidivl
cmp
jae
test
stc
push
leave
xchg
pop
jl
xchg
push
test
or
push
ffreep
loop
inc
xrelease
call
ret
xchg
mov
lock
and
out
stos
dec
dec
dec
jp
cmpl
outsb
push
in
xchg
fdivr
xor
cmpsb
jnp
fdivs
sub
std
iret
mov
das
jne
xorl
push
or
mov
gs
dec
shlb
test
mov
out
xor
jmp
mov
enter
cmpsb
and
test
sbb
or
push
pop
sub
push
dec
dec
push
fimull
sbb
in
rorb
sarl
add
xor
mov
loop
scas
cmp
mov
outsl
mov
enter
out
adc
cmp
std
popa
test
mov
rorb
fs
aad
cld
add
adc
xor
out
imul
xchg
out
dec
scas
mov
mov
das
icebp
adc
push
leave
xchg
shlb
add
sbb
inc
mov
and
cmp
loop
aam
sbb
xor
mov
cmpsb
int3
roll
ret
ret
and
mov
fsub
xchg
cmp
mov
stos
es
aam
or
sti
jae
ret
push
out
test
add
dec
cmp
fnsave
or
add
in
xchg
test
add
cmp
ret
mov
mov
cmp
mov
iret
aaa
imul
or
jg
popf
sbb
add
xchg
in
pop
in
shlb
fidivs
shl
pop
jae
and
adc
ret
add
mov
std
popf
lahf
in
sbb
rcr
mov
push
pusha
add
mov
dec
mov
outsb
cmp
rol
and
mov
pushf
mov
clc
sahf
cli
cltd
jae
shll
icebp
pop
clc
xchg
jmp
cmpsl
addr16
repnz
aaa
lods
cltd
adc
dec
dec
push
or
sub
cmp
mov
sbbl
mulb
add
xchg
push
pop
inc
adc
pushf
loop
xchg
xorb
lods
ljmp
cmp
aaa
ret
cltd
jae,pt
xchg
cmpsl
std
cmc
repz
lods
shrl
hlt
cmp
lret
push
inc
ret
ss
jo
call
adc
cli
fs
std
jno
dec
popa
mov
out
push
stos
xchg
jns
cld
test
aam
adc
dec
dec
add
fisttpll
fcmovu
std
xchg
js
pop
mov
mov
jnp
push
xor
push
jbe
xor
mov
hlt
push
out
mov
xchg
cmc
add
jg
jns
sbb
xor
rcrb
mov
fsubr
inc
inc
mov
mov
jge
xchg
or
pop
call
aam
dec
push
xor
insl
add
out
jp
stos
pop
jb
out
jne
out
or
lahf
add
push
inc
inc
cmp
out
pop
adc
sti
sahf
pop
push
sub
cmpsl
das
roll
mov
xor
push
sub
sbb
movsb
or
enter
in
call
and
pusha
jo
cmpsl
inc
mov
test
int
dec
pop
cmc
add
das
repz
test
cmp
nop
imul
mov
push
out
push
outsl
out
jne
bound
push
das
lods
lods
sub
sbb
and
cltd
bound
stos
out
aaa
cltd
sub
iret
dec
sarb
mov
aam
js
sti
cmp
inc
dec
mov
icebp
daa
jl
xor
jecxz
inc
jg
imull
jg
imul
mov
add
jmp
mov
sub
jge
sbbl
scas
subb
mov
dec
lcall
incl
mov
cmpsb
lods
ja
test
test
or
popa
pusha
pushf
into
inc
xor
jmp
xchg
cmpsb
test
stos
aam
movb
cmp
jmp
pop
aas
xchg
loopne
repnz
fadd
in
jge
add
fdivs
push
mov
xchg
bound
push
scas
sub
cmp
xchg
iret
into
add
lcall
movsb
iret
flds
push
cmp
sbb
xor
dec
lret
xor
or
add
loop
es
jle
sbbl
nop
push
out
push
and
xor
push
push
xchg
mov
mov
das
neg
pop
sbb
cmp
sbb
aad
sub
and
ret
nop
jo
jns
mov
testl
sub
sbb
xor
xchg
orb
jmp
mov
xchg
mov
or
test
adc
ds
loope
pop
jmp
insl
cmc
inc
dec
sbb
movsl
shlb
cmp
idivb
movl
push
adc
arpl
cmpsl
mov
das
iret
mov
sbb
cmpsb
add
jns
mov
xor
pop
roll
pop
mov
or
iret
mov
dec
mov
xchg
jo
test
shrb
xchg
idivl
adc
jmp
xor
cmpl
add
cld
push
jne
jmp
dec
inc
fmull
push
les
insl
lods
sbb
stos
cli
test
rorl
inc
gs
pop
push
mov
shrb
loop
ljmp
pusha
push
xchg
push
cmp
dec
xor
loopne
or
in
sbb
lret
push
fldcw
in
mov
add
push
dec
cmp
pusha
pop
push
stc
push
inc
cmp
pop
mov
xor
pop
lock
cwtl
sbb
fsubrl
adc
imul
stos
pop
add
cmp
mov
add
movsbl
mov
add
inc
jp
adc
fsubp
dec
ss
fnstsw
push
mov
sbb
pop
stos
sub
cmp
in
mov
std
pop
pop
mov
xor
pop
add
mov
jo
add
push
sahf
jp
pop
dec
and
mov
adc
je
sbb
pusha
inc
add
enter
sbb
inc
mov
add
int3
dec
out
xorl
push
mov
test
or
scas
outsb
xchg
repz
testl
iret
cmp
mov
je
or
and
enter
push
dec
mov
movsl
test
xchg
mov
shlb
push
mov
out
xchg
fdivr
xchg
mov
data16
adc
mov
xor
sti
jb
sub
mov
cwtl
adc
std
sub
mov
je
or
mov
test
out
pandn
mov
mov
mov
sub
xchg
cmpb
push
cmpsb
repnz
lcall
decb
xchg
pop
es
dec
xlat
pusha
push
inc
cmovnp
xor
cmp
js
xchg
xor
dec
test
mov
cs
mov
sbb
ret
pop
outsl
daa
lcall
pop
lcall
addr16
xor
fdivr
xor
ja
movl
xchg
or
in
lock
mov
mov
add
aaa
stos
std
jl
mull
xor
stos
add
pop
fwait
test
shlb
xchg
add
mov
xchg
out
lods
jge
or
insl
pop
rcl
cmp
and
scas
je
adc
add
outsl
add
add
outsb
sbb
lea
mov
lret
cmp
xchg
inc
hlt
xchg
cs
push
sbb
int
dec
xchg
mov
cmp
sbb
icebp
fs
xchg
push
outsb
leave
rorb
popf
loope
jae
iret
jg
test
jmp
and
mov
mov
jno
jp
lods
ficoml
testb
sbb
fdiv
sub
mov
sub
shll
jle
subb
ret
popf
sbb
out
int3
xor
sub
xchg
sub
ljmp
cmp
loop
cmpb
scas
add
lods
insl
mov
sub
inc
adc
push
incl
in
das
pop
jle
fwait
loopne
hlt
outsl
push
fnstcw
mov
jecxz
sub
arpl
mov
pop
dec
je
sti
xor
cs
inc
mov
in
jnp
xor
stos
in
push
call
push
jg
nop
jle
xchg
or
daa
pop
pop
jl
ds
pop
cmp
jge
push
adc
jbe
cmc
clc
jg
leave
lcall
push
or
aam
inc
jo
pop
dec
add
les
or
mov
dec
xor
ret
enter
stos
pop
adc
int3
fbstp
stc
mov
fcom
mov
or
pop
jbe
insl
lea
push
lahf
jae
in
xor
xchg
xor
fcmovu
mov
rolb
xor
ret
dec
arpl
lcall
aam
jb
lret
repnz
sbb
and
and
pop
movsl
fs
push
test
movsl
pop
adc
out
mov
or
ret
and
dec
addr16
sub
dec
sub
insl
iret
pushf
cwtl
adc
aas
inc
rolb
pop
cmp
shlb
cmp
in
pop
cmpsb
inc
call
cmpsl
push
fs
dec
ficoml
mov
mov
xor
mov
fldcw
cmc
mov
cltd
shr
loope
test
push
or
jne
push
jo
dec
hlt
dec
shll
mov
mov
aam
lods
les
sbb
sub
test
xchg
mov
ja
vpminsb
jnp
xor
pop
xlat
insl
xchg
cwtl
or
cmp
inc
add
and
shrl
rolb
push
fcoml
imul
shr
mov
daa
les
mov
cmp
adc
push
int3
jbe
add
xlat
jmp
idivb
add
sti
xchg
dec
mov
push
int
sbb
stos
and
stos
mov
out
push
or
cmp
add
dec
lods
stos
pusha
fwait
mov
cli
sbb
fcomps
out
push
dec
test
add
xchg
cmp
pop
ja
push
lods
cmp
push
jmp
cmp
dec
cwtl
int
sbb
xchg
aam
stos
jae
push
insb
sbb
push
sub
stc
adc
jae
addr16
push
popf
mov
mov
insb
out
xchg
pusha
cld
sub
ljmp
stos
cwtl
jecxz
sub
in
cltd
in
rep
or
mov
mov
aaa
out
pop
ret
enter
ret
and
shrd
cmc
push
dec
jno
cli
xor
mov
pop
jp
push
inc
push
cmp
pushf
pop
inc
push
push
jg
cs
mov
push
pop
add
or
insl
cld
out
sarb
sti
les
mov
outsl
or
or
sbb
out
lahf
inc
mov
push
and
insb
jb
push
xor
cwtl
mov
jmp
inc
arpl
push
jge
sbb
cmpsb
mov
sub
clc
xchg
fsubrs
loop
sub
sub
scas
jmp
jb
mov
mov
scas
call
jae
push
imul
and
xchg
cmpl
testb
fucomi
jae
cmpsl
jo
aaa
out
sbb
cmp
int3
aas
pop
sarb
adc
push
pop
add
mov
push
fdivr
rolb
sbbl
cwtl
mov
sub
movsl
stc
aam
repnz
hlt
inc
scas
mov
mov
loope
je
jle
adc
xor
mov
xorl
fwait
and
jg
test
cmp
xor
add
inc
iret
imul
in
jns
cwtl
cmp
iret
mov
add
in
scas
mov
divb
or
jo
leave
subb
cs
lea
icebp
dec
xor
test
mov
int3
fs
and
sbb
push
adc
cmp
sti
pusha
idivl
pop
mov
insb
int3
inc
mov
daa
shlb
push
incl
subb
and
mov
movsb
sbb
pop
cmc
adc
pop
or
stc
sbb
pop
outsb
mov
cmpsl
pop
mov
scas
xchg
sbb
jb
ror
xor
cmp
stos
xchg
pop
jb
in
mov
jns
sub
cltd
xchg
add
popf
xchg
jb
gs
mov
inc
mov
cmp
pop
jo
mov
jo
push
ss
xchg
mov
mov
icebp
xorl
test
in
sbb
ja
rorb
jno
popf
cwtl
adc
idivb
sbb
arpl
dec
sbb
loope
fimull
push
pop
mov
mov
mov
cmp
or
mov
in
fbld
subb
sarl
mov
pop
xchg
data16
call
or
out
xchg
lcall
push
sbb
clc
fstp
iret
fs
jb
je
mov
aaa
pop
push
lret
xchg
sahf
inc
pusha
cmc
inc
add
js
lds
dec
push
fimull
xchg
iret
and
lret
adc
stos
orl
scas
icebp
ficompl
cmpsb
xchg
xor
in
fwait
jne
fldt
xor
cltd
icebp
mov
iret
push
mov
lahf
pop
stc
lock
es
push
mov
sub
into
lret
lret
divb
add
pop
lret
hlt
add
pusha
xchg
loope
into
ja
jp
jg
rorb
popl
dec
push
sub
cwtl
arpl
jmp
ja
cmp
mov
lcall
shlb
inc
std
nop
lods
cmpsl
push
push
movsl
sub
xchg
ret
pop
adc
in
cli
stos
xlat
adc
int3
scas
lret
pushf
pop
lret
dec
jb
sub
inc
fs
mov
and
fldcw
aam
sub
xchg
ljmp
jne
in
cmp
add
arpl
push
lcall
xor
or
mov
dec
add
inc
stc
mov
xchg
das
cltd
pusha
mov
cwtl
ljmp
insb
inc
push
arpl
cmp
xor
frstor
pop
sbb
sub
xor
repz
add
dec
push
inc
push
mov
ss
jge
and
and
imul
cmpsb
addl
xchg
push
jl
icebp
rorl
movsl
imul
mov
push
mov
inc
dec
std
jle
pop
push
mov
jbe
mov
loope
enter
push
lret
icebp
lret
pusha
lock
and
gs
dec
adc
mov
xor
push
jg
cltd
fidivrl
rcll
jae
hlt
sub
stos
addr16
call
ds
scas
add
or
or
pop
cld
lods
lret
cmp
sahf
pop
call
adc
fnstenv
pop
mov
dec
ret
xchg
jo
das
out
call
xchg
addr16
bound
add
lahf
inc
jae
and
cmp
inc
adc
arpl
das
xchg
fldcw
aaa
or
mov
aas
inc
mov
or
xlat
push
dec
jge
aad
into
adc
out
dec
cmp
xor
xchg
add
sub
mov
dec
iret
xchg
and
hlt
aaa
mov
pop
xchg
push
add
inc
sbb
ds
mov
jge
das
repnz
pop
imul
stos
pushf
inc
stos
pop
decl
insl
or
iret
rcl
sbbl
roll
ljmp
loop
scas
add
cs
or
mov
mov
les
push
or
jnp
sbb
push
ficoms
inc
mov
lds
imul
mov
les
mov
adc
fxch
cmp
nop
int3
add
into
or
jg
xchg
mov
xchg
mov
stos
dec
inc
jbe
or
pop
imul
jmp
cmp
imul
xlat
arpl
insl
adc
jmp
outsl
push
adc
add
cmp
add
clc
addl
or
pop
push
mov
test
int
scas
cmp
jmp
inc
es
adc
mov
in
ret
icebp
lahf
stos
int
adc
xchg
mov
loop
dec
mov
xchg
jle
push
jmp
xchg
cmp
dec
cmp
orl
push
dec
sbbb
jno
pop
pop
cmpsb
test
cmc
jmp
data16
je
test
sub
jecxz
push
xor
and
cltd
int3
push
cmp
in
or
repnz
inc
inc
inc
adc
dec
addl
out
cld
pop
and
inc
lcall
add
cmpsl
inc
jno
lea
jbe
stc
rolb
rclb
mov
mov
sub
pop
push
hlt
aam
jo
daa
ret
mov
inc
ljmp
and
add
sbb
cltd
mov
int3
dec
in
dec
inc
mov
push
lock
add
mov
lods
test
push
loope
xchg
out
outsb
outsb
lret
out
ss
call
fmul
dec
or
cld
scas
mov
jp
int3
xchg
in
or
leave
pop
jl
rcrb
cmc
sarl
in
ja
lods
testb
jecxz
mov
cld
test
pop
int
sbb
xchg
bound
dec
lods
or
inc
and
pusha
insb
in
jg
lret
add
xchg
push
aaa
insl
or
add
jmp
aam
mov
loopne
push
mov
test
rorl
je
iret
lea
push
add
lahf
mov
adc
jnp
popf
das
pushf
pop
mov
mov
scas
mov
adc
pop
sbb
in
jb
pop
sti
push
jb
xchg
mov
jne
pop
js
add
or
dec
ja
test
lret
cmc
cmp
cmp
popf
push
fbld
jns
rolb
or
stos
cli
dec
out
lods
cs
sbb
jmp
jg
mov
fstpl
call
inc
nop
test
dec
add
shr
mov
repz
jne
fsubr
adc
in
cli
aam
or
in
ret
rcll
fiadds
ds
cmp
in
push
inc
scas
sbbb
jb
outsl
aad
cltd
mov
xchg
push
add
in
xlat
pushl
sub
sti
mov
mov
adc
enter
clc
leave
popf
cmc
lods
std
mov
ret
inc
mov
mov
mov
xchg
mov
add
push
iret
jmp
aam
imul
fcos
test
jg
repnz
add
pushw
push
xor
sbb
das
push
cwtl
mov
ret
andl
xchg
test
imul
xchg
adc
or
adc
pop
jnp
pop
mov
daa
jge
sbb
stos
test
out
jo
shl
fiadds
sahf
outsl
pop
xchg
ss
and
call
cmp
clc
rclw
push
cmpsl
xor
pusha
jge
cmc
pushf
mov
and
add
icebp
mov
pusha
lea
loopne
data16
inc
mov
jl
loopne
jecxz
cmp
lock
loopne
int
adc
sub
inc
sbb
add
cmp
sbb
pop
adc
push
lods
insl
fs
sub
scas
insb
addr16
xchg
jmp
and
loopne
sbb
xor
out
shlb
clc
pop
sbb
popa
mov
and
divl
jl
sahf
xchg
fisubrs
dec
inc
int3
sarl
jo
or
mov
imul
add
outsl
ss
testb
or
xor
shl
sbb
orl
cmpsl
mov
movsl
or
pop
push
cmp
mov
std
push
clc
ja
push
stos
adc
pop
mov
add
cmc
mov
inc
dec
jne
out
mov
adcl
ss
imul
in
lds
sarl
xor
mov
mov
sbb
xchg
aad
mov
add
sub
add
jmp
mov
jmp
cwtl
cwtl
and
mov
dec
fs
scas
iret
nop
mov
push
jl
ss
fbld
int3
push
scas
sbb
push
xchg
cmp
int3
dec
inc
orl
cld
pop
cmp
sarl
pop
xchg
jmp
cmp
adc
cld
ror
pop
xor
jp
sahf
xchg
cwtl
clc
pop
les
or
sbb
jmp
popa
xor
jne
cmpsb
mov
sub
cmpsl
insl
cwtl
jmp
mov
or
shl
mov
movsl
jnp
icebp
mov
sub
jb
jbe
out
adc
and
or
adc
mov
lea
data16
shrb
push
imul
stos
stos
dec
adc
mov
pop
mov
pushf
fadds
add
ljmp
ds
test
arpl
or
mov
push
mov
out
push
xchg
and
adc
add
mov
outsb
cmp
ljmp
inc
mov
insb
call
jno
in
hlt
ja
xchg
fisubrl
mov
fidivrl
das
sbb
lods
loop
jecxz
fwait
aam
or
icebp
scas
iret
adc
adc
xchg
sub
add
pop
xchg
mov
mov
pop
rcl
nop
push
pop
xchg
xor
pop
and
cmp
and
pop
popa
incb
cmp
shll
out
insl
pop
std
popa
sub
insb
pop
xchg
cwtl
mull
out
jae
js
pusha
rcr
fcmovu
cmp
dec
pop
push
xchg
aam
sub
sub
loope
out
sub
mov
outsb
push
or
mov
pop
popa
add
push
rcll
and
jl
xchg
sub
jae
push
or
mov
clc
iret
or
and
mov
inc
mov
enter
shrl
adc
push
fstps
cld
flds
mov
mov
std
stos
mov
lahf
call
rcll
cmp
sub
and
movsl
pushl
leave
pop
pushf
insb
xor
push
adc
sarl
sbb
jg
or
das
dec
fwait
mov
aas
out
xchg
pop
cld
sbb
push
cmp
inc
mov
lea
fiadds
adc
in
xor
or
test
jle
and
jbe
nop
lcall
cmpsl
mov
adc
out
cmp
mov
loope
std
dec
mov
inc
arpl
es
mov
fsubrl
inc
mov
push
dec
jl
xchg
cmp
pop
mov
shlb
outsl
xchg
jb
inc
dec
sbb
inc
add
bnd
rorb
push
cltd
push
push
bswap
pusha
jne
sar
adc
lds
addl
fildll
or
sahf
ljmp
adc
jg
jno
inc
xchg
std
jmp
sbb
or
pop
repnz
push
push
or
std
xchg
jno
sub
add
xor
in
add
add
mov
iret
enter
mov
push
repz
sub
dec
xlat
adc
pop
cmp
lahf
dec
out
push
jl
jp
iret
xor
xor
test
cmp
xchg
sub
das
shll
adc
ds
pop
push
fisubrl
inc
push
test
pop
pop
js
aad
dec
mov
cmpsb
pop
jne
inc
jg
aas
add
dec
cli
testl
cli
inc
scas
mov
mov
pop
mov
ds
mov
mov
pop
incb
movsb
pop
adc
aas
or
je
inc
xor
adc
les
filds
rcll
jae
dec
push
notb
pop
cld
mov
sbb
js
sbb
repz
shlb
add
adc
pop
cs
dec
sbb
les
push
push
mov
insb
mov
repz
sub
movsl
fidivs
cmc
add
inc
int
pop
rcrb
lods
int3
inc
movsl
outsl
ljmp
out
lea
rorl
inc
fisttpl
mov
xchg
outsb
pop
push
jle
add
test
cmpsl
xchg
jns
pushf
mov
jecxz
mov
daa
sbb
idivb
fwait
mov
icebp
in
sbb
jns
movsl
mov
lret
xorb
pop
adc
faddl
insb
call
inc
cmp
xor
push
xor
fcoms
mov
mov
or
mull
sub
mov
pop
sub
or
test
fdivs
mov
pop
arpl
or
sbb
or
fmull
and
leave
shlb
movsl
push
inc
aaa
and
fs
into
mov
repz
and
or
push
or
call
or
adc
rcl
stos
test
adc
loope
mov
repnz
loop
test
adc
popa
adc
xlat
mov
pop
pop
imul
inc
push
aaa
call
subb
aaa
mov
lods
xchg
push
mov
in
and
bound
cmp
stos
fildl
and
scas
push
iret
arpl
pop
ljmp
xchg
adc
cmp
mov
outsl
and
fcompl
pop
inc
test
sbb
push
or
xchg
sbb
push
cmp
leave
sbb
cmpsb
mov
daa
cli
and
mov
adc
or
mov
imul
push
dec
test
lret
xchg
test
test
mov
cmp
add
xor
pop
xchg
and
jle
shl
pop
add
movsl
mov
shlb
cmp
iret
add
dec
ret
mov
and
sub
out
adc
js
out
jno
inc
adcb
testb
push
cmpxchg
fadd
fwait
aam
mov
xchg
sbb
daa
jno
jb
jle
iret
jp
pop
sti
or
shll
dec
negl
jo
xor
jmp
enter
mov
mov
mov
add
sbb
and
stos
jle
mov
push
enter
dec
cmovle
cmp
pop
xchg
test
jl
cmpsb
shll
cltd
xor
push
cmpsb
jno
out
sbb
xchg
shl
lcall
idivb
cmc
lock
js
mov
iret
cs
test
stos
call
movsb
mov
pcmpgtd
nop
xchg
ds
cltd
mov
popa
jg
push
xchg
add
jo
rcll
shlb
sbb
pop
insl
cmpsl
sub
mov
mov
test
sbb
dec
push
dec
ds
inc
lock
cmc
pop
loop
jge
mov
sarb
xlat
fisttps
push
rclb
sub
jecxz
imul
insb
cmp
in
push
mov
xchg
lods
popf
mov
xchg
jnp
rcll
jle
and
pop
jle
mov
rcr
jb
cmp
pop
fisubrs
mov
mov
mov
out
dec
movsl
inc
sbb
loopne
popa
fsubrl
inc
arpl
sarl
aas
inc
mov
push
int
xchg
hlt
enter
out
add
int3
adc
xchg
jecxz
js
idivb
adc
or
out
roll
mov
rcl
test
jmp
jae
fwait
cmpsb
pop
dec
adc
pop
inc
mov
clc
xor
jge
push
mov
addr16
xchg
mov
cmp
fnsave
mov
push
mov
pop
inc
stc
outsb
repz
jl
test
fdivr
imul
jecxz
fcmovb
fs
sbb
mov
mov
inc
sbb
fistpll
add
fcomip
sbb
filds
js
fidivl
je
xchg
cmc
push
stos
push
addr16
push
cmpsb
fistpl
push
and
xor
xchg
lock
test
cmpl
dec
sub
inc
adc
cmp
push
scas
aaa
xor
and
mov
aad
push
xchg
sub
xor
std
mov
mov
fisubrs
and
xchg
scas
or
mov
into
ja
mov
movsb
sub
nop
lret
inc
jmp
mov
inc
pushf
jmp
sbb
lock
cmc
xor
add
push
xor
jb
aam
fnstcw
mov
mov
mov
cmc
cld
cmp
sbb
test
xchg
mulb
cmpb
and
gs
cmp
test
cld
fldenv
das
fcmovne
xchg
mov
bound
das
into
add
mov
mov
mov
js
jmp
adc
mov
mov
inc
insl
jbe
sbb
std
pop
std
lahf
lds
jle
pop
cmp
aad
push
jle
in
ds
test
jbe
iret
mov
mov
or
aaa
cmp
push
jns
sub
jb
cwtl
lds
dec
mov
jo
fadds
rcrb
mov
jbe
stc
movsb
je
sti
xorl
in
mov
xchg
adc
xlat
rcl
pop
aad
adc
jb
in
aaa
cld
in
sbb
or
and
scas
mov
jns
sub
sahf
jne
inc
add
sub
call
stos
and
jne
out
or
jnp
jbe
roll
adc
inc
pop
stc
push
xchg
mov
stos
data16
daa
pop
push
stc
arpl
out
mov
pusha
fwait
cmp
and
dec
xchg
mov
repz
pop
adc
inc
loopne
jo
inc
mov
lahf
dec
pop
leave
mov
lods
mov
push
cmp
mov
inc
mov
push
insb
int
stc
jnp
shrb
fimuls
fnstsw
mov
test
jle
movsl
cmpsl
repz
shlb
lds
dec
mov
jo
xchg
xchg
cld
cltd
dec
lock
call
sti
mull
mov
pop
mov
jp
lret
shrl
mov
lea
in
add
lahf
mov
cltd
xor
fmuls
push
in
push
sub
pop
jg
popl
pop
push
push
inc
sub
jbe
adc
push
pop
mov
lods
mov
repz
and
ljmp
inc
inc
add
sbb
aaa
shll
dec
lcall
fdiv
mov
rorb
shll
jae
subb
fbld
mov
sbb
lods
test
test
push
inc
out
inc
push
jne
xchg
aam
inc
std
imul
adc
push
aaa
in
xor
arpl
stc
arpl
sub
push
mov
push
cmp
lock
mov
inc
inc
insl
shld
xor
dec
jnp
jg
pop
or
imul
inc
not
aas
lret
in
pop
lret
mov
cmp
cmp
and
adc
adc
inc
fwait
idiv
cmp
test
pop
dec
jecxz
inc
push
loop
jno
mov
lahf
dec
dec
xlat
jnp
enter
mov
xchg
inc
mov
mov
dec
push
xor
cmpsl
sbb
fcomip
cmpsl
jge
jo
mov
dec
jne
outsb
or
mov
add
jle
add
sbb
ljmp
int
mov
fidivrl
and
mov
aaa
add
sub
push
test
out
inc
gs
xchg
xchg
in
lahf
rcl
push
and
mov
cs
xchg
xor
mov
mov
call
pop
jb
les
lods
ret
std
pusha
dec
fwait
lods
or
in
xor
push
lea
add
xchg
mov
dec
negb
mov
data16
cmp
pop
ret
mov
push
call
mov
adc
faddp
adcl
lock
cmpsl
sti
inc
xor
sbb
nop
int3
push
mov
rolb
in
adc
xor
adc
icebp
xchg
jle
cmpsb
mov
xchg
or
ret
mov
js
push
test
xchg
sub
inc
add
pop
lea
pusha
xchg
mov
jae
sub
cmp
out
or
addb
sub
mov
repz
mov
int3
cmp
mov
hlt
leave
fidivrs
pop
daa
pop
inc
lcall
inc
icebp
fidivl
cltd
mov
push
cmp
lea
loopne
or
xchg
gs
inc
cs
push
pop
or
and
mov
fdivrl
mov
pop
push
testb
push
loopne
mov
jmp
xchg
adc
mov
test
iret
fwait
out
mov
adc
addr16
pop
push
cmp
lods
out
pop
idivl
adcb
pop
iret
pusha
roll
lahf
cmc
out
adc
mov
add
pop
nop
inc
cmp
mov
lret
push
cmp
shrb
outsb
sbb
mov
jge
xor
out
or
cli
mov
sbb
and
cmp
mov
and
in
cs
sbb
jne
lahf
stos
xchg
push
rclb
cmp
rclb
sbb
push
fisubs
or
jo
xchg
imul
jge
push
mov
adc
jl
adc
rcrl
addr16
mov
mov
add
std
imul
xor
push
xor
decb
sahf
and
mov
mov
clc
ss
outsl
out
and
sub
push
xchg
sub
insl
mov
imul
sbb
in
stos
popa
xor
popa
adc
push
mov
adcb
mov
mov
ds
cmp
clc
ret
repz
mov
add
aaa
jmp
mov
xlat
movsb
mul
pop
dec
jo
mov
jae
andl
das
aad
push
add
or
repnz
or
out
or
out
pop
xchg
mov
xchg
stos
sbb
iret
pop
in
sbb
bound
lods
pop
jae
popf
shll
cmp
xor
call
push
out
out
sbb
inc
leave
subl
or
test
cmpsb
sbb
daa
and
inc
add
inc
or
icebp
in
or
mov
sti
ljmp
mov
punpcklbw
mov
aam
push
adc
jns
push
mov
fbld
jmp
ja
sbb
push
push
notb
cmp
les
pusha
push
clc
ljmp
push
sbb
stos
or
sub
inc
repnz
xor
jo
push
pop
sub
outsl
mov
fcoml
push
mov
sub
or
clc
sbb
mov
loope,pt
test
xor
sahf
or
iret
cltd
mov
clc
subb
xchg
or
push
test
inc
jne
or
icebp
rep
enter
int
xor
or
push
push
sub
mov
add
popa
repnz
xchg
pop
sbb
mov
adc
fsts
sbb
scas
pushf
sar
pop
pop
lods
andb
in
mov
and
or
jmp
add
data16
add
adc
mov
imul
outsl
cmp
subb
aad
jmp
or
test
xor
pop
mov
mov
mov
mov
dec
lahf
pop
jge
or
ljmp
jl
add
cmp
test
push
rolb
mov
jl
adcl
stos
and
dec
outsb
xor
mov
arpl
pop
fistl
mov
cs
sbb
mov
in
push
popa
pop
stc
add
xor
dec
mov
cmc
jecxz
mov
push
cs
jmp
daa
mov
jo
and
mov
lods
sahf
jl
or
cs
lods
ljmp
icebp
cmp
in
push
fadds
sub
adc
mov
add
clc
xchg
push
js
inc
xor
push
fisttpl
jno
xor
and
mov
jge
int
dec
mov
ja
ljmp
sub
mov
cmp
lahf
das
fdivr
pop
out
lcall
cmp
mov
stos
subl
add
mov
out
cmc
stc
das
jne
push
inc
dec
dec
lret
rolb
add
popf
das
jmp
rcrl
mov
mov
sbb
aad
addb
imul
dec
aad
subl
mov
adc
mov
sbb
jp
je
adc
inc
rolb
jecxz
daa
cmp
push
add
mov
jge
aaa
insl
add
mov
adc
jne
push
addr16
loopne
shl
lods
dec
lret
cmp
pop
or
dec
mov
add
or
push
mov
std
test
call
mov
pop
dec
cmp
xor
loop
push
push
enter
out
or
loope
push
inc
jl
dec
cmp
loopne
pop
push
add
lret
imul
scas
test
mov
jb
sbb
xor
adc
gs
cld
pop
ret
xor
std
mov
fwait
iret
or
xchg
scas
sahf
mov
and
out
loop
sbb
icebp
cmpl
jecxz
das
call
mov
iret
pop
enter
outsl
add
or
lea
dec
jp
push
loop
adc
adc
and
lret
mov
jp
and
pop
pop
push
mov
add
ljmp
fiadds
pop
fsubp
cwtl
movsl
fnstcw
fs
or
pop
sbb
lcall
xor
cmpsl
lcall
test
es
int
fwait
out
in
cmpsl
jle
adc
jne
sub
sub
and
jg
push
leave
shlb
pop
out
pop
div
cmpsb
push
ss
or
ljmp
xor
sub
cli
add
jno
xor
xchg
pop
loope
jp
xchg
mov
popa
xchg
cli
xchg
and
push
jge
mov
or
das
sbb
sub
cmpb
pop
out
push
mov
sahf
js
popa
test
push
or
cmpsb
sbb
ds
sbb
cmp
pop
cmpsb
pop
loop
jge
xchg
nop
mov
mov
fnstsw
in
and
or
out
loope
popf
lret
mov
jae
add
leave
leave
sbb
out
xchg
xor
xor
ret
push
repz
mov
cs
adc
popf
inc
lahf
dec
mov
adc
mov
mov
push
jg
add
mov
xchg
cmp
movsl
inc
and
mov
cmp
adc
rcl
dec
fucomi
mov
mov
mov
cli
mov
into
sub
mov
push
xchg
mov
xchg
fs
js
in
mov
sbbl
test
mov
subl
xchg
xchg
or
pop
jne
cmp
push
sub
sti
das
nop
jae
cmp
test
cmovne
lret
cltd
mov
mov
dec
add
xor
pusha
imul
pop
call
or
in
and
rclb
mov
inc
in
insb
or
and
out
dec
out
movsb
inc
sub
pop
pop
pop
popa
cmp
cmpl
sbb
clc
add
rol
pop
shll
imul
lret
test
push
cli
enter
into
enter
mov
add
ret
mov
pop
dec
push
fs
adc
mov
cmpsl
outsb
push
and
or
cmp
outsb
pop
rcll
dec
test
pop
ficoml
lods
pop
push
pusha
push
and
movsl
jb
cmpsl
into
ljmp
mov
lcall
rorb
icebp
sahf
mov
fcoml
ja
pop
adc
sti
and
enter
pop
in
out
dec
int
jmp
clc
cmp
mov
add
xor
fdivl
and
cmpb
and
dec
fmull
aaa
push
cmp
mov
dec
out
pop
and
cmp
in
je
sti
xor
add
add
xor
stos
mov
inc
xor
in
cs
jno
enter
arpl
and
xor
add
push
or
or
das
lock
sub
mov
mov
adc
push
aad
dec
hlt
adc
mov
pop
push
sti
pop
push
or
daa
cmpsb
roll
popa
adc
mov
mov
cmc
xchg
shl
out
loop
inc
xlat
test
sbb
iret
xor
addb
jnp
pop
adcl
mov
insl
sbb
inc
dec
or
pop
dec
movsl
fsubp
mov
cmp
fadd
mov
xlat
cwtl
into
cmp
or
sub
sub
mov
mov
mov
xchg
mov
mov
jo
sub
repz
test
sbb
pushf
adc
pop
pop
cmp
cld
jae
sbb
scas
mov
clc
fs
int3
push
mov
or
mov
imul
lret
mov
jmp
movsb
jb
mov
scas
pop
mov
mov
cld
or
ljmp
shlb
lret
js
jno
stc
adc
addb
cmp
leave
xor
mov
and
inc
or
bswap
push
lods
aam
lods
nop
scas
addr16
or
add
popa
aaa
into
inc
jmp
insl
scas
sbb
notl
fdivs
mov
push
xchg
out
jle
jae
leave
pop
popf
aaa
sub
jmp
push
push
iret
pop
das
jb
ret
stos
icebp
dec
xchg
dec
adc
rcll
cmp
mov
mov
sbb
es
jg
push
adc
out
mov
push
push
add
cld
pop
xor
mov
jg
push
inc
xor
test
add
and
mov
jb
leave
rclb
insl
in
xor
stos
mov
ror
and
cmp
mov
mov
jae
movl
mov
addr16
fldcw
mov
ret
in
inc
push
mov
xchg
movsb
inc
or
je
jae
inc
cmp
hlt
in
jne
mov
rorl
int3
jno
lret
bound
add
push
jl
stos
mov
xchg
jecxz
out
adc
xor
loope
adc
sbb
gs
add
pop
jae
and
lahf
xchg
cmp
mov
fimull
mov
push
and
stos
in
jae
mov
ja
repnz
negl
add
jbe
rclb
jno
pop
cmp
or
lret
cltd
adc
mov
add
sub
lods
pop
jmp
testb
mov
and
bound
sub
dec
insl
stc
jl
and
add
add
add
iret
pop
jecxz
add
enter
jl
mov
cmpsl
inc
inc
mov
repnz
dec
xor
lahf
adc
insb
div
inc
push
sub
xchg
arpl
push
mov
jg
pusha
test
out
jns
lret
outsl
bound
ret
add
je
imul
push
test
mov
jp
cmpsl
icebp
fwait
push
jb
pop
cs
pop
cwtl
int3
in
inc
fisttpll
jb
inc
scas
mov
stos
adc
movd
imul
aaa
pop
daa
or
dec
cmp
pop
jbe
mov
insl
or
je
lea
test
test
xor
inc
cmp
dec
jle
xor
cmpsl
ds
mov
outsb
jmp
and
mov
mov
inc
fsubl
xlat
mov
xchg
lods
pop
jg
mov
daa
mov
mov
mov
or
leave
mov
lods
ja
stos
std
stos
or
inc
sbb
and
mov
xchg
mov
mov
xchg
adc
test
das
pop
inc
arpl
xor
test
or
push
nop
sbbb
pusha
cmp
xor
imul
jns
lods
cmpl
dec
in
ror
mov
push
hlt
shlb
shrb
movsl
jle
aas
pop
and
xchg
lea
mov
loope
mov
insb
jg
pop
outsb
mov
cwtl
jb
stc
stc
mov
xchg
xchg
sarl
lods
xlat
inc
js
jns
insb
inc
add
xchg
push
iret
je
push
mov
inc
lock
imul
jp
ja
sub
mov
add
not
imul
xorb
loopne
add
or
andb
jno
movsl
rcrb
sbb
in
aas
call
dec
dec
xchg
scas
popa
test
addr16
jmp
xchg
mov
or
or
sti
push
inc
mov
lahf
xchg
jle
movsl
lds
sbb
std
xchg
ficoms
out
lea
mov
bound
cmp
jp
pop
inc
lock
or
mov
mov
fcompl
dec
into
cmovno
sti
test
leave
push
int3
loop
lea
mov
shlb
xchg
or
cmpsl
xor
gs
adc
mov
sbbb
inc
or
adc
dec
cmp
push
mov
jbe
xchg
loope
mov
cmc
pop
fildl
mov
int3
mov
cmp
shlb
into
cli
out
test
push
jmp
jbe
dec
inc
fldl
push
outsl
enter
push
daa
add
push
inc
xor
mov
jp
mov
push
das
mov
push
sti
int3
shll
adc
cmc
jmp
stos
sbb
jl
adc
jns
push
and
daa
cltd
aaa
mov
push
cmp
mov
xchg
mov
cli
pop
aas
data16
add
stos
push
xchg
ret
leave
and
adc
fisubs
pop
lock
jns
or
jecxz
pop
push
sahf
push
inc
adc
jb
jp
mov
mov
out
scas
fnsave
loopne
inc
cmp
in
hlt
dec
adc
imul
cwtl
int
fisubrl
and
mov
lcall
loope
mov
push
and
nop
pop
lret
push
andl
call
imul
push
jl
int3
cli
pushf
decb
ret
aam
fs
mov
in
fcomps
or
pop
mov
hlt
inc
add
cld
dec
or
pop
jb
pop
sbb
movsb
movsl
xor
das
cmp
je
and
xor
cld
data16
loopne
clc
hlt
and
or
xchg
imul
adc
and
xlat
jbe
je
pminub
dec
or
adc
and
aam
test
mull
push
test
xchg
loopne
add
test
shr
and
in
mov
shll
xchg
adc
lock
pop
testb
fsubrs
mov
inc
push
test
pusha
add
pop
inc
mov
repnz
push
xor
or
push
mov
push
push
adc
orl
mov
rorb
test
push
jmp
lea
hlt
movnti
enter
jp
pop
xchg
in
dec
shrl
les
sbb
cli
sub
fwait
aas
or
xchg
sbb
out
shlb
cs
mov
pop
adc
inc
mull
lret
adc
mov
mov
cmp
and
mov
hlt
mov
mov
inc
inc
add
or
sbb
xchg
sbb
inc
xor
roll
cmp
jl
int
js
xor
into
push
mov
inc
test
inc
lcall
inc
lret
inc
xor
mov
sbb
std
add
jb
out
or
out
popf
stos
mov
ret
sub
sbb
dec
sbb
scas
jno
mov
sub
xchg
add
xchg
rcl
sbb
sub
sub
push
dec
arpl
inc
mov
xor
loope
popa
inc
push
imull
aam
cld
pop
shrl
xchg
jbe
scas
jp
sbb
dec
stos
idivl
in
and
lret
insb
pop
cli
daa
loope
scas
pop
mov
xchg
and
out
dec
pop
xchg
imul
add
cltd
and
mov
pop
jns
jb
daa
mov
mov
mov
insb
mov
cmp
push
and
outsl
mov
ja
and
jp
cmpsl
xor
js
das
xchg
mov
mov
loope
adc
mov
inc
inc
mov
rcr
stos
mov
fiaddl
into
in
inc
cltd
xchg
insl
mov
addb
pop
and
mov
or
mov
das
mov
inc
mov
adc
fisubrs
outsb
fsubs
sub
and
sti
mov
sub
xchg
cli
subb
mov
inc
insb
mov
pop
jns
sbb
frstor
sbb
mov
xor
pop
mov
or
cmc
loopne
in
xor
sahf
dec
adc
pop
je
cmp
ss
mov
icebp
sbb
dec
add
mov
and
cmp
fldl
jp
mov
jge
sbb
lar
in
dec
movsl
sbb
int3
outsb
adc
subb
mov
xchg
inc
mov
fisubrl
pop
jbe
xchg
imul
jno
lret
sbb
or
mov
push
insl
pushf
aaa
dec
and
dec
stos
mov
insb
lds
mov
pop
sbb
aas
push
pop
mov
roll
mov
jl
xchg
fnstcw
and
xchg
mov
push
lret
or
jg
xchg
repnz
xor
xchg
in
inc
xor
mov
aaa
dec
and
sbb
call
insl
jg
int3
ds
pop
popf
sub
sbb
pop
sarb
leave
jne
addr16
ret
in
call
pop
aas
fcompl
sbb
mov
pop
out
push
stos
pop
jmp
jecxz
loope
repz
push
insl
pop
int3
fmull
or
inc
lahf
stos
lret
ja
ss
inc
cmp
in
xchg
stc
mov
cmpsl
jno
shll
add
sbb
sub
add
mov
mov
test
xchg
mov
add
test
div
ret
cmpsb
cld
mov
mov
test
int3
inc
insl
mov
dec
and
std
inc
pop
gs
and
gs
dec
add
in
xchg
xchg
pushf
cli
out
scas
push
fwait
xchg
adc
insl
jge
sub
push
out
and
xchg
hlt
cmpsl
sub
loopne
mov
inc
mov
sbb
scas
adc
dec
loop
mov
cs
dec
cs
lock
fs
es
add
test
xlat
aam
pop
jp
cmp
inc
mov
cmpsl
incb
push
imul
jmp
lods
cmp
and
stc
cli
mov
mov
sbb
mov
fidivs
push
lds
adc
mov
arpl
pop
inc
cmp
iret
jp
sbb
mov
push
mov
movsl
xor
sbb
mov
push
pop
scas
test
pop
xor
cmp
sti
bswap
fwait
outsl
out
fnstenv
in
in
cld
sarb
sub
pop
loopne
pop
imul
xor
rcrl
out
dec
loopne
adc
test
pusha
bound
pop
in
jnp
add
pop
pop
fnstcw
cmp
adc
push
pop
adc
mov
add
call
inc
push
imulb
int
aas
mov
xchg
into
pop
int
xor
sub
xor
push
leave
loopne
je
xchg
movsb
jbe
cmp
jb
cld
jae
test
ret
xor
sbb
add
repnz
jl
cmp
xchg
mov
imul
add
inc
dec
jno
cld
adc
andb
jge
dec
pusha
std
es
inc
jb
mov
push
cs
ljmp
pop
sbb
mov
lods
rcll
out
inc
sbb
outsb
xor
inc
inc
inc
xor
into
cltd
adc
sbb
dec
mov
lds
cli
xchg
dec
add
rcrb
ret
iret
popf
cli
fs
test
sbb
sub
push
leave
cmp
gs
aad
inc
faddl
imul
dec
or
into
mov
xchg
nop
xor
xchg
outsl
mov
mov
je
out
push
lea
or
lock
or
add
push
adc
or
test
jecxz
sbb
pop
and
pop
xchg
push
push
dec
sub
fwait
das
xchg
mov
ret
sbb
insb
mov
xchg
xorb
lcall
cli
sub
jno
or
and
push
fwait
xor
cld
in
or
xorl
push
pusha
jge
idivl
jp
pop
add
xchg
leave
nop
sbb
cmp
cmp
les
icebp
cwtl
movsb
xor
int3
cltd
add
movsl
mov
mov
ja
inc
push
or
repnz
sbb
cwtl
or
mov
cmc
add
push
jno
leave
push
mov
dec
dec
test
add
and
mov
int
sub
out
dec
mov
pusha
mov
push
notb
jo
mov
dec
jl
lock
dec
adc
push
cmc
mov
popf
dec
scas
jmp
xchg
push
adc
xor
ret
push
addl
out
repnz
ss
gs
and
add
inc
cmpsb
adcl
push
sbb
rcrl
sbb
clc
mov
and
xchg
pop
and
mov
fcoms
out
aam
dec
sbb
jmp
lea
sbb
repz
negb
mov
shlb
mov
lea
cmp
and
mov
push
mov
sub
mov
out
test
cli
outsb
aad
test
inc
ret
inc
lret
or
nop
out
pop
mov
das
push
scas
je
ret
shll
pop
lahf
mov
test
bnd
mov
dec
das
lock
fld1
xor
test
push
addb
xlat
shll
fildll
sub
outsl
out
dec
pop
push
decl
iret
lret
push
movsl
inc
pop
sub
ret
or
inc
loop
lods
out
and
ja
out
push
and
pop
sbb
push
jecxz,pn
sbb
mov
lahf
add
rorl
jecxz
psrlw
fwait
xchg
dec
clc
xchg
inc
push
cmp
push
negb
icebp
imul
lret
ret
sbb
dec
fcomps
out
loope
pop
aam
cmpsb
push
lea
enter
leave
xchg
leave
cmpsb
and
mov
cmp
or
jb
pushf
and
cwtl
push
ret
fwait
mov
pop
and
dec
int3
inc
fs
mov
sub
mov
popa
mov
fnstenv
inc
xchg
jbe
inc
cmp
mov
cmpsb
xor
seta
cmpsb
or
jno
jb
testb
mov
sbb
bound
fnop
and
push
rorb
sbb
add
shll
imul
xor
inc
dec
push
call
scas
in
mov
pop
push
es
mov
mov
xchg
jmp
dec
clc
out
push
cmp
cld
lods
cmc
xor
shr
fcmovu
jne
lcall
and
push
rolb
cld
movsl
dec
xchg
mov
mulb
mov
pop
cli
les
mov
adc
push
clc
shrb
inc
mov
lret
roll
sbb
test
xor
in
mov
loopne
call
jnp
push
pop
fwait
dec
mov
or
out
outsl
cmp
aas
push
sub
mov
mov
push
xlat
int3
nop
sub
cmp
xor
mov
pop
mov
clc
sub
sbb
sbb
mov
inc
pop
dec
fimull
jne
sbb
imul
lods
insl
iret
addb
aam
out
mov
pop
mov
icebp
insl
sahf
jae
cmp
inc
adc
add
out
pop
es
add
cmp
popa
push
push
mov
lods
push
mov
adc
sub
ljmp
mov
sarb
cmp
jecxz
addr16
and
or
sub
movsl
or
push
add
arpl
call
outsl
mov
dec
lods
ljmp
dec
xor
xor
int3
jnp
cld
and
push
push
pop
push
fldcw
call
jmp
sbb
or
pushl
lods
and
mov
sbbl
sub
roll
dec
sub
prefetcht0
insl
mov
mov
ret
push
pushw
sbb
lahf
cmp
pop
push
xor
pop
mov
dec
mov
xchg
jmp
pop
jno
inc
arpl
jle
scas
stos
ss
jmp
push
mov
and
add
daa
out
jne
or
sbb
mov
enter
in
outsb
movsl
inc
shl
divl
sub
push
andb
push
ret
adc
pop
sub
mull
fldenv
hlt
jp
or
mov
fists
cmp
bndstx
fwait
mov
gs
mov
sbb
inc
out
sub
and
add
ret
dec
icebp
jp
call
sbbl
add
push
adc
out
bound
jp
lock
aas
add
dec
lret
shll
pushf
xchg
or
dec
and
cmp
repz
cltd
aad
lahf
sbb
cmp
adc
cvttps2pi
mov
stc
or
adc
push
dec
and
mov
pusha
jmp
std
cli
mov
add
pop
shrb
mov
neg
aam
popa
je
pusha
out
jb
mov
cmc
pop
push
jle
lret
int
ret
sbb
inc
call
jl
repz
fisubrs
dec
xchg
mov
push
sub
xchg
or
xchg
sub
mov
cmp
fdivr
push
pushf
bswap
dec
adc
pop
jae
sahf
inc
mov
xor
sub
jmp
cltd
jae
clc
mov
mul
int3
jns
xchg
pop
dec
or
fs
jo
dec
adc
jbe
cmp
push
leave
clc
xchg
bound
or
lods
pop
mov
je
mov
sbb
insl
inc
mov
pop
leave
rolb
jns
adc
std
notl
scas
mov
stos
jle
into
dec
insl
jl
jno
or
push
sub
xchg
dec
push
jg
xchg
or
aas
repz
in
roll
sbb
mov
pop
imul
mov
jge
addb
nop
pop
xchg
cld
sub
jmp
out
mov
loope
lcall
fwait
adc
jp
cmpsl
stc
sahf
xchg
loop
dec
scas
or
mov
loope
cs
mov
in
pop
adc
lock
aas
jmp
cmp
xchg
pop
movsl
out
push
imul
sti
adc
sbb
in
jbe
das
dec
sub
xchg
fsubl
mov
movsb
add
mov
sub
lea
pop
popa
fs
inc
and
ror
jle
cmp
cltd
aaa
xor
push
fcompl
sbb
mov
in
push
dec
dec
xor
repnz
ja
nop
fs
int3
jge
les
mov
scas
mov
adc
xor
adc
imul
jno
aad
es
js
das
clc
dec
in
sub
outsb
cmc
popa
jmp
arpl
fistl
sub
int3
sub
or
jle
pop
cmpsb
ljmp
repnz
inc
jp
popf
into
adc
int
or
rcrl
xlat
repz
rorb
stos
lret
sbb
insl
rcrl
mov
mov
or
std
pop
adc
add
dec
fwait
add
in
adc
jle
lea
cld
and
cmpl
push
sbb
inc
sar
sahf
jb
add
push
xchg
mov
int
xor
sar
rol
jnp
push
sti
sbb
xchg
out
addl
push
dec
sti
push
js
fsts
daa
jecxz
dec
inc
loopne
or
cs
pop
enter
hlt
ficoms
push
subl
pop
adc
pop
lret
out
lret
lods
ret
mov
sub
xchg
outsl
cmc
jae
adc
div
hlt
rorb
jb
out
outsl
sub
scas
mov
mov
pushf
ret
into
ret
push
sbb
adc
stos
mov
mov
loope
sbb
clc
sbb
lea
cmpsb
cwtl
adc
add
in
cmp
xor
adc
insl
iret
sbbl
mov
fisttps
cmp
int
out
cmp
in
leave
aam
lahf
mov
das
out
mov
mov
jp
sub
shrl
dec
xchg
inc
repnz
cmp
push
push
in
cwtl
fists
mov
ret
fstps
mov
loope
std
lret
mov
mov
testb
cmp
loop
xchg
iret
out
outsl
xlat
cmpsb
push
vmovq
lock
and
push
cmp
sbb
cs
pop
andl
pop
pop
test
pushf
outsb
or
mov
lods
fbld
out
jg
shlb
movsb
fisubs
and
mov
out
inc
mov
cmpsb
push
mov
vpinsrw
and
ljmp
out
push
int3
mov
cli
cmc
sbb
jbe
test
lods
push
mov
mov
dec
sahf
outsl
mov
mov
loop
push
nop
es
dec
jnp
cmp
ljmp
sti
pop
or
cmpsl
dec
out
movsl
stos
dec
jb
sahf
xchg
pushf
pop
xorb
test
xchg
inc
push
cmp
pop
ljmp
adc
adc
add
outsb
push
out
sbb
mov
int3
xchg
sub
cmp
sub
fimull
test
fsubrl
rorb
cs
add
mov
ret
and
mov
lcall
adc
xor
sub
fsubrs
sahf
mov
xchg
push
xor
sbb
cmp
mov
jl
sbb
mov
test
outsb
fdivp
scas
sbb
negl
test
and
inc
push
mov
dec
pop
push
mov
pop
bound
push
fidivl
xchg
ret
pop
in
mov
insb
mov
adc
push
inc
repnz
push
mov
es
mov
push
out
iret
mov
loop
bound
ljmp
mov
mov
dec
aas
adc
lea
jp
insl
jnp
lock
stos
dec
push
or
mov
jge
popa
fnstenv
and
mov
cmc
aas
mov
mov
aad
fcmove
push
cld
nop
sahf
jmp
outsl
pop
cwtl
test
dec
popf
aas
jmp
movsl
xor
or
mov
loopne
xchg
ljmp
jo
add
aad
xorb
mov
lret
inc
sbb
cmp
lods
mov
pop
jo
clc
outsb
cmp
sub
jae
cmp
aam
test
or
xor
xchg
mov
mov
sahf
das
pushf
push
and
lock
and
out
xor
adc
jp
add
test
vminpd
or
sub
daa
cmpsl
cmp
lea
fwait
ret
add
fldl
push
jl
imul
sbbb
idivl
mov
dec
sbb
inc
pushf
hlt
sbb
imul
das
mov
add
mov
or
inc
or
fwait
lods
xchg
cltd
dec
andl
clc
mov
mov
cmpb
cmpsl
int3
into
mov
pop
lahf
js
fidivrs
jp,pn
jnp
sub
xor
scas
dec
mov
and
pop
push
mov
fmuls
lcall
adc
cmc
cmp
sbb
in
movsb
in
lds
jae
mov
gs
incl
and
in
repz
inc
and
stos
add
fildl
and
pop
pop
jnp
loope
adc
sbb
add
call
mov
jecxz
jae
adc
cmpsb
mov
scas
xor
test
pop
or
mov
lret
add
mov
cmp
hlt
aaa
in
int3
loope
cmpsb
mov
pop
aam
out
and
movsb
jle
sub
push
cwtl
dec
ret
fcoml
cwtl
jge
loopne
sti
sub
mov
in
fwait
push
jmp
negb
dec
cmp
adc
adc
cli
xor
repnz
shlb
jb
aas
cmp
xor
testb
shrb
push
adc
adc
fwait
pop
xor
divl
loope
pop
push
xchg
lret
pop
rorb
cwtl
push
ss
das
and
mov
in
jmp
shr
ror
add
out
jnp
inc
inc
sub
mov
jl
call
jne
sbb
lahf
xchg
nop
mov
xchg
jmp
cmpsb
dec
jne
sbb
sub
or
enter
mov
xchg
and
pop
rclb
jmp
mov
roll
repnz
jne
mov
inc
and
popa
mov
fcomps
sub
push
adc
xchg
or
mov
cli
cli
in
jne
fstl
fsubp
scas
addr16
push
popa
nop
add
sub
push
lock
scas
push
cs
fisttpl
divl
jmp
fimull
mov
jns
push
pushf
mov
in
pop
sbb
ja
lea
rcll
arpl
jecxz
addr16
hlt
mov
adc
lret
outsb
scas
and
cmp
flds
enter
lret
stos
out
leave
test
pop
addr16
fcmovnb
and
mov
loopne
fistps
pop
cmc
sbb
icebp
leave
das
sti
cmpb
imull
sahf
pop
mov
mov
mov
cmp
xor
mov
inc
xlat
data16
and
push
movsb
aaa
icebp
pop
repz
aas
adcl
inc
push
fmul
mov
inc
cmpsb
mov
or
and
pusha
cmp
sti
loope
add
mov
mov
xlat
stos
sti
cli
aas
popf
adc
add
push
mov
jge
pop
mov
cmp
and
out
inc
fldl
xchg
mov
and
rol
nop
pop
xlat
push
out
aas
jno
or
cmp
test
loopne
add
jne
xor
or
fcomi
dec
pop
mov
lock
stos
decb
push
mov
jg
fstps
inc
jo
add
ljmp
aad
lret
outsb
mov
mov
mov
repz
int3
add
movsb
push
lahf
pusha
pop
in
cmp
mov
mov
dec
push
mov
cmp
stc
cs
dec
mov
std
mov
push
pop
mov
jge
sbb
call
jbe
jmp
stc
movsb
aas
adc
repnz
jae
in
aad
sbb
shlb
xor
pop
pop
dec
mov
sbb
lret
dec
icebp
mov
jnp
push
jb
adcb
xchg
cmp
push
adc
js
cmp
daa
mov
loope
nop
imul
dec
push
mov
out
fstps
pop
mov
and
mov
arpl
add
sbb
mov
insb
jmp
shlb
cmp
jg
jmp
adc
sbb
fsubp
inc
insl
js
fldenv
ljmp
pop
or
insb
into
jmp
out
out
rolb
out
js
imul
xor
mov
mov
stos
or
push
mov
inc
jmp
imul
mov
and
sbb
or
jg
sbb
jg
mov
repnz
adc
mov
mov
lock
lretw
stc
mov
std
divl
jbe
jne
or
jmp
or
fwait
out
rorb
dec
or
inc
int3
cld
pop
adc
mov
stos
jno
cwtl
sbbl
aad
in
lods
jne
cmp
push
mov
mov
xchg
add
ret
or
lret
cltd
icebp
or
cltd
adc
cmp
bound
divl
pushf
xchg
dec
sbb
mov
xchg
sahf
out
adc
adc
loope
orb
push
popa
lcall
popf
std
xor
cli
push
pop
sbb
loop
btr
les
aas
jecxz
add
xadd
inc
int
fiaddl
push
loop
xchg
xchg
push
subb
mov
or
orl
add
jecxz
pop
cli
push
imul
popa
and
pop
gs
test
add
add
es
cld
sbb
sbb
std
adc
add
nop
sbb
pop
clc
mov
icebp
cmpsl
xlat
dec
mov
mov
xor
es
xchg
pop
add
jno
cltd
pop
nop
fdivs
cmp
push
mov
xchg
repz
es
in
cmpsb
push
add
fmuls
xlat
jb
push
lds
mov
sub
addb
clc
dec
mov
stos
xor
arpl
dec
outsb
dec
ret
and
clc
sbb
jne
mov
cltd
push
call
jo
dec
pop
jl
es
fisubrl
mov
dec
fmul
hlt
arpl
xchg
addr16
popa
outsb
lcall
add
cmp
sbb
adcb
out
cld
pop
xchg
add
add
loopne
dec
pop
pop
enter
ret
shr
adc
xor
mov
jb
xchg
in
aas
jbe
clc
mov
movb
imul
mov
insl
aam
inc
xchg
lret
cli
fsubrl
cmp
jecxz
cwtl
xor
fisubl
push
mov
push
cmpsl
insl
jp
shlb
scas
aam
fwait
je
pushl
fcomip
mov
adc
hlt
pop
imul
mov
jbe
pop
jle
movsl
aad
xor
insl
sar
and
jbe
xor
lret
push
loop
xor
sub
popf
mov
loopne
sbb
shrb
arpl
push
mov
popa
rcrb
clc
jg
rclb
mov
es
dec
in
movsb
sub
xor
push
ja
mov
and
add
add
sbb
ret
push
shrl
mov
pop
test
cs
push
pop
test
gs
or
lods
arpl
lock
dec
adc
mov
jp
outsl
push
out
shrl
xlat
enter
or
data16
out
jecxz
inc
outsl
add
lock
in
jnp
shrb
mov
inc
mov
add
xchg
dec
cmc
sub
lahf
lds
repnz
ljmp
jp
imul
xchg
pop
dec
int
insb
out
sbb
outsl
xlat
lret
xor
mov
mov
xchg
rcrl
mov
inc
popl
or
in
addr16
push
or
pop
inc
pop
xlat
jbe
pop
inc
push
lcall
dec
sub
push
aam
pushf
gs
notb
std
and
shl
pop
add
imul
dec
rcr
sahf
pop
scas
out
inc
bound
mov
sub
or
xlat
sbbb
push
loop
icebp
push
inc
add
adc
divb
sbb
pop
mov
inc
push
push
stos
loopne
cmp
ljmp
push
divl
mov
daa
push
or
add
mov
pop
stos
adc
sub
and
cli
add
fwait
pop
cmp
push
xchg
mov
push
jnp
xchg
and
jge
into
fildll
add
cltd
pusha
outsl
leave
iret
fists
std
sub
push
fwait
scas
cmpsb
mov
push
xchg
pop
aad
test
cwtl
aas
stos
idiv
js
shrl
add
es
test
nopl
adc
pop
sbb
test
rorl
add
sbb
and
xchg
xchg
pop
rorb
lret
cli
mull
and
mov
lahf
jmp
addr16
mov
sbb
push
cmc
dec
xchg
stos
push
push
lds
ficomps
loop
inc
sbb
fcomps
lods
push
mov
lahf
pop
push
pop
jg
fcoms
inc
xchg
ljmp
out
sbb
jle
pushf
fnstenv
mov
push
mov
int3
inc
push
sub
xor
sti
pop
mov
inc
inc
sarb
sub
sub
and
or
test
lret
push
jb
sbb
cmc
out
pop
jnp
or
push
out
cmp
adc
mov
sub
loope
fiadds
popf
mov
aaa
push
fistps
das
bound
lret
push
jne
gs
ret
mov
test
lods
pop
sahf
es
inc
mov
inc
sub
jnp
mov
push
or
pusha
pop
sbb
mov
lock
adcl
adc
xchg
add
jmp
lea
rcrb
stos
fldcw
sbb
mov
mov
cmp
aaa
inc
lret
push
test
xchg
frstor
loopne
addr16
xchg
cmp
adc
lods
jne
and
shl
adc
and
rol
out
xchg
cmp
adc
or
mov
mov
loop
mov
cli
adc
sub
ret
mov
inc
decb
sbb
mov
mov
sbb
xlat
cmp
jne
push
cmp
outsl
push
xchg
addr16
aaa
lock
inc
and
or
xlat
xchg
pop
lock
jp
stos
stos
jle
int3
push
push
test
fnstenv
icebp
jnp
outsb
fstps
jns
jmp
add
mov
stos
add
cmpsl
in
sub
sub
xchg
sbb
push
subl
adc
inc
test
jmp
sbb
icebp
into
push
les
int
fidivl
int3
xor
fsubr
pop
jge
fs
mov
pop
push
ds
inc
add
loopne
cmp
pop
adc
fwait
popa
mov
cmc
mov
fstpl
sti
lds
push
lea
sahf
fldenv
mov
in
sbb
sub
mov
rolb
pushf
int
or
dec
roll
aaa
mov
mov
jge
stos
mov
imul
sbb
jmp
movb
stos
popa
fcmovnu
and
das
shr
adc
je,pt
sbb
sbb
lahf
shrb
pop
sarl
pop
add
jle
imul
push
xchg
shl
push
pop
cwtl
fsubrp
mov
sub
int
imul
or
cltd
movsb
push
dec
enter
dec
cli
xchg
es
adc
pop
pushf
in
jle
mov
sub
rclb
jle
inc
xor
aam
pop
and
out
fldl
add
out
stc
lock
jno
sub
lea
sbb
inc
call
cltd
cli
cmpsl
push
xor
pop
xor
jmp
inc
push
xor
outsl
inc
push
nop
cmp
lock
sbb
jnp
cmpsl
mov
xor
icebp
add
lret
add
ljmp
push
bound
fidivs
push
insb
push
les
frstor
ret
je
push
ja
push
outsl
popa
jl
mov
jp
jno
inc
fisubrs
lahf
es
xor
xor
inc
jns
push
in
pop
adc
or
mov
ljmp
add
fildll
xor
in
movsb
je
dec
cld
xor
xor
mul
mov
daa
cmp
mov
pop
aam
lock
dec
dec
ret
inc
je
jmp
bound
outsb
push
pop
mov
lea
push
fisttpll
sbb
dec
mov
pop
pop
jo
pushf
cmp
mov
in
pop
mov
and
sub
or
je
imul
sbb
imul
or
inc
test
fnstenv
inc
jp
jae
pop
scas
mov
nop
fnstcw
mov
mov
pop
mov
adc
les
hlt
lods
ljmp
cmp
ror
mov
int3
cmp
cli
jno
ret
mov
lods
test
cs
cmp
jo
loop
adc
sub
aad
rcrb
hlt
push
inc
cmp
dec
ret
push
pop
int
xchg
push
mov
sbb
mov
or
xchg
fcompl
sarl
into
loope,pt
jge
pusha
jl
lret
jae
cmp
out
adc
loopne
add
daa
mov
xchg
out
mov
je
sbb
pusha
mov
out
dec
inc
pop
push
cmpsb
ficoms
push
scas
push
out
rolb
or
mov
sahf
adc
jbe
jnp
sbb
pop
cmp
inc
cmp
lods
jns
outsl
jb
ss
jecxz
jmp
out
dec
std
outsb
xor
pop
imul
or
faddl
xor
insb
xlat
mov
frstor
insl
fnsave
stos
adc
fxch
jecxz
in
dec
bound
and
xor
sub
imull
mov
les
ficompl
pop
pop
and
adc
and
lret
xor
aad
adc
ret
pop
fdivrp
add
daa
or
xchg
mov
push
sahf
scas
scas
jno
mov
xchg
mov
inc
xor
mov
mov
inc
gs
jns
icebp
outsl
push
add
xor
sub
cmp
xlat
xchg
sub
test
cltd
dec
sbb
and
dec
and
dec
mov
and
push
and
cs
jle
pop
mov
mov
xchg
test
and
xor
fcom
rcl
scas
cli
out
mov
jno
in
xchg
ljmp
imul
cld
cltd
sub
nop
addb
enter
pop
xor
push
push
mov
mov
loopne
stos
arpl
cmc
sub
jae
push
xor
xchg
xchg
mov
ljmp
adc
fdivrs
xchg
sbb
cli
and
mov
je
stos
mov
int
testl
jecxz
cmpsl
jnp
mov
into
imul
cmp
lcall
mov
sbb
test
sub
dec
aaa
call
fsubrs
fdivrp
xchg
das
or
and
fwait
inc
add
cltd
cltd
and
mov
and
sbb
mov
and
add
ljmp
sub
rcll
jmp
sbbb
dec
xchg
jecxz
ja
push
add
xor
cmc
sub
shrl
mul
inc
pop
sbb
xchg
and
enter
xchg
fstpt
cmp
ljmp
inc
mov
inc
out
int3
aam
sub
cld
add
scas
repz
xchg
xor
inc
jmp
insb
push
jle
stos
pop
aas
rolb
pop
add
jo
adc
xchg
adc
les
mov
ret
outsb
pop
ss
int
cmpl
lds
aad
lahf
push
setne
mov
fisubs
aas
cmp
sbb
pop
push
cwtl
nop
jnp
pop
test
inc
push
sbb
jg
pusha
jmp
dec
adc
pop
fstpt
pop
cli
sti
mov
inc
push
xor
cmp
loopne
dec
adc
popf
and
push
mov
inc
cmpsb
sbb
mov
add
xchg
xchg
jl
lods
leave
push
pop
sbbl
lcall
daa
jno
pop
and
cmpl
inc
add
int3
sbb
pop
dec
or
mov
adc
adc
jno
ds
mov
es
aad
arpl
xchg
subb
mov
rcll
jne
adc
sub
xor
jle
rorl
gs
outsb
test
pusha
insl
sub
orb
fucomi
mov
test
mov
in
repnz
dec
dec
cmp
or
or
mov
rcl
clc
ds
and
xchg
adc
xchg
insb
lcall
incl
adc
fistl
mov
jg
mov
sub
cli
mov
mov
sbb
sbb
lock
jae
outsb
lahf
outsb
mov
add
sbb
xor
sub
out
test
mov
ret
jg
imul
jmp
and
jl
mov
fld
xchg
mov
adc
pop
pop
test
arpl
xor
sub
adc
add
pop
jne
icebp
pop
xchg
dec
push
dec
jle
inc
inc
xlat
cmp
in
and
notl
push
adc
add
gs
lock
sbb
and
sub
jl
loope
push
test
inc
cld
dec
cmp
leave
aas
rorb
iret
mov
add
xor
insl
stc
pushf
fiadds
or
push
lcall
xchg
mov
mov
mov
cmp
and
inc
and
xlat
loope
flds
xor
mov
mov
test
xor
ret
pop
sbb
xchg
jmp
popl
repz
jne
fistpll
in
rcrl
mov
mov
inc
imul
push
sbb
push
fstps
rorl
sbb
dec
ror
jne
add
xor
imul
jecxz
call
adc
clc
loopne
mov
lcall
sbb
mov
xchg
dec
inc
rcr
jle
int
xlat
dec
push
out
dec
jle
mov
or
daa
clc
es
es
push
sub
or
aam
jl
scas
cld
xchg
push
sbb
mov
jbe
push
jnp
inc
adc
fcompl
iret
pusha
fiaddl
je
lea
test
sub
cmp
mov
jb
push
ss
cmp
mov
outsl
lods
jl
gs
xor
adc
or
ds
mov
mov
int3
outsl
or
fwait
rcr
mov
and
xchg
xchg
repnz
inc
stos
or
in
test
mov
xor
sbb
inc
icebp
pop
jbe
xchg
cmpl
and
adc
lahf
hlt
inc
xor
or
or
outsb
inc
test
jl,pn
pop
inc
les
inc
push
imulb
add
es
mov
pop
sub
pop
je
xchg
mov
les
push
pop
test
lcall
push
jp
sbb
and
push
cmp
mov
lock
arpl
jb
push
in
pop
cmp
mov
fldl
scas
fstps
jbe
and
jmp
mov
adc
lods
xor
test
fwait
loopne
pop
inc
xor
lock
scas
lret
jmp
or
mov
inc
xor
outsb
mov
mov
jbe
push
fwait
push
rcll
inc
mov
shll
add
je
xchg
outsb
fdivl
in
xchg
dec
mov
mov
ficompl
sub
cmpsl
xor
inc
fbld
push
lds
icebp
sti
pop
js,pt
gs
test
and
test
dec
repz
les
movl
inc
xchg
jnp
dec
or
ss
mov
and
dec
lret
jge
daa
add
mov
mov
xchg
mov
inc
mov
dec
ret
push
mov
addb
jmp
out
icebp
fisttps
adc
cmp
sub
adc
mov
pop
add
out
and
js
mov
leave
push
jg
cmp
call
shrl
pop
mov
pop
push
inc
mov
xor
mov
mov
jno
inc
and
sbb
sub
outsl
mov
cmp
jmp
subb
pushf
cmp
jle
xor
push
and
dec
and
jne
inc
outsl
mov
adc
sbb
icebp
mov
or
mov
pop
jecxz
xchg
pop
pop
outsl
push
sbb
pop
sbb
jmp
ss
and
fistps
mov
loope
jmp
push
mov
inc
hlt
fs
pop
sub
push
lds
lret
lahf
mov
sbbb
push
scas
push
std
mov
fbld
dec
jo
dec
fmull
sub
mov
loopne
fstps
stc
push
repnz
mov
cmp
xor
jmp
insb
mov
lds
test
sub
xor
xchg
ja
mov
aas
js
or
ss
jb
insb
mov
xor
pop
shll
in
sub
jb
add
dec
jbe
sbbb
lret
gs
mov
int3
pop
dec
push
pop
inc
xchg
fs
pop
cmp
mov
iret
or
mov
in
ds
push
in
popa
add
or
xlat
icebp
mov
cmpsb
sub
push
movsb
in
dec
pop
and
lret
mov
push
cs
sarb
cmp
dec
mov
jne
mov
cld
xchg
movsl
mov
out
repnz
add
scas
xor
mov
addb
push
adc
in
call
cmpsl
cmp
rolb
aaa
and
jne
mov
add
jbe
adc
cmp
fdivs
cmp
stos
sub
aad
stos
mov
xchg
pop
aas
in
fs
sarb
fwait
adc
push
jnp
test
dec
incl
xchg
mov
cwtl
clc
clc
dec
repz
data16
add
xchg
cmpsl
lods
pop
dec
pop
repz
ja
mov
lock
push
fildl
dec
aaa
mov
pop
adc
loope
sarl
incb
adcl
mov
movb
jecxz
xchg
add
movsb
pop
imul
inc
fbld
ret
pop
js
insb
in
sbb
pop
in
fcompl
push
call
xor
cs
adc
sub
int
std
or
loope
mov
pop
dec
push
push
and
jb
add
into
sub
mov
mov
pop
fstpt
popf
iret
mov
addr16
jecxz
inc
es
xor
sub
pop
insl
ret
out
pop
xlat
loope
aam
jne
jae
cmp
iret
mov
adcl
add
outsl
movb
out
roll
nop
int3
or
mov
leave
shlb
cmp
shlb
push
xchg
fisubrl
push
lods
loopne
rorl
fwait
bound
lea
aas
std
mov
bound
adc
sub
xlat
imul
std
pop
mov
dec
dec
push
dec
sub
sub
aam
push
dec
jmp
int
out
fnstsw
inc
lods
stc
add
rcl
jge
pop
cmp
jo
jmp
mov
mov
and
dec
cwtl
pop
std
in
push
push
out
and
xor
outsb
add
fwait
out
mov
mov
xchg
and
push
je
fsubs
sar
dec
sbb
dec
stos
xor
or
xor
sarl
fmull
inc
xor
mov
addps
jnp
dec
lds
add
lods
mov
and
and
faddl
mov
aad
fcompl
and
add
mov
fwait
xor
pop
mov
leave
sbb
loop
addl
movsl
jb
jns
jle
add
gs
mov
mov
sub
mov
sahf
outsl
fsubr
vshufpd
clc
xchg
mov
mov
pop
sahf
daa
inc
int3
rcl
push
xchg
vpunpckldq
lcall
mov
rcrl
or
in
adc
lcall
push
dec
mov
es
cmpb
xchg
pushf
lahf
outsl
out
jnp
jle
cmp
lcall
popa
rcrb
mov
and
and
and
es
jo
ret
inc
cli
mov
mov
xor
and
test
push
jecxz
ljmp
push
ret
lret
inc
sti
sbb
dec
fildll
notb
xor
mov
mov
ljmp
mov
cmp
shrb
jns
insb
fsubrl
out
sub
test
lea
pop
pop
pop
pop
pop
hlt
lcall
shll
loope
mov
mov
aaa
jp
lret
sub
cmp
mov
cmc
jle
mov
icebp
test
int
call
mov
mov
clc
pop
imul
push
sbb
insb
fwait
sbb
mov
pushl
and
sub
push
or
mov
jnp
add
stos
mov
inc
push
movsl
jecxz
mov
aad
nop
cmp
jns
add
dec
add
aaa
sub
out
dec
gs
ret
sahf
cs
test
jge
jns
xchg
rcrl
push
lcall
daa
movsb
and
in
inc
lea
xor
jg
ds
sbb
cmp
scas
imul
arpl
jo
adc
push
or
adc
pop
mov
cmp
orb
lahf
shlb
mov
ss
fucom
clc
pop
sbb
push
mov
testb
adc
sahf
sub
push
loope
movsl
in
lods
inc
jge
cmp
mov
jmp
xor
jle
xor
notl
ror
mov
or
fists
mov
pop
or
dec
mov
cmp
xchg
push
or
sub
out
ja
cmp
mov
leave
shrl
loope
in
add
sbb
adc
cmp
sub
xor
test
inc
scas
je
sahf
out
icebp
test
add
lcall
adc
add
ss
jmp
div
jmp
lea
mov
and
leave
ljmp
adc
cmp
push
and
rcrl
shl
pop
and
lret
push
fs
jb
sub
pop
xchg
pusha
repnz
mov
xchg
testb
popa
xor
je
add
xor
xchg
loopne
add
pop
pushf
mov
divl
outsb
cmpsb
andl
std
popa
jle
call
mov
cmpsl
ljmp
les
rcrl
sbb
xchg
frndint
xchg
xchg
xor
jbe
ret
ficomps
mov
outsb
add
cmp
jns
insb
mov
xchg
int3
mov
les
adc
mov
sbb
xchg
and
jmp
inc
sub
mov
pop
in
mov
and
aad
and
fmull
cld
sahf
and
push
in
push
les
and
dec
push
push
cmp
insl
sbb
or
xchg
das
push
stos
inc
test
or
pop
dec
xor
adcb
sahf
and
adc
mov
imul
inc
mov
rcl
js
xchg
fstl
ret
insb
daa
sbb
dec
sahf
stos
pop
lods
ds
mov
test
lods
pop
mov
jbe
shll
dec
andl
xchg
inc
addr16
push
ja
sub
jne
xor
mov
lods
mov
sbb
cmp
xchg
mov
or
xlat
lret
xor
repz
adc
sub
lds
out
sar
shll
mov
subl
mul
or
xchg
pop
shll
jle
test
lds
test
sub
test
jb
mov
imul
mov
lock
les
push
cmp
sahf
test
add
shrb
movsl
scas
mov
xchg
into
data16
shlb
hlt
pop
or
setle
push
call
xchg
xchg
sahf
mov
sbb
push
mov
mov
arpl
and
mov
repz
lea
lret
push
sub
cmp
cwtl
arpl
lfs
xchg
mov
fistpl
mov
xchg
mov
pop
pushf
cmp
xchg
sti
xchg
lods
gs
scas
out
inc
xor
mov
popl
enter
ret
xlat
clc
loop
xchg
jl
push
sbb
xor
mov
inc
cmpsb
inc
mov
dec
inc
out
jmp
imull
sbb
lret
mov
push
fldenv
das
mov
out
fisubrl
pop
xchg
cmp
lahf
push
jmp
cltd
mov
test
ss
xchg
aam
test
lds
or
push
pop
dec
cmp
mov
dec
ret
jge
out
xor
insl
add
jns
lods
dec
outsb
mov
add
push
xchg
mov
call
xchg
dec
jle
gs
push
fdivs
mov
sbb
push
sub
std
mov
scas
sbb
pop
mov
mov
outsb
inc
sbb
inc
inc
fistpll
xlat
xor
inc
push
test
fdivrl
lcall
stc
loope
mov
inc
jg
cmp
push
mov
movsl
jp
inc
pusha
mov
jmp
pop
pop
ret
dec
loopne
mov
adc
xchg
inc
cltd
or
cli
loope
sar
mov
dec
insb
lcall
or
xadd
cmp
subl
fdivrl
mov
push
movsl
sub
mov
mov
inc
jp
sub
test
inc
add
mov
fisttpl
xchg
inc
mov
cltd
mov
xor
out
cltd
das
and
pusha
inc
insb
inc
hlt
mov
iret
repz
fldcw
lcall
lahf
and
jg
in
sub
ss
jne
push
scas
ljmp
inc
je
xlat
aad
mov
lods
cmp
cli
cli
mov
loopne
jp
xor
and
fwait
mov
inc
push
repnz
rcr
add
push
mov
inc
mov
cld
xchg
ja
dec
shrl
and
rcl
sub
es
cmpsl
fidivrl
mov
mov
xchg
in
hlt
das
movsl
push
mov
rol
shr
xor
insb
jecxz
cmp
icebp
cltd
fs
and
lea
xchg
test
je
hlt
icebp
push
adc
cmc
lock
cld
imul
jnp
jb
cmp
and
ljmp
push
in
adc
loopne
and
mov
cmc
out
cmp
pop
stc
and
fldenv
sahf
ja
pop
xor
movsl
pusha
ss
mov
std
icebp
cmp
fisttpll
adc
push
loop
das
or
pop
setns
je
adc
orb
cltd
sbbb
pop
lds
dec
mov
push
adc
jg
popa
test
gs
sahf
xchg
call
and
xchg
mov
sub
cmp
pop
xor
iret
push
int
mov
shrb
adc
adc
xor
mov
inc
ljmp
pop
adc
ss
and
lods
sti
adc
inc
lret
int
xchg
loopne
outsb
xchg
and
pushf
insl
push
jmp
mov
jo
xchg
pop
xlat
popf
cmpsl
icebp
inc
lret
addr16
fwait
adc
push
or
fists
jno
loop
cwtl
aaa
dec
sti
iret
sub
shrb
or
cmpsb
inc
fs
lcall
push
ja
es
add
negb
adc
mov
xchg
stos
and
lcall
ja
dec
jl
out
gs
aas
aaa
xchg
push
les
ss
and
sub
cld
loop
pop
xchg
popa
shlb
mov
repz
sbb
test
addr16
xor
and
xchg
or
stos
lcall
fs
ljmp
mov
fidivrl
icebp
inc
mov
sub
and
mov
push
dec
lods
lds
mov
sti
push
push
iret
sub
and
iret
adc
mov
bound
sub
sahf
cmp
aas
je
mov
dec
sub
push
call
fdivr
sub
pushf
xchg
insl
mov
sarb
inc
out
mov
mov
cmpsl
cmc
repz
push
dec
jo
add
inc
sbb
mov
sub
and
mov
and
or
xor
in
out
loope
out
sbb
cwtl
icebp
cld
aad
xchg
test
loop
in
mov
mov
ds
iret
xchg
int3
outsb
lret
sahf
nop
popf
out
sub
adc
jo
in
push
cmp
pop
call
push
fs
pop
pushl
dec
into
xor
enter
rcl
int
in
xorl
ret
insl
daa
movsb
rcr
insb
sub
and
jnp
jae
adc
lods
xchg
cmp
iret
flds
cmpsb
inc
je
jbe
cmc
inc
daa
test
xor
dec
movsl
repz
push
repz
xor
call
sub
fadd
inc
js
pop
xor
mov
pusha
push
std
mov
lods
fsubl
jo
lods
ja
and
lds
clc
outsb
mov
ss
jmp
mov
adc
cmp
push
sbb
ss
and
push
dec
xchg
gs
es
mov
lock
lret
cmpsb
mov
adcb
fwait
jl
ss
jno
stos
imul
xorb
push
inc
out
push
jb
push
sti
mov
int3
inc
jo
packuswb
insb
xor
es
lods
sub
stos
inc
ds
incb
xlat
loop,pt
mov
add
adc
aam
jae
cmp
pop
fcoms
sub
inc
fimuls
inc
jp
dec
js
pop
scas
lret
mov
ds
imul
ret
sub
icebp
mov
shll
pop
xor
push
jmp
call
orl
leave
mov
mov
xor
addr16
jo
add
iret
sub
ret
testb
call
dec
or
pop
ljmp
arpl
pop
scas
xlat
or
sub
pusha
mov
and
add
or
cmp
sbb
or
jo
mov
pop
bound
insl
mov
jb
int3
mov
jg
addr16
mov
movsb
pop
xchg
add
pop
mov
dec
xchg
dec
inc
mov
sarb
scas
icebp
adc
scas
adc
add
imul
push
mov
repz
add
xlat
dec
xchg
inc
pop
cmp
shll
cmpsb
loope
inc
fld
or
xorl
or
fsubr
mov
mov
push
jp
pushf
cmp
insl
shrb
xor
mov
sub
loopne
inc
shll
mov
in
xor
push
jmp
int3
lods
dec
mov
xchg
add
aad
les
pop
cmp
js
and
sbb
nop
mov
add
in
imul
outsb
or
xor
mov
sub
stos
loope
roll
clc
jno
fistpll
adc
je
sbb
push
push
dec
pop
adc
ffree
push
xchg
sbb
xchg
dec
test
dec
fs
push
or
mov
popa
xchg
or
out
es
mov
inc
push
pop
cld
jo
xchg
addr16
in
xchg
mov
insb
scas
jnp
sarl
movsb
mov
xchg
int
xchg
ret
mov
call
out
jp
xor
insb
in
xorb
xchg
inc
lcall
and
cmp
jle
lret
jo
nop
pop
mov
in
xor
fxch
fwait
sarl
jmp
push
sub
dec
movsl
andb
jbe
push
inc
inc
pop
add
sbb
cmpsl
sbbb
lods
adc
ds
add
test
lahf
and
push
jg
es
fsubrl
inc
xchg
js
xchg
cmp
add
and
sbb
inc
mov
fdivs
lcall
bound
jge
xor
outsl
mov
mov
jle
testl
sti
jecxz
inc
push
out
lcall
jmp
mov
mov
jo
pop
imul
ss
pop
xchg
mov
sbb
scas
add
cmp
mov
jge
popf
stc
into
jns
pop
cmp
fimull
jecxz
mov
fwait
movsb
mov
std
dec
add
mov
in
sub
cwtl
xchg
jle
stc
inc
orb
adc
push
movsb
movsb
mov
out
adc
cltd
cmp
daa
mov
shl
cmp
add
add
mov
add
xchg
cmp
imul
loopne
inc
mov
or
mov
pop
popa
push
scas
sub
insl
das
jno
mov
icebp
push
sbb
outsb
imul
dec
cmp
pusha
cmp
xchg
testl
xlat
es
test
and
fs
jae
out
pop
sbb
jmp
sbb
lea
jnp
repnz
andl
and
cmpsb
pusha
xor
pop
mov
std
les
scas
shl
mov
insl
imul
inc
adc
es
add
pop
testb
in
mov
sbb
xchg
das
or
and
in
mov
mov
mov
ret
nop
add
mov
add
scas
jg
sub
adc
pusha
dec
dec
pop
pushf
xchg
jns
mov
mov
outsb
dec
and
xor
rcl
xchg
shl
mov
popa
pushf
mov
out
xor
decb
sbb
das
fs
sub
push
sub
xor
dec
in
push
les
test
push
jl
or
pusha
cmpsl
sub
pop
incb
xchg
or
or
hlt
movsl
mul
stos
sarb
aam
pminsw
xchg
sub
lock
lods
mov
out
cld
push
vpaddw
adc
fsubs
cmp
int
addr16
mov
enter
adc
pop
movsb
add
jne
adc
mov
push
mov
or
mov
jbe
mov
and
mov
js
push
mov
stos
inc
adc
xor
inc
pop
cmpsb
dec
pop
pop
dec
inc
jmp
ficoms
mov
std
push
sub
sub
inc
sti
pop
cmpsb
insb
dec
cmp
add
in
lcall
sarl
xor
mov
icebp
insb
or
leave
mov
subb
out
mov
jo
sub
pop
push
mov
std
jg
jg
stos
sbb
push
pop
sahf
or
mov
dec
xor
call
add
jae
or
les
lds
shll
adc
sbb
add
xlat
jge
jle
out
add
loope
push
mov
mov
daa
mov
pop
fwait
sub
dec
mov
push
and
dec
sbb
dec
and
jb
lods
pop
mov
xor
jecxz
cltd
inc
divl
test
cwtl
jecxz
and
lret
lea
jns
gs
mov
mov
mov
lea
or
aam
adc
cwtl
inc
shll
in
mov
xchg
pop
mov
cli
mov
jns
xor
mov
inc
pop
and
cmp
inc
adc
int
lock
out
test
rorb
xchg
push
pop
sbb
pop
jl
cmp
sbb
fcmovnu
cltd
lods
sbb
es
pop
inc
test
cmpsb
push
pop
adc
mov
and
outsb
clc
pop
clc
xchg
pop
popf
cmpsb
add
xchg
in
enter
test
fnstsw
ret
leave
pop
dec
push
leave
or
jmp
popf
adc
add
sbb
in
inc
sti
and
psrad
dec
aas
test
mov
pop
adc
cmp
popa
cmp
sbb
adc
popf
mov
rclb
mov
adc
inc
xlat
rcrl
xchg
fnstenv
daa
cltd
jp
fidivl
test
adc
out
xchg
inc
xchg
sbbl
add
xchg
aad
mov
test
fwait
or
mov
mov
mov
inc
icebp
es
cmp
jbe
pop
mov
inc
mov
stos
jbe
cmp
outsl
lret
mov
pop
ret
pusha
lea
adc
stos
andl
mov
xor
rorb
add
cwtl
loope
pop
and
ja
insl
lods
leave
or
mov
lcall
jb
loop
sub
jae
push
imul
ficomps
call
jbe
adc
mov
test
push
add
push
jnp
xor
pop
subb
out
daa
xchg
sbb
fisttpll
fbld
adc
and
pusha
dec
notb
fs
jns
dec
jecxz
lods
ds
push
cmp
popa
sub
add
loope
xlat
mov
and
inc
out
call
push
cmpl
inc
cli
mov
pop
pop
or
lods
lods
int3
scas
or
int3
insb
push
popl
das
aam
mov
xchg
xchg
test
jl
or
ss
or
cmp
fcoml
mov
xchg
adc
in
loopne
sub
mov
pusha
loope
jecxz
and
mov
sbb
push
add
push
stos
pop
mov
xchg
push
adc
cmp
stc
xchg
daa
mov
xor
jg
mov
adc
rcrl
add
cwtl
das
inc
adc
and
and
sarb
hlt
sti
scas
add
cli
jg
std
or
hlt
mov
repz
pop
and
sub
pop
mov
ret
mov
and
and
dec
jge
push
imul
xor
shlb
sub
lahf
mov
loope
aas
push
xor
fimull
scas
mov
hlt
add
xor
mov
loopne
jge
pusha
and
mov
pop
gs
movsl
mov
jno
sub
js
cmp
xchg
jns
xchg
fildll
and
mov
out
xor
hlt
fimuls
sbb
ja
xchg
and
push
sbb
shlb
ja
jb
jae
lds
pop
bound
pushf
push
mov
movsb
pop
pushf
push
popf
insl
stos
jae
push
fcmovne
aam
aam
sub
add
cs
pop
leave
arpl
mov
sbb
iret
insl
xchg
xchg
pop
dec
jg
fbstp
or
pop
jl
push
adc
rclb
iret
hlt
call
inc
lea
mov
adc
xor
mov
sbb
test
in
les
arpl
out
mov
in
shl
jle
and
add
mov
jp
mov
cmp
cltd
outsl
xor
xchg
push
inc
imul
cli
stos
loope
dec
fisttps
cs
cmpsl
push
dec
mov
popf
scas
fisubrs
outsl
out
mov
dec
and
movsb
inc
cld
sahf
mov
scas
sbb
cmp
pop
scas
xchg
test
cs
nop
and
aaa
and
xlat
cmp
sbb
ret
orl
sahf
clc
mov
flds
sub
shlb
xchg
fsubrp
dec
lcall
sahf
mov
movsb
mov
jmp
pop
xchg
gs
mov
ljmp
xchg
sub
call
jl
inc
cs
add
add
movsl
or
in
xor
outsb
add
adc
mov
loopne
push
enter
popa
fisttps
sbb
sbb
cld
sbb
ja
jecxz
negl
std
xchg
test
and
adc
in
fnsave
pop
mov
lods
bound
mov
sub
outsl
cld
subb
scas
rolb
out
testb
test
mov
fists
inc
jmp
rcr
jl
lahf
std
ret
jmp
sub
cmp
cmp
mov
inc
xchg
pop
cmovo
aaa
sub
pop
or
mov
inc
push
or
inc
outsl
outsb
adc
bound
mov
sbb
add
sbb
scas
pop
push
dec
in
pop
xchg
stos
nop
dec
ret
sbb
mov
stc
mov
je
fildl
push
test
imul
aas
or
repz
dec
lret
mov
mov
mov
rolb
xor
lock
and
cmp
scas
sub
mov
ss
and
adc
mov
push
test
push
lea
dec
push
cwtl
dec
loopne
jb
cmp
sarb
jmp
les
dec
int
mov
ss
cmpsb
mov
outsl
xor
sub
test
das
stos
enter
orl
mov
gs
in
pop
xlat
addr16
xor
fists
pop
pop
pop
adc
stc
adc
jle
pusha
sub
jnp
jbe
mov
fistpll
mov
mov
pop
in
xor
jbe
inc
lea
pop
inc
test
jp
test
mov
mov
leave
popa
or
push
cmp
fnstsw
into
push
pop
adc
push
cmp
dec
and
inc
dec
aaa
inc
adc
mov
lea
lahf
outsl
xchg
stos
inc
loop
stc
pop
es
aad
leave
mov
and
sbb
inc
out
xlat
in
mov
int3
pusha
cmp
xor
fadds
cwtl
add
inc
test
addr16
fbld
aam
lahf
mov
scas
cs
outsl
sbb
addl
inc
pop
movswl
popf
mov
fld1
cmp
pop
xor
push
sub
jae
jle
pop
call
xchg
jb
adcl
lods
in
or
in
jecxz
push
push
dec
xchg
jb
or
pop
inc
movsb
lock
fstpt
jge
cld
pushf
push
repz
lods
fiaddl
imul
arpl
gs
cld
sbbb
and
inc
sti
xor
mov
mov
sbb
dec
jno
and
push
xor
jp
sub
jno
ljmp
imul
xor
push
lret
push
enter
add
insb
pop
fs
add
aam
gs
out
or
or
out
sbb
adc
add
or
lock
push
jmp
lahf
xor
mov
inc
inc
dec
adc
mov
mov
mov
dec
jb
imul
int
xchg
and
rclb
int
sbb
ret
scas
and
push
mov
mov
mov
imul
dec
daa
cli
mov
adc
stos
or
addb
jns
outsb
lock
test
sbbl
pop
inc
push
nop
add
roll
ret
idivl
push
adc
and
ds
rorb
icebp
repz
inc
loop
mov
cmpsl
inc
repnz
inc
sub
xchg
inc
popa
sub
cmp
loope
sub
mov
or
test
mov
dec
nop
mov
int3
sub
les
cltd
inc
shll
in
idiv
pushf
leave
imul
imul
or
push
sarb
add
and
pop
lock
dec
adc
xorl
pop
add
je
mov
pushf
imulb
mov
ficoms
push
push
cmp
cmpsl
subps
add
push
pop
aam
mov
pop
ud0
fcomi
jb
loop
pop
and
mov
dec
ss
adc
loope
idiv
lock
rol
rcrb
fwait
sahf
xchg
adc
lahf
and
pop
nop
push
push
pop
out
sub
push
jns
cmp
or
mov
and
jo
xchg
mov
cld
inc
jle
push
or
adc
out
sbb
or
outsb
xchg
fisttpl
test
das
cmp
mov
subl
or
mov
ja
popf
xchg
jnp
sbbb
mov
daa
xchg
adcl
mov
das
xor
sub
in
inc
add
dec
adc
in
mov
xchg
in
mov
call
or
cld
int3
outsl
xchg
sub
lahf
stos
out
icebp
cs
or
in
outsb
aam
jo
rcrl
lock
aad
dec
leave
aam
enter
orl
xchg
mov
mov
pop
loope
rorl
das
mov
ds
fs
dec
mov
pop
rcl
mull
je
adc
dec
repnz
std
adc
mov
and
push
push
inc
loopne
pop
out
gs
inc
iret
mov
aaa
inc
inc
scas
mov
jb
xchg
es
sbb
push
rcl
das
pusha
mov
rol
jb
xor
xchg
push
imul
xlat
push
mov
pop
cld
push
dec
cmpsl
jle
sti
popf
scas
int3
cmp
fwait
pop
mov
inc
inc
pop
ret
ret
sub
add
add
and
cmpsl
sti
repz
repnz
xchg
sti
mov
mov
pushf
mov
adc
movsl
lret
sbb
out
stc
ror
pop
xor
inc
in
test
inc
jge
addb
or
jne
popf
sbb
frstor
adc
gs
cmp
jnp
adc
addr16
test
mov
ror
mov
push
mov
push
xlat
xor
xchg
mov
inc
add
aam
aaa
mov
mov
out
iret
mov
arpl
stos
inc
xchg
and
mov
aam
inc
lcall
mov
enter
daa
lea
out
xchg
call
sub
cmpxchg
rol
mov
or
loope
add
ss
test
js
cs
enter
dec
cmp
xchg
jmp
mov
inc
push
mov
pop
mov
jmp
sub
loop
ljmp
dec
aaa
sub
lods
lcall
movsb
pusha
adc
movl
adc
sub
scas
mov
loopne
in
sub
popf
int
xchg
sbb
int3
lea
shl
adc
mov
jnp
imulb
ljmp
aam
or
hlt
mov
rclb
lcall
push
loopne
mov
pop
je
jo
xchg
cmp
xchg
roll
or
clc
jle
movsl
repnz
mov
int3
fmul
jl
loop
out
mov
jl
pop
inc
shlb
insl
ja
push
mov
lock
mov
push
in
mov
ds
loopew
sub
fsubrl
xor
imul
and
cld
lcall
lahf
cmc
loopne
popf
add
jle
push
jecxz
xorl
pop
mov
jno
pop
icebp
in
xor
add
sub
xchg
or
icebp
fwait
and
pop
cmpsb
xchg
arpl
dec
es
cmpsb
scas
pop
mov
cmp
sahf
inc
inc
lock
xlat
stc
pop
lock
aaa
and
dec
sub
fdivrl
mov
jnp
adc
cmc
pop
stos
mov
mov
push
shll
shlb
mov
cwtl
cmpl
sbb
xor
repnz
or
sub
push
xor
cmp
insb
fisubs
gs
inc
mov
mov
mov
pushf
je
jnp
rcr
sahf
ret
mov
mov
mov
popf
jno
aad
clc
out
inc
popf
cmp
sub
fdivs
push
ret
out
sub
jmp
int3
dec
dec
das
xchg
js
repz
dec
data16
jns
jne
nop
mov
stos
sub
fldl
jmp
ljmp
dec
lea
nop
adc
out
imul
fistpll
mov
test
jp
mov
movsb
pushf
fldenv
cmp
xchg
fsubr
adc
enter
lahf
jle
inc
lock
sbb
cmpsl
xlat
adc
push
pop
push
cltd
shrl
cmpsl
ds
in
cmp
mov
xchg
pop
shlb
stos
fisubrs
pushf
adc
inc
fbld
lret
mov
xchg
test
mov
add
mov
cmc
in
arpl
inc
std
pop
enter
loope
xor
iret
js
lret
xor
test
mov
push
outsb
insb
adc
sti
lock
pop
sbb
test
scas
mov
out
je
mov
jne
repz
ja
sahf
push
lods
movsl
and
dec
gs
movsb
xor
jle
mov
jmp
xor
gs
js
fldl
shl
int
mov
stc
sbb
xchg
mov
imull
in
push
ret
pop
fiaddl
arpl
and
push
imul
sub
ret
mov
push
clc
movsb
xchg
data16
fwait
and
dec
popa
sbb
jle
aaa
lret
mov
pop
mov
add
dec
sub
sub
sbb
leave
and
push
subl
into
xor
pop
push
xchg
gs
inc
loope
adc
add
adc
fcoms
sbb
sbb
and
mov
or
orl
ss
sbb
scas
push
cld
adc
movb
and
push
ja
lret
fidivs
or
arpl
divl
pushf
push
lret
leave
cmp
arpl
enter
adc
pop
scas
movsl
bnd
or
add
pop
push
xlat
inc
call
mov
and
sbb
int
sar
int3
insl
ja
out
outsl
ljmp
jp
mov
decb
fs
stos
int
push
or
adc
loopne
xor
dec
adc
fnstcw
lock
push
popa
jne
in
insb
fmul
push
aas
mov
dec
ret
xlat
jecxz
push
rol
adc
dec
jo
ja
push
fsubl
push
ds
jle
mov
adc
fbld
jns
rcrb
mov
sbb
or
popf
jnp
add
aad
inc
testb
rolb
roll
push
fadds
adc
lcall
and
hlt
ja
mov
sbb
cmp
xor
std
fldcw
shlb
aad
testl
jo
xchg
push
sub
push
add
mov
and
fwait
iret
dec
icebp
and
sub
testl
sbb
gs
cmp
dec
sbbb
test
mov
pop
ret
mov
mov
inc
sar
dec
xor
sti
stc
lret
push
iret
pop
sbb
and
ret
inc
repnz
test
xchg
or
pop
xor
and
fdivrl
std
fistpll
mov
cmp
je
lds
jb
cld
cmpsl
popf
cwtl
jmp
in
aaa
inc
pop
sbb
xlat
jmp
pusha
insl
scas
ficompl
xchg
xor
mov
xchg
outsb
mov
imul
cmp
mov
out
mov
mov
push
mov
inc
loope
mov
lods
das
mov
pop
sti
mov
leave
sbbl
cmp
repnz
ss
js
cmp
adc
xchg
test
and
adcb
sahf
and
mov
xor
fs
icebp
add
stos
dec
loopne
pop
ret
xor
rorl
ljmp
cmp
cwtl
imull
xchg
insl
lcall
je
cmp
xchg
mov
sub
loope
mov
xor
mov
stc
mov
lds
push
mov
int3
add
xchg
test
adc
lock
mov
and
cmp
jns
cmp
enter
adc
in
daa
dec
inc
sub
mov
pop
nopl
or
arpl
jno
cmc
stc
pusha
jmp
mov
jmp
and
les
pop
fs
mov
sbb
and
incb
cltd
and
dec
mov
mov
xchg
aad
into
push
aas
lods
inc
das
ficompl
mov
mov
stos
daa
cmp
add
cltd
mov
shrl
mov
lcall
push
lock
pop
push
mov
gs
dec
lret
inc
flds
cmp
push
cmp
rcrl
lods
xor
mov
mov
cli
lods
sbbl
int
sub
dec
jg
inc
adc
out
jmp
xchg
stos
out
mov
mov
pop
aas
aam
mov
fadd
push
inc
sahf
mov
and
cmovo
mov
jl
in
or
imul
jns
cmpb
pop
mov
ficompl
and
aas
pop
jg
fiaddl
dec
aam
sub
xchg
mov
aas
push
jle
add
push
movsl
scas
add
sub
fidivrl
jno
xor
adc
outsl
add
xor
inc
fdiv
fstl
and
pop
iret
lret
insb
xchg
test
jb
movsl
subl
mov
push
loopne
bound
pop
cwtl
dec
cmpsl
pop
mov
inc
sub
push
arpl
popa
out
dec
enter
dec
xchg
jnp
in
int3
dec
dec
add
mov
imull
stos
adc
jl
mov
sub
ds
test
rolb
and
ret
adc
sbb
pop
adc
repnz
xchg
jle
test
loop
pop
jecxz
lcall
bound
pop
dec
adc
shl
mov
push
fistpll
clc
jp
jge
and
mov
ja
dec
insl
mov
filds
fisubs
arpl
les
cmp
xchg
fcmovnb
or
xchg
repnz
ljmp
cmp
int3
call
push
xor
mov
in
lret
sub
push
int
sar
insb
sub
xchg
xor
or
dec
in
push
insb
xlat
mov
movl
or
add
insb
or
stc
iret
js
ds
mov
pop
inc
adc
push
push
mov
call
add
push
sbb
sbb
mov
mov
out
jmp
repnz
hlt
cmpsb
sub
aas
adc
or
sbb
adc
test
sbb
jns
in
xchg
pop
rorl
push
popa
push
pop
pushf
leave
mov
add
gs
idivl
pushf
loope
pushf
loope
and
sub
imul
fisttps
lret
cwtl
pop
pop
lret
xlat
shlb
xchg
ss
aam
mov
fs
lods
and
jae
mov
addr16
xor
fbstp
adc
dec
and
xor
js
jne
xor
into
stc
mov
movsb
xor
popa
pop
pusha
jmp
jg
js
mov
xchg
sbb
movq
aad
sbb
int3
add
or
dec
fsubrl
mov
dec
adc
mov
dec
addr16
lea
mov
movsb
xchg
adc
in
jge
push
inc
sub
and
pop
pop
dec
push
xor
xor
stc
cvtdq2ps
or
fistpll
pop
mov
aas
stc
pop
imull
shlb
jns
xchg
jmp
pop
iret
loop
int
fstps
sub
movsl
test
lahf
xchg
call
mov
xor
or
movsb
loopne
test
xor
sub
xchg
mov
sbb
push
cmpl
xchg
and
xor
inc
mov
mov
loop
sub
in
mov
mov
jbe
daa
lock
mov
fcomps
popa
and
ss
repz
or
dec
add
fstl
stos
jns
arpl
inc
sub
mov
xor
xchg
sbb
mov
out
ljmp
outsl
xchg
imul
in
mov
adc
jno
sti
out
bound
xlat
cmpsl
loope
pop
or
mov
dec
push
xor
xor
ljmp
mov
loope
lock
xorb
jecxz
inc
lea
repz
mov
push
sbb
les
dec
repnz
mov
fildll
mull
test
ljmp
movsl
push
sbb
cmpsl
out
sub
cmp
ja
pop
jns
adc
fsubl
test
ljmp
jmp
outsl
xchg
inc
es
stc
mov
cmp
mov
pop
dec
jmp
dec
xchg
cmp
cli
insl
in
out
adc
or
imul
les
fs
push
or
mov
and
jnp
jo
int3
in
xlat
adc
test
sbb
cmp
imul
sub
shrb
rcrl
inc
pop
outsb
stos
dec
lret
push
xor
insb
mov
cmp
pop
sarl
inc
dec
xchg
adc
push
lret
mov
sub
dec
cmc
inc
fwait
sti
andb
push
inc
lods
or
jo
addr16
pop
in
cmp
adc
shrl
lret
adc
aas
and
adc
or
hlt
inc
dec
nop
dec
inc
xor
cmp
jno
rcll
dec
das
sub
outsl
xchg
adc
push
aaa
adc
inc
mov
nop
stc
sbb
cli
xor
mov
sbb
aam
xor
mov
jne
push
das
dec
mov
xor
pushf
jb
mov
mov
push
ffree
dec
cli
jle
xor
stc
push
incb
lds
adc
xchg
and
subb
lcall
addr16
cmp
leave
ja
aam
mov
and
mov
inc
mov
cmp
xchg
lods
in
sbb
jns
aam
add
cmp
jle
lods
inc
popa
pusha
daa
xor
cmp
xlat
mov
jl
fucomp
mov
stc
pop
in
and
mov
popa
enter
push
pop
stos
dec
xchg
movsb
dec
cmp
and
mov
xchg
or
or
add
and
nop
shrl
out
stos
jl
cmp
or
pop
push
cmp
push
jbe
pop
repz
cmp
sbb
or
daa
mull
mov
pop
aad
dec
dec
xlat
push
insl
or
xor
jp
adc
sub
push
cltd
cmp
sbb
movl
in
mov
push
shrb
mov
jge
out
leave
mov
xor
mov
test
lds
mov
out
sbbl
mov
dec
enter
push
jne
subl
lret
idivb
mov
push
call
in
push
test
ret
movsl
adc
ljmp
lret
in
mov
loop
test
fwait
mov
xchg
cwtl
or
fcmovne
mov
pusha
in
rcrl
popa
inc
repz
insb
cmp
into
repz
andl
adc
mov
enter
push
cmp
ja
test
rorl
mov
mov
jae
in
mov
testb
pop
lret
mov
sbb
mov
mov
and
call
jecxz
jge
sub
hlt
mull
lods
popa
fmuls
ficomps
in
or
imul
loopne
lds
and
jae
ljmp
add
ss
repnz
sub
sbb
mov
popa
cmp
xchg
jnp
filds
dec
data16
push
add
jecxz
leave
add
xor
scas
ja
in
sub
nop
ret
push
sub
mov
out
jns
movb
pop
mov
sbb
xor
pop
addr16
xchg
je
sub
or
or
lea
loope
imul
xor
mov
mov
or
and
jg
insl
mov
in
imul
mov
orb
push
jle
lds
aas
lret
xlat
xchg
pop
je
xchg
xor
dec
pusha
mov
int
imul
mov
or
rcrl
xor
scas
cld
xor
sub
sbb
sbb
cmp
pusha
aam
mov
adc
or
adc
push
push
icebp
outsl
in
cltd
inc
pop
stc
mov
add
or
idivb
popa
shr
cld
loopne
mov
hlt
adc
insb
jmp
int
mov
mov
adc
repz
insl
dec
sub
push
test
mov
ret
pop
push
bound
adc
insl
in
mov
fsubr
in
ret
cmc
push
fs
mov
inc
jb
push
in
loopne
daa
dec
mov
arpl
fdivrl
test
js
and
adc
push
divb
cmp
sub
cwtl
sbb
stc
movb
jg,pt
sbb
mov
sti
movsl
imul
mov
add
imul
sub
add
sub
jle
addr16
or
in
xchg
outsl
mov
adc
gs
adc
arpl
mov
mov
das
loopne
or
bnd
sahf
repnz
nop
pop
sbbl
js
adc
push
rcrb
gs
mov
sub
sub
jge
loopne
test
add
mov
stc
lret
add
dec
xor
mov
sub
cwtl
jno
out
pop
pusha
lods
sub
jnp
jns
cmp
imul
enter
das
or
lds
mov
iret
dec
sub
jnp
jnp
addr16
out
je
mov
outsl
das
repz
cld
xchg
jo
movsb
lods
push
sbb
movsb
and
mov
icebp
jno
clc
imul
std
mov
mov
inc
rcrb
mov
jbe
scas
mov
xor
mov
cmp
and
dec
inc
and
pusha
jmp
pop
inc
sbb
stc
rcl
ror
rcrb
or
aaa
imul
or
int
inc
lret
ret
gs
cld
and
xor
dec
aam
jge
fwait
sub
xchg
jmp
int
add
movsb
xchg
ljmp
mov
add
xor
inc
pop
sbb
je
cmp
ljmp
fdivl
test
jge
cli
sbb
rolb
push
or
mov
and
cltd
inc
cmp
scas
aas
movsl
inc
imul
fstpl
sarb
aad
sbb
push
mov
fwait
jle
ljmp
dec
or
jns
jns
enter
cli
leave
or
mov
out
pop
xchg
sbb
xor
xchg
clc
jmp
lods
data16
ja
xchg
pop
xor
aam
and
loop
mov
dec
mov
adc
lds
shr
jb
stc
sub
push
inc
je
dec
subb
in
and
repnz
clc
inc
pop
ret
push
out
mov
jb
sbb
xchg
add
leave
or
jno
jno,pn
sti
push
mov
mov
in
flds
daa
lock
testb
mov
dec
jbe
out
ret
xchg
arpl
addr16
pop
mov
dec
sbb
xchg
dec
xor
ss
data16
fisubrl
and
loope
movsl
jmp
enter
or
push
sbb
push
stos
mov
jo
mov
fisubs
popa
outsl
in
sub
jl
adc
divl
addr16
push
stos
fs
lods
gs
out
pop
fidivrs
test
rcll
icebp
je
fadd
sub
out
jmp
pushf
adc
loope
mov
je
mov
jmp
mov
fcmovne
dec
jmp
sub
inc
cmp
ds
sahf
aas
in
leave
or
gs
inc
mov
in
ficoml
lods
sub
pop
stos
mov
or
scas
inc
push
jo
xor
pop
mov
mov
xchg
mov
outsb
adc
pop
pop
scas
repz
sbb
repnz
dec
and
push
imul
and
fwait
cltd
rcrb
mov
pushl
subb
ret
lahf
cmp
or
pop
xor
std
xchg
lods
xchg
movsb
sub
add
add
dec
lods
imul
xor
fisubrs
dec
arpl
cmp
subl
jg
popa
pop
dec
shrl
xor
push
pop
dec
orl
sub
mov
or
cld
insl
jo
jne
xor
gs
xor
cmp
fstps
adc
shl
addl
cltd
imul
outsl
push
pop
fs
js
and
nop
push
or
in
and
enter
roll
and
mov
and
xchg
mov
ljmp
lea
push
cwtl
xlat
aam
lahf
int3
repnz
pop
dec
scas
mov
pop
shlb
shl
sbb
mov
xchg
adc
dec
dec
fidivrl
and
movl
xchg
pop
adc
cld
adc
adc
inc
or
divl
repz
test
stc
rol
in
pop
pop
pop
mov
xchg
or
cmp
pop
fwait
or
cmp
je
mov
inc
xchg
aam
rorl
in
aam
shrl
inc
push
pushf
sbb
jo
addr16
adc
lods
mov
addl
pop
mov
dec
pop
add
xlat
add
sub
push
ficoms
sub
loop
ret
sbb
push
repnz
dec
jmp
push
xor
jge
fisttps
add
cmp
fimuls
fdivs
repz
cmp
test
aad
or
xchg
mov
mov
cltd
push
add
lret
inc
xor
dec
out
gs
fwait
enter
jmp
push
out
inc
cmp
adc
mov
add
and
mov
out
fstpl
aad
mov
iret
outsl
movsl
cmp
jge
shlb
push
and
mov
rclb
add
lock
filds
shrb
xchg
mov
sub
add
test
sbbl
lcall
push
mov
sub
xor
sub
or
jnp
in
sub
shlb
sub
pop
in
and
das
fidivl
mov
jno
inc
cmp
hlt
mov
xchg
ja
popa
aam
or
test
fnstsw
lahf
add
xchg
divb
jbe
stc
arpl
into
pop
repz
xlat
pop
sahf
punpcklwd
sub
andb
mov
and
jnp
pusha
dec
sbb
dec
sub
adcb
mov
xchg
in
or
mov
test
incl
sbb
cmp
aas
xor
test
add
aaa
push
aam
sarl
or
fsubs
inc
std
loope
xchg
std
out
jg
sub
enter
add
ss
insl
test
scas
pop
js
divl
jo
push
sbbb
mov
test
sbb
and
andl
lds
cwtl
push
push
adc
and
adc
cmovs
pushf
xchg
dec
push
dec
ret
cli
out
cmp
fnsave
jecxz
push
pop
data16
stc
pop
ss
iret
stos
sbb
bound
arpl
mov
or
sub
push
fdivrs
ret
cmp
fiadds
or
jl
add
daa
cmp
mov
mov
loopne
xor
inc
pop
in
pop
adc
cmpsl
mov
ljmp
aas
inc
les
fistl
add
out
mov
ljmp
mov
movsb
jo
outsl
cli
test
leave
xchg
pop
leave
mov
xor
insl
lahf
cmp
daa
xor
push
jo
sub
sbb
fstp
and
dec
sbb
pop
lock
imul
mov
add
int3
and
sub
mov
add
cmp
xor
enter
pop
cmpsl
inc
mov
jae
jae
lods
push
mov
mov
mov
in
dec
mov
mov
rclb
and
dec
lahf
js
lods
dec
jg
xchg
jne
xorl
mov
adc
jmp
mov
and
dec
dec
in
icebp
sahf
ss
cmpsl
xor
pop
xchg
xor
das
lea
and
fdivp
and
adc
and
dec
test
out
or
sbb
stos
out
xorl
adc
sub
or
aaa
or
xchg
pop
leave
clc
stos
stos
xchg
cmp
cmp
fistpll
pop
mov
inc
dec
popa
jno
lods
imul
inc
mov
test
loope
add
push
mov
bound
in
jmp
pop
loopne
movsl
out
sbb
or
fdivl
push
add
jmp
adc
cmp
lret
xchg
xor
jae
sub
and
and
xor
mov
mov
sub
add
insb
ljmp
inc
inc
mov
pop
add
xchg
adc
sub
add
pop
pop
loopne
ja
mov
mov
rcl
out
sarl
or
or
push
fnstcw
movsl
or
aam
jle
insl
xchg
jae
push
sbb
in
pushf
lods
jmp
pop
push
mov
stc
cs
mov
or
fadds
jle
inc
inc
jbe
sbb
imul
insl
dec
dec
adc
lcall
cmpsb
pop
jg
insb
add
lds
rcrl
or
pop
dec
sar
jecxz
jl
and
pushw
test
dec
insb
pusha
sbb
mov
add
pop
jae
push
jo
jle
xor
dec
lahf
cmpsb
or
jecxz
sub
xchg
stos
dec
das
adc
sub
sbb
lds
popf
mov
ficoml
iret
inc
dec
mov
sti
adc
ret
shl
andb
pop
pop
lcall
ret
sahf
call
mov
xchg
lods
stos
and
outsb
mov
imul
shrl
push
jne
inc
mov
repz
sti
jb
jp
enter
jb
cmp
iret
ja
mov
dec
push
add
inc
xchg
and
orl
int
popf
sub
daa
mov
stos
and
and
rcrb
xchg
outsl
mov
out
xor
lods
psubb
popa
mov
xor
pop
push
mov
hlt
push
cmp
pop
repnz
xchg
pop
push
or
popa
cmc
adc
inc
dec
ds
sahf
mov
sarl
sahf
and
or
xchg
mov
sbb
fcmovb
xchg
sub
jmp
mov
add
out
push
fisttpll
mov
lahf
test
roll
aad
gs
pushf
stos
push
push
fsubrl
sub
cmp
rcrl
sti
out
imul
and
scas
mov
les
xor
jno
mov
xchg
inc
sub
test
cmpb
and
and
clts
stos
xchg
adc
jo
sbb
adc
shrl
pop
lds
popf
pop
xor
icebp
jno
pop
movsl
scas
int3
roll
jnp
or
pop
aas
sub
mov
or
stos
pushf
es
or
pop
sub
xchg
into
ret
dec
lock
mov
stos
xchg
repnz
xor
sbb
jecxz
sar
sub
and
idivl
adc
push
adc
jnp
aas
repnz
jns
sti
dec
inc
es
lds
in
mov
daa
test
popa
sti
loopne
loop
sbb
loopne
ljmp
jl
sarb
sti
lret
cmp
mov
add
mov
jmp
or
insb
dec
fimuls
sbb
shlb
into
mov
outsb
mov
xorl
loopne
jge
sahf
dec
ss
xchg
xchg
sbb
push
jnp
rcrl
mov
jae
cli
adc
jo
out
xor
loop
pushf
fisttps
pop
pop
movsl
out
rol
aam
adc
xor
dec
scas
mov
xor
jecxz
roll
outsl
xchg
lahf
cltd
mov
jecxz
loope
push
aad
fldl
lcall
sti
cmp
dec
inc
pop
cmp
xor
xchg
push
mov
sbb
fnstcw
sbb
notl
cmp
sbb
addl
xchg
cmp
aas
xchg
cmp
jmp
inc
es
xchg
sbb
outsb
adc
mov
ja
ficompl
cmp
or
lock
fsubrs
jg
cmpsb
lahf
xor
mov
dec
xlat
sbb
insb
sub
mov
hlt
pusha
das
or
out
jnp
pop
push
cmpsb
push
mov
fldenv
sbb
cltd
ret
cmp
nop
lods
adc
inc
sub
pop
popw
inc
sub
pushl
je
repz
xor
pushf
pop
add
nop
scas
and
inc
or
in
add
or
imul
hlt
jge
aad
lcall
enter
dec
xchg
xlat
mov
adc
push
dec
cmp
jmp
add
push
call
out
roll
cltd
and
add
and
add
mov
out
call
mov
test
mov
sbb
dec
jae
mov
jmp
cmp
add
and
pop
test
sbb
jb
ror
jecxz
repnz
movsb
lret
push
out
xor
loope
adcl
int
jns
cli
test
pop
aam
int3
ds
jecxz
stos
cmpsl
inc
in
sub
scas
jp
mov
xchg
ja
xlat
shll
dec
mov
sub
and
push
ret
sub
fwait
xor
jge
call
cmp
jg
pop
mov
pop
mov
pop
sbb
xchg
test
out
in
sbb
add
mov
inc
imul
jno
sub
jb
add
jg
outsb
out
xchg
mov
fucomip
cmp
fwait
mov
sub
or
adcw
jbe
sbb
xchg
pop
gs
push
out
cld
loope
outsl
dec
sbb
dec
jl
or
push
cld
push
sahf
aad
inc
pinsrw
and
mov
lahf
xchg
popa
je
push
cmp
xchg
loope
int
add
mov
mov
sbb
aas
push
in
pop
sub
xor
gs
adc
push
xchg
add
jae
add
jmp
cmpsl
psubb
add
pop
stos
mov
insl
dec
insl
jns
fwait
leave
mov
outsl
xchg
lret
jb
xchg
push
add
add
or
das
insb
sbb
jl
movsb
adc
push
mov
sti
mov
lods
xor
jp
add
into
aam
sbb
incb
xchg
jg
enter
mov
outsl
jo
sbb
jmp
rorb
mov
wbinvd
xchg
ds
or
lea
sbb
mov
mov
lahf
jne
pusha
inc
mov
rcll
dec
mov
jns
fisubs
ficoml
mov
dec
flds
cmp
and
mov
inc
sti
adc
fildl
subl
ficomps
mov
push
jbe
fwait
in
sbb
sahf
xlat
cmpsl
iret
incb
add
sbb
push
jmp
out
cltd
orb
add
xchg
decb
loope
cmpsb
mov
add
or
or
fdivrl
pop
adc
sti
repz
xchg
in
std
sbb
jo
and
jmp
arpl
mov
mov
popa
xchg
aas
and
icebp
jmp
xchg
pop
test
addr16
daa
xchg
fisubrl
test
pop
clc
or
les
ret
push
push
adc
pop
pushaw
jno
cmp
ret
lret
push
out
mov
dec
push
loop
in
out
in
incb
call
jns
inc
cld
xor
sbb
mov
xor
cwtl
add
jg
sahf
sub
bound
cmpl
aas
push
in
hlt
out
and
sbb
sub
adc
jbe
out
cli
mov
cwtl
jae
mov
dec
dec
xor
loope
shll
push
dec
xlat
jle
hlt
out
dec
out
in
mov
fdivl
add
jl
adc
paddd
inc
lret
dec
jle
cmpsl
and
aas
mov
inc
sbb
ret
xchg
push
mov
xchg
jg
xchg
jne
inc
lock
insl
imul
repz
loope
das
pop
mov
scas
nop
inc
inc
or
dec
iret
mov
aaa
pop
call
ds
in
rolb
ss
sbb
daa
jl
add
push
sub
outsb
aam
xchg
test
xor
insl
pop
cli
push
dec
mov
add
ljmp
pusha
xor
stc
fwait
mov
out
or
jnp
xor
ds
test
pop
pop
push
lods
ja,pt
repz
aad
inc
cmp
mov
dec
rcrl
dec
dec
inc
es
sub
sub
jns
movsb
mov
mov
aam
test
orl
stos
or
push
shl
fdivrs
arpl
into
int3
push
cli
lock
jge
test
test
add
add
outsb
daa
xchg
push
cli
insl
idiv
fs
jle
stos
movsl
test
std
sub
inc
xor
pusha
out
mov
pop
lea
repnz
insl
add
repz
push
mov
ja
add
test
xor
iret
adcb
lcall
test
test
fucomip
jno
dec
push
or
mov
mov
adc
adc
push
rcrl
adc
sbb
daa
mov
push
int
xchg
movsb
jnp
inc
pop
orb
inc
rorb
xchg
repz
cmpsb
sbb
mov
jne
xlat
jns
ficomps
test
lret
mov
xchg
repz
pop
xchg
stos
mov
sub
jmp
aam
sbb
sahf
je
adc
fildl
add
cmpsb
pop
fwait
sub
mov
mov
mov
data16
dec
and
fisubrs
fdivrs
ss
stc
mov
pop
mov
out
cmp
adc
in
jnp
mov
or
pop
ret
jle
inc
mov
mov
lods
js
lds
scas
test
sahf
sub
in
imul
inc
mov
jo
and
pop
mov
pop
mov
cmp
aas
nop
inc
jle
mov
xor
mov
les
pop
xor
mov
sub
sub
testb
push
scas
out
in
jge
enter
pop
and
outsl
fsubrl
sub
mov
pop
jno
hlt
lea
or
fucomi
scas
mov
inc
mov
insl
adc
imul
add
mov
cld
fimuls
es
fs
add
cli
jne
call
jmp
movsl
pop
sbb
enter
aas
inc
fnstsw
fstpt
pop
jnp
mov
xchg
xchg
jl
xor
mov
mov
push
insb
push
adc
repz
shrb
adc
aam
adc
sbb
cmp
mov
movsb
cmp
pop
add
dec
mov
test
lods
movsl
les
dec
adc
push
adc
clc
xlat
push
ffreep
ficompl
mov
stos
lods
aad
mov
xor
push
inc
sti
dec
push
jmp
cli
rcll
mov
dec
pop
cmc
adc
pop
add
int3
out
and
adc
cld
jns
clc
cltd
sbb
xor
dec
addb
outsb
cmp
xchg
mov
lea
sbb
pop
sbb
push
xchg
mov
bound
arpl
push
cli
mov
bound
fwait
iret
add
dec
and
mov
adc
fdivrl
dec
ret
pop
test
xchg
aaa
and
xor
scas
jbe
and
lock
sub
push
int
push
cwtl
push
out
shll
movsl
push
rcrl
and
mov
enter
mov
mov
into
add
dec
mov
sbbb
pop
nop
push
je
jno
xchg
repnz
sub
or
pop
js
mov
cld
cltd
test
int3
stos
xchg
hlt
arpl
fstl
sub
cmp
push
aam
rcll
shl
dec
lock
mov
jmp
inc
mov
add
ret
pop
into
mov
cmp
fbld
mov
and
hlt
scas
outsb
in
jo
mov
sarb
sbb
aas
aad
inc
cmc
jns
mov
jecxz
xchg
mov
inc
mov
fdivrl
or
insl
test
fimuls
leave
jle
shlb
mov
cmp
mov
push
insb
cmpsl
sub
xchg
pop
movsl
repz
adc
mov
repz
sbb
jg
sub
call
lret
ret
xchg
imul
ds
cli
jge
cmp
xabort
es
pop
dec
cmpsb
lret
jns
push
xchg
xchg
push
sub
cli
cmpsb
xlat
cli
or
das
pop
aad
sub
xchg
xchg
xchg
out
cmp
xchg
sbb
jb
mov
stos
pop
fnstsw
adc
dec
shll
out
sbb
test
push
push
push
ja
out
adc
scas
mov
adc
cmc
xchg
aas
cmpsl
and
push
sub
lock
jnp
and
out
adc
stos
cld
scas
aaa
push
mov
add
pop
sarb
push
add
lret
xchg
dec
pop
inc
into
push
xorl
sbb
jp
scas
cmp
pop
hlt
dec
arpl
mov
insl
into
es
es
fwait
sub
inc
test
ljmp
cmp
les
dec
xor
pop
jns
mov
inc
lret
jo
movsb
add
mov
cmp
cmp
aam
ret
sub
fisubl
js
cmp
fidivrs
jmp
pop
ret
pop
dec
jbe
in
mov
sbb
jl
imul
jnp
aas
add
pop
xor
fcompl
ret
aad
aad
adc
fistl
jg
aam
mov
mov
inc
out
pushw
lods
mov
call
sub
cmpsl
push
cs
imul
dec
inc
clc
testb
repz
mov
xor
aas
pop
pop
js
sub
sbbl
daa
xchg
push
fwait
jp
test
sbb
push
loopne
js
mov
leave
push
sub
cmp
add
lea
push
test
fcomip
js
test
dec
push
mov
repnz
iret
jge
subl
hlt
rcrl
inc
ficompl
jmp
push
hlt
cli
and
and
push
scas
adc
adc
por
inc
xchg
mov
int3
lea
enter
aaa
xor
sub
mov
shrl
cmpsb
pop
iret
pop
push
shlb
int
test
out
sub
adc
dec
xor
cmp
fisubs
in
fsubr
popf
stc
dec
jbe
enter
push
sbb
cmp
mov
mov
lret
mov
cmpsl
mov
pop
sbb
mov
or
out
repz
ja
adc
inc
aam
iret
push
fiadds
inc
lock
inc
shrb
cmp
fsubs
sub
and
inc
mov
inc
mov
insb
push
popa
das
int
pushf
cmpsl
cmp
mov
mov
mov
mov
cmp
push
arpl
and
in
std
ds
outsb
pusha
shlb
lret
pop
in
int
push
mov
and
pushf
and
add
cmpsl
cmp
jle
ljmp
outsb
hlt
inc
int3
arpl
jmp
xchg
dec
out
pop
dec
int
mov
in
cmc
pop
sbb
loop
cmpsl
cmp
pop
mov
sahf
movsl
idiv
std
pop
daa
jl
mov
inc
arpl
cmp
push
ss
insl
popf
shl
cmp
xchg
mov
mov
sarl
and
sbb
scas
sub
dec
sub
popa
push
fwait
pop
aas
or
jmp
inc
data16
rcrl
fcomp
daa
fwait
lods
add
inc
jle
jecxz
jnp
stos
push
fiadds
inc
xchg
and
sbb
ret
xchg
xchg
xor
push
imul
repnz
jg
mov
mov
test
sahf
dec
in
repz
inc
div
jno
aas
ljmp
push
into
movsb
mov
push
sub
subl
sbb
xchg
aaa
outsb
mov
repz
ja
or
xor
andb
mov
test
jecxz
pop
adc
mov
jns
aas
cmp
and
cltd
cmp
out
or
cmp
xor
loopne
inc
lar
idivl
ret
ja
mov
mov
xchg
xor
lock
cmc
fs
std
gs
arpl
pop
mov
mov
sub
dec
xchg
std
xchg
lret
loope
loop
fsubrp
adc
mov
inc
div
xchg
movsl
scas
xor
xor
mov
cli
stc
jo
mov
jns
jmp
mov
aaa
jmp
xchg
call
movsb
add
fstps
lea
pop
xor
xchg
outsl
and
inc
sub
out
xchg
ret
xlat
push
lock
jnp
fcmove
int
xlat
aas
pop
in
orb
fiaddl
shrl
punpckhwd
mov
cltd
cmp
das
mov
or
stc
xor
shll
inc
sbb
rclb
aaa
adc
push
xchg
aas
movsl
lods
pop
push
xchg
pop
sub
mov
xchg
mov
es
imul
daa
ficoms
jecxz
stos
imull
or
xor
or
pusha
cmp
cmpl
ss
fcomps
cmp
sbb
push
fwait
mov
add
loopne
push
mov
cmc
aad
into
xor
scas
jmp
xchg
mov
jns
add
xor
mov
lods
mov
mov
adc
pop
dec
add
xor
add
test
popa
movsb
inc
cmp
call
sub
xchg
or
fisubrl
cmp
push
and
outsb
jae
pushf
mov
cld
and
pop
pop
andl
xchg
in
sahf
xor
addr16
xor
pop
or
shlb
mov
std
int
cmp
out
jmp
pop
push
je
sysenter
imul
xchg
cmp
add
mov
fistps
adc
inc
sbb
jle
inc
repnz
xor
dec
sahf
push
enter
stc
push
iret
test
fwait
arpl
pop
mov
and
add
outsb
loope
xchg
add
mov
adc
adc
andb
mov
jno
movsb
lea
in
loop,pn
hlt
push
jl
sbb
jb
repz
push
fs
push
repnz
test
dec
cmp
pop
ret
fpatan
adc
mov
fadd
pop
dec
icebp
into
dec
in
xor
stc
jecxz
mov
pushf
ret
popa
cmp
and
adc
sbb
push
mov
dec
mov
jp
xor
fisubrl
push
repz
dec
or
or
xchg
mov
xchg
mov
popa
fwait
lea
xchg
sub
out
jmp
dec
jno
jns
nop
push
inc
dec
pop
testl
xor
pushf
sar
lds
andl
jle
sbb
loop
adc
cmpsb
cmp
xchg
sub
cwtl
pushf
add
push
mov
mov
stos
inc
mov
aas
pop
sub
cmpsb
inc
and
mov
and
xchg
out
rclb
out
cmp
data16
adc
fadds
pop
leave
popf
mov
inc
scas
aam
mov
lods
insl
lds
jmp
adc
mov
adc
adc
dec
push
xor
ljmp
jno
gs
cmc
lods
or
inc
push
mov
addb
int3
push
or
add
xchg
mov
mov
ficoml
jno
movsb
les
and
mov
jns
mov
pop
pop
rcll
sbb
comiss
push
dec
cwtl
jae
loop
push
push
fcoms
sub
push
imul
adc
outsl
dec
mov
cltd
ja
mov
int
cmp
xor
mov
mov
xchg
mov
jl
push
hlt
or
insb
xor
f2xm1
subl
dec
movsb
add
pop
enter
pop
daa
popa
mov
icebp
mov
adc
xor
cmpsb
dec
sbb
xor
mov
hlt
lods
jns
inc
push
push
jne
adc
fs
stos
and
shufps
sbbl
fwait
stos
ret
push
xor
dec
addr16
sub
movsb
cmpsl
ret
mov
les
daa
mov
test
imul
xor
das
nop
addr16
sub
dec
movsb
dec
pop
push
fdivr
test
icebp
repz
and
add
rclb
sub
lock
xor
jns
icebp
hlt
push
add
and
ficomps
inc
xor
xorb
sbb
bound
ret
cmpsb
ss
mov
dec
addr16
or
iret
add
jg
jle
cwtl
inc
mov
or
bound
ret
add
js
xor
mov
mov
and
aaa
iret
pop
fstps
lcall
cmp
jmp
movsbl
js
push
loop
insb
out
cmp
test
out
and
mov
pop
xor
xchg
or
test
stos
push
xchg
ret
in
cld
inc
mov
ds
jns
xor
cmpsl
inc
mov
sbb
incb
pop
leave
test
and
dec
aaa
mov
in
mov
add
sahf
add
xchg
cmp
mov
lahf
addb
in
shrl
jne
xchg
xor
aas
sub
lods
or
aad
out
pushf
fwait
dec
in
jbe
int3
das
mov
in
je
mov
dec
pop
sbb
das
roll
dec
inc
loop
add
jp
lea
sahf
jns
mov
jp
loopne
frstor
mov
jmp
mov
xchg
cmc
out
test
mov
and
shlb
mov
lods
xor
lods
imul
cmp
jbe
mov
push
push
iret
lods
mov
xor
or
jmp
iret
cwtl
dec
add
mov
or
add
cmc
dec
cmp
ljmp
xchg
insb
xor
cltd
push
in
pop
jnp
inc
and
fcoms
jo
inc
shrb
int
mov
enter
imul
stos
js
lret
jmp
xchg
enter
addl
cld
push
and
dec
sub
sbb
es
cld
int
mov
sahf
dec
dec
aas
mov
icebp
push
fistpl
dec
pushf
jnp
jle
add
and
sub
jbe
cmpsl
push
fstpt
jl
sbb
or
mov
push
aas
outsb
mulb
out
xchg
data16
mov
cmc
dec
xor
cmpsb
push
mov
or
gs
and
fadds
shrl
rcrb
inc
pop
subl
xchg
pop
mov
loopne
mov
mov
xor
push
movsb
daa
mov
insl
ss
sarl
lock
mov
push
lcall
push
add
andl
xchg
xlat
js
cmp
movsb
lret
pop
mov
push
cmp
in
push
and
pusha
in
pop
and
or
aas
add
add
jmp
aas
jmp
and
mov
rcrb
ds
inc
jp
mov
add
outsl
adc
push
adc
mov
xlat
shlb
pop
adc
push
xor
or
ret
xor
sub
ljmp
aad
xchg
pop
xor
jmp
pop
out
sub
sbb
testl
ja
cli
push
mov
scas
stos
or
call
sbb
loop
add
inc
jmp
loope
mov
shll
popf
lret
inc
jbe
inc
pop
jmp
imul
xlat
pop
cmpsl
js
leave
je
pop
inc
and
stos
mov
mov
lahf
imul
insb
xchg
xor
insb
pushf
cmp
and
push
loop
push
shll
xchg
std
punpcklbw
pop
cmpl
gs
mov
and
aam
aaa
jnp
jbe
dec
add
push
loopne
xor
pop
inc
stos
insl
mov
xor
int3
mov
or
arpl
inc
mov
xchg
or
cmpsb
sub
jge
in
jb
pop
push
stos
and
or
jbe
jecxz
mov
stos
sub
push
in
jbe
out
dec
push
sub
add
add
cmp
mov
sbb
adc
out
pop
lock
scas
cmpsl
lret
lods
push
mov
mov
sub
xchg
jge
call
and
sbb
pop
fistl
inc
pop
lret
mov
and
sar
lods
sbb
add
dec
leave
mov
addl
or
mov
in
push
shrl
jle
pop
mov
decl
out
lret
stos
pusha
lods
imul
jno
or
push
imul
in
fstl
jle
pop
adc
mov
cmp
pop
and
cmpb
adc
jns
int
xchg
xlat
loope
data16
insl
sub
fcoms
in
adc
stos
lret
pusha
mov
sub
jb
ljmp
jne
add
inc
adc
push
sbb
imul
and
add
push
pop
out
test
mov
stos
popf
xchg
outsb
jne
lcall
xchg
in
nop
into
out
dec
and
fdiv
jb
scas
lahf
or
pop
pushf
iret
repnz
push
jge
mov
stos
mov
jg
push
pushf
inc
insb
jg
stos
xchg
xchg
or
mov
xchg
ljmp
lea
dec
mov
dec
xchg
loope
pop
and
test
rcll
inc
imul
lret
mov
pop
aam
outsl
inc
test
addr16
jecxz
mov
lret
adc
andps
flds
test
push
push
in
mov
loope
xchg
in
out
fwait
xor
xor
int
mov
pop
inc
add
scas
mov
lcall
jecxz
test
mov
or
adc
fimull
sbb
fs
xor
repnz
icebp
ljmp
and
sbb
pop
sbbl
adc
and
popf
mov
daa
outsb
fildll
ret
incl
cltd
pop
dec
jle
ss
int3
sbb
adc
or
dec
and
and
cmp
imul
add
mov
mov
cwtl
pop
fcmovnbe
push
adc
hlt
xchg
dec
inc
imul
addr16
outsl
pushf
pop
js
sub
stos
rcr
pusha
sbb
xchg
dec
inc
adc
cmpsl
push
test
xchg
fisttpll
scas
repz
popa
and
adc
out
pop
lret
and
cmpsl
loop
aaa
out
cmpsb
cwtl
in
or
aam
add
outsl
push
add
stc
xor
jge
push
jmp
outsb
cmpb
cmp
cld
icebp
jg
sarl
dec
loope
popa
pusha
loopne
mov
mov
jbe
sub
or
les
mov
sti
hlt
jnp
pop
jae
mov
loope
outsb
mov
jmp
pop
jmp
xchg
nop
pop
lds
pop
jbe
addr16
add
sti
sbb
movsl
mov
mov
sbb
mov
mov
xchg
adc
aam
xor
xchg
pop
sbb
adcl
stc
into
js
fildll
sbb
jnp
cmp
dec
outsb
adc
imul
add
push
lret
adc
lahf
jg
xchg
movsb
jmp
test
pop
movsl
cmp
xchg
add
pusha
adc
jg
leave
pop
dec
jg
repnz
loope
jno,pn
jmp
sub
mov
test
fildl
mov
xor
ds
inc
jg
pop
dec
pop
and
fnstenv
shll
arpl
sbb
into
xchg
dec
loop
dec
std
pop
push
hlt
dec
sub
imul
mov
adc
fldpi
pop
and
sub
dec
mov
jno
in
inc
fisubl
mov
enter
fstl
jne
in
jmp
xor
mov
in
push
fistpl
jnp
aas
jecxz
cmpsl
dec
dec
pop
out
rorb
adc
lret
das
idivb
pop
xlat
push
xchg
add
ja
aad
pop
cmp
popf
les
bnd
jnp
aam
sub
jnp
xor
mov
sub
repz
out
or
xchg
aaa
test
push
jl
or
push
sub
insl
aas
popl
aam
nop
dec
test
dec
mov
inc
jecxz
dec
xor
add
pop
mov
pushf
or
sahf
inc
lea
push
or
enter
mov
jne
in
sub
push
popf
fwait
popf
inc
mov
insl
sbb
and
mov
adcl
mov
mov
decb
dec
cs
cli
in
xchg
add
cwtl
lea
mov
ljmp
fadd
mov
push
push
cltd
hlt
add
aaa
pushf
cmp
inc
mov
push
fs
decb
push
or
into
cwtl
dec
or
jle
repz
addr16
mov
jno
popf
divb
mov
add
or
add
jmp
cmp
imul
in
pop
pop
adc
sub
fldt
insl
dec
jbe
cli
sbb
pop
data16
idivb
dec
jns
mov
std
imul
pusha
sbb
fisttpll
xchg
aam
jae
popf
cs
sbb
pop
mov
xchg
jle
inc
sbb
mov
scas
aas
scas
or
fcoms
sub
loop
jg
cwtl
adcb
ds
jmp
shrl
iret
js
and
stos
jg,pn
subl
push
and
pop
xor
ret
fcmovnb
in
fwait
xchg
in
adc
fs
insb
les
jnp
ret
jmp
or
lret
out
add
gs
add
leave
mov
ficoml
in
sbbb
test
dec
mull
xchg
ja
cmpsb
repz
pop
cld
and
aas
push
lcall
cld
cmpsb
sarl
mov
sahf
dec
lret
in
leave
aaa
jo
mov
mov
jp
jecxz
pushf
sub
jb
mov
andb
fistps
fdiv
shrl
fldl2e
cs
dec
lock
mov
das
ljmp
cs
gs
jmp
mov
in
test
enter
loop
ja
mov
inc
mov
or
push
addr16
nop
mov
push
inc
lret
inc
inc
inc
popw
popa
inc
lds
ss
pop
out
inc
adc
mov
lods
fisttpll
out
ja
cmp
test
push
je
mov
inc
mov
dec
jecxz
in
pop
adc
imul
std
cmc
cmpsl
and
je
call
fimuls
cs
push
pop
push
mov
dec
sub
push
inc
in
jle
mov
leave
pusha
ds
fnstenv
push
loope
sahf
xchg
das
cmp
fucomp
or
xchg
aaa
sbb
ss
cmpsb
inc
movsl
lret
mov
enter
push
mov
das
xchg
mov
clc
add
insl
stos
in
pushf
es
cmp
xchg
ljmp
dec
shlb
inc
test
jl
pop
or
mov
lcall
lods
aad
int3
xchg
jle
jmp
aas
into
cltd
add
js
lret
sub
scas
mov
mov
inc
rcrb
fs
xor
out
std
fbstp
imulb
arpl
cld
dec
adc
adc
enter
add
sbb
mov
add
cmp
daa
enter
sub
jmp
xchg
es
imul
mov
mov
jnp
sbb
adc
mov
jg
fimull
jl
dec
xchg
sti
inc
in
sub
mov
xchg
outsl
je
sbb
cmc
sub
jno
fiadds
in
enter
inc
pop
int3
pop
adc
or
xor
sbb
adc
shrd
add
aas
lea
lock
scas
inc
std
leave
rcl
ror
repz
fcmovnb
xchg
mov
sub
inc
mov
push
mov
pop
adc
add
mov
adc
ds
call
ret
popa
or
jnp
push
sbb
push
aaa
push
in
call
sbb
enter
imul
cmp
xchg
dec
mov
adc
rcrl
ficompl
aaa
inc
mov
lret
clc
loop
mov
lret
add
or
jle
cld
mov
dec
in
je
cmp
dec
and
mov
push
pushl
sub
jg
loopne
les
xchg
out
push
ss
add
mov
mov
mov
mov
mov
pop
repnz
xor
clc
leave
adc
lock
clc
jne
in
lods
cli
xchg
mov
aad
xchg
push
cmpsb
fcomps
les
inc
popa
dec
cwtl
push
out
mov
shll
js
loopne
ja
sarl
xchg
test
stos
daa
loop
dec
push
mov
ja
mov
add
iret
add
or
jno
cmp
add
dec
mov
lock
xchg
mov
dec
cmp
mov
mov
adc
btc
sets
pop
in
sub
cmp
ficompl
and
cmp
jbe
aad
mov
pushf
pushf
popf
mov
repz
push
xor
xor
imul
mov
iret
xchg
dec
mov
push
or
lods
sub
into
sbb
fdivrs
pusha
loop
dec
ljmp
adc
xchg
js
or
and
lret
mov
mov
ljmp
cmp
loope
xlat
shrb
adc
dec
pushl
jne
inc
push
mov
inc
mov
sub
xchg
nop
add
outsl
xchg
and
fwait
adc
pop
bound
insl
sub
push
jl
pop
or
inc
sbb
mov
cmpsl
xchg
and
popl
jp
lret
inc
sub
ret
dec
mov
iret
jno
cltd
cmc
int
mov
xchg
fdivrs
lods
pop
imul
jns
mov
jae
jl
mov
adc
mov
mov
lahf
sub
xor
push
dec
bound
adc
xor
fs
test
test
leave
pop
push
add
push
jmp
test
movsl
push
adc
divl
pop
mov
cmc
aam
xchg
mov
jmp
dec
repnz
les
sbb
xor
movsl
mov
mov
aas
mov
ficompl
bound
aas
test
int
lret
jp
xchg
xor
mov
stos
and
sbb
pushf
out
mov
sbb
add
mov
aaa
repz
push
fistps
daa
add
mov
xor
outsl
movsl
push
sti
mov
in
lods
cmpb
inc
rorb
loope
inc
xor
jbe
jecxz
pop
fnstsw
packssdw
pop
mov
and
das
push
imul
add
and
dec
add
adc
sub
rcl
inc
test
inc
ss
test
movb
stos
fimull
mov
pop
out
sub
and
mov
pop
push
lods
fmull
adc
stos
xchg
inc
lahf
call
push
sbb
pop
in
cmpsl
popl
push
pop
push
xchg
out
arpl
inc
repz
adc
cmpsl
dec
jl
mov
int
sub
fildl
cmp
cmp
or
scas
mov
cmp
aad
iret
movsb
testl
jge
les
fwait
inc
push
mov
push
faddl
lods
clc
lahf
jbe
fs
sahf
dec
lds
lahf
push
das
repz
xchg
insl
ret
int3
dec
movsb
mov
jg
cmp
aaa
je
and
push
push
clc
mov
shrl
nop
out
jmp
jne
adc
mov
repnz
or
mov
out
lods
ret
cmp
cmpsl
cld
adc
clc
loope
lret
sti
in
mov
xchg
cmp
insl
inc
pop
add
iret
movb
and
out
in
mov
int3
lahf
pop
mov
ffree
mov
sbb
mov
sbb
pushl
or
std
sub
xchg
imul
add
push
cmp
je
cmp
jb
jbe
cwtl
mov
fldl
dec
mov
mov
jg
and
pop
jl
lcall
mov
icebp
fsubrs
pushl
repz
fldenv
xchg
aam
out
sbb
lods
push
outsb
xchg
jg
movsl
ljmp
add
out
cmpsb
xchg
or
imul
dec
lods
cmc
test
cmp
adc
rcrl
sarb
pop
cld
xchg
shr
and
mov
and
rolb
and
inc
ret
cmpsl
cli
xor
lock
imul
stos
push
pop
push
dec
push
xor
adc
sub
aas
dec
das
cwtl
xchg
and
stos
rcrl
xchg
xor
mov
fiadds
test
sbb
jb
and
sub
push
push
leave
adc
lods
push
outsl
je
sub
or
push
sub
mov
cmc
pushf
jae
decl
enter
lahf
cli
and
loope
add
jnp
fs
ficompl
enter
jp
pop
cmp
fcoms
pop
nop
js
lods
mov
sahf
or
cld
pop
add
xchg
xor
cmp
movsb
dec
lahf
mull
dec
push
adc
pop
jg
jb
les
jns
shl
daa
std
fwait
sub
dec
scas
test
stos
add
stos
and
add
dec
test
mov
mov
in
lock
adc
dec
adc
and
bound
adc
jno
js
ds
hlt
jae
jp
mov
test
iret
movsl
add
adc
mov
cmp
push
jne
jecxz
enter
adc
loop
shlb
add
lods
lret
mov
mov
push
cmp
push
mov
sub
dec
fmul
ficoml
xlat
sub
jecxz
loop
sub
ret
hlt
push
fisubrl
cs
cmp
in
clc
cmp
xor
push
sbb
push
sahf
or
mov
xchg
shlb
outsb
bound
xlat
mov
lret
aam
ja
js,pn
aaa
hlt
cwtl
xor
pop
scas
pusha
sbb
lods
and
adc
repz
inc
decl
fiaddl
xchg
cmc
inc
jle
adc
push
arpl
in
mov
add
lods
xchg
xor
icebp
inc
xchg
inc
mov
test
fst
xor
daa
fisttps
mov
fwait
hlt
fwait
pop
fildll
dec
dec
iret
dec
cmp
adc
dec
and
test
addr16
fidivrl
mov
cmovge
push
dec
jno
or
mov
xchg
push
or
roll
push
cltd
jno
mov
and
jmp
pop
dec
loopne
sarl
push
stos
xchg
sbb
ljmp
and
jns
imul
jecxz
xor
pop
sahf
fisttpll
xor
fwait
push
inc
bound
es
pop
repz
cmp
out
movsl
sbb
pusha
xchg
fistl
pop
fsubs
inc
hlt
mov
das
call
ficoml
idiv
icebp
ret
pop
xor
mov
ret
pop
cmp
inc
xchg
mov
adc
inc
xchg
mov
xchg
popf
mov
xlat
push
mov
repz
sub
inc
push
lahf
add
xchg
mov
leave
test
and
shrl
push
xchg
add
movsl
call
cmc
mov
sbb
in
pop
jp
test
mov
fdivp
fstps
mov
mov
dec
ja
inc
cmpsl
scas
outsb
popf
sbb
jb
xchg
sahf
pop
push
fsubl
mov
outsl
mov
mov
lcall
mov
pop
jp
mov
mov
xor
mov
xor
mov
jo
cmp
mov
or
test
mov
mov
pusha
out
inc
push
int
aaa
xlat
lock
push
mov
iret
mov
mov
enter
les
aaa
daa
dec
ja
ja
adc
pop
pop
call
cmp
in
inc
and
adc
xchg
and
xchg
xor
push
les
test
cltd
adc
pause
repnz
mov
xchg
dec
fldenv
cmc
insl
sti
bound
and
cltd
nop
or
dec
sub
sbbl
fistpl
insl
push
dec
enter
jo
push
lahf
rcll
div
adc
jb
ss
scas
test
ret
test
sub
jl
mov
xchg
imulb
cwtl
int3
loope
fs
mov
ljmp
push
cmc
fndisi(8087
arpl
or
jb
outsl
rclb
jbe
sbb
pop
xchg
into
cmc
lret
dec
jbe
lret
shrb
dec
leave
je
divb
ss
add
pusha
jns
xchg
jmp
sarb
cs
loope
lret
shll
rcrb
xor
xor
sub
cmp
arpl
test
adc
and
inc
das
push
fisttps
je
pushf
pop
mov
out
fmul
adc
sbb
loope
cmp
add
jg
pushf
dec
pop
cltd
sbb
clc
jae
adc
and
push
inc
ja
shll
mov
leave
mov
gs
into
pop
loop
daa
push
hlt
and
push
sbb
or
roll
push
push
filds
rorb
shll
sbb
push
loope
cmp
mov
fistpll
adc
inc
lock
xchg
cmp
mov
mov
das
bound
xor
outsl
pop
shlb
xor
movsl
inc
cld
jecxz,pn
push
dec
push
xchg
hlt
pop
mov
and
sarl
das
cmp
aas
out
sbb
cmpsb
and
add
push
xchg
std
out
sub
test
out
mov
into
lock
inc
jle
mov
in
add
cld
call
lret
aas
loop
adc
sahf
and
sub
and
push
push
rcr
fildl
mov
push
jno
mov
lock
scas
inc
pusha
jge
cli
jecxz
xchg
jbe
xchg
or
lret
cs
cmp
imul
dec
pop
xor
mov
movsb
cmp
jge
jmp
mov
data16
cmp
mov
cltd
jg
mov
push
loop
sub
mov
and
mov
pop
push
and
mov
jge
shlb
mov
imull
enter
cmpl
cmpsb
in
aas
stos
fwait
add
adc
mov
in
inc
arpl
dec
xchg
mov
mov
fisttpll
fnstcw
rcr
pop
lret
xchg
xrelease
push
aad
fimuls
sub
pop
inc
cwtl
sbb
stos
push
dec
inc
and
lahf
hlt
mov
push
les
ljmp
out
mov
enter
dec
jp
jo
dec
inc
dec
xor
popf
push
xchg
dec
shlb
pop
and
and
mov
mov
lds
insb
cwtl
aas
add
ja
test
mov
jmp
xor
fwait
daa
pop
jae
xor
ljmp
and
cwtl
adc
scas
sub
in
cmpl
ret
insb
push
sbb
aad
ja
ss
xor
mulb
pop
pop
out
in
hlt
sbb
icebp
fcmovnu
cmp
mov
cltd
mov
jl
iret
jnp
int3
xor
or
notl
xor
inc
aaa
outsb
popf
ds
inc
repnz
push
xchg
or
adc
lea
jae
lahf
negb
cmp
dec
cld
scas
lret
push
dec
and
jmp
mov
rcrl
mov
pop
mov
xor
lods
or
mov
fmull
push
test
jmp
shr
je
pop
or
popa
mov
mov
jae
pop
adc
in
inc
mov
inc
sub
lods
cltd
jno
into
jnp
pop
clc
sar
repnz
movb
inc
loope
mov
push
jne
mov
lds
arpl
ds
call
adc
iret
inc
sbb
pusha
imul
push
cltd
scas
loopne
add
hlt
addr16
inc
out
in
lods
pop
nop
into
rcl
push
mov
repz
fidivrs
stc
mov
rorb
fisttps
ret
std
jl
xor
sbb
pop
jl
cmp
xor
movsb
rcr
mov
subl
jle
xchg
stc
inc
sbb
jge
fs
rcl
fwait
pusha
aas
insb
nop
sahf
sub
ret
loopne
in
push
das
pop
dec
pop
stc
repnz
dec
adc
outsl
aad
add
fchs
in
lret
xchg
popa
sub
add
or
data16
xchg
lret
decl
clc
xchg
popa
icebp
mov
je
aas
icebp
mov
and
and
in
dec
and
sub
sbb
aas
or
sbb
dec
divb
sbb
inc
divb
jne
push
fsubrl
pushf
sbb
pop
sahf
lods
adc
in
adc
in
mov
or
fbld
pop
imul
ret
add
sbb
shr
out
icebp
push
sub
cmovbe
out
imul
lea
and
insl
xchg
and
sub
out
cmp
push
cltd
repz
movb
out
loopne
sbb
inc
push
push
movsl
mov
push
fs
mov
movsb
repnz
cltd
inc
test
pop
and
mov
push
mov
jne
aam
jb
fwait
inc
icebp
bnd
gs
xor
cmp
div
sbb
mov
lds
mov
add
add
repz
sbb
stos
pop
lret
mov
movb
push
push
test
xor
mov
mov
int3
ss
dec
mov
int3
mov
xor
test
xor
es
lds
sarl
test
loop
and
loop
and
lcall
shlb
mov
gs
pop
adc
in
inc
ret
sbb
jp
xchg
mov
dec
dec
arpl
insb
push
es
sub
mov
enter
adc
inc
addr16
movsl
mov
xchg
push
shlb
pop
out
rcr
loope
mov
insb
vpcmpeqb
jmp
push
cmp
push
stc
inc
lret
jne
jp
scas
aaa
rcll
jg
bound
call
xor
dec
imul
and
dec
or
clc
sub
jbe
jo
cld
sbb
into
add
adc
xchg
cmp
shlb
lods
xor
xor
test
mov
xchg
sti
neg
jmp
cli
sub
mov
xlat
rclb
cld
ret
jo
ret
leave
mov
sti
jg
subl
mov
out
or
cli
cmpsl
scas
add
pop
jns
jl
inc
popl
cmp
mov
in
fistps
daa
dec
add
sub
mov
test
xor
xchg
sub
jg
xor
cld
push
dec
mov
add
pop
scas
les
adc
jbe
fmuls
and
sub
gs
jo
push
push
ret
loop
sub
adc
add
frstor
insl
mov
mov
and
or
sbb
jle
or
xchg
adcl
inc
sub
mov
dec
in
sub
rep
hlt
mov
add
mov
push
mov
jmp
sti
sub
inc
stos
mov
and
iret
inc
sbb
bound
sbb
mov
stc
jnp
dec
or
scas
push
add
cmp
mov
dec
insb
cmpsb
popf
out
push
sub
in
incb
insb
ljmp
and
mov
insb
fisttps
push
insb
leave
cmpsl
sbb
mov
and
iret
lahf
std
not
mov
cmpsb
xor
sub
out
sbb
movsb
and
imul
shlb
jecxz
mull
xchg
pop
mov
inc
dec
lods
mov
pop
jne
adc
pop
sbb
mov
inc
or
push
in
mov
jnp
push
bound
stos
aam
repz
jb
or
les
cltd
aas
pop
pushf
scas
sahf
shrl
add
ret
loopne,pt
mov
sub
jmp
lea
pop
push
add
mov
scas
test
stc
iret
shrb
cmp
test
loop
jo
pop
mov
dec
ss
es
mov
imul
scas
or
data16
outsb
aam
mov
popa
enter
sbb
ss
sbb
shll
push
aam
loopne
mov
addl
dec
push
xchg
cmp
shr
in
jne
int
sub
cmp
fldcw
jnp
add
jmp
push
push
and
dec
das
jle
mov
mov
xchg
cmpsl
icebp
scas
dec
cli
jmp
dec
sub
cmp
sbb
std
gs
rolb
add
ret
cmpsl
sbb
cwtl
inc
out
inc
xchg
mov
cmp
fisubrs
ljmp
outsl
test
add
pop
xchg
or
jno
sbb
cs
ds
sbb
ds
mov
and
das
outsb
and
xor
mov
std
and
fidivrs
in
xor
iret
mov
int
into
iret
popf
or
add
sbb
inc
out
mov
aam
xchg
ror
sub
mov
inc
hlt
mov
mov
and
loope
lods
and
addr16
gs
ds
rcrb
pusha
outsl
sbb
movsb
add
fcmovbe
adc
sub
inc
cmpsb
hlt
leave
rorl
jb
imul
clc
lods
dec
and
sahf
pop
adc
rcl
icebp
test
push
shr
stc
mov
cs
jmp
dec
cmp
jo
push
xchg
push
mov
and
aas
adc
fwait
mov
mov
outsl
xor
jno
das
and
cmp
mov
mov
ds
adc
decl
imul
xchg
adc
in
and
xchg
fsub
je
xor
xchg
clc
out
pop
xor
lret
mov
sbb
xchg
enter
xchg
leave
xchg
mov
mov
xchg
jne
mov
or
cli
std
mov
fwait
sbb
fidivrl
mov
mov
test
and
inc
dec
lret
sub
or
cmp
outsb
mov
sbb
mov
xchg
mov
add
rcll
push
stos
fists
xchg
lcall
sbb
fstpl
out
cwtl
das
jecxz
mov
add
out
and
adc
ljmp
xchg
push
mov
imull
push
pushl
call
lods
push
mov
and
in
sbbb
adc
or
test
or
mov
mov
add
adc
mulb
dec
push
test
outsl
lret
pop
lret
out
popl
push
push
loope
fistps
cli
jecxz
jge
je
test
cltd
xor
pop
insb
jbe
ss
and
addr16
push
xchg
push
cmp
arpl
iret
jns
mov
add
in
and
pop
cmp
sbb
pop
jno,pn
sbb
pop
into
mov
pusha
add
daa
sub
mov
loope
and
add
push
push
ja
and
push
adc
xchg
mov
cmpsb
adc
arpl
out
ss
out
cmp
add
ja
adc
pop
dec
xor
dec
push
mov
lods
inc
sub
mov
mov
dec
pop
roll
pop
data16
sbb
loope
adc
lcall
adc
imul
push
pop
dec
out
arpl
mov
mov
cmovp
call
push
mov
mov
jge
jnp
lret
sub
lret
ret
daa
sbb
mov
jp
aas
adc
aam
sarb
js
jo
xor
sub
loopne
je
mov
or
mov
xor
call
xchg
stos
mov
push
adcb
push
sahf
add
lcall
inc
loopne
mulb
lret
nop
inc
and
sbb
mov
cmc
jno
xchg
mov
data16
inc
dec
mov
rolb
pop
incl
inc
sti
jmp
fld
cli
mov
insb
xor
sahf
cmp
mov
das
subl
adc
pop
data16
daa
xor
mov
cld
jbe
add
movsb
cmpb
andb
jb
hlt
negl
enter
adc
repz
in
push
out
popf
sub
repnz
inc
dec
cwtl
popa
test
xchg
xchg
cwtl
mov
cmp
pop
pop
daa
mov
adc
jnp
add
or
sub
lahf
dec
lods
xor
jecxz
mov
shlb
and
mov
in
jg
shlb
push
mov
sub
add
in
pop
shlb
lock
dec
adcl
or
ja
mov
aas
int
sbb
lea
sub
stos
xlat
dec
push
sub
jle
lods
xorl
fnstcw
div
cs
pop
bound
insl
dec
fdiv
sbb
ss
orl
mov
sbb
cwtl
lods
sub
jp
nop
mov
xchg
outsb
int3
cmp
push
mov
sbb
pmaddwd
in
je
andl
or
xchg
loope
out
testb
dec
addl
flds
xchg
add
cmpsb
xchg
jl
outsb
ucomiss
dec
push
xor
int
cmp
cmpsl
mov
push
aas
xlat
fcmovbe
and
and
das
clc
inc
pop
add
inc
das
sahf
addr16
out
stos
dec
cmp
mov
insb
ficoms
movsl
leave
lret
sbb
mov
out
in
ds
cltd
push
pop
scas
xchg
int
push
and
push
bound
xor
data16
cmp
jmp
adc
sub
aas
push
pop
roll
stc
lds
in
stc
loopne
cmc
outsl
lret
or
sub
push
sub
ds
loope
dec
cmc
pop
pop
ds
sub
scas
dec
cmp
mov
xor
mov
and
cmp
jle
mov
or
sub
cltd
and
jmp
mov
lock
and
call
cwtl
or
jbe
lahf
pop
inc
adc
cmp
es
push
adc
and
jmp
pop
mov
xchg
mov
jae
sti
insb
mov
int3
mov
cmp
xor
jle
daa
adc
in
dec
xchg
insl
jge
out
xor
cmp
cltd
divl
aas
add
cmp
in
mov
pop
ret
aas
jo
and
fmulp
movsb
arpl
dec
dec
jns
mov
dec
push
lcall
shrl
dec
and
mov
ljmp
scas
lock
sub
xor
scas
mov
inc
pop
test
out
sbb
xchg
cmp
jmp
and
xchg
xchg
aam
outsl
loopw
lds
int
sbbb
in
cld
pop
xor
lcall
xchg
popl
xorb
in
xchg
or
mov
aad
inc
out
jae
cmp
jo
jb
repz
rorb
fsubrs
int
cmp
push
and
nop
and
movsl
inc
outsl
test
lahf
dec
out
mov
dec
rcll
inc
mov
inc
sub
cmp
fiaddl
nop
and
jl
fldt
xlat
add
pop
imul
mov
jl
iret
or
mov
sub
jnp
push
cmovnp
cmp
aad
scas
adc
mov
lret
jnp
sbb
sub
inc
inc
mov
cli
mov
pop
lds
pop
xor
mov
outsl
push
dec
arpl
mov
sub
popf
and
rcr
adc
mov
popl
pop
shll
jnp
imull
jp
addr16
sub
icebp
out
in
xchg
popa
outsl
rcll
aam
aad
into
lods
out
inc
scas
repnz
cmp
fistpl
jbe
jp
xor
pop
orb
aaa
push
scas
jl
adc
arpl
fdivrs
outsl
adc
loop
mov
aaa
xchg
mov
or
jns
ss
fisubrs
push
cmpl
push
std
inc
sub
out
hlt
fldl
push
movl
push
cwtl
xchg
call
xor
arpl
cmp
inc
aas
popa
pop
cs
push
fwait
loop
jmp
jge
fists
pop
pop
push
add
or
cld
cmpsl
popf
jns
cmpb
dec
sarl
inc
sbb
addb
addr16
cwtl
sub
mov
and
mov
out
out
js
int3
cwtl
nop
mov
mov
inc
pop
add
imul
lcall
scas
cmpl
cmp
das
xor
push
inc
bound
mov
pop
fs
out
push
mov
add
sbb
sub
jae
lods
popa
push
test
out
stos
push
lret
xchg
mov
test
jp
cmp
enter
cld
add
cmp
lahf
pop
inc
jbe
out
rcl
add
adc
mov
sbb
mov
lods
pop
or
out
fdivl
scas
add
in
push
cltd
jo
add
test
call
push
pshufw
cmp
in
xor
fwait
mov
aaa
movsl
push
lock
mov
daa
push
arpl
dec
int3
jo
cmp
into
arpl
flds
pop
and
arpl
addr16
int
mov
xor
clc
push
data16
inc
in
or
cmp
inc
mov
dec
dec
ret
fistpll
test
leave
ret
fldt
and
push
pop
push
cs
xor
je
inc
ficompl
ja
xlat
jmp
inc
push
js
data16
cld
push
nop
add
xchg
lahf
xchg
in
push
cmpsb
pusha
push
fildl
lds
dec
dec
push
cltd
js
aas
jb
aaa
sbb
imul
mov
adc
add
push
out
popa
into
mov
pop
cmpsl
xchg
out
pop
or
or
icebp
repnz
movsb
dec
push
jnp
inc
add
sahf
xor
mov
add
pop
outsb
adc
cwtl
in
mov
popf
imul
test
dec
add
inc
iret
ljmp
std
lods
movsb
mov
iret
out
shlb
imul
fmul
cmp
or
dec
push
pop
js
pop
sub
loop
push
pop
aad
fidivrs
push
pop
sbb
mov
cmp
or
into
adc
out
and
hlt
push
test
mov
mov
es
mov
addr16
outsl
pop
adc
movsb
xchg
adc
jnp
and
add
aam
arpl
sub
xorb
imul
popf
dec
mov
mov
dec
jle
pop
inc
lds
shrl
rep
lds
sub
pop
lods
outsb
pop
adc
out
out
stos
adc
lock
xchg
enter
jmp
stos
es
rorl
scas
lret
shrl
xchg
fs
xor
fisttpll
add
push
xchg
imul
lahf
fmuls
xchg
in
in
out
sbb
imul
sub
xor
int3
setbe
push
mov
and
jb
jns
push
mov
test
pop
cmpsl
mov
clc
lcall
mov
in
xor
or
inc
lods
or
insl
daa
push
lcall
cwtl
loopne
mov
in
inc
or
scas
cmpsl
js
mov
enter
idivl
jb
test
aad
rcl
add
lret
aaa
aad
stc
lret
ja
push
mov
add
sub
addr16
aam
sbb
adc
repz
or
xor
mov
fcomps
jle
mov
aaa
ljmp
cmp
in
or
lcall
pop
mov
dec
and
and
jmp
mov
push
jmp
jbe
mov
das
in
jnp
xchg
mov
or
ljmp
nop
jnp
movsl
mov
mov
sti
in
subl
in
pop
inc
ds
das
lock
in
xor
sub
js
int
nop
das
jmp
mov
inc
fbstp
int3
mov
mov
iret
adc
shll
or
adc
std
push
mov
jge
and
in
pop
xor
ds
shll
lahf
and
mov
mov
push
lods
lret
dec
adc
mov
dec
mov
movsb
pop
pushl
mov
add
in
in
xorl
ret
movsb
mov
into
xchg
adc
push
sti
sahf
mov
fwait
cmpsl
ljmp
outsb
fucomip
cmp
xlat
loop
push
mov
outsl
inc
es
pop
cwtl
adc
jb
jbe
push
mov
dec
cs
sub
jp
push
mov
notb
daa
fnstcw
pop
mov
and
call
jge
xor
imul
jo
pop
cmp
pop
in
add
xchg
lahf
rsm
leave
imul
or
outsl
inc
arpl
stos
or
jne
mov
sub
pop
sti
dec
push
sbb
sub
jl
jnp
pop
jg
icebp
ret
push
pop
and
iret
sub
loopne
hlt
fistl
mov
lea
mov
mov
scas
iret
jo
imul
inc
addb
jne
mov
mov
pop
fistps
push
mov
cmp
sarl
pop
xchg
aas
mov
fistpl
push
fidivrl
sub
rolb
pop
setg
push
dec
in
ja
dec
push
out
pop
out
rclb
lods
sarb
mov
jecxz
shrb
mov
sbb
ja
cltd
dec
out
sbb
outsb
enter
add
pop
frstor
ret
test
bound
adc
ja
inc
pop
push
stc
ret
sarb
push
call
lds
mov
xor
ffreep
ljmp
push
int3
xchg
jecxz
or
fnstenv
inc
lods
sti
push
inc
sbb
cmp
inc
ret
dec
outsb
imul
adcb
push
push
incb
cmpb
pop
cmp
scas
add
push
clc
mov
fsubl
aad
sub
xor
decb
pop
pop
inc
pop
das
insl
push
and
out
mov
mov
hlt
adc
pop
insl
mov
pop
xchg
adc
ss
stos
xchg
lds
imul
test
fisubs
clc
loopne
aam
push
aas
adc
rcl
xorl
test
pop
insl
shrl
ret
jle
mov
shlb
adc
sub
push
lds
pop
jl
push
into
out
es
imul
add
addr16
rorb
jne
pop
mov
cwtl
out
xor
repnz
xchg
pop
negb
inc
push
xor
pop
push
pop
outsb
fdivrl
ja
mov
cwtl
popf
ret
jae
fdiv
fs
addr16
sbb
lret
pop
mov
ljmp
dec
mov
lods
jle
lds
and
call
pop
out
in
jp
xor
adc
cli
arpl
and
sub
push
es
sbb
aaa
lret
pop
nop
mov
sub
add
mov
imul
out
cld
loopne
pop
loopne
in
and
cmc
and
stos
jp
jecxz
sub
jb
add
test
movsb
mov
mov
xor
inc
aas
mov
mov
das
adc
scas
shlb
mov
orb
popf
jg
int3
push
adc
pop
das
rcrl
ret
or
or
and
and
sub
and
out
mov
imul
jmp
mov
xor
jecxz
fimuls
pop
aas
add
pushf
out
out
popa
sbb
outsb
imul
xor
sub
or
divb
lea
lds
cli
add
lret
lea
stos
out
jo
xor
sub
vandps
cld
sar
jb
sub
out
cmp
cmpsb
mov
test
xor
sub
xchg
mov
outsb
inc
pusha
push
arpl
xor
dec
pop
dec
mov
or
ret
xchg
fnstsw
inc
xchg
repz
aad
jbe
scas
nop
imull
push
dec
fwait
pop
inc
mov
mov
cmp
cs
push
inc
std
push
mov
bound
aad
mov
mov
lahf
mov
sub
bound
fwait
mov
push
xor
push
add
lcall
mov
out
lret
decb
imul
cmc
lret
xchg
ret
enter
pushf
pop
je
jbe
inc
xchg
movsl
mov
xchg
leave
cmp
or
adc
mov
daa
mov
xchg
test
inc
cmp
inc
jl
aam
pop
push
sub
xchg
loope
lcall
loop
sub
pop
sahf
sbb
cmp
popa
jmp
adc
pop
mov
popf
enter
idivb
jbe
xchg
addr16
pushf
jns
fld
mov
fmuls
arpl
xchg
test
int3
orl
shrb
leave
test
cmp
push
sti
fbstp
nop
inc
xchg
sbb
mov
sub
popf
in
nop
or
mulb
hlt
cmc
mov
dec
jecxz
push
ja
jno
mov
iret
jp
xor
or
inc
std
dec
jno
jle
sbb
ss
sti
push
sub
dec
xorb
int3
pop
jle
aad
movsb
fstpt
pushf
rclb
jg
sahf
je
jp
or
popf
mov
insb
pop
mov
sti
das
lods
push
loopne
into
outsb
lds
enter
gs
repnz
out
pop
movsl
aad
fiadds
rcrb
mov
out
mov
push
aaa
push
adc
test
lret
cmpps
xchg
gs
mov
lret
xor
sub
push
popf
xor
jo
mov
inc
in
cmc
mov
pop
jmp
xchg
int3
cmp
cmp
adc
inc
sbb
ret
in
mov
jecxz
xor
ds
and
cmc
aas
mov
mov
sub
out
mov
dec
test
stos
movsb
lock
testl
add
shl
movsb
push
dec
lahf
mov
icebp
sub
mov
add
xor
pop
xor
inc
lods
cli
rep
push
mov
cmp
out
cmp
sbb
inc
inc
mov
and
pop
jnp
movsb
push
aaa
add
xchg
pop
dec
jg
and
sbb
nop
jle
sub
sub
push
movsl
xlat
gs
push
das
orb
test
into
notl
clc
mov
inc
scas
nop
push
adc
clc
repz
adc
subb
jmp
mov
add
int3
jg
add
push
movl
cltd
call
repnz
nop
mov
jecxz
and
xor
repz
das
xchg
xor
gs
imul
inc
mov
mov
insl
jecxz
add
scas
mov
xlat
fistps
outsb
adc
shlb
aas
xlat
rcrl
in
sbb
push
jmp
inc
sub
lahf
cmpsb
sbb
xchg
pop
xchg
mov
sbb
jne
pop
mov
pop
leave
insb
ret
outsl
push
cmp
fmul
cwtl
sbb
mov
pop
adc
ficompl
and
bound
decl
cmpsl
mov
push
push
mov
or
dec
out
ret
xchg
jno
lods
int3
cmp
scas
and
add
adc
int3
sbb
mov
xchg
xor
nop
cmp
jb
or
roll
in
out
in
mov
mov
lock
inc
mov
fistpl
cs
adc
outsl
pop
pop
outsl
xchg
pop
mov
shl
pop
sahf
adc
inc
add
adc
pop
imul
sarl
adc
orb
add
std
mov
xor
cmp
and
test
lret
arpl
lret
and
pop
dec
xchg
push
or
lock
and
mov
pop
hlt
mov
ret
fnstcw
popa
inc
cld
shl
dec
xchg
rclb
in
jns
stc
addr16
and
xchg
test
out
pushf
in
xor
test
ja
dec
sbb
popa
push
mov
ja
lahf
mov
or
test
nop
xchg
add
loope
jmp
and
and
iret
sarl
lcall
outsl
xlat
jp
std
dec
adc
adc
mov
je
pop
jns
popf
xchg
addr16
std
clc
out
test
sahf
inc
es
cmp
in
push
repnz
mov
in
call
cld
add
push
mov
jecxz
add
jmp
xor
mov
pop
insb
jmp
aas
in
rolb
cld
lret
mov
sti
imul
mov
cmp
ja
cmpsl
jbe
jns
xor
sti
lods
stc
les
pop
xor
mov
cmp
loopne
pop
imul
cltd
mov
notl
jae
inc
pusha
inc
adc
and
lcall
das
xor
mov
mov
or
push
aam
jge
pop
iret
data16
xlat
xor
repnz
cmp
test
fimuls
cmp
and
cmp
inc
and
out
pushf
pop
je
push
and
cmpsb
xor
cmp
fwait
and
sub
daa
mov
pusha
xchg
lahf
loopne
pop
xor
daa
push
lcall
lret
int
xchg
inc
push
push
aas
add
dec
outsb
mov
sub
jns
inc
jg
push
cmc
arpl
mov
je
xchg
aad
push
out
idivl
lds
push
imul
pop
popl
subl
mov
dec
pop
repz
jo
xchg
fiadds
rorl
mov
dec
icebp
jle
pusha
rcl
push
mov
cld
xchg
xchg
adc
fstl
mov
in
out
int
aam
mov
cltd
inc
scas
mov
dec
adc
pop
jnp
fstpt
jmp
ret
inc
jp
in
pop
nop
add
cmpsl
call
icebp
push
pop
insb
std
sbb
add
pop
addr16
enter
aas
enter
mov
add
loop
mul
and
jecxz
add
or
dec
loope
jp
js
xchg
cmp
xchg
scas
pop
aam
adc
add
push
jp
pop
bound
shll
add
xchg
sub
sub
dec
aam
dec
pop
out
outsb
js
rclb
adc
aam
ds
push
and
adc
xor
jl
add
enter
repnz
ror
ljmp
cmp
xchg
leave
mov
jge
loope
dec
test
repnz
mov
pop
loopne
out
xchg
push
fbld
in
mov
test
fwait
cmpsl
pop
push
mov
aas
shlb
stc
cld
out
and
mov
mov
fldl
int
ror
push
jmp
jne
mov
pop
nop
add
jae
test
pushf
push
xor
mov
in
sub
lret
xchg
mov
pusha
sub
fisubrl
jne
cmp
xchg
mov
inc
je
add
sti
scas
es
pop
mov
adc
clc
jae
cmp
push
cmpsb
enter
daa
adc
dec
clc
push
mov
fnsave
aam
pop
int3
add
stos
stos
daa
into
pop
popa
stos
test
and
sbb
lods
push
repz
jecxz
xchg
push
xlat
cmp
pop
add
cmpsb
sahf
aaa
cmp
mov
and
fidivs
push
int3
xor
lods
pop
into
inc
cmp
arpl
mov
or
sbb
push
and
mov
push
scas
leave
push
out
push
mov
mov
push
das
aas
int3
add
mov
sar
stos
out
clc
add
xlat
jg
sub
push
bound
or
out
pop
rolb
sub
cs
stc
push
dec
in
cmovno
addr16
add
pop
adc
pop
pop
and
jp
push
mov
sbb
sub
nop
fisubs
add
movzbl
pop
iret
mov
popa
sub
mov
loop
inc
ljmp
jg
fldl
jg
push
push
xchg
ljmp
rorl
add
xor
pop
xor
repz
sub
push
add
jo
imul
cmc
iret
mov
jns
lods
gs
mov
imul
icebp
gs
fisubs
pop
mov
arpl
mov
movsl
stos
mov
test
fstpl
dec
xchg
sbb
mov
pmuludq
cwtl
jle
inc
push
adc
ja
mov
cmpsb
mov
daa
sub
test
xchg
js
pop
push
or
mov
adc
test
inc
inc
insb
imul
dec
adc
jo
lcall
pop
outsl
mov
outsl
stc
xchg
pop
lds
inc
nop
adc
mov
or
aam
mov
cmpsl
add
xchg
pop
das
xor
mov
stos
notb
pop
out
clc
or
jnp
jmp
inc
fmul
aam
mov
call
shlb
out
test
sbb
pop
jge
movsw
dec
sub
jns
jno
mov
daa
imul
subl
inc
fcmovne
inc
ss
cmp
jno
orb
push
repz
repz
add
mov
mov
jmp
mov
ret
pop
mov
mov
imul
loopne
pop
stos
int3
cmp
pop
loopne
xchg
push
pop
cmpb
roll
or
mov
and
lds
mov
loope
iret
cmc
decb
jge
loope
test
cmpl
cmpsl
and
call
push
jns
cli
loop
add
mov
pop
jne
mov
daa
pop
lock
adc
lcall
push
xchg
icebp
adc
xchg
in
adc
icebp
test
std
cmc
push
mov
or
jne
jecxz
adc
and
mov
pop
adc
mov
mov
idivb
dec
or
jo
inc
xchg
shll
push
stos
aas
outsl
pop
nop
and
out
incl
or
add
sub
xor
and
or
rol
scas
test
lret
pop
stos
jae
mov
fstps
xchg
add
push
cltd
testl
fistpll
pop
aam
mov
lock
lcall
jne
pop
cmp
add
xlat
aam
fldt
mov
out
fcmovnu
push
mov
mov
xchg
cli
stc
or
cmpsl
subb
adc
pop
push
sbb
inc
je
adc
mov
dec
or
divl
das
xchg
inc
inc
xor
fdivr
loopne
scas
idivb
lea
in
pushf
or
or
lea
sbb
xchg
dec
ljmp
in
mov
fwait
mov
loope
repnz
das
daa
xlat
and
ljmp
push
data16
xlat
inc
in
lret
mov
popf
enter
adc
sbb
cmp
rorl
arpl
or
xor
pop
inc
fnstsw
lea
imul
xor
pop
stc
mov
lret
setb
out
pop
push
fists
repnz
shll
xchg
cmp
fcomps
ret
xchg
add
je
insb
pop
aas
cmc
push
aam
dec
test
je
or
testb
mov
negb
pop
jl
mov
js
ror
sub
pop
inc
movsl
jae
scas
pop
or
xor
enter
in
daa
mov
test
sarb
lods
mov
push
fcompl
mov
lahf
jae
xchg
sbb
les
mov
in
aad
hlt
mov
push
sub
mov
fldz
mov
push
xor
fisttpl
pop
sub
insb
and
movsb
aad
fwait
cltd
mov
ficoml
gs
mov
lods
insl
imul
mov
jnp
push
push
cmp
jno
fucomp
jns
xlat
cmp
xchg
dec
sub
cltd
xor
sub
ds
and
aas
fadd
mov
das
cmp
stos
adc
lret
push
lcall
push
lahf
std
mov
and
push
xchg
lret
lds
sbb
int
or
cmc
popf
jo
roll
inc
movnti
cwtl
mov
repnz
rcrl
cmpsl
ljmp
test
jae
bound
jecxz,pt
insb
mov
and
loop
mov
push
les
or
mov
mov
pop
cmp
pop
adc
enter
inc
add
jne
push
jecxz
fists
andl
cltd
dec
jmp
cmpsb
repz
pop
push
rcll
lods
insb
jo
jb
int3
bound
insb
push
dec
mov
iret
in
fisubrs
and
jl
adc
insl
mov
stos
and
imul
cmpsb
dec
sbb
pop
pop
mov
fldenv
cmp
sbb
fwait
or
scas
shl
xchg
push
ja
mov
lret
cmp
jge
pop
cmp
popf
dec
jno
arpl
dec
adc
adc
es
xor
mov
lahf
out
scas
popf
int
pop
xor
sub
push
ja
and
fdivrp
inc
pusha
xchg
aad
call
loop
stc
stos
mov
cmp
or
leave
mov
test
xor
jle
sarl
and
inc
jle
adc
test
pusha
push
dec
mov
cs
mov
xchg
int3
adc
sub
insb
mov
and
sub
mov
pop
add
dec
xor
mov
xor
icebp
jne
lods
out
ret
shrb
pop
outsl
mov
mov
add
arpl
pop
fs
mov
into
and
pop
add
shl
bound
inc
insb
or
aam
jno
call
arpl
inc
and
jbe
rcl
addr16
idivb
mov
fildll
lahf
pop
imul
push
add
jb
movsb
sahf
inc
pop
or
out
jno
sub
test
sub
loop
push
jbe
int3
jg
inc
xor
sub
mov
daa
in
and
scas
call
mov
and
push
loope
xchg
xchg
and
sbb
movsl
pop
nop
push
addl
push
popf
inc
inc
mov
sti
int3
fwait
nop
adc
ljmp
scas
pop
push
xchg
neg
mov
fnstsw
movsl
fstl
inc
jne
cmp
xor
xlat
xor
outsl
ret
aam
jae
in
mov
testb
in
cmc
xchg
jbe
cmp
int3
mov
aaa
sbb
andb
or
bsf
sbb
ret
pop
xor
sbb
adc
cmp
sub
xor
mov
jbe
std
cltd
add
test
ja
sub
xchg
mov
iret
inc
clc
ds
inc
pop
jb
push
fsub
gs
mov
inc
jle
push
mov
cmp
das
add
add
mov
mov
sub
aas
in
repz
fnstcw
sahf
cmp
mov
sbb
sarl
sbb
dec
dec
adc
fisubl
into
sbb
int
pop
sbb
xchg
cmc
or
aaa
or
xchg
iret
int
or
xchg
je
adc
xchg
aad
stos
dec
adc
pop
lret
fistl
xchg
pop
enter
repz
rcrl
adc
pop
cmp
lretw
mov
jge
pop
testl
mov
ret
jp
mov
rcrl
cmp
loopne
je
sti
jb
sub
mov
jl
push
jns
xchg
xchg
adc
iret
mov
mov
dec
notb
mov
cs
loopne
lods
jle
pop
mov
es
imul
mov
adcb
cmpsl
inc
daa
xor
add
pop
add
mov
xchg
pop
push
push
pusha
rcrl
into
or
cmpsl
inc
push
jl
shl
or
mov
dec
and
mov
dec
es
cli
std
push
dec
dec
sbbb
inc
pop
loop
pop
int
and
or
je
or
mov
nop
add
or
add
les
mov
jbe
and
lahf
sti
dec
stc
pop
dec
cmp
clc
fistl
loope
mov
dec
ret
popf
lods
inc
push
push
sub
popa
inc
mov
inc
or
rcrb
fldt
jecxz
cli
mov
iret
jl
shll
int3
xorb
ret
movsb
ljmp
push
insb
mov
mov
mov
sub
pop
shll
inc
pop
xor
fsubrs
pop
or
test
ljmp
jle
mov
sbb
push
push
xchg
mov
call
cmc
xchg
popa
mov
and
lcall
mov
jnp
sbb
ret
ror
push
add
es
jge
mov
cmp
mov
pop
mov
in
in
fisttpll
and
sub
sar
add
arpl
sbb
jns
jecxz
add
mov
mov
gs
out
jp
xchg
insl
cmp
cmpsl
adc
mov
sbb
lea
test
cmp
int
jecxz
add
dec
cmpl
mov
add
mov
mov
dec
adc
bound
test
pop
mov
jge
pushf
jmp
insl
idivl
mov
hlt
lock
push
dec
fiaddl
inc
and
lret
mov
stos
xchg
movsb
pushf
ss
jmp
fmulp
sbb
mov
xchg
inc
cmc
into
inc
jae
popf
mov
add
daa
jae
sub
jbe
and
je
add
jno
out
push
xchg
push
cmc
and
ja
mov
sbb
sub
mov
adc
sysenter
pop
sbb
and
push
mov
sahf
push
jmp
mov
jne
push
jo
inc
movsl
inc
push
in
xchg
sub
cli
sbb
aad
sub
jp
and
negl
inc
scas
cmpsb
sub
mov
xor
aad
sbb
mov
jecxz
push
xlat
jns
pop
in
lret
incb
adc
out
pop
cmp
insl
popa
js
xor
or
xor
in
shrl
mov
dec
xchg
mov
test
add
pop
flds
sub
insl
pop
cli
or
jp
cltd
jae
cmp
jb
mov
les
arpl
adc
push
shll
cmp
mov
ja
test
mov
add
sub
pop
fldcw
cmp
xchg
movsb
fldl
xchg
and
call
psubsw
mov
xchg
mov
pop
js
fcomi
cmp
les
xor
push
inc
adc
pop
imul
es
or
add
repnz
mov
mov
iret
jnp
sub
scas
pusha
sahf
ds
pop
jp
jno
mov
lret
inc
pop
mov
mov
xchg
mov
enter
in
jmp
inc
inc
xor
pushf
push
push
mov
mov
insl
jge
mov
push
insb
sar
inc
mov
inc
loopne
loop
pop
cmp
xchg
leave
push
xchg
add
iret
sbb
std
mov
mov
lds
fldl
adc
rcrl
js
xor
sti
inc
mov
fsubl
dec
mov
loope
mov
or
lods
pop
pushf
shll
cmpsb
outsb
repz
and
ret
aas
into
mov
mov
jb
enter
adc
inc
pushf
std
ret
mov
sahf
icebp
ret
or
sbb
cs
mov
rclb
lock
fsubl
sahf
mov
lods
sbb
fdivs
jno
mov
loopne
pop
ds
jns
stos
push
or
xchg
shlb
loope
xorl
gs
adc
add
hlt
jmp
inc
and
sub
xor
adc
cli
aas
jae
int3
mov
daa
jnp
sarl
ds
push
ret
pop
jp
xor
lods
push
jne
pop
xchg
outsb
ss
jle
inc
dec
xor
mov
or
pop
xor
test
rorl
sbb
cmp
fildll
inc
jg
test
sbb
add
mov
hlt
sar
lock
fwait
mov
xor
ja
cwtl
stc
push
cmp
xchg
push
test
push
imul
in
pop
rolb
dec
sbb
iret
sub
addr16
iret
sti
shrb
adc
ds
jecxz
test
cmp
loope
ja
push
add
inc
int3
push
xchg
jecxz
push
fsts
adc
das
test
fldcw
fwait
pop
and
and
testl
add
xor
push
icebp
outsl
add
imul
and
pop
inc
mov
cmp
hlt
inc
enter
sub
rcrb
cs
cmpl
xor
push
mov
shr
jmp
daa
xor
outsb
popa
mov
fwait
adc
jno
sti
sbb
unpcklps
sbb
aam
sbb
cmp
lret
inc
xor
mov
mov
mov
mov
movsl
cltd
adc
or
jbe
test
inc
push
and
fwait
call
or
inc
dec
cmp
xchg
scas
xor
aas
cmp
lock
icebp
lret
mov
sar
jmp
xor
inc
mov
inc
adc
clc
lcall
popf
mov
mov
dec
out
add
std
fmuls
cmpb
push
or
and
sbb
outsl
xchg
mov
stc
fwait
leave
push
pop
pushl
out
fucomp
add
mov
in
xor
sub
push
adc
mov
cmp
into
movsl
inc
out
mov
outsl
in
ljmp
sbb
sbb
cmp
jne
arpl
pop
mov
jne
mov
popa
dec
rolb
aaa
es
mov
pop
push
fstl
ret
fidivl
addr16
inc
lock
test
nop
xorl
mov
inc
sub
push
sbb
or
and
je
cmpsb
mov
cwtl
inc
and
jecxz
js
xchg
mov
jecxz
sub
mov
aam
push
push
cmp
insb
lods
fistps
cmp
scas
cmove
lods
xchg
out
lock
jns
insl
sbbb
xor
sbb
lods
jne
inc
pop
nop
pusha
shrb
shll
push
pop
ja
adc
adc
mov
jo
mov
cwtl
sub
pop
push
into
and
mov
cmp
sbb
addr16
pop
xor
out
dec
mov
lret
dec
pop
push
rorb
das
imul
fldt
out
in
jl
jns
jp
in
inc
mov
arpl
inc
xor
push
jno
mov
jp
int
push
es
ret
fstps
in
pop
sti
out
add
sub
js
cmc
testl
out
fs
out
sub
or
mov
shlb
cld
inc
pushf
mov
andnps
aam
imul
hlt
or
dec
pop
mov
pop
mov
dec
loop
push
daa
fwait
sbb
popa
scas
xchg
aam
inc
hlt
aam
mov
ds
out
pop
adc
jno
mov
sub
stc
cmp
repnz
xchg
dec
cld
imul
sub
lret
dec
cwtl
xchg
pushf
leave
cwtl
inc
pop
shl
mov
cs
outsb
push
xchg
cmp
pushf
adc
inc
cmc
and
ljmp
mov
and
jp
cmp
mov
mov
cmp
mov
popa
stos
adc
ret
pusha
nop
lds
outsb
popa
adcb
adc
jbe
pop
pop
push
imull
lret
dec
aaa
les
fistpl
lea
test
add
cs
mov
leave
cmc
rcrl
int3
outsb
das
ret
push
in
shl
sbb
pop
jecxz
jno
jmp
pop
movsl
cmp
xor
sbb
mov
cltd
xor
or
fsubr
outsl
ficoml
push
js,pn
insl
sub
jg
fs
sbb
cmp
negb
mov
or
cmc
hlt
mov
loope
ljmp
popf
repz
in
xchg
int
push
push
and
add
fsubs
mov
pop
loop
xchg
popa
ficoms
xchg
push
inc
outsl
dec
sub
bound
mov
rcll
es
movsb
xor
shlb
stos
xor
in
mov
adc
cs
jns
stos
in
pop
pop
fcmovb
faddl
mov
cwtl
xor
push
rolb
imul
fisttpll
cmp
sub
cli
outsb
sub
loopne
mov
fidivrs
cli
cld
mov
fbld
loope
adc
nop
adc
pop
jle
insl
pusha
lods
aad
mov
push
add
jnp
dec
lahf
sbb
stos
push
add
fs
enter
inc
cmp
test
sete
push
imul
mov
cmpsb
or
loop
scas
daa
je
mov
cmp
xchg
jb
dec
xchg
inc
cmpb
inc
sub
imul
popf
add
jne
pop
mov
inc
xchg
int
fsubrl
dec
mov
jle
dec
stc
mov
mov
mov
fstpl
movsl
xor
push
cmpsb
xor
call
or
fsubl
inc
mov
mov
clc
pop
or
or
int3
outsb
jb
push
imul
pop
roll
leave
leave
aaa
arpl
jp
pushf
push
sub
repnz
and
xchg
xchg
xchg
mov
aas
int3
inc
ja
lcall
cli
loop
xlat
rcrb
fs
xor
test
push
jb
jbe
int3
imul
mov
jge
bound
lcall
pusha
test
in
mov
jns
adc
jge
pop
xchg
loop
dec
add
mov
mov
mov
test
jnp
std
shl
add
adc
push
add
cmp
jno
pop
pop
cmpsb
xor
addr16
or
daa
das
dec
shrb
shrb
call
fcom
pop
int
xchg
sti
insb
shll
jb
pop
iret
mov
out
fs
dec
inc
adc
adc
inc
xchg
pushl
mov
shll
push
add
cmc
push
xchg
jp
mov
push
xor
das
or
aas
or
cld
add
jmp
or
out
xor
arpl
dec
mov
imul
push
int3
inc
mov
mov
arpl
enter
inc
lret
mov
sub
mov
subl
enter
pop
ljmp
adc
dec
out
test
lahf
shlb
adc
sbb
repnz
leave
push
sahf
push
sti
cmp
adc
push
int
data16
and
jp
ss
dec
out
loope
mov
mov
sbb
adc
mov
movsl
bound
ja
mov
mov
xlat
lods
mov
test
iret
popa
xor
inc
cmp
aaa
int3
adc
or
gs
in
ss
ljmp
pop
sub
push
pop
pop
and
ja
mov
pop
adc
stos
cltd
fs
dec
mov
repz
mov
inc
cmc
inc
adc
jb
pop
push
xlat
pop
dec
and
es
cmp
mov
lahf
or
inc
popl
push
dec
in
arpl
and
repz
scas
mov
data16
repnz
inc
shll
lods
icebp
loopne
gs
jnp,pt
pop
movsb
bound
mov
ds
fisubs
add
mov
fsubrl
repnz
sbb
es
fstpl
cmp
sti
in
sahf
insb
mov
xchg
jle
pop
mov
mov
push
mov
mov
cmp
scas
pop
mov
xchg
outsb
ss
das
cmovo
xchg
cli
dec
lods
ret
mov
ficoms
repnz
popa
mov
jns
test
cwtl
sbb
mov
mov
push
or
nop
adc
pop
add
stos
out
ljmp
mov
test
mov
sti
sub
adc
mov
add
mov
mov
scas
or
and
fsubl
pushf
lods
fwait
mov
or
cmp
cmp
adc
mov
rorl
fxch
sub
push
fnsave
xchg
and
int3
adc
jecxz
dec
jecxz
pop
dec
jmp
data16
xor
pushf
sarl
int
idivb
push
push
push
mov
add
mov
lret
test
ret
add
adcl
mov
pop
pop
and
xor
xchg
scas
and
enter
cmc
inc
ficomps
nop
iret
pop
outsl
stc
add
popa
sbbb
sub
push
mov
ds
or
push
cltd
repnz
sub
sbb
inc
xor
xor
pop
sub
icebp
arpl
aas
lock
pop
dec
cmp
clc
xor
fisttpll
decb
push
inc
dec
je
testl
sub
movsb
je
xchg
fadd
sub
rcrb
loope
adc
nop
lret
adc
sbb
pop
cmpsb
rorb
xchg
mov
xchg
and
mov
push
mov
sub
fidivl
subb
iret
dec
xchg
insl
xor
and
sti
lcall
mov
aas
inc
mov
sbb
dec
jp
add
icebp
stos
into
dec
mov
cmp
dec
xor
ja
add
jp
inc
inc
pushf
sbb
adcl
outsb
jmp
mov
call
inc
xchg
mov
xchg
xchg
out
xor
lods
inc
mov
je
dec
cmp
pop
ss
add
shrl
scas
movsb
xchg
pop
pop
sbb
pop
ja
repnz
test
iret
lret
xor
out
pop
push
je
push
pushf
and
jae
jns
xor
aaa
push
nop
mov
aam
and
or
cwtl
out
xor
xlat
pushf
pop
icebp
sub
add
out
and
ret
inc
in
cwtl
fistl
hlt
mov
xor
cmp
loope
mov
jae
cmp
inc
cli
mov
das
xchg
or
jnp
sti
adc
sbb
out
mov
inc
test
sti
xlat
push
pop
fdivr
and
out
lret
clc
or
aas
out
test
int3
xor
lret
ret
inc
push
push
jnp
inc
fwait
pop
insl
fs
repnz
mov
push
dec
test
or
pop
and
and
pusha
std
pop
outsl
cmp
mov
adc
xor
fdivr
popf
cld
out
es
lcall
xor
mov
dec
xchg
arpl
mov
mov
sbb
xor
dec
push
arpl
pop
inc
les
dec
fimull
sbb
aam
xor
mov
loopne
test
daa
or
push
push
cwtl
cltd
xchg
out
enter
adc
int
mov
cli
sbb
fstps
or
out
cld
mov
push
test
lods
mov
jl
sub
pop
xchg
push
add
fisttpll
nop
jo
loopne
in
adc
mov
in
cmpsl
ds
sbb
movb
xchg
adc
pop
adc
loope
xchg
cmp
mov
or
gs
decb
loope
pop
jb
dec
jae
push
jae
sub
test
jnp
fcmove
popf
inc
ja
mov
sahf
push
rcll
xchg
rol
fsubrl
inc
push
xor
cmp
lret
mov
jae
dec
jecxz
inc
pop
fstpt
pop
sub
fs
push
ss
stc
lock
adc
or
add
mov
dec
adc
xchg
in
dec
sub
mov
popf
rorb
inc
or
mov
aaa
int3
aaa
or
ss
lods
sbb
dec
cld
mov
sahf
pop
in
or
mov
inc
sbb
jge
pop
ds
adcl
push
out
jle
or
outsb
cltd
push
shll
sarl
add
push
sub
pop
xchg
stos
xchg
cmp
pop
pop
movsl
fidivrs
mov
into
les
push
fcmovnu
dec
lock
pop
or
add
ret
int
cmp
leave
and
and
push
pop
or
fs
mov
xchg
mov
pop
iret
scas
mov
ret
dec
sahf
mov
mov
inc
or
cmp
cli
test
sahf
dec
push
out
arpl
cmc
mov
adc
xlat
push
dec
aad
outsl
sbb
or
push
jge
jle
pop
cld
cli
pop
rolb
sbb
dec
dec
mov
cld
or
push
or
mov
jl
in
xor
out
lret
aas
addr16
inc
cmp
leave
cltd
mov
popa
pop
jp
fistpll
and
xchg
pop
inc
or
cmp
cmp
pop
push
jge
addr16
add
pop
fimull
ret
mov
xchg
inc
mov
mov
addr16
ja
pushf
push
rcr
jl
int3
inc
and
or
push
adc
shrb
aad
les
jns
cmp
scas
sub
stc
and
mov
pop
lret
sbb
movsb
add
dec
add
push
js
xchg
push
push
lahf
push
jmp
iret
sub
std
fldcw
xchg
cmp
cmp
ret
shlb
mov
icebp
adc
out
and
and
dec
fnsave
popl
popf
pop
out
xor
jmp
xchg
ret
popf
sbb
mov
cmp
lea
push
sub
je
fmull
cmp
pop
jle
jae
mov
pop
push
push
sbb
and
and
mov
cmpw
movsl
subb
adc
dec
sbb
clc
cmp
pop
pop
es
and
out
dec
lret
or
mov
subb
xchg
cwtl
insb
cmp
xchg
jecxz
lret
xorb
fiaddl
pop
add
mov
add
xchg
xor
je
xchg
inc
push
adcl
aas
out
or
mov
push
lcall
lock
jmp
arpl
xchg
insb
add
mov
cmp
mov
ds
xchg
lret
or
xorb
push
sbb
sbb
push
push
jmp
scas
pop
sub
jo
shlb
adc
push
dec
add
iret
lds
push
fistpll
cld
cmp
mov
in
jo
cmp
ficomps
enter
add
xchg
pop
mov
fnstenv
popf
fsts
or
add
pusha
fnstcw
or
in
push
divl
test
push
int
dec
movsb
jbe
fs
cmp
sbb
pop
testl
adc
lods
pop
pop
xor
push
adc
adc
cmpl
adc
inc
sbb
pop
jle
push
dec
negb
daa
es
iret
dec
out
test
cmpsl
and
jae
jne
mov
sbb
sbb
mov
cmp
ror
lret
repnz
jne
int3
shlb
in
lods
jge
inc
push
mov
ss
je
mov
sub
push
dec
mov
sub
inc
cmp
adc
in
ja
adc
mov
jle
addb
insb
jg
jo
jbe
test
fidivs
int
faddp
dec
mov
sub
imul
and
xor
xor
dec
pop
dec
xorl
negb
xor
inc
jecxz
xchg
lods
mov
test
stos
out
enter
sub
or
in
and
jnp
test
ja
sarb
or
xchg
or
movsl
xorl
inc
mov
pop
fcomps
dec
dec
adc
mov
into
ja
mov
and
jnp
xchg
cmpsl
jns
repnz
mov
fnsave
hlt
jbe
lock
push
push
and
add
imul
cmpsb
pop
xchg
es
dec
loopne
dec
inc
mov
movlhps
push
mov
xchg
xchg
je
mov
inc
sub
mov
adcl
sahf
adc
mov
aaa
out
or
out
lds
insb
aaa
aam
loopne
clc
and
xlat
xlat
mov
sti
xchg
add
pop
clc
cmp
hlt
daa
mov
in
in
jge
and
adc
ret
pop
test
lcall
mov
sbb
sbb
nop
mov
cmp
imul
jg
insl
xchg
inc
jb
xchg
jae
adc
sub
sub
push
data16
fs
or
jecxz
inc
inc
mov
cld
nop
lret
jle
lods
mov
pop
or
into
sbb
pop
in
fidivrl
push
fmulp
dec
mov
sahf
test
aaa
mov
pop
daa
dec
shll
sub
loope
and
out
adc
or
rcrl
dec
imul
sahf
int
ss
scas
cmp
arpl
int3
xorl
fs
ja
xchg
leave
mov
adc
push
mov
pop
inc
and
adc
inc
push
jno
cmpsl
mov
lock
scas
stos
fisttpll
rclb
sbb
cmc
xorl
aas
xor
pop
mov
mov
arpl
fs
sbb
sbb
nop
stos
test
xchg
scas
mov
mov
stos
mov
adc
das
shl
pop
cmp
imul
xchg
mov
fildl
jnp
mov
xor
int
adc
aas
pop
sub
and
xchg
sub
cmpb
lea
xor
sti
test
dec
push
xor
scas
xor
movsb
lods
add
mov
fnstcw
mov
cmp
vaddps
adc
cltd
outsl
mov
xor
pop
cmp
fdivl
orb
pusha
cmp
xchg
mov
mov
pop
aas
mov
xor
inc
pop
icebp
jmp
ljmp
push
add
out
popa
mov
jle
cmp
mov
xchg
test
scas
subb
pop
das
push
addl
test
jb
pop
cltd
pop
add
imul
rorl
jns
pop
jns
clc
push
or
fisttps
mov
jns
pop
pop
cltd
or
jge
fwait
loopne,pn
add
mov
cmp
inc
jnp
xchg
pushf
data16
inc
fstps
and
xchg
fidivs
loopne
cmpsl
fldt
and
jmp
popf
mov
fdiv
out
rcr
mov
loopne
mov
jg
mov
dec
xchg
add
sub
das
jbe
dec
push
in
pop
push
loope
pop
sahf
xchg
xchg
jnp
push
xchg
mov
clc
inc
popf
xor
push
or
test
inc
xchg
mov
std
popf
rclb
mov
pusha
and
jnp
mov
xor
adc
aam
add
sbb
mov
inc
sub
or
add
inc
dec
mov
int3
jl
pop
jmp
test
in
add
imul
test
inc
xor
mov
addr16
inc
lret
pushf
sub
sub
xchg
stos
fs
dec
push
lea
and
je
cmpsl
das
std
pop
or
sub
je
jbe
jge
push
cmc
out
ret
int
out
std
clc
push
insb
adc
mov
sti
add
outsb
cmp
ficoml
pop
arpl
pop
mull
popa
cmc
xor
fwait
insl
jae
xor
jg
ror
dec
pop
mov
shrb
clc
push
fisttpl
es
push
and
cmp
sahf
dec
lds
sub
push
or
push
xor
push
popf
add
xor
sub
mov
xchg
call
dec
leave
push
cmpsb
mov
das
xchg
jmp
mov
scas
sarb
loop
mov
es
sahf
das
inc
mov
push
pop
lds
es
cld
mov
pop
pop
movsb
outsb
out
sub
ds
icebp
cltd
xlat
test
hlt
mov
mov
stc
mov
xchg
leave
push
rcrb
cmpsl
loop
lret
out
sub
mov
or
std
add
push
lcall
in
cmp
movsb
out
mov
addr16
fsts
stos
xor
pop
in
adc
gs
in
lods
sub
cmp
or
xor
jne
pop
xchg
sub
fldl
mov
test
pusha
pop
sarb
jmp
cwtl
inc
mov
adc
xor
in
pop
dec
stc
pop
scas
jecxz
mov
sbb
adc
xchg
sbb
icebp
fucomp
push
lcall
loop
imul
jb
jb
or
cli
loopne
outsl
aaa
sub
cmp
insb
add
sbb
pop
test
cmp
jg
test
clc
push
out
fwait
test
imul
outsb
dec
xchg
pop
dec
mov
aaa
clc
inc
inc
cmpsb
inc
stc
pop
int3
out
xchg
mov
pop
mov
mov
test
push
inc
mov
mov
xchg
inc
test
push
sbb
mov
rep
aad
mov
inc
add
cwtl
loope
enter
sbb
jmp
jns
into
push
jmp
out
popa
pop
and
stc
adc
out
jo
sub
sub
int
int
xchg
arpl
xchg
jge
scas
add
dec
clc
sub
mov
gs
clc
jns
movsb
xchg
ret
jnp
in
or
lods
punpckhbw
mov
stc
sbb
loopne
xor
sub
mov
jg
xchg
les
mulb
loop
mov
cmp
push
fsubrs
jle
push
enter
movsb
sub
andb
enter
test
add
add
inc
add
mov
movaps
dec
cmpsl
inc
mov
mov
stos
mov
and
jp
push
jae
or
or
push
aad
adc
mull
adc
jge
xchg
mov
mov
adc
pop
and
mov
sub
adc
mov
cmc
movsl
mov
cmpsb
shll
cltd
subl
test
psubusw
push
sub
je
rcrl
out
lcall
aaa
mov
mov
inc
or
sub
fstpt
add
jl
fdivrs
pop
or
sub
clc
and
sti
mov
lock
dec
popa
pusha
xor
and
xor
repz
pop
xor
lea
aaa
lahf
adc
pushl
mov
or
scas
add
xchg
cld
lahf
test
and
test
mov
ret
add
pop
popf
pop
stos
adc
xorb
mov
and
lcall
push
mov
jno
mov
mov
pop
inc
inc
mov
add
loopne
dec
jle
push
sub
mov
sbb
push
jo
imul
int3
push
jne
jmp
pop
hlt
cmp
inc
lods
dec
cmc
insl
insl
movsb
mov
xchg
adc
add
pop
cwtl
mov
adc
jl
adc
ficomps
add
insb
sub
jmp
out
dec
sub
push
test
lock
xchg
mov
push
fimuls
dec
dec
out
cmp
xchg
dec
pop
and
sbb
sub
outsl
stos
xchg
push
lret
cmp
jne
and
sbb
sbb
sbb
add
sub
and
mov
push
jne
dec
rep
cmpb
add
insl
jecxz
pop
pop
mov
or
jnp
mov
outsb
add
jmp
pop
xlat
sub
cmp
mov
jne
jne
mov
dec
std
repnz
test
mov
test
arpl
jecxz
das
adc
mov
movsb
dec
jbe
or
pop
xchg
pop
jmp
xchg
test
out
cmp
inc
sti
aam
aad
orl
pop
mov
jp
cmovae
cmp
inc
xchg
ja
setnp
pop
pop
dec
push
cmp
sub
js
sbb
xor
pop
cs
outsl
mov
sub
subb
jmp
mov
or
ljmp
imul
sub
fstl
mov
lock
cmc
in
adcl
mov
jecxz
hlt
sub
dec
mov
das
mov
add
cmp
pop
mov
sbb
ficomps
fs
pop
dec
mov
mov
jns
jbe
mov
jg
fs
cmp
xchg
cld
loopne
jecxz
lds
push
leave
pop
je
xchg
push
repnz
pop
push
xchg
jg
aas
dec
xor
push
jl
popa
test
sbb
pop
xchg
cmp
xlat
mov
jmp
cmp
and
loop
push
push
and
xchg
xor
dec
pop
adc
add
lods
xchg
jns
aad
out
or
repz
add
adc
mov
adcb
xchg
sbb
enter
out
std
addb
mov
mov
jo
dec
lea
xlat
mov
sub
pop
idivb
cmpsb
in
fidivrl
cmp
testb
jb
out
mov
mov
das
gs
repz
repz
arpl
into
insb
mov
cmp
and
std
add
divb
fidivrs
das
ljmp
cld
ret
pop
sahf
outsb
cmpsb
orb
and
dec
pop
clc
adc
clc
cmp
mov
in
scas
push
sub
lcall
inc
int3
xchg
mov
or
and
loope
push
push
fistps
mov
ljmp
stc
orb
mov
inc
iret
sbb
bound
inc
xchg
movl
or
push
repnz
into
nop
xchg
shll
mov
cmp
jecxz
and
pop
adc
push
std
mov
cmpb
sub
movsb
loope
es
xor
jbe
loop
jl
fidivrl
xchg
gs
mov
movsl
mov
andb
jmp
add
and
or
cmp
mov
and
imul
add
xor
sbb
inc
mov
cmpsb
cmpsl
movsb
fnstcw
sub
out
ret
push
jge
add
jnp
loopne
daa
leave
out
in
repz
add
ret
hlt
movl
arpl
pop
out
loopne
push
mov
push
or
pop
sub
nop
test
pop
in
mov
iret
and
mov
jbe
jecxz
sbb
fcmovnbe
pop
arpl
lds
aad
or
and
ret
std
outsl
int
mov
jae
shr
jecxz
loopne
dec
hlt
std
pop
pop
arpl
ficomps
adc
sar
mov
dec
ja
mov
mov
add
mov
sub
mov
add
pop
stc
fimull
ja
lea
testb
and
xchg
mov
daa
ds
sbb
mov
inc
jae
jns
aas
pop
call
mov
int
arpl
sarl
sarl
and
add
or
movb
adc
xchg
inc
or
lcall
lahf
jg
add
stos
cs
dec
mov
sub
lcall
or
fbld
mov
in
inc
test
push
out
push
sub
fiaddl
inc
pop
fs
xor
adc
pop
sub
push
iret
std
gs
mov
dec
sbb
iret
jae
loopne
ss
shlb
xchg
jmp
test
dec
mov
xchg
xchg
cmc
mov
pop
lock
rorl
rclb
fwait
mov
mov
dec
push
lea
jne
in
gs
repnz
pop
shlb
imul
push
xor
xchg
mulb
je
ficoml
mov
mov
jl
arpl
imul
mov
mov
push
pop
adc
shl
or
cmpsl
fs
enter
out
movsl
pop
inc
ja
dec
into
mov
cmp
ret
outsb
insl
das
inc
sti
push
lea
jmp
pop
test
int
lock
sub
jnp
xchg
push
fwait
pop
xor
cmp
enter
cld
insl
sub
cmp
adc
clc
jb
test
stc
adc
add
mov
pop
movsb
arpl
fsqrt
add
jno
fdivs
and
std
push
daa
push
or
xlat
decl
daa
mov
mov
aaa
out
sbb
and
leave
cmc
insl
inc
jecxz
xchg
push
dec
out
cmp
ja
cs
jns
mov
inc
test
imul
adc
popf
notb
ja
push
test
or
addl
pushf
jno
mov
mov
lds
jno
mov
inc
call
xchg
lods
movsl
pop
stc
ficomps
mov
jne
popa
mov
dec
inc
push
and
fimuls
sbb
push
scas
xor
xchg
int
jg
cwtl
ljmp
inc
add
sub
cltd
fsubrl
popa
adc
xor
pmulhw
jecxz
fdivl
lds
xchg
lds
sti
mov
aas
adc
mov
inc
out
jge
addr16
cwtl
outsl
mov
dec
sbb
out
pop
mov
ljmp
push
loopne
add
pop
ds
add
adc
andl
sub
in
movsl
fsub
push
icebp
jns
loope
ficoms
ljmp
sti
in
test
sti
and
dec
dec
loopne
femms
dec
dec
pop
ds
cmp
jb
dec
push
pop
or
inc
sub
and
xorb
xor
lods
mov
pop
dec
cli
popa
test
icebp
imul
sbb
stos
pop
xchg
or
out
ret
and
imulb
fmul
frstor
sbb
pop
js
rclb
pushf
xchg
xchg
icebp
hlt
cmp
sbb
xlat
lods
clc
lock
mov
fnstenv
aam
jb
mov
sti
xchg
sti
dec
inc
cmp
sti
imul
call
push
test
xor
inc
inc
lock
mov
mov
push
ja
lret
dec
jb
and
lock
xor
fsubs
inc
xor
cmp
jb
sti
jp
sbb
adc
adc
jmp
repz
fdivrs
add
ds
bound
xlat
push
in
adc
mov
jne
cmp
ret
mov
ds
sub
and
pop
mov
gs
out
inc
and
and
fs
mov
rcrb
xchg
int
out
stc
repnz
pop
sarl
icebp
mov
addb
loopne
sbb
std
xor
scas
sbb
pop
push
add
popf
pop
movsl
jne
jo
subb
pop
and
je
inc
fimull
orl
aad
repz
daa
ss
outsl
mov
shr
jne
add
adc
inc
mov
ret
icebp
mov
mov
and
sbb
ljmp
mov
dec
mov
cmp
xchg
add
bound
inc
or
lods
pop
jg
aad
ret
mov
repz
cmpsl
adc
push
jb
les
shlb
pop
loop
mov
hlt
dec
and
cli
adc
shlb
cmc
nop
inc
push
mov
push
sub
xchg
mov
data16
aad
dec
out
mov
ret
jl
shll
lret
or
pusha
xchg
xor
cmpsb
pop
sub
cld
cmpb
lods
insb
pop
and
lret
lret
lods
fdivl
jns
in
jnp
pop
enter
mov
jo
rcl
ja
gs
mov
xchg
add
sbb
pop
push
pop
leave
loop
mov
xchg
stc
nop
sub
xor
push
adc
adc
repz
xor
outsl
cmp
add
fs
addr16
movsb
add
movsb
xor
test
out
sub
jmp
sub
jae
addr16
mull
loope
sub
decb
inc
imul
shl
cmc
cmp
insb
push
movsl
sti
lods
xlat
scas
es
movsb
sbb
push
mov
xchg
iret
shrb
movsl
push
xchg
stos
push
addr16
leave
cmp
sbb
popa
sbbb
ret
xchg
pop
cwtl
jae
lods
pop
sub
stos
sub
pop
dec
adc
mov
mov
xchg
cmpsb
sti
jne
sub
jno
sar
js
sub
or
inc
cli
pop
xchg
insb
aam
mov
xor
lcall
je
loope
pop
bound
mov
sub
pop
inc
sbb
pop
repz
js
ljmp
js
push
push
push
cld
push
pop
xchg
add
adc
pop
scas
push
addr16
sbb
push
dec
mov
and
xor
adc
mov
xor
and
stos
into
push
sbb
cmp
pop
scas
jae
and
outsb
je
rcrl
repz
fdivs
cmp
sub
aam
xchg
lcall
cmp
jg
mulb
fprem
cmpsb
jae
lock
jecxz
cmpl
iret
ja
int3
stos
scas
jno
push
add
cld
jb
aad
pop
xor
popa
pop
cmc
xchg
movsl
add
sbb
inc
add
test
stos
aas
mov
es
xor
xchg
xor
sub
cmpsb
jo
ss
cmp
xchg
mov
fcmovnu
sbb
add
jae
push
loop
int
cmp
ret
dec
cltd
lea
ret
fidivl
mov
les
shrb
int3
jl
sbb
mov
push
and
popa
adc
shr
mulb
add
cmp
mov
or
lret
lods
imull
mov
daa
mov
fsubrl
and
std
xlat
jno
push
jg
clc
push
jg
aam
rolb
popa
pop
and
loopne
mov
pop
pushf
enter
push
fmull
psubusw
add
fs
pop
push
push
sbbl
jnp
popf
jnp
pusha
jle
mov
shlb
pop
add
xchg
and
jo
inc
cwtl
imul
shl
leave
ljmp
pop
mov
jecxz
js
mov
sbb
daa
sbb
sarb
mov
mov
test
jbe
sbb
jle
and
xor
pop
jns
arpl
popf
pop
jle
mov
andnps
sbb
popa
cltd
sub
sub
cwtl
xor
dec
mov
ds
repz
push
xchg
cmp
outsb
ds
mov
add
movsb
popa
cwtl
xor
mov
repnz
xchg
int
or
adc
fbstp
nop
outsb
push
adc
or
jecxz
aaa
mov
mov
pop
jmp
out
lret
mov
inc
xchg
adc
int3
sub
dec
sub
icebp
ret
sbb
jmp
jecxz
inc
lret
cmpl
sahf
inc
std
aam
adc
dec
mov
inc
loop
iret
adc
push
sub
imul
adc
sub
ja
mov
out
cmp
dec
push
pop
pop
dec
pop
js
insl
and
cmp
iret
icebp
cmpl
push
rorb
out
daa
cmpsb
jp
loope
xlat
int
inc
cmpsl
push
outsl
pop
add
push
mov
es
jb
fstps
out
lahf
adc
pop
adc
xchg
sub
out
movsl
dec
gs
test
xchg
jg
rcr
jmp
or
testb
mov
sbbl
into
add
adc
js
addb
xchg
popl
lock
fwait
sysret
scas
and
ficoms
nop
push
pop
jno
cmpsb
mov
and
aam
nop
push
insb
mov
push
les
xchg
adc
lods
addr16
in
dec
popl
lea
pop
dec
lods
cmp
and
rol
or
adc
fnstsw
std
jl
js
xlat
shll
int
popa
test
mov
pop
pusha
mov
jo
mov
push
out
movsl
or
pop
mov
addr16
mov
lret
cli
imul
imull
cmc
inc
sub
mov
and
jecxz
mov
cmp
loope
mov
into
fists
ljmp
lds
stc
push
scas
lods
ds
pop
cmp
repnz
fcoms
mov
cld
push
inc
rcll
inc
adc
mov
jne
jg
imul
mov
in
cmp
iret
dec
adc
push
insl
inc
xchg
addr16
cmc
pop
lcall
out
cwtl
add
sub
pop
dec
inc
xchg
fbstp
cmp
mov
dec
lret
stc
int3
lea
sub
jbe
mov
cmp
mov
adc
aaa
mov
rcr
stos
pop
scas
fcoms
subl
scas
mov
outsb
fs
adc
mov
cmp
jp
push
or
xchg
mov
rorl
mov
outsb
cmp
cwtl
lahf
inc
fcoml
inc
ret
inc
ja
negl
mov
adc
inc
mov
sbb
push
pop
mov
lods
stos
sub
dec
xchg
jg
leave
and
lea
pop
call
pop
test
shll
mov
lcall
nop
mov
mov
loopne,pn
cmpsb
lret
pushf
addb
xchg
sbb
in
inc
and
mov
pop
add
popa
std
fldenv
jecxz
pop
fsubl
shlb
add
xor
pop
sahf
ja
xor
or
das
in
sub
hlt
movsb
jmp
out
lcall
fwait
stos
pop
inc
jmp
enter
les
sahf
pop
jno
mov
xor
sbbb
sbb
pop
fmuls
add
fwait
adc
fwait
push
js
lock
sub
pop
sbb
into
imul
int3
cli
inc
add
and
cmpsl
xor
pop
les
mov
cli
push
jns
mov
dec
pop
loopne
scas
add
scas
lock
movsl
or
out
sbb
adc
push
sbb
pushf
in
jno
test
mov
mov
pop
xchg
jl
inc
lock
decl
imul
and
in
fwait
mov
repnz
dec
mov
push
out
lock
cmp
push
mov
stc
test
es
or
imulb
les
and
dec
push
mov
push
pop
sub
cmp
mov
aas
imul
dec
inc
cs
scas
and
adc
test
adc
dec
icebp
test
loopne
pushf
pop
mov
sbb
mov
movsb
inc
cmpsb
sti
addb
rorb
jno
rcr
outsl
test
cs
aas
cli
xor
aad
inc
xlat
nop
and
mov
loopne
cmp
decb
add
sub
addr16
and
gs
repnz
lods
jns
sub
or
push
inc
fcmovb
jmp
mov
or
sbb
test
mov
mov
cmp
rcr
pop
lret
sbb
cmpsl
xor
push
cmpsl
popf
in
aas
jns
negl
mov
or
mov
cmp
xor
call
clc
inc
sub
pushf
cli
sub
adc
cmp
outsb
pop
enter
xchg
aaa
in
inc
dec
roll
lret
xor
mov
mov
jecxz
outsb
ret
push
inc
sbb
add
out
js
inc
xchg
and
sub
and
cltd
sub
ja
cmp
sub
pop
fimull
cmpb
test
imul
pop
mov
add
and
int
push
addr16
inc
inc
push
inc
xchg
push
nop
out
inc
sbb
jg
pop
imul
pop
xlat
inc
sbb
mov
lea
lods
push
adc
aad
divb
ss
fsubs
sti
dec
insl
push
ficomps
movb
pop
leave
dec
je
in
in
push
movsb
hlt
lret
aas
mov
push
mov
test
add
jmp
xchg
cmp
inc
sbb
test
push
call
pop
fsubrl
xor
jb
out
dec
jecxz
dec
mov
movsl
and
push
push
cmp
lahf
popl
add
mov
xchg
mov
and
or
sbb
pop
fst
jnp
out
sub
add
or
das
outsb
pusha
in
mov
jbe
lods
sub
insb
cmp
push
fnstcw
sbb
clc
lret
aam
rcr
out
sub
pop
pop
or
jmp
jae
clc
leave
inc
pop
out
dec
mov
xor
mov
cmc
push
or
lea
pop
fdivrp
pop
jno
out
fcomps
shr
subl
sbb
jno
jae
push
jnp
xor
and
arpl
cmp
and
push
push
pop
jmp
shrb
data16
pop
inc
and
lods
ljmp
sub
mov
cmp
je
jno
cltd
xchg
or
fsts
or
jle
rep
mov
rcrl
imull
mov
pop
es
push
fcoms
jg
xlat
scas
cmp
test
fs
sub
mov
pop
idivl
xchg
cmp
mov
xor
ja
or
dec
sti
popf
sbb
cmp
jg
ds
pop
push
jbe
pop
es
pop
insl
push
sbb
lcall
push
lods
es
add
xorb
push
dec
ja
in
insl
ss
sbbl
or
pop
pop
push
push
mov
daa
lahf
mov
test
fstl
mov
in
cwtl
popf
int3
and
sahf
out
lahf
inc
and
add
mov
push
lahf
ljmp
std
popf
das
shlb
xchg
mov
out
xor
push
repnz
sbb
cmp
addr16
call
inc
stc
dec
push
mov
sub
aam
add
iret
int3
lcall
lea
sbb
add
push
lahf
sbb
cmpsl
inc
scas
shll
jl
xor
inc
cmp
pop
xchg
pop
mov
in
xchg
push
add
mov
fs
lahf
movsl
movsb
push
cmp
movsl
mov
leave
popa
dec
adc
rcrb
or
pop
aaa
mov
shr
cltd
inc
inc
push
stos
icebp
lds
mov
in
sub
dec
daa
pop
dec
ja
cmpb
fldenv
dec
cmp
adc
and
addl
sub
nop
pop
jg
cmpsb
xor
out
mov
or
cmp
sub
or
sbb
sbbl
xor
adc
xchg
and
jbe
mov
call
fildll
pop
mov
movsb
loope
loop
cmp
aaa
mov
adc
mov
repnz
pop
sub
mov
xlat
mov
aaa
push
xlat
jmp
lcall
inc
and
dec
add
shll
cmp
mov
std
nop
mov
loope
stos
out
inc
test
or
dec
mov
dec
add
add
and
push
pop
cmp
out
dec
aam
push
filds
std
mov
pop
xchg
inc
adc
rcr
push
movsl
sub
xchg
sbb
inc
fcmovnb
dec
loope
xor
int3
xlat
ret
push
gs
xchg
mov
cmp
mov
stos
mov
push
enter
cmp
mov
adc
aad
xor
or
mov
icebp
out
cmp
movsl
xor
mov
jae
mov
enter
cmp
loope
loope
dec
test
ds
xor
ds
mov
dec
std
inc
push
test
enter
inc
lods
scas
fmuls
sti
sbb
xor
xchg
sub
arpl
pop
popf
adc
test
cli
pop
inc
js
outsl
add
cmpsb
push
cmp
adcl
in
ret
stos
mov
lret
mov
sbbb
in
popf
xchg
aad
add
jne
mov
loopne
vdivps
les
aas
mov
ret
mov
mov
out
pop
loopne
int3
pop
ja
xor
insb
lods
cwtl
daa
lods
add
mov
mov
andl
stos
inc
into
and
cltd
loopne
aad
xchg
jns
cmp
inc
scas
jg
sbb
mov
pop
jbe
negb
cmp
lock
xor
loopne
mov
lahf
lods
inc
scas
jl
push
lods
mov
and
clc
icebp
xlat
inc
in
je
dec
xlat
mov
xchg
fs
ficomps
push
enter
pop
cs
hlt
sti
cli
movb
std
test
ljmp
das
incb
dec
mov
les
sbbb
xlat
test
ljmp
ficoml
jno
add
out
push
or
pop
aad
test
cld
inc
jbe
or
iret
push
jmp
push
jl
add
test
in
sbb
cmp
roll
and
jle
mov
les
jbe
roll
in
add
add
adcl
aas
cmpsl
sbb
mov
jo
rcll
dec
mov
adc
pop
sub
jo
sub
jo
leave
call
pop
inc
mov
cmp
pop
pop
sub
andl
sahf
mov
adc
push
stos
dec
mov
push
sbb
sahf
aad
push
sti
cs
push
orb
dec
bound
cmpl
cmp
cmpsb
sub
fstp
sbb
add
clc
push
ret
pop
jle
in
cmc
mov
lcall
cmpsb
movsb
or
add
clc
cmc
mov
in
or
sub
adc
rclb
inc
psubd
mov
aam
iret
cli
in
dec
stc
sti
push
repnz
cmovge
xchg
fmull
ficompl
insl
xor
and
ds
scas
divl
in
movsl
ljmp
dec
ds
sub
xchg
adc
add
imul
xor
adc
mov
push
dec
mov
xchg
ficompl
out
and
movsb
daa
fisttps
popf
adc
outsl
ret
mov
mov
lds
mov
mov
test
lahf
pop
push
and
xlat
sbb
dec
jmp
mov
dec
int3
enter
sbb
out
aaa
push
xor
data16
loopne
mov
mov
rcrb
out
mov
pop
jg
mov
mov
fldenv
adc
in
add
cli
clc
fidivrs
sbb
lret
pop
es
lock
cmpsb
and
xor
aas
into
inc
pop
cmp
push
push
repz
leave
int3
rcrl
dec
mov
aas
xchg
aad
out
pop
or
and
pusha
push
addl
test
mov
fmulp
cmpsb
xchg
dec
movsl
rcrl
lea
enter
inc
lock
sahf
ljmp
frstor
jmp
push
sub
movsb
xor
jmp
sahf
inc
or
xor
loop
insl
inc
ret
or
and
fcoml
mov
movsb
rcrb
cld
jnp
add
dec
out
jae
add
push
dec
movsl
stos
aaa
loop
sbb
add
into
and
and
lret
pop
cmp
addr16
xor
mov
int
add
fsubrs
mov
mov
fwait
out
pushf
scas
pop
mov
push
push
xchg
inc
mov
repz
mov
dec
in
fwait
cli
jmp
cmp
pusha
nop
cmp
pop
xor
xchg
cmp
xor
mov
mov
cmp
push
lcall
testb
fisubl
test
aam
xchg
xor
push
adcl
test
gs
inc
mov
cli
xor
adc
xor
daa
sub
lret
fisttpll
push
shrb
mov
mov
xor
sub
sub
rcrb
scas
addr16
aam
or
pop
pop
into
mov
adcl
insb
add
cmc
xor
loopne
jnp
in
push
pop
xchg
ret
shrb
repz
lahf
int3
fldenv
sbb
pop
cld
mov
xchg
fiadds
push
xorb
lahf
and
push
lds
mov
fcmovb
lret
push
mov
aad
cld
into
xchg
aaa
mov
add
ret
mov
ja
mov
cmp
xchg
lea
xor
dec
test
movsl
lret
std
push
out
adc
mov
clc
fsts
cwtl
mov
xlat
add
loopne
mov
pop
cmp
sahf
xor
add
or
ret
cmc
jl
shlb
insl
cmp
add
push
xor
aas
popa
sub
cld
loop
lods
cs
adc
popa
lds
add
jb
bound
push
push
adc
cmpsb
lods
mov
stos
mov
pop
xchg
sbb
dec
loopne
mov
imul
test
cs
jns
and
sbb
into
mull
mov
ljmp
popa
or
data16
pop
adc
lret
iret
xchg
addr16
jns
pop
movsl
mov
ljmp
fidivs
in
cmp
popf
out
adc
sub
shl
dec
dec
xchg
adcl
jmp
fcomps
mov
pop
js
fcmovu
xchg
mov
adc
leave
inc
mov
jne
idiv
lock
test
das
xchg
adc
and
xchg
lods
outsl
scas
push
add
or
pop
pop
test
cmp
jnp
adc
xor
out
or
pusha
push
movsb
out
pop
pop
pop
jle
and
jmp
xor
arpl
aas
jbe
lods
mov
jb
arpl
out
jmp
pop
dec
add
or
int
push
cwtl
adc
mov
xchg
cli
push
mov
jge
out
cmp
neg
loopne
mov
xor
cld
push
out
dec
int
test
and
repz
stc
and
cltd
add
cmpsb
xchg
mov
frstor
jbe
xor
and
cmpb
pop
mov
mov
stos
lds
je
cmc
hlt
insl
movsl
sbb
insb
mov
push
push
into
or
imul
mov
shrl
jne
push
push
push
stc
das
mov
and
dec
jne
fcomi
loopne
sub
push
lahf
cs
sbb
pop
popf
outsb
ja
xchg
jne
mov
punpckldq
cltd
scas
leave
push
jo
mov
in
or
push
sbb
push
rcrb
popa
jp
pushf
sahf
mov
or
ss
and
cmpsb
inc
dec
adc
out
lret
xchg
rcrl
repz
aad
inc
inc
stos
fldenv
jnp
call
sbb
lahf
xchg
cmpsb
shll
aas
inc
cmp
mov
mov
jmp
insb
out
mov
test
jp
cmovno
loop
rolb
pop
sbbb
in
xor
sbb
cmc
ss
add
inc
pushf
add
cli
dec
mov
dec
sub
adc
fwait
hlt
push
test
push
adc
or
dec
adc
cwtl
hlt
inc
test
fucomip
jo
jmp
mov
pusha
xchg
sub
lods
out
aad
and
push
pop
imul
insb
or
stc
outsl
aaa
mov
push
filds
fdivs
ljmp
stc
cltd
pop
xchg
xor
pop
fists
xor
mov
or
inc
sbb
lock
in
pop
jae
or
lret
leave
xchg
xchg
lds
idivb
jnp
or
mov
mov
stc
jno
adc
lret
xor
cld
push
inc
das
xchg
out
test
lds
jnp
fsubp
out
test
pop
fstpt
stc
ficomps
cmc
addb
jns
int
test
test
pusha
mov
mov
lock
inc
fldcw
mov
and
iret
push
stos
pop
xchg
cmp
mov
dec
test
pushf
out
outsb
cltd
dec
aaa
pop
repz
repz
out
xchg
idiv
push
dec
mov
cld
cld
es
arpl
push
push
jg
lret
push
or
shlb
fcompl
jg
push
mov
rorl
test
leave
push
loope
les
add
adc
bound
adc
pop
inc
or
lahf
ret
mov
pop
pop
insl
mov
xchg
xchg
mov
fmull
data16
xchg
arpl
ljmp
sbb
jmp
roll
mov
cwtl
mov
sub
js
or
les
test
xchg
outsb
sub
dec
or
pop
fldenv
roll
jno
cmpsl
dec
jns
in
xchg
scas
lods
jo
addr16
cmp
pop
or
push
add
xchg
mov
divb
xchg
fcomps
std
insb
movsb
aad
or
sub
fcomi
jge
mov
fbld
lds
cwtl
xchg
sub
xorb
or
cmp
add
xchg
pop
inc
mov
xchg
inc
iret
fstenv
xchg
fsubrl
lods
daa
dec
das
fwait
sub
repz
test
mov
jl
fdivrl
rcll
and
jo
movsl
adc
dec
daa
fnstcw
data16
and
sub
pop
adc
test
adcl
mov
sub
lock
mov
loop
push
adc
add
pusha
push
fnstsw
pop
adc
dec
lea
in
dec
cmp
inc
mov
outsb
mov
cltd
xchg
nop
bound
or
enter
push
pop
sub
enter
daa
inc
out
xchg
xor
adc
inc
mov
add
outsl
cld
pop
pop
lea
jb
dec
mov
lods
pop
out
dec
jne
iret
lret
xchg
inc
push
addr16
jbe
in
loopne
jae
nop
out
in
lods
xorl
xchg
mov
push
or
inc
lret
adc
data16
arpl
xchg
xchg
js
nop
fstl
rclb
add
ds
loop
lock
mov
repnz
sti
xchg
inc
int3
iret
movsb
test
in
and
rclb
push
adc
adc
xchg
lock
lods
jnp
mov
stc
lcall
xchg
movsb
or
in
cmc
pushf
mov
sub
je
movsl
push
push
sub
out
or
cwtl
cmp
aad
test
das
lock
and
in
ljmp
cmpsl
sbb
sbb
scas
sbb
aam
outsb
lds
add
loop
xor
loope
test
inc
hlt
in
pop
xchg
push
add
stc
rol
inc
dec
push
inc
ds
pop
cmp
out
mov
lds
mov
or
lods
cmpsl
enter
push
mov
and
dec
stos
xchg
shll
sub
mov
xchg
jge
mov
leave
xchg
lea
pop
xor
fists
out
push
pop
adc
and
lods
popf
cli
outsb
lcall
cmp
cmpsb
xchg
cli
cmp
cmp
and
dec
ret
ffree
fcmovb
jae
dec
icebp
cmp
push
jnp
daa
add
xchg
sbb
xchg
aaa
mov
adc
inc
pmaxub
mov
int
pushf
xor
stc
fsubrs
sub
or
mov
and
pusha
sarl
aaa
cmc
or
repz
dec
incb
out
nop
popa
pusha
lea
mov
mov
inc
ss
int3
mov
xlat
jl
sub
popl
inc
xchg
adc
cmp
xchg
push
lret
addr16
xor
inc
cmp
sbb
enter
and
test
dec
sbb
dec
test
push
mulb
inc
push
push
mov
icebp
or
outsb
mov
jno
js
and
xlat
ja
outsl
clc
lods
in
jns
idivb
popa
les
xchg
pop
sbb
std
ret
and
movsl
aas
sbb
dec
je
xlat
push
inc
inc
ret
jl
push
pop
test
push
scas
insb
leave
mov
negb
add
pop
sub
scas
sub
or
fimuls
cs
mov
jnp
jge
jno
mov
mov
cmpsb
loopnew
loop
rorl
outsl
xor
mov
outsl
arpl
sub
stos
mov
les
sbb
aad
inc
dec
repz
push
mov
inc
out
cmpsl
sbb
cli
and
push
add
in
mov
mov
jg
push
dec
icebp
inc
xchg
mov
scas
cmp
xor
cltd
push
in
pop
pop
mov
cltd
dec
xor
int
sub
xlat
notb
movsl
mov
lahf
dec
dec
dec
mov
mov
jo
pushf
sbb
adcl
sbb
cmp
sub
sbb
bound
mov
test
dec
sbb
cmp
imul
dec
cmpsb
imul
mov
aam
popf
pop
mov
sub
pop
push
dec
add
add
dec
stos
nop
shl
out
stos
scas
mov
ss
aad
pop
rol
xchg
mov
mov
dec
pop
mov
sahf
push
or
mov
sub
out
xor
pop
cmpsb
sbb
popa
out
sbb
push
outsl
pop
mov
push
mov
repz
add
movsb
sti
arpl
xchg
xchg
xchg
out
leave
mov
dec
pusha
push
das
push
repz
jmp
pop
pushf
cmpsb
or
and
and
decb
shlb
std
and
fsubl
lods
insb
mov
shrb
push
in
add
icebp
or
test
dec
or
mov
lods
mov
int3
jl
scas
movsl
xlat
xchg
ljmp
loopne
push
aad
fisubl
ret
imul
cmp
inc
xchg
xor
pop
call
daa
out
cmpsb
xor
cmp
fiaddl
mov
movsb
addl
mov
mov
subl
jmp
xor
jp
cltd
and
push
daa
cli
mov
push
mov
jo
xor
jg
cmp
mov
jl
gs
bound
cmpsb
xchg
sbb
fnstsw
jo
jb
xchg
nop
mov
jo
fldt
jne
mov
push
movsb
adc
ljmp
push
scas
or
or
arpl
mov
fisubrs
or
lock
pop
dec
push
movsl
call
stc
mov
mov
shlb
pop
push
push
inc
dec
and
in
inc
scas
xchg
xchg
pop
ror
pop
xchg
and
rcrb
sahf
pop
outsl
xchg
lds
out
nop
xchg
jge
cmpsb
add
cmp
repz
cltd
cli
mov
clc
sbb
adc
cmc
pop
fisubrs
mov
xchg
mov
cmp
lcall
negb
in
jmp
in
jne
add
lahf
imul
sbb
cmp
push
mov
sti
jecxz
out
mov
cmpsb
push
sbb
jne
daa
mov
shll
mov
mov
fldt
jae
xor
aas
inc
outsl
push
add
ss
add
in
in
or
aas
mov
addb
add
adc
imul
push
push
sbb
pop
sub
fistl
push
mov
pop
sub
imul
rolb
ljmp
xchg
and
pusha
arpl
pop
outsl
nop
jg
mov
dec
xor
pop
cli
sub
jns
inc
sbb
cs
adc
sbbl
xchg
push
mov
mov
jns
lcall
pop
or
ljmp
mov
sub
lds
aaa
cmpsl
test
pop
stos
inc
fwait
pop
cmp
xchg
shlb
adc
enter
les
sbb
mov
fildll
insl
jno
test
lahf
fisubl
pop
insl
out
fwait
mov
out
out
mov
mov
adc
jbe
dec
lea
rcl
es
dec
lret
sub
dec
out
jae
dec
xor
loop
or
icebp
repnz
fnsave
gs
cmp
xchg
sub
jno
push
ret
push
xchg
loop
mov
dec
repz
imul
fwait
xorl
mov
cltd
cmp
xchg
es
xchg
lret
bound
or
shlb
cmpsl
adc
cs
pop
cs
fimuls
add
and
enter
scas
mov
nop
pop
fs
sub
mov
dec
xchg
mov
fs
outsl
in
sbb
flds
sub
insl
jae
subb
mov
aam
test
decb
aam
out
out
and
push
rorb
daa
pop
push
jmp
ret
adc
scas
push
imul
in
mov
mov
push
sub
ljmp
mov
push
test
lods
adc
aas
into
ja
mov
jle
out
sub
dec
adc
div
sub
das
in
sub
roll
pop
jbe
ljmp
outsl
mov
nop
roll
mov
shlb
sbb
xchg
imul
sub
ljmp
or
jb
sti
inc
lahf
adc
cmp
mov
and
sbbb
or
cmc
mov
pop
notb
inc
jns
es
dec
xorl
fs
mov
xor
inc
xorl
in
imul
mov
call
aaa
lret
jle
loop
pop
and
sub
cld
dec
push
or
jmp
out
ret
jle
lret
and
popa
push
sub
jle
pop
mov
arpl
sub
mov
mov
dec
into
pusha
ja
aas
movsb
or
and
jnp
jmp
cmc
jecxz
jo
push
xchg
out
into
push
loope
roll
icebp
pop
rcl
sub
lret
adcb
mov
int3
lods
xor
and
bound
dec
aad
imull
push
ljmp
cwtl
cmp
nop
pop
add
sub
jb
popf
mov
cmp
insb
mov
sbb
leave
mov
mull
stc
or
or
sub
aas
adc
mov
or
test
xchg
test
lcall
pop
test
mov
pop
test
mov
mulb
mov
mov
xchg
cli
imul
or
orl
push
mov
fsubr
mov
ds
or
lods
dec
add
sub
jp
call
jno
adc
sahf
or
cmp
push
or
inc
jg
pop
in
adc
xor
cmp
push
push
pop
mov
sub
arpl
test
mov
add
adc
and
test
lret
sarb
push
ds
loop
fucomip
sbb
stos
orl
scas
mov
pushf
jmp
into
jno
ss
adc
adc
mov
out
jns
mov
rclb
sub
hlt
add
cpuid
xlat
test
push
mov
xor
adc
fdivs
dec
loop
or
je
es
shl
push
add
inc
scas
inc
cmpsb
cld
inc
dec
or
icebp
mov
mov
mov
sbbl
mov
xchg
mov
cmpl
adc
fiaddl
into
push
inc
sbb
bound
mov
adc
push
lret
inc
icebp
xchg
jecxz
cltd
bound
stos
inc
scas
ficoml
cltd
sub
imul
or
arpl
enter
sar
cltd
push
loope
lods
rclb
add
je
loopne
fs
mov
xchg
jle
adc
adc
cwtl
mov
xchg
push
stc
test
add
cmp
cmp
jae
adc
jg
frstpm(287
push
fs
and
in
lods
sub
lea
sub
shrb
push
aam
outsl
adc
shl
cmp
out
lahf
jl
sar
mov
sub
adc
dec
push
stos
out
jns
jp
mov
in
fs
jle
adc
push
jmp
sbb
std
repz
int
sub
hlt
repz
sti
mov
imul
mov
cmp
mov
mov
lods
test
test
push
sub
shlb
mov
test
cltd
das
out
or
fnstenv
fnsave
jg
inc
mov
sbb
icebp
js
testl
outsb
pop
mov
cltd
out
test
repz
push
push
out
ja
sti
xor
repz
lret
cmpsb
mov
mov
jg
pop
sub
and
ret
dec
sahf
xadd
pop
adc
ds
lock
popa
cmpb
in
roll
dec
sbb
fbld
add
and
scas
jle
cmp
pop
mov
lods
dec
test
ss
pop
mov
cld
daa
push
dec
sbb
cmc
push
cmp
adc
xor
cs
jne
mov
int
ss
sbb
scas
jecxz
daa
mov
add
lock
lock
aam
inc
cs
jmp
aam
mov
sti
mov
sbb
stos
mov
outsb
insb
push
popa
jb
outsb
aad
int
dec
fs
mov
or
imul
pop
add
dec
iret
outsl
lret
cmp
lds
decl
push
pop
out
std
mov
lods
cmp
stos
mov
scas
imul
mov
incb
sub
sub
fmuls
adc
push
clc
inc
mov
mov
enter
movsb
clc
or
or
cmpsl
jae
sbbb
inc
jo
push
jbe
hlt
cs
push
mov
aad
das
sar
scas
push
fucomi
xchg
adc
mov
das
test
xchg
mov
push
sti
mov
sbb
iret
mov
add
sub
push
jp
mov
popa
pop
cmp
ds
imul
or
push
lret
inc
push
mov
les
test
xor
in
jge
mov
mov
pop
dec
sub
nop
cmpsl
pushf
cwtl
mov
gs
popf
push
test
shlb
pop
sti
int3
inc
ja
shrb
lahf
rcr
push
xor
mov
scas
jge
mov
aam
loopne
push
cs
jge
popa
jbe
pop
cmc
sarb
or
scas
call
shr
xlat
test
je
xchg
cwtl
push
test
jmp
xor
sub
repz
push
jecxz
gs
ja
fstpt
lahf
test
imull
aad
mov
inc
shll
aaa
mov
xlat
in
addr16
sub
jmp
push
ss
xorb
cmpsb
inc
jle
xor
fwait
outsl
jmp
mov
jbe
lods
jmp
andl
and
and
add
lret
sbb
or
scas
jecxz
inc
mov
fistl
aad
xchg
dec
mov
daa
scas
cmp
xchg
sub
or
mov
jno,pt
jae
jno
aam
push
pop
adc
pop
adc
test
and
push
hlt
aas
and
mov
push
movsb
push
cwtl
jbe
mov
push
dec
push
or
ret
int
fnstsw
add
mov
popf
pop
loopne
jp
rcr
test
imul
out
xor
nop
sub
lods
and
pusha
bound
and
jbe
cmp
mov
jne
jp
adc
cmp
mov
insl
rcr
lods
out
jbe
stos
and
ficoms
lods
pop
mov
mov
mov
shll
in
lcall
pusha
sub
or
pusha
pop
out
stos
pop
cmc
mov
or
jle
xor
das
movsl
ror
fwait
je
sub
dec
imul
pop
xchg
inc
cs
insb
xchg
inc
imull
adc
sbb
ss
cmp
adc
xor
sub
add
hlt
pop
lret
aas
popf
mov
and
popl
cmp
lahf
test
test
cmpsl
pop
xor
and
faddl
dec
dec
push
fcoms
aaa
cmp
daa
push
aas
jp
mov
mov
js
push
jmp
jge
stc
int
shrb
int3
cmpsl
cltd
push
xchg
test
dec
and
ret
lret
in
aas
scas
cs
addb
jmp
mov
xor
add
pop
jnp
or
test
lahf
xor
imul
sbb
pusha
mov
mov
mov
loopne
loopne
add
cmp
push
call
sub
das
cmpsl
cmp
add
jmp
jnp
mov
scas
or
jg
inc
or
or
add
aad
pop
popa
xchg
test
mov
or
aaa
loop
repz
mov
xchg
mov
adc
mov
ljmp
out
dec
test
imul
jb
xchg
out
pop
nop
lds
mov
loopne
popa
fnstsw
fiaddl
iret
mov
icebp
repnz
add
jns
data16
xchg
in
jle
ret
fstps
fimull
scas
xchg
pushf
mov
rcrb
lods
add
cltd
dec
int
mov
daa
sbb
or
pop
pushf
pop
lret
test
into
loop
loop
xorb
loopne
fstpl
xchg
sbb
rorl
adcl
stos
dec
movsb
jmp
jbe
fprem1
push
ss
shlb
movsl
cld
sub
movsl
lahf
push
mov
add
sti
mov
pop
inc
mov
in
addl
mov
inc
cmc
sahf
add
dec
jge
pop
test
out
movb
cmp
adc
int
fcmovbe
push
jns
aad
jle
xor
push
icebp
fmuls
or
adc
jecxz
pushw
jne
jnp
testl
das
jmp
fwait
or
mov
dec
jbe
cmpps
repnz
shll
addr16
or
mov
cli
clc
lea
nop
push
cmp
addr16
cli
scas
sarb
cmp
hlt
xor
add
shrb
sbb
out
sbb
push
arpl
xor
lods
or
dec
jp
divb
insb
inc
push
in
out
sub
pop
into
or
sub
add
mov
fadds
pop
push
je
pusha
xlat
mov
std
sub
inc
daa
les
push
ljmp
pop
sbb
mov
repnz
pop
int
and
clc
sbb
out
inc
add
fcmovnb
mov
std
cmp
push
mov
fs
test
stc
test
rcl
push
fildll
pop
xor
hlt
into
dec
jne
pop
cmp
adc
adc
xor
add
dec
shr
lods
ss
aam
lock
mov
mov
xorb
int3
xor
jb
adc
insl
aas
dec
movsb
push
add
mov
sarl
sbb
xor
or
in
mov
hlt
add
jecxz
jg
jle
xor
movsl
inc
pop
out
sbbb
push
or
aam
mov
rol
mov
in
iret
imul
cmp
adc
mov
xor
mov
test
push
loop
in
lods
inc
mov
push
push
jmp
das
or
jo
sbb
and
inc
add
div
push
das
mov
popa
insb
mov
xchg
insb
add
jmp
insl
sub
sub
int
icebp
sahf
fsubs
push
lahf
dec
and
push
mov
push
inc
cmp
jecxz
xor
sbb
outsl
inc
sarb
adc
add
std
or
mov
xor
sbb
into
in
xchg
jle
repz
rcrl
ret
pushf
pop
clc
add
outsl
scas
popa
adc
push
sub
jecxz
jecxz
out
pop
lea
cli
xor
shr
dec
pop
xchg
ja,pt
or
pop
dec
out
add
sbb
ficompl
repz
cli
lods
ret
inc
aas
clc
test
popf
xorb
and
jmp
inc
mov
sbb
imul
pop
repnz
mov
testl
pop
adc
cmc
movsb
ljmp
mov
mov
flds
out
pop
push
shlb
stos
mov
add
dec
test
jp
ret
aam
scas
push
dec
cmp
fcoms
arpl
icebp
sti
fiadds
dec
stos
xchg
std
movsl
mov
xchg
mov
pop
push
pop
fsubl
sub
lahf
mov
clc
jge
orb
mov
mov
dec
cmp
jbe
or
int3
hlt
int
push
clc
cmp
loop
inc
lock
pop
rcll
rorb
pop
push
xor
icebp
mov
rcrl
pop
outsb
rorl
loopne
decb
mov
push
or
inc
cmp
and
aad
push
sbb
cmpb
push
inc
inc
and
lock
xchg
pavgw
daa
out
ljmp
int3
add
cmp
add
movsb
cmp
dec
jne
mov
cwtl
xor
jl
xchg
daa
add
scas
repnz
add
adc
jns
in
test
shll
inc
jmp
push
cmp
push
mov
mov
sarb
clc
cmc
push
sub
mov
mov
es
sub
cltd
sti
cmp
or
inc
repnz
imul
rol
dec
push
sub
outsl
mov
jno
hlt
push
outsb
sub
xchg
jno
lods
ret
scas
mov
or
or
or
adc
rcll
stos
sub
cltd
imul
mov
ljmp
repnz
xchg
in
out
mov
cmp
daa
cwtl
dec
hlt
outsl
cmpsl
negb
cmpsl
adc
insb
test
push
fwait
repz
leave
pop
mov
jge
sahf
dec
and
mov
ret
movsl
es
dec
xorl
push
xchg
fsubl
sbb
mov
aad
aas
sub
aad
jecxz
cmp
and
inc
mov
mov
add
jge
sbb
jbe
ja
pop
mov
es
jbe
or
jmp
jnp
or
mov
dec
ja
cld
xor
pop
dec
lea
adc
xchg
or
pop
scas
inc
loop
sbb
fistl
xor
or
fsubrs
xor
mov
dec
scas
test
push
push
or
scas
fadd
je
jl
jno
mov
mov
pop
or
loopne
adc
jo
in
cmp
fistps
bound
jo
and
fwait
aas
mov
xorl
dec
movsb
jmp
and
or
mov
sti
add
test
cmpsl
out
loope
mov
or
inc
adc
jno
shl
out
aad
xchg
jmp
ffreep
fcompl
jle
call
std
and
and
ja
add
mov
gs
popf
xchg
adc
cmp
xchg
push
xchg
icebp
push
adc
loopne
and
movsl
xor
pop
sub
pop
ja
hlt
mov
lcall
jbe
xchg
les
aad
jae
inc
push
xchg
xchg
into
popa
or
adc
xchg
mov
fisttps
into
jae
pop
dec
adcb
enter
lret
sbb
add
test
fcoms
jecxz
outsb
push
or
adc
in
dec
or
dec
not
sarl
sub
sub
cmpsb
repz
push
out
cli
xchg
loopne
cwtl
mov
jns
pop
fsubr
cmp
ljmp
dec
xor
shl
xchg
testl
test
scas
fstpt
sbb
jmp
xor
mov
mov
insb
inc
dec
push
xlat
scas
mov
andb
jmp
stos
mov
xchg
jae
gs
xor
leave
flds
imul
in
fldcw
and
stos
mov
rcrl
cs
shlb
stos
or
arpl
loopne
roll
mov
push
sub
sbb
push
push
bound
sbb
lea
in
ret
in
mov
fisubs
flds
pushf
fmul
mov
pop
out
orb
shrb
js
aaa
outsb
outsl
jnp
jmp
mov
sbb
out
insl
lds
xor
nop
push
xlat
pop
bound
notl
sub
xor
pop
fmuls
scas
loop
xchg
lret
adc
and
sbb
and
mov
mov
lret
xchg
mov
cmc
jae
rcr
add
adcl
cmp
jns
in
mov
sub
in
pop
loope
enter
dec
mov
pop
shll
into
outsb
jne
push
imul
mov
pusha
sbb
or
xchg
jecxz
fstpt
call
push
inc
mov
jbe
cmpsl
inc
sbb
testl
cmp
dec
mov
add
dec
mov
imull
cld
xchg
ss
cmp
mov
out
sbb
icebp
jne
stos
aas
cli
inc
into
or
pop
popa
and
std
pop
mov
fwait
sahf
pushl
or
pop
and
sbb
mov
add
ss
jecxz
pop
xchg
arpl
sbb
xchg
ds
xchg
sarl
cmc
ljmp
pmaxsw
daa
scas
pop
vpshufhw
fistpll
xor
adc
pop
inc
xor
data16
inc
jl
loope
and
or
pop
xlat
daa
fwait
aad
jns
nop
cmpxchg
dec
pop
pushf
clc
repz
jo
in
inc
and
inc
add
mov
and
lahf
xlat
lea
pop
mov
mov
xchg
push
or
add
clc
imul
and
shr
jo
xor
shr
cmp
xchg
push
aam
pop
setae
addb
scas
pop
add
pop
fcompl
mov
fildl
jmp
bound
flds
rcll
mov
or
int3
aam
push
cmp
sbb
mov
and
aad
xor
dec
xor
lock
push
fbstp
shl
ss
xlat
das
inc
mov
adc
iret
sti
aad
or
xor
add
inc
cmp
mov
add
sub
fadd
dec
mov
in
iret
push
jbe
dec
insl
add
dec
subl
pop
dec
pop
shll
jg
xchg
mov
and
jle
insl
aaa
addr16
xchg
pop
sbb
or
fs
sub
jl
cmp
jl
inc
ret
jecxz
cmp
and
jbe
and
leave
fwait
mov
out
or
mov
mov
in
lret
xorps
mov
les
iret
pop
pop
sub
call
mov
je
movsl
sbb
test
push
call
adcb
into
mov
fisttps
mov
jmp
push
mov
les
inc
jnp
push
push
stos
scas
jns
imul
out
push
and
xchg
rclb
inc
mov
cli
loop
mov
jnp
fadd
push
and
jl
or
pop
fbstp
enter
cmp
int
shl
movsl
sti
es
movsb
push
adc
pushf
and
gs
cld
in
insl
and
rcrb
jecxz
add
cmp
add
test
aas
int3
xor
addr16
es
adc
mov
mov
testb
mov
mov
pushf
jbe
push
mov
push
js
push
sbb
aad
pop
pop
add
xchg
orb
ja
pop
xor
outsb
imul
loop
je
mov
ds
jno
inc
sbb
xchg
or
les
jns
repnz
cmc
mov
xorb
das
mov
inc
insb
std
and
jecxz,pt
loop
pop
and
movsl
mov
aaa
mov
xchg
push
mov
sbb
mov
testb
test
adc
and
jmp
inc
pop
inc
jo
es
in
jne
arpl
push
insb
aam
sbb
and
mov
out
je
sbb
call
jmp
cld
mov
push
popf
repnz
ja
xchg
std
sub
or
jns
nop
fcomps
pop
addr16
jo
aas
dec
int3
nop
add
outsl
into
mov
daa
negl
xchg
inc
mov
shlb
adc
dec
mov
mov
adc
dec
and
js
mov
pop
decl
sub
lods
cld
fldcw
enter
adc
pop
sub
iret
je
cltd
mov
cmp
xchg
mov
gs
aam
cwtl
std
jnp
daa
cs
pop
sub
xor
add
cmp
pop
imul
ret
add
aas
mov
xchg
sarb
leave
enter
enter
xchg
inc
push
in
push
pushf
outsl
je
push
add
xchg
dec
mov
push
add
inc
sti
or
loope
pop
jbe
imul
sbb
push
lea
je
or
int
std
iret
lret
push
loopne
jecxz
mov
outsl
inc
ficoms
int3
jbe
test
imul
or
and
ror
push
jg,pn
push
pop
divl
repz
icebp
push
mov
mov
sarb
xchg
es
addr16
nop
inc
jno
cmp
stos
cli
xor
repz
push
pop
pop
fnsave
xchg
test
jbe
add
push
mov
scas
cli
ljmp
push
cmp
incl
adc
pop
mov
jns
fimuls
repnz
stc
cmpsb
push
fiadds
cli
pushf
mov
cmp
inc
and
xor
pop
lds
out
pop
mov
push
pop
out
adc
xchg
jne
pop
xor
aas
pusha
imul
cmpsl
pop
xor
jl
test
rcr
addl
out
iret
fiadds
outsb
in
lcall
movsl
mov
inc
fdivrl
inc
shrb
pop
loop
and
push
mov
pop
lods
and
jmp
dec
mov
addr16
scas
mov
mov
loopne
adc
std
add
addr16
lods
jge
aas
adc
cmp
push
fcmove
pop
add
in
popa
sbb
jne
jno
xor
lods
xchg
push
nop
jge
mov
jns
push
icebp
or
dec
and
and
aaa
fwait
pop
call
or
out
mov
daa
lcall
int
xchg
or
pop
cmp
lcall
mov
jmp
stc
fwait
jae
adc
and
hlt
adc
sbb
outsb
outsb
inc
lock
fs
jp
incb
jns
sbb
incl
xchg
ss
rorl
clc
pop
lahf
xchg
out
sbb
pushf
dec
jb
sub
insl
mov
stc
idivl
mov
out
and
add
fidivl
inc
push
popf
mov
jmp
pop
push
cmp
out
jecxz
adc
push
jns
mov
icebp
dec
fcmovb
cmp
jns
jnp
push
sbb
cmc
movsl
and
ret
cmp
push
ljmp
xorl
xor
lcall
inc
sub
icebp
inc
or
leave
push
cmp
adc
push
xor
into
sbb
or
adc
subl
inc
or
pop
push
cmp
ja
add
cmp
cld
es
mov
out
push
icebp
adc
sbb
mov
aaa
mov
pop
mov
sub
sub
or
add
jp
movsl
jo
adc
ds
dec
mov
push
dec
xchg
jne
leave
inc
lock
inc
inc
adc
das
leave
mov
icebp
lea
es
mov
data16
outsl
mov
jp
in
arpl
jl
push
cmp
mov
cmpsb
push
daa
adc
pop
out
mov
nop
bound
icebp
cmp
mov
lcall
mov
cltd
subb
shlb
imul
decl
push
add
push
xor
das
mov
jne
pop
sar
inc
cli
in
cli
push
cld
cmp
xor
lods
xorl
or
arpl
test
add
jb
aam
dec
into
push
dec
mov
scas
leave
adc
leave
lods
je
mov
and
popa
outsl
or
add
pop
add
das
adc
xlat
sti
imul
sahf
imul
xchg
or
lods
dec
imul
in
aaa
or
adc
pusha
cmpsb
push
push
pusha
jno
sti
sub
mov
jp
lret
call
jbe
cld
push
movsb
nop
dec
push
insb
pop
sbb
divb
inc
jecxz
xchg
adc
dec
jns
cltd
adc
lock
test
mov
mov
push
inc
shll
xchg
cmp
dec
je
lea
mov
dec
inc
in
push
hlt
nop
test
or
pop
jle
ds
cli
jae
push
and
sbb
into
mov
inc
dec
aaa
popf
xchg
inc
adc
push
inc
adc
out
fstpt
and
insl
pop
or
lods
iret
loope
test
sub
pop
push
mov
mov
je
jno
push
pop
mov
mov
dec
adc
or
add
repz
xor
addr16
inc
lret
ljmp
sub
inc
inc
jmp
fnstcw
gs
mov
movsl
cmp
mov
inc
cmc
fwait
cltd
ljmp
sbb
das
inc
mulb
cmp
adc
jnp
mov
dec
pop
inc
or
or
cmp
mov
jbe
aad
imul
dec
and
popf
push
int3
sahf
inc
adc
int
ss
adc
or
jmp
xor
pushf
jns
fldcw
and
and
andl
fdivs
ficoml
xor
sub
jl
das
push
fcmovu
pop
sbbb
daa
xchg
sbb
xor
sahf
dec
sbb
or
lea
xchg
insl
and
jg
sbb
dec
jg
fs
nop
sub
test
sbb
push
adc
repnz
shr
cmp
notb
movsb
xchg
push
inc
push
out
stos
jle
or
int
push
and
fnstcw
dec
push
popa
mov
sti
push
movsl
mov
std
push
aam
arpl
xchg
mov
xchg
out
les
ds
xchg
jne
js
push
fsubs
lds
pop
ja
inc
sub
subl
int3
divl
push
cwtl
pop
cltd
outsl
xchg
in
lret
mov
in
push
test
push
xchg
aaa
cmp
adc
arpl
push
les
sti
ss
testb
push
stc
pop
mov
dec
iret
cs
daa
inc
cltd
xchg
jno
dec
leave
and
loopne
shl
and
int3
inc
subb
lods
xchg
loop
xchg
das
inc
fwait
or
daa
incl
mov
xchg
push
mov
cmp
xor
cli
es
jge
and
dec
inc
push
notl
dec
push
popw
imul
xor
dec
dec
fidivs
filds
xchg
adc
or
mov
jno
sbb
pop
imulb
xchg
jle
adc
push
adc
xchg
fs
cltd
mov
lcall
jg
out
adc
je
in
jne
std
inc
mov
mov
cmp
lea
sub
cmp
ss
push
cmc
sub
cwtl
jnp
push
xor
movsb
loopne
gs
jl
fistpll
daa
push
pusha
push
or
add
jo
pop
mov
push
mov
daa
mov
mov
jae
push
cltd
mov
ljmp
inc
dec
push
dec
les
mov
dec
push
fldt
hlt
xlat
push
mov
sub
ret
mov
fdivl
xor
in
jb
mov
sbbb
lock
dec
mov
jb
hlt
roll
sbbb
mov
gs
inc
pop
mov
push
imul
scas
mov
cs
push
xor
add
icebp
lea
stos
out
loop
push
mov
insl
xchg
ds
lret
and
js
dec
outsb
pop
roll
pop
add
data16
jns
pop
adc
fdivrl
or
and
mov
mov
jg
cmp
nop
out
pop
jl
add
out
mov
inc
xchg
fdivrl
xchg
pushf
add
add
lret
repz
fsubr
fnsetpm(287
arpl
jecxz
cmp
aaa
jbe
stos
bound
or
mov
jbe
insb
or
lods
pop
imul
fsubrl
int3
sbb
je
mov
ja
or
sub
imul
cmp
icebp
out
pop
xor
out
scas
dec
mov
push
jbe
inc
inc
out
inc
int
mov
xlat
fdivrl
jns
lret
movsb
pushf
mov
pop
sbb
adc
push
out
sub
shr
cmp
push
cld
inc
bound
sub
ffreep
daa
divb
jne
mov
cmp
std
cli
xchg
icebp
xor
mov
pop
cli
cmp
test
push
push
jp
dec
sub
mov
shrb
xor
inc
cmp
clc
shll
cmp
sbb
mov
mov
adc
leave
cwtl
loopne
into
ret
shl
adc
xchg
mov
rclb
movl
cmc
jge
loopne
ret
or
pop
mov
mov
or
nop
cmp
mov
hlt
aaa
out
lcall
sub
int
mov
mov
fimuls
xor
stc
push
repz
in
mov
and
mov
xchg
incb
aas
sub
mov
push
dec
adc
aam
xchg
sbb
or
pop
sbb
dec
cld
xor
push
std
out
inc
sbb
aad
repnz
fisubrs
test
sahf
and
adc
or
in
inc
inc
int
mov
lcall
pop
push
push
pop
mov
lods
js
test
int
sub
lret
pop
lods
das
ja
pop
mov
out
int
sbb
jbe
jns
adcb
mov
add
jno
mov
push
xor
outsl
ret
sbb
lret
inc
jb
popf
lods
leave
adc
js
scas
nop
daa
int
hlt
lret
hlt
pushf
int3
push
out
fnsave
sbb
cmpsl
or
imul
call
add
sub
and
ficoml
orb
test
leave
xchg
cmp
pop
or
pop
lret
mov
mov
jg
xchg
aas
push
adc
enter
or
sar
jne
push
jbe
mov
das
sub
cld
xor
test
adc
ret
mov
stc
xchg
sub
xchg
push
jnp
movsl
mov
mov
fcomps
repz
or
mov
popa
mov
push
push
or
outsl
jb
in
or
gs
or
push
sti
or
mov
or
mov
sub
shll
mov
push
mov
jns
jg
jl
push
out
sbb
dec
imul
sub
cmp
adc
aam
iret
jl
and
bound
cmc
pop
mov
xchg
cwtl
test
sbb
push
sub
xchg
rorl
jnp
das
jecxz
jl
fcomps
lods
lea
bound
jb
loopne
adcb
cmp
dec
sbb
dec
stos
data16
mov
cmpsb
loop
and
aas
dec
inc
insl
xlat
xor
cmp
lret
pop
loopne
pop
adc
in
jmp
mov
cmp
mov
in
mov
lret
jnp
xchg
std
addr16
jbe
jb
adc
cs
sbb
add
pushf
and
cmp
bndstx
pop
inc
daa
mov
shll
out
fildl
push
es
fildll
add
dec
jnp
test
add
scas
repnz
or
push
aam
repz
popf
adc
xchg
xor
jl
adc
out
sbb
jge
mov
push
sub
sbb
cmp
add
adc
mov
push
call
push
popf
cmp
std
loopne
test
xor
sti
pop
mov
shr
stos
clc
loopne
mov
test
imul
or
aaa
arpl
and
dec
adc
ficoml
pusha
xchg
mov
fldt
outsl
dec
mov
jns
pushf
ret
or
data16
insb
mov
loop
rcrb
jbe
adc
fnstenv
mov
push
outsl
inc
push
inc
or
xor
andl
insb
xchg
add
out
fwait
dec
aam
jns
lcall
sbb
mov
aaa
fistpll
push
sbb
pop
pop
rol
pop
mulb
jmp
jnp
mov
rcrb
jg
cmc
and
in
sbbb
adc
lcall
and
and
bound
sub
andb
cmp
or
push
adc
lcall
inc
pop
jae
ljmp
add
xorl
jecxz
inc
mov
push
or
push
mov
mov
popa
cmp
jbe
rcl
in
inc
in
or
xlat
push
dec
in
sub
add
sarl
shl
and
pop
cmp
xchg
jno
cs
ljmp
jle
xchg
adc
std
es
jp
or
lock
icebp
rolb
adc
scas
push
lds
aaa
mov
out
int
lock
sub
adc
popa
add
in
ret
push
dec
xor
jae
jmp
adc
sbb
dec
mov
fs
das
and
cmp
hlt
fidivs
cmp
push
and
aas
mov
mov
out
push
fnstsw
pop
fidivrl
sbb
loop
push
push
push
loope
sbb
fldl
cli
aas
sbb
inc
loope
cs
les
div
xchg
xor
adc
xchg
cmp
into
mov
aam
xor
cmc
mov
pushl
cmc
mov
lea
test
into
pop
cmpsb
cmc
out
in
add
sbb
ffree
push
bound
push
je
add
inc
mov
push
test
mov
add
jbe
lock
pop
daa
ret
shll
scas
inc
lds
outsb
pop
xor
scas
popf
lret
or
adc
shrb
mov
mov
nop
cwtl
sarl
mov
repz
ret
lds
mov
sub
in
popf
jp
and
rolb
in
aam
rolb
pushf
mov
mov
mov
imul
test
xor
out
int3
shl
or
jg
mov
test
daa
inc
loopne
xlat
adc
aad
push
jcxz
std
add
in
shrl
jl
js
sti
aad
mov
lock
xorl
pusha
clc
outsb
popa
imul
stos
loop
leave
mov
jbe
cmp
pop
push
add
test
sub
pop
xor
mov
negl
andl
aam
adc
jb
imull
sub
out
ljmp
dec
add
sub
call
bound
es
fdivl
imul
das
pop
pushf
push
adc
jnp
mov
loope
and
adc
test
and
aam
shll
cld
adc
jae
push
sub
fwait
mov
sbb
jmp
icebp
xchg
xchg
test
mov
test
test
sub
mov
jo
cmp
bound
cmp
dec
or
out
push
mov
jo
in
jge
notb
data16
bound
jo
repz
pop
and
xor
sbbb
fdivrs
leave
pop
pushw
inc
lds
fmull
adc
into
pushf
pop
push
pop
pop
jp
sub
xchg
add
pop
mov
daa
ljmp
psllq
dec
cmp
in
inc
ss
pop
fwait
es
cmc
adc
and
xor
xor
popa
add
mov
andl
es
loope
fwait
fs
adc
push
inc
push
ja
or
sub
mov
cmp
int
jge
adc
movl
pop
ljmp
xchg
inc
pop
adc
cs
mov
xchg
xchg
mov
movsb
mov
aam
pushf
dec
aas
dec
in
xor
repnz
inc
mov
data16
xchg
popf
stos
orl
aam
push
mov
popl
rcrb
insb
popf
xlat
aas
dec
test
jp
stos
pop
popa
add
push
xchg
push
pushf
mov
jecxz
imul
jb
sbb
add
dec
xchg
dec
int3
scas
dec
sbb
in
aaa
repz
clc
jns
jae
les
xchg
imul
iret
jle
sbb
ret
ds
or
cwtl
repz
adc
push
aaa
or
insb
aad
push
mov
adc
or
test
gs
push
fucomip
mov
out
inc
mov
stc
in
enter
jnp
push
jnp
mov
jnp
push
jbe
push
mov
in
mov
xchg
cmp
sbb
movsb
sbb
aas
ja
mov
push
es
das
jae
xor
mov
xor
pop
shrl
and
mov
mov
sub
cmp
in
ret
fsubs
jo
pextrw
mov
mov
sbb
rcrl
iret
ja
sub
jecxz
push
popf
jns
int3
jno
sbb
rclb
gs
ja
pop
mov
cwtl
in
ds
jg
pop
adc
push
aad
scas
repz
aad
xchg
jecxz
movsb
cmp
sub
xchg
mull
jb
fwait
inc
pushf
cmp
fildll
test
int3
insb
pop
dec
bound
xchg
pcmpeqw
mov
mov
imul
jno
push
sarb
push
dec
fsubs
mov
mov
test
sti
mov
sub
push
xor
or
xor
lret
sbb
ja
mov
outsl
adc
pop
rolb
inc
sub
shr
mov
addr16
mov
inc
jbe
push
mov
mov
mov
jnp
nop
flds
pop
add
adc
and
xor
or
pop
mov
xor
mov
fwait
xchg
mov
and
maskmovq
or
notl
xor
aad
adc
aad
xchg
data16
jbe
subb
je
xchg
pusha
ret
in
mov
seto
xchg
mov
xor
dec
add
fiaddl
hlt
mov
lcall
sti
enter
xor
sub
xor
jbe
xchg
inc
jo
jb
pmaddwd
outsl
cmpsb
pop
inc
fwait
jle
lds
repnz
mov
leave
mov
inc
dec
adc
xor
dec
mov
stos
fdivp
movzbl
cmp
hlt
ret
sub
adc
sbb
dec
imul
pusha
ja
iret
iret
sahf
fiadds
cmp
xor
loop
filds
mov
jns
mov
mov
cli
jo
movsl
and
cmc
insb
mov
gs
adc
pop
divl
cs
dec
shlb
pop
cmp
imul
test
test
imul
repz
mov
push
cltd
jmp
out
pop
add
popf
rcrb
mov
inc
stos
adc
icebp
iret
sub
add
inc
jo
cmpsb
mov
int
jecxz
mov
or
sti
add
xchg
jns
jmp
inc
lret
jne
xchg
push
mov
ret
cmpl
push
out
ljmp
or
test
in
pop
icebp
stos
int3
dec
in
shrb
lahf
adc
xchg
out
je
xchg
push
push
call
cmp
in
hlt
les
mov
add
sub
cmp
push
mov
sbb
mov
loopne
jmp
testb
dec
sub
push
or
sub
adc
cmp
outsl
xor
push
pop
xchg
mov
sbb
bound
ret
sbbb
pop
push
nop
mov
pop
fstps
imul
mov
lret
popl
dec
jne
mov
push
and
jmp
je
adcl
repz
push
mov
mov
xchg
and
dec
mov
xchg
mov
xlat
fs
rolb
sub
mov
adc
sub
and
jp
jp
out
test
and
std
pop
jo
jnp
sbb
testb
ret
int3
imul
out
xor
inc
outsb
lret
push
repz
fucomip
test
sti
ficoml
mov
lods
pop
add
cmp
mov
mov
xchg
cmp
mov
ficomps
mov
push
data16
pop
shrl
rcrb
jo
sub
ss
pop
imul
and
xchg
pusha
jae
cwtl
lahf
repnz
dec
cmpsl
add
cli
push
test
jg
and
add
adc
dec
imul
jbe
cmp
cmc
aaa
inc
outsl
mov
sahf
rcl
push
testb
pop
out
mov
or
dec
outsb
iret
aad
aas
cltd
mov
xchg
dec
sbb
das
inc
adc
out
ja
mov
fiaddl
cs
test
and
xor
outsb
leave
jp
shrb
mov
iret
push
out
in
mov
lcall
in
clc
mov
out
ret
jl
add
pop
add
int3
jecxz
xlat
lahf
repz
clc
int
orps
ficompl
daa
xor
insb
push
cmpsl
dec
jle
cmpsl
stc
dec
jne
addr16
jns
pop
cwtl
cmp
xchg
ds
mov
out
mov
mov
cwtl
push
aad
lret
dec
jbe,pn
and
scas
mov
enter
cld
xchg
sbb
lahf
adc
adc
or
ret
cwtl
jns
rcrb
cld
push
lods
xchg
cmp
mov
jne
rcrl
imul
test
lret
push
or
jbe
push
push
lods
mov
popa
cmpsl
or
push
mov
xor
xchg
dec
sub
add
pop
xchg
adc
pop
push
adc
enter
call
inc
sbb
fistpl
jne
faddl
jae
pop
test
std
and
je
stc
pop
lods
cmc
or
pop
out
or
pop
add
mov
or
mov
je
fsts
imul
bound
nop
adcl
adc
jp
loop
mov
xor
push
dec
push
pop
push
lret
test
sahf
pop
fsubl
inc
mov
in
sub
les
sub
xor
imul
into
push
mov
iret
add
and
std
stc
sub
sub
jae
push
nop
into
rorb
cmp
mov
sarb
sbb
pusha
pop
adc
lods
clc
cmp
lods
jnp
in
xchg
and
movsb
xchg
jbe
or
mov
lods
push
mov
jmp
mov
push
dec
fisttps
stos
adc
mov
fcomip
stc
xchg
idivl
mov
sbb
dec
fwait
into
shlb
xlat
mov
cs
rorb
pop
test
pop
adc
call
xlat
jne
dec
fdivrs
pop
adc
in
out
xchg
push
cmpsb
scas
dec
addr16
test
xor
bound
mov
fdivl
outsb
adc
shrb
push
or
push
adc
ret
insb
push
push
mov
pop
mov
dec
xchg
lcall
and
sti
in
ja
sub
adc
sbb
cmpsl
sbb
push
or
fdivrs
lds
das
cld
js
jecxz
outsb
and
sub
out
insb
fwait
cmp
repnz
jbe
stc
ficoms
cwtl
in
xchg
sahf
inc
push
bound
addps
iret
sbb
rcrb
lahf
ljmp
xchg
rolb
sbb
sahf
movsb
and
inc
jmp
mov
add
pop
xchg
fstpt
add
mov
int3
jp
loop
cld
outsl
movsb
loop
lcall
pushf
shlb
xchg
outsb
jo
jge
xchg
sub
out
aad
push
hlt
loopne
xor
cmp
ds
mov
lock
or
aaa
out
add
lret
xchg
and
jge
mov
lods
call
jno
push
mov
ja
rorl
sbb
mov
jne
ja
sbb
addr16
loope
or
in
sbb
sbb
test
stc
xchg
or
mov
cmp
fadds
sbbb
movsb
insb
inc
dec
push
xchg
xor
lret
mov
out
sbb
pop
and
rolb
xchg
xchg
fstpl
and
pusha
loope
arpl
and
call
out
loopne
out
and
bound
dec
movsl
jnp
mov
inc
bound
xor
mov
jae
mov
add
mov
push
adc
or
or
jb
mov
fdivrs
std
es
sub
jp
mov
inc
push
jecxz
jo
inc
pop
sbb
imul
dec
cmp
pop
xor
push
fcmovne
bound
cmp
push
jnp
testl
fsubs
push
jb
mov
inc
ljmp
testb
add
fwait
dec
or
mov
adc
out
shlb
and
mov
roll
in
out
scas
mov
xchg
adc
imul
es
dec
outsb
sbb
add
dec
and
mov
pop
out
xchg
dec
out
dec
jne
xchg
int3
pop
sub
enter
gs
es
mulb
pop
clc
ret
roll
repnz
jb
outsb
dec
icebp
aas
scas
mov
orb
sbb
cwtl
bts
mov
mov
xor
fcmovnbe
clc
fwait
loop
mov
pop
lea
in
in
ljmp
mov
ljmp
daa
cmp
or
mov
sbb
cmp
out
test
mov
test
aad
and
cmpsb
repnz
lds
jno
into
cs
cmp
inc
mov
cwtl
aad
sti
ja
push
out
xor
and
sub
insl
cld
push
lahf
std
popf
in
jno
lock
iret
mov
lahf
adc
dec
mov
adc
dec
inc
es
push
out
into
jge
outsb
mov
outsb
popa
push
call
mov
mov
or
jae
aas
or
insb
jnp
lcall
mov
fldl
jl
in
dec
push
sub
rclb
xor
cmp
mov
stc
mov
or
out
icebp
addr16
fildll
mov
roll
shr
mulb
sahf
fimuls
cmpsl
xor
int
rclb
fdivrl
movsl
faddl
or
ss
test
jge
push
adc
mov
lahf
ss
jmp
dec
xchg
inc
fcompl
jnp
cmp
jo
iret
dec
popa
rcrb
ds
mov
leave
je
jl
mov
cmp
inc
aad
and
lcall
ja
cmpsl
or
cmp
pop
lret
es
mov
div
adc
jb
popf
add
sbb
push
sbbb
fsubs
rcrb
lret
adc
bound
insl
out
and
imul
jge
arpl
jne
int
xorb
inc
jnp
cmpsb
movsb
sub
es
and
rcrl
xchg
cmpsb
push
arpl
mov
das
xor
sbb
xchg
sub
inc
ret
ja
push
dec
ljmp
in
or
ds
jbe
and
mov
pop
mov
pusha
adc
push
loopne
jl
push
cmc
add
fs
lods
mov
and
std
adc
test
popa
scas
adc
jb
sub
int
add
jne
inc
nop
xchg
sub
cmp
cmp
popf
shr
stos
cmc
cmp
cmp
aaa
xor
add
bound
rclb
popf
fldcw
mov
inc
and
cmp
and
lods
call
loop
push
mov
push
mov
into
push
lods
cmpsb
mov
dec
jmp
in
in
cmpb
andb
xor
and
and
dec
in
sub
dec
rclb
adc
jmp
dec
xchg
pop
add
jg
xchg
scas
stos
imul
jne
cmp
mov
or
xchg
mov
jecxz
add
mov
push
test
fwait
into
stc
repnz
inc
movsl
or
fimull
sbb
jg
mov
mov
dec
pusha
mov
push
pop
bound
jns
jno
sti
xchg
mov
bound
mov
decl
fisttps
add
pop
jle
loop
dec
jnp
ret
in
idivl
inc
ret
and
bound
dec
mov
enter
popf
daa
or
and
rcrb
push
cmp
mov
test
xor
xchg
dec
push
cmpsl
cmp
mov
out
lcall
cmpsl
cli
in
icebp
and
stos
movsl
inc
stc
pop
mov
add
push
sets
dec
shll
cmc
mov
or
fwait
inc
js
daa
test
cmpsb
popa
mov
jo
sbb
add
sub
and
dec
decl
xor
jp
stos
ss
lret
sub
pop
outsb
or
add
push
out
lret
jns
pop
jns
fnstsw
ret
mov
sahf
loop
xchg
shr
test
enter
fnstenv
aad
pushf
add
inc
jmp
jae
pop
xor
lock
insl
inc
xchg
popf
lahf
fwait
iret
inc
outsl
jae
push
dec
cmp
inc
cmpb
inc
mov
lahf
push
in
aam
in
sub
rcrb
push
arpl
fwait
dec
adc
lods
xchg
jg
push
dec
pop
dec
enter
cmp
cmp
jl
out
xchg
jne
add
dec
shll
push
sub
inc
mov
je
call
fidivrs
pop
sub
mov
leave
dec
or
mov
jo
adc
pusha
and
jmp
adc
leave
cmp
stc
lea
stos
fdivs
xchg
imul
scas
xor
sti
push
lock
pop
pushf
hlt
fidivs
mov
and
loope
xchg
ja
mov
lods
ljmp
dec
pop
pop
insl
pop
fldcw
fs
mov
lret
jl
mov
or
sub
outsb
insb
jns
or
out
scas
adc
mov
icebp
out
repz
hlt
cwtl
sbb
das
mov
lret
test
xor
mov
in
lods
adc
fmull
ret
pop
xchg
fsubr
ds
jle
xlat
lret
dec
adc
fsubs
cli
mov
push
aad
jg
mov
sbb
xlat
mov
mov
fcompl
fwait
ds
dec
mov
into
out
dec
je
movsb
sarl
aaa
lcall
add
add
jmp
ja
sbb
cmp
mov
sarb
fidivl
mov
jge
aam
pop
jb
divb
nop
sti
pop
adc
fwait
scas
stc
adc
mov
data16
enter
jle
pop
push
lret
dec
jl
pop
dec
pop
arpl
js
mov
mov
fdivs
lret
cmpsl
dec
xchg
shll
push
dec
jns
iret
daa
fwait
push
and
jne
mov
daa
test
andb
movsb
mov
mov
add
jge
mov
dec
clc
nop
mov
dec
fsts
adc
es
dec
inc
push
jno
push
and
outsb
cmpsl
xor
sub
les
mov
cmpsl
pusha
loope
push
adc
dec
push
lds
test
dec
dec
cmp
jns
mov
imul
fimull
test
xchg
arpl
cs
dec
popa
pop
dec
aas
inc
test
mov
lret
push
clc
cmp
gs
mov
pop
add
xchg
dec
mov
enter
sbb
les
and
xchg
sub
cmp
xor
fcmovnb
sbb
add
lret
aad
icebp
or
add
cmpsb
dec
pushf
cwtl
mov
insb
fst
jle
xor
int
fsubr
add
imul
das
lret
mov
xchg
and
insl
xlat
dec
pop
inc
push
scas
push
rol
mov
in
adc
or
stos
into
adc
push
movsl
dec
and
popa
cltd
je
jb
cs
or
out
sub
jns
inc
insb
inc
fiadds
sbb
nop
movsl
das
dec
push
aaa
sti
das
ret
xlat
xor
dec
pusha
pop
push
sbb
dec
rorl
xchg
je
xchg
loope
mov
add
push
xor
loop
push
stos
sbb
stos
mov
jbe
push
call
in
jno
or
js
add
pop
sub
jnp
ds
dec
out
adc
rcrb
cwtl
aas
or
push
and
inc
adc
cld
outsb
jae
in
popl
fldl
inc
push
outsl
mov
and
loopne
iret
jge
push
flds
sbb
mov
adc
or
fadds
sbb
or
sahf
pop
mov
adc
fdivr
je
xchg
and
jns
mov
mov
push
mov
dec
rcr
push
xor
addr16
cmp
dec
or
sub
push
or
or
and
test
gs
clc
out
lret
test
pop
and
dec
or
aam
lods
addb
cli
xor
dec
jmp
jne
mov
pop
push
jg
cmp
mov
push
jno
fnsave
cltd
dec
aaa
xchg
sbb
sbb
subb
cmp
scas
in
push
jno
push
out
add
cmc
out
mov
inc
dec
add
popf
or
jl
xchg
push
fcomip
xor
loopne
aaa
xchg
loope
dec
dec
lret
pop
mov
jne
xchg
cli
mov
in
push
dec
jp
in
mov
or
into
dec
cmpsl
inc
repnz
ja
pop
rcll
add
int
imull
sbb
jns
add
stos
pop
xchg
push
push
fsubs
mov
push
mov
loop
push
loop
mov
hlt
out
sub
fs
xor
jge
repnz
out
pop
jno
aam
lea
dec
jle
mov
add
in
and
mov
sub
jmp
sahf
lds
mul
ficomps
mov
xchg
dec
push
cmp
cs
xor
sbb
out
jns
pop
jle
in
loopne
sub
pop
mov
jge
sub
inc
push
inc
rclb
popf
add
shr
jg
in
and
jno
xchg
es
sub
push
mov
rorb
or
clc
add
xchg
cmp
fs
daa
mov
dec
pop
push
iret
popf
loop
add
bound
jmp
icebp
data16
lea
ret
popa
in
mov
lret
rolb
xlat
push
mov
cmpsb
fdivrl
ss
nop
int3
icebp
mov
add
sbb
testb
sbb
scas
cmpsb
add
mov
pop
mov
inc
sub
sub
sub
frstor
mov
mov
adc
jae
jo
push
mov
mov
jle
lea
adc
adc
xor
pop
iret
push
mov
sbb
dec
push
jne
jmp
lods
inc
in
xor
xchg
test
xor
scas
movsl
inc
ret
pop
shll
fcomps
lcall
cld
icebp
sub
cli
jmp
and
push
and
data16
jae
insl
or
int3
adc
fdiv
lods
pop
les
sub
mov
xchg
daa
clc
dec
das
cmp
adc
lock
push
cmc
pushf
ljmp
cmp
dec
jo
fs
fdivrl
jmp
or
cmpsb
sub
lahf
sti
arpl
xchg
jle
mov
outsb
mov
xor
leave
push
fcmovb
jo
inc
into
or
fs
mov
cltd
frstor
test
cmp
xchg
mov
lret
bound
add
sarl
cmp
out
cwtl
lcall
push
int
dec
jae
ret
cmp
xchg
xorb
mov
inc
push
pop
inc
inc
lods
sbb
lcall
or
push
push
push
test
popa
daa
xlat
push
push
cmp
xor
and
add
fidivrs
flds
stos
and
and
imul
and
pop
xor
adc
mov
push
pop
sbb
jbe
in
dec
mov
sbb
inc
lods
je
mulb
inc
sbb
pusha
mov
xor
jnp
lods
xchg
cmp
dec
pop
ds
xor
adc
jge
push
movsl
scas
dec
ja
sub
loope
jnp
xor
dec
cld
xor
sbb
mov
int
sub
inc
mov
aas
in
xor
dec
stos
dec
scas
xor
scas
add
pop
xchg
dec
dec
dec
inc
mov
mov
mov
adc
sub
sub
or
sahf
ja
mov
stos
inc
ror
jge
mov
push
popa
cmp
test
pop
xor
lcall
repnz
out
dec
and
fists
das
xchg
fidivl
fisttps
clc
je,pn
aaa
scas
or
in
rcrl
xchg
cmc
nop
dec
scas
jno
dec
notb
mov
xchg
ja
ret
dec
imul
ret
add
mov
shll
ja
inc
mov
bound
mov
inc
dec
jbe
ljmp
lahf
sub
cmp
and
adc
rol
aaa
sarl
je
nop
sub
cld
ss
mov
add
ljmp
inc
mov
outsl
cmp
inc
jo
jns
mov
inc
dec
in
mov
mov
fstps
scas
mov
mov
cmp
pop
lock
cmc
mov
fidivl
push
mov
sub
jno
rcll
jo
and
jo
lea
or
cmp
flds
mov
int
or
je
loopne
sbb
push
inc
add
scas
or
jne
and
sub
and
mov
sbb
push
stc
ja
cs
fwait
cmp
ss
mov
sub
push
jns
cmp
mov
xor
push
sbb
adc
add
lcall
stos
mov
std
cli
sub
adc
mov
hlt
mov
inc
lret
lcall
int3
push
mov
packuswb
or
aas
imul
pop
pop
pop
sub
push
dec
out
mov
aas
mov
mov
xorb
shlb
lcall
sbb
mov
or
test
pop
mov
pop
lock
jecxz
mov
pop
mov
jp
or
push
pop
cs
cmpsl
cld
mov
fnsave
jb
jno
outsb
sbb
outsl
ds
mov
aas
incb
out
jae
mov
clc
and
in
xor
mov
and
imul
mov
dec
mov
push
mov
pop
fadd
pop
xchg
jp
ljmp
rcll
loop
pop
insl
dec
mov
push
lock
mov
sbbb
cmc
mov
pop
sbb
mov
fcoml
loopne
fdivs
push
jp
iret
das
popf
sbbl
cltd
mov
sbb
cmc
cltd
mov
lret
mov
xlat
cmc
and
testb
mov
push
mov
shll
pop
inc
dec
and
js
or
int
loopne
mov
dec
lods
stos
mov
lock
sub
pop
inc
sbbb
test
test
sub
popa
push
sub
cld
scas
mov
cmp
sbb
dec
lahf
ja
jnp
les
movsl
add
sbb
out
inc
test
inc
pop
sahf
pop
shr
fdivl
outsl
popf
inc
lds
xchg
rcrl
xchg
push
les
sarl
stos
mov
push
inc
mov
stos
xor
and
lods
mov
popf
mov
jmp
add
adc
pxor
adc
aas
cmpsb
ds
ficoml
arpl
pop
xchg
out
inc
pop
push
mov
insb
push
mov
rclb
add
call
add
mov
enter
adc
shl
adc
mov
cli
inc
or
lods
ljmp
popa
notl
inc
mov
push
inc
test
cld
es
cmp
pop
loopne
mov
mov
fimull
cltd
add
adc
adcl
ror
aas
icebp
in
or
data16
imul
lret
pop
aaa
pop
sahf
sbb
push
lods
mov
sbb
xor
push
jge
xlat
jg
mov
mov
xorl
mov
daa
into
ljmp
cmpsl
push
adc
xchg
rclb
negl
inc
pop
outsl
mov
dec
pop
lret
push
rorb
xor
add
add
repz
scas
lods
das
push
leave
outsl
stos
ret
sti
callw
test
and
imul
gs
shr
gs
imul
push
lahf
aam
ficompl
movsb
mov
sbb
arpl
push
inc
out
mov
or
pop
jmp
fldcw
dec
jno
cmp
mov
outsl
sub
adc
inc
and
adc
xor
stos
cltd
test
jmp
in
jle
adc
iret
pop
jle
and
jg
mov
in
sti
add
leave
ja
je
pop
test
pop
fs
jge
les
test
or
cmp
mov
aaa
mov
pushf
lods
xchg
xchg
dec
xchg
cwtl
xor
ljmp
xor
addr16
mov
pop
jne
mov
movsl
and
push
inc
or
hlt
js
jne
dec
push
daa
shrb
fwait
test
fsubl
push
xor
mov
insb
xlat
rorl
icebp
push
mov
inc
inc
sub
enter
aam
cmp
mov
cmp
cs
xchg
push
repnz
sub
out
or
cmovbe
popl
push
sti
add
mov
inc
jg
pop
fcomps
jnp
push
movsb
cmp
cmpsl
add
fucom
daa
mov
cmp
movsb
jl
cmpsl
and
mov
add
data16
jecxz
hlt
mov
out
outsl
addr16
incb
pop
mov
pop
das
in
adcb
arpl
jo
data16
add
mov
xor
adc
cmp
push
mov
jbe
out
insl
pop
ja
mov
sbb
adc
mov
add
dec
cwtl
adc
jecxz
xor
mov
outsl
and
cwtl
add
cmp
inc
jl
cmp
notw
jns
loopne
mov
sub
fs
push
ja
mov
pop
fildl
lret
cmpsl
enter
xchg
mov
out
movsl
pop
xor
imul
inc
into
int3
insb
out
cmc
pushf
sub
cltd
inc
ret
lods
pushf
loope
in
fadds
push
cltd
push
xchg
sti
js
rorl
cmp
adc
inc
xchg
ss
out
jb
movsb
enter
lods
mov
cmpb
mov
pop
inc
lret
test
dec
push
mov
movsb
mov
pop
push
xchg
adc
rolb
mov
xor
adc
in
test
xor
xor
cmp
jg
icebp
sahf
sbb
test
int
add
adc
jo
sbb
out
or
pop
inc
mov
mov
mov
mov
cmc
push
loopne
pop
adc
into
and
jb
ret
mov
push
icebp
and
aad
adc
pushf
loope
lcall
sub
ja
jbe
push
cwtl
mov
jo
imul
xor
xchg
loop
fs
cmp
out
mov
stos
addr16
jb
or
mov
jg
mov
dec
ret
ja
mov
add
out
xor
dec
jae
xor
cmp
fsub
mov
lcall
sub
push
in
int3
es
sbb
add
mov
add
pop
dec
lahf
xlat
insl
or
std
adc
outsl
sahf
xchg
iret
push
mov
out
cli
ss
jns
ret
cmp
in
fwait
dec
cmpsb
jae
fcmovnu
out
pop
add
jge
daa
out
in
call
subb
push
aad
js
test
mov
xchg
les
rclb
mov
or
push
jbe
hlt
inc
aad
jns
jbe
xchg
loop
sti
clc
sub
adcb
aaa
inc
out
out
pop
jecxz
lds
or
pop
or
and
sub
jae
pop
jb
dec
rorb
cmp
push
loop
outsb
cmpsl
adcl
or
in
jecxz
pop
out
fiaddl
mov
in
outsl
push
push
sti
leave
pop
xor
xor
and
aad
sbb
mov
test
ljmp
xor
adc
jnp
mov
mov
sbb
daa
xor
mov
mov
lods
cmp
jno
jae
or
mov
movsb
shll
cwtl
push
jle
mov
sub
inc
sub
aad
xor
cmp
xor
push
add
inc
shll
xchg
and
dec
mov
iret
push
push
insl
pop
mov
xor
jl
mov
into
jne
mov
aam
push
add
sub
sub
sub
pop
out
ret
sbb
pop
fucom
xchg
xor
shr
jp
stc
stos
xor
aaa
xorb
imul
cmp
pop
insb
in
cmpsl
ss
movswl
jne
movsb
lods
into
inc
push
rolb
mov
sbb
xor
xor
pop
fmuls
js
add
push
cmp
sbb
enter
in
clc
lret
dec
lcall
pop
pushf
js
nop
push
xor
mov
pop
sahf
push
jb
push
mov
popa
or
out
addr16
mov
or
jp
adc
xchg
sub
repnz
ss
adc
add
sbb
inc
push
mov
jl
pop
roll
je
mov
stos
push
jmp
mov
xchg
fists
and
cmp
out
add
nop
sub
xor
add
push
pop
mov
roll
ljmp
jnp
mov
inc
je
adc
cmp
sub
rorb
jecxz
jae
pushf
pop
mov
insb
aad
stos
inc
les
and
add
popf
mov
inc
rol
lds
in
or
sub
test
shll
movl
ja
push
rcrb
movsb
cmp
int3
ja
popf
xchg
jecxz
stc
inc
xchg
inc
or
inc
lods
dec
push
jae
outsb
push
push
jae
xor
mov
iret
ret
movsb
push
push
add
ret
pop
inc
arpl
xchg
stos
or
pop
fisttpl
dec
adc
sub
inc
mov
inc
fisttpll
arpl
dec
mov
add
aad
mov
mov
xor
repnz
push
mov
sahf
or
jo
xor
mov
sub
push
rcrl
lds
cmpsb
fstl
ss
sub
inc
cmp
es
sbb
enter
fnsave
xor
adc
testl
or
in
repnz
and
push
dec
scas
sbb
mov
sub
jmp
adc
xor
cmp
xor
mov
cli
add
add
pop
xchg
loopne
mov
xchg
test
or
xor
pop
push
adc
lcall
mov
bound
int
sub
repz
fldl
leave
aaa
fildl
popa
add
insl
mov
sbb
pop
pop
pop
pop
cmp
loopne
push
movsl
and
data16
movsl
aas
xchg
mov
xchg
adc
dec
jne
pop
push
rol
push
daa
stos
jae
add
or
add
loope
push
mov
roll
cmp
addr16
nop
fsubs
les
jo
rcrl
lock
out
gs
rcrl
adc
aam
add
cwtl
add
frstor
lods
inc
and
fnstenv
out
out
adc
ja
loope
mov
clc
sti
iret
lds
sub
scas
sub
repnz
add
es
xchg
sti
cli
aaa
cld
mov
sbb
cs
fwait
and
iret
fs
mov
xor
xchg
mov
fistpl
imul
repz
cwtl
push
gs
insb
jp
inc
push
cmp
sbb
push
dec
bound
inc
test
sub
or
dec
je
and
lea
adc
into
sub
insl
je
popf
adc
push
push
int3
gs
into
js
gs
pcmpeqb
pop
inc
pop
mov
jnp
adc
divb
add
int3
fldl
dec
mov
iret
xor
je
cli
xorl
mov
add
or
and
push
in
rcrb
mov
icebp
jnp
lds
test
fcmovbe
jp
into
mov
xchg
enter
sbb
inc
jnp
repz
dec
push
jo
shl
xor
cmpsb
lcall
xchg
aaa
jnp
movsb
insb
cwtl
shrl
aaa
fmuls
mov
aam
inc
or
es
or
shrb
lds
insl
cs
and
fdivr
xor
fisubs
repnz
sub
test
mov
stc
push
popf
int
or
outsl
shll
mov
push
ljmp
mov
lock
aas
push
sti
inc
imul
xorl
ret
push
shl
mov
movsb
adc
das
lods
testl
repnz
inc
push
mov
lods
lcall
cs
lcall
sbb
es
jne
mov
pop
mov
outsl
loop
xchg
adc
icebp
xchg
mov
sti
sbbl
stc
popa
inc
fbstp
imul
cmp
mov
pop
scas
dec
pop
mov
push
rcrl
dec
jecxz
mov
ret
jb
add
popa
fstpl
push
fs
cmp
je
aam
mov
outsb
inc
dec
mov
daa
dec
jle
rcr
lds
clc
lock
pop
inc
movsb
sbb
jno
and
jmp
stos
outsb
mov
pop
imul
pop
sub
enter
cmp
mov
int
pop
inc
and
pmuludq
adc
repz
mov
pop
adc
clc
loopne
inc
cmc
jmp
mov
scas
lret
sub
mov
xchg
pop
lcall
sub
push
popa
xor
lret
adc
mov
sub
loopne
pop
adc
popa
pop
push
pop
and
mov
lea
in
mov
add
adc
test
push
xchg
sub
shl
add
or
imul
jp
dec
mov
scas
pop
push
add
pop
orb
sbb
jmp
mov
idivl
ret
repnz
sub
ds
xchg
mov
outsl
bound
je
scas
mov
sahf
jle
xor
loop
mov
iret
pop
mov
dec
push
pop
xchg
mov
mov
adc
xor
add
pop
jno
outsl
in
pop
mov
imul
jne
lds
stos
stc
hlt
pop
fdivrl
inc
jmp
cmc
in
mov
ljmp
xchg
xor
dec
popa
outsl
inc
push
add
movsl
lahf
mov
std
rcll
lods
lods
rorl
fidivrl
jl
mov
xchg
ss
xor
rorb
xchg
popf
sbb
xchg
jns
pop
sahf
pmaddwd
mov
pop
xchg
adcb
sub
addb
lock
cmp
mov
jg
jbe
les
leave
jbe
mov
data16
inc
fwait
add
push
lds
popf
xor
in
mov
jno
aaa
xor
in
aad
out
mov
mov
adc
add
xor
or
stos
jecxz
movsl
cmp
pop
inc
lds
fidivl
fldt
jp
int3
adc
mov
dec
sub
stos
cmp
sahf
cmp
sbb
mov
sub
loopne
in
mov
loope
inc
shlb
inc
dec
lods
mov
jne
stc
xchg
mov
pop
push
inc
sub
cld
shlb
ret
test
faddl
mov
lock
cltd
in
bound
insb
in
dec
mov
pushf
or
push
cmp
shlb
lcall
mov
xchg
jecxz
pop
inc
push
mov
sbb
sbb
data16
arpl
repnz
divb
mov
mov
and
insb
mov
cli
lods
cwtl
dec
push
aaa
std
cwtl
sbb
jbe
jns
mov
not
pop
and
or
adcl
fiadds
test
push
mov
adcl
arpl
dec
ja
add
cmpsb
dec
xor
das
sbb
scas
jg
lcall
lods
sub
mov
lgs
sbb
nop
inc
push
imul
stos
mov
xlat
jbe
pop
out
aas
mov
mov
icebp
fdivrp
ds
or
xlat
pop
inc
push
cmp
repz
mov
fisubrs
pop
movsb
aad
pop
ljmp
mov
sub
inc
adc
rorl
aad
xor
pop
rcrl
in
imul
loope
xchg
dec
mov
sahf
and
lahf
cmp
and
ljmp
lock
inc
xchg
lret
out
jb
rcll
mov
icebp
jge
push
aas
cltd
enter
xlat
jo
adc
xchg
lahf
ret
xor
dec
je,pn
icebp
or
add
popa
jp
add
push
test
mov
sbb
jns
cmpsb
out
lock
xor
lret
int3
or
xchg
sub
fnstcw
adc
cmp
add
xor
scas
push
pop
and
push
lock
fildl
xchg
push
sub
jmp
stos
inc
jmp
xor
jle
bound
arpl
or
mov
mov
test
aam
into
add
jl
arpl
adc
cs
xor
or
hlt
jge
adc
dec
mov
sbb
jmp
adc
xchg
cmp
inc
lgs
mov
aad
les
jb
movl
and
movsl
lods
mov
cmp
mov
mov
cmp
loope
insl
or
add
adc
adc
lcall
jl
push
sbb
inc
sbb
xor
rcl
pop
jl
xorl
lcall
cvtps2pi
or
fs
sbb
ss
cwtl
sar
sub
js
inc
push
sbb
adc
pop
pushf
jmp
push
and
fisubl
outsl
es
clc
sti
push
dec
adc
je
outsl
gs
push
repnz
xchg
cmp
icebp
dec
jnp
sbb
jmp
mov
dec
popa
lcall
inc
hlt
push
push
daa
jp
inc
sbb
sub
dec
iret
loope
push
jno
popf
ljmp
push
and
mov
out
aam
fildll
mov
ljmp
xchg
mov
int3
pusha
cli
mov
ret
jg
cltd
cltd
test
dec
nop
xor
in
xor
dec
into
mov
lea
outsb
sbb
js
in
in
jecxz
push
xlat
bound
sbb
mov
jne
fdivl
cmpsb
out
imul
insb
ss
pop
pop
mul
std
push
xchg
mov
push
scas
jae
xor
fadd
xlat
adc
jmp
test
xchg
les
std
xor
adc
sub
jb
or
movl
popf
aas
and
inc
sbb
push
jnp
loope
fwait
mov
or
repnz
popa
insl
gs
in
mov
lds
jae
xchg
out
cmp
mov
shlb
jle
lods
xor
aaa
scas
push
enter
jmp
call
call
mov
test
jo
jo
notb
mov
cltd
cmp
int
push
ret
aaa
or
int
xor
dec
icebp
jbe
mov
movsl
scas
add
test
jecxz
lret
xchg
mov
cli
sbb
ret
push
and
pop
push
in
add
rcrb
lods
sub
sbb
ljmp
sti
cmp
test
jbe
fcoms
sti
addr16
lea
idivb
lods
add
sub
push
add
mov
xor
insl
jmp
push
push
movsb
pushf
movsb
scas
fwait
pop
mov
loope
cmc
mov
mov
addl
loope
push
stos
bound
mov
xchg
ret
adc
into
jo
sbb
sub
mov
ss
lea
push
loopne
aas
mov
rol
cwtl
les
xor
lods
les
sbb
mov
xchg
or
xor
lds
jl
push
inc
int3
test
out
mov
xor
loopne
jae
pop
and
lea
sub
imul
cmp
add
filds
icebp
push
shrb
sbb
push
sub
aam
push
cmc
in
dec
rep
push
add
into
mov
scas
out
lods
dec
pushf
ljmp
inc
mov
mov
or
adc
rol
cltd
adc
cld
inc
outsb
xor
push
sbb
xchg
cmp
mov
jmp
loopne
cmpsl
sub
decl
xchg
daa
test
aam
xor
pop
jnp
out
sub
xchg
mov
stos
mov
test
lods
int
adc
cmp
jmp
les
cld
cmpsl
mov
shrb
lods
out
or
jecxz
push
js
cmp
pop
scas
pmulhuw
clc
xor
bound
in
pop
sahf
jbe
sti
testl
cltd
mov
pusha
inc
pop
mov
mov
aam
leave
mov
xchg
jge
shlb
dec
not
js
cmp
dec
fsqrt
mov
test
xlat
addb
xchg
mov
or
rclb
pushf
push
jge
jp
ret
sqrtps
fcmovb
in
gs
or
add
rclb
stos
nop
lret
das
or
rcrl
adc
and
jns
iret
leave
test
cmp
mov
cmp
push
js
addr16
mov
pop
pop
xor
lcall
mov
out
inc
cmc
mov
cmp
imul
mov
mov
push
jp
sbb
ljmp
sbb
mov
push
mov
xor
lock
mov
sub
pop
negl
inc
jg
pop
ja
mov
pop
divl
out
loopw
or
testb
loope
arpl
into
ret
pop
adc
push
pop
cmp
in
repnz
mov
cwtl
jno
nop
mov
ja
push
mov
dec
leave
mov
mov
adc
outsb
push
dec
movsl
xchg
and
mov
jmp
por
push
les
fnsave
outsb
adc
pop
push
call
js
scas
push
sub
fisttps
arpl
in
iret
pusha
fsubr
shl
jp
int3
inc
arpl
pusha
ss
cmpsb
insb
xchg
jle
pop
cmp
cmc
xor
mov
xchg
sarb
mov
hlt
inc
int3
inc
sti
pop
jl
push
xchg
mov
das
adc
fmull
xchg
pop
sarb
xchg
inc
cmp
or
testl
pop
bnd
lods
ja
jle
pop
out
leave
or
mov
inc
dec
lods
or
icebp
lahf
xor
mov
std
outsl
imul
jmp
push
jo
sarb
insb
cmp
pushf
or
inc
jp
rcll
icebp
fsts
sub
ficoml
loop
mov
sbb
in
cli
or
push
popa
and
cmp
cwtl
pop
mov
lea
or
mov
inc
inc
jl
addr16
or
mov
mov
pop
adc
out
or
dec
pop
pop
jns
mov
and
push
or
sbb
xor
arpl
sbb
das
nop
pusha
add
outsl
fs
mov
pop
push
cmp
pop
test
sbb
jno
ljmp
mov
dec
in
jmp
imul
andl
cltd
dec
cmp
sub
ja
test
lret
push
test
stc
mov
daa
sbb
inc
lahf
sbb
icebp
sbb
pop
dec
fs
daa
pop
xorl
in
andl
and
lods
push
addr16
imul
imul
adcb
xchg
lcall
lods
lret
popl
cwtl
push
dec
lret
pop
fs
jp
mov
xchg
clc
jnp
cmc
call
xchg
xor
in
jne
add
loope
dec
test
fistpl
nop
push
lret
daa
imul
push
cli
lods
or
cmp
out
jp
fdiv
pop
mov
mov
push
inc
pop
ret
dec
push
dec
cltd
cwtl
pop
cmp
xchg
mov
add
pop
pop
push
ss
mov
addb
jmp
fs
sbb
push
adc
mull
push
sti
jmp
pop
shl
xor
or
aad
cmp
cmp
aam
adc
pop
mov
and
jl
popf
and
xor
sahf
or
fcomp
ret
in
inc
inc
call
xor
and
sbbl
push
cld
lret
xor
insb
dec
not
cltd
push
ljmp
movd
mov
dec
adc
push
enter
ss
cmpl
xchg
push
stos
sub
repnz
fs
and
xchg
lret
dec
cmp
lcall
jmp
pop
in
xchg
pop
mov
andl
sbbb
rcrb
rcll
push
andb
mov
push
lea
dec
out
adc
cltd
outsl
sbb
repz
xchg
mov
es
lods
mov
jne
cs
loope
insb
jl
mov
lret
adcb
out
sub
sub
sub
pop
imul
dec
aam
repz
mov
push
out
cmp
lds
cmp
out
int
fmuls
and
cmpsl
adc
in
jg
xor
lret
aas
jp
loop
outsb
sbb
or
popa
movsl
movsl
mov
lea
pop
call
inc
sahf
pusha
jg
xor
xchg
das
mov
push
mov
in
jg
and
jbe
data16
int
inc
mov
lret
mov
jnp
decb
jne
or
adc
inc
jmp
testl
enter
cmc
xor
adc
cli
popf
and
enter
add
mov
icebp
mov
push
sub
sbb
add
jp
adc
cmp
test
xlat
pop
daa
jmp
dec
cmp
sahf
in
push
insb
sub
adc
out
in
movsb
std
and
nop
dec
lea
out
push
mov
jle
inc
lds
push
aad
xchg
js
fmull
stos
sub
mov
jle
xchg
or
mov
or
push
fisttps
jge
xor
lret
xchg
dec
mov
hlt
add
mov
pop
mov
scas
aad
xchg
enter
test
repnz
sbb
xchg
repz
mov
mov
and
xor
sbb
cmpsl
call
mov
or
fisubl
mov
xchg
aas
inc
nop
mov
mov
sahf
ljmp
mov
cld
sbb
dec
mov
sub
fs
inc
les
or
sbb
adc
inc
xchg
mov
sub
insl
cld
push
inc
loop
dec
pop
mov
scas
and
pushf
xchg
call
and
into
and
push
push
ret
sbb
sub
js
push
inc
or
outsb
call
cmp
gs
adc
sbb
xchg
fwait
mov
xchg
jb
icebp
xchg
sti
ret
inc
in
loop
add
inc
pushf
mov
pop
bound
inc
and
xchg
arpl
stc
loope
sub
or
int
movsl
adc
push
dec
test
ja
or
jno
adc
jbe
scas
dec
ja
dec
mov
push
mov
call
xchg
jb
out
fxch
mov
in
fs
lahf
dec
inc
lret
inc
jl
icebp
xchg
scas
imulb
and
loopne
dec
jbe
inc
jo
les
and
es
cs
dec
pop
test
cwtl
cmp
jbe
mov
mov
inc
out
aaa
jae
or
push
mov
push
scas
jbe
cmp
loopne
cmp
int3
imul
inc
dec
jp
jmp
imul
lds
leave
sub
sub
add
add
test
ds
and
push
inc
xchg
mov
andb
in
cmp
mov
xor
push
mov
cmp
lods
sub
test
mov
xchg
rolb
imul
xor
push
inc
dec
jne
cmp
pop
jg
mov
mov
stos
insb
ret
icebp
sub
fwait
cld
sbb
cmpsb
jle
fadds
mov
mov
loopne
dec
out
rorb
testb
pop
or
into
cwtl
jge
xchg
mov
ss
lods
pop
push
les
push
rclb
jmp
js
mov
ret
iret
sbb
fwait
cld
sti
sbb
cli
cmpsl
mov
push
jae
mov
movsl
dec
in
jb
orl
iret
jle
icebp
xorl
jae
test
xchg
jb
test
fsts
ret
jns
loopne
adc
jbe
adc
cmpsl
mov
jle
enter
jb
mov
push
add
xchg
push
jmp
lods
dec
cli
xor
push
jmp
or
fists
out
rcll
mov
cwtl
xchg
xor
pop
sub
xchg
inc
lods
xor
cli
cli
mov
sub
sbb
sbb
xor
dec
mov
sbb
imull
loope
int3
lods
inc
cmpsb
test
push
aaa
push
push
pop
outsl
jmp
fsubr
jo
dec
and
jnp
insl
jp
lret
jecxz
icebp
test
cli
sbb
nop
fadds
mov
cmp
mov
lock
cmp
push
pop
out
idivl
sub
ja
repz
sbb
xor
jecxz
dec
ljmp
xor
mov
insb
dec
push
outsl
scas
pop
mov
fcoml
adc
adcl
pop
sub
stc
cmpsl
in
jmp
stc
movsl
cltd
jle
lock
sub
out
jnp
adc
int
dec
out
cltd
or
es
mov
cmc
push
push
outsb
dec
mov
mov
insb
call
in
f2xm1
cmp
test
out
adc
dec
adc
jl
imulb
adc
inc
bnd
jp
pop
mov
ljmp
mov
jbe
mov
inc
xchg
rcr
pop
and
dec
push
in
sahf
inc
ja
mov
jno
into
mov
push
and
dec
out
mov
mov
xchg
pusha
jp
mov
xor
ljmp
je
adc
and
sub
das
inc
pop
mov
add
cmp
inc
and
mov
les
adc
inc
ljmp
mov
int
aam
lahf
inc
adc
repnz
iret
mov
aad
in
rolb
add
es
mov
shll
jno
cmpb
shlb
fcoms
mov
rolb
js
add
dec
mov
sbb
enter
jg
cmpl
xchg
imull
xor
pop
pop
dec
pop
jno
out
and
imull
into
cmpsb
inc
xchg
ret
push
dec
popa
lock
test
into
loope
outsl
sub
pand
notl
in
pop
lcall
aas
mov
mov
stos
pop
andb
add
pop
xchg
jbe
and
jmp
xor
rcrl
pusha
cmpsb
roll
les
iret
inc
xlat
addr16
xor
sub
mov
mov
xor
jge
pop
insl
xorb
mov
inc
mov
pop
cmp
lea
xchg
inc
insl
jg
cmc
movsl
sbb
rol
push
cmp
sub
cmpsb
lret
add
jbe
jns
jno
jecxz
iret
mov
push
movl
addr16
cltd
sbb
imul
mov
sarl
sbb
fldt
pop
enter
repz
outsl
lahf
testb
mov
in
imul
test
stos
clc
dec
xor
lock
pop
push
cmpsb
out
xor
call
fwait
or
jns
sbb
lea
xchg
pop
push
push
push
in
sbb
loopne
pop
inc
dec
sub
lret
outsb
xchg
add
and
push
test
arpl
add
adc
les
add
in
cmp
shll
out
or
iret
or
xchg
push
ss
sub
lods
xor
and
ja
cmp
cmpsl
mov
mov
gs
mov
dec
push
dec
inc
and
ss
push
sbb
mov
or
push
sbb
divl
add
mov
daa
in
ss
in
mov
cmpsl
mov
cli
xor
mov
fldcw
imul
push
cmp
adc
ret
mov
adc
push
push
lret
jne
out
cli
xchg
insl
cmp
sbb
xlat
sub
cmp
cmp
sub
insb
mov
jle
and
insl
push
push
add
int
scas
pop
mov
rcll
jae
inc
imul
dec
aam
test
adc
ret
imul
cmpsl
adc
js
out
adc
addl
push
int3
inc
mov
xchg
loop
sbb
and
pop
push
mov
jb
cmp
sbb
dec
inc
roll
jl
insl
cmc
push
pop
shlb
fbld
lahf
cmp
aam
xchg
pop
mov
add
or
scas
arpl
or
stc
in
imul
sub
inc
mov
adc
pop
mov
inc
xchg
test
fcmovnbe
jmp
jne
fadd
sub
jo
ljmp
pop
mov
jle
cmp
aam
cltd
gs
dec
shlb
add
and
call
dec
in
movb
loope
xchg
imul
add
in
pop
xor
dec
ja
adc
in
dec
inc
push
outsl
mov
scas
add
or
sub
dec
std
mov
xchg
popa
sbb
fsts
and
lds
pop
fcmovnu
jle
add
iret
pop
loope
adc
movsb
out
stos
sub
pop
pop
pop
je
mov
lahf
fstpt
cmc
and
dec
sbbl
push
or
sbb
sub
mov
js
mov
push
andb
es
movl
pop
xchg
mov
dec
inc
and
bound
adc
xlat
cmc
out
ret
aaa
mov
cmovp
fcoml
out
jge
lock
xchg
jns
in
daa
mov
or
or
and
aas
add
pop
xor
push
cli
lcall
dec
fwait
xchg
in
pop
int
jecxz
lock
mov
push
insb
mov
jae
out
stc
sub
rcrl
inc
test
adc
adc
test
iret
iret
and
mov
push
xlat
decl
lcall
dec
mov
mov
and
test
mov
xchg
push
cmp
insl
loope
dec
popf
and
jbe
js
cmpsb
or
mov
iret
popf
andb
roll
jae
jbe
lcall
and
cmp
inc
in
aaa
push
inc
iret
cmp
adc
pop
mov
fdivl
adc
xchg
mov
fstpt
mov
or
xchg
mov
mov
sbb
pop
roll
inc
push
pop
adc
add
xor
gs
scas
mov
outsb
adc
aam
xchg
mov
mov
dec
adc
rclb
cmp
mov
pusha
sub
sub
mov
jmp
pop
mov
xlat
xor
xchg
inc
in
push
das
add
inc
scas
sub
nop
lret
sub
stos
pop
jb
pop
stc
push
imul
xor
push
test
push
pop
cmp
sbb
fs
sub
popa
repnz
fs
addb
or
lea
pop
pop
xlat
mov
mov
aam
dec
or
scas
adc
jbe
jne
inc
xchg
popl
sbb
std
js
pop
gs
idiv
fldenv
jae
jp
pop
repz
jmp
pop
pop
sbb
jp
stos
aam
sar
std
or
pop
xor
cmpsb
pop
pop
inc
or
mov
jnp
sub
std
sti
push
imul
insb
jno
push
gs
ds
mov
and
xchg
jns
and
and
lahf
adc
in
mov
push
push
dec
jmp
aas
pushf
pop
clc
jno
mov
adc
mov
cmp
scas
cld
lods
pop
or
ret
je
push
mov
insb
or
and
cli
xor
stos
cli
add
lret
cs
and
inc
clc
push
cmpsl
imul
lods
mov
lods
or
cltd
sbb
sti
mov
pop
sbb
ret
sbb
pop
lcall
mov
data16
jb
mov
pop
lret
sti
ss
pop
xchg
pop
push
sub
test
div
mov
mov
js
jle
add
cmp
mov
das
insb
adc
nop
inc
fsubrs
xchg
lahf
lret
in
shll
mov
dec
aam
fsubr
inc
mov
insb
sub
fadds
adc
out
push
mov
sbb
rcpps
cmp
and
imul
data16
mov
aam
add
jmp
aaa
lea
cmpsl
adc
aad
mov
stos
inc
jb
fdivl
inc
jbe
xor
mov
add
test
jp
ret
adc
inc
and
pop
sub
sbb
pop
and
push
mov
loopne
cmp
neg
xchg
rcrl
call
lahf
sbb
sub
adcl
and
or
iret
push
jne
xchg
bound
mov
popf
loope
cmpsl
fldcw
inc
loope
ss
adc
cmpsl
sub
scas
nop
scas
adc
inc
lods
sbb
xchg
push
popf
mov
or
fistpll
aaa
cmpsb
test
leave
xor
fnsave
add
jo
aam
dec
stos
mov
ret
das
xchg
out
lock
call
xchg
mov
inc
push
ret
test
jo
mov
inc
andl
lcall
and
loope
mov
jno
and
jp
sti
mov
movl
out
xor
iret
mov
scas
pop
jnp
or
mov
ja
dec
sub
xchg
xchg
sarl
dec
adc
xor
xor
dec
push
int
mov
subb
jo
imul
sbb
jl
cmp
inc
fcmovnu
push
movsb
lods
test
dec
fcoms
lds
push
imul
mov
mov
cs
push
pop
lahf
scas
mov
mov
ficoml
fsubl
jae
cwtl
xchg
cltd
test
fst
subb
fucomi
ja
stc
add
ret
rcl
fmuls
movsl
bound
sahf
push
add
cmp
push
or
pop
sub
jne
add
adc
sbb
hlt
lock
push
mov
shr
mov
sti
inc
pop
filds
xchg
mov
outsb
xor
lahf
push
in
mov
notb
je
mov
stos
xchg
xorb
jecxz
in
fadds
cmp
int3
leave
call
dec
insl
aam
dec
jae
lret
mov
loope
mov
insl
mov
add
ljmp
or
sub
mov
fwait
andl
shlb
inc
fdivrs
add
jns
jb
mov
cmp
shrb
rcl
pop
mov
jle
pushf
test
mulb
popa
dec
push
hlt
mov
xor
xor
daa
mov
pop
js
jne
pop
mov
sbb
pop
fst
out
push
aad
cmpsb
aaa
out
cmc
dec
stos
loopne
jo
in
je
and
mov
mov
aaa
jecxz
xchg
jmp
or
sbb
mov
dec
cmpsb
hlt
movsl
lret
fcmovnb
fsts
jp
xor
inc
cs
and
sub
mov
lret
xchg
add
jg
js
in
cmp
xor
hlt
lahf
or
callw
sahf
xor
pop
mov
in
xor
sub
dec
aad
icebp
pop
mov
push
xor
int3
xchg
mov
mov
stos
pushf
lods
scas
ja
mov
hlt
xorb
cwtl
inc
pop
leave
adc
xchg
cs
add
cld
push
outsl
test
push
mov
cmpsb
push
or
inc
jbe
push
clc
push
out
push
movsl
fwait
mov
cmc
nop
and
sbb
leave
push
cmc
outsb
mov
arpl
in
mov
mov
jl
or
mov
mov
aad
xchg
lret
xchg
scas
mov
cmp
out
test
pusha
mov
push
test
scas
lahf
hlt
call
popl
fists
or
lods
in
mov
loope
adc
dec
decb
loope
jp
mov
nop
cmpsl
lret
in
cmc
daa
shrl
xor
inc
jmp
adc
xchg
sbb
fs
mov
clc
cmp
stos
nop
mov
out
jl
ss
mov
fs
test
call
mov
pop
dec
out
into
movsl
sub
push
aas
mov
sbb
and
mov
adc
shlb
jp
xchg
cli
mov
sbb
stc
shrb
jns
outsb
sub
out
mov
push
in
or
xor
mov
rolb
ss
cld
cld
stc
mov
xor
pop
mov
call
es
mov
xlat
jns
mov
sbb
mov
xchg
scas
xor
out
jl
aas
jns
fcompl
dec
ljmp
mov
loope
aas
xlat
jmp
lret
movsb
adc
lods
push
mov
xor
dec
pop
add
aas
pop
mov
ds
je
add
sti
subl
mov
scas
ds
cli
xor
xchg
add
shl
pop
aad
out
xchg
je
into
loopne
xor
add
incl
inc
sub
mov
add
mov
sti
popa
xchg
cmp
pushl
sub
mov
imul
fnstcw
pop
popf
jb
mov
data16
imul
addr16
aas
push
fsubrs
sbb
std
lret
bound
mov
fiaddl
adc
or
gs
call
sbb
mov
out
pop
repnz
movsb
ja
ret
adc
dec
adc
cmpsb
xchg
mov
mov
jo
add
xor
test
mov
in
and
push
xchg
jl
stos
jbe
xor
pop
setns
add
add
jne
mov
mov
test
add
loopne
mov
cmp
std
dec
stos
rclb
out
stos
sti
adc
pop
jg
outsb
test
cmpsl
adc
ss
and
cld
ds
mov
jo
pop
xlat
les
mov
dec
sahf
inc
push
cmp
enter
sbb
mov
bound
push
out
mov
mov
call
jae
add
sbb
mov
lahf
call
jge,pt
mov
xchg
sbb
cmpsl
inc
jnp
add
divb
xchg
add
je
cmp
or
cwtl
pushf
sbb
mov
in
or
adc
or
and
aas
es
stos
clc
ror
pushf
roll
enter
nop
out
repnz
jp
xor
mov
mov
ljmp
jbe,pt
loopne
adc
popa
dec
inc
push
out
lock
and
add
sbb
imul
xlat
mov
imul
std
arpl
jp
cmpsl
out
xorb
das
out
or
shrb
bound
lahf
fbstp
add
mov
jb
out
push
dec
inc
adc
jle
ds
add
mov
jbe
test
jno
shl
inc
or
pusha
scas
sarb
pushf
movsl
sahf
and
sbb
adc
mov
xchg
lods
stos
mov
dec
or
dec
stos
movsb
gs
inc
sbb
ficoms
push
fstpt
and
mov
mov
nop
mov
adc
and
daa
ss
push
jbe
xor
or
inc
fs
add
movsbl
out
inc
fst
imul
inc
adc
int
mov
ret
jecxz
xorb
lock
shrb
mov
cwtl
inc
mov
fidivs
pushl
jns
push
rorb
dec
push
test
pop
fbstp
mov
jo
aaa
inc
lret
clc
mov
sti
mov
jnp
mov
aad
push
dec
fcmovne
push
mov
lock
mov
mov
jp
cmc
fsubl
push
lea
mov
arpl
lock
or
pusha
cmp
insb
push
cs
sub
sub
stc
lds
sub
cmp
sbb
sub
mov
jmp
dec
add
ret
popa
cld
into
push
dec
test
rolb
outsb
push
sbb
cmpsl
not
dec
fsubl
rolb
sbb
xchg
jmp
scas
push
cli
and
mov
push
iret
int3
in
cltd
cmp
mov
push
call
mov
jl
and
sub
shll
and
mov
mov
cwtl
int
out
xchg
je
inc
mov
lods
lods
push
push
mov
adc
dec
ret
shlb
popa
mov
jns
mov
fisttpll
mov
mov
and
mov
fstps
sub
mov
fs
jmp
xchg
cmc
xor
sbb
ret
xchg
gs
jno
popa
mov
xchg
fistl
lahf
or
retw
xchg
insl
fs
jl
sub
test
push
fstl
jl
out
movsl
popa
iret
xchg
fdivrl
jno
jae
jae
jg
fldt
std
repnz
adc
mov
mov
sub
inc
sbbb
mov
add
sbb
out
push
mov
pop
add
in
inc
sub
es
cmp
ret
and
loop
std
jecxz
lds
loopne
xor
adc
and
stos
xchg
insb
shlb
cmpsb
adc
sub
out
cli
mov
repz
shl
cmpsl
in
int
jno
xchg
nop
mov
mov
cli
call
pop
nop
adc
mov
mov
in
fs
cltd
cmp
mov
rclb
jg
lock
add
ret
int3
or
mov
xchg
dec
jne
or
dec
or
mov
sub
pop
rcr
push
popf
fsubrs
fsubl
arpl
mov
imul
loope
sub
ss
dec
test
test
setns
je
icebp
rorb
int3
mov
dec
pop
movsb
arpl
xchg
mov
test
push
jbe
enter
icebp
rorb
lahf
jb
aad
lcall
adc
sbb
jne
mov
pop
jmp
jecxz
inc
jb
lods
cmp
hlt
adc
inc
ds
repnz
push
addr16
fs
sahf
or
dec
lods
xchg
stos
mov
mov
pop
fiadds
cmc
sahf
mov
das
sarb
pop
or
xor
lret
cmpsl
add
pop
ret
push
or
out
ja
xchg
popf
cmp
pop
inc
jo
xlat
push
push
or
stc
jecxz
mov
rorl
add
mov
aas
sbb
das
clc
pusha
icebp
cmpb
dec
rclb
cmp
or
add
add
and
mov
or
cmp
xchg
sahf
je
scas
mov
scas
jmp
sti
and
and
lcall
hlt
adc
pusha
imul
xchg
xor
dec
sub
ja
fidivs
jle
fistpl
icebp
jae
movsb
mov
lock
cmp
negb
jo
fbld
popa
dec
and
cli
icebp
xor
push
sub
xchg
js
jge
sbb
lds
cltd
or
sbb
and
inc
hlt
jmp
sbb
in
inc
xchg
pop
stos
cld
pop
or
pop
int3
jo
inc
popa
fcompl
mov
stc
push
movsl
mov
aaa
add
ret
cmp
repnz
and
cmp
or
test
loop
fstpt
ja
mov
push
ret
push
adc
jmp
icebp
cmp
dec
sub
mov
jle
sub
mov
sub
test
push
jae
dec
push
jo
pusha
pop
lcall
inc
idiv
in
nop
jge
lds
movsb
arpl
push
pop
lcall
loop
inc
add
cmp
out
mov
inc
sub
lea
sub
xchg
xor
ficomps
adc
jg
mov
xchg
ja
insb
lds
dec
sbb
sarl
bound
jle
dec
sbb
cs
test
ljmp
fidivrl
das
outsl
repz
xchg
add
addb
cmp
fnstsw
cmp
xor
add
and
jne
and
popl
je
sbb
jns
add
jg
dec
movsl
sub
xlat
jp
cwtl
aam
mov
and
shlb
xchg
or
lcall
add
mov
test
mov
mov
jae
add
stos
dec
mov
jp
mov
or
mov
hlt
cmp
inc
xchg
je
jmp
jp
xchg
imul
xchg
jg
xchg
jge
icebp
dec
jo
pop
mov
shlb
dec
lahf
cs
loop
test
sbb
mov
hlt
sbb
fists
pop
dec
clc
push
mov
inc
test
pop
xchg
and
jns
mov
or
or
dec
lahf
dec
loope
test
stos
mov
pop
mov
imull
mov
jne
or
test
gs
pop
mov
divl
sub
xchg
mov
xchg
jg
mov
ja
inc
ljmp
mov
mov
lea
sub
call
push
push
repnz
xor
pushf
cmp
or
idivb
out
pop
fiaddl
bound
imul
pop
mov
fs
sbb
cmpsl
jmp
idivb
push
pop
cmp
cmp
mov
adcl
mov
ficoml
cmp
add
roll
push
loope,pt
jl
pop
or
dec
push
clc
daa
jle
cmpl
int
mov
jbe
inc
ss
sbb
flds
xchg
andl
cld
add
sub
sar
or
in
cli
test
xchg
aaa
loop
push
pop
xchg
cs
push
out
cmp
push
lds
scas
ja
icebp
mov
pop
inc
jecxz
lea
adc
jmp
test
pusha
int3
mov
push
ljmp
mov
in
dec
dec
scas
inc
dec
push
in
pushf
lret
test
fs
movsb
sbb
lds
dec
xchg
adc
andl
sarl
mov
mov
lahf
lahf
int
pop
repnz
out
loope
int
scas
adc
jo
fcomi
test
fcom
aaa
cmp
pop
mov
gs
xlat
push
adc
pop
jne
dec
test
pop
add
cmpl
push
rclb
mov
push
shll
sbb
mov
xchg
subl
insl
or
push
nop
inc
stc
push
pusha
popa
or
fisubs
mov
fcompl
sub
stos
lods
fildll
sub
shrl
dec
mov
sti
cmp
jmp
das
iret
cmpsl
rcl
xor
mov
add
jmp
cmpsl
sub
jge
fwait
jb
cmpsl
xchg
push
add
push
in
and
xchg
pop
in
or
adc
shl
push
loop
cld
aad
int
ret
jns
push
divl
stos
scas
in
mov
leave
sti
xor
repnz
lock
push
xchg
cmc
repz
aad
xorb
push
fwait
mov
jmp
pop
dec
mov
lcall
in
and
jns
ret
sahf
popa
sub
jmp
sbb
aas
lods
repz
ss
lret
daa
push
lahf
ss
inc
jb
or
fwait
popa
ljmp
adc
mov
sub
ficoms
adc
lods
int3
sub
aam
scas
dec
fcmovnb
xor
lahf
xor
mov
pushf
std
hlt
aaa
xchg
xchg
mov
push
aaa
mov
and
xchg
xor
aas
cmc
test
push
jmp
cmpsb
mov
movsl
orl
fs
xor
cmpb
adc
inc
jge
cmp
les
pop
inc
push
sbb
or
gs
pusha
lahf
leavew
ret
out
pop
mov
outsb
push
jb
cld
sbb
mov
mov
xor
imul
xchg
mov
pop
pop
push
popf
xchg
ror
xchg
mov
fiaddl
inc
fucomi
mov
jmp
push
sub
push
dec
ficoml
ja
test
or
push
jecxz
jmp
sbb
int3
popf
mov
lea
imul
fxch
mov
and
jmp
fcomi
xor
xor
xor
xor
fldt
sub
jecxz
xor
ret
mov
mov
js
loop
pushf
movsl
repnz
imul
out
sub
mov
repz
xchg
mov
test
scas
bound
clc
or
cmp
xor
cmp
es
shlb
mov
push
std
xchg
stos
mov
mov
ljmp
inc
mov
xchg
pop
xor
fisubrl
repnz
lods
mov
mov
and
daa
pop
dec
or
inc
daa
loope
mov
call
shrl
push
mov
and
lcall
jno
jg
or
jmp
enter
enter
pop
cmpsl
ror
or
cmovp
repnz
jne
mov
jge
std
dec
mov
pop
add
sbb
orb
xchg
mov
pusha
addb
push
inc
fs
and
xorl
aam
flds
adc
pop
int
jae
and
push
xor
adc
rorl
and
lods
iret
js
sub
dec
jecxz
pop
les
pop
sub
xchg
cltd
sub
leave
mull
lods
cltd
mov
mov
jnp
jp
aam
dec
add
imul
loop
pop
jo
mov
outsb
lods
sub
and
or
cmp
nop
adc
mov
idivl
mov
into
mov
je
int
pusha
rorb
cmp
sub
mov
push
mov
adc
adc
cltd
outsl
sub
repz
inc
ret
cwtl
icebp
outsb
sbb
aad
scas
lret
pushf
cmp
push
inc
sti
shl
int
mov
or
xor
inc
movsl
clc
jl
mov
xor
rorl
xchg
outsl
pop
fmuls
jmp
pop
ror
mov
fdivr
xor
cmpb
mov
shr
repnz
cmp
adc
cmpsl
push
sub
lods
or
pop
push
leave
sbb
sub
je
adc
ret
insl
lret
sbb
mov
mov
incb
adc
pop
popf
jge
imul
lret
jecxz
sub
dec
fiaddl
imul
pop
into
arpl
mov
in
cs
xchg
test
cmp
ljmp
cmp
adc
in
sub
cmp
stc
loope
cmpsb
pop
mov
call
jmp
adc
jne
sbb
or
lea
sahf
jl
bound
dec
lea
decl
addb
xchg
icebp
jns
dec
jae
xchg
lret
loope
jmp
aaa
push
aad
ret
imul
push
push
sbb
loop
mov
mov
lds
mov
or
push
ret
jae
mov
mov
pop
rorb
adc
scas
pop
pusha
jnp
imull
mov
sub
out
mov
ss
faddl
mov
push
cmp
clc
add
sub
sub
loop
aas
out
sbb
mov
out
mov
xchg
outsb
scas
and
add
fidivl
xchg
ret
cmp
cmc
shl
xor
push
sbb
bound
pushf
or
loop
mov
lea
lea
sub
push
push
xchg
pusha
adc
int
lret
jle
mov
aaa
inc
nop
and
jbe
cs
hlt
bound
jmp
xchg
lret
out
dec
xorb
lret
movsl
mov
push
hlt
loope
mov
inc
or
adc
je
jo
pop
cld
rcrl
leave
push
ret
push
sub
dec
scas
cmc
inc
les
leave
mov
rcrb
mov
roll
xor
adc
idivb
dec
or
subps
out
inc
fidivrs
daa
jl
add
pusha
or
pop
xchg
or
dec
mov
cmovo
jns
pop
iret
jl
fildl
aas
push
mov
fidivrl
push
cmp
xorl
shl
lock
inc
aam
push
or
xchg
imul
loope
cmp
dec
xor
mov
pop
mov
mov
jno
enter
pop
xor
daa
enter
mov
fisttpl
xlat
mov
loope
adc
je
es
enter
adc
pop
movsb
out
xchg
pop
fxch
insb
stos
test
or
into
cmc
ret
mov
jo
roll
fildll
mov
dec
loope
or
mov
inc
lea
dec
dec
movsb
std
mov
into
cmp
push
jge
pop
int
jmp
aas
out
ja
push
cltd
enter
mov
and
sub
xchg
jmp
das
sbb
cmpsl
pop
pushf
dec
jbe
mov
sbb
push
fmull
sahf
imul
xor
xor
fcoms
dec
pop
add
xchg
out
loope
xor
and
xorl
push
push
sub
mov
jp
lea
int3
adc
push
and
sub
outsl
cmp
shll
pop
lods
mov
mov
mov
push
inc
xchg
sbb
sbb
arpl
inc
lods
lods
cmp
push
dec
cmpsl
adcb
std
out
das
pop
daa
cmp
out
fsubs
cmp
fcoms
cmpsb
loope
add
in
imul
punpckhwd
daa
mov
sbb
xorb
stos
mov
mov
push
daa
fdivr
ljmp
frstor
push
loope
jb
push
mov
cmovno
daa
mov
jns
ret
pop
adc
mov
je
js
jl
shlb
nop
test
sub
pop
mov
movsl
sbb
push
xchg
fnstsw
dec
std
leave
jp
lcall
ret
test
inc
lds
popf
pop
pop
ds
jmp
jg
popa
add
push
xchg
ret
add
andb
mov
adc
shlb
jecxz
sti
inc
outsb
mov
leave
cmp
pop
mov
jle
adc
cld
loope
ss
fnsave
out
ss
mov
xchg
mov
inc
cmp
out
xchg
adc
enter
testl
inc
cmc
adc
adc
mov
outsl
sarl
mov
inc
lock
scas
mov
pop
roll
jbe
mov
mov
cwtl
leave
psubsw
jge
fcomps
in
fwait
lods
and
and
sub
pusha
pushw
leave
mov
js
add
jg
nop
mov
dec
dec
jb
je
xor
in
stc
xor
fs
mov
loope
sub
pop
mov
sbb
xchg
push
test
dec
cmpsb
popa
cmp
mov
cmp
test
aas
mov
xchg
jae
jg
mov
pop
mov
adc
clc
pop
subb
push
pop
push
cmp
mov
aaa
out
cmpb
xchg
test
mov
adc
popa
popf
mov
add
pop
mov
mov
lea
push
push
es
sbb
and
out
adc
add
popa
jl
jo
and
mov
mov
mov
fmuls
xor
movsl
in
ja
adc
push
cli
orl
repnz
add
test
push
cmp
pushf
in
je
clc
int
shll
test
arpl
fisubrs
xor
cmpsl
or
and
mov
xchg
jae
outsl
int
jb
push
sahf
jg
cmp
sbb
dec
iret
je
push
insb
mov
mov
xor
jbe
xor
ljmp
push
add
lods
pushf
popf
gs
xor
xchg
in
sbb
xchg
inc
mov
loop
or
push
pusha
jg
or
push
lret
jno
rolb
xor
cld
rcrl
test
cmp
inc
jns
inc
sti
clc
jae
fnstenv
gs
in
test
dec
sahf
and
adc
cmp
aaa
fstpt
push
bound
dec
into
popa
mov
test
bound
lahf
movsb
or
std
mov
sahf
sti
repz
into
ficomps
mov
cmp
mov
notl
mov
xor
jge
and
imul
adc
cmpsl
jp
dec
stc
cmp
insb
cwtl
push
shll
inc
lods
lahf
sbb
into
ret
cmp
mov
inc
test
pop
cmpb
mov
into
shll
in
into
xchg
lret
jne
push
pop
xchg
leave
adc
lods
rdtsc
shl
cmp
push
and
movsl
loop
call
pop
daa
iret
sbb
sub
and
mov
sub
cmpsl
stos
push
pop
jbe
subb
subb
insb
jns
cwtl
cli
sbb
test
mov
nop
xchg
cltd
mov
loopne
lods
bound
out
mov
push
mov
in
lret
mov
inc
popa
sbb
mov
fldenv
lahf
out
pop
and
jae
jp
mov
mov
je
add
push
xchg
loopne
mov
xor
and
cmc
add
xchg
mov
xlat
or
and
push
pop
and
inc
scas
and
inc
mov
add
xchg
mov
and
in
xorb
cltd
push
mov
xchg
loopne
jle
jmp
pop
adc
sahf
inc
fidivl
dec
xchg
or
rorb
mov
add
cmp
cmc
mov
add
sub
add
or
xchg
cmpsl
cmp
inc
scas
in
ljmp
shrl
and
pop
xchg
sbb
call
mov
or
jl
cltd
push
xchg
push
xor
cmp
lcall
xor
mov
sbb
lods
sub
scas
pop
sbb
inc
dec
int3
mov
sbb
pop
and
dec
sub
jecxz
ja
push
pop
mov
inc
xchg
xchg
and
pop
lret
imul
mov
cmpsl
mov
or
movsl
adc
pop
in
jmp
out
negl
pushf
rcll
ds
dec
xor
js
mov
lods
fdivl
or
xor
xchg
subb
out
imul
clc
cwtl
add
lods
mov
xor
test
scas
mov
mov
or
or
imull
xchg
pop
push
pop
daa
xlat
sub
ja
lods
fisubl
gs
test
sub
or
shr
mov
inc
and
inc
lods
mov
sbb
mov
fs
lret
mov
ja
lcall
lret
cmp
adc
ss
push
push
push
dec
or
call
and
fisubrs
in
pop
lahf
pushw
xchg
aad
inc
mov
notl
inc
xlat
adc
and
repnz
xchg
call
fwait
cmp
mov
fs
int3
mov
scas
jmp
cld
jno
xchg
inc
push
test
ret
xor
sbb
pushf
xor
mov
mov
mov
xchg
in
out
pop
mov
dec
xor
mov
add
inc
lret
mov
cmpsl
popl
jo
subb
outsb
sbb
mov
insl
and
mov
das
fstl
sbb
mov
pop
icebp
nop
add
mov
xor
ret
imul
or
mov
into
mov
cmp
dec
popf
pop
and
jl
cwtl
addb
push
movntq
inc
mov
push
int3
roll
sub
add
test
jne
jmp
adc
into
ret
lds
filds
xor
inc
cmp
inc
ret
scas
and
movsb
inc
cmp
ds
sub
cmp
add
call
mov
inc
divb
push
jecxz
popa
mov
jg
cmc
aam
pop
mov
mov
cli
sbb
inc
pop
outsb
icebp
push
mov
pop
loopne
dec
sbb
mov
outsb
fistps
stos
arpl
jge
mov
insl
jno
sub
mov
xor
sub
sbb
rorb
test
sub
mov
xchg
call
sub
shl
mov
shr
lahf
test
in
mov
pop
das
xchg
lahf
push
sbb
scas
push
sub
ja
xchg
pshufw
push
cmp
mov
or
aad
fwait
mov
decb
and
mov
movsl
lret
sbb
ficompl
cmp
dec
sub
in
cmp
lock
xchg
lods
mov
or
lods
mov
sub
push
addr16
jo
lea
jmp
push
pop
sahf
movsl
jo
scas
mov
inc
pop
xchg
mov
sbb
out
int
aam
and
jge
jp
sahf
cmp
or
cli
sub
xor
lret
fcmove
sbb
push
mov
push
shl
sti
pop
dec
arpl
ljmp
bound
iret
js
fnstsw
cmp
gs
filds
xchg
xchg
out
and
movsl
push
adc
in
and
insl
mov
fcoml
jne
adc
stc
xor
and
mov
lcall
shl
ret
sti
js
sbb
lret
mov
jecxz
daa
pushf
jg
jnp
xchg
jge
xchg
fldt
subl
sbb
mov
fwait
mov
fs
scas
rol
fs
xor
cmpsb
cmp
push
xchg
aam
insb
mov
ret
shll
ds
cmp
mov
fimuls
aas
ror
push
jg
mov
or
push
add
pop
in
inc
lcall
jo
push
cwtl
jb
dec
sub
and
pop
loope
out
sbb
or
cmp
sub
inc
dec
hlt
push
test
dec
mov
fmuls
leave
sbb
push
jne
cwtl
jo
adc
mov
shrb
inc
jecxz
or
dec
outsl
fadds
add
jae
xchg
mov
int3
push
test
stc
xor
into
xor
js
ficoml
push
int3
jbe
or
or
ljmp
mulb
iret
cwtl
dec
jbe
add
xchg
or
mov
jns
out
icebp
sub
or
ljmp
and
mov
sub
mov
xchg
clc
or
sbb
int
stos
outsb
mov
jge
dec
lods
cmp
pop
pop
in
inc
or
jno
cmp
les
inc
cld
push
push
sub
add
ljmp
and
mov
lods
int3
dec
pop
xchg
iret
or
dec
and
mov
roll
sub
mov
fwait
in
jmp
mov
mov
xor
sbb
pusha
in
lcall
cwtl
out
push
sub
les
or
imul
or
gs
pop
mov
push
cltd
xlat
xor
shll
dec
fcmovb
push
fcmovnbe
sub
pop
pop
nop
jmp
xor
sub
lahf
or
dec
out
dec
mov
jecxz
lea
mov
dec
xorb
inc
mov
loope
push
outsl
hlt
mov
or
adcl
push
shrb
sub
mov
test
mov
mov
cmc
popf
sub
sub
pop
and
shr
xchg
mov
outsb
push
mov
aad
xor
cwtl
int3
xor
sbb
ljmp
fimull
aas
test
jp
iret
xor
mov
push
loopne
lods
adcb
mov
and
push
cmpsb
dec
mov
jo
cmc
pop
out
jmp
cmp
mov
loope
aas
out
jp
outsl
adc
or
mov
add
xor
out
mov
mov
aaa
jnp
cld
mov
scas
jns
pop
jae
hlt
push
push
pop
mov
push
imul
clc
cmp
jp
push
xor
icebp
loope
sbb
and
int
or
mov
dec
push
sti
imul
mov
and
cmp
movsb
rcll
mov
mov
pushf
and
sub
jns
pop
test
in
insl
ds
ret
rorb
hlt
orb
cmp
in
or
fstpt
jns
and
icebp
jns
int
xor
sbb
and
aas
arpl
sbb
sub
aad
mov
or
jno
jbe
xlat
ret
iret
push
js
jp
icebp
adc
cmpsl
mov
or
mov
adc
xor
out
ret
imul
dec
mov
xchg
pop
rcrb
mov
xchg
mov
inc
fidivrs
lret
subb
repz
scas
lahf
push
mov
and
insb
in
xchg
jne
lret
inc
cli
sti
mov
cs
lods
pop
imul
mov
lods
xor
sub
je
xchg
movsl
shrb
inc
inc
push
adc
inc
add
imul
mov
push
lcall
rol
test
mov
dec
mov
mov
imull
pushf
imul
jbe
xor
jbe
jns
pop
mov
jle
inc
and
gs
aad
xchg
dec
inc
xchg
fwait
pop
push
pop
cltd
mov
or
fs
in
add
aas
or
jge
pop
lret
sbb
pop
pop
lods
je
xchg
in
arpl
or
xor
test
add
clc
mov
xchg
imul
lcall
xor
mov
lods
cmpsl
push
es
int3
decl
cmc
ficompl
lret
cmp
push
aas
cmpb
in
mov
stc
push
stos
push
pop
xchg
icebp
or
iret
mov
mov
cld
pop
adc
and
pop
jl
into
xchg
inc
fnstcw
push
xor
mov
or
mov
or
mov
movsb
stc
add
mov
subb
scas
xorb
outsl
test
inc
ret
cmpsb
jl
outsb
xor
inc
inc
bound
sub
add
int3
xchg
xchg
push
sub
les
inc
jno
rcr
or
insb
lea
and
or
gs
fwait
je
iret
in
cld
shll
cli
and
int
in
mov
sarl
clc
clc
popf
and
jbe
push
arpl
xor
mov
sub
mov
xchg
xchg
mov
mov
inc
xor
clc
test
imul
and
xchg
jmp
int3
data16
pop
pop
inc
test
enter
sahf
mov
out
cmp
leave
push
mov
push
mov
gs
and
in
je
cmpsl
fisttpll
lock
outsl
cmp
fidivs
cmpsb
lea
dec
cmp
dec
mov
or
sbb
lods
shl
cmp
push
and
xchg
cmp
xlat
and
dec
mov
mov
xchg
cmp
mov
inc
sub
sbb
lahf
adc
fldcw
xchg
or
mov
pushf
mov
mov
mov
int3
jns
lds
xorl
fdivrs
push
dec
add
add
mov
in
and
mov
sahf
test
outsb
push
lea
mov
scas
jg
mov
push
sahf
repz
add
or
pop
xlat
adcb
mov
mov
cmc
mov
int
in
sti
loop
scas
ds
notl
mov
cld
jl
sahf
inc
fists
pusha
cltd
dec
pop
ss
mov
popa
repnz
jne
sbb
pop
mov
sbb
ljmp
fucomi
jg
int
push
cltd
inc
fsubl
jnp
and
sbb
test
jnp
or
push
push
iret
xchg
scas
cmp
test
mov
icebp
push
adc
sbb
cmpsl
cmpsl
push
clc
int
dec
xor
cmp
fsts
push
xor
push
jp
cmp
xorl
repnz
shrb
push
sbb
jle
mov
add
ret
cwtl
mov
mov
nop
mov
es
ljmp
rcr
fdivl
dec
cli
bound
arpl
jo
mov
loopne
int3
lods
into
idivl
and
sub
jnp
aam
popa
push
enterw
aad
jb
cmp
cmp
add
daa
cs
dec
jge
push
mov
dec
adc
sub
loope
cld
leave
rolb
testb
es
pop
popa
fidivl
cmpsl
mov
jle
lods
int
xchg
xchg
in
lret
sti
popf
icebp
xchg
pop
pop
push
push
inc
push
and
xchg
jnp
xor
xchg
dec
xchg
imul
cmp
mov
adc
sbb
cmp
and
mov
icebp
dec
daa
inc
insl
sub
sbb
sbbb
ljmp
xchg
cmpsl
or
ret
pop
mov
mov
mov
lods
or
repz
xchg
cmp
push
arpl
cwtl
add
xchg
cwtl
mov
mov
imul
mov
lcall
fs
fldenv
sbb
jnp
jns
or
test
dec
les
mov
jge
roll
mov
bound
add
mov
cmpsl
jmp
shlb
popf
test
jecxz,pn
adc
daa
add
in
xor
push
mov
jl
xor
daa
mov
xor
or
lret
inc
cmp
xor
lock
jmp
dec
insl
vmovaps
jecxz
nop
push
push
push
xchg
sbb
mov
jmp
dec
mov
movsl
clc
test
mov
mov
xor
mov
js
add
xor
pop
cmp
pop
push
mov
adc
xor
sub
adc
and
push
add
pushf
sub
or
lcall
pop
cwtl
mov
jl
cmpsb
les
mov
loope
dec
in
adc
addl
push
cli
stos
stos
sub
aad
jl
imul
add
or
mov
cmp
aas
test
sbb
mov
aaa
xchg
orl
push
bound
jns
das
pop
sbb
shl
hlt
cmpsl
mov
mov
add
test
ljmp
jmp
ret
bound
pop
mov
js
cmp
inc
lea
xchg
mov
sbb
fisttpll
shl
stos
out
shl
sbb
lahf
mov
xor
out
sbb
cmp
mov
sub
pusha
cli
push
andb
jg
mov
rolb
mov
inc
dec
pop
arpl
gs
je
call
mov
push
sbbb
std
sti
sub
and
add
and
call
push
lds
arpl
mov
in
std
popa
inc
jne
dec
cmp
in
in
cmp
jne
sub
cmpl
insb
les
mov
hlt
es
les
pop
cmp
stc
jmp
scas
dec
scas
mov
push
pop
lds
xlat
imul
inc
mov
icebp
imul
pushf
adc
frstor
lods
xchg
or
jnp
scas
add
jnp
jb
scas
adc
inc
jb
mov
sub
or
lods
das
pop
das
pushl
mov
jno
lock
cmp
cmp
decl
flds
mov
imul
cmp
mov
push
pop
xchg
in
push
sbb
xchg
movsb
test
in
in
jae
add
mov
inc
jecxz
imul
cmp
inc
sub
xchg
ss
cmp
jg
lds
xchg
xchg
push
mov
jg
add
cmp
stos
cmp
nop
push
mov
adc
lock
mov
lods
inc
xor
ss
dec
mov
mulb
or
es
fmul
mov
lds
lock
mov
inc
stc
fistps
lock
ror
stc
pop
jb
push
in
jge
das
add
rcrl
push
dec
dec
out
dec
cmp
lret
adc
test
frstor
mov
mov
xchg
cmp
addr16
jg
int
pop
lret
aad
xchg
scas
outsb
inc
in
stos
xchg
lods
push
xchg
lret
addr16
imul
pop
push
fwait
dec
jb
bound
xor
shrb
ss
mov
dec
mov
push
and
icebp
dec
mov
sbb
out
jecxz
push
movsb
mov
jae
mov
stos
adc
cltd
push
movsb
cli
push
in
mov
iret
push
jae
pop
cmp
imul
adc
mov
cmp
cmp
frstor
fadd
jmp
pop
push
pop
sub
fcompl
ja
sub
sbb
les
adc
cli
cmp
je
mov
aad
xor
test
add
nop
jnp
mov
in
rcrl
mov
jg
sub
jnp
test
aad
mov
push
lock
or
mov
enter
ds
addr16
fcoml
inc
inc
push
pop
adc
jge
inc
addr16
test
cltd
sbb
aas
or
cmp
xor
inc
movsb
lock
addr16
into
mov
aad
aam
cmc
int
pusha
ljmp
sub
dec
cmpsb
jmp
roll
add
andb
xchg
mov
ret
sbb
pushf
pop
fdivl
je
xchg
inc
pop
sub
adcb
fwait
mov
jo
push
cmp
xchg
daa
pushf
call
imul
out
sub
jb
xor
mov
scas
jnp
cmp
jo
pop
or
xlat
and
add
jg
mul
ja
adc
inc
test
out
lea
lds
aam
rcrl
ret
mov
mov
jo
sub
daa
sbbb
or
pop
pop
mov
push
ja
and
lret
push
repnz
fsubrl
pusha
addr16
mov
imull
data16
punpcklwd
inc
call
inc
cmp
ret
pop
rcrl
mov
andl
cmc
int
xchg
mov
scas
rorb
cmp
fxsave
enterw
clc
inc
in
dec
mov
call
sti
adc
mov
jns
ljmp
push
push
aad
adc
lods
inc
imul
pushf
inc
aad
add
adc
cli
jmp
rcrl
test
mov
loopne
in
shll
dec
lods
xchg
and
jae
dec
pusha
pop
ret
mov
mov
int
mov
and
mov
jb
xor
xchg
sbb
lds
adc
hlt
lods
pop
repnz
stos
inc
jmp
dec
push
mov
movb
fistps
add
bound
jne
and
ror
stos
movsb
cmp
inc
lcall
fdivrs
movsb
mov
jg
fimull
in
xchg
add
leave
adc
lret
fiaddl
or
daa
dec
repnz
lret
sub
adc
in
and
bound
inc
inc
insb
push
stc
andb
notb
sbb
test
adc
shrl
inc
ja
loopne
jmp
cmp
loopne
or
dec
push
fnsave
test
aam
mov
sbb
push
scas
shl
xchg
loop
xor
dec
in
outsl
cmp
aaa
in
cmp
xchg
xor
iret
inc
inc
sbb
jg
loopne
mov
lcall
and
js
les
sahf
repnz
fadds
cmpsl
add
je
or
adc
mov
cmp
pop
xchg
pop
loopne
or
xchg
call
jb
xchg
cmp
test
pop
sbb
jns
cld
xlat
enter
push
insl
pushf
gs
inc
or
testl
mov
mov
jmp
into
clc
movsl
jno
cmc
and
cli
data16
jo
movsb
pop
sub
or
cmp
dec
fwait
aam
push
repnz
push
dec
fisttpll
mov
and
mov
into
inc
std
in
mov
jno
into
sbb
pop
pop
or
leave
inc
aas
inc
lods
cmp
pop
js
push
cwtl
inc
push
out
sbb
or
movsb
les
fdivl
sub
insl
xor
mov
decl
lcall
xor
mov
adcl
and
pop
rolb
icebp
inc
loop
mov
addr16
push
test
jmp
inc
jne
mov
pop
mull
and
sub
rcrb
aam
or
test
mov
mul
inc
lret
into
das
sahf
xor
push
inc
cmp
cmpsl
pop
dec
dec
insl
pusha
inc
adc
lahf
decb
and
push
jl
mov
fwait
mov
lods
mov
outsl
lock
rol
jae
push
xchg
adcl
pop
mov
pop
sub
cmp
out
inc
mov
cmp
int3
inc
mov
test
jl
mov
popf
mov
test
sbb
jg
adc
xchg
scas
adc
xor
cld
les
xchg
jbe
pop
push
fcompl
insb
mov
mov
pop
sub
push
rolb
push
pop
cld
enter
cmp
jmp
pop
insl
stos
mov
xchg
dec
jo
loopne
stc
insl
jnp
inc
das
or
xchg
sub
rcll
lods
jp
fwait
and
iret
xor
les
add
xor
out
sub
add
adc
mov
sub
sahf
test
je
mov
mov
adc
mov
loope
jle
iret
pop
sarb
pop
jge
add
stos
in
cmp
or
or
pop
mov
cltd
and
fsubrs
in
push
test
into
cltd
xor
jns
push
clc
shll
or
mov
daa
incl
test
or
fimuls
stos
loop
je
scas
sub
rcrb
mov
cmp
leave
sahf
adc
mov
dec
pusha
jge
stos
test
add
negl
lock
jns
dec
sbb
enter
push
mov
mov
shrl
test
add
aam
cmp
add
aaa
dec
mov
hlt
dec
sub
sbb
bound
xor
adc
aaa
mov
cs
es
out
pop
dec
out
push
lock
into
xchg
xchg
jbe
adc
rol
sub
fsub
dec
lea
sbb
cmp
lods
out
js
les
mov
jecxz
dec
sub
sub
adc
in
push
stc
sub
and
push
mov
xchg
les
popa
and
paddd
jnp
and
dec
jno
inc
cmp
jmp
pop
mov
adc
jge
mov
push
sub
rcr
cli
add
and
pop
sbbb
jg
repnz
dec
cwtl
int
sub
or
xchg
call
test
clc
mov
pop
popf
rclb
fcmovne
cli
lods
cltd
pop
push
subb
mov
lods
icebp
test
sti
inc
dec
stc
lea
add
shll
repz
stc
add
add
xchg
gs
je
fiaddl
out
mov
and
aas
pop
cmp
call
ljmp
cmp
jae
pop
mov
loopne
mov
push
fs
push
stos
out
fildll
sub
in
inc
mov
wbinvd
sarb
lods
sub
or
pop
scas
iret
in
cmpb
pop
inc
data16
cmc
das
sarl
push
dec
dec
mov
or
jno
add
xor
shll
jmp
jecxz
push
mov
jl
inc
mov
mov
call
cli
push
movsl
lods
push
out
jg
shrl
cmc
sub
mov
ja
or
jge
mov
or
adc
outsl
jle
cmpsl
decb
mov
push
or
inc
xchg
push
jmp
out
in
jl
mov
in
pusha
or
mov
adcl
xlat
push
es
lock
cli
xchg
repnz
adc
outsl
pushf
mov
inc
shl
dec
sbb
inc
loope
adc
sbb
lret
cmp
xor
or
sbb
mov
pop
std
xchg
xchg
cmpsl
clc
inc
lahf
ja
jae
mov
mov
je
mov
add
lcall
xchg
movsb
xor
in
fdivrs
xor
fbstp
mov
int
sub
add
xor
mov
mov
mov
mov
std
cwtl
iret
adc
jl
add
ja
sbb
aas
and
loop
lahf
or
loop
outsb
je
and
mov
and
add
lret
fwait
and
cmc
test
shrb
pop
xchg
mov
mov
pop
xor
jbe
push
rorb
idivb
mov
lcall
inc
imul
add
lcall
test
jnp
hlt
aas
loope
xchg
call
xor
cmp
shlb
pop
mov
jecxz
adc
out
ret
popf
add
sbb
sub
sahf
mov
inc
bound
scas
daa
cld
adc
notl
and
sub
int3
out
fmull
arpl
jge
fsts
int3
in
jb
adc
loope
cmp
dec
inc
cmpsb
sahf
push
je
loopne
sbb
inc
mov
or
out
inc
inc
scas
mov
inc
nop
or
jo
cmpsl
sbb
push
jl
cmp
push
push
imul
stos
xor
mov
adc
pop
popf
and
psrlq
std
in
dec
mov
shll
lret
add
pop
shrl
mov
jg
sub
dec
in
xor
dec
loopne
test
inc
sub
mov
enter
sub
lret
aad
xchg
leave
ss
xchg
fcoml
add
inc
adc
lcall
mov
cld
jle
test
xchg
pop
adc
and
outsb
sahf
scas
xchg
addr16
sbb
xchg
lahf
xor
scas
pavgb
adc
shlb
ja
or
xchg
test
out
or
and
lea
push
xor
pop
jae
xor
fisubs
adcl
shlb
cmp
xchg
in
div
pop
out
jecxz
sub
sub
dec
lret
inc
push
mov
mov
fcom
push
aaa
add
cmp
test
push
fwait
xchg
enter
add
faddl
cmp
repnz
or
lret
cmp
pop
js
mov
imul
mov
mov
cmp
sub
mov
shll
cmc
and
cmp
add
cltd
dec
out
jb
cs
sub
cmp
std
xor
add
in
cmpsl
pop
in
cmp
icebp
cmp
add
psadbw
xlat
mov
out
xchg
jnp
xchg
stos
loopne
lods
outsl
jns
push
js
add
mov
dec
aas
xchg
push
cld
sbb
mov
jns
sub
mov
xchg
xchg
into
fwait
divb
jmp
mov
lods
cmp
notl
clc
out
leave
out
pop
jp
xchg
dec
call
mov
outsl
iret
adc
pop
sbb
cwtl
test
inc
inc
movsb
fwait
pusha
cli
daa
ljmp
ret
popa
rclb
sub
shll
cwtl
dec
xchg
pop
mov
js
mov
inc
or
test
iret
cs
hlt
push
imul
jns
jbe
jl
jne
xchg
inc
pop
cs
ret
or
pop
test
or
mov
scas
mov
xchg
movsl
mov
dec
jp
repz
xchg
sahf
xor
dec
xor
xchg
xchg
ds
or
loope
push
jbe
xchg
cs
dec
outsb
sahf
ja
insb
cmpsl
stc
dec
mov
pop
jmp
dec
pop
int
sbb
mov
in
inc
fs
sti
in
cmp
jg
aas
cld
dec
jge
jmp
shll
test
cmpsl
xchg
pop
std
add
lods
aas
push
mov
ficomps
push
adc
std
in
stos
push
clc
pop
mov
mov
inc
cli
push
adcl
jl
cld
add
mov
test
lea
jle
lods
mov
cltd
dec
call
cmpsl
cmp
addl
mov
xchg
xchg
or
sub
mov
fldenv
cmp
add
imul
clc
or
int
jno
and
mov
jne
fsub
push
movsb
fsubrs
or
leave
pop
lods
mov
cmpsb
movsb
icebp
loop
inc
mov
imul
sub
fldl
mov
add
test
mov
pop
aad
je
mov
cltd
ljmp
sbb
add
dec
mov
lcall
jp
pushf
or
mov
xorb
and
in
sub
out
mov
push
popf
dec
jmp
popa
cltd
mov
sbb
sub
leave
sahf
fildl
shlb
cwtl
push
xchg
jg
and
in
dec
dec
js
pop
mov
aas
add
out
iret
inc
movsl
lods
xchg
jo
mov
adc
sub
ja
sahf
mov
ds
test
mov
inc
testl
test
lea
add
xchg
shlb
insb
sahf
mov
clc
pop
xchg
scas
xor
sub
outsb
jg
sub
sbb
and
out
cmp
pushf
push
mov
ds
fsubr
or
scas
xchg
pop
xlat
outsb
or
stc
sub
dec
fldenv
cmp
cmpsb
lock
sarb
ds
dec
stos
sarl
push
idivb
dec
mov
pop
mov
mov
enter
mulb
sbb
aaa
nop
loopne
daa
add
out
add
mov
jl
out
sub
fsubrl
mov
jge
int
mov
xlat
add
ja
jg
test
in
out
mov
daa
push
adc
out
mov
mov
lret
xchg
xlat
das
add
push
mov
xor
sub
or
rolb
or
xor
js
pusha
imul
shlb
je
cmp
bound
loopne
mov
mov
sahf
and
insl
push
rolb
stc
adc
ficoml
call
add
sbb
inc
leave
ja
das
sbb
popf
xchg
mov
inc
call
inc
ljmp
fucomi
std
xor
add
lock
push
xor
cltd
pop
lds
mov
xchg
fstpl
stos
sub
stos
cmp
je
inc
out
cmp
cmp
rorl
in
mov
clc
adc
rclb
int
add
sbb
add
mov
xor
mov
xor
inc
and
std
inc
in
sub
sahf
adc
je
je
test
cmp
and
jl
xor
sbb
push
pop
rcr
add
mov
inc
les
clc
imul
aam
mov
dec
gs
push
or
and
jmp
mov
mov
sub
mov
cmpsb
jo
add
xchg
ds
push
cltd
jge
adc
mov
or
aad
mov
inc
lds
mov
and
or
xchg
out
mov
imul
or
out
cli
sub
je
inc
or
mov
js
fdivl
push
int3
das
cmp
xor
push
out
add
fbstp
add
testb
test
fwait
data16
fidivrl
pop
pop
and
aam
xchg
mov
fldl
and
and
push
push
rcl
cmp
add
hlt
ljmp
mov
mov
mov
xchg
mov
pop
mov
test
cmp
push
adc
lods
push
ficoml
mov
movsl
push
mov
pop
cltd
cmpsb
lahf
enter
dec
xchg
aam
adc
ja
sbb
pop
jle
mov
shll
inc
mov
imull
lods
mov
mov
mov
movsb
std
or
in
add
mov
bound
divps
stc
xor
std
imulb
adc
inc
mov
xchg
dec
aas
aam
fldenv
out
outsb
inc
push
test
xchg
push
insl
aaa
js
lcall
fdivrs
cli
fstpl
inc
scas
scas
push
sub
mov
cmpsb
in
sub
call
jno
mov
mov
xlat
push
call
jg
movsb
lds
movsl
add
cmp
int3
mov
jg
mov
imul
sbbl
jp
add
testb
roll
jecxz
aas
stc
clc
push
mov
jle
movsb
mov
sahf
push
outsb
fbld
insl
int
cmp
js
repz
sbb
ror
adcb
jecxz
jge
inc
mov
in
ja
pop
out
pushf
jbe
arpl
cmp
mov
add
and
mov
jae
push
push
sar
sbbb
lret
pop
rolb
lcall
test
dec
movsb
and
adc
and
stos
loopne
hlt
enter
mov
sbbb
lcall
cmpsb
sbb
xchg
fildll
ljmp
mov
fs
dec
inc
adc
push
sahf
mov
mov
lret
mov
cli
mov
lods
test
push
js
fsincos
xor
xchg
mov
nop
jno
lret
lret
fdivp
mov
lock
cli
sti
jne
call
rcrl
mov
cmp
cmp
insl
add
ljmp
mov
cmpb
cltd
dec
imul
repnz
je
add
push
test
loope
sbb
jo
jbe
fbstp
push
clc
bound
mov
loop
outsl
xor
and
rcll
sahf
enter
cmp
pop
inc
cmp
aas
movsw
pop
shrb
inc
sub
push
ret
adc
jmp
sbb
lahf
sbb
pusha
cli
mov
inc
mov
fs
adc
jl
leave
push
add
xchg
movsb
int3
or
into
mov
xchg
dec
daa
dec
arpl
das
push
jmp
and
sahf
jb
stc
cmpsb
sbb
faddl
shrl
cmpsb
pop
repz
jb
sub
sbb
mov
icebp
sahf
aaa
cmpl
jecxz
in
or
push
pop
sbbl
adc
jo
call
mulb
fisubrs
jnp
mov
sub
fsts
push
lods
int
xchg
mov
loop
xchg
loopne
xlat
jp
xchg
pusha
cmpsl
cli
rorb
mov
movsl
dec
inc
mov
or
clc
divb
imul
xchg
pushf
clc
push
dec
push
cmp
cmp
inc
xchg
stos
xorl
jg
inc
int3
arpl
std
fiaddl
insl
mov
dec
cmp
rcr
or
lcall
pop
imull
or
lret
imul
adc
fstps
mov
hlt
aam
das
xchg
push
pusha
in
pop
addl
inc
dec
paddusb
in
daa
inc
lea
insb
nop
lock
inc
xor
jle
pop
nop
dec
push
cli
sub
mov
push
lahf
mov
daa
aaa
pop
dec
pop
nop
or
xor
or
cs
jl
data16
notl
mov
enter
jb
pop
sub
push
jle
xchg
xchg
sbb
nop
adc
push
push
sti
adc
addr16
sbb
pop
mov
adc
push
stos
or
xchg
jle
inc
leave
sbb
cmp
gs
sbb
add
pushf
cmp
mov
icebp
idivb
push
stc
inc
pop
imull
mov
adcl
mov
or
fidivrl
fidivl
in
inc
fsubs
dec
enter
lcall
scas
and
push
in
rcrb
stos
nop
jecxz
xchg
orb
das
out
mov
jae
and
inc
jecxz
outsl
mov
or
push
fnstenv
shll
sarb
mov
xchg
nop
outsb
push
jo
or
mov
fadd
roll
or
inc
fwait
jp
ret
xchg
stc
push
mov
movsl
rcr
cmp
add
insb
pop
pop
mov
xchg
push
mov
movsl
jnp
lods
dec
aad
mov
lret
lret
adc
lea
in
sbb
or
xlat
es
sahf
jecxz
mov
in
jnp
test
fdivrs
int
ret
xchg
mov
push
dec
arpl
cs
test
mov
nop
xlat
adc
cmp
shlb
cmp
sbb
fmul
in
fwait
jp
cmp
jnp
xchg
inc
in
cmc
leave
jmp
rclb
dec
sub
out
lods
cmp
mov
cld
cmpsb
and
out
lcall
mov
jo
js
std
jge
sub
push
sti
insb
push
dec
les
cmp
mov
jle
xor
mov
push
or
cwtl
lret
add
fisttpll
adc
lret
jl
test
jne
mov
add
lcall
icebp
shlb
mov
dec
xor
aaa
add
jl
push
pop
mov
popf
loope
scas
ljmp
jnp
jbe
scas
fs
and
mov
aad
mov
ss
or
xor
xchg
xlat
mov
jmp
jg
leave
or
sbb
bound
inc
and
mov
sbb
mov
fnsave
test
out
xchg
cld
push
cmp
cmpsb
or
xor
aad
cmp
cmp
add
sbb
cmp
jno
push
loope
xchg
mov
mov
jnp
ret
stos
jecxz
add
mov
mov
mov
fwait
imul
xchg
mov
data16
lds
popf
mov
sub
daa
mov
in
fwait
lcall
ret
adc
jo
push
mov
test
jl
mov
add
push
sbb
cmp
repnz
daa
arpl
push
jg
push
mov
pop
loope
aad
cmpsb
adc
fcompl
adc
enter
xor
je
addr16
imul
mov
sahf
pusha
out
call
jg
push
inc
add
add
lret
sub
mov
push
adc
lods
daa
jge
sti
jge
and
jg
jno
rorl
sbb
mov
call
jecxz
xor
cld
push
insb
xlat
aaa
mov
incb
nop
in
fsts
add
sbb
lret
adc
inc
mov
sub
cmpsb
cwtl
cmp
shlb
inc
or
sbb
repz
int
mov
cli
in
xchg
mov
mov
or
imul
or
loopne
js
repz
pop
or
pushf
stc
xchg
or
add
mov
lret
in
add
inc
jno
push
add
imull
test
bound
in
xor
in
aas
cmp
cwtl
popa
pop
push
rcr
leave
jb
sub
jge
sahf
bound
push
aas
mov
mov
sbb
loop
out
pop
rcrl
cmp
dec
mov
fadds
xchg
notl
call
mov
xlat
xchg
or
popf
imul
fs
loop
push
xor
pop
inc
xchg
xchg
cmpsl
jno
out
mov
cmp
fnsave
dec
clc
imul
in
cmc
mov
cmp
mov
sbb
scas
and
jle
mov
mov
and
pop
cmpsb
sahf
fsub
out
mov
mov
sub
xor
mov
inc
sbb
sbb
fadd
pop
sub
out
xchg
cmpsb
mov
sbb
sbb
cmp
mov
lea
cltd
mov
loop
cmp
or
sub
fcompl
add
insl
xchg
dec
ja
out
sar
xor
popa
fbld
pop
mov
out
cmc
add
cltd
push
stc
enter
sbb
orps
fisttpl
stos
iret
daa
pop
js,pt
xlat
sbb
sub
or
test
stos
jne
pop
nop
scas
inc
inc
repz
inc
enter
dec
cmp
lock
test
add
cmp
or
mov
sbb
cmp
repnz
jge
jno
repz
or
inc
jne
dec
inc
sbb
push
inc
sub
mov
sti
adc
jne
ljmp
adc
jl
iret
jbe
jns
xor
outsb
push
ljmp
lods
jmp
iret
hlt
cltd
inc
test
shlb
adc
idivl
lahf
loop
cmpsb
jge
sbb
pop
pop
fisubl
push
iret
aad
test
jns
mov
fdivrp
nop
mov
mov
push
pop
adc
pushl
movsb
ja
xlat
mov
xchg
fidivs
ljmp
sti
sub
das
adc
mov
push
sbbb
mov
lret
subl
mov
nop
mov
inc
cmp
mov
push
lods
mov
notl
mov
push
arpl
mov
lret
jmp
cmp
pushf
mov
xorb
adc
ss
aam
bound
data16
sarb
inc
adc
and
mov
push
lods
jle
cmp
mov
fs
add
and
mov
popl
sbb
mov
and
xchg
jnp
mov
sbb
add
fcoms
mov
fidivrs
loop
mov
ljmp
fcoml
xchg
divb
sub
or
sub
mov
jge
mov
stos
xor
mov
mov
addb
push
pusha
mov
jno
push
jne
mov
mov
pop
mov
fnstcw
mov
inc
cmp
ja
scas
test
mov
push
and
mov
xor
inc
outsl
fimull
and
cmp
and
pop
cli
loop
cmp
sbb
lret
aaa
xor
test
aad
cmp
int3
mov
push
dec
popf
bound
or
cmp
insl
shrl
sub
dec
hlt
add
cmpb
test
add
jge
addr16
and
jo
xor
jae
pop
xchg
push
lea
nop
cmp
cmpsb
adc
xor
fisubrl
stc
jg
xchg
push
jecxz
cld
mov
push
xor
aam
das
test
fadds
pop
xchg
clc
cmp
fisubl
mov
loop
mov
add
push
cltd
cmpsb
adc
andb
jl
outsb
sarb
push
sub
pop
ja
pop
mov
aaa
ja
daa
aad
adc
arpl
test
adc
movsb
enter
scas
popf
loope
adc
adcl
sub
add
xchg
loop
enter
aaa
pop
inc
stc
cmp
sbb
jae
xor
xor
popf
mov
lcall
sbbb
fmuls
in
verr
adc
or
push
push
and
push
hlt
push
push
int
out
popl
cwtl
jo
int
mov
pop
lods
in
and
mov
push
mov
jge
xchg
pusha
mov
fsqrt
cmp
mov
rcrl
mov
out
push
shll
aaa
xchg
icebp
pop
add
int
dec
repnz
aaa
push
stos
stos
mov
push
dec
cmp
pop
dec
arpl
shll
aam
cmpsl
sbb
mov
lods
lods
or
enter
sub
xchg
xchg
adc
add
sub
xlat
pusha
cmp
loopne
pop
cmpsl
mov
dec
mov
sub
xor
aam
lret
inc
sbb
outsl
adc
lea
dec
cmp
jae
pop
adc
hlt
xchg
push
xor
aaa
dec
add
push
or
mov
push
xor
into
jne
loopnew
call
in
pop
adc
repz
imul
inc
mov
pushf
or
mov
pushf
test
int
xor
lahf
shlb
cmpsl
sahf
xor
mov
stc
aad
add
adc
cmp
fdivs
xor
mov
mov
fisubs
mov
int
ficoms
jno
popa
mov
rcr
or
shr
push
xorb
pop
cmp
cmpsb
leave
icebp
mov
jo
test
sbb
outsl
jo
fidivl
out
filds
fstpl
sahf
push
mov
dec
mov
outsb
mov
pop
push
lock
adc
mov
ret
push
adc
mov
jecxz
repz
shl
jmp
mov
aas
mov
mov
ss
lea
push
out
dec
nop
inc
nop
jbe
loop
cmp
xor
fptan
out
dec
jl
push
shl
ss
and
jo
jmp
inc
fwait
pop
mov
sub
lcall
xchg
hlt
outsb
repnz
dec
cmp
add
and
mov
jle
test
daa
mov
shlb
dec
inc
xor
adc
pop
or
adc
mov
lea
dec
xchg
imul
int3
mov
shrl
jbe
cmpsl
mov
leave
jnp
stos
pop
aad
sbb
mov
loop
insb
push
nop
lds
into
das
enter
pushf
aaa
bound
int
cltd
icebp
lea
test
add
fistl
sbb
mov
cmp
mov
jmp
ficompl
pop
in
mov
inc
dec
addr16
out
pop
mov
scas
mov
fsubr
sub
push
mov
inc
dec
dec
add
jg
adc
cmpsb
push
sub
insl
mov
sub
lods
sub
sub
adc
decl
mov
cwtl
dec
inc
int3
push
fwait
outsb
xor
push
test
pop
push
lret
ret
test
or
add
aad
ficoms
fistps
push
dec
dec
jns
sub
ret
aam
mov
iret
sbb
jge
cmpsl
stos
inc
adc
gs
fidivrl
mov
mov
and
xor
ret
ret
xchg
sbb
mov
fldl
fwait
and
daa
in
sbb
out
push
add
mov
data16
fiadds
ja
mov
fwait
ds
sub
jge
mov
pop
mov
dec
es
sti
div
jmp
sub
repz
call
mov
xchg
jno
sahf
addr16
sbb
inc
xor
jle
sbb
jnp
out
lret
call
or
mov
lea
movsb
pushf
enter
fistpl
test
push
inc
mov
out
je
aas
pop
in
arpl
xchg
pop
dec
daa
sub
mov
sub
into
fdivrs
add
push
add
jp
sub
sti
push
ss
test
test
cmpsl
cltd
sbb
fisttps
fistps
add
out
data16
jg
push
sbb
mov
lods
insb
cs
test
jp
lods
dec
dec
mov
add
xchg
xlat
push
dec
lock
xor
xchg
push
xchg
inc
mov
ret
ljmp
faddl
mov
stc
outsl
dec
push
outsb
or
aaa
push
or
sahf
dec
addr16
aad
push
or
jg
add
xchg
pop
dec
jmp
in
pop
mov
inc
repz
int3
inc
adc
add
inc
jmp
adc
sahf
movsb
jecxz
pushl
pushf
lea
mov
sbb
jge
pushf
adc
add
jbe
pop
and
pop
pushf
testb
and
gs
mov
mov
scas
loope
movsb
lret
sbb
sbb
cmp
hlt
sub
pop
xor
cmp
mov
pop
push
aam
pusha
cmp
push
jno
xchg
insb
pop
pop
in
jmp
inc
insb
mov
sbb
loop
sarb
pushf
out
cmp
popf
out
and
addr16
mov
scas
xchg
ffreep
xor
icebp
jne
out
xor
add
test
aad
test
in
inc
mov
frstor
les
imul
jbe
fnsave
push
xor
and
xchg
and
and
icebp
sub
xchg
pop
idivl
pop
mov
scas
dec
jb
fidivl
push
sub
mov
std
add
or
stc
push
rorb
and
pusha
jns
cmc
fidivl
mov
pushf
fsub
xchg
sbb
xchg
out
sub
repz
inc
dec
stos
imull
andb
lods
pusha
sub
mov
and
ret
jp,pn
ljmp
stc
or
je
fistpl
dec
jmp
xor
and
or
adc
push
testb
push
scas
jecxz
jg
arpl
mov
push
aam
sub
xchg
daa
fsubs
add
pop
stos
jb
push
pop
pop
or
fiaddl
sti
xor
gs
fdivrl
pop
aaa
ja
jge
loopne
jg
cmpsl
adc
out
popa
mov
shlb
sahf
stc
mov
ds
sbb
fnstenv
push
or
sub
cmp
push
aas
xor
outsl
lods
xchg
loopne
mov
mov
leave
cmp
mov
xor
pop
into
je
inc
addr16
aaa
and
daa
shll
or
pop
jle
lcall
dec
pop
inc
jge
push
pop
pop
mov
lods
or
xchg
lea
xor
jmp
mov
clc
shl
cwtl
jnp
push
subl
aad
mov
lods
andb
jl
pop
mov
roll
or
cmp
mov
pop
cmp
pusha
push
or
or
dec
mov
dec
xchg
mov
add
push
sbb
jbe
ficoms
mov
mov
xor
or
test
test
or
pusha
cltd
arpl
fisubrs
gs
stc
add
nop
out
jnp
jne
xor
jbe
stc
xor
cmp
lret
cmpsb
or
mov
ficompl
add
icebp
sbb
pop
out
adc
inc
shrl
ret
push
add
loopne
dec
adc
cmp
xchg
movsl
cmpsb
mov
add
mov
dec
stos
cmp
adc
jae
and
dec
push
in
xchg
xor
xchg
ja
cld
fs
ss
mov
ss
mov
hlt
cwtl
inc
cwtl
xchg
stos
repz
ja
adcb
sbb
pop
sbb
outsb
add
in
loope
test
pmaddwd
adc
add
jno
and
daa
leave
mov
std
xchg
test
fsubrp
mov
cli
aas
shl
push
or
sub
into
loope
inc
sbb
ret
nop
sub
mov
sub
sbb
enter
sub
fs
jle
sbb
xor
push
xchg
and
push
out
add
repz
out
das
or
xorb
jne
cmpsl
aas
jmp
stc
mov
aam
push
mul
add
and
inc
lds
jae
and
dec
in
loopne
add
xor
aam
jno
mov
push
dec
xor
adc
push
lret
in
sub
jmp
jnp
cmpb
enter
lods
jnp
orb
negb
jo
xor
sbb
call
add
mov
mov
xor
jo
adc
add
xor
ficoml
mov
js
inc
out
push
fbstp
adc
js
add
push
pop
rorl
rorb
stos
repz
imul
or
push
clc
test
insb
jp
or
cmp
jp
dec
lahf
lcall
cmpsl
push
and
push
add
ret
mov
mov
mov
lret
pop
shll
mov
ds
ss
loop
imul
adc
ja
lcall
rcrb
push
aas
std
pushf
add
jns
scas
stc
jmp
in
paddb
adc
cld
xor
push
dec
insl
in
inc
pop
aam
mov
and
inc
pop
repnz
out
fmul
cmp
push
jge
mov
repnz
gs
adc
inc
inc
lret
sbb
mov
stos
cltd
setbe
leave
outsb
mov
iret
jnp
in
add
std
das
iret
scas
fwait
in
dec
mov
repnz
leave
subb
popf
fidivs
imul
data16
sbb
xchg
cmpsb
cmpsb
mov
mov
pop
cmc
shlb
nop
adc
mov
out
inc
xchg
dec
insl
cmp
imul
shrl
pop
jp
xor
sahf
cltd
lret
mov
jo
imul
inc
cmc
lods
cmp
inc
and
sbb
mov
rorb
lock
std
or
rcrb
mov
flds
and
jno
adc
mov
andl
dec
inc
add
push
jns
lahf
and
push
fsincos
incb
pop
add
and
lret
adc
mov
les
add
subb
add
mov
push
outsb
adc
or
int3
cmp
and
lods
daa
inc
out
ror
mov
jecxz
in
jp
jnp
jb
dec
stos
outsl
mov
fsubs
adc
cltd
jb
dec
mov
jae
int3
icebp
xchg
mov
xor
test
xchg
sub
jge
sbb
sub
adc
pop
enter
add
fcoml
push
outsl
je
push
dec
ret
and
test
loope
or
dec
push
stos
mov
fst
dec
dec
out
fs
sahf
add
xor
and
cmp
in
aad
lahf
ret
push
aam
cwtl
mov
shll
fwait
inc
sub
jmp
mov
shlb
adc
mov
icebp
in
mov
cmpsb
push
test
pop
xchg
push
pushf
inc
push
or
mov
xor
or
cmp
cmp
jg
test
sbb
adc
xor
inc
imul
fisubrl
arpl
stc
mov
pop
xlat
fs
cmp
mov
stc
mov
sub
mov
and
pop
or
js
jns
mov
lds
ljmp
pop
push
jmp
in
out
outsb
sbb
xor
push
std
xor
push
out
xchg
add
lds
adc
int
or
aad
xchg
mov
loopne
adc
aam
dec
sub
cli
bound
sti
test
fildll
scas
mov
cs
dec
lahf
clc
js
jns
add
push
jbe
cmc
int3
jbe
pop
add
lcall
sub
test
inc
mov
pop
xchg
mov
xchg
loop
lods
loop
lahf
or
adcb
cmpsl
sub
decb
cmc
jle
pop
rcrb
and
std
cltd
push
lret
push
lret
jge
jp
adc
xorl
shl
orl
mov
test
inc
in
mov
das
insw
lock
enter
dec
lea
daa
inc
je
inc
or
lods
sbb
sub
in
jne
push
mov
xchg
push
mov
popf
test
xchg
sbb
ret
pop
sbb
mov
mov
icebp
shrl
cmp
fcoms
cmp
and
xchg
pop
jnp
mov
pop
das
cmp
cmc
filds
jno
aas
cmp
mov
sbb
lcall
aad
sahf
scas
push
xor
xor
test
fnstsw
cmp
jno
lcall
test
in
idivb
sbb
outsb
jecxz
nop
imul
imul
sti
xchg
sbb
clc
arpl
clc
push
incl
push
cmpb
pop
mov
aas
add
mov
and
push
sub
stos
fidivs
lods
adc
jg
mov
lret
xchg
mov
stc
adc
xchg
ja
not
out
mov
dec
adc
xor
mov
xchg
test
xor
lea
or
jle
push
jae
jle
inc
hlt
fldenv
aam
add
sbb
inc
out
dec
scas
push
xchg
dec
das
lock
or
into
and
negl
fwait
shl
dec
xchg
shll
lcall
mov
push
sub
fstp
cmp
movsb
add
and
fsubr
std
sarl
pop
and
stos
pop
push
pop
inc
adc
mov
xlat
xchg
shlb
call
ret
out
cmpsb
push
iret
imul
mov
jns
ror
in
mov
rcll
ss
stos
xchg
and
adc
clc
ret
cmp
shrb
jecxz
loop
shlb
scas
jge
push
imul
call
fwait
mov
and
aaa
and
sub
push
popf
lea
mov
jne
xchg
adc
pop
jns
mov
inc
imul
stc
mov
xchg
push
scas
rolb
lea
cmp
push
jp
stos
scas
dec
lods
jns
xchg
mov
xor
aas
cmc
xor
sbb
sbb
push
ss
xchg
jle
add
das
jecxz
enter
cmp
fldcw
divl
test
fldcw
sub
cli
mov
lahf
or
push
mov
cmp
or
idivl
push
jbe
xchg
test
ja
sar
ds
jle
sub
dec
jp
sub
mov
ja
xor
popa
mov
mov
in
lds
testb
neg
pop
sub
dec
or
setbe
mov
stos
out
icebp
call
cmp
fcmove
jge
dec
into
pop
cmpsl
cli
dec
cmp
or
sahf
stos
rorl
popl
or
jbe
xchg
mov
fcmovu
nop
ret
xor
xchg
jle
dec
sbb
fs
adc
mov
jo
pop
mov
cmc
lods
xchg
push
cmpsb
dec
xchg
pop
sbb
add
sub
pop
pop
cmp
push
int
push
push
and
xor
adc
mov
mov
jo
lcall
imul
mov
mov
dec
stos
mov
es
or
pop
dec
xchg
repnz
outsl
jne
jle
xchg
pusha
aad
jecxz
sub
ljmp
cmp
cmpsl
jne
pop
insl
sbb
adc
pop
testl
negl
int
push
push
adc
dec
and
xchg
mov
idivl
lds
inc
popa
lods
add
ret
aas
inc
rorl
sub
lahf
pop
dec
fistl
leave
sbb
outsl
sar
ja
lods
jne
dec
mov
enter
adcb
inc
lods
ljmp
mov
lds
inc
aaa
icebp
push
test
lock
mov
insb
xchg
in
dec
push
test
cmp
aaa
dec
or
jo
xchg
mov
orb
cmp
test
dec
aaa
xor
mov
mov
xchg
add
in
jge
movaps
mov
sbb
sbb
sub
std
lds
push
cltd
mov
pusha
aas
scas
ret
clc
lea
icebp
arpl
add
cwtl
pop
cmp
data16
dec
sbb
xchg
pop
jmp
ss
les
cmpsl
dec
test
movsb
and
xor
cs
add
pop
cmp
arpl
xchg
fwait
mov
cmc
std
aaa
or
inc
imull
andb
add
cmp
subl
mov
mov
loop
push
mov
test
addr16
repz
xchg
aas
lret
stos
test
pop
mov
nop
aas
test
or
mov
les
imul
sbb
lcall
std
xlat
int3
stc
or
lods
inc
push
sub
popa
cmpb
pushf
loopne
mov
xchg
jae
xor
or
sub
pusha
lods
mov
int3
in
push
mov
mov
cmp
xorb
and
int
mov
roll
xchg
js
cmp
push
orl
jmp
mov
mov
and
notb
xchg
jecxz
or
xchg
lcall
mov
mov
stc
inc
or
push
lret
push
iret
ret
callw
mov
lock
sub
shlb
or
es
mov
stos
arpl
sub
sub
out
mov
jo
mov
mov
sub
add
adc
or
inc
daa
popf
jge
and
inc
inc
xchg
in
push
ficoml
push
insl
dec
inc
cmp
mov
mov
aam
jae
dec
ja
lret
enter
xchg
ja
xor
imul
cmp
ss
fs
cmp
sub
ret
in
pop
fsubs
imull
out
mov
insl
repz
add
xchg
ficoms
rcll
les
inc
cli
inc
lods
or
out
ret
lock
inc
and
mov
es
out
daa
rep
mov
xor
lea
loop
jp
jnp
ljmp
and
ja
shlb
pop
add
loopne
fmul
testb
std
or
mov
mov
faddl
repz
fiaddl
sbb
xchg
xchg
jns
jp
fisubrs
pop
in
jl
or
inc
out
mov
xor
dec
jne
leave
loope
mov
fdivs
loop
mov
adc
dec
ss
xchg
adcl
leave
aaa
out
mov
or
nop
repz
iret
push
mov
adc
and
imul
arpl
test
ret
fdivl
fxsave
jbe
outsl
in
dec
fisubs
call
xorl
sbb
xor
test
ja
mov
sub
aaa
jnp
vphaddubq
loop
xor
mov
andb
mov
stos
inc
mov
sub
subb
lahf
cmp
les
and
cmp
popa
cmc
mov
xchg
lods
cmpsb
xor
aas
jno
dec
pop
bound
lahf
pop
mov
cld
xchg
inc
lret
push
rol
push
in
divl
or
in
sbb
xchg
sbb
enter
xchg
lods
roll
into
inc
fisttpll
sahf
push
popf
es
dec
push
cmp
leave
mov
iret
fwait
jle
dec
xadd
adc
loop
fwait
call
roll
leave
cmp
jge
mov
add
rorb
pop
adc
jecxz
jbe
push
push
imul
rorb
xor
jge
dec
outsl
mov
pop
cwtl
xchg
push
sbb
mov
lea
andl
mov
sub
fwait
and
xor
in
mov
dec
and
ja
loope
jns
imul
aaa
sbb
outsl
pop
repz
or
dec
sub
dec
lock
cs
add
inc
inc
push
pop
mov
cmp
je
jno
ret
mov
mov
or
and
push
lock
cli
lret
mov
ret
int
jg
out
loopne
jecxz
aaa
loope
fs
or
jo
push
push
aas
cld
shll
jno
push
gs
sti
add
dec
lret
out
iret
mov
mov
out
xor
sub
pop
add
rorl
mov
aas
js
imulb
fisubs
cmp
das
jne
pop
cmp
jae
int3
aaa
adc
mov
cmp
movsb
pusha
rorb
dec
or
lea
cwtl
mov
add
test
xor
inc
mov
cmp
pushf
test
rolb
push
dec
int3
xchg
jnp
stos
popa
int
arpl
mov
fsts
pop
out
add
pop
in
inc
sbb
add
std
xchg
bound
sub
xor
adc
ja
enter
lock
jno
out
or
xchg
or
jns
add
cmp
xchg
jle
lock
and
das
inc
sub
adc
mov
cmp
adc
js
inc
sbbl
jo
pop
adc
std
aam
or
sub
cmp
mov
dec
pop
adc
pop
sub
cltd
inc
ja
out
cmp
inc
mov
loopne
or
ss
xor
fs
jns
lea
jl
inc
dec
or
mov
or
pop
mov
jmp
rorb
das
jle
hlt
or
pop
testb
xor
pop
push
xor
mov
xchg
decl
sbb
popf
sbb
dec
sahf
cmp
clc
das
sub
cmp
leave
push
push
push
loope
lret
mov
jmp
clc
test
adc
mov
ret
push
jg
xor
jmp
xchg
xor
push
and
mov
push
scas
and
or
inc
out
mov
fimull
dec
push
sahf
push
add
sub
mov
push
das
xor
sub
xchg
shrl
mov
pop
lahf
popf
test
call
rolb
dec
push
aad
xlat
sti
jp
aam
fisttps
push
js
add
fcoml
or
pop
cli
cld
rcll
sarl
repz
adc
push
icebp
mov
fidivl
or
lds
xchg
adc
push
mov
gs
mov
xor
add
push
test
out
add
mov
ret
ret
data16
test
imul
int3
add
inc
mov
hlt
imul
insb
mov
push
mov
std
and
mov
pop
test
movsl
loopne
ljmp
sub
inc
jecxz
xchg
add
add
pop
movl
inc
mov
xchg
ret
in
and
lahf
loope
clc
dec
sub
rcll
js
sbb
outsb
loop
fisttps
push
mov
xchg
jle
test
push
fnstsw
ds
mov
mov
clc
jae
and
mov
out
mov
cli
or
mov
ss
inc
push
xchg
faddl
outsl
cmp
cmp
lds
mov
popa
push
mov
xor
int
push
pop
aad
adc
xor
jle
adc
test
push
mov
call
pop
stos
cs
adc
sub
xchg
dec
dec
movsb
xchg
mov
pusha
je
out
mulb
mov
push
sbb
in
mov
pusha
mov
pop
xchg
into
push
xchg
add
add
inc
stc
inc
in
sti
cmp
mov
dec
add
insb
insl
lds
sbb
xchg
ret
inc
outsb
mov
loopne
jne
jnp
xor
out
adc
fcmovnbe
aad
dec
in
or
dec
mov
fstl
mov
arpl
mov
push
aad
lret
in
out
dec
incb
or
pop
and
and
loope
push
fwait
xchg
repz
sbb
mov
lods
jecxz
xchg
mov
inc
bnd
sbb
sahf
stos
or
jmp
movsb
push
fbld
loopne
pop
jecxz
jo
test
and
into
jmp
mov
or
mov
lods
cmp
push
dec
in
inc
mov
mov
mov
push
mov
std
or
pop
fistpll
sub
push
sub
movsb
lret
out
jle
lods
and
and
add
sub
insb
icebp
jbe
xor
mov
jns,pt
add
cmp
lcall
pop
mov
jmp
xor
fs
sysexit
out
stos
sbb
frstor
mov
in
pop
push
mov
mov
xor
popf
push
cmc
ljmp
xor
or
pop
pop
out
mov
pop
xchg
imul
in
or
ficomps
mov
movsl
decl
inc
test
and
ljmp
xchg
cwtl
push
out
pop
push
sub
or
mov
mov
in
imul
sbbl
bound
xchg
and
push
adc
in
fwait
pop
ficomps
cli
jno
push
stc
xchg
jecxz
push
inc
xchg
jo
sbb
scas
aas
arpl
fimuls
mov
dec
scas
xchg
fs
sub
in
dec
jl
cwtl
rcll
jp
lock
mov
cmpsl
mov
cld
notl
cmp
mov
mov
je
insl
and
dec
in
out
jns
scas
jbe
in
ret
xchg
ja
add
and
lret
sub
rclb
mov
xor
daa
xchg
shrb
dec
mov
iret
cmp
sbb
cld
out
stos
cmpsb
les
outsb
lods
call
push
push
movb
aas
lds
stc
inc
fstps
das
jl
mov
ret
lcall
push
aad
xor
inc
push
pop
xor
jl
push
ja
stos
xlat
sbb
into
inc
cmp
and
cmp
adcl
cltd
xor
sbb
pop
or
push
ljmp
orl
adc
and
sti
push
int
mov
sub
mov
pop
pop
xchg
mov
bound
ds
mov
imul
dec
mov
in
pop
mov
rolb
inc
scas
inc
cmp
dec
arpl
imul
add
adc
mov
aaa
ss
in
adc
push
sti
insb
jnp
out
call
iret
xchg
or
or
in
push
lahf
shl
mov
pushf
repnz
and
les
in
xchg
sub
jbe
or
xchg
pop
push
shrl
mov
fcomps
imul
add
pop
inc
adc
mov
jle
rol
fcmovnb
and
lock
xchg
push
jl
dec
lahf
repz
xchg
sub
or
jge
outsb
imul
in
cmp
or
or
push
ds
lods
or
insb
scas
lods
cld
push
stos
mov
aas
sbb
or
stos
mov
dec
pop
mov
and
xor
sahf
sbb
dec
dec
and
mov
mov
sahf
dec
push
loope
push
hlt
sbb
test
jl
rclb
sbb
rorb
sahf
push
dec
cs
pop
clc
push
fstp
xor
js
aad
repz
es
outsl
popa
cmpsb
dec
es
xchg
ud1
aaa
leave
mov
mov
mov
and
pop
or
scas
xchg
adc
or
inc
inc
pop
pushf
pushf
ffreep
adc
xor
test
cmp
push
xchg
mov
stos
pop
movsb
push
xor
push
ljmp
mov
jns
add
cmp
test
and
jb
mov
pop
sti
lret
and
js
add
mov
sub
cmp
fistpll
int3
cwtl
jl
pop
xchg
stos
arpl
jge
repnz
push
fldenv
arpl
pop
mov
bnd
outsl
xor
sub
push
jno
xlat
dec
getsec
je
pop
scas
idivl
or
adc
jmp
fisubrl
or
scas
and
dec
add
push
std
fwait
mov
int3
cwtl
roll
std
loopne
inc
xlat
or
xchg
hlt
fsubs
out
cli
dec
sahf
sbb
fisttpll
mov
xor
mov
jae
daa
mov
cmpl
fcmovnu
cmp
scas
dec
lahf
xor
mov
adc
fstpl
lcall
test
xor
pop
shl
cmp
imul
inc
repz
mov
pusha
cmp
sub
scas
lods
jmp
xor
mov
orl
or
and
cmpsb
addr16
mov
mov
jmp
add
rcl
lret
sahf
shlb
jmp
cmp
push
test
incb
jnp
dec
xchg
ror
fistpll
jmp
pusha
hlt
add
cmp
lret
inc
push
arpl
mov
fs
int3
jmp
sub
imul
mov
xor
jl
data16
fldl
test
aam
jle
mov
push
in
fnstcw
adc
pop
bound
pop
sub
push
sbb
leave
clc
add
addr16
dec
push
push
add
add
and
sahf
addr16
mov
fs
dec
call
mov
xor
mov
and
test
cmp
ror
sbb
sbb
movsb
mov
hlt
hlt
add
xor
movsb
ds
pop
popf
sti
fsubs
dec
sarb
shll
push
in
pop
pop
jle
mov
adc
cwtl
loop
adc
scas
fs
daa
and
les
movsb
cmc
xor
xchg
push
push
mov
loop
movsl
lods
pop
fcom
cld
fwait
cld
xor
jmp
lods
mov
hlt
mov
and
repnz
cmpsb
inc
inc
cltd
cwtl
xchg
test
aam
push
xchg
popf
insl
lea
lcall
lock
std
cmpsb
mov
sbb
inc
fs
fnsave
aas
push
cmp
addr16
in
shrb
xchg
adc
mov
mov
insb
outsl
mov
loopne
sahf
cmp
rolb
dec
rep
or
inc
sub
std
les
xlat
add
insb
pop
scas
insb
add
or
adc
and
std
aaa
rolb
jmp
or
mov
cwtl
mov
push
or
mulb
sbb
inc
jge
inc
jnp
pop
xor
add
fisttpll
push
and
shlb
mov
jmp
cmp
jb
and
scas
or
mov
mov
cmp
ret
xor
aam
icebp
or
mov
ficoms
aaa
dec
cmpsb
sub
push
shr
mov
mov
push
and
subl
jmp
jae
xor
mov
mov
call
std
dec
out
lahf
es
ss
subl
jl
push
imull
sub
arpl
cwtl
cmp
or
fldl
ds
movl
jle
rcr
flds
xchg
fmuls
sbbl
hlt
or
inc
cmpsb
pop
arpl
insl
stos
or
and
sarb
jge
addr16
imul
in
mov
xor
sub
mov
pop
cmc
jo
add
mov
add
fnsave
into
dec
cmp
xor
add
lahf
or
in
loopne
gs
in
or
mov
scas
mov
inc
lea
stc
jle
sti
adc
pop
faddl
pop
mov
jnp
daa
or
mov
mov
sbb
outsl
test
dec
lcall
cmp
out
add
jecxz
fs
adc
push
nop
add
xor
std
push
lret
mov
fisubs
lds
in
xchg
fcom
push
jge
lahf
add
xor
inc
aad
inc
adc
in
cld
addb
fdivrs
xchg
scas
adc
clc
add
sbb
pop
adc
mov
xchg
in
ret
fiadds
bound
fsubrs
subl
sbb
sbb
pop
jae
rcll
loop
fwait
or
mov
push
iret
add
scas
cmp
repnz
mov
aaa
mov
ret
in
jb
mov
into
or
xor
lcall
add
fdivrs
pop
xchg
icebp
push
sbbb
loope
lahf
mov
les
fsubl
lahf
add
pusha
addb
inc
iret
loopne
arpl
fcompl
jmp
gs
push
mov
mov
dec
or
dec
xor
arpl
pop
pop
sahf
dec
mov
mov
push
clc
out
popf
push
negb
aam
pop
cmpsl
fwait
idivb
pop
adc
mov
dec
adc
jnp
jl
loopne
mov
pop
mov
scas
add
pushf
and
repnz
pop
and
orb
mov
lahf
push
bound
das
mov
loope
clc
cwtl
cmc
mov
jp
mov
mov
jecxz
mov
imul
xchg
sbbl
ja
adc
repnz
mov
mov
mov
jb
out
add
inc
lahf
out
rcrb
in
mov
ss
cmpl
mov
cld
shr
popa
or
ret
aad
pop
push
ret
adc
cld
insb
pop
mov
inc
push
pop
fisttpl
sub
or
aam
scas
fwait
fwait
outsl
outsl
lcall
push
lahf
push
ja
push
orl
cs
mov
jmp
xorb
fadds
xor
ljmp
divl
sub
jb
inc
mov
leave
call
mov
jne
jbe
mov
lea
rcll
dec
cmc
pushf
push
test
insl
in
lret
lcall
sub
and
add
outsb
pop
scas
jnp
dec
lock
cli
push
xor
scas
or
add
mov
loope
in
jmp
sub
addr16
andl
addb
popa
xchg
inc
xchg
test
sub
mov
push
aas
loop
add
loopne
cs
iret
pushf
adc
pop
aam
movsl
add
aam
shll
shlb
push
pop
je
ja
cld
cli
js
mov
pop
fstpl
or
lahf
orl
mov
sub
mov
loope
movsb
push
push
cmp
sbb
push
mov
icebp
mov
sub
xchg
cmp
xor
jle
jns
loope
hlt
mov
bound
lds
repz
in
rclb
out
jge
jnp
stc
shlb
sub
shrl
push
mov
icebp
pop
aas
mov
sbb
mov
lea
sub
mov
push
push
dec
mov
dec
shrl
stos
fdivrp
mov
sub
sub
sub
push
xor
push
sub
rolb
xchg
push
cltd
shrb
adc
dec
adc
jmp
sbb
inc
xchg
mov
pusha
dec
dec
roll
inc
inc
inc
stc
dec
fldl
inc
neg
mov
fldl
xchg
pop
fistps
cmp
mov
cvttps2pi
sub
push
and
mov
xor
jo
lret
xchg
stos
jnp
out
mov
jno
inc
cwtl
sbb
push
pushf
popf
out
inc
mov
sarl
lods
jno
int
inc
mov
mov
adc
or
and
mov
cmp
mov
repnz
and
xor
add
xor
inc
jle
adc
xorb
aad
repz
aam
in
sarl
movsl
or
movsl
sbbl
std
lods
outsl
in
and
out
out
mov
inc
push
enter
out
ja
scas
inc
out
mov
cmpsl
jl
fnstcw
jge
inc
push
repnz
or
lahf
push
addr16
xchg
lcall
xor
ds
xor
mov
inc
sub
jnp
push
lahf
xlat
add
enter
jg
pop
sbb
mov
jbe
push
push
lds
dec
lods
cltd
or
dec
repz
lcall
test
repnz
mov
and
rcrb
and
fnstsw
sub
lcall
insl
cmpsb
jmp
insb
sub
mov
arpl
mov
pop
mov
lcall
xlat
out
xor
aam
and
bnd
ds
cli
jge
es
jo
mov
inc
pop
addr16
mov
mov
repnz
jp
mov
pop
add
push
rcr
imul
in
mov
gs
lahf
xlat
loopne
sbb
insl
push
add
hlt
out
mov
pop
sti
mov
fldl2e
xchg
sbb
aaa
pop
mov
popf
into
cmpl
or
aam
dec
mov
mov
sbb
or
insl
or
sub
inc
pushf
dec
inc
sbb
lahf
stos
aad
rcr
push
jbe
inc
cmpsl
cwtl
mov
data16
test
out
add
cltd
push
or
loope
mov
pusha
adc
mov
add
or
lea
and
stos
inc
xchg
out
lds
xchg
js
iret
scas
cld
fisubl
push
movsl
and
clc
sbb
xlat
push
sbb
sub
push
daa
sbb
aam
dec
outsb
inc
mov
add
test
sbb
sub
test
pop
xchg
push
in
cmpsl
xchg
add
clc
lea
xor
icebp
test
lds
popa
and
out
jae
hlt
pop
inc
mov
xchg
daa
lcall
push
dec
dec
sbbb
fwait
adc
and
fwait
mov
cld
out
jae
dec
pop
cmp
jo
rcr
mov
test
hlt
hlt
mov
stc
sbb
fcmovnu
pop
mov
in
fistpl
imulb
les
fmuls
mov
push
dec
mov
adc
mov
and
imul
fnstcw
loop
ret
mov
xchg
int3
scas
loopne
loopne
lods
aas
xor
pop
xchg
or
scas
test
or
dec
xorl
jne
xchg
mov
mov
sub
leave
xor
cld
pop
fcoml
shlb
mov
xor
add
data16
int
push
adc
inc
push
aaa
adc
loop
mov
push
dec
gs
sub
push
in
mov
cltd
mov
ljmp
xchg
add
jo
sbb
les
and
xor
mov
pushf
dec
dec
imul
in
cmpl
aad
xchg
cld
leave
xchg
je
dec
sahf
adc
sbb
xor
cwtl
orl
push
roll
pop
xor
testb
leave
stc
jno
sbb
fsub
dec
aam
insl
movsl
mov
pop
scas
sub
outsl
sbb
leave
das
mov
movsb
push
dec
pop
pavgb
les
mov
hlt
jno
rcrl
faddl
sbb
xor
adc
leave
iret
sub
mov
sub
xchg
xlat
sbb
leave
mov
sbb
outsb
or
sub
add
jnp
fistpl
jns
lret
or
jb
jge
mov
jp
sub
sbb
outsl
test
addr16
call
xor
push
add
inc
adc
sahf
xor
aas
imul
loop
es
or
clc
mov
and
mov
xchg
test
imul
cwtl
shlb
rcrl
jmp
jo
inc
rcrb
and
lods
xlat
jno
xchg
pushf
mov
and
imul
lds
xor
cmp
push
sbb
pop
xchg
mov
in
mov
filds
mov
hlt
sti
jns
outsb
or
rcll
in
fwait
or
popf
mov
divb
lods
out
shlb
inc
call
dec
ret
lods
test
and
push
xor
leave
rcrb
mov
xor
cmp
testl
repz
cltd
xor
lret
aad
pop
fs
adc
and
xor
jae
repnz
dec
sub
mov
test
inc
jmp
mov
scas
cli
ret
add
int3
fs
mov
push
test
fmul
adc
je
sbb
sub
scas
push
cli
mov
pop
or
xor
cmp
in
loopne
push
xchg
mov
int
mov
shl
xchg
sbb
stos
rolb
xor
cwtl
sbb
loope
fcomip
pop
or
sub
lods
mov
xchg
sub
jne
stc
sahf
push
test
adc
movsb
pop
xchg
outsb
lea
scas
roll
inc
inc
cmpsl
xchg
in
das
fstl
xchg
push
mov
sbb
mov
xchg
pop
or
sub
jle
iret
xlat
mov
push
jmp
and
jno
inc
add
aas
jbe
sub
mov
push
ljmp
std
mov
mov
cmpsb
in
lret
and
es
xchg
push
xchg
jbe
mov
leave
xor
subb
mov
mov
mov
mov
jge
out
enter
or
xchg
inc
xchg
dec
jb
inc
icebp
xor
inc
jno
sbb
sar
jnp
fistpl
mov
aaa
mov
adc
dec
jno
mov
sub
ljmp
sbbb
mov
shlb
mov
loopne
outsl
cmp
adc
iret
or
mov
and
and
imul
cmpsb
xchg
sbb
mov
sub
push
inc
cmp
cmp
jbe
dec
lds
sub
or
sub
mov
in
xchg
cld
sbbl
iret
xor
in
mov
sbb
pop
outsb
movsb
aad
and
dec
rclb
mov
lods
and
pop
pop
out
and
push
push
sbb
inc
and
dec
test
adc
pop
ds
divl
xchg
mov
push
mov
inc
ror
imul
inc
jne
dec
flds
movsl
cmpb
ss
xchg
xchg
cmc
nop
test
and
ds
xor
push
sub
idiv
pusha
shlb
pop
mov
negl
push
xor
sub
dec
stos
jne
xchg
jno
and
data16
stos
leave
mov
or
xchg
data16
pop
loopne
or
push
stos
inc
sbb
mov
lahf
cmpsb
data16
mov
loope
out
add
pop
lcall
lock
aad
sbb
mov
sbb
shl
inc
jp
add
adcl
cbtw
out
push
repz
notl
sub
daa
cwtl
adc
push
roll
out
or
lods
mov
out
outsb
aam
inc
lahf
and
arpl
and
cmpsl
fstps
xchg
js
xor
loope
mov
dec
and
or
xorb
inc
lret
adc
xor
xchg
xorb
mov
ret
sub
mov
int3
in
xor
ret
sbb
mov
cmp
sbb
sbb
add
insl
push
mov
pop
lret
imul
pusha
and
arpl
int
sbb
aaa
mov
mov
pushf
fsubrs
jno
std
in
movsl
cmp
das
mov
pushf
xlat
and
inc
shr
pop
sub
inc
dec
lret
push
fnstenv
dec
sbbl
sbbb
insb
xor
jge
js
rorb
push
loop
cmpsb
mov
loopne
aas
pusha
mov
decb
ss
bnd
jb
rol
add
addr16
xchg
aas
cmp
shl
sbb
leave
lcall
xchg
pop
loopne
pop
add
outsl
cmc
jbe
shl
xor
adc
jecxz
push
ret
int3
adc
and
jmp
icebp
mov
dec
jbe
ds
mov
jg
sub
mov
jne
mov
imul
out
push
dec
lock
mov
push
stos
add
push
push
dec
push
or
push
orb
inc
jle
outsb
loopne
xor
push
ljmp
ficomps
arpl
mov
xchg
sub
mov
mov
sub
jnp
das
in
cmc
mov
pop
mov
sbbb
inc
in
jl
je
push
call
add
jb
stos
imul
pop
in
mov
into
sqrtps
movsb
sub
int3
loop
mov
xchg
ljmp
lret
jmp
sbb
and
addr16
fimuls
adc
dec
stc
sub
aad
jns
jno
cli
test
mov
inc
and
xchg
testb
fs
popf
sbb
pushf
xlat
inc
repz
js
jae
shll
stc
clc
out
mov
xchg
and
in
cmp
fnstcw
ficompl
xor
sbb
inc
out
sbb
sahf
addb
shl
mov
jno
sbb
dec
in
xchg
push
jle
ljmp
in
xchg
ret
sbb
cmp
xchg
repz
aad
pop
fimull
cmp
shlb
mov
adc
stc
xchg
push
push
cltd
lds
repz
jne
stos
outsb
loop
and
clc
push
fdivr
mov
shr
rcll
inc
fistps
mov
adc
fidivl
sub
cmp
mov
inc
stos
movsb
xor
xor
cld
arpl
xor
out
pop
inc
mov
push
jne
loopne
mov
mov
and
fs
adc
popf
daa
mov
lods
xor
cwtl
call
gs
xlat
into
fnstsw
mov
lods
movsb
and
fsubrp
and
lds
xchg
fisubrs
push
lea
call
xchg
out
adcb
stc
fildl
imul
sub
mov
xchg
icebp
iret
cmp
pushf
mov
in
aaa
jmp
add
dec
mov
pop
call
cmp
jne
jmp
repnz
cmpsl
fdivrl
adc
movsl
rep
xchg
rcll
adc
or
pushl
ljmp
push
fsubr
inc
mov
mov
out
inc
push
popa
cmc
cmp
lcall
in
or
inc
cmpsl
mov
repnz
push
lods
sub
out
jmp
nop
adc
or
inc
sub
xorl
xchg
addb
mov
insb
aad
sbb
sbb
outsl
dec
add
jp
cmpsb
xor
and
fcoml
jbe
pop
adc
out
cmpsb
inc
jge
lods
hlt
cmc
cli
call
aam
push
mov
jnp
push
xchg
sahf
push
imul
mov
aam
mov
inc
es
notb
psraw
push
jbe
sub
dec
mov
jb
pop
adc
sarl
aad
mov
xchg
lret
fadds
cmp
repnz
jmp
mov
in
add
jecxz
loop
sahf
jle
xor
clc
inc
sbb
sbbb
dec
mov
out
sub
shlb
movsl
jecxz
imul
outsl
pushf
add
and
cmp
mov
and
mov
repz
or
cmp
inc
nop
xor
js
test
sub
nop
aam
dec
push
push
cmpsl
mov
mov
sbb
mov
lret
lret
jae
out
das
sbb
sub
lods
les
rol
movsl
stos
cli
jecxz
mov
xchg
or
dec
test
xor
repz
mov
sbb
mov
jl
xor
daa
rorl
adc
mov
mov
test
push
insb
cmp
idiv
es
out
adcl
cmp
pop
mov
fldl
inc
imul
jle
outsb
xchg
pop
pop
mov
sub
sub
push
arpl
rcl
add
jnp
sbb
inc
out
sbb
sub
xchg
andb
lods
fisubs
mov
pop
fs
mov
or
mov
jnp
jbe
mov
pop
add
jp
mov
pushf
mov
mov
sub
jne
lods
pop
push
push
scas
adc
pusha
pop
sbb
fisttpll
sarb
cmp
sbb
jle
push
fwait
add
sbb
xlat
pop
pop
mov
cmpsl
and
loopne
out
inc
mov
pop
call
pop
int
aam
out
shlb
lret
popa
dec
and
mov
popf
scas
ret
fsubl
insl
and
loopne
data16
sub
mov
dec
sbb
jl
out
popa
pop
jbe
and
xor
out
outsb
pop
fwait
or
into
mov
outsb
fisubrl
pushf
ja
mov
sti
inc
sbb
sbb
jl
andl
nop
sub
lea
rclb
insl
cli
xchg
cmp
movl
lds
sub
mov
and
mov
test
inc
and
popf
fldl
xor
xchg
in
repz
lret
cmpsb
dec
mov
add
add
ss
mov
out
inc
jmp
sbb
nop
popa
push
mov
dec
xor
add
or
or
ljmp
imulb
or
mov
sbb
in
out
repnz
cmpsb
sub
loop
push
adc
je
dec
mov
rorb
fildl
mov
push
gs
or
mov
xor
adc
xchg
cmc
loope
call
add
dec
and
jo
lea
or
or
push
pushf
jp
bound
xor
xchg
arpl
fdivrs
outsl
cmc
and
insl
popa
dec
nop
xchg
out
lods
mov
jne
mov
and
jb
sub
mov
pop
lods
xor
inc
scas
sub
out
ret
clc
mov
pop
lea
cmp
sub
or
cli
xor
pop
orb
inc
rolb
xchg
orl
inc
stos
inc
pop
mov
add
ljmp
pop
push
xchg
xchg
fmull
das
inc
aam
cld
pushf
testl
and
mov
aam
xchg
lret
pop
data16
addr16
insb
sbb
movsb
mov
sbb
push
loope
xor
mov
mov
sub
mov
icebp
sub
sbb
mov
andb
dec
or
or
sbb
aas
pop
daa
dec
cmp
test
cmpsl
cmc
push
xchg
jo
xor
mov
inc
cmpsl
loope
dec
inc
stos
xacquire
dec
out
mov
dec
fimuls
loop
testb
jg
pop
out
cmc
in
jmp
adc
notl
jo
xor
mul
fistpll
pop
test
dec
pop
pop
jp
loop
pop
daa
and
jle
pop
movsb
mov
aas
pop
cld
inc
cmpsb
std
fdivl
scas
addb
push
rorb
push
mov
fdivrs
push
in
aas
imul
sub
and
xchg
jbe
outsl
xchg
sub
pushf
jns
fimull
movl
adc
les
movsb
icebp
test
pushf
stc
or
enter
cmpsl
arpl
flds
mov
out
bnd
and
mov
jge
jae
push
sub
lcall
lds
es
xchg
dec
ffreep
xchg
mov
jo
out
dec
insb
or
adc
push
jb
xlat
add
in
push
mov
and
push
or
jmp
data16
incb
icebp
sbb
inc
popa
jbe
sub
mov
popa
aaa
add
push
arpl
xor
or
push
out
test
mov
or
sub
push
sbb
or
jb
inc
adcl
xchg
jg
jo
xchg
or
ret
dec
in
clc
sarl
add
adc
jno
repnz
and
add
add
test
jmp
aam
clc
fcoms
add
lret
add
arpl
mov
add
mov
push
jecxz
push
lret
mov
xchg
testb
mov
jbe
add
imul
imul
push
xchg
lock
pop
aaa
mov
pop
xorb
test
add
push
out
dec
js
jb
jecxz
mov
and
dec
pop
sbb
adc
inc
push
xchg
stos
sub
add
mov
jmp
dec
sub
add
xlat
xchg
cmp
adc
bound
scas
mov
cmpsb
inc
add
popa
fstl
shrl
cmp
add
and
rcrl
add
sbb
hlt
std
test
and
adc
mov
mov
adc
or
addb
push
mov
fwait
sbb
das
lret
dec
jl
in
xchg
mov
ret
mull
push
jp
popf
pop
outsl
lea
xchg
xor
pop
jbe
xchg
ja
mov
mov
daa
push
in
pop
fsubs
xchg
je
and
setnp
arpl
mov
adc
mov
loop
iret
lods
hlt
fmuls
sbb
icebp
repz
ljmp
stos
push
push
je
out
jecxz
mov
xor
fildl
jno
mov
jnp
std
inc
inc
pop
movsl
cmpsb
xchg
cmp
icebp
xor
leave
cmpl
and
cs
or
gs
mov
pop
insb
setbe
out
clc
xor
xchg
aam
mov
mov
lcall
mov
cmc
outsl
sub
pop
cld
scas
pop
movsb
add
sub
in
fnsave
pop
lods
xchg
xchg
mov
scas
inc
adc
popa
nop
sbb
xchg
test
cs
or
add
loope
loope
cli
out
cmp
inc
into
mov
xchg
mov
cmp
xor
out
and
outsl
std
jp
xchg
mov
push
stos
fwait
rcr
sbb
mov
cwtl
add
and
leave
lea
or
out
hlt
xlat
ljmp
std
rcpps
imul
rcrl
int3
mov
cmc
inc
cmpsb
cld
xor
inc
fcomp
cld
pop
pusha
cli
adc
shrl
jmp
out
jmp
test
xchg
mov
enter
add
decb
mov
dec
push
outsl
pop
aaa
insl
mov
sbbl
jnp
cmc
loopne
gs
dec
loop
sbb
popf
mov
mov
sti
xchg
jne
out
testb
inc
mov
mov
sbb
daa
dec
adc
push
xchg
sbb
push
arpl
addb
lock
cld
test
pop
fmuls
dec
je
adc
lcall
mov
xchg
cli
ljmp
mov
test
aad
mov
mov
stos
fldcw
mov
jae
mov
fldl
loop
xchg
out
jge
nop
iret
ss
pop
test
outsl
shlb
mov
dec
lods
insl
or
fwait
test
lods
mov
insb
add
stos
inc
fstpt
push
xor
stc
sbb
pop
sub
dec
cmp
repnz
pop
outsb
hlt
stos
xchg
into
mov
sbb
dec
mov
and
loop
lods
jg
xchg
mov
adc
imul
cmp
or
xor
adc
mov
mov
icebp
cmpsb
roll
scas
adc
jle
mov
mov
stos
xchg
cli
xlat
dec
jbe
and
sub
enter
popf
pushf
loop
sbb
add
movsb
adc
adc
mov
push
push
push
xchg
fcmovu
bound
cmp
mov
dec
out
test
fwait
sarl
idivl
scas
lret
xchg
cmp
xor
lcall
testb
xchg
sbb
mov
xchg
push
mov
jge
shrb
pusha
dec
cmpsl
shr
pop
sbb
dec
jp
scas
pop
sub
adc
sbb
or
aas
fdivs
int3
jnp
leave
aas
lcall
mov
xlat
jae
mov
nop
pop
dec
rorb
sbb
enter
push
lods
adc
ret
dec
insb
outsb
lds
pop
test
jmp
mov
neg
pop
push
push
shll
out
inc
cmp
mov
das
loopne
xor
sti
shr
scas
rcrb
mov
insl
nop
daa
lcall
pop
jle
cwtl
add
mov
loope
jb
gs
cmp
pop
int3
aam
mov
rcl
xchg
push
and
rorl
ret
sub
stos
gs
cmpsb
mov
or
mov
xor
fmul
cmp
fbld
pop
sti
scas
nop
lret
jg
pop
mov
dec
jnp
movsb
jbe
sbb
mov
addl
xor
xchg
mov
repnz
mov
cmp
pop
fcomps
mov
test
dec
cwtl
and
rcl
in
pop
adc
jne
stc
fildl
dec
cld
xchg
sbb
pop
jb
mov
fdivrs
lret
xor
pushf
pushf
xor
jae
lcall
and
jae
into
mov
in
leave
sbb
std
cmp
add
push
imul
mov
dec
pushf
arpl
jle
xchg
in
mov
dec
cmp
ss
out
sbb
fimuls
mov
lcall
int3
mov
mov
in
add
jno
add
mov
jp
icebp
sbb
jnp
daa
push
or
call
jae
mov
pop
mov
cmp
aaa
gs
sub
sub
inc
cmp
mov
and
and
ret
xor
out
das
push
dec
fwait
push
push
iret
sarl
clc
stc
daa
push
or
inc
mov
dec
addr16
daa
shll
or
hlt
jo
mov
xor
xchg
sbb
lods
adc
pop
sub
nop
lret
add
loope
adc
or
adc
mov
mov
jl
sti
mov
inc
cmpsb
sbb
fld
insl
mull
nop
jo
fbstp
repnz
xor
in
cmp
int
add
xchg
adc
into
inc
mov
sub
sbb
push
add
inc
lods
xchg
pop
sar
push
push
imul
cmp
dec
jecxz
or
ret
stos
mov
push
push
movsl
loope
call
jo
lods
sub
sub
cli
out
fdivrs
add
push
in
shll
fsubrs
imul
shl
jae
push
sbb
xor
imul
mov
jo
inc
xchg
pop
loope
add
mov
in
cli
aas
arpl
pop
out
mov
sub
pop
jge
sbb
cmpsl
jp
ja
dec
xchg
push
sub
xchg
stos
push
inc
mov
icebp
outsl
xor
jb
mov
xor
pusha
push
aas
adc
jecxz
out
inc
out
es
xor
sarl
pop
pop
adc
sub
jns
outsl
adc
mov
nop
and
ret
shlb
movsl
mov
mov
cs
enter
xchg
repnz
les
dec
shrb
scas
rcl
and
jecxz
ror
lahf
mov
cmp
cmpsb
popa
repz
mov
popf
xchg
or
sbb
xor
mov
test
pop
cltd
pop
xchg
movsb
iret
inc
stc
xchg
cmp
js
push
cli
push
push
in
inc
leave
inc
push
popf
dec
mov
xor
mull
rolb
inc
std
aad
mov
and
in
lds
or
add
sub
adc
cltd
dec
jg
lds
or
push
mov
mov
sub
sbb
in
stos
ljmp
shr
sub
inc
pusha
adc
jl
bound
mov
and
jns
inc
ss
and
mov
out
lret
rcl
in
sbb
nop
mov
sub
shll
xchg
lcall
pusha
adc
cltd
dec
rorl
popf
xor
mov
inc
lods
ficoml
pushf
mov
popf
add
aas
in
fldcw
mov
push
and
fs
cmpsb
stos
jp
ret
pop
stc
jg
out
fcoms
sub
mov
mov
mov
cmc
mov
push
or
rol
insb
test
cli
sar
jmp
mov
imul
dec
arpl
mov
stos
pusha
frstor
xchg
and
inc
jne
inc
pop
push
pop
popf
jno
jno
inc
jno
imul
dec
adc
xor
mov
dec
jp
inc
sbb
lret
xor
mov
sub
scas
testl
ret
and
dec
inc
jge
ja
mov
mov
and
push
cld
leave
push
cmp
xadd
fwait
test
pusha
add
movsb
xor
sbb
sti
mov
outsl
gs
xor
push
mov
mov
ret
inc
aam
xor
push
and
aaa
dec
mov
mov
rol
jo
outsb
jne
xchg
push
icebp
push
xchg
xor
repnz
push
in
adc
jnp
inc
push
mov
jno
test
fwait
aas
lea
stos
negl
push
jbe
fdivrs
int
cld
dec
pushf
imul
push
xlat
mov
pop
add
pop
rcll
push
loope
mov
push
mov
mov
push
lea
arpl
xor
rorb
inc
out
pop
pop
push
aas
jmp
shl
cmp
fwait
shr
lret
out
inc
jle
mov
fwait
outsb
aad
roll
xor
loop
jns
mov
js
rcll
jle
jl
outsb
mov
fucomip
push
movsl
mov
ret
cmp
dec
ja
test
icebp
mov
xchg
push
xor
fldcw
nop
movsl
mov
insl
mov
adc
fidivrs
dec
out
test
fistpll
into
icebp
inc
fildll
or
xor
out
jecxz
push
jle
sub
cmp
inc
mov
dec
add
add
mov
jo
testb
and
cmpsl
adc
mov
and
sbb
ljmp
jmp
adc
push
jl
push
movsl
sbb
ss
ret
jb
imul
repnz
or
dec
jns
pop
std
rcrb
rcpps
sbb
out
adc
lret
push
xor
insl
fistps
cmp
jp
scas
mov
pop
icebp
rcrl
pop
lea
push
sub
inc
push
jno
push
xchg
or
fsts
jle
popa
shlb
cmp
repnz
mov
cmpsb
dec
pusha
or
aaa
insl
jno
mov
dec
inc
push
test
sbb
and
decb
and
and
or
inc
mov
imul
lret
mov
and
sarl
addb
mov
lea
ja
mov
lret
inc
xor
mov
test
xlat
mov
inc
xchg
or
lods
push
xlat
add
fildl
outsl
out
xor
cmpl
jae
jecxz
jg
xchg
mov
push
daa
andl
or
mov
cmp
loop
cmp
into
aaa
in
mov
mov
mov
mov
repnz
adc
mov
and
sub
enter
out
mov
and
inc
loop
enter
push
cmp
bound
push
cmc
mov
dec
cmp
frstpm(287
call
scas
pop
xchg
mov
or
inc
and
sbb
repnz
add
addr16
outsl
jmp
jge
bound
in
jecxz
push
daa
adc
dec
addr16
ret
nop
dec
iret
stos
adc
outsb
aam
lea
pop
ret
sbb
jge
js
dec
data16
out
mov
sub
jno
fadds
test
insb
fimuls
mov
into
in
les
imul
pop
iret
rorb
dec
jg
xor
xchg
push
mov
fstl
cmp
out
ja
bnd
cmpsl
out
sbb
aaa
je
pop
push
lcall
test
movsl
add
pop
mov
out
inc
mov
push
cmp
cld
dec
pop
sub
cmp
xor
push
and
out
out
push
xchg
jmp
mov
sbb
das
pop
and
dec
dec
xlat
cmp
adc
sub
sahf
or
jae
jno
fs
data16
pop
mov
push
adcb
pop
sub
mov
mov
jbe
lahf
insl
gs
xchg
popf
adc
push
adc
fmull
test
add
lods
scas
subb
fildl
ret
or
lret
popa
mov
mov
pop
imul
orl
adc
test
adc
add
loope
cwtl
cs
jne
pop
dec
je
pusha
in
mov
jl
out
dec
push
inc
xchg
or
or
and
pop
lret
mov
xor
xchg
mov
xchg
out
fs
and
jecxz
sbb
jns
scas
adc
pop
gs
jmp
cwtl
addr16
cmp
mov
loop
mov
out
pop
mov
inc
mov
or
repz
dec
sub
push
sub
ror
in
inc
push
sub
pop
cmc
pushf
mov
mov
xchg
jno
inc
data16
lcall
lea
in
sub
insb
add
es
or
fdivs
push
sbb
popf
jae
movsl
std
pop
mov
stos
mov
enter
adc
mov
dec
daa
xor
sub
stos
cmp
fsubl
and
faddl
mov
push
lahf
jle
dec
call
in
sbb
add
mov
cmp
push
sarb
ljmp
mov
hlt
lods
pop
jge
lods
push
jecxz
xor
push
or
outsb
xchg
xchg
loope
ds
push
mov
iret
aas
lret
xchg
mov
outsl
fldenv
dec
lds
loop
aaa
pop
mov
imul
pushl
lods
das
hlt
ret
push
movsb
mov
ds
jmp
dec
mov
jne
mov
push
shr
add
jbe
fcmovu
mov
shll
pop
jmp
push
les
pop
movsb
adc
adc
lret
push
outsl
inc
cmpsl
push
stos
jb
push
mov
or
jne
ss
test
xchg
sar
into
push
mov
dec
or
sbb
inc
test
xlat
mov
inc
mov
pop
jae
clc
lahf
jecxz
and
rolb
mov
or
push
arpl
mov
scas
fistps
xor
lea
jle
add
fwait
add
out
mov
es
fnstsw
imul
dec
shlb
add
in
dec
xor
vrsqrtps
clc
cmp
call
or
test
jp
cmpsl
jbe
mov
add
rorb
scas
adc
inc
lods
xor
inc
andl
cld
jae
add
sub
xor
test
mov
test
lods
scas
data16
push
mov
into
loop
into
mov
jle
cmp
js
je
dec
inc
pusha
and
sub
xor
jbe
jl
pop
vpsllw
in
test
sub
and
xchg
int
adc
xchg
inc
call
leave
cmpsl
icebp
jno
sub
add
or
pop
dec
das
pop
lret
stos
mov
and
jns
xchg
jl
outsb
jmp
inc
adc
sub
gs
adc
cmp
pop
sub
jnp
push
sbb
in
stos
push
push
fs
sti
repz
mov
xlat
lret
dec
pusha
shll
out
imul
adc
les
fidivrl
push
mov
arpl
lds
adc
and
fsubrl
push
lock
sub
jb
jns
arpl
fidivrl
lret
cld
scas
ja
inc
lret
xor
dec
mov
cmp
stos
ror
cmp
in
adc
lds
repnz
cmp
clc
inc
loop
push
jmp
mov
stos
cmp
push
cmp
loop
jo
aam
add
adc
fstpl
loopne
jae
adc
cmp
push
repnz
cmp
mov
int
loopne
pop
dec
cs
mov
xor
mov
andl
dec
loopne
adc
cmpb
bnd
xchg
hlt
scas
pop
push
jle
or
cmp
pop
test
sahf
pop
outsl
jbe
add
out
push
or
pand
into
out
cmpsb
fcoms
aas
sahf
icebp
jge
pop
push
push
add
sbb
movl
stos
jno
jo
mov
ljmp
sbb
outsb
sbb
sub
and
jecxz
aas
push
sbb
push
jmp
jmp
es
aad
cld
jge
jg
adc
ffreep
int
xchg
into
inc
mov
lret
int3
cmp
xchg
xlat
movsl
popf
xor
fnstsw
pop
ds
pop
in
imul
ficomps
or
loop
rcl
das
add
imul
inc
xlat
sbb
stos
xor
ss
add
imul
add
jg
les
mov
std
call
pop
push
adc
test
mov
lock
pop
mov
out
dec
ficoms
ds
xchg
fidivs
mov
cltd
ljmp
xchg
push
and
leave
mov
pop
mov
clc
sahf
jb
sub
repz
push
idivb
in
sahf
repnz
push
and
push
xlat
xor
xchg
push
in
lods
jle
out
aas
pop
add
pop
or
fidivl
repnz
mov
rol
inc
int
pop
mov
xchg
loop
nop
movl
inc
ja
jb
dec
sub
in
jo
jge
shr
sub
pop
out
mov
ret
lock
cmc
mov
rorl
daa
mov
negb
mov
in
out
mov
data16
pop
sar
or
stc
in
cmp
cld
fidivrs
adc
jno
jb
out
stc
cmp
pop
inc
and
cmp
jp
pop
and
out
inc
xchg
dec
xor
pop
add
xor
mov
pop
lea
and
dec
jle
popf
xor
das
sbb
cmp
or
stos
popa
mov
xor
fbstp
sbb
cmp
scas
ret
cmp
xchg
mov
mov
data16
lret
loop
push
ss
loopne
and
dec
xor
movsb
leave
fwait
adc
ret
je
pushf
stos
inc
popa
int3
add
mov
xor
sub
push
mov
dec
and
jmp
jl
inc
cmc
imul
sub
rclb
jno
ljmp
fsubl
dec
aad
xlat
pop
inc
adc
dec
daa
xor
or
mov
data16
sbb
push
jne
jecxz
jns
loopne
mov
xchg
push
fwait
inc
xchg
out
iret
scas
sbb
sbb
cld
dec
lods
push
and
fcomip
push
clc
xorl
aaa
js
int3
cmp
das
push
sti
sbb
sbb
xchg
iret
ret
inc
cmp
xor
add
cmpl
dec
nop
or
push
insb
push
adc
adc
inc
js
mov
ja
xchg
fisttpll
ret
out
pop
xchg
mov
rcll
sbb
inc
push
cs
test
ljmp
jge
sbb
push
lock
in
inc
mov
pop
stc
scas
testb
cmp
mov
xor
mov
xchg
mov
jle
push
and
daa
decl
xchg
clc
aam
daa
and
mov
mov
popa
xor
sbb
dec
inc
test
jecxz
push
enter
push
jmp
push
pusha
shl
stos
sahf
sbb
cmpsl
add
test
jne
cmp
fiadds
icebp
lahf
push
xchg
pushf
int
lods
je
xor
and
add
pop
mov
jbe
jne
nop
push
pop
das
pushf
stc
data16
pop
xchg
rorb
not
xchg
ss
dec
loop
rorl
bound
ret
pushf
je
test
cmc
shl
mov
dec
leave
mov
outsb
add
push
lcall
dec
fs
or
mov
jbe
repz
mov
jbe
popa
test
push
xor
cld
ret
jb
sub
ds
mov
xchg
mov
cli
gs
adc
or
and
leave
imul
ret
out
mov
push
stos
movsl
sarl
nop
push
int
js
jae
fcompl
pushf
std
cs
mov
fbld
dec
movsb
gs
mov
subb
xor
repz
add
push
in
jg
loope
jns
xchg
mov
mov
jns
cld
pushl
sbb
lods
jne
out
mov
popa
stos
push
pop
pop
pop
xor
daa
insl
shlb
push
cmpsl
jp
aas
ljmp
mov
aaa
xchg
test
jp
aas
mov
ret
dec
repnz
test
data16
ss
and
pop
lds
sbb
adc
mov
adc
call
pop
cmp
clc
push
xchg
jo
pop
ja
gs
addb
adc
sub
xchg
mov
mov
inc
xchg
fcompl
xchg
xor
fistpll
and
imul
jmp
adc
push
loopw
lret
mov
jecxz
std
fstp
fdivrl
or
pop
xlat
scas
jnp
mov
adc
dec
loopne
jl
jg
push
jns
jo
lds
push
aam
mov
ja
loop
xchg
pop
dec
cmp
lcall
arpl
cmp
in
pop
and
shl
sbb
div
xor
sub
shl
mov
sbb
popf
sarb
data16
adc
in
popf
ljmp
test
lret
scas
and
sahf
loop
xor
stc
fcoms
aas
test
cmp
add
sarl
test
notl
push
jns
test
mov
xor
repnz
rol
mov
pop
js
call
shll
adc
pop
add
ss
inc
repnz
in
xchg
rcrl
push
aam
pop
lods
movsl
pop
sahf
inc
mov
icebp
movsb
pop
cmp
int3
fidivl
mov
sub
cltd
mov
jae
sbb
push
cmp
popf
out
test
xchg
add
inc
in
push
sahf
xlat
ljmp
out
iret
cmp
movsl
pushf
push
jo
jnp
inc
cmp
cli
and
into
add
arpl
and
jle
xchg
xchg
out
out
dec
cli
leave
or
xchg
outsl
in
jae
add
add
fnstsw
rcr
cld
sub
jae
sarl
scas
pop
fadds
test
pop
jae
insb
xchg
inc
into
mov
jge
fbld
adc
lods
lret
out
test
sbb
pop
pusha
push
arpl
mov
mov
inc
es
dec
stos
sbb
test
jg
out
mov
sub
cmp
lea
ret
xor
and
js
jb
test
jge
insb
pop
push
test
std
rcll
ljmp
rorl
das
in
and
outsb
sub
cmp
cmp
xchg
push
arpl
xchg
jae
or
negl
repnz
pop
std
add
insl
pop
xor
add
stc
pop
aas
imul
push
cli
dec
xor
aam
sahf
pop
inc
and
movsb
inc
or
jg
xchg
mulb
sbb
out
fdivr
aam
jmp
nop
cmp
icebp
adc
cmp
cmp
or
hlt
or
lret
repnz
stos
jmp
inc
push
add
or
sub
jecxz
mov
adcb
xchg
mov
dec
jns
push
test
fdivr
push
sbb
sti
xor
cmp
or
daa
mov
push
push
add
insb
push
subb
mov
mov
cld
dec
daa
int
pop
xor
sbb
xor
fcmovnu
fsubr
push
mov
out
fnstsw
xchg
cmp
push
jl
gs
mov
lock
xchg
in
xchg
jbe
divl
lods
add
sbb
arpl
dec
dec
and
push
sub
mov
mov
jmp
loop
cmp
js
rorl
fldt
sub
sbbl
test
out
out
fsubp
adc
pop
mov
ss
mov
push
cmp
mov
add
sub
les
test
lcall
jp
jl
push
mov
jb
mov
cwtl
xorl
je
xor
inc
int
cmp
add
lods
mov
icebp
inc
pop
gs
and
sahf
or
and
loope
dec
bound
fistl
sarb
stos
shr
pop
out
inc
sub
div
push
pop
push
mov
adc
int3
imul
sti
pop
inc
lods
mov
nop
add
pop
in
nop
or
inc
in
xor
mov
jnp
jb
mov
inc
xchg
mov
sbbl
ret
mov
mov
sarb
or
jbe
jge
into
jmp
and
xchg
lret
add
call
mov
fcomps
mov
sarl
add
dec
xchg
jp
pop
mov
seta
lea
add
arpl
dec
rcll
or
xor
add
fwait
jo
mov
pop
loope
xchg
push
mov
cmp
out
sbb
pop
lahf
pop
jge
xchg
sahf
es
jns
jg
pop
fcmovnu
dec
push
and
rorb
nop
push
sarb
adcb
inc
and
pop
inc
pop
pop
cmp
ret
xor
imul
int
test
push
lock
adc
or
icebp
mov
sub
fwait
push
data16
xchg
push
push
loope
and
sub
addl
xor
rclb
xor
das
dec
inc
cwtl
lahf
mov
insl
pop
dec
jo
addb
adcl
pop
inc
pop
cmc
xchg
call
and
sub
push
xchg
inc
std
stos
stos
fst
call
and
dec
test
cli
fs
mov
shlb
test
sub
pop
mov
outsb
in
mov
mov
es
push
pop
loop
add
or
test
jmp
ljmp
fnstenv
mov
movsl
pushf
xor
push
pop
jg
push
xchg
jl
dec
jnp
adc
test
cmp
pop
ret
sub
jp
rcrl
mov
cmp
dec
mov
mov
in
jle
jo
ss
sti
or
adcb
push
add
inc
sub
daa
xor
in
orb
mov
mov
rcr
jne
mov
and
enter
jp
inc
nop
ret
jbe
inc
or
xchg
cltd
movsl
popa
shlb
lock
mov
sbb
jp
movsb
pop
dec
lret
adc
clc
lahf
dec
add
xor
fildll
inc
mov
repnz
lea
andb
jg
push
dec
idivl
push
bound
mov
sbb
sbb
fisttpl
repz
add
or
xchg
mov
testb
sbb
add
repnz
stos
mov
xchg
cmp
fadd
out
jecxz
pop
pushf
fimuls
test
push
or
rcl
or
in
pop
jo
jo
cmp
push
fstpt
rorb
repz
pop
std
sub
fistpl
or
jp
jno
fiadds
xor
push
jae
popf
rcrb
xlat
cs
call
inc
fdivrp
fistpl
mov
xor
and
push
inc
xchg
stos
std
jo
ret
test
mov
xchg
mov
sub
into
and
scas
adc
pop
ss
fisttps
testb
rcrb
jmp
pop
mov
aad
imul
in
mov
gs
rcll
adc
pop
xchg
xor
mov
push
int
add
inc
sti
pop
xor
jl
pushl
sbb
mov
pop
repnz
add
hlt
sbb
jne
fmuls
add
cmp
data16
ret
jo
pop
sbb
pop
repnz
mov
add
mov
cmpl
mov
dec
mov
stos
sbbl
insl
out
data16
hlt
imul
rol
hlt
cltd
mov
pop
and
adc
jbe
jle
mov
adc
loope
clc
xchg
xor
les
leave
dec
imul
xchg
int3
sbbl
xor
mov
repz
es
xchg
jns
jno
pop
adc
cmpsb
idiv
mov
imul
fsubl
rorl
pop
cmpsb
and
test
inc
mov
nop
mov
or
rol
push
mov
xchg
xchg
repz
push
sub
daa
mov
mov
jne
pop
cmp
add
pop
mov
ja
dec
int
loop
mov
jmp
mov
out
rcll
sub
push
jl
scas
sbb
sub
cs
xor
and
jo
lods
pop
xchg
aas
test
dec
js
dec
fstps
movsb
cmp
call
aas
idiv
push
out
idivl
ss
daa
mov
jbe
mov
je
jle
divl
iret
add
jp
loope
idivl
iret
and
fs
faddp
inc
aad
cltd
jmp
add
cmpsl
adc
adc
stos
add
mov
sbb
das
mov
out
incb
std
jecxz
jns
prefetcht1
cmp
xlat
add
push
inc
pop
bound
out
outsl
stc
mov
nop
mov
lret
movsl
lahf
inc
or
mov
insl
sbb
pop
out
jge
mov
adc
aad
and
fcomps
cmp
mov
sbb
aam
repz
inc
clc
clc
and
cmp
out
aas
adc
adcl
jnp
js
dec
js
aaa
push
add
lcall
fidivrs
popa
inc
jl
sub
shl
out
push
xor
sbb
add
arpl
inc
mov
enter
aad
jns
mov
inc
and
mov
mov
mov
sbb
push
push
and
push
js
shrb
movsl
mov
out
mov
sbb
sbb
sbb
aad
and
inc
and
xacquire
pop
push
push
xchg
cmp
xor
mov
sbb
jb
daa
or
loopne
cmpsb
clc
movsb
shlb
fs
fcmovu
lea
cmpsl
pop
daa
sbb
sub
dec
or
mov
xchg
push
dec
sbb
shll
add
scas
stos
out
mov
idivb
mov
test
mov
jmp
mov
dec
scas
cli
or
stos
sbb
cmp
add
scas
or
inc
cmp
jmp
out
cmovb
jge
cmp
fildl
inc
in
ucomiss
mov
jnp
push
mov
mov
add
and
out
mov
xchg
mov
aam
jge
and
sbb
pop
add
fsubp
jg
int
pushf
aam
inc
jp
adc
int3
or
and
sub
mov
call
push
movsl
sub
cmp
push
and
fimuls
scas
xchg
addr16
mov
cmp
and
pop
mov
lods
add
and
fmull
lea
ficoms
mov
lods
stos
mov
adc
inc
mov
dec
repnz
sbb
push
dec
data16
mov
fldenv
incl
and
jp
sub
push
in
xchg
jle
or
mov
xchg
cmp
out
out
lock
movsb
mov
xchg
cmp
dec
movsb
mov
cld
fdivrp
push
mov
adc
sbb
jb
popa
jns
bound
arpl
jns
fnstsw
clc
loop
adc
pop
add
in
sub
popa
lret
fwait
std
das
aaa
adc
push
pop
fdivrl
xchg
sub
cmpsl
pop
inc
mov
add
push
flds
lock
sahf
mov
dec
imul
testl
popf
out
jecxz
xor
stos
mov
or
sbb
pop
in
fidivrs
mov
fwait
fs
inc
iret
sbb
test
aaa
js
xadd
jb
js
test
jne
bound
lds
fnsave
enter
nop
sahf
sub
dec
mov
add
dec
ss
dec
mov
mov
mov
add
outsl
sub
jmp
push
popa
xchg
add
push
xchg
add
aas
pop
xor
rorl
mov
add
adcb
pop
sub
sbb
leave
shll
popa
gs
push
packssdw
shlb
cmp
ds
movsl
mov
push
int3
mov
mov
aas
fwait
xlat
lods
dec
js
in
jg
xor
mov
hlt
aam
sbb
jmp
sub
push
adc
sti
fdivrl
into
mov
and
in
stos
and
mov
outsb
repz
cmc
jbe
jnp
xchg
in
dec
shll
jns
push
mov
dec
jle
lret
pop
pop
xchg
outsl
adc
fimull
add
mov
mov
les
cltd
movsb
push
jno
mov
lahf
add
cs
fstps
clc
ljmp
movsl
mov
push
mov
mov
mov
cmpsl
and
adc
sub
lret
aaa
nop
pop
push
je
ret
in
mov
dec
js
mov
xor
mov
xor
or
mov
mov
lods
dec
sbb
in
sub
in
fsts
cwtl
sub
cltd
pop
fisubl
mov
mov
mov
jnp
ljmp
xor
mov
sti
push
mov
sti
scas
ljmp
inc
popf
and
roll
inc
fwait
cli
inc
in
push
jb
xchg
mov
dec
lods
inc
dec
sti
out
movsl
bnd
inc
test
adc
mov
in
mov
movsb
aaa
cmp
jg
xchg
in
push
inc
adc
push
stos
testl
mov
je
lret
jno
mov
add
daa
and
clc
sahf
lods
mov
test
fidivl
xchg
out
stos
adc
cmp
push
or
js
aam
xor
sbb
andl
dec
jge
adc
stc
xor
xchg
outsl
adc
pop
fsubl
xchg
sbb
jl
mov
cmpsb
mov
imul
popa
pop
out
pop
sti
sbb
mov
and
inc
shrb
mov
int3
in
pop
jl
in
mov
out
dec
jg
mov
test
shlb
push
cs
out
fsubr
push
jecxz
repz
mov
xor
inc
or
dec
in
jne
xchg
mov
jnp
loop
pop
cltd
mov
xchg
push
iret
lahf
imul
push
stos
imul
or
gs
clc
loop
add
lret
stc
xchg
pop
outsl
sub
test
es
mov
cmp
daa
call
pop
mov
dec
xorl
mov
and
mov
xchg
dec
inc
xchg
add
lret
test
push
adc
out
add
andb
sbb
loop
ja
xchg
pop
pushf
aam
and
mov
mov
push
push
pop
fldt
je
mov
jb
and
jge
mov
xchg
mov
push
mov
test
pop
mov
fists
inc
mov
les
xchg
pushf
mov
xchg
jnp
dec
pop
and
inc
scas
outsl
stc
test
inc
ds
lds
mov
sbbb
add
mov
pop
adc
aam
in
fyl2xp1
cmp
sub
imul
or
jmp
xchg
inc
aad
mov
and
adc
aas
push
pop
mov
and
push
mov
cli
rclw
mov
dec
jb
mov
scas
pop
adc
sbb
ffreep
adc
sub
loope
mov
push
inc
jno
outsb
loop
add
lcall
scas
fsubr
cmp
jl
int
add
imul
sbb
push
jl
push
mov
push
pop
dec
sti
mov
pop
sbb
movsb
xchg
insb
mov
add
pop
pop
push
div
out
aaa
push
test
sbb
cmp
mov
xor
inc
mov
xchg
lods
arpl
sbb
push
sub
sub
add
dec
shlb
cs
dec
mov
popa
cmp
test
push
add
stc
pop
mov
ret
inc
add
out
jecxz
sbb
sbb
and
add
xor
test
inc
dec
fs
dec
push
jmp
dec
pop
pop
call
jg
imul
mov
aam
push
jbe
hlt
jnp
xor
jnp
cmp
sti
ret
packssdw
inc
stc
mov
mov
test
inc
aaa
inc
adc
xor
xor
imul
jo
enter
pop
je
sbb
cmpsl
iret
jo
aaa
inc
adc
daa
pop
mov
lcall
rorb
inc
sub
xchg
inc
sub
xor
xchg
emms
pmulhw
and
jmp
insl
xchg
xchg
icebp
lds
mov
iret
and
scas
push
test
push
mov
pop
fwait
and
jg
mov
fnstsw
push
repz
sub
ucomiss
dec
inc
dec
sbbb
xchg
pop
xchg
fucomip
std
outsb
negb
and
push
sub
rcrb
mov
out
roll
sbb
jmp
add
mov
pop
rcrb
orb
pop
sbb
mov
jmp
fdivrl
jmp
xchg
and
popf
mov
ljmp
insl
gs
ret
mov
int3
loope
nop
lds
or
fisttpl
cmp
pop
imul
cmp
mov
dec
add
sbb
xchg
data16
sbb
xchg
lret
leave
push
loopne
push
clc
add
and
mov
sarb
daa
arpl
dec
es
push
aaa
jmp
movsb
dec
rorl
xlat
movsb
cmp
je
sbb
imul
push
push
sub
mov
ret
push
mov
das
push
push
or
xchg
cs
outsl
adc
out
mov
lock
rcrb
sar
lahf
inc
cmp
ljmp
pop
aas
sti
lock
in
fwait
lret
rcll
cmp
lret
scas
gs
pop
mov
xchg
cwtl
mov
out
sub
sbb
dec
jecxz
je
xor
je
negb
popl
je
test
call
shrb
mov
xor
mov
rcl
rclb
jb
and
pop
fildl
mov
shll
jmp
xor
pop
icebp
fmul
sbb
leave
cwtl
xlat
ljmp
sbb
sbb
pop
outsl
jmp
cmpsl
mov
fsub
in
mov
out
add
pop
mov
and
add
gs
adc
mov
push
dec
enter
sbb
jp
out
fs
fwait
cmp
dec
cmp
mov
sub
sbb
sbb
mov
aad
fidivs
inc
jnp
dec
cwtl
cltd
loopne
into
add
mov
addr16
repnz
jmp
cmp
imul
mov
sub
lret
mov
xchg
pop
or
xor
jecxz
rorl
push
lock
jbe
imul
lea
mov
xchg
mov
dec
mov
xor
and
push
dec
sub
or
sub
mov
aam
shll
xor
outsl
mov
fldl
pop
or
mov
sub
cltd
push
dec
lret
je
iret
lahf
pop
cmp
lods
pop
jns
adc
cli
rclb
fsts
push
pop
inc
in
cmp
lahf
scas
subl
enter
pusha
aam
lock
sahf
aaa
fimuls
dec
cld
add
jb
adc
leave
adc
clc
cs
subl
aad
out
xchg
mov
mov
imul
sti
cld
mov
mov
popa
stc
push
in
inc
push
test
sub
je
lock
lds
inc
cltd
adc
xchg
sarl
mov
test
mov
repnz
je
mov
aam
or
and
cmp
cmc
cmp
js
add
inc
mov
ror
into
mov
mov
push
or
push
or
or
or
icebp
pop
cmp
cmpsb
pop
add
decl
orl
pusha
int3
adc
pusha
adc
es
add
nop
bound
push
mov
and
int
jnp
jns
sbb
xchg
rolb
or
jnp
imul
jbe
loopne
lret
out
addr16
popa
pop
jns
sbb
mov
repz
addr16
xchg
pop
xor
in
mov
fdivs
sub
orl
push
cltd
nop
negb
adc
sub
or
push
mov
and
xor
or
ret
pop
loop
shll
shr
xor
mov
inc
cmp
xor
jle
cmc
sbb
in
es
cmp
xor
enter
adc
aaa
sbb
movsl
cmpsb
pop
daa
orl
jp
sub
dec
pop
push
xor
mov
ret
repnz
dec
lods
sbb
pop
sbb
lea
fldenv
xchg
add
mov
scas
daa
fidivrs
ret
rclb
cs
iret
fs
out
push
mov
or
add
dec
js
int3
or
push
aad
push
cld
dec
mov
jge
xchg
scas
jne
and
push
popf
hlt
xor
stos
jmp
loop
adc
add
sub
bnd
rorl
dec
iret
xchg
fcmovne
cli
mov
adc
clc
into
mov
cmc
sahf
shrb
jmp
ficoms
mov
add
sahf
jo
adc
or
outsl
adc
fidivrs
or
pop
inc
sub
inc
push
pop
and
adc
xchg
sub
in
divb
movsb
fwait
jg
lcall
push
jae
add
iret
or
mov
fildl
adc
or
or
scas
in
pop
aam
xor
testb
outsb
mov
loopne
xchg
icebp
pop
jp
cli
jb
ljmp
filds
inc
or
outsl
ja
pop
xchg
mov
xchg
fnstcw
add
jle
mov
lcall
adc
add
popf
xchg
sub
xchg
fs
test
mov
aam
sbb
cld
jae
cltd
outsb
mov
js
or
ret
nop
or
mov
xchg
movsl
push
or
add
add
aam
inc
sub
push
jbe
mov
jle
int
push
cltd
adcb
shrl
out
je
int
pop
jns
sbb
inc
cmp
and
cmp
nop
dec
push
push
je
scas
cmp
shll
jb
adc
movsl
and
inc
loope
test
std
idiv
outsl
mov
xor
es
mov
cmpsb
xchg
ret
and
adc
in
dec
push
jecxz
cmc
and
push
mov
inc
mov
scas
shll
das
push
mov
push
push
sub
ret
and
jp
jl
testb
pop
sbb
xor
jg
cmpb
or
add
inc
or
stos
push
push
xchg
pushf
pop
mov
insb
or
xor
imul
mov
ja
mov
jbe
jmp
and
pusha
push
and
and
or
xchg
les
mov
push
sub
call
jne
in
das
fisttpl
adc
test
adc
add
mov
loope
mov
push
int
push
loop
fsubrs
adcb
mov
mov
adc
bound
dec
je
test
stos
test
inc
pop
js
push
loop
mov
andl
dec
rclb
push
rclb
in
xchg
dec
pop
mov
mov
ds
sub
dec
leave
ljmp
add
cmp
iret
clc
cmpsb
rcll
jecxz
ja
ret
enter
fildll
sti
insl
ficompl
in
inc
je
mov
dec
stc
icebp
inc
adc
rcrl
add
int
movsl
in
cmpsb
shl
xlat
fwait
test
sbb
in
jle
push
rcll
ljmp
pop
cmp
inc
add
es
add
inc
mov
dec
aaa
adc
fisubs
loop
in
int3
ret
push
in
rclb
adc
repz
lds
adc
lods
mov
cmpsb
jp
je
mov
adc
sub
ljmp
int3
or
ret
and
xchg
je
rcll
out
mov
push
dec
stos
jae
das
add
cmp
or
mov
xchg
clc
pop
mov
mov
sbb
and
in
test
and
mov
push
int3
push
mov
mov
xchg
bound
mov
push
bound
cmp
pop
adc
inc
paddq
out
stos
adc
mov
ret
inc
xor
je
mov
loopne
out
jmp
shr
mov
fwait
lods
cmpsl
adc
mov
sbb
iret
or
das
sub
or
adc
shll
iret
ret
scas
sbb
shlb
inc
stos
call
and
cmp
inc
imul
cmp
iret
les
jmp
jp
std
cmp
js
inc
cmp
pop
sub
out
push
mov
imul
mov
js
adc
test
cmpsb
jge
in
not
inc
jnp
imul
les
xor
sbb
sub
mov
sub
divb
andps
imull
rolb
xorl
sbb
inc
jmp
out
daa
inc
scas
inc
scas
test
cmp
jne
and
push
loopne
adc
mov
adcb
js
xchg
outsl
inc
sbb
add
push
je
add
mov
insb
aam
dec
shl
loop
imul
imul
pop
mov
and
imul
xchg
test
movsl
inc
add
xchg
in
sbb
add
inc
and
mov
xchg
fs
xor
iret
ret
mov
enter
scas
adc
mov
push
fcomps
cwtl
sub
sbb
mov
inc
adc
fxsave
cmpsb
mov
mov
out
clc
outsl
cmp
mov
or
pop
js
or
insl
jl
pop
push
sub
pusha
jne
and
push
xor
imul
sbb
ror
ffreep
roll
mov
ljmp
xor
sub
nop
pop
test
shll
mov
adc
aam
xchg
inc
aaa
jge
mov
cmp
loopne
scas
sbb
dec
mov
sub
push
insl
or
pop
shl
lods
fnstcw
and
cltd
les
repnz
jmp
cmp
adcb
mov
leave
add
pop
cmpsl
lret
xchg
adc
dec
pop
pop
cwtl
jp
sub
pop
pop
sahf
lods
cmp
sub
out
xchg
xlat
shrb
outsl
aaa
and
insl
inc
mov
mov
ljmp
pop
rcrb
loope
pop
jne
iret
or
ljmp
push
in
add
inc
mov
pop
fwait
mov
add
subb
xor
pop
jae
rclb
stos
cmpsb
pusha
fmuls
bnd
adc
sbb
daa
inc
mov
dec
aaa
push
xor
movsb
mov
dec
sbbl
cli
inc
lret
jg
subb
sbb
sti
jl
push
ret
cwtl
cmp
sbbb
mov
push
and
mov
push
js
and
fcmove
adc
js
mov
ja
cmp
pop
stos
jle
pop
adc
jge
sbb
xchg
icebp
inc
or
push
and
jo
or
iret
outsb
lds
jl
loope
pop
sbb
jbe
call
repnz
in
loope
jns
test
sub
jae
xchg
outsl
pop
cmpb
iret
xchg
out
pop
ss
adc
dec
push
dec
mov
jecxz
sbb
sahf
fadds
cmp
lea
push
and
cmp
sub
cmp
jae
js
inc
jae
insl
dec
and
cmp
add
or
das
arpl
les
sub
cmp
pushf
hlt
insl
fldl
mov
inc
cmpsl
sub
xor
xor
shll
jg
mov
js
ret
aas
sbb
adc
loopne
cmp
mov
xchg
cmp
xorb
jecxz
bound
inc
test
bound
out
test
stos
lds
lcall
bound
sub
fisubrl
xor
sub
jno
outsb
js
loop
mov
jge
jge
shl
outsl
jne
iret
mov
mov
jmp
and
xchg
adc
fucom
jo
iret
inc
or
xor
mov
sbb
jnp
adc
or
leave
mov
popf
call
popa
daa
dec
mov
cmpsb
pop
fcom
imul
dec
and
pcmpgtd
push
sub
mov
cmpsl
data16
adc
pop
xchg
mov
lcall
dec
mov
hlt
mov
ja
nop
lds
dec
dec
pop
cmpl
cmc
add
repnz
cmp
cmc
mov
cmpsb
push
idivl
mov
fidivrl
fisubl
cltd
fs
mov
sahf
shll
or
dec
push
dec
cmp
inc
addr16
jle
insb
jae
in
in
xchg
adcl
in
ja
adc
scas
pushf
and
dec
fs
fcomip
mov
inc
sbb
dec
fwait
aam
xchg
dec
push
inc
mov
push
test
pop
cmp
adc
sub
and
inc
mov
es
addr16
mov
jno
int3
push
adc
lods
test
ja
fiadds
cld
mov
mov
sbb
ficompl
xchg
cld
xchg
mov
adc
aam
pop
cmp
lods
fidivs
mov
fildll
ljmp
aam
mov
push
add
xor
movsb
out
push
loope
leave
hlt
add
sbb
int
insl
aas
mov
xchg
pop
aam
je
in
stc
or
mov
sbb
repnz
or
out
pop
lahf
jno
out
test
fucomi
sbb
sbb
cld
jns
sbb
cmp
inc
push
and
ret
notl
push
pop
pop
cmp
mov
push
ss
mull
lds
dec
mov
mov
sbb
cmp
out
xchg
mov
iret
popf
cwtl
xchg
pop
mov
xchg
push
jp
mov
insl
inc
pusha
das
sub
outsl
xor
js
adc
lahf
pop
mov
fs
imul
es
sbb
in
dec
sub
leave
dec
cwtl
enter
xchg
test
clc
mov
lret
cmp
sbb
mov
stos
adc
and
loope
aam
add
cli
adc
pop
mov
adc
sub
in
mov
in
jns
dec
adc
or
stos
fadds
clc
xchg
iret
xchg
push
push
scas
mov
test
out
pop
xor
aam
sbb
cmp
or
and
scas
xor
cmp
into
into
pop
lea
and
add
les
pop
mov
dec
ljmp
pop
sbb
jmp
mov
cmp
inc
movsl
bound
dec
jb
sbb
jg
je
and
mov
xchg
and
js
outsl
test
shll
inc
fsts
mov
mov
ss
jmp
xor
popa
loope
mov
repz
ret
jge
push
ja
add
aas
push
sub
xchg
int3
mov
cmpsl
movsb
xchg
bound
pop
dec
inc
mov
cmp
gs
mov
scas
test
add
jl
or
test
out
je
sbb
aas
popa
js
inc
mov
xchg
test
jbe
xchg
xor
dec
test
es
ret
dec
push
jnp
pop
cmp
idiv
aas
pop
mov
andl
sub
jno
and
xor
sar
fcomps
aas
mov
cld
lods
imul
test
xchg
mov
faddl
push
js
sbbb
aaa
out
ret
mov
daa
dec
pop
ret
dec
fdivp
adc
insl
dec
mov
loop
das
push
mov
inc
lcall
sti
xchg
iret
mov
sub
out
fldenv
adc
mov
fdivr
jmp
mov
xchg
iret
cmp
cmp
icebp
mov
cli
lock
lds
add
mov
enter
cmc
dec
or
cmp
inc
aad
test
ds
jg
jb
out
out
xchg
adc
dec
inc
cmp
cli
xchg
jnp
in
push
jmp
in
mov
add
sub
fsubrp
pop
into
mov
or
call
imul
xchg
or
test
xor
mov
jb
shll
xchg
inc
arpl
pop
adc
sbb
pop
imul
enter
sub
jne
or
mov
lds
cmpsl
faddl
dec
out
fimull
test
jmp
cmp
je
test
shrd
in
or
push
pushf
not
and
daa
mov
shlb
mov
daa
push
and
adc
cmp
jl
inc
jne
sub
mov
jns
jge
rorl
push
or
xchg
rcll
mov
push
push
dec
fmull
dec
xor
fadd
lods
xchg
ds
mov
sbb
sub
xor
dec
aam
insl
inc
loop
testw
push
mov
pop
roll
push
pushf
inc
adc
lret
stos
push
xor
mov
cltd
push
iret
sub
cmp
sbb
and
out
cwtl
ss
mov
or
sbb
pusha
into
sub
pusha
add
dec
mov
leave
mov
lock
icebp
inc
psubd
xor
jge
push
in
es
mov
or
js
xor
fcmovnbe
aam
xchg
aas
ret
fdivs
dec
call
mov
out
pop
and
dec
xlat
mov
ds
cmp
adc
and
lods
call
push
or
pop
mov
lret
dec
out
gs
outsb
push
xchg
sar
pop
xchg
sbb
fiaddl
fsubs
push
xor
push
addr16
sub
cmp
adc
push
orb
repnz
adc
imul
add
xchg
xchg
adc
add
and
iret
and
pop
sahf
rep
add
adcl
lahf
mov
mov
andb
xor
test
sbb
and
sbb
test
inc
stos
aas
test
sub
outsb
jne
test
ficompl
xlat
cmpsb
xor
stos
out
pushl
jl
hlt
xorl
sbb
rorb
les
mov
fisttpl
mov
int
mov
mov
inc
mov
xor
scas
push
test
movsb
cmp
jo
jge
jmp
shrb
outsb
and
inc
sbb
adc
xchg
xor
mov
in
stc
dec
add
je
rolb
jp
cld
xchg
mov
xlat
or
cwtl
add
inc
repz
js
cmp
rcrl
repnz
dec
nopl
and
xor
sarl
mov
lock
jg
ret
inc
push
arpl
cmpsl
dec
loope
fldcw
pop
shl
xor
lret
sub
clc
sti
push
movsb
fwait
push
pop
ret
and
inc
call
rep
je
mov
lock
mov
and
inc
mov
dec
arpl
sbb
fisubrs
push
xor
fs
scas
mov
push
mov
push
sbb
lock
fisubrl
cltd
lret
mov
push
jb
call
lock
imul
into
ljmp
cmp
jb
push
popf
xor
data16
cltd
es
stos
xlat
pop
pop
aam
js
xchg
scas
pop
mov
pop
les
and
rcrb
das
add
push
dec
pop
mov
mov
cmp
sub
cmp
scas
std
jmp
test
cmpsb
aam
cmc
fwait
mov
insb
ss
cmp
mov
or
int3
inc
mov
negb
mov
fcmovnu
add
test
inc
mov
pushf
das
fbld
outsb
lret
int
aad
or
sahf
aas
and
aam
add
out
cmp
pop
in
das
push
xchg
test
jnp
andb
cmp
cmc
pop
xchg
shll
xor
fnsave
test
mov
lret
or
cld
ss
out
das
sbb
inc
loope
sub
aas
jg
adc
loop
enter
sbb
add
fprem1
icebp
nop
xchg
push
jns
xchg
arpl
jbe
addr16
push
or
daa
adc
push
loope
ds
mov
cmpsb
mull
mov
mov
xor
lret
xor
mov
cli
and
dec
je
cmc
inc
shll
push
jbe
mov
xchg
xchg
imul
les
jne
loope
movsb
imul
and
adc
inc
andb
imul
cmpsl
scas
les
enter
mov
filds
mov
fcoms
gs
push
jb
xor
cmp
jbe
pop
jb
mov
ja
dec
into
or
push
mov
or
mov
sbb
les
mov
jl
js
mov
bound
adc
mov
nop
call
xchg
xchg
daa
pop
popf
bound
or
popa
imull
sub
stc
imul
addr16
xlat
loop
sbb
call
sti
mov
or
xchg
lock
psubsb
pop
adc
std
hlt
in
lea
rcl
rcrl
pop
xor
add
js
lds
aaa
repz
in
je
stc
inc
push
int3
movsl
sbbl
pop
bound
jge
fildl
nop
dec
cs
inc
dec
pop
or
xchg
lahf
sub
and
loopne
imul
insb
adc
or
push
mov
stos
popa
xchg
das
ljmp
fadd
push
enter
pop
je
lret
push
adc
jne
pop
pusha
imulb
xchg
mov
andb
in
sbb
inc
lret
imul
xor
mov
shrb
lea
add
call
out
stos
pusha
jns
fadd
push
and
jl
insl
mov
inc
sbb
addb
int3
mov
imul
test
lcall
sub
xor
push
in
rorb
filds
mov
rclb
sbb
xchg
pop
movsl
mov
test
in
push
sbb
std
movsl
inc
sbb
loope
cltd
add
sub
aad
scas
popa
push
xor
inc
loopne
sub
stc
mov
mov
insb
nop
inc
lret
adc
jbe
scas
setb
in
cmp
mov
repnz
pushf
and
outsl
jo
in
and
xchg
shll
mov
and
jp
mov
cmc
push
shll
jbe
ret
mov
inc
adc
cmp
cs
push
ja
pusha
test
mov
out
sub
idivb
xor
or
or
pop
xchg
push
cmpsb
mov
std
jno
ret
lcall
sahf
cmpsb
cltd
jl
mov
jns
push
cltd
in
divl
jg
xchg
jne
lret
ja
ljmp
sub
ficomps
mov
mov
lock
dec
insl
inc
inc
cmp
mov
mov
push
lea
xor
dec
ret
pop
test
orb
pop
dec
or
dec
mov
jmp
test
and
in
cmpb
dec
js
mov
jo
inc
repz
out
mov
stos
into
fisubl
and
aas
orb
rorl
leave
mov
jecxz
syscall
mov
cmp
add
ret
dec
sub
cmp
ljmp
mov
cmp
sbb
jno
call
mov
les
cmpsl
aaa
mov
decl
mov
jg
loop
imulb
in
psubusb
pop
in
cmp
inc
hlt
mov
or
in
adc
lods
cmp
and
lods
push
jle
pop
cld
and
mov
fdivrs
nop
mov
xchg
push
int3
insb
or
out
jae
inc
lcall
cmp
fstpl
into
hlt
das
or
jge
xchg
icebp
pop
add
add
into
jo
mov
cli
add
jecxz
cmp
stos
loopne
or
xchg
cs
dec
pop
push
xchg
jo
mov
and
popa
mov
jbe
fadd
lock
mov
inc
out
cmpsl
daa
fcomp
mov
or
pop
jo
mov
subl
and
imul
inc
lret
stos
imul
bnd
sbb
mov
test
cmp
iret
movb
fcmovnb
pop
call
cs
mov
cmp
sahf
leave
mov
push
imul
push
sbb
add
xchg
and
mov
aas
cltd
out
mov
add
rcrl
scas
xchg
les
cmpsl
xor
push
lahf
popa
inc
insb
lea
inc
aad
stos
in
das
lret
movsb
arpl
mov
xchg
lahf
lock
sbb
call
cmc
pop
aas
lock
mov
jge
push
mov
add
cld
mov
sub
dec
fs
popf
movsl
das
cwtl
int
pop
cmp
mov
pop
pushf
outsl
sub
stos
pcmpgtd
out
mov
lret
push
xor
imul
mov
jp
fldt
sub
dec
sub
stc
addr16
fistps
mov
aaa
outsb
inc
sbb
mov
addr16
int3
rorb
dec
xchg
mov
imul
sub
lods
ret
orl
filds
mov
outsb
arpl
and
loop
inc
testb
ret
jbe
jae
xor
dec
sub
sbb
dec
outsl
cltd
ja
dec
sub
mov
dec
fcmovne
push
mov
pop
sbb
imul
andl
mov
xchg
cmpsl
scas
std
mov
mov
sub
loopne
sbb
or
repnz
dec
out
ret
cmpsl
cmp
mov
outsl
push
ret
mov
ja
scas
xor
mov
mov
cmp
aaa
dec
lock
pop
lock
jecxz
jmp
ror
cwtl
pop
lds
ror
lods
mov
dec
aas
cmp
push
add
inc
mov
andb
mov
mov
jle
jmp
lock
movsb
es
adc
ss
adc
repz
and
clc
ss
cmp
divb
adc
or
or
inc
sbb
push
aaa
sbb
out
mov
pop
sbb
inc
and
aad
mov
push
mov
popa
xchg
lea
test
in
push
jge
out
je
stos
popf
pop
ficompl
mov
clc
fstl
xor
mov
fmull
push
inc
shrb
xchg
mov
adc
xchg
xchg
lcallw
insl
fsub
adc
xchg
loopne
mov
sub
das
clc
fmuls
sbb
es
rol
int3
lock
rorb
jbe
test
mov
das
popf
and
cli
repz
ftst
test
jg
hlt
repnz
cmpsb
fidivs
push
sub
adc
inc
hlt
fistps
sahf
pop
jae
popa
mov
inc
and
lock
and
test
pop
lea
iretw
and
icebp
js
out
cmp
lret
lea
cmc
cwtl
jmp
decl
mov
mov
jno
mov
lea
inc
jle
or
data16
mov
popf
sbb
sub
in
xor
out
sbbb
pop
fcomi
dec
or
mov
xchg
cltd
cmovo
sbb
and
mov
das
fstl
stos
push
mov
mov
sbb
lods
shll
inc
or
inc
xchg
mov
mov
cmpps
dec
jns
xchg
xlat
jae
stos
out
cld
sub
push
stos
xor
jmp
jmp
lcall
jno
ret
sbb
xchg
push
jns,pn
jle
cmpsl
mov
sbb
adc
adc
fcompl
lods
xchg
mov
dec
dec
push
ficomps
test
jmp
jle
in
insb
mov
js
xor
divb
or
test
inc
or
cwtl
jge
rcrb
push
inc
ljmp
cmc
sarl
sti
rorb
mov
mov
or
dec
andb
js
and
cmc
xchg
rcrb
pop
pop
cmp
stos
arpl
mov
adc
inc
mov
in
jno
push
push
rcr
test
lods
inc
aaa
xchg
or
les
in
imul
ljmp
imul
xchg
jecxz
mov
fbstp
inc
mov
mov
fistps
lods
dec
pop
das
jo
stos
xchg
movsb
adc
andb
xchg
icebp
adc
test
iret
pop
fs
int
jl
fs
lret
xchg
mov
xor
push
js
cmp
in
cs
sub
adc
push
out
loop
push
pop
lds
pushf
jmp
inc
dec
jp
sbb
mov
inc
jl
add
adcl
or
lret
xchg
pop
add
adc
inc
jo
jbe
aad
xchg
xor
mov
icebp
insb
div
dec
jo
js
je
loopne
and
and
push
flds
mov
pushf
das
sub
xchg
pop
leave
fisttps
xchg
add
jmp
jge
sub
cmpsl
cs
dec
dec
mov
mov
scas
sarb
in
insl
xor
dec
jp
jmp
cmp
push
mov
les
dec
fcoms
subb
add
sbb
or
pushf
and
shlb
pop
xchg
int
das
in
xor
bound
je
fcoml
gs
mov
sub
in
inc
push
fsub
jno
push
and
cmpsl
in
int
data16
pop
inc
mov
and
push
daa
mov
pop
sub
mov
lock
fisubl
mov
frstor
aaa
hlt
sbb
pop
jp
jns
inc
and
sub
pop
mov
lret
xchg
pop
and
movsb
push
stos
movsl
nop
dec
sar
sahf
gs
cmovp
xor
rep
push
leave
aas
push
out
sti
adc
dec
mov
icebp
cmp
adcb
mov
lods
daa
jne
rolb
cmp
dec
mov
sub
sub
cmp
movsb
fisttpl
sub
adc
js
into
jmp
push
mov
xchg
subb
pop
dec
nop
decb
or
dec
cmp
pusha
das
pop
call
ror
mov
and
cmp
mov
jecxz
or
sub
imul
pop
roll
sub
and
add
mov
and
push
pop
lahf
xor
push
clc
sbb
aad
js
hlt
and
mov
mov
cld
inc
cmp
push
imul
sahf
arpl
insl
ret
icebp
loopne
dec
cli
push
adc
shl
xor
sti
imul
imul
fcmovbe
push
enter
mov
dec
fildl
cwtl
push
cli
pop
insb
xor
insb
insl
dec
xchg
lea
jp
mov
iret
and
aam
xchg
aas
sarl
js
dec
hlt
dec
scas
out
mov
dec
cmp
icebp
data16
cli
sbb
ja
mov
and
fs
inc
sbb
lcall
out
xchg
jbe
scas
jge
lret
ja
aaa
loop
push
call
dec
sbb
arpl
loope
xchg
pop
popa
pop
mov
popf
mov
xchg
mov
cmp
or
fidivrl
test
jno
sar
imul
rclb
xor
das
jb
les
sbb
sub
test
add
fildl
das
lahf
jnp
add
hlt
fs
mov
pop
fwait
or
jge
adc
ja
fcom
push
mov
imull
testb
arpl
mov
push
add
jecxz
inc
mov
mov
into
cmpsl
mov
inc
sub
mov
cmpsl
mov
and
es
add
std
gs
push
pushf
jns
ret
in
outsl
mov
sbb
push
in
add
push
or
xchg
jns
xlat
push
repnz
jle
jb
popa
mov
lods
pop
pop
xor
xchg
lds
mov
pop
pop
xchg
int
inc
cwtl
cld
das
fnsave
sub
dec
inc
mov
mov
test
or
clc
xchg
mov
mov
inc
inc
and
test
jnp
mov
fidivl
cltd
xor
push
mov
mov
ret
push
cmp
push
pusha
or
push
mov
es
inc
lock
movsb
icebp
adc
push
rcrl
outsl
jbe
fwait
push
mov
ja
das
ljmp
subl
cltd
or
pop
ds
xchg
xchg
lret
cmp
mov
outsb
jmp
jnp
dec
cmp
and
bound
and
add
cltd
sti
cmpsl
aas
mov
sub
xchg
push
jmp
cmp
xor
inc
into
pushf
mov
xchg
jmp
jb
cmpsl
insl
fs
adc
test
int3
add
lcall
add
push
mov
dec
cmp
ss
or
aaa
sbb
jns
call
scas
lret
xor
cmpsl
xchg
mov
ss
mov
pop
jb
mov
test
test
clc
clc
cld
pop
movb
lods
gs
jbe
lods
push
lahf
xchg
adc
pop
imul
xlat
pop
push
test
xor
cmp
sar
sahf
and
hlt
cmp
mov
push
sub
adc
scas
xchg
fldl
inc
cltd
iret
push
in
dec
pop
mov
jge
xchg
xor
or
mov
cmc
lret
aad
nopl
fldl
insb
in
xlat
push
stos
mov
cltd
lahf
mov
es
dec
int3
push
mov
xor
aaa
scas
sbbl
inc
lret
jmp
push
pop
xor
mov
pop
push
jne
xchg
and
jecxz
outsl
mov
adc
mov
push
dec
sub
jge
dec
out
pop
outsb
dec
lret
popf
fnstenv
and
push
dec
std
lds
inc
aaa
imul
imul
ret
scas
pop
shld
mov
adc
rcr
lret
add
mov
int
cld
jno
std
push
fidivrs
lret
xor
cmp
jno
dec
push
fdivrl
push
pusha
push
daa
jnp
pop
cmpsl
movsb
int
pop
push
add
cld
dec
add
adc
loopne
adc
jmp
xchg
adcl
aad
xchg
call
int
push
mov
out
pop
call
test
or
mov
mov
mov
faddl
lret
push
movsl
idivb
into
jl
popa
xchg
mov
and
fwait
popa
repz
fisubs
xchg
out
inc
cmc
mov
out
push
adc
xchg
loopne
inc
iret
mov
cs
adc
xchg
pop
or
jmp
jo
jg
cld
mov
loop
add
outsb
xchg
lahf
fistl
push
les
negl
sbb
aas
leave
jo
sahf
mulb
pop
xor
sub
pop
int
jnp
mov
pop
mov
add
inc
insl
add
test
shlb
fwait
nop
mov
push
jg
dec
sti
mov
xchg
sahf
scas
cmpsl
jne
scas
mov
mov
push
jmp
into
mov
add
int
or
cmp
fs
bound
inc
and
pop
nop
cmp
or
daa
pop
es
test
test
out
pop
jmp
sbb
sbb
pop
shrl
lods
jnp
cmp
loop
fldenv
add
dec
movsl
lock
push
stos
aad
mov
es
int
xor
daa
mov
loope
jmp
pop
dec
dec
mov
fcompl
push
dec
pop
movsb
nop
nop
outsl
cmpsb
loopne
ret
or
push
lds
mov
into
push
sub
mov
or
jecxz
pop
rolb
cmpsb
cmp
mov
lods
popf
jmp
push
popf
je
in
bound
jnp
mov
jbe
mov
add
adc
mov
xchg
aam
xchg
and
dec
aad
stos
inc
dec
xor
cmp
pop
scas
mov
inc
or
in
mov
or
mov
jl
ss
stos
idivb
imul
xchg
mov
jbe
mov
cmc
push
pop
pop
or
hlt
adc
cmp
mull
add
lahf
mov
jnp
jo
sbb
fwait
data16
in
jno
add
jecxz
xchg
pop
bound
or
mov
or
inc
scas
push
sbb
scas
xchg
fildll
stos
fisubs
pop
and
ror
dec
push
arpl
mov
pop
jnp
mov
or
push
pushf
adc
pop
je
xor
sub
adc
sub
xchg
cltd
sbb
xor
lea
cmp
and
addr16
jns
testl
pop
dec
shll
mov
es
or
push
push
xor
add
hlt
pop
rcr
enter
xor
mov
out
pop
push
jmp
sub
jno
xchg
fldt
xor
fs
fs
mov
cmp
mov
jle
sarb
adc
mov
leave
stc
mov
not
pop
imul
add
aad
movsl
rcll
push
js
mov
lods
mov
inc
add
into
mov
loope
aas
or
jg
cmc
xchg
cmpsb
lock
ret
int
iret
mov
sub
inc
lods
stc
jge
test
lret
inc
ljmp
in
repz
mov
notb
jo
lret
jmp
imul
icebp
jno
pushf
adc
or
fsts
ja
mov
mov
mov
add
mov
insl
push
push
wbinvd
and
test
scas
xchg
imul
aaa
test
sub
clc
shrb
mov
pop
fstpl
lahf
outsb
adc
mov
mov
insl
in
dec
xor
mov
icebp
cmp
aad
aam
dec
cmp
adc
bound
testb
push
pop
fsubl
addr16
jl
mov
rcrb
inc
addr16
out
jnp
sub
jle
push
or
pop
mul
stc
aam
pop
fistl
ret
ficomps
in
pop
les
mov
jg
sub
shrl
mov
jle
mov
inc
or
mov
cmp
insl
jae
add
hlt
test
cmp
in
cmpsb
push
dec
ja
fwait
stc
fildll
dec
pop
flds
dec
out
push
mov
testl
add
outsb
je
xlat
es
stos
fwait
xor
mov
mov
mov
mov
rcrl
stos
cmc
lock
push
leave
sbb
outsl
out
mov
jnp
jb
cmp
dec
fistpll
adcl
cmp
or
insb
arpl
inc
iret
or
aad
and
gs
cmp
scas
jg
xchg
loopne
lods
mulb
xorl
mov
and
xor
pop
mov
ret
inc
adc
jp
in
shl
sbb
cmpl
out
mov
pushf
gs
notb
rorl
mov
jecxz
jge
dec
icebp
cmpsb
add
mov
adc
cmc
movsl
jecxz,pt
outsl
loope
inc
cltd
lea
xorb
jne
loopne
sbb
push
loop
movsl
adc
psubsw
test
inc
xor
aas
and
loope
dec
cltd
mov
cmp
movsl
rcrl
inc
mov
xor
mov
nop
adc
aas
lcall
ja
andb
loopne
out
inc
inc
pop
pop
pop
mov
lcall
mov
cmp
test
and
stos
popf
push
xchg
push
adc
push
jae
jp
fs
sbb
xchg
cwtl
subb
popf
lret
outsb
push
push
add
add
mov
xchg
mov
jae
mov
jp
or
push
repz
das
push
sub
mov
xchg
popf
xchg
pop
or
imul
test
jns
fbld
mov
in
jo
leave
lock
aam
insb
lret
xchg
adc
inc
and
mov
int3
push
xchg
dec
xchg
clc
add
sub
adcl
ret
movsb
aad
pop
xor
les
bound
adc
sar
mov
scas
out
out
es
push
push
or
insl
rclb
rclb
and
test
sub
dec
rcrl
mov
sbb
sub
inc
xchg
fmul
sbb
and
shlb
in
and
fcmovbe
inc
jmp
cmc
inc
fcoml
cmpsb
imull
aas
add
sarl
sub
pop
cs
mov
je
stos
lret
xchg
or
xchg
push
sub
pushf
rol
cmc
xchg
mov
dec
and
outsl
xchg
ja
mov
push
mov
test
pushf
std
std
and
inc
ja
jns
xchg
xchg
clc
cmp
mov
adc
ret
popf
test
push
ror
hlt
aam
shll
push
mov
shll
fcomip
mov
cmp
inc
insl
mov
fucomp
in
outsl
in
xorb
inc
cli
dec
ret
sub
mov
es
out
jne
mov
movsl
xchg
dec
test
xor
jge
test
push
push
iret
outsl
and
aad
call
lret
out
adc
jno
push
mov
dec
cmp
aam
push
add
loop
lahf
push
mov
lods
iret
add
ljmp
lods
jbe
xchg
mov
jecxz
test
test
dec
je
adcl
xchg
jl
xor
repz
cmpsl
loopne
js
mov
out
lods
mov
sbb
mov
ljmp
push
out
ja
sub
cmp
negb
dec
test
lcall
cltd
test
dec
sarb
adc
and
mov
ret
and
add
movsb
jo
ja
push
insl
mov
shrl
or
mov
sbb
ret
sbb
stc
ljmp
and
sub
out
arpl
movsl
cmp
jmp
sub
jl
sub
and
fnsave
nop
mov
mov
push
or
adcb
aas
aad
lret
repnz
sbb
lea
mov
stc
add
dec
lods
scas
out
mov
sub
scas
push
sub
jmp
je
loopne
xchg
and
xchg
cmp
cltd
xchg
daa
cwtl
je
fsubl
xchg
iret
stc
out
mov
roll
inc
sahf
nop
mov
mov
pop
mov
stos
mov
push
inc
dec
inc
shll
xor
push
jae
mov
sub
or
stc
fcmovnbe
dec
push
out
cmp
inc
mov
test
mov
mov
lea
jo
cmp
popa
ds
jo
shr
loope
pop
or
jecxz
sbb
push
out
test
jg
ljmp
mov
sub
aam
mov
loop
fnstsw
xor
insl
xlat
mov
jg
aas
push
inc
call
fcomp
mov
pop
hlt
pusha
das
out
arpl
pop
cmpsb
out
xchg
cmc
rcl
pop
cmpb
mov
cld
or
push
cmpsb
mov
lsl
repnz
adc
sub
cmp
push
frstor
push
test
xor
dec
jno
aas
mov
push
stc
cmp
or
pop
outsb
mov
inc
jnp
outsb
mov
jmp
stos
jmp
push
repnz
mov
int3
adc
inc
cmp
xchg
xor
adc
ds
adc
sub
frstor
enter
cmp
mov
or
xor
sub
jne
mov
aam
shlb
shl
sub
mov
in
lret
and
xor
insb
inc
push
jp
std
mov
adc
push
mov
and
dec
mov
inc
mov
imul
bound
es
orl
stos
cmp
mov
dec
movb
push
push
shl
ficoms
mov
rolb
lcall
popa
inc
outsl
insb
sub
mov
mull
ja
cmp
sub
inc
sub
lock
push
mov
fnstenv
mov
pop
mov
lods
xor
popl
ret
pop
icebp
mov
pop
sbb
jbe
jle
sub
or
sub
lea
inc
cmp
push
mov
test
adc
imul
jg
sub
imul
and
xchg
icebp
xor
push
sub
aad
mov
mov
mov
fcoms
mov
jo
mov
push
inc
inc
repnz
aam
push
add
adc
mov
stos
fsts
enter
dec
mov
jnp
adc
lds
and
int
mov
jo
lret
cli
in
mov
mov
inc
fcmovu
dec
mov
mov
sub
into
out
js
in
and
bound
or
sub
test
jbe
or
push
fiaddl
sub
jae
jo
fcmovnb
dec
stos
std
xchg
iret
mov
and
hlt
push
or
scas
leave
test
dec
xchg
ss
add
sub
inc
mov
sarb
adc
pop
lcall
sbb
mov
add
cmp
pushf
test
test
mov
sbb
xor
ds
cmc
or
sarl
movsb
inc
and
es
adc
lcall
das
pop
pop
jecxz
out
mov
sbb
mov
lds
sbb
push
cmpl
mov
inc
into
cltd
jg
pop
fsubs
popa
stc
inc
xchg
arpl
mov
push
xor
fs
mov
sbb
lcall
movsl
in
mov
and
push
sahf
mov
or
cmp
cld
jne
lcall
outsl
stos
pop
push
push
int
mov
pushf
sbb
fstpt
dec
pop
mov
or
xor
movsl
dec
jb
andl
enter
push
pop
mov
xchg
mov
sti
add
nop
xchg
mov
repnz
scas
push
sub
lret
sahf
inc
pop
inc
fwait
leave
cld
adc
pop
repz
fwait
ds
sub
mov
jae
inc
and
and
mov
xchg
dec
lret
jne
movsb
jae
cmpsl
mov
int3
icebp
das
jge
sbb
mov
loop
xor
adcl
repnz
cmp
pop
and
xchg
add
cmp
pushf
fsubrl
pop
sti
xor
adc
sub
mov
jne
out
cld
lahf
mov
sub
mov
mov
push
mov
sarb
cmpsb
adc
imul
or
loopne
sbb
les
test
lret
mov
rcrb
dec
in
pop
mov
mov
stc
decl
sub
int
int
adc
lock
inc
lea
push
mov
fcomi
mov
lods
sub
repz
in
sarb
fwait
and
and
mov
test
mov
xor
in
loop
and
mov
aam
push
adc
outsb
dec
or
sbb
rcrl
mov
hlt
cmpsl
push
adc
loopne
add
fwait
adc
rolb
mov
pusha
xor
pop
ret
stos
sbb
lret
cmp
push
pop
xchg
leave
xchg
pop
pop
loop
outsb
loope
cwtl
cwtl
sub
stos
fsub
ret
sbb
mov
pop
addr16
pushf
mov
cli
test
loopne
icebp
jae
mov
notb
ffreep
adc
rcrl
mov
lea
test
sti
jo
mov
pop
push
push
stos
cs
mov
scas
cmpsl
cmpsb
clc
mov
cwtl
and
fistpl
sbb
cmpsb
dec
in
adc
sub
lock
cmp
imul
mul
dec
xor
aad
mov
in
jno
mov
ss
fcomps
lea
xchg
repz
scas
mov
testl
inc
inc
pop
add
xchg
mov
xchg
ret
add
jb
xchg
xor
out
into
cwtl
jg
pop
cmp
lcall
cmpsb
jg
insl
fcoms
push
or
inc
mov
shrb
loop
xchg
push
xchg
loope
mov
loope
sub
mov
bnd
fidivrl
and
pop
cmp
or
add
cmc
inc
jmp
mov
xor
fdivrs
push
iret
pop
int3
clc
mov
or
push
ljmp
fptan
call
das
add
in
loop
mov
fwait
push
dec
in
loopne
cs
fimuls
sub
out
iret
sahf
mov
insb
jne
push
dec
jecxz
sar
rcr
out
mov
lea
jecxz
enter
sbb
inc
sub
push
jo
fucom
cltd
sbb
add
push
xchg
add
repnz
and
sub
xor
ret
cmp
add
insl
rcrb
xor
shll
test
ret
jbe
cmp
xchg
xchg
adc
inc
fcompl
add
cmpsb
mov
mull
js
xchg
andl
cld
out
xchg
push
xor
jnp
or
mov
mov
cld
ljmp
aam
mov
mov
cld
scas
dec
and
sbb
sub
or
sub
push
jns
sub
mov
sbbl
in
xor
pop
jo
enter
bound
jo
dec
cmc
adc
mov
out
in
loop
in
sub
and
js
or
and
iret
clc
test
sub
loopne
inc
mov
insb
insb
adc
ja
adc
pop
je
loopne
ss
sarl
jmp
sti
xchg
or
and
inc
les
add
lods
push
sbb
mov
loop
sbb
outsl
sahf
adc
jge
mov
add
push
dec
enter
mov
jmp
push
repnz
adc
push
xor
lret
xor
push
cmpsb
adc
dec
mov
hlt
clc
jmp
add
lret
cli
xor
loope
inc
enter
mov
and
in
cltd
mov
xchg
pop
inc
or
mov
jle
in
fldenv
lret
repz
mov
mov
fcmovu
enter
cli
test
push
and
dec
loope
popa
cld
pop
push
sbb
jnp
std
jmp
jnp
xchg
cwtl
mov
lds
les
pop
orl
nop
dec
enter
leave
or
aam
scas
ret
adc
pop
jns
jl
leave
xchg
and
xchg
pop
cld
mov
int
xchg
xchg
mov
addr16
int
fstpl
xchg
and
pop
test
pop
xchg
sub
enter
push
mov
test
xor
mov
mov
mov
jne
sbb
mov
xchg
loope
call
push
mov
xor
js
lret
xor
xchg
xchg
fwait
rcrb
es
adc
pusha
popf
or
cli
cmp
movsb
es
mull
scas
push
scas
jmp
jno
sbb
aaa
mov
icebp
pop
shlb
arpl
dec
xchg
inc
clc
flds
mov
out
out
hlt
jmp
mov
sbb
adc
jmp
ljmp
or
mov
or
push
inc
js
pop
ret
in
push
sbbb
roll
lea
mov
arpl
inc
inc
or
sub
in
hlt
xchg
fwait
rcll
inc
lea
bound
xchg
mov
pop
repnz
mov
int3
sbb
or
mov
sub
je
pop
jmp
cmp
adcl
mov
out
adcb
fiaddl
fstps
pushf
mov
pop
adc
into
loop
into
jecxz
pushf
lds
nop
cmp
push
sbb
push
dec
mov
pop
jns
aas
push
shl
shlb
lods
ja
enter
stos
gs
add
movsl
xchg
nop
popf
xchg
adc
lods
mov
mov
cs
lock
mov
dec
jb
cwtl
fs
mov
mov
xchg
add
or
push
jns
popa
cwtl
addr16
popa
popa
in
lds
push
adc
jno
dec
mov
jne
xor
scas
inc
jo
cmp
jne
arpl
mov
xchg
mov
mov
inc
pop
push
sub
dec
movsb
jecxz
ja
shrl
aaa
int3
dec
lret
outsl
xor
push
and
je
ss
aas
mov
inc
into
jg
inc
push
pop
cmp
sahf
mov
sub
sub
mov
xor
and
jg
dec
das
andb
popa
dec
mov
or
sbb
xchg
cmc
dec
ss
jecxz
xlat
jle
out
sar
add
and
mov
clc
or
mov
cmpsl
inc
out
sti
lret
out
in
imul
lcall
xlat
pop
loopne
adc
adc
fwait
test
push
jmp
or
rolb
adcl
lods
in
or
in
leave
mov
sub
pop
xchg
fwait
sarb
fldpi
rcll
dec
push
inc
jp
push
mov
lret
fs
push
xchg
pop
sub
dec
mov
cmp
cmpb
mov
pop
dec
mov
add
cmp
or
mov
push
mov
pop
sub
xchg
add
inc
bound
ret
adc
jl
sbb
add
aam
cmp
sbb
in
fwait
xor
ret
out
sti
insb
pop
sbb
xchg
mov
xlat
into
test
out
push
in
call
bswap
jb
aaa
mov
add
out
filds
imul
imul
mov
inc
jecxz
dec
push
adc
xchg
sahf
out
jno
add
adc
fdivs
sbb
aas
repnz
fnstenv
push
mov
sub
or
push
in
add
sub
scas
scas
jp
shll
inc
xchg
outsl
lcall
adc
xor
sub
mov
push
or
out
mov
and
cmp
test
mov
mov
push
mov
cmp
pop
popf
cld
xchg
xchg
xor
scas
jbe
cs
lods
je
sbbl
sub
cmp
xchg
mov
shr
into
mov
testl
cmp
xchg
loopne
or
pusha
xor
dec
pop
sbb
fisubl
cmp
add
xor
sub
xorb
inc
cmp
into
mov
adc
mov
callw
xor
xlat
push
fstpt
lods
xchg
lea
repnz
xor
xchg
xor
scas
sbb
cmp
and
daa
test
pop
pop
pop
nop
movsb
sub
mov
repz
iret
push
mov
sti
pop
aas
push
lret
xor
sbb
dec
push
pop
mov
sbb
jo
and
and
pushf
shll
push
clc
add
pop
and
jl
imulb
pop
cmp
cmp
xor
repz
xchg
test
addr16
stos
test
jp
outsl
popf
mov
xchg
ja
jg,pn
cmp
dec
dec
xchg
xchg
das
int
cmpsb
mov
in
sbbl
mov
lret
out
xchg
push
jnp
dec
cmpl
dec
jbe
jp
stc
cmpsb
scas
mov
mov
repnz
xor
inc
fcmovbe
xor
mov
outsb
daa
inc
cmp
addr16
or
pop
sahf
inc
sub
cwtl
xchg
fidivrs
and
gs
dec
shll
lods
ljmp
idivb
push
cmp
mov
shrl
adc
stos
or
push
fwait
push
mov
cld
push
leave
inc
stc
fcompl
rclb
mov
push
fisttpll
mov
cli
fisubrl
pop
push
pop
xchg
and
mov
jno
mov
addr16
sub
repz
xchg
subb
insb
insb
fs
scas
out
cmp
cmp
je
push
or
or
jno
jp
in
loop
test
sbb
pop
pop
xlat
pop
sbb
mov
xchg
stos
out
adc
or
cs
sbb
jg
or
mov
sbb
mov
cmpsl
lret
out
xor
mul
es
push
sub
ret
mov
pushf
xchg
mov
push
dec
jg
xlat
xor
data16
mov
inc
fnstcw
lock
push
aaa
pop
clc
mov
and
adc
mov
cmpsl
sti
cld
repnz
popa
or
aam
popf
in
repz
stos
mov
fcmovb
repnz
adc
sub
jnp
xchg
push
dec
cmpsb
cmp
mov
shll
lds
xchg
xor
clc
rcrb
out
jb
stos
pop
outsb
and
mov
subb
test
aas
push
push
sub
ljmp
and
test
mov
aam
inc
sub
jge
jne
dec
in
scas
pop
repz
add
xchg
xchg
cmp
jl
mov
and
js
adc
add
cmp
aam
jmp
pop
mov
leave
and
mov
cltd
xor
std
cltd
cmp
aaa
cmp
jbe
lcall
imul
clc
and
mov
add
rolb
into
mov
mov
jp
cmpsl
and
push
sub
sub
xchg
test
push
xor
outsb
xor
sub
push
push
jno
pushf
mov
stc
stos
rcrl
ror
xchg
sahf
lods
fwait
repnz
aas
pusha
dec
cmpsl
mov
or
pop
test
dec
dec
pop
out
push
push
inc
adc
outsl
xchg
add
jo
or
cmp
xlat
call
sbb
test
stos
cmp
xor
jno
push
push
pushf
out
popf
fucomi
cltd
movl
or
push
shlb
jg
fwait
xchg
ljmp
pop
sub
jl
pusha
repz
sbb
jbe
insl
mov
or
shlb
or
push
inc
adc
mov
test
in
fsubrs
push
insb
pop
lret
pop
fs
mov
in
dec
cli
or
adc
jmp
sbb
mov
pop
xchg
aas
mov
adc
pop
in
das
call
outsb
sahf
stos
push
pop
and
aaa
pushf
add
cmp
js
cmpl
push
negl
out
repz
mov
das
sbb
pushf
xchg
stc
inc
mov
jge
leave
stc
inc
loop
pop
cltd
pop
and
mov
shll
sbb
jo
leave
xor
outsb
mov
rclb
push
mov
sbb
xor
and
loopne
sbb
loop
cmp
jecxz
clc
daa
mov
mov
cli
outsl
ret
pop
push
inc
div
mov
mov
lcall
mov
orl
mov
cmp
xchg
jne
mov
inc
ret
out
lods
push
pop
mov
pop
into
and
or
call
insb
or
sbb
inc
test
bound
stos
push
movsb
xchg
adc
mov
jle
mov
jae
mov
push
leave
lret
add
mov
pop
movsl
scas
loopne
out
adc
mov
jp
test
jns
pop
hlt
push
orl
lock
mov
in
mov
sbb
xchg
stc
faddp
popa
dec
sub
cmp
pushf
add
jo
adc
enter
and
jmp
dec
xor
loopne
cmp
movsb
lcall
popf
fs
push
pop
xchg
fs
je
push
push
mov
mov
outsl
loop
sahf
into
in
push
push
out
ljmp
jp
lock
jg
repnz
dec
xor
dec
dec
pop
pop
add
xchg
mov
shll
ret
sub
cmp
mov
imul
mov
and
mov
sbb
pop
dec
shrb
xchg
inc
loopne
les
mov
loope
subl
daa
into
jp
shll
cmpl
pop
or
sub
dec
test
clc
in
dec
ds
pop
stos
out
inc
sti
sub
xchg
sar
hlt
pminub
xchg
fistps
leave
pop
imul
aaa
jno
out
or
add
or
shll
dec
and
dec
mov
out
adc
jle
bnd
push
outsb
mov
pop
ficomps
pop
pop
test
xchg
int
mov
aaa
mov
mov
push
adc
or
xor
inc
lcall
nop
push
dec
xchg
addr16
fnsave
sub
pop
or
roll
or
cmp
adc
daa
mov
and
scas
push
pushf
pop
push
scas
pop
inc
mov
sbb
sarl
outsl
push
repnz
sub
div
test
movsl
mov
pop
aas
adc
adcl
cmpsl
inc
sub
dec
add
cmpsl
add
push
cmp
lret
push
jnp
mov
loope
push
lods
sahf
mov
stos
mov
jl
mov
sub
add
in
mov
mov
stc
xchg
cmpsl
lock
xchg
jmp
cltd
mov
hlt
loopne
cmp
xchg
int3
mov
sbb
xchg
jecxz
int
push
mov
push
add
cmp
pop
das
sbb
ljmp
popl
add
fsubr
push
xchg
aaa
dec
dec
test
test
ljmp
fisubl
cmp
dec
frstor
sub
push
xchg
xchg
sub
adc
lea
mov
imul
mov
fsubr
in
push
jae
sti
cwtl
adc
sub
mov
jo
add
dec
jp
xor
daa
hlt
mov
pop
xchg
sub
rclb
scas
push
das
fwait
cmp
pop
xchg
mov
pusha
rcl
ret
xchg
jbe
in
scas
dec
and
int
add
fidivl
pop
push
pop
mov
popf
stc
imul
setns
hlt
jl
faddl
sbb
mov
in
aaa
loope
sbb
xor
pop
pushl
sub
movsb
xor
cwtl
jb
sbb
xchg
in
paddusw
xchg
pop
mov
out
mov
jae
push
pushf
xchg
sbb
xor
lds
shll
push
inc
scas
push
xchg
js
jae
dec
mov
xchg
ljmp
movsl
inc
les
loope
jle
mov
pop
sti
lret
mov
push
adc
sahf
ljmp
dec
inc
fdivs
inc
lcall
jl
mov
mov
jg
dec
imull
or
add
cmp
das
popa
shrb
mov
pop
dec
jmp
and
pop
lods
js
fsubs
movl
loopne
in
je
or
out
push
push
loopne
in
push
loop
iret
das
push
mov
adc
mov
in
xchg
add
and
sahf
push
movsl
out
push
sti
lods
and
push
sub
sbb
insb
push
pusha
push
inc
addr16
insb
addl
shl
cmpsl
sub
xchg
in
adc
and
fdivs
push
pop
jb
mov
scas
sub
push
fcomp
mov
xor
pop
inc
inc
test
fld
scas
and
inc
push
insb
push
divb
jbe
jg
arpl
mov
cmp
pop
inc
nop
xor
mov
fcompl
inc
in
xor
sub
sub
jp
sub
mov
lock
lret
loopne
enter
jge
push
inc
and
daa
test
fcomp
xchg
cld
dec
xchg
loop
sub
testl
js
mov
es
mov
xchg
pop
rcrl
mov
rcll
xchg
and
mov
fwait
mov
aad
sub
scas
inc
test
addr16
fdivrs
shlb
inc
divb
out
pop
insl
sahf
lods
aam
imul
mov
sbb
aaa
testb
xchg
sub
adc
insl
push
add
adc
mov
lret
cmp
push
cld
sub
les
adc
dec
jecxz
stc
adc
bound
jmp
mov
jg
add
dec
xchg
test
inc
inc
imul
push
mov
pusha
aam
jmp
out
or
nop
ficoml
adc
fldcw
loop
cmp
adcl
jbe
push
add
call
lret
fucomp
adc
add
movsl
aas
pop
loope
dec
pop
cs
fistps
es
mov
push
mov
push
jmp
in
cmpsl
add
mov
in
mov
lods
or
inc
xchg
xchg
inc
mov
movsb
pop
mov
js
clc
and
jg
inc
jns
dec
inc
stc
ret
adcb
mov
or
sub
lock
add
orb
dec
ss
fisubs
inc
lods
aaa
frstor
in
jo
xor
or
xchg
cmp
ss
sbb
fwait
out
mov
pop
pop
in
clc
xchg
scas
stos
mov
mov
in
insl
push
imul
push
ret
or
stos
dec
mov
dec
push
inc
sub
fs
mov
pop
and
adc
xor
addb
cmp
xchg
stos
push
pop
out
xor
sub
and
mov
es
cmp
dec
pop
out
mov
stos
mov
push
mov
dec
jnp
pop
movl
xchg
insb
mov
jg
push
test
dec
mov
rorb
test
lods
jge
cwtl
cli
dec
and
rcl
rcrb
lret
mov
pop
adc
stos
rcll
push
fadds
mov
pop
ret
and
adc
inc
int
sub
aad
popf
andb
mov
push
sub
mov
std
out
fisubrs
dec
imul
dec
mov
in
scas
xlat
jne
mov
stc
repnz
movsb
bound
xchg
sub
xor
addr16
popa
leave
sbb
popa
push
je
mov
add
inc
aad
xchg
mov
jnp
idivb
jecxz
jl
popf
test
mov
enter
int
cli
push
jmp
pop
sbb
mov
into
leave
add
sub
adc
push
mov
out
mov
pop
ret
idivl
jmp
inc
insl
jp
cmpsl
dec
xor
add
xchg
sbb
mov
xchg
cmp
mov
mov
ds
lret
add
je
sarl
sbb
in
ljmp
sub
inc
sub
aam
mov
lods
mov
testl
jp
mov
stos
and
push
push
jns
in
sahf
movsl
cmp
add
pop
adc
es
inc
scas
jno
dec
test
inc
into
pop
or
rorl
or
or
xchg
xor
fldl
push
testb
or
out
repnz
add
ds
mov
xchg
dec
xchg
dec
pop
dec
stos
inc
fldcw
insl
loopne
fsubs
scas
test
cwtl
pop
iret
inc
mov
shrb
dec
into
xchg
jp
hlt
sbb
fisttpll
out
cmpsb
out
test
xchg
fiadds
aad
pop
popa
dec
push
or
or
xchg
cmc
out
ja
lret
cmp
icebp
adc
hlt
test
mov
jge
mov
cmp
jne
nop
incb
dec
adc
sub
pop
ljmp
cmc
jge
leave
imul
ret
pop
adc
xor
nopl
iret
stos
or
pop
xor
hlt
insb
out
incb
jecxz
jecxz
jle
and
xor
repz
sub
adc
jo
sub
mov
aam
hlt
rolb
or
adc
jp
mov
cmc
cwtl
fxch
or
pop
out
scas
mov
loop
jns
nop
les
lods
pop
sbb
push
int3
cmp
and
notl
outsb
test
dec
movl
fnsave
lret
subl
fimull
aas
xchg
daa
push
and
mov
rorb
and
shlb
and
push
loop
mov
xor
dec
add
in
pusha
in
mov
and
scas
lock
dec
xchg
push
aaa
mov
mov
push
pop
adc
mov
mov
xlat
push
out
cmc
out
jmp
test
sti
loopne
movl
or
lret
outsb
clc
rorl
mov
jo
pop
adc
shll
fisttpll
cmp
jg
mov
push
loope
lds
add
mov
pop
mov
add
mov
rcr
mov
lahf
mov
push
ja
imul
lods
mov
push
fbstp
shlb
ljmp
mov
xor
pop
addb
mov
push
pop
test
sub
call
pop
pop
lods
sarl
aad
push
or
push
sti
mov
mov
jecxz
inc
int
xchg
mov
testb
push
inc
jno
movsb
cmp
jns
and
inc
outsl
and
mov
les
in
sbb
sub
das
push
movsb
ja
pusha
out
or
nop
in
add
inc
mov
push
rol
loop
je
imul
xlat
in
push
addr16
inc
mov
xchg
icebp
pop
or
jns
pop
in
pop
insb
jo
stc
and
enter
add
mov
mov
add
mov
out
out
and
mov
mov
mov
inc
mov
lahf
or
sub
sbb
jbe
aam
mov
fwait
xchg
mov
mov
fs
add
mov
sbb
mov
fldz
movb
sub
cmp
xor
fwait
ljmp
imul
xor
lods
adc
mov
ja
pop
mov
xchg
rcr
xchg
mov
hlt
mov
mov
sbb
or
test
jne
int
sbbl
insl
jl
pop
sbb
mov
cmpsb
fsts
xchg
psubw
pusha
arpl
movsl
or
and
ja
inc
mov
jbe
cmp
sbb
nop
pop
mov
mov
mov
sbb
and
xchg
inc
cmp
fbld
daa
pop
dec
lds
push
jo
loopne
adc
sarb
mov
iret
rol
xor
repz
xchg
aas
mov
sbb
idivb
je
push
lahf
imul
xchg
movsl
js
fwait
jl
xchg
shll
stc
out
es
daa
or
mov
sub
pop
stos
cltd
push
pop
fpatan
dec
inc
mov
and
xchg
dec
lret
ljmp
js
add
or
cwtl
lcall
rol
sbb
das
test
mov
sub
jne
or
aad
cmp
test
adc
mov
sub
imul
mov
das
hlt
pop
xchg
xchg
popf
shr
insb
adc
fldenv
imul
push
imul
sbbb
adc
sub
imul
test
xlat
ja
rcrl
and
mov
fidivs
dec
dec
jg
mov
movsl
popa
mov
jle
cmp
cmp
ss
push
in
loope
pusha
pop
fadds
call
xor
adcl
xchg
inc
js
xor
mov
dec
ds
orb
dec
mov
clts
and
lret
xor
or
inc
push
add
negb
cmp
inc
mov
shll
cmc
xor
fbstp
es
and
bound
push
jmp
dec
rclb
mov
pop
mov
in
insl
es
daa
loope
sub
xchg
lock
sbb
into
inc
pop
sbb
mov
push
push
mov
scas
cmp
ljmp
insb
aas
or
xchg
xchg
xor
and
inc
repz
popa
xchg
mov
loope
insb
or
lea
mov
jge
sub
popa
shrb
inc
push
shl
xchg
jb
pop
mov
in
fnstsw
repnz
popa
loopne
lock
add
dec
jbe
and
lret
imul
sbb
fwait
sbb
mov
cmp
scas
mov
dec
aam
push
inc
add
add
pop
cwtl
push
hlt
lret
xorb
mull
popa
xor
mov
iret
lea
inc
cmp
mov
pop
mov
sahf
dec
out
leave
pop
or
pop
movsl
adc
cmp
imul
fcmovnbe
inc
outsl
inc
push
pop
fdivrs
cmp
xor
insb
nop
adc
xchg
or
dec
mov
mov
ret
rol
rcrb
push
cltd
inc
pop
shl
aas
mov
out
mov
or
adc
gs
push
jo
fistl
test
mov
testl
jmp
sbb
in
lea
imul
test
aam
cwtl
mov
out
xor
out
lods
sub
into
add
pop
sbb
testl
push
sbb
daa
adc
lock
in
push
cmp
clc
add
mov
loope
jmp
xlat
sub
daa
pop
push
fstps
hlt
lock
pop
repnz
fiaddl
in
pop
pushf
cmc
dec
stos
or
dec
call
jb
cmpsb
sub
push
or
mov
inc
sti
mov
iret
sbb
cmc
mov
out
jne
movsl
push
xchg
push
xchg
lcall
dec
add
pop
imul
stc
stos
sarb
pop
aaa
mov
leave
mov
push
xchg
insb
repnz
mov
fidivrs
out
es
mov
xchg
in
filds
push
xchg
jno
lret
insl
jbe
int
les
nop
mov
nop
or
popf
push
sbb
cmp
or
rcrl
mov
in
inc
stos
pop
add
bound
push
pop
xor
outsl
or
sub
inc
cmp
je
icebp
push
xchg
sub
push
inc
fsubrs
cwtl
mov
lahf
mov
mov
cmpl
cmp
hlt
iret
ret
incl
mov
dec
cwtl
pop
xor
inc
inc
add
mov
inc
ss
imul
ljmp
inc
mov
stos
sti
mov
outsb
xor
rorb
es
pop
repnz
lret
mov
popa
outsb
sub
aam
xchg
dec
dec
bound
push
fnstcw
shll
jnp
xor
pop
xlat
shlb
jge
cltd
fwait
repnz
mov
out
pop
fcoml
jg
sbb
loope
testl
xchg
pop
push
jp
jge
xchg
rcrl
mov
ds
rolb
cld
rcrb
pushf
jg
cmpsb
call
pop
pop
fsubrl
subb
cltd
pop
push
fldl
scas
mov
or
mov
push
icebp
aaa
jb
out
cld
lods
cmp
insb
int3
xchg
lret
push
inc
mov
scas
pop
adc
movsl
testl
lret
fucom
mov
pop
push
sbb
fcomps
test
pop
cwtl
shlb
cld
adcb
mov
mov
push
mov
xorl
sub
and
leave
loop
mov
addb
xor
pop
or
push
mov
pop
outsl
inc
cmpsb
xchg
adc
add
inc
ja
daa
in
push
xchg
or
xchg
popa
lods
stc
push
pop
xchg
test
cld
xchg
sub
cmpsl
fldl
mov
and
popf
adc
sub
jnp
pop
add
adc
lret
adc
or
cmpsb
ljmp
repnz
mov
outsl
mov
mov
push
adc
movsl
lods
sbb
aad
push
pop
cmc
sub
lds
shll
dec
and
xchg
jae
test
inc
sub
arpl
dec
jecxz
pushf
ds
cmp
pop
popa
cmp
jns
movsl
call
inc
sub
loopne
or
andl
ljmp
popf
adc
or
popaw
in
lock
pmulhuw
and
sbb
clc
lret
xchg
cmp
shl
xchg
inc
lods
lcall
ljmp
jecxz
int3
sbb
in
pop
xchg
icebp
or
mov
andl
dec
cmp
aaa
cmc
nop
fisubrs
rclb
nop
pop
push
jp
aam
sub
lods
arpl
frstor
mov
fsubl
pop
testb
cmpsb
sbb
int
and
arpl
push
lea
jmp
dec
mov
xor
xchg
rclb
add
xor
dec
enter
clc
push
push
mov
ret
cmp
inc
xchg
rorl
pop
dec
mov
roll
clc
cmpsl
push
xchg
pop
aad
xchg
jge
outsl
cltd
add
mov
sbb
ja
int
leave
adc
scas
cmp
mov
pop
mov
std
pop
add
out
add
aas
or
lret
lret
test
pop
pop
imul
sbb
xchg
push
sbb
and
icebp
loop
add
add
sub
subb
adc
add
sub
or
jo
mov
or
lods
inc
and
mov
inc
inc
mov
and
ficoml
add
popf
insl
adc
scas
popf
mov
adc
jbe
jno
int3
and
jl
add
mov
in
xchg
mov
xchg
mov
fwait
xchg
ret
mov
mov
ja
dec
mov
in
jbe
mov
std
cmpsb
xchg
outsb
pop
cmp
ss
stos
xor
aaa
jmp
dec
mov
enter
imul
mov
in
sub
sbb
xchg
addb
cli
test
push
lret
and
clc
test
int
imul
daa
nop
xchg
jp
adc
cwtl
rcrl
lret
call
jl
insl
orl
outsb
loop
mov
leave
or
fstl
stos
bnd
insl
cltd
sbb
pop
pop
in
in
sub
popf
jo
mov
pop
fisubl
ss
inc
inc
cmpl
mov
cli
sub
mov
test
or
adc
nop
loopne
jae
mov
lock
mov
jno
or
insb
mov
stos
dec
pop
mov
cltd
data16
mov
pop
mov
push
je
xchg
pop
bound
sub
inc
cmp
pusha
icebp
insl
push
std
lds
or
cmp
lret
imul
and
push
inc
add
stos
pop
xor
lcall
sbb
mov
jae
or
cli
mov
ja
adc
faddl
sbb
repz
lods
cmp
fwait
xchg
cmp
push
jecxz
repnz
in
xor
pop
jp
pop
in
lret
mov
icebp
test
iret
flds
ljmp
xchg
mov
mov
pop
andb
imul
mov
inc
mov
pop
mov
cmp
scas
rcrb
movsb
lahf
sar
daa
stc
add
add
bound
cmpsl
daa
mov
or
fsts
xor
or
popa
sub
push
js
push
cmpsb
js
xor
cmp
cmpsl
mov
stos
aaa
jp
mov
or
fcmovu
call
jne
hlt
nop
cmp
stos
incb
mov
lea
xchg
adc
add
jb
mov
ret
fisubrl
imulb
mov
dec
jb
jge
or
inc
push
xchg
jbe
daa
push
push
pop
cs
aad
imul
jp
mov
rorl
dec
push
sub
jae
negl
ss
test
add
lret
cmc
adc
sbb
adcb
popf
sub
adc
inc
imul
cmp
fbld
mov
pop
push
shlb
push
cmp
lods
sbb
add
andl
xchg
add
add
mov
xchg
adc
daa
fwait
mov
jg
pop
push
sub
push
insb
cld
popa
pop
int3
sub
add
mov
fstpl
cmpsl
cmc
mov
repnz
cmp
out
clc
pop
sub
cs
and
sub
pop
pop
aas
inc
dec
push
sub
xor
rcr
sub
mov
jnp
test
out
mov
shll
mov
cli
xor
xchg
xchg
jb
cmc
out
inc
sbb
dec
cltd
mov
outsl
ja
jno
cwtl
jns
and
ficoms
add
les
xchg
imul
gs
cmp
pop
xor
dec
sbb
shlb
call
pushf
mov
cmp
cli
push
mov
xchg
fcmovu
out
pop
cmc
cmp
pushf
xlat
imul
andl
cmpsb
adcb
enter
jb
ret
pop
jo
js
lret
out
mov
cmpsl
ret
cli
cmp
addr16
xchg
dec
in
insl
and
fadds
das
fs
or
clc
hlt
inc
cwtl
inc
cmpsb
cld
xor
notb
movsl
dec
jb
movsb
dec
jae
scas
lds
jmp
bound
stos
xchg
sbb
in
dec
fdivrl
hlt
fwait
subl
mov
pop
and
cmpsl
orl
clc
sbb
pop
in
push
sub
mov
dec
xlat
sarl
sub
dec
dec
movsb
loopne
out
mov
pop
mov
dec
gs
sub
test
mov
int
pop
out
xor
push
mov
out
das
je
mov
mov
das
or
mov
xor
adc
add
icebp
dec
icebp
iret
nop
xor
inc
xorb
push
jnp
push
test
ret
xor
sub
ret
sub
mov
into
das
int
push
das
pop
dec
mov
cmp
loope
and
test
sub
xchg
repz
mov
dec
jg
push
xchg
and
lea
int3
sbb
add
lcall
into
jle
adcb
pop
inc
mov
in
pop
stos
inc
mov
and
lahf
shrl
xchg
test
movsb
cs
aad
outsb
xor
xchg
push
pop
aam
xchg
xchg
jbe
push
loopne
cmp
lahf
or
int3
jbe
pop
cli
lock
lock
rcrl
xchg
or
scas
push
mov
dec
jns
sbb
push
lret
pop
xchg
adc
add
push
jle
addr16
es
jne
sub
adc
mov
ret
sub
xchg
and
movl
das
jbe
pop
cld
ret
inc
sbb
push
aas
inc
ficoms
cmc
sbb
xor
shll
test
push
scas
mov
sahf
add
int3
lds
push
jne
cmpb
popf
aam
movsl
fsubs
mul
popa
xchg
fsubs
add
sub
cld
mov
inc
fmuls
mov
lahf
jle
lds
fisttpl
ret
inc
mov
jae
enter
frstpm(287
neg
pop
fdivs
imulb
mov
mov
in
bound
fsts
cmpsl
inc
xlat
out
jbe
fildl
push
lret
lcall
sti
adc
inc
or
into
inc
sbb
push
hlt
push
dec
js
bnd
adc
shlb
aas
test
pop
sahf
xchg
inc
mov
repnz
push
cmc
pop
xchg
inc
pushl
les
fbld
fldl
dec
sbb
add
add
out
dec
mov
ret
inc
jmp
sub
cmp
mov
addb
cmpsl
shrb
xor
push
ljmp
cmpsb
incl
adc
xor
fldenv
data16
out
fisubl
add
in
enter
ret
and
inc
sbb
cmp
cld
gs
jae
xchg
push
adc
push
movsb
mov
cmpl
jno
mov
nop
loopne,pt
dec
adc
aaa
sub
mov
dec
je
cmp
mov
insb
mov
test
push
lods
mov
inc
loop
mov
jmp
and
out
jg
push
mov
mov
fabs
xchg
test
scas
cmpsb
mov
rorb
nop
pop
ret
add
sub
cmp
xchg
call
out
fiaddl
jb
sub
fisubrs
inc
mov
adc
mov
or
mov
out
scas
mov
pop
outsl
mov
nop
jbe
negl
out
push
sub
jp
push
fwait
and
push
sub
dec
xchg
test
inc
fwait
mov
scas
dec
aas
xchg
jno
roll
dec
lahf
movsb
test
lock
push
mov
decl
mov
push
pop
in
dec
mov
dec
inc
or
mov
cli
add
cmp
imul
adc
leave
sub
push
dec
jle
xor
es
adc
mov
aas
adc
mov
int
aam
pop
and
aaa
and
rcr
test
fisttpll
dec
rolb
in
lods
sub
cmpsb
sbb
test
in
dec
ss
jecxz
sub
fnstsw
leave
xacquire
mov
leave
mov
std
xor
int
and
sub
push
xor
sbb
push
es
mov
mov
out
mov
jnp
pop
mov
adc
fldcw
sbbb
xchg
je
mov
sub
jns
add
push
insl
clc
aam
xlat
cld
pop
clc
fmull
or
xchg
test
mov
adc
cli
lahf
xchg
or
dec
movsb
loopne
and
cli
lods
pop
inc
add
mov
jbe
pop
adc
push
xchg
and
lock
and
sbb
jne
mov
add
inc
sbb
sbbb
or
test
movb
pop
cld
shl
in
pusha
and
subl
cmp
add
mov
xchg
mov
push
mov
test
push
sti
cmp
ficomps
dec
jo
aam
mov
jge
test
xchg
insl
cmp
push
sbb
into
imul
mov
iret
js
mov
xchg
gs
aad
lret
negl
daa
incb
out
test
test
dec
sbb
js
test
jno
lcall
sub
dec
inc
push
xor
icebp
hlt
pop
ljmp
add
cmpsb
pop
daa
xor
stos
in
xor
and
dec
push
je
pushf
add
arpl
xchg
out
sub
xchg
push
mov
mov
jns
es
jge
jg
fcompl
and
jle
test
dec
lods
and
jbe
or
repnz
mov
mov
int3
test
inc
sbb
sub
xchg
jle
pusha
dec
icebp
fistpl
cpuid
ljmp
or
lock
popa
adc
int
sub
xchg
sub
fmuls
ja
cmpsl
cmp
int3
or
insl
pop
pop
mov
call
cltd
cli
enter
push
dec
jns
out
dec
jno
shlb
adc
push
test
dec
cmp
sbb
es
in
adc
test
and
or
out
or
das
or
es
sbb
push
mov
in
and
jp
inc
and
mov
jg
hlt
insb
wrmsr
or
not
sub
cmp
or
xor
push
lods
push
sub
jmp
sub
cmp
aas
idivb
sub
jb
das
push
adc
outsb
rcrl
jbe
xchg
add
push
mov
stc
inc
subb
mov
cmp
mov
mov
sbb
dec
jp
push
mov
roll
lea
sti
mov
shlb
cmpsl
push
out
mov
stos
je
into
mov
inc
mov
test
clc
cmpsl
push
xor
xchg
cli
mov
insb
aaa
icebp
out
push
add
mov
insb
or
mov
cmpsb
mov
mov
leave
insb
inc
jno
jne
ds
jo
aaa
ja
dec
cmp
ret
lret
or
inc
mov
xlat
dec
inc
testl
mov
pop
xor
jns
xor
out
dec
inc
iret
sahf
adc
daa
stos
sbb
lods
addl
scas
repz
xchg
jp
into
insl
jae
add
push
inc
ds
jle
mov
dec
xchg
jne
call
sub
jno
inc
dec
test
xor
pop
sub
jae
cmp
sbb
aam
scas
adc
push
lods
push
nop
jns
and
shlb
jp
adc
xlat
outsl
pop
not
jmp
pop
in
inc
pop
mov
les
comiss
rclb
dec
imul
call
adc
repnz
shll
fbld
inc
rclb
xor
or
in
jge
cwtl
imul
cli
in
test
fidivrs
and
or
aaa
mov
cmp
cmc
sub
pop
xor
scas
mov
js
imul
or
xchg
xchg
or
sub
or
cltd
lea
xor
in
adc
rclb
aas
das
mov
xchg
xor
insl
mov
inc
stc
into
push
push
and
loopne
dec
cmpsl
mov
rep
mov
rcrl
pop
jae
mov
pop
int3
pop
into
xchg
cmp
movsb
jge
insl
aam
sub
xchg
dec
inc
cs
sbb
pop
xor
and
adc
xlat
outsb
int
mov
pop
sbb
jb
dec
xchg
clc
es
aas
push
or
xor
xorb
cld
jecxz
cmp
jle
cmp
inc
call
out
dec
insl
std
mov
int3
adc
data16
ja
rcrl
aad
xchg
cs
cmp
push
pushf
mov
sub
inc
pusha
pop
push
lock
mov
dec
sbb
inc
lea
movsb
scas
jno
jae
scas
xor
pushf
xchg
sbb
int3
add
test
mov
js
push
jmp
call
fadds
arpl
pop
dec
sub
adc
jnp
dec
mov
sbb
ja
sbb
mov
pop
js
out
push
aam
mov
insb
hlt
sub
mov
sub
seto
movl
dec
mov
inc
pop
xor
jmp
jmp
fwait
outsb
out
ret
flds
loopne
add
in
scas
ror
stos
movsl
sbb
jnp
inc
xchg
rorl
inc
push
mov
push
fwait
sub
fisttpll
cmp
push
ss
mov
mov
and
shll
adc
mov
push
lahf
test
out
in
inc
repnz
inc
mov
xchg
rolb
fistpl
stc
clc
pop
or
dec
insl
mov
pop
cmp
mov
lret
mov
sbb
pop
ror
std
jns
cmpb
js
sbb
in
dec
and
add
shlb
pop
das
lcall
out
lds
dec
xchg
leave
fs
and
insb
jmp
std
pop
lds
aad
addl
popa
jl
outsl
lcall
out
idivl
push
rorb
ret
sbb
test
sbb
sub
popf
push
lahf
shl
add
js
jl
idivb
sub
inc
ds
mov
or
jbe
repz
xor
out
push
or
popa
push
jnp
pop
cmp
mov
call
ficoml
test
inc
jae
cmpb
ret
and
sub
shrl
sub
jnp
jge
std
mov
and
enter
or
scas
in
pop
nop
push
inc
enter
in
fiadds
aam
add
add
pop
jecxz
std
push
movsl
outsl
mov
mov
xchg
insb
ss
in
pop
fisttpl
mov
sub
pop
loopne
fnsave
scas
jns
add
mov
sarb
repz
cltd
add
xchg
mov
pop
loopne
fs
sub
sbb
ss
out
sbb
dec
imul
adc
mov
dec
sub
ret
xchg
cli
mov
pop
push
outsl
inc
pop
mov
cs
loop
iret
inc
adcl
mov
inc
or
pop
or
mov
fwait
test
stc
stos
rcl
sub
cmp
sub
cmpsb
and
jae
jmp
jl
fidivl
cmp
jae
test
stc
push
leave
xchg
pop
jl
xchg
push
test
or
push
ffreep
loop
inc
xrelease
call
ret
xchg
mov
lock
and
out
stos
dec
dec
dec
jp
cmpl
outsb
push
in
xchg
fdivr
xor
cmpsb
jnp
fdivs
sub
std
iret
mov
das
jne
xorl
push
or
mov
gs
dec
shlb
test
mov
out
xor
jmp
mov
enter
cmpsb
and
test
sbb
or
push
pop
sub
push
dec
dec
push
fimull
sbb
in
rorb
sarl
add
xor
mov
loop
scas
cmp
mov
outsl
mov
enter
out
adc
cmp
std
popa
test
mov
rorb
fs
aad
cld
add
adc
xor
out
imul
xchg
out
dec
scas
mov
mov
das
icebp
adc
push
leave
xchg
shlb
add
sbb
inc
mov
and
cmp
loop
aam
sbb
xor
mov
cmpsb
int3
roll
ret
ret
and
mov
fsub
xchg
cmp
mov
stos
es
aam
or
sti
jae
ret
push
out
test
add
dec
cmp
fnsave
or
add
in
xchg
test
add
cmp
ret
mov
mov
cmp
mov
iret
aaa
imul
or
jg
popf
sbb
add
xchg
in
pop
in
shlb
fidivs
shl
pop
jae
and
adc
ret
add
mov
std
popf
lahf
in
sbb
rcr
mov
push
pusha
add
mov
dec
mov
outsb
cmp
rol
and
mov
pushf
mov
clc
sahf
cli
cltd
jae
shll
icebp
pop
clc
xchg
jmp
cmpsl
addr16
repnz
aaa
lods
cltd
adc
dec
dec
push
or
sub
cmp
mov
sbbl
mulb
add
xchg
push
pop
inc
adc
pushf
loop
xchg
xorb
lods
ljmp
cmp
aaa
ret
cltd
jae,pt
xchg
cmpsl
std
cmc
repz
lods
shrl
hlt
cmp
lret
push
inc
ret
ss
jo
call
adc
cli
fs
std
jno
dec
popa
mov
out
push
stos
xchg
jns
cld
test
aam
adc
dec
dec
add
fisttpll
fcmovu
std
xchg
js
pop
mov
mov
jnp
push
xor
push
jbe
xor
mov
hlt
push
out
mov
xchg
cmc
add
jg
jns
sbb
xor
rcrb
mov
fsubr
inc
inc
mov
mov
jge
xchg
or
pop
call
aam
dec
push
xor
insl
add
out
jp
stos
pop
jb
out
jne
out
or
lahf
add
push
inc
inc
cmp
out
pop
adc
sti
sahf
pop
push
sub
cmpsl
das
roll
mov
xor
push
sub
sbb
movsb
or
enter
in
call
and
pusha
jo
cmpsl
inc
mov
test
int
dec
pop
cmc
add
das
repz
test
cmp
nop
imul
mov
push
out
push
outsl
out
jne
bound
push
das
lods
lods
sub
sbb
and
cltd
bound
stos
out
aaa
cltd
sub
iret
dec
sarb
mov
aam
js
sti
cmp
inc
dec
mov
icebp
daa
jl
xor
jecxz
inc
jg
imull
jg
imul
mov
add
jmp
mov
sub
jge
sbbl
scas
subb
mov
dec
lcall
incl
mov
cmpsb
lods
ja
test
test
or
popa
pusha
pushf
into
inc
xor
jmp
xchg
cmpsb
test
stos
aam
movb
cmp
jmp
pop
aas
xchg
loopne
repnz
fadd
in
jge
add
fdivs
push
mov
xchg
bound
push
scas
sub
cmp
xchg
iret
into
add
lcall
movsb
iret
flds
push
cmp
sbb
xor
dec
lret
xor
or
add
loop
es
jle
sbbl
nop
push
out
push
and
xor
push
push
xchg
mov
mov
das
neg
pop
sbb
cmp
sbb
aad
sub
and
ret
nop
jo
jns
mov
testl
sub
sbb
xor
xchg
orb
jmp
mov
xchg
mov
or
test
adc
ds
loope
pop
jmp
insl
cmc
inc
dec
sbb
movsl
shlb
cmp
idivb
movl
push
adc
arpl
cmpsl
mov
das
iret
mov
sbb
cmpsb
add
jns
mov
xor
pop
roll
pop
mov
or
iret
mov
dec
mov
xchg
jo
test
shrb
xchg
idivl
adc
jmp
xor
cmpl
add
cld
push
jne
jmp
dec
inc
fmull
push
les
insl
lods
sbb
stos
cli
test
rorl
inc
gs
pop
push
mov
shrb
loop
ljmp
pusha
push
xchg
push
cmp
dec
xor
loopne
or
in
sbb
lret
push
fldcw
in
mov
add
push
dec
cmp
pusha
pop
push
stc
push
inc
cmp
pop
mov
xor
pop
lock
cwtl
sbb
fsubrl
adc
imul
stos
pop
add
cmp
mov
add
movsbl
mov
add
inc
jp
adc
fsubp
dec
ss
fnstsw
push
mov
sbb
pop
stos
sub
cmp
in
mov
std
pop
pop
mov
xor
pop
add
mov
jo
add
push
sahf
jp
pop
dec
and
mov
adc
je
sbb
pusha
inc
add
enter
sbb
inc
mov
add
int3
dec
out
xorl
push
mov
test
or
scas
outsb
xchg
repz
testl
iret
cmp
mov
je
or
and
enter
push
dec
mov
movsl
test
xchg
mov
shlb
push
mov
out
xchg
fdivr
xchg
mov
data16
adc
mov
xor
sti
jb
sub
mov
cwtl
adc
std
sub
mov
je
or
mov
test
out
pandn
mov
mov
mov
sub
xchg
cmpb
push
cmpsb
repnz
lcall
decb
xchg
pop
es
dec
xlat
pusha
push
inc
cmovnp
xor
cmp
js
xchg
xor
dec
test
mov
cs
mov
sbb
ret
pop
outsl
daa
lcall
pop
lcall
addr16
xor
fdivr
xor
ja
movl
xchg
or
in
lock
mov
mov
add
aaa
stos
std
jl
mull
xor
stos
add
pop
fwait
test
shlb
xchg
add
mov
xchg
out
lods
jge
or
insl
pop
rcl
cmp
and
scas
je
adc
add
outsl
add
add
outsb
sbb
lea
mov
lret
cmp
xchg
inc
hlt
xchg
cs
push
sbb
int
dec
xchg
mov
cmp
sbb
icebp
fs
xchg
push
outsb
leave
rorb
popf
loope
jae
iret
jg
test
jmp
and
mov
mov
jno
jp
lods
ficoml
testb
sbb
fdiv
sub
mov
sub
shll
jle
subb
ret
popf
sbb
out
int3
xor
sub
xchg
sub
ljmp
cmp
loop
cmpb
scas
add
lods
insl
mov
sub
inc
adc
push
incl
in
das
pop
jle
fwait
loopne
hlt
outsl
push
fnstcw
mov
jecxz
sub
arpl
mov
pop
dec
je
sti
xor
cs
inc
mov
in
jnp
xor
stos
in
push
call
push
jg
nop
jle
xchg
or
daa
pop
pop
jl
ds
pop
cmp
jge
push
adc
jbe
cmc
clc
jg
leave
lcall
push
or
aam
inc
jo
pop
dec
add
les
or
mov
dec
xor
ret
enter
stos
pop
adc
int3
fbstp
stc
mov
fcom
mov
or
pop
jbe
insl
lea
push
lahf
jae
in
xor
xchg
xor
fcmovu
mov
rolb
xor
ret
dec
arpl
lcall
aam
jb
lret
repnz
sbb
and
and
pop
movsl
fs
push
test
movsl
pop
adc
out
mov
or
ret
and
dec
addr16
sub
dec
sub
insl
iret
pushf
cwtl
adc
aas
inc
rolb
pop
cmp
shlb
cmp
in
pop
cmpsb
inc
call
cmpsl
push
fs
dec
ficoml
mov
mov
xor
mov
fldcw
cmc
mov
cltd
shr
loope
test
push
or
jne
push
jo
dec
hlt
dec
shll
mov
mov
aam
lods
les
sbb
sub
test
xchg
mov
ja
vpminsb
jnp
xor
pop
xlat
insl
xchg
cwtl
or
cmp
inc
add
and
shrl
rolb
push
fcoml
imul
shr
mov
daa
les
mov
cmp
adc
push
int3
jbe
add
xlat
jmp
idivb
add
sti
xchg
dec
mov
push
int
sbb
stos
and
stos
mov
out
push
or
cmp
add
dec
lods
stos
pusha
fwait
mov
cli
sbb
fcomps
out
push
dec
test
add
xchg
cmp
pop
ja
push
lods
cmp
push
jmp
cmp
dec
cwtl
int
sbb
xchg
aam
stos
jae
push
insb
sbb
push
sub
stc
adc
jae
addr16
push
popf
mov
mov
insb
out
xchg
pusha
cld
sub
ljmp
stos
cwtl
jecxz
sub
in
cltd
in
rep
or
mov
mov
aaa
out
pop
ret
enter
ret
and
shrd
cmc
push
dec
jno
cli
xor
mov
pop
jp
push
inc
push
cmp
pushf
pop
inc
push
push
jg
cs
mov
push
pop
add
or
insl
cld
out
sarb
sti
les
mov
outsl
or
or
sbb
out
lahf
inc
mov
push
and
insb
jb
push
xor
cwtl
mov
jmp
inc
arpl
push
jge
sbb
cmpsb
mov
sub
clc
xchg
fsubrs
loop
sub
sub
scas
jmp
jb
mov
mov
scas
call
jae
push
imul
and
xchg
cmpl
testb
fucomi
jae
cmpsl
jo
aaa
out
sbb
cmp
int3
aas
pop
sarb
adc
push
pop
add
mov
push
fdivr
rolb
sbbl
cwtl
mov
sub
movsl
stc
aam
repnz
hlt
inc
scas
mov
mov
loope
je
jle
adc
xor
mov
xorl
fwait
and
jg
test
cmp
xor
add
inc
iret
imul
in
jns
cwtl
cmp
iret
mov
add
in
scas
mov
divb
or
jo
leave
subb
cs
lea
icebp
dec
xor
test
mov
int3
fs
and
sbb
push
adc
cmp
sti
pusha
idivl
pop
mov
insb
int3
inc
mov
daa
shlb
push
incl
subb
and
mov
movsb
sbb
pop
cmc
adc
pop
or
stc
sbb
pop
outsb
mov
cmpsl
pop
mov
scas
xchg
sbb
jb
ror
xor
cmp
stos
xchg
pop
jb
in
mov
jns
sub
cltd
xchg
add
popf
xchg
jb
gs
mov
inc
mov
cmp
pop
jo
mov
jo
push
ss
xchg
mov
mov
icebp
xorl
test
in
sbb
ja
rorb
jno
popf
cwtl
adc
idivb
sbb
arpl
dec
sbb
loope
fimull
push
pop
mov
mov
mov
cmp
or
mov
in
fbld
subb
sarl
mov
pop
xchg
data16
call
or
out
xchg
lcall
push
sbb
clc
fstp
iret
fs
jb
je
mov
aaa
pop
push
lret
xchg
sahf
inc
pusha
cmc
inc
add
js
lds
dec
push
fimull
xchg
iret
and
lret
adc
stos
orl
scas
icebp
ficompl
cmpsb
xchg
xor
in
fwait
jne
fldt
xor
cltd
icebp
mov
iret
push
mov
lahf
pop
stc
lock
es
push
mov
sub
into
lret
lret
divb
add
pop
lret
hlt
add
pusha
xchg
loope
into
ja
jp
jg
rorb
popl
dec
push
sub
cwtl
arpl
jmp
ja
cmp
mov
lcall
shlb
inc
std
nop
lods
cmpsl
push
push
movsl
sub
xchg
ret
pop
adc
in
cli
stos
xlat
adc
int3
scas
lret
pushf
pop
lret
dec
jb
sub
inc
fs
mov
and
fldcw
aam
sub
xchg
ljmp
jne
in
cmp
add
arpl
push
lcall
xor
or
mov
dec
add
inc
stc
mov
xchg
das
cltd
pusha
mov
cwtl
ljmp
insb
inc
push
arpl
cmp
xor
frstor
pop
sbb
sub
xor
repz
add
dec
push
inc
push
mov
ss
jge
and
and
imul
cmpsb
addl
xchg
push
jl
icebp
rorl
movsl
imul
mov
push
mov
inc
dec
std
jle
pop
push
mov
jbe
mov
loope
enter
push
lret
icebp
lret
pusha
lock
and
gs
dec
adc
mov
xor
push
jg
cltd
fidivrl
rcll
jae
hlt
sub
stos
addr16
call
ds
scas
add
or
or
pop
cld
lods
lret
cmp
sahf
pop
call
adc
fnstenv
pop
mov
dec
ret
xchg
jo
das
out
call
xchg
addr16
bound
add
lahf
inc
jae
and
cmp
inc
adc
arpl
das
xchg
fldcw
aaa
or
mov
aas
inc
mov
or
xlat
push
dec
jge
aad
into
adc
out
dec
cmp
xor
xchg
add
sub
mov
dec
iret
xchg
and
hlt
aaa
mov
pop
xchg
push
add
inc
sbb
ds
mov
jge
das
repnz
pop
imul
stos
pushf
inc
stos
pop
decl
insl
or
iret
rcl
sbbl
roll
ljmp
loop
scas
add
cs
or
mov
mov
les
push
or
jnp
sbb
push
ficoms
inc
mov
lds
imul
mov
les
mov
adc
fxch
cmp
nop
int3
add
into
or
jg
xchg
mov
xchg
mov
stos
dec
inc
jbe
or
pop
imul
jmp
cmp
imul
xlat
arpl
insl
adc
jmp
outsl
push
adc
add
cmp
add
clc
addl
or
pop
push
mov
test
int
scas
cmp
jmp
inc
es
adc
mov
in
ret
icebp
lahf
stos
int
adc
xchg
mov
loop
dec
mov
xchg
jle
push
jmp
xchg
cmp
dec
cmp
orl
push
dec
sbbb
jno
pop
pop
cmpsb
test
cmc
jmp
data16
je
test
sub
jecxz
push
xor
and
cltd
int3
push
cmp
in
or
repnz
inc
inc
inc
adc
dec
addl
out
cld
pop
and
inc
lcall
add
cmpsl
inc
jno
lea
jbe
stc
rolb
rclb
mov
mov
sub
pop
push
hlt
aam
jo
daa
ret
mov
inc
ljmp
and
add
sbb
cltd
mov
int3
dec
in
dec
inc
mov
push
lock
add
mov
lods
test
push
loope
xchg
out
outsb
outsb
lret
out
ss
call
fmul
dec
or
cld
scas
mov
jp
int3
xchg
in
or
leave
pop
jl
rcrb
cmc
sarl
in
ja
lods
testb
jecxz
mov
cld
test
pop
int
sbb
xchg
bound
dec
lods
or
inc
and
pusha
insb
in
jg
lret
add
xchg
push
aaa
insl
or
add
jmp
aam
mov
loopne
push
mov
test
rorl
je
iret
lea
push
add
lahf
mov
adc
jnp
popf
das
pushf
pop
mov
mov
scas
mov
adc
pop
sbb
in
jb
pop
sti
push
jb
xchg
mov
jne
pop
js
add
or
dec
ja
test
lret
cmc
cmp
cmp
popf
push
fbld
jns
rolb
or
stos
cli
dec
out
lods
cs
sbb
jmp
jg
mov
fstpl
call
inc
nop
test
dec
add
shr
mov
repz
jne
fsubr
adc
in
cli
aam
or
in
ret
rcll
fiadds
ds
cmp
in
push
inc
scas
sbbb
jb
outsl
aad
cltd
mov
xchg
push
add
in
xlat
pushl
sub
sti
mov
mov
adc
enter
clc
leave
popf
cmc
lods
std
mov
ret
inc
mov
mov
mov
xchg
mov
add
push
iret
jmp
aam
imul
fcos
test
jg
repnz
add
pushw
push
xor
sbb
das
push
cwtl
mov
ret
andl
xchg
test
imul
xchg
adc
or
adc
pop
jnp
pop
mov
daa
jge
sbb
stos
test
out
jo
shl
fiadds
sahf
outsl
pop
xchg
ss
and
call
cmp
clc
rclw
push
cmpsl
xor
pusha
jge
cmc
pushf
mov
and
add
icebp
mov
pusha
lea
loopne
data16
inc
mov
jl
loopne
jecxz
cmp
lock
loopne
int
adc
sub
inc
sbb
add
cmp
sbb
pop
adc
push
lods
insl
fs
sub
scas
insb
addr16
xchg
jmp
and
loopne
sbb
xor
out
shlb
clc
pop
sbb
popa
mov
and
divl
jl
sahf
xchg
fisubrs
dec
inc
int3
sarl
jo
or
mov
imul
add
outsl
ss
testb
or
xor
shl
sbb
orl
cmpsl
mov
movsl
or
pop
push
cmp
mov
std
push
clc
ja
push
stos
adc
pop
mov
add
cmc
mov
inc
dec
jne
out
mov
adcl
ss
imul
in
lds
sarl
xor
mov
mov
sbb
xchg
aad
mov
add
sub
add
jmp
mov
jmp
cwtl
cwtl
and
mov
dec
fs
scas
iret
nop
mov
push
jl
ss
fbld
int3
push
scas
sbb
push
xchg
cmp
int3
dec
inc
orl
cld
pop
cmp
sarl
pop
xchg
jmp
cmp
adc
cld
ror
pop
xor
jp
sahf
xchg
cwtl
clc
pop
les
or
sbb
jmp
popa
xor
jne
cmpsb
mov
sub
cmpsl
insl
cwtl
jmp
mov
or
shl
mov
movsl
jnp
icebp
mov
sub
jb
jbe
out
adc
and
or
adc
mov
lea
data16
shrb
push
imul
stos
stos
dec
adc
mov
pop
mov
pushf
fadds
add
ljmp
ds
test
arpl
or
mov
push
mov
out
push
xchg
and
adc
add
mov
outsb
cmp
ljmp
inc
mov
insb
call
jno
in
hlt
ja
xchg
fisubrl
mov
fidivrl
das
sbb
lods
loop
jecxz
fwait
aam
or
icebp
scas
iret
adc
adc
xchg
sub
add
pop
xchg
mov
mov
pop
rcl
nop
push
pop
xchg
xor
pop
and
cmp
and
pop
popa
incb
cmp
shll
out
insl
pop
std
popa
sub
insb
pop
xchg
cwtl
mull
out
jae
js
pusha
rcr
fcmovu
cmp
dec
pop
push
xchg
aam
sub
sub
loope
out
sub
mov
outsb
push
or
mov
pop
popa
add
push
rcll
and
jl
xchg
sub
jae
push
or
mov
clc
iret
or
and
mov
inc
mov
enter
shrl
adc
push
fstps
cld
flds
mov
mov
std
stos
mov
lahf
call
rcll
cmp
sub
and
movsl
pushl
leave
pop
pushf
insb
xor
push
adc
sarl
sbb
jg
or
das
dec
fwait
mov
aas
out
xchg
pop
cld
sbb
push
cmp
inc
mov
lea
fiadds
adc
in
xor
or
test
jle
and
jbe
nop
lcall
cmpsl
mov
adc
out
cmp
mov
loope
std
dec
mov
inc
arpl
es
mov
fsubrl
inc
mov
push
dec
jl
xchg
cmp
pop
mov
shlb
outsl
xchg
jb
inc
dec
sbb
inc
add
bnd
rorb
push
cltd
push
push
bswap
pusha
jne
sar
adc
lds
addl
fildll
or
sahf
ljmp
adc
jg
jno
inc
xchg
std
jmp
sbb
or
pop
repnz
push
push
or
std
xchg
jno
sub
add
xor
in
add
add
mov
iret
enter
mov
push
repz
sub
dec
xlat
adc
pop
cmp
lahf
dec
out
push
jl
jp
iret
xor
xor
test
cmp
xchg
sub
das
shll
adc
ds
pop
push
fisubrl
inc
push
test
pop
pop
js
aad
dec
mov
cmpsb
pop
jne
inc
jg
aas
add
dec
cli
testl
cli
inc
scas
mov
mov
pop
mov
ds
mov
mov
pop
incb
movsb
pop
adc
aas
or
je
inc
xor
adc
les
filds
rcll
jae
dec
push
notb
pop
cld
mov
sbb
js
sbb
repz
shlb
add
adc
pop
cs
dec
sbb
les
push
push
mov
insb
mov
repz
sub
movsl
fidivs
cmc
add
inc
int
pop
rcrb
lods
int3
inc
movsl
outsl
ljmp
out
lea
rorl
inc
fisttpl
mov
xchg
outsb
pop
push
jle
add
test
cmpsl
xchg
jns
pushf
mov
jecxz
mov
daa
sbb
idivb
fwait
mov
icebp
in
sbb
jns
movsl
mov
lret
xorb
pop
adc
faddl
insb
call
inc
cmp
xor
push
xor
fcoms
mov
mov
or
mull
sub
mov
pop
sub
or
test
fdivs
mov
pop
arpl
or
sbb
or
fmull
and
leave
shlb
movsl
push
inc
aaa
and
fs
into
mov
repz
and
or
push
or
call
or
adc
rcl
stos
test
adc
loope
mov
repnz
loop
test
adc
popa
adc
xlat
mov
pop
pop
imul
inc
push
aaa
call
subb
aaa
mov
lods
xchg
push
mov
in
and
bound
cmp
stos
fildl
and
scas
push
iret
arpl
pop
ljmp
xchg
adc
cmp
mov
outsl
and
fcompl
pop
inc
test
sbb
push
or
xchg
sbb
push
cmp
leave
sbb
cmpsb
mov
daa
cli
and
mov
adc
or
mov
imul
push
dec
test
lret
xchg
test
test
mov
cmp
add
xor
pop
xchg
and
jle
shl
pop
add
movsl
mov
shlb
cmp
iret
add
dec
ret
mov
and
sub
out
adc
js
out
jno
inc
adcb
testb
push
cmpxchg
fadd
fwait
aam
mov
xchg
sbb
daa
jno
jb
jle
iret
jp
pop
sti
or
shll
dec
negl
jo
xor
jmp
enter
mov
mov
mov
add
sbb
and
stos
jle
mov
push
enter
dec
cmovle
cmp
pop
xchg
test
jl
cmpsb
shll
cltd
xor
push
cmpsb
jno
out
sbb
xchg
shl
lcall
idivb
cmc
lock
js
mov
iret
cs
test
stos
call
movsb
mov
pcmpgtd
nop
xchg
ds
cltd
mov
popa
jg
push
xchg
add
jo
rcll
shlb
sbb
pop
insl
cmpsl
sub
mov
mov
test
sbb
dec
push
dec
ds
inc
lock
cmc
pop
loop
jge
mov
sarb
xlat
fisttps
push
rclb
sub
jecxz
imul
insb
cmp
in
push
mov
xchg
lods
popf
mov
xchg
jnp
rcll
jle
and
pop
jle
mov
rcr
jb
cmp
pop
fisubrs
mov
mov
mov
out
dec
movsl
inc
sbb
loopne
popa
fsubrl
inc
arpl
sarl
aas
inc
mov
push
int
xchg
hlt
enter
out
add
int3
adc
xchg
jecxz
js
idivb
adc
or
out
roll
mov
rcl
test
jmp
jae
fwait
cmpsb
pop
dec
adc
pop
inc
mov
clc
xor
jge
push
mov
addr16
xchg
mov
cmp
fnsave
mov
push
mov
pop
inc
stc
outsb
repz
jl
test
fdivr
imul
jecxz
fcmovb
fs
sbb
mov
mov
inc
sbb
fistpll
add
fcomip
sbb
filds
js
fidivl
je
xchg
cmc
push
stos
push
addr16
push
cmpsb
fistpl
push
and
xor
xchg
lock
test
cmpl
dec
sub
inc
adc
cmp
push
scas
aaa
xor
and
mov
aad
push
xchg
sub
xor
std
mov
mov
fisubrs
and
xchg
scas
or
mov
into
ja
mov
movsb
sub
nop
lret
inc
jmp
mov
inc
pushf
jmp
sbb
lock
cmc
xor
add
push
xor
jb
aam
fnstcw
mov
mov
mov
cmc
cld
cmp
sbb
test
xchg
mulb
cmpb
and
gs
cmp
test
cld
fldenv
das
fcmovne
xchg
mov
bound
das
into
add
mov
mov
mov
js
jmp
adc
mov
mov
inc
insl
jbe
sbb
std
pop
std
lahf
lds
jle
pop
cmp
aad
push
jle
in
ds
test
jbe
iret
mov
mov
or
aaa
cmp
push
jns
sub
jb
cwtl
lds
dec
mov
jo
fadds
rcrb
mov
jbe
stc
movsb
je
sti
xorl
in
mov
xchg
adc
xlat
rcl
pop
aad
adc
jb
in
aaa
cld
in
sbb
or
and
scas
mov
jns
sub
sahf
jne
inc
add
sub
call
stos
and
jne
out
or
jnp
jbe
roll
adc
inc
pop
stc
push
xchg
mov
stos
data16
daa
pop
push
stc
arpl
out
mov
pusha
fwait
cmp
and
dec
xchg
mov
repz
pop
adc
inc
loopne
jo
inc
mov
lahf
dec
pop
leave
mov
lods
mov
push
cmp
mov
inc
mov
push
insb
int
stc
jnp
shrb
fimuls
fnstsw
mov
test
jle
movsl
cmpsl
repz
shlb
lds
dec
mov
jo
xchg
xchg
cld
cltd
dec
lock
call
sti
mull
mov
pop
mov
jp
lret
shrl
mov
lea
in
add
lahf
mov
cltd
xor
fmuls
push
in
push
sub
pop
jg
popl
pop
push
push
inc
sub
jbe
adc
push
pop
mov
lods
mov
repz
and
ljmp
inc
inc
add
sbb
aaa
shll
dec
lcall
fdiv
mov
rorb
shll
jae
subb
fbld
mov
sbb
lods
test
test
push
inc
out
inc
push
jne
xchg
aam
inc
std
imul
adc
push
aaa
in
xor
arpl
stc
arpl
sub
push
mov
push
cmp
lock
mov
inc
inc
insl
shld
xor
dec
jnp
jg
pop
or
imul
inc
not
aas
lret
in
pop
lret
mov
cmp
cmp
and
adc
adc
inc
fwait
idiv
cmp
test
pop
dec
jecxz
inc
push
loop
jno
mov
lahf
dec
dec
xlat
jnp
enter
mov
xchg
inc
mov
mov
dec
push
xor
cmpsl
sbb
fcomip
cmpsl
jge
jo
mov
dec
jne
outsb
or
mov
add
jle
add
sbb
ljmp
int
mov
fidivrl
and
mov
aaa
add
sub
push
test
out
inc
gs
xchg
xchg
in
lahf
rcl
push
and
mov
cs
xchg
xor
mov
mov
call
pop
jb
les
lods
ret
std
pusha
dec
fwait
lods
or
in
xor
push
lea
add
xchg
mov
dec
negb
mov
data16
cmp
pop
ret
mov
push
call
mov
adc
faddp
adcl
lock
cmpsl
sti
inc
xor
sbb
nop
int3
push
mov
rolb
in
adc
xor
adc
icebp
xchg
jle
cmpsb
mov
xchg
or
ret
mov
js
push
test
xchg
sub
inc
add
pop
lea
pusha
xchg
mov
jae
sub
cmp
out
or
addb
sub
mov
repz
mov
int3
cmp
mov
hlt
leave
fidivrs
pop
daa
pop
inc
lcall
inc
icebp
fidivl
cltd
mov
push
cmp
lea
loopne
or
xchg
gs
inc
cs
push
pop
or
and
mov
fdivrl
mov
pop
push
testb
push
loopne
mov
jmp
xchg
adc
mov
test
iret
fwait
out
mov
adc
addr16
pop
push
cmp
lods
out
pop
idivl
adcb
pop
iret
pusha
roll
lahf
cmc
out
adc
mov
add
pop
nop
inc
cmp
mov
lret
push
cmp
shrb
outsb
sbb
mov
jge
xor
out
or
cli
mov
sbb
and
cmp
mov
and
in
cs
sbb
jne
lahf
stos
xchg
push
rclb
cmp
rclb
sbb
push
fisubs
or
jo
xchg
imul
jge
push
mov
adc
jl
adc
rcrl
addr16
mov
mov
add
std
imul
xor
push
xor
decb
sahf
and
mov
mov
clc
ss
outsl
out
and
sub
push
xchg
sub
insl
mov
imul
sbb
in
stos
popa
xor
popa
adc
push
mov
adcb
mov
mov
ds
cmp
clc
ret
repz
mov
add
aaa
jmp
mov
xlat
movsb
mul
pop
dec
jo
mov
jae
andl
das
aad
push
add
or
repnz
or
out
or
out
pop
xchg
mov
xchg
stos
sbb
iret
pop
in
sbb
bound
lods
pop
jae
popf
shll
cmp
xor
call
push
out
out
sbb
inc
leave
subl
or
test
cmpsb
sbb
daa
and
inc
add
inc
or
icebp
in
or
mov
sti
ljmp
mov
punpcklbw
mov
aam
push
adc
jns
push
mov
fbld
jmp
ja
sbb
push
push
notb
cmp
les
pusha
push
clc
ljmp
push
sbb
stos
or
sub
inc
repnz
xor
jo
push
pop
sub
outsl
mov
fcoml
push
mov
sub
or
clc
sbb
mov
loope,pt
test
xor
sahf
or
iret
cltd
mov
clc
subb
xchg
or
push
test
inc
jne
or
icebp
rep
enter
int
xor
or
push
push
sub
mov
add
popa
repnz
xchg
pop
sbb
mov
adc
fsts
sbb
scas
pushf
sar
pop
pop
lods
andb
in
mov
and
or
jmp
add
data16
add
adc
mov
imul
outsl
cmp
subb
aad
jmp
or
test
xor
pop
mov
mov
mov
mov
dec
lahf
pop
jge
or
ljmp
jl
add
cmp
test
push
rolb
mov
jl
adcl
stos
and
dec
outsb
xor
mov
arpl
pop
fistl
mov
cs
sbb
mov
in
push
popa
pop
stc
add
xor
dec
mov
cmc
jecxz
mov
push
cs
jmp
daa
mov
jo
and
mov
lods
sahf
jl
or
cs
lods
ljmp
icebp
cmp
in
push
fadds
sub
adc
mov
add
clc
xchg
push
js
inc
xor
push
fisttpl
jno
xor
and
mov
jge
int
dec
mov
ja
ljmp
sub
mov
cmp
lahf
das
fdivr
pop
out
lcall
cmp
mov
stos
subl
add
mov
out
cmc
stc
das
jne
push
inc
dec
dec
lret
rolb
add
popf
das
jmp
rcrl
mov
mov
sbb
aad
addb
imul
dec
aad
subl
mov
adc
mov
sbb
jp
je
adc
inc
rolb
jecxz
daa
cmp
push
add
mov
jge
aaa
insl
add
mov
adc
jne
push
addr16
loopne
shl
lods
dec
lret
cmp
pop
or
dec
mov
add
or
push
mov
std
test
call
mov
pop
dec
cmp
xor
loop
push
push
enter
out
or
loope
push
inc
jl
dec
cmp
loopne
pop
push
add
lret
imul
scas
test
mov
jb
sbb
xor
adc
gs
cld
pop
ret
xor
std
mov
fwait
iret
or
xchg
scas
sahf
mov
and
out
loop
sbb
icebp
cmpl
jecxz
das
call
mov
iret
pop
enter
outsl
add
or
lea
dec
jp
push
loop
adc
adc
and
lret
mov
jp
and
pop
pop
push
mov
add
ljmp
fiadds
pop
fsubp
cwtl
movsl
fnstcw
fs
or
pop
sbb
lcall
xor
cmpsl
lcall
test
es
int
fwait
out
in
cmpsl
jle
adc
jne
sub
sub
and
jg
push
leave
shlb
pop
out
pop
div
cmpsb
push
ss
or
ljmp
xor
sub
cli
add
jno
xor
xchg
pop
loope
jp
xchg
mov
popa
xchg
cli
xchg
and
push
jge
mov
or
das
sbb
sub
cmpb
pop
out
push
mov
sahf
js
popa
test
push
or
cmpsb
sbb
ds
sbb
cmp
pop
cmpsb
pop
loop
jge
xchg
nop
mov
mov
fnstsw
in
and
or
out
loope
popf
lret
mov
jae
add
leave
leave
sbb
out
xchg
xor
xor
ret
push
repz
mov
cs
adc
popf
inc
lahf
dec
mov
adc
mov
mov
push
jg
add
mov
xchg
cmp
movsl
inc
and
mov
cmp
adc
rcl
dec
fucomi
mov
mov
mov
cli
mov
into
sub
mov
push
xchg
mov
xchg
fs
js
in
mov
sbbl
test
mov
subl
xchg
xchg
or
pop
jne
cmp
push
sub
sti
das
nop
jae
cmp
test
cmovne
lret
cltd
mov
mov
dec
add
xor
pusha
imul
pop
call
or
in
and
rclb
mov
inc
in
insb
or
and
out
dec
out
movsb
inc
sub
pop
pop
pop
popa
cmp
cmpl
sbb
clc
add
rol
pop
shll
imul
lret
test
push
cli
enter
into
enter
mov
add
ret
mov
pop
dec
push
fs
adc
mov
cmpsl
outsb
push
and
or
cmp
outsb
pop
rcll
dec
test
pop
ficoml
lods
pop
push
pusha
push
and
movsl
jb
cmpsl
into
ljmp
mov
lcall
rorb
icebp
sahf
mov
fcoml
ja
pop
adc
sti
and
enter
pop
in
out
dec
int
jmp
clc
cmp
mov
add
xor
fdivl
and
cmpb
and
dec
fmull
aaa
push
cmp
mov
dec
out
pop
and
cmp
in
je
sti
xor
add
add
xor
stos
mov
inc
xor
in
cs
jno
enter
arpl
and
xor
add
push
or
or
das
lock
sub
mov
mov
adc
push
aad
dec
hlt
adc
mov
pop
push
sti
pop
push
or
daa
cmpsb
roll
popa
adc
mov
mov
cmc
xchg
shl
out
loop
inc
xlat
test
sbb
iret
xor
addb
jnp
pop
adcl
mov
insl
sbb
inc
dec
or
pop
dec
movsl
fsubp
mov
cmp
fadd
mov
xlat
cwtl
into
cmp
or
sub
sub
mov
mov
mov
xchg
mov
mov
jo
sub
repz
test
sbb
pushf
adc
pop
pop
cmp
cld
jae
sbb
scas
mov
clc
fs
int3
push
mov
or
mov
imul
lret
mov
jmp
movsb
jb
mov
scas
pop
mov
mov
cld
or
ljmp
shlb
lret
js
jno
stc
adc
addb
cmp
leave
xor
mov
and
inc
or
bswap
push
lods
aam
lods
nop
scas
addr16
or
add
popa
aaa
into
inc
jmp
insl
scas
sbb
notl
fdivs
mov
push
xchg
out
jle
jae
leave
pop
popf
aaa
sub
jmp
push
push
iret
pop
das
jb
ret
stos
icebp
dec
xchg
dec
adc
rcll
cmp
mov
mov
sbb
es
jg
push
adc
out
mov
push
push
add
cld
pop
xor
mov
jg
push
inc
xor
test
add
and
mov
jb
leave
rclb
insl
in
xor
stos
mov
ror
and
cmp
mov
mov
jae
movl
mov
addr16
fldcw
mov
ret
in
inc
push
mov
xchg
movsb
inc
or
je
jae
inc
cmp
hlt
in
jne
mov
rorl
int3
jno
lret
bound
add
push
jl
stos
mov
xchg
jecxz
out
adc
xor
loope
adc
sbb
gs
add
pop
jae
and
lahf
xchg
cmp
mov
fimull
mov
push
and
stos
in
jae
mov
ja
repnz
negl
add
jbe
rclb
jno
pop
cmp
or
lret
cltd
adc
mov
add
sub
lods
pop
jmp
testb
mov
and
bound
sub
dec
insl
stc
jl
and
add
add
add
iret
pop
jecxz
add
enter
jl
mov
cmpsl
inc
inc
mov
repnz
dec
xor
lahf
adc
insb
div
inc
push
sub
xchg
arpl
push
mov
jg
pusha
test
out
jns
lret
outsl
bound
ret
add
je
imul
push
test
mov
jp
cmpsl
icebp
fwait
push
jb
pop
cs
pop
cwtl
int3
in
inc
fisttpll
jb
inc
scas
mov
stos
adc
movd
imul
aaa
pop
daa
or
dec
cmp
pop
jbe
mov
insl
or
je
lea
test
test
xor
inc
cmp
dec
jle
xor
cmpsl
ds
mov
outsb
jmp
and
mov
mov
inc
fsubl
xlat
mov
xchg
lods
pop
jg
mov
daa
mov
mov
mov
or
leave
mov
lods
ja
stos
std
stos
or
inc
sbb
and
mov
xchg
mov
mov
xchg
adc
test
das
pop
inc
arpl
xor
test
or
push
nop
sbbb
pusha
cmp
xor
imul
jns
lods
cmpl
dec
in
ror
mov
push
hlt
shlb
shrb
movsl
jle
aas
pop
and
xchg
lea
mov
loope
mov
insb
jg
pop
outsb
mov
cwtl
jb
stc
stc
mov
xchg
xchg
sarl
lods
xlat
inc
js
jns
insb
inc
add
xchg
push
iret
je
push
mov
inc
lock
imul
jp
ja
sub
mov
add
not
imul
xorb
loopne
add
or
andb
jno
movsl
rcrb
sbb
in
aas
call
dec
dec
xchg
scas
popa
test
addr16
jmp
xchg
mov
or
or
sti
push
inc
mov
lahf
xchg
jle
movsl
lds
sbb
std
xchg
ficoms
out
lea
mov
bound
cmp
jp
pop
inc
lock
or
mov
mov
fcompl
dec
into
cmovno
sti
test
leave
push
int3
loop
lea
mov
shlb
xchg
or
cmpsl
xor
gs
adc
mov
sbbb
inc
or
adc
dec
cmp
push
mov
jbe
xchg
loope
mov
cmc
pop
fildl
mov
int3
mov
cmp
shlb
into
cli
out
test
push
jmp
jbe
dec
inc
fldl
push
outsl
enter
push
daa
add
push
inc
xor
mov
jp
mov
push
das
mov
push
sti
int3
shll
adc
cmc
jmp
stos
sbb
jl
adc
jns
push
and
daa
cltd
aaa
mov
push
cmp
mov
xchg
mov
cli
pop
aas
data16
add
stos
push
xchg
ret
leave
and
adc
fisubs
pop
lock
jns
or
jecxz
pop
push
sahf
push
inc
adc
jb
jp
mov
mov
out
scas
fnsave
loopne
inc
cmp
in
hlt
dec
adc
imul
cwtl
int
fisubrl
and
mov
lcall
loope
mov
push
and
nop
pop
lret
push
andl
call
imul
push
jl
int3
cli
pushf
decb
ret
aam
fs
mov
in
fcomps
or
pop
mov
hlt
inc
add
cld
dec
or
pop
jb
pop
sbb
movsb
movsl
xor
das
cmp
je
and
xor
cld
data16
loopne
clc
hlt
and
or
xchg
imul
adc
and
xlat
jbe
je
pminub
dec
or
adc
and
aam
test
mull
push
test
xchg
loopne
add
test
shr
and
in
mov
shll
xchg
adc
lock
pop
testb
fsubrs
mov
inc
push
test
pusha
add
pop
inc
mov
repnz
push
xor
or
push
mov
push
push
adc
orl
mov
rorb
test
push
jmp
lea
hlt
movnti
enter
jp
pop
xchg
in
dec
shrl
les
sbb
cli
sub
fwait
aas
or
xchg
sbb
out
shlb
cs
mov
pop
adc
inc
mull
lret
adc
mov
mov
cmp
and
mov
hlt
mov
mov
inc
inc
add
or
sbb
xchg
sbb
inc
xor
roll
cmp
jl
int
js
xor
into
push
mov
inc
test
inc
lcall
inc
lret
inc
xor
mov
sbb
std
add
jb
out
or
out
popf
stos
mov
ret
sub
sbb
dec
sbb
scas
jno
mov
sub
xchg
add
xchg
rcl
sbb
sub
sub
push
dec
arpl
inc
mov
xor
loope
popa
inc
push
imull
aam
cld
pop
shrl
xchg
jbe
scas
jp
sbb
dec
stos
idivl
in
and
lret
insb
pop
cli
daa
loope
scas
pop
mov
xchg
and
out
dec
pop
xchg
imul
add
cltd
and
mov
pop
jns
jb
daa
mov
mov
mov
insb
mov
cmp
push
and
outsl
mov
ja
and
jp
cmpsl
xor
js
das
xchg
mov
mov
loope
adc
mov
inc
inc
mov
rcr
stos
mov
fiaddl
into
in
inc
cltd
xchg
insl
mov
addb
pop
and
mov
or
mov
das
mov
inc
mov
adc
fisubrs
outsb
fsubs
sub
and
sti
mov
sub
xchg
cli
subb
mov
inc
insb
mov
pop
jns
sbb
frstor
sbb
mov
xor
pop
mov
or
cmc
loopne
in
xor
sahf
dec
adc
pop
je
cmp
ss
mov
icebp
sbb
dec
add
mov
and
cmp
fldl
jp
mov
jge
sbb
lar
in
dec
movsl
sbb
int3
outsb
adc
subb
mov
xchg
inc
mov
fisubrl
pop
jbe
xchg
imul
jno
lret
sbb
or
mov
push
insl
pushf
aaa
dec
and
dec
stos
mov
insb
lds
mov
pop
sbb
aas
push
pop
mov
roll
mov
jl
xchg
fnstcw
and
xchg
mov
push
lret
or
jg
xchg
repnz
xor
xchg
in
inc
xor
mov
aaa
dec
and
sbb
call
insl
jg
int3
ds
pop
popf
sub
sbb
pop
sarb
leave
jne
addr16
ret
in
call
pop
aas
fcompl
sbb
mov
pop
out
push
stos
pop
jmp
jecxz
loope
repz
push
insl
pop
int3
fmull
or
inc
lahf
stos
lret
ja
ss
inc
cmp
in
xchg
stc
mov
cmpsl
jno
shll
add
sbb
sub
add
mov
mov
test
xchg
mov
add
test
div
ret
cmpsb
cld
mov
mov
test
int3
inc
insl
mov
dec
and
std
inc
pop
gs
and
gs
dec
add
in
xchg
xchg
pushf
cli
out
scas
push
fwait
xchg
adc
insl
jge
sub
push
out
and
xchg
hlt
cmpsl
sub
loopne
mov
inc
mov
sbb
scas
adc
dec
loop
mov
cs
dec
cs
lock
fs
es
add
test
xlat
aam
pop
jp
cmp
inc
mov
cmpsl
incb
push
imul
jmp
lods
cmp
and
stc
cli
mov
mov
sbb
mov
fidivs
push
lds
adc
mov
arpl
pop
inc
cmp
iret
jp
sbb
mov
push
mov
movsl
xor
sbb
mov
push
pop
scas
test
pop
xor
cmp
sti
bswap
fwait
outsl
out
fnstenv
in
in
cld
sarb
sub
pop
loopne
pop
imul
xor
rcrl
out
dec
loopne
adc
test
pusha
bound
pop
in
jnp
add
pop
pop
fnstcw
cmp
adc
push
pop
adc
mov
add
call
inc
push
imulb
int
aas
mov
xchg
into
pop
int
xor
sub
xor
push
leave
loopne
je
xchg
movsb
jbe
cmp
jb
cld
jae
test
ret
xor
sbb
add
repnz
jl
cmp
xchg
mov
imul
add
inc
dec
jno
cld
adc
andb
jge
dec
pusha
std
es
inc
jb
mov
push
cs
ljmp
pop
sbb
mov
lods
rcll
out
inc
sbb
outsb
xor
inc
inc
inc
xor
into
cltd
adc
sbb
dec
mov
lds
cli
xchg
dec
add
rcrb
ret
iret
popf
cli
fs
test
sbb
sub
push
leave
cmp
gs
aad
inc
faddl
imul
dec
or
into
mov
xchg
nop
xor
xchg
outsl
mov
mov
je
out
push
lea
or
lock
or
add
push
adc
or
test
jecxz
sbb
pop
and
pop
xchg
push
push
dec
sub
fwait
das
xchg
mov
ret
sbb
insb
mov
xchg
xorb
lcall
cli
sub
jno
or
and
push
fwait
xor
cld
in
or
xorl
push
pusha
jge
idivl
jp
pop
add
xchg
leave
nop
sbb
cmp
cmp
les
icebp
cwtl
movsb
xor
int3
cltd
add
movsl
mov
mov
ja
inc
push
or
repnz
sbb
cwtl
or
mov
cmc
add
push
jno
leave
push
mov
dec
dec
test
add
and
mov
int
sub
out
dec
mov
pusha
mov
push
notb
jo
mov
dec
jl
lock
dec
adc
push
cmc
mov
popf
dec
scas
jmp
xchg
push
adc
xor
ret
push
addl
out
repnz
ss
gs
and
add
inc
cmpsb
adcl
push
sbb
rcrl
sbb
clc
mov
and
xchg
pop
and
mov
fcoms
out
aam
dec
sbb
jmp
lea
sbb
repz
negb
mov
shlb
mov
lea
cmp
and
mov
push
mov
sub
mov
out
test
cli
outsb
aad
test
inc
ret
inc
lret
or
nop
out
pop
mov
das
push
scas
je
ret
shll
pop
lahf
mov
test
bnd
mov
dec
das
lock
fld1
xor
test
push
addb
xlat
shll
fildll
sub
outsl
out
dec
pop
push
decl
iret
lret
push
movsl
inc
pop
sub
ret
or
inc
loop
lods
out
and
ja
out
push
and
pop
sbb
push
jecxz,pn
sbb
mov
lahf
add
rorl
jecxz
psrlw
fwait
xchg
dec
clc
xchg
inc
push
cmp
push
negb
icebp
imul
lret
ret
sbb
dec
fcomps
out
loope
pop
aam
cmpsb
push
lea
enter
leave
xchg
leave
cmpsb
and
mov
cmp
or
jb
pushf
and
cwtl
push
ret
fwait
mov
pop
and
dec
int3
inc
fs
mov
sub
mov
popa
mov
fnstenv
inc
xchg
jbe
inc
cmp
mov
cmpsb
xor
seta
cmpsb
or
jno
jb
testb
mov
sbb
bound
fnop
and
push
rorb
sbb
add
shll
imul
xor
inc
dec
push
call
scas
in
mov
pop
push
es
mov
mov
xchg
jmp
dec
clc
out
push
cmp
cld
lods
cmc
xor
shr
fcmovu
jne
lcall
and
push
rolb
cld
movsl
dec
xchg
mov
mulb
mov
pop
cli
les
mov
adc
push
clc
shrb
inc
mov
lret
roll
sbb
test
xor
in
mov
loopne
call
jnp
push
pop
fwait
dec
mov
or
out
outsl
cmp
aas
push
sub
mov
mov
push
xlat
int3
nop
sub
cmp
xor
mov
pop
mov
clc
sub
sbb
sbb
mov
inc
pop
dec
fimull
jne
sbb
imul
lods
insl
iret
addb
aam
out
mov
pop
mov
icebp
insl
sahf
jae
cmp
inc
adc
add
out
pop
es
add
cmp
popa
push
push
mov
lods
push
mov
adc
sub
ljmp
mov
sarb
cmp
jecxz
addr16
and
or
sub
movsl
or
push
add
arpl
call
outsl
mov
dec
lods
ljmp
dec
xor
xor
int3
jnp
cld
and
push
push
pop
push
fldcw
call
jmp
sbb
or
pushl
lods
and
mov
sbbl
sub
roll
dec
sub
prefetcht0
insl
mov
mov
ret
push
pushw
sbb
lahf
cmp
pop
push
xor
pop
mov
dec
mov
xchg
jmp
pop
jno
inc
arpl
jle
scas
stos
ss
jmp
push
mov
and
add
daa
out
jne
or
sbb
mov
enter
in
outsb
movsl
inc
shl
divl
sub
push
andb
push
ret
adc
pop
sub
mull
fldenv
hlt
jp
or
mov
fists
cmp
bndstx
fwait
mov
gs
mov
sbb
inc
out
sub
and
add
ret
dec
icebp
jp
call
sbbl
add
push
adc
out
bound
jp
lock
aas
add
dec
lret
shll
pushf
xchg
or
dec
and
cmp
repz
cltd
aad
lahf
sbb
cmp
adc
cvttps2pi
mov
stc
or
adc
push
dec
and
mov
pusha
jmp
std
cli
mov
add
pop
shrb
mov
neg
aam
popa
je
pusha
out
jb
mov
cmc
pop
push
jle
lret
int
ret
sbb
inc
call
jl
repz
fisubrs
dec
xchg
mov
push
sub
xchg
or
xchg
sub
mov
cmp
fdivr
push
pushf
bswap
dec
adc
pop
jae
sahf
inc
mov
xor
sub
jmp
cltd
jae
clc
mov
mul
int3
jns
xchg
pop
dec
or
fs
jo
dec
adc
jbe
cmp
push
leave
clc
xchg
bound
or
lods
pop
mov
je
mov
sbb
insl
inc
mov
pop
leave
rolb
jns
adc
std
notl
scas
mov
stos
jle
into
dec
insl
jl
jno
or
push
sub
xchg
dec
push
jg
xchg
or
aas
repz
in
roll
sbb
mov
pop
imul
mov
jge
addb
nop
pop
xchg
cld
sub
jmp
out
mov
loope
lcall
fwait
adc
jp
cmpsl
stc
sahf
xchg
loop
dec
scas
or
mov
loope
cs
mov
in
pop
adc
lock
aas
jmp
cmp
xchg
pop
movsl
out
push
imul
sti
adc
sbb
in
jbe
das
dec
sub
xchg
fsubl
mov
movsb
add
mov
sub
lea
pop
popa
fs
inc
and
ror
jle
cmp
cltd
aaa
xor
push
fcompl
sbb
mov
in
push
dec
dec
xor
repnz
ja
nop
fs
int3
jge
les
mov
scas
mov
adc
xor
adc
imul
jno
aad
es
js
das
clc
dec
in
sub
outsb
cmc
popa
jmp
arpl
fistl
sub
int3
sub
or
jle
pop
cmpsb
ljmp
repnz
inc
jp
popf
into
adc
int
or
rcrl
xlat
repz
rorb
stos
lret
sbb
insl
rcrl
mov
mov
or
std
pop
adc
add
dec
fwait
add
in
adc
jle
lea
cld
and
cmpl
push
sbb
inc
sar
sahf
jb
add
push
xchg
mov
int
xor
sar
rol
jnp
push
sti
sbb
xchg
out
addl
push
dec
sti
push
js
fsts
daa
jecxz
dec
inc
loopne
or
cs
pop
enter
hlt
ficoms
push
subl
pop
adc
pop
lret
out
lret
lods
ret
mov
sub
xchg
outsl
cmc
jae
adc
div
hlt
rorb
jb
out
outsl
sub
scas
mov
mov
pushf
ret
into
ret
push
sbb
adc
stos
mov
mov
loope
sbb
clc
sbb
lea
cmpsb
cwtl
adc
add
in
cmp
xor
adc
insl
iret
sbbl
mov
fisttps
cmp
int
out
cmp
in
leave
aam
lahf
mov
das
out
mov
mov
jp
sub
shrl
dec
xchg
inc
repnz
cmp
push
push
in
cwtl
fists
mov
ret
fstps
mov
loope
std
lret
mov
mov
testb
cmp
loop
xchg
iret
out
outsl
xlat
cmpsb
push
vmovq
lock
and
push
cmp
sbb
cs
pop
andl
pop
pop
test
pushf
outsb
or
mov
lods
fbld
out
jg
shlb
movsb
fisubs
and
mov
out
inc
mov
cmpsb
push
mov
vpinsrw
and
ljmp
out
push
int3
mov
cli
cmc
sbb
jbe
test
lods
push
mov
mov
dec
sahf
outsl
mov
mov
loop
push
nop
es
dec
jnp
cmp
ljmp
sti
pop
or
cmpsl
dec
out
movsl
stos
dec
jb
sahf
xchg
pushf
pop
xorb
test
xchg
inc
push
cmp
pop
ljmp
adc
adc
add
outsb
push
out
sbb
mov
int3
xchg
sub
cmp
sub
fimull
test
fsubrl
rorb
cs
add
mov
ret
and
mov
lcall
adc
xor
sub
fsubrs
sahf
mov
xchg
push
xor
sbb
cmp
mov
jl
sbb
mov
test
outsb
fdivp
scas
sbb
negl
test
and
inc
push
mov
dec
pop
push
mov
pop
bound
push
fidivl
xchg
ret
pop
in
mov
insb
mov
adc
push
inc
repnz
push
mov
es
mov
push
out
iret
mov
loop
bound
ljmp
mov
mov
dec
aas
adc
lea
jp
insl
jnp
lock
stos
dec
push
or
mov
jge
popa
fnstenv
and
mov
cmc
aas
mov
mov
aad
fcmove
push
cld
nop
sahf
jmp
outsl
pop
cwtl
test
dec
popf
aas
jmp
movsl
xor
or
mov
loopne
xchg
ljmp
jo
add
aad
xorb
mov
lret
inc
sbb
cmp
lods
mov
pop
jo
clc
outsb
cmp
sub
jae
cmp
aam
test
or
xor
xchg
mov
mov
sahf
das
pushf
push
and
lock
and
out
xor
adc
jp
add
test
vminpd
or
sub
daa
cmpsl
cmp
lea
fwait
ret
add
fldl
push
jl
imul
sbbb
idivl
mov
dec
sbb
inc
pushf
hlt
sbb
imul
das
mov
add
mov
or
inc
or
fwait
lods
xchg
cltd
dec
andl
clc
mov
mov
cmpb
cmpsl
int3
into
mov
pop
lahf
js
fidivrs
jp,pn
jnp
sub
xor
scas
dec
mov
and
pop
push
mov
fmuls
lcall
adc
cmc
cmp
sbb
in
movsb
in
lds
jae
mov
gs
incl
and
in
repz
inc
and
stos
add
fildl
and
pop
pop
jnp
loope
adc
sbb
add
call
mov
jecxz
jae
adc
cmpsb
mov
scas
xor
test
pop
or
mov
lret
add
mov
cmp
hlt
aaa
in
int3
loope
cmpsb
mov
pop
aam
out
and
movsb
jle
sub
push
cwtl
dec
ret
fcoml
cwtl
jge
loopne
sti
sub
mov
in
fwait
push
jmp
negb
dec
cmp
adc
adc
cli
xor
repnz
shlb
jb
aas
cmp
xor
testb
shrb
push
adc
adc
fwait
pop
xor
divl
loope
pop
push
xchg
lret
pop
rorb
cwtl
push
ss
das
and
mov
in
jmp
shr
ror
add
out
jnp
inc
inc
sub
mov
jl
call
jne
sbb
lahf
xchg
nop
mov
xchg
jmp
cmpsb
dec
jne
sbb
sub
or
enter
mov
xchg
and
pop
rclb
jmp
mov
roll
repnz
jne
mov
inc
and
popa
mov
fcomps
sub
push
adc
xchg
or
mov
cli
cli
in
jne
fstl
fsubp
scas
addr16
push
popa
nop
add
sub
push
lock
scas
push
cs
fisttpl
divl
jmp
fimull
mov
jns
push
pushf
mov
in
pop
sbb
ja
lea
rcll
arpl
jecxz
addr16
hlt
mov
adc
lret
outsb
scas
and
cmp
flds
enter
lret
stos
out
leave
test
pop
addr16
fcmovnb
and
mov
loopne
fistps
pop
cmc
sbb
icebp
leave
das
sti
cmpb
imull
sahf
pop
mov
mov
mov
cmp
xor
mov
inc
xlat
data16
and
push
movsb
aaa
icebp
pop
repz
aas
adcl
inc
push
fmul
mov
inc
cmpsb
mov
or
and
pusha
cmp
sti
loope
add
mov
mov
xlat
stos
sti
cli
aas
popf
adc
add
push
mov
jge
pop
mov
cmp
and
out
inc
fldl
xchg
mov
and
rol
nop
pop
xlat
push
out
aas
jno
or
cmp
test
loopne
add
jne
xor
or
fcomi
dec
pop
mov
lock
stos
decb
push
mov
jg
fstps
inc
jo
add
ljmp
aad
lret
outsb
mov
mov
mov
repz
int3
add
movsb
push
lahf
pusha
pop
in
cmp
mov
mov
dec
push
mov
cmp
stc
cs
dec
mov
std
mov
push
pop
mov
jge
sbb
call
jbe
jmp
stc
movsb
aas
adc
repnz
jae
in
aad
sbb
shlb
xor
pop
pop
dec
mov
sbb
lret
dec
icebp
mov
jnp
push
jb
adcb
xchg
cmp
push
adc
js
cmp
daa
mov
loope
nop
imul
dec
push
mov
out
fstps
pop
mov
and
mov
arpl
add
sbb
mov
insb
jmp
shlb
cmp
jg
jmp
adc
sbb
fsubp
inc
insl
js
fldenv
ljmp
pop
or
insb
into
jmp
out
out
rolb
out
js
imul
xor
mov
mov
stos
or
push
mov
inc
jmp
imul
mov
and
sbb
or
jg
sbb
jg
mov
repnz
adc
mov
mov
lock
lretw
stc
mov
std
divl
jbe
jne
or
jmp
or
fwait
out
rorb
dec
or
inc
int3
cld
pop
adc
mov
stos
jno
cwtl
sbbl
aad
in
lods
jne
cmp
push
mov
mov
xchg
add
ret
or
lret
cltd
icebp
or
cltd
adc
cmp
bound
divl
pushf
xchg
dec
sbb
mov
xchg
sahf
out
adc
adc
loope
orb
push
popa
lcall
popf
std
xor
cli
push
pop
sbb
loop
btr
les
aas
jecxz
add
xadd
inc
int
fiaddl
push
loop
xchg
xchg
push
subb
mov
or
orl
add
jecxz
pop
cli
push
imul
popa
and
pop
gs
test
add
add
es
cld
sbb
sbb
std
adc
add
nop
sbb
pop
clc
mov
icebp
cmpsl
xlat
dec
mov
mov
xor
es
xchg
pop
add
jno
cltd
pop
nop
fdivs
cmp
push
mov
xchg
repz
es
in
cmpsb
push
add
fmuls
xlat
jb
push
lds
mov
sub
addb
clc
dec
mov
stos
xor
arpl
dec
outsb
dec
ret
and
clc
sbb
jne
mov
cltd
push
call
jo
dec
pop
jl
es
fisubrl
mov
dec
fmul
hlt
arpl
xchg
addr16
popa
outsb
lcall
add
cmp
sbb
adcb
out
cld
pop
xchg
add
add
loopne
dec
pop
pop
enter
ret
shr
adc
xor
mov
jb
xchg
in
aas
jbe
clc
mov
movb
imul
mov
insl
aam
inc
xchg
lret
cli
fsubrl
cmp
jecxz
cwtl
xor
fisubl
push
mov
push
cmpsl
insl
jp
shlb
scas
aam
fwait
je
pushl
fcomip
mov
adc
hlt
pop
imul
mov
jbe
pop
jle
movsl
aad
xor
insl
sar
and
jbe
xor
lret
push
loop
xor
sub
popf
mov
loopne
sbb
shrb
arpl
push
mov
popa
rcrb
clc
jg
rclb
mov
es
dec
in
movsb
sub
xor
push
ja
mov
and
add
add
sbb
ret
push
shrl
mov
pop
test
cs
push
pop
test
gs
or
lods
arpl
lock
dec
adc
mov
jp
outsl
push
out
shrl
xlat
enter
or
data16
out
jecxz
inc
outsl
add
lock
in
jnp
shrb
mov
inc
mov
add
xchg
dec
cmc
sub
lahf
lds
repnz
ljmp
jp
imul
xchg
pop
dec
int
insb
out
sbb
outsl
xlat
lret
xor
mov
mov
xchg
rcrl
mov
inc
popl
or
in
addr16
push
or
pop
inc
pop
xlat
jbe
pop
inc
push
lcall
dec
sub
push
aam
pushf
gs
notb
std
and
shl
pop
add
imul
dec
rcr
sahf
pop
scas
out
inc
bound
mov
sub
or
xlat
sbbb
push
loop
icebp
push
inc
add
adc
divb
sbb
pop
mov
inc
push
push
stos
loopne
cmp
ljmp
push
divl
mov
daa
push
or
add
mov
pop
stos
adc
sub
and
cli
add
fwait
pop
cmp
push
xchg
mov
push
jnp
xchg
and
jge
into
fildll
add
cltd
pusha
outsl
leave
iret
fists
std
sub
push
fwait
scas
cmpsb
mov
push
xchg
pop
aad
test
cwtl
aas
stos
idiv
js
shrl
add
es
test
nopl
adc
pop
sbb
test
rorl
add
sbb
and
xchg
xchg
pop
rorb
lret
cli
mull
and
mov
lahf
jmp
addr16
mov
sbb
push
cmc
dec
xchg
stos
push
push
lds
ficomps
loop
inc
sbb
fcomps
lods
push
mov
lahf
pop
push
pop
jg
fcoms
inc
xchg
ljmp
out
sbb
jle
pushf
fnstenv
mov
push
mov
int3
inc
push
sub
xor
sti
pop
mov
inc
inc
sarb
sub
sub
and
or
test
lret
push
jb
sbb
cmc
out
pop
jnp
or
push
out
cmp
adc
mov
sub
loope
fiadds
popf
mov
aaa
push
fistps
das
bound
lret
push
jne
gs
ret
mov
test
lods
pop
sahf
es
inc
mov
inc
sub
jnp
mov
push
or
pusha
pop
sbb
mov
lock
adcl
adc
xchg
add
jmp
lea
rcrb
stos
fldcw
sbb
mov
mov
cmp
aaa
inc
lret
push
test
xchg
frstor
loopne
addr16
xchg
cmp
adc
lods
jne
and
shl
adc
and
rol
out
xchg
cmp
adc
or
mov
mov
loop
mov
cli
adc
sub
ret
mov
inc
decb
sbb
mov
mov
sbb
xlat
cmp
jne
push
cmp
outsl
push
xchg
addr16
aaa
lock
inc
and
or
xlat
xchg
pop
lock
jp
stos
stos
jle
int3
push
push
test
fnstenv
icebp
jnp
outsb
fstps
jns
jmp
add
mov
stos
add
cmpsl
in
sub
sub
xchg
sbb
push
subl
adc
inc
test
jmp
sbb
icebp
into
push
les
int
fidivl
int3
xor
fsubr
pop
jge
fs
mov
pop
push
ds
inc
add
loopne
cmp
pop
adc
fwait
popa
mov
cmc
mov
fstpl
sti
lds
push
lea
sahf
fldenv
mov
in
sbb
sub
mov
rolb
pushf
int
or
dec
roll
aaa
mov
mov
jge
stos
mov
imul
sbb
jmp
movb
stos
popa
fcmovnu
and
das
shr
adc
je,pt
sbb
sbb
lahf
shrb
pop
sarl
pop
add
jle
imul
push
xchg
shl
push
pop
cwtl
fsubrp
mov
sub
int
imul
or
cltd
movsb
push
dec
enter
dec
cli
xchg
es
adc
pop
pushf
in
jle
mov
sub
rclb
jle
inc
xor
aam
pop
and
out
fldl
add
out
stc
lock
jno
sub
lea
sbb
inc
call
cltd
cli
cmpsl
push
xor
pop
xor
jmp
inc
push
xor
outsl
inc
push
nop
cmp
lock
sbb
jnp
cmpsl
mov
xor
icebp
add
lret
add
ljmp
push
bound
fidivs
push
insb
push
les
frstor
ret
je
push
ja
push
outsl
popa
jl
mov
jp
jno
inc
fisubrs
lahf
es
xor
xor
inc
jns
push
in
pop
adc
or
mov
ljmp
add
fildll
xor
in
movsb
je
dec
cld
xor
xor
mul
mov
daa
cmp
mov
pop
aam
lock
dec
dec
ret
inc
je
jmp
bound
outsb
push
pop
mov
lea
push
fisttpll
sbb
dec
mov
pop
pop
jo
pushf
cmp
mov
in
pop
mov
and
sub
or
je
imul
sbb
imul
or
inc
test
fnstenv
inc
jp
jae
pop
scas
mov
nop
fnstcw
mov
mov
pop
mov
adc
les
hlt
lods
ljmp
cmp
ror
mov
int3
cmp
cli
jno
ret
mov
lods
test
cs
cmp
jo
loop
adc
sub
aad
rcrb
hlt
push
inc
cmp
dec
ret
push
pop
int
xchg
push
mov
sbb
mov
or
xchg
fcompl
sarl
into
loope,pt
jge
pusha
jl
lret
jae
cmp
out
adc
loopne
add
daa
mov
xchg
out
mov
je
sbb
pusha
mov
out
dec
inc
pop
push
cmpsb
ficoms
push
scas
push
out
rolb
or
mov
sahf
adc
jbe
jnp
sbb
pop
cmp
inc
cmp
lods
jns
outsl
jb
ss
jecxz
jmp
out
dec
std
outsb
xor
pop
imul
or
faddl
xor
insb
xlat
mov
frstor
insl
fnsave
stos
adc
fxch
jecxz
in
dec
bound
and
xor
sub
imull
mov
les
ficompl
pop
pop
and
adc
and
lret
xor
aad
adc
ret
pop
fdivrp
add
daa
or
xchg
mov
push
sahf
scas
scas
jno
mov
xchg
mov
inc
xor
mov
mov
inc
gs
jns
icebp
outsl
push
add
xor
sub
cmp
xlat
xchg
sub
test
cltd
dec
sbb
and
dec
and
dec
mov
and
push
and
cs
jle
pop
mov
mov
xchg
test
and
xor
fcom
rcl
scas
cli
out
mov
jno
in
xchg
ljmp
imul
cld
cltd
sub
nop
addb
enter
pop
xor
push
push
mov
mov
loopne
stos
arpl
cmc
sub
jae
push
xor
xchg
xchg
mov
ljmp
adc
fdivrs
xchg
sbb
cli
and
mov
je
stos
mov
int
testl
jecxz
cmpsl
jnp
mov
into
imul
cmp
lcall
mov
sbb
test
sub
dec
aaa
call
fsubrs
fdivrp
xchg
das
or
and
fwait
inc
add
cltd
cltd
and
mov
and
sbb
mov
and
add
ljmp
sub
rcll
jmp
sbbb
dec
xchg
jecxz
ja
push
add
xor
cmc
sub
shrl
mul
inc
pop
sbb
xchg
and
enter
xchg
fstpt
cmp
ljmp
inc
mov
inc
out
int3
aam
sub
cld
add
scas
repz
xchg
xor
inc
jmp
insb
push
jle
stos
pop
aas
rolb
pop
add
jo
adc
xchg
adc
les
mov
ret
outsb
pop
ss
int
cmpl
lds
aad
lahf
push
setne
mov
fisubs
aas
cmp
sbb
pop
push
cwtl
nop
jnp
pop
test
inc
push
sbb
jg
pusha
jmp
dec
adc
pop
fstpt
pop
cli
sti
mov
inc
push
xor
cmp
loopne
dec
adc
popf
and
push
mov
inc
cmpsb
sbb
mov
add
xchg
xchg
jl
lods
leave
push
pop
sbbl
lcall
daa
jno
pop
and
cmpl
inc
add
int3
sbb
pop
dec
or
mov
adc
adc
jno
ds
mov
es
aad
arpl
xchg
subb
mov
rcll
jne
adc
sub
xor
jle
rorl
gs
outsb
test
pusha
insl
sub
orb
fucomi
mov
test
mov
in
repnz
dec
dec
cmp
or
or
mov
rcl
clc
ds
and
xchg
adc
xchg
insb
lcall
incl
adc
fistl
mov
jg
mov
sub
cli
mov
mov
sbb
sbb
lock
jae
outsb
lahf
outsb
mov
add
sbb
xor
sub
out
test
mov
ret
jg
imul
jmp
and
jl
mov
fld
xchg
mov
adc
pop
pop
test
arpl
xor
sub
adc
add
pop
jne
icebp
pop
xchg
dec
push
dec
jle
inc
inc
xlat
cmp
in
and
notl
push
adc
add
gs
lock
sbb
and
sub
jl
loope
push
test
inc
cld
dec
cmp
leave
aas
rorb
iret
mov
add
xor
insl
stc
pushf
fiadds
or
push
lcall
xchg
mov
mov
mov
cmp
and
inc
and
xlat
loope
flds
xor
mov
mov
test
xor
ret
pop
sbb
xchg
jmp
popl
repz
jne
fistpll
in
rcrl
mov
mov
inc
imul
push
sbb
push
fstps
rorl
sbb
dec
ror
jne
add
xor
imul
jecxz
call
adc
clc
loopne
mov
lcall
sbb
mov
xchg
dec
inc
rcr
jle
int
xlat
dec
push
out
dec
jle
mov
or
daa
clc
es
es
push
sub
or
aam
jl
scas
cld
xchg
push
sbb
mov
jbe
push
jnp
inc
adc
fcompl
iret
pusha
fiaddl
je
lea
test
sub
cmp
mov
jb
push
ss
cmp
mov
outsl
lods
jl
gs
xor
adc
or
ds
mov
mov
int3
outsl
or
fwait
rcr
mov
and
xchg
xchg
repnz
inc
stos
or
in
test
mov
xor
sbb
inc
icebp
pop
jbe
xchg
cmpl
and
adc
lahf
hlt
inc
xor
or
or
outsb
inc
test
jl,pn
pop
inc
les
inc
push
imulb
add
es
mov
pop
sub
pop
je
xchg
mov
les
push
pop
test
lcall
push
jp
sbb
and
push
cmp
mov
lock
arpl
jb
push
in
pop
cmp
mov
fldl
scas
fstps
jbe
and
jmp
mov
adc
lods
xor
test
fwait
loopne
pop
inc
xor
lock
scas
lret
jmp
or
mov
inc
xor
outsb
mov
mov
jbe
push
fwait
push
rcll
inc
mov
shll
add
je
xchg
outsb
fdivl
in
xchg
dec
mov
mov
ficompl
sub
cmpsl
xor
inc
fbld
push
lds
icebp
sti
pop
js,pt
gs
test
and
test
dec
repz
les
movl
inc
xchg
jnp
dec
or
ss
mov
and
dec
lret
jge
daa
add
mov
mov
xchg
mov
inc
mov
dec
ret
push
mov
addb
jmp
out
icebp
fisttps
adc
cmp
sub
adc
mov
pop
add
out
and
js
mov
leave
push
jg
cmp
call
shrl
pop
mov
pop
push
inc
mov
xor
mov
mov
jno
inc
and
sbb
sub
outsl
mov
cmp
jmp
subb
pushf
cmp
jle
xor
push
and
dec
and
jne
inc
outsl
mov
adc
sbb
icebp
mov
or
mov
pop
jecxz
xchg
pop
pop
outsl
push
sbb
pop
sbb
jmp
ss
and
fistps
mov
loope
jmp
push
mov
inc
hlt
fs
pop
sub
push
lds
lret
lahf
mov
sbbb
push
scas
push
std
mov
fbld
dec
jo
dec
fmull
sub
mov
loopne
fstps
stc
push
repnz
mov
cmp
xor
jmp
insb
mov
lds
test
sub
xor
xchg
ja
mov
aas
js
or
ss
jb
insb
mov
xor
pop
shll
in
sub
jb
add
dec
jbe
sbbb
lret
gs
mov
int3
pop
dec
push
pop
inc
xchg
fs
pop
cmp
mov
iret
or
mov
in
ds
push
in
popa
add
or
xlat
icebp
mov
cmpsb
sub
push
movsb
in
dec
pop
and
lret
mov
push
cs
sarb
cmp
dec
mov
jne
mov
cld
xchg
movsl
mov
out
repnz
add
scas
xor
mov
addb
push
adc
in
call
cmpsl
cmp
rolb
aaa
and
jne
mov
add
jbe
adc
cmp
fdivs
cmp
stos
sub
aad
stos
mov
xchg
pop
aas
in
fs
sarb
fwait
adc
push
jnp
test
dec
incl
xchg
mov
cwtl
clc
clc
dec
repz
data16
add
xchg
cmpsl
lods
pop
dec
pop
repz
ja
mov
lock
push
fildl
dec
aaa
mov
pop
adc
loope
sarl
incb
adcl
mov
movb
jecxz
xchg
add
movsb
pop
imul
inc
fbld
ret
pop
js
insb
in
sbb
pop
in
fcompl
push
call
xor
cs
adc
sub
int
std
or
loope
mov
pop
dec
push
push
and
jb
add
into
sub
mov
mov
pop
fstpt
popf
iret
mov
addr16
jecxz
inc
es
xor
sub
pop
insl
ret
out
pop
xlat
loope
aam
jne
jae
cmp
iret
mov
adcl
add
outsl
movb
out
roll
nop
int3
or
mov
leave
shlb
cmp
shlb
push
xchg
fisubrl
push
lods
loopne
rorl
fwait
bound
lea
aas
std
mov
bound
adc
sub
xlat
imul
std
pop
mov
dec
dec
push
dec
sub
sub
aam
push
dec
jmp
int
out
fnstsw
inc
lods
stc
add
rcl
jge
pop
cmp
jo
jmp
mov
mov
and
dec
cwtl
pop
std
in
push
push
out
and
xor
outsb
add
fwait
out
mov
mov
xchg
and
push
je
fsubs
sar
dec
sbb
dec
stos
xor
or
xor
sarl
fmull
inc
xor
mov
addps
jnp
dec
lds
add
lods
mov
and
and
faddl
mov
aad
fcompl
and
add
mov
fwait
xor
pop
mov
leave
sbb
loop
addl
movsl
jb
jns
jle
add
gs
mov
mov
sub
mov
sahf
outsl
fsubr
vshufpd
clc
xchg
mov
mov
pop
sahf
daa
inc
int3
rcl
push
xchg
vpunpckldq
lcall
mov
rcrl
or
in
adc
lcall
push
dec
mov
es
cmpb
xchg
pushf
lahf
outsl
out
jnp
jle
cmp
lcall
popa
rcrb
mov
and
and
and
es
jo
ret
inc
cli
mov
mov
xor
and
test
push
jecxz
ljmp
push
ret
lret
inc
sti
sbb
dec
fildll
notb
xor
mov
mov
ljmp
mov
cmp
shrb
jns
insb
fsubrl
out
sub
test
lea
pop
pop
pop
pop
pop
hlt
lcall
shll
loope
mov
mov
aaa
jp
lret
sub
cmp
mov
cmc
jle
mov
icebp
test
int
call
mov
mov
clc
pop
imul
push
sbb
insb
fwait
sbb
mov
pushl
and
sub
push
or
mov
jnp
add
stos
mov
inc
push
movsl
jecxz
mov
aad
nop
cmp
jns
add
dec
add
aaa
sub
out
dec
gs
ret
sahf
cs
test
jge
jns
xchg
rcrl
push
lcall
daa
movsb
and
in
inc
lea
xor
jg
ds
sbb
cmp
scas
imul
arpl
jo
adc
push
or
adc
pop
mov
cmp
orb
lahf
shlb
mov
ss
fucom
clc
pop
sbb
push
mov
testb
adc
sahf
sub
push
loope
movsl
in
lods
inc
jge
cmp
mov
jmp
xor
jle
xor
notl
ror
mov
or
fists
mov
pop
or
dec
mov
cmp
xchg
push
or
sub
out
ja
cmp
mov
leave
shrl
loope
in
add
sbb
adc
cmp
sub
xor
test
inc
scas
je
sahf
out
icebp
test
add
lcall
adc
add
ss
jmp
div
jmp
lea
mov
and
leave
ljmp
adc
cmp
push
and
rcrl
shl
pop
and
lret
push
fs
jb
sub
pop
xchg
pusha
repnz
mov
xchg
testb
popa
xor
je
add
xor
xchg
loopne
add
pop
pushf
mov
divl
outsb
cmpsb
andl
std
popa
jle
call
mov
cmpsl
ljmp
les
rcrl
sbb
xchg
frndint
xchg
xchg
xor
jbe
ret
ficomps
mov
outsb
add
cmp
jns
insb
mov
xchg
int3
mov
les
adc
mov
sbb
xchg
and
jmp
inc
sub
mov
pop
in
mov
and
aad
and
fmull
cld
sahf
and
push
in
push
les
and
dec
push
push
cmp
insl
sbb
or
xchg
das
push
stos
inc
test
or
pop
dec
xor
adcb
sahf
and
adc
mov
imul
inc
mov
rcl
js
xchg
fstl
ret
insb
daa
sbb
dec
sahf
stos
pop
lods
ds
mov
test
lods
pop
mov
jbe
shll
dec
andl
xchg
inc
addr16
push
ja
sub
jne
xor
mov
lods
mov
sbb
cmp
xchg
mov
or
xlat
lret
xor
repz
adc
sub
lds
out
sar
shll
mov
subl
mul
or
xchg
pop
shll
jle
test
lds
test
sub
test
jb
mov
imul
mov
lock
les
push
cmp
sahf
test
add
shrb
movsl
scas
mov
xchg
into
data16
shlb
hlt
pop
or
setle
push
call
xchg
xchg
sahf
mov
sbb
push
mov
mov
arpl
and
mov
repz
lea
lret
push
sub
cmp
cwtl
arpl
lfs
xchg
mov
fistpl
mov
xchg
mov
pop
pushf
cmp
xchg
sti
xchg
lods
gs
scas
out
inc
xor
mov
popl
enter
ret
xlat
clc
loop
xchg
jl
push
sbb
xor
mov
inc
cmpsb
inc
mov
dec
inc
out
jmp
imull
sbb
lret
mov
push
fldenv
das
mov
out
fisubrl
pop
xchg
cmp
lahf
push
jmp
cltd
mov
test
ss
xchg
aam
test
lds
or
push
pop
dec
cmp
mov
dec
ret
jge
out
xor
insl
add
jns
lods
dec
outsb
mov
add
push
xchg
mov
call
xchg
dec
jle
gs
push
fdivs
mov
sbb
push
sub
std
mov
scas
sbb
pop
mov
mov
outsb
inc
sbb
inc
inc
fistpll
xlat
xor
inc
push
test
fdivrl
lcall
stc
loope
mov
inc
jg
cmp
push
mov
movsl
jp
inc
pusha
mov
jmp
pop
pop
ret
dec
loopne
mov
adc
xchg
inc
cltd
or
cli
loope
sar
mov
dec
insb
lcall
or
xadd
cmp
subl
fdivrl
mov
push
movsl
sub
mov
mov
inc
jp
sub
test
inc
add
mov
fisttpl
xchg
inc
mov
cltd
mov
xor
out
cltd
das
and
pusha
inc
insb
inc
hlt
mov
iret
repz
fldcw
lcall
lahf
and
jg
in
sub
ss
jne
push
scas
ljmp
inc
je
xlat
aad
mov
lods
cmp
cli
cli
mov
loopne
jp
xor
and
fwait
mov
inc
push
repnz
rcr
add
push
mov
inc
mov
cld
xchg
ja
dec
shrl
and
rcl
sub
es
cmpsl
fidivrl
mov
mov
xchg
in
hlt
das
movsl
push
mov
rol
shr
xor
insb
jecxz
cmp
icebp
cltd
fs
and
lea
xchg
test
je
hlt
icebp
push
adc
cmc
lock
cld
imul
jnp
jb
cmp
and
ljmp
push
in
adc
loopne
and
mov
cmc
out
cmp
pop
stc
and
fldenv
sahf
ja
pop
xor
movsl
pusha
ss
mov
std
icebp
cmp
fisttpll
adc
push
loop
das
or
pop
setns
je
adc
orb
cltd
sbbb
pop
lds
dec
mov
push
adc
jg
popa
test
gs
sahf
xchg
call
and
xchg
mov
sub
cmp
pop
xor
iret
push
int
mov
shrb
adc
adc
xor
mov
inc
ljmp
pop
adc
ss
and
lods
sti
adc
inc
lret
int
xchg
loopne
outsb
xchg
and
pushf
insl
push
jmp
mov
jo
xchg
pop
xlat
popf
cmpsl
icebp
inc
lret
addr16
fwait
adc
push
or
fists
jno
loop
cwtl
aaa
dec
sti
iret
sub
shrb
or
cmpsb
inc
fs
lcall
push
ja
es
add
negb
adc
mov
xchg
stos
and
lcall
ja
dec
jl
out
gs
aas
aaa
xchg
push
les
ss
and
sub
cld
loop
pop
xchg
popa
shlb
mov
repz
sbb
test
addr16
xor
and
xchg
or
stos
lcall
fs
ljmp
mov
fidivrl
icebp
inc
mov
sub
and
mov
push
dec
lods
lds
mov
sti
push
push
iret
sub
and
iret
adc
mov
bound
sub
sahf
cmp
aas
je
mov
dec
sub
push
call
fdivr
sub
pushf
xchg
insl
mov
sarb
inc
out
mov
mov
cmpsl
cmc
repz
push
dec
jo
add
inc
sbb
mov
sub
and
mov
and
or
xor
in
out
loope
out
sbb
cwtl
icebp
cld
aad
xchg
test
loop
in
mov
mov
ds
iret
xchg
int3
outsb
lret
sahf
nop
popf
out
sub
adc
jo
in
push
cmp
pop
call
push
fs
pop
pushl
dec
into
xor
enter
rcl
int
in
xorl
ret
insl
daa
movsb
rcr
insb
sub
and
jnp
jae
adc
lods
xchg
cmp
iret
flds
cmpsb
inc
je
jbe
cmc
inc
daa
test
xor
dec
movsl
repz
push
repz
xor
call
sub
fadd
inc
js
pop
xor
mov
pusha
push
std
mov
lods
fsubl
jo
lods
ja
and
lds
clc
outsb
mov
ss
jmp
mov
adc
cmp
push
sbb
ss
and
push
dec
xchg
gs
es
mov
lock
lret
cmpsb
mov
adcb
fwait
jl
ss
jno
stos
imul
xorb
push
inc
out
push
jb
push
sti
mov
int3
inc
jo
packuswb
insb
xor
es
lods
sub
stos
inc
ds
incb
xlat
loop,pt
mov
add
adc
aam
jae
cmp
pop
fcoms
sub
inc
fimuls
inc
jp
dec
js
pop
scas
lret
mov
ds
imul
ret
sub
icebp
mov
shll
pop
xor
push
jmp
call
orl
leave
mov
mov
xor
addr16
jo
add
iret
sub
ret
testb
call
dec
or
pop
ljmp
arpl
pop
scas
xlat
or
sub
pusha
mov
and
add
or
cmp
sbb
or
jo
mov
pop
bound
insl
mov
jb
int3
mov
jg
addr16
mov
movsb
pop
xchg
add
pop
mov
dec
xchg
dec
inc
mov
sarb
scas
icebp
adc
scas
adc
add
imul
push
mov
repz
add
xlat
dec
xchg
inc
pop
cmp
shll
cmpsb
loope
inc
fld
or
xorl
or
fsubr
mov
mov
push
jp
pushf
cmp
insl
shrb
xor
mov
sub
loopne
inc
shll
mov
in
xor
push
jmp
int3
lods
dec
mov
xchg
add
aad
les
pop
cmp
js
and
sbb
nop
mov
add
in
imul
outsb
or
xor
mov
sub
stos
loope
roll
clc
jno
fistpll
adc
je
sbb
push
push
dec
pop
adc
ffree
push
xchg
sbb
xchg
dec
test
dec
fs
push
or
mov
popa
xchg
or
out
es
mov
inc
push
pop
cld
jo
xchg
addr16
in
xchg
mov
insb
scas
jnp
sarl
movsb
mov
xchg
int
xchg
ret
mov
call
out
jp
xor
insb
in
xorb
xchg
inc
lcall
and
cmp
jle
lret
jo
nop
pop
mov
in
xor
fxch
fwait
sarl
jmp
push
sub
dec
movsl
andb
jbe
push
inc
inc
pop
add
sbb
cmpsl
sbbb
lods
adc
ds
add
test
lahf
and
push
jg
es
fsubrl
inc
xchg
js
xchg
cmp
add
and
sbb
inc
mov
fdivs
lcall
bound
jge
xor
outsl
mov
mov
jle
testl
sti
jecxz
inc
push
out
lcall
jmp
mov
mov
jo
pop
imul
ss
pop
xchg
mov
sbb
scas
add
cmp
mov
jge
popf
stc
into
jns
pop
cmp
fimull
jecxz
mov
fwait
movsb
mov
std
dec
add
mov
in
sub
cwtl
xchg
jle
stc
inc
orb
adc
push
movsb
movsb
mov
out
adc
cltd
cmp
daa
mov
shl
cmp
add
add
mov
add
xchg
cmp
imul
loopne
inc
mov
or
mov
pop
popa
push
scas
sub
insl
das
jno
mov
icebp
push
sbb
outsb
imul
dec
cmp
pusha
cmp
xchg
testl
xlat
es
test
and
fs
jae
out
pop
sbb
jmp
sbb
lea
jnp
repnz
andl
and
cmpsb
pusha
xor
pop
mov
std
les
scas
shl
mov
insl
imul
inc
adc
es
add
pop
testb
in
mov
sbb
xchg
das
or
and
in
mov
mov
mov
ret
nop
add
mov
add
scas
jg
sub
adc
pusha
dec
dec
pop
pushf
xchg
jns
mov
mov
outsb
dec
and
xor
rcl
xchg
shl
mov
popa
pushf
mov
out
xor
decb
sbb
das
fs
sub
push
sub
xor
dec
in
push
les
test
push
jl
or
pusha
cmpsl
sub
pop
incb
xchg
or
or
hlt
movsl
mul
stos
sarb
aam
pminsw
xchg
sub
lock
lods
mov
out
cld
push
vpaddw
adc
fsubs
cmp
int
addr16
mov
enter
adc
pop
movsb
add
jne
adc
mov
push
mov
or
mov
jbe
mov
and
mov
js
push
mov
stos
inc
adc
xor
inc
pop
cmpsb
dec
pop
pop
dec
inc
jmp
ficoms
mov
std
push
sub
sub
inc
sti
pop
cmpsb
insb
dec
cmp
add
in
lcall
sarl
xor
mov
icebp
insb
or
leave
mov
subb
out
mov
jo
sub
pop
push
mov
std
jg
jg
stos
sbb
push
pop
sahf
or
mov
dec
xor
call
add
jae
or
les
lds
shll
adc
sbb
add
xlat
jge
jle
out
add
loope
push
mov
mov
daa
mov
pop
fwait
sub
dec
mov
push
and
dec
sbb
dec
and
jb
lods
pop
mov
xor
jecxz
cltd
inc
divl
test
cwtl
jecxz
and
lret
lea
jns
gs
mov
mov
mov
lea
or
aam
adc
cwtl
inc
shll
in
mov
xchg
pop
mov
cli
mov
jns
xor
mov
inc
pop
and
cmp
inc
adc
int
lock
out
test
rorb
xchg
push
pop
sbb
pop
jl
cmp
sbb
fcmovnu
cltd
lods
sbb
es
pop
inc
test
cmpsb
push
pop
adc
mov
and
outsb
clc
pop
clc
xchg
pop
popf
cmpsb
add
xchg
in
enter
test
fnstsw
ret
leave
pop
dec
push
leave
or
jmp
popf
adc
add
sbb
in
inc
sti
and
psrad
dec
aas
test
mov
pop
adc
cmp
popa
cmp
sbb
adc
popf
mov
rclb
mov
adc
inc
xlat
rcrl
xchg
fnstenv
daa
cltd
jp
fidivl
test
adc
out
xchg
inc
xchg
sbbl
add
xchg
aad
mov
test
fwait
or
mov
mov
mov
inc
icebp
es
cmp
jbe
pop
mov
inc
mov
stos
jbe
cmp
outsl
lret
mov
pop
ret
pusha
lea
adc
stos
andl
mov
xor
rorb
add
cwtl
loope
pop
and
ja
insl
lods
leave
or
mov
lcall
jb
loop
sub
jae
push
imul
ficomps
call
jbe
adc
mov
test
push
add
push
jnp
xor
pop
subb
out
daa
xchg
sbb
fisttpll
fbld
adc
and
pusha
dec
notb
fs
jns
dec
jecxz
lods
ds
push
cmp
popa
sub
add
loope
xlat
mov
and
inc
out
call
push
cmpl
inc
cli
mov
pop
pop
or
lods
lods
int3
scas
or
int3
insb
push
popl
das
aam
mov
xchg
xchg
test
jl
or
ss
or
cmp
fcoml
mov
xchg
adc
in
loopne
sub
mov
pusha
loope
jecxz
and
mov
sbb
push
add
push
stos
pop
mov
xchg
push
adc
cmp
stc
xchg
daa
mov
xor
jg
mov
adc
rcrl
add
cwtl
das
inc
adc
and
and
sarb
hlt
sti
scas
add
cli
jg
std
or
hlt
mov
repz
pop
and
sub
pop
mov
ret
mov
and
and
dec
jge
push
imul
xor
shlb
sub
lahf
mov
loope
aas
push
xor
fimull
scas
mov
hlt
add
xor
mov
loopne
jge
pusha
and
mov
pop
gs
movsl
mov
jno
sub
js
cmp
xchg
jns
xchg
fildll
and
mov
out
xor
hlt
fimuls
sbb
ja
xchg
and
push
sbb
shlb
ja
jb
jae
lds
pop
bound
pushf
push
mov
movsb
pop
pushf
push
popf
insl
stos
jae
push
fcmovne
aam
aam
sub
add
cs
pop
leave
arpl
mov
sbb
iret
insl
xchg
xchg
pop
dec
jg
fbstp
or
pop
jl
push
adc
rclb
iret
hlt
call
inc
lea
mov
adc
xor
mov
sbb
test
in
les
arpl
out
mov
in
shl
jle
and
add
mov
jp
mov
cmp
cltd
outsl
xor
xchg
push
inc
imul
cli
stos
loope
dec
fisttps
cs
cmpsl
push
dec
mov
popf
scas
fisubrs
outsl
out
mov
dec
and
movsb
inc
cld
sahf
mov
scas
sbb
cmp
pop
scas
xchg
test
cs
nop
and
aaa
and
xlat
cmp
sbb
ret
orl
sahf
clc
mov
flds
sub
shlb
xchg
fsubrp
dec
lcall
sahf
mov
movsb
mov
jmp
pop
xchg
gs
mov
ljmp
xchg
sub
call
jl
inc
cs
add
add
movsl
or
in
xor
outsb
add
adc
mov
loopne
push
enter
popa
fisttps
sbb
sbb
cld
sbb
ja
jecxz
negl
std
xchg
test
and
adc
in
fnsave
pop
mov
lods
bound
mov
sub
outsl
cld
subb
scas
rolb
out
testb
test
mov
fists
inc
jmp
rcr
jl
lahf
std
ret
jmp
sub
cmp
cmp
mov
inc
xchg
pop
cmovo
aaa
sub
pop
or
mov
inc
push
or
inc
outsl
outsb
adc
bound
mov
sbb
add
sbb
scas
pop
push
dec
in
pop
xchg
stos
nop
dec
ret
sbb
mov
stc
mov
je
fildl
push
test
imul
aas
or
repz
dec
lret
mov
mov
mov
rolb
xor
lock
and
cmp
scas
sub
mov
ss
and
adc
mov
push
test
push
lea
dec
push
cwtl
dec
loopne
jb
cmp
sarb
jmp
les
dec
int
mov
ss
cmpsb
mov
outsl
xor
sub
test
das
stos
enter
orl
mov
gs
in
pop
xlat
addr16
xor
fists
pop
pop
pop
adc
stc
adc
jle
pusha
sub
jnp
jbe
mov
fistpll
mov
mov
pop
in
xor
jbe
inc
lea
pop
inc
test
jp
test
mov
mov
leave
popa
or
push
cmp
fnstsw
into
push
pop
adc
push
cmp
dec
and
inc
dec
aaa
inc
adc
mov
lea
lahf
outsl
xchg
stos
inc
loop
stc
pop
es
aad
leave
mov
and
sbb
inc
out
xlat
in
mov
int3
pusha
cmp
xor
fadds
cwtl
add
inc
test
addr16
fbld
aam
lahf
mov
scas
cs
outsl
sbb
addl
inc
pop
movswl
popf
mov
fld1
cmp
pop
xor
push
sub
jae
jle
pop
call
xchg
jb
adcl
lods
in
or
in
jecxz
push
push
dec
xchg
jb
or
pop
inc
movsb
lock
fstpt
jge
cld
pushf
push
repz
lods
fiaddl
imul
arpl
gs
cld
sbbb
and
inc
sti
xor
mov
mov
sbb
dec
jno
and
push
xor
jp
sub
jno
ljmp
imul
xor
push
lret
push
enter
add
insb
pop
fs
add
aam
gs
out
or
or
out
sbb
adc
add
or
lock
push
jmp
lahf
xor
mov
inc
inc
dec
adc
mov
mov
mov
dec
jb
imul
int
xchg
and
rclb
int
sbb
ret
scas
and
push
mov
mov
mov
imul
dec
daa
cli
mov
adc
stos
or
addb
jns
outsb
lock
test
sbbl
pop
inc
push
nop
add
roll
ret
idivl
push
adc
and
ds
rorb
icebp
repz
inc
loop
mov
cmpsl
inc
repnz
inc
sub
xchg
inc
popa
sub
cmp
loope
sub
mov
or
test
mov
dec
nop
mov
int3
sub
les
cltd
inc
shll
in
idiv
pushf
leave
imul
imul
or
push
sarb
add
and
pop
lock
dec
adc
xorl
pop
add
je
mov
pushf
imulb
mov
ficoms
push
push
cmp
cmpsl
subps
add
push
pop
aam
mov
pop
ud0
fcomi
jb
loop
pop
and
mov
dec
ss
adc
loope
idiv
lock
rol
rcrb
fwait
sahf
xchg
adc
lahf
and
pop
nop
push
push
pop
out
sub
push
jns
cmp
or
mov
and
jo
xchg
mov
cld
inc
jle
push
or
adc
out
sbb
or
outsb
xchg
fisttpl
test
das
cmp
mov
subl
or
mov
ja
popf
xchg
jnp
sbbb
mov
daa
xchg
adcl
mov
das
xor
sub
in
inc
add
dec
adc
in
mov
xchg
in
mov
call
or
cld
int3
outsl
xchg
sub
lahf
stos
out
icebp
cs
or
in
outsb
aam
jo
rcrl
lock
aad
dec
leave
aam
enter
orl
xchg
mov
mov
pop
loope
rorl
das
mov
ds
fs
dec
mov
pop
rcl
mull
je
adc
dec
repnz
std
adc
mov
and
push
push
inc
loopne
pop
out
gs
inc
iret
mov
aaa
inc
inc
scas
mov
jb
xchg
es
sbb
push
rcl
das
pusha
mov
rol
jb
xor
xchg
push
imul
xlat
push
mov
pop
cld
push
dec
cmpsl
jle
sti
popf
scas
int3
cmp
fwait
pop
mov
inc
inc
pop
ret
ret
sub
add
add
and
cmpsl
sti
repz
repnz
xchg
sti
mov
mov
pushf
mov
adc
movsl
lret
sbb
out
stc
ror
pop
xor
inc
in
test
inc
jge
addb
or
jne
popf
sbb
frstor
adc
gs
cmp
jnp
adc
addr16
test
mov
ror
mov
push
mov
push
xlat
xor
xchg
mov
inc
add
aam
aaa
mov
mov
out
iret
mov
arpl
stos
inc
xchg
and
mov
aam
inc
lcall
mov
enter
daa
lea
out
xchg
call
sub
cmpxchg
rol
mov
or
loope
add
ss
test
js
cs
enter
dec
cmp
xchg
jmp
mov
inc
push
mov
pop
mov
jmp
sub
loop
ljmp
dec
aaa
sub
lods
lcall
movsb
pusha
adc
movl
adc
sub
scas
mov
loopne
in
sub
popf
int
xchg
sbb
int3
lea
shl
adc
mov
jnp
imulb
ljmp
aam
or
hlt
mov
rclb
lcall
push
loopne
mov
pop
je
jo
xchg
cmp
xchg
roll
or
clc
jle
movsl
repnz
mov
int3
fmul
jl
loop
out
mov
jl
pop
inc
shlb
insl
ja
push
mov
lock
mov
push
in
mov
ds
loopew
sub
fsubrl
xor
imul
and
cld
lcall
lahf
cmc
loopne
popf
add
jle
push
jecxz
xorl
pop
mov
jno
pop
icebp
in
xor
add
sub
xchg
or
icebp
fwait
and
pop
cmpsb
xchg
arpl
dec
es
cmpsb
scas
pop
mov
cmp
sahf
inc
inc
lock
xlat
stc
pop
lock
aaa
and
dec
sub
fdivrl
mov
jnp
adc
cmc
pop
stos
mov
mov
push
shll
shlb
mov
cwtl
cmpl
sbb
xor
repnz
or
sub
push
xor
cmp
insb
fisubs
gs
inc
mov
mov
mov
pushf
je
jnp
rcr
sahf
ret
mov
mov
mov
popf
jno
aad
clc
out
inc
popf
cmp
sub
fdivs
push
ret
out
sub
jmp
int3
dec
dec
das
xchg
js
repz
dec
data16
jns
jne
nop
mov
stos
sub
fldl
jmp
ljmp
dec
lea
nop
adc
out
imul
fistpll
mov
test
jp
mov
movsb
pushf
fldenv
cmp
xchg
fsubr
adc
enter
lahf
jle
inc
lock
sbb
cmpsl
xlat
adc
push
pop
push
cltd
shrl
cmpsl
ds
in
cmp
mov
xchg
pop
shlb
stos
fisubrs
pushf
adc
inc
fbld
lret
mov
xchg
test
mov
add
mov
cmc
in
arpl
inc
std
pop
enter
loope
xor
iret
js
lret
xor
test
mov
push
outsb
insb
adc
sti
lock
pop
sbb
test
scas
mov
out
je
mov
jne
repz
ja
sahf
push
lods
movsl
and
dec
gs
movsb
xor
jle
mov
jmp
xor
gs
js
fldl
shl
int
mov
stc
sbb
xchg
mov
imull
in
push
ret
pop
fiaddl
arpl
and
push
imul
sub
ret
mov
push
clc
movsb
xchg
data16
fwait
and
dec
popa
sbb
jle
aaa
lret
mov
pop
mov
add
dec
sub
sub
sbb
leave
and
push
subl
into
xor
pop
push
xchg
gs
inc
loope
adc
add
adc
fcoms
sbb
sbb
and
mov
or
orl
ss
sbb
scas
push
cld
adc
movb
and
push
ja
lret
fidivs
or
arpl
divl
pushf
push
lret
leave
cmp
arpl
enter
adc
pop
scas
movsl
bnd
or
add
pop
push
xlat
inc
call
mov
and
sbb
int
sar
int3
insl
ja
out
outsl
ljmp
jp
mov
decb
fs
stos
int
push
or
adc
loopne
xor
dec
adc
fnstcw
lock
push
popa
jne
in
insb
fmul
push
aas
mov
dec
ret
xlat
jecxz
push
rol
adc
dec
jo
ja
push
fsubl
push
ds
jle
mov
adc
fbld
jns
rcrb
mov
sbb
or
popf
jnp
add
aad
inc
testb
rolb
roll
push
fadds
adc
lcall
and
hlt
ja
mov
sbb
cmp
xor
std
fldcw
shlb
aad
testl
jo
xchg
push
sub
push
add
mov
and
fwait
iret
dec
icebp
and
sub
testl
sbb
gs
cmp
dec
sbbb
test
mov
pop
ret
mov
mov
inc
sar
dec
xor
sti
stc
lret
push
iret
pop
sbb
and
ret
inc
repnz
test
xchg
or
pop
xor
and
fdivrl
std
fistpll
mov
cmp
je
lds
jb
cld
cmpsl
popf
cwtl
jmp
in
aaa
inc
pop
sbb
xlat
jmp
pusha
insl
scas
ficompl
xchg
xor
mov
xchg
outsb
mov
imul
cmp
mov
out
mov
mov
push
mov
inc
loope
mov
lods
das
mov
pop
sti
mov
leave
sbbl
cmp
repnz
ss
js
cmp
adc
xchg
test
and
adcb
sahf
and
mov
xor
fs
icebp
add
stos
dec
loopne
pop
ret
xor
rorl
ljmp
cmp
cwtl
imull
xchg
insl
lcall
je
cmp
xchg
mov
sub
loope
mov
xor
mov
stc
mov
lds
push
mov
int3
add
xchg
test
adc
lock
mov
and
cmp
jns
cmp
enter
adc
in
daa
dec
inc
sub
mov
pop
nopl
or
arpl
jno
cmc
stc
pusha
jmp
mov
jmp
and
les
pop
fs
mov
sbb
and
incb
cltd
and
dec
mov
mov
xchg
aad
into
push
aas
lods
inc
das
ficompl
mov
mov
stos
daa
cmp
add
cltd
mov
shrl
mov
lcall
push
lock
pop
push
mov
gs
dec
lret
inc
flds
cmp
push
cmp
rcrl
lods
xor
mov
mov
cli
lods
sbbl
int
sub
dec
jg
inc
adc
out
jmp
xchg
stos
out
mov
mov
pop
aas
aam
mov
fadd
push
inc
sahf
mov
and
cmovo
mov
jl
in
or
imul
jns
cmpb
pop
mov
ficompl
and
aas
pop
jg
fiaddl
dec
aam
sub
xchg
mov
aas
push
jle
add
push
movsl
scas
add
sub
fidivrl
jno
xor
adc
outsl
add
xor
inc
fdiv
fstl
and
pop
iret
lret
insb
xchg
test
jb
movsl
subl
mov
push
loopne
bound
pop
cwtl
dec
cmpsl
pop
mov
inc
sub
push
arpl
popa
out
dec
enter
dec
xchg
jnp
in
int3
dec
dec
add
mov
imull
stos
adc
jl
mov
sub
ds
test
rolb
and
ret
adc
sbb
pop
adc
repnz
xchg
jle
test
loop
pop
jecxz
lcall
bound
pop
dec
adc
shl
mov
push
fistpll
clc
jp
jge
and
mov
ja
dec
insl
mov
filds
fisubs
arpl
les
cmp
xchg
fcmovnb
or
xchg
repnz
ljmp
cmp
int3
call
push
xor
mov
in
lret
sub
push
int
sar
insb
sub
xchg
xor
or
dec
in
push
insb
xlat
mov
movl
or
add
insb
or
stc
iret
js
ds
mov
pop
inc
adc
push
push
mov
call
add
push
sbb
sbb
mov
mov
out
jmp
repnz
hlt
cmpsb
sub
aas
adc
or
sbb
adc
test
sbb
jns
in
xchg
pop
rorl
push
popa
push
pop
pushf
leave
mov
add
gs
idivl
pushf
loope
pushf
loope
and
sub
imul
fisttps
lret
cwtl
pop
pop
lret
xlat
shlb
xchg
ss
aam
mov
fs
lods
and
jae
mov
addr16
xor
fbstp
adc
dec
and
xor
js
jne
xor
into
stc
mov
movsb
xor
popa
pop
pusha
jmp
jg
js
mov
xchg
sbb
movq
aad
sbb
int3
add
or
dec
fsubrl
mov
dec
adc
mov
dec
addr16
lea
mov
movsb
xchg
adc
in
jge
push
inc
sub
and
pop
pop
dec
push
xor
xor
stc
cvtdq2ps
or
fistpll
pop
mov
aas
stc
pop
imull
shlb
jns
xchg
jmp
pop
iret
loop
int
fstps
sub
movsl
test
lahf
xchg
call
mov
xor
or
movsb
loopne
test
xor
sub
xchg
mov
sbb
push
cmpl
xchg
and
xor
inc
mov
mov
loop
sub
in
mov
mov
jbe
daa
lock
mov
fcomps
popa
and
ss
repz
or
dec
add
fstl
stos
jns
arpl
inc
sub
mov
xor
xchg
sbb
mov
out
ljmp
outsl
xchg
imul
in
mov
adc
jno
sti
out
bound
xlat
cmpsl
loope
pop
or
mov
dec
push
xor
xor
ljmp
mov
loope
lock
xorb
jecxz
inc
lea
repz
mov
push
sbb
les
dec
repnz
mov
fildll
mull
test
ljmp
movsl
push
sbb
cmpsl
out
sub
cmp
ja
pop
jns
adc
fsubl
test
ljmp
jmp
outsl
xchg
inc
es
stc
mov
cmp
mov
pop
dec
jmp
dec
xchg
cmp
cli
insl
in
out
adc
or
imul
les
fs
push
or
mov
and
jnp
jo
int3
in
xlat
adc
test
sbb
cmp
imul
sub
shrb
rcrl
inc
pop
outsb
stos
dec
lret
push
xor
insb
mov
cmp
pop
sarl
inc
dec
xchg
adc
push
lret
mov
sub
dec
cmc
inc
fwait
sti
andb
push
inc
lods
or
jo
addr16
pop
in
cmp
adc
shrl
lret
adc
aas
and
adc
or
hlt
inc
dec
nop
dec
inc
xor
cmp
jno
rcll
dec
das
sub
outsl
xchg
adc
push
aaa
adc
inc
mov
nop
stc
sbb
cli
xor
mov
sbb
aam
xor
mov
jne
push
das
dec
mov
xor
pushf
jb
mov
mov
push
ffree
dec
cli
jle
xor
stc
push
incb
lds
adc
xchg
and
subb
lcall
addr16
cmp
leave
ja
aam
mov
and
mov
inc
mov
cmp
xchg
lods
in
sbb
jns
aam
add
cmp
jle
lods
inc
popa
pusha
daa
xor
cmp
xlat
mov
jl
fucomp
mov
stc
pop
in
and
mov
popa
enter
push
pop
stos
dec
xchg
movsb
dec
cmp
and
mov
xchg
or
or
add
and
nop
shrl
out
stos
jl
cmp
or
pop
push
cmp
push
jbe
pop
repz
cmp
sbb
or
daa
mull
mov
pop
aad
dec
dec
xlat
push
insl
or
xor
jp
adc
sub
push
cltd
cmp
sbb
movl
in
mov
push
shrb
mov
jge
out
leave
mov
xor
mov
test
lds
mov
out
sbbl
mov
dec
enter
push
jne
subl
lret
idivb
mov
push
call
in
push
test
ret
movsl
adc
ljmp
lret
in
mov
loop
test
fwait
mov
xchg
cwtl
or
fcmovne
mov
pusha
in
rcrl
popa
inc
repz
insb
cmp
into
repz
andl
adc
mov
enter
push
cmp
ja
test
rorl
mov
mov
jae
in
mov
testb
pop
lret
mov
sbb
mov
mov
and
call
jecxz
jge
sub
hlt
mull
lods
popa
fmuls
ficomps
in
or
imul
loopne
lds
and
jae
ljmp
add
ss
repnz
sub
sbb
mov
popa
cmp
xchg
jnp
filds
dec
data16
push
add
jecxz
leave
add
xor
scas
ja
in
sub
nop
ret
push
sub
mov
out
jns
movb
pop
mov
sbb
xor
pop
addr16
xchg
je
sub
or
or
lea
loope
imul
xor
mov
mov
or
and
jg
insl
mov
in
imul
mov
orb
push
jle
lds
aas
lret
xlat
xchg
pop
je
xchg
xor
dec
pusha
mov
int
imul
mov
or
rcrl
xor
scas
cld
xor
sub
sbb
sbb
cmp
pusha
aam
mov
adc
or
adc
push
push
icebp
outsl
in
cltd
inc
pop
stc
mov
add
or
idivb
popa
shr
cld
loopne
mov
hlt
adc
insb
jmp
int
mov
mov
adc
repz
insl
dec
sub
push
test
mov
ret
pop
push
bound
adc
insl
in
mov
fsubr
in
ret
cmc
push
fs
mov
inc
jb
push
in
loopne
daa
dec
mov
arpl
fdivrl
test
js
and
adc
push
divb
cmp
sub
cwtl
sbb
stc
movb
jg,pt
sbb
mov
sti
movsl
imul
mov
add
imul
sub
add
sub
jle
addr16
or
in
xchg
outsl
mov
adc
gs
adc
arpl
mov
mov
das
loopne
or
bnd
sahf
repnz
nop
pop
sbbl
js
adc
push
rcrb
gs
mov
sub
sub
jge
loopne
test
add
mov
stc
lret
add
dec
xor
mov
sub
cwtl
jno
out
pop
pusha
lods
sub
jnp
jns
cmp
imul
enter
das
or
lds
mov
iret
dec
sub
jnp
jnp
addr16
out
je
mov
outsl
das
repz
cld
xchg
jo
movsb
lods
push
sbb
movsb
and
mov
icebp
jno
clc
imul
std
mov
mov
inc
rcrb
mov
jbe
scas
mov
xor
mov
cmp
and
dec
inc
and
pusha
jmp
pop
inc
sbb
stc
rcl
ror
rcrb
or
aaa
imul
or
int
inc
lret
ret
gs
cld
and
xor
dec
aam
jge
fwait
sub
xchg
jmp
int
add
movsb
xchg
ljmp
mov
add
xor
inc
pop
sbb
je
cmp
ljmp
fdivl
test
jge
cli
sbb
rolb
push
or
mov
and
cltd
inc
cmp
scas
aas
movsl
inc
imul
fstpl
sarb
aad
sbb
push
mov
fwait
jle
ljmp
dec
or
jns
jns
enter
cli
leave
or
mov
out
pop
xchg
sbb
xor
xchg
clc
jmp
lods
data16
ja
xchg
pop
xor
aam
and
loop
mov
dec
mov
adc
lds
shr
jb
stc
sub
push
inc
je
dec
subb
in
and
repnz
clc
inc
pop
ret
push
out
mov
jb
sbb
xchg
add
leave
or
jno
jno,pn
sti
push
mov
mov
in
flds
daa
lock
testb
mov
dec
jbe
out
ret
xchg
arpl
addr16
pop
mov
dec
sbb
xchg
dec
xor
ss
data16
fisubrl
and
loope
movsl
jmp
enter
or
push
sbb
push
stos
mov
jo
mov
fisubs
popa
outsl
in
sub
jl
adc
divl
addr16
push
stos
fs
lods
gs
out
pop
fidivrs
test
rcll
icebp
je
fadd
sub
out
jmp
pushf
adc
loope
mov
je
mov
jmp
mov
fcmovne
dec
jmp
sub
inc
cmp
ds
sahf
aas
in
leave
or
gs
inc
mov
in
ficoml
lods
sub
pop
stos
mov
or
scas
inc
push
jo
xor
pop
mov
mov
xchg
mov
outsb
adc
pop
pop
scas
repz
sbb
repnz
dec
and
push
imul
and
fwait
cltd
rcrb
mov
pushl
subb
ret
lahf
cmp
or
pop
xor
std
xchg
lods
xchg
movsb
sub
add
add
dec
lods
imul
xor
fisubrs
dec
arpl
cmp
subl
jg
popa
pop
dec
shrl
xor
push
pop
dec
orl
sub
mov
or
cld
insl
jo
jne
xor
gs
xor
cmp
fstps
adc
shl
addl
cltd
imul
outsl
push
pop
fs
js
and
nop
push
or
in
and
enter
roll
and
mov
and
xchg
mov
ljmp
lea
push
cwtl
xlat
aam
lahf
int3
repnz
pop
dec
scas
mov
pop
shlb
shl
sbb
mov
xchg
adc
dec
dec
fidivrl
and
movl
xchg
pop
adc
cld
adc
adc
inc
or
divl
repz
test
stc
rol
in
pop
pop
pop
mov
xchg
or
cmp
pop
fwait
or
cmp
je
mov
inc
xchg
aam
rorl
in
aam
shrl
inc
push
pushf
sbb
jo
addr16
adc
lods
mov
addl
pop
mov
dec
pop
add
xlat
add
sub
push
ficoms
sub
loop
ret
sbb
push
repnz
dec
jmp
push
xor
jge
fisttps
add
cmp
fimuls
fdivs
repz
cmp
test
aad
or
xchg
mov
mov
cltd
push
add
lret
inc
xor
dec
out
gs
fwait
enter
jmp
push
out
inc
cmp
adc
mov
add
and
mov
out
fstpl
aad
mov
iret
outsl
movsl
cmp
jge
shlb
push
and
mov
rclb
add
lock
filds
shrb
xchg
mov
sub
add
test
sbbl
lcall
push
mov
sub
xor
sub
or
jnp
in
sub
shlb
sub
pop
in
and
das
fidivl
mov
jno
inc
cmp
hlt
mov
xchg
ja
popa
aam
or
test
fnstsw
lahf
add
xchg
divb
jbe
stc
arpl
into
pop
repz
xlat
pop
sahf
punpcklwd
sub
andb
mov
and
jnp
pusha
dec
sbb
dec
sub
adcb
mov
xchg
in
or
mov
test
incl
sbb
cmp
aas
xor
test
add
aaa
push
aam
sarl
or
fsubs
inc
std
loope
xchg
std
out
jg
sub
enter
add
ss
insl
test
scas
pop
js
divl
jo
push
sbbb
mov
test
sbb
and
andl
lds
cwtl
push
push
adc
and
adc
cmovs
pushf
xchg
dec
push
dec
ret
cli
out
cmp
fnsave
jecxz
push
pop
data16
stc
pop
ss
iret
stos
sbb
bound
arpl
mov
or
sub
push
fdivrs
ret
cmp
fiadds
or
jl
add
daa
cmp
mov
mov
loopne
xor
inc
pop
in
pop
adc
cmpsl
mov
ljmp
aas
inc
les
fistl
add
out
mov
ljmp
mov
movsb
jo
outsl
cli
test
leave
xchg
pop
leave
mov
xor
insl
lahf
cmp
daa
xor
push
jo
sub
sbb
fstp
and
dec
sbb
pop
lock
imul
mov
add
int3
and
sub
mov
add
cmp
xor
enter
pop
cmpsl
inc
mov
jae
jae
lods
push
mov
mov
mov
in
dec
mov
mov
rclb
and
dec
lahf
js
lods
dec
jg
xchg
jne
xorl
mov
adc
jmp
mov
and
dec
dec
in
icebp
sahf
ss
cmpsl
xor
pop
xchg
xor
das
lea
and
fdivp
and
adc
and
dec
test
out
or
sbb
stos
out
xorl
adc
sub
or
aaa
or
xchg
pop
leave
clc
stos
stos
xchg
cmp
cmp
fistpll
pop
mov
inc
dec
popa
jno
lods
imul
inc
mov
test
loope
add
push
mov
bound
in
jmp
pop
loopne
movsl
out
sbb
or
fdivl
push
add
jmp
adc
cmp
lret
xchg
xor
jae
sub
and
and
xor
mov
mov
sub
add
insb
ljmp
inc
inc
mov
pop
add
xchg
adc
sub
add
pop
pop
loopne
ja
mov
mov
rcl
out
sarl
or
or
push
fnstcw
movsl
or
aam
jle
insl
xchg
jae
push
sbb
in
pushf
lods
jmp
pop
push
mov
stc
cs
mov
or
fadds
jle
inc
inc
jbe
sbb
imul
insl
dec
dec
adc
lcall
cmpsb
pop
jg
insb
add
lds
rcrl
or
pop
dec
sar
jecxz
jl
and
pushw
test
dec
insb
pusha
sbb
mov
add
pop
jae
push
jo
jle
xor
dec
lahf
cmpsb
or
jecxz
sub
xchg
stos
dec
das
adc
sub
sbb
lds
popf
mov
ficoml
iret
inc
dec
mov
sti
adc
ret
shl
andb
pop
pop
lcall
ret
sahf
call
mov
xchg
lods
stos
and
outsb
mov
imul
shrl
push
jne
inc
mov
repz
sti
jb
jp
enter
jb
cmp
iret
ja
mov
dec
push
add
inc
xchg
and
orl
int
popf
sub
daa
mov
stos
and
and
rcrb
xchg
outsl
mov
out
xor
lods
psubb
popa
mov
xor
pop
push
mov
hlt
push
cmp
pop
repnz
xchg
pop
push
or
popa
cmc
adc
inc
dec
ds
sahf
mov
sarl
sahf
and
or
xchg
mov
sbb
fcmovb
xchg
sub
jmp
mov
add
out
push
fisttpll
mov
lahf
test
roll
aad
gs
pushf
stos
push
push
fsubrl
sub
cmp
rcrl
sti
out
imul
and
scas
mov
les
xor
jno
mov
xchg
inc
sub
test
cmpb
and
and
clts
stos
xchg
adc
jo
sbb
adc
shrl
pop
lds
popf
pop
xor
icebp
jno
pop
movsl
scas
int3
roll
jnp
or
pop
aas
sub
mov
or
stos
pushf
es
or
pop
sub
xchg
into
ret
dec
lock
mov
stos
xchg
repnz
xor
sbb
jecxz
sar
sub
and
idivl
adc
push
adc
jnp
aas
repnz
jns
sti
dec
inc
es
lds
in
mov
daa
test
popa
sti
loopne
loop
sbb
loopne
ljmp
jl
sarb
sti
lret
cmp
mov
add
mov
jmp
or
insb
dec
fimuls
sbb
shlb
into
mov
outsb
mov
xorl
loopne
jge
sahf
dec
ss
xchg
xchg
sbb
push
jnp
rcrl
mov
jae
cli
adc
jo
out
xor
loop
pushf
fisttps
pop
pop
movsl
out
rol
aam
adc
xor
dec
scas
mov
xor
jecxz
roll
outsl
xchg
lahf
cltd
mov
jecxz
loope
push
aad
fldl
lcall
sti
cmp
dec
inc
pop
cmp
xor
xchg
push
mov
sbb
fnstcw
sbb
notl
cmp
sbb
addl
xchg
cmp
aas
xchg
cmp
jmp
inc
es
xchg
sbb
outsb
adc
mov
ja
ficompl
cmp
or
lock
fsubrs
jg
cmpsb
lahf
xor
mov
dec
xlat
sbb
insb
sub
mov
hlt
pusha
das
or
out
jnp
pop
push
cmpsb
push
mov
fldenv
sbb
cltd
ret
cmp
nop
lods
adc
inc
sub
pop
popw
inc
sub
pushl
je
repz
xor
pushf
pop
add
nop
scas
and
inc
or
in
add
or
imul
hlt
jge
aad
lcall
enter
dec
xchg
xlat
mov
adc
push
dec
cmp
jmp
add
push
call
out
roll
cltd
and
add
and
add
mov
out
call
mov
test
mov
sbb
dec
jae
mov
jmp
cmp
add
and
pop
test
sbb
jb
ror
jecxz
repnz
movsb
lret
push
out
xor
loope
adcl
int
jns
cli
test
pop
aam
int3
ds
jecxz
stos
cmpsl
inc
in
sub
scas
jp
mov
xchg
ja
xlat
shll
dec
mov
sub
and
push
ret
sub
fwait
xor
jge
call
cmp
jg
pop
mov
pop
mov
pop
sbb
xchg
test
out
in
sbb
add
mov
inc
imul
jno
sub
jb
add
jg
outsb
out
xchg
mov
fucomip
cmp
fwait
mov
sub
or
adcw
jbe
sbb
xchg
pop
gs
push
out
cld
loope
outsl
dec
sbb
dec
jl
or
push
cld
push
sahf
aad
inc
pinsrw
and
mov
lahf
xchg
popa
je
push
cmp
xchg
loope
int
add
mov
mov
sbb
aas
push
in
pop
sub
xor
gs
adc
push
xchg
add
jae
add
jmp
cmpsl
psubb
add
pop
stos
mov
insl
dec
insl
jns
fwait
leave
mov
outsl
xchg
lret
jb
xchg
push
add
add
or
das
insb
sbb
jl
movsb
adc
push
mov
sti
mov
lods
xor
jp
add
into
aam
sbb
incb
xchg
jg
enter
mov
outsl
jo
sbb
jmp
rorb
mov
wbinvd
xchg
ds
or
lea
sbb
mov
mov
lahf
jne
pusha
inc
mov
rcll
dec
mov
jns
fisubs
ficoml
mov
dec
flds
cmp
and
mov
inc
sti
adc
fildl
subl
ficomps
mov
push
jbe
fwait
in
sbb
sahf
xlat
cmpsl
iret
incb
add
sbb
push
jmp
out
cltd
orb
add
xchg
decb
loope
cmpsb
mov
add
or
or
fdivrl
pop
adc
sti
repz
xchg
in
std
sbb
jo
and
jmp
arpl
mov
mov
popa
xchg
aas
and
icebp
jmp
xchg
pop
test
addr16
daa
xchg
fisubrl
test
pop
clc
or
les
ret
push
push
adc
pop
pushaw
jno
cmp
ret
lret
push
out
mov
dec
push
loop
in
out
in
incb
call
jns
inc
cld
xor
sbb
mov
xor
cwtl
add
jg
sahf
sub
bound
cmpl
aas
push
in
hlt
out
and
sbb
sub
adc
jbe
out
cli
mov
cwtl
jae
mov
dec
dec
xor
loope
shll
push
dec
xlat
jle
hlt
out
dec
out
in
mov
fdivl
add
jl
adc
paddd
inc
lret
dec
jle
cmpsl
and
aas
mov
inc
sbb
ret
xchg
push
mov
xchg
jg
xchg
jne
inc
lock
insl
imul
repz
loope
das
pop
mov
scas
nop
inc
inc
or
dec
iret
mov
aaa
pop
call
ds
in
rolb
ss
sbb
daa
jl
add
push
sub
outsb
aam
xchg
test
xor
insl
pop
cli
push
dec
mov
add
ljmp
pusha
xor
stc
fwait
mov
out
or
jnp
xor
ds
test
pop
pop
push
lods
ja,pt
repz
aad
inc
cmp
mov
dec
rcrl
dec
dec
inc
es
sub
sub
jns
movsb
mov
mov
aam
test
orl
stos
or
push
shl
fdivrs
arpl
into
int3
push
cli
lock
jge
test
test
add
add
outsb
daa
xchg
push
cli
insl
idiv
fs
jle
stos
movsl
test
std
sub
inc
xor
pusha
out
mov
pop
lea
repnz
insl
add
repz
push
mov
ja
add
test
xor
iret
adcb
lcall
test
test
fucomip
jno
dec
push
or
mov
mov
adc
adc
push
rcrl
adc
sbb
daa
mov
push
int
xchg
movsb
jnp
inc
pop
orb
inc
rorb
xchg
repz
cmpsb
sbb
mov
jne
xlat
jns
ficomps
test
lret
mov
xchg
repz
pop
xchg
stos
mov
sub
jmp
aam
sbb
sahf
je
adc
fildl
add
cmpsb
pop
fwait
sub
mov
mov
mov
data16
dec
and
fisubrs
fdivrs
ss
stc
mov
pop
mov
out
cmp
adc
in
jnp
mov
or
pop
ret
jle
inc
mov
mov
lods
js
lds
scas
test
sahf
sub
in
imul
inc
mov
jo
and
pop
mov
pop
mov
cmp
aas
nop
inc
jle
mov
xor
mov
les
pop
xor
mov
sub
sub
testb
push
scas
out
in
jge
enter
pop
and
outsl
fsubrl
sub
mov
pop
jno
hlt
lea
or
fucomi
scas
mov
inc
mov
insl
adc
imul
add
mov
cld
fimuls
es
fs
add
cli
jne
call
jmp
movsl
pop
sbb
enter
aas
inc
fnstsw
fstpt
pop
jnp
mov
xchg
xchg
jl
xor
mov
mov
push
insb
push
adc
repz
shrb
adc
aam
adc
sbb
cmp
mov
movsb
cmp
pop
add
dec
mov
test
lods
movsl
les
dec
adc
push
adc
clc
xlat
push
ffreep
ficompl
mov
stos
lods
aad
mov
xor
push
inc
sti
dec
push
jmp
cli
rcll
mov
dec
pop
cmc
adc
pop
add
int3
out
and
adc
cld
jns
clc
cltd
sbb
xor
dec
addb
outsb
cmp
xchg
mov
lea
sbb
pop
sbb
push
xchg
mov
bound
arpl
push
cli
mov
bound
fwait
iret
add
dec
and
mov
adc
fdivrl
dec
ret
pop
test
xchg
aaa
and
xor
scas
jbe
and
lock
sub
push
int
push
cwtl
push
out
shll
movsl
push
rcrl
and
mov
enter
mov
mov
into
add
dec
mov
sbbb
pop
nop
push
je
jno
xchg
repnz
sub
or
pop
js
mov
cld
cltd
test
int3
stos
xchg
hlt
arpl
fstl
sub
cmp
push
aam
rcll
shl
dec
lock
mov
jmp
inc
mov
add
ret
pop
into
mov
cmp
fbld
mov
and
hlt
scas
outsb
in
jo
mov
sarb
sbb
aas
aad
inc
cmc
jns
mov
jecxz
xchg
mov
inc
mov
fdivrl
or
insl
test
fimuls
leave
jle
shlb
mov
cmp
mov
push
insb
cmpsl
sub
xchg
pop
movsl
repz
adc
mov
repz
sbb
jg
sub
call
lret
ret
xchg
imul
ds
cli
jge
cmp
xabort
es
pop
dec
cmpsb
lret
jns
push
xchg
xchg
push
sub
cli
cmpsb
xlat
cli
or
das
pop
aad
sub
xchg
xchg
xchg
out
cmp
xchg
sbb
jb
mov
stos
pop
fnstsw
adc
dec
shll
out
sbb
test
push
push
push
ja
out
adc
scas
mov
adc
cmc
xchg
aas
cmpsl
and
push
sub
lock
jnp
and
out
adc
stos
cld
scas
aaa
push
mov
add
pop
sarb
push
add
lret
xchg
dec
pop
inc
into
push
xorl
sbb
jp
scas
cmp
pop
hlt
dec
arpl
mov
insl
into
es
es
fwait
sub
inc
test
ljmp
cmp
les
dec
xor
pop
jns
mov
inc
lret
jo
movsb
add
mov
cmp
cmp
aam
ret
sub
fisubl
js
cmp
fidivrs
jmp
pop
ret
pop
dec
jbe
in
mov
sbb
jl
imul
jnp
aas
add
pop
xor
fcompl
ret
aad
aad
adc
fistl
jg
aam
mov
mov
inc
out
pushw
lods
mov
call
sub
cmpsl
push
cs
imul
dec
inc
clc
testb
repz
mov
xor
aas
pop
pop
js
sub
sbbl
daa
xchg
push
fwait
jp
test
sbb
push
loopne
js
mov
leave
push
sub
cmp
add
lea
push
test
fcomip
js
test
dec
push
mov
repnz
iret
jge
subl
hlt
rcrl
inc
ficompl
jmp
push
hlt
cli
and
and
push
scas
adc
adc
por
inc
xchg
mov
int3
lea
enter
aaa
xor
sub
mov
shrl
cmpsb
pop
iret
pop
push
shlb
int
test
out
sub
adc
dec
xor
cmp
fisubs
in
fsubr
popf
stc
dec
jbe
enter
push
sbb
cmp
mov
mov
lret
mov
cmpsl
mov
pop
sbb
mov
or
out
repz
ja
adc
inc
aam
iret
push
fiadds
inc
lock
inc
shrb
cmp
fsubs
sub
and
inc
mov
inc
mov
insb
push
popa
das
int
pushf
cmpsl
cmp
mov
mov
mov
mov
cmp
push
arpl
and
in
std
ds
outsb
pusha
shlb
lret
pop
in
int
push
mov
and
pushf
and
add
cmpsl
cmp
jle
ljmp
outsb
hlt
inc
int3
arpl
jmp
xchg
dec
out
pop
dec
int
mov
in
cmc
pop
sbb
loop
cmpsl
cmp
pop
mov
sahf
movsl
idiv
std
pop
daa
jl
mov
inc
arpl
cmp
push
ss
insl
popf
shl
cmp
xchg
mov
mov
sarl
and
sbb
scas
sub
dec
sub
popa
push
fwait
pop
aas
or
jmp
inc
data16
rcrl
fcomp
daa
fwait
lods
add
inc
jle
jecxz
jnp
stos
push
fiadds
inc
xchg
and
sbb
ret
xchg
xchg
xor
push
imul
repnz
jg
mov
mov
test
sahf
dec
in
repz
inc
div
jno
aas
ljmp
push
into
movsb
mov
push
sub
subl
sbb
xchg
aaa
outsb
mov
repz
ja
or
xor
andb
mov
test
jecxz
pop
adc
mov
jns
aas
cmp
and
cltd
cmp
out
or
cmp
xor
loopne
inc
lar
idivl
ret
ja
mov
mov
xchg
xor
lock
cmc
fs
std
gs
arpl
pop
mov
mov
sub
dec
xchg
std
xchg
lret
loope
loop
fsubrp
adc
mov
inc
div
xchg
movsl
scas
xor
xor
mov
cli
stc
jo
mov
jns
jmp
mov
aaa
jmp
xchg
call
movsb
add
fstps
lea
pop
xor
xchg
outsl
and
inc
sub
out
xchg
ret
xlat
push
lock
jnp
fcmove
int
xlat
aas
pop
in
orb
fiaddl
shrl
punpckhwd
mov
cltd
cmp
das
mov
or
stc
xor
shll
inc
sbb
rclb
aaa
adc
push
xchg
aas
movsl
lods
pop
push
xchg
pop
sub
mov
xchg
mov
es
imul
daa
ficoms
jecxz
stos
imull
or
xor
or
pusha
cmp
cmpl
ss
fcomps
cmp
sbb
push
fwait
mov
add
loopne
push
mov
cmc
aad
into
xor
scas
jmp
xchg
mov
jns
add
xor
mov
lods
mov
mov
adc
pop
dec
add
xor
add
test
popa
movsb
inc
cmp
call
sub
xchg
or
fisubrl
cmp
push
and
outsb
jae
pushf
mov
cld
and
pop
pop
andl
xchg
in
sahf
xor
addr16
xor
pop
or
shlb
mov
std
int
cmp
out
jmp
pop
push
je
sysenter
imul
xchg
cmp
add
mov
fistps
adc
inc
sbb
jle
inc
repnz
xor
dec
sahf
push
enter
stc
push
iret
test
fwait
arpl
pop
mov
and
add
outsb
loope
xchg
add
mov
adc
adc
andb
mov
jno
movsb
lea
in
loop,pn
hlt
push
jl
sbb
jb
repz
push
fs
push
repnz
test
dec
cmp
pop
ret
fpatan
adc
mov
fadd
pop
dec
icebp
into
dec
in
xor
stc
jecxz
mov
pushf
ret
popa
cmp
and
adc
sbb
push
mov
dec
mov
jp
xor
fisubrl
push
repz
dec
or
or
xchg
mov
xchg
mov
popa
fwait
lea
xchg
sub
out
jmp
dec
jno
jns
nop
push
inc
dec
pop
testl
xor
pushf
sar
lds
andl
jle
sbb
loop
adc
cmpsb
cmp
xchg
sub
cwtl
pushf
add
push
mov
mov
stos
inc
mov
aas
pop
sub
cmpsb
inc
and
mov
and
xchg
out
rclb
out
cmp
data16
adc
fadds
pop
leave
popf
mov
inc
scas
aam
mov
lods
insl
lds
jmp
adc
mov
adc
adc
dec
push
xor
ljmp
jno
gs
cmc
lods
or
inc
push
mov
addb
int3
push
or
add
xchg
mov
mov
ficoml
jno
movsb
les
and
mov
jns
mov
pop
pop
rcll
sbb
comiss
push
dec
cwtl
jae
loop
push
push
fcoms
sub
push
imul
adc
outsl
dec
mov
cltd
ja
mov
int
cmp
xor
mov
mov
xchg
mov
jl
push
hlt
or
insb
xor
f2xm1
subl
dec
movsb
add
pop
enter
pop
daa
popa
mov
icebp
mov
adc
xor
cmpsb
dec
sbb
xor
mov
hlt
lods
jns
inc
push
push
jne
adc
fs
stos
and
shufps
sbbl
fwait
stos
ret
push
xor
dec
addr16
sub
movsb
cmpsl
ret
mov
les
daa
mov
test
imul
xor
das
nop
addr16
sub
dec
movsb
dec
pop
push
fdivr
test
icebp
repz
and
add
rclb
sub
lock
xor
jns
icebp
hlt
push
add
and
ficomps
inc
xor
xorb
sbb
bound
ret
cmpsb
ss
mov
dec
addr16
or
iret
add
jg
jle
cwtl
inc
mov
or
bound
ret
add
js
xor
mov
mov
and
aaa
iret
pop
fstps
lcall
cmp
jmp
movsbl
js
push
loop
insb
out
cmp
test
out
and
mov
pop
xor
xchg
or
test
stos
push
xchg
ret
in
cld
inc
mov
ds
jns
xor
cmpsl
inc
mov
sbb
incb
pop
leave
test
and
dec
aaa
mov
in
mov
add
sahf
add
xchg
cmp
mov
lahf
addb
in
shrl
jne
xchg
xor
aas
sub
lods
or
aad
out
pushf
fwait
dec
in
jbe
int3
das
mov
in
je
mov
dec
pop
sbb
das
roll
dec
inc
loop
add
jp
lea
sahf
jns
mov
jp
loopne
frstor
mov
jmp
mov
xchg
cmc
out
test
mov
and
shlb
mov
lods
xor
lods
imul
cmp
jbe
mov
push
push
iret
lods
mov
xor
or
jmp
iret
cwtl
dec
add
mov
or
add
cmc
dec
cmp
ljmp
xchg
insb
xor
cltd
push
in
pop
jnp
inc
and
fcoms
jo
inc
shrb
int
mov
enter
imul
stos
js
lret
jmp
xchg
enter
addl
cld
push
and
dec
sub
sbb
es
cld
int
mov
sahf
dec
dec
aas
mov
icebp
push
fistpl
dec
pushf
jnp
jle
add
and
sub
jbe
cmpsl
push
fstpt
jl
sbb
or
mov
push
aas
outsb
mulb
out
xchg
data16
mov
cmc
dec
xor
cmpsb
push
mov
or
gs
and
fadds
shrl
rcrb
inc
pop
subl
xchg
pop
mov
loopne
mov
mov
xor
push
movsb
daa
mov
insl
ss
sarl
lock
mov
push
lcall
push
add
andl
xchg
xlat
js
cmp
movsb
lret
pop
mov
push
cmp
in
push
and
pusha
in
pop
and
or
aas
add
add
jmp
aas
jmp
and
mov
rcrb
ds
inc
jp
mov
add
outsl
adc
push
adc
mov
xlat
shlb
pop
adc
push
xor
or
ret
xor
sub
ljmp
aad
xchg
pop
xor
jmp
pop
out
sub
sbb
testl
ja
cli
push
mov
scas
stos
or
call
sbb
loop
add
inc
jmp
loope
mov
shll
popf
lret
inc
jbe
inc
pop
jmp
imul
xlat
pop
cmpsl
js
leave
je
pop
inc
and
stos
mov
mov
lahf
imul
insb
xchg
xor
insb
pushf
cmp
and
push
loop
push
shll
xchg
std
punpcklbw
pop
cmpl
gs
mov
and
aam
aaa
jnp
jbe
dec
add
push
loopne
xor
pop
inc
stos
insl
mov
xor
int3
mov
or
arpl
inc
mov
xchg
or
cmpsb
sub
jge
in
jb
pop
push
stos
and
or
jbe
jecxz
mov
stos
sub
push
in
jbe
out
dec
push
sub
add
add
cmp
mov
sbb
adc
out
pop
lock
scas
cmpsl
lret
lods
push
mov
mov
sub
xchg
jge
call
and
sbb
pop
fistl
inc
pop
lret
mov
and
sar
lods
sbb
add
dec
leave
mov
addl
or
mov
in
push
shrl
jle
pop
mov
decl
out
lret
stos
pusha
lods
imul
jno
or
push
imul
in
fstl
jle
pop
adc
mov
cmp
pop
and
cmpb
adc
jns
int
xchg
xlat
loope
data16
insl
sub
fcoms
in
adc
stos
lret
pusha
mov
sub
jb
ljmp
jne
add
inc
adc
push
sbb
imul
and
add
push
pop
out
test
mov
stos
popf
xchg
outsb
jne
lcall
xchg
in
nop
into
out
dec
and
fdiv
jb
scas
lahf
or
pop
pushf
iret
repnz
push
jge
mov
stos
mov
jg
push
pushf
inc
insb
jg
stos
xchg
xchg
or
mov
xchg
ljmp
lea
dec
mov
dec
xchg
loope
pop
and
test
rcll
inc
imul
lret
mov
pop
aam
outsl
inc
test
addr16
jecxz
mov
lret
adc
andps
flds
test
push
push
in
mov
loope
xchg
in
out
fwait
xor
xor
int
mov
pop
inc
add
scas
mov
lcall
jecxz
test
mov
or
adc
fimull
sbb
fs
xor
repnz
icebp
ljmp
and
sbb
pop
sbbl
adc
and
popf
mov
daa
outsb
fildll
ret
incl
cltd
pop
dec
jle
ss
int3
sbb
adc
or
dec
and
and
cmp
imul
add
mov
mov
cwtl
pop
fcmovnbe
push
adc
hlt
xchg
dec
inc
imul
addr16
outsl
pushf
pop
js
sub
stos
rcr
pusha
sbb
xchg
dec
inc
adc
cmpsl
push
test
xchg
fisttpll
scas
repz
popa
and
adc
out
pop
lret
and
cmpsl
loop
aaa
out
cmpsb
cwtl
in
or
aam
add
outsl
push
add
stc
xor
jge
push
jmp
outsb
cmpb
cmp
cld
icebp
jg
sarl
dec
loope
popa
pusha
loopne
mov
mov
jbe
sub
or
les
mov
sti
hlt
jnp
pop
jae
mov
loope
outsb
mov
jmp
pop
jmp
xchg
nop
pop
lds
pop
jbe
addr16
add
sti
sbb
movsl
mov
mov
sbb
mov
mov
xchg
adc
aam
xor
xchg
pop
sbb
adcl
stc
into
js
fildll
sbb
jnp
cmp
dec
outsb
adc
imul
add
push
lret
adc
lahf
jg
xchg
movsb
jmp
test
pop
movsl
cmp
xchg
add
pusha
adc
jg
leave
pop
dec
jg
repnz
loope
jno,pn
jmp
sub
mov
test
fildl
mov
xor
ds
inc
jg
pop
dec
pop
and
fnstenv
shll
arpl
sbb
into
xchg
dec
loop
dec
std
pop
push
hlt
dec
sub
imul
mov
adc
fldpi
pop
and
sub
dec
mov
jno
in
inc
fisubl
mov
enter
fstl
jne
in
jmp
xor
mov
in
push
fistpl
jnp
aas
jecxz
cmpsl
dec
dec
pop
out
rorb
adc
lret
das
idivb
pop
xlat
push
xchg
add
ja
aad
pop
cmp
popf
les
bnd
jnp
aam
sub
jnp
xor
mov
sub
repz
out
or
xchg
aaa
test
push
jl
or
push
sub
insl
aas
popl
aam
nop
dec
test
dec
mov
inc
jecxz
dec
xor
add
pop
mov
pushf
or
sahf
inc
lea
push
or
enter
mov
jne
in
sub
push
popf
fwait
popf
inc
mov
insl
sbb
and
mov
adcl
mov
mov
decb
dec
cs
cli
in
xchg
add
cwtl
lea
mov
ljmp
fadd
mov
push
push
cltd
hlt
add
aaa
pushf
cmp
inc
mov
push
fs
decb
push
or
into
cwtl
dec
or
jle
repz
addr16
mov
jno
popf
divb
mov
add
or
add
jmp
cmp
imul
in
pop
pop
adc
sub
fldt
insl
dec
jbe
cli
sbb
pop
data16
idivb
dec
jns
mov
std
imul
pusha
sbb
fisttpll
xchg
aam
jae
popf
cs
sbb
pop
mov
xchg
jle
inc
sbb
mov
scas
aas
scas
or
fcoms
sub
loop
jg
cwtl
adcb
ds
jmp
shrl
iret
js
and
stos
jg,pn
subl
push
and
pop
xor
ret
fcmovnb
in
fwait
xchg
in
adc
fs
insb
les
jnp
ret
jmp
or
lret
out
add
gs
add
leave
mov
ficoml
in
sbbb
test
dec
mull
xchg
ja
cmpsb
repz
pop
cld
and
aas
push
lcall
cld
cmpsb
sarl
mov
sahf
dec
lret
in
leave
aaa
jo
mov
mov
jp
jecxz
pushf
sub
jb
mov
andb
fistps
fdiv
shrl
fldl2e
cs
dec
lock
mov
das
ljmp
cs
gs
jmp
mov
in
test
enter
loop
ja
mov
inc
mov
or
push
addr16
nop
mov
push
inc
lret
inc
inc
inc
popw
popa
inc
lds
ss
pop
out
inc
adc
mov
lods
fisttpll
out
ja
cmp
test
push
je
mov
inc
mov
dec
jecxz
in
pop
adc
imul
std
cmc
cmpsl
and
je
call
fimuls
cs
push
pop
push
mov
dec
sub
push
inc
in
jle
mov
leave
pusha
ds
fnstenv
push
loope
sahf
xchg
das
cmp
fucomp
or
xchg
aaa
sbb
ss
cmpsb
inc
movsl
lret
mov
enter
push
mov
das
xchg
mov
clc
add
insl
stos
in
pushf
es
cmp
xchg
ljmp
dec
shlb
inc
test
jl
pop
or
mov
lcall
lods
aad
int3
xchg
jle
jmp
aas
into
cltd
add
js
lret
sub
scas
mov
mov
inc
rcrb
fs
xor
out
std
fbstp
imulb
arpl
cld
dec
adc
adc
enter
add
sbb
mov
add
cmp
daa
enter
sub
jmp
xchg
es
imul
mov
mov
jnp
sbb
adc
mov
jg
fimull
jl
dec
xchg
sti
inc
in
sub
mov
xchg
outsl
je
sbb
cmc
sub
jno
fiadds
in
enter
inc
pop
int3
pop
adc
or
xor
sbb
adc
shrd
add
aas
lea
lock
scas
inc
std
leave
rcl
ror
repz
fcmovnb
xchg
mov
sub
inc
mov
push
mov
pop
adc
add
mov
adc
ds
call
ret
popa
or
jnp
push
sbb
push
aaa
push
in
call
sbb
enter
imul
cmp
xchg
dec
mov
adc
rcrl
ficompl
aaa
inc
mov
lret
clc
loop
mov
lret
add
or
jle
cld
mov
dec
in
je
cmp
dec
and
mov
push
pushl
sub
jg
loopne
les
xchg
out
push
ss
add
mov
mov
mov
mov
mov
pop
repnz
xor
clc
leave
adc
lock
clc
jne
in
lods
cli
xchg
mov
aad
xchg
push
cmpsb
fcomps
les
inc
popa
dec
cwtl
push
out
mov
shll
js
loopne
ja
sarl
xchg
test
stos
daa
loop
dec
push
mov
ja
mov
add
iret
add
or
jno
cmp
add
dec
mov
lock
xchg
mov
dec
cmp
mov
mov
adc
btc
sets
pop
in
sub
cmp
ficompl
and
cmp
jbe
aad
mov
pushf
pushf
popf
mov
repz
push
xor
xor
imul
mov
iret
xchg
dec
mov
push
or
lods
sub
into
sbb
fdivrs
pusha
loop
dec
ljmp
adc
xchg
js
or
and
lret
mov
mov
ljmp
cmp
loope
xlat
shrb
adc
dec
pushl
jne
inc
push
mov
inc
mov
sub
xchg
nop
add
outsl
xchg
and
fwait
adc
pop
bound
insl
sub
push
jl
pop
or
inc
sbb
mov
cmpsl
xchg
and
popl
jp
lret
inc
sub
ret
dec
mov
iret
jno
cltd
cmc
int
mov
xchg
fdivrs
lods
pop
imul
jns
mov
jae
jl
mov
adc
mov
mov
lahf
sub
xor
push
dec
bound
adc
xor
fs
test
test
leave
pop
push
add
push
jmp
test
movsl
push
adc
divl
pop
mov
cmc
aam
xchg
mov
jmp
dec
repnz
les
sbb
xor
movsl
mov
mov
aas
mov
ficompl
bound
aas
test
int
lret
jp
xchg
xor
mov
stos
and
sbb
pushf
out
mov
sbb
add
mov
aaa
repz
push
fistps
daa
add
mov
xor
outsl
movsl
push
sti
mov
in
lods
cmpb
inc
rorb
loope
inc
xor
jbe
jecxz
pop
fnstsw
packssdw
pop
mov
and
das
push
imul
add
and
dec
add
adc
sub
rcl
inc
test
inc
ss
test
movb
stos
fimull
mov
pop
out
sub
and
mov
pop
push
lods
fmull
adc
stos
xchg
inc
lahf
call
push
sbb
pop
in
cmpsl
popl
push
pop
push
xchg
out
arpl
inc
repz
adc
cmpsl
dec
jl
mov
int
sub
fildl
cmp
cmp
or
scas
mov
cmp
aad
iret
movsb
testl
jge
les
fwait
inc
push
mov
push
faddl
lods
clc
lahf
jbe
fs
sahf
dec
lds
lahf
push
das
repz
xchg
insl
ret
int3
dec
movsb
mov
jg
cmp
aaa
je
and
push
push
clc
mov
shrl
nop
out
jmp
jne
adc
mov
repnz
or
mov
out
lods
ret
cmp
cmpsl
cld
adc
clc
loope
lret
sti
in
mov
xchg
cmp
insl
inc
pop
add
iret
movb
and
out
in
mov
int3
lahf
pop
mov
ffree
mov
sbb
mov
sbb
pushl
or
std
sub
xchg
imul
add
push
cmp
je
cmp
jb
jbe
cwtl
mov
fldl
dec
mov
mov
jg
and
pop
jl
lcall
mov
icebp
fsubrs
pushl
repz
fldenv
xchg
aam
out
sbb
lods
push
outsb
xchg
jg
movsl
ljmp
add
out
cmpsb
xchg
or
imul
dec
lods
cmc
test
cmp
adc
rcrl
sarb
pop
cld
xchg
shr
and
mov
and
rolb
and
inc
ret
cmpsl
cli
xor
lock
imul
stos
push
pop
push
dec
push
xor
adc
sub
aas
dec
das
cwtl
xchg
and
stos
rcrl
xchg
xor
mov
fiadds
test
sbb
jb
and
sub
push
push
leave
adc
lods
push
outsl
je
sub
or
push
sub
mov
cmc
pushf
jae
decl
enter
lahf
cli
and
loope
add
jnp
fs
ficompl
enter
jp
pop
cmp
fcoms
pop
nop
js
lods
mov
sahf
or
cld
pop
add
xchg
xor
cmp
movsb
dec
lahf
mull
dec
push
adc
pop
jg
jb
les
jns
shl
daa
std
fwait
sub
dec
scas
test
stos
add
stos
and
add
dec
test
mov
mov
in
lock
adc
dec
adc
and
bound
adc
jno
js
ds
hlt
jae
jp
mov
test
iret
movsl
add
adc
mov
cmp
push
jne
jecxz
enter
adc
loop
shlb
add
lods
lret
mov
mov
push
cmp
push
mov
sub
dec
fmul
ficoml
xlat
sub
jecxz
loop
sub
ret
hlt
push
fisubrl
cs
cmp
in
clc
cmp
xor
push
sbb
push
sahf
or
mov
xchg
shlb
outsb
bound
xlat
mov
lret
aam
ja
js,pn
aaa
hlt
cwtl
xor
pop
scas
pusha
sbb
lods
and
adc
repz
inc
decl
fiaddl
xchg
cmc
inc
jle
adc
push
arpl
in
mov
add
lods
xchg
xor
icebp
inc
xchg
inc
mov
test
fst
xor
daa
fisttps
mov
fwait
hlt
fwait
pop
fildll
dec
dec
iret
dec
cmp
adc
dec
and
test
addr16
fidivrl
mov
cmovge
push
dec
jno
or
mov
xchg
push
or
roll
push
cltd
jno
mov
and
jmp
pop
dec
loopne
sarl
push
stos
xchg
sbb
ljmp
and
jns
imul
jecxz
xor
pop
sahf
fisttpll
xor
fwait
push
inc
bound
es
pop
repz
cmp
out
movsl
sbb
pusha
xchg
fistl
pop
fsubs
inc
hlt
mov
das
call
ficoml
idiv
icebp
ret
pop
xor
mov
ret
pop
cmp
inc
xchg
mov
adc
inc
xchg
mov
xchg
popf
mov
xlat
push
mov
repz
sub
inc
push
lahf
add
xchg
mov
leave
test
and
shrl
push
xchg
add
movsl
call
cmc
mov
sbb
in
pop
jp
test
mov
fdivp
fstps
mov
mov
dec
ja
inc
cmpsl
scas
outsb
popf
sbb
jb
xchg
sahf
pop
push
fsubl
mov
outsl
mov
mov
lcall
mov
pop
jp
mov
mov
xor
mov
xor
mov
jo
cmp
mov
or
test
mov
mov
pusha
out
inc
push
int
aaa
xlat
lock
push
mov
iret
mov
mov
enter
les
aaa
daa
dec
ja
ja
adc
pop
pop
call
cmp
in
inc
and
adc
xchg
and
xchg
xor
push
les
test
cltd
adc
pause
repnz
mov
xchg
dec
fldenv
cmc
insl
sti
bound
and
cltd
nop
or
dec
sub
sbbl
fistpl
insl
push
dec
enter
jo
push
lahf
rcll
div
adc
jb
ss
scas
test
ret
test
sub
jl
mov
xchg
imulb
cwtl
int3
loope
fs
mov
ljmp
push
cmc
fndisi(8087
arpl
or
jb
outsl
rclb
jbe
sbb
pop
xchg
into
cmc
lret
dec
jbe
lret
shrb
dec
leave
je
divb
ss
add
pusha
jns
xchg
jmp
sarb
cs
loope
lret
shll
rcrb
xor
xor
sub
cmp
arpl
test
adc
and
inc
das
push
fisttps
je
pushf
pop
mov
out
fmul
adc
sbb
loope
cmp
add
jg
pushf
dec
pop
cltd
sbb
clc
jae
adc
and
push
inc
ja
shll
mov
leave
mov
gs
into
pop
loop
daa
push
hlt
and
push
sbb
or
roll
push
push
filds
rorb
shll
sbb
push
loope
cmp
mov
fistpll
adc
inc
lock
xchg
cmp
mov
mov
das
bound
xor
outsl
pop
shlb
xor
movsl
inc
cld
jecxz,pn
push
dec
push
xchg
hlt
pop
mov
and
sarl
das
cmp
aas
out
sbb
cmpsb
and
add
push
xchg
std
out
sub
test
out
mov
into
lock
inc
jle
mov
in
add
cld
call
lret
aas
loop
adc
sahf
and
sub
and
push
push
rcr
fildl
mov
push
jno
mov
lock
scas
inc
pusha
jge
cli
jecxz
xchg
jbe
xchg
or
lret
cs
cmp
imul
dec
pop
xor
mov
movsb
cmp
jge
jmp
mov
data16
cmp
mov
cltd
jg
mov
push
loop
sub
mov
and
mov
pop
push
and
mov
jge
shlb
mov
imull
enter
cmpl
cmpsb
in
aas
stos
fwait
add
adc
mov
in
inc
arpl
dec
xchg
mov
mov
fisttpll
fnstcw
rcr
pop
lret
xchg
xrelease
push
aad
fimuls
sub
pop
inc
cwtl
sbb
stos
push
dec
inc
and
lahf
hlt
mov
push
les
ljmp
out
mov
enter
dec
jp
jo
dec
inc
dec
xor
popf
push
xchg
dec
shlb
pop
and
and
mov
mov
lds
insb
cwtl
aas
add
ja
test
mov
jmp
xor
fwait
daa
pop
jae
xor
ljmp
and
cwtl
adc
scas
sub
in
cmpl
ret
insb
push
sbb
aad
ja
ss
xor
mulb
pop
pop
out
in
hlt
sbb
icebp
fcmovnu
cmp
mov
cltd
mov
jl
iret
jnp
int3
xor
or
notl
xor
inc
aaa
outsb
popf
ds
inc
repnz
push
xchg
or
adc
lea
jae
lahf
negb
cmp
dec
cld
scas
lret
push
dec
and
jmp
mov
rcrl
mov
pop
mov
xor
lods
or
mov
fmull
push
test
jmp
shr
je
pop
or
popa
mov
mov
jae
pop
adc
in
inc
mov
inc
sub
lods
cltd
jno
into
jnp
pop
clc
sar
repnz
movb
inc
loope
mov
push
jne
mov
lds
arpl
ds
call
adc
iret
inc
sbb
pusha
imul
push
cltd
scas
loopne
add
hlt
addr16
inc
out
in
lods
pop
nop
into
rcl
push
mov
repz
fidivrs
stc
mov
rorb
fisttps
ret
std
jl
xor
sbb
pop
jl
cmp
xor
movsb
rcr
mov
subl
jle
xchg
stc
inc
sbb
jge
fs
rcl
fwait
pusha
aas
insb
nop
sahf
sub
ret
loopne
in
push
das
pop
dec
pop
stc
repnz
dec
adc
outsl
aad
add
fchs
in
lret
xchg
popa
sub
add
or
data16
xchg
lret
decl
clc
xchg
popa
icebp
mov
je
aas
icebp
mov
and
and
in
dec
and
sub
sbb
aas
or
sbb
dec
divb
sbb
inc
divb
jne
push
fsubrl
pushf
sbb
pop
sahf
lods
adc
in
adc
in
mov
or
fbld
pop
imul
ret
add
sbb
shr
out
icebp
push
sub
cmovbe
out
imul
lea
and
insl
xchg
and
sub
out
cmp
push
cltd
repz
movb
out
loopne
sbb
inc
push
push
movsl
mov
push
fs
mov
movsb
repnz
cltd
inc
test
pop
and
mov
push
mov
jne
aam
jb
fwait
inc
icebp
bnd
gs
xor
cmp
div
sbb
mov
lds
mov
add
add
repz
sbb
stos
pop
lret
mov
movb
push
push
test
xor
mov
mov
int3
ss
dec
mov
int3
mov
xor
test
xor
es
lds
sarl
test
loop
and
loop
and
lcall
shlb
mov
gs
pop
adc
in
inc
ret
sbb
jp
xchg
mov
dec
dec
arpl
insb
push
es
sub
mov
enter
adc
inc
addr16
movsl
mov
xchg
push
shlb
pop
out
rcr
loope
mov
insb
vpcmpeqb
jmp
push
cmp
push
stc
inc
lret
jne
jp
scas
aaa
rcll
jg
bound
call
xor
dec
imul
and
dec
or
clc
sub
jbe
jo
cld
sbb
into
add
adc
xchg
cmp
shlb
lods
xor
xor
test
mov
xchg
sti
neg
jmp
cli
sub
mov
xlat
rclb
cld
ret
jo
ret
leave
mov
sti
jg
subl
mov
out
or
cli
cmpsl
scas
add
pop
jns
jl
inc
popl
cmp
mov
in
fistps
daa
dec
add
sub
mov
test
xor
xchg
sub
jg
xor
cld
push
dec
mov
add
pop
scas
les
adc
jbe
fmuls
and
sub
gs
jo
push
push
ret
loop
sub
adc
add
frstor
insl
mov
mov
and
or
sbb
jle
or
xchg
adcl
inc
sub
mov
dec
in
sub
rep
hlt
mov
add
mov
push
mov
jmp
sti
sub
inc
stos
mov
and
iret
inc
sbb
bound
sbb
mov
stc
jnp
dec
or
scas
push
add
cmp
mov
dec
insb
cmpsb
popf
out
push
sub
in
incb
insb
ljmp
and
mov
insb
fisttps
push
insb
leave
cmpsl
sbb
mov
and
iret
lahf
std
not
mov
cmpsb
xor
sub
out
sbb
movsb
and
imul
shlb
jecxz
mull
xchg
pop
mov
inc
dec
lods
mov
pop
jne
adc
pop
sbb
mov
inc
or
push
in
mov
jnp
push
bound
stos
aam
repz
jb
or
les
cltd
aas
pop
pushf
scas
sahf
shrl
add
ret
loopne,pt
mov
sub
jmp
lea
pop
push
add
mov
scas
test
stc
iret
shrb
cmp
test
loop
jo
pop
mov
dec
ss
es
mov
imul
scas
or
data16
outsb
aam
mov
popa
enter
sbb
ss
sbb
shll
push
aam
loopne
mov
addl
dec
push
xchg
cmp
shr
in
jne
int
sub
cmp
fldcw
jnp
add
jmp
push
push
and
dec
das
jle
mov
mov
xchg
cmpsl
icebp
scas
dec
cli
jmp
dec
sub
cmp
sbb
std
gs
rolb
add
ret
cmpsl
sbb
cwtl
inc
out
inc
xchg
mov
cmp
fisubrs
ljmp
outsl
test
add
pop
xchg
or
jno
sbb
cs
ds
sbb
ds
mov
and
das
outsb
and
xor
mov
std
and
fidivrs
in
xor
iret
mov
int
into
iret
popf
or
add
sbb
inc
out
mov
aam
xchg
ror
sub
mov
inc
hlt
mov
mov
and
loope
lods
and
addr16
gs
ds
rcrb
pusha
outsl
sbb
movsb
add
fcmovbe
adc
sub
inc
cmpsb
hlt
leave
rorl
jb
imul
clc
lods
dec
and
sahf
pop
adc
rcl
icebp
test
push
shr
stc
mov
cs
jmp
dec
cmp
jo
push
xchg
push
mov
and
aas
adc
fwait
mov
mov
outsl
xor
jno
das
and
cmp
mov
mov
ds
adc
decl
imul
xchg
adc
in
and
xchg
fsub
je
xor
xchg
clc
out
pop
xor
lret
mov
sbb
xchg
enter
xchg
leave
xchg
mov
mov
xchg
jne
mov
or
cli
std
mov
fwait
sbb
fidivrl
mov
mov
test
and
inc
dec
lret
sub
or
cmp
outsb
mov
sbb
mov
xchg
mov
add
rcll
push
stos
fists
xchg
lcall
sbb
fstpl
out
cwtl
das
jecxz
mov
add
out
and
adc
ljmp
xchg
push
mov
imull
push
pushl
call
lods
push
mov
and
in
sbbb
adc
or
test
or
mov
mov
add
adc
mulb
dec
push
test
outsl
lret
pop
lret
out
popl
push
push
loope
fistps
cli
jecxz
jge
je
test
cltd
xor
pop
insb
jbe
ss
and
addr16
push
xchg
push
cmp
arpl
iret
jns
mov
add
in
and
pop
cmp
sbb
pop
jno,pn
sbb
pop
into
mov
pusha
add
daa
sub
mov
loope
and
add
push
push
ja
and
push
adc
xchg
mov
cmpsb
adc
arpl
out
ss
out
cmp
add
ja
adc
pop
dec
xor
dec
push
mov
lods
inc
sub
mov
mov
dec
pop
roll
pop
data16
sbb
loope
adc
lcall
adc
imul
push
pop
dec
out
arpl
mov
mov
cmovp
call
push
mov
mov
jge
jnp
lret
sub
lret
ret
daa
sbb
mov
jp
aas
adc
aam
sarb
js
jo
xor
sub
loopne
je
mov
or
mov
xor
call
xchg
stos
mov
push
adcb
push
sahf
add
lcall
inc
loopne
mulb
lret
nop
inc
and
sbb
mov
cmc
jno
xchg
mov
data16
inc
dec
mov
rolb
pop
incl
inc
sti
jmp
fld
cli
mov
insb
xor
sahf
cmp
mov
das
subl
adc
pop
data16
daa
xor
mov
cld
jbe
add
movsb
cmpb
andb
jb
hlt
negl
enter
adc
repz
in
push
out
popf
sub
repnz
inc
dec
cwtl
popa
test
xchg
xchg
cwtl
mov
cmp
pop
pop
daa
mov
adc
jnp
add
or
sub
lahf
dec
lods
xor
jecxz
mov
shlb
and
mov
in
jg
shlb
push
mov
sub
add
in
pop
shlb
lock
dec
adcl
or
ja
mov
aas
int
sbb
lea
sub
stos
xlat
dec
push
sub
jle
lods
xorl
fnstcw
div
cs
pop
bound
insl
dec
fdiv
sbb
ss
orl
mov
sbb
cwtl
lods
sub
jp
nop
mov
xchg
outsb
int3
cmp
push
mov
sbb
pmaddwd
in
je
andl
or
xchg
loope
out
testb
dec
addl
flds
xchg
add
cmpsb
xchg
jl
outsb
ucomiss
dec
push
xor
int
cmp
cmpsl
mov
push
aas
xlat
fcmovbe
and
and
das
clc
inc
pop
add
inc
das
sahf
addr16
out
stos
dec
cmp
mov
insb
ficoms
movsl
leave
lret
sbb
mov
out
in
ds
cltd
push
pop
scas
xchg
int
push
and
push
bound
xor
data16
cmp
jmp
adc
sub
aas
push
pop
roll
stc
lds
in
stc
loopne
cmc
outsl
lret
or
sub
push
sub
ds
loope
dec
cmc
pop
pop
ds
sub
scas
dec
cmp
mov
xor
mov
and
cmp
jle
mov
or
sub
cltd
and
jmp
mov
lock
and
call
cwtl
or
jbe
lahf
pop
inc
adc
cmp
es
push
adc
and
jmp
pop
mov
xchg
mov
jae
sti
insb
mov
int3
mov
cmp
xor
jle
daa
adc
in
dec
xchg
insl
jge
out
xor
cmp
cltd
divl
aas
add
cmp
in
mov
pop
ret
aas
jo
and
fmulp
movsb
arpl
dec
dec
jns
mov
dec
push
lcall
shrl
dec
and
mov
ljmp
scas
lock
sub
xor
scas
mov
inc
pop
test
out
sbb
xchg
cmp
jmp
and
xchg
xchg
aam
outsl
loopw
lds
int
sbbb
in
cld
pop
xor
lcall
xchg
popl
xorb
in
xchg
or
mov
aad
inc
out
jae
cmp
jo
jb
repz
rorb
fsubrs
int
cmp
push
and
nop
and
movsl
inc
outsl
test
lahf
dec
out
mov
dec
rcll
inc
mov
inc
sub
cmp
fiaddl
nop
and
jl
fldt
xlat
add
pop
imul
mov
jl
iret
or
mov
sub
jnp
push
cmovnp
cmp
aad
scas
adc
mov
lret
jnp
sbb
sub
inc
inc
mov
cli
mov
pop
lds
pop
xor
mov
outsl
push
dec
arpl
mov
sub
popf
and
rcr
adc
mov
popl
pop
shll
jnp
imull
jp
addr16
sub
icebp
out
in
xchg
popa
outsl
rcll
aam
aad
into
lods
out
inc
scas
repnz
cmp
fistpl
jbe
jp
xor
pop
orb
aaa
push
scas
jl
adc
arpl
fdivrs
outsl
adc
loop
mov
aaa
xchg
mov
or
jns
ss
fisubrs
push
cmpl
push
std
inc
sub
out
hlt
fldl
push
movl
push
cwtl
xchg
call
xor
arpl
cmp
inc
aas
popa
pop
cs
push
fwait
loop
jmp
jge
fists
pop
pop
push
add
or
cld
cmpsl
popf
jns
cmpb
dec
sarl
inc
sbb
addb
addr16
cwtl
sub
mov
and
mov
out
out
js
int3
cwtl
nop
mov
mov
inc
pop
add
imul
lcall
scas
cmpl
cmp
das
xor
push
inc
bound
mov
pop
fs
out
push
mov
add
sbb
sub
jae
lods
popa
push
test
out
stos
push
lret
xchg
mov
test
jp
cmp
enter
cld
add
cmp
lahf
pop
inc
jbe
out
rcl
add
adc
mov
sbb
mov
lods
pop
or
out
fdivl
scas
add
in
push
cltd
jo
add
test
call
push
pshufw
cmp
in
xor
fwait
mov
aaa
movsl
push
lock
mov
daa
push
arpl
dec
int3
jo
cmp
into
arpl
flds
pop
and
arpl
addr16
int
mov
xor
clc
push
data16
inc
in
or
cmp
inc
mov
dec
dec
ret
fistpll
test
leave
ret
fldt
and
push
pop
push
cs
xor
je
inc
ficompl
ja
xlat
jmp
inc
push
js
data16
cld
push
nop
add
xchg
lahf
xchg
in
push
cmpsb
pusha
push
fildl
lds
dec
dec
push
cltd
js
aas
jb
aaa
sbb
imul
mov
adc
add
push
out
popa
into
mov
pop
cmpsl
xchg
out
pop
or
or
icebp
repnz
movsb
dec
push
jnp
inc
add
sahf
xor
mov
add
pop
outsb
adc
cwtl
in
mov
popf
imul
test
dec
add
inc
iret
ljmp
std
lods
movsb
mov
iret
out
shlb
imul
fmul
cmp
or
dec
push
pop
js
pop
sub
loop
push
pop
aad
fidivrs
push
pop
sbb
mov
cmp
or
into
adc
out
and
hlt
push
test
mov
mov
es
mov
addr16
outsl
pop
adc
movsb
xchg
adc
jnp
and
add
aam
arpl
sub
xorb
imul
popf
dec
mov
mov
dec
jle
pop
inc
lds
shrl
rep
lds
sub
pop
lods
outsb
pop
adc
out
out
stos
adc
lock
xchg
enter
jmp
stos
es
rorl
scas
lret
shrl
xchg
fs
xor
fisttpll
add
push
xchg
imul
lahf
fmuls
xchg
in
in
out
sbb
imul
sub
xor
int3
setbe
push
mov
and
jb
jns
push
mov
test
pop
cmpsl
mov
clc
lcall
mov
in
xor
or
inc
lods
or
insl
daa
push
lcall
cwtl
loopne
mov
in
inc
or
scas
cmpsl
js
mov
enter
idivl
jb
test
aad
rcl
add
lret
aaa
aad
stc
lret
ja
push
mov
add
sub
addr16
aam
sbb
adc
repz
or
xor
mov
fcomps
jle
mov
aaa
ljmp
cmp
in
or
lcall
pop
mov
dec
and
and
jmp
mov
push
jmp
jbe
mov
das
in
jnp
xchg
mov
or
ljmp
nop
jnp
movsl
mov
mov
sti
in
subl
in
pop
inc
ds
das
lock
in
xor
sub
js
int
nop
das
jmp
mov
inc
fbstp
int3
mov
mov
iret
adc
shll
or
adc
std
push
mov
jge
and
in
pop
xor
ds
shll
lahf
and
mov
mov
push
lods
lret
dec
adc
mov
dec
mov
movsb
pop
pushl
mov
add
in
in
xorl
ret
movsb
mov
into
xchg
adc
push
sti
sahf
mov
fwait
cmpsl
ljmp
outsb
fucomip
cmp
xlat
loop
push
mov
outsl
inc
es
pop
cwtl
adc
jb
jbe
push
mov
dec
cs
sub
jp
push
mov
notb
daa
fnstcw
pop
mov
and
call
jge
xor
imul
jo
pop
cmp
pop
in
add
xchg
lahf
rsm
leave
imul
or
outsl
inc
arpl
stos
or
jne
mov
sub
pop
sti
dec
push
sbb
sub
jl
jnp
pop
jg
icebp
ret
push
pop
and
iret
sub
loopne
hlt
fistl
mov
lea
mov
mov
scas
iret
jo
imul
inc
addb
jne
mov
mov
pop
fistps
push
mov
cmp
sarl
pop
xchg
aas
mov
fistpl
push
fidivrl
sub
rolb
pop
setg
push
dec
in
ja
dec
push
out
pop
out
rclb
lods
sarb
mov
jecxz
shrb
mov
sbb
ja
cltd
dec
out
sbb
outsb
enter
add
pop
frstor
ret
test
bound
adc
ja
inc
pop
push
stc
ret
sarb
push
call
lds
mov
xor
ffreep
ljmp
push
int3
xchg
jecxz
or
fnstenv
inc
lods
sti
push
inc
sbb
cmp
inc
ret
dec
outsb
imul
adcb
push
push
incb
cmpb
pop
cmp
scas
add
push
clc
mov
fsubl
aad
sub
xor
decb
pop
pop
inc
pop
das
insl
push
and
out
mov
mov
hlt
adc
pop
insl
mov
pop
xchg
adc
ss
stos
xchg
lds
imul
test
fisubs
clc
loopne
aam
push
aas
adc
rcl
xorl
test
pop
insl
shrl
ret
jle
mov
shlb
adc
sub
push
lds
pop
jl
push
into
out
es
imul
add
addr16
rorb
jne
pop
mov
cwtl
out
xor
repnz
xchg
pop
negb
inc
push
xor
pop
push
pop
outsb
fdivrl
ja
mov
cwtl
popf
ret
jae
fdiv
fs
addr16
sbb
lret
pop
mov
ljmp
dec
mov
lods
jle
lds
and
call
pop
out
in
jp
xor
adc
cli
arpl
and
sub
push
es
sbb
aaa
lret
pop
nop
mov
sub
add
mov
imul
out
cld
loopne
pop
loopne
in
and
cmc
and
stos
jp
jecxz
sub
jb
add
test
movsb
mov
mov
xor
inc
aas
mov
mov
das
adc
scas
shlb
mov
orb
popf
jg
int3
push
adc
pop
das
rcrl
ret
or
or
and
and
sub
and
out
mov
imul
jmp
mov
xor
jecxz
fimuls
pop
aas
add
pushf
out
out
popa
sbb
outsb
imul
xor
sub
or
divb
lea
lds
cli
add
lret
lea
stos
out
jo
xor
sub
vandps
cld
sar
jb
sub
out
cmp
cmpsb
mov
test
xor
sub
xchg
mov
outsb
inc
pusha
push
arpl
xor
dec
pop
dec
mov
or
ret
xchg
fnstsw
inc
xchg
repz
aad
jbe
scas
nop
imull
push
dec
fwait
pop
inc
mov
mov
cmp
cs
push
inc
std
push
mov
bound
aad
mov
mov
lahf
mov
sub
bound
fwait
mov
push
xor
push
add
lcall
mov
out
lret
decb
imul
cmc
lret
xchg
ret
enter
pushf
pop
je
jbe
inc
xchg
movsl
mov
xchg
leave
cmp
or
adc
mov
daa
mov
xchg
test
inc
cmp
inc
jl
aam
pop
push
sub
xchg
loope
lcall
loop
sub
pop
sahf
sbb
cmp
popa
jmp
adc
pop
mov
popf
enter
idivb
jbe
xchg
addr16
pushf
jns
fld
mov
fmuls
arpl
xchg
test
int3
orl
shrb
leave
test
cmp
push
sti
fbstp
nop
inc
xchg
sbb
mov
sub
popf
in
nop
or
mulb
hlt
cmc
mov
dec
jecxz
push
ja
jno
mov
iret
jp
xor
or
inc
std
dec
jno
jle
sbb
ss
sti
push
sub
dec
xorb
int3
pop
jle
aad
movsb
fstpt
pushf
rclb
jg
sahf
je
jp
or
popf
mov
insb
pop
mov
sti
das
lods
push
loopne
into
outsb
lds
enter
gs
repnz
out
pop
movsl
aad
fiadds
rcrb
mov
out
mov
push
aaa
push
adc
test
lret
cmpps
xchg
gs
mov
lret
xor
sub
push
popf
xor
jo
mov
inc
in
cmc
mov
pop
jmp
xchg
int3
cmp
cmp
adc
inc
sbb
ret
in
mov
jecxz
xor
ds
and
cmc
aas
mov
mov
sub
out
mov
dec
test
stos
movsb
lock
testl
add
shl
movsb
push
dec
lahf
mov
icebp
sub
mov
add
xor
pop
xor
inc
lods
cli
rep
push
mov
cmp
out
cmp
sbb
inc
inc
mov
and
pop
jnp
movsb
push
aaa
add
xchg
pop
dec
jg
and
sbb
nop
jle
sub
sub
push
movsl
xlat
gs
push
das
orb
test
into
notl
clc
mov
inc
scas
nop
push
adc
clc
repz
adc
subb
jmp
mov
add
int3
jg
add
push
movl
cltd
call
repnz
nop
mov
jecxz
and
xor
repz
das
xchg
xor
gs
imul
inc
mov
mov
insl
jecxz
add
scas
mov
xlat
fistps
outsb
adc
shlb
aas
xlat
rcrl
in
sbb
push
jmp
inc
sub
lahf
cmpsb
sbb
xchg
pop
xchg
mov
sbb
jne
pop
mov
pop
leave
insb
ret
outsl
push
cmp
fmul
cwtl
sbb
mov
pop
adc
ficompl
and
bound
decl
cmpsl
mov
push
push
mov
or
dec
out
ret
xchg
jno
lods
int3
cmp
scas
and
add
adc
int3
sbb
mov
xchg
xor
nop
cmp
jb
or
roll
in
out
in
mov
mov
lock
inc
mov
fistpl
cs
adc
outsl
pop
pop
outsl
xchg
pop
mov
shl
pop
sahf
adc
inc
add
adc
pop
imul
sarl
adc
orb
add
std
mov
xor
cmp
and
test
lret
arpl
lret
and
pop
dec
xchg
push
or
lock
and
mov
pop
hlt
mov
ret
fnstcw
popa
inc
cld
shl
dec
xchg
rclb
in
jns
stc
addr16
and
xchg
test
out
pushf
in
xor
test
ja
dec
sbb
popa
push
mov
ja
lahf
mov
or
test
nop
xchg
add
loope
jmp
and
and
iret
sarl
lcall
outsl
xlat
jp
std
dec
adc
adc
mov
je
pop
jns
popf
xchg
addr16
std
clc
out
test
sahf
inc
es
cmp
in
push
repnz
mov
in
call
cld
add
push
mov
jecxz
add
jmp
xor
mov
pop
insb
jmp
aas
in
rolb
cld
lret
mov
sti
imul
mov
cmp
ja
cmpsl
jbe
jns
xor
sti
lods
stc
les
pop
xor
mov
cmp
loopne
pop
imul
cltd
mov
notl
jae
inc
pusha
inc
adc
and
lcall
das
xor
mov
mov
or
push
aam
jge
pop
iret
data16
xlat
xor
repnz
cmp
test
fimuls
cmp
and
cmp
inc
and
out
pushf
pop
je
push
and
cmpsb
xor
cmp
fwait
and
sub
daa
mov
pusha
xchg
lahf
loopne
pop
xor
daa
push
lcall
lret
int
xchg
inc
push
push
aas
add
dec
outsb
mov
sub
jns
inc
jg
push
cmc
arpl
mov
je
xchg
aad
push
out
idivl
lds
push
imul
pop
popl
subl
mov
dec
pop
repz
jo
xchg
fiadds
rorl
mov
dec
icebp
jle
pusha
rcl
push
mov
cld
xchg
xchg
adc
fstl
mov
in
out
int
aam
mov
cltd
inc
scas
mov
dec
adc
pop
jnp
fstpt
jmp
ret
inc
jp
in
pop
nop
add
cmpsl
call
icebp
push
pop
insb
std
sbb
add
pop
addr16
enter
aas
enter
mov
add
loop
mul
and
jecxz
add
or
dec
loope
jp
js
xchg
cmp
xchg
scas
pop
aam
adc
add
push
jp
pop
bound
shll
add
xchg
sub
sub
dec
aam
dec
pop
out
outsb
js
rclb
adc
aam
ds
push
and
adc
xor
jl
add
enter
repnz
ror
ljmp
cmp
xchg
leave
mov
jge
loope
dec
test
repnz
mov
pop
loopne
out
xchg
push
fbld
in
mov
test
fwait
cmpsl
pop
push
mov
aas
shlb
stc
cld
out
and
mov
mov
fldl
int
ror
push
jmp
jne
mov
pop
nop
add
jae
test
pushf
push
xor
mov
in
sub
lret
xchg
mov
pusha
sub
fisubrl
jne
cmp
xchg
mov
inc
je
add
sti
scas
es
pop
mov
adc
clc
jae
cmp
push
cmpsb
enter
daa
adc
dec
clc
push
mov
fnsave
aam
pop
int3
add
stos
stos
daa
into
pop
popa
stos
test
and
sbb
lods
push
repz
jecxz
xchg
push
xlat
cmp
pop
add
cmpsb
sahf
aaa
cmp
mov
and
fidivs
push
int3
xor
lods
pop
into
inc
cmp
arpl
mov
or
sbb
push
and
mov
push
scas
leave
push
out
push
mov
mov
push
das
aas
int3
add
mov
sar
stos
out
clc
add
xlat
jg
sub
push
bound
or
out
pop
rolb
sub
cs
stc
push
dec
in
cmovno
addr16
add
pop
adc
pop
pop
and
jp
push
mov
sbb
sub
nop
fisubs
add
movzbl
pop
iret
mov
popa
sub
mov
loop
inc
ljmp
jg
fldl
jg
push
push
xchg
ljmp
rorl
add
xor
pop
xor
repz
sub
push
add
jo
imul
cmc
iret
mov
jns
lods
gs
mov
imul
icebp
gs
fisubs
pop
mov
arpl
mov
movsl
stos
mov
test
fstpl
dec
xchg
sbb
mov
pmuludq
cwtl
jle
inc
push
adc
ja
mov
cmpsb
mov
daa
sub
test
xchg
js
pop
push
or
mov
adc
test
inc
inc
insb
imul
dec
adc
jo
lcall
pop
outsl
mov
outsl
stc
xchg
pop
lds
inc
nop
adc
mov
or
aam
mov
cmpsl
add
xchg
pop
das
xor
mov
stos
notb
pop
out
clc
or
jnp
jmp
inc
fmul
aam
mov
call
shlb
out
test
sbb
pop
jge
movsw
dec
sub
jns
jno
mov
daa
imul
subl
inc
fcmovne
inc
ss
cmp
jno
orb
push
repz
repz
add
mov
mov
jmp
mov
ret
pop
mov
mov
imul
loopne
pop
stos
int3
cmp
pop
loopne
xchg
push
pop
cmpb
roll
or
mov
and
lds
mov
loope
iret
cmc
decb
jge
loope
test
cmpl
cmpsl
and
call
push
jns
cli
loop
add
mov
pop
jne
mov
daa
pop
lock
adc
lcall
push
xchg
icebp
adc
xchg
in
adc
icebp
test
std
cmc
push
mov
or
jne
jecxz
adc
and
mov
pop
adc
mov
mov
idivb
dec
or
jo
inc
xchg
shll
push
stos
aas
outsl
pop
nop
and
out
incl
or
add
sub
xor
and
or
rol
scas
test
lret
pop
stos
jae
mov
fstps
xchg
add
push
cltd
testl
fistpll
pop
aam
mov
lock
lcall
jne
pop
cmp
add
xlat
aam
fldt
mov
out
fcmovnu
push
mov
mov
xchg
cli
stc
or
cmpsl
subb
adc
pop
push
sbb
inc
je
adc
mov
dec
or
divl
das
xchg
inc
inc
xor
fdivr
loopne
scas
idivb
lea
in
pushf
or
or
lea
sbb
xchg
dec
ljmp
in
mov
fwait
mov
loope
repnz
das
daa
xlat
and
ljmp
push
data16
xlat
inc
in
lret
mov
popf
enter
adc
sbb
cmp
rorl
arpl
or
xor
pop
inc
fnstsw
lea
imul
xor
pop
stc
mov
lret
setb
out
pop
push
fists
repnz
shll
xchg
cmp
fcomps
ret
xchg
add
je
insb
pop
aas
cmc
push
aam
dec
test
je
or
testb
mov
negb
pop
jl
mov
js
ror
sub
pop
inc
movsl
jae
scas
pop
or
xor
enter
in
daa
mov
test
sarb
lods
mov
push
fcompl
mov
lahf
jae
xchg
sbb
les
mov
in
aad
hlt
mov
push
sub
mov
fldz
mov
push
xor
fisttpl
pop
sub
insb
and
movsb
aad
fwait
cltd
mov
ficoml
gs
mov
lods
insl
imul
mov
jnp
push
push
cmp
jno
fucomp
jns
xlat
cmp
xchg
dec
sub
cltd
xor
sub
ds
and
aas
fadd
mov
das
cmp
stos
adc
lret
push
lcall
push
lahf
std
mov
and
push
xchg
lret
lds
sbb
int
or
cmc
popf
jo
roll
inc
movnti
cwtl
mov
repnz
rcrl
cmpsl
ljmp
test
jae
bound
jecxz,pt
insb
mov
and
loop
mov
push
les
or
mov
mov
pop
cmp
pop
adc
enter
inc
add
jne
push
jecxz
fists
andl
cltd
dec
jmp
cmpsb
repz
pop
push
rcll
lods
insb
jo
jb
int3
bound
insb
push
dec
mov
iret
in
fisubrs
and
jl
adc
insl
mov
stos
and
imul
cmpsb
dec
sbb
pop
pop
mov
fldenv
cmp
sbb
fwait
or
scas
shl
xchg
push
ja
mov
lret
cmp
jge
pop
cmp
popf
dec
jno
arpl
dec
adc
adc
es
xor
mov
lahf
out
scas
popf
int
pop
xor
sub
push
ja
and
fdivrp
inc
pusha
xchg
aad
call
loop
stc
stos
mov
cmp
or
leave
mov
test
xor
jle
sarl
and
inc
jle
adc
test
pusha
push
dec
mov
cs
mov
xchg
int3
adc
sub
insb
mov
and
sub
mov
pop
add
dec
xor
mov
xor
icebp
jne
lods
out
ret
shrb
pop
outsl
mov
mov
add
arpl
pop
fs
mov
into
and
pop
add
shl
bound
inc
insb
or
aam
jno
call
arpl
inc
and
jbe
rcl
addr16
idivb
mov
fildll
lahf
pop
imul
push
add
jb
movsb
sahf
inc
pop
or
out
jno
sub
test
sub
loop
push
jbe
int3
jg
inc
xor
sub
mov
daa
in
and
scas
call
mov
and
push
loope
xchg
xchg
and
sbb
movsl
pop
nop
push
addl
push
popf
inc
inc
mov
sti
int3
fwait
nop
adc
ljmp
scas
pop
push
xchg
neg
mov
fnstsw
movsl
fstl
inc
jne
cmp
xor
xlat
xor
outsl
ret
aam
jae
in
mov
testb
in
cmc
xchg
jbe
cmp
int3
mov
aaa
sbb
andb
or
bsf
sbb
ret
pop
xor
sbb
adc
cmp
sub
xor
mov
jbe
std
cltd
add
test
ja
sub
xchg
mov
iret
inc
clc
ds
inc
pop
jb
push
fsub
gs
mov
inc
jle
push
mov
cmp
das
add
add
mov
mov
sub
aas
in
repz
fnstcw
sahf
cmp
mov
sbb
sarl
sbb
dec
dec
adc
fisubl
into
sbb
int
pop
sbb
xchg
cmc
or
aaa
or
xchg
iret
int
or
xchg
je
adc
xchg
aad
stos
dec
adc
pop
lret
fistl
xchg
pop
enter
repz
rcrl
adc
pop
cmp
lretw
mov
jge
pop
testl
mov
ret
jp
mov
rcrl
cmp
loopne
je
sti
jb
sub
mov
jl
push
jns
xchg
xchg
adc
iret
mov
mov
dec
notb
mov
cs
loopne
lods
jle
pop
mov
es
imul
mov
adcb
cmpsl
inc
daa
xor
add
pop
add
mov
xchg
pop
push
push
pusha
rcrl
into
or
cmpsl
inc
push
jl
shl
or
mov
dec
and
mov
dec
es
cli
std
push
dec
dec
sbbb
inc
pop
loop
pop
int
and
or
je
or
mov
nop
add
or
add
les
mov
jbe
and
lahf
sti
dec
stc
pop
dec
cmp
clc
fistl
loope
mov
dec
ret
popf
lods
inc
push
push
sub
popa
inc
mov
inc
or
rcrb
fldt
jecxz
cli
mov
iret
jl
shll
int3
xorb
ret
movsb
ljmp
push
insb
mov
mov
mov
sub
pop
shll
inc
pop
xor
fsubrs
pop
or
test
ljmp
jle
mov
sbb
push
push
xchg
mov
call
cmc
xchg
popa
mov
and
lcall
mov
jnp
sbb
ret
ror
push
add
es
jge
mov
cmp
mov
pop
mov
in
in
fisttpll
and
sub
sar
add
arpl
sbb
jns
jecxz
add
mov
mov
gs
out
jp
xchg
insl
cmp
cmpsl
adc
mov
sbb
lea
test
cmp
int
jecxz
add
dec
cmpl
mov
add
mov
mov
dec
adc
bound
test
pop
mov
jge
pushf
jmp
insl
idivl
mov
hlt
lock
push
dec
fiaddl
inc
and
lret
mov
stos
xchg
movsb
pushf
ss
jmp
fmulp
sbb
mov
xchg
inc
cmc
into
inc
jae
popf
mov
add
daa
jae
sub
jbe
and
je
add
jno
out
push
xchg
push
cmc
and
ja
mov
sbb
sub
mov
adc
sysenter
pop
sbb
and
push
mov
sahf
push
jmp
mov
jne
push
jo
inc
movsl
inc
push
in
xchg
sub
cli
sbb
aad
sub
jp
and
negl
inc
scas
cmpsb
sub
mov
xor
aad
sbb
mov
jecxz
push
xlat
jns
pop
in
lret
incb
adc
out
pop
cmp
insl
popa
js
xor
or
xor
in
shrl
mov
dec
xchg
mov
test
add
pop
flds
sub
insl
pop
cli
or
jp
cltd
jae
cmp
jb
mov
les
arpl
adc
push
shll
cmp
mov
ja
test
mov
add
sub
pop
fldcw
cmp
xchg
movsb
fldl
xchg
and
call
psubsw
mov
xchg
mov
pop
js
fcomi
cmp
les
xor
push
inc
adc
pop
imul
es
or
add
repnz
mov
mov
iret
jnp
sub
scas
pusha
sahf
ds
pop
jp
jno
mov
lret
inc
pop
mov
mov
xchg
mov
enter
in
jmp
inc
inc
xor
pushf
push
push
mov
mov
insl
jge
mov
push
insb
sar
inc
mov
inc
loopne
loop
pop
cmp
xchg
leave
push
xchg
add
iret
sbb
std
mov
mov
lds
fldl
adc
rcrl
js
xor
sti
inc
mov
fsubl
dec
mov
loope
mov
or
lods
pop
pushf
shll
cmpsb
outsb
repz
and
ret
aas
into
mov
mov
jb
enter
adc
inc
pushf
std
ret
mov
sahf
icebp
ret
or
sbb
cs
mov
rclb
lock
fsubl
sahf
mov
lods
sbb
fdivs
jno
mov
loopne
pop
ds
jns
stos
push
or
xchg
shlb
loope
xorl
gs
adc
add
hlt
jmp
inc
and
sub
xor
adc
cli
aas
jae
int3
mov
daa
jnp
sarl
ds
push
ret
pop
jp
xor
lods
push
jne
pop
xchg
outsb
ss
jle
inc
dec
xor
mov
or
pop
xor
test
rorl
sbb
cmp
fildll
inc
jg
test
sbb
add
mov
hlt
sar
lock
fwait
mov
xor
ja
cwtl
stc
push
cmp
xchg
push
test
push
imul
in
pop
rolb
dec
sbb
iret
sub
addr16
iret
sti
shrb
adc
ds
jecxz
test
cmp
loope
ja
push
add
inc
int3
push
xchg
jecxz
push
fsts
adc
das
test
fldcw
fwait
pop
and
and
testl
add
xor
push
icebp
outsl
add
imul
and
pop
inc
mov
cmp
hlt
inc
enter
sub
rcrb
cs
cmpl
xor
push
mov
shr
jmp
daa
xor
outsb
popa
mov
fwait
adc
jno
sti
sbb
unpcklps
sbb
aam
sbb
cmp
lret
inc
xor
mov
mov
mov
mov
movsl
cltd
adc
or
jbe
test
inc
push
and
fwait
call
or
inc
dec
cmp
xchg
scas
xor
aas
cmp
lock
icebp
lret
mov
sar
jmp
xor
inc
mov
inc
adc
clc
lcall
popf
mov
mov
dec
out
add
std
fmuls
cmpb
push
or
and
sbb
outsl
xchg
mov
stc
fwait
leave
push
pop
pushl
out
fucomp
add
mov
in
xor
sub
push
adc
mov
cmp
into
movsl
inc
out
mov
outsl
in
ljmp
sbb
sbb
cmp
jne
arpl
pop
mov
jne
mov
popa
dec
rolb
aaa
es
mov
pop
push
fstl
ret
fidivl
addr16
inc
lock
test
nop
xorl
mov
inc
sub
push
sbb
or
and
je
cmpsb
mov
cwtl
inc
and
jecxz
js
xchg
mov
jecxz
sub
mov
aam
push
push
cmp
insb
lods
fistps
cmp
scas
cmove
lods
xchg
out
lock
jns
insl
sbbb
xor
sbb
lods
jne
inc
pop
nop
pusha
shrb
shll
push
pop
ja
adc
adc
mov
jo
mov
cwtl
sub
pop
push
into
and
mov
cmp
sbb
addr16
pop
xor
out
dec
mov
lret
dec
pop
push
rorb
das
imul
fldt
out
in
jl
jns
jp
in
inc
mov
arpl
inc
xor
push
jno
mov
jp
int
push
es
ret
fstps
in
pop
sti
out
add
sub
js
cmc
testl
out
fs
out
sub
or
mov
shlb
cld
inc
pushf
mov
andnps
aam
imul
hlt
or
dec
pop
mov
pop
mov
dec
loop
push
daa
fwait
sbb
popa
scas
xchg
aam
inc
hlt
aam
mov
ds
out
pop
adc
jno
mov
sub
stc
cmp
repnz
xchg
dec
cld
imul
sub
lret
dec
cwtl
xchg
pushf
leave
cwtl
inc
pop
shl
mov
cs
outsb
push
xchg
cmp
pushf
adc
inc
cmc
and
ljmp
mov
and
jp
cmp
mov
mov
cmp
mov
popa
stos
adc
ret
pusha
nop
lds
outsb
popa
adcb
adc
jbe
pop
pop
push
imull
lret
dec
aaa
les
fistpl
lea
test
add
cs
mov
leave
cmc
rcrl
int3
outsb
das
ret
push
in
shl
sbb
pop
jecxz
jno
jmp
pop
movsl
cmp
xor
sbb
mov
cltd
xor
or
fsubr
outsl
ficoml
push
js,pn
insl
sub
jg
fs
sbb
cmp
negb
mov
or
cmc
hlt
mov
loope
ljmp
popf
repz
in
xchg
int
push
push
and
add
fsubs
mov
pop
loop
xchg
popa
ficoms
xchg
push
inc
outsl
dec
sub
bound
mov
rcll
es
movsb
xor
shlb
stos
xor
in
mov
adc
cs
jns
stos
in
pop
pop
fcmovb
faddl
mov
cwtl
xor
push
rolb
imul
fisttpll
cmp
sub
cli
outsb
sub
loopne
mov
fidivrs
cli
cld
mov
fbld
loope
adc
nop
adc
pop
jle
insl
pusha
lods
aad
mov
push
add
jnp
dec
lahf
sbb
stos
push
add
fs
enter
inc
cmp
test
sete
push
imul
mov
cmpsb
or
loop
scas
daa
je
mov
cmp
xchg
jb
dec
xchg
inc
cmpb
inc
sub
imul
popf
add
jne
pop
mov
inc
xchg
int
fsubrl
dec
mov
jle
dec
stc
mov
mov
mov
fstpl
movsl
xor
push
cmpsb
xor
call
or
fsubl
inc
mov
mov
clc
pop
or
or
int3
outsb
jb
push
imul
pop
roll
leave
leave
aaa
arpl
jp
pushf
push
sub
repnz
and
xchg
xchg
xchg
mov
aas
int3
inc
ja
lcall
cli
loop
xlat
rcrb
fs
xor
test
push
jb
jbe
int3
imul
mov
jge
bound
lcall
pusha
test
in
mov
jns
adc
jge
pop
xchg
loop
dec
add
mov
mov
mov
test
jnp
std
shl
add
adc
push
add
cmp
jno
pop
pop
cmpsb
xor
addr16
or
daa
das
dec
shrb
shrb
call
fcom
pop
int
xchg
sti
insb
shll
jb
pop
iret
mov
out
fs
dec
inc
adc
adc
inc
xchg
pushl
mov
shll
push
add
cmc
push
xchg
jp
mov
push
xor
das
or
aas
or
cld
add
jmp
or
out
xor
arpl
dec
mov
imul
push
int3
inc
mov
mov
arpl
enter
inc
lret
mov
sub
mov
subl
enter
pop
ljmp
adc
dec
out
test
lahf
shlb
adc
sbb
repnz
leave
push
sahf
push
sti
cmp
adc
push
int
data16
and
jp
ss
dec
out
loope
mov
mov
sbb
adc
mov
movsl
bound
ja
mov
mov
xlat
lods
mov
test
iret
popa
xor
inc
cmp
aaa
int3
adc
or
gs
in
ss
ljmp
pop
sub
push
pop
pop
and
ja
mov
pop
adc
stos
cltd
fs
dec
mov
repz
mov
inc
cmc
inc
adc
jb
pop
push
xlat
pop
dec
and
es
cmp
mov
lahf
or
inc
popl
push
dec
in
arpl
and
repz
scas
mov
data16
repnz
inc
shll
lods
icebp
loopne
gs
jnp,pt
pop
movsb
bound
mov
ds
fisubs
add
mov
fsubrl
repnz
sbb
es
fstpl
cmp
sti
in
sahf
insb
mov
xchg
jle
pop
mov
mov
push
mov
mov
cmp
scas
pop
mov
xchg
outsb
ss
das
cmovo
xchg
cli
dec
lods
ret
mov
ficoms
repnz
popa
mov
jns
test
cwtl
sbb
mov
mov
push
or
nop
adc
pop
add
stos
out
ljmp
mov
test
mov
sti
sub
adc
mov
add
mov
mov
scas
or
and
fsubl
pushf
lods
fwait
mov
or
cmp
cmp
adc
mov
rorl
fxch
sub
push
fnsave
xchg
and
int3
adc
jecxz
dec
jecxz
pop
dec
jmp
data16
xor
pushf
sarl
int
idivb
push
push
push
mov
add
mov
lret
test
ret
add
adcl
mov
pop
pop
and
xor
xchg
scas
and
enter
cmc
inc
ficomps
nop
iret
pop
outsl
stc
add
popa
sbbb
sub
push
mov
ds
or
push
cltd
repnz
sub
sbb
inc
xor
xor
pop
sub
icebp
arpl
aas
lock
pop
dec
cmp
clc
xor
fisttpll
decb
push
inc
dec
je
testl
sub
movsb
je
xchg
fadd
sub
rcrb
loope
adc
nop
lret
adc
sbb
pop
cmpsb
rorb
xchg
mov
xchg
and
mov
push
mov
sub
fidivl
subb
iret
dec
xchg
insl
xor
and
sti
lcall
mov
aas
inc
mov
sbb
dec
jp
add
icebp
stos
into
dec
mov
cmp
dec
xor
ja
add
jp
inc
inc
pushf
sbb
adcl
outsb
jmp
mov
call
inc
xchg
mov
xchg
xchg
out
xor
lods
inc
mov
je
dec
cmp
pop
ss
add
shrl
scas
movsb
xchg
pop
pop
sbb
pop
ja
repnz
test
iret
lret
xor
out
pop
push
je
push
pushf
and
jae
jns
xor
aaa
push
nop
mov
aam
and
or
cwtl
out
xor
xlat
pushf
pop
icebp
sub
add
out
and
ret
inc
in
cwtl
fistl
hlt
mov
xor
cmp
loope
mov
jae
cmp
inc
cli
mov
das
xchg
or
jnp
sti
adc
sbb
out
mov
inc
test
sti
xlat
push
pop
fdivr
and
out
lret
clc
or
aas
out
test
int3
xor
lret
ret
inc
push
push
jnp
inc
fwait
pop
insl
fs
repnz
mov
push
dec
test
or
pop
and
and
pusha
std
pop
outsl
cmp
mov
adc
xor
fdivr
popf
cld
out
es
lcall
xor
mov
dec
xchg
arpl
mov
mov
sbb
xor
dec
push
arpl
pop
inc
les
dec
fimull
sbb
aam
xor
mov
loopne
test
daa
or
push
push
cwtl
cltd
xchg
out
enter
adc
int
mov
cli
sbb
fstps
or
out
cld
mov
push
test
lods
mov
jl
sub
pop
xchg
push
add
fisttpll
nop
jo
loopne
in
adc
mov
in
cmpsl
ds
sbb
movb
xchg
adc
pop
adc
loope
xchg
cmp
mov
or
gs
decb
loope
pop
jb
dec
jae
push
jae
sub
test
jnp
fcmove
popf
inc
ja
mov
sahf
push
rcll
xchg
rol
fsubrl
inc
push
xor
cmp
lret
mov
jae
dec
jecxz
inc
pop
fstpt
pop
sub
fs
push
ss
stc
lock
adc
or
add
mov
dec
adc
xchg
in
dec
sub
mov
popf
rorb
inc
or
mov
aaa
int3
aaa
or
ss
lods
sbb
dec
cld
mov
sahf
pop
in
or
mov
inc
sbb
jge
pop
ds
adcl
push
out
jle
or
outsb
cltd
push
shll
sarl
add
push
sub
pop
xchg
stos
xchg
cmp
pop
pop
movsl
fidivrs
mov
into
les
push
fcmovnu
dec
lock
pop
or
add
ret
int
cmp
leave
and
and
push
pop
or
fs
mov
xchg
mov
pop
iret
scas
mov
ret
dec
sahf
mov
mov
inc
or
cmp
cli
test
sahf
dec
push
out
arpl
cmc
mov
adc
xlat
push
dec
aad
outsl
sbb
or
push
jge
jle
pop
cld
cli
pop
rolb
sbb
dec
dec
mov
cld
or
push
or
mov
jl
in
xor
out
lret
aas
addr16
inc
cmp
leave
cltd
mov
popa
pop
jp
fistpll
and
xchg
pop
inc
or
cmp
cmp
pop
push
jge
addr16
add
pop
fimull
ret
mov
xchg
inc
mov
mov
addr16
ja
pushf
push
rcr
jl
int3
inc
and
or
push
adc
shrb
aad
les
jns
cmp
scas
sub
stc
and
mov
pop
lret
sbb
movsb
add
dec
add
push
js
xchg
push
push
lahf
push
jmp
iret
sub
std
fldcw
xchg
cmp
cmp
ret
shlb
mov
icebp
adc
out
and
and
dec
fnsave
popl
popf
pop
out
xor
jmp
xchg
ret
popf
sbb
mov
cmp
lea
push
sub
je
fmull
cmp
pop
jle
jae
mov
pop
push
push
sbb
and
and
mov
cmpw
movsl
subb
adc
dec
sbb
clc
cmp
pop
pop
es
and
out
dec
lret
or
mov
subb
xchg
cwtl
insb
cmp
xchg
jecxz
lret
xorb
fiaddl
pop
add
mov
add
xchg
xor
je
xchg
inc
push
adcl
aas
out
or
mov
push
lcall
lock
jmp
arpl
xchg
insb
add
mov
cmp
mov
ds
xchg
lret
or
xorb
push
sbb
sbb
push
push
jmp
scas
pop
sub
jo
shlb
adc
push
dec
add
iret
lds
push
fistpll
cld
cmp
mov
in
jo
cmp
ficomps
enter
add
xchg
pop
mov
fnstenv
popf
fsts
or
add
pusha
fnstcw
or
in
push
divl
test
push
int
dec
movsb
jbe
fs
cmp
sbb
pop
testl
adc
lods
pop
pop
xor
push
adc
adc
cmpl
adc
inc
sbb
pop
jle
push
dec
negb
daa
es
iret
dec
out
test
cmpsl
and
jae
jne
mov
sbb
sbb
mov
cmp
ror
lret
repnz
jne
int3
shlb
in
lods
jge
inc
push
mov
ss
je
mov
sub
push
dec
mov
sub
inc
cmp
adc
in
ja
adc
mov
jle
addb
insb
jg
jo
jbe
test
fidivs
int
faddp
dec
mov
sub
imul
and
xor
xor
dec
pop
dec
xorl
negb
xor
inc
jecxz
xchg
lods
mov
test
stos
out
enter
sub
or
in
and
jnp
test
ja
sarb
or
xchg
or
movsl
xorl
inc
mov
pop
fcomps
dec
dec
adc
mov
into
ja
mov
and
jnp
xchg
cmpsl
jns
repnz
mov
fnsave
hlt
jbe
lock
push
push
and
add
imul
cmpsb
pop
xchg
es
dec
loopne
dec
inc
mov
movlhps
push
mov
xchg
xchg
je
mov
inc
sub
mov
adcl
sahf
adc
mov
aaa
out
or
out
lds
insb
aaa
aam
loopne
clc
and
xlat
xlat
mov
sti
xchg
add
pop
clc
cmp
hlt
daa
mov
in
in
jge
and
adc
ret
pop
test
lcall
mov
sbb
sbb
nop
mov
cmp
imul
jg
insl
xchg
inc
jb
xchg
jae
adc
sub
sub
push
data16
fs
or
jecxz
inc
inc
mov
cld
nop
lret
jle
lods
mov
pop
or
into
sbb
pop
in
fidivrl
push
fmulp
dec
mov
sahf
test
aaa
mov
pop
daa
dec
shll
sub
loope
and
out
adc
or
rcrl
dec
imul
sahf
int
ss
scas
cmp
arpl
int3
xorl
fs
ja
xchg
leave
mov
adc
push
mov
pop
inc
and
adc
inc
push
jno
cmpsl
mov
lock
scas
stos
fisttpll
rclb
sbb
cmc
xorl
aas
xor
pop
mov
mov
arpl
fs
sbb
sbb
nop
stos
test
xchg
scas
mov
mov
stos
mov
adc
das
shl
pop
cmp
imul
xchg
mov
fildl
jnp
mov
xor
int
adc
aas
pop
sub
and
xchg
sub
cmpb
lea
xor
sti
test
dec
push
xor
scas
xor
movsb
lods
add
mov
fnstcw
mov
cmp
vaddps
adc
cltd
outsl
mov
xor
pop
cmp
fdivl
orb
pusha
cmp
xchg
mov
mov
pop
aas
mov
xor
inc
pop
icebp
jmp
ljmp
push
add
out
popa
mov
jle
cmp
mov
xchg
test
scas
subb
pop
das
push
addl
test
jb
pop
cltd
pop
add
imul
rorl
jns
pop
jns
clc
push
or
fisttps
mov
jns
pop
pop
cltd
or
jge
fwait
loopne,pn
add
mov
cmp
inc
jnp
xchg
pushf
data16
inc
fstps
and
xchg
fidivs
loopne
cmpsl
fldt
and
jmp
popf
mov
fdiv
out
rcr
mov
loopne
mov
jg
mov
dec
xchg
add
sub
das
jbe
dec
push
in
pop
push
loope
pop
sahf
xchg
xchg
jnp
push
xchg
mov
clc
inc
popf
xor
push
or
test
inc
xchg
mov
std
popf
rclb
mov
pusha
and
jnp
mov
xor
adc
aam
add
sbb
mov
inc
sub
or
add
inc
dec
mov
int3
jl
pop
jmp
test
in
add
imul
test
inc
xor
mov
addr16
inc
lret
pushf
sub
sub
xchg
stos
fs
dec
push
lea
and
je
cmpsl
das
std
pop
or
sub
je
jbe
jge
push
cmc
out
ret
int
out
std
clc
push
insb
adc
mov
sti
add
outsb
cmp
ficoml
pop
arpl
pop
mull
popa
cmc
xor
fwait
insl
jae
xor
jg
ror
dec
pop
mov
shrb
clc
push
fisttpl
es
push
and
cmp
sahf
dec
lds
sub
push
or
push
xor
push
popf
add
xor
sub
mov
xchg
call
dec
leave
push
cmpsb
mov
das
xchg
jmp
mov
scas
sarb
loop
mov
es
sahf
das
inc
mov
push
pop
lds
es
cld
mov
pop
pop
movsb
outsb
out
sub
ds
icebp
cltd
xlat
test
hlt
mov
mov
stc
mov
xchg
leave
push
rcrb
cmpsl
loop
lret
out
sub
mov
or
std
add
push
lcall
in
cmp
movsb
out
mov
addr16
fsts
stos
xor
pop
in
adc
gs
in
lods
sub
cmp
or
xor
jne
pop
xchg
sub
fldl
mov
test
pusha
pop
sarb
jmp
cwtl
inc
mov
adc
xor
in
pop
dec
stc
pop
scas
jecxz
mov
sbb
adc
xchg
sbb
icebp
fucomp
push
lcall
loop
imul
jb
jb
or
cli
loopne
outsl
aaa
sub
cmp
insb
add
sbb
pop
test
cmp
jg
test
clc
push
out
fwait
test
imul
outsb
dec
xchg
pop
dec
mov
aaa
clc
inc
inc
cmpsb
inc
stc
pop
int3
out
xchg
mov
pop
mov
mov
test
push
inc
mov
mov
xchg
inc
test
push
sbb
mov
rep
aad
mov
inc
add
cwtl
loope
enter
sbb
jmp
jns
into
push
jmp
out
popa
pop
and
stc
adc
out
jo
sub
sub
int
int
xchg
arpl
xchg
jge
scas
add
dec
clc
sub
mov
gs
clc
jns
movsb
xchg
ret
jnp
in
or
lods
punpckhbw
mov
stc
sbb
loopne
xor
sub
mov
jg
xchg
les
mulb
loop
mov
cmp
push
fsubrs
jle
push
enter
movsb
sub
andb
enter
test
add
add
inc
add
mov
movaps
dec
cmpsl
inc
mov
mov
stos
mov
and
jp
push
jae
or
or
push
aad
adc
mull
adc
jge
xchg
mov
mov
adc
pop
and
mov
sub
adc
mov
cmc
movsl
mov
cmpsb
shll
cltd
subl
test
psubusw
push
sub
je
rcrl
out
lcall
aaa
mov
mov
inc
or
sub
fstpt
add
jl
fdivrs
pop
or
sub
clc
and
sti
mov
lock
dec
popa
pusha
xor
and
xor
repz
pop
xor
lea
aaa
lahf
adc
pushl
mov
or
scas
add
xchg
cld
lahf
test
and
test
mov
ret
add
pop
popf
pop
stos
adc
xorb
mov
and
lcall
push
mov
jno
mov
mov
pop
inc
inc
mov
add
loopne
dec
jle
push
sub
mov
sbb
push
jo
imul
int3
push
jne
jmp
pop
hlt
cmp
inc
lods
dec
cmc
insl
insl
movsb
mov
xchg
adc
add
pop
cwtl
mov
adc
jl
adc
ficomps
add
insb
sub
jmp
out
dec
sub
push
test
lock
xchg
mov
push
fimuls
dec
dec
out
cmp
xchg
dec
pop
and
sbb
sub
outsl
stos
xchg
push
lret
cmp
jne
and
sbb
sbb
sbb
add
sub
and
mov
push
jne
dec
rep
cmpb
add
insl
jecxz
pop
pop
mov
or
jnp
mov
outsb
add
jmp
pop
xlat
sub
cmp
mov
jne
jne
mov
dec
std
repnz
test
mov
test
arpl
jecxz
das
adc
mov
movsb
dec
jbe
or
pop
xchg
pop
jmp
xchg
test
out
cmp
inc
sti
aam
aad
orl
pop
mov
jp
cmovae
cmp
inc
xchg
ja
setnp
pop
pop
dec
push
cmp
sub
js
sbb
xor
pop
cs
outsl
mov
sub
subb
jmp
mov
or
ljmp
imul
sub
fstl
mov
lock
cmc
in
adcl
mov
jecxz
hlt
sub
dec
mov
das
mov
add
cmp
pop
mov
sbb
ficomps
fs
pop
dec
mov
mov
jns
jbe
mov
jg
fs
cmp
xchg
cld
loopne
jecxz
lds
push
leave
pop
je
xchg
push
repnz
pop
push
xchg
jg
aas
dec
xor
push
jl
popa
test
sbb
pop
xchg
cmp
xlat
mov
jmp
cmp
and
loop
push
push
and
xchg
xor
dec
pop
adc
add
lods
xchg
jns
aad
out
or
repz
add
adc
mov
adcb
xchg
sbb
enter
out
std
addb
mov
mov
jo
dec
lea
xlat
mov
sub
pop
idivb
cmpsb
in
fidivrl
cmp
testb
jb
out
mov
mov
das
gs
repz
repz
arpl
into
insb
mov
cmp
and
std
add
divb
fidivrs
das
ljmp
cld
ret
pop
sahf
outsb
cmpsb
orb
and
dec
pop
clc
adc
clc
cmp
mov
in
scas
push
sub
lcall
inc
int3
xchg
mov
or
and
loope
push
push
fistps
mov
ljmp
stc
orb
mov
inc
iret
sbb
bound
inc
xchg
movl
or
push
repnz
into
nop
xchg
shll
mov
cmp
jecxz
and
pop
adc
push
std
mov
cmpb
sub
movsb
loope
es
xor
jbe
loop
jl
fidivrl
xchg
gs
mov
movsl
mov
andb
jmp
add
and
or
cmp
mov
and
imul
add
xor
sbb
inc
mov
cmpsb
cmpsl
movsb
fnstcw
sub
out
ret
push
jge
add
jnp
loopne
daa
leave
out
in
repz
add
ret
hlt
movl
arpl
pop
out
loopne
push
mov
push
or
pop
sub
nop
test
pop
in
mov
iret
and
mov
jbe
jecxz
sbb
fcmovnbe
pop
arpl
lds
aad
or
and
ret
std
outsl
int
mov
jae
shr
jecxz
loopne
dec
hlt
std
pop
pop
arpl
ficomps
adc
sar
mov
dec
ja
mov
mov
add
mov
sub
mov
add
pop
stc
fimull
ja
lea
testb
and
xchg
mov
daa
ds
sbb
mov
inc
jae
jns
aas
pop
call
mov
int
arpl
sarl
sarl
and
add
or
movb
adc
xchg
inc
or
lcall
lahf
jg
add
stos
cs
dec
mov
sub
lcall
or
fbld
mov
in
inc
test
push
out
push
sub
fiaddl
inc
pop
fs
xor
adc
pop
sub
push
iret
std
gs
mov
dec
sbb
iret
jae
loopne
ss
shlb
xchg
jmp
test
dec
mov
xchg
xchg
cmc
mov
pop
lock
rorl
rclb
fwait
mov
mov
dec
push
lea
jne
in
gs
repnz
pop
shlb
imul
push
xor
xchg
mulb
je
ficoml
mov
mov
jl
arpl
imul
mov
mov
push
pop
adc
shl
or
cmpsl
fs
enter
out
movsl
pop
inc
ja
dec
into
mov
cmp
ret
outsb
insl
das
inc
sti
push
lea
jmp
pop
test
int
lock
sub
jnp
xchg
push
fwait
pop
xor
cmp
enter
cld
insl
sub
cmp
adc
clc
jb
test
stc
adc
add
mov
pop
movsb
arpl
fsqrt
add
jno
fdivs
and
std
push
daa
push
or
xlat
decl
daa
mov
mov
aaa
out
sbb
and
leave
cmc
insl
inc
jecxz
xchg
push
dec
out
cmp
ja
cs
jns
mov
inc
test
imul
adc
popf
notb
ja
push
test
or
addl
pushf
jno
mov
mov
lds
jno
mov
inc
call
xchg
lods
movsl
pop
stc
ficomps
mov
jne
popa
mov
dec
inc
push
and
fimuls
sbb
push
scas
xor
xchg
int
jg
cwtl
ljmp
inc
add
sub
cltd
fsubrl
popa
adc
xor
pmulhw
jecxz
fdivl
lds
xchg
lds
sti
mov
aas
adc
mov
inc
out
jge
addr16
cwtl
outsl
mov
dec
sbb
out
pop
mov
ljmp
push
loopne
add
pop
ds
add
adc
andl
sub
in
movsl
fsub
push
icebp
jns
loope
ficoms
ljmp
sti
in
test
sti
and
dec
dec
loopne
femms
dec
dec
pop
ds
cmp
jb
dec
push
pop
or
inc
sub
and
xorb
xor
lods
mov
pop
dec
cli
popa
test
icebp
imul
sbb
stos
pop
xchg
or
out
ret
and
imulb
fmul
frstor
sbb
pop
js
rclb
pushf
xchg
xchg
icebp
hlt
cmp
sbb
xlat
lods
clc
lock
mov
fnstenv
aam
jb
mov
sti
xchg
sti
dec
inc
cmp
sti
imul
call
push
test
xor
inc
inc
lock
mov
mov
push
ja
lret
dec
jb
and
lock
xor
fsubs
inc
xor
cmp
jb
sti
jp
sbb
adc
adc
jmp
repz
fdivrs
add
ds
bound
xlat
push
in
adc
mov
jne
cmp
ret
mov
ds
sub
and
pop
mov
gs
out
inc
and
and
fs
mov
rcrb
xchg
int
out
stc
repnz
pop
sarl
icebp
mov
addb
loopne
sbb
std
xor
scas
sbb
pop
push
add
popf
pop
movsl
jne
jo
subb
pop
and
je
inc
fimull
orl
aad
repz
daa
ss
outsl
mov
shr
jne
add
adc
inc
mov
ret
icebp
mov
mov
and
sbb
ljmp
mov
dec
mov
cmp
xchg
add
bound
inc
or
lods
pop
jg
aad
ret
mov
repz
cmpsl
adc
push
jb
les
shlb
pop
loop
mov
hlt
dec
and
cli
adc
shlb
cmc
nop
inc
push
mov
push
sub
xchg
mov
data16
aad
dec
out
mov
ret
jl
shll
lret
or
pusha
xchg
xor
cmpsb
pop
sub
cld
cmpb
lods
insb
pop
and
lret
lret
lods
fdivl
jns
in
jnp
pop
enter
mov
jo
rcl
ja
gs
mov
xchg
add
sbb
pop
push
pop
leave
loop
mov
xchg
stc
nop
sub
xor
push
adc
adc
repz
xor
outsl
cmp
add
fs
addr16
movsb
add
movsb
xor
test
out
sub
jmp
sub
jae
addr16
mull
loope
sub
decb
inc
imul
shl
cmc
cmp
insb
push
movsl
sti
lods
xlat
scas
es
movsb
sbb
push
mov
xchg
iret
shrb
movsl
push
xchg
stos
push
addr16
leave
cmp
sbb
popa
sbbb
ret
xchg
pop
cwtl
jae
lods
pop
sub
stos
sub
pop
dec
adc
mov
mov
xchg
cmpsb
sti
jne
sub
jno
sar
js
sub
or
inc
cli
pop
xchg
insb
aam
mov
xor
lcall
je
loope
pop
bound
mov
sub
pop
inc
sbb
pop
repz
js
ljmp
js
push
push
push
cld
push
pop
xchg
add
adc
pop
scas
push
addr16
sbb
push
dec
mov
and
xor
adc
mov
xor
and
stos
into
push
sbb
cmp
pop
scas
jae
and
outsb
je
rcrl
repz
fdivs
cmp
sub
aam
xchg
lcall
cmp
jg
mulb
fprem
cmpsb
jae
lock
jecxz
cmpl
iret
ja
int3
stos
scas
jno
push
add
cld
jb
aad
pop
xor
popa
pop
cmc
xchg
movsl
add
sbb
inc
add
test
stos
aas
mov
es
xor
xchg
xor
sub
cmpsb
jo
ss
cmp
xchg
mov
fcmovnu
sbb
add
jae
push
loop
int
cmp
ret
dec
cltd
lea
ret
fidivl
mov
les
shrb
int3
jl
sbb
mov
push
and
popa
adc
shr
mulb
add
cmp
mov
or
lret
lods
imull
mov
daa
mov
fsubrl
and
std
xlat
jno
push
jg
clc
push
jg
aam
rolb
popa
pop
and
loopne
mov
pop
pushf
enter
push
fmull
psubusw
add
fs
pop
push
push
sbbl
jnp
popf
jnp
pusha
jle
mov
shlb
pop
add
xchg
and
jo
inc
cwtl
imul
shl
leave
ljmp
pop
mov
jecxz
js
mov
sbb
daa
sbb
sarb
mov
mov
test
jbe
sbb
jle
and
xor
pop
jns
arpl
popf
pop
jle
mov
andnps
sbb
popa
cltd
sub
sub
cwtl
xor
dec
mov
ds
repz
push
xchg
cmp
outsb
ds
mov
add
movsb
popa
cwtl
xor
mov
repnz
xchg
int
or
adc
fbstp
nop
outsb
push
adc
or
jecxz
aaa
mov
mov
pop
jmp
out
lret
mov
inc
xchg
adc
int3
sub
dec
sub
icebp
ret
sbb
jmp
jecxz
inc
lret
cmpl
sahf
inc
std
aam
adc
dec
mov
inc
loop
iret
adc
push
sub
imul
adc
sub
ja
mov
out
cmp
dec
push
pop
pop
dec
pop
js
insl
and
cmp
iret
icebp
cmpl
push
rorb
out
daa
cmpsb
jp
loope
xlat
int
inc
cmpsl
push
outsl
pop
add
push
mov
es
jb
fstps
out
lahf
adc
pop
adc
xchg
sub
out
movsl
dec
gs
test
xchg
jg
rcr
jmp
or
testb
mov
sbbl
into
add
adc
js
addb
xchg
popl
lock
fwait
sysret
scas
and
ficoms
nop
push
pop
jno
cmpsb
mov
and
aam
nop
push
insb
mov
push
les
xchg
adc
lods
addr16
in
dec
popl
lea
pop
dec
lods
cmp
and
rol
or
adc
fnstsw
std
jl
js
xlat
shll
int
popa
test
mov
pop
pusha
mov
jo
mov
push
out
movsl
or
pop
mov
addr16
mov
lret
cli
imul
imull
cmc
inc
sub
mov
and
jecxz
mov
cmp
loope
mov
into
fists
ljmp
lds
stc
push
scas
lods
ds
pop
cmp
repnz
fcoms
mov
cld
push
inc
rcll
inc
adc
mov
jne
jg
imul
mov
in
cmp
iret
dec
adc
push
insl
inc
xchg
addr16
cmc
pop
lcall
out
cwtl
add
sub
pop
dec
inc
xchg
fbstp
cmp
mov
dec
lret
stc
int3
lea
sub
jbe
mov
cmp
mov
adc
aaa
mov
rcr
stos
pop
scas
fcoms
subl
scas
mov
outsb
fs
adc
mov
cmp
jp
push
or
xchg
mov
rorl
mov
outsb
cmp
cwtl
lahf
inc
fcoml
inc
ret
inc
ja
negl
mov
adc
inc
mov
sbb
push
pop
mov
lods
stos
sub
dec
xchg
jg
leave
and
lea
pop
call
pop
test
shll
mov
lcall
nop
mov
mov
loopne,pn
cmpsb
lret
pushf
addb
xchg
sbb
in
inc
and
mov
pop
add
popa
std
fldenv
jecxz
pop
fsubl
shlb
add
xor
pop
sahf
ja
xor
or
das
in
sub
hlt
movsb
jmp
out
lcall
fwait
stos
pop
inc
jmp
enter
les
sahf
pop
jno
mov
xor
sbbb
sbb
pop
fmuls
add
fwait
adc
fwait
push
js
lock
sub
pop
sbb
into
imul
int3
cli
inc
add
and
cmpsl
xor
pop
les
mov
cli
push
jns
mov
dec
pop
loopne
scas
add
scas
lock
movsl
or
out
sbb
adc
push
sbb
pushf
in
jno
test
mov
mov
pop
xchg
jl
inc
lock
decl
imul
and
in
fwait
mov
repnz
dec
mov
push
out
lock
cmp
push
mov
stc
test
es
or
imulb
les
and
dec
push
mov
push
pop
sub
cmp
mov
aas
imul
dec
inc
cs
scas
and
adc
test
adc
dec
icebp
test
loopne
pushf
pop
mov
sbb
mov
movsb
inc
cmpsb
sti
addb
rorb
jno
rcr
outsl
test
cs
aas
cli
xor
aad
inc
xlat
nop
and
mov
loopne
cmp
decb
add
sub
addr16
and
gs
repnz
lods
jns
sub
or
push
inc
fcmovb
jmp
mov
or
sbb
test
mov
mov
cmp
rcr
pop
lret
sbb
cmpsl
xor
push
cmpsl
popf
in
aas
jns
negl
mov
or
mov
cmp
xor
call
clc
inc
sub
pushf
cli
sub
adc
cmp
outsb
pop
enter
xchg
aaa
in
inc
dec
roll
lret
xor
mov
mov
jecxz
outsb
ret
push
inc
sbb
add
out
js
inc
xchg
and
sub
and
cltd
sub
ja
cmp
sub
pop
fimull
cmpb
test
imul
pop
mov
add
and
int
push
addr16
inc
inc
push
inc
xchg
push
nop
out
inc
sbb
jg
pop
imul
pop
xlat
inc
sbb
mov
lea
lods
push
adc
aad
divb
ss
fsubs
sti
dec
insl
push
ficomps
movb
pop
leave
dec
je
in
in
push
movsb
hlt
lret
aas
mov
push
mov
test
add
jmp
xchg
cmp
inc
sbb
test
push
call
pop
fsubrl
xor
jb
out
dec
jecxz
dec
mov
movsl
and
push
push
cmp
lahf
popl
add
mov
xchg
mov
and
or
sbb
pop
fst
jnp
out
sub
add
or
das
outsb
pusha
in
mov
jbe
lods
sub
insb
cmp
push
fnstcw
sbb
clc
lret
aam
rcr
out
sub
pop
pop
or
jmp
jae
clc
leave
inc
pop
out
dec
mov
xor
mov
cmc
push
or
lea
pop
fdivrp
pop
jno
out
fcomps
shr
subl
sbb
jno
jae
push
jnp
xor
and
arpl
cmp
and
push
push
pop
jmp
shrb
data16
pop
inc
and
lods
ljmp
sub
mov
cmp
je
jno
cltd
xchg
or
fsts
or
jle
rep
mov
rcrl
imull
mov
pop
es
push
fcoms
jg
xlat
scas
cmp
test
fs
sub
mov
pop
idivl
xchg
cmp
mov
xor
ja
or
dec
sti
popf
sbb
cmp
jg
ds
pop
push
jbe
pop
es
pop
insl
push
sbb
lcall
push
lods
es
add
xorb
push
dec
ja
in
insl
ss
sbbl
or
pop
pop
push
push
mov
daa
lahf
mov
test
fstl
mov
in
cwtl
popf
int3
and
sahf
out
lahf
inc
and
add
mov
push
lahf
ljmp
std
popf
das
shlb
xchg
mov
out
xor
push
repnz
sbb
cmp
addr16
call
inc
stc
dec
push
mov
sub
aam
add
iret
int3
lcall
lea
sbb
add
push
lahf
sbb
cmpsl
inc
scas
shll
jl
xor
inc
cmp
pop
xchg
pop
mov
in
xchg
push
add
mov
fs
lahf
movsl
movsb
push
cmp
movsl
mov
leave
popa
dec
adc
rcrb
or
pop
aaa
mov
shr
cltd
inc
inc
push
stos
icebp
lds
mov
in
sub
dec
daa
pop
dec
ja
cmpb
fldenv
dec
cmp
adc
and
addl
sub
nop
pop
jg
cmpsb
xor
out
mov
or
cmp
sub
or
sbb
sbbl
xor
adc
xchg
and
jbe
mov
call
fildll
pop
mov
movsb
loope
loop
cmp
aaa
mov
adc
mov
repnz
pop
sub
mov
xlat
mov
aaa
push
xlat
jmp
lcall
inc
and
dec
add
shll
cmp
mov
std
nop
mov
loope
stos
out
inc
test
or
dec
mov
dec
add
add
and
push
pop
cmp
out
dec
aam
push
filds
std
mov
pop
xchg
inc
adc
rcr
push
movsl
sub
xchg
sbb
inc
fcmovnb
dec
loope
xor
int3
xlat
ret
push
gs
xchg
mov
cmp
mov
stos
mov
push
enter
cmp
mov
adc
aad
xor
or
mov
icebp
out
cmp
movsl
xor
mov
jae
mov
enter
cmp
loope
loope
dec
test
ds
xor
ds
mov
dec
std
inc
push
test
enter
inc
lods
scas
fmuls
sti
sbb
xor
xchg
sub
arpl
pop
popf
adc
test
cli
pop
inc
js
outsl
add
cmpsb
push
cmp
adcl
in
ret
stos
mov
lret
mov
sbbb
in
popf
xchg
aad
add
jne
mov
loopne
vdivps
les
aas
mov
ret
mov
mov
out
pop
loopne
int3
pop
ja
xor
insb
lods
cwtl
daa
lods
add
mov
mov
andl
stos
inc
into
and
cltd
loopne
aad
xchg
jns
cmp
inc
scas
jg
sbb
mov
pop
jbe
negb
cmp
lock
xor
loopne
mov
lahf
lods
inc
scas
jl
push
lods
mov
and
clc
icebp
xlat
inc
in
je
dec
xlat
mov
xchg
fs
ficomps
push
enter
pop
cs
hlt
sti
cli
movb
std
test
ljmp
das
incb
dec
mov
les
sbbb
xlat
test
ljmp
ficoml
jno
add
out
push
or
pop
aad
test
cld
inc
jbe
or
iret
push
jmp
push
jl
add
test
in
sbb
cmp
roll
and
jle
mov
les
jbe
roll
in
add
add
adcl
aas
cmpsl
sbb
mov
jo
rcll
dec
mov
adc
pop
sub
jo
sub
jo
leave
call
pop
inc
mov
cmp
pop
pop
sub
andl
sahf
mov
adc
push
stos
dec
mov
push
sbb
sahf
aad
push
sti
cs
push
orb
dec
bound
cmpl
cmp
cmpsb
sub
fstp
sbb
add
clc
push
ret
pop
jle
in
cmc
mov
lcall
cmpsb
movsb
or
add
clc
cmc
mov
in
or
sub
adc
rclb
inc
psubd
mov
aam
iret
cli
in
dec
stc
sti
push
repnz
cmovge
xchg
fmull
ficompl
insl
xor
and
ds
scas
divl
in
movsl
ljmp
dec
ds
sub
xchg
adc
add
imul
xor
adc
mov
push
dec
mov
xchg
ficompl
out
and
movsb
daa
fisttps
popf
adc
outsl
ret
mov
mov
lds
mov
mov
test
lahf
pop
push
and
xlat
sbb
dec
jmp
mov
dec
int3
enter
sbb
out
aaa
push
xor
data16
loopne
mov
mov
rcrb
out
mov
pop
jg
mov
mov
fldenv
adc
in
add
cli
clc
fidivrs
sbb
lret
pop
es
lock
cmpsb
and
xor
aas
into
inc
pop
cmp
push
push
repz
leave
int3
rcrl
dec
mov
aas
xchg
aad
out
pop
or
and
pusha
push
addl
test
mov
fmulp
cmpsb
xchg
dec
movsl
rcrl
lea
enter
inc
lock
sahf
ljmp
frstor
jmp
push
sub
movsb
xor
jmp
sahf
inc
or
xor
loop
insl
inc
ret
or
and
fcoml
mov
movsb
rcrb
cld
jnp
add
dec
out
jae
add
push
dec
movsl
stos
aaa
loop
sbb
add
into
and
and
lret
pop
cmp
addr16
xor
mov
int
add
fsubrs
mov
mov
fwait
out
pushf
scas
pop
mov
push
push
xchg
inc
mov
repz
mov
dec
in
fwait
cli
jmp
cmp
pusha
nop
cmp
pop
xor
xchg
cmp
xor
mov
mov
cmp
push
lcall
testb
fisubl
test
aam
xchg
xor
push
adcl
test
gs
inc
mov
cli
xor
adc
xor
daa
sub
lret
fisttpll
push
shrb
mov
mov
xor
sub
sub
rcrb
scas
addr16
aam
or
pop
pop
into
mov
adcl
insb
add
cmc
xor
loopne
jnp
in
push
pop
xchg
ret
shrb
repz
lahf
int3
fldenv
sbb
pop
cld
mov
xchg
fiadds
push
xorb
lahf
and
push
lds
mov
fcmovb
lret
push
mov
aad
cld
into
xchg
aaa
mov
add
ret
mov
ja
mov
cmp
xchg
lea
xor
dec
test
movsl
lret
std
push
out
adc
mov
clc
fsts
cwtl
mov
xlat
add
loopne
mov
pop
cmp
sahf
xor
add
or
ret
cmc
jl
shlb
insl
cmp
add
push
xor
aas
popa
sub
cld
loop
lods
cs
adc
popa
lds
add
jb
bound
push
push
adc
cmpsb
lods
mov
stos
mov
pop
xchg
sbb
dec
loopne
mov
imul
test
cs
jns
and
sbb
into
mull
mov
ljmp
popa
or
data16
pop
adc
lret
iret
xchg
addr16
jns
pop
movsl
mov
ljmp
fidivs
in
cmp
popf
out
adc
sub
shl
dec
dec
xchg
adcl
jmp
fcomps
mov
pop
js
fcmovu
xchg
mov
adc
leave
inc
mov
jne
idiv
lock
test
das
xchg
adc
and
xchg
lods
outsl
scas
push
add
or
pop
pop
test
cmp
jnp
adc
xor
out
or
pusha
push
movsb
out
pop
pop
pop
jle
and
jmp
xor
arpl
aas
jbe
lods
mov
jb
arpl
out
jmp
pop
dec
add
or
int
push
cwtl
adc
mov
xchg
cli
push
mov
jge
out
cmp
neg
loopne
mov
xor
cld
push
out
dec
int
test
and
repz
stc
and
cltd
add
cmpsb
xchg
mov
frstor
jbe
xor
and
cmpb
pop
mov
mov
stos
lds
je
cmc
hlt
insl
movsl
sbb
insb
mov
push
push
into
or
imul
mov
shrl
jne
push
push
push
stc
das
mov
and
dec
jne
fcomi
loopne
sub
push
lahf
cs
sbb
pop
popf
outsb
ja
xchg
jne
mov
punpckldq
cltd
scas
leave
push
jo
mov
in
or
push
sbb
push
rcrb
popa
jp
pushf
sahf
mov
or
ss
and
cmpsb
inc
dec
adc
out
lret
xchg
rcrl
repz
aad
inc
inc
stos
fldenv
jnp
call
sbb
lahf
xchg
cmpsb
shll
aas
inc
cmp
mov
mov
jmp
insb
out
mov
test
jp
cmovno
loop
rolb
pop
sbbb
in
xor
sbb
cmc
ss
add
inc
pushf
add
cli
dec
mov
dec
sub
adc
fwait
hlt
push
test
push
adc
or
dec
adc
cwtl
hlt
inc
test
fucomip
jo
jmp
mov
pusha
xchg
sub
lods
out
aad
and
push
pop
imul
insb
or
stc
outsl
aaa
mov
push
filds
fdivs
ljmp
stc
cltd
pop
xchg
xor
pop
fists
xor
mov
or
inc
sbb
lock
in
pop
jae
or
lret
leave
xchg
xchg
lds
idivb
jnp
or
mov
mov
stc
jno
adc
lret
xor
cld
push
inc
das
xchg
out
test
lds
jnp
fsubp
out
test
pop
fstpt
stc
ficomps
cmc
addb
jns
int
test
test
pusha
mov
mov
lock
inc
fldcw
mov
and
iret
push
stos
pop
xchg
cmp
mov
dec
test
pushf
out
outsb
cltd
dec
aaa
pop
repz
repz
out
xchg
idiv
push
dec
mov
cld
cld
es
arpl
push
push
jg
lret
push
or
shlb
fcompl
jg
push
mov
rorl
test
leave
push
loope
les
add
adc
bound
adc
pop
inc
or
lahf
ret
mov
pop
pop
insl
mov
xchg
xchg
mov
fmull
data16
xchg
arpl
ljmp
sbb
jmp
roll
mov
cwtl
mov
sub
js
or
les
test
xchg
outsb
sub
dec
or
pop
fldenv
roll
jno
cmpsl
dec
jns
in
xchg
scas
lods
jo
addr16
cmp
pop
or
push
add
xchg
mov
divb
xchg
fcomps
std
insb
movsb
aad
or
sub
fcomi
jge
mov
fbld
lds
cwtl
xchg
sub
xorb
or
cmp
add
xchg
pop
inc
mov
xchg
inc
iret
fstenv
xchg
fsubrl
lods
daa
dec
das
fwait
sub
repz
test
mov
jl
fdivrl
rcll
and
jo
movsl
adc
dec
daa
fnstcw
data16
and
sub
pop
adc
test
adcl
mov
sub
lock
mov
loop
push
adc
add
pusha
push
fnstsw
pop
adc
dec
lea
in
dec
cmp
inc
mov
outsb
mov
cltd
xchg
nop
bound
or
enter
push
pop
sub
enter
daa
inc
out
xchg
xor
adc
inc
mov
add
outsl
cld
pop
pop
lea
jb
dec
mov
lods
pop
out
dec
jne
iret
lret
xchg
inc
push
addr16
jbe
in
loopne
jae
nop
out
in
lods
xorl
xchg
mov
push
or
inc
lret
adc
data16
arpl
xchg
xchg
js
nop
fstl
rclb
add
ds
loop
lock
mov
repnz
sti
xchg
inc
int3
iret
movsb
test
in
and
rclb
push
adc
adc
xchg
lock
lods
jnp
mov
stc
lcall
xchg
movsb
or
in
cmc
pushf
mov
sub
je
movsl
push
push
sub
out
or
cwtl
cmp
aad
test
das
lock
and
in
ljmp
cmpsl
sbb
sbb
scas
sbb
aam
outsb
lds
add
loop
xor
loope
test
inc
hlt
in
pop
xchg
push
add
stc
rol
inc
dec
push
inc
ds
pop
cmp
out
mov
lds
mov
or
lods
cmpsl
enter
push
mov
and
dec
stos
xchg
shll
sub
mov
xchg
jge
mov
leave
xchg
lea
pop
xor
fists
out
push
pop
adc
and
lods
popf
cli
outsb
lcall
cmp
cmpsb
xchg
cli
cmp
cmp
and
dec
ret
ffree
fcmovb
jae
dec
icebp
cmp
push
jnp
daa
add
xchg
sbb
xchg
aaa
mov
adc
inc
pmaxub
mov
int
pushf
xor
stc
fsubrs
sub
or
mov
and
pusha
sarl
aaa
cmc
or
repz
dec
incb
out
nop
popa
pusha
lea
mov
mov
inc
ss
int3
mov
xlat
jl
sub
popl
inc
xchg
adc
cmp
xchg
push
lret
addr16
xor
inc
cmp
sbb
enter
and
test
dec
sbb
dec
test
push
mulb
inc
push
push
mov
icebp
or
outsb
mov
jno
js
and
xlat
ja
outsl
clc
lods
in
jns
idivb
popa
les
xchg
pop
sbb
std
ret
and
movsl
aas
sbb
dec
je
xlat
push
inc
inc
ret
jl
push
pop
test
push
scas
insb
leave
mov
negb
add
pop
sub
scas
sub
or
fimuls
cs
mov
jnp
jge
jno
mov
mov
cmpsb
loopnew
loop
rorl
outsl
xor
mov
outsl
arpl
sub
stos
mov
les
sbb
aad
inc
dec
repz
push
mov
inc
out
cmpsl
sbb
cli
and
push
add
in
mov
mov
jg
push
dec
icebp
inc
xchg
mov
scas
cmp
xor
cltd
push
in
pop
pop
mov
cltd
dec
xor
int
sub
xlat
notb
movsl
mov
lahf
dec
dec
dec
mov
mov
jo
pushf
sbb
adcl
sbb
cmp
sub
sbb
bound
mov
test
dec
sbb
cmp
imul
dec
cmpsb
imul
mov
aam
popf
pop
mov
sub
pop
push
dec
add
add
dec
stos
nop
shl
out
stos
scas
mov
ss
aad
pop
rol
xchg
mov
mov
dec
pop
mov
sahf
push
or
mov
sub
out
xor
pop
cmpsb
sbb
popa
out
sbb
push
outsl
pop
mov
push
mov
repz
add
movsb
sti
arpl
xchg
xchg
xchg
out
leave
mov
dec
pusha
push
das
push
repz
jmp
pop
pushf
cmpsb
or
and
and
decb
shlb
std
and
fsubl
lods
insb
mov
shrb
push
in
add
icebp
or
test
dec
or
mov
lods
mov
int3
jl
scas
movsl
xlat
xchg
ljmp
loopne
push
aad
fisubl
ret
imul
cmp
inc
xchg
xor
pop
call
daa
out
cmpsb
xor
cmp
fiaddl
mov
movsb
addl
mov
mov
subl
jmp
xor
jp
cltd
and
push
daa
cli
mov
push
mov
jo
xor
jg
cmp
mov
jl
gs
bound
cmpsb
xchg
sbb
fnstsw
jo
jb
xchg
nop
mov
jo
fldt
jne
mov
push
movsb
adc
ljmp
push
scas
or
or
arpl
mov
fisubrs
or
lock
pop
dec
push
movsl
call
stc
mov
mov
shlb
pop
push
push
inc
dec
and
in
inc
scas
xchg
xchg
pop
ror
pop
xchg
and
rcrb
sahf
pop
outsl
xchg
lds
out
nop
xchg
jge
cmpsb
add
cmp
repz
cltd
cli
mov
clc
sbb
adc
cmc
pop
fisubrs
mov
xchg
mov
cmp
lcall
negb
in
jmp
in
jne
add
lahf
imul
sbb
cmp
push
mov
sti
jecxz
out
mov
cmpsb
push
sbb
jne
daa
mov
shll
mov
mov
fldt
jae
xor
aas
inc
outsl
push
add
ss
add
in
in
or
aas
mov
addb
add
adc
imul
push
push
sbb
pop
sub
fistl
push
mov
pop
sub
imul
rolb
ljmp
xchg
and
pusha
arpl
pop
outsl
nop
jg
mov
dec
xor
pop
cli
sub
jns
inc
sbb
cs
adc
sbbl
xchg
push
mov
mov
jns
lcall
pop
or
ljmp
mov
sub
lds
aaa
cmpsl
test
pop
stos
inc
fwait
pop
cmp
xchg
shlb
adc
enter
les
sbb
mov
fildll
insl
jno
test
lahf
fisubl
pop
insl
out
fwait
mov
out
out
mov
mov
adc
jbe
dec
lea
rcl
es
dec
lret
sub
dec
out
jae
dec
xor
loop
or
icebp
repnz
fnsave
gs
cmp
xchg
sub
jno
push
ret
push
xchg
loop
mov
dec
repz
imul
fwait
xorl
mov
cltd
cmp
xchg
es
xchg
lret
bound
or
shlb
cmpsl
adc
cs
pop
cs
fimuls
add
and
enter
scas
mov
nop
pop
fs
sub
mov
dec
xchg
mov
fs
outsl
in
sbb
flds
sub
insl
jae
subb
mov
aam
test
decb
aam
out
out
and
push
rorb
daa
pop
push
jmp
ret
adc
scas
push
imul
in
mov
mov
push
sub
ljmp
mov
push
test
lods
adc
aas
into
ja
mov
jle
out
sub
dec
adc
div
sub
das
in
sub
roll
pop
jbe
ljmp
outsl
mov
nop
roll
mov
shlb
sbb
xchg
imul
sub
ljmp
or
jb
sti
inc
lahf
adc
cmp
mov
and
sbbb
or
cmc
mov
pop
notb
inc
jns
es
dec
xorl
fs
mov
xor
inc
xorl
in
imul
mov
call
aaa
lret
jle
loop
pop
and
sub
cld
dec
push
or
jmp
out
ret
jle
lret
and
popa
push
sub
jle
pop
mov
arpl
sub
mov
mov
dec
into
pusha
ja
aas
movsb
or
and
jnp
jmp
cmc
jecxz
jo
push
xchg
out
into
push
loope
roll
icebp
pop
rcl
sub
lret
adcb
mov
int3
lods
xor
and
bound
dec
aad
imull
push
ljmp
cwtl
cmp
nop
pop
add
sub
jb
popf
mov
cmp
insb
mov
sbb
leave
mov
mull
stc
or
or
sub
aas
adc
mov
or
test
xchg
test
lcall
pop
test
mov
pop
test
mov
mulb
mov
mov
xchg
cli
imul
or
orl
push
mov
fsubr
mov
ds
or
lods
dec
add
sub
jp
call
jno
adc
sahf
or
cmp
push
or
inc
jg
pop
in
adc
xor
cmp
push
push
pop
mov
sub
arpl
test
mov
add
adc
and
test
lret
sarb
push
ds
loop
fucomip
sbb
stos
orl
scas
mov
pushf
jmp
into
jno
ss
adc
adc
mov
out
jns
mov
rclb
sub
hlt
add
cpuid
xlat
test
push
mov
xor
adc
fdivs
dec
loop
or
je
es
shl
push
add
inc
scas
inc
cmpsb
cld
inc
dec
or
icebp
mov
mov
mov
sbbl
mov
xchg
mov
cmpl
adc
fiaddl
into
push
inc
sbb
bound
mov
adc
push
lret
inc
icebp
xchg
jecxz
cltd
bound
stos
inc
scas
ficoml
cltd
sub
imul
or
arpl
enter
sar
cltd
push
loope
lods
rclb
add
je
loopne
fs
mov
xchg
jle
adc
adc
cwtl
mov
xchg
push
stc
test
add
cmp
cmp
jae
adc
jg
frstpm(287
push
fs
and
in
lods
sub
lea
sub
shrb
push
aam
outsl
adc
shl
cmp
out
lahf
jl
sar
mov
sub
adc
dec
push
stos
out
jns
jp
mov
in
fs
jle
adc
push
jmp
sbb
std
repz
int
sub
hlt
repz
sti
mov
imul
mov
cmp
mov
mov
lods
test
test
push
sub
shlb
mov
test
cltd
das
out
or
fnstenv
fnsave
jg
inc
mov
sbb
icebp
js
testl
outsb
pop
mov
cltd
out
test
repz
push
push
out
ja
sti
xor
repz
lret
cmpsb
mov
mov
jg
pop
sub
and
ret
dec
sahf
xadd
pop
adc
ds
lock
popa
cmpb
in
roll
dec
sbb
fbld
add
and
scas
jle
cmp
pop
mov
lods
dec
test
ss
pop
mov
cld
daa
push
dec
sbb
cmc
push
cmp
adc
xor
cs
jne
mov
int
ss
sbb
scas
jecxz
daa
mov
add
lock
lock
aam
inc
cs
jmp
aam
mov
sti
mov
sbb
stos
mov
outsb
insb
push
popa
jb
outsb
aad
int
dec
fs
mov
or
imul
pop
add
dec
iret
outsl
lret
cmp
lds
decl
push
pop
out
std
mov
lods
cmp
stos
mov
scas
imul
mov
incb
sub
sub
fmuls
adc
push
clc
inc
mov
mov
enter
movsb
clc
or
or
cmpsl
jae
sbbb
inc
jo
push
jbe
hlt
cs
push
mov
aad
das
sar
scas
push
fucomi
xchg
adc
mov
das
test
xchg
mov
push
sti
mov
sbb
iret
mov
add
sub
push
jp
mov
popa
pop
cmp
ds
imul
or
push
lret
inc
push
mov
les
test
xor
in
jge
mov
mov
pop
dec
sub
nop
cmpsl
pushf
cwtl
mov
gs
popf
push
test
shlb
pop
sti
int3
inc
ja
shrb
lahf
rcr
push
xor
mov
scas
jge
mov
aam
loopne
push
cs
jge
popa
jbe
pop
cmc
sarb
or
scas
call
shr
xlat
test
je
xchg
cwtl
push
test
jmp
xor
sub
repz
push
jecxz
gs
ja
fstpt
lahf
test
imull
aad
mov
inc
shll
aaa
mov
xlat
in
addr16
sub
jmp
push
ss
xorb
cmpsb
inc
jle
xor
fwait
outsl
jmp
mov
jbe
lods
jmp
andl
and
and
add
lret
sbb
or
scas
jecxz
inc
mov
fistl
aad
xchg
dec
mov
daa
scas
cmp
xchg
sub
or
mov
jno,pt
jae
jno
aam
push
pop
adc
pop
adc
test
and
push
hlt
aas
and
mov
push
movsb
push
cwtl
jbe
mov
push
dec
push
or
ret
int
fnstsw
add
mov
popf
pop
loopne
jp
rcr
test
imul
out
xor
nop
sub
lods
and
pusha
bound
and
jbe
cmp
mov
jne
jp
adc
cmp
mov
insl
rcr
lods
out
jbe
stos
and
ficoms
lods
pop
mov
mov
mov
shll
in
lcall
pusha
sub
or
pusha
pop
out
stos
pop
cmc
mov
or
jle
xor
das
movsl
ror
fwait
je
sub
dec
imul
pop
xchg
inc
cs
insb
xchg
inc
imull
adc
sbb
ss
cmp
adc
xor
sub
add
hlt
pop
lret
aas
popf
mov
and
popl
cmp
lahf
test
test
cmpsl
pop
xor
and
faddl
dec
dec
push
fcoms
aaa
cmp
daa
push
aas
jp
mov
mov
js
push
jmp
jge
stc
int
shrb
int3
cmpsl
cltd
push
xchg
test
dec
and
ret
lret
in
aas
scas
cs
addb
jmp
mov
xor
add
pop
jnp
or
test
lahf
xor
imul
sbb
pusha
mov
mov
mov
loopne
loopne
add
cmp
push
call
sub
das
cmpsl
cmp
add
jmp
jnp
mov
scas
or
jg
inc
or
or
add
aad
pop
popa
xchg
test
mov
or
aaa
loop
repz
mov
xchg
mov
adc
mov
ljmp
out
dec
test
imul
jb
xchg
out
pop
nop
lds
mov
loopne
popa
fnstsw
fiaddl
iret
mov
icebp
repnz
add
jns
data16
xchg
in
jle
ret
fstps
fimull
scas
xchg
pushf
mov
rcrb
lods
add
cltd
dec
int
mov
daa
sbb
or
pop
pushf
pop
lret
test
into
loop
loop
xorb
loopne
fstpl
xchg
sbb
rorl
adcl
stos
dec
movsb
jmp
jbe
fprem1
push
ss
shlb
movsl
cld
sub
movsl
lahf
push
mov
add
sti
mov
pop
inc
mov
in
addl
mov
inc
cmc
sahf
add
dec
jge
pop
test
out
movb
cmp
adc
int
fcmovbe
push
jns
aad
jle
xor
push
icebp
fmuls
or
adc
jecxz
pushw
jne
jnp
testl
das
jmp
fwait
or
mov
dec
jbe
cmpps
repnz
shll
addr16
or
mov
cli
clc
lea
nop
push
cmp
addr16
cli
scas
sarb
cmp
hlt
xor
add
shrb
sbb
out
sbb
push
arpl
xor
lods
or
dec
jp
divb
insb
inc
push
in
out
sub
pop
into
or
sub
add
mov
fadds
pop
push
je
pusha
xlat
mov
std
sub
inc
daa
les
push
ljmp
pop
sbb
mov
repnz
pop
int
and
clc
sbb
out
inc
add
fcmovnb
mov
std
cmp
push
mov
fs
test
stc
test
rcl
push
fildll
pop
xor
hlt
into
dec
jne
pop
cmp
adc
adc
xor
add
dec
shr
lods
ss
aam
lock
mov
mov
xorb
int3
xor
jb
adc
insl
aas
dec
movsb
push
add
mov
sarl
sbb
xor
or
in
mov
hlt
add
jecxz
jg
jle
xor
movsl
inc
pop
out
sbbb
push
or
aam
mov
rol
mov
in
iret
imul
cmp
adc
mov
xor
mov
test
push
loop
in
lods
inc
mov
push
push
jmp
das
or
jo
sbb
and
inc
add
div
push
das
mov
popa
insb
mov
xchg
insb
add
jmp
insl
sub
sub
int
icebp
sahf
fsubs
push
lahf
dec
and
push
mov
push
inc
cmp
jecxz
xor
sbb
outsl
inc
sarb
adc
add
std
or
mov
xor
sbb
into
in
xchg
jle
repz
rcrl
ret
pushf
pop
clc
add
outsl
scas
popa
adc
push
sub
jecxz
jecxz
out
pop
lea
cli
xor
shr
dec
pop
xchg
ja,pt
or
pop
dec
out
add
sbb
ficompl
repz
cli
lods
ret
inc
aas
clc
test
popf
xorb
and
jmp
inc
mov
sbb
imul
pop
repnz
mov
testl
pop
adc
cmc
movsb
ljmp
mov
mov
flds
out
pop
push
shlb
stos
mov
add
dec
test
jp
ret
aam
scas
push
dec
cmp
fcoms
arpl
icebp
sti
fiadds
dec
stos
xchg
std
movsl
mov
xchg
mov
pop
push
pop
fsubl
sub
lahf
mov
clc
jge
orb
mov
mov
dec
cmp
jbe
or
int3
hlt
int
push
clc
cmp
loop
inc
lock
pop
rcll
rorb
pop
push
xor
icebp
mov
rcrl
pop
outsb
rorl
loopne
decb
mov
push
or
inc
cmp
and
aad
push
sbb
cmpb
push
inc
inc
and
lock
xchg
pavgw
daa
out
ljmp
int3
add
cmp
add
movsb
cmp
dec
jne
mov
cwtl
xor
jl
xchg
daa
add
scas
repnz
add
adc
jns
in
test
shll
inc
jmp
push
cmp
push
mov
mov
sarb
clc
cmc
push
sub
mov
mov
es
sub
cltd
sti
cmp
or
inc
repnz
imul
rol
dec
push
sub
outsl
mov
jno
hlt
push
outsb
sub
xchg
jno
lods
ret
scas
mov
or
or
or
adc
rcll
stos
sub
cltd
imul
mov
ljmp
repnz
xchg
in
out
mov
cmp
daa
cwtl
dec
hlt
outsl
cmpsl
negb
cmpsl
adc
insb
test
push
fwait
repz
leave
pop
mov
jge
sahf
dec
and
mov
ret
movsl
es
dec
xorl
push
xchg
fsubl
sbb
mov
aad
aas
sub
aad
jecxz
cmp
and
inc
mov
mov
add
jge
sbb
jbe
ja
pop
mov
es
jbe
or
jmp
jnp
or
mov
dec
ja
cld
xor
pop
dec
lea
adc
xchg
or
pop
scas
inc
loop
sbb
fistl
xor
or
fsubrs
xor
mov
dec
scas
test
push
push
or
scas
fadd
je
jl
jno
mov
mov
pop
or
loopne
adc
jo
in
cmp
fistps
bound
jo
and
fwait
aas
mov
xorl
dec
movsb
jmp
and
or
mov
sti
add
test
cmpsl
out
loope
mov
or
inc
adc
jno
shl
out
aad
xchg
jmp
ffreep
fcompl
jle
call
std
and
and
ja
add
mov
gs
popf
xchg
adc
cmp
xchg
push
xchg
icebp
push
adc
loopne
and
movsl
xor
pop
sub
pop
ja
hlt
mov
lcall
jbe
xchg
les
aad
jae
inc
push
xchg
xchg
into
popa
or
adc
xchg
mov
fisttps
into
jae
pop
dec
adcb
enter
lret
sbb
add
test
fcoms
jecxz
outsb
push
or
adc
in
dec
or
dec
not
sarl
sub
sub
cmpsb
repz
push
out
cli
xchg
loopne
cwtl
mov
jns
pop
fsubr
cmp
ljmp
dec
xor
shl
xchg
testl
test
scas
fstpt
sbb
jmp
xor
mov
mov
insb
inc
dec
push
xlat
scas
mov
andb
jmp
stos
mov
xchg
jae
gs
xor
leave
flds
imul
in
fldcw
and
stos
mov
rcrl
cs
shlb
stos
or
arpl
loopne
roll
mov
push
sub
sbb
push
push
bound
sbb
lea
in
ret
in
mov
fisubs
flds
pushf
fmul
mov
pop
out
orb
shrb
js
aaa
outsb
outsl
jnp
jmp
mov
sbb
out
insl
lds
xor
nop
push
xlat
pop
bound
notl
sub
xor
pop
fmuls
scas
loop
xchg
lret
adc
and
sbb
and
mov
mov
lret
xchg
mov
cmc
jae
rcr
add
adcl
cmp
jns
in
mov
sub
in
pop
loope
enter
dec
mov
pop
shll
into
outsb
jne
push
imul
mov
pusha
sbb
or
xchg
jecxz
fstpt
call
push
inc
mov
jbe
cmpsl
inc
sbb
testl
cmp
dec
mov
add
dec
mov
imull
cld
xchg
ss
cmp
mov
out
sbb
icebp
jne
stos
aas
cli
inc
into
or
pop
popa
and
std
pop
mov
fwait
sahf
pushl
or
pop
and
sbb
mov
add
ss
jecxz
pop
xchg
arpl
sbb
xchg
ds
xchg
sarl
cmc
ljmp
pmaxsw
daa
scas
pop
vpshufhw
fistpll
xor
adc
pop
inc
xor
data16
inc
jl
loope
and
or
pop
xlat
daa
fwait
aad
jns
nop
cmpxchg
dec
pop
pushf
clc
repz
jo
in
inc
and
inc
add
mov
and
lahf
xlat
lea
pop
mov
mov
xchg
push
or
add
clc
imul
and
shr
jo
xor
shr
cmp
xchg
push
aam
pop
setae
addb
scas
pop
add
pop
fcompl
mov
fildl
jmp
bound
flds
rcll
mov
or
int3
aam
push
cmp
sbb
mov
and
aad
xor
dec
xor
lock
push
fbstp
shl
ss
xlat
das
inc
mov
adc
iret
sti
aad
or
xor
add
inc
cmp
mov
add
sub
fadd
dec
mov
in
iret
push
jbe
dec
insl
add
dec
subl
pop
dec
pop
shll
jg
xchg
mov
and
jle
insl
aaa
addr16
xchg
pop
sbb
or
fs
sub
jl
cmp
jl
inc
ret
jecxz
cmp
and
jbe
and
leave
fwait
mov
out
or
mov
mov
in
lret
xorps
mov
les
iret
pop
pop
sub
call
mov
je
movsl
sbb
test
push
call
adcb
into
mov
fisttps
mov
jmp
push
mov
les
inc
jnp
push
push
stos
scas
jns
imul
out
push
and
xchg
rclb
inc
mov
cli
loop
mov
jnp
fadd
push
and
jl
or
pop
fbstp
enter
cmp
int
shl
movsl
sti
es
movsb
push
adc
pushf
and
gs
cld
in
insl
and
rcrb
jecxz
add
cmp
add
test
aas
int3
xor
addr16
es
adc
mov
mov
testb
mov
mov
pushf
jbe
push
mov
push
js
push
sbb
aad
pop
pop
add
xchg
orb
ja
pop
xor
outsb
imul
loop
je
mov
ds
jno
inc
sbb
xchg
or
les
jns
repnz
cmc
mov
xorb
das
mov
inc
insb
std
and
jecxz,pt
loop
pop
and
movsl
mov
aaa
mov
xchg
push
mov
sbb
mov
testb
test
adc
and
jmp
inc
pop
inc
jo
es
in
jne
arpl
push
insb
aam
sbb
and
mov
out
je
sbb
call
jmp
cld
mov
push
popf
repnz
ja
xchg
std
sub
or
jns
nop
fcomps
pop
addr16
jo
aas
dec
int3
nop
add
outsl
into
mov
daa
negl
xchg
inc
mov
shlb
adc
dec
mov
mov
adc
dec
and
js
mov
pop
decl
sub
lods
cld
fldcw
enter
adc
pop
sub
iret
je
cltd
mov
cmp
xchg
mov
gs
aam
cwtl
std
jnp
daa
cs
pop
sub
xor
add
cmp
pop
imul
ret
add
aas
mov
xchg
sarb
leave
enter
enter
xchg
inc
push
in
push
pushf
outsl
je
push
add
xchg
dec
mov
push
add
inc
sti
or
loope
pop
jbe
imul
sbb
push
lea
je
or
int
std
iret
lret
push
loopne
jecxz
mov
outsl
inc
ficoms
int3
jbe
test
imul
or
and
ror
push
jg,pn
push
pop
divl
repz
icebp
push
mov
mov
sarb
xchg
es
addr16
nop
inc
jno
cmp
stos
cli
xor
repz
push
pop
pop
fnsave
xchg
test
jbe
add
push
mov
scas
cli
ljmp
push
cmp
incl
adc
pop
mov
jns
fimuls
repnz
stc
cmpsb
push
fiadds
cli
pushf
mov
cmp
inc
and
xor
pop
lds
out
pop
mov
push
pop
out
adc
xchg
jne
pop
xor
aas
pusha
imul
cmpsl
pop
xor
jl
test
rcr
addl
out
iret
fiadds
outsb
in
lcall
movsl
mov
inc
fdivrl
inc
shrb
pop
loop
and
push
mov
pop
lods
and
jmp
dec
mov
addr16
scas
mov
mov
loopne
adc
std
add
addr16
lods
jge
aas
adc
cmp
push
fcmove
pop
add
in
popa
sbb
jne
jno
xor
lods
xchg
push
nop
jge
mov
jns
push
icebp
or
dec
and
and
aaa
fwait
pop
call
or
out
mov
daa
lcall
int
xchg
or
pop
cmp
lcall
mov
jmp
stc
fwait
jae
adc
and
hlt
adc
sbb
outsb
outsb
inc
lock
fs
jp
incb
jns
sbb
incl
xchg
ss
rorl
clc
pop
lahf
xchg
out
sbb
pushf
dec
jb
sub
insl
mov
stc
idivl
mov
out
and
add
fidivl
inc
push
popf
mov
jmp
pop
push
cmp
out
jecxz
adc
push
jns
mov
icebp
dec
fcmovb
cmp
jns
jnp
push
sbb
cmc
movsl
and
ret
cmp
push
ljmp
xorl
xor
lcall
inc
sub
icebp
inc
or
leave
push
cmp
adc
push
xor
into
sbb
or
adc
subl
inc
or
pop
push
cmp
ja
add
cmp
cld
es
mov
out
push
icebp
adc
sbb
mov
aaa
mov
pop
mov
sub
sub
or
add
jp
movsl
jo
adc
ds
dec
mov
push
dec
xchg
jne
leave
inc
lock
inc
inc
adc
das
leave
mov
icebp
lea
es
mov
data16
outsl
mov
jp
in
arpl
jl
push
cmp
mov
cmpsb
push
daa
adc
pop
out
mov
nop
bound
icebp
cmp
mov
lcall
mov
cltd
subb
shlb
imul
decl
push
add
push
xor
das
mov
jne
pop
sar
inc
cli
in
cli
push
cld
cmp
xor
lods
xorl
or
arpl
test
add
jb
aam
dec
into
push
dec
mov
scas
leave
adc
leave
lods
je
mov
and
popa
outsl
or
add
pop
add
das
adc
xlat
sti
imul
sahf
imul
xchg
or
lods
dec
imul
in
aaa
or
adc
pusha
cmpsb
push
push
pusha
jno
sti
sub
mov
jp
lret
call
jbe
cld
push
movsb
nop
dec
push
insb
pop
sbb
divb
inc
jecxz
xchg
adc
dec
jns
cltd
adc
lock
test
mov
mov
push
inc
shll
xchg
cmp
dec
je
lea
mov
dec
inc
in
push
hlt
nop
test
or
pop
jle
ds
cli
jae
push
and
sbb
into
mov
inc
dec
aaa
popf
xchg
inc
adc
push
inc
adc
out
fstpt
and
insl
pop
or
lods
iret
loope
test
sub
pop
push
mov
mov
je
jno
push
pop
mov
mov
dec
adc
or
add
repz
xor
addr16
inc
lret
ljmp
sub
inc
inc
jmp
fnstcw
gs
mov
movsl
cmp
mov
inc
cmc
fwait
cltd
ljmp
sbb
das
inc
mulb
cmp
adc
jnp
mov
dec
pop
inc
or
or
cmp
mov
jbe
aad
imul
dec
and
popf
push
int3
sahf
inc
adc
int
ss
adc
or
jmp
xor
pushf
jns
fldcw
and
and
andl
fdivs
ficoml
xor
sub
jl
das
push
fcmovu
pop
sbbb
daa
xchg
sbb
xor
sahf
dec
sbb
or
lea
xchg
insl
and
jg
sbb
dec
jg
fs
nop
sub
test
sbb
push
adc
repnz
shr
cmp
notb
movsb
xchg
push
inc
push
out
stos
jle
or
int
push
and
fnstcw
dec
push
popa
mov
sti
push
movsl
mov
std
push
aam
arpl
xchg
mov
xchg
out
les
ds
xchg
jne
js
push
fsubs
lds
pop
ja
inc
sub
subl
int3
divl
push
cwtl
pop
cltd
outsl
xchg
in
lret
mov
in
push
test
push
xchg
aaa
cmp
adc
arpl
push
les
sti
ss
testb
push
stc
pop
mov
dec
iret
cs
daa
inc
cltd
xchg
jno
dec
leave
and
loopne
shl
and
int3
inc
subb
lods
xchg
loop
xchg
das
inc
fwait
or
daa
incl
mov
xchg
push
mov
cmp
xor
cli
es
jge
and
dec
inc
push
notl
dec
push
popw
imul
xor
dec
dec
fidivs
filds
xchg
adc
or
mov
jno
sbb
pop
imulb
xchg
jle
adc
push
adc
xchg
fs
cltd
mov
lcall
jg
out
adc
je
in
jne
std
inc
mov
mov
cmp
lea
sub
cmp
ss
push
cmc
sub
cwtl
jnp
push
xor
movsb
loopne
gs
jl
fistpll
daa
push
pusha
push
or
add
jo
pop
mov
push
mov
daa
mov
mov
jae
push
cltd
mov
ljmp
inc
dec
push
dec
les
mov
dec
push
fldt
hlt
xlat
push
mov
sub
ret
mov
fdivl
xor
in
jb
mov
sbbb
lock
dec
mov
jb
hlt
roll
sbbb
mov
gs
inc
pop
mov
push
imul
scas
mov
cs
push
xor
add
icebp
lea
stos
out
loop
push
mov
insl
xchg
ds
lret
and
js
dec
outsb
pop
roll
pop
add
data16
jns
pop
adc
fdivrl
or
and
mov
mov
jg
cmp
nop
out
pop
jl
add
out
mov
inc
xchg
fdivrl
xchg
pushf
add
add
lret
repz
fsubr
fnsetpm(287
arpl
jecxz
cmp
aaa
jbe
stos
bound
or
mov
jbe
insb
or
lods
pop
imul
fsubrl
int3
sbb
je
mov
ja
or
sub
imul
cmp
icebp
out
pop
xor
out
scas
dec
mov
push
jbe
inc
inc
out
inc
int
mov
xlat
fdivrl
jns
lret
movsb
pushf
mov
pop
sbb
adc
push
out
sub
shr
cmp
push
cld
inc
bound
sub
ffreep
daa
divb
jne
mov
cmp
std
cli
xchg
icebp
xor
mov
pop
cli
cmp
test
push
push
jp
dec
sub
mov
shrb
xor
inc
cmp
clc
shll
cmp
sbb
mov
mov
adc
leave
cwtl
loopne
into
ret
shl
adc
xchg
mov
rclb
movl
cmc
jge
loopne
ret
or
pop
mov
mov
or
nop
cmp
mov
hlt
aaa
out
lcall
sub
int
mov
mov
fimuls
xor
stc
push
repz
in
mov
and
mov
xchg
incb
aas
sub
mov
push
dec
adc
aam
xchg
sbb
or
pop
sbb
dec
cld
xor
push
std
out
inc
sbb
aad
repnz
fisubrs
test
sahf
and
adc
or
in
inc
inc
int
mov
lcall
pop
push
push
pop
mov
lods
js
test
int
sub
lret
pop
lods
das
ja
pop
mov
out
int
sbb
jbe
jns
adcb
mov
add
jno
mov
push
xor
outsl
ret
sbb
lret
inc
jb
popf
lods
leave
adc
js
scas
nop
daa
int
hlt
lret
hlt
pushf
int3
push
out
fnsave
sbb
cmpsl
or
imul
call
add
sub
and
ficoml
orb
test
leave
xchg
cmp
pop
or
pop
lret
mov
mov
jg
xchg
aas
push
adc
enter
or
sar
jne
push
jbe
mov
das
sub
cld
xor
test
adc
ret
mov
stc
xchg
sub
xchg
push
jnp
movsl
mov
mov
fcomps
repz
or
mov
popa
mov
push
push
or
outsl
jb
in
or
gs
or
push
sti
or
mov
or
mov
sub
shll
mov
push
mov
jns
jg
jl
push
out
sbb
dec
imul
sub
cmp
adc
aam
iret
jl
and
bound
cmc
pop
mov
xchg
cwtl
test
sbb
push
sub
xchg
rorl
jnp
das
jecxz
jl
fcomps
lods
lea
bound
jb
loopne
adcb
cmp
dec
sbb
dec
stos
data16
mov
cmpsb
loop
and
aas
dec
inc
insl
xlat
xor
cmp
lret
pop
loopne
pop
adc
in
jmp
mov
cmp
mov
in
mov
lret
jnp
xchg
std
addr16
jbe
jb
adc
cs
sbb
add
pushf
and
cmp
bndstx
pop
inc
daa
mov
shll
out
fildl
push
es
fildll
add
dec
jnp
test
add
scas
repnz
or
push
aam
repz
popf
adc
xchg
xor
jl
adc
out
sbb
jge
mov
push
sub
sbb
cmp
add
adc
mov
push
call
push
popf
cmp
std
loopne
test
xor
sti
pop
mov
shr
stos
clc
loopne
mov
test
imul
or
aaa
arpl
and
dec
adc
ficoml
pusha
xchg
mov
fldt
outsl
dec
mov
jns
pushf
ret
or
data16
insb
mov
loop
rcrb
jbe
adc
fnstenv
mov
push
outsl
inc
push
inc
or
xor
andl
insb
xchg
add
out
fwait
dec
aam
jns
lcall
sbb
mov
aaa
fistpll
push
sbb
pop
pop
rol
pop
mulb
jmp
jnp
mov
rcrb
jg
cmc
and
in
sbbb
adc
lcall
and
and
bound
sub
andb
cmp
or
push
adc
lcall
inc
pop
jae
ljmp
add
xorl
jecxz
inc
mov
push
or
push
mov
mov
popa
cmp
jbe
rcl
in
inc
in
or
xlat
push
dec
in
sub
add
sarl
shl
and
pop
cmp
xchg
jno
cs
ljmp
jle
xchg
adc
std
es
jp
or
lock
icebp
rolb
adc
scas
push
lds
aaa
mov
out
int
lock
sub
adc
popa
add
in
ret
push
dec
xor
jae
jmp
adc
sbb
dec
mov
fs
das
and
cmp
hlt
fidivs
cmp
push
and
aas
mov
mov
out
push
fnstsw
pop
fidivrl
sbb
loop
push
push
push
loope
sbb
fldl
cli
aas
sbb
inc
loope
cs
les
div
xchg
xor
adc
xchg
cmp
into
mov
aam
xor
cmc
mov
pushl
cmc
mov
lea
test
into
pop
cmpsb
cmc
out
in
add
sbb
ffree
push
bound
push
je
add
inc
mov
push
test
mov
add
jbe
lock
pop
daa
ret
shll
scas
inc
lds
outsb
pop
xor
scas
popf
lret
or
adc
shrb
mov
mov
nop
cwtl
sarl
mov
repz
ret
lds
mov
sub
in
popf
jp
and
rolb
in
aam
rolb
pushf
mov
mov
mov
imul
test
xor
out
int3
shl
or
jg
mov
test
daa
inc
loopne
xlat
adc
aad
push
jcxz
std
add
in
shrl
jl
js
sti
aad
mov
lock
xorl
pusha
clc
outsb
popa
imul
stos
loop
leave
mov
jbe
cmp
pop
push
add
test
sub
pop
xor
mov
negl
andl
aam
adc
jb
imull
sub
out
ljmp
dec
add
sub
call
bound
es
fdivl
imul
das
pop
pushf
push
adc
jnp
mov
loope
and
adc
test
and
aam
shll
cld
adc
jae
push
sub
fwait
mov
sbb
jmp
icebp
xchg
xchg
test
mov
test
test
sub
mov
jo
cmp
bound
cmp
dec
or
out
push
mov
jo
in
jge
notb
data16
bound
jo
repz
pop
and
xor
sbbb
fdivrs
leave
pop
pushw
inc
lds
fmull
adc
into
pushf
pop
push
pop
pop
jp
sub
xchg
add
pop
mov
daa
ljmp
psllq
dec
cmp
in
inc
ss
pop
fwait
es
cmc
adc
and
xor
xor
popa
add
mov
andl
es
loope
fwait
fs
adc
push
inc
push
ja
or
sub
mov
cmp
int
jge
adc
movl
pop
ljmp
xchg
inc
pop
adc
cs
mov
xchg
xchg
mov
movsb
mov
aam
pushf
dec
aas
dec
in
xor
repnz
inc
mov
data16
xchg
popf
stos
orl
aam
push
mov
popl
rcrb
insb
popf
xlat
aas
dec
test
jp
stos
pop
popa
add
push
xchg
push
pushf
mov
jecxz
imul
jb
sbb
add
dec
xchg
dec
int3
scas
dec
sbb
in
aaa
repz
clc
jns
jae
les
xchg
imul
iret
jle
sbb
ret
ds
or
cwtl
repz
adc
push
aaa
or
insb
aad
push
mov
adc
or
test
gs
push
fucomip
mov
out
inc
mov
stc
in
enter
jnp
push
jnp
mov
jnp
push
jbe
push
mov
in
mov
xchg
cmp
sbb
movsb
sbb
aas
ja
mov
push
es
das
jae
xor
mov
xor
pop
shrl
and
mov
mov
sub
cmp
in
ret
fsubs
jo
pextrw
mov
mov
sbb
rcrl
iret
ja
sub
jecxz
push
popf
jns
int3
jno
sbb
rclb
gs
ja
pop
mov
cwtl
in
ds
jg
pop
adc
push
aad
scas
repz
aad
xchg
jecxz
movsb
cmp
sub
xchg
mull
jb
fwait
inc
pushf
cmp
fildll
test
int3
insb
pop
dec
bound
xchg
pcmpeqw
mov
mov
imul
jno
push
sarb
push
dec
fsubs
mov
mov
test
sti
mov
sub
push
xor
or
xor
lret
sbb
ja
mov
outsl
adc
pop
rolb
inc
sub
shr
mov
addr16
mov
inc
jbe
push
mov
mov
mov
jnp
nop
flds
pop
add
adc
and
xor
or
pop
mov
xor
mov
fwait
xchg
mov
and
maskmovq
or
notl
xor
aad
adc
aad
xchg
data16
jbe
subb
je
xchg
pusha
ret
in
mov
seto
xchg
mov
xor
dec
add
fiaddl
hlt
mov
lcall
sti
enter
xor
sub
xor
jbe
xchg
inc
jo
jb
pmaddwd
outsl
cmpsb
pop
inc
fwait
jle
lds
repnz
mov
leave
mov
inc
dec
adc
xor
dec
mov
stos
fdivp
movzbl
cmp
hlt
ret
sub
adc
sbb
dec
imul
pusha
ja
iret
iret
sahf
fiadds
cmp
xor
loop
filds
mov
jns
mov
mov
cli
jo
movsl
and
cmc
insb
mov
gs
adc
pop
divl
cs
dec
shlb
pop
cmp
imul
test
test
imul
repz
mov
push
cltd
jmp
out
pop
add
popf
rcrb
mov
inc
stos
adc
icebp
iret
sub
add
inc
jo
cmpsb
mov
int
jecxz
mov
or
sti
add
xchg
jns
jmp
inc
lret
jne
xchg
push
mov
ret
cmpl
push
out
ljmp
or
test
in
pop
icebp
stos
int3
dec
in
shrb
lahf
adc
xchg
out
je
xchg
push
push
call
cmp
in
hlt
les
mov
add
sub
cmp
push
mov
sbb
mov
loopne
jmp
testb
dec
sub
push
or
sub
adc
cmp
outsl
xor
push
pop
xchg
mov
sbb
bound
ret
sbbb
pop
push
nop
mov
pop
fstps
imul
mov
lret
popl
dec
jne
mov
push
and
jmp
je
adcl
repz
push
mov
mov
xchg
and
dec
mov
xchg
mov
xlat
fs
rolb
sub
mov
adc
sub
and
jp
jp
out
test
and
std
pop
jo
jnp
sbb
testb
ret
int3
imul
out
xor
inc
outsb
lret
push
repz
fucomip
test
sti
ficoml
mov
lods
pop
add
cmp
mov
mov
xchg
cmp
mov
ficomps
mov
push
data16
pop
shrl
rcrb
jo
sub
ss
pop
imul
and
xchg
pusha
jae
cwtl
lahf
repnz
dec
cmpsl
add
cli
push
test
jg
and
add
adc
dec
imul
jbe
cmp
cmc
aaa
inc
outsl
mov
sahf
rcl
push
testb
pop
out
mov
or
dec
outsb
iret
aad
aas
cltd
mov
xchg
dec
sbb
das
inc
adc
out
ja
mov
fiaddl
cs
test
and
xor
outsb
leave
jp
shrb
mov
iret
push
out
in
mov
lcall
in
clc
mov
out
ret
jl
add
pop
add
int3
jecxz
xlat
lahf
repz
clc
int
orps
ficompl
daa
xor
insb
push
cmpsl
dec
jle
cmpsl
stc
dec
jne
addr16
jns
pop
cwtl
cmp
xchg
ds
mov
out
mov
mov
cwtl
push
aad
lret
dec
jbe,pn
and
scas
mov
enter
cld
xchg
sbb
lahf
adc
adc
or
ret
cwtl
jns
rcrb
cld
push
lods
xchg
cmp
mov
jne
rcrl
imul
test
lret
push
or
jbe
push
push
lods
mov
popa
cmpsl
or
push
mov
xor
xchg
dec
sub
add
pop
xchg
adc
pop
push
adc
enter
call
inc
sbb
fistpl
jne
faddl
jae
pop
test
std
and
je
stc
pop
lods
cmc
or
pop
out
or
pop
add
mov
or
mov
je
fsts
imul
bound
nop
adcl
adc
jp
loop
mov
xor
push
dec
push
pop
push
lret
test
sahf
pop
fsubl
inc
mov
in
sub
les
sub
xor
imul
into
push
mov
iret
add
and
std
stc
sub
sub
jae
push
nop
into
rorb
cmp
mov
sarb
sbb
pusha
pop
adc
lods
clc
cmp
lods
jnp
in
xchg
and
movsb
xchg
jbe
or
mov
lods
push
mov
jmp
mov
push
dec
fisttps
stos
adc
mov
fcomip
stc
xchg
idivl
mov
sbb
dec
fwait
into
shlb
xlat
mov
cs
rorb
pop
test
pop
adc
call
xlat
jne
dec
fdivrs
pop
adc
in
out
xchg
push
cmpsb
scas
dec
addr16
test
xor
bound
mov
fdivl
outsb
adc
shrb
push
or
push
adc
ret
insb
push
push
mov
pop
mov
dec
xchg
lcall
and
sti
in
ja
sub
adc
sbb
cmpsl
sbb
push
or
fdivrs
lds
das
cld
js
jecxz
outsb
and
sub
out
insb
fwait
cmp
repnz
jbe
stc
ficoms
cwtl
in
xchg
sahf
inc
push
bound
addps
iret
sbb
rcrb
lahf
ljmp
xchg
rolb
sbb
sahf
movsb
and
inc
jmp
mov
add
pop
xchg
fstpt
add
mov
int3
jp
loop
cld
outsl
movsb
loop
lcall
pushf
shlb
xchg
outsb
jo
jge
xchg
sub
out
aad
push
hlt
loopne
xor
cmp
ds
mov
lock
or
aaa
out
add
lret
xchg
and
jge
mov
lods
call
jno
push
mov
ja
rorl
sbb
mov
jne
ja
sbb
addr16
loope
or
in
sbb
sbb
test
stc
xchg
or
mov
cmp
fadds
sbbb
movsb
insb
inc
dec
push
xchg
xor
lret
mov
out
sbb
pop
and
rolb
xchg
xchg
fstpl
and
pusha
loope
arpl
and
call
out
loopne
out
and
bound
dec
movsl
jnp
mov
inc
bound
xor
mov
jae
mov
add
mov
push
adc
or
or
jb
mov
fdivrs
std
es
sub
jp
mov
inc
push
jecxz
jo
inc
pop
sbb
imul
dec
cmp
pop
xor
push
fcmovne
bound
cmp
push
jnp
testl
fsubs
push
jb
mov
inc
ljmp
testb
add
fwait
dec
or
mov
adc
out
shlb
and
mov
roll
in
out
scas
mov
xchg
adc
imul
es
dec
outsb
sbb
add
dec
and
mov
pop
out
xchg
dec
out
dec
jne
xchg
int3
pop
sub
enter
gs
es
mulb
pop
clc
ret
roll
repnz
jb
outsb
dec
icebp
aas
scas
mov
orb
sbb
cwtl
bts
mov
mov
xor
fcmovnbe
clc
fwait
loop
mov
pop
lea
in
in
ljmp
mov
ljmp
daa
cmp
or
mov
sbb
cmp
out
test
mov
test
aad
and
cmpsb
repnz
lds
jno
into
cs
cmp
inc
mov
cwtl
aad
sti
ja
push
out
xor
and
sub
insl
cld
push
lahf
std
popf
in
jno
lock
iret
mov
lahf
adc
dec
mov
adc
dec
inc
es
push
out
into
jge
outsb
mov
outsb
popa
push
call
mov
mov
or
jae
aas
or
insb
jnp
lcall
mov
fldl
jl
in
dec
push
sub
rclb
xor
cmp
mov
stc
mov
or
out
icebp
addr16
fildll
mov
roll
shr
mulb
sahf
fimuls
cmpsl
xor
int
rclb
fdivrl
movsl
faddl
or
ss
test
jge
push
adc
mov
lahf
ss
jmp
dec
xchg
inc
fcompl
jnp
cmp
jo
iret
dec
popa
rcrb
ds
mov
leave
je
jl
mov
cmp
inc
aad
and
lcall
ja
cmpsl
or
cmp
pop
lret
es
mov
div
adc
jb
popf
add
sbb
push
sbbb
fsubs
rcrb
lret
adc
bound
insl
out
and
imul
jge
arpl
jne
int
xorb
inc
jnp
cmpsb
movsb
sub
es
and
rcrl
xchg
cmpsb
push
arpl
mov
das
xor
sbb
xchg
sub
inc
ret
ja
push
dec
ljmp
in
or
ds
jbe
and
mov
pop
mov
pusha
adc
push
loopne
jl
push
cmc
add
fs
lods
mov
and
std
adc
test
popa
scas
adc
jb
sub
int
add
jne
inc
nop
xchg
sub
cmp
cmp
popf
shr
stos
cmc
cmp
cmp
aaa
xor
add
bound
rclb
popf
fldcw
mov
inc
and
cmp
and
lods
call
loop
push
mov
push
mov
into
push
lods
cmpsb
mov
dec
jmp
in
in
cmpb
andb
xor
and
and
dec
in
sub
dec
rclb
adc
jmp
dec
xchg
pop
add
jg
xchg
scas
stos
imul
jne
cmp
mov
or
xchg
mov
jecxz
add
mov
push
test
fwait
into
stc
repnz
inc
movsl
or
fimull
sbb
jg
mov
mov
dec
pusha
mov
push
pop
bound
jns
jno
sti
xchg
mov
bound
mov
decl
fisttps
add
pop
jle
loop
dec
jnp
ret
in
idivl
inc
ret
and
bound
dec
mov
enter
popf
daa
or
and
rcrb
push
cmp
mov
test
xor
xchg
dec
push
cmpsl
cmp
mov
out
lcall
cmpsl
cli
in
icebp
and
stos
movsl
inc
stc
pop
mov
add
push
sets
dec
shll
cmc
mov
or
fwait
inc
js
daa
test
cmpsb
popa
mov
jo
xor
negl
jb
add
dec
push
arpl
adcb
jl
ljmp
inc
sub
icebp
iret
insb
and
ret
jnp
in
shrl
mov
jp
push
stos
mov
out
adc
test
and
cmc
mov
int3
xor
fidivrl
pop
fcmove
pop
adc
push
mov
jne
xor
ljmp
and
pop
shrb
daa
iret
sub
jl
lea
in
cld
lods
mov
aaa
jmp
pushf
imul
adc
and
push
roll
outsl
addb
pop
jl
repz
pop
push
sbb
loop
or
sbb
lahf
fwait
lods
lret
pop
shll
movq
sbb
pop
jns
jnp
pop
cli
fisttps
inc
gs
aam
out
pop
cwtl
scas
pop
sub
stc
ljmp
rorb
sbbl
xchg
aaa
cwtl
jne
lret
pop
adc
add
mov
outsb
inc
cmp
lods
or
popa
jns
mov
dec
dec
dec
pop
data16
jns
pop
dec
cmp
sub
not
push
shr
rclb
popa
addr16
xor
xor
push
imul
jle
sahf
in
mov
popa
fistpll
mov
push
mov
inc
inc
aaa
fnstenv
sbb
repnz
sub
es
jne
push
je
mov
mov
lods
arpl
sub
jmp
mov
lret
adc
xor
jne
sarl
lods
fstps
test
mov
xchg
inc
pop
lds
mov
daa
int
or
mov
adc
pop
cwtl
pop
dec
test
cmp
add
and
jecxz
cmp
push
pop
sub
outsb
out
aam
jmp
ljmp
lcall
pop
adc
imul
xchg
xchg
or
out
test
lahf
cmp
sub
aaa
hlt
mov
cmpsb
add
pop
jl
loopew
xor
mov
cmpb
adc
hlt
fnstcw
add
pop
push
lock
push
dec
aaa
mov
cmp
js
mov
cld
mov
pop
subb
mov
leave
and
or
cmpsb
or
test
sub
cmpsb
mov
clc
mov
shr
aas
xlat
cmp
mov
popa
mov
popf
add
das
outsb
dec
jb
dec
nop
add
xchg
lahf
int
out
push
xor
sbb
lds
jl
dec
adc
and
adc
les
xor
pop
lret
inc
pop
inc
stc
arpl
das
ss
inc
popa
xchg
enter
leave
idiv
repnz
mov
movsb
test
test
rcll
in
push
xchg
jecxz
insb
mov
inc
int
pop
mov
fildll
inc
sub
dec
xchg
out
mul
js
popf
cmc
lahf
adc
pop
sub
rorl
gs
pop
aad
outsl
sub
clc
fs
test
cmp
xor
test
xchg
pop
les
mov
add
inc
mov
inc
outsl
dec
sub
scas
jns
cmpsl
fstpl
pop
ljmp
cmp
clc
push
sar
rclb
scas
pop
int
and
cmp
inc
outsb
stos
mov
lret
dec
fucom
push
test
push
mov
lret
mov
inc
xor
and
jne
imul
mov
mov
sti
lods
mov
daa
dec
and
test
adc
adc
inc
add
xor
sbb
pop
mov
int3
jle
je
scas
loope
fildll
ss
push
insl
mov
fcmovu
xchg
jns
sbb
imul
cmp
lock
xor
adc
nop
out
je
icebp
xor
cmpl
fcom
icebp
movb
cld
js
xor
ljmp
push
adc
dec
dec
mov
sbb
xor
repz
nop
mov
mov
es
jo
das
in
and
xchg
and
outsl
icebp
add
push
movsl
lods
adc
dec
out
or
arpl
jmp
xor
dec
adc
mov
in
sbbl
lds
cli
aam
dec
dec
call
adc
stos
inc
outsb
jb
cli
test
xor
hlt
pop
je
out
add
cmpl
fsubrl
in
and
gs
rcrb
ljmp
push
xchg
pusha
jb
addr16
mov
xor
hlt
shrb
sti
push
mov
daa
sub
test
sbb
lcall
int3
push
arpl
mov
jnp
inc
lods
out
jae
loope
mov
cmpsl
das
push
xchg
mov
xchg
out
sbb
cmp
xor
or
mov
adc
out
out
loope
ret
stos
lret
push
outsb
push
push
mov
shlb
stc
in
pop
xchg
popf
ss
sahf
in
mov
ss
cli
insl
jne
xchg
mov
stc
je
lahf
leave
push
xor
sbb
sbb
xor
out
cmp
aas
push
pusha
inc
lret
test
lahf
jns
mov
popf
popa
and
dec
jne
mov
rcrl
mov
fdivs
push
or
mov
ljmp
lahf
fmulp
xorl
clc
mov
ja
jl
jb
or
xchg
push
aam
push
pop
pop
jecxz
icebp
rcrb
cwtl
mov
ss
ds
or
lods
cmp
shlb
xchg
out
or
xchg
lret
movsl
fisttpll
mov
negb
pop
jle
lret
sbb
iret
mov
push
mov
vcvtsd2si
mov
cmpsb
test
lods
add
pop
jmp
cld
or
dec
inc
xchg
clc
xchg
or
gs
xchg
mov
jo
dec
mov
mov
mov
hlt
fsts
lods
pop
sbb
lock
fsts
pop
mov
and
mov
cltd
ljmp
in
push
cmp
fstpl
mov
sbb
test
out
decb
mov
lds
pop
and
pushl
adc
jno
fdivr
pushf
xchg
add
add
pusha
cmp
cmpsl
js
shll
or
xchg
mov
out
daa
push
gs
pusha
xor
sub
jbe
jmp
fnstcw
inc
iret
out
into
insl
dec
adc
fldcw
mov
push
das
jp
inc
scas
sub
jo
stos
sbb
cmp
shrl
js
into
pop
lret
push
mov
sarb
out
xchg
pop
or
out
pop
adcb
mov
add
ret
dec
dec
ljmp
jo
sub
and
jne
mov
cmp
and
xchg
js
ss
sub
into
sbb
js
jno
jbe
inc
test
xcrypt-ecb
cmpsl
int3
xor
fistpll
add
lds
aad
adcb
pop
inc
xchg
xor
pop
repz
jmp
lahf
shll
mov
pop
fiadds
insb
xlat
lret
scas
mov
pop
ret
aam
mov
lret
pop
roll
mov
imull
popa
outsb
test
lret
inc
js
adc
adc
pop
std
inc
repz
push
je
mov
mov
pusha
lds
mov
jmp
orl
sbbl
jo
add
sarb
mov
scas
cmp
adc
fs
push
daa
arpl
mov
outsb
jmp
fsubs
stos
scas
cmp
or
stos
inc
fldt
ror
data16
push
lods
stos
out
stos
arpl
push
xor
cli
int3
push
mov
jge
xor
xchg
jl
jns
jl
loope
pop
pop
into
jns
dec
mov
rcl
xchg
pop
inc
aad
std
in
fildll
aas
ret
stos
or
jg
mov
fwait
int3
fisttpll
jg
jbe
nop
sub
mov
stos
mov
inc
xchg
pop
std
movsb
push
rcll
jns
rcrb
mov
idivl
imulb
jp
sub
mov
subl
mov
data16
push
sub
movsb
mov
rorb
add
pushf
sub
sub
and
adc
repnz
or
inc
jo
les
lds
or
jl
in
fnstenv
scas
adc
jns
popa
fs
inc
les
pop
pop
pop
xor
arpl
pusha
cltd
loop
out
mov
dec
inc
scas
dec
adc
es
jmp
jae
aam
addr16
loop
popf
or
push
mov
xchg
dec
jae
imul
popl
cld
mov
add
xor
push
pop
ss
sbb
insb
sbb
dec
insb
pop
xor
jl
jle
pop
cmpsb
test
das
dec
pop
adc
ret
in
cmp
jl
dec
mov
inc
aad
push
jge
mov
das
inc
sub
rolb
mov
cmp
scas
inc
and
mov
add
xor
enter
icebp
repnz
int
addb
mov
xchg
mov
jmp
mov
push
aad
fiadds
xor
int
push
into
iret
xorl
incb
inc
pop
or
and
or
xchg
mov
jle
cmp
notl
js
sti
xor
test
mov
xchg
mov
stos
push
cmpsb
adc
inc
cmp
sub
mov
fnstenv
shr
mov
jne
push
jl
push
cs
lods
dec
fnstenv
push
fmuls
or
lahf
jnp
adc
cwtl
mov
dec
mov
andb
and
fwait
mov
lea
sub
mov
push
mov
push
jno
add
pop
leavew
jae
repz
out
dec
imull
lods
lds
and
cmp
dec
std
push
bswap
cld
shll
loop
shlb
mov
ss
mov
jns
out
aad
aam
xlat
stos
mov
subb
cmpb
leave
or
add
ljmp
aam
or
hlt
xor
movsl
rolb
push
mov
popa
fwait
jmp
sbb
xor
test
das
mov
pop
jns
insb
inc
lret
jl
push
pop
mov
shrb
mov
jl
frstor
addl
inc
out
and
xchg
loopne
xchg
in
fimuls
push
rclb
insl
mov
push
fisttps
cltd
fdivl
call
mov
aad
add
jb
xchg
adc
cmp
les
dec
mov
movsl
pop
aad
add
dec
push
mov
push
xor
xor
mov
cmp
mov
in
jmp
inc
cmp
jbe
mov
jp
xchg
push
dec
lods
xor
or
inc
pusha
in
pop
add
mov
lock
push
fs
sbb
add
pop
andl
xor
sarl
lds
adc
stos
out
pop
daa
out
jbe
lea
ficomps
rcll
mov
test
sahf
icebp
sbb
call
add
stos
and
ss
outsb
lret
sub
ror
fnstsw
sbb
adc
push
stc
inc
jge
sti
mov
jl
sahf
mov
xor
movsl
pop
ljmp
add
mov
pushf
cmc
mov
fistpl
pop
xchg
xor
fldl
mov
ret
dec
cmpsb
inc
lret
and
mov
repnz
xchg
xchg
xchg
mov
int
faddl
mov
scas
pop
jle
push
add
mov
lret
out
movsl
fs
mov
dec
cmp
loope
cwtl
rcrb
jmp
xor
stc
rcrb
fsubp
imul
jge
mov
mov
xor
mov
cmpsb
mov
sbb
or
les
int
sbb
dec
outsb
add
fs
xchg
jecxz
mulb
mov
inc
popa
jb
aam
xchg
jl
push
sub
aad
xor
lea
ret
lea
jmp
scas
jle
call
xor
pop
xchg
pop
cmp
mov
fcmovnb
mov
or
enter
or
jnp
jae
aas
ror
lahf
jne
inc
pop
int
xchg
lock
pushaw
push
aam
xor
out
fnstsw
addr16
lods
je
push
mov
data16
xchg
xor
test
fidivl
push
icebp
xchg
xchg
or
fildl
imul
fcompl
add
or
stos
stc
sub
mov
icebp
inc
xor
pop
imul
lahf
sub
jae
ss
mov
jb
stos
jns
xorb
mov
ret
int
call
dec
lds
adc
faddl
sub
sub
loope
addr16
xor
mov
into
push
aam
sub
test
cmp
inc
mov
into
in
cmp
pushf
daa
pop
mov
repnz
sti
sbb
mov
loope
pop
xorb
adc
cld
sbb
rcll
or
fmuls
lahf
fdivl
sbb
mov
pop
jbe
std
sbb
adc
rorb
in
testb
aam
and
mov
inc
inc
jl
sti
ds
and
gs
clc
xor
or
dec
jae
mov
sbb
idivl
push
inc
fstp
xor
mov
sbb
std
xor
dec
jge
dec
inc
in
and
jmp
mov
clc
dec
fxch
int
cmpsb
in
ja
jecxz
lahf
ret
dec
and
adc
dec
mov
sub
mov
repz
inc
mov
inc
mov
rol
mov
cltd
jno
inc
push
pop
inc
shlb
dec
adc
sub
dec
mov
js
orb
jne
aas
inc
ja
sti
mov
call
fmull
iret
mov
fimull
aad
mov
pop
cmpsb
push
div
popa
pop
cmpl
hlt
sbb
je
sarb
call
inc
mov
or
sub
sub
add
mov
inc
in
jge
adc
sahf
push
call
xor
fldt
mov
mov
daa
mov
adc
xchg
mov
adc
xchg
rol
and
mov
icebp
sub
es
add
flds
push
mov
subb
ret
sbb
add
aaa
loopne
out
shr
ss
lds
dec
repnz
popa
xor
insl
inc
lea
adc
inc
faddl
add
cli
and
inc
add
out
sub
outsl
ss
stos
sarl
add
push
cmpsb
movsb
xor
lret
or
push
clc
dec
fisttpl
pop
lcall
xchg
test
sbb
cmp
inc
inc
jne
int3
ffree
push
mov
cltd
insb
adc
dec
mov
push
or
sarl
adc
cmp
jg
xchg
xchg
xor
xchg
test
sbb
das
xchg
das
adc
xchg
xchg
movaps
dec
jno
idivb
les
push
push
shl
cs
lods
mov
dec
cmpsl
or
lods
fildl
mov
fistpll
ret
jae
mov
test
sbb
sub
pop
jns
sahf
cmp
mov
mov
and
cmp
clc
push
inc
fildl
enter
add
loop
cmpsl
das
cmpsb
loope
loop
adc
jbe
in
inc
inc
push
in
iret
jne
mov
mov
push
out
adc
add
push
pop
popa
mov
hlt
mov
mov
jg
iret
icebp
cmp
outsl
fists
addr16
out
xor
das
push
cmp
mov
xchg
dec
dec
in
daa
aaa
iret
adc
sbb
cmp
scas
bound
add
iret
xor
out
push
movsb
jbe
inc
in
addr16
xchg
icebp
js
mov
mov
sub
movsb
lret
in
aam
cmp
mov
das
sahf
sub
sub
sbb
notb
insb
fisubs
cwtl
push
pop
push
sbb
xchg
sbb
ret
and
xchg
std
outsl
lret
es
aaa
jecxz
rcll
sub
iret
test
out
pushf
mov
lret
xor
scas
popf
into
sahf
cld
pushf
fbstp
sub
mov
aad
push
loopne
data16
div
pop
out
cmp
xor
lods
lret
andl
fisubrl
aaa
push
lcall
out
dec
cltd
cmpsl
pop
out
movsb
inc
add
outsl
cmc
fistl
in
fisubl
ret
push
mov
out
inc
aad
ja
dec
repz
stc
or
cmp
pop
leave
dec
paddb
imul
enter
pop
cmp
jno
aad
aam
les
nop
imul
cld
les
test
clc
aaa
add
lods
int3
popf
cli
outsl
xchg
jp
xchg
pushf
dec
cmpsl
and
sti
aam
add
mov
ficompl
sub
dec
and
mull
adc
ret
fucom
mov
jmp
or
nop
cmp
je
or
in
xor
add
les
dec
sbb
mov
fidivrl
adc
add
hlt
inc
andl
add
push
ds
push
ror
in
je
pop
inc
mov
adc
cmp
pop
fisubrl
dec
rcll
xlat
enter
sbb
push
xchg
hlt
adc
ljmp
mov
stc
jnp
mov
xchg
push
pop
popa
push
and
out
add
pop
jnp
sub
push
insl
adc
cltd
popf
pop
dec
movsb
ss
cmp
inc
mov
push
nop
push
jno
dec
pop
lcall
icebp
sub
stos
add
fdivl
insl
push
leave
mov
data16
mov
cltd
jle
cmp
jne
inc
or
mov
pop
mov
insb
test
popa
es
and
js
add
cs
test
cmp
adc
js
adc
pop
fidivrs
add
popf
push
sub
leave
dec
call
cmp
gs
jno
ljmp
or
dec
mov
adc
out
fld
add
dec
sub
push
xor
lods
mov
out
sub
jecxz
sarb
sub
inc
or
inc
pushf
mov
dec
jmp
and
imulb
fsts
sbb
cmpsb
push
movsl
repz
jecxz
fwait
imul
mov
mov
aaa
xchg
insl
sub
iret
jg
adc
cmp
dec
push
in
fs
cmp
addb
mov
pop
jp
sub
dec
mov
pusha
je
push
test
orl
adc
cmpsb
inc
sub
or
push
or
push
push
xor
inc
lock
stc
jns
jle
mov
add
pushf
fwait
sti
jg
sub
arpl
sub
loopne
int3
pop
shrl
dec
vmovapd
inc
push
out
cmp
out
mov
inc
cmc
push
out
inc
mov
shrb
stos
cmpsb
add
cs
xor
out
nop
mov
cli
or
lahf
jecxz
mov
cmpsb
scas
pusha
ret
lds
lods
jge
test
pop
push
pushf
dec
dec
cwtl
cs
push
xchg
cmp
lret
outsb
sahf
sub
pop
bound
cli
stos
cmp
loope
push
jo
in
jle
leave
push
push
lahf
adc
cmp
sar
mov
enter
loope
in
mov
stc
push
add
fs
xor
pop
cmp
cld
pop
ficoms
lds
das
pop
xor
sub
aad
lods
icebp
or
jp
scas
cmp
pushf
mov
pop
lret
push
mov
mov
jb
repz
push
imulb
outsb
inc
adc
movsl
mov
or
or
sbb
xor
push
or
mov
add
jb
mov
js
ljmp
into
sub
dec
adc
jnp
adc
in
movsb
enter
adc
xor
xchg
idivl
insb
mov
xor
hlt
inc
xor
mov
aad
pop
jae
xchg
fidivrs
out
rcrl
pop
fildll
mov
adc
lcall
inc
cmpsb
outsb
xchg
mov
in
ss
or
dec
jnp
adc
test
push
sbb
loopne
push
xchg
and
inc
xchg
outsb
lcall
pop
xchg
fimull
fistps
xchg
add
jne
xor
ror
dec
xchg
jo
in
add
mov
dec
pop
std
jae
mov
adc
mov
xor
std
lods
arpl
int3
cltd
cltd
push
push
mov
rclb
js
sti
pop
jl
es
sbb
sbb
pop
loop
clc
adc
decl
in
sti
call
enter
adc
add
mov
jnp
mov
ds
mov
scas
mov
and
mov
xor
inc
cmpsb
pop
stos
call
or
push
fistl
clc
imull
pop
mov
insb
mov
movsb
mov
or
lret
mov
leave
and
sbb
loop
mov
mov
add
sbbb
push
outsl
sbb
dec
sub
rclb
mov
fisttpl
test
aad
jmp
call
xor
lret
jb
mov
leave
insb
pop
and
les
sbb
je
enter
xchg
scas
dec
lret
in
fcompl
movsl
addr16
icebp
test
arpl
cmpsl
lds
mov
mov
and
je
dec
jmp
xchg
push
daa
fdivrl
insl
mov
inc
das
xchg
pop
pop
ljmp
xchg
cli
mov
jb
imul
mov
xor
fcoml
insl
xlat
dec
push
pop
fwait
mov
scas
sbb
lds
jb
mov
data16
mov
popa
mov
sub
out
jae
popf
aas
push
push
and
xor
repnz
jns
xor
int
bound
push
shlb
out
les
mov
or
xor
inc
push
cmp
push
lea
xrstor
std
js
sub
sub
cmpsl
add
mov
adc
push
icebp
adcl
push
add
mov
dec
ds
or
test
icebp
dec
pop
mov
mov
pop
lret
cmc
push
jae
dec
outsl
mov
xlat
jbe
stc
and
loope
jns
pop
imul
inc
push
out
daa
lret
out
jp
adc
jg
sub
push
pop
and
bound
cmp
add
sbb
lods
repnz
insl
in
add
adc
jle
lret
outsb
push
insb
sbb
scas
inc
sub
xchg
push
sub
movsb
ficoml
pop
mov
sti
je
jbe
or
sub
dec
xor
xchg
and
loop
sti
dec
xchg
mov
adc
push
push
js
test
mov
inc
sbb
jg
jmp
pop
outsb
fistpll
mov
bound
stos
mov
cmpsb
sti
push
jmp
adc
sub
lcall
fsubr
xchg
sti
or
lret
test
jl
add
mov
cmp
popf
inc
xchg
jmp
push
test
cmp
pop
in
inc
and
jmp
cmp
aad
aaa
inc
in
push
pop
test
addr16
pop
ja
outsl
test
pop
lock
idivl
xchg
scas
add
push
jmp
xchg
add
mov
enter
cmpxchg
pusha
sbb
das
hlt
mov
lods
gs
pop
adc
repz
mov
push
and
xor
fnstsw
testl
xchg
popf
insl
jecxz
pop
jge
aam
mov
inc
filds
imul
xor
or
fsubl
xor
out
cltd
pop
push
push
repnz
xor
lds
test
ficoml
mov
pop
loopne
push
xchg
iret
insl
or
push
in
xor
fsubrl
pop
cmp
shll
add
sub
dec
xchg
stos
or
cmp
imul
sub
test
cmp
jno
xor
stc
sbb
dec
cwtl
aad
xor
enter
outsb
mov
js
inc
xchg
call
sbb
rcl
bound
cmp
or
popa
add
mov
outsl
lahf
ja
ret
xor
dec
mov
add
scas
add
fwait
test
xchg
push
imul
lock
mov
dec
jle
loop
xchg
lcall
js
lods
and
mov
adc
divb
xor
dec
cmp
lock
or
mov
je
cmpsb
push
xor
jmp
cld
inc
imul
fisubrl
and
into
xchg
bound
out
xor
dec
jg
xlat
repz
jo
in
fwait
les
mov
xchg
cwtl
jns
in
icebp
pop
imul
inc
fcmovnb
ja
add
leave
jmp
and
sbb
cltd
xor
jl
mov
int
mov
pop
dec
mov
cld
outsb
mov
adc
add
cmc
in
jno
inc
int3
or
adc
push
fstp
outsb
popf
lahf
xor
mov
dec
cmp
mov
xor
adc
test
sbb
lcall
mov
sbb
out
ret
test
cmp
xor
orl
mov
iret
inc
xlat
push
lea
in
push
ret
hlt
idivb
lret
push
cwtl
mull
jb
ja
mov
fcompl
sub
repnz
add
dec
sbbb
adc
sti
inc
cmp
push
jnp
cld
jmp
out
lods
incl
pop
mov
and
pop
cli
pushf
cmpsl
fildll
mov
cmc
hlt
dec
add
arpl
loope
cmpsl
sub
enter
scas
imul
testb
push
dec
shr
adc
scas
mov
jg
dec
push
xor
repz
arpl
dec
add
cltd
sub
mov
lds
sub
rclb
sbb
push
or
xor
or
push
push
pop
stc
push
push
add
sahf
pop
jmp
cmpsl
int3
xchg
imul
pop
add
mov
leave
into
loopne
fs
icebp
lret
adc
sub
rclb
adc
add
mov
and
jae
and
mov
sub
adc
mov
lret
cwtl
stos
loopne
in
xlat
xchg
jne
adc
stc
mov
xchg
mov
insb
ret
mov
pop
add
inc
lret
push
pop
mov
pushf
adcb
xor
aam
das
fcoml
xor
jnp
sub
data16
xor
mov
lds
mov
jle
jecxz
jcxz
in
jecxz
into
pop
jp
call
xchg
jo
outsl
push
lods
jae
inc
jg
fdiv
adc
mov
cltd
enter
jnp
aaa
or
jbe
loop
lret
stos
xlat
adc
clc
cmp
lahf
jne
adc
pusha
inc
mov
sbb
fidivs
daa
mov
aad
inc
push
mov
inc
add
mov
jo
and
dec
and
gs
mov
mov
jp
adc
movsb
dec
test
mov
push
arpl
cmp
xchg
sub
pop
aas
xor
lret
jns
or
in
xor
mov
imul
mov
cmp
pushl
sub
outsb
fcmovu
pop
xchg
sbbb
sub
lods
jge
pop
testb
enter
popa
stc
movl
rcr
mov
fsubl
pop
dec
add
inc
pop
push
lods
fldl
xor
inc
fwait
and
aas
es
sub
jno
xlat
lock
mov
fisttps
shll
mov
rcll
xchg
iret
cwtl
xchg
xchg
mov
mov
push
cmp
sti
rcrb
xlat
xor
mov
test
add
pop
pop
jbe
shrl
push
xor
lods
lods
pop
mov
mov
aad
mull
test
lods
insb
ret
jb
ret
hlt
addr16
inc
mov
in
inc
inc
cld
and
sub
adc
fiadds
adc
xchg
mov
sbb
scas
iret
test
xlat
push
jno
scas
jne
int
mov
in
not
inc
jl
into
out
cmc
mov
sti
in
call
nop
mov
jo
fbld
aaa
sbb
mov
in
aaa
movsb
adc
fdivrp
cmp
fsubrp
inc
add
cmp
in
pop
das
push
setb
inc
lea
mov
adc
data16
jmp
add
or
sbb
push
out
stc
call
int3
xadd
fisttps
mov
mov
dec
add
and
scas
cmpsb
xchg
data16
movnti
shll
or
adc
lea
arpl
xor
cmp
aad
and
lret
adc
push
daa
add
add
lcall
pop
imul
repnz
mov
movsl
lock
roll
sub
hlt
test
push
mov
or
mov
hlt
or
add
icebp
xor
rcll
mov
cmp
inc
ret
jae
loope
and
push
dec
dec
xchg
xchg
fwait
scas
gs
int3
cmpsl
cmpsl
xchg
push
outsb
je
jecxz
pop
push
push
stc
push
roll
outsl
pop
fidivs
xor
pop
pop
sbb
scas
jmp
enter
mov
mov
mov
inc
ljmp
push
sar
dec
nop
bound
out
cmp
sbb
mov
mov
dec
xor
stos
in
xchg
cmp
outsl
push
pop
inc
add
in
addr16
xchg
sub
shlb
out
sub
jbe
lcall
add
das
lods
cld
sbb
loop
adcb
pop
dec
jb
popa
divb
push
nop
cmpsb
repz
pop
inc
repnz
dec
push
pushl
addb
arpl
insb
out
mov
arpl
push
mov
aaa
dec
and
and
jmp
xor
pop
add
push
sub
call
jp
xor
push
aaa
lea
icebp
pop
push
add
push
test
inc
push
pop
inc
xchg
jae
scas
push
rclb
mov
aam
xchg
movsl
cltd
iret
cld
adc
push
gs
jg
out
test
scas
mov
cmc
icebp
rcrb
xor
xchg
fcoml
int3
jns
jo
push
push
test
adc
mov
mov
popa
fistl
or
mov
pop
and
or
adc
inc
cmpsb
lods
push
push
imul
pop
test
push
or
xor
inc
dec
inc
sbb
jb
cmp
popa
adc
xchg
sahf
lahf
push
and
pop
filds
pop
stos
scas
xor
mov
push
cmp
imull
mov
movsl
cmp
adc
dec
jmp
jl
mov
test
cmp
xchg
xor
jmp
gs
inc
or
or
icebp
mov
inc
sbb
pushf
xchg
rorb
scas
mov
int3
sub
sub
test
jnp
shl
xor
rcpps
jo
or
jb
pushl
mov
ret
fsts
xchg
xor
movsl
inc
inc
push
pop
mov
out
aam
mov
or
mov
lock
jne
mov
add
es
jge
idivl
sbb
adc
imul
inc
and
push
dec
add
fildll
cwtl
mull
jl
ljmp
sub
xchg
popa
push
pop
mov
hlt
jp
lds
movsb
push
stos
lock
jae
sbb
cmp
test
mov
jmp
xchg
jp
in
ss
adc
jle
inc
adc
fimull
cmp
sub
mov
mov
dec
fwait
and
inc
mov
stc
in
das
subl
xchg
addr16
fldt
out
adc
mov
ja
sti
xchg
or
jb
rclb
les
aad
insl
movsl
adc
or
sarl
sub
loope
jbe
mov
xchg
mov
testl
stos
and
ja
out
hlt
idivl
inc
and
movsl
push
imul
je
les
cmp
push
nop
scas
adc
push
insb
push
mov
ds
in
enter
dec
popa
loop
push
mov
repz
mov
aad
xchg
mov
jno
xlat
and
adc
sbb
push
mov
pop
or
mov
jns
ss
std
in
add
xadd
fcompl
sbb
jns
adc
add
mov
pop
jae
sub
and
push
subb
in
mov
push
outsb
pop
arpl
outsl
mov
lds
popa
sub
fwait
lea
add
mov
cmp
jo
jb
subb
or
in
jecxz
call
out
shl
inc
call
xorb
mov
lret
sbb
mov
mov
jno
mov
andl
sub
add
mov
jns
cmp
xchg
mov
mov
flds
jo,pt
sub
cs
dec
bound
pop
inc
inc
sbb
mov
int
push
and
inc
fsts
sbb
sbb
dec
fcoms
xchg
or
outsb
push
fs
clc
pop
outsb
jp
test
mov
jne
push
mov
loopne
hlt
pop
add
cmpsl
imul
scas
out
mov
mov
int3
cmp
data16
cltd
adc
into
push
push
testb
inc
les
ja
fistps
loop
fcmovnb
add
rclb
xorl
sub
dec
cmp
jg
pop
mov
aad
mov
mov
or
cmpsl
mov
popa
add
enter
orb
pop
or
push
mov
enter
xchg
jl
mov
loope
insb
int3
pop
xor
lods
enter
imul
xchg
mov
nop
jmp
ret
insb
mov
sub
xchg
jo
aad
int
leave
mov
jmp
jecxz
add
popf
cmc
loopne
aas
andb
shll
push
mov
sub
jecxz
dec
sbb
fadd
imul
cmp
mov
cs
insb
sub
cmp
jmp
lretw
lock
mov
dec
das
mov
pop
lcall
gs
xorb
sahf
shll
fcmovnbe
test
pop
xor
popf
loopne
jae
dec
or
add
jecxz
mov
cmp
test
dec
pop
loop
jl
jae
adc
iret
dec
and
ljmp
push
insl
fst
out
and
cmp
pushf
int3
test
pop
sub
push
and
prefetch
or
cld
loop
sub
lock
pop
dec
adc
jecxz
xlat
adc
xor
dec
sub
xlat
out
sti
cmp
push
adc
jne
inc
cmp
jnp
rcrb
sub
cmpsl
push
mov
lret
mov
and
xor
pop
cmp
mov
sub
push
push
aam
add
es
dec
push
jbe
leave
aad
sub
or
mov
bound
mov
sti
ret
insl
add
fildl
mov
adc
repnz
jp
int
inc
adc
jo
push
and
pop
cmp
inc
add
push
into
rcr
cld
mov
add
inc
imul
jge
aaa
rcl
filds
ret
fwait
add
dec
pop
scas
je
call
lock
mov
mov
js
mov
mov
movsl
fistl
add
sub
xchg
std
cmpsl
jecxz
shl
push
js
lods
xchg
pop
loop
dec
mov
dec
mov
mov
cli
rcr
jge
sub
pop
mov
jle
out
push
sub
frstor
dec
repz
das
fwait
pop
mov
adc
dec
repnz
lock
dec
sbb
adc
and
leave
dec
mov
popf
jnp
mov
mov
xlat
jle
es
mov
out
adc
sahf
insl
adc
aad
mov
add
in
cwtl
mov
aam
push
xor
shr
xchg
push
aaa
xorl
add
sbb
outsl
pop
push
jnp
add
outsl
or
rolb
insb
outsl
xchg
sbb
insb
xchg
bound
enter
pop
ss
mov
aam
push
mov
mov
movsl
jo
inc
lods
jb
cmc
push
cld
dec
hlt
jle
cmp
bound
shrb
test
xchg
jmp
fwait
cmp
movsb
lods
test
jns
loope
mov
push
lds
mov
cmpb
mov
sarb
xorl
stos
movsl
sub
mov
gs
lahf
mov
jbe
inc
in
jge
inc
mov
outsl
mov
mov
dec
call
in
js
xor
fildl
xor
and
push
add
bound
lock
add
jns
jle
mov
fldcw
mov
dec
xchg
mov
xchg
dec
fcoml
pop
loopne
mov
inc
sub
push
lods
out
mov
mulb
jp
adc
pop
hlt
dec
sar
xchg
inc
dec
ds
ret
add
xchg
mov
negb
ss
inc
scas
bound
out
ffree
loopne
pop
xchg
pop
mov
mov
scas
idivb
mov
inc
sarb
push
xor
add
outsb
cs
movsb
repz
inc
pop
ja
and
repz
mov
cli
cmp
into
repnz
in
in
jno
push
aad
mov
push
stos
pop
test
sbb
and
pop
cmp
or
or
jne
ret
lea
xchg
push
mov
push
fcomi
outsb
push
out
filds
xchg
cwtl
add
lea
orb
push
xchg
in
push
cmp
xchg
jg
int3
lcall
loopne,pn
mov
xchg
sub
xor
or
and
cs
and
repz
jecxz
movsl
test
ret
sbb
jle
dec
ret
or
dec
and
sbb
ljmp
ret
fnstcw
in
push
xchg
adc
push
les
icebp
jmp
adc
or
cmp
aaa
pop
jl
xor
xor
mov
add
mov
mov
add
movsb
add
dec
pop
dec
cmp
xor
and
adc
and
aaa
push
shl
adc
mov
loope
outsl
pop
push
adc
xchg
into
aam
add
dec
push
mov
xor
outsl
movsl
mov
lods
sub
pop
pushf
jl
cmp
loope
mov
jmp
outsb
jp
addl
mov
movsl
insl
xchg
jbe
sbb
clc
iret
fadds
inc
aad
inc
push
mov
or
sti
lret
inc
xor
push
mulb
sbb
and
dec
xlat
fcmovbe
mov
xor
sbb
loopne
inc
mov
fisttpll
or
add
mov
outsl
imul
mov
jne
sbb
or
mov
push
mov
lcall
push
xor
mov
test
pop
pop
inc
stos
inc
mov
dec
add
jge
xchg
hlt
mov
lods
xchg
test
push
sbb
out
adc
and
xchg
jb
pop
int
sbb
out
sbb
xor
jge
dec
bound
xchg
jg
push
and
mov
daa
cs
movsb
std
jbe
aaa
jbe
ret
lahf
cmp
jb
pop
testb
push
pop
jbe
and
imul
mov
mov
negb
test
mov
cli
jns
aas
mov
or
mov
mov
inc
jl
pop
mov
aaa
dec
cmc
fsub
mov
hlt
sub
mov
fbstp
push
daa
inc
cmp
mov
das
shl
mov
cmp
out
mov
mov
sbb
test
inc
ret
out
add
inc
mov
stos
ja
cmp
mov
idivl
add
xchg
pop
sti
cwtl
sbb
test
pop
sti
lea
add
pop
sbb
insb
xlat
fisttpl
shlb
pop
ss
insb
mov
mov
and
je
in
dec
mov
fs
and
dec
cs
shl
xchg
mov
xchg
mov
lret
movsl
outsl
lods
enter
push
jge
in
cld
pop
outsl
push
aaa
xchg
fdiv
aad
cmp
adc
pop
lds
hlt
sbb
mov
sbb
cmpsb
shl
jecxz
std
cmp
clc
inc
fxch
sub
addr16
adc
lods
cmp
inc
mov
jbe
out
mov
test
cmpsb
testb
adc
cmp
pop
popf
test
jge
hlt
addr16
add
and
stos
inc
dec
jecxz
pop
fstps
pop
ja
mov
mov
or
rorb
shll
fs
hlt
ret
cmc
pop
inc
pop
xor
jno
push
shr
push
lods
pushf
inc
pop
sbb
sbb
loopne
shll
icebp
jns
aas
inc
enter
add
mov
jg
idiv
test
inc
fmull
xlat
xchg
dec
push
pusha
ret
xchg
aad
ljmp
outsb
sbb
stc
in
pop
and
loop
mov
xlat
dec
push
push
lcall
push
xchg
mov
and
cmp
jp
shll
xchg
mov
sub
inc
pop
shrb
push
insl
inc
sub
and
mov
push
sub
das
sub
mov
dec
inc
xor
lret
sbb
jecxz
test
pop
add
je
push
fs
pusha
test
or
sub
mov
mov
sti
enter
add
sub
stos
dec
add
daa
xchg
loop
decl
fs
dec
jae
mov
or
adc
jmp
add
sub
ss
addr16
es
sbb
cmpsb
mov
rcl
mov
push
mov
clc
data16
cmpsb
mov
negl
add
add
inc
loop
sbb
lahf
push
mov
cmp
pop
push
imul
dec
mov
inc
xchg
add
dec
aaa
imul
adc
subl
jg
std
sub
mov
scas
pushf
js
call
cs
out
mov
and
scas
mov
pop
outsl
jb
and
stc
pop
inc
push
into
cmc
hlt
fwait
cmp
mov
fstl
jge
xor
in
repnz
adc
mov
ss
outsb
lds
js
pop
xchg
cmp
xchg
inc
sub
popf
or
cld
in
add
dec
push
dec
outsb
pop
pushf
cs
xchg
cmp
icebp
inc
inc
cltd
or
add
inc
jge
adc
into
mov
dec
jmp
mov
inc
js
das
scas
imul
jne
pop
out
push
pushf
jp
push
add
and
and
jecxz
adc
mov
mov
add
pop
pop
xchg
jg
pop
mov
movsb
cmpsb
sbb
imul
jo
dec
dec
mov
xor
inc
adc
push
pop
lods
sbb
xchg
pop
xor
test
mov
or
mov
cmp
mov
shlb
ljmp
or
sub
fwait
repz
pusha
mov
adc
and
xchg
cmp
dec
mov
pushf
sbb
shrl
pop
xchg
js
add
xrelease
nop
xchg
mov
jmp
or
pusha
jge
or
adc
repz
inc
out
cltd
cs
pop
mov
test
lods
inc
mov
mov
shrl
test
aas
loopne
cwtl
pop
dec
dec
int
insl
or
jb
int
out
shr
push
cmp
sbb
movsb
movsb
fsubrl
xchg
pop
testb
ret
cmp
ror
push
scas
bound
test
add
pop
bound
push
ret
push
and
xlat
add
out
jmp
clc
sub
int
xlat
ret
int
adc
jbe
mov
popa
cmp
cmp
fidivrs
and
jg
fstl
iret
btrl
or
push
test
sbb
cs
std
movsl
mov
out
sub
mov
jmp
inc
push
in
sti
out
outsb
add
push
cmp
pop
icebp
mov
dec
ds
fisubrs
lret
or
stc
jbe
mov
push
xchg
mov
cmp
sub
ljmp
sar
pop
stc
jge
cld
es
jb
pop
inc
test
sub
into
dec
sbb
insb
jno
mov
cmpb
mov
pop
and
push
add
or
xchg
jg
mov
mov
mov
cmp
ss
sbb
sub
push
push
inc
jmp
jno
push
outsb
popf
xchg
pop
in
jo
js
xchg
adc
and
dec
cmp
cmp
push
jo
dec
mov
cmp
daa
repz
adc
add
pusha
cli
outsl
dec
push
fcmovbe
lea
aas
insb
enter
lods
dec
sbb
xchg
mov
sbb
dec
cmp
call
mov
mov
adc
inc
das
or
icebp
mov
shlb
fs
sbb
pop
mov
bound
out
add
xor
sub
cli
ret
nop
jg
mov
in
fisubs
sub
push
adc
and
ss
cmp
loopne
sub
push
iret
popa
sub
stc
addl
testl
inc
or
cmp
out
sbb
jecxz
push
sbb
ficoms
fsub
insb
int3
leave
dec
push
ds
test
fdivrp
mov
jl
in
push
and
fistpll
cmp
mov
jmp
dec
out
cltd
mov
ds
iret
inc
mov
mov
fstpt
les
fdivr
lret
pop
jo
xor
push
push
pop
sub
and
xor
aas
repnz
dec
dec
inc
fs
cmpsl
gs
lret
ds
sub
sahf
int
and
mov
ja
aaa
enter
mov
ja
jns
scas
pop
push
outsb
mov
gs
and
lcall
fiaddl
push
lods
bound
js
lock
stos
xor
jp
inc
stc
mov
stos
idivl
ret
stos
cmp
mov
or
xor
push
aas
jne
cmpsl
cmp
rcrl
inc
jne
xchg
fs
arpl
sub
inc
insb
iret
dec
cltd
push
xchg
jmp
divl
jno
ljmp
mov
dec
dec
mov
push
daa
fcoml
ss
sub
lods
fwait
scas
stc
mov
jns
cmp
jle
test
xlat
outsb
orb
xor
jns
dec
lock
xor
es
clc
mov
inc
xchg
test
jb
adc
popa
pop
or
cmpsb
mov
xor
pop
imul
loop
into
dec
adc
aam
or
inc
pop
fistpl
repz
xchg
and
lock
call
inc
in
movsl
cmp
or
leave
mov
sbb
lock
int3
mov
test
or
lods
ret
jecxz
fidivs
sub
lods
cmp
movsl
mov
nop
mov
sbb
mov
sbb
mov
or
dec
imul
movsl
mov
movsl
insl
xor
int
mov
inc
jp
xor
std
addr16
pop
movsb
jbe
or
sbb
aaa
and
add
out
scas
mov
negb
push
mov
mov
movsl
mov
das
andb
loope
daa
xchg
xchg
push
ja
pop
daa
and
sub
xor
fcomp
sbb
pop
sub
cli
jne
and
stos
sub
cmp
stos
add
and
push
adc
sbbl
push
mov
sub
jmp
mov
lock
pop
jo
sub
gs
sbb
outsl
add
fdivr
pop
frstor
rcrl
or
xchg
into
pop
mov
add
mov
push
cwtl
mov
cmc
or
movsb
sub
iret
mov
jl
push
int3
fs
jl
xor
inc
in
je
cmpsb
cmpsl
movsl
ds
jp
fidivs
fistpll
mov
cmp
ret
cmpsl
and
jl
mov
popf
sub
imul
push
roll
mov
pop
pusha
dec
fwait
pop
cwtl
stc
test
pop
mov
inc
pop
jp
jns
les
add
ret
lds
push
lret
cld
repnz
lea
and
in
jmp
push
cmp
addb
inc
mov
aaa
movsl
lahf
repnz
push
and
pop
push
outsl
test
icebp
call
loope
int
mov
ss
loopne
dec
inc
fistl
rolb
fwait
inc
inc
xlat
xchg
mov
loop
push
sbb
jne
and
xor
cmpsl
add
jmp
divl
lock
xchg
out
nop
stc
mov
roll
mov
mul
adc
push
sub
dec
adc
out
ret
mov
repnz
mov
ret
mov
dec
or
adc
push
dec
pusha
dec
loop
pop
scas
test
xor
es
xlat
inc
pop
jno
add
push
or
mov
push
xchg
outsb
pushf
rorb
out
arpl
adc
pop
dec
push
sbb
jnp
mov
es
idiv
mov
sbb
shlb
mov
cmpsb
hlt
sub
mov
adc
adc
call
aas
sbb
xor
adcb
lock
addl
jbe
jne
xchg
cmp
cmp
pop
cs
dec
xchg
clc
push
lock
sarb
jmp
mov
jb
sarb
cmp
clc
mov
mov
mov
das
sbb
push
cli
test
mov
stos
dec
jb
out
mov
sub
and
mov
rcrl
repnz
test
inc
push
cmp
int3
xchg
push
cmp
push
mov
mov
lods
sub
in
fldpi
and
int
fwait
leave
push
pop
xchg
mov
jae
mov
add
or
repnz
cmp
sti
xchg
stos
leave
loopne
in
in
mov
xchg
push
pushf
jecxz
test
dec
and
aad
dec
loope
outsl
cmp
jl
out
dec
xchg
add
pop
add
jno
push
dec
lock
cmpsl
dec
cmc
mov
dec
psubusw
mov
arpl
and
inc
dec
test
cwtl
jge
and
add
add
imul
jb
mov
ret
test
test
add
scas
stc
add
clc
xor
hlt
cmpl
ja
ljmp
mov
mov
popf
mov
mov
aaa
jae
cli
je
dec
pop
sbb
fsubl
or
lock
lock
mov
sub
xchg
daa
inc
mov
stos
pop
lods
lods
pop
cmpsl
push
push
fs
out
cmp
xchg
lret
scas
pop
dec
fstpt
mov
mov
dec
ss
and
pop
adc
xchg
dec
or
icebp
push
jns
pop
aas
popa
sub
pop
js
lods
data16
mov
sub
popf
adc
lcall
xor
mov
xorl
jecxz
out
mov
addr16
xchg
adc
dec
dec
pop
cld
cmp
sbb
sub
leave
jle
pop
sbb
adc
xchg
mov
cmp
add
pop
and
fs
xor
push
jb
scas
repnz
loope
xchg
dec
rolb
add
add
inc
loope
xor
int
dec
mov
push
in
jmp
mov
out
mov
popf
pop
mov
push
xchg
add
push
test
pusha
les
push
mov
out
call
pop
aaa
jle
xchg
sbb
push
mov
inc
pop
xchg
pop
mov
cmpsl
aas
shll
je
add
xchg
ljmp
dec
or
sbbl
imul
outsl
loope
dec
or
in
test
nop
jo
fstpl
xor
pop
sub
xchg
cmp
add
test
xchg
xor
xbegin
sahf
sbb
icebp
stos
push
pop
mov
cmp
setg
cs
ret
cmp
ja
adc
je
mov
jns
push
fbstp
loope
xor
cmp
lds
addr16
imul
idiv
sahf
dec
push
aam
push
cwtl
push
push
fs
adc
je
stos
mov
ja
hlt
pop
xlat
adc
xor
cmp
ja
scas
std
adc
push
xor
pop
scas
clc
adc
xchg
sbb
out
mov
inc
mov
jmp
add
adcb
shll
dec
lret
jle
sbb
test
stc
jbe
cwtl
es
imull
jg
cmp
add
shrb
aam
xchg
mov
insb
xor
jecxz
lods
int
and
or
subl
xchg
sub
jl
xchg
dec
push
jns
sub
repnz
divb
push
out
jne
nop
fsubr
cld
jmp
dec
sarb
push
iret
scas
or
adc
into
add
cmp
fisubrl
out
test
fcmove
adc
and
adc
push
ljmp
loop
cmp
pop
in
cmp
scas
call
pushf
inc
gs
and
outsl
inc
enter
popf
imul
inc
add
in
dec
or
out
popf
jle
sub
and
mov
adc
inc
pop
es
mov
fs
imul
mov
xorb
inc
enter
add
or
shl
ret
xchg
jle
imul
ret
mov
xor
mov
aam
mov
fcoms
ret
test
add
push
pop
jne
push
dec
sbb
sub
scas
or
push
inc
sub
inc
sbb
cmpsl
popf
nop
cmp
xchg
and
inc
mov
lea
ror
pop
lret
mov
rep
mov
inc
fcomp
icebp
rol
fs
mov
js
in
or
idivl
mov
nop
pop
xorl
idivb
mov
push
jle
mov
mov
js
add
cmp
mov
stos
xchg
js
test
lcall
xlat
mov
mov
outsl
movsb
clc
mov
imul
dec
into
push
mov
jl
cld
popa
js
push
mov
sbb
mov
popa
out
es
sub
enter
sbb
bound
in
dec
add
je
inc
aam
and
mov
stos
jmp
dec
or
aaa
je
mov
push
jecxz
sti
cmp
ds
hlt
and
jmp
cmp
push
sbb
mov
in
and
mov
jp
dec
mov
mov
cmp
jge
mov
mov
xor
cmp
dec
inc
sbb
stos
pop
cmp
xchg
mov
in
push
mov
mov
inc
jno
mov
cmpsb
pop
jo
or
pop
sti
dec
orb
jmp
mull
push
xor
pop
fisubrl
sti
data16
dec
push
aad
imul
cli
subl
mov
clc
sub
mov
adc
or
mov
les
lcall
cmp
inc
sub
inc
mov
inc
xchg
inc
out
test
lods
xchg
out
push
cwtl
add
xchg
lret
in
fucomi
loope
inc
adc
sbb
fldcw
xor
or
dec
jb
mov
add
xchg
sbb
imul
test
mov
ljmp
popl
push
mov
lds
sub
fiaddl
sbb
clc
jg
dec
call
imul
punpckhwd
adc
mov
addb
adc
mov
dec
sbb
dec
push
ret
ljmp
cmc
imul
into
rcrb
movsb
adc
fdivp
pop
add
adc
or
mov
enter
mov
cwtl
add
popa
pop
cmp
mov
call
push
int3
rcrb
sbb
hlt
fcoms
xor
sub
and
nop
adc
loope
jnp
mov
in
jmp
cmp
mov
sub
push
pop
out
sbbl
sbb
cmpsl
adc
leave
xchg
add
xchg
sub
icebp
nop
fstpl
mov
xchg
dec
push
in
jge
call
sti
std
outsl
mov
mov
popa
stos
fdivl
iret
or
icebp
xchg
nop
stos
into
push
mov
mov
jnp
rolb
fsubp
lock
xor
jb
cmp
sub
xor
xchg
push
shll
sbb
aam
xchg
adc
mov
mov
or
cltd
insl
imul
int3
stos
push
xlat
push
insb
add
loopne
out
xchg
jmp
fsubrs
mov
and
subl
outsb
femms
mov
pop
sub
jae
push
test
mov
jnp
mov
sub
xchg
nop
shll
xchg
enter
imul
sub
cmpl
xor
roll
cli
xchg
push
mov
mov
sbb
in
inc
sbb
and
adcl
and
out
incl
sbb
stos
sbb
in
sbb
xchg
push
inc
dec
in
xor
fucomip
pop
cmc
push
lock
adc
and
mov
imul
jne
lret
or
das
bound
dec
mov
mov
and
mov
outsl
stos
aad
out
and
hlt
dec
ljmp
push
and
push
inc
fisubrs
adc
lock
cwtl
sahf
stc
jno
sbb
into
jmp
and
mov
add
sub
in
mov
cs
xchg
scas
ljmp
test
dec
inc
nop
out
cs
sub
in
aam
popa
or
sti
xor
pop
iret
int
ret
add
jae
lcall
jbe
adcb
in
subl
daa
xor
mov
in
mov
fidivrs
rcl
enter
lahf
and
pop
scas
nopl
inc
andb
pop
mov
popf
stos
xorl
add
cmp
out
cmp
jg
pop
adc
cli
mov
imul
hlt
add
xchg
mov
fstpt
inc
pop
les
jb
and
inc
cmp
daa
and
sub
lods
pushf
in
mov
ror
shll
aaa
sbb
pop
hlt
loope
and
jns
push
leave
loopne
mov
in
sbb
inc
cmc
arpl
test
repnz
fldl
xor
cmp
or
or
stos
mov
dec
enter
xchg
repz
inc
inc
sar
daa
jle
xchg
jp
mov
dec
pop
daa
jno
aam
xchg
daa
push
sbb
add
cli
fists
mov
xor
adc
call
dec
dec
das
sti
pop
push
rorb
push
mov
testl
test
dec
jle
into
clc
xor
outsl
sub
or
xchg
sahf
sbb
and
adc
insl
incb
mov
sbb
shll
ret
push
inc
mov
mov
out
filds
scas
dec
and
adc
add
jns
sub
and
push
rcl
xor
xchg
fsub
scas
clc
add
push
adc
outsb
xchg
cmp
jecxz
insb
mov
mov
rorb
cmp
pushf
xchg
adc
pop
ss
inc
pusha
ljmp
pop
push
popf
test
or
and
xchg
cld
test
pop
out
pop
je
addb
push
repz
into
popa
cmpsb
and
lds
inc
or
jo
in
or
andl
mov
pop
fidivs
push
sbb
int3
fidivrl
jge
xchg
out
leave
jp
and
jle
mov
aas
fbstp
stos
push
xchg
mov
dec
test
arpl
cmp
in
push
mov
push
xor
xchg
mov
sti
addl
jecxz
dec
adc
xor
lds
sub
xchg
xlat
adc
gs
xchg
stc
outsb
out
addr16
mov
fdivp
or
test
xchg
dec
xor
aas
stos
mov
xlat
test
mov
lds
lcall
and
jmp
sub
cwtl
push
cmp
data16
and
push
dec
stos
jg
mov
push
jns
jle
fnstcw
push
sti
cmp
inc
cmp
test
cmp
dec
jne
cmp
mov
negb
repnz
repnz
pop
inc
and
xchg
sub
fstp
test
jb
cmp
xchg
ds
push
hlt
lcall
cmp
iret
flds
cli
dec
sbb
scas
mov
imul
sbb
iret
or
pop
sub
sti
bound
cmp
xchg
stc
iret
addl
push
jno
cld
addl
pop
push
xor
test
cltd
mov
and
rcll
int
add
add
in
aam
xlat
aam
movsb
mov
ss
inc
sub
adc
jne
cmp
adc
jns
scas
mov
das
aas
xchg
xchg
popf
cmp
shll
cltd
and
sub
cmpsl
out
lahf
and
movsl
pop
icebp
adc
dec
movsb
pop
lds
sub
pop
push
mov
sub
mov
lret
and
inc
lss
pop
sub
fildll
shlb
fdivl
mov
push
cmp
dec
arpl
jp
push
xor
mov
dec
int
dec
fcoms
jne
loopne
hlt
ds
ss
fdivrl
adc
das
movsb
mov
mov
addr16
popf
push
int
aam
ret
ds
jle
jecxz
inc
jns
and
in
rsqrtps
lret
outsl
or
cmp
push
inc
sbb
test
testl
sbb
out
cld
shl
add
loope
add
fwait
dec
fdivrl
and
xor
xlat
out
xlat
in
push
xlat
sar
in
sahf
jo
mov
in
insb
jp
aam
addr16
pop
enter
push
push
femms
pop
mov
push
pop
xchg
fimull
imul
or
xchg
outsl
mov
fisubrs
push
loope
sbb
daa
pop
ds
outsb
mov
jns
mov
or
mov
jmp
jmp
adc
cmpsb
rcr
pop
stos
insl
addr16
movsl
xchg
outsb
cmp
test
cwtl
jae
mov
add
adc
idiv
mov
dec
pushf
out
adc
mov
sbbl
popf
pusha
sahf
test
xchg
test
cmpsl
outsl
sub
inc
ret
ss
dec
popf
lret
jge
xor
add
fabs
or
xchg
push
push
lds
mov
jecxz
dec
test
or
dec
sub
shll
sub
aam
push
aaa
mov
rorl
loopne
or
in
mov
lea
dec
lret
jno
sbb
pop
cmp
mov
gs
sti
int
adc
nop
aam
int
loopne
out
and
ficompl
adc
xor
leave
mov
push
add
and
push
dec
outsb
pop
insb
cmpsl
jnp
loop
jmp
xor
inc
xor
lods
adc
add
xchg
mov
cs
add
shll
mov
xchg
jnp
aaa
cld
ss
pop
xor
jb
mov
movsb
in
mov
ljmp
xchg
mov
out
pushf
mov
outsl
pop
arpl
not
adc
jbe
push
mov
push
lods
sahf
xor
add
sub
mov
das
push
dec
cli
jno
lods
cs
stos
push
shrb
jecxz
es
sub
jno
mov
xchg
lods
aad
movsb
daa
pushf
std
inc
inc
mov
push
or
xchg
flds
xchg
movsl
daa
pop
pop
xor
jnp
test
xor
sbb
jecxz
mov
pop
lcall
xchg
xor
pop
inc
cltd
xchg
iret
movb
dec
jae
fildll
mov
je
mov
or
adc
jns
cld
inc
in
mov
in
ja
popa
dec
sbb
fidivrl
les
inc
or
ficoms
mov
cmpl
fists
in
movsl
out
adc
sub
cmpsl
dec
loop
lcall
aam
dec
cld
aaa
loop
jp
add
cmp
ds
bnd
xchg
repnz
cmp
xor
push
pop
ret
popa
jle
add
cmpsb
out
add
cmp
dec
inc
sub
push
pop
lods
pop
aaa
pop
popf
or
lods
cltd
push
imul
sub
into
jb
mov
jb
push
pushf
mov
adc
pop
or
adc
ljmp
push
cmpsb
push
mov
outsl
pop
adc
cs
mov
shr
pop
mov
mov
xchg
adc
push
std
out
out
loopne
mov
lea
and
push
pop
mov
xor
push
out
std
aas
add
ljmp
out
icebp
inc
inc
pop
mov
sbb
clc
movsb
mov
dec
adc
mov
or
jbe
test
adc
xor
scas
and
mov
cmc
jle
outsl
inc
sub
test
dec
cmc
icebp
mov
sti
andl
mov
aam
fdivr
je
stos
cmc
cmp
nop
push
xor
ret
enter
mov
mov
xor
mov
aam
lcall
icebp
fidivrs
push
rorl
add
mov
ljmp
lret
push
jns
sbb
xchg
jle
loope
inc
addr16
xchg
mov
std
mov
mov
xchg
jp
sarl
cltd
pusha
mov
loope
scas
push
flds
aaa
or
loop
inc
imul
insl
push
pop
mov
push
imul
clc
lock
insl
int
xor
insl
push
sub
gs
jbe
mov
das
jp
dec
inc
adc
hlt
stos
fidivrs
or
aad
cli
lock
test
ss
fstl
pop
or
scas
test
ljmp
lods
loope
adc
adc
cs
ret
xchg
sbb
sub
inc
jp
iret
add
mov
mov
pop
adc
inc
daa
rcr
pop
push
roll
orb
lret
ljmp
add
gs
bound
js
dec
sub
fnsave
dec
roll
loope
cli
pushf
es
fucomip
xor
adc
push
aad
push
ret
shlb
cli
leave
and
push
shlb
data16
lds
je
xor
add
push
mov
testl
or
cmp
xor
jnp
mov
js
sti
or
mov
inc
inc
mov
dec
add
les
mov
adc
xchg
cltd
fsubrl
movsb
loope
popa
jecxz
sub
call
xor
testl
lret
int
adc
and
mov
out
cmp
pushf
or
mov
stos
sahf
dec
test
push
cmp
jb
insl
or
sub
mov
push
scas
jl
inc
dec
call
out
aas
aam
or
sbb
cmc
inc
das
ljmp
dec
imull
mov
fldlg2
ja
jecxz
xchg
fsubrl
push
in
bound
mov
jno
addr16
adc
mov
cltd
lret
mov
in
jp
add
sahf
dec
enter
sysexit
dec
sbb
mov
mov
enter
push
fidivrs
xchg
daa
fmuls
cmp
mov
push
or
lods
fwait
jmp
stos
int3
nop
test
adc
push
add
in
inc
test
ja
nop
mov
test
jae
ds
mov
daa
lds
test
cmp
jecxz
push
js
push
mov
mov
inc
push
mov
pushf
or
push
jmp
outsl
or
mov
fisttpl
les
outsb
aas
jecxz
and
and
into
inc
aaa
xchg
push
lds
mov
xchg
jecxz
mov
ds
pmaxub
push
xor
jne
into
and
xchg
insl
aad
jbe
fdivrs
push
stos
or
bnd
cmp
out
arpl
mov
lea
sub
xor
jnp
sti
es
mov
push
and
ja
or
mov
dec
popf
add
dec
pusha
fildll
popf
pop
jmp
icebp
cmpsb
inc
mov
cs
std
shll
aad
sub
dec
pcmpgtb
inc
xchg
sub
ss
jmp
rorl
and
out
mov
ds
scas
out
push
fcomps
inc
cmp
ret
push
mov
sub
insl
out
xor
inc
rcl
cli
push
test
pop
inc
jno
rolb
cwtl
scas
mov
out
mov
movsl
aad
imul
jns
jmp
lods
push
std
fmuls
jo
jno
jae
mov
stc
insb
je
cmp
mov
cli
or
jb
add
fwait
push
xor
lds
mov
ja
in
outsl
loope
cld
aas
and
jbe
in
push
sbb
out
ja
lret
or
sahf
pop
mov
movsb
push
jb
inc
xchg
mov
in
mov
test
sub
sti
out
lcall
movsb
int
or
orb
adc
lods
popa
outsl
push
les
cwtl
aas
fldl2e
cmp
push
cmp
sbb
pop
bound
adc
inc
stos
sub
loopne
sub
test
int
jl
push
mov
mov
shlb
test
ja
orl
stos
aas
xchg
iret
dec
lods
cmp
ss
enter
inc
push
or
inc
ja
push
jno
movsl
shlb
pop
jp
es
jmp
xchg
mov
sub
jae
mov
frstor
adc
mov
stos
push
negl
xchg
sub
jp
loope
and
into
jnp
les
ret
and
pusha
leave
adc
aas
mov
sti
nop
inc
add
mov
inc
mov
cs
imul
inc
repnz
iret
mov
inc
cwtl
inc
push
xchg
jl
dec
scas
addl
ret
cmp
stos
movsb
xor
pop
push
ds
dec
push
inc
pop
mov
mov
mov
mov
in
cmp
fiadds
aaa
push
xor
jmp
add
jbe
cwtl
shlb
xor
in
jmp
fisubrl
mov
sub
push
adc
cmp
es
adcl
push
rorb
iret
cwtl
adc
stos
and
mov
xchg
inc
cmpsl
mov
cmp
add
leave
mov
or
sahf
in
dec
or
popf
and
sub
dec
jecxz
shrl
xchg
jge
rcll
add
enter
in
or
iret
cmp
add
add
mov
push
addr16
adc
int
pushf
pop
pop
sbb
inc
xor
jl
mov
xor
and
mov
mov
and
sub
cmpsl
je
test
adc
movsl
jg
push
jo
cmp
dec
cmp
mov
js
scas
ja
sbb
cld
pop
xor
jne
pop
push
fwait
pushf
and
lods
adc
mov
and
retw
outsl
inc
and
out
or
mov
and
xor
mov
cld
dec
test
jmp
xchg
scas
fcmovnu
insb
mov
sbb
mov
sub
in
push
cmp
xchg
pop
pop
in
xor
jmp
ja
jge
and
aam
das
mov
in
push
push
adc
cmp
fwait
les
ret
mov
mov
fildll
mov
push
or
and
imul
xor
daa
push
pop
lock
jbe
and
aaa
out
inc
inc
pop
and
call
ljmp
loope
inc
mov
sbb
ds
pusha
sub
inc
push
cmpsl
xchg
lods
dec
shll
roll
enter
jae
scas
mov
push
cmp
pop
pop
and
das
out
dec
pop
mov
fcmovne
push
sub
insb
in
jbe
xchg
mov
int3
fnstenv
sub
mov
xor
addr16
xchg
movsl
outsb
xor
int
lret
pop
add
sti
enter
int
dec
pop
movsb
adc
leave
les
fdivl
mov
cmpl
push
xchg
or
xchg
xchg
mov
sub
and
outsb
xor
int
xchg
cmp
in
mov
pop
cmpsl
out
faddl
cmpb
sbb
sti
enter
jecxz
cmc
int
cmc
push
scas
adc
es
dec
ret
pop
xchg
push
fadd
fildll
mov
jp
sbb
mov
add
pop
jns
testb
push
mov
fwait
sbb
mov
or
movd
push
push
test
andb
inc
out
pop
aas
ds
xchg
cmp
ficoml
loop
or
pop
cmpsl
pop
aam
mov
das
sub
push
and
shr
aam
enter
lds
or
mov
hlt
cmp
lret
js
repz
sbb
push
push
lock
enter
fwait
stc
add
fs
out
shll
push
in
stc
mov
stos
cmpsb
xchg
pop
out
pusha
iret
and
mov
std
inc
mov
lcall
fs
mov
add
in
adc
push
insl
mov
jb
mov
cld
pop
pmullw
dec
andl
das
pop
ret
cmpsl
or
pop
cmp
ret
aam
dec
jecxz
push
jge
mov
sarl
mov
jae
lahf
mov
inc
sbb
stc
mov
fwait
cld
adc
mov
push
sub
push
movsbl
xor
paddd
decb
dec
test
dec
sub
pushf
dec
repnz
out
imul
inc
mov
jg
je
repnz
popf
hlt
inc
jecxz
movsl
ljmp
insb
jle
loope
xchg
addr16
mov
movsl
sub
idivl
pop
ret
cwtl
mov
jle
jl
leave
inc
roll
adc
jg
mov
xor
scas
in
mov
jbe
cmp
pushf
pop
stos
pop
mov
ret
lds
pop
popa
scas
sahf
jecxz
pop
jp
sub
jns
mov
jg
std
push
xchg
mov
add
lea
int3
repz
les
fcmovnb
sti
repz
or
cmc
out
lods
jae
cltd
and
daa
gs
pop
mov
pop
fbstp
dec
pop
jbe
aaa
jae
aas
ds
xchg
bound
loop
iret
pop
pop
sub
or
cmp
add
fcmovu
xchg
arpl
shlb
ds
mov
stos
call
pop
cs
cs
fbld
pusha
les
xchg
ret
mov
dec
cli
cmp
pop
cmp
out
mov
adc
testl
leave
inc
or
lcall
jge
ret
lea
mov
divl
dec
inc
pushf
mov
jo
imul
pop
add
fs
repz
dec
pop
jo
enter
mov
testl
mov
mov
aam
xchg
fwait
sti
xor
fcomi
stos
popa
mov
mov
divb
stc
and
xchg
mov
xor
clc
adc
jle
lea
push
jbe
sbb
scas
lds
mov
xor
push
pop
mov
scas
mov
ja
sbb
xor
sbb
pop
fs
scas
pop
in
pop
test
dec
inc
push
push
xor
xlat
ficoml
psrld
xor
stos
mov
jecxz
loop
ds
popa
pop
jge
daa
mov
nop
pop
js
mov
inc
mov
jb
hlt
dec
dec
pop
test
enter
rcl
outsl
lcall
pop
rcr
and
hlt
jb
ljmp
push
xlat
mov
insl
fisttpl
sbb
cmpsl
and
fistps
icebp
orb
dec
lcall
xchg
adc
or
add
lea
xchg
arpl
push
test
mov
xor
ljmp
lds
xor
pop
daa
loope
popa
rorb
cltd
daa
in
add
insb
lods
lahf
out
push
pop
pop
adc
lcall
add
pop
xchg
rorb
in
gs
dec
jnp
push
leave
sub
cwtl
data16
and
cs
pop
xchg
fldt
push
stos
inc
roll
xor
mov
cltd
fstl
cltd
add
and
pop
aas
fisubs
mov
insl
cmp
xchg
lods
daa
mov
ret
loopne
jnp
push
shll
pxor
nop
cwtl
std
add
shr
cmp
bound
dec
pop
cmp
in
popf
jmp
dec
cltd
push
and
repnz
stc
xchg
clc
xor
or
push
mov
jb
jmp
push
test
mov
daa
dec
leave
test
sbb
test
popa
clc
lods
xorb
js
rorl
test
leave
inc
out
in
add
or
sub
sahf
pop
dec
xlat
ja
adc
movsb
js
mov
dec
sub
fistps
jle
xchg
and
mov
or
cmpsl
int
pop
lds
cmp
jmp
ja
xchg
mov
xor
popa
in
jl
lahf
push
mov
idivl
sahf
mov
push
dec
into
cli
cld
imul
adc
pop
mul
clc
or
loop
sub
test
insb
dec
jg
loopne
sub
xchg
xor
xchg
fs
bound
sbbb
mov
mov
sbb
pop
std
mov
xchg
xor
js
call
adc
adc
push
mov
adc
iret
mov
aaa
mov
enter
or
or
sbb
add
call
bound
xlat
scas
jno
push
ret
xchg
mov
insl
ret
call
mov
jl
mov
xchg
mov
mov
or
and
inc
in
adc
ds
lods
in
cmp
leave
pop
imul
daa
inc
fstpl
jle
and
in
jmp
pop
inc
scas
ds
lods
xor
cmp
leave
dec
mov
sub
outsl
sbb
dec
ljmp
push
daa
mov
scas
in
mov
call
repnz
subl
fiadds
jb
mov
sar
jp
cmc
and
mov
mov
xor
sti
add
dec
test
cmpsl
push
dec
dec
js
sbb
sbb
fnstcw
fisttpl
sbb
mov
out
jb
mov
sbb
jecxz
dec
cmp
jle
cli
xchg
pop
mov
adcl
xchg
cltd
mov
inc
arpl
test
xchg
lret
std
mov
mov
cmpl
xchg
sarb
push
jbe
jp
rcrl
mov
xor
inc
jbe
movsb
push
fcmovne
mov
pop
dec
push
xchg
enter
sub
fadds
mov
aaa
xchg
xchg
icebp
mov
jmp
adc
int3
mov
push
sbb
sub
mov
mov
lods
pop
adc
adc
es
adc
sbb
add
and
lcall
popa
aad
or
lods
imul
mov
mov
sbb
cmc
lods
fistl
cmp
jne
inc
adc
cmp
push
xchg
les
sti
dec
popf
pop
jge
sub
jb
mov
fisttpl
clc
test
outsb
pop
mov
xlat
dec
fstps
push
fcompl
adc
mov
pusha
sub
or
lds
pop
push
mov
popf
mov
cmc
or
sub
out
jl
lods
xor
mov
les
sbb
and
cmp
mov
mov
sbb
in
cwtl
sti
push
ss
addl
sub
add
sahf
push
popa
lret
lock
cmc
jmp
jge
arpl
leave
cltd
repnz
aas
into
and
cmp
jns
hlt
dec
outsb
push
pop
mov
cmc
and
mov
sub
jge
pop
inc
xor
repz
push
inc
imul
cltd
leave
in
cmp
cs
jp
insb
popa
mov
fnsave
adc
movsl
fcmovnu
addr16
adc
fdivrs
sbb
mov
mov
jl
and
lcall
pop
rcr
loope
popa
sub
movsl
adc
imul
jl
lds
pop
cli
push
pop
aad
adc
clc
js
push
jne
adc
stos
push
out
scas
pop
aad
adc
pop
cmp
lock
jp
fldl
std
gs
adc
xor
clc
out
insb
bsf
mov
add
dec
shlb
mov
in
gs
xchg
cli
xor
xchg
shrl
xor
loopne
orl
pop
jle
mov
sbb
lds
cmp
andl
mov
dec
dec
pop
ret
jl
sub
shlb
insl
mov
bound
add
cmpsl
bound
jns
leave
imul
mov
inc
in
inc
cmp
inc
push
jns
jno
dec
jge
push
sbb
xchg
ret
mov
cmp
xchg
cmp
push
out
rclb
test
cmp
and
mov
sbb
pushl
xchg
push
incl
loope
stc
xor
cs
jnp
cld
or
mov
fadds
cmp
in
stos
pusha
adc
xor
xchg
jmp
cmpsb
scas
pop
mov
push
cmp
cltd
repz
shl
pushf
fimuls
jno
imul
inc
jecxz
add
or
pop
cwtl
mov
sbb
mov
xchg
or
mov
sahf
popf
mov
inc
aam
adc
jp
lahf
nop
pop
loopne
xor
lahf
mov
mov
jge
pop
adc
cmp
fdivs
and
in
pop
bound
cmpsb
hlt
dec
mov
fs
inc
fwait
or
mov
cs
in
add
sti
cmp
xor
lds
jecxz
xorl
jb
cld
rol
leave
daa
push
movsl
cmp
add
jae
imul
loope
jne
inc
mov
shl
mov
pop
movsl
test
inc
mov
push
pop
filds
stos
or
add
pop
in
je
stos
jecxz
xor
push
fsubrl
mov
inc
stc
pushf
xor
xorl
mov
ret
ficomps
leave
adc
push
sarb
insl
inc
testb
lea
cmpsl
aaa
fwait
and
add
xchg
cmp
dec
adc
imul
jg
jmp
stos
in
daa
pop
sub
sbb
ret
sub
dec
rorl
cmp
in
mov
xchg
push
test
adc
adc
test
lock
sahf
xor
push
add
inc
pop
adc
jnp
adc
jl
pop
dec
ret
flds
sbb
and
jmp
mov
mov
mov
shl
jns
inc
idiv
and
pop
hlt
mov
les
pop
out
push
mov
mov
jp
test
jmp
xchg
pop
inc
pop
mov
pop
cwtl
fdivrl
movsb
fs
repz
mov
cmpsb
cmp
jl
mov
xchg
cmp
fistl
xchg
sbb
sbb
call
or
pop
or
loop
xor
ret
mov
xor
mov
pop
xor
sbb
das
jno
test
out
cmp
lds
mov
xor
and
scas
cmp
bound
mov
fists
aas
or
add
add
lahf
xchg
in
mov
dec
push
xlat
bound
cmpsb
lcall
or
loop
insb
dec
fucomip
inc
cmc
xchg
xchg
stc
sbb
aad
das
sub
das
fwait
das
sub
or
pop
addr16
and
imul
fsubr
imul
cs
mov
enter
repz
mov
pushf
or
xor
cmp
cmp
movsl
xor
and
push
lock
jmp
lods
out
jmp
inc
cli
pop
push
in
jo
mov
xor
loopne
sti
mov
lea
xor
jb
clc
lret
inc
or
stc
enter
push
pop
push
and
and
inc
jb
mov
cmpsb
outsb
cli
addb
add
das
jmp
outsb
je
lock
adcb
in
lds
ret
sbb
pop
cwtl
fdivs
ja
pop
cmpsb
mov
push
jnp
sbb
addr16
jp
popa
cmp
fiaddl
push
jne
mov
sbb
scas
lea
mov
cltd
repnz
addr16
aam
sbb
mov
mov
xor
test
jmp
jno
inc
dec
scas
adc
pop
sbb
and
dec
mull
sbb
clc
in
ja
inc
jnp
test
and
out
mov
mov
cltd
stos
and
xchg
pop
bndldx
test
push
ficoms
aaa
mov
icebp
xor
imul
mov
es
mov
or
out
sahf
mov
jl
sbb
inc
fistpl
ret
out
es
fcoml
adc
rcrb
adc
pop
dec
stos
or
sbb
icebp
popa
out
imul
mov
mov
scas
fistpll
sbb
fwait
sub
sub
and
dec
jp
fs
out
push
jne
jmp
cmpsl
xlat
xchg
outsb
add
mov
nop
xchg
mov
push
pop
or
loopne
nop
cmc
jmp
mov
mov
and
out
xchg
loopne
mov
xchg
aaa
add
adc
scas
add
cs
push
jns
add
int
inc
das
mov
movsl
mov
and
shl
cltd
std
stos
mov
pop
ret
inc
stc
testl
and
dec
sbb
ljmp
stc
and
hlt
inc
mov
in
sub
add
adc
jecxz
dec
mov
imul
hlt
sbb
fmull
dec
ret
sbb
jbe
cmp
adc
add
in
jge
mov
test
stos
sub
adc
adc
ss
push
or
cmpsl
aaa
insl
pminub
fiadds
inc
popf
push
add
push
mov
xchg
cs
cmp
push
jns
shll
les
outsl
cwtl
inc
imul
cmpsl
les
or
cmp
test
ret
fld
test
int3
and
mov
pusha
cs
test
and
test
or
je
xchg
xor
in
cmp
inc
lea
fadd
test
sbb
shlb
std
lods
cli
cmp
lea
cmp
jns
fisubl
xchg
mov
pop
dec
jle
push
fisubrl
ja
rcrl
cmp
divl
add
arpl
dec
mov
popa
addb
and
inc
lcall
jl
in
stos
sbb
and
sahf
neg
dec
int
xchg
sbb
mov
xchg
mov
sarl
sbb
iret
cmpsl
push
or
sub
pushf
rol
mov
inc
cmp
cld
imul
xor
adc
jns
outsb
adc
pusha
bound
xor
dec
inc
insl
pushf
lock
mov
add
orb
rolb
push
insb
fs
adc
aam
or
cmpl
daa
pop
xchg
mov
dec
or
jns
decl
dec
push
imulb
out
adc
jl
ss
pop
mov
jle
cmp
ljmp
pop
shrl
inc
stos
inc
nop
sbb
mov
xchg
cli
sub
repz
or
gs
clc
mov
mov
ljmp
adc
adc
movsb
rcrb
notb
das
lcall
dec
mov
jns
incl
movsl
add
aas
out
add
lret
mov
cmp
jb
addb
xchg
jno
cmp
inc
test
cli
mov
or
inc
subb
and
jg
xor
push
adc
jbe
mov
addb
jnp
gs
shll
mov
cmp
xor
jbe
mulb
popf
jo
inc
sub
xor
pop
sub
or
pop
xor
ja
into
out
mov
int
in
xchg
cmp
popf
mov
and
imul
mov
rcll
mov
aam
sub
xor
dec
in
sbb
ss
stos
adc
ret
test
jmp
negl
jbe
ret
jecxz
xor
mov
inc
mov
mov
ret
xor
push
mov
mov
or
sbb
pop
and
lods
adcl
mov
sub
ret
aas
xchg
and
mov
xor
push
inc
jge
mov
leave
inc
pop
lods
sbb
loop
cmp
push
jb
and
insw
mov
cmp
xchg
lret
mov
dec
adc
xchg
repnz
jns
inc
push
pop
outsb
jmp
les
mov
fbstp
cs
mov
ret
or
sahf
xchg
lea
mov
sub
pop
xchg
pop
mov
mov
push
into
stc
mov
or
lea
hlt
sub
inc
cld
nop
mov
mov
push
and
add
shlb
pop
xor
iret
in
pop
and
mov
mov
jno
push
fcmove
outsb
insl
and
push
dec
fmul
inc
push
adc
pop
roll
jecxz
cmp
out
out
lcall
arpl
mov
test
pusha
gs
mov
mov
xchg
dec
jle
sub
inc
rolb
nop
pop
test
xlat
adc
jno
pushf
fwait
push
pop
loope
sahf
je
mov
cmc
cwtl
sub
cmpsb
rorb
movsb
repnz
xchg
cmp
arpl
sbb
jo
dec
push
lret
repnz
mov
jo
orb
push
arpl
aad
ret
sub
jmp
sub
and
jno
out
in
rorb
cmpb
and
mov
out
sbbb
xor
add
mov
pop
scas
jb
push
xchg
leave
inc
sbb
pop
jl
into
pop
add
lods
sub
stc
imul
xlat
xchg
jne
push
movsb
push
scas
mov
ja
arpl
ret
divl
fisttpl
push
out
cmpsb
mov
out
dec
jg
inc
push
inc
xchg
mov
mov
xchg
sbb
pop
ljmp
push
fldl
push
out
dec
maskmovq
sbbb
pop
push
xchg
jns
cmpsl
add
jge
sub
bound
push
cli
in
and
adc
mov
and
adc
add
popa
push
fildll
cmpsb
int3
gs
testl
dec
adc
jg
inc
inc
test
loope
shlb
add
and
out
pop
mov
popf
dec
xchg
xor
mov
adcb
mov
xchg
mov
mov
aas
push
out
scas
push
gs
dec
cmp
pop
movb
mov
jbe
mov
int
fldenv
mov
cwtl
aas
inc
add
lahf
rcrb
xchg
hlt
cmp
sbb
and
lods
in
sub
repnz
cmp
enter
loope
cld
popa
mov
adc
arpl
fst
or
push
bswap
icebp
and
loop
shrb
xchg
jmp
loop
hlt
xchg
stos
idivb
pop
int3
scas
ss
inc
sub
bound
in
lret
xor
xlat
dec
inc
loopne
dec
mov
jp
adc
cmp
xchg
out
outsb
cmp
sub
xor
jg
lods
xor
cmpsl
lcall
and
pcmpeqb
cmp
out
repnz
mov
ficomps
movsb
andb
leave
push
xchg
cmpl
adc
add
movsb
cltd
mov
test
pop
pop
sarb
lcall
jae
or
mov
fnsave
pop
cmc
aas
dec
lret
jecxz
push
sbb
pop
inc
and
cmp
jge
lods
popf
testb
ret
push
fnstcw
xorl
iret
adc
les
inc
fiadds
push
inc
cwtl
insb
testb
in
push
dec
mov
add
es
aad
leave
xor
inc
int
sub
in
sub
add
push
add
or
or
dec
mov
adc
test
jl
loope
outsl
adc
xchg
ljmp
jbe
jge
jbe
push
mov
adc
into
push
cs
xchg
xchg
rcl
je
mov
fimull
mov
push
push
scas
mov
shrl
add
popa
push
push
pop
movsb
pop
inc
jmp
adc
add
inc
cmp
push
out
cmp
scas
stc
sub
in
and
mov
cli
aam
jp
cmp
test
dec
push
and
dec
jmp
dec
mov
mov
cmp
es
dec
popf
imul
sub
pop
pop
jecxz
cmp
pop
aad
in
xchg
adc
pusha
mov
jg
nop
cld
or
jno
in
or
rcl
xor
xor
xor
pop
ret
xchg
notb
add
jmp
mov
add
arpl
cmpsl
into
je
push
jns
xor
cli
xchg
dec
pop
inc
sbb
mov
mov
add
lahf
idivl
nop
add
mov
pop
dec
and
cmpsl
test
cmp
adc
test
and
adc
mov
cltd
in
or
push
clc
idiv
icebp
dec
push
lods
adc
arpl
or
insb
adc
pop
out
lods
arpl
pop
xor
mov
sub
fsubs
push
stc
test
rcll
push
js
test
dec
insb
xor
insb
cltd
add
cmp
mov
imul
push
jno
lret
jp
mov
cmp
in
stos
lods
lret
cli
and
std
xlat
cld
in
add
mov
stos
call
rclb
pusha
scas
add
rcr
pop
lods
mov
jecxz
adc
mov
cltd
ja
rcr
sub
movsl
push
outsl
gs
push
add
jge
repz
jbe
dec
das
sub
idivb
nop
xorl
shlb
sbb
test
imul
dec
cmp
imul
cld
push
fistpll
mov
stc
inc
fs
in
xlat
cmp
insl
pop
jecxz
out
rcll
sbb
iret
jle
push
int3
mov
push
mov
pop
inc
pop
flds
lods
sbb
dec
stc
jae
and
testb
icebp
filds
insb
sbb
pusha
aam
adc
sbb
leave
nop
sbb
ret
xor
jnp
jecxz
lcall
rol
cmp
push
inc
fnstsw
paddusw
scas
and
jg
lret
mov
xchg
pop
fwait
mov
ljmp
mov
pop
push
cmp
mov
imul
xlat
je
xor
repz
das
push
lret
cwtl
lcall
push
stc
hlt
mov
mov
mov
rclb
test
pop
pop
mov
fs
jmp
decb
pop
nop
jns
test
lock
mov
inc
or
std
jle
and
inc
xchg
call
movsb
insb
inc
mov
inc
dec
lret
inc
add
dec
xchg
xchg
sub
mov
je
pop
popa
cmpsb
rcll
add
out
out
cmpsl
aaa
dec
stc
in
inc
push
scas
or
lds
xor
imul
mov
lds
mov
pop
in
in
xchg
pop
xlat
data16
fbld
push
in
or
xor
sbb
inc
clc
jne
xor
jne
aad
lret
popa
dec
pop
add
jecxz
push
inc
shrb
nop
mov
sbb
ret
jle
dec
xor
pop
xor
push
dec
in
pop
mov
mov
mov
sub
cmpsl
daa
xchg
add
xchg
mov
push
dec
mov
icebp
jmp
lea
test
or
push
xor
cmp
jge
push
dec
out
gs
int3
idivb
in
pop
cmp
xchg
push
or
push
pop
lea
fimuls
sub
icebp
das
out
mov
sbb
loopne
pop
cltd
push
addl
pop
sub
cmpsb
mov
aas
addb
orb
loope
shr
xor
pop
ret
mov
in
bound
test
js
lcall
nop
imul
cmp
mov
mov
mov
xchg
xchg
out
push
pop
pop
jl
enter
iret
ss
inc
xchg
lret
lcall
mov
fs
mov
mov
mov
test
lods
pop
mov
or
test
xchg
ficompl
add
sub
insb
fs
xor
sub
cs
mov
xchg
xchg
lock
int3
mov
lock
movsb
push
lcall
jo
jnp
mov
xor
dec
inc
enter
out
outsl
imul
sub
push
cmp
xor
or
xor
xor
jp
jge
rcll
add
daa
adc
repz
orl
or
cmp
mov
sarb
lods
add
cli
mov
ss
mov
jb
adc
mov
cld
stc
cmp
mov
fcoml
fwait
aaa
push
cmp
addr16
fnsave
popf
idivl
xchg
outsb
in
arpl
pop
cmp
mov
or
push
ret
ret
clc
lret
mov
shrb
stos
lea
lret
push
mov
dec
test
add
sahf
push
insl
mov
jl
inc
jmp
push
dec
jge,pt
xor
scas
xlat
mov
outsl
jl
lret
adc
lds
icebp
stos
mov
fildl
mov
out
ja
mov
bound
lock
cmp
push
fs
mov
nop
sbbb
dec
mov
cltd
imul
leave
lret
scas
es
in
fmul
pusha
inc
push
lahf
sub
add
or
sbb
les
jb,pn
int3
cmpsb
ss
add
or
adc
jecxz
enter
or
test
sbb
push
pusha
lret
call
cmpl
push
sbb
ljmp
sbb
js
jp
iret
inc
enter
sbb
imul
dec
xchg
jle
ret
movsl
and
lods
shrb
aas
xor
std
pop
iret
jae
aaa
in
add
cmp
std
out
ret
pop
jno
cwtl
push
lock
loope
and
xchg
outsb
and
xor
inc
jo
lods
stos
inc
sbb
pushf
cld
test
iret
dec
sbb
or
loope
shrb
ds
pop
std
jmp
lods
sahf
stos
into
sbb
adc
push
inc
xchg
xlat
and
push
jbe
xchg
iret
lods
xchg
push
xchg
mov
adc
sub
lods
mov
lret
inc
fmull
jmp
leave
aam
add
out
dec
gs
adc
pop
imul
xchg
dec
enter
jg
insl
push
adc
mov
aas
inc
dec
mov
dec
pop
or
lds
push
test
xchg
inc
out
addl
adc
cmp
sbb
fldcw
test
dec
adc
xchg
add
xchg
cmp
cmp
call
sbb
test
jle
dec
sbb
fbld
jmp
jl
int3
mov
cmp
lret
and
stos
pusha
stc
ficomps
and
pop
outsl
inc
jle
push
lods
dec
iret
pusha
lds
fiadds
daa
xor
jmp
nop
ret
cmp
fsubrp
xlat
sub
std
in
loopne
scas
pop
cs
push
mov
mov
cmc
es
lods
aaa
or
ret
fisttpll
loopne
jbe
stos
push
inc
inc
fidivl
push
sbb
int3
lret
inc
sub
ret
cmc
sub
mov
imul
or
cmc
shlb
mov
aaa
jg
mov
jnp
jecxz,pt
gs
jecxz
add
add
and
pop
inc
adc
sub
stc
dec
ja
and
imul
mov
insl
dec
rol
dec
mov
test
push
lcall
xchg
sbb
mov
sub
pop
into
cmpsb
pop
out
fadds
fs
sub
cmp
push
lods
cmc
into
adc
xor
adc
cs
adc
jns
lahf
add
lods
insb
sub
inc
push
add
shrb
test
das
lds
push
shr
js
pushf
daa
sbb
sub
push
cld
ret
xchg
sbb
fnsave
in
sbb
mov
fcmovb
xor
out
fstl
test
xchg
int
int
bound
xlat
insl
push
xchg
mov
jno
out
hlt
or
inc
mov
imul
pop
in
add
mov
jl
out
mov
es
ret
add
adc
inc
popf
loope
inc
sarl
xchg
into
jno
xchg
xlat
jge
adc
cmc
pop
jge
sub
xor
sub
jb
push
mov
push
cs
mov
test
bound
aaa
mov
sub
fdivl
outsl
popa
sbb
add
xchg
cs
xlat
mov
lcall
push
adc
out
dec
sbb
and
mov
push
in
pop
sti
push
adc
out
mov
jl
pop
xchg
negb
aam
bound
jl
outsb
cmpsl
rcrb
xchg
xchg
iret
cmp
mov
outsb
dec
cmp
stos
cmp
cltd
xchg
arpl
mov
cmc
addr16
scas
sub
xor
jnp
jo
lods
sbb
xchg
pop
std
clc
loop
data16
sbb
pop
arpl
aas
cmp
dec
mov
adc
sbb
cli
out
xlat
mov
mov
push
scas
dec
ljmp
xor
rcll
sti
cmp
pushf
cs
into
in
sahf
cmp
hlt
jb
clc
inc
or
cmpsl
lret
sahf
mov
orl
test
sbb
xor
xadd
push
or
push
adc
and
inc
les
sbb
sub
jae
adc
jb
cmp
mov
sub
push
in
mov
fisubs
adc
dec
dec
jnp
lea
pop
ds
pushf
arpl
mov
insl
int
xor
shll
xor
or
rolb
in
popl
je
lock
out
movsb
pop
popa
dec
cmp
and
sbbb
andl
and
cmp
mov
inc
rclb
cmp
pop
int
scas
mov
jmp
iret
xor
jo
dec
test
jl
jns
mov
sbb
jge
repz
dec
cmp
adc
jp
push
dec
in
push
xor
sbb
dec
push
xchg
dec
jae
pop
cmp
orl
test
pushf
aad
adc
cmc
push
cltd
dec
sub
jno
loop
lcall
push
add
lahf
iret
inc
and
loopne
pusha
mov
frstor
pop
mov
pop
adc
xor
mov
lret
jnp
pop
mov
or
imul
test
lods
test
jne
push
sub
jecxz
mov
insl
test
add
lock
jb
js
clc
iret
imull
mov
sub
xor
cs
jp
mov
jns
pop
ret
out
jb
or
std
inc
sti
lea
xchg
ret
loop
cli
mov
adc
rcr
inc
adc
lock
adc
sbb
push
repz
sti
in
rorl
jo
sub
push
lock
fmulp
dec
or
das
es
das
jns
lcall
jae
pop
out
gs
dec
xor
push
xchg
push
mov
cmc
cmp
dec
imul
sbb
sub
adcl
sub
xor
test
sbb
push
leave
into
scas
dec
jle
stos
adc
xor
in
fimuls
js
std
xor
mov
shrb
and
xor
fcmovb
shll
push
pop
ja
stos
stos
jp
rcrl
lret
aam
pop
nop
lock
inc
inc
cwtl
lretw
ret
sbb
fsubs
jge
fadd
stc
ds
fdivs
sbb
mov
push
lret
hlt
and
add
call
mov
ret
outsb
push
pop
pop
data16
movsb
fdivs
div
adc
push
or
roll
pop
into
mov
xchg
pop
leave
cmc
jecxz
in
or
outsl
adc
jg
dec
add
mov
lret
leave
rcll
mov
jbe
loope
pop
enter
lock
insb
inc
xor
jmp
out
xchg
mov
xchg
ret
outsl
repz
lods
cmp
fnstenv
mov
mov
mov
adc
fstl
das
shlb
repnz
cmp
std
ss
in
lods
jnp
cli
lret
fwait
sbb
add
psrlw
fadds
and
aas
xlat
or
cmp
push
xor
in
rorb
sub
ss
sub
cmp
and
fadds
mov
jnp
xlat
inc
mov
ss
mov
mov
inc
pop
xlat
movsl
scas
pop
das
insl
loopne
pushf
scas
cmpsb
hlt
jge
or
adc
lcall
insb
fmul
xchg
imul
pop
pop
stos
lods
jmp
push
mov
mov
les
iret
fsubrl
pop
xor
repnz
push
inc
or
jecxz
fildl
mov
hlt
inc
insl
popf
add
mov
or
js
les
jb
xchg
sti
sub
pushf
sbb
mov
movsb
iret
insl
dec
dec
mov
adc
lret
mov
and
cmc
mov
lret
mov
jg
lahf
mov
dec
cwtl
and
mov
sub
rcrb
and
jecxz
shrb
loope
adc
xlat
nop
jmp
cmp
sti
inc
pusha
add
jbe
ss
dec
in
rol
hlt
loope
lea
stos
add
push
roll
and
fcomps
fcom
loope
mov
sub
jmp
add
inc
aaa
push
lea
addr16
lods
movsl
call
ret
data16
or
cwtl
mov
in
pop
test
insb
cmp
scas
test
xchg
cli
ret
js
jmp
sub
arpl
movb
arpl
or
cmpl
addr16
mov
dec
inc
ljmp
sbb
das
xor
lea
fidivrs
lods
popf
fs
lds
mov
jno
shrb
push
pushf
sbb
into
leave
dec
jl
aam
xor
jns
mov
fcmovbe
popf
iret
js
xchg
aam
scas
adc
std
pop
in
cmp
idiv
sahf
jb
fcmovnbe
dec
or
push
adc
mov
adc
loopne
rolb
pop
push
loopne
push
enter
mov
adc
mov
mov
mov
dec
sub
mov
sub
hlt
jecxz
call
add
mov
xchg
mov
out
shrl
mov
sub
aas
and
add
pop
cmp
push
jle
pop
outsb
lret
dec
fsts
insb
dec
cmpsb
jne
mov
adc
sti
fstps
push
xchg
mov
jge
push
cmpsl
inc
jg
mov
ss
js
mov
je
lock
jae
imul
or
mov
nop
fldl
rorl
gs
loopne
loope
inc
pop
lahf
mov
or
mov
cli
outsb
movsb
les
pop
dec
or
push
xchg
mov
pop
xor
jmp
jecxz
aam
jge
orl
fs
loop
subb
popa
pushf
jnp,pn
pop
xchg
pop
mov
inc
sbb
jne
lcall
popf
std
test
pmulhw
xchg
dec
and
adc
mov
adc
push
outsb
sti
cmpsl
sbbb
dec
loope
add
mov
sub
pop
mov
xor
stos
sbb
or
xchg
cmp
ds
inc
cmp
mov
cltd
pop
or
adc
or
stos
sahf
ret
arpl
stos
insl
in
ja
mov
mov
dec
aam
enter
lret
cld
cmpsb
pop
sar
sub
mov
pop
and
out
jl
inc
aaa
divb
sub
xchg
xchg
ficomps
fcomps
shrl
lret
fistpl
mov
out
mov
jecxz
sub
cmp
cli
icebp
adc
ja
cmp
xor
adc
jmp
ss
or
and
mov
fwait
pop
pop
repnz
dec
mov
fwait
pop
jp
sub
cmp
cmp
addb
and
ss
sbb
mov
jecxz
jge
stos
push
xor
ljmp
xor
push
andb
pop
pop
lods
fdivl
in
lock
clc
decl
nop
jle
mov
test
data16
mov
xchg
pop
hlt
push
sub
push
lds
pop
dec
xchg
xchg
scas
push
xchg
ds
or
xor
xchg
test
dec
mov
adc
js
and
jb
in
xor
ljmp
lods
mov
leave
and
js
popa
mov
mov
pop
pop
pushf
pop
cmp
ja
lahf
mov
pop
mov
jno
out
push
std
mov
das
popa
push
jno
loop
out
mov
icebp
lcall
add
cltd
idivb
add
pop
inc
cmp
loop
push
jbe
mov
enter
or
fiadds
xor
or
push
cmp
xchg
cltd
xor
mov
andb
jecxz
in
cmpsl
sub
mov
in
mov
pop
nop
dec
stos
sbb
jle
mov
pop
jnp
fs
ss
nop
mov
aad
mov
mov
xchg
cmc
clc
sbb
or
clc
xchg
xchg
pop
aaa
cmp
inc
rclb
mov
xchg
dec
mov
pop
outsb
push
push
popf
fdivrp
inc
add
and
mov
cli
pop
mov
cld
and
mov
int3
frstor
fwait
in
pop
std
enter
dec
jg
loop
add
jl
test
in
outsb
dec
jmp
in
and
pop
or
jno
aad
in
or
sbb
xor
push
repnz
cld
add
fsubrs
bound
and
jbe
ret
xchg
sbb
lcall
pop
roll
out
mov
push
popf
mov
enter
enter
jae
addr16
dec
push
cltd
lahf
pushf
push
dec
push
test
cwtl
push
sbb
push
cmp
inc
test
cmpsb
loopne
pop
nop
dec
jl
jb
movsl
fucom
jnp
inc
in
xchg
push
mov
inc
jns
js
add
inc
add
cld
sti
inc
jb
jg
outsl
lea
cmp
les
xlat
aas
ret
xlat
add
push
fisubrs
stos
push
out
movsb
sub
enter
aad
sbb
pop
loopne
shrb
loope
xor
inc
data16
pop
mov
fldt
in
inc
mulb
xor
sahf
lods
push
aas
rolb
call
inc
cmp
push
cmp
adc
loope
aas
mov
data16
pop
nop
jg
jl
notl
mov
andl
or
ret
cld
imul
inc
sub
loop
inc
lods
clc
sub
fisttpll
mov
and
pusha
cmp
xabort
out
push
and
add
jo
lahf
fildl
or
sub
addb
or
push
and
call
cmp
bound
xchg
sub
sub
ret
pop
mov
rorb
in
mov
xor
aad
sub
int
fisubl
and
addb
jne
es
or
xchg
jnp
in
in
jecxz
mov
int
stos
clc
call
mov
rclb
cmc
push
nop
pop
in
lret
in
test
dec
or
loope
loop
scas
outsb
xchg
push
stc
nop
fwait
mov
mov
push
repnz
push
push
mov
adc
iret
inc
inc
int
subb
lcall
imul
mov
lods
sti
lret
mov
add
or
inc
mov
sbb
cld
dec
push
bound
mov
orb
lret
adcb
and
jge
add
mov
test
repnz
xor
dec
mov
mov
xlat
inc
std
std
xchg
das
lahf
ja
bound
pop
xchg
adc
adc
xchg
das
cmpsb
jmp
mov
pop
mov
jns
dec
imul
popa
aaa
inc
das
pop
mov
push
int3
pop
xchg
dec
xchg
insl
dec
push
xchg
aad
xor
rcpps
out
sbb
andl
mov
mov
ret
scas
inc
xor
mov
shr
rcr
jg
bound
mov
enter
pop
imul
or
rcll
push
iret
adc
and
or
stc
push
lahf
sbb
inc
popf
mov
jle
adc
and
shlb
idivl
xor
cli
lcall
imul
jmp
fiaddl
fdivs
sti
jbe
sahf
scas
pop
inc
mov
ja
les
outsb
fisttpl
add
xchg
sbb
or
test
cmpsb
push
faddp
ret
rolb
rcll
add
lahf
cmp
push
outsl
xor
call
pop
and
cld
sahf
inc
aaa
and
mov
lods
and
and
leave
and
xor
cld
jno
mov
pop
and
push
rorb
dec
xor
popf
out
mov
adc
popa
sahf
xor
idivb
or
cld
lcall
mov
push
adc
fsub
xchg
pop
xchg
and
inc
js
in
out
push
cmpsb
nop
dec
xchg
push
mov
mov
jno
or
loop
int3
icebp
inc
das
insb
pop
pop
stos
dec
aam
sahf
mov
leave
mov
mov
ds
pop
cmc
mov
mov
sub
mov
mov
and
lahf
xor
dec
fwait
mov
xor
out
or
adc
push
cwtl
cltd
pop
aaa
pop
test
inc
jae
pop
nop
cmc
sbb
mov
xchg
sub
in
mov
xor
shl
mov
out
sub
pop
push
and
dec
xchg
push
ret
mov
push
pop
jne
int
sbb
daa
jbe
cmp
je
scas
hlt
cld
enter
lock
sub
dec
cmpb
mov
insb
sub
sahf
sbb
imul
clc
ljmp
pop
aaa
jnp
loope
jae
mov
fs
and
and
cltd
sub
cwtl
push
in
xor
xlat
and
mov
pop
mov
adc
push
adc
jns
jne
push
jmp
jmp
icebp
push
sub
jg
fsubr
scas
add
mov
inc
jle
out
push
mov
into
cmp
hlt
aas
push
leave
int
lret
or
pop
cmp
ret
ret
xchg
cwtl
fs
nop
push
jecxz
pop
insb
lods
sti
sbb
xchg
jle
fnstenv
int
rcrb
push
mov
fisubs
out
pop
push
sub
sahf
sub
cmp
mov
jmp
aaa
into
inc
mov
xchg
mov
and
in
cmp
inc
stc
insb
xor
std
adc
jo
mov
fs
cmc
xorb
push
adc
fildll
clc
clc
mov
loop
push
iret
mov
daa
pop
loop
sub
xor
pop
and
shlb
push
addr16
jno
jbe
jae
push
outsl
pop
xchg
cmp
or
push
cwtl
ret
cmp
daa
outsb
ja
lock
mov
enter
mov
push
jle
and
mov
popa
push
mov
ret
xchg
jo
pop
shld
or
lret
sti
adc
outsb
xchg
pop
cld
es
sub
shr
jnp
sbb
mov
add
inc
inc
xchg
adc
mov
add
sbb
jl
popf
cwtl
sbb
xor
add
mov
inc
movsb
sbb
jnp
rclb
push
enter
lods
adc
lea
scas
aas
mov
int
and
mov
insb
dec
fnstcw
xor
jae
aad
outsl
push
jnp
mov
push
out
mov
cmp
pop
ja
and
pop
sub
push
rcll
push
mov
sub
loopne
jb
mov
cltd
push
cmp
or
push
cmp
push
sti
xchg
inc
gs
or
and
data16
stos
sub
into
mov
inc
ljmp
xor
xchg
push
mov
or
dec
rclb
test
inc
insl
js
mov
imul
pop
stc
add
in
gs
int3
pop
push
pop
rclb
pop
jo
or
xor
xchg
flds
push
imul
cld
movsb
add
xor
lods
or
fstl
jne
mov
and
xchg
sbb
fnclex
popa
mov
sbb
mov
and
decl
arpl
mov
inc
sarl
push
stc
sbb
fildll
mov
jno
outsb
test
fidivs
in
fmuls
adc
mov
inc
sub
jle
cmp
test
pop
inc
addr16
stc
push
push
mov
insb
daa
mov
test
in
xor
out
js
cmp
push
mov
cli
faddl
outsl
jb
lods
movsb
pop
arpl
inc
or
mov
mov
xor
in
push
lahf
mov
jmp
mov
loope
lcall
xchg
int
repz
cltd
jae
cmp
scas
cld
das
push
push
in
jns
ljmp
frstor
test
fcomps
sbb
nop
xchg
inc
xor
ja
sub
add
xchg
test
and
imul
mov
xor
xor
clc
mov
scas
fwait
push
sti
nop
add
stos
outsb
and
dec
addr16
cmp
cs
popf
jne
daa
adc
pop
shr
and
test
shlb
gs
jb
inc
xchg
sub
repz
or
fwait
out
das
ss
icebp
or
psubq
push
jge
rcrl
scas
scas
mov
in
sbbb
loop
aaa
fucomip
pop
mov
push
insl
adc
jne
pop
mov
inc
inc
and
lds
dec
daa
mov
mov
xor
cmp
loope
add
push
out
dec
imul
add
inc
inc
cmp
pop
push
aam
mov
mov
dec
in
sti
mov
sub
das
mov
iret
aam
jmp
fisubl
clc
repz
mov
out
push
push
pop
call
test
pop
data16
insl
cmp
cmp
add
icebp
xor
lret
aaa
inc
lds
pushf
imul
add
sub
data16
imul
xor
bound
xor
mov
loope
pop
or
adc
filds
jne
xlat
push
add
cmp
shll
rcl
ljmp
sub
inc
mov
js
js
or
lret
lock
xor
notl
add
jl
std
aam
push
xor
dec
in
mov
test
enter
push
insl
fstpl
pop
pop
mov
popa
addr16
cwtl
cli
ret
fmul
xor
test
xchg
hlt
add
outsl
lods
jb
shlb
stos
pop
roll
cs
sti
loope
fwait
in
mov
jp
sub
shl
mov
lods
cli
jb
aaa
pop
pushf
mov
adc
hlt
xor
push
loop
sub
mov
negb
fsubrl
cmp
inc
add
mov
xor
jl
test
mov
movsl
dec
mov
inc
jb
shll
xchg
jg
mov
cmp
push
lock
push
addr16
imul
das
xor
inc
mov
scas
xor
mov
fstpt
mov
dec
fsubrs
loop
aad
bound
inc
sub
cmpsl
mov
mov
hlt
das
shrl
out
pop
aaa
lds
mov
mov
xor
dec
push
pop
mov
mov
inc
insb
ljmp
lods
xchg
sub
das
cs
aam
xor
and
push
ret
cmpsb
push
lods
test
dec
lods
test
or
ss
xchg
jl
sbb
inc
out
clc
xchg
fdivl
outsb
insl
mov
inc
push
xlat
in
push
mov
stc
sti
ss
lcall
icebp
push
test
mov
fdivrp
jg
mov
fldl
xchg
mov
shrb
data16
mov
sbb
lock
data16
jno
aam
das
add
cmpsb
or
scas
ds
mov
out
push
mov
cmp
adc
jbe
jmp
add
es
nop
push
sbb
lods
sbb
out
pushf
scas
movsl
xchg
push
jo
cmp
test
push
push
and
and
fld
sbb
out
inc
adc
insl
push
mov
mov
scas
jmp
aaa
movsl
adc
pop
bound
icebp
or
push
add
add
jge
sbb
cmp
cmpl
test
sub
jp
lcall
push
push
lock
lahf
adcl
pop
pop
or
scas
nop
and
lret
push
lret
cli
aam
lcall
adc
mov
jp
push
inc
and
popf
rolb
or
mov
sbb
scas
pusha
into
jbe
add
inc
loope
push
push
int3
testb
xchg
jp
and
test
pop
gs
sar
xchg
xchg
mov
repz
dec
mov
add
mov
fdiv
inc
fildll
adc
mov
clc
dec
push
xchg
loop
nop
into
xchg
fwait
pop
imulb
cmc
lock
push
icebp
pop
cld
scas
xchg
sbb
cmp
dec
jb
ret
lret
sbb
fwait
jo
movsl
jbe
ds
pop
cmp
fbld
inc
push
loop
xchg
lret
add
out
pop
in
jnp
sbb
dec
xor
xor
fwait
data16
in
fsubs
sbb
repnz
and
loope
xor
sbb
mov
xor
and
jmp
push
sub
rcll
mov
das
push
xor
sbb
sbb
es
js
cld
addr16
jmp
jg
mov
xor
cmpsl
lock
add
shl
icebp
es
clc
and
jae
call
fisttps
in
fnsave
test
push
leave
adc
jge
push
or
cmp
out
jno
dec
or
sbb
sarb
jl
fnsave
loop
push
pop
push
leave
adc
lds
dec
fucomi
ret
jp
icebp
push
push
push
js
call
mov
mov
pop
jae
sub
cmpsb
fidivrs
rcr
inc
jnp
mov
iret
xchg
mov
lret
jg
mov
jg
out
or
in
mov
fnsave
mov
pop
cmp
enter
negl
or
stc
fisubrl
arpl
mov
jl
mov
int3
pop
mov
add
adc
test
rcrb
fs
jl
fstpt
test
insl
pop
outsl
pop
cmp
xchg
dec
adc
fiadds
outsb
imul
pop
mov
or
imul
bound
dec
imul
cld
clc
adc
addr16
adc
lahf
fsubrs
shrl
rol
test
add
out
repnz
lock
out
add
in
lds
add
pop
test
mov
lock
imul
clc
fdivrl
lock
push
das
add
outsl
jp
je
push
pop
lock
stos
movsl
fcoms
insb
dec
pop
ljmp
pop
jb
arpl
inc
sub
mov
enter
sub
sbb
mov
push
mov
push
imul
xor
sub
push
pop
push
and
xchg
rorl
adc
push
sbb
pop
jmp
push
jmp
mov
inc
fcoml
jns
mov
sti
loop
xor
and
cmpsl
dec
push
movsb
sti
mov
push
cmpsb
sbbb
push
add
sarl
cli
add
js
pop
fmul
stc
inc
adc
xor
aam
lea
sub
jns
add
fdivl
test
mov
jno,pt
sub
inc
sub
and
pop
mov
xchg
repz
aaa
adc
pusha
shll
je
roll
push
push
fbstp
jb
pop
lods
and
add
outsb
pop
mov
inc
xchg
and
cs
aas
loope
mov
or
mov
and
or
test
das
insb
xchg
xchg
shrl
add
jp
in
xor
adcl
or
popa
aad
push
jne
dec
adc
in
sbb
adc
xor
jo
ja
jg
lret
dec
movsl
cmp
imulb
lcall
fiadds
push
dec
cwtl
mov
insb
lahf
fstl
sub
je
sbb
pop
or
pop
test
push
sbb
lea
or
mov
pop
inc
add
aaa
inc
aam
xchg
adc
hlt
sbb
and
sbb
addr16
xor
adc
jl
push
inc
js
leave
mov
push
dec
lea
mov
mov
test
and
xchg
lret
test
dec
sub
mov
bound
inc
adc
cmc
clc
pop
out
push
daa
xchg
or
movsb
and
les
test
mov
repnz
adc
out
or
sbb
mov
inc
add
gs
push
inc
rcrb
mov
pop
in
mov
jp
rorb
lea
adc
shl
mov
popf
pop
xchg
shlb
jae
scas
jg
outsl
aam
mov
nop
loop
pop
mov
nop
fwait
mov
fmuls
loop
mov
mov
mov
sbb
xor
outsb
cmpsl
push
jmp
cltd
in
mov
mov
pop
push
and
js
cmp
and
mov
mov
je
jge
in
jne
jbe
fisttpl
sbb
sbb
push
xor
pop
mov
mov
iret
push
dec
aad
dec
push
and
adcb
js
mov
ret
out
sti
push
stc
sbb
and
hlt
das
and
std
int
mov
hlt
lahf
and
mov
adc
sub
rcll
outsb
enter
push
imul
test
xchg
fincstp
and
leave
sub
popa
pop
or
stos
pop
push
mov
push
jl
ret
mov
out
adc
push
xchg
pop
gs
ja
imul
roll
push
inc
mov
daa
nop
call
mov
rcr
xor
aas
cmc
mov
aam
scas
pop
pop
mov
popa
jle
inc
fstl
xor
lcall
mov
popf
cli
sbb
xchg
fsubrs
call
fisubl
sub
cmpsb
or
pop
daa
js
and
fcmovnbe
pushf
sub
and
fistps
std
or
cmp
mov
lret
add
adc
out
rorl
clc
xchg
mov
jg
orb
jge
push
stos
in
out
or
int3
push
movsb
xchg
fcmovu
das
push
out
push
into
mov
dec
and
std
xor
cs
mov
shlb
sbb
jo
je
call
or
les
fildll
or
jbe
mov
clc
cs
aam
fldcw
xor
dec
mov
jl
pop
lahf
jns
mov
fisubrs
ljmp
sbb
rcl
and
js
mov
stc
pop
fidivrs
sbb
clc
cmp
pop
imul
add
stos
aam
popf
imul
add
mov
rol
jo
cltd
in
pop
mov
test
push
sbb
sbb
jo
subb
js
hlt
push
push
call
and
or
mov
insl
out
xor
ficoms
add
push
addr16
insl
in
mov
aaa
or
pop
and
rcrb
ret
mov
test
mov
adc
icebp
aad
popf
adc
divb
inc
imull
cld
xor
push
dec
mov
pmulhuw
iret
and
xchg
pop
ficoml
sbb
aam
dec
push
add
jo
js
jb
pushf
ret
jae
add
or
inc
xchg
sbb
adc
cmp
xchg
cli
addr16
xchg
inc
lret
lret
pushf
ret
cmpl
push
arpl
fwait
inc
cmp
dec
mov
sub
mov
inc
and
jle
sub
jno
adc
loop
xchg
xchg
jnp
lcall
mov
lcall
inc
aad
xchg
and
aam
jecxz
mov
inc
out
xchg
sbb
stos
rcll
cs
xor
leave
jne
jg
pop
dec
add
or
dec
iret
xor
inc
inc
dec
dec
std
je
lret
pop
popa
mov
jo
cmp
roll
mov
mov
mov
imul
lret
adc
push
mov
or
mov
mov
pop
loope
das
in
pop
ljmp
hlt
inc
and
inc
loope
scas
inc
daa
lods
xorl
aas
xchg
or
and
cmc
xchg
movsb
sub
int3
jl
push
lret
fists
mov
xchg
xor
popa
jns
and
loope
pop
enter
jge
add
mov
into
adc
leave
pop
movsb
jl
mov
imul
adc
addr16
sbb
pop
xor
cmpsl
test
mov
adc
xchg
insb
and
push
sub
mov
and
roll
fs
inc
outsb
popf
lods
loopne
push
push
lea
adc
pop
sub
jae
jnp
push
addr16
mov
sbb
imulb
sub
out
outsl
cwtl
mov
loop
lock
ret
or
sbb
out
pop
outsb
pop
imul
out
sbb
fsubs
in
rclb
imul
sbb
and
mov
mov
cmp
jno
lea
mov
pop
in
inc
sbb
push
mov
ss
lock
shrl
jecxz
xchg
mov
mov
out
test
ds
fisubs
jmp
jns
div
sbb
movsb
mov
mov
xor
cmpsl
out
dec
xlat
jo
cmpb
jnp
push
jae
adc
je
rcr
push
dec
mov
xor
xchg
lea
outsb
jp
dec
mov
pushf
int
push
aas
sbb
sahf
mov
inc
mov
cmpsb
imulb
and
out
or
push
into
mov
and
push
cli
test
dec
mov
cld
xchg
mov
sub
cmp
ljmp
ja
jo
popf
push
fistpl
loop
mov
xchg
and
push
nop
stos
call
in
ja
lods
mov
cmp
pusha
ret
std
dec
sbb
negl
je
sbb
add
inc
mov
jl
dec
daa
cmpsb
int3
les
je
push
daa
shrb
cli
cmp
cmpsl
push
add
mov
inc
or
int
sub
inc
shll
sti
adc
sbb
mov
sub
clc
call
push
pop
pop
xchg
cmpsl
adc
push
jne
pop
pushf
and
push
cmp
pop
jae
mov
cmp
xor
shll
lcall
clc
jo
or
xor
mov
pop
fs
inc
fwait
rorb
jecxz
jae
iret
ds
lods
sahf
cli
xorb
ja
dec
pop
mov
testl
dec
lods
adc
dec
jae
ffree
test
insb
mov
dec
sub
xor
mov
sti
sbb
popf
adc
mov
testl
sub
gs
push
jo
pop
sub
mov
ret
gs
mov
aaa
mov
mov
mov
popa
cmc
enter
mov
adc
nopl
icebp
lea
mov
push
pop
iret
bound
or
and
mov
in
mov
adcb
mov
mov
ja
add
cmp
icebp
add
addl
or
das
mov
jo
mov
mov
adc
sub
adc
inc
xor
lods
mov
or
mov
jg
lea
mov
movsl
iret
movsl
cli
daa
xorb
int
out
pop
mov
push
das
adc
rcrl
sti
lahf
test
and
push
call
incb
jbe
xchg
nop
lea
sahf
xchg
hlt
insl
popa
stos
or
lahf
and
push
xor
or
and
mov
in
loope
xchg
andl
dec
pop
dec
inc
adc
gs
and
xchg
sub
xor
cmp
les
outsb
ror
push
add
mov
xchg
xchg
sub
arpl
shl
fwait
mov
shrb
pop
xor
mov
sbb
sub
xor
sub
imul
add
xor
xor
pop
adc
in
es
or
xchg
pop
jbe
enter
out
inc
push
push
mov
imul
sub
xor
cmp
or
sub
mov
lret
clc
fisubs
cmc
fdivr
jl
jo
sub
xchg
test
ror
mov
and
xchg
pop
cvtps2pi
cmpsb
jl
pusha
jno
movb
mov
push
lea
imul
pop
mov
adc
and
int3
and
js
out
addb
inc
cmpsb
inc
mov
push
mov
push
cmpsb
pop
movsb
adc
out
mov
push
repnz
xchg
lods
sub
mov
jbe
mov
call
pop
mov
inc
add
outsb
imul
push
mov
mov
fmuls
sbb
ret
lret
clc
repnz
mov
lahf
scas
or
adc
out
outsb
fsubl
js
je
sub
imul
dec
jne
pop
into
jecxz
addr16
dec
or
mov
stc
mov
ret
xchg
ret
mov
in
pinsrw
pop
cs
jg
adc
dec
sub
filds
leave
dec
scas
das
xchg
adc
arpl
outsl
jle
dec
mov
int3
inc
push
daa
pop
mov
ljmp
xchg
adcb
jge
pop
sbb
pop
stc
pop
jb
sbb
dec
xorb
andb
cmpsb
inc
sub
cltd
mov
and
mov
push
dec
mov
jmp
outsl
adc
pop
pushf
xchg
shll
lret
xlat
arpl
aas
pop
into
jmp
lcall
sub
or
das
cmc
mov
jmp
gs
es
aad
imulb
pop
stc
fs
sbb
repnz
mov
cmp
mov
and
subb
mov
ret
sub
jbe
or
frndint
in
mulb
adc
add
mov
out
push
add
filds
pop
fsubr
insb
adc
dec
adcb
leave
inc
push
addr16
push
sarb
cs
push
xchg
mov
outsb
movsb
and
mov
add
xor
fnstcw
sahf
sahf
cltd
mov
insb
pop
push
fstpl
es
ds
fldl
sbb
xchg
xor
in
or
je
pop
es
in
cmp
in
sbb
push
out
out
lods
pusha
xchg
loopne
fnstenv
sbb
pop
inc
sbb
or
or
mov
mov
fucomi
jno
insb
mov
mov
mov
push
sbb
sbb
pop
cmp
cmp
ret
cs
push
adc
pop
rcl
outsl
stos
inc
lods
xchg
mov
pop
lcall
pushf
pop
xchg
jno
js
jnp
jp
lds
adc
jl
insb
sub
jmp
xor
pop
scas
cs
test
and
inc
fiaddl
rcrb
xchg
cld
inc
xchg
rclb
lcall
inc
into
sahf
mov
fstpt
sbb
mov
idiv
fmulp
fisubs
xor
push
leave
push
push
mov
les
jne
in
jae
fwait
add
test
jne
sub
xchg
or
aaa
pushf
stc
ffreep
cmp
lea
repnz
fisubs
add
lods
ret
mov
mov
or
jl
xchg
push
adc
pop
rcr
push
cmpl
pop
iret
mov
ret
mov
aaa
inc
call
ja
repz
and
add
ja
lds
xchg
dec
dec
sub
movsl
push
xchg
sahf
call
rcll
cmp
ljmp
mov
hlt
outsl
pushf
mov
pop
cs
arpl
ljmp
into
mov
insb
cltd
add
clc
insb
dec
xchg
ret
jnp
ss
push
add
push
or
dec
xchg
popf
adc
add
push
mov
cld
jo
add
data16
ja
sar
sub
and
mov
in
xchg
add
fwait
xlat
sub
or
xchg
or
inc
jl
dec
push
aaa
repnz
and
pop
sub
idiv
js
jl
push
iret
sar
jecxz
cmc
or
ret
sarl
insb
pop
divl
inc
cmp
xor
pop
sub
out
scas
and
les
inc
ret
mov
inc
scas
cmpsl
and
mov
test
cmp
into
push
mov
cmp
imul
jae
rcll
or
mov
test
popa
xor
icebp
lret
adcb
cmc
addl
push
dec
cmc
xor
add
mov
lods
mov
jns
imull
jmp
add
inc
sbb
sahf
imul
dec
ss
cltd
cmp
mov
sub
cmp
cbtw
and
repz
aad
js
cmp
sbb
adc
pop
aas
sbb
add
cmp
in
sbb
push
dec
ja
add
xchg
push
ljmp
stos
push
sub
and
aaa
lcall
pop
enter
ror
cli
mov
lock
inc
xchg
sub
popf
mov
fucomip
int3
out
imul
jnp
jno
mov
inc
push
cs
xchg
push
iret
sbb
mov
push
ds
pop
addr16
jmp
shl
sbb
out
fnsave
cmpl
lods
push
sub
push
hlt
adc
inc
outsb
pop
popf
xor
rcrl
xchg
xor
push
xchg
cltd
cmc
out
call
sub
ficoms
inc
loop
mov
cmp
hlt
push
pop
insl
mov
and
push
pop
lret
push
lds
push
or
push
sbb
jne
dec
pop
cmpl
jo
dec
add
xor
cmp
fidivrs
inc
cli
in
push
mov
adc
or
or
lret
insl
xchg
in
mov
in
push
or
inc
out
push
inc
aad
mov
jno
pop
xchg
mov
aaa
dec
and
add
popf
pop
pop
dec
mov
xchg
pop
mov
xor
movsl
ds
orl
dec
or
inc
xor
jno
jbe
mov
inc
sub
mov
push
mov
sub
mov
cmpsb
mov
jecxz
sbb
test
test
fldenv
pop
adc
push
out
leave
mov
cmp
into
cltd
addr16
xchg
inc
pop
sti
pop
lock
add
cmpl
mov
scas
xchg
add
jg
mov
out
out
inc
in
jecxz
dec
out
jno
jg
ss
in
add
jl
inc
jnp
pop
loopne
add
dec
or
cmp
scas
out
int
jae
in
fmull
fimuls
mov
daa
push
or
mov
jge
inc
fmuls
push
sub
hlt
repz
or
adc
dec
test
pusha
or
sahf
mov
jbe
aas
adc
mov
mov
xlat
rorl
jns
push
xchg
int3
cmp
add
mull
out
cmp
loopne
cmp
pusha
imul
sbb
or
cmp
xchg
test
movsl
lahf
popf
bound
fsts
and
sarl
or
cmpsl
in
jg
lea
push
outsl
and
test
test
push
loopne
add
fisttpll
push
cmp
out
xor
push
loope
sbb
inc
dec
mov
cmp
lea
cmc
sbb
sbb
and
and
sbb
adc
mov
sub
push
mov
in
mov
inc
decb
lahf
lcall
arpl
cmp
jns
lcall
jge
jp
mov
mov
jne
stc
lea
and
hlt
enter
inc
decb
cwtl
jae
stos
mov
jnp
daa
inc
adc
les
clc
inc
cmp
fistpl
or
jnp
and
or
rcrl
mov
icebp
lock
loopne
jp
int
cltd
jb
xor
dec
rcl
and
loopne
loope
push
push
and
testl
sub
and
jne
test
mov
push
sub
mov
gs
sub
mov
push
or
fstpl
and
add
fwait
fs
push
and
sbb
dec
or
out
insb
mov
adc
cmpsb
push
mov
jo
sub
out
loop
movsb
cld
and
ds
push
mov
jge
jl
sub
mov
pop
and
sbbb
mov
ret
sahf
rorl
xchg
lret
outsb
pop
jo
cmpsl
insl
cli
add
in
sbb
add
sbb
xchg
fisttpl
and
pop
scas
mov
mov
or
adc
or
mov
xlat
ret
sub
mov
mov
inc
sub
cmp
xor
pop
popa
fnstsw
xchg
pop
bound
add
int
insl
incb
inc
fcomi
aaa
popf
add
arpl
lods
fcompl
call
movsb
push
xchg
inc
call
adc
lret
push
or
xlat
aas
mov
xlat
rorb
push
dec
les
sub
pop
mov
data16
shrl
pop
or
pop
pop
fiaddl
dec
push
or
mov
gs
push
pusha
fstp
jle
lret
add
add
out
fcom
jge
xor
cmpsb
movsb
xor
ss
cmp
dec
push
mov
pop
mov
rclb
and
mov
loop
enter
mov
dec
popa
repnz
pop
jg
mov
push
adc
ljmp
out
les
xor
lods
add
sbb
rsm
in
pop
outsb
lods
mov
dec
in
cmp
nop
or
incl
fdivrl
push
hlt
pop
jl
das
leave
data16
fcmovu
cwtl
repnz
imul
test
cmc
aam
sbb
in
pop
or
add
clc
jne
inc
insl
mov
adc
fsubrl
push
mov
adc
inc
mov
cmpsl
lea
movsb
repz
rcll
sub
outsb
push
sti
mov
shrb
notl
jb
and
or
sbb
aam
lret
icebp
test
int3
adc
subb
cmpsb
ljmp
mov
sbb
iret
dec
fninit
jmp
dec
jecxz
and
pop
xor
in
sbb
jmp
mov
sub
xchg
sub
rorb
jp
fucomip
mov
jno
add
into
pop
fwait
mov
mov
jno
in
add
icebp
xchg
ljmp
rol
xchg
cmc
cld
jae
jecxz
lods
lret
out
inc
enter
mov
fdivrl
mov
mov
ret
add
or
and
sub
cld
repnz
imul
or
push
mov
dec
gs
cs
pop
fs
xor
icebp
add
lcall
xchg
popa
mov
cs
in
stc
sbb
movb
pop
xor
sti
adc
add
sub
mov
xor
adc
xor
mov
fcomps
int
mov
sarb
cld
sub
pop
movsl
ja
test
jmp
adc
mov
ja
jb
aas
pop
test
lods
pop
ja
xchg
inc
icebp
mov
out
loop
packuswb
jmp
aaa
sub
jecxz,pt
aas
xlat
rorb
jle
nop
add
mov
ret
push
mov
rorl
pop
mov
xchg
pusha
pusha
dec
imul
mov
xchg
call
xor
outsb
nop
mov
int
hlt
aad
test
or
adc
sub
xchg
adc
sub
les
lock
and
insl
sub
xchg
inc
mov
xlat
sub
xchg
shlb
sub
stos
mov
mov
fs
clc
dec
fildll
aad
maxps
cltd
outsl
arpl
jae
lret
call
push
fimull
cmp
inc
adc
cld
clc
lret
mov
add
push
push
mov
adc
push
sub
jnp
das
adc
test
fcoml
push
xor
pop
push
sub
mov
fs
xchg
fstps
xor
adc
jg
test
xor
fwait
lcall
es
ja
popf
mov
mov
xor
aad
test
rorl
ficompl
mov
fs
das
rcrl
mov
xor
out
add
lock
in
push
mov
fstp
mov
imul
pop
mov
stos
fcmovne
ficompl
dec
cmp
sub
adc
inc
das
jecxz
mov
pop
hlt
add
dec
inc
xlat
sbb
ret
add
xchg
sbb
fwait
in
insb
jmp
and
sub
popa
mov
fsts
push
notl
or
mov
ss
sub
pop
insl
fildl
lods
pop
xchg
push
scas
sbbl
fwait
addl
pop
rcrb
in
test
lret
inc
push
adc
push
mov
pop
pushf
outsb
out
or
imul
popa
icebp
jg
cmp
repz
mov
sbb
mov
imul
mov
sub
dec
loop
adc
add
add
or
fldt
mov
pop
push
jle
push
push
and
sub
inc
adcb
into
xlat
adc
rcll
cwtl
test
mov
pusha
cmp
loopne
sub
sub
jg
fsubrs
cmc
push
in
mov
jbe
fcoms
jle
push
cli
sbb
push
shr
adc
push
addr16
pop
mov
jno
push
cmp
inc
stos
jnp
push
or
fiaddl
outsl
dec
ret
cmp
stc
int3
xchg
cmp
mov
lods
pushf
xorl
push
loopne
sub
mov
loopne
inc
in
pop
fistpll
inc
mov
mov
aam
cmpsb
aaa
fsubr
mov
scas
cmpsl
add
nop
mov
push
jne
lret
pop
je
xor
aas
mov
mov
mov
and
outsb
loop
aaa
cmp
cs
repz
stos
or
sub
mov
imul
push
push
xor
cmpsb
sahf
sub
dec
incb
mov
adc
out
mov
push
enter
lcall
into
sbb
cwtl
mov
in
and
mov
mov
aad
adc
cltd
rcpps
jg
and
push
mov
jo
aam
lret
fs
ljmp
in
xchg
and
fsub
ljmp
test
pop
jbe
mov
lret
adc
pop
sub
adc
setb
and
imul
push
enter
leave
xchg
pop
and
in
je
push
ret
ret
imul
xorb
dec
cmpsb
rorb
movsl
push
das
iret
add
mov
and
dec
ficomps
aad
and
filds
mov
test
lods
xchg
sti
mov
mov
testb
mov
jae
loop
add
hlt
ja
movsl
fdivr
decl
jnp
mov
shrl
sbb
push
inc
xor
fistps
mov
cmp
mov
xchg
enter
aad
mov
xchg
push
cmp
jae
ss
popa
sbb
jmp
xchg
movsb
add
lahf
loope
scas
dec
sub
xor
dec
repnz
dec
or
mov
mov
gs
enter
pushf
sahf
mov
arpl
adc
in
fs
jno
inc
cmp
lods
lds
aam
rcrl
lods
iret
sbb
adc
ret
out
jns
in
es
adc
stos
add
gs
das
cmpsb
js
jae
cwtl
dec
movsl
es
es
add
inc
add
sbb
fsubrs
xchg
jge
or
and
add
icebp
out
inc
pop
out
mov
shl
push
out
roll
subb
add
or
push
xchg
mov
call
add
imul
inc
add
xor
ljmp
inc
or
mov
int3
cmp
pop
and
out
xlat
in
xor
out
or
xor
roll
inc
dec
in
jg
jno
xlat
mov
pusha
xchg
and
rcrl
jmp
sub
insb
and
popa
xchg
std
mov
dec
mov
xchg
outsb
fsubl
clc
sub
jne
sbb
jns
out
test
outsl
push
add
cmpsl
es
movsb
mov
mov
fdivs
das
call
movsb
push
enter
xchg
mov
push
aaa
ds
clc
push
inc
inc
sahf
add
call
lock
sahf
sahf
and
arpl
and
push
fnstcw
mov
jns
shlb
inc
loop
rcrl
sub
test
xor
rcrb
shlb
mov
push
mov
ret
xor
xchg
int3
jle
cmpsb
pop
cli
xor
inc
test
iret
aas
sbb
mov
cmp
or
aaa
scas
push
pop
inc
xchg
add
nop
cltd
inc
xchg
loope
cli
or
test
cld
sub
pop
or
jb
sahf
movsb
adcl
dec
mov
push
mov
les
mov
pop
sbb
shrl
xchg
andl
fimull
pop
in
mov
jne
test
sbb
ss
mov
add
cmpb
bound
movsb
mov
scas
pop
sub
cmp
mov
cmp
xchg
ds
scas
lock
iret
mov
aad
lahf
rcrl
js
pop
cmp
sub
loop
es
out
or
jnp
fisttpl
pop
jne
dec
pop
aad
push
adc
shll
inc
je
addr16
ret
lods
mull
push
sub
scas
lret
or
aaa
dec
adc
aam
dec
jmp
addb
mov
movsl
mov
bound
aad
push
add
mov
mov
pop
in
in
stos
adc
cwtl
mov
or
sbb
adc
xchg
jecxz
inc
lods
jp
sti
fidivrs
xchg
int3
inc
dec
and
cmp
scas
js
mov
mov
jnp
out
stc
pop
pop
xchg
xchg
lods
in
int
loope
mov
mov
loope
cmpsb
xchg
or
jg
push
in
xlat
sub
dec
mov
dec
stc
jb
addl
insl
in
sub
or
inc
push
popa
mov
pop
enter
cmp
mov
out
sub
ss
mov
mov
orl
cmp
mov
inc
ljmp
xchg
mov
cs
jbe
imul
push
mov
loop
mov
or
test
lahf
lcall
inc
leave
dec
pop
fldt
mov
lods
fsubrp
xchg
inc
xorl
out
mov
imul
add
out
xchg
mov
cmp
lods
lret
pop
ja
adc
ret
inc
in
push
pop
push
aas
xchg
xor
rcrl
jmp
pop
mov
fcoms
inc
mov
ljmp
rol
imul
dec
jno
xchg
nop
aam
adc
lcall
ss
decb
xor
push
jl
ljmp
cmp
cmpsl
mov
fcompl
jb
push
fiadds
mov
mov
jo
jmp
sbb
insb
movsl
mov
imul
sub
ret
add
jge
gs
in
and
push
ret
mov
in
sub
dec
mov
mov
mov
xchg
popf
add
clc
dec
hlt
pop
les
xchg
mov
fucomp
fadds
push
pop
scas
jns
xchg
ret
mov
inc
or
fists
adc
sub
push
push
sub
push
ror
lods
sbb
inc
push
pop
mov
add
stc
gs
lahf
out
mov
in
jo
insl
add
pusha
test
subl
sbb
mov
shl
mov
mov
movsl
lret
loopne
add
push
push
or
jp
cmp
inc
inc
xor
push
sub
inc
pusha
and
pop
outsb
mov
pop
comiss
pop
pop
pop
lods
mov
out
rcll
xchg
call
in
out
loope
movsb
inc
push
stc
xor
sbb
cmp
test
or
dec
sar
xchg
jb
fists
cmp
mov
js
loopne
mov
insb
sub
test
pop
je
nop
daa
adc
les
mov
scas
cmp
sbb
inc
mov
sbb
jp
dec
mov
cmp
mov
xor
movsb
or
insl
xlat
xchg
and
stos
sub
imul
lcall
iret
subl
lret
mov
jmp
or
add
jmp
jp
int3
bound
add
call
dec
scas
jnp
roll
cmp
push
hlt
lret
sbb
rolb
mov
dec
or
psubq
xor
jecxz
repnz
push
xchg
dec
add
out
and
inc
inc
pop
dec
or
test
data16
push
inc
das
je
mov
or
sub
scas
push
jle
push
jmp
idiv
add
or
rol
mov
mov
and
ret
xlat
jns
mov
ds
jae
ffreep
inc
ja
pop
sub
outsl
push
insl
jg
and
push
and
adc
pop
and
mov
popf
cld
sub
mov
sub
inc
mov
or
cmp
mov
push
or
cmc
add
dec
mov
mov
mov
push
jmp
xchg
and
mov
push
int
repz
out
cmpsl
xchg
call
inc
pushf
and
lcall
xor
mov
mov
dec
cmp
sub
adc
mov
xchg
lret
sbb
jae
loopne
jge
mov
pop
rcl
sub
out
leave
or
xchg
dec
data16
pop
pop
jp
cli
pop
popa
fs
add
scas
xchg
pusha
or
xchg
xchg
mov
mov
outsl
cmp
movsl
cltd
xor
mov
outsb
stos
scas
jns
into
out
sub
xchg
mov
xor
inc
xchg
cmp
xchg
cli
popa
nop
sbb
shll
cmc
mov
pusha
stos
lcall
adc
loop
mov
cltd
shll
cmpsl
dec
push
daa
inc
sahf
push
push
xor
fdivs
xchg
pop
rorb
leave
out
fnsave
fnstenv
cmpb
push
adc
dec
std
out
and
xor
pop
xchg
push
add
loope
and
pop
jno
loop
or
int3
push
test
xor
pop
adc
mov
es
xor
dec
jnp
sbb
mov
ds
popf
mov
mov
loopne
dec
adc
std
mov
push
cmp
mov
or
push
pusha
sarb
stos
mov
call
sub
shlb
sub
lods
sub
pop
shrb
xorb
mov
cmpsb
lods
in
popf
pop
inc
sub
pop
lcall
xchg
jecxz
jp
mov
sub
js
cmp
mov
jl
roll
pcmpeqd
inc
lock
imull
sbb
push
fs
stos
sbb
insb
dec
mov
loope
push
cltd
lods
shrb
out
xor
popa
icebp
insl
les
std
fwait
mov
and
sub
icebp
xor
nop
mov
clc
inc
sub
fstpl
xlat
in
xor
mov
cld
orb
push
xchg
shrb
pop
mov
lods
aam
shlb
daa
dec
pop
ja
mov
icebp
mulb
popa
fsubp
mov
sbb
ret
iret
mov
fimull
xor
and
icebp
outsl
icebp
xchg
and
in
mov
dec
pop
cmp
lods
mov
pop
jle
jnp
jmp
push
cmp
xor
jae
inc
pop
out
popa
cmp
push
popf
and
clc
lahf
dec
lret
mov
aad
pop
mov
stos
mov
mov
and
mov
std
mov
cmp
sub
out
add
mov
popf
dec
mov
movsl
ja
cmp
sub
shrl
pusha
sub
inc
lds
clc
nop
push
adc
mov
popa
jb
sbb
cmc
out
and
ficompl
push
xchg
mov
aad
movb
call
out
dec
mov
xchg
dec
cmp
mov
jle
iret
add
int3
in
push
scas
scas
orl
arpl
add
movsl
dec
sbb
xchg
lcall
test
lea
pop
jnp
jne
xorl
outsb
test
adc
jp
pop
adc
sarl
lods
sbb
cmc
lock
dec
cmp
ret
rclb
sub
xchg
sysexit
and
stos
push
jno
lods
xor
sub
xchg
enter
xchg
jo
ljmp
push
arpl
jg
cmc
out
fiadds
in
pushf
stc
pop
and
inc
or
or
mov
push
pushf
lods
cmp
ljmp
or
push
dec
fimull
mov
add
lods
enter
adc
addr16
jecxz
test
adc
fsubr
lock
in
sub
movl
mov
stos
lods
popa
sub
mov
sarb
cmpsb
push
test
push
xlat
test
dec
out
sahf
aad
mov
xor
push
sbb
push
sub
add
push
stos
jbe
push
inc
xchg
scas
jbe
mov
mov
je
arpl
jae
jmp
lds
push
repz
mov
xchg
xchg
or
mov
cmpsb
jp
movsl
movsl
mov
cmpsl
stc
mov
and
adc
ja
sub
jnp
test
xlat
mov
inc
popa
jl
mov
fs
xor
and
pop
pop
subl
fimull
out
sti
loop
out
stos
call
add
pop
lret
icebp
sub
or
in
pushf
stc
adc
cs
xor
rcr
mov
out
test
addr16
in
mov
das
in
rclb
mov
sub
je
jg
adc
daa
adc
loope
lret
adc
insb
rorl
xchg
or
inc
xchg
cmp
ljmp
jno
idivl
into
sarl
xchg
sti
in
hlt
out
adc
pop
es
inc
cmp
or
and
mov
sub
jmp
pop
popf
mov
addb
mov
mov
bound
sbb
inc
dec
aas
movsl
addb
lea
popa
xchg
add
xchg
and
and
cmp
aad
test
icebp
into
clc
test
or
cmc
inc
lock
xchg
mov
mov
push
or
cmp
mov
inc
popa
xchg
in
insb
push
xchg
xchg
adc
mov
pop
fwait
rorl
sbb
xlat
push
aaa
cs
cmp
inc
frstor
pop
cmp
mov
xchg
push
enter
movsb
cltd
inc
inc
and
xor
jle
dec
hlt
xchg
test
xchg
cmp
dec
stc
out
in
jle
inc
fstpt
or
xchg
repz
scas
imulb
cmpb
add
sbb
push
inc
cmp
add
xlat
cs
sbb
xchg
arpl
cmp
sti
mov
jmp
incl
cmpsb
cld
or
mov
ficoml
dec
xor
and
xchg
loop
xor
pop
or
add
mov
add
test
sub
lods
cmp
inc
xor
dec
popa
pop
das
mov
insb
fldl
jbe
pop
out
add
addr16
cli
aad
out
jno
inc
popl
and
add
shl
shrb
sub
stos
dec
ret
jne
call
jae
xchg
or
sub
int3
xchg
cmp
fstps
mov
cmp
pop
icebp
sbb
sub
push
add
cld
arpl
cmp
mov
inc
insl
mov
and
pop
out
mov
lea
out
int
cmc
push
test
std
jmp
mov
or
int3
imul
and
xchg
jbe,pt
add
out
in
xchg
xchg
or
dec
mov
rcl
jae
xchg
bound
adcl
in
and
lcall
or
in
sub
std
push
lds
iret
test
cmp
int
or
outsb
mov
aaa
imul
es
sub
sub
jbe
xchg
cmp
jns
xlat
jp
clc
scas
mov
sub
ljmp
out
push
add
lods
dec
fsts
dec
lea
push
cwtl
xchg
jnp
out
stc
mov
sub
outsl
out
adc
out
rorl
jge
pop
addl
cmpsl
add
mov
mov
mov
pop
mov
cmpl
mov
xor
mov
xchg
xor
push
pop
ss
fisttpll
fmul
xchg
push
mov
fistpl
cltd
dec
xchg
mov
adcl
jnp
imul
stc
fdivl
and
mov
decl
xchg
xchg
cmp
aam
fsubs
push
lock
xor
lcall
dec
pop
fimuls
mov
fadd
in
jg
sub
lods
notl
jne
dec
mov
xlat
cmp
push
or
negl
dec
mov
push
cmpsl
jno
scas
cmpsb
mov
hlt
popf
push
xchg
inc
sub
mov
icebp
cmp
dec
adc
popf
in
loopne
jle
nop
sbb
cmc
xchg
sbb
outsb
iret
insl
aaa
and
fcompl
out
dec
aaa
jne
lahf
arpl
lods
push
lret
xchg
fisttps
out
subb
cli
push
adc
inc
lock
lock
mov
repnz
cmp
lds
out
aas
or
pop
insb
pop
push
jo
in
cwtl
fdiv
inc
sahf
out
pop
mov
cmp
pop
out
dec
mov
xchg
ret
test
mov
pop
xchg
inc
push
test
mov
mov
repz
pop
xchg
fstps
add
pusha
in
mov
jb
mov
xor
jb
add
mov
mov
enter
js
rorl
imul
pop
adc
jne
pop
pop
std
aad
mov
into
mov
icebp
and
mov
sub
sbb
mov
hlt
xorb
jg
in
mov
sti
push
stos
aaa
sub
or
jmp
cld
call
xchg
ljmp
adc
leave
and
push
mov
test
lahf
cltd
jo
cmc
ficompl
pop
imull
inc
movsb
out
xchg
pop
xor
lds
add
jno
add
xchg
add
testl
cs
or
xor
pop
adc
push
fsubr
xchg
call
out
pop
cli
mov
f2xm1
inc
push
rclb
xchg
or
jp
xor
pop
inc
mov
dec
ret
push
cmpsb
adc
sbb
adc
and
fists
and
testl
mov
pop
orb
adc
aam
mov
aad
add
and
into
aaa
and
jmp
jae
movsl
pop
xlat
jg
shlb
jno
add
mov
xor
movsb
sbb
mov
xor
xor
or
cmp
xchg
inc
pop
rol
cwtl
or
jl
lcall
fwait
cli
sub
and
mov
lds
leave
sub
je
mov
mov
sub
push
sahf
mov
and
or
std
arpl
js
or
popf
xchg
ret
add
test
jne
les
hlt
int
pushf
push
cld
repnz
mov
push
leave
pop
out
dec
sub
movsl
lea
lods
cmp
dec
mov
movsb
jns
out
mov
sub
inc
mov
in
and
dec
push
or
push
movl
test
pop
jno
repnz
jge
ds
inc
mov
js
in
stos
jmp
push
ss
pop
outsb
lods
popf
stos
push
dec
fstpl
xchg
inc
fcom
xchg
fdiv
cmpsl
pop
stc
lahf
mov
add
jae
pop
es
mov
movsl
imul
les
push
add
mov
rorb
mov
pop
dec
jne
stos
popa
stos
ss
inc
data16
test
add
and
and
and
lahf
cmp
gs
cwtl
mov
sbb
jp
sub
or
je
pop
jecxz
int
out
mov
int3
shll
mov
sub
xchg
nop
mov
shll
push
out
fisttpll
push
adc
icebp
repnz
cmp
jo
jae
lock
jle
push
testl
stos
push
ljmp
lcall
scas
fisubl
data16
mov
enter
outsb
lods
push
inc
push
popf
inc
mov
mov
sbb
cmpsl
sbb
inc
rclb
bound
inc
lret
add
mov
cmp
mov
mov
or
push
repz
aad
out
es
mov
adc
test
mov
jnp
cmpsl
xlat
outsb
out
mov
lock
lcall
pop
lahf
and
adc
daa
dec
jge
inc
enter
and
test
sbb
stos
sbb
mov
insl
repz
inc
mov
push
sub
push
jnp
js
clc
rolb
aas
sub
inc
pop
mov
pop
and
mov
leave
insb
mov
scas
js
sahf
and
lods
push
repnz
mov
pop
sub
sub
dec
cs
test
lds
lock
insb
jecxz
dec
jp
aaa
sbbb
and
fld
or
mov
pop
xor
mov
in
rcll
pop
cmpsb
pop
shll
scas
xchg
orl
add
pop
mov
xchg
pop
es
enter
push
stos
lock
nop
dec
or
fldenv
dec
icebp
cmpsb
mov
mov
js
or
les
xchg
push
and
std
popf
and
adc
icebp
jne
mov
cwtl
loope
pop
jns
scas
xchg
xchg
dec
int
mov
repnz
cmp
mov
out
cmpsb
fwait
inc
push
mov
orl
add
test
mov
scas
pushf
test
test
cmp
in
add
push
inc
xchg
mov
and
and
repz
and
mov
maskmovq
inc
push
out
cld
rep
test
insb
cmp
lds
or
sub
and
pop
xchg
test
jae
mov
and
and
pop
popa
and
movsb
test
enter
pop
jg
and
ret
or
popa
mov
or
fildll
test
int3
sbb
imul
sahf
stc
rcrl
mov
cltd
mov
call
pop
mov
gs
call
mov
jecxz
sub
addb
das
mov
sub
psubusb
add
jns
add
or
aaa
cld
cmp
adc
jmp
cli
cld
jnp
icebp
inc
insb
cmp
scas
shll
shr
je
mov
pop
cmc
adc
push
sbb
xlat
daa
xor
dec
loopne
jns
sahf
addr16
add
cmp
xchg
dec
adc
jnp
xor
std
pop
mov
lahf
cwtl
das
lods
out
sbb
or
neg
add
xor
lods
push
mov
orb
out
adc
fldl
pop
leave
jmp
sub
into
dec
lahf
xor
iret
testl
mov
pop
xchg
in
into
lds
pop
xor
dec
mov
adc
negl
ja
in
pop
outsl
cltd
test
fcmove
mov
cmp
mov
mov
mov
cs
lods
pop
fistpll
xor
cmpsb
inc
rorb
out
fists
or
sbb
push
or
mov
cmc
fnsave
xchg
sbb
gs
jmp
out
testb
sub
push
fucomip
test
lock
xchg
cmc
cld
mov
loope
test
leave
daa
ret
jp
push
jae,pn
pop
dec
dec
and
cmpsl
push
or
push
mov
dec
test
loopne
mov
push
adc
nop
pushf
push
xchg
fcoml
jae
lahf
mov
jl
cs
inc
out
xchg
out
icebp
out
push
pop
cltd
fs
rorb
jp
in
ret
fdivl
xchg
je
data16
pop
mov
in
fstps
in
or
aad
pop
pop
mov
cli
mov
lret
shlb
inc
fwait
jae
bound
or
out
lcall
dec
jp
xchg
fcoms
mov
jg
js
movsl
fildll
stos
adc
sbb
mov
jae
js
push
outsb
popf
ds
mov
test
push
fstpt
enter
push
adc
das
dec
clc
stos
sub
aad
inc
inc
hlt
aam
scas
subl
addl
outsb
inc
inc
xlat
fwait
pop
add
push
ret
jmp
mov
shrl
stos
je
cs
and
scas
lret
or
loope
fcomi
cmp
enter
loop
in
xor
cmp
ja
ret
inc
add
in
pop
andl
cmp
or
popa
movsb
pop
mov
adc
ficoms
mov
test
inc
in
mov
lods
mov
push
iret
jle
popf
xchg
pushf
push
fistpl
xchg
loopne
into
add
std
mov
xchg
sbb
xor
insl
jb
shrl
or
in
inc
sub
and
icebp
cmp
dec
xchg
and
repnz
loope
sub
xchg
sub
lret
pop
mov
mov
mov
sbb
rclb
jne
sbb
idivl
pop
mov
mov
data16
jge
and
pop
rorb
bound
cmp
dec
xor
fwait
imul
and
jle
imul
cmpsb
or
or
mov
rcll
dec
xchg
movl
cwtl
enter
inc
test
out
sbb
mov
test
inc
jae
adc
fldcw
shlb
mov
jmp
dec
cmp
jge
sub
and
pushf
inc
xchg
mov
fisubl
xor
inc
push
pop
sbbb
dec
fiaddl
lcall
xor
push
setb
sbb
imul
enter
mov
lcall
inc
ret
push
lret
adc
clc
add
push
nop
sub
xlat
xchg
enter
outsb
inc
jg
mov
into
mov
add
jo
repnz
sub
int
inc
jg
addb
sub
sub
pop
jge
mov
sbb
and
pop
xchg
mov
into
push
and
pop
es
daa
add
sti
scas
xchg
aam
xchg
sbb
and
mov
sub
ljmp
insl
pop
xor
or
fdivrl
rol
adc
insl
xor
mov
adc
inc
mov
adc
xor
iret
mov
jnp
mov
mov
cwtl
pushf
fcomip
fs
lods
jmp
xor
xchg
int
jp
cmpsl
not
lret
rcrb
ljmp
fwait
push
in
inc
icebp
xchg
sahf
inc
stos
inc
aad
neg
pop
sarl
call
xor
sub
sbb
jb
pop
mov
mov
imul
int
pop
mov
les
mov
scas
ja
xor
and
mov
subl
in
add
dec
xor
ja
dec
mov
repnz
cmc
fsubrs
ljmp
pop
sub
pop
inc
jl
ror
cmpsl
jb
xor
xor
cmp
rcrl
mov
lahf
mov
leavew
scas
xchg
dec
popa
inc
sub
adc
adc
into
jecxz
push
leave
mov
call
sub
xor
add
not
push
out
pop
outsl
mov
cmp
cmc
mov
clc
hlt
cmpsb
popf
sar
sbb
mov
and
fcomps
xor
or
dec
jnp
ret
je
mov
sbb
xor
fisubrl
out
mov
enter
jae
or
aaa
adcl
leave
lods
jo
sbb
rorl
push
xor
nop
movsl
inc
sbb
xchg
loopne
inc
sub
push
mov
push
outsb
or
aam
push
stos
cld
add
lret
or
jbe
mov
jle
mov
add
jo
and
sahf
in
mov
iret
cmp
sbb
aas
ds
test
imul
cmp
jb
mov
mov
inc
pop
les
mov
shrl
out
hlt
sbb
fs
sbb
clc
jb
xchg
test
cmc
fstpl
cmp
adc
in
ret
maskmovq
xchg
cmpsl
hlt
dec
or
popf
stos
psubd
push
xchg
inc
mov
testb
xlat
cmp
ret
je
xlat
adc
das
test
outsl
add
aas
loope
jbe
or
dec
mov
lock
and
clc
icebp
sub
cltd
cmp
vprotd
addr16
xchg
xchg
pushf
xor
jbe
cwtl
cwtl
push
ljmp
and
shrl
push
adc
icebp
jb
pop
pop
push
shrl
mov
enter
sbb
xchg
enter
sub
lods
add
sub
inc
lock
repz
icebp
iret
jp
out
lock
daa
mov
xchg
mov
mov
jbe
jae
jbe
sti
and
adc
inc
add
inc
out
aaa
mov
pop
inc
out
sbb
stc
stos
sub
insl
add
pop
pushf
xor
rol
fs
out
pop
repnz
fsub
ds
movsb
ljmp
out
xchg
adc
mov
loopne
push
inc
add
mov
jp
aam
mov
adc
push
jge
data16
or
xor
or
ret
mov
pop
bound
jo
insb
inc
xor
pop
xchg
jb
ret
jge
lock
and
out
cmp
add
xchg
gs
sub
dec
add
and
in
xor
scas
cld
xchg
ret
andl
mov
jmp
push
xchg
nop
and
pop
cli
add
aas
sub
push
in
xchg
fcomps
xor
mov
jge
loop
sbbl
lods
jge
fldt
call
inc
out
in
mov
jecxz
sub
scas
in
add
or
test
lcall
mov
andb
mov
pusha
adc
insl
or
jb
inc
loope
mov
sub
dec
pop
push
lret
mov
in
mov
aaa
ficoml
ds
add
repz
mov
js
jno
push
in
cltd
int
lret
mov
gs
mov
mov
pop
dec
imul
or
int3
leave
or
pop
xadd
aam
adc
push
pop
and
adc
repnz
fstpl
mov
inc
jge,pn
pop
add
movsb
cs
jmp
repz
pop
aam
aam
pop
adc
jp
xchg
bnd
lods
inc
push
fsubl
mov
imul
mov
shrl
repz
mov
outsb
nop
mov
and
inc
adc
popf
cmp
jg
inc
fcomps
jp
mov
cmc
clc
mov
sub
xchg
push
nop
fcmovnb
insl
cmp
push
scas
sarl
sub
out
push
in
dec
xor
mov
jb
sub
cltd
daa
add
cmp
push
das
setl
push
dec
cwtl
jg
or
int
movsb
ss
add
jbe
repz
shr
decl
cmp
pop
add
sbb
inc
lea
in
xor
dec
cwtl
loop
add
std
test
popf
subl
cmpsl
fstps
jle
ds
hlt
pop
test
loope
fcomps
sbb
jno
or
add
dec
pusha
add
aaa
repz
add
add
sub
dec
inc
out
fs
xchg
nop
or
ret
icebp
mov
shr
ret
gs
fldl
rolb
jecxz
push
mov
mov
mov
mov
xchg
and
mov
iret
lcall
xor
push
dec
sbbb
or
out
xlat
cmpsb
das
shrb
dec
inc
arpl
jp
mov
cs
xor
mov
repz
jnp
in
js
xor
and
ret
cmp
push
out
fwait
xchg
sub
mov
adc
out
mov
mov
and
unpcklps
fadds
out
cmpsb
xchg
push
frstor
mov
pop
cmp
mov
inc
sub
add
sarl
aam
cmpsb
dec
inc
icebp
dec
dec
lods
test
mov
mov
xor
push
cmp
jno
aad
std
or
cmpsl
push
lcall
lahf
mov
adc
jge
push
popa
sbb
movb
test
dec
lods
push
sub
clc
mulb
lods
inc
out
jge
hlt
push
dec
sbb
xchg
push
push
mov
rcrb
aad
je
test
test
in
push
outsb
cmp
mov
jnp
jl
or
lods
jl
rcr
aad
sub
pop
insb
cmpsb
pop
mov
cmp
mov
xor
adc
dec
insb
jo
and
lret
aad
dec
dec
xchg
xor
repnz
sbb
sbb
sub
adc
and
enter
lods
mov
fsts
or
iret
push
adc
mov
fsubrs
mov
and
movsl
push
pop
sub
lret
loopne
inc
mulb
roll
mov
test
add
pusha
jle
adc
fdivrp
inc
out
incl
sub
dec
mov
addr16
dec
mov
lcall
mov
sqrtps
movsl
or
sarl
mov
lods
sbb
mov
xchg
jl
lods
adc
mov
hlt
cld
test
dec
into
aad
hlt
int3
ret
int
daa
sub
xor
lds
jnp
push
loopne
pop
ret
mov
fstpl
insb
movsb
and
push
dec
dec
gs
loopne
ljmp
mov
in
mov
mov
xor
add
mov
mov
adc
iret
je
and
int3
int
mov
icebp
int
in
inc
mov
mov
mov
cmp
and
inc
rorb
cmp
std
jns
movsl
jmp
jb
in
gs
jns
add
and
pop
je
add
push
dec
sub
aas
pop
rorl
daa
or
out
sub
negl
stc
jmp
xchg
leave
or
sbb
jle
cs
incl
add
lcall
cwtl
mov
dec
test
jae
jp
notl
or
enter
outsb
jp
lods
ljmp
push
jmp
flds
mov
jg
mov
out
cmc
dec
inc
fisubs
sub
leave
inc
out
jg
call
cwtl
stc
addr16
repnz
mov
push
fsubs
stos
xchg
imul
gs
jns
outsl
jg
jl
cmp
jecxz
lds
push
pop
rorb
fwait
ja
pop
mov
xchg
cmpsl
push
add
shrl
jp
fisttpl
outsb
lock
add
adc
test
sbb
xor
cmpb
lock
nop
jae
adc
inc
sbb
and
jne
in
ret
adc
sti
cltd
xchg
pop
pop
pop
and
in
cltd
jl
mov
ljmp
lea
aas
imul
pop
push
cmp
cs
and
push
fcoms
les
call
mov
stos
xchg
out
cli
loopne
jle
ret
push
inc
mulb
negb
fidivs
push
int
jg
call
sub
pop
jle
mov
mov
and
xchg
sbb
movsl
mov
jno
ss
xlat
ds
inc
adc
adc
pop
push
maxps
sbb
push
stc
mov
push
cmp
daa
insl
fcoml
mov
inc
lock
jo
movsb
or
pop
push
movsb
faddp
cmpb
push
sub
mov
pop
cmp
mov
dec
push
push
jb
jle
add
sub
xchg
aas
out
pop
push
cs
out
pop
into
jl
cwtl
jbe
movsl
add
mov
sbb
pop
shll
dec
leave
cltd
mov
inc
pop
adc
adc
and
loopne
sbb
or
loop
sahf
sub
cmp
cltd
out
iret
add
jg
mov
adc
orb
dec
push
sti
xchg
sbb
adc
out
push
sbb
cs
movsl
mov
mov
or
push
and
mov
int3
ret
inc
shll
mov
pop
fadd
adc
imul
pusha
mov
outsl
inc
mov
xor
pop
orb
sarl
cltd
std
xor
sub
mov
imulb
aas
and
push
pop
pop
pop
xchg
stc
popa
gs
loope
push
addl
xor
xor
jge
cwtl
cli
push
xor
jns
fistl
aaa
or
pushf
mov
dec
adc
or
mov
jg
xor
mov
int
repnz
inc
sbb
xchg
cltd
pop
pop
xorl
ljmp
and
pop
xor
xchg
in
arpl
movsl
xor
sub
xchg
outsb
mov
mov
iret
push
dec
push
out
push
mov
pop
ds
sarb
mov
jb
push
int
repz
andb
jg
push
movsl
shl
test
mov
xchg
aad
inc
enter
add
loope
push
sbb
rol
outsb
mov
mov
sub
and
pusha
jb
mov
xchg
loopne
jbe
add
sub
lods
fnstsw
jo
inc
add
clc
xchg
xor
fs
ds
enter
pop
adc
jbe
cmp
add
mov
inc
xchg
and
adc
pushf
or
inc
inc
adc
rorb
jp
out
pop
add
push
xchg
shlb
dec
in
push
iret
data16
inc
scas
scas
clc
sub
scas
shl
adc
adc
jg
and
push
out
jg
outsb
push
mov
aas
insl
add
scas
or
ds
lcall
sbb
shll
std
push
rorb
add
pop
xor
clc
sbb
and
and
push
jmp
sbb
mov
sarl
enter
outsb
aaa
and
or
inc
fdiv
mov
add
ljmp
pop
push
orl
lcall
cmp
xchg
cld
mov
test
xlat
mov
cmp
es
add
xchg
aas
mov
addr16
xchg
add
xchg
mov
and
add
push
push
mov
fstl
cmp
dec
adc
fwait
shll
mov
push
ds
add
cltd
push
adc
mov
add
jl
ret
cld
mov
jns
and
jle
movsb
je
xchg
mov
xchg
out
in
dec
xchg
sub
adc
and
icebp
lods
push
mov
sub
fnsave
push
mov
jmp
mov
shll
and
sbb
inc
insb
pop
outsl
jb
mov
fcmovbe
test
jb
mov
add
stos
xchg
and
rolb
jg
aaa
add
push
add
dec
sub
mov
sub
fmuls
call
jo
fimuls
mov
pop
push
in
sbb
and
lcall
out
or
loope
sub
clc
and
add
pop
sub
push
push
push
mov
mov
or
lock
xchg
mov
aad
inc
push
lock
mul
xchg
mov
mov
xchg
out
or
hlt
mov
jbe
fsubp
cmp
xchg
add
arpl
sbb
ja
outsb
test
cld
adc
sbb
push
push
mov
ds
pop
lret
stos
out
push
sub
cmp
ljmp
outsl
adc
cli
repnz
cltd
mov
loopne
or
mov
aam
push
xor
insb
pop
fistpll
push
arpl
int
and
jg
push
arpl
cmp
int3
cmp
bound
lds
addl
cmpsl
jle
cmc
lods
imul
iret
inc
push
add
ss
fcomps
dec
sahf
mov
daa
cmc
stc
imul
fwait
jge
das
jns
mov
ds
jns
jae
jmp
cmpsb
or
cmp
stos
pop
sub
mov
mov
les
cltd
sub
sbb
scas
fiadds
imul
fistpl
and
pop
stos
mov
scas
int3
adc
add
adc
and
jecxz
jbe
sub
lret
fs
xchg
and
push
mov
js
add
inc
adc
cmp
jb
push
in
lcall
jo
sub
jge
dec
dec
inc
mov
add
data16
sub
std
addr16
pop
cmc
xchg
sub
int
and
jge
ja
shll
mov
add
mov
mov
and
cmc
stos
push
mov
loopne
mov
sub
fisubs
jle
push
outsb
push
sub
imul
push
out
jne
jl
jo
and
and
push
cmpsb
adc
pop
scas
scas
fidivs
cmp
mov
or
fistpll
cmpsl
add
rolb
add
adc
jp
push
adc
xor
xor
ljmp
int
mov
xchg
loope
rorb
xchg
data16
lods
or
shrl
nop
mov
sbb
xor
and
stc
inc
lea
cmp
sub
pop
inc
rolb
mov
cmp
addr16
sahf
loop
fwait
int3
pop
jns
sahf
or
cli
pop
dec
mov
mov
xchg
mov
cmp
repz
ret
sub
popa
adc
mov
push
xchg
pusha
or
push
xor
add
inc
lods
or
pop
xchg
mov
sub
and
or
mov
sbb
daa
or
mov
repz
jle
ljmp
sbb
lret
inc
and
cli
xchg
int
lods
adc
and
in
add
icebp
sbb
fs
fcomp
imul
mov
ret
cld
inc
adc
xchg
push
sub
dec
pop
cmp
sbb
insl
dec
lret
jle
mov
clc
jnp
xchg
or
popa
sub
mov
leave
xchg
cwtl
loop
xchg
push
and
sbb
xchg
xor
fsubp
xor
mov
lds
mov
int3
or
mov
iret
push
sbb
or
adc
sub
jle
mov
sub
test
and
pop
mov
scas
popf
xchg
xchg
addr16
rorb
arpl
cmc
push
jecxz
pusha
insl
adc
daa
loopne
push
out
loop
leave
push
xchg
nop
xchg
mov
mov
or
cmp
repz
xor
or
jne
cmp
fldt
ljmp
mov
clc
mov
ja
mov
pop
sti
in
dec
into
cmp
movsl
cmp
cmc
mov
mov
and
mov
adc
shlb
push
xchg
pop
lea
mov
mov
movsb
in
and
popf
inc
aas
pop
mov
cld
or
xchg
sbb
ljmp
leave
mov
stos
movsb
pushf
icebp
dec
insb
inc
stos
xor
push
sbb
icebp
sbb
and
inc
xchg
push
add
arpl
mov
fiaddl
mov
jb
cmc
enter
nop
pop
sbb
jno
pop
jbe
mov
push
fidivs
lods
xor
pop
ret
sbb
lret
mov
popa
cld
or
stos
jmp
loope
dec
push
leave
push
sbb
add
shl
adc
nop
cmovbe
jle
xor
call
mov
mulb
enter
insl
jae
rorb
into
lcall
nopl
dec
xor
cmpsl
movntps
test
sub
or
lds
dec
test
push
mov
cmp
arpl
jns
sbb
scas
call
and
sbb
pop
dec
scas
repnz
and
sbb
xor
sub
pop
sbb
arpl
popa
inc
jno
fwait
push
mov
dec
inc
push
mov
push
and
scas
imul
adc
in
inc
ret
aad
sbb
sbb
mov
fwait
sbb
mov
lahf
scas
sahf
enter
sbbl
dec
jp
push
outsb
leave
mov
pop
cwtl
aaa
and
adc
cltd
sub
or
dec
aam
jbe
ja
add
add
add
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
nop
push
nop
push
push
nop
nop
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
