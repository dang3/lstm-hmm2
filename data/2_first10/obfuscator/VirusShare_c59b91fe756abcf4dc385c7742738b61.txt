ds
xor
nopl
sub
pop
repz
sub
mov
sub
sbbl
xor
cs
push
jno
pop
or
das
arpl
in
fimuls
jne
mov
decl
ss
fdiv
ja
gs
xchg
xlat
cmp
pop
sub
mov
push
cld
cwtl
and
push
cmp
xchg
xor
xorb
mov
ljmp
inc
xchg
std
repnz
shr
xor
push
mov
jge
mov
sbb
and
aaa
clc
xchg
je
scas
fildl
lods
icebp
out
sub
push
pop
outsl
and
ja
or
dec
adc
loope
icebp
out
ss
sar
mov
ja
ret
lret
fldl
fildll
add
jmp
dec
mov
in
sub
fwait
dec
jle
adc
sub
stc
sbb
add
popa
insb
imul
je
add
add
gs
je
inc
jbe
outsb
je
add
in
fs
add
mov
shl
push
scas
aas
icebp
inc
das
add
shll
scas
les
rorb
mov
mov
sbb
pusha
jle
and
mov
adc
and
movsb
add
loopne
mov
sub
inc
add
jns
mov
in
fisubs
clc
iret
jle
gs
push
fmuls
ljmp
or
repz
mov
pop
scas
popa
js
int3
inc
sub
mov
clc
and
push
inc
test
mov
xorb
ja
add
ret
lea
call
jo
push
pushl
pusha
mov
push
movw
push
mov
lea
jmp
pusha
pushf
lea
jae
push
add
jmp
pushf
lea
jbe
btr
xadd
sub
bsf
push
sbb
xchg
mov
add
push
test
test
test
mov
movsbw
or
add
bt
shr
bswap
test
sub
shr
mov
shrd
add
movzbw
pusha
movsbw
mov
lea
pushf
mov
seta
seta
pusha
lods
cmc
clc
rol
clc
bt
neg
movb
ror
pusha
cmc
clc
sub
cmp
cmc
cmp
pop
lea
jmp
movzbl
pop
jmp
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
popa
addr16
imul
insb
imul
add
fs
imul
dec
inc
inc
push
push
xor
cs
insb
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
and
call
push
jmp
add
inc
gs
insb
imul
add
arpl
jae
bound
add
inc
gs
jne
jb
outsb
je
bound
arpl
lea
jns
mov
push
movw
lea
jmp
add
inc
gs
gs
imul
adc
cltd
add
add
add
gs
je
push
gs
popa
jo
outsl
jb
inc
add
leave
pushl
pushf
lea
jmp
add
push
je
jb
push
popa
add
dec
inc
push
dec
xor
cs
insb
add
add
jne
insb
push
arpl
add
outsb
fs
gs
popa
addr16
add
add
je
inc
add
add
je
popa
jo
outsl
fs
add
ret
and
jae
mov
mov
mov
pusha
inc
pushf
dec
inc
pushl
push
pushl
not
mov
lea
push
pushl
lea
call
push
pushf
jmp
lea
jae
push
xor
push
lea
call
call
movw
adc
lea
pushf
pushl
ret
test
mov
cmp
mov
popf
and
dec
mov
pop
mov
cmpl
std
fldlg2
ja
imul
mov
xchg
imulb
add
mov
stos
mov
dec
pop
movsb
or
idiv
pop
xor
mov
mov
mov
pop
jge
stos
or
shll
ljmp
sub
cmp
pushf
hlt
mov
adc
xor
fistl
sahf
out
jo
sbb
aaa
dec
push
pop
adc
stos
rcr
push
imul
add
and
dec
mov
add
ret
mov
loopne
int3
stos
in
lock
add
call
cmp
jo
int3
mov
int3
stc
aam
cmc
mov
push
adc
and
adc
mov
jecxz
into
cwtl
add
xchg
cli
mov
out
cmp
mov
nop
pop
mov
mov
aas
mov
sub
subb
jl
stos
adc
cmp
out
push
in
lea
das
sbb
cmp
lcall
xor
push
pop
insb
addr16
fiaddl
jecxz
ljmp
xor
xor
pushl
cli
jmp
mov
pop
into
mov
or
push
roll
adc
fst
rclb
xor
mov
cmc
in
pushf
push
xchg
jmp
pop
jo
lods
rcrl
push
push
mov
add
dec
inc
dec
popa
jo
je
imul
inc
gs
jns
je
insl
push
imul
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
insb
jae
jb
popa
je
add
add
gs
je
inc
imul
mov
mov
fadd
or
push
frstor
xor
pop
pop
sbb
lcall
jbe
xchg
mov
pushf
shll
jl
mov
mov
stos
adc
adc
inc
dec
fsts
jmp
push
mov
fsubrs
push
pusha
in
xchg
push
into
sarl
test
jg
xor
mov
add
dec
jae
popa
fs
jb
je
push
je
add
mov
jmp
mov
push
test
call
add
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
cs
jmp
add
push
gs
arpl
insb
insb
push
popa
outsb
add
add
je
jns
inc
outsl
insb
outsl
jb
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
push
gs
outsl
jb
inc
inc
add
add
ja
gs
inc
add
and
jg
pusha
pushf
pushf
lea
jae
cmp
pusha
test
cmp
movb
movb
lea
jae
ja
pushf
inc
lea
not
mov
jmp
add
push
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
add
outsl
bound
inc
jb
gs
clc
cmp
movb
pushf
mov
lea
jae
push
pushf
lea
jmp
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
je
add
je
add
fs
jmp
add
inc
gs
outsl
jo
imul
add
popa
jo
gs
insb
insb
outsl
arpl
pushf
movl
pushf
pusha
pushl
lea
jmp
lea
je
cmp
test
add
test
cmp
clc
cmp
cmp
call
add
inc
jb
popa
je
push
arpl
outsb
add
mov
inc
daa
ljmp
sti
int3
lods
jge
cmp
movsb
rolb
xor
subl
pop
mov
shll
orb
xor
inc
lds
sahf
in
xchg
ss
sbb
mov
or
mov
mov
push
out
cmp
loope
jb
or
push
jns
leave
dec
adc
in
mov
outsb
fs
popa
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
push
je
outsb
push
arpl
add
mov
push
jmp
add
dec
outsl
arpl
inc
jb
add
add
gs
je
push
jb
arpl
jae
add
test
mov
cmp
jbe
idiv
push
lods
sub
jb
aam
lods
repz
mov
and
inc
pop
popf
es
iret
sub
lods
mov
jecxz
pop
mov
adc
push
stos
cmp
orl
pop
or
mov
pop
push
shrb
loope
mov
pushfw
incb
jns
xchg
mov
les
nop
sbb
les
lock
xor
fcmovb
outsl
pusha
push
jb
fs
sub
pushf
je
icebp
out
repz
xchg
and
pop
fadds
jle
clc
sbb
mov
jo
jecxz
lahf
aaa
sbb
outsl
nop
jecxz
das
insb
mov
cmp
into
cwtl
jno
rol
or
fldcw
mov
ficompl
fscale
negb
sbbb
add
lret
and
jnp
clc
ret
jle
xchg
outsl
sbb
ljmp
jp
push
dec
xchg
and
push
add
cmp
jp
rcrl
aad
inc
jle
pop
pop
and
movsb
xchg
das
adcb
xor
popa
je
and
cmp
enter
pop
xor
loopne
xchg
jmp
sub
dec
jb
pop
adc
aad
sbb
mov
xchg
nop
jecxz
test
jmp
xchg
add
je
xchg
cmp
jg
push
sbb
test
daa
in
iret
lret
push
gs
jo
outsb
dec
gs
js
add
add
fs
je
imul
xor
int3
jne
mov
icebp
inc
insb
jl
fwait
mov
inc
inc
roll
mov
mov
repz
es
fcoml
gs
inc
arpl
call
aam
subl
out
arpl
dec
pop
mov
pop
lds
stos
mov
sub
in
add
je
jne
jb
outsb
je
push
dec
add
add
je
inc
push
add
add
gs
je
push
push
add
xchg
add
push
lea
jne
lea
mov
and
sub
sar
mov
add
mov
bt
pushf
sub
test
pushl
popl
pusha
bt
call
add
push
imul
outsl
insl
push
outsl
imul
gs
ja
imul
add
jae
dec
gs
popa
addr16
add
mov
xor
cltd
into
inc
mov
xor
mov
cmp
imul
insb
jne
push
aaa
dec
add
movsb
int3
xchg
sbb
pop
jge
jecxz
jmp
sahf
insl
pusha
mov
mov
push
inc
push
aas
xor
mov
mull
std
pop
inc
lods
test
les
out
dec
dec
push
decb
iret
jae
aas
mov
aad
or
aas
mov
jg
push
or
add
std
bswap
xchg
sub
sahf
cmp
mov
or
mov
push
test
pop
or
mov
xchg
shlb
mov
mov
pop
jle
inc
pushf
add
hlt
pusha
push
mov
xchg
addl
test
repnz
xor
movsb
mov
jno
push
xchg
arpl
sub
ret
push
cmpb
jae
sub
fs
pop
pop
mov
jb
aaa
cs
or
xor
pop
adc
std
mov
shlb
lods
or
xchg
sub
or
mov
fstpt
inc
roll
lret
dec
lahf
pop
enter
pop
out
stos
pusha
add
ret
mov
ja
out
xchg
or
movsb
fimuls
mov
cmp
adc
in
mov
cmp
hlt
pushf
aad
shlb
add
leave
jnp
dec
lcall
xor
add
scas
and
add
add
je
arpl
insb
insb
push
popa
outsb
add
add
push
imul
add
insl
imul
insl
push
jb
jo
jb
jns
jmp
add
inc
jb
popa
je
inc
imul
add
stc
add
mov
pushf
pushf
call
add
ja
jo
imul
ror
neg
mov
xchg
setno
bts
mov
test
jmp
add
inc
jb
popa
je
dec
outsb
jne
add
push
imul
jb
add
subb
movl
and
jp
arpl
or
fs
je
test
cmp
jmp
bsr
mov
push
movb
cmpb
pusha
lea
jne
shr
rcr
xor
not
mov
xor
test
shr
add
neg
test
sar
jmp
add
inc
push
inc
outsl
insb
outsl
jb
add
cmp
call
mov
rol
movzbw
bt
shr
lea
bsr
bt
stc
stc
mov
call
add
push
gs
insl
gs
push
add
adc
add
call
add
inc
gs
imul
outsl
jb
lea
call
pusha
pusha
pushf
mov
adc
push
pushf
mov
jmp
add
inc
gs
popa
jb
outsb
je
add
push
arpl
insb
insb
push
imul
add
mov
or
cld
push
pop
call
mov
adc
jmp
sbb
cmp
out
cmp
icebp
dec
pop
lret
mov
iret
mov
ds
sbb
xchg
or
fs
addr16
push
lods
insb
out
mov
filds
pop
xor
push
stos
mov
xor
insl
sbb
dec
xchg
cli
data16
cmp
sub
mov
lcall
pusha
lea
jmp
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
add
je
jne
inc
add
add
je
popa
jb
outsb
je
add
push
popa
imul
insb
gs
bound
arpl
add
je
gs
inc
insb
addr16
popa
bound
gs
add
ret
inc
and
movsl
popf
jg
clc
pushw
popfw
call
add
push
gs
dec
push
xor
add
inc
gs
outsl
insb
jns
imul
add
push
gs
outsl
arpl
add
dec
inc
jno
inc
pop
lods
push
mov
fdivrl
xor
cmp
clc
or
or
adc
faddl
inc
stos
mov
xor
cmp
hlt
push
add
dec
dec
adcl
inc
mov
inc
adc
aaa
int3
icebp
fidivrl
mov
cmp
mov
xchg
mov
in
xchg
jmp
xchg
fcmovbe
add
jno
fisttpl
pop
mov
cmp
insl
adc
cli
loopne
add
sti
int
push
xor
adc
xor
jno
and
jno,pn
das
cli
xchg
xchg
pop
adc
cmc
stc
sbb
adc
mov
xor
dec
add
jns
cmp
cmp
inc
mov
dec
pop
jp
movsl
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
aas
clc
jbe
ljmp
rol
mov
cmp
xchg
xor
shll
addl
and
fcoms
sbb
xor
and
xchg
push
or
add
dec
dec
stc
dec
hlt
or
divl
ret
psadbw
repz
cltd
push
cmp
dec
add
hlt
stc
call
or
push
imull
loope
jno
and
dec
cld
and
sbb
xor
cmp
mov
adc
ljmp
mov
popa
ucomiss
or
in
fcmovu
decl
das
lods
fcoms
lods
or
xor
es
inc
repz
or
inc
dec
xchg
xchg
fwait
lahf
jmp
pop
lods
inc
int
js
popf
lea
sub
jl
stos
iret
lods
gs
mov
pop
popf
sahf
mov
in
jns
mov
pop
orl
xchg
mov
roll
dec
jg
popf
jl
mov
xchg
lods
movsb
push
mov
ja
xchg
xchg
movsb
jno
jl
xchg
mov
popf
add
add
in
add
test
mov
add
pop
imul
sub
add
push
pop
push
push
push
lds
adc
add
fldenv
cld
loopne
test
daa
or
sbb
sbb
fstl
std
and
dec
pop
icebp
mov
mov
lea
mov
cmp
and
push
add
int
jne
pop
pop
xor
mov
lds
push
sbb
subl
inc
mov
aad
cmp
dec
adc
cmp
mov
dec
xchg
and
lods
insb
icebp
cmp
stc
and
jno
test
cmp
jl
cmp
xchg
jns
cmpl
sbb
jne
jno
insl
adc
scas
shr
dec
push
pusha
xchg
adc
jne
jl
out
push
jge
dec
cmp
clc
push
jnp
dec
sbb
and
jle
jo
test
adc
lahf
fnstcw
mov
xchg
adc
adc
inc
mov
mov
fnstenv
popa
inc
lock
sbb
dec
fistpll
lods
push
sarb
pop
scas
fisubrs
je
xchg
adc
push
imul
gs
dec
loopne
adc
jae
xor
ss
dec
sbb
dec
adc
jo
bnd
jge
jp
jge
adc
mov
inc
lods
add
xchg
mov
xchg
adc
jmp
push
test
mov
repz
test
ljmp
mov
push
add
lea
fimuls
movsb
mov
jg
loop
dec
push
mov
in
cmp
jb
jns
push
dec
pop
stc
loopne
jmp
dec
xchg
pusha
mov
popf
mov
fwait
scas
std
enter
imul
fcoml
std
rcrl
jbe
jnp
cmp
test
add
add
cmp
dec
xor
dec
int
lea
adcl
test
adc
into
inc
lahf
fsts
pop
push
rcrl
push
test
aad
dec
jmp
dec
xor
das
mov
in
cmp
dec
cmp
sub
shlb
sub
mov
adc
fbstp
cmp
dec
cmp
in
nop
mov
add
pop
inc
cmp
mov
imul
cs
cmpsb
mov
push
sub
les
dec
mov
cmp
fmull
push
xor
lahf
cmp
cmp
cltd
sbb
or
in
cmp
gs
pop
inc
xchg
dec
stc
jnp
aas
sbb
sub
clc
aas
sarb
ds
ds
outsb
sbb
xchg
outsb
insl
cs
dec
jae
ja
push
rorl
pop
inc
dec
push
loop
xchg
popf
jnp
cmp
jae
std
or
in
xor
xor
insb
dec
flds
jge
aas
adc
pop
jne
shll
add
les
cmp
push
movsb
xor
mov
rclb
xor
push
dec
dec
dec
lret
cmp
imul
mov
jnp
mov
adc
dec
dec
cmpsb
loop
enter
xlat
inc
lret
or
cmpsl
in
and
or
test
cmp
and
inc
and
or
es
adc
cmp
pop
and
cmp
cmpsb
fnstcw
jae
adc
in
pop
in
sub
push
leave
xor
cmp
sbb
adc
inc
pop
dec
int
mov
mov
push
enter
into
scas
fsubrs
dec
fisubs
sub
jg
add
jbe
movsl
scas
fwait
xor
mov
cmp
insl
enter
loopne
addl
inc
call
fidivrs
dec
insb
popa
fbstp
dec
rcr
sub
mov
inc
test
dec
dec
mov
popa
loope
cmp
push
push
std
xor
xchg
inc
xor
push
add
scas
sub
xor
mov
fnstcw
xchg
xchg
adc
mov
cld
stos
and
cmpsb
pushf
xchg
fwait
aas
clc
js
bound
iret
out
rorl
cmc
sub
ror
mov
out
and
inc
add
sti
imul
loope
daa
sub
fnstcw
rcr
or
or
in
pop
cmp
mov
aas
dec
fisubrl
add
add
inc
mov
repz
mov
and
loope
pop
xor
test
cli
out
sbb
xchg
lcall
out
inc
cmp
push
or
pop
mov
mov
push
add
xlat
lret
or
test
cmp
jno
subl
sub
or
add
ja
jne
xor
add
fsubr
inc
fimull
jb
ljmp
icebp
mov
dec
aad
lea
jle
push
sbb
jmp
daa
pop
cli
xor
jnp
mov
arpl
gs
imulb
fdiv
std
fidivl
leave
test
or
adc
cmp
pop
icebp
mov
insl
sbb
je
pop
leave
adc
sti
add
adc
loope
sbb
xor
add
cmp
insb
mov
push
push
insl
add
rcll
pop
push
mov
pop
jae
jae
cmc
dec
jbe
lea
imul
popf
pop
cmp
mov
dec
loope
not
cmp
xchg
xor
sbb
mov
dec
cmp
add
sbb
xchg
movl
stos
sub
pop
cltd
popf
pop
mov
or
xchg
xchg
popf
adc
int3
cltd
fsubl
xorl
aad
cld
jns
std
inc
mov
aas
mov
stos
mov
mov
mov
inc
mov
lods
ret
fwait
xchg
or
xchg
jne
pushf
add
xor
fcomp
out
adc
ss
adc
sbb
dec
pop
dec
ljmp
or
sub
push
xlat
xchg
xchg
xor
loope
andl
dec
sub
stos
jno
add
dec
aaa
negl
repz
and
es
int
cmp
shl
dec
ficoms
stos
fsubs
push
mov
cmp
rcll
jne
insl
insl
jno
addb
jge
xchg
mov
adc
cltd
cmpb
fwait
sub
add
mov
std
hlt
add
sub
push
lret
fwait
xchg
cwtl
mov
shll
xchg
cmp
dec
lea
dec
mov
mov
addb
jecxz
inc
xor
inc
push
or
push
push
jae
jns
jno
fstpt
gs
push
push
or
cltd
mov
hlt
dec
adc
xor
or
jno
or
sub
add
jmp
jecxz
dec
or
xchg
stos
ret
or
or
jo
fadds
test
sbb
inc
inc
stc
cmp
hlt
sbb
stc
shl
insl
jmp
cmpsl
orl
stos
inc
bound
xor
jmp
aaa
inc
push
dec
in
insl
aas
push
or
aas
mov
lcall
pusha
rcll
lds
stos
das
pop
jo,pt
mov
mov
inc
stos
mov
sarl
adc
dec
push
aaa
ficomps
sbbb
jno
daa
lods
xchg
xchg
inc
jp
test
cmp
cmp
push
pop
cltd
pop
dec
mov
cmc
jne
lea
xor
jo
sub
outsb
mov
cmpl
or
das
cmp
insl
das
test
push
aaa
movsl
rorb
and
sub
xchg
ja
xor
jl
ficomps
mov
rorb
ret
push
mov
mov
mov
popa
clc
jno
push
push
sub
xchg
xor
aad
cmp
xchg
test
mov
xorb
cmp
or
sahf
jbe
in
sbb
test
cmp
push
cli
inc
pop
xor
js
inc
inc
jns
scas
jmp
xor
and
stos
insl
int3
aad
xchg
xor
jno
push
sub
or
pusha
insl
jb
cmp
mov
dec
icebp
dec
cmp
mov
mov
and
ds
outsl
test
jbe
xchg
sbb
ljmp
outsl
mov
nop
sbbl
push
int
mov
jno
pop
mov
aas
push
lods
pop
lret
dec
cmp
cltd
cmp
push
int
mov
xor
add
jnp
push
inc
icebp
insl
dec
int
and
insl
cmp
mov
ja
inc
mov
test
cltd
push
sahf
sahf
movsb
mov
sbb
pop
mov
cmp
jle
pop
inc
mov
std
jns
mov
cltd
stc
cmp
or
mov
lahf
ja
fwait
sahf
cmpsb
and
popf
shrb
insb
lods
pop
mov
ret
xor
xchg
ret
adcl
lret
mov
lea
cmp
cmp
loop
xor
dec
insl
mov
mov
mov
mov
lret
cmp
insl
dec
jns
jmp
mov
ret
out
test
jle
mov
or
xor
add
mov
inc
push
or
dec
imul
lea
dec
cmp
insl
ss
mov
cmp
insl
xor
mov
xor
mov
cmp
insl
jns,pt
mov
cmp
lea
add
insl
cmp
fnstsw
data16
addr16
insl
push
imul
in
arpl
jmp
mov
outsb
mov
outsl
cmp
mov
push
mov
cmp
insl
insb
jns
mov
push
lods
mov
cmp
mov
push
xorl
lea
pop
jns
mov
popa
pop
mov
push
push
lea
pop
cmp
xchg
mov
mov
lea
xchg
cwtl
cltd
xchg
xchg
xchg
push
xchg
sahf
lahf
mov
dec
mov
leave
ret
gs
aas
dec
inc
ds
jne
mov
dec
dec
push
mov
pop
mov
mov
test
push
push
push
insl
push
insb
jo
imul
pop
push
pop
push
outsl
pop
push
popa
mov
pop
outsb
pop
pusha
push
sti
jno
ss
cwtl
xchg
xchg
xchg
push
stos
fwait
xchg
ret
stos
mov
arpl
outsl
jo
gs
insb
dec
lds
dec
inc
arpl
mov
dec
ljmp
fstpl
dec
mov
popf
imul
imul
inc
gs
dec
gs
cmp
cmp
xor
cmp
dec
ret
bound
xor
sbb
dec
sarb
aas
jno
out
js
insb
pusha
rcrl
shrw
jnp
xor
cmp
cmp
arpl
sarl
orb
cmp
pop
gs
adc
xor
dec
push
push
shll
cmp
imul
jp
out
imul
cmp
shrl
es
dec
outsl
push
cmp
add
jnp
push
jno
test
inc
lods
xchg
insl
fmuls
insb
inc
jmp
add
arpl
push
data16
push
inc
push
int
push
sarl
nop
pop
insl
dec
pop
imul
pop
stos
xchg
test
ret
mov
mov
pop
stc
pop
stos
xchg
es
icebp
icebp
dec
cmp
cmp
pusha
stc
fs
mov
pop
test
cmp
dec
shll
lret
jge
dec
sbb
aaa
pop
leave
pop
fsubrs
push
dec
sub
addb
dec
ja
test
mov
jno
fimuls
pop
rcrl
rorl
in
xchg
sbbb
dec
orl
jbe
pop
dec
test
insl
pop
dec
rcrl
nop
popl
repz
mov
mov
mov
insb
mov
dec
mov
inc
in
outsw
dec
fidivrl
push
jno
nop
rol
mov
jbe
dec
inc
imul
jo
bound
ja
xor
out
mov
in
jb
jle
sbb
pop
jae
ds
dec
shrl
mov
out
dec
mov
sarl
aaa
jle
jg
insb
dec
sbbb
bound
rorw
repz
dec
mov
lods
insl
jp
xchg
inc
pop
aad
mov
jl
jge
dec
xchg
and
ljmp
bound
cmpsl
pop
cmp
orl
push
jo
shll
test
dec
mov
xor
imul
xor
cs
pop
dec
mov
xor
cmp
ja
sbb
xor
dec
pop
fimull
out
xchg
inc
xchg
jo
rorl
pop
dec
fstps
dec
lahf
cltd
xchg
call
xchg
xchg
dec
cmpsl
xchg
xor
dec
sbb
cmp
aaa
lahf
mov
scas
dec
cmp
cmpsl
push
mov
bound
popf
nop
jl
repz
dec
and
rcr
aas
inc
enter
ret
sub
dec
test
in
or
push
ss
lods
mov
les
std
rorb
lds
shll
sarl
iret
lret
dec
shlb
bound
inc
pop
ds
lret
and
fs
aaa
push
push
arpl
imul
gs
insb
mov
push
cmp
jo
dec
bound
dec
outsb
orb
fwait
push
insl
insl
lds
xor
push
pop
dec
bound
xor
cmp
fs
mov
fldt
mov
mov
xor
bound
push
mov
bound
mov
push
ret
stc
push
add
aas
test
dec
push
and
stc
pop
movsl
xchg
out
pop
lds
mov
adc
jl
mov
stc
push
ret
pop
cmp
xchg
dec
pop
in
aaa
in
aaa
push
sub
test
jbe
fwait
xor
aaa
imul
mov
cmp
in
in
js
dec
stc
jo
bound
xchg
xlat
dec
mov
xlat
jae
cmp
push
push
gs
rcl
cmp
rcrl
outsl
iret
pop
mov
rcl
aaa
imul
aad
dec
sub
cs
nop
push
mov
xor
loopne
xor
repz
neg
gs
arpl
imul
inc
bound
mov
fldl
push
cmp
pop
roll
push
pusha
out
dec
iret
pop
mov
pop
sub
test
ss
bound
sub
xor
mov
xor
sarl
add
pop
gs
add
add
jno
jo
bound
rcr
xor
push
mov
pop
ds
and
dec
adc
imul
aas
jo
mov
rorl
test
inc
testl
mov
repz
cmp
dec
ss
shl
leave
addr16
rorb
cmp
das
mov
pushl
aas
add
xor
cli
sarl
push
loopne
xor
sarl
test
jno,pn
ss
aaa
es
pop
mov
mov
scas
mov
sub
mov
cmpsl
dec
pop
and
cmp
arpl
imul
lock
pop
add
sbb
pop
pop
pop
dec
and
and
fs
mov
imul
jo
bound
bound
das
in
ds
mov
xor
dec
inc
imul
pop
sub
dec
insb
jo
jo
sub
roll
bound
sub
xor
pop
sarl
aaa
sbb
sbb
jecxz
ds
notb
pushf
pop
adc
test
dec
lods
mov
icebp
push
rcrl
fidivrs
mov
ss
lahf
and
ss
cmp
pop
gs
mov
sbb
xchg
sarb
sbb
sbb
dec
stc
outsb
sub
sarl
push
push
dec
mov
pop
bound
push
dec
cmp
push
dec
rcr
xor
cmovnp
shrl
lcall
mov
fdivrs
insb
push
bound
xchg
push
popa
jnp
fistl
mov
lods
pop
pusha
insb
pop
mov
lods
push
jns
or
roll
pop
dec
popf
inc
xchg
dec
iret
dec
in
cmp
dec
stc
fs
loop
imul
stc
jno
xor
cmp
dec
imul
dec
arpl
dec
ja
mov
dec
or
xchg
repnz
mov
xor
xor
cmp
xor
push
fimull
ljmp
inc
lret
push
icebp
dec
inc
lret
xor
jnp
inc
mov
dec
jp
adc
cmp
pop
ret
mov
lret
push
fmuls
pop
aad
lahf
movsl
loop
push
imul
repz
dec
mull
mov
dec
bound
lret
cmp
cmpsb
mov
or
outsl
repz
xchg
mov
dec
divl
mov
push
cltd
push
dec
and
sbb
sbb
xor
xor
stc
mov
insb
mov
insl
pop
xchg
push
leave
mov
dec
mov
out
mov
dec
pop
ds
cmp
xor
lret
stc
arpl
imul
push
pusha
dec
fs
push
pop
xlat
ss
jno
jo
bound
gs
pop
outsb
pusha
mov
push
jp
out
outsb
pop
insb
mov
cmp
pop
jl
sbb
shll
imul
insb
pop
xor
shrb
dec
addb
dec
cmp
dec
mov
xor
jno
movsb
dec
insb
mov
test
imul
mov
xor
insl
dec
lcall
pop
mov
imul
bound
dec
data16
pop
rorl
sarb
outsb
jne
mov
jbe
insl
test
imul
imul
mov
mov
jg
dec
adc
inc
xchg
xor
pushw
sub
gs
addr16
xchg
push
ss
dec
xchg
movsl
xchg
mov
add
ds
push
xor
jns
andl
inc
or
insb
je
jmp
jo
inc
popa
call
jns
imul
leave
pop
test
jmp
pop
mov
xor
push
jne
pop
dec
push
ss
push
lods
inc
ja
popf
lods
xchg
cmp
xchg
xor
push
mov
cmp
pusha
test
sub
inc
ds
mov
xor
int
inc
mov
sti
leave
ror
xchg
jg
mov
adc
jg
jmp
xor
popf
inc
push
lods
dec
mov
mov
pop
cmp
mov
lret
inc
push
cmp
xor
push
push
ds
inc
pop
cmp
xor
pusha
subl
pop
xor
pop
xor
dec
xor
and
push
in
pop
inc
bswap
push
cmp
push
pop
pop
cmc
mov
cmp
aas
pop
pop
xor
and
mov
mov
fcomi
dec
xchg
push
pop
aaa
mov
aad
push
outsb
inc
sbb
sub
cmp
pop
cmp
pop
xor
pop
arpl
cmp
jecxz
mov
jp
ds
fldenv
aas
pop
dec
jo
adc
add
mov
push
in
rcll
or
mov
movsl
cmp
stos
dec
mov
mov
aaa
imul
int
dec
mov
loope
cs
fnstsw
sbb
lahf
in
and
jnp
pop
jl
mov
aaa
sbb
jns
popf
stos
or
insl
jge
pop
imul
repnz
popa
adc
sbb
jns
stos
push
pop
cmpsl
mov
pusha
cmpsb
sub
push
stos
icebp
lds
adc
xor
sbb
cmp
pop
jmp
mov
and
xor
pop
leave
jns
ss
push
aaa
fs
sub
shll
outsb
repnz
pop
jns
pop
das
dec
push
std
pop
ds
pop
cmp
cmp
jecxz
in
fistpl
cmpsl
ds
mov
xchg
call
or
pop
cmp
push
jmp
jne
mov
dec
insl
cmp
sbb
jge
sub
repz
dec
out
arpl
pop
icebp
in
lahf
sub
sti
iret
mov
insl
bound
out
dec
cmp
mov
jns
aaa
jge
add
pop
inc
jb
and
xchg
shrl
xchg
cmp
addr16
push
repz
push
and
sbb
xchg
icebp
int
icebp
scas
sbb
pop
stc
xchg
or
push
jae
add
jb
jb
jp
dec
in
or
push
in
insl
cmp
int
xor
mov
mov
mov
stos
sbb
dec
popa
int
repnz
mov
sbb
pop
pop
push
or
push
jno
add
push
jno
push
jmp
stc
jo
fcmovbe
data16
and
or
jno
lret
jmp
xchg
xor
clc
pop
jo
cwtl
imul
cmpsb
adc
insl
icebp
popf
std
repnz
cmp
cltd
sahf
lret
jno
cmp
inc
imul
mov
sahf
shrl
addl
jmp
outsl
pop
xchg
push
insl
push
jo
inc
cmp
jno
jno
gs
dec
clc
pop
sahf
mov
adc
bound
mov
cmp
inc
imul
sbbl
std
stos
xor
cmp
pop
cmc
cmc
cmp
inc
cmp
xchg
mov
jne
sarl
imul
mull
push
cmp
sti
cmp
xor
dec
push
fistl
push
mov
lret
leave
cmp
cmp
sbbb
pop
xor
loope
or
lahf
jno
dec
sbb
stos
icebp
int
pusha
mov
dec
mov
push
aaa
fld
lret
decl
int
ss
dec
push
insb
or
xor
imul
out
or
pop
stos
sbb
std
popf
sahf
ss
push
mov
xor
cmp
lret
cmp
jge
cltd
or
mov
fnstcw
cmp
lret
popf
stos
fnsave
inc
and
or
xor
pop
arpl
pop
xor
mov
aam
jp
loope
arpl
sub
dec
cmp
xor
lea
push
ficoms
stos
daa
push
outsl
pop
and
pop
mov
leave
popf
std
jbe
ret
subl
dec
push
enter
cltd
mov
sub
xor
pop
mov
or
pop
leave
lret
ret
stos
aaa
lcall
pop
ds
mov
jmp
daa
and
lds
jp
push
inc
jp
jmp
jmp
and
jmp
outsl
iret
or
sbb
fildll
cmp
repnz
dec
insl
add
add
mov
cld
pop
imul
mov
lret
fs
mov
dec
lret
mov
fcomp
or
int3
iret
dec
xor
xor
stos
jg
xor
aaa
out
out
jge
je
xchg
insb
lods
mov
rorl
xor
sub
aas
jge
jae
mov
push
mov
addr16
cmc
mov
lret
and
das
outsl
push
push
cmp
cmp
cmp
mov
xor
fnstcw
in
mov
in
fistpl
dec
bound
xchg
test
mov
maxps
mov
shl
inc
insl
repz
push
jno
jne
pop
jp
mov
xor
popa
int
xchg
jno
in
cmp
in
or
push
pop
xchg
icebp
pop
jnp
adc
jmp
or
ja
xor
mov
and
sub
push
aas
pop
scas
fs
mov
repnz
out
cmp
jle
pop
popf
lea
inc
aad
aas
mov
sahf
pop
sbb
xchg
and
sbb
mov
dec
inc
xchg
shrl
iret
add
inc
cltd
imul
inc
notl
xchg
insl
mov
popf
jmp
shll
ja
jge
icebp
cmp
gs
xor
cmp
add
and
inc
mov
lock
aad
ja
mov
repnz
and
bound
popa
mov
and
fistl
lret
jne
jne
jae
or
aaa
icebp
jns
shl
ds
jns
mov
popa
inc
pop
add
roll
xchg
test
xchg
lods
xchg
test
bound
fxam
popf
jne
jmp
test
lret
or
pop
jb
pop
jne
jne
jne
lret
push
popa
jne
jns
sbbl
cltd
int3
lret
or
jle
add
pop
jnp
jnp
and
aas
lods
push
cmp
pop
mov
jecxz
jle
jne
jp
jno
dec
sarl
test
popa
mov
and
cmp
and
out
cmp
out
dec
dec
pop
insl
in
ss
mov
dec
or
inc
inc
popf
sbb
xor
push
aas
xor
in
movsl
push
dec
adc
pop
xchg
in
or
push
lret
lret
adc
xlat
fldl2e
shl
cmp
xchg
xlat
fistps
pop
loop
push
xchg
mov
aam
push
cltd
sti
or
push
cmp
and
cmp
fbld
addr16
cmp
push
xchg
xor
fwait
out
pop
mov
test
mov
or
int
out
std
aaa
data16
cmpsb
pop
jge
jnp
jne
insl
push
pop
lods
gs
outsb
out
cmp
inc
xor
cmp
test
or
inc
or
jecxz
in
xor
out
in
addr16
mov
shl
jg
in
cmp
dec
outsb
mov
cmp
xor
mov
ds
stc
popa
and
push
cmp
dec
fldenv
jns
xchg
leave
loope
in
mov
repnz
iret
stos
cltd
add
mov
push
or
dec
mov
hlt
mov
xor
ret
int
add
sbb
int
inc
dec
gs
aas
jno
sub
mov
aas
pop
ss
sbb
icebp
test
cltd
adc
and
xchg
push
cmp
xlat
movsb
out
jge
icebp
pop
pop
sub
xchg
cmp
inc
inc
mov
mov
lods
jmp
mov
je
aad
sbb
sarl
xchg
cmp
add
jns
xchg
sub
jne
pop
pop
outsb
std
call
add
pop
shl
lret
add
icebp
testb
std
in
aad
ljmp
popa
dec
inc
fs
xchg
pop
cmp
into
xchg
popa
fxtract
and
imul
or
inc
push
lret
jae
cmp
pop
lahf
cmp
cmc
push
stos
dec
jge
fprem1
loope
jmp
mov
lods
jmp
test
aad
xchg
xor
jmp
lret
push
stos
xor
fnstcw
mov
pop
int
dec
icebp
aad
xor
xor
mov
fildl
jb
pop
pop
popa
mov
insl
jmp
cmp
lret
xlat
mov
jno
push
cmp
jne
pop
xchg
aaa
or
lret
xor
dec
hlt
stos
mov
pop
js
popa
ss
out
add
cmc
out
movsl
mov
jp
js
sahf
dec
icebp
icebp
idivl
cmp
aad
push
push
insl
jmp
jecxz
shl
cmp
cmp
jb
push
in
jle
pop
add
pop
push
lea
int
lret
pop
dec
addl
daa
xchg
mov
jo
mov
movsl
mov
or
adc
imul
add
jns
push
cmp
insl
pop
adcl
lret
lret
fcmovnbe
mov
and
cmp
insb
xor
aaa
addl
aaa
adc
lret
bound
cmp
cmp
inc
les
imul
cld
or
std
or
aaa
shlb
xor
rorl
insb
pop
mov
adc
mov
aaa
mov
adc
loopne
lret
aad
mov
xchg
lods
xchg
loope
in
imul
std
xchg
cmp
cmp
in
in
pop
xchg
nop
scas
adc
loope
cmp
test
push
fcmovnbe
cmp
mov
data16
add
mov
push
and
xor
jno
leave
addr16
loope
mov
sbb
mov
fs
pop
xor
jge
push
xchg
pop
sub
subl
loope
xor
xor
mov
mov
xor
iretw
fwait
jno
daa
push
inc
sti
orl
stos
inc
push
mov
fmul
rorl
push
int
lret
push
aaa
mov
jecxz
fnsave
xor
rol
pop
jg
ja
or
fdivrs
addr16
outsl
jne
pop
fisttps
mov
pusha
or
in
cltd
mov
arpl
sbb
ljmp
sub
mov
pop
rcll
in
popa
jmp
in
fwait
jge
lahf
aaa
cmp
lret
mov
jg
mov
xor
cltd
aaa
or
lds
or
lretw
adc
mov
out
mov
inc
push
xchg
daa
insl
arpl
jae
cmp
repz
add
arpl
arpl
jle
add
imul
mov
jne
jo
cmp
mov
addr16
xor
push
pop
mov
jge
or
shrd
mov
imul
test
fsts
push
faddl
xchg
and
int
lret
fs
andl
jg
mov
mov
mov
insl
cmc
mov
lret
imul
repz
cmp
dec
cmpsl
pop
cmp
xchg
popl
jae
mov
or
lret
out
int
aaa
sbb
jecxz
fstl
or
cltd
lock
aad
arpl
pop
out
int
mov
cmp
cmp
jl
xor
insl
dec
insb
daa
mov
add
cmc
ficompl
insl
ss
push
aas
ljmp
dec
mov
push
xor
and
push
inc
xchg
sub
out
push
dec
outsb
aas
xchg
cmp
xchg
movsl
test
jns
xchg
in
sar
imul
adc
addb
dec
xchg
mov
lea
add
not
out
sbb
inc
add
call
sarl
push
arpl
ds
in
add
popa
ss
ds
pop
insl
push
push
leave
in
push
push
cmp
addr16
cmp
push
jno
pop
jnp
fildll
jno
or
or
mov
add
jge
loopne
xchg
sub
xor
nop
or
mov
sbbl
xchg
lret
stc
lret
mov
inc
inc
push
ficoms
and
mov
jno
dec
sbb
lods
jp
ficomps
imul
data16
jns
lea
aas
xor
mov
xchg
icebp
jmp
dec
pop
cltd
inc
int
data16
ror
cmp
pop
subl
mov
das
inc
insl
imul
cmc
daa
insl
mov
xor
daa
sub
aas
inc
xlat
push
adc
sub
stos
xorl
mov
aam
lret
xor
lea
push
push
inc
push
shll
lods
mov
outsb
hlt
pcmpeqw
cmc
or
add
sub
stos
mov
mov
push
xchg
ss
imul
pop
sar
push
mov
cmp
mov
outsb
jmp
mov
mov
sarl
fwait
jae
cli
inc
jno
lods
cmp
add
in
pop
bound
loope
push
gs
add
cli
cmpsb
into
mov
jns
jno
xor
and
daa
mov
sub
inc
nop
or
sti
int
jno
std
gs
inc
addl
xor
or
pusha
pop
gs
aas
fidivrs
std
or
and
cmp
stos
or
cmp
xor
mov
jg
xchg
push
repz
push
cmp
push
mov
push
loop
cmp
xlat
inc
pop
xor
xchg
leave
stos
xor
mov
negl
mov
test
push
or
mov
cmpl
bound
cmp
inc
sbb
mov
out
pushw
dec
sti
mov
daa
sub
loopne
flds
flds
aas
xchg
xchg
roll
sahf
imul
insl
push
aaa
sti
jno
iret
pop
inc
outsl
movsl
in
aas
xchg
loope
leave
and
sub
arpl
add
mov
cltd
push
fildll
sbbl
jne
bound
or
insl
adc
mov
pop
or
test
xchg
xchg
popf
xor
sub
pop
cmp
arpl
sti
xlat
loope
std
jns
ds
jmp
pop
lea
xor
dec
fld1
dec
push
pusha
cmp
outsl
push
mov
push
cmp
lea
xlat
or
and
gs
in
lods
push
iret
add
insl
push
arpl
std
and
adc
jge
dec
xor
jp
push
add
iret
movsl
push
add
aaa
sub
in
jno
sti
imul
pop
data16
outsb
sub
imul
insl
add
xor
pop
lea
mov
insb
mov
stos
sub
and
push
test
mov
cmpsl
cmpl
inc
xchg
xor
xlat
cmp
call
cmp
or
xchg
int3
test
xchg
popa
test
dec
mov
outsb
mov
push
fisubrs
adc
popf
dec
pusha
and
xor
adc
jne
jecxz
fsubrs
jge
je
cmc
sarl
lds
adc
xchg
xchg
xor
push
hlt
pop
cmp
mov
or
add
lret
imul
mov
push
icebp
sbb
sbb
or
cmp
sahf
cltd
xchg
jbe
sub
data16
pop
cs
loope
push
jno
fisttpll
xor
cmp
sub
and
xchg
dec
pop
jmp
shrl
lock
test
cmp
sub
std
jle
sbb
sub
push
add
inc
pop
jl
test
arpl
cmc
xor
mov
or
pop
xor
mov
xchg
sbb
sti
push
mov
cmp
jge
lea
in
pop
xor
in
fimuls
pusha
insb
movsl
mov
push
sub
push
sarl
insb
dec
hlt
in
push
dec
sbb
or
sub
xor
mov
add
leave
mov
pop
jns
insl
sub
ficoms
pop
leave
push
jne
sbb
insl
xchg
mov
pop
fsubrl
xchg
mov
gs
clc
aaa
mov
loope
loope
popf
pop
jge
repz
xchg
dec
lds
sarl
icebp
mov
mov
aad
jge
mov
cltd
outsb
mov
push
test
outsl
or
cmp
std
ds
add
mov
inc
imul
imul
xlat
sahf
fistl
shlb
pop
pop
aaa
sbb
popf
shlb
lea
sarl
cmp
shrb
lods
jp
aaa
sbb
dec
mov
add
cmp
pop
bound
push
aaa
sti
arpl
fidivs
cli
dec
xor
sahf
sarb
xchg
xlat
jge,pt
aaa
mov
movsb
idivl
rorb
mov
nop
rolb
cmp
aaa
hlt
popf
jnp
sbb
and
xor
xchg
xor
cmp
push
insb
and
cmp
aaa
xchg
gs
mov
push
pop
dec
inc
push
or
sbb
aaa
xchg
pop
or
jae
inc
xor
fdivl
mov
push
jmp
push
shll
lea
dec
pop
mov
sbb
daa
cmpsl
jb
or
dec
mov
mov
mov
inc
cmpsb
imul
imull
sbb
repnz
dec
leave
add
cmpsb
insb
xchg
ds
bnd
ja
xor
test
xlat
inc
icebp
pop
test
movsl
ja
push
sbb
int
pop
insb
insl
testl
xor
adc
ds
push
or
xchg
ds
xchg
jnp
ja
pop
push
push
dec
imul
outsl
cli
cmp
aaa
cmp
push
movsl
push
jns
mov
inc
dec
gs
test
jbe
xorl
sub
test
aaa
jmp
lods
loopne
sub
inc
aaa
stc
push
jns
jbe
int
jl
scas
mov
lea
ret
gs
or
bound
bound
imul
mov
pop
inc
jb
xor
pcmpeqw
lret
scas
ds
and
insb
inc
jno
push
addr16
xor
lock
shll
cmp
popf
cli
inc
aaa
push
outsb
xor
and
cmp
test
push
cmp
inc
bound
shrl
mov
jno
xor
mov
inc
addr16
mov
fldcw
push
stos
xchg
fmuls
sbb
aaa
push
xchg
insb
outsb
xchg
mov
push
cmp
aaa
pop
icebp
mov
bound
fs
imul
xorl
jne
ds
sbb
dec
sub
xor
mov
imul
jb
xchg
fldt
pusha
adc
sub
add
push
xor
adc
gs
ds
dec
out
mov
sbbb
push
mov
push
not
ds
popa
xor
cmp
aad
aaa
adc
out
and
or
ljmp
aaa
dec
push
mov
mov
bound
pop
lds
ds
push
rorl
xchg
xor
mov
dec
outsl
push
cmp
jne
lahf
popf
cmpsb
int
xor
insl
or
pop
nop
xchg
arpl
mov
pop
xchg
sbb
pop
add
push
pop
dec
xor
aaa
inc
stos
sarl
pop
test
popf
je
ja
aaa
inc
imul
xor
pop
pop
divl
jnp
mov
push
mov
xor
insl
push
sub
stos
inc
cmp
cmp
sbb
sub
aaa
insb
push
pop
jns
iret
xor
sti
jno
lret
jge
or
pop
xor
repz
insb
aaa
sbb
pop
dec
aaa
dec
push
push
add
lret
inc
pop
pop
sub
sahf
sarl
test
push
mov
sbb
aas
xchg
cmp
push
aaa
cmp
xchg
insb
imul
jge
pop
sti
out
dec
aaa
jae
xor
mov
gs
ljmp
fcmovne
aaa
sub
int
aaa
outsb
jb
sbb
push
xchg
sbb
aaa
cmp
data16
jp,pt
xchg
aad
and
pop
mov
std
xor
fwait
jne
aaa
jge
xchg
pop
mov
jge
int
xchg
add
inc
ljmp
lea
andb
imul
mov
dec
xchg
pop
call
jecxz
cli
fstp
cmp
inc
shll
xchg
push
dec
addr16
icebp
cmp
std
and
jb
lods
stc
imul
insl
mov
movsl
xor
sub
mov
outsl
jno
xor
sub
mov
jae
inc
out
sub
out
mov
lcall
or
sbb
mov
push
mov
and
iret
push
jecxz
mov
mov
bound
cmp
outsb
cmp
ret
xor
lahf
std
or
data16
je
pop
cmp
pop
add
mov
jp
cmp
std
orl
insl
daa
jnp,pt
repz
sub
aaa
push
or
inc
pop
push
imul
int
out
adc
cmp
push
imul
out
aam
push
repz
cmp
push
mov
sarl
jo
cld
out
push
jnp
mov
idivl
popa
mov
jae
fstl
and
int
pop
in
fwait
roll
jns
pop
mov
xor
add
jecxz
fnstsw
mov
inc
aam
fisttps
sarb
dec
test
pop
cmp
xor
dec
fnstsw
cmp
cmp
pop
cmp
pop
daa
xchg
mov
repz
in
push
test
repz
mov
ret
ds
mov
ret
lods
cmpsl
scas
int
and
leave
push
dec
int
mov
jbe
pop
stos
sarl
jnp
repnz
pop
outsl
and
jns
sbb
pop
jecxz
scas
mov
ja
push
mov
stos
inc
sarl
inc
sub
mov
xor
mov
push
sti
push
lahf
cmp
cmp
stc
fmull
jp
xor
imul
cwtl
push
lea
xor
mov
outsb
or
lahf
loopne
sahf
imul
fwait
push
movsb
pop
cltd
mov
xor
stc
xor
fwait
leave
mov
cmp
icebp
stos
lods
xchg
xor
imul
cmp
pop
movsb
lods
xor
bound
cmp
cmp
mov
jmp
aas
push
fstl
add
clc
or
pop
hlt
int3
nop
shrb
test
inc
mov
push
push
fiaddl
paddusb
dec
xlat
pop
andl
adc
addl
lods
jno
or
and
popa
vmresume
fdivl
fstl
cmpl
pop
sar
add
lcall
scas
sub
jge
mov
cli
dec
imul
cmpsl
test
jns
setns
mov
push
mov
movsb
test
stos
fs
leave
repz
inc
fdivrs
int
or
inc
xor
sub
add
jns
mov
fyl2x
mov
cmp
insl
mov
imul
cmp
mov
pop
jno
imul
xor
int
inc
popa
cmp
sbb
sbb
add
mov
loope
mov
cmp
mov
test
pop
insl
pop
jns
prefetchw
dec
pusha
and
xor
jns
mov
lds
insl
test
mov
mov
xor
cmp
ja
js
jns
jb
jae
mov
cmp
jg
cmpb
jl
jge
cmpsb
insl
cmpsl
jns
mov
mov
rcrl
push
enter
fdivr
loop
xchg
mov
fwait
lea
insl
enter
ret
stc
mov
add
pusha
mov
imul
pcmpeqd
pusha
mov
mov
mov
imul
pcmpeqd
dec
pop
xor
pop
push
jb
cltd
outsl
mov
cltd
xchg
xchg
sub
ja
pop
sub
popa
sub
int
mov
mov
js
stc
pop
inc
pop
jo
pop
sub
xor
les
loopne
adc
fcomp
or
push
lock
cmp
les
shlb
inc
inc
push
testb
xchg
mov
fisttps
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
lds
cmp
mov
mov
jnp
jp
andl
jle
jne
je
jae
jb
jns
js
js
insb
jbe
lea
lods
mov
in
fcos
das
in
sarb
jae
cmp
js
clc
aas
mov
ds
jb
cmp
adc
jo
lds
xorb
mov
cli
mov
push
cmp
ret
push
push
fimull
push
aaa
push
daa
or
adc
mov
frstor
in
fidivrl
test
push
movsl
movsl
pop
push
dec
lods
pushf
xchg
popa
add
sbbl
fwait
push
xchg
jg
push
in
sbb
inc
lahf
mov
mov
sub
sarb
xchg
push
dec
int
pop
icebp
fstps
popf
aas
xchg
test
into
fisttps
mov
push
mov
jnp
push
jle
mov
lods
mov
push
and
add
fcompl
dec
adc
cmp
icebp
jns
mov
int
mov
cmp
mov
dec
mov
mov
insl
cmp
xor
test
cmp
insl
sbb
mov
and
mov
cmp
push
jns
mov
adc
xchg
test
mov
cmp
insl
in
jns
mov
popa
pop
mov
cmp
insl
dec
jns
mov
imul
cmp
insl
xor
mov
das
jge
cmp
mov
imul
std
and
aad
sub
cltd
es
cmp
insl
test
mov
imul
imul
mov
loope
cmc
cmp
insl
hlt
jns
mov
repnz
insl
stc
jns
mov
cmp
dec
imulb
jns
mov
sub
adc
cmp
mov
rorl
lds
push
insl
cltd
jns
mov
lea
mov
cmp
insl
imul
or
lea
jmp
insl
fnstsw
mov
fidivrl
dec
xchg
insl
sbb
sti
push
or
adc
ret
lret
or
xchg
imul
inc
add
jns
adc
jmp
cld
imul
or
lret
cmp
in
addl
sti
loope
lret
xor
adc
push
fdiv
add
scas
dec
mov
fisttpll
add
popa
push
dec
or
xor
outsl
push
frstor
cld
push
adc
insl
roll
sub
cmp
jno
popa
scas
add
add
jns
push
ficomps
cmp
loope
sbb
add
or
fstp
fimull
cmc
dec
cld
inc
fistl
es
xor
stos
pop
adc
lret
clc
loope
push
fwait
nop
in
leave
cmp
daa
pop
loope
add
push
cmpsl
stc
pop
je
push
sub
movsl
jno
les
fcomi
shlb
pop
jno
aad
aas
rcll
sbb
fwait
pop
jno
mov
into
negl
iret
mov
cmp
cmp
xor
loop
js
push
jns
out
add
xor
xor
mov
or
daa
inc
clc
sbb
stc
mov
add
popa
and
out
push
sub
add
add
inc
fstpt
out
outsb
add
lock
sub
aas
cmp
push
ret
sahf
xorl
std
or
dec
jnp
push
mov
ja
jp
xor
ss
cmp
js
sarl
xchg
lods
fldt
cltd
cmp
test
ret
xor
sbb
push
leave
push
jae
jnp
sbb
sub
sbb
sarl
mov
mov
sbb
and
ljmp
jmp
mov
jmp
add
xchg
insb
imul
popa
jns
xchg
push
hlt
and
pop
mov
and
cmp
jmp
mov
leave
popf
shrl
aad
lea
lds
icebp
jnp
roll
mov
aas
adc
repz
test
loop
push
mov
xor
mov
mov
push
fdivrs
imul
mov
and
xchg
popa
mov
imul
outsb
stc
aam
mov
mov
flds
mov
imull
xor
jmp
jle
ljmp
jae
jae
or
mov
sbb
fnstcw
repnz
add
jecxz
lock
jno
daa
popa
ret
dec
imul
daa
sub
sbb
ja
add
dec
inc
repnz
aas
inc
mov
sub
sarl
in
pop
stc
addr16
fisttps
inc
test
sub
jne
mov
popa
push
arpl
mov
add
data16
mov
dec
inc
add
mov
inc
inc
fcmovu
inc
fwait
repnz
lret
fcoml
incb
xor
add
cmp
scas
add
in
cmp
in
repnz
add
dec
ja
push
mov
jno
insl
add
jmp
mov
rcrl
or
dec
push
popa
xchg
gs
mov
cmp
shll
fwait
xchg
dec
fwait
adcl
cli
cmp
repnz
mov
shrl
sahf
sbb
jbe
gs
ja
pop
jge
fmuls
mov
mov
dec
out
mov
push
push
or
popa
add
cmp
out
cmp
fwait
xor
sbb
pop
popf
insl
mov
inc
cmp
shll
popf
push
mov
movsl
xor
xor
sbb
cmp
sti
jo
or
and
inc
sbb
shll
push
inc
icebp
notl
jmp
mov
testb
xlat
dec
cmp
xor
mull
and
imul
test
mov
cmp
mov
stos
dec
idivb
nop
fisubl
xor
icebp
mov
cmp
insl
mov
hlt
xor
int
stos
sti
cmp
adc
cmp
pop
aad
stos
pop
push
imul
pop
inc
push
sbb
cmpb
push
or
dec
or
jecxz
sbb
stos
pusha
jbe
cs
xchg
lea
addr16
dec
xchg
push
xchg
sbb
cli
imul
imul
mov
dec
ficompl
pop
cltd
mov
jno
test
andl
cmpsl
cmp
mov
loop
popa
cmp
or
pop
inc
repz
push
inc
imul
mov
cmp
inc
stos
imul
dec
dec
mov
rep
and
fdivrl
sbb
bound
popa
and
sub
jle
add
fcoml
stc
cmp
mov
in
ja
flds
mov
dec
aaa
fnstcw
lods
rcr
movsl
bound
pop
mov
xor
mov
mov
adcl
mov
fstpl
add
cmp
cmp
stc
add
jno
xor
mov
stos
jne
cmc
jno
push
sub
stos
stc
pop
jmp
cmp
or
mov
jle
sub
jb
xor
fldt
xchg
jle
xor
ljmp
or
xor
das
int
inc
lds
mov
clc
fdivrl
and
lods
xchg
lods
roll
xchg
mov
aam
sarl
inc
add
xchg
dec
mov
sahf
xchg
cld
aam
add
xor
cmp
repz
dec
sub
cmp
lret
pop
pop
popa
pop
aaa
push
hlt
into
hlt
xchg
sub
fwait
dec
cmp
jbe
jle
add
dec
aam
popa
hlt
dec
lcall
dec
andl
lahf
bound
aad
dec
int
mov
popf
xor
pop
dec
pop
sarl
push
aam
and
add
cmp
mov
std
cmp
sbb
lret
roll
inc
push
cmp
mov
fdivl
jne
dec
popa
pop
jno
inc
push
push
sbbb
bound
xor
sbbl
arpl
xor
test
popl
addr16
aaa
mov
ds
insl
gs
cmp
xor
dec
enter
cmp
cmp
inc
cmp
pushw
jns
fcmovne
and
fcmovne
xor
ss
push
bound
inc
aaa
arpl
outsl
insl
pop
xchg
pop
pop
push
fstl
popa
push
mov
dec
pop
push
pop
insb
gs
test
das
sbb
cltd
inc
imul
sub
cmp
jbe
ljmp
jno
cltd
push
mov
xor
repnz
leave
or
jp
xchg
cmp
dec
popf
cmp
movsb
mov
mov
sbbb
mov
pop
dec
mov
std
out
das
insl
fstps
sub
push
cmp
mov
aas
jne
rcll
andb
mov
pop
das
push
lea
popf
jns
mov
mov
push
xor
andl
out
jno
decb
std
jns
jns
out
orl
or
pop
or
jmp
cmp
test
test
jne
gs
aaa
popa
fbstp
out
push
sbb
lds
cltd
cmp
sub
pop
pop
mov
bnd
push
sahf
cmp
cmp
mov
dec
or
pop
add
xor
inc
repz
dec
xchg
ljmp
fwait
pop
insl
bound
cltd
test
ljmp
repnz
ja
js
mov
jns
loope
bound
mov
bound
pop
data16
push
jns
jae
jle
fisubrs
call
mov
xchg
pop
cmp
shrl
mov
jl
leave
in
dec
mov
and
cmp
mov
and
xor
popf
xchg
dec
push
leave
ljmp
mov
mov
mov
xor
test
lods
cltd
mov
imul
inc
xor
inc
jp
sbb
inc
xor
dec
sti
jno
sbb
cmp
jle
or
mov
xor
ljmp
insl
and
push
pop
ret
lret
pop
arpl
xchg
push
ds
jne
mov
mov
and
cmp
cmp
add
and
mov
outsl
imul
scas
and
push
mov
movsl
lock
pop
test
add
cli
mov
cmp
leave
movsl
cmp
shrl
xor
add
aad
pop
mov
jnp
jne
insl
movsl
out
ss
imul
mov
ljmp
call
jno
pusha
dec
std
push
mov
push
inc
mov
or
leave
xor
clc
sbb
insb
add
pop
adc
gs
or
adc
icebp
pop
jle
notl
xor
jb
loop
cmp
xchg
jne
mov
cmp
adc
fbld
push
xor
pushf
stos
xor
sbb
xchg
gs
aaa
outsb
mov
pushf
push
and
int3
fwait
repnz
ret
insb
imul
ret
dec
sahf
popa
xchg
lahf
clc
fiadds
faddp
push
stos
fwait
ret
dec
leave
add
inc
push
add
jne
outsl
xor
test
icebp
movsb
add
mov
imul
cmp
cmp
mov
mov
mov
jne
mov
add
jge
sub
pop
jnp
jo
imul
orl
jno
mov
cmp
lods
aaa
fwait
test
mov
mov
sub
jp
cmp
loope
inc
jmp
cmp
test
shrl
jge
cmp
movsl
rcll
popf
insb
pop
mov
lods
fwait
insl
sbb
imul
mov
gs
jno
insl
jge
jl
lds
icebp
insb
push
push
or
xor
jne
jno
dec
shrl
jnp
cmp
mov
mov
stos
fwait
imul
lret
insb
mov
mov
fwait
mov
js
insb
cmp
xchg
stc
push
sub
mov
jae
js
insb
ss
adc
mov
lods
cmc
in
inc
mov
mov
mov
ja
adc
outsl
mov
mov
and
gs
mov
mov
inc
xor
jp
cmp
mov
or
stos
mov
mov
mov
insb
bound
andb
mov
fcmovne
or
sbb
cmpsb
mov
dec
dec
or
repz
xchg
mov
ss
mov
jbe
adc
mov
jecxz
into
mov
sub
add
mov
mov
cmp
push
scas
or
sbb
mov
xlat
popf
stos
mov
orb
movsb
fwait
fs
insb
les
xchg
gs
mov
mov
inc
lds
enter
inc
mov
fistps
js
js
stc
mov
jo
out
js
insb
nop
mov
pusha
movswl
insb
sarb
sbb
jo
ljmp
mov
sub
dec
js
sbb
nop
mov
sub
dec
js
sbb
nop
mov
sub
inc
inc
jo
nop
mov
sub
inc
push
jo
dec
push
mov
sub
inc
cld
jo
fmull
sbb
hlt
shrb
in
stc
and
js
sbb
clc
shrb
sbb
call
or
add
jo
and
lock
nop
mov
xorl
cmp
andl
jno
lea
xchg
in
xchg
lea
xchg
dec
jge
push
movsl
cmp
jnp
xor
jne
cmpsl
sbb
cmp
inc
jnp
xchg
push
dec
sarl
imul
stos
jnp
xchg
dec
jae
insb
dec
inc
pop
jmp
pop
xor
or
add
subl
nop
in
insl
insl
jmp
mov
stc
pcmpeqd
pusha
shr
test
pop
cmp
divl
iret
xor
repz
ja
sbb
cmp
push
dec
xchg
std
insl
imul
ja
sahf
xchg
xchg
ret
cmpl
test
mov
fisubl
test
adc
cmp
ret
mov
add
rcr
xchg
jo
pop
mov
inc
daa
dec
std
push
xlat
dec
mov
insb
addr16
mov
xlat
mov
lahf
xchg
mov
test
lods
popf
rcrb
jge
imul
xchg
sub
push
ret
lods
adc
sub
insl
subl
pop
and
movsl
repnz
jno
xchg
and
jb
lods
xchg
imul
aas
loope
mov
js
fimuls
ret
leave
jae
ret
mov
stos
sub
xchg
sahf
jnp
pop
lods
pop
push
rorl
in
fnsave
movsb
test
mov
mov
and
mov
jno
jp
std
jge
mov
bound
inc
pushf
std
jns
cmp
das
xor
mov
bound
stos
xchg
xchg
lret
mov
rcll
jl
jbe
sub
jnp
inc
popf
cltd
add
lahf
push
mov
dec
mov
ds
fstpl
pop
leave
dec
jl
xor
xor
xchg
rcrl
cli
xor
shll
cmp
int
pop
repnz
xchg
fbld
adc
jns
mov
in
jle
xchg
iret
xor
push
pushl
sahf
xor
mov
cmp
popa
mov
mov
push
mov
xchg
addr16
test
dec
mov
adc
repz
add
imul
mov
imul
jle
lods
cmp
mov
jmp
or
pop
stc
xor
jns
lcall
inc
xlat
test
rcrb
lea
jl
insl
rcrl
test
or
loope
xlat
cmc
mov
pop
mov
pop
insl
lds
or
gs
cmp
outsl
sbb
add
pop
ror
insl
jge
addr16
dec
mov
jecxz
jl
inc
test
lea
test
sbb
addr16
mov
fistpl
mov
xchg
je
pop
pop
push
lods
mov
fiadds
cmp
insl
push
push
pop
push
xor
xchg
pop
rolb
outsl
inc
fcompl
leave
sbb
mov
cwtl
inc
pop
gs
jl
mov
mov
mov
mov
mov
sbb
cltd
jge
fisttps
stos
fists
cltd
xorb
testl
stos
and
mov
sahf
xor
imul
decl
jns
jl
lea
jg
mov
push
shr
mov
jbe
pop
imul
nop
cmp
mov
jge
mov
inc
jge
lods
jp
cli
xor
ret
push
ss
xchg
popf
imul
mov
popf
decb
jns
jns
nop
cltd
cli
es
in
repz
out
mov
cmp
jmp
jns
mov
mov
cmpsl
jle
rcrb
test
adc
imul
arpl
mov
leave
fidivs
addl
std
imul
ss
jno
lret
dec
cmp
push
sub
xor
cmp
jns
imul
sbb
xchg
fisubl
pop
in
call
pop
and
test
adc
insl
sbbl
xchg
ficoms
sbb
mov
and
cwtl
push
fidivl
xchg
pushf
popf
lods
test
outsb
sarb
mov
cmp
imul
xchg
mov
adc
mov
pop
stos
adcb
xor
cmp
mov
cmp
icebp
fstpl
push
pop
pop
inc
fimuls
cmpb
add
pop
xor
cmp
pusha
fiadds
pop
aaa
shll
jbe
or
dec
in
adc
cmp
sub
push
xchg
dec
pop
popa
imul
aaa
cmp
inc
dec
xchg
push
mov
xor
addr16
mov
mov
adc
imul
mov
xor
in
cmpsl
test
mov
imul
sub
push
mov
aas
jno
nop
test
les
nop
leave
and
cltd
or
push
mov
imul
add
sti
test
dec
mov
iret
adc
imul
cli
imul
jl
cltd
jge
movb
imul
cltd
stc
add
cwtl
pop
imul
or
xchg
mov
and
cmpsb
pushf
stos
sbb
jns
jns
mov
scas
jge
insl
xchg
imul
imul
pop
cwtl
xchg
cmpsb
jb
popa
jne
mov
sbbl
out
add
lods
xchg
outsb
sbb
test
pop
lea
xor
jbe
sub
int
ret
jl
popf
lret
push
lods
call
popf
bound
push
sub
mov
mov
aas
jns
stos
je
jb
loop
fwait
jbe
cmc
iret
sahf
push
stos
mov
loop
sbb
test
lahf
mov
pop
rcrl
or
jnp
pop
js
push
stc
jo
jle
lea
sbb
mov
mov
jl
loopne
fimull
cs
cmp
xor
mov
pop
rolb
stc
jge
cmpsb
sbb
cltd
sub
je
add
adc
test
jg
leave
test
push
dec
xlat
xchg
adc
jne
jecxz
lret
fwait
leave
fistpl
mov
rolb
xchg
mov
push
fs
mov
lods
cltd
and
jbe
cmp
shlb
cltd
stos
leave
fisubl
sbb
mov
add
adc
xor
mov
and
lods
xor
xor
mov
in
push
mov
cld
cmp
ja
jge
xor
xchg
and
pop
popf
xchg
insl
xchg
mov
sub
jne
jnp
adcl
jns
aad
lods
mov
icebp
and
push
cld
push
insb
test
xchg
lcall
mov
in
mov
addr16
cmp
fiadds
pushf
pop
xor
xchg
jmp
inc
inc
in
dec
cld
and
xor
nop
mov
jo
movsl
xchg
fwait
push
lods
push
jge
test
inc
lea
cmp
ja
ja
push
ds
mov
pop
jno
nop
adc
jno
mov
adc
icebp
seta
mov
gs
xchg
adcb
in
xorl
dec
test
pusha
lock
lods
pop
pop
mov
lret
cmp
dec
xor
dec
jecxz
mov
xchg
nop
fs
fldenv
mov
add
jge
mov
cmp
xchg
jns
mov
imul
inc
adc
cmp
mov
sub
mov
cmp
insl
or
popa
lods
fnstcw
mov
int
mov
cmp
mov
rcll
sarb
cmp
ss
fnstenv
mov
add
cmp
shll
in
notb
imul
cltd
imul
lods
mov
pop
jnp
imul
mov
lods
sahf
jns
mov
fwait
aad
aaa
popa
out
lret
lret
pop
jno
or
jns
mov
cmp
loop
ljmp
fcoms
mov
sub
jne
or
lods
inc
cmp
lret
ret
in
mov
xor
mov
popa
lret
xor
xchg
iret
rcrl
stos
or
and
lock
xchg
fwait
push
call
pop
push
jmp
repnz
push
and
sub
xor
filds
adc
mov
cld
sub
xor
popf
les
in
cmp
xor
in
insl
inc
test
pop
pop
ds
cmp
inc
push
mov
lret
add
cmp
subl
mov
adc
jns
mov
popa
gs
cmp
imul
ret
mov
inc
jne
xorl
sub
cli
fmull
rcll
add
sub
mov
lcall
cmp
xor
pop
dec
nop
sub
cmpl
sbb
cmp
jg
xor
lds
inc
and
sarl
jmp
mov
jl
test
push
cmp
dec
or
xor
int
and
loope
lods
test
pop
std
cmp
cmc
jns
mov
add
fnstcw
in
pop
insl
in
ss
sarl
mov
jno
mov
imul
gs
cltd
jns
mov
test
insl
jns
push
lea
insl
insl
pop
jp
es
hlt
dec
xchg
dec
pop
and
add
pop
inc
lea
std
inc
adc
mov
push
data16
orl
pop
mov
cmp
dec
dec
shrb
mov
ret
shll
mov
imul
call
mov
cmp
mov
outsl
insl
jns
mov
lret
out
fistpll
or
jns
mov
imul
jnp
xchg
cmp
mov
das
inc
mov
stos
dec
push
jns
mov
lahf
lret
mov
cmp
insl
jns
mov
cmp
jnp
fwait
cmp
insl
mov
imul
sub
cmp
pop
jbe
xchg
jno
fiadds
xchg
jg
jno
stos
fistps
jno
iret
cmpsb
inc
dec
pop
jae
dec
stc
pop
movsb
sbb
inc
inc
mov
sbb
dec
rorl
xchg
mov
dec
mov
test
xchg
cmpsb
lcall
shll
xchg
dec
fnstcw
in
sbb
cmpsb
cmpsb
jge
stc
xor
inc
insl
sbb
bound
mov
push
jnp
aam
mov
iret
aaa
jno
pop
ds
cmp
jne
shr
or
aam
cmp
sub
adc
jmp
imull
push
add
aaa
push
adc
shl
mov
outsl
mov
stc
rol
inc
push
sub
mov
add
outsl
data16
mov
mov
cld
sbb
xor
pusha
stc
xor
xchg
mov
mov
jbe
inc
dec
dec
rcll
ljmp
shrb
push
subb
xor
inc
cmp
mov
orl
mov
shl
jmp
add
adc
fs
pop
dec
ljmp
jg
jno
and
push
mov
out
xchg
push
add
mov
int3
rcrl
dec
aas
ss
inc
adc
cmp
pop
lret
add
loope
xlat
add
push
jb
leave
ret
and
adc
bnd
mov
mov
cmpsb
pop
orb
xor
mov
cs
inc
adc
sarl
push
ljmp
pusha
push
int
push
lea
push
mov
adc
std
sbb
dec
push
sub
out
jbe
cmc
push
clc
mov
bound
in
ja
mov
lret
repnz
jns
test
orb
fistpl
jl
icebp
push
scas
mov
sbb
mov
ljmp
mov
sub
mov
and
shl
dec
dec
sbb
adc
stc
sbb
rcrl
call
xor
mov
cmc
mov
push
inc
nop
lcall
ss
dec
mov
cmpb
inc
push
or
push
xchg
bound
test
sbb
add
int
fwait
fs
aad
fcomps
rcll
dec
loopne
push
mov
add
es
or
int
enter
dec
pusha
push
jne
sub
bsr
pop
repnz
cmp
das
push
cwtl
add
fcmove
add
inc
insb
imull
add
mov
inc
add
fidivrl
add
dec
sub
pusha
mov
data16
sub
adc
rcr
push
push
into
aad
sub
ja
cmpsb
lods
les
cmc
insb
jge
int3
push
mov
inc
andl
push
mov
adc
test
cli
mov
lret
js
or
sub
ficompl
sub
xlat
lds
int
mov
pop
loop
push
mov
sbbl
leave
insb
push
pop
pop
jb
mov
movups
jmp
pop
push
sub
lock
or
dec
push
jb
aam
xor
xchg
rol
mov
or
inc
sbb
outsl
out
sbb
test
or
je
stos
dec
adc
loopne
imul
stc
dec
xlat
sub
jecxz
adc
xor
out
xor
xchg
push
lret
cltd
mov
pop
aas
jge
mov
jg
xchg
jno
pushf
mov
int
xchg
lods
jo
stos
enter
inc
stc
or
dec
mov
xor
mov
pusha
xchg
adc
push
ret
xchg
xchg
repz
scas
addr16
cmpsl
xchg
std
mov
xchg
lea
add
imul
data16
pushf
insb
cmp
mov
mov
jno
jno
lahf
sbb
cmp
cld
pushf
in
xchg
pop
ret
ja
ds
xchg
push
lahf
sub
cld
stos
and
and
mov
jle
xchg
add
js
cs
aas
mov
mov
push
xor
stos
lock
inc
mov
or
push
xor
sbb
je
sbb
push
push
test
ret
jle
mov
imul
mov
pop
shrl
pusha
je
hlt
adc
jnp
add
push
orl
lods
inc
pusha
and
jb
add
xchg
jge
push
jno
fidivrl
in
sub
adcb
imul
xchg
or
je
pop
jo
sbb
in
scas
sti
mov
loop
pop
lret
rcrb
popa
mov
lea
mov
cmp
cmp
dec
xchg
loope
mov
cmp
insl
std
jns
mov
or
or
mov
aad
mov
cmp
insl
in
jmp
leave
cltd
mov
cmp
mov
cmp
xor
mov
adc
insl
fnstcw
mov
mov
mov
cmp
mov
jno
mov
cmp
xchg
test
stos
lods
xor
or
mov
cmp
insl
adc
imul
and
add
in
aas
push
sbb
lods
xor
jns
mov
popf
lods
mov
xor
cmp
insl
popf
jns
mov
gs
insl
sbb
mov
adc
mov
cmp
mov
mov
loop
xchg
xor
insl
insl
jno
cmp
imul
cmp
or
lods
xorb
jns
mov
sub
sub
jns
ficoms
jns
bound
subl
cmp
imul
push
dec
les
nop
pop
rcrl
imul
mov
inc
jo
jno
push
imul
mov
push
arpl
xchg
ds
mov
or
cmp
sub
outsl
or
dec
dec
xor
js
adc
xchg
cmp
ret
imul
lahf
xor
pushf
aas
lcall
xor
jbe
xchg
dec
stos
orb
lods
and
cwtl
cltd
mov
lods
clc
testb
stos
and
lcall
loopne
xchg
pop
pop
repz
insl
test
xchg
insb
in
cwtl
cmp
jg
arpl
pop
lahf
outsb
dec
call
push
inc
mov
movsl
sahf
xchg
repz
leave
mov
pushf
lcall
dec
dec
call
es
mov
insb
imul
cmp
imul
lea
jle
jne
je
jae
jb
jns
mov
cmp
fisubrs
mov
mov
out
push
mov
les
pop
sahf
lret
out
mov
rorb
pop
pushf
or
xchg
sbb
subb
lods
clc
fwait
xchg
dec
in
add
jb
jecxz
mov
roll
xchg
cld
push
scas
gs
sub
out
icebp
cmp
enter
in
ret
dec
cmp
in
adc
sub
sub
lahf
adc
stos
dec
imul
push
jbe
push
std
mov
pop
aad
push
push
lods
arpl
pop
daa
aam
mov
inc
and
movsb
mov
inc
mov
in
and
stos
xchg
xor
popf
stos
rolb
cmpb
dec
cmp
xor
xor
pop
cmp
int3
jbe
mov
inc
add
mov
inc
jge
jl
mov
aaa
lea
mov
dec
jne
rorl
lods
icebp
loope
out
cmp
ret
lahf
pusha
lea
sahf
out
rorb
or
jno
jp
lds
sti
jo
mov
jl
mov
inc
cmp
adc
jne
xor
jne
cmp
out
jmp
andb
mov
jg
mov
or
mov
push
jecxz
arpl
mov
out
fstps
jnp
scas
mov
stos
int
out
faddl
mov
sbb
and
inc
sbb
rcrb
xchg
dec
in
jns
adc
push
popf
in
insb
test
jbe
pop
inc
mov
jne
aaa
addr16
push
rorl
sub
push
cmpb
movsl
xchg
mov
call
xlat
jp
das
roll
push
cltd
add
pop
cmp
pop
in
cs
mov
push
jnp
jle
hlt
push
xchg
adc
movb
and
adc
pop
jno
mov
popl
pop
pop
pop
xchg
into
ljmp
subl
lea
insl
cmp
pop
xor
mov
mov
cmpsb
jns
jg
rorb
jbe
jo
jno
adc
mov
mov
mov
ds
xlat
xchg
pusha
insb
jecxz
lret
or
add
jns
out
mov
cmp
loop
je
ret
ss
cmp
jle
cmp
out
cmpb
lock
out
mov
cmp
jmp
jl
ret
or
jae
push
fs
xor
pop
cmpsl
and
xor
imul
insb
imul
out
push
lret
cmp
xchg
outsl
insl
movsb
mov
sbb
mov
mov
xchg
rolb
popa
fs
lret
mov
fstl
and
dec
scas
jns
aas
xor
inc
xor
jg
pushf
inc
push
cmp
and
jbe
int
je
outsb
mov
jnp
cmp
xchg
bound
xchg
sub
inc
addr16
testl
imul
in
stc
insl
arpl
test
push
sbb
dec
mov
cmp
or
cmp
inc
jo
or
dec
cmp
xchg
or
aaa
gs
push
addr16
cmp
push
add
jae
xchg
insl
xchg
xor
jno
xchg
test
push
test
xchg
in
das
gs
mov
iret
push
mov
dec
in
data16
ret
pop
mov
mov
pop
lods
lret
mov
adc
pop
addr16
pusha
stos
stos
sbb
loopne
in
imul
push
jno
xor
push
mull
sti
lret
pop
xchg
cmp
rcrb
add
dec
repnz
in
bound
mov
xchg
sub
xchg
repnz
ss
lock
mov
fldenv
mov
ljmp
mov
mov
mov
cwtl
xor
mov
stos
stos
jns
iret
cmp
sbbb
xchg
pop
push
je
dec
pushf
out
fmull
popf
fcompl
cmp
adc
mov
add
popa
mov
adc
inc
ss
mov
mov
stos
xor
mov
nop
push
stc
and
dec
bound
push
dec
scas
into
xchg
push
add
inc
gs
insb
addr16
je
insl
add
add
je
jb
arpl
arpl
add
jo
je
push
popa
addr16
add
xchg
movsb
decl
mov
rorl
push
pop
mov
bswap
pop
push
bswap
push
mov
mov
pusha
mov
lea
pop
pushf
pusha
pushl
ret
add
push
insb
jae
gs
popa
insb
jne
add
lret
jmp
add
dec
jae
imul
jae
popa
addr16
add
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
add
push
gs
gs
gs
dec
gs
add
add
fs
arpl
inc
add
add
je
insb
imul
inc
popa
je
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
jne
inc
imul
gs
imul
bt
cmpb
pushf
lea
jne
neg
neg
cmc
clc
mov
pushf
add
cmp
movzwl
stc
jmp
add
inc
gs
jne
dec
outsb
jne
mov
push
pushl
ret
add
push
popa
imul
jo
imul
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
test
shr
jmp
pushf
lods
cmc
pusha
cmp
neg
push
clc
add
stc
pushl
push
xor
movb
stc
bt
add
sub
je
pushf
stc
shr
pusha
pushf
movb
lea
je
push
call
push
lea
call
pushf
pusha
call
add
push
gs
jae
addr16
add
xchg
imul
call
add
dec
jae
outsl
outsl
insl
gs
ljmp
and
mov
pusha
pushf
pushf
pushl
ret
add
inc
imul
pusha
movb
pushl
movl
movb
movl
movl
pusha
mov
movb
lea
jmp
bt
add
cmc
bt
bt
mov
cmc
test
bt
mov
clc
clc
cmp
push
jmp
add
inc
gs
jb
jns
jne
jae
jb
test
pushf
lea
je
cmp
lea
add
pusha
not
mov
cmp
cmp
call
pushf
pusha
cmp
pushf
jmp
or
push
lea
je
stc
or
pusha
jmp
add
inc
push
imul
outsl
insl
push
outsl
imul
les
xor
bt
mov
add
bt
mov
clc
stc
rol
cmp
call
add
push
je
jb
inc
outsl
arpl
imul
test
call
add
push
arpl
gs
imul
inc
js
inc
js
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
jb
gs
imul
dec
cmc
shl
mov
pusha
lods
call
mov
movw
jmp
add
inc
gs
imul
js
dec
outsb
addr16
inc
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
xchg
xchg
inc
out
push
mov
btc
jmp
mov
movzbl
bswap
pop
not
pushf
mov
pushf
pushf
bswap
pushf
mov
pushf
pushl
ret
pusha
lea
jne
aad
cwtl
xor
cwtl
sar
add
cmp
mov
sbb
add
pusha
rcr
pusha
mov
jmp
add
dec
insb
gs
outsb
imul
imul
insb
gs
jne
add
add
addr16
jne
jb
push
popa
insb
jne
inc
add
add
outsb
fs
gs
jne
arpl
add
add
insl
outsl
jbe
push
jb
jo
add
add
je
jb
jo
add
add
je
popa
jo
jne
add
add
je
je
arpl
bound
arpl
add
jne
push
inc
jne
data16
add
shll
ret
je
pusha
xchg
shld
bsf
mov
sub
mov
call
push
pushf
pushl
jmp
add
inc
gs
gs
dec
outsb
jne
lea
jae
pusha
lea
jne
pushf
mov
pushl
push
stos
pusha
lea
jmp
push
call
mov
clc
call
add
inc
gs
jb
arpl
jae
gs
imul
movsl
repnz
mov
neg
btc
push
lea
inc
xor
push
not
bts
push
sub
lea
push
xchg
push
lea
bsf
sar
or
mov
pusha
mov
setb
shr
shld
mov
pushl
call
add
push
gs
jb
popa
je
dec
gs
add
add
jbe
insb
imul
je
pushf
pushf
push
push
xchg
call
add
inc
insb
insb
imul
and
ja
call
lea
jne
call
pushf
movw
cmp
push
lea
je
bt
cmp
push
lea
je
bt
cmp
push
lea
ja
pusha
lea
je
push
pushf
pusha
push
lea
jmp
mov
mov
sub
mov
aaa
dec
xor
dec
std
inc
push
pop
icebp
cld
push
jbe
notl
mul
out
xchg
pop
popa
insl
lret
cmp
xor
out
dec
aam
jle
filds
fidivs
pop
test
mov
jns
in
stc
subl
lcall
icebp
scas
mov
add
add
add
add
pop
add
scas
sbb
add
sbb
add
sbb
add
xlat
push
add
mov
sbb
add
pop
add
dec
pop
add
sbb
add
add
add
add
xorb
or
add
adc
add
add
add
mov
pop
add
push
add
dec
pop
add
dec
pop
add
sahf
sbb
add
call
sbb
add
inc
pop
add
loope
add
xor
pop
add
push
add
sbb
add
jmp
pop
add
aaa
push
add
sahf
push
add
fs
add
cmp
add
sbb
add
pop
add
ss
add
popw
add
xchg
sbb
add
lahf
push
add
fcoml
add
dec
pop
add
enter
fwait
push
add
add
pop
add
in
pop
add
push
add
mov
pop
add
jmp
add
cmpsb
sbb
add
call
pop
add
cltd
sbb
add
push
add
scas
sbb
add
lret
sbb
add
ss
add
pop
add
test
add
sbb
add
sbb
add
dec
pop
add
out
pop
add
aas
push
add
lods
sbb
add
ficoms
add
dec
pop
add
sahf
sbb
add
aaa
push
add
push
add
push
push
add
repz
add
dec
pop
add
sbb
add
sbb
add
cmp
add
mov
push
add
out
pop
add
hlt
pop
add
push
add
cmp
add
jmp
pop
add
aaa
push
add
sahf
push
add
ficoms
add
xlat
push
add
test
push
add
xchg
sbb
add
xor
add
sahf
push
add
sbb
add
pop
add
push
add
dec
pop
add
enter
xchg
sbb
add
ljmp
lds
add
xor
add
cmp
add
inc
push
add
fstl
add
xchg
sbb
add
pop
add
sbb
add
add
add
pop
add
lcall
sub
add
pop
add
sbb
add
push
add
test
add
pushf
push
add
mov
add
sbb
add
dec
pop
add
push
add
stos
sbb
add
fwait
push
add
leave
sbb
add
imul
sbb
sbb
add
xchg
sbb
add
in
pop
add
sbb
add
mov
push
add
in
pop
add
test
pop
add
movsb
sbb
add
fstl
add
out
pop
add
dec
pop
add
mov
push
add
test
pop
add
push
add
push
add
xchg
sbb
add
fs
add
lock
add
push
add
cmp
push
add
sbb
add
pop
add
push
add
dec
pop
add
cmp
add
scas
sbb
add
push
add
mov
push
add
push
add
xor
add
fsts
add
sbb
add
sbb
add
sbb
add
loope
add
fcoml
add
push
add
sbb
add
push
add
push
add
push
add
inc
push
add
push
add
xor
add
popw
add
mov
sbb
add
sbb
add
mov
add
ds
add
ljmp
cmpsl
in
pop
add
sahf
push
add
lods
sbb
add
notb
add
dec
pop
add
stos
push
add
fstl
add
pop
add
xor
add
push
add
dec
pop
add
pop
add
sbb
add
lahf
push
add
sbb
add
gs
add
mov
add
mov
push
add
in
add
mov
pop
add
inc
pop
add
jmp
sbb
add
push
add
push
add
fwait
push
add
repz
add
push
add
movsb
sbb
add
popf
sbb
add
add
add
enter
xor
add
dec
pop
add
push
add
sbb
add
push
add
fstl
add
pop
add
in
pop
add
test
add
xlat
push
add
in
pop
add
in
add
xor
add
ficoms
add
dec
pop
add
in
pop
add
pushf
push
add
pop
add
dec
pop
add
lds
add
push
add
mov
push
add
push
add
add
test
push
add
sbb
add
mov
sbb
add
cmpsb
sbb
add
push
add
push
add
dec
pop
add
push
add
imul
add
mov
sbb
add
push
add
push
add
xchg
sbb
add
out
add
gs
add
popf
push
add
push
add
mov
push
add
add
sahf
sbb
add
pop
add
mov
push
add
xor
add
inc
push
add
mov
add
xchg
sbb
add
hlt
pop
add
add
add
fstl
add
pop
add
add
add
cmp
add
pop
add
push
add
push
add
lahf
push
add
mov
sbb
add
ss
add
xchg
sbb
add
add
add
pop
add
sahf
push
add
mov
add
pop
add
lahf
push
add
push
add
add
add
add
andb
add
or
add
or
add
add
add
jnp
sbb
add
add
sbbb
pop
add
xor
add
add
add
pop
add
ds
add
sbb
add
add
add
mov
add
adc
pop
add
ficoms
add
push
add
scas
sbb
add
add
add
add
insb
arpl
imul
add
gs
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
add
push
jb
outsb
jae
popa
je
dec
gs
popa
addr16
aaa
bt
bt
pushf
cmp
jmp
add
inc
jo
outsb
fs
outsb
jne
add
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
add
dec
gs
jo
gs
jb
jns
add
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
ja
arpl
inc
js
pushl
mov
pushl
mov
call
add
insl
imul
insl
dec
jne
add
add
je
arpl
insb
insb
push
outsl
jae
add
dec
imul
add
call
add
add
inc
gs
gs
imul
pusha
lods
stc
rol
stc
call
add
inc
jb
popa
je
inc
inc
inc
add
faddl
cs
or
add
push
fsub
push
lret
jbe
push
aas
lcall
mov
jb
add
test
inc
imul
lea
xchg
std
insb
packssdw
xchg
add
adc
addl
out
mov
mov
sub
xchg
xchg
enter
pop
mov
pop
lret
xlat
sbb
mov
stos
sbb
insl
cwtl
ret
dec
inc
aad
lock
inc
outsl
fiadds
stc
call
adc
in
xor
shll
pusha
mov
pushl
imul
and
and
adcb
xchg
enter
movsb
push
cmp
loop
fwait
mov
mov
popl
nop
daa
inc
mov
out
mov
ret
xchg
adc
xlat
gs
sub
adc
ret
repz
fnstsw
mov
and
scas
das
jmp
ficoms
cwtl
in
add
push
imul
jb
je
arpl
cmp
add
cmc
jmp
add
inc
jb
jns
je
imul
and
mov
lea
jae
cmp
xor
jmp
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
movl
push
pushf
jmp
add
pushf
test
movb
pusha
lea
jne
call
add
ja
jbe
dec
jne
inc
gs
jne
inc
gs
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
push
aas
mov
in
xlat
sbb
test
inc
stc
sbb
mov
daa
xor
inc
nop
sub
mov
sbb
sub
xor
pop
ja
nop
sbb
pusha
cli
sub
xor
addr16
push
jne
negb
add
jb
stc
inc
arpl
leave
adc
or
lock
daa
repnz
mov
lods
jle
aas
mov
in
cmc
cmp
add
xor
pop
rorb
adc
stos
mov
sbb
jo
sub
jnp
out
inc
and
out
loope
push
xor
iret
xchg
xchg
mov
or
jnp
fisttps
inc
xor
out
test
or
mull
mov
subb
xchg
dec
ret
push
or
arpl
out
add
adc
mov
push
mov
cltd
mov
dec
cs
xchg
fldl
imulb
rclb
mov
inc
sub
mov
ret
adc
and
sarb
xchg
cmp
xchg
in
adc
push
insl
sub
inc
mov
out
lret
bound
push
mov
jmp
xor
leave
sbb
or
jg
cld
es
fld
dec
fdivrs
jg
lcall
inc
into
adc
mov
push
adc
pop
fwait
test
cld
std
jg
imul
orb
out
sahf
lahf
fadds
cmpsb
das
nop
or
add
pop
scas
int
sarb
mov
push
xchg
shrb
jo
daa
adc
dec
adc
xor
cmpsb
js
repz
fiaddl
mov
inc
nop
xchg
into
push
outsl
cli
ja
push
mov
mov
insl
shrb
pop
js
enter
div
jo
aas
pop
call
ja
mov
mov
cltd
aaa
aas
push
xchg
inc
add
inc
and
sub
xorl
adcb
sub
iret
jne
gs
cld
cs
das
xor
jge
mov
es
pop
push
sbb
xchg
dec
cmp
pop
add
pop
and
mov
jnp
cmp
adc
mov
dec
push
iret
fadd
inc
in
mov
popa
adc
xor
mov
cltd
insl
inc
adc
mov
add
imul
cmp
sbb
pushl
int3
divb
jno
lea
icebp
xchg
ss
xor
shlb
mov
inc
inc
testl
js
adc
dec
adc
sub
mov
inc
dec
mov
clc
sbb
dec
dec
dec
sub
test
std
inc
stc
mov
ds
dec
idiv
fdivr
jb
mov
adc
icebp
mov
data16
inc
sbb
xor
jae
aas
aad
inc
dec
lock
dec
jne
mov
shll
xchg
adc
push
push
inc
mov
orl
cmpsb
cmpsl
sbb
inc
adc
popa
mov
repz
mov
aad
mov
movsb
dec
mov
ret
jns
adc
sbb
xchg
cmp
jge
push
test
xchg
sbb
lret
decl
idivl
mov
push
dec
push
aad
dec
mov
or
xchg
jo
xchg
daa
inc
push
dec
data16
loope
in
mov
or
or
lock
mov
loopne
jo
dec
adc
sbb
in
jp
jno
frstor
xlat
cmp
mov
mov
lret
arpl
aas
pop
adc
in
sbb
loopne
xor
xchg
lret
ds
in
mov
inc
or
rcrb
bound
stc
push
cmp
xor
repz
fstps
cltd
xor
arpl
fs
add
cmp
xchg
popa
popa
rorl
sbb
cmp
push
cld
testb
pop
cli
pop
xchg
je
loope
ss
or
pop
aam
pop
in
lods
push
pop
out
xchg
cltd
push
or
mov
and
jb
in
adc
arpl
pop
mov
jge
jo
jp
adc
cmp
mov
icebp
mov
dec
cmp
sub
xchg
pushf
mov
roll
imul
dec
adc
es
pop
lret
dec
sar
xchg
jge
ror
das
cmp
xor
movsb
mov
imul
shlb
cltd
ret
inc
aaa
cmpsl
push
divl
cmp
dec
xor
fs
mov
pop
xor
adc
sbb
add
dec
fs
cltd
fistpll
test
xor
inc
mov
adc
dec
mov
in
cmc
call
mov
sub
das
in
or
mov
gs
xor
stc
aaa
aaa
sbb
mov
add
loop
inc
outsl
aaa
mov
mov
adc
xchg
addr16
and
fistpll
inc
adc
xor
lret
rorb
jno
mov
divb
ss
adc
out
outsl
cld
jno
or
dec
es
or
int
sbb
mov
xor
dec
repz
cli
cld
xlat
xor
jge
das
sbb
inc
pop
inc
pop
cli
insl
mov
std
mov
pop
in
lcall
outsl
push
push
test
mov
je
icebp
cmp
jmp
xchg
mov
mov
adc
out
add
xor
dec
mov
inc
in
or
orl
add
or
mov
jge
mov
pop
xor
mov
data16
sar
push
push
je
adc
cmp
dec
dec
int3
adc
ss
aas
cmpsb
dec
inc
or
loop
nop
pop
cmpb
fstpt
dec
inc
pop
sti
push
jb
shlb
insl
jno
lea
and
cmp
sub
mov
jmp
fcmovnbe
int3
rcr
add
cli
cld
adc
ds
repz
mov
or
cltd
xchg
push
fcoml
inc
out
xchg
in
mov
push
cmp
jle
or
cmp
fnstenv
inc
test
lods
dec
mov
sub
mov
xchg
outsb
mov
xor
dec
add
and
mov
data16
nop
mov
jb
push
adc
cmp
jecxz
ja
mov
inc
in
popa
sub
ja
add
mov
inc
jp
fdivrp
push
je
xor
cmp
in
mov
xor
inc
mov
sarl
roll
jg
sub
mov
sbb
cmp
dec
jbe
pmuludq
mov
push
xor
stc
push
repz
xor
cs
add
sbb
push
das
adc
int3
and
xchg
cmp
xor
sub
ljmp
out
cmp
inc
addr16
mov
adc
scas
add
xor
add
shlb
insl
xchg
push
mov
in
jbe
mov
sti
jmp
push
sbb
xor
fsub
add
sbb
xor
xlat
xor
jo
mov
pop
inc
cmpsl
and
ss
in
jbe
mov
je
fldt
popa
adc
add
shlb
mov
inc
xlat
mov
into
xor
cltd
lahf
cltd
push
dec
fcoms
adc
add
pushf
mov
mov
push
adc
add
xor
cltd
test
push
pop
mov
mov
inc
jl
jns
sbb
lods
lahf
mov
lds
cmp
gs
mov
xor
rorb
push
orl
imul
mov
xor
mov
mov
cmp
push
xchg
mov
pop
adc
bound
add
xchg
inc
aas
mov
insb
jo
mov
or
testb
push
pushf
cmp
sti
and
stos
mov
imul
cmp
fdivrp
pusha
jecxz
or
dec
sbb
xor
xor
lret
sarb
out
scas
movsl
push
pop
mov
xchg
vxorpd
sub
mov
xor
push
jno
lods
xchg
dec
lock
test
insl
inc
dec
leave
mov
in
push
xor
out
mov
cmp
mov
orb
cmpsl
mov
cmp
mov
cli
test
enter
xor
dec
test
dec
add
sbb
call
cmp
push
inc
mov
lods
cmp
aam
dec
add
jno
ss
test
imul
rcrl
lret
lret
gs
stos
or
pop
dec
cmp
mov
test
subb
xor
mov
jle
cmp
jnp
pop
xchg
xchg
cmpb
cltd
loope
jle
xor
sub
mov
ja
jb
add
mov
mov
inc
int
insl
mov
jg
jno
jle
fucomp
pop
test
fwait
inc
ds
cmp
test
mov
jo
test
in
gs
add
jge
stc
insl
popa
cmp
in
xchg
cmp
out
out
push
add
mov
lds
or
shll
popf
cmpsl
inc
cltd
jno
repz
lods
test
ffree
mov
mov
xor
popa
and
cmpl
or
cmp
dec
pop
push
push
xlat
mov
add
mov
test
jno
fcmovb
mov
jno
xchg
and
adc
jno
jno
sub
in
ja
cmp
gs
inc
mov
popa
xchg
jno
popa
adc
lds
int
mov
imul
jno
or
or
mov
mov
insl
lds
cmp
push
jno
add
mov
jmp
adc
icebp
pop
sbb
insl
rcll
or
sub
jo
push
xchg
lods
pop
jnp
fldcw
in
in
adcb
dec
daa
loop
mov
mov
cmp
xchg
push
ss
add
in
dec
xchg
add
cmp
xor
dec
dec
sub
clc
xor
or
in
mov
push
dec
add
mov
shl
cmp
pop
out
insb
pop
mov
fwait
or
or
pop
hlt
cmp
mov
fcmovnbe
scas
test
cmp
pop
adc
bound
jge
out
cmpps
dec
lret
inc
lds
xchg
dec
inc
sbb
adc
mov
fstpl
aam
adc
rorl
sti
decl
adc
dec
in
lods
stc
pop
fsubl
add
nop
repz
lock
or
outsb
dec
mov
arpl
or
inc
out
xor
sbb
add
add
xor
jge
imul
test
int3
dec
mov
or
pop
loope
mov
push
out
adc
push
incl
push
and
adc
dec
ss
repz
fisttpll
adc
sbb
in
mov
xor
lock
lea
or
mov
fdivrs
outsl
jmp
sbbl
std
cmp
jbe
jne
mov
jo
sahf
pushf
pop
popa
jno
repnz
adc
out
dec
popa
cs
sti
push
push
inc
cmp
repnz
dec
inc
idivb
or
xor
inc
dec
sbb
leave
dec
outsb
aaa
rcrl
mov
mov
lret
popa
adc
cmp
ror
add
dec
inc
pop
aam
jne
mov
dec
sbb
mov
mov
pop
jle
rclb
ss
cmp
or
aas
int
mov
fstpl
mov
shrl
push
ja
lret
add
dec
inc
gs
in
or
into
pop
imul
cmp
mov
sar
sub
into
insb
push
pop
sti
iret
sbb
cld
xor
insl
xchg
movsl
ror
xor
movhlps
cmp
aad
add
xlat
jbe
xchg
push
repnz
sbb
mov
test
sbb
mov
mov
ficoms
cmp
inc
sahf
mov
sbb
adc
in
pop
jle
sarl
cmpsl
jg
sti
cs
cmpsb
dec
push
push
jbe
cltd
pop
cld
jg
mov
inc
adc
stos
in
loop
subl
test
mov
mov
xor
cmpsl
sti
sub
xor
cli
xchg
cmp
lcall
in
adc
imul
push
cltd
cmp
push
sti
xor
scas
push
jae
dec
mov
int3
pop
dec
imul
lcall
ss
inc
mov
pop
mul
ja
insl
rcll
in
lods
lcall
xor
out
test
adc
enter
cld
sbb
cmp
das
pop
stos
mov
cltd
mov
add
xorl
adcl
mov
test
jnp
dec
cltd
movsb
cld
sub
adc
cmp
stc
dec
imul
pop
sub
and
ja
sub
jle
inc
dec
xor
sub
int
enter
orl
dec
imulb
incl
sbb
data16
cmc
jno
icebp
cmovs
out
jle
add
ss
cli
or
jmp
jp
inc
dec
fdivl
ds
push
pop
popw
push
push
sbb
popa
sbb
xor
bound
test
div
in
nop
adc
pusha
add
mov
rcll
jp
lock
pop
loope
sub
sbb
mov
jge
and
jnp
dec
jp
jns
mov
ss
jo
notb
insl
pop
xchg
stc
push
sti
roll
jmp
sub
ss
lods
mov
push
js
rclb
daa
test
cmp
in
addr16
mov
idivb
mov
push
and
xchg
fstps
ja
bound
jne
shlb
lock
pop
xor
repz
push
xlat
mov
add
mov
sbb
jns
sub
scas
fistps
sub
imul
mov
xchg
sub
jl
inc
es
jbe
dec
pop
cmp
bound
mov
xor
cmp
fucom
xchg
inc
nop
cmp
into
or
push
jb
push
dec
into
sbb
fwait
xchg
inc
push
xchg
mov
sbb
push
dec
jne
add
add
dec
testb
xor
or
aam
jno
mov
mov
or
xchg
cmp
jmp
int
dec
dec
jp
les
mov
scas
mov
inc
cmp
sbb
test
xchg
mov
jb
push
test
xchg
dec
in
daa
insl
cli
adc
movsl
push
cmp
dec
sub
jnp
cli
and
fdivrp
sub
push
xlat
mov
jge
sbb
mov
push
jle
adc
xor
sbb
sbb
push
pop
add
mov
fs
or
sbb
dec
cmc
scas
out
rcrb
xor
mov
mov
xchg
sub
fistl
jg
sub
dec
cmpsl
mov
or
inc
out
cmpl
out
shll
push
lds
jno
add
cmpsl
push
pop
shll
jge
out
adc
sub
inc
mov
repnz
jb
sbb
and
cs
sbb
stos
shll
inc
push
jnp
dec
addl
inc
popa
add
pop
fistps
call
out
ss
dec
repz
das
cmp
xor
add
fidivl
sbb
mov
imul
push
fidivl
mov
push
cmpsb
hlt
std
sub
or
push
repz
pop
pop
rcll
imul
or
mov
cld
cmpsb
call
popa
cmpl
mov
xchg
nop
in
out
add
jmp
push
jbe
add
lods
sbb
fs
mov
repnz
sarl
xlat
push
je
adc
mov
xor
out
pusha
lods
sahf
or
mov
sub
jno
les
mov
sub
add
sahf
xor
sbb
inc
sub
cmp
les
xchg
mov
push
je
in
jmp
adc
popa
rorl
int
hlt
pop
clc
sbb
fstps
push
cmpsb
cld
xor
cli
cs
imul
cmp
push
xor
add
popa
std
mov
push
jbe
jecxz
inc
xchg
xchg
cmp
add
sbb
dec
cmpsb
inc
ja
inc
cli
ss
xor
loop
addb
cmpsl
cmp
cmp
sbb
adc
xor
xchg
cltd
xor
scas
push
mov
xchg
mov
cmc
sbb
sub
pop
inc
pop
repnz
lea
cmpsl
push
insb
sbb
or
mov
jge
and
call
fprem1
mov
xor
insl
and
or
in
sbb
dec
pop
fnstenv
and
adc
test
inc
int3
adc
sub
fnstcw
cmp
lea
jns
inc
cmpsb
mov
ret
adc
std
scas
sbb
pop
jle
pop
aas
xor
sbb
sarb
jb
push
jmp
repnz
fldcw
in
in
cmp
stos
leave
xchg
imul
ficomps
icebp
sbb
hlt
mov
inc
mov
lahf
pop
popa
test
mov
adc
sarb
jp
sahf
rclb
ds
or
dec
sbb
ret
jl
insl
adc
dec
push
dec
mov
cltd
punpckhwd
mov
xchg
jne
xchg
lret
mov
ret
sti
adc
pop
xchg
and
call
loope
test
mov
pop
movb
pop
shr
add
outsl
mov
dec
fcompl
dec
mov
mov
or
xorb
mov
jne
inc
dec
xchg
push
inc
cltd
push
sbb
sbb
inc
insl
pop
dec
lock
mov
in
insl
xchg
mov
jp
das
xor
or
iret
push
outsl
int3
lret
jno
and
inc
mov
mov
push
adcb
push
cli
lret
pop
andl
sti
xor
imul
adc
sub
add
movsl
aaa
xchg
push
pushl
xchg
push
movb
lahf
cmp
in
sbb
cs
mov
inc
and
mov
add
in
hlt
mov
adc
cltd
or
dec
loopne
lahf
sub
cmpsl
test
lods
shlb
cmp
daa
inc
popa
ss
or
pop
jnp
jg
ds
bound
aam
int
ret
test
inc
por
dec
fxch
and
cs
xchg
jg
mov
push
in
jecxz
enter
cmc
push
adc
imul
test
jbe
cmovb
out
inc
jmp
pushaw
sti
add
shlb
lret
sti
daa
pop
xor
sbb
inc
xchg
dec
in
mov
sub
sub
pusha
bound
mov
xchg
call
int
jae
mov
push
mov
dec
out
mov
cmpsb
mov
sub
dec
cli
arpl
ja
mov
dec
push
push
mov
ljmp
dec
pop
repz
stc
rcrl
sbb
movsb
pop
sub
sarb
inc
sbb
call
mov
push
push
in
inc
mov
inc
ss
sarl
sub
mov
dec
sub
negb
shll
aas
pop
mov
jge
and
cmp
dec
adc
int
scas
gs
mov
arpl
aam
cmpsl
in
push
jb
mov
pop
cld
xor
scas
lret
sarl
je
test
ficoml
inc
outsb
rcrl
mov
xlat
lods
test
xor
jge
add
sub
sbb
sub
loopne
sbb
jnp
cmp
movsb
push
mov
pop
addr16
loopne
pop
imul
lock
pop
adc
cld
inc
jb
xlat
jge
jno
inc
shll
add
dec
lret
testl
sub
pop
jnp
les
push
inc
insb
popa
in
or
push
clc
scas
imull
pop
dec
ret
mov
sbb
mov
xor
dec
test
sti
das
mov
push
inc
outsb
xchg
pop
mov
sub
jb
sub
testl
xchg
fisttpl
call
movsb
rcrb
filds
jae
cli
pop
dec
xor
mov
sti
sub
dec
cmp
fstp
mov
mov
arpl
in
inc
out
dec
mov
jg
lea
and
mov
rcll
inc
nop
cmp
or
xor
imul
ja
pop
imul
sub
and
fsts
jbe
rcll
in
sub
jae
inc
add
fwait
inc
cmp
push
sti
call
nop
or
lds
inc
and
pop
jmp
test
push
cltd
fs
jmp
popa
or
dec
and
adc
fldenv
nop
mov
jo
insl
inc
mov
ss
xchg
dec
fistpl
push
push
popa
flds
push
push
adc
dec
call
cmc
dec
das
loope
in
push
push
es
pop
pop
sbb
inc
aas
push
aaa
ss
jnp
push
mov
in
push
ja
cmp
insb
push
xor
cmp
clc
test
or
fs
or
add
mov
cltd
fsts
fldt
js
add
xlat
pop
fdivrs
xor
out
mov
add
inc
inc
adc
sbb
stos
out
xor
insl
in
pop
or
mov
in
add
cmpsl
sbbl
pop
jge
or
xchg
push
mov
mov
jae
jl
adc
out
inc
cmp
or
sbb
pop
cmp
jo
test
mov
shlb
mov
add
pop
sub
xlat
xchg
adcb
pop
cmp
fildl
rcrl
stc
push
mov
sbb
aam
inc
jo
jecxz
mov
dec
pop
sub
push
jns
or
cmp
adc
sbb
mov
mov
xor
mov
test
inc
lea
cmp
or
or
aam
or
repnz
shll
dec
push
sbbl
test
cmc
pop
cmp
pop
addl
inc
insl
xor
push
sub
int
lret
jl
mov
sbb
loope
cmpl
mov
dec
loop
jno
pop
sbb
dec
cld
fldt
jecxz
mov
jge
jge
xchg
mov
or
mov
sbb
sahf
jno
xor
jmp
leave
add
inc
sbb
or
insb
push
aam
pop
mov
gs
sbb
xchg
iret
mov
lods
xchg
jecxz
xor
dec
pop
mov
sub
out
adc
mov
jge
outsb
push
test
loope
inc
pop
jno
mov
jle
cmp
dec
es
xchg
gs
inc
sti
shr
lret
xor
cli
scas
orb
je
in
cld
sbb
mov
sub
inc
lret
mov
cmp
xor
loope
jb
ja
and
adc
int
in
or
mov
inc
mov
fwait
push
push
jbe
pop
dec
jnp
cmp
pop
roll
inc
movsl
dec
repnz
mov
sbb
ds
sti
adc
sbb
push
jmp
jb
mov
call
lret
cld
adc
dec
sbbl
inc
cmp
pusha
sti
testb
loope
push
cwtl
or
sbb
sbb
repz
call
push
sbb
or
fmuls
mov
dec
pop
or
sub
mov
jns
mov
and
dec
ja
pusha
nop
jbe
es
and
xchg
shlb
aam
lahf
xor
mov
rol
cmc
xor
push
inc
repnz
pop
pop
pusha
jno
pop
dec
inc
lret
add
fildll
fidivl
dec
es
dec
mov
xor
lods
inc
loop
pusha
or
in
xchg
inc
mov
repnz
mov
aam
sbb
lds
add
xchg
cmp
divl
mov
dec
mov
nop
mov
imul
mov
out
jb
inc
lods
or
xor
push
bound
mov
into
cmp
xor
sub
call
jp
addr16
add
fcomps
add
fdivs
mov
inc
movsl
adc
jne
xchg
in
dec
add
adc
xor
cmp
push
dec
pop
out
add
mov
in
ja
je
inc
dec
sbb
in
cmp
push
xchg
mov
bswap
sub
dec
or
pop
xchg
scas
add
mov
sbb
cmp
mov
dec
sbb
sti
dec
iret
push
push
pause
cmp
push
cli
push
sub
inc
push
adc
jl
or
popa
mov
ret
shr
or
adc
inc
fiadds
sar
xchg
scas
repz
pop
or
ja
dec
sbb
inc
lea
mov
sbb
mov
push
lods
loop
or
jne
pop
pop
sbb
dec
jp
mov
out
sbb
jno
pop
adc
outsl
ljmp
pop
xor
ss
sub
sub
xchg
sub
xor
push
push
jno,pn
add
mov
aas
sti
sub
jne
cmp
icebp
cltd
maxps
fs
pop
jae
jae
sbb
jns
mov
sti
push
mov
pop
test
aam
or
hlt
jle
aaa
mov
inc
pop
call
shl
dec
lods
adc
add
fldenv
xchg
cmpl
dec
or
xchg
xchg
idiv
adc
sbb
aad
xor
dec
stc
popa
icebp
ds
outsb
add
push
jnp
inc
sub
mov
ret
or
mov
mov
mov
sub
popa
cmpsl
ds
xor
js
fidivs
cmp
adc
fisubrl
push
int3
push
xor
mov
gs
imul
inc
sbb
mov
fildll
cmp
push
sbb
pop
aaa
jo
ret
jno
cmc
jecxz
xor
pop
ss
pop
aad
adc
daa
xor
aad
addr16
ss
sbb
aas
idivb
repnz
cmp
push
in
sbb
dec
mov
dec
rcll
shll
xor
xor
cmpsl
mov
sbb
adc
sub
pop
ret
cmp
cmpsl
das
dec
mov
or
loope
dec
push
dec
sti
inc
push
dec
in
insl
add
mov
jne
push
out
pop
or
nop
subb
dec
imul
or
test
pop
dec
xor
fwait
stc
xchg
lret
pop
clc
mov
pop
jecxz
out
or
cmpb
xchg
jg
cmp
ret
push
bound
mov
inc
mov
xchg
popa
xor
fistpl
fadd
dec
in
gs
ja
sub
cld
sbb
int
in
xor
jns
cmp
sub
xor
fwait
shrl
dec
ja
hlt
je
popa
xlat
testb
inc
jg
dec
lret
lea
or
out
loop
xchg
and
inc
jmp
cmp
mov
in
sbbb
pop
orl
sbb
adc
push
mov
cmp
test
outsl
push
out
jne
jo
inc
dec
mov
sbb
sbb
sahf
cmpsb
push
jbe
imul
xchg
das
pushf
push
cmp
dec
push
sbbl
or
or
jp
aad
aaa
adc
loope
mov
xor
xor
xchg
out
subl
push
std
sbb
mov
mov
loop
popa
mov
call
add
dec
inc
ret
cltd
arpl
mov
cmp
pop
sbb
lock
mov
negl
jo
sub
dec
enter
mov
sarb
xchg
aaa
loopne
jb
icebp
nop
cltd
xchg
sub
cmp
or
xor
cmpsl
dec
roll
int3
pop
inc
sbb
sahf
xor
adc
ljmp
clc
dec
mov
or
push
outsl
or
mov
ljmp
push
push
dec
enter
lds
into
leave
rclb
or
jg
jb
insl
enter
pop
dec
add
es
or
add
mov
inc
dec
ficompl
in
adc
loopne
push
mov
push
jbe
lret
adc
imul
stc
push
adc
push
and
mov
add
int3
add
lcall
jnp
fidivs
loop
push
jmp
mov
sti
cmp
icebp
arpl
push
ds
stos
push
pop
fwait
jl
xchg
aas
dec
xchg
aam
push
mov
mov
pop
lock
mov
sub
repz
popf
xor
mov
push
cld
out
mov
cmp
fstl
mov
call
jnp
dec
jb
push
imul
repnz
xchg
out
repz
jbe
mov
dec
xchg
push
mov
add
push
inc
xor
sbb
push
scas
jns
sub
in
push
hlt
dec
sbb
mov
pop
das
push
push
andl
je
lods
lret
and
push
in
pop
xchg
sub
jp
push
shrb
jle
lret
mov
js
clc
dec
or
adc
cmp
jne
push
push
outsb
push
inc
insb
sbb
jo
dec
clc
jmp
xchg
sub
repnz
cmp
sub
je
pusha
adc
das
test
or
imul
sbb
gs
adc
icebp
sub
lcall
dec
stos
sub
cltd
push
jg
push
fprem1
sarl
xchg
inc
push
inc
imul
sub
cmp
shlb
js
fcoml
into
stos
push
cli
enter
inc
sub
out
cmp
jmp
mov
sub
loopne
push
dec
nop
popf
stos
lcall
pop
gs
xchg
push
adc
add
call
push
roll
push
cmp
push
or
xchg
aad
lahf
adc
mov
cmpsb
rcll
pop
adc
mov
cmp
inc
sub
sbb
mov
jmp
stc
mov
cmp
sarl
jno
outsl
std
jnp
push
lahf
lret
pop
and
xchg
push
sti
dec
mov
daa
dec
cmpsb
xchg
mov
mov
inc
test
cmp
mov
mov
push
out
pushf
call
pop
dec
insl
aaa
mov
loope
ds
push
and
sbb
aaa
pusha
insb
adc
dec
xchg
clc
ret
push
or
mov
or
xchg
leave
mov
scas
clc
decl
push
pop
mov
cmp
jno
adc
and
into
fwait
loop
lcall
pop
std
mov
or
mov
pop
jecxz
dec
leave
int
lods
ds
dec
dec
repz
cmp
sbb
push
or
cmc
fwait
jno
mov
push
arpl
mov
lods
cmc
fstl
or
jno
je
push
dec
testl
ljmp
cmp
cmc
scas
into
and
push
ficompl
jg
rcll
std
xorl
lret
and
mov
into
out
lret
popf
dec
mov
xchg
fmulp
inc
push
outsl
out
mov
cmp
jmp
popa
and
js
rorl
jbe
cli
sbb
pop
pushf
adc
insl
pop
dec
pop
sub
push
jg
push
adcl
dec
data16
push
inc
inc
pop
mov
fwait
lret
aaa
push
fldenv
test
cld
xchg
push
out
xchg
or
shrl
stc
push
ret
cmp
xchg
cmp
iret
inc
add
rorb
push
adc
outsb
push
adc
push
lods
push
cmpsl
and
imul
or
cmp
fldl
rol
or
push
iret
dec
xchg
fsub
push
unpckhps
ja
mov
dec
xchg
mov
shll
das
mov
push
lcall
stos
les
mov
es
cmp
js
dec
push
push
rcll
or
xor
es
jg
test
adc
mov
xchg
mov
sbb
mov
mov
mov
daa
adc
out
cld
js
adc
cmp
rcll
test
icebp
lds
cmc
jae
push
loopne
adc
lcall
push
shll
fnsave
icebp
cmp
shlb
mov
insl
lods
mov
mov
add
mov
sbb
jle
dec
insl
xchg
std
mov
add
push
mov
push
fmul
inc
test
por
dec
ja
xchg
rorl
stos
mov
fwait
xchg
loope
shrl
jle
movsl
int3
dec
mov
or
ror
jns
add
fs
lods
sub
pop
inc
sbb
adc
iret
xor
cmp
jg
cmp
dec
pop
cmpsb
or
adc
pop
dec
dec
xlat
dec
call
mov
dec
icebp
mov
ja
sbb
fldl
push
into
mov
movl
insl
movsl
int
cli
mov
inc
cmp
mov
dec
adc
dec
mov
pop
push
fucomip
adc
push
pop
add
inc
push
aas
jmp
aad
mov
adc
outsl
clc
xor
mov
xchg
xor
xlat
shlb
pop
rcr
adc
dec
loop
sub
and
push
dec
push
ss
stc
test
push
and
pop
fnstenv
fdivs
mov
sub
iret
adc
sar
jae
mov
mov
push
lret
shrb
inc
adc
mov
push
jge
sub
cmpsb
dec
fcomps
loopne
dec
mov
inc
cmp
push
jmp
jns
lret
and
push
popf
sub
jmp
adc
xor
mov
mov
push
js
clc
dec
stc
lahf
mov
test
loopne
dec
out
mov
adc
or
iret
dec
sbb
dec
jecxz
stos
mov
sub
push
adc
lcall
pop
cmp
and
mov
idiv
lock
lahf
mov
dec
dec
cmp
cwtl
adc
mov
jno
popf
push
mov
jg
xchg
insl
or
inc
cmpsb
scas
notb
and
cmp
cmpsl
cmp
mov
push
dec
pop
insb
pop
ja
cmpb
in
push
insl
out
inc
movsb
fdivs
daa
jns
aam
sbb
lahf
sbb
ret
ss
cltd
push
sarl
or
push
xorb
call
cmp
mov
mov
in
rcrl
mov
lods
push
subl
insb
xchg
ds
leave
jno
fisttpll
loopne
dec
adc
loope
icebp
pop
push
in
mov
push
in
mov
fimuls
lahf
mov
scas
fstl
push
xchg
dec
mov
stc
lahf
dec
mov
mov
adc
push
bnd
mov
mov
xor
mov
inc
push
adc
and
or
push
pop
pop
push
push
aad
mov
inc
mov
rclb
and
sbb
inc
addr16
mov
add
lea
test
adc
mov
popa
outsl
je
jne
lahf
dec
stc
aas
mov
dec
call
cli
push
or
xchg
dec
js
insl
xor
hlt
jmp
dec
dec
in
icebp
jecxz
dec
das
bound
jae
pop
push
cltd
add
push
xchg
movsl
test
jns
cmp
dec
jbe
fisubrl
push
mov
pop
notb
push
sub
mov
push
dec
out
pop
push
or
sub
popa
adc
jmp
mov
cmp
dec
call
arpl
call
sbb
enter
hlt
sbbl
lds
mov
sahf
mov
aas
cmp
cld
push
add
jb
dec
xchg
in
call
shll
outsl
imul
lret
movb
xlat
gs
lock
ja
scas
adc
stos
mov
sbb
cmp
int
mov
call
fsubl
imul
mov
imul
cmp
pusha
jl
sbb
lea
lret
pop
out
push
ds
testb
push
adc
movsl
mov
hlt
sti
jbe
adc
je
xorl
insb
jp
mov
push
mov
pusha
inc
mov
pop
adcl
rorl
mov
push
lods
inc
loopne
push
icebp
je
lea
push
push
jbe
ljmp
iret
test
adc
jno
pop
mov
sbb
adc
inc
dec
push
icebp
xchg
in
push
xor
loopne
out
insb
mov
jp
lret
outsl
sub
xchg
aaa
sarl
pushf
sarl
cmp
jge
pop
inc
insl
adc
adc
scas
pop
push
dec
loopne
out
add
sub
cmp
dec
and
cmp
jno
jae
xor
adc
cmc
mov
insl
dec
movsb
pop
inc
lods
mov
loopne
das
jns
cmp
xchg
inc
insl
mov
xor
test
cmpb
ljmp
shll
cmp
js
lret
inc
inc
xlat
push
pop
daa
stc
shl
jae
push
mov
jo
mov
popa
cmp
jnp
push
inc
inc
sub
jae
cmp
jmp
scas
cmpsb
rorb
out
push
mov
pop
ret
jns
pop
pop
sarb
jno
out
dec
cld
add
loope
dec
push
inc
shlw
or
jo
pop
adc
subl
push
or
or
addr16
stc
push
mov
icebp
pop
xchg
dec
cwtl
push
mov
addb
push
lcall
std
cmpsl
jnp
push
sbb
push
gs
push
out
push
rorl
jg
push
dec
shl
lods
ja
fistps
aaa
loopne
add
and
shl
dec
cmp
dec
in
inc
cmp
jle
lahf
mov
mov
sbb
divl
inc
jae
lret
push
mov
mov
push
xor
and
push
pop
rorl
std
mov
xor
dec
fldz
xlat
enter
into
in
dec
dec
fistps
and
lcall
in
int
lds
pop
jnp
xor
lea
lret
and
jl
enter
pop
popa
adc
xlat
cltd
cmp
dec
and
xchg
mov
push
and
call
fbstp
and
jle
or
sub
xor
sub
xchg
dec
gs
movb
ficoml
sarb
push
pop
cmp
aam
in
sub
add
call
es
sarl
cmp
fstl
inc
add
jo
dec
pop
mov
and
adc
mov
cmpsl
push
roll
sub
push
das
lret
sub
nop
sbb
mov
ja
cltd
cld
sub
call
pusha
icebp
add
xor
jmp
push
sti
dec
push
daa
aam
add
jb
mov
lods
push
mov
mov
dec
cltd
or
jns
pop
push
push
mov
cld
cmc
int3
scas
pop
jno
scas
jno
loop
fsubr
je
pop
sarl
push
out
jae
sbb
mov
jl
or
dec
into
or
cmc
adc
mov
int
femms
rcll
add
imul
jb
jo
jb
dec
gs
fs
add
push
arpl
insb
add
add
gs
je
inc
dec
inc
imul
inc
outsl
jo
push
arpl
add
jb
outsb
push
add
scas
mov
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
sub
mov
aas
notl
cmp
sbb
mov
ss
cmp
push
mov
lods
gs
nop
sbb
cld
div
jne
jb
push
jecxz
dec
bound
push
out
cltd
add
aaa
loop
dec
push
imul
adc
xor
popa
subb
mov
enter
mov
dec
and
push
daa
xor
gs
sti
xor
popa
lock
mov
outsl
subb
repnz
cltd
outsb
ss
popa
dec
pushf
andb
adc
and
push
cmp
shrb
or
sbb
into
jb
clc
or
sbb
jmp
setle
in
sarb
xor
push
scas
adc
push
push
ss
gs
mov
jno
inc
dec
mov
inc
adc
sti
popa
fstps
jge
adc
repnz
jge
dec
jbe
sub
sub
or
add
jp
fisubrl
sti
jo
shll
cmp
cmp
and
add
daa
jbe
iret
mov
addb
xchg
mov
imul
mov
mov
pop
setle
dec
inc
mov
pop
lcall
stos
in
push
lret
add
insb
insb
push
arpl
scas
jnp
aas
mov
dec
subb
je
ja
enter
negl
sbbl
cwtl
pop
inc
xor
jae
cmc
jmp
pop
add
into
es
pop
dec
add
ret
aas
sbbl
push
fdivr
lock
mov
add
xchg
iret
pop
ror
jg
dec
mov
xlat
outsb
scas
dec
cmpsb
mov
jne
mov
adcb
xlat
sub
bound
add
popa
jo
jb
add
mov
mov
outsl
mov
into
inc
in
popa
lret
scas
aam
movsb
imul
xchg
stc
jns
xchg
in
incb
mov
xchg
idivb
mov
hlt
mov
xchg
lahf
mov
stos
inc
fldenv
sahf
loop
aas
insb
pusha
aas
ret
jecxz
dec
aam
stos
clc
rol
jle
cwtl
jecxz
stos
add
popa
movl
mov
push
add
xchg
push
shll
pop
sub
into
jo
dec
sahf
mov
mov
adc
and
cmp
pushf
call
jmp
pushl
add
pusha
lea
jmp
add
inc
push
outsb
jne
je
insl
add
cmp
push
add
ljmp
addr16
mov
pop
mov
sub
pop
jae
into
mov
shll
jl
mov
out
sub
dec
stos
mov
rclb
push
add
fs
dec
push
adc
and
rcrb
rorb
sub
push
fwait
movsl
and
mull
mov
nop
inc
push
subl
test
push
clc
hlt
mov
js
fdivrp
mov
test
xor
dec
fldl
repz
push
jg
mov
int
adc
push
jo
pop
jp
dec
or
cwtl
xor
mov
add
cmp
js
mov
add
jge
cmp
pop
bound
or
push
mov
lea
call
pusha
call
jmp
jle
xchg
data16
mov
in
hlt
es
aas
mov
adc
imul
out
xchg
divb
subl
out
loope
daa
testb
movsb
in
pop
jecxz
xchg
into
daa
mulps
inc
out
dec
inc
inc
cmc
add
sbb
push
mov
mov
xor
inc
ss
inc
pop
enter
decb
loop
out
adc
mov
push
push
nop
and
es
pop
mov
add
xor
loope
and
ficoms
imul
scas
cmpsb
dec
es
sub
and
sarl
movsl
push
enter
or
cmp
daa
test
xor
fs
sti
mov
xor
test
icebp
cmp
sti
pusha
setns
mov
mov
cmp
adc
bound
add
mov
mov
cli
push
lds
jne
leave
movsl
setb
dec
fdivp
sbb
cmp
ret
cmpb
call
and
in
clc
or
adc
push
adc
push
into
cmp
into
out
sbb
fwait
decl
das
int3
push
subb
mov
in
cmp
rcrl
dec
ret
dec
outsb
xlat
lock
xor
scas
pop
pop
mov
pop
jo
pop
or
out
adc
adc
mov
inc
aam
sub
mov
add
fadds
add
outsl
bound
inc
insb
popa
addr16
add
inc
gs
insb
addr16
je
insb
dec
inc
add
add
insb
imul
je
pushf
movl
pusha
movl
mov
movb
push
mov
lea
jmp
add
dec
jo
outsb
push
jb
outsb
je
jb
add
movsb
not
mov
jmp
add
push
gs
outsb
jne
add
push
gs
imul
inc
js
inc
js
add
inc
gs
je
gs
push
outsl
fs
and
push
imul
popa
jae
inc
add
cmp
into
movb
movzbw
mov
pop
bswap
call
add
inc
gs
imul
add
or
add
clc
bt
call
add
inc
gs
jb
jns
imul
add
je
je
gs
push
outsl
fs
add
outsl
jae
dec
popa
outsb
fs
add
lock
int
add
stc
call
push
push
test
movb
call
add
inc
gs
dec
inc
imul
insb
insb
dec
gs
dec
outsl
outsl
imul
mov
pushl
pushl
push
pushl
ret
add
inc
imul
je
imul
push
jmp
add
push
gs
jne
jae
jb
add
dec
outsl
popa
fs
jne
jae
jb
add
add
outsl
jae
inc
insb
imul
add
add
imul
outsb
je
outsl
insb
add
xchg
mov
add
fdivr
sub
pusha
btc
and
lea
add
jmp
add
dec
outsl
popa
fs
imul
add
fwait
aad
push
neg
das
push
sub
cwtl
jmp
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
neg
push
jmp
lea
jne
pushf
inc
sbb
pushl
mov
or
ror
sub
jmp
add
push
gs
jb
outsl
jb
outsl
fs
add
insb
je
inc
jns
gs
outsl
push
imul
jmp
adc
aas
bound
mov
mov
call
rcr
out
int
les
xchg
mov
rol
fnstsw
jle
add
cmpsl
shlb
js
in
dec
daa
or
mov
out
clc
std
xchg
fsubrp
push
outsl
inc
inc
popf
jle
pop
jbe
push
mov
mov
subl
lds
in
adc
mov
iret
in
aam
mov
pop
gs
hlt
sub
jge
inc
sub
call
dec
xchg
sbb
pop
js
pop
lds
imul
inc
dec
xor
mov
stc
jnp
cmp
cmpsl
out
nop
xchg
in
mov
xchg
pop
je
jecxz
xchg
insb
inc
test
push
adc
movsb
hlt
sahf
push
xchg
xchg
push
popf
in
mov
loope
imul
pop
xchg
mov
scas
enter
dec
stc
ss
idivb
mov
fisubs
push
cmp
xchg
xor
add
pop
or
push
push
out
cmp
adc
jae
push
fsubs
jne
icebp
mov
cmc
lods
push
xchg
rclb
or
and
cmp
fistpll
sub
mov
imul
xchg
ss
outsb
ret
add
lcall
push
xchg
loopne
ljmp
mov
jne
ljmp
xor
xor
and
mov
lds
inc
jno
movsl
pusha
add
dec
ljmp
cwtl
inc
adc
pop
xchg
and
sub
int
or
fwait
repz
adc
xchg
xor
and
insl
das
arpl
lcall
aas
mov
jnp
in
jmp
cmp
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
jo
popa
je
push
imul
fs
jne
aaa
test
btr
xor
ror
lea
mov
mov
push
add
shl
pushf
clc
mov
bt
call
lea
je
pushf
pushf
lea
je
stc
test
pushf
pushl
add
lea
bt
stc
clc
cmp
jmp
cmp
int3
push
fcmove
jb
jne
ds
xchg
jg
pop
sub
jnp
mov
dec
les
mov
jns
inc
popf
cltd
in
popa
mov
xor
movsl
xor
add
or
xchg
xor
out
mov
shll
ret
mov
enter
push
adcl
xor
mov
add
jecxz
out
cwtl
cmp
mov
lea
pushf
pop
jne
insl
cltd
fcoms
dec
pop
jecxz
adc
or
dec
pusha
inc
mov
jno
ja
push
jmp
add
push
gs
imul
addr16
js
add
inc
gs
je
imul
inc
add
repz
pop
aas
mov
rorl
out
leave
aam
sbb
cmpsl
ds
lock
hlt
fidivrs
add
mov
sti
fs
call
into
addr16
push
clc
pushf
js
push
xor
sub
sbb
js
ljmp
inc
jge
or
mov
jno
loop
pusha
xor
push
cmpsl
add
dec
imul
inc
and
mov
mov
pushf
push
mov
pushl
ret
test
addr16
aas
mov
sub
dec
and
leave
ljmp
imul
and
cmpsb
int3
xchg
psubsb
cmp
xor
sti
pop
cmp
in
std
mov
mov
cmp
ret
pushf
cmpb
call
add
dec
push
je
inc
push
add
mov
cmpsl
insl
xchg
jns
mov
push
dec
dec
lahf
mov
bound
icebp
cmp
mov
addr16
in
dec
xor
in
sub
add
mov
imul
xchg
movsl
mov
cmp
jno
cmp
mov
xor
lea
aad
icebp
cmp
insl
mov
fwait
mov
xchg
pop
mov
cmp
mov
cmc
xor
jns
mov
xchg
jge
mov
pop
insl
push
jns
mov
inc
mov
sti
cmp
insl
add
imul
loop
cmpsl
xor
mov
filds
mov
cmp
insl
adc
out
cmp
imul
repz
insl
jne
inc
mov
cmp
jno
jmp
sbb
add
jne
jp
cmc
cmp
xor
insl
mov
mov
sbb
xchg
xor
cmp
insl
xchg
jns
mov
pop
imul
out
pop
jns
mov
mov
cmp
insl
lahf
jns
mov
sbbl
cmp
imul
mov
jmp
mov
cmp
mov
cmp
dec
or
out
mov
insl
jns
cmpl
and
cmp
insl
icebp
jns
mov
movsl
jae
cmp
outsl
mov
jno
int
sub
mov
cmp
insl
icebp
mov
leave
lahf
mov
cmp
mov
mov
xor
sti
cmp
insl
pop
jns
mov
mov
mov
cmp
mov
imul
das
stc
mov
cmp
insl
mov
popf
mov
andl
push
cmp
imul
xchg
lea
mov
cmp
imul
xchg
jns
add
pop
ljmp
mov
xor
das
mov
add
sub
lds
insl
or
mov
dec
mov
bound
repz
add
insl
int
fwait
mov
xorl
arpl
dec
or
and
xchg
xchg
pop
mov
loop
fistps
mov
lea
jg
mov
mov
inc
mov
adc
mov
cmp
insl
in
jns
mov
lahf
mov
jnp
xchg
insl
pop
jns
mov
inc
mov
sbb
insl
aad
in
mov
leave
lea
subl
push
mov
cmp
fstpt
jns
mov
int
mov
cmp
mov
cmp
lret
daa
insl
or
mov
leave
xchg
mov
cmp
jns
dec
push
mov
mov
lods
fnsave
or
mov
inc
cmp
cmp
mov
roll
insl
sbb
mov
imul
jnp
stos
cmp
insl
mov
imul
daa
sbb
loop
xor
mov
jns
mov
rcr
bound
out
xlat
lea
xor
xor
mov
popa
imul
int
mov
cmp
lea
mov
jl
cmp
jne
xor
ss
cmp
push
or
jne
lods
ljmp
dec
shr
cmp
mov
scas
jmp
dec
mov
or
or
bound
or
sub
or
movl
sbb
pop
imul
pop
mov
repnz
sub
mov
cmp
push
dec
cmp
jns
mov
jl
mov
cmp
insl
mov
imul
or
mov
cmp
insl
adc
mov
arpl
jns
mov
lods
lahf
mov
cmp
insl
mov
imul
or
mov
cmp
aaa
push
cmp
imul
pop
mov
cmp
mov
leave
ret
cmp
insl
lds
mov
filds
idivb
cli
insl
das
jns
mov
imul
insl
cmpsl
jns
mov
shr
ljmp
mov
daa
sub
dec
gs
pusha
jns
mov
leave
mov
out
cmp
insl
push
jns
mov
xor
push
jbe
test
imul
cmp
add
imul
lea
mov
cmp
mov
adc
mov
cmp
insl
inc
jns
mov
imul
cmp
pusha
int3
xchg
fwait
lahf
jmp
pop
lods
inc
sub
ds
xor
pushf
js
pusha
sbb
fidivl
loopne
mov
xor
mov
cmp
out
mov
test
inc
lock
xchg
adc
sbb
lds
add
jecxz
cmp
movsl
test
insl
and
iret
cltd
jns
cmp
mov
cli
sbb
adc
subl
scas
jle
sahf
mov
cmp
mov
movb
xchg
mov
stos
xchg
cld
clc
lds
gs
jno
lods
mov
fstl
js
or
xchg
popf
test
adc
gs
stos
fwait
addl
ja
xchg
stos
push
das
add
cmp
xor
je
inc
fs
inc
fmull
lea
fisubrl
jp
sahf
lea
jge
xor
mov
xor
mov
cltd
pop
jne
lods
cli
ljmp
dec
jno
test
stos
inc
lahf
mov
pop
push
dec
arpl
xlat
push
cltd
fs
icebp
add
jnp
xchg
scas
jo
push
aas
les
jp
fwait
jo
xchg
adc
mov
mov
jns
movsl
ljmp
stos
sbb
xchg
cmpsb
dec
push
inc
movsl
adc
cmp
fstpt
fstpl
lods
popf
adcl
lods
movsl
imul
stos
dec
ja
out
jecxz
pop
mov
xlat
and
mov
cmc
mov
sbbb
mov
cmp
jb
loope
mov
mov
aas
shlb
mov
jp
notb
cmp
in
pushf
xchg
xchg
pop
or
mov
pop
daa
jnp
imul
jne
cwtl
dec
cltd
fisubs
inc
repz
mov
lea
dec
shl
mov
mov
test
lods
aad
jl
push
add
mov
adc
jns
cltd
stc
subl
dec
sub
pop
cli
sahf
jne
and
xor
lea
jns
pop
arpl
in
test
insb
fcmovb
push
bound
dec
mov
xlat
cmp
mov
xorl
and
cmpl
repz
cmpl
inc
sbb
xchg
lea
pushf
mov
lea
jmp
pop
cli
mov
pop
stc
dec
and
jno
pop
jno
pop
jmp
mov
dec
jns
inc
ss
jmp
push
cmp
xchg
xchg
mov
cwtl
cmp
xor
lods
pop
xor
push
je
mov
xchg
ss
test
rorl
mov
rorl
mov
dec
jnp
and
inc
rorl
mov
faddp
lods
adc
xor
faddp
mov
lds
outsl
sub
cmp
xchg
roll
sub
aaa
insb
jno
mov
push
in
movsl
cmp
push
lahf
imul
fadd
mov
sub
movsb
movsb
sarl
stc
fcomps
nop
dec
mov
pop
sub
mov
jae
mov
xor
jne
sub
jne
and
sarl
mov
push
js
sbb
jge
xchg
add
mov
and
pop
pop
pop
lods
mov
xchg
subb
nop
xchg
lcall
mov
sbb
push
faddl
hlt
aas
add
adc
dec
imul
cmp
cmpl
int3
lret
cltd
inc
inc
bound
xor
xchg
push
xchg
shl
jbe
xchg
mov
subb
pop
popa
popa
xchg
jae
xor
movsb
jb
fs
mov
push
inc
jp
jl
shll
mov
or
cmc
jb
sbb
add
lods
fwait
cmp
jge
loop
jno
add
stos
cli
mov
xchg
insl
mov
push
cmc
and
arpl
in
into
xor
mov
adc
bound
mov
mov
loope
and
xor
push
ja
mov
mov
stos
push
lcall
xchg
lods
shll
in
enter
mov
xchg
stos
adc
push
sbb
popa
movsl
sti
add
popa
adc
cmc
in
xor
adcl
subb
lods
pop
scas
pop
mov
fucomip
xchg
popa
pop
mov
in
mov
pop
mov
and
xor
xor
cmc
pop
icebp
pop
inc
or
jl
fcomps
clc
cmpb
mov
das
mov
insb
mov
dec
ucomiss
data16
dec
leave
not
push
xchg
xchg
pop
cmp
mov
pop
xchg
xor
mov
popa
and
mov
cmc
sub
sub
xlat
or
mov
lret
in
jbe
cs
loopne
or
pop
sbb
xorb
dec
sbb
aas
cld
xlat
js
push
jnp
and
loope
roll
pop
mov
jmp
pop
pop
std
subl
xor
lods
rcl
dec
std
dec
sbb
push
frstor
repz
jne
rcll
jno
cmp
push
js
arpl
push
xchg
cltd
les
imul
xor
sub
mov
aas
cmp
cli
jno
xor
pop
insb
dec
and
lds
loope
jno
ja
mov
orl
pusha
jle
pop
sti
pop
mov
popa
sub
push
test
xor
lcall
sbb
cmp
nop
mov
sahf
repz
insl
and
xor
jb
inc
mov
lret
out
in
sti
sahf
cltd
cmpsb
stc
dec
xor
jbe
or
loope
mov
cmpsl
aas
dec
cmp
outsl
cmp
adc
push
sbb
cli
shll
mov
cmp
sbb
test
dec
aad
pop
and
stc
adc
jnp
fstpl
xor
mov
pop
scas
ljmp
xor
dec
xorl
jnp
lret
clc
rclb
jne
cmp
xchg
xchg
lahf
mov
pop
mov
pushf
popf
test
cmp
xchg
inc
mov
inc
pop
mov
fisttpll
pop
les
cmp
dec
mov
popf
or
xor
leave
mov
std
add
xchg
aad
pop
or
xor
push
adc
xor
dec
jnp
cmpsl
je
test
push
or
inc
scas
mov
fisttpl
rcll
jnp
pop
sbb
lods
test
mov
cmp
mov
call
cmp
or
fwait
mov
inc
data16
add
cmp
add
mov
icebp
and
adc
loope
sbb
nop
cmp
adc
rorl
cmp
call
mov
xchg
jns
add
ret
popl
aaa
dec
in
daa
cmpsl
cmp
push
gs
test
in
cmp
mov
mov
jo
cld
cmpsl
mov
inc
sub
mov
sbb
dec
call
mov
pop
bound
xchg
and
jnp
dec
bnd
mov
mov
insb
cmpl
aam
shrl
fisubs
mov
and
mov
adc
fidivrl
xchg
mov
jno
std
popl
sub
ja
cmp
insb
xor
mov
xchg
pop
cltd
mov
cmp
mov
nop
jo
loopne
aaa
dec
cli
add
mov
cmpsl
test
add
fs
dec
fs
fdiv
push
pshufw
xchg
cwtl
je
jmp
pusha
fdivr
push
out
sti
daa
or
aam
mov
xor
mov
pushfw
push
mov
mov
insl
lret
mov
out
std
pop
cmp
popa
arpl
addr16
xor
arpl
cmp
shlb
dec
mov
pushf
and
aaa
pop
mov
jl
add
xor
jp
mov
imul
cmp
ss
ja
insl
adc
andl
adc
jo
mov
xor
incb
pop
jl
jmp
cmp
xor
enter
es
jo
xlat
add
or
out
push
pop
xchg
pop
or
cmc
mov
fadds
xchg
inc
aas
mov
jo
std
xchg
popf
sti
pop
inc
mov
popf
add
mov
mov
out
push
dec
lods
imul
pop
rolb
push
xchg
rorl
add
xor
or
negb
sbb
movsb
or
stos
lahf
syscall
arpl
cli
jle
mov
cmp
std
pusha
mov
jmp
js
push
sub
lcall
xchg
xchg
nop
movsb
mov
pop
ja
mov
lods
mov
inc
mov
jo
pop
dec
inc
xor
pop
xor
dec
add
adc
or
out
or
or
testb
dec
sar
sub
lret
cmc
cmp
cmp
inc
or
inc
lock
add
cli
inc
or
dec
ja
pop
pop
mov
xor
add
jmp
pop
lahf
subl
inc
xchg
stos
stos
pushf
cltd
out
stos
lds
mov
icebp
mov
mov
decl
daa
or
add
or
fdiv
add
shrl
jmp
cmp
adc
dec
lods
repz
mov
sbb
adc
aam
hlt
incb
or
push
lcall
aad
adc
add
sub
sbb
std
adc
mull
rep
fisubl
cld
aaa
clc
or
test
fistpl
cmc
aam
jns
ljmp
sbb
fnstcw
mov
ljmp
and
jno
add
inc
pop
or
mov
jp
push
pop
es
pusha
xchg
fdiv
add
cmp
pop
fimull
test
dec
inc
fisttpll
pop
adc
int3
jne
cli
fiaddl
fmull
sub
pop
or
pop
daa
push
mov
and
insb
and
inc
push
adc
cmp
dec
hlt
inc
repz
outsb
arpl
sub
xor
jp
sub
add
jno
xor
cmp
cmp
imul
insl
in
ss
idivb
push
sti
std
mov
cmp
shll
add
stc
hlt
add
mov
lods
out
xor
add
sti
aas
mov
adc
movsl
outsl
or
fldcw
dec
loope
outsl
pop
sti
sbb
rcrl
loop
call
xchg
xorb
push
sbb
push
jbe
dec
out
hlt
inc
xchg
das
je
sbb
test
gs
pop
fwait
notl
mov
fildl
mov
push
adc
jno
pop
cmp
push
sub
pop
sbb
add
daa
sub
pop
loopne
sahf
push
add
or
add
icebp
divl
jns
pop
mov
dec
jns
inc
and
jb
mov
jae
outsl
mov
arpl
repnz
or
add
out
ror
mov
xchg
pusha
adc
repz
push
aaa
or
stc
divb
fs
in
pop
inc
lock
xchg
aaa
xchg
jle
fimull
jg
cmp
fnstsw
cs
pop
adc
jmp
cmp
xor
aad
rclb
fsubr
outsl
jae
mov
hlt
fsubrs
icebp
add
mov
repz
sub
jnp
cli
adc
in
ret
add
int3
outsl
jmp
sar
add
faddl
out
inc
int3
add
pop
es
jb
sub
in
outsl
pop
cmp
mov
sub
lea
sbb
fxch
xchg
stc
arpl
shlb
lods
sub
xchg
pop
lahf
stos
aad
cmp
add
out
test
jp
xor
xchg
sub
insl
or
ljmp
repnz
clc
rorb
repz
xchg
inc
cmp
jb
stos
jle
push
and
adcl
jb
out
jecxz
dec
adc
std
or
test
mov
pop
or
mov
dec
push
fisubrl
aad
xor
inc
sub
cmc
into
pop
rcrl
inc
xor
std
fistps
push
sahf
xor
add
test
pop
push
pop
sub
lea
jns
push
aaa
inc
daa
add
std
jno
enter
aad
cmp
pop
ljmp
sub
jle
cld
mov
jnp
scas
fwait
ja
jp
push
ja
mov
and
in
jne
test
fidivrs
jg
xchg
add
repz
rcrl
jg
pop
mov
or
int
or
ret
inc
outsb
add
cmp
stc
adc
sub
mov
cmp
cmc
std
sbb
jb
mov
lods
jmp
stos
shrl
in
fs
stos
scas
js
std
push
cmp
pop
cmp
stc
ljmp
or
fldcw
popa
sbb
sahf
xchg
mov
mov
in
mov
and
imul
imul
cmp
or
mov
sub
cltd
dec
cmp
xor
pop
mov
push
fwait
pop
popf
pop
pop
leave
xchg
fisubs
add
xor
int3
push
daa
add
rorb
andl
out
xor
rcll
leave
cli
lds
mov
sbb
in
insb
push
push
or
sbb
loopne
jmp
lds
daa
pop
or
add
jmp
jae
push
jae
and
out
aad
sbb
jp
xchg
jne
or
daa
clc
dec
push
cltd
ss
mov
and
cs
pop
leave
push
jb
inc
xchg
jle
dec
mov
adc
shlb
adc
jb
outsb
mov
ss
hlt
lods
or
in
push
fstpl
aad
lods
mov
jl
jp
jle
jnp
jne
in
sahf
xor
lods
pop
dec
lea
enter
lods
bound
inc
pushf
rclb
xchg
ljmp
pop
jle
jg
cmpb
mov
pop
gs
mov
inc
sub
mov
pop
loop
cltd
loope
jns
cmpsb
ret
or
pop
jle
popa
mov
jb
jno
leave
inc
sahf
imul
ja
sub
dec
ret
popa
js
mov
jno
fdivrl
jg
inc
inc
lods
add
fidivrl
insl
leave
xchg
cld
lahf
pop
xor
pushf
mov
lahf
add
xor
xchg
enter
pop
lods
xchg
sub
mov
jae
mov
cmp
jbe
cmp
enter
pop
std
sub
sar
test
xchg
int3
jmp
add
pop
adc
push
test
dec
cmc
jb
fmull
inc
sbbb
jno
pop
sub
mov
in
rcrl
pop
sbb
push
cwtl
jns
jbe
icebp
jmp
jmp
push
out
jno
stos
cmpsl
mov
cmp
mov
lods
icebp
addl
cmpsb
pop
cmpb
mov
movsl
push
push
jp
adc
sahf
jb
mov
xor
pop
shrl
jnp
jl
mov
out
pop
lret
inc
fisubrs
sbb
xchg
jns
mov
shll
cmpsb
in
popf
mov
pop
mov
sub
add
js
mov
jb
sbbl
jp
mov
lea
pop
mov
leave
mov
arpl
xor
loope
int
icebp
jbe
jnp
cmp
mov
mov
pop
loope
icebp
sbb
pushf
subb
mov
pop
loope
jbe
cmp
in
and
and
dec
xchg
sahf
xchg
mov
aas
cmp
outsb
sub
lods
adc
repnz
inc
mov
jo
inc
inc
jae
test
arpl
xor
pop
ljmp
inc
rcl
leave
jg
fdivs
fidivl
lret
sti
xor
mov
mov
mov
jg
xchg
loopne
mov
adc
int3
loop
xorl
and
imul
mov
mov
bound
jge
pop
sahf
std
adc
mov
ret
jecxz
rcrl
add
out
rcll
xlat
push
xchg
and
mov
cli
jecxz
xchg
xchg
test
mov
mov
pop
jp
ljmp
mov
xchg
jmp
xchg
xchg
ffree
mov
and
and
mov
jp
xorb
repnz
sbb
imul
pop
shl
rorl
leave
imul
jns
push
jecxz
aaa
mov
jo
pop
or
sbbb
jnp
xchg
pop
jne
dec
push
jl
jns
xchg
cli
icebp
sub
and
jbe
ds
pop
imul
lods
xchg
pushf
xchg
mov
hlt
loopne
shlw
mov
xlat
mov
xchg
mov
ljmp
xor
jns
push
xchg
jp
cmpb
icebp
add
pop
cli
sub
rcrl
sub
aaa
xchg
sub
jno
mov
pop
imul
test
jbe
out
int
std
lcall
sub
mov
in
mov
xchg
mov
xor
mov
jle
out
pop
not
cltd
push
jmp
test
xchg
flds
rcl
std
shl
xchg
mov
pop
filds
push
fstps
sub
loope
xchg
stos
mov
xchg
notl
pop
idiv
fadds
je
mov
sarb
cmpsl
adc
lods
addr16
sub
mov
push
cmp
cmp
fisubl
inc
push
jne
mov
js
jns
jae
jne
jg
push
cmpl
test
test
lods
lods
xchg
push
xchg
cwtl
shrl
adc
lahf
mov
cmp
mov
push
ret
pop
xchg
adc
xchg
push
jns
push
jnp
push
push
pusha
pop
jae
mov
add
es
adc
xchg
inc
scas
cmp
and
push
cvtpi2ps
push
add
ljmp
movsb
mov
popa
pop
andb
insl
outsb
pop
in
cmp
mov
mov
cmpb
pop
mov
dec
jp
js
inc
xchg
ret
push
or
dec
pop
mov
pop
in
push
xchg
xchg
lret
mov
scas
jns
rol
stos
jge
mov
popf
bswap
xchg
cmp
cmp
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
and
mov
jge
jo
outsb
xchg
cmpsl
pop
xor
xchg
dec
push
cmp
insl
pop
jns
mov
pusha
sub
jb
mov
mov
insl
nop
jne
xor
jb
je
jle
subb
in
orl
jae
add
sub
jnp
jl
jge
cmpsb
sar
mov
cmp
xor
insb
mov
jle
cmpsl
jne
jnp
add
loop
xor
cmp
insl
sub
mov
adc
push
cmp
insl
sbb
mov
inc
inc
mov
cmp
dec
cwtl
dec
dec
jns
mov
xor
push
adc
jge
mov
xor
fxch
lcall
stos
xor
jne
pop
pop
xor
jge
sar
xchg
lods
fwait
mov
popf
cmp
xchg
mov
stos
ja
cmp
ret
popf
and
fmuls
int
idivl
mov
xchg
add
popa
cmp
shlb
push
movsl
mov
mov
jno
cmp
or
dec
repnz
mov
aas
sarl
int3
adc
mov
or
mov
push
nop
mov
cmc
xor
int
bound
loope
lock
pusha
out
jg
jne
in
popa
mov
mov
add
pop
mov
sub
push
sub
hlt
fcomps
aaa
mov
adc
xor
push
pusha
lock
or
sbb
aam
lcall
insb
iret
dec
mov
cltd
cmp
adc
pop
mov
xchg
fnclex
daa
add
dec
inc
popa
jo
cmpsb
js
js
inc
sub
jbe
dec
mov
xor
or
dec
ljmp
dec
fstl
pop
dec
aaa
jne
fnstcw
cmp
mov
dec
in
dec
arpl
imul
dec
sub
push
lcall
ret
sbb
arpl
mov
cli
lret
jne
xchg
sarb
popf
jl
dec
insb
out
iret
mov
mov
dec
dec
cli
imul
hlt
pushf
pop
adc
shlb
out
pusha
jo
mov
mov
or
arpl
ja
and
out
dec
ret
push
or
std
ss
cmp
jl
push
enter
xchg
movsl
repz
add
mov
jl
pusha
sbb
nop
repz
jno
cmp
cli
mov
leave
ret
or
jge
jbe
lahf
stos
stos
xchg
add
aad
mov
je
into
xchg
les
stos
jns
fst
aaa
adc
daa
add
xor
gs
sqrtps
hlt
idiv
pushl
or
jp
pop
xor
loope
mov
adc
add
jae
sbb
xchg
ret
and
lods
sbb
inc
icebp
add
push
push
and
repz
fldt
cmpsl
repnz
sbb
add
dec
add
fcomip
mov
mov
les
mov
sbb
pop
test
gs
fmull
lock
cmp
add
jo
adc
and
ljmp
xchg
scas
aam
xchg
ffree
lret
ret
jl
add
inc
adc
fdivr
cmpsl
pop
push
frstor
push
pop
bound
push
es
rorb
dec
inc
xlat
clc
sar
sti
cltd
or
jnp
iret
sbb
test
jbe
sbb
mov
add
pop
fbstp
cmpsl
ds
or
fisttpll
mov
ret
xchg
in
cmp
loopne
dec
dec
lods
andl
add
cmp
dec
cltd
cltd
ret
testb
aam
push
push
es
xor
aas
jns
dec
adc
cld
subl
add
std
xor
imul
add
adc
bound
std
mov
sub
aam
sbb
push
jmp
adc
js
jne
mov
ljmp
jp
gs
pushf
push
push
xlat
jnp
sub
jns
shll
addr16
inc
sbb
hlt
xchg
pop
aad
and
mov
inc
add
lods
ss
out
sbb
loope
and
add
inc
rcr
iret
jo
aad
insl
adc
cmpsl
dec
fmuls
mov
into
mov
jo
sbb
cmp
cmpsb
mov
fdivl
cmp
sti
lahf
test
mov
sbb
pop
rorb
or
xor
pop
xor
jecxz
dec
test
lods
jb
gs
js
jb
fstpl
inc
or
sbb
inc
or
out
push
jb
call
and
decb
es
lds
inc
test
mov
jnp
mov
or
bound
sub
aaa
hlt
xchg
jo
mov
mov
movsl
xor
lea
dec
xor
in
adc
mov
dec
rcrl
je
mov
dec
aaa
push
jbe
xor
jp
aaa
cli
lods
cmc
dec
push
call
mov
xchg
scas
and
test
push
popf
sarl
mov
stc
lods
cmp
mov
inc
dec
cltd
push
cmp
dec
push
push
xor
jnp
rorl
xor
gs
xor
lret
jecxz
jno
dec
mov
icebp
xlat
sti
fmull
pop
push
sub
loope
ljmp
add
bound
dec
mov
ljmpw
rorb
dec
out
loopne
cli
nop
xchg
pop
cltd
bound
pop
xor
dec
call
mov
lea
sbb
leave
fsubrs
aad
sub
pop
jl
mov
inc
cli
std
cmp
clc
adc
jg
lods
xor
cmpb
lds
mov
daa
mov
lea
sarl
test
hlt
push
push
out
jp
mov
cmp
mov
enter
dec
shlb
jno
arpl
adc
insl
or
inc
rcll
cmp
pop
and
xor
pshufw
mov
inc
xchg
mov
jp
icebp
stc
jbe
popl
icebp
jae
sbb
and
imul
mov
push
inc
aaa
jmp
pop
lret
xor
cmp
mov
jno
sub
lods
xor
jle
push
mov
mov
xchg
les
jg
and
notb
pmulhw
mov
lock
std
daa
lret
cmp
jp
arpl
pop
imul
rorb
lds
mov
cmp
inc
add
inc
in
push
pop
imul
orb
jno
xor
rcrb
in
dec
popa
add
cmp
inc
push
cmp
lret
imul
pop
mov
dec
mov
cmp
pop
mov
adc
xor
jmp
and
jns
cmp
fimuls
dec
push
outsl
cmp
mov
popa
and
mov
inc
inc
aam
jmp
add
push
xchg
es
pop
sub
push
add
leave
push
mov
mov
xor
data16
xor
mov
int
testl
rcr
loope
pop
loope
push
and
cmp
jl
incb
xchg
decb
roll
shll
add
stc
sarb
stc
movsl
mov
dec
xor
adc
fxch
dec
cmp
mov
int
sub
cmp
cmp
push
cmp
xor
lret
cmp
popa
sub
mov
rcll
dec
jno
cmp
push
cmp
push
cli
shrl
leave
add
lds
int3
adc
add
sub
add
adc
lock
mov
int3
shl
mov
sti
push
jb
xor
rcrl
mov
loope
lods
inc
lds
adc
and
loop
xor
push
dec
cmpsl
int
insb
cmp
mov
int
test
out
add
xor
imul
dec
stc
icebp
in
roll
mov
or
sub
dec
lock
and
and
adc
push
sbb
sbb
sarb
mov
adc
dec
shlb
icebp
ljmp
sbb
adc
xor
sbb
xor
cli
out
xchg
and
sub
divb
in
icebp
sub
cltd
cmp
roll
sbb
mov
movsl
xchg
inc
dec
sarb
dec
shrl
test
shrl
jno
pushf
mov
test
dec
mov
orl
or
xor
ss
mov
inc
inc
inc
pop
push
sbb
push
lds
dec
dec
push
or
int
push
xor
roll
dec
out
sub
lods
cmp
add
imul
lds
mov
dec
cwtl
leave
dec
popa
dec
mov
dec
stc
rcrl
sbb
mov
mov
mov
mov
out
adc
rcrl
fsub
add
push
mov
mov
cmp
sarl
adc
sub
inc
call
ss
dec
push
xor
mov
sub
xor
push
test
popa
dec
jmp
mov
jo
push
loope
insl
cmp
jb
jae
add
cmp
add
addr16
push
cmp
call
mov
push
iret
xchg
insl
loop
sub
jno
rorl
out
dec
popa
mov
mov
rcrl
stc
mov
sbb
mov
inc
xor
rorb
mov
push
add
int
push
cmp
jnp
popa
sub
jmp
flds
jl
shrl
jno
push
stc
sbb
ss
test
dec
mov
mov
adc
lock
jno
push
sbbl
dec
xor
inc
mov
push
xchg
mov
icebp
cmp
or
fimull
mov
int
jl
mov
rcll
xorl
pop
popf
pusha
cmp
push
iret
jns
sub
sub
or
cmpb
pop
dec
mov
xor
icebp
movsb
dec
or
lock
fistpll
fstpl
lgs
sahf
imul
lahf
cmp
xchg
lock
sbb
lods
in
xor
loopne
rclb
push
in
dec
imul
mov
jns
rclb
or
push
jnp
pop
ja
lds
icebp
xchg
xor
mov
cmc
lods
cmp
je
inc
push
push
mov
fisubs
jne
sbb
inc
jno
loopne
aaa
inc
xor
aaa
cmpsl
lods
xchg
push
popa
daa
pop
mov
xor
push
mov
into
insb
sub
jmp
loopne
imul
leave
pop
addl
xchg
subl
sarl
imul
addr16
lahf
and
mov
jp
xchg
cmp
lcall
jae
enter
cmp
cmc
pop
adc
loopne
icebp
loop
xor
or
out
pop
mov
mov
jne
cmpl
shlb
rclb
jno
loope
or
and
andl
cmp
sub
bound
mulps
jns
push
jmp
jo
xchg
stc
lds
lret
popa
push
cmp
mov
xor
imul
dec
jno
lea
adc
add
lea
and
xor
jno
leave
popa
adc
sub
and
rorl
popa
js
stc
dec
mov
and
sbb
dec
xchg
and
ret
icebp
pop
lods
stos
loope
popa
adc
adc
pop
inc
incl
xor
fistpll
xchg
clc
ss
push
popa
pop
fstp
repz
cmp
cmpsl
inc
cmp
xchg
push
sbb
sub
xchg
dec
std
leave
stos
int
mov
or
jecxz
jp
leave
subl
xchg
lcall
sub
mov
push
mov
jno
mov
pop
dec
mov
loope
adc
xor
in
jmp
icebp
arpl
dec
rcll
mov
cmp
test
cltd
jmp
push
out
stc
mov
aaa
lock
sbb
popa
in
test
inc
push
sub
sbb
mov
aaa
imul
imul
imul
or
dec
stc
xor
and
popa
aaa
pop
xchg
or
inc
lret
xchg
popa
aaa
addr16
cld
pusha
push
xor
pop
dec
pusha
pop
adc
mull
test
int
fdivl
popa
jns
add
stos
nop
imul
cmp
aaa
daa
pop
add
cmp
lahf
jb
inc
int3
rcll
out
add
mov
cmp
call
out
sub
xor
xlat
aaa
mov
fcoms
leave
adc
lret
push
and
repz
xchg
fnstenv
lock
aad
add
icebp
icebp
and
out
popf
inc
adc
mov
gs
cltd
pop
cmpl
popa
add
imul
dec
scas
rcl
cmp
sub
lret
sub
outsb
mov
pop
popa
dec
jns
addl
pop
jg
out
in
mov
push
shrl
mov
mov
jae
cmp
mov
dec
icebp
out
mov
cmp
rclb
or
icebp
sarl
dec
and
int3
ficoms
adc
mov
mov
xchg
mov
andl
fldl2e
mov
ljmp
jno
les
push
out
mov
add
jns
icebp
repnz
mov
mov
loope
cmp
in
mov
test
dec
adc
cmpsb
mov
cmp
fidivl
orl
into
mov
add
cmp
iret
loope
loopne
mov
shl
popf
pop
mov
push
or
jno
mov
jae
lods
and
add
add
loope
aas
imul
add
mov
push
popa
mov
cmpsl
jbe
sti
push
aad
je
fsts
dec
dec
push
leave
mov
das
mov
test
xor
jns
andb
jae
gs
mov
sar
add
adc
and
jge
mov
mov
outsl
jbe
sti
addb
sub
mov
icebp
and
stc
dec
icebp
shr
jno
dec
loope
cmp
loop
add
cmp
add
test
dec
inc
cmpsl
and
xchg
inc
outsl
jnp
fcom
inc
or
stos
xorb
xor
push
mov
scas
leave
test
and
divl
sbb
test
pop
aas
or
adc
in
nop
add
ljmp
or
fldt
cmp
js
ret
int
sub
outsb
leave
xor
sbb
cwtl
jmp
jbe
sbb
movsl
mov
lcall
rcrl
mov
imul
jns
inc
add
jns
stos
popf
mov
dec
dec
lods
xor
movsb
push
and
clc
icebp
fnstenv
xor
roll
fiaddl
inc
int
inc
cmp
or
loope
loope
push
adc
dec
cmp
cmp
bound
dec
xor
shll
inc
or
add
pop
dec
sarl
in
daa
mov
dec
cmp
and
mov
or
adc
adc
loope
shll
out
sbb
or
mull
cmpl
aad
sbb
mov
cld
in
dec
and
lea
aam
xor
xor
xor
cmp
mov
cmp
or
data16
mov
inc
pop
dec
cmp
add
popa
clc
test
mov
leave
das
jmp
insb
popa
data16
add
xchg
in
xor
inc
addr16
mov
outsb
rcr
flds
push
jbe
mov
lcall
xchg
adc
shll
aaa
push
add
cmp
scas
inc
sub
dec
movsb
test
imul
imul
xor
pop
sbbl
push
pop
cmp
push
jns
mov
mov
aas
mov
pop
lods
gs
loop
xor
jb
xchg
popa
lods
xor
in
outsl
stc
xor
push
imul
mov
cmp
loope
jo
jae
sub
xchg
xor
lea
mov
cmp
jb
cmp
insl
xchg
jae
push
sub
dec
dec
xor
sbb
mov
dec
imul
dec
mov
cmp
insl
adc
push
cmpsb
mov
imulb
je
jb
xor
gs
les
stos
cltd
inc
dec
adc
popa
iret
imul
fmull
pop
cmp
sub
inc
push
add
test
xchg
in
sahf
mov
lret
pop
mov
and
mov
mov
adc
mov
mov
mov
xor
push
and
outsl
sbbl
mov
dec
sarl
xchg
and
jno
adc
fcoms
xchg
insl
adc
add
clc
les
jp
push
scas
aam
das
cmpsb
push
xor
or
sbb
inc
add
push
rcll
push
add
pushf
rolb
push
les
gs
push
and
icebp
mov
adcl
lods
mov
lock
stc
mov
dec
or
test
clc
mov
jns
leave
push
int
fstpl
push
mov
sbb
push
insl
sub
fs
pop
sbb
fstps
lods
mov
movsb
push
fcomps
pop
sbb
decl
sbb
decb
fwait
push
mov
mov
lcall
sub
sti
push
pop
pop
outsl
das
push
cmp
push
pop
push
outsb
cs
mov
out
scas
ljmp
out
scas
xor
addl
testl
xchg
jae
ret
push
mov
pop
mov
add
push
mov
push
push
adc
push
push
pop
addr16
push
adc
push
push
push
rclw
xchg
out
rclb
xchg
out
inc
ror
std
mov
mov
mov
scas
int3
leave
adc
pop
test
lea
fistpl
ja
insb
inc
sub
push
cmp
pop
push
xchg
dec
outsl
cmp
sbb
mov
lahf
repz
or
lock
xor
sbb
cmpsl
inc
popf
xchg
shll
les
cmp
sub
mov
adc
mov
mov
or
pop
cmp
dec
shll
cmp
stc
popa
rclb
sbb
push
add
imul
dec
pop
dec
jp
bnd
xchg
pop
jge
imul
push
andl
cmpsl
icebp
in
mov
xor
loope
stc
lods
dec
icebp
cmp
js
or
js
insb
mov
insb
mov
cmp
add
cmp
mov
call
out
sarl
xor
sarl
xor
cmp
pop
fnstcw
bound
sub
ljmp
test
push
and
xor
cmc
int3
sub
or
and
xchg
cltd
shrl
sub
pop
cmpl
jno
inc
andl
cld
std
dec
push
sti
rcr
or
rcrl
popa
stc
orb
cmp
xor
jge
jne
aaa
out
test
jl
iret
sub
rorl
jp
xor
jbe
or
dec
xor
mov
mov
daa
mov
dec
sub
mov
js
mov
sbb
xor
dec
js
insb
xor
xor
push
push
jbe
cmc
jns
das
dec
xchg
xor
xor
xor
dec
xor
dec
inc
icebp
and
jns
mov
xchg
adc
insl
movsl
jns
mov
lds
dec
cmp
insl
mov
mov
stos
sub
jnp
sti
mov
fwait
sbb
jae
repz
xchg
adc
mov
imul
ret
inc
mov
cmp
mov
xchg
pop
mov
cmp
insl
cmpsl
jns
mov
movl
jg
mov
lahf
pop
mov
cmp
insl
scas
jns
mov
iret
dec
mov
cmp
insl
mov
mov
stos
sub
jp
cli
mov
lcall
jb
repnz
xchg
adc
mov
imul
ret
cmp
mov
xchg
push
mov
cmp
insl
cmpsb
jns
mov
movb
cmp
mov
sahf
push
mov
cmp
insl
scas
jns
mov
into
dec
mov
test
ja
cmp
jl
cmp
pop
mov
fcompl
imul
xor
cmp
cmp
pop
mov
aam
mov
adc
mov
in
mov
and
mov
add
mov
inc
pop
mov
mov
adc
clc
pop
mov
fcomps
imul
imul
call
adc
sub
imul
imul
cmp
mov
rcrb
adcb
add
imul
loopne
mov
and
imul
lock
mov
xor
imul
imul
cmp
mov
xor
mov
inc
insl
cmpl
lea
mov
cmp
test
imul
insl
mov
cmp
mov
int3
imul
lea
mov
cmp
popa
in
cmc
repz
imul
cmp
insl
arpl
mov
outsl
dec
mov
cmp
insl
bound
ds
outsb
jns
mov
cmp
dec
dec
dec
iret
into
lods
aaa
dec
cmp
sub
js
stc
xor
aas
nop
sub
aas
idivb
cmp
addr16
bound
arpl
jo
gs
mov
std
dec
insl
cmp
jae
jae
jnp
movsl
jl
dec
insb
cmp
cmp
sbb
js
sbb
aam
dec
jg
add
pop
dec
in
xorb
fnstenv
out
mov
aas
inc
pop
pop
cmp
and
fwait
and
xorl
ficompl
pop
xor
aaa
xchg
repz
mov
jne
adc
mov
cmp
out
sub
xor
xor
xchg
aas
add
inc
push
push
sbb
cli
stc
idivb
pop
push
cmp
xor
mov
inc
xor
inc
aad
test
cmp
or
sub
dec
dec
outsb
adc
jl
dec
jns
adc
push
ds
imul
stos
mov
cmp
push
and
add
dec
dec
mov
cmp
insl
xor
imul
xchg
mov
ret
cld
in
sbb
ja
xor
xor
inc
push
pop
daa
xchg
inc
and
sbbl
cmp
jae
mov
cmp
pop
xor
popa
xor
popa
mov
lret
cmp
dec
sarl
add
add
jns
xor
cmp
inc
loop
xor
test
inc
mov
dec
pop
in
mov
xchg
enter
mov
adc
adc
inc
daa
int
and
xor
inc
jecxz
xor
in
sub
dec
shrl
xor
inc
aas
mov
icebp
cld
push
mov
cmp
mov
dec
ja
inc
cmp
inc
xor
dec
les
xor
inc
mov
xor
xor
mov
xor
imul
pop
xor
popf
mov
dec
mov
add
mov
in
pop
outsb
cmp
int
xor
inc
mov
xchg
mov
pop
sarb
shrb
sbb
xorps
xchg
or
fistpll
stc
mov
mov
aas
popf
jl
mov
xchg
lods
jbe
lods
sub
jl
popa
frstor
mov
dec
pop
jns
cmp
popa
insb
jno
ljmp
sub
xor
push
xor
or
cltd
pop
fnstsw
xchg
int3
push
dec
add
test
xchg
dec
or
jno
fildl
cmc
inc
jmp
adc
cmc
idivl
dec
loope
inc
clc
inc
xchg
lea
cs
mov
push
test
mov
pop
xor
mov
shl
sbb
out
dec
aad
cmp
jns
push
cmp
pop
outsb
cmp
pop
push
xor
bound
enter
mov
or
fwait
sarl
js
xchg
lock
xor
jns
or
lea
adc
jnp
cwtl
sub
pop
subl
pop
and
stos
mov
ja
imul
rcll
cltd
std
xchg
xchg
mov
add
hlt
jae
jbe
shlb
jp
je
jnp
add
pop
xchg
mov
add
pop
cmp
pop
jno
push
jns
pop
mov
mov
in
jns
stos
shl
leave
sub
add
or
jnp
cmp
stos
fsubl
push
inc
int3
rorl
mov
mov
mov
cmp
insl
sbb
cs
inc
push
imul
shlb
dec
push
stc
loope
and
cmp
imul
cmp
imul
insb
mov
sarb
jns
cmp
cmp
mov
or
lea
insb
std
dec
pop
push
imul
mov
sub
mov
pop
inc
pop
notb
shl
push
jmp
lods
sub
jb
xchg
inc
or
decl
test
js
pop
lea
xor
cwtl
iret
push
lods
jmp
sbb
cmp
or
xor
out
cwtl
icebp
ja
pop
pop
xchg
dec
push
mov
xchg
imul
dec
pop
inc
daa
xchg
push
mov
movsb
xor
idiv
mov
mov
inc
sub
popa
sti
stos
pusha
and
inc
enter
sar
mov
test
and
push
lahf
pushf
aad
sbb
xchg
xchg
inc
xchg
cltd
mov
cli
cwtl
imul
or
test
sarl
add
pop
push
sub
popf
pop
insl
or
and
jbe
push
jb
sbb
xchg
pop
jo
xchg
mov
sub
sbb
add
cmp
in
and
mov
mov
cmp
dec
and
pop
pop
pop
data16
ret
jmp
or
insl
pop
jns
iret
mov
mov
mov
lea
mov
and
mov
imul
dec
jl
push
mov
cmp
lea
mov
scas
shl
pusha
stc
pop
outsb
stos
iret
testb
or
adc
push
sub
mov
xchg
xor
adcb
lock
pop
pop
jle
fldt
mov
orl
jle
jb
push
xchg
ljmp
andb
sbbl
fidivrs
je
aas
dec
mov
cmpsb
push
push
mov
popf
test
adc
pushf
mov
imul
inc
sahf
push
sti
outsl
fidivrl
ljmp
pop
inc
es
push
arpl
stos
das
lods
andl
or
xchg
mov
xlat
arpl
pop
and
adc
iret
mov
dec
jg
stc
repnz
xor
out
dec
sub
mov
pop
inc
xor
dec
xchg
sbb
sbb
jg
push
pushf
jbe
inc
andb
aas
pop
lea
fidivrs
xor
gs
sub
jmp
ret
push
xchg
sbb
cmp
orl
ret
dec
jmp
cmp
mov
lcall
xor
jno
scas
in
push
repz
lahf
int
sub
fistps
push
pop
jno
inc
xchg
jae
stc
lret
cltd
in
in
mov
sub
ljmp
scas
call
adc
fsubs
mov
mov
in
cmp
cmc
fdivp
mov
aam
fbld
mov
push
pop
and
mov
mov
xor
sbb
xor
jne
leave
adcl
push
rol
cmp
push
loop
std
mov
xor
dec
ror
push
fbstp
jecxz
jno
loopne
icebp
sbb
inc
push
xchg
xchg
dec
fcmovnu
dec
cmp
mov
xchg
sbb
xor
fdivl
push
dec
mov
dec
in
pop
jmp
fiaddl
pop
gs
pusha
out
stos
dec
outsb
mov
sub
aaa
popf
push
mov
add
std
xor
inc
mov
aas
push
pop
and
mov
jno
dec
jno
add
rorb
cltd
mov
cmp
cmp
push
stos
in
and
jno
shrl
sub
push
mov
jmp
testb
addr16
jmp
add
ljmp
dec
cmp
or
out
xor
mov
push
add
push
xlat
dec
pop
cmp
jno
adc
dec
mov
sub
imul
popf
sbb
sbb
pop
push
or
xchg
push
stc
aad
mov
das
fnstenv
push
add
inc
xchg
push
jno
push
pop
shlb
imul
jg
adc
loop
jbe
test
xor
cwtl
rcrb
push
xchg
sbb
pop
xor
sub
push
fldl
jmp
fbstp
inc
call
mov
cmp
sub
out
in
adcl
mov
dec
cmp
int3
lock
leave
add
insb
xchg
stc
imul
sti
add
push
xor
jp
ret
adc
lods
cltd
pop
xchg
cwtl
inc
or
dec
rorl
mov
jo
call
icebp
sub
jl
stos
clc
xor
sub
mov
mov
jmp
or
xor
gs
imul
jmp
push
je
lret
add
mov
mov
cmp
lcall
jnp
insl
mov
cmc
xor
ret
cmp
or
ficoms
leave
sbb
icebp
mov
outsb
mov
mov
pusha
jb
cwtl
leave
mov
add
test
sti
jp
cmpsl
popf
out
mov
cmp
jb
sub
xor
popf
xchg
pop
pop
ss
jno
sub
jae
push
jmp
jae
mov
jle
lahf
test
adc
adc
jp
stc
insl
xchg
leave
shrb
xchg
aad
add
mov
lds
repz
mov
lods
imul
cmc
in
mov
dec
bound
mov
addb
pop
hlt
arpl
adc
push
stos
rcrl
jle
xchg
push
icebp
iret
push
mov
jge
xchg
xor
or
sub
leave
push
lcall
sub
stos
mov
mov
mov
or
jecxz
push
xor
jle
pop
sub
mov
cmp
imul
push
mov
test
shlb
sub
addb
pushf
pusha
mov
popf
cmp
dec
pop
sarl
add
mov
pop
fdivrl
insl
dec
icebp
add
rorl
adcl
dec
aaa
adc
jno
clc
pusha
out
dec
data16
cmp
fldcw
jge
std
mov
dec
cmp
dec
push
into
fnstsw
imul
cmp
mov
pop
cmp
faddl
hlt
cmp
xor
cmp
push
dec
add
jmp
lods
xchg
cwtl
mov
imul
push
cmpl
sub
movb
inc
ljmp
xchg
jge,pn
inc
stc
imul
push
cmc
jg
mov
sbb
jno
pop
leave
adc
pop
test
popa
jbe
decb
xchg
xor
sub
push
add
mov
or
inc
aas
inc
lea
mov
outsb
sub
push
mov
stos
xor
enter
xchg
orb
test
mov
pop
fidivrl
push
decl
stos
loope
push
jno
push
dec
mov
inc
int3
cmp
lods
xchg
loope
stos
aad
pop
adcl
jns
ljmp
mov
cwtl
push
repnz
jae
xchg
push
push
mov
xor
pop
nop
test
push
ja
stos
push
ljmp
mov
mov
test
jns
lea
xchg
inc
test
jns
jo
out
lods
xchg
lea
jge
push
pushf
xlat
cmp
inc
ds
jge
mov
cmp
cmp
mov
popa
dec
pop
inc
insl
jno
cltd
cmp
sub
mov
shl
mov
js
orb
sbbl
jge
lea
cmpsl
or
sti
aaa
pop
fwait
add
iret
sbb
sbb
lods
cmc
push
mov
mov
adc
inc
icebp
insl
cmpb
push
cmp
pop
mov
pop
jno
shrl
mov
outsb
or
pop
cmp
mov
inc
mov
fnstenv
movsb
les
lods
jns
cld
sbb
jns
xchg
pop
sbbb
in
mov
mov
cmp
xchg
adc
aam
lea
test
arpl
jnp
pop
pop
lock
mov
mov
pop
add
inc
cmp
mov
mov
pop
orb
mov
clc
pop
push
dec
lods
and
push
cmp
lret
jbe
xchg
test
mov
push
cmp
imul
imul
cltd
mov
in
pop
lea
out
xlat
das
pop
mov
push
push
scas
popa
lcall
mov
inc
popf
lea
stos
mov
push
pushf
jbe
pop
stos
lret
ja
xor
or
int3
sbb
push
pop
fwait
aad
out
sbb
ret
mov
jnp
out
xorl
jle
xor
inc
bound
subl
aaa
jbe,pn
jecxz
testl
loopne
inc
jne
or
dec
pop
add
les
les
dec
je
jnp
jg
jne
xor
dec
jne
and
or
push
repz
fwait
mov
cmp
test
lahf
xor
in
xchg
repnz
sahf
mov
ret
leave
inc
jmp
mov
mov
push
fs
add
popf
adc
push
add
jo
fwait
sbb
pop
cmp
and
cltd
push
stc
repz
cmp
pusha
test
jnp
cmp
inc
push
adc
pushf
mov
jecxz
cmp
adc
add
jbe
jae
pop
in
aad
cltd
mov
cmp
call
imul
les
jecxz
push
xor
pop
aaa
dec
mov
add
loop
jbe
cmp
cmp
mov
test
jno
test
sub
push
js
jl
cltd
out
cmp
movsb
jbe
lahf
sub
inc
add
inc
mov
xor
cwtl
pop
push
xor
fadd
cmp
in
aad
sub
loopne
imul
or
cmp
inc
int
in
jmp
fwait
ljmp
aaa
je
cmp
int
ljmp
dec
jge
out
mov
stos
adc
aad
gs
sarl
scas
push
sbb
push
test
mov
adc
insl
popa
notl
cmp
jp
fwait
mov
xchg
inc
jb
ja
pop
lea
xor
sub
aas
inc
xchg
mov
and
cltd
pop
std
xor
dec
cltd
popf
cmc
mov
jbe
xchg
xor
cmp
cmp
nop
fiadds
or
int
icebp
jmp
xor
push
sbb
fstpt
mov
and
mov
fcomps
push
push
dec
dec
popf
lea
lcall
add
pop
inc
lods
dec
ss
dec
push
inc
mov
cmp
xor
movsl
mov
jle
stos
xor
lret
in
dec
cmp
sarl
adc
sarl
add
in
pop
in
sub
in
adc
pusha
xchg
add
mov
or
sub
lods
xchg
lods
shll
cmp
pop
dec
mov
mov
aam
mov
lds
push
mov
leave
scas
pusha
lret
sbb
inc
into
loop
lret
gs
mov
stc
out
call
dec
icebp
gs
mov
rorl
icebp
dec
js
push
or
mov
ljmp
inc
shll
faddl
xor
lods
mov
pop
pop
pop
xor
inc
mov
jno
test
xor
sub
mov
leave
lods
mov
cmp
lea
lea
lea
add
and
cmp
inc
lock
cmp
insb
es
sarb
jg
int
pop
rcr
push
pop
clc
pop
cmp
jl
outsl
arpl
imul
xchg
inc
outsb
shl
insb
or
xchg
leave
lods
loope
dec
pusha
imul
dec
sbb
insl
dec
pusha
cmp
inc
xor
mov
push
sbb
jb
push
xchg
jg
int
inc
push
int
inc
ret
test
lock
roll
popf
lea
shl
jl
cmp
dec
add
sub
sahf
orl
jg
or
inc
cmp
jns
xchg
mov
dec
or
jl
cmp
adc
in
insb
sub
lea
add
cmp
sbb
lea
cmpl
cmp
push
cmp
loope
insb
xor
lea
add
popa
inc
shlb
xchg
cmp
cmpsl
cltd
mov
sub
mov
xchg
jbe
sahf
orl
jg
repz
das
insb
cmp
lea
call
inc
fists
cltd
jne
mov
mov
add
cmpsl
stc
cmp
push
sahf
and
jno
aaa
cmp
push
and
mov
jne
cmpl
jno
mov
pop
adc
stc
lcall
movsb
imul
imul
xchg
jne
xlat
cmp
adc
mov
adc
imul
xchg
xor
jp
movsb
orl
dec
pop
dec
mov
xchg
dec
shlb
test
test
jmp
loop
pop
jg
stc
sub
jne
dec
imul
dec
test
jns
sbb
jne
pop
cmp
stc
dec
das
mov
loope
shrl
dec
sbb
and
xor
mov
add
xchg
push
test
lea
bound
fsts
rcrl
lea
jae
leave
and
jge
pop
cmp
and
and
imul
shlb
aas
arpl
test
pop
cmp
roll
or
dec
xor
mov
sbb
movsb
adcl
dec
popa
dec
lret
test
or
or
subl
lea
push
sub
sbb
lea
cmp
imul
cmp
cmp
dec
mov
cmp
imul
mov
cmpsl
fldcw
cmp
sbb
test
cmp
sbb
imulb
jae
cwtl
mov
rorl
fiadds
cmp
xor
inc
sbb
adc
cmp
popa
sub
push
fisubrs
pop
clc
icebp
lea
int
and
jb
adcb
cmp
lcall
sub
test
mov
cmp
xchg
ss
cli
sbb
cwtl
jns
lock
mov
andl
cmp
xor
push
cmp
cmp
popa
ja
sub
outsl
xchg
lea
sbb
sbb
cwtl
and
cli
push
sbb
stos
sbb
sbb
test
in
rcrl
xchg
cmp
mov
pop
cmp
loope
cmp
mov
xchg
jge
xlat
cmp
cmpsl
sub
std
mov
cmp
pop
cmp
mov
fwait
sbb
sub
cmp
xorl
out
jmp
xor
cmp
cmp
cmp
cltd
lea
pushf
and
inc
xor
push
pop
cmp
cmp
jns
test
test
xlat
cmp
sbb
fisttpll
or
lea
add
lds
xchg
mov
into
jmp
repz
das
cmpsl
test
cltd
repz
cmp
popa
fdivrs
lcall
shlb
jno
push
flds
or
mov
test
popa
mov
or
mov
lea
jmp
dec
lds
int
icebp
sarb
lea
lock
xor
roll
cmp
popf
jbe
arpl
mov
andl
cmp
std
ds
pusha
jge
lods
addl
jne
ficomps
mov
popa
sarl
push
jecxz
mov
dec
enter
cmp
xor
bound
pop
dec
xchg
adc
cs
cs
adc
lea
sub
jbe
pop
sub
add
mov
jmp
cli
inc
int
sahf
orb
jno
or
xor
jecxz
cmp
or
add
sbb
inc
fs
stc
mov
dec
mov
lret
jo
pop
shll
inc
push
cltd
shr
jns
test
dec
cltd
mov
js
stc
fldcw
jmp
pop
cltd
lea
sub
std
lahf
push
adc
lcall
sbb
test
lret
cli
mov
jno
ja
sbb
lcall
inc
insb
test
mov
fs
adc
icebp
cltd
popa
lods
dec
jns
icebp
mov
stc
std
andl
rcrb
push
or
cmp
pop
dec
push
stc
sti
lcall
sti
add
outsl
push
pop
mov
dec
test
mov
mov
xchg
jns
pushf
lret
xchg
push
adc
xlat
popa
lea
and
loop
cld
jne
das
fisttps
jbe
cmp
sbb
xchg
cmp
cmp
cltd
push
pop
mov
mov
jnp
mov
mov
fs
shl
xor
out
out
imul
fnstsw
lods
sti
jns
mov
imul
ja
test
sub
popa
pop
imul
fstps
and
jge
cmp
loop
int
imul
mov
shll
and
xchg
jne
mov
inc
add
data16
js
clc
mov
jl
mov
jbe
dec
cmp
fs
dec
mov
movsb
mov
pop
ja
sub
cltd
int3
xlat
inc
lea
mov
mov
pop
mov
jmp
mov
daa
cmp
jbe
inc
push
jbe
cmp
popa
mov
cli
pop
aad
mov
sub
insb
add
cmp
out
ja
sbb
out
ja
sbb
outsl
ja
dec
dec
sub
jno
jns
stc
xchg
ret
stc
mov
jmp
adc
pop
lcall
dec
sub
popa
jl
cmp
xor
lcall
outsl
xor
loopew
mov
pop
cmp
push
leave
mov
icebp
cmp
cmp
mov
xchg
cltd
sbb
insb
add
shll
mov
fs
pop
mov
sub
test
rcll
cmp
push
mov
mov
jp
fs
popa
mov
fisubs
andl
mov
les
cmp
mov
js
imul
or
outsl
sti
pop
loop
xor
lea
inc
mov
cmp
and
insl
imul
lea
mov
push
lea
inc
insl
ret
scas
stos
lea
cmp
jns
mov
adc
cmp
and
imul
bound
jno
cmp
insl
gs
mov
outsl
jne
jo
mov
gs
mov
popa
fcomi
loop
insl
cmp
mov
insl
sar
daa
mov
sbb
outsl
aas
insb
outsl
gs
outsl
push
insb
outsl
mov
insb
outsl
jge
outsl
stos
insb
outsl
mov
outsl
mov
outsl
jecxz
outsl
fldcw
insb
outsl
or
outsl
xor
insb
outsl
inc
insb
cmp
cs
out
insb
outsl
push
insb
outsl
pop
insb
outsl
mov
insb
outsl
scas
insb
outsl
xchg
insb
outsl
ret
imul
mov
mov
cmp
cmp
cs
hlt
xor
outsl
xchg
mov
jp
jns
sbb
enter
imul
test
dec
cltd
lods
xchg
adc
mov
stc
movsb
ss
inc
sub
movsl
xor
lret
das
sbb
xchg
dec
xchg
pop
imul
jns
lods
popa
pushf
mov
mov
subl
mov
mov
je
insb
icebp
ret
pop
insb
stc
ret
insb
and
xor
imul
popa
add
sbb
mov
ljmp
mov
insb
stc
mov
mov
xchg
jae
jns
jne
jl
cmp
in
aad
aaa
xor
cmp
push
xchg
or
test
xchg
jbe
adc
mov
push
push
sub
sub
je
xchg
popa
mov
cmp
insl
cmp
sub
cmp
sbb
xor
out
pop
test
push
pop
shll
pop
xor
ja
sub
push
push
test
add
xchg
sub
movsb
repz
sub
fistpll
mov
or
sbb
mov
mov
leave
imul
pushf
cltd
mov
pop
daa
jbe
test
insb
cmp
mov
mov
mov
int3
imul
jl
pop
imul
aaa
adc
cmp
mov
rcr
cltd
insb
fs
sub
xchg
cmp
sbb
loope
jns
xchg
fwait
jns
dec
jae
cmp
popf
gs
popa
leave
mov
push
lcall
fstps
idiv
sbb
mov
xlat
mov
lahf
pop
cltd
mov
push
insb
xchg
mov
or
mov
sub
insl
mov
sub
push
mov
sub
push
mov
push
pop
out
add
icebp
ret
popa
or
ja
loop
dec
cmp
imul
pop
cmp
lea
xlat
imul
push
ja
sub
sbb
roll
adc
stc
stc
sub
dec
mov
push
sar
popa
xchg
sbb
test
dec
mov
pop
xor
pop
cmp
fstpl
fyl2x
cmp
add
sub
aaa
sbb
jno
push
mov
push
jmp
ja
leave
leave
jp
mov
movsl
push
icebp
cmp
push
cmpl
out
add
cmp
push
ja
fildl
out
insb
imul
xchg
pop
test
add
ja
pop
ja
test
jns
mov
cmp
in
mov
sbb
sbb
loope
fnstcw
push
testl
push
fs
pop
mov
sbb
test
mov
insl
stc
jns
out
xor
movsl
pop
mov
dec
push
ret
in
movsl
aaa
leave
ficompl
fs
mov
jmp
sub
leave
fnstenv
or
adc
repz
sbb
mov
sbb
mov
sbb
jbe
stos
cltd
mov
xchg
daa
js
test
mov
pop
mov
mov
jl
cmp
filds
add
mov
or
test
mov
add
xor
sbb
sbb
loop
aaa
mov
imul
and
inc
jns
or
mov
pusha
inc
inc
adc
insb
fldcw
stos
dec
insl
sub
sbb
mov
cmpsb
xchg
inc
pop
push
icebp
stos
jnp
aaa
xor
xchg
pop
or
cltd
pop
repnz
insb
rcrl
push
rcll
mov
imul
sbb
loop
add
jl
push
sub
icebp
sbb
out
dec
cmpsl
mov
fiaddl
test
xchg
pop
imul
mov
clc
push
in
popa
mov
test
lods
and
stc
dec
add
je
insb
jns
adc
mov
jmp
push
insb
pop
mov
sbb
dec
imul
xchg
test
push
xor
adc
inc
cmp
movsl
push
adc
leave
mov
mov
ja
sbb
add
cltd
lea
popa
stc
add
mov
outsl
out
loop
ljmp
out
or
push
or
pop
sub
cwtl
sub
pop
mov
shr
pop
mull
insb
dec
adc
arpl
insb
outsl
popa
insb
outsl
test
insb
outsl
jp
outsl
movsl
insb
outsl
cwtl
insb
outsl
fwait
insb
outsl
into
insb
outsl
mov
stc
outsl
in
mull
leave
xlat
mov
fidivl
clc
mov
sti
mov
cs
sbb
push
sbb
imul
insb
xor
cmp
jo
push
mov
xchg
xchg
cmp
je
push
mov
stos
push
mov
cmp
enter
lret
imul
popa
mov
cmp
in
jge
in
insb
mov
out
imul
or
and
xor
imul
xchg
imul
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
call
pop
mov
push
mov
xchg
leave
jne
leave
test
in
mov
pop
add
lods
dec
pop
daa
test
icebp
insb
add
mull
push
cmp
xor
mov
repz
daa
xor
pop
push
fwait
xchg
jno
loope
rcll
sbb
add
pop
mov
icebp
sbb
leave
mov
xor
icebp
mov
insb
sbb
outsb
insb
stc
ret
dec
xor
sbb
mov
mov
push
test
stos
mov
leave
mov
mov
clc
in
mov
add
add
and
mov
jle
dec
loop
inc
jne
cmp
leave
test
cmpsl
mov
test
flds
cmpsl
stc
test
push
mov
ja
sub
lahf
cwtl
mov
shll
loopew
mov
ficomps
add
sub
mov
shlb
out
xor
cmp
mov
mov
shll
xchg
sub
pop
cmp
lcall
cmp
fdivs
cmp
popa
push
or
mov
sbb
xor
out
pop
fimuls
sbb
popa
jp
fs
jno
pop
test
subb
cmpb
mov
test
jns
das
js
imul
icebp
pop
cmp
out
ja
sbb
cmp
dec
jne
push
popa
mov
andl
fcoml
pop
aad
mov
test
or
inc
mov
sbb
mov
cmp
cltd
mov
push
stc
popa
daa
push
roll
lcall
xchg
aam
roll
icebp
or
lcall
xor
insb
sbb
push
mov
shll
ret
stc
subl
imul
xchg
inc
int3
xchg
lret
test
sbb
sbb
jns
mov
fldl2t
cltd
mov
xor
pusha
test
push
or
out
jmp
outsl
mov
sub
pop
leave
mov
nop
jp
rorl
ret
out
jno
and
inc
cmp
inc
dec
dec
jno
add
jb
inc
sub
bound
mov
imul
stc
roll
pop
ja
xor
xor
scas
cmpsb
insb
shll
pusha
cmp
shrb
shll
inc
cmp
jl
sbb
jns
lods
mov
pop
inc
popa
dec
fists
mov
sbb
fisubl
loopne
rcrl
out
roll
movsl
shrl
rorl
nop
out
rcr
cmp
int
movsb
out
and
jno
jno
inc
pusha
movsl
cmp
movsl
fldenv
mov
xchg
rcrl
mov
loope
sbb
xchg
lahf
insb
and
inc
dec
mov
clc
push
insb
popa
test
cmp
add
stc
adc
mov
rcll
stos
imul
jns
js
imul
fnstsw
test
scas
mov
inc
inc
imul
push
sub
out
jns
in
mov
pop
imul
cmp
repz
lods
loope
or
cltd
ja
sbb
out
ja
sbb
outsl
ja
sbb
pop
adcb
stc
popa
icebp
cmp
test
mov
test
xor
mov
or
maxps
insb
inc
arpl
cmp
fnstenv
je
xchg
popa
cld
jl
cmp
hlt
pop
dec
std
push
cmp
mov
divb
imul
adc
inc
iret
push
test
fndisi(8087
fidivl
icebp
lea
mov
popa
pusha
jl
pop
inc
mov
lea
or
mov
cmp
mov
lcall
and
sub
movsl
jmp
test
sbb
rorb
cmp
test
je
imul
sub
cmp
test
cmp
pop
cmp
xchg
stc
test
mov
test
test
mov
int
lahf
cmp
inc
rorb
inc
push
sub
mov
sbb
adc
push
ja
dec
cmp
mov
cmp
orl
les
cmpsl
push
fwait
xchg
fyl2xp1
ret
popa
repz
icebp
fs
xor
lcall
inc
add
mov
cmp
pop
stc
jl
jns
cmp
ret
stc
mov
cltd
test
mov
mov
mov
aaa
jns
das
jl
popa
insl
adc
push
inc
mov
notb
adc
push
ja
sub
aad
mov
inc
jg
cmpl
insb
jmp
mov
mov
xchg
sub
testb
jb
pop
cmp
lcall
jae
or
or
ds
leave
fistl
push
pop
mov
mov
test
adc
imul
je
mov
sbb
xchg
cmp
jp
fs
jno
dec
jns
das
jbe
dec
cmp
std
push
mov
sub
mov
dec
cmpsl
jnp
mov
or
pusha
inc
cmp
jne
mov
mov
pop
daa
test
mov
cltd
das
test
inc
repnz
sub
xlat
cmp
jns
sbb
cmp
mov
dec
xor
hlt
push
ja
fidivl
imul
sbb
inc
insb
icebp
int
jle
push
mov
popa
pop
fcmovnb
loop
jmp
fildll
xchg
dec
cmp
aaa
jns
mov
sub
ds
pop
and
ficomps
popa
cmpsl
mov
sarb
push
shrl
outsl
mov
cmp
popa
lods
int3
jns
mov
loop
mov
cmp
pop
loopne
outsl
push
ja
sub
dec
inc
ja
outsl
ja
sbb
or
pop
lods
popa
orl
mov
mov
xchg
out
and
mov
popa
fcomi
sbb
sub
leave
fmuls
mov
mov
loope
popa
stc
rcl
out
push
and
xchg
scas
xor
ss
fs
popa
insb
mov
mov
sub
jmp
sbb
shl
push
inc
mov
fisubrl
shll
jae
leave
cmpsl
push
cmp
dec
or
jp
mov
cmp
repz
loop
cmp
cltd
inc
movups
js
push
dec
push
mov
mov
cltd
mov
imul
popa
adc
jno
adc
xor
jecxz
dec
loop
inc
or
xor
int
addl
mov
and
sbb
jle
imul
mov
aaa
loop
inc
mov
jnp
cmp
das
jbe
test
xchg
pop
push
and
jl
mov
shrl
mov
mov
cltd
adc
inc
or
stc
cld
or
out
jno
popa
gs
jl
jno
and
sbb
out
add
pushf
lret
cmp
shll
aad
mov
mov
xor
mov
mov
js
push
mov
shrl
rcll
fidivrs
in
mov
sbb
adcb
leave
ja
sub
or
pusha
mov
mov
push
xchg
push
sbb
mov
xchg
jno
cmp
loopne
xchg
leave
xchg
jno
ss
inc
cmpsl
adc
xlat
add
xor
mov
cmpsl
das
and
ret
stc
leave
fidivs
ja
cmp
aas
ja
fcmovne
jg
leave
mov
push
sub
pop
lods
xchg
mov
mov
mov
mov
mov
or
sub
sub
sub
sub
sub
sub
and
mov
and
cmp
inc
push
jns
add
add
or
out
test
icebp
pop
sub
subb
cltd
cmp
mov
cld
pop
sbb
mov
cltd
js
mov
adc
jns
fisubrs
xchg
leave
cmpb
ds
test
in
ja
sub
pushf
inc
mov
shrl
cmp
push
jmp
popf
nop
in
insb
andl
mov
mov
gs
sbb
push
pop
mov
sbb
push
sbb
sbb
aas
sub
rcll
jmp
jp
movsl
xor
mov
push
mov
or
mov
push
scas
fs
stc
sub
mov
stc
adc
inc
xor
loope
sarl
stc
dec
or
test
xchg
jne
mov
fimuls
sbb
mov
rorl
fyl2xp1
xor
mov
insb
add
sub
mov
popa
mov
pop
or
push
mov
clc
jmp
loope
inc
xchg
cmpsl
push
movups
cmpsl
xor
sbb
xor
out
and
add
subl
cltd
das
mov
xor
inc
insb
or
or
std
gs
mov
mov
jns
daa
jbe
je
ja
fisttpl
jne
ja
sbb
leave
orb
stos
fs
dec
sbb
mov
sbbl
xor
adc
xchg
shll
fcmovnbe
addb
push
mov
jb
push
in
xchg
pop
push
sub
lods
mov
sbb
mov
aas
clc
push
cmp
shrl
push
stc
shrl
js
imul
pop
fisttpl
or
sub
sub
sub
sub
stc
pop
mov
or
cmp
les
cmp
lods
dec
dec
mov
push
sub
mov
push
mov
outsl
push
mov
dec
insl
stc
mov
popa
je
insb
dec
ret
leave
mov
cwtl
push
mov
mov
inc
mov
mov
negb
mov
dec
js
stc
adc
lret
cwtl
mov
mov
cwtl
mov
xchg
mov
inc
mov
repz
stc
loope
adc
mov
xor
and
mov
inc
cmp
mov
or
mov
cmp
mov
mov
push
or
dec
inc
insb
xor
pop
adc
daa
or
lret
std
xorb
jno
jns
fs
inc
aad
cmc
cmp
fadd
mov
xchg
add
imul
in
pop
mov
xor
dec
pop
and
push
mov
jmp
xor
jg
and
cmpsl
js
imul
imul
cmp
inc
fs
pop
repnz
cmp
and
stc
push
mov
shrl
pop
fucomi
outsl
ja
sbb
lahf
leave
jns
pop
add
mov
leave
stos
xlat
gs
rcll
cmc
add
sbb
xor
jbe
push
in
xchg
pushf
lret
cmp
or
push
push
mov
mov
test
push
js
leave
mov
aas
sbb
mov
roll
loope
gs
mov
sahf
mov
icebp
vmovupd
mov
clc
cmp
add
cmp
jmp
cmp
push
stc
mov
xor
cmp
sub
repz
jbe
leave
shr
push
or
pop
clc
push
cmp
jmp
repz
pop
daa
jbe
dec
xor
cmp
out
and
fidivrl
mov
mov
sub
repz
cltd
gs
fimuls
cmp
cmp
bound
stos
fs
push
jne
pop
mov
leave
test
mov
cltd
push
std
cltd
mov
js
push
sarl
jecxz
adc
popf
leave
call
shrl
aaa
push
mov
cli
mov
push
xor
lea
xlat
inc
sbb
xorb
jae
imul
repz
insb
mov
cmp
mov
fldenv
leave
jl
inc
imul
dec
and
in
inc
leave
imul
lds
loope
lea
fistps
jl
inc
test
jns
sub
or
mov
pop
test
jns
out
push
addl
jbe
lods
add
lea
mov
fldenv
fbstp
js
insb
adc
mov
inc
lods
xor
mov
or
aad
leave
cmp
sbb
cmp
mov
inc
int
lcall
andl
add
adcb
test
add
pop
mov
sub
adc
stc
out
add
xorb
jmp
leave
mov
mov
or
jno
cmp
fisubs
popa
ljmp
lods
les
mov
cmp
sbb
loope
loopne
popa
mov
subl
inc
push
daa
dec
dec
push
sbb
leave
adc
test
cltd
cmp
mov
dec
or
mov
cmpsl
xor
test
imul
sbb
push
arpl
mov
incl
stc
pop
mov
jnp
mov
cmp
or
pop
mov
lea
mov
dec
out
ja
and
ds
popf
jae
cli
insl
inc
rcll
xor
pop
jp
loopne
outsl
movsl
lcall
shll
push
jns
cmp
sub
test
shlb
xchg
mov
mov
cltd
paddb
popa
mov
insb
mov
and
stc
mov
jns
loope
into
addr16
xor
add
cltd
and
xor
cmp
push
dec
cmp
cmp
push
sub
pop
imul
pop
inc
leave
mov
push
enter
arpl
ja
fcmovnbe
out
jbe
dec
popa
stc
fimull
dec
cmpsb
lahf
inc
push
test
iret
cmp
cmp
cmp
jnp
jg
hlt
cmp
sub
push
cmp
pop
jg
cmp
cmp
insl
mov
sarl
cmp
cmp
pop
jg
das
cmp
cmp
cwtl
adc
test
push
xorl
sarl
movsb
fcmovb
mov
mov
rorb
inc
inc
outsl
mov
jnp
cmp
jg
cltd
pop
mov
mov
push
or
lret
lahf
cmp
dec
xor
cmp
ret
mov
lahf
push
orl
negl
pop
adc
frstor
xchg
jmp
sarb
xor
popf
sub
adc
mov
test
sbb
dec
add
push
pop
ret
out
jl
mov
cmp
cmp
lds
inc
push
jno
in
cmpsb
bnd
scas
add
in
pop
cmpsb
jle
push
aaa
aam
insl
fwait
lahf
cmp
add
pop
adc
add
inc
add
adc
pop
cmp
arpl
or
test
idivb
push
cltd
rcl
and
cmp
cmp
mov
adc
rorb
ret
push
xchg
movsb
mov
cltd
push
in
jns
jns
add
test
jg
jbe
jge
outsl
and
frstor
sub
shll
push
or
arpl
or
or
mov
movsl
sub
es
cmp
add
add
in
jg
das
imul
in
in
mov
fwait
add
int
and
add
dec
aam
ret
dec
out
mov
and
hlt
mov
aam
jae
sub
adc
push
xchg
aam
jecxz
fdivs
dec
mov
dec
cmpsb
cld
push
push
add
push
gs
popa
outsb
fs
gs
outsl
jne
je
pushf
pusha
jmp
add
dec
data16
je
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
gs
je
imul
push
add
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
push
popa
bound
fs
gs
dec
jne
inc
add
add
je
gs
inc
outsl
insb
outsl
jb
push
pushf
inc
lea
call
add
push
gs
gs
popa
insb
jne
inc
js
add
inc
ds
cmp
std
int3
lahf
push
insl
lds
lret
dec
or
sbbl
jmp
in
push
push
dec
mov
rclb
mov
adc
je
xor
daa
xor
in
mov
mul
jl
stc
adc
cmc
mov
pusha
jns
and
clc
cmc
mov
pop
cmpb
pop
pusha
push
xchg
pop
push
lods
out
xor
xchg
int3
adc
mov
mulb
loope
or
sbb
cltd
ljmp
xchg
in
sbb
xchg
out
cli
mov
sub
add
mov
ja
dec
cmp
jbe
xchg
xchg
xchg
pop
fldt
iret
mov
mov
or
pop
jp
icebp
movl
push
pop
movsb
hlt
movsb
lock
xchg
pusha
mov
xchg
mov
lods
daa
pop
and
loopne
js
push
push
push
incl
jae
popa
sbb
decb
lods
imul
bound
leave
mull
xor
adcl
cmp
cmp
lret
sub
hlt
xor
lret
call
sub
mov
hlt
dec
ficoms
lds
cltd
mov
out
testb
mov
cwtl
mov
gs
sub
dec
imul
inc
mov
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
add
fs
push
dec
jne
je
inc
jns
add
add
je
imul
je
js
sbb
hlt
mov
mov
pop
xorb
and
push
test
mov
fsub
xor
mov
pop
movsl
outsb
cmpsb
dec
loopne
jecxz
push
push
sub
fucomi
inc
cli
jl
sbb
mov
test
mov
cli
pushf
scas
hlt
aas
sub
in
jnp
or
adc
shl
pop
fisttpl
lock
pusha
lret
jp
in
cwtl
andl
mov
pop
arpl
adc
mov
gs
in
loopne
jecxz
nop
test
or
imulb
cmp
lea
je
not
mov
pushf
add
pop
cmc
cmc
mov
jmp
pop
sub
idivl
mov
imul
pop
test
inc
pop
mov
lds
push
cmc
pop
bswap
test
out
sbb
inc
cmp
xlat
cmpsb
test
out
sahf
dec
cwtl
pop
sbb
pop
lahf
mov
or
mov
cmp
cmp
out
xchg
clc
push
into
jb
popl
int3
and
dec
addl
mov
je
mov
sbb
out
jge
push
cmp
jnp
fs
push
shr
hlt
dec
sbb
add
mull
rorl
bound
push
popa
fdivrp
addb
rcll
enter
sub
or
xor
xor
add
cmp
mov
popf
mov
lret
sbb
aad
fcomps
mov
inc
and
popf
frstpm(287
addr16
sub
push
aas
pop
jo
in
pcmpeqw
push
push
in
dec
mov
cld
test
push
add
rorl
inc
gs
arpl
gs
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
and
je
test
stc
cmc
sub
clc
pusha
pushl
lea
jle
cmp
pusha
call
pushf
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
add
je
bound
arpl
inc
call
add
inc
gs
imul
lea
je
test
pusha
cmp
sub
jmp
add
inc
gs
popa
jbe
inc
imul
add
add
ja
outsl
arpl
push
arpl
fs
jae
bsr
mov
rcr
shl
bsf
mov
movzbw
btr
mov
clc
bt
xor
pusha
cmc
repnz
pushl
mov
pushf
movb
lea
jne
and
ror
not
mov
inc
bts
btr
sub
cmp
movsbw
shld
mov
cmp
jmp
add
dec
gs
jo
insb
insb
outsl
arpl
add
dec
outsl
arpl
gs
jne
arpl
add
inc
imul
add
add
jbe
dec
jne
push
gs
je
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
cmc
call
add
push
push
js
arpl
gs
add
add
outsl
bound
dec
popa
outsb
fs
add
leave
call
add
inc
gs
insb
imul
add
je
outsl
arpl
push
imul
imul
jne
jb
add
add
call
mov
lea
cwtl
pushf
lea
pusha
call
ror
test
sub
test
jmp
add
inc
gs
imul
add
push
gs
je
dec
popa
outsb
fs
add
add
imul
inc
add
add
je
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
gs
arpl
jo
jns
mov
pushf
mov
lea
jmp
bt
or
movb
pushf
pusha
lea
je
ror
add
bt
sub
or
shr
clc
rol
bswap
mov
bswap
add
pusha
movsbw
shr
shr
add
add
dec
mov
jg
shr
test
cmc
clc
cmp
cmp
pushf
pusha
mov
push
lea
je
push
bt
bt
cmp
call
and
bt
pusha
add
pushf
push
lea
jmp
add
push
popa
jbe
inc
inc
add
popf
xchg
incl
add
imul
gs
add
inc
gs
jb
imul
imul
and
jne
xadd
bsr
and
or
mov
rol
sub
and
sub
shld
not
lea
mov
test
clc
bt
sub
clc
bt
test
pushl
bt
cmp
push
pushf
pushl
pushf
lea
ja
or
shl
rcl
sub
not
add
lea
mov
rol
rol
test
mov
clc
jmp
add
push
insb
jae
jb
add
add
push
imul
jae
bound
add
inc
outsb
popa
bound
imul
or
inc
and
adc
test
xor
pusha
lea
ja
pushf
pushl
imul
pushl
jmp
add
inc
gs
imul
popa
arpl
outsb
je
add
push
gs
imul
add
add
gs
je
inc
insb
insb
imul
outsb
add
popf
push
push
add
and
jbe
or
mov
shld
shl
add
btr
push
mov
neg
rcl
pusha
sar
add
movsbw
shld
sar
sar
movl
bsr
rcl
mov
add
call
jmp
add
inc
gs
gs
jo
popa
je
inc
add
add
je
jns
je
insl
dec
outsb
jne
lea
mov
movw
lea
jmp
fwait
aas
xchg
pushf
mov
pop
cltd
aas
dec
insb
xchg
lahf
hlt
xchg
adc
xor
stos
xchg
mov
xchg
loope
pop
mov
ja
test
jl
jne
jge
jbe
sbb
adc
cmpsb
and
xor
mov
jbe
and
mov
sbbl
ss
xchg
jno
pop
push
lods
pop
insl
cwtl
outsl
mov
jno
sub
in
jge
jnp
mov
jns
push
movsb
addb
pop
pop
outsb
outsl
jne
js
in
jbe
pop
push
in
insb
mov
sahf
inc
lods
cwtl
mov
std
pop
sbbb
xchg
cwtl
lods
push
pusha
arpl
pop
stc
cltd
pushf
movsl
mov
imul
movsl
or
add
sahf
mov
popf
pushf
jle
jl
dec
loop
xor
xchg
push
dec
dec
mov
rorl
out
dec
inc
push
mov
ss
cmpsb
inc
test
mov
mov
jno
xchg
stc
jp
or
cmc
enter
mov
cmp
imul
insl
roll
leave
mov
cmp
pop
dec
dec
xor
and
dec
xor
imul
cltd
inc
or
imul
lods
imul
mov
mov
cld
dec
imul
nop
mov
imul
xor
jo
nop
xchg
aaa
adc
sub
nop
ljmp
pop
and
cmp
or
xor
fs
mov
sahf
jne
xchg
repnz
sub
mov
jae
mov
rol
and
inc
push
xor
adc
mov
dec
xor
dec
test
jb
jl
fildll
jne
push
xor
xor
shll
lea
shl
cmc
test
xor
imul
dec
xor
dec
jge
int3
mov
dec
bound
cmp
or
dec
jo
dec
push
adc
jno
shr
cmp
pushl
sub
xchg
and
orl
call
rcrl
lahf
cltd
jb
mov
pop
in
cmp
stc
repnz
jns
xchg
leave
mov
shrl
lret
xchg
xorb
rol
icebp
loop
or
leave
popa
xchg
mov
jb
jp
push
pop
lea
or
inc
cwtl
mov
pop
cmp
bound
and
jecxz
mov
decl
cmp
cmp
dec
icebp
inc
xor
sti
pop
dec
and
cmp
cld
push
push
fsubrl
cmp
dec
mov
sarb
pop
inc
in
dec
bound
pop
enter
cmp
arpl
sub
sub
cmp
mov
jne
push
mov
xor
inc
leave
ljmp
gs
mov
sbb
popf
mov
outsl
xchg
mov
loopne
cs
sbb
lods
fwait
cmp
test
cmpsl
sarl
insb
mov
mov
dec
xchg
rclb
adc
dec
inc
sub
inc
xlat
xchg
jp
inc
cld
imulb
mov
xchg
int
push
outsb
in
inc
xchg
test
pusha
cmp
pusha
mov
inc
jecxz
stos
cmpl
xchg
mov
test
cmp
loope
cmp
inc
sti
les
mov
dec
mov
jno
mov
mov
push
pop
cmp
mov
dec
out
fwait
sub
jns
and
in
cmp
adc
and
jno
bound
xor
popf
mov
cmp
push
sarl
pop
mov
icebp
test
pop
loop
gs
and
cmp
das
mov
leave
push
ljmp
inc
xor
dec
pop
lea
mov
sti
rcll
test
dec
mov
ror
push
cmp
gs
imul
xor
inc
mov
je
cltd
arpl
imul
cmpsb
cmp
inc
inc
cltd
arpl
dec
je
std
test
mov
sub
push
ljmp
cmp
xor
xor
test
in
loope
xchg
out
leave
shrb
fisubrs
mov
xor
push
and
in
xor
test
push
test
in
test
jae
push
in
jmp
push
ror
dec
aas
sarl
je
mov
ret
divl
inc
das
outsb
aas
xor
jne
cmp
add
or
pop
insl
pop
and
push
loope
xor
mov
mov
inc
loop
loop
shll
jns
xchg
gs
xchg
leave
dec
aas
ljmp
push
fs
cmp
and
jns
and
cmpb
ja
jns
pop
cmpsl
cli
xchg
jns
hlt
ja
sub
lds
rep
sub
pop
ljmp
jno
pop
cmpsl
jno
or
mov
jbe
push
push
mov
loopne
push
aas
in
pop
cmp
jl
hlt
ja
sub
cmp
or
adc
mov
cwtl
dec
aas
test
shrb
or
ljmp
inc
adcb
mov
inc
or
cld
inc
mov
jmp
add
cmp
ret
insl
out
inc
adc
add
lock
outsb
cmp
and
cltd
fsubp
aas
lret
insl
mov
shl
stos
leave
aas
std
mov
add
or
shrl
pop
inc
mov
fdivs
inc
mov
mov
mov
aas
mov
ss
cmp
lahf
cmp
mov
lcall
add
pop
cmp
xor
sbb
sbb
xchg
or
inc
mov
arpl
push
arpl
addr16
cmp
xchg
sti
sbb
aas
shrl
pop
shll
aas
mov
or
fucomp
loopne
stc
mov
jno
cmp
cltd
divl
divb
out
mov
jnp
lea
push
jno
setnp
push
loop
cmp
mov
orl
mov
xchg
xchg
jge
pop
dec
cmp
push
add
pop
and
cmp
jge
cwtl
cmp
mov
outsl
pop
sahf
jne
outsl
pop
cltd
sbbb
sbbl
dec
repnz
mov
mov
sub
dec
xor
push
add
cmp
leave
ja
std
sahf
push
in
in
mov
test
mul
jge
pop
and
leave
or
and
sbb
mov
ss
pop
pop
xor
jnp
pop
xor
cmpsb
mov
jno
jno
jnp
loop
cmp
popf
int3
fwait
int3
xchg
lret
push
repnz
cmpsb
or
jne
movsl
xchg
mov
popa
imul
xorl
int
push
lods
jbe
jns
scas
mov
xor
jmp
xor
mov
jl
or
cmp
mov
test
push
xchg
push
sarl
mov
push
sahf
jbe
iret
stos
cmpl
pop
mov
dec
lods
fisttpll
mov
jl
cltd
mov
jge
fldt
aas
sub
pusha
xlat
jne
adc
pop
xor
mov
xor
js
jno
lea
test
stc
push
lret
icebp
jnp
divl
jbe
sarb
or
xchg
sub
lods
out
fwait
dec
mov
push
push
loop
jle
cmp
lahf
rorl
aam
jmp
jne
mov
push
mov
std
lods
mov
cmp
pop
call
faddl
test
repnz
jl
mov
push
subl
xlat
outsl
xchg
mov
xchg
xchg
push
jle
mov
rcll
lods
dec
mov
enter
gs
adc
nop
xchg
xor
sbb
inc
cmp
cmc
arpl
test
cmp
jmp
dec
pop
cli
mov
ljmp
dec
mov
testb
arpl
fisttpl
pop
or
test
fimuls
imul
pop
sarl
sub
stos
cmpsl
xchg
push
insb
jge
subl
aaa
rclb
fistpl
xor
jp
jb
js
insb
dec
roll
mov
mov
mov
subb
test
jge
and
daa
jl
mov
lds
mull
aad
arpl
dec
scas
dec
jno
scas
xor
out
pop
xchg
imul
lds
pop
pop
out
jg
push
dec
cmp
adc
mov
mov
rorb
lcall
pop
lods
mov
xchg
mov
inc
push
dec
popa
adc
dec
or
push
in
mov
sub
sbb
mov
lret
imull
mov
dec
pop
or
loope
cmc
jp
lods
fwait
push
xor
mov
pop
js
mov
and
je
cld
aas
jae
aas
mov
cmp
ret
cmp
jo
cmp
rcll
mov
dec
jl
mov
rolb
movsb
cs
sub
shl
imul
popa
sbbl
insl
push
push
lcall
mov
inc
xor
out
cmpsb
xchg
orb
xchg
leave
aad
mov
test
mov
pop
push
cltd
popa
jnp
xchg
cmp
or
popa
shrb
aam
mov
xchg
faddl
gs
xchg
mov
lret
mov
pop
mov
push
jle
or
cmpl
xchg
cmp
in
jnp
inc
repz
or
repz
xchg
xchg
jle
popl
or
pushf
or
mov
shll
xchg
leave
pop
out
loop
xchg
outsb
pop
movsb
lds
sub
rcll
out
je
insb
jns
mov
movsb
mov
jb
lcall
mov
jl
xchg
mov
je
xchg
lret
cwtl
bound
sbb
mov
or
xchg
pop
mov
mov
push
and
mov
push
movsb
pop
add
mov
jb
or
mov
bound
jl
movsl
push
sub
lret
pop
insl
stos
popa
adc
jecxz
movsb
jb
insl
int
jnp
pusha
jns
movsb
dec
int
popf
iret
xor
jnp
xchg
imul
pop
insl
mov
scas
mov
mov
scas
xor
in
dec
int3
sbb
leave
mov
mov
mov
push
push
mov
mov
push
ret
mov
xlat
pop
jg
mov
pop
xlat
jns
fisttpl
xchg
push
mov
mov
test
push
push
lahf
addr16
jae
loope
dec
jno
mov
jmp
ja
adc
subl
scas
movsl
cmc
jl
push
jnp
xor
rorl
iret
mov
outsb
inc
stc
jl
mov
push
dec
add
in
sub
subl
mov
movsl
in
sti
mov
mov
ljmp
pop
cld
mov
pop
jae
mov
scas
mov
jbe
xor
out
in
jno
jle
lahf
rolb
fdivs
mov
mov
out
int
popa
cltd
jne
add
or
mov
bound
xor
hlt
pop
cmp
inc
jmp
mov
xchg
mov
jp
aas
mov
xor
xor
jg
ja
xor
test
adc
mov
mov
xchg
in
jns
and
subb
mov
and
fstpl
cmp
daa
cmp
in
data16
push
dec
js
mov
pop
inc
loope
inc
mov
jmp
jecxz
pushf
loope
dec
xor
cmp
stos
call
rolb
icebp
pop
icebp
lcall
sbb
cwtl
xor
cmp
jecxz
dec
lret
xlat
pop
mov
jp
xor
xor
xor
ds
bound
xchg
scas
dec
or
jle
dec
data16
pop
cmp
ja
mov
sar
stc
jnp
mov
cmp
xchg
and
sbbl
popf
mov
daa
or
xor
mov
stc
and
inc
ss
call
or
out
arpl
or
ja
lret
loope
inc
scas
and
jle
lea
or
xchg
imul
mov
sbbl
ljmp
lea
in
mov
aas
jne
test
sbb
pop
ja
cmp
scas
sarb
mov
jl
sub
dec
sbb
push
and
inc
insl
cltd
sti
xor
dec
xchg
and
mov
aas
arpl
jge
adc
divb
mov
inc
in
adc
xchg
stc
jmp
fwait
int
mov
push
sbb
jne
jae
mov
jae
jp
jne
lods
mov
dec
sbb
loope
rorl
call
jbe
inc
f2xm1
aam
fsubrl
sbb
test
jae
sbb
cmpsb
dec
sbb
dec
call
sarl
jno
or
popf
pop
cmp
lret
cmp
adc
cwtl
into
jns
stos
mov
pusha
jns
shl
mov
sbb
dec
popf
shll
jg
jnp
jp
out
sub
and
cmpsl
cwtl
stos
jmp
xor
mov
xchg
dec
lods
dec
lret
lods
mov
mov
in
mov
stos
lea
xchg
xchg
leave
popf
std
push
xor
lods
jge
mov
loope
pushf
mov
xchg
enter
and
jns
int
int3
stc
insl
mov
lods
ss
pop
mov
aas
roll
fldenv
in
sbbl
popa
jo
cs
hlt
ret
add
in
aad
pop
mov
iret
push
fwait
pop
jmp
test
xor
cmp
inc
mov
cmp
fistpll
xor
sar
cmp
ss
sub
ret
ljmp
inc
inc
or
mov
sarl
sbb
popa
rcl
sbbl
dec
out
scas
cmp
and
fnstsw
inc
jno
cmp
arpl
xchg
xor
mov
lds
insl
xchg
xchg
mov
jne
test
cmp
jecxz
or
mov
jmp
mov
xor
mov
mov
cmpl
pop
lods
movsl
aas
xchg
xchg
ja
repz
imul
pop
xchg
cmp
cwtl
cltd
cmpsl
and
jge
rcl
pop
xchg
pop
sbb
dec
lds
movsb
aaa
movsl
jns
push
cwtl
jne
test
dec
pop
out
jp
insl
popf
les
sarl
cmp
gs
xchg
test
pop
mov
call
mov
xchg
jno
pop
jne
test
pop
mov
mov
arpl
mov
mov
push
les
mov
stos
cmp
lods
fistpll
aad
dec
jo
insb
xor
lods
jecxz
or
jo
cwtl
shll
in
stos
inc
adc
lds
cmp
mov
scas
loope
xchg
jmp
cltd
inc
mov
arpl
or
mov
mov
or
jge
popf
mov
imul
lahf
leave
mov
fdivrs
or
sub
mov
dec
mov
push
arpl
xor
mov
mov
jns
add
xchg
jp
jg
repz
inc
jnp
popa
jp
xor
sub
jmp
lea
lds
subl
cmp
mov
xor
int
jp
mov
jle
dec
int
fst
ret
pop
stc
mov
cltd
idivl
jb
in
shll
mov
shll
push
xor
inc
mov
push
sbb
stos
std
pop
cmp
xor
pop
aaa
insl
or
cmpl
ja
mov
lods
sbb
cmp
shll
jl
jae
pop
pop
mov
imul
das
in
xchg
movsl
push
or
dec
imulb
fnsave
int
jle
mov
daa
mov
pop
sti
stos
cs
lret
mov
out
jo
cwtl
aas
aam
push
add
jge
jbe
xchg
stos
in
mov
xorl
mov
pop
popf
xor
scas
or
xor
sarl
cmp
leave
mov
rolb
mov
stos
jae
lret
popa
jnp
push
lcall
mov
add
push
mov
cmp
stc
sbb
rol
jne
and
and
ja
jns
inc
push
imul
xchg
pop
sbb
jl
xor
inc
mov
cmp
pop
or
scas
insl
mov
jl
cltd
stos
mov
inc
arpl
insl
push
or
cltd
mov
mov
into
jge
jne
loop
and
dec
pop
fnsave
jno
cmp
pop
dec
mov
jno
aas
fstl
lea
dec
cmp
xor
jno
aas
mov
dec
insb
shll
imul
add
mov
xor
add
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
cs
call
xor
or
sahf
xchg
pop
sub
push
mov
push
adc
cmp
in
or
data16
xor
adc
loop
pop
inc
lock
sbb
sbb
add
jbe
lods
sbb
adc
xor
in
xchg
inc
push
adc
fwait
les
nop
gs
and
pop
pusha
mov
cltd
imul
mov
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
add
je
jne
jb
outsb
je
push
add
add
je
je
dec
popa
outsb
fs
add
add
gs
je
push
outsl
insb
imul
add
push
gs
outsb
push
gs
js
gs
imul
gs
call
add
push
gs
imul
inc
gs
jb
jns
arpl
add
fs
call
jmp
pushf
pushf
rep
movzbw
pushl
pop
mov
push
lea
jmp
add
push
outsb
push
imul
outsl
outsl
imul
add
inc
gs
gs
arpl
popa
jo
add
add
outsl
bound
push
imul
gs
imul
arpl
shlb
jmp
in
cld
rcl
mov
dec
mov
call
xchg
dec
sahf
fdivrs
mov
sbb
jne
repnz
adc
out
dec
ja
les
inc
push
push
into
movsb
push
idivl
mov
test
adc
push
daa
sub
aas
dec
cli
mov
pop
pop
sbb
cmp
cmp
rcrl
sbb
cmc
sub
xchg
pop
jge
and
xorb
xlat
pop
sub
cmpsl
adc
das
cwtl
mov
adc
outsb
adc
push
add
bound
add
je
imul
jae
mov
add
movw
mov
lea
shl
rcr
jmp
in
popf
test
cltd
test
mov
lods
mov
mov
mov
insl
test
mov
lods
pop
test
lea
cltd
mov
mov
jno
add
inc
outsb
fs
outsl
arpl
add
dec
popa
jo
imul
imul
inc
outsb
fs
popa
je
add
or
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
test
inc
push
add
add
mov
stos
pushf
lea
jmp
add
push
je
push
outsb
ja
outsb
add
mov
mov
incl
add
inc
sbb
stos
aaa
ss
sub
cmp
push
inc
push
das
clc
xchg
mov
pop
pushl
inc
pushf
loop
rcrl
and
les
lods
addr16
pop
or
push
push
repnz
adc
inc
and
into
pop
aaa
and
clc
mov
cmp
jno
fidivrl
mov
stos
sub
adc
int3
xor
dec
out
cmp
fsts
mov
mulb
dec
mov
mov
gs
mov
sarb
sbb
xor
add
sub
mov
inc
in
fcompl
mov
insl
xlat
pop
repz
enter
jecxz
dec
mov
rcrl
dec
fs
mov
scas
xor
je
iret
push
bound
jle
fstps
mov
clc
and
push
out
testb
cli
enter
dec
mov
adc
lds
cmpsb
inc
or
dec
outsb
adc
mov
nop
xchg
sub
xor
movsl
aad
push
dec
xor
aam
dec
pop
cmp
insb
les
sub
fists
xchg
scas
mov
stos
sbb
lret
enter
daa
mov
inc
outsb
sub
xor
cs
mov
scas
icebp
or
mov
bound
dec
mov
movsb
push
and
aad
mov
cmp
test
sub
pop
pmulhuw
nop
pop
int
out
and
lds
mov
pop
ljmp
pop
sbb
out
stos
add
push
gs
jbe
outsb
je
setl
jmp
call
ljmp
mov
out
enter
and
xchg
sub
xchg
cmp
ljmp
mov
int3
sbb
punpcklbw
sub
xor
inc
xor
decb
jne
add
add
dec
add
add
imul
add
add
add
add
add
pop
add
pop
add
add
add
pop
add
aas
xor
aas
test
aas
test
add
cmp
cs
insb
add
add
pusha
lea
ja
not
setae
jmp
xor
pushl
call
bt
cmp
call
add
inc
gs
gs
inc
inc
add
jecxz
incl
add
je
gs
je
jo
imul
pop
rcl
mov
add
jmp
pop
add
ds
fsubrl
mov
popf
lea
push
adcl
push
fisubl
rorl
fstl
lods
aad
loop
neg
dec
sub
lahf
mulps
mov
adc
add
popa
addr16
imul
add
add
je
outsl
arpl
add
mov
repz
sbb
cmpl
mov
xchg
gs
mov
add
cmc
push
push
sbb
inc
imul
cli
cld
cmpsl
adc
jge
mov
jo
xchg
pop
mov
push
mov
or
gs
cmp
lcall
add
lea
mov
push
sub
cmp
cmpsb
xor
mov
ja
rolb
outsl
ljmp
mov
xchg
cmc
cmp
in
lret
test
mov
push
scas
inc
dec
mov
jl
je
popf
jp
adc
push
imul
enter
sub
mov
addl
stc
test
mov
jmp
clc
xor
jmp
add
dec
outsl
popa
fs
insl
popa
addr16
add
inc
xor
popa
outsl
pop
and
lods
ss
sub
js
cwtl
xchg
mov
jecxz
sti
pop
sub
pop
insl
orl
push
jg
int3
outsl
pop
jae
or
jno
stos
aad
xchg
repnz
cli
fisubl
sti
sub
sbb
xchg
fstps
push
cli
in
sub
pop
fwait
jg
xchg
movl
push
xor
out
mov
out
imulb
sarb
inc
out
outsb
sub
push
xchg
cwtl
cld
mov
icebp
stc
mov
daa
leave
and
out
ljmp
out
push
cmp
pop
pop
jle
test
lods
mov
sbb
sbb
sbb
cmp
and
xor
fwait
push
popf
mov
or
ret
or
test
xor
inc
mov
pop
popa
fldenv
pop
sub
xchg
add
inc
mov
in
testb
add
mov
mov
sub
sbb
and
mov
pop
and
rolb
sub
mov
xchg
cwtl
repnz
cli
mov
sbb
fwait
scas
popf
mov
ret
lds
sbbb
leave
add
inc
gs
cmp
fwait
mov
xchg
mov
xlat
lret
stos
movsl
inc
fsubl
stc
dec
pop
fwait
cmp
rcrl
sbb
jo
push
repnz
ret
sub
adc
inc
pop
fwait
pop
popf
cltd
or
jb
push
aas
aad
and
mov
adc
orb
mov
add
or
gs
mov
imul
test
dec
mov
dec
sub
sbbb
test
mov
push
test
mov
pop
xor
sahf
nop
fwait
mov
mov
xchg
popa
int
div
push
pop
xchg
sub
pop
and
cmc
pop
sub
icebp
nop
xchg
orb
test
insl
add
lret
popl
fwait
popa
popf
ffreep
repnz
clc
out
sti
cmp
mov
out
sub
jno
lea
push
popa
mov
jmp
sub
and
cs
rcrl
cmp
xchg
push
popa
cmp
adc
addl
xor
pop
mov
mov
lret
mov
jno
popa
test
fwait
lods
popf
xlat
aad
test
cmp
aas
pop
dec
pop
xor
xchg
stc
jnp
fwait
scas
popf
ljmp
out
outsb
cmp
js
cwtl
sbb
mov
cwtl
or
ss
repnz
repnz
mulb
lea
mov
lods
nop
mov
ljmp
pop
pop
repnz
pop
addl
pop
jbe
lret
pop
out
xchg
scas
out
xchg
outsb
ret
mov
lods
pop
lret
push
pop
xchg
cli
inc
sub
add
popf
je
scas
leave
xchg
ret
mov
gs
add
inc
test
arpl
cld
cli
das
sub
icebp
add
loope
gs
push
popa
lcall
pop
lds
cmp
sbb
pop
pop
fwait
insl
leave
sub
push
sbb
sub
push
addl
insl
out
aam
push
repnz
adc
stc
int3
adc
imul
test
xchg
mov
push
adc
fwait
int
mov
addl
lock
ror
sti
ret
sub
pop
movsl
loop
or
call
xchg
int
mov
orb
pop
sbb
sbb
cmp
mov
cmpsl
out
dec
arpl
xchg
xor
aam
pusha
andl
in
repz
test
aas
test
mov
sub
mov
andb
adc
sub
pop
sahf
sub
jmp
cmp
popa
mov
cmp
dec
aas
xchg
jg
mov
out
jmp
add
popf
sbbb
jmp
lods
add
cld
inc
xor
ja
xor
mov
dec
mov
das
xchg
scas
add
ret
mov
mov
out
and
mov
sbb
repz
nop
fwait
cmp
test
mov
xchg
cld
lds
sub
xorl
xchg
adcl
out
jmp
push
leave
adc
insl
pop
cs
test
test
insl
fcompl
inc
mov
test
mov
aas
mov
jg
mov
ds
mov
sub
adc
bnd
cmpsl
and
sub
sbb
fwait
imul
mov
push
outsl
adcb
cli
ret
and
notb
cld
mov
mov
ljmp
fwait
cmp
jnp
lret
and
mov
cmc
mov
sbb
cmpl
int3
in
sub
or
push
xchg
movl
iret
loopne
daa
movsl
dec
or
xor
xor
sub
xchg
test
mov
push
aas
xchg
test
push
push
inc
insl
jno
or
outsb
mov
lock
jo
adc
enter
mov
aad
inc
aas
pop
cmpb
mov
mov
push
bswap
adc
addr16
or
jecxz
testl
sub
hlt
and
insb
orb
test
ret
js
sbb
adc
xchg
adcb
test
lods
jg
mov
mov
lock
ljmp
pop
jge
sub
mov
imul
test
xor
push
out
mov
or
adcb
sbb
sbb
sbb
sbb
dec
sbb
loope
enter
push
mov
mov
out
mov
adc
add
add
or
xchg
in
jl
xchg
or
es
rorl
daa
sbb
dec
dec
xchg
mov
cmp
sbb
sbb
mov
mov
xchg
and
sub
inc
fildl
dec
jno
fwait
push
popf
mov
out
aad
adc
sbb
inc
push
pop
sbb
push
add
rolb
pop
or
cmpl
fs
or
in
test
sub
or
push
mov
pushf
pop
cmp
dec
fs
stos
and
sub
adc
sbb
inc
outsb
lcall
aam
notb
sbb
imul
test
push
repz
pop
pop
repnz
cli
leave
mov
pop
std
mov
fs
rorb
daa
sub
and
mov
aam
negb
in
jl
rcr
jecxz
clc
sti
sub
cmp
or
cld
sub
dec
and
js
sub
ret
and
xor
push
mov
cwtl
lret
stc
sbb
dec
cmpsl
mov
repz
test
or
cld
pop
sbb
pop
jb
popf
and
and
fwait
gs
jb
lods
leave
mov
jnp
add
dec
pop
popa
mov
divl
popf
inc
sbb
roll
cmp
popa
test
enter
jg
jo
jne
in
mov
sbb
repnz
cli
lret
and
sub
adc
cmp
mov
repz
mov
xorb
aas
test
pop
mov
popf
test
cmp
and
sub
adc
sbb
insl
test
mov
fcmovnb
cmc
test
xchg
out
mov
outsl
push
sbb
data16
pusha
pop
mov
ret
or
sbb
xor
mov
mov
or
lret
pop
mov
lods
mov
dec
sub
mov
or
cld
adc
imul
or
sti
push
xorl
popf
xor
pop
push
out
cmc
outsb
pushf
out
in
outsl
push
int
mov
xor
pop
mov
gs
std
ljmp
sbb
adc
imul
test
cwtl
jmp
or
cli
sahf
and
sub
adc
sbb
mov
test
mov
aas
xor
fldcw
outsl
popa
mov
xchg
outsb
sarb
adc
cli
lret
sub
adc
and
fwait
push
popf
cmpsl
mov
lds
aas
in
mov
cld
or
stos
insl
fwait
aam
jge
inc
mov
mov
mov
repnz
test
jg
mov
add
pop
popf
jns
leave
rol
lds
gs
subl
andb
inc
aam
sub
sbb
test
or
jns
cmp
mov
ret
lds
push
ljmp
adc
cmp
stos
cmc
aaa
sub
mov
mov
sub
inc
int3
sbb
fsub
or
leave
dec
movsb
cmp
cltd
test
xor
push
cmp
pop
push
fwait
popa
add
and
sbb
pop
test
xchg
jg
mov
dec
je
aas
pusha
jg
mov
incb
mov
jmp
add
adc
scas
enter
pextrw
adc
sbbl
outsb
ret
sbbb
or
in
lcall
mov
sub
lea
pop
sti
dec
sbb
mov
ret
and
sub
adc
mov
add
mov
aas
ret
or
jno,pn
pop
mov
inc
or
mov
js
cwtl
push
int
loope
push
addb
sarl
xor
mov
and
sbb
mov
jge
lahf
cmp
inc
sub
mov
cli
ljmp
insl
popf
shlb
and
mov
loope
lret
addb
nop
inc
add
test
lcall
nop
push
aas
push
ja
pushf
mov
std
mov
fs
rorb
subl
popa
mov
lods
cli
iret
and
xchg
sbb
out
cmp
int3
in
or
cld
push
sub
sbbl
leave
shll
push
dec
xchg
je
xchg
fdivrl
mov
push
cwtl
mov
stc
xchg
gs
mov
dec
mov
adc
mov
andb
xor
jg
cltd
out
out
loopne
and
test
lods
cmp
cmp
xchg
dec
mov
and
sbb
pop
andl
adc
dec
nop
popa
jg
mov
and
adc
cmp
aas
xor
push
jg
mov
stos
add
fstpl
lcall
mov
movsl
outsb
mov
in
push
pop
pop
sub
outsl
adc
mov
mov
cmp
xchg
leave
out
loope
cs
dec
rcrl
mov
add
es
mov
mov
pop
mov
flds
xor
into
leave
call
aas
fstl
jnp
xchg
add
inc
faddl
pop
mov
faddl
or
cld
inc
xor
mov
fadds
sbb
push
test
add
cmp
icebp
mov
sbb
adc
andl
jns
loope
push
sbbb
test
or
ja
mov
mov
pop
bound
stos
cli
lds
rclb
sbbl
test
mov
adc
pop
mov
inc
js
pop
mov
subl
roll
sub
sbb
test
fcmovnbe
mov
test
out
in
stc
lock
mov
fwait
pushf
fsubr
or
cld
push
xor
adc
xor
cmp
sbb
mov
loopne
repnz
and
aas
xchg
test
int
out
xor
stos
leave
cmp
dec
mov
inc
add
stos
mov
fwait
jo
dec
xor
adc
fistpl
cmc
lret
mov
and
sub
adc
and
fwait
pusha
popf
movsl
mov
xor
dec
mov
mov
test
aas
aaa
test
jle
mov
fwait
gs
out
mov
sarl
dec
mov
imul
adc
push
loop
and
popa
pop
sub
out
or
pop
insb
push
orl
add
mov
fdivrl
mov
popf
and
sbb
pop
addb
xchg
mov
xor
xor
jl
sahf
leave
jecxz
ffree
sub
inc
gs
mov
mov
xor
lea
xchg
sti
cld
adc
lea
xor
orl
mov
lock
adc
sub
jbe
fwait
in
mov
add
sub
mov
mov
sub
mov
popf
gs
xchg
lods
outsb
into
out
shrl
lock
xor
mov
shl
fwait
idivl
lcall
or
orb
sub
jo
xchg
jns
mov
lret
repnz
lret
popa
lcall
cmp
sub
cmpl
test
mov
pop
loope
cmc
dec
jns
mov
cmp
mov
cmp
insl
pusha
jg
add
inc
push
je
or
or
je
cmp
insb
stos
add
inc
cli
mov
fs
scas
in
mov
cmp
ret
mov
imul
and
mov
fisubrl
mov
lds
pop
cld
dec
jge
orb
lds
xor
xor
push
insl
sahf
jns
mov
movsl
test
adc
int
scas
jns
rcrb
lea
inc
movsl
sbb
cmp
mov
cld
arpl
or
and
xor
into
or
xor
xchg
lock
adc
sbb
jnp
mov
or
sarb
insl
outsb
jns
mov
adc
clc
inc
aas
mov
cmpsb
sbb
sbb
push
imul
jo
cmpb
loop
fsubrl
popa
dec
fnstenv
or
inc
cmp
mov
imul
pop
pop
mov
leave
sub
dec
xchg
jb
popf
sarl
push
adc
and
xor
cmp
jmp
adc
mov
test
sbb
sbbl
popf
inc
movsl
stos
out
xchg
out
cli
lock
popl
lahf
dec
xchg
dec
jmp
pop
ret
dec
decl
lea
pop
cmp
lea
mov
cmp
xchg
and
lcall
fwait
cmp
in
out
jp
lret
hlt
cld
push
sub
mov
mov
cmp
mov
mov
mov
and
out
push
cmp
push
fwait
imul
xor
loope
sbb
jmp
ja
cmp
stos
cmp
stos
shlb
iret
jns
mov
jl
roll
int
pop
jns
fsubr
xchg
dec
pop
outsb
bnd
cwtl
and
sub
adc
mov
imul
inc
mov
insl
out
jns
mov
mov
cmp
arpl
js
fwait
imul
xchg
push
int3
sub
adc
push
push
mov
insl
sbb
mov
mov
mov
or
cmp
sub
sbb
jo
xor
test
mov
stos
fwait
sbb
xchg
add
adc
bound
lods
mov
repz
aaa
xchg
insl
mov
imul
repnz
sub
adc
sbb
ljmp
pop
rorb
sbb
mov
imul
fdivl
mov
imul
adc
lea
andb
jne
ret
mov
inc
cmp
adcb
rclb
pop
jb
lea
mov
cmp
adc
xor
xchg
out
in
in
xor
popf
push
mov
cmp
andb
and
sub
adc
mov
imul
mov
mov
cmp
mov
insl
in
sub
mov
in
adc
imul
rorl
xchg
mov
pop
ret
hlt
lds
pop
inc
pop
push
insl
test
out
mov
cmp
pushf
jns
mov
imul
daa
lret
idivl
lods
loope
aam
popf
cmp
imul
sbb
loope
stos
sbb
adc
push
inc
dec
test
lea
cwtl
insl
fistpll
adc
popf
cmpsl
int3
leave
out
ret
repz
mov
push
adc
into
and
sub
adc
dec
ror
lds
or
insb
cmp
mov
cmp
or
cld
adc
dec
xchg
in
je
pop
mov
cmp
mov
push
add
dec
repnz
cltd
pop
pop
mov
leave
gs
cli
out
and
test
push
aas
cmp
aas
cltd
pop
jne
dec
icebp
rorl
add
add
pop
push
mov
pusha
inc
roll
mov
iret
adc
fisubrl
adc
xchg
popf
pop
cmp
andb
rcrb
popf
fcmovne
out
cmp
pop
addl
adc
and
aaa
mov
mov
fstpl
repnz
ja
jp
cltd
or
call
iret
sbb
addb
xchg
test
stos
je
fcomps
add
and
xor
sbb
add
adc
adc
or
or
and
inc
fimull
inc
add
mov
sub
icebp
test
push
add
xor
outsl
popa
jae
inc
add
xlat
hlt
fldt
pop
dec
push
aas
mov
mov
inc
or
test
inc
iret
outsb
jmp
adc
push
popa
pop
repnz
cli
stos
xchg
or
sbb
xor
ja
mov
xchg
aad
outsl
adc
and
dec
pop
mov
loope
or
dec
pop
xor
jbe
add
push
push
dec
mov
pop
jp
lods
lods
arpl
out
pop
xor
cmp
test
ficoml
addb
cmp
pop
sub
fwait
push
popf
ja
mov
and
inc
mov
push
loope
and
fistpl
adc
adc
mov
mov
imul
scas
mov
aas
addb
xchg
insl
ret
das
iret
cli
mov
jmp
cltd
lret
jno
jle
int
mov
loope
les
in
dec
aaa
int3
add
out
div
xor
lock
int
nop
mov
cmp
das
sbb
inc
insl
adc
lahf
xor
jg
cmp
lret
icebp
mul
inc
fsubr
dec
sbb
mov
insl
adc
int3
int
jmp
std
mov
aam
or
xor
sbbb
test
push
jno
lret
mov
inc
shlb
loope
pop
gs
xchg
je
ljmp
iret
xor
dec
sti
xor
test
xchg
iret
and
popa
cwtl
add
loope
xor
and
dec
mov
jg
pop
enter
adc
inc
inc
sub
pop
xchg
int
and
fstpt
push
mov
das
sbb
mov
pusha
add
dec
popa
loop
in
sub
int
flds
stc
push
inc
jmp
test
or
pop
xchg
and
pop
jne
nop
sbb
mov
fnstsw
insl
xchg
lcall
in
les
test
mov
inc
addb
pop
xor
cmp
cltd
out
cmpsl
cmp
and
cltd
jmp
aas
sub
repnz
push
lret
mov
lret
pop
repnz
adc
int
xchg
aad
test
mov
push
cmp
cmp
popa
gs
sbb
popf
sbb
jge
mov
dec
pop
mov
ja
jnp
scas
test
imul
dec
lea
mov
nop
fcoml
mov
pop
mov
stos
adc
push
inc
pop
out
add
add
add
add
or
mov
jae
dec
cmp
lret
mov
inc
cmpb
or
or
mov
dec
mov
xor
in
lahf
cmp
mov
and
gs
test
lret
jmp
xorl
xor
je
xor
faddl
cmc
inc
repz
testl
pusha
and
inc
dec
xchg
jno
aas
popa
xchg
push
imul
add
pop
xchg
mov
scas
lea
int3
push
jae
lods
and
stos
repnz
adc
mov
mov
aad
cmpb
pop
lahf
mov
mov
jge
xor
jle
imul
jb,pt
and
mov
or
sub
pop
int3
mov
sti
addr16
mov
mov
xlat
xor
test
aas
int3
icebp
addr16
or
push
jno
in
add
popa
repnz
cltd
jge
inc
orl
mov
cmp
out
pop
sbb
mov
shrl
mov
sti
loope
add
aas
bound
jge
sub
nop
movsb
sbb
cmp
icebp
inc
and
orl
push
dec
push
lock
adc
lret
pop
mov
dec
pop
xor
lahf
outsb
pop
push
das
xor
lret
add
stc
dec
leave
mov
sbb
and
xor
mov
test
stos
popa
int
in
fld
nop
push
push
jo
push
sub
je
inc
add
iret
leave
stos
iret
pop
gs
mov
repz
mov
dec
cltd
sbb
lahf
nop
lret
aas
xor
jne
lods
icebp
jbe
mov
sub
push
shrl
adc
sbb
mov
mov
push
leave
ja
mov
test
movsb
xchg
xor
xor
mov
jb
sub
adcl
fldl
and
mov
outsl
push
push
dec
imul
sbb
icebp
mov
je
mov
mov
mov
jecxz
sti
lods
lcall
pop
orl
roll
cmp
cmc
leave
mov
lret
divl
test
or
nop
out
or
jbe
out
hlt
lds
sub
scas
xor
add
jl
lods
add
sbb
shr
in
loopne
clc
or
dec
and
pusha
xchg
xor
push
or
scas
pop
aas
pavgw
mov
pop
mov
loope
stos
filds
jmp
sub
imul
in
xor
daa
mov
mov
or
dec
icebp
push
sbb
call
out
dec
pop
or
xchg
mov
pop
fldt
sub
aad
mov
sbb
xchg
jecxz
dec
jae
or
mov
jecxz
mov
sub
je
push
testl
int
call
xor
jnp
pop
fwait
mov
push
mov
dec
lret
ja
jns
sub
push
out
ret
jmp
jae
or
ret
stc
inc
iret
xor
and
inc
stos
out
mov
pusha
cmp
mov
jmp
scas
je
mov
adc
test
mov
std
sub
test
mov
leave
rolb
mov
cmp
sbb
mov
or
and
sub
xchg
aas
test
imul
jge
insl
pop
jo
out
sub
add
push
xor
nop
push
in
int
sti
mov
mov
stc
adc
dec
pusha
data16
push
mov
mov
scas
cmpsl
fstpt
loope
aam
or
popf
jo
mov
call
scas
cld
loope
sti
mov
lock
pop
jbe
fwait
js
xchg
add
arpl
aas
stos
and
pop
xchg
mov
inc
add
cmpl
mov
adc
dec
xchg
je
leave
add
ret
adc
jb
cmpsl
arpl
outsl
or
and
pop
xor
cmp
insl
popf
outsl
pop
leave
mov
xchg
jae
or
call
movsl
jmp
insl
add
lret
adc
hlt
or
ds
xchg
pop
pop
nop
sbb
je
insl
in
and
and
inc
inc
outsb
call
sar
leave
idiv
adc
add
leave
out
ret
or
push
xor
rorl
adc
popf
sti
jne
out
scas
lret
jmp
inc
in
outsl
add
daa
xor
xchg
or
imul
cmpsl
inc
cltd
xchg
push
sub
mov
wrmsr
inc
sbb
cltd
movsl
outsl
inc
cmp
icebp
stc
mov
lods
jecxz
mov
cmpsl
cmp
or
je
fwait
or
out
or
and
add
ret
or
lret
dec
add
pop
pop
pop
fwait
js
mov
pop
sarb
fdiv
repnz
pop
bound
rcll
or
xor
inc
adc
xor
int3
popa
jae
jp
lahf
movsb
int
jae
and
adc
lds
mov
ffree
adc
sti
gs
mov
fistpl
adc
mov
jae
popa
mov
das
mov
xchg
push
std
jns
orl
in
loopne
inc
sbb
inc
sub
push
xor
xchg
xor
mov
xchg
push
adc
dec
push
mov
nop
push
mov
xor
popa
or
mov
inc
dec
xchg
orb
loope,pn
cmpb
adc
sbb
mov
pop
mov
jno
lea
repnz
xor
cmc
mov
int3
mov
sti
das
and
iret
and
xorl
mov
adc
fcmovnu
loope
or
add
and
push
jb
jmp
imul
popl
xor
mov
and
xchg
jne
lret
mov
ret
xor
lea
sub
push
sbb
sbb
pop
je
push
iret
sbb
adc
xlat
int
icebp
jmp
loopne
xlat
pushf
call
mov
push
popf
aas
xor
pusha
ret
cmc
ss
pop
mov
lods
aas
mov
std
cmc
push
cs
dec
lea
mov
or
je
fldl
jecxz
xchg
mov
and
out
fwait
xchg
jecxz
mov
mov
push
sbb
mov
addr16
sti
push
push
out
jb
pop
sbb
dec
cmp
je
pop
sub
sub
jne
ds
fstpl
adc
sbb
outsb
sbb
sbb
fs
lcall
jl
sti
cwtl
out
shll
sbb
adc
pop
sbb
pop
mov
cli
push
jo
cmp
or
lods
fstpt
out
cmp
lea
cmc
or
mov
lds
sbb
jmp
xchg
mov
xor
mov
arpl
cmpsb
dec
mov
jnp
lea
out
loope
jmp
inc
arpl
xor
lret
jl
sub
xor
frstor
cmp
push
mov
maxps
xor
inc
repnz
mov
jne
addr16
std
pop
sbb
adc
call
pop
push
ja,pn
cmp
pop
xchg
sbb
inc
and
in
cmp
or
scas
cmp
out
cltd
sbb
push
test
jnp
xchg
cmp
leave
mov
call
or
out
or
cli
int3
and
sub
roll
pop
imul
dec
pushf
push
dec
fbstp
push
ljmp
insl
insb
jae
xor
in
mov
loopne
and
mov
in
insl
and
in
out
in
icebp
and
punpckhwd
loope
arpl
cmp
sub
cmp
pop
pop
push
sbbb
mov
cmpsl
imull
loope
pushf
dec
into
adc
shrb
loopne
pop
jmp
mov
scas
in
adc
jmp
mov
pop
daa
mov
movb
pop
cmp
inc
mov
dec
loopne
movsl
sbbl
xor
xchg
xchg
xchg
nop
je
mov
mov
mov
call
in
outsl
dec
dec
gs
imul
test
outsl
xorb
test
test
jae
or
or
jb
fcoms
sub
and
sbbb
test
movsl
mov
mov
popf
outsl
sbb
inc
je
shlb
pop
fwait
jb
int
scas
mov
shll
outsl
jmp
inc
in
pusha
test
cmp
mov
push
repnz
mov
popa
jnp
jnp
cwtl
dec
int3
cmp
or
push
xor
arpl
test
movsl
lds
dec
adc
inc
pop
dec
inc
pop
lret
mov
dec
sbb
dec
pusha
inc
jge
xor
sbb
lds
rcll
out
leave
fdivs
mov
sub
cmp
dec
and
int
add
push
stc
dec
jmp
add
sbb
sbb
or
inc
lret
or
in
or
push
push
test
mov
jg
imul
cmp
fnstsw
popa
fwait
push
movsl
stc
stc
dec
pop
mov
mov
sti
mov
mov
and
cmp
adcb
sahf
jmp
mov
pop
ja
xor
insl
dec
dec
add
push
dec
addr16
out
push
cmp
cmp
iret
xor
out
add
or
jmp
mov
mov
subb
sub
inc
xor
dec
push
mov
icebp
inc
neg
jns
lods
nop
lds
test
lods
orl
mov
stc
inc
stos
jg
mov
sti
xlat
clc
xor
pop
sub
xchg
xchg
popf
mov
pop
or
popa
sti
pop
inc
leave
jo
aad
ss
lret
bound
icebp
call
lock
dec
dec
test
mov
dec
jne
pop
cmp
xor
stos
xor
pusha
rsm
cltd
cmp
lret
and
xor
mov
or
and
or
fimull
adc
stc
push
inc
sub
fldenv
xchg
mov
fistl
dec
out
ret
xor
push
lahf
pop
out
dec
scas
popa
loope
mov
inc
xchg
vmwrite
icebp
icebp
sbb
jne
out
cmp
inc
mov
mov
imul
mov
lret
icebp
sbb
pop
cmc
jo
mov
push
pop
mov
jb
movsl
pop
mov
dec
xor
dec
iret
cmc
mov
int
xor
popf
outsl
movsb
call
je
int3
mov
fucomi
movsl
scas
addr16
iret
or
in
das
shll
dec
xchg
mov
and
rcrb
aad
mov
mov
pop
xor
cli
test
add
hlt
adc
insb
scas
cmp
sub
in
push
cltd
inc
jecxz
popf
mov
sbb
and
sub
dec
ja
pop
in
icebp
das
test
bound
nop
sub
inc
mov
out
gs
int3
in
dec
cmp
or
mov
sbb
mov
sbb
icebp
jns
and
and
sbb
rcrb
repz
push
sub
fwait
pop
popf
pop
mov
jmp
pusha
int
mov
sub
xor
sti
lds
icebp
daa
cmp
clc
aas
idivl
jg
mov
mov
cmp
jno
inc
shrl
jmp
add
insb
dec
pushl
mov
mov
sub
push
jl
dec
jb
roll
jb
jge
outsl
fidivrl
dec
icebp
and
mov
inc
lods
and
lods
je
lret
in
pop
cs
pop
gs
xchg
lcall
dec
jne
adc
jb
push
popf
movsl
icebp
out
sti
in
jo
mov
out
mov
xor
cmp
fistps
or
sub
test
inc
popa
push
pushf
or
cld
mov
lea
and
or
aaa
xchg
dec
pop
out
mov
mov
je
cltd
xor
mov
jne
sub
adc
adc
sbb
dec
add
andb
inc
test
mov
pop
mov
mov
inc
cmp
iret
stos
jg
or
popf
std
and
popa
mov
inc
jmp
aad
pusha
loopne
ret
add
pop
decl
and
inc
pop
fcomi
scas
inc
and
or
cmp
pop
pop
mov
repz
sbb
loope
jo
dec
sbb
sbb
xchg
sub
pop
out
cmp
test
cmp
dec
inc
outsb
adc
sub
fcmovne
push
dec
jg
cmpsl
inc
xlat
pop
or
mov
and
ja
ljmp
mov
jmp
sub
dec
mov
push
inc
inc
imul
and
jb
cmp
adc
adc
dec
mov
loope
mov
out
or
out
sbb
sbb
sbb
dec
jmp
adc
or
daa
push
mov
sub
lock
inc
cmp
mov
pop
lock
mov
loope
adcl
xchg
loope
popf
lock
shrl
fists
imul
dec
mov
and
sub
out
adc
and
mov
cmp
stc
or
cmp
imul
icebp
pop
test
push
xor
lahf
and
iret
ret
int3
mov
out
iret
lock
xlat
jg
int3
orl
ret
pushl
call
scas
mov
inc
aad
aas
dec
nop
cmp
mov
stos
push
sbb
lahf
addb
call
ss
movsl
push
xor
int
addr16
pop
movsb
adc
inc
pop
jnp
stc
aas
test
dec
or
fwait
lds
mov
sub
mov
icebp
jp
xor
mov
addr16
popl
sbb
inc
push
mov
pop
jo
xchg
mov
incl
int
pop
add
jmp
inc
push
leave
lds
rcll
cmp
cmc
or
dec
xchg
cmp
mov
dec
mov
pop
jp
imul
pusha
cmp
aas
sub
movsb
leave
gs
lret
or
add
sub
lock
mov
push
mov
mov
mov
push
cli
cmp
sahf
lods
rclb
int
or
lock
int
mov
dec
mov
bound
jbe
mov
xor
or
inc
sub
jne
loope
push
loope
aaa
push
test
test
pop
jb
dec
sub
loope
lods
jge
cmp
lcall
int
pushl
jo
lock
icebp
icebp
mov
out
stos
jne
leave
outsl
nop
or
out
jno
cmp
hlt
jno
pop
pop
inc
push
pop
or
pop
sbb
loope
jns
jne
stos
mov
ret
orb
xchg
test
mov
lret
lods
mov
jo
jae
jae
mov
cmp
xor
pop
incb
je
xchg
lret
insl
lret
mov
sub
xor
xchg
adcl
mov
mov
mov
fisubl
testl
loope
jmp
and
mov
mov
sbb
imul
test
add
cmp
xor
and
or
jge
popa
jg
xor
ficoms
aaa
mov
or
push
xchg
sbb
sub
lret
insl
add
push
movsl
xchg
mov
aad
push
movsl
mov
mov
xor
mov
leave
push
addb
and
mov
or
ret
pop
shrb
adc
adc
xrelease
std
ret
pop
test
mov
in
cmp
jb
insl
lds
lret
popf
insb
std
cmp
inc
call
loope
cmp
push
jbe
aad
pusha
mov
sbbb
cmp
pop
orl
dec
ja
imul
push
mov
mov
adcb
inc
push
push
cmp
sub
inc
cmp
mov
lret
add
jae
icebp
lahf
adc
jne
stc
mov
out
repz
out
int3
int
jmp
shll
mov
rcrl
insl
push
pop
and
and
mov
mov
inc
xor
stos
out
stos
and
or
out
cmpsl
sub
inc
and
ss
fisttpll
xor
leave
stc
leave
xchg
jae
inc
xchg
repnz
mov
ror
jmp
addr16
int3
xor
test
adc
aas
jo
lock
mov
es
cmp
cmp
push
lahf
scas
dec
imul
das
jae
and
mov
roll
xlat
subb
cmp
fadds
ffree
jns
cmp
pusha
jns
aad
clc
jne
lea
sarl
adc
and
inc
das
sbbl
pop
pop
mov
pop
in
jmp
out
icebp
lods
xchg
out
pop
add
xor
orl
and
cli
jge
test
adc
push
popa
les
ror
push
stos
sub
ds
push
and
xor
push
sti
push
sbb
lea
push
jge
test
lret
out
cltd
mov
sbb
sbb
loope
int
mov
jecxz
scas
jmp
in
sbb
movsl
mov
or
and
popf
popf
cmp
and
adc
inc
xor
or
jns
inc
fdiv
sbb
sbb
insl
addl
mov
mov
mov
dec
jnp
sti
jecxz
xchg
in
or
ret
or
fcmovnu
aam
dec
sbb
mov
ret
repnz
inc
insl
adc
or
mov
scas
push
lret
cmp
pop
mov
jb
adc
lds
jb
sbbb
add
add
mov
mov
dec
stos
sub
xchg
adc
out
mov
sbb
jg
jl
int
xor
or
pop
test
push
gs
in
push
nop
je
sti
cltd
add
int
je
insl
add
movsw
subl
cmp
pop
push
ss
js
add
popa
outsb
push
addr16
mov
xor
mov
jecxz
mov
or
int3
jg
jmp
xchg
sbbl
pop
fstps
test
adc
xor
push
popa
pop
cmpsl
dec
pop
pop
jo
adc
popf
into
inc
cmp
add
lret
addl
shl
iret
xor
in
mov
in
mov
sub
adc
add
mov
sub
and
xchg
jmp
scas
xor
or
repnz
sub
add
imul
pusha
popa
jl
aad
pop
aaa
or
test
mov
xor
mov
mov
xchg
int
and
lret
cmp
inc
push
jb
lods
pop
jns
pop
fistps
dec
mov
fwait
cltd
out
sub
movsl
jg
mov
fbstp
pop
add
cmp
mov
outsb
into
addr16
decl
lock
nop
xor
pop
leave
push
roll
pushf
lret
mov
scas
sbb
dec
rcrl
jb
sbb
sbb
test
push
inc
stos
cmp
inc
aas
jmp
and
dec
repz
rdmsr
lea
fildl
mov
or
das
inc
add
dec
test
std
loope
sub
jno
xor
push
mov
mov
jnp
iret
push
xchg
cmp
loope
cmp
test
sbb
gs
jno
insl
test
popa
jae
inc
sarl
pop
fimuls
iret
xor
pop
sbb
mov
pushf
or
jnp
mov
incb
ss
mov
sbb
fwait
push
test
scas
jo
xchg
cmpsb
dec
movsl
js
enter
fmull
das
lea
xor
sbb
xor
cld
movsl
movsl
dec
add
xchg
or
inc
sub
mov
gs
xor
xor
pop
mov
scas
iret
iret
jns
jne
scas
jge
test
lods
test
xchg
cmpsl
or
popf
and
lds
call
mov
rcll
gs
mov
ret
lret
sub
or
sbb
rcrb
mov
icebp
sub
xor
dec
subl
sbb
cmp
lret
jo
push
jecxz
sahf
xorb
mov
repnz
lret
push
aas
mov
popf
mov
mov
fcoml
xchg
test
stos
mov
nop
mov
int3
push
mov
inc
mov
addr16
jge
addr16
pusha
jl
dec
xor
cs
xchg
xor
test
jb
stos
jecxz
inc
and
dec
loop
pop
test
push
cltd
or
inc
push
sub
push
lods
jg
cmp
xor
sbbl
push
lcall
outsl
nop
call
pop
inc
mov
addb
aas
pop
push
mov
sub
loop
or
xchg
stos
mov
mov
daa
mov
sub
dec
arpl
lret
dec
repnz
xor
adc
mov
sahf
mov
std
mov
adc
shll
jns
jge
adc
out
mov
xchg
pop
out
mov
jnp
icebp
test
insl
adc
shll
or
gs
cmpl
cmovne
mov
popa
testl
mov
lret
fwait
test
pushl
dec
jae
pop
mov
ljmp
cmp
push
or
lret
lret
loope
leave
cmp
cmpl
pusha
lds
cmp
push
in
cmp
adc
or
lea
dec
dec
cmp
sub
add
jae
or
test
pop
mov
jmp
hlt
mov
pusha
jns
add
push
mov
xor
mov
adc
pop
int3
test
pop
sub
and
andl
push
inc
mov
sub
scas
xchg
cmp
cmp
mov
xchg
ljmp
and
dec
adc
shrb
pop
cwtl
pop
sahf
jbe
inc
and
pop
push
adc
mov
nop
cmp
repnz
insl
mov
int
xor
daa
rorl
and
aam
xchg
imul
or
push
push
icebp
cmp
std
mov
or
sbb
test
cmc
cmp
pop
xchg
insl
mov
inc
les
jae
orl
rolb
cmp
push
dec
ss
xchg
xorb
jge
repnz
fsubl
loop
cmc
dec
pop
inc
mov
iret
push
inc
testl
xchg
mov
loop
imul
pop
mov
sbb
inc
push
test
int
scas
int
sti
sbb
loop
ss
sbb
lods
mov
stos
ret
int
xor
fwait
test
mov
adc
inc
ret
xor
sub
xor
push
pop
shrl
pop
mov
fcompl
adc
mov
movsl
dec
and
xchg
int
add
inc
jno
ret
or
push
xor
or
mov
cs
cmp
imul
lods
nop
mov
std
mov
cmp
xchg
fnstsw
or
sbb
inc
les
push
repnz
dec
fwait
mov
xlat
addr16
jb
popf
std
daa
outsb
imul
sub
xor
xor
sbb
shll
lea
cmp
in
xor
movsb
pop
add
pop
mov
or
xchg
hlt
test
jae
mov
int
pop
icebp
imul
int
arpl
test
out
mov
cltd
mov
insb
popa
push
inc
xor
xor
pop
jno
jno
js
jmp
aas
xchg
pop
fiadds
and
test
pmuludq
subb
jg
icebp
std
push
shr
xor
push
jno
fs
mov
jge
xor
sti
cltd
xchg
sub
sbb
push
xor
pop
mov
mov
addb
adc
inc
shl
pop
test
mov
xchg
cmp
loope
inc
adcb
add
xchg
cmp
or
scas
pop
ret
and
jo
sub
add
aad
push
pop
aas
and
js
andb
jge
jo
mov
lock
or
cmpl
mov
add
cltd
cld
test
ja
iret
add
mov
addr16
cmp
or
stc
pop
mov
pop
sub
push
pop
pop
push
mov
and
sub
cmp
inc
inc
xor
mov
inc
ja
mov
flds
cmp
cmpl
imul
daa
sbb
aas
gs
and
push
mov
sbbb
adc
daa
dec
xchg
test
cmp
cltd
nop
fwait
xchg
popf
mov
lds
mov
subl
subl
call
or
jge
addr16
movsl
movsb
pop
xchg
mov
mov
mov
mov
test
in
mov
jmp
jecxz
sbbb
ja
lods
lds
push
iret
add
gs
xchg
lods
and
xlat
pop
shll
gs
and
or
jno
pop
pop
repnz
xor
int3
xor
popf
push
insl
mov
mov
test
pop
push
xor
ljmp
daa
pop
push
out
cmp
aaa
sbb
cs
out
jg
adc
mov
mov
jecxz
mov
mov
test
jmp
movsb
xor
or
sbb
test
addr16
test
stos
roll
stos
fists
sub
inc
pusha
adc
int
pop
aam
sarl
scas
or
fcmovb
dec
push
cmp
loope
mov
leave
out
pop
popf
out
jp
adc
mov
lds
mov
and
mov
mov
mov
loope
jne
sub
or
mov
jecxz
das
and
dec
pusha
or
pop
std
xchg
ss
in
pop
lea
xchg
loope
mov
call
adc
insb
sbbl
movb
aam
pandn
cmp
adc
je
xchg
adc
scas
add
push
lea
in
jno
aaa
popa
push
pop
mov
mov
jne
pop
outsb
push
out
popa
cmp
xchg
dec
cwtl
push
mov
insl
lds
out
outsb
or
lret
or
dec
loope
push
repnz
outsl
aam
clc
and
pop
or
mov
lret
lahf
leave
test
and
mov
das
jb
stos
in
insl
fistpll
inc
pop
jmp
mov
ljmp
cli
bound
jo
push
in
rcr
inc
inc
cld
repnz
mov
arpl
jae
popa
xchg
xor
or
int
and
xorl
test
rep
std
cmp
or
jb
jbe
lods
lds
nop
jmp
shll
and
out
push
outsl
xorl
cwtl
insl
popa
mov
dec
imul
xchg
iret
jbe
or
sti
js
sbb
stc
push
sub
mov
sub
jno
inc
xor
test
int
adc
fnstcw
nop
mov
jne
mov
inc
int
aam
push
adc
mov
pop
shlb
stos
inc
repnz
and
jle
mov
shl
out
xor
mov
sub
cmp
mov
jne
jmp
pop
pushf
ret
mov
dec
xchg
dec
test
loope
sub
cmp
mov
ljmp
jg
xor
andl
sbb
ljmp
test
test
ja
lds
push
repz
inc
sbb
cmc
dec
xor
and
push
adc
mov
ss
out
cmpsl
das
cmp
fucomip
fistpl
or
cmp
call
push
mov
insl
aas
int
insl
addr16
adcb
mov
loopne
out
out
ss
ss
addl
push
test
mov
mov
test
xlat
xor
or
lea
orl
sysenter
fucomip
stos
or
leave
or
and
pop
sbb
and
sti
dec
cmpsb
aas
jnp
dec
insl
cmp
test
cmp
je
repz
rorb
stos
xorl
stc
pop
mov
in
push
or
inc
icebp
xchg
xor
sbb
sub
aad
sub
fstps
xchg
leave
lea
shl
subl
and
test
jg
add
addr16
or
mov
nop
jbe
push
movsb
cmp
adc
jg
leave
mov
inc
xor
cld
insl
cmpl
xor
jp
test
xor
mov
xchg
and
or
lahf
test
pushf
mov
das
mov
lret
cltd
xchg
test
push
sub
ret
notl
and
test
xchg
std
insl
aad
or
jecxz
dec
int
pop
and
or
cltd
fwait
outsb
popf
mov
inc
lea
int
fildl
aad
pop
ja
test
mov
je
adc
gs
rcll
aam
repz
pop
xchg
fstpl
lret
xchg
subb
in
test
addb
xor
push
decb
movsl
sub
add
mov
pop
in
add
jne
inc
xor
in
sub
std
dec
xchg
dec
or
ror
jno
pop
add
leave
lahf
xchg
aad
pushf
or
and
lock
mov
push
in
add
xchg
faddl
test
xor
pop
and
jo
dec
std
pop
icebp
xchg
fldt
cli
mov
leave
or
out
sub
mov
adc
xchg
dec
lea
sbb
mov
inc
inc
xlat
rcl
outsl
test
mov
xchg
pop
and
push
xlat
movl
pop
jge
inc
lds
test
cmpsl
xorb
jmp
dec
imul
int
int3
cmp
mov
jmp
iret
push
pop
ret
pop
cmp
sbb
in
lret
jecxz
sbb
xchg
bound
shlb
out
inc
jae
rcrl
pop
pop
jmp
mov
adc
call
xor
mov
mov
lods
test
andb
dec
leave
jmp
imul
leave
stos
aas
pop
xorl
mov
dec
cmp
lret
and
mov
push
aad
pop
push
lea
or
sbbl
mov
or
mov
and
in
sub
and
sbb
jmp
out
mov
repz
icebp
jecxz
push
sbbl
cld
lret
loope
or
sbb
test
sbb
lcall
mov
and
add
cmp
repz
fninit
mov
dec
push
cmp
loope
nop
lods
add
popf
jns
bt
sbb
sbb
out
add
or
fisttps
mov
or
xchg
sub
icebp
mov
adcb
and
add
icebp
xchg
and
pop
xchg
push
pop
fsubrs
xchg
arpl
movsb
pop
and
lret
icebp
dec
or
xor
inc
dec
sbb
xor
lret
popl
inc
outsl
std
insl
andl
fstl
aas
fstpl
outsb
dec
push
jno
cmp
rcrb
jns
mov
or
jg
inc
fists
hlt
leave
daa
inc
cmp
fnstcw
mov
jne
or
jp
addb
imul
push
jne
lods
movsb
icebp
fstpl
mov
inc
xchg
nop
or
jns
mov
cmpl
cltd
fwait
scas
cmp
jmp
ss
fucomp
outsb
fdivrs
or
fwait
mov
loop
pop
insl
dec
mov
std
pop
ss
mov
pop
popf
ret
je
or
lock
xor
sbb
aas
call
push
in
imul
inc
push
lods
dec
enter
shll
xchg
test
popf
shlb
gs
stos
pop
mov
leave
test
pop
mov
test
insl
sub
int
pop
push
clc
xchg
lea
sub
jno
out
sub
loope
aas
adc
test
xchg
loope
or
mov
adc
cmpsl
and
ja
xor
imul
or
mov
leave
sub
ja
lcall
adc
out
mov
xor
clc
sub
push
push
xchg
and
push
stos
psubb
int
shrl
cltd
popf
out
mov
das
nop
push
xor
imul
repz
inc
mov
movsl
xchg
orl
leave
ja
sahf
or
add
je
int3
pop
cmp
xchg
and
stos
jne
les
lods
jnp
lods
cmc
mov
mov
dec
dec
insb
popa
pop
mov
pop
jnp
std
cmp
aad
test
test
sub
or
sbb
inc
xchg
adc
ss
xor
loope
gs
pusha
fwait
xor
pop
daa
pop
mov
addr16
iret
jno
sbb
loopne
in
push
or
adc
inc
xor
pop
sub
mov
nop
push
pop
xor
xor
inc
adc
pop
dec
lods
lret
repnz
xor
adc
gs
cli
sets
mov
xor
xchg
sub
and
lret
jg
adc
test
xor
mov
mov
push
xchg
lea
mov
mov
push
fisttpl
push
dec
xor
cmpsl
gs
mov
jecxz
lds
dec
mov
adc
dec
jp
or
mov
nop
out
push
fisubrl
inc
cmpsl
pop
data16
jne
int3
pop
lret
sti
out
pop
jae
lret
fldl
cmp
xor
jne
mov
sbb
adc
lea
add
popa
pop
pop
mov
cmpsl
pusha
xchg
sub
insl
sbb
push
mov
std
std
loope
mov
nop
push
mov
fwait
or
fsubrs
add
leave
jae
cmp
push
pop
rcrb
xor
sbb
test
cmp
or
lods
lahf
inc
mul
repnz
jmp
jb
nop
push
inc
sbbl
sub
add
stc
sub
sub
jg
xor
dec
and
pushf
lods
sbb
pop
fldenv
sub
lea
lcall
mov
nop
lds
mov
mov
stos
adc
inc
leave
in
repnz
loope
rcrl
dec
adc
xor
out
ss
add
mov
inc
sbb
cmp
or
cmpsl
lds
xor
xchg
or
mov
cmp
sub
pusha
push
jmp
nop
xor
stos
stos
xchg
xchg
mov
mov
pop
cli
mov
xchg
pop
cmp
push
shlb
sbb
popa
fwait
shll
mov
pop
inc
dec
orl
faddl
lods
push
mov
cld
cltd
cmpsb
fmull
xor
lea
outsb
add
push
or
sbbb
stos
xchg
sbb
outsl
pop
xor
push
adc
jp
stos
lock
addr16
xor
cmc
out
popa
out
dec
xchg
cltd
imul
inc
sub
bound
sub
rcrl
mov
fsts
dec
arpl
or
mov
mov
mov
or
repnz
pop
movsb
pop
xor
mov
sub
test
jno
ret
int3
xchg
sbb
or
mov
push
push
cli
cmp
sub
adc
cmpsl
inc
inc
inc
adcl
dec
test
push
xchg
jl
aas
mov
sub
imul
sub
scas
cmp
adc
lea
inc
shll
xor
sub
sub
mov
pusha
adc
mov
repnz
push
dec
jb
mov
test
inc
push
pop
test
lret
jae
xor
pop
mov
mov
in
dec
sti
push
pop
test
xchg
xor
jae
jg
test
vpunpckhbw
fisttpl
mov
mov
and
jo
mov
ljmp
mov
fmul
or
out
lea
rcr
ret
xor
or
popf
cmpsl
adc
push
pop
cmp
mov
cmc
dec
cmpsl
dec
mov
mov
iret
mov
cmovb
xor
and
test
nop
sub
inc
jl
mov
xchg
cwtl
sbb
push
filds
mov
mov
mov
sub
adc
mov
inc
rorb
mov
in
out
cmp
mov
jbe
je
subb
lods
pop
sahf
sbb
pop
aas
dec
dec
add
or
xor
pushf
dec
daa
mov
or
mov
push
jo
lock
jecxz
mov
filds
mov
scas
sub
nop
xor
popf
xlat
add
mov
cmp
xchg
xor
cmp
xor
adcb
add
xchg
push
call
popa
test
mov
cmp
mov
sbb
in
loope
imul
stc
xor
out
add
outsl
in
cli
mov
mov
mov
or
inc
and
mov
in
and
pop
and
xor
lret
outsl
sub
inc
imul
mov
mov
fdiv
scas
mov
inc
fucompp
test
sbb
sti
cld
inc
sub
movsl
insl
and
dec
inc
pop
and
sbb
ja
cmp
test
lahf
in
lret
rolb
add
aam
push
add
add
repnz
pop
lea
leave
jecxz
sahf
jg
or
popf
cltd
dec
dec
pop
cmp
aas
lea
iret
int3
fwait
das
and
cmpsb
add
scas
jecxz
push
push
dec
std
sbbb
ja
sbb
mov
inc
cmp
push
jbe
icebp
xor
jg
xchg
out
sub
or
jl
movsl
mov
jmp
fisttpll
stc
sbb
sbb
sbb
adc
inc
mov
sbb
scas
in
push
rorl
test
je
dec
aam
mov
aad
orl
repz
mov
popf
rol
sub
adc
cmc
mov
popf
xchg
outsb
lret
call
sub
cmc
mov
loopne
xchg
ret
mov
hlt
xor
or
or
adc
cmp
pop
jbe
adc
mov
sbb
call
int
adc
mov
fwait
imul
loope
or
push
sub
mov
push
sub
out
and
in
jnp
lret
mov
or
stc
push
scas
sub
mov
sub
sti
arpl
or
pop
int
xchg
dec
xor
mov
and
es
or
dec
mov
mov
mov
mov
add
hlt
add
inc
lret
arpl
jb
jo
sbbb
dec
xchg
loope
mov
xchg
xor
scas
and
dec
adc
test
loopne
xchg
clc
call
cmp
lret
cmpl
addl
into
out
ss
or
movsl
mov
ret
stc
sbb
mov
repnz
test
mov
in
fbld
loop
iret
pop
xchg
cmc
jecxz
jae
fldenv
mov
lea
hlt
and
sbb
insl
notb
dec
sbb
xchg
mov
leave
or
mov
cmc
sub
lods
arpl
test
lds
aad
loope
fnsave
arpl
js
inc
lcall
scas
sub
iret
xor
shll
addl
sub
adc
fwait
into
dec
sbb
int
xlat
js
adc
dec
test
stos
lods
xchg
add
or
sbb
movsl
aad
dec
mov
popl
sbb
lea
jns
imul
cmp
adc
sbb
jns
in
pop
add
push
or
pop
add
movsb
and
xchg
out
xor
lret
xchg
test
notl
push
mov
mov
xchg
sbb
mov
jge
inc
or
mov
negb
pop
sub
test
loope
int
lea
cmp
cmpsl
aas
cltd
pop
jb
in
lea
call
sbb
push
subb
frstor
lret
test
fimuls
dec
adc
cmp
icebp
sub
dec
addb
jle
pop
clc
add
sub
scas
xchg
jecxz
lret
test
das
and
push
sbb
sub
and
xchg
shl
mov
nop
or
negl
cmc
or
pop
or
xor
je
aam
cmp
stos
aas
pop
arpl
lret
lahf
xchg
xchg
int
cltd
insl
pop
pop
or
jmp
dec
pop
in
add
sbb
iret
pop
sub
js
lods
jbe
imul
adc
decl
ret
inc
std
adc
dec
hlt
dec
in
pop
mov
adc
xor
dec
sbb
mov
fwait
pop
leave
stos
sub
inc
dec
jae
jg
dec
daa
movb
aas
mov
hlt
ss
and
inc
and
loope
xor
test
dec
scas
scas
cmp
out
notb
cld
xor
dec
fstl
push
in
add
icebp
mov
push
xchg
call
imul
les
in
ljmp
cmp
shll
iret
std
cmpl
leave
das
pop
fs
aas
jb
mov
jns
pop
loope
sbb
lahf
sbb
xor
rolb
dec
jnp
mov
adc
stos
and
popf
inc
pop
je
xor
and
dec
add
shl
mov
mov
and
test
xchg
iret
fwait
iret
lock
add
repz
add
push
cwtl
inc
sub
fdivp
insl
repnz
lock
jbe
sbb
jb
mov
mov
xor
push
xor
jl
dec
sbbl
cmpsl
daa
dec
rol
xorb
mov
fistpl
sti
mov
add
int
and
sbb
and
mov
xchg
sahf
nop
pushf
push
iret
insl
mov
nop
sub
in
cmp
xor
js
lods
pop
loope
je
sub
xchg
mov
mov
mov
sub
stc
insl
sub
push
sub
dec
lds
dec
ljmp
test
jo
pusha
pop
mov
cld
cmp
jnp
loop
inc
loopne
pop
dec
push
push
addb
push
cmp
adcb
sbb
cmpl
inc
repnz
cmpsl
lds
or
xor
aaa
push
sub
xor
and
mov
xor
int
cmp
pop
pop
cmpsl
and
jle
mov
test
stos
inc
in
orl
sub
out
dec
sbb
inc
cmp
int3
or
add
xlat
jg
icebp
sbb
xchg
mov
scas
aad
enter
add
inc
lret
and
das
lahf
aad
test
xor
mov
and
rorb
std
enter
sti
push
mov
mov
add
xor
sahf
and
pop
clc
sub
int3
jge
outsl
sbb
jne
or
xor
push
mov
insb
in
frstpm(287
sub
icebp
cli
inc
push
call
jne
adc
cmpsb
dec
sahf
inc
mov
insl
mov
adc
xorl
dec
pop
xor
mov
jae
sbb
mov
or
lods
cmp
scas
xlat
loope
cmovne
out
sbb
dec
dec
xorl
outsb
cmpsl
cmp
mov
or
test
addr16
out
cmpl
loope
cs
push
sub
fs
sub
nop
jle
mov
test
xor
xchg
jg
inc
lahf
mov
repnz
mov
xor
and
out
ret
jg
push
lods
test
xchg
sbb
sub
icebp
inc
lahf
inc
and
jns
mov
or
sub
out
popf
in
adc
pop
cmp
das
push
mov
les
pop
cmp
mov
in
repz
or
repnz
cmpl
dec
mov
pushl
in
mov
jbe
mov
push
cmpsb
lret
lds
xchg
sbb
loope
in
inc
aad
int
add
lea
arpl
leave
icebp
movsb
fdivrl
xor
jbe
jecxz
xchg
xor
and
xlat
jle
fildl
or
jb
movsl
jge
mov
jecxz
sub
test
lds
out
sbb
test
imul
jno
jnp
xlat
or
jb
cltd
pusha
jmp
xchg
add
movsl
popa
mov
push
cmp
popa
test
lods
leave
test
hlt
hlt
cltd
push
and
adc
out
mov
add
xor
insl
xchg
out
pop
jg
inc
pop
add
mov
out
inc
pop
inc
inc
push
dec
fistpll
andb
push
ror
sbb
xchg
pop
sti
xorl
or
pusha
cmc
test
hlt
loopw
jnp
sbb
inc
es
sbb
outsb
fdiv
xchg
ret
sbb
cmp
push
mov
test
ret
popf
in
cmp
lret
test
mov
inc
xor
dec
lods
js
inc
cmc
cld
hlt
and
ljmp
jecxz
popf
dec
push
aad
sbb
inc
imul
dec
shlb
mov
push
gs
iret
dec
iret
inc
je
mov
lea
adc
and
add
iret
adc
dec
hlt
inc
mov
cltd
test
mov
sbb
push
sub
add
out
ss
rcl
jg
push
mov
sti
sub
in
cmpb
push
sarl
sti
mov
popf
pop
add
and
fwait
cmp
aad
mov
sarb
or
loop
call
les
and
jl
sub
icebp
int3
mov
jb
outsl
cmpsl
call
and
ljmp
iret
icebp
gs
bound
mov
xor
sub
cmp
dec
xchg
testb
or
sbb
and
testb
out
jg
and
aaa
and
mov
dec
fbstp
xor
int3
dec
gs
sbb
cmp
adc
inc
test
cmp
ret
sbb
sub
add
fnstcw
int3
sub
add
int
aaa
pop
cmp
xchg
cltd
out
ss
add
shrb
fdivp
nop
notl
iret
test
loope
and
lret
xchg
loope
dec
cmp
pop
pop
xchg
js
lods
lret
pusha
xlat
cmp
sub
xor
lahf
or
in
adc
imul
outsb
add
icebp
pop
dec
loope
in
or
xlat
rcl
jns
pop
loopne
mov
lret
lock
xchg
xchg
insl
cmpb
jl
inc
fldt
lret
cltd
jae
add
jle
cmpl
xor
dec
jo
pop
lods
mov
xchg
xor
aaa
pop
jp
lret
jle
jg
aas
dec
test
jb
scas
cmp
and
lds
mov
mov
lods
dec
lock
jae
cltd
mov
out
stos
jge
inc
adc
dec
inc
inc
jmp
cs
lds
pop
cmp
xor
xor
sub
pop
fwait
movsb
jg
or
fcmovnb
mov
cmpb
sub
push
fldcw
out
pop
inc
pop
mov
mov
int
sbb
fwait
pop
inc
orl
push
push
mov
inc
mov
outsb
mov
mov
jmp
popf
das
jne
pop
xchg
mov
jge
and
cmovae
jg
and
add
or
jne
or
cmp
nop
stos
and
icebp
xor
sub
jp
shll
call
xchg
out
pop
xorb
popa
repnz
sarb
pop
cld
mov
inc
sbb
add
adc
xor
fdiv
inc
and
imull
out
xor
jle
mov
dec
jge
pop
popa
push
push
dec
xor
mov
aad
jns
cmpl
xor
xor
inc
lret
inc
mov
inc
notl
mov
pop
andl
and
cmp
jne
cmp
pop
ret
dec
in
pop
in
sub
mov
or
xchg
outsb
lea
or
sub
rorl
pop
gs
mov
sub
mov
mov
adcl
add
cmp
sbb
add
pop
xlat
insl
cmp
add
fbld
sbb
mov
aaa
sbbl
movsl
mov
int3
add
add
out
decb
sub
jnp
fwait
lret
mov
flds
cmp
enter
mov
pop
mov
test
repz
xor
adc
in
stos
inc
mov
lock
sbb
jne
or
out
or
daa
adc
jl
sub
fisubrs
jns
xor
cmp
jge
cmp
je
cmp
cmp
test
dec
cmp
or
push
sbb
dec
mov
push
and
jbe
test
add
or
out
mov
iret
bswap
mull
out
xor
nop
xor
addr16
or
pop
enter
add
ror
lods
je
imul
lds
cmp
int3
cmpsl
sbb
gs
imul
lds
push
popf
lods
cmp
lret
test
imul
sbb
out
scas
lss
sti
insl
sbb
int
and
pop
sub
outsl
xor
ret
out
pop
jo
mov
daa
imul
adc
jns
xchg
xor
fistl
or
jnp
inc
pusha
test
xor
sbbb
cld
sbb
fldenv
int
xor
xor
cmpl
test
mov
popf
mov
lcall
fisttpl
in
mov
lds
xor
push
pop
jno
out
in
or
and
push
mov
xchg
cltd
pusha
mov
into
sbb
fwait
bound
movsb
ret
stos
lds
xor
rol
roll
hlt
mov
in
inc
jg
jo
pop
mov
lcall
notb
test
mov
add
testl
sbb
sbb
sbb
pusha
and
xor
sub
push
sub
lret
fnstsw
xor
xor
mov
lret
icebp
xchg
add
push
in
dec
pop
inc
or
mov
mov
adc
stos
or
test
je
imul
orl
mov
add
aas
xchg
in
clc
test
inc
ss
sbb
pop
mov
mov
aas
mov
mov
adc
cmp
cmp
repz
sbb
push
mov
push
sub
and
leave
stos
ja
push
xor
mov
movsb
leave
andl
mov
xchg
mov
in
fcomps
push
inc
dec
cmp
or
pop
adcb
fxch
ja
sti
in
test
movsl
push
mov
mov
test
sub
andb
int
xorl
jae
cmc
xor
cmp
xchg
loope
push
and
inc
cmc
jo
mov
mov
jmp
nop
fld
xchg
mov
leave
movsl
jo
jge
daa
aas
pop
pop
jno
popa
cli
scas
dec
lret
fwait
insb
inc
aaa
cmp
mov
jo
fimuls
inc
inc
aas
push
lahf
xrelease
mov
test
mov
or
mov
addr16
subb
cmpsl
in
leave
xchg
add
jmp
in
mov
sbb
adc
jns
jo
stos
add
pop
movq
addr16
insl
mov
aad
andl
cmp
in
scas
in
jmp
push
sub
jg
repz
jne
or
jmp
jecxz
adcb
aam
pop
sub
pop
mov
dec
lock
movsl
jne
and
fs
and
shlb
cs
sbb
inc
stos
push
lock
leave
jg
mov
dec
mov
mov
mov
inc
and
ds
out
outsb
or
xchg
test
pusha
stos
xchg
vcvtdq2pd
sbb
fistpl
mov
shl
inc
or
subb
negl
in
addr16
shrl
scas
push
rcll
test
sub
mov
mov
and
mov
in
or
dec
pusha
repnz
cmp
lea
xchg
mov
popf
dec
adc
lock
mov
push
stc
cmp
outsl
or
outsb
sbb
mov
pusha
dec
xchg
pop
mov
mov
test
scas
add
shl
addb
dec
icebp
or
lock
pop
mov
mov
xor
fcmovnbe
ror
xor
xor
jge
add
and
into
cli
je
or
es
or
sub
mov
cmc
mov
adc
test
jmp
push
mov
or
jl
aas
adc
sub
jmp
addr16
rorb
std
out
lret
lahf
mov
fbstp
fldenv
mov
cmp
sbb
in
aam
or
mov
lods
icebp
int
mov
insl
enter
and
icebp
test
xorb
cmp
lds
out
inc
adc
fucomp
out
xor
adc
js
mov
test
and
js
movsl
push
lret
cmc
jmp
jne
pop
mov
jno
jnp
mov
mov
ss
pop
adcl
sbb
xor
pop
sbb
mov
add
repz
aad
push
push
out
xor
push
fst
cmp
jb
adc
or
sbbb
repnz
mov
mov
test
mov
loope
xor
or
scas
popa
mov
xor
mov
mov
jb
addl
pop
adc
out
cmp
pop
jle
or
aad
test
das
mov
adc
or
mov
mov
notl
xor
cmp
dec
push
push
divl
xor
cltd
fistps
sbb
adc
mov
rcl
rcl
push
test
in
cmp
inc
inc
mov
add
jb
and
mov
sub
sbb
push
add
and
xor
pop
daa
jnp
cmp
rorl
in
push
jecxz
in
sbb
leave
xchg
pop
xchg
loope
cmp
or
mov
adc
mov
repnz
xor
mov
dec
gs
jnp
or
pop
mov
cmp
outsl
push
push
icebp
inc
ds
fiadds
and
inc
lret
mov
das
sub
sbb
push
icebp
rorl
popa
jg
sti
out
stos
sti
sub
xchg
sub
pop
xchg
adc
xor
mov
inc
xchg
pop
lahf
sub
std
dec
dec
outsl
xor
pop
int
mov
pop
pop
out
cltd
xor
sbb
ss
cld
das
xor
xor
push
mov
and
gs
test
jecxz
clc
shlb
push
loope
shll
xor
in
mov
mov
repnz
lods
xor
lock
pop
push
int
sub
ds
aad
leave
add
xorb
push
lds
sub
mov
pusha
inc
xor
imul
jmp
dec
push
add
pop
jae
xor
out
leave
sbb
repnz
mov
arpl
push
cli
pop
and
stos
iret
mov
xor
pop
movsl
adc
add
insl
arpl
dec
fwait
sub
sbb
daa
cmc
js
push
adc
add
xor
cmpsl
leave
sub
ret
sti
inc
das
out
jecxz
xor
adc
test
cld
mov
sub
cmp
jg
cmp
aam
and
jae
notb
fbstp
dec
test
push
jns
pop
lret
loop
rcll
pop
and
std
sti
sbb
idivl
fbstp
sub
or
mov
push
cmp
daa
addb
mov
fcomps
add
xor
jecxz
mov
xor
iret
cmpsb
mov
push
xor
pop
popf
imul
leave
stos
cmp
les
mov
int
fistpll
shll
dec
pop
xor
stos
lea
int
inc
and
insb
adc
icebp
lret
push
clc
sbb
xchg
inc
mov
mov
in
dec
pop
aam
cmp
bsr
mov
loopew
imul
adc
sbb
and
je
fldenv
pop
push
int
mov
cltd
pusha
mov
lret
insl
les
out
scas
jmp
fsubrs
sti
sbb
dec
or
push
inc
stos
pusha
jae
loope
mov
int3
jnp
sbb
and
pop
nop
dec
pop
xor
xchg
mov
pop
test
dec
lods
xchg
sbb
push
iret
out
lock
sub
popa
sarb
lds
and
mov
mov
mov
daa
out
sub
push
and
test
nop
mov
pop
cli
and
add
fwait
push
scas
jb
sub
xor
xor
pop
mov
cmp
adc
insl
jge
sbb
icebp
fimull
stos
cmp
inc
lret
lea
sub
loope
loope
repnz
jb
int
mov
mov
lcall
push
xor
mov
and
sbb
push
mov
adc
push
sub
dec
icebp
mov
pop
sbb
push
and
stc
push
jb
mov
cltd
test
pop
mov
cli
sub
mov
add
and
lret
int3
cmpsl
cs
mov
leave
ret
fwait
push
stc
repnz
and
bound
jb
loop
leave
nop
dec
sbbl
shl
repnz
dec
push
sub
in
mov
nop
lods
ss
loop
fisttps
aad
mov
xchg
dec
loope
ror
or
pop
jge
jecxz
mov
insl
xlat
xor
fldcw
jmp
je
sbb
push
xor
and
leave
ret
adc
push
stos
loop
or
xchg
xchg
sarb
adc
or
sbb
sti
addl
jge
xlat
mov
inc
and
mov
sbb
mov
icebp
jecxz
push
cmp
std
jae
add
ds
mov
mov
cmp
aas
popf
popf
out
pop
sub
andl
je
int3
jecxz
clc
adc
dec
xchg
adc
sub
jnp
bound
imul
xor
xlat
pop
dec
lods
jge
outsl
jmp
adc
push
dec
mov
aas
push
hlt
push
dec
jle
arpl
pop
or
imul
dec
push
push
shll
xchg
inc
jle
lcall
add
ret
sub
insl
ret
outsb
sub
xchg
jecxz
je
sub
pop
sbb
xchg
ds
cmp
adc
fidivs
adc
loope
cmpsb
out
cltd
int
ljmp
lret
rcll
push
push
jge
lods
add
jecxz
inc
xor
jge
es
je
rorb
iret
aam
push
inc
fsin
repnz
jmp
popf
mov
outsl
test
jecxz
test
loop
aad
ljmp
adc
mov
or
les
jnp
or
ret
addr16
loope
push
out
or
in
mov
lret
jp
aas
jns
hlt
cmp
cmp
lock
push
mov
pause
dec
jecxz
mov
imul
dec
scas
fisttpll
incb
sbb
sub
pop
cmc
dec
paddw
mov
in
push
mov
adc
cmp
test
xchg
scas
push
jo
lock
orl
mov
fstpl
nop
leave
jae
push
paddb
pop
mov
add
or
mov
push
jg
fimull
jmp
mov
jne
mov
adc
loope
lds
pop
add
shll
push
push
pusha
push
add
shll
jo
loopne
cmp
sbb
mov
or
mov
dec
mov
loope
jg
int3
in
add
test
insl
add
and
sbb
lret
repz
addr16
mov
xor
xor
pop
sti
icebp
xor
add
mov
xchg
scas
je
dec
je
sub
dec
loope
xor
popf
shll
lret
pop
insl
mov
jecxz
cld
xor
outsb
add
push
jmp
sbb
mov
nop
mov
mov
int
imul
sbb
ljmp
push
fiadds
add
fisttpl
sbb
adc
lods
ja
pop
xlat
cmp
fnstcw
pop
movsl
aad
pusha
fldenv
mov
mov
test
xor
mov
lret
sbbb
enter
shlb
xor
shrb
mov
popa
mov
dec
je
orb
fildl
int
add
or
imul
inc
daa
push
inc
push
das
sti
inc
cmp
and
mov
xchg
cmp
in
inc
add
std
scas
push
addr16
in
xchg
lds
cmp
cltd
cmp
mov
gs
leave
jmp
add
ror
cmp
mov
mov
and
sub
xor
out
sbb
jo
push
or
std
sbb
dec
cmp
popa
in
xlat
movsl
adc
mov
xchg
stc
xor
cmpl
cmp
loopne
fwait
add
into
insl
jns
inc
xor
leave
mov
in
push
vcvttpd2dqy
sub
adc
or
or
push
cmp
movsl
addl
or
movsl
stos
addr16
pop
jbe
mov
push
sbb
mov
lret
lea
hlt
aad
cmp
jecxz
jne
std
repnz
fstpl
fidivrl
xchg
adc
add
push
xor
bound
cltd
pop
nop
sub
dec
popf
je
lret
test
in
aad
insl
std
out
xchg
mov
int
mov
mov
bnd
lret
gs
mov
shl
adc
fnsave
lea
pop
rol
jmp
popa
nop
adc
jb
stos
pop
jge
lret
stos
int
lea
add
mov
mov
jmp
xchg
cmp
sub
pop
movsb
cmp
cltd
mov
jnp
bound
pop
cmp
mov
fnstcw
or
enter
cmc
inc
sbb
out
pop
fwait
dec
cmpb
sbb
inc
xchg
test
shlb
out
jae
xor
lods
sub
push
nop
leave
push
lds
jnp
sub
sbb
sbb
mov
jg
enter
cmp
sub
lock
and
xchg
dec
std
sbb
sbb
adc
in
call
scas
scas
xor
popa
sbb
cmp
add
sbb
mov
insl
psubw
push
sub
in
cmp
lret
mov
std
stc
xchg
gs
cmpsb
repnz
cmp
sbb
out
xchg
mul
inc
or
leave
call
fcmove
repnz
cmpl
lea
hlt
lds
add
cmp
repz
inc
push
test
arpl
mov
jb
mov
lds
frstor
shrl
add
sbb
add
stos
inc
test
inc
roll
mov
inc
adcl
push
mov
adc
jge
icebp
jo
jmp
dec
or
lods
sbb
imulb
and
fwait
push
mov
in
outsb
and
inc
mov
cmc
leave
psraw
sub
pop
mov
test
aas
jne
jne
and
lds
cmp
icebp
test
mov
xchg
leave
push
in
out
jl
cmp
lahf
sub
popa
popf
frstor
in
lret
inc
std
sub
dec
imul
je
mov
jns
cmpsl
mov
adc
and
inc
adc
lods
out
ret
sub
mov
sbb
aad
loope
adc
leave
stc
or
jg
test
adc
repnz
scas
push
mov
std
dec
inc
fnstcw
xor
out
pop
xlat
add
jg
jns
mov
dec
dec
std
insl
cmc
imul
cmc
out
sub
test
test
or
pop
imul
xor
stos
dec
adc
pop
jecxz
jle
lret
push
mov
sub
push
add
fldl
pusha
sbb
adc
fistpll
adcl
push
mov
lods
pop
out
push
mov
outsl
jb
arpl
jecxz
xchg
or
loop
xlat
fst
loope
add
sti
or
dec
fucomp
cmpsl
lods
dec
cmp
out
inc
in
fnsave
and
dec
pop
inc
cmp
mov
push
inc
leave
mov
or
cmp
test
icebp
lock
out
popf
int
pusha
push
mov
cmp
push
imul
mov
jae
dec
repz
inc
movsl
lcall
push
jnp
or
mov
adc
adc
dec
sub
lret
mov
mov
jmp
call
jno
inc
mov
nop
fstpl
dec
add
stc
test
imull
orl
add
xchg
add
dec
sbb
xchg
out
stos
jns
dec
addl
push
sbb
mov
jne
pusha
mov
pusha
add
adc
and
aad
or
mov
fldl
inc
mov
xchg
xchg
fiadds
mov
jmp
adc
lods
sbb
inc
mov
jg
sbb
aad
sbb
out
sbb
andb
jge
xchg
cmp
fldl
mov
lcall
daa
cltd
add
xchg
add
fcoms
pop
in
popf
add
rcrl
addb
xor
dec
jmp
popf
mov
test
push
or
push
lea
lds
push
sbb
inc
mov
roll
lds
sub
fisttpll
mov
jno
jge
mov
fdivl
rolb
adc
cli
dec
loopne
and
lds
mov
xchg
adc
fistps
shld
sbb
add
sub
mov
jg
enter
xchg
pop
cli
mov
jg
inc
mov
xor
sub
xchg
ficomps
icebp
scas
lahf
jb
mov
out
ret
pop
scas
adc
and
mov
clc
xlat
dec
and
mov
clc
and
aaa
mov
inc
jns
repnz
adc
jns
sti
jnp
pop
icebp
ror
dec
mov
imul
gs
jmp
and
sub
repz
mov
cmp
mov
push
xor
jg
lods
lods
shl
pop
fldl
jg
dec
sub
jae
xchg
jno
mov
dec
adc
nop
sbb
xchg
inc
je
imul
insb
sti
loope
stc
movsb
add
fildll
jmp
jne
mov
adc
je
push
cltd
cmp
cmp
pop
pop
arpl
call
pop
dec
std
or
and
jno
sub
out
sti
mov
sbb
sbb
inc
in
test
jge
test
mov
add
stc
xor
fndisi(8087
mov
lods
icebp
movsb
rcrl
add
dec
mov
mov
jne
mov
or
sub
addr16
push
pop
std
scas
or
leave
inc
roll
cli
std
xchg
call
xor
aam
jb
insl
cli
pop
pop
sub
jne
and
aad
xor
nop
repz
mov
movsl
add
mov
loop
jno
and
rcll
cmp
jmp
mov
loop
xchg
subl
jp
cmp
xlat
sub
dec
lods
xor
mov
push
pop
in
in
adc
mov
jecxz
mov
in
movsb
insl
imul
jmp
pop
rcr
or
pushf
pop
pop
xor
nop
sbb
movsl
pop
das
hlt
movsl
loop
leave
or
add
xlat
dec
add
out
int3
flds
out
mov
js
adc
scas
inc
push
insl
pop
sbb
in
xchg
xlat
in
lods
test
or
loope
subl
scas
xor
and
out
push
jmp
jns
ret
mov
cld
xchg
addr16
aaa
insb
icebp
jmp
ret
cltd
stc
sti
in
or
adc
aas
cmpsl
mov
jge
iret
int
pop
push
jmp
sbb
mov
jne
mov
test
mov
nop
or
jle
int
test
out
cmpl
vpsubd
push
inc
leave
cmp
test
cmpsl
cmp
or
cmpl
sub
fmuls
cmpsl
xlat
mov
iret
rorl
lods
iret
dec
lret
test
jge
stos
cltd
insl
mov
iret
push
in
mov
dec
mov
xor
test
xchg
pop
movsl
lds
mov
inc
or
and
inc
jae
aas
jns
mov
in
scas
push
icebp
test
movsl
mov
shll
in
jge
icebp
aas
std
inc
and
xor
cmp
mov
popf
or
push
in
lock
xor
jne
xor
test
dec
jne
test
jae
mov
pusha
xor
and
imul
lods
pop
popf
dec
inc
int
jns
adc
popf
sbb
lods
sbbl
dec
push
nop
in
fldcw
nop
inc
push
dec
sub
pusha
jns
mov
jecxz
jle
andl
mov
cld
test
sbb
and
jge
lods
pop
mov
icebp
add
lds
insl
or
xor
movsl
fcomps
sub
sbb
aad
xchg
push
inc
fnstenv
cmp
sbb
mov
popa
push
lea
sub
xchg
push
cmc
out
or
adc
dec
lret
fnstcw
jae
call
jne
subl
mov
aad
mov
std
xor
sub
adc
test
scas
xchg
mov
lahf
or
call
lods
shrb
mov
and
mov
dec
cmp
stc
addr16
or
lea
sarl
imul
mov
mov
repnz
lock
mov
pop
xor
fwait
jg
xor
jne
lods
push
xchg
sti
sub
sub
in
jns
cmpsl
xorl
and
xchg
outsb
push
mov
pop
insl
jo
call
repnz
push
pop
mov
mov
jmp
push
cmc
shll
popa
mov
lods
dec
pop
mov
aad
jecxz
jle
int
and
inc
imul
mov
jmp
repnz
sub
std
push
jno
call
imul
stc
jne
mov
imul
adc
inc
cmp
jmp
cwtl
mov
cmc
or
ljmp
shll
mov
out
inc
mov
jge
fwait
lds
je
lea
mov
pop
orb
jb
out
ror
mov
pop
cmc
adc
in
mov
in
jo
mov
addl
fwait
pop
jge
cwtl
lds
icebp
sti
fstp
jge
cmp
jle
adc
pop
cmpsl
or
mov
sub
lea
dec
out
xchg
std
pop
out
test
sbb
stc
mov
icebp
mov
push
sbb
addr16
out
dec
mov
sti
jg
adc
flds
jg
adc
in
dec
cmpl
sarl
push
or
jge
jge
cmpsl
aad
lea
daa
iret
add
sbb
fwait
xor
inc
popf
data16
jb
jmp
mov
adc
ret
inc
jge
xor
imul
and
adc
sbb
testb
in
jo
mov
add
call
fldt
and
jge
subl
inc
int
leave
pusha
in
cmc
jo
mov
insl
pop
xor
fwait
lock
jmp
adc
xchg
cmp
int3
mov
insl
push
mov
xchg
leave
icebp
dec
add
out
add
jle
leave
sub
sti
push
mov
cmp
pop
leave
push
or
or
leave
scas
roll
cmp
push
dec
and
push
mov
mov
movsl
inc
jo
call
movsl
xor
push
jecxz
iret
lods
movsl
mov
adc
std
xor
int3
mov
mov
icebp
adc
in
mov
jg
cmp
push
inc
xor
mov
mov
xchg
int
lea
mov
pop
sbbl
aad
jns
and
push
fwait
mov
pop
xchg
sub
dec
fwait
gs
cltd
pop
jecxz
jle
jns
xor
cltd
dec
mov
call
in
jg
cmp
stc
mov
lds
shrl
lea
inc
mov
push
in
push
test
jne
jge
xchg
xchg
pop
lds
popf
fnstsw
call
mov
mov
jmp
mov
lods
popa
cld
mov
mov
mov
std
inc
and
pop
cmp
mov
sub
test
adc
cmc
lea
test
movsl
pushf
jae
shr
fldl
loop
mov
cmp
loope
jne
lds
xor
inc
flds
fst
movsl
jne
mov
cmpl
or
jle
test
fstl
in
int
mov
inc
or
test
lret
je
push
push
sarl
fnstcw
adc
pop
cltd
int
sbbl
jns
xchg
jge
dec
lods
mov
xchg
inc
icebp
leave
dec
push
sub
cmpl
jb
gs
mov
push
in
sbb
inc
add
shll
mov
add
xchg
call
in
in
and
sub
xor
lods
sbb
pop
jg
cmp
mov
add
pop
test
mov
jne
sub
jae
lea
mov
jae
push
sbb
in
or
xchg
mov
repnz
mov
sub
sub
leave
and
ss
icebp
and
sub
xor
xchg
xchg
cltd
xor
rorl
mov
insl
pop
push
sbb
jns
icebp
sub
inc
mov
mov
stos
jmp
jle
jno
xor
add
mov
fucomi
cltd
pop
jmp
mov
imul
lahf
leave
and
push
add
jno
subl
and
jno
stc
fyl2xp1
out
dec
and
addr16
dec
fldcw
add
jmp
dec
mov
insl
adc
pop
lea
das
jo
mov
stc
sub
push
adc
popf
mov
test
xchg
int
sbb
mov
sub
sbb
pusha
inc
pop
movsl
mov
push
nop
in
pusha
loope
cmpsl
movsl
jnp
gs
pop
cs
push
pop
cmp
and
sti
cmp
mov
jae
mov
adcl
jg
add
cmp
jns
add
stc
inc
sub
jno
dec
test
xchg
xor
add
pop
popa
int
orl
dec
mov
pop
and
lods
adc
push
and
xchg
aaa
nop
or
dec
adc
pop
call
pop
and
sub
mov
orl
pop
or
push
popf
in
in
addr16
add
leave
andb
es
int
push
mov
loop
or
mov
mov
add
jae
mov
sahf
popa
pop
int
sub
inc
in
pushf
arpl
ret
lcall
cmp
add
loop
insb
xchg
call
pop
jge
jnp
icebp
pop
lret
mov
dec
scas
xchg
insb
pop
xchg
sbb
stc
fiaddl
mov
cmc
jbe
jns
or
in
icebp
add
add
cmp
push
aad
or
or
lret
dec
ss
mov
ficoms
push
out
push
je
int3
outsl
add
sete
fidivrl
insl
add
mov
lods
insl
scas
dec
test
push
cmp
ret
cmpb
test
sub
cmpb
pop
sub
daa
les
sub
cmpl
pop
adc
fistl
push
stc
dec
sub
mov
xorl
std
out
fldl
fnstcw
or
add
or
push
xor
jp
pop
mov
roll
pop
ret
scas
or
push
lahf
cmp
mov
les
jmp
mov
call
rol
je
add
jnp
fistpl
push
cs
les
repnz
scas
idivb
adc
ret
push
inc
fld
scas
loop
ret
pop
pop
add
add
add
loope
cmp
adc
lods
mov
and
out
popa
std
roll
push
mov
adc
sti
adc
scas
std
gs
pop
aad
call
cmp
les
xlat
inc
scas
mov
adc
call
pop
sbb
scas
mov
jnp
aad
scas
mov
repz
test
jecxz
cmpsb
add
stos
repnz
scas
xchg
add
sub
sti
push
xor
cli
mull
adc
mov
aad
loope
pop
adc
sub
outsl
into
jns
xor
repz
out
sbb
jl
inc
addr16
push
addr16
inc
inc
mov
cmp
fimuls
aad
sub
cmc
loope
jecxz
test
pop
lods
jmp
loop
test
cld
jl
pop
leave
std
fwait
cs
xchg
lods
cmp
repnz
cmp
xchg
lret
ret
cmpsl
mov
cmp
adc
mov
push
jne
and
xchg
cltd
jg
ja
and
push
xchg
mov
mov
lahf
addr16
sub
int
adc
insl
and
xchg
andl
nop
pop
adcl
test
sbb
clc
mov
test
aas
out
sub
mov
mov
out
aam
out
sarl
int
inc
insl
icebp
add
xchg
sbb
and
ret
xchg
jne
jae
imul
in
push
arpl
jae
lea
pop
mov
fildll
insl
arpl
push
cmp
push
xor
cli
push
pusha
mov
jno
cli
gs
arpl
stos
popa
cmpsb
mov
cli
addr16
or
mov
stc
mov
and
out
sbb
and
xor
xor
inc
jecxz
sbb
ja
or
ja
in
daa
mov
lcall
mov
mov
out
stos
jge
adc
cmpsl
mov
stos
jne
stos
jb
xchg
pop
sub
lcall
jmp
ja
call
shll
jge
push
jp
addl
mov
push
mov
shrl
rcrl
repz
push
pop
or
xlat
loope
rcr
out
or
xchg
fists
sbb
out
or
nop
inc
and
adc
mov
push
pop
or
and
sbb
add
jnp
jg
jae
or
cmp
je
pop
fsubrl
pop
jno
gs
fldcw
jnp
fnstenv
jmp
jae
adcl
lahf
mov
adc
neg
cmp
aaa
xchg
pop
or
outsl
loop
lahf
pop
sub
adc
jmp
scas
notb
adc
xchg
int
inc
lods
and
lret
push
lds
scas
repnz
adc
push
xor
pop
iret
pop
cltd
adc
and
loope
xchg
popf
and
adc
jae
mov
rcll
add
jg
insl
lods
popl
mov
push
mov
scas
shll
cld
jno
mov
pusha
loope
insl
out
stos
cmp
push
repnz
pop
mov
or
pop
inc
mov
push
call
test
lea
xchg
inc
and
cltd
sub
repz
mov
add
je
aad
daa
push
xor
mov
adc
addl
jns
xorl
mov
arpl
iret
leave
mov
sub
sub
and
jmp
in
fnstsw
mov
cmc
jae
push
test
mov
fnsave
fbld
in
rcll
adc
push
int
fildll
sarl
lea
in
fsts
sbb
jl
inc
movsl
sbbb
sbbb
les
fnstenv
add
push
cltd
in
pop
out
sub
sbbb
rcrl
rcrl
roll
rol
xchg
loopne
rcrl
pop
sbb
lds
jno
roll
sub
xor
sbb
hlt
or
mov
jne
out
and
movsl
push
and
scas
mov
push
sub
std
add
add
adcb
rcll
adcl
push
dec
pop
call
imul
pop
pop
mov
out
xchg
call
sbb
sub
jecxz
sbb
repnz
sbb
test
mov
es
mov
inc
xchg
pop
xor
dec
mov
push
outsl
or
add
popf
add
fwait
sub
je
xchg
je
cltd
pop
rol
jb
add
popa
je
pop
xchg
push
and
je
pop
mov
fcompl
dec
xor
mov
mov
xchg
xchg
sahf
mov
pop
flds
pop
sub
nop
imul
mov
jb
imul
stos
xorb
lea
jge
dec
mov
daa
xor
sbb
jmp
fst
jns
mov
adc
aas
lahf
je
lea
mov
test
jae
jmp
sub
inc
fcoml
lahf
in
aaa
cld
out
jno
xchg
inc
out
inc
jge
sub
xorl
mov
iret
add
loope
cld
adc
imul
inc
add
jnp
cmp
loope
int
lds
or
xor
repz
outsb
bound
repnz
xor
enter
icebp
and
sbb
call
mov
je
push
xlat
dec
cltd
mov
push
int
jno
fwait
pop
subl
pop
outsl
and
insl
adc
lock
mov
fstl
loope
add
in
sbb
cmp
sub
das
cmp
dec
loope
dec
dec
imul
inc
mov
gs
scas
cmp
mov
adc
pushf
addr16
inc
mov
arpl
adc
cltd
xor
mov
xor
lods
lret
xchg
xchg
jmp
adc
xorl
mov
daa
nop
and
pop
scas
mov
test
cli
out
pusha
xor
xlat
sbb
adc
pop
dec
add
inc
or
inc
repz
incl
inc
daa
inc
and
inc
sub
inc
adc
inc
sbb
inc
inc
inc
dec
call
popf
xor
aas
leave
cmp
lds
outsl
iret
imul
iret
push
iret
pop
iret
pop
iret
xchg
or
iret
mov
jnp
cmpsl
hlt
mov
inc
xchg
inc
lahf
xchg
sbb
ret
nop
iret
nop
lret
nop
mov
mov
mov
push
jecxz
out
jl
xor
mov
cmc
pushl
rcr
icebp
popf
addr16
xor
dec
loope
adc
push
cmp
movsl
mov
test
je
fisttpll
mov
lds
xchg
or
push
mov
adc
pop
cmpsb
adc
inc
add
mov
cmp
jne
stos
push
sbb
ja
xor
test
pop
fwait
loopne
ss
bound
fcomps
add
xchg
pop
dec
jge
xor
int3
pop
push
push
push
clc
mov
cmpsb
dec
jmp
pop
or
fucomip
cld
mov
mov
pop
test
jge
outsb
rorb
rcll
loop
shl
shl
push
xor
push
pusha
xor
mov
shl
and
shrd
pop
mov
rol
mov
and
mov
or
sub
lea
seto
pushf
lods
sbb
stc
neg
xor
call
movw
pushf
lea
jne
setne
movb
movsbl
movsbw
push
lea
lea
call
add
push
gs
outsb
jne
je
insl
inc
imul
add
outsb
inc
insb
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
add
jb
je
push
add
push
gs
imul
outsl
outsl
imul
add
pop
call
pushl
lea
ja
pusha
pusha
inc
inc
dec
movb
pushf
inc
inc
pushl
stc
inc
xchg
lea
not
mov
dec
mov
test
cmc
clc
call
cmc
cmp
call
lea
jae
mov
mov
call
movb
lea
jmp
push
cmp
pop
mov
lods
test
add
sub
out
xchg
inc
lods
cmpb
addb
mov
andl
sub
xlat
sarl
leave
jbe
inc
test
xor
sub
xor
inc
jmp
jb
dec
jb
jbe
mov
mov
xor
mov
mov
cld
and
dec
jl
jecxz
in
loope
aad
mov
mov
xchg
adc
aam
out
mov
addr16
inc
pop
mov
movsb
adc
test
loop
arpl
out
and
or
inc
or
stos
inc
push
mov
push
scas
sbb
adc
dec
jno
pop
push
push
sbb
mov
xor
incb
lret
jmp
rcrb
ja
js
fnstsw
dec
jecxz
movsl
mov
pop
jge
pop
rolb
loopne
les
decb
inc
repz
hlt
pop
mov
ss
pop
inc
mov
lds
cmc
movsb
shrl
push
fiadds
add
shlb
jno
dec
adc
in
xchg
movsb
idivl
clc
xor
aaa
fdivrs
mov
jl
pop
loope
mov
in
subb
out
test
sub
insl
add
in
movsl
or
fldenv
in
stos
cmp
xchg
mov
xchg
or
pop
stos
adc
pop
mov
push
mov
insl
les
fisubrl
sub
cwtl
push
fisubrs
push
adc
and
add
inc
jb
popa
je
push
outsb
add
inc
repz
ljmp
cmpsb
sbb
lea
jmp
xor
xchg
pop
mov
mov
es
cs
mov
addr16
enter
mov
pop
aad
popf
push
gs
dec
inc
out
negb
cltd
mov
or
push
jmp
in
cmp
cmp
adc
pop
icebp
mov
scas
cltd
sbb
push
jg
jne
pop
mov
add
or
leave
ljmp
sub
cmp
mov
pop
or
insl
xchg
dec
jl
loopne
hlt
push
add
jp
aam
inc
in
push
add
inc
gs
gs
dec
bound
arpl
inc
and
jmp
mov
mov
movl
movb
movb
pushf
pushf
lea
jmp
add
push
outsl
jne
fs
arpl
or
mov
icebp
arpl
mov
test
cmp
daa
cmp
pop
fisttps
je
jle
jg
cmp
fidivrl
lret
aaa
sarl
lea
out
push
jns
aad
push
cmp
mov
pop
bound
lcall
xchg
cltd
add
das
mov
in
push
inc
sbb
cwtl
push
push
data16
stos
mov
mov
into
mov
and
push
sbb
and
clc
cltd
ret
and
bound
add
loop
stc
or
add
andl
incl
shl
mov
add
mov
ror
mov
push
sub
pushf
pusha
pushf
repnz
call
add
inc
outsl
insl
jo
jb
push
je
imul
inc
gs
jb
jns
outsb
jne
add
inc
gs
je
imul
inc
js
add
popa
push
push
jmp
add
inc
gs
jb
arpl
jae
gs
jo
mov
lea
je
cmp
clc
pushf
add
push
lea
jmp
push
push
inc
push
xor
cs
insb
add
add
gs
je
inc
imul
imul
jb
insl
inc
add
add
icebp
out
cmp
inc
and
mov
lods
and
push
les
pushf
call
add
push
insb
jae
gs
popa
insb
jne
add
add
je
imul
addr16
js
jmp
add
inc
insb
outsl
bound
inc
imul
inc
add
fs
jae
bt
cmp
pushf
pusha
jmp
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
arpl
insb
insb
push
outsl
jae
add
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
outsb
fs
inc
imul
in
xchg
je
add
test
add
imul
jne
dec
fs
add
jne
push
add
lds
add
push
add
in
pop
add
push
add
leave
sbb
add
mov
add
add
add
ficompl
sbb
add
jmp
sbb
add
sahf
sbb
add
cmpsl
push
add
sbb
add
push
add
les
add
dec
pop
add
add
add
add
add
add
les
add
xor
add
sbb
add
les
add
sbb
add
add
add
add
add
jmp
sbb
add
popf
sbb
add
add
es
mov
mov
inc
idivl
loop
add
mov
inc
push
add
or
add
insl
cmp
rolb
fwait
outsl
enter
mov
and
xlat
and
pop
sub
hlt
mov
out
pusha
sub
cmc
pushf
pushl
popl
call
add
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
add
je
imul
dec
jb
inc
js
add
inc
js
push
gs
arpl
imul
call
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
insl
imul
outsl
arpl
jae
mov
movzbw
mov
movb
pushl
push
lea
ja
pushf
movb
pushf
pushf
lea
jb
call
test
call
push
not
call
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
push
insb
gs
add
inc
jae
popa
jo
add
fldl
not
clc
btr
shr
mov
adc
rcr
test
add
pushf
or
shl
shld
movl
and
or
shrd
bsf
mov
stc
cmp
bt
bt
cmp
pushl
lea
jbe
bsf
sub
shl
call
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
push
insb
jae
insb
insb
outsl
arpl
inc
rcr
xchg
sub
aad
pushf
mov
push
rcr
mov
mov
mov
sbb
not
btr
sub
mov
bt
pusha
call
add
inc
jb
popa
je
push
popa
insb
gs
gs
mov
incl
add
insb
arpl
insb
gs
add
add
je
imul
je
add
push
push
outsb
outsl
ja
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
dec
dec
dec
cs
insb
add
xchg
inc
push
mov
pop
xor
jecxz
mov
addl
fidivrs
ret
mov
sub
inc
mov
push
mov
daa
sbbl
mov
roll
cmp
cmp
lods
daa
lret
push
sub
inc
mov
pushf
push
mov
and
push
push
bound
ljmp
test
insb
shrb
cmpsl
jl
scas
fcmovb
or
loopne
push
imul
dec
aad
jecxz
jnp
sbb
cld
cld
ret
push
or
loopne
lods
sbb
stc
pop
sub
bnd
aam
push
lahf
mov
sub
aam
pop
jp
sbb
enter
cli
testb
xor
loop
in
add
fs
lods
jbe
int3
sbb
dec
cmpsl
add
add
dec
arpl
imul
outsb
inc
js
arpl
stc
push
pushf
cmp
mov
movb
test
movb
test
add
cmc
clc
cmc
test
pusha
jmp
jmp
mov
pushf
mov
push
movb
lea
jmp
add
push
gs
imul
gs
add
inc
js
insb
jne
gs
insb
imul
call
push
lea
je
pusha
adc
movb
pushf
pusha
push
lea
jmp
add
ja
jbe
dec
jne
push
popa
jne
add
lret
shl
sub
mov
cmp
call
call
movb
call
movb
lea
jne
movzbw
mov
push
lahf
movb
cwtl
movzbw
movzbw
mov
not
lea
jmp
dec
iret
sbb
mov
xor
cli
push
xchg
out
nop
jmp
cmpsb
mov
mov
testb
in
es
inc
add
jecxz
xor
cmp
mov
add
sub
mov
and
leave
bound
test
adcl
mov
pop
addr16
adc
pusha
sbb
mov
scas
push
and
and
push
punpcklbw
ror
fistpll
pop
add
inc
gs
popa
jo
jne
add
sub
dec
mov
pop
pop
inc
in
inc
xchg
out
lret
imul
sub
xchg
or
jbe
sti
adc
adc
fst
mov
jmp
and
gs
loope
xor
hlt
jns
mov
mov
jmp
movzwl
rcr
mov
cmp
pushf
clc
stc
add
stc
pusha
pushf
mov
test
bt
pushf
jmp
pusha
mov
test
add
movb
bt
clc
mov
pusha
push
mov
cmc
test
mov
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
pushf
push
mov
call
sub
jmp
sub
jle
stc
pusha
cmpb
pusha
lea
jne
bts
jmp
add
insl
imul
insl
push
gs
popa
jb
add
add
gs
outsb
imul
add
add
imul
xchg
push
lea
jb
pushf
pushf
movl
pusha
mov
movl
pusha
pushf
lea
jmp
nop
mov
ret
inc
popa
mov
xor
mov
cmp
cli
les
pop
fidivl
mulb
add
cli
cmpsl
int3
decl
imul
mov
fsts
lods
sarb
xchg
orl
push
addr16
data16
inc
negb
push
jb
cmp
fstpl
adc
scas
popf
inc
push
adc
scas
dec
mov
add
xchg
lahf
sub
sub
push
je
fwait
push
jb
xor
out
pop
sbb
add
inc
xor
bswap
enter
insl
sub
fidivrl
repz
dec
mov
sub
jns
stos
xchg
js
and
lret
xor
test
fdivl
mov
add
out
in
fnstenv
loopne
pop
aam
sbb
pop
data16
mov
dec
mov
and
adc
push
ja
push
jb
push
jae
int3
aas
or
mov
jne
push
pop
mov
repz
movsl
and
and
lcall
jg
test
cmp
inc
out
das
jmp
aas
mov
mov
shrb
lret
in
xchg
inc
sbb
dec
outsb
xchg
cltd
mov
daa
mov
jbe
jnp
inc
xchg
cs
incl
mov
dec
pop
cld
lahf
fdivs
stos
loope
add
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
lea
jne
call
add
push
gs
jne
jb
outsb
je
imul
jns
add
add
imul
dec
jo
outsb
add
xor
cs
insb
add
jge
decl
lahf
les
mov
mov
jmp
add
dec
outsl
popa
fs
gs
jne
arpl
pusha
call
mov
inc
jmp
add
dec
outsl
jbe
push
imul
add
jb
insl
jo
inc
add
add
je
imul
outsl
jb
add
insb
jae
jb
jo
inc
add
add
gs
je
inc
outsl
insl
jo
je
bound
imul
clc
mov
call
jmp
add
movb
movw
push
mov
lea
jmp
add
inc
gs
gs
popa
addr16
outsl
jae
cmp
sub
jmp
mov
mov
pushf
mov
lea
call
call
sbb
jnp,pt
gs
lods
add
mov
xchg
imul
sub
push
out
jg
and
and
push
or
or
push
jle
or
pop
fs
cmpb
sbb
cwtl
inc
jne
bound
cld
test
fimull
movq
js
hlt
and
test
cmp
fs
mov
insb
jge
pop
outsl
ja
pop
and
mov
lods
sbb
shrb
fsts
cld
cmpsb
mov
and
or
pusha
sahf
hlt
inc
pop
add
divb
jne
nop
cmp
jne
sbb
xor
push
movsb
push
incl
inc
sahf
mov
and
inc
add
bound
mov
mov
test
cmp
pop
dec
enter
cli
ret
call
xchg
arpl
mov
aas
mov
lahf
xor
jp
xlat
xor
add
aas
or
inc
stos
add
cli
pop
fistps
jb
push
sub
lea
cwtl
icebp
jg
sub
adc
andb
test
movsl
lock
mov
cli
mov
outsb
and
fnsave
and
jle
sbb
gs
aad
jp
mov
ret
push
in
iret
sbb
add
fs
popa
imul
data16
je
arpl
movb
dec
pushf
movb
jmp
add
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
shr
mov
jmp
pusha
movl
mov
pushf
movl
pushf
pushf
lea
jmp
pop
dec
adc
cmpsb
mov
or
dec
adc
push
scas
mov
insb
cltd
or
outsb
push
jge
jae
ljmp
aas
jne
cmp
lahf
lret
aaa
roll
or
addr16
xor
addl
xchg
in
dec
or
mov
xor
popf
leave
insl
cwtl
stos
cmp
sub
inc
dec
mov
dec
lods
addr16
inc
xor
or
or
xchg
mov
xor
cmp
lret
mov
ficoms
std
mov
cmp
mov
mov
dec
adc
jg
lret
cmp
jbe
clc
push
int3
mov
cmc
mov
sarb
xchg
imul
adc
test
push
int
mov
clc
ss
jno
cmpsb
xchg
dec
inc
shll
mov
out
pop
adc
ret
or
dec
cltd
mov
sarl
dec
mov
dec
jnp
js
xchg
pop
gs
mov
cmp
lock
popf
gs
mov
jns
popa
popl
arpl
mov
ret
xor
push
jmp
sbb
sbb
sub
xchg
negb
inc
xlat
xchg
into
add
dec
icebp
pushf
cmp
inc
ss
and
sbb
xor
adc
ljmp
jmp
sbb
push
push
in
dec
inc
mov
push
bound
loope
or
pop
mov
mov
pop
sbb
or
roll
pushf
sahf
mov
into
pop
xchg
dec
push
push
cmc
cmpsb
dec
loop
mov
loop
ds
dec
out
push
loopne
adc
mov
and
pop
pop
jnp
jno
mov
inc
stc
sbb
push
aas
cmp
call
jle
in
sub
lods
loope
cmp
pop
sbb
mov
inc
push
fidivs
push
mov
dec
movb
mov
mov
add
je
cltd
cmp
mov
dec
loop
jbe
push
mov
movsb
insb
push
inc
imul
xlat
jbe
leave
ror
sub
stc
jno
ja
cmp
and
inc
jl
xor
mov
pop
int
or
jb
xor
movsl
jmpw
xor
gs
movsb
mov
mov
jmp
sti
jmp
jp
ja
insb
sbb
sub
stos
sub
xor
inc
jmp
insl
hlt
xchg
std
in
arpl
mov
in
bound
dec
xor
sbb
push
aad
inc
movsb
xor
jns
loop
in
movsl
outsb
cmp
and
int
lret
aas
add
or
cli
sub
in
mov
xor
imul
ret
add
dec
push
xor
pop
push
adcb
outsl
and
scas
cmc
or
into
stc
xchg
int
dec
pop
push
xor
jl
test
fisttps
mov
mov
clc
push
mov
push
inc
mov
adc
and
pop
cmp
inc
adc
sub
nop
out
cmp
adc
insl
cmp
in
jns
test
mov
dec
lds
xor
jle
push
mov
sub
lret
jns
std
popa
xor
mov
cmc
xor
lret
ret
xor
lcall
adc
aad
cmp
cmp
dec
mov
sbb
push
fidivrl
sub
fwait
jae
jle
sbb
inc
pop
fisttpl
clc
mov
outsl
cmpsl
mov
aam
xchg
inc
ja
dec
cmpsb
pop
nop
bound
les
dec
jl
xchg
pop
push
and
jp
fwait
xchg
stos
fistps
jbe
inc
mov
mov
inc
iret
pop
mov
stc
rorl
adc
rorl
insb
imul
fstl
movsl
je
fnstcw
mov
mov
jmp
mov
cmpb
add
jae
pop
xchg
mov
jne
adc
jno
sarl
shl
out
lret
mov
in
xchg
dec
sub
mov
mov
sbb
shll
icebp
or
js
mov
mov
jo
mov
inc
dec
jns
push
pop
mov
cmp
xor
pop
rcrl
test
outsl
data16
cmp
cmp
mov
lods
popf
pop
xor
int3
test
dec
data16
cmp
fwait
lcall
cmpb
mov
mov
int
movsb
cmp
lret
ss
mov
xchg
rcrl
test
cmp
xor
dec
std
cltd
sbb
ret
mov
push
std
adcl
jp
xorl
outsb
sbb
enter
push
dec
dec
sub
fdivl
imul
or
fwait
loope
mov
xor
rcrl
pop
jnp
sub
fstp
lea
push
mov
push
aad
fnstsw
mov
aad
sub
pop
lret
mov
pop
inc
cmpsb
jo
shrb
and
nop
xor
xor
rcll
shll
repnz
cmc
les
shll
repnz
faddl
cmp
xchg
inc
lock
or
add
rcll
mov
lcall
sti
or
jae
aaa
mov
int3
inc
stos
loope
jbe
nop
cmp
stos
cs
jae
inc
mov
pop
xchg
mov
cmp
loopne
mov
add
cmc
hlt
xor
add
aam
xor
iret
or
pop
sbb
lds
repz
scas
cmp
fs
nop
xchg
fsubp
xor
popa
xor
cmp
inc
rolb
jmp
sbb
mov
cwtl
lcall
jae
mov
imul
jp
xchg
les
andl
sbb
sar
cmc
add
push
cmp
xor
stos
sbb
lret
mov
int3
xor
add
inc
sub
or
arpl
mov
jg
in
inc
fisubs
in
leave
push
insl
test
int
ss
and
mov
adc
aas
cmpsb
add
jle
jne
sarl
mov
and
mov
cmp
insb
adc
imul
dec
jmp
mov
mov
lea
cmc
leave
or
mov
in
out
sbb
aaa
testl
sub
jnp
cmp
jnp
cli
and
aaa
cmp
mov
inc
leave
bound
push
mulb
inc
stc
cmp
movb
xor
jge
xor
dec
pop
das
push
push
pop
cmp
push
imul
aaa
pop
mov
and
sbb
xchg
sub
sub
js
popf
dec
out
push
mov
sub
icebp
inc
jne
rorl
inc
out
repz
sub
push
jbe
xchg
sbb
cmp
imul
jp
and
mov
lret
push
clc
mov
aad
fnstcw
fsubr
inc
icebp
fsubr
inc
in
mov
adcb
aam
loop
aad
push
and
mov
jae
lahf
in
jns
hlt
sbb
or
push
jbe
test
cmp
jae
mov
pop
inc
addr16
xchg
add
xor
movq
cmp
mov
cmpsb
add
dec
pop
cmpsl
sub
cmp
sbb
mov
push
mov
addr16
mov
xor
fcoms
jg
push
out
cmc
pop
adc
mov
push
clc
ss
icebp
cmp
inc
sub
mov
popf
xchg
mov
mov
cmc
aam
loopne
ss
jp
push
cmpsl
fidivl
sub
imul
pop
lods
andb
add
cmp
imul
xor
mov
mov
sbb
je
popf
xor
rorb
mov
aad
sbb
test
cmp
cmp
negb
out
cmp
mov
jbe
mov
and
xchg
pop
jne
adc
cmp
sub
lret
xchg
shrl
mov
push
and
mov
aaa
cmp
and
ljmp
cmp
cmp
xor
sahf
js
popf
jmp
nop
or
mov
inc
pop
cmp
adc
add
cmpsb
outsb
mov
xorb
out
pusha
push
in
ja
sub
cmp
or
sbb
or
jbe
cmp
cmp
mov
sbb
gs
xor
sahf
jbe
ds
mov
inc
xchg
sbb
mov
insl
jl
inc
stc
ja
int
pusha
cmp
data16
mov
in
bound
xchg
sets
pop
cmp
xor
dec
xchg
xchg
insb
push
int
mov
push
lods
subl
sbb
mov
mov
inc
cmp
lahf
jnp
mov
or
or
pop
push
movsl
xchg
mov
movsb
in
push
nop
mov
cs
mov
dec
jl
mov
dec
or
jno
imul
inc
add
or
and
sti
inc
fistl
inc
add
push
mov
cmp
push
push
cmp
mov
in
inc
mov
data16
sbb
jnp
sbb
mov
mov
sbb
aas
in
dec
xchg
xor
dec
jno
pop
repnz
int
xchg
xchg
icebp
jno
fwait
lret
mov
mov
lock
xchg
jecxz
clc
xor
jecxz
addr16
xor
jmp
or
shll
call
insb
aas
add
mov
dec
jmp
dec
cmp
in
scas
and
xor
inc
sbb
call
push
roll
test
mov
jmp
adc
push
dec
or
xchg
popf
inc
mov
push
mov
inc
cmp
sbb
iret
inc
add
and
jae
loope
shrb
mov
lret
jbe
mov
push
cli
sub
pop
sahf
pushf
inc
inc
dec
dec
adc
mov
xorb
inc
jns
or
pushf
xor
push
dec
scas
sbb
push
mov
int3
testl
pop
mov
mov
sbb
aas
inc
ds
test
in
cmpsb
jns
ds
pop
or
lock
xor
test
ja
in
shrl
xor
or
fstp
and
in
push
dec
out
mov
std
inc
inc
nop
push
in
mov
icebp
pop
popf
jg
scas
pop
pushf
cmp
inc
push
call
pop
push
or
mov
arpl
filds
scas
sub
jne
aaa
mov
xor
inc
inc
aas
push
inc
rorb
cwtl
jb
adc
push
sub
ds
hlt
mov
pop
push
das
cwtl
mov
sbb
movsb
in
rorl
xlat
out
cmpsl
mov
insl
inc
fwait
sbb
int
out
and
subb
push
movsl
jnp
cwtl
sub
jp
lret
add
and
add
cli
mov
push
add
mov
dec
xchg
pop
test
xor
add
adc
into
movsb
mov
cmpsb
dec
mov
jp
roll
xchg
mov
mov
arpl
rorb
aam
int
jns
jnp
mov
sub
sbb
lods
jnp
out
add
rclb
inc
insl
mov
mov
scas
popf
data16
or
sbb
mov
add
in
adc
fisubrl
imul
mov
xor
ds
xor
sbb
hlt
cmp
xor
jae
xchg
xor
inc
or
push
imul
xchg
jbe
inc
xor
aam
loopne
lods
cli
stos
pop
repnz
xor
shrl
xor
sbb
movsl
pop
cmp
mov
xor
adc
mov
sub
cmpsb
pop
and
xchg
dec
pop
fnstenv
lret
jne
idivl
jb
mov
ret
sub
sbb
mov
jl
jmp
mov
dec
xchg
dec
mov
daa
xor
dec
repnz
adc
lahf
sub
mov
repz
or
push
les
cmp
sub
leave
inc
inc
aaa
out
int3
cmp
or
test
out
cmp
mov
test
orl
pop
sbb
mov
inc
jns
inc
fistpll
shl
test
shrl
or
test
shrl
cmp
ja
inc
push
and
pop
pop
jbe
sti
or
sti
outsb
and
inc
in
stos
sbb
cmp
sti
mov
pop
add
pop
jae
and
daa
iret
nop
xchg
adc
jnp
int3
pop
add
adc
push
clc
cmc
mov
dec
sbb
mov
inc
xchg
popf
cmp
shl
loope
jne
clc
jae
pop
popa
rcrb
aas
pop
pusha
mov
sbb
stc
pop
sbb
aam
push
fisttpl
cmpsl
cmp
pop
orl
mov
and
rcl
xchg
sbb
push
or
aas
or
inc
fs
negb
dec
in
outsl
mov
jb
ss
mov
mov
out
js
insb
xor
sbb
je
lea
dec
les
stc
cmc
stos
repnz
push
dec
dec
inc
mov
fldcw
imul
cmp
lcall
add
pop
std
sbb
jbe
dec
enter
inc
mov
push
ss
insb
push
lret
mov
ss
test
shrb
mov
movsb
mov
int
inc
sub
mov
insl
mov
int
dec
les
out
repz
fisttps
push
dec
jp
arpl
ja
sbb
mov
cmp
and
sub
gs
lods
lock
cmp
cmp
push
outsl
aad
mov
nop
inc
in
lds
adc
sbbb
mov
pushl
pop
and
mov
fnstenv
jmp
mov
xor
pop
sub
in
outsl
sbb
xor
test
xchg
jae
cmp
cmp
popa
orl
sbb
cwtl
xchg
jl
mov
or
cmp
imul
push
push
and
adc
rclb
xor
cwtl
xor
fucomp
inc
es
daa
int
sbb
addr16
fwait
and
sbb
lea
mov
cltd
imul
imul
or
jl
mov
sbb
cmp
or
jbe
push
mov
sbb
mov
mov
repz
mov
jnp
xor
mov
testb
cmpl
or
rcrl
fbstp
xchg
lret
pop
xchg
insl
sbb
cmp
test
test
bound
dec
fwait
mov
jns
clc
in
jp
pop
sbb
pusha
pop
dec
lds
imul
inc
push
mov
adc
mov
aas
sbb
in
jmp
insb
dec
lods
mulb
xchg
out
mov
inc
jbe
mov
pop
arpl
xchg
mov
mov
out
in
push
and
cld
mov
mov
cmp
pushf
icebp
push
mov
ficomps
jmp
fbstp
jnp
sub
int
xchg
addr16
sbb
int
push
dec
push
push
xor
push
stos
push
sti
inc
fisubrs
xor
cmp
cmp
aam
es
xchg
pop
xchg
data16
jmp
pop
push
fistpll
gs
pop
xorl
scas
xchg
fisttps
sbb
aam
subl
mov
cmc
xor
pop
pusha
bound
test
jmp
jp
and
cltd
jmp
out
mov
les
xor
mov
xlat
clc
sbb
xchg
mov
jns
rorl
push
sub
into
pop
shll
mov
push
dec
pop
cmp
xchg
xor
aad
lods
imul
icebp
adcb
aaa
sbb
xorl
jae
pushf
xor
mov
xchg
xchg
push
and
mov
dec
mov
jae
loop
insb
dec
dec
addr16
sub
add
jae
and
rolb
fsubrl
sub
repz
pop
stos
call
hlt
ja
mov
int
xor
cmpsl
pop
mov
xchg
movsb
push
dec
repz
push
add
mov
imul
jbe
imul
cwtl
jo
cmpsl
push
inc
das
pop
sti
mov
js
jns
icebp
push
call
adc
or
and
push
arpl
pop
gs
cld
ljmp
popf
add
jge
mov
sarb
mov
xor
outsb
inc
inc
dec
sbb
daa
in
lea
rol
sbb
test
fisubs
jne
daa
lcall
push
shll
mov
out
data16
inc
iret
cmp
jl
mov
xchg
movsl
sarl
cmc
nop
pop
push
dec
sti
sub
push
inc
inc
push
push
movsb
in
sti
xor
dec
mov
or
dec
aad
aad
movsb
sub
inc
dec
mov
addl
dec
mov
xor
dec
or
insb
dec
dec
add
dec
mov
insb
dec
dec
ret
loope
dec
mov
dec
xor
pop
dec
xor
inc
dec
xor
adc
dec
outsl
or
lds
movsb
fdivr
stc
std
mov
mov
popf
add
vxorps
cmc
jp
stc
lea
stc
mov
and
in
mov
mov
cmp
mov
mov
xchg
xchg
pop
jae
push
jecxz
loop
jmp
and
inc
dec
pop
mov
mov
mov
loope
imul
test
adc
sub
dec
xorb
cmp
adc
push
sarl
sbbl
mov
daa
inc
xor
or
ss
inc
nop
loop
push
int3
xchg
enter
dec
test
dec
cwtl
mov
sbb
and
aad
mov
fs
pop
ljmp
aad
loopne
cli
xchg
ss
cmp
sub
sub
adc
pushl
aaa
adcl
arpl
push
dec
xor
or
data16
sbb
sti
inc
and
out
fimuls
ss
rorb
pop
sahf
aaa
mov
mov
sbb
lods
sbb
aad
and
xor
insb
xchg
sbb
test
xchg
push
mov
mov
into
fnstcw
sub
xchg
dec
scas
rcrb
sbb
es
mov
test
sbb
popa
adc
sub
pop
dec
or
cmp
mov
adcl
adcl
ss
push
pop
pop
add
jmp
sbb
in
shrl
in
jl
mov
cmp
int3
jp
sbb
sub
dec
hlt
sbb
jbe
mov
mov
sub
out
xchg
jp
in
mov
in
add
xchg
mov
jnp
xchg
testb
pop
mov
mov
jbe
rorb
out
into
sarl
test
mov
mov
test
sbb
mov
stos
mov
gs
mov
dec
and
and
sub
mov
sub
and
fldenv
jno
jge
adc
push
or
sbb
adc
adc
and
dec
jo
sbb
dec
mov
gs
sub
fisttpll
pop
pop
dec
sub
cmp
movsb
dec
lock
out
loopne
cmpsb
pusha
jmp
lds
int
loop
jg
imul
mov
jp
push
inc
leave
sti
xchg
fwait
sbb
mov
aam
add
sbb
push
mov
test
popa
xor
das
xor
movsl
jae
mov
je
sub
cmp
sbb
sbb
shll
and
clc
pop
push
test
inc
insb
pop
mov
add
enter
add
mov
aaa
cmp
jmp
cmp
rorb
xlat
mov
cwtl
and
sub
and
add
in
mov
jae
repz
loope
call
inc
inc
push
mov
pop
out
push
insb
push
fcomi
fnstcw
mov
xor
test
jmp
cmp
ja
xchg
push
int
add
xor
xor
sub
jno
lea
mov
leave
movsb
mov
mov
adc
sbbl
fwait
push
es
pop
push
cmp
loopne
adcb
stc
push
adc
lcall
jp
ds
cmp
sahf
jb
dec
mov
cmp
sub
jp
or
xor
push
inc
ret
mov
xor
adc
movsb
jbe
loope
stc
cmpsw
mov
sub
mov
jp
dec
xchg
pop
xchg
mov
in
bound
sbb
pop
aad
pushf
mov
pop
jne
cmp
leave
mov
jns
push
dec
add
inc
xchg
pop
fldcw
cmpsl
cmp
mov
push
jg
imul
or
xlat
xchg
push
push
cmp
sub
je
fstps
push
icebp
and
sbb
xor
sub
pop
shll
mov
mov
in
jnp
mov
addl
std
rcrb
sbb
fstps
sbb
fstpl
sbb
adc
mov
imull
es
pop
push
jno
daa
xor
jge
sub
mov
add
test
je
jecxz
mov
and
push
data16
sub
lds
cltd
push
inc
cld
in
lret
xor
jno
lgs
mov
cmp
stc
icebp
adcb
int3
jmp
int
pop
lods
imul
leave
sub
gs
aad
or
outsl
inc
das
mov
sbb
jg
push
jp
mov
or
jnp
cld
pop
ss
das
fs
mov
movsb
dec
sub
ljmp
jne
in
jg
fnstcw
fildl
jl
push
inc
jbe
icebp
jp
inc
insl
pop
jle
cmc
iret
cmp
mov
cld
add
fidivrl
mov
stc
sbb
fidivrl
shr
or
pop
cs
jg
out
fidivrs
mov
mov
js
fiaddl
loope
dec
int3
sbb
in
inc
int
dec
and
insl
xor
rorb
loope
sub
loop
sub
sbb
push
and
fcmovbe
jle
xor
and
mov
mov
int3
xor
fucom
insb
shll
out
stos
jp
push
cmp
cmpsb
je
jmp
cs
sbb
stos
scas
and
jns
adc
push
xor
mov
outsl
mov
and
cmp
sub
sub
mov
sti
xorb
test
addr16
or
pushf
xchg
push
mov
out
daa
mov
pop
adc
fs
mov
int
xor
and
loopne
popf
mov
adcl
jl
add
and
or
loop
cmp
shl
aad
mov
pusha
cmpb
cmpsl
insb
jbe
xor
mov
out
insb
in
std
mov
int
and
cmp
cli
xor
leave
inc
dec
ss
jnp
sarl
dec
insb
jg
or
sbb
push
lret
mov
insl
add
mov
adc
sub
rorb
mov
cmp
sub
jg
sbbl
fwait
les
mov
inc
sub
add
jnp
mov
mov
jp
xchg
jno
sbb
lock
sub
sub
cmp
sti
std
add
aad
cmpb
inc
mov
mov
or
leave
insl
add
and
dec
mov
hlt
or
out
mov
mov
mov
mov
or
fdivrl
jno
sbb
cwtl
adc
clc
xorb
and
in
mov
push
sti
sbb
jg
out
cmp
and
cld
popa
jmp
sbb
xor
iret
sarb
xor
shll
subb
adcb
sarl
dec
mov
jg
ljmp
sub
std
inc
imul
aas
mov
mov
std
dec
mov
dec
sbb
fistpl
mov
pop
xchg
or
sub
lcall
fimull
repz
repz
lods
jne
cmp
xchg
lods
out
sbb
mov
mov
add
test
test
imul
xchg
lods
lea
in
int3
mov
nop
les
jae
pop
iret
iret
js
call
or
sub
push
rcrb
mov
mov
adc
gs
jecxz
push
xlat
push
jmp
loope
sbb
cmp
push
mov
fidivrl
arpl
jns
xor
aaa
sti
inc
int
or
cli
inc
or
dec
stos
add
xor
lret
dec
mov
mov
lcall
pop
inc
mov
mov
imul
inc
das
mov
sub
dec
in
test
adcl
sbb
cwtl
into
and
cmp
xor
and
push
sbb
fdivrs
mov
push
outsl
sahf
push
add
fadd
sbb
push
stc
dec
iret
insb
ja
cwtl
pop
dec
test
cmp
push
nop
inc
dec
inc
sub
add
mov
add
dec
jmp
int
add
ss
inc
or
dec
orb
lea
sub
jns
jmp
lcall
mov
data16
mov
jmp
clc
jo
mov
stos
fsin
jo
push
data16
jbe
mov
push
cmp
fisubs
mov
enter
or
out
jnp
push
push
mov
cmp
xchg
sub
lods
test
xor
dec
add
pop
mov
xchg
lods
fstpl
insb
cmpsl
dec
roll
jo
div
jo
scas
hlt
mov
dec
out
outsl
imul
or
pusha
stc
push
into
or
repz
popf
push
repz
mov
mov
jp
imul
xor
mov
call
daa
inc
jnp
adc
pop
mov
or
mov
sub
stc
sbb
cmp
sub
in
sbb
inc
lods
in
scas
js
stc
pop
mov
pusha
stc
data16
mov
mov
and
cmp
dec
cmp
cld
lret
clc
outsb
mov
sub
test
lock
shl
dec
jle
mov
jnp
test
int
lahf
cmp
jecxz
cmpsl
push
outsl
notl
fidivl
test
or
jge
or
movsl
push
mulb
adc
mov
cmpsl
testb
aad
push
pop
loop
cmpsl
insb
pop
imulb
jmp
or
or
jmp
test
mov
mulb
sahf
or
xor
sub
imul
arpl
mov
inc
or
or
push
out
int
or
or
or
popa
xor
xchg
test
sub
or
or
mov
adc
imul
sbb
ficoml
xor
test
mov
mov
cmp
mov
mov
sub
cmp
insb
dec
mov
movsl
push
adc
push
loope
push
adc
xor
test
jnp
rol
sub
pusha
cmp
jge
inc
mov
daa
movsl
push
les
sbb
jmp
fidivrl
into
or
push
mov
popf
push
push
sub
mov
mov
jnp
mov
pop
push
jo
pushf
mov
and
push
mov
dec
cmp
cmpsl
sbb
mov
mov
sbb
cmp
add
push
aad
mov
mov
insb
scas
add
pop
shlb
sbb
outsb
mov
stc
add
push
sarl
pop
stc
es
lahf
stos
roll
pop
js
hlt
add
and
mov
add
fwait
and
dec
push
repz
cmpsl
add
jnp
pusha
jmp
gs
jns
loop
jp
dec
repz
orb
mov
in
or
or
stos
sub
or
add
in
roll
or
inc
jg
dec
or
or
sub
imul
inc
pop
lahf
lahf
int
pop
test
icebp
mov
inc
mov
pop
dec
stc
mov
inc
pop
pop
dec
or
mov
xor
sti
test
fiaddl
iret
lea
or
int
push
xchg
std
mov
out
bound
imul
push
cmp
dec
out
int
ja
test
bound
dec
pop
push
xchg
insb
push
dec
mov
jnp
out
push
push
and
pop
jo
shl
popa
sub
frstor
sbb
cmp
push
fcoml
lods
adc
mov
or
sub
mov
mov
add
aad
xchg
cmc
dec
js
jno
mov
out
jno
pop
mov
inc
or
enter
jbe
pusha
and
mov
adc
scas
cmc
xor
jb
into
push
dec
cltd
push
out
mov
cmp
xchg
pushf
addb
xchg
std
in
imul
mov
sub
push
cmp
dec
add
nop
adc
data16
inc
mov
iret
xchg
sub
stc
push
push
and
lret
mov
lods
fsubl
pop
mov
dec
out
mov
ja
mov
subl
pop
roll
outsl
repz
dec
mov
repnz
in
cmpsl
iret
and
cmpsb
xor
in
outsb
add
mov
sub
fstpl
lret
aaa
rcrl
adc
adc
call
ja
mov
mov
cmp
lods
gs
lods
imul
aad
inc
cmp
lods
xor
or
loope
xchg
cltd
add
inc
mov
daa
jl
popf
insl
shll
add
mov
sbb
nop
jbe
mov
dec
cltd
xor
ljmp
pushl
mov
and
jno
pop
adc
fcmovu
int3
mov
shlb
mov
cmp
imul
or
out
jl
mov
inc
or
gs
sti
dec
push
repz
pop
addr16
outsb
cmp
ss
mov
jp
popa
push
or
scas
push
sub
int
pop
xor
dec
jnp
sbb
fucomip
and
mov
sahf
andl
dec
lock
dec
adc
das
icebp
mov
int
sub
fdivr
arpl
cwtl
aaa
ljmp
jge
xchg
xor
andb
xchg
std
inc
jp
xchg
inc
mov
mov
mov
adc
jb
mov
shrl
lret
pop
cmp
loope
dec
mov
repnz
das
aad
rorl
cs
or
pushf
ja
daa
cmp
out
daa
lods
cmp
pop
repz
mov
xor
pop
push
sub
in
add
ss
ficoms
jae
pop
pop
sub
inc
aam
pop
addr16
imul
pop
push
aaa
xor
sbb
xchg
test
ret
addl
cltd
adcl
incb
fidivrs
pop
jno
in
ret
inc
arpl
ljmp
es
sub
push
fisubrs
and
rclb
adc
adc
cmp
aaa
inc
cmp
jno
push
sbb
jg
add
jecxz
push
pop
adc
inc
add
std
scas
mov
into
pop
jg
adc
jl
sub
sarb
aad
in
mov
mov
int
and
out
cld
sbb
xchg
ljmp
mov
and
outsb
out
dec
insb
xchg
ror
dec
pop
shr
cltd
dec
aas
push
add
roll
iret
ficompl
arpl
rcll
insb
mov
sub
cld
or
lock
add
mov
push
adc
pop
sub
or
and
jge
push
mov
mov
imul
bound
dec
test
sub
iret
push
into
cmp
das
push
xchg
xor
mov
push
jmp
cmpsl
add
adc
je
fstl
mov
fidivl
ljmp
inc
orl
sub
call
ficoms
push
pop
mov
rcrb
inc
cli
adc
jnp
das
in
push
fmuls
ljmp
adc
xchg
dec
out
push
dec
mov
inc
push
xor
inc
insb
xor
jge
gs
cmc
mov
addr16
sbb
xor
or
adc
dec
negl
adc
out
movzwl
adc
int
sbb
and
cmp
sub
and
cmp
bound
mov
sbb
ljmp
sbb
xcrypt-ofb
cmpsl
outsl
add
movsb
mov
sub
cmp
jecxz
jne
lock
out
je
es
xchg
adc
stc
inc
push
sub
test
in
or
in
lods
stc
mov
out
xor
lods
ss
out
in
mov
in
dec
mov
lcall
in
xlat
jo
fldcw
movsb
shrb
in
lea
adc
cmp
mov
dec
stos
sub
xor
stos
clc
pop
enter
dec
pop
and
lahf
push
sbb
jl
out
mov
js
or
ficomps
mov
jmp
xchg
movsl
push
jp
imul
xchg
mov
mov
pop
inc
and
inc
outsb
xchg
imul
addr16
jp
push
subb
hlt
out
imul
icebp
lods
dec
cmc
sahf
adc
int
jmp
mov
int3
or
cmp
xchg
sbb
mov
push
cmc
add
cmp
pop
dec
push
mov
dec
add
jbe
lods
imul
fs
dec
jbe
pop
popa
jecxz
dec
pop
adc
sar
cmp
ljmp
lock
dec
bnd
xabort
or
inc
pop
pop
loope
inc
sbb
popf
jge
jge
cld
icebp
xchg
jns
roll
daa
mov
dec
pop
fwait
insl
mov
imul
mov
push
divb
pop
jp
dec
jns
and
stc
mov
movsl
jmp
mov
lret
cwtl
jmp
mov
jae
mov
into
cmp
lock
insb
mov
outsb
mov
mov
lds
mov
lock
inc
out
mov
add
ljmp
inc
into
push
daa
and
push
cltd
xchg
xchg
inc
imul
cld
xchg
js
xor
jnp
sbb
in
cmp
dec
insl
aad
push
in
dec
stc
dec
jbe
xor
mov
jne
add
cli
xor
sahf
dec
lods
sub
gs
fdiv
cmovno
sbb
mov
cmp
lock
cs
mov
call
mov
cmp
push
idiv
push
jne
mov
dec
push
je
sarb
jecxz
inc
or
pop
out
sub
jecxz
lods
aad
inc
lret
stos
sbb
jecxz
ja
mov
mov
js
push
xchg
adc
das
leave
adc
in
loopne
sarb
in
sub
and
push
xrelease
fstpt
dec
xchg
dec
push
ja
sub
xchg
inc
repz
inc
jo
mov
mov
js
pop
cmp
mov
mov
pusha
dec
in
inc
inc
jae
cli
arpl
sub
imul
cltd
dec
movsb
shrb
loopne
es
cmp
pop
std
cs
outsl
adc
cmpsl
push
push
loope
ret
icebp
push
xor
adc
xor
and
and
xor
int3
sub
shr
or
sbb
inc
jnp
js
push
outsb
packuswb
push
outsl
jg
and
scas
lods
call
sbb
xor
scas
or
lret
shlb
dec
into
adc
sbbl
pop
insl
jg
gs
jle
jmp
mov
adc
outsb
mov
mov
aaa
adc
or
or
cmp
sbb
imul
cmp
or
push
mov
test
xchg
jns
cs
push
sub
xchg
outsb
ds
mov
inc
mov
xor
mov
mov
sbb
or
pop
sbb
mov
scas
lahf
lods
inc
inc
xor
pop
ret
xor
adc
cmp
dec
adc
or
testb
push
je
ljmp
dec
inc
test
cmc
in
pusha
xor
mov
and
push
les
aas
sub
pop
loopne
call
or
scas
out
add
sbb
xchg
insl
dec
xchg
adc
rcll
sbb
arpl
xchg
fsubs
insb
into
call
mov
pop
aaa
cmp
sbb
jo
in
call
test
fstl
aaa
fsubr
insl
jno
in
ficomps
andl
aas
push
dec
sti
mov
or
fisubrl
xor
in
jbe
mov
and
dec
ss
sbb
mov
inc
mov
mov
sahf
jne
push
sbb
out
out
pop
or
mov
aaa
rcrb
adc
out
negb
dec
push
jb
mov
fistps
lock
inc
inc
xchg
inc
xor
test
adcb
sub
push
dec
jne
loopne
xchg
mov
cmc
int3
in
mov
inc
jmp
jo
sub
dec
sbb
cwtl
arpl
mov
mov
mov
insl
inc
popf
jp
std
sbb
inc
test
movsb
pop
jp
jl
push
lahf
aad
mov
cmp
stos
cs
pushf
int
cltd
mov
sub
mov
ss
lret
inc
push
push
mov
cmpsl
insb
inc
xchg
insb
hlt
roll
sbb
iret
xchg
mov
aam
lods
daa
insb
aad
push
rorl
shll
cwtl
rolb
shrb
cmp
movsb
jg
repz
pop
cwtl
dec
push
lret
testl
xor
inc
or
lods
dec
pusha
mov
inc
das
mov
rcrl
xchg
into
jno
iret
sub
adc
call
mov
scas
cmp
fisubrl
sub
arpl
sub
or
dec
fbld
sbb
mov
fsubl
pop
idivb
sbb
movaps
jl
popa
sbb
mov
insl
mov
mov
cmp
cmpsb
xchg
inc
mov
and
popf
out
imul
cmp
call
inc
xor
inc
lea
call
mov
xor
sahf
jge
cmp
aas
cmp
sub
add
cmp
mov
aad
jae
aaa
xor
or
sbb
add
outsl
jne
hlt
or
sub
or
ret
out
cmp
mov
lret
addb
pop
push
and
jnp
mov
fstpt
aas
mov
jge
sbb
js
int
mov
gs
outsl
inc
mov
add
mov
ja
mov
push
and
xchg
or
sbb
dec
jo
sti
mov
data16
mov
xor
mov
dec
rorb
mov
xor
js
dec
shrb
mov
xor
dec
mov
mov
and
push
mov
mov
pop
bound
mov
adc
fimull
inc
xor
xchg
dec
inc
or
mov
adc
push
stos
sbb
xor
xchg
dec
mov
cli
out
mov
cmp
mov
sbbb
jb
xchg
rorb
push
dec
call
push
adc
push
lcall
mov
and
movsl
repz
mov
insb
pop
insb
inc
xchg
scas
mov
int
out
mov
test
push
mov
sbb
mov
les
fcoml
push
mov
and
test
or
cmp
pop
in
cmpb
inc
mov
stos
sub
add
lds
ret
push
fxch
inc
dec
mov
push
das
cmp
pushf
dec
inc
ds
popf
cld
xor
stc
imul
rolb
repz
loopne
and
data16
lcall
data16
mov
dec
sar
dec
dec
cmp
lock
dec
mov
in
inc
dec
jno
sbb
out
xor
pop
and
aad
push
out
lds
sub
lcall
jno
sbb
lret
repz
cmc
add
cmpsb
sbb
dec
shrl
test
dec
sub
ror
pop
les
mov
inc
pop
ret
dec
or
add
or
and
jle
inc
fldcw
mov
ret
inc
pop
cld
mov
in
inc
aaa
inc
leave
adcb
xchg
and
cmp
pop
in
xorl
and
loop
xor
clc
dec
cmp
popf
mov
mov
mov
scas
pop
lds
mov
sub
movsb
or
sbb
and
dec
jo
push
dec
pminsw
mov
mov
inc
sub
xor
fld
outsl
adc
cmp
aam
inc
cmc
lahf
inc
sub
mov
dec
data16
mov
pusha
movsb
sbb
cmp
shr
cmp
xchg
cmpsl
pusha
and
sub
xchg
arpl
cs
mov
js
jns
dec
stos
cmpsl
xchg
dec
imul
xchg
dec
adcl
arpl
sub
xchg
shlb
mov
lcall
je
xor
sbb
cmp
fisttpll
movsb
jbe
and
adc
xor
sbb
jnp
xorb
jae
adcl
jae
ljmp
jb
and
and
xchg
dec
mov
sbb
pop
mov
test
outsl
push
inc
stos
inc
fcomp
add
push
push
sarb
pop
xchg
jmp
lahf
jnp
push
jmp
xchg
cltd
or
pop
bnd
sub
push
sbb
xchg
cmp
push
mov
push
fsqrt
js
sbb
pop
mulb
mov
xchg
sub
xchg
xor
mov
mov
inc
int
shlb
es
or
and
inc
testb
or
push
pusha
push
lods
inc
push
mov
sbb
loop
lock
sub
das
cltd
cmpsb
outsl
push
insl
incl
stos
lcall
into
add
dec
mov
rclb
nop
test
or
insl
jge
adc
rcll
inc
sti
and
jp
dec
rcr
cmp
adc
es
in
pop
cmp
cmc
mov
lds
xor
call
inc
mov
cmp
ja
push
add
mov
insl
jno
stos
mov
sbb
xor
pop
repnz
cmp
test
push
xor
or
xchg
push
cli
inc
lea
inc
mov
xor
pop
push
sbb
or
stos
fstp
cld
sbb
aad
por
dec
add
in
leavew
cltd
lock
je
mov
and
insl
adc
sub
adc
cmp
popf
jb
arpl
push
sbb
lcall
and
lods
jnp
jb
in
dec
loopne
and
cmpsl
mov
out
test
int
or
ljmp
andl
xchg
shrb
lods
mov
mov
shrb
push
popf
cmp
adc
lahf
mov
fimuls
test
jp
mov
lods
prefetch
cmp
shl
inc
jmp
loop
mov
or
in
and
or
lds
or
cmp
push
movsl
dec
or
movsb
data16
sbb
in
mov
ljmp
xor
lret
push
test
pushf
sub
mov
std
nop
notl
xchg
ss
std
add
sub
dec
test
in
dec
lock
push
jl
add
fbstp
or
jnp
push
enter
loopne
inc
jecxz
add
data16
lock
mov
stc
lret
dec
lea
insb
nop
cs
sbb
xor
pushf
add
std
dec
jecxz
cmp
pop
mov
sbb
mov
sbb
pop
cmp
loopne
jp
inc
mov
scas
jp
or
cmp
or
stos
mov
jae
xchg
mov
cmp
std
in
cmc
jmp
and
xchg
stc
sahf
fs
xchg
sbb
sbb
out
jne
fstpt
mov
push
inc
cmp
pop
mov
jmp
aad
out
adc
inc
mov
and
dec
mov
cld
test
dec
test
mov
nop
pop
push
adc
mov
jb
xchg
xchg
push
adc
test
sarl
cmpsb
push
cmp
fmul
push
stos
outsb
test
cmpsb
cs
clc
jns
cmp
test
test
xchg
scas
sbbb
imul
sub
shrw
out
sub
push
test
dec
pop
out
daa
push
jbe
stos
pop
sbb
insb
mov
mov
xchg
or
aas
cltd
jne
jmp
xor
mov
push
cmp
cmpsl
cmpsl
insb
icebp
cmpsl
jae
push
into
into
subl
cmp
pcmpeqd
inc
cmpsb
xor
filds
push
movsl
mov
sub
lea
nop
rolw
jne
insb
xor
mov
jp
sti
cwtl
inc
mov
test
lret
jge
dec
lea
mulb
rcrl
lret
ret
mov
outsl
dec
jmp
scas
ret
xchg
daa
inc
es
jns
jge
mov
repnz
xchg
enter
rcr
jge
sahf
push
lahf
lcall
cmp
bound
roll
jge
inc
sbb
mov
insl
hlt
sub
jo
ja
pop
mul
jg
push
sbb
pop
popa
mov
xchg
dec
mov
outsl
mov
stc
xchg
and
mov
insl
bound
pop
mov
mov
sbb
int
mov
push
push
std
mov
xor
jb
sub
mov
mov
and
mov
or
bswap
push
xor
into
jnp
addr16
jnp
into
mov
sub
jne
sti
test
cmp
in
cmc
and
js
xchg
mov
inc
sbb
pusha
push
push
adc
rclb
push
dec
cltd
mov
mov
mov
stc
movsl
ja
daa
mov
dec
or
movsl
addl
sbb
addr16
adc
ljmp
sbb
sbb
sbb
mov
inc
js
int
sbbb
cld
inc
mov
cmp
xor
mov
mov
insl
push
cmp
stos
loopne
xchg
subb
test
gs
lcall
mov
int3
into
imul
loopne
aad
shlb
jae
or
push
cmp
scas
imul
inc
push
or
jge
ret
push
xchg
pop
inc
jecxz
out
mov
sbb
mov
into
cs
cmp
cmp
pusha
xor
negb
push
add
jne
stos
or
ljmp
push
enter
dec
pop
stos
pop
dec
mov
int
movsl
popf
test
cmp
xor
cmp
push
iret
and
adc
dec
ret
xchg
mov
in
add
jle
or
pop
dec
and
stos
adc
jle
dec
rclb
cmpl
jl
in
js
out
mov
fsubs
cmp
push
push
cmp
jl
pop
jle
cmp
mov
sub
insl
cmp
popa
lods
gs
dec
test
popf
push
push
jl
mov
mov
push
pcmpeqw
sub
lods
mov
adc
pop
loopne
pop
mov
movsb
cmp
addr16
or
push
gs
mov
cwtl
mov
mov
xor
sbb
dec
jno
pop
insb
call
xchg
insb
jne
pop
jo,pn
adc
pop
sti
out
scas
push
push
add
mov
and
cmpsl
sbb
les
je
dec
sbb
aam
push
sub
les
stos
mov
xor
pop
xor
imulb
xor
pop
xchg
fsts
mov
add
sbb
mov
jae
xchg
mov
movsl
sbb
jae
mov
pop
imul
adc
rorb
test
out
add
adc
lea
fucomip
mov
jae
out
adc
fisubl
jb
in
ljmp
push
sbb
addb
push
in
pop
sbb
cwtl
xor
mov
repz
mov
shlb
dec
pop
push
insl
fisttpll
in
xor
bound
pop
imul
mov
jns
push
xchg
daa
jge
gs
call
out
inc
or
sub
mov
mov
mov
int
jns
and
adc
mov
in
jns
ja
jp
and
pusha
js
arpl
aaa
add
push
imul
sub
in
pop
loop
xchg
stc
inc
fisubrs
jp
arpl
xor
std
jecxz
xor
push
inc
das
mov
fs
js
incb
loope
and
lods
int
pop
dec
jmp
in
gs
scas
mov
xor
pop
movsl
or
dec
ficoms
add
std
out
xor
js
out
popl
fldcw
std
loopne
and
inc
push
cwtl
jmp
outsl
outsl
je
sbbb
sub
arpl
je
xor
icebp
mov
mov
add
jno
in
jbe
inc
cmp
xor
or
js
cmp
jns
push
ss
dec
repz
scas
jne
pop
repnz
inc
movsb
jno
imul
mov
insb
cltd
or
xor
push
cmp
push
jbe
mov
cld
loopne
mov
inc
cmp
dec
mov
pop
shl
pop
pop
mov
sub
mov
cmp
inc
adc
js
push
jb
lea
push
push
cmpb
push
pop
mov
xchg
out
ret
push
aad
jb
hlt
push
aam
enter
jns
test
mov
in
mov
xchg
subb
cmpl
cmp
mov
push
push
jmp
cmp
and
push
rorb
jl
xchg
pop
xchg
sarl
cmp
jp
loopne
pushf
cmpsb
or
in
xor
icebp
fsts
sbb
pop
lcall
sbb
lcall
mov
jmp
subb
or
shll
mov
adc
mov
xchg
mov
lahf
xor
imul
cmpb
loope
into
xor
sub
inc
mov
pop
cmp
inc
divb
push
sub
mov
stc
lea
mov
or
test
addr16
push
insl
rclb
stos
jns
sbb
xchg
cwtl
xchg
stc
cmp
adc
jno
push
bound
push
cmpsb
mov
aaa
mov
push
xor
xchg
js
pop
call
cmp
xchg
jmp
fidivrl
push
int
xchg
fmul
repnz
in
inc
imul
fstpt
cmpsl
inc
mov
push
adc
push
stc
imull
lds
push
xor
lea
out
jb
dec
imul
and
sub
or
inc
jae
movsb
jmp
mov
xor
dec
xor
popa
mov
aad
push
aam
pop
xchg
fdivrl
xlat
push
inc
fistpl
cmp
test
outsb
ja
cmp
dec
adc
xchg
pop
pop
xlat
aaa
inc
jns
ljmp
mov
mov
or
std
sub
pusha
xchg
adc
dec
fisubl
cmpsl
pop
sbb
gs
xor
popf
mov
aaa
mov
rorl
fimuls
add
testl
mov
lcall
movsl
mov
stos
mov
test
out
stc
push
sbb
mov
sbb
push
cmp
lea
imul
xrelease
and
push
inc
aaa
add
arpl
cs
add
daa
es
mov
jo
jns
test
dec
push
das
ret
adc
in
mov
outsb
insb
inc
repz
shlb
es
lds
xchg
adc
jns
sbb
add
mov
add
jbe
stos
push
jg
add
sbb
pop
mov
cmp
push
mov
sbb
push
inc
leave
sbb
call
xchg
xchg
fildll
push
push
inc
xor
pushf
or
and
lret
mov
dec
pand
dec
and
jnp
aam
out
lret
xchg
cmp
or
jle
dec
jae
xchg
dec
inc
xchg
stc
cmc
lret
add
dec
call
mov
outsb
inc
xchg
push
inc
adcl
cmc
push
stc
sbb
nop
test
xchg
call
int
pop
lods
adc
cltd
or
pop
int
pop
pop
push
cmpsb
jmp
scas
call
jb
inc
jb
daa
fistpll
cld
mov
sbb
inc
xchg
pop
movsl
mov
jo
popa
decb
nop
xchg
es
ja
push
movsb
lahf
sbb
mov
pop
cmpsb
jle
in
inc
jns
mov
movsb
inc
insb
add
mov
xchg
jp
std
add
shlb
out
insb
pop
mov
inc
or
push
fdivrl
push
sarb
pop
mov
es
test
and
iret
nop
loopne
in
and
sub
jnp
lock
into
pop
mov
lcall
push
daa
and
sti
and
inc
or
nop
lods
mov
mov
push
fldenv
repnz
inc
push
mov
add
mov
inc
or
cltd
lods
cmpsb
rcrl
add
mov
sahf
popa
jge
sub
cmpb
push
inc
jo
push
jmp
or
divl
repz
outsl
jb
cmpsb
pop
mov
and
popa
shlb
xor
sub
cmp
mov
push
pusha
mov
ljmp
cs
pushf
lds
add
mov
dec
in
scas
cmp
jmp
sub
sbb
pushl
andb
aam
mov
rclb
jno
add
fwait
movsb
jmp
mov
sti
pop
xchg
push
outsl
xor
or
cmp
and
imul
push
jo
sbb
push
sbb
jnp
sub
scas
imul
xchg
mov
cmp
inc
nop
xchg
out
ret
fadds
cmp
mov
inc
dec
rcpps
ret
pop
outsl
sub
sbb
mov
mov
lret
sbb
outsb
sub
pop
sub
push
jg
insb
mov
sbb
fmul
mulb
pop
in
scas
sub
dec
inc
cmp
sub
push
sub
pop
xor
imul
push
fldt
lahf
push
scas
repz
cmp
jo
dec
cmp
outsl
adc
sub
lcall
or
jmp
xchg
aaa
sbb
popf
jg
ficoml
pop
fidivrs
ljmp
inc
add
dec
xchg
insl
push
push
in
sub
cmp
cwtl
dec
mov
mov
jo
sbb
push
pop
adc
or
leave
pop
insb
mov
jnp
jbe
push
scas
inc
push
push
sbb
sub
jg
push
ljmp
sbb
push
sub
data16
jno
insb
sub
inc
shlb
sahf
jo
mov
add
stc
call
sbb
push
sti
jne
mov
int3
xorl
clc
jae
sub
push
data16
cmp
mov
sbb
dec
cmp
add
xor
aaa
ds
repz
fnstsw
add
xchg
and
push
out
insl
pop
add
xor
cmp
lret
movsb
cmp
jo
and
xor
inc
loop
ret
rorb
jge
xchg
jae
fwait
cmpsl
pusha
mov
out
gs
cmpsl
inc
cli
cmpsl
mov
add
fnsave
sar
fildll
testb
mov
dec
mov
xor
xor
push
fildl
xor
xor
xor
adc
or
jmp
sbb
xchg
cmpsb
jne
xchg
cs
int3
insb
fiadds
daa
push
or
adc
or
outsb
gs
scas
jno
repnz
addr16
or
adc
popf
out
dec
cmpsb
cmp
outsl
js
stc
test
add
inc
test
insl
push
scas
mov
pop
test
mov
cmp
sub
gs
insb
jne
or
mov
int
mov
cmp
jno
lahf
out
sub
cmp
fcom
cmpsl
pop
fucom
fcoml
or
shr
test
and
nop
loop
push
push
xchg
xor
jno
imul
in
mov
shlb
dec
sub
lret
push
nop
sub
add
roll
push
mov
mov
dec
gs
fimuls
mov
pmaddwd
lock
dec
fildl
sub
mov
dec
out
sub
mov
xor
mov
nop
pop
je
jo
mov
adc
push
jecxz
push
cli
mov
xor
and
pusha
mov
arpl
arpl
arpl
adc
lds
arpl
pop
sarb
push
imul
and
adc
fwait
add
arpl
fdivr
push
dec
pop
jmp
cmc
pop
and
or
sbb
dec
ud0
scas
adc
pop
ja
inc
xchg
add
sub
xchg
les
js
add
mov
mov
scas
dec
xchg
or
fwait
inc
insb
dec
lods
lds
fcoml
fwait
cwtl
mov
es
jae
sbb
in
mov
mov
imul
jle
testb
cmc
cs
dec
insl
ret
std
inc
mov
ret
jl
jno
int
dec
push
xchg
inc
je
inc
sub
pop
or
movsl
ds
cld
mov
dec
jb
xor
dec
inc
in
testl
xchg
cmp
xor
jbe
testb
jle
sbb
inc
jg
cmpsb
fbld
popf
inc
jle
push
test
pusha
movsl
nop
sbb
aaa
sub
pop
pop
mov
sahf
jge
dec
inc
push
ljmp
jbe
sahf
adc
dec
fdiv
xor
sti
cmc
ss
mov
loope
lea
lret
xor
sbb
test
rcll
fistpll
enter
in
xchg
enter
mov
repz
inc
mov
and
in
mov
ja
sub
outsb
rclb
mov
xor
cltd
sub
cltd
sub
fsubr
push
and
push
sarl
xor
jecxz
push
mov
cmp
hlt
movsl
sti
shr
push
mov
loop
add
rcll
and
jae
mov
aam
bound
stos
xchg
in
inc
cmpb
add
data16
repz
stos
jb
push
cmpl
test
push
cmp
dec
and
cmp
sbb
cmp
cmp
cmp
cmpsl
push
cmp
cmp
adc
jg
push
sub
icebp
leave
dec
out
cmpsb
lods
sbb
mov
addr16
sti
dec
xchg
movsb
stos
and
mov
push
mov
inc
gs
mov
fwait
cmp
inc
mov
cmp
jge
jnp
out
in
inc
mov
fwait
lock
pop
xchg
and
xchg
inc
scas
xlat
or
test
jae
adc
add
or
and
ljmp
adc
pushl
sbb
pop
dec
or
cmpsl
push
ja
test
call
sub
cli
dec
pop
inc
cmpsb
cmp
mov
sti
mov
jbe
mov
cmpsb
sbb
mov
inc
adc
and
adc
jae
xchg
xchg
sub
sbbb
mov
push
cmp
fdivrl
sbb
sub
inc
and
idivl
roll
cmp
int
sbb
xchg
insl
adc
pop
out
sbb
and
adc
jl
adc
lea
cli
sub
lock
adc
jne
sahf
fsts
inc
inc
mov
stos
shl
sbb
stos
xorb
and
xchg
add
std
ss
mov
in
imul
xchg
xchg
and
cmp
xchg
pop
inc
mov
popa
jg
loop
xorl
xchg
shl
arpl
jns
inc
ss
or
mov
cmpsb
nop
dec
clc
lahf
mov
or
sbb
loope
insl
xor
add
cld
or
fs
mov
out
popa
dec
fwait
ja,pt
mov
shlb
adc
xor
push
test
jo
mov
or
rcr
popa
sub
push
cmp
loope
add
aas
bound
mov
mov
scas
mov
pop
lret
movsb
sbb
lea
mov
int
xor
xchg
xchg
mov
pop
xor
dec
popa
jne
out
mov
inc
lret
aas
xchg
ss
adc
out
xchg
xchg
std
ja
lock
sub
test
shrl
dec
cmp
or
cmpsl
clc
cmp
jns,pn
aad
mov
andl
pop
stc
or
pop
stc
cwtl
ret
repnz
outsl
ja
push
mov
jg
shrb
out
cmp
push
mov
mov
or
dec
xor
xlat
lea
lods
cmc
int
repnz
mov
lcall
sti
gs
push
or
inc
fneni(8087
outsl
push
cmp
add
adc
sahf
outsl
ja
push
roll
test
test
pop
pop
js
push
stc
lea
test
or
mov
push
sti
mov
cmp
pop
cld
aas
insb
mov
mov
mov
insb
ret
hlt
sub
and
push
sbb
daa
js
adc
dec
adc
adc
pop
sub
add
repz
lea
pushf
jl
cmp
pop
add
les
cmp
mov
movsb
mov
lea
fs
inc
aaa
sub
and
insb
add
ss
or
mov
xor
sbb
scas
lods
jae
cltd
mov
xor
out
imul
int
sahf
xor
mov
mov
sub
push
pop
mov
divb
sub
mov
xor
lcall
or
movsb
lea
dec
mov
insb
mov
push
lods
daa
xchg
mov
mov
cltd
dec
jnp
int
movsl
imul
inc
test
dec
sub
jns,pn
bound
cmp
stc
mulb
add
mov
push
mov
cmp
ja
push
or
mov
inc
fs
sub
dec
sbbb
outsl
scas
arpl
push
lods
repnz
pop
gs
stc
rol
out
imul
mov
pop
outsl
sbb
gs
or
mov
mov
add
push
push
push
cmp
rcl
leave
fcmovnbe
movsb
gs
stc
ret
ret
push
mov
lea
xchg
mov
scas
mov
insb
xchg
inc
mov
cmpsb
xchg
dec
or
push
lret
mov
inc
stc
pop
lcall
stos
push
in
ja
stc
fwait
ret
bound
jae
insb
cld
lods
ja
lods
push
divb
or
sbb
adc
inc
sub
jecxz
in
sbb
addr16
insb
xchg
gs
scas
call
dec
insb
test
fmul
push
and
call
jg
test
cld
xor
mov
jmp
mov
push
aaa
pop
lret
jno
jl
sub
sbb
mov
or
sub
ljmp
fisttpll
fidivl
dec
push
or
int
cmpsl
mov
or
fdivr
bound
pusha
jmp
cmp
jno,pt
leave
lahf
mov
shll
xchg
pushf
loope
push
cld
dec
sbb
mov
adc
pop
and
jp
dec
adc
mov
cmp
dec
stc
cmp
scas
mov
dec
lods
mov
ljmp
dec
cmp
ss
jnp
enter
cwtl
fidivl
jmp
push
scas
insl
cmp
dec
sub
push
or
movb
add
pop
inc
inc
jl
ja
fwait
icebp
cmp
jge
pop
push
pushl
aam
in
je
out
ja
repnz
mov
movsl
xchg
rcrl
pop
por
mov
cs
xor
sub
test
xlat
std
mov
ljmp
int3
mov
ljmpw
dec
pop
or
mov
jnp
sarl
cli
popf
cmp
pop
cmp
subl
mov
inc
pop
mov
lods
cmpsl
mov
xor
sub
jns
and
mov
adc
dec
push
addl
jg
lahf
push
test
rorb
ljmp
insb
pop
sbb
dec
ret
pop
lds
sarl
mov
bound
inc
cmp
mov
scas
xor
adc
mov
or
fcoms
pop
gs
inc
sub
sbb
insb
testl
mov
sbb
add
test
ss
lds
inc
movsl
in
fstpt
ret
and
fcmovnb
js
cmp
je
jecxz
pop
das
ret
ja
adcl
inc
cwtl
outsb
jg
xchg
dec
sub
sbb
and
mov
std
sub
icebp
pop
cmc
loop
add
add
cmp
cs
xchg
popf
mov
outsb
jnp
mov
or
jne
or
sub
push
fldcw
mov
stc
aaa
mov
jge
test
jne
fldl
push
and
stc
imul
in
or
fs
lock
add
sbb
inc
outsb
pop
imulb
fwait
iret
cmp
jno
rorl
adc
inc
sbb
push
shrl
or
sarl
mov
aas
insb
mov
test
daa
dec
add
jmp
sbb
push
outsb
fsts
aad
fnstcw
cwtl
push
xchg
test
mov
dec
test
mov
pop
ret
sub
mov
mov
in
dec
pop
dec
dec
push
mov
jns
cwtl
movsl
dec
add
mov
push
pop
cmp
dec
push
dec
sbb
or
icebp
icebp
xchg
cmp
pop
divl
cs
outsl
fucomip
mov
or
dec
sbbb
in
xor
shrl
sbb
sbb
nop/reserved
cld
mov
xor
mov
inc
dec
xchg
inc
scas
sbb
mov
call
inc
enter
pop
mov
lahf
cmpsl
jl
lcall
int
pop
cmpsb
fisubl
add
fisttpll
push
dec
sub
pop
scas
daa
outsl
mov
push
les
adc
test
loopne
jbe
lea
mov
loope
adc
xchg
cmp
add
insl
in
push
shrb
daa
sub
inc
sahf
mov
push
fcmovnb
sbb
pop
or
imul
arpl
jno
pop
orl
sbb
pop
inc
adc
sbb
leave
mov
divb
sub
frstor
mov
jb
lds
fistpl
data16
inc
pop
jnp
mov
cmp
jg
leave
push
dec
dec
mov
lds
mov
add
or
test
push
imul
mov
ja
and
xchg
fwait
and
insb
jle
or
push
clc
inc
imul
dec
andl
lret
adc
pusha
sbb
test
push
fsts
sbb
aas
xor
sbb
sbb
pop
data16
jbe
sbbb
mov
adc
aas
js
cli
sbb
pop
push
mov
mov
mov
mov
std
push
gs
sub
stc
cmc
jp
fs
js
mov
out
pop
and
cltd
js
ja
fstpt
movsb
add
js
pop
daa
mov
mov
data16
sub
and
aad
popa
mov
push
in
pop
cmpb
jbe
add
push
sub
stos
sbb
cmpb
sub
jp
stos
sub
lods
pop
int
cmp
or
mov
push
out
cmp
push
mov
popf
inc
insl
pop
imul
cmp
add
jae
xor
sub
test
movsl
incb
jns
lods
mov
xchg
push
rol
int
xchg
mov
lret
in
dec
aad
fnstsw
add
xchg
subb
shll
cmp
loop
add
int
adc
cmp
test
jecxz
mov
cltd
fs
sti
jno
sub
repz
add
insb
fisttpll
sub
mov
stc
mov
mov
mov
jmp
mov
cmp
push
inc
mov
mov
lods
test
mov
push
std
cmpsb
sti
hlt
add
cmp
adc
mov
mov
orl
mov
adc
lock
insb
adc
xor
ds
and
lock
insb
adc
aaa
mov
mov
cmc
fildl
adc
jg
lds
cmpb
jl
lods
insb
push
gs
jp
fs
js
mov
es
xchg
in
xor
mov
sbb
fnstcw
mov
mov
es
stos
nop
js
js
mov
lods
sbb
js
mov
int
pop
xchg
cmp
pop
mov
mov
jae
mov
imul
xor
and
in
movsl
ja
sub
lock
mov
je
xchg
data16
push
xchg
cmp
sub
sub
int
sub
int
sub
int
sub
int
sub
int
sub
int
sub
fiaddl
xor
adc
or
aas
or
insb
mov
lds
pop
mov
js
xchg
repz
pop
pop
sub
or
arpl
fsubrs
push
insb
imul
sbb
shll
mov
sub
inc
push
movsb
mov
mov
scas
cmpb
jp
push
jae
push
push
pushf
xchg
push
pop
lahf
mov
pop
push
adcb
mov
inc
mov
out
or
pop
mov
inc
xor
repnz
jecxz
mov
mov
fstpt
xchg
lea
push
insb
jae
xor
push
sub
das
fsts
jg
pop
xchg
enter
nop
jae
lea
jbe
push
jb
xchg
iret
push
incl
in
sarb
cs
sarb
and
and
and
sarb
and
sarb
and
cmc
and
cmpsl
push
and
mov
mov
cwtl
xchg
mov
mov
popa
ja
ljmp
adc
inc
add
aaa
mov
push
lea
fdivrs
mov
mov
cmp
sub
or
ja
ljmp
std
ja
fistl
pop
push
jae
nop
js
push
mov
add
and
das
and
xchg
repz
js
ja
fucomi
cmp
mov
js
inc
xor
out
imulb
push
in
js
and
sub
cmp
mov
mov
ljmp
pop
int
ret
or
sub
sub
in
jg
xchg
repz
jae
mov
jl
jae
inc
cmp
and
mulb
in
rorb
je
outsb
cmp
sarb
daa
and
daa
sarb
and
sarb
es
sarb
es
sarb
and
and
cmpsl
push
es
outsb
es
cmpsl
push
std
sub
std
mov
aas
lahf
cmp
std
fabs
mov
pop
aaa
sub
lock
xchg
jmp
and
test
imul
insb
inc
cld
andl
fs
js
mov
cwtl
fdivrs
jle
cmc
in
test
jno
inc
aaa
mov
adcb
sti
xchg
cmp
sti
pop
push
mov
pop
fstl
mov
stc
pop
jp
imul
push
js
adc
mov
cli
sub
lahf
push
js
movsl
xor
out
mulb
js
lea
add
xchg
insb
push
lcall
sahf
xchg
cmp
or
pop
popf
mov
arpl
sub
cmp
std
push
add
mov
mov
push
out
xchg
dec
push
adc
insb
adc
or
incl
sar
insb
sar
or
decl
cmp
or
test
or
test
inc
cmp
cmpsl
push
test
or
mov
cmpsl
push
sub
mov
data16
cmp
in
rep
js
mov
inc
loopne
daa
cmc
flds
mov
mov
and
lock
pop
jmp
dec
or
cmp
jg
lds
hlt
xchg
icebp
hlt
jge
push
sub
add
push
js
cmp
push
xrelease
hlt
repz
xor
out
lock
int
in
mov
fcomi
pushf
xchg
sub
js
inc
repnz
xchg
sub
imul
loopne
xor
js
or
adcl
js
js
cmp
cmp
stc
fldcw
jae
add
fcmovnu
lock
mov
push
scas
jae
mov
je
xchg
mov
jae
pop
inc
clc
jo
and
or
insb
mov
test
or
test
or
clc
test
or
testl
add
or
testl
enter
lods
imull
mull
push
test
arpl
notb
es
fs
or
divb
push
lea
push
js
mov
dec
stos
loopne
sub
add
lret
add
scas
jl
js
cmpl
js,pt
sbb
in
inc
aas
fs
or
inc
aad
shlb
dec
push
sarb
xchg
xor
jbe
lcall
in
push
repz
sub
or
sub
sbb
sarl
sarl
lods
lock
jb
mov
add
gs
js
dec
int
lret
or
ja
fsubrs
arpl
lcall
mov
pop
cmp
dec
adc
ja
sub
lock
mov
inc
ficompl
dec
js
int
adc
adc
std
adc
fstl
leave
fnstsw
int
adc
mov
adc
cli
adc
lods
adc
jge
outsl
cmp
outsl
inc
insl
adc
cmp
xor
sub
aad
mov
fcmovu
seto
lods
sbb
packsswb
iret
rcpps
jp
js
mov
cmc
test
xor
and
into
xchg
pusha
and
int
push
xchg
cmp
push
lock
ja
fcmovnb
xchg
stos
jmp
mov
js
fs
cmp
add
lds
nop
js
mov
mov
mov
ja
cmp
repz
lock
push
sbb
and
or
jge
cmp
mov
js
lcall
lea
push
cmp
dec
add
jmp
inc
in
addr16
lock
js
cmpsb
gs
fistl
jae
xor
fprem1
add
or
cmp
mov
lods
sbb
mov
js
pop
mov
out
xchg
dec
mov
insb
mov
test
or
or
pop
or
outsl
or
dec
or
das
or
invd
mov
cmpsl
push
or
or
jns
out
cmc
sub
xchg
imul
adc
arpl
cli
pop
push
insb
mov
mov
sub
scas
lock
mov
and
cmpb
push
sbb
add
xchg
mov
inc
xchg
aas
mov
push
jg
repz
mov
js
pop
jmp
dec
out
or
xchg
lcall
dec
jmp
inc
jnp
cmp
repz
push
lock
xor
in
lret
movsl
insb
das
faddl
jmp
stc
into
jp
push
push
sbb
xchg
xor
aad
inc
cmp
fcmovnu
mov
sbb
jae
mov
fdivs
cmp
pusha
pop
int
ficoml
or
mov
sub
outsl
cmp
sub
fisubrl
dec
loope
cmp
loope
stc
loope
or
int
loope
jmp
loope
leave
js
int
loope
test
loope
or
jo
aad
mov
fiaddl
aas
or
bound
fneni(8087
shr
lods
divb
jbe
sbb
sub
subl
xchg
ja
sub
lock
out
std
iret
mov
inc
xorb
imul
sarl
jae
test
and
std
pop
or
xchg
ja
sub
jmp
xchg
mov
jle
js
pop
jp
pop
add
push
aaa
js
adc
insb
fs
aad
inc
aad
imul
scas
lea
fdivrs
push
sbb
aam
int
aam
insb
sbbl
adc
mov
pop
popf
mov
mov
xchg
fwait
inc
sub
roll
xchg
or
jae
stos
xor
sbb
jecxz
int
ror
or
int
ror
jmp
ror
mov
ror
fwait
ror
stos
js
int
ror
mov
int
ror
imul
cmp
ret
outsl
inc
sbb
aad
mov
fnstenv
or
xlat
mov
fnop
mov
arpl
jne
push
jg
inc
mov
js
mov
mov
xchg
jl
sub
mov
xchg
sub
js
enter
xchg
repz
iret
mov
jmp
add
adc
mov
dec
or
xlat
jge
ss
lock
movsb
jmp
cmp
xchg
cmp
movsl
insb
sbb
cmp
mov
js
mov
lcall
in
lret
fists
js
dec
in
adc
popa
mov
data16
int
js
add
int
push
ret
js
insb
adc
sbb
in
ljmp
mov
jae
mov
call
fdivs
jbe
lods
mov
mov
xchg
push
cmp
mov
or
jmp
test
test
or
test
or
test
or
ljmp
ljmp
ljmp
ljmp
ljmp
addr16
xchg
cmp
icebp
fldl2t
pop
cmp
icebp
f2xm1
je
sbb
push
fwait
js
test
xor
cmp
repz
sbb
lock
test
out
js
mov
mov
daa
arpl
test
and
out
adcb
out
std
push
fucomip
cwtl
cmc
lcall
dec
out
push
adcl
sbb
or
out
ljmp
mov
mov
mov
lock
je
mov
out
imulb
js
mov
int
mov
push
in
xchg
mov
jae
pushf
cmp
mov
cmp
fnstcw
cmp
fnstenv
jg
pop
xchg
insb
insb
lcall
mov
mov
insb
aaa
in
inc
jecxz
insb
pop
jecxz
daa
jecxz
insb
mul
or
jecxz
insb
xlat
jecxz
out
test
or
jecxz
insb
xchg
jecxz
cmpsl
jecxz
insb
ja
or
jecxz
cmp
mov
cmp
cmpsl
push
loop
and
mov
clc
loop
mov
imul
loop
lock
dec
popa
pop
push
jl
inc
xorb
adc
nop
js
sbb
lock
insb
push
mov
aam
xor
test
js
lods
jbe
dec
sbb
add
mov
push
jbe
mov
daa
call
lahf
push
sarb
shlb
add
nop
js
mov
sbb
jl
js
fnstcw
cltd
out
fistpll
std
out
add
mov
pop
in
jbe
lcall
mov
push
out
push
mov
or
js
out
jmp
cli
push
movsl
jl
js
test
scas
push
inc
inc
pop
xorb
jp
push
adc
or
mov
mov
pop
lods
mov
mov
xchg
and
icebp
mov
cmp
mov
cmp
outsl
cmp
outsl
cmp
sub
outsl
mov
mov
int
mov
fcmovu
mov
push
inc
mov
xor
jae
aad
mov
xor
jge
enter
std
push
mov
xlat
js
mov
push
mov
js
jbe
jp
scas
jl
js
dec
roll
cli
sar
or
jp
and
mov
scas
adc
test
out
inc
sarb
ja
push
lock
in
dec
push
lods
repz
js
mov
in
push
lret
lcall
in
push
jg
xor
and
mov
mov
out
mov
jnp
push
jb
cmc
sti
xchg
xor
sbb
or
add
enter
scas
lea
pop
fdivs
cmp
xchg
sub
ja
ljmp
or
cmp
outsl
cmp
sub
mov
mov
rclb
sub
std
leave
repz
outsl
mov
js
sarl
jecxz
leave
mov
outsl
mov
js
xchg
jp
mov
or
pop
adc
fdivrl
adc
adc
insl
mov
pushl
sbb
jl
js
sahf
cmp
sbb
iret
mov
sub
mov
xor
mov
xchg
mov
js
jmp
sbb
cmc
cmpsb
out
imulb
js
xor
mov
sub
mov
pop
mov
js
shl
push
ret
repnz
mov
pop
mov
lahf
cmp
mov
jmp
mov
mov
sbb
jl
js
bound
insb
adc
mov
movsb
mov
stc
mov
mov
std
jge
mov
mov
das
inc
mov
cmp
dec
je
sbb
adc
fidivs
jl
jae
lods
cmp
adc
insb
std
int
cltd
int
sarb
int
mov
rolb
test
or
int
insl
int
insb
cmp
sbb
int3
cmpsl
push
int3
test
fxch
mov
pusha
iret
int3
sbb
inc
int3
mov
pop
enter
inc
cmp
sub
lret
arpl
dec
sub
aam
pop
sbb
js
pop
in
dec
push
lods
repz
pop
adc
xchg
ja
sub
lret
in
lret
addl
popa
sbb
js
addr16
inc
mov
addl
lcall
in
test
fists
js
mov
push
cmpb
rcrb
rcr
fmull
cmp
mov
int
xor
push
nop
js
push
outsb
iret
hlt
popa
sbb
arpl
and
adc
iret
mov
push
stos
jae
js
push
sub
test
rorb
int3
lahf
outsb
cmp
sarb
into
and
into
and
sarb
into
and
sarb
lds
das
inc
and
ffreep
and
mov
mov
cltd
lds
cmpsb
lds
pusha
lds
out
lods
and
std
lret
aad
cmc
enter
sub
pop
cmp
popf
lock
mov
test
pop
js
cmp
pusha
and
insb
pop
ret
xor
lahf
push
lock
mov
push
cmc
mov
cmp
push
cmp
dec
ret
inc
and
loope
or
js
xchg
cmp
test
imul
inc
leave
std
pusha
and
sbb
jl
js
mov
push
cwtl
nop
js
jle
xchg
xchg
ret
js
aaa
jp
test
fistpll
and
fsts
mov
aad
inc
push
shlb
xor
sub
mov
sub
fldcw
jg
pop
xchg
insb
push
lcall
mov
cwtl
popf
insb
cmp
or
test
mov
sub
and
mov
or
and
mov
jmp
sarb
and
and
sarb
and
mov
data16
mov
cmpsl
and
repnz
popa
enter
std
push
popf
jp
fs
js
mov
aas
js
sbb
cmp
pushf
xchg
cmp
pushf
fldl2t
pop
push
sarl
xchg
xor
cmc
sbb
adc
arpl
sub
lds
mov
stc
cmp
sbb
jne
mov
push
outsb
js
dec
xor
lcall
imul
popa
push
jns
js
pop
jb
out
push
dec
nop
js
sbb
add
fyl2x
andb
js
mov
hlt
xchg
fistl
jae
inc
in
fprem1
mov
sbb
mov
mov
lods
sbb
pop
mov
out
xchg
dec
or
test
or
lahf
test
or
lahf
or
lahf
or
test
add
lahf
and
sahf
sarb
sahf
and
sahf
sarb
sahf
cmpsl
push
sahf
test
mov
mov
cmpsl
push
sahf
sub
mov
xor
fldenv
sahf
jmp
mov
and
jp
and
mov
add
pop
and
arpl
inc
jmp
addl
lahf
push
mov
inc
fwait
xor
jbe
inc
push
mov
add
dec
xchg
fldcw
adc
or
out
xor
jbe
pushf
ficoms
in
adc
arpl
inc
mov
sub
push
jg
lret
push
in
inc
lret
mov
in
jl
js
cmpl
js,pt
lds
clc
popa
and
xchg
push
sbb
jae
mov
pusha
push
jmp
stc
data16
inc
push
push
mov
mov
cwtl
lcall
insb
test
insb
gs
or
xchg
or
xchg
or
xchg
test
lcall
xchg
and
xchg
sarb
xchg
and
xchg
sarb
xchg
and
xchg
mov
cmpsl
push
xchg
test
dec
xchg
outsb
mov
cmp
add
push
scas
and
mov
js
mov
repz
mov
sub
lods
mov
xchg
sbb
ja
fninit
cmp
sub
inc
jmp
inc
xor
add
imulb
jmp
pop
jg
jp
js
mov
sbb
movsl
jl
js
and
lret
sub
arpl
shrb
and
stos
cmp
sub
in
fbstp
arpl
std
stos
push
je
mov
js
je
xchg
cmp
jae
mov
lods
mov
cmp
inc
inc
jae
adc
mov
loopne
mov
imul
xchg
dec
adc
mov
insb
divl
insb
xlat
mov
out
test
or
mov
insb
xchg
mov
cmpsl
mov
insb
ja
or
mov
addr16
insb
aaa
mov
inc
scas
mov
cmpsl
push
scas
test
shrl
push
scas
mov
scas
xchg
lds
inc
pop
push
insb
js
xor
mov
scas
arpl
or
out
iret
mov
mov
push
lret
lcall
jge
test
cmp
push
je
jae
xchg
inc
xlat
movsl
rolb
js
mov
lahf
repz
js
imul
adc
movsb
ljmp
in
lock
mov
add
inc
or
push
iret
repz
sbb
js
inc
mov
add
outsb
push
mov
int
lret
or
movb
cmp
fldcw
mov
fdivp
jae
mov
sub
add
repz
jae
pop
push
test
jb
js
sbb
mov
sarb
test
cmp
and
sarb
test
insb
and
insb
add
insb
loope
or
test
push
test
into
test
stos
xchg
test
in
stos
test
pop
test
mov
test
popa
enter
adcl
mov
in
cmpsl
sbb
jl
js
movsl
cmp
mov
js
mov
adc
mov
pushl
push
sub
lock
mov
arpl
mov
jb
idivb
cmpsb
aad
in
inc
cmp
jge
cmp
jge
lods
pop
push
mov
inc
xchg
xor
out
push
js
insl
xor
out
or
xchg
jl,pn
xchg
mov
js
out
ret
jmp
add
adcb
loopne
imul
xor
ja
ljmp
jl
jae
enter
fsub
idivb
jae
pop
jb
xchg
daa
test
cmp
std
push
sub
inc
dec
inc
jl
jae
loop
out
enter
outsb
cmp
jp
inc
add
and
and
add
jecxz
sarb
andl
xchg
andl
jae
and
andl
sbb
test
fldl
insb
out
addb
and
mov
in
js
inc
jg
xchg
inc
push
add
xor
jg
xchg
mov
js
mov
sub
je
jmp
andl
lahf
push
fidivrs
mov
loopne
xchg
js
jne
mov
popa
add
ss
pusha
mov
sbb
jne
int
jne
insb
pusha
lcall
in
lret
fists
js
popa
xor
fdivrs
adc
and
jmp
mov
dec
lahf
push
js
movsb
gs
lds
jno
push
fdivs
cmp
pusha
cmc
int
jae
cmp
jae
lods
inc
push
call
je
xchg
mov
jae
mov
xchg
dec
and
leave
mov
jb
cli
jb
cmp
outsl
cmp
outsl
cmp
sub
jb
sbb
jns
std
jns
push
jns
or
out
jns
sbb
or
xchg
jns
jg
jns
test
mov
subl
jmp
ljmp
jl
js
sarl
lods
fdivrs
jb
rclb
gs
mov
jmp
add
xchg
ja
incl
mov
fdivs
push
js
js
pop
jb
push
push
pushf
mov
js
pop
jbe
test
add
cmp
jbe
xchg
sub
jmp
dec
out
notb
push
jb
out
sub
lea
enter
inc
int3
mov
mov
add
cmpsl
lock
test
int
outsw
testb
cmp
add
push
in
not
xchg
cmp
mov
jmp
inc
stos
xor
fdivs
push
pop
insb
sbb
xchg
rorb
jl
outsb
cmp
sarb
mov
aas
mov
cmp
and
mov
cmp
mov
decl
and
mov
cmp
mov
mov
mov
lahf
mov
cmp
mov
push
mov
cmp
lahf
push
xchg
into
outsb
inc
sub
xchg
xchg
or
inc
lcall
lea
push
mov
das
inc
test
dec
nop
std
push
sub
outsb
push
xchg
pop
nop
js
in
inc
popa
test
mov
addr16
flds
inc
aas
xor
sub
and
js
dec
cmp
and
cmp
xor
mov
push
push
push
sbb
mov
js
lods
in
fprem1
loopne
mov
outsb
xor
scas
data16
daa
test
xchg
emms
sub
lock
sar
xchg
insb
push
lcall
dec
call
jae
inc
test
hlt
test
xchg
cwtl
xor
sbb
push
aas
int
or
js
int
or
js
int
or
js
int
or
js
int
or
js
int
or
js
int
or
js
int
adcb
aad
mov
or
loop
adc
imul
push
fs
js
mov
dec
dec
loopne
das
mov
or
and
into
cmp
or
pop
std
out
mov
js
and
mov
or
jp
fs
js
mov
lcall
fldl
ja
ljmp
push
xlat
js
mov
pop
in
idivb
lcall
in
add
push
imul
inc
and
or
mov
inc
mov
jg
sti
lock
push
cld
adc
shrl
pop
arpl
xor
mov
jae
out
movsb
fcomi
dec
xchg
fdivs
je
lods
push
cli
xor
dec
fnstcw
xchg
xor
fwait
pop
or
pop
or
pop
or
test
add
pop
and
pop
sarb
pop
and
pop
sarb
pop
and
pop
sarb
pop
and
pop
mov
cmpsl
push
pop
test
pop
pop
outsb
mov
pop
scas
js
mov
adc
daa
insb
adc
pop
mov
mov
sbb
ret
js
push
leave
adc
mov
popa
push
mov
in
js
mov
push
cs
mulb
jg
repz
sub
js
inc
pusha
add
ja
ljmp
mov
push
lahf
repz
inc
js
mov
in
jbe
test
xor
cli
shll
fstpt
jmp
loopne
xchg
js
jp
jae
out
push
insl
js
xor
pop
int
lret
or
pop
xchg
or
jo,pn
xchg
mov
lea
jb
push
lea
push
push
xchg
push
push
notb
push
jae
in
push
out
xchg
dec
push
mov
insb
inc
push
or
sarb
push
and
push
and
push
sarb
push
and
push
sarb
push
and
push
and
push
cmpsl
push
push
test
sbb
mov
cmpsl
push
push
sub
push
lock
ror
icebp
push
std
push
mov
out
cmp
mov
dec
inc
idivb
nop
js
dec
push
lock
insb
inc
mov
ficoml
js
lcall
inc
lods
test
mov
insb
mov
sbb
insb
inc
pop
andl
inc
out
mov
fdivrs
jg
push
push
cmc
repz
iret
mov
mov
sbb
adcl
fstpl
ret
sbb
loopne
jne
inc
pop
xor
js
adc
in
inc
jge
and
in
push
in
inc
andb
iret
js
and
shll
mov
iret
xchg
scas
mov
repnz
and
jae
shlb
xor
xor
roll
add
ljmp
sub
insl
sub
insl
sub
outsl
cmp
outsl
cmp
sub
insl
outsl
cmp
sub
insb
outsl
cmp
insb
sub
insb
xor
icebp
insb
aad
mov
insb
xor
subb
cmp
insb
sub
or
imul
imul
sub
lock
mov
test
xchg
js
je
pop
scas
stos
test
outsl
js
cmp
int
push
push
inc
mov
js
mov
out
insl
gs
jb
inc
pusha
mov
scas
stos
test
jl
sbb
push
fisubs
jno
int
jno
mov
lock
mov
repz
js
mov
loopne
push
sub
jo
int
jo
in
not
lock
mov
pusha
adc
js
xor
jp
movsl
jl
js
dec
outsl
mov
clc
outsl
xchg
fisubrs
ja
sub
lock
lods
in
and
push
adc
bound
out
cli
inc
insb
adc
add
xchg
rorb
cmpsb
aas
outsb
cmp
sarb
outsb
and
rorb
test
or
test
or
test
or
test
or
gs
andl
pop
cmpsl
push
gs
adc
push
and
add
jle
idivb
jbe
mov
sbb
js
push
jmp
out
sub
xchg
arpl
repz
inc
out
mov
mov
push
negb
je
jmp
dec
pop
jl
add
cwtl
int
bound
mov
js
lret
in
andps
cmpsb
js
mov
aas
js
sbb
cmp
imul
js
xchg
xor
cmpb
jo
mov
out
or
push
add
ja
fldt
cwtl
mov
stos
xorb
jp
inc
insb
pop
lcall
add
addr16
fsubl
insb
push
lcall
mov
aaa
popf
insb
and
repz
or
test
or
or
or
test
or
test
or
test
cmp
stos
std
cmp
cmpsl
push
cmp
stos
int
mov
inc
leave
lahf
cmp
push
outsb
popa
negb
js
jb,pt
jbe
mov
idivl
insb
es
js
sarb
jbe
ret
js
mov
jmp
inc
sbb
inc
pop
cmp
cmp
mov
inc
lods
xor
fdivrs
gs
xchg
or
js
es
in
jmp
sub
cli
jae
jl
js
js
out
test
arpl
or
cld
mov
pushf
add
std
push
mov
mov
int
lret
sub
js
push
sti
hlt
xchg
sbb
int
inc
aad
inc
push
fidivl
call
rsqrtps
push
lods
lds
mov
mov
out
xchg
inc
mov
dec
xor
cmp
sub
aas
sub
aas
sub
outsl
cmp
leave
sbb
ds
std
js
out
cli
ds
outsl
cmp
sub
ds
inc
lahf
ds
mov
fidivrl
xor
outsl
ds
mov
cmp
xchg
inc
pop
xor
sbb
fcompl
ret
fdivrs
mov
sub
pop
js
bound
sub
xor
xchg
stc
and
js
mov
call
cmpb
jl
add
ret
sub
js
dec
xor
mov
add
xchg
pop
xor
xchg
lcall
dec
jmp
inc
pop
mov
in
es
inc
xor
sub
adc
js
jecxz
mov
popa
add
jl
mov
lret
test
push
js
xor
scas
insb
xor
xor
and
xorb
jnp
push
mull
je
jae
pop
jnp
xchg
push
ret
jae
sbb
sub
or
std
push
cmp
insb
dec
popf
insb
aas
cmp
dec
aaa
test
or
aaa
test
or
aaa
test
or
aaa
test
or
aaa
test
or
aaa
or
aaa
test
cmp
mov
cmpsl
push
ss
or
test
out
jmp
mov
insl
and
jl
js
mov
mov
js
popf
inc
movsb
dec
adc
mov
inc
fdivr
mov
dec
divb
je
repz
nop
js
push
mov
and
insb
dec
dec
subl
lahf
push
fidivrl
call
sbb
mov
insb
js
xor
mov
and
jg
into
xchg
push
sub
out
js
les
jmp
add
pop
pop
mov
cmp
in
jmp
in
xlat
and
ret
mov
adc
jae
xor
push
cmp
mov
in
jae
lret
push
push
and
jae
mov
xchg
xor
fnstenv
or
push
dec
xchg
mov
push
dec
mov
sahf
mov
cmp
dec
sub
pop
push
dec
xchg
imul
mov
sahf
or
sub
xchg
stc
push
dec
addl
jmp
dec
mov
rorb
lret
lds
dec
xchg
dec
dec
addl
xor
imul
les
js
and
dec
mov
jmp
sarl
negb
je
push
sbb
stc
aaa
jnp
cmc
test
and
lds
fcomps
lods
scas
jl
js
leave
cmp
push
je
inc
pop
xor
push
push
js
adc
lods
test
push
inc
js
mov
mov
es
js
movsl
mov
in
sub
or
js
push
mov
jl
js
incl
iret
jmp
add
mov
add
xchg
pop
int
sbb
movsl
jl
js
inc
mov
inc
mov
sbb
inc
xorb
jnp
cmc
mov
shlb
xchg
mov
sbb
jl
jae
fs
and
cli
dec
mov
test
outsb
cmp
sarb
dec
and
dec
sarb
dec
and
dec
sarb
dec
and
dec
sarb
dec
and
dec
sarb
dec
and
dec
and
dec
cmpsl
push
dec
test
push
dec
mov
cmpsl
push
dec
sub
lahf
cmp
inc
flds
mov
mov
push
jmp
stc
pop
jp
mov
dec
sbb
iret
fdivl
js
icebp
cmp
pushf
nop
js
mov
sbb
js
cmp
je
push
sub
add
mov
ror
fldl
test
test
inc
mov
fwait
mov
xchg
sbb
insb
repnz
loopne
movsb
fcomi
add
mov
ret
js
push
into
idiv
leave
sbb
and
pushf
xchg
sub
js
mov
inc
lods
fdivs
jb
push
pusha
cmc
mov
jae
push
sbb
jmp
jae
push
cmp
mov
jae
xchg
push
push
xchg
and
and
outsl
cmp
outsl
cmp
and
mov
outsl
cmp
and
xchg
and
movsl
and
jne
outsl
cmp
outsl
cmp
sub
and
adc
xor
loope
ficomps
and
or
jp
fldenv
mov
mov
das
inc
test
sub
js
pop
stc
pop
xchg
ja
sub
lock
lret
jmp
or
js
adcl
popa
sbb
lock
sbb
mov
negl
js
aad
push
jbe
ret
js
xchg
jnp
jbe
ret
js
outsl
jnp
cmc
test
sbb
jp
fs
js
mov
mov
push
lret
lcall
dec
jbe
ret
js
dec
jnp
out
sub
adc
js
pop
adc
xchg
ja
sub
jmp
test
fistpl
pop
adc
push
lock
sub
scas
sbb
faddl
scas
push
inc
sbb
jp
lahf
sbb
sub
and
adc
xchg
adc
cmpsl
adc
ja
outsl
cmp
outsl
cmp
sub
adc
inc
js
pop
jp
daa
mov
addb
mov
mov
jmp
xor
jae
aad
push
aas
pushl
aad
mov
push
sbb
fs
sbb
xchg
push
lea
xchg
mov
push
mov
pop
pop
js
std
pop
fdiv
or
fdivrs
mov
scas
jl
js
ja
adc
js
push
push
push
out
pop
or
push
xchg
or
jge
sub
rcrl
lea
rcrb
sub
inc
mov
js
in
add
repz
mov
data16
push
pop
nop
js
aas
je
notb
sub
js
clc
sub
pop
into
mov
mov
jbe
sbb
jae
pop
jp
nop
hlt
dec
fisttpl
mov
sub
xchg
or
sub
lock
push
inc
push
cld
sbb
sub
cmp
sub
sub
xor
sub
sub
adc
sub
sub
icebp
sub
shrl
cmp
sub
mov
sub
subl
sub
xor
xor
aad
mov
fisubrl
xor
mov
outsb
mov
cwtl
pop
lcall
test
out
cmpb
xor
xchg
cli
mov
in
push
je
sub
aad
fdivrs
lahf
pop
std
out
test
mov
pop
mov
cmc
sub
inc
ja
fdivrs
sbb
fdivrl
loop
adc
scas
jl
js
jnp
je
push
mov
mov
pop
push
stc
imulb
cs
js
or
xor
into
jnp
cmc
test
cmpl
stos
test
xor
and
lds
and
jge
dec
and
stos
orl
inc
pop
xorb
jp
xor
sbb
mov
movsl
and
jae
int3
xor
and
jae
xorb
hlt
mov
insb
jecxz
or
and
xchg
and
jae
test
or
test
or
and
adc
test
or
and
or
cmpsl
push
and
iret
and
xchg
and
push
and
and
ss
cmp
sub
sub
lock
out
sub
xchg
cmpb
jnp
jbe
ret
js
cmp
dec
sub
xchg
or
jge
es
mov
jg
sub
or
js
pop
push
sub
add
adc
mov
adc
cmpb
jp
cltd
inc
fists
js
scas
xor
sbb
push
mov
adc
lock
add
add
cmpb
jnp
cmc
test
movsl
js
mov
int
data16
pop
inc
std
push
hlt
ja
ljmp
lret
mov
jl
jae
outsb
cmp
push
cld
std
lcall
add
cld
and
sarb
cld
sbb
cld
test
or
sti
add
rolb
insb
int
mov
mov
jp
mov
cmpsl
push
sti
test
ss
outsb
mov
data16
cli
arpl
psubd
cmc
pop
push
mov
push
adc
js
popa
mov
sub
fdivrs
adc
push
add
flds
jmp
adc
push
test
js
movsb
mov
cmc
repz
sarl
xchg
leave
sbb
in
mov
fnstenv
inc
mov
push
fst
test
mov
pop
jbe
ret
js
dec
lcall
xchg
sti
in
stc
jmp
lret
js
and
dec
sbb
out
push
mov
xchg
xchg
leave
inc
mov
cmp
loopne
js
out
inc
mov
sbb
in
fprem1
rsqrtps
std
push
nop
mov
sub
cmc
arpl
or
pusha
insb
dec
lcall
mov
add
or
hlt
test
or
hlt
test
or
hlt
or
hlt
or
test
or
test
or
hlt
test
repz
sub
mov
cmpsl
push
repz
mov
mov
test
mov
js
mov
mov
xchg
jl
sub
cmp
jmp
dec
out
fdivrs
int3
push
iret
jmp
add
test
sbb
sub
stc
sub
stc
sub
js
fistpll
pop
test
lret
cwtl
mov
and
jl
js
jno
adc
movsl
push
sbb
js
and
in
enter
inc
mov
push
gs
js
mov
push
mov
outsl
js
sbb
push
mov
testl
js
mov
int
test
jb
js
pusha
sub
jmp
ljmp
push
lock
in
xchg
push
push
jae
jp
lods
push
pop
fcomip
push
iret
mov
mov
mov
ljmp
shrb
mov
pop
js
imul
jp
sub
or
cmp
or
or
cmp
or
jmp
or
fwait
mov
mov
xor
orb
mov
xor
or
fs
or
push
iret
js
lods
xor
out
testb
test
pop
sub
or
js
daa
pop
into
ret
jl
js
sarb
stos
js
jns
jmp
inc
cli
inc
jge
fs
fnstcw
jbe
leave
std
adc
js
add
cmpsl
cmc
enter
inc
pushf
mov
das
inc
test
ja
inc
push
mov
and
scas
insb
push
adc
ds
push
or
out
xor
js
test
rclb
push
js
push
xor
out
cmp
repnz
cvttps2pi
adc
rclb
pusha
cmc
mov
jae
mov
push
ss
adc
sti
xchg
fsubl
fisubs
push
xorb
jnp
xchg
xor
cmp
or
test
or
add
or
add
clc
jmp
and
add
cmp
sarb
add
stos
jo
mov
cmpsl
push
add
pop
add
stos
cld
add
mov
cmp
add
sub
or
push
rclb
imul
xchg
ja
sub
add
or
push
insb
imul
dec
jns
mov
jmp
push
pop
je
js
sub
sbb
push
js
in
movsb
add
lock
jge
fistl
sub
out
xor
ljmp
sub
loop
iret
mov
mov
es
jnp
inc
mov
xor
js
sbb
repnz
out
stc
stos
or
shr
int
lret
movsl
jl
js
lods
andl
jae
bound
push
adc
jae
add
in
movsl
in
ret
jae
mov
test
out
cmpsb
xorb
jnp
xchg
xor
aad
or
push
test
or
push
test
or
push
or
push
or
test
or
test
or
xlat
frstor
mov
cmpsl
fnsave
sbb
std
push
push
fstpl
mov
cmp
fcmovnu
js
jmp
test
xchg
js
jp
pop
sbb
sbb
cmp
xor
fstpt
pop
or
cwtl
pop
lcall
push
mov
xchg
adc
cmp
pop
pop
fimull
or
xchg
in
fprem1
loopne
ret
js
mov
pop
in
out
negb
push
jb
out
sub
loope
ja
sub
lock
mov
fprem1
loopne
scas
js
lea
movsb
adc
push
loopne
push
fdivl
jae
fdivrl
mov
mov
std
mov
cmp
mov
popf
out
cmp
push
fists
movsb
lock
insb
ja
or
fisttps
filds
fisttps
inc
fiadds
daa
fiadds
pop
fiadds
out
test
or
fiadds
mov
fisubs
arpl
mov
cmp
outsb
mov
sub
aad
int
aad
movsb
and
mov
js
mov
out
pop
add
pop
pop
sub
ss
adc
xchg
test
paddq
cmc
or
fdivrs
scas
push
sbbl
add
addr16
sti
jp
movsl
insb
adc
addl
cmp
mov
and
js
mov
cmp
xchg
inc
mov
xchg
push
jbe
decl
ds
lods
jecxz
xchg
pop
lahf
jmp
shrb
mov
outsl
cmp
sub
outsl
cmp
rcrb
sub
fxch
sub
leave
cli
js
int
fxch
fidivrl
mov
inc
cltd
or
lods
mov
mov
sbb
dec
cmp
push
dec
sbb
push
scas
or
frstor
sub
enter
insb
aas
sbb
jp
sbb
cmp
sahf
mov
out
dec
enter
cmp
dec
mov
wrmsr
nop
pop
sub
popa
sub
fdivrs
out
es
lret
jnp
shrl
repz
les
insb
add
repnz
mov
dec
test
stc
inc
rolb
mov
sbb
sub
xchg
cs
ja,pt
std
gs
out
movsl
xor
or
sbb
add
aam
enter
ja
stc
pop
cmp
push
movb
jmp
stc
int
fsubr
in
insl
sbb
sbbl
push
mov
gs
fsubrs
xlat
shlb
into
out
jb
rolb
jge
sbb
jnp
cmpb
dec
pextrw
xchg
pop
fldenv
lret
pop
adc
sub
cmpsl
sbb
sub
xorb
imul
adc
std
fmul
test
sub
sub
gs
mov
cmc
es
mov
xchg
jbe
and
loop
mov
xchg
adc
xor
leave
pop
mov
cmp
mov
xchg
dec
int3
sub
jno
rorl
or
sbb
bound
stc
mov
cwtl
fsts
sub
jno
and
ja
inc
int3
inc
xchg
imul
movsb
cmp
adc
aaa
push
jl
cwtl
sbb
jg
fdivrs
and
dec
cmp
sbb
jb
test
gs
adc
push
pusha
pop
sub
or
and
add
sbb
pushf
imul
mov
bound
mov
xchg
inc
jg
mov
out
cwtl
insl
sub
and
push
dec
mov
cmp
outsl
jbe
pop
and
cmp
jnp
in
xor
repnz
ss
pop
mov
movb
test
rclb
in
xchg
sub
std
cmp
xor
enter
xor
in
shr
inc
jecxz
fistl
push
lea
stos
dec
pop
mov
xchg
arpl
push
insb
adc
js
pop
adc
pop
and
loop
jbe
mov
cli
aad
mov
test
jne
lahf
repz
mov
repz
cmp
arpl
enter
lcall
jl
pop
inc
adc
mov
jmp
pop
jae
jno
sbb
jmp
out
mov
cmpb
cmp
insb
cld
ljmp
xor
add
push
daa
stc
imul
int3
fcmovb
ljmp
outsl
xchg
push
jp
jae
mov
addl
insb
cmp
mov
inc
popf
rol
sub
popf
inc
inc
and
aad
js
fcmovnbe
out
inc
out
lds
lahf
jbe
dec
xchg
or
mov
inc
push
pushf
sbb
cmp
sbb
lock
lret
add
push
push
nop
push
lcall
repz
shrb
sbb
stc
dec
mov
imul
cmpsl
pop
int
dec
stc
push
lcall
push
je
stc
loope
inc
ljmp
adc
lds
rorl
and
loope
pop
sbb
fwait
shlb
dec
cwtl
pop
and
xor
mov
in
xor
in
or
xchg
jae
loopne
nop
repnz
test
push
xor
fwait
inc
mov
andb
js
jno
jb
xor
lods
cmp
mov
pushf
jmp
mov
inc
lret
aas
inc
xchg
lcall
out
leave
cmpl
imul
mov
pop
push
inc
mov
in
add
fwait
subb
aad
in
mov
mov
mov
adc
or
addr16
fistl
xor
sar
out
mov
fwait
add
mov
call
mov
rcll
add
add
test
rol
cmp
xchg
push
sbb
mov
in
adc
or
adc
fwait
out
inc
mov
imul
xor
dec
addr16
pop
shl
fisubrl
inc
je
push
jbe
incb
xor
push
pushl
xor
cmp
das
push
enter
outsb
int
xor
cmc
inc
dec
subb
lea
xchg
mov
insb
xor
sbb
inc
inc
loope
cmpsl
dec
push
dec
stos
jle
test
cmp
mov
jg
push
jg
mov
out
pop
cmp
inc
gs
pop
xchg
lods
sbb
jae
aaa
and
mov
dec
or
fs
mov
pop
sub
adc
pop
in
inc
out
int3
mov
fwait
addr16
lock
pusha
and
mov
fwait
push
add
les
xor
int3
push
sbb
fs
lods
sbb
loop
or
xor
inc
lahf
jnp
dec
jl
jl
inc
or
scas
xchg
cmp
ss
mov
xor
inc
stos
mov
lods
inc
imul
fldcw
dec
repnz
pusha
ret
test
dec
push
or
cltd
sti
sbb
sbb
sti
mov
mov
jmp
push
inc
mov
xlat
arpl
add
jns
aad
lret
sbb
mov
clc
dec
mov
pushf
fidivrs
xchg
inc
popa
xorl
in
push
fstl
add
inc
sub
jbe
pusha
aad
ljmp
dec
rcrb
sub
mov
or
inc
fbstp
in
lea
ror
xchg
dec
rcrb
adc
mov
outsl
mov
lea
cmp
dec
pop
adc
or
pop
data16
fmull
int
pop
ljmp
mov
sbb
dec
pop
movsb
and
jns
jle
pop
jo
xchg
or
mov
stos
int3
roll
out
fstpt
cmpl
dec
rorb
jg
mov
and
sbb
add
cmp
cmpsb
mov
mov
mov
cmp
xchg
cmp
dec
adc
icebp
jne
data16
scas
jecxz
cld
stos
jmp
push
adc
sbb
cmp
pop
push
cmp
dec
and
adc
inc
jg
pop
xchg
ret
jae
out
sti
dec
stc
sbb
imul
or
insl
adc
fsubrl
sub
pop
fsubrs
cmp
inc
adc
sbb
cmp
cltd
adcb
stos
adc
ljmp
xchg
xchg
pop
ja
shrb
inc
pop
out
sbb
xchg
insl
mov
mov
mov
testb
pusha
std
inc
pushf
mov
mov
pop
out
push
imul
sub
cmpsl
push
out
into
std
lods
cli
add
and
xchg
insb
mov
mov
lret
cmp
fdivp
jns
mov
mov
lods
js
pop
mov
sar
aaa
jno
arpl
mov
data16
mov
ljmp
lea
add
jmp
mov
and
mov
cmc
mov
jl
or
adc
in
pop
cmp
cli
sbb
and
mov
jbe
test
aad
inc
and
std
push
sbb
xchg
add
ret
or
xchg
sbb
popf
mov
leave
stc
out
cmc
insb
add
fidivrl
cmp
xchg
sbb
lods
insb
add
jle
push
data16
jmp
or
daa
jmp
jmp
mov
vmovss
inc
inc
push
loope
sub
pusha
jbe
pop
shll
aad
adc
in
in
loop
mov
fiadds
push
pop
xor
rcrl
pop
mov
vandnpd
leave
xchg
sarl
movsl
adc
cmp
rep
out
sti
adc
inc
ja
cmp
rorl
sarb
aad
insb
add
nop
xor
mov
jbe
push
pop
fwait
rcr
aam
repnz
sarl
and
leave
jge
push
popl
aam
ja
cmp
mov
sub
xchg
mov
mov
jecxz
cmp
cmp
mov
sub
mov
test
test
mov
loop
and
cmp
leave
mov
xor
int
mov
lret
fs
cli
movsb
rorb
cltd
pop
mov
ss
mull
js
and
fcoms
data16
insl
out
iret
insb
adc
cltd
mull
pop
sub
js
jne
sub
mov
lcall
cltd
cmp
testb
xchg
cmc
xor
stc
dec
sbb
sbb
sub
dec
push
loopne
or
push
mov
clc
mov
or
mov
adc
std
mov
pop
das
adc
jg
push
xor
add
adc
cmp
into
dec
repnz
jg
inc
shlb
sarb
mov
pop
xchg
dec
cmp
ljmp
mov
push
cmp
lds
jo
ljmp
jbe
stos
mov
addb
lret
xor
jp
lret
mov
gs
jbe
clc
int
mov
inc
inc
aad
mov
xchg
mov
mov
int
mov
xchg
fs
sbb
xchg
mov
es
lods
mov
sbb
arpl
mov
fwait
out
js
int
mov
inc
push
ret
aad
inc
xor
aam
jmp
adc
mov
pop
sub
push
lods
and
xchg
arpl
insb
rol
cmpsb
ret
les
and
add
xchg
mov
jns
cs
jns
pop
pusha
push
cmp
or
mov
sti
mov
shr
in
push
daa
mov
insl
cltd
std
fsts
frstor
je
push
push
leave
imul
arpl
clc
or
or
mov
push
sub
xorl
daa
dec
cltd
shrl
sub
popf
or
mov
cmc
push
adc
and
cmp
pop
add
jbe
popf
jno
je
pop
sub
push
orl
sub
test
add
xchg
xor
and
inc
stc
mov
bound
jmp
cmp
popa
daa
mov
gs
cmc
lret
stc
xlat
rorl
xor
test
mov
and
jl
jmp
xchg
sbb
lret
gs
pusha
scas
cli
dec
sub
fcmove
out
pop
jge
test
jl
ljmp
sbb
adc
fisubs
insb
pop
int
daa
lods
inc
pop
xchg
test
add
int
jp
repnz
xchg
cltd
add
mov
pop
dec
shll
cmp
cmp
lods
cmp
mov
sub
stos
aad
mov
cmpsl
mov
xor
xor
int3
or
push
int3
nop
cmp
test
inc
ss
loopne
adc
and
repnz
bound
xor
sbb
adc
jb
rcrb
fldl
in
xor
pop
test
imul
xor
mov
jle
fcompp
out
enter
cwtl
in
in
sbb
pushf
cmp
fs
dec
js
insb
sub
jno
aaa
and
jge
and
xor
lret
mov
mov
lret
or
lret
cmp
cmpsl
loope
xchg
ja
cli
call
sub
stos
push
outsb
add
lret
mov
cmp
sbb
push
pop
hlt
and
xchg
addl
imul
mov
push
cmp
lret
movsb
xchg
stos
cli
adc
mov
lret
xor
cmpsl
lret
ja
push
lods
mov
cmp
movsl
out
arpl
arpl
lretw
push
lods
mov
mov
std
shl
shrb
aad
jnp
jp
imul
int3
cld
flds
lds
cltd
movsl
sub
rol
cmp
mov
adc
xor
call
insb
mov
push
xchg
inc
bound
mov
and
lcall
push
ja
js
xchg
cmp
xchg
outsl
shlb
xor
and
lret
sub
rorb
insb
cmpsb
shrb
stos
nop
rorb
dec
jbe
inc
mov
int
dec
push
aaa
xorl
add
push
insb
xchg
lock
sar
cmp
fdivrl
jl
sub
push
iret
rcrb
iret
push
cmc
xchg
sub
iret
adc
jns
xlat
fidivl
dec
cmp
fnstenv
lea
loope
outsb
cltd
fistps
push
xchg
lea
dec
add
mov
inc
into
mov
push
into
add
mov
dec
fld
frstor
push
jb
cs
push
or
gs
xchg
or
pop
movsl
mov
and
ja
stc
cmpsl
jp
pusha
push
cmp
iret
inc
adc
dec
push
clc
cmp
lds
inc
mov
xor
sahf
adc
sbb
popa
lock
shrl
lea
ss
ss
dec
in
daa
leave
sarl
dec
adc
pop
out
mov
jns
lods
cmp
add
mov
mov
mov
shll
outsb
sub
les
hlt
les
and
jmp
popf
leave
add
les
repz
test
fnstcw
inc
aaa
cmp
enter
push
fs
mov
outsl
push
mov
and
jns
stos
outsl
push
aas
mov
push
insb
push
ret
mov
add
xchg
repnz
insb
aad
xor
lods
test
hlt
adc
push
les
aas
or
inc
dec
mov
inc
ja
cmpsl
dec
inc
adc
xor
mov
movsl
and
sbb
add
fstpt
pop
shr
shr
in
lret
sub
pop
aad
jmp
in
scas
jne
arpl
or
add
mov
mov
sbb
push
push
std
loop
dec
cmc
mov
mov
leave
cmpsl
push
leave
jp
idiv
clc
imul
stc
aad
push
jno
jne
lret
inc
xchg
iret
rcl
lret
rorl
lcall
cmp
sub
imul
mov
out
xor
fdiv
cli
push
sub
pop
repz
jmp
outsl
cmp
mov
pop
rep
push
leave
cmpsb
mov
dec
enter
xor
sub
push
test
or
jns
ficoml
mov
pushl
mov
xor
scas
dec
add
jne
push
aad
jae
fdivrl
mov
lahf
stos
addr16
inc
enter
orl
jecxz
enter
sub
dec
sbb
das
push
jge
stos
pop
fadd
push
cmp
pop
movsb
popf
mov
dec
adc
mov
movsl
push
test
sbb
sub
outsl
xchg
clc
xor
cmp
js
sub
mov
add
jmp
out
popf
inc
xchg
adc
inc
push
add
push
insb
and
xchg
inc
lret
cwtl
pop
mov
mov
lcall
push
or
ja
jae
cmp
mov
loopne
and
jbe
or
xor
imul
aam
cmp
push
push
lea
xchg
cmc
mov
stc
cmp
xor
ja
xor
dec
lea
or
inc
mov
je
lret
xchg
lcall
sbb
pop
lret
push
std
mov
xor
mov
fwait
inc
jb
repz
mov
jg
jne
jo
into
dec
adc
lods
and
and
addr16
lcall
movsl
mov
cmp
mov
jns
les
sbb
and
dec
imul
adc
ljmp
fistpl
shlb
dec
lea
sbb
data16
mov
or
xchg
mov
aam
add
or
sbb
sti
dec
xchg
push
push
xchg
out
xchg
push
add
xlat
push
jge
cmp
jg
sub
mov
sbb
inc
into
adc
int3
das
xchg
xor
or
test
imul
rcrl
lods
push
jb
pop
ja
jne
aad
test
fstp
xchg
pusha
xor
gs
nop
jbe
sub
jb
mov
test
jecxz
ret
dec
cmp
sbb
xor
mov
cli
xor
xor
sub
or
jp
push
scas
mov
add
fstpt
push
lea
xchg
cmpsb
int
pop
jmp
ja
test
xor
cmp
movsl
cld
sub
mov
sub
mov
jecxz
stc
mov
sti
insl
stos
push
push
loope,pt
adc
or
ret
mov
insl
dec
jns
adc
fstpl
or
xchg
xchg
lahf
pop
or
inc
addr16
frstor
notl
test
or
xor
sub
and
push
popa
xchg
std
sbb
mov
or
push
sbb
xchg
imul
mov
pop
mov
mov
push
sahf
ds
lods
rorb
sbb
loope
ret
pop
aad
sbb
xchg
imul
inc
xchg
test
in
insl
fsts
jb
mov
mov
jp
stc
dec
bound
fstl
sub
inc
lods
xchg
jmp
sarb
pop
aaa
and
xlat
lds
pusha
jne
sub
cs
pop
push
stc
add
lods
pop
or
cld
push
lods
or
insb
push
xchg
aad
xchg
cmp
orb
mov
jne
cmpsl
stos
stos
repnz
adc
jl
mov
mov
pop
pusha
push
cmpl
mov
and
pusha
dec
sub
xchg
inc
scas
stos
nop
or
mov
test
inc
xchg
movsb
sub
scas
iret
sarl
int3
xchg
sti
popf
inc
pop
mov
xchg
pushf
sub
cmp
mov
test
mov
movl
mov
test
push
mov
outsb
sub
shlb
out
in
mov
movsb
cltd
fcmovnu
xor
jae
sbb
fiaddl
shrl
fsubrs
aad
cltd
xlat
mov
repz
and
inc
pop
imul
in
lahf
inc
gs
icebp
jne
jbe
js
push
bound
fadds
and
dec
outsl
push
cwtl
fcomps
mov
cs
cld
mov
movsb
xchg
adc
ja
movsb
cltd
aam
out
sbb
ja
inc
sbb
push
mov
jge
rcrb
sub
add
sub
adc
or
ljmp
imul
mov
sub
cmc
and
sbb
addl
push
movsb
xchg
orb
lcall
shrb
mov
xchg
jmp
sbb
addb
xchg
xor
xor
xchg
leave
xchg
xor
loope
mov
add
cmp
cmpsl
xchg
sub
test
adcl
pop
cmp
cld
fwait
adc
jecxz
adc
adcb
push
lea
dec
imul
sub
inc
out
mov
jmp
add
fstp
and
rolb
jo
add
jg
gs
lea
ret
jo
addr16
pusha
aas
mov
xchg
inc
and
inc
xor
lods
mov
mov
mov
xchg
scas
dec
lahf
mov
call
cmp
inc
stos
out
sub
and
ja
js
sub
jmp
fcmovb
push
xchg
mov
pop
push
js
mov
pop
jbe
cmp
xchg
fidivl
in
xor
mov
dec
sbb
cmpsb
out
xor
adc
inc
fs
flds
shlb
pop
stos
push
inc
mov
jp
cmp
ret
aas
or
fs
test
out
orl
push
out
cli
adc
pop
data16
nop
fldenv
testb
add
pop
out
imulb
test
sub
mov
cmp
bound
and
mov
sbb
andl
std
push
jmp
cmp
stc
mov
std
pop
addl
mov
and
inc
rorl
cmp
adc
mov
jp
repnz
fdivr
pop
dec
push
std
push
nop
pop
pop
imul
mov
pop
add
cld
scas
test
and
and
mov
or
jecxz
es
sub
xor
mov
jge
and
and
addr16
scas
and
scas
pop
imul
pop
test
push
inc
or
mov
jp
jp
inc
imul
sbb
scas
and
fs
fstp
sub
adc
cmpsb
scas
add
add
cmpsb
mov
pop
adc
and
cmp
mov
sbb
cld
in
mov
mov
test
xchg
mov
cmp
jne
mov
test
push
sub
movsl
outsl
cmp
fbstp
insb
cwtl
fmuls
iret
popa
popf
push
jne
jns
sbb
shrb
je
inc
adc
or
mov
pop
repnz
xchg
into
in
jbe
dec
push
or
hlt
mov
icebp
ja
adc
loope
rorb
jae
repz
push
das
and
fidivrs
or
cli
movsb
sub
mov
dec
dec
outsb
inc
cmp
fsubl
mov
insb
mov
testb
arpl
xor
test
adc
sahf
lds
adc
pop
or
out
scas
mov
xchg
xor
insb
cmp
and
push
or
sbb
jnp
and
stc
sub
lds
and
add
divb
adc
popa
xor
pop
and
sbb
mov
test
arpl
lea
insl
mov
mov
lds
inc
fidivl
imul
adc
or
in
pop
mov
mov
out
je
decl
mov
sbb
sub
movsl
adc
hlt
scas
push
sub
test
repz
mov
jae
jge
xchg
push
add
ja
lock
pusha
popf
lea
aad
outsl
sbb
sub
call
insb
lea
js
push
pop
jne
lods
sub
mov
mov
popf
cmpsl
push
cmp
jb
sbb
xor
inc
push
mov
fwait
and
lds
and
aad
fcomps
pusha
movsl
ja
jno
adc
adc
shl
clc
or
rcrl
mov
jnp
lret
out
cmpsb
mov
cmp
std
mov
mov
imul
lahf
adc
int
or
push
imul
adc
cmp
lds
sub
dec
adc
mov
cmp
enter
jge
mov
nop
loope
and
jae
push
adc
sbb
and
push
sbb
test
jge
andl
mov
push
arpl
test
out
lods
push
les
movsl
lea
stos
cmp
mov
cmp
fildll
dec
pop
jp
mov
xor
mov
mov
test
push
pop
xor
mov
jnp
jp
sub
roll
or
adc
aaa
iret
fdivrl
cmp
jnp
pop
dec
sbb
push
call
jnp
scas
repz
sbbl
fs
adc
mov
push
jle
or
jnp
mov
pop
filds
mov
test
mov
inc
pop
ljmp
cmpsb
cmc
leave
in
ds
test
imul
pop
jecxz
outsl
lcall
iret
add
sarb
and
xchg
lods
stc
xor
inc
dec
stos
mov
pusha
mov
and
inc
mov
sub
pop
dec
jb
push
stc
std
out
or
imul
ret
push
add
cmpsb
add
int
mov
dec
mov
mov
mov
fs
addl
xor
pop
outsb
cmp
sbb
scas
mov
add
lea
push
inc
js
xchg
cmp
pop
xchg
dec
lcall
adc
jp
sub
add
scas
addb
shl
pop
insb
mov
dec
stos
pop
andb
int
cltd
imul
mov
dec
jg
leave
add
outsb
sub
jg
insb
pop
jo
jne
rorb
jg
loope
mov
subb
jle
cmp
pop
ljmp
pop
les
call
inc
gs
xchg
data16
cwtl
push
bound
test
cmpb
inc
sbb
xchg
es
fscale
cmpsl
andl
mov
in
push
fldcw
int
jne
jns
push
xlat
jne
cwtl
int3
push
xlat
leave
mov
mov
in
push
mov
imul
jg
dec
jl
mov
mov
fs
xchg
push
insb
mov
test
or
jae
jmp
shll
shrb
sbb
dec
push
mov
aas
add
aas
adc
out
insb
cmp
inc
lea
fldl
jp
fs
fstps
pusha
in
or
jae
sbb
xchg
jae
adc
fisttps
pop
js
js
int
jb
push
sub
add
jb
sub
jae
stc
ret
jmp
xchg
xor
inc
mov
and
test
jno
movsb
test
mov
xor
jbe
aaa
sub
hlt
jno
adc
addr16
mov
cmp
les
mov
dec
test
dec
xor
dec
dec
rcrl
stos
ss
mov
pop
out
ds
lret
adc
cmp
mov
lea
xchg
ss
cwtl
inc
nop
pop
repz
insl
cmp
mov
ret
mov
or
mov
xor
push
scas
andb
inc
outsb
inc
lahf
aas
mov
push
iret
mov
insb
add
test
cmp
cmp
scas
sarl
mov
stc
push
add
bound
fs
shll
dec
data16
mov
stc
dec
cmpsb
and
add
ss
aaa
push
adc
cmp
movw
mov
shll
mov
fildll
stos
test
inc
push
push
push
sbb
push
test
dec
push
aad
jmp
popa
sbb
mov
xor
andb
cmpsb
cwtl
ret
mov
push
xor
push
adc
push
and
dec
icebp
mov
adc
mov
cmp
sub
push
mov
sub
cli
push
cmp
and
mov
rorl
shll
mov
mov
jp
jmp
scas
xchg
xor
jae
out
rorl
call
dec
jae
sbb
sub
or
insl
pop
xor
test
lds
add
xchg
mov
dec
xchg
mov
iretw
insl
fiaddl
icebp
lods
repnz
jns
in
es
pop
push
jmp
imul
sbb
lock
sbb
sahf
xchg
sbb
dec
rorl
cmp
adc
fistpl
adc
adc
stc
int
insb
pop
stc
adc
adc
stc
adc
in
mov
xor
clc
lods
xchg
cmp
cmp
mov
jns
and
inc
xchg
in
mov
ja
inc
sub
adc
jmp
dec
lret
pop
inc
inc
xor
imul
outsl
jae
lret
into
xor
xchg
lcall
cmp
or
add
cmp
jmp
mov
mov
outsl
cmp
les
or
sbb
sbb
test
add
and
jbe
mov
clc
repnz
xor
loop
cmpl
mov
adc
sub
sub
cltd
push
jne
adc
xor
fisttpll
xchg
inc
push
sub
inc
jne
pusha
out
mov
jmp
shl
adc
fcomps
aaa
push
xor
push
cmp
loope
push
pop
xchg
ja
mov
push
out
xchg
and
xchg
test
pop
jle
leave
loope
xchg
lds
mov
fisttpll
icebp
popf
sbb
dec
stc
sbb
mov
add
mov
push
stos
push
fsubrs
loopne
jne
push
lret
add
inc
sbb
cmp
cmpsl
insb
sub
add
adc
push
fxch
jg
inc
lods
ja
mov
xchg
sub
mov
pop
push
bound
aad
out
jno
sbb
mov
cs
adc
xchg
aad
mov
adc
aad
fsubrl
scas
or
xor
xchg
lods
nop
mov
push
insb
frstor
stc
push
cmp
adc
pop
sub
fdivl
mov
xchg
out
jp
sub
mov
std
dec
sub
cmp
push
movsl
mov
cmp
cmp
push
mulb
call
cmp
cmp
xlat
lds
jge
leave
add
jg
cwtl
ja
movsb
pop
das
out
mov
cmp
and
and
cmp
jbe
ret
mov
shr
xor
leave
ds
lcall
int
cmp
shll
icebp
xor
adc
mov
mov
mov
mov
jbe
je
stc
jne
negb
popf
pop
lock
push
xchg
sti
pusha
inc
prefetch
aas
int
out
leave
cmp
pushw
int
ret
lcall
in
or
out
jge
fwait
out
mov
cmp
xchg
mov
out
mov
mov
mov
js
mov
jbe
inc
sbb
out
icebp
xchg
fldenv
test
pusha
movsl
sbb
xor
lods
mov
loopne
idivb
xchg
push
xchg
test
mov
lret
xor
popf
sbbl
dec
ret
in
sti
scas
aad
sbb
bound
js
pop
xor
mov
in
je
cld
repz
outsl
adc
lods
or
lds
sub
inc
out
push
stos
or
sahf
imul
adc
mov
cmp
inc
xchg
push
pushf
movsb
inc
add
fldt
test
fisttpll
pop
aad
nop
xor
cmpsb
pusha
jg
aad
shlb
lret
inc
aas
adc
or
adc
aas
adc
movsb
js
mov
jmp
into
idivb
adc
and
xor
add
xchg
icebp
sub
ret
sub
ret
mov
mov
add
adc
pop
andb
adc
test
cmc
xor
dec
lahf
inc
movsb
xor
les
cmp
xor
in
xor
lret
mov
mov
push
inc
orl
inc
pushf
and
xor
mov
mov
inc
xchg
das
inc
fldcw
out
mov
mov
mov
aas
mov
cmp
xor
dec
push
insl
dec
xchg
loopne
xor
mov
jo
lret
or
int3
add
sub
lcall
mov
and
sarb
outsl
push
cmp
mov
pop
push
repnz
sahf
mov
lds
nop
jbe
sahf
clc
dec
adc
int
inc
mov
mov
cmp
adc
add
cmp
js
fcmovbe
adc
and
push
cmp
bound
and
or
pushf
mov
mov
and
int
aaa
xchg
or
inc
and
pop
and
loope
and
cmp
aaa
cmpsl
insb
push
or
and
or
mov
out
cmp
inc
jge
mov
jge
aaa
and
or
lock
js
jns
push
dec
sahf
mov
mov
inc
add
xchg
dec
loopne
es
movsb
inc
bound
mov
nop
inc
bound
inc
sbb
int3
mov
gs
arpl
xor
fisubrl
adc
cmp
dec
bound
dec
loop
mov
lahf
adc
mov
outsb
or
dec
scas
cld
mov
inc
aam
sbb
rclb
dec
push
aaa
inc
xor
iret
adc
popf
icebp
outsb
xchg
add
cltd
xor
sbb
insl
sbb
dec
inc
and
mov
pop
jae
shl
dec
out
push
nop
sub
rorl
jbe
xor
cltd
add
jmp
jle
stos
stos
or
xor
jae
bound
xor
mov
fwait
in
insb
pop
aas
sub
dec
mov
bound
arpl
push
clc
in
testl
and
ds
cmp
cmp
jno
call
jg
and
pop
sti
pop
and
sub
inc
dec
jbe
cmpb
int
dec
out
shrl
mov
push
push
push
ljmp
clc
ss
ds
jnp
pop
push
rcl
fadds
mov
and
les
fnstsw
mov
xor
cwtl
dec
lods
andb
test
scas
sbb
mov
cmp
stos
xor
cmp
or
mov
add
sbb
lret
rcrb
dec
xor
pop
pop
mov
sub
sbb
xchg
inc
add
pop
popf
insl
loopne
adc
movsb
xor
nop
movsb
push
mov
inc
sub
arpl
sub
in
mov
dec
pushl
add
sahf
mov
leave
cltd
fcmovu
pop
cmp
shll
mov
dec
lret
mov
dec
inc
xchg
lcall
jo
stos
imul
sub
bound
loop
sbb
arpl
lods
push
pop
sbb
pop
add
inc
cmpsb
dec
jp
adc
sahf
out
je
cmp
fldcw
jp
lods
pusha
jp
stc
xchg
pop
enter
pop
out
lds
inc
and
loop
call
lcall
adc
cld
dec
inc
sbb
or
sub
inc
mov
jae
cmp
ds
lods
dec
call
cmp
rcrl
repz
sbb
sbb
dec
or
mulb
xchg
enter
mov
cmp
dec
cmp
xor
jl
mov
movsb
je
cmp
push
cltd
jmp
mov
js
pop
mulb
push
das
dec
jg
xor
hlt
cmp
or
data16
inc
dec
sub
xor
cmp
cmp
outsl
or
cmc
and
aaa
push
or
mov
mov
jg
cmpsb
outsb
lret
xor
adc
jb
add
leave
pop
rcr
dec
call
inc
movsb
dec
pusha
loop
mov
push
out
pop
jnp
loope
mov
mov
gs
insb
xchg
lea
mov
clc
out
mov
inc
and
fidivrl
jns
in
adc
inc
xor
lods
or
sbb
sub
ja
xchg
push
sub
mov
divb
and
rcll
mov
fcomps
dec
sarb
cmp
dec
add
rcrl
dec
mov
inc
sub
int
sbb
fldcw
inc
int
push
cli
cmp
lds
in
cmp
lea
lock
push
jne
xor
or
sub
push
imul
shr
jnp
fnstenv
ljmp
sub
mov
cld
sbb
jne
sbb
fimull
mov
lds
mov
pop
or
cwtl
inc
aad
jb
into
sub
push
xchg
stos
mov
jmp
mov
cmpsl
dec
adcb
pop
push
orb
sbb
pop
subb
or
push
jmp
add
test
imul
mov
mov
fisubrl
or
ret
int
mov
dec
or
sti
lea
cmp
scas
pop
scas
into
sub
dec
jbe
xor
pop
mov
ja
test
lret
mov
fdivl
inc
ljmp
dec
stos
mov
lret
or
dec
mov
and
jge
ficoml
hlt
test
andb
mov
nop
mov
cltd
rcrb
out
stos
pop
inc
jno
mov
test
imul
sbb
and
lea
jle
inc
movsb
xor
sub
ljmp
popa
sarb
xor
push
xchg
aaa
jle
sub
cli
popl
aad
int3
sbb
dec
push
lret
jl
mov
std
or
push
pop
mov
or
imul
orb
cmpsb
add
push
cmp
inc
jle
lock
ret
push
dec
sbb
cld
ja
cltd
dec
push
inc
mov
mov
test
mov
inc
add
sbb
inc
in
repz
xchg
insl
insb
dec
out
jecxz
enter
in
pop
xchg
xor
out
repnz
xchg
cmp
mov
insb
xlat
sub
push
jl
arpl
repz
cmp
mov
stos
xor
js
bnd
call
loopne
or
int3
mov
fildll
jns
or
call
adc
pop
sarb
sbb
scas
dec
sahf
repnz
aas
mov
jmp
in
popa
jnp
jmp
int3
lods
inc
stos
xchg
cli
movl
dec
je
sarb
jg
jae
add
lock
sbb
gs
sbb
xor
repz
enter
sbb
or
jno
sub
dec
add
mov
hlt
sbb
stc
in
xchg
aas
cltd
lret
jle
clc
mov
aam
into
call
lock
push
jl
jae
inc
add
jmp
xchg
cmp
movsl
test
rol
cmp
andb
jo
cmp
xchg
icebp
addr16
popf
mov
dec
push
popa
leave
lods
xor
jne
cmp
mov
mov
xchg
pop
adc
add
aad
xchg
addr16
ds
dec
in
shll
sbb
sbb
mov
out
jp
aas
sub
mov
sbb
lock
mov
cmp
aam
fnstenv
movsb
mov
jnp
sbb
mov
mov
jmp
jnp
rcrl
leave
jl
sub
pop
movsb
mov
sbb
sbb
jne
jmp
std
rorl
and
ss
jp
das
scas
lea
gs
cmp
jb
sbb
dec
jp
xor
frstor
push
stos
dec
inc
adc
xchg
sub
adc
sbb
sub
inc
iret
mov
cmp
sarb
mov
jb
movsb
mov
inc
jmp
inc
test
loop
xor
aam
push
or
sbb
enter
hlt
enter
adc
sbb
mov
repz
cmp
inc
int
inc
fs
push
popa
pop
and
out
and
mov
dec
xchg
sti
in
jae
imul
xor
movl
inc
cmp
sub
cmp
xor
jno
mov
cmc
test
gs
sbb
push
push
and
push
lcall
popf
jbe
pop
lods
mov
add
pop
jne
mov
push
fld
cltd
je
mov
xor
jnp
mov
mov
mov
insl
pop
sbb
or
pop
gs
cwtl
sbb
cld
pop
mov
int
test
movl
xchg
pop
inc
mov
dec
inc
push
xor
mov
mov
xor
pop
and
pop
fucomp
adcl
cmp
sub
and
mov
xor
in
pop
gs
adc
mov
notl
inc
mov
adc
push
insb
and
js
xor
push
jle
mov
mov
cs
mov
cltd
push
addr16
negl
pop
outsl
mov
push
mov
int
and
mov
stc
pop
lahf
add
xor
fwait
cwtl
rolb
in
repz
dec
mov
pop
and
ljmp
popa
inc
push
sub
xor
scas
adc
popa
lahf
add
in
push
cli
int3
mov
insb
push
js
mov
and
imul
jmp
add
xchg
mov
xor
fsubr
mov
in
imul
push
dec
jmp
pop
cwtl
jg
insb
jmp
mov
iret
inc
lcall
out
jae
outsl
xor
aaa
or
cltd
or
push
xor
test
sti
nop
inc
sbb
in
lret
rorb
pop
ljmp
mov
aam
dec
cld
arpl
frstor
sub
lret
dec
xchg
jne
jb
and
mov
ja
rcr
stc
loope
xchg
inc
pop
or
aaa
adc
into
lcall
sbb
mov
add
mov
cmp
sahf
or
aad
fnstenv
flds
outsl
mov
mov
xchg
mov
lods
push
lea
nop
mov
or
mov
cmp
outsb
test
ret
hlt
nop
dec
aaa
popa
cmc
xor
pop
rolb
stos
insl
sbb
shl
mov
loop
stos
xchg
dec
clc
scas
je
mov
kandnw
fidivrs
cmpsb
paddsw
data16
jp
ret
mov
dec
inc
leave
pop
xor
push
inc
popa
fwait
int
xchg
aaa
pop
pop
push
dec
mov
test
stos
out
jmp
cmp
inc
sub
mov
push
aas
jne
mov
mov
jle
leave
jmp
adc
lds
add
jg
jmp
rorb
fsubr
sbb
lret
sahf
iret
pop
pop
mov
inc
out
adc
inc
mov
mov
pop
and
pop
fisubs
cltd
or
shl
cmp
jg
pop
imulb
cmp
incl
pop
push
and
push
sub
sahf
gs
aas
and
mov
sarb
pop
mov
repz
mov
mov
push
hlt
mov
mov
rcll
imul
jg
xchg
jmp
test
cs
xor
add
test
sbb
loopne
data16
or
daa
xor
sbb
pop
xor
fcmovnb
mov
push
aad
adc
movsb
es
mov
mov
stos
add
mov
out
std
xchg
or
cmp
sub
mov
push
mov
xchg
xor
pop
les
push
xchg
sub
or
sbb
sub
into
sar
or
lahf
rcrl
pop
jae
pusha
out
leave
mov
and
jecxz
cmp
jbe
insb
cmp
ret
mov
adc
jbe
push
push
push
into
fdivrs
mov
add
or
inc
jg
loopne
add
sbb
mov
xchg
fs
sbb
in
lea
jnp
xor
mov
icebp
dec
inc
imul
jo
lahf
sahf
je
push
call
imul
gs
fldt
and
push
or
jno
rcrb
cmp
cmp
xlat
mov
dec
fistl
adc
std
cmp
sbb
popa
sub
dec
cmp
in
sbb
lcall
roll
orb
ror
das
cli
inc
mov
int
inc
fmull
inc
ret
jns
in
fisubl
push
div
dec
mov
imul
or
xor
fdivs
inc
insb
sbb
sbb
mov
dec
lahf
xchg
sbb
sbb
hlt
mov
bound
inc
subl
pop
jns
sub
jno
pusha
sbb
test
xor
cs
lcall
xorb
adc
jae
jecxz
gs
ss
jo
xor
mov
sub
out
sbb
fdivr
xor
scas
jmp
mov
fisubrl
add
pop
cltd
imul
xor
lds
mov
pop
cmp
mov
rolb
or
das
int
lds
push
in
mov
xor
icebp
pop
int
mov
mov
sti
imul
mov
or
das
sub
test
in
pop
int
hlt
cs
sbb
sti
jae
adc
aad
ja
ret
sub
je
cltd
cmp
lcall
js
lock
in
jns
lods
cs
outsl
sub
stos
push
add
hlt
inc
mov
pop
insb
push
or
arpl
ja
jnp
xchg
sti
lds
push
ret
das
rcll
and
cmp
inc
adc
sahf
ret
leave
stos
jbe
nop
mov
std
adc
fiadds
inc
aad
out
out
in
pop
mov
xlat
and
lock
je
jmp
mov
lret
stos
insl
and
pop
mov
dec
insl
inc
cmp
dec
test
aaa
stc
scas
xchg
dec
jae
mov
test
and
test
lahf
jge
jbe
push
outsb
xorl
ret
cli
mov
fcmovb
imul
movsb
lcall
fnstsw
in
pop
push
push
outsb
xor
les
out
jecxz,pt
cmp
sub
xor
out
add
fsub
cld
xor
insl
inc
shll
sub
and
pusha
and
pop
js
jmp
outsb
mov
and
cmp
and
insb
loopne
xchg
jecxz
pop
lret
sub
ja
lods
dec
xor
pop
orb
popa
sub
lahf
or
cli
shlb
inc
dec
mov
fisubs
in
dec
dec
adc
inc
fucomip
sbb
xchg
sbb
xchg
xor
push
sahf
mov
mov
sub
pop
test
popa
leave
out
mov
stos
gs
push
add
orb
adc
or
scas
sub
jmp
outsb
sarl
add
cs
sub
pop
jge
or
aam
sub
fcoms
ficoml
add
mov
scas
mov
xchg
cmp
je
aas
addr16
pop
lret
jbe
mov
std
daa
mov
fmull
fsts
jne
fdivrs
inc
sub
mov
inc
outsb
or
jle
jb
push
mov
dec
fldcw
je
sarl
cmp
cltd
lods
jnp
xor
sbb
pop
jns
sub
xor
scas
cmp
mov
push
es
les
push
cltd
jne
imul
out
out
or
jno
sub
dec
push
cmp
mov
dec
pusha
inc
pushf
aad
mov
jg
lea
call
cmp
cmp
add
jae
pop
sub
mov
sub
mov
fs
data16
int
xor
mov
jae
or
sub
fidivrs
or
sbb
ja
lock
int
sbb
movb
cmp
repz
push
int
xor
add
dec
or
mov
sbb
imul
push
xorps
jns
dec
fisttpl
sbb
ja
or
mov
xlat
jae
or
jne
inc
fmuls
jmp
mov
js
insb
xor
xchg
sub
outsl
cmp
jmp
mov
dec
fs
lcall
popf
insb
dec
cli
lcall
add
gs
or
shll
xchg
das
leave
int
jo
mov
dec
push
cltd
sti
mov
shl
xchg
cli
and
mov
mov
add
cli
rcrb
xchg
xchg
cmp
jnp
lock
hlt
inc
in
cmpsb
imul
in
inc
sbb
adc
std
insb
incl
xchg
mov
sbb
push
jge
in
ja
sbb
inc
push
sarb
add
movsb
add
leave
les
test
sahf
mulb
in
adc
cmp
add
repnz
aad
mov
in
and
cvttps2pi
cmp
mov
push
int3
add
sub
test
or
cmp
push
ljmp
jmp
dec
pushl
or
in
incl
pop
jmp
and
movsl
ret
icebp
or
add
pusha
add
fildll
idivb
insl
inc
and
adc
sub
or
addr16
and
sub
mov
or
ljmp
movsb
dec
push
push
insb
iret
xchg
mov
pop
shl
cmp
fdivs
and
mov
icebp
lds
jnp
mov
sub
aas
ljmp
idivb
mov
in
stc
lods
leave
push
add
cmp
and
stos
daa
push
cmp
lds
mov
and
out
mov
hlt
or
mov
shl
inc
shl
sbb
adc
addl
pop
fldl
or
and
movsl
jno
out
out
test
xchg
xchg
bound
rclw
xrelease
icebp
pusha
dec
cmp
ret
cmp
cmp
cld
pop
rcll
scas
imul
ja
or
or
js
int
rep
flds
repz
xor
mov
fs
repnz
fisubrs
fs
cmp
jecxz
data16
out
inc
cmpsl
push
shl
jmp
dec
xor
repnz
js
leave
cmc
pop
mov
inc
in
xor
and
out
mov
in
or
push
stc
sbb
stc
push
xchg
int
ss
mov
mov
sbb
hlt
t1mskc
and
jbe
stos
std
clc
mov
cmpsl
push
clc
leave
mov
aad
mov
aad
enter
mov
or
test
das
sar
xor
cmp
jecxz
sahf
sub
mov
xlat
cmp
jp
push
inc
sub
or
and
pop
repnz
pop
and
pop
push
fnstsw
in
into
xchg
xor
adc
addl
adc
pop
mov
popf
mov
sbb
das
mov
xor
mov
cmp
cmpsl
pop
inc
negb
lods
pop
sbb
mov
mov
sar
movsl
pop
xchg
jecxz
repnz
jno
jecxz
addr16
movsl
add
std
mov
mov
cmp
cmc
mov
aas
inc
dec
mov
xor
mov
bound
xor
gs
cmp
cmpsl
mov
inc
adc
adc
pop
or
xor
movsb
sub
push
jp
ret
int
pop
or
sub
jle
test
negl
lcall
sbb
inc
mov
dec
lds
push
adc
sub
dec
cld
js
lock
movsb
pop
lahf
neg
or
dec
push
cmp
inc
or
lcall
stc
mov
mov
inc
inc
aas
je
outsl
inc
mov
cld
rcrb
dec
mov
mov
gs
sbb
mov
arpl
into
mov
rclb
mov
sbb
mov
mov
or
mov
push
cmp
jmp
sbb
inc
mov
sbb
inc
mov
sub
cmp
sbb
jmp
add
mov
es
loopne
es
mov
pop
cmp
ret
repz
push
inc
xchg
movsl
ret
adc
fs
vshufps
rorl
cli
aam
and
or
or
mov
push
inc
stos
xor
pop
daa
adc
ljmp
mov
pop
adc
lret
arpl
mov
cmpsl
bound
xlat
sbb
loop
add
mov
mov
scas
adc
jg
call
sub
in
call
pop
stos
or
mov
mov
mov
test
out
jl
xchg
jo
jge
and
sbb
test
or
test
adc
test
test
mov
inc
insb
ret
sub
packuswb
xor
dec
test
test
rorb
inc
pop
or
sub
lcall
inc
pop
add
cs
push
lfs
adcb
or
in
mov
iret
pop
sarl
cmp
bound
cmp
test
popf
jns
dec
in
sub
sbb
or
push
inc
adc
sbb
jae
std
sub
inc
rclb
or
cmpsb
in
shr
or
mov
and
xor
sbb
mov
or
jg
add
fldcw
fnstenv
les
fidivrs
mov
inc
es
or
pop
and
jno
cmp
les
cmp
xchg
arpl
mov
cmp
add
pusha
sti
inc
stos
pop
sbb
test
jle
popf
out
xorb
repnz
xor
sub
arpl
rcrl
or
arpl
mov
cmpsl
test
rorl
fcmovbe
test
add
ficomps
xchg
fisttpl
mov
jae
pop
push
fsubrp
aas
pop
inc
xchg
push
sbb
outsb
movsl
add
mov
jbe
loop
repnz
dec
lds
rolb
dec
mov
or
sahf
cmp
cmp
xchg
aas
out
or
test
jno
imul
push
push
dec
xchg
in
mov
lds
shlb
out
and
fstpt
rcrb
add
in
sbb
aaa
cmp
add
or
mov
add
enter
adc
dec
xchg
in
mov
loopne
stc
or
pusha
mov
and
jp
adc
loop
xchg
cmp
lds
jbe
fs
arpl
push
cmp
pop
enter
sbb
aad
ficoms
push
cli
mov
or
push
sahf
in
sub
sti
int
mov
adc
ja
cld
adc
lea
jno
mov
insb
add
in
mov
int3
in
mov
sbb
movsl
jnp
mov
xor
gs
jno
push
sub
sub
adc
push
aam
cmp
iret
lahf
arpl
cmc
lods
lock
jns
imul
sbb
int
out
lods
xchg
pop
out
test
loope
jno
dec
out
push
add
push
jg
lock
mov
inc
in
pop
adc
es
mov
rclb
fnstsw
pop
in
rorl
stos
test
pop
filds
clc
std
repnz
jmp
adc
add
or
inc
mov
jp
gs
mov
int3
sbb
and
out
arpl
pushf
or
cmp
dec
pop
pop
popf
mov
jb
cmp
lret
push
cmp
sub
sbb
std
push
movsb
nop
or
mov
filds
not
sub
push
fs
or
outsl
or
lret
lahf
mov
sbb
or
sub
leave
push
cmp
cmp
iret
fs
insb
xchg
or
pop
fwait
addr16
xor
xor
cmpsl
xchg
mov
push
xlat
test
mov
push
mov
push
fmull
imul
push
fsubrl
lds
and
lods
test
int3
mov
inc
cmp
push
sub
leave
cs
inc
lahf
and
push
push
js
data16
shlb
aas
dec
jnp
push
mov
ja
inc
in
push
or
lahf
mov
xchg
fisttpl
data16
jmp
cmp
test
sub
sbb
cmp
ficompl
and
test
lds
add
stc
cmp
adc
or
adcb
and
mov
cmp
lock
in
popf
pop
test
push
xlat
mov
in
adc
std
mov
xchg
leave
out
xor
gs
insb
je
dec
sub
or
loope
mov
mov
xor
ss
mov
mov
popf
xor
mov
mov
add
lods
jnp
test
outsb
imul
stos
push
xchg
test
enter
inc
add
ljmp
pop
xchg
cmp
loopne
pop
cs
sbb
test
push
leave
stos
out
push
jecxz
inc
ret
pop
subl
and
cmp
push
xor
jnp
jp
or
loopne
mov
int
aaa
mov
lock
mov
int
mov
or
cmp
leave
int
push
push
stos
mov
es
xchg
jno
sbb
sbb
mov
fmuls
inc
mov
les
popf
fmuls
mov
rolb
pop
insl
jg
stos
pop
mov
cld
arpl
mov
or
loopne
outsb
push
dec
in
pusha
ljmp
fidivrs
mov
add
test
pop
fldt
int
cmp
or
out
pop
xchg
cmp
roll
jmp
cmp
and
pop
in
popa
mov
mov
xchg
stc
dec
add
or
cmp
push
xchg
mov
decb
pop
orl
mov
js
ja
fistpl
repz
lock
push
jmp
scas
popf
lds
add
pop
lock
in
add
nop
js
cmpsb
jb
ret
jl
js
aas
cmp
lock
push
mov
inc
push
ja
mov
jno
fldcw
out
mov
mov
lods
gs
shrl
ror
xchg
scas
xlat
inc
sti
pop
in
int
pop
js
rorl
inc
mulb
xchg
inc
cmp
rcll
insb
pop
pushf
mov
xchg
call
jge
pop
sub
lock
mov
and
xchg
mov
mov
fiaddl
pop
in
jmp
mov
cmc
fscale
push
fnstcw
fs
js
mov
nop
js
insl
jbe
repz
sbb
arpl
fcomps
nop
js
out
mov
js
mov
push
imul
aam
aad
pop
add
inc
xor
data16
xlat
sub
xlat
outsl
cmp
outsl
cmp
outsl
cmp
call
sti
jno
in
leave
push
jno
or
sbb
jae
add
sahf
pushf
mov
add
insb
sub
icebp
cmp
clc
sub
jne
push
cwtl
roll
cmp
mov
or
nop
dec
and
gs
push
xchg
xchg
mov
outsb
mov
push
dec
and
xchg
mov
sub
sbb
cmpsl
sub
outsb
rol
repnz
f2xm1
mov
inc
fstp
mov
out
pop
das
push
push
xchg
outsl
add
adc
pop
pop
and
xor
test
adc
mov
jb
push
lea
pop
jg
inc
rcl
add
movsb
sub
push
outsl
push
jg
inc
ja
inc
adc
jl
mov
add
push
or
jmp
add
push
rolb
loope
mov
ljmp
sarl
xor
mov
in
mov
sahf
sub
pop
sbb
push
lea
inc
js
insl
jmp
ljmp
fnstsw
add
xor
loop
mov
cmp
mov
xor
push
iret
cmpsl
xchg
ror
inc
data16
push
roll
sbb
call
aas
push
insl
inc
popf
sbb
insl
mov
xor
sub
cwtd
rorl
mov
lods
dec
mov
mov
mov
insl
movsl
jno
cmpsl
cli
insl
push
test
insl
jge
jns
mov
xorl
adc
ret
sub
jae
adc
xchg
push
mov
leave
add
repnz
add
lcall
in
fldcw
and
or
push
push
inc
push
lea
sub
add
add
lret
or
jbe
push
pop
sbb
out
jg
cmp
out
sub
push
add
fwait
out
inc
pop
or
popa
jnp
out
mov
mov
mov
out
and
cmp
stc
or
cmp
les
loope
sbb
js
insb
fnstenv
sti
out
push
enter
mov
in
mov
mov
mov
rorl
stos
mov
int
mov
popf
add
push
sub
mov
in
mov
xchg
push
cld
mov
cltd
fistl
cmp
jp
xor
jecxz
movsl
push
mov
jns
jge
push
lea
ret
fmulp
mov
mov
push
add
daa
adc
cmp
xchg
addr16
xlat
jbe
sub
pop
add
movsb
add
shll
in
and
sbb
aam
fimull
fisttps
add
dec
xlat
and
jns
iret
in
push
fwait
mov
push
sbb
push
sub
dec
sbb
sbb
or
sub
orb
jecxz
cmp
cmp
push
in
jecxz
jno
sahf
insl
xor
jecxz
push
sub
jecxz
jle
mov
jecxz
ja
mov
stc
call
popf
adc
cmp
add
lcall
cwtl
es
into
fisttpll
or
loop
add
imul
push
stos
xchg
mov
aam
sub
and
cmpb
test
xchg
popf
insb
iret
loop
sbb
xchg
mov
lods
fadds
jg
lock
nop
lcall
add
jl
loopne
jb
push
out
inc
mov
mov
fcmove
xor
pop
inc
outsb
and
mov
mov
jmp
mov
out
mov
xchg
jmp
int
mov
gs
insb
xchg
inc
lds
std
mov
dec
jbe
xor
call
jo
hlt
call
cwtl
sbb
xor
in
call
cmp
sbb
subb
faddl
mov
std
shrb
repz
mov
push
jo
mov
call
cmpsb
mov
cmp
ja
or
cwtl
jno
shl
addl
sbb
jae
pop
test
cmpb
mov
test
test
sbb
dec
adc
imul
sbb
jb
fwait
lahf
aaa
mov
test
aas
daa
mov
test
daa
ror
xor
ret
pop
inc
xor
and
mov
into
test
xchg
push
repnz
ds
insl
mov
cmp
sarb
out
mov
bsr
mov
jae
add
mov
mov
popa
cmp
fldl
xchg
or
mov
mov
sarb
mov
adc
ret
rol
and
mov
mov
leave
cmp
cmp
lcall
aad
push
fwait
cmp
stc
xor
jnp
out
movsb
les
lret
mov
mov
cld
cmpsl
xchg
into
out
and
sbbb
mov
mov
push
cmp
cmc
pop
cltd
xor
inc
outsb
shlb
mov
enter
mov
fnstenv
jl
mov
pop
xor
ja
int
cmpsb
pop
shr
mov
fistl
lahf
mov
jne
out
ret
enter
cld
push
mov
sub
rcrl
mov
adc
testb
test
sub
or
lret
insl
mov
cmp
popa
nop
testl
adc
xchg
push
out
cmp
mov
add
pop
sar
stc
inc
scas
dec
sub
xchg
ret
mov
dec
and
movsl
movsl
popf
mov
mov
or
inc
mov
outsl
push
sbbb
push
ss
mov
or
rorl
int3
dec
rcrl
adcb
loope
jl
leave
jmp
nop
cmp
mov
cmp
jl
adc
pop
push
mov
scas
jbe
xor
movsb
aad
shl
or
jbe
stos
adc
mov
mov
dec
popf
rclb
push
mov
stos
jns
jge
insl
lods
push
cmp
sub
mov
insb
mov
cmp
mov
push
mov
cmp
sbb
fimull
jns
mov
sub
cmc
xchg
dec
test
jge
insl
xor
jbe
cmp
dec
pop
mov
dec
cmp
push
mov
jbe
sti
test
push
fbstp
test
insl
jno
adc
dec
sbb
xchg
jo
pusha
adc
xchg
orb
cmc
push
xchg
jmp
mov
mov
in
dec
repnz
test
js
jg
and
addb
inc
lds
sbb
cmpsb
jbe
cmp
add
sbb
in
push
sub
sub
mov
dec
cmp
mov
mov
cli
in
xchg
mov
adc
insb
xor
adc
inc
inc
rorb
cmp
and
mov
inc
sti
repnz
inc
add
dec
add
cs
imul
in
cmp
mov
mov
sbb
xchg
bound
xor
mov
jb
sbbb
imul
test
add
scas
movsb
inc
xchg
sub
cmovae
jl
jmp
idivb
mov
jnp
jecxz
pop
cltd
jns
ja
int
mov
jne
imul
sbb
shl
pop
jl
push
fnsave
or
insb
adc
mov
inc
mov
adc
add
or
sar
cmpsl
mov
fcoms
push
out
mov
mov
mov
mov
stc
or
lods
cwtl
lcall
mov
scas
jl
outsb
push
pop
js
ljmp
jmp
cmp
pop
ja
push
mov
lea
cmp
xorl
push
leave
pop
sub
in
mov
or
hlt
jl
bound
jg
cmp
xorl
jae
push
call
or
push
push
push
pop
jp
xlat
jge
cmp
mov
sub
mov
shlb
jp
and
fstp
and
cli
push
xchg
out
lock
sbb
in
bound
mov
data16
lret
test
pushf
in
and
loopne
test
jge
test
mov
imul
ds
mov
mov
or
inc
mov
cmp
out
pop
cmpsl
sbb
pop
lods
std
pop
mov
addr16
mov
push
lods
mov
jmp
mov
mov
lods
test
cli
rcll
mov
inc
xor
sub
int
jns
fbld
lods
fstps
mov
out
in
addr16
mov
push
lods
movsl
pop
loope
shll
mov
mov
lahf
and
jns
dec
int3
mov
jp
xor
sub
mov
xor
out
lea
dec
stc
leave
jp
xor
xchg
jg
add
xor
mov
xor
imul
stc
movsl
lahf
popa
jmp
cmp
cmpsl
es
leave
out
cmp
shll
lods
in
mov
mov
push
push
gs
mov
daa
lods
or
aaa
daa
pop
jno
mov
jnp
xor
inc
adc
inc
lret
les
xor
push
add
outsb
sub
cmp
dec
mov
orl
xchg
jbe
dec
popa
and
insl
nop
int
addl
push
inc
dec
mov
add
jae
add
cli
out
es
mov
mov
cmp
xchg
les
jecxz
mov
dec
leave
push
dec
xchg
dec
inc
outsl
shl
push
dec
nop
push
adc
repnz
cmp
test
cmpsb
test
push
jnp
int
xor
sub
lds
add
adc
jg
pop
lock
aad
mov
addl
jecxz
xor
lret
stos
dec
jb
xchg
dec
repnz
mov
hlt
jbe
insl
sbb
sub
mov
sarb
mov
cs
loop
sbb
fisttps
aam
push
test
mov
pop
loopne
das
cs
sbb
lahf
mov
sbb
push
cltd
ja
and
das
fstl
lds
sub
out
cmpsb
rclb
mov
push
xlat
sahf
test
ja
push
into
loopne
dec
inc
mov
addl
cs
loop
xor
inc
nop
cmp
into
enter
call
testl
mov
jmp
movsb
push
xor
push
xorb
mov
cmp
adc
faddp
mov
std
push
xchg
sub
push
dec
cmp
push
push
lds
stos
or
xchg
inc
cmp
les
xchg
push
gs
ret
inc
pop
xchg
js
scas
les
jle
jl
push
decb
mov
aam
imul
fwait
das
imul
insb
int
xor
xchg
popf
cmp
dec
addb
mov
pushf
ret
es
ret
nop
dec
cld
cmp
les
ja
or
adc
inc
mov
fidivrl
xor
mov
stc
dec
sub
ja
sub
cmpsb
leave
jle
jnp
dec
ja
or
pop
test
mov
mov
ss
imul
lret
jge
push
push
mov
hlt
mov
daa
xor
lahf
movb
push
enter
repz
hlt
std
push
xchg
dec
push
and
insb
scas
jnp
cwtl
jmp
sti
adc
pushf
pop
mov
and
xor
pop
dec
ljmp
sub
aas
push
cmp
sbb
aas
mov
sub
sbb
dec
push
lcall
fistl
int
sub
lret
or
lcall
aam
shr
je
lret
ficompl
jnp
dec
jns
and
dec
adc
mov
pop
ss
xchg
push
dec
mov
ss
ret
mov
data16
inc
xchg
jge
sbb
mov
cmpb
outsb
jne
arpl
in
icebp
out
cmp
inc
xlat
in
adc
jns
mov
xchg
shll
cmp
xchg
sbb
rcrb
mov
shll
xor
scas
call
xchg
push
popf
fistl
jmp
enter
mov
pop
aas
jae
push
int3
sbb
add
jbe
sub
inc
pop
sbb
inc
and
mov
lcall
sbb
inc
push
lods
sub
mov
cmp
sub
xor
pushf
mov
mov
or
inc
sbb
arpl
and
mov
mov
outsl
push
lcall
mov
sub
outsl
jnp
jmp
or
sarl
sahf
outsl
test
das
or
sbb
xor
push
ja
or
or
mov
mov
xlat
push
mov
xchg
push
outsb
test
mov
and
cwtl
sahf
ret
cs
cltd
mov
and
enter
aad
mov
dec
sub
mov
mov
mov
sahf
data16
ret
inc
push
arpl
loope
pop
push
mov
fisubl
xor
popa
adc
xchg
mov
sub
sub
xchg
enter
insl
mov
int
or
push
sub
xchg
add
pop
mov
sub
mov
fsubs
jle
dec
sbb
movsb
add
hlt
addr16
sahf
mov
lea
insl
ficoml
repnz
xor
jl
or
movsb
or
adc
mov
inc
mov
xor
out
testl
sbb
in
dec
enter
out
mov
or
enter
scas
mov
fnstenv
push
mov
mov
and
mov
popl
xchg
xchg
xchg
sti
dec
in
dec
inc
xchg
add
or
into
jg
je
adc
insl
xchg
push
test
or
cmp
mov
ret
adc
sub
and
lret
add
adc
ret
sbb
cmp
out
cmp
shrb
out
dec
cmp
jecxz
iret
lahf
mov
inc
xlat
mov
out
pop
dec
cwtl
inc
fistps
jl
cmp
xchg
sub
xchg
repnz
jge
fcomip
mov
int
xchg
dec
lret
stc
test
call
nop
jb
push
aas
fs
jmp
mov
cld
aaa
sbb
cmp
dec
cmp
push
lds
mov
dec
fwait
imul
sub
mov
sub
inc
sbb
dec
pusha
xor
and
cmpb
sub
mov
ss
int
xchg
and
sub
xchg
sbb
adc
and
add
add
repnz
jg
popa
mov
scas
sbb
test
inc
stos
sbb
jge
ss
sarb
pop
jge
xchg
in
push
cwtl
lea
iret
and
sub
adc
or
std
es
out
je
add
jmp
dec
ja
adc
cltd
dec
das
push
xchg
and
xchg
outsb
cmp
cmp
adcb
dec
cli
enter
in
popf
xchg
xchg
mov
inc
mov
outsl
jne
leave
adc
xchg
lods
pop
jl
mov
out
arpl
js
mov
push
mov
xchg
inc
sbb
movsb
xchg
iret
rcrb
repnz
jge
std
cmp
jmp
or
sbb
jle
cmp
mov
add
sahf
das
iret
push
sub
cmpsb
or
scas
push
mov
push
cmp
movsl
mov
dec
jle
pop
into
pushf
adc
lods
jmp
in
push
sub
sbbl
mov
or
lea
rcll
pop
dec
and
push
notb
mov
add
negb
cmp
test
xchg
leave
cmp
push
lds
xchg
mov
xor
mov
out
icebp
jl
xchg
push
mov
and
ret
dec
mov
adc
test
mov
lret
mov
sbb
stos
int
and
int
pop
dec
jo
pop
jae
stos
out
inc
push
mov
fstps
mul
and
sbb
inc
mov
mov
and
movsl
out
jmp
jp
xchg
shll
and
sub
xor
cwtl
lods
sbb
adc
sbb
push
in
orb
xlat
out
add
dec
sbb
sub
scas
jg
xchg
sub
cmp
push
xchg
test
mov
dec
mov
cmpsb
mov
ja
mov
mov
int
or
cmpsb
cli
mov
dec
call
inc
fildl
xchg
pop
aam
cmp
mov
cmp
or
pop
lods
jge
test
adc
addb
mov
mov
andl
mov
repnz
into
jbe
loopne
adc
fadds
inc
and
push
xchg
mov
mov
jae
xor
push
add
and
icebp
pop
aas
insl
std
xor
cmp
push
xlat
outsb
out
fwait
ja
hlt
jmp
cs
mov
or
dec
gs
inc
and
inc
rorb
cli
jge
dec
testb
jecxz
pop
fwait
je
push
and
jl
xchg
stc
mov
pop
enter
or
jne
aad
pop
xor
mov
cmp
mov
push
jecxz,pn
and
movsl
push
jg
or
adc
test
add
cmp
gs
stc
cmc
lret
jg
or
xor
inc
adc
fildl
inc
out
mov
sbb
scas
push
mov
fdivr
cmc
out
mov
nop
mov
sbb
subb
popa
cmp
incl
adc
shll
imul
sub
cmpsb
pop
or
fisubl
rorb
popf
pop
jno
sbb
adc
adc
sbb
inc
mov
lods
or
push
lcall
sbb
cmp
jmp
mov
add
lods
jno
addl
or
push
movsb
pop
adc
xor
int3
push
test
cmpsb
iret
jns
sub
dec
cmp
rcrl
lret
pusha
pop
push
std
iret
repz
int
mov
lds
loopne
xor
aam
push
cmp
mov
fwait
mov
push
pushf
and
das
pop
inc
push
movsb
add
xchg
mov
xor
pop
nop
push
ds
or
mov
rcl
sub
cltd
or
ss
lock
cmp
ljmp
sub
jge
jmp
xchg
ja
jnp
inc
push
push
flds
or
mov
data16
and
jo
shrb
outsb
mov
out
sub
sti
lods
push
pop
push
ret
fisttpll
inc
subb
jmp
mov
test
mov
test
sub
inc
std
mov
add
add
int3
push
scas
cmpsb
cmpsb
inc
lds
test
jp
les
mov
xchg
push
push
in
push
lcall
cld
hlt
mov
imul
fstl
arpl
pop
imul
pop
iret
push
cmpsl
test
mov
sti
stc
xchg
mov
jge
inc
mov
ficomps
imul
ja
cmpsl
in
sbb
dec
ja
push
push
mov
icebp
mov
addb
mov
mov
push
sti
xor
inc
lcall
shll
out
xor
push
mov
cmpsb
cmpsl
in
jl
out
pop
mov
adc
or
mov
data16
cmpsb
scas
add
repz
inc
xor
rorl
inc
push
sbb
pop
mov
loope
popf
popf
test
fisubs
sub
jge
xchg
or
js
insb
xor
jge
xchg
js
aas
cmp
sub
add
ljmp
or
jg
and
fsubs
lcall
or
gs
fmul
cld
scas
out
cmpsl
sub
mov
sub
or
std
mov
stos
std
cmp
dec
lret
push
pop
mov
ret
sub
jnp
daa
inc
popf
ret
xchg
pusha
icebp
outsb
sbbl
jae
add
xchg
adc
mov
and
ds
andb
pop
xchg
roll
sub
or
add
ffreep
lock
in
push
push
pushf
neg
mov
insl
imul
leave
pop
sub
testb
and
xchg
mov
xchg
lret
ss
xchg
mov
lea
jno
in
pushf
cwtl
or
ds
mov
fnstenv
sbb
or
mov
jb
movsl
in
cwtl
sub
jg
push
mov
inc
jo
into
add
gs
out
call
std
aad
aam
js
lea
and
fucomi
pop
gs
cmp
je
int3
adc
scas
leave
cmpl
mov
icebp
sub
xchg
lods
push
xchg
fdivrs
pop
or
adc
push
and
sub
fnstcw
fidivs
mov
insl
enter
dec
mov
ja
mov
pop
jp
mov
test
jno
xchg
xchg
inc
imul
mov
mov
pop
pop
test
cmpsl
pop
stos
mov
xor
jno
add
cmpsl
cmp
inc
pop
push
cmp
repz
popf
mov
test
xchg
stc
int
jg
in
jae
cmp
adc
nop
daa
inc
ja
xchg
cld
mov
jmp
imul
fidivrl
data16
jg
cmp
xor
mov
cmp
push
jb
aam
xor
sub
cmp
lods
jg
andb
add
push
xchg
pop
dec
inc
call
jne
out
mov
inc
hlt
push
outsb
les
testl
lcall
insb
mov
or
lea
or
sub
add
jne
sub
mov
pop
pop
push
ret
xchg
fsubl
les
fiaddl
adc
pusha
push
cmp
test
and
popf
add
je
out
xchg
je
cmp
scas
cmp
xor
scas
jg
aam
mov
lea
pusha
aad
sbb
or
xchg
jns
lcall
ljmp
pushf
dec
or
sub
mov
jae
pop
xorl
dec
mov
out
mov
cmpsl
mov
and
jp
mov
sub
adc
es
jae
dec
xor
orl
mov
pop
and
pop
or
jecxz
push
sbb
jb
fs
dec
dec
call
test
jmp
xchg
mov
mov
pop
or
xchg
push
icebp
push
lcall
ret
jns
inc
jnp
xchg
or
fdivr
mov
addl
jnp
sbb
xor
jp
mov
out
imul
fldenv
and
aad
mov
inc
js
inc
lods
cmp
sbb
js
cmp
xchg
xor
add
sub
xor
jbe
dec
and
mov
fs
mov
dec
shlb
jne
sub
dec
es
loopne
scas
jmp
dec
dec
scas
adc
aam
sbb
push
xor
int3
cmp
arpl
stc
add
fisttpll
insb
xchg
lea
jae
stc
jle
js
mov
inc
out
fdivs
fildl
add
jnp
imul
stc
cmpsl
push
loopne
jp
and
lds
sahf
cmpsb
jb
xchg
loopne
ja
add
mov
push
lea
inc
cs
scas
enter
fnstcw
mov
jbe
jbe
pop
int3
mov
lds
lea
scas
insb
adc
add
mov
mov
mov
out
imul
inc
inc
imulb
push
cwtl
enter
test
dec
test
cmp
loopne
cmovno
mov
mov
xor
cs
cmp
pop
sub
fiaddl
ds
adc
shrb
test
jnp
dec
mov
cld
or
loop
mov
push
mov
testl
lret
adc
jmp
jg
jne
jns
out
test
outsb
mov
out
ret
or
arpl
pop
push
mov
pop
mov
add
mov
test
pushf
mov
sarb
rcrb
mov
mov
jno
mov
cmpsl
out
popf
iret
out
push
ss
ja
xchg
add
xor
loope
add
aaa
dec
movsb
push
inc
inc
push
adc
mov
aaa
add
out
outsb
mov
faddp
mov
cltd
lods
mov
push
stc
jp
xor
ljmp
cmp
adc
adc
or
inc
and
pop
test
push
out
imul
cmp
call
mov
aaa
add
or
ja
cltd
adcb
fndisi(8087
sub
orb
or
nop
xor
sub
subb
daa
push
hlt
outsb
out
xchg
icebp
pop
xchg
xor
mov
popf
mov
cmp
mov
decl
mov
mov
sub
pop
pop
pop
test
jb
aaa
add
movsl
insb
mov
sub
push
popf
mov
xor
movsb
push
std
stc
lcall
sbb
andb
push
daa
jle
dec
xchg
adc
loop
jno
cmp
je
xchg
push
daa
cld
cmpsl
mov
mov
ss
lcall
loope
dec
sub
jnp
and
aam
or
cmp
sbb
mov
mov
xchg
sbb
addb
push
mov
in
mov
scas
idivb
adc
push
in
dec
mov
mov
int
mov
sti
or
js
jmp
push
add
arpl
test
push
adc
pop
inc
imul
cmp
and
fs
repz
je
stc
rcrl
dec
hlt
dec
push
sbb
push
or
xchg
out
push
and
movsb
xor
nop
add
adc
aaa
imul
cli
or
aas
push
sbb
in
call
cmp
insb
lcall
push
mov
xorl
pop
lds
idiv
andl
pop
mov
rcl
mov
andl
pusha
ja
or
test
sub
inc
fs
je
pop
stos
jb
mov
add
add
ss
mov
in
xchg
aas
pop
lcall
cltd
ss
or
ds
adcb
cmpl
add
mov
mov
fdivs
mov
loope
cmp
mov
mov
out
test
call
imulb
shll
or
mov
or
ficomps
add
ret
and
mov
jmp
push
or
push
mov
subl
stos
or
test
xchg
jae
rcrl
clc
push
outsl
insb
cmp
aas
int
xor
sbb
sub
lcall
cmp
sbb
aas
stc
xchg
lea
lods
rol
sbb
push
outsl
insb
push
jno
call
add
in
loope
xchg
mov
pop
xchg
mov
jo
out
fcmovnu
gs
sub
mov
or
mov
call
mov
les
dec
inc
inc
clc
mov
mov
fdivrs
push
hlt
insb
mov
jmp
in
test
and
nop
mov
cmp
in
mov
cmp
adc
mov
enter
push
call
and
cmp
inc
lcall
test
mov
dec
or
adc
ss
dec
repnz
mov
mov
inc
jb
orl
repnz
pop
push
mov
into
push
ret
and
jae
push
sbb
sub
cmp
cli
push
sahf
test
fisubrs
fldcw
ja
stc
jae
and
cmp
pop
sub
outsb
mov
cmp
and
inc
adc
aad
cli
out
jns
repnz
cmpsl
ss
dec
mov
mov
jne
pop
push
ja
cmp
push
cmp
insl
adc
shrl
lods
ljmp
aaa
ljmp
pusha
cmp
aaa
push
icebp
cmp
pop
mov
movsb
push
fwait
mov
ret
lods
mov
test
jmp
ljmp
xor
sub
mov
cmp
xchg
mov
push
cmpsl
das
aaa
imul
sbb
ss
or
push
jnp
push
xchg
xchg
dec
xorb
mov
xchg
xor
test
std
cltd
sbb
sub
in
cmp
testl
jb
cwtl
mov
fisttpl
and
cltd
jns
aaa
in
rcl
or
popa
xor
adc
adc
popa
aad
jns
add
cmpsb
dec
push
mov
xchg
popf
jp
lea
cmp
and
enter
mov
dec
pusha
arpl
imulb
es
ds
adc
inc
es
xor
or
sbb
xchg
dec
cltd
in
rorb
xor
movsb
sbb
cmp
cmpsl
jl
stc
andb
mov
lods
pop
sbb
cld
add
jmp
stc
cmp
test
mov
maxps
or
or
pop
aas
or
xchg
sbbl
cmp
leave
clc
ss
pop
jg
push
inc
in
je
std
inc
enter
cmp
sti
je
adc
add
pop
and
repz
pusha
pop
mov
mov
jns
xchg
adc
daa
pop
adc
ja
cmp
rorb
xchg
sbb
mov
jg
fdivs
ds
popf
cmpsb
inc
xor
mov
push
push
ret
inc
cld
cmp
fisubrl
pop
push
cmp
xor
dec
fildll
xor
icebp
push
ret
add
idivb
add
sti
scas
sbb
in
push
sub
icebp
insb
xor
lcall
mov
jb
iret
jmp
xchg
xor
stos
jbe
sbb
lahf
cltd
dec
xor
fwait
xor
pusha
inc
adc
mov
pop
mov
pop
push
inc
orl
out
je
dec
aas
and
cmp
mov
dec
nop
mov
int
sbb
push
dec
loopne
loope
and
scas
add
xor
xor
call
adc
dec
inc
or
push
outsb
out
add
push
mov
dec
inc
push
and
cmpsl
push
push
pushf
repz
xorb
out
xchg
jo
jno
pop
sub
fs
repz
pop
movsb
sbb
sub
mov
add
repz
fmull
notl
mov
push
jle
fstp
or
movsb
mov
mov
fs
daa
leave
cli
cmp
pop
and
das
or
lea
jb
xchg
sub
inc
jg
les
jae
aad
fidivs
mov
add
push
inc
or
in
jnp
sti
fstpl
loopne
ror
lods
sarb
lods
pop
pop
push
fs
fwait
cmp
sbbl
pop
mov
xchg
jle
and
stc
in
movsl
js
repz
mov
cwtl
xor
lods
movsl
js
stc
cmp
imul
mov
and
push
push
cltd
pop
shlb
repz
mov
mov
jp
jle
mov
dec
sub
jbe
lahf
adc
iret
pop
cmp
adc
push
sub
xchg
iret
repnz
push
data16
test
xor
inc
sub
es
push
shll
cmc
fcmovnbe
mov
jmp
mov
push
inc
test
jo
imul
cmpsl
mov
insl
das
data16
shrb
dec
mov
sub
insl
sbb
jbe
lds
into
adc
sub
fwait
insl
fdivrp
fstl
mov
pop
stos
push
in
sub
test
push
mov
imul
push
insb
pop
xchg
test
inc
sbb
insb
sti
inc
mov
jmp
mov
fwait
jmp
cmp
bound
cli
mov
push
mov
dec
clc
inc
adc
shll
sarb
popa
je
cmp
dec
shll
ljmp
xor
mov
imul
shrb
and
inc
and
in
jnp
leave
fisttpl
dec
enter
mov
imul
cmpl
inc
xchg
mov
mov
and
insl
and
push
xor
mov
cmp
out
test
fidivrs
mov
lret
sbb
ret
andl
dec
call
push
in
pop
inc
mov
mov
pop
imul
pop
dec
mov
jl
xor
add
mov
sbb
jnp
xchg
lret
jle
inc
dec
in
push
jb
mov
mov
iret
ret
fdivrs
orl
jno
test
dec
sbb
stos
push
sbb
push
ljmp
mov
adc
or
push
pop
push
out
sub
sbb
stos
adc
cmpsl
stos
ds
ss
fisubrs
or
mov
sbb
insl
mov
fstpt
xchg
xor
push
fcoms
movsl
cmpsb
and
jbe
mov
int
xchg
adc
dec
mov
je
and
jg
xor
fdivrs
and
push
ss
lret
stos
outsl
cmp
out
daa
cmpsl
dec
or
cmp
outsl
stc
sub
jno
sbb
jmp
mov
add
std
int3
adc
sbb
mov
adc
aam
rorb
test
or
ret
jb
int
outsb
mov
jmp
xor
push
lods
or
scas
jae
xlat
sbb
inc
cs
cmpb
inc
ds
dec
sub
scas
cmp
pop
and
fcompl
shlb
cli
xchg
cmp
js
sbb
mov
inc
gs
dec
mov
hlt
inc
es
push
aad
sbb
xor
stos
mov
mov
sbb
jp
cmp
gs
int3
mov
cli
frstor
outsl
pop
mov
sbb
das
in
xchg
pop
cmpsl
add
test
sub
cmp
push
pushf
dec
lods
fisubl
cmp
fs
fnclex
mov
lcall
fwait
inc
lret
sub
or
pop
cmp
adc
jb
xor
mov
xor
push
inc
mov
arpl
arpl
sbb
dec
mov
or
aaa
arpl
push
cwtl
mov
push
jge
jge
mov
ret
push
rolb
idivb
adcb
jmp
clc
mov
sub
data16
arpl
fld
mov
jbe
push
daa
cld
fldenv
shr
pushf
clc
ret
mov
add
dec
push
insb
bound
scas
jmp
ja
mov
mov
xchg
stos
add
mov
sub
fsubrs
in
push
call
cmp
adc
mov
imul
mov
cmp
xchg
cmp
adc
adc
xchg
and
notb
push
jmp
pmaxsw
stc
push
ret
inc
or
icebp
mov
outsb
shr
sub
popf
push
mov
test
and
cmpsb
xchg
pop
ja
inc
xor
leave
inc
push
mov
push
scas
mov
sbb
mov
les
cmpsl
mov
inc
xor
pop
push
push
mov
and
pop
inc
jns
insb
flds
out
and
sub
in
pusha
call
int
cmpb
inc
pusha
outsb
gs
xor
enter
scas
add
inc
lods
mov
outsb
pop
adc
push
add
fildl
das
mov
jp
jb
sbb
and
data16
sub
jmp
ficompl
lret
rcrl
mov
out
and
fldcw
mov
adc
xchg
cmpsl
push
out
mov
mov
cld
mov
or
clc
push
popf
fists
ljmp
mov
inc
ds
in
sbb
movsw
mov
xchg
mov
xor
adc
jo
cmp
stc
gs
cmp
outsl
push
add
adc
mov
mov
aaa
mov
aas
cmp
imul
push
out
movsb
shl
adc
or
add
adc
cmp
in
shl
adc
mov
arpl
mov
push
mov
rolb
dec
jle
adc
pop
in
mov
lea
pop
jnp
mov
insb
arpl
push
xchg
push
les
cmp
cmp
inc
mov
mov
sub
sub
jge
cld
xchg
inc
mov
loop
in
xorb
push
lea
xchg
pop
push
and
stos
cmp
lods
rcrl
les
mov
lret
lret
or
inc
addb
inc
insb
std
cmp
cltd
sub
je
dec
inc
pop
fnstcw
sub
pop
pop
inc
repnz
add
add
fwait
mov
iret
push
push
ret
push
nop
cmpsl
or
inc
pusha
push
push
mov
outsl
xor
xor
xor
and
repz
pop
xor
inc
lret
scas
inc
push
gs
insb
mov
insl
mov
je
lea
xchg
loope
cmp
inc
xor
inc
jno
pop
sbb
xchg
jnp
scas
movsl
dec
je
lods
or
jl
loopne
rorl
adc
jl
loopne
or
xor
ljmp
in
test
jae
hlt
in
mov
pusha
fcmovnb
call
xor
andb
filds
cmp
or
cmp
xchg
jo
sbb
frstor
and
insb
cmpsl
xor
ja
jg
pop
aam
xor
in
cmpsl
push
gs
push
and
sbb
xor
or
cmp
cmp
inc
in
fistl
sbb
sbb
inc
loope
mov
and
int
and
insb
ljmp
fcompl
dec
test
xchg
mov
fmuls
xchg
mov
fdivr
xchg
cmp
and
cmp
outsl
mov
arpl
addl
mov
stc
dec
sub
xor
adcb
dec
mov
jnp
adc
test
movsb
cmp
push
push
das
cmp
int
scas
mov
mov
jae
dec
jb
pop
rol
push
mov
cmp
sub
add
cli
sbb
inc
insl
push
iret
lds
inc
mov
inc
int
aaa
xchg
inc
lcall
enter
adc
inc
push
aaa
dec
dec
sbb
mov
xor
sti
adc
subb
dec
mov
jle
cld
je
inc
cmp
inc
dec
ss
inc
mov
adc
test
jge
jecxz
int
ss
pusha
inc
cmp
dec
stc
dec
movsb
repz
sbb
or
dec
and
mov
pop
ss
pop
and
adc
mov
sub
dec
mov
inc
inc
fsubrs
cmpsl
out
lock
movsb
lock
rorl
repnz
push
movsb
dec
aas
push
push
mov
cmp
test
push
sub
and
sbbb
out
pop
mov
and
inc
outsb
iret
push
lods
sbb
dec
das
dec
sub
mov
sub
xor
and
nop
out
xchg
dec
push
sbb
pxor
clc
mov
dec
repz
mov
shl
sub
shll
sbb
js
loop
in
push
dec
inc
sub
pop
or
mov
popa
mov
stc
xor
scas
jne
inc
nop
dec
push
daa
pop
push
jae
les
test
mov
jnp
fcoml
sbb
stc
call
ss
pop
shrb
lahf
dec
jae
cmc
icebp
in
jns
in
fimuls
cmc
sub
xlat
push
in
sbb
popf
js
insb
in
sub
aad
out
adc
mov
dec
mov
sub
iret
xor
scas
in
lock
cmp
lcall
jge
int
dec
add
int
dec
ret
in
xor
fsubp
fdivr
int
or
les
mov
js
mov
repnz
add
adc
cmp
fisubrl
cmp
ret
dec
push
or
xchg
xorb
and
sub
jl
or
imul
mov
ss
dec
lea
cli
inc
and
lock
push
std
aad
xor
push
rcr
loope
aad
adc
xor
dec
mov
insl
dec
loope
cmp
cmpsl
popf
js
xchg
call
inc
mov
mov
nop
ljmp
or
dec
mov
or
push
mov
sbb
or
out
xor
mov
dec
or
aaa
out
mov
dec
jns
mov
dec
cwtl
pop
imul
xchg
pop
add
or
repnz
jge
push
push
xor
mov
add
das
jnp
ljmp
or
movsb
jne
xor
mov
cmp
push
rorl
arpl
lods
sub
daa
and
mov
mov
push
dec
add
add
test
jle
dec
stos
jns
cmp
ss
jns
pusha
push
and
or
outsl
mov
imul
popf
add
fisttpl
xor
inc
xor
pop
mov
loop
pop
mov
adc
and
mov
test
cpuid
push
cltd
insb
out
scas
scas
popf
xor
clc
mov
in
cmp
jnp
pop
mov
bound
shrb
mov
mov
push
stc
mov
add
arpl
fs
fisttps
ret
orl
dec
cmp
and
dec
xchg
stc
cmp
rorl
mov
jmp
adc
out
pushl
inc
scas
pop
xchg
ljmp
pop
push
frstor
cmp
ds
push
fcomi
test
dec
aaa
mov
jmp
lahf
dec
add
and
int3
sub
pop
movb
shlb
jp
or
scas
inc
jbe
scas
dec
ret
dec
in
inc
or
cmpl
sarl
int3
negl
add
inc
cltd
sbb
aas
dec
cmp
sub
xchg
call
imul
dec
sub
int
imul
sbb
inc
roll
jo
dec
mov
in
aaa
sbb
loopne
pushf
mov
add
xlat
cmpsb
push
jl
int
jbe
imul
mov
pusha
mov
popf
out
push
inc
negl
push
sbb
cmp
xor
pop
aaa
xor
dec
insb
adc
add
xchg
scas
int3
sbb
into
pop
xor
cld
jno
fimull
pop
cmp
cmc
repnz
xorl
push
inc
or
cltd
jno
dec
sbb
outsl
or
jae
ljmp
test
in
xor
pop
mov
aam
mov
jno
fwait
sbb
pop
cmp
adc
push
cmp
adc
xchg
add
xor
test
into
subl
fs
ss
pop
xor
popa
mov
cmp
xor
orl
loope
negl
jl
arpl
xchg
jno
xlat
aas
xchg
dec
cmp
pop
cmp
dec
sub
inc
aam
leave
shl
pop
mov
mov
imul
aaa
dec
push
data16
adc
bound
xchg
inc
cmp
mov
push
lods
aas
jp
insl
adc
in
cmp
push
daa
mov
stos
inc
jns
mov
push
mov
jge
mov
mov
mov
lods
mov
mov
push
gs
xchg
imul
mov
inc
dec
add
push
push
or
mov
mov
xor
mov
cmp
push
orl
xor
lods
test
inc
imul
mov
dec
cmp
std
insl
jecxz
xchg
jbe
rcll
xchg
adc
or
pop
loop
cmp
stc
test
mov
inc
shl
frstor
inc
pop
jno
std
lea
bound
movsl
inc
cmc
xor
jp
popf
pop
mov
loope
popf
movsl
std
lret
mov
xchg
loope
push
and
xchg
xchg
dec
mov
sub
cs
lods
je
xor
mov
pop
and
and
mov
sbb
cmp
push
cmp
xchg
lcall
cmp
push
inc
add
xorl
pop
mov
fldcw
add
jle
dec
or
push
cmpsb
shll
sbb
repz
mov
or
fxch
inc
xor
clc
aaa
mov
stos
jbe
jb
daa
jge
cmpsl
inc
and
cmp
push
mov
popa
addr16
js
mov
dec
dec
jle
andw
mov
jge
fistpl
inc
or
mov
divb
mov
inc
sub
jnp
mov
pop
push
mov
cmp
inc
inc
cmp
jns
cmp
loopne
mov
adc
pop
cwtl
repz
shll
icebp
mov
cmp
pop
dec
pop
inc
adc
lock
dec
mov
imul
add
pop
cmp
mov
adc
rcll
jb
lock
clc
inc
dec
jg
ds
iret
xor
fsubrp
pop
fistl
test
push
adc
orl
mov
or
or
push
cmp
adc
sti
rorb
ljmp
pop
dec
fisttpl
sub
pop
cmp
inc
pop
sarb
scas
pop
push
and
sarb
cmp
push
ss
inc
pop
mov
mov
fidivs
jae
jb
scas
cwtl
stos
out
xor
int3
mov
mov
loope
jnp
mov
test
into
insl
adc
mov
dec
push
stc
mov
mov
jbe
pop
inc
stos
adc
bound
adc
dec
test
add
sub
cmp
in
cld
xor
in
jns
jo
lcall
dec
scas
scas
inc
cmovge
mov
movsb
lock
mov
cmp
outsw
ret
cmp
push
push
pop
sub
jb
dec
mov
neg
cli
xor
push
cmp
push
jns
jno
inc
int
clc
mov
mov
jmp
inc
enter
jecxz
jle
nop
dec
mov
and
jns
insl
xor
jnp
insl
sub
in
popa
test
leave
xabort
iret
push
lret
aaa
pop
adc
push
and
jbe
addr16
popa
sarb
inc
ret
das
out
in
pop
jmp
into
add
dec
xchg
sub
je
fs
adc
mov
adc
mov
mov
movsb
add
test
leave
sahf
hlt
jae
mov
push
adc
dec
outsl
jnp
sbb
insl
mov
dec
xchg
sbbl
cs
and
pop
sti
add
pop
xor
jns
pop
js
mov
mov
jbe
sub
int
push
pop
xchg
sti
int
push
into
mov
fs
aas
insb
arpl
lea
mov
xor
xchg
dec
mov
ljmp
ljmp
push
mov
push
cmpsl
mov
popa
sbb
adc
icebp
pop
jno
jo
dec
push
mov
mov
fidivl
jp
icebp
popa
cwtl
andl
pop
insl
xor
int
adc
aaa
roll
fwait
xor
cmp
adc
cmp
ss
or
xor
mov
jns
pop
les
and
mov
push
cmpb
aas
lock
andl
js
xor
or
cwtl
cmp
mov
fs
mov
xor
sbb
inc
cmp
mov
push
jle
mov
sbb
cmp
scas
pop
pushl
jno
in
push
inc
sub
cmp
imul
pop
pop
and
jo
add
cmpsl
xor
insb
jmp
mov
clc
test
xor
insl
or
inc
test
xchg
int
cmp
lods
fwait
outsb
dec
mov
shll
cmpsl
divb
sub
int
fstpt
aaa
xor
cmp
dec
fs
push
jno
inc
mov
out
jns
cmp
and
dec
pop
scas
sarb
push
fisttpll
mov
mov
or
lock
es
pop
out
rcrb
arpl
orb
aaa
xchg
sub
decb
adc
adc
mov
xchg
lods
imul
cmp
lea
stos
and
cs
lret
adc
jb
ss
popf
push
xlat
jp
adcl
ja
imul
xor
out
lret
stc
jge
xchg
out
rcl
lcall
cli
mulb
popf
dec
loope
imul
adcl
xchg
push
mov
mov
mov
lods
dec
xchg
out
pop
movsl
xchg
adc
push
sbb
mov
imul
push
imul
sbb
sbbb
jle
mov
scas
mov
inc
arpl
lret
mov
mov
daa
xchg
jns
addr16
int
cmp
mov
add
test
testl
fcoms
call
xor
mov
or
pop
xchg
mov
ss
popl
pop
jl
fistl
cmpsl
aaa
jo
xor
mov
mov
adc
inc
rolb
fldenv
mov
pop
xchg
jae
push
push
out
pop
sarl
arpl
push
add
jno
ja
or
dec
ficompl
jp
jo
outsb
xor
jge
cmp
rorl
repnz
mov
jmp
cmpsl
push
mov
jl
pop
dec
shll
pop
inc
mov
shrl
push
push
loopne
adc
push
sbb
fcomps
sbbl
sbb
popa
cmpsb
cmpsl
popa
pop
cmp
mov
cmp
or
pop
push
push
dec
pop
push
sbb
jmp
fs
negl
add
fdivrs
mov
cmp
lahf
push
test
xor
bound
push
or
push
pop
imul
xchg
cs
mov
outsl
test
add
mov
inc
or
iret
cmp
xor
shrl
mov
sbbl
sbb
xchg
inc
mov
fbstp
cltd
jno
test
or
inc
iret
sbb
mov
repnz
mov
xor
push
mov
mov
repnz
push
pop
or
cmp
ds
add
ja
cmp
aas
inc
add
fs
cmp
cmc
adc
jnp
jno
jbe
xchg
fs
inc
insb
and
cmp
push
aaa
popf
cmp
pop
jns
nop
in
test
xor
and
adc
dec
sbb
jmp
pushf
rclb
inc
dec
cmp
dec
or
mov
cmp
icebp
mov
dec
jno
dec
cmp
mov
xlat
adc
jnp
sbb
mov
sbb
imul
dec
xchg
mov
mov
stc
test
call
inc
leave
cwtl
stc
pop
inc
lea
ljmp
imul
adc
mov
lds
iret
imul
push
in
arpl
in
lahf
jl
xor
imul
shrl
sbb
mov
arpl
cli
decl
movsb
popa
xchg
pop
mov
pop
jb
jns
rcrl
push
fidivrl
and
lcall
cmp
aas
push
and
imul
ret
imul
jb
pop
roll
jns
in
mov
popa
pusha
dec
repz
test
lret
push
inc
mov
popa
je
dec
pushf
mov
inc
sbb
cmp
push
repnz
cmp
sbb
int
sbb
gs
xor
dec
mov
cld
arpl
clc
imul
add
sbb
inc
shl
inc
inc
mov
daa
test
test
data16
push
xor
jmp
test
outsb
mov
xlat
notb
dec
cmp
jl
sti
test
inc
int3
pop
dec
push
cmpsl
pop
mov
jns
push
lret
pop
mov
lods
add
mov
push
cmp
cmp
cmc
imul
bound
xorl
inc
and
add
mov
mov
xor
adc
cmpsl
clc
imull
ret
fcoml
pop
fisttpll
adc
repz
push
xchg
movsb
dec
jecxz
or
icebp
rolb
xor
imul
xor
sub
mov
idiv
or
imul
inc
sbb
jb
mov
add
mov
mov
jecxz
inc
mov
dec
addl
adc
xchg
inc
mov
lds
jne
int3
je
aaa
hlt
push
stc
jp
sub
xor
xchg
mov
mov
mov
push
sbb
push
sub
inc
inc
dec
shll
jmp
arpl
mov
arpl
pop
xor
mov
fs
cmp
int
adc
insl
dec
mov
or
dec
sbb
mov
xor
ljmp
mov
mov
dec
repnz
adc
adc
xor
dec
sahf
mov
and
mov
dec
lret
mov
in
scas
popa
lea
in
insl
arpl
jp
cmp
pop
cmp
dec
or
outsb
lret
add
insl
sub
ljmp
inc
mov
test
idivl
sbb
adc
ja
mov
adc
testb
das
mov
dec
mov
ja
push
or
cmp
cmp
mov
xchg
pop
mov
out
stos
push
adc
out
pop
dec
push
pop
lods
cld
inc
sub
mov
jne
dec
sti
xor
cmpsl
fcompl
jno
icebp
loope
sub
or
push
inc
jnp
sbb
pop
hlt
jmp
dec
mov
scas
or
addl
jnp
dec
inc
sbb
shll
push
or
and
inc
dec
xchg
and
leave
cld
jae
add
leave
fnstcw
pop
push
lds
scas
fs
movsl
test
lds
imul
inc
in
cs
mov
sub
fwait
pushf
pop
adc
imul
dec
out
stos
xchg
jne
int
cmp
rcrl
orl
and
dec
cmp
insl
inc
mov
mov
ss
orl
cmp
inc
dec
lds
jno
mov
push
cmp
dec
pop
mov
mov
xchg
xor
dec
pop
and
jmp
testl
ss
fisttpl
adc
inc
int3
cmp
lods
pop
repnz
pop
pushf
xor
mov
hlt
push
rorb
xor
pop
rcrl
popf
push
sub
cmp
push
sub
sbb
cmp
out
aad
dec
lods
sbb
cmp
jbe
push
mov
stc
push
scas
bnd
pop
fmuls
push
mov
jno
push
push
pop
sbb
or
ja
test
cli
push
jle
aaa
jno
outsb
jns
jns
int
pop
pop
inc
push
cli
out
xchg
lea
imul
cmp
repnz
jp
fistpl
sbb
in
mov
pushf
fildl
clc
mov
lcall
fistpl
mov
and
aad
mov
add
sub
mov
leave
insl
mov
jne
pop
push
sbb
out
jecxz
mov
popa
pushf
inc
mov
lds
jno
insl
push
sbb
push
iret
push
andl
ljmp
xor
dec
mov
push
loopne
sbb
fs
aaa
pop
pop
inc
mov
test
stos
dec
scas
repnz
cwtl
dec
gs
jl
ror
fisttpl
leave
dec
push
popf
test
sahf
stc
adc
sbb
mov
sbb
jmp
imul
cmp
pushf
cmp
aaa
into
ror
dec
rcrl
dec
stos
inc
ret
mov
scas
sbb
les
sbb
insb
and
pusha
pop
mov
xchg
dec
iret
mov
inc
in
pop
add
pop
dec
sti
popf
outsl
lret
fsubrl
cmp
or
dec
mov
pushl
and
add
cmpsl
sub
fwait
dec
lds
iret
inc
sbb
xor
cmp
push
lret
cmpsl
xchg
int
pop
dec
je
sbb
mov
or
jg
in
cmp
add
ficomps
push
xor
mov
mov
push
in
jge
xchg
inc
scas
test
mov
aaa
ljmp
int3
or
xor
stc
and
xor
psubd
mov
pusha
dec
mov
sub
jmp
out
push
push
daa
inc
jle
mov
cli
ret
inc
or
xor
jl
fldenv
mov
test
mov
ja
inc
mov
xchg
in
jae
mov
cmp
mov
push
jae
iret
push
jecxz
fs
lds
jns
cmp
imul
pop
xchg
push
out
jecxz
leave
mov
popf
inc
lcall
mov
mov
mov
outsl
pushf
fwait
dec
addr16
dec
test
mov
sub
dec
cmp
jge
gs
push
loop
test
insl
pop
shrb
mov
nop
cmp
push
out
pop
cld
inc
repnz
cmp
cmpsb
stos
xchg
xor
sahf
repz
cmp
loope
adc
outsl
ljmp
sub
cmp
push
lods
mov
jnp
je
push
scas
push
repnz
iret
push
sbb
or
xor
mov
ss
cmpsl
stos
or
scas
push
push
insb
es
mov
subl
insb
pop
lock
shll
lods
jl
inc
mov
or
pop
and
pop
pop
outsb
jno
jns
pop
shlb
mov
sbb
pop
mov
mov
scas
xchg
scas
and
mov
imul
xor
mov
sub
test
sbbl
or
mov
and
lds
or
mov
mov
add
sbb
stos
lock
or
std
mov
decl
cli
jo
xchg
imul
add
jne
dec
dec
insl
int3
jb
push
jnp
mov
mov
repnz
ljmp
clc
jae
arpl
cmpsb
out
push
out
mov
inc
cmpsl
inc
cmp
subl
mov
call
jae
imul
cmp
dec
into
cmp
iret
add
jae
push
add
movsl
push
add
das
and
imul
mov
sbb
iret
lret
repnz
xchg
xchg
xor
cs
and
push
imul
jns
add
mov
loopne
pop
sbb
or
ss
rcll
inc
scas
mov
xchg
lods
sbb
loop
mov
or
mov
adc
scas
pop
or
xor
jp
data16
add
mov
xor
shl
mov
push
pop
inc
lods
out
push
sbb
xor
outsw
cmp
or
scas
sar
mov
imul
push
test
adc
cmpb
inc
and
add
jmp
mov
out
ljmp
inc
or
xorb
mov
mov
push
mull
pusha
dec
daa
cmp
lods
push
cmp
mov
cli
mov
jae
stc
pushf
lcall
dec
fnstenv
cmpsb
dec
jb
loope
jb
lret
pop
add
outsb
xchg
adc
push
sbb
inc
lcall
std
leave
je
or
or
test
arpl
loope
mov
ret
or
aas
sbbl
loop
mov
outsl
cmp
mov
iret
imulb
aam
pop
jns
mov
adc
xchg
out
aad
push
lds
mov
lods
popa
dec
pop
shll
mov
xorb
mov
jnp
add
lea
stc
movsb
movsl
mov
icebp
mov
xchg
xor
jge
dec
imul
imul
cmp
dec
pop
jae
mov
jno
cmp
or
int
adc
push
jno
xchg
mov
cmp
popa
out
lret
or
lds
dec
ret
rorb
xor
mov
mov
mov
inc
cmp
xor
leave
in
rorl
outsb
xchg
or
pop
mov
test
leave
mov
mov
pusha
mov
push
inc
push
gs
add
sar
cmp
cmp
pop
mov
dec
cltd
lahf
lods
ret
xor
mov
ds
js
add
adc
and
stos
gs
cs
inc
push
movsl
add
mov
imul
jle
negl
lods
cmp
cmp
pop
cmp
cmp
cmp
pop
cld
pop
or
lods
popa
mov
in
push
jno
jp
loope
jo
pop
insb
sub
cmp
popa
sbb
sub
cmp
inc
loopne
cmpl
cmp
movsl
push
pop
adc
cld
xchg
push
fisubs
push
jp
or
push
mov
push
push
test
pop
or
pop
and
insl
fisubs
mov
scas
inc
push
dec
out
mov
popf
imulb
adc
mov
mov
mov
popf
mov
enter
iret
rorl
insb
movsl
popf
pop
adc
push
cli
outsl
mov
out
hlt
cmpb
pop
ret
push
adc
sub
ljmp
lds
popa
mov
mov
loop
pop
cmp
icebp
ja
mov
shr
inc
test
repz
xchg
scas
subl
or
xchg
sbbb
or
or
movsb
lret
test
daa
loope
in
mov
sahf
or
xchg
sarl
pop
push
dec
lahf
test
mov
xchg
mov
sbbb
outsl
xchg
imul
jns
inc
adc
mov
shlb
aaa
sub
dec
push
lods
pop
mov
pop
push
jb
mov
enter
int
dec
adc
ja
dec
xor
mov
mov
push
inc
stos
jns
dec
enter
mov
getsec
add
popa
adc
xor
repnz
sbb
mov
cmp
fwait
push
in
and
push
jno
sbb
and
push
xor
add
mov
xor
sbb
jnp
lea
insl
xchg
outsb
popf
jg
cli
xor
mov
data16
jl
nop
hlt
dec
pop
mov
mov
cmpsb
test
or
jnp
pop
dec
push
jl
cltd
and
mov
pop
ds
or
and
aad
dec
test
imul
shrb
nop
push
mov
cmp
push
jmp
cmp
xchg
xchg
xor
mov
cmp
test
mov
movsl
pop
loope
sub
sub
xor
push
pop
add
mov
xchg
pop
into
je
in
push
shl
pop
movsl
test
nop
fisubrl
mov
lahf
sub
pusha
mov
test
and
arpl
push
jb
mov
inc
mov
adc
and
lea
dec
push
push
andl
jle
loopne
ja
xor
pop
xchg
xchg
push
in
push
movsb
das
sub
scas
sub
pop
xchg
sub
xchg
and
into
fsubrl
mov
out
decb
lahf
cmp
rcrl
cmp
subl
sub
mov
add
sbb
jo
imul
imul
adc
call
adc
mov
jmp
inc
sub
jne
scas
daa
and
dec
jnp
pop
adc
xor
adc
jbe
mov
xchg
lcall
fsts
pushl
movsb
inc
add
cmpsb
mov
lea
jnp
std
int
add
mov
sub
fidivrl
or
dec
push
fsts
insl
cmp
lods
leave
cmp
and
xchg
dec
aas
inc
les
mov
stos
insl
jbe
pop
aad
imul
cltd
xchg
in
cmpsb
push
hlt
inc
insb
and
cmc
test
mov
repz
jno
filds
and
rolb
pop
repnz
arpl
sbb
push
imull
inc
cmpsl
es
negl
cmp
fucomp
sub
mov
hlt
movsb
xor
push
inc
jb
mov
xor
pop
iret
cmpb
addb
fs
xchg
movsl
sti
test
xchg
sub
dec
adc
or
test
shll
mov
pushf
inc
cmpsl
les
bound
dec
xor
test
shll
push
icebp
addr16
fcmovbe
mov
shl
fwait
push
xchg
outsb
inc
cmpl
mov
push
call
das
sbb
jl
xchg
jg
inc
out
cmp
pop
mov
ljmp
mov
mov
test
and
pop
mov
subl
cmp
pop
fcomi
hlt
int3
pop
testl
xor
dec
dec
adc
pop
shrb
or
in
cmp
sbb
push
jnp
dec
push
cmp
inc
fisubl
cmpsl
leave
mov
data16
daa
shlb
xor
aaa
adc
aad
hlt
mov
cmp
jge
add
sub
cmp
in
and
test
pop
sub
jmp
cli
jp
jle
fstpt
adc
mov
test
mov
cltd
dec
fstl
push
add
xor
inc
insl
les
cmp
or
shll
lcall
in
sbb
cmp
jge
push
popf
inc
jecxz
or
xorl
push
jnp
lcall
in
adc
jno
int3
mov
popf
or
xchg
pop
jl
xchg
or
sbb
cmp
and
sub
push
push
mov
iret
cmp
pop
lock
mov
lock
mov
imul
add
push
ds
and
jnp
mov
xor
pop
xor
pusha
xchg
shll
xchg
inc
int
sub
outsl
add
and
lret
add
cmpl
mov
mov
cmp
mov
dec
movsb
jbe
lods
or
sub
push
push
xor
ss
dec
mov
les
pop
sti
cmp
xchg
mov
sub
frstor
mov
push
push
popa
lods
mov
dec
imul
and
xchg
aaa
gs
dec
jg
sub
fwait
mov
lock
imul
int
add
test
divb
xlat
fiadds
fstpt
or
rcrl
cmc
sbb
mov
jnp
jns
fnsave
xchg
ret
stc
xchg
movsl
mov
cmpsl
add
sub
leave
sbb
jmp
js
xchg
push
test
imul
aad
lods
mul
sbb
jb
push
cmp
rcrl
nop
cs
ss
test
adc
pop
dec
lock
jg
dec
or
pop
cs
cmp
add
data16
xchg
pop
aaa
rcll
xchg
or
insl
xor
cmp
idivl
cwtl
pusha
cmp
jae
sbb
popf
sbb
inc
adcl
inc
push
lds
and
imul
cltd
sub
es
adc
jns
test
adc
hlt
cli
mov
and
add
cmp
scas
lret
pop
lock
addb
aad
icebp
imul
push
sbb
popa
insb
dec
push
and
mov
pusha
icebp
pop
pop
cld
sub
mov
jno
inc
flds
sbb
push
xor
and
pop
xchg
pushf
addb
adc
int3
or
jmp
jno
mov
mov
adc
roll
in
shrl
movsb
sub
jns
sub
inc
xor
jns
imul
or
adc
push
sub
je
cmp
add
into
inc
subl
pop
push
inc
sub
bound
int3
dec
mov
aam
hlt
add
mov
nop
mov
push
insl
adc
jl
cli
fmul
push
adc
mov
mov
xor
roll
cmpsl
inc
into
xor
or
call
imul
jns
and
dec
xchg
adc
insl
inc
sbb
or
cmp
mov
lods
sub
or
dec
rolb
insb
jl
insb
addb
fwait
jo
xor
add
out
mov
mov
cmpsb
jne
pop
cmpsl
mov
mov
and
xor
sarl
lods
xchg
mov
inc
jnp
in
sub
mov
push
call
xchg
movsl
test
jg
jecxz
sbb
mov
xchg
sub
mov
out
mov
decb
cmp
push
mov
pop
loope
inc
xchg
adc
sbb
fdivrl
data16
lcall
jle
jl
out
xchg
push
jnp
sub
rol
cmp
sahf
inc
subl
jp
mov
and
cltd
cmp
fwait
mov
xchg
xor
mov
mov
xchg
mov
push
inc
out
outsl
test
xor
dec
leave
and
cli
mov
das
mov
movsb
mov
jno
icebp
nop
dec
addr16
xor
vmwrite
mov
push
arpl
bound
jg
cmc
cwtl
xor
or
cmc
xchg
mov
jo
push
and
adc
jo
shlb
clc
insb
jno
gs
cmp
inc
cmp
push
in
mov
mov
sti
fldcw
mov
scas
lds
addb
xor
mov
pushl
dec
fldcw
dec
push
addr16
xor
test
leave
mov
out
inc
aaa
adc
rdmsr
rcrb
and
mov
jp
sub
xor
adc
dec
push
xorl
aaa
mov
pop
sti
push
adc
enter
cmp
in
ret
and
shl
mov
pop
dec
out
mov
out
mov
lcall
inc
jo
imul
adc
inc
shll
jo
cmp
xor
mov
pop
push
into
cmp
insb
dec
int3
dec
insl
xor
sub
out
and
popa
xor
cmpsb
imul
jp
xor
adc
pop
and
test
int3
lret
mov
cld
mov
cmp
xor
inc
in
mov
std
sbb
mov
fistl
pop
fwait
scas
cwtl
ds
into
push
ljmp
add
mov
adcb
insl
pop
mov
mov
das
out
push
xor
jle
cmp
insl
pop
push
pop
cmp
inc
pop
int
or
sub
mov
inc
cmp
mov
mov
mov
jbe
cmp
jae
cmp
mov
pop
aam
test
push
cmp
nop
or
dec
int
cmp
cmp
mov
jmp
mov
je
or
loop
dec
push
pop
pop
or
ret
lods
int
ja
sets
cmp
cmp
lods
test
jge
bnd
pop
repnz
addb
out
mov
adc
cmp
xor
loopne
pusha
fs
push
negb
cltd
sbb
cltd
mov
dec
sub
adc
push
outsb
call
pop
je
pop
out
push
jno
jp
jns
xchg
xor
movsl
jl
es
xor
stc
push
stc
xlat
cmp
jns
inc
popa
mov
mov
pop
movsb
sub
jno
push
mov
popf
push
bound
mov
pop
mov
pop
mov
mov
scas
or
and
dec
clc
lock
mov
cltd
adc
cmp
cmp
push
push
mov
push
jl
stc
aas
fs
sub
cmp
and
push
imul
test
cmp
fwait
enter
pushf
loop
add
lret
push
adc
mov
cmpsb
push
mov
xchg
adc
stos
xchg
xor
and
sahf
and
jo
bound
push
xchg
push
mov
enter
in
jmp
mov
cmpsl
jp
insl
insl
xor
mov
sub
repnz
xor
aaa
lret
xor
mov
clc
cmp
mov
xor
ljmp
xchg
je
fxch
inc
ds
data16
jg
dec
lret
stos
jbe
and
jno
xchg
orl
jbe
clc
mov
in
xor
stos
in
fldt
adc
dec
or
int
sub
pop
sbbl
cmpsl
pop
inc
testb
xor
aaa
std
mov
jo
mov
sbb
sub
mov
mov
cmp
cmpsl
mov
out
or
clc
and
test
mov
out
test
adc
lods
adc
cmp
mov
daa
jg
mov
dec
loop
aad
jnp
dec
jge
sub
popl
and
leave
xchg
mov
pop
cmp
add
popf
xchg
rcrl
in
adc
xor
stc
xlat
mov
cmp
arpl
addr16
rcll
inc
push
dec
mov
jl
push
cmp
test
sub
sbb
cmp
fxch
inc
cmp
mov
sbb
push
dec
adc
sub
xor
jbe
fistpl
push
push
mov
dec
outsb
jnp
jmp
outsl
mov
lods
mov
xor
jne
test
dec
dec
int
xor
push
cmc
fstps
or
xor
jmp
add
std
inc
adc
lahf
gs
bound
jp
adc
test
adc
lods
dec
jge
shll
lret
xchg
jne
mov
and
push
jg
dec
xor
mov
cmp
jnp
pushf
jmp
cmp
jno
xchg
mov
ljmp
loop
dec
insb
cmp
cmp
cmp
mov
mov
mov
test
add
scas
inc
dec
mov
pusha
mov
sbb
mov
dec
xchg
lods
out
int
cmp
imul
sub
arpl
mov
mov
xor
sbb
in
cmp
popf
xchg
adc
aas
movsb
cli
mov
out
adc
mov
daa
cmp
into
push
or
sbb
mov
sbb
jmp
shrb
mov
aaa
movsb
mov
adc
push
mov
enter
sbb
mov
scas
and
or
ss
add
std
clc
lcall
push
pushf
sub
or
mov
inc
lds
add
gs
scas
jne
jmp
fstpt
mov
aaa
xchg
aaa
mov
mov
push
mov
pusha
sbb
mov
jmp
aaa
and
pop
sub
mov
cltd
mov
dec
dec
push
adc
jle
loope
cmpb
cmp
cmp
xor
rorl
rcll
dec
xchg
dec
test
sbb
dec
in
ss
xor
ret
lret
inc
in
push
pop
arpl
in
jg
mov
xchg
sbb
xor
dec
xor
sub
pop
fcmovnu
or
in
and
es
mov
in
dec
dec
repnz
jo
push
dec
push
stc
pop
lods
sub
cmp
sbbb
push
and
or
dec
mov
ret
sarl
adc
adc
sub
es
dec
mov
xor
divl
xor
add
ja
adc
popf
test
dec
pop
popf
stos
xchg
out
in
jae
cmpsb
cmp
lock
and
mov
mov
frstor
dec
js
nop
cmp
mov
mov
jp
in
inc
xchg
mov
insb
pop
jae
cli
cmpl
cmp
dec
mov
dec
ror
je
popf
mov
inc
outsb
cmp
xor
jns
cmp
cmpsl
scas
add
adc
push
xlat
dec
insl
push
xor
out
ja
mov
ja
push
jg
lret
pusha
ja
rclb
shlb
jb
pop
mov
dec
insl
cmpl
add
popa
mov
dec
mov
dec
push
int3
inc
sub
clc
mov
aad
jae
or
or
jle
andl
pop
int3
cmp
adc
mov
pop
mov
sbb
xor
imul
add
mov
pop
subb
xchg
jbe
popf
mov
dec
or
in
push
xchg
sub
push
xor
insl
xor
loopne
loope
cmp
and
or
into
or
int
cmp
pop
popf
xchg
jno
fucom
add
push
cmp
gs
mov
jae
mov
pop
inc
mov
mov
jmp
lcall
xchg
xor
ljmp
push
insl
loop
insb
addb
mov
in
cmp
sbbl
imul
xor
xor
aas
out
enter
xchg
add
or
scas
mov
xchg
pop
sub
sbb
jl
jne
ss
cmp
add
adc
push
movsb
cld
loope
sarb
cmpsb
int3
adc
sarb
mov
pushf
aas
pop
sbb
or
cmc
cltd
mov
xor
shl
iret
sbb
xor
xchg
jbe
xchg
fldenv
ja
xchg
popf
insl
loopne
pop
outsl
fistpll
gs
cmp
repnz
adc
popa
clc
push
mul
xor
push
jb
loopne
push
fmuls
xorb
mov
xor
jp
mov
stos
shll
popa
add
lock
dec
jnp
cvtps2pd
mov
dec
sbbb
imul
mov
inc
lret
mov
dec
cmp
mov
jp
cmp
sbb
mov
inc
sbb
jno
ss
xlat
mov
sbb
pop
sahf
inc
fstpl
arpl
vmovdqa
dec
pop
cli
jge
cmp
sub
dec
rcrl
xchg
mov
lret
xchg
push
mov
test
xor
xor
and
sbb
ja
pslld
push
xchg
xor
xchg
fdivs
push
adc
mov
jge
lea
push
fistl
lock
loope
test
dec
in
aaa
loopne
xor
jge
dec
cmpl
xor
cmp
jge
sti
mov
aaa
roll
lea
xor
lret
call
mov
and
leave
jge
add
sbb
adc
cmp
cmp
sti
fdiv
jg
xor
out
push
stc
aaa
arpl
test
js
adc
mov
pop
aaa
or
jl
int3
sti
pop
sti
or
add
ja
int3
or
cmp
jb
push
inc
ljmp
test
sub
lret
les
test
push
adc
in
mov
movsl
outsb
push
data16
mov
insl
xor
loop
mov
mov
mov
lea
scas
mov
popa
cmp
lret
inc
mov
jl
repz
lods
sub
lcall
sbb
sbb
out
addr16
icebp
fnstenv
and
push
pop
sbb
scas
scas
mov
xor
xchg
hlt
sbb
mov
insl
je
cmp
test
fwait
cmp
or
adc
inc
mov
mov
orl
inc
imul
ret
lcall
inc
leave
xchg
popa
mov
jns
jp
push
mov
and
mov
adc
sub
mov
mov
je
cmp
jg
loop
cmp
in
lcall
fadd
jl
mov
jnp
mov
add
xor
cmp
aas
pop
cmp
rorl
je
mov
pop
insl
lcall
push
sbb
stos
inc
pushf
imul
push
jo
int3
sbb
loop
sbb
dec
les
lock
mov
mov
push
cmp
ss
lods
pop
jge
movsb
xor
xchg
fwait
push
cwtl
jp
push
add
int3
inc
dec
fwait
arpl
push
dec
std
mov
push
in
xchg
aas
xchg
dec
pop
cmp
or
xor
mov
xchg
les
mov
leave
mov
movsb
je
jno
js
mov
jns
insb
lahf
cmp
sub
rclb
mov
fadds
aas
adc
add
out
jnp
mov
or
push
or
jg
inc
dec
dec
sub
mov
mov
fstp
sub
adc
sbb
inc
inc
and
int3
lds
xchg
inc
push
idivl
mov
jp
insl
imul
dec
test
push
cmp
dec
xchg
xchg
cmp
xor
add
js
out
xchg
sub
add
dec
cs
dec
or
dec
aaa
int
ja
pop
mov
xchg
jge
push
pop
icebp
jns
xchg
mov
and
cmp
lods
sub
aad
jecxz
jg
scas
ss
adc
xor
cli
adc
insl
hlt
and
test
jle
movl
jecxz
add
and
sub
mov
jno
fbld
jns
mov
adc
mov
lods
loope
cwtl
xor
cs
sub
xlat
pop
pop
andl
test
cmp
mov
leave
ja
dec
dec
xor
lcall
jmp
cs
add
xchg
roll
outsl
jno
loop
pop
adc
pop
pop
pop
cmp
add
rcrb
and
imul
add
pop
mov
scas
gs
repnz
in
and
push
sbbl
push
dec
pop
add
push
sub
push
mov
test
adc
cmp
jmp
sub
fs
popa
cmp
lret
jo
jp
pop
data16
movsl
push
lds
daa
xor
psubd
sarb
adc
jno
in
cmp
in
and
insb
insl
mov
jmp
aad
aad
mov
mov
xor
cmpsb
push
xor
sub
roll
sbb
fbstp
ret
lret
scas
nop
imul
push
mov
dec
pop
lret
test
cmp
scas
cmpsb
push
movsl
inc
mov
xor
xor
imul
imul
imul
shll
cmp
je
push
int
cmpsb
sti
jb
test
mov
insl
cmp
cltd
mov
xchg
mov
in
test
test
int3
or
xchg
divb
es
dec
testl
xchg
cmp
push
mov
loopne
cmp
mov
std
mov
daa
ret
jne
push
cmp
rolb
jbe
push
jl
sbb
or
mov
test
sub
sub
mov
mov
dec
dec
xor
clc
stos
cmp
push
fdiv
imul
js
jne
cmp
xor
scas
adc
fistl
mov
cmp
into
pop
jb
adc
inc
call
dec
mov
cmp
popf
bound
cwtl
push
push
sbbb
lods
cmp
ss
and
pop
idivl
xchg
fbstp
mov
leave
fnstsw
pushf
dec
push
sbb
cmp
cmp
mov
lock
daa
enter
into
jge
xor
pop
das
pop
jo
jo
push
and
mov
mov
test
push
pop
cmp
js
mov
cltd
dec
dec
shlb
aad
aas
push
pop
mov
cmpl
rcl
mov
mov
cld
lahf
add
jnp
sahf
insl
aaa
xchg
mov
call
pusha
loope
xor
jne
mov
out
jae
cmp
out
inc
xor
and
cs
rcrl
mov
in
inc
mov
mov
pop
xor
or
imul
xor
pusha
and
mov
cli
lea
adc
test
arpl
cltd
lock
cmp
inc
pusha
jp
bound
iret
pusha
cmp
push
push
int
stc
cmp
lahf
mov
nop
test
ljmp
xor
inc
mov
mov
bound
xchg
xor
adc
test
push
or
cld
push
adc
loope
lock
push
and
mov
int
mov
in
cmp
push
cmp
int3
imull
mov
stc
int3
cltd
mov
scas
test
testb
sbb
cmp
rorl
mov
and
xchg
dec
lret
shll
dec
mov
mov
fildl
dec
pop
test
out
arpl
mov
mov
mov
cmp
in
pop
xchg
cmpsb
mov
push
xor
repz
lods
push
lds
ror
or
enter
add
xchg
cmpsb
stc
mov
aad
mov
ret
jmp
shlb
and
pop
imul
dec
nop
mov
dec
mov
xchg
add
jecxz
out
sub
mov
pop
mov
outsb
lahf
push
out
rorl
stc
xor
dec
insb
xor
pop
cld
xchg
call
mov
mov
mov
lret
inc
jb
repz
sarb
dec
dec
pop
popf
dec
xchg
jo
cmp
ds
fimuls
out
mov
pusha
fnsave
jmp
test
int3
movsb
sbb
jns
xchg
call
mov
cmovno
repz
push
adc
push
mov
test
add
stos
jo
fwait
sahf
pop
cmp
mov
dec
mov
addl
jnp
push
sbb
mov
xor
imul
push
or
test
es
test
out
mov
lea
lock
push
mov
movsb
pop
outsl
fisttps
ret
add
clc
xor
jne
out
mov
outsl
sbb
mov
test
test
inc
inc
sahf
cld
or
outsb
or
mov
nop
std
xor
jns
xor
jmp
in
inc
jb
push
mov
push
mov
cmp
jp
inc
sbb
xchg
sar
cs
test
push
out
outsl
pop
iret
cmp
js
pop
push
cmp
ljmp
cmp
xor
out
ror
shlb
test
stc
lds
xchg
mov
popf
pop
jnp
flds
sub
mov
mov
aas
pushf
xor
and
cmp
addr16
jno
pop
adc
cmp
jp
pop
xlat
jno
xor
adc
xor
sub
dec
mov
xchg
or
adc
pop
xor
stos
pop
push
jle
cmp
sbb
jge
lods
popf
jae
aas
jae
faddl
cmp
pop
cmp
add
int3
negl
xor
nop
test
mov
xchg
daa
mov
mov
pop
arpl
pop
popf
dec
js
inc
dec
ja
lea
xlat
loope
test
outsl
clc
jbe
in
mov
imul
mov
cmpb
ljmp
gs
ja
push
mov
pushf
lods
pop
test
cmpsl
pop
pop
cmp
push
cmp
cltd
push
sbb
out
test
lcall
pop
jmp
imul
xchg
fnstsw
jg
mov
xor
xchg
scas
insl
std
push
or
inc
test
mov
push
dec
aas
insb
call
mov
xlat
jmp
js
pop
mov
and
bound
dec
lret
call
cmp
or
add
int3
xchg
adc
fidivrl
ret
pop
insb
xchg
mov
xchg
test
pop
stos
add
int
inc
xchg
sahf
in
in
mov
pop
rcrl
dec
cmp
inc
mov
addr16
inc
inc
push
pop
enter
scas
jbe
rorb
dec
outsl
mov
mov
test
xlat
and
pop
repz
fildl
xchg
gs
andl
leave
jno
jns
lcall
out
fiadds
rol
push
pop
jns
lds
in
jb
insb
sbbl
xchg
lods
lahf
inc
xor
test
into
cmp
sbb
sub
inc
xor
iret
cmp
inc
ljmp
mov
or
adc
jns
stc
cs
push
inc
jnp
and
add
or
or
adc
push
test
cltd
or
cld
and
and
sub
sbb
push
pop
cmp
cmp
imul
movl
ds
fimull
scas
sarb
loope
jp
adc
xchg
out
adc
adc
cltd
pusha
sub
inc
or
inc
push
pop
sbb
pop
stos
nop
leave
push
mov
rorl
mov
pop
mov
scas
sbb
jb
inc
popf
movsb
cmp
std
xor
out
fnstenv
jl
sbb
sub
int
lret
repz
xchg
lret
xchg
push
popf
inc
xlat
and
adc
lcall
fimuls
pop
addr16
xchg
jl
std
popf
outsl
aas
cli
xor
cld
shll
fwait
xor
pop
scas
movb
or
sbb
push
sbb
jo
xadd
push
nop
movsb
pop
cmp
bound
push
into
xchg
push
jp
xchg
lds
push
fcoml
test
stc
fistl
cmp
mov
flds
int3
cmp
aam
pop
ret
cmp
mov
popf
mov
dec
cmp
push
rcl
repnz
ja
repz
repnz
add
insl
pop
shll
push
cmp
jg
call
jns
jne
and
inc
cmp
mov
insl
stc
xchg
adc
into
insb
testb
or
mov
sub
jae
pop
and
adc
mov
pop
inc
and
jnp
mov
sub
xchg
jns
adc
fs
mov
addr16
in
mov
jecxz
xchg
pop
lea
mov
sub
xchg
mov
in
and
jnp
out
fisubs
dec
insb
sub
jno
push
aad
jbe
lea
insl
mov
cmc
out
cmp
inc
cltd
sub
cmp
aas
loopne
mov
repnz
xchg
shll
daa
mov
pop
add
out
mov
test
or
sbb
cmp
and
jp
dec
in
popf
ljmp
cmp
inc
lahf
popa
lock
push
dec
test
rcr
xor
and
cli
dec
scas
test
notl
fimull
adc
cmpsl
std
pop
fistpl
xor
ljmp
push
push
adc
jns
push
mov
adcb
call
pop
in
jnp
ljmp
or
call
cmp
xor
adc
xchg
cmp
fsubs
mov
xchg
pop
cmpsl
leave
pop
xor
int3
inc
dec
sub
jmp
stos
add
pop
dec
stc
sbb
cmp
mov
sbb
mov
addr16
fldenv
sbbl
mov
sbb
aad
sbbl
aaa
sbb
push
pop
out
xchg
jns
fsubs
lret
dec
jge
aaa
cmp
in
cltd
aaa
clc
mov
mov
dec
lea
or
xor
jle
dec
push
jle
push
pop
lock
sub
jns
add
xor
jp
pop
iret
adc
add
pop
outsl
loope
stos
mov
mov
xor
push
sbb
xor
pop
sbb
sti
ja
jno
call
jmp
push
gs
insl
xchg
cmp
dec
loope
cmpsl
sbb
or
cmp
xchg
add
sbb
lret
enter
in
jo
out
xor
sub
push
jecxz
shlb
fcmovne
test
push
pop
je
cmpsb
mov
jno
mov
mov
lds
dec
fldenv
aaa
cmp
push
jo
add
xorl
jo
movb
adc
shll
mov
or
cmp
sbb
cmpb
mov
pop
or
mov
mov
adc
cmp
fs
lret
movsb
sahf
lds
push
rcrb
cmp
jg
je
leave
adc
out
cmp
adc
push
cmp
mov
sub
ficoml
rcl
mov
test
aas
fisttps
icebp
cmp
push
pop
iret
pop
cmp
cmp
repz
sbb
fs
push
mov
dec
ficompl
cmp
pop
cmp
call
pop
shll
pushf
inc
or
fistps
pop
aas
loope
lds
rcrb
jg
cmp
xor
mov
cld
inc
std
scas
xor
pop
aaa
jb
pop
fstpl
jnp
push
stos
data16
add
insl
jne
sbb
mov
test
scas
lds
jp
imul
mov
sbb
dec
ret
push
mov
fldt
push
cld
out
dec
xchg
bound
jmp
cltd
mov
push
sbb
leave
cmp
addr16
cmc
std
aas
or
dec
mov
mov
push
popf
bound
add
test
pop
dec
gs
dec
test
xor
fmuls
push
outsl
rorl
dec
pop
popa
mov
xor
dec
loopne
dec
push
js
xor
or
inc
das
cltd
loope
jae
lds
xchg
adc
inc
andl
sbb
mov
fs
imul
cmp
xchg
jno
popf
mov
in
push
xor
and
fcompl
sbb
add
call
lea
mov
stc
lea
fsub
sub
mov
jo
push
icebp
mov
lock
stos
lds
stos
icebp
pusha
cmp
imul
mov
dec
es
stos
mov
aaa
shlb
mov
push
dec
jno
pop
rcrl
stc
adc
sarl
movsl
xor
inc
loop
jbe
mov
dec
outsb
lds
and
imul
adc
adc
mov
xor
stc
rcrb
out
outsb
icebp
sub
mov
repnz
mov
dec
add
xor
lds
lds
jo
cmp
sahf
xchg
dec
and
jns
mov
jb
jp
subb
fisubs
xor
dec
ret
and
scas
in
sarl
dec
movsb
push
adc
mov
pop
push
js
xchg
pop
dec
popf
inc
push
lea
mov
sub
pop
sbb
xor
mov
ja
xor
cmp
sbb
mov
loop
cmp
call
addr16
dec
add
repnz
inc
leave
dec
sbb
xchg
loop
test
repz
int
sarl
aas
add
fwait
jno
loope
xor
int3
ret
jp
lahf
mov
xor
stos
pinsrw
repnz
inc
mov
dec
fmuls
in
out
stos
pushf
sti
fisttpll
enter
gs
int3
mov
out
mov
imul
sahf
mov
in
inc
jg
xor
and
lods
popa
fwait
pop
inc
sbb
jo
xor
or
jae
pop
cli
loop
cmp
mov
mov
int
jp
leave
popf
push
rcrb
mov
jmp
scas
popa
mov
test
mov
add
jbe
mov
push
dec
pop
jp
stc
sbb
mov
pusha
push
out
subl
xchg
lret
sahf
int
int3
iret
mov
mov
push
adc
mov
adc
jmp
push
pop
inc
pop
jnp
push
cld
sti
in
mov
mov
gs
cmp
dec
pop
jno
mov
add
sbb
popf
cli
pop
and
cmp
fimuls
addb
dec
mov
mov
rorl
pop
outsl
jno
ja
aaa
xor
into
pop
scas
cmp
gs
sbb
lods
lea
out
add
cmp
jge
subl
push
xchg
xchg
cltd
sbb
cmp
or
or
shlb
sti
cmp
fldenv
aad
lret
mov
pop
test
cmp
add
and
leave
jge
jnp,pt
sti
push
rolb
xor
cmp
and
fstpt
add
js
fldt
pop
push
adc
cmp
ffree
dec
cs
adc
js
push
xor
sbb
inc
adc
cmp
sub
popl
or
ss
cmp
aam
fistpl
ja
sub
gs
sub
push
xor
pop
lcall
addr16
fstl
xor
jno
mov
movsb
and
fs
push
jp
fs
mov
mov
xchg
imul
ja
push
repz
adc
cmp
jmp
mov
dec
cld
push
pop
repnz
mov
adc
xor
dec
aam
cmpsl
adc
mov
adc
fs
mov
mov
jne
jae
jmp
xchg
cltd
push
sbb
loop
jbe
dec
aas
push
lcall
icebp
fisttpl
arpl
and
pop
adc
xor
push
and
nop
ja
push
cld
sbb
fs
sti
push
cmp
mov
movsl
jnp
pop
pop
adc
jmp
mov
pop
jbe
jns
xchg
jbe
jns
cltd
lea
insl
mul
xor
jno
or
imul
test
nop
jmp
or
outsb
into
adc
mov
lahf
jns
imul
push
popf
inc
test
repz
ds
fisubrl
dec
loopne
xor
sub
test
xchg
and
cli
and
jp
cltd
in
outsb
sbb
sahf
das
out
or
xor
push
xchg
data16
test
call
divb
dec
xor
cmp
outsb
pop
sbb
cmp
or
mov
or
sub
pop
out
std
xchg
mov
insb
jnp
fidivs
xor
mov
fxch
ja
lret
cmp
sbbl
rcrb
stos
test
push
sbb
out
cmc
mov
je
inc
xchg
pop
xchg
jns
cmpsl
jns
mov
xchg
jge
inc
and
jb
ljmp
jno
pop
and
inc
cmp
jle
loop
imul
xchg
sbb
pop
cmp
dec
lods
aam
adc
or
ljmp
addr16
mov
je
or
mov
mov
jmp
dec
shrb
into
in
insb
stos
pop
jae
js
mov
ss
mov
push
jl
mov
rclb
lods
insb
push
subl
shll
sahf
cltd
push
lea
je
cmp
stos
ss
cmp
ret
jecxz
or
lea
fisttpll
add
mov
test
cmp
or
mov
stos
aam
jnp
lret
jmp
call
pusha
cmp
test
int
mov
iret
xor
andl
aaa
cmp
popf
xor
pushf
cmp
imul
xchg
js
scas
shrb
mov
lock
loope
push
or
push
cmp
dec
out
out
push
fildll
adc
insl
fidivs
push
cmp
cmp
inc
push
fwait
mov
outsl
jp
mov
das
je
std
mov
inc
rorl
mov
icebp
scas
mov
fchs
push
and
pop
jnp
imul
mov
ljmp
dec
sub
mov
xor
sarl
repz
cmp
lea
mov
push
mov
adc
xchg
or
into
mov
cmp
inc
push
pop
inc
adc
and
jbe
push
cld
ret
xchg
mov
dec
rorb
xchg
lea
cmp
xrelease
inc
mov
xor
fcmovu
imul
mov
xchg
out
mov
mov
nop
cmp
loopne
inc
popf
sbb
mov
mov
jbe
out
cmp
insb
xchg
xchg
shll
fidivrl
ljmp
lods
in
icebp
mov
fldcw
xchg
cmp
add
xor
xor
out
xlat
insl
or
mov
imul
mov
cmp
insl
fidivrl
mov
dec
add
xchg
inc
je
pusha
or
ret
jl
sub
ds
pop
icebp
sbb
lcall
pop
fwait
cmp
push
dec
jo
mov
pop
mov
mov
mov
xor
jnp
arpl
popf
je
or
test
jns
mov
xchg
inc
test
or
test
pop
sbb
mov
int3
mov
or
mov
sbb
push
mov
shll
imul
je
stc
jmp
xor
adc
ret
sub
pop
dec
inc
rcll
dec
push
cmp
jb
loop
in
xchg
adc
dec
mov
jg
adc
gs
mov
pop
popa
dec
sbb
in
jg
mov
js
test
mov
pop
jnp
int3
cmp
mov
dec
in
sbb
jp
popa
jb
inc
inc
cmp
popa
fmull
sub
mov
imul
jno
loopne
addr16
adc
out
xor
lret
mov
lea
fdivrl
cmp
xchg
les
loop
insl
gs
lock
mov
xchg
sbb
and
mov
bound
xor
mov
or
dec
icebp
fwait
mov
decl
stos
clc
cmp
add
mov
add
cmc
jg
or
add
inc
jl
stos
xchg
xchg
push
mov
or
fisubl
cmp
jb
call
xchg
fstpl
dec
mov
scas
cmp
stos
lcall
xor
mov
rorb
cwtl
cmpsl
mov
loopne
sbb
loop
and
loopne
loope
std
dec
lcall
or
movsl
xorps
lods
jb
add
cmp
sbb
cmp
cltd
iret
add
aad
sub
xor
jge
lods
or
jg
loope
mov
or
inc
push
mov
popf
shlb
push
cld
or
sub
imul
xchg
jno
leave
or
xor
fdivrl
pop
and
lcall
mov
sub
mov
cmp
scas
imul
xor
push
sbb
jp
cmp
mov
dec
adc
lret
loopne
cmc
jp
dec
jno
jl
aaa
sarb
xor
adc
jmp
mov
mov
mov
aaa
add
inc
call
sub
cmp
push
insl
jae
lcall
cli
repnz
pop
jae
test
cmc
xchg
xorb
mov
dec
cltd
dec
cmp
cmp
rcrl
aad
fnstsw
imulb
outsb
sti
imul
rorb
shlb
or
js
inc
out
fldcw
add
mov
je
dec
daa
mov
int3
in
cmp
or
addb
stos
sub
jp
sub
mov
test
or
jns
jne
xchg
dec
inc
int
dec
loop
mov
cmpl
push
ljmp
fldcw
popf
jb
jbe
add
xor
dec
adc
movsl
mov
cmp
push
mov
aas
jle
int
mov
mov
aad
mov
scas
xchg
mov
mov
sub
mov
add
in
cs
divb
mov
leave
test
data16
jno
pop
inc
stos
pusha
and
xorb
leave
iret
xchg
and
stos
mov
mov
leave
test
cmp
pop
and
xor
aaa
test
xchg
adc
repnz
sbb
mov
addr16
inc
in
fs
xchg
imul
vmovdqu
or
mov
cmpsb
sbb
in
fucomip
mov
int
sbb
xlat
inc
push
or
lds
daa
push
xlat
pop
jnp
push
dec
push
sbb
sbbl
jle
xchg
cmp
out
cwtl
xchg
lock
in
mov
pusha
jmp
in
and
mov
jp
add
test
inc
inc
loopne
jecxz
mov
imul
add
divl
out
push
lret
mov
mov
jnp
je
pop
xor
pop
imul
pop
jl
insl
inc
popa
xchg
subl
dec
mov
fldl2e
jae
mov
mov
call
scas
fistpll
popf
dec
sbb
cmpsb
dec
shrb
test
leave
pop
int
stos
mov
das
xchg
adc
jge
lea
loopne
ljmp
cwtl
or
jge
jne
faddl
cmpl
pop
pop
xor
sbb
rep
or
fcoml
in
scas
mov
movsl
push
push
out
cmp
mov
xchg
icebp
leave
aaa
repz
stos
lret
cmpsb
dec
mov
lret
pop
stc
jle
adc
outsl
mov
aad
movsl
jbe
hlt
movsb
or
pop
push
sbb
pop
cli
dec
cmp
ljmp
jbe
mov
jns
repz
pop
adc
les
mov
sbbl
xor
cvtps2pd
roll
test
mov
shlb
int3
sbb
lret
dec
insl
cwtl
jne
hlt
sub
loopne
mov
cmpsb
jp
or
cmpsb
push
leave
jp
pushf
std
cmpsl
lret
dec
inc
sbb
addr16
dec
jns
adc
movsl
sarl
cltd
fadd
aam
push
in
imul
dec
mov
inc
cmp
call
cmp
lds
xchg
sbb
mov
mov
mov
lods
jnp
lods
je
bound
xchg
in
pop
add
imul
cmp
dec
movsb
mov
das
roll
fbstp
push
cmp
iret
xor
imulb
inc
sub
js
icebp
lea
mov
fsubrs
sub
rcr
dec
xchg
rcll
jnp
out
popa
loopne
xchg
xor
aad
push
sbb
push
mov
sub
mov
rcl
add
adc
mov
pop
out
rol
push
stos
jmp
test
mov
cmp
imul
mov
pop
popf
inc
dec
sbb
lret
clc
xor
daa
mov
int
or
dec
jbe
bound
stos
xchg
test
jb
pop
mov
jnp
or
jge
sub
jne
repnz
das
enter
rcrl
insb
jns
or
jnp
fisttps
mov
lret
pop
cmp
xchg
cmpsl
push
std
dec
cmc
jne
cmp
or
cltd
dec
imul
lods
mov
cmp
sub
pop
cmp
inc
insl
cmpsl
xchg
mov
ljmp
mov
push
aaa
aam
not
push
test
cmp
test
pop
mov
in
mov
lods
dec
test
adc
push
pop
in
jmp
xchg
and
adc
xchg
jne
lods
add
mov
push
dec
jp
out
cmp
repz
clc
ss
mov
add
pop
sbb
bound
addr16
inc
insl
adc
ds
in
pop
sbb
jno
xchg
fistpll
add
test
je
mov
addr16
push
jmp
jp
jg
xchg
sub
sti
cltd
in
test
es
and
push
adc
xchg
mov
pop
inc
pop
aas
repnz
cmpb
outsb
push
xor
pop
in
js
mov
xor
jo
dec
cmp
sbb
mov
push
insb
dec
mov
imulb
xchg
mov
idivb
push
push
int
sub
inc
loopne
xchg
cmpsb
lea
add
dec
dec
shll
sbb
or
test
out
pop
cmp
push
movsl
clc
mov
or
inc
cmpl
jne
insb
or
popa
ret
mov
inc
mov
cltd
add
insl
cmp
icebp
or
mov
inc
movsb
mov
cmp
std
push
pusha
add
and
cmp
cmc
rolb
inc
fcompl
mov
lret
inc
cmc
lock
mov
or
dec
clc
cmp
jl
iret
lds
mov
mov
je
jae
add
cmp
sbb
jge
jl
sbb
addr16
aad
sbb
sarl
push
dec
test
scas
xor
mov
xchg
dec
pop
movsb
adc
sub
les
push
cmc
jge
push
dec
out
pop
sub
jmp
inc
inc
cmova
mov
jl
push
pop
push
pop
test
xor
and
xchg
mov
jne
push
xchg
jb
push
and
popa
push
aam
cmp
mov
mov
and
mov
inc
pop
pop
aaa
gs
dec
int
jb
popf
nop
add
mov
push
xor
movsb
or
mov
cmp
stc
insb
lea
in
lahf
lods
dec
aaa
cmp
mov
idivb
stc
ja
imul
mov
je
mov
in
pop
and
movsb
cmp
aam
push
add
int
pop
jge
xor
mov
cmpsb
jb
imul
mov
addr16
outsb
or
push
jb
inc
aaa
mov
adc
sbb
sub
jmp
xor
cmp
adc
shll
xchg
add
cli
rcl
lds
gs
popa
dec
cltd
xchg
lods
jge
pop
xchg
push
std
or
lods
mov
addr16
lss
aad
mov
add
test
jge
adc
pop
and
fstpl
cmpsl
mov
push
mov
test
jno
xchg
mov
into
rorl
lret
imul
inc
xor
bound
aaa
mov
jns
js
add
sbb
and
shr
sbb
xor
push
and
andl
jle
pop
or
imul
lods
push
add
xchg
je
loope
mov
push
push
jge
ja
jb
dec
and
sub
jb
and
sbb
jmp
adc
mov
inc
dec
jno
mov
jnp
jno
out
inc
adc
arpl
imul
popa
sbb
aaa
popf
inc
xor
mov
push
inc
adc
in
aaa
jns
das
dec
jl
jnp
mov
mov
push
ljmp
cmp
dec
stos
jno
in
daa
pop
test
shrl
lcall
xchg
dec
insl
jnp
push
out
mov
movsl
inc
nop
scas
push
mov
push
dec
add
repnz
pop
imul
fsubrl
cmp
inc
js
imul
push
idivl
sbb
sub
mov
push
pusha
jb
adc
mov
dec
sbb
push
pusha
jno
mov
faddl
std
sti
inc
je
sahf
das
call
inc
dec
ss
fdivrl
popf
popf
pop
xchg
pop
jmp
pop
mov
movsl
mov
push
shrl
stos
adc
bswap
data16
cmp
pop
xlat
test
fs
mov
in
xor
daa
push
xlat
std
jnp
adc
cmpsb
out
xor
fstp
jle
mov
adc
lea
lea
or
xchg
dec
dec
pop
cli
scas
inc
aad
mov
add
and
cmp
int
jns
mov
mov
sub
push
inc
cmpl
push
mov
sub
and
or
push
pop
push
cmp
sbb
fwait
movsb
push
inc
insl
fistps
inc
pop
pop
cmp
push
dec
stc
cld
inc
mov
pop
out
les
mov
adc
outsb
setnp
xchg
setge
cs
stc
cmp
dec
add
mov
pop
add
push
or
dec
data16
and
pop
fimull
cmp
or
stc
mov
adc
cmp
dec
cmp
pop
fwait
lret
insl
pop
cmpsl
in
xchg
ljmp
aad
loopne
push
add
rcr
shrl
cmp
mov
test
xchg
sahf
push
cmp
mov
adc
or
xchg
pushl
lds
push
imul
lods
ja
sub
pop
push
jae
push
fisubl
or
ja
add
adc
roll
enter
mov
sbb
test
cmpb
xchg
mov
movsb
cmpsl
jo
cwtl
and
pop
add
out
xor
mov
or
popa
fsubrs
dec
cltd
xor
sub
mov
aaa
pop
pop
mov
jno
jp
xor
icebp
movsl
mov
sub
pop
jnp
icebp
add
xchg
fisubs
sti
movb
push
adc
dec
test
xorl
push
jp
or
jno
mov
push
adc
out
xchg
movsl
out
add
inc
js
and
xchg
sbb
jg
inc
loope
push
loope
clc
pop
jg
insl
mov
insl
sub
mov
je
repnz
lcall
sub
je
mov
cld
out
bound
repz
clc
push
stos
cmp
jae
add
xor
or
sub
fbstp
jb
std
jae
call
pop
ds
imul
xor
push
js
jge
xor
popa
push
imul
jnp
test
jae
iret
jnp
mov
or
push
bound
mov
int3
xchg
mov
pop
les
mov
movsl
push
leave
mov
xor
cmp
ficoml
inc
out
dec
movsb
hlt
mov
jo
roll
repnz
sub
movsl
fdivl
dec
insb
pop
mov
dec
dec
inc
int
inc
js
in
incb
adc
jg
mov
mov
cmpsb
fxch
int
fdivrl
inc
ret
jae
inc
adc
xor
jp
outsb
pop
mov
xchg
dec
rcrl
icebp
xchg
test
outsb
push
test
pop
js
pusha
bound
dec
aaa
cmp
fmull
xor
cmp
lret
sub
loop
fisttps
jbe
cmp
rclb
ja
push
ja
loopne
data16
pop
hlt
test
cltd
sub
scas
rorl
pop
pop
inc
out
aas
mov
test
jnp
mov
push
xor
pop
mov
scas
in
sbb
xchg
sbb
jp
scas
pop
in
xchg
rcrl
loope
adcl
outsl
cltd
xchg
pop
ret
roll
mov
stc
sbb
scas
adc
cwtl
jmp
sbb
testl
mov
stos
mov
inc
jns
rclb
mov
ss
jae
inc
ljmp
jns
aas
jge
mov
in
shrb
data16
scas
jns
test
iret
test
mov
aam
xor
inc
xchg
add
cmp
add
movsb
insl
hlt
or
test
ss
push
xor
jmp
jg
jp
jge
push
dec
ret
dec
mov
ds
in
sub
mov
mov
mov
xor
add
jno
and
xchg
lods
pop
xor
jns
mov
and
in
push
ss
cmp
push
aaa
scas
cs
js
jle
adc
or
popf
call
movsl
mov
lret
shll
add
xchg
cmp
pop
mov
or
out
loope
push
in
mov
sbb
jo
stc
inc
mov
pop
mov
test
mov
mov
fwait
cmpsl
rol
or
inc
rcrb
aad
pop
or
pop
sbb
push
jo
mov
or
pop
pop
int
or
fildl
lret
iret
mov
mov
mov
cli
xor
sub
pop
cmp
xor
add
push
inc
arpl
add
and
iret
mov
imul
repnz
jns
and
mov
std
pop
jns
xchg
cmpsl
out
add
pop
mov
into
out
cmpl
cmp
dec
inc
cmp
push
fimuls
push
je
and
sub
es
loope
scas
cmp
cs
xorl
and
push
push
xor
mov
jg
dec
ja
sbb
jns
push
xchg
mov
mov
pop
jne
dec
mov
xor
icebp
bound
mov
sub
lock
mov
xchg
add
ljmp
stos
add
aad
gs
lods
and
add
loopne
xor
or
shrl
mov
pop
shl
fstl
lret
test
rorb
mov
dec
ror
sti
push
mov
out
cmp
or
or
lret
in
fistpll
mov
pop
jb
dec
outsb
inc
pusha
sbb
sbb
mov
lods
sbb
lds
leave
jg
push
jmp
andl
leave
dec
cmp
dec
lahf
add
inc
mov
fwait
stc
gs
pop
aam
cld
inc
and
mov
sub
mov
fmull
inc
cmp
inc
int
sub
enter
or
sub
dec
adc
push
jge
cmp
popa
push
sub
dec
sub
sub
aas
sbb
mov
cmp
jns
aas
xor
mov
in
pop
in
enter
scas
inc
cli
ret
mov
imul
fsubs
or
shll
mov
subl
and
mov
cli
xor
pop
xor
lea
sbb
ljmp
pop
into
jae
idivl
lea
mov
icebp
inc
subl
mov
popa
push
cmpl
in
sub
lock
call
cmp
xchg
mov
mov
dec
call
leave
in
test
push
inc
jg
dec
scas
sub
call
popf
aad
jae
dec
test
mov
cmp
xor
mov
sbb
push
sbb
insl
push
jp
cmp
out
mov
cmpl
mov
pop
cltd
inc
push
inc
jp
jo
out
mov
cli
cmpsl
fdivrs
pop
in
scas
int
nop
aaa
imull
xor
xlat
cmp
fnsave
mov
and
inc
jb
push
sub
stc
je
mov
lea
pop
roll
test
movb
dec
push
paddw
ljmp
cmp
fldl
inc
inc
or
mov
shl
pop
stos
push
mov
cmp
lea
dec
add
arpl
inc
cmc
inc
inc
mov
cmc
ds
xchg
pop
fmull
and
cli
movsl
pop
mov
test
ds
mov
dec
xchg
ss
ds
xor
push
mov
sbb
lods
pop
pop
xchg
test
pop
add
xor
outsb
inc
cmp
cld
push
pop
sub
rorl
cmpsb
ljmp
pop
jae
sub
aam
sub
pop
push
imul
xor
test
in
push
inc
mov
mov
mov
addr16
loop
pop
loope
cmp
sub
pop
scas
cmp
mov
adc
popa
repnz
cmp
jmp
fstpl
stc
inc
sbb
or
daa
insb
cmpsl
jecxz
mov
cmpl
adc
jg
mov
mov
jne
mov
sbb
cmp
xchg
test
push
sub
roll
mov
loop
push
xchg
mov
add
pop
and
xorb
imul
xchg
js
ss
es
lret
mov
sub
gs
cltd
push
pusha
jp
mov
add
push
lds
imul
mov
xor
push
dec
xor
jmp
call
mov
mov
mov
inc
outsl
int
call
ja
jo
mov
fistpl
and
lret
shll
mov
ljmp
ss
aad
mov
xchg
int
jnp
test
push
jle,pt
jge
jne
xchg
push
addr16
orl
add
int
popf
cmpsb
aas
jno
pusha
xor
insl
push
and
aas
mov
repnz
pop
dec
inc
leave
insb
cmp
xor
in
into
pop
sbb
adc
stos
shlb
rsm
mov
push
cmp
lds
inc
and
jl
or
cmp
sub
mov
xchg
ljmp
or
push
aas
mov
dec
leave
inc
call
mov
sub
ret
jecxz
jne
ret
add
jmp
pop
jno
in
cltd
leave
loopne
jnp
push
lds
sbbb
std
lods
mov
ret
xchg
mov
nop
mov
add
int
daa
pop
push
mov
lahf
movsl
cli
int
jp
je
push
cmp
push
push
mov
jge
mov
lods
push
es
sbb
mov
xchg
fidivl
xlat
stos
lods
sub
shl
aad
dec
inc
jbe
stos
jge
or
xchg
push
add
cmp
or
sbb
jnp
jbe
int
dec
ja
pop
imul
gs
lcall
sbb
lret
xorb
xor
pop
pusha
push
out
inc
inc
sbb
lea
inc
lahf
lret
jno
fwait
aas
hlt
push
jg
stc
xor
test
push
scas
outsl
cli
jns
in
sar
jg
cmpsb
sbb
ja
mov
sti
dec
sub
test
jbe
push
jno
xor
jge
outsb
loop
push
jnp
xchg
mov
mov
xor
mov
scas
stos
hlt
rep
and
mov
dec
aas
lods
fidivrs
jp
cmpsl
movsl
jno
xlat
cmpsl
lret
jo
insb
je
fnsave
outsb
pop
cli
mov
xchg
sub
cld
cmovns
test
inc
bound
jno
mov
xor
pusha
sbb
cld
mov
cmp
addb
ret
stos
xor
gs
jbe
add
cmp
in
cmpsl
addr16
loope
adc
outsl
inc
push
mov
sub
imul
es
stos
push
inc
push
pop
xorb
jle
roll
dec
adc
cld
mov
xor
add
lret
xorb
in
flds
fidivrl
or
fdivl
inc
jge
dec
inc
stos
fisttpll
jg
xchg
daa
addr16
insl
shll
mov
ja
mov
ja
loope
mov
pop
and
icebp
out
dec
jg
aad
stc
pop
je
dec
inc
dec
int
es
in
fiaddl
mov
jne
cmp
sbb
adc
roll
stos
lret
cmp
mov
mov
or
fisubrl
lods
loope
xor
fdivs
xor
and
mov
mov
int
js
test
or
fstpl
pusha
dec
ss
fs
out
mov
xor
lea
cmpl
mov
mov
pop
lea
mov
inc
jne
mov
and
cmp
dec
imull
lret
mov
and
xor
push
call
imul
dec
clc
mov
sub
sbb
jecxz
leave
call
rorb
inc
jp
aas
jmp
sbb
mov
pop
test
aas
adc
pushf
or
jge
xor
lcall
mov
xchg
enter
adc
pop
stc
cmp
push
mov
mov
lahf
and
jae
jg
repz
gs
testl
sbb
sub
ds
mov
xchg
dec
jp
push
mov
and
adc
inc
cmpsl
adcl
movb
jne
fdivl
cmpsl
jnp
xchg
dec
jmp
push
lret
call
test
push
cmp
mov
inc
imull
adc
data16
movsb
insb
jg
js
or
gs
cltd
adc
mov
cmpb
enter
fs
mov
dec
fistl
pop
adc
jb
sub
jno
pop
jge
xor
icebp
test
loope
das
xchg
insl
push
jb
or
inc
jp
dec
insl
inc
and
dec
xor
mov
or
adc
push
sbb
ljmp
outsb
cmp
cltd
xor
repnz
pop
push
sbb
popa
mov
orl
ss
cli
sbb
mov
int
jp
imul
jo
popf
aas
dec
cmp
mov
test
push
and
pop
add
push
xchg
cmpsb
push
inc
jae
int
push
jno
mov
xchg
aaa
inc
mov
jno
cld
and
inc
imulb
sti
fdivl
mov
or
and
imul
add
addr16
mov
mov
loopne
add
mov
mov
daa
cmpl
popf
test
inc
mov
mov
bound
out
enter
mov
test
cmp
imul
iret
popa
xchg
div
mov
push
lea
cmpsl
lahf
inc
inc
aas
push
push
jb
and
js
scas
add
sbb
jge
loope
repz
jnp
dec
sbb
insb
mov
push
mov
push
mov
xchg
push
adc
cmc
les
lock
cmp
movsl
test
int
jge
jg
addl
aaa
jnp
in
jp
out
push
js
por
in
dec
sub
adc
sahf
and
adc
pushf
arpl
arpl
mov
cmp
dec
dec
mov
jge
jp
push
insb
mov
dec
mov
dec
sbb
cld
cmp
jmp
imul
data16
out
cmp
mov
adc
cltd
mov
js
sarl
and
pusha
cli
jg
stc
jno
jecxz
jecxz
imul
int3
outsl
sub
mov
dec
outsb
sbb
lcall
sub
push
or
dec
jns
jg
and
jne
es
pushf
sti
in
ja
fs
scas
mov
xchg
push
test
jae
add
mov
outsb
add
clc
inc
mov
pop
dec
stos
mov
jns
adc
mov
mov
or
jns
iret
cmp
fldt
fnsave
add
fmuls
gs
inc
daa
push
jecxz
int
aad
mov
pop
jne
jae
and
das
pop
xor
xlat
subl
or
xor
clc
mov
fnstenv
jmp
inc
shlb
stos
or
daa
andl
sbb
inc
icebp
std
mov
sar
mov
roll
or
pop
push
jnp
sti
dec
pusha
jb
ret
sbb
xor
sbb
ret
push
aaa
iret
and
cmp
rorb
jle
cltd
fdivr
jmp
mov
scas
mov
mov
cmpsl
mov
mov
and
rcrb
icebp
mov
ds
popa
xor
mov
adc
adc
xlat
mov
cmpsl
shl
daa
cmpl
cmp
push
pop
out
movsb
call
inc
mov
aam
sahf
and
insb
ja
mov
je
subl
mov
in
shrb
cmp
mov
adc
jecxz
insb
in
inc
adc
imul
adc
fisttpll
mov
sbb
mov
cmp
or
int
cmp
int
and
jg
dec
popf
insl
shll
in
lea
pushf
mov
add
push
mov
xor
fnstcw
or
jp
cmp
sub
adc
mov
sub
ficoms
mov
call
lret
andl
adc
sbb
scas
sbbl
dec
push
jp
inc
mov
inc
arpl
ficomps
add
out
mov
mov
or
sub
jge
mov
mov
mov
rcrl
xor
or
jl
iret
insb
aam
jb
popa
ret
in
or
mov
or
iret
inc
add
inc
or
inc
stc
stos
cmpsl
mov
or
icebp
cmp
sbb
adc
fcmovnbe
mov
add
cmp
std
daa
add
sbbl
xor
gs
insl
rol
cmpl
mov
dec
sub
xlat
inc
scas
xor
lds
rcll
test
andl
xchg
fidivrl
pmulhuw
mov
jns
xor
sub
push
out
hlt
adc
inc
data16
ret
addb
arpl
jnp
ret
xor
xchg
add
sbb
fstpt
xor
push
adc
test
insl
push
mov
addr16
inc
xor
and
gs
in
dec
lock
fldenv
lds
add
mov
cld
mov
sahf
cmpsb
pop
jno
int3
iret
test
cmp
loopne
in
int
inc
loop
test
mov
mov
and
sbb
mov
mov
jns
mov
not
mov
xor
xchg
pop
and
cmp
sarl
popf
jp,pt
push
in
xor
imul
jl
imul
add
or
xor
xchg
les
iret
jmp
and
out
bound
es
mov
push
in
push
sbb
lret
js
inc
lds
and
nop
inc
ds
adc
jge
pop
dec
mov
and
out
xchg
jmp
pop
mov
loope
mov
mov
add
std
or
aad
inc
add
jne
dec
xor
push
insb
stos
inc
sbb
mov
cmpsb
add
cmp
mov
sub
adc
adc
pop
mov
jns
xor
xchg
pop
push
cs
icebp
and
push
adc
test
cmc
push
adcl
or
mov
adc
xchg
push
inc
dec
js
pop
dec
add
ja
mov
inc
adc
xchg
into
or
shll
or
xchg
mov
inc
rolb
iret
mov
addr16
mov
arpl
dec
js
sbb
les
pop
jmp
in
pop
cmc
les
in
xchg
inc
ret
int
call
adc
das
lds
cmp
vmovsldup
mov
cmp
ljmp
add
or
add
mov
mov
or
nop
in
int
cmp
jns
out
mov
fldt
and
xor
cltd
jecxz
repnz
fsubp
stc
cmp
mov
sarl
cmp
mov
in
adc
icebp
int
in
scas
movsb
fnstenv
jno
jo
loope
inc
mov
push
cmp
cmc
int
add
mov
sub
inc
xor
mov
sbb
mov
jl
dec
test
ss
nop
lea
addr16
shll
imul
int
insl
pop
imul
mov
push
in
mov
in
popa
cmp
pop
jbe
imul
mov
or
xchg
mov
pop
jl
cmp
clc
fnstcw
subb
xor
loope
adc
mov
dec
push
mov
rep
mov
loopne
jne
sbb
pop
hlt
lret
adc
cmc
cmp
ja
push
pop
scas
shl
outsl
iret
subb
pop
pop
pusha
fdivrs
sbb
xchg
into
mov
movsl
jecxz
mov
leave
push
lahf
addb
stc
adc
aaa
jmp
cmpsl
in
repnz
loope
aam
popa
out
imul
popf
cmpsb
into
inc
dec
test
sbb
aam
repz
iret
xchg
pop
enter
inc
xor
enter
pop
rcrb
add
test
ror
xchg
mov
clc
outsb
mov
adc
inc
xchg
jp
push
mov
cmp
lds
in
xchg
mov
pushf
pop
jg
sub
cmp
xchg
push
lret
test
les
push
jecxz
cltd
mov
cmp
dec
mov
scas
hlt
cmp
pop
les
or
lahf
stos
andl
sub
adc
push
jno
mov
movsb
loope
sub
sbb
pop
fsubl
rcrb
adc
mov
adcl
pop
scas
inc
xlat
cmp
mov
imul
jns
cmp
cwtl
lods
mov
sbb
jp
xorb
pop
mov
inc
add
mov
fabs
sbb
mov
mov
movsb
or
and
incl
imul
mov
cs
adc
int
push
cmp
pop
hlt
stc
sub
loope
mov
in
jae
test
ret
test
jp
sub
out
cmpsl
push
in
cmp
inc
bound
sbb
pop
pop
aas
jno
pushl
sarb
pop
inc
out
insb
cmc
insl
push
sub
pushf
in
xor
sub
test
jns
push
mov
cmpsb
or
icebp
jno
in
repnz
sbb
adc
xchg
mov
xchg
mov
and
out
xor
lods
scas
fisttps
mov
jp
loope
out
outsb
cli
xor
jae
adc
xor
out
jne
dec
scas
lahf
out
mov
sub
mov
sbb
dec
dec
xor
iret
adc
scas
insl
or
popl
rcrb
mov
mov
test
and
pop
jb
and
rcl
mov
xor
add
mov
int
and
mov
sbb
add
in
push
cmpsl
mov
mov
cs
mov
mov
jmp
inc
mov
jge
inc
call
dec
inc
push
or
outsb
int
test
fldcw
orl
lock
cmp
inc
jne
rcll
dec
stc
pop
push
mov
dec
xchg
out
or
scas
popf
xchg
lret
insl
ss
je
or
sbb
sub
fsubr
mov
adc
adc
cmpsb
xchg
ss
xchg
std
jo
test
insb
addr16
mov
lcall
push
pusha
ljmp
fildll
clc
or
and
mov
xor
push
cmp
inc
inc
dec
push
insl
iret
mov
out
adc
out
stos
rorb
jl
arpl
loop
push
or
mov
dec
adc
xchg
pop
jmp
push
jns
adc
dec
dec
into
xorl
movsb
dec
mov
dec
and
jno
jbe
aad
popa
and
jnp
lcall
or
addr16
pop
aas
pop
push
cmp
fcompl
icebp
js
dec
insb
or
xchg
in
pop
jno
gs
loop
sahf
dec
iret
push
ja
xor
or
cmp
push
ja
aad
iret
jns
xchg
sbb
lods
idivb
adcl
or
xchg
sub
sbb
or
arpl
push
cmc
cwtl
dec
out
ret
gs
rcrb
and
cmp
subl
jno
or
jb
out
xlat
jne
scas
inc
pop
call
mov
dec
sarb
sahf
enter
push
stc
push
mov
mov
and
cmp
adc
fs
xlat
cmc
in
dec
cmp
stc
hlt
movsb
mov
ss
adc
cmpsl
mov
add
sub
sub
aaa
test
test
push
add
dec
scas
sub
sarl
sbb
dec
repnz
daa
test
sub
jno
dec
push
cmpb
push
push
dec
sbb
lret
lcall
call
adc
xor
xor
jp
pop
mov
push
add
jbe
shll
and
lahf
int3
je
insl
ja
scas
mov
sahf
ja
pop
sbb
dec
mov
enter
xorl
push
enter
scas
jle
data16
pop
xchg
xor
sub
xor
jne
dec
push
cmp
dec
and
fstpl
push
rolb
out
dec
sbb
insb
int
push
sub
scas
xchg
push
cmp
popa
mov
inc
xor
divb
push
test
and
dec
sbb
xchg
gs
lret
dec
pop
push
push
cmpsb
js
cmp
pop
clc
mov
lds
or
add
test
mov
imul
movsl
jbe,pt
imul
push
or
jmp
dec
insb
adc
into
mov
in
jno
inc
insl
mov
mov
pop
sbb
mov
test
xchg
mov
int
jne
sbbl
lods
push
cltd
imul
mov
ss
inc
mov
lods
int
mov
int
clc
ss
out
addr16
data16
inc
push
in
push
cmp
imul
rol
aad
loope
add
psubw
lea
push
dec
insb
add
stc
std
lea
imul
sub
mov
push
inc
and
pop
inc
jb
sbb
xor
insb
scas
cmp
test
lret
inc
orb
orl
xor
cmp
ss
insl
cmp
push
int
popa
push
rorl
lea
jp
outsb
jae
insb
jne
cmpl
push
movsl
mov
mov
popf
cmp
cmp
int
shrl
sarl
mov
int
icebp
push
cmp
mov
pop
inc
fistpll
loope
fnstsw
or
ja
insb
adc
stc
or
cmp
stos
std
pop
daa
xor
push
cmp
pop
adc
int
dec
cmp
cmp
pop
push
popa
push
cmpsb
push
add
sbb
dec
addr16
fcmovnb
out
mov
movsl
push
mov
sub
lea
mov
shrl
pop
insl
push
inc
jno
inc
mov
jmp
dec
clc
aam
incb
sub
xchg
sub
test
shrl
push
fsubrp
arpl
cmpsb
jp
cmp
adc
xor
mov
jp
mov
xorl
orl
push
pop
sahf
or
cmp
pop
xchg
mov
mov
or
mov
cmp
dec
inc
aaa
and
fxch
ljmp
pop
es
xchg
scas
aad
ja
dec
jns
pop
jp
pusha
loopne
cmp
push
inc
dec
insl
xor
movsb
pop
xor
sub
jbe
insb
aas
mov
mov
out
add
lods
adc
jnp
adc
push
test
sti
mov
lds
inc
or
dec
and
scas
mov
ss
xlat
aas
subl
cmp
lret
int3
add
pop
mov
xor
lahf
fs
mov
xchg
lret
xor
adc
and
jns
pop
cmp
inc
dec
adc
push
or
dec
push
popf
push
mov
adc
mov
stos
mov
scas
dec
mov
popf
jo
mov
lods
and
inc
ds
xchg
cmp
insl
stc
mov
js
dec
pop
in
xchg
xchg
jbe
cltd
jae
mov
out
cmp
mov
push
cltd
mov
cmpsl
aaa
mov
test
test
jmp
lds
iret
movsl
pop
shrl
or
jno
fisubl
lret
stc
xchg
fidivl
or
cmpsb
ret
xor
lea
fwait
add
jb
add
test
popf
xor
fildll
jbe
sti
xorb
mov
jo
mov
mov
cltd
inc
cmp
push
push
js
adc
mov
or
insb
jo
or
in
cld
and
movsb
popf
cmp
bound
xor
push
test
out
push
mov
pop
or
pop
xchg
cmp
ficompl
repnz
test
stc
cmp
cmp
cmp
repz
push
mov
mov
leave
cmpsl
xor
stos
xchg
and
sahf
out
inc
test
in
sub
mov
adcb
das
add
jge
push
push
enter
cmpsl
rcr
rcll
leave
cvtps2pd
dec
sbb
mov
subb
ss
andb
push
or
sar
rorl
push
mov
psllw
inc
cmc
rol
fnsave
pop
movsb
pop
push
leave
outsl
sbb
jmp
pusha
cmp
xor
sbb
fwait
sbb
mov
jae
push
xchg
std
fs
mov
icebp
pushf
popf
dec
sbb
sar
jl
adc
repnz
cld
lret
aaa
xchg
mov
xchg
jmp
push
adc
sti
js
insl
cmp
sub
xchg
addr16
sub
mov
mov
add
pop
xor
adc
loope
push
inc
adc
stos
inc
iret
cmp
or
jl
cmc
loope
push
and
dec
lds
jbe
addr16
cmp
sub
pop
dec
mov
or
gs
icebp
xor
cmpl
push
insl
or
jae
pop
loope
dec
cmpsl
mov
jne
popf
aaa
cli
push
push
jb
dec
je
js
test
cmp
cmp
ds
lea
xor
call
xor
push
in
sbbl
push
aaa
mov
inc
call
xchg
das
fstl
mov
jbe
je
cmp
sbb
mov
mov
pushf
sbb
and
cli
mov
jl
mov
es
lock
cmp
sbb
in
das
mov
stc
sub
js
adc
xorb
repnz
push
sbb
inc
mov
jno
inc
and
cld
xchg
aaa
mov
dec
sub
inc
and
mov
jge
and
je
aaa
repnz
js
push
cli
leave
jb
lods
xor
lock
push
notb
std
test
dec
adc
xor
jnp
jmp
out
stos
ret
sahf
mov
cmp
ljmp
jle
outsb
rcr
and
cli
mov
sbb
jnp
adcl
cmp
mov
loop
adc
and
mov
or
mov
or
jo
int
or
inc
jge
inc
and
dec
mov
push
push
sahf
pop
sbbl
mov
bswap
rorb
negl
sbb
push
ljmp
sbb
lods
cmpsb
xchg
xlat
or
or
xchg
cmp
jnp
inc
xchg
cmpsb
cwtl
ljmp
mov
sbb
movsl
inc
jns
mov
lds
lods
cmp
pusha
inc
xchg
mov
jnp
orb
in
xchg
push
add
popa
int
dec
aaa
out
sbb
jns
mov
aas
mov
inc
pop
lret
jge
add
cmp
mov
lcall
cmp
xchg
jns
test
push
push
sub
imul
mov
das
js
push
lds
test
mov
lea
inc
jae
push
jbe
daa
loope
ret
mov
mov
shl
subl
int
repnz
cmp
test
xchg
jno
ret
repnz
sti
sar
cmp
cmp
or
mov
stos
int
mov
mov
popf
cmp
icebp
ja
imul
mulb
loope,pn
scas
popf
jle
jecxz
xor
add
rol
loopne
lcall
inc
stos
data16
ret
les
push
pop
add
and
add
cmp
inc
loopne
imul
lea
mov
fs
cltd
mov
iret
jg
sbb
daa
stc
jbe
sti
sarb
xor
mov
xchg
sbb
cmp
sub
test
test
and
scas
mov
mov
mov
xlat
fcoms
push
or
cmp
mov
inc
xor
jno
xor
lods
fists
in
dec
call
cmp
pushf
sbb
stos
add
xor
lea
jno
sbb
cltd
jg
cmpsl
shr
je
jbe
fisttpl
lret
adc
mov
in
mov
mov
mov
idivl
addr16
xchg
pop
cld
pop
add
iret
pop
lea
imul
rcrl
or
add
test
and
or
inc
ja
in
lret
or
cli
xchg
xchg
test
pop
cmp
cmp
jae
in
cmp
mov
cmp
jmp
sub
dec
mov
jae
or
or
adc
jb
clc
mov
subl
cmpsl
test
popf
leave
je
sbb
ja
jg
pop
rcrl
iret
mov
lcall
xor
cmp
scas
js
adc
test
into
lds
mov
cld
jne
mov
and
icebp
mov
cs
and
or
decl
inc
mov
inc
push
sub
push
pusha
jge
arpl
inc
fistpll
pop
xchg
repnz
push
jb
jb
test
movsb
push
and
cmp
dec
jg
jmp
mov
shr
ret
jg
xchg
pop
ficoms
cmp
xor
mov
mov
mov
movsb
inc
mov
insb
aam
inc
je
out
cmpsl
jge
inc
loope
mov
mov
std
popa
inc
or
xchg
jge
pop
mov
pusha
push
ret
scas
adc
gs
push
dec
int3
jmp
dec
and
jno
xor
pop
movsb
inc
cs
xchg
xor
dec
add
cmp
inc
xor
rorb
iret
and
pusha
cmp
or
fwait
xor
shll
pop
jae
out
pop
clc
cmp
xor
repnz
cmp
cli
cmp
jb
sbb
clc
push
xor
xor
push
adc
pop
iret
pop
cmp
int3
jnp
push
hlt
or
adc
inc
out
mov
inc
or
int3
or
jp
stc
push
mov
mov
iret
addr16
loope
movsb
imul
imul
test
mov
icebp
mov
cmp
sbb
xor
and
fldcw
jle
imul
push
or
mov
fwait
fs
jg
mov
push
into
xor
jne
xor
lds
xchg
faddl
test
sbb
int3
jge
xchg
cmpsl
mov
ds
jp
xor
pop
inc
sbb
mov
jge,pn
or
dec
dec
or
dec
dec
cmpl
dec
inc
mov
je
add
xor
mov
int
dec
stos
dec
jno
int3
testb
push
imul
lea
int3
add
imul
jae
loope
push
push
sbb
xor
sbb
test
lahf
sbb
mov
sbb
sub
dec
mov
jmp
mov
iret
xor
lea
paddusb
aad
xchg
sbb
cwtl
mov
sbb
orb
jl
mov
pop
imul
icebp
push
xchg
imul
xchg
push
sbbl
lcall
scas
aaa
sbb
je
ds
cmp
xor
stos
or
mov
inc
pusha
icebp
jge
dec
add
push
lcall
push
lcall
pop
mov
add
shrl
push
cmp
ss
cmp
pop
push
subb
mov
ss
mov
mov
sbb
xor
scas
addl
icebp
inc
sbb
mov
scas
xchg
jne
repnz
mov
sub
loope
cmp
sub
test
je
or
cmpsl
mov
mov
orb
aas
into
dec
mov
pop
shrl
jae
cmpsb
fstps
popa
into
sarb
dec
shrl
mulb
cltd
sbb
das
xor
mov
dec
sbb
jmp
lds
pop
mov
sub
adc
cmpsl
mov
cmpsl
or
fimull
adc
xorb
push
fisubrs
rolb
inc
mov
dec
jnp
xchg
shll
cmc
mov
loope
adc
jle
icebp
std
jne
addr16
mov
xor
xchg
xchg
repnz
mov
fwait
loopne
aaa
push
jno
rol
dec
imul
inc
imul
cld
in
push
jno
xor
loope
jmp
mov
in
xorb
push
jno
out
xorl
inc
push
stc
inc
cmp
xor
cmp
jge
mov
jns
mov
scas
arpl
inc
mov
imul
hlt
fcomps
daa
addr16
jge
push
inc
push
dec
lea
fnstcw
sub
das
push
jecxz
jbe
or
into
addr16
pop
sbb
aam
ret
lds
jnp
stos
add
dec
jbe
cmpsl
sarb
dec
in
gs
pop
iret
int3
or
insb
stc
std
xor
pop
adc
movsb
lret
mov
inc
mov
or
cmp
push
mov
pop
inc
inc
stos
sbb
sub
leave
dec
call
jno
pop
shll
popf
pop
jbe
or
dec
ja
dec
pusha
or
sub
xchg
mov
rolb
xchg
jns
adc
cmp
mov
inc
lahf
in
xor
xchg
dec
arpl
inc
push
cmp
hlt
jl
mov
lret
mov
or
enter
mov
push
xor
pop
jl
mov
sub
mov
adcl
ja
incl
cmp
out
in
cmp
movsb
out
inc
sbb
and
imul
jns
push
cli
push
roll
test
push
push
inc
mov
jge
jbe
xchg
pop
arpl
add
test
mov
mov
lods
cmp
pop
xchg
xor
ret
or
test
into
xchg
mov
jno
xor
or
jmp
ret
rorl
mov
dec
popf
jns
pop
sub
cmp
cltd
xor
push
mov
sbb
iret
call
push
data16
inc
adc
cmpsb
jle
lahf
data16
ljmp
jg
mov
rclb
pop
add
jle
insl
out
mov
inc
mov
int3
add
lock
dec
dec
gs
cmp
pop
jo
pop
and
out
xor
inc
xor
mov
ja
and
xor
or
popf
dec
push
dec
mov
testl
aaa
pusha
sub
sbb
out
mov
cmpsb
jno
pop
sbb
push
xor
xlat
cmp
jb
inc
call
mov
into
pop
lcall
dec
dec
mov
mov
rcr
mov
test
idivl
inc
mov
pop
call
inc
mov
je
addr16
xor
sbb
cmp
push
aaa
cmpsb
xor
push
imul
mov
das
jne
xor
rcrb
movsb
jp
test
jmp
xchg
mov
xor
adc
xor
mov
mov
xor
xchg
dec
sbb
daa
mov
mov
pusha
xor
sahf
cmpl
push
xchg
stc
movsb
cmpsl
pusha
jp
es
jg
cmp
loope
lcall
int3
jp
bound
addb
clc
cli
popf
cmp
or
adc
sti
cmp
test
cmpsb
inc
out
popa
push
cmpsb
jp
mov
hlt
iret
xor
test
repnz
in
into
xchg
mov
pop
jnp
mov
outsb
sbb
in
inc
cmc
and
cltd
imul
mov
sub
out
popf
jl
cmp
mov
loop
cmp
jl
arpl
test
shl
pop
stos
aas
jg
dec
pop
iret
add
lock
shrb
inc
adc
popf
gs
cltd
cs
out
push
stc
sbb
ja
clc
mov
dec
jno
xor
jge
popa
arpl
mov
jo
test
push
sarb
ret
or
aam
xchg
xchg
jg
push
int3
stc
sub
bound
scas
pusha
sbb
jmp
jmp
and
in
cld
fucomip
or
pushf
in
fdivrs
fdiv
push
push
mov
sarl
dec
test
or
lea
icebp
fwait
test
jns
das
inc
cmp
inc
xchg
sub
test
andb
cmp
mov
movb
jecxz
xchg
adc
cmpsl
push
and
insl
add
inc
dec
push
mov
xor
mov
imul
jmp
push
fcom
ret
cmp
mov
cld
push
pop
xchg
adc
inc
sbb
sbb
cmp
in
inc
ret
jp
ret
pop
jp
test
xchg
push
hlt
js
sbb
sbb
aad
adc
and
sbb
ja
movsb
sub
mov
adc
mov
jne
and
mov
mov
stc
pop
lea
sbb
sub
jno
div
dec
les
pop
ret
sbb
arpl
xchg
push
pop
sbb
inc
and
add
repnz
adc
xor
iret
or
test
insl
jle
dec
sub
inc
std
dec
cmp
or
sti
fistps
pop
lods
xlat
aaa
xchg
jge
ja
hlt
scas
and
mov
je
cltd
xchg
sub
mov
xor
lret
adc
inc
xchg
popa
mov
mov
sbb
aad
loop
popa
sbbl
adc
pop
imul
push
jp
test
sbb
pop
mov
fistpll
mov
cmc
inc
aam
or
or
testl
out
popa
jge
mov
cmp
cmp
loopne
push
je
push
cmp
pop
push
popa
and
mov
pop
sbb
mov
jb
fwait
shrl
sbb
ret
xchg
outsb
and
cmp
cmp
jno
push
pop
mov
mov
cli
fwait
and
test
out
pop
lret
mov
mov
inc
mov
pop
mov
call
sti
shll
pop
dec
jnp
iret
cmp
dec
xchg
pushl
xor
mov
and
sub
adc
pop
adc
je
add
pop
mov
mov
fnstcw
sub
adc
mov
loopne
or
arpl
or
mov
jbe
stos
mov
nop
or
inc
adc
loope
jge
neg
push
jae
push
cmp
fildll
scas
pop
addr16
cs
xchg
mov
inc
sbb
ds
mov
loope
pop
cli
aaa
push
mov
mov
xor
ja
inc
xor
ds
jg
aaa
loope
jno
in
imul
aad
cmp
pop
sarb
ret
ljmp
int
les
adc
or
aas
sbb
push
xor
jns
aaa
sub
dec
mov
jge
cmp
mov
jbe
mov
jne
sbb
insb
stc
addr16
negl
cmp
mov
lock
pop
xchg
int3
rep
dec
inc
xchg
arpl
rorl
add
mov
push
adc
sbb
xor
xor
imul
lret
outsb
sbb
int
loope
outsl
sbb
pop
pushl
lcall
mov
cmp
std
repz
mov
cli
add
add
movsl
pop
cmp
jns
sbb
xor
sub
sbb
mov
shll
or
shll
jmp
int3
repz
out
mov
imul
stc
stc
cmc
xchg
pop
jae
pop
outsl
jecxz
sub
xchg
add
mov
pop
inc
sub
mov
sbb
inc
jne
xor
pop
idivl
and
dec
jbe
insl
mov
sub
mov
ja
shll
out
mov
dec
xchg
ret
jbe
mov
and
dec
jno
dec
outsl
js
out
data16
imul
out
xor
sbb
push
sub
jp
insb
xor
jp
fs
push
push
ja
loop
imul
aam
push
cmp
aaa
and
cs
mov
dec
mov
mov
push
sbb
iret
fisubrs
jnp
insb
mov
mov
adc
stos
xor
adc
jno
jne
mov
xor
sub
js
and
aaa
cwtl
mov
mov
insl
sbb
mov
in
imul
repz
ds
inc
in
xchg
outsl
int
subl
inc
mov
movsl
mov
sub
addr16
mov
jne
rclw
sub
jno
cmp
dec
mov
js
insb
cmp
or
dec
imull
sti
stc
and
and
sub
inc
mov
push
out
pop
push
repz
cmp
repz
mov
jmp
mov
int
xor
mov
mov
bound
pop
insb
jns
cmp
outsl
lods
pop
fwait
cmp
js
cmp
mov
cmovge
ss
dec
imul
sbb
add
xor
cltd
or
mov
xor
sub
repnz
in
inc
sub
cmp
mov
stc
add
aaa
adc
push
cmpsl
sub
inc
out
add
dec
push
cmc
mov
pop
daa
pop
iret
stos
push
leave
out
pop
or
push
push
lret
fldl
popf
xlat
out
mov
dec
iret
lret
dec
int
and
popa
insl
imul
std
movsb
push
movsl
pop
das
das
ja
clc
sbb
js
inc
sub
sbb
imul
pop
pop
notl
pop
pop
std
lea
push
jb
push
out
xchg
dec
or
mov
push
ds
repnz
xchg
mov
cs
dec
jne
pop
cmpsl
lret
andl
lcall
dec
aas
dec
mov
inc
mov
test
xchg
lods
inc
test
je
push
cmp
mov
cmpsb
pop
jno
dec
out
mov
mov
xor
mov
mov
push
cmp
and
stos
sbb
push
pusha
rcrb
ret
push
inc
xor
cmp
push
shr
orb
mov
mov
out
adc
push
adc
mov
mov
adcb
fcompp
cmpsb
mov
aaa
pop
cmpsl
inc
sub
cmpsl
cmp
sub
dec
adc
sbb
pop
jbe
jp
xor
mov
cmp
repnz
imul
xchg
test
sub
fcmove
pop
test
xchg
push
pop
xor
hlt
push
and
sub
sbb
push
mull
sub
jmp
pusha
pop
inc
ss
out
lret
push
adc
out
lea
dec
shrb
dec
lods
pop
xor
lock
push
inc
dec
mov
and
lea
enter
xchg
push
imul
movsl
mov
scas
cmpsb
mov
cmp
ret
out
cmpb
cmp
mov
xor
jecxz
mov
dec
xchg
push
out
stos
cmp
flds
pop
xchg
popa
sub
dec
popf
jp
mov
fs
sub
mov
cwtl
mov
cmp
mov
pop
sahf
ds
xchg
xor
das
jbe
daa
cmp
jle
dec
popa
arpl
les
and
sbb
mov
cmpsl
je
push
pop
inc
push
ret
ss
sub
cmp
fld
clc
mov
add
mov
mov
pusha
dec
mull
inc
pop
pop
and
or
mov
xor
test
fbstp
pop
inc
sub
push
ret
pop
out
lret
cwtl
jno
or
sbb
xor
sahf
jg
push
outsb
jecxz
sub
mov
inc
jg
sub
pop
lock
insb
add
pop
push
clc
imul
cmp
mov
mov
cmp
mov
into
jle
push
outsl
dec
sub
sub
mov
or
sub
adc
mov
jl
mov
push
push
std
lret
fidivl
daa
jae
push
xor
mov
sub
fildl
out
std
sub
mov
jbe
mov
cld
or
outsb
push
je
sbb
shl
push
sub
or
pop
mov
xchg
clc
jecxz
aam
scas
cmp
int
cmp
cmp
push
outsb
cmp
sub
cmp
and
pop
jne
pushf
push
jns
mov
push
push
idivl
cmp
sub
daa
cmp
pop
mov
jp
out
je
mov
mov
dec
or
sbb
mov
bound
movsl
aas
inc
fwait
adc
push
xor
dec
mov
pop
jge
cmp
mov
shl
adc
scas
mov
jns
outsl
adc
jl
out
pop
mov
pop
aaa
xchg
pop
clc
xchg
test
pop
insl
les
and
pop
push
push
loop
cmpb
xchg
cmp
ret
xor
or
dec
dec
in
mov
mov
test
push
dec
pop
dec
sub
mov
push
lods
sub
sbb
adc
xor
bound
sbbb
aaa
xor
pop
popa
out
mov
dec
ss
ret
inc
subl
sub
std
outsb
adc
aad
fnstcw
jp
imul
jecxz
or
in
sub
movsb
lock
xchg
xchg
mov
int
and
sbb
sbb
mov
jns
subb
scas
xor
cmp
divl
cmp
push
pop
xchg
test
xor
pop
ss
and
inc
ss
popf
jle
jb
or
pop
inc
dec
or
pop
hlt
addr16
xor
test
jb
int3
mov
push
jmp
and
jo
shll
lret
dec
cwtl
xchg
nop
adc
inc
dec
cmc
aaa
hlt
mov
ss
adc
xor
int
sbb
cltd
jno
mov
rorl
test
mov
insb
pop
mov
mov
jo
mov
jnp
call
loopne
push
pushf
sbb
js
xor
loopne
adc
lock
aas
jno
mov
mov
and
adc
dec
mov
cmp
arpl
xor
mov
xchg
loopne
push
pop
insb
mov
dec
fcompl
xchg
pop
jp
jnp
stos
cmp
mov
push
movl
mov
dec
xchg
cmp
or
push
mov
mov
insb
mov
mov
bound
pusha
sub
sbb
lock
testb
in
and
jbe
sbb
mov
sbb
and
push
stos
cmp
push
rclb
ljmp
aaa
mov
xchg
mov
rcr
repnz
test
pop
enter
mov
adc
xchg
mov
xor
pop
push
push
or
mov
hlt
xchg
lret
push
xor
sub
jge
imul
loop
cmp
mov
push
mov
xchg
cmp
leave
adc
test
cmp
cwtl
xchg
es
or
dec
sarl
mov
pop
cmp
dec
xor
mov
lods
pop
insl
mov
gs
push
adc
ret
idivb
popf
mov
mov
pop
mov
scas
ret
clc
cmp
xor
ret
cmpsb
nop
and
mov
ljmp
popf
mov
je
dec
das
in
fwait
jae
out
mov
rorb
test
sbb
dec
bound
bound
push
sub
in
jecxz
cmp
mov
push
mov
movsl
into
push
mov
loop
or
sbb
xchg
dec
mov
lods
add
cmpsl
xor
inc
cmc
mov
test
mov
rolb
sub
push
inc
mov
insl
in
dec
mov
mov
aaa
pop
push
mov
cmp
sub
cmp
scas
or
ljmp
pushf
int
sbb
mov
outsl
test
fstpt
fcoml
sub
mov
xchg
int
sub
adc
pop
inc
push
sbb
mov
xor
stc
mov
adc
ror
mov
adc
fs
inc
lods
popa
xor
bound
mov
mov
out
fdivr
mov
cmp
inc
mov
push
orl
andb
repz
jp
lds
test
inc
lea
jl
ja
sub
push
jge
mov
xor
repnz
push
cmpsb
aaa
aas
mov
xor
cmp
sbb
or
xorb
lods
mov
fcoms
pop
push
adc
mov
and
mov
pop
mov
xor
mov
or
mov
test
scas
cmp
mov
mov
mov
outsl
dec
xchg
xchg
push
insb
mov
ss
cmp
addl
out
pop
fdivrl
push
andb
stos
insl
sub
test
int
imul
rcll
push
push
pextrw
push
cmp
or
push
mov
pop
cmp
lods
scas
adc
or
or
fwait
jno
test
mov
int3
psraw
adcb
pop
adc
sbb
lret
push
pop
jno
stc
in
cmp
sub
dec
mov
gs
push
inc
adc
jae
mov
fadd
adc
mov
cmp
xor
data16
je
popa
rorb
mov
popa
aad
in
sbb
std
jg
mov
sarl
test
and
push
aam
sbb
add
orb
and
push
shrb
sub
jle
out
cli
mull
enter
lret
add
dec
or
inc
sbb
xor
shll
jne
inc
fisubl
movsb
popa
les
adc
add
mov
cwtl
xchg
sar
mov
cmp
push
dec
enter
jb
negb
sub
cmc
or
movsl
cltd
xchg
or
xchg
fldl2t
adc
lods
sbb
pusha
ljmp
jl
pop
rorl
lea
cmp
cmpsb
aaa
adc
jb
aas
mov
outsb
mov
mov
jg
sub
shlb
add
arpl
dec
push
xor
and
pusha
or
sbb
pop
push
jg
ret
aad
int3
into
mov
clc
lock
cli
pop
dec
dec
cmpsl
scas
xor
rclb
aaa
jnp
jg
int
jns
in
mov
scas
cmp
sti
loop
cwtl
vmaskmovdqu
stc
negl
mov
iret
fldcw
loopne
ljmp
fcomi
jne
xchg
cmp
sbb
sbb
dec
loopne
mov
adcl
cld
outsl
ret
leave
movsb
sub
scas
cmp
scas
fisubs
dec
sbb
addb
pusha
cmp
mov
mov
pop
adc
push
xor
cmp
xorb
adc
int
push
or
hlt
std
jnp
test
or
lods
add
xchg
pushl
adc
mov
int3
mov
adc
sbb
sbb
ss
cmp
mov
mov
pop
or
ret
jge
xor
fucom
psubd
lds
mov
mov
mov
adc
jge
sahf
gs
mov
mulb
fisttpl
notl
sub
aad
cmp
int
jge
or
rorb
inc
and
addr16
adc
adc
sub
aad
int
jl
mov
jl
jne
mov
fnstsw
push
adc
xor
mov
loope
pop
iret
pop
push
mov
imul
addl
mov
in
mull
sub
lock
push
test
push
cmovne
insl
lods
lea
test
lea
inc
jae
mov
pushf
imul
pop
mov
loopne
cmc
dec
shll
iret
insb
jne
rcll
mov
cmp
push
daa
shl
mov
cmpl
into
pop
cmp
xchg
icebp
insb
hlt
push
xchg
test
aad
shll
cmp
repnz
aaa
mov
sbb
mov
inc
lods
mov
repnz
out
jp
lods
gs
ss
icebp
mov
je
and
aad
cmp
jmp
dec
or
cmp
sub
pop
loope
jnp
sahf
push
xchg
out
jnp
pop
cmpsl
cmp
leave
mov
pop
in
mov
mov
leave
jge
pop
ja
xor
push
pop
mov
je
sub
and
xchg
adc
cwtl
jmp
sarl
mov
push
fstps
adc
ret
and
jno
dec
popf
ss
inc
dec
cmp
lret
mov
add
stos
call
test
xor
or
in
sub
mov
test
sub
ja
leave
jnp
mov
inc
nop
loop
aad
stc
mov
insl
mov
jmp
xchg
sbb
jge
imul
lods
mov
sub
lods
insl
jns
mov
mov
rclb
scas
repz
scas
sarb
jae
lods
xchg
sub
lock
popa
jp
xchg
jns
imul
jns
pop
cmp
int3
or
mov
inc
lahf
loopne
push
or
push
in
mov
inc
mov
mov
xor
dec
jns
leave
mov
cmp
insb
not
mov
lock
dec
push
inc
imul
cmp
pop
sub
and
add
jne
xchg
jno
lea
cmp
xor
insb
repz
ret
push
jmp
mov
dec
jle
fidivrl
mov
dec
cmp
xor
xchg
bound
adc
mov
pop
cmp
cmp
fldt
addr16
test
idivl
and
sbbl
loopne
arpl
push
fdivs
adc
std
pop
repz
test
aad
sub
lds
test
fs
xchg
mov
xor
inc
loope
test
pop
pop
pop
lods
cmpsl
jns
lcall
cmpsl
es
xor
popa
lds
cmp
cmp
or
lahf
dec
popa
call
lret
adc
add
mov
cmp
adc
aaa
mov
jns
test
loope
mov
adc
iret
mov
insw
xor
aaa
rcrb
push
pop
jle
mov
lahf
cmp
je
fbld
sti
das
or
cmc
popf
dec
and
sbb
std
sti
mov
repz
dec
cmp
inc
pop
cmp
out
mov
icebp
xlat
shrl
xor
and
lock
sarb
inc
insl
push
mov
cmpb
cmp
aad
dec
add
stos
mov
mov
pop
test
dec
into
clc
je
push
xchg
add
cmp
movntq
add
inc
jae
stos
mov
cli
rcrl
cs
testb
sbb
push
test
int
outsl
movsl
std
jp
adc
scas
inc
insb
xor
ret
hlt
ja
repnz
xchg
mov
aam
lea
popa
ss
and
xor
in
pop
mov
in
sbb
jle
and
sbb
gs
mov
rolb
int
cmp
addr16
int
pop
fadds
mov
push
adc
sub
xor
imul
icebp
imul
jg
push
stc
mov
lods
mov
scas
insl
or
ja
test
loop
cmp
sbb
mov
icebp
cmpsb
pop
fildll
loopne
xor
out
adc
aam
imul
outsb
mov
sarl
dec
iret
test
sbb
cmp
dec
repz
and
sub
daa
or
cmp
js
imul
out
mov
dec
pop
mov
pop
add
xchg
cmp
pop
frstor
cmpsb
mov
push
mov
or
jne
and
cmp
inc
call
jo
iret
aad
cmc
cmp
sbb
in
das
stc
add
test
mov
test
sbb
jl
clc
int
dec
nop
test
inc
mov
rorl
or
test
fcmovu
or
sub
insl
test
es
xchg
out
cld
into
pop
dec
andl
mov
xchg
or
push
dec
test
inc
mov
shl
jp
cmc
mov
lret
add
int
mov
cld
cmp
mov
push
popa
stos
iret
jmp
fisttpll
mov
movd
cli
ljmp
mov
mov
call
lods
adc
mov
dec
aaa
cmp
inc
cs
jo
push
insl
adc
push
jno
add
inc
cmpsl
push
jg
sub
xorl
dec
mov
stos
push
cmc
inc
pushf
ja
pushl
sub
jns
lcall
cmpsl
pop
jns
hlt
mov
cmp
imul
aas
imul
or
sbb
ds
subl
add
and
imul
shl
sbb
aad
add
cltd
pop
xchg
ss
adc
mov
insb
sbb
clc
ss
aas
aam
imul
dec
jecxz
jns
cmpsl
pop
jbe
lea
rcrb
push
pop
fnstenv
scas
mov
scas
mov
dec
into
xor
jl
mov
std
roll
data16
sub
cld
dec
or
dec
push
and
jg
sbb
testl
jno
adc
jle
in
and
adc
outsb
ret
xchg
loopne
add
cmpb
fiadds
insl
jnp
pop
cmp
ja
xchg
ficoml
jp
adc
ret
dec
mov
enter
scas
das
mov
insl
mov
test
mov
jae
sbb
repnz
cmp
enter
mov
loop
inc
rorb
xchg
scas
stc
mov
mov
lods
dec
cwtl
or
ljmp
cwtl
sbb
bound
mov
fisttpl
fldt
cmpsb
xchg
mov
xchg
mov
push
in
enter
int
jnp
icebp
imul
aas
imul
xor
and
cmc
movsl
xor
pop
dec
and
mov
dec
push
pop
sbb
sbb
xor
out
pop
movsb
push
push
pop
xchg
negb
les
shlb
in
ret
mov
mov
inc
mov
imul
jl
cmc
mov
int3
pushf
mov
pop
push
push
imul
ret
lods
out
add
sub
test
repz
mov
add
add
push
sbb
outsl
call
dec
pusha
cs
push
in
mov
imul
cmpsl
pop
and
push
cs
les
add
sub
popa
jl
dec
sbb
inc
loope
mov
lods
mov
jns
cltd
add
add
dec
fsubs
mov
int
jl
mov
dec
aas
shr
inc
insl
aaa
adc
rorl
ja
cmpsl
pop
sbb
pop
in
in
fiaddl
out
push
lret
or
mov
or
mov
lret
cmp
popf
mov
lods
mov
addr16
dec
incl
cmp
inc
cmp
andl
fistpll
jl
xorb
in
imul
dec
loopne
sub
pop
xchg
sti
ds
xor
inc
mov
lea
push
cld
sbb
popf
push
call
sbb
dec
sbb
icebp
stc
repz
cwtl
dec
jmp
enter
mov
imul
fidivrs
pop
ret
in
push
das
out
dec
icebp
movsl
xor
sahf
inc
in
pop
test
cmp
fisubrl
adcl
and
adc
fcomps
or
cs
sbb
out
xchg
sub
scas
or
insb
pushl
int3
testb
cmpsb
mov
push
daa
pop
cwtl
inc
stc
mov
push
sbb
mov
mov
out
jg
cmpsb
sbb
cmpsb
andl
or
mov
test
or
cmc
jmp
push
jl
dec
ss
cmp
js
push
mov
mov
push
or
gs
cld
mov
inc
xor
mov
outsl
mov
cmp
aam
push
cmc
jae
and
iret
cmp
cmp
pushf
mov
cwtl
sbb
cmp
jecxz
daa
add
cmp
imul
outsb
pop
push
stc
xor
ret
adc
push
inc
aaa
lods
mov
insl
jno
insb
lret
xor
mov
cli
xrelease
mov
mov
gs
mov
fs
lret
mov
push
adc
adc
mov
cmp
cld
sarl
inc
bound
xor
xor
into
adc
bound
sbb
imul
mov
push
pop
mov
pop
jge
rcll
xor
pop
ret
lret
mov
adc
jbe
loop
leave
cwtl
popf
sahf
rclb
xchg
pop
cs
int
loop
lahf
push
ljmp
std
xor
inc
xor
lcall
ret
push
lea
jo
es
imul
pop
push
fildl
frstor
jg
hlt
fidivs
nop
adcl
inc
xchg
popa
sbb
or
cli
adc
sub
mov
int3
inc
inc
pop
xchg
aam
pop
xchg
adc
mov
push
mov
xor
mov
sub
cld
push
and
sub
pop
daa
mov
pop
cli
movsl
xor
scas
adc
in
push
jnp
into
cmp
out
mov
outsl
sti
pusha
ret
cli
stos
pop
mov
lahf
je
cli
jnp
xchg
mov
jp
push
jmp
imul
shll
outsb
wbinvd
xchg
lea
pop
gs
cld
inc
outsb
ja
pusha
dec
test
jge
test
mov
inc
sbb
mov
imul
push
cmp
nop
jg
inc
lds
cmp
dec
mov
sbb
adc
inc
jg
dec
push
std
pop
testb
sbb
je
xor
lret
fildl
adc
mov
aaa
je
addl
mov
jmp
sub
sub
lods
xchg
add
rorl
insb
cmp
cmpsl
dec
mov
push
call
dec
mov
dec
jbe
jmp
sub
cltd
jno
shl
xchg
xchg
mov
jl
icebp
out
jp
xor
dec
fs
inc
lcall
add
insl
jg
pushf
fmull
mov
mov
jbe
dec
jnp
jl
mov
xor
jbe
rorl
or
xor
cmpsb
jmp
dec
or
cmpsl
sbb
adc
pop
mov
popa
cmpsl
jne
out
or
aam
lcall
and
jo
cmp
mov
add
xor
xchg
fucomip
and
and
mov
in
xor
popa
mov
test
inc
arpl
cmp
sbb
loopne
ja
mov
xchg
std
adc
xor
mov
sub
mov
dec
sub
out
jns
popa
jnp
xor
imul
mov
mov
cmpsl
add
fmul
out
shlb
jp
pop
xlat
lret
in
lds
adc
and
scas
mov
loop
adc
push
rcll
mov
bswap
fnstcw
push
aad
cli
mov
adc
into
xor
imul
int3
test
je
cmp
and
dec
push
bound
mov
fisttpl
cmp
push
cmpsb
inc
test
jno
jg
push
jl
pop
adc
cmpsl
cltd
jae
fbstp
mov
jnp
pop
adc
pop
mov
sbb
or
push
popf
popa
in
js
out
dec
lods
lods
jp
in
jmp
js
push
cmp
mov
mov
sarl
sbb
imul
cmp
and
inc
push
and
lods
push
sub
jns
pop
jae
sub
xor
dec
jbe
lods
or
rorl
pop
sub
jecxz
into
es
dec
test
mov
ljmp
cmp
mov
loop
mov
mov
dec
arpl
cmpsb
roll
rcr
mov
jb
cmp
push
inc
rcrb
dec
or
lret
flds
xchg
cltd
popf
or
mov
dec
loop
adc
imul
ja
jl
nop
fs
ss
cltd
mov
arpl
dec
xor
jne
mov
mov
mov
mov
xchg
ror
inc
ja
xor
ss
lret
mov
bound
gs
imul
push
jle
scas
xchg
and
rcll
cmp
aaa
test
das
jno
int3
je
sbb
js
xchg
mov
dec
sub
repnz
into
pop
inc
mov
dec
lret
cmpsb
lret
lret
lods
pusha
jg
and
mov
test
jg
decl
sub
dec
repz
cmp
outsb
jno
dec
xlat
stc
inc
lds
push
into
sbb
popf
push
ss
push
adc
mov
lock
packuswb
mov
or
ret
popf
xor
frstor
add
sub
push
mov
cmp
sbb
mov
lret
mov
adc
ljmp
push
jnp
cmp
je
ficoms
inc
out
sbb
testb
bound
out
mov
mov
adc
int3
dec
repz
pop
push
addr16
sysenter
mov
add
ds
push
lea
dec
out
stc
jmp
cmp
pop
dec
lret
pop
and
xor
loopne
push
ret
aad
out
mov
call
dec
mov
sti
loop
xor
or
or
clc
jae
inc
lea
dec
or
cmp
outsb
dec
mov
decl
mov
ret
inc
cld
xor
inc
or
leave
sub
aas
popf
jno
imul
xchg
repnz
jnp
inc
cmpsl
xor
arpl
icebp
mov
dec
sti
mov
loope
inc
sbb
enter
cmp
mov
sbb
test
sub
adcl
clc
outsb
push
mov
jae
lock
xor
sub
sar
dec
rorl
sbb
rcrb
std
out
jo
push
jl
sub
stos
adcl
sub
hlt
mov
imul
push
sub
dec
int3
insl
sub
insl
sub
fdivrs
test
inc
inc
inc
sub
dec
hlt
imul
bound
in
push
add
mov
sti
int
rcr
ljmp
loopne
out
jle
sbb
mov
jp
sub
mov
repz
push
repz
jne
cmp
dec
mov
stc
push
loope
pop
sar
mov
jns
push
xor
das
jl
add
fwait
dec
pop
popf
push
pusha
sbb
test
adc
dec
xor
test
stc
sbb
mov
and
pop
out
pop
pop
scas
ja
out
sub
cmp
pop
sub
push
lods
lret
jl
iret
stos
xchg
pop
sbb
push
enter
and
add
dec
rcrl
lds
insl
adc
inc
fimuls
add
sub
or
xlat
mov
dec
cmp
push
xchg
push
loopne
cmpsb
jno
cld
rcr
mov
rorl
int3
loopne
stos
adc
into
test
pop
ja
jge
cmc
inc
push
mov
pop
jle
jae
inc
xor
mov
mov
xchg
add
dec
or
insb
outsb
sub
shlb
loopne
push
test
adc
popa
mov
push
jp
push
lods
xchg
jnp
cli
cmp
mov
push
mov
sbb
fcmovu
adc
add
aas
and
jb
cmpsb
daa
xor
mov
mov
lds
test
pop
rcrl
cmp
ss
sub
xor
jl
repnz
push
add
rcll
dec
sarb
mov
jmp
mov
aad
imul
add
hlt
mov
shr
xchg
enter
mov
xor
call
je
push
xor
inc
jmp
insb
pop
dec
ja
icebp
jno
imul
and
nop
loopne
cltd
push
into
in
arpl
dec
mov
int3
dec
jbe
mov
pop
in
xchg
mov
cmp
mov
data16
clc
jno
sub
sbb
mov
inc
loope
or
lds
popf
pop
icebp
xchg
iret
inc
int3
dec
cmp
arpl
shll
cmp
sbb
lret
sarb
mov
mov
insb
mov
dec
add
or
mov
cs
cmpsb
cs
sub
xor
cs
push
popa
fldt
rcrl
ja
out
cmc
bound
shlb
sbbb
sbb
and
enter
das
sub
pushf
cwtl
push
push
sub
test
std
mov
sub
mov
mov
push
sbb
cwtl
xchg
xchg
dec
and
mov
mov
das
mov
xchg
xchg
ljmp
sti
adc
popf
mov
out
cmp
dec
push
sub
xor
jo
sbb
je
mov
std
loopne
fldenv
test
lret
mov
or
cmp
fs
gs
dec
bnd
icebp
sbb
inc
popa
es
xor
jl
insb
stos
sbb
pop
loope
int3
pop
pop
jno
sub
std
fistpll
cltd
out
mov
iret
mov
jle
cmp
and
popf
mov
pop
sub
cmp
xor
je
std
jns
mov
loope
xchg
ret
ror
xsha256
cmpsb
aad
jno
xor
jae
inc
pop
icebp
add
xlat
loop
imul
sti
bound
mov
scas
sub
inc
inc
pop
lock
push
inc
mov
and
inc
inc
mov
roll
stc
enter
pop
cmp
inc
test
mov
into
cmpb
sbb
ja
movsb
xor
sbb
data16
mov
xor
xchg
fs
jge
out
dec
mov
rcrb
fs
add
aas
sbb
cmpsl
push
sub
mov
push
out
sub
ret
mov
mov
mov
inc
cli
mov
push
popf
cmpb
movsl
jnp
pop
add
add
and
jb
sub
clc
and
adc
int3
dec
xor
pushf
repnz
mov
aaa
insl
mov
divl
and
push
mov
mov
bndmov
je
mov
sbb
out
repz
or
mov
lea
je
push
jmp
stos
lds
ds
mov
divl
add
push
addl
cli
xor
scas
insb
xchg
cmp
mov
xchg
cmpsl
xor
xor
cmp
insl
daa
jns
out
sub
push
aaa
dec
cmp
dec
adc
xchg
mov
popa
cmpsl
pop
cmp
data16
jns
iret
cmp
mov
cmp
sbb
jg
mov
cltd
and
pop
xchg
jno
inc
mov
pop
mov
les
push
jp
test
cli
mov
stc
inc
andl
loopne
movsl
xorb
pop
dec
addr16
das
mov
loope
orb
aas
imul
loop
dec
mov
aaa
add
data16
mov
or
mov
add
test
adc
fisubl
cmp
pop
imul
push
cmp
cmpsb
lock
ret
repnz
shrb
imul
mov
cmpsl
jl
sbb
mov
pop
callw
lea
pop
dec
jp
int3
inc
xor
mov
cmp
ret
push
adc
mov
outsl
lock
out
cmp
xchg
das
arpl
movsl
rorl
add
orb
jg
arpl
repz
xchg
mov
loope
pop
ds
mov
cmp
dec
mov
pop
arpl
fs
in
push
mov
dec
cmp
lock
xor
mov
sub
jno
cmp
and
cmovo
mov
fcompl
ja
test
scas
pop
mov
cmp
xchg
dec
dec
mov
inc
xor
in
loop
das
push
push
ljmp
scas
mov
mov
popf
ss
mov
mov
movsl
data16
out
cmp
push
xchg
arpl
cmpsb
mov
insl
subb
cmp
xor
insl
outsl
in
xchg
insl
pop
test
and
lods
das
inc
sbb
mov
fxtract
and
cmp
repnz
cmpl
int
mov
push
xchg
stos
adcl
mov
or
cmp
adcb
stc
cmpsb
adcl
pop
cld
mov
xchg
cmpsb
push
pop
push
orl
cmpsl
pusha
ds
mov
ret
or
je
imul
fidivrs
loop
test
lret
or
pop
mov
lock
fistpl
jle
xor
mov
and
mov
and
movsl
mov
lea
rcr
sub
dec
pop
or
push
mov
aam
repnz
and
cli
repz
rcll
pop
movsb
mov
sbb
inc
cli
out
shl
aad
push
jnp
add
adc
xor
adc
ret
inc
leave
stos
fidivl
jp
popl
daa
pusha
and
lahf
sub
pop
mov
lahf
aad
lock
push
xchg
dec
pop
movsb
mov
cmc
xor
push
dec
movsl
movsb
loopne
inc
push
into
jmp
adc
cmpsb
in
fisttpll
dec
fdivrl
mov
push
and
mov
adc
add
xlat
stos
jne
or
dec
push
adcl
mov
das
inc
mov
ror
pop
adc
mov
mov
sarb
ja
adc
pop
int
sbb
hlt
mov
ret
lea
lret
sbb
jp
cmc
jno
pop
out
cmc
lock
xlat
mov
loop
pop
push
int
mov
mov
xor
test
ljmp
mov
lds
aad
mov
test
sub
push
sbb
adc
push
in
mov
cwtl
jno
cs
insl
jecxz
lods
arpl
in
mov
add
scas
or
dec
inc
mov
into
cmp
cli
jne
pop
xor
push
test
xchg
lret
add
adc
cmp
lock
xchg
adc
icebp
rorb
iret
mov
mov
aam
iret
push
shl
or
inc
int3
mov
adc
jae
xchg
call
mov
cwtl
push
out
mov
iret
ss
cmp
cmp
xor
jp
jno
jns
mov
fists
and
add
mov
cmpsb
test
sti
mov
and
aas
cmp
adc
sbb
xchg
sbb
inc
lret
and
dec
fs
test
pop
ret
or
inc
mov
adc
loop
dec
mov
jns
popa
cmp
jl
mov
cmpsb
jne
data16
cmp
jns
dec
adc
mov
adc
aam
jecxz
or
ljmp
jmp
dec
loop
cmp
jge
xor
es
fldt
mov
cltd
sbb
sbbb
dec
or
mov
dec
mov
cmp
cmp
cld
cmp
jo
orl
rcrb
dec
aaa
cmp
das
dec
int3
dec
imul
mov
loop
mov
mov
jnp
aad
fisttpll
inc
xchg
pop
cmpsl
lods
inc
test
loop
loop
into
int3
pop
jmp
ss
jmp
es
sub
mov
lds
mov
pop
ja
mov
scas
push
jno
xor
jnp
xor
sti
sahf
imul
adc
cmp
jne
mov
sub
rorl
movsb
subl
sbb
and
inc
insl
adc
and
and
jp
mov
ret
out
jecxz
sbb
test
dec
das
lods
xor
cmp
dec
add
inc
adc
rcrl
cmp
jne
jmp
es
roll
arpl
dec
jb
adc
cmpsb
xchg
xchg
push
jge
mov
test
scas
cltd
stc
dec
leave
sbb
out
out
pop
inc
xorl
ror
inc
stc
inc
inc
cmp
cli
cld
jle
inc
js
pop
pop
rcr
cmp
pop
iret
dec
repnz
aas
xchg
divl
ja
clc
gs
test
es
mov
pop
ror
pop
sbb
cmp
aaa
mov
mov
mov
jp
insb
xor
les
jnp
in
cmpsb
mov
fidivs
jae
add
js
cmp
and
sub
mov
jnp
pop
in
movsb
clc
jae
sub
lods
test
jmp
outsl
push
jae
inc
mov
dec
rclb
lock
push
cmp
adc
cmp
std
mov
pop
ficoms
cmp
inc
cmp
pop
mov
jns
mov
imul
shlb
xor
sarb
mov
imul
sbb
xor
jge
sub
cltd
mov
mov
sbb
xchg
and
addr16
add
mov
cmp
movsl
out
rcll
jns
cmp
gs
idivl
jl
cmpsl
imul
mov
aaa
cmp
cmp
stos
ret
into
bound
std
inc
inc
xchg
cmp
mov
push
dec
cmpsb
jae
push
lcall
cmp
das
cmp
mov
adc
insl
mov
inc
test
adc
xor
adc
addr16
sahf
mov
jno
popa
aam
dec
imul
test
lds
dec
push
push
jno
cmp
xor
iret
cmp
push
push
jae
mov
adc
jno
in
outsb
jl
outsl
jae
push
mov
sbb
push
push
shlb
scas
jmp
inc
ftst
iret
movsl
mov
sbb
xchg
cmp
push
cmp
pusha
icebp
imul
arpl
mov
int3
sbb
add
push
cmp
cmp
xchg
cli
xchg
ficompl
inc
ss
insl
and
mov
hlt
jnp
shl
sbb
jecxz
in
jmp
mov
and
or
jp
mov
out
jbe
adc
dec
es
pop
mov
add
outsl
jecxz
jg
loop
mov
arpl
aad
insl
cmp
out
scas
lods
dec
push
arpl
xor
jb
adc
hlt
test
call
nop
jmp
cmp
lock
add
xor
sbb
dec
adc
ret
fnsave
jnp
fwait
cmpsl
inc
in
cld
jecxz
mov
dec
push
stc
popf
dec
jae
sbb
int
cmp
pushf
mov
push
dec
in
cmp
out
push
dec
inc
mov
mov
aam
orl
mov
sub
mov
lret
jecxz
pop
push
jno
xor
cmpsl
cmpsb
cmp
xor
pop
loopne
ss
lea
lcall
aaa
decl
rolb
cmpsl
call
test
fnstsw
xchg
inc
adc
sub
pop
cmp
push
in
int
imul
dec
mov
dec
sub
sub
aaa
jle
cmp
out
ljmp
iret
in
inc
outsl
mov
xor
mov
or
imul
mov
xchg
pop
test
push
rcrl
dec
mov
push
fldl
pop
add
or
jno
inc
popf
rcll
rorb
bound
sbb
jp
pop
dec
test
ss
stos
jno
xor
cli
lret
sub
cmpl
dec
pushf
shlb
mov
xor
ss
jle
popa
mov
test
rol
cmp
dec
stos
xchg
pop
mov
mov
cmpsl
push
mov
inc
sub
jbe
xchg
mov
in
inc
and
lret
jmp
cwtl
adc
sti
sbb
fucomp
pop
aam
movsl
pop
add
sbb
jnp
int3
add
inc
mov
mov
mov
cmovge
scas
xchg
cmp
dec
hlt
adc
xchg
popa
cld
jl
sbb
loop
stos
lret
sbb
xor
test
inc
shlb
xor
adc
in
addr16
js
mov
mov
jp
lret
ljmp
jae
je
dec
jns
popa
dec
jmp
cmpl
mov
pop
pop
pop
push
nop
jp
arpl
push
push
into
inc
dec
out
inc
or
push
jb
popf
dec
test
mov
ds
xor
arpl
flds
cmpsb
out
push
lea
and
movl
mov
mov
push
mov
je
int3
cmpsl
int3
dec
mov
mov
xchg
xchg
shrl
mov
loope
repnz
xor
sbb
lods
push
test
js
add
sub
push
ja
adc
call
mov
mov
fsubrl
pop
sub
sti
imul
stc
push
stos
lea
fs
push
xor
xchg
lods
dec
aaa
sbbb
pop
rcr
adc
scas
adc
push
scas
pop
jbe
imul
stos
dec
jbe
mov
in
daa
mov
jl
fcoml
jbe
xchg
pop
outsl
mov
mov
clc
mov
mov
or
shll
pop
insb
popa
lods
sub
pop
repnz
or
ja
ljmp
les
jnp
lods
cmp
cmpsl
push
pop
mov
push
or
push
jae
loope
addl
addr16
and
or
lods
or
insl
sub
push
out
sbb
pop
mov
xor
push
cmpsl
cmpsb
mov
jg
shrb
adc
sub
adc
in
push
or
inc
fbld
and
sbb
jb
mov
fiadds
mov
xor
int
push
aaa
adc
pop
in
loopne
lods
add
cmpsl
cltd
xchg
push
inc
mov
outsb
in
orl
xchg
pop
dec
pop
pop
sub
test
dec
xchg
ret
or
push
or
push
xor
dec
addr16
mov
lds
mov
or
xlat
xor
xchg
fwait
pop
test
pop
out
shrl
mov
and
cli
fisubrl
dec
and
imul
mov
mov
adc
stos
icebp
mov
add
in
sub
cmp
dec
fwait
mov
jmp
sub
mov
or
jb
les
jge
icebp
call
popa
mov
add
cmp
xchg
fdivl
mov
lea
outsl
dec
sarl
int
jge
mov
push
xchg
mov
push
stos
mov
adc
sbb
mov
dec
cmp
fbld
dec
xor
adc
lret
imul
insl
pop
jno
mov
push
ljmp
push
pop
add
ljmpw
cwtl
jae
pop
inc
dec
outsl
test
int
mov
out
pop
int
adc
stos
fstps
add
clc
sub
mov
mov
mov
xor
mov
xchg
mov
in
repz
movb
shrl
or
xor
pop
sub
inc
adc
ljmp
rorl
out
out
mov
roll
cmpsb
shll
test
lock
xchg
lret
fdivs
pop
xor
jbe
xor
mov
lods
out
data16
orb
movsl
insb
adc
adc
out
stos
adc
out
stos
ljmp
jns
out
shr
lcall
out
sbb
fnsave
int
repz
out
icebp
jne
test
aas
xchg
out
mov
movsl
xor
lods
stos
insb
stos
adcl
sbb
das
push
jg
pop
sbb
test
mov
xor
fimull
jne
outsl
fcomps
xchg
push
insb
jnp
je
lods
aad
mov
jb
lock
jbe
xlat
jno
jmp
arpl
mov
cmp
scas
je
shl
mov
aas
and
mov
cmp
push
and
sbb
cmp
inc
cld
mov
in
loopne
popf
popa
imul
mov
dec
out
orb
imul
fwait
in
push
int3
inc
jns
mov
and
inc
pop
jne
add
imul
jno
lock
mov
jle
mov
popf
data16
bound
fcomps
mov
ficompl
cmp
test
inc
imul
cmp
inc
xorl
push
out
nop
cs
movsb
mov
ja
jae
push
add
push
cltd
mov
jo
in
dec
jge
inc
inc
movsb
outsl
insl
jp
in
mov
push
xchg
dec
in
or
pop
jp
fistpll
mov
js
je
jne
scas
mov
mov
aaa
pop
inc
push
pusha
movsl
xor
imul
shll
lds
cli
mov
cmp
mov
repz
ret
pop
adcl
ds
and
sub
lock
push
popf
push
inc
sbb
shlb
and
clc
ja
dec
inc
mov
insl
popa
xor
push
mov
and
pop
popa
jno
pop
mov
add
xchg
lods
cltd
lret
aam
cmp
mov
lds
xchg
int
aaa
mov
test
adc
sub
enter
xor
iret
xor
dec
push
aaa
cmpl
ret
mov
inc
xchg
inc
loop
aaa
xor
aaa
dec
adc
xor
imul
cmp
addr16
add
rcrb
aaa
inc
mov
jns
xor
mov
sub
xor
popa
or
xchg
jnp
pop
cmp
xor
push
inc
aad
cltd
ljmp
int
xor
iret
sbb
push
pop
jnp
and
add
fistps
out
cli
jl
mov
imul
jne
mov
mov
fistpl
jg
mov
mov
imul
mov
in
mov
subl
adcl
loope
adc
mov
adc
mov
cmp
inc
dec
mov
imul
xor
inc
sub
mov
xchg
pop
mov
adc
fsubs
add
jnp
dec
imul
pusha
mov
pop
pop
push
push
lcall
fcomp
xchg
push
mov
cmpsb
test
lcall
dec
jmp
xchg
pushf
rclb
push
popf
mov
fcmovnbe
outsb
sarl
test
xchg
iret
fwait
pop
mov
add
rcrl
sbb
test
aad
lods
jo
add
push
push
sbb
test
mov
mov
into
aad
imul
cmp
pop
in
push
inc
inc
pop
cmp
shll
or
sbb
fcompp
ss
cmp
imul
sbb
mov
std
idivl
jmp
mov
clc
adc
mov
cmpb
push
inc
mov
repnz
lods
leave
cmc
inc
or
lret
repnz
and
cmpb
sub
imul
and
decb
gs
ss
in
or
sarl
mov
mov
mov
mov
xor
or
pop
test
push
dec
push
mov
mov
and
lcall
mov
mov
adc
loope
xor
mov
mov
out
roll
push
xchg
dec
push
ss
cmp
fwait
mov
icebp
jecxz
stos
mov
push
gs
xchg
or
jl
into
mov
and
or
fisubrs
push
mov
pusha
and
adc
cmp
sub
jns
jg
testl
mov
fdivrs
pop
ja
cmp
mov
dec
pop
jnp
loop
dec
jge
push
push
ds
mov
test
mov
das
in
int
sbbl
mov
inc
outsl
or
adc
sbb
ds
adc
adc
cltd
cmp
scas
jne
mov
outsl
movaps
xchg
fildl
out
mov
test
fwait
je
jl
insl
jae
or
movsb
in
loop
adcl
dec
xor
or
add
pop
lods
mov
mov
sub
mov
push
pop
push
inc
mov
cld
lret
jae,pt
icebp
push
lret
mov
ljmp
rcrl
outsl
mov
loopne
fidivrl
adc
or
and
mov
pop
jne
add
ljmp
mov
test
xor
or
xlat
fisttpl
push
mov
test
jb
das
xchg
push
adc
es
orb
andb
test
repnz
jns
addr16
loope
xchg
test
or
das
sbb
addr16
test
inc
dec
inc
mov
in
mov
imul
sarl
and
push
insb
xor
ds
shlb
mov
push
inc
lods
cltd
xchg
dec
jnp
inc
test
jle
call
mov
jns
push
out
aaa
xlat
adc
jae
mov
test
pop
cmpl
icebp
pop
mov
in
adc
push
idivb
pop
loop
or
cli
pop
arpl
outsl
test
gs
sub
inc
lret
cmp
cmp
adc
pop
xchg
test
pop
push
cmp
nop
insb
js
cmovno
cmp
rcrl
mov
dec
dec
jo
popf
xor
wbinvd
pop
jns
imul
xor
hlt
xchg
lea
xor
lods
pop
jns
and
mov
push
mov
lea
clc
test
aaa
mov
jp
xor
inc
out
pop
insb
mov
dec
daa
int
mov
pop
inc
or
cs
mov
dec
aam
cmpsb
cmp
cmp
cmp
lds
jnp
dec
test
popf
cmp
ds
sbbl
or
jno
push
std
in
sbb
pop
in
mov
lock
xor
aam
out
test
loop
dec
jp
cmpsl
test
subl
pop
add
loope
ljmp
pop
ss
dec
cli
sahf
inc
and
mov
mov
inc
pop
or
xor
add
mov
daa
shll
aad
or
cmp
inc
into
ffree
lret
push
and
repnz
pop
cmp
inc
aad
cmp
cmp
lret
dec
cmp
bound
dec
stc
push
sbb
jmp
xchg
inc
hlt
out
clc
dec
sub
cmp
aaa
adc
jmp
push
gs
out
cmp
arpl
mov
or
data16
dec
mov
ss
cmp
adc
jnp
push
jbe
mov
sbb
imul
push
xor
mov
mov
jp
dec
mov
sarb
daa
xlat
and
jae
push
arpl
mov
test
and
aad
pop
lea
shrl
cmp
into
jl
jbe,pt
xchg
rorb
xchg
jne
popf
sbb
inc
arpl
inc
push
aad
mov
lea
xor
lock
movsb
jne
stos
and
roll
adc
stos
into
notb
xor
ret
lret
rcll
shlb
push
pop
mov
inc
scas
test
mov
nop
pop
js
mov
sub
mov
jno
xor
ret
lea
inc
inc
pop
mov
push
outsb
lret
adc
push
xchg
jno
hlt
sbb
push
sbb
dec
les
jns
lods
mov
ret
dec
xchg
sbb
sbb
inc
add
dec
insl
iret
jecxz
or
fxch
ljmp
shl
test
mov
aaa
iret
sbb
push
inc
jge
aas
popf
jg
inc
push
mov
push
xchg
pop
in
adc
test
push
es
aad
jg
repnz
push
and
shlb
or
inc
xor
test
xor
or
ret
test
in
mov
dec
push
js
sub
push
movb
icebp
mov
xor
xchg
cmpsb
pop
in
sbbl
jp
imul
inc
shrl
jns
cmp
inc
pop
inc
jno
es
jp
in
pop
popa
sti
outsl
inc
rcrl
adc
scas
je
xchg
stos
cmp
mov
aad
pop
mov
push
jmp
inc
addr16
fstpl
or
fnstsw
mov
in
in
loopne
inc
sbb
jb
cwtl
adc
imul
mov
cmp
mov
mov
inc
cs
sub
push
cld
sbb
data16
push
into
cmp
fwait
pop
push
lahf
jl
push
mov
lds
xchg
dec
jbe
fmul
jae
add
push
push
inc
or
fcmovne
push
dec
out
xor
popf
or
mov
gs
jmp
or
mov
or
cmp
rclb
and
call
lcall
sbb
lahf
jecxz
subl
jbe
add
mov
imul
pusha
fisttpl
cmp
fmull
imul
mov
mov
in
add
cld
cmp
dec
and
pop
aaa
rcl
lods
lock
imul
stc
ljmp
xor
inc
mov
test
dec
mov
xor
fdivp
ret
inc
addr16
scas
dec
mov
pop
lea
aad
ljmp
inc
scas
rorb
cmpsb
pop
dec
les
dec
cld
jo
cmp
cmp
cmp
pop
push
arpl
inc
pand
mov
xor
jae
gs
lret
fldt
mov
cltd
mov
fisttpl
pop
cmpsb
mov
jecxz
mov
dec
jo
dec
repnz
xchg
insb
popf
mov
out
lea
insb
shrl
and
jns
xchg
aad
stc
cli
inc
or
loope
movsl
mov
fcomps
popf
mov
or
cmc
ret
xor
xor
mov
xlat
jns
mov
outsb
lret
lcall
imul
and
mov
cmp
mov
xor
nop
fmull
jg
in
xchg
cmp
clc
mov
jnp
rcl
test
mov
mov
push
repz
or
add
dec
xor
jns
aad
dec
cmp
imul
imul
sbb
xor
mov
mov
mov
dec
cmp
mov
jae
mov
out
jmp
fdivl
scas
iret
clc
movsb
shrb
cld
inc
adc
sbb
icebp
adc
aaa
mov
divl
or
aaa
jle
shll
add
inc
mov
shll
cwtl
mov
lret
jnp
inc
inc
test
ljmp
je
xor
add
mov
sbb
cli
imul
outsl
xor
add
popa
push
cmp
sbb
data16
jg
call
call
jbe
mov
mov
ljmp
out
addr16
or
pop
insb
lods
cmp
push
cmp
mov
cmp
mov
add
mov
pop
mov
dec
cs
pop
pop
cwtl
clc
mov
and
xor
sub
fs
sub
std
push
push
std
mov
rcll
into
loopne
inc
and
cmp
ds
aam
mov
mov
dec
xor
cmp
sbb
outsb
ret
jae
jmp
int
inc
loop
popa
push
cmc
sti
and
sub
mov
cmp
jne
inc
and
xlat
shl
fsubrs
ret
addr16
push
mov
pushf
push
and
cmp
loop
inc
nop
inc
fs
aam
ret
jg
jnp
je,pt
jp
jnp
pop
shl
sub
or
cmp
aaa
addb
dec
imul
xor
inc
ficomps
in
push
xor
inc
mov
imul
ja
cmp
mov
jl
sti
roll
mov
es
mov
adc
ss
inc
inc
mul
pop
pop
arpl
insb
adc
adc
xor
cmp
sub
jp
xor
mov
xlat
cmpb
stc
pop
sbb
roll
jns
aad
cmp
out
lds
pusha
popa
mov
ljmp
int3
scas
cmp
nopl
loopne
mov
insl
je
adc
call
xor
mov
push
loopne
pcmpeqb
mov
lcall
push
or
push
xchg
gs
jb
xor
clc
pop
mov
ds
mov
std
shll
and
imul
xor
aaa
in
mov
sbb
mov
and
aaa
push
mov
xchg
xlat
in
cmp
cmpsb
call
cmpsl
mov
xchg
scas
jne
mov
mov
mov
fbstp
jno
push
es
pusha
xor
lfs
mov
aaa
repz
xor
sbb
xchg
mov
jp
xchg
imul
cmp
test
aam
shll
popf
insl
and
fwait
int
push
cs
repz
xchg
and
ret
add
pop
imul
test
xor
lret
insl
inc
cmp
mov
int
cmp
jno
or
daa
scas
pop
xchg
mov
mov
pop
not
imul
out
mov
add
rclb
xor
call
jp
xchg
xor
push
mov
pushf
dec
or
push
mov
inc
fsubp
sub
mov
sbb
sti
adcl
push
call
sub
push
sbb
xor
dec
and
aad
daa
in
pop
xchg
fisubl
mov
aam
push
es
lret
imul
nop
push
lods
cltd
scas
or
or
mov
addr16
adc
cmp
es
jecxz
je
packuswb
dec
popf
xchg
and
jbe
jo
dec
aas
jg
sarb
ficomps
cmc
je
cmc
in
mov
imul
mov
push
jb
ret
les
mov
xor
das
fisubs
cmp
iret
ds
cmpsb
gs
test
sbb
int
sbb
pop
fcoml
test
push
jecxz
lods
addr16
popf
or
in
xchg
in
jb
mov
xchg
mov
jg
lods
jnp
jb
dec
test
adc
adc
insl
mov
cmp
and
lods
rorl
insb
pcmpgtd
test
pop
inc
jne
repnz
cmpsb
test
int
xchg
and
shll
mov
pop
mov
sub
push
dec
lds
dec
les
stc
mov
cmp
mov
jns
xchg
movsb
sub
mov
jnp
pop
fcompl
mov
jb
add
mov
into
mov
cwtl
outsb
test
int
or
inc
stc
negb
dec
test
inc
btsl
popf
ds
outsl
outsb
xchg
mov
out
testl
popf
arpl
sbb
xor
loop
test
jns
xchg
imul
dec
enter
jg
hlt
insb
xlat
sar
xchg
aaa
cmpsl
dec
cltd
push
shl
call
mov
push
jno
inc
lds
roll
pop
ljmp
sub
cmp
ficoms
xchg
lea
add
in
shrb
in
pop
or
in
aas
flds
mov
push
jb
mov
add
mov
jmp
imul
cltd
mov
daa
pop
andl
mov
sub
outsl
pusha
mov
inc
dec
in
loop
adc
fildll
push
movsl
xor
repnz
fs
repnz
dec
insb
testl
movsl
or
and
test
mov
in
adc
adc
test
test
dec
imul
fsubrl
loope
adc
xor
cmp
mov
cmpsb
scas
jb
popa
test
insl
or
mov
cmp
fstpl
stc
test
enter
repnz
adc
jne
call
dec
dec
mov
fwait
cmp
clc
sarb
test
cmc
bound
mov
cmp
int
xchg
push
fcompl
inc
shr
clc
adc
cld
imul
nop
inc
in
mov
popf
jo
fisubs
imul
push
in
inc
xor
dec
sub
inc
pop
mov
popa
insl
adc
scas
jp
in
leave
or
std
mov
inc
add
int
mov
cmp
int3
mov
outsl
test
cltd
jns
mov
or
scas
cmp
sub
test
xor
lock
push
out
push
or
sub
mov
add
xor
mov
fildll
add
pop
inc
sbb
scas
cmp
or
pop
mov
xchg
pop
adc
mov
scas
testl
mov
and
cmpsb
mov
mov
movsl
and
adc
add
push
jl
test
imul
push
in
cmp
sub
xor
test
scas
adc
sbb
jnp
int3
ret
aaa
sub
inc
lods
and
imul
lea
shll
popa
jbe
sub
je
shrl
jecxz
lods
testl
cmp
mov
int3
mov
imul
int3
inc
dec
add
mov
cmpsb
dec
mov
dec
cmpsb
sbbl
jecxz
sub
inc
xchg
into
lea
lcall
dec
inc
pushf
sarb
pop
stos
in
sub
dec
mov
fisttpll
popa
ds
adc
jmp
mov
cmp
cli
pop
pop
xor
sbb
jmp
xor
aad
adc
mov
pop
test
pop
push
lds
adc
cmp
lret
xlat
adc
pop
cmpb
movsl
add
add
cmpsl
lret
xchg
mov
das
in
push
lahf
cmpsb
fcomp
ds
mov
push
sub
push
popa
lret
mov
pusha
cltd
dec
dec
icebp
fildl
lcall
pop
gs
negb
push
mov
icebp
jns
test
sarb
test
sub
xor
xchg
rcrb
lods
and
pusha
xor
jne,pt
jb,pn
xchg
cmpsb
daa
daa
shll
and
dec
popa
pop
lea
dec
pusha
dec
inc
scas
sar
les
mov
inc
dec
or
mov
fldl
cmp
sbb
jg
out
and
push
mov
jbe
test
stc
dec
add
or
popf
aas
stc
imull
or
push
jae
frstor
mov
std
adc
mov
sub
std
jmp
sbb
mov
fxtract
jge
cmp
cmp
hlt
dec
dec
repz
xor
or
mov
imul
mov
jmp
hlt
int
xchg
aaa
sbb
insl
pop
arpl
dec
bound
sbb
jae
mov
cmp
mov
or
add
dec
movsl
jno
lods
inc
xor
push
rcll
lret
ret
sub
fwait
ds
pop
mov
pop
jno
inc
lret
or
jl
and
in
in
and
call
test
xchg
imulb
xchg
enter
xchg
test
pop
stos
mov
dec
pop
into
mov
or
lret
mov
shrl
stos
daa
addl
lds
out
movsb
in
pop
lock
test
int
imul
inc
jl
and
loopne
roll
sbb
or
lock
int
mov
insl
aad
fucomp
pusha
scas
popa
fwait
inc
or
lret
lods
ss
repz
iret
iret
test
punpckhbw
jecxz
test
mov
in
push
test
rcll
xchg
sub
pop
out
bound
std
lahf
fldt
hlt
jno
sarb
fsubrs
mov
cwtl
or
push
loopne
mov
adc
adc
add
pop
scas
cmpsl
movsb
push
and
ja
test
mov
push
xor
or
mov
idivl
xchg
fwait
popa
sub
in
jp
je
movsb
cs
popa
call
aam
jae
sarb
dec
insb
sbb
inc
insb
andl
sub
xor
push
cmp
or
ss
mov
xchg
xchg
pop
mov
pop
mov
mov
push
and
push
lods
bound
inc
cld
push
loopne
cmp
int3
rclb
inc
cmc
out
les
adc
mov
push
and
lods
or
mov
ficomps
sbb
cmp
imul
iret
dec
or
daa
and
push
loope
int3
adc
stc
sarb
jbe
xor
mov
jmp
cs
adc
sti
je
jp
sarb
cmpsl
pop
divb
push
and
xchg
lahf
sbb
and
call
shr
cmp
xchg
adc
loopne
jge
and
mov
loop
aas
mov
jb
mov
sbb
in
stos
jae
lcall
mov
popf
scas
sti
ja
sbb
push
scas
ret
mov
mov
fidivs
mov
or
push
sub
adc
xor
xchg
push
gs
inc
popa
pop
push
push
cmp
dec
testb
jp
int
mov
adc
jo
sub
ret
adc
mov
and
insb
or
xchg
fisubrl
stos
pop
sbb
pop
dec
aas
sub
fidivrl
std
movsl
jo
lods
fiaddl
cmpl
dec
aaa
movb
pop
push
inc
adc
loope
inc
lret
es
or
adc
xchg
push
jle
jg
push
inc
cmpsl
dec
add
dec
dec
movsb
in
adc
aam
shll
jmp
adc
pop
xchg
mov
jp
push
xchg
test
push
jl
pop
iret
add
mov
dec
xchg
cli
xor
jno
jle
movsl
cmc
repnz
push
push
sub
or
int
mov
mov
push
dec
aaa
mov
imul
dec
and
push
ret
pop
push
xchg
cmp
dec
sub
cld
aas
outsb
jo
xchg
jg
dec
lock
xor
xorb
and
pop
test
sbb
jne
in
and
out
dec
jno
inc
out
cmc
jnp
xchg
cs
imul
jge
xchg
and
shrl
mov
fwait
test
loop
mov
in
loopne
out
mov
pop
mov
mov
cmp
cltd
stos
xor
cld
adc
jae
stc
mov
movsb
mov
push
insb
inc
fs
inc
adc
jg
jno
cld
adc
jmp
out
fadd
pushaw
pusha
insl
icebp
or
mov
sub
add
or
jle
sbb
cmc
fbstp
push
bound
dec
mov
dec
push
mov
dec
push
imulb
mov
mov
loopne
xchg
scas
sbb
test
push
je
cmp
jmp
test
jae
lods
sub
mov
stc
or
adc
pop
popf
mov
in
or
mov
dec
testl
cmp
dec
xchg
aad
imul
daa
jge
hlt
repnz
jae
insb
negl
xor
test
cmp
fsubl
lea
dec
lcall
cmp
or
mov
mov
mov
movl
push
xor
pop
adc
and
sbb
fimuls
mov
gs
mov
fdivp
aas
addb
call
xor
mov
sbb
adc
sub
pop
pop
pop
outsb
jae
loopne
ret
cmp
xchg
sub
dec
mov
aaa
or
inc
or
or
lods
cmp
jbe
in
shll
outsb
inc
clc
dec
loopne
dec
push
cmpsl
movsl
jecxz
test
pop
xchg
xlat
imul
cmp
mov
jb
mov
test
push
int
movsl
mov
jl
cmpl
loopne
mov
iret
xor
mov
jp
nop
inc
mov
jne
movsb
mov
add
sbb
cmp
cmp
adc
cmp
inc
notl
xor
cltd
adc
insl
enter
adc
sti
xchg
cs
mov
mov
xor
lea
and
and
ret
fsubrl
je
sub
push
in
jno
jb
inc
mov
cld
push
scas
sbb
push
sbb
pop
mov
mov
lret
xor
loope
mov
lds
and
inc
into
pop
adc
icebp
mov
pop
jl
sbb
test
out
dec
pop
sbb
pop
in
jne
pop
cmpl
icebp
ljmp
inc
ja
shrl
ret
cmp
jne
mov
xlat
fcmovb
nop
push
scas
test
and
jmp
leave
jl
scas
jne
lret
sbb
xchg
jb
jbe
jb
dec
push
gs
out
ljmp
dec
fldt
push
mov
into
inc
xchg
movzbl
dec
xor
in
cmp
lret
rorl
cli
dec
bnd
pop
push
push
rcrl
push
lret
jno
ja
jl
mov
imul
pop
stos
and
pop
movsb
aam
enter
or
jns
insl
sub
stos
xor
rcr
mov
shll
aaa
into
loopne
fisubrs
addr16
repz
imul
pop
addl
xor
shlb
sarl
and
int
dec
jbe
icebp
sbb
std
pop
cmp
and
imul
loopne
push
imulb
orl
inc
in
cmpsl
ret
jae
pop
mov
dec
fs
mov
in
adc
mov
stos
addb
push
mov
mov
push
jl
in
cmpsl
jge
call
call
gs
inc
adc
subl
lahf
mov
inc
xor
sahf
add
xchg
cmp
dec
lret
or
mov
add
inc
jg
sbbl
add
insl
push
cmp
lds
sub
xchg
test
out
add
jns
lret
mov
ja
ret
nop
xor
bound
out
imul
std
adc
imul
inc
jns
imul
out
dec
sub
rcrb
int3
hlt
dec
xchg
push
push
mov
loopne
dec
xchg
adc
mov
cld
imul
adc
fcmovbe
pop
mov
ljmp
and
mov
lds
gs
mov
jbe
and
and
cmp
cmp
xchg
iret
mov
jo
or
push
sbb
popl
cmp
sub
repnz
ret
and
pop
fidivrs
push
repz
and
mov
mov
push
cmpsl
fidivl
imul
movsl
or
leave
jge
loop
and
in
in
jle
cmp
out
int3
cpuid
mov
mov
mov
push
int3
out
lret
push
pop
push
out
mov
cmovg
push
push
aad
sub
lods
or
jl
cmp
jnp
data16
dec
lea
jno
sbb
shl
call
inc
sub
clc
jp
jo
pop
addl
push
cmp
leave
pop
insl
jne
rcll
inc
inc
push
in
insl
fistpl
jp
push
ret
cld
pop
cmp
pop
repz
mov
leave
inc
mov
adc
inc
dec
mov
push
pop
add
movsb
mov
cmpsl
cmpsb
in
nop
test
pop
jnp
test
jl
sti
xlat
and
push
movsb
std
mov
mov
cmp
jno
addb
pop
int
addr16
sbb
sub
pop
adc
int
jbe
inc
cmp
add
loopne
sbb
mov
lret
sbb
movl
scas
xchg
xor
int
mov
test
inc
stos
fistpll
or
and
and
mov
cld
lods
lcall
inc
out
clc
pusha
in
std
mov
push
and
arpl
cmp
and
shrb
pop
popf
jl
dec
mov
insl
dec
mov
mov
enter
cmp
jp
push
rclb
add
imul
xchg
xor
lea
add
movb
adc
gs
mov
insl
mov
and
subb
popf
xor
or
dec
stos
xor
mov
gs
mov
jg
sub
popf
sub
shlb
xor
mov
xchg
in
addb
mov
stos
sub
dec
test
adc
or
xchg
rorl
jne
dec
js
mov
fmull
or
lret
mov
fsubrl
mov
jl
shll
jae
lret
daa
arpl
push
mov
test
jge
call
sbb
xchg
adc
ret
test
jg
sbb
xlat
push
and
jno
add
bnd
dec
mov
inc
ja
push
sbb
jl
aam
es
jb
cmpsb
int
xor
mov
aas
gs
pop
mov
xor
enter
push
movsb
pop
hlt
push
dec
and
jae
repnz
testl
shrl
rcrb
jno
popf
jmp
jge
mov
cmp
mov
mov
imul
lret
pop
mov
sarb
dec
sbb
cltd
ljmp
test
xor
mov
jae
stc
orb
in
xchg
mov
mov
push
mov
xchg
sbb
jne
addr16
push
imul
mov
jg
add
std
mov
add
dec
push
test
sub
insl
sbb
push
in
aaa
push
stc
mul
push
int3
inc
shlb
cmp
xor
mov
out
icebp
xor
push
pop
xor
dec
sbb
cmp
push
jne
xor
pop
cltd
dec
mov
dec
mov
adc
rol
dec
icebp
mov
pop
cld
arpl
cmp
jge
pop
jae
movsl
nop
mov
add
cmp
xor
addr16
stc
outsb
mov
in
jp
push
xor
xor
cmp
push
push
js
and
sub
sbb
jns
fstps
lahf
sbb
push
in
das
xchg
mov
imul
cmpsl
jns
icebp
mov
mov
cmpsb
push
stos
xor
lcall
xor
dec
cmp
ljmp
mov
sbb
xchg
pop
push
add
pushf
jnp
subl
in
sbbb
mov
in
push
in
call
xchg
inc
pop
js
ret
je
mov
lea
adcl
push
and
sbb
mov
xor
cmpsb
arpl
push
xor
xor
mov
xchg
jp
xor
mov
cmp
xor
xchg
in
jg
aas
mov
inc
mov
or
scas
mov
sub
and
inc
popa
lds
or
or
push
mov
adc
mov
xor
jno
mov
jecxz
jg
xchg
testl
xchg
fcoms
test
cli
push
ficoms
push
add
sarl
sbb
cmp
cmp
enter
mov
sbb
mov
fisubl
dec
and
or
pop
mov
pop
jb
jmp
imul
fmul
push
add
inc
test
xlat
out
lock
outsl
mov
je
sahf
and
shrl
imul
arpl
jle
jnp
lea
stc
dec
xchg
and
lds
jno
xchg
dec
cmpsb
mov
cmp
mov
or
pop
pushf
cmp
insb
pop
loop
pop
data16
add
ret
stc
pop
arpl
adc
scas
mov
mov
loopne
jge
bound
popf
mov
cs
mov
jecxz
pusha
roll
je
insl
sbb
mov
push
lods
push
jnp
jo
lret
push
inc
push
push
test
fwait
out
xchg
xchg
in
add
mov
inc
loop
repz
jae
outsl
subl
push
imul
dec
mov
bound
lods
inc
cmp
filds
sbb
imul
jno
adc
fistpll
or
inc
mov
sti
adc
sub
sbb
dec
sbb
gs
test
lahf
adc
dec
testl
pop
subl
subl
push
adc
add
mov
loope
stc
arpl
stos
sub
xchg
dec
pop
sub
push
loop
cli
fidivrl
xchg
mov
loope
inc
cmp
mov
cmp
mov
sbb
mov
cmp
jecxz
pop
pop
fidivl
insl
movsb
cltd
scas
mov
insl
dec
push
nop
dec
lcall
dec
xor
ja
dec
fnstsw
push
sub
ret
cmpsb
out
xor
jp
popf
add
loop
out
cmpsl
adc
jecxz
je
push
test
dec
jne
push
clc
inc
repnz
pop
inc
xchg
test
arpl
insl
add
mov
aad
pop
adc
xchg
mov
addr16
xor
mov
pop
out
jmp
pop
adc
fsubrl
inc
mov
mov
mov
push
push
out
repnz
test
jno
lahf
popa
sbb
xchg
imul
mov
popf
or
cltd
mov
sub
icebp
lds
xor
test
mov
add
add
xchg
jns
sub
jp
rcrl
jo
jmp
inc
rclb
xor
jne
shll
push
cmp
nop
mov
sub
cmp
push
jae
bound
loop
sbbb
pop
loop
jmp
rolb
ret
or
xchg
aad
ljmp
inc
jns
sbb
shll
jge
int3
and
outsl
mov
cmp
dec
imul
mov
lods
or
testl
loopne
pop
adc
cmp
test
outsb
mov
adc
xchg
push
shll
jns
daa
out
stos
cmp
xor
inc
cmp
dec
bound
arpl
push
sub
jb
test
stos
adcl
pop
cmp
or
ret
push
cmp
pusha
popf
in
jge
aaa
or
lret
mov
ss
push
rorb
inc
aaa
mov
mov
jo
ud1
data16
jno
mov
mov
in
xor
xlat
jae
jnp
xlat
push
call
leave
aaa
in
out
adc
arpl
mov
mov
cltd
stos
shr
jne
insl
jge
xchg
bound
adc
adc
nop
imul
lea
shlb
movsl
fisubs
imul
sub
test
push
xchg
test
jg
dec
lcall
fiadds
xor
sbb
cmp
mov
dec
imull
insl
repz
xor
lods
mov
xchg
cmpsl
or
inc
dec
out
rcrb
ja
sbb
repz
mov
mov
jge
mov
test
or
ja
popf
movsl
jmp
ficomps
mov
or
imul
or
iret
mov
cmp
clc
add
jp
les
iret
fcmovnb
mov
out
movb
xor
inc
call
jg
and
mov
out
cmp
dec
fldt
imul
jge
inc
sub
xchg
shlb
jmp
leave
cmp
adcl
mov
mov
mov
mov
insb
lock
dec
sbb
cmpb
xchg
popa
fldcw
sbb
or
mov
les
mov
push
flds
mov
xor
movsb
push
dec
out
jl
cwtl
jbe
je
add
mov
fldcw
sarl
iret
pop
push
out
add
xchg
sbb
stos
out
lret
mov
pushf
pop
mov
dec
xor
push
sbb
stc
mov
icebp
lcall
imul
or
mov
add
std
sbb
loope
gs
dec
test
popf
shlb
mov
jne
imul
and
fldl
adc
jb
enter
xchg
rorb
push
jge
mov
jg
fcoml
lds
out
aad
dec
jecxz
jnp
push
or
sbb
mov
pusha
and
shl
fwait
push
mov
iret
dec
clc
das
sbb
cmp
adc
ret
xlat
push
jnp
fucom
lea
pop
inc
lahf
push
dec
mov
icebp
and
push
pop
jno
sbb
test
daa
push
xlat
inc
jns
imul
xor
sbb
push
je
adc
in
adc
jge
mov
out
scas
jecxz
cmpsb
daa
mov
dec
pop
xorb
pushf
fisttpl
mov
popa
stos
mov
es
in
outsl
cld
mov
scas
adc
sub
push
mov
mov
lea
popf
xor
out
mov
add
xchg
add
rcrl
sub
inc
xchg
dec
adc
sbb
aam
ljmpw
cmpsb
out
das
test
jb
cli
repnz
or
sbb
in
and
cmp
xor
mov
sub
pop
cmpsb
sbb
pop
cmc
push
push
mov
stos
lods
ss
jp
mov
fdivrl
mov
nop
imul
shl
aaa
mov
jne
stc
aam
cmpsl
jmp
cld
push
xchg
adc
fpatan
into
mov
mov
adc
out
or
dec
pop
imul
not
in
mov
push
mov
pop
sti
or
sub
mov
les
inc
adc
or
mov
jp
test
enter
push
into
pop
mov
data16
enter
xor
es
dec
aad
fcompl
aam
into
cmpsb
call
in
sub
adc
ds
or
push
cmc
iret
insb
mov
loope
ss
outsl
dec
xchg
stos
mov
cli
popa
or
push
je
or
pop
cmp
cmc
outsl
clc
jp
xor
push
add
nop
out
sbb
jmp
push
jl
mov
loope
push
xchg
outsb
mov
mov
clc
shl
cmpsb
adc
aad
inc
into
or
mov
lret
insb
sbb
push
push
or
aad
out
mov
sub
jno
daa
cmp
cli
mov
push
lret
in
mov
inc
call
xor
push
hlt
xorb
cmp
lret
insl
es
into
sbb
fdiv
lret
imul
xchg
iret
or
in
xchg
imul
es
daa
dec
rep
mov
dec
jnp
popw
pop
and
cmpsb
aaa
lods
or
in
ja
xchg
mov
sbb
adc
jmp
into
dec
dec
lds
rolb
stos
inc
push
and
cmc
adc
adc
push
sbb
dec
sbbl
clc
lret
and
jmp
mov
adc
xchg
push
fisttpl
mov
nop
pop
or
je
push
loope
mov
outsl
or
sbb
in
jno
pop
adc
in
fsubrl
inc
cld
aaa
xor
js
mov
sub
jmp
sub
clc
jne
pop
add
dec
jle
ds
mov
sti
adc
pop
jbe
mov
bnd
or
cmp
mov
sub
xchg
mov
inc
scas
cmp
adc
mov
mov
jp
pop
stc
or
decl
cmp
popf
ja
shrl
jns
cmp
lcall
int3
aas
cmp
pop
xor
shrl
xlat
jle
aam
notb
add
mov
push
out
mov
lret
aas
test
and
xor
xchg
lret
pop
aaa
pop
jle
fwait
ds
sbb
pop
add
mov
adc
fs
pop
aaa
cmp
mov
mov
aaa
jp
mov
adc
enter
fs
loop
and
insb
outsl
out
icebp
inc
pop
mov
cmp
add
insl
cmpsb
mulb
or
and
add
aaa
cltd
jle
femms
xlat
int3
push
insb
cmp
jns
add
out
stc
cmp
add
mov
adc
jno
jb
shrb
pop
sbb
loope
fwait
jmp
xchg
imul
jb
in
sbb
pusha
dec
lds
adc
xchg
cmp
xchg
mov
jno
aaa
ds
shlb
daa
jno
insb
add
fstpt
push
cmp
jns
sbb
iret
int3
xchg
addl
in
push
cltd
enter
jno
mov
xorl
mov
jno
xchg
cmp
stos
sub
mov
xchg
push
fnstcw
jnp
xlat
mov
cmc
cltd
rcl
mov
cmp
mov
int3
jle
push
insl
fldl
ljmp
push
jge
test
and
push
pushf
popf
jl
pop
mov
shl
inc
pop
mov
jno
and
iret
add
rcr
fsubl
adc
xchg
cmpsb
cwtl
inc
adc
out
das
pop
int
stc
cs
dec
mov
cs
lock
leave
movsb
cld
sub
stos
iret
pop
iret
cmp
xor
pop
sbbl
into
jne
dec
mov
repnz
adc
sbb
cmp
negb
out
adc
aas
xchg
lods
cmp
sti
aaa
outsl
cmpsb
sub
std
and
pop
pop
imul
xor
insl
mov
xchg
push
ss
cmp
lcall
stc
inc
lods
negl
imul
scas
movsb
pop
jae
adc
or
mov
and
test
jno
dec
or
loop
mov
xor
jns
mov
mov
inc
je
adc
mov
sub
pop
xor
out
xchg
rcll
jp
sarl
or
scas
lea
cld
xor
sbb
mov
ds
enter
testl
outsb
inc
mov
sub
data16
lret
jge
inc
mov
mov
gs
push
add
mov
sahf
cmp
stos
push
repnz
push
lahf
fs
cmp
mov
inc
in
adc
jecxz
cmpsl
and
aaa
popf
dec
lods
lds
inc
pop
mov
iret
cmp
aaa
cmp
pop
into
ss
adc
mov
push
mov
xor
imul
iret
push
ret
cmp
insb
jo
jns
mov
call
sarb
add
xor
dec
gs
pop
jno
jns
icebp
lret
mov
int
add
sbb
fistl
ss
stc
inc
xchg
popa
movb
loop
in
jmp
inc
movsb
mov
shr
loop
dec
outsb
add
jmp
pop
test
fisubrs
inc
jae
shr
jl
jno
xor
xor
rorl
js
dec
jb
push
mov
dec
inc
fidivl
cli
sub
dec
inc
outsl
fstps
inc
imul
cmp
xor
xor
js
adc
inc
and
mov
jae
leave
leave
sbb
mov
popa
fidivl
loopne
mov
int3
cli
xor
and
inc
mov
inc
and
into
std
ds
xor
dec
dec
sbb
icebp
ret
ret
loop
or
pop
outsl
aaa
sbb
movsl
and
sub
pop
and
aam
loopne
addr16
adc
jbe
inc
cmp
test
jno
dec
adc
rorl
jg
imul
fwait
push
test
int3
ds
ds
fcoms
repz
subb
sbb
pop
iret
cltd
fsubrl
and
in
lea
repnz
outsl
aas
addr16
cmp
add
jns
mov
lret
negb
mov
xchg
sbb
pop
mov
sub
fbld
lahf
aam
lcall
adc
dec
stc
mov
cmp
lods
insb
aaa
rcrb
xor
push
sbb
jae
mov
int
sub
jmp
shrb
fsubl
in
xchg
mov
mov
cmp
xor
mov
iret
xchg
imul
pushf
dec
divb
loop
scas
movb
jne
icebp
push
mov
dec
xchg
mov
shrl
xor
in
xor
sbb
ds
push
ficompl
je
nop
jns
mov
fnstenv
das
dec
movsb
dec
pop
cmp
sbb
sbb
mov
sub
lret
xor
mov
push
pop
xor
mov
adc
mov
fidivl
push
scas
sbb
lea
adc
pusha
stc
cltd
pop
jns
sbb
imul
jnp
pop
adc
push
cltd
push
mov
mov
std
mov
arpl
adc
fwait
xor
push
xchg
dec
push
insb
outsl
xor
andb
lea
cmp
pop
push
rclb
cmc
mov
sbb
xchg
fdivrl
gs
js
jo
test
rclb
aam
pop
and
xor
push
push
loop
mov
mov
push
popf
out
test
push
jne
sbb
enter
push
addr16
mov
roll
test
jg
adc
test
rcll
cmp
jmp
in
mov
lds
inc
test
xorb
imul
pop
inc
je
dec
sbb
jg
jg
sbb
inc
cmp
adc
mov
int
push
jnp
cld
jp
gs
push
mov
imul
int
sbb
bound
push
sbbb
pop
movsl
pop
lret
mov
add
xor
pop
popf
pop
jg
aam
mov
pop
jno
jns
sub
loop
sbb
dec
cmpsl
into
xor
or
dec
adc
xchg
fdivs
cmp
sub
insl
mov
sbb
cmp
dec
or
cmp
adc
xor
mov
sbbl
pop
inc
jne
sti
jbe
iret
cmc
jns
xchg
mov
loopne
int
mov
cmp
aas
arpl
and
aas
ds
cmp
mov
push
and
pop
cmp
outsb
in
lods
mov
fisubrs
mov
add
sub
or
cld
lcall
jnp
jnp
adc
inc
mov
call
or
inc
pusha
pop
sti
imul
push
in
and
push
jo
pusha
push
dec
fstpt
dec
push
stc
pop
dec
imul
sub
lock
aam
outsb
mov
sub
scas
xchg
scas
mov
push
mov
xor
cmp
test
popf
ret
sbb
cmc
ljmp
sub
insl
dec
imul
out
repnz
pop
movsl
addr16
mov
push
daa
ficomps
cmp
lret
sbb
mov
bound
xlat
mov
push
test
dec
mov
insb
push
repnz
mov
imull
jge
lods
jl
add
push
jnp
jp
pop
call
addr16
xor
movsl
data16
dec
jb
and
pop
clc
xchg
call
dec
ljmp
add
iret
or
stc
inc
jno
pop
sbb
mov
xchg
in
sub
cmp
pushf
dec
int3
xor
or
pushf
adc
roll
mov
rolb
lds
cld
pop
hlt
xchg
mov
mov
jle
jl
arpl
pop
andl
mov
orb
cmp
adc
and
mov
sbb
movsb
pop
adc
jmp
ss
cmp
inc
stos
jge
inc
out
addb
or
xchg
fsubrs
jbe
cli
sbbb
cld
js
lret
mov
aas
dec
lods
cld
movsl
cmp
and
test
cli
sub
rcll
cmpb
fwait
or
jno
movsb
dec
repnz
rcl
mov
adc
lret
sbb
adcl
xchg
mov
sub
cmp
testl
shll
inc
test
xchg
xor
lods
popa
cmp
psubusb
sub
pop
out
mov
test
pop
adc
inc
int
rorb
and
into
jno
popa
stos
mov
mov
mov
in
or
jmp
and
popf
lods
int3
scas
xor
inc
sub
cmp
sbb
xchg
ja
bnd
push
pop
jl
push
stc
jno
inc
cmp
lcall
adc
aad
sbb
rcr
mov
call
addr16
popf
rclb
scas
jle
or
cmpsl
decl
sub
xchg
xor
popa
out
cmpsb
imul
dec
nop
jnp
imul
es
push
push
and
mov
pop
loop
mov
test
not
jl
mov
leave
pop
pop
jl
bound
adc
mov
xor
dec
mov
fildll
add
jp
ljmp
std
and
int
push
fisttps
push
mov
nop
dec
sbb
xchg
mov
push
cmp
adc
movsl
mov
into
jmp
xchg
imul
jge
sbbl
pop
xor
ret
call
inc
dec
cmp
insl
js
ret
shl
lea
and
xchg
push
movsb
or
lds
cmpsb
or
push
inc
jmp
insb
add
js
neg
jno
xchg
imul
repnz
fs
inc
popa
cmpsl
lea
dec
cld
pop
call
jno
test
aaa
insl
mov
gs
aaa
sbb
int3
xchg
popf
mov
nop
fwait
push
sbb
int
lret
mov
or
pushf
mov
mov
mov
insb
inc
mov
in
aad
add
pop
test
shr
andl
dec
pop
rorb
aaa
sub
and
or
out
stc
xor
adc
jmp
enter
rol
arpl
dec
insb
ja
pop
xchg
xor
aaa
out
inc
mov
das
mov
rolb
jecxz
vcvtss2usi
shll
jns
cmpsl
inc
imul
add
repz
xchg
dec
add
lcall
sbbl
push
pop
adc
stc
lret
xor
adc
xor
add
xor
aas
xor
pop
mov
scas
in
lahf
or
and
xchg
test
xor
test
or
popf
aaa
test
dec
mov
test
mov
jno
cmp
inc
test
enter
push
std
fmuls
cmp
mov
loope
adc
shl
pushf
mov
cmp
dec
ss
cltd
int
mov
inc
imul
enter
pop
scas
movsb
inc
andl
test
into
push
inc
arpl
insb
dec
stc
inc
mov
sbb
add
cmpsl
sbb
jne
mov
dec
sub
loopne
out
mov
inc
jp
mov
jns
push
jmp
cmp
lods
sub
fmul
lock
div
inc
xchg
jae
in
cmpsl
mov
mov
jns
rorb
clc
push
push
aas
sub
jns
mov
mov
push
mov
iret
shl
xor
ljmp
xor
test
cmp
bound
push
xor
sbb
mov
push
data16
mov
xchg
inc
mov
jnp
cmp
ja
movsb
xchg
cmp
ficoms
mov
jp
pop
je
push
loope
lods
mov
lods
movsb
call
ss
leave
xor
cld
sub
or
mov
push
jge
adc
and
xchg
test
xor
xor
sub
aaa
stos
xchg
cwtl
fcomps
jno
insb
cmp
sbb
dec
cli
jbe
lods
insb
mov
inc
mov
pop
sub
jbe
lret
sub
inc
mov
push
mov
dec
int
lret
sub
push
cmc
cmp
popf
cmp
insb
xor
cmp
lea
dec
push
mov
mov
push
mov
mov
mov
pop
sbb
xor
imul
push
lods
dec
ret
mov
sbb
rorl
jo
enter
mov
add
adc
mov
out
int
outsl
mov
in
jnp
inc
sub
inc
xor
cmp
push
addr16
xor
pop
stos
test
mov
xchg
cwtl
xor
cmp
mov
cmp
cmp
xor
xor
cmp
pop
cmp
jo
bound
adc
sbb
fsubl
xchg
addr16
mov
pop
push
push
aaa
out
inc
test
cmp
test
mov
in
adc
sub
xor
xor
or
pop
aaa
cmp
testl
jp
xlat
push
cli
daa
push
cmpsb
insb
stc
xor
sahf
jae
add
mov
mov
cmp
dec
inc
shrl
xchg
add
mov
imul
imul
popf
mov
mov
mov
mov
lock
je
les
pop
inc
insb
es
in
bound
mov
inc
fldenv
imul
das
icebp
jge
movsl
mov
fistl
cmp
xchg
xchg
scas
dec
pop
out
cmp
bound
adc
outsb
cmp
sub
jne
mov
fdivs
rorb
cmpsb
jl
jmp
mull
clc
mov
ja
out
push
mov
lret
jl
sbb
sub
mov
popf
inc
adcl
cmp
push
fwait
pop
clc
outsl
cmp
jl
jl
fucom
ja
push
or
scas
cmp
dec
xchg
xor
push
scas
jl
pop
cmpsb
push
in
andb
js
adc
jns
cmp
cmc
ret
dec
je
dec
mov
jl
mov
sbb
jmp
mov
mov
mov
fstl
roll
jno
or
jns
jmp
ss
add
clc
ss
add
jnp
xor
cmc
mov
mov
mov
test
inc
cmpsb
pop
dec
cmp
repnz
mov
outsl
ja
das
div
cmp
push
orb
sub
cmp
repnz
mov
push
pushf
mov
aaa
mov
jecxz
gs
dec
xchg
or
sub
scas
xor
loope
cmp
xorb
mov
mov
pop
jle
and
leave
scas
repnz
cmpsb
ss
dec
jns
adc
iret
inc
dec
or
call
addr16
and
add
lds
cwtl
mov
in
ja
jae
insb
pop
push
mov
sahf
mov
scas
not
and
mov
mov
push
into
cmp
mov
xor
xchg
xor
cmp
sbb
mov
mov
lret
mov
cltd
cltd
lret
ror
repnz
pop
xchg
push
xor
push
cmp
xchg
xor
mov
test
fwait
pop
imul
fs
mov
cmp
inc
push
movsb
sbb
out
in
push
cmpsb
jle
push
fwait
cmp
lods
mov
cltd
loop
loop
dec
cmp
pop
movsl
test
sub
inc
xor
pop
int3
jmp
pop
jnp
lret
cmp
dec
icebp
mov
lods
je
cmp
inc
push
dec
add
push
das
sete
adc
cmp
jne
fstl
shll
in
popa
push
in
pop
mov
hlt
add
and
and
popf
gs
mov
and
aaa
lds
xor
jnp
dec
stos
mov
loope
xchg
cs
ret
cmp
mov
dec
loopne
frstor
iret
ss
out
push
jnp
jp
cmp
cmpsb
sbb
sbb
add
cli
inc
int
fldt
iret
and
mov
imul
jp
cmp
adc
cmp
inc
lcall
ret
mov
cltd
lea
cmp
or
push
inc
cltd
lret
jp
aaa
adc
out
loop
mov
test
dec
cmpsl
jns
imul
out
add
and
sub
inc
rorb
fnstenv
mov
cs
popf
loope
cmc
aaa
jne
xchg
push
int3
dec
pop
imul
jo
fcoml
xor
push
inc
pop
lds
mov
dec
out
outsl
jno
pop
cmpb
inc
dec
cmp
popf
push
or
add
sub
pop
dec
cmp
cmpsb
xor
stos
dec
enter
insl
aaa
int
leave
lret
jp
mov
lods
push
lret
mov
cmpsl
mov
or
and
loop
cmp
xor
push
inc
ja
call
inc
sbb
push
jns
mov
call
xor
movsb
scas
insl
sbb
push
jmp
insb
ss
add
popa
loope
iret
test
jae
enter
jns
movsl
xchg
sub
or
xorl
xchg
xchg
mov
mov
sub
push
jnp
mov
out
mov
xor
push
and
sti
push
and
jl
push
cmp
mov
sti
adc
inc
imul
into
jecxz
cmp
imul
sbb
and
enter
cld
shlb
adc
xchg
mov
or
lcall
rcrl
jbe
aas
in
xchg
xchg
sub
aam
cmpsl
test
xchg
sbb
lods
js
scas
cwtl
pop
jno
addr16
xlat
out
inc
jne
sub
jbe
xchg
pop
out
sub
and
pop
or
imul
xchg
popf
dec
cmp
jnp
mov
mov
movsb
cmp
imul
cmp
imul
mov
push
or
push
mov
out
inc
cli
sbb
pusha
dec
enter
mov
jmp
xor
mov
inc
inc
ret
mov
mov
mov
cmpsl
in
dec
xchg
mov
or
sub
mov
mov
mov
pop
lcall
adc
mov
pop
jae
mov
scas
mov
mov
jns
adc
xor
mov
push
mov
jge
adc
pop
out
mov
movsb
icebp
pop
add
insl
add
pop
mul
scas
inc
jns,pt
jmp
enter
test
pop
pop
aaa
mov
in
vhsubpd
xor
iret
aaa
dec
or
lea
mov
push
lods
stc
inc
test
popa
fcomps
add
call
je
aam
mov
pusha
pop
dec
loop
shrl
imul
dec
ds
mov
enter
mov
dec
jae
cmp
imul
iret
dec
mov
cmp
mov
cltd
jno
add
and
ficompl
pop
inc
inc
lea
vmulsd
mov
test
cld
cmp
mov
jmp
jecxz
lea
loopne
or
into
xor
daa
fwait
sbb
mov
xchg
loopne
pop
jno
fdivrl
pop
jns
imul
mov
imul
xchg
cmp
in
cli
and
jae
add
bnd
jae
add
add
mov
mov
sbb
add
mov
inc
ror
cmp
pusha
push
jb
mov
mov
cmp
negb
stc
cmp
xchg
add
test
imul
lcall
test
xor
mov
fdivs
sbb
leave
mov
xlat
call
repz
daa
cvtdq2ps
imul
subb
push
out
cli
lea
mov
mov
cmp
dec
fdivrl
mov
arpl
js
adc
lret
inc
xchg
dec
fistpll
sti
inc
jmp
fidivrl
ret
adc
out
mov
outsl
push
jnp
sub
aaa
mov
stc
inc
mov
lret
dec
push
inc
adc
jno
cmpsl
add
fwait
sbb
xchg
and
add
inc
test
xor
mov
xchg
fwait
orb
std
adc
xor
push
hlt
dec
int
fucom
dec
test
fs
or
in
jbe
push
shr
daa
aad
stos
sbb
inc
mov
shlb
test
sub
stos
push
enter
inc
push
mov
inc
lret
sub
dec
js
jns
sub
adc
adc
push
dec
mov
pop
shlb
adc
cmp
mov
xor
adc
ja
xlat
in
mov
push
push
iret
pop
xor
sarl
imull
je
pop
rorb
jno
jbe
subl
or
cmp
ja
pop
jecxz
xchg
cmp
jno
push
jl
lods
jno
jnp
loop
push
mov
rolb
imul
pop
in
jle
cwtl
xchg
cltd
gs
lret
rcrl
jbe
add
mov
and
ja
lds
imul
test
in
push
pop
xor
push
and
pop
mov
cltd
pop
jno
gs
adc
cmpsb
mov
fs
adc
xchg
xorb
cwtl
stos
jl
jnp
sti
fcom
cmp
dec
or
fs
push
popa
sub
jb
lds
out
out
test
out
sub
push
je
fidivrs
xor
sbb
repnz
xor
popa
push
pusha
xor
lret
mov
pusha
adc
lcall
sbb
scas
mov
push
dec
xchg
ffree
int3
popf
mov
cmpsb
sub
jo
imul
xlat
popf
cmp
mov
xor
adc
mov
movb
mov
inc
sbb
mov
int3
cmpl
aas
mov
cwtl
mov
out
shll
cmp
cmpsb
mov
xchg
ret
xchg
movsl
and
insl
lret
mov
adc
aaa
cmpsl
out
xchg
mov
mov
mov
shrb
pop
movsl
xor
into
xor
mov
adc
dec
imul
and
ss
sbb
mov
dec
jl
lods
dec
jae
test
nop
inc
loopne
mov
sarl
dec
sbb
cmp
into
fsts
jg
or
movsb
ds
ret
adc
xor
loop
stc
lods
jp
fcomip
sbb
push
and
push
je
sbb
xchg
mov
ja
sbb
add
sub
mulb
mov
mov
shl
inc
xor
xor
lahf
pop
jns
cmpsb
into
in
addr16
fld
and
sbb
sbb
fs
or
jne
lcall
lea
out
shl
xchg
mov
or
xchg
out
cmp
repz
daa
repz
int3
int
lret
xchg
jbe
call
stos
jge
add
test
movsb
jns
sbb
push
ss
imul
das
shll
ja
add
call
insb
lea
mov
sbb
dec
pop
data16
xor
mov
mov
mov
stc
jbe
xchg
cltd
mov
cmp
xchg
imull
mov
lds
xchg
mov
aaa
ljmp
cmp
mov
adcb
sub
rclb
mov
lods
inc
popa
daa
pop
mov
or
out
sub
gs
xchg
adc
stos
test
gs
xchg
insl
sets
add
stc
inc
mov
imul
test
xchg
xor
cmpsl
jnp
sub
xor
sbb
jl
shll
out
cmp
clc
lcall
mov
cmp
js
ja
pop
jns
push
pop
shrl
test
xchg
cmp
adcl
out
ret
jp
mov
std
pop
xchg
lcall
xchg
cmp
or
dec
je
inc
scas
imul
jle
mov
add
adc
dec
stos
stos
iret
jnp
lret
cltd
imul
cmpsl
inc
mov
leave
jecxz
dec
add
xchg
jbe
xchg
adc
in
push
push
or
sub
xchg
pop
push
pop
mov
jns
outsw
lret
jns
push
data16
outsl
ljmp
stos
pop
and
xchg
ja
xor
xor
ds
jae
sti
sub
or
call
sbb
testl
je
ja
in
sbb
decb
stos
push
rcll
xchg
popf
jb
and
in
addr16
jno
sbb
bnd
push
lods
popf
mov
cmp
pop
imul
cmp
xor
aas
cmp
xor
data16
dec
dec
push
dec
jbe
test
jne
mov
jl
pcmpeqd
roll
xor
adc
mov
jge
orb
test
xorb
int3
gs
xorb
dec
sub
ds
push
cltd
or
cmp
push
mov
stc
inc
popa
push
in
sti
xor
sub
testl
push
or
cltd
loopne
mov
xchg
fldl
cmc
push
mov
fndisi(8087
add
inc
in
fcmove
dec
dec
or
xor
lahf
cld
cltd
fsubl
cmpsl
mov
loopne
stos
mov
imul
sbb
shll
or
mov
xlat
push
cmp
cltd
loopne
xor
ss
dec
enter
in
mov
cmpsl
mov
cmpb
clc
push
sti
dec
dec
push
jl
add
cmp
mov
xor
mov
repnz
jo
outsb
popa
fistpl
ss
andl
dec
sbb
les
cmp
cmp
cmp
dec
sub
out
stos
div
mov
push
inc
ss
pop
iret
push
cmp
loopne
xchg
cmp
cli
push
adc
lods
adc
dec
cli
fisubrs
add
or
shlw
adc
inc
int
xor
shll
dec
cmp
inc
ret
push
rcrl
stos
push
psubusw
aad
es
getsec
or
loope
pop
ret
xor
xchg
mov
jg
lea
pop
pop
sahf
push
inc
sbb
les
and
sub
daa
dec
or
push
or
std
xor
push
xlat
mov
push
ja
push
fdivrl
inc
mov
mov
xchg
jnp
daa
fcompl
mov
mov
loope
pop
es
add
dec
adc
lods
and
push
fcmove
xor
fldcw
lock
adc
movsl
cmp
outsl
in
movsl
ja
mov
adc
fildll
iret
and
je
test
rcrb
push
push
imul
sub
inc
int
adc
mov
lds
xor
xor
std
fsts
adc
cmp
mov
xlat
lods
imul
out
adc
dec
lods
stos
ficoms
xor
or
push
or
inc
adc
hlt
jno
std
jae
fistps
cmp
xor
movsl
and
mov
cmp
xchg
rcrl
jg
popf
sbb
daa
mov
pop
or
cs
and
or
add
test
adc
test
iret
xchg
cmp
cmc
movsl
pop
daa
dec
stos
fidivs
lret
cmp
out
jg
dec
and
cmp
cltd
push
sbb
jno
jb
insb
mov
xchg
inc
push
mov
stos
sbb
lods
or
out
cltd
fidivl
aas
fs
mov
mov
pop
stos
mov
cli
inc
ss
cwtl
data16
or
dec
xchg
inc
push
test
xor
push
imul
mov
jb
pusha
sbb
inc
mov
popf
xor
sarl
push
aas
in
stc
loope
add
mov
out
popa
sarb
fistl
movsb
mov
mov
int
test
and
adc
or
mov
out
sub
sar
xor
sahf
sti
imul
lds
sub
add
mov
lods
mov
scas
push
xchg
call
jge
xchg
out
cmp
clc
mov
push
inc
bound
adc
push
sbb
insb
cmp
mov
sub
mov
mov
and
jg
mov
dec
push
andl
add
mov
divb
mov
adc
pop
jp
pop
or
xchg
jns
pop
outsl
mov
lret
je
sbb
jg
fs
and
jae
xor
pcmpeqw
pop
cmp
xor
clc
cmp
and
fisttpl
add
jge
mov
xor
jnp
out
xor
in
fidivl
sti
ja
std
inc
fsub
pop
jecxz
loopne
int
flds
dec
push
sub
jl
adc
cmp
sbb
loop
test
and
jno
cmpsl
cltd
adc
cmp
lret
inc
mov
or
in
orl
sub
scas
out
mov
lahf
popf
xor
icebp
mov
iret
pop
mov
neg
lahf
push
xchg
or
xchg
adc
jb
rcrl
je
cmp
hlt
add
mov
xchg
lds
or
cmpb
push
jns
inc
fmuls
out
outsl
pop
popf
or
pop
pop
cmpsb
sarl
ss
push
movsl
jo
push
sbb
dec
xor
and
mov
out
xor
test
or
adc
sub
fisubrs
mov
cmp
iret
lcall
shrl
popa
mov
test
mov
out
mov
cmpsb
dec
xor
mov
into
cs
xor
push
nop
insb
jno
popa
movsb
inc
jno
inc
mov
sbb
mov
or
pop
cltd
jno
mov
mov
aas
imul
xchg
shlb
xor
bound
mov
pop
repnz
outsb
inc
repz
and
pusha
adc
sti
addl
push
mov
out
xchg
arpl
scas
adc
pop
jg
mov
jge
jo
sti
inc
sarb
dec
lods
cltd
cmc
push
inc
xchg
add
movsl
test
gs
ss
inc
push
loop
in
mov
ffreep
push
dec
pop
xlat
iret
lahf
mov
dec
adc
pop
xor
sbb
jl
fnstsw
lods
mov
scas
xchg
stc
or
pop
dec
pop
out
scas
scas
movsb
inc
and
loope
push
sub
lret
pop
std
mov
mov
repnz
xchg
pop
mov
push
sbb
ss
mov
add
scas
jae
push
push
pushf
repz
loop
jo
xchg
mov
cmp
subb
cmpsb
sub
and
add
aad
push
dec
mov
imul
jno
out
push
shlb
pop
mov
test
cli
sub
pusha
push
and
sub
dec
sbb
shr
inc
push
jnp
adc
adc
dec
add
es
fmuls
mov
loopne
clc
mov
dec
cmpsl
push
push
lret
mov
hlt
lock
pminsw
push
lahf
xchg
lahf
mov
sbbb
xor
mov
aaa
test
pop
clc
shll
out
mov
mov
pop
imul
dec
test
jp
cmpsl
jnp
mov
roll
test
xor
enter
or
mov
push
fstpt
test
push
clc
arpl
fucomi
jl
cmpsb
mov
scas
add
ret
dec
mov
xor
push
je
repz
mov
addr16
xchg
fisubs
pop
andl
cmp
cmp
xchg
mov
pop
push
jp
jnp
insb
jg
and
jno
addr16
inc
fcoms
add
xchg
shlb
mov
in
push
sub
dec
adc
dec
enter
xor
sub
inc
push
popa
dec
dec
xor
cmp
ljmp
xor
aaa
inc
mov
jns
push
jne
imul
test
icebp
jl
sub
hlt
jle
sub
cmpsb
mov
shlb
popa
sub
pop
cmp
jp
nop
fbld
fistl
and
cmc
jmp
int3
clc
inc
jmp
pop
lcall
xchg
push
movsl
xchg
inc
out
ds
adc
add
push
sbb
sbb
les
mov
jae
dec
mov
out
movsl
sub
or
push
mov
sub
test
jb
cmp
ret
or
push
inc
sub
rcrl
xchg
jle
cmpl
loope,pt
ljmp
push
dec
or
jno
cmp
cmpsl
cmp
inc
call
gs
mov
jae
dec
and
inc
add
mov
push
dec
imul
es
inc
aaa
out
jns
dec
lret
xor
jl
push
dec
dec
sbb
sub
data16
inc
out
mov
ss
adc
pushf
aam
test
push
fnstsw
fwait
jne
into
pop
mov
int
push
jno
aad
dec
out
jp
in
imul
push
scas
mov
inc
test
mov
mov
movsl
nop
lcall
decb
imul
ret
xchg
int3
data16
jnp
push
push
cltd
sbbb
idivl
add
outsl
cmpsb
push
testl
mov
xor
sarl
adc
jp
dec
imul
imul
cmp
pop
lods
pop
inc
mov
adc
inc
pop
add
cmp
mov
xchg
push
pop
dec
cmp
pop
inc
mov
push
pushf
imul
dec
popf
cmp
push
dec
fidivs
push
sub
push
inc
mov
mov
call
lds
adc
imul
push
cmp
sbb
int
jl
sub
or
insb
jmp
insb
xlat
ret
add
jmp
gs
pop
je
aam
sub
jne
cmp
cmp
xor
lock
adc
mov
inc
in
push
testb
pop
jns
loope
and
lods
mov
repz
gs
sbb
cmp
xchg
test
sbb
or
in
xor
arpl
test
xor
addr16
jns
out
hlt
stc
out
push
lods
fs
mov
out
popa
rorb
cmpb
jnp
popf
gs
mov
mov
inc
sbb
loop
push
cmp
rcl
xor
inc
les
dec
pop
scas
xor
jge
sbb
iret
repz
cmpsb
negb
inc
cmp
bound
fsubl
ret
aam
push
negb
sarb
sbb
loop
mov
sahf
scas
jle
xor
xor
pop
or
sub
mov
test
test
jge
adc
daa
lock
push
xchg
jae
xor
jnp
cmp
lahf
fnstsw
les
xor
out
pop
cmp
test
mull
ret
sar
xchg
psrad
jp
data16
cmpsb
cmpsl
lahf
je
ja
popf
xchg
insl
stos
in
jns
je
aam
dec
imulb
sub
cmpsb
sbb
idivl
sub
jns
rcr
cmp
in
sub
dec
mov
mov
dec
ror
ljmp
cs
stos
scas
push
loop
loope
jb
mov
cmpsl
call
rolb
adc
cmpl
mov
mov
int3
leave
iret
cmp
add
add
xor
aas
pop
cmpsb
jl
mov
out
mov
dec
arpl
inc
sub
xor
enter
pop
popf
pusha
test
add
mov
std
dec
inc
imul
jg
cmp
es
js
mov
stos
imulb
inc
adc
orb
test
mov
inc
pop
stos
test
jo
mov
dec
xchg
gs
iret
inc
iret
stc
iret
or
xor
jmp
xchg
mov
ljmp
sub
mov
push
mov
push
adc
add
cmpsb
icebp
mov
imul
or
mov
jo
or
std
orl
outsl
cmp
ret
ds
mov
sti
mov
and
inc
jae
xor
mov
fldt
xchg
add
int3
mov
mov
es
mov
out
jp
jo
ja
iret
pop
xchg
xor
aaa
test
xorl
cmp
sbb
aad
mov
jne
sub
mov
xlat
jmp
inc
mov
cmp
imul
adc
popaw
cmp
aaa
mov
push
cmp
inc
mov
fstpt
adc
push
enter
aam
cltd
shrb
lcall
pop
push
mov
std
xor
cli
in
insl
in
call
aaa
jns
repz
into
mov
mov
mov
cmp
jo
jnp
fnstcw
cmpsl
shll
int3
idivb
iret
scas
jo
jae
and
js
mov
daa
adc
bound
or
imul
and
push
push
test
mov
enter
adc
dec
fdivl
pop
adc
pop
mov
and
dec
rcrb
or
adc
sbb
jl
cli
mov
add
push
jnp
sub
push
sub
ret
mov
mov
mov
rcr
ss
div
push
pop
pushf
insl
fnstcw
jo
adc
addl
jle
xchg
cmpsl
popfw
addr16
pushf
cmpsb
ljmp
mov
sbb
data16
xlat
jne
subb
mov
call
jno
push
jns
sarb
mov
lds
jns
sahf
xchg
cmpsl
loop
cmp
mov
stc
ja
into
fidivl
data16
mov
stos
int3
adc
pop
aad
pop
mov
xor
jno
cmc
and
and
jp
cmc
mov
mov
shlb
jns
sub
outsl
jae
push
fs
push
cmp
popf
leave
sub
mov
imul
push
mov
out
adc
inc
jl
loopne
loopne
mov
das
jbe
in
xor
dec
dec
sbb
dec
dec
push
adc
pushf
xchg
xor
dec
or
xor
inc
inc
in
loopne
je
enter
mov
mov
faddl
push
cltd
add
xchg
jne
imul
test
cmp
jae
aaa
sub
je
push
popa
mov
sbb
mov
xchg
pop
push
dec
cmp
sbb
jmp
cmpsb
adc
lahf
movsb
cmpsb
add
pusha
sbb
xor
mov
dec
orl
lds
mov
lahf
mov
nop
subl
add
inc
loopne
add
jo
xor
or
push
or
pop
je
adc
mov
sbb
pop
or
dec
dec
mov
mov
add
push
dec
repz
popa
lock
mov
mov
fsts
shll
push
mov
inc
xor
pop
lock
lea
test
jb
outsb
dec
mov
sbb
cltd
jge
sbb
cmp
repnz
xchg
fdiv
gs
scas
into
mov
movsl
push
xor
mov
push
xor
xor
and
sbb
mov
aas
cld
mov
iret
dec
aaa
les
sub
mov
mov
jbe
mov
xchg
popa
xor
cmp
aas
adcl
movsb
push
jle
mov
jl
mov
cmp
imull
xchg
inc
mulb
adc
ljmp
lcall
add
push
enter
xor
sbb
js
or
jge
push
dec
jp
pop
divl
or
mov
stc
adc
adc
int3
test
ss
imul
jl
adc
icebp
jle
push
push
adc
into
addr16
sub
lods
dec
test
push
jg
pushf
mov
test
icebp
mov
out
mov
xchg
lea
sarb
fisubrl
inc
stc
sub
sub
lds
sub
mov
cmp
daa
and
sub
xchg
sti
mov
mov
loop
popf
loope
push
xchg
nop
popf
jge
std
cmpsb
mov
roll
ljmp
xchg
mov
imul
rorl
mov
ret
insl
cmpsl
xor
add
ror
xchg
dec
inc
jecxz
xor
and
xchg
sub
je
adc
stos
outsl
sbb
cmp
hlt
ficoml
popf
dec
dec
insb
divb
shll
sbb
hlt
jle
sti
nop
inc
nop
outsb
cmp
nop
mov
fmuls
mov
sbb
test
mov
jno
insb
or
sub
ds
or
push
inc
fsts
out
je
pop
and
mov
scas
pop
xchg
mov
pop
aad
jno
ficompl
add
pop
push
sarl
es
sahf
aaa
aam
cmpsb
add
push
movsb
mov
jnp
les
addl
dec
dec
adc
jmp
mov
sarl
dec
imul
jge
mov
ja
or
sbb
jns
xor
dec
xlat
clc
mov
aaa
sbb
test
or
cli
jne
movsl
push
cltd
jae
pop
scas
sbb
adc
cmp
adc
jnp
cmp
mov
jecxz
and
push
clc
out
bound
aam
loope
sub
popf
inc
pop
js
adc
or
push
jnp
or
or
push
ds
dec
dec
jmp
stos
mov
std
or
cmp
fmuls
cld
stc
fimuls
cli
dec
into
push
leave
rcl
xlat
xor
out
insb
pop
test
out
shrb
stos
out
jb
pop
fnsave
and
add
xor
sbb
shr
clc
rcl
repz
sbb
lcall
push
outsl
lock
fdivs
loope
imul
mulb
pop
or
lea
imul
xchg
sbb
popa
sbb
aam
repz
xchg
in
xor
iret
dec
xchg
pop
test
and
cmp
inc
pop
jae
push
mov
clc
cmpb
pop
jo
xor
aaa
aas
cmp
xor
loopne
mov
dec
rolb
mov
data16
mov
ja
cmp
mov
sub
cmp
in
lea
adc
lea
popa
test
and
int
dec
add
aam
pushf
shll
insl
jno
pop
aad
cmp
stc
or
rorb
pop
test
or
push
xchg
mov
mov
daa
fs
dec
enter
ror
push
inc
arpl
sub
mov
pop
cs
int3
les
dec
add
cmp
jg
popa
cmpsb
inc
adc
inc
addr16
stc
cmpb
aas
add
in
mov
mov
xchg
add
and
push
xchg
lds
inc
xor
mov
cltd
cmpsl
pop
cltd
lods
movsl
fists
lods
lea
or
sbb
jno
enter
jnp
adc
mov
cmpsb
mov
lock
pop
js
hlt
or
lods
dec
movsl
fmuls
dec
lcall
jo
lret
push
insb
pop
popf
aas
iret
mov
mov
clc
sbb
mov
jb
or
stc
adc
dec
fnstsw
pop
mov
test
aad
je
push
push
push
cli
fcoml
sbb
mov
repz
pop
sbb
roll
js
mov
shll
inc
ja
push
stc
mov
xchg
lcall
aad
xor
cmpsb
sbb
test
movaps
cmp
dec
jnp
inc
arpl
test
icebp
mov
mov
jb
adc
push
jp
insl
dec
or
or
or
push
jno
pop
mov
lret
sbb
fwait
mov
test
imul
jle
cmpsb
jg
inc
or
jno
or
test
fsubrl
cmp
xchg
sbb
lds
insl
loope
in
into
iret
and
int3
mov
nop
js
or
aas
dec
andb
xor
xchg
mov
mov
dec
push
adc
repz
mov
ljmp
or
mov
pusha
scas
test
and
hlt
or
popf
rorl
lret
cltd
fmul
and
push
movsb
cmp
jbe
incb
mov
nop
leave
or
jnp
test
sbb
sbbl
mov
push
mov
jg
in
xchg
cmp
mov
div
mov
or
lds
lods
xor
lahf
imul
mov
jnp
pop
pusha
adc
insl
out
or
adc
cmp
imull
fcoml
sti
out
test
clc
mov
xchg
push
int
adc
iret
sarb
dec
sbb
push
imul
or
loope
pop
arpl
add
test
sub
xchg
inc
sub
sub
cmpsb
dec
out
and
and
clc
mov
icebp
pushw
nop
iret
xor
and
lds
xchg
mov
dec
and
scas
fwait
mov
test
shll
adc
negl
cmp
inc
mov
dec
xchg
jge
dec
cmp
dec
dec
xchg
mov
js
in
data16
stc
shll
add
mov
out
mov
aas
push
mov
push
sub
sbb
inc
das
clc
dec
push
xchg
test
pop
lds
mov
jne
outsb
imul
sbb
sbb
fidivrs
xor
xchg
dec
or
cmp
test
shr
sbb
iret
rcr
add
xchg
and
in
outsb
dec
in
inc
and
and
lcall
inc
mov
mov
shl
xor
mov
jl
sbb
xchg
dec
jg
mov
test
mov
mov
icebp
adc
mov
insl
or
pop
jle
shlb
clc
orl
dec
lret
int3
testb
and
dec
lds
sbb
loop
xchg
dec
and
scas
popa
mov
mov
lock
flds
in
icebp
cmpl
or
or
jge
mov
insl
push
mov
sub
aas
mov
ss
js
lea
pusha
adc
adc
jmp
scas
adc
repnz
and
add
into
mov
scas
jmp
push
pop
fisttpll
mov
fmuls
ja
sub
sbb
shl
push
xor
push
mov
mov
cmp
enter
outsb
repz
adc
xchg
cmc
call
leave
lea
cmc
xchg
or
pop
insl
xchg
mov
pop
inc
mov
mov
sub
pop
mov
and
ret
popa
mov
push
and
aam
cmc
sub
jbe
and
inc
insl
daa
negb
or
xchg
xchg
xor
push
clc
fstpl
fwait
jl
fucomi
ss
outsl
orl
cmp
ret
jl
out
push
imul
ss
dec
fbstp
in
add
loope
pushf
push
test
dec
dec
xchg
push
aam
and
jo
mov
loop
dec
or
adc
int3
push
sbbb
cli
push
bnd
stos
loop
into
mov
sti
mov
dec
lret
std
scas
pop
into
pusha
leave
xchg
in
jb
scas
mov
cmp
cmp
ss
cli
xchg
adc
jge
jb
gs
jg
and
sub
std
out
sbb
mov
dec
icebp
addl
mov
mov
or
lods
movsl
add
push
push
mov
hlt
test
imul
clc
icebp
sub
sbb
ficompl
gs
std
icebp
xchg
fists
sub
mov
pop
nop
mov
add
or
mov
adc
push
adc
or
dec
mov
sahf
fcmovne
sub
mov
xor
dec
or
ss
popf
aaa
add
shr
cltd
scas
daa
bound
mov
gs
xor
popf
mov
fimull
dec
pop
scas
insl
in
mov
xchg
js
pop
or
mov
aaa
cmp
imul
es
lret
cmpl
mov
jno
and
and
mov
jb
cli
sbb
push
dec
lea
fbstp
out
out
sbb
je
andb
inc
aaa
insb
pop
mov
dec
pop
xchg
xor
popf
sbb
xor
mov
repnz
lods
outsb
sub
cmpsb
int
cld
and
xchg
out
into
sbb
lret
repz
int
popf
push
mov
imull
jae
bts
pop
and
xor
and
push
enter
out
ret
push
shl
add
insl
subl
loop
dec
cltd
loope
or
leave
jl
add
push
jnp
movsl
cmp
jp
lret
jmp
dec
pusha
push
add
pop
sbb
clc
lds
aad
jae
xor
xchg
push
lcall
test
cmp
jae
inc
mov
xor
adc
sub
adcb
inc
dec
les
mov
cmp
roll
andl
mov
imul
fistpl
push
or
loop
rorb
push
push
fistpl
jae
cmp
sub
and
inc
pop
iret
ss
push
mov
jp
jnp
fucomi
sbb
out
and
push
call
jb
jp
gs
adc
sub
xor
or
lret
test
push
push
mov
push
adcb
cmp
test
push
cmp
pop
jecxz
pop
sti
adc
add
mov
gs
lcall
dec
xor
popf
imul
sub
orl
inc
sbb
jle
rcrb
rolb
mov
mov
inc
xchg
push
adc
mov
cmp
dec
mov
cmp
test
mov
sbb
fists
imul
fnsave
mov
call
and
xor
cwtl
adc
cmpsl
lock
pop
mov
cmpsb
inc
insl
int3
dec
jne
jne
popa
aas
push
dec
cmp
lcall
fiadds
mov
inc
jmp
pop
adc
cld
inc
out
sarl
add
stos
xor
hlt
mov
dec
roll
cmp
cmpl
mov
insb
je
pop
mov
bswap
shl
mov
jg
add
out
das
adc
cmpsl
jno
scas
mov
mov
pop
adc
xor
call
adc
mov
and
inc
cmp
std
jp
mov
sub
mov
mov
cmp
inc
xor
or
mov
in
rcrl
sub
fists
adc
das
shll
dec
xor
sbb
or
push
sbb
popf
xor
sbb
outsl
adc
les
shrl
or
jo
adc
lea
ss
lea
mov
and
sbb
test
push
aam
push
sbb
jae
pop
xor
push
sbb
imul
test
pushf
movb
inc
pop
shll
dec
aam
mov
or
inc
repnz
incb
dec
call
ret
mov
mov
fstpt
xchg
add
ror
cmp
sbb
andb
jae
test
jl
je
dec
mov
push
insl
scas
cvtpi2ps
iret
cmp
movsl
mov
lds
adc
jmp
xchg
add
fstp
imul
es
push
arpl
dec
stos
xchg
jmp
jge
es
add
push
out
jmp
pusha
dec
inc
popf
or
push
jne
lea
push
frndint
jbe
jl
xlat
mov
cmpsb
shll
lret
sbb
movsb
sub
shll
jne
lret
xchg
movsb
outsl
mov
jecxz
mov
xor
xor
cmpsb
inc
rcrl
std
pop
dec
das
insb
rcrl
xchg
ljmp
jb
ja
int3
out
inc
stc
or
mov
stos
ss
xchg
ja
mov
sub
pop
pop
jl
in
mov
pop
xchg
push
dec
inc
insl
add
adc
adc
sbb
mov
jge
idivb
repnz
xor
or
push
outsl
lret
dec
sbb
sub
in
dec
add
test
mov
dec
pop
int3
dec
dec
add
add
jp
dec
mov
cmp
xchg
lock
xor
daa
xchg
or
popa
jnp
aas
es
ljmp
stc
test
jp
fldt
mov
outsb
mov
xchg
jge
jnp
data16
aad
cmp
popa
inc
fiaddl
std
cmp
jne
test
jp
mov
or
fcoml
dec
sbb
mov
jge
or
xchg
jae
add
pusha
inc
pusha
int3
je
sbb
inc
mov
sbb
xchg
cmpsb
pushf
xor
aas
cmp
dec
rcrb
mov
es
in
fdivrs
lock
push
or
mov
dec
or
stc
outsb
push
iret
cmp
into
repnz
scas
or
pop
cmc
push
test
nop
imul
push
idivb
dec
mov
dec
pop
cmp
adc
dec
jg
and
jmp
stos
sub
ljmp
jno
adc
mov
xor
and
adc
rolb
and
cmpsb
scas
jo
xchg
dec
je
jns
cmp
cmpsb
or
rcll
mov
sbb
and
pop
or
dec
or
das
mov
jns
lret
loopne
inc
in
push
sub
inc
inc
or
jbe
jno
test
mov
popf
out
nop
mov
je
cmp
arpl
jns
stc
cmc
adc
mov
pop
das
xchg
pop
test
mov
jmp
dec
ljmp
ds
out
xor
subb
dec
push
push
aaa
mov
mov
sarb
pop
divb
cwtl
or
pop
sub
xchg
and
add
sbb
je
enter
stos
lods
mov
mov
cmp
jae
push
in
sbb
inc
dec
adc
fldcw
push
aad
cli
push
jns
cmp
push
call
out
push
data16
fcom
pop
jno
lods
cltd
dec
add
iret
mov
add
jo
mov
sbb
xor
jne
cmp
inc
arpl
push
pcmpeqd
aas
push
lods
jnp
ds
adc
clc
inc
adc
outsl
daa
inc
or
stos
pop
xor
push
pop
adc
xor
pusha
and
dec
pushl
xor
lock
sbb
imull
mov
pop
inc
orl
jno
bound
ret
or
popa
add
sbb
lock
mov
clc
inc
addr16
dec
lea
das
aad
xchg
loop
and
sarb
mov
adc
sub
xor
push
adc
fwait
sbb
popf
dec
sbb
imul
cmp
in
sub
fwait
lods
jbe
and
scas
mov
mov
push
jno
inc
xchg
cmp
outsl
mov
cmp
dec
inc
xchg
sarl
imul
stos
decb
outsl
loop
cmp
xor
sub
dec
sbb
adc
cli
sbb
xchg
sub
div
mov
popa
es
pop
dec
fwait
rol
pusha
sbb
add
mov
cmpsl
sti
dec
xchg
into
mov
jnp
jae
mov
xchg
cmpsb
pop
jae
int3
cmpb
cmpsl
cmp
scas
sub
outsb
cmp
and
xchg
cmp
sarl
jp
cmpsb
imul
cmpsl
cmp
xor
lods
je
mov
test
out
mov
jp
and
out
push
dec
push
jp
rorb
std
jecxz
lcall
ja
pop
imul
dec
mov
push
stc
pop
int
hlt
hlt
cmpsb
sbb
cmpb
mov
insl
and
mov
add
fildll
sub
fs
pop
pop
popa
xchg
fs
mov
cmp
test
mov
xchg
stos
xchg
and
addr16
inc
mov
lea
mov
test
flds
dec
pusha
sbb
mov
jmp
imul
ja
sbb
ret
inc
in
dec
xchg
or
shll
xchg
and
add
in
xchg
sub
mov
and
das
cli
pop
cld
push
out
pop
and
sub
imul
lds
cmp
push
cmp
idivb
sbb
push
push
outsl
sbb
test
nop
xor
js
adc
jne
xchg
outsl
cmpsb
push
jns
gs
jbe
pop
add
xchg
imul
pop
lahf
je
jne
hlt
movsl
mov
sar
test
sub
lea
cs
jp
out
inc
int
xchg
adc
mov
cmpsl
lods
test
cltd
loope
jae
sbb
sub
jnp
int3
dec
ljmp
cltd
cmp
xor
pusha
gs
mov
cltd
ja
cmp
xchg
mov
lret
pusha
pop
nop
sbb
xchg
inc
xor
cmpsb
fldcw
jae
lea
or
mov
or
fildl
jp
pop
imul
adcl
pop
jge
xchg
xchg
xchg
and
lahf
popf
fwait
sbb
addl
jbe
pop
gs
jg,pt
mov
push
test
sub
addr16
xchg
ss
jnp
pop
xor
jno
sarb
lret
sbb
pop
lahf
inc
push
sub
xor
pop
jbe
push
jno
orl
pop
jp
xchg
jp
cmpsl
xchg
hlt
jne
les
int3
inc
push
inc
bound
mov
js
pop
dec
jl
jnp
test
inc
or
mov
xor
stos
mov
mov
xchg
xor
lods
lds
sarl
movsb
mov
nop
mov
cmpsl
dec
or
xor
add
fstpl
test
out
xor
cmp
push
pop
mov
sub
jbe
xchg
pop
adc
inc
cmp
scas
xor
inc
call
add
jns
std
mov
or
movsb
push
xchg
push
or
call
lea
int
test
jg
std
add
push
mov
not
mov
dec
rclb
dec
cltd
bound
lods
pop
xor
cmp
jne
and
push
pop
imul
andl
xor
dec
xchg
fwait
dec
sub
and
popf
mov
sub
mov
xor
cmp
mov
loope
jno
call
jns
push
pusha
hlt
pop
jo
sbb
int3
iret
adc
jg
sbb
clc
popa
sahf
stos
adc
out
xor
cmc
mov
test
jnp
cli
cmp
arpl
inc
lret
jle
xor
aad
xor
or
pop
jl
mov
out
stos
cwtl
xor
pop
in
sbb
insb
psubq
dec
bound
jmp
jl
mov
icebp
mov
lods
js
insl
inc
mov
sbb
test
movl
idivl
rol
mov
xor
mov
loop
fs
inc
push
jecxz
xor
jecxz
pusha
xchg
ret
loopne
and
ss
or
and
lret
jne
xchg
mov
lcall
fnsave
inc
sub
adcl
pop
push
sarl
negb
cltd
jmp
or
jno
xor
popf
arpl
sbb
scas
dec
or
mov
int
xchg
sbb
push
js
inc
add
cmp
xchg
test
test
lahf
outsl
les
fdivl
xor
cmpsl
adc
inc
xor
nop
jb
lahf
pop
dec
outsb
jg
mov
dec
xchg
into
cmp
dec
inc
loopne
clc
aaa
inc
jno
idivl
mov
inc
icebp
add
fstpt
out
cmpsb
js
cmpsb
add
lods
mov
dec
mov
pop
adc
pop
add
push
add
rcl
mov
mov
pusha
inc
repz
cmp
sub
jo
xor
sbb
fisubrl
add
loop
ret
dec
stos
out
mov
ficompl
inc
fwait
inc
mov
sbb
inc
out
fadds
xchg
inc
mov
sbb
inc
test
dec
cmp
push
movsl
test
dec
lock
cmp
add
add
mov
test
test
dec
inc
mov
loopne
dec
mov
inc
roll
movb
jb
sub
or
out
jle
mov
pop
adc
sbb
pop
popa
sbb
xor
lea
xchg
sub
jp
js
pop
jg
cmc
pop
xor
imul
gs
sbb
es
js
int
mov
pop
lock
cmp
cmp
out
dec
sarl
xor
mov
loopne
jecxz
movsl
xor
call
std
or
cmp
gs
xorb
jb
pop
jae
push
pop
pusha
and
mov
adc
shll
inc
decl
push
aaa
push
lods
mov
mov
mov
stc
outsb
xor
or
lcall
or
mov
dec
int
pop
cmp
cmp
pop
iret
arpl
or
or
cmp
or
pop
and
cmp
shrb
fwait
push
and
push
lea
lea
mov
fisubs
and
xor
dec
pop
sbb
aam
icebp
mov
jbe
sti
cmp
cmp
push
imul
cmp
jg
outsl
push
test
inc
mov
sub
mov
jl
add
leave
or
arpl
sbb
jno
ror
negl
fwait
jo
and
mov
or
adc
in
test
mov
dec
js
adc
pop
lcall
mov
adc
cli
outsl
addr16
cmpsl
testl
stos
pop
test
aaa
push
adc
popf
sbb
jno
sbb
cltd
test
sbb
scas
jg
xor
dec
inc
in
je
addl
daa
dec
jecxz
dec
add
xchg
mov
xor
sarb
inc
jmp
call
mov
sbb
aad
cltd
cmp
stos
inc
into
cld
sbb
lock
inc
test
repz
pusha
push
mov
das
loop
ret
fidivs
aas
jle
dec
mov
sbb
addb
pop
mov
stc
popf
leave
sub
lods
xor
js
push
not
pop
push
jmp
outsb
cmp
fsubrs
cmpsl
mov
inc
push
adc
test
fnstcw
inc
jle
pop
or
sub
sti
cmp
hlt
xorb
cmp
test
cld
cltd
jp
push
ja
lods
push
dec
dec
int3
mov
test
jns
push
xchg
scas
jp
mov
pop
mov
push
clc
arpl
cli
dec
cmp
rcrb
mov
jno
adc
sbb
mov
push
dec
andb
popf
mov
shll
mov
mov
jmp
adc
adc
sbb
push
and
clc
pop
aaa
ss
cmpsb
and
push
and
or
adc
cmp
test
add
fimull
cmp
or
add
sub
jno
test
adc
pop
sbb
iret
repnz
cmp
divb
jge
sub
loop
jae
fldenv
mov
adc
add
adc
inc
push
in
dec
adc
cmpsb
lods
cmp
ret
dec
inc
push
in
gs
cmpsl
cmp
popl
mov
repnz
nop
inc
jp
in
ja
out
sbb
jne
mov
xor
mov
enter
int
jns
fstps
cmp
out
aas
loopne
and
inc
ret
jmp
jg
mov
and
and
pop
and
mov
addr16
cmc
jmp
xor
pop
adc
add
sub
or
mov
hlt
je
ss
jno
or
clc
rorl
in
fcomp
out
mov
dec
cmp
shrb
or
xor
add
cmp
pop
and
test
iret
into
and
push
mov
dec
jno
aas
cmp
adc
dec
lock
jl
or
dec
jg
push
xchg
dec
inc
xchg
or
scas
loop
inc
mov
mov
adc
xchg
sbb
inc
dec
stos
cwtl
adc
inc
gs
or
cmp
movsl
sbb
or
je
rolb
fs
cmp
ror
stos
lahf
jl
push
push
shll
mov
outsl
push
xor
aaa
jnp,pn
xor
mov
cmp
jp
jno
lea
jo
mov
adc
or
popf
iret
stos
pop
cmp
int
mov
dec
push
sub
cmp
leave
outsb
in
sub
xchg
xchg
cwtl
test
cmpsl
sub
and
addr16
jecxz
jnp
aad
mov
int3
pop
push
add
jnp
popf
pop
sub
cmp
mov
push
sbb
mov
xlat
mov
add
lahf
add
mov
ja
push
xlat
mov
push
mov
push
repnz
xchg
cli
and
mov
mov
sbb
sub
mov
xchg
fwait
pusha
cmp
or
pop
mov
daa
xor
scas
imull
loope
xchg
inc
inc
inc
mov
inc
inc
pop
add
pop
inc
into
shrb
or
jno
hlt
xchg
add
imul
lock
aad
xchg
fdivs
ds
mov
cmp
mov
adc
cmpsl
pop
add
push
jno
mov
xchg
jo
mov
jp
ds
jne
clc
xor
adc
push
pop
adc
pop
imul
lods
adc
fs
sbb
pop
sti
fs
mov
mov
sbb
dec
in
sbb
or
lgs
mov
inc
xchg
or
adc
or
xlat
inc
pop
mov
pop
or
dec
xor
jno
arpl
xor
adc
xor
and
in
test
pop
mov
in
into
je
mov
dec
scas
cmp
xchg
aad
push
mov
test
popf
push
inc
sbb
xchg
les
pop
push
cmp
je
xchg
jp
sahf
loopne
dec
pop
inc
pop
sbb
stos
pusha
adc
mov
xchg
insl
or
je
fs
test
inc
rcll
or
addr16
shl
add
mov
xor
mov
dec
lret
add
imul
adc
xor
rol
and
pop
push
cmp
mov
xchg
mov
jmp
pusha
add
cmp
clc
ljmp
test
push
and
out
pop
sarl
dec
movsl
xlat
repz
push
add
rolb
cmpsl
pop
ret
repz
sbb
dec
pusha
xor
loope
dec
or
dec
mov
mov
mov
mov
sbb
mov
negb
pop
jne
pop
nop
adc
and
in
mov
mov
mov
push
sbb
test
mov
push
and
into
dec
and
enter
das
stos
jbe
xchg
pop
ja
adc
inc
jg
add
imul
mov
jp
lret
scas
adc
xchg
sub
pusha
popa
into
aad
jns
out
jb
sbb
cmp
rcl
jg
stc
test
or
call
jns
fstl
sbb
mov
rolb
adc
je
jmp
addr16
inc
shlb
pop
mov
mov
repz
dec
or
xor
lds
fwait
pop
push
adc
in
pusha
adc
roll
idivb
adc
inc
test
dec
sarb
mov
cmp
out
mov
scas
lea
push
push
stc
cli
mov
cli
addr16
pop
mov
cmp
or
sbb
add
jns
das
jae
loopne
scas
add
loope
jg
fxch
push
push
dec
clc
int3
notl
add
mov
dec
xor
aaa
inc
inc
ja
dec
bound
sub
sti
adc
into
push
movsb
sti
repnz
adc
or
test
xchg
xorl
ja
and
test
mov
mov
test
pop
lahf
dec
shlb
inc
push
pushf
jnp
rorb
add
js
aas
int3
clc
lret
scas
rcll
int3
repnz
dec
mov
arpl
mov
inc
mov
loopne
imulb
pushf
inc
xchg
jno
imul
lods
je
dec
in
mov
les
jg
xchg
cli
mov
mov
xchg
jne
or
cmp
xchg
jne
js
iret
mov
xor
inc
pop
pop
outsb
pop
mov
sbb
lods
push
call
dec
push
jg
ret
repz
insl
cmp
pop
pop
lret
and
icebp
xchg
cmp
dec
xor
push
cmp
jp
push
pop
jecxz
jno
jb
mov
cmp
nop
xchg
pop
cmp
jge
popf
jmp
int
pop
jb
gs
inc
addr16
hlt
fs
xchg
jae
adc
addr16
pop
dec
push
mov
inc
cmp
jb
and
leave
xor
cmp
inc
push
enter
repz
inc
mov
adc
enter
jl
stc
cmpsb
test
cmp
jge
push
sbb
push
jno
sub
inc
adc
fdivs
movsl
push
lds
mov
mov
loopne
imul
shll
movsb
cmpsb
mov
test
std
xor
popf
out
outsl
sub
movsb
jecxz
fcmovnbe
mov
sbbl
cli
mov
sub
sbbl
lock
cmp
mov
lcall
and
jg
es
popf
mov
leave
mov
push
out
and
aam
mov
mov
mov
addr16
sbb
dec
dec
xlat
mov
fld
daa
xor
jge
push
dec
add
ja
push
popa
pusha
dec
adc
icebp
jnp
leave
cmpsb
xor
sbb
inc
and
sbb
in
dec
inc
mov
aad
test
adc
mov
pop
jmp
sbb
mov
sub
jo
das
aad
nop
cmp
push
mov
popa
movsb
out
in
subl
mov
inc
std
call
jbe
loopne
xor
ljmp
inc
push
xor
jle
cmpsb
adc
gs
insl
dec
pop
cmp
popa
clc
xchg
pop
lods
jb
inc
mov
aaa
test
bnd
hlt
daa
pop
cmp
subl
mov
push
imul
push
test
sbb
jb
or
xor
or
lods
jb
shrl
aas
movaps
andl
jns
xor
xor
cmpsb
or
test
aaa
jmp
sarl
leave
push
mov
cmp
dec
movsb
and
jbe
sbb
cmp
sbb
mov
mov
scas
sahf
call
jno
and
subb
les
mov
pop
jns
cmp
cmpsb
fmuls
addb
dec
jne
dec
or
inc
xor
enter
lahf
push
outsb
jo
cmp
xor
inc
aaa
popf
fadds
movsl
pop
mov
inc
aaa
cmpsb
and
cmp
adc
popf
jle
lock
adc
dec
adc
clc
inc
into
mov
sti
cmp
fs
and
lea
cmp
mov
int
cmp
or
xor
dec
negb
int3
bound
cmp
cld
fisubrs
or
jnp
sbb
cmpsb
lret
fiaddl
sub
adc
aam
sarl
dec
adc
pushf
stos
insl
xchg
popa
inc
jnp
sbb
push
adc
inc
int
cmp
jno
adc
sub
cmp
popf
add
pop
pop
xor
inc
jp
int
inc
mov
or
mov
in
mov
daa
stc
lret
jp
fs
jge
cli
jno
sub
inc
xchg
jge
cltd
cmp
fs
pop
mov
push
xor
xchg
cmp
inc
sarl
int3
xor
imul
dec
cmp
loop
mov
mov
ret
lods
mov
test
jb
xchg
dec
jae
jp
jp,pt
rol
cmc
or
xchg
bnd
out
mov
ret
frstor
lods
cmp
pop
or
or
sbbl
arpl
stos
push
push
cltd
add
inc
xor
lods
xor
sarl
and
stc
jp
inc
mov
dec
dec
sub
scas
aas
cmpl
popa
mov
popf
sbb
xchg
pop
shll
or
sub
jns
xlat
insl
clc
incb
cmp
loopne
xor
inc
jmp
inc
out
cli
mov
insb
mov
leave
test
adc
jne
pop
aas
imul
sub
adc
sbb
push
movsb
into
repnz
jle
lods
mov
mov
idivb
jge
adc
xor
cltd
fadd
dec
sahf
mov
adc
lahf
push
cmpsl
das
dec
xor
pop
iret
gs
rcrb
ja
xor
jo
inc
xor
mov
mov
or
insl
movb
enter
lret
movsl
out
stos
rcrl
adc
mov
insl
insb
fwait
mull
lea
data16
std
jb
xorb
jnp
lock
push
push
dec
jnp
mov
mov
cmc
pop
test
outsb
xchg
hlt
jg
pop
inc
mov
dec
mull
or
movsl
addr16
or
andb
aas
orb
sbb
dec
cmp
mov
pop
scas
jnp
lea
fildl
int3
imul
adc
mov
pop
inc
cmp
loope
dec
mov
mov
popf
pop
mov
shlb
pusha
dec
xchg
mov
xchg
cmp
sub
mov
outsb
pop
xchg
popf
push
push
jne
data16
dec
xchg
xchg
loop
adc
aas
or
inc
sub
add
enter
mov
xor
pushaw
popf
movsl
jbe
push
mov
pop
loopne
aad
icebp
dec
jmp
xor
jl
popa
mov
popf
xchg
sub
stos
or
push
pop
lock
sub
xor
jns
xor
clc
sub
mov
jnp
jg
jbe
and
xchg
mov
dec
push
adc
loope
inc
pop
mov
mov
pushf
into
cmp
or
js
ret
pop
adc
inc
jg
push
cmp
vmwrite
adc
cmpsb
int
in
jge
insb
ds
clc
scas
fmul
imul
ja
push
jbe
cmpsb
xor
pop
cmp
test
movsl
push
push
push
in
int
fs
dec
jnp
sub
push
adc
xchg
pop
jp
scas
pop
lds
lods
movsb
std
jnp
rcll
inc
pop
mov
cmp
mov
pop
jo
adc
mov
icebp
xor
push
cld
test
cmp
or
mov
fnstcw
popa
push
mov
insl
and
addb
adc
int
dec
mov
sbb
out
jp
xor
dec
loopne
repz
mov
mov
xchg
mov
xchg
sub
cmp
fcomi
imul
add
popf
sahf
loope
out
inc
adc
add
test
push
outsb
mov
test
mov
dec
rcr
rol
test
notl
xchg
pop
pop
iret
js
notb
test
and
push
or
dec
out
leave
jb
sub
nop
mov
mov
cmpsl
mov
mov
xchg
xor
jbe
lods
cmp
sbb
fmul
hlt
dec
and
nop
pop
test
subb
cld
stos
adc
xor
repnz
jecxz
out
push
repz
add
fs
in
jle
mov
inc
mov
fistl
xor
inc
fwait
std
sti
xchg
clc
rcl
ss
mov
jle
jle
push
adc
mov
fstpl
jmp
mov
cmp
cmp
insb
push
sub
sub
lea
addr16
pop
xadd
andl
out
ja
and
xor
adc
scas
push
insl
xor
mov
sbb
xchg
test
ljmp
mov
ror
add
pop
frstor
leave
int3
xor
sbb
inc
cmp
inc
js
movb
mov
pop
scas
cmc
lcall
sti
sub
rclb
stc
jns
xor
test
icebp
dec
pop
mov
jne
ds
push
xor
test
push
andb
lret
push
xlat
jmp
jbe
inc
or
sub
xchg
iret
mov
mov
xchg
xor
lea
xor
pop
adc
cmp
mov
lret
mov
mov
sarl
inc
or
dec
pop
subl
mov
rorl
xor
mov
jns
and
push
test
test
ljmp
aaa
lods
jl
mov
mov
stc
in
pop
fbstp
fstl
ljmp
lret
repz
xchg
dec
lret
adc
add
adc
jp
pop
and
in
xor
mov
lods
lds
rorl
jb
mov
inc
les
pop
insb
test
sarb
push
dec
adc
aam
push
mov
insb
cld
cmpsl
pop
push
xchg
push
daa
add
orb
xor
cmp
idivb
or
cmpsb
mov
or
adc
out
sbb
jmp
hlt
test
cltd
ret
pop
call
shr
xor
rcrb
cs
ret
in
in
push
hlt
negl
inc
mov
mov
lods
jns
mov
or
arpl
and
ds
inc
je
add
adc
lcall
jp
rcr
or
xor
dec
and
pop
pushf
push
mov
jcxz
cwtl
sub
cmpsb
push
push
adc
jno
int
add
dec
cmp
lds
xor
fs
sar
popa
adc
sbb
sbb
xchg
mov
jns
rorl
push
mov
cmpsb
mov
or
push
or
daa
xor
xchg
lret
push
mov
int
sbb
push
repz
das
insl
int3
mov
mov
popa
mov
xor
int3
popf
xchg
mov
out
mov
mov
jns
popf
aad
push
lret
les
push
call
test
sbb
cmp
mov
cmp
add
jae
cltd
push
int
imull
aas
sbb
test
xchg
into
in
and
add
xchg
jno
dec
rcrb
pop
pusha
push
fdivrl
and
incl
adc
sub
lret
jmp
fs
jae
mov
xor
test
add
outsb
sahf
icebp
xor
scas
into
popa
dec
dec
jp
jmp
test
sbb
fisubs
pop
xchg
cmpsb
orl
das
repnz
jge
fwait
enter
icebp
push
add
inc
addl
mov
push
mov
cmp
insl
mov
insl
cmp
jg
fldenv
lods
push
jge
icebp
mov
add
jmp
fs
ja
xchg
jge,pn
jp
std
mov
das
out
xlat
dec
jne
cmp
mov
push
lret
addl
sub
push
lds
out
outsl
in
test
or
shrb
jne
pop
push
mov
lds
lret
mov
fistps
add
fimull
push
xor
push
xchg
stos
popf
push
jne
lsl
sti
xchg
mov
sub
push
or
daa
loope
dec
jecxz
and
aas
fisubs
xor
pushf
or
stos
and
test
stos
dec
and
mov
and
mov
pop
jae
lds
mov
cmp
and
add
pushf
dec
or
cli
adc
jo
add
aaa
mov
fisttpl
stc
test
sub
xchg
lock
aam
js
mov
fmuls
pop
mov
loopne
jne
pop
inc
xor
mov
subb
aam
gs
int
lods
mov
adc
inc
into
inc
loop
nop
je
add
inc
ljmp
jecxz
jmp
cmovle
jae
outsb
jbe
cmpl
jnp
cs
push
rclb
pop
mov
pop
dec
dec
add
mov
test
call
jns
jmp
jg
rcrl
int
adc
icebp
jp
pop
imul
gs
cmp
ret
mov
insl
call
scas
mov
dec
arpl
push
movsl
sub
icebp
mov
cmp
lret
int3
lods
stos
cmp
enter
add
push
push
ljmp
imul
fwait
arpl
or
cmp
das
cwtl
fwait
mov
xor
arpl
dec
int
idivb
push
lock
jp
fnstenv
in
dec
mov
mov
xchg
lods
outsb
loopne
insl
inc
std
insl
cwtl
and
sbb
mov
imul
sub
lods
push
xlat
outsb
jmp
dec
sbb
mov
mov
ljmp
jne
adc
int3
and
cmp
fstl
dec
scas
dec
das
push
cmp
cmp
xchg
xchg
or
test
xorl
hlt
rcll
imul
daa
and
es
pop
xor
gs
dec
adc
les
sahf
das
iret
add
add
sahf
or
or
jo
jnp
mov
mov
sti
cmp
sbb
push
mov
pop
push
popf
push
mov
lea
cmp
scas
mov
incb
sbb
lret
or
je
mov
fwait
mov
inc
mov
mov
xor
subl
addr16
test
push
jg
and
fdivs
inc
mov
fmull
push
pop
dec
push
daa
cld
jb
push
cmp
sub
shlb
jo
int3
sbb
out
mov
lret
dec
stos
mov
jnp
sbb
arpl
cli
jecxz
out
or
mov
lods
repz
lds
popf
mov
inc
jmp
cmp
mov
vorps
fildll
scas
je
fdivrp
stos
mov
das
loope
pop
add
dec
or
xchg
aad
lods
les
test
cmp
dec
push
arpl
push
add
pusha
adc
sarl
push
xor
mov
push
jne
mov
push
fs
jno
xchg
pop
aam
fdivrs
test
shll
pop
stc
mov
push
xchg
pop
divb
jmp
pop
push
hlt
inc
test
lcall
xor
lret
shl
insl
jne
push
pop
imul
aad
ljmp
shlb
lea
cmp
gs
lds
adc
jb
sub
push
test
cmp
cmc
inc
sti
push
jmp
lods
xor
and
jb
mov
mov
cmpsl
dec
clc
test
jge
mov
stc
ja
std
xchg
mov
jne
lea
push
test
push
jecxz
mov
out
stos
jecxz
cmp
inc
loop
lcall
ljmp
lea
das
cld
mov
mov
sub
in
mov
test
dec
cld
stos
movsb
or
jo
call
ret
iret
adc
xchg
je
shlb
add
cmp
mov
shl
pushl
mov
andl
sbb
adc
xor
std
mov
in
cltd
pop
lods
mov
xchg
inc
pop
or
dec
testb
js
in
jnp
mov
test
movsl
jae
cmp
sarb
mov
out
divl
movb
enter
xchg
pop
andb
pusha
stos
andb
inc
sub
fnsave
jno
jbe
xchg
pop
mov
arpl
loop
or
insl
cmp
loope
or
scas
adc
pop
mov
sarl
scas
add
scas
mov
xchg
sbb
sub
inc
in
loope
aas
xchg
add
mov
pop
dec
cmp
rcrl
in
mov
clc
ss
cmp
pop
adc
mov
imul
jne
loope
sub
aaa
fwait
inc
addl
cmpsl
addr16
adc
dec
adc
js
cmp
pop
pop
cmpsb
jnp
aam
mov
adc
lret
jle
mov
adc
stos
out
inc
hlt
jbe
aaa
adc
nop
aas
dec
dec
or
jge
xor
jns
ficompl
jl
aaa
mov
aaa
and
imul
inc
shrl
dec
pop
hlt
inc
insl
cmp
cmp
sbb
cmp
sbb
sbb
imul
bound
mov
sub
xor
call
xchg
dec
push
cmp
cmc
pop
inc
inc
jns
mov
push
outsb
fisubl
test
hlt
and
aam
xchg
inc
in
inc
imul
jno
pop
push
pop
mov
pop
cmp
push
dec
mov
xor
popf
xchg
std
adc
xor
cld
dec
jae
cltd
pop
jmp
and
bound
adc
lock
dec
insb
scas
xchg
pop
lahf
int
or
xor
rorb
xchg
mov
nop
icebp
xchg
imul
dec
out
inc
mov
jle
stos
out
jne
sub
cmpsl
adc
stos
divb
adc
sbb
push
inc
dec
jbe
cmc
pop
inc
incl
jle
dec
or
dec
mov
inc
ja
push
fstps
outsl
or
sarb
xchg
add
pushf
aaa
jp
ss
jno
adc
aas
jno
aas
or
ja
pop
mov
lret
mov
pop
loope
xor
or
scas
dec
lods
out
jg
iret
push
cmpb
dec
loope
cmp
mov
push
jns
jge
pop
and
cld
aad
push
sub
mov
push
lea
jl
adc
add
add
cmp
out
xchg
sahf
xchg
cltd
push
push
adc
sub
nop
push
in
push
loopne
xor
lea
mov
jmp
add
loope
jge
daa
outsl
adc
dec
fldenv
jnp
sbb
jbe
test
mov
sub
inc
popa
sub
mov
xor
push
fistpl
into
lods
add
insb
movsl
insb
push
lret
mov
mov
pop
sbb
jnp
dec
popa
outsl
sbb
add
xor
arpl
dec
pushl
xor
test
add
mov
sub
subb
sub
mov
sbb
xchg
inc
repnz
mov
and
cltd
push
jp
addr16
adc
cmp
xchg
cmpsb
xchg
mov
adc
mov
idivl
push
into
mov
lahf
xor
mulb
sub
sarb
jg
jp
fsubrs
mov
call
out
add
test
pop
adc
bound
loop
cld
mov
mov
lds
add
fistps
lret
sbb
jbe
adc
insb
xchg
xchg
pop
mov
into
cmp
push
jb
scas
es
pop
ret
lret
jno
push
lret
inc
jbe
sub
inc
mov
inc
rcl
mov
lea
push
or
dec
jnp
jmp
call
xor
gs
pop
cmpsb
pop
push
jmp
xchg
pop
mull
jae
mov
or
xor
inc
cmp
mov
and
inc
test
jle
inc
sbb
dec
inc
inc
stos
adc
xor
mov
pop
fsubs
sbb
fisubs
mov
jge
shl
popf
cmp
inc
mov
pop
push
scas
cld
popa
test
call
jne
stc
test
pusha
loop
je
pop
sub
stos
outsb
lods
mov
add
or
loopne
mov
sub
pop
sbb
mov
ja
mov
leave
inc
lret
mov
lods
std
sub
jmp
addr16
call
cmpsb
pop
sub
jns
fcmovnu
scas
cmp
mov
adc
js
lods
pop
jg
and
cmc
jne
ret
lcall
pop
or
orl
cmpsl
cmp
in
idivl
inc
dec
hlt
push
xorb
movsb
test
cmpsl
adc
js,pn
test
sbb
xchg
call
xor
xchg
pop
test
pop
lds
mov
jge
cli
jnp
push
jp
dec
jl
orb
movsl
stc
scas
mov
jnp
jmp
scas
lods
scas
mov
push
in
jns
sbb
xchg
cmpsb
xchg
movsb
push
stc
cmc
jae
xchg
repz
dec
stos
cli
inc
pop
sbb
push
mov
ficoml
cmpsb
aas
pusha
daa
and
out
xor
sbb
xchg
loop
loop
insb
xchg
inc
pop
inc
mov
xor
inc
xor
pop
sub
jno
imul
push
mov
pop
mov
insb
add
push
or
in
jne
mov
and
mov
xor
xor
rolb
jg
cmp
mov
aam
dec
icebp
movsl
add
ret
orb
dec
dec
mov
call
clc
aaa
imul
out
not
jp
daa
push
add
loopne
or
pop
mov
adc
dec
scas
pop
pop
aaa
sbb
push
mov
nop
or
dec
fstpl
or
or
cmp
pop
push
push
adc
lahf
xchg
hlt
dec
sbb
dec
xor
xor
gs
and
xchg
cs
jmp
outsl
and
xor
mov
fwait
or
iret
jnp
push
fistpll
into
xorl
or
jne
mov
lret
xor
stc
or
adc
add
lret
mov
test
inc
mov
jle
pop
push
push
into
mov
imul
lods
cmp
into
dec
xor
cmpsb
sub
push
insl
xor
xchg
fbstp
ds
test
and
cmp
or
xchg
dec
fisubs
fistpll
dec
rol
mov
loope
mov
inc
cmp
jg
aaa
ror
xchg
xor
push
insb
xchg
cmp
imul
cmp
mov
jmp
dec
dec
adc
adc
filds
ss
mov
or
in
mov
add
xor
scas
imul
loopne
mov
cmp
fisttps
cmp
add
pop
dec
jge
loopne
mov
and
mov
js
ds
mov
lods
mov
mov
pushf
cmp
mov
bound
pop
jmp
lcall
aaa
scas
fwait
push
xchg
subl
dec
jge
push
inc
or
stos
shll
mov
pop
mov
shrb
jp
outsl
mov
scas
aam
cmp
dec
sti
int3
xlat
dec
into
std
sar
daa
adc
xor
ss
test
or
add
insl
rcrb
in
sbb
mov
inc
leave
sbb
cmp
std
fisttps
jne
inc
xor
dec
mov
push
popf
mov
jl
aad
mov
mov
mov
cwtl
shll
xor
insl
ja
popf
loope
jg
push
stc
jb
sarl
lods
in
lret
push
aas
into
out
pop
mov
fisubs
xchg
jne
pop
mov
mov
imul
clc
cmp
push
out
or
push
mov
sbb
pop
xchg
adc
rorb
mov
jae
jp
aad
add
rcrl
lds
lahf
scas
adc
test
into
xor
cmp
rol
popa
aad
shlb
xor
mov
bound
or
in
mov
ds
xor
mov
pop
lds
sbb
and
push
and
xchg
mulb
cmp
ds
push
mov
xchg
jmp
adc
test
jge
insl
add
das
pop
outsl
repnz
push
mov
mov
inc
inc
and
mov
imul
out
mov
aaa
fdiv
dec
das
adc
adc
lea
ror
inc
lcall
or
mov
outsl
sbb
pop
inc
cmp
dec
pop
cmp
adc
das
cmp
jb
ss
jmp
in
mov
imul
call
imul
xchg
std
jns
test
jno
jno
movsb
ja
inc
incb
sub
sbb
sbb
jp
adcl
rcrb
aam
popa
pop
mov
sti
and
add
stos
fs
into
jl
jns
push
xor
mov
mov
icebp
insb
stc
add
or
popf
inc
push
xchg
outsb
mov
rol
call
ja
mov
jne
jle
mov
icebp
test
shr
arpl
jne
mov
push
js
sbb
les
or
inc
mov
ror
push
imul
bound
cmp
jno
pop
insl
jl
jle
add
and
hlt
popf
cs
cmpl
das
cltd
push
pop
push
push
in
xchg
fcmovnu
xchg
imul
rclb
pop
dec
jnp
xor
mov
jae
sbbl
inc
xor
imul
mov
jge
dec
pop
lahf
xor
int
adc
jg
xchg
shll
dec
dec
and
xor
outsl
out
sub
orl
mov
and
pop
sub
push
call
sbb
sub
mov
negl
rcll
outsb
inc
adcl
add
jp
int
fdivrl
sub
lahf
push
sub
add
rcll
mov
adc
mov
xchg
sbb
sub
leave
jl
int
sub
int
test
sets
sub
jo
les
shll
fs
mov
jne
mov
sarl
and
repz
fisttpll
fildll
jno
sub
push
xchg
and
mov
repnz
push
lods
mov
insl
fcmovnbe
mov
jno
pop
aam
jecxz
push
rcrb
mov
inc
push
roll
les
sbbl
cld
andl
pop
jo
xor
nop
dec
jns
mov
in
jo
cmp
inc
jge
push
ja
gs
popf
pop
xor
and
xor
in
jno
shrl
out
jge
jecxz
cld
xchg
cmp
in
push
leave
inc
pop
insl
out
sub
loopne
dec
add
cmp
test
lds
cmp
xchg
mov
mov
sbb
xor
mov
lea
sub
cmpsb
in
pusha
hlt
add
adc
in
or
xor
sub
pushf
scas
cmp
pop
xorl
push
mull
push
mov
push
stc
aaa
cmp
dec
int
and
pop
mov
movsb
lea
stos
sbb
or
repz
adc
and
jecxz
aam
mov
cmp
int
dec
push
cmc
mov
xor
mov
jnp
in
or
dec
cmc
out
push
push
test
test
sbb
in
fidivrl
stc
clc
dec
push
cmp
mov
mov
sub
mov
js
jl
int
push
mov
sub
push
je
ds
ret
add
pop
lret
sahf
adc
cmp
divps
cmp
call
jmp
and
mov
test
rolb
out
jp
dec
imul
movsl
iret
sti
enter
jg
adc
push
iret
xor
cmpsb
mov
mov
adc
push
cli
dec
jae
dec
ja
xchg
push
xchg
orl
add
cmp
jbe
cmp
inc
mov
sbb
push
xchg
inc
aam
push
or
in
mov
test
icebp
movsl
xchg
pop
lods
push
dec
mov
out
xor
int
lods
mov
dec
popf
int3
push
mov
popf
cltd
cltd
scas
cmp
test
mov
dec
pop
or
mov
cmp
sub
push
sahf
imull
imul
mov
sbb
jge
jne
ss
imul
sbb
cmp
sbb
jmp
pop
pop
shll
pop
jno
outsl
cmp
lods
cmp
pop
cmp
fnstenv
gs
sbb
inc
xchg
xor
sbb
jnp
cmp
popa
sbb
xor
cmp
sbb
or
sbb
or
mov
imul
icebp
lret
bound
cmp
sbb
lahf
xchg
sbb
sbb
push
lods
cmp
mov
sub
dec
sbb
imul
jecxz
ljmp
cmp
clc
jne
or
scas
test
jb
int
inc
mov
into
mov
sub
pop
pop
in
xor
pop
or
xor
push
pop
dec
popa
sbb
pop
push
dec
pusha
sbb
sbb
sub
ljmp
add
jnp
push
dec
push
sbb
sbb
push
push
dec
pop
sbb
push
dec
pop
sbb
push
push
dec
push
sbb
push
push
dec
push
sbb
push
push
lds
shlb
xor
cmp
lods
push
push
pop
insl
push
inc
sub
jno
sbb
push
push
subl
outsb
sbb
sub
sbb
sub
sbb
mov
sbb
mov
mov
stos
loop
jmp
insb
or
pusha
jae
sbb
or
scas
xchg
push
cltd
xchg
int
and
pop
xor
jno
or
aad
cmp
jl
mov
loope
mov
lret
sub
inc
mov
xor
inc
xor
lea
mov
push
leavew
inc
insb
mov
inc
insb
test
sub
mov
data16
cmp
dec
out
lods
shlb
in
inc
daa
xor
daa
xor
daa
xor
dec
hlt
cmpsl
xchg
jns
fstl
jnp
jns
leave
adc
jg
jae
test
dec
jae
sub
data16
lods
jno
or
bound
data16
jne
cmpl
sub
mov
xchg
inc
mov
ja
pop
push
popa
inc
js
test
je
lods
outsb
je
xchg
ljmp
mov
fmulp
insl
movsl
xor
and
cltd
stos
push
orl
push
or
stos
jb
pusha
pop
sub
inc
mov
mov
add
cwtl
xor
mov
fnsave
imul
cmc
lock
shrl
loop
negb
cmp
xorl
outsl
xor
jmp
repnz
jl
dec
addb
pop
jno
vaddpd
sbbl
inc
pop
cmp
repnz
xorl
mov
cmc
int3
or
repz
fs
xchg
xor
lods
lock
xor
or
call
iret
or
mov
pop
mov
mov
movb
dec
sbbl
mov
imul
bound
xor
xchg
je
add
cmp
pop
push
sbb
sbb
jp
lods
test
dec
lea
lret
jnp
jo
mov
xchg
scas
jb
cmp
repnz
mov
rcrl
adc
push
mov
xchg
pop
mov
aaa
dec
pop
adc
xor
es
mov
int
dec
es
mov
jae
pand
jb
and
mov
push
or
inc
call
mov
cmp
dec
inc
mov
jp
leave
clc
bound
movsb
cmp
adc
icebp
popa
sbb
jecxz
cmp
jns
inc
mov
cmpsl
xorl
push
iret
fnstsw
jl
in
leave
ret
sub
stos
pop
lods
dec
stos
or
dec
nop
jmp
pop
cltd
dec
pop
push
mov
cli
push
mov
mov
jo
push
js
push
adc
je
repnz
icebp
mov
push
xchg
push
adc
cwtl
push
es
aas
jbe
xor
stc
in
cmpsb
mov
pop
arpl
sub
jg
fimuls
popl
loop
orl
add
mov
and
aam
sahf
mov
fidivl
xor
fcoms
nop
jg
insb
pop
jg
outsb
jg
push
movsl
mov
neg
pop
cmp
insl
cmp
cmp
jmp
sbb
mov
sbb
ss
je
and
xor
fcoms
shlb
sbb
inc
out
dec
fcoms
adc
jl
dec
lock
popa
lds
out
sbb
loopne
std
inc
imul
scas
arpl
cmp
mov
data16
std
ret
and
sti
fdiv
mulb
and
ss
cwtl
xchg
stos
push
sbb
inc
jo
sahf
int3
addr16
adc
mov
add
imul
out
loopne
pop
add
xor
mov
cmp
inc
repz
cmpsb
or
mov
cmpsl
push
mov
or
mov
xor
test
sub
inc
rorb
pop
test
dec
mov
xchg
je
xchg
out
add
ret
sub
mov
popf
add
imul
adc
and
lret
sbb
adc
xchg
js
jge
cli
iret
mov
loopne
aad
leave
cmp
test
iret
mov
xor
add
xchg
mov
xchg
jno
popa
arpl
sub
add
ret
stc
arpl
out
arpl
scas
or
insb
loope
jae
add
push
popa
jae
leave
mov
jno
pop
cmp
and
jg
arpl
sub
xor
lds
enter
mov
imul
cmp
push
test
int
call
or
mov
inc
or
les
scas
repz
inc
setne
popa
adc
ja
das
cmp
inc
xchg
push
cmp
mov
sub
cmp
push
ror
push
jno
jbe
push
cmp
mov
and
push
hlt
lcall
jne
cltd
ror
cmp
jnp
shll
dec
adc
adc
movsb
rclb
add
mov
mov
add
jecxz
mov
inc
test
shrb
dec
shrb
xor
push
stc
xor
sahf
push
or
pushf
sub
shrb
leave
xorl
jb
push
ret
leave
sahf
cmp
sarb
ds
and
pop
pop
mov
dec
test
xor
cmp
lret
pop
lods
push
aam
ret
mov
xchg
cmp
stos
and
mov
push
xchg
lea
sub
pop
mov
dec
dec
jmp
push
or
pop
jmp
mull
cmpsl
adc
xor
aam
mov
mov
imul
cmp
cmp
dec
test
insb
lahf
lds
adc
xor
adc
cmp
mov
mov
jae
or
adc
lods
roll
repz
int
popf
lds
cmpsl
loopne
aas
int3
adc
negl
push
pop
pusha
xor
mov
sub
xchg
pop
cwtl
inc
jbe
lds
scas
sbb
mov
sbb
jl
mov
inc
push
in
cmp
push
sbb
push
es
daa
maxps
push
jle
push
jmp
mov
xor
pop
mov
push
cmp
jge
aaa
xor
les
aaa
testb
call
fsubrp
xor
pushf
repz
insl
xchg
aaa
sbb
xor
pop
call
inc
popf
dec
repz
sbb
movsb
pop
in
jns
icebp
inc
push
lea
jmp
dec
jnp
xchg
add
stos
out
pop
mov
pop
xchg
inc
fwait
call
xor
jl
scas
mov
jno
test
imul
xchg
jl
push
pusha
dec
ja
dec
test
push
jb
or
aad
das
push
inc
popa
cli
and
xor
es
adc
cmp
test
jmp
cmc
movsb
lcall
mov
jb
roll
inc
push
loope
fbld
popf
outsb
adc
mov
mov
dec
mov
je
call
stc
cmpsb
movsl
icebp
inc
test
cltd
pop
bound
fst
pop
xor
in
xor
scas
in
hlt
scas
jne
xor
pop
das
jge
lods
test
add
fnsave
stos
pop
xor
push
mov
imul
test
clc
ja
out
psllq
mov
dec
lds
mov
mov
or
push
into
sub
pusha
sarb
in
cmp
xor
das
mov
aad
or
inc
or
sarb
imul
test
mov
xchg
xor
sbb
jg
pop
orb
or
js
dec
fdivrs
insl
push
js
nop
test
sbbl
popa
insl
int3
in
std
subb
mov
dec
mov
test
outsl
cmpsb
clc
js
mov
and
jmp
push
fnstenv
imul
push
cmp
clc
movsb
inc
lret
test
int3
jecxz
mov
xchg
out
movsl
inc
mov
cmp
xor
dec
ss
mull
pop
pop
add
lods
adc
xchg
std
adc
addr16
pop
or
ds
xor
popf
or
pop
mov
shr
jl
inc
or
popa
mov
test
sbb
incl
pop
xor
sbb
ljmp
jmp
jbe
jbe
or
loopne
aaa
aam
or
shrl
cmp
pusha
sbb
or
out
insb
cmp
call
mov
dec
ja
or
jl
movb
ss
adc
pop
mov
cwtl
inc
popa
pop
mov
xchg
or
pop
xchg
dec
sbb
cltd
subb
aaa
rolw
lea
pop
lods
xor
adc
mov
popa
icebp
mov
pop
push
xchg
imul
mov
ret
icebp
or
shrb
loopne
xor
xor
lret
outsl
mov
ret
push
pushf
notb
and
je
mov
jp
push
and
cltd
pop
fidivrl
imul
subb
out
dec
les
or
xchg
test
pop
jnp
cmp
adc
inc
rolb
jl
fsts
sub
push
lds
mov
je
sub
jbe
ljmp
pop
dec
cmp
cmc
jae
jmp
cltd
inc
mov
mov
movsb
pop
adc
loope
xor
ja
dec
mov
sbb
push
inc
jle
rcll
clc
mov
addr16
mov
push
pop
test
inc
pop
stc
clc
dec
aas
or
mov
je
ficoms
pop
or
in
push
out
cli
mov
aam
call
je
int
cmp
mov
dec
sbb
fsubrp
push
inc
and
in
fdivrs
cmpsb
pop
lea
xchg
adc
xchg
orb
inc
mov
negl
push
mov
push
repnz
cmpsl
push
mov
div
int
adc
repnz
js
jae
cltd
out
mov
cmpsl
js
stc
cmp
and
xchg
jno
push
js
push
adcl
and
mov
pop
adc
mov
cli
scas
mov
idivb
add
test
push
inc
jbe
xor
xchg
sarb
int3
or
xor
pop
les
enter
adc
std
pop
in
add
int
test
inc
adc
sub
push
adc
lods
mov
xchg
popf
cmpsl
movsl
pusha
insb
or
jnp
loopne
fwait
push
or
jo
inc
push
jo
movsl
inc
inc
mov
mov
inc
sbb
fistl
jns
cltd
fcompl
mov
inc
js
jne
stos
or
or
push
adc
in
insb
xchg
cmp
cmp
leave
and
cmp
add
lods
and
jnp
sbb
push
add
stos
push
jnp
ficomps
popf
mov
xchg
dec
sub
hlt
data16
or
sub
ds
cwtl
pusha
jg
mov
iret
fs
push
adc
jnp
cmp
mov
nop
adc
lds
int
dec
adc
test
roll
popf
in
xlat
mov
cltd
out
fsts
mov
xchg
jl
hlt
sbb
je
mov
and
inc
insb
call
xor
push
inc
mov
mov
xor
dec
popf
cmp
add
cmp
pop
in
and
pop
push
loop
cltd
ret
xchg
mov
pop
cli
or
mov
inc
xchg
xchg
jbe
or
push
in
mov
lea
adc
mov
je
adc
jge
movsl
mov
orb
jecxz
pusha
orl
and
outsb
movsl
cmp
pop
or
push
not
imul
or
ds
repz
gs
out
cmp
mov
xchg
jp
fs
fs
jae
sbb
into
sti
lods
leave
test
dec
jecxz
cmpsl
sub
sti
call
js
push
mov
cmp
call
movsl
cmp
das
xlat
xor
cwtl
adc
adc
es
mov
push
inc
bound
pusha
dec
jb
stc
in
movsl
out
mov
sub
xchg
jge
xchg
pusha
sbb
jne
test
push
setno
jnp
call
push
lds
cmpsb
mov
xor
int
test
jns
lods
js
pop
inc
sub
sub
outsl
inc
pop
dec
mov
imul
lea
dec
sub
inc
xchg
or
jle
mov
and
test
subl
lock
imul
and
jno
or
and
idivl
inc
mov
shl
cmp
test
ss
in
adc
add
arpl
mov
cmp
pop
cs
mov
call
push
int
scas
add
mov
pop
mov
push
sbb
fnsetpm(287
dec
cmp
and
fcmove
jno
mov
ss
cmpsb
xchg
ret
fsubr
xchg
ficoml
jp
and
and
scas
dec
pop
dec
dec
jp
pop
jmp
ficoms
sbb
call
inc
push
dec
lret
scas
movsb
rorb
mov
stc
mov
and
xor
mov
fcmovu
mov
loope
cmp
mov
fisubl
dec
jmp
lretw
inc
ja
dec
cli
add
or
fnstcw
mov
rcr
outsb
ja
jl
push
mov
test
loope
push
sub
insb
or
pop
loopne
mov
sarb
lods
dec
jl
stos
xor
and
icebp
sbb
mov
sbb
jbe
mov
push
lods
loopne
jno
mov
mov
sbb
jge
cmp
addr16
sbb
xorl
cmp
xor
xchg
xchg
sub
and
push
xor
pop
fidivrl
dec
sbb
adc
lods
in
sub
mov
or
xchg
sbb
popf
dec
arpl
pop
mov
loope
cmp
aam
jle
sub
arpl
add
inc
lds
mov
lds
fcmovbe
jo
popa
jne
lods
mov
xor
fucomip
lret
mov
xlat
fidivs
lds
mov
insb
cmp
fiadds
pop
xchg
popa
lock
and
inc
mov
pop
push
sbb
stc
leave
ja
call
mov
push
pop
and
test
or
dec
mov
repnz
mov
enter
xchg
adc
cmp
dec
mov
adc
loope
cmpl
dec
shlb
pop
std
and
sbb
push
sbb
sbb
insl
and
adc
jae
sbb
sbb
loopne
sub
jg
lahf
jo
daa
sbb
imul
cmp
cmp
mov
hlt
add
inc
loop
jns
adc
loopne
subl
fldl2e
addr16
aaa
aad
daa
fbstp
leave
scas
rcrl
jae
inc
aad
call
test
aad
frstor
fcomps
arpl
adc
adc
mov
jmp
ret
or
xor
pop
arpl
clc
sbb
adc
jns
dec
psrlq
push
cmp
test
or
iret
subl
cltd
push
or
fwait
mov
pop
inc
pop
inc
mov
sbb
pop
fsqrt
push
std
pop
inc
cs
addr16
add
imul
testl
jo
mov
sub
mov
dec
hlt
jnp
rcl
loop
jg
adc
jne
imul
stos
jne
jnp
mov
inc
cmp
mov
ret
scas
or
lcall
or
gs
fcmovnb
jae
stc
pop
mov
cmp
cli
push
stos
dec
push
repz
dec
pop
jl
bound
stos
mov
xchg
insb
add
iret
push
call
dec
jno
add
lds
call
insl
sbb
aad
jbe
pop
or
or
cs
push
loop
in
test
and
int3
pop
xchg
jne
sbb
adc
test
mov
mov
jp
jns
leave
jno
inc
cmp
cs
lcall
cmp
imul
adcb
cs
or
arpl
dec
xchg
adc
xor
cmp
mov
push
fisubs
inc
sub
mov
add
daa
cltd
push
mov
add
sub
and
mov
fxch
pop
adc
push
hlt
mov
and
adc
cmp
xor
lods
mov
add
xor
sbb
stos
ror
pop
dec
ret
jne
pop
fisttps
cmp
and
je
shll
xchg
pop
frstor
jl
cmp
stc
std
rcr
sub
repz
push
and
or
pop
push
lods
int
pop
cmp
push
imul
into
mov
sbb
inc
mov
push
insl
mov
incl
pusha
popf
dec
int3
jne
adc
lahf
notl
ret
jae
inc
repnz
xchg
adc
jae
outsl
out
loopne
std
shr
mov
stos
pop
jle
fistpll
sbb
cld
aam
les
mov
cmp
imul
decb
inc
nop
jge
jge
push
mov
dec
les
cmp
pop
imul
sub
mov
mov
dec
pop
test
pop
inc
sti
push
push
pop
test
insl
jno
lock
xor
ret
imul
fsubrl
movsl
imul
jl
lret
sub
adc
adcb
jns
std
sbb
cmp
inc
in
je
jmp
cmp
cld
sarb
inc
jmp
clc
jnp
jb
dec
mov
enter
addr16
imul
mov
out
dec
stc
or
imul
jge
mov
cmp
pop
push
icebp
mov
icebp
xchg
cld
pop
ret
jp
addr16
push
test
fists
jne
imul
xchg
cmp
mov
push
pop
arpl
add
lock
cmp
ljmp
jno
push
cmpb
loop
jne
jns
mov
add
cmp
das
adcb
and
push
xor
sbb
add
xchg
pop
int3
lods
sbb
lods
xorl
bound
mov
jns
pop
ss
mov
scas
push
ja
int
addl
xchg
mov
repz
cmp
lods
and
xor
adc
imul
in
ljmp
test
xchg
in
jmp
data16
pop
xor
cmp
xchg
mov
add
add
js
jb
add
in
cmp
dec
out
sbb
jbe
jno
jnp
icebp
ret
roll
cmpsb
ret
rcrb
mov
xchg
fmuls
popf
mov
xor
mov
cmpsb
jnp
add
xor
pushf
orb
push
mov
dec
jns
xchg
negb
aas
jnp
cmp
shll
mov
adc
aas
sbb
pop
rorb
sub
scas
dec
mov
mov
call
jmp
xchg
outsl
subb
test
nop
or
adc
xchg
xchg
jp
or
mov
pop
aad
repnz
adc
mov
mov
sub
leave
and
sbb
jp
sub
js
mov
sbb
pop
leave
rol
mov
inc
or
cwtl
pop
jbe
dec
aam
leave
mov
test
mov
adc
rcl
ret
mov
scas
sub
nop
push
imul
inc
push
repz
jge
test
dec
inc
add
fsubs
es
pop
cmp
les
cmp
sti
in
push
aad
add
dec
sbb
ss
and
jns
mov
or
sbb
mov
mov
xchg
insl
jp
subl
movsl
fstl
push
or
add
repnz
add
mov
adc
dec
push
cld
addps
mov
es
jns
mov
inc
fdivrs
adc
je
test
xchg
ja
pop
ss
dec
push
test
hlt
hlt
into
xor
inc
dec
dec
mov
sbb
cmp
push
fists
mov
mov
lret
jmp
jge
jmp
cmp
mov
sub
xor
or
cmp
jne
jbe
insl
inc
sub
dec
shlb
xchg
add
lahf
jne
sbb
push
adcl
arpl
mov
int3
push
cmpl
jne
xchg
jle
movsl
cltd
pop
push
cmp
pop
dec
aas
jp
adc
or
cmp
cltd
mov
mov
mov
mov
mov
dec
je
lahf
popf
insl
test
nop
adc
sbb
mov
testb
sti
mov
lea
jge
movsl
fisttps
xchg
cld
pop
ret
sbb
xchg
fisubl
ret
jmp
jp
mov
js
pop
mov
insb
cmp
fucomi
xor
dec
cmp
add
mov
dec
inc
mov
inc
adc
sub
out
cmpsl
rclb
iret
push
fistps
clc
jno
pop
adc
enter
movsb
into
cmp
dec
js
cli
mov
mov
and
repnz
mov
orl
mov
test
jecxz
test
hlt
pop
mov
mov
mov
test
or
ret
int
dec
insl
pop
sbb
jge
outsl
popa
jnp
clc
stc
aas
sarl
jnp
lret
push
call
imul
lods
mov
push
jl
stc
xor
xor
sbb
jne
xor
ja
push
test
cmpsl
add
add
sub
push
fidivs
xchg
push
and
scas
cli
int
dec
cmp
into
mov
dec
loop
test
pop
push
out
inc
lea
xor
test
xor
pop
loopne
idiv
leave
test
sub
test
popf
lock
pop
and
mov
testl
cmp
shll
gs
jo
adc
mov
push
jmp
movsl
push
stc
lea
sub
jo
dec
adc
jb
xorb
jno
adc
mov
jl
jmp
cli
mov
mov
insb
mov
out
pop
insb
cmpsb
popa
inc
sub
mov
jecxz
data16
push
jne
push
ja
jle
cmp
inc
or
add
jns
jl
stc
cs
or
addr16
mov
push
adc
and
pop
jmp
out
test
pop
in
and
inc
test
add
ret
arpl
lcall
and
or
inc
jl
pop
das
jnp
insl
rcll
mov
jg
imul
leave
dec
mov
shl
pop
adcb
xor
mov
movsb
sbb
and
push
out
and
ret
arpl
xchg
or
inc
out
mov
pop
mov
sbb
out
mov
jge
addr16
or
cmc
inc
mov
adc
or
pop
jp
mov
insb
jg
ficoms
mov
repz
mov
inc
cld
pop
pop
inc
push
push
lea
test
lods
addl
adc
fidivrs
mov
nop
jp
pop
mov
cmpsb
push
pop
arpl
imul
in
mov
push
cmpsl
sbb
js
cmpsl
push
jae
addr16
dec
lret
fildl
mov
xor
adc
add
out
arpl
ja
sahf
sbb
and
int
pop
xlat
adc
mov
imul
lcall
xor
test
out
pop
sbbl
push
mov
sbb
push
adc
mov
or
jp
adc
dec
or
pop
mov
into
cmp
push
clc
aas
popf
adc
sti
in
inc
ret
push
fwait
in
pop
outsl
lds
xchg
cmc
jno
movl
test
cmp
movsl
outsl
xchg
insb
icebp
mov
ss
mov
sbb
sbb
hlt
mov
fucomp
xchg
mov
jp
sub
and
ret
test
int
leave
enter
jb
dec
inc
popf
jg
repnz
adcb
andb
pop
cmp
incb
inc
and
scas
scas
pop
inc
pop
negb
lds
stos
xchg
mov
cmp
mov
sbb
sbb
leave
jb
cs
aad
cwtl
repnz
push
mov
mov
int
push
pop
clc
xchg
jp,pn
iret
imul
ja
jbe
nop
mov
adc
push
dec
cmp
cmp
mov
adc
xchg
push
lds
dec
adc
je
dec
ja
mov
xor
imul
sarb
mov
mov
idivl
sbbl
in
rorb
pop
mov
lds
dec
jl
cmc
pushf
movsl
mov
cmc
mov
pop
adc
inc
in
jns
sub
dec
or
int3
push
loopne
inc
repnz
push
or
outsl
jns
jae
ds
cmc
rclw
lods
or
int
inc
cmpl
call
fwait
jl
lods
popa
nop
jnp
push
out
mov
push
sbb
xor
cmp
loop
xchg
aas
stc
negb
pushf
ja
loope
mov
scas
add
add
into
data16
ljmp
lret
mov
jle
stos
xchg
bound
aaa
jnp
lods
sub
imul
add
mov
popa
mov
cmp
mov
int
in
out
xchg
pop
push
pushf
cli
push
lea
fnstsw
adcb
aas
das
dec
push
inc
pop
xchg
dec
sti
adc
js
mov
int
cs
cmp
mov
repz
cmp
mov
daa
sbb
cmpsl
sbb
test
or
andb
rep
xchg
mov
or
xchg
mov
cmp
pop
mov
test
or
mov
out
and
pop
adc
xor
push
push
or
cmp
sub
lods
leave
jp
pop
xor
push
pop
pusha
sbb
pop
mov
addr16
dec
sbb
pop
sub
mov
jae
xor
sbb
test
cmp
pop
out
sub
sbb
aas
cmp
arpl
mov
lahf
inc
push
push
mov
in
shll
sbb
pop
lods
sbb
jno
inc
bound
es
fwait
outsl
out
mov
add
mov
aas
cmp
or
gs
pop
out
mov
xor
mov
mov
ja
mov
cmc
je
sub
xor
add
mov
cmpsl
fcmovnbe
je
hlt
test
fsubs
aaa
dec
sbb
pop
cmp
outsl
cmp
mov
xlat
xchg
leave
xor
ja
movsl
push
fimuls
push
dec
dec
adc
pop
sub
cmpsb
mov
adc
pop
lret
jl
mov
sub
movsb
pop
add
aam
subl
and
iret
outsl
imul
xor
subl
test
inc
lds
cli
das
sbb
pusha
push
cmp
push
and
arpl
das
jl
cmp
ss
mov
scas
movsb
xor
push
test
jno
sar
out
pop
push
loop
inc
pop
hlt
movsb
adc
jne
stos
divb
jns
mov
pop
repz
jge
adc
or
popa
in
sub
mov
jns
orl
pop
imul
jge
cmp
adc
rcrl
out
sub
out
push
cmc
hlt
cmpsl
mov
xor
jg
lea
stos
stc
push
xor
aad
test
les
xchg
fbstp
hlt
mov
cmpsb
mov
fistl
xchg
inc
mov
popa
inc
rorl
leave
dec
icebp
pop
dec
daa
sti
scas
int3
movsl
test
shll
cld
je
and
inc
inc
int
scas
mov
inc
jp
aam
and
xchg
xchg
mov
sub
imul
mov
pop
imul
push
mov
dec
imul
cmc
push
incb
repz
into
jg
sti
push
dec
jl
out
mov
push
xchg
add
and
inc
paddb
and
add
jp
movsl
mov
aam
imull
rcrl
ss
pop
push
adcb
xchg
adc
mov
xor
dec
sbb
cmp
ss
inc
sbb
inc
inc
fistl
popa
inc
je
sub
cmpl
andl
push
push
shlb
notb
in
add
cli
mov
mov
imul
xorl
mov
xchg
push
adc
scas
popa
and
xchg
or
jge
int3
xchg
out
xor
cmp
push
and
lods
jl
mov
mov
add
jb
rcrl
xlat
enter
mov
pop
xchg
movsl
sub
jp
aas
xchg
jl
sub
jmp
cs
mov
jl
xor
jge
mov
fisubs
sbb
lods
test
sub
jae
and
push
jno
sub
fidivrl
bound
xor
imul
jb
nop
adc
jo
addr16
dec
into
xor
movaps
mov
dec
push
popa
adc
pop
inc
pusha
jge
dec
jns
jmp
mov
movsl
out
dec
imul
cmc
fs
stos
xor
hlt
dec
outsb
mov
dec
pop
fcmovu
push
test
iret
xor
jmp
adc
fs
inc
test
into
xor
repnz
ret
cmp
mov
cmp
stc
cmp
je
stos
jbe
imul
fisttps
sbb
lret
lea
mov
nop
sub
inc
call
add
arpl
jne
pop
out
cmp
bound
lea
movsb
inc
insl
sahf
sbb
popa
movsl
cmpsb
lea
ljmp
mov
pop
cmp
cmp
mov
sub
aaa
test
stos
mov
inc
mov
cmpb
into
dec
sbbl
hlt
imul
sbb
add
push
ja
mov
cmc
jno
test
scas
call
adc
fbld
out
je
pushw
hlt
iret
push
mov
test
add
aas
sbbb
jge
int
mov
or
dec
jecxz
lcall
jl
push
movsb
mov
cmp
repz
pushl
cmp
jl
ss
mov
pop
inc
and
test
cmp
push
adcl
in
jns
cmpsl
or
inc
popf
jae
inc
jp
mov
mov
cmpsb
mov
push
sbbl
aas
jmp
xchg
cmp
mov
push
out
loopne
xor
cs
in
dec
fldenv
pop
xor
mov
call
jo
test
mov
adc
jns
imul
xor
dec
scas
mov
cs
jne
aam
ds
repnz
xchg
stos
pop
adc
and
aam
dec
loopne
aad
xlat
jns
adc
lcall
mov
cmp
mov
pop
lods
jle
lods
sahf
mov
mov
repz
repnz
cmp
aas
inc
addr16
and
pop
dec
bound
std
inc
shrl
fs
addr16
xchg
and
imul
pusha
jnp
jb
data16
sahf
ret
scas
lods
icebp
or
jp
mov
or
pop
or
jecxz
repnz
pop
jg
xchg
subl
xor
rorb
jb
push
and
push
mov
ja
push
das
and
lret
shll
cmpsl
cltd
mov
int
in
ror
scas
movsb
pop
sbb
hlt
sbb
loopne
lods
mov
fsubrs
scas
xor
fistpll
incl
and
inc
pop
pop
jnp
out
dec
add
add
sub
scas
jg
pop
iret
cmp
dec
mov
mov
repnz
mov
imul
sub
orb
out
fdivp
push
clc
jmp
imul
daa
mov
add
mov
shlb
std
test
xor
dec
mov
mov
mov
flds
aaa
add
xor
popf
pop
into
sbbb
shll
gs
je
xchg
stos
or
stos
jle
inc
into
pop
lret
stos
push
es
mov
imul
inc
iret
jp
mov
iret
bound
mov
xchg
jb
and
dec
xor
repz
mov
cmpb
or
scas
jl
aad
ds
std
pop
pusha
inc
sbb
mov
mov
adc
mov
mov
pop
pop
loop
cmp
cmp
push
repnz
stc
dec
clc
fisubl
xorb
enter
loope
xor
stos
pop
lods
mov
mov
push
xchg
dec
or
sbbb
popf
cmp
jl
jnp
ss
test
push
push
or
push
inc
mov
insb
inc
sbb
dec
lcall
imul
inc
ds
add
inc
mov
ret
ljmp
push
jo
sbb
add
fisttpll
inc
push
sub
jno
stos
mov
cli
cmc
mov
sub
xor
ds
insl
xchg
pop
repnz
aaa
xor
call
daa
mov
frstor
jbe
pop
rcll
push
repz
and
jae
imul
lods
test
jb
xor
pop
push
and
xchg
ficompl
sbb
dec
and
or
xor
mov
sub
inc
out
push
cmp
inc
je
int
das
or
push
shlb
iret
xor
xor
insl
mov
hlt
gs
repnz
mov
pop
inc
push
adc
mov
mov
push
sti
scas
pushf
ss
mov
fbstp
outsl
into
pop
cwtl
popf
mov
mov
adc
arpl
pop
adc
jbe
cmp
int
insl
cltd
push
mov
sbb
lret
cli
xor
pusha
dec
mov
aad
pop
lds
cmp
inc
mov
or
sub
jnp
or
or
testb
pop
lcall
into
mov
push
mov
mov
mov
arpl
addr16
bound
arpl
leave
decb
popf
lock
sbbb
pop
and
jnp
xchg
lret
fldcw
cmp
popa
mov
daa
arpl
jno
mov
jmp
in
mov
rcrl
lods
mov
xor
push
fsts
nop
ljmp
je
or
stc
adc
repz
cmp
nop
dec
cli
cmpsl
push
or
clc
into
stos
sbb
cs
ja
ja
iret
jno
incb
and
imul
or
add
sub
xlat
pop
pop
pop
js
lds
mov
in
add
cmpsl
inc
cmc
lods
repz
mov
sar
rclb
hlt
pop
test
push
popf
aad
pop
mov
and
fimull
testb
sbb
movsb
movsl
insl
fs
in
jbe
imul
iret
fcomi
jne
popf
add
roll
dec
jp
mov
adcb
gs
cmp
cli
outsb
gs
fidivl
dec
and
cmpsl
sbb
mov
jg
cmp
xor
movsl
lods
jle
arpl
and
dec
clc
lds
dec
push
neg
sbb
jns
pusha
cmpsl
mov
cmp
js
xor
dec
cmp
push
andnps
inc
or
aam
xorl
insl
xchg
add
inc
or
sahf
inc
dec
cmp
mov
lcall
je
pop
mov
idivl
jno
pop
lret
push
out
jl
mov
dec
sbb
or
xchg
ret
loop
sti
cmp
cmpl
movsl
pop
sahf
insb
sahf
call
mov
adc
in
orl
sbb
jno
popf
dec
sbb
or
jb
mov
lret
and
test
aam
dec
mov
jl
dec
xchg
adc
xor
pop
adc
xchg
imul
lea
push
dec
inc
mov
test
dec
cs
insb
outsb
pop
fs
dec
ja
stc
lret
rcr
jb
insl
dec
adc
bound
fcmovnu
pop
imul
xor
shlb
mov
inc
add
test
sbb
mov
xor
cmc
fs
sti
adc
push
in
mov
stos
nop
xor
call
aad
mov
aas
sahf
test
int3
sbb
leave
lock
or
in
xchg
inc
mov
push
das
xor
sbb
loopne
sub
sbb
xor
cmpsl
sbb
fadd
pop
add
dec
mov
cltd
xor
pop
test
mov
push
xchg
xchg
pushf
mov
jns
or
pop
pop
test
inc
leave
push
xchg
in
cmpb
test
pop
inc
adc
jg
out
mov
enter
scas
mov
mov
int3
and
div
dec
dec
push
popf
mov
sub
roll
jg
sbb
fwait
add
inc
push
orl
cmp
pop
out
add
stos
push
mov
aam
repnz
xchg
mov
inc
ret
pusha
and
popf
aaa
pop
mov
lock
jecxz
sbb
add
int
jmp
sbb
jge
dec
int3
popa
inc
dec
loop
inc
out
or
sub
mov
adc
imulb
dec
call
sub
mov
adc
stos
add
ss
dec
sbb
mov
cld
jnp
inc
mov
pusha
dec
stos
inc
dec
hlt
repnz
jl
sbb
jno
dec
imul
jne
cmp
mov
enter
lods
mov
mov
andl
lret
test
dec
scas
xchg
xor
mov
jne
or
cltd
popl
jle
pop
jne
in
or
sbb
mov
cmp
adc
push
mov
into
sbb
pop
test
jge
cmp
fisubl
mov
ret
mov
aam
pop
mov
test
mov
sbb
ret
adc
sbb
inc
loop
addr16
test
dec
or
addr16
popf
jno
mov
addr16
dec
icebp
xor
xor
xor
shlb
sub
inc
imul
jno
cmp
cmp
dec
sbb
dec
xchg
ds
out
mov
rcrl
pusha
inc
inc
jmp
jne
call
pop
test
mov
push
repz
int
mov
inc
push
outsb
cmp
notl
stos
push
lret
adc
les
jb
dec
popa
sub
fld
cltd
xor
mov
test
push
xchg
cltd
repnz
pop
push
push
enter
aaa
sbb
into
fldt
jecxz
popa
adc
cmpsb
dec
sbb
mov
es
cwtl
adc
adc
jbe
mov
dec
cmp
imul
or
shl
and
cmp
into
adc
xchg
stos
jg
dec
subl
sbb
in
jo
jle
cmp
cltd
mov
push
sahf
test
inc
jb
push
xor
mov
fidivrl
and
ss
out
sbb
jbe
jnp
pop
mov
lods
and
xchg
out
or
int
test
hlt
mov
lea
movsl
pop
mov
mov
xor
in
and
pop
adc
pop
std
pushf
add
in
popf
xor
scas
lea
int
jp
cmp
shll
ljmp
jno
mov
sub
mov
xchg
dec
add
adc
mov
and
shll
in
ljmp
mov
ss
dec
stc
je
inc
scas
loop
movsl
push
mov
xor
add
sahf
test
pop
movsb
jns
pop
dec
out
rcrl
out
fwait
aam
dec
mov
popf
xchg
and
pop
cs
movsl
pop
and
cmpsb
push
xor
pusha
inc
mov
lds
lock
adc
adc
sub
lea
cmp
cwtl
mov
sbb
sahf
stc
push
jae
fsubrs
sahf
sarb
xchg
dec
inc
outsb
mov
stos
jg
sbb
mov
adc
movsl
mov
add
andl
std
orl
mov
sub
mov
sub
sti
or
pop
popf
shlb
imul
and
popa
mov
outsb
mov
lret
dec
clc
les
repnz
aam
stos
pop
ja
sbb
jne
cmp
int3
dec
rorl
pop
jl
gs
mov
xchg
jg
dec
insl
xor
outsl
push
push
dec
and
sbb
ret
je
in
in
movsl
jns
pusha
xchg
mov
mov
scas
mov
dec
nop
mov
sbbb
mov
movsb
push
pop
xorb
sbb
jle
dec
add
cmpsb
sbb
subl
add
fnsave
bound
std
dec
cltd
jne
sbb
repnz
cli
cmp
add
imul
mov
and
aam
js
push
xor
cmp
push
test
test
jae
sbb
sbb
std
pusha
fsubrs
fcmovnbe
in
andl
lret
shlb
test
or
mov
xchg
mov
mov
sbb
pop
fistpll
adc
loopne
fcompl
or
add
sbb
jne
jbe
dec
test
jp
imul
cmpsl
cmp
gs
dec
lock
gs
inc
mov
aam
adc
add
xchg
cld
mov
jae
fs
jg
jle
pop
jne
push
cwtl
fistl
adc
fstpt
scas
mov
mov
cltd
mov
mov
xor
push
xor
mov
or
cmpsb
dec
push
orps
pushf
inc
adc
scas
movsl
xchg
das
insb
in
mov
mov
mov
xchg
mov
fildll
into
lret
les
mov
imul
mov
pop
pushf
mov
cmpsb
enter
addr16
push
cmp
sbb
fisubs
shl
xor
xor
cmp
jp
push
inc
bound
mov
mov
in
push
test
mov
cltd
dec
gs
sub
inc
fstpt
sahf
mov
lcall
fxch
lods
push
scas
clc
push
dec
mov
lahf
aad
mov
enter
mov
jg
rcrl
pop
mov
repz
enter
and
hlt
lods
mov
popf
jae
ss
shrb
and
lock
jp
lock
sub
popf
jnp
cmp
mov
jle
xchg
icebp
sahf
mov
pop
pop
test
xor
mov
popa
sub
loope
notb
loope
pop
mov
int3
repnz
repz
scas
ss
add
pop
dec
pop
pop
xor
mov
cli
mov
mov
lea
inc
adc
add
mov
add
clc
stos
xor
dec
xor
gs
jno
cmp
push
clc
lcall
push
mov
arpl
cld
insl
push
pop
jge
inc
out
mov
cmp
jns
jp
mov
jb
sahf
pop
sarl
sbb
lcall
dec
call
jbe
push
xchg
jno
mov
out
ja
mov
pop
cmp
inc
int3
subb
dec
xchg
cmc
mov
lcall
mov
fiaddl
ljmp
in
dec
test
add
enter
clc
daa
mov
xchg
test
loope
das
fisubrs
dec
pop
faddp
sbb
mov
adcb
pop
aas
outsl
int3
and
outsb
xor
jmp
imul
mov
aas
and
insl
mov
daa
xor
push
sbbl
int
das
ret
jb
cs
fs
xor
lea
mov
outsb
xor
dec
dec
sbb
mov
sub
leave
xlat
or
cmp
out
fwait
dec
lret
shlb
icebp
push
and
loop
shll
int3
cmp
lcall
jmp
enter
and
jp
lods
sbb
jle
lods
or
imul
cmp
pop
adc
lret
xor
xchg
mov
dec
dec
pop
scas
mov
xchg
mov
jnp
adcb
push
jl
dec
gs
scas
out
jo
popa
jo
pop
mov
stos
sti
push
bound
bound
sbb
lret
enter
roll
cmp
jle
mov
push
jbe
xchg
push
test
scas
mov
mov
jb
jl
inc
or
cld
insb
lds
or
pop
sbb
cmp
adc
lcall
test
lds
sub
loop
cmp
in
scas
jl
mov
idiv
lods
cwtl
xchg
adc
jmp
pop
mov
repnz
inc
imul
sub
stos
push
or
stos
add
jno
mov
ds
addr16
sub
mov
mov
sbb
adc
fbld
adc
in
orl
icebp
or
push
inc
cld
pop
repnz
cmp
add
jno
jg
push
pop
sti
cmp
cmp
sub
cmp
cmpsb
xor
push
xchg
sbbl
ja
insb
inc
mov
push
test
sbb
mov
adc
adc
cmpsl
insb
fs
mov
or
outsl
mov
cli
push
mov
mov
adc
mov
out
shrw
insw
jg
dec
shll
mov
xchg
dec
xor
xor
ja
sub
push
pop
jbe
iret
jne
sbbb
sbb
out
mov
add
mov
mov
aaa
xchg
sub
roll
mov
cmp
mov
inc
out
mov
int3
movsl
push
jae
push
lds
in
push
lods
cmp
loopne
lahf
cmp
pusha
inc
enter
ret
cmp
test
outsl
test
push
pop
adc
jnp
mov
out
mov
mov
imul
mov
pop
xor
mov
insb
jno
idivl
cmp
or
dec
in
pop
jno
rcrl
jb
decl
out
inc
mov
xor
mov
fnsave
add
xchg
je
cmp
loop
movsl
bound
test
stos
in
imul
mov
lods
sub
ja
add
int3
adc
clc
pop
daa
mov
push
insb
imul
pop
push
jne
push
or
sbb
and
mov
cmp
push
mov
jne
inc
pusha
push
push
sbb
jge
insb
subl
cmpsl
jge
repz
inc
adc
insb
mov
lea
js
add
popf
push
fdivl
movsl
cmp
jns
loop
push
cmp
cmp
dec
ss
es
dec
nop
cmp
xor
dec
sbb
or
pop
mov
lea
int
push
cmp
pop
pop
leave
rcll
mov
pop
hlt
dec
movb
or
mov
scas
dec
jne
jnp
mov
cmp
rcrb
mov
shlb
inc
call
dec
sub
and
mov
pop
int3
push
xchg
lea
into
adc
stos
ds
idivl
xor
jae
sub
sbb
cmc
fs
cmp
sub
pop
popf
hlt
les
sbbl
cmc
pop
sbb
or
stc
std
outsl
pop
mov
add
push
inc
mov
adc
pop
dec
push
jbe
mov
add
hlt
cs
in
into
test
nop
test
mov
push
dec
popf
mov
and
in
test
add
out
add
cli
loope
cmpsl
stc
inc
mov
in
mov
jb
or
push
arpl
xchg
in
repnz
popf
mov
jmp
add
pop
mov
xor
xor
inc
faddl
adc
jns
hlt
cmp
insl
xor
mull
push
mov
clc
and
in
pop
dec
jns
xorl
fidivl
sub
xor
pop
push
inc
mov
push
les
jns,pt
jnp
dec
inc
add
adc
rclb
negl
or
inc
rorb
call
rcll
rol
jne
lods
mov
cmpsl
jns
repz
std
jns
jne
or
xor
mov
mov
dec
pop
insl
jp
dec
mov
push
lcall
mov
icebp
or
stos
jno
push
dec
push
lods
pop
imul
mov
or
test
cwtl
xor
bswap
mov
arpl
jno
fstpt
mov
cmp
sti
fistps
stos
test
inc
ja
lock
push
push
mov
stos
es
push
cmp
mov
or
push
shll
jns
iret
jge
cli
xlat
fiadds
mov
pop
jbe
outsb
out
outsl
xor
addr16
adcl
pop
mov
push
xchg
and
repnz
inc
jno
jns
mov
sbb
or
and
cmp
and
std
dec
xor
sbb
xchg
outsl
adc
xchg
or
stc
enter
pop
addr16
fisttpl
mov
xlat
mov
mov
xor
cmp
daa
ret
cltd
mov
and
and
cmp
pop
aad
clc
test
mov
ja
int
and
lock
je
xor
lods
sub
push
and
mov
jne
loope
shlb
cmpsl
push
xlat
jno
pop
mov
mov
int3
cld
and
aad
ret
incb
mov
sbb
jns
lds
pop
popa
xchg
adc
aaa
dec
jp
inc
sarb
mov
adc
pop
push
adcb
or
jno
mov
push
xor
out
repz
pushf
sub
xchg
arpl
movsl
dec
stos
dec
fisubrl
int
idiv
popa
lods
xchg
pop
mov
push
stos
push
push
call
scas
popa
xchg
xor
xor
imul
popa
fstp
add
or
outsb
jno
ror
addr16
pop
push
imul
sbb
pop
mov
jne
das
push
call
roll
dec
cli
out
adc
repz
movsb
and
jp
repz
test
rcrl
dec
mov
mov
jno
lcall
sar
sbb
sbb
nop
iret
mov
sbb
xchg
shlb
dec
xor
push
leave
loope
pop
sbb
pop
mov
jb
lret
pop
sbb
sub
cmp
add
adc
test
mov
cmp
jb
dec
shr
jg
ljmp
je
daa
xor
shlb
sub
mov
fdivl
scas
cmc
in
in
mov
pusha
fidivrl
fdivrs
jl
mov
popf
push
lods
mov
sbb
aas
lret
fstpl
mov
mov
int
inc
test
fnstsw
mov
mov
jns
jae
mov
into
lods
or
sub
stos
outsl
dec
cs
adc
lock
cmc
cmpsb
stos
jo
or
ja
jnp
jp
jnp
xchg
ret
pop
or
jno
sbb
or
out
pop
lea
push
mov
mov
mov
pushf
cltd
xchg
out
cmpsb
jbe
pop
pusha
cmp
sub
cmp
push
repz
iret
rclb
je
mov
sub
pop
sbb
mov
es
fistl
fsubrp
fcoml
fidivrl
cmpb
pop
lds
mov
dec
stc
fildl
cmp
mov
fwait
ret
cmp
adc
and
dec
pop
lret
adc
mov
iret
fwait
int3
rclb
into
xchg
mov
sub
mov
sub
in
lahf
push
jmp
pop
out
fldcw
add
inc
pop
xchg
jae
mov
push
adc
leave
xchg
ja
adc
xlat
aad
outsl
sbb
or
jne
sbb
int
mov
fld1
add
arpl
cmpsb
insl
clc
insb
sub
cmp
leave
into
inc
hlt
or
mov
add
xor
xor
mov
aam
out
loope
out
inc
mov
orl
mov
addr16
shll
test
jge
cmp
jecxz
lock
lods
dec
jge
cmp
movsb
test
pop
popf
push
mov
cmpsb
mov
dec
mov
mov
movsb
in
or
pop
les
in
loope
add
sub
int
xchg
push
sub
ds
jns
inc
stc
mov
xor
dec
cld
out
sbb
jg
jb
aad
pslld
test
mov
pop
sub
jle
cmp
sbb
cmpsl
adc
jp
xor
in
jmp
mov
sbb
or
adc
popf
dec
push
movsl
sbb
aam
ret
push
repz
xor
push
stos
loopne
xor
jbe
test
push
lea
addr16
sbb
push
mov
cmpsl
out
notl
jb
addb
sbb
mov
push
pop
jns
jno
out
push
adc
movsl
in
cmp
fdivs
popa
sbb
adc
push
cmp
push
push
adcl
push
pop
cltd
jge
leave
out
jge
imul
inc
push
mov
movsl
mov
dec
cs
stc
loope
fsubl
nop
or
cwtl
fistpll
bound
into
fstps
sbbb
xor
int3
mov
orl
les
pop
cmpsl
gs
push
mov
pop
or
mov
inc
dec
insl
rcl
jnp
vpminsb
xor
fwait
shrb
jl
mov
fcmovbe
test
inc
xchg
or
mov
test
mov
scas
mov
popf
sbb
out
sub
push
cmp
adc
mov
cmp
popf
pop
pusha
mov
fdivs
scas
sbb
pusha
pop
pop
cmpsl
dec
mov
cmp
cmp
jb
lods
xlat
je
mov
adcl
xor
inc
pop
mov
pop
push
jp
cmp
cmp
cmc
rorl
insl
orl
jbe
cs
pusha
xor
mov
mov
sahf
hlt
repnz
xchg
sbb
sub
push
imul
mov
mov
addr16
lcall
pop
dec
scas
test
xchg
jge
clc
out
je
mov
push
sti
xor
inc
bnd
lcall
out
pop
jecxz
je
adc
data16
jne
fnstsw
inc
dec
xor
pop
fldenv
imul
sti
jbe
ss
and
sub
mov
outsl
push
sbb
nop
xchg
pop
and
push
mov
in
adc
mov
xor
mov
in
mov
push
mov
int
int
sti
mov
push
inc
out
jnp
ret
pop
loope
push
ljmp
xchg
cltd
mov
sub
nop
jo
daa
and
ljmp
or
sub
mov
ss
sbb
in
lret
outsl
test
dec
mov
mov
imull
inc
or
psubsw
push
inc
cmpl
out
insl
ja
lcall
movsb
dec
add
mov
bound
cmpsl
psrlq
adc
faddl
push
push
sarb
ds
mov
cs
fisubl
pop
mov
mov
or
jnp
lea
into
mov
sbbl
aam
pop
cmpsl
roll
cmp
inc
lret
sbb
leave
popf
pop
ljmp
bound
movsb
xchg
sbb
xor
repz
xor
clc
ss
stos
pop
cltd
into
popf
pop
rep
ret
arpl
inc
jle
mov
adc
mov
adc
jb
jp
je
xchg
jg
inc
test
jg
aam
sahf
jo
or
add
jne
and
pop
mov
bound
adc
cmp
insl
pop
imul
dec
les
push
xor
mov
mov
push
xor
jl
gs
and
gs
add
out
in
mov
test
pop
loope
jge
add
xchg
sbb
dec
cmpsl
mov
imul
call
outsl
ret
movsl
xchg
push
stc
mov
jl,pt
out
rorb
in
inc
in
pusha
inc
rorb
fnop
mov
shl
scas
jl
inc
jmp
push
push
ficompl
cmp
sub
mov
imul
int
cld
inc
pop
imul
pop
mov
jge
xchg
mov
fists
es
das
test
fs
insb
sbb
jge
lods
insl
adc
hlt
fstl
xor
sti
hlt
bnd
shll
mov
xor
inc
xchg
outsl
inc
fsts
ljmp
insl
pusha
aad
xor
dec
mov
ss
les
pusha
jmp
jg
jns
addl
and
sbb
lret
bound
insl
lret
cmpsl
sbb
into
xchg
xchg
std
adc
cmpsl
fadds
and
mov
pop
or
repnz
loope
fisttpll
sub
out
add
inc
mov
dec
scas
and
lea
adcl
push
lret
push
push
pop
mov
mov
mov
jle
jns
cmp
hlt
iret
xor
sub
lahf
jg
jmp
sbb
cli
outsl
inc
out
add
mov
cmc
push
add
repnz
sub
sub
adc
repz
call
jae
xchg
fidivs
mov
pop
imul
ss
insl
iret
lods
inc
ja
dec
into
aaa
cmpsl
test
adc
cmp
sbb
jge
xchg
scas
push
popa
fwait
mov
les
cmp
aam
dec
xor
pop
or
ss
jns
push
and
cmpb
mov
shl
push
cmp
scas
or
xor
imul
inc
imul
out
out
sbb
dec
xchg
mov
xchg
lret
jmp
mov
int
cmp
scas
mov
cmp
mov
xchg
popa
aam
fildl
out
and
and
aad
jg
adc
pop
ficoml
cmpxchg8b
pusha
cld
popa
pushf
pushf
fadds
jge
sbb
xor
in
xchg
dec
in
add
dec
mov
mov
mov
test
popa
fimuls
out
add
xchg
mov
push
dec
test
rol
js
aaa
dec
popf
xchg
sub
cmpsb
mov
and
sub
jmp
xchg
cmp
cmpsl
cli
xchg
test
mov
pusha
xchg
mov
lods
es
inc
imul
outsl
dec
sbb
cmpsb
aam
lea
mov
fninit
sub
mov
mov
push
dec
mov
subb
mov
int
pop
in
add
fnsave
sbb
mov
dec
in
orl
mov
cmp
push
mov
adc
jne
xchg
cli
outsb
pop
add
test
jmp
cmp
sub
adc
in
xchg
mov
push
stos
push
popa
pop
fidivs
or
call
mull
addb
jb
movsl
push
mov
cmp
dec
jl
adc
sub
dec
sbb
in
xchg
pop
lahf
pop
lock
hlt
add
jae
inc
shl
leave
addb
sub
cmc
jge
dec
outsl
add
inc
imul
ret
int
inc
pop
add
sub
xchg
xor
dec
xchg
test
push
ret
sbbb
mov
pop
fidivrl
jge
or
sbb
sub
cli
inc
dec
xor
fidivl
mov
int
cmp
cmp
lock
dec
sarl
nop
push
fidivs
movsb
dec
fisubs
jae
test
lock
inc
iret
or
fidivrl
jae
cmp
mov
sbb
ret
dec
popf
and
insb
inc
push
adc
xchg
mov
and
xor
xor
in
mov
test
cmpsb
adc
cltd
mov
stc
push
cmpsl
ror
hlt
sbb
test
push
je
inc
and
cs
and
xlat
push
xor
movsb
test
mov
iret
insb
setge
dec
repnz
mov
jnp
out
test
and
push
sbb
hlt
movsb
push
inc
inc
stc
movsb
mov
xchg
test
xchg
dec
fcomps
daa
cld
jp
ds
or
mov
daa
inc
xor
inc
lds
adc
pop
test
divl
and
jns
xor
int3
xchg
jl
imul
aam
push
pop
inc
scas
ja
sbb
les
cmp
ret
xor
mov
insb
adc
cld
daa
push
in
cmpsb
or
aaa
sbbb
dec
notl
or
sbb
cmpsl
in
cmp
push
jb
idivb
idivl
and
fcoms
push
pop
mov
mov
icebp
and
std
lock
pop
pop
push
ret
iret
jb
popa
xchg
jl
popa
jl
adc
subb
imul
cmpsb
adc
cmc
mov
jecxz
fwait
mov
jbe
add
fdivr
int3
data16
sbb
gs
mov
pop
jnp
lods
pop
cmp
xor
scas
cwtl
mov
dec
jg
shrb
push
sbbb
icebp
jno
inc
in
push
lea
xor
repz
or
mov
mov
cmp
inc
jge
lret
xchg
or
test
dec
xchg
dec
push
imul
xor
mov
mull
orl
sub
add
out
divb
scas
shrb
sub
cmp
mov
popa
push
scas
out
mov
mov
adc
jge
clc
sub
pop
dec
cmpb
dec
push
fwait
int
shrl
push
lock
mov
dec
pop
sbb
testl
jae
in
and
lea
insl
loopne
orl
stos
dec
cmp
loope
outsb
hlt
dec
gs
lods
stos
stos
sbb
dec
inc
mov
or
adcb
xor
arpl
mov
or
aas
or
dec
lods
and
sti
mov
stos
push
loopne
fistpl
and
cmp
or
dec
sbb
cmp
mov
inc
mov
stos
ja
imul
imul
mov
imul
mov
imul
jg
push
jp
xor
mov
js
int
iret
cmp
ret
js
clc
mov
inc
sahf
imul
dec
or
cli
std
fsts
push
mov
xchg
cs
xchg
jnp
fs
mov
sbb
xor
cmp
cmp
jns
mov
scas
shlb
mov
mov
inc
pop
xor
cmp
mov
push
cmp
mov
or
sbb
push
and
je
lods
popa
cmp
cmc
dec
push
shr
dec
push
ljmp
gs
push
je
and
and
mov
rcr
int3
std
push
or
mov
push
dec
repnz
push
sub
stc
das
dec
cmpsl
cmp
mov
inc
or
add
and
jno
inc
cmp
jns
adc
jmp
sbb
dec
mov
loopne
dec
mov
leave
jecxz
scas
subl
jb
jbe
scas
xor
jnp
movups
xor
xchg
iret
mov
mov
lret
push
or
scas
lods
push
std
sub
dec
sbb
lret
sti
jno
mov
inc
push
sbb
dec
nop
iret
cmp
xor
xor
xchg
push
test
lds
add
pop
jne
inc
pop
mov
test
xor
jbe
insb
int
adc
in
jl
mov
xor
mov
xor
mov
loop,pt
jb
pusha
test
jno
gs
cmp
cmp
xor
dec
push
dec
xchg
cmp
push
dec
sbb
test
cmpl
dec
sahf
push
stc
mov
shl
push
cmp
jne
jg,pn
add
mov
xor
xor
dec
jnp
inc
sbb
pop
jp
lods
push
lods
outsb
cmpl
jae
shll
mov
mov
daa
adc
add
cmpsb
inc
xchg
cmp
mov
imul
sbb
sub
inc
adcb
cmp
outsb
int
int
jl
sub
adc
je
cmpsb
adc
dec
mov
scas
pop
cmpl
cmp
js
jbe
xor
aaa
and
jnp
stos
imul
mov
int
jae
and
mov
sbb
shrb
popa
sahf
mov
sar
and
arpl
cmp
pop
mov
inc
out
sti
hlt
std
pop
pop
inc
xchg
gs
lret
imul
xor
xor
loopne
cwtl
jns
outsl
mov
es
cmpsl
into
cmp
fs
dec
jb
sarb
mov
test
nop
jnp
pop
addr16
add
add
push
test
xchg
dec
xor
cwtl
inc
sbb
fstpl
pop
aad
icebp
test
sbb
pop
or
and
adc
inc
loopne
out
shlb
dec
test
je
cmp
js
xor
adc
addl
sahf
lea
cmp
sti
xor
cmp
aaa
jle
or
jl
mov
and
xor
mov
and
or
mov
int
out
aam
scas
inc
cli
rcll
cmpsl
push
cld
scas
cmp
jno
out
inc
sbb
dec
imulb
sub
arpl
mov
rcll
xlat
push
pop
int
push
mov
xabort
out
cmp
xchg
test
mov
lods
dec
lret
push
mov
popa
sbb
shll
test
jg
pop
pusha
sbb
popa
shrl
or
dec
mov
or
jmp
xlat
insl
gs
add
popa
dec
lds
notb
jb
addl
dec
lods
stos
popf
dec
mov
cmpsb
and
cmpl
fmull
mov
mov
mov
out
fldcw
jns
arpl
and
lock
pop
jae
add
dec
push
ss
mov
movsl
shlb
or
movsb
testl
cmp
mov
pusha
outsl
fiaddl
loopne
stos
incb
sub
mov
mov
std
sub
jge
shlb
adc
mov
dec
jg
rcrl
mov
lret
pop
push
mov
bnd
xchg
leave
insl
sbb
add
xchg
cmp
dec
cmc
clc
inc
cmp
leave
add
adcb
addr16
inc
or
jbe
inc
jmp
fisttpll
sbb
cmpsl
jb
mov
xchg
lea
jae
out
popa
rorl
into
sbb
jmp
inc
add
ss
int
mov
push
sub
sub
das
notl
jl
mov
dec
sbbl
popa
insb
mov
mov
bndstx
adc
popa
dec
stc
test
cmc
jl
sbbb
mov
or
xor
xchg
xor
xor
int
cs
xor
dec
xchg
into
add
xchg
dec
popaw
fisubs
jo
inc
dec
lods
jl
dec
sarl
cmpsl
jnp
lret
push
dec
dec
mov
sbb
mov
lret
jbe
adc
or
xor
inc
popf
test
cmpsb
std
mov
mov
rorl
ja
add
bound
sbb
pop
mov
leave
pop
lret
add
add
jno
fimull
outsb
test
repz
dec
stos
mov
push
cltd
mov
add
push
mov
test
outsb
sbb
aam
jmp
rorl
cmp
add
push
sbb
jmp
sbb
jmp
cmp
dec
mov
mov
pusha
cmp
mov
inc
adc
sbb
insl
imul
or
xor
sbb
repnz
fistpll
jg
je
xchg
dec
test
inc
jecxz
cmp
dec
nop
bound
push
add
or
and
jmp
loop
icebp
pusha
int
lret
aad
aad
aaa
xor
inc
fsub
icebp
sub
pop
repnz
cmpsb
or
dec
popf
xor
addl
pop
or
cmpsl
je
pop
out
mov
int
leave
push
inc
jbe
clc
mov
aaa
jl
test
imul
movsl
cmp
pop
movsb
popf
ret
in
aam
in
icebp
imul
inc
mov
scas
mov
nop
inc
mov
xchg
jbe
test
popa
sbb
iret
mov
in
and
push
bound
aam
cmp
adc
daa
movsb
insb
push
into
stc
shl
rorl
jp
aas
cmc
leave
insl
sbb
jp
outsb
das
mov
jne
fbstp
movsb
jns
jae
inc
xor
mov
xchg
push
xchg
xchg
and
ds
lods
add
xor
adc
test
jns
je
test
shrb
pop
cmp
xor
ja
mov
xor
repnz
les
scas
and
mov
stc
mov
pop
push
cmpsl
pusha
lea
xor
sub
jnp
icebp
test
push
cmp
xor
push
jb
out
adc
call
sub
add
jb
js
jle
inc
loopne
daa
push
pushf
addb
test
push
int3
into
mov
mov
jnp
lmsw
jmp
or
jp
popa
mov
popf
mov
popa
jmp
dec
jge
inc
mov
inc
arpl
xor
cmp
into
test
std
popa
lret
int3
addb
push
or
pop
sub
mov
adc
int
jg
fistpl
cmc
ja
out
sub
test
je
stc
inc
mulps
dec
aaa
lea
or
mov
push
and
movaps
movsl
dec
cmp
aam
sub
xor
cmpsl
xor
adc
mov
cmpb
cmp
dec
adc
loope
xor
pusha
cmpsb
jecxz
mov
xor
mov
xor
outsb
and
sub
jne
xchg
xor
int3
inc
cmp
or
aaa
xchg
stc
mov
movsl
mov
jns
push
sbb
dec
pop
mov
mov
xchg
inc
push
dec
dec
into
mov
jo
jge
cmp
lock
xchg
cs
loopne
jg
shll
pop
imul
insb
adc
push
test
in
dec
and
mov
mov
test
fs
fsubr
adc
inc
xorl
icebp
mov
push
out
sbb
inc
and
xchg
out
inc
cmpsb
nop
cmp
pusha
mov
mov
call
dec
fistpl
cltd
add
sbb
pop
test
inc
or
xor
cmc
out
mov
fisttpl
roll
xchg
add
std
scas
aad
and
adc
stos
push
jbe
test
outsl
sti
insl
out
push
pop
mov
roll
cmp
sbb
repz
inc
ret
sarl
mov
jg
cld
cmpsl
sarb
mov
dec
inc
jle
xchg
rclb
test
jne
lret
mov
mov
in
adc
loopne
sub
xchg
cmp
pop
arpl
xor
sub
loop
xchg
incb
jo
cmp
mov
inc
jle
int3
inc
jmp
push
scas
xor
inc
push
pusha
sti
ss
add
pop
mov
andl
push
int
fnstcw
dec
xchg
les
fsubrl
inc
dec
dec
dec
inc
xor
dec
sub
mov
jle
loop
aas
bound
mov
mov
sbb
mov
es
adc
jno
mov
jno
mov
out
pop
and
test
sarl
fsubl
jp
sbb
ljmp
test
jae
and
pop
movsb
ds
pop
pop
in
lea
cmp
adc
jp
cmovg
repz
mov
push
cmp
pusha
cmp
jae
sub
mov
les
mov
mov
jae
mov
and
stos
push
ljmp
rcrb
adc
lock
scas
mov
jo
je
bound
jae
fildl
orl
mov
and
cmp
sub
cltd
sub
push
lret
lret
jbe
push
sub
push
mov
test
jmp
mov
sarb
sbb
dec
scas
arpl
cmp
insl
popf
pop
push
insb
pop
xchg
cmpsb
dec
fs
cs
pop
sub
add
iret
dec
jns
or
sti
mov
mov
cmp
sti
adc
popa
leave
lds
mov
loope
lds
push
xor
iret
orps
scas
dec
inc
xor
mov
adc
leave
popf
mov
pop
jbe
mov
and
clc
pop
lcall
jb
jmp
sbb
mov
aad
cmp
pop
es
sbb
cmp
push
lahf
or
jbe
or
push
or
aaa
mov
jle
adc
mov
fdiv
sbb
push
mov
mov
pop
pop
testl
sub
push
cmp
xor
stc
pop
and
call
mov
iret
cmp
mov
mov
sub
sub
mov
push
out
cmp
add
test
imul
xor
pushf
imul
movsl
jp
cmp
arpl
fldt
mov
in
mov
and
cmp
sahf
je
pop
cs
mov
sub
lcall
mov
test
ds
xchg
mov
mov
insl
jne
xorb
pop
sub
add
sbb
xor
cmp
adc
push
imul
out
imul
fstpl
mov
jnp
pop
and
mov
cmc
xchg
and
dec
jmp
mov
mov
inc
mov
cmp
iret
data16
inc
sbb
out
add
jns
ja
mov
out
dec
std
cmp
test
mov
test
stos
pop
xor
or
inc
add
leave
push
xor
xchg
cmc
jne
je
mov
dec
inc
stos
ja
adc
fsts
sub
std
rcll
movsl
cmp
and
test
imul
mov
adc
mov
daa
aas
mov
lcall
shll
lods
dec
outsb
xor
cmpsb
push
nop
stc
mov
mov
cmp
inc
sub
mov
jl
cltd
aas
cwtl
negl
add
repnz
cmpsl
jns
negl
and
push
or
subl
or
xchg
cmp
loop
inc
scas
outsl
mov
ja
movsl
mov
jne
lods
or
sub
push
jecxz
movsb
inc
mov
sub
cmp
jns
test
sbb
in
dec
xor
mov
shrl
add
rcll
adc
mov
inc
cmp
mov
mov
mov
stos
mov
mov
orl
push
mov
lret
mov
js,pt
adc
xchg
mov
test
aas
pop
test
lea
out
pop
ds
test
andl
adc
js
mov
push
pop
lods
cld
cmc
insb
test
sarb
lret
cmpsb
outsb
sbbb
clc
adc
cmp
cmp
outsl
cmpsb
das
in
inc
int
pop
inc
push
aas
or
push
push
cmp
mov
mov
sub
ds
rorl
jo
mov
in
icebp
adc
adc
popf
rep
hlt
aaa
scas
fmull
fisubl
and
pop
mov
lahf
testl
cmp
lods
cmp
mov
enter
cmpsl
out
dec
adc
dec
sub
fimuls
jmp
rcrb
inc
je
scas
xchg
xchg
out
repnz
jne
xor
jg
cmp
dec
lcall
aas
inc
adc
cmp
xchg
aaa
xor
push
scas
dec
jb
fwait
jns
mov
xchg
popf
out
adc
jae
lods
imul
movsl
cmp
cmp
dec
je
pop
movsl
or
shl
cltd
cmp
mov
add
inc
cmp
jnp
dec
repz
inc
and
or
sbb
push
fcomps
cmc
pop
mov
popf
adc
mov
inc
xlat
jmp
shr
dec
insl
sbb
popa
mov
call
pop
dec
push
dec
pop
lea
cmp
add
jbe
pop
mov
cmp
sarb
cmovge
mov
inc
inc
popa
stc
lret
pushf
inc
out
dec
test
sbb
cltd
sti
push
dec
mov
test
push
addr16
sub
stos
pop
mov
pop
test
dec
xchg
and
inc
or
popf
bound
and
popa
ds
pushf
xor
pop
add
stos
fwait
xor
ret
enter
xor
push
push
scas
xor
leave
mov
mov
push
popa
gs
fcmovnb
and
and
stc
gs
shrb
dec
pop
jae
roll
imul
xor
insl
rclb
adc
xor
push
jno
push
xor
jle
cwtl
aas
rorb
frstor
inc
push
mov
popa
sub
dec
inc
clc
rcrl
rolb
loope
push
inc
inc
call
cmp
into
loopne
imul
gs
repnz
lock
push
mov
pop
and
dec
loope
inc
lret
loope
push
cmp
mov
mov
add
sbb
jnp
inc
aad
push
jbe
cs
push
pop
push
xchg
mov
loopne
jbe
jecxz
jne
push
and
ss
pop
mov
jecxz
jae
mov
mov
jmp
jae
cmp
lods
cmp
jbe
dec
mov
jns
shrl
cmp
dec
mov
sub
push
dec
daa
mov
adc
fisubrl
push
cmpb
test
xor
inc
imul
imul
adc
push
xor
mov
push
push
dec
int3
addb
adc
mov
or
dec
push
inc
ret
rclb
imul
test
and
aaa
shlb
pop
jnp
xchg
add
mov
sub
inc
jns
into
addb
jle
pusha
xchg
pop
hlt
xor
push
cmp
mov
jo
jnp
out
fadds
mov
into
mov
push
stos
or
pop
daa
jno
jp
mov
sbbl
repnz
loopne
pop
arpl
bound
mov
test
enter
ret
mov
out
fldl
dec
pop
and
push
jae
inc
mov
sub
add
push
insb
aad
add
inc
repz
mov
xor
rorl
xor
dec
popf
into
xor
push
mov
shlb
adc
cmpsl
xchg
inc
movsb
mov
jo
xorb
and
mov
sbb
je
adc
xor
xchg
mov
mov
mov
push
lret
cmpsb
adc
scas
das
loop
pushf
shll
cmp
shlb
jg
inc
stos
lret
mov
scas
sbb
inc
jae
adc
mov
jp
inc
cwtl
xchg
dec
dec
mov
shrl
dec
sub
loop
pop
imul
cmpsb
jp
cmp
jb
out
subl
pushf
jno
ljmp
fstps
popa
scas
lea
cmp
adc
je
or
outsb
repz
add
outsl
xor
cmpsb
out
lcall
jge
jbe
mov
sbb
sub
push
aad
pop
popf
pusha
mov
mov
sub
push
cmp
data16
pushf
dec
pop
cmpl
inc
jns
xchg
addr16
sbb
call
xchg
mov
sbb
iret
xchg
lock
lea
dec
cmp
ret
jb
mov
sahf
je
adcb
lds
jg
sbb
pop
cmp
pop
add
cmp
jbe
jge
cmp
xor
out
iret
xchg
inc
repz
std
insb
repz
mov
inc
xor
out
jg
xchg
test
out
mov
dec
xor
push
jae
es
int
jne
and
push
aad
mov
jmp
repz
pop
pop
iret
pusha
rcl
je
loopne
sbb
adc
pusha
aam
dec
sbb
add
jg
jns
movb
ret
cltd
outsb
mov
aaa
ret
jmp
sbb
jp
cmpb
aas
jbe
sti
mov
fildl
or
push
xor
jp
cmp
fidivs
mov
jp
push
cmp
call
hlt
jnp
sbb
and
push
adc
push
jbe
lods
push
movhlps
pop
mov
push
sbb
out
add
adcb
dec
mov
mov
jne
mov
out
mov
cmp
jmp
jbe
sbb
mov
clc
cmpb
jge
mov
pop
lea
xor
xor
cs
mov
pop
push
dec
push
imul
hlt
inc
insl
ror
repnz
jmp
loopne
lret
imul
aas
pop
jp
mov
sub
xor
scas
sbb
adc
outsl
call
cmpsl
jmp
test
jae
push
fsubrs
pop
push
testb
mov
lds
jnp
stos
je
ja
test
mov
fadd
imull
xchg
aad
leave
xor
jbe
jnp
popa
sbb
inc
push
hlt
cs
rolb
test
sbb
dec
jne
std
mov
pop
jb
push
pop
pminsw
pop
mov
orb
mov
add
push
mov
xor
nop
jns
add
dec
stc
add
mov
ja
push
jns
add
cmp
mov
mov
orb
mov
mov
movsl
dec
roll
cmp
add
xchg
cmpsb
pop
mov
sub
cmp
outsl
test
cmp
pop
ja
jp
jp
mov
ss
cmpsl
test
dec
jmp
rclb
loope
inc
jl
sbb
dec
sbb
add
mov
idivb
pushl
pop
jbe
inc
pop
cmp
and
iret
data16
cmpsb
inc
jno
insb
adc
mov
shl
mov
daa
aam
pop
push
jg
jns
sbb
and
pop
lods
push
xchg
stos
cmp
fadds
outsb
inc
testb
jo
cmp
adc
fidivl
lahf
faddl
mov
and
adc
aam
xor
adc
xchg
jae
mov
ds
xor
or
insb
pop
mov
jp
push
dec
xor
lret
jg
sub
cwtl
fisubl
out
mov
mov
mov
lods
inc
lret
push
cmp
mov
or
repnz
cmp
cmp
pop
enter
pop
shlb
dec
push
xchg
mov
mov
in
fcoml
or
push
icebp
aas
adc
inc
arpl
popa
int3
dec
add
int
push
rcrb
push
pop
imul
out
mov
push
dec
rclb
pop
dec
int3
bound
adc
addr16
test
popf
sbb
fiaddl
fistps
jp
pop
sub
and
cmp
pop
pop
clc
cmp
mov
cmp
push
xchg
sahf
negb
jb
ret
fiaddl
in
push
cmpsl
mov
jns
mov
push
int
dec
cmc
dec
gs
and
inc
mov
jno
adc
cmp
pop
sbb
ja
ja
pushf
mov
push
jno
mov
test
xor
or
push
sbb
xchg
fcoms
jmp
lock
pop
adc
int
lcall
sub
movsb
roll
jns
jnp
insl
add
inc
imulb
mov
in
add
cmpsl
dec
dec
pop
leave
mov
outsl
mov
mov
enter
xchg
jg
fdivrl
mov
bound
into
cmp
jge
out
daa
dec
popf
pushf
ja
jp
subl
pop
jo
aam
stos
lret
shufps
cmp
ja
mov
and
cmp
cmp
cld
cmp
xchg
int3
addr16
lcall
popa
push
mov
lds
jle
shlb
arpl
imul
insl
popf
xchg
and
ficoml
mov
test
loope
push
jg
fcmove
push
insl
push
inc
into
ljmp
pop
out
addr16
arpl
push
loop
xchg
mov
popf
imul
mov
xor
adc
je
xchg
jb
adc
fs
outsb
and
insl
xchg
sub
mov
cmpsb
clc
addr16
push
popf
lods
cmp
sbb
imul
insl
jne
push
push
jno
ljmp
sub
jl
into
xor
sbb
and
rorl
jb
mov
mov
xlat
addl
out
inc
xchg
jl
lods
push
xchg
sub
xchg
and
xchg
imul
cmp
adc
push
mov
jg
add
pop
cltd
fdivl
jns
and
push
pop
mov
movsb
js
xchg
push
jne
mov
and
sarl
inc
insb
addb
mov
xor
jnp
dec
cmp
mov
cmp
or
shrl
repz
je
mov
dec
cmp
cmp
adc
jg
sub
iret
pop
push
sub
cmp
cmp
mov
adc
test
call
lret
jbe
xchg
pusha
lods
sbb
jno
xor
cmp
push
lea
decl
and
pop
dec
jae
dec
divl
daa
shl
loope
les
sarl
mov
push
and
add
dec
add
xor
ss
idivl
pop
push
pop
imul
fsts
daa
xor
pop
les
push
and
pusha
es
or
inc
stc
test
xor
cmp
movsb
mov
ljmp
divb
pop
in
les
push
cmpsb
cwtl
xlat
ret
mov
inc
jae
or
iret
dec
into
out
out
jg
mov
test
sti
jno
jbe
mov
xor
xchg
cs
adc
xchg
out
gs
flds
adc
or
mov
test
push
inc
adc
imul
pusha
cmp
addb
mov
mov
dec
push
shl
sahf
jnp
inc
je
imul
jno
mov
mov
mov
daa
shrb
pusha
pusha
xor
jmp
mov
lods
sbb
out
pusha
jle
int
jnp
insl
subb
or
push
jbe
cmc
stos
xchg
jo
jno
dec
xchg
jns
lahf
sbb
or
cmpsb
testb
std
inc
push
lods
popa
pop
gs
dec
jnp
push
lods
xchg
lock
cmp
jmp
inc
push
xchg
sub
mov
loopne
pop
aaa
clc
pop
jb
xchg
mov
je
test
iret
xor
mov
leave
jb
repz
jnp
mov
lcall
mov
std
mov
cmp
xor
cwtl
xor
cmp
mov
jns
sub
sarl
sbb
imulb
imull
test
and
add
mov
xchg
adc
push
sbb
jg
jb
cmp
call
xor
adc
cld
imul
sti
rcrb
inc
hlt
into
mov
push
push
xchg
pop
inc
mov
mov
je
jbe
cli
mov
nop
test
imul
out
test
imul
sub
sbb
jne
xlat
or
xor
test
out
scas
and
xchg
sub
lea
mov
into
adcb
aas
push
cli
int3
adc
push
cmp
add
jmp
push
fcmovb
inc
jb
adc
and
jne
insl
jbe
fidivrs
xor
dec
ja
rcl
hlt
push
jmp
xor
mov
incb
jbe
and
fmulp
mov
push
or
fstl
aam
dec
cmp
xchg
and
outsl
je
cli
stos
imul
mov
ja
dec
xchg
push
std
scas
jae
and
pop
add
jl
jb
insb
inc
cmp
push
divl
ds
andl
pop
popa
movsl
daa
push
jae
lret
add
dec
test
inc
insl
repz
or
cmc
push
xchg
loope
sbb
mov
sti
pop
pop
jno
and
rorb
cmp
jns
cmpl
dec
dec
xchg
pop
mov
cmpl
loopne
inc
shll
popaw
push
stc
xor
sbb
hlt
cmc
pop
and
int
sub
arpl
enter
idivl
or
dec
cwtl
pop
jne
roll
mov
xor
or
aam
fsubl
pop
or
stos
pop
clc
dec
lahf
cmc
lret
push
in
movsl
inc
and
mov
or
sbbl
jne
imul
lods
movsl
sub
test
fsubs
scas
int3
cmpsl
sbb
push
je
cs
mov
jle
lods
cmpl
mov
sti
sub
into
sti
je
and
dec
or
xchg
xor
lock
movsl
xor
jno
lds
mov
and
jmp
or
dec
ja
mov
lea
dec
sbb
jmp
aaa
aas
int3
adc
push
cmp
mov
out
pop
fiaddl
je
mov
int
imul
push
test
cli
mov
mov
pop
jo
xchg
mov
mov
push
ja
fsts
sub
inc
dec
adc
sub
test
leave
xchg
lahf
push
je
rolb
mov
push
adc
cmp
cmp
popa
push
fdivrp
jae
pop
movsb
sub
add
cmp
test
push
cld
scas
cmp
xor
adc
push
pop
mov
inc
mov
mov
jno
or
sub
jnp
adc
and
jl
out
lret
popa
sbb
loop
movsl
xchg
push
mov
or
pop
push
inc
adc
clc
or
mov
or
cmpsl
call
daa
scas
pop
repnz
mov
cmpsb
dec
mov
sbb
nop
pop
out
loop
push
dec
shrl
lods
pop
into
sahf
stos
xchg
lahf
xor
movsb
cmp
or
test
out
pushl
jns
jg
mov
test
xor
jo
lcall
into
cmp
fidivs
lods
cmp
divl
popf
cmp
xor
inc
mov
popa
jge
sbb
jne
imul
or
ret
scas
lcall
push
push
xchg
inc
mov
and
xor
imul
test
inc
scas
adc
pop
test
push
cmpsl
mov
sbb
push
int
pop
inc
jae
mov
repz
mov
mov
cmpl
xor
adc
pop
pop
xor
test
test
clc
or
mov
into
mov
jae
xchg
pusha
xchg
sbb
sbb
push
cltd
adc
jb
adcl
lea
mov
daa
jg
mov
xchg
fstl
icebp
int
and
and
jle
outsb
xchg
xchg
movsl
fisubl
xor
nop
mov
jno
push
dec
or
jg
inc
subl
xchg
je
sbbb
add
jb
cld
aas
call
push
les
aaa
insb
xchg
dec
push
jg
lea
sbbl
and
movsl
test
ss
loope
xchg
inc
call
insb
and
push
test
pushf
iret
sahf
dec
adc
in
or
lcall
lahf
xchg
sub
lods
icebp
ret
fdivs
ret
out
popf
cmpsl
jbe
dec
pop
sti
in
dec
inc
in
xchg
insb
sti
ret
ja
pop
test
or
mov
out
jb
mov
das
jae
push
dec
rorl
xor
testl
adc
sub
lret
into
jb
imul
push
cmpsl
jle
cmp
jb
dec
dec
movsb
jge
idivb
add
xchg
clc
lret
inc
xor
jns
shl
pop
mov
test
add
jno
mov
in
repz
push
sbb
push
popa
pop
and
and
in
inc
add
adc
pop
push
sbb
dec
mov
out
out
leave
inc
test
cmpsl
dec
xor
adc
jecxz
std
leave
jp
pop
enter
fisttpl
jge
sub
mov
movsb
fnstsw
dec
test
cld
and
xor
cmp
or
lea
dec
mov
bound
jp
fmul
je
jl
mov
pusha
mov
xchg
jl
scas
les
jl
xchg
add
cld
vmovddup
subb
mov
xchg
mov
dec
cmp
inc
call
clc
test
push
jp
cmp
push
mov
and
dec
sti
dec
insb
xor
dec
jbe
mov
dec
mov
add
fwait
or
bound
jmp
jns
pop
push
lret
dec
sbb
xor
movsb
sbbb
cmp
push
or
push
jbe
push
icebp
cmp
pop
adc
test
adc
adc
cmp
mov
test
sub
dec
add
loopne,pt
mov
push
enter
lea
jge
cmp
fistps
adc
jno
xorb
push
call
fmul
and
aaa
sbb
imul
inc
pushaw
stos
xchg
cmpsb
movsl
mov
fnsave
jae
aaa
and
scas
out
lcall
and
mov
cmp
lahf
lahf
jle
fildll
fcoms
jno
stos
sub
rclb
pop
cmpsl
push
xchg
cmp
pop
adc
pop
sbb
pop
jne
jae
and
add
mov
lds
je
lods
stos
inc
or
call
vhaddpd
adc
fidivrs
call
dec
popa
mov
xchg
out
xchg
jno
jbe
mov
cmp
ret
mov
or
push
xchg
mov
test
sub
dec
pop
stc
sbb
cltd
fidivl
sbb
jmp
and
mov
and
outsl
mov
sarl
adc
mov
push
inc
arpl
shll
pop
mov
cmp
pusha
popa
xorb
adc
int3
loopne
lods
es
xchg
imul
aas
fsubr
iret
popa
bound
cmp
xor
mov
push
or
in
push
shlb
dec
int
pop
xorl
in
icebp
insb
shrl
xor
rolb
add
aas
sarl
mov
sbb
in
imul
xor
mov
mov
jmp
push
dec
mov
loope
mov
cwtl
popa
push
mov
pop
mov
jp
jl,pt
adc
sbb
insb
iret
dec
daa
mov
shufps
cmp
jnp
cmp
dec
jmp
cmc
pop
jno
cmpsl
bound
dec
push
jl
shll
add
gs
jnp
sub
mov
icebp
das
scas
push
aaa
cmpb
jl
mov
adc
add
lret
pop
mov
repz
scas
je
shr
mov
scas
imul
xor
movsl
lock
mov
sub
call
cltd
aam
mov
push
push
cmp
or
jne
push
ret
cmpsl
in
shr
mov
int
pop
cli
jbe
in
mov
xchg
pop
idivl
mov
sar
es
outsl
sbb
sti
test
popf
xor
jp
push
fistps
popa
test
sub
push
mov
dec
sti
inc
sbb
popf
lock
adc
lret
mov
push
cld
or
dec
xorb
hlt
aas
aaa
xchg
out
lea
push
xchg
dec
jmp
jnp
push
lahf
pushf
repnz
test
xlat
subb
mov
dec
repnz
into
fwait
mov
cmc
js
test
test
push
cmp
dec
stc
sbb
adc
push
cld
dec
add
data16
or
push
mov
idivl
hlt
mov
xchg
rorb
cmp
in
push
popf
jnp
dec
in
stc
clc
mov
add
dec
jnp
and
cmp
sbb
lret
mov
push
ret
fmulp
insl
test
xor
sbb
or
mov
and
mov
cmp
push
subl
nop
inc
nop
jle
mov
mov
xlat
dec
push
mov
std
cmp
cmpsb
popa
js
xchg
push
and
xor
movsl
and
scas
popl
imul
sbb
out
pop
cmp
pop
jae
jnp
insb
lds
inc
push
popf
outsl
push
andb
cmp
and
icebp
orl
call
or
push
lea
adcb
movsl
mov
and
cmp
int3
ret
sub
cmp
and
jns
jnp
mov
jge
ds
icebp
lods
ss
ja
jp
fwait
jno
stc
or
add
in
or
popa
mov
push
xchg
push
mov
push
daa
fldt
sbb
xor
push
adc
or
push
arpl
repnz
pusha
scas
dec
adc
xor
adc
fcoml
outsl
xor
dec
arpl
mov
lea
lret
pop
mov
xchg
fisubl
aas
out
mov
stc
sbb
add
nop
and
daa
push
sub
cmp
es
jnp
xchg
das
scas
testl
or
int3
roll
dec
adc
and
jnp
cmp
inc
test
arpl
jns
and
cmp
cmp
sbb
cmp
xlat
and
sbb
lock
inc
ret
ss
test
popf
int
fprem
imul
stc
iret
dec
inc
push
movsb
xchg
sub
add
mov
add
lret
mov
rcr
cltd
das
xor
cmpsl
pop
ret
adc
aam
xchg
out
loope
int3
mov
cmpl
cli
scas
aaa
push
cmp
js
test
std
xchg
cmp
dec
cmp
fsubr
ja
stc
jge
push
dec
mov
xlat
push
mov
jg
or
ljmp
cltd
addr16
jnp
popf
sub
xorl
inc
mov
xchg
add
mov
lret
sbb
movsb
int
pop
or
loope
popf
lods
je
adc
mov
sbb
pop
push
loopne
loopne
jecxz
inc
sub
cmpsl
rclb
orps
push
test
pop
and
xchg
sarb
cmp
dec
mov
cltd
cwtl
scas
mov
dec
pop
dec
mov
jns
mov
xor
adc
xchg
imul
fcomip
push
inc
sarb
icebp
mov
inc
test
push
mov
add
mov
inc
mov
sarb
jo
jne
test
mov
dec
data16
bound
cmc
test
jno
mov
cs
test
jmp
or
andb
pop
shll
jno
loopne
add
ja
jb
addr16
repnz
cmpsb
repz
into
loop
jmp
push
adc
fisttpll
xchg
jno
xor
xor
push
movsl
fstps
stc
pop
orl
lret
sbb
cmp
mov
add
mov
fidivrl
je
int
aad
mov
testb
js
das
jno
push
mov
lahf
scas
add
mov
jne
or
mov
mov
push
cld
adc
lods
jno
mov
mov
sub
test
rclb
and
dec
sbb
out
jp
clc
xchg
inc
divb
push
cs
push
xor
add
fistpll
cwtl
scas
push
mov
xchg
fldt
xchg
ljmp
mov
sub
outsb
adc
or
add
mov
test
jge
mov
movsl
fs
push
mov
lods
std
pop
fldenv
cmp
jae
mov
imul
inc
push
adc
mov
dec
or
imul
imul
push
push
incl
ret
dec
pop
sub
stos
inc
lods
inc
rorl
loope
mov
repnz
aaa
enter
mov
jnp
push
cmpb
pusha
imul
mov
arpl
int3
out
iret
xchg
xchg
pop
ja
std
lahf
jmp
pop
xchg
mov
jmp
mov
mov
in
int3
push
out
cmp
push
jae
pop
and
mov
into
gs
paddusw
jecxz
out
shll
xchg
mov
imul
mov
outsb
xor
stos
sbb
inc
and
imul
sbb
push
pop
mov
and
in
movsl
push
fistpl
inc
jge
loop
fsubrs
ljmp
dec
pop
sbb
cmp
clc
mov
mov
sub
stos
mov
imul
xchg
cmp
mov
add
cmp
std
push
xor
mov
imul
adc
jbe
lea
cmpsl
test
enter
or
ret
cmp
mov
adc
inc
stc
mov
ja
pop
orb
mov
lods
imul
mov
gs
xchg
out
dec
mov
dec
inc
sbb
inc
pop
sbb
scas
push
lahf
lea
stos
inc
out
pop
pop
cmpsl
std
clc
dec
adc
mov
fistpll
jp
dec
mov
aas
xchg
fwait
mov
inc
ss
scas
shr
int
lea
rorl
xor
cmp
xor
out
jne
stc
pop
cmp
inc
cmpsb
cmp
push
and
mov
es
jg
int3
mov
mov
dec
jp
lock
push
call
dec
xchg
nop
out
xlat
fisubrs
push
shlb
add
dec
sbb
pop
jge
lods
jno
sub
mov
cmpsb
sbb
or
cmpsl
mov
cmp
adc
mov
data16
mov
cltd
lret
mov
jmp
clc
adcl
pusha
and
or
add
xor
cmpsl
cs
lret
dec
jbe
add
mov
adc
cmpsb
lret
inc
mov
mov
mov
mov
jae
adc
movsl
insb
dec
fists
cli
cmp
insb
cmpsb
clc
xor
daa
cmp
mov
xor
adc
out
loope
jp
lcall
sub
fcompl
jmp
pop
ret
test
mov
arpl
in
pop
sti
cmp
in
push
fidivrs
jnp
xchg
adc
int3
sarl
xlat
jl
fsubrs
addr16
test
ja
cmpsb
repz
jae
push
jl
icebp
jae
push
mov
push
lock
pushl
js
jne
call
cmpsl
fpatan
sbb
mov
dec
testl
leave
mov
or
jae
xorb
lods
xchg
dec
and
aaa
loop
imul
cmpsl
mov
dec
dec
adc
stos
xchg
bound
pop
inc
or
jle
sub
scas
or
jl
fistpll
sub
std
mov
shlb
push
mov
lea
adc
cmpsl
mov
ret
lock
cs
cld
ss
mov
bound
dec
test
aad
jg
mov
jl
mov
in
mov
cmp
int
dec
cmp
int3
mov
sti
cmp
dec
xor
mov
sub
jp
jae
pop
sbb
dec
and
jns
fdivrl
pop
pop
jge
adc
pop
pop
adc
sub
jnp
bound
out
mov
add
dec
lds
mov
fidivl
xchg
jl
and
test
pop
xchg
scas
mov
into
inc
fstpl
push
cltd
push
rcl
mov
cltd
add
mov
mov
mov
cmpsb
movsb
loop
adc
movsb
mov
mul
or
cmp
pop
aad
jb
call
mov
adc
push
rcll
mov
cmpsl
mov
inc
pop
xor
ljmp
jnp
xchg
ja
rclb
mov
jns
test
jl
enter
pop
or
cli
inc
jnp
stos
insl
sub
push
xchg
shrb
push
xlat
mov
mov
sbb
cmp
test
jp
gs
mov
shr
xor
mov
push
je
adc
xchg
mov
in
popf
xchg
push
adc
out
push
jb
xor
stc
push
outsb
sub
or
dec
hlt
fstl
mov
cli
sub
mov
inc
stc
and
sbb
cld
out
ds
pushf
in
jmp
jb
dec
call
and
cmp
or
sbb
call
pop
push
test
mov
loope
cmp
test
mov
mov
xchg
scas
sbb
int3
dec
ds
addr16
dec
les
cmc
pop
cmp
js
xchg
lock
cmp
mov
dec
ja
mov
dec
mov
dec
mov
dec
test
mov
ss
stos
cmp
divb
aaa
cmp
mov
push
fisubrs
jle
popf
subl
test
push
xor
rcrl
imul
jnp
jnp
mov
adc
ja
sbb
pop
jb
jp
xor
pop
mov
bound
sbb
fcomps
lea
mov
xlat
fstpt
mov
mov
adc
or
sti
sarb
cmp
ja
xorl
sbb
ja
stc
xor
or
sbb
jmp
mov
fwait
es
leave
xchg
gs
inc
mov
fwait
in
mov
outsl
mov
xor
repnz
mov
test
mov
and
int3
mov
gs
push
mov
push
sbb
lock
cld
mov
mov
lea
xor
cmp
pop
and
mov
push
mov
xchg
popf
sub
popa
sarb
mov
xorb
gs
mov
xchg
mov
jns
int3
jmp
sbb
call
or
ja
push
mulb
jnp
dec
rcll
or
jmp
jno
xchg
jb
mov
fstpt
maxps
ret
rorl
aad
ja
jbe
dec
divl
repz
mov
mov
mov
orl
cmp
inc
adc
jg
add
push
lret
xor
orl
mov
idivl
jns
cmp
cmp
jge
or
xlat
ret
ds
sbb
mov
or
test
or
mov
mov
outsl
mov
dec
daa
imul
mov
xchg
addr16
xor
mov
inc
add
mov
popf
dec
ds
push
dec
and
lahf
adc
xor
lret
jb
xor
xchg
icebp
shll
xor
test
dec
pop
rorb
push
leave
loope
mov
add
fistpll
and
and
mov
mov
mov
test
jnp
cmpsl
movsl
mov
pop
cwtl
jae
jge
repz
mov
jae
insb
movsb
jg
bound
bound
xor
or
pop
add
cmpl
mov
das
mov
js
pop
mov
mov
repz
lret
sbb
inc
in
lds
cmp
aaa
jae
sbb
lea
out
push
pusha
lds
pop
dec
rorb
sahf
inc
je
mov
dec
fldl
ds
leave
outsl
mov
stc
aaa
cmp
xorl
mov
jbe
sub
jae
jb
adc
sub
mov
dec
sarl
nop
push
jns
pop
int3
mov
dec
jecxz
lret
daa
jle
scas
jge
jno
push
mov
dec
rorb
inc
mov
ds
mov
fisttps
xor
mov
xor
dec
repz
mov
jne
sarl
cmp
notl
or
cmpl
iret
insb
jne
mov
mov
cmpsl
adc
jmp
ljmp
push
mov
xor
xor
push
js
xor
and
add
icebp
mov
cmp
fcoms
cli
jno
test
mov
lea
push
aas
sbbl
leave
inc
and
adc
push
fstpt
jns
dec
cltd
aam
inc
and
cmpsl
test
dec
sti
jns
xor
je
dec
hlt
pop
or
fs
sti
adc
mov
dec
bound
jnp
fidivrl
iret
cmpl
adc
add
je
dec
in
popa
sti
subl
outsl
dec
and
push
mov
test
iret
cmp
jb
repz
int
addr16
xor
xchg
ss
cltd
arpl
sbb
cltd
cmp
addr16
in
jmp
pusha
push
stc
lret
stc
enter
fwait
ss
push
hlt
imul
stos
xlat
cmp
jmp
add
xor
subb
dec
and
into
rcl
xchg
push
or
mov
adc
add
test
insb
sar
pop
sbb
daa
dec
adc
pop
push
icebp
pop
cmp
jecxz
xchg
mov
shrb
test
xchg
jb
hlt
adc
xchg
icebp
iretw
sub
int
mov
outsb
xor
cld
jg
cli
push
rcll
cmp
mov
std
jge
mov
repz
sahf
sub
push
and
fwait
inc
jno
cmp
repnz
arpl
lods
ret
cmp
int
imul
fbld
xor
loope,pt
adc
call
test
jo
fwait
mov
jb
sub
sahf
stc
jmp
in
shrl
push
mov
pop
push
xchg
jle
xor
jbe
mov
jnp
lods
pop
mov
jl
dec
xor
int3
inc
andb
andb
and
mov
cli
adc
and
xor
das
push
jns
fdivr
xor
mov
lea
rcll
jns
xor
clc
test
stc
push
in
stos
or
inc
cmp
xor
dec
sub
mov
iret
xchg
int3
clc
inc
mov
mov
ss
and
movb
mov
es
ja
cmp
leave
mov
mov
clc
cld
arpl
decl
cmc
cltd
cmp
dec
mov
dec
xor
xchg
xchg
xor
insl
lea
cmp
add
mov
popa
sbb
mov
shll
loopne
std
in
clc
aaa
or
leave
adc
pusha
stos
subl
aas
dec
lds
outsb
xchg
push
pop
xchg
dec
or
out
inc
pop
shrl
popf
int
ja
mov
loopne
outsb
test
roll
cmp
nop
mov
cs
mov
jle
int3
mov
cmpsb
or
push
ljmp
inc
int3
aam
pop
jns
cmc
lods
into
jns
dec
or
dec
sarb
dec
lods
inc
push
pop
cmp
imul
dec
dec
sub
aas
mov
push
lret
sub
stc
add
add
jle
aas
cmp
push
cmp
dec
repz
adc
lret
pop
stc
mov
jne
dec
jmp
aas
lds
or
stc
or
jne
insl
test
dec
cmp
pop
arpl
out
or
adc
mov
dec
jb
decb
imul
pop
jnp
lock
push
inc
jns
out
cmp
jle
dec
in
int
xor
xor
push
dec
adc
jno
out
shl
popf
inc
jmp
insl
and
repnz
pop
into
repnz
xor
jne
xchg
and
lcall
int
jb
inc
std
mov
stc
jb
adc
clc
cmp
dec
int3
iret
cltd
and
dec
popf
mov
hlt
test
lds
inc
xor
test
in
push
sub
push
in
sbb
pop
fs
imul
sti
push
outsl
imul
pop
bnd
movsl
cmp
ljmp
insl
lods
in
arpl
or
inc
push
mov
jbe
imul
mov
sbb
push
push
das
orl
xor
lods
xor
ljmp
cmpsl
fdivrl
xchg
sahf
popf
push
add
inc
cmp
lea
loopne
add
xor
jnp
and
mov
mov
sarl
mov
fdivr
femms
scas
subl
mov
pop
push
cmpsl
mov
out
js
movsl
cmp
mov
hlt
insb
in
dec
in
and
jmp
int3
jbe
jl
dec
and
fisubrs
sbb
into
cli
xlat
jle
shlb
or
mov
sarb
and
rcr
push
sub
ja
int
mov
adc
xor
call
adc
inc
sbb
xor
dec
and
aaa
cmp
andb
pop
mov
and
dec
adc
orb
cmp
popf
outsl
dec
xlat
and
inc
out
xor
aam
movsl
sar
andl
lcall
xor
mov
aaa
pusha
cmp
mov
jmp
popf
jae
mov
fwait
pusha
adc
insb
dec
mov
insl
xor
addr16
pop
cmp
mov
aad
or
jns
fldt
and
inc
adc
or
pop
add
test
and
mov
mov
clc
pop
clc
mov
mov
sub
ret
dec
sti
iret
shll
stos
jns
ret
stos
xor
cmp
jae
fcmovnb
jecxz
mov
cmp
xchg
dec
pop
addr16
or
sbb
pusha
jl,pn
adc
lods
xchg
mov
in
cmpsb
icebp
cmp
in
loopne
les
cltd
xor
adc
jbe
mov
inc
dec
pop
dec
sbb
lahf
cld
mov
xchg
inc
fisttps
icebp
rclb
dec
das
ja
nop
in
mov
popa
push
loop
pop
rcrw
sub
adc
iret
jae
int
mov
test
ss
mov
scas
adc
push
cmpsb
mov
mov
test
fists
aam
sarb
cltd
mov
inc
xor
or
mov
push
add
lea
lock
push
movb
mov
or
cwtl
xchg
gs
xor
shll
sub
inc
ja
or
popf
push
mov
mov
jno
or
pushf
aaa
push
cmp
pop
or
aam
leave
jo
sbb
push
ja
jmp
sbb
loope
jmp
test
sti
cmp
js
pop
add
mov
mov
sahf
popf
ss
std
push
inc
mov
jbe
sbb
mov
or
xlat
repnz
cmp
mov
mov
and
xchg
aaa
dec
aam
cmp
mov
mov
int3
repz
dec
lods
idivl
imul
sarl
lock
sbb
xor
enter
mov
adc
inc
ret
cltd
pop
popa
cmp
mov
jp
cmp
mov
mov
addr16
add
push
imul
loope
xor
inc
outsb
mov
adc
mov
outsb
push
xor
mov
and
sbb
cmpsl
jno
lds
cmp
or
mov
fwait
mov
dec
dec
push
mov
dec
les
subb
int
mov
rep
scas
cmp
jno
mov
cmp
lret
or
xchg
fstpt
mov
aaa
scas
inc
lods
ss
aam
clc
jae
fildll
call
aad
xchg
dec
cmp
inc
je
pop
cmpsl
loop
jno
cmp
out
push
or
jne
lea
gs
jmp
push
xchg
cmp
popa
mov
pop
cltd
addl
xor
jl
push
popa
cld
loopne
in
pop
mov
sbb
rorl
cmpsl
push
ret
xor
test
push
shlb
and
gs
dec
int3
decl
mov
add
popf
outsl
mov
je
repz
xor
adc
ss
pop
push
call
dec
or
dec
inc
add
lds
sbb
jmp
mov
pop
lret
inc
sbb
dec
sbb
test
xor
aaa
dec
jecxz
mov
push
adc
sbb
ss
mov
shrl
testl
add
dec
sbb
push
dec
push
in
cmp
push
clc
xchg
jbe
mov
jno
popa
sbb
dec
mov
dec
outsl
sbb
cmp
imul
push
call
dec
pushf
jg
cmpsl
dec
jnp
jnp
dec
mov
out
popa
out
imul
jne
int
adc
xlat
push
pop
sbb
jb
mov
je
or
je
clc
adc
sub
jge
orl
shrl
pusha
into
push
inc
test
cmp
cmp
dec
imul
or
movsl
mov
in
aas
pop
pop
jns
out
cmp
push
or
ds
pop
add
xor
mov
sti
shrb
sbb
int
aas
xchg
pop
jle
mov
std
mov
stos
push
jmp
lret
iret
or
scas
sub
sub
dec
and
mov
mov
or
jp
fsts
add
jbe
push
push
testl
jns
cltd
mov
into
cltd
jne
mov
test
scas
mov
jl
lea
gs
stc
mov
aad
sbb
cmpsl
jp
loope
mov
ror
sbb
lods
cmp
loop
movsb
inc
adc
push
fmulp
test
mov
jns
sub
mov
mov
xchg
imul
clc
fisubl
lret
mov
jge
adc
dec
cmpsb
jb
jge
fnstsw
or
cmp
mov
sbb
or
jnp
push
adc
jge
lds
adc
dec
xchg
xor
ja
lea
test
push
mov
js
mov
in
xchg
out
pop
or
mov
pop
adcb
dec
xchg
adc
adc
aas
lcall
push
cmpsl
mov
popa
mov
aaa
adc
pop
int
rcll
out
imul
sbb
dec
sti
mov
jp
outsl
jge
and
int3
cmp
je
sti
lcall
pop
jp
cmpsb
push
mov
pop
popa
rolb
adc
clc
mov
pop
push
cmp
jp
fisubs
cmp
iret
push
pop
cmpsl
lret
dec
mov
pop
mov
shlb
mov
and
je
imul
popf
push
cmp
mov
test
dec
iret
insb
xor
test
jnp
ficompl
in
xchg
jae
repnz
xchg
xchg
scas
scas
dec
or
cmp
push
movb
push
mov
imul
mov
and
xor
pop
fimuls
add
popf
arpl
dec
cltd
and
cmp
lret
push
pop
insb
loopne
jle
pop
sbb
shll
xchg
jmp
imul
jg
cwtl
dec
rol
push
leave
divb
rol
outsb
sahf
imul
imulb
popf
xor
xchg
pushf
lahf
mov
ljmp
hlt
mov
mov
push
pop
xor
adc
and
mov
sub
dec
stos
mov
ljmp
int
or
shlb
cltd
inc
xchg
xor
inc
lret
or
dec
insl
jns
xchg
jns
inc
mov
mov
fwait
xchg
pop
shlb
mulb
inc
ss
mov
xchg
adc
xor
push
lods
insl
inc
inc
stos
pop
mov
jle
pop
fistps
mov
sbb
repnz
cmp
mov
lret
xchg
dec
xor
scas
dec
fmul
lds
imul
xor
jne
test
lock
mov
lea
lods
jns
mov
mov
repnz
imul
fimuls
mov
adc
cltd
inc
mov
imul
cmp
subl
faddl
pop
inc
out
sub
rcrl
push
test
cmp
sbb
arpl
rorb
sub
adc
fstpl
xor
cmp
in
mov
sub
inc
or
pop
hlt
sbb
cli
sub
loopne
jnp
jno
jno
sbbl
jns
jno
imul
imul
ljmp
aaa
arpl
dec
ss
and
xchg
inc
mov
xor
bound
dec
or
mov
cltd
mov
mov
adc
sub
xor
mov
jne
aas
int
push
mov
shrl
test
mov
movsl
lea
or
and
imul
mov
kmovw
into
xchg
aaa
cmp
loope
push
lds
pop
adcl
lds
and
pop
fwait
stos
pop
dec
idivl
jp
mov
inc
iret
mov
inc
ds
ljmp
sbb
test
xchg
leave
inc
adc
subl
ja
sbb
sub
leave
mov
adc
mov
push
ljmp
jp
rcrl
push
cli
dec
orb
cmpsb
dec
push
mov
cmpsb
repz
clc
jbe
insl
std
out
push
pop
or
out
xchg
xchg
xchg
dec
out
jmp
mov
and
ja
dec
lea
dec
jp
mov
mov
xor
mov
aas
mov
sti
cmp
xor
adcl
sbb
rorb
outsl
or
xchg
mov
std
ljmp
test
xchg
add
mov
xor
mov
adc
mov
xor
dec
fidivrl
mov
adc
sub
jns
sub
cmc
imul
leave
pop
push
cmp
daa
lahf
pop
sti
cmp
mov
je
mov
ja
cmpsl
sbb
std
mov
and
popf
in
cmp
mov
xchg
and
std
sbb
cmpsl
mov
adc
push
cmc
sub
imul
aaa
leave
andb
aaa
sahf
mov
popf
dec
mov
fnsave
cmp
and
iret
jns
sbb
cmpsb
push
inc
pop
dec
cmp
xor
sbb
mov
sub
and
inc
mov
insl
mov
or
stos
popf
mov
or
cwtl
mov
jno
into
orl
xor
jns
xchg
sbb
xor
jo
mov
pop
jae
pop
fmuls
std
jle
leave
hlt
cltd
in
xorb
cmp
mov
lea
fsts
mov
sbb
adc
ret
xchg
mov
add
rcrb
into
lahf
adc
mov
sbb
push
std
nop
inc
xor
shr
dec
sbb
xor
scas
dec
lea
lds
ljmp
int
jne
aad
cmp
add
jae
xor
jecxz
pop
sbb
xchg
mov
inc
nop
hlt
cmpsl
adc
clc
dec
adc
jmp
or
jno
jmp
shll
dec
leave
in
mov
test
xchg
adc
popf
cli
fwait
push
adc
dec
mov
jno
repz
sub
cli
and
dec
sti
insb
sub
jnp
es
dec
shll
and
lds
cld
or
cmp
dec
jae
insb
dec
dec
sbb
sub
cmp
and
ja
pop
decl
and
adc
xor
dec
inc
mov
in
xchg
mov
and
inc
push
mov
test
imul
loopne
lds
dec
pop
or
out
mov
xor
repnz
sbb
imulb
or
push
js
cmp
cltd
jnp
lods
mov
jno
cmp
popa
fxch
xchg
inc
cmp
jno
mov
ja
jl
out
leave
sbb
mov
cmc
jl
xlat
out
jge
and
fucomip
dec
add
xchg
adc
mov
leave
xchg
dec
xchg
inc
inc
sbb
lock
clc
int
leave
dec
inc
cmp
inc
and
jns
lea
fimull
inc
jns
mov
repz
in
movaps
xchg
out
mov
mov
jl
out
xchg
dec
sbbl
xchg
jno
lea
mov
cmp
fldenv
cmp
mov
mov
fmull
addl
adc
imulb
lret
mov
inc
dec
cmp
adcb
xchg
lods
rcll
movsl
adc
xor
jb
icebp
test
pop
adc
mov
insb
ss
push
outsl
inc
inc
mov
pop
or
lods
dec
pop
sub
adc
in
js
xchg
fsubrl
imul
outsl
mov
dec
hlt
outsb
add
cmp
cld
fwait
popf
jne
adc
jp
scas
push
cmp
dec
aas
cmp
jno
iret
dec
rolb
repnz
push
jno
jae
dec
adc
clc
pop
das
push
sbb
pop
sbb
mov
dec
add
jbe
in
scas
inc
pusha
daa
std
or
mov
ficoml
or
mov
jns
out
movsl
popa
mov
mov
push
dec
jns
mov
dec
pop
stc
movsl
push
sarb
jg
xor
pop
ljmp
jle
loop
and
stc
inc
cld
sbb
jae
sub
inc
and
testl
lea
es
dec
in
pop
sub
nop
and
xlat
hlt
push
and
pop
fsts
inc
jb
inc
imul
or
push
jns
lds
push
in
xlat
jno
xor
paddb
int
pop
sbb
and
dec
mov
jbe
xor
clc
sub
xlat
adc
stc
imul
xlat
ss
adc
repnz
xlat
out
sub
stos
xlat
add
out
cli
xchg
clc
mov
in
and
sbb
xor
mov
int
test
cli
xor
dec
mov
lea
xor
loope
insb
mul
inc
out
xlat
jns
aas
mov
push
negb
inc
jbe
push
packuswb
andl
add
ja
in
dec
xor
addb
jle
gs
pop
sub
lea
imul
icebp
adc
roll
jns
mov
in
cmp
pop
add
mov
push
test
stos
out
sahf
stos
adc
jp
lret
mov
inc
push
pop
sub
icebp
rolb
pop
mov
pop
cltd
add
push
ret
sub
or
lea
vmwrite
xchg
mov
nop
or
lock
sbb
rcrb
je
push
test
sub
data16
push
sbb
jno
inc
addr16
add
test
pop
dec
sbb
fstpt
dec
pop
inc
mov
jns
sahf
mov
in
inc
push
jmp
jnp
xchg
pop
daa
push
jbe
cmp
sub
frstor
in
pop
aaa
push
inc
pop
ljmp
push
sbb
pop
push
sub
lds
popa
and
cmp
sbb
xor
adc
mov
fcmovnb
push
xor
outsb
mov
mov
sub
push
jb
inc
stc
or
push
adc
mov
sbb
mov
filds
popa
movsl
cmp
loop
and
lea
xor
jo
xchg
vpshuflw
lret
pop
lea
sbb
xor
icebp
mov
data16
mov
aad
mov
mov
enter
push
imul
adc
clc
aaa
insl
jno
loop
test
pop
sbbl
lret
call
addr16
xor
cmp
test
out
mov
insb
mov
lret
push
repnz
add
pushf
pop
jbe
adcl
xor
stos
dec
popf
dec
xchg
sub
or
movsb
xchg
xchg
lahf
inc
pop
addr16
fsubrp
enter
cmp
push
cltd
mov
xchg
xor
add
jnp
in
push
pop
pop
popa
jns
lahf
push
dec
cltd
into
sbb
xchg
jmp
testl
xchg
mov
mov
jno
inc
xor
stos
mov
dec
cltd
or
mov
jno
sub
jns
sarl
dec
ljmp
cmpsb
data16
push
mov
jecxz
aas
in
mov
xor
hlt
xor
jbe
paddsb
cmp
jg
sbb
push
add
in
movsb
popa
pop
adc
iret
jl
xchg
jno
and
push
adc
cltd
xchg
orl
in
gs
popa
imul
inc
mov
cltd
add
pop
sub
push
cmc
dec
stc
adc
stos
repnz
out
ret
dec
mov
into
mov
pop
inc
jmp
sub
jne
push
popa
iret
subl
push
sti
imul
ja
and
call
xchg
sub
mov
jmp
clc
dec
rcrl
jns
lea
jne
insb
jbe
cwtl
aas
cmp
jge
and
test
or
in
inc
mov
cmp
incl
push
fsub
push
adc
dec
int3
xor
ss
push
xor
jp
jno
subb
stos
cmp
push
sub
inc
cmpsl
push
and
bound
hlt
pusha
pop
add
xor
mov
jmp
nop
mov
xor
cmp
cltd
in
adcl
enter
lret
sbbl
xor
std
mov
mov
adc
test
dec
rorl
lock
movsb
mov
rorl
repnz
xor
orl
and
push
out
call
mov
mov
sbb
addr16
test
add
sbb
pop
xor
mov
sub
clc
dec
lret
pop
mov
shll
cmp
dec
jp
xchg
mov
mov
mov
xor
pop
stos
subl
rcrl
lds
loopne
icebp
ror
xchg
into
jp
cmpsb
cmp
imul
fwait
jg
sbb
jp
pop
sbb
mov
imul
pop
mov
add
jp
mov
addl
pop
pushf
mov
imul
subb
test
push
addr16
pop
cmp
aaa
sbb
xchg
test
sti
mov
cmpsl
lret
fs
jne
mov
mov
sbb
ljmp
test
testb
stos
cld
add
or
ljmp
cmpsb
psrlw
inc
testl
scas
pop
pop
or
fs
mov
mov
dec
mov
fdivl
dec
adc
aam
fnstcw
xor
scas
or
sub
jnp
lret
adc
mov
cmp
out
int3
orl
fldenv
jae
ljmp
inc
and
jbe
mov
or
aad
mov
into
xchg
sub
lods
inc
inc
rolb
and
adc
add
push
mov
mov
xlat
fucomip
pop
icebp
xchg
mov
jp
mov
cwtl
sbb
test
arpl
fisttpll
xchg
xchg
insb
pop
lds
push
lahf
outsb
inc
inc
pop
mov
mov
rorl
icebp
pop
mov
jne
push
jg
pop
mov
cs
int
mov
jmp
add
jecxz
out
movl
aas
sub
xchg
jbe
sub
nop
cmpsb
pop
sarl
hlt
cld
xor
sbb
or
dec
pop
dec
jo
mov
ret
rcrl
cli
loop
stc
inc
pop
mov
sbb
jg
addr16
mov
mov
or
test
and
sbb
adc
and
icebp
lret
adc
lcall
dec
sbb
out
std
hlt
inc
mov
push
dec
loop
sub
stos
das
inc
std
pop
vmulpd
scas
xor
xchg
bound
sbb
das
cmp
adc
add
mov
mov
add
movsbl
lea
push
xor
bound
das
mov
jnp
xor
inc
subl
pop
dec
pop
clc
inc
ret
jle
or
mov
or
inc
add
jg
pop
aaa
pop
stos
std
popa
and
incb
mov
dec
shrl
jne
xchg
loope
lahf
fsubrl
int3
inc
imul
les
fdivr
jp
mov
xor
hlt
or
cld
sub
and
sub
je
xor
sub
aas
rorb
sti
sarb
idiv
loope
push
lds
jmp
out
mov
push
fisubs
mov
jb
ror
loop
add
ss
rcr
adc
xlat
sub
jecxz
cmc
scas
mov
repz
mov
iret
lret
jg
push
push
dec
outsl
out
dec
mov
inc
cmpsl
add
sbb
sub
cmpsb
or
cwtl
or
inc
dec
dec
jne
addr16
cld
test
orl
sahf
lods
mov
jns
mov
inc
mov
cli
inc
or
ficoml
inc
arpl
lds
sub
mov
test
jmp
cmp
les
adcb
or
dec
movb
sarl
ljmp
and
adc
dec
shlb
sub
jns
or
bound
cld
jno
jl
sbb
jno
std
sarb
mov
pop
pop
sub
mov
cmp
int3
mov
xchg
daa
jmp
dec
lret
or
sbb
cmc
dec
sub
jmp
gs
mov
xor
addr16
sub
or
jae
sub
hlt
fldl
mov
inc
sbb
jl
adc
mov
sbb
push
sub
popf
mov
lds
ja
adc
fstpt
icebp
rorl
sbb
je
ds
out
movsl
pop
filds
jne
pusha
fcmove
cmpl
aas
rcrb
mov
xor
inc
rcr
imul
cli
imul
std
int3
int3
dec
sarb
rorl
fstpt
inc
pop
icebp
insl
or
sub
mov
enter
out
inc
gs
push
das
icebp
lea
pop
jp
push
stc
mov
imul
movsl
loopne
jbe
or
stos
insl
mov
out
and
mov
cmp
ret
dec
mov
xor
mov
dec
stos
mov
mov
loop
cmp
lds
int
or
and
dec
xor
test
popa
jmp
xorb
sti
stos
aas
insb
fnstsw
and
imul
mov
cltd
and
fwait
aas
insl
mov
inc
mov
or
jl
imul
mov
inc
mov
popa
add
imul
fwait
insw
fistpl
ror
imul
adc
push
jns
dec
imul
or
xlat
jge
sbb
adc
jns
mov
sbb
js
call
ja
clc
out
jns
xor
test
xor
sbb
int
std
mov
in
insl
pop
imul
lods
imul
cmp
xchg
push
clc
inc
or
clc
cmp
dec
cmp
and
lock
cmpsl
bound
xor
push
shll
jb
mov
adc
cmp
mov
sbb
adc
lahf
fadds
pop
movsl
bound
xor
jl
gs
mov
nop
lods
push
pop
mov
cmp
subb
xor
and
cmp
ss
loop
push
lret
inc
cmpsl
cltd
mov
jbe
adc
cwtl
fidivl
sbb
or
sti
push
sbbl
mov
xor
pop
or
sub
mov
shlb
push
pop
repnz
cwtl
jbe
jb
cmpsb
push
push
xor
xor
sbb
xor
insb
pusha
cmpsl
xor
hlt
push
sbb
dec
or
cmc
sbb
push
outsb
jns
scas
scas
push
loopne
cmp
sarb
push
iret
fs
rorl
mov
adc
push
test
stos
ret
ja
jo
dec
pop
mov
shlb
rol
inc
push
xchg
cmp
push
mov
adc
mov
dec
cmpsl
test
mov
mov
out
shlb
pop
arpl
mov
push
popa
dec
jbe
jl
push
mov
xor
cmp
push
mov
je
pop
in
jne
bound
iret
and
sbb
pop
jp
data16
mov
adc
push
jl
mov
js
mov
push
ret
in
adc
pop
sub
mov
add
cmp
imul
xchg
sbb
cmp
aam
jb
mov
int
dec
in
dec
fcomip
sar
cmpsb
sbb
dec
pop
pop
lods
loopne
jl
daa
es
lea
mov
stos
mov
mov
icebp
mov
mov
je
insb
xor
xor
pop
lret
fsubrs
mov
sbb
mov
jbe
inc
lock
pop
aad
cmpsl
dec
push
dec
repnz
cmp
xchg
cmp
dec
xor
lahf
adc
rcrb
into
mov
jge
push
ja
push
inc
or
lods
xchg
jecxz
jge
ljmp
pusha
test
pop
repnz
gs
mov
inc
out
or
jbe
dec
mov
or
mov
pop
or
aas
push
pop
mov
test
lea
repz
orl
mov
dec
jnp
ja
adcb
movlps
outsb
lahf
stos
adc
dec
push
add
fs
cwtl
out
in
pop
dec
adc
jbe
jnp
pop
mov
lret
pop
cli
or
cmc
jmp
imul
push
insb
popa
lea
aam
push
lods
mov
and
cmp
sub
push
stc
and
fldenv
or
cmpsb
mov
stos
int
cmp
adc
popf
jne
loopne
sub
testb
or
cmp
sbb
mov
fbld
add
pop
pop
leave
cmp
jecxz
subb
imul
pusha
mov
int3
cltd
sbb
push
inc
mov
push
mov
cmc
pop
pop
pcmpeqb
out
movsb
push
and
mov
test
sub
lret
fnstcw
cmp
pop
roll
or
pop
fmuls
cli
jl
in
in
push
mov
xor
pop
inc
ja
out
mov
divb
jno
mov
stos
out
js
dec
popf
lds
test
fiaddl
and
cmp
dec
aad
int3
mov
ss
rcr
and
push
xor
in
out
adcb
jnp
cmp
dec
mov
push
es
mov
inc
xchg
cld
add
dec
adc
adc
cmpsl
shrl
or
mov
mov
imul
icebp
iret
mov
pop
push
je
fistpll
int3
loopne
or
or
stc
pop
push
dec
stos
fisttpll
mov
cmc
pop
mov
rclb
mov
out
fnstsw
mov
lea
outsb
fwait
add
int3
push
pop
sub
int
ret
inc
lret
mov
xchg
test
push
sti
pop
and
std
jl
sub
sbb
dec
push
mov
jl
popa
cmp
cmp
xchg
mov
test
mov
xor
mov
lds
xchg
orb
push
test
mov
stc
pop
sbb
cmp
loop
gs
mov
subb
xor
mov
leave
adc
add
notb
out
sbb
xor
cmc
lret
dec
jl
xor
xor
test
cmp
cmpsl
xor
sar
cltd
inc
xchg
adc
idivb
or
sahf
xchg
push
clc
ljmp
dec
ss
jns
cmp
shlb
jns
xchg
mov
jmp
add
div
push
sbb
insl
mov
lret
mov
or
dec
test
push
sub
test
loop
cld
mov
aam
lret
int
mov
lret
jns
stc
pop
sub
movsl
mov
mov
add
pop
lahf
mov
mov
sbb
mov
sbb
in
test
stos
aas
pop
std
je
pop
icebp
dec
shlb
fisttps
push
imul
mov
test
lods
sbb
je
or
bound
ss
gs
or
repnz
add
push
push
aas
or
or
pop
in
pop
std
int
sti
mov
stos
sahf
lea
seto
or
sarl
mov
push
aad
xchg
in
pop
mov
out
lds
jb
cmpl
cmp
loopne
sti
das
inc
inc
xchg
xor
sarl
mov
cmp
fbstp
dec
cwtl
insb
insl
dec
cmpsb
push
mov
nop
inc
sub
xchg
rcrl
dec
incl
in
cmp
cmp
in
mov
jge
mov
and
movsl
dec
repnz
rcr
cmp
fcmove
ss
ds
mov
mov
int
pop
pushf
sbb
cmp
lock
sub
ret
dec
push
jg
cmpsl
push
push
mov
mull
stos
cmpsl
imul
push
stc
xchg
stc
cwtl
jmp
cmpsl
mov
inc
test
mov
mov
jmp
dec
or
cmpsb
std
call
push
out
sub
cmp
sbb
jp
cld
cld
loopne
xor
call
ds
add
leave
mov
sarb
sub
ret
lret
xor
mov
or
mov
ja
sub
scas
xchg
or
pop
repnz
cwtl
dec
jl
mov
and
sbb
pop
loop
sub
mov
xor
push
xor
gs
mov
lret
xor
int
jmp
push
lea
mov
xchg
in
ja
in
xor
fsubrs
enter
xchg
sbb
xchg
ss
lea
in
movsl
repz
data16
jl
lods
mov
mov
adc
stos
or
mov
ljmp
sub
push
push
or
jl
fisubrl
adc
jb
sbb
ja
cmp
pusha
jge
gs
mov
cltd
scas
push
inc
cmpb
dec
cmp
pop
in
fidivrl
jbe
push
pop
sub
adc
sbb
lods
xor
or
mov
test
inc
sbb
jp
add
xchg
inc
dec
lret
ror
dec
push
fidivs
or
int
adc
outsl
mov
mov
sbb
outsb
push
rcr
xchg
sub
mov
enter
dec
or
inc
mov
mov
push
dec
jns
bound
imul
jp
pusha
stos
jno
test
loope
sbb
xchg
inc
int3
adc
js
sub
ret
ret
push
mov
cmp
pop
mov
mov
cmp
sbb
imul
cmp
pop
rcrl
cli
dec
mov
mov
imul
xchg
or
xor
jne
outsb
incb
daa
cmp
mov
mov
mov
jge
and
inc
test
mov
add
test
sahf
iret
or
lahf
lea
add
fcompl
int3
pusha
cmp
imul
lea
int3
dec
mov
lea
xlat
mov
mov
sub
adcl
lock
mov
nop
inc
jp
in
push
lods
rorl
sbb
dec
push
cmpb
test
pop
mov
lret
scas
cmp
addb
inc
and
stc
jp
xchg
jp
mov
push
sbb
lods
adc
mov
jg
adc
mov
xchg
mov
xorl
outsl
mov
cs
gs
sub
mov
push
int
sarl
in
mov
jbe
inc
lods
repnz
mov
lods
lds
cmp
adc
push
mov
imul
pop
sahf
xchg
push
adc
add
jns
lods
mov
jg
push
sbb
cmp
mov
mov
dec
sub
or
jns
sub
jno
ficompl
xor
jmp
sti
subl
fnstenv
popa
mov
scas
das
test
lds
test
repnz
push
or
dec
ljmp
loop
dec
dec
sbb
jae
add
mov
xor
mov
inc
addr16
scas
lds
aas
pop
out
sub
push
imul
insb
add
aam
cmp
jnp
aas
push
cmpsl
pop
jno
mov
pop
icebp
lea
out
scas
test
fwait
cwtl
inc
mov
leave
cmp
or
pop
out
cltd
mov
pushf
push
imul
mov
jp
push
inc
loop
cltd
jg
loop
sub
outsb
jg
xlat
jmp
leave
sbb
jne
mov
add
mov
les
repnz
fwait
push
dec
sbb
inc
call
mov
mov
adc
push
cmp
mov
add
xchg
daa
xor
insb
js
xor
sbb
nop
sub
mov
lret
dec
jp
mov
stc
std
xchg
loopne
push
mov
mov
or
popa
mov
rcrb
pusha
lea
adcl
inc
mov
xor
shll
popa
inc
pushf
mov
aad
xchg
lods
jb
scas
test
imul
lock
adc
sub
shl
xor
push
dec
lods
mov
and
and
jge
pop
jns
je
adc
mov
imul
push
loopne
dec
cmc
push
sarl
loope
adc
adc
xor
mov
mov
fsubl
jmp
or
icebp
clc
xchg
loope
add
mov
test
jns
cmpsl
or
sbb
in
pop
xchg
in
test
cltd
adc
sbb
out
jae
mov
enter
sbb
sub
xchg
jno
mov
ja
jb
xor
aas
inc
xlat
dec
sti
and
mov
adc
adc
pop
pop
xor
cmp
rcll
cmc
ficompl
mov
push
inc
loopne
and
outsl
adc
stc
cmp
fistl
xor
pop
mov
jge
ja
pop
jb
mov
bound
xor
dec
jnp
cmp
mov
movsl
dec
test
pop
cmpsl
dec
lcall
pushf
lret
bound
jl
jns
jb
nop
lcall
push
pushf
jp
dec
roll
mov
inc
nop
or
scas
xchg
jb
mov
hlt
jnp
mov
adc
mov
in
cmpl
iret
add
fcmovnb
cmp
push
bound
std
xor
in
inc
mov
push
sub
es
push
leave
test
out
sub
cmpsl
fbstp
orl
pop
jp
xchg
xchg
jne
jns
sbb
or
sti
mov
jge
nop
lahf
jne
mov
add
or
dec
repz
shr
mov
out
lret
enter
xchg
xor
and
or
sbb
movsb
jge
lds
and
mov
repnz
cmc
mov
rorb
pusha
aam
in
pushl
les
aas
inc
loop
bound
sti
insl
push
jnp
mov
lret
ds
arpl
xor
jne
loope
dec
or
pushf
mov
mov
iret
sbb
xchg
into
ss
push
mov
push
xor
mov
test
jno
in
rcrl
nop
test
je
dec
repnz
insl
dec
jnp
or
cmpsb
jbe
push
pushf
push
cltd
xchg
sbb
mov
pop
hlt
xor
adc
mov
mov
jbe
cmp
push
and
or
fcmovnu
or
lds
in
pop
insl
jno
outsb
shrb
sub
pop
mov
jmp
mov
dec
cmp
jp
movsb
lods
inc
sarl
std
icebp
inc
inc
jl
pop
mulb
and
add
das
sbb
test
addr16
pop
xor
aad
inc
mov
sbb
loope
add
and
jg
cmp
aas
int3
pop
es
divl
stos
cs
test
add
pushf
mov
and
mov
and
jb
fsubr
negb
pushf
cmp
movsl
insl
stos
jns
sub
adc
lcall
push
movsb
mov
sbb
mov
fs
stc
xor
push
push
mov
sahf
xor
pop
dec
mov
cmp
sub
and
push
insb
mov
ret
mov
add
mov
xor
pop
cs
mov
lret
and
push
ljmp
ret
lds
mov
cmp
push
popf
cmp
inc
test
sbb
pop
fs
stos
aas
jnp
iret
xchg
imul
jl
icebp
cmpl
adc
dec
out
pop
rclb
sbb
cmp
testl
and
mov
lods
mov
mov
sub
decb
sbb
adc
test
lcall
fistl
lds
or
push
and
pop
call
mov
or
sub
push
stos
cmp
sbb
jle
vandps
repz
in
mov
or
aas
out
adc
push
xchg
lcall
push
jp
mov
mov
sbb
mov
jne
add
das
mov
adc
popa
mov
push
nop
or
mov
mov
add
adc
pop
mov
popa
je
add
imul
ja
push
mov
mov
mov
mov
mov
mov
push
mov
sbb
jnp
xchg
sub
push
subl
xchg
jmp
clc
mov
jbe
xchg
fistl
pop
sub
sbbl
pop
mov
push
rcrl
movsl
cmpsb
loop
test
dec
insl
xchg
lods
jnp
mov
pop
push
cs
lods
aam
and
cld
add
out
addr16
insl
sahf
dec
or
shrl
adc
mov
pop
adc
jae
and
testl
xor
or
pop
sbb
jle
ret
pop
or
lea
mov
cld
rorb
ss
sbb
sub
sbb
sbb
nop
jle
ja
jns
in
or
ljmp
sub
and
xor
lods
fucomp
pop
std
mov
rolb
pop
lods
mov
push
inc
mov
js
push
or
das
int
jp
testb
fildll
adc
sbb
or
movsl
mov
daa
cltd
push
xor
scas
fistl
daa
mov
add
jl
cmp
loopne
pop
jmp
pop
xor
sarl
pop
das
push
int
sbb
sbbl
jb
cmp
sub
test
add
out
mov
and
aad
cmp
push
inc
xchg
insb
dec
loopne
xorl
push
clc
push
lds
xchg
out
data16
xor
stc
sbb
push
jge
mov
out
shrl
dec
jp
rorb
dec
xor
mov
cld
or
adc
ret
push
push
pop
je
mov
idiv
aaa
inc
rorl
pop
cli
loop
sbb
loop
test
sbb
test
sbb
xor
cmp
lret
das
popf
jle
cltd
sub
icebp
pop
and
shll
pop
movsb
and
cmpsb
xchg
cltd
jmp
xor
sub
xchg
enter
insl
push
add
inc
popa
jp
mov
pop
test
or
test
lods
pop
xchg
sub
inc
loop
jg
mov
loop
test
loop
mov
mov
add
adcl
push
mull
or
movsb
adc
push
jo
shll
jbe
sub
int
shll
xchg
fsubrs
or
dec
adc
cwtl
cmp
mov
gs
push
or
sar
stos
push
xorl
fs
rcll
loop
dec
xor
ds
pop
xchg
cmp
jg
jae
sar
adc
push
dec
mov
mov
ss
movntps
jg
dec
xor
jge
stos
cmp
pop
cmp
in
inc
mov
jno
cmp
pop
mov
inc
rorb
jno
movsl
push
out
shl
cmp
mov
stos
into
jnp
in
mov
out
xlat
jl
ret
mov
mov
push
jp
testl
popa
mov
jge
stc
or
movsb
ret
movsl
je
data16
cs
push
test
or
pushf
inc
lahf
xchg
mov
fsts
loop
jmp
test
dec
add
jnp
dec
sub
push
pusha
jge
lods
imul
jle
mov
testb
cs
mov
mov
dec
inc
sub
lds
xchg
cmp
sti
fwait
jo
inc
mov
jns
aaa
dec
js
inc
inc
leave
xor
or
mov
or
cltd
rorb
push
pop
xchg
adc
int
popa
popf
push
jg
ss
js
mov
and
mov
pop
inc
cmpl
add
vunpcklpd
scas
in
jbe
mov
fsubl
jg
pop
xchg
lret
sub
lea
les
and
inc
lods
mov
repz
test
xor
xchg
pop
cld
xor
mov
scas
out
xorb
adc
enter
jo
movsb
sub
addr16
ss
cmpsb
or
dec
cmp
inc
mov
xchg
dec
add
push
cmp
incl
adc
xchg
int
mov
in
repz
mov
and
sar
xchg
orb
lret
add
mov
inc
inc
jmp
aad
test
daa
outsb
mov
outsb
pop
push
cli
mov
push
mov
pop
push
imul
push
enter
loopne
shrd
sub
pop
push
pop
mov
rcrl
xchg
sbb
fildll
push
ret
xor
outsb
scas
push
sahf
dec
imul
xor
popf
mov
hlt
leave
cli
xor
cmp
dec
mov
mov
mov
dec
into
hlt
addr16
adc
aaa
aas
test
je
or
push
insl
aaa
inc
adc
stos
mov
shlb
repz
fsts
inc
rcll
xchg
ret
inc
sbb
movsb
cmp
push
cli
stc
cmp
aaa
std
pop
or
jne
jb
ret
mov
sbb
fcomip
adc
jno
sti
jge
imul
mov
xor
movsl
pop
mov
mov
test
pop
dec
inc
jp
xchg
jg
inc
enter
xor
fiaddl
jle
push
inc
int3
lcall
push
jbe
out
mov
cmp
or
adcl
add
jnp
mov
jecxz
xor
popa
sbb
push
jp
cld
dec
lahf
in
mov
mov
ret
pop
sub
sbb
sbb
stos
imul
iret
inc
mov
aam
scas
shll
or
mov
xor
mov
xor
addb
or
sarl
pushf
imul
out
lahf
or
cmp
pop
sub
lea
mov
dec
sub
xor
add
push
scas
movsb
mul
cltd
aaa
lods
or
jbe
pop
mov
arpl
je
jp
pop
cmp
fldt
cmpsb
inc
or
lods
cltd
iret
xchg
add
hlt
mov
daa
clc
stos
out
sahf
addr16
cmpl
lcall
movsl
movsl
lods
mov
inc
fldl
mov
push
jbe
mov
insb
jl
push
movsl
stos
adc
cmp
loope
sbbb
les
mov
mov
push
lcall
pop
insl
cmp
dec
sbb
arpl
push
in
jp
sbb
bound
adc
cltd
mov
lods
sbb
in
and
hlt
push
cld
or
pop
or
inc
arpl
push
mov
and
mov
add
pop
leave
lds
xchg
jnp
jnp
sbb
mov
out
jns
rorl
sarl
mov
sub
cltd
es
cmp
int
mov
cmc
push
fwait
sbb
or
test
jge
call
mov
loop
xchg
cli
int
in
jnp
test
cmp
imul
cmp
add
fcom
aas
mov
scas
jno
icebp
cmp
aaa
cmp
pop
mov
jnp
and
dec
sti
arpl
jno
jno
xchg
adc
cmp
sbb
xor
jno
adc
iret
out
stos
in
cmpsb
xor
mov
in
in
pop
lods
push
lods
cmpsb
lock
sub
loop
int
and
stos
ret
lods
pop
push
adc
jb
jp
jecxz
sub
lea
push
inc
add
mov
xchg
jmp
sbb
bound
std
jp
push
mov
sarl
xchg
push
ja
push
data16
arpl
xor
push
push
cmp
or
jg
inc
dec
das
cmp
lret
leave
push
in
inc
stos
push
xchg
jb
loope
mov
cmp
cmpsb
jmp
jbe
cmp
shlb
int
insb
dec
mov
or
hlt
add
jb
mov
sub
sbb
jns
or
jns
bnd
cmpsb
lahf
jbe
orl
mov
xor
nop
scas
add
movsl
loope
sbb
test
mov
in
push
dec
jnp
mov
sbb
ret
dec
addr16
cltd
adc
sbb
sbb
cmpsl
cwtl
pop
gs
cld
int
int
insb
ret
outsb
nop
inc
lods
test
je
or
popf
lock
dec
mov
je
dec
mov
sub
push
roll
dec
push
or
mov
mov
dec
push
dec
repz
es
jp
out
lods
mov
fidivs
dec
in
and
push
out
in
enter
lret
mov
sbb
pop
call
xchg
dec
loopne
sbb
test
add
pop
inc
and
jnp
test
test
push
mov
xchg
orb
outsl
int3
push
mov
inc
loopne
and
xor
arpl
into
mov
jnp
shl
mov
xchg
ja
icebp
movsb
mull
xor
cmp
mov
push
cwtl
adc
shll
jae
ret
jl
sbbl
mov
sbb
pop
sbb
pop
fcoml
cwtl
int
mov
insl
loopne
xor
test
fnstcw
push
pop
cmp
adc
jp
fucomp
lods
aas
cmpb
subb
subl
int
fists
sbb
or
int3
or
lods
mov
mov
mov
pop
cltd
xor
lahf
mov
out
stos
loop
mov
push
rcrl
lea
add
dec
inc
repnz
sbb
mov
xor
cs
jnp
and
dec
mov
push
cmp
dec
mov
cmp
out
push
cmp
and
jnp
mov
pop
jno
or
mov
fnstcw
mov
jecxz
xor
cmp
cmp
fildll
mov
dec
loope
fisubrs
cmp
sub
add
adc
mov
clc
ss
adc
pop
mov
lods
push
xorb
dec
mov
xchg
pop
cmp
sbbl
roll
inc
fxch
sbb
inc
or
xor
test
je
rcll
inc
push
into
imul
cmp
jmp
xchg
cmc
lods
gs
dec
popf
sti
push
xor
stc
aad
sbb
mov
cmp
push
xor
addr16
out
add
cli
and
or
loopne
cmp
or
sbb
jns
or
jl
jnp
rorb
std
mov
xchg
push
test
cmp
lret
push
pop
jl
push
push
pop
xchg
pop
clc
ja
jnp
loop
out
mov
aaa
stos
lea
cmp
push
movsb
sbb
mov
xor
or
dec
jg
xlat
push
cli
movsl
sub
inc
add
daa
xor
xchg
lcall
inc
adc
inc
xchg
push
xchg
data16
cmp
dec
daa
inc
mov
sbb
into
mov
iret
test
inc
je
je
dec
jns
aas
iret
cmp
add
cmp
stos
jmp
sbb
test
dec
adc
lock
pop
ds
mov
in
test
lds
mov
btc
sbb
sub
loope
mov
mov
and
push
pop
or
mov
and
cmp
hlt
call
xchg
gs
sbb
lds
fisubs
cmp
lahf
jnp
push
xor
ds
test
jmp
sbb
imul
or
icebp
mov
push
xchg
sti
mov
in
lods
sbb
int
push
cmpsl
jo
pop
jno
mov
sbb
xchg
add
push
jle
inc
loopne
addb
mov
jle
pop
rorb
lods
in
dec
popf
bound
jns
dec
icebp
mov
pop
cmp
pop
sar
fildl
dec
adc
test
fdivrl
orl
push
int
sbb
push
lret
xchg
xor
add
add
fsubl
jg
jne
mov
dec
jg
add
fwait
xor
add
push
xor
inc
je
insl
jae
add
shrl
mov
dec
jl
sbb
je
and
lea
imul
xchg
push
bound
and
or
cltd
cmp
dec
mov
jns
xchg
movsb
rol
mov
sbb
xchg
and
loopne
subl
adc
and
mov
sub
aas
pop
xchg
icebp
dec
dec
inc
int
fidivl
and
push
lods
dec
mov
add
in
jmp
bound
clc
xchg
mov
mov
or
pop
movsl
iret
push
stos
xor
ljmp
inc
mov
mov
cmp
aaa
insl
pop
lods
add
daa
jae
sbb
cmp
mov
jg
rclb
push
mov
test
loopne
xor
pop
leave
jbe
jl
push
mov
popf
adc
add
jns
or
dec
mov
out
jnp
sbb
inc
lret
inc
mov
mov
and
or
js
mov
xchg
movsl
rcrb
push
inc
mov
ljmp
mov
data16
sub
imul
test
orb
jle
rcrl
xchg
jg
mov
adc
jnp
xor
gs
int3
jb
mov
push
test
in
jg
outsb
test
dec
dec
xor
fs
insl
jecxz
jae
popf
mov
stos
cmc
jo
push
cltd
outsb
into
mov
cld
mov
or
popf
cmp
lret
test
sbb
out
gs
cmp
sbb
xchg
push
xchg
imul
into
pop
jecxz
es
int
cmp
imul
mov
cmp
xchg
rorb
push
push
testb
mov
pop
lods
dec
test
popf
sti
les
cld
or
cmp
xchg
rcrl
cltd
popf
pusha
test
out
jbe
xor
cmp
push
sub
mov
add
or
xchg
and
es
mov
or
adc
enter
sub
rorl
mov
lahf
and
lds
dec
inc
rcl
push
or
out
popf
clc
ds
pop
fidivrl
lds
test
xor
fs
sub
imul
adc
repnz
mov
clc
mov
mov
add
popa
stc
xchg
fdivrl
jae
push
int
or
sti
sbb
lcall
out
jp
dec
add
in
sub
lret
mov
mov
push
popa
push
sbb
int3
inc
dec
test
lods
inc
jp
adc
push
xor
mov
outsl
cs
dec
in
outsl
aad
test
sti
lds
imul
mov
loopne
test
enter
lds
call
dec
repz
jl
push
pusha
lods
cmpsb
or
dec
mov
imul
jns
cwtl
cmp
jmp
ja
mov
stc
aas
lea
push
or
int3
jge
sbb
cmp
xorl
clc
sbb
js
and
orb
or
lret
xchg
cmp
push
sbb
popf
cmp
imul
inc
mov
inc
dec
sbb
jno
scas
xchg
fsqrt
mov
cmpsb
sbb
adc
cmp
rcrl
out
pop
mov
cmp
xor
dec
call
mov
aam
int
std
and
mov
insl
jmp
or
push
pop
mov
pop
les
aad
mov
mov
aam
das
or
out
dec
and
and
cmp
dec
hlt
adc
aas
xor
cld
add
mov
mov
or
stc
inc
mov
out
cmpsb
mov
jns
ds
push
mov
test
int3
xchg
push
adc
aas
fidivrl
int
aad
xchg
xchg
pop
sbb
sti
mov
jo
jnp
mov
push
push
aad
mov
mov
push
test
insl
popf
adc
les
and
pop
fnstsw
add
test
dec
lcall
dec
sbbl
mov
or
jg
movsb
mov
and
dec
fisttpl
aam
adc
and
push
outsb
or
lret
clc
ja
cmp
lcall
cmp
push
iret
lea
pusha
dec
sbb
mov
icebp
aam
jp
rorl
xchg
jmp
push
pmuludq
sbb
in
inc
ret
mov
imulb
test
stc
xor
inc
dec
mov
fidivs
popf
cmp
mov
or
adc
lret
popa
push
adc
stos
add
and
nop
insl
imul
fisubrs
mov
xchg
clc
jle
cli
jg
or
sub
mov
xor
popa
mov
cmp
cmpsl
out
dec
mov
lds
sahf
cli
mov
inc
shll
adc
inc
add
fnstsw
jnp
pop
lret
cmpb
pushf
xchg
pop
push
xor
xor
push
test
jg
dec
mov
icebp
lahf
sub
and
aas
xchg
pop
add
hlt
pusha
pop
pop
cmp
into
ds
loopne,pt
add
cmp
arpl
and
addr16
mov
cmp
lcall
mov
mov
aam
in
jns
mov
dec
sbb
dec
and
ja
add
add
in
sbb
pop
inc
inc
mov
popa
fists
or
xor
dec
cmpsl
or
js
pop
or
dec
rep
je
add
js
push
negl
test
divb
xor
mov
std
xor
test
jne
cmp
ss
test
scas
addl
xor
sbb
cmp
arpl
loop
bound
jmp
aas
iret
sbbl
mov
jg
xchg
sbbb
ret
pop
jno
mov
cmp
stos
xchg
cltd
int
adc
add
fwait
adc
arpl
addl
scas
mov
push
xchg
ja
movsb
ljmp
pop
jno
and
mov
jno
jne
push
int
test
dec
inc
pop
add
out
mov
mov
stos
lods
lods
leave
cmpsl
xor
arpl
mov
pop
sub
inc
cld
repz
fstl
jg
js
lds
dec
repnz
mov
jmp
jl
push
ljmp
xchg
fwait
pusha
pop
test
nop
xor
sbb
or
jnp
shlb
repnz
cmp
or
arpl
mov
inc
icebp
popf
jae
cltd
popa
jne
inc
pop
int
and
push
sbb
dec
cmp
iret
mov
psadbw
push
mov
dec
bound
mov
sbb
faddl
out
sbb
mov
hlt
sbb
xchg
popl
ret
cmp
push
sbb
lcall
xchg
jmp
xor
adc
jnp
cmp
xor
mov
xchg
jb
xchg
scas
cmp
cmp
sub
call
sub
pop
or
popa
cmp
xor
popf
mov
insl
je
xlat
adc
lahf
out
inc
nop
insl
dec
dec
jbe
mov
cmpsb
lahf
adc
add
scas
jge
or
ja
xorl
cmp
cli
es
adc
cmp
jecxz
test
cmc
add
adc
xchg
jne
dec
pop
dec
mov
mov
cltd
push
jge
push
adc
cmp
popf
fldcw
mov
popa
stos
cld
scas
mov
addl
loop
sbb
jne
insl
mov
js
jae
icebp
in
rcll
ds
fldt
dec
dec
jg
ret
test
mov
xor
push
popa
and
aam
sub
pop
imul
add
and
mov
cli
xor
sub
push
xor
orb
sub
mov
and
or
jns
sbb
adc
pop
fsubrp
nop
mov
stos
or
push
pop
ja
hlt
jg
adc
cmpsl
jb
mov
fsubl
pop
or
lds
js
xlat
jp
mov
cmp
jp
repnz
inc
loopne
mov
mov
xor
sbb
jmp
mov
ja
loop
rorl
mov
push
lret
orb
out
cvtpi2ps
jl
add
cmc
jge
mov
push
xchg
mov
push
mov
xor
sbb
jne
ds
jmp
stos
xor
inc
and
sub
mov
pop
subb
cmp
fwait
sub
flds
jg
adc
inc
jae
notb
arpl
xchg
and
cmp
cmp
dec
cmpl
push
subl
adc
sub
add
decl
push
cmp
xor
call
mov
in
xchg
fisttpl
pop
lods
sti
and
inc
cmp
out
jmp
cltd
dec
jg
hlt
stc
and
inc
fsts
push
in
sbb
push
in
cmp
sub
aas
jne
scas
xchg
test
ja
mov
jecxz
test
popf
adc
inc
lock
lods
xchg
repnz
daa
xchg
insb
xor
testb
das
jae
xchg
xor
cmp
lea
jge
int
ret
and
cmp
cmp
dec
or
push
gs
iret
inc
mov
mov
out
inc
mov
push
mov
mov
mov
sbb
data16
cmp
jge
adc
push
addb
in
mov
scas
sbb
mov
push
pop
sbb
in
mov
mov
push
pop
cmpl
xor
out
add
fstl
rclb
and
dec
mov
cmp
aaa
cmpsl
push
test
cmp
add
insl
aas
cmp
add
mov
dec
cmpsl
push
inc
cltd
sub
ja
mov
inc
lods
xchg
pop
sti
pop
lret
cmp
cmp
cmp
add
xor
loop
aas
loope
cld
test
cltd
sbb
inc
test
imul
cmp
stc
stc
scas
mov
mov
adcl
adc
stc
sub
add
fistl
das
sti
mov
popf
insb
fstl
mov
aam
shl
or
stos
or
sbb
stc
mov
mov
movsl
and
cmp
fbld
pushl
inc
mov
adc
mov
data16
cmpl
mov
lea
popa
push
fstl
call
test
je
repz
push
mov
cmp
cmpsl
roll
pop
adc
jbe
or
or
dec
sbb
fsubl
repz
xorl
xor
dec
xchg
ss
int3
mov
sbb
int3
mov
adc
bound
adc
ror
popf
push
sar
mov
pop
das
insb
fwait
imul
xchg
push
jns
dec
stos
insl
ss
mov
push
popf
push
mov
push
out
imul
pop
dec
data16
fs
cmp
ror
shlb
js
mov
pop
pop
adc
cmp
jge
shl
pusha
xorl
jge
xor
pop
les
int3
inc
jnp
arpl
es
mov
ret
or
arpl
sbb
push
xchg
mov
adc
and
jns
push
cs
xchg
repz
test
pop
cmp
mov
cltd
aaa
xchg
ret
add
dec
enter
andl
push
xchg
mov
mov
xchg
and
arpl
pop
int
icebp
cs
in
fs
mov
mov
xor
repnz
mov
jns
loopne
mov
je
into
xchg
adc
insl
into
jp
ss
pop
mov
push
xor
leave
cld
imul
ja
insb
cmpl
idivb
mov
inc
das
cmp
lds
pop
cmp
cwtl
icebp
jb
sbb
jb
mov
dec
inc
dec
xchg
cmp
scas
dec
jnp
xor
decb
push
mov
cli
lds
mov
cmp
adc
aad
lods
or
and
sbb
push
lods
pop
mov
mov
ret
xchg
add
aad
out
pop
xchg
fiaddl
cmp
stos
mov
mov
scas
mov
cltd
mov
xchg
dec
bound
test
shll
aad
adc
cmp
outsl
ja
mov
adc
in
adc
adc
push
dec
fsubs
mulb
in
rcrb
mov
cmp
sbb
lods
mov
jo
out
decb
ds
inc
sbb
mov
daa
xor
xor
inc
outsl
jle
xchg
xlat
jmp
mov
pop
insb
mov
cwtl
outsl
je
popf
cmp
shrb
jnp
fsubs
jns
ficoms
aas
dec
rorl
loop
jg
mov
frstor
dec
std
jo
pop
cmp
js
mov
mov
clc
xchg
cmp
loopne
push
cmpl
push
mov
inc
pusha
jns
pop
gs
push
jg
add
mov
rorl
out
arpl
cmp
lds
mov
and
jb
pop
mov
inc
arpl
jb
mov
dec
mov
add
push
in
sub
std
sbb
jbe
jb
cwtl
and
push
pop
les
inc
iret
pop
or
jl
push
arpl
mov
adc
ret
pop
pop
cmpsb
lret
push
divl
and
add
sub
int
fs
jecxz
inc
mov
cltd
aaa
mov
rcr
ds
push
inc
leave
test
mov
xorl
xor
mov
jae
and
iret
sub
cwtl
sbb
and
dec
data16
out
clc
jno
mov
dec
popa
pop
cmp
sub
aaa
fnstcw
inc
cmp
jg
sbb
lret
out
dec
xchg
lcall
int
ficomps
xorb
sbbl
mov
adc
adc
shrb
cmp
mov
xchg
pop
dec
or
popa
xchg
fnstcw
call
dec
push
pop
addr16
das
jno
paddsw
ss
xor
dec
jno
test
in
xor
bound
jb
lock
arpl
insb
sbb
push
in
mov
mov
jno
sbb
ss
sbb
lcall
dec
jne
xor
mov
xchg
pop
ds
pop
ds
out
jnp
cmp
push
sti
push
xor
xor
or
xor
fnstcw
loope
mov
cmp
jp
fidivl
cmp
lea
jnp
ret
jns
mov
inc
jp
aad
movsl
sarl
or
ret
xchg
xchg
cmp
jno
sti
dec
mov
pop
aaa
mov
test
out
cmp
dec
mov
sbb
jns
out
mov
sti
mov
lods
loop
xchg
iret
test
mov
popa
dec
xor
sub
jl
pop
fs
mov
adc
mov
mov
pop
mov
ljmp
xchg
subl
mov
pop
fistps
call
sub
push
xchg
js
sub
cs
pop
push
xor
fsubl
mov
inc
es
xchg
sti
scas
dec
adc
cld
je
mov
mov
jo
jp
outsl
mov
lret
lea
xor
lret
cmp
pop
cmc
outsl
inc
cmp
mov
jb
scas
arpl
sar
lcall
mov
and
cmpsb
mov
jno
out
lock
push
out
jbe
pop
mov
inc
sbb
orl
into
xor
int
in
xor
adc
cmp
push
cmp
cmc
cltd
int
xchg
xchg
dec
jno
fstp
jno
push
movsl
sub
xor
test
xchg
out
inc
mov
mov
out
cmp
push
lea
testb
xchg
icebp
jmp
js
jnp
scas
mov
cmc
inc
bound
push
jl
adc
mov
jns
popf
pop
lods
ret
jae
clc
out
pop
in
cs
pop
mov
add
cmpsl
stos
or
movsb
sbb
mov
stos
icebp
mov
mov
lods
scas
sbb
fnstcw
jns
je
pop
loopne
int
sub
test
cmp
and
ja
shlb
xor
iret
sbbl
inc
cmc
iret
jno
inc
mov
lock
jl
fcompl
in
repz
xor
test
adc
xor
in
dec
pop
shlb
xchg
dec
pop
cmp
addb
rcrb
notl
imul
ja
mov
clc
jge
sub
mov
stos
lods
mov
cmp
pop
loopne
mov
test
aas
cmp
pop
cmpsl
mov
stos
sbb
push
xchg
xchg
and
gs
xchg
push
addr16
adc
xor
lret
fstps
in
push
mov
test
js
out
cmc
in
shrb
inc
repz
aas
cltd
testl
imul
pop
cmp
ja
ss
add
sub
inc
add
push
inc
mov
ret
and
fninit
pop
movsl
jo
pop
hlt
out
or
or
icebp
int
out
dec
jae
lods
jno
xor
xchg
in
cmpsb
push
test
sbb
lret
xchg
into
pusha
cmp
mov
add
jg
sub
ja
cmp
sub
push
or
test
popf
xchg
sub
mov
sbb
xor
fadds
inc
add
adc
jge
dec
imul
or
dec
sti
jge
stos
sbbb
adc
je
push
sbb
xor
jmp
lods
push
out
das
jbe
dec
inc
mov
jp
jbe
pop
adc
or
in
jl
xor
jmp
adc
jg
cmp
lea
xorb
jns
stos
movb
or
mov
loopne
ja
icebp
mov
add
jge
imul
pop
adc
pop
and
int3
or
adc
mov
movsl
lds
outsl
fidivrs
xchg
dec
add
xor
xchg
hlt
lret
jbe
aas
sbb
mov
lea
mov
cmp
jle
pusha
aad
xor
mov
shlb
adc
outsb
jno
xchg
xor
mov
xor
adc
nop
inc
imul
jnp
xchg
andb
roll
pop
xchg
scas
xrelease
movsl
mov
xchg
cmp
and
lds
data16
dec
in
jp
xor
push
mov
pop
js
rclb
addr16
mov
jo
jg
dec
or
mov
aas
mov
mov
xchg
push
iret
fistps
pushf
mov
outsl
jg
jge
cmp
xor
es
push
mov
adc
test
shr
test
loopne
mov
data16
ja
stc
gs
lds
jb
addr16
loop
test
stos
sahf
imul
push
bound
jno
dec
roll
inc
movsb
adc
add
test
stos
or
arpl
pop
daa
push
and
xchg
inc
xchg
pop
gs
stc
outsb
into
mov
fs
loope
xor
mov
daa
pusha
push
imul
insb
push
mov
add
imul
jno
jae
adc
mov
xor
cmpsl
mov
dec
lods
push
andl
xchg
nop
push
mov
xor
xor
mov
daa
jge
popf
jo
cmp
push
lret
mov
cmp
xchg
cmp
in
lret
push
fdivs
xor
cmp
pop
test
lret
mov
push
orb
test
pop
sub
test
mov
jnp
jne
pop
pop
sbb
insl
jp
xor
sti
cmp
adc
and
dec
dec
xor
fisubl
xor
mov
mov
pop
push
mov
jbe
stos
lds
fidivl
sti
lock
mov
mov
lods
jb
nop
addr16
nop
push
imul
cmpsb
aas
call
insl
cwtl
sbb
mov
mov
pop
cmp
loop
subl
inc
sub
iret
imul
mov
adc
in
push
stos
cmpsl
subb
xorb
jl
outsl
mov
xor
mov
xor
dec
adc
gs
cmpsl
xchg
icebp
push
mov
mov
test
jp
addl
add
mov
mulb
adc
lar
cmpsl
inc
leave
orl
loop
mov
rclb
adc
cmp
inc
push
arpl
lods
call
mov
inc
dec
incb
test
jge
xchg
mov
mov
inc
cmpsl
sbb
dec
sarl
push
test
in
xor
xor
icebp
sub
mov
xor
jne
adc
cmp
pushf
jnp
cmp
movsl
stos
scas
cmp
mov
xchg
gs
or
insl
inc
mov
mov
inc
mov
adc
lret
mov
dec
jnp
insl
mov
jnp
and
shll
fnstcw
dec
xor
mov
dec
jmp
imul
repz
push
add
in
push
pop
insl
imul
jnp
lea
or
push
loope
pusha
inc
push
icebp
inc
or
xor
loop
push
cmp
insl
inc
jne
xor
pop
pop
xor
mov
cmp
or
fmuls
out
loope
dec
int
ss
mov
inc
xor
cmp
xor
xor
dec
mov
push
out
cmpb
hlt
mov
mov
jp
ret
sub
sbb
ss
cmpsl
xchg
dec
rcll
rolb
lds
xchg
test
aaa
pop
lods
popa
repz
in
inc
imul
outsl
mov
cmp
roll
into
xorl
mov
cmp
mov
sub
pop
scas
int
dec
push
popf
rorb
icebp
out
add
and
dec
stc
rclb
andl
stc
jmp
lcall
imul
dec
movsl
mov
xor
lahf
pusha
inc
je
out
andl
jb
imul
mov
inc
jb,pn
push
push
jno
insb
and
jge
cmp
dec
jl
mov
outsl
aas
aas
imul
rolb
inc
mov
mov
jbe
sbb
pop
insl
jmp
dec
ficoms
aaa
pop
or
scas
xchg
xor
and
addr16
mov
sti
mov
mov
data16
lcall
dec
out
sub
aam
dec
fcoms
mov
sbb
inc
or
jne
stos
mov
xor
test
cmpsl
andb
jp
out
inc
sbb
fistpll
rclb
inc
pusha
pop
gs
jns
add
shll
pop
xor
divl
pushf
sub
iret
cmp
jns
jge
jo
mov
adc
test
jmp
test
mov
dec
pop
insl
pop
dec
cmpl
mov
leave
sbb
out
xchg
inc
push
dec
jle
jno
dec
jo
mov
jge
mov
mov
push
cmp
test
call
out
dec
cmpsl
test
pop
or
mov
and
xchg
jecxz
or
cmp
ja
test
add
mov
gs
pusha
test
add
mov
shlb
cmp
lret
push
cmpsl
repz
sub
arpl
mov
xor
adc
dec
test
imul
dec
lds
jg
call
stc
imul
in
push
mov
mov
jbe
movsl
insl
popf
cmpsl
ret
roll
ja
mov
mov
stc
lods
mov
inc
sub
mov
in
add
xchg
test
jg
data16
xor
leave
jo
mov
or
or
cmp
adc
and
push
add
imul
scas
fsts
ja
dec
adc
jnp
insl
lcall
cmp
int
inc
cmp
dec
adc
repz
repnz
xchg
mov
movsb
jge
call
in
mov
cmp
ret
dec
adc
outsl
add
sbb
xchg
xor
jno
dec
inc
test
sub
rcrl
pusha
xchg
rclb
cld
rol
inc
dec
or
mov
imul
hlt
jg,pn
repnz
imul
mov
mov
pop
inc
fcomps
call
cli
mov
sub
push
ljmp
test
loope
or
pusha
mov
sahf
popa
mov
mov
xchg
jbe,pt
imul
mov
mov
jle
pop
jae
int
pop
mov
mov
mov
mov
push
xorb
je
out
sahf
pop
fisubs
and
mov
xchg
fs
shlb
js
xchg
jle
sub
mov
xchg
mov
pop
int3
jbe
or
ljmp
scas
int3
jb
jbe
jns
lahf
scas
mov
pusha
push
sbb
inc
mov
testl
pop
sarb
mov
adc
gs
pop
mov
jl
decl
cmp
cmp
cmpsl
cmc
xor
lds
jno
cli
fldcw
leave
sbb
cmp
test
hlt
dec
push
nop
iret
outsl
xor
sbb
out
jnp
or
cmpsb
mov
es
xorb
mov
je
cmp
loope
stc
gs
and
pop
add
nop
imul
and
fwait
pusha
test
or
add
sub
loope
in
xchg
cmpsb
sbb
jno
popf
push
push
and
fmull
in
mov
dec
xorb
xchg
xor
repnz
enter
adc
and
movsl
int
dec
sbbl
inc
movsl
sub
or
ja
dec
and
movsl
pop
subl
sub
vrcpss
xor
cmp
jmp
sbbl
adc
loop
lock
mov
xchg
jbe
sarb
mov
cli
fisttps
addr16
push
aaa
dec
sub
imul
add
push
gs
sub
xor
dec
mov
push
xchg
dec
gs
inc
mov
out
mov
dec
lds
or
adcb
je
pop
test
iret
cmp
mov
xor
es
adc
sbb
icebp
lea
adc
in
aad
fisttpll
push
push
andb
addr16
xor
sbb
fidivrs
pop
xor
cmp
jp
loop
cmpsb
fwait
mov
mov
xchg
xchg
adc
xorb
mov
aad
push
ret
adc
cli
inc
lods
xor
dec
cmp
ja
fistl
mov
lds
dec
mov
mov
pop
sub
jmpw
loop
dec
adc
mov
pop
jnp
jmp
xchg
xchg
inc
dec
or
shlb
test
add
push
out
je
lcall
pop
cltd
or
sysenter
inc
mov
mov
pop
cmp
dec
popf
mulb
scas
mov
add
xorb
mov
divb
mov
mov
xor
jns
or
adcl
cs
inc
xchg
add
mov
sbb
aas
test
or
mov
fnsave
hlt
andb
mov
push
add
mov
jnp
cmp
xor
dec
jno
cmpsl
insb
insl
or
ss
pop
cmp
test
mov
fisubrl
sbb
shlb
cltd
aad
inc
dec
enter
fsubp
ja
jns
push
jae
mov
xor
in
mov
sbb
repnz
jmp
iret
mov
aam
test
push
cmp
mov
mov
xor
mov
insl
ja
sub
cwtl
jne
push
cmp
jbe
lret
out
mov
pslld
sbb
ret
out
xor
push
add
dec
dec
ss
mov
pop
popf
inc
mov
pop
dec
cmp
fwait
xchg
xchg
xchg
and
loope
xchg
fldcw
leave
cmp
jne
sbb
push
roll
inc
neg
xchg
push
adc
cmp
rorl
stos
and
clc
test
icebp
xchg
mov
roll
cmp
shrb
pop
std
pop
pushf
int
dec
cmp
stc
std
xor
aad
push
popf
ficoms
and
inc
cmc
jg
sbb
adc
push
cmc
shll
out
sbb
mov
dec
jmp
lds
and
dec
cmp
push
out
or
and
mul
jb
add
xchg
rorl
lcall
test
stos
dec
mov
sbb
mov
and
mov
movb
inc
push
sbb
lret
mov
test
mov
jg
enter
pop
jb
mov
inc
jge
jb
adc
xorb
inc
loope
sbb
cmp
out
add
icebp
jge
inc
jp
inc
ror
jno
inc
sarb
scas
jbe
xor
jne
mov
mov
hlt
dec
mov
adc
xchg
pop
inc
loopne
jmp
dec
push
inc
dec
fs
and
adc
add
dec
outsb
int3
or
or
movb
ret
fwait
repz
popa
icebp
or
in
cmpsl
ja
or
jns
pop
xor
nop
cmp
pop
sbb
cmp
les
fildl
out
dec
push
int
add
maxps
scas
or
movb
cmp
pusha
addr16
xor
cmc
pop
xor
xchg
pop
jmp
test
mov
ja
mov
int3
mov
rcll
jmp
sbb
pop
inc
out
jae
push
int
jo
stos
fidivrl
repnz
xor
jmp
movsb
loop
jne
cmp
bound
pusha
push
cmp
push
jge
xor
or
dec
test
jl
je
test
lret
mov
dec
adc
loop
dec
mov
mov
ret
in
push
les
popf
sahf
int3
jo
cmp
in
jns
dec
xor
jg
mov
inc
adc
out
repnz
sub
jl
fldenv
sbb
push
xor
lods
inc
jp
push
sbb
dec
cmp
jle
ret
ss
imul
push
push
je
mov
cmp
dec
pop
xchg
dec
addr16
and
clc
cltd
pop
mov
lods
pop
ja
mov
sahf
das
cmpsl
dec
mov
cmpsb
cmp
stc
mov
mov
inc
adc
gs
test
or
inc
jnp
ljmp
cmp
dec
adc
ja
adc
test
sub
jno
fildll
push
fldenv
js
mov
insl
mov
ss
ja
ret
mov
ret
fsub
xchg
mov
ja
push
mov
test
jmp
xor
xor
push
sbb
xchg
mov
dec
mov
aam
popa
scas
mov
dec
mov
addr16
decb
loope
sbb
pop
fwait
adc
jno
popa
adc
test
jo
jnp
xorl
sbb
push
fcmovnbe
jae
cmp
aam
pop
test
mov
cmp
sbb
hlt
jge
jmp
adc
aam
mov
enter
sub
cmp
sub
cmpsl
gs
cmp
push
cli
adc
cmp
lods
cltd
iret
js
or
mov
aaa
add
sbb
or
mov
inc
xchg
xchg
aas
jl
mov
cmp
xchg
mov
xor
test
lods
lods
adc
test
mov
lahf
xor
sub
test
idivb
popf
jl
inc
mov
cmp
int
sbb
enter
pop
mov
gs
mov
fs
and
movsl
test
int
jecxz
movsl
adc
pop
mov
je
scas
fs
push
cs
aam
mov
sub
cmpsl
xor
dec
repz
sbb
shrb
jecxz
std
pop
cmp
mov
sub
jbe
push
cmc
xchg
enter
popf
arpl
mov
andb
inc
popa
cmp
rclb
pop
fmuls
shrl
jae
dec
rorl
mov
sbb
fs
or
leave
jo
and
mov
clc
dec
dec
imulb
and
mov
xchg
punpcklwd
mov
subl
call
dec
mov
cmp
sbb
cld
roll
cld
and
dec
fcoms
ret
dec
das
ja
push
adcl
ror
or
add
lods
xchg
push
shll
adc
popa
fisubrl
push
jae
stc
dec
iret
cli
cmp
loope
int3
cmp
and
rorl
imul
jno
imul
mov
xor
mov
ja
push
in
orl
mulb
pop
rcll
aaa
call
and
mov
sbb
popf
inc
filds
cmp
push
jno
js
les
sar
dec
mov
pop
dec
lret
pop
bound
push
cmp
insl
adc
andl
call
rorb
popf
shrb
iret
movsb
mov
push
mov
sbb
mov
inc
sbb
cli
sub
cmp
shlb
out
pop
push
cli
push
dec
test
cmp
stos
lds
mov
jmp
lods
sbb
push
out
jg
jmp
sbb
push
mulb
mov
int3
clc
shrl
test
int
mov
push
nop
mov
ss
fwait
pop
out
orb
cmp
addr16
or
mov
add
inc
xor
ret
sub
leave
adc
or
inc
push
dec
data16
call
adc
jg
test
cmp
adc
lds
pusha
mov
push
inc
xchg
outsb
mov
fs
sub
jb
sarl
adc
insl
sbb
mov
orl
sbb
or
je
mov
scas
orb
mov
fdivrl
leave
sub
mov
sub
ret
imul
push
popa
cmp
orb
mov
pop
inc
xor
mov
fnsave
arpl
out
test
jp
cmp
mov
adc
inc
scas
lock
push
dec
imul
and
shll
jle
xchg
rorl
xor
inc
xchg
jnp
xchg
pop
push
les
mov
cmp
pop
jl
ss
or
xor
cltd
arpl
lcall
inc
mov
sbb
mov
fs
repnz
jb
cmp
cmp
mov
iret
movsl
mov
xchg
cld
dec
lahf
jp
shrb
lret
mov
addr16
mov
cmp
sub
gs
sub
sub
mov
xor
adc
imul
lea
jg
fnstenv
pop
data16
lods
cmp
adc
das
cli
mov
enter
jae
sbb
pop
scas
subl
ret
inc
sbb
add
jmp
xor
xchg
test
aad
jecxz
jmp
subl
std
fisttpl
add
jge
in
popf
mov
sti
iret
jl
aam
or
and
test
pop
ret
cmpsl
fsts
mov
test
sub
jns
jae
icebp
inc
xor
loop
pop
jno
cltd
shll
insl
jae
fnstsw
iret
nop
jb
dec
out
gs
sbb
mov
inc
mov
inc
mov
lea
mov
and
mov
jns
rcr
adc
jno
imul
sti
sbb
mov
popa
add
pop
enter
mov
xlat
nop
or
jecxz
mov
insl
outsb
stc
pop
popf
mov
movb
neg
inc
cmp
imul
lods
xor
je
in
mov
imul
push
jbe
xchg
fnstsw
subb
push
xchg
in
pop
mov
xorl
cmp
inc
xchg
cmc
aaa
mov
adc
xlat
test
sbb
daa
adc
xor
xchg
pop
pop
push
repnz
arpl
jo
mov
pop
jp
xchg
inc
rclb
xchg
repz
push
mov
lret
mov
mov
jmp
jb
cltd
cmp
jns
mov
inc
push
or
push
push
sub
jne
push
inc
or
pop
xchg
jmp
push
or
out
icebp
push
lcall
and
mov
iret
push
or
inc
hlt
js
xchg
dec
out
fucomip
lds
cmp
fdivs
sub
fisttpll
loop
xor
sbb
sarb
stos
push
jns
cmp
inc
fwait
push
aam
repz
loope
sbb
test
lahf
mov
test
enter
add
or
mov
cmp
das
dec
clc
dec
subl
inc
popf
push
int3
jg
imul
es
jne
adc
loop
dec
mov
adc
cmp
push
sti
inc
mov
mov
test
mov
rorl
stos
sahf
test
jnp
in
movsb
arpl
js
jmp
out
or
inc
pop
cmc
bound
stos
dec
cmpb
sbb
stc
cmpb
imul
fisttps
out
iret
jno
push
xor
mov
jns
xor
and
dec
shll
loop
call
push
rcrl
adc
adc
mov
sub
imul
sub
pop
dec
stos
or
sbb
mov
jge
jmp
outsb
cmp
jne
inc
and
loop
or
dec
fwait
movsb
adc
pop
aam
inc
jnp
lea
dec
push
add
out
cmp
insl
and
data16
adc
addl
mov
jle
xchg
lea
popa
dec
pop
mov
xchg
xchg
xor
bound
push
cmp
cmp
out
daa
mov
outsb
xchg
rcr
sub
mov
shrl
stos
cmp
cmp
fistl
mov
mov
push
xchg
xchg
mov
outsl
jecxz
push
loope
jno
fwait
xchg
dec
jg
fistl
and
and
movsl
push
jb
dec
arpl
addr16
cmp
jle
jg
xchg
xor
pop
mov
dec
and
mov
lea
xor
inc
add
sub
pop
cld
test
push
outsl
int3
idivl
push
jl
inc
xor
xor
scas
lea
test
bnd
mov
imul
popf
call
movsl
pop
jno
loopne
jbe
mov
mov
cmp
mov
fbstp
push
jno
jle
xlat
and
push
or
xor
mov
je
or
test
mov
xchg
gs
cwtl
cs
in
lea
pop
push
pusha
movsl
scas
outsl
pop
mov
mov
fwait
gs
scas
fwait
ds
pop
cli
inc
pop
adc
mov
push
int
lods
int
sti
xor
jnp
mov
ja
add
je
std
lods
shll
fnstsw
into
cmc
inc
mov
std
lret
pop
orl
xchg
aam
xor
out
jmp
xorl
lret
mov
mov
pop
cmp
pop
cmpsl
and
scas
mov
mov
stc
flds
test
sbb
push
hlt
mov
push
jo
stos
fwait
xchg
shl
sub
jle
cmp
xchg
mov
jecxz
ret
dec
lods
lret
sub
mov
cli
sub
popa
stos
popa
cmp
scas
cli
fidivrl
xchg
inc
lock
push
divb
or
xchg
adc
lods
mov
test
and
adc
dec
sbb
mov
add
mov
mov
and
invd
adc
dec
aas
out
cld
push
daa
jg
adc
mov
negb
subl
jb
imul
mov
mov
popa
sub
dec
pop
jecxz
or
jns
sub
add
movsl
arpl
xchg
or
lods
movb
sub
decb
repz
or
sbb
mov
les
push
cmp
inc
aaa
iret
pushf
test
dec
jle
dec
mov
sarb
out
cmp
fnstcw
loope
scas
sbb
cmp
and
mov
and
gs
add
aas
insl
rorl
dec
push
fxch
sbb
xor
inc
out
inc
adc
jae
inc
mov
lcall
movsb
mov
mov
xor
dec
xchg
lock
xchg
and
add
sti
movsb
sbb
xor
sbb
push
xor
pop
mov
test
mov
mov
push
test
xchg
iret
stos
mov
or
stc
popf
dec
adc
negb
mov
sbb
lret
mov
into
leave
sub
pop
and
mov
cmpsb
cmp
test
xchg
pop
and
inc
sub
mov
shlb
mov
cltd
xor
adc
xorb
xor
ss
push
mov
sbb
add
inc
icebp
xchg
movsb
dec
rorl
clc
shll
test
add
out
out
pop
lods
lret
sbb
test
fiaddl
jae
pushf
iret
adc
andl
stos
fidivrl
out
inc
or
and
pusha
pslld
push
cmp
shll
or
dec
cmp
fwait
jp
mov
scas
rcrb
stos
pop
popa
mov
pop
les
cmp
add
jb
flds
in
addb
mov
pop
test
ss
inc
mov
cmp
mov
mov
divl
enter
jb
cmc
cmp
pop
cmpsl
jl
pushf
fisubs
rorl
icebp
adc
lcall
push
push
xchg
add
mov
or
popa
in
loope
xor
xchg
add
pop
stos
xchg
int3
add
or
test
xor
test
mov
and
ret
into
pop
iret
daa
inc
lea
lds
push
test
push
lret
mov
mov
lds
jmp
fwait
xor
pop
pop
aaa
test
lods
pop
ja
mov
mov
push
mov
xchg
push
dec
test
jp
jnp
les
xor
sub
imul
stc
or
add
cmpsl
pop
adc
or
xchg
out
jb
cmp
popa
inc
adc
jno
pop
add
fsubp
mov
das
push
jns
icebp
es
jbe
loope
jno
dec
repnz
mov
mov
pop
pop
adc
mov
inc
mov
outsb
fsub
dec
test
inc
imul
ja
mov
jle
addr16
jmp
pop
push
ja
pop
or
pop
imul
loopne
mov
into
loop
and
xor
sahf
xchg
and
adc
xchg
inc
push
lods
adc
outsl
lcall
push
mov
dec
test
je
int3
dec
mov
lds
xchg
int
adc
sbb
movsb
jno
mov
or
mov
cmp
sub
jmp
xchg
jno
gs
jne
ja
pushf
jne
inc
mov
inc
int
nop
rolb
pand
icebp
xchg
mov
call
sub
sbb
and
pop
sahf
xorl
xlat
dec
fnstsw
call
xchg
shr
xor
pop
sti
aaa
pop
jo
inc
mov
imul
test
pushw
push
inc
fisttpl
xchg
shl
inc
mov
sub
lods
add
jle
jno
pop
push
mov
or
mov
out
int3
dec
mov
xchg
pop
loopne
add
insl
loop,pn
dec
dec
lret
cmp
in
mov
out
mov
jecxz
push
xor
push
push
jno
ja
push
lods
popa
add
inc
popa
into
rcr
sub
mov
xchg
aam
gs
shl
out
ret
cmp
push
insl
mov
addr16
mov
mov
jge
mov
daa
jne
push
pop
std
mov
push
clc
inc
sbb
xchg
push
sbb
push
xchg
jle
push
fcoml
xor
jl
ficoms
cmp
ljmp
cmpsb
ret
sub
lret
push
icebp
sbb
cli
cli
pop
ljmp
insl
xchg
xor
cld
pop
iret
jne
out
daa
sti
dec
ja
sub
sbb
pop
xor
pop
scas
test
adc
jg
call
es
insl
and
enter
inc
je
jb
cmp
adc
cmp
fisubl
mov
mov
out
dec
xor
js
jno
push
movsl
mov
mov
gs
dec
scas
adc
adc
and
mov
mov
cmp
inc
imul
icebp
imul
andl
push
mov
mov
aad
out
add
push
popa
pop
xor
inc
out
lcall
xlat
xchg
cltd
push
hlt
xor
pop
int3
mov
mov
insb
push
popf
rolb
int3
and
jno
cmp
mov
int3
or
adc
daa
mov
add
xchg
push
dec
xor
jmp
dec
je
jnp
adc
ret
xchg
push
and
imul
cmpb
cwtl
jb
inc
dec
mov
lret
sbb
daa
push
jmp
push
sbb
xor
fldl
sbb
cmp
mov
jmp
jno
arpl
mov
insl
xor
mov
cmp
pop
aad
mov
inc
add
pusha
enter
cs
int
int
test
dec
xor
stos
jb
cltd
dec
lods
out
dec
xor
lret
jge
add
idiv
outsb
mulb
ss
imul
jl
lret
dec
jle
test
pushf
int
or
dec
dec
adc
xor
lds
cltd
inc
aaa
mov
or
pop
dec
mov
inc
xor
push
jg
fwait
sbb
pop
or
scas
push
dec
mov
jne
adc
push
pop
xor
pop
jbe
push
neg
add
jae
xchg
add
and
psubusw
fists
lods
jno
jns
push
xchg
mov
jno
popf
out
cmp
iret
cltd
ds
sub
out
mov
dec
ret
cmp
add
scas
shrl
lea
xor
dec
inc
lahf
mov
add
or
cmp
or
shll
mov
orb
cmp
xor
push
scas
or
adc
cmpsb
fwait
dec
xchg
pop
cmp
jae
pop
lret
aaa
or
test
xor
cmc
popa
repnz
es
pop
sbb
out
jns
cmp
mov
mov
sbb
adc
xchg
stc
mov
pushf
push
push
std
fnstsw
xchg
xchg
je
stc
pop
jae
ret
loopne
lahf
test
mov
sbb
push
xlat
pop
pop
lahf
imul
jo
cmp
loop
push
cmp
xchg
iret
scas
pusha
push
cld
sub
std
pop
xor
inc
push
sub
lea
sub
push
xchg
mov
xor
int
fldenv
das
jmp
mov
adc
lds
mov
jle
mov
scas
inc
jno
sbb
mov
mov
dec
inc
mov
imul
xchg
cmp
mov
dec
clc
mov
int3
roll
outsl
xchg
sbb
sbb
int3
cmpsl
lret
imul
sub
lahf
xor
cmp
cmp
mov
fistpll
pop
fstpt
jnp
pop
adcl
popf
leave
jge
adc
inc
test
pop
mov
or
cmc
jo
xchg
pop
lods
push
mov
push
lds
sbb
pop
movb
lods
pop
negb
xchg
mov
fistpl
mov
filds
mov
popa
rol
sub
mov
ss
lcall
adc
dec
popf
mov
or
or
aaa
jg
pop
mov
fwait
jle
in
mov
lahf
lods
call
xchg
mov
in
je
stos
jge
pushf
and
and
pop
mov
insl
pop
bound
std
xchg
dec
xchg
jge
adc
mov
sbb
cmpsb
pop
int
sbb
lock
or
or
xor
sbb
into
dec
lds
decl
jl
mov
or
loope
xchg
mov
mov
pop
jle
push
notl
inc
iret
les
inc
or
pop
mov
pop
icebp
decl
sti
inc
bndstx
push
test
insl
push
jmp
push
xor
mov
nop
cli
sub
xor
pop
inc
add
rorl
pop
cmp
mov
filds
cmp
push
insl
mov
pop
dec
mov
movl
daa
xlat
imul
xor
clc
std
and
out
adc
push
jb
xor
mov
aas
roll
inc
lret
sub
cmp
pop
mov
inc
cmp
aam
add
addr16
cld
xor
stos
push
das
dec
jbe
dec
cmp
dec
xor
mov
xor
int
jg
and
sbb
das
push
xorb
ja
imul
lods
pop
arpl
test
cmc
jp
mov
jbe
insb
in
shrl
and
inc
mov
jb
add
dec
inc
mov
jb
xchg
test
push
in
sbb
aad
cmpsl
sbb
addr16
pushf
mov
sub
popf
cld
negb
or
repnz
shrb
adc
push
xchg
push
cmpsl
jmp
sub
dec
pop
add
testb
cmp
rcr
sbb
mov
mull
mov
dec
in
inc
es
push
mov
inc
push
cli
orb
adc
sbb
loop
sub
inc
push
lret
mov
dec
mov
sub
sbb
cld
dec
and
jmp
lea
icebp
sub
lea
insb
inc
jmp
lret
cli
pop
pop
add
loop
in
xor
jns
adc
xchg
jb
cld
dec
pushf
rol
dec
xor
pop
mov
sbb
or
inc
loop
dec
xor
lods
push
leave
push
jb
aaa
xchg
movsb
fcmovu
sub
lret
test
loopne
push
push
sub
lea
je
sbb
aad
sub
or
into
dec
lret
jae
cmpsl
fs
nop
scas
inc
mov
or
icebp
mov
cmp
xchg
adc
shll
inc
adcb
add
jmp
out
xlat
lods
xor
push
hlt
mov
out
imul
cmp
loope
jp
lds
dec
je
push
int
fstl
and
inc
cwtl
out
sbb
mov
mov
pusha
mov
sbb
push
xchg
jge
out
mov
into
fisttpl
cmpsb
lcall
inc
mov
cmp
stos
inc
sti
shrl
adc
xor
inc
jne
pop
mov
jle
std
or
lea
cmp
pop
out
and
rcl
push
push
sub
repz
lea
sub
cmp
mov
call
xchg
sbb
int
mov
mov
dec
sarb
icebp
mov
nop
sbb
push
popa
mov
mov
adc
pop
jbe
scas
dec
sbb
outsl
movsl
mov
shl
add
icebp
xor
pop
insb
imul
mov
add
fcmove
pop
leave
insl
push
mov
sbb
inc
cmc
lret
push
addb
jns
shll
stos
inc
adc
mov
cld
inc
sbb
cmpl
mov
cmp
sbb
sahf
xor
xlat
sub
adc
loope
cltd
pop
adc
pop
add
and
mov
popf
jge
idivl
jmp
gs
pop
cld
sbb
jg
jae
addr16
sub
jo
aas
xor
jo
insb
repnz
fsubs
sub
loope
gs
sbb
mov
jb
insb
cmp
xchg
dec
dec
jge
pop
mov
pop
mov
pop
orb
cmp
push
jbe
mov
ficompl
xor
mov
jl
movsl
inc
mov
xor
sbb
popf
cwtl
dec
adc
jmp
dec
cmp
mov
jb
xchg
push
pop
jae
xchg
xor
das
int3
hlt
div
loopne
mov
js
adc
xor
cmp
inc
test
push
inc
sub
inc
push
in
jnp
popa
std
xor
adc
es
mov
xchg
adc
pop
mov
lret
mov
mov
fstpt
pop
sub
popf
sbb
pusha
mov
aad
mov
pop
repnz
pusha
mov
inc
enter
insb
pop
hlt
gs
jns
mov
fists
nop
das
fldt
loope
xor
fmull
xor
xor
iret
cmovl
or
mov
sti
and
sti
pop
sbb
mov
or
clc
inc
fstpl
push
sub
out
and
lds
inc
xor
hlt
lock
mov
xchg
sbb
pop
inc
and
xor
adc
dec
sbb
jns
and
ds
fstp
sub
mov
push
cmp
imul
dec
pcmpgtw
adc
imul
nop
enter
pop
fsts
jp
mov
pop
push
xchg
mov
dec
test
sub
cs
add
sbb
xor
mov
xor
call
ss
int3
inc
xchg
stos
addps
popf
push
aas
jmp
inc
mov
push
add
pop
xchg
inc
jns,pt
ds
das
pop
ret
push
in
lods
sbb
fistpll
pop
int
add
sub
mov
addr16
push
jl
mov
out
cmp
jne
sub
rolb
cmp
sub
shll
jmp
mov
leave
sub
repnz
mov
cld
loope
pushf
push
out
inc
push
mov
mov
arpl
mov
shl
cmp
cmp
mov
icebp
mov
cmp
mov
cs
mov
enter
jbe
out
xchg
aam
cmp
je
mov
or
sbb
stc
sti
adc
mov
imul
movsl
or
jl
mov
cmp
int3
mov
lds
jb
push
xlat
sbb
mov
mov
lahf
pop
cmp
aaa
xor
xor
jl
xor
lods
sbb
xorl
sub
or
mov
in
cltd
and
popf
imul
movsl
ss
sbb
dec
mov
push
cmp
adc
outsb
jne
fwait
inc
and
pop
and
mov
fstp
dec
cmp
xor
xor
ss
xchg
mov
add
imul
mov
xor
jno
movsl
xor
loop
jb
cmp
jge
jl
inc
sbb
fdivrl
fwait
movsl
push
pop
fdivl
fwait
int
cli
dec
pop
movsl
cmp
jl
aad
mov
push
mov
jns
loope
sub
mov
pop
test
mov
gs
pop
ds
cmp
xlat
adcl
out
stos
int3
test
inc
cltd
test
inc
or
mov
xor
jmp
enter
rorb
push
pop
add
or
in
aam
in
mov
cld
movsl
dec
icebp
adc
jle
clc
pop
das
fwait
std
push
in
fstpt
sarl
jmp
ja
or
gs
popa
sbb
popa
push
dec
fwait
test
sbb
imul
aaa
jb
adc
push
pushf
ret
cmp
daa
xchg
sub
pop
pop
jl
outsl
test
mov
fs
cmpsl
mov
enter
cmp
ror
push
xchg
push
lds
adc
mov
or
sarb
sub
sbb
rclb
xor
or
jnp
loope
dec
cld
inc
mov
adc
xor
out
xchg
push
subl
or
xor
mov
push
jp
xor
inc
inc
or
jns
fldenv
xchg
mov
lret
dec
sub
sets
sub
pop
push
mov
popf
mov
xor
mov
jnp
mov
popa
js
jg
or
jg
daa
push
loop
xchg
test
dec
sub
cmpsl
cmp
push
xor
push
xchg
push
or
shl
xchg
push
rorl
mov
out
inc
cmp
stos
mov
and
xor
xchg
push
mov
js
dec
insb
js
cmp
inc
push
imul
cmovs
add
xchg
mov
lods
leave
pop
mov
lea
push
mov
push
xchg
loop
sub
inc
push
into
test
insl
jp
lea
add
mov
fisubrs
out
scas
jb
add
inc
or
test
jg
add
push
pop
jp
mov
push
loopne
arpl
xor
int
cmp
cmp
mov
jns
and
push
loope
jne
loopew
mov
rcll
push
adcl
loopne
pusha
xchg
mov
mov
sbb
mov
jo
jbe
imul
or
jae
mov
mov
xor
ret
lods
mov
mov
mov
into
call
sbb
test
dec
cmp
mov
sbb
cmp
adc
je
xor
test
pop
push
shlb
xchg
movsl
mov
test
mov
jl
sbb
mov
cmp
push
popf
ficoml
pusha
pop
in
push
mov
cld
mov
pop
push
mov
aam
mov
push
out
cmp
xlat
cwtl
test
pop
dec
mov
mov
dec
mov
push
xchg
incb
hlt
inc
enter
mov
imul
into
push
out
out
fidivs
mov
sti
push
outsl
pusha
bound
xor
mov
iret
push
mov
mov
push
push
push
outsl
lea
sbb
addr16
push
cwtl
hlt
rolb
dec
test
js
ja
push
popf
test
xchg
mov
rcll
out
push
popa
fnstsw
daa
in
sgdtl
cli
outsl
sub
or
loop
cmp
jb
inc
lds
mov
mov
gs
je
je
mov
xchg
scas
sub
xor
test
mov
push
mov
je
sbb
into
and
mov
orl
jne
pop
adc
xor
xchg
or
xchg
imul
inc
int
aam
or
sub
inc
or
and
push
imul
dec
lea
inc
mov
dec
fidivs
mov
imul
mov
scas
xor
or
pop
int
jle
imul
rcr
jno
gs
dec
pop
jnp
popf
stos
insl
rorl
mov
imul
push
push
add
mov
cwtl
test
mov
or
lcall
fsts
shll
jmp
cld
lods
or
cmp
cmpsb
inc
jmp
test
mov
clc
sbb
rcrl
lods
loopne
icebp
jge
push
mov
pop
inc
mov
inc
pop
pop
cmp
andl
imul
mov
loopne
subl
inc
xor
jmp
loop
dec
scas
jge
pop
daa
push
sbb
inc
add
inc
mov
test
mov
add
fadds
insl
cmpsb
lret
xorl
icebp
mov
mov
stos
sarl
mov
cmp
cmp
sub
inc
xchg
mov
pop
outsb
aaa
cmp
lods
shll
test
dec
cwtl
xchg
and
loop
push
pop
xor
push
imul
cld
frstor
cmpsb
sub
cmp
adc
mov
cmp
push
jge
inc
bound
idivb
clc
sahf
mov
dec
mov
xchg
aaa
jg
ficoms
adc
test
or
vmwrite
repnz
adc
jno
xor
out
jb
cmp
jge
pushf
jns
jg
aaa
orb
dec
adc
and
test
cmp
or
lea
or
mov
aas
or
add
fdivrs
shl
cs
stc
lret
or
cmp
cltd
mov
insl
or
cs
push
jne
pop
stos
mov
xchg
inc
jae
and
into
cld
push
and
push
cmp
mov
insb
cmp
test
sahf
mov
mov
xchg
or
cmp
mov
aad
clc
cmp
out
movsb
cmp
lds
push
out
js
popf
pop
mov
cld
cmp
bound
sub
loop
mov
xchg
jmp
test
ljmp
add
int3
adc
and
mov
insb
pop
mov
imul
push
fs
ljmp
xchg
push
cmp
dec
and
mov
jae
or
mov
sar
xchg
jecxz
jb
jp
mov
push
mov
jnp
scas
popf
mov
xor
mov
dec
and
cmp
out
lahf
cmp
xchg
repnz
lret
xchg
sar
sarl
and
call
sbb
lahf
into
std
xor
inc
or
ss
adc
int
shrl
lea
shll
aam
rcl
imul
test
push
lods
int
cmp
push
call
push
int
jl
jp
xor
sub
sub
push
inc
jnp
loope
push
dec
sar
xlat
pop
scas
mov
pushf
dec
cmpl
stc
scas
fwait
aas
or
arpl
out
add
fdivl
dec
add
fstp
mov
iret
popa
lahf
imul
inc
lea
movsl
test
mov
sahf
push
or
mov
std
mov
xor
mov
ss
insb
add
je
dec
mov
push
ficoms
cs
movsl
sbb
test
jno
inc
mov
dec
cltd
icebp
hlt
cmp
or
inc
xor
dec
fwait
out
dec
inc
jmp
imul
clc
or
jo
iret
jne
dec
pop
mov
loop
pop
jno
shl
pop
add
sub
fisubs
xchg
or
lret
push
pop
and
jns
addr16
jg
imul
mov
pop
push
sub
stc
add
stos
into
xor
xor
call
inc
flds
movb
push
push
pop
push
push
mov
sarb
fxch
dec
dec
or
mov
cmp
js
mov
xor
sub
push
jne
bound
push
mov
fcmovne
imul
cmpsl
outsl
loope
enter
cmp
test
inc
fildl
popa
push
jno
and
hlt
jbe
loopne
jae
mov
mov
pop
jne
cmp
mov
out
sbb
sarb
jmp
ds
repnz
pop
jne
int
mov
jp
cmp
movsl
aam
in
jne
cmp
fmul
jge
adc
push
mov
mov
popf
sub
xor
jns
shlb
movsl
fstpl
xchg
fwait
aaa
add
ja
inc
mov
jae
mov
mov
mov
int3
push
inc
xchg
outsb
push
mov
jnp
jle
pop
and
std
out
inc
adcb
lret
cmp
mov
cmpsl
fcoms
jmp
sbb
or
stc
test
rorb
cld
mov
add
mov
fildl
lods
aas
inc
cmp
mov
je
push
daa
inc
incl
or
jnp
and
test
cmp
sub
push
sti
mov
fistl
inc
ficomps
dec
inc
in
outsb
jg
jmp
or
adc
inc
inc
shll
pop
shll
inc
outsl
jmp
cmp
int
xlat
inc
movsb
scas
or
pop
cmpsb
fidivrs
popa
xor
cmp
xchg
xor
inc
dec
pushf
mov
push
cmp
popa
add
cli
xor
int
das
inc
test
movsl
mov
lods
mov
dec
iret
add
lds
int3
inc
dec
iret
push
xor
jo
mov
inc
cmp
not
mov
es
add
push
or
push
xchg
push
sahf
sub
aad
stos
movsb
jnp
in
mov
sbb
xor
out
add
int3
mov
lret
adc
test
xor
pop
pusha
push
and
ds
mov
mov
ja
pop
cmp
sbb
push
xchg
das
inc
xor
add
mov
out
pop
cmpsl
mov
cltd
add
xchg
jge
je
or
dec
jl
cwtl
inc
push
mov
push
jnp
xorb
mulb
cmpsb
insl
jmp
dec
jp
lret
cmpl
lea
or
lods
in
popa
sub
xor
mov
mov
int
out
cmpsl
pop
lahf
ds
dec
mov
sbb
sti
adc
mov
mov
push
mov
inc
sbb
inc
js
jge
int3
ficoms
adc
sti
mov
mov
jp
jae
dec
ds
addr16
les
sbb
scas
int
sub
ja
xlat
pop
jne
movsl
inc
cmp
push
xor
into
xchg
inc
stos
jno
mov
sub
pop
and
mov
push
mov
mov
push
push
cmp
jg
test
das
mov
iret
mov
lds
adc
pop
or
mov
cs
pop
insb
xor
add
shll
jb
cmp
xchg
mov
push
cmp
dec
sbb
inc
pop
mov
arpl
repnz
push
mov
test
inc
jge
cmp
pop
outsl
mov
pop
inc
add
int3
scas
adc
cmp
aam
pushf
aad
jo
or
gs
movsl
mov
cmp
mov
je
xchg
fwait
mov
jl
or
mov
pop
adc
aaa
int3
aas
pop
cmpsl
mov
dec
mov
orb
xchg
imul
shll
xchg
cmp
sbb
test
mov
mov
scas
dec
ss
or
pusha
jno
xchg
imul
pusha
int3
pop
pop
insl
sub
push
ja
out
jno
mov
push
adc
cmp
push
push
mov
les
es
imul
pop
xchg
jg
mov
cmp
popf
stos
push
inc
push
xor
insl
and
leave
jno
icebp
leave
adc
and
out
ss
into
xchg
rorl
cmpsb
in
arpl
xor
mov
push
add
cmp
adc
jns
or
lods
xor
xor
sub
jne
pushf
add
popa
mov
popf
lahf
inc
into
aam
sbb
mov
pop
lods
shll
stc
lods
test
and
or
outsl
add
xchg
add
ret
xchg
cmp
sti
addl
lds
leave
sbb
xor
cld
loope
leave
adc
test
push
ljmp
mov
cmpsb
shll
imul
push
mov
nop
jo
aam
jno
out
filds
inc
mov
js
mov
out
mov
xchg
mov
loopne
push
add
xor
add
mov
mov
and
inc
filds
aaa
xor
or
xchg
add
ds
notb
inc
imul
xor
test
inc
mov
std
push
roll
faddl
mov
movl
idiv
mov
shrb
xor
cmc
xchg
jmp
jnp
out
mov
inc
jo
push
sub
pop
out
adc
push
push
pop
dec
push
add
test
daa
fidivl
add
pop
xor
or
inc
mov
push
mov
and
mov
jg
inc
cli
sbb
sbb
adc
dec
push
mov
or
icebp
out
inc
ds
adc
test
jo
dec
das
lret
mov
xchg
outsl
add
dec
adc
je
mov
sbb
fdivrl
push
push
push
jecxz
mov
jg
jns
jb
inc
xchg
aas
mov
or
pop
mov
arpl
mov
dec
jns
sahf
sti
mov
jl
sub
cltd
pop
inc
and
pop
test
popa
fildl
insl
xor
push
dec
divl
mov
mov
xchg
inc
xor
dec
dec
and
imul
or
movsl
mov
rclb
jg
mov
jns
rolb
adc
insb
fisubs
sbb
adc
imul
popf
fisubs
jns
cmp
adc
and
jb
mov
mov
pop
jns
call
cmp
aas
arpl
sub
divl
pop
dec
cmpsl
add
jo
out
push
jns
loopne
int3
lods
xchg
mov
mov
sbb
test
fnsave
out
repnz
cmp
dec
aas
cs
push
cmp
mov
imul
leave
mov
jne
in
xor
pop
mov
in
insl
insl
out
push
inc
insl
popa
dec
and
mov
xchg
push
mov
pop
push
sbb
mov
fs
jns
ds
les
jecxz
pop
and
jne
insl
out
mov
dec
xor
push
push
mov
or
cmp
push
pop
stos
leave
inc
loopne
and
jg
sbb
dec
insl
pop
sub
sbb
aas
xor
jecxz
mov
xchg
jno
sbb
insl
xchg
loope
inc
test
push
sbb
cmp
mov
adc
push
mov
rolb
dec
mov
add
jno
xchg
xor
adc
push
or
add
movsb
fucomi
jne
out
mov
xor
popf
pop
sbb
cmpsb
test
dec
jb
xchg
xchg
mov
jno
lret
cmp
cmp
negl
loop
ja
movsb
adc
mov
xor
xchg
or
jbe
add
adc
aam
sti
arpl
xor
test
sbb
sarl
sbb
or
test
orl
sbb
subl
pop
mov
add
and
dec
push
mov
jb
dec
out
inc
outsl
loop
les
push
xchg
sbb
jne
push
push
lret
out
or
aas
mov
mov
sbb
push
xor
push
jno
xchg
push
addr16
cmp
imul
mov
rclb
idiv
std
or
test
jnp
icebp
pop
cmp
lret
sub
mov
int
aam
test
aam
dec
addr16
mov
jne
jno
mov
out
loop
xlat
add
mov
jo
cmp
popa
dec
or
inc
adc
js
test
dec
adc
bound
jno
push
addl
inc
xlat
outsb
xchg
dec
aas
lret
mov
cmp
adc
pusha
cmpl
ja
dec
pop
inc
jbe
dec
popf
js
in
jecxz
arpl
pop
jmp
push
push
aam
loop
fs
mov
mov
int3
or
xor
inc
jns
call
pop
aam
notl
mov
xchg
int3
insb
mov
jp
or
das
inc
cmc
xor
push
data16
aas
push
outsl
dec
push
pop
xchg
mov
mov
pusha
imul
lcall
out
mov
rorl
push
dec
mov
cmp
cmpsb
adc
jp
cmp
push
fwait
pop
pop
movsl
pushf
push
lods
pop
in
gs
and
mov
mov
inc
sbb
pop
aam
insl
mov
outsl
push
add
dec
and
jge
xor
or
mov
xor
dec
int
lds
inc
dec
fisttpl
mov
sub
inc
pop
pop
outsl
xor
jnp
add
loopne
cltd
imul
sub
dec
inc
dec
cmp
inc
jb
adc
enter
repnz
or
pop
jecxz
mov
mov
xlat
push
jno
mov
dec
or
jg
dec
dec
jge
adc
mov
push
repz
jo
jge
sti
cmc
dec
xor
fcoms
and
mov
out
or
xchg
ja
fs
icebp
or
jno
roll
dec
mov
jno
cwtl
stc
pop
jb
cmp
int3
lahf
inc
cld
jl
addr16
sub
pop
cmp
dec
mov
pop
movsb
sub
stos
mov
inc
mov
rcr
bound
cs
inc
pop
bound
cmp
cmp
jge
mov
sbb
jg
in
dec
jl
mov
add
cld
cvtdq2ps
call
call
sti
mov
pop
lea
xor
mov
xlat
fwait
cmp
sbb
xchg
aaa
inc
pusha
inc
mov
loope
ror
inc
jnp
or
xor
cmpsb
inc
sbbl
pop
stos
imul
and
es
jo
dec
and
mov
sbb
adc
mov
fdivr
jl
dec
jo
dec
hlt
js
popa
lds
lret
fcmovbe
insl
loope
jl
push
mov
jge
test
push
idivl
sbb
mov
dec
mov
sbb
jl
jmp
xor
or
xchg
cmp
sbb
je
xor
jp
aam
jno
rcr
aas
fists
test
fcmovu
or
push
stc
shr
int
inc
out
lods
mov
loop
xchg
jb
movsl
movsb
int
lret
lds
sub
sarl
fbstp
dec
aas
mov
push
lods
ja
adc
jecxz
dec
sub
das
out
cltd
jmp
jbe
add
xor
jmp
faddl
pop
jb
test
je
adc
std
mov
mov
lea
andb
xlat
iret
mov
out
xchg
xor
push
rolb
adc
dec
or
clc
aaa
sub
lods
sbb
bound
dec
lret
dec
mov
push
sti
and
inc
sbb
test
mov
int3
xor
cmp
iret
je
add
sbb
test
cmp
jnp
aaa
mov
inc
mov
xor
cmpsb
out
pop
sub
mov
add
xor
lods
mov
aaa
sub
ja
xchg
ljmp
add
inc
mov
lea
lret
ss
scas
insl
pushf
push
es
daa
xchg
cli
pop
mov
inc
aas
dec
repnz
loop
aad
stos
cmp
cld
pop
sub
sarl
fsubrl
adc
lret
pop
xor
int
inc
test
or
das
test
aad
das
or
sub
les
rcrl
or
dec
aaa
push
loope
stc
jge
add
arpl
mov
sub
call
daa
jno
clc
dec
jp
add
jl
cmpsl
sbbl
loopne
icebp
jnp
mov
cmp
push
mov
add
adc
cmp
sub
outsb
xor
rorb
in
xlat
dec
mov
cmp
frstor
call
cwtl
cmp
pcmpeqd
stc
nop
arpl
mov
xchg
sar
or
jno
xchg
lret
inc
sti
mulb
add
cmp
cmpsb
out
ljmp
inc
mov
xor
mov
iret
dec
sarb
jno
orl
idiv
inc
loopne
jp
pop
jne
mov
daa
cmpl
cli
dec
pop
mov
out
ficoms
cmpsb
rorl
mov
push
cmp
test
mov
xor
xchg
pushf
or
sti
dec
dec
arpl
push
cli
sub
cmp
mov
out
push
xor
std
xchg
outsl
cli
xor
adc
push
jg
clc
mov
das
jno
dec
adc
cmp
rol
mov
adc
iret
dec
test
rorb
inc
or
add
stc
xchg
inc
ret
ficompl
test
and
sbb
stos
push
in
mov
hlt
into
insb
repz
sbb
add
xchg
inc
cmp
lds
aaa
popa
rorb
adc
add
pushf
push
decl
push
iret
arpl
push
push
pop
lods
mov
js
rclb
shll
divl
sbb
hlt
sub
scas
or
mov
or
xor
jne
dec
lret
lods
lods
push
mov
mov
mov
test
or
mov
lods
inc
push
push
add
jns
inc
jno
cmp
ja
and
lret
mov
cmc
das
xor
push
daa
loop
jns
push
push
jns
icebp
mov
cmp
xchg
jnp
pop
pusha
or
xor
xor
and
xchg
sub
cmp
jbe
aaa
push
ret
ljmp
mov
in
inc
push
aaa
lods
dec
inc
sub
pushf
aas
xor
insb
test
cmp
mov
dec
inc
dec
xor
mov
loop
push
pop
mov
or
jno
sbb
cmp
cmp
bound
xor
cmp
adc
jecxz
xor
divb
push
fs
jbe
sbb
mov
dec
ss
dec
mov
lahf
mov
xchg
jne
mov
xchg
mov
imul
push
dec
mov
adc
cmpsl
fs
and
xchg
xchg
ja
cmp
push
int
ret
test
mov
je
test
sub
mov
sarl
push
into
jecxz
popf
test
pop
ret
dec
insb
aas
adc
test
scas
push
test
int3
mov
rcr
and
leave
dec
cmp
cmpsl
mov
adc
mov
iret
xchg
mov
addr16
dec
pop
js
popf
enter
jno
cmp
pop
mov
xor
std
sti
divl
inc
pop
inc
popf
jmp
repz
push
pusha
push
pop
cmp
ljmp
aad
mov
jno
leave
inc
adc
jle
ret
repnz
inc
xor
imul
push
inc
sbb
pop
dec
xor
or
xor
mov
dec
rcl
jge
mov
dec
mov
je
dec
add
movsl
icebp
pushf
cmp
xchg
mov
rol
mov
add
xchg
mov
cmpl
das
pop
sarb
lret
test
adc
negl
loope
mov
dec
add
fidivrl
xchg
push
ljmp
test
movsl
push
sbb
xor
inc
inc
mov
mov
cmpsb
add
dec
fwait
and
cmpsb
or
sbb
stos
xchg
add
js
jae
xor
fs
cmp
dec
sub
and
js
cmp
inc
pop
xchg
sub
mov
mov
mov
xchg
jbe
xchg
dec
cli
jns
mov
mov
dec
xchg
cmc
std
test
xchg
call
fisttpll
lods
xor
int
gs
push
mov
scas
pop
bound
outsb
pop
test
pop
jg,pn
push
mov
lea
cmp
movsb
pop
sbb
sar
popf
aaa
jae
or
jp
insl
add
jo
cmpsl
inc
iret
xor
ja
cmp
pop
cmp
cmpsl
xorl
out
add
add
adc
jae
sbb
add
test
add
push
std
or
xor
pushf
cld
sbb
cltd
lods
subl
push
mov
into
mov
cltd
mov
push
mov
cmp
lock
and
pusha
dec
adc
cmp
repnz
shlb
sbb
test
rclb
das
dec
dec
dec
mov
adc
lods
cmpsl
push
je
lret
je
test
shll
or
movsb
mov
sbb
movsb
daa
sbb
int
adcb
inc
and
cwtl
iret
push
icebp
adc
js
adc
into
cmp
cmp
sbb
add
xor
lds
ds
aas
ds
sub
dec
es
jo
mov
add
jns
sbb
outsb
in
jbe
aad
addr16
mov
pop
pop
mov
mov
insl
popf
ss
icebp
push
dec
addl
jb
adc
cmp
push
inc
sbb
mov
ss
push
mov
idivl
popf
cltd
mov
mov
js
movzbl
sti
popf
mov
or
xor
rclb
mov
test
outsl
shll
dec
test
ret
inc
inc
in
mov
xor
andb
lret
aas
pop
add
cmp
and
shlb
inc
imul
jecxz
rolb
push
add
pop
test
xchg
and
int3
movsb
dec
or
sbb
aas
adc
mov
mov
jns
inc
divl
sarb
ss
mov
mov
xchg
mov
cs
or
mov
addr16
ja
fstl
cmp
vmovapd
inc
jmp
pop
insl
lds
sar
ljmp
imul
inc
lahf
add
int3
mov
xlat
aas
inc
loopne
outsl
sbb
xor
sbb
dec
inc
loopne
pop
mov
clc
cltd
out
sbb
pop
push
into
pop
repz
xor
fwait
repnz
repnz
rorb
popa
xchg
cmp
jb
in
inc
js
add
mov
std
mov
test
jb
sbb
jb
push
jns
push
call
jno
sbb
jle
ljmp
gs
popf
cltd
push
imul
movsb
inc
and
into
mov
lock
rorl
icebp
sbb
and
lock
mov
mov
mov
test
add
sarb
sbb
nop
dec
add
adc
lret
scas
sbb
sub
mov
mov
iret
mov
repnz
cmpsl
dec
jb
push
addr16
ret
add
loop
insl
test
push
sbb
clc
iret
jnp
jb
sub
ss
call
dec
xor
in
loop
icebp
mov
dec
test
cs
call
pop
push
xor
stos
push
nop
xchg
dec
enter
jns
lret
sbb
iret
int3
sahf
jl
aas
xlat
out
dec
addr16
stc
lret
xchg
dec
push
shlb
popf
je
jb
clc
scas
sahf
rcl
mov
xor
es
push
cmpsb
hlt
std
pop
in
mov
mov
cmp
inc
fisubl
adc
push
and
inc
xorb
sarb
lods
lcall
enter
mov
push
or
jmp
pop
mov
xor
inc
sbb
mov
sahf
pop
xlat
push
xorb
ja
jbe
jno
testb
mov
stc
xor
adcl
mov
or
popa
test
pop
jnp
inc
test
jns
addr16
filds
orl
movsl
sbb
rclb
push
fldenv
or
dec
push
jle
jmp
xor
popf
subb
insb
dec
adc
and
inc
sarb
mov
test
jne
imul
cmp
sub
or
rol
insl
test
push
mov
popf
adc
enter
push
mov
inc
push
out
jmp
pop
mov
sbb
xchg
mov
cmp
lea
cli
cmp
jp
mov
pop
push
push
ljmp
clc
mov
ret
dec
imul
mov
js
cmp
stc
aaa
mov
lea
xchg
pop
sbbl
fdivs
sbb
cmp
mov
std
fcom
test
out
sti
sbb
jbe
push
sbb
cmpl
adcl
aam
dec
je
aam
stos
xlat
mov
ret
out
andl
cltd
adc
mov
inc
pop
mov
push
lods
andl
jns
ja
dec
and
iret
stos
pusha
pop
and
jmp
jbe
push
pop
jnp
mov
and
push
test
insl
cld
into
aad
cmp
inc
add
adc
push
pop
lds
xor
ds
les
push
xchg
cmp
add
or
jl
leave
pop
clc
fnstcw
sbb
xlat
xor
mov
sub
ret
jle
jp
nop
flds
add
mov
adc
cwtl
bound
mov
xorb
int3
dec
jno
or
iret
xor
lret
inc
lret
int3
inc
dec
into
mov
test
mov
movsl
xor
adc
jae
xor
sbb
imul
fcmovnb
pushl
cmp
sbb
sub
test
std
testb
mov
cli
imul
or
ficompl
fmuls
fcmovnb
inc
out
cli
inc
push
iret
add
shrl
pop
adc
ret
mov
inc
aad
jmp
mov
push
or
or
cmp
sub
fucomp
jbe
dec
imull
cmc
jno
jno
popf
or
xlat
out
test
test
ja,pt
dec
push
mov
je
sub
rolb
dec
nop
sti
push
mov
sar
pop
push
adcl
push
loope
pop
mov
sbb
lods
out
sbbb
movsl
sub
scas
mov
jecxz
movsl
xchg
adc
mov
or
jmp
and
xor
jle
int
cmpsb
adc
xor
loop
push
lds
xor
pop
stos
mov
bnd
pusha
mov
jmp
xchg
xor
lret
xor
add
pop
or
ds
jo
mov
jge
push
pop
lret
pop
in
ret
lds
cvtpi2ps
xor
or
jle
pusha
dec
xor
mov
mov
int
nop
xor
scas
out
loop
popf
pop
jg
mov
xchg
xor
lea
cld
imul
rclb
cmpsb
dec
cmp
imul
or
mov
push
inc
shll
setbe
push
xor
mov
add
mov
mov
jae
ret
or
test
jbe
mov
adc
repz
sub
cmp
push
insb
cmpsb
dec
int
lock
jp
repz
repz
std
push
mov
testb
xlat
popa
xchg
fimull
cmc
pop
gs
out
iret
mov
cmp
cmp
jno
inc
push
adc
sbb
ss
clc
push
jge
sub
jle
pop
cmp
pop
testl
aad
xor
outsb
in
mov
cmp
ja
insb
outsb
and
xchg
xchg
adc
shrl
xor
or
xor
jg
adc
dec
adc
mov
inc
cmpsl
or
into
mov
inc
jg
jne
insl
sar
jnp
xor
inc
std
repz
mov
lcall
pop
and
add
xchg
inc
mov
test
jl
leave
mov
movsl
jp
pop
cmp
jnp,pn
lds
popa
sar
and
sbb
into
call
xor
cmp
cmp
sub
jae
enter
push
iret
outsl
lock
imul
dec
xor
ja
dec
iret
push
imul
cmpl
pop
push
popf
and
push
mov
jmp
push
pop
inc
and
push
cmp
ret
sti
cld
lahf
xchg
iret
pop
sub
jg
push
mov
cmp
mov
sub
push
push
cli
sbb
jl
cmp
mov
call
mov
pop
mov
mov
adc
leave
inc
mov
sti
notl
je
hlt
xchg
sbb
fs
push
bound
dec
xchg
aad
daa
sti
xchg
push
pop
es
dec
fdivr
jg
adc
jbe
cmp
or
lret
test
or
inc
fsubrs
je
sbb
aam
popf
push
jp
or
mov
lret
mov
add
in
stos
jns
arpl
inc
mov
stos
mov
mov
pop
aaa
mov
mov
cs
es
out
sarl
in
nop
dec
or
mov
popa
mov
insl
or
mov
testl
pop
mov
or
popa
cli
pop
pop
inc
jae
push
sub
lock
loop
inc
pop
pop
xchg
pop
mov
popf
out
pusha
lea
jb
hlt
gs
aad
inc
addb
add
popa
lods
jb
push
ljmp
mov
sub
adc
cmp
mov
shl
push
mov
or
mov
stc
pop
test
or
repz
int3
or
jg
loope
fwait
test
sub
dec
sbb
inc
push
xchg
rcl
sbb
xchg
lahf
jnp
orb
addps
and
pop
cmp
mov
pop
pop
ja
push
les
cmp
xor
bound
xor
jns
cmp
jb
fisttps
xchg
jp
loope
cmpsb
jmp
and
xor
inc
pop
mov
push
test
mov
in
enter
cltd
insl
cmp
lret
jmp
leave
add
mov
mov
xchg
mov
mov
xchg
and
addr16
add
std
out
jae
mov
xchg
dec
jecxz
and
ljmp
in
add
jg
sub
sub
and
test
je
dec
scas
inc
outsb
dec
mov
ficomps
orl
pop
or
pop
sbb
mov
inc
cmpsl
inc
mov
out
mov
cli
arpl
xor
adc
imull
imul
sub
les
pop
cmp
inc
dec
jnp
mov
pop
mov
dec
stc
in
pop
xor
jle
pop
push
xor
dec
cli
mov
sar
push
jmp
add
sub
cld
movq
imul
fwait
jmp
jmp
pop
cmp
cmp
mov
mov
cmp
cmp
mov
loope
and
jae
mov
inc
lret
push
mov
mov
jle
leave
js
mov
sub
add
jno
lret
sbb
test
jns
sarb
xchg
fnstcw
cmp
and
push
daa
fbld
pop
rclb
movsb
rorl
pushf
lods
cmpl
pop
mov
mov
cmp
jno
cmp
fcmovu
imul
xlat
mov
jne
mov
inc
sub
pop
lret
rorb
dec
iret
push
subl
mov
jmp
adc
cmp
jmp
adc
sbb
ja
arpl
xchg
aaa
sbb
xchg
xchg
or
bound
inc
jecxz
loope
sar
push
testb
inc
xchg
mov
push
addl
divb
inc
test
xor
dec
addr16
in
cmpsl
popf
jmp
test
or
cmc
in
push
push
clc
hlt
or
add
inc
popl
lods
std
clc
loope
pop
in
add
fdivrl
stos
jns
fucomi
add
pop
outsl
jbe
loopne
ds
andb
shll
cli
mov
jl
jecxz
outsl
dec
xor
xor
inc
xor
dec
cs
and
jecxz
adc
inc
roll
loop
movsb
lcall
pop
sub
push
ljmp
pop
push
mov
dec
lea
inc
cli
inc
cmp
xchg
cs
dec
jno
stc
xor
jns
nop
pop
pop
push
jmp
fmull
repz
jp
jne
imul
movsb
xchg
adc
mov
ss
insb
icebp
nop
cld
out
stc
xchg
in
icebp
push
cmp
stos
jne
inc
test
or
sub
je
push
cmp
daa
ljmp
outsl
mov
xor
aad
ret
repnz
inc
cmp
push
mov
nop
into
test
insl
pop
jno
mov
mov
mov
into
jno
inc
mov
pop
mov
jge
push
icebp
mov
or
mov
jle
mov
lret
push
xor
push
ret
jne
in
jnp
xchg
inc
inc
lret
xchg
test
jmp
mov
fdivrl
jbe
mov
icebp
cmp
dec
movsl
daa
test
dec
cmpsl
cli
dec
add
dec
cli
call
xor
add
or
popa
in
aaa
push
jo
sub
in
or
int
loopne
lret
dec
mov
mov
cmp
dec
push
dec
ss
aaa
dec
cmp
jge
lahf
mov
dec
clc
pop
inc
jno
xchg
sub
or
sarl
pop
xor
cmp
movsb
cs
cmc
adc
jecxz
rorl
popa
cltd
sub
mov
outsl
ret
push
or
cmc
inc
or
mov
pop
cmp
sbb
add
pop
sbb
jmp
push
add
in
cmp
push
sub
enter
data16
in
icebp
in
jecxz
cmc
insb
imul
or
sarl
fmull
xchg
repnz
imul
mov
sbb
pop
cmc
out
decl
addb
in
sti
inc
jmp
mov
lret
inc
mov
cld
cmp
outsl
mov
sub
mov
dec
test
clc
push
mov
int3
lds
mov
int
dec
cmpsb
mov
xchg
sbb
lea
or
cmpsb
push
push
push
mov
xchg
test
mov
and
lods
lods
dec
pop
pop
pop
aad
pop
jge
in
stos
fadds
pop
insb
jno
sub
inc
dec
iret
daa
sub
popa
push
mov
pop
or
stc
lahf
jl
jb
xorl
jae
xchg
pop
fistpll
pop
mov
mov
jo
xorl
lea
int
push
imul
mov
in
aaa
push
pop
or
adc
inc
mov
xor
and
pop
dec
mov
leave
pushf
xchg
xchg
aaa
int
or
adc
jmpw
adc
dec
push
dec
hlt
mov
lcall
xchg
add
dec
aaa
xchg
cmp
dec
mov
jne
lret
push
sub
pop
pop
jge
or
pop
jae
loope
out
or
mov
decb
stc
jge
mov
lock
daa
sti
cmpsb
pop
lods
add
jno
pop
mov
jno
mov
dec
scas
bound
test
scas
lods
sbb
xor
sti
in
arpl
mov
ja
mov
dec
and
dec
lods
push
xor
fs
fs
cmp
push
mov
pop
dec
mov
fs
and
ret
shll
mov
dec
cwtl
cld
movsl
rclb
cs
sub
hlt
pop
movsb
cmp
add
shll
cmp
or
adc
dec
mov
xor
addr16
xchg
cmp
fabs
mov
push
adc
mov
rcr
clc
push
jb
or
push
aaa
xorl
gs
cmp
dec
push
scas
popl
sbb
cmpsb
adc
sub
jp
mov
cmp
mov
jp
rclb
insb
incl
mov
out
popl
movsl
lea
sub
cmp
cmp
mov
and
dec
dec
dec
dec
cmp
xor
adc
cmp
mov
outsl
ucomiss
xor
shrb
cli
sub
inc
push
outsl
hlt
pop
loope
jae
call
inc
cmpsl
test
pop
add
imul
ja
out
xchg
scas
xchg
sub
xor
xor
repz
imul
stc
inc
jno
cli
int
lds
mov
cli
sub
cmp
imul
in
call
lret
mov
cmp
pop
sbb
test
cmp
and
mov
cmp
jns
out
inc
jg
xchg
dec
inc
mov
push
sub
xor
hlt
push
cmp
out
das
dec
dec
pusha
notb
je
jns
out
int
pop
out
paddusb
or
pop
jae
xor
fnstenv
xchg
into
out
pop
loope
ja
insb
pop
cmp
popa
xchg
jmp
lret
test
or
out
fcmovnu
jbe
daa
xorb
scas
xchg
mov
cmp
aaa
mov
jno
jae
cld
xchg
and
leave
outsl
sub
and
xchg
dec
mov
shll
adc
notb
add
push
jmp
addr16
jno
push
mov
repnz
hlt
adc
out
xchg
jno
push
imul
jno
arpl
or
popa
out
test
pop
sub
cs
xchg
je
aaa
pop
cmp
inc
lods
mov
ds
add
subb
lea
push
cmp
dec
or
and
jns
jno
ret
addl
xchg
imul
aas
jl
pop
call
pushf
jbe
jns
lods
cmp
mov
ds
ljmp
adc
push
jmp
repz
test
adc
lods
in
gs
rclw
push
imul
push
mov
or
xor
cmp
imul
icebp
test
stos
cld
pusha
repnz
xor
addr16
cmc
xchg
aas
xchg
sub
xchg
sub
into
pop
mov
jns
dec
aam
daa
push
lret
sbb
pop
and
repnz
in
jbe
daa
pusha
pop
in
in
xchg
popf
xor
xchg
mov
cmpsb
inc
orl
jno
mov
xchg
sbb
push
mov
jnp
mov
test
test
test
mov
xor
dec
cmp
outsl
mov
cmp
stos
or
dec
icebp
adcb
orb
insb
xlat
gs
test
sbb
jnp
lret
mov
movsl
and
jnp
outsl
mov
sahf
sbb
fcomps
inc
hlt
leave
shll
pop
jns
stc
mov
movsl
dec
movsl
fcomps
and
mov
icebp
mov
in
mov
flds
add
fcomip
push
sub
outsb
and
insl
imul
orl
dec
inc
int
aad
scas
xor
push
mov
in
xor
mov
xor
pop
jne
mov
stos
xor
hlt
das
lret
arpl
sub
mov
push
jp
xor
cmp
mov
pop
jmp
xchg
icebp
mov
cmp
dec
mov
xchg
mov
pusha
xchg
adc
mov
aaa
cli
sub
push
dec
ss
mov
rcrl
aas
push
cwtl
hlt
fwait
dec
movsb
shrb
adc
push
mov
dec
div
mov
xor
out
mov
repz
cmp
push
mov
mov
jo
sti
adc
push
aaa
xchg
push
mov
pop
gs
ss
enter
pop
int
insl
aaa
cmp
ret
lods
inc
imul
lods
pop
push
cli
jmp
cltd
lret
pop
scas
stc
mov
pusha
adc
es
pop
dec
mov
adc
xor
fs
pop
int
xor
xor
mov
mov
xor
divl
enter
inc
out
jns
jno
pop
fcmovb
pop
add
and
sub
decl
rclb
orb
nop
fisttpll
add
jno
in
pop
nop
jbe
pusha
cli
subl
ljmp
jl
xchg
imul
imul
pop
addr16
push
inc
cmpsl
cli
cmp
aas
mov
pop
insb
xchg
jns
popf
popa
sub
dec
cmp
push
pop
cli
xor
leave
out
stc
fbld
std
sub
dec
sbb
scas
into
sarb
lret
fwait
jne
insl
sub
aas
and
jae
ret
push
shl
push
add
data16
cs
lds
jnp
lret
adc
movsl
bound
fs
mov
mov
jg
out
shrl
or
dec
inc
inc
cmp
pop
lahf
repz
pop
aaa
push
mov
push
out
lcall
out
bound
dec
mov
push
ja
daa
test
sahf
mov
inc
int
sub
pop
cmpsb
mov
jb
aam
cld
jno
cmp
icebp
push
inc
xor
dec
pop
adc
cmp
jge
pop
insb
xor
or
and
jo
push
ret
push
movsl
and
dec
aaa
out
es
jno
dec
mov
jno
jbe
popa
or
out
cltd
cmp
or
js
mov
push
repnz
cmp
dec
push
aas
ss
dec
aam
dec
aaa
data16
dec
aaa
mov
pop
cmp
lea
lods
sti
aaa
cmpsl
and
pusha
mov
mov
lods
mov
cmpsb
adc
and
xchg
ljmp
in
loope
mov
pop
push
jno
cmp
xchg
fnstsw
jno
cmp
cmp
int3
inc
insl
push
or
xor
js
xchg
cmp
inc
pop
push
jns
push
addb
cmp
stos
sti
lods
mov
fistl
movsl
dec
je
js
ret
dec
jg
in
aas
cltd
inc
push
add
mov
dec
dec
fisttpl
mov
in
sahf
sbb
dec
popa
xor
pop
adc
out
jp
dec
adc
jnp
inc
fs
mov
mov
and
insl
scas
and
xchg
inc
jne
xor
fistl
andl
cmpsl
sbb
in
mov
push
test
js
jecxz
movsl
add
inc
lcall
push
mov
inc
lds
addr16
cmpsb
imul
adc
xchg
call
ret
jne
rep
dec
ss
dec
movaps
xor
out
enter
test
daa
mov
dec
pop
cmpsl
test
add
lds
imul
push
jo
sbbb
std
data16
pop
sbb
jbe
addr16
push
cmpsl
sbbl
mov
imul
rcrl
pop
mov
sbb
hlt
aad
inc
stos
in
dec
mov
loopne
xchg
test
push
push
sti
push
mov
cmpl
and
push
dec
testb
mov
pop
or
lcall
pusha
sbb
gs
and
and
jnp
inc
scas
aad
adc
fcoml
push
mov
mov
sti
lods
cmp
jle
cltd
aaa
and
cltd
enter
push
and
xor
dec
pop
fcoml
cwtl
stc
pop
lcall
push
dec
pop
jmp
gs
icebp
dec
daa
out
inc
adc
sub
cmp
insl
fiaddl
xchg
and
xchg
addb
xchg
sub
jp
push
jg
out
sub
cmp
incb
cmpsb
inc
inc
mov
cmpsl
cmpl
sub
rorl
jmp
cmp
inc
cltd
fwait
sbb
xor
sbb
pop
adc
cmp
aas
ljmp
add
jb
aaa
cmp
sub
or
add
add
stc
jno
or
xor
inc
daa
ss
ja
or
jne
push
xor
stc
add
push
and
je
in
js
je
inc
sub
mov
cmp
mov
in
jae
daa
fldenv
cli
jne
shl
test
ljmp
rcr
shll
mov
jp
mov
sub
ja
push
mov
mov
lds
stc
lret
in
jb
andl
inc
mov
inc
ja
scas
pop
xchg
dec
push
shll
imul
or
xor
cmp
mov
sub
add
test
cmp
enter
pusha
popf
push
les
into
dec
out
xchg
outsl
mov
pop
cmp
je
xor
jecxz
gs
cli
fcomps
fistps
stc
hlt
out
dec
in
cmp
cmpsl
jns
je
inc
cmp
mov
sbb
xchg
cmpsl
jno
push
mov
xor
mov
addr16
aaa
add
push
xor
mov
sub
push
jp
xor
inc
mov
jp
insb
jnp
in
in
xor
clc
lea
mov
test
test
and
jns
movb
nop
jl
dec
test
mov
mov
sub
sbb
dec
filds
int3
testl
add
or
test
inc
lea
mov
dec
dec
push
push
jb
dec
imul
pop
test
sbb
outsb
ja
lods
jmp
cmpsb
xor
pop
push
push
aam
aas
xor
leave
out
adc
cmp
sub
jae
ljmp
pop
daa
and
subl
push
lds
push
push
sub
pop
push
jp
xor
mov
lds
sub
mov
jnp
xor
into
xchg
jle
jge
repnz
pusha
jge
lea
pusha
push
jo
stc
cli
push
add
popf
push
dec
pop
inc
mov
push
sbb
shll
or
push
test
sub
inc
daa
mov
or
daa
jl
push
aad
sbb
mov
ds
xor
add
popf
fisubrs
in
aam
jno
fs
cmp
mov
insb
dec
cli
jns
mov
mov
sub
xor
jp
xchg
sbb
lods
cmp
pop
and
gs
ds
jae
push
out
adc
test
jmp
sbb
xchg
cmp
dec
fstpt
add
fldt
inc
sbb
aam
das
addr16
inc
sbb
dec
lret
xor
addb
mov
mov
jne
imul
cmp
mov
sbb
fcomi
daa
stc
in
push
mov
mov
dec
fcmovnbe
imull
stos
int3
xchg
cmp
xor
scas
push
loopne
out
or
push
xchg
fucomip
cmp
inc
pushf
test
dec
dec
pop
mov
push
sub
stos
mov
stos
xor
out
pusha
sub
mov
addl
ficomps
add
mov
je
pop
lahf
cmp
jb
cmc
xorl
cmp
daa
cmp
cmovge
scas
mov
lods
push
pop
icebp
fadds
push
mov
inc
pop
add
test
xchg
aad
mov
jne
enter
jp
scas
jmp
test
xchg
test
pop
xchg
mov
inc
ficoml
out
and
add
pop
mov
adc
lahf
jbe
clc
dec
pop
out
mov
jbe
call
int
add
enter
jae
aad
or
out
jge
loope
hlt
sbb
jns
lahf
orb
adcb
jns
cmpsl
dec
push
jno
dec
xlat
pop
cmpsl
jp
stos
sti
xchg
push
int
sbb
inc
xchg
iret
mov
cmpsl
and
mov
int
cmp
gs
pop
shll
mov
dec
cmp
jns
add
arpl
insb
movsb
iret
adc
pop
dec
jnp
push
jns
pop
push
inc
ficompl
movb
pop
push
daa
jnp
jl
xchg
cmp
push
xor
stos
pop
test
mov
repz
pop
ljmp
and
push
test
pop
jae
jns
mov
cmp
and
adc
cmp
hlt
cld
adc
pop
sbb
cli
inc
inc
cmp
push
xor
xchg
rcl
enter
add
inc
cmp
repnz
fadds
aas
lds
cld
fidivs
in
adc
shlb
ss
bnd
inc
aaa
mov
out
addr16
orb
adc
dec
jecxz
test
sbb
popf
or
nop
xchg
movsl
sub
lret
es
add
pop
jge
inc
or
je
xchg
inc
jno
inc
lds
mov
jge
xchg
addb
cltd
push
out
insb
add
mov
adc
cmp
sbb
test
adc
mov
arpl
mov
sub
nop
lcall
mov
inc
das
int
aaa
sar
cmp
inc
cmp
and
dec
jle
push
fwait
icebp
arpl
bound
movsb
scas
jne
pop
jp
imul
cs
mov
sbbl
xchg
xadd
aam
or
vorps
ret
test
or
scas
cmp
and
test
pop
fst
mov
sub
imul
ja
mov
mov
sub
subl
popf
outsb
sarb
or
addr16
rorl
jo
int
xor
imul
add
jb
inc
orl
push
push
xchg
sub
dec
pop
pop
stos
arpl
jmp
mov
xor
inc
xor
adc
jmp
inc
popf
and
out
sbb
int3
clc
xchg
cmp
mov
imul
stc
jbe
jp
ja
mov
pop
cld
push
mov
out
orl
dec
xor
ficompl
pop
push
dec
pop
icebp
push
fists
cmpb
push
inc
mov
scas
add
out
mov
mov
lock
into
xchg
and
fiadds
xor
jge
pushf
mov
mov
scas
adc
xor
sbb
pop
lret
test
jl
es
mov
imul
fistl
or
stos
pop
mov
or
xchg
cmp
and
xchg
push
inc
add
jbe
sbb
pop
imul
sahf
bound
cmc
pop
cmp
pop
loop
int3
mov
loop
or
inc
out
pop
iret
adc
iret
push
insl
into
jmp
cmp
ljmp
jl
push
sub
ret
jp
movsb
push
stos
gs
xor
cmp
inc
fisubs
mov
inc
pop
xlat
movl
or
dec
push
je
add
in
mov
out
add
test
add
leave
cmp
cmp
in
inc
int3
aaa
xor
push
xchg
mov
aaa
xchg
push
pop
popa
aaa
xor
dec
pop
cmp
gs
lds
sbb
push
cmp
scas
mov
stc
mov
femms
cmp
imul
insl
fnstsw
or
in
mov
cmp
sbb
pop
adc
push
fs
fcmovne
rclb
and
jnp
xor
xor
push
stos
daa
and
jo
mov
pop
int
pop
roll
cmp
inc
dec
shrl
adc
cmp
or
mov
dec
inc
jne
enter
arpl
insb
cmp
iret
sub
imul
push
push
mov
push
and
pop
mov
cli
lret
cmp
push
push
rolb
xor
mov
push
inc
jg
test
mov
insl
adc
mov
mov
xor
popa
cmpl
mov
xchg
shrl
jl
xchg
cmp
mov
insl
repz
jbe
sbb
loop
push
in
mov
shll
aad
dec
sarb
loope
adc
fnstsw
sar
add
sbb
or
pop
inc
dec
mov
mov
cld
test
insl
cmp
in
jmp
add
xchg
sbbl
jnp
test
insb
jge
pop
or
psubusw
adcb
dec
xchg
frstor
cmpsb
adc
cmp
dec
test
jle
mov
lret
mov
jbe
stos
fsub
in
xor
imul
mov
mov
xchg
bound
call
cmpsb
mov
mov
jg
lret
push
or
cltd
cmpsl
adc
push
shll
imull
mov
fldcw
push
icebp
popf
mov
or
out
rcr
xchg
mov
mov
add
mov
ficoml
lock
mov
mov
push
and
fstpt
pusha
lods
and
xor
mov
dec
jns
stc
int
inc
pop
call
pop
jg
and
add
out
or
pop
sbb
test
inc
icebp
shrb
test
std
scas
movsl
mov
out
inc
mov
pop
das
dec
ret
in
and
loop
data16
scas
jle
fcmove
ds
xor
test
ja
popa
xor
push
pop
ja
push
call
jl
sub
movsl
testl
aas
bound
cmp
sbb
std
cmp
dec
xchg
xchg
pop
mov
mov
mov
inc
clc
insb
jb
dec
aaa
cmp
push
test
rcrl
in
cmp
push
cmp
dec
test
shll
cld
or
movsl
shrl
das
fs
insb
sbb
fwait
inc
pushf
push
lea
jl
cmpsl
ja
push
add
adc
imul
rclb
mov
ja
xor
xchg
paddw
sub
cmpsb
mov
scas
mov
movsb
mov
orb
mov
jp
sbb
imul
test
outsl
mov
or
xchg
sbb
sbb
cmp
data16
lea
iret
pop
inc
cld
push
out
imul
jbe
sub
push
clc
mov
mov
ret
inc
rcrb
sarl
rcrl
stc
lds
or
push
sbb
adcb
push
pop
dec
addr16
popf
cmp
dec
stc
sub
pushl
add
jae
loopne
repnz
lds
movsl
push
jge
xchg
dec
shll
or
inc
loope
push
jge
add
ss
shll
mov
aaa
icebp
mov
fs
repnz
stc
inc
out
xor
lret
pop
loope
in
rcrl
push
cltd
pusha
shll
push
dec
mov
ja
je
call
sbb
dec
mov
dec
adc
adc
popa
inc
popf
push
jl
dec
pop
mov
dec
inc
insb
maxps
add
xchg
dec
out
nop
or
test
cmc
movsb
lea
mov
pxor
call
lret
ja
jno
adc
fstl
push
mov
sbb
shrb
lcall
sub
cmp
cmp
or
jecxz
test
push
xor
mov
cmp
add
pop
ss
xchg
adc
sbb
lods
mov
nop
xchg
cmp
inc
jmp
pop
cltd
test
sbb
mov
mov
mov
jns
test
lret
xchg
mov
jne
lret
cmp
mov
push
dec
sub
sarb
in
mov
xor
out
jbe
mov
xchg
into
dec
inc
or
mov
mov
push
test
nop
jne
jp
and
cmp
xchg
sub
test
stc
mov
mov
xchg
mov
or
js
cs
loop
stos
pop
mov
sub
int
cmpsb
rorb
and
cmpsl
cmp
jnp
int3
inc
mov
int
push
fwait
mov
xor
mov
jg
aad
or
or
outsl
inc
ljmp
lods
aas
imul
ret
cltd
in
mov
cmp
pop
pop
add
lret
pop
out
push
sbbb
test
xchg
dec
ja
jnp
cld
cmp
int3
iret
pop
jp
mov
lea
and
push
aam
aad
xchg
gs
mov
mov
lea
push
pop
xchg
cltd
mov
movsl
pushf
xchg
xorl
lret
popf
pop
pop
je
cltd
cmp
sub
jp
jnp
cmp
xor
xor
cmp
cmpsb
cmp
xor
jecxz
jmp
push
aad
int3
shl
cmpl
insl
jnp
mov
jno
mov
out
rcrb
push
mov
mov
out
test
std
cld
stos
ret
xor
xchg
jae
bnd
inc
roll
jle
icebp
hlt
stos
js
addl
cmp
arpl
cmp
adc
adc
mov
cmp
inc
stos
hlt
jg
imul
dec
mov
inc
cmpsb
xor
outsb
test
sub
aaa
rcrl
add
mov
loopne
shrb
into
arpl
ja
sbb
and
lea
sub
xor
or
jne
imul
jo
out
cmp
dec
bound
test
bound
sub
sbb
loop
or
rcll
addb
scas
jnp
jle
lds
cmp
pusha
dec
sbb
xchg
mov
mov
mov
jne
xchg
xchg
dec
mov
aas
inc
mov
pop
push
sub
add
mov
rorb
xchg
cld
dec
shrb
inc
imul
xor
mov
sbb
mov
popa
push
add
mov
xor
imul
add
lods
imul
insl
add
movsb
into
mov
cmpsl
xchg
jne
insb
fisttpl
mov
js
negb
adc
sti
test
inc
mov
fnsave
push
dec
xor
dec
push
pop
mov
mov
inc
sbb
lods
mov
adc
ds
push
jle
lahf
lods
test
mov
inc
cmp
xchg
pop
add
pop
cs
fcompl
aam
mov
jnp
icebp
ret
popf
test
mov
jbe
js
cmp
and
lea
pop
cmp
xor
outsl
cmp
call
push
movsl
jle
lcall
repnz
jno
jl
imul
xlat
and
push
jnp
push
mov
push
dec
mov
mov
ret
cmp
cld
rcrb
jle
sbb
mov
in
jnp
jge
mov
insl
mov
push
sbb
insb
dec
dec
mov
cmp
data16
xlat
gs
iret
stc
stos
push
jno
pop
repnz
or
mov
mov
jae
repz
rcll
out
cmp
sub
jae
imul
js
sub
xor
push
mov
cmp
jbe
push
add
stc
and
fld
js
push
jp
gs
jne
mov
dec
xchg
outsb
popf
xchg
mov
cmp
adcl
jmp
adcb
shl
mov
mov
fiaddl
xor
sub
mov
and
mov
rcl
push
gs
cltd
shrb
adc
out
pusha
mov
pop
outsb
ljmp
in
clc
sbb
cmp
in
push
jo
mov
mov
mov
dec
sbb
mov
xor
mov
fdivp
insb
ja
outsl
in
andb
mov
push
xchg
rorb
or
movsb
cmp
leave
sahf
pop
or
loope
scas
in
and
testl
aad
sub
imul
imul
out
mov
cmp
pushf
cmp
jns
mov
xchg
jnp
data16
mov
mov
inc
xor
xchg
lret
aam
dec
movsl
pop
jb
ja
mov
pop
push
mov
inc
dec
adc
add
push
cmp
out
stos
movsb
int
lahf
in
push
jp
rcll
divl
xchg
xchg
dec
scas
adc
mov
test
and
lea
lea
xor
scas
inc
mov
xor
mov
sbb
push
fs
lcall
mov
in
in
fsubs
adc
jo
inc
ljmp
push
xchg
dec
repz
and
mov
or
lds
xor
cmp
sub
imull
xor
sub
jl
inc
outsb
shrl
adc
sbb
loop
jbe
imul
xor
xchg
repnz
xchg
dec
or
xchg
popf
insb
dec
cltd
sarb
data16
xchg
mov
mov
lds
add
xor
in
js
mov
and
test
mov
xchg
lea
aam
fisubs
mov
aaa
imul
cmp
insl
adc
mov
loope
mov
cmp
dec
lods
insl
ret
jns
mov
sti
sbb
mov
xor
mov
andl
mov
or
test
mov
cmp
push
setne
push
xor
jge
pop
dec
xor
aaa
adc
test
sbbl
add
nop
cmpb
mov
gs
jge
ds
push
jo
cmpl
dec
imul
mov
addr16
mov
aaa
sbb
jp
sarl
sbb
bound
dec
icebp
mov
push
cmp
mov
push
inc
push
or
cmpsb
inc
jno
movb
popa
movsb
or
fdivrs
in
repz
loopne
mov
insl
push
dec
mov
mov
jne
nop
and
mov
push
mov
xor
int3
dec
sti
mov
outsl
ljmp
mov
or
je
pop
xor
push
jb
mov
xchg
insb
fnsave
mov
push
stc
sbb
pop
xor
outsl
mov
pop
adcb
inc
dec
xchg
push
mov
dec
or
pop
push
xor
lds
mov
cld
add
daa
dec
xor
fldenv
and
push
fisttpl
dec
mov
cmp
add
pushf
repnz
gs
cmp
xor
mov
or
and
inc
clc
sti
int
push
imul
mov
std
js
mov
std
push
xchg
std
gs
mov
sub
cwtl
dec
push
mov
aad
xlat
inc
arpl
scas
sub
cmpsl
ja
mov
cld
test
aam
and
push
mov
mov
dec
mov
adc
jb
inc
fstps
jp
xor
test
mov
loope
jno
jmp
test
out
adc
cmc
inc
hlt
ds
out
pusha
adcb
add
cmp
xorb
cmpsl
out
sbb
xlat
xchg
xor
sbb
mov
sbb
rolb
push
aas
sub
fwait
icebp
pop
mov
repz
add
dec
mov
and
xor
adc
je
sbb
lds
mov
inc
pop
sbb
frstor
repnz
inc
mov
cmp
jne
fdivl
xor
or
add
add
jnp
lods
in
cs
mov
or
mov
jge
add
stc
pop
sub
add
or
cld
add
xor
jno
lea
imul
mov
jp
jne
jnp
lcall
pop
inc
cli
rep
cld
add
jo
jbe
sbbb
mov
xor
cmp
push
das
pop
jecxz
inc
mov
clc
imul
repnz
mov
fisubrl
movl
xchg
mov
popa
outsb
int
ss
or
dec
mov
cmpsl
sbb
roll
or
add
popf
pop
push
pop
push
pop
imul
stos
fwait
add
jmp
cmp
inc
jns
aaa
addl
mov
cwtl
hlt
mov
jne
mov
mov
push
jbe
jp
subl
add
iret
stc
lods
addr16
jnp
test
xor
sar
into
lock
cld
pop
add
inc
outsl
je
jno
mov
aas
addr16
adc
xchg
push
mov
cmp
in
inc
mov
pushf
mov
aaa
ja
addr16
stos
lret
inc
pusha
sbb
rorl
pop
popf
cmp
call
jo
pop
cmc
cmp
mov
push
push
cld
notl
imul
dec
ret
test
dec
xchg
inc
imulb
dec
mov
sbb
shrb
mov
xchg
jbe
add
pop
pmullw
stc
in
mov
scas
xor
iret
loop
cmp
cmc
dec
testl
bound
inc
int3
or
testl
fdivrl
sbb
insl
gs
pusha
imul
aas
lret
sbb
pusha
inc
movsb
xchg
xchg
dec
psadbw
sub
cmpsl
bound
xchg
aad
loop
pop
push
mov
mov
repnz
mov
sbb
inc
lea
jnp
imul
and
xlat
push
out
and
nop
sbb
mov
test
addr16
loopne
out
pop
ss
decb
cmp
jbe
stc
fdivs
cmp
mov
lea
pop
mov
xor
xlat
cmp
nop
or
jmp
xlat
or
push
into
pop
inc
and
or
sub
lret
mov
mov
dec
mov
jg
cmpsl
mov
dec
sti
dec
adc
ffree
dec
out
hlt
shll
pushf
fcoml
arpl
enter
leave
adc
ret
ja
mov
dec
sbb
scas
lea
push
cmp
push
cmp
cmp
stc
push
sbb
dec
mov
adc
sbb
mov
mov
decl
ja
loope
pop
aaa
xchg
mov
push
sub
test
dec
dec
mov
pushf
mov
mov
scas
sbb
aam
push
and
pop
sbb
jle
popl
xchg
sbb
out
pusha
dec
call
dec
or
lock
aad
repnz
xor
pop
cmp
dec
add
and
leave
cwtl
fxtract
out
jae
mov
out
stc
inc
pop
mov
add
jl
mov
decb
movb
jno
out
fisttpl
pushf
pop
fwait
xor
cltd
cmp
lret
call
iret
push
stos
xor
lahf
in
shl
pusha
inc
and
insb
mov
xchg
mov
or
loop
dec
mov
call
fsubrs
arpl
jnp
xchg
imul
fldl
loope
imul
jo
pop
or
les
xchg
dec
fisubs
aas
xchg
jmp
cltd
sbb
push
add
mov
jae
fbstp
dec
inc
add
test
test
dec
insb
mov
push
imul
imul
adc
mov
push
ljmp
loopne
stos
push
fistps
pop
xchg
xor
push
dec
push
scas
outsl
cmp
sub
stos
gs
inc
xor
mov
adcb
sub
mov
lods
lcall
pop
out
jne
lods
stos
addr16
aaa
mov
hlt
xor
push
sub
or
loopne
mov
je
sub
clc
jg
lcall
out
test
sub
xor
mov
jecxz
jnp
push
pop
adc
lea
insb
insl
cmp
mov
add
or
ret
mov
adc
jb
ss
bound
scas
lods
cmp
aaa
insl
jbe
lret
sbb
cmpsl
jno
daa
mov
or
roll
mov
aaa
cltd
movsl
and
add
icebp
pop
pop
jmp
dec
jl
into
push
cltd
je
mov
cmpsl
clc
mov
dec
adc
mov
iret
jb
imul
sbb
sbb
mov
mov
repz
fwait
in
mov
cwtl
xchg
test
popa
add
je
xor
in
aaa
xchg
mov
jge
sub
mov
push
mov
sub
mov
popf
inc
push
jle
fnstsw
repz
xchg
mov
push
jne
pop
xchg
clc
cmp
test
loop
pusha
in
sbb
cmp
xchg
inc
and
dec
sbb
aad
or
push
cmp
cmp
leave
mov
dec
jno
adc
mov
inc
cltd
subb
inc
or
push
mov
cmp
dec
lea
sub
es
repnz
lret
test
inc
shll
dec
inc
jle
mov
mov
test
insl
push
mov
dec
mov
pop
dec
jge
cltd
cmp
jbe
clc
cmp
test
dec
divl
xchg
mov
shlb
mov
pop
and
aam
cmp
fistl
lds
lods
int
dec
push
xchg
inc
mov
inc
adc
aaa
adcl
cmp
adc
pop
dec
add
mov
insl
xchg
lret
lds
arpl
push
in
xchg
repz
jmp
sbb
popf
jne
pop
cwtl
pop
adc
rep
rorl
xor
add
movsl
scas
bound
subb
test
std
jl
cld
push
and
adc
int3
inc
dec
push
fwait
and
inc
or
fwait
sbb
in
cmp
gs
xor
cmovnp
mov
mov
xchg
dec
movsl
pop
out
js
daa
dec
cmpsl
dec
aad
outsl
cmp
fsub
xor
mov
shr
sbb
jle
mov
stos
test
inc
iret
sub
jge
jmp
cmp
ds
mov
mov
jle
jge
inc
mov
insb
iret
clc
imul
testb
xor
cmp
jbe
mov
frstor
mov
cmp
or
hlt
xor
sbbl
adc
and
and
sub
fdivr
outsb
sub
addr16
test
aam
push
imul
rorl
push
ret
insl
add
dec
push
pop
subl
lcall
movsb
sti
adc
roll
loope
shlb
inc
jp
int
inc
push
jno
or
popf
add
xchg
and
pop
mov
adc
mov
stc
xor
test
jb
and
push
mov
cmp
xchg
dec
and
inc
addr16
cld
xor
or
in
aam
sub
pop
inc
push
mov
iret
pop
jp
sbb
add
test
insb
xchg
int
lahf
shll
inc
test
lds
fistpl
jnp
addr16
lds
jp
outsl
mov
dec
pop
pusha
add
inc
dec
leave
jecxz
jge
jne
jns
gs
icebp
adc
sub
inc
adc
iret
stc
adc
mov
mov
movsl
mov
pop
xor
or
int
ja
out
or
fstps
sbb
in
ds
jl
add
mov
filds
gs
pop
fs
jmp
mov
ljmp
dec
jne
push
or
jns
mov
mov
lret
jb
imul
xor
xor
data16
mov
divb
or
cmpsb
fwait
scas
cld
pushf
outsl
add
mov
sbb
jne
cmp
xchg
in
icebp
inc
mov
jl
int
pop
push
fimull
xor
and
out
push
add
pop
into
jmp
and
sbb
push
imul
xchg
aas
xchg
hlt
or
dec
data16
mov
aas
fwait
cmp
or
adc
add
pushf
cmp
loop
dec
lcall
lds
and
and
pop
stc
xor
movsl
scas
xchg
push
stos
mov
mov
mov
and
sbb
pushf
jns
leave
pop
dec
scas
fnstsw
je
cltd
dec
pop
aaa
cmp
js
jae
test
mov
mov
jge
stos
push
mov
add
xor
cmp
mov
mov
adc
sbb
sti
add
lcall
push
sbb
stos
inc
pushf
imul
rcrb
je
aad
jno
push
dec
or
dec
xor
lea
mov
ljmp
test
stc
pop
ftst
bts
inc
dec
jmp
add
or
imul
mov
dec
sti
pop
adcl
xor
adc
cmpsl
adc
insb
cmp
fnstenv
popf
aas
seto
mov
fdivs
fildll
jne
xor
int3
lret
push
sub
xchg
test
in
jne
sub
repnz
imul
xchg
cmp
lods
stc
cmpsb
std
sub
jecxz
lret
jg
lahf
cmp
sbb
fwait
inc
aad
mov
mov
cld
pop
dec
shll
ss
ja
stos
xor
repnz
cmp
lahf
imul
push
xchg
mov
scas
hlt
xor
and
pushl
push
ss
xor
mov
adc
mov
rolb
push
mov
mov
inc
lret
lds
scas
ja
jbe
int
mov
or
add
hlt
xchg
call
cmp
inc
jg
push
jns
push
cmp
stc
repnz
push
jmp
cmp
mov
jle
mov
loope
xchg
jge
int
push
or
cmpsl
sbb
push
sbb
and
or
push
int3
mov
xor
jno
dec
mov
loopne
push
stc
insl
test
dec
out
cmpsb
mov
mov
cmp
leave
cmp
mov
jae
sahf
mov
enter
mov
and
divl
repnz
jns
xchg
je
out
test
test
dec
pop
xchg
orl
addr16
jbe
popf
fnstenv
and
fildll
dec
push
lds
gs
arpl
inc
pop
cmp
inc
lret
out
cmpsl
inc
int3
rol
cmp
repz
sbb
mov
dec
pop
jmp
mov
pusha
mov
js
mov
loop
rcrb
inc
mov
jmp
fmul
push
or
cmp
mov
into
mov
xchg
sub
pop
cld
xchg
mov
mov
out
and
add
pop
adc
push
add
add
push
jb
mov
dec
sub
push
test
repnz
jl
addr16
sbb
add
adc
leave
repnz
sti
mov
adc
icebp
or
push
jl
pop
jno
insb
cwtl
pop
loop
dec
add
mov
mov
mov
aaa
popf
mov
and
mov
xor
arpl
cmp
sub
xchg
inc
repnz
xorl
mov
and
subl
ds
inc
add
jne
out
int3
lahf
cmp
sub
test
inc
lods
mov
aaa
mov
adc
stc
aas
popf
push
pushf
mov
cmp
jg
fchs
int
clc
adc
pusha
pop
dec
test
sbb
sub
jb
sbb
aas
outsl
cli
hlt
inc
scas
sbb
nop
xor
mov
mov
pop
mov
adc
adc
lret
std
into
mov
xor
notb
mov
dec
inc
dec
xchg
int
rorb
lahf
test
int
inc
int
push
xchg
and
mov
stc
pop
mov
xor
out
mov
out
test
inc
sbb
rol
pop
jl
outsb
mov
adc
inc
mov
rclb
mov
dec
ja
push
inc
xor
ja
cld
inc
jbe
sbb
lods
jecxz
inc
rolb
fisubrs
out
xor
xor
sub
cmp
cs
js
cmp
xchg
nop
adc
cmp
jno
mov
cmp
or
lock
fmulp
shl
enter
shlb
fwait
mov
mov
ret
sbbl
jge
repz
enter
jbe,pn
jb
push
dec
adc
mov
adc
int
mov
inc
add
loope
sbbb
repz
into
leave
lret
push
and
idivl
mov
cmp
test
fwait
es
cmpsb
or
inc
addr16
jno
xor
add
mov
dec
mov
push
loop
xor
lock
sbb
push
push
add
adc
cli
mov
xor
dec
dec
das
scas
mov
movsb
or
ss
clc
dec
aad
fisttps
adc
mov
dec
pop
adc
inc
lret
cmpsl
int3
pushl
sbb
mov
inc
cmp
cmp
inc
scas
cmp
imul
mov
mov
xor
in
lock
inc
mov
leave
imul
mov
movsl
insb
mov
sub
mov
ljmp
mov
sbb
imul
jp
test
lcall
mov
les
dec
outsl
adc
push
mov
imul
lds
pop
push
or
mov
inc
jg
mov
cmpl
or
test
in
clc
sbb
pop
fwait
hlt
mov
mov
inc
mov
push
add
add
mov
data16
cmp
or
rorb
popf
outsb
jl
aas
int3
imul
mov
js
roll
or
mov
sarl
addl
and
and
push
leave
pop
enter
lods
repz
arpl
mov
sbb
aas
pushf
call
and
pushf
faddl
and
mov
pop
sarl
jb
add
movsb
cmp
cmp
inc
bnd
pop
push
lret
xor
xor
gs
mov
cmp
xor
nop
les
xchg
push
popa
arpl
cmp
sbbl
or
iret
scas
ret
inc
pusha
xorl
rorl
test
pushf
int
sub
mov
enter
sbb
nop
pop
movb
data16
rorb
sbb
pop
clc
ja
xchg
pop
insb
imul
push
xchg
test
fwait
nop
push
adc
add
popa
popa
dec
je
loopne
jle
stos
fldt
push
mov
jae
sbb
inc
xor
out
jl
flds
ds
cli
pop
aaa
adc
xlat
inc
lret
lods
out
in
stc
lock
or
xchg
adc
mov
addr16
jmp
mov
jno
aaa
repnz
cwtl
adc
add
sbbb
cs
fcomi
icebp
or
xor
insb
scas
cltd
inc
pop
lods
inc
popa
out
jns
fmul
nop
dec
imulb
sbb
adc
push
or
sahf
ret
fiadds
inc
clc
and
je
mov
daa
pop
movb
jns
cmp
andb
repz
inc
push
or
add
xor
mov
inc
or
fwait
lcall
sub
pusha
frstor
pushf
cltd
jg
aas
mov
inc
cmpsl
shll
pop
push
test
dec
lret
xor
xor
negb
jg
mov
ljmp
xchg
cltd
std
gs
es
mov
pop
mov
aad
mov
fwait
pushl
lret
push
lea
adc
dec
jle
insl
xchg
cmp
cmpl
cld
xor
cmc
or
insb
or
push
pushf
pop
ds
jle
jbe
dec
pop
shrl
sub
shll
sti
jbe
sub
mov
and
in
in
pop
in
cld
imul
cmpsb
sub
cmpsb
out
in
pop
xor
aaa
sahf
pop
scas
or
mov
jbe
repz
xchg
in
mov
and
inc
mov
iret
scas
jp
shl
push
and
push
dec
push
mov
insl
cmp
cld
cmp
dec
xchg
cmp
bound
lods
and
imul
xor
insb
clc
aad
xchg
js
aad
push
rorl
xchg
bound
push
or
jle
sbb
sub
ror
xor
popf
and
mov
or
test
or
jne
jle
out
addr16
mov
ja
push
dec
cltd
rcll
dec
mov
lea
pop
ss
push
xchg
js
mov
xor
cli
pusha
inc
rorl
fcmovne
xchg
dec
inc
cmp
addr16
inc
xor
cmp
test
mov
cltd
push
adc
cmp
sbb
adc
push
or
fdiv
mov
add
and
aas
ss
dec
lods
sti
push
aas
enter
andl
or
iret
xchg
mov
dec
lret
ljmp
pop
jb
jb
lea
mov
in
xchg
leave
push
mov
dec
jae
add
push
lock
mov
lods
lock
dec
sti
mov
jg
mov
adc
mov
mov
mov
out
cmpsb
xor
ljmp
dec
cmp
sub
cmpsl
mov
cmp
mov
xchg
xor
stos
jb
mov
adc
push
ficompl
mov
dec
mov
dec
sbb
or
nop
addr16
inc
arpl
clc
inc
icebp
popf
lcall
out
aad
movsl
jl
jb
iret
and
mov
popf
sub
dec
mov
xchg
push
sub
scas
mov
ror
mov
cld
adc
inc
push
pop
ja
enter
popf
lds
mov
push
cli
out
mov
mov
cld
push
imul
lret
and
int
mov
push
push
mov
mov
icebp
inc
mov
test
fwait
push
or
xchg
jno
dec
mov
popa
push
push
inc
cmp
daa
mov
push
cmpsl
pop
jb
outsl
pop
push
fistl
call
dec
sarb
lds
int3
or
mov
inc
insl
or
mov
pop
mov
push
lea
pop
dec
xor
hlt
jecxz
jmp
push
cld
int
dec
mov
imul
out
popf
push
popf
cmp
xchg
test
add
push
daa
pop
inc
popa
push
pop
jg
fldenv
jae
push
sbbl
jno
sbb
ljmp
jp
jbe
push
cmpsb
push
stos
pop
xlat
push
inc
cmpsb
sub
mov
xor
xor
pop
xlat
bound
push
popa
add
dec
cmp
shll
cltd
mov
inc
sbbl
test
mov
pushf
orb
inc
popl
decb
sub
xor
enter
dec
popf
cmpsb
data16
lret
dec
cltd
push
repz
cs
jnp
pop
pop
mov
adcb
lods
mov
mov
mov
out
insb
out
mov
add
loope
mov
inc
jns
inc
imul
out
mov
jo
mov
jns
xor
mov
shlb
jns
dec
aas
cmp
push
push
sbb
push
loop
xor
loop
mov
aad
mov
mov
adc
clc
xor
cmc
mov
pop
or
lea
xchg
cmp
aaa
mov
lea
add
mov
adc
inc
enter
push
dec
lea
jmp
mov
inc
xor
mov
mov
or
pop
fdivrs
pop
faddl
movsl
cmp
mov
mov
subl
add
imul
dec
sarl
pop
inc
lcall
in
xlat
jno
xchg
cmp
mov
xor
fisubrs
or
mov
mov
shl
mov
or
std
mov
sbb
lock
lods
xor
lret
insb
notb
daa
xorb
dec
iret
add
adc
sbb
dec
dec
inc
lods
test
cld
push
add
xor
or
dec
cmp
fstp
enter
pop
int
add
adc
jne
rcll
lds
push
or
xchg
sti
pop
int3
add
dec
dec
mov
int
sub
mov
or
jae
adc
cmp
jbe
int3
dec
mov
ds
mov
adc
ds
ret
mov
fisttpl
lds
popf
or
imul
or
loop
push
rol
movsl
cmp
jmp
mov
xor
int
cmp
pop
sti
movsl
sbb
mov
dec
pop
push
pop
sbb
dec
sbb
push
mov
jno
mov
popa
lret
push
movsl
and
mov
xchg
fisttpl
or
sub
pop
xor
sub
dec
dec
pop
inc
test
int3
xor
or
lret
xchg
push
das
inc
mov
pop
sbb
xchg
mov
add
push
xor
dec
popa
loopne
mov
loop
xor
sub
push
cs
inc
jns
inc
in
add
adc
sbb
fldl
ja
jae
jno
mov
adc
sti
fs
mov
jo
and
cmp
fwait
sbb
cmpsl
add
aaa
xor
push
mov
jae
ret
popa
andl
sub
stc
lahf
mov
add
sti
mov
outsl
lret
mov
es
fwait
xor
gs
push
mov
jp
dec
pop
daa
scas
mov
cmp
scas
clc
push
sub
and
mov
imul
lds
push
jns
jnp
lods
xor
nop
xor
or
dec
in
inc
dec
pop
mov
jns
xor
pop
sahf
sbb
mov
adc
and
push
add
adc
das
movl
orb
dec
mov
test
loopne
mov
cwtl
mov
mov
pop
aas
ljmp
mov
dec
mov
dec
adc
fcmovne
pop
sbb
push
cmp
push
xor
and
clc
imull
or
out
mov
std
sub
cmp
imul
fildl
jle
nop
je
ja
jne
and
outsl
jns
gs
jae
inc
ja
push
lret
lret
jno
sbb
inc
push
faddl
sbb
orb
insl
cmp
push
shll
or
xor
scas
jle
inc
push
inc
loop
out
mov
inc
push
movsl
lret
jb
mov
mov
push
hlt
jns
stos
mov
dec
xor
cli
adc
in
stc
mov
cmp
fbstp
orl
adc
loop
cmp
pop
in
shlb
push
fdiv
jno
dec
xlat
cld
mov
adc
cmpsl
in
cmp
pop
repz
pop
xchg
pop
popa
jne
decb
push
daa
jl
pop
repz
mov
lods
out
in
addl
push
add
add
mov
iret
adc
jnp
mov
mov
jo
cmpsb
lret
icebp
in
or
orl
shrl
inc
mov
std
mov
mov
and
repnz
push
add
testl
jne
xor
jmp
cmp
jp
xor
lea
das
cmp
jp
xor
lea
push
int
cmp
mov
jbe
push
out
push
stos
ja
jns
sbb
add
dec
out
dec
into
mov
xor
cmpsl
inc
pop
mov
popa
movsb
divb
inc
mov
or
stos
cmpsl
add
adc
cmp
lret
mov
arpl
dec
outsl
ret
movsb
cli
mov
cmp
and
jno
addr16
xor
jmp
icebp
dec
repnz
scas
scas
add
fstl
iret
stos
push
inc
iret
dec
test
cld
pop
lds
test
xor
mov
cmp
mov
leave
cmp
aaa
jmp
das
outsl
je
mov
bound
outsb
and
push
pushl
jmp
mov
imul
aaa
stos
cld
sub
mov
adc
and
dec
sub
pusha
enter
je
jbe
mov
adc
jns
vmovss
gs
pusha
mov
mov
in
cmp
dec
loop
gs
fistl
lds
ret
in
ds
or
adc
mov
add
cmp
adc
mov
adc
dec
sbb
outsb
sub
popf
movsb
add
cmpsb
jl
int
cli
mov
adc
fldt
cmp
inc
aam
jno
xchg
mov
out
cmp
sub
insl
dec
hlt
cmp
test
mov
out
push
jno
jne
inc
repz
or
push
add
cld
xor
and
cltd
aas
dec
inc
xlat
leave
add
shr
adc
adc
fadd
mov
lret
lahf
cmp
sub
out
pop
scas
dec
mov
bound
hlt
or
jmp
inc
outsl
insl
hlt
or
or
out
rorl
rcll
xchg
push
and
ljmp
cmp
mov
movsb
insl
sub
aad
cmp
or
cs
sbb
cmp
cmp
scas
loop
mov
pop
int3
lcall
push
movsl
sbb
mov
jns
clc
adc
adc
cmp
xchg
dec
mov
mov
int
jge
out
idiv
popa
subl
mov
arpl
mov
xchg
cmp
scas
cmpsl
dec
xor
jbe
sbb
mov
mov
jne
mov
cmp
pop
repnz
xlat
int3
call
jo
mov
mov
fmuls
pusha
ja
lock
cs
mov
sub
inc
int3
sub
jl
outsl
nop
sbb
je
into
and
sbb
gs
pop
in
cmpsb
test
bound
andl
pop
call
push
in
jae
xor
jge
inc
sarl
jb
cltd
mov
fcmovnbe
fldenv
popl
lock
adc
mov
outsl
mov
xchg
cmp
push
adc
push
pop
pop
inc
mov
adc
insb
mov
jno
jne
dec
pushl
push
mov
lock
lods
std
arpl
lods
lcall
dec
inc
mov
fidivs
ss
insl
jnp
popf
sub
push
dec
mov
imul
call
fimuls
ret
cmp
mov
xor
pop
push
push
loope
mov
adc
push
int3
imul
ja
ja
pop
ss
or
gs
xor
cmp
mov
pop
insb
ss
enter
jcxz
out
stc
mov
cmp
pop
aaa
imul
lods
sbb
sub
rol
rcrl
pusha
lss
out
cmpsl
int
js
ret
aad
adc
adc
pop
inc
lea
xchg
repnz
scas
out
inc
inc
pop
cltd
dec
inc
les
fisttpl
popa
inc
subb
mov
pushf
lret
ja
call
adc
or
mov
fisttpl
ja
dec
or
push
cmpb
popa
orl
dec
and
rcrb
popa
push
insl
xor
fs
lds
lds
xchg
adc
add
cmp
test
scas
rolb
push
jno
mov
mov
test
lds
inc
push
dec
pop
ror
bts
xlat
dec
clc
ret
inc
loopne
dec
lret
xchg
test
faddp
mov
cmp
daa
loope
fstpt
and
pop
fidivrs
pusha
cmp
and
xor
leave
outsl
imul
jns
int
into
dec
nop
jbe
push
push
add
jmp
xor
inc
bound
xorb
cmp
mov
shrl
and
xor
dec
cs
jge
imul
jg
popa
popf
stos
cmpsb
pop
mov
jle
inc
jg
push
dec
mov
in
lret
pop
rorb
pop
aaa
test
subl
jmp
inc
add
divb
jbe
jge
nop
push
or
test
adc
iret
rol
and
rcll
loope
xor
aas
dec
mov
push
daa
test
addb
fwait
je
xor
dec
dec
dec
cli
sbb
mov
adc
stos
mov
mov
lahf
jg
xor
jo
jge
push
cmp
push
sub
movsl
outsl
push
bound
sbbb
int
nop
pusha
es
xlat
dec
push
push
mov
push
outsb
test
fdivs
cmp
outsb
mov
int
pop
sub
pop
inc
shrb
jno
cmp
mov
xor
aaa
fisttps
into
sbb
rcll
jae
pop
int3
scas
or
cmc
mov
ljmp
test
pusha
jp
mov
mov
mov
sub
and
jg
aaa
xor
mov
imul
cmp
test
jno
popf
lahf
or
adc
xchg
dec
pop
add
popa
cltd
jecxz
test
testl
or
fldl
data16
shlb
xor
cmp
stc
cmp
icebp
mov
add
adc
loope
push
xchg
xor
aad
das
push
stc
cmp
sub
cld
aam
nop
es
in
int3
inc
xor
scas
pusha
ss
mov
idivl
lcall
je
sbb
adc
jbe
shlb
imul
call
jbe
stc
cli
mov
jnp
push
jns
jnp
fwait
add
xor
mov
out
out
andb
and
lahf
outsl
repz
insl
xor
pop
call
mov
mov
call
ja
inc
mov
shr
notl
cmp
loopne
jns
imul
push
int
xor
loope
jae
or
jbe
inc
jmp
fstpl
icebp
jg
bound
popa
mov
shrb
test
cmpsl
popa
ss
adc
js
xchg
cwtl
pop
imul
mov
jo
cli
stos
leave
jae
push
into
cmp
adc
int
das
out
daa
cmp
and
and
push
ss
test
iret
cwtl
push
mov
mov
lret
pop
jns
int
or
mov
aad
cmp
outsl
pusha
xor
leave
add
sbb
sarl
cmp
jno
in
repz
stos
dec
inc
add
int
mov
xor
or
pop
mov
into
ret
jl
pandn
ljmp
xchg
pop
rcll
aas
out
sti
fsub
xor
iret
scas
int
dec
fsubrp
mov
mov
sbb
dec
xchg
clc
add
adc
cmp
shlb
adc
jns
jo
or
ds
sbb
pop
mov
dec
adc
mov
insb
add
xor
movsb
mov
insb
dec
lods
adc
jl
cmp
cmp
xchg
pop
or
mov
jnp
cmp
xor
stc
push
mov
paddusw
sbb
imul
dec
ret
or
inc
adc
jmp
cmpsl
push
xchg
mov
insl
inc
cmp
or
jae
gs
mov
lea
jne
jns
pop
adc
dec
mov
repz
out
pop
popa
mov
popa
xchg
cmp
fisttpll
stc
sarl
repnz
repz
xor
pop
loope
adc
dec
ljmp
loope
add
cltd
fcomps
insb
mov
leave
lret
int3
push
sub
aaa
jae
push
in
pop
sbb
iret
lcall
dec
test
cltd
cmp
das
push
sub
shrl
mov
dec
adc
push
cmp
mov
test
out
xor
imul
loopne
hlt
cmp
das
aad
jge
push
shrb
ss
out
push
add
mov
aam
push
add
jl
add
pop
test
das
test
shlb
test
ds
sub
push
push
cltd
xor
sarl
dec
xchg
add
adc
mov
mov
add
cmp
popf
out
dec
inc
les
mov
xchg
mov
lods
stc
and
and
jb
dec
insb
push
testb
out
icebp
mov
stos
sub
sbbb
or
cli
test
dec
call
and
cmp
jle
jle
mov
inc
out
repz
cmp
dec
dec
inc
add
lea
dec
in
dec
adc
addl
in
mov
mov
ds
mov
test
mov
mov
mov
dec
daa
jb
sbb
cmpsb
pop
fldcw
push
movsl
out
xchg
pop
push
xchg
mov
pop
outsl
dec
mov
dec
scas
into
fs
cmp
push
notl
mov
dec
aam
push
test
mov
inc
out
mov
movsb
xchg
adc
repz
push
hlt
sbb
pop
dec
aas
xor
cli
adc
shlb
push
sbb
sub
iret
nop
push
test
inc
mov
scas
mov
rcr
or
test
iret
aad
cmp
imul
scas
movsb
push
movsb
add
xchg
sbb
lahf
loop
test
sbb
cmp
clc
mov
jb
jbe
popf
jb
mov
dec
lds
jnp
mov
sti
fsubl
inc
imul
cli
js
lods
cmpl
dec
push
xchg
inc
jle
add
add
inc
popf
jo
adc
mov
in
adcl
std
xor
adc
pop
lret
or
inc
jnp
popa
push
xor
adcl
fiadds
ss
mov
sbb
dec
adc
and
add
stos
ret
push
dec
test
out
add
push
mov
push
ljmp
stc
ret
pop
mov
lcall
inc
je
cmp
rclb
jmp
clc
dec
mov
lret
xor
scas
icebp
idivb
inc
or
in
dec
mov
lret
je
adc
std
xor
sbb
pop
out
sub
jne
and
mov
inc
andl
xchg
pop
xchg
outsl
push
push
xchg
push
addr16
sub
test
adc
lock
sbb
xchg
int3
pop
sub
mov
inc
push
mov
lret
shr
ret
xchg
mov
jl
mov
mov
in
mov
ja
inc
jns
lock
lcall
testl
xlat
mov
fstpt
aaa
fmull
jle
and
jns
into
jl
add
cmp
lods
dec
jp
sti
xlat
mov
pop
xchg
lea
scas
fisubs
ja
or
or
jbe
pop
and
add
pusha
rorb
jg
mov
lea
xchg
cmp
and
andl
pushf
aas
lods
cmp
xor
mov
add
mov
xchg
cld
push
push
mov
push
dec
lods
mov
fsubl
jno
xor
out
dec
push
add
out
loope
ds
cmp
inc
and
fstl
ljmp
adc
push
ss
cmc
movsb
and
xlat
rorb
cs
adc
mov
cmp
add
cmp
mov
pop
fcmovbe
lret
lds
mov
js
push
jge
pop
pusha
mov
mov
dec
jns
cmp
sti
jle
jno
cmp
gs
cltd
xorl
jo
jp
xchg
int
repz
lea
mov
jl
sbb
arpl
xor
mov
out
nop
into
mov
jne
sub
push
or
insb
push
adc
cmp
arpl
add
xor
icebp
push
mov
movsb
ljmp
or
clc
mov
je
ror
push
daa
aam
test
cmp
xor
add
push
cmp
stos
lret
pop
dec
ret
out
adc
xor
sti
cmc
adc
ss
sbbl
and
cwtl
outsl
mov
mov
ss
addr16
inc
jmp
mov
inc
dec
xor
cmp
adc
outsb
jbe
aaa
sbb
sub
fstps
ja
imul
int
and
cli
cmp
jnp
jle
lods
sti
js
jne
pop
jb
mov
out
or
cmp
fst
enter
or
or
sarb
adc
sub
daa
movsb
mov
dec
mov
lea
mov
xor
cli
xlat
cs
ljmp
cld
mov
inc
pop
xor
icebp
adc
xchg
test
mov
mov
lahf
loop
sub
out
rcl
jp
mov
cmp
pop
pop
sbbl
cmpsl
fs
movsb
mov
dec
mov
mov
fbstp
xchg
xchg
push
stos
push
js
arpl
lahf
test
jl
mov
faddl
xor
cmpsb
call
mov
xor
fdivrs
pop
xchg
aas
adc
cmp
les
cmp
cmp
test
mov
dec
xor
add
inc
aaa
push
sarl
push
bound
imul
mov
lea
pop
mov
cmp
dec
test
je
xchg
mov
pop
filds
xchg
int
cmpsl
mov
out
inc
xor
mov
pop
lea
ja
push
mov
mov
rcll
or
lret
xor
jno
mov
inc
dec
in
lea
mov
aaa
lods
imul
jmp
or
push
push
mov
aaa
int
pop
dec
vucomisd
aas
mov
dec
lea
lcall
inc
insb
pop
out
gs
mov
inc
jno
push
jp
cmp
mov
sarl
iret
inc
and
stc
xor
insl
ja
enter
enter
ss
dec
ds
or
or
lods
jno
dec
int3
insb
into
aas
jno
mov
push
add
xor
imul
pop
inc
jno
notb
dec
push
xor
inc
xor
sbb
fdiv
orl
push
inc
dec
mov
popf
xchg
lret
add
inc
push
shrb
mov
mov
or
shll
jmp
pop
xor
aaa
inc
jne
dec
mov
mov
scas
sub
inc
mov
stc
xor
shlb
mov
add
mov
push
inc
xor
pop
xor
int
addr16
inc
push
pop
cmp
pop
mov
push
xor
stc
inc
lea
xor
dec
lcall
cmpsl
adc
jno
cmp
andb
fs
pop
adc
inc
push
int3
mov
pop
or
gs
shrl
mov
push
popf
push
cltd
aaa
cmpsb
pop
push
adc
jae
adcl
mov
xor
imul
mov
popa
mov
cmp
fldcw
push
jnp
ret
xor
mov
mov
cmp
add
mov
test
es
mov
lret
mov
mov
stos
and
imul
gs
dec
fs
mov
aas
stos
adc
pop
jns
nop
fs
jae
inc
cwtl
pusha
xor
mov
push
setge
push
cmp
dec
adc
shll
shl
lea
cs
dec
mov
nop
cmp
pop
insb
insl
popf
mov
mov
cmp
int
dec
aad
int3
in
adc
nopl
jl
push
cmp
sub
cmp
pop
jae
aas
out
mov
push
roll
dec
bound
jns
dec
push
icebp
or
xor
and
roll
xchg
std
xor
adc
sub
in
pop
in
push
movsl
fbld
cltd
gs
aad
stc
imul
std
jp
inc
add
into
jbe
or
imul
not
adc
push
flds
aaa
iret
imul
add
aaa
stc
sub
jno
mov
dec
outsl
push
push
mov
pop
std
gs
jno
in
or
psrlq
cmpsl
jmp
add
jae
or
divl
lea
xor
or
aaa
or
je
jns
stc
inc
cmc
pop
add
std
dec
and
repz
out
aad
mov
push
in
adc
shrl
inc
aas
inc
mov
push
insl
out
loope
xor
add
mov
repz
insl
mov
mov
mov
cmpsb
ds
mov
cltd
fwait
lods
jg
adc
inc
mov
pop
imul
adc
jl
mov
inc
cmp
incb
sbb
mov
aad
cli
popf
insb
sti
sbb
lds
out
and
inc
cmp
jl
or
or
sti
sbb
aas
adc
sarl
addr16
or
and
inc
dec
add
inc
inc
fstl
adc
mov
mov
mov
dec
ud1
or
inc
out
mov
lcall
sub
shll
dec
mov
mov
inc
in
jns
and
jmp
ss
cmp
mov
xchg
or
xor
cmpsl
sbb
xchg
jmp
pop
mov
inc
jno
push
add
lea
or
dec
stc
xor
test
insb
or
and
imul
and
sti
pop
push
or
ja
cmp
xchg
ds
mov
cmpsb
xlat
or
jecxz
sub
insl
shrl
push
int3
add
dec
jo
and
aas
sbb
test
jae
in
and
insl
das
pop
test
jno
pop
outsb
sub
push
cmp
outsb
push
inc
imull
xchg
pop
insb
ror
sti
cmp
xor
adc
cmp
roll
inc
pop
mov
xchg
mov
jno
stc
mov
inc
sar
negb
or
pop
outsb
ffree
xor
dec
ss
popf
jb
jno
push
push
xor
add
int3
mov
imul
cmp
aaa
pop
addb
jno
jns
lea
or
dec
repz
aaa
mov
leave
xchg
loope
test
mov
outsl
jno
inc
les
jno
mov
lahf
or
aas
mov
lea
mov
cmp
mov
lret
mov
imul
inc
cmp
jl
mov
cmp
push
cld
xor
inc
mov
fwait
imul
lea
stc
push
pusha
mov
xchg
push
xor
cmp
pop
pop
out
fldcw
in
cmp
and
dec
subb
aaa
test
test
cwtl
dec
xor
pop
arpl
mov
xor
pop
ds
aas
dec
cltd
dec
inc
cmc
aaa
inc
inc
cmp
sub
cmp
cmp
inc
orb
sub
addr16
popa
push
mov
ds
arpl
fs
mov
pop
outsb
iret
push
popf
push
ss
sbb
ss
cmp
cmp
enter
sbb
sbb
dec
push
jne
out
or
push
dec
stc
sbb
es
adc
sbb
sar
mov
inc
ja
jmp
popa
mov
mov
jne
daa
in
dec
pop
xor
jmp
je
movb
mov
xchg
adc
jne
cmpsb
add
jns
imul
sahf
adc
stc
das
adc
add
inc
mov
scas
sbb
mov
pop
ds
mov
cmp
dec
imul
jp
cmp
insb
push
test
pop
sbb
sbb
push
in
push
xchg
cmp
cmp
xor
repz
pusha
repz
dec
inc
or
js
mov
ficoms
into
lea
es
mov
cmpsl
xchg
js
xchg
xor
lock
aaa
sub
cltd
test
cmpsl
pop
test
cmp
push
scas
bound
bound
adc
mov
mov
xor
shl
inc
loop
push
jmp
lret
xor
mov
fldcw
hlt
pop
mov
sub
dec
syscall
clc
mov
aas
scas
dec
push
popa
sti
inc
mov
jae
nop
inc
sarl
lret
xor
mov
outsl
int
cmpsl
push
mov
pop
inc
cmp
push
xchg
mov
pop
pop
int3
inc
lret
in
sub
pop
push
jg
mov
orl
mov
mov
dec
hlt
js
shl
lcall
shlb
les
fstl
add
mov
jno
dec
adc
xchg
das
mov
cltd
mov
lods
pop
icebp
xchg
pop
inc
mov
stos
push
leave
xchg
xchg
pop
and
ret
inc
imul
dec
inc
rep
addr16
cmp
mov
xor
imul
add
loop
or
dec
add
dec
cmp
sub
xor
outsl
scas
xor
lret
and
bound
imul
cmp
xchg
cmc
xchg
lret
mov
inc
sub
xchg
and
mov
mov
and
pushl
jbe
call
popf
roll
jmp
xor
incl
mov
mov
add
test
sahf
mov
push
adc
cmp
gs
mov
int
mov
addr16
or
push
xor
pop
sbb
stos
pusha
test
loope
int3
adc
fwait
mov
sbb
in
rolb
lods
sti
jns
jno
xor
ss
and
lret
cmp
jns
mov
jbe
popa
bound
push
mov
xor
mov
cwtl
int
sub
clc
das
jae
rorb
dec
lods
sub
js
out
cmp
lods
stc
pop
lret
xchg
xor
insb
mov
pop
mov
int3
stos
add
pop
pop
add
mov
jo
sarl
dec
ja
mov
cmp
stc
pop
lods
add
sbb
lods
add
shrl
xchg
pop
xchg
popa
pop
adc
jmp
sub
hlt
adc
popf
fs
inc
mov
aaa
gs
test
sub
push
mov
jno
cmp
ljmp
adc
daa
jl
pop
xchg
add
cmp
or
rcl
lea
in
lret
test
int
xchg
rcl
mov
movsl
mov
and
pop
pop
xchg
xor
jns
or
bound
andb
mov
icebp
cmp
pop
jbe
inc
ds
mov
test
add
lods
mov
fs
mov
jnp
push
mov
push
fs
mov
dec
sahf
and
sub
pushf
mov
sub
sub
arpl
add
lods
aad
cmp
xor
mov
sub
arpl
mov
cmc
push
in
mov
pop
movsl
mov
aas
pop
mov
pop
xor
push
push
out
orb
aam
mov
mov
aam
out
dec
in
std
int
outsb
mov
stc
ret
and
pop
xchg
loopw
icebp
or
mov
js
fimull
sub
fs
lea
push
fdivrs
inc
out
mov
out
loop
imul
pop
outsb
pop
sub
stos
mov
out
jg
mov
jmp
xchg
stos
ret
cmp
insb
lea
mov
insb
lods
int
adc
aaa
out
push
sbb
cltd
aas
mov
cmp
test
pop
imul
xchg
pop
out
xchg
pop
addr16
arpl
jl
fs
scas
leave
inc
stos
int
pop
repz
cmc
bound
movsl
test
insl
add
shll
xchg
lret
hlt
xchg
shrb
xchg
shll
bound
cltd
cmc
push
xor
cmc
mov
xor
xchg
ret
jae
les
xchg
xorb
mov
lods
jbe
imul
or
pop
insb
xor
loop
mov
xor
cmp
insl
sti
jne
ljmp
inc
bound
imul
lea
cmp
or
mov
cmp
inc
bound
pop
insl
lock
mov
mull
mov
cmp
dec
ret
andb
insl
jae
imul
add
and
std
in
dec
aam
fnsave
cmp
out
popf
dec
fldt
mov
mov
cmp
xchg
pop
cltd
aaa
mov
dec
pop
and
pop
icebp
xor
shl
testl
test
push
lret
test
inc
outsb
or
aaa
mov
pop
inc
mov
mov
push
pop
adc
xor
adc
cld
or
mov
sub
loope
sub
mov
outsl
add
sarl
sub
mull
enter
lods
daa
aas
and
cwtl
scas
sub
repz
out
flds
or
sbb
mov
call
out
mov
sbb
cmc
mov
into
pop
outsb
mov
sbb
sub
bound
pop
jle
add
sbb
imul
lds
rclb
mov
add
inc
shrl
mov
pop
sub
bound
inc
enter
or
insl
repz
frstor
inc
loope
scas
xchg
insb
in
add
lret
mov
sbb
in
adc
push
mov
orl
pop
jp
popf
sahf
xchg
int3
test
inc
test
jmp
nop
cmp
mov
shl
or
pop
bound
insb
test
insl
jmp
xchg
or
sbb
imul
cld
mov
jne
xchg
int
jo
aas
push
inc
test
inc
mov
sbbb
cmp
neg
dec
push
adc
push
xor
jmp
aas
sbb
data16
cmp
pop
nop
in
aaa
cltd
xor
mov
jno
inc
cmp
sbb
xor
xchg
xchg
mov
cmp
sbb
sbbl
loope
mov
xchg
pushf
and
clc
ljmp
lods
jbe
xchg
pop
in
mov
insb
pusha
jle
mov
push
dec
pusha
xchg
dec
adc
sti
repz
add
adc
or
cmpsl
sbb
cmpsb
sub
xchg
cmc
mov
mov
cmp
sub
sub
adc
xor
and
das
pop
mov
xor
cli
cmpsl
jb
mov
nop
clc
inc
rclb
std
mov
xor
lea
cmp
aad
mov
add
push
stos
adc
sbb
inc
dec
lahf
adc
adc
daa
mov
std
repz
sbb
xchg
cmp
ret
std
loope
sahf
repnz
cmpl
sbb
into
out
pop
or
and
shll
or
imul
inc
ja
inc
shl
shll
mov
cs
pop
sbb
movsl
dec
out
shl
stos
imul
push
iret
fcoms
outsl
imul
jbe
xchg
and
xchg
hlt
xor
mov
mov
mov
push
das
shrb
leave
pop
push
or
sbb
jp
adc
fidivs
imul
jno
add
and
movsl
mov
xchg
push
jnp
movl
dec
sbb
repnz
inc
outsl
mov
mov
test
dec
stc
test
insl
jl
adc
adc
pop
aas
mov
push
cmpsb
dec
dec
ds
pushf
cmp
inc
and
mov
lods
popf
mov
not
xorb
add
mov
cltd
cmp
jg
or
sub
or
pushf
mov
push
jp
js
jmp
pop
sub
das
lock
and
inc
mov
mov
jmp
pop
or
movsb
sti
mov
jbe
push
or
mov
dec
hlt
sti
push
cmp
pushf
mov
bound
insl
inc
sbb
xchg
add
xor
dec
lea
fistpll
les
in
jg
test
jne
inc
mov
cmp
jg
push
push
push
fcoms
insb
jge
cmp
cmp
jno
pop
sti
test
add
xor
sahf
sub
sti
or
pop
or
push
dec
pushf
sahf
movsb
push
insl
xchg
call
xor
aaa
xchg
mov
xor
fnstcw
popa
cmp
bound
xor
and
test
jmp
or
mov
mov
or
cmp
imul
arpl
jl
inc
xchg
test
popa
xchg
xchg
dec
stc
pop
and
xor
mov
movsl
jo
dec
out
cmp
add
pop
inc
in
adc
or
and
adcb
loope
rclb
loope
dec
or
sub
mov
pop
mov
mov
jmp
mov
int
jnp
pop
lea
lret
ja
and
jno
loope
add
mov
xchg
xor
mov
cs
sarb
cmp
out
mov
pusha
inc
mov
pop
cmp
push
cmp
mov
adc
cmp
bound
xor
mov
lods
pop
inc
mov
pop
cmp
std
sbbb
cmp
into
push
pop
mov
mov
mov
flds
mov
xor
or
xchg
sbb
mov
std
push
sti
and
loopne
push
pop
cmpsl
dec
sti
push
or
fadd
mov
imul
mov
loope
mov
ja
stc
push
hlt
test
mov
or
add
stc
enter
mov
lret
popf
push
mov
jns
imul
cltd
dec
inc
mov
jl
push
in
pop
adc
jno
fwait
dec
xchg
inc
fisubrl
loopne
ss
cld
jbe
icebp
mov
mov
push
cmp
cmc
nopl
xchg
cmc
cmp
pop
cs
sub
and
pop
mov
test
pushf
push
imul
imul
jecxz
push
loop
das
push
xchg
cmpsl
cli
stc
dec
inc
push
cli
lahf
xlat
jl
dec
out
outsl
stos
dec
jl
lods
gs
mov
lea
mov
mov
jae
push
shlb
jmp
and
cmpsl
in
lock
test
movsb
inc
pop
cmp
and
inc
subb
aas
call
xchg
adc
scas
shll
ljmp
jmp
xchg
mov
roll
mov
inc
push
inc
mov
mov
sub
sbb
adc
lods
fmull
mov
push
cmc
pop
dec
out
bound
pop
data16
repz
dec
pop
sbb
mov
xchg
int3
ss
push
mov
scas
mov
inc
inc
cmp
pop
pushf
scas
mov
stos
push
outsb
lea
push
mov
shll
in
xchg
ja
push
test
or
push
aas
xchg
ret
adc
push
sub
andl
pushl
and
test
adc
sub
ja
orb
push
into
test
or
pop
jle
cmp
mov
inc
mov
jmp
aas
imul
pushf
jl
pushf
mov
lahf
mov
jbe
mov
les
or
xor
mov
clc
mov
xchg
test
mov
pop
popa
adc
add
cmp
sbbb
scas
rclb
push
jb
ficoml
lcall
or
add
sub
cmc
in
adc
adc
popf
decb
adcl
sbb
dec
sub
data16
imulb
cld
sbb
push
sarl
int3
sahf
inc
push
pushf
pop
pop
pop
aas
pop
push
dec
mov
mov
jb
arpl
jb
in
aas
jp
mov
xor
xchg
dec
scas
cmp
mov
xor
sbb
mov
mov
fcmovu
insl
outsb
dec
mov
push
adc
insl
outsl
sbb
xor
shrb
xchg
aad
or
jg
pusha
push
lds
cmpsl
jno
jno
mov
std
sub
movsl
outsl
cltd
leave
xor
pop
push
pushl
shrl
push
and
leave
xor
and
aas
xor
mov
cmp
data16
xchg
inc
mov
ja
sbb
stos
adc
mov
inc
popa
jbe
sbb
jbe
and
movsb
sbb
int
in
jecxz
jge
jns
xchg
dec
bound
pop
dec
test
fisubl
lea
fnstenv
or
mov
cmp
loope
test
and
jnp
push
scas
push
icebp
add
adc
loop
sbb
call
add
cmp
dec
mov
fisttps
mov
dec
add
sbb
sbb
sahf
cmp
dec
das
mov
mov
test
test
fwait
lret
fs
aaa
inc
jmp
pushf
cmp
mov
xor
add
adc
movzwl
popa
sbb
mov
hlt
push
adc
mov
ret
xor
lea
ljmp
lods
imul
mov
fldl
push
xchg
lock
jne
push
fnsave
inc
adc
imull
outsl
fwait
ds
aaa
xchg
sub
imul
stc
pusha
movsl
loope
jns
pop
inc
xor
movsl
xchg
dec
xchg
sbb
push
dec
or
mov
aad
loope
push
arpl
add
lds
jae
xchg
inc
out
lds
popf
je
mov
dec
imul
mov
popf
push
add
pop
sbb
mov
mov
gs
push
ds
iret
dec
pop
lret
jp
dec
sbb
sbb
call
aam
push
mov
icebp
aaa
lds
sbb
inc
mov
mov
test
ja
iret
mov
or
mov
repnz
mov
push
and
sbb
push
popf
pop
mov
scas
aas
push
gs
ja
ret
xlat
sub
inc
scas
jno
dec
pop
imull
xor
jbe
and
inc
pop
adc
mov
mov
pop
adc
inc
mov
call
das
int
insl
cmp
pop
pushf
jge
ja
mov
lahf
das
cmpsb
sbb
ljmp
fimull
sub
into
jno
inc
out
je
mov
jg
cmpsl
mov
in
ss
mov
pop
lret
mov
bndldx
fisttpll
lcall
mov
sub
popf
mov
cmp
lods
faddl
xor
lret
xor
and
clc
aaa
loop
ja
movsb
pop
mov
clc
daa
jne
inc
cmp
sbb
movsl
sbb
mov
aaa
mov
push
inc
mov
iret
jne
scas
aad
lock
int3
div
cmp
push
test
mov
aaa
sbb
mov
jle
and
pop
jnp
int3
sahf
mov
dec
dec
gs
ja
outsl
inc
and
push
sbb
push
inc
scas
ja
stc
bound
and
xlat
mov
shrl
mov
test
pop
orl
jns
sbb
sbb
insl
das
rol
adc
sub
inc
negb
je
adc
jnp
lds
lea
mov
pop
insl
lret
inc
push
rol
not
aaa
jbe
ja
fnop
ja
sbb
insl
sbb
adc
mov
je
jl
cmp
dec
inc
mov
stc
les
pop
cmpsb
fldl
dec
mov
push
addr16
int3
cmpsl
out
mov
inc
push
jo
ljmp
clc
mov
inc
cli
rcll
clc
xchg
dec
adc
xor
adc
and
roll
push
daa
dec
jo
cli
inc
mov
dec
add
cmp
add
mov
stc
push
mov
mov
add
xchg
loope
cmp
fwait
mov
jecxz
lds
shll
imulb
xor
mov
js
dec
xor
mov
push
mov
xchg
sbb
dec
sub
sbb
loope
push
int
jb
pop
stc
jmp
sbb
mov
test
push
or
popa
jb
xchg
cli
mov
scas
sbb
cmp
jno
mov
jbe
icebp
daa
jp
es
sbb
hlt
imul
or
movsb
out
fstpt
gs
scas
mov
rcl
or
dec
mov
popf
xor
jmp
inc
pusha
cmp
repnz
imul
mov
sbb
bound
sbb
sbb
mov
mov
or
fisubs
outsl
and
enter
int3
jnp
push
adc
bound
or
sub
mov
cmp
sbb
sub
push
ror
pop
xchg
cmp
push
shlb
cmp
lret
pop
add
gs
sti
jnp
mov
sarb
addr16
jle
mov
jp
cwtl
jg
pop
jns
mov
cmp
jmp
outsl
test
sbb
push
sbb
or
and
cmpl
mov
and
xchg
jae
mov
fcmovnb
cmp
ds
push
push
sub
ds
mov
mov
imul
scas
or
pop
push
insl
pop
dec
js
mov
testb
dec
insl
test
push
sbb
pop
and
daa
lods
dec
movsb
sub
pushf
cld
lds
scas
push
cmp
ljmp
hlt
inc
jb
pop
push
adc
jno
bound
les
pop
jp
mov
aaa
fstpt
stos
mov
icebp
addl
xor
rcrb
xchg
outsb
addr16
mov
and
sbb
js
fidivs
repz
xlat
jecxz
jp
cli
adc
jp
aaa
int
dec
push
push
pushf
dec
ljmp
je
test
adc
mov
repnz
test
cli
xchg
push
enter
cmp
inc
cmp
or
sbb
xor
xor
mov
cmp
push
mov
mov
insb
or
inc
xor
mov
jl
lods
sbb
xor
jnp
rorb
adc
adc
test
push
test
dec
sbb
testb
push
xchg
mov
dec
test
scas
xchg
arpl
or
mov
stos
mov
push
xchg
sbb
mov
or
or
inc
mov
inc
or
sbb
xchg
dec
mov
push
push
shl
mov
mov
sti
cmp
mov
pop
xor
xchg
bound
mov
sarb
jmp
ror
dec
mov
push
mov
ficompl
mov
inc
ror
nop
mov
mov
pop
in
clc
test
mov
add
xchg
das
mov
movb
xor
test
jbe
sbb
xchg
add
inc
xor
jl
mov
mov
test
mov
negl
mov
into
jmp
xchg
cmp
adc
sub
push
iret
in
sbbl
inc
sub
inc
int3
jno
dec
dec
mov
cmp
xchg
les
pop
test
adc
jl
shlb
cmp
xlat
pop
xor
mov
xchg
fcom
lock
mov
aad
pop
gs
repnz
and
inc
mov
pop
cmc
mov
inc
ds
jno
lds
es
insb
pop
jnp
vdivss
sub
sbb
mov
jle
scas
and
jno
push
cmpsl
mov
fildll
sbb
jne
lahf
je
pop
ficompl
dec
lds
rclb
shll
mov
xor
xchg
rcr
dec
inc
sti
pop
sti
xor
cmpsb
lcall
shr
mov
pop
mov
mov
imul
lcall
adc
or
dec
mov
das
popf
jnp
idivb
sub
jecxz
cli
pop
aad
ret
bound
orb
popf
inc
inc
sbb
dec
dec
sbb
pusha
xor
jae
dec
mov
and
mov
sub
outsb
fdivrl
cmp
or
xchg
lock
dec
stc
mov
xchg
scas
or
loopne
push
aad
dec
rorb
dec
mov
les
test
pop
imul
jno
nop
dec
mov
sti
addr16
fs
andl
int
or
dec
icebp
push
cmc
push
xor
jbe
outsl
jns
xorl
leave
mov
testl
mov
mov
or
into
hlt
daa
add
adc
inc
das
sub
sbb
aam
and
pop
jne
mov
mov
call
mov
add
scas
inc
and
push
mov
push
shlb
mov
test
mov
jae
add
mov
stos
xchg
inc
test
cmp
lea
int3
dec
int
mov
into
movsl
ljmp
add
lret
ds
fwait
mov
cmp
mov
dec
cmpb
and
repnz
rcll
adc
subl
fstps
mov
cmp
lea
add
fists
divb
sahf
or
std
ret
icebp
mov
mov
stos
or
jle
sub
ss
adc
cmp
outsl
outsl
mov
cmp
cmp
shrl
cmp
and
rorl
arpl
xor
mov
outsl
xchg
ss
aas
push
adc
xor
push
test
in
xor
addl
repnz
incl
adc
inc
push
add
lret
xor
mov
or
scas
cmpb
lahf
inc
rclb
sub
jb
pop
iret
in
icebp
sub
loope
mov
cmp
mov
not
adc
pushf
inc
push
sbb
aad
xchg
dec
cmp
push
repnz
outsb
jbe
aas
cmp
mov
push
xchg
icebp
nop
clc
mov
dec
lds
jns
addr16
pop
jnp
addr16
xor
xor
xchg
flds
dec
xchg
mov
push
fisttpl
push
pusha
mov
jb
rorl
inc
int
cmp
subb
jo
push
push
or
dec
repnz
xchg
push
mov
lock
jp
dec
ja
stc
pop
cmpsl
bound
push
cltd
cltd
inc
jne
out
outsl
cmpsl
push
cmpsl
insl
jp
inc
ljmp
mov
and
pop
or
cli
xchg
ret
repnz
push
int3
andb
in
push
ret
dec
sbb
fisttpll
ficomps
fisubl
adc
dec
int3
or
mov
pop
jb
ja
in
inc
mov
sar
push
cmp
cmp
outsl
pop
mov
dec
xor
push
mov
pop
shll
mov
sub
cmc
cmp
or
mov
push
sub
out
push
aas
push
and
jns
push
adc
out
and
adc
unpcklps
cmp
sbb
jae
lret
jns
dec
jno
cmp
push
inc
and
sub
arpl
scas
and
pop
cwtl
ror
inc
lds
notl
das
xchg
add
jne
pop
lea
loopne
lods
popf
movsl
jb
mov
dec
sbb
or
sub
testb
lret
sahf
clc
insl
mov
pop
imul
sbb
sbb
cwtl
xchg
push
pop
mov
cmp
sbb
gs
pop
xor
jmp
cmp
imul
jae
cmp
sbb
icebp
xchg
mov
jo
mov
mov
cmp
roll
or
in
lods
push
arpl
mov
jo
mov
in
test
mov
es
xor
sti
je
mov
into
and
adc
movsb
popa
mov
push
mov
rcrl
inc
icebp
loope
cld
fwait
jge
dec
cmp
popf
nop
mov
rol
jns
je
dec
cmc
stc
jp
pop
adc
inc
sub
dec
xor
xor
mov
mov
fwait
movsb
mulb
std
ds
add
pop
cmp
mov
popa
xor
rol
repnz
fbld
je
sbb
test
push
test
ds
lahf
pop
inc
mov
push
fsubs
mov
push
roll
pop
sahf
xor
test
dec
inc
mov
or
cmpsl
popf
les
lcall
mov
pop
cwtl
dec
insl
nop
lret
ds
inc
push
pop
cmp
jl
mov
stc
inc
movsb
or
cmc
xorb
fbstp
fisubl
xchg
pop
cs
adc
and
in
and
dec
imul
pop
mov
int
movsb
insl
push
pop
pop
xor
rcrl
ja
and
fdivl
pop
inc
mov
mov
dec
xchg
popa
test
mulb
insl
push
popf
mov
stos
outsb
sbb
add
ja
je
sub
loop
xchg
push
or
mov
jl
aaa
mov
cmpsl
gs
test
mov
ja
jae
ds
mov
ds
stos
call
jns
lcall
inc
mov
adc
in
movsl
sbb
fs
aas
lds
adc
dec
push
lret
pop
adc
jno
into
jmp
sbb
popf
pusha
fs
popf
dec
and
outsb
inc
xchg
mov
adc
inc
aaa
pop
cmp
cmp
cmp
mov
dec
repz
push
mov
add
mov
adc
jnp
pop
push
dec
cmp
add
cmp
dec
or
test
inc
pop
imul
addr16
stos
fstl
js
imul
shl
outsl
das
mov
pop
mov
shrl
js
xchg
mov
pusha
xor
adc
shlb
ss
inc
int3
push
sbb
daa
sahf
sarl
test
inc
rolb
add
push
shrl
fs
mov
mov
aaa
jnp
inc
lret
inc
inc
subl
int
stos
mov
in
int
cmp
shll
lcall
sahf
sbb
push
and
mov
adc
pushf
rdtsc
mov
xor
xor
cmp
into
cmp
jp
jg
loopne
decb
sarb
jns
cmp
push
psubsb
sbb
pop
jne
mov
push
dec
mov
test
addb
pop
xor
outsl
ret
pop
adc
cld
adc
das
pop
minps
mov
outsl
icebp
es
js
ret
sti
xchg
xor
lahf
jl
jno
lcall
and
test
cld
or
inc
fdivrs
push
aaa
adc
imul
aam
adc
dec
fistl
hlt
inc
mov
sub
popf
dec
stos
rcll
scas
jecxz
xlat
jnp
jae
lds
cmc
push
cmp
xor
sahf
fnstsw
jl
dec
shrb
lods
mov
dec
movsb
notl
aad
dec
popf
push
mov
pop
das
push
into
mov
mov
les
dec
insb
cmp
popf
mov
stos
mov
roll
cmp
ds
loope
xor
popa
or
ss
arpl
pop
push
adc
mov
mov
shrl
mov
lods
dec
in
mov
shr
ret
insl
cmpsb
xchg
test
sahf
lods
dec
into
jno
insb
dec
aad
xchg
loope
fildl
sbb
fldt
or
mov
xor
aaa
cmp
mov
and
in
jnp
test
sbb
rcl
sbb
push
ds
pushf
mov
sbbl
push
scas
jg
xchg
add
int
cmp
inc
stc
shll
ds
or
mov
pop
scas
ja
or
popf
insb
mov
idivl
movsb
or
jns
ss
mov
pop
xor
mov
inc
fbld
test
test
push
and
jg
push
push
cltd
imul
or
jno
adc
add
out
stc
xlat
xor
scas
stos
fbstp
lea
inc
loop
xor
and
arpl
adc
jb
push
mov
cmp
out
sti
jg
xor
jb
dec
sub
cmpsl
fwait
in
outsl
push
test
into
xor
or
movsl
movsb
jmp
call
pusha
xchg
inc
dec
mov
test
popf
mov
adc
cltd
mov
jns
jo
mov
insl
sub
arpl
pop
scas
sub
mov
and
mov
test
jns
ret
addl
gs
in
or
add
out
fimull
xor
shll
je
insl
cs
xorl
loope
test
sbb
mov
idivb
cmp
adc
loope
call
addr16
ss
or
int
rclb
cmp
jg
inc
pop
test
jnp
ja
inc
je
ficoms
lods
out
pop
cmp
nop
mov
jge
ja
mov
ss
xor
push
das
lret
cli
sbb
test
or
xor
sbb
addr16
insl
shrb
jb
xchg
pop
cmpsb
js,pt
push
ret
jge
mov
popl
push
scas
mov
enter
in
arpl
mov
int
ja
rcl
mov
data16
leave
add
shr
test
pop
iret
push
sahf
ret
sbb
push
imul
jl
fistl
pop
jns
xchg
dec
adc
popf
mov
pop
dec
pop
xor
imul
cs
inc
call
xorb
popf
push
mov
test
or
mov
xorl
inc
ja
stc
bound
lock
pop
cmp
dec
test
sbb
adc
fisttpll
sub
call
xor
dec
cmp
movhps
dec
mov
das
in
cmp
int3
movsw
adc
gs
xor
cmp
dec
add
cmp
jns
or
shrl
xor
or
adc
sbb
inc
push
ja
mov
push
jg
mov
xor
dec
scas
out
daa
adc
xor
aas
mov
mov
mov
jmp
scas
inc
repz
and
or
lcall
cmpb
and
inc
scas
je
mov
or
mov
cmpsb
jg
das
pusha
push
sbb
jae
mov
inc
lahf
insl
adc
fimull
test
out
xchg
ds
adc
cwtl
cwtl
jp
cmp
jl
fucomi
out
and
int3
test
std
push
mov
shll
cmp
test
inc
addr16
dec
inc
mov
dec
mov
fiadds
dec
mov
adc
mov
pop
jae
bound
push
mov
push
icebp
fstl
mov
xchg
test
js
push
and
test
hlt
sub
cli
loope
je
imul
xchg
addr16
jb
xor
das
ret
sbb
add
hlt
shlb
xchg
in
iret
push
pop
gs
shll
inc
jnp
xchg
sub
pop
dec
repnz
pushf
mov
mov
shlb
or
xchg
cmp
cmp
ret
adc
arpl
sub
cmp
in
mov
clc
sbb
sbb
seto
xor
dec
adc
pop
jae
mov
cmpsl
jns
or
leave
sub
pop
lret
imul
mov
loop
daa
mov
fcmovnu
mov
fwait
push
or
outsb
inc
es
ss
loopne
int3
pushf
xor
lret
dec
movsl
push
add
inc
lret
jle
sbb
imul
lret
insl
dec
popf
and
add
lahf
dec
cmp
add
scas
or
inc
cltd
out
inc
in
movsb
dec
syscall
in
call
pop
and
xor
push
mov
jmp
cmp
mov
lea
push
dec
mov
push
jbe
inc
jns
push
xchg
cmp
xchg
pop
stos
cmpsb
sbbl
xor
lcall
mov
hlt
lea
sub
mov
sbb
jg
sub
cmpsb
cli
jbe
mov
mov
lcall
cmp
or
jbe
imul
jg
gs
movd
fs
jne
popf
mov
inc
jno
bound
insl
inc
jne
aad
gs
jmp
push
aaa
iret
adc
cmp
xlat
cmp
add
adc
sbb
jecxz
loop
add
cmp
mov
or
es
fdivrl
add
addr16
adc
or
sarl
mov
mov
pushf
mov
xchg
sub
scas
adc
ljmp
push
pushw
sub
js
pop
mov
sbb
xchg
je
jmp
cmp
xlat
jns
cmp
cltd
dec
mov
add
int3
idivb
mov
arpl
repnz
rcll
mov
or
inc
stos
ret
pop
jp
pop
cld
xor
popf
arpl
lret
jo
or
pop
shrl
sub
jae
dec
clc
cmp
xor
lret
push
inc
call
jae
mov
lahf
dec
lret
dec
loopne
aas
mov
lea
fsts
xchg
jno
je
fstpl
movsl
int3
test
or
into
dec
adc
dec
imul
mul
addr16
shrb
xorb
ss
dec
loop
dec
and
or
arpl
enter
ja
insb
xor
cmp
lds
out
fcmovnb
scas
movsl
mov
jne
dec
hlt
lods
rep
inc
mov
cmp
es
int3
jo
js
scas
jns
cltd
xor
and
mov
xchg
xor
sbb
lds
in
cmp
cmp
add
pop
mov
in
add
cmpsl
aas
mov
cmp
cld
jl
cmp
pop
in
out
sub
xor
xchg
outsb
sub
lods
test
insb
into
iret
cld
ja
mov
jae
inc
cmp
jge
cwtl
ja
dec
add
mov
pop
mov
loope
aad
dec
adc
popa
sbb
repz
cs
mov
xor
jae
mov
sahf
sub
repnz
dec
dec
fisubrs
div
je
loope
shrl
adc
push
test
ficomps
inc
std
or
push
imul
xchg
lcall
jns
add
into
cmp
cmp
cmp
mov
nop
pop
pop
xchg
ja
add
mov
push
sbb
out
lea
pushf
xor
and
jnp
or
mov
push
sarl
push
and
aas
mov
and
out
repz
add
mov
in
fmul
dec
int
cmp
das
xor
adc
adc
add
mov
out
sbb
jns
cmp
insl
jecxz
and
push
adc
ss
dec
mov
mov
imul
mov
out
and
int
mov
stos
mov
and
loop
ss
mov
inc
mov
or
pushf
jnp
les
lret
pop
mov
int
imul
or
xor
cmp
cltd
inc
les
test
int
cmp
les
lahf
outsb
cmp
scas
mov
cltd
lahf
fs
jo
push
pop
dec
insb
cli
cli
jne
cmp
stc
sti
cltd
add
dec
jne
popf
and
lahf
and
test
nop
mov
movsb
or
cmp
cmp
pop
adc
inc
inc
rcll
shl
ds
les
cmp
xchg
loope
je
adc
pusha
outsb
inc
push
shll
sub
xlat
ja
ljmp
sub
xchg
insb
stos
idivb
xor
mov
jg
incl
xor
sbb
push
mov
add
jmp
push
pop
mov
or
call
xchg
push
mov
push
sub
jle
pop
sbb
cmp
jbe
aam
sbb
and
xchg
xchg
xchg
xchg
das
and
xchg
cltd
int
jmp
gs
imul
pop
fisubrs
stos
xor
sub
sub
cmp
mov
divb
int
popf
jp
out
mov
loop
repnz
daa
inc
hlt
xor
fmull
scas
xor
pop
and
mov
cmpsl
scas
ror
or
xchg
sbb
push
loope
test
xor
cmp
fsubrs
out
mov
xor
xor
or
int3
icebp
sub
cmp
hlt
push
xor
insl
sub
adc
xlat
cwtl
mov
push
lods
ja
or
dec
cltd
lds
jbe
cmp
dec
push
imul
aad
cmp
mov
cmp
xchg
mov
add
into
sti
xor
push
into
add
dec
add
xchg
add
les
lret
push
test
mov
sub
inc
inc
lds
mov
call
sti
scas
ljmp
mov
cli
sarl
pop
lods
inc
add
adc
push
cmpb
mov
add
mov
pop
and
jnp
gs
jne
sub
cmp
subb
jp
call
inc
fistps
jl
xor
or
std
adc
popf
mov
test
sbb
and
jg
cmc
in
imul
xlat
jp
int
movsl
aas
lea
inc
in
int
push
and
jle
cmp
push
xor
sbb
subb
rcll
inc
cmp
std
cmpsb
cmp
mov
ret
pop
pop
adc
cmpl
jle
sbb
jg
mov
mov
stc
xor
packssdw
mov
cs
jp
jbe
leave
inc
fistl
out
xor
mov
push
jae
into
sti
push
out
sub
sbb
test
or
daa
aad
push
aam
cmp
cmpl
cli
jp
fs
add
jne
sbb
xor
and
rcrl
dec
cld
inc
cmpsl
xchg
xchg
testl
xor
enter
mov
imul
out
and
xor
push
test
jnp
mov
jbe
test
lds
shlb
movsb
les
jnp
jnp
sub
lahf
adc
cld
in
sbb
xchg
pop
stos
sbb
dec
cmp
sub
xor
pop
pop
push
test
idiv
xchg
add
movhlps
outsb
cmpsb
sbb
jo
in
hlt
lock
sti
push
fcoml
mov
xchg
push
xor
lea
inc
mov
sub
mov
jl
mov
add
mov
push
ret
in
ds
pop
jl
jns
pop
cmp
fisttpll
mov
aaa
jecxz
adcl
sbb
stos
divl
in
inc
jns
mov
mov
popf
jne
mov
mov
imul
aaa
aas
mov
in
leave
xor
xchg
dec
out
divl
js
pop
cmc
int
jmp
ds
xchg
mov
cmpsl
mov
mov
icebp
xor
mov
hlt
push
lahf
xchg
or
dec
mov
push
adc
daa
inc
xchg
sub
dec
hlt
push
jle
lea
stos
sub
in
inc
cmp
mov
sti
enter
cmpsl
jmp
out
gs
xor
xchg
adc
mov
push
daa
mov
sub
inc
mov
xor
xchg
add
pop
and
fst
outsl
adc
sub
cld
push
into
mov
and
jb
addb
cmp
loopne
testb
enter
inc
std
mov
jno
lcall
inc
movsl
mov
and
mov
test
scas
fistpl
jmp
jb
popa
fisubs
mov
cmp
xor
xchg
int
dec
dec
scas
rclb
inc
repz
shll
cmp
xchg
movsl
imul
cmp
mov
mov
jno
mov
mov
aas
clc
rorl
cmp
mov
adc
popa
int
inc
lret
xchg
add
lock
mov
mov
dec
jae
jg
pop
xor
jg
fistps
xchg
sbb
mov
sub
imul
pop
mov
test
js
int
and
ret
dec
xchg
sub
dec
call
sbb
fldl
in
imul
rorl
hlt
mov
mov
mov
dec
cmp
mov
jns
mov
lea
inc
add
push
movsb
negl
gs
jg
or
in
pop
fwait
pop
fsts
lods
ja
popf
stos
shrl
ret
add
scas
add
repnz
xchg
cmp
sahf
dec
sbb
fisttps
pop
xchg
sbbb
incb
sbb
fucomip
lcall
fistps
pop
fcmovbe
and
add
jnp
cld
mov
and
test
sub
sti
rolb
daa
outsl
notl
and
repz
pop
mov
xor
enter
stos
xlat
aaa
xor
and
pop
dec
sub
movsw
or
xor
stos
or
lds
movsl
push
ss
pop
adc
popf
scas
mov
xorb
or
pop
jb
imul
daa
adc
jbe
mov
aaa
and
lods
mov
push
aas
loope
notl
jns
cmp
mov
imul
es
inc
add
fsubp
sarl
fneni(8087
mov
pop
leave
or
mov
jns
rcr
push
pop
daa
mov
mov
xorl
pop
push
push
jmp
cmp
clc
inc
fwait
mov
popf
mov
sub
imul
adc
mov
push
lea
xor
outsb
mov
adc
fucomi
cmp
mov
or
mov
popf
outsb
mov
add
mov
mov
scas
bound
push
cmpsb
out
imul
mov
mov
mov
stc
dec
or
jno
ss
lods
cwtl
lods
jge
mov
xchg
mov
xchg
push
jns
xor
adc
pop
jp
movsl
rcll
pop
dec
sbb
and
shll
shll
push
int
adc
dec
pop
stc
insb
sbb
jecxz
xor
sahf
movsl
sbbl
lret
cmc
or
mov
stc
fsts
int
jp
stc
int3
sbb
fs
andl
mov
push
test
imul
addr16
int
lds
dec
mov
add
imul
or
scas
sub
dec
notl
mov
enter
mov
jge
fcmovnbe
gs
cmp
dec
in
ret
pop
inc
dec
push
xchg
mov
xchg
loopne
loope
rolb
loop
pop
mov
mov
mov
xchg
repz
cltd
jbe,pn
mov
inc
sub
cmp
push
xor
mov
inc
jo
mov
add
dec
xor
sbb
movsl
fs
mov
ficompl
enter
int3
lds
pushf
xor
adc
push
clc
insl
mull
orl
pop
xor
stos
push
into
jecxz
enter
xchg
dec
and
and
scas
adc
xchg
pusha
cltd
mov
pop
pop
std
ss
inc
cltd
sbb
pop
shrb
insb
pop
jnp
xor
mov
mov
dec
jbe
pop
and
popa
cli
pop
mov
push
out
xor
inc
ss
mov
add
out
sub
mov
cmp
jnp
sub
lret
or
xor
jns
cmp
dec
xchg
je
or
xor
adc
sbb
adc
push
pop
mov
mov
jno
dec
sbb
rcrl
lods
mov
push
jmp
cmp
mov
insl
leave
rcll
jge
mul
icebp
push
xor
xor
xor
cmp
rcrl
stos
sbb
cmp
scas
divb
into
jb
add
addr16
insb
orl
adc
cmpsl
aas
mov
pushl
inc
mov
cmp
xchg
or
and
fdivp
lds
sub
mov
push
inc
dec
xor
loope
dec
xchg
xchg
imul
cmp
repnz
dec
cmpsl
roll
push
filds
sbb
adc
es
xchg
test
fstl
mov
cmpsb
xchg
mov
xchg
imul
xchg
mov
cmp
sub
stos
inc
insb
mov
aad
bound
xchg
pop
dec
mov
cmp
cmp
bound
dec
cld
push
jo
pop
ljmp
add
fmuls
inc
cmpsb
pop
aam
mov
xor
xor
cmp
dec
cltd
mov
in
imul
inc
icebp
out
icebp
inc
xor
xorl
repnz
sti
and
rcrl
pop
sub
imul
sub
dec
rol
xor
outsb
and
dec
sbb
xor
call
mov
cmp
inc
rol
leave
mov
add
add
mov
stos
repnz
out
pop
dec
pop
loope
push
pop
inc
pop
stc
or
stc
bound
int3
into
rcl
xchg
jl
fcomps
sbb
add
sbb
inc
lods
dec
mov
push
inc
sahf
or
sbb
pop
xchg
jno
cwtl
dec
pop
cmp
idiv
cmp
mov
jno
outsl
aas
push
addl
sahf
mov
aam
dec
clc
jbe
aad
in
jae
lret
jl
xor
popa
sbb
cmp
mov
bound
add
push
xchg
sbb
lds
dec
sbb
sarb
jns
outsb
test
cmp
xchg
gs
mov
test
inc
call
add
xor
mov
cwtd
push
ficoml
fmull
mov
cmp
or
push
jp
lret
inc
pop
out
aas
dec
jmp
push
fwait
daa
and
mov
and
lret
cmp
int3
push
xor
jbe
cmp
or
or
inc
xor
imul
lods
sti
mov
movsl
into
inc
outsb
mov
inc
and
dec
insl
xchg
test
adc
orb
in
adc
popa
int
mov
push
mov
cmp
inc
or
push
clc
mov
imul
mov
into
cmp
xor
imul
mov
or
mov
xchg
adc
scas
dec
dec
leave
push
sbb
xchg
xor
xor
jb
leave
jbe
and
xchg
adc
clc
push
out
rorl
inc
mov
scas
add
cmc
and
and
dec
and
jns
cmp
imul
or
mov
int3
scas
and
mov
push
fwait
icebp
mov
mov
mov
dec
jmp
cs
push
adc
and
sub
and
sbb
cmp
jne
pop
dec
and
gs
lret
lock
mov
jmp
sahf
inc
mov
arpl
sbb
push
fmull
cmp
fidivrl
sub
mov
jae
pop
dec
xor
jo
sbb
pop
pmullw
pop
lock
cmp
js
pop
inc
sub
popf
enter
dec
mulps
ss
mov
ret
leave
dec
jl
jo
stc
cwtl
jp
fdivrl
loop
dec
into
jnp
sub
dec
sbb
mov
sbb
mov
imul
pop
jns
js
bound
and
movsl
cmp
dec
popf
je
dec
test
clc
inc
inc
sub
outsb
cmpsl
mov
fldcw
mov
lods
pop
or
cltd
pop
loope
push
and
push
adc
test
lds
xorl
xchg
or
pop
mov
mov
bound
mov
aaa
adc
xor
stc
pop
dec
mov
lcall
jns
dec
popa
dec
aaa
cmp
fcmovne
lret
add
add
pop
and
fucomi
cmp
nop
lods
call
in
cmp
lea
repz
jno
dec
sti
or
cmp
movsl
add
stc
jb
xchg
repnz
mov
int3
mov
cs
inc
and
int
cmp
mov
xor
das
adc
cmp
movsl
sbb
xchg
add
or
aas
inc
gs
mov
cmp
sahf
insl
xor
inc
xorb
jne
dec
xchg
and
push
iret
sub
dec
jle
bnd
lret
mov
sbb
aas
bound
lea
aaa
stc
cmp
xor
cmp
mov
sbb
loope
rorl
add
sub
jecxz
lret
stc
fucom
push
inc
shll
and
add
mov
ficoml
shrb
scas
fldt
xor
nop
mov
jo
push
mov
iret
add
or
xlat
cmp
jno
sbb
rcr
cmpsl
xchg
jp
cld
jno
dec
cmp
xchg
cmp
xchg
cmp
fildll
inc
fcomip
push
dec
cmp
out
repz
dec
rorb
jne
scas
rorb
jnp
jb
and
ss
lods
cmp
lods
cmp
pushf
mov
test
dec
cmp
adc
xchg
jne
pop
repz
inc
cmp
inc
mov
adc
xor
cmp
jg
fldenv
repnz
test
pop
push
shll
jno
xchg
inc
xor
inc
gs
out
inc
cmp
js
mov
mov
xchg
and
cmp
repz
clc
aaa
pusha
test
scas
jmp
dec
fwait
idivb
dec
ficompl
mov
dec
pop
or
jle
sbb
mov
cltd
jmp
push
mov
shrl
repz
inc
push
jno
mov
xchg
push
rcrl
add
xchg
nop
stc
lock
movsl
mov
mov
push
jbe
push
pop
xchg
push
sub
inc
inc
adc
or
xorb
cmp
mov
jecxz
ret
jecxz
push
imul
lret
sbb
sar
dec
inc
cmp
ljmp
dec
test
adc
inc
cmp
lahf
xor
lds
aas
adc
in
inc
imul
or
mov
ss
sarl
mov
testl
daa
xor
scas
popf
data16
lea
stc
adc
xor
and
cltd
jno
sbb
xor
cltd
pop
cld
mov
dec
mov
pusha
mov
loop
adc
mov
ja
xor
rcrl
clc
ss
push
push
jb
sbb
jg
test
pop
push
icebp
xchg
fs
mov
dec
mov
add
and
jne
fs
xor
andl
ljmp
xor
ja
dec
lds
mov
cmp
and
push
adc
clc
dec
shlb
mov
jbe
dec
jmp
mov
imul
popf
inc
mov
cmp
push
gs
outsl
and
leave
pusha
mov
sarl
cmc
shll
mov
lahf
xchg
inc
xchg
xchg
cmp
push
inc
dec
ljmp
cmpsb
shlb
inc
lds
aaa
cmp
pop
xchg
inc
mov
iret
lahf
mov
jmp
dec
lahf
jns
push
pop
scas
push
inc
push
jne
mov
inc
int3
or
ds
test
aas
sbb
dec
idivl
dec
mov
pop
shrl
cmp
jae
stos
or
leave
test
nop
inc
lds
inc
jg
mov
out
test
jo
out
popa
lods
in
adcl
out
pop
daa
ficompl
and
pop
or
mov
xor
fld
sbb
sti
loop
pop
flds
mov
insl
lret
add
mov
mov
cli
inc
mov
cltd
pop
cmpsl
aad
push
enter
dec
jbe
mov
lahf
leave
mov
cmp
int
int3
shlb
sbb
inc
cmp
cmp
xorb
insl
fs
sti
fstpt
imul
jno
test
imul
dec
sub
in
cld
stc
rcrl
sbb
sarl
call
fdivrl
mov
js
mov
cmp
scas
icebp
pop
dec
notb
mov
or
cmp
xor
js
cmp
stc
jmp
in
aad
xchg
pop
cmpsb
in
mov
movb
inc
std
test
hlt
insl
xchg
jle
jno
frstor
fdivl
cli
inc
dec
loopne
mov
mov
aas
mov
inc
mov
adc
cwtl
lahf
jl
cmp
xchg
mov
push
and
xchg
movsb
cmpsl
add
jns
int3
sbb
pop
movsb
pop
fildll
cmp
xor
fs
int
sbb
iret
hlt
movsb
adc
cwtl
adc
inc
mov
mov
push
or
loope
adc
pop
rolb
xor
fidivrl
out
or
cmp
in
cltd
or
mov
das
out
in
fisttpll
rclb
int3
lods
imul
inc
test
je
sbbl
xor
jns
add
arpl
add
push
cmpb
aas
iret
push
push
aad
sbb
das
jl
std
js
and
lea
hlt
adc
sbb
leave
pop
jbe
mov
xor
scas
cmpsl
add
xor
xor
mov
movsl
ret
dec
lahf
popa
xor
imul
out
adc
xor
cmp
mov
fimuls
mov
dec
inc
adc
arpl
pop
mov
xor
js
sbb
pop
xchg
push
out
inc
popf
cmp
movsl
cmp
loopne
xor
mov
mov
mov
enter
xchg
aas
jmp
and
rcrb
pop
add
jnp
mov
mov
stos
cmpl
ja
data16
sub
lds
xor
jne
ja
xchg
leave
cmp
shll
mov
addr16
push
in
mov
push
or
dec
push
dec
mov
repnz
mov
or
mov
test
in
test
rorb
and
xor
js
adc
jmp
xor
lds
xchg
in
scas
inc
mov
push
popa
stos
stos
xchg
dec
and
xchg
mov
pop
push
stos
les
int
xchg
mov
or
mov
add
mov
subb
dec
test
int
adc
lret
ror
pop
mov
addr16
mov
das
or
mov
pop
aas
bound
push
cmp
jmp
cmp
jnp
xor
xchg
mov
call
cmp
mov
aaa
xor
fisttpl
or
sti
add
push
mov
cmc
jp
cmp
push
movsl
inc
in
lcall
mov
dec
cmp
test
cmp
mov
mov
cmpsb
cmp
sub
arpl
cmpsb
mov
shll
cmp
push
addr16
jb
in
int
in
outsb
fsubrs
pushf
negl
insl
repz
dec
fistl
mov
int
and
cmp
mov
mov
or
int
adc
fbld
jp
mov
jp
adc
xor
adc
push
jbe
dec
or
addr16
push
cmp
jg
mov
or
test
mov
mov
test
cmpsl
pushf
xchg
cwtl
sbb
mov
aas
insl
xor
mov
mov
out
cs
xchg
pop
daa
mov
call
lret
or
orb
push
imul
jbe
jnp
imul
ljmp
ljmp
push
xchg
cli
mov
imul
jl
lahf
xchg
xchg
mov
mov
mov
mov
aad
cmp
adc
imul
xor
cmpsb
jb
xchg
xchg
push
pop
enter
mov
push
insl
jmp
add
xor
dec
mov
xor
xlat
mov
add
mov
dec
cmpsl
js
sub
popa
out
ret
sbb
cltd
and
push
jo
add
std
push
out
jmp
call
add
xor
mov
push
int3
add
js
enter
jb
dec
cli
mov
movsb
scas
insl
mov
in
jecxz
in
rcl
lds
jb
aas
and
mov
es
cmpsb
sbb
in
pop
int
arpl
shrb
sbb
ja
push
adc
pop
jl
jae
inc
stos
mov
xor
adc
imull
cmpsl
mov
mov
cmpl
imul
inc
or
pop
push
into
nop
dec
loope
loopne
fistpl
push
mov
into
popf
dec
jp
paddw
cmc
enter
push
pop
sahf
lods
xor
sbb
lahf
xchg
cmpsb
dec
dec
add
and
out
cmp
sub
movsb
repz
mov
add
insb
cli
adcb
out
add
popf
cmp
sahf
xor
scas
or
dec
adc
push
dec
cli
inc
ret
shrb
push
xchg
mov
mov
dec
pslld
jmp
ret
fisubs
shll
cmp
test
shrl
cld
in
xchg
lea
orl
cli
cmpsb
cmp
bound
test
repnz
mov
mov
out
mov
and
hlt
jno
or
xchg
xor
pop
cmp
jge
jle
pusha
loope
scas
mov
scas
or
movsl
stc
mov
xchg
xchg
xor
addb
xor
lret
cmpsb
cmpl
jns
call
mov
mov
pusha
orl
xchg
push
mov
inc
test
mov
or
add
mov
lret
mov
repz
cmp
lods
outsb
add
in
cmp
cmp
lods
inc
lods
add
push
xor
mov
cmp
es
orb
dec
xor
sysret
add
push
xor
pop
inc
ljmp
stos
fs
add
dec
pop
std
push
cmpsl
pushf
add
push
jp
out
inc
mov
dec
mov
pop
add
lcall
cwtl
mov
fldl
jge
rclb
mov
dec
mov
jae
dec
xchg
sbb
cltd
jmp
ljmp
xchg
mov
imul
imul
out
cltd
test
dec
push
or
xchg
inc
or
aad
mov
cli
mov
int
cmpsl
push
out
loopne
sbb
xor
and
xchg
imul
xor
lret
push
loopne
xchg
lahf
and
mov
mov
and
in
push
loop
dec
jae
jno
sbb
cmc
dec
jne
hlt
pop
add
push
xor
subl
test
mov
push
push
lods
adc
iret
mov
add
sbb
mov
xchg
aad
loope
adc
mov
xor
cmp
xchg
dec
push
mov
insb
mov
insl
aaa
cmpsl
xor
fldlg2
sbb
mov
bound
dec
and
pop
shrb
fcomps
stos
mov
divl
lds
ss
jge
jle
inc
jg
dec
pop
xorb
loope
scas
test
cmp
add
in
dec
jne
xlat
jecxz
aas
jns
rep
push
idivb
ja
mov
xor
js
shlb
and
mov
and
sbb
fldl
mov
or
rorl
scas
adc
mov
cli
dec
stos
jmp
pop
cmp
test
and
dec
loopne
ss
rcrb
adcl
and
xchg
lea
rcrl
mov
pusha
fdivl
popa
push
cmp
cltd
dec
arpl
xchg
inc
xchg
mov
adc
lods
push
shlb
fcmovnu
push
andb
lret
dec
xchg
rcrb
add
cmp
push
adc
xor
sbb
aaa
movsl
mov
shrb
hlt
imul
lcall
aaa
iret
xchg
or
adc
inc
cmc
popf
lret
pop
inc
mov
mov
ja
jns
jo
cmpsl
sbb
pop
loopne
and
mov
enter
inc
lret
in
scas
mov
dec
fdivrp
cmpsb
mov
enter
js
push
mov
addr16
scas
push
dec
icebp
inc
pop
and
jmp
fldcw
xor
jns
mov
cmp
in
movsl
ja
xchg
pop
adc
int3
mov
mov
dec
dec
scas
sub
shl
cmpsl
cmpl
imul
mov
inc
movsb
loop
cmpsl
push
in
ds
pop
push
mov
xor
or
sbb
dec
stc
cmp
xor
or
imul
aas
repnz
adc
mov
lahf
inc
imul
xchg
out
sub
lods
ret
enter
inc
xor
ds
cmp
sub
inc
jl
xor
jns
ljmp
cld
movsb
sbb
push
xchg
mov
mov
fidivrl
jp
adc
insw
cltd
push
jle
jne
cmp
pop
or
mov
aas
inc
rcrl
mov
pop
and
mov
cmp
out
xchg
jne
jns
jg
aas
push
sbb
icebp
pop
cmpsb
outsl
dec
or
fcompl
mov
push
sub
into
ja
dec
rcl
and
fstp
mov
addr16
imul
pop
xchg
test
test
dec
dec
jns
jmp
aaa
jb
mov
cmp
fldt
xchg
dec
stos
fwait
cwtl
arpl
lds
mov
dec
shl
dec
dec
add
jecxz
push
cmp
push
adc
xchg
ljmp
das
idiv
dec
xorl
outsl
or
jo
daa
xchg
cmpsl
adc
inc
adc
imul
add
mov
jbe
or
cmp
fisttps
adc
inc
or
mov
mov
inc
xor
xchg
adc
adc
mov
aaa
inc
stc
ja
sbb
dec
popf
jl
pop
mov
adc
stos
sub
adc
fnstenv
and
add
push
mov
jno
test
mov
push
pshufw
test
xor
cmp
xor
pop
push
xchg
jno
xchg
pop
mov
pop
jo
push
cmpsl
dec
mov
cmp
ljmp
adcl
push
js
jno
sub
cld
int3
jg
loopne
lcall
sub
inc
popa
sti
scas
jne
lock
dec
sbb
fucompp
inc
cmp
adc
mov
sarl
cli
fwait
adc
and
adc
sub
bound
and
out
xlat
dec
pop
dec
cli
fwait
aas
test
enter
popa
mov
jecxz
testl
int
mov
test
loopne
cmp
adc
ret
imul
fcomip
into
cmc
xor
ret
jl
sub
sbb
xor
imul
xor
dec
fs
cmp
pop
inc
in
add
adcl
or
dec
test
lea
leave
dec
dec
dec
clc
fucomp
jae
xor
les
pop
inc
adc
push
sbb
push
insl
test
imul
xchg
outsb
int3
adc
fwait
orb
mov
cmp
aas
pop
mov
cmp
or
xor
insb
cli
mov
mov
es
xchg
data16
scas
push
lods
mov
scas
push
icebp
push
cmp
xlat
push
shr
xchg
ja
js
arpl
inc
inc
adc
sub
cmc
dec
test
rcl
jbe
sti
insl
adc
sti
insl
sbb
sti
insl
inc
scas
aas
mov
clc
arpl
mov
leave
in
sbb
sbb
shll
xor
jbe
movsb
aas
cmpsb
xor
push
mov
lds
insl
mov
dec
xor
mov
cmp
adcb
jmp
pop
push
cmp
mov
cmp
xor
sbb
xor
fs
xor
jg
or
pop
mov
loop
push
in
negl
aaa
jns
iret
repz
mov
je
lcall
mov
dec
arpl
imul
mov
mov
imul
cmp
mov
push
mov
push
mov
push
jno
adc
stc
xor
mov
or
mov
sbb
fimuls
sbb
inc
xor
adc
repz
mov
lods
mov
hlt
lea
mov
scas
insb
pop
cmp
ss
popf
xor
pop
testl
adc
adc
inc
dec
fildl
fwait
aas
sbb
ljmp
lods
rorl
mov
popa
mov
enter
push
jb
push
pusha
ret
test
sbb
hlt
arpl
dec
mov
addb
cmp
push
std
cmp
jmp
cmpsl
fisttpll
sbb
mov
divl
dec
pop
ja
and
sub
push
pop
mov
icebp
fisttpl
repnz
adc
in
pop
pop
or
dec
add
dec
adc
shlb
ja
xor
repz
iret
dec
test
or
sub
fwait
movsb
cmp
std
divl
int
fwait
adc
std
pop
adc
imul
cmp
pop
inc
mov
popf
gs
data16
pop
insb
aaa
sbbl
and
es
popa
loope
inc
xchg
pop
pushf
xor
aaa
inc
fidivs
add
adc
nop
inc
sub
sbb
mov
aaa
in
fistps
ljmp
andl
adc
adcb
cmp
dec
int3
or
sbb
push
or
sahf
mov
dec
sub
cmc
jp
inc
xchg
xor
imul
mov
imul
or
jge
mov
lret
arpl
int
call
mov
sub
ret
adc
adc
push
pop
jle
xchg
pop
aaa
mov
mov
icebp
adc
mov
sbbb
push
gs
aaa
int
repnz
movsl
ja
insl
push
add
jb
out
fs
push
pop
lcall
stos
in
gs
repnz
ret
test
push
and
inc
movsl
mov
dec
mov
push
bound
popa
daa
js
jb
lret
push
jno
adc
push
outsl
jp
sub
popf
jnp
push
mov
enter
inc
lret
lret
or
arpl
jne
mov
push
push
pop
test
xchg
cmp
mov
stc
loopne
push
dec
sub
inc
mov
dec
add
and
or
rorb
das
scas
mov
outsl
dec
or
mov
std
pop
negl
push
mov
sbb
and
fcomps
mov
mov
dec
fiaddl
shlb
fcomip
adc
sbb
sarl
in
and
xchg
xor
sbb
jno
ss
mov
push
leave
sub
inc
xchg
inc
or
sub
imul
or
or
jmp
sbb
xor
mov
lds
mov
lods
cli
xor
aaa
sub
cmpsl
mov
pop
and
mov
repz
cltd
ss
lss
test
add
mov
enter
mov
mov
mov
inc
jmp
inc
shlb
pop
adc
pop
insb
or
push
mov
mov
mov
movsb
addr16
insb
pop
lcall
jno
sahf
adc
jl
push
mov
mov
and
xchg
cmp
inc
inc
ja
pop
test
fwait
test
jg
xchg
sbb
dec
lret
pushf
out
mov
rol
pop
cmpsl
adc
aam
push
xchg
lock
mov
pop
dec
inc
insl
and
mov
inc
scas
fs
inc
sbb
cmp
test
into
add
xchg
mov
pusha
sub
fcompl
push
cmp
cmp
dec
lret
cld
push
push
cmp
inc
adc
sbb
mov
cmpl
pop
mov
pop
lds
mov
sbb
addr16
ss
pop
jo
pop
push
icebp
ljmp
mov
arpl
out
pop
push
out
scas
xor
push
or
lret
popf
or
loope
and
mov
ss
adc
mov
mov
cmpsb
adc
mov
push
fists
or
mov
inc
cmp
into
xor
jo
arpl
jns
sti
xchg
xchg
sbb
push
insb
dec
cmp
inc
std
mov
jmp
cmp
pushf
add
sbb
xor
mov
lahf
loopne
jo
pop
sti
aaa
lock
inc
jb
push
pop
mov
in
ss
inc
dec
adc
sbb
jns
adc
dec
xorl
rcll
pop
mov
ret
sub
mov
cs
sbb
mov
ds
xor
imul
loop
int3
jno
xor
icebp
jne
mov
xor
insl
and
aas
or
mov
sub
or
push
pop
or
add
push
cmp
xor
out
imul
xor
adc
scas
das
cmp
adc
dec
inc
add
jno
int3
sbb
push
lock
lret
dec
cmp
gs
mov
inc
clc
jg
pop
mov
clc
push
movsb
and
dec
mov
sub
and
and
mov
lea
mov
inc
std
adc
cli
movsl
fucomi
mov
dec
stos
inc
cmp
lret
cmpsb
jmp
pop
fld
sarb
sbb
leave
xchg
shrl
popf
outsb
fs
mov
cld
aas
jo
sub
shrl
movsb
scas
aam
cli
pop
inc
mov
sbb
cltd
dec
xor
jmp
jmp
inc
xchg
lcall
jl
jmp
jbe
lcall
xor
out
xchg
insl
push
xor
inc
fwait
rcrb
pop
jbe
lret
sbb
mov
inc
mov
ss
or
dec
inc
lea
sarl
aaa
mov
xor
adc
gs
lock
cli
dec
jp
mov
sbb
xchg
imul
jno
popf
rcrb
mov
cmc
mov
adc
ds
cmp
xchg
pop
xorl
jo
xchg
cmpl
jg
jnp
int3
fistl
push
insl
andb
xchg
jns
mov
xor
xor
movb
mov
or
jo
mov
iret
push
cli
stos
dec
insl
ficomps
imul
mov
push
sub
imul
insb
sbb
mov
xor
or
mov
jno
fs
pop
clc
sbb
jg
pop
add
xchg
push
push
mov
imul
daa
cmp
lret
dec
cmpsl
push
dec
lods
adc
mov
outsl
popf
pop
test
xchg
pusha
inc
stos
imul
mov
addl
ljmp
mov
loopne
lea
mov
pusha
mov
in
loope
divl
popa
push
daa
cmp
mov
xorb
mov
popf
fwait
roll
jmp
inc
fs
mov
xor
insb
adc
cmp
mov
inc
mov
mov
dec
mov
into
jbe
xor
lcall
dec
mov
negl
jbe,pn
idivb
push
loop
and
push
outsl
add
repnz
mov
pop
or
les
sbb
mov
mov
inc
xor
pushf
cmp
fsub
mov
add
mov
sti
sub
mov
imul
call
xorl
and
jmp
pop
dec
mov
push
dec
clc
sbb
mov
and
insl
cmpsl
xor
cld
xor
xor
imul
imul
ds
in
notl
ljmp
push
mov
pop
pop
inc
push
xor
push
sahf
adc
push
aad
pushf
sub
or
fwait
test
fwait
cmp
lock
adc
cmp
cmp
adc
mov
int3
adc
jns
inc
stos
jecxz
pop
adc
mov
fidivrl
mov
inc
out
mov
bound
adc
push
stc
movsl
push
loop
xchg
mov
lock
push
push
mov
outsl
fwait
xor
xor
mov
pop
mov
aaa
add
or
test
stos
dec
adc
or
in
int
xor
xchg
or
gs
popa
push
inc
cmp
popf
push
sbb
inc
aaa
ss
repz
arpl
inc
pop
push
cmp
inc
xor
imul
sbb
add
dec
gs
mov
icebp
nop
xchg
xor
sub
mov
repnz
cmp
imul
mov
inc
rcll
arpl
cld
in
sti
adc
ret
add
lods
cmp
clc
sbb
jb
sbb
fidivl
test
jnp
movsl
sub
push
test
and
xchg
inc
repnz
xchg
mov
lcall
aas
sbb
jecxz
adc
dec
jmp
jne
mov
jl
push
inc
ljmp
inc
mov
dec
sbb
and
mov
jnp
pop
pop
inc
stos
lea
test
inc
int
in
test
adc
jne
and
mov
and
push
xchg
cwtl
pop
inc
dec
popf
push
jno
inc
cmpsb
jns
push
testl
and
mov
sbb
lods
cmp
addb
shl
test
lds
out
cmp
add
into
sbb
int
ds
pop
mov
imul
cmpsl
push
jl
mov
push
cs
pop
ds
fisubl
add
loopne
dec
sbb
mov
in
and
insl
mov
jp
sar
js
jp
enter
cmp
out
xor
pusha
sub
stc
icebp
or
in
sbb
dec
movsl
add
fisubrs
pushf
movsl
ss
or
aaa
lods
stc
rcrl
les
call
movsb
push
idiv
int3
inc
dec
insl
arpl
push
and
pop
insb
jno
xor
imul
xchg
insl
cltd
inc
push
mov
xchg
bound
mov
jp
xlat
lret
jbe
jne
jb
test
popf
scas
lret
pushf
gs
adc
mov
jno
test
mov
xchg
loopne
or
mov
ds
negl
mov
popa
test
movsb
push
mov
into
mov
xchg
sub
xchg
int
out
call
cmp
mov
lea
shrl
sub
jbe
lds
imul
pop
leave
test
jle
push
mov
in
adc
cmp
ss
stos
hlt
pop
into
mov
les
adc
or
or
lea
pop
push
scas
push
lahf
mov
or
pop
mov
daa
jb
sbb
mov
dec
sub
std
sub
inc
adcb
jne
push
xor
lods
hlt
and
test
jmp
jg
outsl
jnp
test
int
loop
xor
inc
xchg
or
mov
sti
shll
pop
jmp
xor
and
push
jne
mov
add
push
add
push
popa
cmp
cmp
xlat
outsb
cmp
and
cmp
mov
stc
jle
jecxz
jbe
je
xchg
pop
push
push
dec
inc
ja
xchg
inc
aaa
lock
adc
divl
pop
mov
lock
push
sbb
lods
pop
cltd
clc
xchg
pop
les
pop
pop
jae
pop
ret
xor
test
inc
imul
jle
out
loop
gs
xor
pop
mov
xchg
jbe
fwait
dec
mov
ja
or
mov
xchg
scas
sub
aad
lock
mov
leave
lods
sbb
pop
shll
xchg
je,pt
or
jge
xchg
icebp
lea
pop
or
int
adc
sahf
jmp
mov
stc
mov
cmp
mov
hlt
ljmp
push
addb
imul
sbb
inc
xor
insb
test
sbb
xchg
scas
dec
pop
test
push
or
mov
lahf
jmp
test
out
lcall
out
out
push
pushf
sbb
mov
stos
stc
mov
mov
mov
xchg
iret
and
dec
mov
int3
mov
loope
fwait
xorl
cmpb
sbb
test
sub
or
mov
fadds
mov
cmpsb
mov
adc
and
ss
popf
mov
bound
fld
jae
clc
dec
pop
mov
xor
cmp
jno
mov
pop
xchg
orb
pop
fcoml
xchg
repz
or
popf
and
mov
test
pop
adcb
lea
mov
test
nop
ljmp
rep
adc
ss
scas
add
sbb
imul
jns
lea
sub
jecxz
cmp
aaa
cmp
roll
jbe
mov
out
aam
mov
call
jbe
lock
pushl
xor
fidivl
cvtps2pd
sub
and
mov
testb
ja
addl
mov
sbb
dec
add
mov
jmp
dec
mov
aam
lock
test
lods
clc
clc
aaa
notb
dec
mov
push
pop
xchg
mov
mov
jge
pop
inc
adcb
pop
scas
jmp
mov
mov
and
mov
adc
ljmp
cmp
pop
insl
imul
test
pop
jae
fiadds
cmp
popf
leave
mov
or
jecxz
pop
js
mov
pmaxub
out
cmp
stc
sub
cmp
and
dec
imul
cmpsl
or
sub
mov
cmp
adc
scas
icebp
pop
repnz
rorl
inc
xchg
in
pushf
sbb
xchg
scas
and
lret
ret
scas
adcb
out
dec
sub
jns
jle
mov
add
xor
mov
fstl
mov
sti
or
cmpsb
icebp
adc
out
sub
daa
dec
push
dec
mov
inc
repnz
mov
mov
jns
int
mov
aad
lea
lods
sub
lods
andb
lcall
xor
jge
shrl
mov
jae
in
out
inc
roll
push
sub
in
or
test
cmp
loop
inc
xor
cmpsb
push
push
push
loop
inc
mov
xor
imul
popf
xchg
mov
cmp
mov
ja
xor
shll
xchg
pop
insb
and
jns
mov
xchg
pop
xchg
test
icebp
rclb
adc
xchg
pop
rorl
loop
dec
jo
mov
lea
mov
shrl
lods
test
loopne
rcrl
add
mov
adc
inc
xchg
pop
dec
mov
or
dec
jns
notb
jmp
pop
and
mov
add
jg
push
inc
mov
aas
push
xchg
mov
jne
lds
jae
inc
or
nop
pop
arpl
repnz
in
fs
pop
notb
xchg
stc
dec
cmpb
bound
insl
jg
clc
pop
in
gs
imull
mov
rcrb
push
adcb
fs
or
push
pop
pop
mov
insb
testl
popf
js
xchg
dec
lret
or
stos
xchg
test
fwait
popf
inc
push
cli
adc
movb
cs
jb
shr
inc
int3
popf
aaa
sbb
enter
loopne
xor
ds
ss
fiaddl
je
sbb
lds
fidivrs
xchg
fs
mov
sub
adc
jno
mov
or
mov
inc
xchg
jno
sbb
add
hlt
pusha
dec
or
rorl
inc
scas
repnz
cmc
mov
mov
rclb
cmp
add
jl
cmpsl
aaa
dec
or
mov
dec
mov
rcrl
ljmp
sub
in
out
mov
aas
addl
ja
jns
out
addr16
mov
sub
jg
ljmp
jg
sbb
sub
mov
jnp
popa
push
push
sbb
sbb
jg
std
test
jle
cli
inc
pop
ss
sbb
adc
outsb
dec
pusha
mov
sbb
fistl
incl
imul
aas
cmp
sub
xchg
sub
scas
jns
jmp
mov
add
sbb
popa
jae
test
sahf
mov
xchg
jne
adcb
push
divl
sahf
xor
cmp
jne
stos
sbb
ljmp
jmp
pusha
xchg
mov
and
or
push
test
fildll
test
repz
xchg
bound
popf
jo
dec
fisttpll
push
fyl2x
jbe
dec
pusha
outsl
int
pop
ret
pusha
xor
push
mov
xor
inc
repnz
shrl
push
push
xchg
repz
dec
pop
adc
add
inc
int
mov
aaa
mov
sbb
or
xor
pop
into
ss
ss
adc
sbb
sub
sbb
lret
cmpsl
sbb
mov
mov
popa
pusha
addr16
adc
jae
arpl
inc
test
and
sahf
aaa
test
test
push
mov
push
inc
in
xchg
addr16
jle
out
mov
dec
mov
cmp
nop
cmpsl
dec
into
ds
or
xchg
imul
fldcw
into
inc
fnsave
jns
sub
mov
mov
iret
ret
ja
lods
or
mov
mov
or
jns
or
jge
push
orl
dec
add
daa
int3
add
push
xor
gs
jno
aas
inc
enter
pop
repnz
inc
mov
outsl
sbb
daa
loopne
or
out
sub
aas
arpl
mulb
mov
stos
pop
sbb
dec
ljmp
dec
push
add
jne
icebp
xor
mov
push
mov
inc
and
mov
movsl
das
jbe
scas
cmp
or
jl
inc
mov
xor
orb
movsb
cmp
push
cs
inc
int3
mov
fdivs
mov
test
call
not
cmpsl
mov
and
inc
int3
pop
dec
dec
sbb
pushf
push
scas
cltd
jno
fdivrs
repnz
mov
mov
mov
adc
mov
mov
or
xchg
arpl
push
orb
xchg
test
sub
mov
nop
cwtl
in
jo
inc
gs
dec
sub
pop
cld
imul
je
or
add
mov
mov
push
sub
cmpl
into
out
daa
jbe
sbb
xor
sub
stc
pop
adc
call
lock
rolb
dec
xchg
jbe
int
cmp
adc
icebp
jae
inc
imul
xchg
jns
stos
pusha
cmpsl
int
and
mov
popf
out
mov
int
add
mov
or
pusha
ds
or
iret
je
sub
out
mov
mov
xlat
pand
je
jmp
lret
movl
jg
cli
orl
cmpsb
push
stc
les
je
bound
ret
pop
adc
pop
popa
or
dec
test
pop
mov
pop
cmp
inc
pusha
or
addr16
out
sub
cmc
aam
add
sub
adc
movsb
jl
pop
cmpsl
adc
mov
mov
inc
aam
adc
jp
push
push
rcrl
ss
add
inc
pop
fwait
sahf
xorl
xchg
ss
and
iret
pop
jae
mov
dec
loopne
and
ret
ror
xchg
andb
popf
xor
jnp
add
test
dec
ds
test
jo
adc
cmpb
cmp
dec
xor
pop
scas
lock
out
adc
orb
outsb
push
dec
xlat
sbb
imul
in
adc
sub
ja
mov
mov
pop
insb
clc
test
dec
or
dec
nop
sub
adc
xchg
scas
dec
rcrb
mov
mov
inc
repz
imul
negl
mov
dec
sbb
popa
push
aaa
mov
adc
iret
pop
fidivrs
mov
cmp
lret
je
lcall
je
popa
dec
vmread
sbb
jno
lret
popa
dec
rol
enter
push
xorb
pop
sbb
insb
stos
inc
mov
clc
mov
popfw
cs
push
adc
inc
fisubrl
inc
sahf
mov
dec
mov
ss
add
jae
ds
dec
pop
push
pop
adc
sbb
mov
jne
lret
xchg
cmc
mov
mov
or
stos
popf
imul
and
sbb
clc
arpl
fbstp
insl
cmp
outsb
sbb
mov
cmp
inc
movsl
xchg
adc
inc
add
inc
repz
pop
ja
enter
imul
cmp
arpl
cld
mov
test
loop
cmp
repnz
aad
mov
adc
rol
popf
cmpsb
dec
xor
xchg
xchg
xor
pusha
sub
lods
cmp
dec
inc
into
cmp
or
mov
inc
test
out
in
cmp
jb
inc
mov
jp
xchg
pop
repnz
mov
dec
dec
dec
or
sbb
insl
andb
pop
cmp
aas
enter
pop
stc
jmp
inc
imul
daa
mov
gs
and
jmp
mov
sub
or
and
jmp
scas
or
clc
sbb
mov
mov
call
sahf
sub
imul
sar
in
rol
jle
mov
cmpsb
mov
mov
adc
or
and
add
repnz
mov
int
inc
add
push
popf
mov
jno
rcl
cmp
inc
pop
leave
test
iret
filds
push
xor
popf
ljmp
sbb
sub
cmpb
bound
pushf
ss
push
dec
cltd
in
in
xchg
int3
rclb
insl
sbb
lods
and
mov
inc
mov
add
ret
loope
dec
inc
sbb
jo
cmp
pushf
add
ret
sbb
mov
nop
lcall
and
fs
push
lods
mov
xor
dec
xor
inc
xchg
iret
mov
jns
mov
and
push
call
adc
fisttps
dec
and
push
cmp
xchg
or
xor
xchg
int3
or
cld
inc
pop
mov
cmpsl
inc
xchg
cmp
mov
jmp
in
push
xchg
test
out
inc
aas
sub
mov
pop
test
sbb
pusha
sbb
lods
jno
adc
stos
jno
ja
out
pop
xchg
cmp
jecxz
jge
cmp
push
insl
xor
cmp
test
add
fs
adc
int
std
cmp
addr16
mov
subb
sbb
mov
adc
loope
data16
adc
dec
dec
scas
test
or
push
mov
jnp
in
lret
adc
push
sub
sbb
shll
movsl
adc
mov
pop
or
jle
mov
inc
lea
fs
mov
inc
test
or
mov
xor
adc
hlt
xor
filds
icebp
icebp
loopne
sbb
jge
out
addl
daa
push
dec
push
call
cmp
mov
jge
cmp
mov
xchg
pop
movl
std
cmp
jne
dec
fwait
or
cli
ss
mov
in
mov
inc
jecxz
cmc
test
push
mov
imul
cmp
mov
loope
cmp
inc
pop
jl
ret
jns
mov
or
mov
iret
jae
jae
aam
push
mov
inc
sbb
xchg
add
push
xor
mov
jb
incl
mov
pop
popf
pop
clc
movsb
shlb
fwait
xchg
push
jl
cmp
pop
mov
push
push
jns
dec
dec
fisubs
inc
push
adc
inc
ljmp
jae
pop
in
test
inc
xchg
sbb
sar
xchg
dec
int3
jmp
mov
cmp
cmp
rcll
orl
jno
insl
cld
pop
pop
je
mov
xchg
mov
cmpsl
sbb
push
mov
push
and
ss
dec
fwait
sbb
mov
aas
jno
aam
mov
cmpsb
sbb
add
or
outsb
push
sar
jge
push
mov
jno
mov
in
jge
hlt
in
movsl
mov
push
xchg
movb
mov
mov
mov
mov
cmpsl
xchg
lea
dec
jno
test
jo
in
xchg
stc
inc
movsl
call
cld
cmp
sti
movsl
daa
push
add
or
xchg
cmp
into
imul
pop
adc
xchg
das
pop
jno
lret
add
shl
mov
jbe
int
adc
out
addr16
jo
loop
xor
stc
sbb
jno
push
jne
jo
stos
leave
fwait
or
ret
enter
addl
jmp
mov
mov
xchg
dec
sbb
jns
dec
cmp
mov
popa
jp
lea
test
adcl
sti
stc
and
mov
cmpl
jnp
pop
imul
inc
outsl
int3
jg
mov
out
cmpsb
sbb
fsubr
popa
pop
popf
aas
lds
test
dec
clc
xchg
sub
cmp
ja
int
mov
lods
je
inc
nop
pop
mov
sub
push
jl
inc
rclb
adc
mov
adc
ret
aaa
roll
stc
push
jmp
push
mov
jbe
jmp
andl
cmp
gs
mov
add
mov
xchg
pop
mov
int
jnp
and
fistl
xchg
hlt
shrb
push
cltd
rcll
movb
fs
lret
xchg
add
xor
test
lea
xorl
cmp
aas
je
add
divl
xor
rcrb
insl
fnstenv
adc
iret
or
inc
adc
adc
das
adc
divl
pop
mov
xchg
dec
pop
or
push
dec
lds
ss
orb
in
in
in
xor
sti
test
pop
xchg
push
mov
pushf
gs
jns
test
adc
repnz
lds
stos
xor
xchg
daa
iret
jne
sbb
cmp
jne
pop
xor
mov
and
shll
aam
mov
scas
fidivrs
inc
inc
outsl
cmp
inc
xchg
add
mov
mov
int
ja
xor
fstp
xor
insl
subb
lret
pop
mov
jle
mov
inc
das
mov
ss
inc
test
popf
or
jb
insl
aas
sbb
add
sbb
iret
movsl
lea
sarl
stos
inc
push
jne
xor
dec
inc
ret
mov
inc
dec
rcll
dec
mov
jp
lds
mov
cmpl
xor
mov
pusha
in
out
mov
call
test
sbb
out
sub
lret
or
lock
jno
mov
sbb
add
lret
pop
repnz
nop
xor
nop
test
jne
adc
adc
inc
mov
fdivl
lret
cwtl
inc
add
mov
push
jg
push
xchg
or
jp
rorl
xor
mov
mov
push
imul
or
xchg
aaa
in
pusha
cmp
in
out
stos
popa
mov
in
dec
dec
mov
pop
mov
movb
mov
mov
insl
out
stc
fwait
jge
lds
movaps
inc
rorl
imul
cmp
aaa
ljmp
mov
dec
int
mov
icebp
mov
sbb
icebp
jle
xlat
jb
pop
xchg
and
pop
or
fwait
cmp
mov
jb
jae
add
xchg
cmp
out
arpl
adc
sahf
sahf
jecxz
xor
dec
loopne
push
jae
inc
lret
cs
cmpsl
push
insl
xor
addr16
sbb
push
mov
test
add
mov
dec
push
push
dec
adc
mov
jns
es
adc
sarb
xor
jp
mov
adc
cmp
ss
xor
int3
jmp
outsl
ja
inc
idivl
rol
popf
pop
dec
jns
imul
aas
int3
xchg
imul
mov
push
mov
push
bndldx
stc
arpl
inc
mov
cmp
mov
pop
mov
ja
adc
mov
in
mov
dec
repnz
lret
mov
rol
leave
pop
imul
or
jne
bound
imul
xor
mov
je
fstl
mov
ja
fistpl
fnstenv
call
mov
pop
rolb
mov
aaa
jne
aad
jns
mov
lahf
pop
dec
rclb
dec
sub
pop
xor
push
insl
int3
pop
rcl
inc
icebp
inc
push
scas
or
xor
gs
jl
add
jp
ss
mov
xor
inc
jns
jp
jno
gs
cmp
pop
xor
xor
test
jbe
cmp
mov
pop
dec
mov
in
cmp
mov
or
subb
lret
adc
imul
push
divl
cli
dec
or
xchg
jns
scas
xchg
cmp
sub
test
cmp
pop
insb
andl
jle
call
sub
bound
add
jnp
lock
adc
mov
inc
mov
sub
clc
sub
xchg
and
dec
add
inc
iret
push
inc
call
jecxz
sub
xor
call
mov
push
add
jl
in
sti
aam
sahf
pop
cli
mov
and
xchg
lret
mov
jns
loopne
push
dec
or
std
xchg
adc
dec
push
or
dec
sahf
sbb
xor
mov
sbb
cmp
popa
xor
push
cltd
leave
push
frstor
cmp
cli
adcl
std
xchg
push
cltd
pop
roll
pop
loope
repz
xchg
sub
mov
mov
out
aaa
pop
mov
stos
lds
xchg
ret
rorb
jno
cmp
xor
mov
and
arpl
sub
lods
mov
icebp
fs
mov
orl
xor
test
test
sub
sbb
aas
ror
add
mov
test
sbb
jg
mov
outsb
xor
aaa
dec
std
ficompl
rol
into
push
aaa
mov
movsb
pop
or
cmpsl
adc
ds
mov
stos
jbe
dec
or
popf
xchg
mov
sub
cltd
cmp
adc
xor
into
imul
sbb
in
shrb
or
add
into
test
xchg
jp
arpl
icebp
dec
iret
xchg
ljmp
int
mov
cltd
xor
mov
jge
adc
es
mull
mov
cmp
adc
in
mov
loope
mov
dec
sbb
aas
je
and
xchg
pop
mov
cmpsb
mov
stos
out
jl
lea
push
cltd
inc
in
imul
and
ret
lds
in
dec
fldcw
xchg
xchg
ret
xchg
lods
jg
mov
je
loope
or
pop
dec
test
fs
or
sti
in
sahf
insl
xchg
cmp
lods
sub
pop
pop
cli
lret
imul
cltd
sbb
cmc
lods
cmp
imul
sbb
dec
orl
sub
xchg
mov
push
push
arpl
fistpll
jbe
or
xchg
dec
clc
adc
sub
insl
data16
clc
push
or
lods
faddp
pop
insl
pop
cmp
inc
pop
movsl
ds
jge
outsl
addr16
pop
adc
insl
lea
inc
jno
dec
pop
push
mov
push
mov
push
pusha
add
pop
in
mov
cmpsl
jno
sub
pop
sti
mov
cmp
dec
dec
fs
mov
call
mov
cs
or
sti
cld
sbb
shlb
and
jbe
and
in
sahf
imul
push
inc
dec
or
icebp
and
push
push
fadds
mov
add
loop
fsubl
inc
getsec
icebp
pop
pop
sub
sbb
xchg
lods
push
ja
repz
pop
push
jns
lock
out
fcompl
loopne
fcompl
ds
int
hlt
aaa
mov
les
or
mov
pop
test
jne
cmp
outsb
xor
bound
mov
push
mov
roll
fistpl
jbe
xchg
push
adc
xor
add
inc
enter
cmp
addr16
jg
sub
xor
fwait
pop
push
xchg
pop
pop
ss
fldl
push
jne
int3
pop
fs
mov
rorl
aaa
push
mov
xor
inc
je
sub
xchg
mov
fs
lret
fcmove
pop
mov
sub
adc
and
cmpsb
jbe
addr16
lret
dec
xor
rcrb
sbb
pop
aas
lock
repz
into
push
je
xor
cmp
sbb
cmpsb
jg
push
popa
scas
stos
fisttpl
scas
daa
inc
mov
in
rcll
jno
shr
jp
mov
dec
iret
mov
lock
mov
aaa
idivl
or
iret
cmp
es
mov
dec
mov
jne
inc
xchg
lcall
ss
lret
in
lret
mov
push
xor
stc
jno
mull
jbe
rorb
shrl
dec
and
pop
pop
push
fiaddl
cmp
ret
rcll
and
xor
mov
clc
mov
dec
fsubrs
pushf
sbb
repz
jno
insl
lods
pushf
arpl
push
ret
icebp
test
cmp
sbb
dec
adc
arpl
cmpsb
imul
adc
test
mov
insl
bound
and
test
add
mov
js
dec
stos
and
cmp
mov
mov
or
dec
js
ss
push
movsl
mov
cmp
mov
je
mull
cmp
popa
addr16
add
cmp
fwait
cmp
dec
shrl
dec
push
inc
sti
and
jge
cmp
gs
and
or
dec
add
push
add
imul
pusha
xor
inc
jno
dec
scas
xor
jge
fldcw
push
add
pop
jnp
mov
dec
out
sbb
or
xlat
ds
bound
xchg
ret
jb
cmp
scas
mov
add
inc
imul
jl
cmp
dec
jge
inc
jnp
std
jae
arpl
xor
rcrb
jp
dec
xchg
rcr
dec
dec
addr16
mov
mov
je
repnz
cmp
pop
push
sub
das
repnz
or
stos
pop
sbb
fistps
das
lea
pop
xchg
arpl
or
mov
adc
cli
sbb
ja
lcall
pop
ja
es
sub
adc
test
in
test
ror
xor
jb
cmp
cs
call
mov
sti
lea
pop
jecxz
or
or
jl
scas
adc
fbstp
cmpl
mov
aas
and
pop
insl
xchg
lods
out
lea
cmp
rcll
adc
movsl
add
dec
lea
int3
pop
jge
mov
dec
adc
dec
call
mov
cmp
inc
lods
filds
and
out
test
xorl
xor
std
and
cmpsl
arpl
imul
adc
dec
inc
dec
int
sbb
ds
aaa
push
xlat
cmp
sbb
xchg
xchg
insl
aaa
inc
push
popf
scas
aam
rclb
repz
out
push
rol
aas
ss
cmp
lret
pushf
dec
push
sbb
nop
adc
xchg
add
cmp
mov
out
scas
out
fidivs
xor
mov
push
mov
loope
dec
or
hlt
mov
inc
sti
sub
shrl
lock
push
and
or
push
insb
cwtl
cmpsl
jmp
cmp
jnp
pusha
loop
fidivrs
mov
pop
add
xor
xor
mov
adc
push
psubsw
data16
mov
cmpsb
cmp
stos
aam
fidivrs
xchg
popf
cmp
mov
or
dec
les
bnd
inc
out
pop
cld
inc
andb
enter
rorl
bound
shlb
lret
insb
fadds
into
out
ret
imul
popf
push
sub
cmp
adc
mov
xchg
out
call
dec
into
mov
dec
and
sahf
jg
dec
lret
mov
mov
aad
push
je
cmp
xor
enter
pop
lahf
cmp
shrb
gs
and
add
popl
pop
cmp
or
pop
mov
mov
imul
cmp
test
mov
jo
adc
stc
xor
pushf
sub
push
xorl
or
mov
out
cmp
lock
jno
mov
dec
ja
jo
outsl
outsb
int3
xor
data16
xor
scas
imul
subl
sub
or
cmp
xchg
test
mov
push
imul
stos
cmp
xchg
cmp
and
sti
repnz
pop
mov
xor
add
pushf
clc
int3
adc
adc
jo
dec
lea
and
addr16
pop
lret
lock
cmpsl
pop
sti
jne
jp
jmp
or
popa
add
xorb
pop
jg
inc
shrb
xor
xchg
aas
mov
mov
test
jge
push
xor
jle
insb
cmp
mov
adc
dec
jle
pop
orl
xor
add
sub
inc
lret
addr16
cwtl
aaa
lcall
adc
repz
lret
imul
and
push
lds
sbb
add
pop
ret
popa
jns
mov
and
fld
out
jb
call
push
xor
push
int
lock
out
arpl
mov
xchg
dec
add
pop
push
push
jmp
mov
sub
jecxz
xor
in
inc
push
ret
cld
cmp
mov
call
aaa
sub
dec
mov
xchg
mov
or
daa
lret
cmc
cmp
mov
test
punpckhwd
dec
test
fisubrs
pop
ss
xor
inc
pop
push
jno
pop
fsubl
sbb
scas
or
sbb
jp
mov
popf
pop
shr
js
mov
adc
xlat
in
add
inc
insl
out
in
inc
pop
loop
imul
push
out
test
icebp
sbb
cmp
movsb
aas
xor
aad
mov
fcmovb
xchg
rclb
xor
aas
jns
mov
dec
dec
int
jp
bound
je
mov
sbb
mov
mov
dec
cli
insb
xor
int3
sub
rorl
out
movsl
out
pop
and
int3
add
sbb
xchg
mov
adc
pop
pop
inc
dec
or
dec
insb
add
dec
cmpsl
xorl
sbb
xchg
mov
or
dec
mov
xor
add
mov
dec
popf
inc
pop
aaa
push
jno
data16
test
dec
leave
dec
insb
or
jo
aas
cmp
es
pop
js
int3
fs
adc
cmp
mov
xor
dec
shl
sbb
jbe
jno
lea
cmp
xchg
jno
adc
mov
dec
shlb
add
ds
xor
and
mov
adc
fimull
andl
scas
sub
ds
outsb
pop
jb
pop
push
test
mov
into
cltd
lea
xor
pusha
sbb
jl
data16
sbb
test
sbb
int3
push
dec
xor
cmp
cmp
dec
ss
test
xor
push
and
adc
addr16
aaa
xor
mov
xor
and
les
dec
fwait
ljmp
adc
fsubp
cmp
cmp
jmp
cmp
jae
repz
fdivrs
xor
mov
jo
cwtl
inc
imul
jl
xor
sbb
fcomi
frstor
or
jl
les
mov
sbb
repz
inc
jmp
xchg
mov
stos
arpl
cmp
loopne
mov
fsubl
or
int
or
insb
stc
popa
jbe
aad
mov
test
cmp
jle
cs
xlat
repz
push
cltd
mov
sbb
je
movsl
cmpsl
dec
mov
jns
sub
lds
les
outsl
out
mov
repz
ss
adc
jbe
or
and
popa
imul
jmp
ss
popa
lcall
loopne
jne
pop
mov
bound
dec
inc
rcll
loop
xor
stos
mov
adc
in
movsl
pushf
sbbb
test
mov
jbe
int3
out
aaa
jg
mov
pusha
or
rcll
push
or
sub
mov
out
dec
loope
jle
dec
das
imul
pop
cmp
push
clc
cmp
imul
aad
insb
push
pop
dec
mov
popa
mov
movsl
xchg
or
push
xor
movsb
orl
mov
mov
sub
cmpsl
sbb
jl
or
sbbb
jp
lock
fld
jg
sub
pusha
stc
mov
mov
sub
in
loopne
gs
insl
fisubs
mov
mov
aam
aam
nop
xchg
repnz
push
popa
iret
gs
dec
shrb
sbb
and
sbb
jnp
push
adc
jno
push
stc
addr16
mov
or
cmp
adc
bound
xchg
ss
jecxz
inc
dec
outsl
aas
nop
jbe
fs
sbb
cmp
repnz
rcrb
cli
test
jle
or
ss
popf
lods
xchg
or
inc
shll
insl
jmp
xchg
into
xor
xor
add
faddl
lods
imul
sarl
stc
xchg
test
pop
or
xchg
cmp
jmp
jno
xchg
mov
test
mov
jb
xor
int3
mov
out
sub
aas
pop
int3
xchg
jge
adc
movsl
pop
psrad
inc
jmp
xchg
stos
xor
sbb
int3
aaa
dec
arpl
jg
sbb
repnz
and
lods
or
jg
sub
testb
repnz
jp
adc
jae
imul
mov
arpl
sarb
dec
xchg
push
rorl
inc
adc
lret
push
out
jge
mov
loope
jp
inc
into
xchg
dec
mov
aas
pop
fs
jae
mov
aaa
ret
push
stc
insb
fbld
jae
mov
js
cwtl
cmp
out
xor
nop
scas
push
in
dec
jae
cmp
pusha
int3
jecxz
mov
cmp
sub
rcrb
xchg
sub
popf
sbb
bound
or
jl
mov
jnp
and
sbb
or
sarl
pop
out
daa
mov
cmp
or
sbb
sbb
cmp
sbb
mov
jae
inc
insl
int3
adc
add
jb
mov
divl
stc
add
rorb
mov
dec
adc
adc
xor
das
idivb
js
mov
dec
aas
mov
fwait
imul
jbe
fcomi
push
mov
mov
adc
and
bound
dec
ficomps
cmp
andnps
dec
movsl
cltd
pusha
and
pushf
pop
test
imul
sarb
cmp
fwait
test
mov
mov
arpl
push
dec
out
push
ret
mov
mov
mov
imul
arpl
gs
adc
jl
orl
subb
mov
insl
jnp
rcr
outsl
int
fwait
test
jo
and
scas
mov
xorl
xchg
push
or
sub
aaa
mov
push
addr16
mov
lds
in
sub
and
call
call
xchg
insl
inc
sti
xor
sbb
inc
int3
mov
xchg
xor
rclb
popf
dec
das
inc
or
xorb
rorl
xchg
lds
popa
ss
loopne
arpl
mov
pusha
mov
dec
and
dec
aaa
xchg
jno
aad
cmp
push
icebp
pop
push
mov
jbe
in
rep
jge
mov
es
pop
movb
lahf
test
xchg
pop
push
cmp
adc
jns
fwait
sti
subl
lea
cmp
pop
pop
in
insl
adc
ljmp
push
out
jp
test
sahf
adc
aaa
jnp
xor
addr16
das
cmp
push
lahf
xor
cmp
sbb
sbb
sbb
cwtl
jmp
mov
mov
push
sbb
jnp
insl
and
cmp
stc
sarl
and
jo
inc
cltd
addr16
stc
dec
mov
jmp
add
in
imul
cmpsl
int
mov
scas
jp
cmp
int
hlt
fsubrp
shl
je
add
nop
mov
in
in
pop
nop
pop
cltd
leave
jnp
mov
inc
aad
mov
cmp
testl
out
jo
sub
outsl
ja
rcrl
cltd
ds
mov
imul
scas
mov
cmc
test
lods
cmc
pop
dec
fdivl
mov
addr16
and
push
leave
jns
jbe
stos
push
xor
push
mov
scas
jp
cmp
int
fsubrp
add
push
mov
mov
test
mov
in
in
pop
nop
dec
cltd
leave
jnp
mov
popf
jl
imul
mov
loop
add
out
jo
sub
outsl
ja
mov
nop
in
pop
push
leave
cmp
imul
pop
inc
test
xchg
pop
mov
pop
xor
rcrl
xor
sbb
pop
sbb
fwait
jne
test
pop
adc
sbb
push
sub
push
or
dec
test
dec
jne
dec
sub
mov
cmpsl
and
andl
jmp
xor
js
add
and
inc
dec
rolb
iret
push
inc
repz
add
lds
insb
xchg
dec
sub
dec
add
aas
outsb
cmp
inc
js
mov
or
push
dec
data16
jp
xor
xor
addl
ljmp
sbb
or
jae
inc
imul
cmp
mov
inc
int
imul
mov
ja
pop
push
lret
cmpsl
mov
mov
mov
imul
inc
popa
lret
ds
sub
jnp
arpl
xor
inc
mov
cmp
arpl
out
mov
in
inc
add
jae
inc
out
pusha
ds
jns
mov
dec
sbb
sub
dec
or
imul
cmp
inc
pop
pop
gs
jne
pop
sti
fs
movsb
mov
push
mov
sar
jne
arpl
sub
sub
xor
sub
jne
sub
fidivrl
loope
repnz
ds
and
sub
mov
mov
aas
pop
jae
pop
testl
addr16
icebp
mov
sbb
imul
mov
sub
xor
xlat
test
int
add
pusha
mov
push
insb
add
nop
dec
or
mov
add
fs
sti
cmp
aaa
shlb
popf
xor
mov
stc
cld
popa
push
mov
aas
dec
dec
adc
ret
jmp
mov
jg
mov
jns
lods
mov
bound
imul
xor
mov
mov
imul
push
xor
cmp
or
or
adc
inc
inc
inc
fs
insl
add
and
adc
sbb
xchg
fisubl
sbb
sbb
add
sub
daa
inc
std
fwait
or
cld
jnp
sub
arpl
icebp
insb
rol
xchg
push
lret
xchg
insb
roll
fs
or
mov
dec
xor
iret
push
cmp
fadds
dec
mov
inc
xor
xchg
mov
mov
mov
inc
popa
js
int3
pop
test
pop
cmp
pop
cmp
in
dec
mov
mov
cmp
pop
mov
cmp
repz
cmpsb
lods
xor
test
xor
lcall
sbb
jmp
outsl
call
mov
pop
mov
repz
in
test
scas
push
sbb
cmpsl
mov
dec
and
aas
cmp
repnz
in
shlb
call
jp
push
aas
mov
outsb
push
or
dec
dec
iret
enter
inc
add
dec
cli
jmp
clc
mull
pop
cmpsb
orl
adc
cmp
pop
into
xchg
xchg
mov
inc
lods
cmc
and
inc
fistps
cmp
add
aam
dec
fildl
fs
xchg
adcb
ljmp
scas
dec
inc
mov
fisubrs
repnz
dec
mov
xchg
jge
mov
mov
cmpb
pusha
pop
push
bound
dec
test
inc
and
std
xchg
xor
bound
stc
or
xor
dec
cmp
pop
or
pop
mov
loope
cmpsl
in
out
jnp
add
int3
nop
ds
mov
daa
aas
pop
or
icebp
lods
push
hlt
push
xor
and
fildll
adc
push
pop
or
dec
orl
aam
inc
lea
rorb
pop
ret
jmp
mov
fldcw
mov
int
sub
stc
or
fisubrl
mov
test
xchg
pusha
xorl
and
add
push
stc
js
lea
shr
xchg
dec
and
fs
insl
insb
sub
xchg
jns
push
aad
cmp
push
push
ret
dec
xorl
mov
loopne
lock
js
mov
mov
pop
int
arpl
cmc
pusha
sub
push
xorl
inc
mov
aaa
inc
test
out
mov
sbb
ljmp
imul
mov
sub
sahf
inc
xchg
mov
test
pop
sbb
iret
cmp
mov
or
in
punpckhbw
testb
adc
sub
inc
ret
and
lahf
adc
nop
inc
stos
into
call
adc
xor
and
imul
fdivrl
xor
cmp
dec
sbb
xor
mov
test
mov
mov
pop
adc
push
cli
jge
cltd
add
xchg
das
cmpsb
cmp
sbb
pop
push
cld
cmp
loop
clc
fwait
std
xor
js
sub
cmp
punpcklwd
test
cmp
ss
lret
icebp
or
xor
in
dec
xchg
or
int3
iret
pop
shll
pop
pop
gs
xchg
jmp
lock
cmpsl
into
roll
pushf
sahf
xor
lret
cmp
pop
jb
or
scas
adc
push
insl
jnp
mov
cmpsl
fdivr
xor
adc
clc
sbb
xor
or
mov
imul
push
das
movsl
push
outsl
test
subl
movb
ljmp
stos
inc
fdivrl
punpcklwd
outsl
mov
adc
push
rorb
mov
test
addb
adc
std
adc
cmp
jnp
or
test
cli
addr16
cli
pop
mov
into
and
sbb
test
cwtl
imul
out
sub
test
mov
fstps
ror
lds
mov
lcall
sbb
js
inc
mov
dec
cmp
lret
xchg
mov
pop
push
nop
arpl
rcrb
lret
xchg
xor
jnp
bound
sbb
mov
mov
adc
sbb
movsb
jge
sbb
ss
or
sbb
fucomip
insl
and
js
fmul
adc
adc
or
mov
push
repnz
lds
xchg
pushf
lret
sub
imull
mov
pop
mov
stos
mov
das
inc
orl
cltd
sbb
rcr
xor
push
fistl
cmp
in
andl
cmp
sub
stos
mov
rcrl
mov
cmp
push
je
add
cmp
cmp
aaa
lcall
push
sarb
cmp
dec
inc
pop
xor
jmp
cmp
add
mov
fidivl
adc
sbb
pushf
sbb
sub
into
inc
test
xor
iret
ss
enter
pop
or
in
aas
lea
xor
mov
mov
or
je
sbb
pusha
mov
icebp
mov
imul
test
and
mov
inc
cmp
or
jb
gs
ss
mov
ljmp
jo
dec
test
mov
sbb
popf
xchg
ljmp
dec
cltd
push
xchg
mov
test
pushf
xor
mov
scas
cmp
scas
jl
shll
popa
jmp
cmp
push
push
and
ja
loope
sub
jae
bound
xchg
xchg
addr16
lret
pop
cmp
shll
xor
lret
cmp
jae
test
xor
jge
lret
mov
xchg
xchg
lahf
std
cmp
cmpl
jno
inc
mov
mov
jno
push
adc
in
inc
add
out
popf
sub
idivb
ret
int
xor
shll
push
push
int3
rolb
je
insb
adc
or
pop
and
aaa
fstps
out
xor
dec
cs
push
bound
cmp
cltd
divl
outsl
jecxz
push
js
push
jbe
jns
sarl
test
cs
int
or
dec
jg
push
stos
push
inc
cmp
lds
mov
and
adc
jg
in
mov
dec
jae
test
mov
or
call
adc
xor
mov
mov
cmp
inc
dec
fsubrl
xchg
sti
push
xor
rorl
inc
ror
xor
pop
mov
cmp
mov
cmp
imul
ja
mov
repz
lods
popf
iret
mov
pop
dec
rolb
push
jae
ds
adc
sti
mov
xchg
cmp
mov
aaa
xor
mulb
ja
sub
js
scas
mov
mov
loop
test
jmp
or
mov
test
or
lods
or
mov
mov
sarl
mov
sti
stos
in
outsb
xor
insl
cwtl
leave
loopne
and
dec
icebp
xor
adc
fs
out
jo
xor
or
sti
jno
jp
fcmovnbe
push
mov
mov
lret
sbb
mov
add
sub
scas
lods
push
scas
adc
inc
jmp
dec
jns
sbb
lret
mov
mov
jae
mov
push
andb
out
sbb
adcb
pop
cld
pop
fimull
lret
jb
xchg
cmp
inc
push
mov
mov
push
push
adc
cmpsl
ret
push
popf
rcrl
outsb
test
dec
jbe
inc
lea
jns
xorl
fs
flds
imul
int
mov
jnp
inc
ret
adc
xchg
rorl
das
dec
jno
adc
pop
push
sbb
xor
mov
lahf
mov
mov
sub
movsb
into
xchg
dec
daa
addl
xor
dec
mov
cmp
inc
cmp
add
cmc
pop
cli
inc
lea
shll
and
fs
frstor
lahf
inc
mov
inc
xchg
or
stos
sub
jbe
insb
push
xchg
sbb
sti
add
add
dec
or
pop
aam
test
stos
cmp
sub
dec
dec
mov
stc
insl
mov
xchg
sti
lcall
outsb
cli
xor
lret
dec
mov
xor
in
or
xchg
fstp
cltd
cmp
repnz
out
adc
jno
xor
ja
lods
dec
dec
movsb
jl
in
lods
or
mov
shll
outsb
insl
jno
imul
jmp
mov
jno
clc
ss
or
iret
pop
add
mov
jbe
ljmp
sbb
mov
dec
xorb
jl
jno
pop
sbb
in
daa
sbb
pusha
call
rorl
sbb
fldl
cmp
int
mov
scas
fs
insl
loope
jno
shl
addr16
cmp
rorl
inc
or
adc
stos
js
test
sbb
mov
outsb
sub
jbe
dec
mov
cmpsb
sub
shlb
out
pushf
xchg
sarb
mov
jle
add
insb
xchg
inc
sar
jnp
xor
xor
jl
fdivl
cmpsl
repz
sub
rol
dec
ffree
dec
cmp
mov
jg
pop
add
jle
dec
push
xor
lcall
fwait
lods
cmp
pop
mov
cmpsl
nop
mov
mov
push
xchg
mov
jg
icebp
arpl
fs
aaa
sahf
push
nop
lret
xchg
in
pusha
jl
movsl
xchg
dec
cmp
inc
cmp
daa
ret
stos
adc
into
adc
mov
fstpl
out
add
pop
cmp
adc
enter
inc
imul
pop
lock
mov
push
inc
in
stos
shll
lea
fs
push
mov
mov
test
dec
fnstcw
mov
ljmp
mov
xor
cmp
mov
pusha
lret
les
cmp
dec
cmp
les
rolb
lahf
fistpl
testl
or
inc
or
xchg
repnz
push
mov
lea
mov
cs
je
sub
pop
pop
inc
cmp
push
test
xor
inc
or
or
inc
dec
jae
lret
dec
xchg
add
test
jne
jno
push
outsl
add
push
shll
dec
test
shrl
or
pop
lret
adc
in
xor
push
jo
or
int
mov
push
jl
and
stos
mov
out
cmp
stos
hlt
out
cli
rcr
rdpmc
call
push
pop
mov
ds
or
mov
test
das
dec
mov
rcrl
mov
addb
xchg
lods
cmp
rcll
mov
push
hlt
cld
pop
dec
daa
push
flds
jne
cmp
mov
adc
push
outsb
fstl
jbe
fsubrp
mov
inc
cmp
cmc
jo
rep
movb
mov
jno
jo
adc
adc
jle
jb
mov
cli
dec
inc
push
mov
and
mov
test
insl
mov
jno
jp
mov
movsl
bound
lret
aas
jbe
ficompl
xor
lahf
mov
fists
push
jns
cwtl
sub
push
pop
adc
int
add
mov
lea
and
and
mov
pop
loope
mov
adc
xchg
add
outsb
fildl
sub
pop
jns
xlat
ljmp
jp
daa
jno
pop
mov
inc
ljmp
inc
and
push
jns
xor
jo
rol
popf
int3
mov
dec
loopne
push
leave
test
pop
mov
or
mov
sbb
imul
jmp
jp
jns
mov
pop
mov
vpmaxub
cmp
je
sahf
cmp
stos
jbe
mov
push
add
lods
xlat
pop
pop
test
test
jbe
adc
jns
int3
push
sub
insb
int3
or
jb
mov
aas
pusha
ljmp
push
inc
push
adc
dec
xor
add
cld
sbb
jo
push
ljmp
cmp
insb
and
call
adc
sbb
jo
mov
std
sub
lods
ss
pop
pop
sbb
sub
cmp
push
int
push
pop
shll
popa
pop
mov
sbb
stos
and
popf
cmp
jo
or
jae
pusha
dec
xchg
int3
mov
xchg
adc
outsb
xlat
and
out
pop
mov
push
sbb
enter
mov
mov
cmp
mov
das
adc
shlb
dec
imul
test
lods
fadds
xorb
adc
in
jecxz
xor
push
rsm
loope
stos
jne
inc
jne,pt
xchg
lods
jno
mov
adc
cli
sub
mov
inc
mov
sbb
scas
divl
jg
int3
mov
iret
mov
sarb
out
imul
stos
int3
push
xor
push
pop
dec
add
scas
mov
adc
lea
dec
inc
push
mov
bound
push
repz
push
xor
arpl
repnz
push
jge
inc
loop
std
mov
push
aaa
ret
xorl
dec
add
inc
push
arpl
mov
sbb
sbb
pop
jp
das
xor
cmp
aaa
cmp
xor
push
xor
mov
push
notl
xlat
fidivl
cld
and
test
adc
push
loope
mov
mov
mov
pop
mov
xor
xor
fwait
xor
dec
jae
mov
inc
out
and
cli
ja
mov
inc
push
icebp
aas
mov
mov
arpl
outsb
push
cmpb
loop
imul
sarl
mov
cmp
xchg
dec
imul
push
aam
cmpsl
mov
ss
mov
aad
mov
out
xchg
insl
popf
mov
arpl
jp
push
icebp
xor
cltd
or
ja
pop
je
cmp
sbb
xor
jae
push
push
jmp
push
pop
xor
in
jb
xchg
jmp
mov
stc
iret
dec
adc
int
imul
aam
pop
sbb
lcall
xor
xorl
mov
or
popa
int3
daa
ja
xchg
cmp
ljmp
inc
icebp
mov
sbb
jae,pn
add
rcll
jle
xchg
mov
mov
test
js
and
xorl
adc
sub
clc
xchg
adc
outsl
and
dec
dec
jns
clc
rcrl
icebp
insb
data16
test
pop
pop
enter
mov
dec
dec
int
ss
movsl
ja
mov
pop
mov
xchg
jae
cmp
dec
dec
shrl
stc
sub
jecxz
mov
int
add
mov
xor
dec
add
rcll
dec
sti
push
jmp
sub
push
sbb
mov
jp
adc
pop
mov
mov
int3
aad
addr16
jb
jge
push
movsl
sbb
cmc
int
aaa
idivl
test
mov
cmp
and
dec
jmp
out
jmp
insl
aaa
subb
mov
jmp
xor
jno
jo
jge
dec
mov
mov
insb
push
cmp
imul
leave
inc
sbbb
fdivs
mov
int3
popa
inc
push
decl
dec
into
pushf
sub
into
adc
or
cmp
pop
popa
sub
sbb
cmc
movsb
aam
xchg
cmp
jmp
test
test
lea
in
setno
and
pop
lret
add
xchg
add
push
push
faddl
jle
pop
add
xor
repz
jae
scas
lock
imul
adc
call
arpl
cmpl
xor
je
push
movsl
pop
mov
jnp
adc
xlat
sub
mov
mov
imul
test
xchg
js
push
xchg
cmp
cmp
fstl
aaa
enter
ret
mov
mov
dec
rorb
xor
lret
les
push
lcall
pop
mov
jecxz
mov
neg
fisubrl
xchg
cmp
mov
pop
fnsave
imul
stos
mov
dec
and
imul
jbe
icebp
roll
cmp
cmpsb
sbb
or
shll
outsb
cltd
jno
lock
je
jnp
adc
popa
adc
cli
test
push
es
pop
test
push
add
push
sbb
es
dec
imul
or
outsl
sub
in
ja
mov
adc
data16
ljmp
xchg
mov
popa
mov
mov
cmp
jg
adc
jle
ljmp
sbb
rorb
or
cli
loop
mov
pop
jns
mov
push
ss
cmp
adc
je
dec
aas
fs
add
lret
clc
pop
dec
and
push
adc
pop
xor
pop
call
mov
dec
insb
aad
out
dec
das
fidivl
mov
mov
xchg
icebp
cmp
pop
in
data16
mov
push
aas
mov
adc
scas
aas
mov
sub
dec
fs
sub
jg
pop
nop
into
ss
and
xor
xorb
jne
adc
jo
inc
sbb
adc
push
popf
lods
cmp
cmp
xchg
out
loopne
sub
lret
popa
int3
and
mov
into
movsl
fldt
and
test
imul
jno
sub
jnp
inc
push
and
push
xor
pop
sbb
mov
xchg
xor
dec
xor
aad
jmp
mov
test
xor
lock
inc
push
pop
test
add
frstor
cmp
fwait
jno
jae
pop
aas
sub
bound
push
or
outsl
outsb
or
lea
bound
fnstcw
push
jns
aaa
fidivl
leave
roll
cmp
inc
shrl
mov
xor
xchg
dec
shrl
push
push
ss
insl
xchg
jno
shlb
stc
loopne
dec
rcr
es
mov
test
fstp
fldcw
cmp
xchg
popa
imul
int3
sbb
xor
out
dec
pushf
xorl
lds
mov
data16
pop
push
mov
clc
jle
pop
fidivrl
mov
ja
jg
fxch
lods
imul
pushf
outsl
pop
mov
jbe
lds
jle
jl
imul
add
leave
in
dec
xlat
test
dec
fwait
sti
mov
or
xchg
out
cmp
dec
cmp
pop
dec
cwtl
xchg
jne
mov
hlt
mov
nop
je
aad
clc
adc
divb
sbb
pop
push
dec
pop
cmp
dec
inc
pop
insl
enter
dec
cmp
inc
cmp
jne
mov
and
cld
test
test
cmpsl
add
cmp
cmp
sbb
in
push
cmp
ss
iret
int
daa
or
sarl
pushf
arpl
mov
cmp
mov
out
outsl
fsts
jns
dec
inc
daa
mov
mov
mov
cmc
dec
test
sbb
xor
aaa
js
fwait
or
xchg
mov
pop
add
mov
push
mov
pop
sbb
addl
pop
mov
sti
test
push
cld
or
push
subl
dec
stos
mov
inc
jl
sbb
lret
cmpb
add
jno
push
dec
push
aaa
pushf
cmp
push
mov
or
jne
mov
decl
movsb
dec
dec
rorl
idivl
push
pushf
mov
popa
fildl
roll
adc
in
pushf
jg
push
stos
dec
pop
imul
or
push
lret
loop
shlb
adc
icebp
xor
mov
sbb
sub
iret
incb
cltd
push
or
test
cwtl
xchg
scas
pop
test
inc
fisubs
leave
fstpt
push
loop
dec
pop
mov
jmp
cmp
jbe
xchg
fwait
pop
lret
fistpll
fsubs
cmpsl
mov
mov
addr16
xor
repnz
dec
outsl
popf
push
mov
aaa
sub
jns
sti
xor
xor
lds
imul
push
stc
mov
js
sub
adc
pushf
xchg
xchg
push
cld
dec
pop
int3
mov
scas
cwtl
cmp
dec
sbbl
mov
cwtl
ja
mov
lods
add
push
data16
pop
push
mov
cmp
mov
xchg
cmp
mov
js
imul
pusha
popa
fs
push
adc
and
and
aaa
mov
add
clc
lret
dec
cmpsb
jmp
repnz
iret
mov
add
add
pop
mov
jg
lret
mov
push
adc
imul
bound
push
js
inc
jno
stos
cmp
leave
shlb
dec
dec
or
inc
rorb
fcmovbe
jb
mov
int
or
idivb
mov
or
aaa
inc
stc
and
out
xor
pop
jmp
push
jbe
lods
lea
push
std
adc
and
adc
xor
inc
cmp
jns
cmp
xchg
xlat
and
out
in
xor
dec
ja
test
mov
roll
repz
mov
cmp
insb
and
mov
les
cwtl
sub
decb
inc
adc
outsb
mov
cmpxchg
gs
lea
push
pop
xorb
mov
dec
mov
or
addr16
mov
jnp
jb
add
mov
xchg
jno
or
xor
xor
sub
jl
inc
repz
cmp
test
lcall
mov
xchg
or
inc
pop
movsb
push
outsb
xchg
add
mov
bound
out
cmpsb
aam
cmpsb
mov
or
fwait
cltd
ja
bound
adc
cwtl
lods
rolb
xchg
cmp
ret
insl
adc
imul
pop
xor
outsl
dec
rcll
popa
ljmp
push
movsl
jne
push
xor
xor
outsl
stos
sub
add
idiv
dec
ds
mov
out
mov
repnz
xor
add
ljmp
mov
sti
mov
outsb
bound
out
xchg
xor
int
rorl
jle
xchg
jno
push
xchg
dec
add
sub
mov
movsb
rorl
sbb
mov
dec
mov
mov
je
sub
xchg
and
stos
pop
iret
stc
dec
imul
mov
xor
inc
dec
mov
pop
sbb
mov
and
jns
iret
sbb
adc
cld
rcll
fcomi
push
jp
and
loope
push
cli
sbb
adc
loopne
fisubl
pop
mov
or
loop
addl
addr16
popl
clc
in
iret
dec
std
aas
cmp
insb
or
scas
fiaddl
mov
lds
pusha
popf
cmp
lret
adc
lahf
pop
push
jns
xor
adc
sub
pop
test
and
push
jno
inc
test
push
pop
jge
fidivs
lret
sahf
insl
popf
aas
scas
jb
insb
sub
int
mov
inc
in
cmp
pop
nop
pop
in
arpl
test
sbb
data16
and
ss
out
push
mov
jp
lock
mov
pop
push
loope
insl
jmp
sub
fidivrs
cmc
pop
mov
test
ljmp
mov
popf
fisubrs
push
data16
jbe
leave
add
inc
xor
testl
insl
and
adc
js
imul
jo
xor
mov
dec
mov
xor
cmp
inc
or
mov
mov
jl
ss
popf
xor
mov
popf
push
jne
xchg
or
sbb
xchg
mov
adc
sub
fdivs
push
cmp
std
cmp
xor
sti
arpl
push
lds
or
sub
insl
and
adc
outsb
add
lds
dec
adc
jmp
cld
xor
shlb
dec
test
adc
sbb
xor
sub
push
fdivrl
jb
call
sarb
gs
nop
inc
and
nop
inc
pusha
test
jg
sbb
xor
les
in
iret
and
fs
adc
loopne
push
fs
aaa
out
dec
and
popf
pusha
rcr
roll
in
ds
je
push
dec
popa
add
fiadds
ss
inc
inc
or
push
push
fdivr
dec
jge
shr
adc
add
rclb
dec
cli
xor
jno
negl
or
aaa
and
pop
xor
cmpsl
cmpsb
stos
pop
push
pop
push
aaa
cmp
mov
dec
imul
iret
in
xor
pop
xor
pop
gs
sbb
lcall
mov
leave
dec
add
dec
mov
mov
mov
ret
jnp
xor
mov
ljmp
dec
lea
mov
mov
loope
xchg
enter
xchg
mov
and
ss
dec
fimuls
push
sbb
cmp
roll
stc
pop
movsl
sbb
sub
cmp
dec
leave
aas
jmp
mov
sbb
dec
orb
adc
jno
sbb
bound
inc
xchg
inc
jecxz
sbb
or
adc
stos
push
iret
push
pop
insl
imul
ret
cmp
rolb
in
cli
leave
nop
dec
xchg
je
xchg
push
cmc
les
inc
or
test
sahf
adc
mov
sub
aam
pusha
or
iret
push
bound
jp
inc
outsb
mov
outsl
ss
xchg
dec
adc
sbb
dec
mov
call
ljmp
adcl
fmuls
and
decl
andl
mov
cmp
jns
fstps
cmp
pop
pop
aaa
test
ds
insl
or
test
sub
sbb
jae
mov
sbb
push
cmp
sub
push
inc
inc
ja
mov
dec
xor
mov
push
imul
xor
aam
push
xor
roll
dec
mov
pop
inc
aad
push
or
lret
push
test
lret
test
cmp
test
aas
mov
clc
pusha
fwait
insl
dec
iret
lods
pop
movsl
dec
jo
out
jno
hlt
push
lods
sbb
aaa
or
add
jecxz
in
mov
sbb
mov
popf
add
mov
mov
leave
pop
andb
jns
inc
cwtl
or
adcb
mov
popa
cmp
xor
adc
jmp
or
test
and
xchg
sbb
addb
out
test
popf
lds
mov
insl
cmp
push
sub
repnz
daa
xchg
int3
inc
int
aam
or
cmp
jp
cmp
adc
push
outsb
insl
dec
xchg
outsb
pop
xor
sbbb
push
ss
lret
sbb
lea
fstpt
loopne
xchg
jmp
mov
lret
or
cmp
stc
inc
add
mov
sub
test
icebp
dec
js
nop
jne
mov
xor
mov
dec
mov
sub
sarl
sbb
imul
shll
test
cmp
ja
push
inc
ds
jns
popa
push
dec
enter
add
cmp
in
jb
jle
adc
ljmp
lret
jno
ret
jg
mov
push
mov
xor
push
xchg
movd
aas
mov
aaa
int3
and
cld
dec
imul
idivl
or
sub
cmp
in
add
inc
lret
stos
shrl
mov
in
cli
aas
lcall
sbb
jmp
mov
cmpl
test
pusha
and
cmp
pop
int
pop
adc
stos
sub
leave
sbb
popf
std
fwait
xchg
dec
sub
aas
mov
mov
lods
or
not
pop
mov
das
stos
call
mov
pop
mov
xlat
sbb
icebp
insl
adc
sub
sti
out
aad
out
push
inc
push
cmpsb
jp
gs
std
xor
xchg
adc
xchg
jmp
cmp
rcll
xor
enter
xor
adc
mov
adc
dec
push
mov
push
xor
cmp
or
xchg
cmp
xor
xchg
pop
arpl
mov
imul
push
popa
or
pop
hlt
xor
insl
adc
mov
cwtl
push
xor
outsb
mov
aaa
sbb
dec
aas
add
fidivrs
push
imul
xor
mov
push
adc
int3
inc
jg
popf
xchg
scas
aas
push
fisubl
lock
xor
dec
bound
adc
and
les
pop
mov
mov
mov
jno
and
pushl
aad
mov
xor
cmp
and
aaa
inc
jle
inc
dec
ror
sbb
jbe
subb
mov
pop
lcall
add
and
aas
std
jmp
test
mov
cmp
adc
adc
js
lods
dec
aad
xchg
repz
test
dec
lahf
lret
or
lods
aad
xor
mov
insb
gs
add
jo
nop
pop
aas
repnz
sbb
xor
sbb
cmp
xchg
mov
inc
subb
and
lods
dec
dec
dec
mov
mov
iret
mov
arpl
in
dec
pop
add
jne
rclb
xor
xchg
lods
scas
jmp
pop
mov
sbb
ret
cmp
push
mov
or
aas
mov
mov
adcl
cmpsb
or
push
test
call
mov
xchg
adc
pusha
push
mov
scas
sbb
jbe
xor
shr
xchg
je
fstps
jns
push
addr16
pushw
sub
shll
int
xchg
add
test
or
aaa
xor
lahf
ret
sbb
push
adcl
cmp
jbe
push
push
and
cmp
shl
es
stos
mov
int
ja
pop
outsl
aad
repnz
push
aad
jns
out
cmpsb
fadds
and
cmp
jne
loop
fwait
ljmp
inc
ss
dec
icebp
jle
xor
fldcw
addl
std
jns
das
out
das
push
jb
push
cmp
xchg
xchg
lods
pop
or
jecxz
into
adc
sub
jne
xor
push
mov
mov
dec
inc
xchg
fadds
je
out
cmp
mov
pop
sub
pop
fdivrs
push
adc
ds
mov
adc
or
stos
push
xor
or
icebp
rcll
cmp
clc
mov
mov
fistps
shlb
xor
dec
adc
mov
cltd
ss
inc
popf
jbe
mov
jg
sub
bound
push
pop
sbb
int
sub
mov
pusha
jmp
mov
mov
xor
xor
xchg
leave
insl
adc
inc
ret
adc
sbb
out
test
lret
push
pop
mov
cmp
loope
nop
scas
xorl
pop
js
fdivs
dec
mov
cmpsb
hlt
lock
movsb
xor
popf
imul
inc
jno
xchg
cli
pushf
dec
sub
adc
cmp
push
lds
add
push
pop
sti
aaa
and
push
sbb
rep
or
lret
dec
push
inc
push
mov
sub
adc
dec
stc
mov
mov
add
adc
cmp
jg
push
notl
insl
arpl
xor
mov
push
jl
mov
xlat
jns
aas
mov
adc
mov
arpl
mov
sub
mov
xchg
dec
hlt
mov
sbb
sub
popa
inc
dec
addr16
in
pop
hlt
mov
popf
mov
add
xor
imul
push
ds
hlt
adc
pop
repnz
std
mov
or
push
jecxz
inc
push
pusha
cs
cmp
arpl
out
std
ret
sbb
fwait
add
cltd
xchg
in
dec
int
addb
pop
and
dec
cli
pop
mov
mov
icebp
std
test
or
test
dec
repz
aaa
repnz
pop
jg
arpl
call
dec
int
sbb
sub
mov
pop
je
push
out
add
jns
addr16
daa
pop
icebp
ds
cmpsb
pop
pop
insl
sub
cmpsb
and
sbb
cmpb
dec
into
movsl
dec
jg
jl
adc
stos
scas
and
mov
jl
adcl
xor
outsb
mov
leave
mov
xchg
cmp
stc
arpl
push
out
and
test
sub
adc
cmp
jno
xchg
adc
test
add
jle
lret
pop
cli
pusha
iret
outsb
and
jbe
cmp
mov
nop
xor
mov
addr16
mov
push
push
xchg
or
dec
adc
inc
mov
push
jns
fldenv
mov
push
maskmovq
xchg
inc
sbb
dec
add
sub
lds
add
lods
movsl
test
dec
xor
adc
cmc
pushl
loope
push
loop
mov
xchg
stc
xchg
push
jnp
lea
sbb
stos
and
mov
dec
test
xor
ror
mov
dec
repnz
inc
jb
cmpsb
push
fsts
or
mov
stc
push
push
lock
add
das
divl
push
imul
insl
mov
lahf
inc
lea
and
push
sahf
xchg
xor
mov
ss
sbb
mov
mov
push
cmp
call
cmp
cmc
scas
pop
mov
dec
mov
test
mul
xbegin
lcall
movsb
push
pop
cmpb
pop
cmp
or
push
pushf
jae
leave
xor
xor
pop
jb
pushf
clts
cmp
popf
inc
lock
jge
pop
lds
inc
pop
aaa
sbb
or
push
pop
add
sbb
mov
dec
mov
mov
mov
std
mov
outsb
test
cmp
pushl
mov
lock
mov
sbb
xor
mov
mov
negb
inc
test
or
pop
loop
shl
clc
cmc
xchg
gs
imul
fisttpll
sbb
jae
movsb
les
test
mov
or
test
test
shrl
push
xorl
dec
testl
or
xchg
jmp
adc
mov
jno
aaa
out
mov
dec
xor
xchg
fs
je
cltd
sti
js
cmp
lea
mov
pop
insl
xchg
dec
pop
dec
inc
sub
insb
jg
sar
or
pop
xchg
sub
stc
sub
sbb
cmp
test
cmp
mov
enter
out
or
xchg
test
cs
into
inc
jne
scas
dec
cmp
shl
lea
xor
or
jg
jnp
pop
lret
mulb
sub
push
jb
jl
xchg
ss
sbb
stc
mov
rclb
push
xor
sahf
enter
and
or
push
cmpsb
sbb
popa
dec
mov
mull
mov
sbb
test
loope
test
insl
inc
mov
scas
mov
test
xor
fsub
mov
test
cli
aad
test
pop
mov
adc
or
xchg
pop
rorl
dec
dec
adc
testl
hlt
xchg
cmp
mov
data16
cmp
lret
inc
cmp
out
jo
cmp
movsl
jl
push
mov
adc
test
pop
xor
fs
stc
pop
pop
adc
imul
jmp
add
arpl
xchg
lret
leave
pop
adc
sub
mov
aaa
fsts
sub
cwtl
pusha
std
dec
je
jno
jno
push
push
pop
mov
les
jp
test
loope
inc
xor
push
pop
adc
in
cmp
mov
jl
jno
aad
push
inc
in
xlat
insl
pop
es
stos
mov
pushl
shll
mov
ror
dec
rcr
test
aas
pop
sbb
fmuls
pop
sub
mov
xchg
sti
addr16
popa
das
mov
cmp
mov
ljmp
fisttps
and
pop
push
pop
adc
dec
xor
inc
lret
shll
call
dec
sub
outsl
jne
dec
cmpl
cwtl
and
xor
neg
imul
iret
inc
inc
sbb
mov
xor
add
xor
bound
sbb
mov
jg
out
inc
dec
int
popf
ds
mov
pop
sub
out
leave
push
mov
dec
cmpsl
pop
mov
mov
rorl
mov
aaa
std
pop
test
cld
jmp
jnp
cmp
outsl
adc
jo
mov
pop
sub
mov
repnz
xor
leave
andb
mov
lret
xor
cmpsl
lret
dec
adc
dec
lret
ss
push
or
test
shll
std
xlat
outsb
jl
inc
cmp
adc
inc
int
inc
addr16
mov
xchg
mov
inc
inc
pop
cmp
xchg
rcrl
stc
mov
xor
test
inc
cli
test
push
lods
aad
aas
arpl
add
mov
or
lds
cmp
xor
cmp
add
pop
stos
in
jp
stc
jne
insl
push
mov
mov
jle
inc
pop
addl
sbb
mov
xor
pop
sti
lea
fcom
pop
cmp
push
xchg
mov
inc
pop
push
jmp
aas
je
sbb
in
mov
add
cmp
dec
inc
mov
ljmp
insl
xor
dec
add
ja
mov
adc
int
call
pop
push
sub
inc
or
xor
push
dec
iret
dec
ja
sub
mov
test
dec
das
push
and
or
cmpsb
gs
dec
bound
xchg
dec
pop
jle
aaa
mov
adc
subb
jmp
js
mov
ror
pop
cmpsb
data16
int3
std
fst
fdivrl
pop
jp
lahf
xor
jp
xchg
dec
pusha
aam
dec
cmp
jmp
loopne
cld
dec
inc
cmp
adc
repnz
dec
popf
cmc
fistps
addr16
push
xor
push
into
rcll
cltd
stos
fbstp
inc
pop
mov
in
cmp
arpl
inc
arpl
xchg
or
xor
andb
mov
sub
cmpsl
adc
sub
fisubrl
outsb
cmpsl
inc
scas
stc
jl
loope
jmp
jno
test
mov
pop
gs
ss
jnp
pop
addr16
dec
jns
mov
int3
mov
movsb
jno
jns
imul
popf
lods
xor
je
mov
add
rcll
and
pop
leave
dec
jecxz
inc
add
cmc
lds
jge
imul
cli
andl
out
cmp
mov
cmc
xor
test
rcrb
lcall
shlb
adc
mov
sub
dec
pusha
adc
dec
popf
cmp
xor
mov
ja
dec
cmp
or
out
mov
rcrl
cmp
and
adc
inc
mov
repnz
ss
orb
xorl
ss
ds
mov
xor
subl
shll
int
dec
mov
test
jb
cmpsl
mov
dec
ss
sub
cmp
xchg
subb
les
in
or
cmpsl
jecxz
sbb
scas
idivl
popf
fs
jge
ljmp
cmpsl
out
in
push
adc
lea
jl
xor
sbb
and
sbb
mov
test
mov
pop
inc
mov
xchg
mov
ljmp
mov
xor
sub
mov
repz
mov
xchg
repz
loop
pop
and
mov
cmpsl
int3
inc
sti
nop
pop
mov
mov
loope
sbb
mov
xlat
arpl
xchg
movsb
stos
push
xchg
xor
in
in
gs
sbbl
jge
lret
lret
adcb
cwtl
repnz
mov
int3
testl
aam
imul
aam
xor
popa
mov
xchg
repnz
sub
xor
orl
ja
adc
xchg
cld
jg
scas
into
shll
loop
pop
dec
stc
push
mov
insb
jbe
fs
mov
dec
and
sbb
dec
jg
adc
std
mov
lea
jno
cmp
or
test
sti
lea
mov
imul
mov
sub
xchg
mov
jne
mov
dec
aam
shlb
das
inc
mov
mov
mov
cs
int
ds
xchg
jp
out
push
leave
imul
int
cmp
sarl
lods
outsb
lds
cmp
iret
fs
ret
jb
insb
adc
fidivrl
jne
loope
aas
orl
aad
imul
xchg
adcl
push
cmp
lahf
pop
mov
cmp
push
fs
pusha
dec
cmc
or
mov
notb
stos
jo
in
divb
adcb
dec
mov
cmp
je
sbb
mov
mov
mov
lds
xor
jg
test
into
outsl
sbb
dec
inc
adc
dec
or
cmp
iret
lds
into
arpl
lds
insl
rcrb
cmp
out
in
pusha
fldenv
orl
sti
mov
sbb
ss
repz
sbb
inc
mov
pop
in
and
lcall
jge
pop
cmp
cmp
xchg
cmp
mov
mov
mov
data16
xor
adcl
repz
aaa
or
popa
inc
xchg
cmp
int
push
and
dec
mov
cmpsb
rolb
push
or
xor
aas
insl
in
popa
adc
je
sbb
lret
pop
jno
stos
aaa
imul
test
iret
clc
int3
adc
inc
fs
mov
mov
lret
cmp
mov
jle
into
xor
mov
add
mov
lcall
stos
xor
cmp
inc
mov
cmpsb
jns
mov
xor
scas
adc
push
rol
ds
movsl
push
data16
jne
pop
add
cmp
or
dec
jns
mov
ficoms
inc
mov
push
dec
mov
adc
mov
xor
cwtl
push
daa
jns
fstpl
arpl
sbbl
jmp
in
inc
ljmp
or
mov
ljmp
cmp
inc
mov
imul
adc
adc
pop
outsb
pop
cmpsl
dec
psubusb
cmp
cli
mov
and
in
dec
add
cmp
cmp
push
fsubs
push
sbb
movsb
repnz
std
fildl
dec
xchg
or
adcl
cmpsb
inc
and
test
xor
les
inc
push
dec
inc
out
loope
cmp
mov
cli
pandn
push
pop
daa
push
dec
lea
mov
mov
cmp
jno
daa
jmp
add
negb
dec
dec
shl
dec
insb
add
or
call
mov
inc
clc
inc
movsb
fisubs
cmpsl
out
sub
jge
jno
inc
mov
hlt
jl
mov
outsb
cmpsb
in
or
lods
stos
sub
repnz
cmp
sbb
iret
cmp
inc
pop
lods
mov
xor
aaa
xor
fidivrl
or
mov
je
ja
out
stc
loop
jne
sbb
stos
fsubrl
pop
addr16
xchg
push
push
nop
cld
sub
mov
loope
gs
dec
cmp
mov
out
add
test
add
cmp
hlt
out
and
xorb
fs
jo
cmpsb
cmp
cld
xor
mov
aaa
cmp
leave
gs
xorb
xchg
dec
or
adcb
dec
into
sbb
xlat
or
mov
notb
cli
mov
mov
or
loop
inc
pop
mov
mov
lods
lret
pop
cmp
mov
mov
scas
push
jl
sbb
cmp
push
imul
mov
je
jbe
pop
dec
push
inc
add
xchg
test
pusha
test
sbb
stc
out
lret
icebp
and
lock
jp
push
fidivl
cmpsl
pop
jge
rdmsr
popa
mov
dec
push
jae
inc
lea
jl
aam
dec
mov
pop
dec
mov
mov
add
mov
sbb
loop
sar
cmpsb
or
lds
push
pusha
iret
ror
pop
push
and
out
dec
lahf
stc
insb
jmp
xor
cmp
in
mov
and
or
sbb
dec
std
cmp
xor
inc
or
inc
adc
sbb
inc
ds
repz
mov
ret
repnz
imul
xor
pop
popa
rorl
adc
iret
fwait
jg
push
out
dec
or
fldl
mov
nop
jbe
aam
in
addr16
dec
adc
sbb
notb
pop
jae
fidivl
mov
or
dec
scas
mov
pop
cmp
repnz
inc
stc
enter
jo
loopne
mov
inc
adcb
push
cmpb
sbb
mov
rclb
push
inc
loop
addr16
fstpt
dec
aaa
mov
xor
mov
adc
js
jo
pop
jnp
cmpsl
pop
xor
inc
sahf
int
enter
dec
mov
adc
jnp
jo
push
rcll
dec
sbb
jb
mov
or
inc
mov
and
scas
andl
or
adc
adc
in
dec
push
mov
in
mov
ss
pop
xchg
stos
cltd
mov
fdivrs
lods
lret
pusha
xchg
push
ja
mov
and
fs
mov
ss
inc
mov
cmp
mov
push
popf
add
jg
jae
push
jge
dec
divl
popa
nop
mov
add
das
ret
std
loop
popf
aaa
inc
psrlq
xor
mov
ds
adc
lds
add
ljmp
popa
adc
dec
loope
pop
or
push
mov
cmp
nop
movsb
xchg
jnp
xor
jns
and
jns
scas
test
out
js
xor
cmp
mov
inc
sub
push
inc
push
insl
addr16
jbe
das
mov
adc
arpl
sub
and
jmp
jl
xlat
cmpl
push
lods
cmp
stc
and
xor
jmp
or
xchg
cmp
stc
and
pop
adc
mov
xlat
clc
push
lds
popf
cmp
xor
add
pop
adc
jne
sub
sti
push
mov
cmp
adc
int3
repz
orl
cmp
addr16
mov
int3
or
and
dec
or
outsb
mov
dec
repnz
push
or
xor
mov
xchg
lret
adc
cltd
xor
add
inc
xchg
dec
sbb
roll
ret
stos
movsb
xor
test
lods
push
pop
outsb
push
xlat
cmp
aaa
outsb
dec
addr16
dec
cmp
lahf
xchg
inc
adc
clc
aaa
mov
jmp
and
xchg
popa
sbb
jp
aas
cmp
call
or
mov
dec
outsb
negb
fcompl
int3
mov
ja,pn
push
sub
scas
add
mov
push
icebp
int
and
jecxz
push
imul
int3
fnsetpm(287
pop
push
test
push
fwait
xchg
xor
sub
cmp
dec
mov
loop
jae
das
mov
mov
test
loopne
xchg
test
add
andl
test
test
pop
insb
sub
mov
cmp
cli
push
clc
ss
cmp
pop
inc
cmp
cmpsl
fisttps
out
mov
gs
push
in
pop
sbb
jns
into
jp
xchg
pusha
arpl
push
cmp
dec
pop
jb
out
sub
loopne
sahf
lods
negl
jmp
pop
jbe,pn
ds
into
sti
test
test
orl
mov
jp
bound
adc
or
xrelease
adc
cmp
mov
xor
cmp
ficoms
cs
or
jns
pop
aam
and
dec
imul
cs
sub
ret
fldcw
int
push
xchg
xor
fistpll
jns
into
cmp
dec
adc
jmp
jl
or
jne
cmpsb
jge
in
mov
leave
mov
aaa
movsl
test
push
xchg
and
popf
lea
mov
movsb
stos
sub
sub
mov
mov
push
inc
paddb
xor
lahf
or
arpl
push
lahf
arpl
test
es
fldl
add
repz
jp
jle
je
jge
xchg
gs
stc
or
leave
xchg
xor
orl
add
stc
call
xchg
push
or
stc
out
arpl
ret
test
push
mov
stc
movsb
and
cli
imul
xor
sub
ljmp
popf
out
xor
xorl
ds
xor
js
sbb
scas
mov
sub
mov
jbe
loope
aaa
roll
xor
cmp
outsb
repnz
add
xchg
outsl
ss
ja
cs
push
push
popf
scas
outsl
insb
pop
aas
mov
test
cmp
out
jp
rcrb
cmpl
jmp
and
ss
iret
fucomip
je
inc
mov
pop
xor
push
dec
popa
sti
jnp
mov
mov
dec
imul
les
rcrb
aam
addb
imul
test
lret
mov
mov
adc
rclw
mov
add
adc
out
cwtl
xorl
pushf
jg
popa
xor
aas
jb
push
shlb
xor
cwtl
dec
rclb
or
adc
arpl
aam
pop
cmpsl
sbb
int
push
lahf
push
mov
sbb
add
mov
pop
pop
cmp
adc
mov
scas
cltd
push
stos
or
insl
pop
dec
cld
dec
test
orb
pop
inc
test
or
sbb
cmp
xchg
mov
inc
sti
cwtl
adc
fsts
adc
imul
loope
dec
test
mov
cmp
adc
loopne
iret
popf
push
push
and
adc
pop
mov
lds
cmp
adc
inc
xor
int
out
adc
mov
mov
sbb
frstor
gs
cmp
nop
popa
xor
dec
orl
movntps
bound
cwtl
arpl
mov
adcb
mov
and
mov
imul
add
lds
cld
shrl
sbb
push
in
cmp
mov
fsubs
add
fcoml
out
cmp
fisubrl
imul
and
cmp
inc
int3
cltd
dec
xchg
jns
xor
and
mov
or
popa
sbb
mov
inc
adc
pop
aaa
mov
mov
cmp
std
mov
lods
lds
jno
scas
mov
adc
push
mov
jno
dec
andb
push
into
sbb
cmpb
inc
mov
fwait
insl
adc
aad
stc
mov
imul
out
mov
addr16
xor
sub
mov
aaa
cmc
mov
mov
mov
cmp
cmp
or
fnstsw
imul
pop
popa
xchg
or
iret
insl
jae
mov
inc
pop
fwait
dec
stc
or
mov
mov
mov
negb
xchg
aaa
test
fstps
lea
popf
int
add
shl
enter
lahf
sbb
fstp
mov
and
and
push
imul
inc
mov
add
fstl
add
inc
push
imul
xchg
test
outsl
dec
nop
jp
call
daa
cmpsl
test
ja
lock
mov
push
xor
sbb
xchg
sti
cmc
jbe
lahf
xor
lcall
cmpsl
test
fwait
inc
or
insl
addb
cmp
loopne
stos
jl
bound
lcall
clc
jae
sbb
lds
stc
and
negl
mov
add
das
cs
push
stos
lahf
pop
dec
push
flds
mov
in
dec
stc
ss
sub
shlb
inc
jno
sbb
es
rcll
sti
shl
mov
repz
fs
mov
cmp
inc
sub
dec
and
dec
jmp
test
pusha
jo
push
cmp
and
out
test
aas
push
jb
or
adcb
dec
jb
mov
imul
hlt
mov
adc
adc
sarb
insl
jg
adc
imul
pusha
loope
or
cmp
or
hlt
pop
arpl
pop
out
cmp
fwait
ss
outsl
lahf
lret
mov
daa
out
adc
dec
scas
nop
mov
inc
or
pop
pop
adc
cmpsb
pop
add
or
xor
leave
rorb
ja
jns
sti
fnstenv
cmpsl
daa
add
das
cmp
inc
ficompl
dec
dec
pop
int3
iret
xor
cmpsl
icebp
mov
dec
inc
xlat
aaa
test
ja
xor
pop
dec
cmp
stc
in
cmp
aas
popa
mov
fidivs
jmp
pop
or
mov
dec
insl
and
cmpsb
bound
pusha
push
test
pop
mov
push
and
inc
inc
fidivrs
insl
int
iret
pop
jo
nop
push
stc
inc
pushf
jb
cmp
lcall
xor
or
jmp
xor
adc
sbb
cltd
cmpsb
cmp
add
dec
push
pushf
jo
movsl
lea
outsl
cwtl
jns,pn
sbb
lea
fnsave
jl
repnz
test
cmpsb
gs
test
or
xchg
insb
fbstp
push
rcll
jle
push
mov
movsb
adc
mov
mov
jnp
mov
or
sahf
push
sar
iret
pusha
iret
scas
jnp
bound
popa
out
inc
ja
dec
fmuls
xor
aaa
dec
imul
adc
shrb
pop
mov
mov
andb
xchg
out
stos
dec
pop
sbb
push
test
xor
test
rcl
aaa
jo
outsb
jge
xor
test
test
out
lock
cwtl
test
lods
lret
std
loope
xchg
push
pop
mov
xor
and
out
jle
jle
aam
sbb
imul
loope
cwtl
xor
xor
ss
dec
fs
xchg
jge
das
cmp
stos
jb
test
fdivl
mov
inc
in
aaa
ljmp
jle
jno
jb
sbb
xor
outsl
lods
cltd
roll
jmp
or
push
insb
mov
push
shll
stc
jle
and
xor
test
xor
cmp
cltd
lcall
xor
jns
dec
fbstp
dec
push
insl
mov
dec
mov
mov
cli
jge
mov
or
cmp
jb
aaa
add
andb
insl
sbb
popf
std
call
in
inc
mov
repz
jmp
and
loope
adc
iret
and
loope
hlt
push
xchg
and
mov
jge
popa
sbb
movsl
cmp
push
js
and
pop
lahf
dec
mov
leave
inc
ljmp
inc
mov
fwait
push
nop
or
jo
sbb
cmp
call
xor
scas
sbb
inc
xor
xor
mov
cmp
adc
adc
fsubs
xor
dec
test
cmpsl
cli
insb
jg
dec
mov
pusha
cltd
jp
push
sbb
sbb
gs
and
rcrb
sbb
jae
imul
dec
inc
imul
or
setns
test
sub
test
arpl
mov
aad
xchg
je
or
fstps
sbb
sub
sub
sti
pop
xchg
pop
inc
lret
jmp
pusha
cld
psubusb
cmc
lods
inc
stc
out
or
xchg
das
sub
lret
jb
xor
push
sub
das
dec
stc
bswap
xor
sbb
insb
notl
jbe
sub
pop
jns
mov
adc
adc
inc
dec
and
add
sbb
adc
ds
xor
outsl
push
leave
cmp
inc
ret
mov
insb
jp
mov
dec
popa
adc
xchg
xchg
adc
sarl
pop
or
dec
cs
jo
sbb
xchg
sbb
cltd
or
push
xor
call
in
stos
adc
xchg
int3
imul
cltd
dec
xchg
sbb
bound
and
fldl
out
cltd
sbb
outsb
js
insl
aaa
push
or
imul
fcoms
xor
inc
xchg
repnz
jle
into
inc
lock
push
add
call
adc
push
dec
sub
jmp
sbb
xchg
lret
push
nop
xchg
fwait
or
mov
inc
inc
imul
cmp
pop
dec
mov
nop
jns
into
push
sbb
fiadds
movb
inc
nop
mov
cmp
pop
dec
es
mov
nop
push
iret
mov
jns,pt
nop
jecxz
xchg
and
iret
xor
sbbb
jmp
xchg
mov
inc
in
test
sub
cmpsl
cmp
push
enter
test
xor
hlt
xor
cmp
rcrb
mov
dec
movsl
or
inc
xchg
loope
pop
fwait
inc
adc
inc
jns
sbb
inc
dec
dec
xchg
xchg
push
dec
dec
rcll
push
adc
cmc
out
xchg
lods
imul
xor
dec
mov
dec
sub
ss
in
jae
rsqrtps
insl
clc
lret
xor
call
push
ja
dec
out
add
rcrl
insb
or
repz
loope
stos
mov
cmp
or
lods
sbb
shlb
xor
mov
nop
imul
dec
rol
imul
push
hlt
push
add
pop
xor
add
mov
jno
jae
outsl
jo
jl
orb
dec
jmp
adc
xor
fidivrl
cmp
dec
adc
lret
testl
dec
mov
push
imul
xor
int3
ret
or
sbb
inc
push
pop
sarb
inc
pop
testl
jle
stc
arpl
cmp
pop
imul
adc
xchg
rcrl
push
jmp
imul
or
adc
shrb
imul
jecxz
pop
aas
xchg
push
add
pushl
mov
lds
stos
push
mov
mov
jg
adc
mov
enter
iret
mov
sbb
cwtl
xchg
mov
lods
sub
test
ja
xchg
pop
loope
or
leave
jnp
aas
in
xrelease
clc
das
mov
pop
fsubs
fs
inc
xor
int3
aas
aas
addl
sub
and
xchg
cmp
push
jge
sub
cmp
ljmp
add
test
adc
nop
xor
add
xchg
pop
scas
pusha
sbb
hlt
or
dec
popf
imul
cmpsl
test
int3
or
sbb
dec
mov
popf
pop
mov
inc
add
out
jne
jno
push
jno
inc
push
mov
movb
dec
or
push
or
dec
push
pop
pop
jno
aas
or
xor
pop
xchg
jl
popf
xor
sbb
sbb
xchg
adc
add
pop
inc
jg
adc
fdivrl
mov
adc
jno
or
mov
xchg
cmp
call
insl
jp
bound
je
dec
adc
mov
out
add
or
aam
aad
lea
mov
jg
sbb
xchg
fadds
stos
adc
testb
cmp
jge
sbb
mov
dec
mov
adc
ljmp
or
xchg
or
stos
jg
loopne
sahf
adc
xor
or
adc
mov
arpl
xchg
sbb
enter
and
adc
xor
jns
sbb
call
stc
aam
dec
mov
mov
mov
add
int3
or
push
into
cmp
push
sbb
mov
pushf
dec
push
outsl
xor
mov
sbb
mov
xor
dec
call
nop
pusha
sbb
ljmp
or
mov
inc
add
mov
je
sub
add
lahf
xor
push
adc
cmc
jnp
cmpsb
ds
dec
int
fistps
pop
inc
mov
in
mov
mov
mov
lret
cmp
insl
popa
mov
es
roll
ret
push
cld
cmp
imul
adc
test
sub
or
popf
dec
inc
or
jnp
test
in
mov
lret
or
pop
dec
lea
mov
iret
mov
mov
cwtl
xchg
add
int
aaa
adcl
inc
adc
cld
push
imull
mov
push
sbb
loope
popf
and
xchg
cmp
push
sbb
jbe
jnp
jbe
andl
cld
fistps
cs
cmp
adc
fldt
data16
jne
adc
int
fstl
imul
mov
addr16
cmpsb
push
cmpsb
sbb
cmp
pushw
add
clc
pushf
imul
mov
dec
adc
sub
ss
clc
cli
push
ret
adc
add
daa
mov
filds
jns
sbb
adc
push
adc
sbb
jp
stos
and
dec
cmp
xor
sbbl
jp
mov
cmpl
iret
jne
pop
cmpsb
scas
cmp
data16
adcb
dec
test
inc
and
stos
inc
push
jmp
mov
push
stos
das
inc
repz
movsl
xchg
dec
imul
push
mov
daa
mov
sub
or
mov
cmp
aam
jo
sbb
out
push
imul
out
add
xor
xchg
or
inc
arpl
mov
cltd
pop
ljmp
jmp
push
stos
sub
mov
aaa
mov
dec
push
xor
mov
push
cmpb
adc
jne,pn
mov
mov
shlb
repz
jns
jnp
sti
pop
es
jne
push
insl
adc
int3
int
add
cmp
jmp
je
mov
jnp
push
lcall
out
rcrl
jns
int
dec
jne
outsl
scas
jmp
mov
and
jae
rclb
jne
clc
cmpsb
pop
daa
insb
mov
cli
inc
addb
cmp
stos
cmp
je
int
cmc
ljmp
call
shll
enter
push
push
jnp
xor
xor
testb
shll
int3
jb
mov
push
lock
or
jb
pop
mov
push
jns
jne
pop
clc
xor
ljmp
adc
imul
mov
xchg
mov
mov
pop
adc
aaa
vpcmpeqb
test
cmpsl
aad
sub
aas
mov
and
cmp
sub
jns
jbe
push
mov
aas
push
xorl
fdivl
popa
mov
jbe
push
insb
pop
xor
inc
vmwrite
jo
cmpl
xor
jno
add
xchg
xor
cmc
cmp
js
pop
or
mov
adc
ret
jae
test
in
inc
push
xor
xor
mov
or
jecxz
sub
jmp
ja
decb
pop
jecxz
loope
push
push
cmp
ja
pop
inc
loopne
cmp
dec
das
pop
or
scas
cmpsl
pop
jecxz
cltd
inc
xor
addr16
sbb
sahf
inc
cmpsb
lock
lahf
add
das
cmp
push
std
sub
shrl
std
push
in
jae
inc
sub
dec
cmp
imul
inc
and
dec
push
testl
test
mov
int
jb
sbb
pop
jbe
imul
or
orb
mov
pop
sub
into
pop
or
xor
pop
mov
add
xchg
mov
int
into
or
enter
repnz
orl
cmpsl
aaa
loope
dec
push
cli
dec
or
jmp
in
pop
pop
cmp
add
cmp
jb
imul
cltd
icebp
ret
cmc
fmuls
fadds
mov
inc
or
int
cli
add
aaa
sarl
orl
imul
mov
pop
jnp
push
pop
pop
jmp
rorb
lods
imul
cmp
xor
ror
insb
add
mov
scas
mov
out
cmpsb
mov
cld
icebp
mov
imull
cmc
fs
dec
scas
sub
push
enter
nop
cmp
lret
fcoms
sbb
mov
fbstp
imul
out
icebp
sub
mov
int
sbb
fsubrs
mov
dec
popf
sbb
int
insl
dec
loope
cli
and
dec
test
aas
aaa
inc
cmpsl
mov
xorb
push
lea
inc
out
or
cltd
les
jnp
stos
gs
ret
testb
sub
pop
adc
mov
rclb
add
mov
decl
dec
shlb
mov
inc
dec
sbb
lea
adc
out
add
dec
mov
cmp
mov
into
jo
mov
mov
jnp
jnp
xor
mov
shrl
sbb
aad
sub
jbe
inc
mov
jp
mov
or
pop
jne
mov
inc
ljmp
into
jmp
enter
rolb
inc
bound
mov
jle
fwait
insl
mov
pop
stos
lret
cmp
or
inc
lods
fdivrl
sbb
jp
cmp
adc
insb
arpl
idivl
pop
divl
xor
adc
ret
jb
mov
aam
mov
pcmpeqd
pop
scas
mov
xchg
inc
aaa
dec
in
shll
xor
cmp
xor
sbb
mov
test
push
cmp
pop
std
push
decb
jno
sar
push
mov
hlt
clc
xor
jno
mov
cmp
loopne
jl
ret
mov
mov
mov
adc
mov
sbb
cmpsb
movsl
mov
inc
insb
inc
sti
insl
jl
rcr
arpl
idivl
or
push
mov
sub
pop
imul
cmpsl
jns
cmp
std
xor
xor
ror
xor
mov
xor
roll
clc
ja
mov
adc
cmp
sbb
cmp
adc
aas
cmpsl
jne
or
add
xchg
int
adc
aaa
ss
fcoms
dec
push
mov
inc
mov
lods
jnp
fildll
xor
dec
or
mov
adc
leave
shlb
pop
mov
push
add
stc
pushw
mov
aaa
fldenv
mov
xor
add
push
stc
mov
pop
pop
sub
jge
pop
push
dec
push
mov
mov
cld
push
movsl
cwtl
fnsave
je
cmp
sbb
inc
test
xchg
mov
cli
int3
or
sub
pop
xchg
arpl
jp
fs
dec
mov
dec
in
dec
cmpl
mov
pop
jns
mov
or
jbe
dec
pop
cmpl
mov
jns
xchg
mov
push
mov
cmp
test
xchg
test
sub
out
jmp
add
dec
cld
sbb
inc
pop
shll
push
add
xlat
addr16
jnp
mov
adc
inc
and
idiv
mov
je
push
test
mov
pop
gs
inc
mov
sbb
aad
insl
jo
jge
arpl
dec
int3
clc
insl
sbb
int3
xchg
xchg
dec
mov
insl
shrl
mov
mov
xor
jmp
sbb
out
imul
inc
popa
xchg
stos
insl
sub
cmpl
sbb
out
mov
sbb
dec
icebp
adc
sub
sti
xchg
push
icebp
out
imul
ljmp
pop
movsb
or
adc
cmp
es
je
push
aaa
xor
xor
jmp
notb
ret
cmc
xor
pop
push
sbbb
pop
bound
es
movsb
int
cmp
and
or
in
mov
or
shr
cmp
or
lock
movb
mov
clc
in
and
sub
cli
jg
or
pop
jae
jb
jne
out
jae
sub
jmp
push
lock
popa
xor
inc
lret
repz
dec
xchg
mov
dec
or
xor
cmp
dec
gs
enter
dec
inc
cmpl
mov
xor
popf
push
test
pop
imul
jbe
xchg
sub
mov
add
inc
push
and
jnp
iret
mov
mov
pop
cmp
adc
call
mov
or
inc
push
inc
lock
push
jecxz
sbb
push
insl
arpl
sub
lods
mov
or
insl
sub
inc
sti
xor
or
xor
mov
jg
xchg
push
test
jg
push
daa
flds
mov
sbb
in
push
jae
data16
inc
mov
pop
in
jno
xchg
jl
scas
cmp
add
stc
mov
cmp
dec
lret
imul
sbb
cltd
mov
fnstcw
inc
sbb
in
xchg
lods
push
push
stc
int3
movl
cmp
orl
lods
nop
out
cmp
mov
shll
xor
sbb
lods
push
jnp
inc
inc
xor
sbb
and
xor
iret
jb
jp
insl
mov
ret
ret
push
clc
inc
movsb
cmp
pop
lcall
movsl
lahf
mov
ja
or
fucomp
dec
pop
std
stos
ret
test
jle
inc
add
xchg
jmp
mov
xchg
cmpsl
ja
mov
jmp
sti
and
pop
push
cmc
pop
movsl
jne
xchg
mov
test
lock
adc
cmp
mov
xchg
xchg
inc
test
popf
js
lea
cmp
cltd
inc
add
cltd
inc
xchg
push
dec
mov
loop
and
mov
dec
fnstenv
mov
jp
test
push
xchg
xorl
call
ja
mov
fstpl
es
clc
push
mov
idivb
mov
ja
cmp
pop
insl
mov
mov
or
inc
test
push
sbb
ljmp
adc
jnp
sub
or
pushf
xor
mov
adc
cmp
adc
push
dec
dec
dec
dec
mov
xor
cmp
dec
int
rol
xchg
insl
inc
sarb
push
xchg
dec
jg
adc
decl
or
mov
push
adc
jg
sti
mov
popa
stc
jp
rclb
and
adc
dec
subb
inc
mov
gs
fmull
mov
int
sub
mov
dec
sbb
pop
or
jns
popa
jp
bound
daa
inc
enter
divb
cmp
stos
cli
popl
or
adc
cmp
lds
into
cmp
pop
cmp
fwait
roll
dec
pop
jne
jecxz
xorl
mov
xchg
ds
leave
sub
test
mov
shlb
pop
mov
push
cld
mov
push
adc
insb
cmpb
or
lods
ja
aam
or
or
daa
outsl
cmp
or
arpl
scas
sbb
repz
cmp
cwtl
xchg
ror
mov
jb
xorl
jg
push
sub
icebp
adc
mov
mov
inc
pop
mov
aas
ljmp
adc
pop
test
mov
cmp
jmp
aaa
cld
sub
pop
push
pop
bts
push
outsb
pop
fwait
push
in
test
stos
aas
jmp
scas
mov
int
mov
xchg
sub
lret
stc
fiaddl
shll
cmp
dec
mov
mov
dec
mov
pop
data16
pop
pop
dec
dec
dec
subl
jno
pop
in
xchg
divb
dec
cmpsb
repz
or
xchg
imull
add
adc
mov
xchg
push
jo
or
push
ds
jge
mov
insl
fs
arpl
stc
dec
adcl
dec
add
add
xchg
stos
ja
pop
aas
xchg
and
fdivl
xor
fimuls
not
cmc
pop
pop
pop
popa
push
mov
shrb
popf
stc
inc
ljmp
stos
pushf
push
add
xor
mov
jb
out
sub
xor
icebp
roll
xchg
aam
mov
aas
addl
xor
xor
sub
lods
lret
xor
push
andl
mov
stc
xor
pop
dec
xchg
insl
pop
lea
cmp
mov
dec
insl
or
loopne
or
and
inc
xor
xor
xor
aas
sarl
enter
lea
jp
or
cmp
psllq
repz
inc
jge
repz
inc
ja
push
scas
or
jno
mov
mov
push
imul
test
lret
mov
cmp
ret
sbb
push
mov
dec
cltd
cwtl
icebp
stos
inc
mov
xchg
pusha
inc
xchg
icebp
aam
push
fsubs
imul
int3
mov
out
mov
add
xor
repnz
inc
dec
pushf
ds
or
test
pop
stos
xor
sti
addr16
shl
dec
xchg
repnz
pop
popf
jae
gs
adc
push
lds
mov
cmp
es
repz
mov
mov
out
mov
mov
cmp
popa
mov
mov
push
sbbb
ja
push
sar
ds
jae
cld
inc
sub
dec
pop
xor
icebp
call
pop
hlt
dec
mov
rorl
pop
add
fdivrs
das
test
mov
daa
cld
pop
pop
jae
std
push
inc
jp
push
cmp
mov
subb
sbb
or
mov
push
push
loopne
jle
xchg
loope
and
ret
movsb
outsl
add
jbe
jl
push
dec
or
push
dec
lods
insb
outsb
sbb
es
scas
dec
out
sahf
or
cmp
clc
cmp
inc
dec
xchg
mov
nop
es
not
dec
mov
popa
cmp
scas
popl
rorl
nop
or
sub
xor
mov
mov
sbb
dec
mov
scas
cmpsl
stc
mov
imul
jo
rcrl
pop
cltd
pop
dec
sbb
inc
aaa
xor
xor
jns
cld
pop
gs
cmp
mov
sbb
lcall
push
arpl
pop
cltd
adc
sub
pop
dec
mov
cmp
scas
sbb
push
and
mov
imull
cltd
pop
lock
lds
pop
push
dec
pop
mov
fs
cmp
fcmove
pusha
push
inc
mov
or
mov
mov
inc
mov
mov
mov
pusha
out
mov
mov
insb
xor
xchg
jmp
test
sbb
xor
adc
fsubrs
jle
cmp
fdivs
mov
cs
mov
dec
je
popf
and
icebp
arpl
sub
clc
repnz
dec
jno
sbb
jge
xchg
sbb
das
jb
test
rol
jnp
sbb
rorl
out
sub
and
mov
xor
push
and
not
aas
rcrb
or
mov
and
add
xor
sub
int
stos
dec
pusha
imul
jp
roll
imul
int3
mov
adc
aad
cltd
test
add
xor
js
xor
xchg
mov
mov
out
dec
mov
pop
adc
enter
fwait
and
mov
and
inc
jle
fldenv
jp
push
mov
jo
mov
sbb
in
push
xor
jns
notb
call
push
push
cmpl
inc
gs
enter
jp
das
pop
loopne
loop
dec
push
mov
xor
push
sbb
lcall
popf
ss
or
lods
jnp
xor
in
inc
loope
out
sub
scas
out
inc
in
mov
rclb
or
clc
mov
pop
rcrb
or
jecxz
mov
cmp
scas
mov
loopne
inc
push
pop
das
pop
iret
clc
jb
rcrb
adc
mov
sub
jg
cmp
mov
push
sbb
loope
arpl
mov
scas
addr16
mov
push
orl
fidivrs
loopne
mov
and
xor
mov
ljmp
das
outsl
mov
pop
mov
ja
push
jns
jns
movsl
insl
sbb
adc
mov
jno
push
popf
mov
js
pop
xchg
movsl
dec
lea
cmpsb
mov
dec
pop
imul
jns
cs
mov
xchg
insl
mov
add
sub
adc
mov
das
jbe
test
imul
mov
mov
cmp
xchg
add
xchg
pushf
or
mov
ljmp
dec
jmp
cmp
or
push
ss
xchg
cmp
push
dec
insl
cmp
sahf
jae
dec
in
sub
inc
jmp
mov
adc
push
pop
in
mov
push
jmp
sbb
subl
das
les
sbb
cmpsb
push
fsubs
and
xor
orb
sub
adc
jb
cmp
notl
lods
sub
dec
jb
mov
cmp
and
test
mov
mov
mov
fdiv
adc
nop
inc
mov
mov
dec
out
xchg
lods
pop
xchg
push
movsl
jns
test
hlt
inc
movsb
imul
jb
ret
jmp
pop
aaa
push
outsb
lea
jge
xchg
inc
push
sub
or
stos
push
mov
popa
xchg
mov
fidivs
jmp
push
sti
iret
jg
fdivrl
cs
nop
xor
outsl
jp
mov
test
test
jp
icebp
adc
jle
test
imul
jg
fistl
adc
lods
cmpl
xorb
ss
mov
dec
or
ret
xor
test
ret
push
xchg
push
andl
inc
in
lea
out
sub
insl
xchg
insl
sub
xchg
bound
cmp
jecxz
mov
test
insl
lret
mov
ja
fstpl
int3
adc
inc
mov
sbb
cltd
sub
aaa
sahf
dec
mov
enter
sub
das
push
cmp
mov
shll
push
adc
repnz
lock
or
cmp
pop
aas
jle
popf
mov
sub
sti
movsb
or
dec
inc
lods
cmp
es
popf
cmp
dec
cld
xchg
mov
call
out
adc
popa
incl
push
cs
das
mov
jl
test
cltd
outsb
pop
inc
sub
into
test
add
push
xlat
fcmovnbe
mov
test
loope
gs
pushf
push
orb
or
hlt
and
jg
fdivl
pop
push
rolb
scas
scas
jmp
dec
testb
sub
pushf
jbe
cmp
jp
mov
cld
or
pop
push
aaa
cmpsb
xchg
ficompl
idiv
rol
inc
jne
jbe
push
rclb
fcmovnu
push
dec
xor
std
dec
and
sub
mov
push
jle
cs
sub
es
inc
mov
xor
xchg
loope
jle
repz
jb
jl
cmc
scas
mov
xchg
imul
or
push
sub
mov
iret
cmp
pop
cli
jnp
inc
mov
mov
enter
adc
xchg
and
adc
bnd
mov
jp
cmp
and
push
call
cmp
shrl
mov
int
iret
dec
jns
sub
xchg
inc
aam
cmpsl
aad
mov
lcall
or
addr16
repz
cmp
xor
lret
mov
ja
xorl
push
hlt
imul
clc
enter
push
loop
push
test
insl
shl
add
add
in
pop
gs
adc
jns
fwait
xchg
aad
mov
ljmp
sub
ret
or
fwait
out
push
push
cmp
mov
xor
jb
out
cmp
adcb
mov
mov
cmp
jb
loope
pusha
pop
jne
push
pop
dec
mov
dec
fmull
fistpll
repz
sub
cmp
dec
mov
push
mov
imul
pop
dec
ror
xor
jns
leave
ret
inc
shrl
jmp
daa
pop
sbb
mov
mov
mov
daa
push
jno
pop
subb
sub
mov
movsl
je
cmp
ja
mov
mov
in
lcall
lods
andl
mov
ficoms
mov
jno
jge
in
js
test
outsl
mov
std
nop
xor
or
push
push
pop
jne
insl
cltd
sub
iret
push
gs
jo
push
fisubrl
push
arpl
xlat
inc
mov
xchg
mov
out
jno
push
dec
out
dec
orb
xor
mov
stc
loope
add
sbb
sbb
add
fildll
popf
popa
rorb
sub
inc
arpl
insl
cmp
cmp
cmp
cld
mov
jb
pusha
jne
test
jge
pop
cmp
addl
sbb
lods
xor
shr
xorl
pop
pop
or
test
inc
push
mov
icebp
cmp
or
testb
inc
sub
mov
mov
cmp
inc
negl
roll
icebp
xchg
stc
cmp
lea
push
dec
imul
nop
sbb
stos
pop
outsl
std
lret
sbb
jle
rorl
pusha
mov
lock
adc
fisubrs
jle
fmul
test
stc
stos
adc
repz
insb
incb
sub
pushf
imulb
imul
cmp
arpl
mov
rolb
sub
cmpsb
sbb
sub
cmp
push
fisubl
push
popf
sbbb
dec
addb
ficoml
cmc
add
push
push
and
outsb
dec
out
daa
lret
dec
popf
fwait
mov
idivb
fwait
movsl
inc
ficomps
lods
sbb
mov
ja
lea
jl
inc
dec
push
mov
push
shll
cmp
add
arpl
bound
xchg
ds
pushl
ljmp
into
test
mov
fwait
lea
int
lods
stc
jle
cli
mov
push
mov
arpl
xor
imul
fnstenv
inc
cmp
adc
or
sub
addr16
xor
cmp
imul
cmp
cmp
jmp
push
fbstp
int
clc
inc
push
int
popf
ss
or
mov
dec
int
gs
pop
add
lret
lcall
jne
dec
repnz
imul
mov
jp
xor
pusha
loop
mov
mov
mov
test
push
or
sti
push
xchg
dec
xor
adc
movsl
pop
sbb
call
mov
shll
int3
push
mov
inc
cmp
dec
inc
pushl
inc
push
cmp
cmp
xchg
jg
aad
jmp
mov
loop
mov
pop
xlat
shrb
dec
dec
cmp
mov
mov
xor
push
loop
sti
mov
mov
test
in
adc
xchg
jno
outsl
xor
cmc
repnz
xor
cwtl
cmp
mov
mov
xor
inc
in
jno
dec
je
lcall
jmp
pop
or
data16
lret
ds
cmp
mov
testb
outsl
mov
jb
mov
aas
jge
dec
ret
cmpsl
inc
sub
adc
jne
addl
stc
pop
cmpl
aas
xor
dec
pop
push
adc
cmp
imul
pop
pop
out
pusha
pop
js
into
int
add
into
sbb
jnp
or
push
sbb
xor
data16
int
pusha
dec
jp
in
fisttps
jl
adc
insb
cltd
mov
adc
pushf
inc
xchg
pop
subb
icebp
aad
orl
adc
mov
addr16
xchg
xor
sbb
adc
push
aas
divl
dec
add
push
cmpsb
mov
pop
jl
loopne
sti
mov
adc
sbb
std
inc
sbbb
pop
mov
mov
loop
lods
movsl
aad
mov
inc
cmp
cmp
mov
push
xchg
loop
pop
add
adc
adc
push
cmp
leave
cmp
dec
leave
and
push
xor
adc
dec
repnz
lahf
mov
jle
shlb
or
pop
icebp
sub
shr
dec
mov
jae
rcrl
out
jne
inc
loope
adc
or
int
xor
lahf
jo
rcrl
cmp
mov
cmp
imul
ljmp
jns
int3
stc
xor
lea
jg
stos
inc
bound
mov
dec
push
cmpsb
xchg
inc
jnp
sbb
pushf
jp
shrb
sbb
scas
inc
dec
lds
shlb
out
cmp
mov
cmp
add
addl
push
sub
fidivl
mov
dec
dec
ds
cmpsb
dec
or
add
stos
notl
xor
lea
movsb
mov
mov
test
sbb
lcall
lahf
sbb
jmp
shlb
jg
cmp
movsb
sti
jmp
mov
cmp
sahf
jo
pop
or
test
cmp
mov
xor
cmp
fstpt
sbb
push
inc
xchg
loopew
popf
cmp
pop
xchg
adc
cmp
and
fbstp
fidivs
jp
dec
mov
cmp
jno
add
push
pop
jge
xor
or
pop
mov
and
and
negl
cmp
inc
or
sbb
sbb
jnp
pusha
jmp
push
jge
mov
andb
dec
mov
push
ss
daa
pop
movsl
mov
jb
mov
sbb
push
jnp
jle
jle
mov
leave
mov
or
and
imulb
inc
filds
ja
pop
jmp
ljmp
test
jecxz
xor
jle
cmp
mov
cltd
inc
pop
clc
js
ja
add
mov
dec
xor
test
sub
sub
in
ret
inc
sbb
push
push
mov
sbb
add
push
cmp
push
adc
pop
push
and
out
cmp
int3
push
push
out
jne
ja
cmp
sarl
jbe
pop
cmp
bound
imull
in
pop
addr16
rcr
push
es
add
cmp
xchg
lret
mov
loop
loop
pop
adc
jno
mov
adc
stc
mov
insl
jmp
mov
mov
dec
xor
push
adc
add
ficoml
enter
xchg
in
pop
jae
cmp
mov
cmp
and
adc
add
and
xlat
push
pop
xor
mov
sub
push
imul
cltd
add
es
jmp
push
popf
outsl
jns
sub
rcll
leave
imul
jmp
incb
scas
test
push
or
xchg
nop
mov
lret
loope
adc
cmp
inc
xor
aaa
cmp
nop
xor
loop
sbb
nop
loop
test
je
push
insl
xchg
jns
mov
push
and
std
dec
push
mov
jo
ds
inc
rcr
test
mov
rcr
mov
cmp
insl
idivl
mov
fldenv
xchg
pop
xor
xor
rcrl
inc
test
mov
mov
test
pop
bound
inc
mov
dec
sbb
or
stos
xor
mov
sub
or
xchg
into
cmpsl
les
mov
es
icebp
pushf
or
lahf
and
imull
or
aad
push
dec
out
dec
pop
mov
push
xor
fimull
sti
xor
jmp
adc
loopne
rorb
sub
sub
fidivs
xor
inc
addr16
fsubrs
outsb
adc
adc
push
jle
cmp
daa
dec
out
cs
repz
add
adc
mov
mov
cmp
ljmp
push
stos
decl
fmull
sub
push
mov
sub
inc
or
add
lcall
js
mov
mov
inc
mov
jge
jg
call
into
mov
cmp
mov
and
xor
cmc
adc
or
ljmp
dec
cli
sbb
ja
pop
scas
jl
lods
xor
mov
inc
int
clc
ja
pop
mov
loop
sub
mov
shll
repz
clc
mov
je
loop
jns
mov
in
mov
jns
jmp
push
or
or
mov
jae
test
mov
sbb
mov
mov
cmp
cmpsb
sub
sbb
push
mov
sub
mov
ds
jp
pop
sub
mov
adc
inc
add
dec
fs
xorl
clc
xor
dec
jge
xchg
inc
xchg
fistpll
inc
adc
dec
adc
xor
or
into
subb
nop
or
pop
push
movsb
pop
push
lods
into
push
xor
es
mov
or
mov
add
push
es
mov
testb
popf
cmpl
int
push
and
imul
out
push
scas
mov
sahf
insb
and
xlat
sbb
or
mov
pop
divb
xor
movsb
es
dec
fdiv
or
imul
sub
imul
in
pop
lea
mov
out
lods
test
out
ljmp
scas
jnp
mov
xchg
data16
cmp
dec
mov
jp
sub
mov
jns
lea
addr16
fnstcw
mov
lret
inc
dec
mov
mov
insl
mov
test
popf
cmpb
rcrl
imul
int
inc
or
int
xor
sub
add
add
mov
mov
mov
push
lret
inc
nop
mov
dec
cmp
mov
repnz
lea
push
je
inc
int
cld
inc
mov
xorl
pop
push
xorb
jae
xchg
push
sbb
jmp
bound
nop
stos
pop
enter
and
mov
cli
dec
lahf
popf
insb
jp
push
enter
loopne
xchg
push
cld
cmp
pop
sti
insl
pop
inc
int
mov
lds
inc
jl
pop
clc
push
xor
dec
mov
daa
xchg
push
fmull
cmp
cmp
shrl
push
mov
cmp
jle
dec
mov
add
cmp
pop
and
cmpsl
mov
cld
lods
xchg
out
mov
jmp
cmp
rcl
mov
repz
fcomps
aad
mov
push
ja
xor
jae
insb
sbb
clc
jbe
cmp
hlt
clc
push
or
add
lea
or
mov
jo
into
movsl
out
stos
pop
jo
inc
fs
int
adc
or
int
xlat
out
mov
inc
les
push
add
sbb
adc
push
adc
and
mov
ss
sub
repnz
rclb
mov
mov
gs
jg
mov
xor
push
lahf
stc
sub
dec
jnp
cmp
in
dec
cmp
adc
xor
cmp
sub
stc
test
adc
popa
inc
js
xor
adc
loop
push
add
xchg
mov
int3
jl
int
fistps
fmull
xchg
adcb
cmp
jmp
jns
daa
subl
pop
lods
aaa
inc
in
subl
jne
lds
push
popa
push
adc
jp
push
push
dec
mov
or
cmp
lock
pop
jp
xor
dec
cmpsb
pop
xor
pop
add
lret
pop
pop
push
cmp
pop
xchg
xor
pop
idivl
cmp
sbb
arpl
adc
orl
jbe
dec
jns
jne
fnstcw
pop
push
dec
pop
mov
int
inc
int
fldt
orb
dec
mov
popf
adc
mov
shrl
cmp
xchg
sub
stos
add
ret
cmp
pop
dec
icebp
js
adc
nop
push
add
sub
xchg
and
aas
mov
sbb
adc
in
cmp
pop
ljmp
jae
bound
shrb
sbb
popa
sub
cmp
and
rcll
mov
aaa
adcl
xchg
xchg
jbe
jmp
sbb
pushf
jmp
jnp
test
mov
dec
xchg
mov
insb
jns
test
xchg
and
daa
movsl
jno
xchg
insl
adc
repnz
test
mov
inc
andl
mov
in
mov
cmp
sbbb
leave
push
cmp
push
dec
sbb
mov
mov
mov
mov
cmp
gs
sbb
xchg
and
xchg
ja
fwait
pop
cmp
sub
push
xor
sbb
loope
push
insb
cmp
mov
fs
out
mov
dec
mov
adc
mov
mov
pop
clc
iret
sub
mov
movsb
xor
das
push
xor
fists
gs
daa
int
push
xor
push
pop
arpl
dec
mov
jnp
pop
sbb
lea
xor
adc
sbb
aad
push
adc
loopne
inc
out
out
mov
leave
jns
dec
mov
shrb
fxch
sub
adc
jbe
addl
jl
aas
mov
pop
sbb
jecxz
sbb
iret
int
insb
mov
daa
mov
or
mov
mov
pop
inc
or
sbb
mov
and
imul
mov
bound
xor
dec
lea
jnp
xor
out
xchg
adcl
dec
idivl
lret
mov
je
pop
inc
inc
sbb
jp
daa
pop
mov
inc
mov
movsl
outsl
hlt
and
push
iret
push
scas
mov
test
push
jnp
xchg
sbbb
mov
dec
mov
cmp
or
loopne
sbb
sbb
or
mov
add
push
dec
or
xchg
adc
dec
mul
lock
cmp
or
inc
mov
imul
movsb
pop
imul
push
cld
pop
mov
mov
fistpl
add
or
in
xchg
imul
cmpsb
pop
xor
cmpsl
test
dec
jns
test
insl
adc
imul
pop
sbb
sbb
jne
ret
ja
mov
imul
lret
mov
roll
pop
stos
lds
mov
divb
popf
cmp
cmp
adc
shlb
pop
rol
sub
mov
jbe
test
jno
leave
cmp
outsl
int3
adc
jp
adc
and
js
aad
pusha
gs
xchg
jo
xor
xchg
fldenv
jae
inc
xor
fwait
adc
xchg
sbb
jo
or
lods
push
add
inc
jbe
cmp
xchg
jae
lea
popf
shlb
fnstsw
aad
out
mov
push
std
cld
lods
shll
call
mov
mov
or
cmp
cmp
mov
mov
out
sub
addr16
push
pop
out
xchg
fidivrs
dec
adc
dec
scas
cmp
js
sub
imul
aas
push
inc
adc
in
mov
outsb
ljmp
mov
xor
arpl
iret
cmp
cmp
mov
insl
aas
or
jl
sbb
mov
push
mov
into
icebp
mov
addb
sbb
push
out
gs
jg
push
push
xchg
dec
mov
popa
inc
clc
jl
call
jmp
sbb
out
enter
add
aas
sbb
orb
es
push
pop
xchg
fidivl
stc
ficomps
out
sahf
jb
sarl
mov
scas
repnz
es
mov
inc
dec
or
insb
hlt
or
mov
insl
loope
in
mov
insl
mov
jno
shlb
mov
aaa
sbb
inc
mov
scas
push
int
cmpsb
jl
mov
lret
mov
pop
add
lea
ja
pop
lea
cmp
test
out
jp
mov
dec
cmp
enter
pusha
adc
stos
aad
or
cmc
jns
pushf
cmp
test
push
or
bnd
or
mov
imul
and
or
push
push
pop
adc
insw
mov
sbb
dec
sbb
push
lods
or
testb
push
mov
popf
sub
dec
and
xchg
pop
xchg
aam
or
pop
pop
jl
lea
fildll
jns
xlat
pop
out
gs
adc
dec
ss
xor
cmp
rcll
push
insb
or
xchg
mov
rorl
xor
adc
dec
push
jbe
lahf
stc
jecxz
mov
sbb
dec
dec
pop
jae
ss
jmp
int3
inc
pusha
lret
stos
ret
push
mov
dec
orl
lea
mov
shlb
loopne
subb
inc
and
loope
jae
inc
pusha
gs
mov
xor
push
ds
in
jno
sub
sub
push
adc
dec
cmp
jno
sub
scas
movsl
cmp
inc
shrl
stos
xchg
js
shll
int3
inc
cmp
iret
pop
push
rcrb
mov
loope
xchg
inc
xchg
mov
fstps
mov
jno
jle
insb
or
xor
cli
xor
imul
mov
pop
stos
enter
jnp
lahf
or
or
or
pop
dec
dec
jp,pn
cmpsl
iret
addr16
adc
ror
cmp
rorb
or
fisubl
in
jbe
jbe
pop
popf
adc
rclb
push
jmp
into
jle
inc
dec
lods
call
inc
adc
imul
repz
dec
adc
cmp
push
fwait
jg
imul
jo
sub
jo
cmp
adc
xor
mov
inc
lcall
add
or
push
mov
dec
mov
jle
insl
nop
and
aam
mov
je
jns
gs
xor
dec
xchg
mov
aas
cmpsb
dec
pop
call
add
movsb
mov
adc
dec
pop
jge
or
and
movsb
adc
je
movsl
imul
jne
push
dec
jno
or
mov
sub
jo
xor
ficoml
imul
std
mov
insl
test
mov
imul
mov
incl
adc
ret
inc
int3
cmc
les
idivb
rcrl
xchg
bound
mov
cltd
lret
mov
dec
mov
lea
push
cmpsb
mov
sub
jae
xor
push
fimuls
jmp
xor
stc
adc
dec
adc
xor
lret
insb
repnz
mov
jb
sbb
dec
pop
ljmp
ds
repnz
popl
cmpb
pop
stos
or
lahf
hlt
jle
imul
mov
xchg
and
pop
mov
add
inc
mov
or
popf
imul
int
cmp
mov
mov
pop
push
and
test
les
std
pop
dec
sub
mov
popf
insl
cmp
or
popf
jne
or
sbb
pop
fstp
adc
jbe
pop
incb
icebp
jg
lret
pushf
imul
outsb
push
mov
rolb
dec
add
outsl
or
mov
popf
ret
je
in
fistpll
insl
jecxz
push
rclb
pusha
or
cmpsl
cmp
mov
mov
pop
pop
rclb
inc
cmp
pop
imul
xor
pop
cmp
imul
aaa
cmp
out
xor
shlb
dec
push
scas
inc
pop
rorl
sti
shll
popa
pop
aad
jne
test
scas
sub
ss
dec
pop
mov
dec
pop
cmp
lods
xor
stc
xor
jbe
popl
push
inc
or
adc
push
dec
testb
xchg
pop
out
pop
sub
dec
cmp
popf
bound
and
cmp
cmp
add
cmp
cli
fcompl
call
movsb
aaa
jbe
dec
pop
test
adc
int
push
or
shrl
inc
pop
popa
mov
or
inc
fwait
cmp
jnp
icebp
mov
cmc
jl
push
mov
fidivs
jae
xor
jmp
jge
dec
mov
inc
pop
fs
lret
jnp
push
pop
mov
add
cltd
addl
xorl
inc
add
add
cmpl
ds
test
push
cmp
arpl
insl
outsb
test
std
je
loopne
sub
mov
cmpsb
test
add
inc
stc
pushf
jno
jg
jne
into
sub
popf
pusha
pop
pop
orl
dec
jnp
cltd
mov
push
sbb
lods
mov
into
ljmp
cmp
es
fwait
cmovo
pusha
mov
mov
jp
negb
iret
xor
ret
mov
xor
adc
sbbl
jnp
xlat
insl
testl
jnp
push
sbb
aas
bound
push
cmp
adc
and
test
mov
sti
nop
adc
add
imul
adc
mov
frstor
xor
dec
jnp
or
in
movsb
xchg
xchg
push
in
test
mov
pop
jl
xchg
xlat
test
mov
outsb
rcll
outsb
pop
jnp
lahf
dec
aaa
sbb
xlat
cmp
fdiv
insb
push
cltd
int
test
and
popf
loop
mov
into
sbb
jl
mov
ss
mov
fst
subb
or
fs
lret
flds
adc
xchg
cmp
cld
add
cmp
add
lret
in
movsb
xor
mov
mov
xor
mov
xor
sub
pop
ljmp
pop
push
adc
or
ret
add
mov
xchg
gs
ljmp
je
inc
xor
fst
in
test
fidivrl
push
pusha
ficompl
data16
aas
orl
in
lds
mov
adc
mov
stc
enter
int
lret
movsl
sbb
add
lods
jg
inc
out
or
pop
stc
push
test
mov
bound
cmpsl
stc
arpl
cmp
std
cmp
shr
mov
bound
pusha
jnp
imulb
push
stc
jp
je
jl
mov
pop
psllw
pusha
or
xor
cmpsl
jle
insl
popf
xor
int3
lret
mov
jle
stc
test
mov
mov
sub
lret
mov
ror
xor
cmp
dec
or
xchg
sbb
dec
fdivrl
movsl
mov
add
mov
sbb
cmp
add
imul
js
pop
das
addr16
shll
jl
inc
mov
test
addr16
jbe
ficompl
lret
mov
jnp
subl
aaa
mov
mov
push
divl
shr
sbb
aad
fbld
jnp
int3
jns
fcmovnb
lock
mov
sub
add
cmp
inc
test
sbb
or
ljmp
inc
add
mov
ret
push
sbb
jno
lret
sbb
pop
cmp
addl
push
jne
lds
sbbb
adc
pop
jbe
fiadds
push
popa
popa
mov
aaa
fnstcw
test
jp
cmp
mov
xchg
inc
cmc
sbb
test
pop
test
xchg
stos
fadds
add
mov
negl
push
bound
fldcw
push
and
pop
dec
outsl
dec
out
stos
ret
add
push
aam
adc
cmp
enter
push
in
imul
push
and
pop
jb
clc
push
push
dec
xor
in
xor
mov
dec
cmp
xor
jbe
test
loope
lret
fsubl
loope
sti
mov
inc
popf
xor
inc
pop
mov
push
shll
sub
adc
mov
out
fnsave
inc
fstl
pop
jmp
sar
popf
mov
sub
imul
adc
stc
cmpsl
add
sbb
push
movsl
loopne
and
pop
and
cld
pushl
or
cmp
jl
xchg
out
test
mov
xchg
rcrl
jle
imul
jne
adc
lock
jb
xor
xlat
push
iret
push
jno
mov
ds
pop
sub
push
dec
int
sbb
xchg
fistpl
sti
popf
inc
sbb
sub
xor
inc
cmp
jb
pusha
cmp
mov
sbb
xor
test
xchg
popf
cmpsb
adc
cmp
sub
test
cmp
lret
adc
push
pop
jg
popf
pop
adc
lret
push
xchg
ds
int
sbb
dec
addr16
cmp
bound
xorb
adc
test
shll
jl
out
psrad
cmp
dec
rcrb
xor
lds
subb
sub
jne
mov
dec
cs
jns
ljmp
aaa
add
mov
into
stos
jb
mov
push
xchg
inc
or
jb
pusha
int
mov
dec
loopne
and
js
sub
xor
mov
jmp
xor
cmp
sbb
mov
int3
jle
pop
ljmp
add
ficoms
xchg
pop
rol
mov
sbb
cmp
lock
mov
mov
inc
or
imul
mov
stos
fnstenv
out
inc
scas
lea
jne
loopne
cmp
inc
lea
lods
adc
mov
out
push
les
sti
or
roll
lea
loopne
jno
test
mov
or
inc
mov
mov
into
ss
lahf
movsl
dec
jb
test
or
gs
pop
movsl
es
pop
mov
cltd
shlb
jnp
ss
jp
dec
cmpsb
cmp
mov
popf
ss
xchg
mov
xor
pop
fwait
outsb
cmp
and
arpl
cmp
mov
frstor
enter
xor
fcom
and
mov
divb
insl
and
cmp
and
jae
push
mov
faddl
shll
test
cmpsb
push
xchg
xchg
into
loope
bound
pop
dec
inc
nop
pop
or
xchg
aas
je
cmp
idivb
cmp
sub
je
dec
mov
dec
cli
sarb
push
cwtl
mov
inc
sbb
icebp
push
daa
xorb
cmpsb
outsw
test
lahf
bound
int
mov
jle
cmp
out
and
dec
icebp
jae
push
xchg
std
test
rorl
add
dec
jne
shlb
sub
dec
in
sti
adcb
sub
push
sbb
inc
xchg
mov
mov
jo
loope
pop
push
jle
fstps
or
cmp
test
jbe
sbb
mov
xchg
sbb
and
jne
and
mov
dec
add
mov
dec
inc
and
xorl
ja
inc
mov
je
jns
cmp
adc
jl
insl
pop
add
add
in
ss
mov
add
push
and
pusha
test
imul
xor
leave
or
out
mov
xor
pushf
mov
jno
loope
pop
xor
ds
xor
xor
cmp
pop
cmp
cmp
xor
inc
pusha
jmp
or
or
ja
inc
mov
dec
cmp
inc
arpl
cmp
icebp
pop
andl
lds
jmp
divl
add
mov
jae
cs
repz
and
adc
inc
dec
in
in
push
mov
into
lea
xchg
xchg
popf
add
lods
lods
into
adc
push
or
dec
dec
dec
in
addr16
inc
add
gs
or
or
jns
or
or
sbb
loopne
enter
pusha
mov
adc
popa
call
imul
or
xor
cli
jg
movsl
inc
jbe
xor
mov
jns
fcoml
xchg
or
das
sbb
jp
stos
pop
mov
fdiv
lods
mov
repz
orb
pushf
mov
xchg
push
inc
ja
jne
add
jle
pop
jp
adcl
dec
insl
sbb
inc
push
xchg
adc
movb
lcall
adc
mov
jg
add
int3
sbb
pop
adc
int3
cmp
sbb
mov
addr16
push
lahf
adc
sub
mov
cmpsb
scas
in
push
sub
sti
testb
dec
addr16
movsl
jl
ret
rolb
inc
in
pop
sbb
shll
jne
cwtl
xchg
lret
mov
fsubl
popa
clc
dec
stos
xchg
pop
and
dec
push
jmp
scas
inc
xlat
stos
enter
shll
xor
xchg
sarb
add
gs
mov
loop
cmp
sub
and
or
ljmp
sarl
mov
imul
sbb
data16
rclb
cmp
ljmp
pop
ja
mov
repz
aam
leave
lds
dec
out
mov
popf
add
fs
or
dec
je
xchg
xor
out
mov
mov
mov
fwait
movsl
int
jnp
jp
out
dec
ds
fisttps
xor
orb
and
cmpsb
pop
ljmp
cmpsb
adc
icebp
push
inc
push
and
or
push
mov
mov
popa
loopne
jbe
cmp
bound
shrl
pop
or
or
inc
andb
repz
js
ret
stc
fidivs
lea
jl
cmp
addb
addr16
and
popf
imul
mov
push
icebp
ret
je,pn
cmp
loopne
and
in
fwait
cmc
mov
or
add
es
lret
pop
dec
rcrb
nop
xor
shll
cmpsl
and
xchg
or
je
inc
out
push
push
jp
in
cmp
xchg
lret
inc
ret
daa
sub
cli
popf
addr16
jbe
mov
mov
cli
sub
aaa
mov
xor
imul
movsb
ja
adc
push
xor
push
pop
ret
cmp
xor
fwait
rorb
arpl
lea
fisttpll
mov
negl
into
mov
dec
dec
ret
mov
adc
adc
daa
and
mov
cmp
mov
call
idiv
pop
sub
dec
sti
fxch
std
push
loope
dec
or
cmp
mov
cltd
sub
sbb
mov
xchg
mov
sub
or
add
adc
mov
xor
repnz
int3
xchg
xchg
sbb
mov
lret
mov
enter
ret
push
add
mov
cmc
cmp
js
cmp
adc
popf
inc
repz
icebp
cmpsb
jl
mov
sub
mov
cltd
loop
pop
and
pop
and
push
icebp
out
mov
push
imul
lods
or
ret
scas
dec
pop
dec
push
cmp
xchg
mov
sbbl
jb
xchg
cmp
xor
xchg
in
dec
xchg
mov
add
ficoml
mov
jnp
clc
mov
int
bound
stc
pop
jg
aad
and
pop
lahf
into
inc
push
cmp
and
out
cmp
test
popf
dec
inc
mov
in
sub
rorl
mov
push
xchg
and
fldenv
mull
adcl
inc
xor
xchg
push
fnstcw
ds
dec
add
jp
cmp
inc
jns
repnz
mov
jbe
aas
pop
mov
cwtl
cmpsl
dec
push
pop
mov
je
mov
cltd
inc
jle
push
jmp
shlb
cmp
or
xchg
pop
ja
cmp
jp
pusha
inc
cmpsb
push
je
xor
mov
jae
mov
xor
jl
fsubrl
loopne
xor
mov
jmp
clc
rol
test
cmp
adc
and
hlt
fsubs
mov
sub
jo
and
push
mov
shrl
lods
push
out
test
lea
ljmp
xor
mov
cmp
mov
test
dec
clc
jbe
sub
jmp
xor
jnp
pop
sbb
aaa
mov
mov
fbstp
mov
mov
or
dec
scas
fwait
lret
cmp
jp
jno
les
cltd
arpl
pop
jmp
stos
xorb
inc
cmpl
inc
mov
dec
cmp
negb
xchg
lods
xchg
loopne
imull
ljmp
fistps
cmpsl
cmp
ret
jo,pt
pop
mov
lcall
mov
xchg
adc
mov
js
jb
and
aaa
clc
mov
cmp
inc
fwait
cmc
ja
xor
jl
jge
jg
lcall
xor
pop
rorb
push
mov
les
repz
ficoms
push
imul
dec
pop
nop
repnz
in
lahf
hlt
mov
in
xor
jp
inc
jo
out
lods
jo
addr16
stc
xor
je
mov
sti
dec
cmp
mov
xchg
xchg
jb
lcall
mov
popf
sub
negb
cmp
mov
icebp
cmp
dec
rolb
sbb
jae
push
fildl
dec
mov
xor
aas
orb
push
and
push
test
mov
fistps
xorb
pop
inc
int3
jp
addr16
popf
popf
xor
sbb
push
adc
js
clc
sub
or
filds
stc
fists
push
or
xor
dec
cmp
aas
int3
adc
xchg
or
push
loope
outsl
mov
out
ss
cmp
dec
jg
leave
push
aad
xchg
jae
movsl
adc
mov
test
sti
mov
adcb
dec
or
push
shll
jae
or
clc
fsubrs
pop
jge
mov
cmp
fdivl
out
mov
test
sbb
mov
ret
xor
or
ret
add
incw
mov
cmp
push
hlt
and
cmpl
out
xchg
stc
adc
js
add
inc
dec
adc
popf
cmpsb
cmp
mov
lods
mov
jle
cmpb
jecxz
jae
clc
mull
pop
and
dec
inc
aad
push
mov
xchg
jbe
xchg
or
dec
push
mov
mov
bound
mov
negb
jo
cwtl
and
in
bound
sbb
dec
divl
xor
adc
bound
sbb
mov
pop
rcrl
or
mov
xor
sbb
lret
les
scas
mov
mov
fs
arpl
dec
pop
lea
scas
jb
jp
pop
ret
fsubl
aad
scas
dec
xor
shr
mov
cmp
pusha
cmp
inc
dec
or
inc
xchg
out
scas
daa
xor
mov
jl
sar
cmp
inc
cmpsl
xor
test
inc
hlt
scas
movsl
xor
and
shlb
push
inc
aam
lcall
xor
xorb
pop
mov
leave
xor
mov
ret
pop
js
cld
push
mov
cmp
and
and
scas
subl
scas
mov
movsb
scas
popa
repz
push
movb
jo
fisubs
or
jae
rclb
scas
xlat
xchg
push
sti
jp
dec
xchg
pop
mov
mov
imul
cli
mov
mov
inc
pop
xor
ds
cltd
enter
gs
adc
iret
jns
in
or
jbe
call
daa
jno
mov
aam
loop
jae
push
jns
sub
mov
adc
daa
or
pop
mov
xlat
xchg
inc
jne
add
sub
sarl
sbb
adc
mov
jns
cmpl
fs
sbb
jecxz
int3
es
repnz
jo
addb
push
dec
lret
mov
mov
mov
shl
pop
jg
push
jns
pop
imul
scas
xor
push
les
mov
adc
lcall
inc
jnp
jecxz
pop
lcall
push
stos
daa
push
loop
xchg
xchg
mov
roll
fsubrl
movsl
dec
rolb
sbb
mov
ja
or
lret
lahf
inc
jnp
mov
xchg
orb
push
jl
cmpsl
cs
enter
mov
stc
fimuls
gs
sarl
push
sbb
ja
cmp
and
jnp
pop
lods
mov
gs
mov
imul
cmp
loop
ficomps
sbb
xor
xor
mov
jns
test
cli
pop
lret
xor
in
lret
pop
sbb
sub
inc
cmpsb
fistpll
jmp
mov
xor
adc
ss
sbb
inc
mov
or
mov
fldt
inc
adc
cmpsb
test
imul
icebp
xor
mov
sbb
mov
test
fisubs
mov
nop
gs
pop
jnp
pushl
orl
mov
mov
inc
scas
jno
jbe
test
cs
les
xchg
xchg
rorl
sbb
shll
sub
jp
shl
add
mov
adc
popa
lret
dec
ljmp
lds
cmp
pushf
dec
xchg
adc
scas
dec
jo
mov
inc
cs
and
hlt
iret
loope
pop
mov
and
push
fidivrs
or
cmp
add
cmp
mov
fiadds
sub
xchg
jl
mov
push
or
cltd
pop
inc
rorl
pop
sbb
cmp
mov
stc
lcall
mov
pop
stc
inc
ss
lret
addr16
cmp
or
imul
loopne
test
xchg
int3
and
loope
pop
jecxz
xor
and
jno
cmp
bound
mov
adc
dec
test
xchg
ljmp
push
inc
jecxz
mov
mov
ret
in
or
aas
nop
ds
mov
stos
or
and
movsb
dec
sub
insl
ret
mov
mov
sbb
push
push
aas
mov
inc
inc
js
test
or
push
popf
and
push
dec
push
pusha
popf
cmp
sbb
faddp
jae
dec
sub
decl
jnp
mov
jbe
or
inc
dec
xor
xor
cmpsl
push
cmpsb
fistps
test
pop
and
mov
add
push
dec
enter
cmp
les
pop
xor
int
popa
test
xchg
xor
jecxz
xlat
das
or
mov
cmp
and
xor
mov
mov
into
popf
bound
pop
mov
jg
arpl
mov
imul
xor
jns
mov
in
repz
inc
test
dec
sbb
mov
iret
es
lods
aaa
inc
gs
rcll
shll
je
loope
cmp
push
sub
fadds
test
ds
pushf
mov
test
test
adc
mov
stc
mov
inc
ss
or
dec
sbb
mov
aad
stc
enter
loop
mov
jnp
pop
sbbb
ja
xchg
negl
sbb
mov
scas
in
cmpsb
cmp
cmp
outsb
xchg
jnp
enter
mov
cmpsb
mov
mov
or
cli
cmpsb
inc
inc
scas
mov
dec
or
and
or
dec
push
in
mov
xchg
orl
mov
nop
ss
mov
imul
inc
test
ret
sub
leave
scas
sub
outsb
xchg
push
jp
xor
mov
xchg
outsb
lods
push
cltd
inc
cmp
call
les
fwait
xchg
test
dec
fcmovu
jg
movsl
xor
inc
imul
dec
dec
pop
adc
push
jbe
pop
pop
inc
pop
inc
loop
aaa
mov
mov
mov
push
pop
lock
mov
push
int
lahf
sbb
lret
int3
push
leave
dec
ret
dec
lods
enter
jecxz
sbb
and
dec
mov
jns
into
or
mov
repz
out
dec
inc
pushf
mov
scas
push
ret
movsb
mov
mov
dec
xchg
lds
mov
lock
insb
jae
lea
jne
or
pop
jb
push
lret
inc
clc
hlt
ja
add
and
sub
mov
mov
xchg
int3
pop
fwait
mov
sbb
xor
imul
mov
inc
test
xor
aas
jecxz
xor
sbb
lahf
inc
cmp
adc
jno
pop
mov
lcall
dec
or
mov
mov
lret
clc
xor
mov
adcb
insb
js
dec
push
cmp
cmpsb
jl
cmp
mov
add
sbb
jo
jl
popf
int
subl
xchg
jp
mov
jnp
mov
mov
mov
or
push
jmp
add
bound
inc
insl
jns
adcb
gs
pop
pop
stc
pop
xor
dec
push
aam
aam
push
push
movsl
and
adc
cmp
int
sbb
cld
sbb
iret
or
add
std
in
cmp
adc
inc
jns
fdivrs
jo
pusha
mov
adc
cs
hlt
inc
fildll
mov
sahf
clc
pop
dec
hlt
jmp
ds
cmp
xchg
mov
sub
das
mov
mov
sbb
imul
add
call
ja
movsb
inc
in
dec
cmp
cmp
jl
mov
into
inc
and
mov
call
fbld
dec
push
pop
mov
cmp
jp
push
ja
aad
mov
gs
sbb
lahf
jns
or
scas
mov
push
ret
sbb
mov
or
mov
bound
mov
push
out
xchg
shll
mov
mov
mov
popf
sbb
inc
ret
idivb
xchg
pop
mov
or
dec
loope
and
add
mov
dec
sti
rorb
push
push
or
sbb
les
jg,pt
inc
stos
lahf
inc
scas
sbb
adc
or
sbb
xor
incb
insb
dec
in
adc
insl
cmp
ja
jge
sbb
jb
dec
pop
inc
mov
pop
adc
dec
dec
jbe
push
cmp
sub
pop
cmp
aas
rolb
pop
insl
sub
pop
jb
pcmpeqw
push
or
mov
lret
mov
sub
push
inc
or
mov
or
imul
jne
roll
push
cmp
xchg
lret
mov
loop
outsl
mov
insl
je
xchg
cld
xor
pop
in
aas
sbb
mov
sub
jle
cmp
out
mov
hlt
arpl
and
stos
ljmp
xchg
cmpsb
cwtl
pop
insl
or
imul
inc
mov
pusha
jl
adc
push
jb
cmp
out
fisubrl
jp
sbb
outsb
add
lods
push
inc
dec
outsb
insl
push
outsb
push
insb
cld
adc
lret
jge
cmp
sub
aaa
scas
xchg
mov
int
cltd
loope
rcrb
lods
cmp
loope
dec
addr16
js
loop
lahf
bound
fdivrs
lret
popf
ficoms
or
fsub
cmp
loope
cmp
jp
outsl
je
testb
cmp
popf
outsl
xchg
stos
fs
lahf
out
sub
adc
mov
mov
mov
dec
imul
popf
dec
stc
pop
jp
fs
xchg
push
xor
call
pop
inc
cli
xor
inc
shrl
adc
out
inc
inc
jle
ds
imul
jae
xor
mov
or
sbb
outsb
popf
fwait
icebp
cmp
mov
push
xchg
out
dec
sub
imul
ss
jo
add
ljmp
lock
mov
mov
cmp
sub
stc
jge
lret
mov
xchg
or
aaa
add
fstpl
adc
pop
dec
add
sub
cmpsl
movsl
push
pop
call
cld
jno
mov
scas
cmpl
pop
xchg
push
sub
or
sbb
out
lock
sahf
dec
bound
stc
jnp
xor
mov
jbe
xor
push
cmp
cmc
das
xchg
in
shl
sarb
mov
sub
mov
inc
mov
push
push
xor
push
sbb
push
das
jne
ret
stos
xor
inc
test
cltd
mov
jge
scas
ret
aad
lea
je
cltd
test
iret
adcb
adc
add
sbb
imul
in
mov
sbb
push
adc
mov
dec
ror
repnz
mov
dec
outsl
fistpll
pushf
js
fwait
and
cwtl
dec
mov
stos
mov
adc
lds
or
cmp
les
jne
jae
loope
mov
jg
jg
stc
fisubs
test
sarl
xor
stc
and
mov
repnz
ljmp
cmp
iret
push
clc
popf
lret
inc
inc
scas
sub
fucompp
cmc
dec
repz
jl
pop
or
iret
icebp
insb
pushf
inc
pop
mov
ret
xchg
scas
add
enter
dec
mov
xor
cltd
inc
jbe
iret
push
ja
pop
lret
nop
sbb
xor
jbe
in
cmp
pop
in
ljmp
lret
inc
push
add
mov
test
push
mov
ja
pop
cmpsl
loope
sbb
in
pop
test
loope
or
ljmp
rcrl
mov
jecxz
fadd
lret
dec
sbb
xchg
or
sbb
or
lahf
lods
dec
int
xchg
dec
sahf
stos
dec
push
stos
xor
xor
dec
cmp
sub
dec
ss
leave
aaa
out
mov
ret
jmp
dec
dec
xchg
ss
inc
cmc
push
and
sbb
jae
mov
movsb
data16
cmp
iret
sbb
dec
in
gs
in
aaa
xchg
ja
adc
mov
mov
xlat
dec
sbb
dec
bound
pop
arpl
adc
push
testl
or
sbb
inc
pushf
lock
in
test
add
lcall
inc
mov
je
movsl
xor
test
mov
inc
mov
mov
call
adc
dec
data16
inc
imul
cmp
xor
insb
ljmp
cmp
mov
mov
cld
ret
jmp
mov
dec
ja
pop
mov
xchg
cmp
sbb
push
iret
xchg
push
adc
insb
pop
outsb
cmp
movsl
cmpsl
jno
push
roll
aad
lds
jge
or
movsl
pop
fimull
je
insb
jno
jb
mov
add
cwtl
movaps
mov
jmp
cmp
or
addr16
imul
mov
mov
jbe
addl
push
lea
outsl
xchg
rcll
xchg
dec
cltd
scas
sbb
sti
xor
inc
sbb
dec
adc
dec
pop
mov
push
ljmp
out
stc
imul
push
insb
aas
mov
cwtl
mov
push
data16
lea
les
aas
lcall
xor
shrl
adc
or
sub
lods
xchg
nop
pop
cmpsw
fs
mov
cltd
imul
into
push
xchg
imul
idiv
stc
ja
lea
popf
xchg
sub
iret
adc
ljmp
sub
out
cmp
mov
adc
insb
push
test
imul
adc
push
mov
imul
imul
xor
adc
gs
cmp
icebp
push
push
push
push
dec
adc
out
in
jp
jno
movl
repnz
jbe
pusha
lcall
lahf
xchg
or
adc
sub
cmp
cmp
dec
pop
pop
xor
shlb
xor
dec
lock
movsl
lret
inc
in
iret
aaa
sarb
rcrb
dec
movsl
sub
int
addr16
pop
adc
ja
cmp
ja
mov
jmp
bound
shlb
pop
pop
cmp
call
cmpsb
rcll
sbb
popf
dec
lods
mov
cmc
popf
lret
lods
mov
test
lds
sbb
pop
vcomiss
cmp
stc
sub
lcall
ljmp
lock
lock
lock
in
fadd
mov
cmp
push
mov
push
std
jnp
int
xchg
mov
js
test
or
inc
pop
aaa
xor
stos
das
push
int
dec
test
cmp
xchg
repz
cmp
enter
jecxz
test
mov
leave
insl
jae
je
mov
xchg
xchg
lcall
or
fdivrp
pop
stos
outsb
jo,pt
sub
bound
cs
pop
pop
iret
stos
push
aaa
scas
shlb
sub
push
or
or
mov
mov
int
xchg
add
mov
sub
sbb
xchg
stc
std
or
inc
cmp
cmpsb
dec
movsb
or
out
int
xor
and
ss
ret
dec
clc
lret
mov
xor
or
or
in
insb
test
and
pop
xchg
outsl
xchg
push
iret
stc
mov
xor
stc
lret
or
je
insb
xor
cmp
xchg
add
popa
mov
sti
fstpl
stos
fnstcw
and
xor
mov
sub
subl
and
inc
sahf
lahf
leave
cld
shll
mov
xchg
fwait
jb
mov
cmp
or
sbb
inc
imul
sbb
sbb
cltd
gs
scas
rclb
lahf
dec
xor
addr16
xchg
jno
popf
cmp
push
xlat
jo
pop
jnp
and
insb
jae
in
ss
shl
jg
dec
sbbl
xorb
pop
dec
mov
aaa
add
inc
xchg
xchg
sub
sbb
out
test
inc
movsl
popf
or
add
or
xchg
je
adc
test
pop
sbb
icebp
cmp
inc
pop
fld
mov
mov
shrb
scas
jnp
jno
sbb
push
xor
movsl
pushf
popa
xchg
sbb
mov
xor
xchg
pop
sbb
xorl
xchg
fwait
lods
xchg
mov
mov
mov
xchg
pushf
sahf
cmc
cmp
shlb
inc
rcr
out
sbb
sub
jmp
mov
stc
ret
push
out
xchg
add
or
dec
je
aam
mov
dec
add
dec
lret
mov
push
and
cmp
outsb
mov
cmp
push
test
fs
pop
adc
dec
cmp
inc
les
aam
ret
jnp
lock
test
test
jo
xor
into
shll
adc
outsb
mov
sbb
push
scas
mov
push
cmp
mov
sub
xor
dec
shl
mov
xor
bound
pop
push
sub
mov
test
jae
test
fld
mov
dec
jmp
mov
dec
ss
clc
movsl
mov
lea
mov
mov
xor
gs
pop
lcall
mov
dec
lock
dec
bound
pop
mov
sbb
sbb
iret
popa
repz
dec
jmp
into
pop
mov
popa
das
dec
adc
test
xchg
movsl
ret
imul
cmp
and
pop
push
ss
add
xor
push
inc
dec
in
push
ja
dec
mov
mov
push
idiv
jl
mov
stos
dec
cmp
sub
clc
xor
add
mov
pop
punpcklbw
ficoml
jecxz
ja
mov
cmp
pop
and
scas
movsl
movsl
in
jno
mov
mov
mov
sub
icebp
pmuludq
adc
dec
imull
mov
gs
pop
rolb
pop
adc
movsb
bound
gs
inc
pop
xchg
mov
stc
fsts
lods
call
mov
scas
addb
inc
das
jne
mov
adc
jle
jno
and
xchg
fimuls
movsl
dec
sbb
test
xor
outsb
sbbl
sub
cld
mov
daa
dec
shl
jecxz
out
shll
repnz
iret
pop
jne
enter
mov
popf
dec
mov
or
imul
pop
adc
xor
outsl
and
pop
dec
sub
mov
xor
pop
xor
or
lds
movsl
adc
iret
pop
adc
scas
scas
imul
push
rorb
xor
imul
daa
adc
pop
int3
ficompl
adc
fldcw
push
test
movsb
notl
sbb
cwtl
daa
cmp
xchg
mov
mov
xor
cmpsl
mov
sarl
test
xor
leave
out
push
mov
sarl
pop
cmpsl
push
adc
jo
aaa
mov
movsl
jno
pop
sbb
bound
xor
xchg
popf
mov
stc
cli
cmpb
arpl
push
push
xlat
scas
ja
iret
mov
jnp,pt
or
bnd
sbb
jae
aad
and
imul
imul
cmp
inc
into
ljmp
jno
and
neg
insb
mov
inc
xor
jp
cmp
rcrb
imul
fs
call
or
lea
int
ss
xchg
lea
lret
mov
xchg
push
je
cltd
sbb
mov
aad
sub
imul
xor
cmp
or
cmp
loop
jns
cli
dec
repz
inc
outsb
jne
pop
mov
and
mov
adcl
pop
dec
ds
jns
or
imul
stc
popa
arpl
testl
rcl
test
xchg
popf
mov
jge
mov
popa
add
sbb
adcl
fistl
jb
aaa
xor
ss
ss
xor
xor
pop
adc
sub
mov
xor
and
stc
adc
fs
xchg
mov
push
into
stos
jecxz
dec
adc
sbb
shlb
mov
inc
jo
adc
cmp
enter
subb
mov
mov
scas
mov
into
mov
mov
rcll
mov
adc
arpl
jo
xor
fsubl
ds
xor
icebp
mov
dec
bound
dec
xor
push
or
mov
data16
jno
lock
pushf
cmp
popf
push
inc
out
adc
mov
test
sub
cmpsl
int3
sub
pushf
popf
mov
scas
dec
pop
call
push
idivl
lcall
ret
icebp
fidivrl
lea
pop
mov
adc
adc
xor
sbb
xchg
fstpl
ss
and
addr16
xchg
in
call
iret
das
int3
jg
test
adc
fwait
stos
popf
lods
loopne
stos
arpl
test
mov
aad
add
push
xchg
push
test
jae
addr16
je
js
addr16
popa
in
out
cmp
repnz
daa
out
pop
iret
pop
jns
loopne
pop
mov
xor
cmp
out
push
insl
xor
sub
lret
push
shlb
jl
mov
cmp
sub
mov
arpl
fbstp
fwait
inc
lcall
fstpl
cmp
inc
leave
mov
mov
push
sub
rcrb
je
inc
cwtl
cmpsl
and
xadd
xor
pop
fstpl
jge
mov
sbbl
ljmp
push
or
mov
push
add
push
add
stc
jl
jecxz
call
fdivrs
hlt
cmp
xchg
test
popf
sbb
sub
mov
xor
into
or
ja
jecxz
std
jmp
jns
imul
and
je
or
insb
insl
mov
jno
pushf
jp
mov
cmp
push
jns
leave
subl
loop
mov
sbb
loop
jno
fwait
sub
mov
sbb
adc
test
testb
jl
movsb
pop
pop
xor
scas
lea
into
pop
cmpb
loope
push
cltd
jg
aas
orb
cmp
jns
jle
imul
inc
cmp
dec
sbb
xor
popa
jge
push
mov
cmp
int
xor
clc
jmp
lret
xor
pop
sbb
outsb
mov
inc
jbe
int
or
jp
shrb
fmull
dec
jp
out
scas
sbb
push
xchg
int
sbb
mov
lea
mov
ja
pop
jo
mov
dec
lock
cmp
mov
and
inc
filds
lea
mov
inc
sub
xchg
mov
and
jne
jle
inc
gs
jno
mov
jmp
xor
dec
or
jno
fsubl
popa
in
sbbl
lahf
addr16
out
iret
mov
push
outsl
sbbb
std
mov
popa
mov
push
xor
jge
js
mov
js
imul
and
fwait
mov
repnz
jg
mov
out
pusha
mov
std
add
ret
and
dec
adc
mov
dec
cmpsb
jnp
movsl
out
jecxz
insb
inc
mov
mov
mov
and
dec
bound
js
repnz
mov
jg
fcoms
insl
xchg
imul
outsl
xor
out
cmp
mov
sti
test
sarb
jae
xor
jecxz
cmp
add
addr16
mov
or
jae
mov
bnd
xchg
call
push
jp
jns
test
sbb
pop
dec
mov
adcl
inc
push
imul
inc
arpl
popf
ds
cmp
mov
insb
push
pop
mov
pop
xchg
insl
cmp
jb
scas
rcl
sbb
sbb
sbb
sub
mov
jg
cmpsb
popa
jp
in
mov
js
push
lods
in
movsb
jnp
fwait
data16
cli
lods
xor
jbe
inc
lods
cmpsb
adc
ss
sub
fidivs
cltd
jae
push
jns
sub
and
sub
pop
xor
or
jb
ret
lret
dec
mov
xchg
mov
test
cmp
xchg
jbe
dec
xor
mov
jmp
xor
add
cld
xor
sbb
push
mov
out
mov
pop
push
mov
pop
mov
decb
iret
mov
xor
cmp
mov
sbb
xorl
dec
jnp
cmpsb
mov
push
dec
fildl
sarl
adc
push
std
imul
fimuls
push
and
repz
leave
mov
jg
lcall
mov
sti
add
mov
shll
ljmp
sub
fs
ds
adcl
loop
push
rol
lahf
dec
jge
dec
scas
mov
jno
int3
repz
fs
fisubrl
outsl
mov
mov
adc
test
ficompl
add
dec
xor
outsl
inc
or
add
mov
fucomip
or
and
adc
inc
cmp
adc
jno
movsb
imul
or
pop
jno
clc
jmp
pop
pop
or
sbb
cmp
outsb
dec
repz
stc
xor
test
jp
fnstsw
xchg
xor
jae
into
inc
dec
ljmp
mov
das
cmp
sbb
or
xchg
cmp
add
jb
adc
mov
jns
mov
dec
int
gs
pop
js
inc
nop
rcl
int
xchg
gs
pop
scas
jns
cltd
movsl
xor
mov
hlt
mov
inc
and
inc
xchg
fidivrl
push
jno
mov
out
out
ret
or
cltd
enter
into
fdivl
ds
dec
call
or
dec
dec
cltd
imulb
xchg
jno
adc
test
jbe
inc
in
cld
xorl
imul
test
xchg
gs
es
inc
mov
xchg
mov
mov
cmp
mov
or
cmp
loopne
roll
outsb
add
cmp
cmp
jle
jns
push
jbe
pop
dec
out
cmp
jns
jns
test
jae
xor
aam
push
arpl
movsb
es
mov
test
add
sub
scas
pushf
ret
mov
jo
aaa
xor
add
xor
jne
cmp
cmp
xor
and
add
jle
lcall
sti
mov
in
cs
lcall
pop
hlt
in
xchg
int
pop
shlb
call
mov
mov
testl
data16
pop
xchg
lahf
minps
insl
loope
pmulhw
mov
xor
jl
dec
test
cmpsb
jno
popf
popl
cmpsl
inc
jl
cmpsb
fucom
xchg
cmp
cmp
out
mov
fstp
xor
ret
fsubrs
pusha
cmp
lea
ja
and
aad
out
mov
or
jne
jnp
mov
jl
fists
mov
mov
jno
int3
daa
adc
jmp
outsb
stos
jno
cmp
pop
xchg
sbbl
test
or
adc
icebp
mov
icebp
leave
loope
dec
clc
stc
mov
mov
sbb
sub
mov
push
cmp
loopne
icebp
int
jno
ret
dec
gs
or
js
rorl
pop
icebp
jno
sbb
jmp
sbb
pop
ja
jg
icebp
adc
ret
ret
inc
rcr
out
adc
out
push
xor
mov
inc
pop
test
into
addr16
xchg
fildll
push
js
sub
mov
shll
stos
lahf
adc
cmp
ljmp
stos
mov
inc
cmp
aad
sub
outsl
lock
bnd
je
stos
test
sub
orb
repnz
pop
inc
and
xor
xchg
sub
jae
or
stc
outsb
outsl
clc
mov
inc
push
repnz
cmp
pop
stc
add
popa
jle
mov
dec
rcrl
add
mov
nop
mov
insb
cmp
cmp
inc
int
popf
jne
lods
test
push
cmp
adc
cli
negl
mov
cmp
jl
jae
cmp
into
js
adc
push
and
pop
cli
lea
jle
lret
jle
xor
xchg
dec
mov
mov
cld
push
into
dec
faddl
jmp
pop
lea
test
cmp
or
jo
lea
dec
lea
dec
mov
ljmp
sbb
shl
popa
sbb
cmp
je
popa
test
imul
inc
mov
aas
add
shlb
lods
push
les
cli
push
xor
fs
push
inc
lds
sti
test
add
and
sbbb
mov
xor
adc
adc
rcll
mov
test
add
sbb
xor
aam
shrl
mov
fs
lds
aaa
pop
das
fimuls
sub
bts
push
loope
call
loope
loopne
inc
xchg
loope
inc
add
sar
and
dec
dec
cmp
push
dec
fstpl
lock
mov
cmp
mov
aaa
xchg
xor
sub
out
mov
jb
adc
xor
xor
mov
dec
lret
popf
sbbb
mov
cmp
clc
jge
frstor
insb
mov
push
and
test
out
gs
adc
pushf
mov
add
pop
cmp
call
or
sub
mul
dec
mov
sub
add
aas
lea
jle
and
mov
test
add
addr16
sub
andl
and
sarb
cmp
outsl
movsl
sahf
adc
add
xor
imul
push
cltd
jns
cmp
test
push
popa
xchg
cld
and
mov
insb
mov
insl
sbb
ret
pop
mov
xor
or
inc
jno
mov
icebp
inc
xor
rorb
adc
insb
repz
pop
and
mov
and
fwait
es
inc
in
popa
add
cmpsl
jno
xchg
mov
popf
add
sbb
pop
std
mov
in
test
mov
pop
cli
xor
pop
dec
xor
enter
mov
ds
cmp
data16
fnsave
imul
es
xchg
push
and
ljmp
fidivl
test
pop
call
rolb
adc
lea
lea
popa
lods
lea
cltd
push
aam
mov
pusha
mov
loop
out
pop
mov
dec
leave
and
push
mov
inc
outsb
xor
pop
inc
popa
lock
repz
sub
out
stos
mov
pop
pop
jb
and
orl
push
rorl
xchg
cmpl
loope
jge
cld
cld
and
nop
sbb
addr16
push
adc
xor
mov
cmp
adc
inc
int
dec
js
mov
cmpsb
cmp
dec
popf
outsl
xchg
dec
cmpsl
cs
xchg
aaa
sbb
xor
mov
mov
adc
imul
iret
in
addr16
insb
pop
or
jnp
jno
decl
jno
xorb
and
cmc
xchg
imul
lea
divb
push
xchg
xor
xchg
js
mov
cs
mov
xchg
xor
sbb
and
test
xchg
movsl
leave
add
mov
in
jp
stc
sbb
push
sub
orb
pusha
jb
push
mov
pop
push
aad
dec
adc
dec
js,pt
stos
mov
movsl
mov
pushf
mov
leave
pop
jle
jge
stc
test
cmpsl
xlat
jb
fiaddl
leave
add
or
sti
inc
fisttps
lcall
push
push
mov
leave
cwtl
sbbb
jns
cwtl
mov
cwtl
sbbl
pop
sbb
mov
fidivrl
xor
insb
lea
xchg
arpl
dec
inc
jp
lods
nop
mov
xchg
inc
lret
jno
iret
call
mov
mov
sub
push
inc
pop
mov
inc
pop
lret
enter
js
and
imul
xchg
jbe
scas
jecxz
lds
jno
cmp
dec
add
jnp
add
loopne
inc
mov
xchg
dec
inc
adc
repnz
dec
xor
sbb
pop
dec
sbb
sub
insl
and
pop
cmpb
adc
test
icebp
test
enter
daa
in
loopne
ja
lock
pop
outsl
pushf
adc
mov
mov
jns
cmp
adc
jbe
fldenv
idivl
push
push
sahf
adc
and
sbb
jmp
mov
orl
ss
sbb
std
mov
jbe
mov
cmp
divl
fistpll
xor
addl
cmp
add
cmp
imul
adc
inc
jne
mov
sbb
idivb
ss
mov
mov
mov
jmp
orl
mov
push
cmp
jp
pop
xor
mov
scas
or
ss
jo
jbe
shll
andl
cmp
xor
cmp
cmpsb
xchg
sbb
lock
push
push
or
jns
loopne
pop
ficomps
jno
sbb
inc
add
xlat
mov
in
adc
fst
lds
ds
lret
adc
lods
enter
pop
cmp
dec
xor
leave
mov
mov
subl
test
jno
lock
cwtl
stos
mov
jae
or
mov
inc
mov
popf
or
int
aaa
insl
bound
cmp
jns
pop
int
es
mov
js
mov
cmp
jb
std
cmp
les
jb
fisttpl
pop
inc
fidivrl
lea
sub
push
insb
mov
jmp
push
fstl
push
insl
mov
push
pop
xchg
xor
mov
adc
call
push
dec
jne
aam
pop
mov
mov
pop
shl
test
mov
and
push
outsb
sbb
inc
ljmp
inc
pop
mov
jnp
mov
addr16
nop
repz
mov
push
sbb
mov
cmp
or
aaa
push
repz
xor
inc
mov
call
imul
pushf
cld
fidivl
jno
mov
je
mov
or
push
add
subl
flds
call
xchg
jmp
cmp
into
or
push
sub
enter
mov
jle
add
lcall
inc
popf
or
lahf
cmp
in
mov
subb
int3
clc
dec
pop
adc
mov
dec
jbe
icebp
hlt
scas
cmp
inc
repz
sub
inc
lods
test
gs
pop
jge
lret
push
sub
xor
orl
sub
jb
adc
testl
fwait
rol
icebp
jl
icebp
mov
addb
mov
stos
sti
jbe
jbe
aas
adc
jae
imul
mov
sti
or
fcmovnbe
xchg
cmc
fs
push
push
fs
inc
mov
push
push
test
ljmp
xchg
sub
push
cmpb
mov
mov
mov
mov
jge
xchg
leave
dec
adc
int
mov
jp
jnp
mov
sub
bnd
inc
cmc
mov
out
xchg
out
bound
data16
cmp
jge
jp
mov
mov
mov
push
mov
cltd
inc
xor
cmp
notl
ficompl
inc
fs
pop
shrb
inc
lret
lds
sbb
xlat
xor
jge
jp
imul
adc
mulb
mov
rorb
pop
or
rcrb
or
push
dec
repz
rol
dec
mov
out
lds
add
sti
jb
pop
mov
dec
or
cmp
popa
iret
popa
aas
sbb
out
and
pop
imul
mov
call
cmp
pop
repnz
jo
cmpsb
push
inc
lret
ljmp
mov
clts
and
mov
inc
jno
out
rorb
notb
movsl
sub
and
xchg
and
les
int3
cltd
cmp
or
jae
stc
ljmp
test
or
cmp
popf
jae
add
test
mov
cmpb
fimuls
mov
inc
clc
xchg
clc
lods
mov
pop
xchg
mov
add
sbb
pop
pop
cmpsb
inc
xor
xchg
push
in
orb
addl
dec
ds
cmc
adcl
jp
fwait
add
in
test
sub
inc
mov
pop
mov
jnp
ds
lods
test
bound
mov
pop
mov
sub
insb
shll
ja
popf
push
cltd
out
ja
jmp
test
sub
sbb
fwait
arpl
fwait
jle
jo
lea
jecxz
fidivl
fisttpl
lods
loope
lcall
jb
testl
xor
mov
xchg
lock
ljmp
insb
push
xchg
pop
loope
fadd
jl
mov
flds
pop
lods
test
adc
xor
dec
aam
ja
in
xor
mov
mov
xchg
push
cmp
rcrb
push
pop
mov
gs
lea
xor
int3
pop
stos
xchg
or
pusha
popa
cmp
push
insl
mov
pop
arpl
mov
js
subl
imul
scas
mov
test
repz
inc
add
and
jbe
es
divb
or
cmp
jo
or
sub
je
pushf
mov
arpl
int
inc
xor
cmpsl
pop
mov
dec
std
mov
xchg
xchg
mov
insb
pop
test
lret
imul
cmp
imul
push
pop
cmp
mov
arpl
jecxz
mov
gs
push
repnz
sarl
ficoml
xlat
mov
fdivp
jge,pn
jb
or
or
out
ss
roll
jb
je
add
leave
stc
mov
lahf
cmp
dec
add
add
pop
movsb
xchg
add
xorb
xor
int3
jno
mov
lods
dec
mov
insb
mov
nop
popf
pop
loop
xor
jae
lret
shl
pop
pop
std
add
xchg
mov
mov
aaa
mov
jne
xchg
jns
cmp
mov
mov
and
add
push
test
pushf
dec
out
pop
xor
js
push
adc
mov
in
sub
mov
and
insl
jb
mov
fstpt
xor
and
test
loopne
and
cmp
jns
cwtl
pop
aam
xor
call
jae
repnz
leave
imul
mov
pop
adc
out
jle
mov
jbe
inc
add
dec
mov
mov
out
dec
xchg
mov
cli
fstpl
imul
cmp
pop
mov
cmpsb
imulb
mov
jno
clc
push
pop
cmp
xor
dec
cmp
sbb
add
mov
jl
fistps
sbb
vmread
ja
cmp
negl
dec
mov
in
scas
cmp
mov
ds
lds
mov
outsl
pop
rcrl
pusha
mov
leave
adcl
add
je
stos
adc
add
mov
popf
das
insb
mov
movsl
popf
sbb
cwtl
imul
orb
cmp
movsl
mov
fdivrl
into
shrl
pushf
mov
dec
inc
inc
adc
ret
mov
pop
inc
rorb
pop
push
or
sub
jae
gs
dec
cmpsl
shll
imul
cmp
hlt
pop
js
jne
cmp
jb
data16
js
push
daa
imul
movsb
mov
sbb
and
mov
xlat
stc
cmp
push
sbb
cltd
mov
and
sbb
cmp
stos
fdivrl
xchg
dec
xchg
pop
push
mov
mov
xlat
mov
sbb
aas
pop
test
testb
mov
sbb
lods
das
cmpl
aaa
mov
jne
push
jo
and
ficomps
arpl
mov
test
push
pop
scas
cmp
adc
xchg
fmull
daa
push
xchg
xchg
pop
push
xor
aas
jmp
nop
inc
ljmp
jb
fs
shll
or
push
jg
ja
cmp
dec
sbb
negb
imul
insl
push
testl
xchg
imul
gs
test
lret
mov
inc
jp
adc
fcompl
out
or
in
mov
pop
jno
gs
pop
inc
cmp
adc
sub
mov
or
cltd
push
xor
dec
outsl
xchg
xchg
pop
cmp
cmp
mov
in
mov
aas
and
bound
out
out
aam
outsl
adcl
sbb
push
ret
mov
call
cmpsl
movsb
xor
pop
inc
cli
jl
pop
mov
cli
mov
xchg
cmp
leave
push
sbb
scas
or
jg
jns
imul
rcrl
and
dec
bnd
dec
shll
add
pusha
shlb
sar
pop
pop
sar
pusha
xchg
adc
cmp
sub
mov
js
notl
jns
dec
mov
pop
popf
cmp
jnp
push
or
hlt
jle
fstpt
mov
sub
add
loopne
mov
cld
pop
xchg
jo
cmp
mov
ud2
aas
xchg
scas
inc
sub
pop
mov
xor
mov
stos
lret
or
inc
push
iret
rcll
andb
or
daa
cltd
icebp
inc
add
mov
imulb
inc
fwait
insl
pop
sti
outsb
inc
das
sbb
test
clc
loopne
xchg
lods
sbb
mov
sbb
testl
insl
ds
mov
sub
jbe
dec
dec
mov
cmp
in
lret
xor
dec
sbb
call
stc
mov
push
test
hlt
mov
imul
scas
xor
in
fisttps
stc
popa
sbb
sbb
fisttpl
pop
xchg
or
fs
fwait
dec
aaa
jp
popf
and
scas
sbb
xchg
stc
sbb
jb
adc
push
or
or
imul
cli
out
mov
sahf
icebp
pusha
sbb
pop
cmpsb
in
int
adc
loopne
xchg
push
aad
mov
rol
repnz
xchg
lods
add
call
fdivp
gs
jae
das
push
insl
fimull
imul
xor
lods
mov
orl
jo
loopne
out
cmp
ret
and
jne
adc
push
pop
xchg
xor
subb
jg
jbe
and
mov
inc
movb
xor
es
imul
inc
inc
ja
adc
push
cli
sar
jge
push
and
xor
mov
sbb
std
inc
daa
pusha
add
or
sbb
in
scas
jno
inc
jge
daa
incb
pop
push
pop
into
in
stc
jge
mov
mov
xchg
jmp
outsb
mov
int3
mov
orb
push
cmp
xor
jno
test
mov
pop
ret
pop
lret
push
movsl
mov
cmp
inc
or
rcrb
andl
shll
mov
gs
clc
sbb
mov
pop
inc
sti
mov
inc
ja
xchg
imul
cmpsl
mov
test
imul
je
adc
jnp
jno
jmp
jo
or
and
enter
ds
xchg
pushf
lcall
aaa
jge
cmpsb
or
push
dec
or
cmp
popa
ret
dec
fucomi
pushf
mov
jbe
inc
cmp
pop
xchg
cmp
mov
mov
sbb
out
xlat
mov
mov
jns
push
repz
fnstenv
pop
and
pop
pop
loop
mov
mov
dec
mov
popf
jp
sub
xchg
cli
inc
int
and
push
scas
sbbl
jmp
outsb
cmp
push
fwait
mov
adc
shlb
insb
ret
or
mov
out
cmp
sub
mov
add
and
pop
cmp
outsb
fwait
push
ror
dec
dec
pop
mov
shll
sub
pop
test
sbb
arpl
cmpsb
sbb
jns
xorb
ret
loope
mov
cmp
scas
lea
int
fmull
add
inc
sub
pop
decl
mov
pop
int
pusha
movsl
xchg
pop
dec
dec
inc
mov
xchg
sar
xor
mov
cwtl
xchg
jae
pop
or
mov
sub
mov
cs
and
stc
xor
xor
insb
push
mov
sarb
xor
fcoms
cltd
jns
mov
dec
test
jl
shll
sbb
rcrb
movsl
dec
xor
adc
stc
pop
in
push
pop
inc
cmp
rcrl
xchg
cli
cltd
jnp
js
jp
sub
sbb
cmp
loopne
loop
adc
lods
push
inc
cs
adc
pushf
stos
loop
cmp
xor
lds
int3
inc
mov
push
xor
jo
mov
clc
repnz
addl
jnp
sub
dec
das
addr16
dec
or
dec
mov
and
ss
imul
adc
jge
xchg
or
orl
push
int
sbb
dec
faddl
fwait
jns
or
add
in
lret
call
mov
jns
prefetchw
pop
int3
pushl
out
jne
ja
enter
enter
mov
and
push
add
int
popf
xor
repz
addr16
je
pop
xchg
orl
push
pop
adc
sbb
stos
loope
adc
lcall
xchg
xchg
fistpll
nop
hlt
cmp
mov
mov
fwait
or
ds
add
es
dec
cmp
movsl
shrl
pop
adc
pop
dec
mov
jo
imul
scas
mov
adc
mov
stc
add
stos
and
sbb
cmp
stc
inc
cmpsb
jns
in
lret
push
xorb
lods
or
mov
pop
scas
push
out
push
and
and
jo
mov
jg
imul
jns
pop
dec
out
nop
mov
dec
pop
out
sarb
stos
pusha
mov
mov
dec
shrb
push
jno
or
inc
dec
jle
adc
jle
xchg
jae
add
test
xchg
cmp
xor
jno
inc
mov
stos
xor
or
mov
push
ja
mov
cmc
dec
push
mov
push
and
adc
loop
cmpsb
push
jbe
pop
adc
test
jns
aam
ja
repnz
scas
mov
mov
mov
mov
jno
mov
cmc
xor
jae
mov
aam
popf
in
dec
push
jge
dec
scas
sbb
fistpl
shrb
sbb
jne
das
int
pushl
mov
dec
mov
out
subb
popf
jmpw
ss
adc
pop
dec
test
call
repnz
ret
mov
testl
fldenv
pop
aad
lret
mov
adc
sbb
push
icebp
mov
rorb
cs
loope
adc
push
jmp
add
lcall
int
jmp
shl
dec
bound
xor
pop
pop
adc
imul
pop
xchg
loope
cmp
stos
andl
mov
or
or
lods
or
mov
lods
mov
in
stos
mov
insb
ss
dec
jbe
outsl
or
push
idivl
rcrb
dec
out
pop
cwtl
js
lea
dec
or
jle
lret
xchg
rcrl
mov
adc
sbb
cmpsb
repnz
jp
sti
cmp
ds
pop
xor
lahf
jge
mov
movb
shlb
icebp
repnz
mov
imul
mov
inc
xchg
mov
inc
das
pop
std
addb
pop
orl
adc
push
inc
or
and
jnp
fldlg2
daa
push
int3
notb
or
jle
mov
loopne
fdivrs
sti
aaa
and
scas
pop
shrl
jbe
test
sti
xor
sbb
pop
mov
int
arpl
sar
shll
lret
inc
jbe
push
or
cli
imulb
pop
adc
subb
mov
or
push
mov
stos
into
jbe
loop
jns
dec
mov
inc
xlat
xor
popf
cmpsb
push
lock
test
jge
dec
mov
fs
jbe
in
add
mov
aad
cli
inc
mov
pusha
test
and
into
dec
hlt
xor
sbb
icebp
add
out
cmp
out
movsl
push
call
adc
cmp
stos
pop
mov
jbe
cmp
dec
js
xchg
lock
movsb
sti
and
or
repnz
test
outsl
cmp
lcall
jge
lods
push
aaa
loop
mov
or
sti
mov
jle
inc
pop
or
or
insb
test
cmpsb
fnstcw
mov
lods
pop
and
inc
mov
dec
fcmovnb
cmpsb
mov
pop
xor
xor
xor
add
xor
testl
ret
aaa
cltd
jno
or
xchg
test
dec
cmp
jbe
test
inc
or
jbe
fwait
pop
cmp
ljmp
fisttpl
icebp
jae
sarl
push
cmpsb
push
rcrb
das
inc
nop
jnp
cmp
and
mov
addr16
push
popf
and
cmp
cmp
or
jp
jge
in
lret
mov
dec
data16
lret
ds
or
mov
xor
inc
adc
jno
xor
mov
inc
sub
pop
mov
xchg
sbb
mov
lods
gs
pop
push
stos
mov
pop
scas
gs
adc
inc
dec
iret
add
sbb
jg
add
mov
imul
lock
cwtl
pop
xchg
or
cs
xchg
and
inc
mov
sti
movsl
mov
xchg
mov
rolb
mov
hlt
xor
ficoml
mov
fcomps
es
popf
mov
insl
pop
push
je
inc
lahf
cmp
sub
mov
jl
fcomip
add
mov
jne
movl
imul
movl
aas
sti
cmp
mov
dec
mov
sti
mov
pushf
test
jp
scas
out
jg
inc
jle
pop
adc
hlt
xchg
pop
dec
aam
mov
stos
inc
mov
cmp
cmp
xor
repnz
popf
int3
insb
iret
mov
mov
adc
xlat
xchg
xor
mov
ret
enter
mov
or
sarl
mov
mov
inc
or
pop
sbb
inc
jle
mov
mov
xor
pop
movsb
enter
out
jl
adc
add
insb
test
dec
pavgw
cmp
inc
dec
mov
addr16
into
fstpt
adc
pop
push
jae
mov
push
rolb
pusha
xchg
inc
mov
jmp
aam
scas
pop
push
sub
jns
bound
clc
xor
or
cmp
sti
jecxz
cmp
nop
xor
ja
addl
xchg
addl
aas
cmp
out
mov
mov
push
ss
sbb
cltd
or
aas
inc
sbb
stos
push
sbb
imul
xchg
cmp
sti
adc
aas
mov
aas
rcr
inc
int
push
dec
xor
stc
stos
dec
jl
nop
fstpl
pusha
xchg
rcl
jecxz
or
ja
mov
cltd
addr16
sub
mov
xchg
sbb
jnp
mov
xchg
clc
les
jns
lret
and
lods
test
cmp
sbb
rcll
sbb
push
pushf
jno
je
dec
and
mov
pop
lods
fisubl
in
iret
test
outsl
xor
ds
repz
orb
xchg
mov
mov
cli
shll
test
inc
mov
mov
push
add
mov
mov
adcl
out
mov
sbb
dec
and
mov
dec
cmpsb
cmp
jge
adc
jge
xor
in
dec
dec
pop
repnz
adc
lret
fsubs
js
pop
push
pop
adc
push
mov
daa
popf
loopne
sahf
push
insb
sbb
jne
push
mov
dec
push
dec
xor
push
and
mov
inc
push
mov
lods
xchg
loop
and
test
xor
and
in
movsb
mov
jne
aaa
jg
adc
imul
insb
pop
cmp
push
ret
es
adc
test
dec
xor
mov
lea
mov
jns
pop
ja
imul
inc
dec
cmpsl
es
outsb
jg
sbb
cmp
sbb
int
test
and
adc
call
cld
xchg
push
xor
push
xchg
dec
gs
mov
mov
jge
mov
lods
fldl
jnp
fstpl
mov
mull
jb
sbb
inc
jecxz
or
mov
jnp
push
gs
mov
cmp
call
insb
sbb
in
pusha
xchg
and
dec
icebp
bound
in
mov
pop
addr16
out
and
inc
xlat
xchg
sar
push
mov
data16
xchg
jb
cmp
xor
inc
in
popa
rorl
jp
fbstp
sub
fnstenv
cmp
imul
xor
mov
cmpsb
fwait
pushf
cmp
dec
movntps
xchg
aaa
jle
pop
push
scas
adc
xor
xchg
push
sub
dec
pop
jnp
sbb
xchg
mov
push
adc
out
push
inc
mov
lret
adc
fisttpl
push
mov
nop
mov
jbe
roll
daa
push
push
adc
inc
jb
cmp
cmp
pushf
orb
mov
and
repz
cmpsb
lcall
push
dec
and
sub
and
push
int
sub
sub
cltd
lods
adc
fsubrl
cmp
mov
or
mov
dec
imul
imul
lds
ja
xor
jmp
mov
popf
inc
mov
test
xchg
cmp
ja
cmp
push
stos
jne
loopne
cmpl
cmp
inc
xor
imul
xchg
xor
jns
popf
sub
mov
lds
pop
sbb
mov
ja
imul
loope
shrl
mov
cmp
loop
mov
inc
icebp
mov
aad
loope
fnsave
fistpl
orl
jns
or
stc
mov
mov
xor
in
sub
fimull
lea
jne
push
sub
and
or
jle
mov
sarb
mov
pop
mov
mov
xchg
mov
mov
pop
repnz
hlt
xor
xchg
fdivrl
popf
shr
ret
mov
cmp
lods
jo
pop
dec
les
sub
cmpsl
rolb
mov
stos
addr16
push
repnz
int3
cs
sub
or
inc
out
sti
insl
and
add
lcall
inc
cmovb
popa
dec
or
out
imul
jno
aad
mov
pop
mov
mov
mov
sub
incb
push
and
sub
inc
popl
lret
mov
popf
jg
and
adc
cltd
imul
rcll
add
pop
jno
sbb
jmp
pop
pop
push
lea
jecxz
dec
jnp
xlat
mov
divb
xchg
cmp
arpl
mov
cmp
push
das
push
push
movsl
push
push
push
dec
inc
arpl
xchg
mov
ss
jmp
xor
adc
mov
jns
aad
lds
push
lea
int
cmp
pop
cmpsb
cmp
sbb
shll
adcl
dec
sbb
imul
mov
adc
idivb
cmpsb
adc
bound
adc
fiadds
ljmp
and
pop
pop
adc
test
push
lea
pop
adc
sahf
stos
test
push
aas
jg
enter
sub
lret
iret
xor
sub
daa
stc
mov
sbb
mov
jae
sbb
jno
and
xchg
lds
jo
ds
ret
outsb
cmp
xor
mov
bound
sti
loopne
dec
ret
add
test
int3
adc
add
jno
leave
leave
mov
outsl
dec
cmp
push
mov
fidivs
cmp
mov
pop
mov
fbstp
or
jb
lcall
test
fwait
bound
loopne
sub
ficoms
push
jl
scas
dec
mov
ja
fsubl
mov
xchg
enter
testb
sub
cmp
test
lret
inc
lret
dec
push
test
mov
xchg
ss
cmp
imul
int
pop
lret
scas
pop
dec
adcl
push
fwait
pushl
loope
icebp
aas
mov
mov
inc
push
or
dec
mov
jnp
bound
cltd
jne
push
dec
dec
cmp
aaa
addr16
cmp
scas
mov
xchg
xor
cmp
lods
stc
sbb
inc
pop
cltd
push
inc
addr16
test
fcoml
cltd
xor
shlb
jnp
aaa
fucom
push
jno
into
xor
dec
jl
xchg
sbb
leave
mov
out
cmp
pop
imul
cmp
jge
lods
das
aam
xchg
daa
and
cmp
cltd
pop
push
pusha
push
mov
imul
mov
mov
cmp
push
jnp
mov
mov
imul
mov
xlat
mov
xor
cmpsl
cmp
ret
decl
pop
or
mov
dec
dec
lea
jno
and
push
je
mov
fldenv
repz
pop
notb
scas
jl
inc
repz
ret
sbb
pop
je
lret
push
mov
cli
in
pop
jbe
xor
test
cmpsl
scas
add
inc
mov
mov
insl
daa
mov
call
imul
adcl
inc
mov
jmp
xor
iret
xor
jp
and
jle
push
mov
mov
mov
push
jmp
cltd
aad
fwait
daa
add
ret
push
dec
idivb
jmp
out
xchg
add
sub
mov
fmull
jl
stc
sub
test
adc
dec
jb
ja
mov
push
sub
mov
call
leave
pusha
mov
and
imul
ss
lods
int3
movsb
pop
cmp
mov
sub
mov
inc
int
std
sbb
sub
movsb
xor
pusha
cmpsl
sarl
ds
push
jge
lods
xchg
stos
ja
cmp
jo
pushf
outsb
gs
imul
mov
xor
mov
pop
scas
mov
dec
mov
lret
lcall
jp
mov
cmp
cld
sub
jb
cmp
xor
cs
sub
cwtl
or
add
ficoml
push
or
fwait
sbbb
test
dec
bound
in
jge
pop
sbb
fisubrs
mov
dec
mov
add
adc
insb
lods
mov
or
out
mov
stos
push
cmp
scas
sti
lret
sub
pop
fisubl
gs
inc
push
cld
push
test
inc
mov
push
aas
hlt
dec
or
lock
xor
cmp
mov
pusha
inc
cmp
popf
xchg
jnp
mov
cmp
add
aaa
cmp
jle
gs
sub
ret
andl
push
mov
and
push
xadd
jno
out
imul
adc
cmp
orl
mov
push
lock
jp
or
sub
sub
mov
jb
lods
leave
rorb
lock
pop
or
adc
jno
mov
xor
xor
mov
movsl
and
and
jmp
out
outsl
push
cmpsl
loop
call
xchg
mov
mov
adc
dec
test
es
jne
int3
test
pushf
push
pop
adc
bound
adc
mov
sub
out
outsb
cmp
jecxz
test
out
mov
repnz
sbb
dec
jno
sbbl
pusha
scas
fstpl
arpl
pushf
idiv
jno
inc
mull
clc
mov
mov
adc
loopne
ret
repz
in
push
stc
adc
push
xor
clc
popa
push
inc
cmpsb
sbb
push
repz
jmp
jbe
addr16
xchg
mov
cmc
push
mov
jmp
out
mov
arpl
jl
push
outsb
stc
adc
cmpsl
repz
cmp
rorb
fs
arpl
inc
sbb
adc
xor
repnz
outsb
divl
push
popf
xchg
cmp
stc
int3
pop
xchg
int
fstps
sub
dec
cld
sbb
and
cld
ljmp
mov
inc
in
mov
or
xor
jl
inc
push
push
daa
mov
xor
inc
push
jbe
movsl
xor
jge
cli
and
ja
cmp
or
js
lods
cmp
and
adc
aas
inc
out
mov
js
shll
pop
popf
arpl
xchg
popf
push
push
js
mov
ret
mov
pop
ss
jle
sbb
cmp
adc
mov
ljmp
fucomp
test
ss
cmp
dec
jns
test
daa
ljmp
ljmp
mov
movsl
call
jns
in
pop
call
jno
clc
addl
inc
add
das
push
or
inc
mov
test
inc
jb
cli
insl
aaa
xchg
mov
dec
iret
pop
subb
or
pop
mov
adc
cli
sub
mov
push
cmp
mov
mov
mov
mov
cli
cmpl
in
pop
lea
pop
imul
popa
aaa
data16
out
je
sahf
shll
xor
and
dec
rol
scas
popf
xor
lock
outsl
scas
shlb
mov
sbb
pop
aam
scas
inc
clc
mov
into
sub
push
pop
icebp
xchg
pop
xchg
jle
scas
imul
cld
cmp
xor
imul
rclb
sahf
jne
arpl
inc
jno
pop
arpl
pop
sbb
repnz
or
jl
dec
jp
cmpsl
pop
inc
dec
or
jb
sarl
dec
lds
daa
push
sbb
js
lret
out
xor
push
aam
ja
in
mov
pop
push
or
fwait
iret
jbe
xor
es
stos
cmp
or
jle
xchg
and
je
shrl
mov
sub
jbe
adc
dec
jno
mov
cmp
push
rorb
mov
sbb
or
leave
scas
test
ja
stc
imul
sbb
movsw
rolb
sti
dec
aaa
test
sarb
jbe
imul
pop
loopne
pop
dec
push
aaa
scas
push
sub
sti
xor
fmul
out
jle
mov
adc
inc
dec
inc
sbb
mov
and
sbb
cli
mov
mov
test
pop
inc
or
mov
int3
sti
dec
adc
fcoms
inc
cmp
inc
sarb
test
pushl
popa
inc
dec
mov
repz
push
iret
inc
or
push
pop
daa
ss
stos
data16
call
sbbb
iret
mov
push
push
xchg
adc
sub
push
mov
lea
test
fwait
test
push
dec
add
or
shrl
fildl
pop
cmp
xchg
or
adc
mov
inc
lea
push
inc
adc
jne
cmp
int3
bound
insb
xor
pusha
inc
jns
arpl
dec
bound
dec
cmp
dec
imul
aad
xchg
xor
push
add
nop
scas
mov
pop
fstpt
lahf
lods
mov
rorb
push
pop
jmp
lret
gs
push
pusha
int3
xlat
cmp
mov
xchg
inc
mov
add
js
cmpsb
inc
jnp
cmp
cmp
jns
aas
cs
sarl
pop
pushf
jno
popf
xchg
inc
mov
cmp
in
or
mov
xor
mov
dec
push
push
jg
jns
imul
mov
sub
stc
mov
daa
and
add
xor
lds
sbbb
or
adc
mov
adcb
lahf
in
mov
mov
inc
sbb
or
test
gs
jl
and
sbb
and
pop
mov
psrld
les
popf
pop
call
out
and
dec
sbb
or
scas
repnz
or
mov
and
inc
inc
stc
dec
popf
jp
test
sub
popf
repz
push
inc
mov
adc
dec
addr16
cli
mov
call
movsb
push
pop
into
xchg
dec
push
or
xor
ret
call
xchg
sub
adc
mov
subl
addl
sbb
pop
mov
mov
loopne
sub
jno
xor
leave
cmp
push
je
arpl
cltd
mov
inc
lds
aam
mov
mov
or
icebp
pusha
jns
push
aad
cmp
je
add
ja
insb
rorl
popf
mov
loopne
pop
testb
gs
pop
psubsb
and
popf
pop
lock
aad
mov
xchg
jne
push
lods
and
and
aad
mov
ret
out
stc
mov
fisubl
xor
jmp
inc
loope
dec
mov
in
mov
fisttpll
ds
imul
mov
insl
inc
inc
popf
subb
push
fadd
imul
fldt
inc
mov
dec
mov
cmc
or
xchg
adc
ja
subb
cmp
inc
mov
insl
adc
cld
jl
xchg
test
dec
outsl
adc
fcmovnbe
push
lds
pop
insb
aas
jl
cmp
push
cmp
lds
pop
pop
js
or
std
mov
adc
mov
dec
fcmovnu
cltd
or
jae
mov
pop
mulps
das
mov
cmpsb
nop
addr16
leave
pushf
push
jg
in
stc
dec
ja
movsl
cmc
out
sbb
pop
cmc
inc
dec
push
repnz
lds
call
ss
mov
cli
mov
data16
mov
insl
xor
xor
xchg
mov
in
mov
es
push
or
dec
mov
popf
dec
ss
imul
aas
int3
psubusw
stos
add
lret
jmp
and
sub
int3
lods
in
or
cmp
jbe
jb
fildll
mov
aas
or
xor
nop
pop
push
decb
sbb
dec
test
loope
mov
push
sub
adc
jl
lret
jge
xor
mov
pop
mov
jg
jle
repnz
stos
inc
repnz
jno
je
int
ud1
mov
sub
gs
and
xchg
xor
int3
mov
lods
cld
mov
xor
sbb
jno
and
push
xor
adc
leave
dec
loope
xchg
pop
cmp
out
mov
xorl
mov
popf
data16
jne
xchg
xor
gs
xchg
inc
add
mov
leave
in
mov
shll
pop
pop
int
pop
add
call
pop
int
adc
or
jae
xor
mov
in
push
sbb
inc
popf
stc
push
xchg
mov
movsl
xorl
sbb
cmc
arpl
inc
imul
inc
js
cmp
ljmp
push
jmp
xor
cmp
cmp
cmp
stc
js
sub
fdivrs
dec
mov
adc
and
push
xchg
jns
xor
ja
push
inc
jp
aas
inc
ljmp
jns
mov
jl,pt
ja
insl
cmp
stc
push
insl
stos
jl
xchg
dec
jmp
js
std
push
divl
insl
test
sti
cli
and
add
icebp
inc
dec
aaa
mov
fucomip
leave
lds
mov
cmp
cmp
cmp
movsb
pop
popf
push
int3
jb
stos
xorb
adc
jp
jno
aam
mov
lret
pusha
push
xchg
mov
iret
shll
jno
mov
pusha
inc
lods
test
mov
sbb
jl
ja
mov
mov
mov
sbb
pop
pop
mov
int3
jg
cmp
cs
movsl
leave
imul
dec
mov
xor
xor
mov
shll
sbb
pop
fcoms
sbb
pop
push
lcall
mov
out
adc
pop
in
outsl
or
jns
std
add
lds
hlt
mov
push
mov
or
jbe
cvttps2pi
jno
bound
cmp
andb
lock
jbe
clc
test
aas
int
lret
mov
xchg
add
and
stos
mov
and
xchg
daa
sub
in
movsl
rorl
xor
inc
sbb
push
cmp
xchg
ret
cmp
adc
sub
adc
outsl
cmc
orl
cmp
mov
sbb
inc
aas
dec
jno
aad
mov
mov
adcl
or
cmc
je
jns
mov
xor
sbb
imul
call
sbb
pop
jge
push
pop
or
mov
out
in
int
int3
xlat
in
inc
jno
jle
movsl
insl
outsb
mull
aaa
or
out
cs
orb
jge
jle
pop
pop
jae
cmp
sbb
sbb
xor
jb
mov
push
xor
inc
jge
lcall
add
dec
lds
inc
xchg
insl
lret
cmpsl
mov
and
xor
sbb
sbb
jns
aad
insl
pushf
mov
mov
adcl
mov
sub
insl
mov
sbbb
sbb
xchg
cmp
pop
int
adc
xor
cmp
cmp
or
cmpsb
jmp
popf
push
les
sbb
pop
imul
and
sub
adc
scas
dec
out
data16
push
xchg
sahf
cmp
xorl
jge,pt
flds
adc
outsl
pop
adc
jmp
xor
sbb
mov
sbb
mov
sub
pop
inc
sbb
xor
jecxz
mov
adc
dec
mov
or
ret
mov
in
iret
fcmovu
pop
pop
inc
push
icebp
scas
xor
cmp
xor
mov
fxch
insb
in
xchg
dec
jg
sub
daa
test
out
test
mov
fisubl
push
cmp
mov
insl
loop
dec
cmp
mov
jge
jns
jmp
jmp
cltd
push
fstl
push
mov
cmp
adc
cmp
popa
cmp
pop
insl
scas
or
ljmp
enter
in
add
aam
imul
inc
push
je
dec
and
cmp
lret
pop
inc
mov
cli
xchg
outsl
mov
popf
cld
mov
mov
scas
adc
fldenv
cmp
jmp
inc
out
outsl
mov
and
sti
mov
adc
test
and
clc
addr16
or
nop
jns
mov
push
testb
popf
cmp
dec
xor
sbb
jnp
or
dec
pop
dec
je
pop
sub
or
jnp
jae
dec
out
adc
inc
sub
push
cltd
dec
arpl
out
cmpsb
addr16
sbb
sub
xor
cmp
push
dec
xor
push
les
dec
pop
aam
mov
aas
xor
inc
arpl
mov
in
gs
stc
sbb
push
test
pop
xchg
imulb
pop
nop
xchg
pop
or
xchg
je
hlt
push
imul
call
push
out
inc
insl
subl
mov
mov
mov
cmpsl
icebp
icebp
xchg
xor
test
push
fneni(8087
cmp
rol
xor
enter
cmpsb
es
sub
stos
insl
jge
fucompp
gs
pop
mov
in
inc
gs
fcom
jg
and
sbb
cmp
ja
jns
aad
mov
or
mov
sbb
cmp
mov
sub
enter
int3
jmp
test
repnz
bnd
adc
dec
out
jmp
push
imul
pop
lods
mov
dec
add
cs
cmp
mov
mov
dec
imul
fwait
fs
dec
shlb
iret
insl
dec
jns
mov
cltd
pop
jecxz
xor
jae
leave
fstps
cmp
mov
and
subb
das
mov
sahf
mov
inc
in
jl
pop
ja
cmc
pop
movsb
movsb
lods
shl
scas
clc
cmpsl
nop
mov
int3
mov
clc
xor
je
pop
sbbb
xchg
imul
dec
jmp
or
in
lret
sub
cmp
sub
add
jbe
push
iret
dec
cmpsb
xchg
xlat
in
mov
jp
pop
xor
gs
mov
aas
jne
xchg
and
aam
hlt
ret
or
mov
inc
popa
jno
and
sbb
repz
stos
xor
xor
movsw
cmp
xor
inc
test
sti
inc
pop
int3
xchg
sbb
mov
fistpl
push
mov
mov
xor
test
jp
cmpsl
mov
popa
fmuls
sahf
pop
mov
loopne
xchg
jne
dec
jg
or
imul
xor
mov
fdivrp
jl
mov
scas
push
jns
mov
call
xchg
xor
jns
jo
dec
test
cltd
pop
sbb
sahf
ljmp
and
and
pop
lret
mov
iret
dec
pusha
js
sub
jge
rcr
dec
xor
fildl
shl
inc
sbb
pop
je
dec
lahf
mov
test
je
inc
mov
sarl
push
pop
cmp
add
mov
jge
leave
sarl
test
cmp
out
dec
xor
testl
sub
adc
into
std
sbb
stc
cmpsl
sbb
mov
adc
pop
cmpb
ss
jne
sub
stos
lret
outsb
mov
je
pop
imul
dec
outsb
push
pop
adc
mov
lods
and
jae
faddl
jae
pop
push
mov
jnp
lret
shlb
cmp
sbb
mov
push
cmc
pushf
popf
push
jb
xchg
mov
jecxz
jmp
sbb
sbb
scas
xor
mov
scas
adc
arpl
rol
or
dec
je
hlt
push
leave
xor
add
cmpl
stc
pop
sub
cmp
cld
mov
std
xor
or
cld
aam
ljmp
imul
mov
mov
test
call
gs
mov
mov
lahf
pusha
dec
sub
adc
cmp
fmuls
hlt
pop
inc
mov
pop
ljmp
push
pop
and
nop
movsl
adc
adc
lods
xchg
shll
cltd
sub
sbb
xchg
cwtl
xor
outsl
pusha
insb
leave
inc
shll
dec
jne
stos
mov
mov
pop
test
xchg
dec
mov
or
out
pop
data16
cmp
inc
pop
push
nop
sarb
mov
sbb
lret
rclb
dec
aaa
xchg
arpl
lahf
or
push
xor
cli
add
mov
cmc
mov
add
mov
int
sub
jbe
adc
jp
cmp
fs
rcrb
push
ljmp
out
gs
sub
jno
xlat
lret
cmp
pop
lea
pop
ds
mov
add
add
pusha
xor
dec
and
push
out
sarl
dec
outsl
cmpl
dec
pop
or
pop
loope
jmp
xchg
xor
push
xor
in
cmp
lret
mov
out
pop
sbb
push
cmp
cmpsb
inc
movsl
dec
adc
jnp
xchg
xor
lds
xor
arpl
int
jns
push
adc
dec
in
icebp
out
aas
int3
adc
jg
and
cmpsl
push
xor
test
mov
leave
jbe
pop
and
mov
out
mov
xor
loopne
jp
cmp
movsb
mov
insb
adc
or
jne
dec
pop
ret
js
ud1
mov
cmp
aad
xchg
rcl
call
mov
repz
arpl
jnp
and
iret
sub
loop
add
in
mov
enter
mov
fcom
sub
push
jmp
lds
add
lods
or
or
testl
fiaddl
push
test
mov
lds
test
and
push
cltd
sub
aas
imul
jl
aad
in
loopne
dec
mov
add
adc
mov
sbbb
push
and
gs
das
call
mov
add
scas
aas
push
push
push
dec
jge
jb
push
fdivl
enter
mov
or
js
pop
inc
mov
push
ret
mov
or
hlt
mov
aaa
enter
stc
push
fwait
sbb
pop
cmp
aaa
aaa
sbb
inc
inc
dec
mov
sub
shll
jmp
jb
and
sub
cmp
bound
dec
add
int
push
mov
rorl
fwait
gs
ret
or
addb
push
lds
adc
js
cmp
pop
leave
loope
pop
mov
sub
cmp
sub
mov
push
pop
cmp
sub
in
jecxz
jne
and
lcall
or
fiaddl
cmp
mov
adc
sub
incb
push
cmp
adc
sarl
nop
dec
sub
sub
mov
sbb
cmc
xor
push
mov
xchg
repnz
xor
pop
xor
mov
xlat
repnz
jle
inc
inc
sbb
dec
mov
or
xlat
or
add
push
mov
inc
mov
stos
call
jne
sbb
mov
or
popf
arpl
cmp
gs
mov
loop
push
ja
add
repnz
loop
outsb
cmp
or
das
aam
mov
pop
les
mov
testb
rcll
and
mov
xorl
sub
pop
cmp
mov
xor
insb
mov
call
xchg
aas
cltd
loopne
shrl
rorb
sub
xchg
mov
lret
js
aaa
lahf
jge
cli
xor
xor
shlb
mov
sub
jnp
ds
aaa
mov
imul
xor
and
insl
clc
push
sub
pop
loopne
push
mov
leave
xor
jne
insl
jg
outsb
xchg
inc
push
cli
jb
cmp
xchg
jp
fldenv
xchg
mov
or
pushf
mov
es
mov
ret
loope
popf
bound
int3
stos
pop
adc
fisubrl
jp
sbb
sbb
loopne
xor
adc
gs
push
xor
xor
mov
jp
cmp
fs
shlb
or
lods
xor
out
stos
jge
aas
repnz
fwait
jno
jecxz
imul
xchg
add
dec
mov
into
add
push
ja
cmpsb
mov
bound
lahf
lret
adc
sbb
cmp
scas
jne
mov
mov
inc
lahf
test
das
inc
mov
insb
pusha
xchg
out
push
jbe
pop
andl
mov
pushl
xor
mov
push
popa
push
loopne
push
dec
jb
sbb
xchg
pop
cmp
fdivl
mov
test
cmp
pop
xor
pop
sti
or
sbb
jp
fistpll
addr16
std
xorb
sbb
sub
sti
inc
add
popf
insb
loop
mov
cmp
fs
xchg
cmp
pop
jae
jno
repnz
dec
cmp
lea
mov
insl
sbbb
xor
stos
inc
cmpsb
inc
sbb
sbbb
jg
aaa
cmpsb
shll
xor
mov
fstps
cltd
icebp
int3
mov
out
mov
fsubl
mov
push
add
ljmp
sbb
test
cmc
mov
jp
sbb
sti
cmp
sbb
inc
fwait
shll
repnz
pop
pop
and
jmp
cmp
push
sbb
cmpsl
add
cmpsb
stos
jb
and
pop
inc
cld
xchg
mov
xchg
frstor
mov
cmp
inc
mov
add
dec
mov
mov
in
movsl
cld
inc
inc
lock
xor
xorl
xor
cmp
cmpsb
lret
mov
push
sbbb
dec
dec
cmp
outsl
test
aam
test
scas
or
cmp
dec
nop
adc
mov
inc
adc
add
cltd
movsb
or
lret
or
inc
je
xor
xor
aas
sti
adc
push
cmp
xor
test
cld
pop
xchg
adc
inc
jb
in
sbb
inc
ja
xor
pop
lahf
inc
xchg
ret
jne
and
out
inc
and
cs
inc
xchg
jnp
push
je
fidivl
push
xchg
outsl
push
addps
ja
pop
push
push
sub
orb
loope
imul
push
jae
inc
lods
inc
jmp
lahf
pop
out
call
sarl
js
xchg
add
stc
test
ret
add
idivb
test
push
or
jnp
jl
shll
js
add
enter
push
enter
pop
pop
stos
and
xchg
mov
imul
out
cmpsl
shlb
jno
mov
xor
pop
and
test
cltd
sub
mov
xchg
lea
add
ret
cmc
adc
pop
fmuls
push
add
sub
jo
in
outsl
mov
cmp
leave
sbb
sub
sub
adc
or
add
adc
imul
dec
dec
sbb
sub
xchg
xchg
sub
mov
adc
sti
lret
jecxz
cltd
outsl
push
lods
nop
pop
sbb
mov
pusha
cmp
add
int
out
pop
addl
push
addl
mov
lret
insb
loopne
sarl
test
fnstsw
into
mov
loopne
js
jb
push
push
xor
dec
dec
adc
test
lds
std
or
fsts
pop
adc
mov
dec
pop
inc
sarl
daa
dec
dec
subb
ds
pusha
mov
cmp
in
pop
rcl
lods
popa
jmp
add
sti
xchg
xchg
jg
xor
xchg
or
cmp
lea
xchg
cltd
sbb
lock
cwtl
mov
sbb
lret
shll
mov
cmpsb
sbb
push
test
sbb
xor
sbb
es
pop
shll
xchg
cmp
push
mov
push
cltd
vpslld
inc
test
jmp
pop
adc
pusha
cltd
dec
jns
out
mov
test
sbb
jo
jae
outsl
dec
fdivrs
xor
into
mov
dec
fidivl
sbb
or
dec
shlb
test
inc
iret
lods
inc
and
cld
mov
push
cli
clc
movsb
jne
jae
int
int3
push
dec
push
mov
cmp
sbb
cld
sti
out
push
dec
jbe
push
mov
aam
cmp
inc
cld
fisttps
cmp
xchg
or
sub
inc
or
testl
jl
inc
repnz
fnstcw
fiaddl
dec
leave
lods
jl
mov
inc
je
or
xor
mov
fdivrs
push
sbb
test
ljmp
ret
into
xor
or
dec
jns
pop
in
sub
lods
ljmp
sti
xlat
xlat
sti
xor
inc
stc
mov
bswap
pop
sbb
shll
jge
xor
sbb
dec
out
rep
xor
test
mov
adc
and
mov
dec
lret
cmp
loope
sbb
ret
rcll
inc
sbb
imul
jl
push
dec
clc
in
xchg
mov
dec
fdivrl
imul
pop
pop
inc
nop
sub
jno
adc
jle
outsl
or
jp
inc
cmpl
mov
or
xor
and
inc
xor
dec
je
xchg
xor
clc
inc
mov
xor
adcb
in
fdiv
inc
jg
and
bound
popf
inc
data16
inc
fs
sbb
imul
push
cmp
push
cmp
jmp
test
sub
mov
xchg
push
jne
or
test
jns
fnstcw
push
jno
jno
lea
dec
mov
mov
outsl
mov
bound
test
xchg
pushw
jns
insl
das
stos
fdivs
popf
mov
mov
sbb
ficoms
mov
gs
cmp
fistps
popa
mov
call
dec
sbb
push
mov
int3
mov
mov
rorl
jl
iret
jnp
ljmp
lahf
inc
and
sub
cmp
add
xor
pop
jle
fcmovnb
pop
ret
pop
mov
xor
lret
cmp
repnz
pop
jne
hlt
subb
fldl
xchg
add
cmp
jl
push
test
fs
movsl
adc
dec
mov
add
jns
sbb
jae
push
mov
loope
jmp
imul
jo
xchg
xchg
xlat
push
mov
loope
push
or
int
dec
cmpsl
xlat
ret
pushf
ret
jbe
iret
xor
pop
cmp
scas
pop
test
hlt
push
mov
js
or
jnp
out
scas
mov
mov
jae
cmpsb
dec
mov
fistpl
cmp
fs
clc
inc
or
jbe
jno
ss
mov
mov
scas
cwtl
hlt
jb
sbb
mov
push
popa
jb
cmpsl
pop
pop
sub
hlt
mov
cmp
adc
shlb
jbe
lahf
or
sbb
cs
xorl
scas
sub
fnstcw
icebp
mov
add
ss
int3
xor
push
adc
clc
adc
stc
adc
pop
arpl
dec
xchg
and
push
xchg
aas
jns
jnp
imul
adc
add
int3
iret
or
daa
hlt
sub
pusha
rorb
das
shll
test
cltd
xor
jl
fdiv
jecxz
inc
fnstsw
mov
ja
push
lds
adc
dec
hlt
xchg
mov
popf
mov
daa
aaa
pushf
dec
icebp
aaa
leavew
out
mov
xor
mov
lods
jo
aas
cmp
cwtl
mov
fnstcw
imul
mov
aaa
mov
movsb
repnz
pop
cmpsb
mov
sbb
scas
cs
xchg
rorb
hlt
sbb
repz
mov
xor
sar
pop
addr16
xor
sbbl
push
cmp
sti
roll
ss
sarl
popa
jns
movsb
popf
test
cltd
es
cmp
xor
fwait
add
adc
adc
sub
inc
or
stc
pop
xchg
orl
or
cmp
or
xor
inc
mov
cmp
imul
sbb
adc
iret
inc
cmp
dec
mov
cmpsb
sbb
jp
adc
addr16
sbb
xchg
push
insl
outsb
xor
mov
xchg
iret
in
out
lea
adc
inc
mov
add
pop
out
pop
mov
push
sub
lcall
jmp
jge
mov
inc
fs
xor
adc
sbb
mov
test
add
repz
xor
push
fwait
popf
std
push
sbb
shl
mov
cmp
push
lret
stos
enter
push
xchg
in
mov
or
add
cli
fwait
dec
add
mov
sub
cs
mov
inc
inc
sub
mov
jp
jb
cld
leave
data16
imul
fstl
imul
lods
imul
push
fimuls
adc
mov
mov
xchg
lds
jae
mov
jae
mov
jo
push
jp
push
inc
xchg
pop
adc
loop
cltd
cwtl
push
jb
xchg
call
test
test
ljmp
xor
xchg
mov
dec
inc
stos
adc
jne
movsl
ljmp
adc
cmp
test
pop
inc
xchg
pop
ret
add
loope
pushf
ja
mov
aas
movsb
in
xor
sub
sub
fadds
rorb
dec
bound
roll
pop
dec
sub
lock
cmpsl
push
cmp
adcl
lds
ja
jno
jbe
mov
jmp
sbb
inc
aam
xlat
adc
sbb
lea
pop
and
cmp
dec
xor
dec
pop
shr
jbe
lcall
jne
push
xor
inc
movsl
mov
xor
jp
mov
dec
imul
scas
push
xchg
dec
mov
mov
jg
sub
cmp
data16
mov
nop
cmp
jb
movsl
jnp
or
aaa
je
push
jecxz
les
mov
lret
rcrl
mov
rclb
adc
xor
mov
test
push
xchg
call
test
lods
loop
adc
adc
adc
call
scas
lret
popf
push
sub
mov
jmp
std
and
sbb
clc
xlat
mov
out
fistl
push
sub
jle
hlt
pop
ret
sub
xor
sbb
sbbl
shrb
xchg
xchg
movsl
mov
out
cmp
xor
xchg
cmp
inc
pop
push
aaa
mov
mov
shrb
xchg
jp
addr16
or
xor
xor
dec
lock
cmpsb
gs
call
hlt
inc
in
pop
lahf
mov
push
dec
aaa
sarb
dec
jl
repz
xlat
test
adc
jge
clc
ret
shll
and
js
push
pop
clc
in
jl
mov
cmp
rcll
mov
xor
and
fcomp
xchg
jae
cld
jl
sahf
lret
mov
orl
add
in
ljmp
cmp
cmp
or
imul
cli
pop
test
dec
test
and
mov
dec
pop
jae
xor
or
pop
into
sub
push
out
cmp
xchg
mov
dec
iret
mov
data16
out
jle
cmc
shrb
frstor
test
jecxz
jne
movsl
clc
cmp
mov
popf
sub
pop
add
and
cs
cld
movsb
sbb
pop
bnd
fcos
jmp
push
scas
imul
mov
mov
test
and
mov
push
cltd
lds
push
mov
cmp
lcall
int3
into
xor
cmp
xchg
xchg
out
push
sbb
pop
inc
push
jne
sub
int
fsubs
pop
lock
mov
int3
or
xchg
mov
repnz
jg
push
mov
roll
sub
call
gs
mov
test
call
add
mov
and
std
or
and
or
mov
mov
jnp
fs
cmp
adc
jl
lods
xor
mov
in
pop
insb
cmp
cmp
mov
fildl
lea
pop
mov
mov
fsubrs
add
xor
lods
mov
xlat
sarl
jno
sbb
and
mov
or
stc
lock
push
idiv
or
jle
je
xor
push
scas
push
push
mov
xor
xchg
aam
mov
andl
dec
lcall
xor
xchg
jbe
cmp
inc
imul
xchg
stc
ss
int
push
scas
stos
lea
mov
push
sbb
imul
sub
lea
idivb
leave
test
fnstenv
add
hlt
aaa
imul
call
sub
sbb
sbb
adc
xchg
cmp
iret
push
clc
jp,pt
outsl
into
pmaddwd
scas
cmp
aad
jne
and
jno
jae
lods
pop
mov
inc
test
mov
pop
std
and
jnp
imulb
push
movsb
sbb
mov
ss
in
lock
cmp
push
jl
dec
sbb
call
loope
dec
adc
mov
and
cmpsb
inc
sub
and
insl
jnp
out
cmp
pop
mov
data16
lret
sbb
xor
subl
repz
jmp
imul
es
jns
dec
pop
insl
dec
popf
int
pop
sbb
mov
movsl
mov
adc
adc
sub
mov
shl
sbb
int3
test
bound
push
xorl
mov
add
gs
cmp
in
adc
jno
das
xchg
cmc
lock
xchg
je
inc
sub
push
pop
jb
fwait
mov
ss
xor
loopne
jp
pop
sbbb
add
push
add
sbb
lret
mov
stc
test
mov
popf
push
dec
jp
jno
jae
mov
addr16
jb
pop
lret
mov
pop
fcomip
bound
jne
jl
sub
pop
push
xor
popf
inc
jne
fnsave
imull
mov
dec
je
cmp
imull
pop
inc
call
mov
pusha
push
int3
xor
cmpl
inc
sub
mov
dec
in
fsubrs
cmpsl
cld
cmp
xchg
cmp
shlb
enter
lea
jmp
xor
adc
inc
test
lret
loop
aas
xor
into
xor
cmp
cmp
xor
insl
dec
or
movb
stos
out
movsb
or
xchg
popa
dec
sbb
or
scas
or
test
pop
mov
sub
rcrl
je
cmp
das
xor
jp
mov
cmp
pop
in
jne
adc
std
sti
and
icebp
cli
in
sub
pop
popa
inc
addr16
loope
les
mov
cmp
and
pop
dec
mov
sarl
xor
add
pop
pop
lea
sti
mov
dec
mov
std
pop
adc
add
in
xor
stc
dec
jl
mov
dec
xor
dec
add
ret
mov
insb
sub
pop
adc
xor
jnp
jne
pop
ret
mov
clc
aaa
sarl
push
push
and
imul
sbb
sub
mov
cmp
mov
out
pop
adc
adc
mov
dec
cli
insb
stc
xor
xor
jp
jo
push
cmp
imul
xor
imul
popa
lret
cmp
lods
xchg
and
sbb
fisubs
adc
cli
out
pop
sub
in
pusha
push
or
mov
add
cmpsl
mov
and
mov
subl
jnp
push
loopne
test
push
nop
mov
into
leave
sbb
outsb
adc
dec
pop
xor
add
push
jg
pop
ret
aad
jne
or
scas
pushf
arpl
xchg
cli
out
inc
push
jns
xchg
dec
mov
and
sub
lahf
xor
sbb
mov
addr16
dec
xchg
push
inc
adc
fstpt
mov
ror
dec
jns
adc
xchg
lret
dec
out
popf
lods
cmp
imul
dec
jae
jbe
sub
popa
icebp
push
mov
cmc
mov
push
insl
push
push
cmp
dec
pop
cmpsl
loopne
out
and
push
aas
inc
jecxz
mov
or
mov
jg
repnz
push
scas
jg
sbb
mov
cmp
pop
mov
mov
sbb
iret
jb
popf
inc
adc
int3
dec
dec
mov
mov
ljmp
pop
mov
movsl
mov
sub
fsubl
pop
inc
adc
aas
cmp
mov
pop
leave
mov
ljmp
pushf
int
stc
xchg
addr16
adc
inc
jp
mov
scas
adc
and
fnsave
sbb
mov
mov
or
adc
adc
scas
cmpsl
sub
int
lret
push
dec
push
push
dec
mov
lea
cmc
insl
dec
inc
adc
or
xor
adc
jecxz
mull
lret
je
inc
gs
and
icebp
mov
jg
aas
push
and
mov
fistps
cmp
fiadds
lods
jl
iret
cmp
jl
cmp
icebp
add
pop
nop
fisubs
adc
pop
mov
jbe
int
mov
mov
frndint
or
jae
pop
and
addr16
inc
repz
pop
mov
inc
scas
bound
cmpb
sub
mov
push
inc
pop
push
dec
in
lods
iret
cli
sbb
dec
sahf
pushf
rol
gs
xchg
int3
les
cmp
jnp
xor
mov
cmp
mov
mov
and
cmp
idiv
xor
add
cmp
insl
dec
scas
jge
in
cmp
push
mov
stc
jbe
insl
jecxz
cmp
cld
ds
hlt
dec
jb
imul
sub
push
ficoml
inc
popa
xor
lods
sar
xor
mov
fstpt
lret
vrcpps
add
cmpsl
daa
or
shrb
test
jmp
leave
inc
push
adc
mov
or
movsb
xchg
inc
test
mov
hlt
test
imul
inc
jle
push
sub
dec
sub
ljmp
or
arpl
cmp
js
cmp
xor
cmp
js
fstpl
jecxz
jbe
adc
fst
imul
xor
cmpsl
add
push
xor
jnp
xor
dec
ficompl
or
lea
pop
jle
dec
push
loopne,pt
cwtl
push
xor
popf
xchg
stos
js
push
lahf
sub
jno
mov
jno
lea
je
fimull
sbbl
rcrl
imul
inc
sti
push
sbb
pusha
push
test
ret
inc
test
rcrb
push
dec
xor
push
iret
dec
jnp
lds
add
sub
fisubs
enter
pop
lds
dec
test
cmpb
js
sub
mov
sub
lea
jne
pop
fldl
xor
mov
pop
xor
rcll
jno
movsl
inc
clc
xchg
sbbl
loope
cltd
jns
mov
mov
in
jae
adc
in
dec
xor
mov
shll
out
stos
mov
dec
mov
std
iret
xlat
insl
ja
jp
shlb
shlb
mov
xor
inc
cmp
xor
add
cmp
jne
xor
loop
jbe
gs
push
rorb
dec
das
fs
ja
outsb
jno
sbb
addr16
jb
clc
adc
sbb
mov
cmp
idivl
idivl
inc
ror
arpl
mov
xorb
cmp
mov
loop
pop
sub
mov
data16
insb
cmp
cmp
insl
jns
jge
sti
mov
pop
das
jp
nop
cmp
outsb
daa
cld
jp
addb
adcl
test
sbb
cmp
xchg
pop
adc
inc
insl
mov
jmp
jg
mov
sub
idivl
imul
adc
cli
jl
add
adc
pop
inc
xor
je
pop
mov
lods
sbb
xor
leave
cmp
out
pop
cmpsb
cmp
fsubr
cmp
push
fdivrp
lods
xchg
popa
dec
jnp
cmpsl
movb
inc
in
mov
xor
pusha
push
inc
xor
sub
pop
cli
mov
xchg
bound
gs
in
popa
xor
xchg
cmp
lcall
or
dec
lcall
sub
and
pop
and
mov
jno
dec
icebp
mov
cmpsl
pushf
arpl
movsl
mov
mov
mov
mov
das
pop
sub
outsl
clc
ja
in
cld
test
out
dec
cmp
cmpsl
pop
int
cli
cld
jne
jno
sub
xor
adc
xchg
fidivrl
dec
repz
cmpsl
inc
insl
movsl
dec
push
std
pop
push
gs
divb
int
sub
mov
jg
jmp
xor
lret
icebp
or
push
cltd
inc
pushw
inc
cmp
ret
orl
jg
sbb
repz
mov
xchg
rep
icebp
aas
int3
mov
sbb
movsb
pop
sbb
cmpb
jb
mov
push
frstor
sbb
popf
roll
sbb
mov
fsubs
xchg
data16
or
xor
ficoml
inc
pop
fs
loop
gs
mov
test
push
test
repnz
xor
pop
movsb
jge
insl
jl
or
scas
insl
xor
cli
or
imul
mov
xchg
lods
mov
push
cltd
pusha
mov
inc
jb
xchg
pusha
clc
aaa
xchg
pop
movsb
inc
dec
ja
sbb
sub
mov
mov
fisttpl
mov
lret
arpl
faddl
mov
mov
ss
mov
or
cmp
lret
mov
mov
test
stc
test
lret
pop
jl
jb
push
hlt
loope
jo
or
loop
repnz
xor
mov
xchg
fld
push
sub
adc
lods
push
dec
test
imul
aas
in
faddl
mov
push
cmp
or
jno
mov
mov
fwait
xor
rcrl
bound
lea
sar
mov
push
stos
mov
sbb
mov
loope
sub
cmpl
out
outsb
add
pop
mov
rorb
sbb
out
mov
dec
pushf
sbb
push
jmp
sbb
or
fistpll
int3
pop
fwait
xor
mov
add
dec
cmp
xlat
iret
mov
addb
int
inc
or
aam
add
adc
popa
mov
or
mov
pop
bound
fldcw
fwait
mov
ss
pop
cmp
mov
or
cmpsl
out
jb
pop
xor
xchg
cmp
cmc
loope
je
cmc
sub
data16
imul
pop
add
or
into
pusha
aam
and
jb
cmc
aam
imul
sbb
adc
add
push
je
mov
int
pop
gs
xor
rorb
mov
insb
fsubl
repnz
mov
int
pop
and
iret
jnp
cmp
lea
push
pusha
jb
cmp
sbb
insl
lods
pop
sahf
test
js
xor
clc
mov
ret
sbbb
mov
adc
pop
data16
mov
movl
dec
jge
cmp
jecxz
lcall
fisubrs
nop
jns
mov
fbld
sbb
xor
cmp
stc
in
dec
xor
sbb
or
das
jb
popa
mov
stc
mov
fstp
insl
sti
aaa
xor
icebp
lock
test
mov
jno
ja
push
xchg
mov
call
mov
sub
lock
enter
cmp
rcll
jmp
negl
mov
jno
stos
div
aas
test
push
sbb
adc
jle
push
inc
mov
pop
sahf
imull
mov
cmp
mov
cmp
test
pop
mov
mov
mov
adc
jne
push
gs
fucom
push
sub
mov
sbb
lcall
adc
pop
adc
das
out
bound
jno
shlb
sub
in
ja
jnp
test
js
xor
out
js
popa
jno
sbb
mov
insl
push
jp
adc
in
lcall
push
fs
fisubrs
lods
cmp
bound
xorl
inc
push
insb
call
mov
mov
into
xorl
ret
arpl
dec
mov
jnp
pop
push
mov
imul
movsl
jns
insl
pop
test
jno
xchg
orl
out
dec
mov
iret
stos
int3
jl
cmp
outsl
push
sbb
pusha
xchg
outsb
sbb
cmpsl
sahf
aam
pop
jno
out
dec
mov
sbb
test
lret
loope
outsb
pusha
test
or
test
mov
sub
add
outsb
sbb
mov
movsb
pop
mov
jle
mov
aaa
adc
jne
insl
shl
mov
aaa
push
xchg
subl
mov
and
cmp
lea
sub
xor
mov
imul
jbe
iret
adc
pop
test
inc
pop
push
imulb
mov
jp
into
pop
aaa
mov
movsb
pop
orb
mov
aaa
xor
cmpsl
sbb
and
sbbb
cmp
out
daa
addl
mov
addl
xchg
repz
shrb
inc
mov
mov
xchg
cmp
stos
into
popf
pushf
stos
dec
movsb
test
jae
cmp
rcll
push
test
dec
xchg
jge
jno
xchg
cmpsb
test
pusha
gs
cmp
cmp
mov
mov
mov
or
fadds
xchg
push
repz
je
jge
jl
mov
adc
dec
lahf
sahf
adc
xchg
mov
bound
pop
data16
popf
push
ljmp
cmpsb
cmp
push
add
push
ss
adc
bound
cmp
cmp
shlb
dec
cmp
fdivl
ret
pop
push
mov
test
movsb
insb
inc
ret
aad
mov
out
xlat
push
icebp
test
adc
std
pusha
je
loope
inc
push
mov
rolb
leave
xchg
xchg
je
leave
outsb
xchg
sbb
lahf
fwait
ss
inc
dec
adc
cmp
jns
dec
mov
mov
out
ja
ret
loop
icebp
popf
sbb
adc
or
insl
add
aaa
or
js
xchg
rcrb
insl
add
sbb
mov
mov
movsl
and
cld
out
or
cmp
add
lods
or
and
cmpsl
bound
and
and
pushf
dec
push
mov
and
insl
outsb
insl
std
lret
pop
dec
adc
jne
inc
lods
or
add
cmpsl
js
cld
mov
xorb
subl
jmp
jbe
jns
xor
outsb
cmpl
mov
jnp
pop
iret
xchg
push
push
dec
sbb
enter
mov
adc
jnp
push
push
cmc
stc
gs
pop
xor
adc
rcl
out
inc
add
stos
dec
mov
push
inc
roll
push
sahf
xor
pop
jp
jp
pop
ror
jno
mov
lock
cmp
lds
stc
xchg
mov
mov
pop
int
xchg
mov
push
gs
or
repnz
out
push
sbb
test
add
dec
cmpsl
lods
fldt
leave
mov
cmp
push
cmpsl
cmp
test
cli
dec
out
sub
pop
or
dec
pop
and
call
bound
add
and
sbb
sub
fadd
mov
sbb
iret
out
mov
add
test
daa
inc
popa
sub
cmp
mov
dec
cmp
dec
sbb
xor
cmp
dec
inc
xchg
mov
shlb
insl
add
mov
shlb
jns
xor
xor
outsb
xchg
jne
inc
mov
push
int
orb
pop
lea
mov
sti
jno
outsb
cmp
aaa
mov
dec
sub
bound
mov
inc
mov
pop
add
jl
jae
or
std
test
ja
adc
pop
xchg
mov
std
loope
out
or
jp
iret
aas
mov
sub
std
or
popf
pop
jl
sub
test
out
pop
pop
in
imul
xchg
or
dec
xlat
xor
jae,pn
inc
int
cmc
jmp
idivb
popl
outsl
scas
xchg
cmp
cmp
adc
mov
pop
test
mov
mov
sbb
test
insl
ljmp
lret
add
sub
or
lods
testl
iret
iret
push
mov
subl
jg
fdivl
mov
loope
icebp
popa
addr16
inc
aas
daa
or
ss
mov
pop
inc
ss
dec
xor
pop
xor
adc
cmp
and
mov
rclb
dec
add
out
add
push
xlat
mov
sbb
xchg
rclb
sbb
xor
sahf
data16
push
aaa
jbe
in
jecxz
xor
sbb
push
pop
cmp
lea
dec
ss
cmp
mov
pop
sbb
in
inc
test
lods
jg
push
push
xlat
andl
xlat
xor
aas
mov
rcll
sub
pop
lret
out
mov
add
nop
dec
pushf
cmp
jmp
adc
cs
das
push
and
pop
mov
dec
pop
aas
jp
jns
scas
ret
mov
adcl
fwait
imul
xor
into
ds
mov
sbb
cltd
imul
xchg
imul
or
rcrb
into
mov
lods
idivl
aad
xchg
xchg
jnp
adc
aaa
testb
push
lods
loope
pop
mov
pop
lcall
or
outsl
test
movsb
or
add
insl
gs
lahf
push
lods
dec
jns
xorl
adc
jb
dec
inc
lea
adc
mov
pusha
jno
add
jl
inc
mov
mov
or
rcll
and
mov
adc
add
pop
push
or
push
sbb
imul
fcoms
fsts
jmp
ljmp
xchg
or
rcrb
dec
iret
lea
scas
inc
jns
cmp
js
aad
cmp
test
ss
testl
jle
inc
inc
sub
mov
sbb
pop
outsl
std
lds
sbb
aas
cmp
mov
jb
xchg
mov
pop
popf
test
in
add
insl
rolb
dec
cli
scas
fwait
xor
enter
lds
and
mov
mov
sub
hlt
add
cmpsl
enter
int3
dec
push
pusha
inc
lret
push
sbb
pusha
pop
lcall
jg
into
je
mov
mov
sbb
je
decb
sarl
xor
adc
jge
filds
cmp
push
mov
mov
ljmp
adc
mov
insl
pop
data16
inc
cmp
cmp
ja
jne
cmp
orb
hlt
push
cmpsb
dec
scas
ljmp
mov
into
cmp
fisubrs
mov
cltd
bound
sbb
subb
movb
mov
dec
aam
adc
cmp
lea
inc
inc
pop
sbb
repnz
pusha
cmp
sub
xchg
sbb
xor
cltd
test
mov
xchg
jmp
lods
mov
push
and
pusha
xor
sub
jecxz
jno
push
adc
mov
push
subb
imul
cltd
xchg
push
negl
pop
pop
adc
mov
fxch
insb
ds
daa
xchg
cmp
data16
scas
int
cli
xchg
push
dec
sub
cli
cmpsl
lods
mov
andl
cmp
sti
sbb
leave
dec
xor
or
push
add
aam
fs
andb
inc
cmp
xchg
cmp
fildl
arpl
jbe
xchg
repnz
dec
dec
in
jbe
add
fcoms
mov
out
fsubrl
test
sbbb
push
push
cmp
insb
sbb
mov
mov
inc
xchg
out
push
jnp
lock
sbb
adc
fiadds
jne
sub
test
lods
or
sbb
inc
add
int
sub
add
adc
shlb
insl
loop
loop
stos
sahf
sub
test
bound
dec
mov
push
push
adc
repnz
mov
sub
inc
cli
mov
adcl
lods
repnz
mov
mov
mov
xor
sub
jp
push
jnp
dec
out
mov
mov
insl
mov
fsubrs
outsl
mov
movsl
addr16
adc
add
ja
dec
push
xchg
std
enter
lods
lods
xor
push
nop
dec
dec
pop
cmpsb
add
cmp
fnsave
or
fidivs
sti
test
movl
inc
shlb
cmp
push
jbe
int3
aas
bound
shll
jno
cmp
add
sbb
int
pop
mov
cmp
clc
push
lods
test
addb
xchg
fstpl
into
adc
mov
jle
sbb
mov
mov
fcomps
push
jg
fdiv
xor
popa
mov
mov
movsb
or
jnp
jg
in
movsb
fcmovnbe
pop
cmp
out
daa
lcall
push
xor
pop
push
addr16
xor
iret
cmp
pop
in
mov
push
les
rclb
imul
or
fs
pop
mov
popf
cld
jne
cld
icebp
js
mov
mov
std
bound
and
popf
cmp
xchg
jno
and
push
mov
pop
inc
movb
fdivr
push
int
icebp
jp
lret
mov
jno
xchg
insl
ljmp
mull
mov
cmpsl
ja
adc
rcl
fs
xchg
in
push
mov
pop
daa
pop
in
popf
aaa
sub
outsb
jl
jecxz
jno
and
jno
aam
shrb
inc
xor
xor
or
sub
cwtl
and
data16
std
cli
inc
mov
jbe
dec
fnstcw
ret
and
push
jns
xor
mov
cmp
mov
fstpt
push
out
mov
fs
adc
inc
xor
dec
scas
sbb
and
les
dec
cmpsl
jp
mov
cmp
loop
lods
pop
jg
rolb
xchg
imull
cltd
repnz
daa
mov
clc
cmp
sahf
imul
sub
jp
negl
lea
pop
out
mov
push
xor
or
cmp
mov
lret
testl
or
popf
outsl
lock
lods
ds
push
shll
ss
mov
jle
push
add
leave
add
xor
xor
shrl
popf
aaa
sub
aad
cmpsl
mov
mov
sbb
mov
pop
push
sub
aas
ds
aas
jno
popf
cltd
push
dec
xor
jge
cli
pop
orl
cmpb
jg
inc
imul
cmp
sub
sbb
outsb
cmp
push
mov
xor
enter
pusha
aaa
pop
push
fisubrs
cmp
sbbb
xor
dec
movsb
push
adc
outsl
lds
arpl
cmp
jns
fimuls
addl
sarl
mov
pop
mov
jns
imul
ja
xchg
cwtl
push
sarl
out
sub
loop
cld
ja
adc
push
jo
nop
gs
pop
ds
test
push
mov
pop
push
pop
dec
test
mov
xchg
xchg
dec
fadd
loop
mov
in
adc
clc
and
stos
push
jnp
mov
xchg
enter
pop
inc
jbe
adc
push
mov
cmpsb
loop
mov
mov
cmpsb
jbe
lods
scas
add
lock
sub
rcll
sar
mov
xchg
xchg
push
cmp
push
pop
das
int3
lods
inc
mov
mov
xor
mov
fnstcw
imul
int
das
add
test
inc
adc
dec
int3
aas
jne
sub
hlt
push
sub
in
mov
cltd
movsb
shlb
sbb
movsb
sbb
andb
add
in
add
jmp
push
sub
sbb
roll
pop
jmp
sub
leave
adc
sbb
xchg
jno
dec
adc
test
jmp
leave
cmp
aaa
xchg
lret
scas
jl
fisubrl
dec
fildll
stos
jb
stos
push
test
mov
xchg
imul
ret
mov
inc
cld
adc
or
xor
sbb
divl
stc
add
dec
lcall
sbb
imul
movsb
sub
xchg
sahf
clc
aaa
mov
daa
sub
int
scas
and
adc
sarl
cmc
mov
cmp
lea
int3
pushl
dec
push
push
test
cwtl
aas
sbb
es
dec
push
jno
call
xchg
or
xchg
sbb
dec
stos
push
dec
int
adc
pop
cltd
dec
xlat
push
mov
js
xchg
xlat
arpl
dec
pop
mov
sbb
sbb
inc
nop
xchg
mov
dec
xchg
cmp
popf
cmp
cmpsl
inc
mov
popf
push
pop
dec
dec
outsb
mov
or
ja
lea
popf
inc
orl
mov
int
pop
dec
gs
dec
lea
cmp
cmpb
mov
cmp
or
aad
mov
cmp
jne
jno
rcl
fwait
push
xchg
xchg
ror
lret
xchg
pop
bound
cs
std
sbb
inc
lea
mov
sub
jns
xchg
lret
xor
aaa
dec
insb
inc
test
int3
xor
add
push
pop
insb
fwait
int3
fists
sbb
lret
daa
dec
out
dec
xor
mov
dec
cmp
push
loopne
sbb
out
and
je
sub
sti
adc
jne
sti
aad
mov
inc
lret
mov
pop
loop
add
add
inc
repz
or
or
jb
jnp
dec
dec
bound
mov
mov
lcall
sub
shrl
mov
mov
repz
mov
push
aaa
mov
fidivrl
movsl
xchg
or
gs
lret
repz
jae
cltd
jno
out
push
cmpsb
movq
lea
jg
fisttps
les
and
mov
jno
dec
xor
aam
inc
push
pop
mov
pop
and
loope
stc
pop
cmpsl
sub
repz
loope
mov
fcoms
or
in
stos
mov
jbe
addl
pop
jns
sbb
cld
in
out
pushf
rcrl
push
stc
pop
movsl
mov
jmp
cmp
pop
inc
imul
fbstp
jns
and
jmp
subl
mov
sbbb
bound
xchg
mov
nop
int
pop
mov
mov
movsl
sbb
mov
int
mov
cmpb
push
mov
mov
jno
fnstcw
jmp
arpl
rolb
lods
rcrl
scas
push
sub
push
je
cmp
test
cli
mov
or
mov
addr16
stc
jp
xor
out
pusha
lock
lods
jbe
test
fsubs
pop
and
cmp
pop
divb
insb
mov
and
sbb
out
cmpsl
jbe
mov
jge
lods
insl
adc
andl
imul
mov
or
shrl
jmp
mov
jge
stc
sti
gs
inc
cmp
inc
lcall
sbbb
loop
cltd
mov
xchg
jnp
sbb
push
mov
sbb
xchg
aam
push
hlt
push
dec
roll
sbb
cwtl
xor
mov
and
bound
loope
jge
xor
lods
mov
cltd
mov
movsl
int3
sbb
loop
aaa
sarl
insl
test
adcb
dec
popf
and
dec
jl
mov
mov
mov
insl
cmp
fwait
ja
ss
jns
lods
xchg
imul
repnz
jno
mov
jno
sub
addl
iret
aas
out
pop
dec
pop
sub
pop
and
cmp
cmp
inc
and
mov
int
call
xchg
fmuls
movsl
daa
movsl
test
jne
adc
mov
xchg
jg
movsl
int3
pop
aas
adc
mov
in
and
fidivrs
mov
mov
cltd
or
cmpl
push
mov
repz
hlt
arpl
or
push
push
or
sbb
adc
jnp
push
mov
add
or
mov
mov
sbb
test
inc
into
mov
lock
rolb
arpl
cmpsb
xchg
jnp
pusha
cli
test
inc
into
cmp
sub
rclb
mov
cwtl
mov
cs
leave
in
scas
arpl
jp
adc
and
xchg
test
push
push
pop
sbb
pop
fidivrl
inc
or
dec
xchg
addr16
stc
xor
jne
inc
mov
cmp
fcomi
pop
mov
mov
leave
jne
push
lods
out
nop
aaa
sarb
outsl
js
xchg
mov
mov
sti
aad
out
fsubrl
ret
movsb
cmp
mov
int3
mov
mulps
sub
mov
or
mov
arpl
cmp
xor
cmp
dec
cs
mov
bound
test
mov
out
movsb
loopne
add
scas
cmp
cmp
adc
sbb
pop
enter
jns
outsl
jl
sbb
push
ja
cltd
ret
jmp
into
pop
xchg
ja
cmp
push
popa
fucomp
cmpsb
scas
cmp
fucomi
cmc
mov
xor
jne
xor
test
jl,pt
popa
jecxz
aaa
imul
xor
aaa
cmp
subl
xchg
mov
subl
adc
xchg
cmpsl
jo
mov
sub
jbe
adc
push
imul
scas
sub
stc
gs
mov
dec
scas
push
jbe
sbb
je
cli
dec
mov
xor
sbb
sub
orl
mov
jl
adc
cmpl
and
pusha
mov
dec
sub
mov
test
je
and
stc
popf
arpl
push
push
pop
jb
xchg
test
or
push
ret
ds
es
sti
dec
cmp
jg
or
icebp
repz
fprem1
mov
or
adc
ss
mov
mov
es
add
lds
jb
insl
push
sub
aaa
sbb
pop
sti
xor
inc
stos
pop
push
in
lock
or
dec
lock
test
mov
call
cmc
or
movsb
loop
push
inc
mov
fildll
mov
push
sub
push
sub
xchg
call
sbb
movsb
and
jecxz
mov
pop
mov
rcll
add
std
mov
out
shrl
inc
jno
cmp
fldln2
push
loop
aaa
imul
push
sbbl
pop
dec
and
sub
sar
dec
lret
add
std
jp
test
mov
test
cmpsb
xor
cmp
push
pop
ljmp
sub
out
add
gs
jmp
mov
dec
aas
cltd
or
jg
push
bound
dec
sbb
cmp
jne
in
cmp
pusha
pop
jge
mov
lahf
cmp
adc
pop
cmp
addb
sbb
imul
jge
lret
aaa
push
add
jns
mov
xor
mov
xchg
inc
mov
popa
mov
jge
xchg
inc
xor
lret
pop
xchg
nop
jns
jp
cmp
or
mov
pop
adc
jp
push
cltd
cmp
inc
cmp
xor
jle
xorl
pop
jbe
jno
pop
mov
jns
shll
insl
jb
cmp
sar
jbe
pop
jne
jg
imul
push
bound
ja
sbb
popf
xor
add
cmp
cltd
add
stc
je
mov
int3
jle
rcll
jae
cmp
push
xchg
test
dec
popf
inc
inc
xor
adcb
xchg
imul
adc
repnz
xchg
jne
scas
inc
nop
and
cmp
pusha
xor
jne
test
pop
jmp
pop
push
dec
in
lcall
add
arpl
lcall
test
mov
dec
sbb
addr16
sub
inc
lea
mov
iret
push
mov
movsl
mov
cmpsb
int
lods
cmpsl
sbb
ljmp
jnp
pop
pop
cltd
jns
mov
pop
push
push
lret
scas
popf
incl
cmp
int3
jo
mov
pusha
push
ret
repz
inc
cmpsl
leave
sub
jp
inc
xor
ret
ret
test
lcall
imul
lods
mov
or
in
cmp
imul
pusha
gs
dec
mov
jmp
push
mov
adc
cmpsb
scas
cmpsl
jl
lret
loope
jno
stc
dec
sbb
or
push
pop
outsl
ss
dec
out
mov
scas
xchg
hlt
icebp
dec
test
jp
lret
gs
mov
push
movsb
sbb
jbe
jbe
lea
sbb
inc
cmp
int
xchg
lods
push
int
pop
lds
jl
pop
push
mov
xor
add
push
and
iret
movsl
sti
ja
mov
int3
mov
jge
rcrb
scas
mov
addr16
xorb
and
mov
add
push
in
inc
cmp
je
sti
inc
in
jp
in
adc
inc
push
bound
mov
ret
dec
mov
lock
dec
clc
pushf
push
std
mov
sub
sarl
ds
xchg
sub
sbbb
jns
jl
popf
or
insl
je
mov
pusha
out
xchg
unpcklps
popf
jecxz
aas
jge
test
test
mov
int3
nop
push
les
add
fsubrl
xor
mov
lods
push
pusha
jo
or
pushf
sbb
das
and
push
ret
mov
into
jbe
fistl
je
inc
in
cmc
cmp
loope
subl
adc
and
pop
insb
bswap
cltd
movsb
dec
sarl
cmc
dec
aas
pop
les
mov
mov
ds
jb
jmp
stos
andl
jp
in
push
xor
leave
imul
mov
sbb
inc
push
inc
xchg
pop
add
cmp
pop
xor
mov
jbe
pusha
pop
outsl
jno
xor
jno
jle
inc
inc
insl
mov
sub
dec
xor
pop
push
iret
xchg
adc
xor
or
clc
pop
sti
and
jns
loopne
int3
add
add
pop
popa
lea
nop
inc
cmpb
sbb
pop
call
inc
aam
stc
ds
call
mov
stos
mov
sbb
ror
mov
xor
pop
sbb
outsl
jns
or
push
xchg
inc
fadds
or
xchg
outsl
dec
dec
test
ja
inc
or
insb
jge
stos
jns
sub
xchg
cmp
clc
int3
fs
test
sbb
mov
jno
and
fs
mov
test
in
cmpb
xlat
xor
es
mov
lret
mov
push
in
mov
negl
xchg
jg
xchg
outsb
mov
test
lret
lret
into
mov
and
xor
xchg
and
mov
cmpsl
or
stos
mov
pop
dec
sbb
inc
lds
js
test
xchg
lea
imul
mov
push
enter
push
aaa
mov
inc
je,pt
pop
jl
jb
in
lahf
inc
jl
test
stc
adc
in
adcl
dec
cmp
cmc
lods
cmc
jbe
inc
loopne
jp
and
aaa
or
icebp
or
mov
dec
add
cmpsl
bound
shrb
flds
xor
lock
cmp
sbb
aaa
stos
push
inc
arpl
daa
mov
pop
or
adc
sbb
cmp
aas
out
mov
mov
add
mov
test
setns
or
icebp
push
mov
cmpsl
xchg
cmp
push
and
add
or
jno
rcl
movsb
dec
inc
loop
leave
mov
jmp
clc
aaa
arpl
ds
inc
out
and
inc
popf
xchg
in
pusha
inc
xchg
sbb
ja
adc
xor
mov
dec
pop
outsl
mov
mov
outsl
mov
dec
enter
pop
aas
imul
cmp
paddsw
cmp
dec
jge
push
pop
pusha
enter
imul
push
sbb
pushf
adc
aas
popa
mov
mov
iret
popf
xor
ret
ja
dec
aaa
dec
imul
xorb
adc
int3
adc
mov
stos
xchg
push
dec
push
adc
in
cmp
mov
enter
iret
aas
loope
pop
addb
xchg
mov
ret
pop
stc
aaa
mov
and
scas
cmp
test
fisubl
arpl
or
mov
and
xor
adc
add
shll
enter
repz
or
sub
pop
xchg
mov
popf
clc
popf
ds
or
les
mov
imul
pop
adc
add
mov
pop
mov
xchg
xor
push
jno
jnp
pop
imul
enter
stos
cmpsb
inc
scas
mov
pop
or
cmpsl
sbbl
retw
ds
cmp
dec
or
rol
adc
cmp
sub
dec
push
inc
fidivl
stc
cmp
xchg
xor
jns
ret
mov
stc
xor
push
cltd
dec
mov
mov
shll
ret
in
cmp
push
cmp
mov
mov
lret
test
sbb
lock
sbb
sub
pop
sbb
inc
push
pop
or
aam
pop
ret
insl
test
mov
lahf
sbb
cltd
jns
sub
jp
cmp
sub
xchg
sbb
outsl
xchg
in
aad
jmp
cmpsl
mov
jne
push
loope
in
fcomps
or
leave
fwait
daa
imul
shlb
sbb
inc
ret
pop
pop
jnp
into
push
xchg
inc
out
jb
fmull
jo
sub
mov
cmp
negb
dec
push
jae
repz
hlt
xchg
mov
jge
inc
dec
cmpsl
jo
add
push
pop
sub
outsb
cmp
imul
add
leave
insl
jbe
inc
push
mov
sub
mov
sub
setnp
fisttpl
or
add
mov
jmp
sub
je
repnz
lock
mov
addr16
or
inc
and
lea
mov
cmp
sahf
popf
cmp
xor
imul
out
cmp
scas
movsb
inc
out
sbb
pusha
mov
cli
cltd
call
dec
mov
js
cmc
test
push
push
mov
clc
int
sbb
in
loopne
rcrl
punpcklbw
mov
repnz
mov
mov
neg
sub
in
int3
sbb
sub
shr
push
ds
jo
xchg
xchg
mov
dec
dec
stc
dec
int3
iret
lea
clc
xor
adc
test
lcall
jo
das
movsb
loope
imul
and
repnz
out
inc
dec
mov
push
sti
inc
dec
lods
push
stos
jle
fs
and
popf
in
mov
in
push
push
test
pop
lea
push
jp
ret
pop
lds
pop
out
lock
lods
dec
push
int3
jno
test
sbb
dec
outsl
jnp
adc
mov
out
xor
xor
out
orb
ret
inc
push
mov
lret
sbb
dec
test
fadd
imul
iret
push
icebp
adc
jl
dec
decl
mov
outsl
mov
popl
or
iret
loopne,pn
inc
test
in
andb
cmpsb
jecxz
mov
mov
pop
stos
mov
cmpsl
inc
adc
dec
jno
xor
xor
test
or
mov
push
xchg
push
adc
jno
and
cli
mov
lea
or
adc
adc
xchg
mov
sbb
mov
mov
and
xchg
lret
jae
stos
fdivrl
or
popf
mov
outsl
dec
aaa
int3
xor
sub
sub
mov
inc
cmp
sub
clc
gs
push
jp
pop
int
fs
pop
xor
cmp
push
inc
jo
mov
pop
aas
xlat
push
pop
fs
xor
inc
jb
adc
pop
push
sbb
xor
inc
movb
int3
inc
mov
mov
test
fisubrs
mov
xor
or
test
pop
ss
mov
and
lea
mov
jmp
pop
je
imul
cmp
mov
xor
cmp
or
scas
fbld
iret
adc
cltd
fbld
cmp
dec
in
lea
jg
pop
mov
cmp
mov
sub
push
pop
adc
mov
test
aaa
fsts
lods
pop
dec
push
cmp
in
les
xorl
push
cld
dec
jno
dec
or
fisubrs
inc
das
shl
mov
dec
cmc
pop
xor
mov
fstps
fildl
jmp
add
dec
sub
pop
xor
pop
pop
and
fisttpll
or
mov
cmp
jp
xor
pop
outsb
dec
ja
ss
aam
scas
insl
xchg
hlt
out
xor
xchg
cmp
test
mov
dec
ja
fiaddl
dec
dec
xchg
adc
std
push
aas
pop
test
push
jne
mov
cmpsb
cmp
sub
cld
lds
ds
sbb
or
jns
mov
xchg
add
xchg
jg
or
xor
jl
outsb
sbb
int
xchg
and
xor
ss
cmp
lret
xor
or
scas
into
sbb
dec
iret
dec
lods
and
sbb
mov
jbe
cmp
dec
jno
or
adc
xchg
jmp
popf
inc
movd
jp
test
into
xorb
pop
into
and
fsubr
lret
or
xchg
mov
push
inc
jns
inc
imul
pop
sub
pop
scas
xchg
or
pop
inc
sbb
xor
outsl
movsl
dec
fdivrp
out
repnz
jl
xchg
inc
push
sub
add
imul
popa
mov
dec
pop
xor
jne
mov
insl
xor
inc
addr16
in
cmp
aas
inc
cltd
arpl
es
cmpsb
sbb
jmp
or
dec
out
or
fcmove
xlat
xchg
test
adcl
imul
push
imul
popa
pop
add
dec
pusha
add
or
pusha
int
in
or
cmp
imul
out
cmp
add
dec
mov
pop
push
sbb
mov
jp
repnz
sbb
and
push
lcall
scas
dec
daa
or
popa
or
or
xor
pop
popa
shlb
jmp
push
pop
pop
insb
or
cmp
or
ss
jmp
lahf
pop
push
cmp
hlt
rcrl
mov
push
outsb
push
sbb
mov
dec
repz
mov
push
mov
mov
inc
mov
mov
outsl
fdivs
sbb
dec
and
scas
mov
mov
pop
pop
jg
pop
test
cmp
loop
sahf
aad
push
cmp
lods
lret
sub
inc
pop
jle
lds
ljmp
scas
inc
mov
push
cmc
jge
in
mov
add
push
negb
loopnew
fwait
out
in
jb
and
test
icebp
pop
cmp
mov
icebp
inc
mov
test
jp
ja
test
scas
das
insb
js
xchg
jo
push
mov
stos
aam
and
dec
mov
iret
push
lock
mov
push
sbb
out
subl
sub
test
jge
stc
or
sbb
jne
enter
mov
pop
sti
jns
lea
shl
aam
fisttpll
jb
mov
ds
pop
xor
dec
mov
mov
inc
inc
cmpsl
enter
jne
mov
mov
and
push
cmp
scas
outsl
pop
mov
ja
mov
test
xchg
sub
call
and
pop
mov
pop
ret
fisttpll
mov
inc
jle
addr16
idiv
outsb
ja
mov
inc
out
adcb
xor
loope
mov
mov
int3
dec
test
lret
push
int
push
insb
jge
dec
adc
sub
xorb
int3
xchg
lahf
data16
add
sub
test
xchg
cmp
and
and
mov
jl
xor
sti
andb
shl
xor
popf
ljmp
cmp
enter
test
and
push
dec
sub
push
sti
add
inc
push
sarb
or
arpl
div
js
jno
aam
cmp
sbb
xchg
test
ds
inc
je
jno
lret
icebp
stos
mov
leave
pushw
jb
mov
out
pop
lea
aaa
sbb
cmpsb
push
xor
es
cmp
int
pop
xchg
and
mov
ja
ljmp
sub
inc
mov
jecxz
push
jnp
in
call
dec
adc
aaa
jns
fcoms
cltd
in
fldenv
pop
cmpb
dec
xorb
imull
fldl
gs
mov
or
pmaxub
push
mov
nop
push
pop
inc
mov
or
mov
loop
xchg
sbb
fstpl
inc
lcall
aas
push
cmp
inc
mov
xor
pop
mov
push
mov
jp
frstor
rorl
fnstsw
jmp
hlt
sub
dec
fisttpl
cmp
push
push
cmpsb
shrb
push
mov
jno
mov
xorb
jge
ret
fcomps
lcall
sarl
sub
cmp
je
xchg
push
lods
add
jnp
sbb
test
popa
sbb
aad
loope
sbb
mov
jno
fsubrs
data16
cmp
cmp
loop
cmp
push
lcall
mov
pop
mov
in
jecxz
jo
xchg
jp
test
into
ds
cmp
and
xchg
adc
mov
lret
mov
stos
pop
mov
insl
xchg
or
and
pop
cltd
pop
jle
insb
mov
xor
xchg
leave
dec
cmp
cs
icebp
pop
out
dec
movsb
subl
pushf
aaa
pop
inc
pop
jno
xchg
inc
dec
jmp
inc
addl
mov
outsb
jo
jno
cmp
lret
loope
cmp
adc
cli
mov
inc
xchg
fldl
andl
loopne
sub
mov
jecxz
and
out
adc
dec
or
outsl
les
es
inc
cltd
xor
pop
aam
sub
push
je
cmp
adcl
xchg
mov
mov
pop
rcrb
pop
cmp
push
std
lods
jb
aaa
dec
test
push
in
es
cmp
xor
lock
inc
cmc
mov
pop
lret
int
aas
cmp
sti
scas
jno
sbb
int
aas
lret
clc
test
repnz
aad
pop
imul
popa
xchg
jmp
test
iret
cmp
pop
mov
loopne
lock
push
ds
andb
int3
pop
and
cmp
enter
clc
jns
sub
mov
jns
imul
stos
inc
cmp
pop
enter
sub
pop
xlat
shl
or
push
xchg
mov
imul
dec
mov
mov
cltd
dec
vprotb
pop
dec
dec
in
arpl
popf
cs
out
push
sbb
iret
mov
pop
jg
adc
pop
mov
cmp
cmpsl
push
lods
and
dec
clc
xchg
xchg
inc
cli
mov
jp
xchg
xor
mov
dec
daa
insl
stc
sub
pop
xor
inc
mov
pop
into
inc
in
dec
xor
pusha
or
rcrb
idivb
inc
inc
mov
movsl
mov
add
stos
aaa
dec
push
stos
jle
enter
jae
enter
dec
sbbb
cli
imull
pop
mov
add
enter
pop
jnp
dec
mov
lea
mov
test
fwait
and
mov
adc
les
xor
loop
ret
adc
xchg
addr16
jbe
mov
stc
daa
jbe
mov
or
jb
xchg
adc
pop
ret
dec
mov
jle
sarb
popf
adc
pop
jge
pop
aas
insl
test
xchg
mov
jae
mov
icebp
or
cmp
mov
dec
mov
scas
enter
sbb
mov
es
mov
fs
popf
adcb
add
push
out
scas
cmp
dec
cmp
cmpl
mov
push
cmp
pop
pop
pop
push
adc
mul
mov
mov
jb
mov
mov
fs
int
or
mov
xor
inc
dec
jnp
add
jb
shll
push
iret
addr16
mov
shlb
or
scas
gs
dec
insl
dec
add
mov
dec
hlt
es
cmp
repz
or
arpl
mov
mov
icebp
sbbl
add
int
mov
dec
mov
mov
dec
pushf
into
hlt
inc
sub
inc
push
outsl
fimuls
sub
mov
xor
ja
daa
xchg
mov
dec
adc
lock
push
adc
mov
mov
or
or
pushf
xor
mov
lahf
fimull
sub
fadd
dec
stc
dec
cmp
bound
xor
push
cmp
shll
movsb
dec
cmp
sub
push
mov
insb
subl
je
fildl
dec
addr16
and
pop
out
int3
insl
xor
cmp
dec
jl
insb
std
xchg
mov
andl
cltd
or
pop
imul
pop
jb
cmp
cli
cld
xor
mov
ds
ss
jnp
inc
pusha
call
xor
push
mov
scas
xchg
test
stc
push
data16
in
adc
pop
dec
cmpsl
adc
mov
mov
xchg
mov
xchg
std
cbtw
test
xchg
sub
pop
ror
rorl
push
popf
xor
push
loope
pop
sbb
mov
mov
fistl
xor
add
stos
xchg
out
rorl
mov
mov
jnp
outsb
data16
nop
jbe
sbb
jnp
shlb
sbb
and
insl
pop
lock
pop
addb
and
jnp
mov
pop
push
cmp
cmpsb
sbb
inc
pop
test
leave
inc
jg
inc
scas
enter
mov
and
cmpsl
sub
lods
xchg
out
mov
jp
sub
sbb
pushf
inc
out
xchg
mov
loop
push
or
sub
shll
mov
and
dec
out
mov
fcoml
ljmp
pop
xor
clc
jno
or
shl
adc
scas
jp
or
mov
mov
in
stos
cmp
mov
jb
outsl
and
dec
jp
jecxz
pop
pop
out
jno
fadd
mov
add
repz
mov
or
aas
mov
mov
mov
sbb
dec
push
mov
iret
inc
sub
cmp
popf
mov
in
out
cmp
pushf
cmp
xor
or
je
loop
xor
sub
xchg
sub
ja
dec
or
iret
cli
mov
fwait
jno
lret
ljmp
test
mov
or
lods
xor
inc
pushf
scas
mov
aaa
lods
dec
cmp
inc
movsb
jno
xor
adc
pop
addr16
push
cmc
cmpsl
fcoms
pop
inc
cmc
test
xchg
aaa
mov
cmp
gs
sub
stc
inc
ja
fisttpl
pop
jmp
call
add
pusha
xor
dec
cli
test
and
mov
movsl
dec
int
jp
ljmp
dec
clc
test
sahf
push
imul
xchg
mov
or
jne
gs
ja
xor
inc
cmp
orl
cmp
mov
cmp
xchg
ds
jg
enter
test
xor
sbb
xor
push
mulb
cld
cmpsl
cmp
adc
or
cmp
xor
pop
insl
adc
mov
rcrl
cmp
mov
xchg
cmp
loopne
add
int3
inc
xchg
dec
mov
and
sbb
dec
ja
or
mov
inc
dec
cmp
inc
jbe
jns
lods
das
push
sti
cmpsb
inc
push
mov
mov
jg
mov
or
adc
int3
mov
aaa
insl
inc
push
mov
scas
addb
push
dec
js
mov
or
dec
sbb
inc
stos
mov
adc
cltd
cltd
repnz
popl
in
adcl
jbe
leave
xchg
mov
sbb
sbb
stc
mov
and
nop
popf
imul
sbb
test
dec
clc
add
int
rorl
mov
mov
or
cmp
pop
adc
je
rcrb
inc
hlt
and
andb
sub
dec
jge
mov
xor
enter
xchg
daa
ror
adc
arpl
inc
pop
dec
or
in
aas
inc
and
sbb
sbb
das
fs
cwtl
pop
pushl
mov
iret
imul
push
and
push
sbb
xor
data16
les
cmp
sbb
les
daa
sarb
dec
jge
repnz
shll
and
inc
cmp
cmc
mov
popa
mov
mov
sub
idivb
jge
jl
shrl
out
test
push
xor
xchg
sbb
mov
in
subl
imul
dec
popf
push
cmp
pop
dec
cmpsl
jbe
loopne
sub
adcb
dec
mov
inc
pusha
test
dec
jns
mov
popf
xor
lcall
xor
out
inc
jle
or
pop
xor
ret
fistl
dec
psllw
mov
popa
ror
push
pop
xchg
xchg
fimuls
insl
int3
shlb
sbb
mov
in
cld
cmp
xor
xor
xlat
push
lock
jnp
and
mov
cmp
push
jne
mov
popf
push
fstps
rorb
xor
gs
pop
test
mov
aaa
adc
lret
pop
sbbb
scas
push
xor
cmp
pop
mov
fidivrl
mov
jb
cmp
iret
dec
add
je
aad
mov
xchg
xor
jmp
dec
fdivs
imul
jae
imul
out
pop
inc
mov
test
fwait
xchg
test
pop
das
adc
test
and
add
pop
adc
and
ja
movsl
orb
or
mov
mulb
iret
lds
xchg
icebp
xor
addr16
out
in
dec
add
movsl
lds
push
ljmp
mov
push
imul
and
pushf
xor
ljmp
jge
pop
sbb
mov
pop
rcll
or
cmp
xchg
push
sub
arpl
sbb
pop
dec
push
dec
mov
scas
mov
sarl
inc
push
mov
js
test
popf
dec
push
leave
mov
dec
or
xor
adc
pop
xor
pop
js
test
into
insl
out
inc
inc
pop
dec
lret
movb
dec
sub
inc
pop
or
shll
mov
mov
sbb
int
in
mov
mov
push
xchg
ds
mov
aas
mov
cmp
imul
nop
js
or
mov
scas
test
add
adc
int
adc
mov
mov
mov
popa
cmp
test
sbb
push
sbb
pop
mov
int
add
sub
sbb
adc
repnz
or
mov
sbb
push
jl
js
jge
cmp
dec
mov
sub
inc
in
nop
sbb
fistl
xchg
push
mov
cltd
mov
mov
dec
daa
enter
sbb
clc
ljmp
scas
dec
pop
xchg
sar
mov
gs
cmpsl
fcom
mov
mov
fistps
lret
loope
jns
repz
aaa
push
addr16
fidivrl
pop
adc
push
cmp
inc
imul
xor
fwait
notl
in
push
cmc
pop
cltd
mov
pop
mov
popa
in
imulb
lret
sub
and
out
lods
sub
jge
mov
and
lock
scas
aaa
hlt
aad
push
sbb
push
jns
cmp
lea
int3
leave
push
shrl
cltd
cmp
rcr
ss
into
cld
jne
mov
or
adc
jno
sbb
sahf
cld
mov
mov
dec
daa
mov
dec
inc
adc
xchg
mov
dec
dec
xorb
sbbl
fnstcw
cmp
jmp
sbb
cmp
and
repnz
mov
xchg
mov
mov
push
jne
sbbb
mov
dec
mov
call
mov
cmp
pop
ret
push
pop
jne
enter
xor
push
jecxz
sbb
xorl
mov
adc
lds
mov
cmp
sbb
lea
ss
xor
dec
das
int
or
sarl
jne
test
and
dec
mov
xchg
imul
jb
and
xor
testb
cmp
xor
out
sahf
je
xor
scas
adc
fld
and
add
pop
jl
push
xor
fldenv
xchg
jp
xchg
cmp
xchg
decb
mov
adc
or
xor
clc
mov
js
inc
mov
dec
inc
pop
jb
sbb
xor
add
lods
and
lods
pop
dec
sahf
jp
adc
gs
out
jle
mov
mov
lds
jno
cwtl
inc
sbb
call
jl
xchg
movb
xlat
lcall
test
or
inc
loopne
sbbb
and
cwtl
mov
adc
dec
into
inc
dec
idivl
pop
test
js
cltd
mov
cmpb
aam
aas
push
pop
sub
mov
cmp
mov
pop
mov
test
in
add
ss
push
mov
mov
je
dec
push
mov
scas
pushf
push
cltd
pop
iret
je
or
dec
psubw
jns
sub
sub
jge
cltd
mov
push
mov
lahf
mov
jl
out
dec
lahf
adc
push
push
pop
std
bound
dec
int3
xor
dec
jg
int3
xor
and
in
add
lss
cmp
lods
adc
sti
je
jnp
int
xchg
imul
loop
test
fsub
out
cmp
ret
mov
loope
iret
mov
je
cli
test
fldl
inc
je
mov
dec
jns
ljmp
and
push
mov
fs
leave
jb
ljmp
ds
mov
cmp
int3
push
jb
push
jmp
imul
data16
mov
rcrl
cltd
subl
jge
sub
and
sbb
jmp
jno
mov
jbe
mov
call
sbb
cltd
jne
fimuls
pop
push
cmpsb
or
sahf
xor
pop
aas
call
dec
imul
jp
sbb
add
fnstcw
mov
imul
jmp
dec
sub
divb
mov
movsl
lcall
mov
cs
sbbb
mov
js
jno
push
lods
fsubrp
xor
and
cltd
mov
or
sbb
lret
sahf
aas
rolb
rolb
stc
and
fsin
inc
or
mov
push
add
lods
add
scas
faddl
adc
inc
jle
sub
dec
in
data16
cli
inc
xorb
adc
lods
dec
xchg
rcll
fmuls
adc
cwtl
inc
xor
mov
cmp
mov
pop
push
jp
and
cld
nop
mov
cmpsb
or
and
test
sbb
call
das
jp
xchg
mov
ret
cmp
jnp
xchg
scas
sub
adc
faddl
insl
jecxz
jo
and
jnp
scas
in
adc
dec
dec
xor
push
pop
adc
out
mov
movsb
scas
xchg
lret
mov
scas
push
fidivrs
mov
cmp
cmp
mull
cmp
popa
scas
cltd
mov
test
or
jmp
or
fwait
mov
sbbl
mov
inc
stos
adc
cmpsl
int
mov
mov
xchg
sub
sbb
xor
sub
fldcw
fstpt
lock
adc
ja
cmp
inc
clc
out
aad
mov
and
sbb
mov
push
push
es
fadd
pop
icebp
cmp
cltd
out
pop
mov
adc
adc
xor
sub
sahf
mov
fsubs
dec
jmp
addr16
inc
mov
stos
imul
xor
outsb
dec
or
pop
sbb
stc
fadd
arpl
int
mov
std
inc
ljmp
sbb
cmp
ds
aaa
jno
lea
popa
std
std
sub
inc
jo
sub
cmp
enter
sub
sbb
adc
adc
int
xor
pop
popf
pop
cltd
shll
xchg
jl
nop
mov
popa
shll
leave
rcrb
xchg
movsb
xchg
jmp
and
sub
cltd
add
pop
movsb
decb
insb
stc
scas
shlb
scas
xchg
imul
xor
cmpb
lods
jbe
sbb
repz
sub
lock
and
pop
pop
je
fisttps
rcr
lea
jne
pusha
or
mov
mov
cmp
cmp
xchg
cmp
jg
xor
jp
mov
lahf
jl
dec
das
xchg
cs
aas
jbe
sub
dec
out
or
inc
mov
icebp
hlt
mov
add
fisttpl
stc
sbb
leave
xchg
mov
mov
mov
movsl
push
add
push
and
lret
xchg
xor
sbb
aaa
push
mov
xor
adc
xor
int
movsb
push
pop
push
jmp
test
imul
push
shrl
fists
jp
ljmp
imul
fistl
adc
aam
xlat
jp
add
push
and
test
js
push
push
js
or
std
push
jbe
aam
lret
mov
sbb
and
or
push
pop
adc
or
lea
mov
stos
push
cmc
in
xor
mov
mov
popa
sub
pop
adc
cmp
mov
push
xor
mov
test
pusha
mov
sbb
int
add
addl
cmpsl
or
xlat
aam
mov
and
sub
daa
lahf
icebp
mov
sbb
jle
lea
xor
icebp
jns
push
flds
adc
bound
mov
stos
jg
mov
imul
inc
or
in
aam
fwait
mov
jbe
insb
inc
xor
xchg
popa
sbb
out
inc
sub
daa
aas
les
mov
or
sub
xor
fnstenv
imul
repz
and
dec
std
inc
xor
and
lcall
and
adc
int3
mov
aas
imul
loope
and
fiadds
push
mov
imull
mov
lret
jnp
xor
inc
fnsave
popa
mov
fcmovnu
pop
dec
sbb
push
xor
jb
inc
mov
test
push
and
je
sbb
cmp
pop
inc
jge
stc
cmp
push
and
call
lods
gs
jno
insl
jo
jo
mov
dec
pop
cmp
fildl
adc
data16
call
and
aas
jno
cmp
jmp
or
shll
imul
dec
dec
xor
pop
cmp
lea
aam
int3
push
arpl
xchg
js
mov
push
out
push
xor
mov
test
test
int
xor
add
sti
enter
sti
jge
pop
leave
ret
jno
sub
jb
loopne
dec
xor
mov
loopne
cmp
cmp
mov
cmp
pop
imul
jno
insl
inc
imul
jne
in
pusha
stos
sti
lds
cltd
lods
mov
xor
or
mov
mov
jle
mov
mov
mov
add
scas
pop
xchg
inc
cltd
mov
sbb
add
shlb
pop
leave
push
ja
inc
cmp
lods
test
gs
lods
mov
sbb
inc
enter
cmp
rorb
div
dec
cs
pop
fwait
in
push
pushf
ja
jo
cltd
dec
push
push
lds
add
stos
dec
repnz
or
pop
lods
push
xchg
jecxz
sub
arpl
fldt
xchg
in
mov
inc
shll
dec
xor
insl
or
mov
push
cs
hlt
pop
mov
pop
dec
cmp
in
cmp
loopne
call
adc
mov
sbbl
inc
test
les
scas
sbb
cmp
mov
cmp
lret
movsb
iret
mov
or
daa
cmp
pushf
out
mov
imul
adc
or
sbb
inc
cmp
xor
imul
push
lds
cmp
lods
outsl
aam
and
jp
ret
sbb
xor
dec
cs
movsb
dec
icebp
clc
push
xor
inc
bound
xchg
cmp
adc
xor
cmp
fisttps
push
xor
or
cmp
insl
lahf
cmp
cmp
inc
dec
dec
dec
inc
int
daa
lea
mov
push
int3
adc
inc
sub
es
cmp
lds
sbb
jmp
dec
jl
outsl
call
add
cmc
lret
adc
imul
sub
mov
ss
jl
fwait
jg
push
sub
jns
mov
pop
jne
cld
or
sbb
rorb
daa
mov
pop
xchg
dec
xor
or
xor
xchg
fcmovnb
arpl
movsb
test
sbb
aaa
pusha
mov
jb
inc
mov
mov
mov
mov
pushf
lea
cmpl
or
insb
test
add
pop
jmp
int3
insl
jmp
cs
js
inc
push
pop
imul
add
jnp
jg
push
cmpb
popa
filds
pusha
arpl
xchg
mov
jno
cmp
cmp
or
mov
or
pop
lea
icebp
call
popf
int3
jl
add
into
fcomp
add
dec
mov
sub
movl
add
fists
adc
xor
add
mov
jge
les
dec
mov
adc
xor
andb
cmp
push
push
scas
jl
notl
lods
sbb
mov
push
inc
sbb
data16
push
jnp
mov
mov
mov
cmc
inc
jo
in
add
movb
rolb
sbb
lds
test
jb
js
sub
fstpt
and
loopne
xchg
jbe
loopne
scas
push
je
orb
fldenv
or
push
dec
jg
pop
imul
loope
cmpb
mov
mov
je
clc
xchg
jb
pop
cmp
jg
sti
cmp
nop
movsl
pop
enter
out
cmpsl
inc
mov
arpl
lahf
pop
adc
rcll
push
xchg
bound
xchg
idivl
mov
call
fsts
test
add
inc
or
int3
xor
in
pop
jle
arpl
mov
cmp
insl
scas
lahf
repz
xor
popa
lret
test
cli
inc
pop
loope
mov
jl
test
test
cmc
subb
jno
test
imul
call
jbe
push
inc
sbb
sti
adc
shlb
jle
jo
mov
sbb
cmp
pop
movsb
data16
outsb
ss
lods
jb
aaa
dec
lods
cmp
mov
xlat
inc
mov
and
addr16
lcall
sti
xor
addb
dec
ja
mov
adc
push
xor
leavew
push
cltd
call
fucomip
mov
fcoms
xchg
mov
xor
addr16
or
and
mov
sub
test
cmp
xor
scas
mov
jg
jb
pop
jnp
or
stc
popf
mov
rorb
dec
in
leave
fldl2t
or
cltd
dec
mov
sub
or
adc
push
push
inc
pop
imul
push
insb
fists
pushf
dec
out
xchg
cltd
jb
mov
scas
fcmovnb
shlb
lds
mov
rclw
aas
ja
push
loope
xchg
mov
mov
adc
and
mov
mov
jg
push
mov
cmp
ja
lahf
or
sti
loope
push
int3
add
cmp
pop
push
fs
add
xor
daa
adc
pop
std
mov
insb
dec
dec
or
mov
test
xor
mov
enter
lret
fistpl
pop
bound
popa
and
xchg
pop
sar
mov
mov
subb
push
movsl
jp
xor
dec
push
inc
cs
xchg
imul
mov
pop
and
stc
pop
fucomi
inc
jno
aad
fadd
insl
mov
stos
jns
jg
jno
test
xor
cs
xor
sar
mov
lds
adc
cmp
mov
push
sahf
jnp
mov
stos
xor
pop
mov
sub
xor
ret
ljmp
cmp
lock
stc
xor
iret
sbb
and
mov
jg
rcll
cltd
cmp
add
or
popa
jae
out
loopne
ret
mov
test
or
add
movsl
jbe
mov
dec
outsb
cmpsl
add
popa
ret
mov
icebp
sub
mov
cwtl
or
das
pushf
xor
cmp
cmc
pusha
dec
dec
shrb
jns
lods
inc
ss
movsl
xor
xor
pop
push
ds
sbb
xor
mov
call
adc
std
js
stc
inc
int
dec
pop
aas
iret
dec
xchg
sub
inc
add
add
jnp
test
push
add
inc
ret
xor
test
mov
jne
cmp
popf
sub
sbb
sub
cmp
fwait
nop
xchg
inc
sbbl
dec
addl
inc
gs
cmc
mov
inc
push
cmp
xchg
inc
pop
dec
cld
xor
push
pop
repnz
add
dec
xor
dec
daa
push
mov
ja
imul
sbb
jno
add
in
and
stc
movsb
int3
adc
sub
sub
popa
and
mov
dec
test
movsb
xor
or
stos
aad
fcmovbe
xlat
ss
shr
or
ja
aaa
lret
or
xchg
cmpsb
out
fsubs
movsl
jg
adc
aaa
pop
lahf
mov
lods
lret
ds
push
ret
mov
mov
in
push
popa
pop
into
call
cmpsb
mov
ret
js
cmpsb
mov
divb
mov
ret
popl
icebp
imul
pop
or
push
mov
cmp
mov
sub
xchg
sub
jle
pop
stc
leave
jecxz
imul
ja
push
andb
jbe
push
mov
or
and
movsb
rolb
lods
jnp
jmp
fnstsw
int
sub
mov
xor
clc
cmp
xor
pop
xor
lea
and
pop
insb
leave
test
xchg
and
cs
outsb
fdecstp
sbb
pop
mov
cmp
xchg
adc
fadd
inc
push
mov
inc
das
aas
sub
push
add
scas
or
shlb
test
leave
xor
icebp
sub
add
fbstp
daa
xor
dec
pop
jl
icebp
sbb
cmp
lods
jle
shll
mov
mov
dec
mov
add
out
jnp
push
cmp
pop
push
sub
cmpb
scas
leave
pop
scas
jg
or
xor
dec
pop
ja
jnp
arpl
adcl
xorl
out
aaa
inc
loope
mov
in
xchg
push
scas
pop
inc
cltd
or
jecxz
std
popf
cltd
int3
jp
lret
cwtl
mov
shrl
int3
sub
xchg
jge
stos
mov
subl
mov
test
xor
adc
cmp
aaa
test
cld
dec
adc
mov
push
cmp
xor
jmp
sbb
pop
jg
iret
xor
cmpsl
pop
pop
mov
cmp
push
test
and
mov
lock
jmp
xchg
lods
imul
jp
popa
pop
divb
push
xor
xchg
int
cmp
paddw
add
bound
divb
lahf
jl
cmpb
or
adc
jno
inc
mov
jnp
or
insb
outsb
cmp
gs
test
jge
fs
sbb
js
push
outsb
sub
movb
push
cld
fsubrl
bound
aaa
testb
aaa
cmpsb
test
aam
addr16
loopne
call
test
stc
sub
cmp
adc
scas
sbb
sub
imul
test
mov
mov
inc
jbe
scas
repz
mov
xchg
push
xor
lods
mov
add
in
stos
inc
repz
dec
mov
hlt
arpl
adc
xor
sub
mov
push
and
mov
inc
lea
popf
push
stc
inc
in
push
mov
ss
in
ja
data16
clc
sbb
jecxz
addr16
mov
push
pop
imul
repnz
mov
sub
dec
repz
xor
lods
popf
push
cs
lret
dec
push
stc
sub
mov
sarl
scas
cltd
popf
cmp
jne
imul
xchg
call
jno
out
out
insl
mov
test
sbb
movsl
mov
test
xor
adc
xorl
out
pop
stc
mov
xchg
dec
inc
clc
mov
imul
test
pop
daa
dec
sub
pop
movsl
sbb
pop
mov
push
mov
pshufw
push
pop
fistpl
imul
adc
lret
rcll
cmp
sbb
dec
icebp
xor
cmp
mov
sbb
pushf
jne
clc
pop
imul
outsb
sbb
imul
push
scas
sub
mov
stos
mov
pusha
daa
jno
dec
xor
xor
scas
das
stos
pop
inc
fwait
cmp
movsb
je
dec
cmpsb
ja
jp
pushf
cmp
aad
lods
push
arpl
lds
jae
push
cmp
sbbb
mov
lret
push
adc
cs
in
ja
insb
xchg
mov
mov
andl
pop
cmp
push
in
jns
xor
ss
xchg
mov
jge
push
mov
sbb
mov
cmpsb
popa
mov
dec
xor
cwtl
hlt
ljmp
shl
mov
jge
add
inc
loope
or
push
enter
sbb
sub
pop
mov
pushf
sbb
xchg
xchg
sahf
or
fimuls
jae
stos
insl
shr
and
sahf
pop
es
mov
cmpsb
sti
sti
adc
int3
negb
int
inc
dec
pop
dec
imul
es
mov
push
mul
call
mov
or
xchg
xchg
mov
jne
scas
cmpsb
xor
jl
mov
lcall
out
and
movsb
mov
aas
lock
and
imul
push
mov
cmp
ds
fld
lock
test
adc
mov
adc
enter
cmp
aas
or
scas
cmp
xor
mov
popa
lea
adcl
insl
mov
insl
mov
cwtl
mov
jns
sarl
sub
rcll
pop
xor
shlb
cmp
mov
add
icebp
imul
dec
cltd
adc
jmp
fyl2xp1
cmp
mov
enter
dec
push
test
js
inc
mov
stc
cmp
adc
and
mov
push
xor
sub
shlb
sub
xor
aaa
aas
lcall
xor
loope
sahf
or
imul
rep
push
inc
xchg
mov
jb
push
mov
push
ljmp
add
dec
adc
push
ror
mov
jno
imul
les
mov
aad
push
rolb
in
leave
icebp
adc
push
xor
jnp
fstps
pop
push
pop
push
xor
rorl
cmp
shrl
fstpl
iret
mov
xchg
ret
aad
test
cmp
adc
shll
outsl
jp
outsl
in
negb
push
cmp
cmp
jp
imul
mov
add
jno
mov
dec
rolb
jmp
inc
add
nop
adc
lcall
aam
pop
ja
pop
mov
arpl
jno
rorb
and
pushf
aas
push
or
mov
inc
or
imul
lret
bound
insl
out
andb
jmp
or
or
inc
shrl
cmp
leave
mov
cmp
and
int3
add
pop
jge
pop
xor
jg
aad
stos
pushf
cmp
sbb
mov
lock
icebp
xor
adcb
dec
shlb
cmp
test
xor
push
out
cmpsb
sub
loope
out
push
aas
jnp
cmp
add
adc
lea
dec
leave
inc
inc
mov
push
mov
lret
pop
add
test
dec
push
mov
xor
lods
popf
imul
mov
mov
push
mov
mov
sarl
fldcw
and
pop
jnp
shrl
or
cmp
cmp
or
leave
data16
mov
push
xor
jecxz
push
mov
lret
pop
iret
pop
sbb
xchg
dec
into
lcall
shrl
xor
out
inc
outsb
xor
xor
xchg
test
push
xchg
xchg
sti
and
int
subl
popf
dec
cmp
int
leave
imul
push
out
jp
xchg
sub
cmp
loope
lret
cmp
mov
mov
mov
push
fwait
mov
mov
movsb
rcl
jno
out
or
dec
cs
jns
mov
clc
stc
xor
xor
in
cmp
imul
int
cmp
je
imul
push
mov
and
sub
mov
fistl
lret
imul
jmp
jno
xchg
xchg
mov
int
jg
leave
cmp
imul
test
push
inc
adc
inc
in
cmp
cmp
fnstcw
jecxz
mov
inc
call
test
into
mov
lea
mov
push
or
popa
cmp
fldenv
stos
adc
mov
jmp
inc
rcrl
in
sarl
jno
fcmovnbe
xchg
add
ja
in
iret
icebp
push
mov
cmpl
sbb
insl
xor
in
imul
mov
imul
imul
lcall
cmpsl
loop
pop
mov
mov
jne
mov
lcall
shlb
mov
dec
pop
jmp
adc
jmp
xor
stc
cmp
insl
mov
or
out
hlt
xor
cmp
or
dec
xchg
lods
xor
imul
or
fnsave
std
inc
mov
xor
cmp
leave
orl
dec
push
dec
inc
xchg
dec
stos
pop
cmp
xor
inc
and
movsl
cmp
xor
inc
por
cmp
xor
inc
jmp
aad
mov
adc
aas
bnd
and
dec
mov
mov
xor
aas
jno
xchg
xor
inc
pop
jmp
cmp
push
inc
addr16
cmp
xor
cmp
sub
inc
mov
mov
cmp
lea
mov
pop
sarl
or
loop
loope
aad
mov
loope
lea
imul
ficompl
cmp
pop
cmpsb
imul
xor
and
aas
push
inc
sahf
jmp
cmp
xchg
mov
mov
cmp
daa
xchg
pop
sbb
stc
stos
aas
jns
add
push
inc
aad
mov
int
shr
cmp
xor
inc
popf
jmp
inc
cmc
mov
pop
jno
insb
shlb
and
cmp
out
aas
mov
mov
cmp
push
inc
dec
jmp
inc
inc
xchg
mov
in
and
xlat
inc
repnz
loope
pop
jb
jno
test
mov
mov
or
std
push
in
addr16
cltd
test
cmp
jle
mov
xor
sbb
aas
mov
adc
rolb
sbb
sub
cltd
aaa
jae
insb
stc
mov
cmp
imul
lods
dec
cltd
pop
adc
imul
jbe
mov
jno
cwtl
sbb
cmp
sub
mov
andl
jg
pop
mov
mulb
lea
cli
cmp
sub
or
push
icebp
fldt
vprotw
jno
fxch
pop
outsl
subl
add
cwtl
adc
fbstp
ss
aas
jno
push
mov
xor
or
xchg
or
mov
dec
sbb
cwtl
mov
lret
in
cmp
movsl
lret
and
add
jno
nop
cli
das
fdivrs
mov
aad
test
movsl
pop
ret
outsb
stc
sub
cmpsl
mov
xchg
lods
sbb
pop
push
stos
cmp
js
daa
jmp
pop
add
insb
xchg
dec
outsl
test
lock
cmpl
or
mov
jg
jns
jge
popa
mov
ds
mov
jnp
mov
dec
jbe
das
gs
push
push
pop
jne
loopne
cmp
and
add
stc
xor
insb
add
in
outsl
jnp
sbb
dec
xor
dec
js
dec
outsl
jmp
std
add
test
xchg
cli
pusha
insb
push
stos
and
inc
pop
xor
std
data16
mov
mov
mov
and
or
mov
cmp
fs
sub
dec
rcrl
out
loop
sbb
int
xchg
or
lods
jns
insb
ret
pop
popa
imul
sbb
int
fiadds
mov
mov
addr16
clc
cmpsl
or
mov
mov
jbe
test
or
std
cmp
xchg
insb
dec
jnp
rcll
pop
ret
and
xchg
subb
lcall
pop
mov
cmp
push
adc
push
mov
mov
arpl
rcrl
xor
jno
imul
sbb
jg
add
imul
or
mov
sti
dec
popa
rclb
push
cmp
xchg
mov
mov
bound
sbb
hlt
clc
cmpl
cmpl
mov
clc
push
mov
push
not
inc
adc
inc
push
xlat
lcall
lcall
das
lret
cmp
out
and
mov
out
jno
aad
mov
std
mov
imul
int
inc
push
jns
or
mov
cmp
dec
dec
push
pop
imul
stos
pop
jns
stos
pop
push
dec
incl
cmp
xchg
inc
or
jns
pop
push
cmp
jno
dec
pop
imul
test
lea
pop
xor
je
insl
icebp
pop
dec
imul
in
jnp
or
inc
jnp
sbb
pop
mov
imul
movsl
repz
stos
stos
and
shrl
sahf
adc
mov
mov
xor
test
or
inc
xchg
loope
rorb
rdpmc
add
int
jae
pop
mov
movsbl
jmp
jno
mov
mov
pop
sti
and
test
sbbb
fldcw
lret
xor
pop
fisttpll
push
cmp
icebp
mov
jno
out
inc
icebp
xor
data16
sti
cmp
jae
cmp
icebp
mov
addr16
stc
xor
push
cmp
addr16
sbb
out
and
adc
xchg
test
mov
jg
mov
leave
sbb
push
sub
sbb
stc
adc
lret
loope
inc
addr16
orb
push
xchg
out
mov
lods
arpl
mov
loopne
loop
inc
cmp
pop
data16
push
cltd
inc
fstpl
sub
xor
scas
mov
jno
jnp
cmp
jmp
jg
mov
pop
mov
iret
sub
push
mov
in
fs
push
push
mov
in
mov
lret
fstl
cltd
scas
iret
xor
push
mov
pop
mov
or
int
mov
inc
sub
jmp
mulb
dec
lea
pusha
cmp
adc
out
pusha
xchg
xor
mov
dec
mov
test
jmp
imul
xchg
push
lret
fcmovb
mov
scas
rcll
or
mov
xlat
jmp
imul
push
push
cmp
popa
inc
jbe
andl
cmp
pop
push
jb
push
movsl
cmp
push
add
movsl
in
cwtl
adc
jno
scas
mov
xor
xlat
pop
mov
int
jg
loope
sbb
pusha
push
push
fcoms
and
or
dec
xor
push
fmuls
imul
xchg
sub
cmp
mov
jmp
cmp
icebp
dec
dec
loope
xor
jno
fists
int
mov
inc
inc
push
mov
xchg
fsubrs
stc
inc
xchg
and
dec
mov
sub
cmp
imul
inc
cltd
jns
add
dec
mov
or
cmp
add
or
lods
jns
mov
cmp
int
xchg
xchg
jle
inc
xor
jno
mov
andl
loopew
sbb
xor
dec
pusha
sar
lea
pop
icebp
cmp
xor
int
imul
push
rol
xchg
cmp
mov
inc
mov
icebp
cltd
idivb
inc
ficompl
pop
fcoml
xor
out
or
hlt
mov
mov
or
mov
or
dec
xor
and
add
push
decl
mov
or
dec
xor
pop
or
push
mov
lret
add
lcall
popa
in
sbb
adc
loope
es
sub
int
clc
lock
push
and
pushf
mov
jne
out
jp
xor
or
int
sbb
or
mov
test
mov
lea
push
cmp
xor
push
dec
push
lea
in
push
lea
imul
inc
ffree
test
mov
add
cmpsl
hlt
aas
cmp
jns
jno
jge
mov
cmp
das
imul
ljmp
es
imul
pop
cmp
or
push
arpl
int
inc
push
xor
test
fmull
xchg
push
shll
js
je
mov
or
jno
outsl
mov
pop
push
xor
aad
les
int
push
ds
push
stc
mov
lcall
je
fisubrs
cmp
jae
pusha
xchg
cmp
mov
cmp
leave
lea
addl
cmp
jno
dec
in
cmp
cmp
push
xor
int
fucomi
cmp
cmp
mov
push
pop
inc
out
sub
int
jno
and
inc
mov
std
dec
mov
add
push
mov
stc
adc
cmp
fidivrs
adc
inc
loope
jnp
imul
push
addr16
inc
push
sbb
ret
adc
inc
jae
addr16
lret
pop
push
xor
ss
push
jle
and
add
pop
out
call
out
or
add
or
cli
mov
jmp
dec
out
call
mov
ror
lret
jns
test
test
pop
jns
pop
movsb
in
xor
cld
dec
mov
test
rcll
loope
xchg
push
stos
pop
jecxz
adc
jno
xor
dec
popa
sbb
jno
mov
fistps
add
fbstp
cltd
pop
inc
mov
sub
inc
xchg
rcll
jno
and
ljmp
jecxz
push
and
sarl
xor
ret
rorb
dec
jbe
ss
mov
test
xor
mov
pop
xor
cmp
inc
mov
sbb
mov
push
lret
push
popa
mov
xor
icebp
jno
and
mov
jle
fnclex
cmpsb
in
int3
pop
push
jmp
xchg
mov
pop
fsts
out
mov
mov
scas
pop
xchg
adc
jno
imul
push
cmp
shll
jl
jno
xorl
iret
js
mov
mov
inc
mov
daa
xor
push
int
inc
mov
lret
sbb
mov
roll
imul
push
dec
lahf
jp
loope
fistpll
subl
mov
lret
or
shll
adc
repz
cmp
into
cmp
adc
mov
leave
andl
adc
jnp
rcrl
cmp
jno
inc
int
pop
test
jbe
xor
fisubs
jge
dec
dec
adc
mov
cmp
icebp
cmpsl
cmp
push
test
jno
into
fsubrp
gs
push
add
mov
in
push
mov
test
cmpl
sub
mov
push
ret
adc
cltd
or
pop
popa
lea
and
outsl
jno
aaa
mov
add
das
inc
mov
mov
lret
addl
push
cltd
xchg
inc
imul
scas
rcl
dec
adc
and
cmp
xchg
pop
cmpsl
mov
test
insl
aaa
xchg
popf
sbbl
icebp
cmp
ss
cmp
cmp
mov
cmp
xor
jl
push
push
jg
mov
popa
imul
xchg
scas
roll
jns
iret
mov
fnstcw
bound
mov
cmp
imul
sbb
int
addr16
lods
xchg
imul
dec
mov
out
roll
push
mov
sub
ret
pop
mov
xchg
outsl
xor
shll
mov
mov
insb
xlat
push
mov
or
push
push
icebp
cmp
sbb
push
cli
xchg
enterw
cmp
mov
and
popa
or
jbe
pop
cmp
dec
mov
sbb
test
or
pop
loope
adc
mov
add
loope
mov
sbb
xor
inc
icebp
add
sub
lahf
add
jno
mov
icebp
out
mov
jns
cmpsl
xor
adc
jecxz
test
jmp
push
xor
jmp
insb
test
addr16
jne
add
movb
jp
dec
movsb
cld
dec
ds
jno
inc
orl
jecxz
cli
int
lea
jno
movsl
add
fstpl
pop
mov
push
xchg
mov
push
xchg
mov
pop
iret
mov
outsl
shrl
sub
add
fnstcw
stos
inc
pop
insb
rcr
ja
pop
insb
pushf
gs
jo
mov
fstps
sub
add
cmp
cli
test
iret
pop
mov
lret
inc
pop
imul
imul
inc
loop
cmp
mov
pop
ja
inc
int
sbb
adc
movsb
mov
test
mov
cmp
jbe
and
fistpll
push
in
cmp
lea
mov
mov
das
mov
scas
xor
cmpsl
cmp
inc
mov
mov
mov
adcb
orl
js
mov
push
rorb
adcl
sbb
ret
pusha
jbe
xor
clc
xor
or
cmp
push
ljmp
or
jo
lods
sub
and
jno
clc
jno
imul
ja
in
pusha
outsl
shrb
insl
mov
mov
outsl
ljmp
in
pusha
add
jbe
push
jno
in
fyl2x
push
sub
mov
jg
incl
in
movsb
shrb
and
cmp
imul
orl
imul
ret
sub
lods
dec
mov
mov
insl
pushf
les
or
sub
icebp
dec
fiaddl
pop
jns
imul
idivb
jb
dec
add
mov
loopne
inc
mov
insb
xchg
jnp
xor
mov
in
lock
jne
aas
cmp
mov
jl
int
pop
dec
flds
call
mov
pop
dec
jno
push
mov
jmp
sti
add
imul
mov
push
jecxz
int
push
ret
mov
pop
imul
fnstcw
test
cmp
mov
imul
push
xchg
push
mov
jno
ljmp
imul
cmp
mov
jno
lea
jp
push
dec
cmp
lcall
fisubrs
icebp
icebp
imul
js
dec
jne
pop
mov
out
pop
out
mulb
pop
lret
add
addr16
pop
repz
pusha
ss
jge
rcrb
mov
arpl
mov
push
or
lods
cmp
jne
rolb
pop
jecxz
aam
mov
xorl
cmp
clc
popf
ljmp
icebp
lea
mov
inc
test
jp
lahf
ss
mov
data16
leave
add
mov
aad
arpl
gs
mov
imul
nop
xor
push
imul
push
push
inc
sbb
jecxz
into
mov
push
mov
xor
dec
push
xchg
or
inc
pop
insb
and
ja
gs
cwtl
xchg
aas
mov
in
or
mov
adc
sub
sub
mov
or
push
idivl
dec
in
stos
adc
ret
jno
mov
cli
leave
mov
mov
mov
xor
adc
xchg
shll
inc
cmp
lahf
xor
popa
jmp
test
add
je
add
push
jmp
int
mov
xorb
mov
fwait
rcll
fwait
xor
inc
dec
dec
icebp
repnz
ljmp
mov
push
fwait
scas
imul
outsl
and
push
cmp
ficoms
mov
push
roll
adcl
dec
aaa
and
xchg
je
xor
movsb
and
rorl
pop
mov
sub
in
leave
cmp
sbb
push
or
jp
inc
dec
pushf
and
mul
inc
mov
fildll
mov
mov
outsl
add
mov
frstor
imul
out
fsubs
pop
xchg
push
loope
mov
iret
adc
push
mov
movsl
cmp
dec
xor
pop
out
ljmp
mov
fs
cmp
cmc
stos
addl
sub
cmp
movsl
push
jbe
and
xchg
sub
dec
dec
ljmp
jns
rcll
xchg
cmp
mov
or
adc
or
insb
sarl
or
dec
mov
mov
lods
cmp
lea
pop
icebp
push
mov
mov
lods
pushf
pop
add
inc
mov
scas
adc
mov
bound
mov
push
call
sarb
push
sar
insb
dec
arpl
pop
stos
mov
imul
push
in
xor
jne
stc
cltd
add
xor
or
jmp
dec
xor
pop
dec
jno
sbb
or
cmp
sbb
es
jns
jbe
test
xchg
mov
stos
test
cmp
cmp
movsl
cmp
push
stos
inc
les
imul
test
imul
inc
mov
cmpsl
icebp
mov
addr16
movsl
icebp
jmp
pop
filds
int
arpl
popa
jg
mov
cmpl
sbb
test
test
adc
pop
mov
xchg
lea
test
cmp
addr16
loope
addr16
dec
inc
xor
cmpsb
cltd
out
jp
cmp
push
mov
icebp
xor
dec
aam
sbb
andb
fstps
sbbb
jno
shl
loope
js
iret
or
xorb
jnp
test
push
jmp
sub
mov
xchg
cmp
pop
stc
data16
sbb
cmp
test
negl
lahf
cmp
dec
cmp
cmp
pop
mov
xchg
int
or
int
cltd
push
lods
imull
cmp
xor
fisttpl
decl
insb
push
jge
inc
pop
divl
push
fidivrs
scas
cmp
sub
fistps
xchg
data16
loope
mov
inc
popf
pop
cmp
push
imul
push
cmp
push
cmp
cmp
cmp
lea
jns
mov
sbb
xchg
imul
mov
xor
push
data16
out
shrl
push
inc
pushf
cli
push
inc
inc
sbb
mov
and
js
leave
push
xchg
mov
jno
rcrl
or
ss
cmp
mov
imul
fnstcw
je
stc
cwtl
xchg
adc
push
hlt
sahf
mov
mov
fnstenv
ja
xchg
xchg
pop
lea
mov
pop
cmp
cmp
jns
addr16
icebp
pop
inc
mov
dec
push
inc
stos
cld
push
icebp
mov
insw
aam
push
inc
mov
jbe
mov
data16
mov
cmp
divb
out
in
mov
lock
popf
lret
mov
stos
cmp
and
lret
dec
xchg
dec
pop
cmp
mov
imull
sbb
orb
lods
jns
xchg
mov
pop
negl
scas
mov
sar
stos
inc
xchg
std
jno
movsb
cmp
int
jge
pop
pop
xchg
mov
movsl
test
pop
mov
lea
popa
int
rcll
aad
mov
pop
push
mov
push
adc
mov
cmp
or
subl
sub
addr16
negl
sarl
jecxz
cmp
pop
or
pop
inc
cmp
int
les
jno
cmp
loope
lret
ds
mov
mov
dec
aad
push
pop
out
and
dec
imul
pop
push
or
mov
ret
cwtl
mov
ds
inc
push
xor
cmp
push
ljmp
mov
sub
mov
jae
adc
imul
mov
xor
int3
cmp
lods
mov
scas
rorl
arpl
inc
or
push
ja
roll
stc
pop
jbe
cmp
inc
lea
mov
mov
cmp
lret
cmp
mov
push
dec
xchg
xor
sbbl
pusha
lahf
mov
addr16
mov
pop
jp
loopne
cmp
aas
mov
pusha
or
xchg
pushf
loope
data16
mov
dec
stc
push
adcl
sbb
push
push
mov
xor
popf
dec
lret
and
xchg
mov
and
mov
or
ss
adc
adc
cmp
sahf
mov
push
test
jmp
les
pop
std
sub
inc
or
lahf
mov
push
or
jno
xor
ror
mov
ja
cltd
out
cmp
or
mov
decl
outsl
mov
stos
xlat
cmp
mov
jnp
lret
cmp
cmp
adc
push
pop
or
decb
jg
jge
xor
or
or
mov
setae
jno
js
cld
dec
shll
or
pop
mov
jle
jno
push
dec
adc
push
mov
pop
jbe
jno
and
aas
ret
clc
or
sbb
cmp
mov
add
negb
arpl
insb
lds
cmp
cwtl
stc
rcl
jp
out
cmp
ja
jge
cmp
and
std
xor
lcall
lea
sbbl
pop
or
icebp
clc
mov
fldt
xorb
mov
icebp
mov
dec
jnp
pop
insb
xchg
mov
sub
stc
gs
mov
mov
icebp
ljmp
fcmovnu
ss
or
icebp
jbe
pop
popa
mov
test
js
insb
jmp
sub
jno
cltd
mov
or
jns
and
or
pop
outsb
repz
sub
test
mov
lods
sbb
std
scas
mov
cmp
lcall
pop
pop
inc
mov
fimull
jns
mov
popa
inc
outsl
sbb
mov
jno
push
sbb
stc
xorl
lods
and
jecxz
or
sub
and
loopne
mov
adc
dec
push
stos
cmpsl
and
cmp
js
cmp
add
jb
pop
mov
imulb
and
push
mov
jge
cmp
and
xlat
movsb
mov
mov
test
ret
aad
cmp
lcall
push
jmp
ljmp
ret
popa
xlat
mov
inc
dec
int
push
mov
xlat
popa
sub
dec
jnp
mov
sbb
or
push
mov
loop
stc
cmp
rorl
rcr
add
jmp
outsl
mov
sti
add
std
dec
jp
insb
mov
cs
dec
push
inc
sub
cmp
xor
popa
or
lea
xor
xchg
cmp
xor
gs
cli
adc
sub
cmp
mov
sub
mov
mov
cmp
push
xchg
add
mov
xor
fldl
jp
mov
outsb
sub
int
jmp
adc
xchg
out
out
jge
xchg
mov
push
sbb
out
addr16
push
xor
sub
fidivrs
test
call
add
jmp
in
mov
leave
daa
cli
mov
insb
sub
xchg
lea
enter
push
lcall
pop
add
addr16
dec
les
call
cmpb
pushl
jmp
add
dec
jae
imul
popa
bound
add
add
add
inc
jne
insb
imul
outsb
fs
add
add
jb
outsb
push
outsl
inc
insb
imul
lea
jle
push
lea
je
btr
rcl
adc
sub
mov
neg
test
add
inc
mov
call
add
inc
gs
outsl
jb
addr16
jne
fs
imul
add
je
jb
outsl
arpl
fs
js
push
add
add
jo
inc
imul
gs
gs
dec
gs
imul
inc
push
je
dec
push
add
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
cmp
add
je
outsl
insb
jns
imul
add
inc
gs
jne
jae
jb
outsl
jae
not
jmp
call
sub
movl
cmp
sar
movzbl
lea
add
cmc
sub
cmc
cmc
jmp
and
cmp
add
sub
clc
call
add
dec
outsl
popa
fs
imul
add
je
jb
jbe
je
push
jb
imul
imul
enter
call
jmp
add
push
push
dec
outsl
je
data16
arpl
inc
add
add
mov
push
gs
imul
js
inc
add
test
call
ror
cmc
mov
pushf
sub
jmp
jmp
add
inc
popa
insb
insb
push
imul
outsl
arpl
lea
je
shrd
bsr
lea
sub
pushf
lahf
mov
sar
cmc
jmp
stos
sbb
xor
or
lcall
cwtl
adc
and
and
pop
test
sbb
dec
mov
inc
sbb
std
cmp
icebp
lods
hlt
mov
fwait
inc
sub
inc
dec
mov
out
loope
in
gs
mov
das
insb
enter
cwtl
jns
mov
push
not
cs
orl
xchg
test
xor
push
mov
lock
rolb
xor
lods
sti
xor
adc
cmpsl
ljmp
dec
inc
dec
inc
push
add
push
pushf
movb
rep
jmp
in
popf
test
mov
lods
imul
jne
mov
insl
mov
subl
insl
mov
xorl
insl
popf
test
mov
lea
cltd
mov
mov
jno
cmp
cmp
mov
lea
ja
clc
add
cmc
or
sub
stc
dec
bswap
add
bsr
rcr
bt
mov
mov
clc
mov
stc
clc
call
add
push
gs
imul
outsb
addr16
add
add
jbe
dec
jne
push
jb
jo
jb
dec
gs
fs
jmp
movb
movl
pusha
pushf
pushf
mov
lea
jmp
sub
mov
pushl
lea
jne
jmp
filds
mov
mov
adc
add
dec
xchg
jle
mov
call
lcall
daa
sti
xchg
inc
xor
rorl
push
mov
stos
subl
shrl
arpl
outsb
xchg
insl
lds
orb
arpl
shlb
dec
and
or
mov
stc
xor
out
lret
xor
dec
in
cmp
inc
cmp
cmp
push
xchg
push
inc
inc
xchg
out
sbb
jb
aam
iret
js
xchg
outsb
cmp
xlat
add
int
cmp
movsl
fwait
push
mov
enter
repnz
dec
adcb
into
loope
push
mov
sub
shll
sbb
subl
sub
mov
adc
add
insb
outsl
arpl
imul
xor
pushf
clc
jno
insb
mov
test
and
sub
xchg
xor
aaa
cmp
cmc
or
jp
mov
std
and
xor
mov
popa
in
or
mov
lcall
jbe
cmp
mov
and
int3
push
jl
mov
mov
dec
scas
or
sahf
aam
push
jns
pushl
sub
cmp
pop
sar
xchg
sub
fs
add
xchg
adc
push
pop
mov
mov
stc
mov
test
cld
xchg
cmp
dec
pop
int
imul
pop
push
popa
xor
bound
test
add
sub
popf
daa
adc
fcmovnb
mov
sbb
cli
fdivr
stos
xlat
dec
cmp
lods
push
pop
popa
call
js
push
cmp
inc
shlb
jl
js
and
in
out
fdivl
add
mov
mov
sbb
scas
mov
mov
ja
movsb
into
pop
mov
inc
shl
sub
pop
std
std
xorb
popa
cmp
dec
lods
into
mov
add
pop
std
ss
in
pop
pushf
lea
or
mov
dec
dec
lods
and
aam
pop
int3
add
out
xlat
es
test
and
pop
mov
inc
ss
inc
in
xchg
push
cmpsl
xchg
mov
fwait
push
adc
andb
rorl
fs
jae
pusha
cmp
sub
pushf
call
jns
ds
xor
cmc
mov
inc
push
cmpsl
xor
and
stos
movsb
mov
cmp
mov
xor
repnz
cmc
mov
push
rcll
icebp
sbb
cmp
scas
cwtl
sub
insb
push
dec
sahf
mov
ljmp
mov
xor
out
jo
in
inc
shlb
aaa
xor
dec
dec
xchg
decb
inc
xchg
sub
push
es
cwtl
aad
imul
cld
pop
mov
pop
rcrl
xor
mov
mul
imul
adc
sahf
into
lea
daa
cs
sub
mov
js
pop
mov
inc
sti
movb
fmul
push
mov
nop
sti
fisubrs
jecxz
jnp
lret
cmp
inc
or
mov
ret
mov
dec
bound
inc
xchg
in
fsts
pop
je
add
push
bound
push
addb
incl
adc
movsb
cmp
scas
rcrb
pop
rcrl
push
mov
in
lds
inc
pop
jns
cltd
add
test
dec
pop
arpl
daa
push
jo
aam
xchg
pop
pop
add
loopnew
push
push
push
call
or
jmp
adc
jae
insb
je
push
cmp
cmp
cmp
ds
sti
sbb
xchg
fmuls
ds
push
out
lret
sbb
and
call
mov
arpl
adc
add
outsl
bound
dec
outsl
arpl
mov
shl
mov
bt
call
lods
lock
ja
mov
ljmp
add
fadds
mov
nop
xchg
or
and
es
lock
inc
or
lods
sbb
and
and
je
out
insb
add
movsb
jns
xchg
mov
jecxz
add
fcmovu
roll
and
test
in
cmpl
sbb
std
mov
fldt
popf
inc
mov
pop
sbb
sbb
cmc
dec
mov
cmp
dec
aad
iret
and
mov
xor
sar
out
testl
or
ljmp
xor
sar
and
pop
cs
shl
out
imul
clc
xchg
into
movb
push
xor
loop
sti
xchg
inc
push
cld
pop
pop
test
nop
ja
call
mov
cmpsl
jecxz
rcll
lcall
aam
xchg
out
jnp
sbb
rorl
daa
and
jmp
ficoms
pop
jecxz
add
je
jns
je
insl
dec
gs
imul
and
jbe
adc
pusha
mov
lea
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
jb
imul
popa
jae
inc
add
repz
pushf
test
add
movb
lea
jne
pushf
call
add
push
gs
fs
imul
int3
stc
incl
add
jbe
push
outsl
inc
js
pusha
push
pushf
movl
pusha
movl
pushf
lea
jmp
add
inc
gs
imul
inc
add
outsb
add
incl
mov
xor
ja
in
sahf
or
inc
insb
push
xchg
dec
lea
inc
cli
mov
mov
jmp
aaa
mov
adc
ja
mov
shl
xor
in
cmp
mov
xor
xchg
pop
dec
sub
or
into
jp
dec
rclb
lcall
inc
pushf
es
adc
cmpsl
pushf
xor
jp
cmp
dec
xor
cs
insb
add
lea
jae
cmc
call
add
dec
jae
popa
fs
outsl
fs
je
add
add
je
jne
jb
outsb
je
imul
jns
add
loopne
stc
jmp
sbb
lea
addl
imul
insl
frstor
adcb
sbb
jo
push
out
mov
push
mov
fprem
mov
and
adc
mov
lds
push
and
sbb
inc
dec
sahf
inc
cmp
mov
dec
push
cltd
add
lock
fld
xchg
inc
loop
ss
adc
xor
repz
movsl
xchg
sahf
out
sbb
sub
clc
loop
clc
shl
dec
push
addr16
pop
ss
leave
and
add
fmull
mov
fdivr
pop
std
notb
and
xchg
adcb
jmp
test
fisubrs
imul
ror
ss
ljmp
adc
push
dec
and
jns
fdivrp
jmp
test
test
inc
stc
jae
sbb
jp
fdivl
daa
lock
mov
inc
mov
push
test
imul
or
adc
enter
jecxz
cld
js
inc
jbe
or
mov
adc
mov
or
cmp
cwtl
out
xor
xor
mov
aas
jnp
mov
mov
jno
or
gs
pushf
subl
loope
lret
sub
sub
out
push
fisubl
shl
inc
xchg
sahf
push
push
out
mov
pushf
pushl
call
cmp
pushf
pusha
lea
js
jae
stc
cmp
call
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
push
jmp
movl
jmp
add
push
gs
imul
je
js
sbb
jp
jg
shr
mov
cli
nop
std
mov
cmp
xor
aaa
pop
out
lcall
stos
xchg
xchg
push
or
mov
and
je
mov
pop
movsl
xchg
xchg
xor
icebp
shll
cltd
and
lcall
pop
pop
fs
shlb
call
cmpsb
add
rcl
push
sub
xor
shr
or
and
add
mov
setp
lea
jge
stos
jmp
pusha
mov
jmp
rol
and
mov
call
add
inc
gs
dec
push
xor
add
push
arpl
gs
imul
je
js
add
push
gs
arpl
add
je
insb
je
add
insb
jae
jb
insl
jo
add
add
addr16
jb
popa
je
dec
gs
js
add
test
enter
add
bsf
shld
mov
jmp
inc
mov
pop
xor
out
jp
or
pop
fbstp
enter
xor
movsb
jl
or
inc
imul
rclb
daa
mov
fwait
xchg
fldt
std
or
inc
sub
loop
cmpsl
mov
xor
inc
js
popa
xchg
push
xor
in
cmp
pusha
movw
pushf
lea
jae
clc
push
cmp
call
add
dec
inc
dec
popa
jo
je
imul
or
cmpsl
outsb
jbe
das
push
dec
hlt
adc
lcall
cmpsb
cmp
adc
pop
push
add
xorb
jns
pushf
clc
adc
adc
aam
cmc
mov
adc
aam
or
push
mov
push
pop
popa
xchg
pop
jp
fldl
cltd
xchg
sbb
jg
stos
popa
loopne
inc
sar
sbb
dec
push
push
adc
xor
xlat
in
add
xchg
push
mov
push
inc
add
push
imull
pop
cmp
mov
jae
cmpsl
cli
subl
imul
mov
dec
add
inc
gs
push
dec
outsb
outsw
add
add
je
gs
popa
addr16
add
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
pusha
lea
jb
bt
cmp
jmp
lea
je
cmp
sub
push
cmp
push
pusha
lea
ja
cmc
pusha
imul
pushl
cmp
add
push
mov
lea
jmp
add
inc
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
sbb
and
pushf
sbb
clc
clc
dec
xlat
add
xor
call
mov
fcompl
cmp
sbb
std
pop
add
xchg
push
cli
stos
or
push
ret
adc
lret
cltd
cmc
mov
push
add
mov
mov
inc
mov
jge
xchg
mov
push
mov
jns
push
test
popa
jbe
dec
jne
inc
insb
outsl
jae
add
cld
cmp
incl
add
jo
jns
insb
imul
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
add
je
outsb
jne
je
je
add
add
imul
add
jo
jmp
aas
mov
cmpsl
inc
dec
fucom
xlat
and
mov
lret
sbb
lds
loopne
pop
test
pop
out
and
js
pushf
push
jmp
repnz
cltd
add
bound
pushf
xchg
rcll
or
cmp
xchg
cmpsl
inc
leave
sahf
rcll
xchg
loop
std
xchg
sub
sbb
mov
xchg
scas
movl
loop
add
push
repnz
dec
adc
pop
outsb
inc
jge
xchg
iret
adc
sti
repnz
mov
addb
or
pushf
or
aas
xchg
lret
push
fs
xchg
sub
dec
mov
fisttps
outsl
insl
js
pop
mov
xor
dec
adc
dec
mov
add
insb
loopne
pop
jo
loop
pop
and
jns
jns
cmp
cmc
pop
push
sub
outsb
push
push
and
ret
aaa
stc
jmp
pop
and
lea
jne
bswap
mov
jmp
push
movl
movb
movb
call
push
lea
je
call
add
inc
outsl
insl
bound
gs
outsb
add
dec
hlt
sbb
cmp
jmp
jge
hlt
and
push
lret
xchg
mov
rclb
das
imul
outsl
mov
xor
std
cmp
mov
popf
hlt
mov
push
loopne
sarl
scas
pusha
into
lret
cmp
mov
or
out
fdivrl
das
cwtl
fldenv
and
popa
sbb
jecxz
mov
xor
push
rolb
hlt
outsb
loop
sub
notl
fistpl
fbld
fsubrl
xchg
jg
test
call
add
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
cld
sbb
fdivrl
inc
lea
sbb
xlat
and
xor
jno
push
gs
or
out
nop
stos
ljmp
xchg
fwait
cmc
inc
xchg
mov
jl
pop
call
in
cltd
add
loopne
in
sub
sbb
test
sub
mov
mov
push
test
movsl
and
sub
iret
push
xchg
xor
aam
ret
xchg
sti
xchg
jae
fs
jne
sbb
scas
cmp
xor
xor
add
test
jnp
and
mov
lds
xlat
pop
mov
daa
pop
divl
es
push
adc
lods
pop
jae
mov
jl
cwtl
cmp
jecxz
dec
mov
mov
jae
cmp
sub
fimull
mov
cmpsl
pop
xor
jecxz
adc
std
ja
pop
loop
insl
push
inc
mov
inc
pushf
mov
and
sti
cld
fdivrl
adcb
push
cmp
push
test
out
or
xor
sub
dec
arpl
lcall
mov
cmpsl
repz
cltd
mov
add
imulb
xchg
mov
adc
dec
pop
sbb
mov
jge
lret
sbb
repz
in
test
sbb
dec
loope
adc
in
hlt
inc
int
out
fdivr
xor
mov
paddsb
xor
and
cltd
adc
jbe
jmp
cmpl
xlat
mov
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
add
je
outsl
jb
addr16
jne
fs
imul
add
popa
addr16
imul
inc
imul
outsl
jb
jmp
cmc
cmpb
jmp
add
inc
gs
imul
js
inc
add
inc
and
jnp
pop
aas
cli
incl
add
push
imul
mov
sbbl
insl
xchg
sub
inc
xchg
cmp
lret
js
xor
aad
out
mov
movsb
movsl
jecxz
push
cmpsl
cmc
sbb
xchg
cmc
shrb
inc
out
aad
jmp
add
mov
push
push
loopne
mov
pop
mov
and
jl
jb
sbb
sti
dec
push
and
bound
push
aas
sub
jo
fidivrl
mov
movsb
inc
shlb
insl
imul
gs
jb
dec
gs
fs
lea
ja
push
not
push
inc
jmp
add
ja
jbe
dec
jne
dec
jo
outsb
add
add
imul
imul
inc
outsl
jb
popa
je
add
add
insb
inc
imul
incl
add
push
jae
push
imul
arpl
add
add
push
imul
outsl
arpl
add
push
gs
imul
outsb
add
stos
push
adc
mov
imul
test
inc
lcall
or
push
jnp
xor
mov
inc
in
out
std
imul
cmpsb
or
je
loop
cmp
lret
leave
sub
sub
adc
adc
movl
sahf
fldt
inc
leave
pop
xor
push
pop
in
push
or
xchg
imul
mov
xchg
sbb
mov
mov
or
push
test
rorb
dec
es
fsubl
xor
stc
negb
mov
pop
cltd
test
sub
scas
shrl
pop
daa
add
add
xchg
xor
xchg
and
les
lret
or
sti
xchg
lods
cld
mov
add
out
pop
notl
push
test
iret
adc
sbb
addr16
in
cmpsb
pminub
pop
jl
fists
adcl
arpl
lret
xchg
in
ret
in
add
pushl
pushf
lea
jmp
pushf
mov
lea
pusha
pushl
pusha
lea
call
jmp
add
inc
jb
popa
je
inc
arpl
insb
gs
je
jb
popa
bound
add
cs
cli
inc
add
xchg
mov
mov
pusha
pushf
lea
ja
cmc
imul
push
add
mov
lea
jmp
add
inc
gs
insb
imul
je
lea
jb
pushf
pushl
ret
add
dec
jae
popa
fs
gs
fs
je
add
mov
inc
xchg
xor
inc
pop
pop
jb
pop
adc
mov
lcall
pop
mov
inc
push
cmpsl
xor
lds
adc
mov
imul
adc
xor
add
out
ja
or
lret
bound
inc
lea
test
lods
dec
test
lahf
xor
popa
mov
and
pop
icebp
clc
in
xchg
jne
lahf
jecxz
aam
fwait
lahf
mov
mov
or
pop
fisubrl
jg
push
lcall
add
inc
push
jo
jb
add
inc
incl
bswap
pushf
mov
movsbw
bswap
jmp
pushf
lea
jae
cmp
xor
call
arpl
fs
xor
cs
insb
add
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
mov
pusha
pusha
mov
push
pushf
lea
jmp
sbb
rcl
mov
stc
bt
pusha
and
call
add
inc
gs
jb
arpl
fs
jae
add
test
call
mov
cmp
mov
mov
arpl
or
in
outsb
mov
cmpsb
hlt
fcoml
and
jmp
rcrb
enter
xchg
es
mov
sub
mov
mov
int
xchg
sldt
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
add
dec
add
pusha
push
movb
push
lea
jmp
add
dec
outsb
data16
popa
je
push
arpl
add
imul
jae
add
dec
jae
push
rol
mov
dec
not
jmp
pop
mov
push
pushf
movb
pushf
pushl
ret
pusha
call
stc
cmp
mov
mov
lea
ja
xor
or
xor
and
sub
xor
btc
add
sbb
bswap
mov
push
setbe
mov
cmp
test
repnz
pushf
lea
jp
push
lea
jne
push
call
movb
jmp
add
inc
gs
imul
outsb
addr16
add
mov
and
clc
pushf
call
pushf
mov
pusha
lea
jmp
add
insl
imul
insl
inc
insb
outsl
jae
add
and
add
push
outsl
jae
push
jne
je
gs
popa
add
add
je
outsl
fs
gs
imul
add
adc
clc
pushl
pushf
lea
ja
push
cmc
pusha
call
add
insb
jae
jb
jo
outsb
inc
add
jecxz
jecxz
add
test
mov
stc
sub
and
shl
mov
cmc
pushf
stc
pushl
sub
pushf
rep
jmp
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
xorl
clc
jmp
or
shr
mov
call
neg
push
add
cmp
call
add
les
mov
cld
add
daa
loop
ljmp
sbb
imul
xor
jg
test
xchg
in
xchg
ljmp
adc
jo
rcrb
js
jp
xchg
lahf
shr
xchg
mov
arpl
inc
pop
popa
out
jg
out
push
cmpsl
lods
cmp
cwtl
ja
xchg
mov
or
stc
mov
leave
add
mov
repnz
repnz
bnd
addr16
shl
mov
add
push
add
push
gs
arpl
gs
imul
xor
movw
lea
call
call
add
push
imul
add
add
adc
add
push
mov
and
imul
add
in
bswap
movsl
ret
sbb
in
ja
in
add
aad
add
insl
dec
test
or
out
cmpl
lea
sbb
mov
fisttpl
scas
sub
xor
or
fadds
sub
insl
adcb
pushf
jl
ss
xchg
mov
mov
les
imul
sub
or
rcrb
adc
jmp
imul
xchg
sbb
cld
or
jbe
jecxz
push
push
pop
pushf
add
je
jnp
movnti
mov
das
mov
dec
scas
sbb
insb
xor
cmp
jmp
push
sub
ja
sti
jge
fidivl
pop
push
lret
fisttpl
push
pop
inc
jns
fidivrl
repnz
bt
add
call
lea
je
pusha
mov
pusha
movb
lea
jmp
scas
jge
or
mov
outsb
iretw
loope
inc
sar
sbb
testl
call
inc
js
push
adc
dec
jge
jbe
push
and
enter
inc
pop
xor
loope
sarl
mov
and
push
jmp
movsl
dec
es
xchg
fnstsw
xchg
sub
adc
xor
ret
add
clc
stos
adc
mov
cmp
sarl
lret
stc
roll
jmp
xchg
sub
xor
popl
stos
std
aaa
in
enter
inc
mov
fidivrl
outsb
push
xor
add
inc
out
adc
in
xchg
xchg
cmc
push
jo
fs
mov
ret
sub
inc
nop/reserved
bound
sub
add
call
je
dec
add
mov
add
cmp
pop
cmpsl
mov
and
push
push
inc
xchg
pop
mov
cmp
or
in
lock
add
shlb
pusha
or
aas
test
cmp
ja
xchg
lock
add
in
dec
inc
or
dec
mov
lea
cmp
adc
testl
das
or
les
adc
outsb
sub
fucomi
push
and
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
je
gs
inc
js
outsb
je
outsl
imul
add
push
gs
jb
jo
add
mov
dec
clc
btc
bt
neg
add
bsr
shr
not
stc
bsf
stc
mov
bt
rcl
shr
add
bswap
mov
pop
mov
jmp
add
inc
js
push
gs
dec
jne
inc
add
jns
incl
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
popa
jo
jb
popa
je
add
add
ja
fs
add
je
gs
popa
addr16
imul
mov
pushf
lea
je
stc
sub
pusha
cmp
cmp
jmp
add
dec
insl
popa
addr16
imul
je
outsl
jns
add
inc
outsl
insl
jo
jb
push
je
imul
int
cli
jmp
movl
hlt
push
push
push
lea
jmp
pushf
mov
push
pushf
pushl
ret
ftst
ss
xor
std
stc
sbb
xor
pop
aaa
jo
add
pop
or
pop
mov
sub
adc
out
and
mov
pop
ss
das
fs
insb
dec
repz
jno
lret
inc
movsl
and
inc
or
or
adc
aaa
call
pop
or
xor
aas
fildl
sarb
sbb
and
bound
xor
sbb
fldcw
movsb
enter
movsl
or
pop
lds
jo
and
iret
xor
adc
jb
cmpsl
out
dec
popa
out
les
cmpsb
sbb
data16
lret
psubsb
xchg
out
addb
mov
popf
xor
inc
push
mov
mov
cmp
stc
or
andl
pop
je
fbld
push
fdivl
dec
or
popl
dec
push
arpl
out
std
pop
mov
add
je
insb
imul
inc
popa
je
add
test
stc
decl
pushf
cmc
lahf
rcl
xor
shl
stc
not
das
mov
shl
add
add
mov
pushf
bt
mov
bt
test
pusha
pushf
mov
movb
lea
je
bt
sub
jmp
shlb
jmp
punpcklbw
xchg
dec
adc
cmpsb
dec
in
lock
sarl
cmp
push
dec
int3
adc
dec
clc
mov
call
jmp
call
push
dec
xchg
mov
push
sub
pop
cli
or
adc
jecxz
mov
lcall
jb
stos
jbe
or
xchg
push
xchg
jl
or
jae
hlt
xor
pop
or
stos
test
into
fsub
lock
pop
mov
scas
adcb
mov
inc
dec
sbb
das
mov
pop
into
xor
sub
mov
dec
push
or
out
xchg
movsb
cld
pop
add
xchg
and
dec
adc
clc
pcmpeqd
fldcw
dec
ret
js
test
or
jnp
add
in
aaa
jne
fcmovb
cmpsl
or
xor
or
int3
int
jae
mov
fsubl
ret
jecxz
roll
je
mov
pop
pop
cli
xor
fldt
mov
les
outsl
inc
stc
mov
fldt
ret
das
pop
xchg
push
sarl
mov
call
pop
and
jno
adc
loope
push
xor
je
mov
sbb
pop
mov
loopne
or
ret
popf
vpshlw
int3
add
andl
idivl
dec
push
dec
inc
inc
jb
insl
push
je
imul
or
lock
xor
or
outsl
inc
push
pop
or
jbe
and
xor
mov
cmp
add
adc
int
push
scas
stos
test
mov
out
dec
test
in
arpl
andb
and
pop
ss
push
cmc
jb
outsl
fsubrl
insb
dec
pop
test
add
push
gs
popa
jae
inc
jb
outsl
jb
mov
stc
bt
call
push
pop
mov
xor
pusha
cmp
outsl
mov
xchg
inc
inc
mov
push
int3
aam
sub
sub
mov
pop
push
push
or
cmc
push
xor
subb
add
scas
std
js
fwait
aad
mov
hlt
adc
daa
sar
xor
out
pusha
loop
rcrb
sbb
adc
xchg
mov
inc
or
mov
das
in
xor
xchg
out
sbb
dec
cld
xor
pusha
loop
cs
subl
adc
stos
push
cmp
leave
adc
notl
hlt
cmpsl
mov
mov
mov
scas
sbb
pop
xor
imul
lods
dec
sar
sete
int3
cmpsb
pop
sbb
pop
sar
sbbl
imul
xchg
lock
cmp
push
jg
ret
xor
add
mov
mov
sub
repz
outsl
loop
sbb
adc
mov
in
jg
mov
xlat
mov
subl
mov
dec
adc
mov
sbb
cmpsb
xchg
cmpsb
cmp
addr16
pop
or
cwtl
ret
pop
movsb
xor
ds
xchg
jo
ret
push
scas
stos
inc
and
bound
jmp
dec
gs
jmp
outsl
sbb
scas
sbb
jne
cmp
push
push
scas
adc
scas
call
add
push
gs
jne
jae
jb
outsl
jae
add
inc
gs
imul
imul
jns
add
add
gs
je
push
outsl
jne
fs
arpl
outsb
add
add
jbe
dec
jne
push
outsb
jo
gs
jb
dec
gs
fs
add
dec
gs
jo
imul
add
mov
adc
repz
ficompl
and
scas
jecxz
in
js
lock
adc
cltd
inc
xchg
push
kmovw
nop
jmp
ds
and
cltd
lret
out
ss
loopne
dec
into
int3
fldpi
lock
aaa
lods
adc
out
pop
cmp
or
lods
addr16
inc
lds
fstp
ja
xlat
add
mov
xchg
test
xchg
cmp
pop
push
push
aaa
lods
add
xchg
pop
sbb
or
pop
push
icebp
xchg
jae
fnstsw
mov
sub
les
imul
add
xchg
jmp
popw
cmp
adc
aas
adc
lea
sbb
adc
sub
push
ret
outsb
mov
cmp
call
xor
jle
push
and
cltd
arpl
cmp
sti
pop
add
xor
ss
jne
push
das
mov
cmpsl
sbb
popa
test
xor
or
mov
cs
inc
mov
mov
cwtl
jecxz
popa
imul
dec
dec
shll
push
mov
push
and
ret
daa
iret
jno
in
bound
ficoms
push
jecxz
ret
adc
xchg
loop
jo
push
fcmovne
rol
push
dec
pop
stos
jo
mov
xor
cmpsb
lcall
loopne
lods
mull
stc
test
arpl
sbb
lock
std
std
mov
insb
sub
lock
test
das
push
cltd
adc
pop
iret
ss
jl
jl
jge
test
dec
lret
aam
push
lret
add
ljmp
testl
cmp
les
sub
in
xchg
push
push
scas
add
pop
xor
or
push
imul
rorb
movw
lea
je
pusha
lea
jmp
call
not
mov
pop
pushl
mov
not
mov
call
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
bts
lea
sar
mov
test
cmc
cmpb
push
lea
jne
test
sub
sar
mov
and
add
rcr
shr
add
and
mov
mov
push
call
push
pop
lock
xor
inc
lcall
mov
pavgb
sbb
adc
push
ljmp
mov
lcall
outsl
je
and
cmc
xchg
mov
sbb
sub
shrl
adc
leave
pop
imul
sbb
insb
lret
mov
out
mov
mov
sbb
aam
and
arpl
imul
sbb
jmp
scas
pusha
jmp
add
push
gs
gs
jae
inc
popa
jo
jne
add
add
je
jo
outsb
inc
imul
add
add
jb
outsb
inc
add
add
imul
push
je
jo
add
inc
gs
imul
inc
js
inc
js
add
inc
jb
popa
je
push
imul
inc
add
neg
clc
incl
add
addr16
insb
outsl
jae
dec
gs
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
dec
test
incl
add
jae
popa
addr16
outsl
js
add
add
je
insb
je
pusha
call
add
inc
gs
imul
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
arpl
push
arpl
add
je
imul
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
add
add
add
pop
add
scas
sbb
add
sbb
add
sbb
add
xlat
push
add
mov
sbb
add
pop
add
dec
pop
add
sbb
add
add
add
add
xorb
or
add
adc
add
add
add
mov
pop
add
push
add
dec
pop
add
dec
pop
add
sahf
sbb
add
call
sbb
add
inc
pop
add
loope
add
xor
pop
add
push
add
sbb
add
jmp
pop
add
aaa
push
add
sahf
push
add
fs
add
cmp
add
sbb
add
pop
add
ss
add
popw
add
xchg
sbb
add
lahf
push
add
fcoml
add
dec
pop
add
enter
fwait
push
add
add
pop
add
in
pop
add
push
add
mov
pop
add
jmp
add
cmpsb
sbb
add
call
pop
add
cltd
sbb
add
push
add
scas
sbb
add
lret
sbb
add
ss
add
pop
add
test
add
sbb
add
sbb
add
dec
pop
add
out
pop
add
aas
push
add
lods
sbb
add
ficoms
add
dec
pop
add
sahf
sbb
add
aaa
push
add
push
add
push
push
add
repz
add
dec
pop
add
sbb
add
sbb
add
cmp
add
mov
push
add
out
pop
add
hlt
pop
add
push
add
cmp
add
jmp
pop
add
aaa
push
add
sahf
push
add
ficoms
add
xlat
push
add
test
push
add
xchg
sbb
add
xor
add
sahf
push
add
sbb
add
pop
add
push
add
dec
pop
add
enter
xchg
sbb
add
ljmp
lds
add
xor
add
cmp
add
inc
push
add
fstl
add
xchg
sbb
add
pop
add
sbb
add
add
add
pop
add
lcall
sub
add
pop
add
sbb
add
push
add
test
add
pushf
push
add
mov
add
sbb
add
dec
pop
add
push
add
stos
sbb
add
fwait
push
add
leave
sbb
add
imul
sbb
sbb
add
xchg
sbb
add
in
pop
add
sbb
add
mov
push
add
in
pop
add
test
pop
add
movsb
sbb
add
fstl
add
out
pop
add
dec
pop
add
mov
push
add
test
pop
add
push
add
push
add
xchg
sbb
add
fs
add
lock
add
push
add
cmp
push
add
sbb
add
pop
add
push
add
dec
pop
add
cmp
add
scas
sbb
add
push
add
mov
push
add
push
add
xor
add
fsts
add
sbb
add
sbb
add
sbb
add
loope
add
fcoml
add
push
add
sbb
add
push
add
push
add
push
add
inc
push
add
push
add
xor
add
popw
add
mov
sbb
add
sbb
add
mov
add
ds
add
ljmp
cmpsl
in
pop
add
sahf
push
add
lods
sbb
add
notb
add
dec
pop
add
stos
push
add
fstl
add
pop
add
xor
add
push
add
dec
pop
add
pop
add
sbb
add
lahf
push
add
sbb
add
gs
add
mov
add
mov
push
add
in
add
mov
pop
add
inc
pop
add
jmp
sbb
add
push
add
push
add
fwait
push
add
repz
add
push
add
movsb
sbb
add
popf
sbb
add
add
add
enter
xor
add
dec
pop
add
push
add
sbb
add
push
add
fstl
add
pop
add
in
pop
add
test
add
xlat
push
add
in
pop
add
in
add
xor
add
ficoms
add
dec
pop
add
in
pop
add
pushf
push
add
pop
add
dec
pop
add
lds
add
push
add
mov
push
add
push
add
add
test
push
add
sbb
add
mov
sbb
add
cmpsb
sbb
add
push
add
push
add
dec
pop
add
push
add
imul
add
mov
sbb
add
push
add
push
add
xchg
sbb
add
out
add
gs
add
popf
push
add
push
add
mov
push
add
add
sahf
sbb
add
pop
add
mov
push
add
xor
add
inc
push
add
mov
add
xchg
sbb
add
hlt
pop
add
add
add
fstl
add
pop
add
add
add
cmp
add
pop
add
push
add
push
add
lahf
push
add
mov
sbb
add
ss
add
xchg
sbb
add
add
add
pop
add
sahf
push
add
mov
add
pop
add
lahf
push
add
push
add
add
add
add
andb
add
or
add
or
add
add
add
jnp
sbb
add
add
sbbb
pop
add
xor
add
add
add
pop
add
ds
add
sbb
add
add
add
mov
add
adc
pop
add
ficoms
add
push
add
scas
sbb
add
add
add
jmp
add
ja
jbe
dec
jne
push
jb
je
add
push
imul
add
inc
gs
gs
je
je
add
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
js
pusha
push
pusha
lea
call
cmp
jo
bt
sub
pushf
lea
jne
pushf
pushf
call
add
dec
jae
arpl
jo
jns
add
inc
gs
gs
inc
outsl
insb
outsl
jb
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
imul
lea
neg
push
sbb
mov
aad
sub
call
movb
push
pushf
lea
ja
pusha
lea
jb
stc
push
clc
mov
cmpb
push
pusha
movb
lea
jne
sbb
bsr
cmc
bswap
mov
clc
bt
pusha
push
add
mov
jmp
call
pusha
lea
jb
pusha
cmp
mov
jmp
push
insl
mov
sub
xchg
xlat
out
imulb
and
popa
push
arpl
dec
push
mov
mov
in
xor
xchg
loopne
sub
fistpll
inc
andb
jmp
ljmp
sbb
lods
push
jmp
push
sub
outsl
in
lcall
push
repnz
mov
pop
mov
ljmp
pushw
mov
mov
adc
xchg
mov
sub
cmp
aam
xor
into
daa
cmpsl
cld
pop
cmp
jl
mov
cmp
pushf
inc
xor
cld
push
sbb
dec
imul
mul
rorl
push
nop
sti
cmc
xchg
daa
shrl
add
xor
call
sbb
or
insl
arpl
push
test
jmp
add
inc
fwait
inc
sbb
jecxz
inc
and
sbb
mov
int3
jns
mov
jecxz
fwait
xchg
decb
jge
pop
lds
jmp
xor
inc
jge
data16
push
dec
hlt
adc
jecxz
inc
sbbl
insb
mov
leave
pop
add
and
aam
or
or
xchg
adc
pop
inc
ja
imul
test
sti
cmpsb
lock
adc
sbb
jp
inc
insb
mov
jle
stos
xor
imul
pop
mov
scas
enter
adc
sub
fdivrs
add
sbb
mov
shlb
or
popa
jecxz
inc
sbb
xchg
arpl
push
int3
add
test
sbbl
jbe
enter
inc
xchg
insl
mov
fwait
xchg
push
pop
pop
cmp
xchg
out
jp
sub
dec
push
cmp
add
aas
std
ljmp
jecxz
lret
js
cmp
jnp
add
dec
and
xchg
scas
xchg
mov
pop
stos
xor
cmpsl
gs
inc
fwait
xchg
out
push
ds
jae
aaa
sbbb
push
int3
js
add
imul
gs
add
sub
mov
dec
bswap
btr
mov
clc
push
add
clc
cmc
stc
call
call
add
push
gs
imul
dec
jb
inc
js
add
dec
outsl
arpl
push
gs
insb
insb
outsl
arpl
add
inc
imul
inc
imul
gs
imul
bound
gs
add
jp
push
lea
call
pusha
pushf
lea
jmp
mov
call
in
and
je
mov
nop
call
cs
inc
scas
cmp
cmp
pop
mov
mov
aaa
pop
in
and
push
js
repnz
or
test
movsb
mov
or
mov
jns
adc
insb
and
test
and
jmp
xchg
in
inc
outsl
loop
jge
push
call
push
jmp
lea
jb
bt
cmp
pusha
test
cmp
pushl
pusha
lea
jae
add
mov
push
shld
mov
and
mov
movw
sub
clc
pusha
push
repnz
push
call
add
inc
gs
imul
push
jo
arpl
add
xor
xor
fs
insb
add
add
imul
arpl
outsb
add
add
insb
gs
jae
inc
inc
add
js
je
mov
sub
out
mov
and
or
mov
or
push
lahf
mov
repnz
hlt
jne
adc
rcl
lock
xor
mov
sahf
fisttpl
sub
lds
shr
lret
nop
rclb
adc
fstl
call
fnstenv
mov
fisttpl
out
decb
mov
outsb
out
mov
ret
jp
ss
faddl
repz
lret
test
xor
fisubl
xor
pop
outsl
mov
jle
mov
jno
scas
mov
outsl
sbb
repz
iret
ja
into
clc
inc
fdivr
into
push
sahf
cmc
cli
sub
std
push
sbb
jmp
arpl
test
rcrb
stc
dec
inc
out
xor
sub
xchg
xchg
repnz
hlt
push
inc
ja
mov
cltd
repnz
adc
pushf
or
push
jb
cli
fs
rcrb
cs
sbb
lds
testl
out
inc
test
nop
ret
movb
inc
imul
outsl
push
jns
je
insl
push
imul
gs
outsb
jne
pusha
pushfw
popw
stc
mov
mov
bt
stc
call
lea
jne
mov
push
lea
jmp
dec
dec
xchg
xor
bswap
dec
inc
movzbw
lea
rcr
not
sub
not
mov
pusha
push
lea
jmp
pushf
mov
mov
pusha
push
movb
jmp
adc
not
rcr
mov
adc
bt
mov
test
bt
sub
test
stc
bt
push
shl
jmp
pushf
pushf
mov
pusha
jmp
pushl
popl
pusha
push
push
lea
jmp
pushf
push
pushf
popl
mov
pushl
popl
push
pushf
pushf
pushl
lea
jmp
xchg
lea
mov
mov
pushf
not
movsbw
repz
popl
movsbl
bts
lea
push
mov
bswap
push
jg
push
mov
clc
not
cmc
push
ror
pushf
pushl
popl
bts
ror
call
mov
call
pushl
push
mov
jmp
mov
mov
not
movsbl
movzbw
repz
popl
call
cmc
bt
xor
cmp
cmc
bt
sub
push
call
pushl
movzbl
pushf
call
call
lea
pusha
cwtl
mov
test
mov
cmc
mov
cmc
movw
mov
xchg
shrd
mov
jmp
push
pusha
pushl
popl
pushl
movb
movb
lea
jmp
btr
jmp
and
adc
call
or
pusha
ror
shrd
mov
clc
cmc
pusha
push
add
pushf
lea
jle
pushf
push
pushf
popl
pushl
pushl
popl
movb
lea
jmp
add
cmp
pusha
cmp
jmp
bt
aad
mov
mov
rol
mov
call
dec
pusha
jmp
mov
pushf
pushl
mov
pusha
lea
jmp
pushl
popl
jmp
mov
bswap
pusha
pushf
not
repz
popl
not
bts
lea
clc
mov
rol
mov
stc
rcr
mov
btr
movsbw
mov
call
rcr
cmc
lahf
jae
mov
sar
call
xchg
movsbw
push
rcr
pushl
jmp
movl
pusha
push
jmp
sub
call
rol
mov
bts
cmc
mov
jmp
bt
not
stc
push
pushf
sub
jmp
push
push
jmp
mov
jmp
jmp
sub
movb
pushf
lea
jmp
mov
push
mov
movzbl
lea
lea
push
jmp
pushf
popl
jmp
mov
pushf
pushf
pusha
lea
jmp
pushl
popf
mov
movb
mov
lea
jmp
mov
jmp
sub
pushf
pusha
push
mov
dec
mov
clc
cmc
test
not
mov
call
lea
and
adc
sub
movsbw
push
jmp
not
lea
pushf
pushf
cld
xchg
movzbl
cld
pop
mov
pushf
std
cld
cld
pushf
call
push
movw
pushf
popl
jmp
inc
cmc
pushf
jmp
call
pushl
push
sub
sub
jl
clc
clc
and
pusha
pushf
pushf
pushf
pushf
popl
jmp
jmp
stc
pushl
add
jmp
rol
mov
bts
xor
cmp
ror
not
btr
neg
pushf
ror
btr
shld
sub
xor
sar
cmp
bswap
mov
push
push
stc
add
call
movsbl
inc
shrd
lea
or
stc
sub
stc
rcr
setno
sar
mov
bt
xor
bsf
or
mov
bswap
add
movsbw
btr
bsf
mov
bswap
add
movsbw
btc
neg
sub
xor
rol
cmc
pusha
xor
cmc
pusha
btc
btc
rol
btc
or
pushf
add
push
shld
stc
movzbl
bsr
bswap
bsf
mov
call
sub
call
movsbw
das
pushf
mov
pushf
add
pushl
call
mov
call
inc
cmp
mov
clc
or
pushf
pushf
lea
je
bt
pusha
pusha
sub
test
pushl
call
call
sub
mov
pusha
shl
call
jmp
lahf
movsbw
mov
pusha
sets
movsbw
mov
mov
divl
pushf
movb
pusha
mov
pushl
jmp
call
movw
pushl
mov
pushl
pusha
pushl
ret
push
movw
mov
stc
cmc
sub
jmp
sub
push
jmp
shl
mov
pushf
mov
add
call
dec
xor
das
mov
jmp
movsbl
pop
repz
popl
btr
push
rcr
rcr
mov
bswap
pushf
not
mov
jmp
not
lea
pusha
lea
jmp
movb
mov
pushf
pusha
mov
movl
pushf
push
lea
jmp
jmp
pushl
popl
rcl
movl
clc
mov
rcl
cmc
btc
call
lea
call
sbb
mov
push
cmp
sub
cmp
test
jmp
add
pushf
mov
pusha
pusha
movb
push
lea
jmp
movb
xchg
lea
bswap
mov
bswap
pushf
pushf
repz
popl
lea
push
movsbw
rol
mov
bswap
xchg
movsbw
jmp
pushl
popl
pushf
lea
jmp
jmp
push
mov
pusha
mov
lea
jmp
call
pushl
popl
pushf
pushl
lea
jmp
bt
aad
stc
mov
not
not
neg
mov
call
pushf
mov
call
mov
pushl
push
pushf
pushl
lea
jmp
cwtl
jmp
jmp
pushf
pushf
popl
call
aad
shl
lea
call
add
add
xor
mov
bsf
mov
jmp
bts
bts
pushl
popl
lea
mov
clc
call
push
not
bswap
call
pusha
lea
jbe
popl
push
pusha
pushf
movb
lea
jmp
push
lea
call
pushf
popl
call
pushf
jmp
mov
pushl
call
pushf
mov
call
jmp
rol
xor
pushf
pushl
not
ror
jmp
xchg
bswap
pushl
lea
movzbw
mov
pop
repz
popl
cmc
pusha
mov
pusha
mov
call
pushl
popl
movw
pushf
mov
lea
jmp
pop
mov
jmp
call
lea
shl
sub
not
pusha
call
jmp
mov
push
lea
jmp
mov
pushf
lea
lea
movb
push
lea
jmp
add
bt
push
bt
cbtw
cmc
cwtl
cmc
sub
jmp
clc
mov
jmp
xchg
jmp
or
shr
mov
bt
pushf
add
movb
mov
pushf
pusha
mov
mov
pushl
pushl
lea
jmp
jmp
not
stc
clc
jmp
xchg
dec
inc
mov
adc
shl
jmp
mov
pusha
lea
jmp
lea
movl
push
mov
pushf
lea
jmp
push
btc
btc
push
mov
clc
btr
pop
movsbw
rol
pusha
shl
push
neg
xor
lea
jmp
jmp
bt
jmp
rol
pusha
bsr
setne
xor
xchg
dec
inc
dec
inc
push
pushf
btr
lea
xadd
btr
shrd
lea
sub
push
rcl
btr
dec
lea
rcr
mov
sub
ja
xadd
neg
sar
add
bsr
mov
sub
add
cmp
stc
sub
jmp
pushf
mov
jmp
add
call
sub
push
dec
stc
pushf
jmp
cmc
and
jmp
call
movw
mov
mov
pushl
ret
push
pusha
mov
pushf
call
pushf
pushf
pushl
popl
pushf
lea
jmp
call
pop
jmp
mov
pusha
xchg
pushl
mov
mov
pushf
jmp
mov
pushl
pushf
call
call
lea
push
jmp
jmp
add
call
test
stc
sub
call
call
push
jmp
neg
jmp
clc
xor
call
mov
not
not
call
call
mov
jmp
push
push
call
movsbw
xadd
bswap
adc
mov
pushf
shl
add
movb
pushf
push
setne
mov
pusha
call
mov
stc
call
mov
rcl
rcr
clc
call
xchg
call
push
pushf
pushl
popl
pushl
pushf
pusha
pushf
lea
jmp
inc
shrd
adc
dec
inc
sub
pushf
inc
not
ror
mov
clc
add
mov
mov
movw
lea
jmp
bswap
bswap
pusha
movsbw
mov
push
lea
lea
jnp
push
mov
pushl
push
push
lea
jmp
mov
pusha
push
bt
pushf
add
call
call
test
dec
shr
shl
mov
pushf
movb
jmp
pushl
mov
pushf
pusha
mov
mov
movw
pushf
mov
jmp
jmp
stc
sub
call
jmp
movzbl
xchg
pushf
stc
bts
movsbl
xchg
xchg
bt
ror
pusha
mov
lea
movsbw
mov
bswap
pusha
pop
pushl
popl
not
movl
bswap
bswap
mov
stc
bswap
rol
stc
xor
inc
inc
shld
sbb
lea
shl
pop
sub
mov
mov
pushf
pushf
push
movb
lea
jmp
lea
jo
pushf
pushf
mov
pusha
mov
push
pushf
lea
jmp
sub
jmp
mov
inc
mov
call
call
mov
mov
push
movb
push
pushl
ret
jmp
push
lea
jb
popl
push
pushf
push
pusha
lea
jmp
pushf
movzbl
mov
pusha
jmp
lea
mov
movsbw
lea
jb
btr
not
push
clc
btc
call
push
mov
mov
push
pushl
pushl
jmp
mov
shrd
call
mov
movb
pusha
movw
pushf
popl
movl
mov
jmp
aad
rdtsc
test
bt
cmp
sub
call
xchg
jmp
mov
rcl
mov
test
test
pushf
stc
not
stc
pushf
bt
cmc
not
test
sub
stc
test
test
and
pushf
call
movb
mov
jmp
clc
clc
sub
cmp
mov
jmp
pusha
pushf
pushl
popl
pushf
mov
movw
mov
lea
jmp
stc
sub
mov
cmc
cmc
jmp
bswap
movzbw
push
bswap
xchg
clc
push
lea
pushf
mov
xchg
pushl
bts
bswap
bts
push
xchg
push
call
mov
pushf
pusha
lea
jmp
xchg
pushf
pushf
call
repz
pushf
jmp
jmp
add
not
jmp
shl
sub
movzbw
mov
lea
mov
mov
jmp
push
push
rol
push
clc
push
cmp
sub
push
jmp
not
repz
popl
jmp
call
sar
shrd
aaa
das
mov
rcl
and
shl
mov
cmp
add
jmp
pushf
jmp
aas
lea
rcl
and
jmp
inc
mov
pusha
lea
jmp
jmp
pushf
pushl
pushl
mov
call
pushl
mov
pushf
mov
pushf
call
sub
jmp
mov
push
movb
movw
mov
pushl
ret
stc
rol
pushf
inc
movw
jmp
mov
jmp
xor
rcl
rol
btr
add
rcr
movzbw
movzbl
sbb
mov
call
jmp
mov
mov
movl
lea
jmp
popl
pushf
push
pushl
pushl
lea
jmp
pusha
jmp
rcr
cmc
cmc
mov
pushf
pusha
bt
add
pushf
mov
mov
mov
pushf
pushf
lea
jmp
shrd
mov
dec
cmc
add
pusha
not
push
mov
jmp
test
add
pushf
clc
add
jmp
mov
inc
ror
lea
bsf
bsf
cmp
and
sub
lea
pusha
movsbw
lea
jle
mov
pusha
push
lea
jmp
jmp
not
seto
add
mov
jmp
ror
shl
lea
cmc
mov
ror
sub
movsbw
push
bswap
pop
mov
pushf
pushf
pusha
lea
jmp
not
push
cmp
pushf
clc
neg
pusha
mov
stc
ror
call
jmp
push
jmp
jmp
pop
call
pusha
add
jmp
rol
cltd
btc
bsr
mov
or
bts
rcr
call
cmp
pusha
pushf
lea
ja
movsbl
rcr
cmc
mov
pusha
pusha
lea
dec
xor
sub
or
ror
jmp
lea
pushf
lea
jmp
cmc
movb
sub
lea
jo
push
pushf
mov
pusha
mov
lea
jmp
pushl
popl
rol
bswap
movl
pushl
mov
lea
bts
ror
rol
bts
add
shrd
and
xor
pop
inc
stc
mov
rol
lea
sbb
sbb
pop
stc
sub
jmp
add
bswap
mov
cmp
add
pusha
pushl
pusha
lea
jmp
jmp
dec
pushf
movl
movw
jmp
lea
jne
jmp
pushf
popl
pushl
jmp
jmp
repz
popl
bts
clc
pushf
mov
cmc
bswap
bswap
push
lea
btc
push
ror
pusha
rcr
pop
mov
btr
pusha
rcr
pushl
popl
lea
movl
btc
rol
not
bt
mov
bts
ror
not
rol
jmp
dec
movzbw
rol
pusha
call
lea
sar
pushf
add
ror
mov
test
btr
btc
call
rol
ror
mov
rcl
pusha
movl
lea
xchg
bt
mov
bt
mov
stc
pusha
rcl
mov
pushl
popl
clc
ror
btc
movl
movzbl
bswap
rcr
btc
mov
bts
rol
movsbw
rol
movzbw
pushl
xor
movsbl
jmp
mov
pushf
pushf
jmp
not
pushf
not
pusha
cld
lea
xchg
pusha
mov
movsbw
pushf
jmp
mov
pushf
lea
jmp
bswap
mov
repz
popl
clc
not
mov
movzbw
mov
bts
lea
not
mov
rol
mov
lea
btc
mov
bswap
pushl
popl
xchg
pushf
pushl
push
movl
movzbl
movzbl
pusha
mov
btc
rol
clc
bsr
dec
xor
pop
mov
inc
jmp
push
call
repz
popl
push
xchg
btr
btr
btr
ror
mov
btr
btr
ror
call
lea
mov
push
pop
rol
add
adc
rcl
push
not
sub
mov
movb
pusha
movsbl
not
movzbw
dec
xor
add
push
pushf
jmp
call
pushf
sub
clc
stc
stc
cmp
mov
test
cmc
push
cmc
sub
push
lea
jmp
push
mov
push
lea
jmp
call
call
jmp
movb
pushl
popl
mov
movw
mov
lea
jmp
jmp
test
and
push
pushf
pushf
pushf
popl
pusha
pushl
popl
movw
lea
jmp
pusha
mov
not
setl
call
shrd
pusha
movb
pushf
call
btc
neg
mov
bt
clc
xor
push
pusha
movw
dec
jmp
jmp
inc
shl
btr
movzbl
lea
stc
sub
pushf
pusha
jmp
pushf
popl
jmp
mov
pusha
pusha
lea
jmp
aas
aaa
das
movzww
test
test
xor
stc
call
mov
call
stc
test
sub
pushf
movb
pushf
shr
pusha
call
xchg
mov
call
shr
mov
cmp
push
stc
sub
pusha
mov
pushf
call
movl
rcr
not
mov
xchg
rcl
mov
movzbw
rol
xchg
xor
lea
push
pushf
xchg
inc
bts
bswap
and
cmp
lea
and
bsr
btc
rcr
sub
push
lea
mov
push
lea
jmp
mov
push
mov
pusha
xchg
call
pushf
movb
mov
pushf
call
mov
pushf
pusha
movw
lea
jmp
dec
bsr
mov
cmp
bt
shl
btr
mov
pusha
bt
pusha
not
bt
call
pushf
pushl
popl
push
push
movb
pushl
lea
jmp
call
xchg
jmp
shr
call
lea
aaa
mov
xadd
shld
pushl
popf
mov
mov
not
mov
cwtl
movzbw
mov
movzbw
mov
jmp
stc
rcr
movzbl
mov
rcr
mov
call
jmp
push
mov
pushl
mov
mov
pushf
pushl
movl
lea
jmp
pushf
mov
pushf
pushf
mov
jmp
mov
mov
pushf
call
call
cwtl
mov
jmp
mov
movw
movb
lea
jmp
bsf
and
movsbw
mov
pushf
pushf
clc
pusha
sub
cmc
add
pushf
pushf
jmp
pushf
btc
movl
bswap
ror
mov
rcr
pushf
rol
not
rol
movsbl
xor
jmp
test
add
cmc
test
pushf
add
mov
jmp
pushl
jmp
pushf
pushf
mov
jmp
mov
movzbl
jmp
pushf
mov
pushl
lea
jmp
lea
movb
jmp
call
pusha
cmp
pushl
popl
pushl
cmp
add
pusha
pushl
popf
push
lea
jmp
mov
rcr
rcr
pusha
xchg
mov
bts
movzbw
pushl
popl
btc
movzbw
movl
clc
rcr
call
cmp
movzbl
cmp
cmp
xor
bt
add
cmp
stc
cmc
jmp
push
xchg
pusha
pop
pop
mov
call
movb
not
pushf
pushf
jmp
mov
mov
pushf
lea
jmp
jmp
cmc
or
mov
sub
shr
sar
ror
mov
stc
jmp
dec
dec
dec
bswap
btc
sub
shld
and
sar
adc
neg
mov
cmc
pushf
movb
add
pushl
push
push
mov
pusha
pushf
lea
jmp
lea
jb
pusha
movw
pushf
popl
call
mov
call
clc
cmc
clc
mov
call
lea
pusha
pushf
lea
jmp
mov
pushf
pushf
pushf
popl
push
lea
jbe
pushf
mov
pushl
popl
mov
pushf
pusha
lea
jmp
push
mov
pusha
movb
pushf
pushf
lea
jmp
pushl
popl
pushf
lea
jmp
pushf
popl
pushf
jmp
shr
jmp
rol
call
bt
sub
bt
shl
call
call
pushl
popl
mov
movb
mov
lea
jmp
mov
push
call
mov
mov
lea
jmp
lea
jl
dec
lea
inc
clc
jmp
sar
jmp
mov
lea
jne
shld
bsf
rcl
rcr
mov
clc
and
test
cmp
clc
cmp
pusha
movw
push
push
lea
jne
clc
adc
bswap
bsr
xorb
movsbl
pop
pusha
pusha
mov
lea
jmp
movb
jmp
pushl
jmp
pushl
popl
pushf
mov
movl
mov
lea
jmp
lea
dec
bsf
stc
sub
push
not
pusha
lea
movb
lea
jmp
bswap
rol
btr
bts
xor
push
dec
lea
pop
inc
shld
movzbl
shld
lea
movsbw
xor
bsr
rol
sub
push
call
stc
xor
bt
test
movl
jmp
movzbw
sbb
notl
shrd
bsr
mov
pusha
call
sub
cmc
bt
bt
neg
test
xor
clc
pushf
sub
pusha
jmp
pushf
mov
mov
pushf
movw
movb
lea
jmp
pushl
mov
call
jmp
pushf
pushl
popl
pushl
push
lea
jmp
add
test
bt
shld
pusha
pusha
mov
pushl
movw
push
movl
pushf
popl
movw
pushl
push
pushl
popl
movl
mov
movb
lea
jmp
test
cmc
xor
stc
clc
mov
stc
mov
jmp
push
call
pushf
popl
pushl
jmp
dec
setb
sub
btc
and
xor
mov
call
pushf
pusha
movb
mov
push
movb
push
mov
jmp
call
rol
aaa
das
rcr
mov
cmp
stc
cmc
clc
xor
bt
call
mov
bswap
mov
movw
lea
cpuid
pushf
clc
sub
call
pushf
mov
mov
push
pushf
movb
mov
push
mov
call
or
sub
mov
lea
mov
cmc
jmp
pushl
mov
push
movsbl
pushl
repz
popl
movw
xchg
bts
movsbw
mov
rol
stc
mov
bts
xchg
mov
cmc
mov
push
bts
pushl
popl
rcl
movl
bt
push
pusha
bts
mov
pushf
stc
jmp
shl
xor
rol
ror
jmp
jmp
jbe
mov
push
pushf
lea
jmp
call
push
mov
not
pusha
jmp
push
mov
mov
push
push
pushl
ret
call
mov
rcl
bswap
push
pop
mov
ror
rol
pushl
popl
stc
rcr
stc
movl
stc
rol
mov
stc
rcr
bswap
call
push
jmp
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
or
rcl
mov
bt
jmp
pushf
add
call
pushf
jmp
pushf
popl
call
aas
bt
das
rcl
mov
lea
bts
inc
rcl
mov
test
call
push
jmp
mov
movb
mov
mov
pushf
popl
call
das
aas
bt
neg
mov
test
call
push
mov
rep
shrd
clc
mov
ror
mov
jmp
push
pushf
sub
pushf
pusha
test
shl
call
mov
movl
stc
mov
bswap
ror
movzbw
cmc
rol
shl
bsf
rol
shr
xor
pushf
jmp
cmc
add
stc
cmp
bt
sub
pushl
jmp
bt
pushf
sub
push
pushf
push
mov
push
lea
jmp
add
push
movzbl
cmc
bt
pushf
add
stc
push
sub
call
sub
rcl
btr
shl
xor
rol
rol
movzbw
pushl
sub
cmc
add
shl
or
bsf
pushf
movzbl
bsr
btr
pusha
setns
mov
stc
bt
cmp
add
jmp
jmp
movsbw
mov
movzbw
bts
mov
lea
jmp
jmp
rol
bts
movzbl
xor
mov
inc
inc
bsf
call
lea
jp
mov
pushf
lea
jo
pusha
pusha
pushf
popl
push
movb
pushl
popl
push
pushf
lea
jmp
shl
mov
test
shl
rol
mov
stc
add
pusha
jmp
pusha
pushf
push
cmpl
pushf
call
mov
pushf
popl
movb
pushl
popl
push
lea
jmp
and
push
cmc
mov
mov
cmp
mov
mov
cmc
call
mov
bt
rol
movsbw
xadd
shrd
rcr
xor
pushf
inc
bsr
jmp
mov
push
pushf
pushf
lea
jmp
shr
mov
pushf
xor
movzbl
or
sub
jmp
push
lea
pushl
pushf
movb
lea
jmp
push
pusha
mov
pusha
pushl
mov
pushf
call
mov
pusha
lea
jmp
call
xchg
pop
inc
shld
push
rcr
lea
ror
sub
not
mov
push
movw
movl
lea
jmp
