lcall
xchg
add
in
add
mov
cmp
mov
sub
sub
mov
out
adc
enter
cmp
or
imul
mov
sub
cmp
out
outsl
mov
rclb
inc
cld
aas
mov
lods
insl
mov
sub
adc
ds
sbb
ret
adc
rolb
leave
mov
xor
add
cmp
push
fldt
lock
push
mov
mov
pop
rcrb
mov
mov
add
push
add
mov
or
mov
add
test
test
insl
insl
sbb
sub
mov
mov
pop
clc
daa
shrd
rcll
xchg
ret
mov
imul
sub
pop
sbb
shrl
cmp
or
jg
lods
sbb
jp
push
add
imul
mov
pop
fisttpl
or
mov
not
mov
bndstx
jg
std
mov
adc
mov
mov
or
mov
ss
inc
push
mov
outsl
or
and
push
sarb
or
xchg
push
or
add
fcomi
and
or
cmp
add
test
jbe
in
inc
cmp
int
or
insl
or
xchg
jmp
jge
add
clc
adc
push
sbb
add
imul
ja,pt
loopne
mov
mov
notb
cld
sub
mov
icebp
nop
push
lock
jae
ret
mov
push
xor
mov
fs
into
or
clc
sbb
ret
in
sti
mov
xchg
mov
add
insl
sub
pop
cmp
sub
sahf
or
incb
mov
xchg
shl
rolb
bound
fsubrl
sbb
or
adc
adc
out
not
push
fisttps
fsubp
decl
inc
leave
and
sub
sub
mov
test
ljmp
or
add
add
icebp
insb
add
xchg
mov
xor
xor
sbb
adc
sahf
ljmp
jg
and
or
repnz
mov
fisubs
push
fldt
pop
into
call
test
pop
inc
or
fwait
arpl
xor
movb
cmp
jnp
aam
sbb
shr
rcl
mov
add
add
sbb
push
xlat
xchg
cmpsb
add
sbb
jmp
sub
add
sbb
cmp
cmp
stos
arpl
push
or
adc
ss
xor
xchg
push
lret
call
arpl
out
sbb
cmp
xor
andb
cmp
sub
jne
inc
insb
add
enter
ret
mov
rol
in
addl
mov
mov
push
mov
pusha
push
iret
adc
pop
insl
outsb
mov
cmovbe
mov
scas
and
mov
pop
or
movsl
sarb
test
int
insl
in
xor
mov
dec
mov
pop
cmp
and
mov
shl
push
adc
jmp
pop
imul
adc
arpl
mov
notb
add
test
lods
mov
outsb
dec
jnp
into
mov
adc
ficompl
sar
clc
mov
shll
mov
leave
in
pop
gs
sbb
mov
call
movsl
inc
rorb
imul
and
cmp
or
mov
scas
sbb
add
fisubrs
dec
pop
and
cmp
mov
cvtps2pi
pop
cmc
es
mov
rorl
mov
leave
hlt
mov
adc
ret
jno
xchg
outsl
stc
mov
test
sbb
aam
pushf
roll
jne
insl
mov
bnd
adc
jp
sub
out
sbb
mov
push
xor
push
adc
ret
xor
or
fisubrs
mov
pop
cmp
adc
push
js
sbb
mov
popa
jns
or
leave
inc
shll
or
push
jno
mov
push
pusha
cli
push
repnz
sti
mov
mov
sbb
inc
sub
fisttpl
fldcw
push
or
add
push
ss
fistpl
adc
nop
cmp
mov
int
or
shll
mov
mov
lret
shll
mov
or
mov
sarl
jne
push
movsb
jmp
pop
push
test
and
sbb
shll
pusha
cltd
dec
scas
stc
adc
sub
mov
or
xor
out
pop
js
insl
mov
cmp
roll
out
or
cmpsb
pop
pop
rorb
xor
push
adc
fdivs
or
add
or
mov
pop
add
and
push
inc
fistpl
pusha
push
or
push
push
outsb
outsl
fwait
orl
ljmp
pop
lahf
lret
aaa
mov
fwait
jae
mov
cmp
movsl
jbe
adc
xchg
jae
insl
test
test
cmpsl
push
xchg
inc
cmp
jg
adc
pop
jae
sbb
adc
xor
es
sbb
mov
mov
adc
sub
int
dec
or
gs
test
adc
push
ret
psraw
cld
jmp
and
mov
add
or
test
add
sarl
shr
ljmp
sub
daa
aam
sbb
imul
rclb
bound
shrl
add
mov
pop
inc
mov
sbb
sbb
sbb
sub
ljmp
scas
sbb
add
test
insl
fistpl
or
stos
and
loop
push
call
fcomps
cmp
add
cli
and
push
int
sahf
cmpsl
mov
sub
rcrl
inc
xor
movb
testl
mov
dec
test
scas
fldcw
dec
mov
pop
idivb
xchg
jecxz
insl
movb
loope
add
xchg
lret
out
outsb
jmp
jmp
and
xor
and
adc
test
js
xor
adc
inc
add
xlat
call
mov
stos
leave
xor
xor
mov
popf
mov
in
lds
orl
or
push
sbb
icebp
jne
mov
mov
pop
arpl
sbb
das
dec
mov
int3
mov
fiadds
jge
add
cltd
sub
mov
xor
dec
sbb
adc
insb
and
xchg
mov
int3
stos
insb
fwait
popa
in
adc
shrl
dec
or
je
mov
jmp
rol
mov
inc
sub
aad
lds
call
pop
fistpl
sbb
mov
jo
aam
in
and
pop
push
adc
push
cmp
jecxz
bound
cld
sbb
sub
lock
jb
sbb
inc
push
out
and
sbb
call
lea
std
inc
fistps
js
mov
inc
cs
into
mov
lods
add
add
cltd
outsl
cs
lock
mov
aad
insb
outsb
add
sbb
sub
int
push
loop
sbb
add
mov
rcll
xor
rclb
and
jl
adc
inc
hlt
ficoml
leave
mov
pusha
out
test
pop
jo
xor
dec
add
jb
inc
xor
fwait
mov
mov
lock
orl
stc
mov
shl
push
enter
push
mov
pop
test
mov
pop
mov
imulb
add
cmp
rcl
pop
lock
test
iret
adc
outsb
in
xlat
mov
or
out
adc
insb
pop
xchg
jno
pop
mov
sbb
mov
mov
adc
in
mov
sar
jmp
adc
pusha
or
call
jb,pn
sti
mov
dec
leave
push
mov
test
js
or
xor
push
or
cmp
push
xor
sbb
aad
adc
sbb
xchg
je
adc
and
push
out
xlat
sbb
int3
push
mov
cmc
into
loopne
insl
add
pop
adc
dec
stos
in
sarl
pop
xchg
rol
sbb
dec
pop
inc
test
inc
sbb
shlb
push
xchg
mov
fcomps
pop
sbb
add
dec
mov
cmp
inc
insl
cmc
sbb
imul
sbb
enter
in
xchg
scas
push
xchg
add
jb
dec
push
pop
enter
lds
jb
jl
imul
cmp
test
xchg
scas
inc
xchg
dec
mov
test
xchg
pushf
jo
jmp
enter
ss
sub
inc
push
xor
test
inc
andl
out
ret
outsl
push
sbbl
xlat
nop
sbb
test
jbe
sbb
stos
stos
inc
rclb
imul
mov
sbb
pop
popl
cmp
cmp
mov
pop
pmulhuw
iret
testb
pop
int
adc
stos
push
pop
jmp
mov
pop
call
jo
cmpsb
into
insb
into
js
push
push
add
push
push
push
pop
adc
or
bound
mov
cmp
mov
pop
pop
es
das
lcall
xor
push
stc
or
icebp
xchg
stos
jno
push
cmp
push
sub
lahf
rcl
push
mov
clc
xchg
leave
in
mov
inc
pop
ljmp
pop
incl
dec
adc
jl
mov
inc
mov
ljmp
out
push
xor
scas
add
adc
ljmp
xor
je
mov
inc
lds
push
icebp
movups
or
adc
lret
push
fldl
push
push
xor
orl
popa
pop
enter
lea
sbb
cmp
mov
mov
loopne
push
cltd
call
fwait
ret
mov
cmp
push
test
dec
ficoml
mov
loopne
outsb
shrl
lea
mov
adcb
lods
push
add
insl
lret
repnz
iret
push
movsb
daa
lock
clc
pop
cmp
lods
stc
jo
leave
hlt
cmp
rorb
sub
rcl
cmp
adc
xchg
dec
adc
pop
lods
sub
cmp
inc
jmp
test
or
mov
hlt
pop
xor
pop
mov
nop
pop
sub
lods
mov
repnz
shl
push
call
pop
push
testb
cmp
cmc
test
mov
or
and
ret
roll
cmp
or
in
mov
sub
add
add
insl
adc
cwtl
dec
dec
shll
movb
jo
sbb
sub
pop
dec
popl
mov
mov
test
ljmp
xchg
add
lea
shrb
add
clc
push
or
iret
jmp
push
dec
es
add
sbb
add
add
mov
jp
mov
mov
add
ret
pop
adc
adc
loopne
paddb
scas
cs
add
rcrl
or
add
mov
rcrl
hlt
fcmovne
xor
xchg
mov
adc
pop
sub
and
sbb
sbb
mov
leave
fstpl
cltd
repz
and
adc
sbb
or
es
pop
fwait
push
incl
imul
push
xor
in
mov
cmp
xorb
insl
sbb
jae
and
test
adc
idivb
inc
or
ja
mov
sbb
adc
mov
push
inc
cli
mov
ret
sbb
cld
push
jp
push
sub
mov
fcoms
fstps
imulb
push
or
jb
inc
test
cmpsb
sahf
jp
pop
pop
jae
sbb
and
push
das
inc
mov
or
jno
rorb
xor
add
sbb
dec
loop
outsb
sbb
stc
adc
fs
inc
ret
sbb
jae
lock
mov
pop
xlat
leave
push
notl
or
ja
xchg
dec
stos
pavgb
pop
loop
popw
fs
aad
scas
add
je
jp
test
sbb
icebp
push
jnp
cmp
in
jae
je
lock
std
jle
loope
loopne
mov
push
add
sahf
in
pop
jle
dec
xchg
jmp
scas
pop
call
lods
add
roll
xor
addr16
adc
push
and
sti
adc
xor
idivb
push
nop
adc
imul
sbb
dec
cmp
mov
dec
xchg
aad
mov
jnp
mov
cs
push
sbb
fmuls
or
push
xchg
leave
sbb
or
jo
add
sbb
mov
jb
add
ja
imul
popf
insl
jns
add
insl
inc
sub
rolb
mov
mov
or
cmpsl
pop
mov
outsl
decb
outsb
mov
mov
addr16
mov
xchg
cmp
adc
mov
mov
movb
mov
repnz
insb
push
orb
adc
ret
or
pop
loop
mov
and
inc
movsl
cmp
mov
xor
arpl
push
lea
stc
bound
aam
adc
repnz
ja
or
xchg
imul
mov
pop
mov
lret
int
push
pop
pop
neg
push
cli
adc
insl
adc
add
push
push
sbb
push
and
addr16
sahf
sub
icebp
adc
adc
aam
mov
pushf
shlb
jne
mov
push
and
push
dec
shrb
cwtl
add
push
roll
jge
mov
mov
inc
mov
rclb
cmp
xchg
dec
adc
rcl
sahf
stos
or
sbb
add
jo
aaa
loope
sub
rclb
fcomi
test
cmp
ljmp
mov
fnstcw
jp
add
stos
mov
icebp
cmp
inc
xchg
push
cli
mov
add
cmp
or
loop
int
push
test
rcl
sbb
cmp
rorb
aam
mov
aad
clc
bound
pop
push
test
daa
push
xor
mov
add
push
mov
roll
push
cmp
and
addr16
or
shlb
cmp
aaa
outsl
enter
lea
lret
movzbl
and
sbb
add
add
pop
cmp
in
lret
lock
or
push
mov
push
clc
test
xchg
sbb
ljmp
js
xor
dec
add
or
dec
mov
and
fisubl
ds
cmc
sbb
xor
sbb
or
scas
add
dec
inc
mov
lret
jmp
inc
mov
push
dec
push
pop
mov
std
cltd
or
add
jmp
rolb
insb
xchg
jp
add
cmp
push
std
mov
int
add
pop
jbe
push
jnp
sub
lahf
ljmp
scas
adc
push
fwait
es
inc
sbb
les
mov
inc
fwait
clc
sbb
into
push
xor
sarl
or
in
enter
lods
sbb
push
ret
pop
punpckhbw
xchg
push
add
in
rcl
sub
xchg
popf
or
pop
dec
jle
inc
inc
mov
jmp
test
sbb
sbb
rcll
and
add
adc
aad
in
jmp
sbb
sbb
cwtl
lea
cmpsb
lea
shl
cld
push
xchg
add
jp
mov
dec
jne
pop
imulb
lock
pop
inc
sub
leave
rcrl
in
scas
dec
mov
mov
in
mov
pop
add
fmull
mov
push
jne
pop
sarb
add
test
lret
adc
fisttps
pop
xor
xchg
lret
adc
adc
jns
sahf
fsub
icebp
cmp
push
sub
xchg
pop
mov
cmp
dec
hlt
push
fnstenv
mov
jnp
test
add
jb
cmp
push
js
in
jo
clc
pusha
pushf
push
cli
pop
into
dec
xor
pmulhuw
pusha
push
pop
cmpl
divb
add
int
sahf
cmp
fs
ret
push
fiadds
lods
dec
sub
movb
push
add
rcr
inc
jo
call
sti
fildll
push
sub
adc
pop
sub
rclb
in
fwait
ret
jno
and
push
and
loop
mov
xchg
sbb
mov
dec
mov
push
test
bnd
jo
ret
ja
push
popa
test
repz
inc
inc
cmpsb
js
cmp
fimull
push
push
imul
adc
or
mov
call
loop
push
arpl
mov
mov
xchg
ss
mov
movsl
xor
stos
gs
xor
sub
jp
lret
adc
icebp
mov
stos
sarb
sub
xor
in
adc
jmp
xor
push
adc
lods
shr
mov
fs
adc
xor
clc
repz
mov
jle
xor
in
cli
mov
or
idivb
and
aas
mov
dec
and
repnz
shlb
mov
xchg
adc
jo
pop
insb
mov
push
or
rcl
pop
jne
in
pop
rclb
ret
push
in
add
mov
nop
stc
dec
add
mov
jne
jecxz
ss
lods
mov
pop
sbb
or
rol
push
add
inc
iret
xchg
push
out
repnz
jae
mov
adc
loop
pop
insl
mov
mov
rcll
pop
sarb
mov
xor
dec
sbb
movsl
push
cmpsb
clc
lret
in
or
xor
inc
xchg
push
push
sub
push
cmp
paddq
rsm
in
insl
mov
inc
inc
lss
sbbb
xchg
push
das
mov
push
fchs
mov
add
mov
and
call
cs
adc
mov
inc
inc
in
test
or
push
xor
jo
mov
push
pushf
cld
mov
push
jbe
pop
or
push
mov
shlb
ljmp
jne
rorl
xchg
push
push
adc
dec
jno
cmp
fsubr
flds
add
lahf
cmp
addl
lds
sbb
pop
js
dec
je
scas
push
out
or
lcall
xchg
mov
call
jbe
lock
pop
movsb
setns
dec
sub
addl
shrb
movsb
push
sbb
shrb
push
mov
stos
pop
mov
daa
enter
cmpsl
ss
call
add
lds
inc
rclb
cmp
xchg
add
es
push
xchg
mov
shl
jae
sbb
mov
xor
inc
jp
gs
inc
das
movl
imull
push
jg
in
popa
imul
lods
mov
push
sbb
ret
sub
enter
dec
inc
sbb
jo
int
ljmp
sub
add
xlat
adc
sub
lea
push
ret
cmp
ds
repz
mov
outsl
stc
pop
xor
ds
and
dec
sbb
or
jae
add
jb
ret
jle
lods
jle
dec
cmp
and
push
add
push
push
pop
pop
push
pop
xor
add
or
lods
adc
insb
pop
rol
sbbb
mov
sub
push
xorl
cltd
sbb
adc
pop
scas
mov
mov
mov
add
dec
in
push
xor
rolb
or
lock
test
or
stos
loopne
push
shrb
push
rclb
frstor
rolb
rorl
mov
popf
xchg
pop
mov
lds
negb
mov
adc
popf
ror
mov
into
dec
inc
jo
imul
pop
rol
nop
mov
xchg
pop
imul
out
shlb
mov
pop
out
push
pushf
inc
inc
out
adc
push
cli
filds
mov
cli
enter
xchg
mov
ljmp
add
rorb
les
push
in
cmpsl
inc
adc
jno
or
add
xchg
mov
inc
jmp
leave
mov
cmp
negl
push
jae
add
arpl
or
or
movsb
rol
jae
imul
scas
imull
and
rol
pop
insb
scas
mov
mov
mov
data16
mov
loop
xor
adc
aas
or
sbb
xchg
pop
adc
rclb
xchg
cltd
xor
cmpb
call
push
adc
sub
cmc
es
jmp
sub
dec
sub
stos
push
xchg
mov
pop
sub
sarb
fmull
push
sub
test
inc
mov
sbb
pop
stc
shrl
cltd
out
test
xlat
mov
rol
test
mov
sub
or
decl
push
xor
push
incl
adc
psllw
push
lret
andb
hlt
or
mov
push
xlat
pop
rolb
pop
lock
rolb
xor
pop
mov
inc
adc
rorl
sbb
mov
xor
adc
inc
mov
iret
pop
adc
push
call
push
popf
and
int
push
les
xorl
cmp
insl
sub
pusha
mov
push
pop
push
gs
inc
rcll
ret
mov
in
ds
test
push
les
jl
mov
mov
test
xchg
add
mov
sub
dec
cmp
pmaxub
fdivp
es
sbb
inc
inc
lret
inc
xor
sub
xchg
loope
xor
push
and
lock
fwait
pop
dec
addl
pop
lcall
lods
and
sub
jl
xchg
jo
mov
test
rcrb
dec
push
mov
popf
mov
mov
push
and
fs
pop
adc
xor
fidivl
sbb
mov
shll
aad
jmp
or
mov
pop
lods
push
cmpsb
xchg
testb
push
xlat
adc
in
or
or
sbb
mov
ret
xchg
sbb
adc
mov
stos
push
orl
pop
sbb
shrb
lods
ljmp
mov
push
xchg
lret
into
popf
mov
test
and
adc
fmuls
hlt
xor
add
and
sub
test
push
cmpsl
push
movsl
mulb
push
adc
mov
roll
or
loopne
pop
scas
repz
inc
rcl
mov
popf
leave
add
and
in
loope
jge
jne
mov
push
inc
add
sub
mov
sub
cmpsb
movsb
push
loope
arpl
sbb
mov
sub
cltd
ljmp
lds
push
insl
popf
repz
push
inc
lea
scas
push
orl
or
xchg
sub
and
cmp
out
or
push
push
les
push
pop
mov
inc
sub
fs
sbb
mov
sbb
dec
loopne
in
add
fcoml
jb
dec
cmp
test
pop
mov
scas
jno
mov
test
sbb
test
inc
rolb
push
lret
inc
jle
imul
push
frstor
repnz
or
xor
jecxz
jnp
jne
test
push
push
push
xor
sub
push
imul
mov
sub
mov
inc
icebp
add
mov
add
daa
scas
push
daa
sbb
xchg
add
into
or
fmul
aam
and
cmpsb
cmp
das
mov
cmpsl
push
sbb
jne
lsl
cmp
jo
enter
lcall
stos
mov
ror
stos
adc
ret
idiv
outsb
clc
push
cmp
add
mov
cmpsl
dec
xor
sbb
out
adc
mov
pop
daa
scas
sbb
push
adc
aas
and
rcrl
ljmp
adc
push
test
es
jp
push
push
shll
nop
jmp
enter
in
mov
in
push
subb
or
cmp
inc
or
adc
rcrl
sahf
jno
sbb
add
repz
cmpsl
mov
xor
nop
ret
inc
and
pop
push
lcall
or
mov
cmp
pop
rorl
pusha
mov
adc
inc
push
sbb
ret
scas
addr16
sbb
into
cmpsb
lea
hlt
cmc
mov
pushf
jp
sbb
je
push
cmp
loope
adc
and
icebp
lret
add
pop
nop
iret
inc
add
ja
add
xor
stc
data16
test
add
movsb
push
xlat
lds
pop
fdivrl
push
mov
test
test
adc
test
mov
lods
jne
ret
push
pusha
or
add
mov
cs
enter
push
sbb
push
je
adc
mov
call
clc
push
arpl
call
push
adc
or
incb
mov
inc
mov
add
adc
xor
ljmp
push
je
mov
or
stos
or
pop
gs
jg
push
pop
je
cmp
aas
sbb
mov
or
add
push
shlb
test
xor
fs
imulb
pop
ljmp
xor
lods
pop
inc
xchg
push
movsl
adc
xchg
cmpsb
xchg
adc
sbb
aam
jae
sarl
mov
mov
cld
and
loopne
jnp
hlt
lret
push
cmp
push
pop
push
inc
lcall
sbb
sbb
incb
and
sub
mov
les
inc
and
mov
or
lahf
jmp
mov
cmpsl
mov
lret
sbb
mov
fsubs
insl
adc
push
jo
sbb
mov
mov
out
push
xchg
pop
ss
push
push
stc
or
or
and
jmp
mov
loopne
or
fisubl
add
or
mov
mov
mov
xor
mov
sbb
repnz
xor
add
rolb
xor
pop
mov
clc
roll
mov
mov
inc
test
jbe
hlt
inc
xchg
mov
sbb
adc
push
bnd
push
rorl
sbb
call
mov
push
cmp
inc
xchg
loop
push
push
and
adc
outsb
dec
adc
adc
sbb
cli
sarl
jo
add
jae
dec
dec
adc
pop
push
scas
sub
or
ret
pop
pop
hlt
mov
xor
pop
lds
sub
push
xchg
es
pop
pop
or
add
push
or
insb
mov
sub
iret
mov
and
pop
popf
aam
nop
rclb
in
dec
dec
in
inc
sbb
popf
cmp
pop
stos
out
dec
adc
add
add
mov
push
adc
icebp
mov
or
popf
pop
mov
les
cwtl
mov
movsl
xchg
mov
push
in
int
push
pushf
into
cmp
or
mov
sbb
outsb
pop
or
push
bound
pop
adc
or
rol
ret
ror
imul
enter
leave
or
cmp
and
mulb
cli
lods
or
jne
cli
nop
in
and
leave
fsubl
lods
cli
subl
dec
fmul
inc
add
xchg
add
xlat
and
aad
mov
fadds
or
jecxz
sbb
sub
push
mov
xor
je
adc
test
xchg
pop
lret
ljmp
cmp
push
cmp
scas
dec
mov
push
push
dec
mov
xor
stc
rcl
mov
dec
lgdtl
lret
or
icebp
mov
leave
jbe
push
mov
and
mov
pop
cmp
jae
sbb
push
dec
push
aaa
rclb
shrb
sub
sbb
dec
sub
adc
cmp
pusha
mov
cmp
loope
sub
testb
int3
mov
clc
sbb
aam
jmp
cmp
jl,pt
push
inc
xor
push
push
add
pop
loopne
add
jmp
push
pop
mov
sbb
xor
dec
arpl
test
push
mov
aas
inc
mov
adc
fwait
mov
adc
xorb
aaa
push
inc
sbb
sbb
jne
and
scas
push
ret
mov
add
ret
pop
add
js
lret
pop
test
icebp
add
sbb
inc
or
cmp
xor
mov
inc
shrb
popf
push
insl
or
inc
add
adc
cvtdq2ps
add
adc
cmp
sub
inc
push
lret
sub
xchg
cltd
js
push
sahf
mov
faddl
outsb
sbb
out
scas
out
push
fstpt
add
xchg
sbb
daa
inc
push
or
inc
mov
icebp
cmp
sub
sub
mov
xchg
pop
push
pop
xchg
sbb
orb
aaa
and
daa
cmp
ljmp
fwait
sarb
inc
subb
push
scas
iret
inc
idivb
call
lcall
and
xchg
add
loope
jno
jg
test
mov
jmp
cld
and
es
jae
or
pushf
sti
jmp
mov
mov
aad
add
jp
jecxz
add
xchg
rolb
test
xchg
mov
mov
adc
jb
test
gs
mov
leave
xchg
push
add
mov
gs
cwtl
enter
pop
mov
adc
lds
sarl
pop
inc
mov
xor
subl
cwtl
and
stc
lahf
add
jb
aaa
sub
jecxz
dec
sub
adc
loop
pop
or
mov
in
jne
mov
stc
je
inc
cs
dec
pop
push
cmp
sub
ljmp
or
popf
pop
jne
pop
xor
mov
sub
cs
cmpsb
inc
insb
mov
movsb
mov
test
cli
pop
rolb
inc
push
enter
orl
pop
loope
mov
je
sub
xchg
push
cli
cmpsl
daa
sbb
jl
sub
mov
mov
jne
push
push
loop
xchg
adc
aam
sub
adc
cmp
in
mov
adc
push
mov
dec
adc
pop
or
and
scas
shr
pop
push
test
pop
aad
lds
arpl
divl
adc
and
test
pop
and
adc
sbb
add
gs
mov
bound
imul
or
jne
add
mov
sbb
inc
es
cmpsl
into
dec
ljmp
cli
or
out
push
mov
add
mov
dec
push
sbb
jb
sub
pop
mov
cmp
js
mov
stc
out
sbb
cmp
inc
sbb
push
mov
adc
int3
or
loop
lret
xchg
dec
pop
ret
xchg
mov
mov
inc
inc
cs
ds
dec
rclb
xor
imul
pop
lds
add
pop
cwtl
xchg
sbbl
cmp
dec
fwait
ret
loope
lret
dec
inc
loop
pop
add
orl
cmc
ss
and
cld
sbb
inc
test
or
mov
jbe
out
or
mov
jne
mov
sub
inc
pop
pop
hlt
hlt
adc
add
jb
shlb
add
sbb
insl
push
mov
psadbw
or
push
imul
or
mov
into
shll
or
lret
js
and
into
stc
dec
insb
push
insb
jbe
jnp
rcl
inc
cmp
pop
roll
adc
and
out
rol
rclb
leave
mov
pushf
mov
cwtl
xor
jae
mov
add
sbb
cld
sbb
jmp
imul
add
js
xchg
jp
je
fdivs
scas
or
xor
icebp
fisubl
jle
lds
fwait
loop
ds
out
jmp
mov
jle
imul
test
into
dec
aad
sbb
adc
jno
xchg
push
push
movb
call
lcall
and
insb
or
jecxz
add
test
adc
aad
scas
in
jecxz
jns
movsb
sub
add
scas
push
sbb
and
stos
int3
cmp
jmp
out
mov
inc
mov
aam
pop
leave
push
push
adc
xchg
imul
mov
fisubrl
stos
rcl
push
sbb
gs
xor
movzbl
sub
arpl
ret
adc
sbb
xor
add
sbb
adc
xchg
bound
push
dec
icebp
sbb
cmpl
cmp
xchg
es
inc
dec
jle
stos
int
xor
mov
add
mov
sbb
aad
inc
loope
or
std
sub
mov
shll
adcl
xor
or
sub
icebp
push
xchg
fld
add
add
adc
rclb
mov
aaa
xchg
add
add
add
int
rclb
sub
out
add
test
cmp
mov
dec
rolb
cmp
inc
out
push
dec
mov
xchg
cli
fwait
pop
loopne
xchg
push
xchg
enter
inc
or
pop
jmp
sbb
sbb
pusha
jne
enter
rolb
or
sbb
in
movsb
add
stos
loope
jae
cmp
fmull
sub
pop
int
mov
pop
int
xlat
or
add
pop
push
orb
add
scas
sbb
ss
cmc
push
mov
out
add
or
xor
xor
xor
or
xchg
push
imul
xchg
sbb
into
or
jp
cmp
stos
pusha
push
xor
aam
aaa
add
ret
inc
add
or
sub
shll
stos
xchg
test
add
enter
mov
sbb
push
push
adc
mov
xor
cmp
ljmp
push
andb
sbb
push
pop
repnz
mov
lret
scas
mov
push
mov
pop
inc
xor
mov
sub
and
clc
push
or
sub
sub
jg
out
mov
data16
and
add
stos
add
cmp
adc
pop
push
test
cwtl
jo
xor
inc
pop
stos
pop
xchg
push
fldl
ror
test
pushaw
push
mov
push
sub
push
mov
cmp
or
push
test
addb
inc
scas
lods
xor
outsl
cmpsl
ret
shlb
push
mov
loope
lods
out
lea
push
xorb
and
adc
clc
je
mov
nop
aad
dec
lods
ret
scas
xlat
push
repnz
cmp
jle
or
jae
or
cmpsb
or
fadd
gs
add
inc
pop
pusha
adc
sbb
je
ret
add
sbb
pop
stc
lea
mov
xor
xchg
xor
inc
mov
inc
aad
test
iret
inc
movsb
pop
push
repnz
leave
cwtl
adc
push
sbb
les
mov
std
mov
adc
or
stos
sbb
push
push
std
push
cmpsb
pop
lock
sbb
std
cmp
sub
mov
pop
daa
add
or
inc
clc
inc
sub
ret
sbb
dec
mov
inc
int3
or
mov
lds
push
in
push
movsl
jb
jns
dec
push
out
pop
mov
call
lret
mov
or
fiadds
fildl
fisubl
or
in
imul
lock
es
pop
pop
aam
mov
add
or
cmp
sbb
inc
add
and
jp
lahf
pop
gs
mov
adc
mov
pop
icebp
inc
push
loop
cltd
or
sbb
or
push
cmpsl
ret
rcrl
addl
jb
iret
push
mov
fcoms
sub
mov
adc
rol
xor
fiadds
incb
adc
xor
push
inc
inc
pop
aam
lcall
mov
bound
test
lds
sbb
cmp
shlb
push
int
loopne
into
leave
dec
icebp
inc
add
add
bound
shll
ljmp
pop
xor
jl
ret
inc
cmp
out
clc
and
cmpsl
ret
and
pop
xchg
rorb
pop
pop
fwait
stos
es
mov
shll
lret
adc
orb
ror
add
jns
push
push
or
or
adc
mov
or
dec
mov
lds
adc
cli
test
int
xlat
adc
push
cmpsb
pop
lahf
incb
mov
cmpsl
and
adc
add
or
inc
faddp
mov
mov
test
sbb
fnstenv
nop
andb
test
test
andl
jnp
inc
inc
aas
add
rorl
or
rorl
dec
push
ljmp
movsb
mul
mov
adc
sub
pmaddwd
jp
cmp
jo
mov
notb
inc
adc
dec
dec
push
sar
mov
loopne
scas
mov
mov
ljmp
jae
push
xor
inc
adc
leave
jb
add
imul
int
insb
sahf
rcll
adc
jno
stos
dec
sbb
cmp
or
sahf
push
push
out
daa
stos
cmp
jnp
imul
mov
or
xor
addr16
dec
shll
test
mov
mov
sub
mov
ret
into
sbb
push
je
pusha
test
or
and
push
push
mov
sub
jp
dec
shlb
sarl
or
in
mov
cmpsl
ds
adc
cli
or
or
or
adc
or
pop
inc
or
mov
xchg
xor
addr16
add
cmp
sbb
mov
rcll
jb
add
push
aad
sbb
mov
bound
ss
sub
add
iret
pop
fsubrl
loopne
nop
shl
sbb
sbbl
mov
mov
add
test
add
ljmp
gs
jmp
adc
inc
adc
cmp
mov
imul
loopne
jae
adc
rcl
cmp
stc
std
enter
push
loop
xchg
xor
call
jno
nop
add
popf
push
call
adc
add
movsb
lahf
in
sbb
sub
shl
popf
add
ret
push
pop
pop
jp
push
inc
push
jns
rolb
fldl
add
add
lods
decl
cmp
adc
add
add
test
and
scas
mov
push
cwtl
fdivrl
add
add
mov
cs
lods
fcompl
inc
push
fcmovb
out
or
sbb
add
les
pusha
insb
mov
aad
or
push
mov
push
and
push
sbb
rcll
rcrl
int
loopne
mov
test
movsl
add
xor
add
cmc
add
fs
loopne
xchg
dec
aam
shll
pop
lods
mov
mov
subb
stos
mov
jmp
sbb
and
aad
or
mov
int
adc
add
rcrl
mov
push
mov
jo
push
pushf
enter
inc
movsl
cwtl
gs
pop
sbb
or
jo
mov
daa
mov
or
mov
lahf
rcll
in
and
add
xor
add
inc
mov
mov
outsl
mov
mov
mov
xchg
pop
mov
push
add
inc
mov
add
mov
or
or
sbb
mov
cmpsl
das
adcb
das
jo
jle
movhps
ja
popl
mov
inc
add
cmc
jmp
sbb
sub
sbb
jmp
push
pop
call
pop
pop
adc
cmp
shrl
sub
enter
push
fnstcw
mov
push
inc
inc
adc
add
cmp
lret
mov
mov
loopne
add
jns
pop
push
rcll
mov
sbb
ficomps
pop
cs
mov
xor
and
js
ds
rorl
mov
mov
arpl
xchg
sub
pop
or
fcompl
push
mov
into
add
or
mov
rcll
lds
dec
add
adc
lock
pop
loope
out
inc
int3
or
cmp
adcl
or
inc
es
subb
sbb
xchg
into
adc
sub
mov
push
pop
rclb
ret
daa
shll
in
push
lods
add
xor
into
fs
cmp
leave
mov
mov
stos
adc
jnp
pop
rcrb
leave
jmp
push
cwtl
test
imul
xchg
cmp
push
stos
inc
scas
xchg
pop
sub
or
and
in
xor
les
push
dec
cmp
mov
and
dec
add
push
push
push
bound
fstpt
sub
aam
sbbl
push
pop
add
mov
sub
rol
in
pop
scas
or
fiadds
cmpsb
jg
sbb
add
inc
sti
test
push
sub
adc
lret
push
xchg
clc
inc
sbb
add
add
clc
andl
and
xchg
test
sbb
mov
pop
es
ljmp
xchg
mov
cmpsl
es
add
xor
out
sub
fcompl
jp
add
popf
pop
sub
adc
ret
inc
test
inc
test
sbb
xor
add
pusha
or
push
push
rcll
jb
nop
outsl
mov
je
test
and
jge
sbb
sti
and
xor
dec
scas
daa
bound
sbb
mov
fs
iret
push
add
aad
lods
xor
adc
inc
inc
adc
add
mov
or
call
xchg
jge
add
adc
sbb
mov
fisubrl
lret
adc
test
and
push
inc
push
sbb
jmp
loopne
je
pop
les
mov
ror
test
lock
pushf
rcll
push
push
test
and
lret
add
out
inc
add
push
sbb
push
sbb
pusha
mov
or
xor
lcall
xor
xchg
das
mov
scas
faddl
loope
not
sub
shrb
jl
stc
sbb
aaa
stos
or
adc
mov
dec
mov
loope
into
fisubl
pop
sub
out
adc
sub
loope
push
fstl
lea
insl
popf
add
test
jg
notb
addr16
jle
lahf
into
inc
xchg
dec
leave
jmp
inc
cmp
call
add
and
ss
inc
add
jle
or
inc
xorl
andb
push
add
leave
hlt
and
xchg
push
das
push
and
add
out
ret
mov
add
push
jo
shr
adcb
dec
or
xor
sub
push
cmp
lock
pop
je
xchg
jnp
les
jne
cmc
cmp
clc
ljmp
adc
jo
out
rolb
mov
mov
sbb
mov
sub
xchg
sub
stos
lret
sbb
add
cvtpi2ps
ret
pop
std
xor
aam
mov
call
mov
mov
in
aad
xor
or
pop
add
push
xchg
jl
and
add
and
push
mov
popf
jo
mov
dec
xchg
add
add
push
jnp
jno
add
or
adc
mov
lock
push
add
mov
or
and
mov
cmp
mov
nop
and
adcl
jg
aad
sbb
addl
push
lods
inc
xchg
cs
mov
or
pusha
mov
mov
sbb
xor
ret
sbb
rdtsc
sub
or
cltd
push
xchg
push
jle
inc
xchg
jp
add
shll
inc
pushf
insl
and
mov
mov
push
add
ret
xchg
add
rorl
add
xor
cli
icebp
mov
orb
adcb
rol
cmp
fdiv
pop
mov
call
or
cltd
stos
in
sub
dec
mov
sbb
sub
push
xchg
mov
nop
jmp
mov
stos
sub
pop
repnz
mov
add
push
cmp
jne
add
inc
mov
xchg
inc
adc
movsb
pop
jae
mov
sbb
push
mov
mov
adc
and
or
add
dec
les
popa
push
push
push
mov
push
mov
add
addb
xchg
jae
mov
cmpsl
push
sub
push
adc
pushl
test
adc
cmp
pop
stos
sbb
mov
idivb
sub
test
fistpll
xor
inc
out
ss
add
sub
test
mov
call
aad
gs
inc
mov
aad
sbb
and
jb
fistpl
lods
mov
jp
or
sbb
or
inc
cwtl
flds
inc
dec
subb
enter
sti
in
cmp
or
pop
mov
mov
sbbb
push
mov
lds
sub
inc
mul
mov
test
or
cmp
inc
loopne
xor
fstl
dec
jnp
adc
jae
sbb
jae
push
sub
popf
pop
and
mov
aad
and
push
or
mov
push
mov
xchg
sbb
push
leave
sti
xor
add
and
loope
and
scas
or
add
mov
cmp
shl
cmpsl
mov
dec
cmp
stos
cltd
and
cmp
mov
mov
mov
pop
dec
xor
icebp
mov
or
mov
orl
mov
lahf
push
ja
sbb
push
sub
scas
pop
setle
mov
cmpsb
push
arpl
fldl
adc
in
mov
inc
ret
adc
xchg
icebp
push
cwtl
cwtl
jne
add
sbb
mov
mov
jo
test
fiaddl
mov
mov
bound
adc
mov
jne
inc
push
adc
dec
adc
push
or
sbb
in
sub
into
adc
rcrb
aad
ret
push
imul
and
sbb
add
loope
out
shll
or
jmp
lock
jle
popa
sbb
ds
sub
sbb
add
dec
pop
mov
mov
add
lock
popa
dec
mov
jo
pop
push
dec
xor
jno
gs
clc
loope
mov
sbb
decb
adc
add
jg
hlt
push
outsb
xorl
push
lahf
sbb
sbb
stos
sbb
cli
sub
adc
sub
loopne
je
or
clts
pop
cmc
jl
dec
callw
sbbb
pop
xchg
enter
cmp
xor
rcl
xor
xor
nop
insb
or
clc
loopne
xor
inc
mov
sbb
inc
mov
les
xchg
add
imul
cmp
das
bound
pop
mov
pop
mov
adc
rclb
adc
jae
ret
dec
xor
stos
mov
mov
push
or
inc
xor
or
ret
addb
ds
in
out
rolb
shrl
mov
jo
push
insb
pop
adc
nopl
mov
sub
add
push
adc
ret
sbb
mov
pop
leave
cltd
add
xor
push
cmp
push
adc
or
shll
test
in
dec
mov
push
sub
fiadds
cmp
addr16
ljmp
filds
cmp
sub
mov
rorb
addb
add
test
cltd
add
xchg
and
or
pop
out
pop
or
pop
lods
xor
inc
push
inc
ret
or
xchg
mov
loope
and
mov
push
insb
stos
or
insl
inc
mov
and
adc
jo
test
fucomi
push
gs
shlb
mov
arpl
movsl
lcall
cs
popf
sub
jmp
jb
or
test
scas
inc
sub
shlb
out
scas
popa
andb
xor
cmp
push
pop
xchg
enter
sub
jle
pop
and
notl
lods
jmp
mov
andb
push
int
or
jl
je
pop
call
mov
popa
mov
jbe
mov
sub
ss
adc
jo
scas
neg
shll
jb
push
scas
test
add
inc
adc
addb
mov
push
mov
test
stc
fmulp
sbb
adc
aam
out
sub
addb
adc
adc
mov
into
xlat
and
mov
shlb
pop
push
aad
adc
xor
sbb
push
insl
inc
adc
dec
cs
sbb
movsb
push
pop
or
push
test
jo
lock
testl
shll
out
mov
or
in
test
dec
rclb
xor
lahf
jae
ret
test
leave
ds
aad
xor
push
fsubs
mov
out
adc
sbb
or
or
fidivl
mov
loopne
add
mov
orb
adcl
ror
inc
popa
sbb
and
push
cmp
jecxz
je
es
hlt
das
mov
mov
or
rolb
sarb
out
popw
mov
popf
adc
pop
dec
dec
mov
push
adc
add
imul
push
adc
rcl
lods
pop
pop
push
leave
push
xchg
mov
push
fwait
sbb
pop
testl
call
adcb
popa
ljmp
mov
cmp
repnz
xchg
adc
jne
sbb
sbb
arpl
xchg
jae
jmp
int3
push
add
stc
faddl
lret
xchg
mov
pop
rorb
hlt
or
fs
sbbl
dec
test
icebp
push
sub
popf
call
xor
jno
xchg
sbb
pop
dec
jmp
xor
sub
in
or
sarb
lret
xchg
jecxz
ret
sarl
mov
pop
mov
loopne
sbb
add
out
add
hlt
mov
mov
sbb
push
out
add
adc
xor
orb
mov
adc
lock
shr
enter
inc
subl
je
stos
xchg
push
hlt
add
scas
inc
mov
inc
sub
adc
addl
das
inc
popf
or
fcmovb
add
loopne
dec
lea
mov
sbb
addb
sub
pushf
cli
addr16
and
sbb
dec
push
adc
int3
lock
icebp
add
sti
push
mov
mov
pop
inc
pusha
add
pop
loopne
adc
inc
dec
pop
rcl
dec
inc
dec
xor
or
lods
loopne
add
and
pop
mov
sub
sbb
xchg
cmc
xchg
mov
repnz
iret
or
mov
inc
rcll
enter
sub
mov
sub
clc
jo
mov
cmp
mov
inc
sub
jnp
out
orb
rorb
add
cli
or
xor
adc
cs
xchg
sbb
add
add
mov
cmp
mov
xor
sub
mov
pop
sbb
or
add
sbb
inc
jnp
pop
sbb
rep
or
imul
xchg
jecxz
add
and
and
pop
mov
and
mov
leave
mov
enter
cmp
mov
xor
sti
iret
adc
rolb
shrb
nop
adc
adc
movsl
push
hlt
sub
aam
cli
scas
push
sbb
imull
jp
adcl
sbb
push
xchg
stos
ret
inc
xor
or
mov
mov
sbb
test
xchg
ret
add
aam
lea
xor
sub
js
add
xorb
xor
popl
inc
xchg
mov
fsubrs
inc
ret
enter
cmp
test
mov
xor
sbb
pop
mov
adc
push
into
dec
icebp
adc
dec
aam
xor
ljmp
rol
fnsave
adc
sbb
test
into
xchg
adc
aam
mov
jo
add
push
xchg
push
dec
xchg
bound
dec
mov
mov
icebp
pop
lds
pop
xlat
push
psubb
icebp
pushf
add
push
xor
adc
sbb
insl
movsl
mov
jb
adc
add
daa
lcall
sbb
lahf
push
push
push
rolb
push
pop
mov
imul
mov
xor
add
test
rcrb
adc
fisubl
push
leave
jmp
call
pop
xor
add
ret
push
inc
sub
xor
xor
ret
sbb
sbb
nop
or
sbb
mov
cmc
mov
ret
adc
rcl
inc
loop
xlat
mov
lods
sbb
xor
push
mov
adc
mov
sbb
gs
sub
es
adc
and
and
push
ret
sub
mov
stos
pop
add
sub
test
mov
mov
adc
test
mov
cwtl
sub
xor
sub
cmp
bound
push
or
cltd
cli
cwtl
ret
xor
add
and
sub
xor
cmpl
sahf
and
or
cld
xchg
mov
xor
and
mov
imul
mov
add
sbb
lret
add
mov
sbb
jne
and
push
mov
pop
lds
pop
lock
lock
sbb
test
dec
xchg
mov
xchg
cltd
and
jecxz
cmpsb
dec
rclb
dec
mov
roll
pop
adc
repnz
sub
adcb
dec
add
sbb
call
fwait
jmp
inc
pop
xlat
div
ds
adc
lret
adc
xor
mov
dec
mov
je
cmp
mov
adc
adc
add
mov
adc
lods
cs
es
push
sub
mov
dec
adc
cmp
pop
add
and
add
shlb
cmpb
push
lea
inc
enter
out
lds
sbbb
imul
xchg
inc
xchg
xor
sahf
xor
movlps
rorb
inc
xor
jne
mov
dec
shrl
ja
adc
sbb
jp
test
into
cwtl
out
sbb
jl
ret
ds
lcall
add
sub
jno
rcrb
sbb
jne
cs
mov
notb
pop
add
inc
adc
inc
mov
mov
adc
sbb
hlt
push
jae
mov
mov
repnz
daa
inc
xor
stos
rorb
and
das
and
push
test
xchg
lock
pop
adc
dec
mov
push
push
add
mov
clc
adc
adc
hlt
enter
sub
ljmp
js
enter
js
xor
mul
or
js
sbb
sbb
sbb
push
add
arpl
out
and
mov
test
lret
dec
push
outsb
aad
enter
repz
movsl
inc
shrl
mov
add
or
cs
stc
pusha
sbb
cs
cmp
aam
sbb
cwtl
repnz
movb
pushl
adc
mov
add
add
aad
add
outsb
call
jbe
mov
sbb
addl
add
inc
cmp
mov
je
ss
add
sub
push
xchg
sbb
into
add
inc
mov
sbb
cmpsl
mov
bound
pop
xchg
aam
mov
shlb
shl
jne
rcll
or
push
stos
sbb
or
push
jmp
adc
or
cltd
push
add
mov
cmp
adc
pop
scas
and
addr16
push
xchg
mov
add
rolb
mov
xchg
add
ret
hlt
icebp
ljmp
sbb
or
inc
test
iret
sub
push
cmp
stos
add
out
shl
add
inc
jno
int3
into
add
bound
into
push
arpl
int
mov
into
psadbw
push
and
not
push
scas
stos
add
cli
lds
adc
sbb
bound
push
jge
add
mov
pop
imulb
pop
add
aam
or
es
sub
and
inc
mov
adc
lret
lock
adc
jl
sub
orl
sbb
pop
xchg
ljmp
add
and
or
inc
icebp
les
enter
add
xor
aam
push
fsub
mov
or
xor
jl
xchg
sub
movb
push
out
aad
aam
mov
jb
test
and
sub
sub
push
inc
decb
inc
or
pop
stos
mov
ss
pop
mov
repnz
and
jo
sub
aad
push
dec
inc
lods
mov
jmp
adc
xor
sub
in
xor
add
sbb
inc
jo
aam
into
stc
pop
scas
call
stos
movhps
add
pop
notb
xchg
or
add
pop
fistpl
xor
dec
add
xor
or
int
and
push
cmpb
sti
and
sbb
cmpsl
mov
sub
push
mov
aad
insl
lods
push
ss
lea
ror
roll
mov
hlt
lret
sbb
adc
push
clc
push
xchg
enter
lret
add
mov
sti
lds
pop
and
cmp
lcall
test
stos
test
jmp
pop
bound
test
mov
lret
push
lret
xchg
das
mov
aaa
or
test
push
push
aam
pop
frstor
push
sahf
or
sbb
sbb
test
inc
cmp
icebp
ficomps
adc
lods
movsl
push
outsl
mov
repz
or
jecxz
adc
pop
shrb
or
insb
xchg
pop
inc
sbb
aaa
add
lds
std
jb
mov
into
addb
test
jnp
notb
pop
inc
sub
add
cmpsb
push
inc
xchg
sbb
movsl
and
mov
add
je
mov
or
sub
cmp
or
cltd
and
cmp
es
test
dec
or
ljmp
test
or
xchg
faddl
and
movsl
push
pusha
loope
mov
push
pop
mov
add
jl
or
sbb
sub
insl
adc
sub
xchg
add
out
shlb
inc
fsubrl
sbb
mov
out
push
jmp
jne
andl
es
sbb
or
popf
xchg
in
dec
add
xor
bound
int
mov
lods
lret
negb
xchg
mov
scas
nop
shll
inc
xchg
sub
or
adcb
mov
stos
pop
pop
lock
sub
fstpl
sbb
lcall
test
mov
shrl
and
lret
rep
mov
stos
sub
xor
roll
bound
loopne
call
shlb
rcrl
loop
sbb
or
mov
mov
inc
pop
adc
lret
es
mov
or
push
adc
inc
cli
loopne
xchg
or
mov
leave
xor
mov
stos
dec
hlt
fs
rolb
mov
pop
in
inc
sbb
xchg
sub
sbb
ret
lret
sbb
je
pop
inc
scas
cmpsb
aaa
out
add
cmpsb
out
xor
add
jb
inc
jg
push
mov
mov
cmpsl
cmp
or
push
dec
call
adc
push
test
mov
cltd
add
clc
add
lcall
pop
adc
xor
push
and
into
push
addl
orb
cmp
cmp
jmp
js
jae
mov
adc
pop
push
repz
push
inc
int
mov
sub
pop
jp
ds
xor
or
andb
cmc
dec
add
mov
mov
adc
fstps
or
test
movl
insb
push
daa
subl
mov
inc
lods
call
dec
mov
fistpll
push
pop
mov
push
call
add
push
jg
clc
jmp
sbb
mov
push
orb
mov
push
lret
insb
lea
cmp
shrl
mov
in
jne
or
sbb
cmp
iret
sti
in
inc
scas
and
adc
xchg
dec
dec
pop
mov
mov
fsubrl
test
mov
add
inc
mov
incl
add
cmpsb
sarl
das
movsb
lock
adc
mov
dec
jne
sub
pop
in
push
stos
sbb
add
loopne
insl
xchg
leave
sbb
pop
subb
fdivl
push
vcvtsd2ss
stos
inc
negb
mov
inc
sbb
pushf
and
pop
xorl
loope
lcall
or
lods
bound
es
mov
enter
mov
enter
in
mov
xor
sbbb
dec
xor
pop
mov
loope
sub
mov
push
push
cmp
lcall
cmp
xchg
aad
jnp
int
push
pop
mov
stos
mov
mov
mov
jo
sti
xchg
adc
push
sbb
cmp
inc
enter
xchg
mov
rolb
mov
cmp
adc
cmp
and
mov
js
mov
data16
es
imul
xchg
xchg
cmp
push
shlb
inc
lret
xor
pushf
or
sahf
call
mov
mov
dec
cmp
sar
add
mov
jg
xor
push
or
mov
add
add
xchg
aad
lret
mov
and
push
xchg
lods
call
pushf
mov
dec
pusha
mov
sti
ret
mov
push
lea
sbb
inc
adc
test
xor
loopne
popa
sbb
lret
popa
insb
jb
pop
mov
lds
data16
popa
sbb
dec
movnti
test
pop
shll
inc
adc
push
mov
ret
or
inc
adc
mov
pop
add
sub
inc
shll
add
dec
mov
adc
mov
inc
adc
in
jb
xor
shrb
mov
inc
loopne
dec
sbb
mov
outsb
push
dec
pusha
ret
cmp
test
mov
xor
sbb
pushf
xchg
and
shlb
inc
out
test
pop
and
push
pusha
adc
sti
mov
jo
mov
push
push
inc
mov
stos
and
out
add
fcmovu
aas
lret
jne
pop
push
push
in
and
jo
rolb
xchg
repnz
cmp
pop
pop
cmp
addr16
mov
movsl
and
movsl
ljmp
sub
shrl
pop
cmc
aad
fwait
add
mov
dec
mov
inc
loopne
push
mov
cmp
test
push
and
push
mov
repnz
push
or
jp
leave
mov
add
push
enter
sbb
adc
lcall
sbb
push
mov
sahf
cli
subl
adcl
mov
pushf
add
mov
lret
cmp
push
push
adc
push
push
je
cwtl
sbb
adc
out
sub
mov
pop
out
or
jp
ret
jmp
jne
mov
adc
aaa
scas
and
xor
mov
rcrb
xchg
cs
or
add
cmpsl
add
mov
push
pop
and
push
adc
push
jae
lret
cmpsb
ud2
rorl
mov
cwtl
mov
adc
inc
jmp
xchg
cs
lock
popf
fldcw
adc
adc
setle
sbb
fstl
adc
jbe
xor
bound
orb
iret
add
test
jae
xchg
mov
les
bound
cmp
sub
rolb
scas
andb
sub
lret
adc
xchg
shl
sub
je
sub
cmp
jl
repnz
shrb
ljmp
and
shrl
pop
loopne
aad
test
add
adc
pop
enter
fwait
cmp
and
lods
cli
xchg
enter
push
push
fcmove
mov
and
enter
xor
push
loopne
cmpb
fidivl
lret
into
fists
xor
xor
add
add
nop
sub
xchg
loop
adc
cwtl
test
enter
nop
jmp
add
pop
shl
call
jmp
or
push
hlt
jbe
pop
inc
jnp
repnz
push
enter
or
mov
add
xor
adc
xor
cmp
je
adc
pop
mov
push
and
or
dec
sahf
adc
ret
inc
push
movsl
mov
lcall
lock
and
fucomi
insb
add
inc
push
push
orl
lret
xor
or
jo
lcall
adc
addb
cli
repnz
mov
sub
or
mov
xor
lods
pop
imul
jle
lret
xor
push
jg
xchg
push
sbb
fucomp
mov
rcll
add
sub
pop
cmc
pop
push
add
inc
lds
push
pop
sbb
out
push
mov
adc
xor
sbb
ficompl
xor
cmp
push
and
push
pop
shll
or
add
leave
and
adc
aam
sbb
out
jae
mov
sub
mov
mov
dec
adc
out
inc
pop
jne
sbb
push
movsl
repnz
add
shlb
enter
insl
jge
sub
popa
fistpl
inc
xchg
mov
inc
mov
jne
loope
mov
repnz
orb
in
xor
lds
jne
lret
push
xor
adc
sbb
lds
out
enter
sbb
das
cmp
mov
pop
or
and
adc
inc
insl
es
stc
xchg
test
inc
xorl
stos
and
cli
add
add
xchg
shlb
adc
inc
roll
cwtl
lock
inc
sbb
pop
loopne
sub
lock
test
lock
es
out
adc
add
cmp
call
leave
ret
pushf
mov
sbb
xchg
sti
sbb
mov
mov
jae
xor
stos
adc
roll
pop
inc
adc
outsl
add
out
jo
test
daa
cwtl
sub
daa
push
lret
sub
mov
add
and
inc
out
cmp
loopne
mov
sub
add
stos
je,pn
rorb
or
adc
mov
pusha
stos
pop
fwait
not
inc
in
add
jmp
insb
mov
or
mov
mov
jp
add
ja
cli
add
stos
popf
nop
add
dec
ret
rcll
mov
cmpsb
mov
sbb
and
pop
bound
push
mov
xchg
xchg
push
sub
jle
icebp
adc
or
pop
inc
mov
or
cmp
xchg
roll
sbb
ret
div
fcomps
lret
lahf
pop
sbb
pop
cmp
addb
ret
or
lock
mov
shlb
mov
or
ljmp
pop
adc
je
ret
mov
dec
sbb
and
clc
jno
xlat
xchg
dec
mov
push
sbb
mov
inc
shlb
xor
or
sbb
add
xor
ljmp
cld
pop
xor
or
xchg
stos
call
or
sbb
mov
xchg
jmp
pop
pop
lahf
mov
add
xchg
fidivl
inc
sub
jb,pn
add
mov
cmp
rolb
xchg
inc
sbb
loopne
loopne
ljmp
ret
adcb
stos
or
idivb
scas
push
inc
leave
push
mov
mov
ds
pusha
les
jmp
jo
inc
test
adc
push
add
jle
or
inc
push
mov
mov
les
addl
jmp
xchg
cli
inc
sub
addr16
adc
sahf
jb
cltd
enter
add
mov
leave
sub
aad
adc
enter
test
add
lret
lcall
mov
sahf
push
adc
dec
aad
mov
sar
mov
pop
inc
test
add
cmp
pop
movl
pop
mov
stos
loopne
push
imull
movsl
jb
mov
and
ljmp
mov
in
or
scas
lea
into
hlt
dec
mov
dec
mov
test
loope
sbb
xor
sbb
mov
ja
inc
test
test
fsubr
call
cmpsl
clc
sub
and
repnz
or
and
mov
aas
or
das
int3
push
loopne
push
cmp
push
jns
push
test
add
pushf
sbbb
call
push
adc
and
dec
repz
and
ss
int
jb
mov
out
dec
scas
clc
addb
test
inc
push
jmp
movsb
enter
add
test
lock
aad
leave
shrb
mov
jo
loope
push
sub
inc
es
cli
jp
mov
and
or
cmpb
lock
cmp
jp
stos
push
roll
jmp
out
or
scas
andb
mov
hlt
aad
stos
sbbl
sbb
jp
mov
xchg
mov
sbb
mov
cmovg
add
loopne
cmc
popa
lods
add
pop
outsl
sti
cmp
jbe
push
nop
jae
cmpl
dec
dec
aaa
push
add
pop
enter
lods
push
push
mov
ret
push
cs
fwait
enter
pop
cltd
or
xchg
imul
cmc
and
pop
inc
push
push
mov
cmp
add
pop
rcrb
lea
lds
inc
test
lahf
or
mov
ret
xchg
dec
inc
push
in
int3
enter
mov
imul
cltd
jb
xlat
orb
add
sub
je
jb
push
call
lcall
test
jne
mov
jae
mov
sarb
rol
mov
das
ret
push
mov
mov
mov
pop
hlt
adc
rolb
jge
add
pop
data16
loopne
fmull
icebp
mov
jp
jae
outsb
jbe
adc
push
add
add
into
mov
adc
or
imul
arpl
lcall
js
jne
enter
pop
leave
sbb
lret
rolb
adc
mov
scas
mov
push
pop
pusha
inc
cwtl
add
mov
test
bound
mov
data16
xor
aad
rcrl
hlt
adc
stos
adc
add
xchg
sub
lds
call
add
xor
push
imul
sbb
pusha
push
addr16
xor
scas
push
xchg
mov
inc
push
into
in
sarb
sbb
mov
jp
mov
sbb
pop
not
jge
jne
lea
sub
icebp
or
sbb
gs
shr
inc
sbb
push
ja
shlb
js
dec
int
mov
andb
mov
stos
test
popf
or
add
orl
adc
add
adc
or
in
ret
cmp
push
mov
lds
mov
dec
lock
mov
adc
sub
call
gs
rol
add
mov
fabs
rcrb
pcmpgtw
cmp
imul
mov
push
pushf
cwtl
inc
sbb
insb
pop
xor
or
mov
jmp
or
or
adc
mov
cmc
pop
adc
popa
push
movsb
sbb
sbb
pop
and
fdivp
jnp
mov
mov
xchg
mov
sub
or
jp
pusha
pop
xor
adc
push
loopne
js
dec
or
pop
and
mov
jo
hlt
mov
cmc
popf
push
test
xchg
push
jl
lods
sub
cmpsl
jb
or
lock
push
push
mov
xchg
add
sub
icebp
out
adc
adc
bound
add
inc
movsb
xchg
insb
repnz
adc
pop
addr16
add
push
mov
add
pop
pop
aam
sbb
test
cmc
rcrb
push
lea
in
dec
dec
loope
testl
pop
inc
push
js
mov
stos
bound
ljmp
pop
loope
mov
and
cmp
jbe
popf
push
loop
fcompl
jmp
or
lds
incb
push
xchg
or
int
add
mov
push
cmp
or
cmp
dec
add
add
adc
sbb
jno
mov
sbb
call
out
sub
adc
mov
dec
repz
js
inc
lock
mov
aam
rcl
hlt
dec
xor
sbb
sbb
mov
enter
pop
sbb
inc
inc
jns
xor
add
mulb
clc
and
adc
aad
out
inc
push
stos
push
xor
sarb
je
mov
pushf
push
or
dec
andb
mov
add
subb
inc
mov
ret
imul
mov
sbb
mov
mov
sub
sub
push
inc
xor
sbb
inc
jb
pushf
add
stos
or
adc
xor
sub
add
push
or
mov
fcomps
sbb
mov
pop
push
jo
cmp
into
inc
mov
cmc
add
or
inc
push
call
cmpsb
jo
adc
push
dec
mov
push
cwtl
mov
outsl
scas
cs
je
mov
xchg
lret
mov
movsl
popa
jb
add
xor
cmp
dec
pop
pusha
push
xor
lea
das
in
pop
rolb
dec
or
shrl
push
cmpsb
adc
call
fs
xchg
mov
push
adc
arpl
mov
xchg
mov
jbe
loopne
mov
xor
lahf
lret
hlt
roll
mov
adc
adc
out
and
and
iret
mov
mov
cmpsl
push
push
cmp
adc
enter
ret
lret
add
xlat
shrb
jo
add
add
push
subb
popf
ljmp
add
or
scas
enter
jp
pop
imul
mov
sbb
jbe
dec
push
pop
adc
lock
xchg
or
add
adc
out
stos
dec
push
lret
stos
mov
push
xor
sub
jb
jl
inc
push
les
arpl
mov
rorb
and
pusha
enter
pop
insb
shll
add
sbb
mov
int3
pop
add
stos
cs
jne
and
roll
jb
adc
int3
adc
icebp
lret
sbb
bound
xor
xor
lods
mov
sbb
decl
cmp
xor
add
andl
xchg
xlat
push
inc
add
sbb
cmp
add
out
xchg
call
sub
xor
xchg
loop
outsb
sub
xor
and
mov
sub
mov
push
leave
jmp
sub
push
inc
inc
push
push
pop
call
stos
xor
or
outsl
das
inc
dec
inc
sar
add
and
push
idivb
cmp
pop
xchg
jge
pop
or
ret
mov
movw
xchg
sbb
dec
fdivrp
or
push
pusha
adc
mov
jmp
mov
push
shlb
pop
xor
insb
add
jnp
leave
outsl
or
adc
js
ljmp
push
insl
push
lods
cli
cmp
push
adc
push
or
in
insl
mov
rorb
sbb
rorl
repnz
jo
ljmp
aad
enter
test
repnz
ret
jbe
jae
adc
push
test
leave
xchg
divb
or
jne
sbb
adc
jp
cmp
ds
or
clc
add
add
push
mov
push
sub
mov
and
adc
jno
and
and
lods
sbb
cmp
pop
loope
mov
out
bound
pop
add
sbb
mov
mov
inc
pushf
orb
pop
adc
test
pop
data16
push
in
cmp
ljmp
xchg
or
lahf
ret
jo
push
mov
push
push
push
daa
lret
in
jle
xchg
stc
adc
adc
pop
inc
jae
pop
dec
or
inc
daa
and
or
add
mov
leave
lret
lret
ret
stc
adc
or
shrl
adc
xchg
adc
mov
test
loopne
xor
cmp
sahf
imul
fmull
cltd
fsubrs
pushf
pop
in
aad
pop
lock
stos
outsl
xchg
lret
mov
or
push
cli
add
push
std
sub
rcrb
lret
adc
orl
sti
popf
sbb
aad
and
test
sahf
mov
sub
jb
xorl
ljmp
inc
cmpsb
sysexit
test
add
ret
sub
stos
push
mov
or
xchg
sub
xor
aaa
add
jp
nop
xlat
mov
adc
adc
ljmp
popa
lcall
push
loope
mov
popa
iret
xlat
push
rcr
lds
call
sbb
sbb
cmpsb
cld
dec
stos
inc
cltd
mov
aaa
and
sub
fs
sbb
pop
sbb
orb
enter
loope
pop
lods
mov
jl
decb
loop
les
add
pop
les
fisubl
fstps
add
inc
pop
inc
lds
jo
popf
add
pushf
sar
push
rclb
lock
xchg
xchg
test
sbb
add
adc
pop
stos
cmpsl
pop
pop
push
cwtl
mov
mov
xor
mov
aad
aaa
data16
push
pop
or
mov
mov
xor
xor
repnz
mov
mov
divb
jo
add
pop
nop
ljmp
sbb
sbb
addl
loope
jb
dec
outsl
add
clc
mov
lds
or
xchg
pop
xchg
push
adc
jo
lcall
pop
mov
enter
and
test
mov
enter
lret
mov
nop
notl
xor
sbb
jge
pop
icebp
fdiv
lea
xor
push
adc
mov
push
add
and
inc
lods
inc
jne
mov
loopne
inc
pop
rol
add
fs
pop
mulb
push
add
gs
add
addb
in
mov
fisubrs
loopne
test
add
push
xchg
add
repnz
mov
cmp
mov
xchg
and
mov
jae
jp
ja
push
add
jge
subl
mov
pop
pushf
mov
dec
fs
mov
adc
insb
loopne
inc
add
loopne
jne
repnz
sarb
push
jno
rorl
xor
or
stc
or
cmpsl
dec
add
icebp
pop
or
sub
xchg
call
sub
shll
mov
or
mov
stos
icebp
mov
or
cli
pop
jne
mov
dec
je
xlat
or
pop
adc
pop
and
and
push
inc
push
stc
xor
jl
adc
or
loop
inc
inc
lds
push
subl
lods
loop
xchg
aaa
leave
in
sbb
inc
or
sub
inc
rol
sbb
or
cmp
adc
sub
arpl
cmp
enter
or
inc
xchg
sub
popf
jg
es
inc
sbb
or
imul
sbb
cli
pop
in
ljmp
addr16
sahf
or
les
mov
enter
sbb
aad
in
xchg
rcll
add
sub
cwtl
sbb
xor
or
push
sbb
mov
popf
enter
dec
xchg
testl
or
shl
add
repz
inc
in
aam
push
add
dec
enter
adc
sbb
stos
sub
test
sbb
out
fsubs
test
push
sbb
xchg
dec
xorl
lea
aas
lock
sbb
dec
inc
jp
jbe
sub
scas
push
scas
lds
mov
lcall
mov
or
or
dec
lods
shrl
adc
xor
add
push
jmp
cmp
imul
mov
inc
enter
adc
sbb
push
nop
in
ss
rorb
push
xrelease
in
push
add
test
arpl
add
add
pop
rolb
adc
cwtl
inc
insl
sbb
fistps
fwait
sbb
pop
push
cmp
cmp
sub
xor
rorb
adc
inc
xchg
stos
and
les
xor
lcall
push
sbb
xor
call
push
jo
jo
jl
cmp
inc
and
imul
jl
jb
dec
ret
stos
data16
add
ljmp
test
pop
or
ret
add
andb
add
mov
pop
clc
adc
into
int
sbbl
scas
or
cmp
stos
cmp
pop
stos
outsb
adc
fmull
push
mov
sbb
adc
push
rcrb
and
xchg
je
or
or
xchg
lret
or
and
pop
cmp
and
xor
insb
xchg
or
mov
push
jbe
ret
mov
and
adcl
xlat
pop
xchg
pop
adc
es
inc
movsb
mov
sbb
and
jo
pop
js
rclb
lock
int
xchg
pop
movb
adc
dec
or
and
stos
adc
push
or
andl
aad
and
adc
das
or
lea
sub
addr16
clc
cmc
pusha
pusha
enter
rcrb
insb
jl
loopne
push
sbb
sbb
sbb
dec
sbb
or
mov
jmp
add
and
pop
shrl
sbb
or
jae
add
xor
xor
pusha
mov
test
xor
lock
pushf
inc
out
cmp
int3
mov
and
sub
adc
push
popa
push
mov
sbb
clc
test
popa
adc
aad
adc
jmp
and
push
jg
sub
push
loope
mov
xchg
ret
push
or
loopne
jmp
ret
push
repz
push
pusha
xor
xor
inc
scas
cmp
push
push
dec
shlb
mov
mov
add
or
popa
shl
mov
shll
inc
mov
addb
xchg
test
mov
cli
hlt
mov
hlt
loopne
adc
addr16
add
inc
sbb
addb
push
push
xor
and
loope
or
dec
setns
leave
shll
repz
test
fdivrl
sbb
pop
add
rcll
test
rcll
jb
mov
sbb
or
xlat
or
xor
fs
inc
aas
adc
sti
and
ss
or
xchg
xchg
xor
and
mov
sbb
dec
fisubl
mov
jp
addl
lds
pop
movsb
xlat
repz
mov
sub
cmpb
mov
in
mov
pop
xchg
mov
mov
inc
and
dec
out
adc
stc
adc
xchg
lock
fisttps
xchg
cld
into
cmpsl
in
cltd
pushf
adc
xchg
mov
xchg
dec
cli
adc
mov
pop
stos
rclb
sbb
popf
outsl
lods
enter
and
push
jp
add
cs
pop
mov
idiv
inc
sbb
fcmovnbe
mov
sbb
push
mov
jno
mov
aad
mov
add
cmp
xchg
fldl
imul
or
ds
lds
mov
or
hlt
pusha
sahf
mov
pushf
call
sub
scas
push
adc
jne
cltd
into
jmp
mov
cmp
or
and
xor
dec
push
sub
sahf
aad
rol
and
stos
mov
sbb
sbb
push
mov
inc
incb
add
push
mov
pusha
and
sbbl
js
adc
add
adc
pop
test
or
push
mov
adc
mov
cmp
stc
xor
cli
sbb
test
or
rcrl
popf
sbb
insl
add
adc
sub
push
mov
cmp
cmp
sub
mov
add
cld
inc
movl
pop
push
das
mov
pop
lods
test
inc
cmpsb
imul
test
inc
pushf
das
stos
or
gs
cmpsb
inc
xor
push
outsl
pusha
and
xor
repnz
mov
rolb
sbb
mov
xchg
mov
rorl
pop
rolb
mov
or
or
sbbb
ret
loopne
push
test
sbb
add
push
pop
fimuls
pusha
enter
sbb
shrb
adc
add
cmp
xor
push
fwait
jb
dec
adc
push
or
cmp
faddl
jo
mov
das
pusha
hlt
test
mov
xor
xchg
sahf
addl
inc
and
sbb
mov
inc
cmpsb
sarb
mov
inc
or
clc
xor
cli
mov
rcr
push
sub
mov
out
adc
push
lock
dec
cld
jns
mov
or
int3
add
or
mov
cmp
fcmovu
mov
adcb
daa
pop
sub
out
sbb
stc
add
outsl
nop
repnz
push
inc
push
push
mov
add
inc
mov
les
add
cmp
ljmp
mov
mov
mov
popa
lock
push
lret
rcll
test
icebp
cltd
sub
jl
mov
mov
add
push
daa
mov
ret
push
mov
sub
cmp
clc
ficoms
subl
pop
push
mov
mov
loop
inc
out
or
or
and
in
add
lcall
or
fwait
mov
insl
dec
mov
rcll
hlt
inc
xchg
pop
pop
cmovs
mov
cmp
and
inc
sbb
adc
inc
vxorps
arpl
mov
mov
lods
push
inc
xor
faddl
cwtl
and
cmp
pop
xchg
mov
dec
dec
enter
adc
fiadds
mov
and
or
sbb
mov
popa
sub
jo
cmp
and
fs
pop
adc
in
leave
add
and
in
mov
inc
mov
sbb
aad
les
and
add
sarl
cmp
push
mov
pop
pop
dec
int
add
mov
or
pusha
dec
or
xor
mov
mov
cmp
out
das
sub
mov
insl
mov
popf
call
test
lret
shrl
sbb
dec
dec
icebp
mov
fdivrl
jae
ljmp
jb
pop
loope
jne
sub
movl
sub
add
mov
mov
rorl
ljmp
mov
out
inc
je
push
xor
out
lret
sbb
push
inc
rclb
pop
pop
popf
adc
popa
xor
xor
add
out
mov
stc
and
and
in
push
or
test
xchg
ljmp
or
jp
pop
cmp
mov
loopne
push
push
pop
inc
rol
in
xor
adc
add
jle
xchg
and
test
loopne
test
sarb
je
bound
dec
scas
and
add
mov
rcl
inc
or
sbb
pop
xchg
push
xchg
pop
addl
pop
mov
loop
test
enter
lock
in
icebp
lock
rcll
mov
pop
push
sbbb
outsb
sub
mov
pop
adc
shlb
mov
xor
cmpsb
mov
ja
test
push
aam
mov
sub
xchg
adc
adc
out
xlat
xchg
call
push
xchg
mov
cmp
inc
pop
or
push
les
call
cwtl
mov
xchg
fimuls
loope
popf
into
testb
and
or
jns
rcrb
ret
dec
push
daa
call
subl
shrb
add
sub
fldenv
or
jne
shll
jecxz
add
inc
sahf
lock
mov
cmp
pop
or
mov
or
and
mov
mov
push
imul
cmpsl
sub
icebp
jp
out
adc
add
push
daa
add
ret
xor
sbbl
pop
cmp
push
mov
test
add
inc
sbb
das
repz
jmp
jge
dec
add
sub
popf
aaa
cld
popa
push
or
sahf
movsl
dec
int3
mov
data16
jo
pop
sub
adc
pusha
mov
push
pop
jo
add
pop
adc
out
pop
jb
cmc
cmp
subb
and
pop
pop
or
jno
rclb
dec
hlt
sub
lret
mov
mov
mov
inc
ja
sbb
test
pop
sub
subb
sbb
cmp
push
and
and
mov
lock
cli
cmpl
jl
mov
mov
push
mov
xchg
mov
pop
lret
add
dec
jle
and
sbb
jo
pop
cwtl
xchg
sub
test
pop
cltd
out
push
jb
out
repnz
aad
mov
or
es
cmpsb
imul
adc
inc
pop
subb
mov
cmpsb
jp
loopne
jne
mov
xchg
repnz
add
sub
add
hlt
adc
dec
inc
push
xchg
add
sbb
inc
inc
xor
ror
je
jae
enter
dec
push
popf
xchg
add
incb
jae
push
rclb
lods
sbb
les
dec
or
insl
and
cmp
cmp
or
cli
adc
fcmove
jae
mov
js
mov
or
cmp
push
test
push
sub
inc
or
shl
andl
sbb
pop
inc
jg
jo
xor
lods
mov
pop
xchg
in
ret
bnd
cs
test
movsl
cmp
mov
add
and
std
subb
jle
call
adc
test
adc
outsb
adc
rcll
adc
aaa
repnz
adc
subl
scas
mov
pop
sbb
push
or
jle
leave
sub
add
test
add
pop
sti
leave
sbb
cli
and
adc
lds
sbb
and
push
mov
xchg
mov
inc
sbb
push
inc
rclb
pop
jae
test
orb
test
add
add
or
cmp
inc
adc
mov
mov
push
stos
push
sbb
sbb
sbb
sub
mov
inc
cmpsl
rcr
mov
add
xlat
or
pop
inc
icebp
inc
mov
push
pop
add
enter
push
mov
cmpsl
cli
sbb
mov
sub
into
roll
enter
mov
push
ljmp
xor
andl
add
xor
push
das
xchg
ret
lds
sub
sbb
ret
xchg
shlb
or
dec
mov
frstor
inc
getsec
xchg
jmp
adc
push
andl
mov
and
pop
lods
push
sub
pop
lds
mov
adc
pop
cltd
jo
fnstcw
pop
lock
ret
testl
sub
inc
sti
test
push
adc
data16
cmpsl
adcb
sub
pop
push
or
add
or
test
push
andl
jo
xchg
mov
shl
add
add
and
dec
xor
cwtl
mov
adc
mov
stos
pop
jne,pn
mov
adc
rorb
pop
or
xchg
in
adc
mov
and
call
xor
stc
and
stos
cmp
sbb
mov
cmp
imul
mov
inc
and
mov
icebp
mov
roll
jbe
es
mov
jno
inc
xor
call
push
cmp
test
add
pop
into
push
pop
popa
test
jl
sbb
add
cmpsb
add
inc
jmp
or
mov
ljmp
mov
xchg
les
mov
enter
mov
into
inc
xchg
cmpsb
add
rcrb
xchg
xchg
mov
cmp
inc
and
push
cs
ret
and
loope
stos
mov
pop
push
xorb
inc
dec
ljmp
add
addr16
sbb
jno
jbe
test
sbb
add
cmp
push
cwtl
add
pusha
sbb
in
cli
sub
mov
adc
and
into
mov
vmovss
adc
push
jno
xchg
bound
mov
ror
push
push
int3
mov
in
jo
rclb
rclb
or
add
sahf
mov
adc
push
adc
cli
cmp
into
mov
push
push
mov
es
inc
sub
push
aaa
fisubl
inc
test
adc
push
jnp
test
lds
sbb
cmp
adc
xor
dec
jmp
dec
inc
imul
fdivrl
and
mov
sbb
std
into
in
add
add
cmp
negb
movsl
mov
mov
or
popf
add
cwtl
lods
sbb
push
cmp
push
shll
push
pop
movsb
ds
cltd
push
mov
inc
leave
popf
cmpb
stos
cltd
mov
test
or
leave
stos
iret
decb
pushf
scas
adc
mov
scas
adc
and
dec
bound
sub
cmp
mov
pop
cs
sbb
pop
mov
rcll
stos
push
mov
jo
xchg
mov
int
shrb
mov
add
test
into
lcall
add
addr16
sbb
sbb
add
daa
pop
mov
pop
loope
adc
lea
and
stos
ljmp
subb
inc
mov
push
ljmp
dec
mov
sub
and
sbb
movb
enter
lock
js
mov
pushf
xchg
orl
mov
and
aam
loop
push
push
pop
adc
jno
pop
inc
jo
lret
loop
sub
pop
xor
cmp
inc
sub
push
mov
dec
cmp
adc
add
adc
push
sbb
adc
or
mov
xchg
sti
fadds
aas
xor
mov
push
add
xor
add
arpl
push
aam
je
sub
mov
daa
sub
xchg
cmp
mov
out
mov
xor
or
cmpsl
cmp
sub
rcll
and
fwait
cmp
sbb
repnz
shrl
je
sbb
push
push
add
pop
adc
js
mov
imul
mov
sbb
push
sbb
cmp
mov
mov
mov
sub
nop
or
jo
jb
sbb
add
adc
popa
pop
adc
cli
call
mov
inc
icebp
and
push
paddw
js
push
mov
inc
lcall
mov
or
sbb
lgs
push
push
addl
inc
js
adc
or
sbb
lods
dec
push
push
movsb
out
adcb
or
shl
sub
dec
insl
ret
xor
pop
movsl
push
sub
sub
push
add
or
ljmp
add
pop
xchg
std
loope
mov
add
mov
adc
pop
sub
jecxz
xchg
dec
pop
and
outsb
pop
cmp
ljmp
test
adc
mov
push
xchg
je
daa
sbb
mov
dec
jns
add
bound
jo
dec
pop
enter
shll
outsl
int
loopne
inc
je
or
lods
movsb
dec
daa
or
adc
inc
cmpsl
rorl
dec
add
es
ljmp
sbbl
jae
mov
pop
sbb
mov
shrb
int3
shl
adc
imul
inc
iret
adc
outsb
or
popa
push
xchg
shrb
mov
mov
sbb
adc
imul
adc
test
push
jb
dec
sbb
dec
xchg
xchg
aas
cmc
daa
cmpsb
xorl
inc
sbbl
jo
inc
call
test
icebp
push
sahf
shlb
adc
cmpsb
push
mov
pop
mov
pusha
aam
push
inc
cltd
je
mov
inc
cmp
adc
sbb
enter
add
or
jmp
cmp
inc
push
or
sub
sbb
xor
adc
push
cmp
mov
ret
test
push
cli
andb
pop
shlb
test
jle
adc
int
sub
fwait
es
dec
cmp
aam
loop
or
jnp
xchg
sbb
or
test
xchg
xor
hlt
add
sbb
inc
mov
pusha
testb
and
push
sub
shrb
test
or
mov
xchg
out
pop
test
cmp
or
lds
or
pop
mov
dec
repnz
pop
push
jecxz
das
adc
xlat
test
insl
mov
jp
cmp
mov
pop
adc
or
call
xchg
call
add
shll
or
push
jb
xor
xchg
dec
ffreep
shlb
and
xor
jno
inc
cmp
inc
imul
popa
jo
ret
push
in
push
les
or
jb
push
ljmp
push
sarb
adc
push
lock
ficompl
push
popl
sbb
dec
add
push
mov
push
insb
adc
cmp
cmpsb
jmp
cmp
cmp
pop
or
and
push
xor
ret
mov
push
mov
cltd
dec
addw
or
push
pusha
sbb
add
sub
cltd
add
xchg
cmpsb
mov
push
cmpsb
add
sub
test
pusha
pusha
push
or
inc
roll
repnz
adc
add
xor
xchg
stos
fcmove
push
outsl
sbb
fadd
inc
pushf
aad
sti
adc
fwait
push
mov
push
mov
rorb
icebp
mov
pop
pusha
xor
jecxz
loopne
daa
inc
int3
mov
and
push
cmpsb
push
jne
repnz
push
push
xor
stos
add
inc
sbb
adc
xorl
sub
mov
daa
ret
popa
adc
xor
xorl
lret
pop
pop
sbb
or
es
push
push
push
adcb
popl
cmc
and
jge
or
jnp
mov
jge
pop
aad
loop
inc
lods
or
push
movsb
or
aam
lock
inc
sarl
jmp
and
xchg
les
test
jnp
in
leave
push
adc
adc
jp
mov
nop
jb
test
movsl
imul
adc
lret
add
dec
dec
pop
lret
shlb
push
mov
add
mov
testb
aam
add
pop
into
cmc
or
insb
mov
mov
lods
js
shlb
or
jmp
and
mov
mov
add
es
push
push
fwait
xor
in
shlb
jno
sbb
or
xor
fildl
adc
mov
and
push
mov
daa
mov
cmp
mov
push
push
adc
sub
out
inc
xchg
cwtl
testb
or
or
mov
lret
sub
xchg
imul
mov
add
lret
sbb
mov
cmp
dec
cmc
rorl
add
pop
scas
sub
fwait
lahf
inc
mov
xchg
insb
dec
into
push
cmp
rclb
mov
mov
xor
dec
adc
sub
je
mov
adc
loop
enter
inc
aam
clc
cwtl
mov
cmpsb
or
push
push
leave
ds
push
insl
pop
jnp
fcomps
pand
repnz
jmp
jp
pusha
repnz
mov
insl
or
push
inc
mov
pop
jo
push
aad
in
mov
pop
inc
push
lods
test
pop
inc
xor
pop
into
push
xchg
andl
pop
adc
sub
inc
ds
and
pop
stos
push
inc
or
inc
subb
mov
or
ffree
aam
add
and
and
pop
cmp
add
adc
push
lds
or
loop
inc
sub
loopne
mov
icebp
lods
stos
cmp
adc
lds
push
lods
fisubs
decl
jo
stos
ret
push
sub
repnz
sti
mov
inc
push
xor
mov
add
or
addb
and
mov
xchg
dec
clc
mov
dec
call
and
add
xor
cmpsb
jge
ret
jmp
push
js
mov
and
inc
mulps
ret
in
pop
mov
cmp
loop
mov
xor
sahf
adc
xor
jno
stos
movsl
push
hlt
sbb
fldenv
and
jo
je
scas
sub
push
int
lods
sub
mov
add
data16
sbb
sub
dec
xor
bound
add
mov
xchg
add
cmp
or
adc
add
js
stos
adc
inc
lock
jmp
jg
add
jb
push
pop
add
mov
rclb
lods
push
lds
jo
mov
leave
add
sbb
es
dec
dec
cmp
xchg
dec
adc
adc
xor
and
add
shll
add
rol
add
jae
push
push
gs
hlt
jns
mov
push
and
sbb
imul
fistpl
aam
xchg
je
push
sahf
enter
and
xchg
loope
mov
mov
jne
adc
mov
push
mov
adc
scas
and
js
mov
push
sbb
push
test
add
loopne
sbb
mov
inc
cmpsb
add
stos
dec
mov
pop
mov
jecxz
out
push
mov
jmp
mov
or
fwait
push
pop
insb
es
pop
xchg
popa
add
into
inc
and
test
sub
sub
add
adc
stos
push
dec
or
inc
lods
pop
adc
js
loopne
test
ret
sub
scas
fiaddl
je
mov
nop
xchg
xchg
jae
sub
adc
std
push
dec
cltd
shrb
or
sub
sahf
dec
mov
leave
mov
rclb
xor
lret
ret
mov
pop
mov
add
js
hlt
sub
cld
pop
ljmp
imul
pop
shufps
cmpsb
push
lods
adc
inc
rolb
sbb
push
js
pop
sbb
ja
pop
icebp
push
xor
rcll
bound
sub
or
out
or
mov
nop
andl
lea
cvtpi2ps
adc
sbb
es
cwtl
cmp
scas
call
shll
push
sub
sbb
add
or
add
stos
add
cmpsl
bound
inc
cmp
in
push
loopne
add
push
cmp
xchg
add
mov
inc
subl
fstpl
orl
xor
inc
shll
or
xchg
test
stos
add
mov
shl
mov
cli
or
mov
lcall
or
add
and
test
mov
adc
adc
xchg
xor
call
subb
mov
push
jmp
inc
xor
add
mov
out
enter
enter
cmpsl
in
xchg
inc
shrl
sub
test
push
and
add
cmp
into
or
mov
testb
rcl
fs
inc
dec
mov
in
shlb
sbb
add
mulb
xor
cmp
jo
and
popf
jae
add
push
test
push
scas
xchg
or
or
das
stos
adc
ret
dec
pusha
stos
mov
jo
ss
push
and
cmp
lock
pop
adcb
add
push
lods
mov
inc
jmp
xor
sbb
cmc
push
ret
xor
xor
push
add
shl
fsubl
cmovnp
and
mov
xor
imul
cmp
loope
mov
sub
lock
or
mov
push
roll
push
rorl
push
push
inc
xor
icebp
xor
add
clc
sbb
dec
xor
add
xchg
insl
push
inc
in
sub
pop
pop
int
loopne
das
dec
mov
dec
adc
orl
cmp
pop
inc
push
lds
adc
push
push
scas
movsl
divb
sbb
lcall
add
push
add
ja
inc
xor
sub
dec
in
mov
add
adc
jbe
loope
in
adc
adc
or
add
push
lea
mov
adc
popf
pop
add
dec
fisttps
and
cmp
sbb
aaa
sbb
and
in
pusha
or
cmp
adc
mov
icebp
in
adc
jae
loope
loopne
fidivl
nop
jecxz
or
es
jle
push
loopne
ror
iret
in
jb
roll
aad
push
cmp
scas
and
adc
xor
mov
push
jne
andl
aam
rolb
add
dec
mov
xor
jae
js
mov
sahf
add
xor
adc
or
daa
cmpsb
dec
add
add
test
adc
lcall
dec
pop
push
bnd
mull
push
roll
mov
cmpsb
xor
or
cmp
jp
stos
idivb
jno
push
jp
into
sub
push
dec
and
push
push
sbb
and
scas
push
fsubs
sbbl
lds
add
sbb
loopne
sub
fcmove
divl
into
out
xchg
mov
push
cmp
mov
adc
pop
inc
sbb
mov
enter
add
bound
pop
push
in
cltd
je
pop
outsb
dec
rclb
popa
jp
mov
ret
mov
or
pop
mov
andl
pop
xchg
or
or
movsl
fwait
sbbb
sub
test
inc
xchg
pop
shrb
jge
and
xchg
cli
adc
call
sub
push
aad
dec
mov
inc
cmpsb
sub
leave
inc
testl
in
out
xchg
or
mov
out
push
mov
mov
add
inc
push
ss
jp
inc
popf
orl
ret
push
mov
add
sbb
shlb
sub
sbb
adc
fisubrs
pop
and
inc
mov
mov
or
mov
inc
roll
daa
mov
mov
adc
or
add
push
fisubrl
pop
in
inc
cmpb
mov
adc
or
popa
push
pop
sbb
and
inc
roll
push
sarb
and
js
cli
test
xor
sbb
sbb
stc
dec
mov
sub
adcb
repz
pop
cmc
add
ret
mov
mov
les
inc
mov
jne
rcrl
test
push
dec
out
cli
cmp
jmp
or
outsb
dec
bound
adc
dec
add
inc
out
aad
mov
push
inc
pop
push
push
mov
pop
or
dec
enter
inc
ret
xor
je
push
test
mov
enter
repnz
xor
jge
add
rorl
adc
sbb
push
jle
adc
xlat
aam
pushf
ret
into
lcall
enter
xchg
mov
pusha
mov
add
shrl
cmpl
movl
lcall
adc
and
adc
das
pop
push
sbb
sbb
lds
dec
movq
and
push
add
cmp
icebp
repz
mov
mov
jmp
shll
xor
or
dec
lcall
add
push
loopne
dec
out
loop
icebp
dec
pop
cmc
push
outsl
add
std
in
das
xor
shrb
popa
mov
xor
mov
rorl
mov
js
mov
shl
push
jle
jo
push
xchg
cs
inc
fs
adc
add
jo
imul
cmp
es
shrb
adc
xor
js
pop
adcb
repnz
fs
test
jae
add
jno
mov
les
ret
inc
xor
inc
push
xor
loopne
or
jno
jmp
lret
in
adc
jns
add
ret
repz
outsb
lret
cwtl
add
xorl
pusha
or
xor
aaa
das
test
jecxz
cltd
pop
stos
sbbb
addr16
push
mov
sub
fmulp
mov
pop
jno
inc
call
push
popf
shll
inc
adc
inc
hlt
jle
cmp
in
jo
push
xor
mov
andb
popa
mov
ljmp
push
mov
pop
lds
inc
mov
mov
addb
pop
scas
or
rcrb
daa
xor
push
out
mov
cmc
and
loope
adc
push
icebp
push
pop
inc
mov
adc
enter
xchg
loopne
rcll
push
sarl
adc
out
sub
or
pop
loopne
sub
pop
bound
call
lods
or
or
push
out
ret
gs
stc
sub
mov
inc
pcmpeqb
movsl
shl
sbb
mov
es
shll
test
mov
sub
xchg
incb
push
mov
subl
out
push
sub
cltd
test
adc
sahf
orb
call
or
cld
ret
cmpsb
dec
mov
icebp
jno
and
lcall
and
push
adc
mov
ret
roll
shll
add
sub
popf
inc
add
adc
sbb
or
mov
cmp
enter
xor
cmp
out
inc
xor
lret
jle
push
pusha
enter
pop
es
je
out
and
or
shr
sbb
xchg
xlat
shll
mov
data16
push
xor
add
push
shrl
loope
shl
inc
cmp
adc
cwtl
mov
and
lret
and
add
add
push
mov
enter
je
dec
cld
nop
shrb
dec
movsl
push
adc
pop
loopne
sub
ss
lret
aad
subb
push
push
inc
push
mov
and
sub
cmp
push
or
test
sub
shrl
lcall
sub
push
scas
hlt
mov
cld
push
or
xor
sbb
add
cmp
add
sub
or
shl
dec
rolb
adc
ret
adc
addb
add
icebp
sub
out
daa
cmp
jo
lret
sbb
add
jb
adc
mov
sub
stc
fsubrs
or
scas
xor
sbb
xchg
pop
push
aam
leave
add
push
aam
test
js
or
xchg
pop
adc
inc
adc
mov
out
pusha
and
add
enter
add
les
xor
or
dec
enter
mov
push
pop
and
jno
xor
pop
fistl
test
jp
filds
or
ss
adc
leave
cmpsl
add
mov
es
mov
xchg
inc
cltd
inc
mov
dec
mov
sub
add
or
cs
jae
push
push
popf
pop
andl
out
pop
int
ret
pop
test
out
repz
push
or
mov
inc
sbb
out
ret
loope
pushf
or
shl
mov
add
das
pusha
jo
or
jecxz
aam
test
or
adc
adc
or
mov
inc
adc
out
push
lret
aaa
lods
xchg
or
inc
in
mov
fimuls
sbb
fldenv
mov
cltd
pop
push
into
add
dec
push
cmp
shll
mov
ret
mov
out
or
mov
lock
loope
mov
sbb
fnstsw
stos
mov
faddl
pop
stos
push
add
pop
xor
lods
adc
lret
jp
ret
sbb
dec
xor
loopne
pop
sbb
shr
or
add
sub
or
sub
lods
fwait
mov
dec
jno
into
push
leave
push
out
lahf
push
movsl
push
lods
mov
xchg
or
pop
in
mov
rorb
push
dec
jg
sub
div
mov
lock
cmp
mov
scas
fmull
das
push
add
cmp
sub
pop
add
jmp
mov
leave
insl
sbb
ficoml
cld
sbb
aam
mov
pop
fcoml
gs
dec
test
sbb
mov
cs
mov
in
add
cmp
push
lock
test
add
les
sub
push
adc
and
adc
sub
es
xor
into
jmp
mov
lret
sbb
push
push
pushf
adc
mov
rolb
inc
test
cmc
shr
xor
ds
or
into
unpckhps
xor
movb
and
fwait
mov
lds
js
aad
pop
mov
stos
push
xor
add
pop
inc
sub
psubusw
cmpsb
add
dec
xor
inc
mov
flds
aad
movsl
mov
popa
int3
push
pop
lock
rol
hlt
jb
aam
lock
adc
test
jae
int
sysenter
pop
add
or
inc
adc
adc
dec
mov
xadd
sbb
adc
inc
arpl
bound
mov
mov
in
ljmp
lods
lret
or
push
mov
push
stc
jecxz
add
cmp
dec
lds
push
ja
cmpsl
mov
and
ret
xor
add
cmp
or
in
orl
xchg
rclb
mov
pop
mov
test
call
rcrl
xor
leave
fdivl
and
push
mov
inc
mov
mov
cli
adc
mov
les
or
mov
xchg
adc
mov
push
orb
lcall
adc
and
and
dec
jb
int3
or
pushf
pop
push
lods
lock
push
out
push
or
inc
sbb
test
scas
sbb
adc
mov
or
xor
xchg
push
adc
jmp
pop
les
lock
add
ds
test
stos
adc
aaa
rcr
mov
xchg
sbb
dec
inc
lret
sub
pop
jb
bound
push
ljmp
stos
mov
subl
xchg
pop
pop
cmp
push
mov
add
test
pop
movsl
add
dec
fs
jp
les
rcrl
jle
push
pop
decb
stos
cmp
stos
lret
push
pop
sbb
sbb
mov
jae
add
sbb
jmp
in
pop
cmp
xor
pop
int
movsb
and
push
and
jae
mov
add
stos
cltd
or
loop
push
inc
jo
lcall
mov
repz
cmp
addr16
int
adc
xchg
test
and
ret
and
mov
and
sub
shlb
das
or
test
xor
dec
lock
sbbb
xor
rol
mov
inc
lock
or
push
mov
sbb
data16
adc
sbb
dec
push
pop
or
push
cmp
call
nop
test
lods
loopne
call
and
push
inc
cmpl
mov
repnz
js
mov
pop
sub
sbb
add
jns
or
lret
push
or
push
into
mov
add
out
or
int
pop
jp
mov
aad
inc
xchg
arpl
stos
push
adc
push
inc
sub
pop
jo
lds
xor
jmp
jg
stc
push
sbb
notb
movsb
mov
xor
or
mov
dec
mov
inc
aad
adc
ret
pop
mov
fidivrs
add
adcb
xor
mov
cltd
stos
inc
int
popf
out
push
and
popa
mov
rcll
loop
jne
lods
loope
mov
sub
cmp
stos
bound
cmc
lods
add
push
or
xchg
bound
shll
fldt
ret
or
xchg
or
sarl
jo
out
mov
int
lret
and
xor
dec
shrb
test
push
xchg
or
inc
sub
sub
pop
aad
adc
fldl
add
cwtl
push
shlb
mov
sbb
and
xor
pushf
push
loopne
push
inc
iret
push
push
pusha
push
push
rsm
sbb
mov
stos
inc
mov
loopne
insl
test
or
mov
add
pop
xchg
xor
cs
mov
xchg
jl
pop
add
dec
clc
xor
pop
fisubl
sbb
sub
add
in
inc
cmp
dec
or
test
inc
jmp
add
xor
mov
inc
xor
fmul
sbb
test
cmp
scas
inc
add
push
cmp
std
rolb
jl
movsl
adc
insb
and
inc
pop
mov
dec
sbb
clc
add
test
mov
cltd
or
arpl
psubusb
jge
shrl
enter
rcll
ret
fisttpl
cmp
jg
or
xor
lods
lcall
add
push
pop
pop
mov
mov
pop
adcl
sub
scas
mov
shl
mov
or
inc
pop
push
pusha
stos
and
addb
push
daa
mov
or
mov
test
inc
xchg
test
sbb
and
inc
inc
or
mov
shll
lcall
inc
jge
sti
into
int3
rolb
sub
cmp
test
pop
and
adc
sbb
inc
popf
inc
push
in
js
xor
sbb
inc
fildl
sub
push
icebp
xor
mov
leave
insb
push
xor
adc
test
mov
pop
shrl
mov
inc
sub
cmp
push
aad
je
adcl
jmp
add
loop
or
sub
xchg
adc
loope
sub
xchg
stc
dec
pop
sbb
xor
push
sbb
xor
push
mov
mov
push
pop
repnz
xor
scas
inc
dec
lret
sbb
pop
or
dec
ljmp
or
xchg
adc
and
test
out
and
add
push
xor
mov
mov
push
sbb
adc
inc
lds
dec
imul
or
push
test
rol
cmpsb
subb
jp
add
xor
test
push
or
mov
jg
and
jecxz
or
aad
std
imul
lock
test
xlat
loopne
leave
cld
mov
or
mov
adc
cmp
cltd
sbb
pop
arpl
lds
enter
adc
add
leave
adc
loop
lea
add
aad
mov
adc
push
fldl
imul
add
in
shlb
shrl
add
imul
add
push
push
insl
fistpll
adc
pop
inc
xorl
adc
hlt
adcb
inc
sahf
dec
add
and
add
push
test
xor
addl
test
scas
push
sub
xlat
xchg
call
and
mov
xor
lods
and
mov
push
das
jo
push
and
stc
add
into
mov
pop
mov
xchg
add
xor
mov
lahf
movsb
js
pushf
stc
pop
adc
in
or
or
mov
mov
loop
adc
cmc
ljmp
hlt
pop
push
cmp
mov
push
mov
shl
test
mov
add
cmp
push
cmp
hlt
out
push
test
loop
cmp
mov
stc
mov
xchg
add
sub
ljmp
pop
inc
scas
inc
xchg
push
mov
mov
js
arpl
inc
add
push
inc
mov
out
mov
adc
shrl
and
and
xor
push
ja
cmp
cmp
addb
xor
sbb
mov
sbb
or
or
or
aam
push
mov
ljmp
mov
push
add
das
dec
xchg
dec
lcall
pop
push
or
or
mov
pusha
dec
mov
hlt
loopne
scas
ret
ret
add
pop
add
adc
add
adc
mov
push
lock
imul
sub
adc
xchg
and
sahf
pop
sbb
enter
call
sub
jne
xchg
shlb
fmull
pushl
lcall
pop
and
xor
insl
xchg
mov
lods
add
push
cmpb
pop
cwtl
loop
addl
adc
ret
xor
stos
mov
cmp
push
jge
jg
mov
mov
push
add
lock
jb
rolb
mov
push
mov
mov
cwtl
xor
ret
into
sbb
mov
sbb
pop
call
adc
dec
pop
jbe
add
loope
inc
leave
mov
in
jp
das
test
cmpl
and
sbb
sbb
sub
dec
ret
shrb
repnz
dec
insb
int3
or
test
cmp
jae
rolb
sbb
cld
push
and
or
inc
call
mov
add
dec
or
or
xor
mov
popa
lea
jo
add
fimull
adc
cmpsb
cmp
arpl
popf
gs
pop
les
call
popa
sub
push
jne
loope
pop
inc
and
push
in
add
das
and
jnp
push
addr16
fs
jp
push
sbb
ret
nop
dec
pop
lods
loopne
int
enter
xor
stos
andb
cmp
sbb
ja
or
sbb
out
lret
pushf
sti
sub
mov
nop
test
add
scas
jb
or
sub
ret
xchg
mov
test
or
mov
jno
push
and
push
fwait
push
lea
adc
mov
jbe
dec
pop
mov
cli
add
test
orb
mov
pushl
mov
and
mov
and
shl
test
pop
bound
lcall
xchg
sbb
lret
mov
lret
adc
adc
lds
dec
adc
lcall
mov
or
mov
sub
jl
clc
movl
sti
pop
xchg
aam
dec
and
iret
lahf
aas
jg
lret
outsl
push
xchg
push
mov
repz
adc
mov
rcll
lahf
aas
jg
nop
mov
int3
inc
mov
test
stc
repz
notb
aam
es
movsl
aas
jg
cld
cmp
je
jle
fdivrs
adc
lahf
push
mov
or
jmp
cld
stc
mov
jg
xchg
xlat
imul
cltd
adc
out
lahf
aas
in
inc
xchg
int
outsl
aaa
cltd
and
cld
stc
repz
mov
sbb
pop
iret
lahf
aas
jg
lcall
mov
mov
adc
repz
dec
jnp
jle
clc
aam
lea
aas
jg
sub
lahf
cmp
mov
out
shl
out
lahf
loop
inc
mov
shrl
jle
leave
fnstsw
cld
stc
inc
pop
mov
xor
add
adc
out
lahf
aas
sbb
rcrl
sub
cld
cld
stc
repz
pop
and
pushf
pop
negb
mov
insl
lea
push
vmovaps
xchg
test
out
lahf
aas
inc
out
and
add
and
xchg
pop
cld
stc
repz
fbstp
lret
jg
je
fwait
in
iret
cmc
lods
and
repz
and
loope
scas
mov
lahf
aas
jg
sub
mov
mov
stc
repz
out
in
add
mov
xchg
mov
aas
jg
cld
loop
sbb
cwtl
test
sbb
iret
lahf
into
adc
mov
adc
cld
stc
lahf
popf
movb
popf
xor
cmp
jp
out
aas
push
fwait
aad
dec
insl
mov
jg
cld
stc
sbb
test
add
out
inc
in
leave
lock
lahf
aas
sbb
jmp
movsb
sti
call
aad
cld
stc
repz
xchg
cltd
cmp
adc
inc
or
lahf
aas
jg
jnp
cwtl
xor
mov
sub
test
shll
pop
dec
cmp
add
imul
aas
jg
ja
cmp
adc
hlt
cld
stc
repz
movsb
mov
pop
xlat
movsb
mov
aas
jg
lock
sahf
lea
ja
dec
sub
repz
mov
lock
adc
insb
rcr
aas
jg
cld
xor
lret
pop
and
cmpsl
sub
repz
lahf
cltd
ret
and
imul
or
cld
stc
mov
dec
dec
sahf
stos
fs
adc
or
iret
lahf
aas
adc
jb
dec
jbe
mov
cld
stc
repz
jl
xor
pop
mov
lahf
aas
jg
jge
mov
lods
mov
stc
repz
push
insl
adc
cwtl
xor
in
insb
pop
lahf
aas
jg
repz
rorb
lock
stos
sub
mov
repz
xorl
pop
dec
dec
lret
xchg
aas
jg
cld
or
leave
jg
andb
enter
xchg
jmp
adc
mov
jg
cld
stc
jge
pusha
int
xchg
nop
js
push
mov
sub
iret
lahf
aas
enter
dec
and
sarl
stc
repz
fcmove
and
jnp
ficoms
iret
lahf
aas
jg
out
pop
push
mov
add
scas
push
cld
stc
repz
lret
in
jo
mov
lahf
aas
jg
repz
je
xchg
adc
push
jae
mov
jnp
stc
repz
test
sti
dec
dec
mov
out
xchg
dec
aas
jg
cld
push
add
popa
cmpsl
enter
dec
jno
repz
lahf
xchg
daa
cmp
push
sbb
cld
in
leave
cmp
or
mov
out
pusha
jecxz
sub
xlat
jge
push
sbb
lahf
aas
pop
stc
and
cmpsl
mov
or
lods
cmp
stc
repz
div
test
add
loope
nop
mov
aas
jg
cld
sbb
popf
int3
mov
dec
xlat
pop
jnp
in
daa
lahf
add
add
xchg
cld
stc
repz
addr16
inc
js
je
jno
mov
push
jno
mov
dec
mov
stc
repz
cs
call
jmp
fsub
xor
jg
cld
and
dec
jnp
mov
into
pop
out
or
scas
int
dec
cmpb
sbb
jg
cld
stc
push
popa
out
loop
pop
outsl
mov
cmp
mov
adc
aas
sbb
sahf
adc
je
not
xchg
pop
cld
stc
repz
adc
lret
lret
xchg
mov
iret
lahf
aas
jg
inc
xchg
or
shl
call
xchg
mov
in
cli
lahf
aas
jg
cmpsl
or
or
repz
repnz
mov
pusha
inc
les
sbb
jg
cld
lods
xor
mov
fistl
cmp
sub
repz
lahf
pop
pop
cmp
cmpsl
mov
fwait
adc
cld
stc
test
sbb
cmc
pop
test
jmp
out
lahf
aas
push
fcomip
popa
cmp
loope
flds
stc
repz
jne
cmp
cmp
iret
lahf
aas
jg
mov
cwtl
mov
add
stc
repz
psrad
dec
or
sub
in
adc
xchg
lahf
aas
jg
mov
sbb
addb
out
into
fimuls
out
orps
addl
ja
or
mov
sub
repz
cs
cmp
and
add
sahf
lahf
aas
pop
stc
sub
pop
cltd
jl
into
stc
xor
mov
iret
inc
and
fisubl
cmp
scas
aas
jg
cld
jl
mov
dec
push
jle
pop
adc
xlat
pop
xchg
mov
out
lahf
fwait
cltd
fcmovne
mov
subl
stc
add
mov
jp
daa
push
xor
jne
lods
stos
and
and
cld
cld
stc
repz
jb
inc
je
and
fimull
mov
fs
inc
pmullw
adc
cld
loope
cmp
dec
addl
pop
jb
std
lahf
dec
inc
jle
or
sbb
jmp
iret
or
mov
cmp
push
mov
ucomiss
cwtl
sub
in
mov
int3
stc
repz
nop
jp
cmp
adc
lret
insl
aas
jg
cld
jns
fstpt
jno
hlt
sub
loopne
repz
lahf
dec
sub
push
ret
jmp
jg
cld
stc
push
enter
shll
adc
lock
lret
cld
mov
mov
sti
stos
clc
nop
out
or
aas
jg
push
insb
inc
inc
xor
jmp
cld
stc
repz
add
push
clc
push
jmp
out
xchg
lahf
aas
jg
add
cmp
lret
je
push
leave
push
stc
repz
icebp
push
mov
add
mov
push
push
leave
fisubrl
fdivl
stos
cld
stc
repz
hlt
pop
lcall
shr
sbb
cmp
cmp
insb
andl
test
out
clc
xlat
out
dec
scas
jbe
popa
dec
sub
cld
lret
mov
mov
cmc
sub
repz
lahf
lcall
mov
lret
cld
stc
pop
push
in
push
int3
rcll
lcall
out
lahf
aas
lcall
fistpll
ror
cld
stc
repz
outsl
cmpsb
repnz
dec
cmpb
in
or
lahf
aas
jg
divl
shll
aam
jmp
out
mov
scas
xor
pop
dec
cmp
in
mov
repz
dec
stc
repz
test
fisubl
shll
cld
fmuls
dec
push
pop
aam
inc
push
repz
lahf
mov
test
ds
ja
pop
repz
cld
stc
leave
dec
int
test
pop
imul
inc
test
sbb
aas
mov
mov
shll
cld
stc
repz
test
inc
ss
fnstcw
jg
adcl
and
mov
sbb
jl
stc
stc
repz
out
add
mov
cld
fistpl
xor
adc
iret
lahf
aas
jg
xor
inc
push
jne
cmp
aas
sbb
out
divl
bound
fwait
iret
lahf
jg
inc
or
sub
out
cmc
or
pop
insl
xor
cmp
adc
aas
jg
in
and
lahf
sbb
repz
leave
sbb
leave
push
mov
aas
jne
xchg
aas
jg
cld
fstl
adc
lret
lret
cmp
imull
cs
mov
aad
leave
or
stc
sahf
and
scas
mov
jmp
out
lahf
aas
mov
ja
iret
les
aas
jg
repnz
jp
dec
lahf
shrb
sahf
rolb
repz
lahf
xlat
inc
popf
inc
out
inc
leave
fisttps
cld
cld
stc
ja
jo
or
adc
out
pop
scas
scas
mov
xchg
dec
sti
popa
aam
xchg
sub
cld
stc
in
gs
xchg
push
fst
ljmp
gs
out
lahf
aas
fidivs
imul
fcoms
negl
fsubr
clc
ret
cs
lret
iret
lahf
aas
jg
push
sti
into
mov
jp
jno
stc
repz
jl
push
lcall
jge
pushf
xchg
arpl
int3
and
leave
pop
dec
xchg
dec
sub
push
outsb
and
shll
lahf
aas
cld
and
cwtl
insb
push
shll
add
adc
iret
outsl
arpl
and
leave
notb
cld
cld
inc
mov
jmp
xor
out
lahf
jg
xchg
push
test
fistpll
adc
cld
stc
repz
mov
sarb
loop
out
leave
lahf
aas
jg
xor
cmp
aaa
scas
mov
cld
loope
add
adc
mull
aas
jg
and
mov
cmp
repz
lahf
xchg
lea
jns
sarl
sub
jg
cld
arpl
icebp
sbb
add
enter
call
stos
mov
ret
mov
sub
inc
pop
jnp
sub
lahf
aas
jg
inc
mov
ficomps
daa
mull
in
repz
enter
adc
dec
loop
sbb
imul
cld
stc
repz
or
push
sahf
test
jecxz
jecxz
iret
lahf
aas
jg
or
xchg
lds
jb
mov
repz
fsubrs
rcrl
add
cmp
sub
mov
xchg
outsl
in
and
fwait
aaa
outsl
fmulp
adc
xchg
dec
inc
xor
int
fstps
or
pop
das
sub
cld
aaa
outsl
fidivrs
cmp
in
cltd
jne
dec
dec
out
fwait
lahf
push
adc
push
arpl
in
sbb
mov
js
pop
xor
inc
lret
das
cmp
push
int
aaa
outsl
sbb
xchg
sub
push
mov
jno
or
cltd
cmc
cmp
pop
movb
outsl
fimuls
movsb
gs
std
dec
test
jns
out
xchg
repnz
lahf
xor
gs
in
je
aaa
outsl
fidivrs
popa
xlat
insl
mov
ret
push
fwait
lcall
jp,pt
mov
out
cmp
push
int
mov
xor
cld
stc
rep
lret
cmp
push
push
mov
iret
lahf
aas
jg
pop
fstps
push
pushf
xchg
xchg
jecxz
insl
mov
icebp
in
int3
adc
dec
push
mov
xchg
inc
xor
add
test
lock
fsubrs
popf
aad
push
mov
xor
out
lods
xchg
loop
mov
adc
cld
stc
repz
aaa
jle
push
xchg
iret
lahf
aas
jg
cmpsl
jnp
xor
jle
sbb
cmp
add
stc
repz
push
sub
mov
mov
jle
loope
aas
jg
scas
cmp
mov
clc
in
out
gs
fdivr
pop
rcrb
je
inc
mov
daa
jecxz
push
addr16
nop
pop
fwait
aaa
outsl
fidivrs
jge
mov
aas
scas
mov
bnd
out
push
scas
aas
inc
mov
bound
outsl
fidivrs
nop
sub
in
sbb
or
adcb
int
loop
mov
rorl
stos
out
jo
leave
jg
outsl
fidivrs
icebp
inc
xrelease
push
aad
lds
aaa
inc
mov
sbb
mov
fidivrs
aam
jp
sbb
push
mov
outsl
xchg
movb
jecxz
add
or
repz
inc
lock
test
sub
mov
fisubs
xor
cmc
xchg
daa
orb
mov
out
test
sbbb
jge
dec
out
adc
add
dec
xlat
dec
orl
xchg
jnp
dec
dec
pop
cld
stc
repz
adc
push
stos
inc
enter
or
aas
jg
ss
jecxz
popa
mull
cld
stc
repz
mov
jae
loopne
pop
int
fcomps
lahf
aas
jg
cltd
mov
xlat
stos
adc
rcll
sub
stc
repz
scas
jmp
push
and
fistpl
lds
cmp
add
mov
iret
lahf
adc
cs
leave
aas
and
mov
stc
pop
adc
jecxz,pn
ret
cmpsl
repz
lahf
push
fidivrs
cwtl
gs
cld
stc
filds
sahf
mov
int3
push
scas
and
test
aas
int3
and
pop
dec
sbb
loopne
adc
dec
lea
mov
cld
push
mov
test
loop
in
iret
lahf
cltd
push
outsl
scas
imul
clc
fisttpl
iret
aas
inc
xchg
das
mov
push
cmp
and
hlt
leave
iret
pop
sarl
scas
pop
and
test
jg
data16
icebp
std
call
dec
push
rol
enter
dec
js
nop
add
xchg
lahf
aas
jg
jecxz
and
ljmp
or
pop
jo
repnz
cmp
iret
pop
aaa
mov
je
jg
push
aaa
jnp
cmpsl
mov
stos
mov
repnz
lahf
inc
mov
push
arpl
stos
sbb
pop
into
pop
cmpsl
cld
mov
inc
popl
inc
setno
push
jb
fidivs
out
mov
mov
or
outsb
cmp
iret
aas
sub
adc
push
xchg
scas
push
cld
stc
repz
test
lods
gs
stos
stc
xor
pop
dec
jmp
ret
test
ljmp
repz
cmp
scas
fnstcw
sahf
aas
jg
xor
jle
repz
sub
or
clc
outsl
fidivrs
adc
rcrl
popa
jge
movsl
sbb
out
xchg
fwait
aaa
dec
sbb
fnsave
fisttps
and
dec
inc
rolb
push
mov
cmc
iret
roll
xchg
popf
cld
stc
repz
mov
arpl
and
fcmovnbe
xchg
mov
xchg
aas
jg
sub
pop
mov
pop
ds
cld
stc
repz
pushf
ds
mov
push
stos
push
lahf
fmuls
iret
lahf
aas
jg
ljmpw
jno
notb
repz
jmp
xchg
imul
xor
or
pop
jecxz
lret
xlat
idivl
inc
xchg
xor
leave
iret
lock
adcl
dec
mov
fimull
mov
jg
cld
stc
push
pop
add
xor
xchg
mov
aas
jmp
iret
lahf
aas
jge
cmc
xor
test
dec
movsl
outsl
in
cld
stc
repz
mov
testl
iret
lahf
aas
jg
movsl
loop
or
aaa
push
inc
and
negb
ds
addr16
and
xchg
hlt
inc
mov
es
std
jp
stos
lds
shlb
xlat
leave
out
pop
xchg
push
xchg
push
lahf
or
add
push
int
aaa
out
ja
sub
addl
xor
into
mov
cld
in
cmp
stos
out
push
add
ficoms
ja
lret
xchg
das
out
repz
push
repz
push
add
aaa
outsl
fidivrs
in
pop
fwait
inc
push
sbb
fisttpll
clc
repz
fwait
js
fwait
inc
daa
stos
fs
pusha
sub
fidivrs
or
sub
in
pop
aaa
out
mov
pop
xchg
xlat
daa
xor
fwait
xchg
loope
repz
fwait
imul
fsub
mov
lods
cmp
sbb
mov
adc
pop
xor
loopne
cld
stc
repz
jecxz
jmp
nop
sub
mov
cmpsl
sub
jg
and
jle
mov
scas
lret
repz
pop
aad
addr16
rcll
stc
pushf
repz
cmp
imul
inc
push
mull
lahf
je
adc
jb
jg
repz
fwait
jg
into
insb
lods
jmp
popf
push
rorb
movsb
jg
jge
dec
out
scas
roll
scas
clc
hlt
fwait
jo
fsubl
aas
sbb
mov
loop
dec
sbb
stc
stc
repz
xorb
gs
and
out
aas
push
aaa
scas
int3
dec
mov
cld
stc
repz
xorb
or
sbb
faddl
iret
lahf
aas
jg
adc
fiadds
mov
hlt
cld
stc
repz
sub
iret
add
aas
insl
mov
subb
ficoms
stc
mov
je
loopne
stc
ds
aaa
outsl
jno
pop
aam
idivl
xor
jb
out
fcompl
and
clc
xchg
scas
dec
jle
aas
sbb
hlt
mov
cld
stc
repz
push
adc
repnz
add
xchg
lahf
aas
jg
dec
mov
test
mov
inc
sub
mov
lea
jns
outsl
and
jmp
vmwrite
stos
insb
fwait
aaa
outsl
fisubs
loope
add
cmpsb
es
daa
out
adc
aam
repz
sbb
inc
jecxz
fistpll
outsl
fidivrs
push
jnp
cmpsl
ret
mov
jo
int
push
adc
push
mov
gs
or
scas
out
lahf
jg
sub
xor
jge
imul
adc
cmc
cltd
loope
daa
in
xor
jg
fwait
pop
push
inc
jnp
arpl
mov
adc
cld
stc
repz
lret
ljmp
mov
mov
aas
jg
lahf
pop
jae
dec
pushf
or
push
mov
repz
js
push
mov
cmp
inc
out
mov
jp
notl
in
and
sbbl
sbbl
popa
mov
adc
xchg
ss
or
in
out
lahf
aas
xchg
mov
jl
jg
inc
ret
scas
das
cld
stc
repz
mov
cmp
pop
xor
mov
sbb
sbb
or
and
xor
push
cmp
out
jg
xchg
fs
and
out
inc
push
iret
lahf
ss
inc
out
lret
rclb
js
stc
repz
in
popa
pop
aas
mov
aam
fistpll
addl
inc
sub
stc
repz
xchg
jnp
imul
xchg
jae
mull
sub
cmp
jnp
sbb
lahf
aas
jle
sub
out
arpl
mov
inc
xor
cld
stc
repz
mov
mov
inc
std
cwtl
mov
test
lahf
jg
inc
mov
pop
fisubs
repz
jge
cld
nop
insl
and
xchg
pop
aas
jg
cld
mov
xchg
and
scas
inc
enter
repz
lahf
cwtl
cld
or
mov
mov
ret
jg
cld
stc
ljmp
imul
imul
out
lahf
aas
addr16
out
outsl
sub
jns
cld
stc
repz
fstl
jge
int
orl
addr16
add
push
adc
loopne
cmp
stc
repz
je
jb
mov
scas
mov
or
aas
jg
mov
cmp
mov
jecxz
repz
sbb
mov
sbb
sub
jg
cld
jg
daa
iret
imul
loopne
repz
lahf
cmp
aad
mov
inc
adc
cld
stc
cli
cltd
fidivrs
add
push
popf
cmpsl
outsb
loop
out
lahf
aas
sbb
jb
dec
movsb
xchg
addr16
ret
pop
and
cld
stc
repz
inc
jo
pop
int
add
and
aas
jg
insb
mov
xor
xor
into
mov
stc
repz
add
rorl
outsl
aaa
outsl
add
push
aaa
clc
addr16
popf
push
repz
fwait
dec
ds
xor
adc
mov
fldcw
mov
repz
cwtl
and
movsl
out
fwait
aaa
mull
insl
stos
out
bound
clc
stos
repz
jp
mov
sbb
in
hlt
or
fdivrl
dec
or
mov
xor
and
int
aaa
outsl
loop
jo
jnp
and
dec
fists
lret
repz
xchg
mov
mov
in
jl
outsb
fwait
aaa
outsl
fidivrs
xchg
fcmovbe
sbb
inc
aam
mov
repz
cmp
lods
arpl
mulb
xor
outsl
fidivrs
outsl
test
or
add
out
orb
gs
lock
loope
push
repz
fwait
fwait
mov
stc
inc
stc
jne
repnz
jns
pop
or
icebp
or
xor
dec
add
int
aaa
push
mov
xor
fidivrs
xchg
pop
or
cmp
fwait
aaa
outsl
sub
push
xlat
mov
aas
or
mov
mov
ds
nop
xor
push
outsl
fimuls
cmp
cmp
stos
jns
out
clc
xor
fiaddl
cmp
rcr
movsl
ljmp
jne
add
repz
fwait
push
mov
mov
je
mov
arpl
mov
lcall
jmp
fsub
int
aaa
xchg
pop
sbb
clc
ret
js
mov
mov
fstpt
lock
pop
int
aaa
outsl
dec
xor
daa
adc
iret
dec
sahf
mov
shl
stc
insl
xchg
jbe
lds
pop
dec
fwait
aaa
outsl
fidivs
call
jo
push
dec
jg
into
int
in
mov
lock
mov
repz
lahf
add
jae
or
and
cmpl
stc
mov
clc
mov
inc
popf
jns
lds
mov
aas
jle
loope
nop
hlt
xchg
lods
into
sub
in
and
loop
fidivrl
xlat
add
mov
mov
fisubrs
int
aaa
outsl
cli
mov
lock
in
push
add
mov
mov
mov
push
roll
fwait
aaa
outsl
add
mov
xchg
xor
out
mov
inc
mov
push
in
insl
ds
add
push
cmp
sub
mov
cwtl
idivl
sub
aas
jg
cld
sbb
aaa
jecxz
adc
and
out
lahf
lods
pop
sub
imul
mov
xor
mov
repz
fwait
addr16
sahf
push
pop
cmp
add
adc
movsb
xor
jae
movsl
das
lret
jbe
mov
out
fwait
aaa
pop
nop
stos
imul
inc
sub
mov
xchg
mov
in
int
aaa
outsl
mov
stos
cmp
sahf
push
cmp
popl
xor
mov
movsb
repnz
and
into
add
stos
push
adc
aaa
outsl
fsubrp
and
cmp
jne
cmpsl
popf
stc
jge
inc
cltd
jns
out
iret
jb
lods
cltd
cmpb
cwtl
inc
pop
pop
fnstcw
inc
jle
negb
repz
xor
lods
jne
lcall
fwait
sbb
dec
iret
popf
repnz
outsl
fisubs
jl
test
and
loopne
fwait
mov
pop
insl
aas
insl
mov
cmpsb
pop
je
loopne
outsl
fidivrs
push
cmp
mov
mov
pop
les
mov
xchg
push
mov
popf
mov
lahf
and
mov
and
mov
aaa
outsl
fsubp
pop
dec
shrb
adc
push
jb
out
xor
mov
outsl
faddp
push
mov
mov
inc
push
iret
andb
jbe
int
aaa
outsl
jno
add
shrl
ret
mov
mov
out
flds
push
mov
inc
and
mov
out
lahf
push
or
fwait
dec
push
lods
sbb
jbe
cld
stc
repz
mov
out
add
es
lock
lahf
aas
jg
mov
outsb
movsb
jnp
insl
mov
in
xor
leave
add
cld
stc
repz
pop
push
jp
mov
ja
pushl
jbe
lock
iret
lahf
aas
jg
xchg
xor
push
mov
mov
push
cld
stc
repz
mov
jp
or
inc
lcall
call
pop
data16
jnp
adc
out
lods
ret
jle
outsl
rclb
push
push
ss
jg
cld
fs
repnz
push
repz
lahf
adc
and
lods
imul
outsb
and
and
cld
stc
jno
imul
inc
jbe
scas
and
lahf
aas
adc
rcrl
jle
cmpsl
cld
stc
repz
xchg
mov
loop
ret
fistpll
iret
lahf
aas
jg
mov
insb
sub
mov
repz
movsl
mov
test
pop
sub
inc
jle
js
pop
xchg
inc
adc
ss
int
mov
dec
cmpl
jns
cmp
fmull
je
dec
jmp
fwait
aaa
outsl
mov
out
dec
mov
mov
pop
adcl
test
xor
int
fwait
aaa
outsl
fisubrs
pushf
push
aaa
mov
loopne
mov
in
lea
mov
sbb
dec
test
xchg
iret
lahf
ljmp
int3
test
jg
daa
add
ficomps
jl
js
xchg
xlat
and
out
sbb
fisubl
push
aad
sub
das
mov
push
add
int
ja
cmp
jne
fldt
ja
dec
mov
repz
mov
mov
in
sub
daa
push
pop
jno
out
add
daa
xor
pop
pop
push
xor
out
sahf
adc
cs
xchg
mov
fidivrs
sbb
js
add
sub
int
aaa
adc
lcall
sub
fcmove
pop
les
mov
popf
push
sbb
out
hlt
xlat
ret
sbb
xor
xchg
sub
sub
mov
ja
scas
or
pop
or
fwait
aaa
out
pop
lahf
cs
sub
mov
test
pop
fidivrs
out
ljmp
pop
das
jl
inc
adc
outsl
fidivrs
jae
xchg
lahf
bound
int3
add
int
out
add
mov
mov
fidivrs
rolb
and
push
aas
xchg
int
aaa
js
orl
ret
pop
jmp
fs
outsl
pop
arpl
push
sbbb
shlb
scas
mov
push
mov
and
ss
and
xchg
dec
push
fwait
inc
cmp
xlat
xor
mov
cmp
cmp
int3
daa
repz
int
aaa
dec
jne
mov
mov
ja
or
mov
mov
roll
jp
out
lods
push
addb
int
aaa
outsl
fs
in
xchg
nop
dec
cltd
pop
mov
jo
jnp
adc
and
lods
inc
mov
aaa
outsl
fsubrp
lods
cmp
lahf
ja
and
jns
out
ds
xor
clc
pop
xchg
ret
iret
lods
sbb
push
sbb
in
mov
je
or
out
fwait
aaa
and
sbb
add
orb
sbb
repz
les
rcrb
push
mov
fcoms
xchg
imul
in
js
test
fstps
inc
pop
fdivrl
das
pop
sti
dec
jg
cld
stc
and
inc
dec
je
inc
out
call
aas
loop
or
mov
mov
imull
cmp
dec
xchg
jns
iret
lahf
aas
jg
clc
jb
jb
add
adc
out
data16
loop
sbb
sbb
push
push
repnz
std
in
lahf
sbbb
xor
data16
xor
test
aad
es
std
push
push
xchg
adc
in
iret
lahf
int
or
add
bswap
inc
pop
repz
jg
push
imul
out
dec
aam
out
lahf
aas
sbb
adc
sub
lcall
cwtl
sbb
arpl
push
inc
pop
in
iret
lahf
aas
jg
fwait
leave
cmpsb
sub
jne
jns
adc
lea
in
or
mov
mov
cmc
popa
mov
repz
pop
fldt
gs
fwait
aaa
outsl
ficoms
push
jmp
fistpl
push
add
repz
out
out
insl
sub
mov
sbb
aaa
outsl
fidivrs
aam
xor
adc
adc
pop
xchg
add
iret
cli
in
lahf
aas
inc
sub
xchg
fwait
dec
gs
lock
xchg
lock
mov
lahf
lret
in
or
arpl
or
std
cs
mov
and
pop
cli
jbe
adc
mov
mov
pop
std
cmp
out
xor
inc
dec
pop
enter
lahf
jl
mov
ljmp
xchg
enter
mov
in
adcb
jg
cld
stc
inc
dec
rcl
add
dec
pop
cmp
iret
lahf
aas
mov
xchg
sbb
xor
stc
cld
stc
repz
jg
jecxz
push
insl
add
stos
xchg
xor
outsl
fidivrs
outsb
jmp
dec
cltd
out
fidivs
mov
jg
fildll
insb
fidivrs
cltd
mov
mov
xchg
sbbb
es
jge
out
cmp
mov
mov
insl
outsl
fidivrs
jp
fimull
add
arpl
int
aaa
mov
gs
sbb
fidivrs
sahf
mov
jl
or
sub
mov
push
filds
outsl
push
clc
insl
xchg
pop
inc
dec
movsl
pop
xchg
cld
stc
repz
outsl
fnsave
xorb
imul
aas
jg
stos
jb
push
jbe
cmp
ljmp
ret
shll
out
jns
out
xchg
inc
aas
int3
repnz
fs
outsl
fidivrs
xchg
inc
and
sub
div
out
fwait
and
mov
imul
repnz
ss
mov
ds
in
arpl
cltd
js
pop
or
arpl
iret
lahf
aas
movsb
pop
iret
pop
fwait
outsl
mov
mov
lods
sub
mov
adc
repnz
outsb
fiadds
dec
dec
mov
xchg
xor
stc
repz
adc
inc
pop
in
jns
divl
decb
xchg
and
lods
and
mov
mov
cwtl
imul
outsl
adcb
xor
mov
cld
sti
movsb
xchg
pop
or
push
outsb
popf
xor
iret
lahf
aas
jg
or
addr16
and
sub
mov
mov
and
xor
repz
pop
sub
outsl
fidivrs
inc
insl
adc
jle
mov
or
int
aaa
inc
fdivr
pop
jns
mov
adc
mov
movsl
test
push
shrb
orl
dec
inc
dec
jnp
leave
sahf
in
xchg
lahf
aas
jg
xchg
mov
mov
xchg
fstl
xchg
call
iret
sahf
sti
in
test
xchg
int
aaa
aas
pushf
inc
mov
mov
fbstp
xor
ret
iret
aaa
aas
jg
shll
pop
in
push
mov
out
out
lahf
subl
mov
sub
fwait
cmpsl
lock
cmp
popf
js
repz
mov
push
jmp
mov
cld
cld
adc
push
stos
mov
stc
pop
std
jl
xchg
std
testl
jns
mov
aas
loop
negb
arpl
push
insb
cld
stc
repz
mov
test
xchg
js
and
jg
ljmp
and
test
mov
lret
xchg
test
sub
adc
pop
cmpb
fwait
aaa
outsl
fmulp
cld
js
xor
pushf
inc
mov
popf
stos
imul
int
out
orl
stc
fimull
popf
gs
outsl
fidivrs
or
push
pop
push
mov
pop
pop
fst
imul
aas
into
popa
out
cmp
ss
dec
inc
adc
aaa
outsl
ficomps
adc
inc
icebp
popa
jmp
fsubs
int
das
mov
push
mov
jl
loope
xchg
pop
add
xor
aas
stc
cld
stc
mov
pop
dec
cmpsb
popf
sarl
fwait
ja
out
sbbb
loop
mov
repz
xor
push
inc
es
hlt
mov
and
outsl
fidivs
mov
and
mov
xchg
int
push
pop
pop
cmc
enter
cmp
mov
repz
dec
sub
mov
mov
lahf
test
add
or
sahf
inc
mov
repnz
loope
dec
add
cmpsl
xor
daa
pop
popf
scas
rcrb
outsl
popa
js
in
lods
jmp
clc
nop
out
test
repz
loope
pop
pop
adc
mov
fldenv
cli
xchg
aaa
outsl
fidivrs
imul
xchg
and
fdivp
out
fwait
stc
jge
inc
ret
push
push
lret
movsb
sbb
cmp
cmpsl
and
daa
mov
push
jnp
cld
je
ds
addr16
int
aaa
inc
or
lock
idivb
adc
jle
jmp
movsb
jns
repnz
jp
int3
mov
imul
out
subb
clc
mov
sbb
cmp
and
mov
lret
repz
cli
dec
pop
ficompl
mov
fisubs
lahf
add
mov
xchg
mull
jns
out
push
mov
push
mov
movsb
popa
test
mov
cmpsl
adcb
ja
xor
out
fwait
jne
push
lahf
jle
pop
lcall
fidivrs
pop
enter
dec
inc
inc
mov
mov
aaa
adc
and
and
sub
mov
mov
ficompl
cmp
adc
aaa
out
add
xchg
inc
inc
xchg
dec
jge
repz
xchg
cmpsb
mov
gs
xor
aaa
mov
fidivrs
and
jg
push
mov
push
test
jns
rcr
daa
sti
aaa
jp
pusha
adc
iret
mov
sbb
test
push
add
stc
repz
shufps
movsl
int3
push
aaa
out
and
sti
mov
ja
sbb
add
int
push
gs
dec
ficoml
popf
lds
fidivrs
js
add
and
fwait
aaa
cmpb
mov
icebp
push
arpl
fidivrs
sbb
loopne
cmp
cmpsl
int
aaa
outsl
stc
sahf
sub
jae
push
pushf
xor
mov
jns
out
jo
outsb
ret
nop
imul
aas
outsl
fmulp
les
xor
adc
out
fwait
sub
lret
movsb
movsl
outsl
shrl
mov
or
and
test
add
imul
int
xchg
mov
cld
stc
repz
aam
xchg
in
testl
lahf
aas
jg
xchg
aaa
pusha
repz
ds
cmp
cld
stc
repz
int
pop
call
test
mov
lahf
aas
jg
mov
xchg
jae
jbe
out
aas
stos
xchg
xchg
xor
out
and
int3
dec
outsb
jp
jns
scas
test
mov
sub
push
pop
jmp
dec
fdivrl
lea
lcall
repz
push
fidivl
hlt
xor
and
fwait
lahf
aas
jg
pop
xor
test
sub
push
dec
stc
repz
jl
push
sub
stc
mov
jg
cld
xor
hlt
cs
sub
idivb
repz
lahf
mov
cmp
lret
cli
mov
mov
repnz
sti
ss
or
mov
ror
orl
test
arpl
aaa
outsl
ficoms
and
fstl
or
inc
in
jecxz
xor
shll
repz
mov
pop
inc
loope
sub
mov
daa
mov
push
popa
int
out
lahf
pop
sbb
out
push
cltd
fdiv
sub
cld
stc
sbb
push
sbb
mov
mov
iret
lahf
aas
sub
inc
rcl
aaa
in
cld
stc
repz
pushf
adc
pop
inc
addr16
sti
movsl
push
and
pop
scas
mov
cmpb
test
and
mov
lret
enter
mov
and
cmp
ficompl
loope
loopne
and
mov
movsb
cmp
out
daa
decb
xchg
cmp
iret
lahf
jg
addb
sbbb
mov
stc
repz
jbe
pop
cli
mov
test
aas
jo
aas
aaa
outsl
sbb
lds
std
sub
sarb
iret
mov
inc
adc
mov
cmpsb
cld
jmp
scas
stc
xlat
scas
cld
jno
sbb
lahf
aas
jg
mov
inc
sbb
stc
repz
sub
mov
or
mov
mov
sub
pop
fldenv
xchg
arpl
out
fwait
adc
stos
inc
push
dec
mov
imul
aas
jge
lods
dec
jp
shll
out
add
stc
repz
outsl
movsl
xor
lock
sub
mov
mov
js
jnp
or
xchg
call
push
and
pop
pop
faddl
pop
stc
stc
repz
mov
adc
xchg
rclb
push
adc
mov
push
xor
jle
fidivrs
xor
push
adc
out
andb
mov
les
loope
fwait
aaa
js
incl
or
xorb
pop
data16
out
negb
inc
push
addb
mov
out
sbb
sub
ss
jb
outsl
fidivrs
sub
repnz
xorl
pop
lds
movsl
std
jbe
idivb
mov
and
mov
out
mov
rol
adc
loopne
loope
and
mov
sbb
call
es
shl
mov
repz
stos
inc
test
xchg
cmp
out
lahf
aas
pop
jo,pt
cmp
test
lret
cld
stc
repz
out
mov
sbb
outsb
sub
or
xchg
iret
lahf
aas
jg
cltd
jbe
and
fistpll
or
stc
repz
pop
mov
imul
inc
out
movsl
stos
iret
lret
pop
enter
ficoms
dec
stc
repz
sub
sbb
ret
rclb
icebp
repz
push
adc
ja
sbb
sbb
inc
movsb
sbbl
out
lahf
aas
movsl
loopne
push
in
ret
insb
test
repz
cmp
aaa
and
push
stc
dec
sub
cmpsl
outsb
inc
jle
dec
cmp
repnz
rep
xchg
sub
push
call
mov
sahf
aas
lcall
movsb
inc
adc
jmp
out
mov
adc
mov
add
stc
pop
mov
cld
ja
out
dec
fmull
ret
rcll
insb
mov
pop
loope
xor
aas
jg
cld
inc
mov
pop
inc
lods
jl
aad
in
iret
lahf
lret
outsl
lcall
outsl
fiadds
adc
lahf
cmc
dec
sbb
xchg
sbb
sbb
lahf
aas
call
mov
adc
lcall
or
loopne
clc
repz
sbb
imul
dec
test
and
pop
fnstcw
dec
insl
pushf
mov
lahf
jmp
and
inc
inc
stos
cmp
repz
pop
les
repz
lahf
lahf
cmp
pop
add
leave
loopne
xchg
jmp
pop
dec
shr
fwait
aaa
outsl
outsl
in
and
mov
out
test
or
jns
out
cmp
pop
cmc
push
cmp
es
test
leave
daa
ds
jnp
mov
adc
mov
orl
sbb
mov
fldl
sbb
int
aaa
icebp
jae
pop
dec
xor
sub
stos
enter
sbb
jns
jp,pn
fisubl
ja
cmp
mov
sub
push
and
push
out
fwait
rorb
push
lea
jbe
jmp
std
movsb
jns
ret
negb
and
xor
add
mov
repz
jbe
mov
pop
lret
test
subb
outsl
fidivrs
mov
negb
fwait
aaa
outsl
mov
add
and
jns
out
push
push
and
cmp
outsb
into
mov
out
add
cmc
mov
xchg
cmp
and
xor
push
adc
cwtl
mov
sti
loope
in
xchg
das
and
test
inc
pop
in
aas
dec
xchg
jae
ja
fdivrp
mov
fstps
sub
nop
xor
incl
pop
jp
lret
std
cmp
mov
add
and
pause
call
inc
or
setbe
xor
aam
out
fwait
daa
cmp
mov
inc
push
dec
mov
push
ficompl
ljmp
mov
push
std
and
push
hlt
xchg
pop
les
cs
jg
pop
pop
aaa
mov
mov
adc
repz
push
movl
outsl
cmp
sub
jl
jmp
push
xor
aas
jge
aaa
outsl
fisubs
out
in
loope
dec
pop
push
pop
inc
int
aaa
roll
pop
daa
pusha
push
cwtl
hlt
imul
test
pop
jmp
mov
fidivrs
sub
push
aad
add
mov
lcall
aad
cld
stc
push
scas
and
aaa
xchg
aad
push
xchg
add
jbe
iret
lahf
aas
jg
cmpsb
cmpsl
arpl
mov
aad
xchg
xchg
add
cld
in
out
inc
push
bound
xor
mov
xchg
lahf
jg
popa
dec
inc
sbb
jge
iret
lahf
aas
jg
jmp
and
sub
cld
xchg
stc
notl
pusha
xlat
dec
xor
lahf
aas
jg
mov
pusha
mov
add
cmp
repz
jge
aam
sub
negb
inc
mov
je
jno
sbb
fwait
aaa
outsl
add
cmc
lret
xchg
lea
fs
out
mov
mov
iret
dec
aaa
rolb
fidivrs
sbb
sbb
out
mov
push
mov
ja
hlt
fnstcw
xchg
arpl
push
dec
jp
lret
jbe
cmp
out
pop
icebp
sbb
aaa
push
rcll
xchg
pop
xchg
add
pop
stc
stc
mov
push
push
ja
and
mov
repz
lahf
push
imull
popa
or
mov
stc
stc
jo
dec
pop
pslld
cmp
mov
mul
stc
jecxz
iret
mov
sti
out
clc
lock
sbb
cmpsl
xor
syscall
mov
adc
lahf
aas
jg
jae
dec
aam
cld
pop
mov
loop
in
cmp
and
repz
fmull
std
xor
aaa
fwait
aaa
outsl
fidivs
sbb
xchg
fstpt
in
jns
out
push
or
lods
das
push
xor
mov
pop
lds
fiaddl
icebp
scas
ret
adc
fsub
imul
pop
cmp
inc
int3
mov
test
xchg
cmpsb
jnp
lea
stc
repz
loope
das
mov
jne
out
or
inc
das
or
mov
iret
fwait
aaa
cmpsb
jns
rep
loope
jle
cli
stos
mov
mov
sbb
bound
cwtl
aas
aaa
outsl
ficoms
fisubrs
cmp
jo
hlt
pop
repz
fwait
scas
jne
ret
je
and
mov
jns
sbb
and
cld
mov
or
mov
insl
iret
lahf
aas
jg
popf
cmp
push
loope
xchg
ljmp
repz
sub
sbb
cmp
mov
adc
fnstsw
roll
xchg
cmp
mov
mov
pop
aaa
dec
ficoms
fs
int3
out
mov
ret
sbb
and
mov
aas
mov
int
sub
push
out
bound
movsl
mov
mov
lock
pushf
sub
pop
out
fwait
aaa
inc
inc
sahf
icebp
popa
sbb
pop
test
fidivrs
pusha
fwait
push
cld
add
clc
jmp
fwait
aaa
outsl
lods
mov
call
stc
jno
jge
jns
out
lods
loop
and
lock
mov
jle
and
outsl
fisubs
outsl
lcall
xchg
xor
adc
jg
shrb
add
cmp
mov
xor
xor
test
bound
pop
stos
jle
stc
lods
icebp
mov
push
inc
inc
int
aaa
out
xchg
jge
sahf
cmp
xchg
pop
popa
push
stc
lock
adc
out
xor
pop
jnp
aaa
outsl
fisubs
cmp
mov
popf
jno
loopne
div
cmpsb
loopne
repnz
inc
outsl
fidivrs
sti
mov
arpl
push
out
out
fwait
aaa
jl,pt
adc
mov
sub
mov
jbe
gs
mov
icebp
cli
rol
lret
push
repz
sbb
insl
repnz
inc
pop
sahf
xchg
decb
fidivrs
lock
ds
mov
ret
out
fwait
aaa
adc
xorl
jb
fidivrs
inc
addr16
add
jo
into
movsl
movsl
dec
xor
fwait
aaa
outsl
outsb
sub
xor
or
inc
mov
in
cld
mov
mov
sarb
repnz
stc
lds
bound
mov
mov
mov
aaa
inc
xchg
imul
outsl
testb
lea
mov
call
mov
fidivrs
rcrb
push
lea
popf
add
cmp
dec
mov
cmpb
inc
icebp
mov
jno
push
push
push
jno
shll
mov
sbb
fwait
aaa
outsl
fidivrs
das
xchg
push
and
and
xchg
add
out
sbbl
mov
sti
lds
outsl
fidivrs
jae
pusha
movups
rorl
repz
fwait
xchg
jle
xchg
mov
xchg
shl
sahf
fdivrl
push
push
adc
mov
fwait
aaa
out
cmpb
pop
int3
or
add
jns
out
nop
dec
cs
sbb
sub
inc
xchg
sbb
mov
repnz
int
fsub
int
aaa
adc
cs
add
dec
mov
xor
aad
cs
xor
ja
jns
mov
enter
jo
loopew
outsl
fiadds
orb
pop
ret
jne
dec
repz
fwait
or
out
push
arpl
cmp
movsl
fdivrl
jg
cmp
mov
jno
fnsave
outsl
ficoms
add
rcrb
dec
xchg
dec
repz
fwait
outsl
jp
xchg
pop
fcompl
mov
jge
cmpl
fnstenv
ds
jg
fidivrs
sbb
in
mov
repz
lahf
leave
xor
rolb
xchg
push
xor
cld
cld
stc
lods
rep
mov
xor
fwait
ja
or
cmp
out
or
mov
xorb
scas
out
cwtl
xchg
rep
inc
lea
and
jmp
cld
jg
lahf
jg
rorl
cli
mov
mov
cld
stc
repz
pop
inc
lock
jge
shll
mov
jg
inc
mov
in
mov
mov
or
aaa
clc
mov
test
mov
icebp
xchg
int
add
mov
cmp
xchg
sub
mov
pop
lods
pop
push
mov
cmpsl
loop
jns
adc
call
repz
insb
pop
mov
fisubrs
or
sti
outsl
out
aaa
outsl
fidivrs
xor
aam
push
jno
data16
gs
and
sub
fidivrs
mov
or
xchg
dec
jbe
adc
mov
cmc
inc
cli
adc
outsl
fidivrs
arpl
adc
inc
push
movsb
out
fwait
aaa
mov
imul
or
repnz
mov
repz
lahf
aaa
movsb
sahf
sbb
movsb
popa
cmp
jle
cld
stc
mov
das
lret
push
adc
pop
fisubl
out
out
push
and
pop
das
fidivrs
addb
aaa
and
leave
dec
fwait
aaa
outsl
inc
loopne
jmp
cmpsb
pop
or
fstpt
gs
mov
call
xchg
aaa
outsl
fidivrs
shll
cli
inc
cmp
in
cmc
lock
jnp
add
cmp
iret
lahf
aas
jg
dec
lea
sbb
push
inc
push
pop
ret
cld
jecxz
dec
mov
push
bound
lahf
aas
jg
nop
and
ret
jb
ds
stc
repz
outsb
mov
and
sbb
mov
and
dec
sbbb
cld
jns
out
scas
popf
jmp
push
stc
push
std
call
aaa
outsl
fidivrs
repnz
ss
add
out
fwait
addr16
das
sub
dec
dec
lcall
pushf
xchg
js
inc
xchg
xor
outsb
xor
xchg
fwait
aaa
outsl
je
pushl
cltd
add
call
and
jno
hlt
lock
dec
pop
xchg
sub
loopne
test
mov
mov
dec
pop
pop
icebp
repz
outsb
mov
int
aaa
ds
insb
into
push
pop
das
sti
fstl
xchg
xchg
fidivrs
lods
mov
jmp
cli
imul
cmp
add
jns
xchg
and
lcall
add
fnstcw
rcl
cmpsl
in
jg
cld
stc
or
jno
and
ds
pop
jmp
out
daa
aas
lcall
push
inc
sbb
rep
and
sbb
popa
sub
sub
bound
inc
pop
out
jecxz
mov
stc
repz
jo
mov
imul
jp
pushf
sbb
jg
cld
je
inc
mov
mov
fcmove
sbb
mov
out
lahf
xchg
subb
and
xchg
jnp
xchg
int3
test
sahf
mov
iret
mov
sub
mov
inc
mov
fidivrs
add
and
pushf
faddp
jns
aaa
outsl
stos
je
pop
mov
aas
fstpl
ljmp
cmpsb
cmp
jns
aaa
outsl
fidivrs
sbb
add
in
out
fwait
outsb
and
data16
ss
cmc
mov
dec
popa
call
mov
enter
cltd
pop
pushw
fwait
aaa
inc
inc
xchg
dec
xadd
jns
out
mov
xorl
psubb
outsl
fidivrs
insb
test
stos
hlt
add
cmp
cmp
pop
sbb
fdivs
lahf
pop
bound
jo
aas
jg
xor
cmc
mov
mov
push
push
sbb
inc
repnz
dec
repz
daa
sub
test
out
je
in
ficompl
fidivrs
mov
pop
pop
mov
shll
adc
fwait
aaa
outsl
lret
adcl
fisubl
mov
idivb
xchg
or
jecxz
jo
aaa
inc
pop
fnstenv
add
fstpt
fwait
pop
push
jl
stc
push
stos
in
or
cmp
sbb
mov
dec
inc
in
or
adc
ja
cs
fistpll
outsl
sub
mov
iret
stc
sbb
mov
ja
cmp
cs
cmc
test
sarb
out
mov
cmpsl
je
je
pushf
fistps
mov
out
loope
inc
aaa
iret
xor
loope
repz
fwait
jnp
aas
fwait
int3
or
ficoms
cmp
insb
push
jns
stos
jns
mov
aas
pop
jg
aaa
repz
aam
sbb
mov
cli
jbe
and
fdivrl
jge
xor
fsubr
call
iret
lahf
jg
mov
and
ficompl
and
cld
stc
repz
xor
aam
aaa
clc
addr16
push
add
out
iret
lahf
aas
jg
or
aas
mov
stc
repz
stos
daa
mov
lcall
inc
xchg
inc
jecxz
sbb
ret
dec
mov
pop
mov
xor
mov
int
aaa
outsl
ja
mov
aas
dec
pop
xorb
mov
call
xchg
jb
das
xlat
cmp
mov
aaa
outsl
fidivrs
cmp
shll
mov
cmpsl
jns
out
push
daa
add
lret
cmpsb
jg
ds
sti
add
aaa
outsl
fidivrs
adc
addr16
ret
repz
fwait
out
fcompl
loopne
xchg
pop
loop
das
outsl
fidivrs
dec
enter
jae
mov
cltd
stos
mov
shll
mov
int
adc
mov
das
sahf
cmpsl
or
sarb
inc
outsb
inc
dec
fwait
imul
les
inc
daa
and
imul
icebp
shlb
out
aad
inc
incl
daa
mov
mov
fidivrs
lcall
sub
int
aaa
outsl
imul
push
cmovo
in
fidivrl
dec
or
pop
rcrb
lds
fcompl
into
aas
mov
int
adc
out
fwait
insb
push
sub
mov
popf
icebp
xchg
pop
lock
xchg
cmpsl
fcomp
or
test
out
lahf
jg
or
mov
cli
in
cld
sti
leave
inc
sbb
push
push
pop
shll
ret
iret
lahf
aas
jg
jge
mov
add
pop
sar
repz
xlat
sbb
pop
mov
push
sub
test
loope
pop
cltd
xchg
stc
out
mov
jns
mov
mov
test
aas
mov
cmpsb
bswap
ficoms
das
or
je
cld
stc
repz
gs
push
push
lahf
aas
jg
loop
ljmp
or
sbb
leave
out
ljmp
xorl
jg
inc
rcll
in
int
imul
mov
xlat
mov
jo
mov
out
pop
pop
sti
jbe
lcall
mov
mov
stc
add
lret
idiv
xchg
aam
aaa
outsl
aaa
or
fmuls
cmp
out
mov
das
mov
sti
por
add
lahf
daa
xchg
out
dec
or
out
fwait
aaa
cmp
test
mov
jns
push
fwait
data16
adc
mov
push
add
and
icebp
inc
aas
add
mov
adc
or
mov
outsb
js
fidivrs
addr16
jmp
or
fwait
sbb
imul
clc
inc
and
mov
repz
cld
jmp
jmp
das
inc
ja
lds
lret
mov
les
iret
push
orb
sbb
xchg
and
stc
repz
xor
push
repnz
cmp
mov
fwait
add
in
rorb
nop
nop
xor
add
outsl
fidivrs
mov
sub
aas
adc
out
fwait
sub
adc
popf
push
cltd
adc
outsl
fidivrs
enter
ror
xor
ret
fwait
aaa
jp
dec
test
enter
cmp
enter
push
jne
addr16
xor
repz
lock
mov
stc
xlat
repnz
and
aaa
in
push
push
cmc
lahf
inc
cld
fadd
aad
add
fwait
jge
repz
pusha
jnp
aam
mov
fdivs
cld
inc
or
lcall
or
push
cmp
out
lahf
push
sbb
mov
dec
les
fidivrs
fbld
outsb
std
mov
ja
inc
arpl
loop
xlat
fiadds
jns
out
and
mov
loop
rcrb
mov
scas
pop
mov
mov
inc
jp
out
fwait
stos
out
nop
nop
push
rclb
sub
xchg
mov
sbb
fiaddl
ret
adcb
dec
add
aas
ljmp
bound
or
push
mov
in
pop
lea
mov
repz
xchg
add
rorb
lods
xor
outsl
fiadds
sub
mov
stc
repz
mov
pop
lahf
arpl
and
jg
cld
cli
xchg
dec
cmp
jno
sbb
int3
push
cmp
fiaddl
in
adc
pop
adc
jg
cld
stc
pop
jbe
cmp
mov
sbb
mov
aas
or
loope
lret
ljmp
push
neg
iret
out
dec
addr16
outsl
fidivrs
adc
push
or
fwait
push
fistpl
lahf
or
test
sbb
jns
bnd
xchg
addl
lods
cmp
mov
adc
in
outsl
adc
xchg
cmp
mov
sub
or
cmp
aaa
push
cmc
loopne
fwait
aaa
outsl
cmp
pushf
and
fistl
pop
jns
lock
jg
xchg
jae
aaa
outsl
fidivrs
loop
out
es
inc
xor
imul
int
rcl
mov
pop
lods
insl
fldcw
mov
cmpsb
pavgb
mov
mov
and
pop
mov
push
fisttpl
aad
sti
ret
push
addr16
addr16
rcrl
or
daa
lahf
aas
jo
fstl
jo
repz
cmp
push
fs
cltd
fistpl
dec
mov
mov
imul
call
mov
out
fwait
aaa
mov
dec
and
stos
lods
cmp
dec
dec
ds
into
sarb
pop
dec
int
and
adc
out
rorl
pushf
mov
test
mov
fistpl
popf
pop
cmp
mov
cmc
outsl
fidivrs
mov
loope
lds
fwait
aaa
sub
std
subl
jns
bound
movl
push
je
cltd
int
aaa
outsl
push
xor
add
inc
lods
jns
hlt
xchg
pop
pop
xor
decb
add
fnstcw
cs
scas
scas
out
fwait
aaa
xchg
addr16
imul
sbb
aas
jno
cmp
xor
stc
mov
mov
sbb
repz
loopne
lahf
sbb
pop
inc
or
outsl
fidivrs
mov
das
lret
push
cmp
lods
adc
int
aaa
inc
dec
shrb
add
outsl
lret
js
ret
lds
jbe
fwait
aaa
outsl
fimuls
mov
sbb
cld
and
mov
and
xlat
repz
fwait
dec
pop
sub
jae
and
cmp
gs
das
adc
pop
fwait
or
rcll
inc
mov
mov
shlb
adc
jns
jg
push
enter
mov
test
lods
xlat
xchg
aaa
outsl
in
pop
push
cld
cmc
pop
xor
cmpsl
das
jg
cld
stc
sbb
in
cltd
push
pop
insl
push
es
iret
lahf
aas
decb
shrl
add
and
scas
push
lds
cmpsb
ss
ret
xlat
mov
xor
mov
sbb
repz
sbb
cmpsl
aaa
repnz
cli
scas
sbb
sbb
aaa
outsl
fidivrs
movsb
jp
jno
mov
push
loopne
fwait
mov
imul
pop
fidivrs
gs
sbb
outsl
rorb
int
aaa
outsl
jle
ret
dec
fmuls
lahf
mov
out
cmp
das
jmp
aam
jecxz
fwait
aaa
outsl
ficoms
push
popa
mov
cmp
mov
int
adc
jl
out
std
insb
mov
push
aaa
outsl
fidivrs
imul
mov
out
fwait
adc
into
jl
xchg
stos
or
outsl
fidivrs
jl
cli
and
mov
mov
fwait
aaa
fstpl
aad
sahf
lea
fidivrs
jbe
mov
fadd
push
in
jg
outsl
ficoms
int3
aad
cmpsb
daa
aam
out
fwait
aaa
push
add
dec
insb
push
stos
imull
jae
ds
repz
in
ret
sub
push
je
mov
fidivrs
out
xchg
aaa
mov
lahf
enter
es
sub
lcall
icebp
cld
mov
jg
sub
jg
aad
ret
addr16
fnstsw
xrelease
jg
xchg
subb
jns
inc
inc
dec
inc
out
xor
mov
dec
sub
fwait
aaa
xor
jmp
inc
pushf
cld
jno
subl
out
pop
push
xor
sti
jmp
stc
stc
ret
and
or
xchg
rolb
aas
jg
cld
outsl
int
sbb
jl
xchg
in
iret
lahf
adc
loope
mov
and
mov
push
push
push
xchg
daa
outsb
mov
enter
dec
scas
outsl
daa
cmpsl
pop
or
aaa
outsl
fidivrs
js
jae
xchg
aad
into
push
repz
fwait
push
hlt
in
jnp
mov
and
in
outsb
daa
sbb
into
jg
sbbb
mov
mov
xchg
div
out
sbb
lahf
inc
repz
rcll
fidivrs
sbb
loopne
roll
out
and
int
aaa
lock
mov
or
and
loop
and
adc
js
aas
jg
mov
or
lods
push
hlt
add
push
dec
orl
test
fwait
aaa
outsl
fisubrs
xlat
add
xchg
in
and
or
repz
fwait
test
and
mov
outsl
fidivrs
and
lock
scas
ds
cmp
fwait
outsl
xchg
mov
and
sarl
jb
movsl
and
add
lahf
sahf
bound
outsl
das
inc
lea
sbbl
cmpl
fistpll
iret
jecxz
xchg
shlb
fidivrs
cld
add
pop
roll
out
fwait
sub
ja
imul
sbb
cmp
or
mov
sub
data16
jnp
mov
stos
cmp
insl
nop
pushl
fwait
jae
outsl
fidivrs
int3
or
popa
push
imul
xorb
ret
sbb
out
imul
out
sub
pushf
push
call
lahf
cld
arpl
cmpsb
mov
das
fists
mov
sub
sub
adcb
cmp
daa
int
aaa
je
sahf
add
mov
sarb
dec
jns
inc
fwait
mov
out
comiss
pop
out
out
fwait
pop
repz
bound
cmpsb
fnstenv
outsl
fidivrs
pushf
lahf
dec
popf
ss
xchg
int
stos
and
cmp
repz
jg
or
mov
sti
mov
inc
fisubrs
adc
ds
out
fwait
dec
int
cld
sub
in
mov
jns
jmp
cmpsb
jmp
negb
out
adc
xchg
jnp
xchg
fs
lock
sbb
fnstcw
mov
repz
mov
out
push
xlat
add
xchg
popf
or
mov
fnstcw
cwtl
lea
in
xchg
inc
daa
icebp
push
pop
out
fwait
aaa
push
push
scas
xchg
cmp
push
sub
popa
fs
pop
xor
push
ror
adc
xor
jle
stos
inc
outsb
mov
cld
jl
repz
mov
sub
nop
fstl
outsl
fidivrs
out
out
mov
loopne
fists
cmpsb
imul
cld
cld
stc
repz
je
ds
sbb
ja
xor
adc
lock
add
stos
shlb
loopne
sub
adc
ficomps
jecxz
mov
sub
repnz
jae
push
sub
pop
inc
xlat
cmp
outsl
fidivrs
push
dec
mov
dec
stc
pop
adc
and
daa
dec
stc
and
xchg
fwait
aaa
and
bound
push
xchg
inc
aas
jg
cld
xor
clc
gs
daa
adc
or
cmpb
int3
mov
dec
jg
cld
stc
out
fs
sbb
push
inc
in
cs
inc
push
out
lahf
aas
cmp
mov
cmp
fisubrs
repz
fstpt
scas
lret
jg
mov
mov
jg
push
arpl
add
jg
leave
out
lret
sarb
adc
xchg
sub
fadd
shll
out
mov
xor
stos
sbb
dec
repz
fwait
mov
dec
cli
es
repnz
or
negl
ficoms
in
jae
xchg
inc
ret
clc
jno
divl
mov
xchg
fwait
aaa
outsl
sti
out
dec
sbb
je
xor
cmp
int
ljmp
int
dec
mov
jns
xlat
mov
jp
outsl
jge
addr16
xlat
mov
fwait
aaa
outsl
push
sbbl
jns
cmpsb
ljmp
outsb
inc
xor
cmp
outsl
fidivrs
pop
or
sub
and
pop
aas
test
loopne
jae
dec
sub
incb
and
pop
lds
fdivs
add
outsl
ficoms
addr16
sbb
sub
loop
fwait
aas
popa
out
lods
sub
es
jl
mov
dec
push
pop
es
stos
mov
aaa
outsl
fiadds
int
daa
out
idiv
out
xchg
cmp
add
aas
pop
push
jbe
arpl
aaa
outsl
fidivrs
ljmp
fucomip
cmp
rclb
pop
dec
int
add
in
pop
rorb
pop
ret
mov
jns
jno
roll
adc
nop
xchg
outsl
fidivrs
repz
add
daa
lods
cmc
enter
mov
jnp
xor
sbb
mov
movl
aaa
idiv
lahf
sub
adc
xchg
out
fwait
loop
mov
movsl
test
sbb
jns
push
pop
jno
adc
push
jg
into
pop
push
cwtl
aaa
bswap
fwait
aaa
outsl
sbb
into
inc
mov
or
hlt
and
stos
mov
inc
stos
mov
mov
jge
mov
call
outsl
stos
mov
out
insl
arpl
imul
gs
mov
mov
sbb
fidivrs
repz
out
mov
daa
push
cmp
int
aaa
sub
jne
cli
pop
mov
mov
lahf
jg
aam
cmp
unpcklps
mov
lods
iret
aas
xchg
out
fs
cltd
inc
scas
mov
mov
sub
stc
repz
outsb
rol
push
pop
stos
and
cwtl
adc
aas
jg
ss
adc
and
mov
outsl
stos
lea
jo
lods
push
out
fwait
aaa
inc
scas
loop
jns
cmp
fidivrs
jbe
mov
test
xchg
sub
outsl
mov
inc
add
xchg
repnz
mov
pop
cmp
and
jno
and
or
xchg
xchg
repz
rcll
lea
pop
jne
xchg
push
aaa
outsb
or
lods
jbe
icebp
dec
adc
outsl
ss
aam
ja
sahf
mov
aas
sarb
pushf
push
adc
jecxz
mov
ficoms
sub
jmp
and
movsb
xor
jo
int
sub
or
push
fdivrl
sub
pop
push
sti
int
ja
inc
repz
dec
mov
test
adc
hlt
enter
test
icebp
in
cmp
push
fsubrs
ret
xchg
fcomps
ret
mov
pusha
pusha
jne
mov
iret
ret
aas
daa
jno
decl
xchg
mov
mov
jne
inc
aaa
outsl
fidivrs
xchg
data16
aad
inc
loope
shlb
push
mov
fidivrs
ds
jg
sbb
and
add
fwait
aaa
outsl
jnp
lods
sub
lret
cs
lods
sub
popf
mov
fistl
push
xchg
aad
and
stos
test
fwait
aaa
outsl
fidivs
dec
cmp
xchg
sub
sub
adc
in
int
cltd
clc
scas
lret
pop
mov
dec
fidivrs
cmp
push
scas
adc
sub
outsl
addl
push
xor
jp
jecxz
cmpb
iret
and
idivb
or
repnz
arpl
in
mov
in
and
and
out
aam
movsb
mov
fwait
aaa
outsl
add
mov
fs
and
xchg
adc
fbstp
add
adc
ja
ss
out
lahf
sbb
pop
fstpt
add
stc
adc
xor
mov
dec
into
icebp
inc
ljmp
pop
lahf
jb
popf
or
out
lahf
xor
xchg
mov
sbb
jle
cld
stc
xlat
mov
rorb
rclb
sub
push
aaa
outsl
fdivrp
pushf
mov
push
xchg
mov
mov
pop
test
shld
add
mov
dec
jb
lret
aaa
adc
fld
or
push
fwait
push
mov
mov
repz
jecxz
jecxz
cmpsb
xchg
mov
out
adc
fisttpl
mov
cs
cs
push
inc
add
clc
bswap
pop
clc
dec
insl
pushf
mov
imul
out
cmp
repz
test
inc
arpl
or
jg
inc
das
iret
mov
mov
repz
lahf
mov
sbb
jmp
iret
lahf
jg
fdivl
scas
or
std
add
fwait
adc
out
shlb
and
xor
lods
pop
icebp
xchg
idivb
xor
lcall
mov
aad
pop
call
dec
push
enter
mov
xorb
int
push
mov
fdivrs
mov
movsb
jns
enter
adc
sbb
xchg
addb
sub
pop
mov
repz
scas
mov
pop
jecxz
idivl
mov
add
jo
mov
jno
jle
sub
add
lock
mov
imul
adc
cmp
or
fidivrs
lods
stc
ds
adc
xor
jmp
aaa
outsl
fs
test
and
hlt
arpl
push
lea
sti
pop
sahf
jno
shll
ficomps
mov
pop
das
mov
test
mov
loopne
int
inc
xchg
pop
or
std
outsl
mov
push
add
test
mov
out
fwait
andb
push
push
add
jns
mov
dec
push
sarl
or
insl
lods
rclb
imul
fnstenv
repz
int
fisttps
ret
jnp
idivl
jg
cld
rcll
in
xor
pop
es
sbb
mov
jecxz
fdiv
repz
cmp
sub
add
adc
pop
sbb
stos
or
xor
call
std
adc
aaa
aad
mov
push
push
pop
adc
push
jl
rep
aam
imul
jecxz
xorb
mov
dec
cmpsl
loopne
cmpsl
lahf
aas
icebp
xchg
mov
lods
insb
rol
loop
repz
ret
jns
pop
addb
and
xchg
ja
pop
ss
movsb
jns
pop
dec
lcall
push
jbe
repz
lahf
pop
mov
movl
out
jg
cld
stc
fdivrp
ret
xchg
sub
pop
fldln2
add
push
push
push
out
lahf
aas
andl
icebp
insl
lret
hlt
out
mov
in
in
inc
push
adc
and
fwait
aaa
andb
pusha
sbb
js
mov
scas
mov
mov
mov
mov
fwait
aaa
outsl
dec
test
adc
stos
fnstenv
push
mov
jns
out
cmc
ret
cmp
call
mov
jno
aam
das
push
jns
out
cmp
and
add
out
mov
fwait
aaa
outsl
dec
movsb
cltd
shrb
xor
mov
out
pop
push
mov
xchg
jp
and
dec
mov
fdivrs
scas
inc
sbb
scas
mov
mov
icebp
pop
mov
add
or
test
fwait
aaa
outsl
fidivrs
mov
addl
ljmp
dec
fdivrl
into
xchg
xorb
jg
pop
stos
sbb
add
push
pop
jle
mov
out
lahf
enter
pop
xor
add
aas
jg
adc
xchg
fidivs
mov
mov
sub
clc
insb
rolb
aas
jg
cld
adc
inc
cld
sub
cs
in
cmp
and
repz
lahf
adc
shlb
mov
sbb
mov
cld
stc
stos
sysenter
sahf
jb
jp
jle
mov
repz
pop
pop
les
int3
adc
test
dec
cmp
push
jno
lock
and
pop
cld
stc
repz
mov
xor
cmc
lods
ret
cld
dec
iret
lahf
aas
jg
adc
xchg
xor
mov
lock
fcoml
repnz
xchg
out
in
inc
xchg
jns
xchg
mov
loop
btr
shlb
repnz
popa
gs
cli
rcl
xlat
aas
jg
cld
or
jns
flds
aam
jmp
repz
lahf
bsf
addr16
movsl
movlps
cld
stc
cltd
loop
inc
cmp
adc
lods
out
lahf
aas
sbb
inc
dec
cmc
idivl
lret
cld
stc
repz
data16
sbb
pop
test
iret
lahf
aas
jg
adc
movsl
or
push
stos
push
cmp
bound
xchg
pop
pushf
daa
daa
xchg
pop
ret
aas
jg
outsb
sti
push
hlt
jns
into
jg
jno
or
iret
sub
adcb
cmp
ret
and
push
stos
mov
dec
pop
arpl
and
mov
int3
fstps
fwait
aaa
out
mov
aas
arpl
addb
stc
popa
xchg
in
jns
out
and
loope
test
jbe
das
cmp
sbb
aaa
outsl
fidivrs
add
mov
mov
int3
int3
sub
jp
jge
sub
fidivrs
and
and
out
cmpsl
inc
loope
inc
and
aas
jbe
adc
out
pop
mov
cmp
aam
aaa
outsl
fidivrs
cltd
or
pop
mov
repz
fwait
xchg
call
loope
push
stc
inc
fcomps
fnstcw
jge
iret
jbe
inc
xchg
bnd
fs
repz
xchg
cmp
xor
dec
jmp
lea
xor
test
iret
lahf
jg
ljmp
jbe
pop
rcrb
jns
movlps
mov
scas
iret
lahf
aas
jg
cmp
hlt
push
cmpsb
addl
cmpl
rcrb
pop
fsubrs
aaa
aaa
outsl
fidivrs
loope
into
mov
lret
lret
int
jg
mov
adc
outsl
fidivrs
xor
fucompp
repnz
faddl
in
push
sub
adc
jp
in
sub
fidivrs
pop
jle
xchg
mov
lods
or
push
enter
jmp
fs
xchg
cmp
call
or
pop
inc
ja
daa
repz
js
or
mov
pop
movsb
cmpsl
insb
fidivrs
jg
inc
sbbb
ss
ficoms
mov
xchg
pushf
pop
push
sbb
int
aaa
outsl
fs
push
sub
inc
mov
repz
xlat
aas
insl
lret
inc
out
gs
bound
fwait
aaa
outsl
fidivrs
and
mov
lcall
out
mov
imull
xchg
loope
and
adc
iret
jg
fidivrs
xchg
dec
lods
and
scas
in
push
shl
out
lahf
jns
out
sbb
into
stos
or
cld
stc
insb
es
dec
sub
popf
pop
mov
and
out
lahf
aas
or
inc
mov
movsl
xchg
xchg
or
cld
stc
repz
inc
sub
out
dec
or
add
iret
lahf
aas
jg
lret
and
test
push
popa
andb
nop
pop
in
pop
mov
pop
xor
xor
pop
inc
sbb
outsl
js
aas
sub
mov
scas
test
out
pop
outsl
xchg
push
out
fwait
aaa
cwtl
jb
pop
push
mov
jns
jne
cmpsb
fidivrs
imul
pop
jmp
push
nop
dec
int
aaa
outsl
sarl
add
je
add
xchg
sbb
xor
ret
aam
daa
fwait
aaa
outsl
fiadds
or
xor
repz
or
pop
jns
out
mov
add
ret
pop
cmp
aaa
outsl
fidivrs
orl
xchg
out
fwait
cwtl
xor
outsb
lea
ja
mov
mov
je
pop
adc
jg
mov
mov
cld
stc
repz
xor
arpl
shrl
xor
aad
cmc
lcall
cltd
adc
iret
inc
mov
bound
jmp
cmp
cld
iret
mov
push
jge
push
repz
lahf
pop
inc
add
jge
cmp
jg
cld
stc
push
loop
mov
push
insb
movsl
lods
or
iret
lahf
aas
sub
fwait
cmp
ret
sbb
stc
repz
inc
add
mov
lahf
adc
push
scas
in
cld
sbb
cmp
out
mov
add
outsb
scas
sbb
dec
sub
lahf
cmp
sbb
lret
jns
cmpsb
loop
jbe
scas
dec
jmp
outsl
cmp
outsl
fidivrs
push
pushf
into
dec
add
shlb
rolb
clc
adc
mov
sbb
repz
xor
cmp
jmp
push
loop
lahf
idivl
lret
jns
out
mov
lods
lods
dec
inc
sarl
push
je
cmc
xchg
scas
cld
fists
and
shrb
int
aaa
outsl
fisubrs
adc
or
int
int
int
push
dec
mov
push
xor
popa
jbe
cld
stc
movl
test
push
xchg
jb
sbb
cmp
iret
lahf
aas
jg
mov
das
dec
or
cld
stc
repz
adc
stc
imul
mov
mov
repnz
out
fwait
testl
push
lret
sub
pop
outsl
fidivrs
push
fmuls
xor
int
aaa
mov
out
dec
das
mov
inc
fnstcw
adcb
jnp
mov
jmp
push
pop
jne
sti
imul
mov
das
push
cmc
xchg
les
pop
sarb
dec
sahf
das
mov
insb
fiadds
sahf
shll
xchg
incb
xrelease
cmpsl
cmpsb
adc
cmc
aad
cld
cld
inc
xchg
mov
lea
mov
arpl
enter
faddl
test
nop
ret
dec
sub
ja
dec
gs
outsl
in
mov
fwait
mov
fbld
lods
push
mov
cld
mov
xchg
sbb
inc
pop
sbb
mov
inc
outsl
fdivrl
mov
xchg
scas
cmp
mov
aas
push
xchg
sbb
sbb
lahf
aas
sbb
jl
lock
out
xchg
xchg
or
mov
xor
xor
das
fwait
aaa
outsl
add
jge
mov
orl
out
sbb
add
cmp
adc
movsb
mov
pop
mov
outsl
fidivrs
repz
dec
fidivrl
sbb
inc
aam
sub
fwait
aaa
out
pop
leave
jle
push
test
sbb
mov
es
add
idivb
mov
adc
cmpsl
add
mov
push
pop
add
jbe
mov
insb
adc
jmp
inc
outsb
fidivrs
xchg
jle
inc
and
add
or
mov
out
xor
lahf
adc
and
clc
pop
or
daa
test
xor
adc
dec
push
iret
aad
loopne
and
jbe
lcall
nop
fwait
aaa
popa
mov
pop
int3
cmp
push
repz
push
dec
repnz
inc
std
add
std
mov
aaa
cmp
in
pop
repnz
out
add
pop
mov
and
out
fwait
aaa
sub
jl
adc
sti
xor
fidivrs
les
and
cli
mulb
pop
sbb
nop
scas
xchg
shll
decb
stc
or
and
sbb
out
pop
stc
mov
pop
ja
shll
iret
lahf
aas
loope
fcompl
adc
cmpb
stc
repz
in
insl
loopne
out
sarl
jg,pt
add
lea
int
mov
in
mov
hlt
int
mov
fmuls
ret
jae
out
sahf
ret
cmc
fwait
aaa
outsl
fisubrs
cmpsl
std
decl
je
push
jnp
sarl
int
xchg
cmpsl
fwait
push
and
ja
pop
aaa
outsl
fidivrs
sbb
mov
in
fwait
imul
decb
sarb
out
fistpll
cmp
jp
lds
fidivrs
ret
jb
jmp
and
in
int
mov
testb
loop
nop
aas
js
nop
orb
adc
sarl
push
jg
incl
pop
in
call
mov
lahf
adc
adc
cld
stc
mov
xchg
cmp
sbbl
lods
xor
aas
jbe
add
lcall
mov
adc
das
nop
pop
int3
movsl
ljmp
aas
jg
sub
out
in
mov
dec
cld
stc
repz
orl
repz
push
lahf
aas
jg
sahf
jg
dec
sbbb
push
out
or
repz
jns
sbb
sbbb
jg
cld
in
mov
lods
inc
jns
mov
daa
push
repz
lahf
addb
sub
lret
mov
hlt
jg
cld
stc
mov
jmp
lahf
pop
das
jp
jno
xor
push
lcall
and
rcll
mov
cld
stc
repz
fdivs
xor
iret
lahf
aas
jg
jo
cmc
jbe
mov
mov
out
mov
mov
aad
or
aas
jg
popa
les
push
pop
cwtl
adcl
in
out
idivl
cmpsl
sbb
or
xchg
push
std
pop
push
mov
xor
cwtl
pop
scas
out
fwait
aaa
imul
in
jo
pmaxub
fs
sti
inc
test
in
mov
loop
movsl
das
lock
mov
jo
dec
cmp
lcall
gs
dec
subb
pop
iret
add
xchg
fiaddl
outsl
jg
sarl
shl
jg
mov
repz
shll
pop
pop
inc
lds
aam
mov
nop
lea
jle
orl
repz
inc
dec
mov
leave
dec
test
jp
jmp
mov
mov
mov
test
inc
jae
inc
mov
dec
pop
xor
mull
mov
repz
aaa
push
add
xorb
xlat
mov
outsl
fdivp
add
psubw
enter
out
rcr
mov
and
cld
loope
popa
pop
jne
and
xor
sbb
iret
lahf
aas
cmp
dec
inc
es
adc
shrb
cld
stc
repz
rol
fisttps
test
pop
enter
aas
jg
dec
sbb
loop
cmp
jns
xchg
adcb
dec
adcb
shll
cmp
mov
mov
dec
mov
xchg
daa
orl
xor
fwait
aaa
outsl
hlt
rorl
sbbb
scas
adc
ds
jg
in
jmp
jp
fldlg2
adc
iret
mov
in
and
jae
sti
pop
sahf
icebp
mov
jg
cld
sub
push
aas
adc
and
mov
iret
lahf
jg
popa
in
imul
xchg
movsl
test
pop
js
sbb
fwait
ja
pop
int3
mov
hlt
mov
out
rcll
aas
es
out
cltd
push
mov
jle
xchg
inc
int3
pop
lahf
mov
idiv
sahf
outsl
cmpb
repnz
xlat
cwtl
out
fwait
aaa
aad
xchg
das
inc
sub
push
xor
lcall
in
cmp
jne
cmp
or
or
dec
mov
out
lahf
aas
inc
jecxz
js
jnp
push
bound
cmpsb
and
addb
mov
out
aaa
idivl
jle
mov
arpl
out
jp
inc
jb
stc
repz
adc
iret
pushf
jmp
mov
mov
cld
loop
push
inc
lds
dec
fisubs
inc
lods
cli
stc
repz
dec
sbb
rcrb
jg
aas
jg
cld
pop
cmc
adc
cmp
into
and
lahf
stos
push
sbb
pop
ficoms
sbbl
cld
stc
into
cmp
ret
pop
push
fadds
movsb
push
add
jl
cld
stc
repz
aas
movsb
push
inc
daa
mov
pop
push
lahf
jl
push
out
bound
adc
pop
shll
enter
cmp
fidivrs
push
fstps
fsubs
int
aaa
outsl
dec
push
mov
push
add
pop
xchg
inc
or
lahf
insb
fiadds
fwait
pusha
push
inc
rorb
into
pop
stc
repz
call
push
lret
mov
and
sub
or
cld
cld
aaa
xchg
dec
cli
mov
push
inc
pop
cmp
repz
iret
mov
dec
cmpsb
mov
pop
jl
sbb
mov
repz
cmp
xchg
jmp
jg
cld
stc
push
imul
mov
arpl
lahf
aas
rcrl
pop
xchg
and
sahf
movsb
jecxz
jmp
push
in
aaa
fisubs
lahf
pop
inc
cld
ss
in
and
ret
jle
pusha
frstor
inc
aas
imul
cs
mov
iret
aam
dec
push
rcll
lock
jb
and
int3
int
aaa
outsl
outsb
or
nop
push
cmp
mov
mov
sbb
out
jae
out
jg
mov
and
leave
lahf
mov
ljmp
push
mov
or
mov
hlt
pop
push
aam
cld
stc
repz
call
addb
fsubs
push
inc
jle
jns
data16
out
pop
aaa
mov
clc
dec
stos
aaa
outsl
fidivrs
and
addr16
jmp
out
fwait
and
and
and
xor
out
jne
push
and
jb
adc
ret
icebp
mov
movb
mov
or
popf
fisttpl
sarb
pop
fwait
aaa
outsl
ficoms
adc
xor
fcompl
arpl
and
das
mov
push
cld
in
ss
and
aaa
mov
dec
and
fwait
aaa
outsl
sbb
shlb
adc
nop
out
push
inc
cmc
subb
out
fwait
ja
hlt
imul
push
xchg
pop
fidivrs
outsb
sub
mov
push
xchg
fwait
aaa
outsl
cwtl
hlt
fwait
dec
inc
push
add
dec
test
add
sbb
or
cmpsb
push
dec
repz
mov
inc
sbbl
add
test
xor
aaa
lds
aaa
test
xor
adc
adc
fistps
sub
std
xchg
testb
inc
fnstcw
out
xchg
pusha
es
pop
fstl
xchg
push
xlat
lret
lahf
aas
jg
push
idiv
pop
addb
inc
cmpsb
pushf
sbb
cld
stc
repz
jecxz
call
leave
or
pop
cmp
test
jle
dec
insb
cmpsb
leave
test
int
aaa
out
lahf
mov
lds
setns
aas
mov
jmp
imul
shl
or
outsl
ficoms
hlt
mov
notl
sti
and
loopne
iret
mov
xchg
insl
dec
lock
sar
repz
lahf
adc
mov
movsbl
xor
test
xor
lahf
aas
jg
repz
mov
lock
add
sbb
loopne,pn
aaa
lahf
sub
fidivs
popf
out
out
mov
push
add
out
fwait
dec
stc
jmp
orb
pusha
sub
inc
jb
add
orl
sti
imulb
push
add
add
add
test
add
call
push
mov
out
adc
add
adc
mov
inc
rolb
rorl
push
pop
inc
xchg
icebp
je
dec
push
dec
add
add
test
xor
mov
cmp
pushw
add
jge
xchg
push
ss
jo
add
push
xchg
add
add
or
add
add
and
fs
roll
sbb
add
sub
add
push
or
sbb
push
push
mov
add
mov
push
test
into
pop
push
mov
and
add
ret
adc
test
xor
adc
popa
or
push
push
and
adc
jbe
sub
repnz
lock
or
sub
sub
jbe
lret
or
incb
arpl
push
pushf
xchg
sbb
popa
mov
add
cmp
sbb
add
pop
inc
fs
mov
out
or
inc
test
cli
les
or
push
rclb
test
subl
shrb
fdivr
push
dec
add
rorb
enter
pusha
aad
roll
inc
adc
mov
ljmp
mov
jb
xorb
push
push
inc
scas
or
leave
idivb
xor
or
adc
xor
sub
cli
mov
ljmp
aaa
or
sbb
mov
sar
add
arpl
sarb
or
shlb
add
push
dec
mulb
or
add
xor
lret
dec
or
inc
xlat
sub
mov
dec
adc
mov
pop
sbb
in
nop
mov
cli
notb
push
push
fdivrs
add
mov
inc
test
cwtl
push
push
mov
adc
xchg
add
or
cmovge
push
fistl
andb
mov
cmp
adc
adc
cmp
xor
outsl
push
inc
test
je
mov
add
ror
adc
rcll
add
incl
sub
cmp
cs
jo
inc
rorl
sbb
add
jle
lock
add
pop
push
or
cmp
cmpsb
mov
mov
imul
push
inc
sub
adc
ret
add
sbb
and
sbb
jb
push
jne
add
mov
mov
push
sbb
mov
aad
dec
xor
mov
jbe
adc
add
sbb
push
and
and
das
iret
stc
adc
fisubrl
outsb
or
inc
in
mov
sbb
pop
fs
cmp
adc
arpl
insl
sub
ljmp
or
push
cmp
pusha
leave
add
into
and
shlb
outsb
out
mov
clc
pop
xor
mov
push
data16
mov
add
adc
dec
leave
push
cmp
gs
inc
mov
push
into
mov
sbb
stos
cltd
les
sub
sub
movsl
das
adc
aam
pushf
or
push
lods
jecxz
stos
mov
dec
sub
adc
rcrb
sahf
es
pop
adc
mov
sbb
sub
mov
jl
addl
cmp
xlat
movsl
out
dec
out
or
les
push
mov
and
or
mov
test
pusha
pop
mov
divb
inc
adc
push
arpl
adc
adc
and
cmp
dec
and
aam
xchg
inc
add
xchg
test
rol
adc
add
out
pop
lock
insl
dec
das
mov
cmpsl
scas
or
cli
jae
jo
test
inc
add
jbe
rorl
ret
add
cmp
std
enter
cli
aaa
inc
add
mov
jnp
fs
or
mov
or
and
cmp
nop
btr
sbb
cld
xorl
testb
inc
repnz
push
rclb
jle
add
int
lds
and
push
jns
mov
jbe
and
pop
or
push
mov
out
add
inc
and
scas
add
fdivrl
push
jne
out
xor
sarl
adc
add
subb
sbb
jno,pn
int
mov
push
orl
mov
inc
push
int
fcomps
popa
and
sbb
pop
sub
xlat
lcall
idivb
gs
pop
mov
adc
fldcw
call
mov
xchg
add
sbb
es
cld
cli
and
call
ljmp
cmp
and
stc
or
push
mov
rolb
push
adc
or
test
add
and
pop
adc
dec
test
sbb
sarl
inc
push
ss
sti
inc
add
pop
adc
push
and
jge
inc
pop
ret
mov
repnz
dec
sbb
shlb
sub
mov
std
sub
adc
out
ljmp
bound
or
sub
adc
addl
adc
add
mov
fstpt
push
in
mov
or
sbb
mov
shrb
in
cmpsb
cmp
sbb
test
xchg
adc
or
inc
fildll
push
inc
push
inc
inc
inc
sub
inc
jae
cmp
ljmp
cmpsb
hlt
mov
lock
push
hlt
sub
cmovle
xchg
sub
xchg
shrb
bswap
shl
sbb
repz
xchg
jmp
aad
int
cs
cli
pmulhuw
push
or
out
or
cs
aad
inc
push
scas
mov
add
jecxz
ret
into
add
mov
loope
ss
add
pop
call
call
pop
or
adc
xchg
sbb
sbb
adc
fldl
in
shl
and
out
jge
cld
mov
jb
sub
push
add
std
sub
xor
jno
inc
out
push
sub
jp
cmp
andl
and
or
cmp
and
clc
adc
add
shll
adc
scas
cmc
cmp
jne
rcrb
or
mov
inc
dec
and
add
dec
inc
adc
outsb
ret
xchg
leave
ljmp
or
rolb
sqrtps
mov
stos
lock
pop
lods
mov
jg
jmp
sti
movsl
push
adc
mov
gs
xorb
cmp
lcall
sub
xchg
mov
cli
ret
les
inc
jb
into
inc
stos
jge
or
pusha
dec
loopne
adc
nop
outsb
mov
jno
add
inc
pusha
xchg
push
and
pop
add
lock
sub
call
cmp
hlt
lcall
sub
xchg
or
dec
inc
fs
jnp
sub
adc
sbb
xchg
push
cmpsl
movb
xor
shl
mov
adc
gs
pop
cwtl
jp
push
in
popa
cmp
adc
inc
add
sbb
cmp
xor
xor
repnz
mov
in
iret
or
inc
popa
mov
out
mov
sbb
push
frstor
add
push
adc
push
movl
add
and
or
pop
lock
xchg
or
rcr
data16
inc
mov
jle
or
jo
hlt
outsl
lock
shlb
sub
jmp
add
loop
adc
adc
mov
sbb
or
xor
icebp
add
dec
enter
lret
or
repnz
jge
and
push
push
test
popa
stc
pop
ds
xor
aam
clc
and
lods
adc
mov
mov
in
inc
mov
loopne
add
mov
scas
test
xchg
sbb
idiv
cmp
enter
test
orb
inc
push
icebp
add
push
mov
int3
inc
mov
sarb
sbb
xor
adc
ss
or
xchg
cmp
outsb
test
scas
pop
cmp
sbb
inc
push
ffree
sub
jmp
imul
movsl
or
insl
cmpsl
das
pushf
imul
ficomps
jp
mov
or
adc
jecxz
push
push
out
add
or
mov
sub
pop
pop
rcrl
add
int
xor
jno
adc
or
lods
sbb
dec
mov
mov
mov
inc
cmp
lock
sbb
insl
mov
in
mov
push
push
notl
sub
mov
hlt
mov
and
inc
enter
pop
fwait
cmp
out
cmc
sub
pop
adc
sbb
adc
loopne
pop
aas
or
mov
clc
or
scas
pop
jne
in
cmp
mov
adc
add
or
icebp
xor
inc
or
sbb
out
pop
push
dec
push
or
clc
jg
sub
cs
xchg
mov
add
mov
loop
mov
mov
test
push
std
or
push
rclb
stos
scas
pop
adc
inc
shlb
jno
bound
mov
pusha
call
sbb
xor
rcrb
shr
or
cmp
jle
push
push
out
fs
add
jl
and
inc
mov
inc
shr
sbb
mov
push
sbb
sub
out
xchg
adc
or
xor
inc
add
and
cmp
add
jae
jno
ret
pop
sbb
out
cmp
jae
in
test
mov
adc
jg
ljmp
add
gs
outsl
movb
adc
shrb
lods
mov
xchg
jo
inc
push
adc
dec
jle
push
xchg
aad
or
cmpsl
dec
adc
dec
adc
divl
lret
and
mov
lcall
popa
mov
ss
in
icebp
xchg
aas
call
inc
ret
xchg
xabort
or
stos
add
push
rorl
mov
scas
add
mov
adc
jmp
push
pop
cli
int3
sbb
ret
test
fimull
or
jge
add
jl
adc
xchg
xchg
mov
jnp
imul
push
fnstenv
insb
adc
shlb
sub
xchg
rorb
mov
push
adc
mov
sub
stos
dec
nop
sub
and
adc
push
pop
in
sub
push
in
orb
xchg
imul
adc
hlt
xchg
dec
push
pop
sub
repz
cmpsb
imul
pop
xor
jmp
add
dec
shlb
lret
mov
xor
mov
nop
mov
inc
mov
testl
sysexit
mov
xadd
xor
pop
test
add
pop
mov
ret
jmp
and
mov
push
shll
xlat
pop
lea
pop
shlb
adc
dec
xchg
dec
xorb
cld
dec
inc
xor
mov
xor
mov
leave
jbe
push
ret
in
or
xchg
xor
ds
and
dec
push
pop
adc
xorps
mov
mov
inc
das
adc
movsb
mov
jge
mov
cmpsb
and
mov
sahf
sar
into
lcall
pop
mov
ficoml
int3
or
or
mov
or
jl
or
daa
mov
ret
je
mov
test
push
sub
mov
inc
sbb
nop
cmp
or
jb
dec
out
insl
fstpl
sbb
mov
rcll
jo
xchg
add
mov
inc
test
fisttpl
push
movl
inc
lods
sbb
testl
push
xchg
leave
add
pop
pop
or
mov
sbb
adc
icebp
dec
jp
or
stos
clc
adc
mov
mov
mov
adc
icebp
fwait
shlb
mov
inc
stos
pushf
ret
adc
stos
lock
cli
sub
call
adc
adc
or
sahf
push
push
clc
sub
xor
sub
lock
or
mov
push
lahf
pop
or
ds
push
push
jge
add
mov
int
insb
popa
mov
in
cmp
fcoms
add
pop
dec
inc
mov
cmpsl
mov
adc
inc
loope
dec
push
insl
pop
int3
enter
or
and
xchg
andb
mov
leave
push
ret
add
mov
or
mov
add
sub
and
or
shr
fmuls
adc
push
and
popf
adc
inc
xor
pop
xor
or
testb
pop
in
jmp
add
ret
sbb
sub
or
test
mov
sub
adcl
mov
jo
mov
in
lods
mov
and
push
jnp
push
push
adc
inc
push
xchg
ret
pop
or
rorb
cmpsb
and
sarb
loope
push
or
sahf
inc
xor
dec
or
cmp
scas
inc
add
aam
repz
pop
inc
mov
or
leave
xor
outsb
adc
ret
pusha
or
cltd
xchg
cwtl
pop
pushf
loop
cmp
fadd
aad
inc
xchg
movsl
ljmp
dec
paddsb
cmp
mov
push
sbb
sub
pusha
jmp
rol
rcll
push
xchg
pop
adc
jmp
mov
ror
or
mov
or
iret
xchg
sbb
cltd
and
xchg
mov
test
sbbl
adc
and
push
fwait
arpl
push
cmp
mov
imul
cmp
mov
xor
subl
fmul
mov
loopne
outsb
jge
add
fcmovnbe
sbb
loopne
inc
xchg
mov
inc
fwait
mov
scas
mul
cwtl
jnp
rolb
add
rcr
test
xor
add
xchg
loopne
xchg
push
out
pushaw
das
mov
ljmp
shrb
enter
inc
add
add
push
xorb
pop
shrl
gs
lods
xor
insb
mov
sbb
and
call
add
sub
and
cmpsl
punpckhdq
popa
into
inc
adc
popa
mov
or
pop
add
addr16
sti
pop
sbb
dec
cmp
loop
push
push
and
cmpsb
les
lcall
fs
les
shlb
lcall
sbb
lret
sub
sbb
push
adc
stos
outsl
cld
in
sub
or
test
fldl
xor
dec
mov
jl
mov
or
stc
loop
cmp
pop
cmpxchg
xor
inc
test
push
cmp
add
test
jo
xchg
lock
jmp
mov
dec
call
dec
xor
popf
push
xchg
gs
sub
sub
and
test
or
pop
cmp
push
jge
push
add
inc
loope
push
dec
adc
push
lock
jmp
adc
inc
std
clc
rorb
mov
mov
push
test
xchg
dec
aad
add
imul
cltd
sbb
mov
mov
inc
jge
lds
int3
adc
sbb
pop
pop
sbb
adc
xchg
adc
pop
and
sbb
pop
movsb
fmull
pop
and
jg
push
out
push
add
push
pop
mov
loope
imul
jmp
xor
dec
pushf
pop
jp
mov
push
adc
dec
cwtl
inc
sbb
outsl
cmp
mov
mov
pusha
je
mov
push
clc
push
shlb
adc
pushf
sub
pop
orl
cmp
lods
dec
sub
add
push
jae
adc
jp
add
mov
es
nop
and
xchg
mov
xchg
mov
push
push
pusha
lret
push
das
bound
sarb
je
jecxz
in
mov
jge
sbb
cmp
repnz
pop
clc
jb
jo
gs
cmp
scas
xchg
or
xchg
fiaddl
stos
inc
xchg
or
mov
lea
jo
sbb
xorl
push
adc
push
pop
mov
or
adc
loopne
inc
fisttpl
sub
movb
addr16
xchg
adc
push
xor
mov
mov
push
lock
add
pop
lods
add
mov
add
outsl
icebp
call
and
mov
cli
scas
xor
or
cmp
adc
xchg
dec
pop
test
jmp
aad
adc
xor
insl
cmpb
shrl
adc
rorl
nop
mov
lcall
push
mov
pop
mov
push
add
pop
sub
shll
mov
mov
xchg
cli
enter
sub
imul
ljmp
call
xor
sbb
in
add
sbb
adc
mov
sbb
rclb
inc
xor
lcall
pop
pop
aad
leave
pop
les
or
sub
mov
sub
or
adc
push
js
sbb
clc
sub
xlat
or
mov
fcoms
push
jo
jno
adc
jecxz
push
xor
mov
adc
adc
xor
inc
call
jae
clc
add
add
rorb
add
inc
daa
push
mov
rclb
pop
push
cmp
adc
loop
test
lock
adc
rol
inc
mov
push
jo
fsts
dec
adcb
pop
xor
orl
rorl
and
cmc
outsl
cmpl
test
mov
popa
and
testb
shrb
push
pop
fnstsw
shlb
xor
push
adcb
stos
mov
sbb
sbb
adc
call
or
pop
outsl
cs
test
popa
or
sbb
push
inc
adcl
vsubps
fcmovb
push
push
push
add
pop
js
and
dec
cmp
jl
orl
lret
pushf
add
in
and
rorb
pop
inc
rolb
adc
call
pushf
test
pop
inc
fldl
mov
les
dec
lods
ret
pop
cmp
icebp
push
rorl
add
add
pmaddwd
pop
xchg
xor
shlb
movsl
mov
jb
lds
lret
in
xlat
xchg
push
fwait
mov
pop
adc
cwtl
or
call
sub
arpl
test
icebp
cs
bound
adc
mov
in
pop
cltd
adc
mov
ss
sub
ror
cltd
push
cwtl
jo
cs
arpl
push
cmp
test
adc
push
inc
inc
scas
clc
stos
push
jae
mov
xchg
aam
psrlw
mov
popa
or
add
aam
addl
add
mov
add
into
sbb
pop
dec
invd
clc
es
push
bound
dec
push
mov
and
adc
add
sahf
addr16
and
mov
test
outsl
or
shrl
outsb
rcrb
mov
dec
rcrb
adc
push
pushf
pop
mov
xor
andl
add
in
stos
clc
lcall
out
rorl
popa
sub
or
xchg
rclb
mov
test
inc
test
loopne
into
inc
and
or
and
push
push
ret
pop
in
pop
cli
xor
sbb
out
int3
ret
adc
inc
add
movsb
fwait
cwtl
inc
mov
add
icebp
ret
mov
jmp
push
sbb
xor
and
lcall
sbbl
mov
xor
rolb
mov
loopne
adc
mov
popf
adc
cwtl
frndint
adc
roll
call
cmpsb
aaa
dec
orb
xchg
sub
and
jne
jno
sbb
icebp
out
sarb
rol
pop
push
rclb
nop
cmp
inc
jo
addb
pop
adc
adc
cmp
push
mov
mov
pop
or
adc
push
mov
iret
pop
and
lock
fdivl
add
popf
sbb
mov
ljmp
rcrl
mov
js
pop
or
or
addb
lret
cmc
std
dec
mov
lods
aas
adc
cmpsl
mov
pop
rcll
daa
jno
lret
cltd
push
add
or
test
imul
add
sub
rclb
pop
cwtl
push
aad
xor
mov
leave
icebp
inc
or
inc
inc
xchg
sbb
inc
pop
fisttpll
les
mov
or
sahf
sbb
dec
jo
pop
or
mov
popf
sub
xor
push
shll
jge
add
pop
adc
pop
sub
jmp
jge
cmp
and
add
push
inc
push
inc
or
stos
cmpsl
and
out
iret
mov
orb
dec
mov
std
cwtl
adc
add
inc
lods
ret
leavew
xor
add
or
or
cmp
inc
jnp
adc
fisubs
movsb
mov
inc
mov
mov
cmp
lret
push
cmp
xchg
add
inc
jae
sahf
or
add
and
fmulp
xchg
sbb
call
push
xchg
add
popf
adc
jnp
mov
mov
add
subl
xor
push
and
sub
pop
and
cmp
mov
pop
sbb
dec
ljmp
orb
jb
hlt
mov
sub
adc
call
jb
add
sbb
ljmp
adc
pop
add
xchg
sbb
xlat
sbb
adc
sbb
imul
fwait
sbb
inc
sub
xchg
mov
add
mov
jno
or
js
stos
xchg
mov
cmp
dec
jg
pop
ror
lret
mov
jo
jo
insb
jl
mov
sub
mov
mov
mov
and
ja
inc
add
test
shrl
lcall
ljmp
mov
dec
clc
push
cmpsl
sub
mov
inc
mov
stos
xlat
lret
push
and
movsl
mov
mov
dec
stos
or
mov
xor
scas
sbb
and
sub
scas
xchg
jecxz
test
loop
xor
mov
dec
orl
cmp
inc
fmul
and
test
pop
push
icebp
stos
inc
inc
in
push
addb
push
nop
mov
shrl
mov
adcl
jg
sbbb
xor
punpcklwd
shrb
xchg
out
mov
inc
adc
out
sbb
shll
inc
andl
and
out
scas
insl
jecxz
sbb
cmp
std
push
rclb
aam
push
mov
loop
mov
cmp
sbb
clc
mov
pop
icebp
push
adc
mov
cmp
pop
icebp
or
cmpsl
jno
xor
icebp
mov
push
push
pop
and
mov
push
dec
sbb
pop
aam
push
xor
dec
movsl
jo
sbb
adc
sti
arpl
add
mov
mov
addl
or
inc
repnz
adc
pusha
inc
push
sub
lock
dec
inc
cmp
sub
int3
mov
jae
inc
mov
popf
dec
insl
sbb
or
nop
or
mov
adc
jo
sti
movsb
sbb
push
dec
negb
add
das
pop
loope
leave
push
xchg
add
scas
cmp
cli
sbb
stos
sub
add
dec
xor
xor
je
mov
popa
mov
and
mov
imul
pop
adc
push
stc
jge
mov
mov
pop
es
arpl
leave
cs
pop
sbb
sub
loop
add
fcompl
jnp
xor
or
mov
sub
sub
pop
mov
jecxz
cmp
mov
dec
push
enter
nop
dec
jl
or
push
bound
add
add
mov
or
dec
data16
sub
and
bound
add
call
jae
loope
pop
xor
cltd
dec
iret
inc
pop
aad
jo
mov
sbb
cmp
mov
dec
and
xor
mov
into
test
mov
and
xchg
sbb
mov
ret
cmp
push
inc
adc
sbb
pop
sub
mov
int
mov
push
and
mov
dec
sarb
inc
jnp
leave
inc
cmp
xor
insb
cmp
mov
ljmp
and
call
imul
mov
test
xlat
sbb
pop
or
aam
sbb
pop
xchg
repnz
andl
mov
mov
les
rcrb
pop
pop
and
push
dec
fsts
add
call
insl
lods
ret
push
lea
les
mov
sbb
mov
jmp
movsb
pop
or
loopne
je
ror
out
ret
jge
or
sub
adc
mov
mov
mov
loope
inc
in
js
aad
pusha
mov
mov
mov
dec
push
or
or
in
pop
and
mov
scas
and
repnz
in
push
or
xor
xlat
push
mov
jmp
test
and
cmp
or
pop
sbb
mov
push
push
jge
inc
lcall
sub
and
sbb
mov
sub
push
das
lahf
dec
cli
add
cmpsb
bound
mov
add
iret
push
sbb
xor
push
or
or
push
pop
insb
push
push
cmp
test
pop
aam
jg
jecxz
addl
sbb
enter
push
mov
mov
rcrl
or
icebp
jp
mov
add
cmc
push
mov
push
or
and
stos
or
xor
out
xchg
push
jns
xchg
jne
movsb
dec
lock
lods
add
cmp
test
jns
push
mov
jb
shll
shlb
pushf
mov
fcomps
adc
rol
xlat
movsb
pop
cmpsl
sti
mov
aad
cmp
add
lret
push
and
les
insl
mov
fsubl
loopne
test
jnp
mov
mov
sbb
cmp
fs
sbbb
xchg
aam
aad
dec
mov
aam
pop
les
adc
push
aaa
mov
fnstenv
add
scas
jne
push
sbb
lret
lahf
and
cmp
mov
rolb
pop
or
inc
xchg
sbb
add
push
mov
jae
add
sub
mov
jns
shll
push
mov
sub
push
fadds
loop
test
mov
adc
fscale
imul
and
push
sbb
adc
jmp
jp
inc
iret
inc
aaa
rcrl
out
mov
add
mov
scas
ja
push
xlat
add
into
inc
push
sub
pop
lods
pushf
int3
sar
arpl
inc
adcb
or
cmp
movsb
add
lock
adcl
and
mov
rcl
pop
inc
mov
jle
ret
or
dec
jnp
xchg
adc
shrb
xlat
xor
sub
inc
adc
sub
es
and
mov
dec
sub
mov
jp
mov
xor
or
lret
fcoms
dec
loopne
sbb
xorb
add
mov
daa
push
mov
pop
cmp
cmpb
ss
or
out
jecxz
pop
test
add
mov
les
rorb
pop
sub
mov
lret
cmp
push
inc
cmpb
rorl
sahf
clc
sbb
mov
add
lods
mov
orl
jnp
dec
xchg
hlt
test
andb
adc
add
dec
mov
sbb
repnz
inc
shll
mov
aam
and
dec
aaa
and
inc
out
orl
inc
sub
ss
mov
ljmp
mov
dec
inc
mov
cmp
cs
jle
mov
inc
cmp
mov
add
adc
jno
cmp
push
cli
xor
push
add
sbb
xchg
sti
and
rcl
mov
xchg
fstl
adc
adc
mov
adc
sbb
xor
push
scas
js
mov
pop
add
sub
inc
inc
adc
sub
push
dec
ret
sub
add
fdivr
sbb
out
nop
sub
add
sub
test
inc
mov
loope
adc
int3
scas
add
test
push
leave
imul
orl
xor
sub
add
lock
push
mov
cld
stos
pop
sub
js
imul
add
xor
or
mov
or
adc
and
outsl
pop
adc
sbb
add
inc
out
lret
adc
inc
mov
dec
add
sub
int
bswap
out
xor
int
ljmp
sub
add
es
dec
mov
push
add
ret
xchg
notb
adc
or
cmp
rolb
cs
push
mov
bound
pop
mov
rolb
bound
frstor
loope,pn
lea
jmp
loope,pn
aam
sub
jnp
stos
xor
icebp
mov
sub
sbb
dec
lea
shl
popa
sbbl
jo
sbbb
push
call
movsl
addr16
rolb
mov
mov
cmp
pop
js
insb
idivb
dec
pop
and
add
cwtl
cmp
dec
into
jp
mov
addb
jo
adc
pushf
stc
or
test
mov
push
adc
stc
sbb
es
out
pop
inc
inc
js
mov
adc
rolb
rolb
mov
cwtl
cmp
add
sti
inc
xchg
sub
mov
sbb
filds
lcall
or
enter
cli
pop
stc
or
lods
sar
in
add
xor
sbb
xlat
add
xchg
addl
rcll
or
cmpsl
movl
ret
es
repnz
mov
inc
xor
inc
xchg
flds
push
scas
push
cltd
mov
dec
mov
jge
xchg
jns
cmp
je
in
adc
xor
cmpsb
mov
and
mov
subb
cmp
pop
cs
aam
popa
loope
adc
bound
adc
gs
and
rorb
mov
push
out
cmpsl
and
xchg
and
xchg
rcll
or
inc
movsb
pop
push
inc
fisubrl
push
inc
mov
enter
pop
cmp
pop
sbb
push
add
xor
add
test
popa
pop
int3
push
aad
aam
fcmovne
push
add
popa
and
jb
sbb
and
sbb
lock
adc
ret
jmp
mov
xor
mov
inc
push
subb
mov
jbe
pop
notl
cltd
in
or
cmpl
inc
push
icebp
jmp
mov
sbb
aam
shrb
push
push
and
sti
add
pushf
adc
mov
push
ficomps
aaa
in
sbb
jl
adc
cmp
xor
xchg
or
add
add
xchg
or
dec
cli
push
push
loopne
jg
hlt
and
inc
aas
mov
sub
add
addr16
lea
mov
adc
mov
push
call
les
aam
and
test
add
into
rcrb
adc
leave
xor
jb
loop
pop
adc
hlt
push
add
xchg
jns
or
adc
push
popa
loop
add
and
or
jo
inc
push
adc
fstpl
add
dec
xchg
into
push
mov
mov
push
mov
xchg
sbb
mov
arpl
leave
rorb
sbb
adc
sbb
loop
inc
push
test
pop
mov
aas
cli
or
ljmp
add
ret
jl
push
fisubs
and
lods
or
cli
shrl
rorb
mov
mov
in
dec
inc
sahf
xchg
mov
cmp
pop
xchg
ss
jmp
push
mov
push
add
and
pop
xchg
adc
dec
push
inc
mov
add
shll
mov
icebp
xor
xchg
push
adc
lock
push
push
clc
bound
aam
ret
xchg
sahf
lret
bound
pop
xlat
and
dec
rcrl
or
or
and
in
stos
cmp
mov
add
sub
push
jp
jg
or
cli
or
mov
pop
int
inc
xchg
xor
sub
or
mov
movsl
aad
lcall
call
xchg
push
adc
aam
ficoms
pop
adc
sub
inc
addr16
add
xchg
cmp
fcompl
add
ja
xchg
cmp
add
inc
mov
or
and
scas
loop
sbbl
dec
pop
xor
lock
int3
push
mov
test
xchg
jecxz
ret
adc
je
push
lcall
fwait
lds
pushl
or
mov
xchg
test
xor
adc
adc
daa
add
lcall
push
cmpsb
pop
int3
inc
outsl
outsl
pop
xor
add
mov
push
and
jmp
js
push
inc
andb
shlb
scas
or
inc
jg
lock
cltd
or
add
adc
add
cltd
sbb
es
rcrb
pop
shl
out
test
xchg
sub
jmp
jmp
nop
push
mov
add
pushf
mov
inc
push
add
pop
in
ljmp
pop
mov
push
dec
and
enter
jb
lcall
xor
rcr
test
cmp
xchg
push
add
addb
or
pushf
orb
inc
shrl
div
out
mov
lcall
repnz
push
fisubl
es
and
es
ret
or
cld
adc
jns
add
data16
sbb
insl
push
xchg
sahf
aam
sbb
cli
sbb
fsubl
jo
xor
sbb
adc
roll
aaa
dec
sub
rclb
inc
and
pop
adc
pop
and
or
inc
dec
mov
and
ret
adc
ret
ds
push
xorl
dec
sub
add
mov
sub
add
jbe
jp
mov
and
orb
cmp
punpcklwd
and
repnz
xchg
lods
xor
push
rolb
xchg
mov
push
inc
xor
mov
or
insb
or
push
mov
jg
pop
xchg
mov
pushf
ret
and
cwtl
daa
jnp
loopne
pop
add
les
scas
sbb
mov
and
das
jne
stos
dec
scas
or
mov
out
into
inc
sub
adc
cs
xchg
inc
add
lock
xchg
in
dec
and
add
jb
jmp
sbb
xor
enter
mov
jae
outsl
ret
cmp
push
mov
movsl
sbb
or
adc
mov
add
loop
inc
xchg
or
add
and
sahf
add
push
pop
les
adc
mov
adc
mov
addb
jnp
pop
cmpsl
pusha
push
inc
aam
xchg
and
stos
and
loop
lock
sbb
leave
push
rclb
bound
inc
xchg
cmp
sub
add
adc
pop
lret
in
in
mov
add
aad
and
aaa
or
das
nop
pop
xchg
mov
inc
into
ljmp
cmpsb
rolb
ret
loopne
add
xchg
add
sbb
jb
and
rolb
popa
shl
leave
push
nop
inc
jne
cli
fwait
cli
push
jbe
ret
test
pop
mov
push
insl
pop
movsl
push
mov
imul
jae
jle
cli
push
loope
jo
mov
roll
inc
jbe
in
je
jle
xchg
ret
adc
enter
daa
xor
testl
xchg
and
push
call
shl
jl
xchg
cmp
cmp
add
out
jecxz
dec
mov
ss
add
push
sete
std
pop
out
mov
dec
mov
neg
mov
loop
pop
add
mov
add
aaa
lret
js
sub
pop
sbb
in
xchg
sbb
or
sub
lock
add
insl
in
adc
push
nop
leave
cmp
adc
jo
sbb
xchg
mov
cli
cmpsl
sbb
adc
divl
js
movsl
fidivs
mov
cmpsl
inc
add
dec
jmp
out
std
fildl
xlat
outsb
shrb
inc
test
inc
std
mov
sbb
daa
je
fimull
mov
ret
popf
movsl
addb
pop
sbb
push
pop
stc
subl
push
inc
push
jmp
je
sbb
inc
cmpsb
ret
ret
jb,pn
mov
jmp
push
or
xchg
or
adc
orl
push
add
es
mov
jl
pop
pop
imul
sub
sbb
jae
add
sti
rolb
shrb
mov
cmp
cmc
gs
stos
int
add
lods
xor
dec
sbb
pop
sbb
push
mov
add
rorb
adc
ljmp
lods
adc
mov
dec
push
inc
mov
test
test
adc
adc
mov
call
mov
pop
pop
sub
test
lock
andb
sahf
jbe
test
rclb
push
or
loope
push
xor
adcl
sti
out
inc
adc
rcrb
movsb
mov
ja
mov
dec
test
mov
pop
adc
sarb
adc
in
rorl
or
mov
roll
add
call
cmc
xchg
sub
or
stos
push
popa
fsubs
rorb
sbb
push
scas
adc
mov
or
sbb
push
push
push
ret
rolb
jle
pop
imul
adc
rcl
dec
sbb
or
mov
loope
pushf
push
nop
sbb
loop
test
push
push
mov
mov
lods
xlat
mov
sbb
lret
mov
jne
sahf
push
movsl
pusha
adc
ljmpw
push
ljmp
test
mov
or
jmp
test
std
or
inc
sub
scas
mov
adc
adc
icebp
test
add
bound
jne
fisttpl
sarb
in
stos
shll
dec
mov
mov
pop
sbbl
and
sbb
in
pop
ja
and
or
adc
inc
adc
mov
xor
mov
or
fisubl
dec
push
push
cmp
xchg
imul
pop
pop
pop
push
adc
call
pop
test
sbb
ret
in
test
push
rorb
ss
push
inc
loope
leave
mov
dec
imul
adc
push
pop
sub
and
adc
inc
push
push
push
cld
cmp
mov
int3
cmc
mov
or
test
push
push
add
adc
cltd
add
pusha
xlat
repnz
stos
and
cmp
add
push
mov
add
jae
lock
cmpsl
and
in
adc
push
loopne
inc
loopne
shll
adc
test
popf
mov
or
sbb
dec
push
popa
xor
bound
into
jl
xor
sub
jne
cmp
push
dec
call
sub
andb
sub
daa
ljmp
adc
xchg
fadds
dec
mov
or
mov
cmp
dec
pushf
add
lock
inc
mov
adc
dec
dec
lods
add
and
test
fisttpl
test
insl
or
dec
xor
push
jle
sub
mov
dec
inc
gs
push
pop
xor
add
push
adc
pop
sbb
push
inc
inc
stos
inc
add
jb
push
popl
test
loope
cmp
mov
adc
mov
or
rolb
cmp
arpl
mov
jb
pop
cmp
arpl
jno
xchg
add
loopne
notb
test
fsubrs
dec
sbb
cmp
adc
enter
into
inc
mov
and
sbb
aam
add
adc
or
or
roll
and
sbbb
xlat
dec
popa
jge
pop
sbb
push
outsb
push
mov
jns
loopne
mov
pop
lods
in
lods
cmp
loopne
mov
into
loopne
add
inc
xchg
scas
repnz
cmpl
add
imul
add
add
lock
cmp
out
cwtl
pop
add
cmp
or
add
adc
sub
push
jmp
add
mov
rcrl
lock
and
inc
push
xchg
sub
in
jo
or
arpl
jmp
imul
add
sbb
lods
bound
or
roll
mov
scas
call
add
add
lret
mov
pusha
xchg
push
inc
rolb
adc
inc
sbb
and
dec
push
or
lahf
adc
xor
in
push
dec
in
aam
out
add
mov
and
xchg
add
pusha
jns
rorl
push
xor
unpckhps
loope
mov
push
adc
pop
rolb
ret
aam
outsb
cmpsb
xor
adc
sub
mov
inc
adc
popf
dec
les
xor
shlb
inc
test
add
add
bound
mov
lea
cmovo
test
sub
mov
xor
test
xchg
stos
cmpsb
and
push
dec
pop
scas
push
add
hlt
ret
dec
rolb
add
push
loope
add
add
add
and
pop
xchg
bound
push
add
dec
scas
push
push
rorl
and
movsb
cmp
dec
push
cmp
loop
push
lcall
mov
icebp
or
add
add
rcll
cmp
stos
adc
mov
xchg
adc
mov
into
inc
ljmp
lods
popa
and
mov
mov
dec
xchg
lods
dec
mov
add
sahf
dec
pop
inc
push
movl
imul
fsts
add
test
shlb
pop
sbb
xor
ljmp
js
pop
push
pusha
enter
or
test
push
jbe
adcb
adc
lret
adc
add
jbe
mov
pop
loopw
mov
addl
jb
xor
pop
pop
cmp
pop
sub
push
stc
dec
into
push
rcl
mov
xor
and
aaa
push
inc
test
fdivrs
mov
lcall
add
adc
test
or
push
andl
push
pop
jmp
sti
test
or
and
add
in
daa
pop
cmp
cmpsl
lret
movb
stos
sbb
addl
scas
adc
dec
push
add
mov
adc
popf
cmp
xchg
inc
jmp
cltd
adc
nop
stos
inc
rcll
pop
cmp
sbb
je
inc
es
roll
push
loop
xchg
sbb
in
pop
xchg
pop
push
sub
and
pop
clc
cmpl
jle
decl
lret
test
xlat
or
insb
les
bound
jo,pn
cmpsl
das
adc
out
push
imul
in
jmp
mov
shlb
stos
mov
mov
insl
test
adc
test
sar
ss
stos
inc
xchg
into
sbb
jnp
pop
jnp
ficompl
or
jmp
mov
push
cmp
push
stos
adc
or
sbb
ud0
ljmp
and
mov
ret
mov
shrl
scas
inc
pop
sbb
fcmovnbe
inc
dec
inc
mov
xchg
adc
or
or
sbb
rcll
mov
test
jo
pop
add
push
inc
aad
push
js
mov
inc
lret
sub
xchg
scas
adc
lds
sub
mov
cs
or
hlt
sarl
cmp
add
stos
and
push
adc
outsb
in
push
sub
rcr
cmp
jg
inc
xor
lea
push
das
orb
ret
adc
orb
leave
ret
cmp
dec
mov
pop
xchg
inc
popa
aaa
mov
inc
mov
sub
jae
fdivrs
ds
decb
dec
and
mov
rolb
add
mov
mov
xor
inc
scas
jo
mov
pop
rclb
movsl
xchg
xlat
or
mov
into
pop
inc
dec
daa
addb
orb
repnz
std
cmc
adc
or
movsb
push
and
mov
or
xor
outsl
sub
mov
mov
push
ljmp
ljmp
ficompl
add
xchg
lock
inc
mov
sbb
push
inc
inc
dec
or
mov
pop
inc
adc
mov
icebp
or
pop
mov
ss
enter
mov
lret
stos
pop
push
roll
je
or
mov
cwtl
ljmp
inc
adc
scas
or
sub
leave
test
sub
add
add
mov
sub
testb
adcb
mov
stos
test
adc
sbb
jnp
sbbl
and
andl
add
pop
mov
bound
lds
xchg
mov
push
push
mov
jmp
aad
or
loope
shl
pop
pop
stc
or
sbb
sbb
in
jg
push
pop
xor
ret
pop
cmp
and
jmp
in
jo
rclb
pop
mov
bound
adc
and
jle
scas
dec
ljmp
mov
filds
mov
clc
aaa
roll
sbb
push
popf
mov
xchg
jg
addb
adc
gs
scas
adc
sbb
add
mov
lret
mov
rorl
lea
push
popa
addb
inc
inc
imul
movsb
add
push
xchg
adc
pop
jge
mov
inc
mov
shlb
test
jbe
inc
into
inc
enter
mov
sbb
lods
shl
inc
imul
push
sbb
jns
or
inc
rcrb
pop
cmp
or
or
call
test
imul
mov
jp
js
push
adc
add
shll
cmp
enter
test
inc
cmpsl
xorb
outsl
mov
add
scas
ss
sbb
orl
cmp
adcl
enter
xor
icebp
dec
fiaddl
sbb
testb
mov
cmp
mov
clc
aaa
mov
add
out
push
out
orb
sbb
add
sbb
pusha
cmp
daa
xchg
cmc
mov
add
add
sti
popf
adcl
inc
inc
mov
push
jge
sbb
add
mov
int
push
mov
cmp
push
nop
or
mov
mov
push
out
lock
mov
pop
daa
mov
add
ret
add
jmp
pop
and
jne
cwtl
andb
adc
sbbb
adc
repz
inc
in
mov
inc
cmpl
loope
inc
add
lds
cmp
adc
dec
prefetchnta
xor
adc
loopne
add
das
mov
add
in
push
add
jb
add
out
push
add
pop
push
pop
hlt
orb
cmpsl
mulb
into
push
andl
adc
lret
nop
sub
mov
cmp
add
sub
xor
test
bound
and
mov
adc
sbb
mov
mov
or
lock
xor
or
pop
ljmp
popa
xchg
push
es
inc
aam
push
xlat
aas
and
adc
push
add
add
adc
mov
xchg
fmull
into
mov
roll
dec
mov
dec
sti
push
push
push
adc
cmpsl
out
dec
rorb
push
icebp
sub
mov
cli
lock
cmpsb
or
je
mov
call
stc
push
adc
push
arpl
adc
and
sub
loop
xor
sbb
shll
ficoms
add
fisubs
mov
sbb
adc
rcrl
hlt
and
aad
pusha
and
lds
add
push
or
outsb
mov
inc
inc
scas
fsubrs
push
stos
mov
sub
andl
jb
sbb
loopne
push
movsb
lcall
ja
rclb
dec
int3
leave
jecxz
femms
ret
shl
mov
push
jne
out
or
in
ror
or
outsl
cmovbe
adc
mov
cmpsb
jge
push
pop
vmovsldup
rclb
pusha
mov
jne
sub
sbb
and
lahf
or
dec
aas
inc
icebp
lods
or
loopne
sbb
dec
adc
pop
jnp
or
mov
loope
inc
sbbl
gs
arpl
add
add
scas
mov
mov
out
inc
ret
pop
pusha
call
gs
mov
sbb
sbb
popf
sub
adc
cmp
sbb
push
inc
mov
push
push
dec
dec
mov
push
cli
or
xchg
mov
test
test
in
dec
jne
mov
mov
sub
inc
add
inc
jbe
xlat
loopne
adc
add
or
mov
and
mov
cmp
rcll
ret
push
jno
lret
stos
sahf
mov
std
shl
ljmp
push
mov
push
cli
push
xor
scas
inc
cmp
add
inc
das
mov
scas
or
xor
push
fsubr
add
mov
mov
cmp
push
into
hlt
enter
out
fmuls
add
lds
add
add
mov
stos
inc
mov
jg
mov
mov
rclb
push
pop
mov
xchg
cwtl
and
jb
add
dec
cmpsb
inc
pusha
cmp
and
mov
inc
cmpsb
loop
outsb
test
mov
paddb
push
cwtl
sbb
jb
js
popa
pop
out
lcall
addr16
arpl
and
mov
push
push
mov
cmc
adc
jp
or
jne
add
rorb
enter
inc
pop
dec
add
or
or
cmp
push
push
sbb
pop
popa
mov
sbbl
inc
jae
cmpb
or
push
and
mov
inc
pop
inc
pop
fmul
ja
xchg
xchg
cwtl
aam
repnz
mov
adc
lds
sub
mov
popf
jo
adc
shl
filds
xchg
test
ljmp
sbb
jne
and
push
jb
push
sbb
js
popl
sub
push
add
cli
jp
push
push
mov
sbb
or
push
add
jo
or
das
cmpsl
or
mov
adc
scas
adc
adc
dec
push
add
cli
mov
pop
lcall
stos
repnz
sbb
cltd
add
inc
sbb
push
mov
add
clc
out
or
mov
dec
or
in
or
in
out
jbe
ret
mov
jb
lock
pop
andl
pop
and
and
or
mov
pusha
int
mov
rcrl
loopew
push
icebp
adc
or
or
rol
xchg
mov
push
shrl
xor
jo
push
bound
adc
sbb
dec
in
arpl
mov
and
pop
loope
push
fcoms
push
sub
adc
cwtl
notl
loope
nop
call
gs
aam
or
mov
xor
or
or
aad
adc
ret
cmp
pop
inc
scas
shrb
pop
jl
xor
pop
imulb
xorl
leave
jae
es
in
cld
mov
inc
push
mov
push
push
mov
call
sbb
sbb
rorb
pushf
movsb
and
out
mov
in
sub
xor
loopne
push
adc
pop
test
jne
roll
fs
inc
aad
hlt
adc
xor
mov
mov
in
or
cmp
cmp
femms
push
inc
fstpt
orb
add
or
sub
add
jle
lea
push
sub
or
negb
testb
je
mov
aam
add
pop
sbb
and
mov
and
push
ret
mov
inc
in
mov
jle
aaa
popa
or
adc
xor
ret
mov
jne
mov
fdivrp
push
dec
cmpl
or
and
mov
or
push
inc
das
and
lahf
insb
or
inc
and
mov
aad
je
jb
jle
stc
mov
add
add
ret
push
divb
addl
pop
adc
mov
sub
pop
cmp
jne
adc
mov
sub
and
jl
stc
out
incb
push
mov
mov
enter
les
mov
ss
mov
or
push
lea
sbb
ss
push
in
pop
cltd
sbb
stc
pop
in
jmp
mov
pop
je
or
int3
notb
fwait
repnz
test
fldcw
mov
enter
mov
add
push
jo
push
sbb
pop
nop
pushl
or
or
xchg
subb
in
insl
pop
or
pop
or
jne
outsb
pop
mov
andl
pop
jmp
daa
loop
test
das
insb
dec
push
int
mov
mov
mov
ret
mov
mov
push
lods
int3
xchg
push
cmc
jge
lea
movsb
add
fldl
and
incl
fistpll
sarl
pop
negl
sub
pop
movsb
or
inc
pop
orl
jnp
pop
cmp
cmp
lahf
test
cmp
lea
stc
cmp
push
cmp
jns
mov
rcrl
jg
jge
js
pop
jmp
call
mov
or
jl
idiv
jmp
addr16
pop
leave
mov
lods
inc
sbb
push
popa
cmp
push
pop
mov
adc
mov
xor
xlat
mov
or
fmuls
dec
jmp
call
sti
jmp
push
cmp
jne
mov
inc
pop
je
test
sti
sbb
mov
das
adc
inc
jmp
cmpb
scas
mov
or
jbe
inc
or
ja
xor
fisubrs
mov
push
push
xor
cmp
mov
pop
pop
mov
std
loope
cmp
je
cmp
je
inc
out
sbb
pop
lea
out
cmc
lea
add
xrelease
ljmp
xlat
lods
sbb
std
cmp
cmp
mov
mov
pop
inc
cmpb
and
cmp
mov
xchg
sub
pushl
js
pop
bound
add
aaa
jne
pop
incl
call
push
add
xchg
pop
xchg
mov
mov
imul
mov
mov
dec
mov
mov
push
add
push
mov
ficoms
lahf
pop
mov
xchg
fdivs
fmuls
mov
fwait
das
daa
and
push
push
xor
cld
daa
adc
pop
movsb
pushf
hlt
movsl
insl
jae
mov
sbb
es
jge
lods
add
jne
jecxz
or
add
dec
sbb
aaa
add
mov
lock
adc
fwait
inc
mov
inc
cmp
sub
outsl
das
shl
addb
add
xor
mov
arpl
adc
aad
into
or
mov
sti
add
add
sbb
inc
push
add
add
inc
sbbl
mov
inc
mov
and
or
jne
jne
dec
insl
das
sbb
jmp
add
jge
sub
loopne
sub
ror
icebp
pop
enter
adc
add
sti
mov
imul
test
pop
jne
inc
inc
jmp
xchg
das
fsubrl
sub
ret
add
or
push
jecxz
jmp
andl
sete
mov
mov
jmp
rorl
xchg
push
inc
mov
push
pop
inc
mov
outsl
mov
andb
mov
pop
push
aas
je
minps
sbb
loope
or
push
pop
sbb
inc
fdivs
add
or
inc
xor
push
or
and
mov
pop
sti
pop
ret
dec
inc
mov
push
mov
mov
sbb
add
or
aad
repz
jnp
aam
lea
ds
pop
inc
inc
cmp
pop
pusha
addr16
int3
ljmp
sbb
insl
inc
or
mov
mov
cmp
jae
cmp
cwtl
mov
push
leave
das
mov
inc
cmp
clc
mov
pop
add
aad
xor
xor
xor
mov
adc
push
push
shll
lea
or
daa
pop
loop
ret
mov
inc
cmp
out
add
test
ficoml
or
jnp
add
sub
sbb
push
into
stos
sti
jmp
lea
lds
push
cmp
mov
jmp
pop
pop
dec
in
pop
cltd
sub
cmp
imul
lock
cli
pop
pop
loopne
loopne
lea
outsb
ret
jae
outsl
add
andl
mov
add
and
pop
jmp
sbb
mov
sar
dec
cmp
in
or
cmp
xchg
xchg
mov
add
push
clc
jl
xchg
jne
daa
pop
addr16
mov
lods
flds
push
cmp
xorl
subb
andb
inc
mov
bound
adc
and
roll
test
jl
jmp
or
rolb
lcall
dec
xor
or
test
lcall
push
mov
pop
mov
fidivl
or
shll
ja
pop
mov
mov
mov
inc
add
cmp
cmp
jl
pusha
pop
and
cmpl
push
sub
dec
ss
das
enter
sti
push
pop
jmp
ret
dec
neg
sbb
cmc
or
jge
cmp
pop
push
jo
and
ret
ds
orb
and
add
or
add
addb
mov
loopne
jl
dec
ret
pop
xlat
ss
test
adc
mov
push
cld
pop
push
cmc
pop
mov
sbb
inc
sub
sbb
or
testb
pusha
mov
push
pop
inc
jmp
lea
add
xchg
xor
int
fisubrl
es
les
sbb
fs
and
insb
sub
adc
jmp
adc
outsl
pop
inc
mov
jg
push
cmp
sbb
push
push
incl
imul
pop
xlat
pop
enter
sub
popa
fadd
ss
enter
nop
ret
int3
int3
dec
sbb
push
leave
inc
sbb
aaa
jl
iret
xor
pop
sub
stos
out
adc
ret
aad
scas
rolb
pop
imul
add
cmc
into
cmp
adc
incb
jne
lcall
cmpsb
or
cmp
je
in
jbe
mov
dec
xchg
xchg
mov
jne
push
mov
call
ret
popl
push
pushf
out
or
push
pop
in
push
test
cmp
lods
jno
sbb
sbb
cmp
add
popa
dec
add
xchg
pop
sti
imul
ret
push
inc
xor
pop
inc
xor
mov
or
cltd
pop
or
testl
mov
adc
insb
int
stc
and
or
gs
popa
xchg
jbe
je
push
push
lea
out
test
test
pop
pop
inc
or
lret
pop
xlat
mov
sbb
test
jo
outsl
fimuls
jle
jae
or
or
sbb
mov
mov
leave
jmp
pop
fnstcw
pop
sbb
adc
xchg
mov
xchg
in
testb
push
and
mov
loop
js
sub
pop
xor
ljmp
fcomps
mov
loope
adc
inc
or
aas
test
xor
mov
aaa
mov
inc
push
test
icebp
je
pop
js
icebp
shl
cmp
insb
fwait
je
imul
insl
out
mov
or
std
test
sub
lcall
lods
cmp
xor
pop
push
inc
in
ficoms
addr16
add
mov
test
pop
gs
sub
aaa
cmp
lds
add
mov
filds
clc
inc
loopne
cltd
sub
es
les
push
or
fnsaves
pushl
xchg
mov
adc
and
sub
ficompl
in
adc
push
imul
or
hlt
cmpsl
jg
pop
addr16
dec
sub
push
in
call
pop
push
push
sbb
lods
xchg
cmp
subl
rorl
ds
push
pop
clc
pop
mov
pop
scas
orl
or
outsb
push
aad
inc
cmpl
xorl
test
call
mov
add
push
out
mov
or
mov
mov
mov
sbb
popa
jp
jno,pn
movzwl
stc
and
push
add
lds
xchg
cmp
ljmp
cmp
sub
jmp
mov
pop
push
jo
sbb
mov
push
pusha
push
call
addr16
pop
pop
cmp
popa
and
cmpl
scas
and
mov
call
mov
jbe
out
arpl
out
mov
scas
fldl
or
jbe
inc
decl
aam
in
and
cld
mov
dec
lea
add
lea
xchg
addb
mov
mov
out
movsl
pop
insl
add
xchg
ja
adc
mov
out
push
adc
inc
inc
cmpb
aam
ret
or
sbb
fnstenv
fs
sti
hlt
or
push
lods
lods
push
mov
mull
xor
push
je
push
mov
shll
je
inc
jns
jno
gs
dec
lahf
mov
jb
push
cmp
fisttpl
mov
dec
push
jmp
or
add
dec
stos
add
push
jo
inc
xchg
movsl
outsb
clc
ds
insb
push
andl
mov
pop
cmc
andl
fnstenv
pop
test
call
mov
cld
cmp
arpl
sbb
movsb
cld
fmuls
test
sbb
pop
lea
mov
out
add
adc
mov
push
jno
rcrb
mov
add
in
pop
xchg
adc
icebp
lea
clc
cwtl
std
sbb
aas
sarb
mov
jb
mov
push
or
aad
mov
repz
cmp
lea
pop
push
shr
test
and
rep
inc
inc
mov
mov
jne
pop
pop
push
in
cli
mov
lcall
fistps
cmp
and
sbb
mov
sub
cld
shlb
subl
daa
jb
loopne
fistpl
lea
mov
test
push
or
adc
nop
rclb
cmp
outsl
sbb
je
and
sar
insl
fsubs
add
sbb
adc
add
mov
arpl
xor
sbb
ss
das
jp
push
and
and
adc
mov
pop
movlps
sbb
pop
vandnps
xchg
push
xchg
push
mov
jmp
imul
adc
or
sbb
push
ret
xchg
fimull
pop
push
imul
lret
jg
sbb
add
mov
jmp
lea
mull
pop
roll
mov
inc
lret
cmp
jne
mov
add
loopne
pushl
fneni(8087
pop
adc
test
call
mov
in
sbb
pop
fisubrs
mov
pop
jmp
add
jmp
std
jmp
ficompl
lods
pop
cld
pusha
or
sbb
inc
add
pusha
outsl
loop
mov
inc
out
jmp
mov
fldt
add
mov
outsb
imul
test
daa
test
insl
in
pop
push
cmp
mov
or
inc
jmp
bound
not
adc
aad
xchg
jl
loopne
and
ret
dec
add
inc
jne
int3
out
or
jae
adc
loope
xchg
xor
jge
or
and
sbb
fcomi
xor
popa
push
addl
ret
pop
jle
outsl
outsb
inc
inc
dec
push
adc
js
out
and
and
push
loope
adc
sub
ret
or
pop
nop
dec
es
cld
jle
test
jne
dec
lret
inc
jne
or
jbe
clc
jb
mov
cmpsb
sub
scas
and
jb
rep
jmp
ret
loop
mov
sub
loopne
enter
insb
mov
sbb
push
fcoms
sbb
ja
lock
inc
and
mov
mov
mov
add
mov
fsts
dec
add
and
add
add
into
and
inc
aas
mov
xor
xlat
push
mov
pushf
xchg
sar
aaa
dec
mov
mov
call
call
hlt
xor
xor
clc
clc
cld
inc
subb
xlat
push
clc
shlb
or
lock
in
notb
pop
pop
lds
int
stc
adc
or
xor
and
cld
jg
or
lret
mov
ja
pusha
neg
gs
adc
cmp
add
stc
sub
push
and
or
cwtl
shrb
scas
mov
dec
pop
dec
push
mov
inc
mov
xchg
pop
mov
mov
mov
js
stos
sub
add
inc
pop
test
dec
shll
sub
cmp
rcl
xor
push
xchg
sbb
sbb
adc
adc
xor
rorl
or
add
ja
dec
add
add
xchg
shlb
pushf
mov
add
jae
adc
test
or
imul
ja
ljmp
adc
orb
cld
daa
push
imul
cmp
push
or
lods
push
mov
push
jle
insl
mov
push
inc
push
paddusb
dec
lea
add
addps
adc
imul
rcll
and
pop
jl
adc
mov
fiadds
adcb
mov
pop
.byte
.byte
pop
lcall
xchg
add
in
add
mov
cmp
mov
sub
sub
mov
out
adc
enter
cmp
or
imul
mov
sub
cmp
out
outsl
mov
rclb
inc
cld
aas
mov
lods
insl
mov
sub
adc
ds
sbb
ret
adc
rolb
leave
mov
xor
add
cmp
push
fldt
lock
push
mov
mov
pop
rcrb
mov
mov
add
push
add
mov
or
mov
add
test
test
insl
insl
sbb
sub
mov
mov
pop
clc
daa
shrd
rcll
xchg
ret
mov
imul
sub
pop
sbb
shrl
cmp
or
jg
lods
sbb
jp
push
add
imul
mov
pop
fisttpl
or
mov
not
mov
bndstx
jg
std
mov
adc
mov
mov
or
mov
ss
inc
push
mov
outsl
or
and
push
sarb
or
xchg
push
or
add
fcomi
and
or
cmp
add
test
jbe
in
inc
cmp
int
or
insl
or
xchg
jmp
jge
add
clc
adc
push
sbb
add
imul
ja,pt
loopne
mov
mov
notb
cld
sub
mov
icebp
nop
push
lock
jae
ret
mov
push
xor
mov
fs
into
or
clc
sbb
ret
in
sti
mov
xchg
mov
add
insl
sub
pop
cmp
sub
sahf
or
incb
mov
xchg
shl
rolb
bound
fsubrl
sbb
or
adc
adc
out
not
push
fisttps
fsubp
decl
inc
leave
and
sub
sub
mov
test
ljmp
or
add
add
icebp
insb
add
xchg
mov
xor
xor
sbb
adc
sahf
ljmp
jg
and
or
repnz
mov
fisubs
push
fldt
pop
into
call
test
pop
inc
or
fwait
arpl
xor
movb
cmp
jnp
aam
sbb
shr
rcl
mov
add
add
sbb
push
xlat
xchg
cmpsb
add
sbb
jmp
sub
add
sbb
cmp
cmp
stos
arpl
push
or
adc
ss
xor
xchg
push
lret
call
arpl
out
sbb
cmp
xor
andb
cmp
sub
jne
inc
insb
add
enter
ret
mov
rol
in
addl
mov
mov
push
mov
pusha
push
iret
adc
pop
insl
outsb
mov
cmovbe
mov
scas
and
mov
pop
or
movsl
sarb
test
int
insl
in
xor
mov
dec
mov
pop
cmp
and
mov
shl
push
adc
jmp
pop
imul
adc
arpl
mov
notb
add
test
lods
mov
outsb
dec
jnp
into
mov
adc
ficompl
sar
clc
mov
shll
mov
leave
in
pop
gs
sbb
mov
call
movsl
inc
rorb
imul
and
cmp
or
mov
scas
sbb
add
fisubrs
dec
pop
and
cmp
mov
cvtps2pi
pop
cmc
es
mov
rorl
mov
leave
hlt
mov
adc
ret
jno
xchg
outsl
stc
mov
test
sbb
aam
pushf
roll
jne
insl
mov
bnd
adc
jp
sub
out
sbb
mov
push
xor
push
adc
ret
xor
or
fisubrs
mov
pop
cmp
adc
push
js
sbb
mov
popa
jns
or
leave
inc
shll
or
push
jno
mov
push
pusha
cli
push
repnz
sti
mov
mov
sbb
inc
sub
fisttpl
fldcw
push
or
add
push
ss
fistpl
adc
nop
cmp
mov
int
or
shll
mov
mov
lret
shll
mov
or
mov
sarl
jne
push
movsb
jmp
pop
push
test
and
sbb
shll
pusha
cltd
dec
scas
stc
adc
sub
mov
or
xor
out
pop
js
insl
mov
cmp
roll
out
or
cmpsb
pop
pop
rorb
xor
push
adc
fdivs
or
add
or
mov
pop
add
and
push
inc
fistpl
pusha
push
or
push
push
outsb
outsl
fwait
orl
ljmp
pop
lahf
lret
aaa
mov
fwait
jae
mov
cmp
movsl
jbe
adc
xchg
jae
insl
test
test
cmpsl
push
xchg
inc
cmp
jg
adc
pop
jae
sbb
adc
xor
es
sbb
mov
mov
adc
sub
int
dec
or
gs
test
adc
push
ret
psraw
cld
jmp
and
mov
add
or
test
add
sarl
shr
ljmp
sub
daa
aam
sbb
imul
rclb
bound
shrl
add
mov
pop
inc
mov
sbb
sbb
sbb
sub
ljmp
scas
sbb
add
test
insl
fistpl
or
stos
and
loop
push
call
fcomps
cmp
add
cli
and
push
int
sahf
cmpsl
mov
sub
rcrl
inc
xor
movb
testl
mov
dec
test
scas
fldcw
dec
mov
pop
idivb
xchg
jecxz
insl
movb
loope
add
xchg
lret
out
outsb
jmp
jmp
and
xor
and
adc
test
js
xor
adc
inc
add
xlat
call
mov
stos
leave
xor
xor
mov
popf
mov
in
lds
orl
or
push
sbb
icebp
jne
mov
mov
pop
arpl
sbb
das
dec
mov
int3
mov
fiadds
jge
add
cltd
sub
mov
xor
dec
sbb
adc
insb
and
xchg
mov
int3
stos
insb
fwait
popa
in
adc
shrl
dec
or
je
mov
jmp
rol
mov
inc
sub
aad
lds
call
pop
fistpl
sbb
mov
jo
aam
in
and
pop
push
adc
push
cmp
jecxz
bound
cld
sbb
sub
lock
jb
sbb
inc
push
out
and
sbb
call
lea
std
inc
fistps
js
mov
inc
cs
into
mov
lods
add
add
cltd
outsl
cs
lock
mov
aad
insb
outsb
add
sbb
sub
int
push
loop
sbb
add
mov
rcll
xor
rclb
and
jl
adc
inc
hlt
ficoml
leave
mov
pusha
out
test
pop
jo
xor
dec
add
jb
inc
xor
fwait
mov
mov
lock
orl
stc
mov
shl
push
enter
push
mov
pop
test
mov
pop
mov
imulb
add
cmp
rcl
pop
lock
test
iret
adc
outsb
in
xlat
mov
or
out
adc
insb
pop
xchg
jno
pop
mov
sbb
mov
mov
adc
in
mov
sar
jmp
adc
pusha
or
call
jb,pn
sti
mov
dec
leave
push
mov
test
js
or
xor
push
or
cmp
push
xor
sbb
aad
adc
sbb
xchg
je
adc
and
push
out
xlat
sbb
int3
push
mov
cmc
into
loopne
insl
add
pop
adc
dec
stos
in
sarl
pop
xchg
rol
sbb
dec
pop
inc
test
inc
sbb
shlb
push
xchg
mov
fcomps
pop
sbb
add
dec
mov
cmp
inc
insl
cmc
sbb
imul
sbb
enter
in
xchg
scas
push
xchg
add
jb
dec
push
pop
enter
lds
jb
jl
imul
cmp
test
xchg
scas
inc
xchg
dec
mov
test
xchg
pushf
jo
jmp
enter
ss
sub
inc
push
xor
test
inc
andl
out
ret
outsl
push
sbbl
xlat
nop
sbb
test
jbe
sbb
stos
stos
inc
rclb
imul
mov
sbb
pop
popl
cmp
cmp
mov
pop
pmulhuw
iret
testb
pop
int
adc
stos
push
pop
jmp
mov
pop
call
jo
cmpsb
into
insb
into
js
push
push
add
push
push
push
pop
adc
or
bound
mov
cmp
mov
pop
pop
es
das
lcall
xor
push
stc
or
icebp
xchg
stos
jno
push
cmp
push
sub
lahf
rcl
push
mov
clc
xchg
leave
in
mov
inc
pop
ljmp
pop
incl
dec
adc
jl
mov
inc
mov
ljmp
out
push
xor
scas
add
adc
ljmp
xor
je
mov
inc
lds
push
icebp
movups
or
adc
lret
push
fldl
push
push
xor
orl
popa
pop
enter
lea
sbb
cmp
mov
mov
loopne
push
cltd
call
fwait
ret
mov
cmp
push
test
dec
ficoml
mov
loopne
outsb
shrl
lea
mov
adcb
lods
push
add
insl
lret
repnz
iret
push
movsb
daa
lock
clc
pop
cmp
lods
stc
jo
leave
hlt
cmp
rorb
sub
rcl
cmp
adc
xchg
dec
adc
pop
lods
sub
cmp
inc
jmp
test
or
mov
hlt
pop
xor
pop
mov
nop
pop
sub
lods
mov
repnz
shl
push
call
pop
push
testb
cmp
cmc
test
mov
or
and
ret
roll
cmp
or
in
mov
sub
add
add
insl
adc
cwtl
dec
dec
shll
movb
jo
sbb
sub
pop
dec
popl
mov
mov
test
ljmp
xchg
add
lea
shrb
add
clc
push
or
iret
jmp
push
dec
es
add
sbb
add
add
mov
jp
mov
mov
add
ret
pop
adc
adc
loopne
paddb
scas
cs
add
rcrl
or
add
mov
rcrl
hlt
fcmovne
xor
xchg
mov
adc
pop
sub
and
sbb
sbb
mov
leave
fstpl
cltd
repz
and
adc
sbb
or
es
pop
fwait
push
incl
imul
push
xor
in
mov
cmp
xorb
insl
sbb
jae
and
test
adc
idivb
inc
or
ja
mov
sbb
adc
mov
push
inc
cli
mov
ret
sbb
cld
push
jp
push
sub
mov
fcoms
fstps
imulb
push
or
jb
inc
test
cmpsb
sahf
jp
pop
pop
jae
sbb
and
push
das
inc
mov
or
jno
rorb
xor
add
sbb
dec
loop
outsb
sbb
stc
adc
fs
inc
ret
sbb
jae
lock
mov
pop
xlat
leave
push
notl
or
ja
xchg
dec
stos
pavgb
pop
loop
popw
fs
aad
scas
add
je
jp
test
sbb
icebp
push
jnp
cmp
in
jae
je
lock
std
jle
loope
loopne
mov
push
add
sahf
in
pop
jle
dec
xchg
jmp
scas
pop
call
lods
add
roll
xor
addr16
adc
push
and
sti
adc
xor
idivb
push
nop
adc
imul
sbb
dec
cmp
mov
dec
xchg
aad
mov
jnp
mov
cs
push
sbb
fmuls
or
push
xchg
leave
sbb
or
jo
add
sbb
mov
jb
add
ja
imul
popf
insl
jns
add
insl
inc
sub
rolb
mov
mov
or
cmpsl
pop
mov
outsl
decb
outsb
mov
mov
addr16
mov
xchg
cmp
adc
mov
mov
movb
mov
repnz
insb
push
orb
adc
ret
or
pop
loop
mov
and
inc
movsl
cmp
mov
xor
arpl
push
lea
stc
bound
aam
adc
repnz
ja
or
xchg
imul
mov
pop
mov
lret
int
push
pop
pop
neg
push
cli
adc
insl
adc
add
push
push
sbb
push
and
addr16
sahf
sub
icebp
adc
adc
aam
mov
pushf
shlb
jne
mov
push
and
push
dec
shrb
cwtl
add
push
roll
jge
mov
mov
inc
mov
rclb
cmp
xchg
dec
adc
rcl
sahf
stos
or
sbb
add
jo
aaa
loope
sub
rclb
fcomi
test
cmp
ljmp
mov
fnstcw
jp
add
stos
mov
icebp
cmp
inc
xchg
push
cli
mov
add
cmp
or
loop
int
push
test
rcl
sbb
cmp
rorb
aam
mov
aad
clc
bound
pop
push
test
daa
push
xor
mov
add
push
mov
roll
push
cmp
and
addr16
or
shlb
cmp
aaa
outsl
enter
lea
lret
movzbl
and
sbb
add
add
pop
cmp
in
lret
lock
or
push
mov
push
clc
test
xchg
sbb
ljmp
js
xor
dec
add
or
dec
mov
and
fisubl
ds
cmc
sbb
xor
sbb
or
scas
add
dec
inc
mov
lret
jmp
inc
mov
push
dec
push
pop
mov
std
cltd
or
add
jmp
rolb
insb
xchg
jp
add
cmp
push
std
mov
int
add
pop
jbe
push
jnp
sub
lahf
ljmp
scas
adc
push
fwait
es
inc
sbb
les
mov
inc
fwait
clc
sbb
into
push
xor
sarl
or
in
enter
lods
sbb
push
ret
pop
punpckhbw
xchg
push
add
in
rcl
sub
xchg
popf
or
pop
dec
jle
inc
inc
mov
jmp
test
sbb
sbb
rcll
and
add
adc
aad
in
jmp
sbb
sbb
cwtl
lea
cmpsb
lea
shl
cld
push
xchg
add
jp
mov
dec
jne
pop
imulb
lock
pop
inc
sub
leave
rcrl
in
scas
dec
mov
mov
in
mov
pop
add
fmull
mov
push
jne
pop
sarb
add
test
lret
adc
fisttps
pop
xor
xchg
lret
adc
adc
jns
sahf
fsub
icebp
cmp
push
sub
xchg
pop
mov
cmp
dec
hlt
push
fnstenv
mov
jnp
test
add
jb
cmp
push
js
in
jo
clc
pusha
pushf
push
cli
pop
into
dec
xor
pmulhuw
pusha
push
pop
cmpl
divb
add
int
sahf
cmp
fs
ret
push
fiadds
lods
dec
sub
movb
push
add
rcr
inc
jo
call
sti
fildll
push
sub
adc
pop
sub
rclb
in
fwait
ret
jno
and
push
and
loop
mov
xchg
sbb
mov
dec
mov
push
test
bnd
jo
ret
ja
push
popa
test
repz
inc
inc
cmpsb
js
cmp
fimull
push
push
imul
adc
or
mov
call
loop
push
arpl
mov
mov
xchg
ss
mov
movsl
xor
stos
gs
xor
sub
jp
lret
adc
icebp
mov
stos
sarb
sub
xor
in
adc
jmp
xor
push
adc
lods
shr
mov
fs
adc
xor
clc
repz
mov
jle
xor
in
cli
mov
or
idivb
and
aas
mov
dec
and
repnz
shlb
mov
xchg
adc
jo
pop
insb
mov
push
or
rcl
pop
jne
in
pop
rclb
ret
push
in
add
mov
nop
stc
dec
add
mov
jne
jecxz
ss
lods
mov
pop
sbb
or
rol
push
add
inc
iret
xchg
push
out
repnz
jae
mov
adc
loop
pop
insl
mov
mov
rcll
pop
sarb
mov
xor
dec
sbb
movsl
push
cmpsb
clc
lret
in
or
xor
inc
xchg
push
push
sub
push
cmp
paddq
rsm
in
insl
mov
inc
inc
lss
sbbb
xchg
push
das
mov
push
fchs
mov
add
mov
and
call
cs
adc
mov
inc
inc
in
test
or
push
xor
jo
mov
push
pushf
cld
mov
push
jbe
pop
or
push
mov
shlb
ljmp
jne
rorl
xchg
push
push
adc
dec
jno
cmp
fsubr
flds
add
lahf
cmp
addl
lds
sbb
pop
js
dec
je
scas
push
out
or
lcall
xchg
mov
call
jbe
lock
pop
movsb
setns
dec
sub
addl
shrb
movsb
push
sbb
shrb
push
mov
stos
pop
mov
daa
enter
cmpsl
ss
call
add
lds
inc
rclb
cmp
xchg
add
es
push
xchg
mov
shl
jae
sbb
mov
xor
inc
jp
gs
inc
das
movl
imull
push
jg
in
popa
imul
lods
mov
push
sbb
ret
sub
enter
dec
inc
sbb
jo
int
ljmp
sub
add
xlat
adc
sub
lea
push
ret
cmp
ds
repz
mov
outsl
stc
pop
xor
ds
and
dec
sbb
or
jae
add
jb
ret
jle
lods
jle
dec
cmp
and
push
add
push
push
pop
pop
push
pop
xor
add
or
lods
adc
insb
pop
rol
sbbb
mov
sub
push
xorl
cltd
sbb
adc
pop
scas
mov
mov
mov
add
dec
in
push
xor
rolb
or
lock
test
or
stos
loopne
push
shrb
push
rclb
frstor
rolb
rorl
mov
popf
xchg
pop
mov
lds
negb
mov
adc
popf
ror
mov
into
dec
inc
jo
imul
pop
rol
nop
mov
xchg
pop
imul
out
shlb
mov
pop
out
push
pushf
inc
inc
out
adc
push
cli
filds
mov
cli
enter
xchg
mov
ljmp
add
rorb
les
push
in
cmpsl
inc
adc
jno
or
add
xchg
mov
inc
jmp
leave
mov
cmp
negl
push
jae
add
arpl
or
or
movsb
rol
jae
imul
scas
imull
and
rol
pop
insb
scas
mov
mov
mov
data16
mov
loop
xor
adc
aas
or
sbb
xchg
pop
adc
rclb
xchg
cltd
xor
cmpb
call
push
adc
sub
cmc
es
jmp
sub
dec
sub
stos
push
xchg
mov
pop
sub
sarb
fmull
push
sub
test
inc
mov
sbb
pop
stc
shrl
cltd
out
test
xlat
mov
rol
test
mov
sub
or
decl
push
xor
push
incl
adc
psllw
push
lret
andb
hlt
or
mov
push
xlat
pop
rolb
pop
lock
rolb
xor
pop
mov
inc
adc
rorl
sbb
mov
xor
adc
inc
mov
iret
pop
adc
push
call
push
popf
and
int
push
les
xorl
cmp
insl
sub
pusha
mov
push
pop
push
gs
inc
rcll
ret
mov
in
ds
test
push
les
jl
mov
mov
test
xchg
add
mov
sub
dec
cmp
pmaxub
fdivp
es
sbb
inc
inc
lret
inc
xor
sub
xchg
loope
xor
push
and
lock
fwait
pop
dec
addl
pop
lcall
lods
and
sub
jl
xchg
jo
mov
test
rcrb
dec
push
mov
popf
mov
mov
push
and
fs
pop
adc
xor
fidivl
sbb
mov
shll
aad
jmp
or
mov
pop
lods
push
cmpsb
xchg
testb
push
xlat
adc
in
or
or
sbb
mov
ret
xchg
sbb
adc
mov
stos
push
orl
pop
sbb
shrb
lods
ljmp
mov
push
xchg
lret
into
popf
mov
test
and
adc
fmuls
hlt
xor
add
and
sub
test
push
cmpsl
push
movsl
mulb
push
adc
mov
roll
or
loopne
pop
scas
repz
inc
rcl
mov
popf
leave
add
and
in
loope
jge
jne
mov
push
inc
add
sub
mov
sub
cmpsb
movsb
push
loope
arpl
sbb
mov
sub
cltd
ljmp
lds
push
insl
popf
repz
push
inc
lea
scas
push
orl
or
xchg
sub
and
cmp
out
or
push
push
les
push
pop
mov
inc
sub
fs
sbb
mov
sbb
dec
loopne
in
add
fcoml
jb
dec
cmp
test
pop
mov
scas
jno
mov
test
sbb
test
inc
rolb
push
lret
inc
jle
imul
push
frstor
repnz
or
xor
jecxz
jnp
jne
test
push
push
push
xor
sub
push
imul
mov
sub
mov
inc
icebp
add
mov
add
daa
scas
push
daa
sbb
xchg
add
into
or
fmul
aam
and
cmpsb
cmp
das
mov
cmpsl
push
sbb
jne
lsl
cmp
jo
enter
lcall
stos
mov
ror
stos
adc
ret
idiv
outsb
clc
push
cmp
add
mov
cmpsl
dec
xor
sbb
out
adc
mov
pop
daa
scas
sbb
push
adc
aas
and
rcrl
ljmp
adc
push
test
es
jp
push
push
shll
nop
jmp
enter
in
mov
in
push
subb
or
cmp
inc
or
adc
rcrl
sahf
jno
sbb
add
repz
cmpsl
mov
xor
nop
ret
inc
and
pop
push
lcall
or
mov
cmp
pop
rorl
pusha
mov
adc
inc
push
sbb
ret
scas
addr16
sbb
into
cmpsb
lea
hlt
cmc
mov
pushf
jp
sbb
je
push
cmp
loope
adc
and
icebp
lret
add
pop
nop
iret
inc
add
ja
add
xor
stc
data16
test
add
movsb
push
xlat
lds
pop
fdivrl
push
mov
test
test
adc
test
mov
lods
jne
ret
push
pusha
or
add
mov
cs
enter
push
sbb
push
je
adc
mov
call
clc
push
arpl
call
push
adc
or
incb
mov
inc
mov
add
adc
xor
ljmp
push
je
mov
or
stos
or
pop
gs
jg
push
pop
je
cmp
aas
sbb
mov
or
add
push
shlb
test
xor
fs
imulb
pop
ljmp
xor
lods
pop
inc
xchg
push
movsl
adc
xchg
cmpsb
xchg
adc
sbb
aam
jae
sarl
mov
mov
cld
and
loopne
jnp
hlt
lret
push
cmp
push
pop
push
inc
lcall
sbb
sbb
incb
and
sub
mov
les
inc
and
mov
or
lahf
jmp
mov
cmpsl
mov
lret
sbb
mov
fsubs
insl
adc
push
jo
sbb
mov
mov
out
push
xchg
pop
ss
push
push
stc
or
or
and
jmp
mov
loopne
or
fisubl
add
or
mov
mov
mov
xor
mov
sbb
repnz
xor
add
rolb
xor
pop
mov
clc
roll
mov
mov
inc
test
jbe
hlt
inc
xchg
mov
sbb
adc
push
bnd
push
rorl
sbb
call
mov
push
cmp
inc
xchg
loop
push
push
and
adc
outsb
dec
adc
adc
sbb
cli
sarl
jo
add
jae
dec
dec
adc
pop
push
scas
sub
or
ret
pop
pop
hlt
mov
xor
pop
lds
sub
push
xchg
es
pop
pop
or
add
push
or
insb
mov
sub
iret
mov
and
pop
popf
aam
nop
rclb
in
dec
dec
in
inc
sbb
popf
cmp
pop
stos
out
dec
adc
add
add
mov
push
adc
icebp
mov
or
popf
pop
mov
les
cwtl
mov
movsl
xchg
mov
push
in
int
push
pushf
into
cmp
or
mov
sbb
outsb
pop
or
push
bound
pop
adc
or
rol
ret
ror
imul
enter
leave
or
cmp
and
mulb
cli
lods
or
jne
cli
nop
in
and
leave
fsubl
lods
cli
subl
dec
fmul
inc
add
xchg
add
xlat
and
aad
mov
fadds
or
jecxz
sbb
sub
push
mov
xor
je
adc
test
xchg
pop
lret
ljmp
cmp
push
cmp
scas
dec
mov
push
push
dec
mov
xor
stc
rcl
mov
dec
lgdtl
lret
or
icebp
mov
leave
jbe
push
mov
and
mov
pop
cmp
jae
sbb
push
dec
push
aaa
rclb
shrb
sub
sbb
dec
sub
adc
cmp
pusha
mov
cmp
loope
sub
testb
int3
mov
clc
sbb
aam
jmp
cmp
jl,pt
push
inc
xor
push
push
add
pop
loopne
add
jmp
push
pop
mov
sbb
xor
dec
arpl
test
push
mov
aas
inc
mov
adc
fwait
mov
adc
xorb
aaa
push
inc
sbb
sbb
jne
and
scas
push
ret
mov
add
ret
pop
add
js
lret
pop
test
icebp
add
sbb
inc
or
cmp
xor
mov
inc
shrb
popf
push
insl
or
inc
add
adc
cvtdq2ps
add
adc
cmp
sub
inc
push
lret
sub
xchg
cltd
js
push
sahf
mov
faddl
outsb
sbb
out
scas
out
push
fstpt
add
xchg
sbb
daa
inc
push
or
inc
mov
icebp
cmp
sub
sub
mov
xchg
pop
push
pop
xchg
sbb
orb
aaa
and
daa
cmp
ljmp
fwait
sarb
inc
subb
push
scas
iret
inc
idivb
call
lcall
and
xchg
add
loope
jno
jg
test
mov
jmp
cld
and
es
jae
or
pushf
sti
jmp
mov
mov
aad
add
jp
jecxz
add
xchg
rolb
test
xchg
mov
mov
adc
jb
test
gs
mov
leave
xchg
push
add
mov
gs
cwtl
enter
pop
mov
adc
lds
sarl
pop
inc
mov
xor
subl
cwtl
and
stc
lahf
add
jb
aaa
sub
jecxz
dec
sub
adc
loop
pop
or
mov
in
jne
mov
stc
je
inc
cs
dec
pop
push
cmp
sub
ljmp
or
popf
pop
jne
pop
xor
mov
sub
cs
cmpsb
inc
insb
mov
movsb
mov
test
cli
pop
rolb
inc
push
enter
orl
pop
loope
mov
je
sub
xchg
push
cli
cmpsl
daa
sbb
jl
sub
mov
mov
jne
push
push
loop
xchg
adc
aam
sub
adc
cmp
in
mov
adc
push
mov
dec
adc
pop
or
and
scas
shr
pop
push
test
pop
aad
lds
arpl
divl
adc
and
test
pop
and
adc
sbb
add
gs
mov
bound
imul
or
jne
add
mov
sbb
inc
es
cmpsl
into
dec
ljmp
cli
or
out
push
mov
add
mov
dec
push
sbb
jb
sub
pop
mov
cmp
js
mov
stc
out
sbb
cmp
inc
sbb
push
mov
adc
int3
or
loop
lret
xchg
dec
pop
ret
xchg
mov
mov
inc
inc
cs
ds
dec
rclb
xor
imul
pop
lds
add
pop
cwtl
xchg
sbbl
cmp
dec
fwait
ret
loope
lret
dec
inc
loop
pop
add
orl
cmc
ss
and
cld
sbb
inc
test
or
mov
jbe
out
or
mov
jne
mov
sub
inc
pop
pop
hlt
hlt
adc
add
jb
shlb
add
sbb
insl
push
mov
psadbw
or
push
imul
or
mov
into
shll
or
lret
js
and
into
stc
dec
insb
push
insb
jbe
jnp
rcl
inc
cmp
pop
roll
adc
and
out
rol
rclb
leave
mov
pushf
mov
cwtl
xor
jae
mov
add
sbb
cld
sbb
jmp
imul
add
js
xchg
jp
je
fdivs
scas
or
xor
icebp
fisubl
jle
lds
fwait
loop
ds
out
jmp
mov
jle
imul
test
into
dec
aad
sbb
adc
jno
xchg
push
push
movb
call
lcall
and
insb
or
jecxz
add
test
adc
aad
scas
in
jecxz
jns
movsb
sub
add
scas
push
sbb
and
stos
int3
cmp
jmp
out
mov
inc
mov
aam
pop
leave
push
push
adc
xchg
imul
mov
fisubrl
stos
rcl
push
sbb
gs
xor
movzbl
sub
arpl
ret
adc
sbb
xor
add
sbb
adc
xchg
bound
push
dec
icebp
sbb
cmpl
cmp
xchg
es
inc
dec
jle
stos
int
xor
mov
add
mov
sbb
aad
inc
loope
or
std
sub
mov
shll
adcl
xor
or
sub
icebp
push
xchg
fld
add
add
adc
rclb
mov
aaa
xchg
add
add
add
int
rclb
sub
out
add
test
cmp
mov
dec
rolb
cmp
inc
out
push
dec
mov
xchg
cli
fwait
pop
loopne
xchg
push
xchg
enter
inc
or
pop
jmp
sbb
sbb
pusha
jne
enter
rolb
or
sbb
in
movsb
add
stos
loope
jae
cmp
fmull
sub
pop
int
mov
pop
int
xlat
or
add
pop
push
orb
add
scas
sbb
ss
cmc
push
mov
out
add
or
xor
xor
xor
or
xchg
push
imul
xchg
sbb
into
or
jp
cmp
stos
pusha
push
xor
aam
aaa
add
ret
inc
add
or
sub
shll
stos
xchg
test
add
enter
mov
sbb
push
push
adc
mov
xor
cmp
ljmp
push
andb
sbb
push
pop
repnz
mov
lret
scas
mov
push
mov
pop
inc
xor
mov
sub
and
clc
push
or
sub
sub
jg
out
mov
data16
and
add
stos
add
cmp
adc
pop
push
test
cwtl
jo
xor
inc
pop
stos
pop
xchg
push
fldl
ror
test
pushaw
push
mov
push
sub
push
mov
cmp
or
push
test
addb
inc
scas
lods
xor
outsl
cmpsl
ret
shlb
push
mov
loope
lods
out
lea
push
xorb
and
adc
clc
je
mov
nop
aad
dec
lods
ret
scas
xlat
push
repnz
cmp
jle
or
jae
or
cmpsb
or
fadd
gs
add
inc
pop
pusha
adc
sbb
je
ret
add
sbb
pop
stc
lea
mov
xor
xchg
xor
inc
mov
inc
aad
test
iret
inc
movsb
pop
push
repnz
leave
cwtl
adc
push
sbb
les
mov
std
mov
adc
or
stos
sbb
push
push
std
push
cmpsb
pop
lock
sbb
std
cmp
sub
mov
pop
daa
add
or
inc
clc
inc
sub
ret
sbb
dec
mov
inc
int3
or
mov
lds
push
in
push
movsl
jb
jns
dec
push
out
pop
mov
call
lret
mov
or
fiadds
fildl
fisubl
or
in
imul
lock
es
pop
pop
aam
mov
add
or
cmp
sbb
inc
add
and
jp
lahf
pop
gs
mov
adc
mov
pop
icebp
inc
push
loop
cltd
or
sbb
or
push
cmpsl
ret
rcrl
addl
jb
iret
push
mov
fcoms
sub
mov
adc
rol
xor
fiadds
incb
adc
xor
push
inc
inc
pop
aam
lcall
mov
bound
test
lds
sbb
cmp
shlb
push
int
loopne
into
leave
dec
icebp
inc
add
add
bound
shll
ljmp
pop
xor
jl
ret
inc
cmp
out
clc
and
cmpsl
ret
and
pop
xchg
rorb
pop
pop
fwait
stos
es
mov
shll
lret
adc
orb
ror
add
jns
push
push
or
or
adc
mov
or
dec
mov
lds
adc
cli
test
int
xlat
adc
push
cmpsb
pop
lahf
incb
mov
cmpsl
and
adc
add
or
inc
faddp
mov
mov
test
sbb
fnstenv
nop
andb
test
test
andl
jnp
inc
inc
aas
add
rorl
or
rorl
dec
push
ljmp
movsb
mul
mov
adc
sub
pmaddwd
jp
cmp
jo
mov
notb
inc
adc
dec
dec
push
sar
mov
loopne
scas
mov
mov
ljmp
jae
push
xor
inc
adc
leave
jb
add
imul
int
insb
sahf
rcll
adc
jno
stos
dec
sbb
cmp
or
sahf
push
push
out
daa
stos
cmp
jnp
imul
mov
or
xor
addr16
dec
shll
test
mov
mov
sub
mov
ret
into
sbb
push
je
pusha
test
or
and
push
push
mov
sub
jp
dec
shlb
sarl
or
in
mov
cmpsl
ds
adc
cli
or
or
or
adc
or
pop
inc
or
mov
xchg
xor
addr16
add
cmp
sbb
mov
rcll
jb
add
push
aad
sbb
mov
bound
ss
sub
add
iret
pop
fsubrl
loopne
nop
shl
sbb
sbbl
mov
mov
add
test
add
ljmp
gs
jmp
adc
inc
adc
cmp
mov
imul
loopne
jae
adc
rcl
cmp
stc
std
enter
push
loop
xchg
xor
call
jno
nop
add
popf
push
call
adc
add
movsb
lahf
in
sbb
sub
shl
popf
add
ret
push
pop
pop
jp
push
inc
push
jns
rolb
fldl
add
add
lods
decl
cmp
adc
add
add
test
and
scas
mov
push
cwtl
fdivrl
add
add
mov
cs
lods
fcompl
inc
push
fcmovb
out
or
sbb
add
les
pusha
insb
mov
aad
or
push
mov
push
and
push
sbb
rcll
rcrl
int
loopne
mov
test
movsl
add
xor
add
cmc
add
fs
loopne
xchg
dec
aam
shll
pop
lods
mov
mov
subb
stos
mov
jmp
sbb
and
aad
or
mov
int
adc
add
rcrl
mov
push
mov
jo
push
pushf
enter
inc
movsl
cwtl
gs
pop
sbb
or
jo
mov
daa
mov
or
mov
lahf
rcll
in
and
add
xor
add
inc
mov
mov
outsl
mov
mov
mov
xchg
pop
mov
push
add
inc
mov
add
mov
or
or
sbb
mov
cmpsl
das
adcb
das
jo
jle
movhps
ja
popl
mov
inc
add
cmc
jmp
sbb
sub
sbb
jmp
push
pop
call
pop
pop
adc
cmp
shrl
sub
enter
push
fnstcw
mov
push
inc
inc
adc
add
cmp
lret
mov
mov
loopne
add
jns
pop
push
rcll
mov
sbb
ficomps
pop
cs
mov
xor
and
js
ds
rorl
mov
mov
arpl
xchg
sub
pop
or
fcompl
push
mov
into
add
or
mov
rcll
lds
dec
add
adc
lock
pop
loope
out
inc
int3
or
cmp
adcl
or
inc
es
subb
sbb
xchg
into
adc
sub
mov
push
pop
rclb
ret
daa
shll
in
push
lods
add
xor
into
fs
cmp
leave
mov
mov
stos
adc
jnp
pop
rcrb
leave
jmp
push
cwtl
test
imul
xchg
cmp
push
stos
inc
scas
xchg
pop
sub
or
and
in
xor
les
push
dec
cmp
mov
and
dec
add
push
push
push
bound
fstpt
sub
aam
sbbl
push
pop
add
mov
sub
rol
in
pop
scas
or
fiadds
cmpsb
jg
sbb
add
inc
sti
test
push
sub
adc
lret
push
xchg
clc
inc
sbb
add
add
clc
andl
and
xchg
test
sbb
mov
pop
es
ljmp
xchg
mov
cmpsl
es
add
xor
out
sub
fcompl
jp
add
popf
pop
sub
adc
ret
inc
test
inc
test
sbb
xor
add
pusha
or
push
push
rcll
jb
nop
outsl
mov
je
test
and
jge
sbb
sti
and
xor
dec
scas
daa
bound
sbb
mov
fs
iret
push
add
aad
lods
xor
adc
inc
inc
adc
add
mov
or
call
xchg
jge
add
adc
sbb
mov
fisubrl
lret
adc
test
and
push
inc
push
sbb
jmp
loopne
je
pop
les
mov
ror
test
lock
pushf
rcll
push
push
test
and
lret
add
out
inc
add
push
sbb
push
sbb
pusha
mov
or
xor
lcall
xor
xchg
das
mov
scas
faddl
loope
not
sub
shrb
jl
stc
sbb
aaa
stos
or
adc
mov
dec
mov
loope
into
fisubl
pop
sub
out
adc
sub
loope
push
fstl
lea
insl
popf
add
test
jg
notb
addr16
jle
lahf
into
inc
xchg
dec
leave
jmp
inc
cmp
call
add
and
ss
inc
add
jle
or
inc
xorl
andb
push
add
leave
hlt
and
xchg
push
das
push
and
add
out
ret
mov
add
push
jo
shr
adcb
dec
or
xor
sub
push
cmp
lock
pop
je
xchg
jnp
les
jne
cmc
cmp
clc
ljmp
adc
jo
out
rolb
mov
mov
sbb
mov
sub
xchg
sub
stos
lret
sbb
add
cvtpi2ps
ret
pop
std
xor
aam
mov
call
mov
mov
in
aad
xor
or
pop
add
push
xchg
jl
and
add
and
push
mov
popf
jo
mov
dec
xchg
add
add
push
jnp
jno
add
or
adc
mov
lock
push
add
mov
or
and
mov
cmp
mov
nop
and
adcl
jg
aad
sbb
addl
push
lods
inc
xchg
cs
mov
or
pusha
mov
mov
sbb
xor
ret
sbb
rdtsc
sub
or
cltd
push
xchg
push
jle
inc
xchg
jp
add
shll
inc
pushf
insl
and
mov
mov
push
add
ret
xchg
add
rorl
add
xor
cli
icebp
mov
orb
adcb
rol
cmp
fdiv
pop
mov
call
or
cltd
stos
in
sub
dec
mov
sbb
sub
push
xchg
mov
nop
jmp
mov
stos
sub
pop
repnz
mov
add
push
cmp
jne
add
inc
mov
xchg
inc
adc
movsb
pop
jae
mov
sbb
push
mov
mov
adc
and
or
add
dec
les
popa
push
push
push
mov
push
mov
add
addb
xchg
jae
mov
cmpsl
push
sub
push
adc
pushl
test
adc
cmp
pop
stos
sbb
mov
idivb
sub
test
fistpll
xor
inc
out
ss
add
sub
test
mov
call
aad
gs
inc
mov
aad
sbb
and
jb
fistpl
lods
mov
jp
or
sbb
or
inc
cwtl
flds
inc
dec
subb
enter
sti
in
cmp
or
pop
mov
mov
sbbb
push
mov
lds
sub
inc
mul
mov
test
or
cmp
inc
loopne
xor
fstl
dec
jnp
adc
jae
sbb
jae
push
sub
popf
pop
and
mov
aad
and
push
or
mov
push
mov
xchg
sbb
push
leave
sti
xor
add
and
loope
and
scas
or
add
mov
cmp
shl
cmpsl
mov
dec
cmp
stos
cltd
and
cmp
mov
mov
mov
pop
dec
xor
icebp
mov
or
mov
orl
mov
lahf
push
ja
sbb
push
sub
scas
pop
setle
mov
cmpsb
push
arpl
fldl
adc
in
mov
inc
ret
adc
xchg
icebp
push
cwtl
cwtl
jne
add
sbb
mov
mov
jo
test
fiaddl
mov
mov
bound
adc
mov
jne
inc
push
adc
dec
adc
push
or
sbb
in
sub
into
adc
rcrb
aad
ret
push
imul
and
sbb
add
loope
out
shll
or
jmp
lock
jle
popa
sbb
ds
sub
sbb
add
dec
pop
mov
mov
add
lock
popa
dec
mov
jo
pop
push
dec
xor
jno
gs
clc
loope
mov
sbb
decb
adc
add
jg
hlt
push
outsb
xorl
push
lahf
sbb
sbb
stos
sbb
cli
sub
adc
sub
loopne
je
or
clts
pop
cmc
jl
dec
callw
sbbb
pop
xchg
enter
cmp
xor
rcl
xor
xor
nop
insb
or
clc
loopne
xor
inc
mov
sbb
inc
mov
les
xchg
add
imul
cmp
das
bound
pop
mov
pop
mov
adc
rclb
adc
jae
ret
dec
xor
stos
mov
mov
push
or
inc
xor
or
ret
addb
ds
in
out
rolb
shrl
mov
jo
push
insb
pop
adc
nopl
mov
sub
add
push
adc
ret
sbb
mov
pop
leave
cltd
add
xor
push
cmp
push
adc
or
shll
test
in
dec
mov
push
sub
fiadds
cmp
addr16
ljmp
filds
cmp
sub
mov
rorb
addb
add
test
cltd
add
xchg
and
or
pop
out
pop
or
pop
lods
xor
inc
push
inc
ret
or
xchg
mov
loope
and
mov
push
insb
stos
or
insl
inc
mov
and
adc
jo
test
fucomi
push
gs
shlb
mov
arpl
movsl
lcall
cs
popf
sub
jmp
jb
or
test
scas
inc
sub
shlb
out
scas
popa
andb
xor
cmp
push
pop
xchg
enter
sub
jle
pop
and
notl
lods
jmp
mov
andb
push
int
or
jl
je
pop
call
mov
popa
mov
jbe
mov
sub
ss
adc
jo
scas
neg
shll
jb
push
scas
test
add
inc
adc
addb
mov
push
mov
test
stc
fmulp
sbb
adc
aam
out
sub
addb
adc
adc
mov
into
xlat
and
mov
shlb
pop
push
aad
adc
xor
sbb
push
insl
inc
adc
dec
cs
sbb
movsb
push
pop
or
push
test
jo
lock
testl
shll
out
mov
or
in
test
dec
rclb
xor
lahf
jae
ret
test
leave
ds
aad
xor
push
fsubs
mov
out
adc
sbb
or
or
fidivl
mov
loopne
add
mov
orb
adcl
ror
inc
popa
sbb
and
push
cmp
jecxz
je
es
hlt
das
mov
mov
or
rolb
sarb
out
popw
mov
popf
adc
pop
dec
dec
mov
push
adc
add
imul
push
adc
rcl
lods
pop
pop
push
leave
push
xchg
mov
push
fwait
sbb
pop
testl
call
adcb
popa
ljmp
mov
cmp
repnz
xchg
adc
jne
sbb
sbb
arpl
xchg
jae
jmp
int3
push
add
stc
faddl
lret
xchg
mov
pop
rorb
hlt
or
fs
sbbl
dec
test
icebp
push
sub
popf
call
xor
jno
xchg
sbb
pop
dec
jmp
xor
sub
in
or
sarb
lret
xchg
jecxz
ret
sarl
mov
pop
mov
loopne
sbb
add
out
add
hlt
mov
mov
sbb
push
out
add
adc
xor
orb
mov
adc
lock
shr
enter
inc
subl
je
stos
xchg
push
hlt
add
scas
inc
mov
inc
sub
adc
addl
das
inc
popf
or
fcmovb
add
loopne
dec
lea
mov
sbb
addb
sub
pushf
cli
addr16
and
sbb
dec
push
adc
int3
lock
icebp
add
sti
push
mov
mov
pop
inc
pusha
add
pop
loopne
adc
inc
dec
pop
rcl
dec
inc
dec
xor
or
lods
loopne
add
and
pop
mov
sub
sbb
xchg
cmc
xchg
mov
repnz
iret
or
mov
inc
rcll
enter
sub
mov
sub
clc
jo
mov
cmp
mov
inc
sub
jnp
out
orb
rorb
add
cli
or
xor
adc
cs
xchg
sbb
add
add
mov
cmp
mov
xor
sub
mov
pop
sbb
or
add
sbb
inc
jnp
pop
sbb
rep
or
imul
xchg
jecxz
add
and
and
pop
mov
and
mov
leave
mov
enter
cmp
mov
xor
sti
iret
adc
rolb
shrb
nop
adc
adc
movsl
push
hlt
sub
aam
cli
scas
push
sbb
imull
jp
adcl
sbb
push
xchg
stos
ret
inc
xor
or
mov
mov
sbb
test
xchg
ret
add
aam
lea
xor
sub
js
add
xorb
xor
popl
inc
xchg
mov
fsubrs
inc
ret
enter
cmp
test
mov
xor
sbb
pop
mov
adc
push
into
dec
icebp
adc
dec
aam
xor
ljmp
rol
fnsave
adc
sbb
test
into
xchg
adc
aam
mov
jo
add
push
xchg
push
dec
xchg
bound
dec
mov
mov
icebp
pop
lds
pop
xlat
push
psubb
icebp
pushf
add
push
xor
adc
sbb
insl
movsl
mov
jb
adc
add
daa
lcall
sbb
lahf
push
push
push
rolb
push
pop
mov
imul
mov
xor
add
test
rcrb
adc
fisubl
push
leave
jmp
call
pop
xor
add
ret
push
inc
sub
xor
xor
ret
sbb
sbb
nop
or
sbb
mov
cmc
mov
ret
adc
rcl
inc
loop
xlat
mov
lods
sbb
xor
push
mov
adc
mov
sbb
gs
sub
es
adc
and
and
push
ret
sub
mov
stos
pop
add
sub
test
mov
mov
adc
test
mov
cwtl
sub
xor
sub
cmp
bound
push
or
cltd
cli
cwtl
ret
xor
add
and
sub
xor
cmpl
sahf
and
or
cld
xchg
mov
xor
and
mov
imul
mov
add
sbb
lret
add
mov
sbb
jne
and
push
mov
pop
lds
pop
lock
lock
sbb
test
dec
xchg
mov
xchg
cltd
and
jecxz
cmpsb
dec
rclb
dec
mov
roll
pop
adc
repnz
sub
adcb
dec
add
sbb
call
fwait
jmp
inc
pop
xlat
div
ds
adc
lret
adc
xor
mov
dec
mov
je
cmp
mov
adc
adc
add
mov
adc
lods
cs
es
push
sub
mov
dec
adc
cmp
pop
add
and
add
shlb
cmpb
push
lea
inc
enter
out
lds
sbbb
imul
xchg
inc
xchg
xor
sahf
xor
movlps
rorb
inc
xor
jne
mov
dec
shrl
ja
adc
sbb
jp
test
into
cwtl
out
sbb
jl
ret
ds
lcall
add
sub
jno
rcrb
sbb
jne
cs
mov
notb
pop
add
inc
adc
inc
mov
mov
adc
sbb
hlt
push
jae
mov
mov
repnz
daa
inc
xor
stos
rorb
and
das
and
push
test
xchg
lock
pop
adc
dec
mov
push
push
add
mov
clc
adc
adc
hlt
enter
sub
ljmp
js
enter
js
xor
mul
or
js
sbb
sbb
sbb
push
add
arpl
out
and
mov
test
lret
dec
push
outsb
aad
enter
repz
movsl
inc
shrl
mov
add
or
cs
stc
pusha
sbb
cs
cmp
aam
sbb
cwtl
repnz
movb
pushl
adc
mov
add
add
aad
add
outsb
call
jbe
mov
sbb
addl
add
inc
cmp
mov
je
ss
add
sub
push
xchg
sbb
into
add
inc
mov
sbb
cmpsl
mov
bound
pop
xchg
aam
mov
shlb
shl
jne
rcll
or
push
stos
sbb
or
push
jmp
adc
or
cltd
push
add
mov
cmp
adc
pop
scas
and
addr16
push
xchg
mov
add
rolb
mov
xchg
add
ret
hlt
icebp
ljmp
sbb
or
inc
test
iret
sub
push
cmp
stos
add
out
shl
add
inc
jno
int3
into
add
bound
into
push
arpl
int
mov
into
psadbw
push
and
not
push
scas
stos
add
cli
lds
adc
sbb
bound
push
jge
add
mov
pop
imulb
pop
add
aam
or
es
sub
and
inc
mov
adc
lret
lock
adc
jl
sub
orl
sbb
pop
xchg
ljmp
add
and
or
inc
icebp
les
enter
add
xor
aam
push
fsub
mov
or
xor
jl
xchg
sub
movb
push
out
aad
aam
mov
jb
test
and
sub
sub
push
inc
decb
inc
or
pop
stos
mov
ss
pop
mov
repnz
and
jo
sub
aad
push
dec
inc
lods
mov
jmp
adc
xor
sub
in
xor
add
sbb
inc
jo
aam
into
stc
pop
scas
call
stos
movhps
add
pop
notb
xchg
or
add
pop
fistpl
xor
dec
add
xor
or
int
and
push
cmpb
sti
and
sbb
cmpsl
mov
sub
push
mov
aad
insl
lods
push
ss
lea
ror
roll
mov
hlt
lret
sbb
adc
push
clc
push
xchg
enter
lret
add
mov
sti
lds
pop
and
cmp
lcall
test
stos
test
jmp
pop
bound
test
mov
lret
push
lret
xchg
das
mov
aaa
or
test
push
push
aam
pop
frstor
push
sahf
or
sbb
sbb
test
inc
cmp
icebp
ficomps
adc
lods
movsl
push
outsl
mov
repz
or
jecxz
adc
pop
shrb
or
insb
xchg
pop
inc
sbb
aaa
add
lds
std
jb
mov
into
addb
test
jnp
notb
pop
inc
sub
add
cmpsb
push
inc
xchg
sbb
movsl
and
mov
add
je
mov
or
sub
cmp
or
cltd
and
cmp
es
test
dec
or
ljmp
test
or
xchg
faddl
and
movsl
push
pusha
loope
mov
push
pop
mov
add
jl
or
sbb
sub
insl
adc
sub
xchg
add
out
shlb
inc
fsubrl
sbb
mov
out
push
jmp
jne
andl
es
sbb
or
popf
xchg
in
dec
add
xor
bound
int
mov
lods
lret
negb
xchg
mov
scas
nop
shll
inc
xchg
sub
or
adcb
mov
stos
pop
pop
lock
sub
fstpl
sbb
lcall
test
mov
shrl
and
lret
rep
mov
stos
sub
xor
roll
bound
loopne
call
shlb
rcrl
loop
sbb
or
mov
mov
inc
pop
adc
lret
es
mov
or
push
adc
inc
cli
loopne
xchg
or
mov
leave
xor
mov
stos
dec
hlt
fs
rolb
mov
pop
in
inc
sbb
xchg
sub
sbb
ret
lret
sbb
je
pop
inc
scas
cmpsb
aaa
out
add
cmpsb
out
xor
add
jb
inc
jg
push
mov
mov
cmpsl
cmp
or
push
dec
call
adc
push
test
mov
cltd
add
clc
add
lcall
pop
adc
xor
push
and
into
push
addl
orb
cmp
cmp
jmp
js
jae
mov
adc
pop
push
repz
push
inc
int
mov
sub
pop
jp
ds
xor
or
andb
cmc
dec
add
mov
mov
adc
fstps
or
test
movl
insb
push
daa
subl
mov
inc
lods
call
dec
mov
fistpll
push
pop
mov
push
call
add
push
jg
clc
jmp
sbb
mov
push
orb
mov
push
lret
insb
lea
cmp
shrl
mov
in
jne
or
sbb
cmp
iret
sti
in
inc
scas
and
adc
xchg
dec
dec
pop
mov
mov
fsubrl
test
mov
add
inc
mov
incl
add
cmpsb
sarl
das
movsb
lock
adc
mov
dec
jne
sub
pop
in
push
stos
sbb
add
loopne
insl
xchg
leave
sbb
pop
subb
fdivl
push
vcvtsd2ss
stos
inc
negb
mov
inc
sbb
pushf
and
pop
xorl
loope
lcall
or
lods
bound
es
mov
enter
mov
enter
in
mov
xor
sbbb
dec
xor
pop
mov
loope
sub
mov
push
push
cmp
lcall
cmp
xchg
aad
jnp
int
push
pop
mov
stos
mov
mov
mov
jo
sti
xchg
adc
push
sbb
cmp
inc
enter
xchg
mov
rolb
mov
cmp
adc
cmp
and
mov
js
mov
data16
es
imul
xchg
xchg
cmp
push
shlb
inc
lret
xor
pushf
or
sahf
call
mov
mov
dec
cmp
sar
add
mov
jg
xor
push
or
mov
add
add
xchg
aad
lret
mov
and
push
xchg
lods
call
pushf
mov
dec
pusha
mov
sti
ret
mov
push
lea
sbb
inc
adc
test
xor
loopne
popa
sbb
lret
popa
insb
jb
pop
mov
lds
data16
popa
sbb
dec
movnti
test
pop
shll
inc
adc
push
mov
ret
or
inc
adc
mov
pop
add
sub
inc
shll
add
dec
mov
adc
mov
inc
adc
in
jb
xor
shrb
mov
inc
loopne
dec
sbb
mov
outsb
push
dec
pusha
ret
cmp
test
mov
xor
sbb
pushf
xchg
and
shlb
inc
out
test
pop
and
push
pusha
adc
sti
mov
jo
mov
push
push
inc
mov
stos
and
out
add
fcmovu
aas
lret
jne
pop
push
push
in
and
jo
rolb
xchg
repnz
cmp
pop
pop
cmp
addr16
mov
movsl
and
movsl
ljmp
sub
shrl
pop
cmc
aad
fwait
add
mov
dec
mov
inc
loopne
push
mov
cmp
test
push
and
push
mov
repnz
push
or
jp
leave
mov
add
push
enter
sbb
adc
lcall
sbb
push
mov
sahf
cli
subl
adcl
mov
pushf
add
mov
lret
cmp
push
push
adc
push
push
je
cwtl
sbb
adc
out
sub
mov
pop
out
or
jp
ret
jmp
jne
mov
adc
aaa
scas
and
xor
mov
rcrb
xchg
cs
or
add
cmpsl
add
mov
push
pop
and
push
adc
push
jae
lret
cmpsb
ud2
rorl
mov
cwtl
mov
adc
inc
jmp
xchg
cs
lock
popf
fldcw
adc
adc
setle
sbb
fstl
adc
jbe
xor
bound
orb
iret
add
test
jae
xchg
mov
les
bound
cmp
sub
rolb
scas
andb
sub
lret
adc
xchg
shl
sub
je
sub
cmp
jl
repnz
shrb
ljmp
and
shrl
pop
loopne
aad
test
add
adc
pop
enter
fwait
cmp
and
lods
cli
xchg
enter
push
push
fcmove
mov
and
enter
xor
push
loopne
cmpb
fidivl
lret
into
fists
xor
xor
add
add
nop
sub
xchg
loop
adc
cwtl
test
enter
nop
jmp
add
pop
shl
call
jmp
or
push
hlt
jbe
pop
inc
jnp
repnz
push
enter
or
mov
add
xor
adc
xor
cmp
je
adc
pop
mov
push
and
or
dec
sahf
adc
ret
inc
push
movsl
mov
lcall
lock
and
fucomi
insb
add
inc
push
push
orl
lret
xor
or
jo
lcall
adc
addb
cli
repnz
mov
sub
or
mov
xor
lods
pop
imul
jle
lret
xor
push
jg
xchg
push
sbb
fucomp
mov
rcll
add
sub
pop
cmc
pop
push
add
inc
lds
push
pop
sbb
out
push
mov
adc
xor
sbb
ficompl
xor
cmp
push
and
push
pop
shll
or
add
leave
and
adc
aam
sbb
out
jae
mov
sub
mov
mov
dec
adc
out
inc
pop
jne
sbb
push
movsl
repnz
add
shlb
enter
insl
jge
sub
popa
fistpl
inc
xchg
mov
inc
mov
jne
loope
mov
repnz
orb
in
xor
lds
jne
lret
push
xor
adc
sbb
lds
out
enter
sbb
das
cmp
mov
pop
or
and
adc
inc
insl
es
stc
xchg
test
inc
xorl
stos
and
cli
add
add
xchg
shlb
adc
inc
roll
cwtl
lock
inc
sbb
pop
loopne
sub
lock
test
lock
es
out
adc
add
cmp
call
leave
ret
pushf
mov
sbb
xchg
sti
sbb
mov
mov
jae
xor
stos
adc
roll
pop
inc
adc
outsl
add
out
jo
test
daa
cwtl
sub
daa
push
lret
sub
mov
add
and
inc
out
cmp
loopne
mov
sub
add
stos
je,pn
rorb
or
adc
mov
pusha
stos
pop
fwait
not
inc
in
add
jmp
insb
mov
or
mov
mov
jp
add
ja
cli
add
stos
popf
nop
add
dec
ret
rcll
mov
cmpsb
mov
sbb
and
pop
bound
push
mov
xchg
xchg
push
sub
jle
icebp
adc
or
pop
inc
mov
or
cmp
xchg
roll
sbb
ret
div
fcomps
lret
lahf
pop
sbb
pop
cmp
addb
ret
or
lock
mov
shlb
mov
or
ljmp
pop
adc
je
ret
mov
dec
sbb
and
clc
jno
xlat
xchg
dec
mov
push
sbb
mov
inc
shlb
xor
or
sbb
add
xor
ljmp
cld
pop
xor
or
xchg
stos
call
or
sbb
mov
xchg
jmp
pop
pop
lahf
mov
add
xchg
fidivl
inc
sub
jb,pn
add
mov
cmp
rolb
xchg
inc
sbb
loopne
loopne
ljmp
ret
adcb
stos
or
idivb
scas
push
inc
leave
push
mov
mov
ds
pusha
les
jmp
jo
inc
test
adc
push
add
jle
or
inc
push
mov
mov
les
addl
jmp
xchg
cli
inc
sub
addr16
adc
sahf
jb
cltd
enter
add
mov
leave
sub
aad
adc
enter
test
add
lret
lcall
mov
sahf
push
adc
dec
aad
mov
sar
mov
pop
inc
test
add
cmp
pop
movl
pop
mov
stos
loopne
push
imull
movsl
jb
mov
and
ljmp
mov
in
or
scas
lea
into
hlt
dec
mov
dec
mov
test
loope
sbb
xor
sbb
mov
ja
inc
test
test
fsubr
call
cmpsl
clc
sub
and
repnz
or
and
mov
aas
or
das
int3
push
loopne
push
cmp
push
jns
push
test
add
pushf
sbbb
call
push
adc
and
dec
repz
and
ss
int
jb
mov
out
dec
scas
clc
addb
test
inc
push
jmp
movsb
enter
add
test
lock
aad
leave
shrb
mov
jo
loope
push
sub
inc
es
cli
jp
mov
and
or
cmpb
lock
cmp
jp
stos
push
roll
jmp
out
or
scas
andb
mov
hlt
aad
stos
sbbl
sbb
jp
mov
xchg
mov
sbb
mov
cmovg
add
loopne
cmc
popa
lods
add
pop
outsl
sti
cmp
jbe
push
nop
jae
cmpl
dec
dec
aaa
push
add
pop
enter
lods
push
push
mov
ret
push
cs
fwait
enter
pop
cltd
or
xchg
imul
cmc
and
pop
inc
push
push
mov
cmp
add
pop
rcrb
lea
lds
inc
test
lahf
or
mov
ret
xchg
dec
inc
push
in
int3
enter
mov
imul
cltd
jb
xlat
orb
add
sub
je
jb
push
call
lcall
test
jne
mov
jae
mov
sarb
rol
mov
das
ret
push
mov
mov
mov
pop
hlt
adc
rolb
jge
add
pop
data16
loopne
fmull
icebp
mov
jp
jae
outsb
jbe
adc
push
add
add
into
mov
adc
or
imul
arpl
lcall
js
jne
enter
pop
leave
sbb
lret
rolb
adc
mov
scas
mov
push
pop
pusha
inc
cwtl
add
mov
test
bound
mov
data16
xor
aad
rcrl
hlt
adc
stos
adc
add
xchg
sub
lds
call
add
xor
push
imul
sbb
pusha
push
addr16
xor
scas
push
xchg
mov
inc
push
into
in
sarb
sbb
mov
jp
mov
sbb
pop
not
jge
jne
lea
sub
icebp
or
sbb
gs
shr
inc
sbb
push
ja
shlb
js
dec
int
mov
andb
mov
stos
test
popf
or
add
orl
adc
add
adc
or
in
ret
cmp
push
mov
lds
mov
dec
lock
mov
adc
sub
call
gs
rol
add
mov
fabs
rcrb
pcmpgtw
cmp
imul
mov
push
pushf
cwtl
inc
sbb
insb
pop
xor
or
mov
jmp
or
or
adc
mov
cmc
pop
adc
popa
push
movsb
sbb
sbb
pop
and
fdivp
jnp
mov
mov
xchg
mov
sub
or
jp
pusha
pop
xor
adc
push
loopne
js
dec
or
pop
and
mov
jo
hlt
mov
cmc
popf
push
test
xchg
push
jl
lods
sub
cmpsl
jb
or
lock
push
push
mov
xchg
add
sub
icebp
out
adc
adc
bound
add
inc
movsb
xchg
insb
repnz
adc
pop
addr16
add
push
mov
add
pop
pop
aam
sbb
test
cmc
rcrb
push
lea
in
dec
dec
loope
testl
pop
inc
push
js
mov
stos
bound
ljmp
pop
loope
mov
and
cmp
jbe
popf
push
loop
fcompl
jmp
or
lds
incb
push
xchg
or
int
add
mov
push
cmp
or
cmp
dec
add
add
adc
sbb
jno
mov
sbb
call
out
sub
adc
mov
dec
repz
js
inc
lock
mov
aam
rcl
hlt
dec
xor
sbb
sbb
mov
enter
pop
sbb
inc
inc
jns
xor
add
mulb
clc
and
adc
aad
out
inc
push
stos
push
xor
sarb
je
mov
pushf
push
or
dec
andb
mov
add
subb
inc
mov
ret
imul
mov
sbb
mov
mov
sub
sub
push
inc
xor
sbb
inc
jb
pushf
add
stos
or
adc
xor
sub
add
push
or
mov
fcomps
sbb
mov
pop
push
jo
cmp
into
inc
mov
cmc
add
or
inc
push
call
cmpsb
jo
adc
push
dec
mov
push
cwtl
mov
outsl
scas
cs
je
mov
xchg
lret
mov
movsl
popa
jb
add
xor
cmp
dec
pop
pusha
push
xor
lea
das
in
pop
rolb
dec
or
shrl
push
cmpsb
adc
call
fs
xchg
mov
push
adc
arpl
mov
xchg
mov
jbe
loopne
mov
xor
lahf
lret
hlt
roll
mov
adc
adc
out
and
and
iret
mov
mov
cmpsl
push
push
cmp
adc
enter
ret
lret
add
xlat
shrb
jo
add
add
push
subb
popf
ljmp
add
or
scas
enter
jp
pop
imul
mov
sbb
jbe
dec
push
pop
adc
lock
xchg
or
add
adc
out
stos
dec
push
lret
stos
mov
push
xor
sub
jb
jl
inc
push
les
arpl
mov
rorb
and
pusha
enter
pop
insb
shll
add
sbb
mov
int3
pop
add
stos
cs
jne
and
roll
jb
adc
int3
adc
icebp
lret
sbb
bound
xor
xor
lods
mov
sbb
decl
cmp
xor
add
andl
xchg
xlat
push
inc
add
sbb
cmp
add
out
xchg
call
sub
xor
xchg
loop
outsb
sub
xor
and
mov
sub
mov
push
leave
jmp
sub
push
inc
inc
push
push
pop
call
stos
xor
or
outsl
das
inc
dec
inc
sar
add
and
push
idivb
cmp
pop
xchg
jge
pop
or
ret
mov
movw
xchg
sbb
dec
fdivrp
or
push
pusha
adc
mov
jmp
mov
push
shlb
pop
xor
insb
add
jnp
leave
outsl
or
adc
js
ljmp
push
insl
push
lods
cli
cmp
push
adc
push
or
in
insl
mov
rorb
sbb
rorl
repnz
jo
ljmp
aad
enter
test
repnz
ret
jbe
jae
adc
push
test
leave
xchg
divb
or
jne
sbb
adc
jp
cmp
ds
or
clc
add
add
push
mov
push
sub
mov
and
adc
jno
and
and
lods
sbb
cmp
pop
loope
mov
out
bound
pop
add
sbb
mov
mov
inc
pushf
orb
pop
adc
test
pop
data16
push
in
cmp
ljmp
xchg
or
lahf
ret
jo
push
mov
push
push
push
daa
lret
in
jle
xchg
stc
adc
adc
pop
inc
jae
pop
dec
or
inc
daa
and
or
add
mov
leave
lret
lret
ret
stc
adc
or
shrl
adc
xchg
adc
mov
test
loopne
xor
cmp
sahf
imul
fmull
cltd
fsubrs
pushf
pop
in
aad
pop
lock
stos
outsl
xchg
lret
mov
or
push
cli
add
push
std
sub
rcrb
lret
adc
orl
sti
popf
sbb
aad
and
test
sahf
mov
sub
jb
xorl
ljmp
inc
cmpsb
sysexit
test
add
ret
sub
stos
push
mov
or
xchg
sub
xor
aaa
add
jp
nop
xlat
mov
adc
adc
ljmp
popa
lcall
push
loope
mov
popa
iret
xlat
push
rcr
lds
call
sbb
sbb
cmpsb
cld
dec
stos
inc
cltd
mov
aaa
and
sub
fs
sbb
pop
sbb
orb
enter
loope
pop
lods
mov
jl
decb
loop
les
add
pop
les
fisubl
fstps
add
inc
pop
inc
lds
jo
popf
add
pushf
sar
push
rclb
lock
xchg
xchg
test
sbb
add
adc
pop
stos
cmpsl
pop
pop
push
cwtl
mov
mov
xor
mov
aad
aaa
data16
push
pop
or
mov
mov
xor
xor
repnz
mov
mov
divb
jo
add
pop
nop
ljmp
sbb
sbb
addl
loope
jb
dec
outsl
add
clc
mov
lds
or
xchg
pop
xchg
push
adc
jo
lcall
pop
mov
enter
and
test
mov
enter
lret
mov
nop
notl
xor
sbb
jge
pop
icebp
fdiv
lea
xor
push
adc
mov
push
add
and
inc
lods
inc
jne
mov
loopne
inc
pop
rol
add
fs
pop
mulb
push
add
gs
add
addb
in
mov
fisubrs
loopne
test
add
push
xchg
add
repnz
mov
cmp
mov
xchg
and
mov
jae
jp
ja
push
add
jge
subl
mov
pop
pushf
mov
dec
fs
mov
adc
insb
loopne
inc
add
loopne
jne
repnz
sarb
push
jno
rorl
xor
or
stc
or
cmpsl
dec
add
icebp
pop
or
sub
xchg
call
sub
shll
mov
or
mov
stos
icebp
mov
or
cli
pop
jne
mov
dec
je
xlat
or
pop
adc
pop
and
and
push
inc
push
stc
xor
jl
adc
or
loop
inc
inc
lds
push
subl
lods
loop
xchg
aaa
leave
in
sbb
inc
or
sub
inc
rol
sbb
or
cmp
adc
sub
arpl
cmp
enter
or
inc
xchg
sub
popf
jg
es
inc
sbb
or
imul
sbb
cli
pop
in
ljmp
addr16
sahf
or
les
mov
enter
sbb
aad
in
xchg
rcll
add
sub
cwtl
sbb
xor
or
push
sbb
mov
popf
enter
dec
xchg
testl
or
shl
add
repz
inc
in
aam
push
add
dec
enter
adc
sbb
stos
sub
test
sbb
out
fsubs
test
push
sbb
xchg
dec
xorl
lea
aas
lock
sbb
dec
inc
jp
jbe
sub
scas
push
scas
lds
mov
lcall
mov
or
or
dec
lods
shrl
adc
xor
add
push
jmp
cmp
imul
mov
inc
enter
adc
sbb
push
nop
in
ss
rorb
push
xrelease
in
push
add
test
arpl
add
add
pop
rolb
adc
cwtl
inc
insl
sbb
fistps
fwait
sbb
pop
push
cmp
cmp
sub
xor
rorb
adc
inc
xchg
stos
and
les
xor
lcall
push
sbb
xor
call
push
jo
jo
jl
cmp
inc
and
imul
jl
jb
dec
ret
stos
data16
add
ljmp
test
pop
or
ret
add
andb
add
mov
pop
clc
adc
into
int
sbbl
scas
or
cmp
stos
cmp
pop
stos
outsb
adc
fmull
push
mov
sbb
adc
push
rcrb
and
xchg
je
or
or
xchg
lret
or
and
pop
cmp
and
xor
insb
xchg
or
mov
push
jbe
ret
mov
and
adcl
xlat
pop
xchg
pop
adc
es
inc
movsb
mov
sbb
and
jo
pop
js
rclb
lock
int
xchg
pop
movb
adc
dec
or
and
stos
adc
push
or
andl
aad
and
adc
das
or
lea
sub
addr16
clc
cmc
pusha
pusha
enter
rcrb
insb
jl
loopne
push
sbb
sbb
sbb
dec
sbb
or
mov
jmp
add
and
pop
shrl
sbb
or
jae
add
xor
xor
pusha
mov
test
xor
lock
pushf
inc
out
cmp
int3
mov
and
sub
adc
push
popa
push
mov
sbb
clc
test
popa
adc
aad
adc
jmp
and
push
jg
sub
push
loope
mov
xchg
ret
push
or
loopne
jmp
ret
push
repz
push
pusha
xor
xor
inc
scas
cmp
push
push
dec
shlb
mov
mov
add
or
popa
shl
mov
shll
inc
mov
addb
xchg
test
mov
cli
hlt
mov
hlt
loopne
adc
addr16
add
inc
sbb
addb
push
push
xor
and
loope
or
dec
setns
leave
shll
repz
test
fdivrl
sbb
pop
add
rcll
test
rcll
jb
mov
sbb
or
xlat
or
xor
fs
inc
aas
adc
sti
and
ss
or
xchg
xchg
xor
and
mov
sbb
dec
fisubl
mov
jp
addl
lds
pop
movsb
xlat
repz
mov
sub
cmpb
mov
in
mov
pop
xchg
mov
mov
inc
and
dec
out
adc
stc
adc
xchg
lock
fisttps
xchg
cld
into
cmpsl
in
cltd
pushf
adc
xchg
mov
xchg
dec
cli
adc
mov
pop
stos
rclb
sbb
popf
outsl
lods
enter
and
push
jp
add
cs
pop
mov
idiv
inc
sbb
fcmovnbe
mov
sbb
push
mov
jno
mov
aad
mov
add
cmp
xchg
fldl
imul
or
ds
lds
mov
or
hlt
pusha
sahf
mov
pushf
call
sub
scas
push
adc
jne
cltd
into
jmp
mov
cmp
or
and
xor
dec
push
sub
sahf
aad
rol
and
stos
mov
sbb
sbb
push
mov
inc
incb
add
push
mov
pusha
and
sbbl
js
adc
add
adc
pop
test
or
push
mov
adc
mov
cmp
stc
xor
cli
sbb
test
or
rcrl
popf
sbb
insl
add
adc
sub
push
mov
cmp
cmp
sub
mov
add
cld
inc
movl
pop
push
das
mov
pop
lods
test
inc
cmpsb
imul
test
inc
pushf
das
stos
or
gs
cmpsb
inc
xor
push
outsl
pusha
and
xor
repnz
mov
rolb
sbb
mov
xchg
mov
rorl
pop
rolb
mov
or
or
sbbb
ret
loopne
push
test
sbb
add
push
pop
fimuls
pusha
enter
sbb
shrb
adc
add
cmp
xor
push
fwait
jb
dec
adc
push
or
cmp
faddl
jo
mov
das
pusha
hlt
test
mov
xor
xchg
sahf
addl
inc
and
sbb
mov
inc
cmpsb
sarb
mov
inc
or
clc
xor
cli
mov
rcr
push
sub
mov
out
adc
push
lock
dec
cld
jns
mov
or
int3
add
or
mov
cmp
fcmovu
mov
adcb
daa
pop
sub
out
sbb
stc
add
outsl
nop
repnz
push
inc
push
push
mov
add
inc
mov
les
add
cmp
ljmp
mov
mov
mov
popa
lock
push
lret
rcll
test
icebp
cltd
sub
jl
mov
mov
add
push
daa
mov
ret
push
mov
sub
cmp
clc
ficoms
subl
pop
push
mov
mov
loop
inc
out
or
or
and
in
add
lcall
or
fwait
mov
insl
dec
mov
rcll
hlt
inc
xchg
pop
pop
cmovs
mov
cmp
and
inc
sbb
adc
inc
vxorps
arpl
mov
mov
lods
push
inc
xor
faddl
cwtl
and
cmp
pop
xchg
mov
dec
dec
enter
adc
fiadds
mov
and
or
sbb
mov
popa
sub
jo
cmp
and
fs
pop
adc
in
leave
add
and
in
mov
inc
mov
sbb
aad
les
and
add
sarl
cmp
push
mov
pop
pop
dec
int
add
mov
or
pusha
dec
or
xor
mov
mov
cmp
out
das
sub
mov
insl
mov
popf
call
test
lret
shrl
sbb
dec
dec
icebp
mov
fdivrl
jae
ljmp
jb
pop
loope
jne
sub
movl
sub
add
mov
mov
rorl
ljmp
mov
out
inc
je
push
xor
out
lret
sbb
push
inc
rclb
pop
pop
popf
adc
popa
xor
xor
add
out
mov
stc
and
and
in
push
or
test
xchg
ljmp
or
jp
pop
cmp
mov
loopne
push
push
pop
inc
rol
in
xor
adc
add
jle
xchg
and
test
loopne
test
sarb
je
bound
dec
scas
and
add
mov
rcl
inc
or
sbb
pop
xchg
push
xchg
pop
addl
pop
mov
loop
test
enter
lock
in
icebp
lock
rcll
mov
pop
push
sbbb
outsb
sub
mov
pop
adc
shlb
mov
xor
cmpsb
mov
ja
test
push
aam
mov
sub
xchg
adc
adc
out
xlat
xchg
call
push
xchg
mov
cmp
inc
pop
or
push
les
call
cwtl
mov
xchg
fimuls
loope
popf
into
testb
and
or
jns
rcrb
ret
dec
push
daa
call
subl
shrb
add
sub
fldenv
or
jne
shll
jecxz
add
inc
sahf
lock
mov
cmp
pop
or
mov
or
and
mov
mov
push
imul
cmpsl
sub
icebp
jp
out
adc
add
push
daa
add
ret
xor
sbbl
pop
cmp
push
mov
test
add
inc
sbb
das
repz
jmp
jge
dec
add
sub
popf
aaa
cld
popa
push
or
sahf
movsl
dec
int3
mov
data16
jo
pop
sub
adc
pusha
mov
push
pop
jo
add
pop
adc
out
pop
jb
cmc
cmp
subb
and
pop
pop
or
jno
rclb
dec
hlt
sub
lret
mov
mov
mov
inc
ja
sbb
test
pop
sub
subb
sbb
cmp
push
and
and
mov
lock
cli
cmpl
jl
mov
mov
push
mov
xchg
mov
pop
lret
add
dec
jle
and
sbb
jo
pop
cwtl
xchg
sub
test
pop
cltd
out
push
jb
out
repnz
aad
mov
or
es
cmpsb
imul
adc
inc
pop
subb
mov
cmpsb
jp
loopne
jne
mov
xchg
repnz
add
sub
add
hlt
adc
dec
inc
push
xchg
add
sbb
inc
inc
xor
ror
je
jae
enter
dec
push
popf
xchg
add
incb
jae
push
rclb
lods
sbb
les
dec
or
insl
and
cmp
cmp
or
cli
adc
fcmove
jae
mov
js
mov
or
cmp
push
test
push
sub
inc
or
shl
andl
sbb
pop
inc
jg
jo
xor
lods
mov
pop
xchg
in
ret
bnd
cs
test
movsl
cmp
mov
add
and
std
subb
jle
call
adc
test
adc
outsb
adc
rcll
adc
aaa
repnz
adc
subl
scas
mov
pop
sbb
push
or
jle
leave
sub
add
test
add
pop
sti
leave
sbb
cli
and
adc
lds
sbb
and
push
mov
xchg
mov
inc
sbb
push
inc
rclb
pop
jae
test
orb
test
add
add
or
cmp
inc
adc
mov
mov
push
stos
push
sbb
sbb
sbb
sub
mov
inc
cmpsl
rcr
mov
add
xlat
or
pop
inc
icebp
inc
mov
push
pop
add
enter
push
mov
cmpsl
cli
sbb
mov
sub
into
roll
enter
mov
push
ljmp
xor
andl
add
xor
push
das
xchg
ret
lds
sub
sbb
ret
xchg
shlb
or
dec
mov
frstor
inc
getsec
xchg
jmp
adc
push
andl
mov
and
pop
lods
push
sub
pop
lds
mov
adc
pop
cltd
jo
fnstcw
pop
lock
ret
testl
sub
inc
sti
test
push
adc
data16
cmpsl
adcb
sub
pop
push
or
add
or
test
push
andl
jo
xchg
mov
shl
add
add
and
dec
xor
cwtl
mov
adc
mov
stos
pop
jne,pn
mov
adc
rorb
pop
or
xchg
in
adc
mov
and
call
xor
stc
and
stos
cmp
sbb
mov
cmp
imul
mov
inc
and
mov
icebp
mov
roll
jbe
es
mov
jno
inc
xor
call
push
cmp
test
add
pop
into
push
pop
popa
test
jl
sbb
add
cmpsb
add
inc
jmp
or
mov
ljmp
mov
xchg
les
mov
enter
mov
into
inc
xchg
cmpsb
add
rcrb
xchg
xchg
mov
cmp
inc
and
push
cs
ret
and
loope
stos
mov
pop
push
xorb
inc
dec
ljmp
add
addr16
sbb
jno
jbe
test
sbb
add
cmp
push
cwtl
add
pusha
sbb
in
cli
sub
mov
adc
and
into
mov
vmovss
adc
push
jno
xchg
bound
mov
ror
push
push
int3
mov
in
jo
rclb
rclb
or
add
sahf
mov
adc
push
adc
cli
cmp
into
mov
push
push
mov
es
inc
sub
push
aaa
fisubl
inc
test
adc
push
jnp
test
lds
sbb
cmp
adc
xor
dec
jmp
dec
inc
imul
fdivrl
and
mov
sbb
std
into
in
add
add
cmp
negb
movsl
mov
mov
or
popf
add
cwtl
lods
sbb
push
cmp
push
shll
push
pop
movsb
ds
cltd
push
mov
inc
leave
popf
cmpb
stos
cltd
mov
test
or
leave
stos
iret
decb
pushf
scas
adc
mov
scas
adc
and
dec
bound
sub
cmp
mov
pop
cs
sbb
pop
mov
rcll
stos
push
mov
jo
xchg
mov
int
shrb
mov
add
test
into
lcall
add
addr16
sbb
sbb
add
daa
pop
mov
pop
loope
adc
lea
and
stos
ljmp
subb
inc
mov
push
ljmp
dec
mov
sub
and
sbb
movb
enter
lock
js
mov
pushf
xchg
orl
mov
and
aam
loop
push
push
pop
adc
jno
pop
inc
jo
lret
loop
sub
pop
xor
cmp
inc
sub
push
mov
dec
cmp
adc
add
adc
push
sbb
adc
or
mov
xchg
sti
fadds
aas
xor
mov
push
add
xor
add
arpl
push
aam
je
sub
mov
daa
sub
xchg
cmp
mov
out
mov
xor
or
cmpsl
cmp
sub
rcll
and
fwait
cmp
sbb
repnz
shrl
je
sbb
push
push
add
pop
adc
js
mov
imul
mov
sbb
push
sbb
cmp
mov
mov
mov
sub
nop
or
jo
jb
sbb
add
adc
popa
pop
adc
cli
call
mov
inc
icebp
and
push
paddw
js
push
mov
inc
lcall
mov
or
sbb
lgs
push
push
addl
inc
js
adc
or
sbb
lods
dec
push
push
movsb
out
adcb
or
shl
sub
dec
insl
ret
xor
pop
movsl
push
sub
sub
push
add
or
ljmp
add
pop
xchg
std
loope
mov
add
mov
adc
pop
sub
jecxz
xchg
dec
pop
and
outsb
pop
cmp
ljmp
test
adc
mov
push
xchg
je
daa
sbb
mov
dec
jns
add
bound
jo
dec
pop
enter
shll
outsl
int
loopne
inc
je
or
lods
movsb
dec
daa
or
adc
inc
cmpsl
rorl
dec
add
es
ljmp
sbbl
jae
mov
pop
sbb
mov
shrb
int3
shl
adc
imul
inc
iret
adc
outsb
or
popa
push
xchg
shrb
mov
mov
sbb
adc
imul
adc
test
push
jb
dec
sbb
dec
xchg
xchg
aas
cmc
daa
cmpsb
xorl
inc
sbbl
jo
inc
call
test
icebp
push
sahf
shlb
adc
cmpsb
push
mov
pop
mov
pusha
aam
push
inc
cltd
je
mov
inc
cmp
adc
sbb
enter
add
or
jmp
cmp
inc
push
or
sub
sbb
xor
adc
push
cmp
mov
ret
test
push
cli
andb
pop
shlb
test
jle
adc
int
sub
fwait
es
dec
cmp
aam
loop
or
jnp
xchg
sbb
or
test
xchg
xor
hlt
add
sbb
inc
mov
pusha
testb
and
push
sub
shrb
test
or
mov
xchg
out
pop
test
cmp
or
lds
or
pop
mov
dec
repnz
pop
push
jecxz
das
adc
xlat
test
insl
mov
jp
cmp
mov
pop
adc
or
call
xchg
call
add
shll
or
push
jb
xor
xchg
dec
ffreep
shlb
and
xor
jno
inc
cmp
inc
imul
popa
jo
ret
push
in
push
les
or
jb
push
ljmp
push
sarb
adc
push
lock
ficompl
push
popl
sbb
dec
add
push
mov
push
insb
adc
cmp
cmpsb
jmp
cmp
cmp
pop
or
and
push
xor
ret
mov
push
mov
cltd
dec
addw
or
push
pusha
sbb
add
sub
cltd
add
xchg
cmpsb
mov
push
cmpsb
add
sub
test
pusha
pusha
push
or
inc
roll
repnz
adc
add
xor
xchg
stos
fcmove
push
outsl
sbb
fadd
inc
pushf
aad
sti
adc
fwait
push
mov
push
mov
rorb
icebp
mov
pop
pusha
xor
jecxz
loopne
daa
inc
int3
mov
and
push
cmpsb
push
jne
repnz
push
push
xor
stos
add
inc
sbb
adc
xorl
sub
mov
daa
ret
popa
adc
xor
xorl
lret
pop
pop
sbb
or
es
push
push
push
adcb
popl
cmc
and
jge
or
jnp
mov
jge
pop
aad
loop
inc
lods
or
push
movsb
or
aam
lock
inc
sarl
jmp
and
xchg
les
test
jnp
in
leave
push
adc
adc
jp
mov
nop
jb
test
movsl
imul
adc
lret
add
dec
dec
pop
lret
shlb
push
mov
add
mov
testb
aam
add
pop
into
cmc
or
insb
mov
mov
lods
js
shlb
or
jmp
and
mov
mov
add
es
push
push
fwait
xor
in
shlb
jno
sbb
or
xor
fildl
adc
mov
and
push
mov
daa
mov
cmp
mov
push
push
adc
sub
out
inc
xchg
cwtl
testb
or
or
mov
lret
sub
xchg
imul
mov
add
lret
sbb
mov
cmp
dec
cmc
rorl
add
pop
scas
sub
fwait
lahf
inc
mov
xchg
insb
dec
into
push
cmp
rclb
mov
mov
xor
dec
adc
sub
je
mov
adc
loop
enter
inc
aam
clc
cwtl
mov
cmpsb
or
push
push
leave
ds
push
insl
pop
jnp
fcomps
pand
repnz
jmp
jp
pusha
repnz
mov
insl
or
push
inc
mov
pop
jo
push
aad
in
mov
pop
inc
push
lods
test
pop
inc
xor
pop
into
push
xchg
andl
pop
adc
sub
inc
ds
and
pop
stos
push
inc
or
inc
subb
mov
or
ffree
aam
add
and
and
pop
cmp
add
adc
push
lds
or
loop
inc
sub
loopne
mov
icebp
lods
stos
cmp
adc
lds
push
lods
fisubs
decl
jo
stos
ret
push
sub
repnz
sti
mov
inc
push
xor
mov
add
or
addb
and
mov
xchg
dec
clc
mov
dec
call
and
add
xor
cmpsb
jge
ret
jmp
push
js
mov
and
inc
mulps
ret
in
pop
mov
cmp
loop
mov
xor
sahf
adc
xor
jno
stos
movsl
push
hlt
sbb
fldenv
and
jo
je
scas
sub
push
int
lods
sub
mov
add
data16
sbb
sub
dec
xor
bound
add
mov
xchg
add
cmp
or
adc
add
js
stos
adc
inc
lock
jmp
jg
add
jb
push
pop
add
mov
rclb
lods
push
lds
jo
mov
leave
add
sbb
es
dec
dec
cmp
xchg
dec
adc
adc
xor
and
add
shll
add
rol
add
jae
push
push
gs
hlt
jns
mov
push
and
sbb
imul
fistpl
aam
xchg
je
push
sahf
enter
and
xchg
loope
mov
mov
jne
adc
mov
push
mov
adc
scas
and
js
mov
push
sbb
push
test
add
loopne
sbb
mov
inc
cmpsb
add
stos
dec
mov
pop
mov
jecxz
out
push
mov
jmp
mov
or
fwait
push
pop
insb
es
pop
xchg
popa
add
into
inc
and
test
sub
sub
add
adc
stos
push
dec
or
inc
lods
pop
adc
js
loopne
test
ret
sub
scas
fiaddl
je
mov
nop
xchg
xchg
jae
sub
adc
std
push
dec
cltd
shrb
or
sub
sahf
dec
mov
leave
mov
rclb
xor
lret
ret
mov
pop
mov
add
js
hlt
sub
cld
pop
ljmp
imul
pop
shufps
cmpsb
push
lods
adc
inc
rolb
sbb
push
js
pop
sbb
ja
pop
icebp
push
xor
rcll
bound
sub
or
out
or
mov
nop
andl
lea
cvtpi2ps
adc
sbb
es
cwtl
cmp
scas
call
shll
push
sub
sbb
add
or
add
stos
add
cmpsl
bound
inc
cmp
in
push
loopne
add
push
cmp
xchg
add
mov
inc
subl
fstpl
orl
xor
inc
shll
or
xchg
test
stos
add
mov
shl
mov
cli
or
mov
lcall
or
add
and
test
mov
adc
adc
xchg
xor
call
subb
mov
push
jmp
inc
xor
add
mov
out
enter
enter
cmpsl
in
xchg
inc
shrl
sub
test
push
and
add
cmp
into
or
mov
testb
rcl
fs
inc
dec
mov
in
shlb
sbb
add
mulb
xor
cmp
jo
and
popf
jae
add
push
test
push
scas
xchg
or
or
das
stos
adc
ret
dec
pusha
stos
mov
jo
ss
push
and
cmp
lock
pop
adcb
add
push
lods
mov
inc
jmp
xor
sbb
cmc
push
ret
xor
xor
push
add
shl
fsubl
cmovnp
and
mov
xor
imul
cmp
loope
mov
sub
lock
or
mov
push
roll
push
rorl
push
push
inc
xor
icebp
xor
add
clc
sbb
dec
xor
add
xchg
insl
push
inc
in
sub
pop
pop
int
loopne
das
dec
mov
dec
adc
orl
cmp
pop
inc
push
lds
adc
push
push
scas
movsl
divb
sbb
lcall
add
push
add
ja
inc
xor
sub
dec
in
mov
add
adc
jbe
loope
in
adc
adc
or
add
push
lea
mov
adc
popf
pop
add
dec
fisttps
and
cmp
sbb
aaa
sbb
and
in
pusha
or
cmp
adc
mov
icebp
in
adc
jae
loope
loopne
fidivl
nop
jecxz
or
es
jle
push
loopne
ror
iret
in
jb
roll
aad
push
cmp
scas
and
adc
xor
mov
push
jne
andl
aam
rolb
add
dec
mov
xor
jae
js
mov
sahf
add
xor
adc
or
daa
cmpsb
dec
add
add
test
adc
lcall
dec
pop
push
bnd
mull
push
roll
mov
cmpsb
xor
or
cmp
jp
stos
idivb
jno
push
jp
into
sub
push
dec
and
push
push
sbb
and
scas
push
fsubs
sbbl
lds
add
sbb
loopne
sub
fcmove
divl
into
out
xchg
mov
push
cmp
mov
adc
pop
inc
sbb
mov
enter
add
bound
pop
push
in
cltd
je
pop
outsb
dec
rclb
popa
jp
mov
ret
mov
or
pop
mov
andl
pop
xchg
or
or
movsl
fwait
sbbb
sub
test
inc
xchg
pop
shrb
jge
and
xchg
cli
adc
call
sub
push
aad
dec
mov
inc
cmpsb
sub
leave
inc
testl
in
out
xchg
or
mov
out
push
mov
mov
add
inc
push
ss
jp
inc
popf
orl
ret
push
mov
add
sbb
shlb
sub
sbb
adc
fisubrs
pop
and
inc
mov
mov
or
mov
inc
roll
daa
mov
mov
adc
or
add
push
fisubrl
pop
in
inc
cmpb
mov
adc
or
popa
push
pop
sbb
and
inc
roll
push
sarb
and
js
cli
test
xor
sbb
sbb
stc
dec
mov
sub
adcb
repz
pop
cmc
add
ret
mov
mov
les
inc
mov
jne
rcrl
test
push
dec
out
cli
cmp
jmp
or
outsb
dec
bound
adc
dec
add
inc
out
aad
mov
push
inc
pop
push
push
mov
pop
or
dec
enter
inc
ret
xor
je
push
test
mov
enter
repnz
xor
jge
add
rorl
adc
sbb
push
jle
adc
xlat
aam
pushf
ret
into
lcall
enter
xchg
mov
pusha
mov
add
shrl
cmpl
movl
lcall
adc
and
adc
das
pop
push
sbb
sbb
lds
dec
movq
and
push
add
cmp
icebp
repz
mov
mov
jmp
shll
xor
or
dec
lcall
add
push
loopne
dec
out
loop
icebp
dec
pop
cmc
push
outsl
add
std
in
das
xor
shrb
popa
mov
xor
mov
rorl
mov
js
mov
shl
push
jle
jo
push
xchg
cs
inc
fs
adc
add
jo
imul
cmp
es
shrb
adc
xor
js
pop
adcb
repnz
fs
test
jae
add
jno
mov
les
ret
inc
xor
inc
push
xor
loopne
or
jno
jmp
lret
in
adc
jns
add
ret
repz
outsb
lret
cwtl
add
xorl
pusha
or
xor
aaa
das
test
jecxz
cltd
pop
stos
sbbb
addr16
push
mov
sub
fmulp
mov
pop
jno
inc
call
push
popf
shll
inc
adc
inc
hlt
jle
cmp
in
jo
push
xor
mov
andb
popa
mov
ljmp
push
mov
pop
lds
inc
mov
mov
addb
pop
scas
or
rcrb
daa
xor
push
out
mov
cmc
and
loope
adc
push
icebp
push
pop
inc
mov
adc
enter
xchg
loopne
rcll
push
sarl
adc
out
sub
or
pop
loopne
sub
pop
bound
call
lods
or
or
push
out
ret
gs
stc
sub
mov
inc
pcmpeqb
movsl
shl
sbb
mov
es
shll
test
mov
sub
xchg
incb
push
mov
subl
out
push
sub
cltd
test
adc
sahf
orb
call
or
cld
ret
cmpsb
dec
mov
icebp
jno
and
lcall
and
push
adc
mov
ret
roll
shll
add
sub
popf
inc
add
adc
sbb
or
mov
cmp
enter
xor
cmp
out
inc
xor
lret
jle
push
pusha
enter
pop
es
je
out
and
or
shr
sbb
xchg
xlat
shll
mov
data16
push
xor
add
push
shrl
loope
shl
inc
cmp
adc
cwtl
mov
and
lret
and
add
add
push
mov
enter
je
dec
cld
nop
shrb
dec
movsl
push
adc
pop
loopne
sub
ss
lret
aad
subb
push
push
inc
push
mov
and
sub
cmp
push
or
test
sub
shrl
lcall
sub
push
scas
hlt
mov
cld
push
or
xor
sbb
add
cmp
add
sub
or
shl
dec
rolb
adc
ret
adc
addb
add
icebp
sub
out
daa
cmp
jo
lret
sbb
add
jb
adc
mov
sub
stc
fsubrs
or
scas
xor
sbb
xchg
pop
push
aam
leave
add
push
aam
test
js
or
xchg
pop
adc
inc
adc
mov
out
pusha
and
add
enter
add
les
xor
or
dec
enter
mov
push
pop
and
jno
xor
pop
fistl
test
jp
filds
or
ss
adc
leave
cmpsl
add
mov
es
mov
xchg
inc
cltd
inc
mov
dec
mov
sub
add
or
cs
jae
push
push
popf
pop
andl
out
pop
int
ret
pop
test
out
repz
push
or
mov
inc
sbb
out
ret
loope
pushf
or
shl
mov
add
das
pusha
jo
or
jecxz
aam
test
or
adc
adc
or
mov
inc
adc
out
push
lret
aaa
lods
xchg
or
inc
in
mov
fimuls
sbb
fldenv
mov
cltd
pop
push
into
add
dec
push
cmp
shll
mov
ret
mov
out
or
mov
lock
loope
mov
sbb
fnstsw
stos
mov
faddl
pop
stos
push
add
pop
xor
lods
adc
lret
jp
ret
sbb
dec
xor
loopne
pop
sbb
shr
or
add
sub
or
sub
lods
fwait
mov
dec
jno
into
push
leave
push
out
lahf
push
movsl
push
lods
mov
xchg
or
pop
in
mov
rorb
push
dec
jg
sub
div
mov
lock
cmp
mov
scas
fmull
das
push
add
cmp
sub
pop
add
jmp
mov
leave
insl
sbb
ficoml
cld
sbb
aam
mov
pop
fcoml
gs
dec
test
sbb
mov
cs
mov
in
add
cmp
push
lock
test
add
les
sub
push
adc
and
adc
sub
es
xor
into
jmp
mov
lret
sbb
push
push
pushf
adc
mov
rolb
inc
test
cmc
shr
xor
ds
or
into
unpckhps
xor
movb
and
fwait
mov
lds
js
aad
pop
mov
stos
push
xor
add
pop
inc
sub
psubusw
cmpsb
add
dec
xor
inc
mov
flds
aad
movsl
mov
popa
int3
push
pop
lock
rol
hlt
jb
aam
lock
adc
test
jae
int
sysenter
pop
add
or
inc
adc
adc
dec
mov
xadd
sbb
adc
inc
arpl
bound
mov
mov
in
ljmp
lods
lret
or
push
mov
push
stc
jecxz
add
cmp
dec
lds
push
ja
cmpsl
mov
and
ret
xor
add
cmp
or
in
orl
xchg
rclb
mov
pop
mov
test
call
rcrl
xor
leave
fdivl
and
push
mov
inc
mov
mov
cli
adc
mov
les
or
mov
xchg
adc
mov
push
orb
lcall
adc
and
and
dec
jb
int3
or
pushf
pop
push
lods
lock
push
out
push
or
inc
sbb
test
scas
sbb
adc
mov
or
xor
xchg
push
adc
jmp
pop
les
lock
add
ds
test
stos
adc
aaa
rcr
mov
xchg
sbb
dec
inc
lret
sub
pop
jb
bound
push
ljmp
stos
mov
subl
xchg
pop
pop
cmp
push
mov
add
test
pop
movsl
add
dec
fs
jp
les
rcrl
jle
push
pop
decb
stos
cmp
stos
lret
push
pop
sbb
sbb
mov
jae
add
sbb
jmp
in
pop
cmp
xor
pop
int
movsb
and
push
and
jae
mov
add
stos
cltd
or
loop
push
inc
jo
lcall
mov
repz
cmp
addr16
int
adc
xchg
test
and
ret
and
mov
and
sub
shlb
das
or
test
xor
dec
lock
sbbb
xor
rol
mov
inc
lock
or
push
mov
sbb
data16
adc
sbb
dec
push
pop
or
push
cmp
call
nop
test
lods
loopne
call
and
push
inc
cmpl
mov
repnz
js
mov
pop
sub
sbb
add
jns
or
lret
push
or
push
into
mov
add
out
or
int
pop
jp
mov
aad
inc
xchg
arpl
stos
push
adc
push
inc
sub
pop
jo
lds
xor
jmp
jg
stc
push
sbb
notb
movsb
mov
xor
or
mov
dec
mov
inc
aad
adc
ret
pop
mov
fidivrs
add
adcb
xor
mov
cltd
stos
inc
int
popf
out
push
and
popa
mov
rcll
loop
jne
lods
loope
mov
sub
cmp
stos
bound
cmc
lods
add
push
or
xchg
bound
shll
fldt
ret
or
xchg
or
sarl
jo
out
mov
int
lret
and
xor
dec
shrb
test
push
xchg
or
inc
sub
sub
pop
aad
adc
fldl
add
cwtl
push
shlb
mov
sbb
and
xor
pushf
push
loopne
push
inc
iret
push
push
pusha
push
push
rsm
sbb
mov
stos
inc
mov
loopne
insl
test
or
mov
add
pop
xchg
xor
cs
mov
xchg
jl
pop
add
dec
clc
xor
pop
fisubl
sbb
sub
add
in
inc
cmp
dec
or
test
inc
jmp
add
xor
mov
inc
xor
fmul
sbb
test
cmp
scas
inc
add
push
cmp
std
rolb
jl
movsl
adc
insb
and
inc
pop
mov
dec
sbb
clc
add
test
mov
cltd
or
arpl
psubusb
jge
shrl
enter
rcll
ret
fisttpl
cmp
jg
or
xor
lods
lcall
add
push
pop
pop
mov
mov
pop
adcl
sub
scas
mov
shl
mov
or
inc
pop
push
pusha
stos
and
addb
push
daa
mov
or
mov
test
inc
xchg
test
sbb
and
inc
inc
or
mov
shll
lcall
inc
jge
sti
into
int3
rolb
sub
cmp
test
pop
and
adc
sbb
inc
popf
inc
push
in
js
xor
sbb
inc
fildl
sub
push
icebp
xor
mov
leave
insb
push
xor
adc
test
mov
pop
shrl
mov
inc
sub
cmp
push
aad
je
adcl
jmp
add
loop
or
sub
xchg
adc
loope
sub
xchg
stc
dec
pop
sbb
xor
push
sbb
xor
push
mov
mov
push
pop
repnz
xor
scas
inc
dec
lret
sbb
pop
or
dec
ljmp
or
xchg
adc
and
test
out
and
add
push
xor
mov
mov
push
sbb
adc
inc
lds
dec
imul
or
push
test
rol
cmpsb
subb
jp
add
xor
test
push
or
mov
jg
and
jecxz
or
aad
std
imul
lock
test
xlat
loopne
leave
cld
mov
or
mov
adc
cmp
cltd
sbb
pop
arpl
lds
enter
adc
add
leave
adc
loop
lea
add
aad
mov
adc
push
fldl
imul
add
in
shlb
shrl
add
imul
add
push
push
insl
fistpll
adc
pop
inc
xorl
adc
hlt
adcb
inc
sahf
dec
add
and
add
push
test
xor
addl
test
scas
push
sub
xlat
xchg
call
and
mov
xor
lods
and
mov
push
das
jo
push
and
stc
add
into
mov
pop
mov
xchg
add
xor
mov
lahf
movsb
js
pushf
stc
pop
adc
in
or
or
mov
mov
loop
adc
cmc
ljmp
hlt
pop
push
cmp
mov
push
mov
shl
test
mov
add
cmp
push
cmp
hlt
out
push
test
loop
cmp
mov
stc
mov
xchg
add
sub
ljmp
pop
inc
scas
inc
xchg
push
mov
mov
js
arpl
inc
add
push
inc
mov
out
mov
adc
shrl
and
and
xor
push
ja
cmp
cmp
addb
xor
sbb
mov
sbb
or
or
or
aam
push
mov
ljmp
mov
push
add
das
dec
xchg
dec
lcall
pop
push
or
or
mov
pusha
dec
mov
hlt
loopne
scas
ret
ret
add
pop
add
adc
add
adc
mov
push
lock
imul
sub
adc
xchg
and
sahf
pop
sbb
enter
call
sub
jne
xchg
shlb
fmull
pushl
lcall
pop
and
xor
insl
xchg
mov
lods
add
push
cmpb
pop
cwtl
loop
addl
adc
ret
xor
stos
mov
cmp
push
jge
jg
mov
mov
push
add
lock
jb
rolb
mov
push
mov
mov
cwtl
xor
ret
into
sbb
mov
sbb
pop
call
adc
dec
pop
jbe
add
loope
inc
leave
mov
in
jp
das
test
cmpl
and
sbb
sbb
sub
dec
ret
shrb
repnz
dec
insb
int3
or
test
cmp
jae
rolb
sbb
cld
push
and
or
inc
call
mov
add
dec
or
or
xor
mov
popa
lea
jo
add
fimull
adc
cmpsb
cmp
arpl
popf
gs
pop
les
call
popa
sub
push
jne
loope
pop
inc
and
push
in
add
das
and
jnp
push
addr16
fs
jp
push
sbb
ret
nop
dec
pop
lods
loopne
int
enter
xor
stos
andb
cmp
sbb
ja
or
sbb
out
lret
pushf
sti
sub
mov
nop
test
add
scas
jb
or
sub
ret
xchg
mov
test
or
mov
jno
push
and
push
fwait
push
lea
adc
mov
jbe
dec
pop
mov
cli
add
test
orb
mov
pushl
mov
and
mov
and
shl
test
pop
bound
lcall
xchg
sbb
lret
mov
lret
adc
adc
lds
dec
adc
lcall
mov
or
mov
sub
jl
clc
movl
sti
pop
xchg
aam
dec
and
iret
lahf
aas
jg
lret
outsl
push
xchg
push
mov
repz
adc
mov
rcll
lahf
aas
jg
nop
mov
int3
inc
mov
test
stc
repz
notb
aam
es
movsl
aas
jg
cld
cmp
je
jle
fdivrs
adc
lahf
push
mov
or
jmp
cld
stc
mov
jg
xchg
xlat
imul
cltd
adc
out
lahf
aas
in
inc
xchg
int
outsl
aaa
cltd
and
cld
stc
repz
mov
sbb
pop
iret
lahf
aas
jg
lcall
mov
mov
adc
repz
dec
jnp
jle
clc
aam
lea
aas
jg
sub
lahf
cmp
mov
out
shl
out
lahf
loop
inc
mov
shrl
jle
leave
fnstsw
cld
stc
inc
pop
mov
xor
add
adc
out
lahf
aas
sbb
rcrl
sub
cld
cld
stc
repz
pop
and
pushf
pop
negb
mov
insl
lea
push
vmovaps
xchg
test
out
lahf
aas
inc
out
and
add
and
xchg
pop
cld
stc
repz
fbstp
lret
jg
je
fwait
in
iret
cmc
lods
and
repz
and
loope
scas
mov
lahf
aas
jg
sub
mov
mov
stc
repz
out
in
add
mov
xchg
mov
aas
jg
cld
loop
sbb
cwtl
test
sbb
iret
lahf
into
adc
mov
adc
cld
stc
lahf
popf
movb
popf
xor
cmp
jp
out
aas
push
fwait
aad
dec
insl
mov
jg
cld
stc
sbb
test
add
out
inc
in
leave
lock
lahf
aas
sbb
jmp
movsb
sti
call
aad
cld
stc
repz
xchg
cltd
cmp
adc
inc
or
lahf
aas
jg
jnp
cwtl
xor
mov
sub
test
shll
pop
dec
cmp
add
imul
aas
jg
ja
cmp
adc
hlt
cld
stc
repz
movsb
mov
pop
xlat
movsb
mov
aas
jg
lock
sahf
lea
ja
dec
sub
repz
mov
lock
adc
insb
rcr
aas
jg
cld
xor
lret
pop
and
cmpsl
sub
repz
lahf
cltd
ret
and
imul
or
cld
stc
mov
dec
dec
sahf
stos
fs
adc
or
iret
lahf
aas
adc
jb
dec
jbe
mov
cld
stc
repz
jl
xor
pop
mov
lahf
aas
jg
jge
mov
lods
mov
stc
repz
push
insl
adc
cwtl
xor
in
insb
pop
lahf
aas
jg
repz
rorb
lock
stos
sub
mov
repz
xorl
pop
dec
dec
lret
xchg
aas
jg
cld
or
leave
jg
andb
enter
xchg
jmp
adc
mov
jg
cld
stc
jge
pusha
int
xchg
nop
js
push
mov
sub
iret
lahf
aas
enter
dec
and
sarl
stc
repz
fcmove
and
jnp
ficoms
iret
lahf
aas
jg
out
pop
push
mov
add
scas
push
cld
stc
repz
lret
in
jo
mov
lahf
aas
jg
repz
je
xchg
adc
push
jae
mov
jnp
stc
repz
test
sti
dec
dec
mov
out
xchg
dec
aas
jg
cld
push
add
popa
cmpsl
enter
dec
jno
repz
lahf
xchg
daa
cmp
push
sbb
cld
in
leave
cmp
or
mov
out
pusha
jecxz
sub
xlat
jge
push
sbb
lahf
aas
pop
stc
and
cmpsl
mov
or
lods
cmp
stc
repz
div
test
add
loope
nop
mov
aas
jg
cld
sbb
popf
int3
mov
dec
xlat
pop
jnp
in
daa
lahf
add
add
xchg
cld
stc
repz
addr16
inc
js
je
jno
mov
push
jno
mov
dec
mov
stc
repz
cs
call
jmp
fsub
xor
jg
cld
and
dec
jnp
mov
into
pop
out
or
scas
int
dec
cmpb
sbb
jg
cld
stc
push
popa
out
loop
pop
outsl
mov
cmp
mov
adc
aas
sbb
sahf
adc
je
not
xchg
pop
cld
stc
repz
adc
lret
lret
xchg
mov
iret
lahf
aas
jg
inc
xchg
or
shl
call
xchg
mov
in
cli
lahf
aas
jg
cmpsl
or
or
repz
repnz
mov
pusha
inc
les
sbb
jg
cld
lods
xor
mov
fistl
cmp
sub
repz
lahf
pop
pop
cmp
cmpsl
mov
fwait
adc
cld
stc
test
sbb
cmc
pop
test
jmp
out
lahf
aas
push
fcomip
popa
cmp
loope
flds
stc
repz
jne
cmp
cmp
iret
lahf
aas
jg
mov
cwtl
mov
add
stc
repz
psrad
dec
or
sub
in
adc
xchg
lahf
aas
jg
mov
sbb
addb
out
into
fimuls
out
orps
addl
ja
or
mov
sub
repz
cs
cmp
and
add
sahf
lahf
aas
pop
stc
sub
pop
cltd
jl
into
stc
xor
mov
iret
inc
and
fisubl
cmp
scas
aas
jg
cld
jl
mov
dec
push
jle
pop
adc
xlat
pop
xchg
mov
out
lahf
fwait
cltd
fcmovne
mov
subl
stc
add
mov
jp
daa
push
xor
jne
lods
stos
and
and
cld
cld
stc
repz
jb
inc
je
and
fimull
mov
fs
inc
pmullw
adc
cld
loope
cmp
dec
addl
pop
jb
std
lahf
dec
inc
jle
or
sbb
jmp
iret
or
mov
cmp
push
mov
ucomiss
cwtl
sub
in
mov
int3
stc
repz
nop
jp
cmp
adc
lret
insl
aas
jg
cld
jns
fstpt
jno
hlt
sub
loopne
repz
lahf
dec
sub
push
ret
jmp
jg
cld
stc
push
enter
shll
adc
lock
lret
cld
mov
mov
sti
stos
clc
nop
out
or
aas
jg
push
insb
inc
inc
xor
jmp
cld
stc
repz
add
push
clc
push
jmp
out
xchg
lahf
aas
jg
add
cmp
lret
je
push
leave
push
stc
repz
icebp
push
mov
add
mov
push
push
leave
fisubrl
fdivl
stos
cld
stc
repz
hlt
pop
lcall
shr
sbb
cmp
cmp
insb
andl
test
out
clc
xlat
out
dec
scas
jbe
popa
dec
sub
cld
lret
mov
mov
cmc
sub
repz
lahf
lcall
mov
lret
cld
stc
pop
push
in
push
int3
rcll
lcall
out
lahf
aas
lcall
fistpll
ror
cld
stc
repz
outsl
cmpsb
repnz
dec
cmpb
in
or
lahf
aas
jg
divl
shll
aam
jmp
out
mov
scas
xor
pop
dec
cmp
in
mov
repz
dec
stc
repz
test
fisubl
shll
cld
fmuls
dec
push
pop
aam
inc
push
repz
lahf
mov
test
ds
ja
pop
repz
cld
stc
leave
dec
int
test
pop
imul
inc
test
sbb
aas
mov
mov
shll
cld
stc
repz
test
inc
ss
fnstcw
jg
adcl
and
mov
sbb
jl
stc
stc
repz
out
add
mov
cld
fistpl
xor
adc
iret
lahf
aas
jg
xor
inc
push
jne
cmp
aas
sbb
out
divl
bound
fwait
iret
lahf
jg
inc
or
sub
out
cmc
or
pop
insl
xor
cmp
adc
aas
jg
in
and
lahf
sbb
repz
leave
sbb
leave
push
mov
aas
jne
xchg
aas
jg
cld
fstl
adc
lret
lret
cmp
imull
cs
mov
aad
leave
or
stc
sahf
and
scas
mov
jmp
out
lahf
aas
mov
ja
iret
les
aas
jg
repnz
jp
dec
lahf
shrb
sahf
rolb
repz
lahf
xlat
inc
popf
inc
out
inc
leave
fisttps
cld
cld
stc
ja
jo
or
adc
out
pop
scas
scas
mov
xchg
dec
sti
popa
aam
xchg
sub
cld
stc
in
gs
xchg
push
fst
ljmp
gs
out
lahf
aas
fidivs
imul
fcoms
negl
fsubr
clc
ret
cs
lret
iret
lahf
aas
jg
push
sti
into
mov
jp
jno
stc
repz
jl
push
lcall
jge
pushf
xchg
arpl
int3
and
leave
pop
dec
xchg
dec
sub
push
outsb
and
shll
lahf
aas
cld
and
cwtl
insb
push
shll
add
adc
iret
outsl
arpl
and
leave
notb
cld
cld
inc
mov
jmp
xor
out
lahf
jg
xchg
push
test
fistpll
adc
cld
stc
repz
mov
sarb
loop
out
leave
lahf
aas
jg
xor
cmp
aaa
scas
mov
cld
loope
add
adc
mull
aas
jg
and
mov
cmp
repz
lahf
xchg
lea
jns
sarl
sub
jg
cld
arpl
icebp
sbb
add
enter
call
stos
mov
ret
mov
sub
inc
pop
jnp
sub
lahf
aas
jg
inc
mov
ficomps
daa
mull
in
repz
enter
adc
dec
loop
sbb
imul
cld
stc
repz
or
push
sahf
test
jecxz
jecxz
iret
lahf
aas
jg
or
xchg
lds
jb
mov
repz
fsubrs
rcrl
add
cmp
sub
mov
xchg
outsl
in
and
fwait
aaa
outsl
fmulp
adc
xchg
dec
inc
xor
int
fstps
or
pop
das
sub
cld
aaa
outsl
fidivrs
cmp
in
cltd
jne
dec
dec
out
fwait
lahf
push
adc
push
arpl
in
sbb
mov
js
pop
xor
inc
lret
das
cmp
push
int
aaa
outsl
sbb
xchg
sub
push
mov
jno
or
cltd
cmc
cmp
pop
movb
outsl
fimuls
movsb
gs
std
dec
test
jns
out
xchg
repnz
lahf
xor
gs
in
je
aaa
outsl
fidivrs
popa
xlat
insl
mov
ret
push
fwait
lcall
jp,pt
mov
out
cmp
push
int
mov
xor
cld
stc
rep
lret
cmp
push
push
mov
iret
lahf
aas
jg
pop
fstps
push
pushf
xchg
xchg
jecxz
insl
mov
icebp
in
int3
adc
dec
push
mov
xchg
inc
xor
add
test
lock
fsubrs
popf
aad
push
mov
xor
out
lods
xchg
loop
mov
adc
cld
stc
repz
aaa
jle
push
xchg
iret
lahf
aas
jg
cmpsl
jnp
xor
jle
sbb
cmp
add
stc
repz
push
sub
mov
mov
jle
loope
aas
jg
scas
cmp
mov
clc
in
out
gs
fdivr
pop
rcrb
je
inc
mov
daa
jecxz
push
addr16
nop
pop
fwait
aaa
outsl
fidivrs
jge
mov
aas
scas
mov
bnd
out
push
scas
aas
inc
mov
bound
outsl
fidivrs
nop
sub
in
sbb
or
adcb
int
loop
mov
rorl
stos
out
jo
leave
jg
outsl
fidivrs
icebp
inc
xrelease
push
aad
lds
aaa
inc
mov
sbb
mov
fidivrs
aam
jp
sbb
push
mov
outsl
xchg
movb
jecxz
add
or
repz
inc
lock
test
sub
mov
fisubs
xor
cmc
xchg
daa
orb
mov
out
test
sbbb
jge
dec
out
adc
add
dec
xlat
dec
orl
xchg
jnp
dec
dec
pop
cld
stc
repz
adc
push
stos
inc
enter
or
aas
jg
ss
jecxz
popa
mull
cld
stc
repz
mov
jae
loopne
pop
int
fcomps
lahf
aas
jg
cltd
mov
xlat
stos
adc
rcll
sub
stc
repz
scas
jmp
push
and
fistpl
lds
cmp
add
mov
iret
lahf
adc
cs
leave
aas
and
mov
stc
pop
adc
jecxz,pn
ret
cmpsl
repz
lahf
push
fidivrs
cwtl
gs
cld
stc
filds
sahf
mov
int3
push
scas
and
test
aas
int3
and
pop
dec
sbb
loopne
adc
dec
lea
mov
cld
push
mov
test
loop
in
iret
lahf
cltd
push
outsl
scas
imul
clc
fisttpl
iret
aas
inc
xchg
das
mov
push
cmp
and
hlt
leave
iret
pop
sarl
scas
pop
and
test
jg
data16
icebp
std
call
dec
push
rol
enter
dec
js
nop
add
xchg
lahf
aas
jg
jecxz
and
ljmp
or
pop
jo
repnz
cmp
iret
pop
aaa
mov
je
jg
push
aaa
jnp
cmpsl
mov
stos
mov
repnz
lahf
inc
mov
push
arpl
stos
sbb
pop
into
pop
cmpsl
cld
mov
inc
popl
inc
setno
push
jb
fidivs
out
mov
mov
or
outsb
cmp
iret
aas
sub
adc
push
xchg
scas
push
cld
stc
repz
test
lods
gs
stos
stc
xor
pop
dec
jmp
ret
test
ljmp
repz
cmp
scas
fnstcw
sahf
aas
jg
xor
jle
repz
sub
or
clc
outsl
fidivrs
adc
rcrl
popa
jge
movsl
sbb
out
xchg
fwait
aaa
dec
sbb
fnsave
fisttps
and
dec
inc
rolb
push
mov
cmc
iret
roll
xchg
popf
cld
stc
repz
mov
arpl
and
fcmovnbe
xchg
mov
xchg
aas
jg
sub
pop
mov
pop
ds
cld
stc
repz
pushf
ds
mov
push
stos
push
lahf
fmuls
iret
lahf
aas
jg
ljmpw
jno
notb
repz
jmp
xchg
imul
xor
or
pop
jecxz
lret
xlat
idivl
inc
xchg
xor
leave
iret
lock
adcl
dec
mov
fimull
mov
jg
cld
stc
push
pop
add
xor
xchg
mov
aas
jmp
iret
lahf
aas
jge
cmc
xor
test
dec
movsl
outsl
in
cld
stc
repz
mov
testl
iret
lahf
aas
jg
movsl
loop
or
aaa
push
inc
and
negb
ds
addr16
and
xchg
hlt
inc
mov
es
std
jp
stos
lds
shlb
xlat
leave
out
pop
xchg
push
xchg
push
lahf
or
add
push
int
aaa
out
ja
sub
addl
xor
into
mov
cld
in
cmp
stos
out
push
add
ficoms
ja
lret
xchg
das
out
repz
push
repz
push
add
aaa
outsl
fidivrs
in
pop
fwait
inc
push
sbb
fisttpll
clc
repz
fwait
js
fwait
inc
daa
stos
fs
pusha
sub
fidivrs
or
sub
in
pop
aaa
out
mov
pop
xchg
xlat
daa
xor
fwait
xchg
loope
repz
fwait
imul
fsub
mov
lods
cmp
sbb
mov
adc
pop
xor
loopne
cld
stc
repz
jecxz
jmp
nop
sub
mov
cmpsl
sub
jg
and
jle
mov
scas
lret
repz
pop
aad
addr16
rcll
stc
pushf
repz
cmp
imul
inc
push
mull
lahf
je
adc
jb
jg
repz
fwait
jg
into
insb
lods
jmp
popf
push
rorb
movsb
jg
jge
dec
out
scas
roll
scas
clc
hlt
fwait
jo
fsubl
aas
sbb
mov
loop
dec
sbb
stc
stc
repz
xorb
gs
and
out
aas
push
aaa
scas
int3
dec
mov
cld
stc
repz
xorb
or
sbb
faddl
iret
lahf
aas
jg
adc
fiadds
mov
hlt
cld
stc
repz
sub
iret
add
aas
insl
mov
subb
ficoms
stc
mov
je
loopne
stc
ds
aaa
outsl
jno
pop
aam
idivl
xor
jb
out
fcompl
and
clc
xchg
scas
dec
jle
aas
sbb
hlt
mov
cld
stc
repz
push
adc
repnz
add
xchg
lahf
aas
jg
dec
mov
test
mov
inc
sub
mov
lea
jns
outsl
and
jmp
vmwrite
stos
insb
fwait
aaa
outsl
fisubs
loope
add
cmpsb
es
daa
out
adc
aam
repz
sbb
inc
jecxz
fistpll
outsl
fidivrs
push
jnp
cmpsl
ret
mov
jo
int
push
adc
push
mov
gs
or
scas
out
lahf
jg
sub
xor
jge
imul
adc
cmc
cltd
loope
daa
in
xor
jg
fwait
pop
push
inc
jnp
arpl
mov
adc
cld
stc
repz
lret
ljmp
mov
mov
aas
jg
lahf
pop
jae
dec
pushf
or
push
mov
repz
js
push
mov
cmp
inc
out
mov
jp
notl
in
and
sbbl
sbbl
popa
mov
adc
xchg
ss
or
in
out
lahf
aas
xchg
mov
jl
jg
inc
ret
scas
das
cld
stc
repz
mov
cmp
pop
xor
mov
sbb
sbb
or
and
xor
push
cmp
out
jg
xchg
fs
and
out
inc
push
iret
lahf
ss
inc
out
lret
rclb
js
stc
repz
in
popa
pop
aas
mov
aam
fistpll
addl
inc
sub
stc
repz
xchg
jnp
imul
xchg
jae
mull
sub
cmp
jnp
sbb
lahf
aas
jle
sub
out
arpl
mov
inc
xor
cld
stc
repz
mov
mov
inc
std
cwtl
mov
test
lahf
jg
inc
mov
pop
fisubs
repz
jge
cld
nop
insl
and
xchg
pop
aas
jg
cld
mov
xchg
and
scas
inc
enter
repz
lahf
cwtl
cld
or
mov
mov
ret
jg
cld
stc
ljmp
imul
imul
out
lahf
aas
addr16
out
outsl
sub
jns
cld
stc
repz
fstl
jge
int
orl
addr16
add
push
adc
loopne
cmp
stc
repz
je
jb
mov
scas
mov
or
aas
jg
mov
cmp
mov
jecxz
repz
sbb
mov
sbb
sub
jg
cld
jg
daa
iret
imul
loopne
repz
lahf
cmp
aad
mov
inc
adc
cld
stc
cli
cltd
fidivrs
add
push
popf
cmpsl
outsb
loop
out
lahf
aas
sbb
jb
dec
movsb
xchg
addr16
ret
pop
and
cld
stc
repz
inc
jo
pop
int
add
and
aas
jg
insb
mov
xor
xor
into
mov
stc
repz
add
rorl
outsl
aaa
outsl
add
push
aaa
clc
addr16
popf
push
repz
fwait
dec
ds
xor
adc
mov
fldcw
mov
repz
cwtl
and
movsl
out
fwait
aaa
mull
insl
stos
out
bound
clc
stos
repz
jp
mov
sbb
in
hlt
or
fdivrl
dec
or
mov
xor
and
int
aaa
outsl
loop
jo
jnp
and
dec
fists
lret
repz
xchg
mov
mov
in
jl
outsb
fwait
aaa
outsl
fidivrs
xchg
fcmovbe
sbb
inc
aam
mov
repz
cmp
lods
arpl
mulb
xor
outsl
fidivrs
outsl
test
or
add
out
orb
gs
lock
loope
push
repz
fwait
fwait
mov
stc
inc
stc
jne
repnz
jns
pop
or
icebp
or
xor
dec
add
int
aaa
push
mov
xor
fidivrs
xchg
pop
or
cmp
fwait
aaa
outsl
sub
push
xlat
mov
aas
or
mov
mov
ds
nop
xor
push
outsl
fimuls
cmp
cmp
stos
jns
out
clc
xor
fiaddl
cmp
rcr
movsl
ljmp
jne
add
repz
fwait
push
mov
mov
je
mov
arpl
mov
lcall
jmp
fsub
int
aaa
xchg
pop
sbb
clc
ret
js
mov
mov
fstpt
lock
pop
int
aaa
outsl
dec
xor
daa
adc
iret
dec
sahf
mov
shl
stc
insl
xchg
jbe
lds
pop
dec
fwait
aaa
outsl
fidivs
call
jo
push
dec
jg
into
int
in
mov
lock
mov
repz
lahf
add
jae
or
and
cmpl
stc
mov
clc
mov
inc
popf
jns
lds
mov
aas
jle
loope
nop
hlt
xchg
lods
into
sub
in
and
loop
fidivrl
xlat
add
mov
mov
fisubrs
int
aaa
outsl
cli
mov
lock
in
push
add
mov
mov
mov
push
roll
fwait
aaa
outsl
add
mov
xchg
xor
out
mov
inc
mov
push
in
insl
ds
add
push
cmp
sub
mov
cwtl
idivl
sub
aas
jg
cld
sbb
aaa
jecxz
adc
and
out
lahf
lods
pop
sub
imul
mov
xor
mov
repz
fwait
addr16
sahf
push
pop
cmp
add
adc
movsb
xor
jae
movsl
das
lret
jbe
mov
out
fwait
aaa
pop
nop
stos
imul
inc
sub
mov
xchg
mov
in
int
aaa
outsl
mov
stos
cmp
sahf
push
cmp
popl
xor
mov
movsb
repnz
and
into
add
stos
push
adc
aaa
outsl
fsubrp
and
cmp
jne
cmpsl
popf
stc
jge
inc
cltd
jns
out
iret
jb
lods
cltd
cmpb
cwtl
inc
pop
pop
fnstcw
inc
jle
negb
repz
xor
lods
jne
lcall
fwait
sbb
dec
iret
popf
repnz
outsl
fisubs
jl
test
and
loopne
fwait
mov
pop
insl
aas
insl
mov
cmpsb
pop
je
loopne
outsl
fidivrs
push
cmp
mov
mov
pop
les
mov
xchg
push
mov
popf
mov
lahf
and
mov
and
mov
aaa
outsl
fsubp
pop
dec
shrb
adc
push
jb
out
xor
mov
outsl
faddp
push
mov
mov
inc
push
iret
andb
jbe
int
aaa
outsl
jno
add
shrl
ret
mov
mov
out
flds
push
mov
inc
and
mov
out
lahf
push
or
fwait
dec
push
lods
sbb
jbe
cld
stc
repz
mov
out
add
es
lock
lahf
aas
jg
mov
outsb
movsb
jnp
insl
mov
in
xor
leave
add
cld
stc
repz
pop
push
jp
mov
ja
pushl
jbe
lock
iret
lahf
aas
jg
xchg
xor
push
mov
mov
push
cld
stc
repz
mov
jp
or
inc
lcall
call
pop
data16
jnp
adc
out
lods
ret
jle
outsl
rclb
push
push
ss
jg
cld
fs
repnz
push
repz
lahf
adc
and
lods
imul
outsb
and
and
cld
stc
jno
imul
inc
jbe
scas
and
lahf
aas
adc
rcrl
jle
cmpsl
cld
stc
repz
xchg
mov
loop
ret
fistpll
iret
lahf
aas
jg
mov
insb
sub
mov
repz
movsl
mov
test
pop
sub
inc
jle
js
pop
xchg
inc
adc
ss
int
mov
dec
cmpl
jns
cmp
fmull
je
dec
jmp
fwait
aaa
outsl
mov
out
dec
mov
mov
pop
adcl
test
xor
int
fwait
aaa
outsl
fisubrs
pushf
push
aaa
mov
loopne
mov
in
lea
mov
sbb
dec
test
xchg
iret
lahf
ljmp
int3
test
jg
daa
add
ficomps
jl
js
xchg
xlat
and
out
sbb
fisubl
push
aad
sub
das
mov
push
add
int
ja
cmp
jne
fldt
ja
dec
mov
repz
mov
mov
in
sub
daa
push
pop
jno
out
add
daa
xor
pop
pop
push
xor
out
sahf
adc
cs
xchg
mov
fidivrs
sbb
js
add
sub
int
aaa
adc
lcall
sub
fcmove
pop
les
mov
popf
push
sbb
out
hlt
xlat
ret
sbb
xor
xchg
sub
sub
mov
ja
scas
or
pop
or
fwait
aaa
out
pop
lahf
cs
sub
mov
test
pop
fidivrs
out
ljmp
pop
das
jl
inc
adc
outsl
fidivrs
jae
xchg
lahf
bound
int3
add
int
out
add
mov
mov
fidivrs
rolb
and
push
aas
xchg
int
aaa
js
orl
ret
pop
jmp
fs
outsl
pop
arpl
push
sbbb
shlb
scas
mov
push
mov
and
ss
and
xchg
dec
push
fwait
inc
cmp
xlat
xor
mov
cmp
cmp
int3
daa
repz
int
aaa
dec
jne
mov
mov
ja
or
mov
mov
roll
jp
out
lods
push
addb
int
aaa
outsl
fs
in
xchg
nop
dec
cltd
pop
mov
jo
jnp
adc
and
lods
inc
mov
aaa
outsl
fsubrp
lods
cmp
lahf
ja
and
jns
out
ds
xor
clc
pop
xchg
ret
iret
lods
sbb
push
sbb
in
mov
je
or
out
fwait
aaa
and
sbb
add
orb
sbb
repz
les
rcrb
push
mov
fcoms
xchg
imul
in
js
test
fstps
inc
pop
fdivrl
das
pop
sti
dec
jg
cld
stc
and
inc
dec
je
inc
out
call
aas
loop
or
mov
mov
imull
cmp
dec
xchg
jns
iret
lahf
aas
jg
clc
jb
jb
add
adc
out
data16
loop
sbb
sbb
push
push
repnz
std
in
lahf
sbbb
xor
data16
xor
test
aad
es
std
push
push
xchg
adc
in
iret
lahf
int
or
add
bswap
inc
pop
repz
jg
push
imul
out
dec
aam
out
lahf
aas
sbb
adc
sub
lcall
cwtl
sbb
arpl
push
inc
pop
in
iret
lahf
aas
jg
fwait
leave
cmpsb
sub
jne
jns
adc
lea
in
or
mov
mov
cmc
popa
mov
repz
pop
fldt
gs
fwait
aaa
outsl
ficoms
push
jmp
fistpl
push
add
repz
out
out
insl
sub
mov
sbb
aaa
outsl
fidivrs
aam
xor
adc
adc
pop
xchg
add
iret
cli
in
lahf
aas
inc
sub
xchg
fwait
dec
gs
lock
xchg
lock
mov
lahf
lret
in
or
arpl
or
std
cs
mov
and
pop
cli
jbe
adc
mov
mov
pop
std
cmp
out
xor
inc
dec
pop
enter
lahf
jl
mov
ljmp
xchg
enter
mov
in
adcb
jg
cld
stc
inc
dec
rcl
add
dec
pop
cmp
iret
lahf
aas
mov
xchg
sbb
xor
stc
cld
stc
repz
jg
jecxz
push
insl
add
stos
xchg
xor
outsl
fidivrs
outsb
jmp
dec
cltd
out
fidivs
mov
jg
fildll
insb
fidivrs
cltd
mov
mov
xchg
sbbb
es
jge
out
cmp
mov
mov
insl
outsl
fidivrs
jp
fimull
add
arpl
int
aaa
mov
gs
sbb
fidivrs
sahf
mov
jl
or
sub
mov
push
filds
outsl
push
clc
insl
xchg
pop
inc
dec
movsl
pop
xchg
cld
stc
repz
outsl
fnsave
xorb
imul
aas
jg
stos
jb
push
jbe
cmp
ljmp
ret
shll
out
jns
out
xchg
inc
aas
int3
repnz
fs
outsl
fidivrs
xchg
inc
and
sub
div
out
fwait
and
mov
imul
repnz
ss
mov
ds
in
arpl
cltd
js
pop
or
arpl
iret
lahf
aas
movsb
pop
iret
pop
fwait
outsl
mov
mov
lods
sub
mov
adc
repnz
outsb
fiadds
dec
dec
mov
xchg
xor
stc
repz
adc
inc
pop
in
jns
divl
decb
xchg
and
lods
and
mov
mov
cwtl
imul
outsl
adcb
xor
mov
cld
sti
movsb
xchg
pop
or
push
outsb
popf
xor
iret
lahf
aas
jg
or
addr16
and
sub
mov
mov
and
xor
repz
pop
sub
outsl
fidivrs
inc
insl
adc
jle
mov
or
int
aaa
inc
fdivr
pop
jns
mov
adc
mov
movsl
test
push
shrb
orl
dec
inc
dec
jnp
leave
sahf
in
xchg
lahf
aas
jg
xchg
mov
mov
xchg
fstl
xchg
call
iret
sahf
sti
in
test
xchg
int
aaa
aas
pushf
inc
mov
mov
fbstp
xor
ret
iret
aaa
aas
jg
shll
pop
in
push
mov
out
out
lahf
subl
mov
sub
fwait
cmpsl
lock
cmp
popf
js
repz
mov
push
jmp
mov
cld
cld
adc
push
stos
mov
stc
pop
std
jl
xchg
std
testl
jns
mov
aas
loop
negb
arpl
push
insb
cld
stc
repz
mov
test
xchg
js
and
jg
ljmp
and
test
mov
lret
xchg
test
sub
adc
pop
cmpb
fwait
aaa
outsl
fmulp
cld
js
xor
pushf
inc
mov
popf
stos
imul
int
out
orl
stc
fimull
popf
gs
outsl
fidivrs
or
push
pop
push
mov
pop
pop
fst
imul
aas
into
popa
out
cmp
ss
dec
inc
adc
aaa
outsl
ficomps
adc
inc
icebp
popa
jmp
fsubs
int
das
mov
push
mov
jl
loope
xchg
pop
add
xor
aas
stc
cld
stc
mov
pop
dec
cmpsb
popf
sarl
fwait
ja
out
sbbb
loop
mov
repz
xor
push
inc
es
hlt
mov
and
outsl
fidivs
mov
and
mov
xchg
int
push
pop
pop
cmc
enter
cmp
mov
repz
dec
sub
mov
mov
lahf
test
add
or
sahf
inc
mov
repnz
loope
dec
add
cmpsl
xor
daa
pop
popf
scas
rcrb
outsl
popa
js
in
lods
jmp
clc
nop
out
test
repz
loope
pop
pop
adc
mov
fldenv
cli
xchg
aaa
outsl
fidivrs
imul
xchg
and
fdivp
out
fwait
stc
jge
inc
ret
push
push
lret
movsb
sbb
cmp
cmpsl
and
daa
mov
push
jnp
cld
je
ds
addr16
int
aaa
inc
or
lock
idivb
adc
jle
jmp
movsb
jns
repnz
jp
int3
mov
imul
out
subb
clc
mov
sbb
cmp
and
mov
lret
repz
cli
dec
pop
ficompl
mov
fisubs
lahf
add
mov
xchg
mull
jns
out
push
mov
push
mov
movsb
popa
test
mov
cmpsl
adcb
ja
xor
out
fwait
jne
push
lahf
jle
pop
lcall
fidivrs
pop
enter
dec
inc
inc
mov
mov
aaa
adc
and
and
sub
mov
mov
ficompl
cmp
adc
aaa
out
add
xchg
inc
inc
xchg
dec
jge
repz
xchg
cmpsb
mov
gs
xor
aaa
mov
fidivrs
and
jg
push
mov
push
test
jns
rcr
daa
sti
aaa
jp
pusha
adc
iret
mov
sbb
test
push
add
stc
repz
shufps
movsl
int3
push
aaa
out
and
sti
mov
ja
sbb
add
int
push
gs
dec
ficoml
popf
lds
fidivrs
js
add
and
fwait
aaa
cmpb
mov
icebp
push
arpl
fidivrs
sbb
loopne
cmp
cmpsl
int
aaa
outsl
stc
sahf
sub
jae
push
pushf
xor
mov
jns
out
jo
outsb
ret
nop
imul
aas
outsl
fmulp
les
xor
adc
out
fwait
sub
lret
movsb
movsl
outsl
shrl
mov
or
and
test
add
imul
int
xchg
mov
cld
stc
repz
aam
xchg
in
testl
lahf
aas
jg
xchg
aaa
pusha
repz
ds
cmp
cld
stc
repz
int
pop
call
test
mov
lahf
aas
jg
mov
xchg
jae
jbe
out
aas
stos
xchg
xchg
xor
out
and
int3
dec
outsb
jp
jns
scas
test
mov
sub
push
pop
jmp
dec
fdivrl
lea
lcall
repz
push
fidivl
hlt
xor
and
fwait
lahf
aas
jg
pop
xor
test
sub
push
dec
stc
repz
jl
push
sub
stc
mov
jg
cld
xor
hlt
cs
sub
idivb
repz
lahf
mov
cmp
lret
cli
mov
mov
repnz
sti
ss
or
mov
ror
orl
test
arpl
aaa
outsl
ficoms
and
fstl
or
inc
in
jecxz
xor
shll
repz
mov
pop
inc
loope
sub
mov
daa
mov
push
popa
int
out
lahf
pop
sbb
out
push
cltd
fdiv
sub
cld
stc
sbb
push
sbb
mov
mov
iret
lahf
aas
sub
inc
rcl
aaa
in
cld
stc
repz
pushf
adc
pop
inc
addr16
sti
movsl
push
and
pop
scas
mov
cmpb
test
and
mov
lret
enter
mov
and
cmp
ficompl
loope
loopne
and
mov
movsb
cmp
out
daa
decb
xchg
cmp
iret
lahf
jg
addb
sbbb
mov
stc
repz
jbe
pop
cli
mov
test
aas
jo
aas
aaa
outsl
sbb
lds
std
sub
sarb
iret
mov
inc
adc
mov
cmpsb
cld
jmp
scas
stc
xlat
scas
cld
jno
sbb
lahf
aas
jg
mov
inc
sbb
stc
repz
sub
mov
or
mov
mov
sub
pop
fldenv
xchg
arpl
out
fwait
adc
stos
inc
push
dec
mov
imul
aas
jge
lods
dec
jp
shll
out
add
stc
repz
outsl
movsl
xor
lock
sub
mov
mov
js
jnp
or
xchg
call
push
and
pop
pop
faddl
pop
stc
stc
repz
mov
adc
xchg
rclb
push
adc
mov
push
xor
jle
fidivrs
xor
push
adc
out
andb
mov
les
loope
fwait
aaa
js
incl
or
xorb
pop
data16
out
negb
inc
push
addb
mov
out
sbb
sub
ss
jb
outsl
fidivrs
sub
repnz
xorl
pop
lds
movsl
std
jbe
idivb
mov
and
mov
out
mov
rol
adc
loopne
loope
and
mov
sbb
call
es
shl
mov
repz
stos
inc
test
xchg
cmp
out
lahf
aas
pop
jo,pt
cmp
test
lret
cld
stc
repz
out
mov
sbb
outsb
sub
or
xchg
iret
lahf
aas
jg
cltd
jbe
and
fistpll
or
stc
repz
pop
mov
imul
inc
out
movsl
stos
iret
lret
pop
enter
ficoms
dec
stc
repz
sub
sbb
ret
rclb
icebp
repz
push
adc
ja
sbb
sbb
inc
movsb
sbbl
out
lahf
aas
movsl
loopne
push
in
ret
insb
test
repz
cmp
aaa
and
push
stc
dec
sub
cmpsl
outsb
inc
jle
dec
cmp
repnz
rep
xchg
sub
push
call
mov
sahf
aas
lcall
movsb
inc
adc
jmp
out
mov
adc
mov
add
stc
pop
mov
cld
ja
out
dec
fmull
ret
rcll
insb
mov
pop
loope
xor
aas
jg
cld
inc
mov
pop
inc
lods
jl
aad
in
iret
lahf
lret
outsl
lcall
outsl
fiadds
adc
lahf
cmc
dec
sbb
xchg
sbb
sbb
lahf
aas
call
mov
adc
lcall
or
loopne
clc
repz
sbb
imul
dec
test
and
pop
fnstcw
dec
insl
pushf
mov
lahf
jmp
and
inc
inc
stos
cmp
repz
pop
les
repz
lahf
lahf
cmp
pop
add
leave
loopne
xchg
jmp
pop
dec
shr
fwait
aaa
outsl
outsl
in
and
mov
out
test
or
jns
out
cmp
pop
cmc
push
cmp
es
test
leave
daa
ds
jnp
mov
adc
mov
orl
sbb
mov
fldl
sbb
int
aaa
icebp
jae
pop
dec
xor
sub
stos
enter
sbb
jns
jp,pn
fisubl
ja
cmp
mov
sub
push
and
push
out
fwait
rorb
push
lea
jbe
jmp
std
movsb
jns
ret
negb
and
xor
add
mov
repz
jbe
mov
pop
lret
test
subb
outsl
fidivrs
mov
negb
fwait
aaa
outsl
mov
add
and
jns
out
push
push
and
cmp
outsb
into
mov
out
add
cmc
mov
xchg
cmp
and
xor
push
adc
cwtl
mov
sti
loope
in
xchg
das
and
test
inc
pop
in
aas
dec
xchg
jae
ja
fdivrp
mov
fstps
sub
nop
xor
incl
pop
jp
lret
std
cmp
mov
add
and
pause
call
inc
or
setbe
xor
aam
out
fwait
daa
cmp
mov
inc
push
dec
mov
push
ficompl
ljmp
mov
push
std
and
push
hlt
xchg
pop
les
cs
jg
pop
pop
aaa
mov
mov
adc
repz
push
movl
outsl
cmp
sub
jl
jmp
push
xor
aas
jge
aaa
outsl
fisubs
out
in
loope
dec
pop
push
pop
inc
int
aaa
roll
pop
daa
pusha
push
cwtl
hlt
imul
test
pop
jmp
mov
fidivrs
sub
push
aad
add
mov
lcall
aad
cld
stc
push
scas
and
aaa
xchg
aad
push
xchg
add
jbe
iret
lahf
aas
jg
cmpsb
cmpsl
arpl
mov
aad
xchg
xchg
add
cld
in
out
inc
push
bound
xor
mov
xchg
lahf
jg
popa
dec
inc
sbb
jge
iret
lahf
aas
jg
jmp
and
sub
cld
xchg
stc
notl
pusha
xlat
dec
xor
lahf
aas
jg
mov
pusha
mov
add
cmp
repz
jge
aam
sub
negb
inc
mov
je
jno
sbb
fwait
aaa
outsl
add
cmc
lret
xchg
lea
fs
out
mov
mov
iret
dec
aaa
rolb
fidivrs
sbb
sbb
out
mov
push
mov
ja
hlt
fnstcw
xchg
arpl
push
dec
jp
lret
jbe
cmp
out
pop
icebp
sbb
aaa
push
rcll
xchg
pop
xchg
add
pop
stc
stc
mov
push
push
ja
and
mov
repz
lahf
push
imull
popa
or
mov
stc
stc
jo
dec
pop
pslld
cmp
mov
mul
stc
jecxz
iret
mov
sti
out
clc
lock
sbb
cmpsl
xor
syscall
mov
adc
lahf
aas
jg
jae
dec
aam
cld
pop
mov
loop
in
cmp
and
repz
fmull
std
xor
aaa
fwait
aaa
outsl
fidivs
sbb
xchg
fstpt
in
jns
out
push
or
lods
das
push
xor
mov
pop
lds
fiaddl
icebp
scas
ret
adc
fsub
imul
pop
cmp
inc
int3
mov
test
xchg
cmpsb
jnp
lea
stc
repz
loope
das
mov
jne
out
or
inc
das
or
mov
iret
fwait
aaa
cmpsb
jns
rep
loope
jle
cli
stos
mov
mov
sbb
bound
cwtl
aas
aaa
outsl
ficoms
fisubrs
cmp
jo
hlt
pop
repz
fwait
scas
jne
ret
je
and
mov
jns
sbb
and
cld
mov
or
mov
insl
iret
lahf
aas
jg
popf
cmp
push
loope
xchg
ljmp
repz
sub
sbb
cmp
mov
adc
fnstsw
roll
xchg
cmp
mov
mov
pop
aaa
dec
ficoms
fs
int3
out
mov
ret
sbb
and
mov
aas
mov
int
sub
push
out
bound
movsl
mov
mov
lock
pushf
sub
pop
out
fwait
aaa
inc
inc
sahf
icebp
popa
sbb
pop
test
fidivrs
pusha
fwait
push
cld
add
clc
jmp
fwait
aaa
outsl
lods
mov
call
stc
jno
jge
jns
out
lods
loop
and
lock
mov
jle
and
outsl
fisubs
outsl
lcall
xchg
xor
adc
jg
shrb
add
cmp
mov
xor
xor
test
bound
pop
stos
jle
stc
lods
icebp
mov
push
inc
inc
int
aaa
out
xchg
jge
sahf
cmp
xchg
pop
popa
push
stc
lock
adc
out
xor
pop
jnp
aaa
outsl
fisubs
cmp
mov
popf
jno
loopne
div
cmpsb
loopne
repnz
inc
outsl
fidivrs
sti
mov
arpl
push
out
out
fwait
aaa
jl,pt
adc
mov
sub
mov
jbe
gs
mov
icebp
cli
rol
lret
push
repz
sbb
insl
repnz
inc
pop
sahf
xchg
decb
fidivrs
lock
ds
mov
ret
out
fwait
aaa
adc
xorl
jb
fidivrs
inc
addr16
add
jo
into
movsl
movsl
dec
xor
fwait
aaa
outsl
outsb
sub
xor
or
inc
mov
in
cld
mov
mov
sarb
repnz
stc
lds
bound
mov
mov
mov
aaa
inc
xchg
imul
outsl
testb
lea
mov
call
mov
fidivrs
rcrb
push
lea
popf
add
cmp
dec
mov
cmpb
inc
icebp
mov
jno
push
push
push
jno
shll
mov
sbb
fwait
aaa
outsl
fidivrs
das
xchg
push
and
and
xchg
add
out
sbbl
mov
sti
lds
outsl
fidivrs
jae
pusha
movups
rorl
repz
fwait
xchg
jle
xchg
mov
xchg
shl
sahf
fdivrl
push
push
adc
mov
fwait
aaa
out
cmpb
pop
int3
or
add
jns
out
nop
dec
cs
sbb
sub
inc
xchg
sbb
mov
repnz
int
fsub
int
aaa
adc
cs
add
dec
mov
xor
aad
cs
xor
ja
jns
mov
enter
jo
loopew
outsl
fiadds
orb
pop
ret
jne
dec
repz
fwait
or
out
push
arpl
cmp
movsl
fdivrl
jg
cmp
mov
jno
fnsave
outsl
ficoms
add
rcrb
dec
xchg
dec
repz
fwait
outsl
jp
xchg
pop
fcompl
mov
jge
cmpl
fnstenv
ds
jg
fidivrs
sbb
in
mov
repz
lahf
leave
xor
rolb
xchg
push
xor
cld
cld
stc
lods
rep
mov
xor
fwait
ja
or
cmp
out
or
mov
xorb
scas
out
cwtl
xchg
rep
inc
lea
and
jmp
cld
jg
lahf
jg
rorl
cli
mov
mov
cld
stc
repz
pop
inc
lock
jge
shll
mov
jg
inc
mov
in
mov
mov
or
aaa
clc
mov
test
mov
icebp
xchg
int
add
mov
cmp
xchg
sub
mov
pop
lods
pop
push
mov
cmpsl
loop
jns
adc
call
repz
insb
pop
mov
fisubrs
or
sti
outsl
out
aaa
outsl
fidivrs
xor
aam
push
jno
data16
gs
and
sub
fidivrs
mov
or
xchg
dec
jbe
adc
mov
cmc
inc
cli
adc
outsl
fidivrs
arpl
adc
inc
push
movsb
out
fwait
aaa
mov
imul
or
repnz
mov
repz
lahf
aaa
movsb
sahf
sbb
movsb
popa
cmp
jle
cld
stc
mov
das
lret
push
adc
pop
fisubl
out
out
push
and
pop
das
fidivrs
addb
aaa
and
leave
dec
fwait
aaa
outsl
inc
loopne
jmp
cmpsb
pop
or
fstpt
gs
mov
call
xchg
aaa
outsl
fidivrs
shll
cli
inc
cmp
in
cmc
lock
jnp
add
cmp
iret
lahf
aas
jg
dec
lea
sbb
push
inc
push
pop
ret
cld
jecxz
dec
mov
push
bound
lahf
aas
jg
nop
and
ret
jb
ds
stc
repz
outsb
mov
and
sbb
mov
and
dec
sbbb
cld
jns
out
scas
popf
jmp
push
stc
push
std
call
aaa
outsl
fidivrs
repnz
ss
add
out
fwait
addr16
das
sub
dec
dec
lcall
pushf
xchg
js
inc
xchg
xor
outsb
xor
xchg
fwait
aaa
outsl
je
pushl
cltd
add
call
and
jno
hlt
lock
dec
pop
xchg
sub
loopne
test
mov
mov
dec
pop
pop
icebp
repz
outsb
mov
int
aaa
ds
insb
into
push
pop
das
sti
fstl
xchg
xchg
fidivrs
lods
mov
jmp
cli
imul
cmp
add
jns
xchg
and
lcall
add
fnstcw
rcl
cmpsl
in
jg
cld
stc
or
jno
and
ds
pop
jmp
out
daa
aas
lcall
push
inc
sbb
rep
and
sbb
popa
sub
sub
bound
inc
pop
out
jecxz
mov
stc
repz
jo
mov
imul
jp
pushf
sbb
jg
cld
je
inc
mov
mov
fcmove
sbb
mov
out
lahf
xchg
subb
and
xchg
jnp
xchg
int3
test
sahf
mov
iret
mov
sub
mov
inc
mov
fidivrs
add
and
pushf
faddp
jns
aaa
outsl
stos
je
pop
mov
aas
fstpl
ljmp
cmpsb
cmp
jns
aaa
outsl
fidivrs
sbb
add
in
out
fwait
outsb
and
data16
ss
cmc
mov
dec
popa
call
mov
enter
cltd
pop
pushw
fwait
aaa
inc
inc
xchg
dec
xadd
jns
out
mov
xorl
psubb
outsl
fidivrs
insb
test
stos
hlt
add
cmp
cmp
pop
sbb
fdivs
lahf
pop
bound
jo
aas
jg
xor
cmc
mov
mov
push
push
sbb
inc
repnz
dec
repz
daa
sub
test
out
je
in
ficompl
fidivrs
mov
pop
pop
mov
shll
adc
fwait
aaa
outsl
lret
adcl
fisubl
mov
idivb
xchg
or
jecxz
jo
aaa
inc
pop
fnstenv
add
fstpt
fwait
pop
push
jl
stc
push
stos
in
or
cmp
sbb
mov
dec
inc
in
or
adc
ja
cs
fistpll
outsl
sub
mov
iret
stc
sbb
mov
ja
cmp
cs
cmc
test
sarb
out
mov
cmpsl
je
je
pushf
fistps
mov
out
loope
inc
aaa
iret
xor
loope
repz
fwait
jnp
aas
fwait
int3
or
ficoms
cmp
insb
push
jns
stos
jns
mov
aas
pop
jg
aaa
repz
aam
sbb
mov
cli
jbe
and
fdivrl
jge
xor
fsubr
call
iret
lahf
jg
mov
and
ficompl
and
cld
stc
repz
xor
aam
aaa
clc
addr16
push
add
out
iret
lahf
aas
jg
or
aas
mov
stc
repz
stos
daa
mov
lcall
inc
xchg
inc
jecxz
sbb
ret
dec
mov
pop
mov
xor
mov
int
aaa
outsl
ja
mov
aas
dec
pop
xorb
mov
call
xchg
jb
das
xlat
cmp
mov
aaa
outsl
fidivrs
cmp
shll
mov
cmpsl
jns
out
push
daa
add
lret
cmpsb
jg
ds
sti
add
aaa
outsl
fidivrs
adc
addr16
ret
repz
fwait
out
fcompl
loopne
xchg
pop
loop
das
outsl
fidivrs
dec
enter
jae
mov
cltd
stos
mov
shll
mov
int
adc
mov
das
sahf
cmpsl
or
sarb
inc
outsb
inc
dec
fwait
imul
les
inc
daa
and
imul
icebp
shlb
out
aad
inc
incl
daa
mov
mov
fidivrs
lcall
sub
int
aaa
outsl
imul
push
cmovo
in
fidivrl
dec
or
pop
rcrb
lds
fcompl
into
aas
mov
int
adc
out
fwait
insb
push
sub
mov
popf
icebp
xchg
pop
lock
xchg
cmpsl
fcomp
or
test
out
lahf
jg
or
mov
cli
in
cld
sti
leave
inc
sbb
push
push
pop
shll
ret
iret
lahf
aas
jg
jge
mov
add
pop
sar
repz
xlat
sbb
pop
mov
push
sub
test
loope
pop
cltd
xchg
stc
out
mov
jns
mov
mov
test
aas
mov
cmpsb
bswap
ficoms
das
or
je
cld
stc
repz
gs
push
push
lahf
aas
jg
loop
ljmp
or
sbb
leave
out
ljmp
xorl
jg
inc
rcll
in
int
imul
mov
xlat
mov
jo
mov
out
pop
pop
sti
jbe
lcall
mov
mov
stc
add
lret
idiv
xchg
aam
aaa
outsl
aaa
or
fmuls
cmp
out
mov
das
mov
sti
por
add
lahf
daa
xchg
out
dec
or
out
fwait
aaa
cmp
test
mov
jns
push
fwait
data16
adc
mov
push
add
and
icebp
inc
aas
add
mov
adc
or
mov
outsb
js
fidivrs
addr16
jmp
or
fwait
sbb
imul
clc
inc
and
mov
repz
cld
jmp
jmp
das
inc
ja
lds
lret
mov
les
iret
push
orb
sbb
xchg
and
stc
repz
xor
push
repnz
cmp
mov
fwait
add
in
rorb
nop
nop
xor
add
outsl
fidivrs
mov
sub
aas
adc
out
fwait
sub
adc
popf
push
cltd
adc
outsl
fidivrs
enter
ror
xor
ret
fwait
aaa
jp
dec
test
enter
cmp
enter
push
jne
addr16
xor
repz
lock
mov
stc
xlat
repnz
and
aaa
in
push
push
cmc
lahf
inc
cld
fadd
aad
add
fwait
jge
repz
pusha
jnp
aam
mov
fdivs
cld
inc
or
lcall
or
push
cmp
out
lahf
push
sbb
mov
dec
les
fidivrs
fbld
outsb
std
mov
ja
inc
arpl
loop
xlat
fiadds
jns
out
and
mov
loop
rcrb
mov
scas
pop
mov
mov
inc
jp
out
fwait
stos
out
nop
nop
push
rclb
sub
xchg
mov
sbb
fiaddl
ret
adcb
dec
add
aas
ljmp
bound
or
push
mov
in
pop
lea
mov
repz
xchg
add
rorb
lods
xor
outsl
fiadds
sub
mov
stc
repz
mov
pop
lahf
arpl
and
jg
cld
cli
xchg
dec
cmp
jno
sbb
int3
push
cmp
fiaddl
in
adc
pop
adc
jg
cld
stc
pop
jbe
cmp
mov
sbb
mov
aas
or
loope
lret
ljmp
push
neg
iret
out
dec
addr16
outsl
fidivrs
adc
push
or
fwait
push
fistpl
lahf
or
test
sbb
jns
bnd
xchg
addl
lods
cmp
mov
adc
in
outsl
adc
xchg
cmp
mov
sub
or
cmp
aaa
push
cmc
loopne
fwait
aaa
outsl
cmp
pushf
and
fistl
pop
jns
lock
jg
xchg
jae
aaa
outsl
fidivrs
loop
out
es
inc
xor
imul
int
rcl
mov
pop
lods
insl
fldcw
mov
cmpsb
pavgb
mov
mov
and
pop
mov
push
fisttpl
aad
sti
ret
push
addr16
addr16
rcrl
or
daa
lahf
aas
jo
fstl
jo
repz
cmp
push
fs
cltd
fistpl
dec
mov
mov
imul
call
mov
out
fwait
aaa
mov
dec
and
stos
lods
cmp
dec
dec
ds
into
sarb
pop
dec
int
and
adc
out
rorl
pushf
mov
test
mov
fistpl
popf
pop
cmp
mov
cmc
outsl
fidivrs
mov
loope
lds
fwait
aaa
sub
std
subl
jns
bound
movl
push
je
cltd
int
aaa
outsl
push
xor
add
inc
lods
jns
hlt
xchg
pop
pop
xor
decb
add
fnstcw
cs
scas
scas
out
fwait
aaa
xchg
addr16
imul
sbb
aas
jno
cmp
xor
stc
mov
mov
sbb
repz
loopne
lahf
sbb
pop
inc
or
outsl
fidivrs
mov
das
lret
push
cmp
lods
adc
int
aaa
inc
dec
shrb
add
outsl
lret
js
ret
lds
jbe
fwait
aaa
outsl
fimuls
mov
sbb
cld
and
mov
and
xlat
repz
fwait
dec
pop
sub
jae
and
cmp
gs
das
adc
pop
fwait
or
rcll
inc
mov
mov
shlb
adc
jns
jg
push
enter
mov
test
lods
xlat
xchg
aaa
outsl
in
pop
push
cld
cmc
pop
xor
cmpsl
das
jg
cld
stc
sbb
in
cltd
push
pop
insl
push
es
iret
lahf
aas
decb
shrl
add
and
scas
push
lds
cmpsb
ss
ret
xlat
mov
xor
mov
sbb
repz
sbb
cmpsl
aaa
repnz
cli
scas
sbb
sbb
aaa
outsl
fidivrs
movsb
jp
jno
mov
push
loopne
fwait
mov
imul
pop
fidivrs
gs
sbb
outsl
rorb
int
aaa
outsl
jle
ret
dec
fmuls
lahf
mov
out
cmp
das
jmp
aam
jecxz
fwait
aaa
outsl
ficoms
push
popa
mov
cmp
mov
int
adc
jl
out
std
insb
mov
push
aaa
outsl
fidivrs
imul
mov
out
fwait
adc
into
jl
xchg
stos
or
outsl
fidivrs
jl
cli
and
mov
mov
fwait
aaa
fstpl
aad
sahf
lea
fidivrs
jbe
mov
fadd
push
in
jg
outsl
ficoms
int3
aad
cmpsb
daa
aam
out
fwait
aaa
push
add
dec
insb
push
stos
imull
jae
ds
repz
in
ret
sub
push
je
mov
fidivrs
out
xchg
aaa
mov
lahf
enter
es
sub
lcall
icebp
cld
mov
jg
sub
jg
aad
ret
addr16
fnstsw
xrelease
jg
xchg
subb
jns
inc
inc
dec
inc
out
xor
mov
dec
sub
fwait
aaa
xor
jmp
inc
pushf
cld
jno
subl
out
pop
push
xor
sti
jmp
stc
stc
ret
and
or
xchg
rolb
aas
jg
cld
outsl
int
sbb
jl
xchg
in
iret
lahf
adc
loope
mov
and
mov
push
push
push
xchg
daa
outsb
mov
enter
dec
scas
outsl
daa
cmpsl
pop
or
aaa
outsl
fidivrs
js
jae
xchg
aad
into
push
repz
fwait
push
hlt
in
jnp
mov
and
in
outsb
daa
sbb
into
jg
sbbb
mov
mov
xchg
div
out
sbb
lahf
inc
repz
rcll
fidivrs
sbb
loopne
roll
out
and
int
aaa
lock
mov
or
and
loop
and
adc
js
aas
jg
mov
or
lods
push
hlt
add
push
dec
orl
test
fwait
aaa
outsl
fisubrs
xlat
add
xchg
in
and
or
repz
fwait
test
and
mov
outsl
fidivrs
and
lock
scas
ds
cmp
fwait
outsl
xchg
mov
and
sarl
jb
movsl
and
add
lahf
sahf
bound
outsl
das
inc
lea
sbbl
cmpl
fistpll
iret
jecxz
xchg
shlb
fidivrs
cld
add
pop
roll
out
fwait
sub
ja
imul
sbb
cmp
or
mov
sub
data16
jnp
mov
stos
cmp
insl
nop
pushl
fwait
jae
outsl
fidivrs
int3
or
popa
push
imul
xorb
ret
sbb
out
imul
out
sub
pushf
push
call
lahf
cld
arpl
cmpsb
mov
das
fists
mov
sub
sub
adcb
cmp
daa
int
aaa
je
sahf
add
mov
sarb
dec
jns
inc
fwait
mov
out
comiss
pop
out
out
fwait
pop
repz
bound
cmpsb
fnstenv
outsl
fidivrs
pushf
lahf
dec
popf
ss
xchg
int
stos
and
cmp
repz
jg
or
mov
sti
mov
inc
fisubrs
adc
ds
out
fwait
dec
int
cld
sub
in
mov
jns
jmp
cmpsb
jmp
negb
out
adc
xchg
jnp
xchg
fs
lock
sbb
fnstcw
mov
repz
mov
out
push
xlat
add
xchg
popf
or
mov
fnstcw
cwtl
lea
in
xchg
inc
daa
icebp
push
pop
out
fwait
aaa
push
push
scas
xchg
cmp
push
sub
popa
fs
pop
xor
push
ror
adc
xor
jle
stos
inc
outsb
mov
cld
jl
repz
mov
sub
nop
fstl
outsl
fidivrs
out
out
mov
loopne
fists
cmpsb
imul
cld
cld
stc
repz
je
ds
sbb
ja
xor
adc
lock
add
stos
shlb
loopne
sub
adc
ficomps
jecxz
mov
sub
repnz
jae
push
sub
pop
inc
xlat
cmp
outsl
fidivrs
push
dec
mov
dec
stc
pop
adc
and
daa
dec
stc
and
xchg
fwait
aaa
and
bound
push
xchg
inc
aas
jg
cld
xor
clc
gs
daa
adc
or
cmpb
int3
mov
dec
jg
cld
stc
out
fs
sbb
push
inc
in
cs
inc
push
out
lahf
aas
cmp
mov
cmp
fisubrs
repz
fstpt
scas
lret
jg
mov
mov
jg
push
arpl
add
jg
leave
out
lret
sarb
adc
xchg
sub
fadd
shll
out
mov
xor
stos
sbb
dec
repz
fwait
mov
dec
cli
es
repnz
or
negl
ficoms
in
jae
xchg
inc
ret
clc
jno
divl
mov
xchg
fwait
aaa
outsl
sti
out
dec
sbb
je
xor
cmp
int
ljmp
int
dec
mov
jns
xlat
mov
jp
outsl
jge
addr16
xlat
mov
fwait
aaa
outsl
push
sbbl
jns
cmpsb
ljmp
outsb
inc
xor
cmp
outsl
fidivrs
pop
or
sub
and
pop
aas
test
loopne
jae
dec
sub
incb
and
pop
lds
fdivs
add
outsl
ficoms
addr16
sbb
sub
loop
fwait
aas
popa
out
lods
sub
es
jl
mov
dec
push
pop
es
stos
mov
aaa
outsl
fiadds
int
daa
out
idiv
out
xchg
cmp
add
aas
pop
push
jbe
arpl
aaa
outsl
fidivrs
ljmp
fucomip
cmp
rclb
pop
dec
int
add
in
pop
rorb
pop
ret
mov
jns
jno
roll
adc
nop
xchg
outsl
fidivrs
repz
add
daa
lods
cmc
enter
mov
jnp
xor
sbb
mov
movl
aaa
idiv
lahf
sub
adc
xchg
out
fwait
loop
mov
movsl
test
sbb
jns
push
pop
jno
adc
push
jg
into
pop
push
cwtl
aaa
bswap
fwait
aaa
outsl
sbb
into
inc
mov
or
hlt
and
stos
mov
inc
stos
mov
mov
jge
mov
call
outsl
stos
mov
out
insl
arpl
imul
gs
mov
mov
sbb
fidivrs
repz
out
mov
daa
push
cmp
int
aaa
sub
jne
cli
pop
mov
mov
lahf
jg
aam
cmp
unpcklps
mov
lods
iret
aas
xchg
out
fs
cltd
inc
scas
mov
mov
sub
stc
repz
outsb
rol
push
pop
stos
and
cwtl
adc
aas
jg
ss
adc
and
mov
outsl
stos
lea
jo
lods
push
out
fwait
aaa
inc
scas
loop
jns
cmp
fidivrs
jbe
mov
test
xchg
sub
outsl
mov
inc
add
xchg
repnz
mov
pop
cmp
and
jno
and
or
xchg
xchg
repz
rcll
lea
pop
jne
xchg
push
aaa
outsb
or
lods
jbe
icebp
dec
adc
outsl
ss
aam
ja
sahf
mov
aas
sarb
pushf
push
adc
jecxz
mov
ficoms
sub
jmp
and
movsb
xor
jo
int
sub
or
push
fdivrl
sub
pop
push
sti
int
ja
inc
repz
dec
mov
test
adc
hlt
enter
test
icebp
in
cmp
push
fsubrs
ret
xchg
fcomps
ret
mov
pusha
pusha
jne
mov
iret
ret
aas
daa
jno
decl
xchg
mov
mov
jne
inc
aaa
outsl
fidivrs
xchg
data16
aad
inc
loope
shlb
push
mov
fidivrs
ds
jg
sbb
and
add
fwait
aaa
outsl
jnp
lods
sub
lret
cs
lods
sub
popf
mov
fistl
push
xchg
aad
and
stos
test
fwait
aaa
outsl
fidivs
dec
cmp
xchg
sub
sub
adc
in
int
cltd
clc
scas
lret
pop
mov
dec
fidivrs
cmp
push
scas
adc
sub
outsl
addl
push
xor
jp
jecxz
cmpb
iret
and
idivb
or
repnz
arpl
in
mov
in
and
and
out
aam
movsb
mov
fwait
aaa
outsl
add
mov
fs
and
xchg
adc
fbstp
add
adc
ja
ss
out
lahf
sbb
pop
fstpt
add
stc
adc
xor
mov
dec
into
icebp
inc
ljmp
pop
lahf
jb
popf
or
out
lahf
xor
xchg
mov
sbb
jle
cld
stc
xlat
mov
rorb
rclb
sub
push
aaa
outsl
fdivrp
pushf
mov
push
xchg
mov
mov
pop
test
shld
add
mov
dec
jb
lret
aaa
adc
fld
or
push
fwait
push
mov
mov
repz
jecxz
jecxz
cmpsb
xchg
mov
out
adc
fisttpl
mov
cs
cs
push
inc
add
clc
bswap
pop
clc
dec
insl
pushf
mov
imul
out
cmp
repz
test
inc
arpl
or
jg
inc
das
iret
mov
mov
repz
lahf
mov
sbb
jmp
iret
lahf
jg
fdivl
scas
or
std
add
fwait
adc
out
shlb
and
xor
lods
pop
icebp
xchg
idivb
xor
lcall
mov
aad
pop
call
dec
push
enter
mov
xorb
int
push
mov
fdivrs
mov
movsb
jns
enter
adc
sbb
xchg
addb
sub
pop
mov
repz
scas
mov
pop
jecxz
idivl
mov
add
jo
mov
jno
jle
sub
add
lock
mov
imul
adc
cmp
or
fidivrs
lods
stc
ds
adc
xor
jmp
aaa
outsl
fs
test
and
hlt
arpl
push
lea
sti
pop
sahf
jno
shll
ficomps
mov
pop
das
mov
test
mov
loopne
int
inc
xchg
pop
or
std
outsl
mov
push
add
test
mov
out
fwait
andb
push
push
add
jns
mov
dec
push
sarl
or
insl
lods
rclb
imul
fnstenv
repz
int
fisttps
ret
jnp
idivl
jg
cld
rcll
in
xor
pop
es
sbb
mov
jecxz
fdiv
repz
cmp
sub
add
adc
pop
sbb
stos
or
xor
call
std
adc
aaa
aad
mov
push
push
pop
adc
push
jl
rep
aam
imul
jecxz
xorb
mov
dec
cmpsl
loopne
cmpsl
lahf
aas
icebp
xchg
mov
lods
insb
rol
loop
repz
ret
jns
pop
addb
and
xchg
ja
pop
ss
movsb
jns
pop
dec
lcall
push
jbe
repz
lahf
pop
mov
movl
out
jg
cld
stc
fdivrp
ret
xchg
sub
pop
fldln2
add
push
push
push
out
lahf
aas
andl
icebp
insl
lret
hlt
out
mov
in
in
inc
push
adc
and
fwait
aaa
andb
pusha
sbb
js
mov
scas
mov
mov
mov
mov
fwait
aaa
outsl
dec
test
adc
stos
fnstenv
push
mov
jns
out
cmc
ret
cmp
call
mov
jno
aam
das
push
jns
out
cmp
and
add
out
mov
fwait
aaa
outsl
dec
movsb
cltd
shrb
xor
mov
out
pop
push
mov
xchg
jp
and
dec
mov
fdivrs
scas
inc
sbb
scas
mov
mov
icebp
pop
mov
add
or
test
fwait
aaa
outsl
fidivrs
mov
addl
ljmp
dec
fdivrl
into
xchg
xorb
jg
pop
stos
sbb
add
push
pop
jle
mov
out
lahf
enter
pop
xor
add
aas
jg
adc
xchg
fidivs
mov
mov
sub
clc
insb
rolb
aas
jg
cld
adc
inc
cld
sub
cs
in
cmp
and
repz
lahf
adc
shlb
mov
sbb
mov
cld
stc
stos
sysenter
sahf
jb
jp
jle
mov
repz
pop
pop
les
int3
adc
test
dec
cmp
push
jno
lock
and
pop
cld
stc
repz
mov
xor
cmc
lods
ret
cld
dec
iret
lahf
aas
jg
adc
xchg
xor
mov
lock
fcoml
repnz
xchg
out
in
inc
xchg
jns
xchg
mov
loop
btr
shlb
repnz
popa
gs
cli
rcl
xlat
aas
jg
cld
or
jns
flds
aam
jmp
repz
lahf
bsf
addr16
movsl
movlps
cld
stc
cltd
loop
inc
cmp
adc
lods
out
lahf
aas
sbb
inc
dec
cmc
idivl
lret
cld
stc
repz
data16
sbb
pop
test
iret
lahf
aas
jg
adc
movsl
or
push
stos
push
cmp
bound
xchg
pop
pushf
daa
daa
xchg
pop
ret
aas
jg
outsb
sti
push
hlt
jns
into
jg
jno
or
iret
sub
adcb
cmp
ret
and
push
stos
mov
dec
pop
arpl
and
mov
int3
fstps
fwait
aaa
out
mov
aas
arpl
addb
stc
popa
xchg
in
jns
out
and
loope
test
jbe
das
cmp
sbb
aaa
outsl
fidivrs
add
mov
mov
int3
int3
sub
jp
jge
sub
fidivrs
and
and
out
cmpsl
inc
loope
inc
and
aas
jbe
adc
out
pop
mov
cmp
aam
aaa
outsl
fidivrs
cltd
or
pop
mov
repz
fwait
xchg
call
loope
push
stc
inc
fcomps
fnstcw
jge
iret
jbe
inc
xchg
bnd
fs
repz
xchg
cmp
xor
dec
jmp
lea
xor
test
iret
lahf
jg
ljmp
jbe
pop
rcrb
jns
movlps
mov
scas
iret
lahf
aas
jg
cmp
hlt
push
cmpsb
addl
cmpl
rcrb
pop
fsubrs
aaa
aaa
outsl
fidivrs
loope
into
mov
lret
lret
int
jg
mov
adc
outsl
fidivrs
xor
fucompp
repnz
faddl
in
push
sub
adc
jp
in
sub
fidivrs
pop
jle
xchg
mov
lods
or
push
enter
jmp
fs
xchg
cmp
call
or
pop
inc
ja
daa
repz
js
or
mov
pop
movsb
cmpsl
insb
fidivrs
jg
inc
sbbb
ss
ficoms
mov
xchg
pushf
pop
push
sbb
int
aaa
outsl
fs
push
sub
inc
mov
repz
xlat
aas
insl
lret
inc
out
gs
bound
fwait
aaa
outsl
fidivrs
and
mov
lcall
out
mov
imull
xchg
loope
and
adc
iret
jg
fidivrs
xchg
dec
lods
and
scas
in
push
shl
out
lahf
jns
out
sbb
into
stos
or
cld
stc
insb
es
dec
sub
popf
pop
mov
and
out
lahf
aas
or
inc
mov
movsl
xchg
xchg
or
cld
stc
repz
inc
sub
out
dec
or
add
iret
lahf
aas
jg
lret
and
test
push
popa
andb
nop
pop
in
pop
mov
pop
xor
xor
pop
inc
sbb
outsl
js
aas
sub
mov
scas
test
out
pop
outsl
xchg
push
out
fwait
aaa
cwtl
jb
pop
push
mov
jns
jne
cmpsb
fidivrs
imul
pop
jmp
push
nop
dec
int
aaa
outsl
sarl
add
je
add
xchg
sbb
xor
ret
aam
daa
fwait
aaa
outsl
fiadds
or
xor
repz
or
pop
jns
out
mov
add
ret
pop
cmp
aaa
outsl
fidivrs
orl
xchg
out
fwait
cwtl
xor
outsb
lea
ja
mov
mov
je
pop
adc
jg
mov
mov
cld
stc
repz
xor
arpl
shrl
xor
aad
cmc
lcall
cltd
adc
iret
inc
mov
bound
jmp
cmp
cld
iret
mov
push
jge
push
repz
lahf
pop
inc
add
jge
cmp
jg
cld
stc
push
loop
mov
push
insb
movsl
lods
or
iret
lahf
aas
sub
fwait
cmp
ret
sbb
stc
repz
inc
add
mov
lahf
adc
push
scas
in
cld
sbb
cmp
out
mov
add
outsb
scas
sbb
dec
sub
lahf
cmp
sbb
lret
jns
cmpsb
loop
jbe
scas
dec
jmp
outsl
cmp
outsl
fidivrs
push
pushf
into
dec
add
shlb
rolb
clc
adc
mov
sbb
repz
xor
cmp
jmp
push
loop
lahf
idivl
lret
jns
out
mov
lods
lods
dec
inc
sarl
push
je
cmc
xchg
scas
cld
fists
and
shrb
int
aaa
outsl
fisubrs
adc
or
int
int
int
push
dec
mov
push
xor
popa
jbe
cld
stc
movl
test
push
xchg
jb
sbb
cmp
iret
lahf
aas
jg
mov
das
dec
or
cld
stc
repz
adc
stc
imul
mov
mov
repnz
out
fwait
testl
push
lret
sub
pop
outsl
fidivrs
push
fmuls
xor
int
aaa
mov
out
dec
das
mov
inc
fnstcw
adcb
jnp
mov
jmp
push
pop
jne
sti
imul
mov
das
push
cmc
xchg
les
pop
sarb
dec
sahf
das
mov
insb
fiadds
sahf
shll
xchg
incb
xrelease
cmpsl
cmpsb
adc
cmc
aad
cld
cld
inc
xchg
mov
lea
mov
arpl
enter
faddl
test
nop
ret
dec
sub
ja
dec
gs
outsl
in
mov
fwait
mov
fbld
lods
push
mov
cld
mov
xchg
sbb
inc
pop
sbb
mov
inc
outsl
fdivrl
mov
xchg
scas
cmp
mov
aas
push
xchg
sbb
sbb
lahf
aas
sbb
jl
lock
out
xchg
xchg
or
mov
xor
xor
das
fwait
aaa
outsl
add
jge
mov
orl
out
sbb
add
cmp
adc
movsb
mov
pop
mov
outsl
fidivrs
repz
dec
fidivrl
sbb
inc
aam
sub
fwait
aaa
out
pop
leave
jle
push
test
sbb
mov
es
add
idivb
mov
adc
cmpsl
add
mov
push
pop
add
jbe
mov
insb
adc
jmp
inc
outsb
fidivrs
xchg
jle
inc
and
add
or
mov
out
xor
lahf
adc
and
clc
pop
or
daa
test
xor
adc
dec
push
iret
aad
loopne
and
jbe
lcall
nop
fwait
aaa
popa
mov
pop
int3
cmp
push
repz
push
dec
repnz
inc
std
add
std
mov
aaa
cmp
in
pop
repnz
out
add
pop
mov
and
out
fwait
aaa
sub
jl
adc
sti
xor
fidivrs
les
and
cli
mulb
pop
sbb
nop
scas
xchg
shll
decb
stc
or
and
sbb
out
pop
stc
mov
pop
ja
shll
iret
lahf
aas
loope
fcompl
adc
cmpb
stc
repz
in
insl
loopne
out
sarl
jg,pt
add
lea
int
mov
in
mov
hlt
int
mov
fmuls
ret
jae
out
sahf
ret
cmc
fwait
aaa
outsl
fisubrs
cmpsl
std
decl
je
push
jnp
sarl
int
xchg
cmpsl
fwait
push
and
ja
pop
aaa
outsl
fidivrs
sbb
mov
in
fwait
imul
decb
sarb
out
fistpll
cmp
jp
lds
fidivrs
ret
jb
jmp
and
in
int
mov
testb
loop
nop
aas
js
nop
orb
adc
sarl
push
jg
incl
pop
in
call
mov
lahf
adc
adc
cld
stc
mov
xchg
cmp
sbbl
lods
xor
aas
jbe
add
lcall
mov
adc
das
nop
pop
int3
movsl
ljmp
aas
jg
sub
out
in
mov
dec
cld
stc
repz
orl
repz
push
lahf
aas
jg
sahf
jg
dec
sbbb
push
out
or
repz
jns
sbb
sbbb
jg
cld
in
mov
lods
inc
jns
mov
daa
push
repz
lahf
addb
sub
lret
mov
hlt
jg
cld
stc
mov
jmp
lahf
pop
das
jp
jno
xor
push
lcall
and
rcll
mov
cld
stc
repz
fdivs
xor
iret
lahf
aas
jg
jo
cmc
jbe
mov
mov
out
mov
mov
aad
or
aas
jg
popa
les
push
pop
cwtl
adcl
in
out
idivl
cmpsl
sbb
or
xchg
push
std
pop
push
mov
xor
cwtl
pop
scas
out
fwait
aaa
imul
in
jo
pmaxub
fs
sti
inc
test
in
mov
loop
movsl
das
lock
mov
jo
dec
cmp
lcall
gs
dec
subb
pop
iret
add
xchg
fiaddl
outsl
jg
sarl
shl
jg
mov
repz
shll
pop
pop
inc
lds
aam
mov
nop
lea
jle
orl
repz
inc
dec
mov
leave
dec
test
jp
jmp
mov
mov
mov
test
inc
jae
inc
mov
dec
pop
xor
mull
mov
repz
aaa
push
add
xorb
xlat
mov
outsl
fdivp
add
psubw
enter
out
rcr
mov
and
cld
loope
popa
pop
jne
and
xor
sbb
iret
lahf
aas
cmp
dec
inc
es
adc
shrb
cld
stc
repz
rol
fisttps
test
pop
enter
aas
jg
dec
sbb
loop
cmp
jns
xchg
adcb
dec
adcb
shll
cmp
mov
mov
dec
mov
xchg
daa
orl
xor
fwait
aaa
outsl
hlt
rorl
sbbb
scas
adc
ds
jg
in
jmp
jp
fldlg2
adc
iret
mov
in
and
jae
sti
pop
sahf
icebp
mov
jg
cld
sub
push
aas
adc
and
mov
iret
lahf
jg
popa
in
imul
xchg
movsl
test
pop
js
sbb
fwait
ja
pop
int3
mov
hlt
mov
out
rcll
aas
es
out
cltd
push
mov
jle
xchg
inc
int3
pop
lahf
mov
idiv
sahf
outsl
cmpb
repnz
xlat
cwtl
out
fwait
aaa
aad
xchg
das
inc
sub
push
xor
lcall
in
cmp
jne
cmp
or
or
dec
mov
out
lahf
aas
inc
jecxz
js
jnp
push
bound
cmpsb
and
addb
mov
out
aaa
idivl
jle
mov
arpl
out
jp
inc
jb
stc
repz
adc
iret
pushf
jmp
mov
mov
cld
loop
push
inc
lds
dec
fisubs
inc
lods
cli
stc
repz
dec
sbb
rcrb
jg
aas
jg
cld
pop
cmc
adc
cmp
into
and
lahf
stos
push
sbb
pop
ficoms
sbbl
cld
stc
into
cmp
ret
pop
push
fadds
movsb
push
add
jl
cld
stc
repz
aas
movsb
push
inc
daa
mov
pop
push
lahf
jl
push
out
bound
adc
pop
shll
enter
cmp
fidivrs
push
fstps
fsubs
int
aaa
outsl
dec
push
mov
push
add
pop
xchg
inc
or
lahf
insb
fiadds
fwait
pusha
push
inc
rorb
into
pop
stc
repz
call
push
lret
mov
and
sub
or
cld
cld
aaa
xchg
dec
cli
mov
push
inc
pop
cmp
repz
iret
mov
dec
cmpsb
mov
pop
jl
sbb
mov
repz
cmp
xchg
jmp
jg
cld
stc
push
imul
mov
arpl
lahf
aas
rcrl
pop
xchg
and
sahf
movsb
jecxz
jmp
push
in
aaa
fisubs
lahf
pop
inc
cld
ss
in
and
ret
jle
pusha
frstor
inc
aas
imul
cs
mov
iret
aam
dec
push
rcll
lock
jb
and
int3
int
aaa
outsl
outsb
or
nop
push
cmp
mov
mov
sbb
out
jae
out
jg
mov
and
leave
lahf
mov
ljmp
push
mov
or
mov
hlt
pop
push
aam
cld
stc
repz
call
addb
fsubs
push
inc
jle
jns
data16
out
pop
aaa
mov
clc
dec
stos
aaa
outsl
fidivrs
and
addr16
jmp
out
fwait
and
and
and
xor
out
jne
push
and
jb
adc
ret
icebp
mov
movb
mov
or
popf
fisttpl
sarb
pop
fwait
aaa
outsl
ficoms
adc
xor
fcompl
arpl
and
das
mov
push
cld
in
ss
and
aaa
mov
dec
and
fwait
aaa
outsl
sbb
shlb
adc
nop
out
push
inc
cmc
subb
out
fwait
ja
hlt
imul
push
xchg
pop
fidivrs
outsb
sub
mov
push
xchg
fwait
aaa
outsl
cwtl
hlt
fwait
dec
inc
push
add
dec
test
add
sbb
or
cmpsb
push
dec
repz
mov
inc
sbbl
add
test
xor
aaa
lds
aaa
test
xor
adc
adc
fistps
sub
std
xchg
testb
inc
fnstcw
out
xchg
pusha
es
pop
fstl
xchg
push
xlat
lret
lahf
aas
jg
push
idiv
pop
addb
inc
cmpsb
pushf
sbb
cld
stc
repz
jecxz
call
leave
or
pop
cmp
test
jle
dec
insb
cmpsb
leave
test
int
aaa
out
lahf
mov
lds
setns
aas
mov
jmp
imul
shl
or
outsl
ficoms
hlt
mov
notl
sti
and
loopne
iret
mov
xchg
insl
dec
lock
sar
repz
lahf
adc
mov
movsbl
xor
test
xor
lahf
aas
jg
repz
mov
lock
add
sbb
loopne,pn
aaa
lahf
sub
fidivs
popf
out
out
mov
push
add
out
fwait
dec
stc
jmp
orb
pusha
sub
inc
jb
add
orl
sti
imulb
push
add
add
add
test
add
call
push
mov
out
adc
add
adc
mov
inc
rolb
rorl
push
pop
inc
xchg
icebp
je
dec
push
dec
add
add
test
xor
mov
cmp
pushw
add
jge
xchg
push
ss
jo
add
push
xchg
add
add
or
add
add
and
fs
roll
sbb
add
sub
add
push
or
sbb
push
push
mov
add
mov
push
test
into
pop
push
mov
and
add
ret
adc
test
xor
adc
popa
or
push
push
and
adc
jbe
sub
repnz
lock
or
sub
sub
jbe
lret
or
incb
arpl
push
pushf
xchg
sbb
popa
mov
add
cmp
sbb
add
pop
inc
fs
mov
out
or
inc
test
cli
les
or
push
rclb
test
subl
shrb
fdivr
push
dec
add
rorb
enter
pusha
aad
roll
inc
adc
mov
ljmp
mov
jb
xorb
push
push
inc
scas
or
leave
idivb
xor
or
adc
xor
sub
cli
mov
ljmp
aaa
or
sbb
mov
sar
add
arpl
sarb
or
shlb
add
push
dec
mulb
or
add
xor
lret
dec
or
inc
xlat
sub
mov
dec
adc
mov
pop
sbb
in
nop
mov
cli
notb
push
push
fdivrs
add
mov
inc
test
cwtl
push
push
mov
adc
xchg
add
or
cmovge
push
fistl
andb
mov
cmp
adc
adc
cmp
xor
outsl
push
inc
test
je
mov
add
ror
adc
rcll
add
incl
sub
cmp
cs
jo
inc
rorl
sbb
add
jle
lock
add
pop
push
or
cmp
cmpsb
mov
mov
imul
push
inc
sub
adc
ret
add
sbb
and
sbb
jb
push
jne
add
mov
mov
push
sbb
mov
aad
dec
xor
mov
jbe
adc
add
sbb
push
and
and
das
iret
stc
adc
fisubrl
outsb
or
inc
in
mov
sbb
pop
fs
cmp
adc
arpl
insl
sub
ljmp
or
push
cmp
pusha
leave
add
into
and
shlb
outsb
out
mov
clc
pop
xor
mov
push
data16
mov
add
adc
dec
leave
push
cmp
gs
inc
mov
push
into
mov
sbb
stos
cltd
les
sub
sub
movsl
das
adc
aam
pushf
or
push
lods
jecxz
stos
mov
dec
sub
adc
rcrb
sahf
es
pop
adc
mov
sbb
sub
mov
jl
addl
cmp
xlat
movsl
out
dec
out
or
les
push
mov
and
or
mov
test
pusha
pop
mov
divb
inc
adc
push
arpl
adc
adc
and
cmp
dec
and
aam
xchg
inc
add
xchg
test
rol
adc
add
out
pop
lock
insl
dec
das
mov
cmpsl
scas
or
cli
jae
jo
test
inc
add
jbe
rorl
ret
add
cmp
std
enter
cli
aaa
inc
add
mov
jnp
fs
or
mov
or
and
cmp
nop
btr
sbb
cld
xorl
testb
inc
repnz
push
rclb
jle
add
int
lds
and
push
jns
mov
jbe
and
pop
or
push
mov
out
add
inc
and
scas
add
fdivrl
push
jne
out
xor
sarl
adc
add
subb
sbb
jno,pn
int
mov
push
orl
mov
inc
push
int
fcomps
popa
and
sbb
pop
sub
xlat
lcall
idivb
gs
pop
mov
adc
fldcw
call
mov
xchg
add
sbb
es
cld
cli
and
call
ljmp
cmp
and
stc
or
push
mov
rolb
push
adc
or
test
add
and
pop
adc
dec
test
sbb
sarl
inc
push
ss
sti
inc
add
pop
adc
push
and
jge
inc
pop
ret
mov
repnz
dec
sbb
shlb
sub
mov
std
sub
adc
out
ljmp
bound
or
sub
adc
addl
adc
add
mov
fstpt
push
in
mov
or
sbb
mov
shrb
in
cmpsb
cmp
sbb
test
xchg
adc
or
inc
fildll
push
inc
push
inc
inc
inc
sub
inc
jae
cmp
ljmp
cmpsb
hlt
mov
lock
push
hlt
sub
cmovle
xchg
sub
xchg
shrb
bswap
shl
sbb
repz
xchg
jmp
aad
int
cs
cli
pmulhuw
push
or
out
or
cs
aad
inc
push
scas
mov
add
jecxz
ret
into
add
mov
loope
ss
add
pop
call
call
pop
or
adc
xchg
sbb
sbb
adc
fldl
in
shl
and
out
jge
cld
mov
jb
sub
push
add
std
sub
xor
jno
inc
out
push
sub
jp
cmp
andl
and
or
cmp
and
clc
adc
add
shll
adc
scas
cmc
cmp
jne
rcrb
or
mov
inc
dec
and
add
dec
inc
adc
outsb
ret
xchg
leave
ljmp
or
rolb
sqrtps
mov
stos
lock
pop
lods
mov
jg
jmp
sti
movsl
push
adc
mov
gs
xorb
cmp
lcall
sub
xchg
mov
cli
ret
les
inc
jb
into
inc
stos
jge
or
pusha
dec
loopne
adc
nop
outsb
mov
jno
add
inc
pusha
xchg
push
and
pop
add
lock
sub
call
cmp
hlt
lcall
sub
xchg
or
dec
inc
fs
jnp
sub
adc
sbb
xchg
push
cmpsl
movb
xor
shl
mov
adc
gs
pop
cwtl
jp
push
in
popa
cmp
adc
inc
add
sbb
cmp
xor
xor
repnz
mov
in
iret
or
inc
popa
mov
out
mov
sbb
push
frstor
add
push
adc
push
movl
add
and
or
pop
lock
xchg
or
rcr
data16
inc
mov
jle
or
jo
hlt
outsl
lock
shlb
sub
jmp
add
loop
adc
adc
mov
sbb
or
xor
icebp
add
dec
enter
lret
or
repnz
jge
and
push
push
test
popa
stc
pop
ds
xor
aam
clc
and
lods
adc
mov
mov
in
inc
mov
loopne
add
mov
scas
test
xchg
sbb
idiv
cmp
enter
test
orb
inc
push
icebp
add
push
mov
int3
inc
mov
sarb
sbb
xor
adc
ss
or
xchg
cmp
outsb
test
scas
pop
cmp
sbb
inc
push
ffree
sub
jmp
imul
movsl
or
insl
cmpsl
das
pushf
imul
ficomps
jp
mov
or
adc
jecxz
push
push
out
add
or
mov
sub
pop
pop
rcrl
add
int
xor
jno
adc
or
lods
sbb
dec
mov
mov
mov
inc
cmp
lock
sbb
insl
mov
in
mov
push
push
notl
sub
mov
hlt
mov
and
inc
enter
pop
fwait
cmp
out
cmc
sub
pop
adc
sbb
adc
loopne
pop
aas
or
mov
clc
or
scas
pop
jne
in
cmp
mov
adc
add
or
icebp
xor
inc
or
sbb
out
pop
push
dec
push
or
clc
jg
sub
cs
xchg
mov
add
mov
loop
mov
mov
test
push
std
or
push
rclb
stos
scas
pop
adc
inc
shlb
jno
bound
mov
pusha
call
sbb
xor
rcrb
shr
or
cmp
jle
push
push
out
fs
add
jl
and
inc
mov
inc
shr
sbb
mov
push
sbb
sub
out
xchg
adc
or
xor
inc
add
and
cmp
add
jae
jno
ret
pop
sbb
out
cmp
jae
in
test
mov
adc
jg
ljmp
add
gs
outsl
movb
adc
shrb
lods
mov
xchg
jo
inc
push
adc
dec
jle
push
xchg
aad
or
cmpsl
dec
adc
dec
adc
divl
lret
and
mov
lcall
popa
mov
ss
in
icebp
xchg
aas
call
inc
ret
xchg
xabort
or
stos
add
push
rorl
mov
scas
add
mov
adc
jmp
push
pop
cli
int3
sbb
ret
test
fimull
or
jge
add
jl
adc
xchg
xchg
mov
jnp
imul
push
fnstenv
insb
adc
shlb
sub
xchg
rorb
mov
push
adc
mov
sub
stos
dec
nop
sub
and
adc
push
pop
in
sub
push
in
orb
xchg
imul
adc
hlt
xchg
dec
push
pop
sub
repz
cmpsb
imul
pop
xor
jmp
add
dec
shlb
lret
mov
xor
mov
nop
mov
inc
mov
testl
sysexit
mov
xadd
xor
pop
test
add
pop
mov
ret
jmp
and
mov
push
shll
xlat
pop
lea
pop
shlb
adc
dec
xchg
dec
xorb
cld
dec
inc
xor
mov
xor
mov
leave
jbe
push
ret
in
or
xchg
xor
ds
and
dec
push
pop
adc
xorps
mov
mov
inc
das
adc
movsb
mov
jge
mov
cmpsb
and
mov
sahf
sar
into
lcall
pop
mov
ficoml
int3
or
or
mov
or
jl
or
daa
mov
ret
je
mov
test
push
sub
mov
inc
sbb
nop
cmp
or
jb
dec
out
insl
fstpl
sbb
mov
rcll
jo
xchg
add
mov
inc
test
fisttpl
push
movl
inc
lods
sbb
testl
push
xchg
leave
add
pop
pop
or
mov
sbb
adc
icebp
dec
jp
or
stos
clc
adc
mov
mov
mov
adc
icebp
fwait
shlb
mov
inc
stos
pushf
ret
adc
stos
lock
cli
sub
call
adc
adc
or
sahf
push
push
clc
sub
xor
sub
lock
or
mov
push
lahf
pop
or
ds
push
push
jge
add
mov
int
insb
popa
mov
in
cmp
fcoms
add
pop
dec
inc
mov
cmpsl
mov
adc
inc
loope
dec
push
insl
pop
int3
enter
or
and
xchg
andb
mov
leave
push
ret
add
mov
or
mov
add
sub
and
or
shr
fmuls
adc
push
and
popf
adc
inc
xor
pop
xor
or
testb
pop
in
jmp
add
ret
sbb
sub
or
test
mov
sub
adcl
mov
jo
mov
in
lods
mov
and
push
jnp
push
push
adc
inc
push
xchg
ret
pop
or
rorb
cmpsb
and
sarb
loope
push
or
sahf
inc
xor
dec
or
cmp
scas
inc
add
aam
repz
pop
inc
mov
or
leave
xor
outsb
adc
ret
pusha
or
cltd
xchg
cwtl
pop
pushf
loop
cmp
fadd
aad
inc
xchg
movsl
ljmp
dec
paddsb
cmp
mov
push
sbb
sub
pusha
jmp
rol
rcll
push
xchg
pop
adc
jmp
mov
ror
or
mov
or
iret
xchg
sbb
cltd
and
xchg
mov
test
sbbl
adc
and
push
fwait
arpl
push
cmp
mov
imul
cmp
mov
xor
subl
fmul
mov
loopne
outsb
jge
add
fcmovnbe
sbb
loopne
inc
xchg
mov
inc
fwait
mov
scas
mul
cwtl
jnp
rolb
add
rcr
test
xor
add
xchg
loopne
xchg
push
out
pushaw
das
mov
ljmp
shrb
enter
inc
add
add
push
xorb
pop
shrl
gs
lods
xor
insb
mov
sbb
and
call
add
sub
and
cmpsl
punpckhdq
popa
into
inc
adc
popa
mov
or
pop
add
addr16
sti
pop
sbb
dec
cmp
loop
push
push
and
cmpsb
les
lcall
fs
les
shlb
lcall
sbb
lret
sub
sbb
push
adc
stos
outsl
cld
in
sub
or
test
fldl
xor
dec
mov
jl
mov
or
stc
loop
cmp
pop
cmpxchg
xor
inc
test
push
cmp
add
test
jo
xchg
lock
jmp
mov
dec
call
dec
xor
popf
push
xchg
gs
sub
sub
and
test
or
pop
cmp
push
jge
push
add
inc
loope
push
dec
adc
push
lock
jmp
adc
inc
std
clc
rorb
mov
mov
push
test
xchg
dec
aad
add
imul
cltd
sbb
mov
mov
inc
jge
lds
int3
adc
sbb
pop
pop
sbb
adc
xchg
adc
pop
and
sbb
pop
movsb
fmull
pop
and
jg
push
out
push
add
push
pop
mov
loope
imul
jmp
xor
dec
pushf
pop
jp
mov
push
adc
dec
cwtl
inc
sbb
outsl
cmp
mov
mov
pusha
je
mov
push
clc
push
shlb
adc
pushf
sub
pop
orl
cmp
lods
dec
sub
add
push
jae
adc
jp
add
mov
es
nop
and
xchg
mov
xchg
mov
push
push
pusha
lret
push
das
bound
sarb
je
jecxz
in
mov
jge
sbb
cmp
repnz
pop
clc
jb
jo
gs
cmp
scas
xchg
or
xchg
fiaddl
stos
inc
xchg
or
mov
lea
jo
sbb
xorl
push
adc
push
pop
mov
or
adc
loopne
inc
fisttpl
sub
movb
addr16
xchg
adc
push
xor
mov
mov
push
lock
add
pop
lods
add
mov
add
outsl
icebp
call
and
mov
cli
scas
xor
or
cmp
adc
xchg
dec
pop
test
jmp
aad
adc
xor
insl
cmpb
shrl
adc
rorl
nop
mov
lcall
push
mov
pop
mov
push
add
pop
sub
shll
mov
mov
xchg
cli
enter
sub
imul
ljmp
call
xor
sbb
in
add
sbb
adc
mov
sbb
rclb
inc
xor
lcall
pop
pop
aad
leave
pop
les
or
sub
mov
sub
or
adc
push
js
sbb
clc
sub
xlat
or
mov
fcoms
push
jo
jno
adc
jecxz
push
xor
mov
adc
adc
xor
inc
call
jae
clc
add
add
rorb
add
inc
daa
push
mov
rclb
pop
push
cmp
adc
loop
test
lock
adc
rol
inc
mov
push
jo
fsts
dec
adcb
pop
xor
orl
rorl
and
cmc
outsl
cmpl
test
mov
popa
and
testb
shrb
push
pop
fnstsw
shlb
xor
push
adcb
stos
mov
sbb
sbb
adc
call
or
pop
outsl
cs
test
popa
or
sbb
push
inc
adcl
vsubps
fcmovb
push
push
push
add
pop
js
and
dec
cmp
jl
orl
lret
pushf
add
in
and
rorb
pop
inc
rolb
adc
call
pushf
test
pop
inc
fldl
mov
les
dec
lods
ret
pop
cmp
icebp
push
rorl
add
add
pmaddwd
pop
xchg
xor
shlb
movsl
mov
jb
lds
lret
in
xlat
xchg
push
fwait
mov
pop
adc
cwtl
or
call
sub
arpl
test
icebp
cs
bound
adc
mov
in
pop
cltd
adc
mov
ss
sub
ror
cltd
push
cwtl
jo
cs
arpl
push
cmp
test
adc
push
inc
inc
scas
clc
stos
push
jae
mov
xchg
aam
psrlw
mov
popa
or
add
aam
addl
add
mov
add
into
sbb
pop
dec
invd
clc
es
push
bound
dec
push
mov
and
adc
add
sahf
addr16
and
mov
test
outsl
or
shrl
outsb
rcrb
mov
dec
rcrb
adc
push
pushf
pop
mov
xor
andl
add
in
stos
clc
lcall
out
rorl
popa
sub
or
xchg
rclb
mov
test
inc
test
loopne
into
inc
and
or
and
push
push
ret
pop
in
pop
cli
xor
sbb
out
int3
ret
adc
inc
add
movsb
fwait
cwtl
inc
mov
add
icebp
ret
mov
jmp
push
sbb
xor
and
lcall
sbbl
mov
xor
rolb
mov
loopne
adc
mov
popf
adc
cwtl
frndint
adc
roll
call
cmpsb
aaa
dec
orb
xchg
sub
and
jne
jno
sbb
icebp
out
sarb
rol
pop
push
rclb
nop
cmp
inc
jo
addb
pop
adc
adc
cmp
push
mov
mov
pop
or
adc
push
mov
iret
pop
and
lock
fdivl
add
popf
sbb
mov
ljmp
rcrl
mov
js
pop
or
or
addb
lret
cmc
std
dec
mov
lods
aas
adc
cmpsl
mov
pop
rcll
daa
jno
lret
cltd
push
add
or
test
imul
add
sub
rclb
pop
cwtl
push
aad
xor
mov
leave
icebp
inc
or
inc
inc
xchg
sbb
inc
pop
fisttpll
les
mov
or
sahf
sbb
dec
jo
pop
or
mov
popf
sub
xor
push
shll
jge
add
pop
adc
pop
sub
jmp
jge
cmp
and
add
push
inc
push
inc
or
stos
cmpsl
and
out
iret
mov
orb
dec
mov
std
cwtl
adc
add
inc
lods
ret
leavew
xor
add
or
or
cmp
inc
jnp
adc
fisubs
movsb
mov
inc
mov
mov
cmp
lret
push
cmp
xchg
add
inc
jae
sahf
or
add
and
fmulp
xchg
sbb
call
push
xchg
add
popf
adc
jnp
mov
mov
add
subl
xor
push
and
sub
pop
and
cmp
mov
pop
sbb
dec
ljmp
orb
jb
hlt
mov
sub
adc
call
jb
add
sbb
ljmp
adc
pop
add
xchg
sbb
xlat
sbb
adc
sbb
imul
fwait
sbb
inc
sub
xchg
mov
add
mov
jno
or
js
stos
xchg
mov
cmp
dec
jg
pop
ror
lret
mov
jo
jo
insb
jl
mov
sub
mov
mov
mov
and
ja
inc
add
test
shrl
lcall
ljmp
mov
dec
clc
push
cmpsl
sub
mov
inc
mov
stos
xlat
lret
push
and
movsl
mov
mov
dec
stos
or
mov
xor
scas
sbb
and
sub
scas
xchg
jecxz
test
loop
xor
mov
dec
orl
cmp
inc
fmul
and
test
pop
push
icebp
stos
inc
inc
in
push
addb
push
nop
mov
shrl
mov
adcl
jg
sbbb
xor
punpcklwd
shrb
xchg
out
mov
inc
adc
out
sbb
shll
inc
andl
and
out
scas
insl
jecxz
sbb
cmp
std
push
rclb
aam
push
mov
loop
mov
cmp
sbb
clc
mov
pop
icebp
push
adc
mov
cmp
pop
icebp
or
cmpsl
jno
xor
icebp
mov
push
push
pop
and
mov
push
dec
sbb
pop
aam
push
xor
dec
movsl
jo
sbb
adc
sti
arpl
add
mov
mov
addl
or
inc
repnz
adc
pusha
inc
push
sub
lock
dec
inc
cmp
sub
int3
mov
jae
inc
mov
popf
dec
insl
sbb
or
nop
or
mov
adc
jo
sti
movsb
sbb
push
dec
negb
add
das
pop
loope
leave
push
xchg
add
scas
cmp
cli
sbb
stos
sub
add
dec
xor
xor
je
mov
popa
mov
and
mov
imul
pop
adc
push
stc
jge
mov
mov
pop
es
arpl
leave
cs
pop
sbb
sub
loop
add
fcompl
jnp
xor
or
mov
sub
sub
pop
mov
jecxz
cmp
mov
dec
push
enter
nop
dec
jl
or
push
bound
add
add
mov
or
dec
data16
sub
and
bound
add
call
jae
loope
pop
xor
cltd
dec
iret
inc
pop
aad
jo
mov
sbb
cmp
mov
dec
and
xor
mov
into
test
mov
and
xchg
sbb
mov
ret
cmp
push
inc
adc
sbb
pop
sub
mov
int
mov
push
and
mov
dec
sarb
inc
jnp
leave
inc
cmp
xor
insb
cmp
mov
ljmp
and
call
imul
mov
test
xlat
sbb
pop
or
aam
sbb
pop
xchg
repnz
andl
mov
mov
les
rcrb
pop
pop
and
push
dec
fsts
add
call
insl
lods
ret
push
lea
les
mov
sbb
mov
jmp
movsb
pop
or
loopne
je
ror
out
ret
jge
or
sub
adc
mov
mov
mov
loope
inc
in
js
aad
pusha
mov
mov
mov
dec
push
or
or
in
pop
and
mov
scas
and
repnz
in
push
or
xor
xlat
push
mov
jmp
test
and
cmp
or
pop
sbb
mov
push
push
jge
inc
lcall
sub
and
sbb
mov
sub
push
das
lahf
dec
cli
add
cmpsb
bound
mov
add
iret
push
sbb
xor
push
or
or
push
pop
insb
push
push
cmp
test
pop
aam
jg
jecxz
addl
sbb
enter
push
mov
mov
rcrl
or
icebp
jp
mov
add
cmc
push
mov
push
or
and
stos
or
xor
out
xchg
push
jns
xchg
jne
movsb
dec
lock
lods
add
cmp
test
jns
push
mov
jb
shll
shlb
pushf
mov
fcomps
adc
rol
xlat
movsb
pop
cmpsl
sti
mov
aad
cmp
add
lret
push
and
les
insl
mov
fsubl
loopne
test
jnp
mov
mov
sbb
cmp
fs
sbbb
xchg
aam
aad
dec
mov
aam
pop
les
adc
push
aaa
mov
fnstenv
add
scas
jne
push
sbb
lret
lahf
and
cmp
mov
rolb
pop
or
inc
xchg
sbb
add
push
mov
jae
add
sub
mov
jns
shll
push
mov
sub
push
fadds
loop
test
mov
adc
fscale
imul
and
push
sbb
adc
jmp
jp
inc
iret
inc
aaa
rcrl
out
mov
add
mov
scas
ja
push
xlat
add
into
inc
push
sub
pop
lods
pushf
int3
sar
arpl
inc
adcb
or
cmp
movsb
add
lock
adcl
and
mov
rcl
pop
inc
mov
jle
ret
or
dec
jnp
xchg
adc
shrb
xlat
xor
sub
inc
adc
sub
es
and
mov
dec
sub
mov
jp
mov
xor
or
lret
fcoms
dec
loopne
sbb
xorb
add
mov
daa
push
mov
pop
cmp
cmpb
ss
or
out
jecxz
pop
test
add
mov
les
rorb
pop
sub
mov
lret
cmp
push
inc
cmpb
rorl
sahf
clc
sbb
mov
add
lods
mov
orl
jnp
dec
xchg
hlt
test
andb
adc
add
dec
mov
sbb
repnz
inc
shll
mov
aam
and
dec
aaa
and
inc
out
orl
inc
sub
ss
mov
ljmp
mov
dec
inc
mov
cmp
cs
jle
mov
inc
cmp
mov
add
adc
jno
cmp
push
cli
xor
push
add
sbb
xchg
sti
and
rcl
mov
xchg
fstl
adc
adc
mov
adc
sbb
xor
push
scas
js
mov
pop
add
sub
inc
inc
adc
sub
push
dec
ret
sub
add
fdivr
sbb
out
nop
sub
add
sub
test
inc
mov
loope
adc
int3
scas
add
test
push
leave
imul
orl
xor
sub
add
lock
push
mov
cld
stos
pop
sub
js
imul
add
xor
or
mov
or
adc
and
outsl
pop
adc
sbb
add
inc
out
lret
adc
inc
mov
dec
add
sub
int
bswap
out
xor
int
ljmp
sub
add
es
dec
mov
push
add
ret
xchg
notb
adc
or
cmp
rolb
cs
push
mov
bound
pop
mov
rolb
bound
frstor
loope,pn
lea
jmp
loope,pn
aam
sub
jnp
stos
xor
icebp
mov
sub
sbb
dec
lea
shl
popa
sbbl
jo
sbbb
push
call
movsl
addr16
rolb
mov
mov
cmp
pop
js
insb
idivb
dec
pop
and
add
cwtl
cmp
dec
into
jp
mov
addb
jo
adc
pushf
stc
or
test
mov
push
adc
stc
sbb
es
out
pop
inc
inc
js
mov
adc
rolb
rolb
mov
cwtl
cmp
add
sti
inc
xchg
sub
mov
sbb
filds
lcall
or
enter
cli
pop
stc
or
lods
sar
in
add
xor
sbb
xlat
add
xchg
addl
rcll
or
cmpsl
movl
ret
es
repnz
mov
inc
xor
inc
xchg
flds
push
scas
push
cltd
mov
dec
mov
jge
xchg
jns
cmp
je
in
adc
xor
cmpsb
mov
and
mov
subb
cmp
pop
cs
aam
popa
loope
adc
bound
adc
gs
and
rorb
mov
push
out
cmpsl
and
xchg
and
xchg
rcll
or
inc
movsb
pop
push
inc
fisubrl
push
inc
mov
enter
pop
cmp
pop
sbb
push
add
xor
add
test
popa
pop
int3
push
aad
aam
fcmovne
push
add
popa
and
jb
sbb
and
sbb
lock
adc
ret
jmp
mov
xor
mov
inc
push
subb
mov
jbe
pop
notl
cltd
in
or
cmpl
inc
push
icebp
jmp
mov
sbb
aam
shrb
push
push
and
sti
add
pushf
adc
mov
push
ficomps
aaa
in
sbb
jl
adc
cmp
xor
xchg
or
add
add
xchg
or
dec
cli
push
push
loopne
jg
hlt
and
inc
aas
mov
sub
add
addr16
lea
mov
adc
mov
push
call
les
aam
and
test
add
into
rcrb
adc
leave
xor
jb
loop
pop
adc
hlt
push
add
xchg
jns
or
adc
push
popa
loop
add
and
or
jo
inc
push
adc
fstpl
add
dec
xchg
into
push
mov
mov
push
mov
xchg
sbb
mov
arpl
leave
rorb
sbb
adc
sbb
loop
inc
push
test
pop
mov
aas
cli
or
ljmp
add
ret
jl
push
fisubs
and
lods
or
cli
shrl
rorb
mov
mov
in
dec
inc
sahf
xchg
mov
cmp
pop
xchg
ss
jmp
push
mov
push
add
and
pop
xchg
adc
dec
push
inc
mov
add
shll
mov
icebp
xor
xchg
push
adc
lock
push
push
clc
bound
aam
ret
xchg
sahf
lret
bound
pop
xlat
and
dec
rcrl
or
or
and
in
stos
cmp
mov
add
sub
push
jp
jg
or
cli
or
mov
pop
int
inc
xchg
xor
sub
or
mov
movsl
aad
lcall
call
xchg
push
adc
aam
ficoms
pop
adc
sub
inc
addr16
add
xchg
cmp
fcompl
add
ja
xchg
cmp
add
inc
mov
or
and
scas
loop
sbbl
dec
pop
xor
lock
int3
push
mov
test
xchg
jecxz
ret
adc
je
push
lcall
fwait
lds
pushl
or
mov
xchg
test
xor
adc
adc
daa
add
lcall
push
cmpsb
pop
int3
inc
outsl
outsl
pop
xor
add
mov
push
and
jmp
js
push
inc
andb
shlb
scas
or
inc
jg
lock
cltd
or
add
adc
add
cltd
sbb
es
rcrb
pop
shl
out
test
xchg
sub
jmp
jmp
nop
push
mov
add
pushf
mov
inc
push
add
pop
in
ljmp
pop
mov
push
dec
and
enter
jb
lcall
xor
rcr
test
cmp
xchg
push
add
addb
or
pushf
orb
inc
shrl
div
out
mov
lcall
repnz
push
fisubl
es
and
es
ret
or
cld
adc
jns
add
data16
sbb
insl
push
xchg
sahf
aam
sbb
cli
sbb
fsubl
jo
xor
sbb
adc
roll
aaa
dec
sub
rclb
inc
and
pop
adc
pop
and
or
inc
dec
mov
and
ret
adc
ret
ds
push
xorl
dec
sub
add
mov
sub
add
jbe
jp
mov
and
orb
cmp
punpcklwd
and
repnz
xchg
lods
xor
push
rolb
xchg
mov
push
inc
xor
mov
or
insb
or
push
mov
jg
pop
xchg
mov
pushf
ret
and
cwtl
daa
jnp
loopne
pop
add
les
scas
sbb
mov
and
das
jne
stos
dec
scas
or
mov
out
into
inc
sub
adc
cs
xchg
inc
add
lock
xchg
in
dec
and
add
jb
jmp
sbb
xor
enter
mov
jae
outsl
ret
cmp
push
mov
movsl
sbb
or
adc
mov
add
loop
inc
xchg
or
add
and
sahf
add
push
pop
les
adc
mov
adc
mov
addb
jnp
pop
cmpsl
pusha
push
inc
aam
xchg
and
stos
and
loop
lock
sbb
leave
push
rclb
bound
inc
xchg
cmp
sub
add
adc
pop
lret
in
in
mov
add
aad
and
aaa
or
das
nop
pop
xchg
mov
inc
into
ljmp
cmpsb
rolb
ret
loopne
add
xchg
add
sbb
jb
and
rolb
popa
shl
leave
push
nop
inc
jne
cli
fwait
cli
push
jbe
ret
test
pop
mov
push
insl
pop
movsl
push
mov
imul
jae
jle
cli
push
loope
jo
mov
roll
inc
jbe
in
je
jle
xchg
ret
adc
enter
daa
xor
testl
xchg
and
push
call
shl
jl
xchg
cmp
cmp
add
out
jecxz
dec
mov
ss
add
push
sete
std
pop
out
mov
dec
mov
neg
mov
loop
pop
add
mov
add
aaa
lret
js
sub
pop
sbb
in
xchg
sbb
or
sub
lock
add
insl
in
adc
push
nop
leave
cmp
adc
jo
sbb
xchg
mov
cli
cmpsl
sbb
adc
divl
js
movsl
fidivs
mov
cmpsl
inc
add
dec
jmp
out
std
fildl
xlat
outsb
shrb
inc
test
inc
std
mov
sbb
daa
je
fimull
mov
ret
popf
movsl
addb
pop
sbb
push
pop
stc
subl
push
inc
push
jmp
je
sbb
inc
cmpsb
ret
ret
jb,pn
mov
jmp
push
or
xchg
or
adc
orl
push
add
es
mov
jl
pop
pop
imul
sub
sbb
jae
add
sti
rolb
shrb
mov
cmp
cmc
gs
stos
int
add
lods
xor
dec
sbb
pop
sbb
push
mov
add
rorb
adc
ljmp
lods
adc
mov
dec
push
inc
mov
test
test
adc
adc
mov
call
mov
pop
pop
sub
test
lock
andb
sahf
jbe
test
rclb
push
or
loope
push
xor
adcl
sti
out
inc
adc
rcrb
movsb
mov
ja
mov
dec
test
mov
pop
adc
sarb
adc
in
rorl
or
mov
roll
add
call
cmc
xchg
sub
or
stos
push
popa
fsubs
rorb
sbb
push
scas
adc
mov
or
sbb
push
push
push
ret
rolb
jle
pop
imul
adc
rcl
dec
sbb
or
mov
loope
pushf
push
nop
sbb
loop
test
push
push
mov
mov
lods
xlat
mov
sbb
lret
mov
jne
sahf
push
movsl
pusha
adc
ljmpw
push
ljmp
test
mov
or
jmp
test
std
or
inc
sub
scas
mov
adc
adc
icebp
test
add
bound
jne
fisttpl
sarb
in
stos
shll
dec
mov
mov
pop
sbbl
and
sbb
in
pop
ja
and
or
adc
inc
adc
mov
xor
mov
or
fisubl
dec
push
push
cmp
xchg
imul
pop
pop
pop
push
adc
call
pop
test
sbb
ret
in
test
push
rorb
ss
push
inc
loope
leave
mov
dec
imul
adc
push
pop
sub
and
adc
inc
push
push
push
cld
cmp
mov
int3
cmc
mov
or
test
push
push
add
adc
cltd
add
pusha
xlat
repnz
stos
and
cmp
add
push
mov
add
jae
lock
cmpsl
and
in
adc
push
loopne
inc
loopne
shll
adc
test
popf
mov
or
sbb
dec
push
popa
xor
bound
into
jl
xor
sub
jne
cmp
push
dec
call
sub
andb
sub
daa
ljmp
adc
xchg
fadds
dec
mov
or
mov
cmp
dec
pushf
add
lock
inc
mov
adc
dec
dec
lods
add
and
test
fisttpl
test
insl
or
dec
xor
push
jle
sub
mov
dec
inc
gs
push
pop
xor
add
push
adc
pop
sbb
push
inc
inc
stos
inc
add
jb
push
popl
test
loope
cmp
mov
adc
mov
or
rolb
cmp
arpl
mov
jb
pop
cmp
arpl
jno
xchg
add
loopne
notb
test
fsubrs
dec
sbb
cmp
adc
enter
into
inc
mov
and
sbb
aam
add
adc
or
or
roll
and
sbbb
xlat
dec
popa
jge
pop
sbb
push
outsb
push
mov
jns
loopne
mov
pop
lods
in
lods
cmp
loopne
mov
into
loopne
add
inc
xchg
scas
repnz
cmpl
add
imul
add
add
lock
cmp
out
cwtl
pop
add
cmp
or
add
adc
sub
push
jmp
add
mov
rcrl
lock
and
inc
push
xchg
sub
in
jo
or
arpl
jmp
imul
add
sbb
lods
bound
or
roll
mov
scas
call
add
add
lret
mov
pusha
xchg
push
inc
rolb
adc
inc
sbb
and
dec
push
or
lahf
adc
xor
in
push
dec
in
aam
out
add
mov
and
xchg
add
pusha
jns
rorl
push
xor
unpckhps
loope
mov
push
adc
pop
rolb
ret
aam
outsb
cmpsb
xor
adc
sub
mov
inc
adc
popf
dec
les
xor
shlb
inc
test
add
add
bound
mov
lea
cmovo
test
sub
mov
xor
test
xchg
stos
cmpsb
and
push
dec
pop
scas
push
add
hlt
ret
dec
rolb
add
push
loope
add
add
add
and
pop
xchg
bound
push
add
dec
scas
push
push
rorl
and
movsb
cmp
dec
push
cmp
loop
push
lcall
mov
icebp
or
add
add
rcll
cmp
stos
adc
mov
xchg
adc
mov
into
inc
ljmp
lods
popa
and
mov
mov
dec
xchg
lods
dec
mov
add
sahf
dec
pop
inc
push
movl
imul
fsts
add
test
shlb
pop
sbb
xor
ljmp
js
pop
push
pusha
enter
or
test
push
jbe
adcb
adc
lret
adc
add
jbe
mov
pop
loopw
mov
addl
jb
xor
pop
pop
cmp
pop
sub
push
stc
dec
into
push
rcl
mov
xor
and
aaa
push
inc
test
fdivrs
mov
lcall
add
adc
test
or
push
andl
push
pop
jmp
sti
test
or
and
add
in
daa
pop
cmp
cmpsl
lret
movb
stos
sbb
addl
scas
adc
dec
push
add
mov
adc
popf
cmp
xchg
inc
jmp
cltd
adc
nop
stos
inc
rcll
pop
cmp
sbb
je
inc
es
roll
push
loop
xchg
sbb
in
pop
xchg
pop
push
sub
and
pop
clc
cmpl
jle
decl
lret
test
xlat
or
insb
les
bound
jo,pn
cmpsl
das
adc
out
push
imul
in
jmp
mov
shlb
stos
mov
mov
insl
test
adc
test
sar
ss
stos
inc
xchg
into
sbb
jnp
pop
jnp
ficompl
or
jmp
mov
push
cmp
push
stos
adc
or
sbb
ud0
ljmp
and
mov
ret
mov
shrl
scas
inc
pop
sbb
fcmovnbe
inc
dec
inc
mov
xchg
adc
or
or
sbb
rcll
mov
test
jo
pop
add
push
inc
aad
push
js
mov
inc
lret
sub
xchg
scas
adc
lds
sub
mov
cs
or
hlt
sarl
cmp
add
stos
and
push
adc
outsb
in
push
sub
rcr
cmp
jg
inc
xor
lea
push
das
orb
ret
adc
orb
leave
ret
cmp
dec
mov
pop
xchg
inc
popa
aaa
mov
inc
mov
sub
jae
fdivrs
ds
decb
dec
and
mov
rolb
add
mov
mov
xor
inc
scas
jo
mov
pop
rclb
movsl
xchg
xlat
or
mov
into
pop
inc
dec
daa
addb
orb
repnz
std
cmc
adc
or
movsb
push
and
mov
or
xor
outsl
sub
mov
mov
push
ljmp
ljmp
ficompl
add
xchg
lock
inc
mov
sbb
push
inc
inc
dec
or
mov
pop
inc
adc
mov
icebp
or
pop
mov
ss
enter
mov
lret
stos
pop
push
roll
je
or
mov
cwtl
ljmp
inc
adc
scas
or
sub
leave
test
sub
add
add
mov
sub
testb
adcb
mov
stos
test
adc
sbb
jnp
sbbl
and
andl
add
pop
mov
bound
lds
xchg
mov
push
push
mov
jmp
aad
or
loope
shl
pop
pop
stc
or
sbb
sbb
in
jg
push
pop
xor
ret
pop
cmp
and
jmp
in
jo
rclb
pop
mov
bound
adc
and
jle
scas
dec
ljmp
mov
filds
mov
clc
aaa
roll
sbb
push
popf
mov
xchg
jg
addb
adc
gs
scas
adc
sbb
add
mov
lret
mov
rorl
lea
push
popa
addb
inc
inc
imul
movsb
add
push
xchg
adc
pop
jge
mov
inc
mov
shlb
test
jbe
inc
into
inc
enter
mov
sbb
lods
shl
inc
imul
push
sbb
jns
or
inc
rcrb
pop
cmp
or
or
call
test
imul
mov
jp
js
push
adc
add
shll
cmp
enter
test
inc
cmpsl
xorb
outsl
mov
add
scas
ss
sbb
orl
cmp
adcl
enter
xor
icebp
dec
fiaddl
sbb
testb
mov
cmp
mov
clc
aaa
mov
add
out
push
out
orb
sbb
add
sbb
pusha
cmp
daa
xchg
cmc
mov
add
add
sti
popf
adcl
inc
inc
mov
push
jge
sbb
add
mov
int
push
mov
cmp
push
nop
or
mov
mov
push
out
lock
mov
pop
daa
mov
add
ret
add
jmp
pop
and
jne
cwtl
andb
adc
sbbb
adc
repz
inc
in
mov
inc
cmpl
loope
inc
add
lds
cmp
adc
dec
prefetchnta
xor
adc
loopne
add
das
mov
add
in
push
add
jb
add
out
push
add
pop
push
pop
hlt
orb
cmpsl
mulb
into
push
andl
adc
lret
nop
sub
mov
cmp
add
sub
xor
test
bound
and
mov
adc
sbb
mov
mov
or
lock
xor
or
pop
ljmp
popa
xchg
push
es
inc
aam
push
xlat
aas
and
adc
push
add
add
adc
mov
xchg
fmull
into
mov
roll
dec
mov
dec
sti
push
push
push
adc
cmpsl
out
dec
rorb
push
icebp
sub
mov
cli
lock
cmpsb
or
je
mov
call
stc
push
adc
push
arpl
adc
and
sub
loop
xor
sbb
shll
ficoms
add
fisubs
mov
sbb
adc
rcrl
hlt
and
aad
pusha
and
lds
add
push
or
outsb
mov
inc
inc
scas
fsubrs
push
stos
mov
sub
andl
jb
sbb
loopne
push
movsb
lcall
ja
rclb
dec
int3
leave
jecxz
femms
ret
shl
mov
push
jne
out
or
in
ror
or
outsl
cmovbe
adc
mov
cmpsb
jge
push
pop
vmovsldup
rclb
pusha
mov
jne
sub
sbb
and
lahf
or
dec
aas
inc
icebp
lods
or
loopne
sbb
dec
adc
pop
jnp
or
mov
loope
inc
sbbl
gs
arpl
add
add
scas
mov
mov
out
inc
ret
pop
pusha
call
gs
mov
sbb
sbb
popf
sub
adc
cmp
sbb
push
inc
mov
push
push
dec
dec
mov
push
cli
or
xchg
mov
test
test
in
dec
jne
mov
mov
sub
inc
add
inc
jbe
xlat
loopne
adc
add
or
mov
and
mov
cmp
rcll
ret
push
jno
lret
stos
sahf
mov
std
shl
ljmp
push
mov
push
cli
push
xor
scas
inc
cmp
add
inc
das
mov
scas
or
xor
push
fsubr
add
mov
mov
cmp
push
into
hlt
enter
out
fmuls
add
lds
add
add
mov
stos
inc
mov
jg
mov
mov
rclb
push
pop
mov
xchg
cwtl
and
jb
add
dec
cmpsb
inc
pusha
cmp
and
mov
inc
cmpsb
loop
outsb
test
mov
paddb
push
cwtl
sbb
jb
js
popa
pop
out
lcall
addr16
arpl
and
mov
push
push
mov
cmc
adc
jp
or
jne
add
rorb
enter
inc
pop
dec
add
or
or
cmp
push
push
sbb
pop
popa
mov
sbbl
inc
jae
cmpb
or
push
and
mov
inc
pop
inc
pop
fmul
ja
xchg
xchg
cwtl
aam
repnz
mov
adc
lds
sub
mov
popf
jo
adc
shl
filds
xchg
test
ljmp
sbb
jne
and
push
jb
push
sbb
js
popl
sub
push
add
cli
jp
push
push
mov
sbb
or
push
add
jo
or
das
cmpsl
or
mov
adc
scas
adc
adc
dec
push
add
cli
mov
pop
lcall
stos
repnz
sbb
cltd
add
inc
sbb
push
mov
add
clc
out
or
mov
dec
or
in
or
in
out
jbe
ret
mov
jb
lock
pop
andl
pop
and
and
or
mov
pusha
int
mov
rcrl
loopew
push
icebp
adc
or
or
rol
xchg
mov
push
shrl
xor
jo
push
bound
adc
sbb
dec
in
arpl
mov
and
pop
loope
push
fcoms
push
sub
adc
cwtl
notl
loope
nop
call
gs
aam
or
mov
xor
or
or
aad
adc
ret
cmp
pop
inc
scas
shrb
pop
jl
xor
pop
imulb
xorl
leave
jae
es
in
cld
mov
inc
push
mov
push
push
mov
call
sbb
sbb
rorb
pushf
movsb
and
out
mov
in
sub
xor
loopne
push
adc
pop
test
jne
roll
fs
inc
aad
hlt
adc
xor
mov
mov
in
or
cmp
cmp
femms
push
inc
fstpt
orb
add
or
sub
add
jle
lea
push
sub
or
negb
testb
je
mov
aam
add
pop
sbb
and
mov
and
push
ret
mov
inc
in
mov
jle
aaa
popa
or
adc
xor
ret
mov
jne
mov
fdivrp
push
dec
cmpl
or
and
mov
or
push
inc
das
and
lahf
insb
or
inc
and
mov
aad
je
jb
jle
stc
mov
add
add
ret
push
divb
addl
pop
adc
mov
sub
pop
cmp
jne
adc
mov
sub
and
jl
stc
out
incb
push
mov
mov
enter
les
mov
ss
mov
or
push
lea
sbb
ss
push
in
pop
cltd
sbb
stc
pop
in
jmp
mov
pop
je
or
int3
notb
fwait
repnz
test
fldcw
mov
enter
mov
add
push
jo
push
sbb
pop
nop
pushl
or
or
xchg
subb
in
insl
pop
or
pop
or
jne
outsb
pop
mov
andl
pop
jmp
daa
loop
test
das
insb
dec
push
int
mov
mov
mov
ret
mov
mov
push
lods
int3
xchg
push
cmc
jge
lea
movsb
add
fldl
and
incl
fistpll
sarl
pop
negl
sub
pop
movsb
or
inc
pop
orl
jnp
pop
cmp
cmp
lahf
test
cmp
lea
stc
cmp
push
cmp
jns
mov
rcrl
jg
jge
js
pop
jmp
call
mov
or
jl
idiv
jmp
addr16
pop
leave
mov
lods
inc
sbb
push
popa
cmp
push
pop
mov
adc
mov
xor
xlat
mov
or
fmuls
dec
jmp
call
sti
jmp
push
cmp
jne
mov
inc
pop
je
test
sti
sbb
mov
das
adc
inc
jmp
cmpb
scas
mov
or
jbe
inc
or
ja
xor
fisubrs
mov
push
push
xor
cmp
mov
pop
pop
mov
std
loope
cmp
je
cmp
je
inc
out
sbb
pop
lea
out
cmc
lea
add
xrelease
ljmp
xlat
lods
sbb
std
cmp
cmp
mov
mov
pop
inc
cmpb
and
cmp
mov
xchg
sub
pushl
js
pop
bound
add
aaa
jne
pop
incl
call
push
add
xchg
pop
xchg
mov
mov
imul
mov
mov
dec
mov
mov
push
add
push
mov
ficoms
lahf
pop
mov
xchg
fdivs
fmuls
mov
fwait
das
daa
and
push
push
xor
cld
daa
adc
pop
movsb
pushf
hlt
movsl
insl
jae
mov
sbb
es
jge
lods
add
jne
jecxz
or
add
dec
sbb
aaa
add
mov
lock
adc
fwait
inc
mov
inc
cmp
sub
outsl
das
shl
addb
add
xor
mov
arpl
adc
aad
into
or
mov
sti
add
add
sbb
inc
push
add
add
inc
sbbl
mov
inc
mov
and
or
jne
jne
dec
insl
das
sbb
jmp
add
jge
sub
loopne
sub
ror
icebp
pop
enter
adc
add
sti
mov
imul
test
pop
jne
inc
inc
jmp
xchg
das
fsubrl
sub
ret
add
or
push
jecxz
jmp
andl
sete
mov
mov
jmp
rorl
xchg
push
inc
mov
push
pop
inc
mov
outsl
mov
andb
mov
pop
push
aas
je
minps
sbb
loope
or
push
pop
sbb
inc
fdivs
add
or
inc
xor
push
or
and
mov
pop
sti
pop
ret
dec
inc
mov
push
mov
mov
sbb
add
or
aad
repz
jnp
aam
lea
ds
pop
inc
inc
cmp
pop
pusha
addr16
int3
ljmp
sbb
insl
inc
or
mov
mov
cmp
jae
cmp
cwtl
mov
push
leave
das
mov
inc
cmp
clc
mov
pop
add
aad
xor
xor
xor
mov
adc
push
push
shll
lea
or
daa
pop
loop
ret
mov
inc
cmp
out
add
test
ficoml
or
jnp
add
sub
sbb
push
into
stos
sti
jmp
lea
lds
push
cmp
mov
jmp
pop
pop
dec
in
pop
cltd
sub
cmp
imul
lock
cli
pop
pop
loopne
loopne
lea
outsb
ret
jae
outsl
add
andl
mov
add
and
pop
jmp
sbb
mov
sar
dec
cmp
in
or
cmp
xchg
xchg
mov
add
push
clc
jl
xchg
jne
daa
pop
addr16
mov
lods
flds
push
cmp
xorl
subb
andb
inc
mov
bound
adc
and
roll
test
jl
jmp
or
rolb
lcall
dec
xor
or
test
lcall
push
mov
pop
mov
fidivl
or
shll
ja
pop
mov
mov
mov
inc
add
cmp
cmp
jl
pusha
pop
and
cmpl
push
sub
dec
ss
das
enter
sti
push
pop
jmp
ret
dec
neg
sbb
cmc
or
jge
cmp
pop
push
jo
and
ret
ds
orb
and
add
or
add
addb
mov
loopne
jl
dec
ret
pop
xlat
ss
test
adc
mov
push
cld
pop
push
cmc
pop
mov
sbb
inc
sub
sbb
or
testb
pusha
mov
push
pop
inc
jmp
lea
add
xchg
xor
int
fisubrl
es
les
sbb
fs
and
insb
sub
adc
jmp
adc
outsl
pop
inc
mov
jg
push
cmp
sbb
push
push
incl
imul
pop
xlat
pop
enter
sub
popa
fadd
ss
enter
nop
ret
int3
int3
dec
sbb
push
leave
inc
sbb
aaa
jl
iret
xor
pop
sub
stos
out
adc
ret
aad
scas
rolb
pop
imul
add
cmc
into
cmp
adc
incb
jne
lcall
cmpsb
or
cmp
je
in
jbe
mov
dec
xchg
xchg
mov
jne
push
mov
call
ret
popl
push
pushf
out
or
push
pop
in
push
test
cmp
lods
jno
sbb
sbb
cmp
add
popa
dec
add
xchg
pop
sti
imul
ret
push
inc
xor
pop
inc
xor
mov
or
cltd
pop
or
testl
mov
adc
insb
int
stc
and
or
gs
popa
xchg
jbe
je
push
push
lea
out
test
test
pop
pop
inc
or
lret
pop
xlat
mov
sbb
test
jo
outsl
fimuls
jle
jae
or
or
sbb
mov
mov
leave
jmp
pop
fnstcw
pop
sbb
adc
xchg
mov
xchg
in
testb
push
and
mov
loop
js
sub
pop
xor
ljmp
fcomps
mov
loope
adc
inc
or
aas
test
xor
mov
aaa
mov
inc
push
test
icebp
je
pop
js
icebp
shl
cmp
insb
fwait
je
imul
insl
out
mov
or
std
test
sub
lcall
lods
cmp
xor
pop
push
inc
in
ficoms
addr16
add
mov
test
pop
gs
sub
aaa
cmp
lds
add
mov
filds
clc
inc
loopne
cltd
sub
es
les
push
or
fnsaves
pushl
xchg
mov
adc
and
sub
ficompl
in
adc
push
imul
or
hlt
cmpsl
jg
pop
addr16
dec
sub
push
in
call
pop
push
push
sbb
lods
xchg
cmp
subl
rorl
ds
push
pop
clc
pop
mov
pop
scas
orl
or
outsb
push
aad
inc
cmpl
xorl
test
call
mov
add
push
out
mov
or
mov
mov
mov
sbb
popa
jp
jno,pn
movzwl
stc
and
push
add
lds
xchg
cmp
ljmp
cmp
sub
jmp
mov
pop
push
jo
sbb
mov
push
pusha
push
call
addr16
pop
pop
cmp
popa
and
cmpl
scas
and
mov
call
mov
jbe
out
arpl
out
mov
scas
fldl
or
jbe
inc
decl
aam
in
and
cld
mov
dec
lea
add
lea
xchg
addb
mov
mov
out
movsl
pop
insl
add
xchg
ja
adc
mov
out
push
adc
inc
inc
cmpb
aam
ret
or
sbb
fnstenv
fs
sti
hlt
or
push
lods
lods
push
mov
mull
xor
push
je
push
mov
shll
je
inc
jns
jno
gs
dec
lahf
mov
jb
push
cmp
fisttpl
mov
dec
push
jmp
or
add
dec
stos
add
push
jo
inc
xchg
movsl
outsb
clc
ds
insb
push
andl
mov
pop
cmc
andl
fnstenv
pop
test
call
mov
cld
cmp
arpl
sbb
movsb
cld
fmuls
test
sbb
pop
lea
mov
out
add
adc
mov
push
jno
rcrb
mov
add
in
pop
xchg
adc
icebp
lea
clc
cwtl
std
sbb
aas
sarb
mov
jb
mov
push
or
aad
mov
repz
cmp
lea
pop
push
shr
test
and
rep
inc
inc
mov
mov
jne
pop
pop
push
in
cli
mov
lcall
fistps
cmp
and
sbb
mov
sub
cld
shlb
subl
daa
jb
loopne
fistpl
lea
mov
test
push
or
adc
nop
rclb
cmp
outsl
sbb
je
and
sar
insl
fsubs
add
sbb
adc
add
mov
arpl
xor
sbb
ss
das
jp
push
and
and
adc
mov
pop
movlps
sbb
pop
vandnps
xchg
push
xchg
push
mov
jmp
imul
adc
or
sbb
push
ret
xchg
fimull
pop
push
imul
lret
jg
sbb
add
mov
jmp
lea
mull
pop
roll
mov
inc
lret
cmp
jne
mov
add
loopne
pushl
fneni(8087
pop
adc
test
call
mov
in
sbb
pop
fisubrs
mov
pop
jmp
add
jmp
std
jmp
ficompl
lods
pop
cld
pusha
or
sbb
inc
add
pusha
outsl
loop
mov
inc
out
jmp
mov
fldt
add
mov
outsb
imul
test
daa
test
insl
in
pop
push
cmp
mov
or
inc
jmp
bound
not
adc
aad
xchg
jl
loopne
and
ret
dec
add
inc
jne
int3
out
or
jae
adc
loope
xchg
xor
jge
or
and
sbb
fcomi
xor
popa
push
addl
ret
pop
jle
outsl
outsb
inc
inc
dec
push
adc
js
out
and
and
push
loope
adc
sub
ret
or
pop
nop
dec
es
cld
jle
test
jne
dec
lret
inc
jne
or
jbe
clc
jb
mov
cmpsb
sub
scas
and
jb
rep
jmp
ret
loop
mov
sub
loopne
enter
insb
mov
sbb
push
fcoms
sbb
ja
lock
inc
and
mov
mov
mov
add
mov
fsts
dec
add
and
add
add
into
and
inc
aas
mov
xor
xlat
push
mov
pushf
xchg
sar
aaa
dec
mov
mov
call
call
hlt
xor
xor
clc
clc
cld
inc
subb
xlat
push
clc
shlb
or
lock
in
notb
pop
pop
lds
int
stc
adc
or
xor
and
cld
jg
or
lret
mov
ja
pusha
neg
gs
adc
cmp
add
stc
sub
push
and
or
cwtl
shrb
scas
mov
dec
pop
dec
push
mov
inc
mov
xchg
pop
mov
mov
mov
js
stos
sub
add
inc
pop
test
dec
shll
sub
cmp
rcl
xor
push
xchg
sbb
sbb
adc
adc
xor
rorl
or
add
ja
dec
add
add
xchg
shlb
pushf
mov
add
jae
adc
test
or
imul
ja
ljmp
adc
orb
cld
daa
push
imul
cmp
push
or
lods
push
mov
push
jle
insl
mov
push
inc
push
paddusb
dec
lea
add
addps
adc
imul
rcll
and
pop
jl
adc
mov
fiadds
adcb
mov
pop
mov
cwtl
addr16
fcomps
pop
pop
push
or
and
xor
add
jnp
imul
sub
add
clc
or
xlat
jno
pop
jp
cld
push
shr
lea
cld
imul
jge
movsl
movsl
inc
out
mov
inc
cltd
jge
dec
dec
mov
jl
or
test
or
jne
rcrl
or
outsl
mov
adc
push
mov
push
movsb
dec
mov
cld
inc
das
divl
mov
dec
add
xlat
or
inc
decb
sub
cmp
and
loopne
cmpl
mov
out
sarl
add
adc
fcmovnu
mov
add
or
aaa
mov
add
aas
jnp
pop
das
push
insl
shrl
loope
in
mov
and
mov
pop
cmp
cmpsb
fistpl
mov
inc
sbb
inc
mov
lahf
ds
jbe
cli
mov
add
push
mov
leave
and
and
sub
shlb
xchg
dec
in
mov
add
inc
lods
xchg
or
xchg
loope
xchg
es
jne
cmp
scas
jnp
mov
stc
or
mov
mov
imul
or
shrl
pop
add
jg
paddd
mov
jae
fildll
and
mov
jmp
mov
sbb
sbb
sub
cmp
loopne
and
addl
inc
xor
pop
adc
inc
cli
je
push
jl
mov
or
push
popa
jo
loope
add
push
jg
sti
mov
mov
push
call
pop
xor
pop
and
push
or
cmp
out
roll
paddd
jnp
test
or
jns
adc
mov
cs
insb
sub
jo
pop
mov
mov
or
stc
hlt
adc
sbb
jecxz
add
xchg
ja
imul
movsl
dec
adc
lcall
adc
inc
cs
imul
cmp
test
lds
xchg
mov
lods
mov
out
leavew
pop
lret
push
sbb
pop
jbe
pop
push
xor
or
jge
sub
out
sub
mov
jmp
adc
or
es
push
lock
mov
jae
mov
push
jg
loope
and
and
or
jne
clc
adc
lcall
out
jne
mov
cmp
es
add
pop
and
sahf
popf
pop
mov
or
aaa
jmp
rcrb
jne
mov
mov
fstpt
mov
les
mov
mov
inc
test
lcall
jmp
out
add
mov
push
cli
in
shl
lods
dec
sub
adcb
cmp
adc
shl
add
or
mov
jne
add
xchg
adc
sbb
cmpsb
ljmp
in
mov
and
or
je
mov
imul
dec
jbe
ffree
out
push
into
jne
pushw
fs
test
jl
shl
inc
jmp
pop
mov
testl
jnp
sbb
dec
cwtl
aas
jle
pop
aam
dec
xor
fwait
or
jge
xchg
lcall
rcrl
in
and
mov
decb
jne
loopne
or
or
xor
sub
mov
ss
mov
test
or
mov
add
add
cltd
mov
test
inc
push
or
and
fs
movsl
fwait
gs
decb
jge
les
faddl
mov
bound
cmp
mov
or
das
sub
rclb
dec
mov
jnp
mov
loopne
movsb
mov
aaa
push
jb
mov
or
jne
lock
adc
cld
lahf
mov
and
jne
pop
mov
jne
popf
dec
cmp
imul
in
inc
add
hlt
dec
mov
add
adc
shlb
jne
pop
mov
loope
shlb
push
xchg
push
xchg
pushf
cmp
je
xor
push
push
inc
xor
xor
mov
je
push
sbb
push
mov
sbb
or
pushl
fs
mov
dec
xor
lds
orl
leave
or
jmp
jmp
enter
fcmovnb
dec
loopne
ret
aaa
imul
adcb
and
or
add
jmp
mov
dec
push
sti
test
out
jns
mov
iret
adc
aaa
cltd
shll
sub
add
ja
shll
dec
repnz
mov
movl
jmp
movsl
dec
add
sub
adc
push
sub
ljmp
dec
or
push
add
add
mov
dec
or
popl
sahf
inc
inc
mov
loop
mov
sub
jp
dec
inc
cmpsb
or
mov
addl
jle
fsubrs
stos
or
js
ljmp
addr16
mov
and
popa
or
out
inc
je
adc
mov
pop
adc
or
dec
mov
fsubp
push
call
cmp
add
sub
jae
cmp
dec
ror
add
roll
cs
xchg
jp
push
mov
jne
mov
push
imull
push
and
jno
pop
ljmp
inc
inc
inc
inc
dec
xlat
sahf
sub
sub
jne
sub
push
and
je
and
test
sub
ret
pop
iret
add
fidivs
xchg
mov
popf
je
out
insb
sbb
cli
sub
xchg
arpl
lcall
enter
push
or
cmp
je
lock
and
add
mov
icebp
push
or
pop
adc
pop
jne
mov
test
pop
inc
inc
sbb
mov
jne
push
push
or
into
mov
mov
mov
stc
insl
sbb
sbb
stos
ds
cmp
lods
movsl
and
inc
dec
ffreep
sbb
jo
adc
adc
cmp
adc
pop
call
int3
jo
sbb
insl
mov
sti
mov
stos
and
inc
insl
jnp
sbb
sbb
mov
and
loopne
inc
push
or
and
hlt
test
add
test
adc
icebp
push
mov
repnz
jmp
ficompl
pop
lock
adc
fbld
je
push
dec
fsubl
push
mov
dec
in
sbb
adc
jne
divl
inc
or
sbb
lods
mov
push
cmp
jg
fisubl
ss
dec
rorb
sub
addr16
sub
add
mov
fmull
bound
fbstp
outsb
out
xchg
jne
in
je
mov
add
jo
fldl
jmp
mov
push
icebp
inc
cmp
mov
add
jno
or
test
push
decl
sub
inc
lock
xchg
repz
insb
outsb
mov
sub
add
push
es
pop
sbb
lods
js
lea
push
push
pop
push
add
inc
push
movsl
mov
mov
sbb
push
mov
js
push
mov
pop
mov
mov
add
jl
jbe
xor
mov
fistl
and
add
pop
loopne
je
and
mov
jl
mov
push
cmp
ret
jmp
sbb
divb
sub
push
pop
sbb
in
loope
push
push
clc
xlat
xchg
mov
jmp
cmc
int3
mov
sbb
mov
test
arpl
push
xchg
sbb
pop
dec
pop
stc
pop
pop
pop
pop
icebp
jb
neg
cld
test
mov
adc
add
push
mov
adc
in
test
push
rep
cmp
and
inc
or
push
in
mov
or
das
mov
mov
pop
inc
je
negl
adc
mov
das
mov
mov
test
push
jg
insb
shll
dec
inc
xchg
and
or
dec
sarl
lods
shl
add
rcl
jne
adc
sub
or
add
adc
cmpb
add
and
xor
pop
jg
add
in
or
jne
hlt
cld
push
add
pop
mov
pop
add
and
pop
mov
lahf
push
cmp
add
jmp
add
sub
shlb
leave
les
loope
stos
sub
cmp
movb
inc
inc
inc
js
lock
inc
inc
inc
inc
hlt
loopne
in
inc
inc
inc
add
add
mov
sub
pop
adc
out
fiadds
add
lods
add
jb
outsb
je
insl
and
jb
jb
mov
cs
or
dec
push
push
adc
add
lret
fimull
enter
inc
dec
dec
inc
adc
bnd
push
xor
cmp
sub
insb
je
and
imul
imul
aaa
daa
aaa
insl
ljmp
cmp
and
popa
arpl
data16
fidivrs
outsl
ja
cmp
outsl
outsb
aaa
inc
repnz
ss
fs
fcmovne
xor
jbe
jb
jne
xor
mov
arpl
and
insb
sub
mov
test
gs
das
pop
popa
daa
jnp
push
fsub
pop
xor
divl
jo
pop
xor
pcmpgtb
arpl
fisubl
cmp
cmpl
aaa
dec
insl
jne
lods
je
mov
and
xor
lcall
add
loope
insl
add
addr16
insl
and
or
adc
das
xor
dec
inc
mov
sub
xor
adc
mov
jb
jne
scas
cmp
xor
shrw
insl
fldt
subb
cmp
fs
rorb
addr16
sub
cmp
imul
push
mov
popa
out
mov
or
sbb
and
push
aam
ret
fistpl
add
insb
cmp
jle
ja
sbb
je
popa
xor
jbe
mov
fadds
adc
push
xchg
fs
cld
call
xchg
jae
addr16
outsl
js
add
and
push
dec
lea
sub
add
or
cmp
sub
inc
push
sbb
sbb
pop
stos
xor
add
cmpb
imul
or
xorl
xor
or
sbb
xor
lea
mov
xor
add
xor
xchg
xchg
dec
push
dec
aaa
add
pop
js
or
dec
jo
sti
adc
and
and
jo
inc
or
xchg
inc
sahf
sbb
inc
hlt
adc
adc
repnz
adc
sbb
sbb
xchg
daa
popl
sbb
jns
in
js
jns
jp
cld
fs
dec
sahf
sbb
or
push
loopne
pop
xor
push
adc
sub
and
clc
mov
add
das
daa
pop
stc
in
add
jns
and
repz
movsl
sbbl
jbe
sti
shll
incb
inc
orl
mov
inc
mov
and
ja
iret
mov
in
call
xchg
fucomip
ds
add
pop
pop
fisubrl
xor
fsubp
stc
cmp
jle
add
push
jp
jne
sub
add
and
dec
add
and
enter
inc
and
xor
sarb
add
addl
adc
or
dec
add
dec
gs
jo
insb
insb
outsl
arpl
dec
outsl
fs
gs
popa
outsb
fs
adc
popa
xor
outsb
outsw
adc
or
aas
push
gs
or
push
aad
or
dec
add
pop
sub
dec
gs
sub
jb
outsb
and
outsb
push
pop
cmp
jo
inc
inc
imul
jp
gs
popa
insl
jl
cmp
add
gs
jo
jb
fldt
push
fsubs
sbb
imul
add
push
outsl
dec
xor
pop
pop
jne
insb
gs
inc
push
or
incb
jne
add
pop
fwait
adc
gs
ret
jo
pop
insb
jae
add
insb
jne
or
push
arpl
orb
test
xchg
inc
ds
or
pusha
inc
gs
and
addr16
in
sbb
push
je
inc
frstor
in
imul
dec
jne
pop
add
arpl
jo
lods
or
je
outsb
bound
dec
push
jbe
rclb
pop
sbb
jmp
inc
or
dec
inc
dec
or
das
pop
mov
rclb
or
in
fs
dec
ret
or
push
shrb
add
cwtl
mov
and
inc
ja
or
bound
push
or
xchg
outsb
xor
bound
cmovno
mov
test
roll
push
popa
addr16
or
insl
arpl
js
inc
addr16
insb
fistl
rolb
jae
lret
sbb
or
arpl
mov
lcall
jb
dec
jae
sub
jo
jno
nop
push
je
push
inc
xor
and
pop
xchg
lods
push
ret
jge
sub
jecxz
insb
inc
lods
inc
add
jbe
pop
jo
pusha
insb
jo
xor
outsl
fnstenv
sbb
xchg
cmp
push
mov
inc
lock
xchg
lock
xor
xchg
add
add
mov
xor
fimuls
push
xorl
aam
cmp
sbb
idivb
add
add
jle
or
cmp
add
add
out
out
test
lock
subb
jge,pt
inc
scas
in
div
xor
dec
push
lock
dec
lea
add
add
push
std
fists
lock
lock
cmp
lea
inc
jo
lock
add
mov
pop
and
jl
imull
add
jle
pushl
xor
adc
mov
add
jmp
outsb
aaa
sti
fcomi
out
xchg
xor
lock
jno
jg
mov
lock
inc
fwait
add
cmp
add
push
add
add
aas
jns
lea
ret
lock
xchg
ljmp
out
jno
add
lock
inc
add
inc
inc
xor
icebp
add
jle
add
jge
add
jno
push
push
adc
pop
fldz
jbe
jge
jbe
lock
push
cmpsl
mov
outsl
lods
add
jne
popf
lock
add
xor
fwait
imul
lret
lock
mov
fnsave
mov
sub
sbb
es
insl
mov
aaa
xchg
sub
push
add
pop
insl
add
dec
mov
inc
xorb
cld
in
or
mov
movsb
shlb
lea
or
mov
test
xorb
pop
fs
ds
lock
dec
pop
lock
incb
outsl
xor
sbb
mov
fcomi
add
aaa
cld
out
push
fadds
cmp
aaa
ret
mov
jb
add
mov
out
and
xchg
inc
push
or
fbstp
add
cmp
add
add
sbb
lock
jle
fwait
imul
add
xorb
push
jecxz
or
or
mov
jg
scas
mov
aaa
jnp
jmp
push
xor
sbb
inc
add
jp
outsl
jp
and
shlb
roll
cmp
into
sarb
jno
cmp
add
out
mov
inc
sub
dec
mov
xor
cmp
imulb
add
ds
sbb
add
in
out
cli
add
mov
lahf
cli
mov
inc
shlb
cmp
insb
sbb
dec
push
loope
lock
cmc
add
dec
add
outsl
add
sbb
xor
xor
or
cmp
adc
pop
or
or
or
push
xchg
push
push
push
test
cmovl
xor
inc
or
adc
or
dec
inc
jecxz
lcall
xor
aas
push
adc
xor
pop
adc
and
push
xor
adc
lock
or
adc
sbb
adc
sbb
sbb
lods
std
mov
adc
or
inc
adc
or
adc
mov
add
or
xor
insl
div
and
or
or
je
jnp
fisttpl
or
inc
cwtl
add
push
outsl
mov
adc
mov
adc
movups
lock
add
push
ret
sbb
scas
add
sub
sbb
in
fnsave
add
or
pop
push
sbb
in
daa
jb
push
or
jecxz
xor
or
dec
mov
pop
add
adc
adc
or
fimuls
pop
push
jno
inc
cmpsb
lock
add
adc
test
prefetcht1
or
int3
adc
or
daa
cmp
sbb
add
cld
mov
sbb
xor
mov
adc
adc
lods
test
rcrl
icebp
and
in
push
add
add
push
idivb
or
fmuls
add
adc
lock
add
push
add
insl
addl
arpl
subb
add
xor
sub
ret
push
outsb
jbe
rorl
adc
testb
mov
scas
stos
add
jnp
pop
gs
push
inc
subl
flds
push
sbb
cld
xchg
jl
push
add
js
add
enter
add
or
in
pop
test
fldl
xor
add
add
pusha
jb,pn
and
pop
cmp
add
es
dec
dec
sarl
push
inc
shrb
shlb
jae
arpl
jo
or
inc
addl
adc
fldcw
push
or
daa
inc
add
xchg
lcall
fcoml
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
