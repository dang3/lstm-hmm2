dec
cmpl
loope
push
imul
icebp
xchg
adc
out
adc
cltd
mov
in
or
push
sbb
xchg
jo
leave
icebp
sub
jle
out
arpl
pop
lods
jg
xchg
in
push
scas
jns
sbb
imul
pop
lahf
sub
xlat
sbb
adc
cltd
cmp
jecxz
adc
push
ds
lock
sub
dec
xchg
xor
pop
mov
mov
lcall
fistps
mov
aas
dec
adc
pop
lods
xchg
leave
pop
nop
int3
cmp
jb
sbb
and
cli
cld
mov
jl
and
adc
cmc
and
cmpsl
mov
dec
aam
mov
jo
adc
int3
shlb
int3
pop
sub
push
popa
sub
testl
and
push
fwait
pusha
shrl
testl
mov
enter
push
and
lods
or
mul
jge
cmc
or
pop
inc
in
adc
shlb
xchg
sbb
pcmpeqw
insl
sub
xor
xor
lds
sbb
cmpsl
fcoml
incl
loope
arpl
in
js
gs
popf
mov
loop
add
jmp
jle
add
xchg
sub
mov
add
adc
bound
loop
les
outsb
mov
mov
pushf
movsb
mov
ficoml
lock
cmp
xor
rcll
or
sub
pop
imul
dec
mov
jmp
lret
outsb
les
or
add
push
shrl
cmp
aaa
rcrl
call
or
call
jecxz
lret
and
jne
pop
mov
push
adc
aam
mov
pop
mov
lock
push
jb
fwait
and
and
mov
push
add
sbb
pusha
iret
or
repz
das
les
int
fildll
inc
out
test
icebp
add
xor
mov
fiadds
out
lcall
hlt
mov
xor
outsb
sub
lds
jb
mov
xchg
jns
and
and
sti
jae
cli
scas
mov
test
hlt
lock
clc
dec
inc
adc
enter
and
fstl
inc
sarb
inc
sti
mov
pop
lahf
lcall
cmp
jmp
push
pop
imul
cmpb
daa
or
xor
loopne
add
add
gs
sbb
aas
jns
pop
arpl
mov
xchg
fucomi
push
jnp
lret
jnp
xchg
stos
fstps
aas
pop
pop
sbb
adc
xchg
aas
cmpsb
arpl
hlt
sbb
push
xorl
inc
jne
inc
out
and
test
mov
or
iret
xor
loopne
mov
or
fdivs
lret
mov
gs
or
mov
add
out
lcall
sarl
aas
inc
push
outsb
add
fiaddl
clc
jge
add
add
gs
push
mov
sbb
aaa
fildll
pop
jg
test
loope
fstl
xchg
jne
sbb
jns
ss
mov
lea
sub
sub
mov
pusha
jns
fstps
enter
cmpsb
addl
add
cmc
rclb
les
push
daa
outsl
dec
aaa
clc
xor
fldcw
fs
ret
cmp
scas
push
jns
ret
jns
stc
int3
adc
test
jns
push
lock
xlat
pop
mov
push
insl
aas
xor
movsb
test
mov
xor
add
add
push
sbb
push
and
sub
jmp
cmpsl
aad
fstpt
and
cli
loop
xor
cmp
pop
js
mov
mov
repz
pop
fiadds
push
jno
sbb
jecxz
cwtl
mov
sbb
out
add
mov
cmp
movsb
es
mov
imul
in
rorb
stos
xchg
add
add
or
adc
adc
insl
clc
sub
adcl
lcall
or
pop
sbb
and
push
xchg
adc
adc
dec
mov
stos
add
pushf
call
sub
leave
stos
imul
addb
push
arpl
adc
push
cmpsl
dec
pop
mov
int3
sub
mov
xchg
mov
adc
xchg
pop
fnsave
es
je
int3
push
in
subb
movsb
fldt
mov
pusha
mov
inc
mov
not
and
jne
mov
lock
outsb
imul
pop
sbb
shr
rcl
daa
dec
jb
xchg
mulb
pop
aam
out
push
das
fbstp
aam
pop
mov
xchg
push
xchg
call
aas
jl
push
jb
mov
and
sub
gs
dec
imul
int3
cmp
or
xchg
dec
mov
xchg
and
loopne
jmp
xchg
adc
push
inc
mov
mov
dec
out
andl
jecxz
or
sub
jno
xorl
sbb
jp
bnd
sbb
arpl
xchg
clc
int
aam
aad
pop
rorl
sbb
lods
cmp
lahf
sub
hlt
jae
scas
cmpsb
xchg
adc
mov
shrb
pop
pop
adc
add
add
shlb
mov
mov
rcl
add
mov
adc
pop
add
pop
sub
cwtl
cmpsb
pop
push
pop
fprem1
mov
lcall
mov
inc
jecxz
je
test
push
sbb
loopne
adcb
insb
pop
pop
xor
imul
or
stos
mov
ja
cs
paddusb
cli
fsubrl
mov
cwtl
pushf
xchg
lret
in
pop
outsl
add
xchg
popa
jno
mov
or
mov
push
add
lock
push
rorl
ret
cli
imul
lock
cli
adcl
gs
repnz
inc
push
into
fsubs
int3
cmp
imul
movsl
xchg
or
cmp
int
add
xor
sub
mov
lahf
clc
sbb
cmp
xchg
dec
sbb
push
inc
ret
cmpsb
outsb
mov
dec
push
and
push
aam
push
out
or
js
mov
bound
popf
out
lret
insb
push
mov
mov
es
sub
sbb
xor
adc
imul
lret
lcall
out
inc
mov
les
inc
cli
dec
mov
scas
xchg
leave
xor
jbe
out
pop
xchg
bound
add
add
mov
sbb
push
mov
inc
fisttpll
jecxz
inc
loope
push
push
or
shl
inc
insb
or
sti
andl
das
sbb
int3
push
xchg
fiaddl
out
mov
sbb
outsl
sub
sbb
push
stc
mov
aaa
je
push
lret
rcrb
fs
sahf
aad
les
pop
and
popf
stc
shll
clc
mov
xor
imul
movsb
and
adc
dec
sbb
sbb
lods
sbb
sub
les
mov
xchg
push
sbb
inc
cmc
data16
arpl
shll
and
push
pop
sbb
movsl
mov
rcr
test
xchg
jae
notl
mov
test
repnz
fildl
nop
fdivl
inc
in
gs
push
out
dec
jp
mov
jb
test
push
lret
mov
mov
std
fisttpll
imul
test
xchg
pop
jae
cmpsb
push
shr
aaa
stc
jge
loope
inc
in
les
mov
push
mov
xchg
add
dec
sub
into
push
iret
pavgb
bound
cmp
push
cmp
xchg
repnz
adc
xchg
sbb
leave
cmp
sbb
mov
sar
cmp
mov
pop
movsb
dec
stos
and
sbb
test
fmul
xchg
xchg
sbb
adc
sar
mov
pop
mov
dec
jbe
stc
xor
cmpsl
loopne
sbb
in
test
sbb
sbb
mov
push
ret
xor
xchg
sub
clc
aam
mov
or
sbb
sbb
gs
cs
loopne
imul
add
leave
or
cltd
sbb
loopne
scas
enter
mov
mov
mov
into
pop
jp
rcrb
dec
loope
jne
add
fstpt
clc
cmp
dec
lods
xor
aas
mov
jae
push
xchg
test
xchg
repnz
mov
sahf
pop
mov
xor
mov
push
addr16
in
sbb
adc
xchg
repnz
mov
add
xor
mov
pop
fwait
dec
in
vmovups
repnz
jb
fsubl
mov
mov
test
fcmovnu
sti
dec
fiaddl
add
add
sub
xlat
adc
cmp
xor
add
add
pusha
pop
outsb
mov
jne
fnstenv
in
dec
inc
add
aaa
lods
mov
fldenv
jp
std
int
clc
jmp
push
popa
lret
add
into
dec
push
sbb
adc
push
cli
das
lret
mov
into
addr16
jo
and
mov
mov
push
lods
fisubl
push
mov
in
mov
add
add
add
add
push
lret
rcll
dec
scas
pop
mov
cmc
push
adc
pop
push
jle
stos
aam
jmp
inc
mov
loopne
aaa
stos
test
ret
xlat
jo
out
leave
mov
sub
fucomp
sbb
cmpsb
or
loop
sub
aaa
movsb
sar
test
cmp
lahf
mulb
pop
adc
das
mov
pop
xchg
sub
and
test
xor
lds
pop
jl
jae
xchg
dec
push
js
mov
dec
imul
pop
dec
ljmp
mov
movsb
jle
mov
jmp
fucom
sbb
hlt
insb
imull
dec
es
iret
xor
adc
orl
mov
add
add
cmp
and
mov
xchg
fsubrl
mov
xor
pusha
jne
stc
sub
test
cmp
sahf
mov
cmpsb
stos
or
jp
imul
mov
clc
outsl
scas
fs
and
pushf
mov
add
jle
mov
enter
rclb
jnp
xor
loope
adc
or
xchg
mov
add
or
in
and
sti
xchg
push
test
mov
je
clc
fsubrl
outsl
push
dec
mov
mov
or
je
cmp
xor
dec
push
and
cmp
cs
sbb
in
scas
mov
scas
cltd
rcr
leave
out
jb
xorl
mov
mulb
cmc
adc
mov
repz
sbb
sbb
leave
cwtl
sbb
cli
dec
xchg
es
jecxz
mov
std
mov
adc
das
xchg
xchg
into
outsl
xchg
xor
inc
add
mov
jge
sti
xlat
push
cs
cwtl
ffree
lds
cltd
xor
insl
insl
data16
bound
push
mov
lret
mov
mov
push
sbbl
dec
rcll
loopne
xlat
sub
fcoms
in
or
add
add
add
aaa
cltd
pop
fwait
mov
shrl
dec
push
ret
mov
scas
or
mov
sti
mov
dec
daa
or
out
jbe
addr16
adc
repnz
adc
movsb
mov
add
xchg
inc
mov
inc
pop
imul
cmc
outsl
jl
fcmovb
sub
jp
adc
add
not
dec
sbb
inc
jg
mov
inc
or
jge
dec
leave
rclb
inc
mov
jne
fidivs
lods
jle
testb
add
push
or
jnp
aam
gs
cld
sahf
add
pop
imul
or
xor
fldcw
sbb
fldt
testl
and
push
or
dec
outsl
movsb
roll
xor
lods
stc
test
das
mov
out
and
jmp
fbld
mov
addr16
out
dec
sub
cli
mov
aad
pop
and
mov
andb
push
aam
lret
xor
shll
ja
dec
pop
add
mov
add
sti
xor
icebp
pop
push
dec
dec
mov
mov
xchg
in
scas
out
sub
call
push
push
ds
data16
loopne
sbb
orb
bound
and
movsl
pop
adc
call
enter
arpl
dec
les
ja
mov
dec
test
test
or
jl,pt
sub
push
jno
mov
pop
mov
mov
pop
ss
mov
loop
push
out
jle
jb
stc
mov
xlat
adc
stos
scas
leave
fbld
cli
sbb
mov
sub
das
outsb
addl
push
mov
pop
fwait
lock
adc
pop
hlt
pop
push
xor
adc
sbb
movsb
out
int
in
ret
mov
jmp
sahf
subl
mov
repnz
ja
pop
iret
stos
dec
xchg
lahf
push
std
ljmp
cmpsb
int
gs
decl
dec
data16
and
dec
cmpsl
pop
addr16
xor
xor
lahf
pop
cmpsl
and
shll
shll
mov
test
neg
ds
mov
mov
sbb
xor
nop
out
popa
shrb
inc
mov
cmpl
and
dec
lea
xlat
jg
pop
imul
add
adc
jo
inc
and
out
fldt
popa
call
lret
xor
lock
adc
movsl
or
mov
jo
jl
and
fcoml
in
add
mov
mov
inc
and
mov
ret
push
mov
jnp
and
push
mov
or
movsl
daa
lock
mov
or
cmp
xchg
outsb
push
sbb
inc
mov
push
js
cmp
inc
inc
in
aam
loopne
dec
adcl
jo
sbb
enter
dec
das
cltd
add
pop
ds
pop
loopne
inc
mov
sub
dec
into
push
aas
jne
adc
push
cmc
xor
mov
mov
jb
pop
out
sbb
sbb
movsb
xor
jbe
test
mov
jg
pop
and
das
sbb
lds
mov
in
das
push
out
iret
and
or
inc
cld
xor
mov
sub
jne
mov
xlat
mov
cmp
insl
or
pop
add
pop
jl
arpl
addl
jmp
negl
adc
and
test
mov
push
cmp
xor
or
clc
cmc
xchg
mov
lcall
cli
mov
gs
mov
rol
adc
loop
icebp
mov
int
cld
leave
arpl
add
loopne
hlt
push
das
out
mov
jg
rcll
ret
shlb
adc
push
movsl
sub
lds
les
lahf
cmp
lods
stc
inc
sbb
dec
scas
filds
xchg
mov
push
push
andl
adc
loop
sub
cmp
push
sar
rclb
sti
std
test
mov
inc
pop
subb
mov
cld
flds
lods
mov
and
jne
addr16
mov
xor
mov
lock
and
xchg
shlb
adc
mov
loopne
test
xchg
in
sbb
fwait
xchg
ficoml
insl
cmc
cmp
or
cmp
test
sub
mov
pop
pop
jbe
pusha
mov
aad
aad
jns
mov
and
xchg
loopne
push
push
int3
xchg
insb
pop
mov
insl
popf
jne
cmp
frstor
jns
cmc
xlat
imul
sub
xchg
fnstsw
sub
fadds
xor
stos
fdivrl
adcb
dec
xchg
add
fisttps
cwtl
xchg
sub
add
aas
pop
insb
cmp
mov
cmp
pop
push
mov
and
xchg
sub
loopne
outsl
stos
mull
lahf
sti
std
lods
rorb
test
rorb
mov
mov
mov
xor
or
out
mov
adc
jmp
inc
xchg
shlb
xorb
push
xor
cld
xchg
ja
xchg
xchg
popf
out
xor
xchg
and
dec
jae
fldcw
rcrl
pop
sbb
cmp
add
pushf
popf
out
pusha
jle
out
movsb
arpl
cli
jp,pt
mov
test
push
ret
mov
pop
xor
dec
pop
xchg
adc
push
push
inc
lahf
inc
fsubl
or
xchg
insl
push
dec
xor
and
xchg
sbb
xchg
jns
iret
cmp
xlat
fsin
xlat
mov
les
sub
clc
cltd
add
adc
jb
pop
push
xor
mov
mov
mov
fwait
lea
push
faddl
jne
stos
mov
movsb
dec
mov
mov
jmp
sub
scas
leave
sbb
cli
aas
mov
fwait
out
xor
push
inc
xor
lods
jno
dec
jl
dec
fistpl
inc
popa
int
mov
or
xchg
and
push
ja
mov
gs
dec
jle
aas
lret
mov
nop
stos
xchg
test
pop
addb
add
lea
jle
mov
mov
sbb
je
fs
inc
mov
leave
clc
mov
and
jne
les
outsl
je
repz
mov
jmp
icebp
popa
jae
jne
cmc
je
mov
xor
pushf
stos
cmpsb
orb
sbb
or
and
aad
sub
es
push
cltd
push
out
sbb
ss
sbb
xchg
test
lea
out
insl
xchg
adc
xchg
cld
ror
stc
sub
push
rclb
loopne
cli
jge
insl
out
adc
mov
mov
inc
stos
xor
sahf
xor
xor
add
sub
xchg
mov
fldt
aad
leave
cld
pop
sub
or
repz
icebp
cmp
xorb
sbb
lcall
loop
or
pop
mov
adc
cmpsb
or
dec
stos
lea
adc
loope
push
mov
daa
test
cmpsl
pusha
es
sbbl
mov
loope
loopne
scas
dec
xchg
or
mov
pop
data16
pop
flds
jecxz
jnp
sub
xor
in
test
popf
push
in
push
fmuls
sbb
stos
fmull
addr16
cmp
mov
mov
std
mov
mov
mov
jne
add
add
dec
shll
fbstp
xchg
dec
inc
and
sarl
aad
mov
push
in
loopne
cli
shlb
scas
jmp
push
mov
leave
into
jmp
mov
xchg
xor
sbb
sbb
lods
or
xor
pop
jno
in
push
movsb
push
enter
inc
lcall
adc
inc
jns
and
shlb
mov
cld
sarb
xchg
xor
xchg
push
cmp
in
jge
pop
dec
in
sub
gs
dec
jne
mov
fnstenv
mov
mov
mov
push
mov
lcall
pop
mov
lock
loopne
push
or
sbb
push
lret
xor
push
out
pavgw
outsb
adc
mov
test
dec
adc
or
xchg
lret
inc
push
xchg
mov
rclb
mov
daa
add
cltd
mov
jbe
or
mov
cli
xchg
popf
into
je
xor
jge
sbb
lods
sarl
adc
cld
jecxz
add
mov
adc
mov
mov
push
testb
jno
flds
bound
lcall
enter
cmpsl
jge
sub
jmp
mov
lea
xchg
scas
adc
lods
xor
push
fsin
arpl
push
cmp
mov
outsb
mov
sub
xchg
mov
adc
incb
add
add
out
ret
pop
pop
fwait
ljmp
jo
popf
je
mov
test
shll
in
push
pusha
xchg
cmpsl
aad
cs
orl
popa
pop
add
mov
adcl
pop
mov
in
outsl
pop
loop
ficompl
mov
aas
mov
inc
adc
add
add
cmc
jl
xchg
mov
jae
mov
inc
sub
fwait
jno
mov
jl
cs
mov
xorb
mov
out
loopne
dec
xor
mov
jg
pushf
push
fistpl
inc
mov
push
jg
xchg
stc
jge
mulb
lds
ljmp
pop
mov
inc
cmp
add
add
imul
nop
adc
imul
ljmp
mov
test
adc
aaa
arpl
mov
cli
das
push
addr16
imul
stos
adc
orb
or
cmp
pop
lea
fwait
or
pop
scas
dec
aam
mov
mov
xchg
xchg
mov
cmp
pop
sbb
cmp
sti
cmp
out
add
add
push
jp
dec
loopne
test
add
push
mov
cltd
ss
mov
xchg
xrelease
inc
sub
hlt
add
cltd
mov
popa
push
arpl
daa
jae
imul
xchg
add
cmpsl
sbb
scas
and
lods
mov
cmpsl
push
rcll
push
mov
repz
cli
inc
lahf
fmul
je
cmpsl
dec
push
push
dec
out
leave
loope
or
mov
xchg
mov
cmp
ja
sbb
je
and
jle
bound
sbb
into
and
mov
sub
jbe
loop
mov
xor
fcmove
jmp
sub
mov
push
aam
fmuls
fiaddl
xchg
mov
cmp
fs
pop
lcall
add
xor
inc
data16
cmpxchg
adc
adc
rorl
shll
mov
pop
data16
cmp
jg
call
jnp
or
jl
cmpb
mov
xchg
xchg
adc
dec
jl
add
popf
push
xor
fidivl
inc
pop
push
jl
sub
std
fwait
int3
sarl
cmpsb
adc
std
push
je
mov
jb
stos
push
decb
pop
lret
rclb
xor
test
xchg
mov
mov
outsl
mov
jl
cli
inc
fists
ja
out
pusha
in
bound
sbb
cli
movsb
adc
inc
mov
in
add
xchg
loope
or
mov
shl
fcoms
shr
sahf
scas
xchg
sub
into
movsl
lahf
out
push
jae
mov
jnp
rol
mov
cmp
sub
jo
adc
mov
mov
lods
jle
fwait
pause
xchg
insl
mov
mov
add
add
cld
pop
push
lcall
inc
scas
xchg
call
add
inc
and
cmp
cld
pop
xchg
test
cwtl
and
cmp
mov
sbb
mov
fimuls
lcall
ljmp
aam
stos
loope
jp
sbb
inc
and
icebp
je
mov
jae
xchg
xchg
xchg
and
aas
mov
out
jns
or
push
adc
lea
clc
insb
loop
dec
and
jle
or
sbb
jle
shrb
xor
xor
pop
pop
es
lds
test
stos
cli
ret
inc
out
and
add
vpcmpeqw
out
cmp
jno
push
jl
or
dec
sub
mov
fmulp
jno
push
in
adc
iret
test
cmc
sbb
push
xor
fs
loope
loopne
mov
enter
push
add
add
add
ds
add
add
xchg
jl
divl
int3
jl
cs
loope
lods
notl
repz
stos
es
add
insb
fisttps
xchg
leave
rclb
jmp
cmpsb
sbb
loop
int3
adc
xchg
mov
popa
xlat
dec
in
nop
push
push
fsubrl
sbb
sbb
push
push
mov
je
and
mov
mov
fiadds
jecxz
mov
fiaddl
xor
in
inc
int3
ret
pop
hlt
aaa
ret
adc
and
and
sahf
push
lods
and
sbb
popf
mov
mov
jns
add
out
and
pop
jle
jno
add
add
push
sub
inc
jmp
push
sub
and
movsb
sti
into
xlat
adc
xor
pop
and
repz
sbb
sub
sti
xorb
mov
cmpsb
cmp
pop
sub
inc
test
orb
fucomp
cmp
mov
cld
je
mov
test
pop
test
xor
movsb
or
in
sub
sbb
insl
scas
addr16
nop
pop
mov
movsl
add
push
mov
fwait
xchg
adc
stc
dec
cmp
inc
daa
sbb
jle
sub
ss
int
test
int
or
scas
jne
cmp
lret
push
cld
dec
repnz
movsb
cli
cmc
push
xor
arpl
mov
pop
jb
bound
sbb
cltd
sbb
cmc
mov
popf
sbb
add
push
lcall
insb
sbbb
imul
mov
mov
pop
pop
int
sbb
xor
test
call
insb
mov
inc
pop
inc
ljmp
arpl
lret
add
cmp
inc
pop
lods
push
or
mul
mov
nop
lods
nop
loop
insb
xor
push
je
lods
inc
repz
add
cmp
mov
pop
cmp
sbb
xchg
pop
hlt
in
jge
lods
and
mov
fldl
cmp
data16
adc
push
cltd
ljmp
xor
mov
imul
add
xchg
inc
ret
pushf
inc
cmp
fucompp
leave
pop
mov
xor
push
test
cmpsl
popa
mov
hlt
pop
ss
push
shl
sbb
in
mov
jmp
lock
mov
xchg
pop
mov
sbb
adc
push
scas
sahf
bound
mov
int3
popa
iret
ffree
mov
xor
mov
mov
aad
mov
nop
inc
push
sarl
test
dec
mov
dec
ds
add
fneni(8087
sbbb
dec
dec
jae
lds
xor
in
cmpsb
pop
cmp
and
out
sbbl
cld
pop
mov
jmp
sarb
jg
lret
pushf
cwtl
fwait
insl
add
dec
adc
out
xchg
jl
dec
clc
andb
cmp
xchg
lret
out
idiv
shl
test
jge
jg
fisubrs
fistpll
pop
std
shrb
cmpsl
jno
cmc
hlt
jnp
aam
inc
sub
frstor
iret
cs
mov
inc
mov
cmpsl
ret
or
add
js
int3
jmp
jno
test
test
in
ss
and
stos
add
mov
pusha
adc
adc
xchg
std
mov
lahf
call
das
xchg
mov
dec
in
out
xchg
pop
xchg
push
add
pop
sub
push
sub
pop
loopne
cmc
aam
js
jo
popa
adc
fisubs
in
pop
arpl
and
add
push
pop
idivl
out
dec
xchg
push
cld
shlb
fs
sbb
cmp
add
fidivl
jnp
fiadds
fucomip
cmp
imul
cmp
test
popa
cmc
adc
enter
les
push
xchg
data16
addl
pop
or
mov
fnsave
int
sbb
xor
sarb
cwtl
dec
in
or
sub
into
xor
fiadds
inc
test
popa
jbe
dec
push
ss
cs
sub
fidivs
push
pop
or
and
dec
rclb
in
xchg
sub
pop
mov
cmp
mov
scas
movsl
lods
mov
and
push
jle
je
daa
cmpsb
push
dec
int
xor
pusha
testl
push
out
jnp
dec
pop
test
fstl
stos
sbb
cmp
stc
sub
cltd
bound
mull
push
popf
cmc
lods
push
xchg
call
add
xlat
or
out
pop
lret
inc
pop
xor
scas
jmp
jg
rcll
mov
fistpll
sbb
hlt
fadd
adc
jmp
add
test
mov
cmpsb
enter
mov
dec
scas
mov
test
and
dec
mov
sbb
subb
push
out
or
frstor
cmp
mov
dec
aas
fistpll
imul
push
add
mov
adc
fcomps
dec
inc
mov
cmc
xchg
lea
dec
leave
outsb
mov
insl
sub
push
js
insl
jnp
xor
sbb
call
or
repnz
test
sub
adc
mov
gs
dec
lods
in
daa
aas
xchg
fcmove
push
pushf
lods
pop
sarb
push
push
jb
ret
push
or
call
lock
fistpll
push
mov
or
cltd
fwait
mov
test
dec
add
dec
and
inc
mov
aad
out
cld
jae
cmc
and
push
les
add
mov
dec
pop
fadds
xchg
adc
dec
mov
push
pop
ljmp
adc
sbb
lea
mov
mov
ret
mov
xchg
pop
popf
mov
sbb
xor
and
rol
mov
or
and
mov
sub
outsb
dec
adc
mov
mov
aas
pushf
out
xor
out
scas
cmpsl
mov
je
ljmp
add
mov
inc
inc
pushf
mov
loopne
imul
or
push
or
sbb
mov
adc
popf
mov
adc
xor
shrb
mov
dec
xchg
loop
repz
fstps
leave
roll
push
hlt
mov
mov
mov
mov
hlt
pop
pop
movsl
ljmp
and
mov
mov
push
sbb
das
jg
iret
or
dec
jbe
mov
and
cmpsl
or
cltd
jp
jmp
je
cmp
mov
or
push
mov
jecxz
stc
or
inc
jmp
dec
mov
sub
roll
iret
je
fisttpl
cmc
push
out
sbb
jae
push
shrb
repz
and
stos
mov
pop
mov
gs
aam
out
and
insl
adc
jb
addb
shl
outsb
sahf
stos
mov
jns
in
leave
in
sub
stos
or
cld
ret
jg
mov
std
aam
push
xchg
push
aam
mov
or
or
lret
xchg
lret
cltd
bound
mov
orb
sub
test
fisubrs
or
pop
ret
inc
cwtl
xchg
movsl
icebp
loope
push
and
imul
jns
xchg
inc
mov
cmpsb
sub
lock
mov
mov
aad
jle
push
inc
lret
daa
sbb
lds
sbb
mov
cmc
mov
popf
mov
test
fisubrs
push
jecxz
mov
mov
std
and
push
lds
dec
aad
push
sbb
nop
incb
test
dec
ffree
mov
std
fstpt
in
into
inc
test
dec
scas
popa
xchg
sub
in
dec
push
xor
adc
add
adc
mov
lret
cmp
test
or
fucomp
mov
mov
loopne
inc
xchg
data16
dec
xor
and
sbb
loop
jnp
jo
sbb
test
js
cmp
mov
xor
loope
lea
and
lock
sbb
lcall
adc
les
test
fwait
inc
inc
or
insb
dec
mov
lahf
pop
jbe
add
pusha
imul
mov
sbb
add
pop
scas
pop
pop
mov
mov
nop
cld
xchg
lods
mov
inc
push
mov
xor
jl
jb
xchg
lods
sub
mov
sbb
call
les
out
sub
jno
sub
daa
mov
aad
mov
test
leave
shrb
push
int
mov
mov
xor
in
inc
hlt
lret
dec
cwtl
mov
mov
hlt
dec
test
test
dec
inc
jns
imull
out
sub
pop
roll
jb
xchg
shll
out
push
push
dec
cs
iret
imul
addr16
aam
add
push
mov
bound
mov
aaa
mov
mov
or
cmp
sbb
orl
mov
gs
jle
cmp
dec
jbe
ret
cltd
insl
sbb
pop
ja
sqrtps
xor
xchg
fs
push
jno
psubsw
cs
call
int
rcll
inc
cwtl
out
pop
jo
cmp
xchg
inc
dec
add
xchg
outsl
pushf
loopne
mov
sub
push
cmpl
jp
push
imul
cmc
ds
xor
sbb
scas
insb
and
add
or
rcr
pop
xorl
movsb
inc
push
int3
mov
or
jo
shrl
add
add
das
testl
aam
add
dec
sbb
xor
fs
inc
xchg
cmp
mov
cli
xor
inc
push
and
popf
ret
dec
dec
pushf
lods
inc
xchg
add
shlb
rcl
add
js
dec
rolb
adc
jecxz
iret
push
xchg
or
iret
ja
pop
out
mov
cmc
iret
loopne
add
add
nop
adc
inc
mov
xor
stos
addb
pusha
sahf
lahf
xchg
sbb
xor
jbe
xchg
push
popa
mov
cltd
sub
mov
lahf
push
mov
xchg
cmp
addr16
subl
mov
movsb
sub
addr16
mov
mov
push
ret
xchg
pop
cli
mov
in
aas
mov
div
rolb
mov
cld
jge
ljmp
jle
test
push
dec
loopne
mov
repnz
inc
repz
popa
dec
add
xor
pop
jmp
jbe
add
les
lret
mov
xchg
js
mov
add
aad
and
pop
pop
sahf
loopne
push
push
insb
negl
jns
stos
jae
jg
div
int
or
sub
test
iret
testb
dec
xchg
or
sbb
inc
adc
dec
and
movsb
lods
fisubrl
jp
pop
xchg
adc
add
add
popf
scas
arpl
jg
stos
cli
xor
sub
repz
sub
outsl
cwtl
arpl
lds
xchg
data16
jle
xchg
or
sbb
xchg
insb
jecxz
adc
hlt
push
pusha
jb
push
inc
xchg
lods
cld
mov
jge
or
or
dec
movsl
fldl
mov
aad
mov
xlat
and
gs
push
inc
cmpsb
push
inc
out
mov
adc
adc
pop
jno
and
cmp
mov
xor
stos
cmpsb
xor
xor
ljmp
push
sbb
mov
lea
pop
push
idivl
dec
add
mov
pop
inc
ss
roll
pusha
outsb
test
sbb
cld
cli
lods
stos
xor
dec
aam
xor
mov
lret
and
xor
leave
mov
push
repnz
out
shlb
rcl
mov
test
mov
sbb
aad
xchg
push
stc
bound
mov
xchg
jecxz
es
lret
popf
push
js
push
push
sub
cmp
mov
lcall
mov
or
into
push
int
rcrl
push
cmpsl
ds
call
push
rorl
sbb
jge
in
push
hlt
jmp
insl
sbb
test
pop
cmp
xchg
bound
push
rclb
test
lds
jae
pop
cwtl
or
add
je
cs
stos
in
insl
mull
push
ss
sbb
inc
mov
dec
mov
repz
enter
cmp
push
imul
xorb
xchg
gs
loope
mov
pop
cmp
and
push
cli
int3
adc
xchg
test
sbb
incb
xchg
pop
test
xchg
in
cvtdq2ps
rcl
stos
or
sbb
shlb
stos
inc
out
fsubrs
xchg
dec
fwait
clc
cwtl
lock
cli
mov
popf
mov
mov
addr16
addb
iret
bound
add
sub
mov
int
arpl
insb
fs
dec
xchg
fs
push
jno
push
ret
push
xchg
repnz
call
adc
pop
sbb
xchg
shl
cmpsl
fucomp
mov
or
pop
lret
and
aad
jge
js
sub
loopne
mov
xor
xchg
loop
lea
mov
cmp
jg
je
or
dec
sub
test
mov
adc
rcrb
scas
insl
fbld
mov
sub
jnp
dec
xor
pusha
mov
pop
fistpl
jecxz
sub
adcl
mov
and
jno
repnz
fwait
xor
movsb
scas
mov
outsl
jns
jg
push
sbb
jecxz
aaa
xor
sarl
ljmp
ja
addb
xor
pop
xchg
fsubl
hlt
int
jmp
mov
lret
jns
test
stos
mov
or
repz
jmp
or
xor
sbb
xchg
sbb
jl
stos
sbb
dec
push
fnstsw
cmp
loope
push
mov
lea
mul
test
das
mov
ljmp
fidivl
sub
es
or
sti
add
cmpb
add
inc
dec
test
mov
jg
push
adc
or
ret
insl
push
aas
push
in
add
add
in
adc
icebp
in
in
inc
scas
mov
into
cmp
and
jb
sbb
cld
mov
out
mov
pop
dec
lods
and
add
insb
movsb
ficompl
bound
pop
in
xor
mov
data16
inc
orl
sbb
leave
pop
decl
fdivrp
ljmp
loopne
add
jo
ds
cmpsb
sbb
lock
mov
push
cmc
xchg
jecxz
dec
lods
adc
enter
pop
push
bound
icebp
popf
cwtl
in
inc
jns
add
in
xor
push
mov
fdivs
rcl
in
bound
sub
addr16
int
sub
enter
test
movsl
subl
sbb
mov
mov
out
mov
mov
daa
xchg
stos
inc
je
imul
adc
mov
push
cmc
rorb
mov
repnz
pop
aas
jb
repz
ret
out
inc
cltd
dec
std
lock
pop
xor
sbb
dec
js
pop
push
lea
popf
xchg
mov
mov
sub
dec
xor
or
push
stos
mov
xor
jmp
jnp
in
xor
jg
data16
cmpsl
fwait
pop
les
pusha
stos
mov
cmpsl
pushfw
add
movsb
cmc
jl
pop
outsl
mov
ja
stos
jle
mov
xchg
ljmp
adc
mov
hlt
jnp
adc
or
das
in
jg
xchg
sub
pop
int
sub
dec
add
mov
xchg
arpl
loope
inc
dec
call
pop
sub
iret
xor
stos
int
pop
int3
hlt
test
cmp
dec
jle
mov
jbe
je
pop
mov
cltd
stos
ficoms
mov
fisubl
and
mov
ret
dec
xchg
add
lds
in
sbb
cmp
sbb
popf
mov
adc
fisttpll
cs
lret
inc
mov
iret
adcl
sbb
mov
les
mov
jb
cwtl
push
ja
repnz
push
mov
push
sbb
xchg
movsb
cmpsb
mov
dec
sub
loop
imul
test
data16
and
push
popa
fistpll
cli
test
adc
sbb
sub
bound
cmp
cmp
test
outsw
aam
in
sub
movsl
or
add
xchg
dec
dec
popa
push
aas
add
std
xchg
or
pushf
fsubrs
mov
outsb
fiaddl
dec
iret
xor
fimull
aad
jae
ja
in
fists
and
imul
adc
cmp
push
ds
cmp
jge
sahf
adc
loopne
jl
fstpl
adc
in
ss
jae
inc
mov
rcll
das
and
imul
cmpsb
mov
pop
ds
in
add
xor
aaa
jno
out
ljmp
jns
ljmp
dec
jno
pusha
js
dec
push
xchg
outsb
add
sbb
out
push
xchg
lret
icebp
sub
mov
lods
push
scas
imul
call
movsb
enter
inc
pusha
pop
data16
and
loopne
mov
pop
daa
sub
xorb
imul
movsb
fwait
and
lods
lods
sub
pop
mov
xor
add
test
cwtl
lock
add
add
sub
mov
sub
dec
aam
cltd
cmpsl
stos
mov
fs
cld
sub
and
dec
fiadds
std
popa
push
popa
push
int
addr16
xor
ljmp
cmp
int
in
mov
xor
jp
pop
loopne
inc
outsl
ret
call
loope
inc
repnz
sub
lret
or
fldl
xor
ret
or
jp
mov
in
sub
shl
out
stos
mov
xchg
xchg
mov
jne
in
sbb
scas
add
push
popf
sub
insb
and
out
mov
scas
ficomps
pop
cmp
mov
fnsave
ret
js
mov
push
cmp
pop
push
jg
push
out
stos
stc
daa
mov
imul
aad
adc
pop
in
mov
sbb
hlt
pop
sbb
or
outsb
cmp
add
add
enter
js,pn
rorl
add
push
lret
xor
jo
pushf
cltd
inc
push
insb
cmp
outsl
dec
jge
loope
jmp
in
xchg
inc
xchg
cs
mulb
pop
std
adc
fdivrl
in
pop
dec
ljmp
stos
or
or
les
lahf
push
xchg
xor
in
xchg
push
add
aaa
or
cmp
cmp
jle
add
mov
loope
dec
inc
xchg
push
mov
arpl
mov
and
jmp
scas
and
call
outsb
rclb
fiaddl
pop
inc
ja
popa
inc
fs
negb
sbb
inc
mov
mov
or
mov
xchg
and
xchg
mov
mov
dec
lock
add
xchg
mov
add
add
clc
adc
iret
mov
and
mov
leave
les
test
movsb
and
cli
popa
aas
test
mov
push
lret
adc
lock
scas
data16
arpl
xlat
add
adc
sbb
dec
loope
lods
adc
icebp
aas
push
decb
test
push
push
lret
insb
int
push
add
out
out
lret
jns
pop
mov
jae
enter
test
add
and
lahf
ss
mov
addb
fmull
push
rolb
mov
pop
mov
imul
mov
sbb
mov
jb
test
push
mov
cwtl
jg
dec
mov
and
xchg
stc
dec
cmp
in
jns
loopne
std
pop
int
pop
pop
lock
push
xchg
jns
cmova
push
mov
out
mov
cmc
pop
js
push
xchg
aaa
lods
jno
mov
mov
push
data16
scas
and
xor
dec
cltd
stos
push
sti
or
aas
test
inc
aaa
mov
xchg
outsb
mov
add
je
out
sub
sbb
jmp
cwtl
push
ds
inc
adc
pushf
loop
pop
stos
roll
add
mov
sub
pop
xchg
out
call
scas
xchg
pop
mov
xchg
sub
cwtl
or
dec
mov
dec
sbb
int3
insl
push
and
add
xchg
and
push
xchg
sub
dec
sbb
add
add
add
das
fsubs
sbb
in
in
sub
repnz
add
jo
and
jo
pop
shr
stc
pop
dec
push
jns
iret
xlat
ljmp
push
push
add
add
lds
aam
lea
pop
cmp
push
fdivrp
jno
out
ficompl
lods
icebp
xchg
lret
xorb
fnstsw
inc
cmp
popa
dec
push
lock
dec
pushf
inc
int3
fwait
rorl
hlt
out
jp
cwtl
and
push
jp
pop
loop
jmp
mov
or
ja
cltd
test
jl
scas
mov
rol
test
jmp
subb
pop
mov
cld
mov
adcl
xor
cmp
push
stos
call
push
adc
aam
cmp
lods
push
shl
pop
lods
outsl
add
and
jns
dec
inc
sbb
mov
rcl
sti
out
jnp
fists
or
jge
packsswb
jno
sub
pop
or
mov
clc
and
xor
iret
inc
mov
leave
mov
loop
dec
sbb
cmp
xor
and
mov
test
pop
pusha
icebp
push
adc
mov
pop
int
mov
cwtl
cmp
xor
lahf
dec
xchg
cmpsl
and
sub
jle
push
sub
cld
push
xor
xor
data16
mov
int3
lahf
stc
clc
xor
insb
fcompl
cli
xchg
xchg
cmpsb
push
daa
out
add
add
loop
fs
rcrb
mov
pop
fsubr
jbe
ss
jbe
leave
cli
jns
xchg
mov
inc
arpl
movsl
jmp
jne
dec
mov
subb
inc
mov
sbb
pop
pop
arpl
cmpsb
sbb
in
stos
xor
sub
adc
fstpl
push
ljmp
ret
sldt
add
or
xor
in
or
scas
mov
rorl
inc
sub
pop
pop
push
xchg
sub
lods
aaa
adc
sub
hlt
push
aaa
fs
test
adc
or
aad
jp
and
and
ficoms
mov
rcrb
lcall
addb
ficompl
pop
lock
inc
or
pushw
sub
adc
pop
repnz
cmp
mov
cmp
ss
js
add
adc
lock
je
cmc
cmpb
imul
lret
and
pop
fmulp
shll
mov
insb
arpl
push
mov
push
add
je
fs
das
popf
mul
and
sub
sbb
push
jnp
loop
adc
ret
xlat
or
and
xchg
xor
xchg
int
hlt
pop
push
pop
das
sub
sub
mov
rcl
arpl
in
jmp
inc
or
popf
stc
mov
leave
mov
jle
push
adc
xchg
mov
pop
or
mov
lahf
adc
and
mov
sahf
movsl
mov
inc
xor
xor
incb
add
add
les
xchg
cltd
push
les
ss
mov
inc
mov
xchg
or
mov
pop
sub
mov
rcrl
scas
push
clc
addb
fucomp
test
xor
aaa
aad
stos
jae
and
fsubl
fcompl
add
push
mov
mov
mov
jnp
into
mov
mov
cmc
xor
or
or
scas
push
cwtl
filds
int3
jb
bound
cmp
mov
icebp
outsl
arpl
dec
mov
aaa
cld
cmp
push
sbb
or
xor
insl
sub
add
push
jecxz
mov
and
fistpll
and
adc
push
push
pop
out
cmpsl
or
jl
sbb
test
push
push
fcom
jmp
sub
jo
ljmp
and
push
idiv
sbb
jo
data16
or
movsl
popa
cmpb
add
add
jno
sbb
jns
mov
add
xchg
adcb
daa
sub
cwtl
clc
cmp
daa
into
or
add
push
xchg
mov
mov
add
add
sti
mov
add
cli
mov
push
and
mov
mov
push
clc
inc
push
dec
lcall
cltd
xchg
in
xor
shlb
push
push
lods
ret
add
rclb
sub
cmpsl
pop
popf
rorl
imul
sbbl
push
mov
add
hlt
sbb
ljmp
repz
out
cmp
lahf
mov
jb
out
mov
inc
pop
repz
rorl
cmp
inc
cwtl
and
lea
loope
pop
movsb
mov
and
outsl
sbb
scas
add
jge
mov
cmpsl
mov
mov
pop
cmp
sbb
aam
cmc
mov
cmp
push
imul
xorb
xchg
push
mov
xlat
cmp
int3
les
insb
jmp
add
mov
mov
inc
mov
sbb
mov
cmp
dec
sub
cs
rcrl
or
stos
adc
pop
push
in
nop
cld
push
xchg
inc
sbb
push
jne
inc
mov
pop
xor
jle
lock
adc
jns
dec
out
add
pusha
in
clc
cmc
and
sbb
notb
sub
std
inc
or
neg
fdivr
add
ret
jl
mov
jecxz
in
sub
add
add
push
pusha
aaa
test
sub
push
jnp
jne
leave
dec
js
fbld
dec
fimuls
mov
jae
jae
pop
jbe
xchg
mov
or
push
ret
scas
int3
pop
sti
mov
pop
sub
add
orb
xor
mov
mov
add
iret
adc
insl
aad
inc
jge
aas
rorb
mov
jp
lods
pop
cmc
adc
push
inc
sbb
mov
mov
xor
jnp
pop
stc
push
stos
outsb
pushf
mov
sub
xor
jg
int3
std
jp
cmc
mov
jo
mov
stos
xor
or
sti
fcom
jg
aam
xor
imul
in
ss
push
lahf
outsl
push
or
mov
mov
mov
in
in
and
imul
cli
loopne
inc
sbbl
and
cld
repz
ret
cld
add
enter
movaps
mov
data16
fimuls
ds
cmp
nop
or
ljmp
cld
movsb
xor
lret
nop
inc
lcall
test
cli
stos
jnp
pop
sbb
iret
lahf
cmpl
shll
lahf
leave
cmp
pop
mov
pop
sti
adc
mov
movsl
inc
ret
shr
adc
mov
cmp
jp
into
push
adc
insl
call
rolb
mov
cmp
mov
fwait
stc
imul
adc
ret
add
or
imul
in
leave
pop
inc
loope
int
adc
fwait
cs
fdivrs
inc
push
xchg
jmp
imul
mov
or
cmp
jecxz
mov
push
push
ficompl
int
fcomp
inc
cwtl
fcoml
dec
mov
sbb
fidivl
iret
dec
popa
idiv
inc
dec
dec
gs
or
xchg
sub
shl
mov
incb
fdivs
insl
popf
fwait
cmpsb
out
inc
mov
or
mov
sarb
lret
pop
out
push
in
stos
nop
aas
dec
fwait
sbb
mov
xor
lea
and
clc
js
xchg
pop
sub
jns
iret
and
dec
inc
stc
fildl
pushf
jp
popf
cmp
into
cmp
test
pop
mov
or
imul
jb
popa
push
sbb
add
fidivl
jmp
adc
pop
xor
cmp
aas
mov
dec
mov
ret
dec
push
push
repz
cltd
pop
test
cmp
hlt
dec
ret
test
pop
subl
cmpsl
sahf
mov
mov
cmpsb
nop
fldenv
inc
sub
loop
in
mov
in
sub
fmulp
xor
pushf
cmp
xor
xchg
fcoms
cmp
pop
push
and
xchg
cmp
xlat
pop
jne
fs
lock
mov
adc
add
add
aaa
dec
int
repnz
xor
add
push
push
faddl
jae
and
lahf
pushf
mov
add
pop
push
add
inc
sbb
pop
inc
xchg
mov
dec
shlb
cmp
add
push
mov
push
and
adc
push
out
dec
cmpsb
inc
sarb
add
movsl
xor
push
icebp
and
das
test
jg
dec
push
pushf
pop
adcb
xlat
and
adc
jno
lods
mov
adc
push
loop
or
or
sub
push
sbb
std
inc
mov
fcom
popa
push
in
inc
test
and
jmp
dec
dec
sbb
mov
mov
cmpl
dec
xor
clc
test
mov
loopne
add
jp
imul
std
adc
push
popf
das
push
aam
adc
aas
ja
jge
out
outsb
xchg
push
push
ffreep
or
xlat
dec
adcl
pop
mov
mov
pop
mov
std
or
pushf
or
notl
ror
fidivs
ja
xor
dec
push
dec
cmp
dec
pop
or
out
sub
and
pushf
scas
les
test
pop
lods
xor
fisubrl
or
push
add
inc
cmc
clc
inc
daa
sbb
scas
lods
iret
rcrb
add
add
pop
aam
xchg
xchg
ficoml
fs
fnstenv
or
dec
mov
in
inc
ja
andb
into
scas
push
in
cmpsb
xor
pop
shl
xchg
test
mov
or
and
adc
imul
std
das
fstps
shr
jns
cmpsb
push
inc
inc
rol
mov
jge
aas
cli
shl
xor
repnz
adc
sbb
cwtl
mov
lock
enter
mov
add
add
repz
and
mull
mov
cs
jo
dec
sub
cli
and
subps
nop
aaa
xchg
inc
cmp
pusha
push
or
in
or
mov
lret
push
js
in
fidivs
push
inc
out
add
xchg
push
loop
adc
imul
decl
cli
jge
and
arpl
fucomp
das
in
jg
je
and
out
inc
and
lods
add
xor
xor
mov
jo
out
push
fstl
mov
outsl
or
stos
fists
dec
popa
sub
cmp
mov
push
mov
shrb
cwtd
mov
sti
inc
push
aaa
dec
and
sti
mov
pop
cmpsl
jmp
cmp
iret
sub
ljmp
mov
inc
cwtl
fnstsw
lock
mov
xor
dec
cwtl
fcmovne
js
xor
rorb
or
add
out
ret
insb
aad
adc
mov
dec
push
loop
adc
insb
and
cs
inc
fistpll
fstps
and
push
in
sub
mov
mov
stos
inc
mov
jnp
das
or
pop
xor
lahf
lds
call
int3
pop
and
sarb
mov
loopne
aas
jb
popf
int
stc
add
ljmp
dec
jl
push
rcr
sub
fs
insb
jg
daa
mov
add
add
mov
testl
imul
aaa
iret
les
iret
jae
pusha
add
jmp
scas
in
pop
int
push
add
cltd
das
cmp
add
add
sbb
nop
aam
mov
cld
rcr
cmp
aad
fs
add
gs
sub
jne
stc
jno
xor
shrl
shlb
out
xchg
mov
sub
cltd
std
adc
jbe
out
xor
inc
into
pause
pop
pop
xchg
hlt
icebp
push
int
mov
or
inc
repz
jbe
scas
outsl
and
shl
out
xor
pop
xor
popf
xchg
push
outsb
ret
pop
pop
fs
jne
rolb
add
add
pop
ret
push
bound
dec
std
and
cltd
insw
fcmovnbe
xlat
popf
sbb
sahf
mov
rclb
xor
xchg
out
jecxz
js
testl
icebp
lea
mov
popf
dec
shll
fsubl
in
add
sbb
mov
stc
jae
clc
push
xchg
sub
and
movsb
test
cmp
cmc
daa
gs
addb
bound
cld
mov
dec
mov
xor
jg
test
push
loope
rcll
aam
cli
adc
lock
or
jb
xchg
xor
out
loope
inc
loopne
add
mov
es
sub
mov
arpl
mov
imul
addr16
mov
jb
out
pop
cmpsl
repnz
mov
jl
push
xchg
rolb
cli
popa
lods
or
cmpsb
data16
lahf
push
jns
sahf
iret
cltd
fldl
lret
lods
push
movmskps
addr16
jno
rorl
push
and
mov
adc
xor
mov
bound
mov
lock
jg
sbb
pop
sar
orl
push
imul
andb
arpl
popf
and
and
jbe
xchg
pop
pop
mov
inc
push
push
or
daa
xor
clc
pop
je
jge
add
into
sbb
or
mov
mov
and
pop
loope
scas
sbb
lret
jg
lock
pop
mov
sub
lret
ret
mov
out
lods
inc
and
cmpsl
xchg
push
push
testl
inc
sub
mov
adc
test
lds
mov
ret
mov
in
fucomip
xor
add
mulb
or
dec
test
es
mov
push
inc
ret
data16
stos
in
dec
or
lcall
jae
mov
push
jl
mov
js
add
add
das
aad
mov
xor
inc
cwtl
xor
ret
mov
xacquire
lcall
mov
xor
or
inc
mov
adc
xor
leave
test
arpl
xchg
lcall
jae
test
test
call
add
jno
jmp
add
jp
cmp
cmp
test
addr16
push
out
dec
jge
xlat
add
cld
or
xchg
cmp
cltd
dec
fidivrs
mov
lret
pop
outsl
mov
mov
loopne
xchg
xor
lret
cmp
add
sbb
jnp
loope
push
ret
imul
and
shrb
and
dec
cmc
sbb
insb
mov
xchg
gs
out
in
xor
movsl
stos
addr16
mov
scas
or
or
lret
aas
dec
out
out
faddl
add
add
mov
lret
mov
mov
adc
push
shl
sub
fcoml
test
cmp
in
ss
inc
xchg
cmp
inc
adc
in
xor
cli
mov
adc
jp
ficoms
inc
push
lea
shrb
mov
dec
mov
inc
xor
stos
aas
jne
into
pop
pop
nop
jg
and
sbb
sbb
sub
push
bound
lret
add
inc
fistps
leave
jno
sbb
das
add
cmp
cld
inc
inc
mov
or
xchg
or
cmp
ror
jl
repz
cmp
imul
imul
and
jmp
push
scas
int3
sahf
ja
fcmovbe
int3
sub
add
in
cmp
add
jp
lea
adc
insb
jl
popa
push
lods
add
lret
dec
jmp
dec
bound
hlt
je
repnz
in
adc
gs
out
mov
int3
adc
mov
pop
pop
les
fimuls
icebp
jno
pop
jno
xor
je
dec
inc
aad
push
cmp
loop
push
mov
test
jbe
lods
dec
or
mov
gs
sti
xchg
sahf
sub
nop
add
subl
pushf
and
mov
mov
shld
mov
mov
add
call
sbb
andl
shrb
out
add
inc
mov
hlt
pop
jecxz
push
mov
lret
jl
mov
push
jne
aaa
fdivrs
jo
and
xor
jo
mov
adc
dec
fstpt
dec
mov
hlt
or
xchg
loopne
dec
adc
aam
ds
ret
mov
lret
repz
lret
pop
das
sbb
std
push
jmp
dec
in
sbb
pushf
cli
push
fwait
push
out
mov
jl
push
sbb
pop
and
jb
pusha
push
jnp
daa
daa
xlat
dec
lret
lahf
sub
jmp
add
leave
in
inc
arpl
mov
test
adcl
sub
clc
fisubrl
pop
sbb
cld
mov
mov
push
dec
dec
xchg
sub
add
add
xchg
pop
add
movb
dec
sub
ss
sbb
icebp
mov
or
scas
or
xchg
scas
sub
add
in
cmp
gs
stos
push
aaa
imul
fistpl
stos
test
xlat
fsubrl
shll
ret
lret
fwait
dec
movsl
adc
jmp
dec
jmp
cs
sub
popa
push
adc
push
adc
incl
pop
mov
or
cmp
add
push
pop
mov
repz
test
xchg
push
mov
cmc
and
mov
stos
pop
pop
ljmp
dec
pop
mov
lahf
popa
adc
pop
popa
add
inc
jbe
adc
sub
sub
cmp
sbb
mov
pushf
cwtl
fldcw
lahf
xchg
pushf
adc
fwait
or
sub
inc
push
or
je
mov
popa
push
lahf
fisubl
xor
ret
sub
mov
iret
iret
dec
addr16
push
ljmp
add
subb
aad
mov
mov
outsb
push
pop
pop
xor
jge
in
push
push
inc
and
jg
pop
nop
aad
out
out
mov
cmp
rorl
cmc
fidivl
sub
xchg
push
arpl
or
mov
enter
adc
lret
fisubs
push
pop
dec
xor
sub
pop
and
or
mov
and
push
and
jmp
jle
and
xchg
sbb
inc
popf
mov
cltd
shlb
pop
mov
aam
xchg
sbb
jl
push
mov
fs
mov
enter
ret
sub
xor
sub
cmp
mull
or
sbb
test
pop
filds
loopne
or
sub
int3
insb
stc
dec
xchg
fisttps
nop
pusha
inc
pop
mov
scas
push
cmpsb
inc
inc
fwait
and
add
orl
inc
dec
mov
and
xchg
das
out
and
data16
push
mov
into
jmp
mov
fdivs
sti
xor
and
lret
addr16
sarb
mov
push
and
lock
xchg
cmp
pop
cs
xchg
pusha
gs
pop
pop
pop
ficompl
lods
cld
xchg
or
xchg
jns
mov
mov
push
sub
dec
sahf
push
jns
bnd
pushl
or
ficoml
jmp
inc
scas
inc
cmp
and
cltd
inc
adc
fldenv
cld
loopne
and
pop
repnz
add
fdivs
mov
mov
push
loopne
fdecstp
add
add
cmpsl
scas
push
push
and
mov
popa
sub
xchg
jp
mov
nop
test
push
or
in
loop
loope
arpl
mov
daa
aaa
cmp
inc
push
cmp
inc
enter
iret
jl
add
xchg
in
outsl
in
jmp
scas
push
pop
call
in
les
jne
subb
je
add
add
and
or
or
fidivrs
push
mov
mov
add
jns
xchg
repnz
sahf
cli
inc
cmp
cmpsb
push
inc
xchg
mov
and
les
mov
lahf
ficoms
fsub
mov
or
or
adc
je
in
jns
lock
push
adc
add
mov
xchg
insb
or
mov
jl
sahf
inc
xchg
out
xor
pop
shrb
pop
movsb
pop
and
cli
inc
inc
push
and
pop
adc
fiaddl
mov
cli
or
xchg
dec
stos
aaa
arpl
or
sbb
and
jecxz
push
sarb
cmpsb
icebp
movsl
adc
cmp
lret
mov
pop
and
aad
xchg
popf
xor
lcall
insb
and
dec
sub
and
cmp
mov
cmp
in
cwtl
xchg
loope
ds
push
or
ja
cli
mov
mov
mov
out
cmc
sbb
cltd
sub
dec
dec
cmpsl
int
jo
mov
jecxz
sub
mov
mov
rclb
movsl
mov
and
ljmp
insb
mov
mov
jns
inc
nop
daa
cmp
adc
lea
push
scas
cld
in
sbb
push
and
loopne
clc
fimuls
ljmp
mov
adc
movsb
xchg
call
xchg
ss
push
pusha
xor
test
in
dec
pop
jecxz
xchg
or
xor
push
push
xor
mov
lods
sbb
dec
xchg
dec
cltd
sbb
sbb
sbb
add
fwait
test
lret
jb
test
cmp
push
push
stc
in
add
xchg
and
cmp
sbb
insl
push
or
push
mov
nop
addr16
push
mov
mov
daa
test
mov
sub
push
icebp
dec
lahf
cmpsb
mov
in
mov
sub
iret
fnsave
push
lret
je
push
xor
ret
imul
pop
xchg
frstor
cli
imul
sub
shlb
fmull
and
pop
adcb
push
xchg
fdivr
lods
cmp
pop
insl
js
xlat
cmp
mov
les
mov
dec
lret
dec
push
cmpsl
in
mov
push
jne
push
jae
and
cs
fmuls
in
dec
and
fidivs
mov
xor
inc
in
jno
pop
jne
outsl
scas
cmp
inc
and
jo
pop
push
stc
mov
lea
dec
adc
int
aas
stos
cmpsl
sbb
roll
mov
adc
mov
adc
xabort
push
clc
cmpl
add
mov
jl
dec
lcall
cld
sbb
in
inc
jo
dec
cmp
andl
mul
cmovge
es
mov
pop
sbb
and
movsl
fdivr
push
stos
leave
mov
clc
lods
lcall
add
or
xchg
xor
add
movsb
mov
sbb
icebp
in
dec
or
xchg
inc
mov
rcrb
xchg
sbb
pop
jecxz
push
or
cltd
in
movsb
mov
xchg
in
jecxz
bound
adc
jmp
lds
loopne
ja
icebp
sbb
aam
add
lods
cmovno
push
mov
fnstsw
pushf
xchg
pop
inc
imul
jae
rclb
cmp
add
insb
sub
dec
adc
mov
dec
fwait
lods
sahf
and
pop
sbb
mov
mov
mov
inc
outsl
sub
mov
inc
arpl
stc
cmp
loop
inc
aam
jle
testl
inc
dec
aam
mov
xchg
or
xor
pop
out
repnz
mov
sarb
mov
out
push
repz
push
xor
stos
inc
test
pop
stos
sarl
inc
push
pop
push
popa
or
js
sbb
sbb
push
outsb
mov
cmp
int3
out
cld
scas
repz
jbe
adc
rorl
push
stos
and
enter
loopne
shlb
inc
int3
imull
xchg
jmp
insb
ret
mov
xor
mov
push
in
movsl
ss
jnp
jp
pop
cmp
dec
or
jmp
sub
dec
mov
decl
mov
decb
or
or
jmp
pop
sub
sub
inc
xchg
outsb
lods
xchg
adc
in
das
push
cli
and
stos
roll
jp
mov
data16
adc
loopne
cmc
mov
jp
push
mov
jp
mov
fistpll
fs
sbb
jl
dec
add
mov
xchg
dec
xchg
or
loopne
push
aas
insb
push
inc
movsl
lret
cmpsb
add
ja
xchg
xchg
mov
pusha
cmpb
mov
fisubrs
pop
sub
test
sbb
adcl
add
mov
sbb
mov
or
pushf
push
int3
pusha
lea
je
int3
push
repz
sbb
add
sbb
outsb
push
outsb
push
mov
mov
mov
enter
pop
or
outsb
ss
shl
jns
int
xor
or
mov
xchg
inc
stos
lret
cmp
scas
test
xor
fidivrs
jmp
into
mov
adc
test
cwtl
add
push
sub
and
out
push
push
cmp
or
push
jb
pusha
lcall
sbb
jbe
test
mov
nop
dec
mov
adc
clc
add
fisubl
adc
xor
popf
jmp
aas
ja
clc
movsb
push
jns
jo
ja
fisttps
mov
xchg
call
pop
lret
inc
adc
push
sbb
jle
sub
insb
clc
mov
and
pop
jne
jb
shlb
ljmp
stos
sub
idivl
push
insl
jbe
shrd
xor
movsb
data16
aas
in
outsb
inc
in
pusha
sub
pop
and
or
add
add
scas
lcall
jne
add
add
push
inc
rcrl
inc
push
cmp
mov
jno
bound
fidivl
mov
fld
imul
test
sub
cmp
movsl
test
sahf
jnp
sub
push
ljmp
mov
sbb
mov
or
or
faddl
mov
inc
lret
jns
and
jne
xchg
mov
lahf
int
xlat
mov
dec
push
push
push
icebp
push
out
push
idivl
sub
dec
sub
mov
inc
mov
imul
pop
xor
cwtl
jo
mov
mov
cwtl
imul
mov
fsubrs
xchg
rcll
mov
xchg
test
adc
inc
sub
jmp
push
test
push
pop
or
gs
add
cld
fwait
mov
das
mov
dec
les
jge
sbb
xchg
cmc
sub
mov
cmp
out
loopne
int3
pop
pop
popa
jmp
ja
inc
int3
xchg
cmp
inc
jle
ljmp
xor
enter
inc
dec
inc
xor
jp
jecxz
cmpb
dec
mov
push
push
jecxz
gs
lods
push
cmp
mov
adc
xchg
daa
ficoms
fstl
out
daa
mov
enter
xchg
ljmp
sbb
mov
mov
xchg
mov
jnp
addr16
inc
or
xchg
add
sub
outsl
inc
jno
lods
adc
sbb
xor
je
cmp
lods
aam
stc
inc
repz
inc
mov
andb
or
sbb
lods
inc
add
jg
push
and
lret
xchg
andl
aam
loop
cmpsl
aam
lahf
lods
leave
and
cmp
xlat
cmpsb
ss
les
sbb
jecxz
and
xchg
add
dec
repnz
sub
lcall
rclb
push
jl
jnp
lret
mov
out
clc
xchg
cmpsl
xchg
hlt
mov
sbb
cmp
dec
mov
mov
push
js
and
dec
push
lds
sarb
cld
mov
xchg
mov
pop
idivl
pop
mov
icebp
pop
mov
mov
repnz
les
arpl
xchg
xchg
cmc
mov
pop
sbb
sub
ds
scas
lea
test
xchg
adc
dec
xchg
cltd
adc
out
clc
xchg
clc
call
add
mov
mov
daa
mov
cmp
mov
mov
xchg
or
xor
add
cmc
call
fs
push
add
insb
roll
mov
add
mov
jns
loopne
jo
cmp
pop
mov
inc
jno
and
push
xchg
sbb
push
enter
pop
scas
inc
sti
xchg
or
mov
test
ds
push
jp
into
sahf
jae
jl
lods
sti
sbb
jg
or
sbb
inc
loope
or
mov
inc
aas
loope
faddl
add
add
aaa
jno
adc
mov
cmp
push
xchg
mov
adc
push
test
sbb
lret
push
mov
cwtl
mov
out
mov
data16
mov
and
icebp
in
add
mov
ret
lret
jmp
lods
movsl
insl
call
or
mov
pop
divl
sub
std
inc
and
push
mov
pop
gs
sbb
inc
and
pusha
mov
or
adc
ret
fsubrs
out
dec
adc
dec
or
push
add
add
xchg
orl
mov
mov
jl
dec
into
add
push
mov
cmp
and
xchg
iret
stos
xor
repnz
inc
fs
fcoml
out
mov
pop
xchg
xchg
add
push
pop
out
fcoml
lcall
into
inc
test
mov
fwait
aaa
test
and
fisubrs
jne
popf
dec
ljmp
pushf
popa
fnstsw
stos
vcvtss2sd
mov
pop
pusha
movsl
inc
mov
cli
fwait
inc
pop
ja
mov
inc
push
out
mov
out
inc
insl
push
arpl
sbb
pop
loope
mov
cmp
fmull
xchg
xor
jb
lea
jecxz
add
mov
xchg
dec
mov
test
push
lea
rorl
ret
pop
loope
rep
cwtl
jmp
test
pop
xchg
mov
int
aam
scas
and
add
aas
das
incl
xor
mov
adc
or
inc
xor
ja
inc
mov
sbb
dec
or
fistpl
stos
xchg
je
decl
mov
adc
mov
popa
push
xchg
insl
call
enter
in
sbb
xor
mov
inc
pushf
loopne
jnp
add
sti
push
cwtl
xchg
jno
mov
insl
mov
xchg
stos
insl
jo
stc
daa
push
cltd
adc
inc
imul
xor
mov
ret
mov
add
scas
mov
dec
mov
xchg
jb
call
xor
scas
cmp
push
dec
dec
int
inc
inc
sub
push
pop
loope
addl
cs
xchg
or
rep
ljmp
test
jp
mov
jnp
gs
mov
ja
cli
dec
adc
outsb
std
addr16
loopne
or
loop
pushf
rclb
repnz
xor
into
pop
shl
cmp
imul
jp
push
and
in
sbb
jle
xor
repz
movsb
mov
mov
icebp
sahf
mov
ja
cmp
push
outsb
adc
leave
popa
in
mov
adc
ljmp
lret
repz
xor
jnp
cmp
inc
jb
mov
outsl
adc
bound
pop
lahf
or
sbbb
push
repz
rol
adc
pop
sbb
stc
xrelease
mov
sarb
jae
inc
mov
pop
add
ja
jge
xchg
loope
mov
std
call
std
inc
and
cmp
lea
mov
adc
sbb
fwait
nop
jecxz
out
mov
push
pop
mov
adc
sarl
pop
lock
pop
jae
lods
jl
adc
mov
shrl
nop
cmp
nop
cvtps2pi
push
jp
lods
jle
loope
clc
cmp
mov
icebp
mov
push
fsub
xor
div
mov
pop
fildll
inc
lret
popa
jecxz
sbbb
add
lods
and
push
add
je
push
not
jno
jbe
sti
fbstp
lahf
in
and
pop
outsb
imul
mov
xchg
clc
jg
fwait
sub
cmp
les
or
insb
cmp
ljmp
lret
iret
and
mov
push
iret
pop
add
pop
fcompl
popl
mov
lret
jl
lcall
inc
pop
ret
mov
repz
fnstsw
ss
jno
add
or
add
or
call
fadd
pusha
and
xchg
in
sbb
fcompl
sbb
andl
jbe
arpl
arpl
aas
out
call
mov
cmp
enter
out
lods
aad
jmp
or
fxtract
inc
stos
xchg
insb
xor
andb
es
imul
mov
shll
adc
int3
fs
insb
arpl
aad
aaa
push
stos
pop
ss
mov
mov
mov
push
lock
adc
push
xchg
stos
adc
incl
add
add
mov
add
or
xchg
xchg
xchg
jb
repz
stos
push
inc
lock
sti
aad
mov
clc
je
aam
mov
inc
push
mov
es
scas
or
inc
jecxz
pop
int3
hlt
pop
mov
xor
out
xchg
pop
stos
jmp
jmp
nop
ret
pop
jecxz
and
int3
xchg
mov
leave
fnstcw
divb
lock
cmp
stos
xor
inc
gs
pop
adc
and
mov
mov
cmp
dec
leave
pop
in
fstl
jge
hlt
sub
pop
daa
fdivr
cmp
pop
arpl
push
mov
jns
xchg
sub
subl
ret
fisubs
jb
cmp
push
jb
push
push
cltd
mov
or
mov
mov
xor
repz
and
cmp
into
mov
enter
out
jp
xlat
adc
ds
shlb
cmp
lret
int3
dec
es
jge
stos
add
inc
inc
xchg
xor
dec
mov
mov
mov
xchg
cmc
cmp
mov
popl
mov
pop
mov
rcrl
pop
iret
xor
psrlq
cmp
push
movsl
out
std
cmp
jg
enter
mov
mov
ret
shlb
lret
cmp
mov
cwtl
xor
orb
loope
xor
jnp
or
push
pop
movsl
aas
dec
das
int3
je
loop
push
mov
inc
jno
sbb
lcall
xlat
cli
inc
inc
push
inc
sahf
sbb
lea
rclb
movsb
insl
sti
ds
lea
mov
cmp
std
dec
ret
pushf
or
into
mov
dec
sbb
daa
iret
sub
xor
dec
test
xchg
pop
sbb
sahf
xchg
mov
fisubs
cltd
pop
push
dec
adc
gs
inc
ljmp
or
fsubp
xchg
lcall
fldl2e
pop
cltd
je
dec
pop
xor
cli
sub
add
ds
in
mov
pop
xchg
xlat
nop
push
aad
jge
add
aaa
jo
aaa
aam
push
stos
popa
inc
sub
pop
pushf
dec
imul
push
add
cwtl
aaa
cmpsb
imul
or
fnsave
addr16
enter
sub
or
or
jmp
add
les
push
jle
and
cltd
pop
sub
fld1
xor
mov
insb
and
data16
mov
pop
arpl
push
mov
mov
xor
sub
std
insb
or
cs
adc
lods
sahf
or
push
sbb
popf
xor
addr16
leave
lret
ja
xchg
scas
jle
outsb
jge
sahf
or
adc
movsl
lret
add
outsl
js
mov
mov
jne,pt
pop
mov
add
cs
rorb
hlt
in
aad
orb
xchg
popf
cmpsl
xor
cwtl
mov
pop
outsl
test
pusha
fcomps
mov
fidivrs
fadds
mov
add
mov
inc
leave
cmovbe
rorl
push
scas
fsubrs
pop
xchg
mov
rorl
movsb
ja
repz
das
jae
movsl
jae
sbb
es
lret
add
adc
xchg
and
out
in
lea
mov
and
push
test
push
sti
pop
add
inc
xchg
lcall
dec
mov
rorb
mov
out
inc
mov
mov
cmp
lds
mov
mov
aad
sbb
test
test
iret
xchg
in
xor
pop
add
inc
lea
pusha
nop
cli
xor
int3
ret
adc
lds
and
out
aam
adc
jne
enter
test
fldenv
push
stc
xchg
mov
push
iret
popa
xchg
int3
imul
jo
push
sbb
shlb
or
or
dec
rorb
leave
divl
ja
sub
insb
fwait
neg
adc
xlat
pop
stos
ret
sub
mov
xor
lahf
jne
scas
lcall
into
ret
lock
movsb
pop
dec
mov
mov
call
data16
mov
push
test
and
nop
cwtl
iret
fwait
sub
pushf
cmp
stc
mov
pop
sub
or
sbb
lock
inc
mov
hlt
cmpsb
andl
lret
xchg
xchg
sub
addr16
xor
sbb
push
in
pop
mov
lock
pushf
xlat
mov
repz
dec
or
pop
lea
add
xchg
pop
popl
inc
lcall
jo
ss
fmuls
mov
xor
pop
or
mov
fwait
xor
dec
rcrl
test
test
testl
mov
out
push
jne
inc
xor
popa
repz
mov
pop
test
cmpsl
insb
sub
pusha
data16
loopne
pop
jae
and
hlt
pop
mov
int3
jle
shrl
cmpsb
pop
jg
jecxz
xlat
into
lret
fiaddl
add
add
jecxz
or
fcomp
daa
add
leave
incb
sbb
adc
adc
xor
subl
xor
adc
mov
cmp
inc
adc
cmp
arpl
jg
inc
movsb
inc
dec
test
push
fs
cmp
mov
adc
in
xlat
and
sbb
mov
xor
xor
jl
popl
push
sahf
ljmp
dec
pop
mov
cli
sub
push
jo
xchg
xor
mov
imul
push
xor
jae
imul
gs
cmpsl
jp
cmp
stos
fsubrs
xchg
cmpb
out
lods
inc
jl
pop
dec
rclb
pusha
lcall
dec
sbb
jo
push
jg
mov
or
mov
inc
into
pop
das
insl
mov
lds
test
add
cmp
bound
mov
cli
repz
lds
mov
fldt
jnp
mov
push
push
cmpsl
mov
xchg
cmp
aas
adc
mov
popf
sub
jl
cmp
popf
movsl
add
clc
pop
sub
xchg
lods
shlb
mov
mov
push
jns
mov
test
xchg
movsb
lea
lock
dec
mov
cmp
adc
xchg
adcl
repz
xchg
pushw
xchg
push
mov
add
add
popfw
in
lods
xchg
jne
jecxz
jae
cli
andl
roll
mov
sbb
insb
pop
mov
or
ljmp
push
fcos
jl
jge
xchg
daa
into
mov
or
mov
and
lahf
dec
or
lds
inc
jo
fidivrs
xor
cmp
test
jae
loope
adc
imul
mov
fldl
xorl
mov
outsb
mov
lods
pop
dec
xchg
push
stos
rorl
fcmovnbe
inc
imull
mov
mov
pop
push
leave
cmc
jns
xor
mov
inc
cmpb
mov
or
sbbl
dec
and
push
stos
imul
pusha
sahf
shll
or
test
fwait
pusha
loopne
dec
jmp
jmp
and
jbe
cmp
inc
sub
cld
pop
rclb
inc
pop
dec
push
push
lea
jne
inc
aad
inc
stc
daa
addb
outsl
pop
push
mov
cmc
inc
or
add
loope
imul
and
push
push
and
pop
out
dec
or
rorb
lock
jp
mov
aam
addr16
adc
or
es
ja
mov
pop
sub
call
lea
or
lret
movsl
in
js
call
sbb
jle
and
jno
jp
adc
push
stos
push
push
sub
push
pop
xor
xchg
mov
adc
sub
sti
mov
dec
cmp
imul
jmp
test
testb
jecxz
dec
lcall
icebp
mull
mov
xchg
pop
cld
loop
and
test
add
add
or
inc
shrl
loop
fldl
cmp
jnp
push
sbb
mov
add
fisubrl
js
xchg
mov
aad
push
lahf
hlt
jge
cmp
mov
orb
ret
icebp
sbb
adc
movsb
mov
adc
add
in
rorb
or
xchg
lret
int3
and
dec
jg
dec
call
mov
sbb
adc
bound
aaa
movsb
mov
aad
push
inc
xor
rorb
sbb
cli
repz
inc
and
sbbl
ss
int
not
mov
nop
cmpsl
test
into
mov
pop
fidivrs
jnp
inc
sbb
pop
jb
out
mov
fwait
bsf
lret
sahf
mov
mov
sahf
pusha
ljmp
push
push
adc
adc
pop
jo
ret
insb
shll
pop
adc
push
push
arpl
jle
in
aad
sub
js
inc
ds
push
popa
daa
icebp
jecxz
inc
iret
dec
pop
or
pop
mov
out
sub
mov
rclb
cmp
bnd
cmpsb
xchg
sub
jne
dec
mov
std
loop
push
mov
or
shll
dec
repnz
xor
xor
fiadds
clc
add
xlat
rorl
mov
scas
jnp
gs
dec
fisubrl
ja
mov
adc
repz
sbb
lret
popl
xor
push
lret
mov
lods
mov
lds
call
add
add
inc
and
fs
es
inc
xor
and
sub
jmp
imul
in
pop
pop
sub
pop
mov
xchg
sub
jge
sbb
in
jne
rcll
sahf
lods
adc
icebp
and
push
sbb
xorb
xchg
jle
ret
divb
mov
aas
dec
out
mov
mov
movsl
add
orb
add
pop
jecxz
movsb
and
adc
outsb
or
push
mov
pop
fldcw
cmpsl
addr16
movl
push
test
mov
xor
push
push
fs
fmuls
es
pusha
lret
imul
sbb
mov
mov
stos
mov
push
aaa
scas
ret
sbb
jno
into
mov
jbe
mov
mov
repz
mov
inc
test
dec
add
push
jno
mov
add
inc
jbe
cmc
mov
cmpsl
dec
movsb
mov
mov
mov
dec
dec
xchg
inc
mov
mov
jmp
cmp
inc
int
adc
sub
sbb
in
aaa
cli
fxtract
test
sub
sub
lcall
or
enter
out
test
fsubrp
cmp
and
or
daa
sbb
pop
inc
loope
push
loopne
jl
pop
add
and
adc
iret
aaa
pusha
aam
int
mov
call
mov
push
testl
jno
mov
in
sbbb
mov
ret
add
jnp
push
rcrl
inc
lods
cmc
jp
pusha
xchg
div
cmp
xlat
push
add
clc
mov
cli
in
inc
mov
jl
xchg
sar
icebp
lret
aas
jns
cmp
outsl
arpl
addl
outsl
and
jp
sub
push
cmpb
jle
or
lods
les
in
leave
xor
jno
fsubl
lods
sbb
loop
mov
mov
lock
in
inc
adc
popa
mov
je
sub
jb
mov
cwtl
sub
or
mov
lret
loop
mulb
cmpsl
fsubrp
aas
fsts
mov
popf
sbb
push
inc
mov
gs
scas
fnsave
mov
xor
cli
jb
lcall
mov
loope
xor
dec
leave
test
in
mov
hlt
pushf
cld
cmpl
push
sub
aad
and
xor
xchg
adc
inc
xchg
addr16
iret
push
and
xchg
xchg
xor
sub
daa
aam
dec
cmp
ljmp
and
mov
push
xor
cmp
pop
loop
shrb
pop
outsb
bound
and
xchg
pop
bound
sbb
or
fwait
sub
adc
movsb
mov
cmp
lds
psadbw
adc
fsub
add
mov
inc
mov
movsl
les
sarb
dec
in
es
pop
shrl
mov
int3
push
les
popf
push
xchg
into
mov
cmp
outsl
dec
popl
repz
add
imul
ljmp
mov
sub
jo
xor
mov
popa
push
lcall
add
add
xchg
or
mov
scas
lock
outsb
data16
cmc
enter
adc
ss
cmpsb
pusha
and
fmul
pushf
and
push
push
jg
out
push
pop
push
daa
mov
js
xlat
or
adc
loopne
mov
add
mov
cmpsl
lock
mov
fldl
push
stos
xchg
imul
hlt
adc
adc
into
arpl
je
ja
pushf
add
mov
mov
jg
add
cmpsb
rcl
aam
sbb
jno
mov
xchg
or
or
jg
cld
icebp
mov
adc
loopne
sahf
sub
fwait
jb
xor
or
test
fld
push
add
and
jnp
adc
push
push
mov
test
adc
cmp
mov
nop
ja
or
icebp
std
arpl
inc
jbe
push
pop
add
pushfw
and
imul
add
add
or
fmul
fdivr
out
outsl
mov
mov
iret
adcb
bound
jmp
insb
sbb
movsb
in
pop
ficomps
sbb
mov
shrl
xchg
or
js
xchg
add
cltd
outsb
adc
test
or
pop
es
cmpsb
les
mov
mov
xchg
pop
adc
sahf
mov
lods
dec
push
ss
cmpsl
insl
scas
xorb
adc
inc
lds
jle
filds
or
fs
mov
lock
ret
xor
lods
xor
add
data16
scas
sub
lret
aam
sbb
aas
insl
js
pop
sub
das
sub
in
aad
int
int
sbb
cmp
lds
addr16
adc
cmc
and
add
add
dec
sub
fnstcw
xchg
ds
cmpsb
push
shlb
xchg
gs
cmp
inc
outsb
jg
jnp
mov
sbb
cmp
ret
push
mov
push
movsb
xchg
imull
push
jns
xchg
fwait
sbb
faddl
das
lret
iret
testl
push
ds
ror
xor
inc
hlt
xchg
in
popf
cmp
jge
fdiv
jne
outsl
mov
fstpt
ror
lods
and
push
imul
add
dec
cmpsl
test
sbb
mov
and
jle
jp
nop
sbb
dec
add
lret
pop
hlt
cld
push
inc
pushf
loope
iret
fdivl
adc
pop
aaa
xor
into
sbb
testb
xchg
icebp
or
sbb
push
insl
cmpsb
lods
push
inc
sbb
push
dec
jge
dec
jns
imull
cld
jbe
mov
jecxz
xorl
push
jns
inc
inc
add
mov
jo
repnz
lock
stos
shrb
add
prefetch
or
arpl
add
xchg
xlat
negb
or
ljmp
out
pop
jbe
call
mov
in
out
push
mov
jns
mov
push
adc
cmpsl
call
add
add
add
cmp
pop
adc
add
aaa
mov
or
jo
cwtl
loope
mov
pop
xchg
mov
bound
add
pusha
daa
aam
mov
dec
jmp
arpl
rcrb
fucomp
and
jl
push
inc
orl
testl
mov
xor
fmull
xor
inc
jl
daa
int
popa
aas
jnp
jae
pusha
leave
mov
push
test
lcall
scas
pop
push
xchg
dec
jo
imul
sti
inc
bound
inc
into
jecxz
sub
mov
cmpsb
ja
dec
jo
or
popa
daa
es
sbb
movsl
xchg
cmp
aas
and
push
pop
mov
dec
in
xor
int
insb
or
fwait
sub
adc
lret
out
test
gs
xor
call
cmp
adc
out
sbb
je
imul
addr16
shlb
filds
aas
loopne
call
fstpl
fcmovu
leave
pop
scas
inc
mov
mov
jp
cld
stc
xchg
cwtl
lods
loopne
gs
outsl
xor
fistpl
dec
out
popf
mov
fnstsw
out
mov
mov
stos
mov
inc
aaa
cmp
cltd
test
fs
jecxz
jb
sbb
testl
adc
or
bound
ss
mov
test
lcall
xorl
and
cli
js
les
cmpsl
and
sbb
rcrb
xchg
aam
mov
push
lds
xor
mull
mov
cmp
dec
sarb
clc
insl
xchg
in
pop
mov
xor
mov
imul
jo
xchg
xchg
lcall
xchg
dec
xchg
repz
mov
out
test
sub
xor
mov
sbb
scas
hlt
push
push
iret
leave
sub
mov
pop
imul
jnp
cs
or
lock
cmp
push
or
push
repnz
add
notb
in
pusha
sarl
mov
sahf
cli
mov
jne
test
push
mov
cli
lret
mov
mov
mov
movsb
movsl
and
shl
dec
mov
mov
stos
lcall
mov
mov
jnp
fwait
sbb
loop
jo
push
pop
loop
mov
mov
or
add
add
mov
enter
mov
pop
dec
mov
add
shll
call
push
cmc
sub
push
mov
mov
and
out
sub
push
repz
push
jne
and
das
inc
sub
test
cmp
xchg
ret
mov
add
cwtl
jmp
inc
adc
xchg
lock
mov
or
or
pshufw
add
add
sahf
inc
adc
mov
inc
sbb
rolb
adc
inc
pushw
add
add
add
lock
fidivrl
ljmp
imull
xchg
adc
aam
ljmp
inc
jbe
inc
xor
dec
test
loop
inc
push
xor
and
popf
les
popf
cmp
and
data16
inc
push
add
cmpl
xor
incb
mov
push
movsb
data16
jle
add
sub
notb
mov
add
pop
jns
pop
call
mov
scas
fbld
pop
mov
mov
sbb
test
arpl
rcl
adc
sub
sub
jae
jl
mov
sub
mov
or
in
call
dec
xor
loopne
pop
lds
loope
jae
fldt
cltd
test
mov
cmpsb
xor
xchg
aad
xchg
test
mov
push
jbe
push
xor
insb
std
adc
clc
add
fwait
ret
xor
pop
xor
inc
push
pop
outsb
mov
lret
jl
sti
or
cmp
scas
mov
add
fsubr
and
lea
int3
cmp
cld
or
xor
add
add
cmpsb
cmpsl
sub
add
xor
adcl
mov
test
call
shlb
movsb
mov
mov
or
rorl
sahf
js
push
mov
scas
insl
xor
push
addb
jo
sbb
stos
popa
dec
sub
sub
orb
mov
xor
js
loope
xor
cmp
gs
push
xchg
lret
dec
stos
dec
mov
out
cmpsl
rcrl
gs
push
shl
and
mov
dec
pop
arpl
jmp
jbe
outsl
adc
cmp
ljmp
clc
ss
outsl
fnop
sbb
or
or
jle
pop
jb
inc
int3
push
iret
call
jno
jge
stos
or
add
pop
pop
cmc
cmpsb
inc
cmp
popa
adcb
movsl
negb
sti
inc
lds
fistps
lahf
ret
out
aas
inc
cmp
in
addb
add
push
xor
divb
xorb
pop
es
jg
inc
loopne
dec
mov
stos
loop
lods
mov
pop
nop
sahf
stos
fistl
sbb
outsb
cmp
mov
fcompl
mov
pop
pop
jp
icebp
sub
leave
mov
xor
xchg
stc
add
test
aaa
pop
scas
and
imul
out
call
lock
gs
xor
xchg
sbb
sub
lret
xor
dec
or
std
addl
call
add
scas
inc
pop
icebp
sub
mov
xchg
fwait
xchg
fld
pop
sbb
pop
dec
aad
and
insb
mov
xor
pop
cltd
mov
sbb
jmp
ja
ret
les
repz
or
jg
icebp
pop
mov
ret
sbb
or
sub
cmp
icebp
cmp
int
add
xorl
mov
push
and
sbb
mov
mov
sub
leave
pop
lret
adc
lahf
cltd
pop
popf
mov
stos
dec
les
mov
mov
xor
jb
je
add
sub
mov
std
das
das
fcomi
clc
push
das
mov
loopne
loopne
popa
repnz
xor
jge
shrl
sti
add
lsl
aam
cmp
popf
jb
pop
jno
xchg
dec
rolb
pushf
aaa
addr16
xor
xchg
orl
push
dec
or
lods
scas
andl
fsubl
aad
sub
push
faddl
rol
movsb
cld
sbb
imul
ja
and
adc
mov
std
push
pop
add
xchg
mov
psraw
jo
sub
add
addb
sbb
stc
lds
pop
scas
pop
idivb
leave
mov
adc
push
sbb
popf
gs
xchg
dec
jnp
mov
cld
aaa
mov
fidivl
cmp
fiaddl
mov
aaa
scas
pop
or
adc
mov
mov
sbb
and
enter
hlt
or
xchg
mov
pop
xchg
pop
out
adc
pop
sbb
int
filds
mov
outsl
test
rcrl
cmp
ljmp
test
cli
pop
xchg
addr16
sub
add
cmp
ljmp
in
add
fidivl
and
mov
inc
in
lock
adc
hlt
aaa
sub
jmp
mov
pop
and
sub
mov
lods
jne
std
lret
push
inc
dec
mov
xchg
mov
inc
mov
pop
push
mov
call
je
gs
jo
mov
bound
xlat
out
cltd
push
mov
jo
jmp
cli
cmp
add
adc
shl
cmp
testl
dec
cmp
mov
popa
push
sub
xor
push
outsl
bound
data16
jae
or
xchg
xchg
cwtl
imul
in
jnp
sbb
lods
and
mov
cs
fsts
xchg
in
fs
lods
loop
mov
inc
jg
addr16
jle
or
nop
jno
xor
divb
inc
outsl
cmp
sahf
pop
out
and
aad
cwtl
cs
xorl
adc
push
and
and
jne
movsl
xor
imul
mul
inc
loope
movsl
cmp
repz
mov
jle
cs
push
sbb
jle
mov
gs
push
int3
mov
fildll
mov
cmp
jb
out
negb
jbe
pop
pop
mov
sub
sti
into
std
cmp
add
add
xor
insl
loope
out
movsb
sub
sbb
push
cmp
dec
add
add
inc
xor
fsubrs
imul
sbb
xchg
ds
xchg
ja
stos
push
out
fisttps
pop
aas
ret
jp
pop
popa
cmp
mov
aad
lret
cmp
outsb
xchg
push
xor
mov
movsb
lret
bound
pop
rcl
lahf
call
xor
adc
pop
xchg
insl
pop
pop
dec
xor
pushf
mov
movsb
jge
mov
push
cli
dec
ficoms
xor
add
sbb
add
push
adc
or
std
push
fidivl
pop
sbb
pop
das
inc
testl
or
push
cmpsl
out
xchg
movsb
arpl
faddl
les
and
sub
pop
cwtl
pop
loopne
out
sti
and
fs
sbb
notl
icebp
shll
cs
movsb
jge
dec
lds
faddp
or
cmp
aam
inc
lcall
mov
sbb
jnp
int
and
and
xor
leave
jecxz
inc
mov
es
push
jp
hlt
lea
pop
mov
in
lea
loope
mov
or
dec
jb
ljmp
sub
sbb
jl
aas
xorl
push
add
add
ret
sub
add
shrb
and
ljmp
jmp
pop
fnstsw
enter
push
jle
sub
test
jbe
scas
adc
jb
enter
shrl
mov
out
loopne
add
mov
sbb
mov
clc
aaa
push
pop
cmpsb
xor
dec
setl
clc
in
scas
jo
xchg
push
xor
add
mov
sub
adc
pop
icebp
add
jb
push
dec
xchg
sarb
mov
ret
push
jp
inc
jmp
stos
ljmp
outsl
jns
or
mov
jne
mov
negb
jae
push
int
adc
sub
popa
dec
jle
cld
pop
add
pop
mov
mov
aam
pushf
push
add
ss
andl
push
mov
in
iret
jbe
pop
shrl
add
icebp
std
movsl
or
mov
bound
lock
push
xchg
cltd
test
or
jae
fwait
pushf
push
lock
in
jnp
movsb
sbb
add
add
lods
inc
mov
hlt
pop
pop
dec
mov
add
and
jmp
push
outsl
lods
roll
xchg
xor
xchg
mov
ss
icebp
mov
cmp
sub
pop
jmp
test
sbb
dec
jns
pop
mov
mov
aam
rorb
fsts
incl
push
or
mov
fdivl
ljmp
or
ret
sarb
adc
adc
or
jbe
int3
addr16
cmpsb
inc
sub
dec
adc
loopne
iretw
test
jge
xor
pop
stc
sub
cli
sub
dec
push
mov
jae
shlb
shll
loop
add
cli
fsub
lcall
mov
dec
out
jns
hlt
push
cmp
inc
into
push
movsb
jo
dec
test
jecxz
rcr
xchg
addl
mov
adc
mov
inc
fdivs
fisttpl
sub
jecxz
xlat
xchg
inc
es
lea
test
and
or
repz
cli
insl
mov
out
in
lds
mov
test
clc
and
dec
ror
stos
lea
sbb
pop
mov
in
loop
cmp
xor
xchg
mov
loopne
push
and
or
inc
nop
add
cli
aam
xchg
in
xchg
xorl
inc
cmc
aas
push
in
enter
in
add
inc
data16
jne
push
dec
dec
mov
inc
xor
push
lret
test
pop
wrmsr
daa
mov
sbb
je
inc
andb
xor
shrl
ds
inc
push
lahf
ucomiss
pop
scas
sbb
xchg
outsl
ljmp
mov
inc
add
push
mov
ret
mov
int3
pushf
push
mov
aad
pop
in
jmp
xlat
loopne
adc
xor
lret
sub
inc
dec
mov
dec
dec
les
scas
lret
or
mov
push
je
jo
call
stos
sub
sar
scas
in
sbb
jbe
test
add
hlt
mov
insb
xchg
outsb
add
pushf
xor
jae
adc
jge
outsl
inc
outsl
inc
adc
xchg
cmpsl
xlat
inc
jae
lret
mov
jne
mov
stos
outsl
or
mov
lret
and
stos
call
call
and
and
inc
mov
adc
push
stc
mov
and
fwait
subb
addr16
mov
add
mov
mov
sahf
push
xor
movsl
aam
cmpsb
cmp
rcrb
lods
jns
fcompl
and
adc
add
adc
adc
sub
fdivr
aaa
mov
mov
mov
sti
lods
pusha
dec
jbe
aam
pop
mov
mov
sub
lds
ss
pop
cmp
add
jb
and
pop
jge
fwait
mov
mov
pop
scas
mov
add
and
cmp
lret
cmp
mov
out
cs
lock
fildl
outsl
bound
and
aad
push
gs
fidivl
cmpsb
mov
mov
into
daa
push
ja
repz
adc
mov
xchg
ds
out
int
std
leave
clc
incl
lock
cmp
outsl
sbb
jge
adc
cmc
pop
xor
mov
lds
out
xchg
loope
test
xorl
js
imul
push
xchg
nop
ret
movsb
lahf
in
and
fisubrl
cmp
or
ljmp
testl
mov
push
and
pop
xlat
mov
or
lahf
jns
dec
pop
dec
xchg
ret
cmp
sub
popa
rclb
aaa
leave
pop
push
xchg
repnz
mov
pushl
cmpsb
adc
loope
sbb
movsl
mov
xchg
mov
imul
aaa
cmp
faddl
shr
lret
mov
lods
push
mov
cwtl
xchg
out
lret
aam
movsb
inc
repz
popl
lret
inc
repnz
cmpsl
mov
and
cmp
notl
into
cmpsl
test
inc
loop
cs
xorl
fcompl
push
cmp
repnz
clc
and
mov
xchg
movsl
pop
inc
mov
in
ret
aaa
lret
out
push
lcall
add
sbb
sbb
insb
xchg
jb
int
cmp
out
mov
roll
fiaddl
add
add
mov
rorb
xorl
mov
lods
mov
ds
xchg
mov
dec
dec
jp
test
dec
out
movsb
add
int3
jmp
mov
mov
dec
jge
cmp
daa
mov
fsubs
mov
arpl
mov
pop
dec
inc
xchg
sub
mov
push
and
push
rol
push
repnz
xchg
stos
gs
je
bound
rcr
push
xchg
mov
inc
add
lods
sti
mov
stos
jl
das
xor
out
mov
pop
xor
mov
jo
xor
mov
incb
push
adc
push
xor
fcomp
sahf
insl
movsb
and
rcrb
adc
inc
cmpsl
mov
scas
loop
inc
pusha
jnp
mov
insl
xor
pop
xchg
clc
sti
sub
test
xor
filds
cmp
subl
xchg
sbb
dec
or
xchg
push
movsb
sahf
push
dec
pop
and
mov
xchg
xchg
outsl
dec
not
loope
add
ficoml
gs
mov
jmp
int
push
jnp
push
lahf
lods
cmp
rcll
addr16
outsb
cmp
push
or
imul
or
pop
dec
mov
fsubl
pop
jbe
imull
jno
loope
pop
scas
stc
add
adc
jmp
pusha
mov
into
inc
push
or
pop
mov
jnp
push
push
mov
dec
subb
push
and
cs
sbb
inc
sbb
loop
in
mov
fmul
out
test
push
pop
mov
imul
daa
clc
sub
push
das
adc
mov
fnsave
adc
push
push
push
leave
cli
jno
sahf
xchg
int
bound
dec
push
out
int
out
lret
aaa
out
fsubrl
xchg
negb
mov
loopne
ret
inc
out
loope
dec
or
cltd
iret
and
rcrb
lods
les
lock
pop
clc
jo
push
into
rcrl
out
aam
cmpb
gs
outsb
in
scas
sahf
aam
add
add
cmp
xorb
sbb
out
sbb
push
lock
jmp
in
sub
push
ret
cmpsl
jnp
cld
loope
dec
aam
sbb
adc
or
outsb
nop
nop
pop
neg
imul
pop
jb
out
jp
xchg
fwait
sub
idivl
ret
mov
mov
sahf
adc
pop
sub
sub
add
lret
fmull
mov
jae
in
orb
cmp
bound
push
mov
nop
fnstsw
or
dec
or
lret
xchg
shlb
add
add
repz
std
xor
nop
fstl
pop
fadds
negl
adc
mov
sub
nop
sahf
cli
out
jle
mov
out
lret
or
add
loope
mov
mov
xchg
xchg
fisttpl
xchg
cmpsl
pop
outsl
pop
cld
mov
fs
push
rolb
shll
mov
popf
cmp
cli
push
imul
jns
imul
addr16
mov
imul
xor
mov
push
dec
and
and
xchg
xor
add
jmp
xchg
push
test
mov
cmp
mov
dec
add
enter
lret
push
lea
and
xor
push
adc
sbb
cwtl
xor
mov
pop
das
cmpsl
int
in
insb
push
iret
lcall
mov
add
add
inc
cmp
pop
xchg
sahf
adc
xor
sub
add
add
push
repz
scas
xchg
pushf
add
cld
jmp
into
inc
and
dec
pop
jb
fmull
pop
and
mov
push
xchg
sub
fisttpll
loopne
and
lea
shr
push
movsl
mov
iret
outsb
sbb
loope
test
adc
js
stos
and
shr
push
movsb
test
jne
mov
rcll
ret
clc
and
nop
popf
scas
cli
or
aam
int3
popa
lock
xor
in
pop
aas
je
pop
mov
jbe
dec
dec
mov
movsl
fisubrs
fildl
add
xor
lods
cs
std
fsts
adc
jnp
aam
and
clc
shl
jne
repnz
lods
adc
imul
leave
mov
sti
or
mov
push
mov
mov
cli
cmpb
shlb
xor
xchg
and
cmp
int
pop
xchg
xor
mov
sub
pop
test
cmpsl
jne
sbb
int
data16
jle
mov
dec
mov
lcall
je
aaa
je
cmp
xlat
in
mov
push
ljmp
int3
lods
shll
mov
cltd
add
loope
pop
cmp
std
mov
dec
add
pop
or
mov
cli
cli
aaa
xchg
xchg
push
ss
or
bound
ds
mov
or
adc
push
push
jb
and
les
add
jp
xchg
xor
leave
xchg
mov
sub
mov
stc
lds
jmp
fs
aam
mov
pop
jae
inc
mov
jp
inc
or
movl
add
or
aas
test
and
add
movsl
arpl
mov
lahf
je
loope
popf
jnp
push
pop
in
mov
or
pop
sarb
pop
gs
adc
push
aad
inc
push
sub
xor
ljmp
js
pop
stc
mov
add
add
inc
movsl
xor
rdtsc
lods
shrb
imulb
lahf
lods
or
inc
adc
mov
roll
dec
lea
popa
cmp
adc
add
add
or
inc
mov
pushf
repz
out
ja
push
in
icebp
fldlg2
sbb
push
loop
popf
sbb
in
dec
sti
pop
in
and
cmpsl
sbb
add
pop
mov
fwait
mov
sub
loop
xchg
mov
mov
je
popf
mov
jmp
pop
adc
sarb
push
aam
les
hlt
mov
into
test
fnstenv
inc
stc
adc
test
arpl
nop
jg
sub
xor
js
cmp
fnstsw
pop
out
push
inc
incl
outsb
mov
or
stc
xchg
fs
incb
sub
aas
mov
repnz
jne
mov
lea
insb
out
popf
fsubrl
adc
adc
in
aaa
add
xchg
call
int
pop
xlat
jp
mov
xchg
jns
pop
arpl
mov
out
inc
scas
es
dec
or
jecxz
movsb
imul
add
and
and
mov
push
dec
loop
cmp
or
mov
icebp
mov
pop
in
bound
xor
or
fdivl
pop
push
jne
out
push
or
sbb
sub
out
pop
xchg
lcall
aam
sub
sub
ficoms
mov
xchg
outsl
xchg
mov
cmovp
xor
push
js
dec
int3
aam
fisubl
rcrb
xlat
xlat
rcl
lcall
int3
sub
sbb
mov
out
shll
sbb
popf
loop
test
cmp
jmp
das
cmp
xor
pusha
mov
inc
test
add
add
loop
mov
mov
mov
shll
loop
mov
xlat
subb
out
jns
jne
pop
hlt
lcall
push
and
add
addr16
push
xor
mov
out
or
sbb
les
adc
int
sbb
push
mov
mov
sbb
pop
dec
cmp
mov
clc
lret
fmull
adc
cmp
or
movups
cltd
mov
testb
lds
mov
mov
adc
lods
leave
push
lods
xor
or
cmpsl
lret
pop
insl
imul
mov
cld
in
testb
push
in
jne
mov
push
leave
jp
add
inc
cli
jmp
add
mov
jmp
mov
scas
pop
sahf
mov
pop
pop
insl
cmpsb
cmp
jbe
std
pop
or
mov
jne
lea
pop
mov
xchg
call
jae
dec
ljmp
mov
xchg
xchg
adc
loopne
lock
test
ss
flds
stc
add
mov
clc
sbb
add
xchg
and
fadd
push
add
loope
mov
lods
enter
push
rol
pop
lcall
call
push
xor
jecxz
mov
fmull
fldt
bsr
imul
mov
mov
in
xor
jp
popl
xor
movups
stos
pop
or
adc
push
pop
cmpsw
sbb
dec
jl
mov
push
sbb
xor
jno
pop
je
or
add
add
mov
sbb
cmpl
or
inc
adc
repnz
sub
jb
fcomps
jne
mov
ljmp
pusha
pop
jg
inc
xor
adc
shlb
inc
js
and
dec
sbb
cmp
pop
ret
bound
push
aaa
push
xchg
cwtl
cltd
sti
insl
out
adc
stos
sub
sbb
mov
mov
dec
add
test
in
repz
fists
stos
sub
test
or
fdivp
mov
ror
ret
jle
test
int
xlat
mov
aad
mov
ud0
pop
xchg
out
lock
std
cmc
ss
aaa
push
leave
lock
rclb
mov
adc
aas
cmp
mov
and
pop
pop
cmc
sbb
add
add
add
sub
cmp
adc
and
pop
fsubrs
clc
xor
push
push
addl
stc
cmp
in
add
add
aad
mov
aam
push
fimull
rcr
sbb
add
cld
pop
test
and
mov
test
and
mov
xchg
jg
cltd
mov
cltd
mov
shlb
int3
fstps
ret
dec
add
rcr
jae
or
push
out
and
popa
and
fsubr
push
mov
popf
adcl
adc
lock
mov
xor
fs
lods
cld
or
mov
and
mov
pop
int3
cmovbe
mov
cmpsl
push
and
lea
add
add
scas
or
mov
lcall
jb
cli
mov
in
adc
insb
pop
adc
cmp
lahf
push
or
xchg
jne
call
les
push
cmp
stc
push
enter
clc
xchg
cmp
xchg
stc
leave
cmp
xchg
mov
mov
es
sbb
js
inc
cmc
push
cmp
pop
jns
dec
mov
jmp
jns
jb
insb
fmulp
imul
shlb
xchg
mulb
mov
jle
repz
inc
fistpll
sbbb
mov
out
nop
dec
testl
shrl
xchg
jl
xchg
cli
xchg
cmp
repz
pop
in
in
scas
test
sub
and
sbb
aad
ret
mov
pop
sub
mov
xchg
fsubs
les
inc
in
cmp
and
sarl
or
xchg
push
add
add
mov
cld
dec
push
xchg
cwtl
sti
orb
ffree
bound
jp
adc
shl
xor
ret
lock
addr16
loope
lods
mov
and
dec
insb
mov
dec
inc
outsl
repnz
test
lds
gs
fidivs
divl
sub
mov
mov
add
add
rorb
adc
push
enter
ljmp
mov
movsl
pop
pushf
pop
xor
inc
dec
mov
iret
adc
inc
cmp
loop
movsl
rcr
mov
cld
mov
push
mov
cmp
mov
in
jo
pop
in
pop
cmp
push
nop
in
sbb
aad
mov
std
sub
cmp
sbb
hlt
xchg
in
test
gs
mov
xchg
movl
jae
cli
cmpsl
pop
repz
gs
ljmp
pop
repnz
mov
call
pop
jb
ss
cltd
push
jne
sub
sbb
or
mov
cli
adc
or
pop
lret
and
shl
push
ja
fnsetpm(287
stos
push
push
push
push
out
scas
rorl
mov
fists
into
dec
and
jb
push
adc
aaa
sub
out
stos
in
jae
xlat
je
inc
imul
icebp
jb
clc
cmp
sar
and
dec
or
loopne
mov
nop
mov
ljmp
pop
jns
sub
cli
and
push
xor
movsl
iret
mov
clc
shl
sbb
es
cmpsl
add
adc
je
fwait
test
dec
ss
jp
cmc
fwait
dec
insb
sbb
xchg
sbb
pop
cmp
stos
fists
push
push
pop
lcall
jno
inc
cmp
jnp
out
push
xchg
adc
cmp
xchg
sbb
pusha
repnz
and
jl
cmp
mov
out
addr16
shlb
je
subl
data16
sbb
stos
dec
pop
pop
adc
add
in
jecxz
outsb
and
fistpll
sbb
push
scas
mov
jmp
lods
inc
and
cmp
and
cmp
cmp
loop
dec
fsubrl
push
sbb
push
inc
sbb
inc
cltd
fistl
iret
cli
add
inc
scas
dec
movsb
dec
das
sbbl
lods
sti
sbb
adc
inc
int
cmc
mov
cli
out
jmp
rcrl
and
dec
ret
inc
xor
mov
add
mov
imul
mov
or
mov
add
or
enter
mov
mov
imul
xchg
adc
std
jbe
or
shl
hlt
out
jbe
jmp
dec
or
call
bound
jbe
cmp
ds
es
xlat
cld
scas
shr
ds
add
insl
add
jnp
sub
cmp
stc
inc
dec
lock
add
push
lock
gs
fcomps
insl
in
shlb
sarl
fwait
inc
aas
push
loope
add
add
popa
jp
push
lods
mov
push
or
lods
push
es
jmp
add
add
pop
gs
cmpsb
insl
iret
lds
add
cmc
loop
and
pusha
jmp
ret
pop
ja
fdivr
push
leave
cld
xor
ret
mov
out
push
jo
mov
jbe
lock
outsb
pop
js
outsl
mov
into
mov
jmp
fistpll
aas
fwait
mov
sbbb
jge
ret
sbbl
insb
rcr
push
out
ss
fmulp
cmp
cmp
inc
mov
cs
mov
and
xor
fs
mov
cmc
jp
loopne
ljmp
repz
test
loop
mov
add
mov
pop
stos
sbb
pop
lret
test
add
mov
dec
lahf
inc
mov
nop
popa
repnz
cwtl
xchg
loope
push
lds
push
cmpl
adc
jb
adc
adc
dec
imul
hlt
mov
and
mov
pop
data16
ret
jp
xchg
icebp
popf
fsts
outsl
push
inc
or
mov
ja
push
sbb
aaa
lods
mov
push
js
pop
cs
ror
aad
pop
mov
mov
sub
hlt
pop
and
lret
jmp
jns
xor
sub
add
xchg
rcr
jecxz
lods
dec
xorl
push
add
pushf
sub
dec
outsl
inc
shlb
xor
cmpb
addr16
shr
lcall
daa
mov
adc
ds
cwtl
scas
jge
lods
cltd
int3
ror
iret
xlat
out
fcomps
sub
bound
xchg
lahf
das
add
xor
xor
add
add
int3
ljmp
out
add
add
jnp
dec
dec
cwtl
inc
addr16
mov
xchg
loopne
push
mov
xchg
lods
das
pop
sub
xor
rcll
repnz
fnstsw
pop
jne
insl
cmp
lods
cmp
sub
daa
pop
data16
lahf
mov
push
movsl
in
inc
stos
in
or
cwtl
dec
and
sbb
sbb
scas
and
ret
cmc
outsb
pushf
pop
test
fcomps
jge
subb
lret
push
jge
inc
fcoms
mov
std
aas
cmpl
mov
dec
inc
adc
cmpsl
mov
loop
mov
cwtl
movsb
fmuls
mov
orb
push
mov
xor
scas
lahf
ret
push
push
inc
shlb
mov
and
and
mov
mov
mov
inc
mov
hlt
add
cmpb
stc
out
mov
mov
xor
test
add
inc
sub
dec
xor
cmc
nop
and
xchg
rcl
pop
into
mov
in
jae
cmp
xchg
in
loopne
or
mov
push
loop
pop
mov
adc
jmp
stc
dec
inc
mov
mov
or
add
add
out
sub
push
xor
or
into
sbb
shrl
xchg
hlt
mov
popa
add
lods
gs
hlt
jg
mov
mov
faddl
add
add
mov
xor
mov
cwtl
sbb
push
fcompl
out
out
insb
add
loop
fsubrl
add
add
out
stos
fcmove
xchg
add
jne
add
mov
add
add
notl
inc
sahf
out
mov
jbe
movsl
daa
jae
inc
js
jnp
fucomi
push
scas
pushf
inc
adc
sahf
mov
xor
mov
xor
jbe
aad
push
out
imul
mov
xor
fadd
popf
jecxz
in
enter
jbe
popf
xor
jmp
shll
test
arpl
shll
jl
pop
ja
ss
inc
mov
jge
addr16
sbb
movsl
mov
push
jmp
push
enter
cmp
inc
push
mov
iret
or
aas
add
int3
lahf
fwait
ret
fcmove
push
nop
fisttpll
jmp
jmp
pushf
imul
rcrl
sub
test
in
sub
add
das
add
pop
shll
test
pop
cli
sub
and
test
ss
lret
lret
outsb
mov
imul
cmp
stos
nop
popa
scas
lock
ljmp
imul
sbb
mov
stc
daa
stc
inc
rcrl
pop
or
aam
sub
ljmp
push
orb
aam
lcall
sub
pop
jo
push
shlb
dec
aaa
fists
add
lahf
mov
notl
pop
inc
imul
xchg
arpl
dec
adc
sub
add
mov
mov
out
lea
loope
push
fcomps
andl
adc
insb
push
sbb
pop
movsl
push
and
xor
je
mov
out
push
add
cmpb
jbe
dec
xor
ja
mov
ja
sub
and
or
dec
int
shlb
xor
cmp
cs
aad
lcall
jecxz
jp
mov
enter
jo
insb
aaa
sub
ret
shlb
mov
fnstcw
movsb
shlb
sbb
pop
aas
les
pop
sub
rclb
dec
xchg
mov
dec
mov
fisttps
mov
fidivrs
jns
lcall
xor
push
in
push
lahf
xchg
pop
scas
push
adc
movsb
pop
aaa
and
subb
xchg
cmp
lods
testb
push
dec
and
cwtl
shr
rcll
jo,pt
mov
adc
cs
ret
enter
addl
lods
hlt
mov
jae
and
test
es
das
inc
push
mov
bound
mov
ja
dec
in
pop
repnz
and
push
cs
insb
sar
add
mov
mov
fstps
sbb
fs
or
cmp
imul
jg
dec
push
jmp
sbb
addr16
push
faddl
add
add
pop
push
mov
xor
leave
call
jmp
pop
adc
sti
cmp
pop
call
pop
mov
stos
inc
inc
xor
imul
lods
mov
or
outsl
js
push
xchg
cmp
jge
jnp
sbbb
loop
rcrb
fistps
mov
stc
xor
add
add
int
add
cmp
cmpsb
inc
xchg
test
loope
repz
adc
mov
add
dec
xor
jmp
lods
pop
jne
cld
mov
pop
mov
out
mov
mov
rcr
and
jecxz
xor
jno
mov
sbb
dec
dec
pop
xchg
push
lea
out
mov
sar
dec
push
mov
push
dec
add
inc
pop
adc
mov
ss
lahf
js
xchg
dec
scas
out
bound
add
add
stos
dec
and
sbb
push
mov
xor
xchg
sub
sahf
sub
xchg
stos
jle
pop
out
or
loop
nop
sub
add
xor
std
inc
mov
outsl
test
push
inc
mov
push
out
sbbl
insb
and
dec
pop
mov
mov
and
mov
mov
imul
inc
jge
test
hlt
mov
jmp
sub
and
xchg
mov
bnd
ficompl
xchg
mov
adc
mulb
out
iret
add
lret
lahf
inc
addr16
mov
stos
sub
sti
lret
stos
repz
jmp
jle
in
sahf
mov
cli
sub
pushw
fdivrs
dec
inc
xor
call
sub
mov
pop
es
mov
cmpsb
test
add
shl
rorb
aas
pop
add
repz
and
fwait
jne
into
xor
je
stc
push
push
das
in
imul
mov
ficompl
push
aas
daa
mov
xchg
gs
lock
cmp
push
mov
stc
popf
arpl
mov
push
and
lret
sub
test
mov
or
sub
jb
mov
jnp
cmp
push
xor
cmpsb
fmul
shl
push
hlt
insb
stc
sahf
popf
xchg
outsl
fsubrs
pushf
add
decl
fdivrs
loopne
andl
lret
cmpsb
mov
in
std
mov
cmp
repz
imul
lds
scas
les
stos
cmp
loop
cmp
rorl
orb
add
or
push
outsl
jno
mov
push
jnp
mov
mov
fistpll
dec
testb
inc
insl
and
sti
add
mov
lcall
adc
out
popa
fildl
xor
pop
inc
leave
push
loop
jne
and
and
das
lock
addr16
push
out
dec
xlat
push
cltd
cmp
dec
imul
call
push
out
jns
inc
adc
pop
ja
push
sub
ror
in
push
scas
push
addb
or
jno
push
in
xchg
inc
icebp
jne
ja
fimull
pop
mov
pusha
xchg
adc
xchg
adcl
sub
pop
dec
scas
ss
popf
and
add
in
sbb
je
inc
aad
aaa
ds
fldenv
leave
movsb
xchg
inc
movsl
loopne
and
test
sub
ss
dec
or
mov
cs
adc
fwait
inc
scas
loopne
xchg
inc
and
test
push
iret
imull
in
jl
sub
push
sar
or
andl
scas
inc
enter
xchg
stos
stc
xchg
imul
ret
adc
add
xchg
movsb
pop
hlt
int3
jbe
mov
bound
mov
mov
testl
sbb
sahf
push
test
cwtl
inc
aas
sahf
cs
push
mov
pushf
mov
iret
test
call
push
ja
rcrl
xor
sub
xchg
hlt
mov
jecxz
nop
in
flds
xchg
add
rolb
sbb
dec
sub
inc
addr16
fistps
or
loope
fdivp
aad
hlt
leave
enter
jae
iret
pop
and
stc
fcomps
fnstsw
pop
mov
in
xor
ret
test
or
mov
xor
fdivrs
pop
adc
push
or
push
lcall
insb
mov
and
ljmp
imul
lret
push
shrb
loope
test
cmp
push
call
inc
cld
lods
fcompl
movsl
loope
add
je
addb
jecxz
into
or
adcl
push
inc
cli
clc
cmp
pushf
or
push
xor
mov
loop
fisubrl
sbb
mov
test
mov
out
and
in
insb
xchg
jnp
sub
push
or
sarb
arpl
push
push
cmp
pop
cmp
sbb
ret
aas
mov
je
push
mov
iret
pop
xchg
jnp
push
or
imul
mov
fmul
negl
dec
fidivrs
sbb
add
mov
out
jns
imul
push
dec
popa
sub
test
adc
fndisi(8087
pop
jmp
faddp
mov
push
push
sbb
push
fs
mov
mov
jecxz
ja
imull
mov
in
outsb
cld
and
or
adc
repz
ja
dec
xor
xor
pop
loope
ror
push
add
outsb
pop
insb
fs
lods
mov
and
add
pop
outsb
sbb
add
jns
pop
mov
pop
pop
hlt
stos
cmp
mov
mov
bswap
add
testl
inc
adc
loope
lcall
xor
popf
movsl
aas
adc
pop
push
test
rclb
sbb
dec
notb
out
loop
enter
das
inc
mov
pop
xchg
sub
dec
or
sbb
outsb
and
incb
fidivs
bnd
dec
jg
fwait
pusha
lret
movsb
push
mov
scas
pop
and
icebp
fstps
imul
jb
testb
jmp
or
jb
imul
aad
and
mov
inc
mov
out
push
ret
cwtl
inc
sbb
xchg
rcrb
dec
ljmp
daa
pop
add
xchg
dec
lcall
shll
xrelease
and
cwtl
popa
push
ljmp
test
pop
int
or
imul
jl
pop
sbb
iret
or
add
add
xor
outsb
push
mov
jne
es
mov
rcrb
in
movsl
stc
mov
ds
outsl
outsb
addl
out
jge
push
mov
xchg
mov
mov
fstpl
popf
pop
lcall
sbb
adc
mov
add
mov
mov
mov
push
arpl
add
add
add
jmp
mov
aas
mov
inc
and
leave
dec
xchg
fsts
stc
sub
mov
cs
dec
loop
sub
or
push
faddp
jmp
shll
sarb
push
adc
add
add
lret
orb
inc
test
jp
xchg
sub
xor
adc
jl
dec
int
aaa
outsl
cmpsb
test
sti
xchg
lds
mov
icebp
dec
fs
stos
mov
xor
outsl
sarl
test
nop
mov
sbb
adc
cmp
aad
in
cmp
jp
divb
stos
insl
clc
xchg
push
push
mov
sub
int
inc
fucomip
nop
insb
mov
movsl
ja
xchg
cmp
cmp
cmpsb
add
push
incb
out
xchg
and
push
sti
repnz
sub
aad
cmpsb
and
and
je
inc
push
cs
stc
and
fdivs
out
xorb
das
je
rorl
cmpsl
addb
pop
pop
lcall
inc
dec
add
js
aam
or
mov
std
push
mov
push
addb
add
and
mov
push
imul
inc
jno
xor
inc
out
fs
mov
push
mov
stos
xchg
imul
idiv
test
and
cmp
xchg
and
jle
lret
jecxz
sbb
and
cli
or
cmp
sbb
scas
loop
test
sahf
xor
xor
jg
push
dec
mov
xchg
mov
mov
mov
add
and
cmp
lcall
out
add
dec
cmc
mov
insb
cld
or
jns
inc
ret
jnp
test
hlt
sub
aad
sbb
mov
mov
leave
cmpsb
and
push
fstpl
leave
adc
scas
dec
sbb
xor
ret
or
fbstp
dec
aam
fimuls
mov
nop
fcompl
enter
scas
dec
icebp
inc
inc
out
push
xor
mov
jne
lea
cltd
mov
movsb
and
dec
ret
cmc
aam
das
push
call
leave
fisttpl
repnz
or
int
es
in
inc
dec
mov
mov
in
inc
cmp
push
push
sbb
pop
js
adc
js
xchg
fimull
jae
xor
fadds
lcall
fcoms
sub
add
in
or
mov
push
bound
pop
hlt
xchg
mov
lahf
push
rolb
add
mov
and
das
lds
dec
icebp
or
add
push
ljmp
add
sub
sub
fisttpl
adc
sub
mov
mov
pop
cltd
out
fidivl
mov
xchg
push
mov
ficomps
das
push
mov
lcall
push
or
inc
movsb
adc
cmp
js
aas
addb
xlat
jns
add
push
or
arpl
jns
sti
rcl
rcll
insb
or
inc
cmpsl
data16
xor
pop
rcrl
cmp
dec
or
popf
mov
push
mov
aas
aad
push
div
mov
lcall
das
and
xchg
lods
or
inc
pop
cmpsb
or
fdivrs
lods
movsb
sbb
test
jle
mov
push
je
pop
dec
mov
fisubs
push
inc
dec
fistpl
mov
inc
mov
outsb
mov
test
mov
mov
add
dec
sbb
mov
and
data16
inc
fwait
add
shl
les
lods
mov
add
jge
popf
insl
jno
test
add
lods
rcl
mov
int3
sub
aaa
aam
mov
xor
xchg
push
stc
mov
pop
push
add
pop
lret
sub
jg
std
outsl
and
fsts
fwait
sub
fucomip
xor
xor
scas
xor
add
add
mov
jecxz
rdpmc
mov
wbinvd
testl
test
ljmp
lret
insl
mov
in
je
call
icebp
rcrl
sti
jnp
roll
jmp
or
movsl
cmp
inc
in
mov
xor
pop
in
add
ret
jns
insl
aam
cmpsb
movsb
movsb
xchg
push
cmp
bsf
mov
mov
ss
das
sub
inc
ja
inc
in
pop
dec
shll
sub
mov
push
adc
sub
push
insl
es
mov
dec
test
ss
mov
ds
repz
cmp
and
les
push
xor
pop
and
and
movl
movsb
test
mulb
cmp
add
add
mov
push
arpl
sahf
pusha
mov
loopne
push
push
pop
xchg
out
sti
adc
adc
outsb
sub
sbb
hlt
xor
dec
inc
fldt
pop
inc
dec
inc
add
cmp
jge
fldenv
cmc
jbe
mov
sbb
pop
scas
stc
ds
xchg
dec
push
test
movsl
hlt
jns
gs
add
add
fstpl
adc
repnz
pushf
sub
cmp
rolb
out
mov
xor
sub
jp
in
xchg
pop
pop
fucom
scas
gs
aaa
addb
sub
lret
movsl
mov
mov
int3
sbb
sub
ds
std
ficompl
sbbl
pop
push
sbb
cmp
or
cmc
cmp
inc
outsl
xchg
leave
les
rorb
fs
adc
les
pop
clc
inc
inc
xchg
pop
sbb
sub
mov
scas
out
fldt
lahf
and
repnz
pop
fcomps
add
stos
xchg
mov
jbe
pop
ja
mov
pop
xor
pop
aaa
jae
aam
sub
push
in
mov
inc
rol
pushf
sarl
int
push
in
popa
or
adc
xor
add
sub
shl
arpl
dec
xor
push
fisubrs
out
lret
lea
ljmp
mov
outsl
call
add
add
movsb
add
jp
es
pop
mov
pop
inc
xchg
inc
sbb
jecxz
or
add
add
add
mov
cmp
inc
jl
or
orb
or
sbb
cwtl
jp
les
jge
mov
and
sbb
push
insl
roll
loop
cmp
mov
add
out
rcrl
push
push
jmp
xchg
adc
fmulp
stc
mov
sbbl
rep
fwait
pop
push
call
imul
cmpsl
ss
dec
mov
lret
push
add
xor
ss
in
jne
es
sub
imul
sub
enter
loopne
movsb
dec
outsl
mov
xchg
pop
out
push
xor
test
imul
xchg
xchg
cmp
or
out
jbe
xor
xchg
int
pop
or
and
jno
enter
addl
dec
xchg
iret
add
jg
mov
push
test
int
add
add
dec
aas
mov
pushf
popf
mov
cmp
adc
cmp
out
les
mov
push
in
xchg
sbbl
outsb
mov
jno
xchg
in
sbb
adc
ja
adc
sbb
out
in
dec
cmp
sbb
js
int3
loope
ror
or
and
jno
loop
loopne
stos
sbb
and
xor
test
ja
dec
xchg
out
inc
pushf
push
sbb
lcall
mov
jns
out
hlt
pinsrw
cmp
movsb
xor
sbb
bound
stos
sahf
vaddsubps
mov
test
cmpsb
pushf
mov
lret
incb
xor
pusha
lahf
mov
jno
xchg
sub
mov
cltd
inc
push
xor
gs
adc
divb
popl
mov
push
repz
mov
stc
scas
xor
negb
inc
inc
lret
inc
repz
xchg
pop
push
loope
adc
mov
mov
sub
cmp
das
out
pop
out
xchg
add
add
mov
movsb
adc
jmp
repz
outsb
aaa
into
mov
arpl
addb
das
test
insb
dec
ja
pusha
out
fwait
gs
sysexit
cli
shll
mov
jge
addr16
je
pop
inc
xchg
stos
jg
sbb
stos
jg
sbb
rcrl
push
sub
rclb
repz
sbb
add
xchg
ret
xlat
or
mov
std
add
ficoms
inc
fdivp
add
mov
sbb
push
das
sbb
pushf
gs
aad
mov
jmp
lock
mov
push
sub
mov
add
add
sub
sbb
push
jecxz
xlat
jae
stc
popf
adc
inc
movsb
inc
push
mov
stos
jp
movsl
je
mov
rcll
bound
inc
or
or
fnsave
adc
sahf
in
dec
mov
lcall
ficoml
and
int3
mov
add
in
fmuls
push
std
mov
sahf
sbb
cld
inc
cmp
add
in
mov
push
mov
add
add
push
xchg
or
imul
out
in
sahf
adc
jl
test
sar
xchg
mov
lods
in
inc
vcvtusi2ss
rclb
or
jp
insb
pop
jb
add
repnz
adc
shrl
mov
adc
push
mov
mov
lods
out
shll
clc
jecxz
inc
ds
roll
xchg
loop
rcrb
stc
inc
xor
or
lock
jne
dec
push
mov
cs
pop
pop
and
imul
add
dec
sti
xor
add
xchg
dec
push
sub
jle
push
les
inc
jp
rolb
nop
mov
jo
orl
out
jle
sti
push
in
test
pusha
pop
cmp
lock
xor
insb
mov
fistpll
outsb
ds
addr16
aas
ja
test
ror
xchg
lret
dec
fcomi
popa
or
testb
stos
mov
vpunpcklwd
dec
jle
xchg
push
dec
pop
mov
xchg
or
jmp
mov
mov
xchg
subl
or
fsubrl
hlt
adc
dec
inc
out
pop
out
mov
inc
mov
cmp
add
sbb
push
cmp
xor
lret
jns
mov
test
push
pop
xor
call
adc
int
add
jne
sub
mov
fidivrl
jmp
loope
jl
push
int
mov
and
push
mov
ret
pop
adc
rcl
and
sub
les
dec
or
mov
and
ret
push
xlat
or
mov
inc
pop
push
push
mov
mov
in
imul
aam
mov
xor
adc
daa
sub
imul
jg
sbbb
ja
int3
xchg
mov
lret
and
adc
sub
pop
popa
jle
dec
dec
lcall
pop
push
push
jecxz
andl
in
mov
stos
dec
lods
cmc
inc
push
jmp
sbb
lret
mov
sbb
push
into
rorb
sbb
aas
mov
lret
in
shll
jns
insl
icebp
and
imull
dec
sbb
jecxz
sub
aad
mov
filds
cltd
sub
dec
jbe
dec
and
xor
lahf
dec
in
insl
mov
ret
fidivl
orb
jne
test
sub
pop
mov
into
mov
xchg
mov
push
push
sbb
out
push
push
pusha
stos
mov
jp
test
leave
cli
lods
mov
shlb
adc
arpl
rcll
add
add
stc
cli
xor
call
push
ficoms
mov
rorl
adc
out
repnz
ds
cld
fdivs
in
xor
xchg
and
add
hlt
popf
push
das
in
and
cmp
mov
stos
movsb
fimuls
adc
cmc
sub
sub
add
and
test
mov
xor
pop
bswap
jl
pop
adc
xor
xor
sbbb
jbe
test
std
into
fmuls
imul
stc
xor
clc
push
cltd
sub
data16
icebp
in
sub
insl
lret
add
hlt
jbe
jo
std
and
push
movsl
jp
inc
imul
test
ds
sbb
xlat
sub
outsb
cltd
outsl
cmp
mov
sbb
adc
das
dec
pop
out
pop
repz
hlt
cmp
xchg
adc
adc
aaa
dec
jnp
push
sahf
fs
je
dec
je
sub
mov
pushf
test
mov
lret
movsl
lock
inc
jno
cmc
xchg
dec
nop
icebp
loopne
inc
dec
pusha
push
jg
repz
inc
sub
push
pop
fiadds
dec
push
sbb
lret
ret
dec
jecxz
fidivs
dec
jmp
xor
sub
gs
rclb
push
mov
fidivs
mov
push
push
loop
push
pop
xor
jnp
and
js
push
in
mov
outsb
jmp
mov
xchg
inc
jp
popf
lock
push
addr16
pop
mov
mov
xor
sbbl
insl
xchg
push
jmp
fdivl
sti
ja
aas
adc
xchg
pop
ds
sub
fdivrl
pop
add
inc
lea
xor
das
outsb
repz
lret
test
push
stc
subl
sbb
lods
xchg
cli
pop
inc
fsubrs
imul
xlat
lods
mov
push
mov
popa
je
scas
mov
scas
and
test
out
icebp
adcl
push
das
adc
cli
fwait
fs
mov
xchg
aas
test
xchg
pop
xlat
mov
add
jnp
popa
xchg
inc
dec
mov
jae
loopne
aas
hlt
xor
jmp
sub
hlt
stos
fwait
mov
cltd
xchg
add
loopne
mov
inc
popa
add
add
movsl
adc
inc
je
jno
ficomps
out
leave
imul
xchg
shll
xor
cld
cwtl
and
dec
out
scas
push
arpl
pop
pop
or
jae
clc
call
xchg
pop
push
popf
das
mov
jle
sub
xchg
lods
cmp
xorb
mov
test
cmp
add
add
cmc
leave
add
enter
fsubp
and
add
push
cwtl
cmpsb
ljmp
enter
cmp
jne
nop
popf
lret
fs
mov
sub
xchg
lret
test
hlt
push
jne
mov
aad
add
testb
push
hlt
sbb
into
push
sbb
mov
nop
dec
xor
jp
inc
add
add
add
test
test
mov
stos
sbb
out
dec
lds
ffree
mov
iret
cwtl
pushf
jg
pop
adc
cmp
mov
adc
mov
jbe
push
out
jne
push
jo
fs
or
mov
cmpsl
mov
or
or
fistpl
jle
je
cmp
xchg
jbe
aaa
test
ja
xor
ja
mov
adc
xchg
jp
movsb
jns
stos
add
out
les
mov
dec
push
pop
sub
add
add
aaa
pop
cmpsl
and
popf
sub
cmp
dec
daa
dec
adc
lds
or
lahf
out
mov
jle
pop
bound
dec
scas
mov
push
and
mov
xor
and
lds
mov
std
push
sub
inc
mov
xchg
mov
mov
les
leave
stos
pop
repz
push
adc
push
xchg
add
pushf
inc
jnp
pop
mov
rclb
jb
testb
add
subb
or
test
add
fnsave
cs
cmp
xor
out
add
stos
cmp
pop
sub
xchg
sub
lock
loopne
icebp
and
fstl
cs
add
xchg
pop
push
xor
pop
ljmp
std
aam
repz
push
cmpb
fildll
dec
mov
setb
iret
daa
movsl
mov
mov
daa
jae
dec
jnp
push
sub
mov
inc
sbb
popa
dec
test
fadd
sbb
adc
cmpsb
loope
mov
mov
fists
add
shr
nop
cmp
xor
jp
cs
enter
or
hlt
incw
cwtl
movsb
mov
and
dec
inc
insl
pushl
xchg
cmp
fs
inc
repnz
leave
add
and
in
hlt
mov
stc
fwait
out
sub
sbb
cmpsl
mov
inc
pmulhw
dec
push
test
fnstenv
pushf
and
mov
mov
push
int3
cmp
push
xchg
call
movsl
or
jg
push
loopne
dec
shlb
nop
mov
ja
pop
out
cmp
push
inc
fidivs
aad
fwait
movsl
xchg
outsl
jp
imul
inc
loope
std
lret
adc
pop
mov
and
inc
fcmovu
jne
out
sahf
push
push
and
test
mov
or
and
int
cld
and
add
add
adc
mov
dec
dec
jo
xchg
dec
dec
jbe
dec
test
jmp
lret
dec
adc
rcll
daa
shlb
push
sbb
adc
addl
pop
negl
mov
add
pop
mov
jno
inc
orb
pushf
sub
div
and
jne
sub
xchg
jne
out
lods
add
inc
push
mov
xor
mov
dec
rcll
arpl
iret
sbb
mov
jne
cmp
repz
and
bswap
out
mov
icebp
cmp
cmp
mov
cmovs
pop
out
dec
jl
mov
divl
add
add
int
xchg
pop
lods
push
psubsw
push
pusha
inc
rorb
adc
push
jbe
loope
fistpll
imul
xchg
jbe
movsb
jb
pop
pop
dec
sbb
icebp
subb
push
cmp
mov
fsts
sub
mov
jle
inc
psadbw
fisttpll
pop
dec
test
adc
clc
push
mov
sbb
sahf
popa
mov
lcall
mov
add
add
js
or
sbb
lret
in
lods
push
mov
movsb
sbb
lahf
imul
stos
xlat
test
cmp
mov
sub
xor
pop
mov
ss
movl
ret
push
mov
push
popa
imul
add
pusha
add
push
testl
inc
pop
jmp
fistpl
js
sbb
mov
push
aad
aaa
inc
les
jnp
pop
and
lock
jno
mov
sbb
mov
popa
in
arpl
adc
imul
movsb
rorb
popa
dec
xchg
test
adc
sub
jmp
jnp
dec
mov
fidivrl
xlat
lods
ljmp
xchg
pop
cld
mov
mov
outsl
push
sub
jg
xchg
push
cmpsl
cmp
cmp
addr16
push
push
inc
sub
inc
gs
mov
movsl
fsubr
add
push
sbb
cmp
fistps
cmp
stos
mov
jecxz
inc
dec
pop
leave
popf
sbb
push
fwait
sbb
dec
addl
cmp
nop
loope
sti
push
adc
aam
sub
mov
pop
jecxz
insl
stos
pop
lods
mov
or
loop
cmp
add
mov
and
xchg
jo
repz
cltd
imul
enter
cmc
push
dec
jmp
movsb
div
testb
cmc
xor
or
pushf
and
aad
test
mov
push
loopne
lret
jge
mov
and
lret
mov
add
in
sbb
sbb
ds
sbb
jb
jo
push
iret
add
xor
cld
movsl
int
iret
xor
dec
sbb
sbb
lock
pop
fwait
add
lahf
test
loopne,pt
ret
icebp
pusha
mov
mov
jbe
mov
inc
mov
int3
sub
jg
mov
scas
cltd
movsb
push
sbbb
xlat
adc
dec
and
jo
adc
pop
mov
out
mov
jae
add
add
mov
stc
mov
or
add
add
imul
cmp
fdivl
movl
gs
lret
xor
adc
add
mov
cli
insb
fnsave
fldt
inc
mov
std
mov
xor
sub
fsubp
out
adc
jae
xchg
and
mov
ss
movsl
jge
sub
es
gs
sahf
popa
imul
lods
or
mov
mov
inc
repnz
inc
inc
cmp
insl
mov
gs
inc
mov
add
add
xor
xlat
outsb
mov
push
pop
push
inc
out
popa
repnz
or
lret
in
lods
push
adc
lds
push
push
lahf
scas
addb
xchg
adc
hlt
mov
cmp
and
and
repnz
aaa
dec
cmpsl
push
fdivs
clc
push
daa
pop
mov
test
stos
fsubs
fldl
dec
repz
lods
popf
popf
jo
popa
and
adc
enter
push
sar
in
mov
iret
sbb
je
xchg
cltd
cltd
movsb
stos
mov
add
and
enter
fisttps
xor
jne
in
dec
jne
shl
and
fsubl
cmp
sub
dec
icebp
xchg
dec
push
and
push
popf
sti
adc
adc
jo
data16
mov
sub
push
add
es
ds
popa
inc
stc
or
jmp
stos
jnp
and
sahf
mov
jns
cmp
adc
leave
ds
adc
sub
adc
or
mov
xor
sti
leave
aam
push
out
hlt
aaa
in
sub
inc
inc
daa
lds
pop
push
mov
nop
cmp
stos
jmp
push
loope
or
xchg
jmp
cld
adc
mov
pop
es
ret
or
fcomi
aas
nop
jns
mov
ljmp
dec
mov
in
pop
pushf
cmp
testb
jo
xchg
cmp
pushf
jge
rcrb
dec
pop
popf
adc
fnstcw
adc
test
mov
xor
es
jb
or
outsb
outsb
insl
sbb
inc
xchg
testl
mov
xchg
push
sbb
adc
pop
hlt
xchg
rcrl
and
rol
test
xor
dec
test
or
popa
mov
leave
lret
js
cmp
mov
adc
outsb
adc
test
icebp
jg
hlt
push
and
mov
repnz
push
or
pop
shll
sti
ss
xchg
xlat
popf
scas
inc
iret
addr16
inc
div
adc
xor
jbe,pn
sub
inc
cmp
xlat
add
dec
loope
cmc
ja
pop
pop
aam
sbbl
dec
ret
mov
pop
in
push
fildll
sbb
insl
mov
push
mov
lcall
rolb
rorb
mov
cmc
call
ret
pusha
cld
daa
jne
push
shrb
inc
xchg
mul
adc
add
mov
cli
mov
jmp
add
add
aam
ret
je
outsb
sbb
mov
cmp
ds
mov
insl
pop
jo
push
sbb
pushl
lock
cmp
repnz
and
or
movd
test
adc
add
in
pop
mov
mov
xor
add
mov
dec
in
hlt
push
test
jno
and
add
or
push
dec
xlat
aas
pop
int3
xor
dec
inc
pop
add
pushf
xlat
movsl
and
int3
aaa
jp
lret
in
mull
or
imul
push
mov
cmpsb
out
imul
rcrl
add
adc
xor
jge
push
outsl
mov
hlt
xor
xor
outsb
sbb
insb
adc
cs
cmp
fsubl
iret
movl
adc
jnp
and
xchg
sbb
add
sbb
lahf
dec
push
inc
insl
push
xor
insl
test
jecxz
testl
inc
jae
ss
hlt
lds
mov
push
rol
stc
out
jecxz
mov
inc
notb
out
jl
loope
cmp
or
inc
xor
popa
push
adc
mov
sbb
int3
or
mov
ror
mov
aad
mov
cmpsb
cmp
lahf
mov
loopne
jecxz
std
dec
lret
int
je
aam
scas
int3
ss
arpl
outsl
mov
mov
dec
es
and
mov
mov
fwait
clc
cmp
mov
inc
repz
jb
inc
test
rorl
add
in
push
clc
outsl
in
cmp
sbb
lret
xlat
cmc
inc
add
movsb
jnp
daa
jp
cmc
es
pop
dec
push
nop
mov
add
add
pusha
xchg
ds
push
idivb
sub
add
inc
pop
sub
xchg
add
mov
add
es
loope
dec
jns
pop
dec
or
cmp
or
stos
push
leave
add
and
sub
push
cld
inc
shl
mov
stc
rorl
cmpsl
mov
in
lds
je
xor
sarb
and
out
dec
jb
ficomps
sub
maskmovq
imull
test
jae
add
push
lods
mov
aad
and
lret
xchg
sbb
push
jo
or
jo
adc
pushf
mov
cmp
push
out
cmp
push
mov
mov
jle
and
inc
fs
rcrl
movsb
test
and
mov
mov
adc
icebp
decb
adc
in
jmp
cmc
int
pop
or
push
repnz
adc
xchg
test
loopne
or
repz
mov
push
cld
rcrb
xchg
ret
movsb
insb
mov
mov
cmpsl
jle
in
call
mov
gs
xchg
cltd
mov
rorb
ret
fisubl
or
adc
js
js
icebp
stc
dec
aaa
push
fsts
icebp
xor
bound
push
dec
int
call
adc
cltd
add
push
pop
ljmp
adcb
test
nop
jg
orb
or
xor
mov
dec
enter
test
mov
ret
ljmp
movsl
pop
pusha
movsb
rcll
loop
cmp
iret
mov
dec
push
stc
pop
mov
xchg
ret
addr16
ret
mov
sarl
incl
add
add
popl
jmp
inc
xchg
adc
int
mov
insl
adc
lock
sti
scas
nop
mov
mov
jg
add
and
insl
xchg
dec
inc
dec
repnz
fwait
out
dec
rclb
js
outsb
inc
fildll
inc
dec
sbb
adc
int3
adc
dec
popa
or
std
loope
dec
out
xor
push
sbb
mov
mov
hlt
dec
int
mov
out
add
inc
mov
test
push
pop
jecxz
add
lods
jmp
pop
lcall
ds
mov
cmovl
out
push
dec
fs
shll
sbb
push
rorl
js
jmp
cli
sti
or
jecxz
mov
shl
mov
rolb
add
add
mov
xchg
out
add
hlt
outsl
dec
mov
dec
in
div
out
mov
xor
pop
inc
addb
mov
mov
mov
mov
pop
dec
lahf
call
sbb
fistpll
mov
leave
jp
jns
and
inc
subl
cli
scas
outsb
push
push
sbb
jae
loope
xor
popf
adc
adc
in
cmp
adcl
jg
sub
shrl
xor
sub
xchg
push
pop
addr16
mov
add
push
and
loop
mull
xchg
lock
mov
jb
xor
dec
shl
xchg
mov
js
mov
fisubl
inc
sub
scas
fstpl
add
jne
or
cli
dec
aam
fdivrs
mov
lock
fwait
mov
xor
cmp
adc
mov
mov
add
mov
adc
pop
mov
out
jbe
mov
lahf
test
add
xchg
in
into
add
icebp
jne
movsb
xchg
jp
xchg
loopne
sbb
mov
cli
mov
cmp
jbe
pusha
cmc
cmpsl
adc
and
arpl
int
push
cmpb
lds
lret
loop
and
ds
rcrb
movsl
push
loope
sub
mov
nop
mov
movsl
mov
jl
push
sahf
addr16
dec
icebp
hlt
movsl
repz
sbb
ja
mov
sbb
jne
xor
ret
call
mov
add
int3
sti
mov
fisttpll
in
mov
lahf
loop
cmp
arpl
idivb
add
inc
lock
fisubrl
dec
enter
ret
cld
lret
aaa
cs
loope
sbbb
mov
pop
jmp
imul
inc
or
ffree
fstpt
scas
dec
jbe
movsl
sub
cltd
test
lahf
popl
add
add
addr16
das
cltd
repnz
and
out
test
addr16
mov
inc
cwtl
add
push
sbb
divl
mov
mov
aaa
data16
cmpsb
pusha
adc
mov
insl
loopne
sbb
push
adc
push
in
and
xchg
loopne
sbb
out
jns
cld
pop
imull
jmp
xchg
cs
cli
sbb
into
adc
push
jb
into
mov
popa
cmp
roll
dec
push
int
xor
inc
fisubrl
dec
xorb
sbb
ret
addb
inc
sub
push
jne
and
inc
mov
getsec
pushf
aad
fiadds
fs
adc
cmpsb
fs
xchg
mov
inc
cwtl
arpl
xchg
repnz
insb
cmp
xchg
mov
mov
xchg
mov
lods
out
mov
push
gs
mov
icebp
imul
jg
push
push
cmp
jp
inc
popa
lret
xchg
cmp
xchg
call
aam
or
cmp
rorl
stc
lret
dec
scas
dec
push
jo
loopne
imul
mov
cmp
fadds
scas
xchg
lcall
sti
aaa
movsl
popa
aad
stos
test
aas
loopne
stc
mov
in
jns
jg
jb
xor
call
mov
daa
inc
mov
jno
dec
mov
cli
out
cmpl
push
jmp
push
dec
or
movsb
scas
pop
pushf
fldenv
in
jg
hlt
xorl
inc
subb
outsb
mov
pushf
hlt
pop
push
testb
or
sti
or
out
cs
cmp
push
aam
push
iret
pushf
arpl
std
cmp
sbb
imul
popa
ret
xor
mov
cli
mov
subb
jns
out
scas
rcrl
das
push
lods
fs
aaa
lods
xor
mov
in
jne
sbb
cli
sbb
sub
das
xor
pop
mov
mov
cld
insb
mov
outsl
sbb
idivl
xor
sarl
jge
cmp
pop
push
jns
pop
lock
push
rclb
addr16
sub
dec
int
mov
add
shlb
mov
mov
cmp
jo
sbb
sub
scas
mov
dec
sub
mov
sbb
fnstcw
and
xlat
xor
mov
or
dec
mov
mov
inc
mov
out
mov
lods
mov
push
jecxz
test
jecxz
call
roll
cmpsb
ljmp
daa
out
sti
negl
cmc
pusha
mov
addr16
add
mov
push
loopne
in
out
and
in
lcall
push
lods
sub
lahf
popa
fcoml
aas
cmp
jno
jp
dec
outsb
mov
aas
jno
add
ret
aas
jg
mov
sub
pop
js
and
mov
jle
push
mov
sbb
leave
ljmp
lcall
xor
dec
pop
rcl
fists
push
xchg
dec
shll
lcall
hlt
and
sbb
mov
adc
ds
add
cmp
cmp
sub
out
adc
gs
pop
in
dec
es
pop
jl
pop
cltd
sbb
outsb
jno
xchg
xchg
xchg
cwtl
shrb
loop
xchg
mov
cmpsb
imull
cmp
cwtl
add
jecxz
add
xchg
int3
shrl
sub
outsl
cwtl
inc
insb
mov
push
jns
lahf
inc
jae
or
add
xchg
cmp
lret
movsb
sbb
sub
add
fs
dec
pop
or
shlb
sahf
xchg
das
loope
loope
adc
xchg
push
sti
lds
mov
jecxz
xchg
mov
lds
cmp
pop
std
mov
sub
mov
jmp
mov
mov
rorl
or
lods
xlat
or
jle
or
add
ret
adc
mov
xlat
xchg
push
sub
add
aaa
call
lret
sub
xor
jnp
test
dec
push
aad
jae
sbb
rorb
pop
push
mov
jb
icebp
mov
dec
jb
outsl
xor
imul
mov
rcr
cmp
xchg
jmp
pop
dec
xchg
pop
imul
lock
pop
lds
push
mov
sub
out
jno
add
and
jp
cmp
test
pushf
cmp
fcoms
stos
sbb
push
lea
jle
jp
jmp
lods
or
insl
inc
or
cmp
adc
lcall
push
adc
inc
insb
aam
pop
popa
minps
or
lahf
popf
call
push
jb
ds
leave
dec
in
leave
dec
lds
xlat
popf
adc
add
test
jae
cmc
xchg
cmpl
and
or
push
mov
cmp
xor
sub
nop
add
movsl
xor
cs
mov
fisubs
cmp
mov
shrb
lea
xchg
negb
nop
int
mov
and
pop
ljmp
sub
bound
push
xor
mov
dec
sub
inc
jge
mov
push
ret
xor
rolb
add
inc
inc
pop
cltd
xchg
cmpsb
mov
andl
movsb
xchg
gs
js
shll
jb
incb
cli
pop
nop
mov
cmpl
in
pushl
sbb
push
pop
cmp
dec
jle
cmp
jg
loope
mov
stc
push
js
addr16
scas
arpl
aad
dec
test
out
dec
mov
movsl
std
nop
mov
mov
cli
sbb
xor
push
or
data16
or
ffreep
lahf
xlat
push
push
out
ret
dec
xchg
sbb
in
pop
insl
fnstcw
sub
aas
popf
lea
stos
mov
fildl
xchg
ret
mov
dec
loopne
scas
inc
jle
lret
loope
stc
xchg
mov
and
std
jnp
and
push
jne
mov
lret
xchg
ficoml
mov
in
call
fidivs
das
lea
xlat
out
dec
push
push
xchg
xchg
dec
sbb
add
add
mov
jo
popf
mov
or
nop
std
mov
or
add
jmp
ret
dec
or
add
sbb
lahf
xlat
aam
out
and
inc
cs
faddl
addr16
push
adc
mov
jg
pop
xlat
cmp
nop
ds
cmp
pop
aaa
jnp
pop
cwtl
dec
sysexit
pop
das
test
push
mov
sub
ljmp
movsb
mov
leave
push
lods
or
fnstcw
add
push
les
cmp
test
ja
loop
andb
adc
ljmp
pushf
lds
sbb
add
ror
jg
aad
cmpsb
test
pusha
stc
or
sub
incb
sub
cmp
dec
pop
xchg
clc
xchg
push
rorl
cli
mov
es
push
jmp
lock
hlt
push
cltd
jl
and
push
xchg
or
arpl
ret
outsl
mov
sti
addl
ss
sbb
cmc
mov
mov
ja
fidivrs
fiadds
js
icebp
aaa
in
xchg
into
mov
mov
aas
mov
test
nop
out
xchg
mov
dec
enter
addr16
mov
stc
imul
stc
leave
cwtl
adc
aaa
mov
in
mov
xchg
jmp
push
or
stc
and
lock
xchg
notb
or
pop
ret
mov
inc
push
mov
cmp
aam
and
lcall
add
add
scas
stos
nop
lock
shlb
jno
ds
imul
mov
pop
nop
pop
adc
sahf
pop
xor
lods
ljmp
movsl
popf
lret
orl
fiadds
xchg
or
dec
push
aas
mov
mov
mov
push
cmp
cmp
and
jne
mov
in
push
xor
pop
cmp
stos
das
xor
fs
mov
subb
les
daa
sub
xor
ret
sbb
mov
mov
leave
in
or
push
adc
pop
ret
jge
mov
mov
add
add
mov
mov
leave
jns
popa
xchg
das
mov
push
xchg
les
xor
out
movsb
pushf
xchg
xchg
fdivs
ret
movsb
fdivrs
mov
lods
in
or
mov
cmp
and
int
sub
mov
dec
mov
hlt
ljmp
jae
xor
daa
jns
mov
test
pop
ss
xchg
adc
add
sbb
mov
and
movsl
and
scas
xchg
mov
xchg
mov
aaa
cld
mov
lock
mov
popl
sbb
jns
xor
out
test
pop
pushf
popa
popf
dec
pop
adc
cmp
notl
pusha
jp
mul
pop
lea
and
adcl
sub
or
je
or
fdiv
dec
jmp
push
jg
imul
das
insb
or
popa
or
xorb
loope
mov
flds
jo
and
mov
mov
jb
cmp
mov
outsl
sti
adc
sbb
sbb
sbb
dec
roll
or
addr16
addb
test
leave
mov
out
nop
daa
sbb
pop
inc
mov
add
movsb
cmp
stos
rsm
pushl
sub
mov
pop
into
rorb
daa
jno
fnstsw
pop
in
mov
jo
addr16
cli
roll
loope
cmp
add
in
push
sbb
jmp
imul
jmp
out
lds
mov
xor
mov
or
mov
out
addr16
test
add
xchg
lock
mov
ret
cltd
repnz
aad
mov
push
xchg
mov
aas
dec
lea
daa
mov
outsl
dec
mov
daa
mov
push
xor
dec
in
rcr
dec
sub
and
cmp
jmp
inc
imul
fisttpl
add
jae
addr16
push
aam
jmp
iret
hlt
push
aam
mov
fsubl
ja
xor
nop
loope
enter
add
test
subl
data16
pop
or
mov
sbb
dec
orl
pop
dec
popl
lret
jae
repz
inc
xchg
xor
bound
je
push
mov
lds
les
xorb
xchg
xchg
jbe
call
popf
lods
push
nop
insb
adc
lahf
aam
add
cli
loop
push
inc
dec
mov
ljmp
stos
movsl
cli
lret
xlat
iret
cmp
cmp
ret
cmp
pop
jbe
or
movsl
sbb
xchg
cmp
adc
repz
pop
and
test
or
inc
pop
loop
jecxz
insb
ljmp
cmp
icebp
mov
mov
jge
fistps
inc
insl
mov
enter
sub
xor
and
aam
std
rorb
rolb
int3
xor
fists
push
push
sub
shll
jne
jne
orl
push
push
mov
and
cmp
insl
es
jp
outsl
mov
dec
sub
out
pop
loop
sbb
mov
push
dec
mov
xchg
ss
fcmovnb
xchg
pop
inc
loope
mov
test
dec
add
clc
ja
mov
or
dec
ljmp
rorb
push
test
xor
js
fsubr
popf
sub
call
xor
pop
lock
and
std
test
sub
out
sub
addb
clc
and
mov
arpl
fstps
dec
sbb
jp
jge
cltd
loop
sub
jbe
js
cmpsb
fbstp
sarl
push
ss
ret
scas
in
adc
ljmp
sub
daa
cmpsl
or
and
hlt
ss
packsswb
pushf
out
xlat
in
test
mov
pop
loopne
mov
dec
dec
subl
sub
pop
movsb
mov
aam
mov
mov
subb
test
rolb
in
leave
sub
data16
outsb
mov
adc
popa
rcll
or
fidivs
dec
shll
pop
inc
xchg
and
stc
cmp
aaa
push
outsl
or
jb
icebp
inc
cli
xchg
mov
data16
fs
push
jb
testb
mov
icebp
sbb
cli
mov
fdiv
das
inc
fs
imul
and
loop
call
xchg
sbbl
insb
push
cmp
inc
fsub
jle
inc
std
nop
mov
and
inc
xchg
pop
ret
icebp
add
ljmp
rcrl
inc
and
sti
xlat
mov
leave
sbb
stc
fs
pop
lods
icebp
mov
aad
sub
clc
xor
add
fsubrl
xchg
ret
out
lahf
insl
sub
leave
mov
bound
pop
inc
aaa
or
push
out
arpl
push
mov
iret
cld
pop
cwtl
xchg
out
dec
faddl
inc
xor
les
jo
inc
mov
mov
dec
fwait
dec
lock
loop
mov
jbe
inc
push
fs
mov
mov
dec
dec
add
dec
push
pop
sbb
jbe
dec
xor
push
iret
cwtl
scas
jo
leave
je
fnstenv
mov
sbb
test
test
mov
inc
out
xor
and
cs
ret
jns
dec
iret
outsl
lret
dec
ja
mov
stos
movsl
pop
jge
jl
test
dec
leave
loop
gs
push
add
clc
stc
sub
cmp
scas
dec
out
cmp
outsb
sti
iret
inc
pop
add
pop
pop
pop
test
inc
mov
push
ret
xor
repz
sbbb
mov
pop
lods
jbe
add
cli
sahf
orb
or
cld
lret
sub
push
ss
add
xor
imull
push
ss
xlat
push
stos
mov
jbe
cli
sub
aas
je
xchg
scas
xchg
shrl
push
in
lock
testb
fnop
sub
jnp
call
sub
xlat
std
xor
pop
jecxz
or
cmp
les
aam
add
add
add
int3
lret
cmp
or
xchg
in
ljmp
loopne
sbb
push
loop
cmp
ja
ljmp
out
push
add
rcrb
stos
ja
push
test
in
jg
stos
lret
sbb
add
test
push
scas
test
push
cmp
cmp
icebp
mov
jbe
xchg
sbbb
ds
cmp
mov
add
ret
adc
ret
and
cwtl
mov
fistl
iret
sarb
lret
add
std
cmpsb
cmpsl
inc
repnz
rcll
lret
or
inc
jge
push
sbb
insl
and
das
mov
cmp
xchg
mov
int3
cmpsb
daa
xchg
add
cs
in
bound
sbb
sbb
cmp
dec
mov
jmp
and
jnp
or
lods
sbb
dec
imull
sub
pop
sub
add
push
aad
or
dec
movsb
lea
mov
subb
xor
je
popf
mov
jo
xchg
int
and
xor
scas
sahf
test
push
xor
mov
outsb
loopne
or
push
mov
icebp
xchg
into
jno
fsubrl
sbb
jno
call
jmp
movsb
dec
push
pop
mov
and
lcall
and
pop
jl
sarl
push
add
sub
sbb
xor
xchg
xchg
imul
add
add
into
sbb
jo
pop
ljmp
inc
test
mov
push
xorl
sbb
sub
inc
insb
out
test
xchg
iret
xor
fwait
ja
sub
pop
cwtl
hlt
push
xor
es
add
add
dec
movsb
je
shll
mov
dec
mov
pop
out
mov
ds
dec
in
addl
xlat
mov
and
add
testl
push
ljmp
pushf
mov
pop
pushf
fdivs
roll
and
popa
jnp
cmp
add
into
in
mov
cmpsb
dec
add
and
lahf
pushl
push
xchg
inc
dec
sbb
cmpsl
out
dec
int3
lcall
sbb
add
add
nop
sarb
or
and
das
sub
inc
in
dec
insb
dec
lcall
stos
push
mov
push
jno
mov
cmc
pop
lods
scas
testl
push
divl
cmp
mov
xor
lock
dec
xlat
out
xor
scas
jbe
and
push
shll
push
adc
dec
push
outsb
sbb
mov
cmp
pushf
add
jl
clc
in
and
add
add
loope
out
dec
cmp
mov
in
fdivrl
jmp
xor
cmp
test
cmp
jg
ljmp
push
mov
bound
movl
fisttps
sub
fidivs
sub
nop
int3
adc
or
or
and
fbstp
out
mov
stos
xor
repnz
into
in
cs
add
sub
aad
push
push
lods
sub
lahf
out
and
sub
rcll
add
sub
icebp
mov
frstor
fisttpl
out
mov
insl
popf
jp
cltd
push
pusha
es
pop
adc
or
fwait
cs
sahf
inc
and
mov
cmp
sub
dec
int
cmpsb
or
xor
inc
fnstcw
clc
pop
sbb
loope
out
push
testb
mov
scas
negb
jnp
xchg
jnp
call
arpl
stos
ret
ja
imul
and
add
mov
pop
in
mov
out
sbb
pop
cmp
pop
pop
add
shl
adc
mov
inc
adc
mov
and
int
push
adc
nop
fwait
push
repz
aas
sub
icebp
cli
sub
mov
popf
lea
xor
ljmp
bound
js
push
inc
out
test
aam
adc
cli
mov
sarb
addr16
unpcklps
xchg
inc
loop
add
add
pop
data16
aam
shll
sub
rol
mov
call
dec
mov
mov
jb
cltd
cmpsl
push
mulb
clc
les
and
out
sub
inc
cmc
filds
sub
adc
pop
clc
mov
sbbb
call
push
jns
pop
sbb
mov
out
daa
dec
push
add
ss
mov
add
add
adc
outsl
add
xor
xor
aas
xor
cmp
andl
jl
inc
fsts
mov
fcomi
dec
addr16
lret
cmpsl
leave
or
fs
add
in
cmp
push
test
mov
rcrb
movsb
dec
outsb
out
mov
lock
in
test
aaa
stos
jae
ljmp
mov
dec
fdivr
xchg
outsl
test
outsb
mov
sub
es
repnz
aam
mov
les
and
imul
mov
xchg
jne
mov
not
pop
xor
testb
ljmp
xor
push
in
inc
and
imul
es
inc
and
aad
rorb
cmp
jnp
push
fisubrl
clc
lods
nopl
mov
fists
into
and
dec
out
jmp
fsubrl
shl
aad
mov
jae
add
add
in
add
add
jne
xor
add
sarl
les
jle
xor
add
loope
mov
pop
dec
mov
out
nop
scas
mov
push
scas
sub
jns
adcb
enter
mov
data16
dec
xor
test
cmp
sub
pop
jg
jle
lcall
in
mov
in
xor
in
mov
mov
push
test
sub
ljmp
lods
jecxz
add
shll
lea
shrb
add
add
out
dec
adc
sbb
cmp
dec
cmpsl
es
das
dec
pop
or
lret
xchg
js
popl
jl
shrb
mov
repnz
outsl
mov
jg
mov
je
dec
fstpt
sbb
clc
or
mov
mov
loop
std
add
pop
xchg
bound
sub
inc
sub
xchg
ljmp
mov
inc
mov
inc
push
push
insl
sub
lods
jo
mov
xchg
jns
cmp
ja
out
and
jl
int3
and
and
cmp
xchg
sti
movsl
dec
cmp
icebp
push
test
imul
lcall
in
insb
popa
jmp
loope
push
cmpsb
inc
ljmp
subb
xchg
add
in
mov
jno
or
fstpt
and
cwtl
mov
sbb
inc
std
leave
loop
ss
dec
loopne
pushf
mov
add
and
pop
adc
inc
xor
faddl
pusha
mov
loope
xor
mov
cltd
popf
adc
lods
inc
popa
arpl
xor
pop
mov
cwtl
pop
cmc
or
test
lods
cmp
sarb
repnz
inc
adc
cmpsb
inc
xorl
sub
sbb
lret
push
pop
int3
mov
jl
xlat
mov
cs
clc
pop
sbb
pop
ror
mov
lret
and
push
and
jmp
mov
xor
mov
mov
test
adc
insl
xchg
inc
mov
and
aad
xor
push
fisubl
mov
dec
gs
int
mov
pop
inc
fistpl
fidivrl
fisubrl
xchg
mov
pushf
push
sbb
cmpsb
insl
jb
stos
lret
push
mov
and
cvttps2pi
test
loope
push
in
iret
jne
xor
iret
sbb
fdivrl
test
ret
dec
push
lahf
stc
sbb
push
or
outsb
pop
jp
inc
jb
add
insl
int
xor
cmpsl
adc
sbb
popa
xlat
xchg
ljmp
lock
lods
pop
mov
arpl
xchg
push
xchg
or
sbb
outsl
loop
sbb
cltd
push
testl
push
xchg
sbb
sub
cmp
add
add
inc
add
loopne
jae
arpl
pop
inc
fmull
aad
test
mov
sbb
lock
lods
mov
inc
daa
ret
aad
ficompl
mov
sub
mov
jp
pop
mov
sub
inc
mov
ljmp
dec
js
push
adc
call
pop
cli
adc
int3
pop
lods
push
sbb
stos
or
and
fwait
sbb
add
sti
out
dec
in
push
imul
add
add
loop
loopne
jne
jmp
push
cmpsb
push
fnstsw
mov
mov
aas
pop
pop
inc
jo
sbb
adc
lcall
adcb
in
mov
add
test
es
imul
scas
sbb
lret
xor
pop
adc
lock
adc
int3
in
add
add
mov
or
mov
test
cmp
or
mov
call
inc
lock
cmpsl
inc
std
xor
or
inc
push
jnp
push
adc
es
mov
nop
fsubl
sub
jmp
enter
mov
cmp
mov
add
mov
sub
leave
jo
aad
out
insl
add
iret
daa
sbb
in
das
rorl
aaa
sti
mulb
and
push
andl
mov
add
add
jo
int
testb
sahf
outsb
inc
jmp
les
int3
pop
addr16
inc
loop
or
jp
lahf
les
imul
movsl
pop
ret
xlat
nop
dec
call
mov
cmc
push
mov
mov
pop
hlt
lret
aas
test
in
ss
cld
jl
xlat
jg
mov
sub
lock
sub
xchg
fsubs
in
ret
aas
pop
add
adcb
and
xchg
leave
mov
scas
mov
add
pop
mov
xchg
inc
adc
lret
and
xchg
mov
aas
addr16
pop
adc
or
cmp
dec
dec
jo
push
pop
fadds
add
add
add
add
add
adc
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
sub
add
jne
add
add
add
lods
add
add
add
add
add
or
add
cmp
add
dec
add
add
add
mov
add
testl
add
jne
add
fldl
add
mov
add
add
add
push
add
add
add
outsl
add
add
add
add
add
add
add
add
push
add
add
add
adc
add
jae
add
push
add
add
add
push
add
add
add
add
add
lods
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
and
add
cmp
add
adc
add
sub
add
jns
add
sbb
add
cmp
add
sub
add
add
add
add
add
add
add
fiaddl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
fiadds
add
insb
add
add
add
add
add
loop
add
push
add
add
add
lods
add
add
add
add
add
push
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
nop
add
add
add
push
add
add
add
add
add
roll
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pushf
add
add
add
dec
add
add
add
add
add
add
add
add
add
insl
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
ret
add
add
add
add
add
add
add
sub
add
adc
add
pusha
add
add
add
add
add
add
add
and
add
xor
add
ret
add
add
pop
add
add
add
cltd
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
xor
add
inc
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
data16
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
mov
add
sbb
add
add
add
add
add
add
add
add
jg
add
add
add
push
add
add
add
add
add
add
add
jnp
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
mov
add
aas
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
addl
add
add
cltd
add
add
add
add
add
sub
add
sbb
add
jb
add
mov
add
add
add
adc
add
daa
add
add
add
add
add
add
add
add
add
jno
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
out
add
add
add
add
add
add
add
and
add
add
add
add
add
add
sldt
add
add
das
add
add
add
add
add
add
add
add
add
adc
add
jne
add
sbb
add
roll
add
xor
add
inc
add
add
add
sub
add
aas
add
add
add
add
add
cmpsb
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
lea
add
pop
add
add
add
dec
add
add
add
add
add
and
add
and
add
jp
add
add
add
jae
add
fiaddl
add
and
add
push
add
les
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
jl
add
push
add
add
add
adc
add
sbb
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
add
add
and
add
sbb
add
xchg
add
add
add
add
xor
add
addl
add
or
add
add
add
add
add
scas
add
add
add
add
add
or
add
add
add
std
add
add
add
add
add
add
add
movsb
add
add
add
xchg
add
add
add
mov
add
popa
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
movsl
add
add
add
add
add
sub
add
adc
add
sbb
add
inc
add
add
add
adc
add
add
add
and
add
popa
add
add
add
sbb
add
jp
add
sbb
add
xchg
add
and
add
mov
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
xchg
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sub
add
jne
add
popa
add
add
add
add
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
popf
add
add
add
push
add
add
add
pop
add
add
add
add
add
add
add
sub
add
jb
add
mov
add
sub
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
push
add
add
add
sbb
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
lahf
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
add
add
sbb
add
rolb
add
add
xlat
add
add
add
push
add
jle
add
sbb
add
jno
add
cmp
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
and
add
xchg
add
addb
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
and
add
push
add
add
add
inc
add
add
add
add
add
pop
add
add
add
add
add
xor
add
adc
add
add
add
add
add
sub
add
xor
add
add
add
adc
add
inc
add
add
add
add
add
or
add
dec
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
inc
add
add
add
add
add
add
add
mov
add
lds
add
pop
add
add
add
cmp
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
cmpsl
add
add
add
add
add
add
add
add
add
filds
add
inc
add
add
add
add
add
adc
add
push
add
add
add
add
add
test
add
sub
add
jb
add
push
add
add
add
sbb
add
push
add
adc
add
dec
add
add
add
or
add
xchg
add
xchg
add
add
add
or
add
jne
add
sub
add
add
add
add
js
add
addb
add
add
pop
add
add
add
add
add
adc
add
add
add
add
add
jle
add
or
add
pop
and
arpl
fisubrl
push
mov
les
jecxz
stos
shrl
dec
mov
neg
add
adc
cld
ret
mov
das
mov
pop
call
cmpsl
fisubrs
inc
mov
int
pop
cld
insb
xchg
cmpb
and
das
std
cli
je
sub
jmp
cmp
and
jb
in
jecxz
xor
arpl
pop
inc
outsb
movl
add
add
sub
mov
je
add
sbb
clc
ljmp
xor
ret
xor
sbb
dec
pop
or
add
xchg
inc
jno
test
push
repnz
sti
push
cwtl
push
jl
add
out
leave
xchg
and
in
mov
loopne
and
idiv
mov
ss
es
mov
aad
adc
dec
cmp
sub
call
rcll
adc
cli
das
mov
inc
push
lret
pop
shrb
out
nop
inc
scas
inc
ljmp
xlat
pop
and
mov
arpl
loop
out
xchg
sbb
mov
inc
sbb
mov
mov
mov
bound
in
xchg
repnz
xrelease
add
je
inc
xlat
out
fs
pop
cmpb
and
sub
add
push
lret
in
mov
add
add
aas
clc
arpl
jge
iret
cltd
sbb
cld
loope
in
sbb
and
movsb
or
js
shrb
push
xchg
out
loope
insb
insb
cmp
test
data16
inc
into
mov
adc
pop
enter
es
into
mov
out
pop
or
mov
pop
stc
movsl
cli
iret
and
adc
daa
xchg
lret
jecxz
adc
add
add
and
bswap
jnp
mov
and
xchg
inc
push
mov
aad
test
add
mov
or
sbb
punpckhbw
movsb
xor
add
pop
add
and
push
pop
jbe
insb
dec
pop
imul
xor
dec
gs
shrw
loopne
dec
push
arpl
stos
imull
xlat
cmpsb
mov
push
lahf
loopne
cli
mov
cld
cmpsb
mov
scas
outsb
rorb
sub
je
test
cmp
out
dec
xor
repnz
lods
out
dec
xor
jmp
mov
adc
pop
insb
pop
test
std
xchg
scas
pop
into
pushf
xchg
xchg
loope
mov
xor
inc
bound
inc
adc
mov
mov
repnz
cmp
lret
jae
jns
sbb
aaa
in
fildl
movsl
je
xchg
dec
cmp
mov
scas
aad
das
mov
add
add
adc
loope
cli
xlat
lret
dec
cmc
cwtl
jno
mov
cmp
shll
ret
sbb
sub
enter
jmp
pushf
aad
mov
pop
mov
sbb
insb
adc
je
repnz
loop
and
or
push
xchg
icebp
jae
std
rclb
cmp
pop
aam
sub
jge
and
add
add
cmp
daa
mov
fldl
pop
ffree
subl
pop
push
or
xlat
insb
xchg
inc
jb
mov
xchg
sahf
and
clc
sar
sub
mov
out
adc
lret
bnd
enter
scas
sub
out
cmp
xchg
je
out
outsb
jae
adc
adc
inc
repz
mov
sbb
loopne
sub
dec
sbb
roll
xchg
hlt
mov
xor
xchg
pop
fs
push
dec
mov
clc
ss
out
icebp
sarl
xor
mov
dec
std
push
data16
cmp
pop
fldenv
push
mov
rcr
push
repnz
clc
pop
cmc
imul
mov
call
sub
or
jno
jmp
cmp
scas
das
add
rorb
pop
sbb
shlb
pushf
mov
cmp
test
or
repnz
jle
sahf
test
repnz
sub
sti
ja
mov
sbb
aam
pop
inc
cld
lret
scas
dec
test
stc
mov
or
jb
mov
add
jg
mov
icebp
dec
loope
sbb
inc
or
insb
loope
add
add
cld
fstp
jp
xor
xchg
dec
hlt
imul
jge
xchg
xchg
adc
add
add
xchg
mov
inc
or
lds
adc
fsubr
mov
loopne
xchg
push
fcomi
enter
insb
xor
mov
mov
pop
shll
mov
scas
clc
repnz
add
and
mov
add
cld
test
insb
mov
push
fcmovu
cmp
das
xchg
lahf
arpl
mov
in
and
gs
xor
sub
and
jmp
jmp
xor
mov
lret
push
das
imul
add
add
cmp
push
xchg
cmp
pop
lea
or
lret
push
loopne
add
jae
fistpl
outsb
xchg
mov
js
ret
xor
xchg
cmp
int3
dec
add
add
sbb
push
fildll
sub
jne
shrl
add
mov
popa
xor
mov
or
lds
jb
push
mov
fldcw
lock
movsb
int3
lds
adc
lods
mov
das
scas
dec
sub
popf
mov
mov
add
sub
outsl
xchg
in
mov
cli
cli
jae
js
fbld
repnz
xchg
fildl
lods
mov
leave
cld
hlt
adc
stc
dec
xchg
movsb
mov
cmp
arpl
mov
insb
lcall
or
sbb
movsb
mov
xor
stos
adc
jp
inc
jno
xchg
push
sbb
cld
stos
pop
out
sbb
mov
xchg
sbb
std
jmp
into
shll
movsb
mov
add
add
add
outsb
or
repz
ret
outsl
jle
jge
daa
fiadds
hlt
inc
mov
lea
push
mov
outsb
xor
ds
pop
add
add
adc
cmp
scas
stos
cs
xor
int
out
mov
pusha
mov
adc
subl
int3
adc
mov
cmp
frstor
mov
push
jl
jb
rcrb
cli
enter
std
xchg
cs
addr16
out
lret
out
dec
test
rorb
jmp
cmp
jle
into
data16
mov
adc
adc
xchg
and
or
sub
push
xchg
push
ja
add
add
lret
cld
js
icebp
ret
int
test
popa
jge
aaa
push
cs
adc
dec
daa
push
jbe
fdivr
or
and
xchg
icebp
mov
pop
mov
lcall
test
imul
dec
aam
movsb
imul
loopne
or
btr
jae
sub
or
push
rcll
push
cltd
cmp
dec
addr16
test
ss
lcall
insl
or
jo
jl
rcrb
cltd
xlat
std
xchg
xor
loopne
fisubl
pop
cwtl
xchg
pushf
push
dec
addr16
ret
mov
push
sti
inc
mov
mov
lods
loopne
aam
inc
in
outsb
outsl
sbb
cmpsb
lods
xchg
cmpsl
loopne
jb
scas
out
fdivrs
insb
sbb
popa
in
mov
in
cmc
sbb
movsb
cmp
mov
adc
leave
xchg
mov
xor
push
out
sti
jo
ds
js
mov
mov
insl
xor
jecxz
inc
fwait
xchg
adc
pop
cli
xchg
call
loope
sarl
cmp
stos
jb
dec
push
sub
adc
mov
adc
xchg
add
out
dec
daa
xchg
in
dec
jl
or
inc
xlat
xchg
dec
pop
jmp
movsl
mov
jne
pop
mov
sbb
sub
sub
stc
lea
clc
xchg
dec
imul
sub
je
cmp
icebp
js
jmp
rcrl
cmp
pop
jbe
mov
lods
jmp
jl
add
xchg
fsub
add
xor
xor
pop
testl
idiv
andb
negb
mov
ret
sub
mov
xchg
imul
push
xor
sbb
cmpb
mov
adc
ret
inc
out
out
insb
sbb
arpl
pusha
sbbl
icebp
enter
ret
sub
jbe
and
jns
test
adc
int3
shll
mov
cmp
mov
dec
dec
test
dec
nop
adc
xlat
ja
adc
mov
pushf
mov
cmpsb
adc
daa
aas
sub
ljmp
mov
cs
jg
jo
std
xor
ret
pop
mov
mov
js
or
cmp
sbbb
jge
and
inc
into
cmp
pusha
cmpsl
cwtl
mov
jnp
fimull
dec
insb
popf
div
cltd
ss
cmpsb
jo
dec
sti
aas
sub
sub
addl
xlat
add
adc
adc
jo
sar
add
out
mov
mov
bound
or
mov
mov
outsl
sub
xchg
dec
sbb
inc
out
add
sub
stos
pop
jmp
jge
xchg
dec
ss
movsl
inc
inc
xchg
sti
aad
cmpsb
scas
push
scas
xor
sbb
in
mov
or
in
pop
sbb
aaa
adc
and
fidivs
sbb
ljmp
xchg
inc
xchg
mov
cltd
adc
sub
jl
jbe
pop
jae
or
mov
xchg
jp
dec
and
cmp
insl
cmp
lcall
lret
mov
sbb
or
adc
lahf
sbb
and
icebp
icebp
shll
outsl
pushl
sti
push
shl
adc
fcomps
in
orl
jo
imul
clc
mov
mov
sub
dec
ficompl
add
jmp
loop
mov
or
out
push
mov
inc
movsl
subb
xor
mov
sbb
add
add
add
inc
aaa
inc
pop
loope
ret
stc
daa
sbbl
dec
lcall
ret
inc
push
outsl
or
xor
bound
mov
push
pop
das
in
repnz
rcrl
insl
mov
mov
aaa
push
sbb
and
mov
jb
ljmp
sahf
fwait
andl
mov
and
pop
mov
shr
dec
pop
cmc
mov
pop
xchg
mov
inc
insb
out
movsb
dec
rorb
dec
fmull
sub
xchg
repz
dec
push
mov
bound
jge
mov
icebp
mov
subl
ds
fmul
dec
fcmovnbe
loopne
loop
or
sti
or
pop
pop
test
xor
lock
mov
and
add
loop
loopne
cmp
sbb
jmp
leave
outsb
addr16
cli
mov
cmpsl
jbe
jns
push
push
fsubrp
dec
and
test
das
or
mov
and
fs
test
cld
xor
dec
mov
and
daa
movsl
sbb
scas
cmp
adc
sahf
sbb
pop
out
mov
enter
or
add
test
adc
mov
jge
dec
repz
xor
es
test
xlat
imul
pop
in
dec
mov
aam
and
xchg
frstor
push
push
xchg
add
xlat
insl
mov
fmuls
jl
repnz
ja
lcall
repnz
mov
mov
add
mov
nop
cli
or
ss
mov
scas
inc
pop
hlt
inc
push
loopne
mov
sbb
cmpsb
inc
test
adc
fsubs
inc
popa
stos
ja
xchg
test
push
scas
lds
lea
mov
lcall
push
xchg
repz
dec
pusha
enter
ret
aad
pop
mov
inc
sbbl
mov
lods
inc
inc
xor
out
and
dec
sub
inc
mov
ljmp
sbb
je
sbb
inc
push
mov
mov
pop
dec
mov
popa
inc
into
lods
notl
mov
cmp
outsb
or
jnp
call
dec
mov
pushf
inc
repnz
xor
pop
test
add
dec
pop
push
jl
in
lds
pop
lea
in
ds
scas
aas
enter
in
fs
lret
stos
lods
push
loopne
in
push
pop
cwtl
std
aas
push
gs
cmpsl
sarl
jno
add
add
int
inc
push
shl
pop
fwait
or
in
mov
sub
pushf
mov
adc
inc
mov
sbb
sbb
addr16
inc
mov
jne
jecxz
popa
test
jle
stos
loope
sbb
mov
sbb
lcall
fimull
mov
dec
and
push
cmp
lods
push
sbb
cld
aam
test
popa
test
lahf
xor
add
jg
js
push
outsb
adc
add
popf
cmp
sarl
iret
cltd
out
inc
aad
jle
dec
loopne
pushf
inc
ja
and
add
or
stos
and
int
sbb
xlat
xor
mov
daa
inc
dec
addr16
ss
dec
dec
fcoml
push
pop
pusha
ss
cmp
push
fadds
pop
pop
fstpl
pop
adc
mov
jns
test
pop
rolb
xchg
push
icebp
cmp
fildl
jnp
sbb
pavgw
mov
or
xor
ja
pop
je
and
push
out
pop
int3
mov
dec
xor
sbb
mov
fsubs
push
jbe
hlt
pop
outsl
xor
bound
adc
outsl
adc
std
out
sub
clc
dec
pop
xchg
jno
push
xor
sbb
pusha
or
sahf
lahf
dec
mov
and
sub
call
xchg
jp
sti
adc
nop
jmp
sbb
out
in
mov
frstor
push
push
std
and
pop
insb
sbb
std
rorl
push
pop
hlt
and
iret
popf
rolb
call
stc
lret
pop
cli
dec
mulb
leave
fisubs
pop
cmc
push
idivb
xchg
push
mov
fiaddl
mov
lods
hlt
cmc
mov
insl
popf
xchg
testl
pop
imul
outsb
enter
inc
shl
jno
cs
lods
dec
mov
movsb
jmp
cmp
dec
sbb
push
and
sub
sub
data16
jge
push
xchg
idivl
sbb
dec
mov
adc
pop
dec
in
dec
lahf
mov
int
pop
and
mov
mov
test
rolb
mov
inc
add
fstpt
push
push
dec
cmp
insl
lds
push
push
daa
mov
push
mov
fisubs
pop
loop
cmp
bnd
out
cmc
mov
out
arpl
push
cmpxchg
cmp
cld
cwtl
or
sub
outsb
rcrb
and
sbb
jae
not
in
pop
xchg
jns
pop
ss
ljmp
aas
jne
jo
jle
rcll
nop
in
mov
inc
ja
aam
scas
push
mov
xchg
push
push
pushf
or
js
mov
mov
test
mov
sti
push
pusha
jl
scas
addr16
cs
and
add
fsubl
daa
push
xchg
dec
jecxz
inc
shrb
mov
sbb
inc
mov
xchg
push
pop
cmp
mov
leave
and
das
sbb
rolb
cmp
xor
inc
or
dec
jmp
jp
ljmp
sbb
loop
cmpsb
nop
push
adc
fstpt
scas
cmp
ds
cwtl
xchg
dec
in
adc
mov
mov
xor
call
or
pop
lds
mov
jmp
sbb
rep
lods
inc
addl
and
and
inc
cmp
repz
cwtl
repnz
out
je
add
or
xchg
test
aad
loop
pop
mov
mov
lahf
movsl
aad
xor
sbb
mov
mov
cltd
pop
pushf
jge
jnp
xchg
xchg
into
imul
sub
movsb
sti
cmp
js
jp
fnsave
pusha
mov
push
or
add
out
push
loop
or
pop
cmp
lods
and
mov
push
das
inc
pop
lret
repnz
add
arpl
mov
xor
lods
mov
jbe
aad
xor
shll
push
jecxz
cld
hlt
jae
sub
out
cwtl
lahf
shlb
cmp
inc
dec
lds
fisubrl
cmpsb
test
shrl
test
aas
mov
js
or
jo
in
out
rorl
mov
movsb
pop
pop
sbb
insl
adc
push
xor
mov
fisttpll
jne
out
sarl
ss
mov
sub
xlat
out
jp
popa
cwtl
test
ljmp
xorb
and
add
jp
je
or
sub
rorl
out
jge
inc
push
ja
lods
out
mov
lods
rol
movsl
in
jecxz
jae
filds
out
jmp
dec
xchg
loope
and
mov
or
bound
test
xchg
aas
lret
push
int3
xchg
dec
add
fstpl
subb
ss
pop
sub
inc
pushf
sbb
push
pop
repnz
ret
aas
cld
cmp
fstps
jmp
in
arpl
push
lock
cwtl
dec
xor
imul
gs
out
push
fimull
push
out
sub
lods
lea
outsb
out
call
push
ret
popa
test
inc
stos
mov
loop
adc
xchg
and
mov
xchg
ja
je
inc
movsb
sti
fisubrs
jp
xlat
aad
insb
repz
cmp
xchg
inc
push
out
cmpsb
pop
mov
jecxz
and
out
in
mov
pop
cmp
adcl
mov
jno
push
fists
pusha
mov
xor
pop
out
cmp
mov
hlt
ret
xchg
mov
in
xchg
and
pop
lea
mulb
xchg
sub
mov
repnz
mov
xchg
test
subb
outsw
or
stos
fdivl
clc
sub
mov
or
fscale
mov
xchg
jne
loop
out
stos
fiadds
inc
ljmp
pop
arpl
out
sbb
adc
adc
out
xlat
mov
lds
push
aaa
jnp
push
cmp
in
testb
inc
jecxz
loop
mov
jnp
loope
add
add
and
frstor
sub
sub
dec
rcr
jmp
jmp
cmp
leave
cmp
test
add
jae
lret
imul
ret
cmp
aad
cmp
lcall
scas
aad
lcall
out
jns
data16
lret
int
out
xchg
leave
push
and
push
clc
es
adc
les
xchg
inc
mov
pop
not
jl
xor
adc
fcmovnu
cmp
fcompl
fwait
inc
movsb
xor
push
hlt
sbb
aam
cmp
daa
cltd
arpl
pop
dec
add
add
xor
inc
xchg
jb
iret
jg
sub
ss
cmpl
jle
or
adc
pop
inc
pop
je
cltd
adc
inc
xchg
dec
cli
add
ret
mov
jbe
mov
enter
and
pop
sub
dec
jne
mov
pop
nop
bound
test
mov
mull
data16
adc
xchg
cmp
sbb
fnsave
xchg
push
cmp
mov
popa
add
pop
and
das
mov
jmp
mov
lcall
mov
cmp
jmp
xor
sub
mov
insl
aas
repz
dec
pop
fisttps
cmp
adc
xor
xlat
push
inc
add
repz
or
ficoml
lahf
mov
dec
mov
outsb
ljmp
push
and
das
jne
jb
aas
jmp
aaa
sub
filds
cmpsb
sahf
stc
pop
add
push
scas
add
mov
bound
icebp
mov
rclb
inc
fdivrl
sahf
je
push
fisubl
fildll
push
decb
in
std
push
je
mov
xchg
cmp
xchg
jge
mov
adcl
in
pop
sbb
hlt
dec
jne
in
mov
add
sbb
cmpsl
movsb
int3
cmp
int3
les
add
jnp
sub
out
add
jp
sub
mov
loope
xchg
fwait
sti
in
arpl
and
pop
stos
gs
sub
push
push
in
test
pop
es
lret
clc
bnd
out
sbb
push
mov
pusha
lock
xchg
add
lret
mov
aaa
jmp
dec
sub
cmp
popf
cmp
jl
push
sarb
fwait
mov
inc
divb
push
negl
add
cmpsb
repz
loopne
push
mulb
mov
lahf
mov
mov
outsb
pop
mov
push
and
sub
jo
mov
mov
or
popf
mov
push
add
push
test
adc
mov
popf
addb
mov
push
jl
imul
jae
ljmp
or
es
stos
lcall
stc
in
lods
dec
cs
fcoms
sbb
cmc
and
jmp
adc
out
mov
ret
lods
pop
dec
sarb
pop
inc
dec
das
push
mov
adc
push
addr16
outsl
filds
into
jle
imul
add
loop
and
lret
cmpsl
pop
push
and
or
jbe
js
gs
ss
mov
lahf
imul
mov
sbb
outsb
inc
dec
push
stc
outsl
push
addr16
dec
or
adc
dec
adc
push
jae
xchg
mov
lahf
pop
mov
test
test
aas
in
mov
fsub
bound
and
mov
mov
add
dec
add
xchg
jb
push
lret
add
jnp
cs
lods
inc
insb
fadds
add
add
in
kmovw
fcompl
imul
jmp
push
mov
xor
cmpsb
push
scas
shlb
mov
cltd
xor
mov
push
js
dec
jns
cltd
inc
fsubrs
mov
mov
stc
and
xor
test
pop
xchg
or
push
xchg
sbb
jns
mov
jnp
add
add
add
and
cli
or
xchg
push
cmp
pop
push
or
dec
sub
add
add
rcl
dec
sbb
xor
xchg
add
divb
add
and
and
pop
loope
inc
xchg
push
push
push
push
mov
test
jge
or
mov
cmpsl
nop
dec
lds
xor
xchg
test
fmull
adc
out
inc
mov
stos
cmp
mov
frstor
mov
pop
fbstp
jmp
cmp
sbbl
out
or
popa
dec
hlt
dec
rorb
mov
call
je
xchg
iret
clc
aas
shl
outsb
repnz
js
out
fldenv
pop
icebp
jle
sbb
add
xchg
cmp
jp
mov
adc
and
cmp
sub
mov
mov
test
addr16
xchg
lret
inc
fsubs
inc
fidivrs
jl
xchg
push
xchg
dec
gs
les
mov
repz
push
mov
test
add
add
cmp
pop
mov
mov
xchg
add
stos
push
jb
push
adc
call
lret
popf
test
mov
lahf
sub
rcl
sbb
hlt
hlt
inc
icebp
add
das
insl
mov
or
or
sbb
lods
das
dec
mov
sti
popa
add
dec
push
scas
mov
repnz
into
icebp
int3
jne
cmp
jmp
out
mov
xor
popl
inc
jg
fcoml
xor
scas
push
insl
insl
fildll
mov
aaa
mov
nop
ret
jnp
test
jge
lds
in
mov
add
or
fs
add
sahf
int3
pop
out
inc
sbb
jnp
xlat
icebp
rolb
popa
ja
push
dec
inc
jae
fldenv
jno
push
call
inc
sbb
je
daa
call
cwtl
in
fwait
adc
nop
dec
jns
mov
out
pop
addr16
lock
mov
mov
iret
mov
mov
pop
push
xchg
movsb
or
push
imul
popa
lock
xor
mov
cmp
cmpsb
loopne
pop
mov
movsl
in
into
sub
xchg
jp
das
out
es
ljmp
dec
fmulp
fwait
ret
jp
aas
push
or
cltd
jne
pop
outsl
mov
ljmp
pop
sub
iret
sub
cmpb
adc
loopne
sbb
inc
cld
sarl
imul
pop
ss
out
jne
jb
mov
jb
xor
mov
lds
push
push
daa
mov
scas
adc
fdivrs
xchg
dec
inc
js
push
adc
or
jae
jg
add
ret
xchg
sub
fdivl
lock
add
fsubrl
lock
lods
adc
stos
popa
dec
test
mov
in
inc
mov
movsb
or
insl
xchg
add
adc
pop
sub
adc
adc
aad
pinsrw
jno
adc
sbb
cli
mov
das
push
hlt
jmp
imul
test
adc
shrl
sbb
jg
sbb
rclb
lret
imul
jbe
mov
aaa
daa
push
sbbb
xchg
sub
incl
idiv
cs
pushl
adcb
sbb
push
xchg
cmp
mov
add
pop
dec
dec
pop
mov
int3
and
das
push
xchg
mov
mov
in
adc
popa
call
and
repnz
push
test
sub
in
xchg
sub
insl
add
cmp
cld
repz
jp
dec
stos
je
cmp
lahf
xorl
aam
mov
and
push
jg
fcom
pop
std
cmp
in
mov
cmc
fs
xor
sbb
rorl
mov
mov
out
sahf
jb
sbb
xor
shrl
insl
xchg
jne
add
mov
mov
push
test
fcompl
mov
pop
adc
push
jnp,pt
and
dec
out
sbb
sub
push
and
inc
jno
adc
sub
jbe
push
stos
call
aam
cmpsl
jp
fs
push
vmwrite
push
and
lock
daa
mov
pcmpgtb
mov
and
leave
adc
lds
adc
mov
cltd
out
and
mov
test
adc
sahf
mov
xor
push
enter
push
and
push
pop
scas
add
mov
in
aaa
sub
data16
int
js
xchg
aad
jg
sti
sbb
xchg
lcallw
mov
cmp
fwait
lds
jno
sub
mov
sub
add
shrd
jne,pn
cli
and
sbb
popl
mov
push
insl
xlat
notb
sub
pusha
es
cmp
xorb
outsb
mov
loope
dec
ret
mov
popf
cmpsb
nop
fisttpll
adc
inc
mov
lds
mov
sub
sbb
cli
sub
cmc
imul
push
arpl
ror
mov
pop
add
lea
in
loop
cmp
or
test
add
push
add
out
lods
inc
repnz
movsb
mov
testl
movsb
hlt
dec
js
mov
add
cld
shl
or
insb
fwait
mov
fdivrp
clc
testb
pop
xchg
add
inc
inc
push
dec
or
dec
or
add
lahf
lods
cmp
and
mov
stc
iret
pop
inc
dec
insb
and
add
scas
stc
jp
sbb
dec
mov
xchg
cmp
cmp
movsb
pop
fnstsw
mov
and
inc
repnz
call
nop
dec
xchg
cwtl
cltd
push
cmpsl
fadd
rolb
insl
push
and
daa
adc
test
insl
mov
cmp
jnp
pop
arpl
adc
loop
dec
fsubrl
mov
pop
data16
dec
adc
fcompl
fdivrl
xchg
cmpsb
cmpsb
int3
jb
mov
ds
imulb
cmp
push
loope
jmp
pop
cmp
imul
sub
sti
mov
sarl
out
outsl
cltd
and
add
xchg
mov
addr16
into
inc
lret
int
mov
pop
movzbl
imul
out
sar
andl
xchg
jl
es
or
mov
mov
popl
inc
jge
popf
adc
aam
ljmp
ficomps
or
daa
sbb
inc
dec
mov
test
pop
or
sbb
inc
aam
jmp
fcompl
jne
sbb
stos
popf
mov
mov
add
fsubrl
xor
add
add
movsb
push
pop
popa
pop
in
les
cmp
mov
sub
add
enter
or
add
add
inc
jo
cmp
mulb
test
jge
mov
leave
xchg
xor
sbb
pop
mov
cwtl
int3
dec
adc
arpl
lods
addr16
mov
aas
pop
rcl
lock
and
mov
lds
dec
fiadds
add
add
dec
jmp
jnp
sahf
inc
and
mov
jl
popf
call
call
dec
add
cli
scas
les
push
mov
shll
insb
xor
xor
aad
inc
inc
mov
ret
int
xor
loopne
adc
hlt
adc
inc
ret
scas
fmul
repnz
insb
mov
add
jnp
mov
mov
xor
mov
push
dec
aam
enter
ja
push
test
dec
inc
leave
lcall
in
inc
les
xor
mov
aas
and
mov
cmp
out
add
add
mov
divb
add
mov
je
loope
jge
bnd
push
xor
sub
imul
mov
inc
jo
lcall
outsb
imul
fnsave
pushf
or
daa
inc
stos
out
roll
push
jbe
pop
sub
in
aaa
mov
xchg
les
hlt
cmp
dec
xor
xchg
xchg
dec
pop
sub
rcl
mov
dec
ffreep
pop
cmp
cmpsl
xchg
lcall
add
xor
sbb
or
mov
adc
cs
pop
lods
inc
in
movsb
push
pop
push
push
dec
rcll
push
cmpsb
into
xchg
xor
adc
xchg
and
ja
inc
inc
adcl
lahf
gs
xchg
inc
dec
push
xchg
cld
outsl
pushf
scas
dec
sahf
aaa
and
xchg
ret
xlat
adc
adc
popa
sub
sbb
mov
or
or
repz
mov
xchg
mov
jns
inc
and
sbb
pop
jmp
lahf
push
add
loope
push
sub
push
scas
fcomps
xchg
xor
fsubr
add
test
sar
dec
cmp
divl
pushf
lock
popa
mov
push
jns
adc
sbb
add
cmpsb
jmp
xchg
fs
cmp
jb
or
fisubl
mov
bound
add
add
lret
dec
add
jns
and
test
scas
push
les
and
insb
movzbl
je
inc
ret
inc
xchg
das
notb
sbb
jge
js
adc
pop
int
mov
lea
cltd
inc
mov
push
adc
dec
xchg
push
sbb
pop
loopne
test
mov
cltd
iret
mov
inc
fdivr
mov
mov
adc
ds
mov
insl
or
js
mov
lahf
jo
fidivs
mov
fdivl
in
push
xor
mov
pop
jle
aad
ljmp
push
push
cltd
push
ret
pop
pop
std
hlt
adc
xor
fidivl
lds
pop
dec
jne
ss
and
je
popa
shrl
push
divb
and
mov
ror
xlat
xchg
das
inc
shrl
nop
xchg
xchg
shll
mov
inc
test
gs
pop
xor
mov
push
push
scas
outsb
jmp
cmp
mov
icebp
out
mov
ljmp
push
test
cmpsl
imul
xchg
adc
clc
sbb
hlt
lock
jo
int3
add
add
xchg
push
and
loop
pusha
prefetch
jle
mov
push
js,pt
mov
push
mov
push
aaa
push
adc
test
add
add
or
inc
pop
inc
aaa
sub
insb
ljmp
xor
addl
add
add
or
inc
and
test
cmc
ja
repz
sbb
push
fwait
xchg
fidivs
jbe
mov
sub
dec
push
js
je
pop
inc
jae
mov
sub
push
mov
je
popl
push
xor
add
inc
jae
mov
orb
fistpl
xor
mov
cmp
stos
or
in
fs
sti
jo
ljmp
mov
repnz
sub
sub
add
cmp
faddp
call
mov
xor
sub
mov
sub
xor
pop
xor
xchg
jnp
add
and
scas
jg
imul
in
icebp
jbe
mov
xorl
clc
test
cmpl
aam
add
xor
nop
xchg
mov
pop
mov
jns
ljmp
jmp
repnz
cmpsl
mov
mov
fcom
lcall
cltd
mov
or
mov
mov
cmp
std
je
adc
mov
sub
fs
inc
adc
or
pop
incb
add
aas
ja
cmpsb
outsb
push
std
sub
push
mov
fbstp
xchg
aam
mov
call
push
inc
sbb
pusha
pop
xchg
es
lret
in
aaa
mov
pop
pop
jg
sbb
mov
enter
mov
sbb
es
scas
add
mov
imul
mov
mov
bound
out
mov
aas
pop
imul
pop
fld
xchg
jbe
mov
shll
or
jl
cli
fiaddl
cmc
lret
dec
dec
mov
add
shl
inc
push
sub
pop
fmuls
sbb
xor
imul
lock
push
xchg
add
cs
dec
repnz
dec
movl
add
add
mov
jmp
aaa
push
adc
sub
dec
pop
xor
mov
das
test
xchg
dec
sbb
rorl
sub
push
mov
lea
pop
or
in
lock
mov
cli
and
in
insb
mov
and
sbb
scas
inc
jae
pop
je
xchg
pop
pop
xchg
cmp
mov
adc
add
add
mov
lds
cmp
xchg
fldenv
mov
andb
or
pop
push
cmpsl
push
int
and
adc
rorl
sub
roll
sbb
and
es
and
add
xchg
ret
enter
inc
in
push
dec
je
jb
sti
testl
out
andb
cwtl
mov
sbb
cmpsl
mov
fcmovu
mov
inc
sub
lock
hlt
pushf
mov
repnz
in
cmp
dec
pop
and
rol
inc
scas
shlb
jp
xorb
movsb
cmpb
cltd
frstor
pushf
jns
cld
jnp
outsb
add
mov
decb
pop
call
adc
mov
ret
xchg
jns
je
xor
adc
mov
and
add
sub
and
add
sub
dec
push
mov
stos
and
mov
repz
or
mov
lock
mov
pop
sbb
and
sbb
push
fs
push
jae
popf
movl
scas
pushf
out
xor
lock
lcall
nop
jecxz
mov
sbb
push
popa
and
xchg
push
add
and
adc
out
roll
lcall
dec
cmp
test
fstl
mov
std
adc
and
push
insb
push
lods
pop
icebp
mov
cmpsl
into
cs
rcll
out
add
pusha
mov
adc
test
xor
loopne
in
ror
push
push
jnp
xchg
mov
mov
xchg
insl
ljmp
fsubp
inc
aam
test
paddb
mov
mov
xor
cmp
scas
push
mov
cld
mulb
bound
ret
lods
nop
jae
sbb
mov
or
gs
add
fdivr
pop
ret
add
rorb
fcoml
mul
insl
ror
loop
inc
push
in
push
adc
xchg
sahf
xchg
push
fisttps
xchg
push
ret
jl
hlt
add
mov
faddl
jns
daa
shrb
test
sbb
xchg
ret
insb
fbstp
mov
jge
shll
test
pop
xchg
ljmp
jle
shl
add
iret
xor
push
inc
into
jge
or
xor
outsb
fcomip
mov
xchg
daa
mov
or
jmp
je
fwait
popa
clc
outsl
mov
outsl
cld
repz
xor
mov
cmpsb
mov
loopne
ror
mov
lret
enter
movsl
hlt
pop
mov
push
jae
out
jns
jno
inc
jg
out
mov
mov
insb
push
lods
push
fstps
test
sti
add
xchg
dec
lahf
adc
push
cwtl
dec
aam
cmp
out
das
cld
xor
cmpsl
push
adc
mov
mov
cmp
scas
mov
cmp
dec
call
popa
mov
aaa
pop
lods
fwait
rol
push
lahf
ss
dec
ret
inc
shll
leave
cmp
popf
dec
mov
les
push
in
or
or
xchg
arpl
and
inc
repz
pushf
loopne
jb
mov
stos
dec
jnp
shl
dec
sub
mov
mov
fidivrl
lock
sahf
fadd
aam
lods
mov
jns
ljmp
jb
add
ret
cmc
or
andb
ja
cltd
popf
lahf
scas
push
popf
mov
outsl
fmuls
jecxz
inc
dec
sub
aam
lea
cld
pusha
js
add
mov
add
add
pop
scas
jp
fistpll
cs
xchg
fdivs
mov
lea
mov
and
jl
push
pusha
mov
test
push
test
mov
jle
add
add
add
cwtl
sbb
addb
cltd
mov
lea
insl
push
add
or
mull
inc
fmulp
cmp
loope
into
popa
insl
jmp
shlb
repnz
fcompl
pop
test
in
sub
adc
mov
dec
xlat
pop
xchg
fcmovnb
fcmovnbe
in
mov
or
lds
pushf
adc
sub
pop
cmp
add
add
inc
sbb
nop
out
add
push
std
sahf
repz
and
and
mov
imul
xor
sub
roll
xor
out
movsl
pop
push
mov
add
js
bound
rcl
scas
dec
fadds
jns
jns
nop
cmp
and
adc
fs
or
out
pusha
pushf
lds
mov
and
lret
lret
sbb
sub
cwtl
pop
push
pop
push
movsl
fwait
cmc
sti
xchg
lret
hlt
shrl
dec
xlat
setbe
cmpsb
lock
push
jns
scas
xchg
stc
dec
fisubl
dec
call
push
sbb
push
cltd
movsb
sbb
push
mov
cmpsl
inc
popf
out
xchg
addb
xor
xchg
push
repnz
push
das
frstor
out
dec
adc
idivb
cmp
fmul
mov
ror
or
loope
daa
je
mov
mov
add
add
pop
pop
mov
notl
mov
adc
xchg
push
leave
daa
lods
sub
or
mov
je
jl
stos
jl
dec
mov
add
pop
aam
add
scas
cli
shlb
cmc
scas
jl
test
mov
adc
aaa
fstl
pop
cmp
mov
add
outsb
gs
lret
jecxz
insb
clc
xchg
or
sub
jo
cwtl
xorb
pop
xor
dec
cmp
js
adc
stc
nopl
cmp
jle
xor
test
mov
xchg
xor
add
pusha
xor
mov
jnp
xchg
out
frstor
add
loopne
sub
aas
xchg
nop
inc
adc
aam
add
add
lcall
mov
sub
cs
insb
popa
test
dec
mov
stc
jb
popa
pusha
pop
sti
pop
pop
out
xor
and
test
pusha
push
jo
popa
mov
dec
xor
lret
jg
hlt
cli
jg
shrb
cmpb
add
fld
jecxz
sub
xchg
mov
jl
mov
pop
mov
mov
and
into
xor
adc
adc
jns
popf
jno
aam
repz
ss
cmp
mov
jb
arpl
add
add
mov
mov
ds
pop
daa
or
loope
ret
sub
adc
lret
shlb
imul
add
outsl
std
imul
and
xchg
pop
fsubrs
add
xor
push
pop
mov
dec
hlt
aaa
adc
lret
jg
push
enter
push
das
mov
loopne
subb
leave
cmp
stc
in
xlat
out
movsb
adc
cmpl
jne
add
add
inc
cmp
test
mov
lods
jg
mov
push
jbe
cmc
mov
sbb
add
stos
sub
pop
sub
sbb
cwtl
cwtl
xorb
lret
mov
icebp
pop
mov
lret
xchg
fnstsw
fcomi
pop
jns
add
imul
andl
pop
lret
mov
cmpsb
icebp
gs
je
stos
push
lahf
push
gs
cmp
dec
leave
ret
aad
xchg
sub
pop
inc
stos
ret
movsl
in
sti
pushf
dec
idivb
out
hlt
sbb
aas
insb
mov
aam
faddl
outsl
inc
les
testb
test
push
sbb
jb
adc
or
and
cld
xor
mov
repnz
jne
iret
mov
inc
bound
and
push
mov
mov
dec
add
or
hlt
or
ret
inc
aaa
fstps
xor
jns
push
mov
stos
out
mov
movb
imul
and
popa
fwait
xchg
mov
movq
insl
dec
in
add
jmp
mov
mov
push
pop
lcall
add
add
nop
mov
push
mov
sti
insl
movsb
cmp
cmc
or
pop
push
aam
fistl
hlt
lcall
imul
or
int3
inc
aam
mov
xchg
inc
push
cmp
dec
std
mov
arpl
add
add
in
repnz
push
pop
ret
shll
scas
ret
fucom
lods
xchg
insb
mov
imul
inc
xchg
mov
test
pop
int
jnp
inc
les
aam
subb
cmp
lret
aaa
sub
daa
cmpsl
rcll
mov
xchg
push
inc
inc
out
mov
lret
pop
pop
or
data16
dec
call
roll
ss
jge
cmp
mov
pop
adc
mov
add
sub
in
mov
iret
push
lret
push
lds
push
pop
cmpsl
loopne
xchg
pop
dec
into
jo
and
xor
shr
add
add
pusha
lods
lds
add
add
adc
bound
jns
lret
ret
inc
or
inc
or
push
es
and
mov
repz
jg
mov
sbb
xchg
seto
sub
xlat
and
ds
pop
loope
cmp
daa
sti
mov
pop
nop
push
mov
jge
shrb
pop
scas
mov
in
pop
cmp
arpl
jo
mov
xchg
pop
lods
gs
mov
pop
xor
call
shll
insb
mov
outsb
push
jb
mov
pop
xor
in
icebp
fcoml
enter
fscale
mov
and
test
xor
int3
inc
jne
xchg
add
inc
pushf
and
shlb
jle
mov
mov
sub
idivl
pop
jg
std
push
out
jle
mov
and
pop
js
movsb
inc
nop
fists
cmp
mov
xchg
je
push
dec
andb
or
or
jecxz
add
add
stc
jecxz
insl
xchg
mov
sarb
inc
rcrl
aas
je
and
cmp
cmpsb
cmp
push
shll
adc
dec
ds
dec
outsl
nop
xchg
mov
dec
cmp
repz
mov
adcb
pop
outsl
xchg
dec
adc
cmp
in
fcomps
push
cs
xor
insb
cmc
adc
mov
sbb
in
dec
call
lods
jns
gs
mov
out
mov
rclb
fstp
mov
adc
mov
mov
sti
sub
arpl
enter
rclb
in
dec
or
lea
and
pop
or
jecxz
and
dec
xor
inc
ss
imul
mov
add
add
push
lods
jecxz
push
repz
xchg
fildl
and
sub
push
lods
dec
in
push
aam
cmpsl
subl
or
rcl
xchg
or
xchg
imul
test
ret
cmc
adc
push
jl
bnd
inc
cmc
dec
mov
or
xchg
test
aam
gs
popl
jo
jmp
stos
push
aas
mov
add
add
in
loopne
pop
jb
ljmp
cwtl
out
xchg
cmpl
ljmp
and
icebp
and
je
in
sbb
aaa
shrl
data16
push
hlt
cmp
fisubrl
stc
sub
jnp
cmp
sbb
jb
lcall
jo
mov
in
jo
insb
sarl
insb
mov
jne
xchg
cld
sarb
push
push
xchg
cld
cmp
mov
mov
scas
pop
cmp
not
push
push
addr16
cmp
jle
xor
adc
push
sub
adc
lods
push
rcll
xor
add
add
adc
xchg
fidivs
sti
fcomip
xor
or
pop
mov
pop
or
jo
xor
or
mov
nop
ret
inc
jl
fstp
cltd
pusha
cmc
pop
out
pop
insl
clc
inc
or
pop
loopne
sub
fistpll
repnz
imul
inc
repnz
push
sub
mov
mov
push
stc
xchg
sub
inc
mov
jno,pn
cmp
mov
dec
push
push
push
push
pop
mov
adc
jae
adc
mov
scas
outsl
insl
scas
sbb
in
das
les
test
or
push
jns
decb
push
push
mov
mov
sub
aas
cli
xchg
mov
shrl
scas
mov
ja
fadds
and
push
lds
mov
movsb
jo
xlat
pop
int3
loop
pusha
lds
rorl
mov
and
rcrb
aad
push
sbb
hlt
ljmp
adc
mov
scas
or
add
push
in
add
dec
add
adc
mov
xor
ret
pop
sbb
bound
xchg
dec
cmp
cmpsl
inc
cmp
dec
flds
mov
push
arpl
repz
add
addb
cs
or
lock
call
add
fistl
int
fistpl
pop
enter
xor
lret
sbb
imul
inc
enter
sahf
adc
roll
fcoml
sub
imul
nop
mov
mov
push
xchg
addr16
flds
test
call
addr16
mov
pop
mov
adc
mov
sbb
sbb
pop
stc
fnstenv
cmp
or
insl
adc
es
cwtl
adc
and
jo
mov
push
lods
pop
xorb
add
add
push
fnop
movsl
fimull
or
fldl
adc
outsl
mov
and
mov
sarl
push
pop
ficompl
mov
cltd
cmpsl
les
and
inc
in
ret
pop
pop
add
push
inc
pop
xchg
mov
jbe
in
add
xchg
adc
push
outsb
lods
pop
xchg
fmul
xlat
insb
push
mov
pop
pusha
in
push
fiaddl
inc
inc
xor
fists
aaa
in
iret
jns
xchg
mov
inc
orl
cmp
fdivrs
push
push
mov
cmc
mov
pop
inc
in
pop
or
movsb
insl
scas
icebp
push
sarb
mov
mov
out
test
inc
fwait
dec
xchg
lcall
ss
popf
flds
sub
jno
jmp
loop
stc
adc
mov
subl
dec
cmp
mov
add
shlb
not
sub
mov
add
add
out
jae
and
scas
loopne
mov
out
dec
les
and
into
rcrl
jge
imul
daa
cld
stos
xor
stos
test
iret
aad
je
outsl
and
and
adc
sbb
inc
cmp
iret
gs
jp
fisubrl
sub
mov
cs
addl
sbb
jnp
arpl
lods
mov
push
xchg
mov
test
imul
scas
mov
push
push
test
int
scas
and
in
sub
jg
loope
rolb
add
add
addr16
pop
daa
cmpsb
cs
or
and
mov
dec
imul
mov
out
js
cmp
sahf
test
jnp
ja
lds
push
daa
mov
jb
or
mov
mov
mov
inc
mov
mov
into
cmc
sub
scas
stos
jne
mov
cwtl
ljmp
cmp
sti
lea
mov
xor
jmp
lds
cmc
mov
imul
fwait
sti
mov
xchg
sbb
gs
sub
arpl
lahf
sub
popa
cmp
rcrb
mov
and
fistpll
add
movb
pop
mov
pop
stos
or
mov
clc
lea
sub
add
add
imul
and
bound
pop
loop
jne
sbb
out
daa
mov
mov
stos
inc
xchg
sti
out
xchg
stos
sbb
sbb
mov
add
add
daa
cmp
mov
imul
jae
xchg
pushl
adc
push
xorl
mov
movnti
and
mov
cmpsl
push
and
clc
mov
test
xchg
push
and
cs
popf
pop
push
jg
mov
pop
ds
mov
inc
daa
stos
mov
bound
loop
mov
pop
nop
scas
test
add
add
cli
inc
xchg
xor
cltd
in
repz
scas
sub
mov
and
in
fdivrl
sbb
jne
add
inc
xchg
pop
jg
mov
xlat
popf
clc
hlt
aas
pop
adc
lods
inc
add
cmpsb
push
sbb
mov
cltd
lcall
adc
push
sahf
sub
jne
les
das
fisubs
jp
or
fildll
imul
fs
popf
les
pop
and
insl
mov
mov
sbb
mov
subb
stos
xchg
movsb
lods
mov
dec
mov
ds
dec
inc
icebp
gs
push
sbb
pop
pop
stc
jo
sbb
push
xor
inc
mov
dec
outsb
sub
push
fwait
popf
xlat
add
shl
loopne
push
mov
mov
sahf
outsb
push
aaa
bound
imul
add
idiv
jg
mov
in
pop
push
cmp
lret
mov
idivl
push
fdivs
lock
push
dec
mov
and
out
mov
shr
cmp
push
add
jnp
mov
int
das
cmp
or
xchg
ficoms
js
out
jmp
es
sbb
inc
pop
fisubl
ja
repz
dec
inc
ljmp
jo
push
sbb
sub
stos
in
push
mov
pop
pop
bound
and
ja
pop
es
shr
mov
repz
cmp
inc
xlat
adc
mov
xlat
pop
out
js
xor
cmpsb
bound
add
add
fdiv
add
fsubl
repz
xor
sub
pop
adc
lret
repz
push
stc
scas
add
rcr
shrb
arpl
stc
xor
daa
xor
adc
decl
pop
pop
fidivrs
jo
add
mov
ret
pop
xchg
push
rcll
xor
repz
and
mov
jns
lret
jmp
push
sub
push
and
test
push
sahf
scas
cmp
data16
adc
movsb
cli
lahf
xchg
adc
pusha
adc
mov
sub
je
ds
movsl
and
cs
inc
outsl
pop
bound
xchg
lods
test
sbb
mov
xchg
xor
or
addr16
xlat
iret
push
and
push
fcoml
arpl
push
test
sarb
jecxz
push
dec
xchg
ret
or
pusha
pushf
add
push
ret
push
popf
pop
aam
in
dec
imul
pop
out
cmp
add
mov
enter
adc
mov
mov
fldpi
je
out
adc
aam
dec
pop
mov
push
pop
mov
jp
jmp
dec
jecxz
or
rcll
mov
pushf
pushf
push
or
jo
mov
dec
pop
fld
bound
lds
fwait
mov
lock
adc
pushf
mov
xor
cwtl
in
flds
scas
clc
xor
dec
mov
push
inc
rcrb
fcomip
fucomi
mov
pop
mov
add
add
mov
pushf
jg
in
inc
pusha
xor
push
int3
adc
arpl
add
dec
inc
xor
and
repz
dec
pop
push
xor
daa
jecxz
or
xchg
inc
pop
arpl
xorl
adc
or
es
xchg
cmc
push
aad
mov
fdivs
div
dec
imul
xor
xchg
fistps
enter
pop
xor
cwtl
out
and
adc
rcr
aad
jmp
cmp
or
pop
add
jbe
ja
push
mov
movsl
ljmp
ss
loope
call
pop
jb
add
push
sub
outsb
or
cmp
xchg
adc
lea
jg
dec
lods
lods
jg
push
ljmp
ja
sub
out
lahf
jl
mov
inc
push
push
ficomps
xchg
mov
inc
loopne
pop
and
vpermpd
mov
add
push
and
mov
or
inc
mov
sub
cmp
mov
cmp
push
cmpsb
push
lods
outsl
loopne
scas
mov
pop
sbbl
push
push
dec
jnp
inc
bound
cltd
icebp
pop
lods
sbb
xchg
push
fldcw
cltd
push
push
lods
pop
stos
xadd
cmp
int3
add
add
pop
lahf
insl
inc
push
pop
pop
sar
out
xchg
mov
or
in
push
test
pop
inc
les
add
add
add
add
lcall
std
mov
sub
js
sbb
sub
and
divl
cmc
mov
aad
lock
imul
pushf
cmp
aaa
sbb
jecxz
shl
rolb
add
loope
xchg
andl
or
movsl
dec
lods
adc
popa
cmpsb
test
pop
sbb
pop
inc
dec
push
fs
bound
xchg
pushf
clc
nop
push
cmpsl
fsubr
fistl
and
inc
mov
pop
loop
out
cmc
ds
add
lods
xchg
in
out
call
jg
clc
mov
adcl
pop
lock
les
leave
insl
and
inc
inc
xor
jecxz
rcrl
repnz
sub
push
es
pop
icebp
jge
cmpsb
pop
sti
scas
pusha
sub
mov
out
xchg
jle
cmpsb
imul
outsb
das
sbb
pop
xchg
jb
push
pop
or
mov
jl
pushf
jmp
scas
rcrb
int3
push
pop
mov
les
and
jo
shl
push
push
into
fildl
add
pop
jnp
push
popf
das
out
mov
add
fwait
xlat
xchg
and
stos
inc
add
sbb
fucomip
cmpsb
out
add
scas
adc
adc
mov
or
and
push
xchg
lods
mov
push
in
fsubrp
adc
xchg
das
popa
test
gs
push
stos
repnz
push
sub
cmpl
add
add
hlt
jge
stos
into
lret
fbld
in
xchg
sarl
jl
xchg
std
repz
mov
jg
hlt
movl
cmp
bnd
dec
mov
sub
sbb
mov
clc
xor
mov
das
push
dec
or
adc
jae
fidivs
andb
fdivs
xor
lcall
cmp
add
add
in
jge
mov
xchg
stos
inc
mov
out
jb
push
mov
mov
jmp
xor
push
out
gs
in
rcr
sbb
sub
and
leave
mov
mov
and
andl
adcl
mov
ftst
and
shr
das
fstpt
mov
js
add
add
sub
outsb
negl
mov
jle
jno
jb
xchg
cmpsl
cs
pop
or
and
leave
dec
rorl
sub
xor
or
mov
add
add
jp
std
dec
in
and
je
std
sub
in
mov
mov
int
adc
test
xchg
jb
outsl
aas
xchg
fstpl
leave
pop
int3
movsb
add
outsb
xchg
pop
es
cmpsb
push
mov
insb
test
push
pop
pop
aas
adc
int
xor
clc
mull
jnp
adc
cmpsb
push
push
fdivrl
scas
filds
fs
mov
xchg
push
aas
adc
mov
mov
xor
imul
stos
and
xchg
jne
fs
and
popf
and
cmpsl
adc
cmp
cmp
mov
sub
aad
inc
andl
sbb
mov
push
lds
test
insl
or
push
ret
push
xchg
vcvtss2si
repz
inc
aaa
mov
fldcw
push
out
mov
scas
inc
cmp
mov
pop
jp
mov
push
add
sarl
jmp
fdivl
add
add
add
sub
nop
or
out
xchg
lock
cmc
out
inc
inc
repz
leave
xchg
cli
enter
fisubs
mov
add
and
pop
mov
pop
adc
cmp
xlat
sbb
sub
jl
dec
jbe
and
dec
sbb
cmp
mov
into
sub
dec
mov
fldcw
sbb
aas
mov
jle
pop
dec
daa
leave
mov
test
xchg
idiv
loopne
xchg
jae
daa
jle
loop
mov
jl
test
push
sbb
sub
js
and
adc
ret
push
sub
xchg
mov
mov
fwait
adc
jl
inc
push
call
fnsave
push
lock
out
or
out
int3
loopne
js
adc
and
jbe
out
jp
sub
mov
daa
rcll
pop
add
mov
fld
and
inc
jecxz
mov
fmuls
sub
xor
aam
cli
mov
addr16
iret
cmp
cld
pop
jg
jb
jge
sub
pop
pop
mov
cmp
out
pop
xor
or
loope
iret
or
xor
std
xchg
mov
cli
ficomps
mov
or
rorl
adc
jg
pusha
cwtl
and
into
or
test
mov
fldl
mov
addr16
ret
jns
in
notl
xchg
fidivrs
add
inc
in
pop
addr16
cmpsl
add
pop
repz
mull
leave
mov
iret
mov
pop
stc
push
lds
sbb
dec
sub
sub
adc
sbb
inc
call
push
lea
ja
mov
in
add
xchg
popf
sti
fwait
push
and
in
cmp
pop
fdivrl
popa
cltd
sar
lds
pop
stos
imul
in
mov
xor
loopne
jmp
add
ljmp
add
add
and
or
xchg
sub
sbb
or
negl
fwait
in
movsl
adc
push
and
int3
pop
inc
sub
and
add
xchg
lock
in
add
xchg
and
scas
jecxz
add
inc
loope
or
rcrb
call
cltd
adc
cwtl
repnz
lret
lea
fsubl
cmp
or
test
add
and
mov
mov
lcall
jo
cmp
lcall
mov
sub
mov
and
add
sub
mov
fdiv
add
cmpsb
jae
out
xchg
dec
cwtd
mov
cmp
pop
daa
dec
enter
or
inc
or
and
rclb
cmp
lods
test
test
pushf
push
cwtl
and
mov
adc
ficomps
shlb
jl
and
fwait
jno
out
mov
dec
cld
insb
popf
xchg
iret
dec
sub
subl
sti
ss
cli
icebp
sbb
stos
sbb
inc
jne
pop
push
inc
into
mov
pop
test
mov
adcb
cmc
jp
adc
mov
cmp
pop
xor
sbb
out
dec
xor
jno
js
mov
push
cmp
jo
mov
add
add
in
cmpsl
and
imull
pop
mov
add
aam
pop
enter
fcoml
in
push
fnstenv
adc
pop
jns
pop
and
mov
leave
add
push
push
pop
jno
aad
mov
fisttpl
mov
jmp
mov
ljmp
sub
cs
inc
movsl
lea
in
sub
cmp
pop
ljmp
jb
jne
jbe
enter
popw
popa
xor
push
in
sbb
xor
pop
push
mov
mov
dec
nop
aas
xchg
xor
inc
inc
sub
jno
xor
push
jg
jne
and
inc
bound
mov
cmpl
xchg
pop
aam
jmp
arpl
rol
out
leave
mov
lret
lcall
and
lock
sahf
and
dec
inc
aam
pop
inc
sbb
mov
clc
fnstenv
fsubrs
std
xchg
gs
and
inc
adc
jo
icebp
pop
bound
scas
sahf
and
mov
mov
call
add
sub
loop
sbb
ret
cmpl
in
sbb
inc
movsb
js
in
fs
inc
adc
cld
sbb
outsb
fwait
jno
test
dec
lret
scas
add
mov
dec
cld
jb,pn
lds
inc
sbb
pop
add
dec
pop
inc
sarl
xor
lock
jo
sub
pusha
icebp
dec
pop
xchg
mov
push
xchg
adc
adc
inc
mov
shrb
fs
js
daa
push
or
push
xrelease
add
outsl
xchg
add
test
sbb
inc
jge
and
adc
sti
lret
stos
les
adcl
out
inc
adc
cltd
xchg
icebp
sti
mov
sbb
adc
subl
in
pop
jle
lahf
scas
mov
pop
popf
dec
sbb
mov
adc
mov
cmpsl
or
and
and
add
jle
movsb
fcoml
sub
out
cmpsb
arpl
xlat
sub
fiaddl
jns
outsb
sbb
jo
push
stos
cmp
mov
sti
loope
push
add
and
push
inc
jmp
lock
and
xor
pop
push
lcall
jg
stos
in
inc
mov
lock
leave
add
mov
jp
pop
loope
das
out
jo
lret
imul
data16
psubusw
inc
rorl
dec
jecxz
inc
mov
out
repnz
add
dec
push
cmpsl
mov
fldcw
mov
inc
jns
or
scas
cmpl
int3
call
test
call
inc
add
mov
cmp
add
stos
xlat
mov
loope
sbb
mov
inc
xchg
jne
aas
mov
out
jecxz
scas
repz
cmp
sbb
push
mov
cmp
insb
fisttpll
adc
add
mov
jle
push
cli
mov
push
sub
pop
mov
cld
inc
pop
push
push
dec
pop
ficompl
insb
movsb
jge
and
mov
xor
pop
stos
popf
loope
pop
mov
push
sub
push
pop
stos
add
mov
sti
jle
sbb
roll
add
add
sahf
les
and
cwtl
pop
add
out
jnp
cmc
and
mov
sub
adc
addl
pop
mov
bound
loope
or
data16
mov
jae
addr16
repz
lods
lds
std
fcoml
push
cmp
mov
scas
out
call
test
add
mov
cmpsb
push
out
shrl
pop
lock
push
xchg
call
xor
mov
dec
pop
mov
js
xchg
mulb
shl
std
dec
cmp
push
mov
dec
jg
jl
sbb
lret
nop
loopne
inc
xchg
std
test
dec
popl
add
add
xchg
decl
cmpsl
cltd
in
add
pop
popa
pop
dec
jg
and
es
leave
mov
jp
rorl
sub
and
add
add
hlt
dec
adc
fmuls
repz
jae
fiaddl
sti
add
call
cmc
roll
aaa
or
in
in
enterw
mov
les
lcall
shll
sbb
cmc
in
xor
fildl
gs
aaa
out
stc
stc
lret
dec
mov
inc
sub
lahf
adc
jno
ficoms
adc
in
inc
ja
rcrb
dec
inc
je
push
adc
adc
icebp
add
add
push
jge
cmpsl
clc
in
jno
cli
ja
jns
push
push
clc
cmpl
enter
orb
je
mov
jae
dec
in
loope
scas
loopne
rcr
sub
jnp
add
add
in
das
lret
jle
popf
mov
mov
add
jne
shlb
pop
cwtl
push
mov
popf
jne
xor
mov
mov
mov
insb
jmp
cmp
call
add
add
dec
push
inc
divl
pusha
add
cmp
test
mov
nop
xorb
scas
in
sub
add
std
lret
test
adcb
and
push
inc
clc
cmp
popf
icebp
jle
dec
ja
cltd
push
or
jle
cmc
hlt
dec
xchg
and
dec
cltd
cmc
dec
sub
lret
adc
adc
jns
in
dec
mov
add
jmp
dec
add
shl
mov
fcompl
add
add
pop
std
cld
lret
pop
jge
orl
sti
popl
jns
rolb
into
xor
shrl
inc
jmp
mov
pop
loop
or
cmp
jbe
jbe
sub
mov
test
push
mov
cmp
cmp
out
sub
ljmp
cmp
aad
mov
and
cwtl
daa
out
cli
adc
sub
jmp
repnz
pop
pusha
repz
pusha
js
jge
sbbl
push
mov
fcomps
pop
mov
out
inc
or
xor
or
in
iret
sub
adc
aaa
jno
cmpl
js
cmp
inc
out
data16
xchg
pop
and
mov
into
push
jp
subb
call
sbb
inc
pop
cltd
jae
scas
imul
movsl
int3
fbld
jnp
insl
xchg
nop
mov
add
pop
or
test
mov
mov
or
test
pop
mov
imul
scas
cmp
fwait
push
cltd
je
pop
stc
test
mov
lret
in
xlat
add
xchg
xchg
jle
fcomps
cmpsb
sbb
push
pushf
in
dec
out
jecxz
add
inc
outsb
xor
adc
mov
fnstcw
jle
jo
mov
int3
outsb
dec
jb
shrb
jae
ljmp
cwtl
adc
ja
add
cmpl
outsl
cmpsl
or
call
test
arpl
jb
jl
outsl
jl
jg
pop
adc
mull
and
in
xchg
xor
mov
into
jl
inc
je
daa
das
inc
sub
aaa
bound
sbb
adc
xor
inc
or
mov
mov
jne
in
or
leave
pop
cmp
loop
pusha
add
or
mov
pop
and
xlat
jmp
test
jo
pop
sub
push
inc
aas
pushf
mov
xchg
dec
aaa
pop
fs
inc
stc
movb
pop
jmp
je
jns
imul
mov
mov
shlb
pop
je
jl
dec
mov
mov
daa
mov
add
add
bound
fwait
lahf
and
mov
movzbl
add
inc
stos
jno
roll
push
lret
or
xchg
jmp
scas
rorb
push
sbb
out
jne
or
xor
inc
daa
daa
dec
aad
fdivrs
std
adc
add
push
rcrb
pushf
lock
ret
mov
test
jle
jp
xchg
jnp
ljmp
pop
sub
xchg
and
add
sti
fwait
clc
jbe
popf
mov
out
mov
andl
add
cmp
popa
popa
sbbl
xchg
push
xor
mov
sbbb
add
add
and
push
xchg
pop
addr16
fldenv
popa
cwtl
pusha
dec
xchg
scas
clc
mov
add
xchg
cltd
adc
ret
sub
pop
ljmp
mov
push
push
add
pop
mov
scas
dec
out
dec
fisubs
int3
xlat
and
shr
push
mov
rolb
pop
lret
into
daa
outsb
push
xlat
sub
iret
lods
push
pop
mov
pop
leave
bound
popa
cltd
mov
mov
xor
mov
insb
fsub
jne
pop
aad
adc
loop
call
addl
mov
mov
nop
repz
call
out
xchg
js
fdivs
cmp
movsl
mov
scas
push
pushf
shl
sbb
lret
in
sbb
daa
idivb
decb
xor
or
adc
xchg
in
mov
push
and
push
or
push
jmp
shlb
pop
mov
and
out
or
or
bound
mov
cmc
and
in
das
pop
or
pop
lret
jmp
dec
imul
mov
adc
test
adc
mov
jns
scas
imul
into
jp
mov
dec
sbb
sub
add
jg
loop
dec
dec
pop
ss
sbb
out
imul
movsb
shll
inc
int3
sti
pop
lcall
test
dec
mov
xlat
inc
enter
fstl
cmpsl
ja
dec
rolb
test
mov
add
cld
cmpsb
in
add
sbb
jmp
pop
fistps
xor
sbbb
out
dec
aas
ja
fsubrl
clc
dec
pop
ljmp
cmp
ja
sub
mov
push
cmp
cmp
fisubl
dec
aam
push
popf
pop
jg
cmc
lock
loop
jg
dec
add
mov
mov
sbb
fld
shrb
add
add
insl
cld
mov
sbb
xchg
and
pop
pop
fiadds
adc
pop
in
xorb
mov
sbb
add
addb
or
cltd
cmp
xchg
popf
ret
rorb
pop
notb
popa
daa
cmp
je
add
xchg
sub
xchg
mov
pop
inc
inc
es
hlt
popf
xchg
ljmp
push
mov
fsubl
cs
sarb
mov
das
pop
pop
xchg
jmp
in
movsb
jno
sbb
and
push
lret
xchg
cmpsl
out
jbe
dec
pushf
mov
push
cmp
push
ja
lret
jge
hlt
lea
jmp
dec
xchg
mov
sbb
xchg
mov
mov
push
shrb
leave
hlt
adc
jno
imul
mov
jle
daa
inc
xchg
and
clc
lret
xchg
pop
das
sbb
mov
shl
cmp
sub
and
fnstenv
mov
cmp
daa
push
xor
pop
xchg
push
fsubrs
sub
loopne
mov
jbe
and
es
push
nop
push
popf
inc
dec
jl
cmp
nop
xchg
test
nop
je
icebp
dec
cmpsb
fdiv
sbb
shll
mov
add
xor
xchg
popa
push
fnstcw
add
and
dec
data16
jnp
add
add
cmp
sub
mov
jne
ret
nop
pop
cmp
stc
mov
and
int
pushf
cli
mov
push
mov
cmc
jg
or
mov
jns
repz
cmpsl
inc
bts
mov
outsb
out
xchg
jbe
mov
mov
or
push
jge
jmp
ret
jne
sbb
or
jge
add
leave
cwtl
add
lret
iret
repz
jge
mov
inc
outsl
mov
shlb
xchg
mov
lahf
cmp
dec
and
mov
loop
inc
sub
inc
cwtl
dec
jmp
icebp
and
sbb
pop
or
cmp
pop
jg
fildll
add
add
add
movl
xor
pop
fcompl
sub
out
jmp
scas
movsl
fistps
lcall
jge
add
push
scas
xchg
call
sub
xor
mov
test
data16
jmp
daa
push
push
repz
adcb
dec
iret
adc
loopne
sub
and
ret
rcrb
sbb
and
dec
jle
cltd
fdivp
clc
mov
dec
sub
ss
pusha
out
adc
jecxz
xor
pusha
or
mov
notl
push
outsb
fwait
lahf
push
mov
cmp
icebp
imul
jp
cmpb
outsl
xor
negl
mov
sbb
xchg
jecxz
mov
push
or
dec
jle
enter
or
jbe
arpl
push
push
jae
fmuls
enter
and
push
mov
add
mov
mov
xchg
pop
mov
das
dec
pusha
in
test
fs
int3
mov
jo
ds
mov
jb
dec
cmp
call
inc
jge
rorb
out
pop
pushf
popa
insl
pop
into
rorb
fs
sti
test
cmc
es
sar
mov
loope
enter
icebp
movb
sbb
aaa
jno
cmp
lahf
ss
mov
xor
cltd
cmc
leave
fsubs
mov
ret
sti
into
jno
or
sub
les
movsl
inc
out
inc
enter
in
stc
mov
les
add
ds
lds
mov
leave
cmp
lds
push
xor
lea
adc
add
xchg
xchg
push
sbb
roll
fcoml
xchg
pop
std
xor
mov
mov
jle
data16
adc
pop
pop
mov
cmpsb
mov
and
adc
lahf
xchg
dec
adc
outsl
mov
insb
jle
rcrb
out
pop
loopne
mov
push
jmp
hlt
jp
push
movhps
mov
sahf
and
lea
cwtl
cltd
fwait
test
push
sarl
dec
cmp
aad
icebp
in
mov
in
rclb
push
lret
sub
xchg
cld
mov
add
sbb
rcrl
adc
add
add
and
cmpl
loope
push
inc
jno
je
cmp
inc
js
sub
fsubrs
or
pop
inc
adc
test
and
mov
in
dec
sbb
xchg
mov
push
rcl
popf
lods
fs
push
insl
adc
xor
testb
fsub
repnz
mov
mov
pop
out
cltd
mov
pop
jae
xor
mov
mov
push
cmp
ret
imulb
sbb
cmp
lret
push
repnz
sbb
cmp
xchg
xchg
test
pop
ret
mov
dec
and
stos
adcb
xchg
mov
lret
jge
lods
lds
fiadds
ja
dec
sub
test
and
or
std
popa
clc
jge
mov
sti
push
pop
icebp
ds
dec
push
cmc
jbe
cmpsl
xchg
popa
test
fdivs
push
fs
sbb
jns
pop
or
and
and
aaa
pop
xchg
push
ret
dec
dec
sti
adc
push
and
dec
push
out
or
sub
add
inc
lret
xchg
lods
inc
and
repnz
loopne
mov
dec
jns
sbb
lret
mov
mov
rep
fcmovnb
and
cmp
js
jp
sbb
or
lds
sbb
out
jp
std
and
ds
loop
sub
pop
test
xor
pop
fcompl
fsubl
add
add
jle
inc
insl
jl
test
sub
movsl
fs
aaa
xor
lret
mov
push
push
stos
adc
add
or
lcall
je
test
pop
xchg
out
xchg
cmpsb
cltd
inc
mov
jge
xor
mov
sub
fisubl
scas
add
sub
scas
ljmp
cwtl
test
dec
clc
into
clc
or
inc
lahf
mov
sar
add
dec
stc
xlat
adc
fstpt
fildll
in
sub
jbe
mov
stos
mov
push
enter
enter
dec
ds
ss
stc
jl
jne
inc
inc
mov
sti
mov
shl
fsubrs
cli
cmpsb
out
std
movsl
arpl
cld
ret
mov
aad
lcall
jle
imul
mov
clc
loope
pushf
int3
mov
shrb
cmp
pop
lret
adc
sbb
in
xor
or
cmpsl
add
and
mov
or
cmpsb
cmp
and
in
std
pop
fisttpll
loop
out
in
jns
cltd
fdiv
push
cmp
add
add
add
add
jnp,pn
lahf
mov
mov
xor
mov
clc
xchg
mov
mov
push
xchg
pop
xchg
dec
je
cli
add
xlat
mov
jo
xor
xchg
sub
and
mov
jmp
aad
mov
std
jecxz
push
adc
iret
jl
cwtl
mov
mov
cmpsl
push
pop
mov
mov
pop
mov
lret
mov
das
sahf
fisubs
push
fistpll
fcomip
jecxz
mov
push
xchg
cmovbe
or
inc
mov
add
je
out
xchg
ljmp
mov
add
mov
mov
add
ljmp
sbb
mov
sbbl
mov
outsb
mov
loope
sbb
sahf
push
iret
out
dec
inc
fstpt
lret
fcmove
imul
stc
mov
xor
add
inc
jmp
mov
data16
jle
inc
mov
nop
jp,pn
mov
push
jb
pop
in
mov
mov
stos
mov
pusha
nop
and
inc
rorl
idivb
sbb
out
test
clc
enter
mov
shlb
add
inc
pop
adc
adc
adcb
adc
sbb
loopne
jmp
add
enter
adc
subl
loopne
sbb
imul
cltd
aam
in
sub
xor
adc
jle
lret
rcrl
into
and
stos
mov
add
add
in
mov
pop
or
iret
mov
sub
les
test
jp
pop
add
xor
mov
test
pop
mov
seta
jp
add
add
mov
pop
pop
fdivrp
ficompl
jo
jbe
fnstsw
nop
mov
shll
sbb
loope
aaa
stos
fld
ljmp
sub
out
lahf
pop
jmp
push
adc
movb
jne
cs
add
ljmp
dec
aas
stos
divb
cs
mov
out
cmc
cltd
and
mov
lret
add
xchg
out
fs
iret
xor
cmpsl
mov
xchg
mov
sbb
dec
clc
shlb
sbb
mov
pop
and
push
imul
sub
stos
cmp
andb
sub
cli
and
adc
dec
push
fisttpll
pop
loop,pn
loopne
push
mov
push
jno
popa
adc
push
push
jno
mov
add
mov
adc
lock
mov
and
mov
pop
scas
pop
ja
xchg
stos
jle
cwtl
loope
mov
sbb
sbb
mov
pop
sub
rcrb
hlt
jo
popf
loopne
push
mov
aad
lock
insb
cmp
xor
or
ret
and
cmp
fistl
jp
or
dec
dec
stos
outsb
out
ret
in
push
jb
cs
add
mov
push
push
push
mov
push
imul
fwait
adc
pop
jns
push
int
xor
push
dec
rorl
mov
pop
mov
add
pop
daa
pop
inc
xchg
pop
lret
and
or
xchg
and
dec
bound
outsl
mov
dec
mov
enter
fldenv
outsb
fcmove
jecxz
es
dec
out
fdivrl
fimuls
or
in
mov
mov
jb
mov
push
xchg
sub
in
aad
aaa
push
jecxz
cmp
inc
mov
mov
aad
subl
jmp
enter
lcall
add
popa
shll
mov
mov
lahf
test
adc
outsb
shlb
les
dec
and
adc
xchg
jecxz
mov
and
lcall
call
scas
leave
sbb
test
in
push
loopne
pop
out
fbstp
cmpsb
mov
sub
xchg
jbe
inc
insl
movsl
sub
dec
add
adc
cli
jmp
test
and
jmp
and
aas
xchg
mov
pop
sub
cmpl
xchg
mov
adc
daa
mov
mov
cli
or
mov
sahf
out
stc
mov
jmp
and
mov
add
add
out
xor
pop
pop
cmp
in
and
aaa
xlat
fcomip
and
xchg
xchg
mov
cmc
outsb
and
mov
movsl
mov
stos
adc
sbb
stc
add
hlt
leave
and
mov
and
add
xor
mov
cld
inc
insb
cmp
out
push
cmpl
ss
addl
xchg
orb
ljmp
inc
cld
jb
outsl
mov
mov
add
or
pop
es
loope
cmpsb
mov
rorb
divl
lods
loope
clc
aam
pusha
into
sbb
scas
out
sbb
fs
adc
test
out
imul
and
mov
ret
outsb
xchg
out
jp
out
jnp
in
push
stos
push
jbe
lds
xor
mov
inc
rcrl
pop
rcrl
xor
inc
jns
add
push
loop
xchg
mov
les
nop
sbb
pop
sarl
sbb
sti
in
popf
mov
mov
shll
pop
lods
xor
xlat
cltd
pop
add
add
add
outsb
push
pusha
mov
push
clc
jb
xchg
fistpl
loope
pop
inc
test
aaa
sub
repnz
cmp
gs
call
out
stos
icebp
fnstenv
jmp
cltd
push
ja
data16
arpl
pop
xchg
cli
outsb
mov
out
dec
add
push
daa
mov
jg
ret
or
popa
or
jle
lock
repnz
inc
or
add
cmp
mov
mov
les
pop
and
fisubs
bound
add
add
add
add
rolb
pushl
lods
mov
add
jnp
nop
push
pushf
jb
pop
pop
adc
das
ret
adc
add
add
and
icebp
ds
ret
jbe
shll
arpl
add
cld
daa
fsubl
mov
sbb
dec
sub
add
jecxz
dec
lcall
jp
rclb
lock
adc
and
push
xchg
push
mov
push
inc
cli
fwait
sub
arpl
dec
push
dec
mov
dec
sub
cli
jg
enter
mov
jne
xchg
dec
dec
ljmp
mov
ficoml
filds
jp
mov
or
andl
push
sbb
movsl
cmpsl
jecxz
into
xchg
jo
push
xchg
les
dec
add
push
jb
out
dec
adc
or
pusha
sub
aad
or
xchg
aad
adc
dec
mov
out
ss
es
loop
ss
je
hlt
lcall
lret
stos
dec
fists
cmp
dec
sub
jns
xchg
cltd
addr16
cmp
sbb
mov
mov
xor
sbb
add
sub
push
sti
jle
cwtl
xchg
je
test
sbb
xor
or
shlb
sub
cmp
mov
lea
outsb
inc
and
sub
cmp
adc
cmp
dec
sub
mov
cmpsb
repz
dec
loopne
mov
inc
decb
xchg
cmp
cmp
jle
jp
xchg
into
rcrl
push
pop
imulb
pop
cwtl
loop
shrl
loope
and
dec
jo
or
leave
mov
xchg
das
sbb
inc
out
imul
rcl
inc
popf
mov
test
sub
loope
lcall
les
in
mov
jg
cwtl
mov
sub
fwait
subl
pop
fists
shll
fsubrs
pop
and
std
pop
in
push
pop
lds
js
push
dec
mov
sahf
out
lret
jle
push
in
in
mov
outsb
inc
fistl
xor
insl
rclb
cld
xor
icebp
call
ja
xchg
push
cwtl
in
jb
jb
and
pop
loopne
mov
jecxz
cvttps2pi
push
daa
jno
mov
fwait
pop
negb
mov
push
adc
jle
outsb
mov
test
lods
inc
incl
daa
and
insl
lret
sahf
mov
jp
stos
cwtl
out
fsubl
sbb
push
or
add
push
das
push
sub
push
adc
xchg
push
sbb
jbe
daa
test
mov
dec
jns
in
pop
cli
cmp
cmc
add
cwtl
cmp
push
mov
je
aas
cmpsl
add
mov
mov
es
loop
xor
mov
push
push
nop
pusha
mov
inc
out
ds
mov
jge
jne
sbbb
das
into
mov
in
push
cltd
outsl
pop
add
stc
pushf
fimull
mov
cmp
aas
in
test
mov
mov
adcb
ds
xlat
ds
push
pop
repz
jns
dec
std
mov
add
fldenv
scas
es
mov
cs
sub
adc
jmp
mov
popa
sub
sub
mov
cmp
mov
movsl
mov
popf
stc
push
test
dec
hlt
int
xchg
mov
imul
sbb
mov
adcl
cwtl
or
nop
jbe
fldl
lret
mov
xor
sub
in
in
mov
mov
sbb
xor
shlb
pop
adc
mov
jge
add
add
lds
or
fsubrl
cmp
cmp
pop
adc
push
out
testb
test
jo
lods
ret
scas
xchg
pop
int3
pop
rcrl
jge
lret
xchg
fs
mov
int3
insb
pop
add
inc
mov
push
insl
push
shrb
cltd
add
sbb
jle
pop
jno
sbb
aad
jne
mov
or
enter
neg
out
push
fidivrl
div
mov
out
mov
aas
in
add
add
iret
lds
mov
mov
test
repz
cld
jg
mov
add
mov
push
mov
das
pop
pop
leave
addr16
rol
jl
cli
fidivs
pop
mov
xchg
aaa
mov
roll
add
add
mov
add
jae
scas
push
in
sub
jg
test
mov
std
sub
push
repnz
or
lret
dec
sbb
outsl
pop
gs
call
push
push
pop
sbb
and
or
repnz
mov
add
rclb
jne
mov
and
cmp
xor
or
mov
push
jne
ja
movsl
mov
outsl
dec
scas
adc
adcb
insl
ret
sbb
outsl
ret
cmp
pusha
jp
jge
pop
loopne
hlt
dec
orl
cmpsb
add
sbb
inc
jge
push
add
mov
push
mov
xor
lock
lcall
shll
inc
push
shrb
fldenv
cwtl
mov
sbb
xchg
movsl
mov
fs
in
out
or
shll
pusha
pop
dec
and
out
in
cmpsl
sahf
pop
adc
ret
inc
out
out
or
add
inc
cmpl
lods
jbe
dec
inc
jo
repz
fcmovnu
xor
xor
outsb
mov
sbb
adc
push
out
rorb
shlb
addr16
aad
test
or
xchg
fs
in
mov
jg
out
push
aad
cmp
add
add
push
push
aas
ljmp
js
andb
cltd
in
jb
cmp
xor
add
add
pusha
mov
mov
or
mov
or
mov
xor
mov
xor
in
lret
lret
lret
adcl
xor
in
mov
push
pop
mov
add
mov
pushf
or
sub
pop
repz
test
fcmovnb
dec
fucom
pcmpeqw
imull
popa
int
add
mov
jne
xchg
insb
mov
outsl
sub
dec
and
fsubl
push
notl
mov
mov
cmpsb
add
jecxz
aad
rorl
add
ret
cmp
adc
enter
in
push
cmp
mov
push
jae
cwtl
outsb
lret
ljmp
int
cmc
ss
stos
dec
dec
adc
lods
xchg
pushf
jb
in
testb
add
test
or
andl
inc
gs
into
hlt
mov
sbb
mov
fimull
fldt
bnd
cmp
xchg
mov
filds
mov
jmp
repz
push
cmc
jae
loopne
or
adc
add
orb
add
or
cmp
int3
mov
jmp
mov
mov
fwait
dec
fwait
scas
popf
pop
inc
in
or
pusha
inc
adc
xchg
pop
bound
sar
ljmp
outsb
mov
ljmp
cmp
dec
or
cmc
mov
jge
jbe
jmp
mov
cmpsl
add
mov
insl
lcall
inc
pop
add
int3
xchg
jae
jb
out
insb
nop
dec
push
cmpsl
fmul
mov
jae
aam
loopne
jle
testb
pop
sub
mov
pushf
push
push
xchg
test
sub
fmuls
jle
andl
int3
insb
mov
pop
cmp
pop
das
pop
ret
dec
imul
add
add
cmp
jnp
popf
or
pop
out
or
clc
test
sbb
outsl
in
std
arpl
mov
jecxz
pusha
arpl
add
xchg
out
sbb
add
mov
push
push
fnstenv
cmpsb
adc
push
xor
pusha
js
or
push
dec
loopne
addl
and
rclb
loope
cli
sbbl
xchg
loope
mov
cmp
adc
push
fistps
push
dec
adc
push
je
push
inc
cvtpi2pd
imul
dec
pop
cmpsb
inc
mov
pusha
decb
ljmp
xlat
push
lods
ljmp
cld
flds
cmp
and
enter
sbb
mov
sti
adc
mov
data16
lahf
movsl
rorb
data16
and
jbe
je
aam
xchg
shll
shr
fisubs
mov
daa
stos
dec
mov
loope
cmc
cli
enter
xor
cmp
icebp
pop
and
pusha
leave
cltd
mov
popa
add
mov
aas
ja
jl
into
cmp
pusha
or
mov
xchg
es
xor
add
and
rcll
and
mov
aaa
or
jns
lock
adc
cmc
cmpsb
add
in
lods
test
push
and
dec
das
cltd
hlt
jecxz
repz
add
xor
rolb
dec
push
mov
sub
bound
repnz
test
sahf
mov
ficomps
mov
jns
cmp
mov
orb
xchg
push
stos
add
testb
ret
in
out
push
xlat
dec
fldenv
add
add
fsubrs
mov
ja
cmc
sbb
pop
mov
jb
dec
ja
test
rolb
insb
fistl
xor
fcomip
jp
cmpsb
daa
lods
mov
push
xchg
stos
scas
lcall
jnp
loope
push
xor
and
lods
cmp
div
mov
dec
push
pop
xchg
sbb
gs
popf
fsts
or
test
xchg
or
adc
pop
push
in
jl
in
fstl
pop
imul
or
xor
incl
mov
push
pop
mov
jno
outsb
cmp
adc
ljmp
inc
push
addl
push
fwait
or
pushf
dec
cmp
rclb
and
or
sbb
add
pop
xchg
shlb
icebp
xorl
xchg
adc
rcrl
inc
mov
sbb
mov
pop
cmp
nop
xchg
push
dec
outsb
stos
mov
pop
xchg
fcmovbe
jp
ljmp
pop
adc
mov
pop
mov
xorl
and
add
add
ss
pusha
cmp
pop
sbb
add
lea
gs
dec
adc
cltd
fmuls
js
loopne
sbb
adc
rcrl
add
int
jno
jno
pop
push
std
dec
cmp
mov
mov
test
add
cmp
outsb
mov
loopne
jle
repnz
stos
subl
fnstsw
fbld
jae
lea
scas
stos
loop
pop
fstpt
into
mov
shrl
out
add
add
mov
and
mov
push
push
dec
fdivrp
jle,pn
mov
sbbb
addr16
cmpsl
pop
dec
imul
lock
ret
mov
aad
in
data16
sub
push
decb
mov
out
xchg
loopne
jecxz
cs
jb
push
test
fidivrl
enter
rcl
mull
dec
fiaddl
or
lock
aas
ja
and
fidivrs
jl
mov
mov
add
int
out
sahf
cmp
pushf
xchg
mov
inc
call
sbb
add
cld
dec
jae
fcom
cmpsb
inc
jbe
outsl
mov
dec
cmp
add
das
xchg
adc
movsb
inc
or
mov
cmp
inc
sbb
jmp
and
xor
fstpt
mov
lds
sbb
sahf
popf
in
mov
pop
mov
add
testl
mov
addb
stos
sub
sbbb
icebp
adc
or
jmp
fs
jecxz
pop
jmp
cmp
arpl
daa
dec
std
subl
pop
sub
aam
mov
dec
add
adc
lock
push
push
fisubrl
mov
outsl
vpand
xchg
dec
scas
dec
mov
aas
cmc
jl
pop
pop
int3
xchg
or
out
jmp
int3
adc
mov
or
repnz
bound
mov
cmpsb
cmp
mov
mov
jb
pop
sub
add
repz
mov
negb
jg
sti
in
outsb
popa
and
sub
push
push
add
lods
lahf
js
xchg
jns
das
int3
out
test
jge
xor
pop
mov
jo
xor
addr16
mov
adc
aad
imul
sysret
movsb
adc
xchg
fdivr
sahf
dec
das
out
adc
mov
and
inc
rolb
inc
mov
nop
shll
dec
in
pop
dec
pop
loop
cmpsl
incb
add
dec
push
xor
stos
lock
out
outsl
divb
pop
neg
mov
push
jg
dec
call
testl
xchg
icebp
cs
cld
push
push
push
push
ss
insl
adc
jae
test
scas
inc
or
in
and
xor
imul
sub
sub
jge
xorl
rol
ret
mov
rorl
inc
push
push
subl
add
and
cs
mov
std
outsb
shrb
test
fs
cli
imul
fidivs
int3
jns
test
inc
popf
hlt
je
mov
in
rclb
push
mov
fs
xchg
in
cld
fisttps
test
loopne
add
mov
mov
lahf
inc
cmp
xor
pop
sbb
xor
nop
jmp
stos
shrb
lahf
lahf
add
push
stos
xchg
cmp
add
pop
fisttpll
fs
addl
rolb
lcall
xor
call
daa
out
sub
cmp
push
shlb
inc
stc
xor
scas
and
pop
and
mov
cs
mov
or
mov
out
cmp
es
scas
jns
stos
cmpb
push
pop
inc
mov
pop
loope
test
adc
inc
lcall
add
add
loop
sub
xchg
xchg
pop
mov
xchg
stos
lea
push
test
inc
rorb
add
add
fadd
inc
xchg
mov
sub
xchg
mov
push
das
adc
mov
inc
mov
movsb
jmp
faddl
lods
lcall
xchg
cmp
movsl
mov
or
cmovno
inc
mov
lea
test
push
pop
jl
mov
fcom
push
xchg
sarb
xchg
les
testb
cmp
jns
in
repnz
out
cmc
jns
js
aad
jecxz
push
shll
adc
insl
add
pop
sbb
inc
and
push
xorl
and
imul
add
cmp
cmp
mov
mov
clc
dec
or
jge
or
fwait
sbb
orl
addr16
lds
nop
sbb
sti
jnp
jb
sbb
mov
sbb
ss
leave
dec
add
shl
xor
xchg
adc
jbe
push
cmc
fwait
xor
xor
fwait
or
fsts
lods
inc
das
out
sbb
pop
xchg
add
sub
sbb
sub
pop
xchg
les
bnd
lahf
cmpsl
add
push
in
lods
jmp
mov
mov
cli
pop
pop
or
jg
push
mov
daa
es
sub
pop
mov
dec
dec
addb
push
gs
cmp
or
mov
adcl
loop
fsubrs
repnz
data16
nop
xor
xor
shll
sub
pop
inc
in
pop
pop
dec
mov
mov
adc
aas
sub
jnp
mov
dec
mov
orl
push
cmc
pushf
lahf
sub
int
movsl
out
aaa
ljmp
cmp
or
cmp
js
in
xchg
iret
sbb
mov
ja
nop
mov
decb
pop
adc
lds
bound
pop
xlat
divl
mov
aas
jae
cmp
mov
arpl
test
lods
iret
int
push
sub
jno
dec
cmp
adc
stc
dec
stc
stos
inc
ljmp
sti
inc
stos
out
and
mov
cmp
inc
sub
push
iret
pop
mov
filds
xchg
jecxz
pop
sbb
arpl
pop
adc
pop
jns
jae
pop
iret
ficomps
and
xchg
enter
in
dec
ja
rol
mov
data16
add
add
jge
or
push
movsl
ficompl
loop
loop
lock
jne
sub
push
scas
es
loop
and
xchg
cmp
jns
lods
mov
cmp
lds
mov
xchg
insl
sbb
lahf
cmp
mov
add
add
mov
cli
add
test
xchg
bound
xor
add
sub
cmc
pushf
add
nop
shrb
call
mov
push
mov
aad
lods
xor
sbb
out
jae
aaa
adc
sahf
loop
add
or
insl
adc
shlb
push
repz
dec
jnp
mov
mov
xchg
pop
sbb
jnp
xchg
and
cmpsl
ljmp
and
pop
add
and
push
dec
rorb
scas
inc
and
or
xchg
jne
jge
arpl
cwtl
arpl
ret
insb
lock
aas
movsb
sbb
or
outsl
arpl
mov
cmp
jbe
pop
jbe
push
sbb
cmp
out
push
jecxz
push
jmp
or
xlat
mull
mov
das
mov
sub
lret
mov
jecxz
sbb
mov
xor
hlt
xchg
fdivrs
xchg
jl
xchg
inc
xchg
test
mov
xchg
popa
in
mov
mov
cmp
fstpt
sbb
xchg
inc
testb
adc
sub
push
rcrb
fdecstp
lret
push
cld
xchg
jp
and
mov
mov
ja
sbb
pusha
push
outsl
pop
mull
jne
mov
imul
or
out
xchg
jge
or
add
dec
mov
data16
cltd
or
push
shrb
jae
xchg
mov
sbb
sub
mov
sub
or
loope
frstor
je
stos
jl
int
aad
lret
lahf
fdivs
data16
mov
insl
call
das
stc
std
aad
ljmp
push
imul
lret
outsl
jns
pop
pop
inc
push
les
or
test
jnp
outsl
movsb
fnstenv
mov
lret
push
dec
sbb
movsl
decb
data16
int
fsubl
out
inc
mov
sub
test
sbb
jge
sbb
mov
repz
insb
lds
push
jmp
push
xor
repz
cmp
incb
add
add
mov
enter
loope
pop
xchg
sub
and
fmull
scas
inc
test
jl
jno
xor
add
add
lahf
mov
mov
shlb
movsl
mov
adcl
mov
out
fstl
into
dec
pusha
mov
gs
mov
aam
mov
ja
add
or
push
cmp
rcrb
aam
add
jbe
pop
jae
xor
cli
push
jle
icebp
fisttpl
repnz
lret
lret
push
push
or
cli
jne
push
xor
sbb
clc
xchg
sbb
movsb
lock
inc
sub
jne
fs
add
jecxz
icebp
or
aas
mov
lds
adc
sbb
sbb
push
cwtl
mov
xor
push
mov
mov
ja
fs
in
mov
out
jg
das
scas
mov
mov
aam
cltd
fcoml
in
pop
popf
sub
lcall
push
or
out
ljmp
ljmp
xchg
lret
out
xchg
lahf
fidivs
sub
xor
fsin
loop
push
cmp
xchg
out
jbe
scas
and
or
lret
xchg
jle
push
mov
loopne
sbb
and
filds
pusha
mov
jmp
xor
xchg
jmp
divb
popl
adc
lret
xchg
add
sub
push
cmpsl
cmp
call
mov
mov
imul
mov
fs
add
out
outsb
les
test
jns
inc
bound
mov
xchg
int3
jg
pop
xchg
icebp
cs
adc
push
cmpsl
sub
xchg
sbb
scas
cli
movsl
push
inc
cwtl
pop
stos
enter
or
mov
push
and
add
add
dec
mov
es
push
addr16
pop
mov
jns
movsl
adc
addr16
aas
sbb
outsb
ficoms
lea
loop
fnsave
jne
adc
mov
pushf
cli
xchg
push
ja
sti
lcall
fstl
add
stc
and
push
lret
fs
mov
orl
fiadds
sub
fwait
inc
push
daa
or
mov
daa
mov
adc
test
inc
jge
test
cmp
nop
stc
or
or
xor
in
inc
dec
dec
add
cmp
xor
movsl
add
pop
mov
add
adc
push
ss
xchg
ss
cli
pop
mov
fldenv
inc
ftst
dec
fstpl
or
lods
jae
cmpsb
pop
and
inc
mov
jmp
mov
lock
add
or
jmp
stos
in
cltd
add
sub
mov
lcall
add
add
cmp
in
daa
mov
mov
xchg
xchg
fisubl
insl
cmpb
sbb
lea
jle
sub
dec
and
mov
mov
pop
mov
aaa
pop
xor
dec
notb
ror
lcall
adc
insb
ror
jle
les
add
or
mov
cmp
sub
jp
mov
aam
fld
and
xchg
lret
test
movsl
insl
xor
daa
cld
fs
pop
jae
xor
cs
fmull
mov
dec
lret
jge
test
js
and
cmp
adc
mov
jle
add
sbb
int
dec
xchg
icebp
repnz
call
pop
sti
aad
pop
fsubp
imulb
call
imull
dec
inc
leave
push
rolb
aaa
inc
scas
dec
xor
jl
outsl
call
stos
cs
jg
fimuls
cld
jmp
inc
jnp
jns
xor
cmp
enter
jmp
outsl
outsl
cwtl
cmp
out
fmuls
or
jo
out
hlt
pop
addr16
push
inc
dec
movsb
cmc
bound
sub
inc
xchg
xchg
dec
sbb
and
shlb
jne
pop
repz
jne
mov
mov
add
add
cmp
daa
mov
iret
adc
sub
fldt
mov
call
mov
pushf
mov
xchg
lock
add
xchg
or
lret
and
mov
mov
inc
arpl
jl
push
or
sti
jl
xchg
push
in
cltd
fbld
scas
add
mov
jns
ret
xorb
lods
jl
das
shrb
pop
dec
push
lret
jmp
ret
cmp
dec
subl
add
add
adcb
mov
push
add
add
xchg
cmova
xor
lcall
fidivrl
xchg
dec
mov
pop
loopne
fs
std
icebp
jnp
xor
mov
mov
sbb
jmp
aas
and
xchg
lods
enter
loop
scas
cmp
scas
lods
mov
ja
out
insb
xor
mov
imull
cmp
mov
iret
mov
popf
push
packsswb
sbb
lcall
movsb
dec
shlb
inc
or
push
jo
push
shl
in
mov
cwtl
push
push
pop
mov
jmp
pop
fisttpll
mov
and
xor
insb
or
into
and
fs
or
jmp
inc
push
sbb
jmp
push
lock
mov
mov
xor
xlat
inc
addr16
lcall
je
cmp
and
sub
push
int
dec
pop
pop
sub
rol
jmp
xor
stc
xchg
adc
xlat
push
and
and
jp
daa
clc
popf
push
shrl
dec
inc
and
xchg
movsl
push
add
rep
lea
mov
imul
add
jne
clc
dec
outsl
fs
xchg
add
and
mov
xchg
mov
andl
and
jae
sub
out
sbb
push
xchg
fucom
sub
out
xchg
repnz
cmp
aad
mov
mov
popa
sbb
pop
mov
mov
cmp
test
xchg
or
out
add
shl
or
push
push
std
sub
out
dec
shll
jge
rorb
test
addr16
mov
xlat
lret
mov
in
mov
push
mov
cli
fdivrs
adc
xor
push
add
outsl
popf
int
call
into
push
enter
das
mov
jl
push
test
adc
jmp
fistps
sahf
out
adc
jmp
xchg
mov
cmp
add
das
hlt
adc
pushf
cltd
add
mov
jle
stos
outsb
aas
xchg
fs
cmp
or
rcrl
mov
pusha
std
call
pop
filds
mov
jmp
add
add
xchg
jecxz
sbb
cmp
inc
cmp
sub
xchg
jb
dec
insb
push
xlat
adc
test
int3
adc
sbb
fs
add
mov
frstor
xchg
fyl2xp1
push
mov
xchg
test
xchg
rolb
dec
xchg
ret
mov
test
js
fisubs
imul
dec
push
fcomps
lea
pusha
sub
mov
ljmp
andb
sub
dec
push
xchg
or
fisubrs
sarl
das
push
cmp
ljmp
jge
sbbb
mov
frstor
call
sbb
ljmp
cmp
roll
mov
out
sti
test
pushf
adc
es
aad
int
pop
repz
lods
int3
sbb
scas
mov
inc
into
sbbb
cmp
mov
jmp
add
aad
and
jno
leave
or
fcomps
sahf
sbb
mov
pop
aad
icebp
add
stc
ds
push
xor
add
add
jno
jno
rol
subb
mov
mov
cmp
sbb
scas
sub
add
lds
add
out
mov
or
lock
mov
out
pop
cmp
imul
add
or
push
lcall
add
add
leave
mov
push
sub
adc
push
shl
push
and
or
andl
add
push
push
inc
jo
aaa
arpl
fwait
insl
std
mov
adc
inc
push
shlb
inc
jbe
pop
popa
xchg
mov
sub
mov
xor
outsl
es
xchg
lock
int
loopne
cmp
cmp
fcoms
fstps
inc
push
lcall
push
daa
and
add
ss
dec
dec
jmp
mov
add
add
movsl
mov
lret
add
mov
repnz
push
xor
les
pop
out
jo
sub
jge
mov
lods
pop
in
pop
inc
lahf
lods
xlat
xchg
sbb
add
js
stos
cmp
and
add
mov
cli
fstpl
jge
outsl
sub
scas
or
stos
fwait
lret
push
ds
in
movsb
rolb
mov
hlt
jle
cmp
outsl
lret
mov
imul
ficomps
add
sbb
icebp
pop
out
and
add
add
imul
in
add
fbstp
sub
in
sbb
adc
inc
inc
xor
imul
add
jb
xchg
inc
jne
pop
pop
popa
push
push
je
mov
rcrb
cmc
call
mov
push
cltd
xchg
ret
cmp
cmp
xor
or
fadds
pop
sbb
leave
jo
fiaddl
stc
xor
pop
ret
push
lret
imul
shr
add
add
loop
test
in
stos
dec
int3
cs
pop
jmp
loopne
sub
scas
jnp
push
pop
sti
sub
pop
dec
mov
mov
or
insl
or
std
daa
out
scas
push
daa
fwait
jb
or
lret
in
lds
add
test
lcall
pop
jns
push
sti
clc
jne
ja
insb
xlat
jecxz
xchg
adc
ljmp
ret
js
fcomi
sbb
jmp
les
js
push
mov
add
pop
jbe
and
sub
movsb
mov
jae
inc
jg
pop
mov
clc
inc
dec
inc
push
inc
rcr
pop
and
dec
arpl
imul
and
jg
shl
int
and
xchg
or
xchg
xchg
dec
lock
push
and
cmp
shll
push
mov
cltd
pop
jno
sahf
adc
insb
xchg
dec
lahf
jecxz
stc
or
add
add
mov
mov
insb
into
pushf
lret
movsl
das
sub
popa
ss
js
mov
sahf
popa
cmp
rcrb
lds
shll
and
push
pop
lods
pop
mov
xor
sub
enter
nop
in
jl
dec
lret
xorb
fsts
jnp
mov
xor
aam
es
imul
mov
sbb
push
or
imul
xchg
lahf
mov
jbe
and
in
cltd
mov
sub
mov
cs
out
fnsave
bound
sub
xchg
adc
jl
mov
push
ret
mov
popf
das
push
xor
lds
inc
and
insb
pop
fnstenv
jns
aaa
out
add
stc
js
enter
xor
dec
sbb
test
add
out
daa
ja
pusha
ret
dec
insl
gs
cmc
xchg
jg
cmp
dec
int
xor
dec
mov
mov
add
into
incl
inc
js
jbe
inc
jae
xor
ds
scas
mov
jae
mov
int3
mov
mov
xor
nop
loop
mov
dec
sar
xor
movsb
sbb
test
push
cs
add
popf
mov
stc
lret
or
lahf
daa
sbb
rcr
inc
mov
shll
sbb
aaa
shr
movsl
mov
or
adc
dec
lock
pop
jae
jmp
adc
and
or
orl
in
push
jb
inc
pop
lahf
jmp
jmp
or
xor
mov
mov
push
jecxz
add
out
roll
jl
je
or
test
adc
pop
cmp
icebp
or
imul
pop
or
sbbl
xor
int3
xlat
cmpsb
fistl
popa
insb
sbb
add
add
pushl
out
jecxz
insl
inc
cwtl
int3
and
inc
push
mov
imul
xchg
test
and
add
add
or
jae
stos
movsl
fwait
xchg
les
notb
push
movsl
mov
lret
adc
ficompl
jo
xor
xor
mov
inc
aam
mov
fldl
ss
inc
into
mov
push
cmp
pop
mov
sub
iret
leave
jbe
stc
add
adc
xchg
mov
popf
shll
andb
je
out
aas
subb
inc
pop
and
insb
mov
lock
jg
xchg
sub
or
adc
add
mov
mov
cmpb
int
shll
and
and
fisubl
orl
mov
jge
push
jno
push
insl
pop
add
push
sbb
js
push
and
test
mov
shll
out
xchg
pop
cwtl
pop
add
jmp
adc
add
fbstp
enter
pavgw
jp
inc
mov
jae
cmpsl
mov
jns
push
addr16
bound
mov
loop
sahf
push
int
sub
cli
xchg
cmp
push
and
test
pop
cmp
les
inc
jmp
jno
es
outsb
jge
scas
inc
dec
popf
jb
adc
dec
xchg
das
enter
mov
repnz
or
push
or
in
or
xchg
orb
cltd
ret
mov
pop
stc
sbb
mov
repz
inc
cmpsb
cmp
divb
cltd
leave
fisttps
jle
nop
jecxz
das
inc
lcall
add
add
repnz
arpl
stos
enter
mov
mov
addl
and
push
popf
mov
inc
add
mov
ljmp
dec
loopne
lret
fbstp
ret
scas
hlt
cmp
push
and
inc
pushf
xor
sbb
test
add
dec
call
cmpsb
movsb
icebp
fcom
ret
fisttpl
pop
cwtl
in
les
inc
jecxz
gs
in
add
imul
or
addl
repnz
mov
push
cwtl
cmp
and
cli
pop
jl
fcmovnbe
push
mov
xor
jmp
fstpl
inc
mov
mov
jnp
lods
addr16
sbb
pop
mov
divb
inc
adc
add
call
xlat
and
mov
dec
xchg
rcll
push
pop
mov
mov
scas
popf
pop
call
leave
jne
and
push
lods
scas
lods
pop
or
mov
jb
or
jb
test
ss
xchg
xor
jp
xor
cmp
pushf
movsl
in
idivb
aas
rorb
imul
pop
fwait
and
sub
loop
lock
clc
outsl
pushf
pop
sbb
or
jnp
pop
push
ficoml
jmp
mov
das
loopne
xor
sahf
outsb
add
hlt
std
fnstsw
xchg
cmpsl
add
in
aas
push
scas
iret
js
scas
aam
mov
daa
mov
pop
fbstp
ja
jecxz
jb
cld
xlat
hlt
inc
xchg
lods
leave
inc
sub
insl
xlat
mov
sub
daa
in
jmp
fisubs
xchg
fists
bound
cmpsb
jne
mov
scas
push
shrl
imul
mov
imul
lock
out
imul
jns
cmp
lret
mov
inc
push
and
add
add
or
mov
adc
lea
mov
mov
mov
jge
fldenv
xlat
pop
fcomps
icebp
mov
xchg
cmp
rep
rclb
inc
lcall
out
push
cmp
repz
cs
inc
dec
imul
cltd
stos
ss
cmp
inc
test
mov
mov
inc
ss
enter
mov
insb
adc
xchg
popa
inc
stos
out
aas
cmp
scas
lock
pushf
sahf
push
es
cltd
bound
xchg
lods
iret
pusha
mov
mov
sub
inc
push
in
popa
sbb
xchg
mov
xchg
loope
repnz
aad
pop
jae
imul
xor
shll
dec
xchg
sahf
in
mov
pop
xorb
inc
rorl
test
jmp
fucomip
mov
movsb
rol
daa
cmp
sbb
addb
andb
or
cmpsb
dec
popa
lds
mov
sbbl
sarl
daa
shl
dec
mov
mov
dec
jae
daa
sbb
test
int
push
mov
adc
cmp
xor
das
cmc
push
cmp
sbb
inc
pop
insl
enter
std
adc
jbe
ficoms
subb
push
outsl
mov
out
fcmove
loop
loopne
arpl
fildll
idiv
mov
xchg
sub
xchg
insb
stc
ljmp
add
add
in
sub
fstps
jg
repz
mov
cmpsl
addl
add
test
jmp
and
add
dec
mov
xchg
xchg
jecxz
mov
jns
sarl
and
outsb
push
cli
jmp
jns
sub
ljmp
xchg
dec
cmpsl
jnp
push
pop
gs
mov
lods
or
push
xchg
nop
xchg
cmp
iret
or
xchg
cmpsl
test
icebp
in
push
push
cmp
data16
sbb
clc
push
xlat
and
into
mov
in
mov
xchg
decl
stos
sub
test
jle
enter
mov
xchg
cmp
pop
jno
pushf
jle
insl
jge
inc
dec
and
xor
push
jne
out
jl
lea
test
xchg
adc
and
rolb
pop
in
sub
adc
cmp
adc
or
fidivs
mov
jns
icebp
scas
dec
and
cld
add
cmp
cwtl
xlat
inc
test
sbb
xor
pushf
and
push
mov
push
js
sti
cld
jg
push
mov
daa
leave
add
testb
inc
insb
loopne
mov
pusha
enter
mov
push
and
mov
aad
incb
fcmovne
and
pop
xlat
mov
ja
pop
add
aam
sbb
dec
or
xchg
je
jge
push
es
or
add
inc
add
dec
imul
lea
push
push
and
ret
or
mov
xchg
push
lcall
add
sbb
int3
xchg
shrb
push
scas
sbb
movsl
testl
fstps
or
cwtl
dec
fistpll
push
and
mov
mov
aas
ja
sahf
cmp
add
andl
sbb
rcrl
and
gs
or
mov
stos
xchg
xlat
cmc
cmpsb
sbb
push
scas
cmc
cmpb
sbb
xchg
pop
lds
push
add
movsl
sub
cmpb
push
aas
push
sub
mov
in
leave
rorb
or
fcmovbe
stos
rcrl
dec
imul
cs
pop
mov
bound
lds
gs
dec
mov
add
sub
push
and
sti
mov
mov
pop
sbb
test
ds
sarb
add
add
es
cmp
or
mov
lret
gs
sbb
out
gs
push
lret
lock
xor
in
mov
notl
in
xchg
mov
or
jb
add
add
add
xchg
push
sbb
into
add
add
add
fucom
rorl
pushl
pop
lret
add
and
das
int
mov
insb
or
mov
jge
mov
wrmsr
add
pop
pop
test
xor
addl
inc
das
pop
outsl
push
mov
push
cli
test
sbb
inc
in
sub
sub
mov
into
int
mov
sub
addl
fs
mov
fldenv
ret
add
jmp
pop
push
ja
outsb
loopne
inc
es
add
add
pop
dec
sbb
insb
and
mov
pop
cwtl
push
pop
or
sbb
xor
add
loop
add
add
push
jmp
pop
add
clc
out
xchg
aas
mov
int
xor
xor
pushf
push
movsb
adc
shll
fs
push
js
into
and
pop
and
in
push
movsl
aaa
pop
jne
jge
add
add
roll
add
add
divl
xorb
mov
mov
rcrl
outsw
imul
sub
cwtl
xor
jp
jno
pop
movsl
data16
or
sarl
mov
fbld
jg
mov
jmp
cmpsb
imul
js
sarb
ret
nop
cmpsl
in
jecxz
push
rorb
dec
jp
sbb
sub
pop
int
adc
aaa
push
or
loop
inc
or
lock
or
insl
or
lret
jno
hlt
btc
fnstenv
pushl
cs
insb
ret
aas
sbb
sbb
enter
mov
popf
mov
dec
jbe
jg
out
add
sti
in
idiv
xor
mov
lock
cltd
jne
dec
scas
imul
xor
test
test
xchg
out
cli
mov
dec
and
inc
lods
sarb
cltd
xlat
movl
xor
add
ret
jnp
cmp
in
shrb
xchg
in
shlb
imul
mov
ja
jno
inc
pop
push
jp
sbb
xchg
rorl
shl
jbe
adc
nop
lret
mov
test
stos
jge
cwtl
jp
outsb
es
cli
xchg
dec
sbb
bound
sub
ret
in
neg
data16
jmp
clc
cmp
lahf
js
faddl
jge
mov
push
xor
jg
lret
scas
adc
or
popf
aaa
adc
mov
add
mov
add
add
cltd
enter
and
ds
xchg
mov
rolb
pusha
jo
jns
mov
push
xor
push
or
add
sub
mov
leave
dec
insb
rcrb
xlat
data16
imul
out
lret
iret
sbb
jp
fisttpl
popf
cmp
add
es
popa
js
ds
loopne
rcrb
add
and
pop
inc
mov
jbe
jns
adc
in
lea
outsb
in
jae
or
or
out
outsl
xor
sbb
js
imul
out
or
lock
mov
cmp
aas
mov
inc
jo
push
push
pop
in
out
stc
mov
mov
mov
repnz
adc
pop
inc
mov
mov
lcall
xchg
inc
sub
or
mov
shlb
add
jno
and
push
movsb
push
sub
test
cmp
int
mov
xor
stc
xchg
mov
jne
movsb
push
daa
lahf
dec
stos
adc
inc
jle
imul
hlt
mov
lods
jmp
lret
jg
jnp
cs
mov
mov
pusha
jecxz
pop
fildll
jecxz
mov
dec
cmp
dec
rorl
mov
and
push
push
popf
frstor
pop
push
adc
cmp
ljmp
test
sbb
adc
out
adc
cmp
fnsave
jbe
add
pop
mov
cmc
push
clc
not
stos
push
sub
cmp
sahf
test
popa
inc
adc
fnstenv
clc
stos
loopne
in
mov
mov
int
mov
mov
pop
hlt
mov
in
mov
fisubrs
in
test
flds
test
andb
mov
mov
sub
sub
popa
out
aas
movsb
ret
or
clc
lods
sti
pushf
mov
jb
adc
xchg
test
emms
xchg
int3
out
enter
test
or
xor
mov
xchg
and
out
adc
xchg
rolb
push
cltd
arpl
jmp
repnz
in
dec
or
fisttpl
and
mov
jl
lahf
stos
push
mov
sahf
sbb
rclb
xor
int
inc
inc
loope
imul
or
scas
ds
adc
enter
sti
or
ss
stos
out
sbb
and
out
pusha
in
dec
mov
int3
add
movsl
shll
cltd
cli
lods
push
jg
jne
add
dec
sub
dec
sahf
movsl
add
leave
push
inc
push
adc
jns
inc
hlt
lahf
sbb
test
cmp
mov
jg
stos
insl
cwtl
aad
pop
adc
xchg
dec
fwait
lcall
xchg
pop
sub
pop
cli
lahf
pop
adc
cmpsl
sbb
adcb
pop
shlb
jmp
stos
std
dec
and
mov
mov
jno
push
adc
push
data16
ficoml
push
pop
in
bound
add
add
stos
xchg
cs
mov
inc
add
xor
ss
push
mov
mov
sub
mov
jmp
adcb
out
mov
or
scas
jecxz,pt
push
jl
dec
sub
aam
xor
mov
xchg
inc
pop
mov
daa
bound
lret
dec
push
lods
movsb
dec
insb
inc
aas
daa
mov
fwait
cli
pop
lods
fisubs
icebp
fwait
in
loope
push
addr16
loop
hlt
dec
adc
dec
mov
jmp
lea
xor
imul
iret
mov
push
add
aaa
pop
xor
lcall
dec
mov
cmp
jge
cmc
icebp
adc
pop
adc
pop
int
movsb
and
addr16
mov
push
pusha
cwtl
hlt
jb
ljmp
inc
mov
mov
sbbl
sbb
jo
jnp
fcomps
dec
andl
testl
xor
mov
cmovns
xor
mov
pop
out
in
aas
mov
add
add
xchg
in
mov
cmp
icebp
mov
inc
mov
leave
xlat
call
adc
mov
sub
jle
imul
jmp
pop
add
dec
lcall
cmp
icebp
jb
mov
mov
add
add
xchg
jmp
in
and
ret
pushl
adc
xor
imul
inc
in
popf
cmc
sub
lret
sti
add
mov
cmp
xlat
adc
xor
or
and
inc
jo
hlt
sub
mov
in
js
adc
or
test
in
mov
sbb
pop
and
inc
inc
cltd
pop
pushf
mov
mov
sarb
adc
sub
cmc
inc
or
push
mul
push
stos
hlt
test
es
mov
push
sbb
and
inc
shlb
adc
xchg
aad
aad
fwait
mov
xor
xor
or
jb
js
dec
sbb
push
pop
push
cmpb
ja
push
mov
mov
push
stc
sbb
jne
jbe
push
xorl
dec
sbb
jle
lret
sbb
pop
fwait
dec
xor
lds
mov
int
or
test
mul
cld
mov
mov
add
add
inc
jnp
mov
mov
xchg
mov
leave
cmp
adc
rclb
and
divb
inc
and
inc
hlt
or
lds
xor
movswl
sbb
inc
xor
sub
jne
jae
mov
repz
xchg
add
ret
clc
push
insl
iret
in
cmp
xchg
repnz
add
inc
cmp
xchg
stos
out
into
jl
sbb
pop
ljmp
xchg
cmp
sbb
jle
inc
pop
test
in
sub
outsl
push
scas
out
push
adc
addl
sub
cmpsb
push
nop
loop
es
jp
lcall
xor
xor
push
lret
enter
test
arpl
popa
fdivs
inc
std
hlt
pop
in
xor
repz
xchg
fidivrl
shll
cmp
xchg
testl
add
add
aas
hlt
jne
sti
repnz
aad
or
jle
ja
movsb
or
sub
mov
jmp
stos
bound
pop
mov
scas
shll
pop
in
sti
adc
xchg
sbbb
mov
push
insb
adc
ja
push
sub
push
sbbb
cmc
dec
fldcw
lcall
movsb
or
jb
popf
testl
mov
mov
add
xor
xlat
stos
pop
popa
push
and
pop
inc
cld
hlt
mov
mov
outsl
movsb
xchg
insb
in
lock
or
daa
movsl
mov
mov
mov
jae
add
xchg
and
xor
loop
mov
ret
push
sbb
mov
add
pop
xor
inc
das
incl
sbb
dec
movsb
inc
pop
sub
popf
cmp
iret
sub
scas
xchg
add
add
push
cmpb
dec
sahf
cmp
fsubp
inc
gs
mov
sbb
lods
and
sbb
cli
cmpsl
sbb
daa
mov
fldcw
pop
aaa
and
or
jmp
adcb
inc
sbb
pop
mov
mov
test
mov
fcmovnbe
mov
mov
inc
dec
imul
pop
pop
fsts
pushf
and
cli
inc
mov
repnz
addb
jne
and
out
jno
mov
xchg
pushf
xchg
mov
mov
and
flds
lahf
push
inc
shlb
shlb
xchg
mov
mov
or
or
lock
jo
mov
jge
je
mov
inc
dec
sbb
into
dec
and
push
add
add
cltd
mov
out
cmp
mov
dec
pop
xlat
dec
adc
xchg
push
lea
or
mov
mov
sahf
insb
cmpsb
adc
imul
arpl
inc
ljmp
add
add
sahf
arpl
lret
mov
out
ret
movsl
lcall
or
or
aam
test
adcb
xor
jns
clc
mull
out
insb
idivl
int3
jbe
xchg
inc
fistpll
pop
aad
lahf
mov
add
add
xor
or
or
data16
xorb
fldl
add
add
insb
fidivrl
mov
test
sti
xor
bnd
sbb
pushf
add
lret
hlt
into
xor
bound
inc
push
xorl
std
sbb
lret
imul
lea
or
insl
sub
mov
sarl
cmpsb
cmpsb
out
ljmp
jecxz
std
mov
mov
fidivl
mov
inc
xchg
adc
sbb
cld
pushf
push
or
mov
imul
out
xchg
sub
shlb
and
xchg
fldl
ja
scas
sub
add
mov
xor
add
mov
xchg
push
loop
xor
out
mov
mov
push
jne
fnsave
out
mov
push
mov
inc
xchg
scas
push
push
dec
loope
out
jcxz
sbbl
cmpsl
mov
adc
les
mov
inc
add
xor
xor
rsqrtps
xchg
call
jle
data16
adc
js
inc
shlb
and
std
and
adc
mov
mov
out
roll
imul
sbb
les
pop
cmp
cmp
rorb
sbb
pop
xchg
push
push
mov
sbb
sbb
add
fldl
mov
popa
sbb
loop
sbb
sbb
xor
push
pop
add
dec
test
or
inc
testb
xor
xor
and
add
add
cmp
stos
or
lock
lods
pop
pop
mov
enter
sahf
push
dec
scas
in
jg
sarl
sbb
pop
movswl
in
cld
rcrl
data16
dec
xchg
cwtl
push
rcll
shr
stos
adc
dec
mov
enter
fld
push
dec
aas
jne
push
int3
xchg
insb
pop
lock
gs
les
push
out
pusha
popf
jne
add
pop
or
in
push
addr16
jge
sahf
push
inc
xchg
fdivrs
scas
xor
pop
jp
testb
xor
adc
jp
leave
les
adc
push
sti
and
adc
test
push
je
stc
ret
lods
das
bound
pop
cmp
mov
lahf
adc
imul
xlat
cmp
xor
add
xchg
xchg
jne
ss
jp
scas
jmp
test
lea
mov
jecxz
mov
push
jl
cmp
orl
stos
icebp
call
and
or
xchg
pop
jge
rol
icebp
inc
pop
call
add
cmp
sbb
adc
out
cmp
loope
bound
test
add
cld
test
sbb
out
add
lock
fldlg2
fcmovnb
pushf
shlb
cld
dec
test
divb
iret
addr16
sahf
xchg
orb
add
xchg
out
pop
enter
and
loope
jmp
or
cmp
add
mov
andl
push
push
hlt
mov
push
xor
mov
fwait
int3
mov
loope
and
icebp
add
or
dec
xor
mov
shr
popa
mov
lret
aas
xchg
stos
mov
lods
mov
dec
fnsave
cmp
mov
jnp
pusha
inc
test
mov
cld
sbb
repz
push
out
cwtl
jl
sub
sub
arpl
outsb
adc
cmp
push
and
pushf
xor
add
add
pusha
ret
and
mov
test
out
and
and
adc
dec
das
scas
mov
outsb
stos
push
mov
push
xchg
jmp
or
xchg
mov
cmp
xor
mov
jns
or
mov
stos
rcr
lock
adc
movsl
add
lahf
cmp
and
addb
mov
testl
imul
xchg
lcall
inc
out
sbb
or
and
fstpt
adc
push
add
dec
jns
loop
test
insl
dec
stc
adc
or
shll
push
icebp
aad
notb
mull
ja
nop
sbb
xchg
das
sbb
mov
xchg
mov
jle
hlt
leave
dec
inc
ret
test
mov
dec
sti
cmp
pop
sub
into
icebp
fcmovnu
fbld
sub
insl
aaa
in
xchg
repz
lock
scas
push
inc
sahf
movsl
xchg
testl
or
push
divb
leave
mov
mov
or
aam
test
cmp
dec
mov
jne
iret
and
mov
in
inc
adc
sbb
outsb
xor
jne
and
shrb
cmp
cmc
or
repnz
pop
push
aaa
shlb
mov
xchg
addl
lock
and
and
add
fdivs
sbb
push
cmp
pop
adcl
mov
in
xor
push
sub
fbstp
mov
xor
push
mov
scas
mov
pop
xlat
mov
lcall
jns
out
pop
sub
dec
lret
movsl
test
ror
inc
or
jle
jp
pushf
sub
jmp
enter
loopne
scas
aad
add
rorl
sub
or
pop
std
pop
xlat
daa
rcrl
xchg
test
repnz
cmp
cmpl
add
cmp
and
rcrb
mov
mov
je
push
sub
pusha
fldcw
jns
mov
ja
loope
sub
and
adc
sub
scas
inc
mov
mov
das
sbb
and
adc
cs
mov
ljmp
mov
jecxz
xchg
push
enter
psraw
sbb
push
xor
add
icebp
cmc
sti
pop
or
movb
push
pop
lods
dec
xchg
scas
sub
cmpsb
or
mov
loopne
fidivrs
fdiv
push
sbb
mov
cwtl
bound
mov
addb
hlt
add
add
pusha
sbb
mov
mov
aaa
adcb
inc
adc
adc
gs
subl
fmulp
add
inc
adc
jne
rcrl
scas
mov
lahf
movsl
test
fcmovb
cmc
dec
and
mov
jo
jle
xchg
jle
mov
xchg
and
fiaddl
xchg
mull
fstpl
cli
leave
mov
lret
addr16
mov
scas
rolb
push
pop
xor
push
and
or
cmp
add
rcr
jb
aas
fcmove
xchg
jns
inc
mov
xor
cli
xor
test
xchg
outsl
and
std
mov
sub
stos
outsl
pop
pop
jge
xor
add
add
outsb
in
xor
ret
out
and
jbe
push
cmp
add
add
aad
and
dec
ret
lret
es
imul
pop
pop
and
fnsave
out
xor
fsubrl
mov
push
cs
int3
sbb
decb
shlb
push
pushf
xchg
outsb
xchg
mov
and
jmp
push
add
mov
int
pop
mov
ds
pop
aaa
pop
pop
cmpsb
insb
dec
scas
sbb
xor
movsb
push
icebp
sbb
xchg
push
add
lcall
clc
stos
xor
lret
int
ss
mov
dec
add
push
mov
pop
xchg
js
xor
lds
mov
adc
add
or
stc
lret
or
add
add
loopne
jno
pop
jns
fimull
std
push
out
pop
add
iret
cmp
pop
add
xor
test
leave
or
outsl
fadds
popf
jg
or
jl
xor
pushf
test
inc
stc
inc
jo
int
mov
int3
mov
mov
xor
rcrl
lds
push
ljmp
xchg
push
aaa
das
daa
sbb
js
nop
sub
push
into
and
and
arpl
mov
push
clc
cmp
cmc
adc
iret
and
add
sahf
push
out
inc
sbb
fiadds
inc
add
and
pop
add
into
outsl
test
leave
loope
sub
xchg
pop
insb
and
ljmp
loope
xchg
addr16
sub
dec
lods
mov
lcall
adc
jbe
dec
imul
mov
mov
scas
pop
arpl
sub
ja
fildl
scas
mov
xchg
cmp
test
jns
sub
ds
cwtl
jbe
icebp
mov
stc
dec
inc
ss
fcmovnu
inc
sbb
push
add
bound
inc
push
dec
mov
dec
xor
pop
or
dec
sbb
add
iret
add
cwtl
cmp
mov
popa
out
fistps
pop
imul
jb
sub
outsl
inc
int
jge
stc
mov
sub
out
mov
sub
ljmp
sub
je
add
cli
jb
xchg
out
fdivrl
sub
adc
xor
pop
push
lret
push
mov
pop
mov
cmp
adc
push
cld
push
jb
stos
and
pop
sub
jp
adc
enter
divb
sahf
fsubs
push
adcl
movl
aas
mov
push
and
test
mov
mov
pushf
pusha
cmpsb
icebp
call
call
sbb
and
push
mov
inc
sub
lret
xabort
aas
mov
cmp
mov
mov
insl
enter
sarb
add
pusha
imul
mov
shll
es
repnz
xor
movsb
xchg
xchg
mov
mov
xlat
sbbl
ret
xchg
es
dec
dec
lds
popf
inc
push
jecxz
test
test
inc
sbb
xchg
xchg
test
inc
mov
jecxz
data16
sub
rorl
jl
push
clc
or
push
pop
jmp
std
shrb
call
mov
or
cltd
xchg
jb
pushaw
aas
imul
stc
shl
lock
popf
pushl
sub
sub
push
ret
ret
negl
popf
pop
xor
mov
xor
jg
fimuls
cmp
fucomip
lcall
mov
inc
outsb
xchg
outsb
mov
xchg
jnp
xchg
aad
cltd
dec
test
fimull
sbb
jle
push
sub
into
addl
push
mov
jb
push
adc
push
into
or
imul
int3
and
xlat
jle
repz
inc
lcall
subl
test
xlat
rcll
in
cwtl
insb
fiaddl
sub
cltd
out
cli
cmp
push
cmpb
mul
jo
pop
shlb
outsb
lock
dec
inc
fmuls
mov
loopne
xor
loop
lahf
pop
pushf
dec
pop
test
cld
mov
and
cmp
pusha
jne
sub
inc
mov
xor
mov
mov
mov
adc
add
addr16
out
add
push
xor
add
add
cmc
in
loope
sbb
ret
nop
ret
mov
mov
inc
dec
mov
out
sbb
and
push
dec
bound
js
sbb
js
or
dec
xchg
xchg
dec
out
sbb
cmp
mov
inc
add
je
imul
jge
outsb
push
and
fs
aad
push
pop
mov
fmull
sub
in
xchg
pop
cmp
das
jmp
stos
fisttpll
cmpl
aam
cmp
sbb
mov
jae
xchg
pop
je
or
cmp
sarb
mov
fsubl
sub
stos
push
mov
sbb
lret
gs
xchg
cmp
aam
ds
fwait
jge
jg
xor
xor
lea
clc
and
push
inc
loopne
jp
aad
mov
add
pop
sbb
push
mov
cs
imul
jge
call
lret
jno
in
and
ret
sub
push
and
imul
shrb
xchg
mov
ret
hlt
in
test
cld
pushf
mov
mov
imul
rcll
or
and
imul
orb
and
adc
adc
mov
and
jg
jle
cmp
dec
inc
mov
mov
fistl
shlb
inc
fwait
leave
lret
notl
lahf
mov
pop
movsl
pop
cmpsb
dec
clc
iret
out
push
dec
popa
aas
or
pop
sub
cmovae
pop
dec
xor
xor
or
add
loopne
mov
dec
lds
mov
int3
sbbl
cmpsb
mov
push
pushf
fsub
bswap
cli
push
out
or
and
loope
addl
mov
shll
cmp
pushf
test
aam
xor
jle
pop
cli
mov
add
das
daa
or
ljmp
xor
out
jns
jo
repnz
testb
xchg
std
mov
and
out
mov
loopne
je
repnz
sub
rcll
mov
xor
shlb
in
and
dec
adc
xor
adc
test
cmc
jno
mov
lods
mov
add
insb
pop
orl
sahf
arpl
and
sub
xlat
or
mov
push
push
into
lahf
inc
test
sahf
lods
sarb
xor
fxtract
orl
xor
test
mov
sub
mov
cmp
mov
pop
lret
stos
push
jl
imul
pop
push
insl
scas
lret
lcall
mov
jae
push
incl
mov
imul
sub
filds
inc
push
xor
push
inc
pusha
ss
xchg
xchg
pop
js
dec
dec
mov
movsl
xor
rorl
xchg
mov
mov
into
movsb
dec
sbb
jbe
xchg
mov
mov
add
jg
cmp
gs
adcb
fwait
leave
stos
dec
loope
mulb
shrb
in
dec
mov
loop
adcl
inc
jnp
cmp
insl
xchg
jle
sub
out
mov
shll
xchg
xor
cmpsl
mov
fwait
mov
ret
fs
dec
out
outsb
jle
dec
jmp
ljmp
aad
hlt
idivl
push
xchg
filds
push
cltd
gs
imul
repnz
fiaddl
add
add
imul
inc
jge
sub
push
pop
jge
xor
mov
jns
loop
lea
cltd
sub
mov
add
add
xchg
pop
adc
ds
fistps
add
mov
cmp
adc
mov
xchg
pushf
inc
sub
and
repnz
popf
pop
pop
sub
outsb
cmp
lcall
sub
mov
aam
pop
inc
mov
test
out
or
mov
nop
inc
ja
sbb
cmp
out
jl
mov
add
add
jne
test
fwait
mov
xchg
mov
inc
sbb
add
shll
mov
xor
add
je
pop
in
loopne
fidivl
push
mov
inc
mov
cld
mov
shlb
xorl
dec
loope
jns
pusha
mov
mov
mov
shl
or
outsl
imul
mov
outsl
daa
and
outsb
mov
fldcw
mov
and
adc
jl
movsb
sbb
mov
sub
inc
imul
iret
ficomps
dec
fsubl
fcmovbe
cmp
or
sti
jle
aaa
jle
imul
dec
xorb
xchg
jmp
leave
push
stos
jmp
test
fidivrl
jns
xor
outsb
mov
lods
jnp
aaa
jl
sub
aam
int3
out
int3
mov
jbe
adc
sub
mov
ja
cltd
mov
inc
repnz
adc
inc
cld
ficomps
jo
xchg
div
rcrb
dec
lds
inc
xchg
jne
ret
and
cmp
mov
pop
jae
rcl
into
ficoml
push
aaa
add
sbb
add
mov
outsl
loopne
fidivs
jnp
lds
sub
or
mov
push
xor
aad
in
std
mov
adc
aaa
out
clc
pop
sbb
and
ret
mov
or
sarl
in
sub
cwtl
xlat
out
test
xchg
mov
sahf
mov
mov
test
push
idivl
fwait
insb
and
nop
stos
mov
lea
push
push
or
test
adc
test
cmpsb
out
mov
and
jb
movsb
cmp
lock
add
test
insl
xor
imul
scas
out
jle
add
pop
aam
loop
mov
out
fisttps
add
inc
je
push
push
jge
mov
fcomps
adc
jmp
outsl
jnp
mov
mov
cltd
insl
cs
lret
jmp
push
mov
jno
or
inc
loop
push
xchg
add
add
sbb
mov
fsqrt
jge
jo
dec
enter
inc
mov
in
js
bound
sti
sbb
insl
xor
test
rdtsc
adcb
mov
bound
adc
fstl
or
lock
xchg
test
popl
push
lock
xchg
mov
cmpsl
cmpsl
test
xchg
add
in
mov
and
adc
jae
or
iret
lods
out
push
jnp
subb
icebp
mov
mov
movsl
lret
lcall
fnsave
inc
or
mov
sub
sbb
ret
add
cld
insl
int3
repnz
sub
punpckhbw
rcl
leave
sbb
xchg
in
roll
add
add
adcb
inc
jg
mov
xlat
js
cltd
adc
outsb
pop
out
jl
pusha
divl
mov
sub
scas
es
and
mov
or
cmp
xchg
pushf
xchg
cmp
mov
mov
flds
fidivrl
cli
add
cltd
std
adc
pop
addb
or
cmp
push
popaw
fildll
and
and
mov
cltd
adcl
mov
cmp
lds
push
xor
stc
pop
lret
sti
shrl
test
cmp
and
fmulp
data16
xor
fs
rcrb
jle
fisttpll
enter
sbb
in
inc
jne
rol
sbb
xchg
setge
mov
sbb
pop
add
xchg
ljmp
insb
cs
cmp
mov
or
addr16
xchg
jmp
push
mov
loopne
add
mov
hlt
xchg
lcall
mov
mov
xor
shrl
movsb
loopne
xor
push
and
addb
into
inc
shl
test
push
inc
insl
mov
sbb
inc
les
stc
ds
int
push
test
xchg
nop
orb
xchg
test
inc
std
stc
int3
call
sbbl
cwtl
jl
adc
mov
dec
divl
pop
inc
std
cld
sub
mov
xor
jle
sub
pop
iret
mov
je
addr16
jno
rcrw
call
sbb
out
add
fidivl
in
mov
mov
adc
rorb
xor
orb
jg
xor
out
js
pop
mov
mov
or
out
jnp
rolb
sahf
jno
mov
enter
je
pop
mov
xchg
sti
movb
and
cmpsb
pop
add
sub
mov
pop
jle
data16
movsb
dec
sbb
inc
pop
mov
and
dec
mov
cwtl
testb
cmpsl
jecxz
pop
dec
jnp
jno
in
fsubs
addr16
dec
lods
aaa
xor
int
lahf
and
insl
sub
push
lret
and
cmp
xor
and
shlb
into
pop
xchg
arpl
sub
lahf
jmp
leave
add
daa
cli
and
andb
push
mov
and
mov
sbb
out
jne
int3
test
sbb
frstor
loope
jg
mov
cmpsl
fwait
sbb
push
mov
pusha
sub
adc
pop
fsts
and
sub
enter
arpl
iret
mov
xchg
imul
push
inc
inc
adcb
mov
mov
jae
addr16
cli
push
mov
das
lcall
hlt
aam
push
and
sbb
jg
pop
mov
stos
add
dec
dec
jnp
clc
cmp
idivb
stos
or
push
ret
sub
loopne
cwtl
dec
ljmp
lods
test
inc
movsl
mov
scas
movsb
and
addr16
subl
nop
cmpsl
fsubrl
imul
sub
call
add
lcall
add
add
inc
xlat
jge
insb
sbbl
xchg
jl
inc
push
mov
in
jne
inc
mov
jge
sbbl
sbb
and
add
xchg
cmp
ficomps
in
xor
mov
test
fdiv
out
mov
loope
push
aaa
es
aad
or
mov
inc
sti
in
faddp
das
push
aad
cmpl
jecxz
ret
or
adc
xchg
xchg
fistpl
aad
jl
inc
mov
pop
in
cld
jmp
sub
inc
repnz
shrb
mov
roll
xor
mov
add
cmp
xor
rclb
and
dec
stos
enter
pop
int
pop
pop
adc
popf
aam
or
xchg
dec
sahf
mov
subb
mov
mov
negb
ret
inc
jecxz
in
push
mov
and
outsb
fwait
cmpsl
stos
addr16
inc
xchg
popf
add
dec
xchg
ja
sbb
cmp
push
cwtl
push
in
shrb
add
add
test
out
lret
or
and
fldl
outsb
mov
out
mov
sub
pushf
in
jo
pop
testl
dec
inc
in
test
aas
in
nop
xchg
cmp
pop
xchg
in
adc
clc
lret
inc
cs
xchg
fstl
jno
push
xor
mov
decb
or
and
jmp
fsubrl
dec
pop
das
lods
xlat
push
popf
sub
mov
mov
add
mov
es
outsb
leave
or
fsubp
cmp
ljmp
push
xchg
xchg
movsb
fisubrs
push
scas
popf
out
insb
bound
or
mov
popa
fists
xor
xor
ljmp
sbb
sbbl
insb
rcrl
jnp
pushl
mov
lock
push
cltd
in
pop
inc
mov
outsb
mov
sbb
add
add
jo
xchg
lods
fbld
mov
fisubs
mov
enter
push
xor
dec
enter
adc
fists
sbb
loopne
cmpsb
cmp
push
and
popf
ss
out
test
nop
mov
scas
push
lahf
lar
mov
mov
mov
mov
or
jle
or
das
iret
dec
sbb
and
sbb
js
xor
pop
cmp
loope
mov
ret
mov
subl
test
lds
ret
inc
pop
adc
mul
jbe
jno
mov
bnd
add
mov
pop
and
subl
inc
push
add
or
sub
push
loop
and
out
adc
pop
fisubl
insb
add
push
pop
jmp
push
test
mov
mov
add
inc
jl
sbb
and
cltd
xchg
ret
pop
enter
insb
adc
out
xchg
andb
lds
inc
xor
push
xchg
mov
xchg
lahf
xchg
popa
and
imul
pop
lods
insb
mov
pop
or
mov
inc
push
in
stc
rorl
add
mov
pushf
shr
addr16
addb
mov
cmpsb
cmp
sbbb
mov
xlat
mov
or
imul
or
jmp
out
loop
rolb
and
outsl
mov
leave
xchg
scas
jg
in
je
loopne
mov
cmp
mov
xor
imul
enter
sbb
or
das
push
sub
sarl
gs
jb
loopne
in
les
movsb
pop
cmp
lcall
push
or
mov
pop
ret
in
imul
rolb
add
fisttpll
cmovb
push
sub
lds
es
push
add
rclb
dec
int3
push
lcall
sbb
imul
out
mov
dec
xchg
lock
mov
add
pop
sub
insb
sbb
dec
sbb
call
mov
pop
xchg
jns
stos
mov
test
or
cmp
xor
movsl
stc
adc
xchg
inc
xchg
dec
cmc
and
add
mov
negl
add
addr16
push
es
lds
dec
sbb
xchg
loopne
mov
cmp
leave
scas
sarl
xchg
out
fimull
leave
daa
inc
cmp
test
xor
xchg
add
push
mov
fcomps
cs
mov
ds
xchg
and
mov
cwtl
push
pusha
sbb
in
jnp
push
pop
orb
mov
mov
ss
ds
std
rcr
dec
fsubr
pop
outsl
cmp
cwtl
mov
push
scas
or
cmpb
dec
inc
cmp
xchg
data16
insl
dec
mov
mov
add
add
mov
jmp
mov
cs
xor
xchg
xchg
inc
test
sub
in
xor
out
mov
mov
pop
rolb
pop
sahf
lea
jmp
ljmp
and
push
lds
add
add
sbb
jne
add
xchg
cmp
daa
fldcw
add
cmp
pop
push
gs
jne
or
leave
adc
or
dec
std
xchg
test
je
mov
add
fdiv
push
adc
sahf
je
and
je
push
sbb
hlt
scas
stc
jge
cwtl
pop
enter
push
in
imul
dec
imul
in
jecxz
xchg
scas
pop
jae
inc
jle
rolb
add
add
insl
adc
jge
add
ret
mov
add
add
add
add
ret
mov
add
add
add
mov
add
mov
add
add
add
inc
add
jmp
add
inc
add
add
push
push
lea
inc
mov
and
sub
movzwl
imul
dec
push
push
add
dec
push
inc
push
dec
or
add
dec
imul
lea
inc
inc
add
mov
mov
push
mov
mov
xor
mov
movzwl
push
sub
mov
push
mov
dec
pushl
inc
call
mov
add
mov
lea
dec
lea
mov
inc
dec
pop
ret
push
mov
push
imul
mov
lea
inc
je
dec
dec
add
inc
mov
mov
xor
mov
dec
dec
mov
add
dec
lea
lea
inc
cmp
jne
mov
add
add
lea
add
mov
imul
mov
sub
mov
lea
mov
jmp
dec
push
dec
add
mov
movzbl
and
test
je
or
dec
add
lea
inc
add
inc
or
add
repnz
sub
inc
pop
lea
jmp
movswl
pop
dec
sub
mov
inc
sub
add
inc
movb
sub
sub
inc
mov
inc
dec
jne
or
pop
and
pop
ret
add
mov
mov
add
inc
inc
imul
lea
inc
mov
mov
movzbl
mov
dec
movzbl
inc
inc
lea
push
add
lea
movsbl
lea
and
movzbl
sub
mov
lea
sub
movzbl
dec
dec
add
xor
add
and
mov
sub
mov
mov
mov
mov
add
mov
lea
and
mov
mov
lea
lea
pop
dec
dec
dec
jne
mov
mov
inc
or
lea
lea
movzbl
lea
dec
dec
and
mov
or
inc
inc
inc
inc
imul
sub
lea
mov
mov
or
test
jbe
mov
mov
mov
add
inc
lea
lea
inc
movzwl
add
dec
add
dec
mov
sub
inc
sub
add
sub
mov
dec
movzwl
and
lea
mov
mov
mov
mov
movzbl
inc
imul
add
sub
mov
and
add
lea
mov
mov
inc
movzbl
add
imul
mov
inc
inc
mov
imul
lea
movzbl
inc
or
add
and
inc
and
mov
mov
movzbl
lea
inc
xor
sub
inc
inc
dec
mov
imul
xor
sub
lea
lea
dec
dec
jne
inc
mov
mov
mov
inc
mov
pop
inc
movsbl
pop
mov
lea
pop
add
movzwl
movsbl
inc
sub
inc
mov
dec
mov
add
ret
jmp
dec
mov
add
imul
dec
dec
movsbl
sub
dec
mov
sub
dec
inc
add
dec
movsbl
sub
inc
or
dec
lea
sub
mov
imul
mov
add
mov
imul
movswl
add
mov
mov
and
dec
add
xor
dec
lea
mov
dec
lea
mov
dec
sub
lea
mov
lea
cmpw
je
call
call
call
call
call
mov
movsbl
movzbl
sub
dec
mov
lea
pop
mov
inc
ret
sub
lea
imul
mov
dec
or
push
dec
inc
push
and
sub
mov
sub
mov
push
lea
push
mov
push
movzwl
sub
inc
movsbl
and
call
imul
push
inc
mov
mov
inc
sub
xor
add
lea
movsbl
mov
lea
mov
mov
mov
dec
mov
add
inc
sub
mov
dec
movzbl
sub
dec
sub
inc
and
lea
dec
inc
mov
inc
add
add
mov
mov
mov
test
je
or
add
xor
mov
inc
inc
inc
dec
mov
inc
mov
add
lea
movzwl
or
add
mov
inc
inc
repnz
lea
add
add
lea
jmp
mov
dec
mov
add
lea
lea
add
mov
lea
lea
imul
imul
add
dec
dec
inc
lea
sub
mov
lea
mov
pop
inc
dec
lea
jmp
push
mov
mov
mov
or
mov
imul
mov
sub
lea
dec
mov
call
imul
lea
or
inc
mov
add
movswl
sub
mov
dec
inc
sub
lea
lea
mov
and
mov
inc
sub
inc
sub
imul
inc
imul
or
inc
call
call
call
mov
dec
sub
push
mov
mov
add
call
lea
sub
add
add
mov
dec
and
inc
call
inc
mov
pop
movzbl
dec
add
add
mov
pop
add
inc
pop
inc
mov
xor
inc
pop
xor
mov
sub
dec
mov
add
or
dec
pop
add
add
pop
sub
inc
mov
lea
sub
push
imul
dec
lea
inc
mov
mov
ret
dec
mov
push
dec
inc
push
dec
mov
push
sub
inc
push
imul
mov
push
and
mov
mov
dec
lea
push
sub
ret
push
and
imul
dec
dec
movswl
inc
sub
lea
and
dec
inc
dec
and
add
inc
dec
inc
add
imul
mov
mov
xor
lea
lea
dec
pop
ret
push
call
imul
push
movsbl
add
pop
sub
sub
xor
inc
imul
mov
dec
jmp
pop
ret
push
mov
mov
imul
imul
push
add
dec
push
dec
inc
push
sub
call
add
mov
mov
mov
add
pop
ret
sub
mov
mov
dec
or
mov
dec
add
mov
sub
lea
mov
mov
mov
xor
or
inc
mov
mov
lea
inc
dec
sub
inc
mov
mov
dec
cmp
jb
add
push
dec
add
mov
mov
mov
push
or
sub
push
lea
inc
xor
add
inc
xor
mov
lea
xor
dec
add
push
imul
inc
xor
mov
mov
mov
dec
mov
dec
movzbl
mov
add
mov
lea
add
add
lea
add
inc
dec
movzbl
inc
inc
dec
inc
sub
mov
inc
inc
movzbl
add
mov
inc
inc
inc
inc
sub
cmp
jb
sub
xor
mov
mov
mov
mov
lea
mov
inc
inc
add
inc
mov
movzwl
mov
dec
cmp
jb
or
xor
or
inc
imul
imul
inc
inc
or
add
inc
lea
xor
sub
lea
xor
imul
sub
pop
inc
movzwl
test
jbe
add
imul
jmp
xor
add
add
add
mov
lods
add
jne
add
stos
add
jne
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
inc
gs
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
je
popa
insb
inc
insb
insb
outsl
arpl
fiadds
dec
outsl
jbe
inc
imul
add
je
je
jb
jne
dec
outsb
outsw
inc
add
inc
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
outsl
imul
jbe
push
je
imul
add
je
je
jb
jne
dec
outsb
outsw
push
add
inc
gs
inc
push
add
push
jns
je
insl
push
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
imul
outsb
fs
js
je
push
add
imul
gs
gs
jne
arpl
add
add
je
inc
dec
inc
push
add
add
je
arpl
imul
imul
outsb
gs
add
push
popa
insb
imul
je
inc
gs
jb
jo
outsl
jb
shrl
add
stos
add
adc
add
lods
add
inc
lods
add
pop
lods
add
jbe
add
mov
add
lods
add
lods
add
in
lods
add
clc
lods
add
adc
add
add
add
add
imul
js
add
add
add
add
add
add
sbb
add
add
add
lods
add
into
lods
add
add
add
inc
push
push
jae
add
dec
data16
jb
imul
jb
je
push
popa
jo
jae
arpl
add
