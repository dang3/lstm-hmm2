es
pop
outsl
and
arpl
iret
jb
jns
push
pop
sbb
mov
pop
mov
fldt
fmull
sub
addr16
nop
xchg
loop
mov
and
cmp
ja
or
xlat
cmp
fisubs
cwtl
adc
shlb
test
adc
mov
lds
mov
int
adc
out
pop
jbe
xchg
jle
mov
cmc
daa
lock
inc
push
sbb
adc
mov
loope
cmpb
adc
lret
hlt
aaa
inc
push
lds
hlt
mov
in
mov
push
ss
xchg
cmc
cmpsb
sbb
enter
lret
stc
add
mov
js
mov
aam
addl
push
jge
dec
insb
jo
xchg
add
std
sbb
fwait
and
push
ds
sub
cmp
sub
push
inc
pop
sbb
xor
lcall
or
pop
sub
int
jae
xor
push
cld
ret
lcall
and
dec
mov
fsubrs
cmpsl
pop
mov
push
adc
or
mov
enter
and
mov
and
mov
fidivrl
push
jne
outsl
lcall
insb
mov
loop
cmc
push
sub
test
stc
repnz
push
push
pushl
push
lea
jne
xor
sar
sub
shl
mov
movsbw
rol
sub
test
adc
bsf
mov
clc
call
sub
and
bts
mov
clc
cmp
cmc
cmpb
jmp
aam
adc
ret
xor
xchg
aam
int
mov
xchg
xchg
or
mov
in
les
lods
int
push
mov
push
pop
fiadds
outsb
subl
incl
movsl
in
ss
jp
std
movsl
sbb
pop
in
ret
sub
mov
mov
jecxz
and
adc
mov
movsl
fwait
popa
or
jle
lcall
xchg
or
adc
mov
stos
xchg
ret
ss
lret
das
adc
sbb
dec
cmp
les
cmp
je
out
mov
aad
dec
outsb
sub
dec
and
sub
push
movsb
xor
pop
repnz
nop
mov
pop
mov
cwtl
dec
dec
call
jp
sub
xor
and
enter
stos
lea
pop
cmp
or
adc
mov
loope
inc
mov
add
hlt
jae
push
cs
dec
mov
iret
adc
pop
les
in
iret
pop
add
ret
clc
and
popa
jmp
jge
jne
test
rcrl
mov
hlt
cmp
mov
mov
or
in
mov
xchg
fildll
dec
stos
mov
mov
ja
call
add
fcoml
aad
fsubr
xchg
stos
ljmp
cmp
cli
sbb
lcall
dec
cwtl
jbe
sub
adc
pop
fstpt
lcall
xor
rclb
inc
fcoml
rorl
sub
mov
mov
and
dec
xor
stc
inc
push
mov
adc
jp
scas
add
out
push
stc
shll
push
js
lcall
sbb
mov
jno
jmp
pop
and
idivl
xor
dec
ja
clc
jmp
negl
dec
imul
cmp
loopne
int
test
inc
push
jno
mov
or
cmc
pop
sbb
mov
mov
cmp
fwait
in
inc
movsl
dec
xchg
stos
add
fcmovb
mov
xor
sbb
mov
popf
inc
clc
test
scas
push
call
mov
ret
sahf
mov
mov
push
gs
dec
aam
repnz
sub
add
and
fs
je
pusha
pusha
movw
mov
lea
jmp
dec
outsl
adc
jp
xchg
lock
stc
loope
jbe
fwait
sub
ret
and
pop
mov
cltd
xor
inc
jns
subl
shlb
scas
out
lds
fwait
or
or
pop
call
xchg
adc
ja
imul
mov
ja
adc
mov
bswap
mov
push
push
pushf
pushf
lea
jmp
inc
lods
into
adc
into
cltd
stc
mull
inc
jp
add
adc
imul
ret
mov
lods
daa
jg
mulb
data16
lods
stc
mov
mov
adc
repnz
sub
jg
movsb
xchg
int
lods
out
jno
mov
fimuls
add
add
stc
xchg
sub
mov
imul
sub
push
in
les
imulb
adc
fbld
lods
sub
jno
pop
das
xor
pusha
lret
pop
dec
mov
add
jge
sbb
pop
jl
jmp
inc
mov
push
dec
push
inc
aad
dec
xchg
xchg
pop
iret
enter
cwtl
sbb
into
out
jmp
push
aam
fstl
inc
cmp
pop
pushf
sbb
popa
mov
cltd
mov
xchg
xchg
dec
xor
pop
clc
xchg
movsb
cmp
or
iret
imul
ja
push
cli
add
cmc
jmp
dec
cwtl
xchg
xchg
lods
je
and
mov
pop
mulb
mov
sub
inc
insl
outsl
dec
mov
push
push
loop
xor
push
nop
xchg
fdivl
add
outsl
adc
pop
sub
mov
je
cmp
push
dec
adcl
pop
jecxz
int
loope
sahf
mov
js
pop
xchg
daa
pusha
sti
dec
outsl
lods
out
or
and
sub
lcall
inc
fistl
ret
fiaddl
xlat
add
mov
ss
stc
frstor
and
jle
test
loope
dec
push
inc
pusha
pop
inc
lret
into
roll
inc
aas
inc
popf
pushf
ficoml
xor
add
lea
je
lea
not
lea
movzbl
lea
call
movsb
shl
pop
pop
sub
and
ja
shl
sti
test
mov
push
inc
xchg
scas
xchg
inc
inc
pop
je
dec
loopne
ja
loop
lcall
adcb
and
push
or
dec
daa
out
out
cmpsl
ret
les
xchg
iret
add
add
xorl
movsl
in
cmpsb
xchg
ficompl
inc
loop
adc
pop
cwtl
xor
jl
dec
call
mov
jmp
out
pop
out
daa
mov
ja
or
ret
add
sub
mov
arpl
out
sarl
xchg
sub
fs
push
cwtl
fwait
aaa
mov
mov
push
jns
lcall
and
ret
sbb
dec
mov
inc
shll
in
stos
pop
push
dec
sub
or
adc
mov
dec
or
xor
stos
pop
xchg
mov
adc
scas
popa
push
sbb
imul
in
adcb
or
inc
xchg
scas
fnstcw
daa
adc
std
adc
sub
orl
jnp
inc
das
adc
dec
movsl
xchg
pop
insb
mov
daa
int3
cmc
aaa
mov
or
mov
dec
adc
jecxz
mov
dec
jle
mov
pop
adc
movsl
pop
es
aaa
sbb
and
xchg
and
push
pop
lret
repnz
jmp
ficomps
xorl
mov
cmp
sub
pop
sub
mov
xor
push
pop
jnp
fsubp
mov
outsb
pop
rcll
cmp
sub
and
lods
cmpl
shrb
dec
push
movsl
iret
xor
icebp
jae
lret
and
and
and
ret
movsb
xchg
arpl
shll
test
fcmovbe
or
cmp
rcrb
xor
rolb
push
mov
hlt
ljmp
and
outsl
ljmp
xlat
cmc
aaa
or
adc
mov
cli
insl
mov
cmp
int3
lret
mov
mov
inc
jle
lods
mov
jo
movsb
jmp
iret
xor
mov
or
call
pushf
xor
inc
ds
pop
arpl
cwtl
fistpll
in
pop
cwtl
mov
imull
pushf
mull
xlat
sarl
and
pop
adc
les
add
dec
sbb
jns
adcl
aas
xchg
imul
test
mov
push
pushf
pushl
ret
lea
pop
mov
pushf
lea
call
pusha
lea
jne
cwtl
seta
call
pushf
jmp
sub
loop
pop
sub
sbb
into
mov
adc
repnz
pop
jnp
inc
pop
loop
sbb
dec
or
mov
and
xchg
stos
or
pminub
push
aad
mov
sub
mov
ret
lock
xchg
pop
mov
dec
xchg
mov
pop
mov
cltd
adc
cwtl
out
push
jmp
orl
lret
pop
pushf
arpl
loope
data16
lea
test
btr
push
test
mov
pusha
mov
pushf
rol
mov
call
pushf
pushl
ret
pop
or
sbb
lret
xor
xor
loop
pusha
xchg
push
call
xchg
imul
fprem
jmp
inc
out
xchg
lods
outsb
dec
mov
rol
aas
cli
fstl
sarl
ss
mov
mov
scas
or
jne
push
xor
outsl
rcrl
lds
loop
or
in
insb
xchg
sbbb
sahf
test
inc
xchg
in
inc
mov
pop
js
cmc
test
fisubrl
cmpsl
iret
dec
lods
push
jno
lret
jecxz
divb
inc
mov
sub
lea
call
sub
jno
pop
sub
sti
mov
pop
ret
or
jns
js
int
mov
sbb
inc
push
shl
inc
out
aas
inc
dec
xor
push
mov
notl
mov
mov
bound
dec
mov
and
lcall
mov
fidivl
dec
sub
fsts
ret
cmpsb
lock
pop
aam
and
bound
push
push
aas
popa
pop
icebp
dec
cmp
jge
cmovle
or
push
cli
pushf
sub
mov
jg
je
xchg
and
sbb
vmwrite
jl
cs
cmpsl
notb
sti
jge
imul
mov
and
pop
fldenv
fwait
mov
lcall
pop
cwtl
ljmp
sub
fnstenv
popa
imul
push
fildll
push
xor
loope
out
jmp
push
call
jmp
int3
jecxz
mov
stos
imul
cmp
in
xchg
test
jl
rcl
sub
dec
or
inc
and
addl
addl
sbb
icebp
rorb
sahf
mov
cli
push
push
mov
push
dec
sub
cmp
daa
dec
cmp
in
dec
inc
xor
andl
sub
or
fwait
inc
and
loope
mov
aaa
mov
call
lds
insb
xchg
into
iret
mov
fimull
add
push
and
lds
fnsave
into
mov
popa
call
dec
test
jg
mov
pop
jmp
ds
add
stos
mov
xchg
popa
subl
fdivs
cmc
mov
fwait
insb
arpl
add
fwait
cli
xchg
pop
repnz
in
xchg
int
mov
and
sbb
dec
push
iret
and
rorl
dec
jbe
aaa
ds
dec
ljmp
jb
add
sub
pop
popf
lods
mov
push
dec
cmpsl
pop
into
jl
pop
sbb
sub
rol
pop
adc
cmpsl
adc
pop
push
cmp
repz
lods
xchg
xchg
add
cmp
push
jne
and
repz
fmull
adc
adc
inc
dec
insb
cmc
int
insb
pop
loope
or
push
ljmp
inc
inc
cmpsb
xor
xor
sub
jns
xor
mov
xchg
je
dec
lea
aaa
les
std
insb
add
sub
lods
or
scas
ret
into
negl
pop
aaa
sbb
call
mov
pop
pop
sub
fistpl
push
mov
add
sub
dec
inc
mov
dec
jmp
aaa
push
dec
or
jns
pop
dec
out
rolb
mov
pop
pop
pop
sub
mov
cli
das
cmp
jae
mov
pop
sti
hlt
outsb
aad
out
and
pop
lods
jl
adc
addr16
pop
popa
push
inc
jb
xchg
or
jp
jg
inc
pop
pop
leave
inc
stos
repnz
ds
dec
jp
xlat
popa
call
or
daa
xchg
adc
inc
sbb
je
hlt
adc
pop
jp
idivl
aam
xor
loop
cli
fstpt
xor
mov
shlb
dec
dec
rcrb
xchg
add
pop
test
pushf
mov
adc
sub
sub
pop
sub
push
insb
xrelease
xor
or
ret
and
push
mov
pushf
mov
ret
fdivrs
mov
lret
dec
into
ss
inc
bound
pop
lahf
jl
loope
ds
out
insl
stos
popl
in
xchg
or
and
into
call
push
pop
es
in
fwait
mov
ficoml
mov
or
loop
jp
cld
loope
in
mov
sub
pop
sbb
inc
adc
inc
mov
xchg
mov
out
jecxz
or
nop
push
pop
jae
xchg
lds
ret
lock
std
lock
adc
pop
cmp
add
push
repnz
icebp
shlb
loop
in
into
notl
sub
and
notb
into
ret
mov
push
pop
sub
adc
and
aaa
pop
in
lea
je
push
pushl
bswap
movsbw
lea
lea
lea
pushf
not
movzwl
movzbl
bswap
bswap
lea
pushf
lea
mov
jmp
inc
dec
insl
loope
sub
pop
xchg
push
orl
xor
lods
mov
leave
addr16
inc
jg
xor
xchg
xchg
pop
pop
dec
lds
xchg
push
xchg
mov
leave
rorb
push
test
sbb
xor
aam
out
mov
pop
cltd
test
fdivrs
or
adc
push
stos
ret
jne
mov
mov
out
lea
jae
call
lea
mov
mov
pushf
lea
jmp
movl
call
mul
pop
sub
xchg
mov
mov
mov
sbb
divl
jno
add
arpl
negl
pop
sub
cmpb
xchg
nop
add
dec
outsl
das
mov
xchg
push
mov
or
inc
and
repnz
cmc
test
call
imul
insb
add
test
fwait
add
pusha
pushfw
popw
inc
stc
dec
sub
mov
cmp
mov
pushf
clc
neg
mov
jmp
add
inc
gs
outsl
fs
gs
imul
add
xchg
test
call
out
sbb
loopne
sub
dec
out
lods
dec
pop
popa
sbb
popa
je
shlb
daa
inc
xchg
mov
mov
cmpsl
incb
dec
faddp
daa
mov
mov
movsb
add
mov
stos
jmp
xchg
cmp
ret
mov
or
testb
cmpsb
lcall
mov
sti
shll
push
js
pop
or
lret
fistpl
sbb
jl
dec
xchg
loope
pop
mov
jmp
push
jo
fists
aaa
pop
add
mov
xor
pushf
or
call
movl
pushl
call
adc
pop
sub
call
and
std
sbb
xchg
mov
and
xor
inc
jp
jb
fnstcw
sbb
cwtl
repz
sbb
js
xor
jecxz
pushf
sbb
lret
mov
cmp
cmovo
scas
jg
sub
fldt
das
mov
stc
inc
lret
cli
test
es
inc
int
lret
sub
das
in
popf
xchg
mov
jl
out
in
xor
sbb
decl
data16
xor
clc
or
fs
call
pushf
movl
pushf
mov
pusha
pusha
mov
mov
lea
jmp
push
jmp
xchg
lahf
pushl
popl
lahf
lea
bswap
mov
movzbw
movl
pushl
pushf
cwtl
lea
jmp
je
movzbl
mov
bswap
lea
push
pusha
jmp
imul
loop
sub
outsl
mov
mov
pusha
test
aas
loope
bound
fmulp
je
ret
shrl
gs
cmpsb
jmp
pop
push
out
mov
inc
loope
scas
testb
add
out
aam
mov
in
sbb
adc
insl
ret
lret
adc
sti
xchg
cltd
lods
push
inc
mov
or
out
xor
and
outsl
or
add
clc
loop
sub
imulb
inc
xchg
aam
mov
cli
adc
and
lea
pop
mov
ds
jmp
add
cmp
out
icebp
push
jp
inc
fdivl
fldl
jae
ja,pt
popf
aas
jb
pop
cmp
scas
dec
jp
movsb
xchg
sbb
iret
icebp
std
mov
mov
pop
add
sbb
sarb
inc
sub
cltd
cmp
movsl
cmpsb
xor
push
icebp
push
lahf
aaa
adc
add
inc
push
xchg
sbb
sub
lods
pusha
pusha
stc
and
iret
lock
adc
xor
xchg
sub
cmp
add
push
test
pop
sub
adc
imul
push
popf
shlb
lock
sub
rcr
sub
sub
add
cmpsb
scas
mov
pop
mov
xor
and
pop
pop
adc
mov
fstp
sbb
xor
fldenv
sbb
pop
pop
cld
push
and
cmp
sbbl
lock
cld
sbb
inc
rcll
adc
mov
dec
lcall
out
call
fidivl
jmp
mov
pop
xor
cmpsl
outsb
outsl
jp
push
mov
loope
clc
mov
add
std
fdivrs
sbb
lea
stos
nop
outsl
jne
pop
fcomps
or
icebp
sbb
adc
movsb
jno
sbb
sbb
scas
dec
jp
inc
xchg
fnstcw
adc
push
mov
sub
mov
cld
repnz
or
call
push
adc
ficomps
cmp
pop
mov
iret
jp
pop
cmp
xor
jg
mov
dec
cmpl
popa
push
dec
push
push
sbb
mov
stc
jnp
push
outsb
or
or
pop
pop
pushf
cli
repz
les
cli
add
adc
mov
or
sub
xchg
repnz
outsl
cmp
xor
mov
iret
cmp
cmp
mov
xchg
js
into
cmp
sti
ret
jl
js
cld
ljmp
mov
lock
adc
std
xor
dec
mov
popa
xchg
dec
xchg
in
jae
dec
dec
movsb
xor
and
sbb
jae
mov
jno
loop
fnsave
std
xchg
pushf
mov
fistps
add
lea
call
jmp
cmc
push
push
or
pushf
push
jmp
mov
sub
call
in
aam
dec
js
jo
nop
sbb
push
xchg
mov
mov
adc
or
fwait
xor
lcall
jno
add
clc
nop
and
pmullw
insl
daa
cmp
xchg
aad
push
cmp
sbb
mov
xor
add
mov
nop
sub
push
fwait
dec
push
ud1
mov
or
adc
inc
cmp
in
push
int3
loope,pn
add
xor
sbb
jne
aas
js
sbb
dec
sub
pop
dec
mov
iret
and
insl
cmc
imul
fcomps
adc
pop
arpl
push
imul
fdivrl
add
wrmsr
subb
push
sbb
or
sbb
mov
les
mov
cmpb
std
push
sub
bt
cmp
clc
cmp
mov
push
lea
ja
pusha
jmp
sbb
mov
pop
sub
push
fsub
iret
cmp
cmp
insb
mov
or
cltd
or
out
cs
sub
inc
dec
xor
movsb
pushf
sub
and
int3
mov
movb
mov
lret
xor
sub
mov
int
add
fcompl
pop
jb
test
and
push
orl
movsl
stos
in
or
imul
pop
xchg
cmpsl
sti
aad
lret
in
mov
dec
and
xchg
inc
mov
add
ret
or
fs
jne
pusha
jmp
jle
mov
push
addr16
pop
mov
jle
out
mov
and
jnp
cmp
mov
jae
add
stos
out
xchg
pop
mov
pop
xor
inc
out
xor
pop
mov
xor
or
pop
push
mov
in
add
mov
mov
push
pop
cmp
sti
jge
push
sbb
mov
aam
sahf
mov
inc
bnd
mov
add
pop
and
push
adc
and
dec
decl
dec
call
in
not
sub
pushf
lea
mov
daa
push
dec
push
mov
bswap
pusha
lahf
mov
or
pop
mov
pushf
test
pusha
lea
je
bts
sar
mov
shl
jmp
mov
inc
call
arpl
out
lock
push
lea
push
cmp
daa
sbb
int
int
clc
jnp
lods
outsl
test
xor
ret
xchg
lret
add
xor
in
and
or
cmp
int3
xchg
pushf
fstps
and
and
ds
addr16
adc
adc
xor
mov
sub
add
sarb
and
cmp
cli
pop
jl
pop
outsl
in
xchg
int3
int
sbbl
adc
mov
popa
inc
inc
mov
inc
push
pop
popa
jg
fstpl
rcrb
or
push
call
jmp
test
add
adc
sbb
movl
pushf
test
pop
clc
mov
cmp
clc
test
cmp
jmp
pushf
xchg
pushl
mov
cwtl
movl
movsbw
lahf
setp
lea
mov
movw
movb
movl
push
call
mov
sub
and
ja
xlat
adc
sarb
push
pop
aaa
jl
fistps
pop
mov
fs
push
imul
and
push
cwtl
mov
xor
fisubrl
sbb
jns,pn
push
fnstsw
xchg
inc
dec
ret
jg
data16
push
mov
fdivrs
or
adc
mov
adc
or
cmp
dec
das
mov
std
loop
imul
push
ficomps
dec
xchg
lea
daa
fisttpl
out
icebp
jb
scas
rorl
add
lock
jmp
inc
cmpsl
jmp
sbb
xchg
add
jb
fisubs
add
sar
ror
call
push
pushl
popl
pushl
pushl
ret
add
add
add
add
add
add
add
or
add
add
add
xchg
or
add
cmp
mov
test
sbb
fwait
mov
in
cmp
sbb
xchg
pop
and
mov
js
repnz
aam
inc
push
cmc
nop
and
decb
out
mov
psraw
cmp
aaa
mov
in
mov
pop
push
jl
test
add
sahf
cmc
loope
movsb
loope
xchg
orl
lods
add
cmpsb
xchg
xchg
sbb
push
daa
and
rorl
sub
mov
inc
ja
xchg
push
xchg
int3
cs
notl
mov
lret
cs
inc
sti
jo
dec
pop
mov
jae
rcrl
push
clc
imul
xchg
mov
into
push
mov
in
aad
or
sub
sbb
sbbb
iret
std
mov
sub
dec
cmp
dec
int
sub
jnp
inc
lahf
scas
adcl
xchg
test
scas
adc
push
call
fs
cmc
lcall
inc
test
push
icebp
popa
ret
mov
push
fists
nop
std
dec
pop
out
lods
sub
adc
mov
daa
mov
pop
loopne
push
and
jae
pop
ja
cmp
sub
es
sub
xor
testb
jl
shrl
lea
xchg
scas
lods
cmp
jg
pushf
or
lahf
xor
scas
cs
es
dec
data16
pop
jecxz
stos
cmp
imul
dec
jb
loope
fmull
push
into
gs
mov
jnp
push
sbb
daa
fdivrl
xchg
fists
sbb
pop
xor
mov
lahf
push
ficoms
mov
jmp
pop
cmp
bound
test
jl
testb
xor
imul
pop
pop
adc
bound
fimuls
je
mov
pop
dec
pusha
mov
pushf
in
push
fildl
mul
mov
sbb
fadds
dec
in
jge
pop
cmp
sub
cwtl
addr16
fistpl
ficompl
pop
xor
repz
loope
xchg
lds
mov
insb
mov
fwait
fwait
imul
mov
cli
xchg
out
sbb
dec
cli
or
inc
rolb
clc
call
mov
pop
push
lock
mov
lock
xchg
adc
and
mov
xchg
fstl
dec
jg
enter
out
call
out
out
xchg
sub
lcall
adc
or
imul
fcmovnu
ljmp
ss
sub
test
xlat
push
inc
dec
push
test
inc
xchg
sarb
dec
fs
shll
pop
in
add
out
adc
fs
out
lret
out
pmulhw
mov
pop
mov
pop
jp
cmpsl
sbb
or
stos
fnsave
xchg
push
in
mov
shll
xchg
and
out
je
push
sbb
nop
cltd
testl
int
sub
push
cli
inc
and
mov
imul
rclb
jo
sub
arpl
enter
inc
fildll
orb
xchg
jle
cmp
push
test
pop
daa
push
push
insl
fistps
pop
sarb
sbb
mov
mov
push
jae
dec
xchg
test
jg
mov
rcll
mov
xchg
and
cltd
ficompl
push
mov
push
jae
xor
jb
movsb
test
in
outsl
insl
pop
push
adc
mov
in
aas
inc
add
mov
adc
and
push
or
int
pop
lock
test
or
xchg
xlat
les
test
sbb
adc
nop
ja
pop
push
cwtl
out
ljmp
mov
movsb
xchg
cmp
shld
dec
jno
lret
les
stos
sbb
jle
push
mov
xorb
in
stos
adc
push
mov
cmpsl
testb
test
sti
push
shlb
repz
out
rorb
push
mov
mov
pop
mov
lock
xlat
pop
movhps
mov
lret
mov
stos
or
jle
test
daa
and
scas
sub
add
jle
sub
mov
in
xor
stos
fmull
xlat
or
mov
ss
repz
arpl
inc
jno
jge
dec
dec
out
mov
adc
pop
jne
shlb
aad
fucomp
scas
inc
cmpsl
test
je
dec
imul
adc
icebp
dec
pusha
or
scas
adc
nop
pop
movsb
aas
adc
jb
mov
push
add
lods
shll
sub
sbbl
pop
cmp
pusha
adc
mov
ss
xlat
insl
insb
jo
rol
mov
int
ficoml
xchg
push
add
lcall
scas
orl
lret
inc
dec
cmc
arpl
push
aam
out
adc
rolb
fcompl
jmp
push
xor
mov
and
loop
cmp
pop
jns
pop
ffree
ret
imul
fsubl
insl
mov
jmp
xchg
sti
sbb
cmp
cld
fs
sub
pop
sbb
cmc
imul
in
jo
pop
repnz
or
sbb
stc
lret
cmp
or
mov
xor
bound
lahf
imul
jo
jb
into
pop
adc
mov
mov
lcall
rcrl
push
xchg
xchg
push
movsl
mov
loope
lock
lcall
push
jbe
inc
fmull
icebp
aaa
lods
mov
sahf
adc
cltd
es
es
xorl
xchg
or
jns
mov
cwtl
mov
jb
test
xor
mov
inc
jno
nop
andb
and
data16
jge
pop
dec
adc
cltd
repz
xchg
outsb
sub
lret
add
cmp
mov
cmp
pop
bound
push
sahf
hlt
cs
or
jp
rcl
adc
subb
push
pop
nop
in
sub
int3
fnstenv
sbb
scas
stc
jl
cltd
adc
mov
bswap
cmc
jno
scas
adc
lea
mov
push
imul
cmp
test
jno
movsb
or
adc
nop
xchg
sbb
adc
adc
int
inc
sarl
test
sahf
andb
mov
xor
push
dec
mov
cmpsl
loopne
push
sub
aam
out
mov
xorl
outsl
cmp
sti
leave
insb
or
mov
popa
notl
fdivrl
stc
push
dec
es
add
aas
ja
adc
ljmp
fstps
ljmp
test
fbld
loopne
add
jae
sub
shrb
ss
out
aam
stc
and
lods
mov
pop
outsb
ds
mov
das
push
ljmp
je
xor
push
mov
sbb
iret
add
xchg
jmp
sub
int
sarl
sub
mov
int
and
inc
fadds
lcall
dec
pop
push
das
jnp
mov
and
dec
fmulp
mov
mov
or
xor
rorb
xlat
and
shl
jle
push
les
sti
mov
jmp
out
fs
add
daa
and
call
or
mov
mov
xchg
add
movsb
inc
rcrb
je
mov
xor
aaa
cmp
test
push
mov
jnp
sub
inc
push
inc
sbb
adcb
push
lahf
orl
rep
imul
mov
icebp
ja
mov
mov
push
push
mov
pop
ret
leave
push
add
ret
jbe
jle
inc
and
push
cmpsb
mov
sub
aad
fidivrl
add
sub
cli
or
sbb
imull
cmp
lret
sub
xor
jp
out
mov
jo
xchg
leave
sbb
jno
dec
inc
aas
je
pop
dec
push
loopne
test
dec
outsb
jns
cmpsb
sub
js
sbbb
or
jle
dec
movsb
out
inc
ljmp
xchg
push
aaa
inc
mov
je
mov
test
add
dec
inc
mov
add
adc
jp
mov
mov
jl
adc
incl
inc
hlt
cmp
jp
jge
mov
push
packsswb
jo
xchg
dec
arpl
mov
fdivs
fstps
push
lds
xchg
mov
add
das
sub
lret
xor
sbb
and
mov
push
cli
cmp
and
mov
fwait
cmpb
repz
lods
sbb
adc
nop
jo
pushf
outsl
push
int
ss
test
sbbb
inc
inc
pusha
sub
push
jne
sti
sti
or
mov
jp
and
sub
xorl
lcall
push
test
push
stos
gs
scas
test
out
ror
mov
nop
jo
cmp
lcall
popl
dec
rorl
in
cmovne
aaa
lock
mov
dec
jmp
mov
jp
lods
mov
push
mov
mov
mov
lods
popa
cmpl
mov
shll
mov
ja
mov
cmp
loop
sub
enter
mov
sbb
movl
sbb
xor
cmp
data16
lods
mov
and
out
testl
ret
push
in
and
ljmp
clc
out
in
add
shrl
cmp
add
lret
mov
add
and
cmp
cmp
add
add
dec
push
sahf
or
jmp
frstor
push
shrb
mov
out
sbb
mov
pop
mov
lods
adc
pop
nop
sub
leave
int3
cli
xchg
mov
jp
push
jo
mov
dec
mov
mov
sub
adc
rcrb
mov
bound
in
lahf
in
push
roll
mov
fcmovnu
arpl
aam
fstpl
sub
dec
push
sbb
fwait
imul
ljmp
inc
jne
mov
cmp
adc
or
cmp
lahf
aam
out
xor
push
mov
into
insl
push
popa
in
out
jp
cmp
icebp
add
hlt
daa
fcomp
and
pop
xorl
sub
inc
inc
or
mov
jae
adc
out
imul
insl
inc
lret
test
into
mov
cmp
mov
mov
imul
in
fsts
and
sbb
cwtl
jecxz
push
add
add
shl
bsr
shld
push
call
movsbw
lea
pushl
popl
jmp
push
lea
ja
jmp
xchg
push
mov
pushl
lea
not
mov
not
pushf
lea
mov
pushf
jmp
pop
inc
add
pop
sub
lock
and
in
pusha
lahf
jmp
mov
int
dec
cltd
mov
rclb
sub
sbb
push
push
push
shll
dec
imul
pop
pop
test
hlt
ror
sub
sub
mov
fldt
int
enter
in
inc
add
faddl
xchg
enter
inc
pusha
jge
push
sbb
ds
scas
ds
and
insl
orb
js
int
arpl
cmp
jg
xchg
je
add
mov
addl
pusha
lea
je
test
cmp
pusha
push
pushf
jmp
lea
jne
call
sbb
stc
pop
sub
lock
adc
fstl
xchg
cmp
xchg
cmp
inc
cs
std
add
incl
das
dec
lahf
xor
or
pop
movsl
or
movsb
addb
xor
dec
mov
and
mov
fbld
xchg
adc
das
daa
add
inc
inc
popf
mov
inc
daa
dec
push
idivb
dec
adc
and
out
lock
mov
pusha
fldenv
pop
les
stos
lret
sbb
cmp
ss
out
xor
mov
mov
js
and
pop
sbb
or
movsb
clc
pop
sub
sub
in
icebp
fildl
stos
scas
pop
xchg
cmp
inc
sbb
and
jle
xchg
push
in
fsubs
pop
dec
cltd
int3
and
out
sti
inc
lods
push
rcrl
je
stos
test
dec
cli
mov
add
add
or
mov
and
push
daa
ljmp
lods
xchg
add
cmp
loop
xchg
xchg
fs
in
sti
jl
ret
sbb
xlat
js
cmp
outsl
mov
sbb
jmp
and
push
lods
lret
nop
xchg
and
add
pop
ljmp
arpl
pop
shr
inc
push
sahf
dec
test
add
testl
cld
mul
test
test
add
mov
or
dec
rolb
lret
adc
or
or
stc
emms
pop
lods
inc
sahf
icebp
jae,pt
lret
ret
cmpsl
mov
pop
int
scas
fwait
adc
xchg
mov
imul
jle
aam
pusha
adc
notb
daa
out
repnz
sti
pop
sub
pushf
push
ljmp
xor
insl
mov
stos
push
mov
pop
lds
das
dec
ss
popf
push
rcrb
xchg
in
out
in
imul
mov
lret
mov
pushf
jnp
bound
sbb
dec
push
jl
lods
mov
inc
add
mov
pop
xor
mov
loope
pop
mov
out
push
hlt
jl
lock
jae
jmp
movl
jle
push
push
movb
pushl
lea
jmp
jo
jns
pop
sub
scas
mov
adc
inc
dec
rorl
jecxz
fistps
mov
pusha
fdivl
cmc
sahf
clc
jecxz
sub
loop
sti
mov
fmull
dec
sub
daa
or
xor
or
xchg
ja
push
and
testb
cmp
mov
int3
mov
sbb
insl
stos
mov
jnp
sub
add
stos
dec
jne
push
cwtl
dec
pop
pop
jle
std
jns
sub
push
std
clc
imul
movsb
xchg
enter
xchg
shll
lods
insl
cmpsb
xchg
adc
ss
pushl
and
and
popf
lahf
jge
ja
ljmp
push
dec
into
xchg
mov
popf
imul
imul
jge
pop
pop
inc
push
arpl
dec
in
inc
movb
cmc
iret
mov
jmp
push
sbb
jbe
push
pop
xor
std
pop
adc
lods
cltd
je
insl
mov
popf
jmp
adc
cmpsl
popf
repnz
insl
push
adc
mov
pop
in
shll
sbb
fistpl
outsb
push
ret
fadd
sub
lret
lret
sbb
scas
into
add
pop
pop
xor
and
push
jae
lahf
fiaddl
sbb
cli
xchg
mov
xchg
lret
push
pop
cmp
jle
push
imul
std
outsb
push
dec
mov
scas
push
out
mov
shrl
mov
cld
and
aaa
pop
clc
in
jp
int3
inc
push
mov
lea
je
pusha
test
call
outsl
insb
gs
jne
xor
cs
insb
add
shl
pop
sub
lret
loope
fdivl
je
scas
push
jo
or
pop
add
xchg
cltd
lods
sub
dec
jmp
mov
imul
and
cmp
adc
test
pop
and
scas
cmpl
std
stc
stc
sbb
cld
shlb
cmpsb
mov
pop
jno
xor
and
xor
js
out
inc
stc
pushf
sub
loopne
push
push
xchg
imul
imul
inc
cld
pop
sub
sbb
jae
adc
pop
enter
pop
mov
push
insl
in
mov
lods
xchg
imul
mov
mov
jle
fcmove
test
xchg
cmc
pop
sahf
push
xlat
push
jo
fcoml
movb
test
push
xchg
aad
push
sbb
xchg
int
pop
sub
mov
nop
ficoms
je
inc
cmc
pop
sahf
outsb
add
and
fcoml
leave
jno
lds
or
test
mov
movsl
mov
aas
cmp
jp
mov
aaa
mov
pop
mov
jae
mov
fisubrs
mov
xchg
pop
sub
push
out
add
insb
mov
fneni(8087
xor
xchg
fst
fmuls
repnz
les
inc
dec
lea
pop
bnd
push
sub
bound
negl
cmpsl
sbb
mov
jecxz
jbe
jg
sub
shlb
lds
and
jae
add
or
pusha
lea
je
pushf
cmp
cmc
cmc
or
call
push
xchg
mov
xor
repz
cmpsl
xchg
push
fs
push
jge
jmp
jecxz
adcb
push
ljmp
scas
pop
dec
rcll
xchg
mov
loope
popa
jp
cmpsl
scas
xchg
ficompl
and
xchg
pop
call
lea
push
movsl
fnsave
outsl
mov
aad
and
push
xchg
aad
adc
lret
movsl
pop
sub
je
adc
in
xchg
mov
xchg
dec
pop
call
jne
push
movsl
fucomp
inc
cmpsb
push
negl
and
out
cmp
popf
dec
jmp
pop
test
jne
mov
out
sbbl
inc
addl
ret
sti
mov
je
mov
adc
out
sub
mov
mov
iret
xchg
sbb
and
test
mov
fcoml
or
pop
dec
mov
cmp
jge
cltd
out
ret
jle
push
imul
dec
or
or
into
rcrb
pop
xor
add
push
jg
test
mov
push
sbb
mov
inc
jae
repnz
ret
sub
repnz
cmp
xor
sub
ret
mov
jg
sub
mov
adc
loop
dec
sub
sbb
int
enter
movsb
popf
mov
aad
fistpll
fdivs
addr16
and
das
add
jg
test
inc
pushf
mov
cmp
push
mov
xchg
push
outsb
and
iret
mov
lea
fsubrs
sti
rcrl
lea
je
not
mov
pushf
lea
movl
lea
jb
push
movzbw
bswap
mov
pushl
jmp
out
std
rcrl
out
subl
jbe
mov
dec
shlb
arpl
ret
mov
or
stos
or
sbb
imul
push
cli
pop
scas
inc
addr16
jne
jbe
das
in
and
mov
movsb
adc
scas
stos
and
je
leave
sbb
push
aad
fmul
aas
mov
fmuls
test
call
xor
add
imul
movb
stc
pusha
add
pushf
mov
movb
mov
lea
jmp
xor
stc
stc
movw
pusha
cmp
cwtl
push
lea
lahf
push
mov
pushl
jmp
popf
jecxz
rcrb
filds
or
inc
mov
imul
stos
mov
pop
loope
das
dec
adc
out
sub
push
out
scas
fldt
and
clc
imul
lret
cli
push
add
jb
cmpsb
mov
add
into
sahf
mov
out
mov
xchg
nop
lods
push
aaa
aaa
mov
fldenv
testb
int
lods
jae
push
bound
sbb
mov
cld
sti
out
adc
js
mov
push
pop
cmpl
lea
stos
xchg
aaa
rcrb
mov
lahf
jg
push
jne
xor
mov
nop
fcmove
nop
sbb
jecxz
mov
popa
loopne
outsl
push
fdivr
sti
pop
scas
sub
ret
xorl
mov
mov
adc
in
aad
imul
mov
inc
push
jne
xor
aas
mov
loope
push
jae
pop
sub
jo
cli
ljmp
xor
movl
daa
sbb
jb
fidivl
xor
xchg
inc
pop
and
add
das
or
xchg
scas
stos
insl
push
aad
lahf
call
cmp
pop
dec
outsl
pushf
fwait
pop
gs
inc
jbe
adcb
push
pop
pop
adc
dec
filds
insl
push
dec
jmp
sbb
lret
jae
xchg
les
stos
ficomps
sub
pushf
push
pushf
pushl
ret
mov
in
ret
xchg
lea
jae
and
xchg
stc
lret
imul
mov
aam
mov
mov
inc
gs
mov
jp
or
ficomps
dec
pop
cmp
lods
mov
loop
mov
add
pushf
sbb
sbbl
scas
sub
cmc
jp
test
sub
mov
leave
das
and
psubusb
xchg
xor
gs
imul
fwait
jmp
cwtl
inc
mov
popa
add
cmp
cli
clc
lods
iret
mov
ret
pop
lds
pop
roll
pop
mov
mov
mov
setl
loope
add
mov
pushf
push
push
lea
jmp
call
callw
pop
sub
mov
fdivl
cmp
clc
shl
sbb
dec
in
jno
int
pop
ds
inc
xorl
loop
mov
gs
inc
int
scas
pop
cmp
dec
aaa
jb
nop
hlt
outsl
rolb
inc
jbe
add
out
mov
push
mov
push
dec
aad
sub
add
and
xchg
xor
lds
mov
shrb
cmc
in
dec
jo
cs
jae
pop
sub
sbb
cs
lods
sbb
dec
mov
addr16
aas
xor
pusha
or
and
mov
mov
pop
push
loop
into
sub
cmp
ljmp
push
mov
sub
out
or
ja
shl
testl
pushw
nop
inc
inc
addl
jg
js
cmpb
push
jbe
pop
adc
fisubrs
insb
sub
and
push
push
push
lea
jae
test
clc
mov
clc
mov
mov
bt
shrd
and
and
mov
pusha
sub
jns
xor
cmc
push
repnz
jmp
movl
call
inc
data16
pop
sub
cmpsb
fsubr
lahf
lods
neg
in
into
sbb
iret
xlat
test
enter
or
fsubl
movsl
clc
jp
cmc
mov
fsts
sub
mov
add
ljmp
push
jg
jae
cwtl
xchg
sbb
adc
lds
dec
mov
jbe
sub
mov
add
jnp
adc
dec
rolb
dec
xlat
insb
sub
pushf
call
jmp
lods
lock
cmp
xlat
movsl
loope
xor
and
cmpsb
push
shlb
mov
dec
inc
dec
and
jb
or
test
popf
scas
in
mov
sbbb
mov
repz
insb
add
stos
jle
xchg
mov
jecxz
add
into
aas
roll
adc
fnstenv
mov
dec
pop
fidivrl
sahf
fwait
push
jle
mov
pop
mov
push
jne
dec
stos
push
dec
in
leave
cmp
lret
aad
aam
push
mov
addl
jns
lea
pop
mov
outsb
popf
xor
pusha
mov
dec
add
fnsave
out
data16
out
fldcw
in
call
ljmp
xor
sti
bound
icebp
test
mov
nop
xchg
fwait
sub
adc
xlat
repz
or
cltd
adc
add
sahf
sbb
add
inc
dec
dec
mov
or
sub
pop
arpl
rcr
jle
in
mov
sub
cmp
fimull
xchg
imul
arpl
lret
out
xor
dec
bound
mov
adc
mov
jae
repnz
fsubl
mulb
pop
adc
mov
cmp
test
incl
inc
cld
dec
fbstp
packsswb
jp
cs
ss
ss
jbe
xor
and
mov
out
cmp
addb
sbb
push
push
mulb
into
out
sub
out
sbb
mov
mov
add
stc
pushf
stc
or
call
test
pushl
movb
pusha
lea
je
clc
sub
pushf
push
cmc
clc
cmp
push
lea
ja
call
out
nop
pop
sub
out
imul
fdivr
outsl
shll
sub
jge
sbb
mov
lcall
push
push
ret
lock
in
lahf
sub
xor
mov
fidivrl
cmpsb
dec
inc
mov
xchg
les
adc
xchg
aad
dec
jnp
loope
icebp
repnz
sbb
mov
ret
inc
mov
enter
mov
xor
pop
push
adc
sub
mov
cmc
lods
ds
and
decl
pop
cltd
mov
jmp
inc
xchg
or
add
xchg
lods
ret
fbld
dec
cmpl
xchg
xor
adc
mov
aas
xor
das
jb
jecxz
or
jno
mov
sub
push
push
ljmp
fwait
addb
push
adc
leave
adc
jbe
or
je
inc
sub
nop
ja
sbb
push
adc
int
cltd
sbb
inc
repnz
aam
out
pop
movups
fidivrl
dec
cmp
int
jo
adc
pop
cld
pushl
pushl
popl
pushf
mov
pushl
ret
cwtl
call
in
mov
stos
xlat
xor
mov
or
add
dec
add
jl
inc
std
das
lods
sbb
sub
ret
inc
jg
jno
pop
les
lods
aas
lret
lods
cmpsl
inc
popf
inc
inc
rolb
jmp
fidivs
mov
jb
jnp
jbe
add
aam
enter
gs
dec
jmp
lea
pop
popf
jg
add
daa
insl
xor
fnstcw
cwtl
aad
fsubs
pop
sub
mov
test
out
aad
call
movsb
add
jp
scas
idiv
pop
in
mov
push
dec
clc
out
loopne
pop
and
cmp
cli
fcmovnu
add
in
aad
cwtl
mov
shll
popf
mov
jp
dec
dec
ds
mov
dec
inc
jge
sub
or
sti
rolb
sbb
fsubl
dec
xchg
mov
mov
jp
inc
das
pop
cmpsb
mov
ud2
fmull
mov
sahf
push
pop
pop
xchg
es
fwait
xchg
push
jne
popf
cmp
add
pop
sub
pop
arpl
subl
or
inc
sub
into
pop
ficomps
pop
icebp
add
adc
aaa
int
cmp
and
das
xchg
int
jg
inc
cmp
adc
hlt
sub
push
pop
mov
popf
js
jb
lods
mov
mov
insb
aas
fcmovnb
addb
div
lcall
dec
sbbb
mov
ret
outsb
pop
loopne
hlt
cs
jo
fnstsw
sbb
mov
insl
fldenv
lret
pop
sub
or
add
push
lds
pop
xor
cmpsl
mov
mov
push
sbb
add
mov
sub
push
and
push
fidivs
out
xchg
xor
stos
daa
aam
dec
mov
std
cld
testl
mov
enter
pop
mov
mov
mov
or
dec
mov
or
cmp
dec
test
aaa
cmp
xchg
test
lcall
sarb
mov
mov
pushf
pushl
ret
pop
inc
gs
inc
jmp
je
push
jle
mov
cmc
xlat
test
int3
dec
adc
xchg
stos
loopne
push
pop
outsb
sahf
cmpsb
test
call
jl
sahf
leave
sbb
sbb
lcall
in
or
clc
mov
mov
sub
sub
mov
out
push
std
push
xor
stc
into
pop
inc
cmp
pop
pop
int3
shl
lret
and
pop
sbb
test
fcomps
js
mov
int3
mov
icebp
cmp
mov
dec
cmc
inc
stc
mov
push
into
cmp
adc
nop
inc
cs
fisubrs
lock
sbb
ss
and
add
mov
insb
cmpsb
leave
in
ret
pushf
mov
xchg
or
shr
arpl
mov
sbb
sub
adc
jae
int
sub
mov
leave
fsubrs
mov
or
mov
xor
sub
push
mov
cld
das
and
sub
inc
fnsetpm(287
leave
sahf
sahf
push
xor
stc
lock
ljmp
loop
dec
push
rorl
xchg
adc
xchg
clc
inc
cmp
adc
add
inc
int
sub
iret
fwait
dec
insl
nop
pop
sbb
testl
inc
push
pop
jle
sbb
std
mov
or
das
xor
cli
ja
jnp
pop
push
pop
inc
cmp
adc
push
mov
addb
cmpsb
hlt
sub
xor
adc
mov
or
mov
lock
pop
sti
call
jmp
in
add
bound
mov
pushl
pusha
push
lea
jmp
mov
sub
fadds
nop
push
cli
inc
int3
aaa
sar
roll
add
dec
jb
cmpb
push
or
loop
sub
dec
sbb
sbb
fstpl
aas
mov
iret
gs
fists
push
pop
test
fsubs
push
inc
loop
jge
inc
jl
in
out
fadds
fwait
or
scas
clc
and
xchg
fbstp
and
xchg
imulb
out
addr16
test
repz
out
mov
push
and
mov
pop
sub
pop
dec
les
inc
cmp
jnp
push
insl
lret
mov
cmpsb
ret
sub
inc
pop
std
add
ret
lret
sbb
add
push
inc
push
jne
xor
jnp
xor
inc
adc
icebp
adc
mov
dec
xor
outsb
mov
push
out
rcll
push
cmp
sbb
mov
sti
push
lock
aad
push
leave
cmp
mov
fidivrl
sbb
movsl
insl
mov
fmuls
hlt
imul
flds
xchg
sub
adc
inc
je
jl
push
mov
dec
inc
cld
pop
lret
xor
repnz
shl
and
mov
pop
test
cmp
or
sahf
mov
dec
xlat
xor
ror
sub
sbb
sub
fistps
mov
in
push
int3
int
inc
inc
les
jl
xor
loope
cltd
lods
int
cmp
lahf
cmpsb
ret
cmp
bound
add
fwait
jg
cmpsl
js
jno
sbb
out
pop
ror
jge
ja
scas
cmp
cltd
in
push
jb
gs
pusha
pusha
movb
movl
jmp
popf
adc
iret
pop
sub
jns
ret
sbb
ret
stos
dec
cmpsl
ret
into
inc
inc
lret
sarl
xchg
or
add
xor
pop
lret
cmp
and
jecxz
xor
add
rcrb
ror
rolb
fwait
jo
xchg
xchg
into
dec
mov
mov
and
xchg
es
xchg
es
es
mov
pop
pop
mov
lock
repz
lret
dec
jb
cwtl
xor
fiadds
ror
jle
popa
nop
add
lea
jne
sbb
rcl
btr
mov
clc
pusha
or
movsbw
sub
shrd
lea
bt
add
js
pusha
sub
pushf
clc
bt
pushl
popl
pusha
cmp
mov
lea
ja
rcl
inc
sbb
sub
rcl
add
bsr
call
shl
mov
pusha
cmpb
mov
jmp
stos
jns
rcrl
loopne
mov
cmpsl
cs
pop
jno
add
mov
pop
push
mov
js
cmpsb
rorl
push
sbb
ret
aad
hlt
or
loopne
or
rcll
in
aas
in
outsb
outsb
add
cmpsl
adc
cmp
ja
sbb
adc
ss
insl
test
pop
sbb
or
inc
pop
push
scas
in
push
enter
shrb
xchg
mov
call
jp
and
loope
stc
mov
dec
push
insb
sub
pushf
lea
jne
push
pusha
mov
movb
lea
jmp
or
pop
sub
popf
dec
jg
cmc
push
pop
adc
sub
inc
popf
jl
pop
inc
mov
adc
movsb
or
sarl
roll
inc
inc
ret
aaa
cmpb
out
or
adc
push
cmp
pusha
xorl
mov
lret
in
out
outsl
mov
rcr
inc
jae
push
push
pop
sti
cmp
push
push
hlt
rolb
outsb
sbb
lahf
push
xor
inc
sbb
mov
inc
mov
xchg
int
lods
dec
pop
mov
mov
sub
ja
inc
jnp
lcall
imul
movsl
fs
je
mov
lret
out
gs
xor
jmp
adc
nop
je
jnp
std
xor
outsl
push
mov
xor
loop
outsb
sbb
push
mov
leave
fiaddl
fmull
subb
or
jl
cmp
fisubrl
push
jmp
dec
add
push
fldcw
cmpsb
mov
sbb
cmp
lret
iret
mov
cmp
in
dec
jecxz
adc
lret
add
insl
add
std
shll
ret
mov
xlat
test
pop
and
ficoms
sbb
jb
xchg
inc
mov
push
outsl
in
fwait
pop
mov
sub
ja
mov
stos
out
pop
mov
lods
adc
cmp
mov
mov
mov
pop
addr16
jns
mov
push
mov
adc
inc
mov
aas
popa
inc
mov
pushf
test
iret
ret
lcall
or
push
xchg
out
pop
lods
mov
or
pop
push
cmp
push
pop
btr
sub
inc
adc
cmpsb
mov
hlt
std
mov
jns
fiadds
ss
fstpl
jns
mov
int3
test
and
pop
mov
xchg
inc
and
mov
scas
mov
mov
pop
xchg
stc
movsb
adc
xor
negl
movsl
xchg
and
jmp
pop
int
ss
jne
in
mov
adc
inc
and
add
mov
hlt
fisubrs
push
push
mov
pop
xchg
sub
adc
push
lods
std
std
inc
mov
pushf
add
pushf
or
push
lea
je
pusha
jmp
pop
dec
jo
pop
sub
push
pop
inc
mov
rcl
pop
pop
xchg
rcl
lds
call
pusha
inc
push
movsl
jno
inc
iret
aas
movsb
xchg
inc
je
orl
jo
je
fistl
and
adc
pop
mov
sub
xchg
repnz
bndldx
insb
adc
addr16
enter
inc
mov
mov
mov
or
ljmp
adc
clc
xchg
sub
sub
sub
mov
pop
cld
inc
movsl
into
pop
mov
pusha
mov
addr16
es
insb
out
sub
lock
mov
call
flds
stc
je
cwtl
lea
xor
stc
outsl
movsb
jl
push
addr16
mov
adc
pusha
arpl
cli
je
gs
jo
adc
jp
in
mov
pop
sub
push
aam
push
cld
dec
jmp
xchg
jmp
popf
arpl
dec
mov
aad
shrl
jle
aas
sub
sbb
pop
pop
jo
rol
adc
lods
inc
push
push
add
xchg
int3
test
xchg
dec
scas
sbbb
mov
add
test
test
push
call
push
movl
pusha
call
pushf
mov
push
push
pushf
lea
call
call
movl
jmp
pop
test
aad
sub
jle,pn
mov
arpl
pop
jle
ljmp
push
push
lea
pop
xor
nop
je
ret
rcr
shl
push
cmp
lcall
xchg
xor
fs
addr16
fcmovbe
lods
into
jno
xchg
mov
insb
sbb
sub
fcom
sbbl
test
outsl
pop
out
jge
pop
lods
adc
cmp
cmpsb
sub
adc
and
sub
aam
sub
xor
xchg
or
inc
shlb
mov
pop
and
jnp
xchg
or
aam
mov
mov
out
push
fstpl
shlb
add
out
add
fdiv
push
rolb
cwtl
ja
lahf
loope
insb
jle
adc
or
nop
pop
adc
aad
adc
lods
in
sbb
push
mov
cs
sbb
lahf
push
push
inc
mov
xor
xlat
xchg
bound
adc
sub
pop
sub
outsb
xchg
es
fimuls
sub
stos
adc
inc
out
icebp
movsl
shlb
or
xchg
or
jecxz
dec
sbb
pop
adc
out
pop
movsb
dec
std
sahf
cmp
dec
movsb
sub
xchg
aaa
mov
cld
push
sar
cmp
ret
inc
in
sub
mov
les
movsl
ds
mov
bound
insb
iret
jno
push
sub
aaa
and
pop
jno
xchg
push
push
jmp
movsl
or
rorl
ficoml
fdivrl
add
adc
into
outsl
adc
repnz
mov
inc
scas
test
push
imul
es
adc
sbb
in
hlt
dec
inc
and
in
lock
fucom
jbe
out
lahf
addr16
sbb
out
popf
xchg
sub
sbb
mov
sahf
xchg
adc
jae
insl
mov
pop
or
into
mov
cmp
loopne
lret
mov
jl
xorl
fldt
cmpsl
icebp
in
arpl
adc
xor
mov
adc
push
pop
sub
mov
jno
cld
fsubp
pop
push
dec
cli
xchg
push
add
pop
fcompl
add
adc
inc
leave
lods
cld
jmp
mov
pop
ljmp
or
mov
nop
cld
ds
mov
int
inc
xor
push
aaa
cltd
insl
leave
jp
jnp
xor
jp
in
sub
mov
lods
iret
test
jnp
das
daa
icebp
rcl
xchg
sbb
rcll
filds
repnz
or
imul
popf
xchg
nop
pop
sub
pop
sub
mov
mov
mul
push
jmp
or
mov
sub
les
lret
push
sub
sub
fsubl
lret
mov
mov
jb
mov
sar
pop
dec
cmpb
jp
outsl
sub
xchg
sbb
inc
dec
ss
iret
gs
out
xchg
xor
outsl
dec
jne
je
pop
xchg
mov
cmp
push
call
jmp
sub
inc
cmp
fnstcw
aaa
ret
jno
lahf
sbb
pusha
dec
and
shlb
pop
insb
xchg
popa
jg
test
mov
add
outsl
out
dec
stos
cmp
adc
sub
pushf
fnstsw
add
sub
inc
jg
aam
jbe
dec
or
mov
push
inc
cmp
fidivs
dec
jbe
enter
dec
in
mov
loope
dec
adc
pop
mov
mov
push
movsb
or
inc
into
scas
push
adc
fmuls
and
gs
xchg
push
xor
fcom
stos
xor
fcomps
xor
je
cmc
fs
stc
inc
lods
shrb
jg
rcrb
xchg
jae
sti
adcb
in
mov
mov
adc
mulps
mov
rorl
lea
sbb
add
adc
std
xor
mov
xchg
aaa
hlt
sbbl
pop
jne
aad
scas
in
sub
mov
pop
sub
pushf
fwait
xchg
dec
rdmsr
cmp
or
xchg
push
add
cmc
xlat
sahf
adc
inc
xchg
scas
inc
sub
adc
sbb
aas
sub
xchg
adc
cmc
sti
lock
popf
jno
jl
mov
subps
imul
xchg
popf
dec
xor
js,pn
aam
and
jbe
cmp
fsts
mov
pop
ja
push
jge
inc
push
out
incl
insb
sub
out
adc
in
fcomps
loopne
push
sub
sub
or
pop
xchg
incb
faddp
or
adc
es
lret
jmp
popf
cmp
dec
push
jecxz
lret
xchg
bound
and
imul
push
or
repnz
cmp
cli
int3
push
push
std
adc
mov
fisttpll
cmpsl
mov
mov
mov
jne
push
iret
lret
rol
into
mov
jmp
loopne
gs
ds
push
mov
pop
clc
xor
cld
or
out
pop
insb
sub
jecxz
pop
pop
call
hlt
xchg
fistpl
pop
mov
fucom
ret
movsl
mov
push
ja
cli
xor
daa
out
mov
cmpb
aaa
shr
or
sub
int
cmp
jae
ljmp
sbb
push
loope
fnstcw
out
push
imul
inc
jg
or
adc
cltd
dec
inc
sbb
stos
sbb
mov
mov
or
dec
inc
fsubl
orl
dec
sub
pop
mov
es
insl
sti
sub
or
fs
mov
out
cmc
mov
test
mov
outsl
dec
xor
test
nop
and
out
cmp
mov
scas
fwait
mov
pop
test
pop
lret
or
sub
cld
sti
fmul
rorl
add
pop
sbb
repnz
jp
mov
push
xor
std
dec
nop
sub
fs
jno
fsubrs
pop
fbld
sub
xor
in
out
xchg
fisubrs
sub
inc
stos
in
push
jmp
pushf
mov
lea
jne
jmp
push
jo
ficompl
divb
and
popa
mov
jb
sti
or
negb
mov
cmp
mov
xchg
adc
xchg
cltd
sbb
jb
scas
mov
sbb
xlat
cmpsb
andb
xor
sbb
addr16
fistl
jbe
icebp
lret
sbbl
fldenv
scas
stc
dec
jns
fidivrs
pop
out
insb
xor
pushf
movb
lea
call
cmp
clc
pushf
sub
jmp
pusha
mov
pushf
test
call
adc
call
sti
sbb
add
adcb
mov
pop
or
mov
mov
clc
jnp
inc
lock
sbb
sub
rcr
mov
xor
cmp
jmp
lea
bound
pop
jb
ret
mov
mov
jae
mov
add
sub
push
out
cmp
jo
lahf
mov
lret
faddl
bound
sub
pushf
push
dec
push
mov
jbe
add
xchg
int
push
or
add
and
adc
imul
sti
bound
lahf
aam
cld
add
pop
fnstsw
mov
insl
dec
and
xchg
adc
xor
and
xchg
jns
pop
mov
cmp
mov
imul
sti
adc
jle
test
es
mov
xchg
int3
rcll
or
pop
cltd
popa
in
inc
clc
mov
mov
mov
mov
aas
pop
and
xchg
aas
hlt
fxch
outsb
add
lcall
js
inc
dec
imul
test
ficoml
stc
movsl
aad
daa
iret
ja
sub
sub
fdivs
xchg
pop
xchg
inc
in
mov
icebp
cmpsb
cmp
inc
and
mov
push
add
popl
pushf
movl
pushl
ret
ret
mov
push
jnp
ret
xchg
mov
aas
repnz
jno
mov
sbb
testl
dec
sub
push
mov
push
mov
jp
int
icebp
xor
mov
insl
sahf
mov
imul
mov
pop
and
jae
pop
ds
neg
jmp
lock
push
push
dec
pushf
aad
cmp
sbb
sbb
jo
jmp
mov
mov
cmp
mov
lcall
pusha
mov
or
inc
ret
adc
sbb
in
repnz
jg
push
out
je
pop
out
mov
lcall
dec
lahf
mov
in
push
mov
mov
mov
xchg
adc
fldt
mov
sbb
subb
jl
cmc
xchg
mov
daa
clc
insl
and
nop
sbb
icebp
add
pop
pop
mov
inc
movsl
and
rcrb
popa
js
dec
sti
pop
rcrb
inc
lcall
push
adc
dec
sbb
aad
fildll
jo
or
loopne
xorl
das
lcall
test
mov
jl
push
lcall
sub
or
pop
fs
xchg
stos
bound
lcall
push
xchg
lcall
pop
jns
rorl
ljmp
lcall
iret
or
arpl
daa
sbb
lahf
xor
call
add
mov
hlt
aas
push
mov
mov
and
mov
lcall
lcall
or
fsubl
xlat
repz
subl
movlps
cltd
adc
xor
out
daa
lea
loopne
lcall
add
scas
std
and
ret
lcall
cltd
adc
mov
mov
cli
dec
dec
loope
nop
cs
xchg
jg
sbb
and
jo
mov
push
lcall
xor
movsl
flds
fsubrs
inc
dec
jecxz
mov
push
jbe
xlat
dec
loope
adc
cmp
cmp
sbb
pop
fstps
lcall
adc
xor
and
pushf
xchg
xchg
jbe
pop
lcall
xchg
inc
pop
cld
jnp
cmp
lcall
cmp
nop
add
lcall
lcall
gs
lcall
jno
lcall
fisttpl
sbb
mov
ret
movsb
xchg
mov
xor
xabort
fldt
sbb
insb
xor
push
mov
jbe
xor
inc
or
push
xchg
xor
lcall
pop
popa
lcall
jl
lcall
xor
add
shrb
and
lcall
pop
dec
mov
movsl
mov
lods
pop
shrb
je
jle
pop
inc
loopne
sub
ficompl
popf
pop
dec
lcall
decl
push
cmp
lcall
push
cmp
mov
mov
movsl
mov
lcall
sbb
lcall
pop
jo
cli
sarl
adc
rorl
pop
push
sub
lcall
push
pusha
decb
rcrb
push
call
mov
loop
fnstenv
xor
pop
mov
lcall
push
mov
sbb
mov
outsb
ss
adc
xchg
lcall
lds
lcall
std
mov
inc
xchg
inc
mov
push
out
arpl
pushf
outsl
mov
insb
adc
leave
std
adc
test
cmp
and
mov
testb
sbb
mov
lcall
pop
cmc
xchg
imul
es
jle
pop
cli
jecxz
outsb
and
sbb
test
pop
xor
addr16
mov
jae
fisubl
add
addr16
lahf
aam
cltd
xchg
jp
xchg
out
into
std
lcall
xor
xor
add
add
pusha
mov
lcall
ljmp
lcall
cmp
xlat
jae
notb
cltd
or
sbb
ds
push
mov
lcall
adc
out
in
fs
inc
rcrb
cmp
and
subl
and
insb
rolb
mov
std
test
ljmp
cmp
xchg
sti
mov
push
aaa
xor
outsl
mov
and
push
sbb
push
mov
dec
test
andb
std
xorl
lea
rcrb
insb
lcall
test
lcall
hlt
cmpsl
lcall
push
pop
sbb
push
ljmp
fidivl
ficomps
and
pusha
lcall
popf
mov
cmpsl
add
scas
push
push
sbb
pusha
pop
cwtl
mov
pop
loop
xor
cmp
iret
lcall
scas
lcall
push
bound
repz
movsl
lcall
sub
pop
fsubl
gs
in
pop
lahf
mov
jge
dec
fisubl
sub
rcl
shrl
mov
into
hlt
out
test
cmp
nop
orb
frstor
push
mov
bound
push
push
fildll
adc
sbb
fisubs
imul
rcrl
add
xorb
pop
lcall
xchg
movsl
in
loope
cmp
in
mov
iret
add
mov
data16
mov
jnp
pop
push
inc
pop
mov
lret
ljmp
pop
ret
inc
inc
inc
test
mov
fsubrl
push
popf
ljmp
lcall
jl
lcall
jg
lcall
lods
sbbl
lcall
mov
divb
mov
pop
psubw
rcrb
popa
dec
mov
test
cld
test
lcall
jns
xor
cmp
enter
pop
daa
cld
jmp
sub
fadd
fbstp
mov
out
rorl
stos
pop
pop
fimuls
xchg
jmp
mov
test
fsts
imul
add
and
into
loope
fwait
leave
push
dec
inc
ljmp
xchg
enterw
loop
sbb
out
aam
dec
imul
stos
jmp
mov
dec
pop
lcall
sbb
xor
fwait
adc
sub
cmp
xchg
dec
dec
aad
inc
jo
lcall
and
lcall
cltd
pusha
lcall
stos
xor
or
jmp
xchg
pop
jp
mov
cmp
mov
mov
dec
xor
clc
sbb
push
inc
fsubl
and
cmpsl
mov
sbb
mov
ja
aas
adc
aam
xor
or
sarb
fists
hlt
dec
lret
lret
cmpl
lcall
xor
enter
sti
lcall
inc
jecxz
mov
scas
mov
test
fimull
add
loop
lcall
ljmp
jo
sar
cmp
dec
test
push
lcall
int3
daa
lcall
sahf
rolb
mov
ret
mov
lcall
push
mov
ret
rcrl
les
cmp
test
jbe
imul
add
nop
imul
popa
push
mov
inc
and
arpl
lcall
in
sbb
nop
dec
jle
lds
jp
mov
mov
dec
xor
out
inc
out
mov
add
aas
lcall
lcall
adc
jb
insl
cmp
and
lret
jns
scas
and
or
xor
lock
fidivrs
mov
mov
sub
sbb
pop
cmp
xorb
pop
nop
mov
lcall
adc
lcall
enter
pop
sub
rol
inc
adc
dec
push
mov
mov
sub
int3
lcall
add
mov
scas
xor
ljmp
mov
lret
fdivrs
ret
jb
loop
lcall
ret
mov
test
loopne
adc
iret
lcall
push
std
lcall
cmp
testb
lcall
mov
out
mov
xchg
imul
stc
lds
sub
lea
or
lcall
pop
bound
lcall
jbe
inc
popa
and
je
in
inc
fwait
mov
repz
addr16
lcall
int
lcall
in
aad
or
cmc
or
test
pop
scas
nop
loop
sbb
mov
lcall
lcall
jb
xchg
xchg
add
out
fs
ret
jl
lcall
daa
loop
ret
lcall
xchg
or
cwtl
ficoml
lcall
and
loop
lcall
ret
aaa
lcall
mov
lcall
sub
or
sbb
imul
lcall
out
jb
fsubr
negl
dec
mov
lods
inc
jecxz
lcall
push
pop
fdivl
mov
ss
mov
and
gs
jae,pn
rcrb
repnz
lcallw
pop
insl
sbb
lcall
add
lcall
imul
hlt
std
mov
jb
aaa
movsb
mov
inc
nop
repz
sbb
jae
adc
or
xor
inc
sbb
lcall
xor
das
mov
ret
pop
lret
test
xchg
dec
adc
pop
add
fdivs
out
pop
pop
and
jle
mov
push
sti
and
xor
dec
outsl
ss
and
stos
lcall
and
popa
pop
xchg
push
incb
nop
sub
and
pop
pushf
testl
into
sbb
push
lret
dec
jnp
inc
pop
mov
aad
lcall
lcall
lret
repz
cld
shrl
or
jno
lcall
lcall
rorl
adc
data16
call
cmp
stos
nop
out
or
xchg
xchg
iret
or
and
sbb
lds
rcr
mov
cmpsl
cmc
lcall
testb
cwtl
xchg
push
mov
push
lcall
fwait
add
fiadds
sub
gs
cltd
ja
add
sbb
cmp
sbb
lds
mov
pop
sub
sbb
sbb
lcall
lods
in
std
mov
xchg
push
insl
mov
lcall
in
xchg
and
push
testb
test
out
jge
negb
cs
icebp
xchg
je
push
lcall
cmp
pop
jmp
add
pushf
ljmp
pop
mov
arpl
push
jns
rclb
lcall
out
sbb
inc
mov
int3
pop
mov
push
ret
aaa
mov
sbb
add
cmc
out
mov
cmp
iret
push
fildl
nop
pop
add
ljmp
rclb
pop
xor
and
stos
ja
stc
jl
ret
iret
cmpsb
loop
lcall
jbe
jl
arpl
mov
xor
into
aam
pop
jns
jp
mov
lcall
cmpsl
lret
fdivrl
lcall
pop
push
lcall
adc
loop
lcall
push
add
jnp
and
es
ret
or
cmpsb
mov
mov
aad
mov
pop
loop
lcall
cmc
or
mov
sbb
xchg
add
lcall
push
cmc
adc
sbb
sub
or
int3
movsb
loopne
lods
adc
and
pop
sbb
mov
ljmp
pop
pop
orb
test
sti
jp
loope
movsb
subb
loop
lods
inc
ficoms
loop
lcall
icebp
fistps
or
arpl
xchg
test
pop
jg
mov
jno
mov
xchg
sbb
lret
xchg
add
cmp
test
mov
ss
inc
sahf
imul
jo
push
inc
fwait
mov
addb
movsl
in
mov
cs
lcall
adc
mov
jp
jno
lcall
loope
lcall
push
ret
sbb
adcb
mov
test
loop
cltd
decb
ljmp
pop
pop
inc
mov
outsl
test
pop
pop
cltd
xchg
adc
stos
xchg
sar
int3
nop
mov
div
and
sbb
inc
push
shll
sahf
test
rorl
jbe
inc
xor
arpl
flds
mov
frstor
popa
add
lock
filds
jg
stos
xchg
leave
push
xor
ret
loope
mov
pop
rcll
adc
inc
sub
lods
rcr
sbb
and
mov
popf
push
push
push
or
sub
pop
into
pop
cmp
or
dec
lcall
mov
lcall
mov
xchg
dec
cmpsl
mov
call
push
test
cwtl
fimull
daa
nop
adc
push
setp
stc
pop
sbb
xor
imul
pop
mov
xor
insl
loope
fiaddl
adc
or
mov
das
aaa
lret
js
lcall
test
lcall
les
dec
mov
mov
hlt
sbb
lcall
shrb
xchg
pop
aad
nop
and
mov
ljmp
scas
add
lcall
adcl
mov
cmp
outsl
and
mov
repnz
push
jl
in
pop
push
pushf
xor
xor
and
mov
sub
lcall
popf
dec
pop
push
fldl
jecxz
rcr
jp
xor
leave
lds
or
mov
sbb
aam
stos
cmpsb
sub
dec
cmpsl
out
and
mov
or
dec
stos
jl
loop
push
lea
inc
or
call
xchg
setp
aas
out
mov
popa
lcall
sbb
das
ret
loope
dec
dec
ljmp
mov
dec
daa
xchg
insl
lcall
lods
ficomps
add
adc
push
lcall
lock
adc
sub
sub
and
js
lret
mov
jnp
arpl
shrl
pop
push
sahf
sbb
mov
pushf
lcall
adc
pop
les
and
xor
ljmp
pop
add
mov
test
lcall
mov
jmp
rolb
fmuls
stos
in
lcall
lcall
inc
dec
cld
mov
mov
sbb
sub
mov
pop
or
cmpsl
jl
in
pop
lcall
imul
mov
bound
xchg
lock
sarb
ljmp
adc
cs
xchg
and
mov
rcrl
mov
inc
jb
mov
sti
jae
sbb
lcall
and
push
lcall
pop
mov
sahf
les
mov
imul
xchg
lcall
xorl
mov
sub
std
cmp
xor
sub
pushf
in
neg
mov
inc
pop
lret
mov
fsts
icebp
mov
jge
rclb
pop
or
dec
iret
lcall
mov
mov
fs
orb
fildll
mov
nop
mov
dec
pop
dec
lcall
loop
lcall
out
xchg
idivl
negb
out
sbb
imul
cmp
leave
xor
out
testb
sbb
push
mov
popa
loopne
cmc
leave
mov
pushf
cltd
sub
jl
sub
dec
sbb
add
xchg
mov
lcall
in
xchg
mov
test
std
jbe
jmp
and
adc
dec
pop
pop
dec
sbb
scas
mov
sbb
test
lcall
scas
jno
and
xchg
adc
push
mov
pop
negl
cmp
mov
jb
sub
lcall
xchg
adc
out
lcall
popa
and
sbb
out
mov
push
into
cmp
mov
cli
loop,pt
test
jl
leave
sbb
hlt
lcall
rcr
lcall
iret
mov
popf
pop
outsl
stc
hlt
or
loop
lcall
shlb
out
lcall
lcall
mov
mov
mov
out
lcall
stos
push
loop
lcall
pushf
aas
lcall
enter
mov
mov
cmp
dec
jae
lcall
imulb
repz
pop
add
cmp
push
mov
jns
mov
and
loop
sbb
rolb
repnz
loopne
lea
mov
pop
lcall
sbb
dec
cmpsb
js
mov
movsb
fcomps
cmp
mov
outsl
inc
sbb
inc
xchg
in
lcall
add
pop
jecxz
push
mov
frstor
jp
ret
add
mov
mov
test
ljmp
dec
sbb
popf
cmp
xor
mov
mov
cmpsl
ljmp
es
ret
hlt
mov
jge
lods
pmaxub
mov
rcrl
mov
cwtl
ret
adc
lcall
mov
xchg
mov
mov
mov
mov
mov
and
xor
mov
lcall
dec
cltd
lcall
pop
pusha
mov
popa
dec
ret
decb
das
and
out
loop
in
mov
jnp
test
jbe
orl
push
mov
xchg
dec
dec
std
push
adc
push
jno
pop
mov
lcall
inc
fimull
sub
divl
lcall
mov
mov
inc
mov
andb
ffreep
lcall
sbb
lret
popa
lcall
xchg
push
pop
sbb
jne
les
pop
loope
cmp
lcall
xchg
frstpm(287
or
hlt
mov
pop
push
mov
cmp
jg
rcr
aaa
xchg
lea
cmpsb
xchg
pop
push
or
adc
adc
adc
cmp
xlat
push
mov
mov
jns
inc
mov
and
or
out
imul
dec
xor
jbe
jp
sbb
cmpsb
pop
aaa
cld
xchg
sbb
adc
mov
dec
xor
lock
lret
sbb
insl
movsl
mov
and
lcall
add
test
lret
dec
push
lcall
or
sbb
mov
cmp
movb
lcall
pop
je
add
and
mov
popa
cld
jmp
sti
add
push
lds
rcrl
fimuls
enter
adc
adc
lea
daa
aas
pop
mov
test
cmpsb
xor
stos
sbb
lock
loop
cmpsb
in
lds
push
add
dec
ljmp
cmovbe
ja
xchg
sar
pop
in
jecxz
sbb
gs
jl
sarl
fdivl
mov
out
sbb
mov
aas
fcoms
cli
shlb
int
lret
pop
in
add
ja
adc
mov
pop
sbb
mov
inc
orb
xorb
gs
sub
sbb
dec
rcr
cltd
int
fs
mov
mov
pop
cld
sbb
lcall
sub
sbb
insl
pushf
adc
fsubrs
out
fisubrl
adc
dec
fmull
movsb
xchg
cwtl
sbb
add
or
inc
scas
and
faddl
cmp
out
adc
pop
stos
xchg
lcall
ljmp
mov
clc
rcrb
add
cltd
mov
shrl
xor
jp
or
lcall
mov
cmp
and
lcall
sbbl
and
adc
lcall
lods
mov
inc
push
nop
lret
int
inc
popl
scas
add
or
gs
xor
xchg
mov
cmpsb
fcoml
xchg
xlat
or
subb
stos
jo
out
scas
lahf
inc
or
shll
pop
pushf
cmp
xchg
lea
fwait
rcrb
into
enter
stos
mov
xor
stos
xchg
xchg
jnp
leave
lcall
dec
or
xchg
push
mov
insb
pop
insl
xor
mov
lods
inc
push
cmpsb
cmpb
fdivl
decl
dec
pusha
jno
jae
mov
mov
outsl
stos
xchg
test
xchg
andl
iret
xchg
sbb
sbb
inc
popf
jecxz
aam
ficomps
pop
jb
mov
xchg
scas
mov
xor
pop
loop
shlb
jnp
jp
add
fs
fcoms
xchg
das
jb
in
maskmovq
mov
fwait
mov
cltd
call
call
pop
fsubs
push
jmp
es
mov
ljmp
sbb
fxch
jns
fisubl
scas
shll
lcall
sub
mov
mov
mov
jne
xchg
loop
inc
movsb
lcall
mov
mov
dec
popf
stos
call
inc
dec
add
and
loopne
xor
hlt
jnp
xchg
jbe
inc
lcall
and
cwtl
repnz
lcall
fstl
fcompl
scas
sub
mov
insl
orb
dec
lcall
cs
mov
push
cmp
mov
imul
fimull
cld
push
std
adcl
dec
mov
dec
hlt
pop
cltd
rorl
lock
jmp
popf
movsb
xchg
mov
mov
test
mov
fcomi
mov
cmp
int3
out
mov
mov
addr16
cmp
dec
lcall
push
lcall
loope
out
mov
pop
insb
mov
in
icebp
mov
je
stos
std
jg
pop
lds
loopne
pop
sahf
sbb
imul
ja
ret
mov
jbe
outsl
cmc
es
jmp
add
jl
sbb
cwtl
lcall
popa
cmp
daa
add
ds
mov
cmp
pop
xchg
pop
inc
shlb
lcall
and
mov
cwtl
ja
xchg
fimull
roll
jb
mov
out
lcall
lcall
dec
sbb
scas
sub
ljmp
pop
xchg
xor
sbb
pop
jmp
push
pop
shlb
sbb
xor
mov
in
ret
cld
inc
das
mov
sbb
shll
cmpsb
jo
and
rcrb
pop
pop
inc
stos
arpl
and
nop
loopne
lods
scas
cmc
or
dec
dec
repnz
lret
fsubrl
sbb
fcmovne
jo
out
mov
xor
cmp
sarb
paddsw
lcall
scas
xchg
cltd
dec
xor
bound
ficomps
lcall
test
lcall
and
loop
lcall
inc
jae
sbb
mov
pushf
or
adc
enter
aas
out
js
xlat
cli
sbb
lcall
lcall
outsb
dec
xchg
pop
js
add
add
lcall
aad
mov
sbb
in
call
ret
loopne
jo
movsl
aas
sahf
in
dec
lcall
add
jae
in
sbb
lcall
test
clc
or
popf
sub
mov
out
nop
lcall
dec
inc
lcall
shrb
sbb
cmpsl
cmp
add
lcall
cmp
mov
bound
sbb
xchg
out
sti
xor
pop
sbb
subl
out
and
scas
dec
or
cltd
and
push
adc
fidivl
dec
adc
addr16
jbe
repnz
cmc
sbb
pop
repnz
insl
fidivrl
loop
sbb
imul
pushf
int
sbb
outsb
mov
cs
cmpsb
push
loop
lcall
xor
das
jbe
pop
or
popf
mov
lcall
xor
lcall
test
sbb
sbb
pop
mov
add
repnz
sub
cltd
add
push
in
fidivl
inc
pop
lret
lcall
and
inc
in
mov
lcall
mov
lcall
fs
jae
out
jle
lods
lcall
mov
sbb
rol
mov
outsb
jo
or
clc
imul
lcall
fistpll
xor
into
jb
sbbl
pop
pop
add
mov
xor
notb
or
sub
sbb
mov
lahf
push
sahf
and
mov
pop
setp
clc
fldcw
test
test
lcall
scas
aaa
pop
jle
jmp
add
pop
stos
out
leave
xor
mov
lcall
mov
movsl
mov
push
jmp
xor
lret
sti
repz
xchg
fbld
xor
cld
xchg
inc
mov
lcall
outsl
mov
inc
inc
xchg
sbb
and
inc
lcall
jb
inc
cmp
or
prefetch
or
cltd
popa
fdivrp
pop
shlb
jp
fstl
adc
adc
lcall
cltd
cltd
mov
lds
mov
mov
mov
lahf
push
lcall
push
xchg
lret
lret
les
addb
lcall
mov
outsl
testl
and
ss
iret
lcall
mull
pusha
adc
jg
push
repz
sbb
inc
test
sbb
lcall
mov
loop
lcall
fcmovnb
mov
dec
imul
ficoml
mov
fldenv
fnstsw
mov
fxch
outsb
mov
mov
push
sahf
cli
mov
mov
mov
aaa
lcall
lds
jbe
leave
mov
lcall
enter
push
mov
les
add
lcall
mov
pop
mov
mov
sbb
mov
mov
xchg
sbb
add
dec
mov
std
inc
xor
pop
cli
adc
inc
loop
mov
imul
mov
dec
lret
fcmovne
ja
pop
lcall
mov
mov
inc
fldt
mov
xchg
jo
cmp
sbb
sbb
or
push
push
testb
movd
lcall
movsl
cltd
lretw
scas
inc
mov
dec
jp
jl
call
mov
xchg
or
adc
dec
fwait
mov
xchg
cs
loope
pop
popa
lcall
in
push
sbb
sub
mov
inc
adc
add
cli
aas
add
js
or
push
sbb
jp
sahf
xchg
pop
dec
push
add
pop
lcall
lahf
loop
sbb
or
ds
pop
into
fstps
xchg
mov
ret
addb
pop
fstpt
xchg
jg
stos
ljmp
dec
sbb
pop
ds
xchg
sub
sbb
int3
mov
arpl
dec
pop
push
shlb
lods
mov
adc
push
lcall
daa
in
imul
fdivrl
mov
sbb
mov
sbb
push
add
pop
jbe
push
lcall
popl
and
ret
mov
lahf
pushf
lcall
add
lret
dec
in
lcall
outsb
lahf
loop
lcall
fwait
push
pop
sub
mov
arpl
ds
inc
fimull
push
pop
lcall
into
pop
pop
push
pop
lods
mov
adc
inc
test
or
imul
fistpl
fstp
mov
ljmp
shrl
lcall
dec
xchg
nop
clc
push
outsl
cmpsb
lcall
ljmp
xor
sbb
add
ljmp
mov
ss
add
int
sub
test
rcrb
mov
or
call
sbb
push
lods
xchg
icebp
ljmp
fidivrl
ret
cmp
sbb
ficoml
mov
lcall
test
fwait
outsl
lcall
stos
fsubp
jge
aas
sbb
je
adc
mov
dec
clc
filds
mov
push
rcll
lods
add
cltd
mov
mov
cmp
xchg
out
xchg
sahf
xor
lcall
lret
notl
mov
push
or
jb
xchg
jae
inc
test
div
out
lcall
cmp
dec
jp
fldcw
scas
sbb
lret
lcall
pop
sub
add
lcall
lcall
out
lcall
add
call
popa
or
push
jg
fadds
lods
jnp
adc
aas
sub
jecxz
scas
mov
adc
mov
fstps
ret
add
jg
out
cmp
inc
add
fstps
mov
movsb
and
pop
lcall
jp
adc
push
stos
mov
fs
scas
jnp
ljmp
mov
imul
lcall
xor
pop
stos
cmp
jp
sub
dec
lcall
mov
pop
cmp
sahf
cltd
popa
sub
sti
inc
sbb
lcall
pop
jl
mov
fiaddl
xchg
inc
flds
lahf
in
shll
enter
inc
pop
xchg
in
mov
lcall
sub
mov
sbb
inc
ret
mov
mov
and
fwait
pop
mov
xchg
jae
add
and
cmpsl
loopne
and
cmp
xor
rolb
xchg
pusha
fistl
clc
ljmp
jge
mov
sub
jne
push
incb
jl
out
popaw
out
inc
cmpl
xchg
sbb
jns
and
es
mov
mov
add
ret
ret
and
jl
fs
sbbl
xchg
jle
enter
push
inc
pop
jb
adc
sbb
push
mov
push
jo
inc
mov
push
xchg
and
cmp
inc
loop
pop
xorl
icebp
xchg
add
jne
pop
loop
mov
mov
pop
int3
decl
clc
mov
stos
fwait
add
inc
pusha
cmp
mov
push
cmp
sti
jbe
fisttpll
pop
adc
sub
movsl
mov
add
xor
pop
or
dec
out
test
pushf
push
xchg
fdivrs
in
clc
call
xchg
mov
dec
pop
mov
inc
push
out
ror
mov
pop
xor
cmp
mov
ret
adc
icebp
das
adc
dec
xchg
imul
inc
fwait
lret
dec
pminsw
fdivl
xlat
loopne
pop
gs
cmc
inc
mov
repz
sbb
aaa
sub
ret
inc
shlb
int
dec
dec
mov
lds
mov
sti
add
xor
jmp
or
call
cltd
stc
mov
pop
sub
mov
inc
jne
push
push
mov
xlat
gs
and
test
or
add
scas
leave
mov
in
fcoml
jbe
movsb
pop
or
xchg
inc
fsubp
pushf
fisubl
cmc
rorb
xor
mov
bound
jno
insl
arpl
sbb
shll
insb
cmp
pop
test
add
in
xor
repz
mov
sub
int
push
mov
out
int3
xchg
xchg
int
cmpsb
cmp
inc
mov
mov
mov
adc
les
int3
loope
add
lea
ja
adc
rol
adc
or
add
shr
mov
cmp
cmp
jmp
xchg
imul
jno
adc
popa
adc
adc
mov
mov
ror
pop
mov
js
sbb
cs
sub
ljmp
and
or
dec
addb
xchg
xchg
add
pushf
cmc
cmc
sub
call
movl
call
sbb
mov
pop
sub
cmp
andb
je
cmp
sub
jns
inc
mov
scas
outsl
mov
mov
cld
cli
lea
fildll
xchg
aad
push
xor
pop
sub
sbb
jmp
sub
orl
cld
js
pushf
sbb
dec
iret
ficomps
movsb
inc
xchg
ja
jecxz
aam
mov
fildll
test
fildll
xchg
js
inc
and
pusha
andb
enter
mov
lret
int
or
bound
fimull
jns
andl
push
fwait
sahf
jge
and
sub
mov
xor
and
sti
outsb
int3
xor
mov
xchg
jnp
test
or
adc
mov
sub
mov
jle
imul
adc
push
js
lods
push
fistps
call
adc
bnd
xchg
jne
call
lods
stos
shrb
cld
repz
lret
push
lret
idivl
rcrb
flds
xchg
inc
push
scas
jl
call
movsb
xchg
inc
imul
dec
pushf
test
jp
inc
loope
mov
shrb
sbb
sub
dec
xor
mov
scas
sbb
sub
mov
inc
cmp
shll
and
and
xchg
jns
jg
iret
adc
daa
insl
test
and
ret
mov
sbb
mov
mov
cmc
lahf
daa
push
inc
mov
mov
pop
pop
leave
xchg
stos
scas
cmpsl
cmp
test
jns
pop
sub
mov
xchg
loope
and
int
cli
rclb
cmp
inc
lahf
cltd
aad
aaa
fldenv
pushf
xchg
jb
lret
pop
and
cli
stos
cmpsb
test
stos
dec
nop
xchg
or
mov
imul
aaa
mov
jle
scas
sahf
sbb
jl
stos
mov
rcl
jmp
shll
and
xchg
or
out
xchg
mov
scas
aam
fnstsw
inc
or
loope
clc
mov
pop
cmp
and
adc
xchg
cli
andl
mov
loope
push
addl
leave
adc
fcomps
xchg
adc
pusha
call
setno
sbb
push
pop
pushf
mov
cmp
pushf
notl
into
lea
daa
inc
mov
jle
xor
rcrb
call
pop
mov
lods
jne
pop
rclb
dec
sub
rorl
fbld
outsl
dec
jbe
cmp
and
or
mov
sub
jle
cmpsl
mov
pop
sub
and
mov
mov
fs
xlat
pop
lods
outsb
fs
cltd
add
fmulp
out
lods
inc
cmp
push
dec
enter
adc
leave
xlat
mov
add
dec
int3
sarb
adc
test
fsubl
jb
scas
xchg
xchg
push
push
push
mov
imul
jge
insl
inc
shr
adc
add
jbe
btc
and
mov
rcl
add
sbb
add
add
cmp
mov
clc
shr
jmp
pusha
jmp
call
mov
movsbl
setg
cwtl
jg
lea
pusha
pushf
mov
movl
call
test
sub
clc
stc
bt
cmp
cmp
call
lea
je
cmp
bt
cmp
add
pushf
pushf
movl
lea
jmp
xchg
dec
mov
test
dec
mov
push
and
adcl
jno
rclb
stos
xchg
popf
dec
adc
push
outsl
bound
push
aad
cmpps
insb
inc
movsl
cld
in
xchg
in
frstor
sub
mov
fbstp
aad
shll
pop
lret
dec
mov
xchg
sahf
mov
cmpsl
mov
or
outsl
cltd
jmp
jle
jbe
pop
sub
cs
nop
mov
iret
lret
in
mov
mov
pop
fildl
push
push
mov
mov
jb
nop
sbb
sbb
jb
inc
in
imul
add
bound
mov
test
in
out
lds
sub
outsb
pop
cmp
xor
push
add
mov
inc
dec
fistps
loop
into
test
mov
mov
gs
jmp
cmpsb
push
jmp
and
mov
lcall
mov
sub
xor
jge
xchg
xchg
add
cmp
shr
push
or
lods
push
and
aam
cli
enter
mull
mov
roll
int
or
push
test
sbb
gs
stos
jle
sbb
loopne
insl
insl
push
push
add
loop
mov
in
mov
mov
fdivp
rol
jmp
mov
push
adc
int3
xor
jae
pop
sub
out
lods
fnstsw
jb
add
or
mov
jl
push
sbb
ss
les
adcl
es
sub
mov
gs
fs
out
push
ret
push
out
sub
and
adc
push
imul
jns
sbb
inc
inc
jbe
xor
and
notl
shl
outsb
pop
les
bound
xor
mov
orl
stos
adc
call
jmp
mov
pop
add
dec
lock
sti
inc
mov
fwait
inc
inc
mov
repz
mov
sbb
std
sub
cmp
into
lcall
add
cmp
jmp
mov
clc
mov
int
pop
mov
or
inc
rcrl
into
in
add
daa
jmp
jp
lock
movb
loop
or
and
out
loope
in
xchg
pop
popf
lahf
dec
int
daa
jecxz
sarb
outsl
sub
add
mov
pusha
jmp
dec
and
xor
pop
mov
mov
lahf
or
inc
ret
mov
xor
aaa
loope
lea
or
sbb
xlat
jmp
mov
cltd
pop
mov
shld
push
loop
popf
fnsave
rcrb
insl
mov
ljmp
or
out
je
inc
fnstcw
repnz
pusha
lea
jne
setb
sub
pusha
test
mov
test
or
pushl
call
rcll
adc
shl
jl
inc
sbb
mov
xchg
outsb
cmp
rcr
mov
and
inc
fadds
insb
xor
pop
push
stos
pop
dec
inc
ds
rol
loope
push
pusha
inc
cmp
and
and
inc
jmp
in
imul
inc
and
lds
loopne
or
pusha
int3
lahf
add
xchg
hlt
ret
jle
jbe
cwtl
rcll
pop
mov
pop
lock
in
scas
pop
aam
inc
mov
fldcw
lods
fisttps
sbb
inc
jecxz
xchg
add
lods
arpl
je
sbb
lahf
sub
or
pushl
mov
dec
sub
imul
sbb
add
jo
scas
cld
and
sarl
fs
pop
enter
jne
lods
int
inc
ffreep
jns
dec
mov
jnp
popa
data16
ja
cmpsl
leave
lea
add
xchg
fucom
dec
ret
xchg
test
insl
movsb
js
mov
jp
popf
je
mov
fs
add
ds
xchg
sahf
orl
fidivrs
cmp
mov
sahf
repnz
scas
sbb
fldenv
insl
leave
jp
cmp
sahf
ss
and
addb
or
adc
jmp
loopne
mov
adc
outsl
popa
inc
fisubrs
dec
dec
inc
out
outsb
jbe
enter
push
pop
inc
xor
add
mov
loope
fs
call
call
push
pushl
jmp
mov
sub
pop
mov
lds
loop
setge
int3
out
push
adc
in
fcmovnbe
jo
movsl
sbb
jne
mov
add
iret
shr
mov
jle
inc
push
lcall
das
sbb
roll
rol
mov
ja
imull
push
dec
insb
mov
push
or
pusha
fwait
imul
lea
adc
inc
aaa
dec
imul
ljmp
jmp
outsb
es
pushf
enter
fs
ss
sub
mov
sub
inc
stc
bt
pushf
imul
pushf
mov
cmp
cmp
add
push
lea
jmp
mov
pushl
popl
pushf
lahf
movzbl
mov
pushl
mov
movl
lahf
pusha
mov
movsbw
lea
jmp
jmp
movb
movw
pushf
movl
movb
mov
lea
jmp
pop
push
in
or
cwtl
cmp
sbbb
jns
pop
negb
xchg
xor
das
dec
jge
push
jb
pop
xchg
leave
nop
bndstx
jb
jl
jno
popa
loopne
xor
jbe
fwait
popa
jo
jb
and
xor
push
js
nop
push
mov
pop
sub
cmp
push
sbb
add
cmp
sub
inc
lret
movl
push
ret
jnp
and
cmp
in
je
stos
pop
mov
pop
push
shr
jmp
lea
ja
push
pushl
popl
push
pusha
pushf
pushl
ret
arpl
arpl
xor
fs
insb
add
cmp
push
pushf
call
mov
mov
sbb
pop
inc
mov
scas
mov
ja
pop
push
adc
ficoml
nop
test
out
or
mov
mov
pusha
inc
cmp
mov
jne
sbb
mov
sbb
sbb
or
inc
aas
pop
ret
lds
mov
sbb
in
or
lods
aam
fadd
dec
sbb
sub
jnp
notl
or
mov
lret
test
cmp
xor
je
or
lcall
fs
jmp
ret
xchg
pop
sub
enter
int
xor
ds
test
lret
dec
mov
adc
incl
inc
add
int
icebp
shlb
aas
addb
das
push
repz
mov
jne
xor
std
mov
idivl
inc
and
rorl
es
mov
lahf
fsubs
cltd
pushf
sub
pushl
pop
xchg
movsb
out
rcrl
icebp
mov
dec
mov
clc
dec
fmuls
mov
roll
addr16
xchg
sahf
xor
sub
xchg
jo
lahf
call
sub
aam
mov
into
mov
sarl
push
mov
push
lret
daa
push
and
sbb
cmpsl
enter
shll
hlt
fidivl
push
xchg
push
cmp
ret
js
sub
adc
add
cmp
sti
rol
mov
inc
pop
and
imul
pop
sahf
xor
ds
sbb
push
mov
std
cmp
xor
mov
stos
mov
iret
or
fldcw
sarl
xor
les
subl
aaa
xor
mov
insb
out
xor
jae
jmp
mov
or
mov
cwtl
cmpsb
int3
push
mov
clc
pushf
stc
cmpb
pushl
pusha
lea
jne
aas
rcl
movsbw
xor
rol
mov
sar
add
xor
pushf
shr
shl
mov
cmc
stc
pusha
cmp
test
jmp
mov
not
pushf
sete
pop
mov
pushf
bswap
movzbw
movsbw
mov
pushf
jmp
repz
nop
pop
sub
inc
cli
ret
sub
mov
and
repnz
mov
cmp
add
inc
jo
ds
adc
xor
pushf
cli
ret
out
pop
add
stos
and
pop
addr16
mov
add
fcom
mov
add
cmc
bt
call
call
clc
mov
push
gs
sti
in
or
pop
stos
test
and
daa
jb
push
out
sub
push
or
lods
cs
dec
movsb
movsb
jb
inc
arpl
das
pop
dec
test
int
push
fiadds
dec
mov
pop
sbb
xor
xchg
or
xor
add
cmpsb
xchg
js
out
inc
or
adc
cmc
test
sbb
push
gs
mov
cs
cld
insb
je
repz
sbb
inc
cmp
mov
pop
xchg
push
and
sub
xchg
negb
leave
or
dec
in
adc
repnz
sub
sbb
cmp
sub
outsl
xchg
aam
stos
loop
fadds
stos
xchg
mov
cltd
sub
ret
lods
xchg
cwtl
cli
repnz
lcall
aaa
lods
lock
sbb
lock
lds
lods
sti
subl
ja
xchg
subb
or
adc
cmc
jbe
lods
push
xchg
cld
pop
out
out
add
out
pop
sub
popf
bnd
notb
mov
dec
mov
scas
xor
negb
fwait
aad
or
imulb
lds
arpl
mov
dec
fcmovb
stos
clc
or
sbb
arpl
repz
and
lods
cmpl
mov
shll
add
pop
or
imul
lcall
pop
mov
sbb
cli
jne
fisttps
sbb
mov
jbe
mov
mov
pop
clc
inc
xchg
lds
imul
cmp
push
push
pushf
jmp
adc
sub
push
xchg
adc
jge
jb
call
sbb
dec
outsb
mov
cmpsl
inc
inc
pop
adc
push
jecxz
lods
mov
and
shlb
ret
lahf
imul
daa
outsl
testl
and
enter
sbb
push
lret
nop
ret
nop
adc
pop
sbb
rcrl
rorl
test
mov
ss
push
lsl
sub
pushf
jge
add
bound
cmp
pop
test
mov
icebp
bound
scas
dec
sub
pushf
call
pushf
pushf
lea
ja
bt
push
stc
pusha
add
call
lret
xchg
pop
sub
push
mov
movsb
lods
in
lods
movd
mov
push
xchg
push
fwait
mov
push
jbe
jne
xor
mov
and
adc
or
daa
pop
adc
jmp
jns
subl
out
ja
aaa
jmp
push
lahf
add
icebp
in
lds
cmp
sub
inc
jno
movb
push
xchg
mov
repz
fldenv
pop
andb
je
stos
fstl
rorl
xor
or
ret
cltd
loope
sub
into
xchg
mov
js
xchg
pop
sub
mov
scas
sbb
dec
push
mov
push
xchg
std
push
dec
mov
fisubrl
pop
flds
jo
pop
cmp
jge
inc
mov
xchg
shl
sbb
pop
movsl
movsl
into
adc
xchg
addr16
push
pop
adc
add
inc
fmull
sub
movb
call
xor
sbb
out
mov
pop
cld
or
mov
das
mov
in
push
fucompp
push
dec
add
fs
xchg
pop
sub
icebp
ja
xchg
sub
arpl
shl
or
nop
xchg
std
and
jmp
das
sbb
cmc
inc
idivl
cmp
lret
shrb
daa
mov
sbb
add
loop
cld
sbb
push
pop
inc
gs
sbb
ss
xor
cmp
cmp
jmp
sbb
add
aam
pop
and
not
lea
mov
call
jmp
sub
jnp
inc
jmp
gs
lds
in
add
ror
cmp
and
testb
jge
mov
add
icebp
iret
adc
dec
push
in
add
subl
mov
out
xor
adc
and
adc
pop
push
dec
mov
sub
and
push
mov
loopne
adc
xchg
pop
sub
ds
cmp
aad
data16
mov
adc
int3
movsb
cmc
rcll
stos
lea
inc
push
push
xor
add
pop
jnp
imul
and
xchg
js
pop
les
int3
sub
inc
clc
inc
in
push
xor
fs
push
mov
rol
filds
inc
xchg
call
movsl
push
iret
or
and
jnp
divl
mov
lea
mov
pop
mov
pusha
mov
call
push
movb
call
hlt
xchg
pop
sub
mov
mov
xchg
out
inc
mov
mov
dec
push
xor
cmpsb
adc
mov
test
or
jno
ss
lock
push
mov
shll
jmp
inc
push
cli
push
aam
sbb
les
aas
adc
or
icebp
push
fs
andb
jp
xor
repnz
mov
out
xor
sbb
xchg
mov
adc
cltd
pop
sub
pop
adc
movsl
pop
movsb
inc
jmp
sbb
mov
in
pop
ret
lcall
inc
jo
sbbb
pop
bound
adc
push
xor
fstpl
repz
fstpl
fldcw
xlat
into
leave
dec
xchg
fcmove
sbb
push
ja
jmp
mov
into
pop
inc
fwait
mov
gs
test
add
test
sbb
rcrb
and
test
mov
jg
mov
mov
dec
addb
and
ret
and
and
and
inc
add
mov
inc
add
loopne
loopne
and
add
popa
add
and
popa
loopne
add
add
inc
js
andl
mov
add
mov
mov
pusha
lea
je
pushf
jmp
or
dec
cwtl
pop
sub
shlb
fwait
pop
or
clc
negb
insb
aad
pop
int
loop
dec
cmp
movsl
icebp
int
int
fisttpll
stos
and
xchg
movsb
out
and
shrl
mov
push
cmpl
dec
cmp
loope
jl
rorb
inc
ret
mov
lods
mov
rcl
cmp
jp
jb
mov
add
mov
dec
iret
mov
and
pushf
or
push
pusha
lea
je
test
cmp
pushf
pushl
ret
imul
gs
xor
cs
insb
add
dec
hlt
decl
call
jmp
jmp
push
pop
jle
pop
sub
jmp
pop
stos
xchg
test
push
int3
lds
adc
fnstcw
xchg
mov
mov
push
cld
adc
xlat
repz
sti
and
fnsave
dec
lret
cs
jo
fbld
xchg
mov
shlb
outsb
imul
mov
and
shll
lcall
fistpll
jg
lods
in
add
mov
sbb
xchg
enter
dec
push
pusha
mov
mov
mov
movb
pushl
ret
fsts
fwait
pop
sub
mov
xchg
add
or
jnp
in
popa
outsl
leave
inc
mov
sub
xchg
frstor
jmp
push
rorb
dec
add
pop
or
movsl
mov
push
jbe
mov
stc
fnstcw
jb
iret
loope
loop
fidivrs
fcoms
movsb
fcomps
push
mov
aam
stos
pop
mov
mov
cmp
mov
jnp
test
enter
sarl
and
lcall
jae
shrl
sub
pop
pop
mov
mov
pop
dec
xor
adc
and
lret
sub
std
lods
int3
cmc
out
add
mov
sub
clts
bound
xor
jnp
cmp
or
mov
outsb
lds
arpl
sub
adc
inc
js
cmp
fucomip
push
mov
fs
clc
pop
scas
cmc
xlat
inc
inc
js
shl
lcall
push
scas
testb
stos
out
xchg
jecxz
out
cs
popf
cwtl
stc
aam
sahf
cmp
xchg
mov
dec
xor
jae
sbb
or
mov
pop
aaa
cmp
dec
mulb
and
inc
test
mov
push
pusha
push
inc
out
scas
popa
aad
cmp
add
adc
call
movsl
fstl
jle
loopne
movl
jp
test
jne
bswap
pusha
push
mov
pushf
pushf
push
pushf
lea
jmp
push
mov
ret
faddl
dec
inc
das
mov
test
sti
sbb
or
cmpsb
jnp
push
fisubs
fwait
jo
loopne
std
pop
sti
jns
push
sub
mov
mov
pop
pusha
pop
pop
test
test
xor
je
mov
incl
pop
scas
stc
xchg
xor
and
xchg
and
aad
cmp
ffree
addr16
not
cwtl
mov
pusha
pushf
lea
jmp
rcr
mov
stc
sar
bt
mov
bt
bt
repnz
pusha
pushf
push
lea
jne
pusha
bswap
setne
movb
movzbw
mov
bswap
mov
movsbl
lea
jmp
mov
mov
pusha
pushl
ret
fldenv
inc
pushf
pop
sub
adc
jp
dec
adcb
mov
xor
outsb
lds
pop
mov
inc
jp
std
fisubrs
js
out
and
xor
cld
int3
popa
xlat
push
hlt
push
mov
push
cmp
test
dec
mov
iret
test
dec
call
mov
xlat
fiadds
mov
roll
les
mov
push
mov
aad
mov
je
sub
stc
pushf
pushf
cmp
jmp
push
push
pushl
popl
push
pushf
pushf
pushf
pushl
ret
cmp
sub
jno
hlt
das
push
xchg
xchg
aad
push
out
fldl
mov
adc
std
mov
mov
dec
enter
mov
fstpl
std
outsl
and
test
lret
in
pusha
test
xchg
jbe
mov
es
cmc
dec
or
mov
lds
pop
jo
jno
shl
ret
ds
dec
push
mov
ret
mov
push
sbb
sub
pop
clc
addr16
shlb
lahf
pop
sub
mov
sbb
xchg
inc
xor
imul
subb
mov
pop
movsl
imul
jp
cmc
out
iret
pop
enter
test
clc
jae
mov
jg
jbe
and
idivb
loop
test
pop
icebp
jmp
add
adc
jno
in
call
iret
mov
add
pop
sti
inc
push
xlat
xchg
push
pop
push
in
movsb
popa
or
call
inc
arpl
int
fsubrs
inc
cmc
or
jno
jmp
outsl
cltd
mov
mov
iret
scas
popa
mov
fst
lret
call
mov
loop
roll
bound
lret
in
jne
xchg
pop
inc
call
jns
dec
pop
out
sub
mov
nop
loope
cmp
loop
rcrb
popf
push
dec
pusha
mov
jns
add
bnd
jno
jp
add
bts
icebp
jmp
or
call
push
jmp
and
pusha
pushl
ret
add
out
pop
sub
in
fists
out
or
lock
clc
mov
sbb
pop
call
subb
push
sub
leave
jge
mov
mov
int3
sub
inc
cmc
jb
inc
or
jns
in
loope
push
mov
gs
inc
add
mov
mov
enter
ljmp
pushf
movsl
inc
add
jmp
ss
inc
popa
ss
cmp
es
call
loopne
adc
lods
sub
xchg
fs
pop
sub
push
sbb
mov
sub
je
lahf
gs
call
sub
ja
jg
loope
dec
ljmp
sbb
ret
sbb
mov
das
and
add
sub
pop
pop
repz
in
pop
jle
sub
in
jbe
and
sbb
mov
or
loop
lcall
xchg
and
ss
out
pop
sub
adc
mov
andb
jae
aas
xchg
dec
loope
das
cwtl
jb
adcl
lret
movsl
or
cmpsb
jge
jmp
pop
xor
std
jmp
adc
imul
rcr
jne
add
sbb
xchg
loopne
xchg
aad
sbb
test
lods
mov
mov
mov
sub
out
cld
call
or
addr16
dec
out
mov
leave
dec
jb
fdivl
sub
inc
dec
xorb
jo
cmc
pop
jmp
xor
fsubrl
xor
push
in
mov
pushf
stos
jl
cmpsb
push
int3
out
pop
stos
add
cmp
fnstenv
mov
les
int
inc
mov
push
lods
inc
or
negl
inc
adc
inc
scas
fiaddl
sbbb
cld
stc
or
sub
scas
ljmp
out
add
xor
mov
pusha
adc
jp
or
xor
rcr
cmc
sbb
bound
scas
cltd
movsb
test
jno
or
adc
addr16
jp
insb
sub
test
pop
sub
cld
fiadds
fwait
lret
pop
mov
cmpsb
inc
loope
add
pusha
push
dec
or
add
mov
push
ljmp
lods
out
push
inc
mov
bound
cmp
cmpsl
lahf
enter
push
insl
mov
cmp
inc
test
shll
out
add
outsb
pusha
cmp
jge
pop
and
jle
fs
push
mov
jmp
cmp
movsl
pop
scas
sbb
arpl
inc
and
or
lcall
iret
test
test
daa
cmp
sub
adc
xchg
cld
pop
inc
push
push
and
mov
mov
sbb
ja
mov
cmpsb
xchg
repz
test
push
xor
sub
mov
xchg
jno
out
cmp
or
rcrl
jne
fsubrs
adcl
dec
push
nop
jecxz
xchg
push
inc
daa
popf
in
iret
jmp
sub
xchg
rorb
mov
add
pusha
mov
jmp
push
push
in
dec
adc
inc
push
fsts
test
pop
push
jno
mov
imul
jbe
fsubrs
ret
sub
sub
xorl
iret
mov
fcoms
aas
ljmp
cmp
pop
mov
repz
cmp
mov
and
jbe
mov
mov
mov
jg
lret
addr16
call
call
call
jmp
hlt
bound
notl
cs
testl
and
xor
pop
xlat
mov
push
push
mov
aaa
push
xor
loopne
xchg
mov
push
and
cmp
adc
inc
shll
sub
fwait
jmp
pop
insl
mov
fsubl
cltd
xchg
stos
sbb
xor
mov
inc
loop
popf
jmp
mov
sub
add
push
in
fstpl
and
je
scas
lock
and
mov
aaa
dec
call
sbb
dec
cmp
mov
lcall
dec
ja
pop
fldl
and
stc
movsl
out
popa
aaa
sbb
aad
out
sub
mov
fmuls
aaa
inc
in
jecxz
push
sub
in
out
mov
or
lea
jae
call
pushf
pushf
push
mov
pushf
lea
jmp
mov
jmp
pop
sub
les
test
or
adc
mov
andb
imul
ss
mov
movsb
out
mov
dec
dec
cmpb
mov
adc
xchg
jl
xchg
push
stc
inc
jl
xlat
in
pop
jnp
andb
and
or
ja
sbbl
xor
in
sbb
xor
loopne
outsb
jo
aad
jmp
sub
and
push
test
add
push
pop
xchg
shrl
js
xor
ja
inc
sbb
cwtl
pop
push
mov
mov
or
or
aad
and
ljmp
mov
jbe
rorb
push
mov
fwait
lcall
jp
mul
rcll
xchg
mov
add
cmp
add
imul
push
xchg
inc
pop
pop
popf
cmp
rolb
push
mov
repz
dec
xchg
fucomp
pop
pop
ljmp
dec
call
cmp
jae
pop
sub
and
dec
jp
orb
inc
cmc
and
rcl
sysexit
add
mov
fimull
ret
mov
fwait
outsb
sets
lret
lea
jmp
cld
int
pop
ja
inc
ret
in
mov
ficompl
lret
loopne
cmc
ds
pop
jecxz
adc
add
sbb
adc
fnsave
js
fbld
xchg
sbb
imul
cmpl
pop
xlat
aas
sbb
sub
pop
ja
addr16
loope
aaa
cltd
and
adc
adc
rorl
add
popf
test
jp
nop
inc
pop
test
cmpsl
sti
es
xor
fisttps
dec
add
sub
jg
dec
xlat
stc
in
movsb
loope
popf
insl
dec
xchg
popa
mov
std
cmpxchg
and
mov
and
cmp
out
inc
pop
test
mov
fisubrl
pushf
insl
mov
insl
and
sti
outsb
gs
scas
out
insl
sub
cmp
cmpsb
enter
ja
pop
sub
adc
aas
loope
dec
mov
cmp
sub
and
mov
sub
and
or
leave
cmp
into
ljmp
xchg
adc
mov
lahf
imul
jecxz
popa
addr16
mov
sahf
xchg
add
ret
push
sbb
jae
push
sub
or
dec
fs
je
cwtl
xchg
xchg
sbb
pop
jno
jl
pop
stos
loope
inc
pop
mov
enter
sub
add
mov
inc
in
jp
mov
mov
jp
ja
cmpsb
mov
sub
mov
imul
cmp
movsb
mov
jp
xchg
int
js
mov
mov
or
fbstp
movsb
ret
or
aaa
fs
leave
lock
mov
loop
push
mov
shlb
inc
cwtl
lea
sub
div
inc
enter
out
mov
cmp
mov
mov
sub
mov
push
lods
push
xchg
lock
jae
imul
mov
jne
push
stc
xor
jo
fs
push
sbb
or
jecxz,pn
out
and
inc
std
cmp
add
mov
xchg
scas
cltd
mov
addr16
sbb
push
mov
sbbl
ret
cmpb
mov
mov
dec
mov
or
bound
sbb
rorl
pusha
movsl
jp
dec
xchg
xor
imul
pop
mov
and
and
loopne
test
push
mov
mov
test
cwtl
fstpt
popf
out
sbb
cmp
cltd
in
mov
fnstsw
sub
sahf
in
sub
std
lret
mov
dec
mov
in
jmp
sub
xchg
outsl
ja
sub
pop
fcomps
mov
and
ficoms
inc
add
mov
mov
arpl
fnstcw
jecxz
inc
jmp
sub
xor
push
mov
aaa
lret
or
mov
data16
jmp
int3
pcmpgtb
sbb
mov
push
sub
mov
js
fucomip
mov
mov
cmp
mov
addr16
xchg
loopne
cmpsl
xchg
cmpsb
sbb
sbb
inc
sti
in
lret
push
daa
push
test
test
mov
call
std
or
xor
and
xchg
jb
pop
xchg
dec
fs
xchg
jo
int
jmp
shrb
sub
or
nop
enter
fsubrl
popf
mov
sub
lock
inc
inc
jp
xor
mov
cmp
pop
jl
imul
inc
xchg
cmp
sbbb
or
pop
clc
loope
pop
mov
adc
add
jmp
movsbl
gs
sbb
or
mov
xchg
jno
shlb
loopne
pushl
popl
pushf
movl
pushl
ret
call
xor
movsb
imul
stos
scas
mov
push
popf
and
cmc
aad
iret
cmp
jmp
xchg
cmp
lods
orb
gs
sbb
push
pop
scas
ja
mov
lcall
mov
iret
std
cmpb
adc
out
and
inc
mov
stos
push
fisubl
iret
popa
fs
mov
aas
adc
add
mov
adc
mov
cmp
loop
out
sahf
pop
mov
dec
pop
rcrb
mov
loope
out
mov
xor
lods
adc
mov
xor
nop
insl
mov
pop
mov
and
mov
cmp
mov
aas
shr
inc
mov
out
cmc
sbb
pusha
add
int3
xchg
mov
mov
sub
nop
sbb
push
int3
mov
sbb
mov
mov
cmp
dec
push
std
or
mov
mov
add
jnp
nop
add
cwtl
mov
repnz
in
and
test
imul
fidivrs
addr16
rorl
sarb
es
rorb
adc
add
sbb
or
lods
pop
inc
es
jns
hlt
cli
jne
stos
pop
arpl
outsl
push
sub
inc
ret
fisttpl
pusha
push
imul
cld
scas
les
sub
fwait
sar
notb
out
sub
add
popf
je
inc
sbb
inc
mov
fs
je
pusha
bswap
lea
lea
movzwl
movzbl
pushf
pushf
lea
call
lock
test
mov
sub
cmp
insl
pop
adc
movsb
popf
pop
orl
mov
push
mov
mov
or
rclb
ds
shl
lea
jl
push
push
lea
je
jae
mov
pushf
xchg
push
pushf
lea
lea
movl
call
bt
pushf
mov
pushf
or
jmp
call
adc
movw
movb
jmp
fists
mov
test
push
xor
cmc
cltd
ret
push
mov
aaa
sub
cmp
fsts
add
aas
dec
adc
cmp
out
jne
xor
inc
mov
adc
or
mov
jae
insb
daa
fldt
mov
xchg
stos
pop
gs
les
jg
shr
hlt
cli
flds
stc
mov
pop
das
add
jns
xlat
xchg
mov
mov
fsub
xor
sahf
insl
sbb
xchg
push
push
aas
sbb
clc
gs
pop
adc
xchg
jle
jns
das
or
xchg
nop
fxtract
inc
pushf
lea
jne
rol
das
movsbl
push
xor
pop
not
cwtl
not
mov
pushf
xor
inc
add
push
inc
call
inc
pop
sub
mov
sub
gs
sti
adc
into
adc
jmp
shrb
mov
dec
and
out
in
pushf
sbbb
call
inc
inc
dec
sub
jnp
cmpsl
cld
fnstcw
pop
stos
test
fisubrl
xchg
dec
adc
cmpsb
lods
xchg
dec
sbb
jno
ss
xorl
xor
mov
mov
adc
mulb
fcmove
mov
lret
lea
cmpsl
push
outsl
pop
sub
inc
lods
popf
adc
cltd
lds
lahf
xchg
pop
inc
jecxz
push
push
and
add
outsb
or
mov
jae
clc
pop
mov
movsb
adc
cmp
mov
not
push
add
mov
in
pop
std
adc
add
repz
inc
push
aad
jnp
into
clc
outsb
cmpsl
or
cmp
push
push
push
cltd
in
mov
add
inc
mov
cmc
outsl
pop
sub
push
pop
lock
es
inc
sbb
clc
loope
sub
js
popf
clc
das
popf
jp
fidivs
neg
mov
cmp
lock
and
mov
sbb
sti
movsl
push
cmp
fcoml
test
test
les
ljmp
rcr
ja
or
cmp
addl
popa
or
test
and
pop
add
pop
shlb
sub
mov
lods
mov
sub
out
push
mov
xchg
out
rcl
jo
mov
std
insl
add
and
jne
rcl
clc
mov
call
js
mov
pop
sub
mov
call
sbb
mov
mov
sub
push
loopne
mov
cltd
cwtl
cld
add
xor
lock
pop
sti
faddl
jns
jae
xchg
xchg
push
mov
sub
inc
or
cmp
or
mov
and
out
imul
shll
push
jno
lcall
mov
jns
es
out
lock
scas
out
pop
imul
cmp
loop
jge
daa
loope
jecxz
mov
add
pushl
pushl
mov
pushf
bswap
mov
mov
pushf
pushl
ret
arpl
jno
sub
cld
ljmp
sbb
cmpsb
sbbb
dec
movb
iret
idivl
add
and
sub
push
and
add
sahf
fdivr
test
sbb
fidivl
jne
dec
rcrl
or
adc
add
mov
mov
idivl
xor
hlt
mov
jns
jno
sub
cmp
out
xchg
mov
xchg
mov
mov
push
cwtl
movsl
xor
inc
mov
and
mov
adc
push
xchg
insl
xchg
and
hlt
pop
xchg
dec
xor
adc
mov
jno
sub
rcll
mov
nop
add
lds
mov
ja
rolb
test
lcall
aad
mov
xor
outsl
dec
out
scas
mov
or
and
arpl
out
jmp
cltd
fucom
fstl
add
cmc
jne
test
add
ror
mov
cmpsl
cmc
adc
pusha
loope
in
inc
dec
aaa
andb
adc
ret
icebp
mov
and
jns
andl
repz
xchg
jo
sub
shrb
shlb
lods
jmp
dec
cmp
or
add
cmp
sahf
xchg
aam
jle
or
out
insl
cmpb
pop
or
mov
or
mov
mov
aad
xchg
test
and
xor
push
mov
xchg
xor
mov
mov
pusha
sub
inc
xor
sub
es
arpl
lds
mov
outsb
xor
jae
sub
adc
dec
outsl
mov
cltd
decb
sbb
addr16
sub
cmpl
pop
or
sbb
daa
lret
xchg
cmp
inc
in
daa
jecxz
in
aas
sbb
cmc
mov
xor
jbe
jle
inc
sahf
sbbb
sub
dec
xchg
fcmove
sub
mov
adc
push
repnz
imul
jno
push
mov
je
mov
pop
mov
divl
inc
testb
aaa
iret
cmc
adc
out
push
jmp
js
sub
sub
rolb
and
mov
mov
jge
in
imul
fstpl
jbe
sar
push
cld
int
xor
xor
or
mov
not
in
stos
into
test
cmp
sub
bound
xchg
rcrl
push
mov
stc
orl
test
jl
sub
das
icebp
inc
fldt
ret
aad
cmpb
repz
pop
sub
cmp
jae
repnz
cmp
cmp
orl
test
jl
cmpsb
dec
inc
inc
pop
add
sub
mov
ret
les
xor
xchg
inc
mov
add
movsb
mov
pop
cltd
xchg
insl
jmp
pop
push
dec
inc
sbb
test
push
jno
lcall
cmpsl
xchg
in
mov
push
bound
pop
dec
fs
sahf
jbe
je
out
addr16
insl
add
push
scas
sub
xchg
int3
cwtl
cltd
ret
hlt
fs
xchg
xlat
fdivs
mov
or
mov
xchg
mov
in
bound
sbb
add
sub
jns
cs
mov
cmp
fwait
sub
es
mov
je
nop
fs
cmp
sbb
adc
lret
jl
fwait
dec
jne
sub
and
dec
add
cmp
xchg
mov
jle
xor
rcr
xchg
pop
inc
push
and
imul
add
cs
pusha
push
cmp
pop
aam
in
enter
cmp
sbb
loope
test
xchg
cmp
faddl
inc
enter
rcrl
in
ffreep
movb
push
push
sar
sti
outsb
stc
jne
sub
and
insw
jno
sub
lret
push
xchg
add
daa
add
shll
mov
pop
sbbb
iret
push
addr16
jo
jle
xchg
xor
fdivrl
push
or
jle
mov
jb
add
cli
adc
pop
dec
push
add
stc
es
hlt
inc
jmp
xchg
enter
push
into
dec
push
stc
or
jg
inc
pop
sti
xchg
mov
sub
inc
and
mov
call
test
jmp
in
push
je
pop
sub
xchg
les
adc
nop
in
bound
xchg
stos
dec
popa
fldenv
imul
shll
sub
adc
inc
mov
mov
mov
in
in
xor
mov
xchg
sbb
jl
cmp
insb
xchg
ljmp
sbb
loopne
int3
cmp
pop
push
fisttpll
ror
mov
cli
in
outsl
out
movsl
adc
lock
stos
push
mov
xchg
fisubs
push
push
fcmovu
dec
and
vandnps
push
pusha
mov
sub
test
pop
add
inc
shl
movzbl
pusha
mov
cmp
cmp
or
call
movl
jmp
cmpsl
decb
ja
sub
mov
adc
fimuls
test
xor
dec
push
xor
add
sti
mov
or
xor
adc
aaa
testl
lds
jo
enter
orl
test
dec
push
mov
in
mov
xchg
add
ljmp
pusha
cwtl
cmp
push
test
pop
sub
loop
adc
push
mov
xorb
aas
jp
push
mov
mov
pop
push
and
outsl
mov
inc
or
loop
imul
adc
in
jae
in
mov
cmp
mov
cs
arpl
dec
mov
jo
push
add
add
xor
fucom
call
insl
jmp
in
ljmp
stos
jnp
xor
mov
ds
jecxz
les
or
flds
scas
adc
dec
inc
das
pop
mov
pop
jmp
mov
mov
fwait
xchg
vmread
sahf
sub
inc
jns
push
ja
popa
movsb
xchg
repnz
imul
xchg
pop
cmp
or
dec
push
xchg
std
xor
loop
fidivrs
jge
lcall
or
dec
call
iret
lret
and
mov
mov
je
pop
cwtl
ljmp
mov
movsb
mov
testl
pop
in
mov
inc
ds
push
movl
push
movl
pushf
mov
pusha
pushf
lea
jmp
fmul
lock
sub
mov
cmpsl
mov
mov
jmp
aaa
push
push
sub
mov
xchg
fistps
ret
add
out
rcll
xchg
les
xor
pushf
stos
mov
pusha
movl
lea
jmp
shrd
sbb
das
push
cmp
lahf
setle
rcr
mov
call
test
popa
jns
sub
mov
jl
xchg
fldl
fiaddl
iret
fisubs
cwtl
stc
inc
xor
sub
cmp
or
jl
pop
pop
xchg
add
lcall
and
inc
push
sti
sbb
sbb
ja
or
push
pop
aaa
test
pop
stos
add
adcb
clc
sbbl
stc
outsl
inc
sub
lock
jmp
iret
mov
popf
fdiv
inc
cmpb
and
push
mov
sub
mov
scas
rorl
fisttpll
arpl
push
inc
rcrl
xor
adc
dec
in
dec
cs
mov
inc
or
cmc
fisubl
loop
test
or
imul
jne,pt
and
ret
jl
pop
adc
cmp
adc
shl
sub
call
dec
adcb
xchg
mov
lock
js
sub
add
mov
or
dec
fsts
or
xchg
das
lock
data16
aam
xchg
cmp
repz
or
scas
dec
dec
arpl
cli
stc
ljmp
adc
sbb
xchg
insb
or
fwait
outsb
out
cmp
xlat
mov
in
mov
mov
push
or
sbb
pusha
adc
xor
mov
arpl
sbb
inc
movsl
sbb
mov
andb
sbb
xchg
sub
xchg
xor
sub
cmp
loopne
dec
mov
out
pop
imul
ja
adc
inc
addr16
jae
xchg
aad
push
cmp
ja
jnp
sub
shlb
sbb
outsl
inc
jae
cmpsb
loope
adc
pop
push
push
pop
rol
repz
xchg
repz
fcompl
hlt
divb
xor
or
aam
push
mov
dec
addb
lcall
ficoms
sbb
scas
inc
jmp
push
test
cmc
inc
ret
push
push
mov
mov
test
and
imul
mov
mov
xchg
aas
adc
jo
daa
mov
add
das
mov
sub
ss
mov
jmp
pop
cmp
push
lods
icebp
jge
hlt
ljmp
mov
sahf
stc
sbb
push
int3
dec
mov
inc
mov
rol
jecxz
hlt
or
adc
mov
jmp
fldenv
iret
mov
stos
adc
sbb
outsl
shll
jns
popf
adc
inc
mov
mov
add
repz
xchg
adc
jp
xchg
loopne
add
wrmsr
sub
sub
pop
pop
cmp
pop
push
sbb
push
fdivrs
leave
dec
adcb
inc
cmp
notl
xchg
and
dec
sahf
testb
push
mov
shr
mov
sub
mov
cli
pop
mov
inc
js
mov
jmp
out
mov
xor
mov
fldt
mov
dec
adc
mov
push
ror
jae
pop
lret
nop
aas
add
inc
movsl
ror
push
mov
stos
inc
jg
dec
sub
mov
xor
mov
xor
ret
fidivrl
mov
iret
add
movsb
jp
sub
into
rolb
dec
pop
stc
add
xchg
aaa
mov
mov
mov
rolb
sbb
mov
xor
call
out
add
or
push
add
mov
cwtl
push
and
jae
scas
sar
inc
mov
push
sbb
add
mov
push
ret
in
loope
cmp
out
lock
mov
lock
pop
cmp
sub
daa
push
scas
clc
movsb
mov
ret
cwtl
insl
fs
and
call
call
bt
repnz
jmp
lea
je
call
fcoms
jge
sub
test
push
inc
jnp
out
mov
mov
cmp
or
mov
jne
dec
xchg
jae
ljmp
insl
and
nop
jp
andl
sub
das
and
sub
mov
jnp
bound
rcrl
mov
push
cmpsb
dec
mov
xlat
ret
scas
sti
jmp
jae
sbb
pop
sub
insl
xor
inc
xor
jnp
lcall
adc
in
in
mov
xchg
pop
out
notl
push
sbb
mov
cmc
mov
jb
mov
jb
inc
and
xchg
shrb
push
cmp
pop
add
push
adcl
int
test
push
int3
mov
in
popf
inc
stc
dec
sub
adc
mov
jae
jmp
dec
sbb
in
movsl
jl
sub
xchg
jns
ljmp
mov
mov
cltd
and
pop
sahf
push
or
lock
jle
mov
mov
ret
dec
adc
mov
outsl
das
push
inc
movsl
mov
and
leave
inc
pop
pop
pop
pop
cwtl
cltd
cmp
xchg
movsb
push
mov
mov
fwait
mov
pminub
cmp
shrb
pop
sub
orb
lds
sub
push
sbb
mov
aam
ds
les
pop
dec
scas
out
pop
push
out
mov
inc
add
cmc
decb
lock
ror
sub
or
pop
into
mov
mov
clc
les
pop
in
mov
inc
jne
xchg
popa
jne
inc
icebp
add
clc
inc
inc
push
mov
cbtw
mov
cmp
and
mov
rolb
push
gs
xchg
mov
loop
jge
xchg
jg
sub
mov
jl
out
insl
mov
push
fstpt
xchg
loope
imull
mov
mov
es
les
jbe
jle
es
fwait
subl
or
dec
adc
aaa
inc
nop
lds
xor
leave
pusha
or
addr16
add
push
inc
adc
push
and
push
xchg
mov
cmp
mov
movsb
out
xchg
sub
test
in
pop
xor
xchg
add
fidivrs
ja
mov
xor
push
xor
addb
shrb
shll
jmp
sbb
dec
jle
sub
lods
negb
daa
stos
ds
gs
mov
jno
daa
add
subb
sub
pop
pop
outsb
cld
jmp
clc
inc
adc
dec
sbb
adc
mov
and
pop
pushl
sahf
mov
fwait
pop
daa
push
pop
stos
push
xor
dec
aas
addl
js
xchg
add
mov
addl
rcrb
push
pop
rorb
xchg
xchg
out
out
and
mov
pop
or
mov
lods
adc
jle
sub
pop
nop
stc
out
and
xor
adc
xlat
jo
stc
cmp
sub
cs
iret
push
push
adc
fstpt
ja
push
aas
sbb
ret
pop
test
jg
insb
cmp
lcall
cli
or
adc
mov
sbbb
data16
pop
out
paddb
jmp
jge
and
or
in
lret
shlb
mov
cwtl
pop
pop
lods
cld
outsl
inc
int3
loopne
inc
mov
pop
icebp
lea
aaa
ja
mov
scas
dec
ja
sub
bt
test
pushl
jmp
test
pop
frstor
or
repz
cmp
xchg
cwtl
jmp
cmp
js
std
out
inc
cltd
mov
inc
rorl
and
dec
xchg
inc
mov
adc
neg
pusha
data16
mov
inc
dec
cmpb
push
addr16
mov
sbbb
mov
sahf
fisttps
outsl
push
lcall
pushf
cld
fbstp
pusha
sbb
pop
sti
les
push
mov
inc
pop
sub
xor
adc
faddp
xchg
mov
mov
mov
and
xchg
jno
sub
add
and
add
out
pop
adc
inc
cmp
pop
inc
mov
sbb
adc
add
dec
xchg
jp
cmc
clc
xor
jne
repz
inc
in
pop
dec
sbb
mov
rclb
jmp
pop
pushf
movl
mov
movw
pushf
mov
lea
jmp
lea
js
ja
stc
add
cmp
pushf
jmp
xchg
inc
pop
sub
fsubs
pop
test
pop
push
cltd
loop
adc
insb
dec
cmc
push
lahf
lods
pop
bound
dec
adc
int3
pop
pop
and
xchg
into
mov
inc
movsb
mov
ret
jo
push
arpl
push
dec
dec
test
xorb
mov
pushf
addr16
out
fs
jne
imul
jmp
push
adc
fstl
push
xchg
loop
pushl
popl
pushl
push
push
pushl
ret
inc
sub
pop
sub
dec
stc
pop
push
jle
movsb
cmp
mov
cmp
sub
jb
mov
test
adc
loope
pop
das
jnp
mov
insb
dec
insl
popa
mov
enter
loopne
int
js
cmc
imul
adc
lods
mov
push
adc
cmpsb
mov
test
sarl
mov
dec
les
shlb
adc
dec
fs
in
gs
cmp
int
je
rcrl
mov
inc
pop
sub
jle
mov
aad
adc
mov
adcb
pop
sub
jp
dec
sub
xchg
mov
aas
push
inc
mov
xchg
sub
imul
xchg
jb
adc
cmpsb
ljmp
push
inc
in
pop
xchg
fdivs
ds
lcall
iret
imul
clc
shl
ss
push
push
sub
mov
lea
xor
fldlg2
rsqrtps
sub
xlat
xchg
mov
push
pushf
mov
sub
leave
and
jns
not
pushl
pop
movzwl
movzbw
lea
jmp
pusha
call
outsb
into
mov
sub
call
mov
push
lods
xchg
push
push
xchg
stos
mov
or
ja
sub
pop
inc
out
pop
jmp
addr16
inc
and
jl
clc
pushf
int
jbe
add
add
sbb
mov
ja
and
inc
adc
jmp
addl
mov
ficomps
mov
or
push
pop
jns
inc
cmpsl
mov
aas
and
pop
pop
stc
popf
aam
es
std
pop
lahf
mov
lea
je
push
test
jmp
xchg
inc
addr16
pop
sub
push
jmp
mov
fcompl
cs
les
loop
cwtl
out
clc
stos
dec
mov
inc
pop
sti
xchg
inc
xor
fstpl
lcall
mov
mov
pop
pop
repnz
add
es
add
mov
dec
addr16
popf
cmp
loop
ret
das
lret
lea
xlat
call
shl
inc
and
into
mov
mov
xor
jge
movsb
mov
out
inc
sbb
xlat
mov
mov
xor
xchg
into
inc
pop
sub
add
int
test
ja
mov
aad
xchg
mov
xchg
push
pop
inc
mov
sbb
lea
shll
mov
jbe
xchg
and
mov
mov
xor
or
scas
pop
addr16
es
dec
xchg
xchg
jbe
pusha
cli
mov
jp
or
mov
xor
pop
les
jb
gs
das
sbb
lret
out
adc
mov
iret
xchg
loop
sub
rcpps
ja
or
and
add
inc
pushf
jmp
ja
mov
das
andb
fiadds
popa
sub
cmp
inc
cmp
mov
test
mov
inc
sbb
sti
adc
popa
add
mov
ret
gs
movsb
imul
jg
sub
push
push
insb
mov
es
notb
int3
add
out
push
inc
rep
push
pusha
je
fmulp
sbb
push
test
lret
xchg
addr16
push
inc
dec
out
insb
out
cmpsl
iret
ret
cmp
outsl
lock
out
adc
jno
add
sub
test
or
add
sbb
sub
jbe
push
rolb
mov
stos
xor
pusha
xchg
inc
dec
mov
icebp
pop
xchg
repz
inc
cltd
mov
in
jo
and
negl
inc
push
movsb
mov
mov
in
popf
cmpsb
mov
cmp
dec
iret
push
mov
mov
mov
or
and
lock
dec
mov
data16
push
repz
incl
add
popa
insb
inc
insb
insb
outsl
arpl
ror
cmp
call
adc
lea
sub
data16
inc
hlt
negb
into
outsl
mov
filds
sbb
sub
mov
pop
pop
xchg
mov
in
dec
or
xor
loop
mov
fimull
cld
mov
loope
bound
jl
imul
push
idivb
int
cwtl
adc
sub
jmp
insb
loope
bound
xor
pop
jbe
fs
xchg
sbb
cmp
cmp
dec
cmp
leave
std
je
stos
sub
mov
jns
pop
sub
fldcw
or
cmp
inc
rcll
inc
mov
sub
and
les
xchg
jnp
xchg
push
dec
lret
popa
cmp
dec
xchg
enter
call
xchg
arpl
cs
adc
loop
fwait
out
or
cmpb
sbb
and
and
popa
imul
stos
test
cmp
or
shlb
int3
inc
pop
sub
subl
sub
or
cld
adc
pop
xchg
ljmp
arpl
dec
ljmp
in
das
dec
sub
mov
popa
mov
mov
push
xchg
iret
into
sub
and
aaa
pop
cltd
popa
sbbb
cmp
and
fstp
lods
movsl
and
adc
dec
mov
stc
xor
dec
dec
pop
sub
push
pop
pushf
adc
fdivrl
lcall
and
subb
cmp
imul
jne
call
fisttpll
lcall
jmp
fnstsw
add
fdivr
popf
push
in
into
sbb
and
xchg
push
bound
sbb
adc
push
xlat
inc
adc
push
jecxz
aaa
mov
dec
adc
jle
iret
mov
cltd
sub
out
sub
dec
pop
sub
jge
iret
lods
jne
ljmp
jl
jmp
loope
push
jle
nop
mov
pop
jmp
lods
lahf
bound
sbb
and
xlat
pop
pushf
dec
xlat
sbb
mov
into
push
cmpsl
stos
or
mov
sbb
out
or
push
cwtl
shlb
or
dec
mov
into
xchg
mov
sti
jge
hlt
jmp
pop
and
push
pop
iret
hlt
inc
and
mov
xchg
pop
and
shll
in
aad
aas
mov
pop
sub
out
pop
pop
xor
lahf
sbbl
mov
jle
daa
jae
xchg
gs
jbe
daa
push
add
adc
cmp
lock
and
test
mov
cmpsb
mov
mov
lret
push
sahf
fwait
push
in
sbb
outsb
and
ljmp
push
out
stos
mov
xlat
pop
test
pop
popf
jns
cmp
pop
adc
cmp
sbb
adc
mov
inc
in
aad
movsb
mov
jle
jg
pop
sub
push
invd
inc
addb
hlt
lcall
arpl
adc
leave
test
and
pop
lea
add
sub
fsubs
xor
inc
cmp
ret
adc
rol
and
sbb
and
push
test
sub
jne
popa
adcl
add
cmc
inc
xchg
inc
mov
fdivrl
jb
jns
test
mov
dec
daa
add
dec
add
xchg
pushf
dec
pop
sub
pusha
repz
inc
pop
popf
pextrw
and
loope
pusha
test
mov
pusha
mov
fsubs
and
pop
fnstsw
mov
pop
leave
rorb
xor
dec
fsubrs
mov
jmp
and
mov
sbb
gs
out
ja
and
out
cs
adc
lcall
cmc
gs
push
fs
sarb
lret
xchg
mov
insb
imul
cmp
dec
jb
lahf
mov
jb
sub
lock
stc
add
pop
sub
or
iret
inc
loope
scas
cs
jbe
xchg
push
dec
shlb
mov
ss
out
dec
mov
adc
sarb
sub
xchg
ret
pop
xchg
sbb
ss
cmpsb
iret
xchg
push
mov
lds
adc
add
mov
mov
pop
insl
flds
add
cs
mov
inc
sbb
push
ficompl
call
cmpsl
cltd
sub
jecxz
pusha
pop
or
and
or
pop
sub
aaa
pop
add
or
sarb
test
cwtl
mov
sub
dec
pop
sub
mov
add
addb
imul
fisttps
cmp
fidivrs
push
dec
outsb
mov
lods
fnstenv
mov
dec
sbb
test
or
sti
mov
andl
adc
push
jle
ret
sub
push
xchg
gs
mov
es
fs
mov
and
pop
sub
or
rclb
lcall
sub
mov
ljmp
add
in
mov
xchg
notb
jnp
andb
mov
das
push
inc
sysenter
jle
fadd
fdivs
loop
das
sbb
ss
mov
sub
and
test
pop
cmpsb
sub
out
adc
and
cmp
lods
jge
dec
push
and
imul
iret
or
pop
sub
dec
sbb
loop
sbb
and
pop
mov
in
or
mov
sub
pop
repz
mov
jno
mov
imul
adc
sbb
hlt
cmp
adc
lea
mov
adc
cmpl
pop
arpl
or
mov
pop
dec
js
mov
push
shl
fwait
push
sub
mov
ret
add
test
mov
dec
pop
fidivrs
sub
pop
in
hlt
xor
and
in
pop
cmp
aas
dec
leave
cld
shr
pop
mov
stos
jne
jo
mov
pop
adc
adc
mov
out
lcall
add
adc
pushf
mov
movsbw
lea
call
movb
pushl
popl
mov
pushf
pushl
push
pushl
ret
lea
mov
pushf
call
test
pusha
cmp
call
mov
jmp
lods
lock
mov
jg
jne
les
add
fsubs
or
outsl
nop
and
pop
jb
add
lods
sbb
pop
jmp
xchg
ja
push
pop
xchg
subl
mov
jecxz
add
pop
out
adc
sbb
pop
out
rcrl
les
hlt
cltd
push
mov
scas
cltd
cltd
sbb
mov
ret
mov
out
or
adc
repnz
scas
insl
dec
in
cltd
cmp
int3
dec
dec
aad
and
imul
orb
inc
lock
test
out
mov
xor
pop
lahf
mov
cmp
xlat
mov
pop
hlt
push
push
fwait
in
pop
cmp
xor
sub
dec
ret
cmc
sbb
inc
fists
and
and
mov
and
out
and
adc
add
imul
push
xchg
pushf
dec
mov
das
and
pop
arpl
ficoms
clc
jecxz
test
add
jmp
mov
dec
pop
sub
jns
sti
rolb
mov
push
nop
leave
mov
repnz
xchg
dec
ja
dec
sub
arpl
fstpl
xchg
mov
cltd
jne
sub
ret
cld
push
add
test
ljmp
cmpsb
out
rorl
xrelease
mov
icebp
add
cmpb
inc
scas
pop
insb
cli
mov
mov
mov
shlb
xchg
cli
push
xchg
sbb
shlb
push
pop
cmpsb
not
pusha
lea
movsbw
mov
lahf
movl
push
lea
jmp
pop
jmp
movsb
add
enter
jmp
out
loope
adc
outsb
jecxz
push
xor
clc
and
das
dec
rclb
mov
pop
pop
xchg
into
lahf
sbb
aaa
adc
add
mov
or
add
mov
cmpsl
fisttps
fldz
inc
and
dec
mov
xor
mov
add
aam
sahf
call
push
jecxz
push
cmpb
jo
pop
outsb
adc
sub
jg
rcl
test
and
push
fnstsw
sbb
or
sbb
cmp
outsb
mov
push
ret
dec
lds
lods
push
pop
test
cmpsb
xchg
xchg
fadds
sub
lods
lahf
rorb
imull
push
sub
shlb
loopne
or
xchg
rcr
xlat
xchg
out
mov
xchg
clc
aad
popf
push
jg
cld
mov
lea
mull
push
mov
and
jmp
pop
sbb
enter
push
pop
sub
loopne
sbb
stos
mov
or
fidivrl
xor
loopne
xchg
sahf
flds
xchg
or
sbb
push
cli
movsb
sti
jne
inc
filds
push
dec
push
push
in
inc
and
movsb
fstpl
pop
sub
mov
out
or
sub
bound
es
inc
cmp
xchg
or
cmp
inc
dec
movsl
push
pop
xchg
pop
repnz
pop
js
xchg
dec
out
test
mov
fnclex
mov
mov
int
lret
add
leave
dec
call
fwait
std
repz
xchg
fsubl
pop
sub
and
jbe
loopne
imul
mov
insb
push
shlb
xchg
mov
dec
inc
mov
es
or
dec
arpl
cld
adc
cmp
dec
jne
sub
xor
sarb
cmc
mov
sahf
adc
addr16
cmp
in
lds
jle
icebp
jmp
lods
clc
mov
imul
addb
jbe
rol
test
not
cmc
sub
cmp
jmp
pushf
pusha
lea
call
call
lea
call
jmp
lea
call
pusha
jmp
push
inc
jge
pop
sub
lcall
cld
loop
adc
bound
outsl
enter
pop
sbb
sub
inc
nop
cmp
ljmp
int
mov
add
jmp
jp
cmp
jne
test
jge
loope
adc
in
mov
xchg
cwtl
outsl
adc
movsb
inc
push
jno
out
xchg
ja
jae
cmp
sub
adc
or
jmp
push
sbb
stc
notl
sbb
dec
push
ss
hlt
rcr
ljmp
pop
std
push
lret
es
push
inc
mov
cmp
xor
and
outsl
adc
addl
sub
aas
jns
adc
mov
mov
mov
cmp
in
push
adc
pop
movsb
fnstsw
jnp
inc
daa
bound
sub
ja
push
sub
push
and
push
cmp
stos
js
adc
jb
repz
mov
push
out
fmul
push
aam
mulb
add
jle
fistl
lods
icebp
sub
mov
mov
mov
psrad
pop
rorl
movsl
adc
jnp
ljmp
lret
cs
pushl
lea
ja
call
mov
push
pop
sub
xchg
lods
push
and
dec
push
ret
std
stos
push
push
pop
and
imul
push
cmpsl
lret
mov
fwait
popf
lret
lods
loope
jmp
mov
pop
fistl
or
mov
lods
jae
ja
pop
sbb
mov
jl
sti
das
shrl
lahf
cli
fildl
test
pushf
out
repnz
jnp
fisttpll
xchg
dec
shrd
bts
mov
stc
or
push
mov
lea
je
sbb
sub
ror
add
shl
sub
not
call
sub
cmc
clc
clc
cmp
pushl
popl
stc
cmp
cmp
pushf
pushf
pusha
jmp
cmpsl
dec
push
pop
sub
cmp
popf
lods
outsl
xchg
push
fprem
fdivrs
outsl
mov
addr16
in
push
sub
add
xchg
lret
stos
mov
and
jnp
jecxz
stc
push
dec
push
test
lret
imul
push
or
lcall
mov
pop
stos
je
xor
jo
dec
xchg
pop
jae
dec
mov
arpl
clc
dec
mov
sbb
out
xchg
loopne
cmp
push
pop
sub
int3
cwtl
fisubrl
in
sahf
push
scas
shl
mov
cmp
out
sub
pop
mov
dec
outsb
pop
dec
test
push
push
xchg
mull
test
cli
repz
enter
loop
pop
sbb
sub
cwtl
push
pusha
fwait
cld
xor
add
mov
inc
dec
lock
jmp
gs
mov
mov
dec
push
pop
sub
jecxz
cmp
lret
cmp
jmp
and
dec
pop
out
jno
cmpsl
pushl
dec
inc
dec
push
dec
or
movsb
stos
sti
popa
pushf
dec
pop
add
es
aam
arpl
pop
and
mov
xor
pop
mov
push
lods
mov
repnz
inc
pop
mov
inc
lcall
inc
mov
std
fwait
clc
xor
call
lea
push
pop
sub
or
cwtl
jmp
jno
xchg
pop
sub
mov
loop
sub
enter
fs
lods
fwait
stos
daa
mov
mov
adc
addr16
out
dec
sbb
lret
mov
mov
dec
lods
jle
aas
mov
sub
hlt
fistpl
shll
imul
pop
sbb
pop
mov
sub
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
adc
cmp
lahf
cmp
shll
mov
cld
iret
push
jno
stos
jle
dec
inc
ret
cmpsl
cmpps
std
mov
jl
and
push
sbb
fstpt
sub
out
xor
sbbl
adc
cmp
lods
fdivs
cmp
mov
in
add
or
jecxz
sub
sub
shlb
push
cmp
ret
dec
mov
movsl
push
dec
fcmovnbe
fnstsw
add
sub
punpckldq
lea
jae
pusha
stc
stc
bt
cmp
call
seta
add
pushf
rcr
mov
test
cmc
test
jmp
add
gs
pop
sub
and
adcb
in
sti
push
repz
in
or
xorb
xor
xor
pop
and
inc
mov
test
pusha
inc
sbb
push
push
aas
add
dec
in
fcomps
jge
hlt
sbb
pop
rcrb
popa
stc
loop
push
rorl
xchg
sub
fucomp
adc
adc
pop
lcall
jns
mov
add
sub
mov
adc
add
inc
pop
inc
aas
test
pop
cmp
ss
xchg
loop
and
sbb
and
loope
pop
loop
xor
outsl
inc
inc
stos
mov
sahf
dec
dec
out
sub
aaa
fs
test
or
js
sub
inc
add
cld
inc
pop
push
lret
subl
jns
sub
xor
insb
jns
or
mov
insl
dec
clc
mov
adc
dec
iret
pop
and
push
xchg
aaa
cmp
lcall
mov
xchg
jmp
or
cld
add
jne
orb
mov
fsubl
pop
sub
pushf
iret
inc
jne
jl
mov
push
sbb
dec
pusha
aam
loope
mov
and
das
dec
and
mov
outsb
aas
sub
cwtl
ret
cwtl
and
movsb
sbbb
imul
mov
adc
lcall
fimull
cs
into
outsl
cmpsl
scas
iret
inc
cmp
outsl
imul
loopne
mov
pusha
jns
mov
pop
pop
sub
mov
jle
mov
adc
xlat
or
adc
and
loope
out
cltd
fistps
stos
lret
call
lods
aad
and
mov
std
fcoml
sub
push
inc
call
jmp
xor
js
pop
sub
mov
stc
rorl
mov
cltd
pop
pusha
xlat
shlb
out
cli
mov
addr16
pusha
add
mov
pop
inc
les
test
adc
or
call
adc
out
ror
cmp
mov
aam
nop
cmc
push
stos
xchg
adc
jnp
or
pop
xchg
mov
push
icebp
mov
out
stos
mov
cs
cmpsb
fwait
or
pop
xor
fisubrs
dec
popa
jl
stos
push
mov
pop
sub
mov
lods
je
push
xor
mov
lods
adc
ret
adc
pop
imul
or
stos
pop
and
dec
fildl
fistpll
or
test
leave
mov
mov
aam
push
jl
push
dec
mov
sbb
xchg
mov
stos
outsb
and
aaa
shrb
add
daa
stc
imul
in
ss
or
mov
xchg
jb
or
inc
int3
mov
sub
imul
inc
add
cwtl
pop
fwait
and
dec
bound
bound
jns
test
loope
fildl
sub
push
sub
mov
arpl
repnz
xchg
cmp
push
es
pushf
div
sbb
hlt
out
jo
sarb
fmul
mov
sbb
vpsubsw
inc
icebp
imul
mov
pop
jnp
push
ss
daa
pop
aas
inc
pop
data16
cmp
lcall
cmp
pop
pop
sub
inc
in
gs
pop
push
out
hlt
test
iret
or
adc
je
adc
jbe
cmp
cli
fnstsw
sahf
pop
and
scas
inc
loop
lahf
sbb
mov
mov
cmp
inc
sbb
pop
xor
mov
test
push
xchg
into
pop
roll
shrl
lret
aam
loop
lret
ljmp
adc
lea
mov
int
mov
ja
lea
pop
in
cmpsl
pop
pop
sub
add
add
ret
xchg
stc
dec
test
mov
sub
imul
sub
lahf
or
stc
xor
mov
movsb
xor
xchg
jl
mov
test
lcall
mov
xor
movsl
stc
adc
sbb
addr16
aas
cmp
in
jnp
xchg
adc
mov
dec
dec
add
mov
rcll
jle
dec
adc
mov
jp
sub
mov
je
cmp
sub
popf
and
imul
das
mov
roll
rcrl
jecxz
addr16
loopne
fwait
sub
dec
scas
es
pop
or
repz
push
xor
pop
shll
and
sub
shl
inc
sti
inc
push
imul
add
jbe
lods
lret
mov
pop
and
je
dec
cli
addb
sar
int
dec
lret
arpl
xchg
push
mov
movsl
sub
sbb
out
lea
je
test
cmp
jmp
mov
mov
sub
and
test
jecxz
adc
mov
movsb
jnp
clc
xor
outsl
cmove
ror
stos
or
neg
mov
add
imul
add
mov
pushfw
jle
in
mov
lods
jmp
outsb
inc
jg
xor
jg
jp
loope
ss
sbb
lock
mov
mov
mov
rcrb
push
idivl
inc
cwtl
xor
lea
rorb
sbb
xchg
xor
dec
insb
sbbl
pop
and
in
mov
aam
or
loop
out
mov
inc
iret
dec
push
sub
push
int3
shlb
mov
jno
icebp
xchg
aad
inc
cwtl
test
lods
outsl
xlat
cld
dec
or
movsl
push
mov
outsb
dec
das
adc
adc
cmpsb
adc
and
pop
push
scas
mov
mov
fsubrl
jp
shlb
scas
das
test
gs
jae
out
or
mov
lock
inc
mov
and
sbb
call
imul
push
xorl
imul
add
jo
sbb
push
fisubrs
ret
in
xor
and
push
cmp
dec
fbld
inc
mov
push
add
dec
cmp
jnp
cmp
stos
sub
cld
mov
mov
jo
imul
jo
dec
jne
subl
jnp
gs
pop
adc
mov
jle
mov
fsubl
pop
sub
clc
sub
imul
movsl
int3
fcmovbe
mov
inc
pop
sti
lret
xor
mov
xor
mov
xchg
pop
rol
push
inc
dec
push
in
std
push
mov
or
adc
mov
fisttpl
cmp
or
addr16
scas
mov
jp
ss
mov
inc
mov
popa
xchg
roll
or
nop
mov
xchg
clc
movsb
ljmp
inc
xor
in
movsb
mov
notb
push
push
rcll
dec
lret
pop
sub
mov
push
rcrl
popa
cld
in
mov
ret
int3
fnstenv
jb
les
bound
test
repz
fisttps
mov
or
ljmp
inc
jo
pop
test
pop
in
ss
and
movsl
adc
jbe
dec
cmp
push
cmp
shr
inc
pushf
iret
mov
add
fldt
push
add
outsb
push
dec
loope
adc
dec
jg
ljmp
lods
sarb
inc
in
lods
pop
dec
jns
and
addb
sub
jns
pop
movl
mov
sti
mov
cwtl
lcall
pusha
insl
fdivs
jg
pop
ss
inc
aad
adc
mov
idivb
or
jmp
adc
cli
loopne
inc
fistps
mov
dec
jae
lds
gs
xchg
sub
jmp
jbe
jns
fistpl
jl
scas
xchg
fidivl
cmp
lds
call
cli
push
imul
bt
add
pushl
lea
jmp
push
movl
pushf
mov
push
pushl
popl
mov
pushl
ret
outsb
divl
pop
sub
orb
pop
ret
cs
mul
mov
jb
jnp
mov
xchg
icebp
jae
mov
jge
sbb
lods
jno
outsb
gs
fsubl
mov
mov
push
arpl
jae
pop
sarb
fmull
push
scas
or
arpl
lret
jns,pt
adc
aas
mov
or
inc
aam
incb
lock
sub
pop
mov
cmp
mov
sub
pop
mov
cwtl
lock
into
shrb
sub
jnp
pop
adc
sub
std
clc
stc
call
movb
movl
pusha
mov
lea
jmp
adc
int
pop
sub
arpl
inc
cwtl
loope
sbb
ds
push
je
mov
xchg
adc
sub
dec
sub
cmpsl
jg
pop
movsl
movl
ja
and
loop
out
cmp
in
push
addl
or
ss
aad
dec
jnp
mov
mov
sub
pop
push
aaa
sub
lds
xchg
aas
and
jb
int
addr16
aam
sub
push
bt
btr
movsbw
xor
push
xor
rcr
test
movzbw
push
aad
sub
pusha
cwtl
pushf
mov
lea
pushf
call
push
lea
je
movsbw
mov
jo
push
lahf
pushf
call
icebp
outsl
cli
and
sbb
clc
dec
xchg
push
add
mov
ljmp
scas
pop
sub
dec
xchg
sahf
inc
lret
movsl
adc
and
gs
cltd
hlt
loope
and
frstor
aam
test
xchg
inc
add
xor
xchg
or
fisubrl
outsb
mov
dec
cmpsl
lret
cmp
pushf
fs
push
jno
test
push
ds
fidivrl
lahf
jp
cmpsb
dec
cmp
pop
sub
insb
push
sub
jo
cmp
or
aas
in
push
adc
js
scas
imul
jmp
mov
sbb
mov
lods
stc
xchg
jl
cmp
and
fwait
xor
in
leave
add
out
dec
add
pop
add
mov
xor
jae
add
fiadds
pop
or
push
add
ljmp
cmp
sahf
jg
out
hlt
in
into
adcb
push
inc
addr16
cld
add
lods
mov
insl
shrl
cltd
push
test
and
mov
pushf
pushf
test
cmpb
pushf
lea
jne
ror
bswap
pusha
rcr
sub
btr
bsf
aad
mov
test
or
or
clc
add
rcr
mov
call
sub
and
mov
push
push
sbb
js
push
test
in
out
xor
movb
add
xor
repz
in
cmp
jge
sarl
aaa
inc
xchg
or
repz
and
inc
jne
xor
mov
sbb
inc
lds
adc
mov
lcall
lret
shlb
and
and
and
sbb
adc
cmpsl
scas
xor
repz
jecxz
sahf
xchg
iret
shll
push
testb
out
mov
push
filds
dec
lahf
pop
jg
popa
inc
in
xchg
mov
ficompl
sub
imul
lock
push
in
stos
sub
pop
cltd
mov
insl
jbe
mov
es
jno
arpl
aas
adc
aaa
lock
mov
jne
and
pop
inc
int
in
out
popf
pop
scas
enter
movsl
fs
lods
aas
push
das
jno
adc
xchg
aaa
dec
out
ljmp
jns
ljmp
icebp
and
cmp
xor
add
add
popa
loopne
mov
jbe
pop
adc
mov
mov
jmp
mov
test
xlat
mov
outsl
out
jno
jmp
insl
adc
cmp
pop
roll
jnp
pop
and
dec
push
mov
cmp
adc
mov
mov
and
cltd
xor
dec
les
push
inc
xor
das
and
jno
mov
pop
arpl
add
fmul
cld
lds
sbbl
sbb
int3
addr16
cmp
pop
jo
jne
or
jmp
loopne
adc
inc
mov
xchg
rcrb
xor
pop
std
or
pop
jmp
stc
cmpsl
sti
fcom
dec
outsb
mov
pop
sub
outsl
mov
or
jnp
rorl
ror
fwait
enter
sub
jno
outsb
lds
pushf
or
mov
push
pop
inc
out
cmp
outsl
xchg
loop
inc
decl
out
roll
adc
test
cmp
push
xor
pop
mov
pop
mov
jae
jg
gs
into
mov
push
inc
shll
fisubs
mov
in
ret
imul
inc
xchg
or
fsubr
mov
in
cld
sub
int3
rorl
sbb
pop
lea
mov
ror
movsb
mov
popf
aas
and
sub
xor
daa
test
or
aaa
lods
jecxz
xchg
pop
lods
ds
adc
lods
cmp
push
lcall
lea
xchg
xchg
daa
pushf
iret
add
ror
aaa
jne
pop
pop
inc
push
pop
and
jne
xchg
pushf
insl
mov
xor
mov
and
pop
repz
call
call
popf
sub
and
pop
and
dec
shll
or
gs
jge
ljmp
dec
call
push
push
aaa
adc
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
sbb
pusha
mov
jns
cwtl
push
mov
sbb
out
cld
pop
adc
cs
or
inc
lcall
lods
sub
loopne
int
jnp
cld
fwait
xchg
mov
lods
mov
aam
aas
out
mov
out
jnp
cli
cmp
stos
inc
jo
fmul
data16
shrl
incl
testl
rorb
jmp
negl
fnstsw
xlat
sub
pop
and
jp
loope
dec
lds
test
add
xor
mov
ljmp
pop
ljmp
leave
sbb
scas
arpl
dec
adc
or
dec
cmp
mov
or
xor
or
loopne
and
andb
cmp
out
jo
aam
push
xor
push
xor
jo
pop
out
test
push
push
lcall
pushf
adc
pusha
pushf
lea
jae
pushf
pusha
pusha
lea
jne
call
xor
cmp
pop
sub
pushf
stos
sbb
cld
adc
popa
add
sti
enter
insb
mov
and
dec
fcompl
xchg
xor
mov
outsb
enter
cmp
jns
insb
rcll
aam
ret
cmp
out
shll
inc
jae
les
mov
mov
or
call
mov
fstpl
lahf
fs
add
pop
sub
and
iret
sbb
jl
mov
mov
rcl
cld
pusha
ja
cmc
push
fucomip
xor
mov
imul
repnz
into
enter
cmpsl
sub
mov
jae
or
mov
in
jge
stos
fistpl
std
rorb
lods
jmp
mov
jmp
jle
lds
mov
inc
inc
ret
mov
clc
pop
xchg
cmpsl
push
dec
test
jb
shlb
xlat
and
call
fistl
pop
std
std
xchg
adc
inc
es
rcrl
sub
pushf
mov
pop
jnp
xor
imul
jge
jg
in
push
adc
pop
pop
enter
shrb
daa
test
in
cwtl
andl
in
push
fs
in
xchg
push
out
je
pop
mov
cwtl
jge
inc
ror
fcoml
fisttps
pushf
lea
jb
push
pushl
ret
mov
sub
dec
loopne
xchg
int
shl
inc
or
movsb
or
adc
je
inc
ror
jmp
dec
and
shll
cwtl
mov
lret
xchg
cmp
fs
fstpl
push
aas
pop
cmp
js
mov
xchg
and
adc
fsts
and
mov
rcrl
ja
xchg
sbb
aas
push
out
es
pop
lods
fstpt
xchg
mov
stc
push
and
stos
mov
pop
insl
pop
and
mov
rol
and
bound
add
add
dec
aam
pop
sub
fiaddl
lahf
cli
inc
or
cltd
lret
shlb
mov
mov
sbb
ret
pop
ja
insb
pop
cmpsl
fs
mov
les
ret
cmpsl
aad
lahf
popf
repnz
pop
ja
push
mov
jecxz
ja
pusha
popa
cld
out
cmp
pop
xchg
pushf
jne
es
xor
ret
rclb
mov
cmp
mov
cmp
btc
cmc
xor
mov
stc
bt
bt
clc
and
bt
stc
test
add
pusha
movw
lea
jmp
call
pop
test
cmp
fcmovbe
cmp
mov
mov
cmpsb
pop
mov
jmp
sub
sbb
iret
lahf
test
gs
dec
cmpsl
loopne
add
data16
lea
push
mov
or
or
xor
rorl
pop
lods
test
inc
iret
cld
fs
sub
testb
pop
ss
cmp
fcomps
into
and
sub
pop
frstor
jns
dec
adc
and
or
and
stc
mov
sbb
imul
in
into
push
mov
lods
sahf
cmp
adc
les
scas
aaa
fldl
cld
in
dec
xor
test
pop
adc
push
jp
call
lods
lcall
lods
cmp
pop
mov
add
test
test
js
push
xor
hlt
jge
xchg
jg
jns
sbb
out
xor
mov
xor
add
add
jmp
add
fldcw
pop
sub
or
mov
inc
int3
inc
int
jg
pop
gs
loopne
fwait
aam
xorl
rcr
aaa
push
sub
js
add
imul
nop
inc
cmp
pop
std
pop
inc
pop
and
mov
inc
bswap
mov
stc
pop
add
mov
or
mov
cmpsb
negb
fisttpll
ljmp
rcr
sub
pop
jne
andl
sbb
jecxz
dec
pop
test
xchg
lea
pusha
mov
or
mov
call
fwait
sbb
pop
sbb
and
out
xchg
jae
adc
nop
ljmp
arpl
xchg
adc
pop
inc
add
dec
in
out
pop
mov
mov
lds
sub
bound
inc
or
cmp
cltd
pop
xor
add
push
mov
jp
clc
mov
std
add
outsb
dec
inc
pop
ds
loope
or
dec
sub
cmp
sbb
pusha
mov
movsbw
lahf
lea
push
call
adc
pop
sub
int3
mov
mov
push
scas
push
lods
jno
and
leave
pop
inc
jae
fistpl
aas
adc
inc
and
int3
jnp
test
adc
insl
xchg
cltd
out
orl
leave
or
icebp
ficomps
push
sub
adc
ljmp
mov
jge
jmp
push
push
jb
xchg
fcompl
pop
add
dec
jl
mov
aam
sub
repnz
imul
sub
sub
loopne
push
push
lock
dec
fwait
test
rclb
cs
inc
dec
inc
sahf
sbb
test
xchg
insl
test
mov
or
test
bnd
mov
enter
shrb
mov
aad
jg
jnp
xchg
inc
mov
cli
das
enter
pop
mov
lret
cmp
cmc
push
stos
je
sub
cli
scas
mov
xchg
xchg
fnstcw
mov
mov
inc
xor
js
xor
or
mov
mov
mov
sub
add
push
das
pop
sub
sbb
push
loopne
jnp
std
stos
leave
or
cmc
mov
icebp
push
dec
xchg
mov
and
sbbb
pusha
sbb
testl
sub
das
mov
push
xlat
nop
xchg
inc
dec
mov
and
jae
mov
xchg
lcall
in
or
data16
adcb
leave
sbb
and
adc
aad
stos
jnp
cltd
sarb
jae
popw
xor
das
pop
sub
sbb
mov
jno
mov
jmp
push
jge
fisttpll
and
jecxz
mov
in
outsb
jg
scas
adc
add
pop
inc
mov
or
sub
fistl
dec
lds
pop
fwait
jno
sub
scas
in
push
sahf
je
movsb
and
aam
add
scas
xchg
or
xchg
jb
fwait
popf
jns
sti
xlat
lret
jo
and
outsl
mov
shl
outsl
and
xor
mov
int3
in
lock
pop
add
stos
rcrl
mov
fwait
push
shll
das
pop
imul
push
mov
leave
ljmp
bswap
mov
stc
cmp
jmp
cmp
call
dec
jmp
stos
hlt
xchg
repz
je
mov
int
or
push
xlat
jnp
pop
mov
jl
mov
adc
cltd
mov
lods
jo
mov
mov
lock
daa
cmpb
sub
pop
ret
fcmovb
or
sub
inc
mov
sbb
xchg
inc
push
jp
xchg
out
or
pop
sub
repz
push
ret
jg
in
push
add
sbb
adc
int
mov
push
stos
fimull
mov
sub
mov
dec
outsb
mov
sti
jmp
les
sbb
imulb
addr16
ja
mov
push
call
jmp
out
pop
sub
sahf
xor
pop
jmp
inc
icebp
int
inc
loope
xlat
xor
push
jl
push
movsb
cmc
jmp
push
lahf
jne
cmp
call
scas
in
stc
xchg
mov
sbb
or
adc
ss
pushf
mov
cmp
ljmp
xchg
mov
mov
sbb
lock
pop
test
subb
push
push
pop
cmpsb
mov
sub
lret
push
nop
fistpl
cltd
in
push
inc
imul
dec
xchg
shl
cmp
push
xlat
pop
xor
sub
lods
xlat
xchg
add
int3
cs
fs
pop
andb
sub
js
pop
pop
mov
adc
sarb
mov
pop
stos
or
jmp
fadds
mov
cmp
push
negb
outsb
push
mov
push
and
and
aam
iret
rorb
adc
neg
mov
sbb
push
mov
scas
shl
cwtl
push
fimull
cs
lock
stc
in
inc
push
and
jno
arpl
pop
iret
pusha
mov
push
or
mov
scas
mov
sub
mov
add
fs
jmp
fidivrl
xor
mov
ret
sti
and
ret
das
adc
mov
lret
push
movsl
ret
ficompl
mov
mov
test
lods
je
mov
loope
push
mov
add
add
jbe
jmp
add
xchg
or
outsl
jg
inc
add
cmp
mov
add
mov
aad
movsb
hlt
jge
fsincos
aam
and
cld
pushf
lea
jae
bt
pusha
push
add
pushf
mov
pushl
pushf
lea
jmp
stc
add
pushf
pushf
call
mov
push
xor
and
sbb
les
mov
pop
in
or
xchg
repz
lcall
sub
mov
aas
add
scas
test
xchg
adc
std
scas
push
xchg
mov
fisubl
bound
or
xor
pop
rcr
pop
bound
cmpb
enter
jle
repnz
cwtl
mov
in
cmp
mov
fcoms
xor
push
das
lahf
mov
xor
mov
outsl
mov
aaa
adc
add
hlt
stos
inc
cmp
mov
popf
add
add
mov
imul
jecxz
test
ss
movsl
jo
xor
mov
adc
lea
pop
sub
pop
gs
das
push
add
repz
aas
or
dec
imul
adc
ret
mov
cmpsl
loopne
sbb
sbb
cmp
mov
stos
xchg
lods
clc
jecxz
or
idivb
push
xor
jo
enter
and
ja
test
ds
aas
adc
out
jg
sub
pop
loop
pushf
cmp
dec
add
in
mov
jge
jmp
lea
pushf
jmp
aas
clc
xor
mov
fisttps
adc
push
out
mov
mov
jne
sub
sub
ret
idivl
imul
sbb
insb
push
pop
in
and
mov
cwtl
popf
nop
add
dec
jne
pop
popf
clc
mov
sahf
jb
ret
in
iret
xor
and
push
add
adc
cld
rcll
sbb
insb
popf
je
movsl
cmp
add
lcall
loopne
lods
xchg
fildl
jae
mov
inc
cltd
xor
add
movzbw
movsbl
mov
mov
pusha
pusha
push
lea
jmp
lea
je
push
lea
jmp
push
call
mov
sub
movsl
cmpsl
pushaw
jmp
push
dec
inc
mov
rcl
mov
aas
fwait
hlt
lahf
and
jl
out
sub
das
push
and
pop
lahf
or
fbld
dec
pop
fnstcw
or
ss
mov
sbb
testb
shlb
mov
repnz
pop
xor
push
push
aaa
scas
lock
mov
adc
mov
addr16
bound
test
mov
mov
sbb
outsl
aaa
pushf
movsl
push
inc
pop
movsl
cmp
idivl
cmp
mov
mov
adc
popa
push
xchg
cmp
jnp
outsl
dec
pop
cli
mov
mov
sbb
stos
adc
pushf
mulb
rcl
jp
cmp
push
mov
fcomps
je
std
punpcklwd
lahf
adc
pushf
neg
fistl
movsb
and
imul
adc
and
pcmpeqb
test
xor
mov
fsub
ja
or
iret
adc
jle
pop
pushf
inc
addb
or
xchg
in
pop
sbb
cli
icebp
pop
out
xor
cmp
test
dec
jnp
dec
pushf
mov
movsl
clc
stos
sub
mov
stos
mov
and
imul
and
pop
jae
ret
inc
and
push
adc
in
xor
mov
divl
pop
mov
sahf
adcb
pop
dec
mov
mov
je
hlt
xor
adc
aad
jg
sub
dec
mov
aad
xlat
xor
mov
jecxz
out
and
push
out
and
pushf
xsaves
stos
aaa
scas
or
xchg
stc
push
sub
and
add
xchg
lods
push
add
jns
add
or
lahf
lods
push
add
sub
add
or
cmpsl
lods
push
add
or
jo
or
scas
lods
push
add
sbb
add
or
mov
push
add
cmp
add
add
add
add
add
add
add
lods
push
add
or
nop
cmp
add
lods
push
add
sub
add
lods
push
add
jns
add
add
add
sub
es
jnp
sbb
scas
fidivs
adc
pop
fidivrs
dec
out
vpmovzxwq
cmp
out
push
cmp
and
stc
mov
in
sarl
orb
and
out
xchg
ss
jne
mov
inc
pusha
call
loop
dec
ss
sub
mov
pusha
enter
adc
arpl
pop
jno
jns
cmpsb
decl
mov
stos
dec
sbb
jp
cltd
xchg
pop
pop
pop
and
rcrl
jge
loope
dec
aas
push
and
inc
popa
push
ret
mov
and
in
stc
inc
mov
shll
pop
xchg
push
pop
cmc
mov
inc
das
jbe
ds
pop
fwait
pop
xchg
aam
sti
fs
fwait
cmp
mov
push
adc
add
insw
jno
and
inc
fwait
push
push
or
fdivl
les
arpl
sahf
push
mov
dec
push
add
adc
fiadds
push
jbe
mov
daa
jl
sub
jbe
adc
sbb
jl
ljmp
call
movsl
inc
insb
shrd
bswap
bswap
mov
cmc
and
cmp
bt
add
test
jmp
pushf
pushf
lea
je
not
pusha
jmp
in
lea
pop
sub
gs
mov
cmp
push
jecxz
jg
inc
add
xchg
es
sub
add
ret
rcrl
or
or
adc
and
movsb
movsb
out
jecxz
push
jge
mov
in
rorl
jge
inc
ret
aad
js
lahf
adc
mov
push
cmp
inc
test
adc
std
inc
lret
adc
sub
cmp
pushf
cmp
push
stos
loope
scas
adc
dec
pusha
imul
cmp
jno
jg
insl
sbb
or
andl
add
mov
add
movsb
push
add
movb
pusha
movb
inc
lea
pushf
pushl
call
stc
movsb
scas
cmp
dec
and
push
xchg
fdivrs
push
jg
das
repnz
mov
movb
dec
xor
loope
cmp
subl
movsl
jo
test
push
push
bound
jp
cmc
lds
jecxz
pop
div
inc
and
ret
sub
cmp
aad
stos
jmp
cwtl
xchg
ss
mov
outsl
leave
and
cld
pop
fwait
in
jmp
cld
clc
cmp
out
xchg
or
jno
shrb
fstl
jg
cs
mov
inc
mov
sub
cmp
outsl
cmp
arpl
sbb
stos
shlb
push
shrl
cmp
scas
sarb
jmp
mov
iret
cmp
les
in
sbb
imul
mov
loopne
inc
dec
pop
lods
push
jne
push
js
leave
subb
imul
movsl
add
stos
xor
iret
pop
cmp
xchg
adc
mov
sbb
mov
sti
mov
inc
jle
inc
pop
repz
gs
lea
inc
in
add
lret
cld
and
pop
ficoml
cmp
xchg
jns
or
mov
imul
jno
movsl
movsl
cmc
in
xchg
insb
loope
xchg
movsl
sahf
push
mov
aaa
push
das
mov
xchg
leave
mov
loop
fisubrl
scas
xchg
dec
rolb
dec
xchg
pop
inc
sub
ljmp
sub
cli
xor
outsb
sti
sub
cli
mov
pop
xchg
pop
into
hlt
mov
cmp
inc
mov
mov
sbb
xorb
mov
pusha
pop
das
dec
adc
rcl
sub
shl
push
jp
int3
dec
nop
adc
imul
in
inc
adc
cmpsl
sub
ret
cmpsl
push
shrb
mov
mov
xor
je
loop
pop
xor
inc
pop
arpl
insl
sub
mov
inc
jp
pop
sbb
mov
ja
cmpl
xor
je
adc
sub
xor
jecxz
out
mov
cld
jg
dec
imul
sbb
mov
fdivr
aam
sub
les
add
je
outsl
arpl
gs
outsb
outsw
inc
add
inc
and
rorb
xor
add
cmp
je
inc
ret
mov
movzbw
movzbw
mov
pop
pusha
mov
pusha
pushf
pushl
ret
pusha
lea
je
not
setb
call
mov
sub
adc
test
enter
mov
jnp
sbb
popa
mov
inc
mov
and
pusha
loope
outsb
dec
pop
xor
cmpsb
daa
fucomip
inc
add
clc
mov
and
xchg
sbb
jns
xchg
lds
rcll
push
into
adc
sub
stc
push
mov
add
jecxz
mov
in
sub
xchg
mov
ficomps
and
daa
pop
adc
and
pop
or
jbe
cmovs
into
ljmp
loop
and
pusha
push
mov
jns
pop
pop
push
cmpsl
xor
pop
rclb
jg
mov
ret
bnd
sub
insb
lret
jl
mov
test
jb
push
mov
or
ss
and
pop
push
mov
xchg
pop
xchg
mov
outsl
jmp
je
or
into
leave
ret
repz
ret
sub
inc
rorb
mov
mov
add
xchg
aad
push
sub
outsb
scas
mov
jbe
jecxz
sti
insl
inc
jne
or
pop
es
jge
gs
xchg
pop
pop
adc
xlat
or
sub
lds
push
movb
sub
icebp
add
ds
jns
test
in
fwait
sahf
and
sbb
cmp
lock
movsb
popa
sub
ret
lea
add
js
sbb
movsb
pop
dec
jl
mov
cld
testb
sub
or
sbb
stc
or
add
adc
leave
enter
pop
or
test
insl
dec
inc
orb
stc
and
outsl
mov
daa
jae
adc
ljmp
jl
loope
sub
cmp
in
pop
fidivrs
jno
pop
sub
pop
pushw
push
add
mov
notb
jp
cmp
out
push
add
lods
pop
push
mov
push
pop
inc
pop
insl
std
cmp
fistl
pop
nop
mov
mov
sub
shlb
sbbb
inc
je
mov
push
cmp
leave
and
icebp
lret
testl
push
jnp
aam
jle
call
aaa
push
test
pop
sub
jbe
sti
pop
loope
aas
stos
scas
icebp
sbb
inc
cli
iret
mov
lcall
cmc
ret
push
mov
cld
imulb
push
mov
pop
push
xlat
leave
aad
rolb
xor
xchg
pop
inc
jge
cmp
mov
nop
scas
push
lds
inc
xchg
pop
mov
ja
mov
cld
cmpsl
pop
ja
ds
arpl
xchg
js
sbb
add
xchg
jmp
xor
pop
xchg
mov
testb
add
and
mov
push
imul
js
ds
sub
aas
xlat
icebp
inc
cld
jae
jb
lret
mov
clc
xchg
dec
mov
decl
mov
or
and
adc
xor
sbb
out
push
push
jmp
fldl
xchg
sub
dec
pop
fwait
pushf
xor
cld
push
test
sbb
loopne
or
xor
loopne
inc
aad
add
fistpll
or
out
mov
dec
jo
xchg
jle
ja
mov
or
cwtl
mov
sub
in
stc
aas
inc
mov
cmp
call
cmpsl
subb
and
pop
sub
xlat
push
pop
test
fadds
sbb
and
inc
test
pop
iret
int
repnz
adc
xor
les
nop
js
or
fcmovne
shrb
dec
pop
inc
jp
ret
pushf
out
xchg
mov
mov
mov
xchg
inc
push
js
and
and
xchg
jmp
sub
xchg
and
mov
mov
add
sub
add
inc
dec
pop
mull
inc
sbb
cmpb
gs
fnstenv
pushf
inc
movsb
push
cmp
xor
or
dec
in
sbb
pop
cmp
or
daa
xor
and
adc
xlat
into
rorb
pop
and
test
outsl
je
jmp
mov
mov
out
stc
mov
lock
pop
testb
mov
stos
mov
jns
mov
andb
and
add
add
push
roll
add
testl
jb
mov
scas
adc
fsts
repnz
jb
jmp
mov
movsl
shll
fnstsw
adc
fldenv
push
jns
push
adc
pushf
mov
pop
es
scas
adc
fldenv
xor
jmp
mov
fincstp
call
imul
jb
mov
data16
adc
shr
fldcw
addr16
cmpsb
daa
jb
jb
sub
xor
mov
jb
cli
aam
lahf
movsb
adc
fnstenv
xchg
adc
fcos
lcall
jmp
dec
jb
cmc
aad
inc
std
unpcklps
mov
flds
or
mov
pop
popa
pusha
scas
adc
fldenv
scas
adc
mov
jl
mov
jb
xor
jno
fdivl
por
vmwrite
test
adc
flds
loopne
pop
dec
jp
jmp
arpl
mov
lods
adc
fldenv
push
and
jb
push
int
shlb
jmp
sub
scas
adc
fldenv
xor
imul
cmp
jmp
jb
ficoms
or
jb
es
pop
xorb
jmp
sti
jb
add
adc
cmpsb
imul
test
imul
mov
jmp
sbb
loope
cwtl
cmpb
adc
mov
in
inc
aad
adc
mov
jb
call
adc
fldcw
cmp
xchg
mov
cmp
pop
jb
jp
popa
lock
jb
sbb
adc
fldenv
dec
adc
out
movsb
pop
push
or
mov
push
mov
push
out
jmp
iret
jb
movsb
xor
adc
fnstenv
xor
scas
jb
fwait
pop
js
xchg
adc
push
push
jb
adc
scas
adc
fnstenv
xchg
adc
fcos
decl
test
add
cmc
or
xor
aad
push
mov
cmc
cmc
bsf
shl
mov
movsbw
shr
sub
bsr
jmp
push
lea
jne
push
movzbl
lea
movb
setno
jmp
mov
stos
add
dec
outsl
add
pop
sbb
xchg
jo
ja
mov
xchg
mov
and
dec
loop
stos
clc
lcall
mov
cld
shlb
rcl
and
in
rol
pop
cmpsb
mov
jecxz
push
xchg
ret
mov
int3
pop
dec
xor
adc
dec
in
mov
orl
dec
js
inc
and
inc
test
mov
and
sub
lea
push
not
lods
add
stc
neg
inc
sub
ror
ror
rcr
pushf
jmp
lea
jne
jmp
push
jae
pop
sub
pop
push
xchg
fsubrs
or
shlb
pop
or
push
notl
sub
sbb
cmp
dec
repz
xchg
or
inc
add
cld
nop
test
dec
dec
cli
test
fwait
add
out
fwait
dec
in
and
cmp
sbb
in
xor
adc
call
sub
fwait
adc
shrb
fmull
incb
sub
out
fstl
into
jae
or
xor
inc
lcall
test
jne
and
ret
mov
loopne
xchg
jle
push
ss
repz
and
lea
inc
testb
stc
lods
xorl
mov
insb
rcll
lret
and
aad
and
pop
add
loope
mov
inc
in
les
push
jle
mov
out
jno
dec
jp
mov
std
out
pop
and
pop
sub
popa
or
jne
sbb
repnz
loope
xorl
fisttpl
mov
hlt
mov
lcall
cmp
shll
testl
fld
jg
shlb
mov
je
pop
pop
in
inc
rcll
insb
fdivrs
mov
shlb
jl
mov
jecxz
mov
sub
jnp
test
je
add
adc
btc
sar
rcr
mov
jmp
pop
and
pop
sub
and
mov
add
movsl
icebp
xor
out
jge
or
and
mov
ret
mov
dec
add
adc
dec
inc
xor
cmp
int3
cmp
push
fs
daa
pop
dec
push
inc
sub
mov
add
pusha
jne
jbe
pop
ret
jg
fwait
jo
sbbl
cltd
in
pop
dec
mov
push
icebp
sbb
sub
and
cmp
pop
pop
sub
add
ja
jbe
sarb
fwait
mov
popf
scas
cs
jnp
ds
jmp
sbb
popa
clc
pop
jns
hlt
cmp
out
add
add
movsb
push
cs
push
pop
jmp
xchg
loope
sub
mov
push
fxch
movsb
ljmp
xchg
push
test
xorb
fcoms
mov
add
add
insl
fwait
rcrb
addr16
mov
cmpsl
pop
test
mov
stc
ljmp
xchg
repz
mov
xchg
sub
sarb
insb
sub
xchg
psubusb
pop
pop
sub
jo
pop
frstor
test
cmp
add
cmp
push
lods
mov
sub
adc
addr16
scas
pop
lahf
aad
lock
push
aas
mov
outsl
mov
mov
pop
push
lods
and
inc
xor
shlb
xor
out
sub
enter
sti
pop
push
mov
mov
icebp
std
jg
insb
mov
pop
sub
fisubrs
jmp
out
mov
cltd
add
out
fdivp
fldcw
ds
dec
adc
pop
jle
scas
sbb
inc
add
jb
je
out
lea
add
jno
xchg
adc
inc
push
out
mov
and
or
or
cmp
sahf
cmc
repz
xchg
adc
sub
cmp
and
ret
or
call
outsb
loope
cmc
les
sub
mov
fpatan
xlat
mov
mov
xchg
int
dec
push
mov
inc
data16
cmpsb
adc
xchg
sub
adc
xor
ret
pop
push
movsb
mov
jbe
mov
or
push
mov
mov
ljmp
shrb
enter
dec
or
scas
jo
mov
push
fnstsw
mov
sub
or
loopne
in
les
int
pop
shll
ds
pushf
data16
and
sti
push
arpl
cmp
nop
into
sbb
jns
pop
cmpsl
mov
mov
cmp
mov
cld
imul
movsl
mov
mov
out
lcall
xor
mov
fcoml
jmp
leave
add
sbb
ret
or
out
adc
cli
hlt
jl
pop
fsubs
mov
call
cmpsb
loope
dec
imul
mov
mov
xchg
fwait
mov
shlb
testl
dec
inc
test
out
lret
arpl
adc
fwait
cwtl
iret
inc
loopne
outsb
dec
dec
and
pushf
add
lcall
rol
mov
scas
mov
out
sti
inc
dec
dec
xorb
je
cmp
roll
jg
push
sub
pop
sub
sub
out
in
push
pop
and
iret
pop
push
adc
movsb
or
and
and
addb
inc
mov
into
mov
xor
aad
adc
nop
sbbl
mov
mov
mov
fwait
pop
out
bound
xlat
cmpsl
cs
and
pop
add
mov
cmp
rorb
test
js
loop
jns
pop
push
mov
call
mov
jbe
cmpsl
jp
mov
insb
sub
jmp
fldcw
push
pop
sub
xchg
add
pusha
push
inc
pop
push
out
or
jo
ret
daa
les
inc
jns
jns
mov
pop
sbb
inc
push
cmp
jp
adc
out
hlt
cld
int3
and
rolb
cmp
arpl
adc
mov
xchg
push
mov
daa
lods
inc
fistpll
push
addr16
and
or
or
add
mov
inc
js
js
dec
jo
or
je
es
jge
fistpll
or
outsl
jno
jnp
lret
aam
xchg
jno
das
ss
push
mov
imul
mov
mov
sbb
movsl
call
mov
mov
pop
imul
ja
outsb
xor
dec
loopne
pop
inc
inc
out
cmpsl
fs
and
aad
outsl
and
shll
pop
movsl
mov
std
mov
push
and
std
arpl
xchg
jae
sub
fisubrl
xchg
cmp
or
adc
adc
cltd
cmp
cmp
sub
xor
sbb
push
jnp
jecxz
jecxz
fldt
hlt
mov
aam
rolb
jl
jne
jns
jb
outsb
add
pop
mov
clc
jecxz,pn
and
out
ljmp
jp
mov
sbb
xor
lea
pop
call
dec
loope
or
jbe
or
cmp
xorb
shl
fstpt
mov
mov
rolb
clc
xlat
ret
sub
aad
pop
mov
sarb
or
pop
xor
jns
loop
push
inc
dec
jno
leave
xor
jge
mov
dec
xchg
xchg
xchg
stos
outsb
add
lahf
pop
jg,pt
inc
loop
push
daa
xor
push
xor
dec
adc
fsubrp
jno
test
add
sub
vpacksswb
jb
push
xchg
into
jge
cmpsl
push
shr
mov
imul
inc
js
mov
rcll
pusha
mov
test
aaa
xor
mov
popf
pusha
sub
jge
or
shll
addr16
les
or
popf
mov
and
call
sbb
sub
orb
push
mov
mov
sub
mov
cmp
leave
test
xchg
int3
ljmp
enter
push
mov
pop
dec
xchg
cmp
and
adc
movsb
lea
xor
gs
sub
and
gs
push
and
inc
push
in
dec
mov
add
add
jb
pop
loope
scas
pop
add
in
add
jne
xchg
cmp
pop
mov
or
and
xchg
shlb
sahf
inc
je
fisubs
out
mov
notb
fsubrs
fstps
insl
pusha
loop
fldenv
cmp
punpckhwd
cmovne
pop
sbbl
adc
mov
cmp
icebp
xor
xlat
stos
cmpl
push
push
pop
add
add
xchg
cld
mov
mov
movsl
lock
mov
test
mov
mov
popa
in
outsb
nop
xor
xor
inc
out
sbb
movsb
mov
js
mov
xor
pop
iret
dec
pop
or
fsubrl
pop
shrb
sarb
mov
dec
xor
xor
dec
outsl
arpl
inc
jb
add
mov
or
sub
xor
sbb
repnz
xchg
xor
enter
cmp
fistps
fwait
mov
jbe
dec
or
sbb
rcrb
mov
add
addl
mov
mov
and
jno
sbb
or
jmp
lret
gs
xchg
cmp
dec
stos
push
cwtl
sbb
pop
inc
sub
roll
mov
pop
pop
inc
pop
fwait
sub
mov
fidivrs
lea
adc
dec
sarb
mov
xor
dec
pop
loope
lahf
inc
sub
insb
sub
sub
inc
add
mov
mov
sub
cmp
or
enter
pop
fdiv
and
cmpsb
aam
lahf
arpl
xor
sub
xlat
popl
inc
jge
mov
add
lcall
mov
dec
and
add
xor
sbb
inc
mov
jecxz
xchg
and
or
push
aaa
imul
maxps
popa
and
movsb
inc
or
addr16
fldenv
outsl
cmp
jne
add
xor
push
jbe
dec
mov
movsl
ret
cmpsl
es
popa
lods
imul
test
xchg
fisttpll
clc
popa
clc
mov
stos
xchg
les
out
add
cmp
and
and
aas
imul
pop
sub
inc
mov
call
adc
test
xchg
popa
idivl
jl
cwtl
mov
xchg
cli
inc
imul
sub
push
imul
add
mov
mov
outsb
in
jle
or
cs
testb
pop
je
jne
das
jge
xchg
jge
repnz
gs
xchg
pop
sub
mov
nop
jl
mov
mov
xchg
pop
xchg
sahf
into
mul
call
aas
and
adcl
add
aaa
sub
jbe
or
inc
aas
cld
add
push
mov
std
adc
xor
test
xor
std
scas
test
clc
in
enter
mov
addb
mov
mov
pop
or
add
or
cwtl
repz
pop
std
sub
mov
outsl
xor
std
nop
mov
pushf
das
xchg
popa
test
xchg
jo
test
les
mov
cmp
pop
cmpsb
mov
lcall
insb
sub
outsl
mov
decl
and
jae
pushf
cmp
mov
lea
ja
sete
pushf
setge
inc
lea
push
inc
inc
add
and
xchg
rcr
sub
ror
pushf
mov
rol
neg
and
pusha
mov
add
clc
stc
push
sar
btr
clc
xor
mov
push
pushl
pushf
sub
jmp
pushl
popl
pushf
pushl
ret
movl
pushf
push
push
lea
jmp
pusha
lea
jae
pusha
cmp
cmp
push
lea
ja
call
mov
imul
test
xor
js
inc
xchg
hlt
mov
loopne
pushf
dec
jle
pop
jne
cli
pop
das
mov
jne
push
or
icebp
mov
mov
aam
push
inc
loop
inc
push
fmul
push
hlt
cmp
daa
pusha
jnp
cmpl
ficoms
sbb
pop
cmc
push
sub
int
add
and
test
pop
cs
mov
pop
jge
xchg
loop
pop
flds
out
xor
imul
add
sbb
adc
pop
xor
push
fs
mov
sub
inc
fnstsw
adcl
loopne
mov
mov
mov
stos
icebp
ror
call
cs
xlat
mov
out
cmpsb
push
pop
sbb
pop
fs
ss
testl
sbb
stc
leave
xchg
cmc
sub
int
jmp
mov
add
sbb
mov
pop
sub
inc
xchg
pop
lea
mov
pop
fstpt
pop
pop
lret
out
adc
xor
pop
dec
gs
mov
scas
aam
out
xchg
xchg
mov
mov
mov
stos
push
push
loopne
loopne
or
loop
mov
sti
and
lds
xor
inc
jl
int3
mov
cmp
dec
fsubp
inc
int
xlat
testb
mov
movb
imul
adc
sub
int
mov
pop
sarl
insb
fnsave
pop
xchg
in
lret
enter
aad
dec
scas
and
cmp
loopne
pushf
jno
test
rorl
sbb
push
xchg
cmp
outsb
ficoml
ljmp
pop
rcr
enter
jo
mov
push
xor
xor
jp
popf
add
add
and
out
jge
sub
je
mov
push
mov
test
sbb
jle
xlat
mov
std
divb
mov
shrb
jb
add
daa
dec
add
and
push
mov
pushl
ret
movb
call
in
imul
pop
sub
test
sub
jb
inc
fucomip
pop
push
mov
clc
add
or
and
dec
fnsetpm(287
xchg
pop
in
dec
aaa
es
xor
cwtl
into
movsl
cmp
adc
lret
mov
ror
inc
lds
lods
inc
les
add
fnstsw
xchg
xlat
sub
gs
add
dec
pop
addr16
pop
pop
xor
add
push
mov
adc
sub
aam
mov
not
call
jmp
xchg
bound
pop
inc
push
add
cmc
fld
sub
insb
addb
sub
and
push
xor
xor
sbbl
sub
mov
sarb
imull
out
jmp
hlt
cld
ret
pop
mov
test
mov
clc
loop
jno
mov
movsb
scas
xchg
subl
pop
aas
xchg
imul
je
add
push
out
nop
adc
xor
imul
enter
xchg
cwtl
xchg
cmpsl
jge
jns,pn
fldl
lods
xor
rcpps
pop
xchg
mov
das
insl
mov
and
shr
sahf
orl
loop
pavgb
bound
add
xor
pop
pop
and
icebp
push
sbb
inc
ret
das
pop
ja
mov
pop
fwait
and
repnz
cmpsl
lcall
clc
jbe
add
push
xor
xchg
or
add
xor
xchg
mov
test
adc
sub
xor
mov
movsl
add
jae
lock
fcoml
inc
or
xchg
pushf
into
add
mov
bound
mov
jb
out
sti
es
fdivrs
and
xchg
add
mov
adc
xor
int
mov
pop
dec
jge
test
fistps
aad
and
or
sub
mov
jb
out
dec
and
in
jo
cs
dec
xchg
mov
push
in
push
pop
or
push
test
adc
sub
pop
and
adc
cmp
jp
adc
notb
push
cmc
dec
add
and
dec
or
lret
aam
or
mov
fidivl
xor
fistpll
pop
cmc
adc
jl
jmp
scas
lret
les
rcrb
lea
jo
mov
xor
and
ret
inc
mov
lea
je
pusha
stc
clc
clc
cmp
pushl
lea
jne
call
insl
inc
imul
and
sbb
jae
xchg
sahf
orl
cwtl
in
decb
cld
pop
mov
add
sbb
jle
cmpsb
mov
pop
mov
xorb
or
push
test
cmp
or
inc
jno
mov
mov
or
inc
push
popf
das
adc
call
js
mull
adc
dec
push
pop
div
icebp
int
xchg
lds
sub
push
nop
inc
fs
pop
sti
or
repnz
int
cmp
call
and
iret
jno
pop
test
jp
xchg
adc
jecxz
les
out
insl
cmp
cli
pushf
mov
sub
pusha
xor
shld
mov
add
sar
mov
bt
mov
bt
cmp
clc
xor
push
stc
jmp
jmp
jmp
push
or
pop
sub
cmp
aam
cmp
movsb
pop
mov
adc
jno
pop
xchg
lret
std
cmp
fsubp
pop
cs
mov
mov
mov
pop
bound
sbb
jnp
outsb
dec
adc
push
mov
mov
push
stc
ficomps
movsb
lds
inc
imul
sub
dec
test
cmp
ss
adc
cwtl
js
fwait
fs
fldz
dec
mov
arpl
push
lods
inc
pop
adc
mov
mov
insl
popa
or
in
jno
mov
sti
inc
pop
pop
adc
pop
stos
sbb
mov
jp
and
adc
cltd
fdivr
mov
sub
rcrl
pop
sbb
int3
mov
mov
fwait
or
mov
push
fisubl
je
sbb
stos
cwtl
pushf
addr16
mov
add
movsl
mov
xchg
mov
xchg
sbb
pop
push
dec
push
push
lods
jle
lods
fistps
nop
ficompl
mov
xchg
enter
out
mov
sbbb
xor
lret
repnz
adc
sahf
inc
jp
testb
fisubrl
pop
mov
idiv
jl
mov
stc
sbb
mov
cwtl
pushf
or
mov
push
clc
adc
adc
mov
out
push
pop
sbb
outsb
cld
sbb
sbb
mov
stc
mov
out
fists
adc
xchg
fiaddl
ficoms
loop
ljmp
inc
cwtl
fwait
mov
xchg
mov
push
adc
jecxz
push
or
adc
enter
outsb
sbb
pop
xchg
adc
xchg
adc
sbb
dec
xchg
into
cmp
xor
stos
lds
sub
out
mov
sbbb
sbb
sbb
sbb
sahf
mov
mov
int3
push
pushf
adc
cwtl
lahf
outsb
pop
mov
int
sbb
xchg
add
addb
sbb
mov
mov
inc
xchg
sarl
dec
xchg
jns
mov
jp
mov
jp
lods
pop
sbb
jmp
test
mov
mov
sti
xchg
out
mov
adc
and
pop
add
cwtl
mov
xchg
xchg
lods
ss
into
dec
int3
loope
sbb
mov
loop
int3
add
pop
mov
and
test
stc
and
lock
fdivrs
mov
push
ljmp
xchg
test
sbb
pop
bound
insl
sbb
pop
std
xor
jnp
mov
mov
mov
fcoml
out
xchg
or
mov
xchg
cmp
outsb
sti
out
push
adcb
or
subb
je
pushf
icebp
pop
cli
cltd
dec
adc
cwtl
mov
sbb
jns
cli
cltd
mov
sbb
sti
mov
into
or
and
nop
rorb
push
out
adcb
nop
addr16
sahf
and
repnz
nop
mov
pop
adc
pushl
jl
ja
test
pop
js
ror
pop
nop
aad
pop
testb
lock
mov
nop
lods
jno
jge
or
js
push
repnz
cmc
nop
shl
lret
fmuls
nop
aad
mov
push
mov
test
push
xchg
bound
xchg
mov
jle
adc
lock
fdivrl
jle
test
mov
orb
nop
jp
mov
testb
xchg
icebp
test
push
xchg
pop
dec
dec
jge
push
ja
jle
mov
hlt
in
enter
fimull
leave
jbe
sbb
int
jge
pop
push
push
push
rcll
sbb
cmc
jno
pop
add
jns
js
push
push
outsb
in
jno
xorb
push
push
or
or
jno
xchg
out
push
arpl
dec
inc
test
leave
aad
push
push
nop
je
fwait
sahf
insb
nop
sbb
or
addl
pop
sbb
pop
jl
sahf
cmp
sti
jle
clc
dec
jp
push
sbb
cmpsl
scas
push
repnz
mov
mov
adc
xchg
lods
mov
insb
nop
or
fsubp
jb
stc
test
push
pop
xchg
fwait
and
iret
cltd
sbb
imul
fcoms
in
push
and
loope
and
lret
out
sti
and
imul
shlb
cmpsl
imul
rcrl
sbb
repnz
call
and
rolb
icebp
mov
adcl
stc
push
push
sti
rclb
movsb
or
leave
nop
mov
jmp
cmc
sbb
repz
mov
sub
clc
pop
and
test
jae
stc
cwtl
sub
lret
xorb
pop
inc
insl
mov
xor
sbb
adc
enter
adc
mov
or
pop
push
jle
leave
mov
imul
jmp
es
sbb
enter
jg
xor
mov
mov
xchg
test
out
mov
call
data16
vpmulhw
and
movsl
fists
ficomps
dec
mov
clc
lret
sti
sahf
pop
nop
stos
leave
lds
aam
mov
push
sti
nop
fimull
mov
shlb
aam
xor
jecxz
sti
test
leave
shll
psubq
out
push
fstps
jp
xor
mov
jl
dec
sti
adc
xchg
adc
in
xchg
adc
dec
mov
sbb
call
add
and
or
push
pop
inc
nop
push
mov
xchg
nop
scas
pop
pop
mov
scas
pop
repz
xchg
push
mov
pop
push
push
xor
push
nop
pushl
nop
aas
jae
nop
fs
nop
dec
jae
lret
nop
shll
fistl
xor
rcr
mov
in
jae
sahf
or
push
mov
inc
ret
pop
xlat
jb
lods
sub
sub
jbe
jl
push
test
dec
cltd
sub
adcb
xchg
jns
aad
nop
and
mov
jns
mov
insl
sbb
sub
add
jge
cmpsl
lods
inc
shlb
add
mov
push
in
test
push
jmp
out
sarl
icebp
mov
push
fcoms
mov
add
ja
add
mov
sub
or
mov
enter
mov
push
jecxz
jmp
push
mov
cmc
mov
push
or
clc
add
dec
mov
and
mov
pusha
les
enter
inc
adcl
add
testb
sub
outsb
rcrl
aam
jno
sbb
push
mov
inc
sbb
and
dec
loopne
push
dec
xchg
sbb
jns
sahf
add
adc
pop
add
push
xchg
fdivl
cwtl
jo
std
fucomp
out
mov
lock
mov
mov
adc
or
fistl
jg
push
adcl
sub
call
sub
push
cmpb
popf
xchg
ficoms
xor
xchg
out
mov
dec
add
jl
hlt
mov
stos
mov
xchg
popa
xchg
int3
push
out
ss
jp
ja
xchg
in
push
ja
outsb
imul
sbb
jns
mov
xchg
stos
dec
clc
or
andl
call
mov
hlt
cmp
loop
loop
push
mov
imull
bound
lock
lea
test
vunpckhps
mov
lea
push
adc
jbe
pop
call
mov
movsl
loopne
adc
aad
lret
cmp
push
push
mov
iret
mov
adc
xor
pop
ret
mov
adc
lea
pop
test
pusha
ss
mov
nop
ja
mov
mov
jne
mov
sahf
xchg
dec
test
jbe
aad
adc
test
les
mov
add
jecxz
lods
arpl
mov
mov
nop
and
adc
icebp
add
frstor
icebp
dec
xchg
push
cwtl
or
jmp
stos
outsb
dec
jp
idivb
mov
stos
imull
adc
push
cli
cmp
nop
je
rolb
int3
jno
fnsave
je
movsl
dec
lret
xchg
cmp
gs
out
in
stc
mov
mov
jg
xlat
callw
mov
jle
mov
int
loop
jbe
iret
movsb
cli
lods
or
mov
aam
outsl
jne
gs
xchg
push
fdivp
xchg
out
and
mov
adc
ja
xchg
js
push
cmc
push
xchg
mov
imul
dec
icebp
loopne
notl
out
mov
xlat
ss
loopne
jge
dec
push
add
in
jmp
and
adc
loopne
jp
jb
in
xorl
shll
jg
fmuls
jmp
inc
mov
pop
out
nop
push
in
xchg
mov
jl
push
loope
clc
push
nop
push
int
push
popa
xchg
or
jo
push
imul
popa
hlt
or
jae
jns
aad
mov
adcb
idiv
loopne
push
movsl
rcl
enter
call
pop
jl
aam
cmc
xchg
into
data16
mov
lea
movsb
mov
hlt
int
or
push
adc
repnz
loop
hlt
cwtl
xlat
adc
jno
mov
clc
jno
in
jle
push
dec
adc
xchg
add
and
fnstcw
divb
mov
dec
test
shrl
cltd
lds
xchg
jle
movsb
in
clc
push
xchg
leave
aad
lret
add
sbbb
mov
inc
cmpsl
loop
ss
in
push
int3
sbb
mov
call
jbe
mov
addb
rolb
push
mov
xchg
push
ds
aas
mov
mulb
shr
mov
in
idivl
clc
negb
insb
icebp
jmp
fs
loopne
lahf
enter
test
cmpsl
jns
push
fsubr
cmc
xchg
xchg
pop
jge
dec
out
mov
iret
mov
out
je
call
stos
jmp
mov
mov
int3
or
xchg
inc
jmp
add
call
and
adc
aam
mov
iret
sub
loopne
mov
rcll
aad
fcomip
mov
ret
push
test
jp
imul
inc
cmpsb
leave
mov
dec
nop
cmp
loope
cmp
dec
icebp
push
jnp
stc
test
int
push
addb
sbb
jno
push
xchg
lods
or
call
jge
shrb
jecxz
loopne
sbb
les
adc
roll
xchg
lea
and
icebp
neg
out
hlt
lretw
repnz
jbe
mov
popf
clc
push
shr
data16
mov
jnp
call
jnp
add
int3
pop
adc
dec
or
int
jg
jne
out
imul
rcrl
jae
cmc
jo
pushf
in
cmpsb
or
jp
in
cwtl
add
mov
pusha
cmp
mov
popl
push
jmp
mov
call
lcall
xchg
mov
xor
xchg
je
shll
in
cltd
in
lret
idiv
in
push
jl
imul
inc
mov
das
adc
mov
lods
push
push
nop
div
fimuls
or
xchg
lret
ret
jae
cmpl
loop
xrelease
adc
hlt
loopne
rcrl
xor
jno
int
add
popl
cmpsl
add
mov
mov
cmpsb
int
xor
adc
loope
mov
sbb
mov
loop
jbe
and
cwtl
xor
loopne
out
sub
mov
arpl
dec
shlb
loop
mov
in
add
in
js
std
in
iret
and
aad
testl
push
mov
cwtl
rcr
jle
test
fnsave
jl
rolb
fptan
enter
mov
cmpl
push
test
xorb
movsb
stos
ror
jo
lea
xchg
gs
sarb
lods
xor
mov
fmul
enter
mov
in
movsb
rorb
dec
in
pop
push
in
xor
loopne
mov
jl
mov
pushf
stc
xrelease
inc
fidivs
push
sbb
vphsubwd
and
je
test
out
xor
and
or
and
out
orl
push
out
js
mov
cld
fsubrs
hlt
jp
jae
jg
rcll
pop
cmc
mov
inc
call
cmp
pop
xchg
adc
add
adc
ret
ja
test
fisttps
divl
xchg
loop
xor
push
call
idivb
xchg
repz
imul
test
push
xchg
xor
jne
or
xchg
dec
hlt
mov
fists
hlt
scas
iret
mov
ss
mov
rcll
je
dec
inc
sbbb
lahf
shll
enter
cmp
jl
inc
inc
adc
clc
dec
mulb
js
mov
sub
popl
testb
popf
jno
xchg
shll
push
nop
or
lahf
js
mov
mov
or
syscall
fcoml
loope
mov
mov
enter
addb
fcmove
push
jle
mov
cwtl
jge
xchg
xchg
sbb
fldcw
lea
pusha
adc
xor
rcll
out
ja
cmc
xor
std
adc
hlt
lds
xchg
jno
hlt
push
jecxz
push
ds
xchg
je
push
mov
out
js
int3
or
dec
test
ret
cmc
mov
in
cld
mov
xor
jge
mov
add
rsm
jns
nop
movsl
rclb
fmuls
loopne
mov
icebp
rolb
icebp
dec
out
js
jp
shrl
ljmp
sarb
sub
mov
jno
shll
test
stos
push
repz
lock
xchg
test
push
and
clc
negb
sahf
test
int3
xchg
push
testl
xchg
sbb
loope
xlat
jbe
stos
dec
mov
outsb
mov
inc
fdivrs
in
mov
ficoms
push
adc
loop
repnz
jmp
mov
push
loop
xchg
xchg
mov
fisttps
push
xchg
leave
mov
leave
sbb
mov
mov
cmp
cs
test
push
jecxz
nop
dec
mov
jae
ljmp
sti
mov
inc
nop
fdivrs
aad
xchg
and
test
loop
orb
pusha
mov
xorl
rorl
xor
jnp
movsb
mov
test
lods
mov
push
stos
xor
fdivs
pop
out
jle
sbb
mov
xchg
and
loopne
aad
and
cltd
fimuls
mov
mov
test
roll
xchg
out
in
jmp
out
loope
mov
leave
push
fucom
stos
movsb
or
cs
add
or
jnp
repnz
pusha
loop
out
filds
push
cmp
arpl
xor
movsl
jno
xchg
xchg
add
xchg
out
hlt
xchg
hlt
add
pop
mov
lds
inc
lods
dec
in
xchg
push
loopne
shl
add
lock
out
jmp
cld
jg
fbstp
lcall
cmpsb
aam
xchg
mov
rorb
mov
aas
xchg
dec
test
mov
inc
mov
mov
ljmp
fiadds
jp
je
jle
scas
outsl
sarl
xchg
lods
cli
jge
shlb
push
rcll
mov
js
in
mov
jge
shr
jo
xchg
push
arpl
bound
repz
in
lods
and
pusha
mov
fucomi
mov
mov
mov
iret
aad
das
push
movsb
icebp
mov
imul
jmp
xchg
jmp
punpckhdq
adc
mov
sub
xchg
clc
call
dec
in
inc
repz
scas
andl
mov
fwait
aad
jb
xor
xchg
xchg
adc
outsb
add
neg
mov
cmp
inc
pop
sti
add
pop
mov
mov
es
mov
in
xor
neg
lock
mov
xchg
popa
sbbl
fcmovnbe
jmp
dec
enter
int3
icebp
sti
sbb
or
scas
enter
cmpl
mov
mov
add
enter
xchg
cwtl
test
das
add
test
aad
mov
cmp
test
jle
sbb
inc
repz
movsl
icebp
fdivp
dec
enter
sahf
mov
dec
xchg
leave
lods
pop
out
int3
push
xchg
clc
addl
sti
je
ss
test
clc
loop
test
stos
inc
pop
js
add
sahf
test
ffree
orb
scas
imul
in
cmc
jo
imul
arpl
cmc
push
mul
and
and
dec
fst
call
jp
test
jns
movb
fcos
mov
sbb
dec
jge
sbb
std
push
stos
popf
je
jle
arpl
jno
stc
and
aaa
pop
arpl
pop
sub
pop
add
fcoms
jbe
data16
mov
lock
or
pop
add
out
outsb
jb
xchg
jo
cmp
jne
mov
pop
cld
jo
pop
loop
std
adc
mov
add
ret
arpl
mov
cmp
loop
pop
mov
jge
stc
int3
push
loop
mov
je
xchg
mov
stc
out
arpl
in
loope
mov
adc
jb
cmp
cli
arpl
fildll
sbb
loop
and
arpl
push
push
out
nop
leave
and
mov
mov
jno
jns
sub
pop
jecxz
je
mov
loope
int
test
ja
push
or
bnd
test
fimuls
je
pop
jp
mov
fistps
fldl
mov
jbe
nop
addr16
and
in
mov
js
lret
mov
jne
js
loopne
xchg
mov
jbe
out
and
lret
jg
nop
jecxz
cmpsb
sub
in
xchg
cmp
call
or
leave
out
push
dec
loop
fcmovnb
pop
and
scas
icebp
adc
mul
out
dec
mov
xchg
xor
test
pop
sbb
data16
leave
or
mov
repnz
push
loope
sub
test
popa
jo
push
lods
rcll
dec
icebp
jp
out
hlt
call
rolb
xlat
js
test
addr16
in
add
pop
repnz
cwtl
hlt
push
sub
daa
in
pop
inc
sbb
mov
sahf
xchg
xchg
pushw
notl
fsubl
mov
fcmovbe
pop
xchg
jmp
addr16
js
mov
loope
sbb
cmp
inc
cwtl
mov
mov
xchg
iret
mov
filds
addr16
mov
lret
call
stos
sbb
adc
rclb
push
imul
push
push
addl
jl
pop
adc
js
cli
jo
hlt
lock
popa
icebp
jno
pop
xchg
mov
mov
lock
push
mov
cltd
and
xchg
repz
or
xchg
adc
jno
add
int
xchg
cltd
ret
out
jp
mov
test
clc
add
xchg
scas
rep
and
xchg
jle
mov
xchg
stos
cmc
xchg
movb
adcb
bound
mov
mov
fimull
jb
mov
adcb
dec
cmpsl
daa
cmc
addb
sbb
daa
xchg
rcrl
mov
cltd
xchg
scas
loop
scas
cmp
pop
cwtl
mov
xchg
xor
cli
cmp
xchg
sub
cli
and
mov
cli
and
and
cwtl
sub
cmp
mov
sbb
cwtl
and
cmp
mov
cli
mov
cmp
cwtl
aas
mov
cmp
cwtl
test
xchg
stos
loop
lods
cmp
pop
cwtl
xor
pop
adc
mov
sbb
xchg
sahf
jle
mov
xor
cmp
xchg
xchg
es
sub
cmp
mov
mov
lahf
pop
fldcw
mov
stos
ret
repnz
cmp
cwtl
xlat
mov
stos
daa
pop
fnstenv
xchg
xchg
sarl
stos
dec
pop
xchg
int3
jle
sub
lret
cmp
pop
cwtl
into
mov
cmp
sbb
xchg
xchg
inc
jle
dec
stos
dec
pop
xchg
iret
jle
shrb
adc
push
pop
cwtl
rorb
cmp
cwtl
aam
xchg
push
loop
dec
cmp
pop
cwtl
rorl
cmp
xchg
push
loop
push
cmp
pop
cwtl
pop
mov
jnp
dec
aad
cltd
xchg
pop
loop
pop
cmp
pop
mov
cmp
cwtl
pop
mov
cmp
cwtl
loopne
xchg
data16
jl
stc
pop
cwtl
jbe
xchg
loop
mov
out
pop
cwtl
pop
mov
cmp
pop
cwtl
clc
mov
or
xor
cli
cld
cmp
cwtl
jno
xchg
popa
loop
arpl
xchg
cwtl
mov
cltd
stos
adc
js
xchg
cltd
mov
xchg
or
xchg
xchg
jge
lcall
dec
loop
insl
cmp
cwtl
push
mov
cltd
xchg
fs
add
lods
cltd
xchg
inc
loop
nop
cmp
pop
cwtl
jmp
fsts
xchg
xchg
cmpb
into
lock
cltd
xchg
jns
cli
pop
add
stos
cwtl
pop
mov
stos
jb
ftst
xchg
xchg
call
hlt
fstps
jns
les
add
cmp
pop
cwtl
loop
xchg
jnp
cli
pop
cmp
pop
cwtl
or
cmp
pop
cwtl
repnz
or
xchg
xchg
jp
mov
imul
les
test
sti
xchg
xchg
fidivrs
in
stos
negb
insb
xchg
xchg
push
je
fsts
xchg
outsl
jle
push
stos
add
call
std
into
mov
cltd
xchg
xchg
hlt
jle
sub
adc
call
jl
add
insb
xchg
pop
mov
ret
into
and
push
pop
adc
mov
mov
cltd
inc
or
push
sbb
sbb
int3
movsb
addl
popa
pop
inc
nop
lret
add
aaa
mov
fistpl
mov
jmp
fstpt
scas
movsl
imul
iret
fidivs
pop
sub
js
push
or
fadds
or
stc
pop
clc
mov
insl
in
shl
bound
xor
sub
mov
in
jae
dec
jp
in
jmp
call
sub
imull
test
lcall
cmpsl
daa
lcall
das
inc
or
leave
repnz
jl
cmc
jne
dec
imul
test
mov
dec
cwtl
mov
jnp
fbstp
outsb
jbe
ljmp
lcall
cltd
fsubrs
ds
lahf
fisubl
outsl
adc
nop
stc
jle
mov
gs
pop
sbb
aam
mov
mov
std
test
mov
hlt
dec
loopne
call
pop
fst
lcall
dec
add
outsl
pop
mov
or
mov
dec
jmp
jns
ret
out
jge
adc
adc
fcmovbe
jp
vsqrtsd
mov
xchg
ds
aad
lcall
or
jbe
call
mov
fisubrl
sub
mov
push
sub
sbb
adc
xchg
add
mov
push
loopne
aaa
scas
mov
inc
imul
mov
add
xchg
je
pop
out
iret
inc
jbe
hlt
jb
in
xor
cmp
testb
mov
cli
push
bndldx
ret
sub
clc
out
cmp
imul
cmp
xchg
sub
into
mov
repz
xchg
or
xchg
mov
fcmovne
xor
and
lods
sub
xchg
dec
lods
das
pop
and
mov
adc
cmc
pop
hlt
lds
mov
xor
int3
iret
sbb
xchg
and
sub
adc
testl
hlt
mov
cmp
push
lcall
jb
mov
lret
aaa
int3
cmp
mov
xor
icebp
mov
orb
lcall
push
cmp
push
icebp
sbb
inc
cmp
mov
xchg
mov
dec
cmp
mov
add
imul
pop
call
repnz
dec
inc
in
ds
mov
cmp
loope
sbb
push
iret
inc
mov
xchg
add
inc
in
inc
ret
aam
inc
sbb
inc
rolb
inc
ret
orb
lock
pop
leave
lcall
nop
cli
lcall
jle
mov
inc
jns
pop
into
lods
icebp
lds
sbb
jge
xchg
jb
nop
out
imul
add
add
out
int3
sbb
or
push
dec
fcmove
fisttpll
push
dec
lret
repnz
sbb
jmp
cwtl
jne
lcall
mov
adc
pop
in
std
iret
pusha
aam
inc
test
cwtl
sti
sbb
or
test
cltd
pop
lock
adcb
test
add
mov
push
jle
push
pop
aad
fstl
std
adc
add
pusha
cwtl
mov
incb
repz
push
xchg
jecxz
arpl
add
cmp
popa
add
add
aaa
dec
add
add
adcl
inc
imul
shr
adc
jl
repnz
pop
fs
mov
fstpl
mov
addb
mov
or
jge
into
lret
in
jbe
adc
in
xchg
pop
addl
xchg
adc
notl
and
out
imul
addb
xchg
push
invd
rcll
lock
xchg
outsb
cld
ljmp
sub
cmp
push
cmp
adc
push
cltd
jl
jle
je
shll
ret
xor
mov
fldenv
cwtl
and
xchg
add
add
bnd
data16
fs
out
sub
mov
fxch
pop
mov
clc
js
icebp
rolb
insl
fsts
xchg
shlb
mov
add
pop
push
shrl
jmp
lock
dec
cmp
or
stc
and
out
cmpsl
lcall
rorb
popl
outsb
sarl
xchg
and
lcall
jae
repnz
jb
testl
and
adc
jbe
sub
je
mov
xchg
and
shll
xchg
xchg
xchg
mov
jp,pt
adc
or
pop
push
jmp
sarb
pusha
dec
add
lock
add
jp
or
or
jle
push
xchg
or
push
sub
xchg
scas
rcll
mov
pusha
test
out
cltd
or
rcll
mov
mov
pop
jp
adc
adc
cltd
shl
jae
test
sbb
xorb
push
push
xchg
mov
pusha
imul
mov
notl
adc
pop
int3
xchg
sbb
pushf
xchg
repnz
xchg
sahf
pop
sti
xchg
mov
pop
adc
ficoml
sbb
xchg
sbb
xchg
sahf
clc
sti
orl
adc
pushf
adc
adc
not
fists
dec
mov
stos
jb
xchg
addb
rclb
rcrl
cwtl
decl
imull
sub
clc
mov
cltd
jb
lea
mov
popf
cltd
lock
pop
cltd
push
adc
enter
clc
fsubl
cltd
jb
lea
cltd
push
adc
mov
cltd
clc
mov
rcrl
lock
jbe
mov
movsb
idivl
mov
push
adc
movsb
dec
cltd
clc
jle
sub
cltd
push
call
enter
push
adc
mov
mov
cltd
outsb
in
lea
cltd
out
fdiv
xor
dec
cltd
clc
xchg
data16
cltd
out
into
idivl
cltd
push
adc
dec
dec
cltd
clc
mov
cltd
jb
lea
out
in
idivl
les
clc
nop
rcrw
ljmp
dec
cltd
clc
in
inc
cltd
jb
xlat
cltd
out
fdiv
scas
cltd
push
push
mov
shlb
cltd
jb
or
clc
ss
outsb
fmuls
test
mov
outsb
testb
loope
push
adc
push
dec
cltd
clc
gs
cltd
test
pop
cltd
jb
repz
push
xchg
lea
cltd
push
int3
lea
in
jbe
ljmp
repnz
outsb
loopne
in
lock
neg
cltd
push
adc
loop
cltd
shl
popf
mov
andb
test
shr
adc
cltd
mov
bound
cltd
mov
lret
mov
jp
cltd
shll
push
jle
test
adcb
imul
mov
or
out
cltd
lock
call
cmc
cltd
mov
das
cltd
mov
aam
cltd
leave
in
andb
push
jmp
add
cltd
mov
jp
into
cltd
notb
add
cltd
mov
in
mov
roll
xorb
call
cwtl
negl
sbb
lahf
push
pop
in
cmp
sbb
cmp
inc
xchg
fidivrs
add
jecxz
push
ss
xchg
arpl
dec
dec
or
repz
sbb
mov
iret
sbbb
in
shlb
flds
into
lcall
mov
sarl
hlt
push
jle
ds
ljmp
mov
inc
fs
jb
sbb
in
pop
dec
enter
cwtl
aas
stc
xchg
clc
stos
inc
fstps
inc
rclb
loop
jge
sbb
imull
sarb
inc
inc
dec
lds
ret
xchg
fcomp
leave
mov
mov
hlt
ret
ror
lcall
ficomps
pop
outsb
lret
lds
mov
xchg
sbb
jae
outsb
insb
pop
and
mov
dec
inc
ficomps
roll
hlt
or
lcall
jp
lcall
inc
push
xchg
movb
jmp
fidivrl
setp
pusha
cld
into
in
dec
loopne
out
dec
jl
int
pop
mov
lret
push
jge
cltd
sbb
push
iret
or
lcall
int3
dec
movsb
lret
push
dec
push
mov
xchg
pop
lcall
call
push
out
push
rcll
rclb
pusha
ficompl
jns
mov
jo
jl
sbb
pop
clc
pop
pusha
fstps
pop
stos
dec
push
mov
lcall
popa
jns
jne
cmpl
scas
out
fmull
pusha
jecxz
jge
or
cld
xchg
in
test
lea
add
imul
sbb
popa
mov
scas
test
xchg
sbb
push
out
in
dec
push
cli
or
lcall
in
mov
sti
jmp
ljmp
mov
lcall
lcall
mov
jnp
jbe
out
outsb
push
mov
mov
sbb
fimull
hlt
je
mov
jae
psllw
mov
or
aaa
push
adc
outsl
lcall
js
movsl
divb
dec
adc
jmp
dec
sbb
or
cld
addb
cmp
add
adc
addl
mov
or
add
xchg
push
or
mov
dec
mov
jns
pop
mov
adc
mov
xchg
xchg
adc
jns
xor
fnstsw
nop
xchg
adc
xchg
je
js
inc
inc
mov
dec
sti
cltd
stos
or
iret
fcmovbe
dec
sbb
mov
dec
iret
imul
adc
pop
cmpsb
mov
xchg
mov
mov
mov
out
stos
adc
decl
mov
andb
test
test
rcl
and
cltd
test
shl
cmp
cltd
test
test
enter
push
fwait
cltd
jle
push
movsb
cltd
jle
push
xor
cltd
jle
push
rcrl
jne
or
repz
mov
cltd
leave
jl
stos
cltd
test
test
shrl
dec
cltd
test
cmp
loop
test
mov
loop
mov
xchg
mov
mov
jl
mov
mov
cmp
cltd
int3
hlt
xor
cltd
sarl
subb
scas
and
sarl
push
cltd
rol
loope
shl
rcrb
sarl
cltd
rorl
push
cltd
test
mov
test
mov
negb
jno
inc
mov
arpl
mov
in
ja
repnz
xchg
jbe
psadbw
push
or
hlt
aad
sub
fsubrl
push
je
sbb
loope
jl
mov
jnp
sbb
sti
mov
jns
stc
and
rcrb
fbstp
xchg
mov
clc
mov
push
xchg
repnz
icebp
adc
xchg
scas
hlt
cltd
push
jo
mov
ret
mov
push
outsb
mov
mov
loope
in
dec
jle
in
mov
xchg
ja
or
jmp
pop
loope
xchg
mov
shll
or
mov
jp
cli
shl
jns
mov
les
mov
jbe
or
shlb
mov
jle
je
ret
data16
push
push
push
jmp
jg
push
insb
fimull
jo
icebp
push
adc
mov
insl
or
in
cmp
lock
out
aam
lea
adc
mov
add
and
stc
clc
call
sahf
jle
push
cwtl
jge
std
jl
lret
add
xchg
cwtl
and
jae
ficoml
xchg
push
or
push
xchg
jne
fisttps
mov
xor
sbb
push
mov
push
mov
push
xchg
ret
jmp
fs
cmovge
mov
sar
fwait
push
enter
sahf
pop
mov
mov
ficoml
nop
xor
test
cmp
testl
xchg
lods
rcrb
lsl
jno
add
cmovae
xchg
mov
xchg
sti
sbb
jp
ss
fstl
mov
lcall
xor
mov
cwtl
mov
aam
shlb
cltd
mov
cltd
ss
dec
pop
mov
jbe
cmpsl
inc
cmp
xchg
sbb
shlb
ljmp
mov
xorb
test
test
push
adc
jmp
adc
sbbl
call
sbb
ss
fcmovu
out
lcall
cltd
clc
rcrl
inc
or
inc
fdivrp
dec
and
sbb
sbb
sbb
bndldx
jnp
xchg
mov
pusha
or
icebp
lock
mov
jbe
sbb
lods
repz
push
rcrb
fcomps
or
or
les
fimuls
mov
mov
mov
cmc
mov
add
xchg
mov
aaa
sar
mov
out
out
cltd
cmc
cltd
inc
nop
pop
xchg
cwtl
mov
sbb
repnz
jl
icebp
loopne
dec
xchg
clc
ret
mov
fimull
jle
fmul
loop
popf
and
sub
cltd
and
xchg
repz
add
movsb
cwtl
adc
movsb
loopne
cltd
mov
movsl
mov
movsb
xchg
cpuid
movsb
mov
or
nop
popf
mov
int3
push
stc
test
dec
enter
cmp
mov
sahf
aam
fwait
push
pop
dec
push
add
pushf
pop
test
mov
sbb
cltd
lea
imul
enter
jno
mov
mov
out
icebp
out
cmpb
rcrb
push
mov
jae
fiaddl
loop
inc
lock
jl
int
push
jge
ficompl
pushf
das
xchg
xor
out
cltd
xchg
xor
cltd
orl
push
xor
lea
jmp
cmc
fcoml
jbe
rorl
lret
int
loopne
out
insl
adc
cltd
inc
loop
cmc
or
fsubrl
push
add
lcall
jnp
fdivrs
mov
cltd
mov
mov
cwtl
jb
mov
outsb
cwtl
es
mov
inc
in
sbb
push
mov
mov
mov
sub
mov
test
fsub
push
fiadds
rorb
mov
rclb
mov
into
mov
mov
inc
cltd
xchg
xchg
ficompl
and
mov
dec
mov
or
pop
test
mov
mov
jl
mov
pop
mov
add
shrl
mov
fwait
int
push
outsl
mov
mov
mov
mov
mov
les
jae
xor
rcrl
in
sbb
mov
mov
negb
push
push
mov
lcall
int
repnz
mov
push
and
cli
out
sbb
ljmp
ja
inc
loopne
rcrb
cltd
adc
sti
push
ret
testb
xchg
sbb
in
mov
fcoml
xchg
test
mov
jmp
out
xchg
int3
push
pop
jns
mov
rorl
mov
xor
mov
push
fwait
cmc
lock
lret
mov
push
mov
inc
mov
out
cmp
fiadds
push
popf
clc
xchg
cmpsb
xchg
rcl
mov
negb
xchg
enter
div
mov
jle
mov
test
insb
mov
sbb
hlt
inc
sarl
dec
add
rcrl
add
cmp
pushf
loop
and
sbb
enter
fstps
stc
lcall
cmpsb
xchg
mov
xchg
aad
js
jmp
mov
xchg
data16
sbb
xorb
xchg
push
pop
mov
call
shrl
mov
sbb
orb
sub
sahf
aaa
stos
cltd
xchg
shl
xor
cmpsb
mov
mov
rclb
fsubrp
imul
adc
mov
mov
hlt
xchg
leave
sbb
push
mov
sbb
cwtl
cwtl
repnz
inc
clc
rcrb
sar
jne
pushf
scas
mov
sbb
test
mov
fldenv
mov
leave
xlat
int3
inc
testb
cltd
popa
jle
mov
or
mov
stc
mov
lods
stc
stos
js
imul
xchg
xor
mov
faddp
mov
sbb
push
sbb
ror
mov
fwait
movsb
hlt
pop
sbb
sbb
xorb
mov
mov
xor
div
into
xor
adc
bound
jb
mov
icebp
out
in
shr
add
fwait
push
mov
sbb
cltd
pushf
lds
sbb
testb
lahf
ret
and
xor
mov
int
xlat
mov
jno
add
hlt
stc
cltd
sar
rcrb
add
mov
test
stos
test
push
lret
scas
jb
xchg
jne
in
mov
int
rcr
int3
call
cmp
mov
or
int3
pop
fistpll
add
rolb
cltd
mov
out
addb
jns
cltd
lods
iret
jb
mov
ror
inc
into
test
call
sub
shll
add
mov
push
mov
fwait
add
push
test
pushf
lock
int
cltd
fildll
cltd
jp
xor
adc
and
xchg
lcall
push
out
cltd
jle
dec
adcb
out
test
rolb
sbb
call
jne
movb
or
or
sub
loope
jae
mov
fwait
cmp
stos
jno
adc
jne
lock
je
test
mov
jle
sbb
jle
mov
xchg
lock
lea
pushf
adc
clc
inc
cltd
add
mov
leave
mov
int
pushf
lock
loop
aad
lahf
mov
scas
out
enter
lock
xchg
mov
lret
test
push
pushf
rolb
mov
ret
jl
push
fadds
sbb
push
sahf
mov
xor
cltd
pusha
mulb
mov
shl
mov
dec
cltd
adc
scas
leavew
cltd
clc
xchg
mov
rol
mov
push
mov
or
xchg
mov
fimull
test
jbe
push
xchg
fmull
cltd
jb
mov
rcrb
inc
loop
mov
fwait
sbb
test
add
ljmp
xchg
mov
movsb
dec
add
fmul
in
cmc
mov
push
xchg
inc
inc
cltd
rorl
adc
mov
inc
cltd
loop
out
cltd
sahf
out
cmc
enter
fcoms
mov
mov
inc
test
jbe
xchg
or
test
loop
fcmovbe
fidivrs
mov
add
cltd
aad
clc
mov
aam
xchg
into
dec
mov
data16
in
int
cltd
int
inc
fmull
out
jp
sbb
push
adc
cltd
daa
in
mov
xchg
out
cltd
mov
jle
subb
xchg
pushf
fwait
rcrb
sbb
jle
in
int3
fimull
mov
out
sarb
xchg
pop
stc
enter
stc
mov
fmuls
adc
cmp
mov
adc
inc
inc
cltd
xchg
ficoms
xchg
inc
cltd
into
int
cltd
clc
mov
cwtl
push
cltd
lret
stos
jne
out
fdivs
mov
add
in
xor
cmpsb
xor
rcrb
cmp
sub
pop
loop
push
or
cltd
push
into
jbe
call
mov
pushf
push
ljmp
in
test
mov
lea
cltd
out
inc
mov
push
enter
adc
jge
cmpsb
add
fwait
loopne
dec
sahf
and
icebp
push
fdiv
sbb
lock
cwtl
fdivrs
mov
in
data16
cltd
push
xchg
or
cltd
pushf
out
enter
scas
xchg
ljmp
push
rolb
push
repnz
mov
mov
xchg
repz
xchg
mov
rcr
fcmovbe
or
fdiv
cltd
ljmp
sbb
in
mov
rcll
int3
bound
sbb
cltd
fwait
pushf
xchg
mov
fcoms
stc
leave
cltd
cwtl
inc
rorb
adc
enter
mov
je
xor
lret
adc
mov
ds
mov
aam
leave
cltd
cwtl
out
cltd
mov
test
movsb
mov
push
mov
mov
pop
jb
mov
mov
cli
xchg
cwtl
sbb
mov
lock
xchg
je
stc
mov
jle
call
je
mov
jne
mov
mov
xchg
outsb
enter
icebp
fadd
jl
mov
movsb
push
popf
push
cltd
xchg
jecxz
rcrl
hlt
and
rcr
push
jp
cwtl
mov
jne
hlt
int
out
lret
mov
jmp
enter
add
enter
mov
shll
faddp
mov
push
cmpsb
xchg
mov
das
cltd
aad
imul
in
push
ret
test
sbb
out
xchg
adc
mov
xchg
test
fdivrs
dec
mov
test
fsubl
in
aam
cmc
lods
subb
mov
jg
dec
push
testb
mov
out
mov
test
shr
shlb
out
hlt
add
adc
ret
pushf
mov
into
push
jbe
cmp
add
cltd
aas
movsb
ret
ljmp
jle
cmpb
rcl
mov
fisubs
jg
inc
fmuls
mov
out
push
mov
sahf
xor
aaa
rolb
mov
push
push
addb
dec
fiaddl
sbb
ror
lock
mov
sbb
mov
mov
enter
test
iret
les
test
data16
lea
jb
lea
out
sahf
xor
divb
push
rcll
test
mov
lea
push
cmc
mov
shlb
icebp
push
fadds
cli
add
xchg
mov
shlb
mov
fs
lcall
int3
out
div
fwait
push
sbb
xchg
pushf
divb
jle
push
sub
and
push
cltd
fwait
cmp
mov
and
scas
push
pushf
div
mov
mov
lods
aaa
rolb
mov
mov
inc
xchg
xorb
std
jmp
inc
shl
dec
or
enter
enter
mov
mov
sbb
stc
fwait
aam
xchg
in
jbe
stc
mov
testb
nop
add
add
in
cltd
mov
or
aad
test
es
mov
cmpl
push
cmc
cltd
mov
rcl
mov
jbe
mov
lods
push
mov
inc
fcoms
xchg
testb
fadds
test
lret
orb
test
add
sbb
sub
sbbb
lds
in
jle
mov
test
test
out
bound
out
xor
jae
fwait
int
insb
sbb
or
mov
mov
sbb
dec
rcr
mov
ds
mov
add
jg
fsubs
es
jns
mov
cltd
fadds
or
jns
je
xchg
insb
and
lods
sbb
sbb
js
xorl
xchg
mov
or
mov
imulb
idivb
test
cmc
fsubrl
sbb
push
adc
out
mov
xor
cltd
push
mov
aam
je
xchg
jno
ja
mov
hlt
xchg
shlb
fcom
icebp
not
nop
je
hlt
lcall
es
outsb
lahf
xchg
test
sub
mov
adc
nop
sbb
hlt
mov
popf
mov
jb
popf
nop
mov
or
insb
mov
jbe
xchg
adc
adc
js
jo
aam
cltd
mov
repz
pop
xchg
mov
lock
and
cwtl
add
idivb
repnz
mov
jp
lcall
xchg
fwait
pop
fdiv
push
in
ds
hlt
xchg
xor
test
in
push
push
rcrb
mov
or
hlt
in
movb
out
sbb
icebp
push
xchg
cmc
pushf
add
push
fwait
cmp
mov
mov
aaa
imul
dec
mov
not
hlt
lcall
mov
mov
movsl
nop
cwtl
lock
mov
cmpsb
push
lcall
clc
test
or
mov
mov
repnz
jb
test
in
and
xor
in
push
cmc
xchg
cltd
mov
sbb
sbb
push
cwtl
jne
repnz
inc
into
mov
les
pop
faddl
sub
dec
mov
push
pushf
pushf
andl
cmp
andb
mov
push
leave
hlt
lock
cltd
mov
push
ret
cltd
mov
clc
clc
mov
xchg
sbb
adc
dec
add
into
xchg
sub
es
and
xchg
mov
daa
ret
sbb
ror
or
cltd
int3
jle
inc
mov
rcrl
outsl
lods
imul
jg
push
jnp
xchg
cmp
in
stos
pop
dec
lretw
cltd
xchg
or
ljmp
ja
inc
mov
pop
lock
cmpl
mov
test
mov
cwtl
inc
mov
push
sarb
gs
push
jb
add
mov
ficoms
sub
cwtl
negb
test
jbe
loopne
jbe
nop
jmp
push
call
xchg
mov
sbb
repnz
pop
pushf
xor
cli
out
jbe
nop
aam
xchg
push
sub
or
dec
ljmp
enter
sahf
ficomps
cltd
or
dec
loope
dec
push
mov
data16
lret
ret
fdivrs
cld
cltd
fsub
repnz
mov
jp
sbb
mov
aam
aam
mov
mov
inc
cltd
leave
xchg
insl
icebp
shrb
test
mov
sbb
pushf
fsubrl
mov
cmpsb
pushf
enter
push
out
in
in
cltd
ss
arpl
xchg
push
in
shl
sarb
loopne
les
jmp
into
iret
cmpsl
mov
mov
mov
popf
nop
mov
push
leave
or
jge
cltd
movsb
test
adc
faddl
movsl
mov
mov
dec
xchg
out
popa
and
loop
push
mov
addb
ss
in
hlt
popa
stc
cltd
rolb
pushf
push
rcr
dec
mov
fimull
xchg
hlt
lcall
xchg
lret
cmp
imul
data16
jl
cli
fcompl
je
cltd
adcl
mov
push
cltd
fisttpll
mov
fcoms
rolb
aas
sahf
sbbb
sbb
or
push
sbbb
xor
lock
ljmp
pushf
and
std
or
mov
rcrl
cltd
dec
jge
mov
inc
in
fwait
loop
mov
je
mov
push
ss
in
fcmove
inc
movsb
jne
mov
repz
shrb
inc
mov
fcomps
aam
shr
sbb
push
test
fdiv
mov
in
fsubrs
rcll
fcmovbe
push
stos
insl
sbb
pop
loop
pop
push
and
lods
lock
cmp
cltd
aas
adc
stc
fadds
dec
cltd
add
ljmp
aad
lahf
ljmp
push
pop
adc
loop
lods
inc
ss
fnsave
lcall
mov
ljmp
cltd
aas
add
int3
cltd
cmp
mov
clc
imul
dec
popf
mov
cwtl
int
je
cwtl
add
jb
lcall
cmc
mov
daa
inc
in
mov
inc
dec
jg
xor
cwtl
clc
int3
int
push
cwtl
jb
cltd
clc
mov
cltd
dec
lock
fsubrs
movsb
xchg
sub
sbb
lock
rol
sbb
push
in
test
cmp
pushf
sub
push
loop
loop
call
scas
jno
mov
gs
lea
test
scas
cltd
add
cli
xchg
icebp
cwtl
sbb
cmp
mov
les
sub
pop
out
int3
sbb
mov
mov
mov
adc
inc
cltd
or
leave
faddl
cwtl
mov
mov
xor
mov
aam
dec
cs
clc
fdivl
xchg
xchg
mov
or
mov
jo
lods
jmp
rcll
mov
out
cwtl
fchs
sbb
les
les
mov
pushf
xor
cltd
adc
mov
push
lret
push
loop
rclb
les
rorb
cwtl
or
mov
cmc
test
test
lret
cmp
cwtl
sbb
ficomps
cltd
loopne
imull
cltd
push
call
into
je
add
rol
xchg
add
cltd
add
icebp
jle
fdivs
inc
and
shrb
add
testl
sbb
mov
arpl
call
pop
in
ss
jmp
icebp
mov
neg
mov
into
xor
and
lcall
ss
ds
push
fsubs
in
loop
sbb
add
xchg
lock
hlt
or
repz
out
repz
les
nop
fcomp
out
cltd
cwtl
dec
aam
imul
in
addb
js
push
int3
mov
dec
cltd
nop
xchg
rcr
imul
cltd
sbb
in
add
mov
rcr
stos
cltd
mov
cltd
mov
mov
cltd
pushf
xor
cltd
xchg
fidivl
xor
mov
mov
xor
xchg
fidivrs
mov
aas
nop
call
rcr
push
pop
fidivs
loopne
into
inc
enter
cltd
rorb
jne
loop
nop
xchg
pushf
and
je
lea
jmp
in
add
mov
push
in
fiadds
cmc
scas
in
fidivs
pushf
cmpsl
test
clc
mov
mov
sahf
in
dec
xchg
mov
nop
mov
dec
mov
push
fcomps
mov
dec
adc
lods
out
and
fidivl
sub
ljmp
cwtl
lea
not
xor
int3
stos
clc
cmpsl
inc
cltd
dec
cmp
ljmp
loope
test
nop
xlat
fcmove
stos
jo
mov
fcoms
fiaddl
sbb
int3
dec
mov
lds
inc
cltd
int
cltd
out
jle
mov
les
inc
rolb
xchg
cmpb
orl
inc
jmp
mov
sub
cwtl
outsb
mov
cmp
mov
divl
push
aam
mov
nop
test
push
pushf
in
mov
xor
fcomps
push
mov
cwtl
loop
fimull
mov
repnz
pushf
push
push
orl
jge
cmc
mov
jbe
inc
cmp
sahf
jp
and
loopne
clc
sar
or
sbbb
jne
cltd
in
test
mov
push
mov
pop
mov
enter
xchg
add
gs
add
xchg
pop
popf
pop
jle
mov
adc
lret
xchg
fdivs
int
js
jge
mov
rorl
int3
repz
jbe
popf
popf
sahf
inc
cwtl
sub
aam
sbb
nop
dec
call
xchg
xchg
ljmpw
daa
cwtl
cmp
sbb
cmpsb
pop
addl
jne
das
xchg
jbe
jle
fsubrs
rolb
fisubrl
test
in
fimull
mov
sahf
ret
sbb
enter
jbe
movsb
mov
sahf
negb
bound
add
push
xchg
mov
add
cltd
push
xchg
mov
sbb
fadds
adc
sahf
mov
icebp
cltd
fdivr
lret
cltd
xchg
mov
and
inc
es
mov
ss
cs
sahf
mov
daa
call
ret
mov
enter
lcall
mov
test
push
cltd
dec
sahf
or
loopne
cmc
lock
mov
cltd
ljmpw
int3
test
sahf
icebp
sahf
mov
dec
mov
fs
mov
jp
icebp
fcomps
loope
mov
and
inc
sbb
add
jp
or
mov
clc
repz
test
jns
mov
jbe
sbb
cwtl
or
inc
flds
mov
jl
mov
rorl
push
rolb
out
or
cltd
ss
shrl
scas
jp
insb
div
add
inc
fmuls
std
shlb
xchg
fcomps
mov
push
mov
shrb
fwait
mov
pushf
das
jge
loop
in
push
jno
fnstenv
xchg
mov
in
aad
jne
dec
shr
xchg
lock
das
mov
jne
stos
fwait
dec
mov
popf
into
push
cwtl
aam
movsl
icebp
mov
movsb
call
mov
cmp
xorb
push
cld
mov
clc
out
mov
jl
adc
icebp
fiaddl
cwtl
jbe
cltd
stc
ljmp
sbb
push
fcompl
loop
rcrb
in
popf
mov
out
mov
decb
mov
in
cmp
xor
out
scas
and
pop
pushf
pop
lret
push
xchg
xchg
sbb
bound
fdivrl
add
xchg
mov
scas
mov
pop
pop
movsb
popf
lret
lds
mov
iret
andb
xor
cltd
mov
cmp
sarb
ret
jge
push
mov
ficoml
mov
arpl
nop
movsb
data16
call
mov
sub
test
int
enter
jmp
nop
clc
cmpsl
cltd
call
orb
pushf
icebp
sbb
fcoms
sub
add
cltd
les
sub
add
clc
clc
mov
dec
rclb
fidivl
pop
icebp
fdivrl
hlt
xchg
jb
mov
js
push
xor
mov
ss
xchg
mov
mov
sbb
mov
and
pop
xchg
jbe
fiaddl
out
mov
push
cwtl
lock
xor
inc
push
in
hlt
push
loopne
jp
sarl
addb
jno
cmpsb
addl
mov
clc
jo
ret
inc
sbb
cmpsb
mov
in
stc
xchg
loope
push
inc
int3
xchg
pop
inc
jecxz
push
pop
xchg
pop
fwait
xchg
jp
repnz
jp
jecxz
out
pop
ljmp
xor
adc
xchg
cmp
push
jnp
pusha
es
dec
add
cltd
adc
sbb
pop
lds
cli
pusha
or
or
pushf
xor
xchg
mov
fstps
sub
mov
rcrl
jns
jge
or
gs
int3
push
lock
arpl
jns
ficomps
lods
pop
push
nop
mov
xchg
clc
cwtl
dec
pop
icebp
sbb
mov
lock
inc
add
adc
les
sbb
lods
adc
pop
xchg
jmp
jno
xchg
repz
add
mov
add
or
incl
lret
cmc
stc
orb
arpl
nop
xchg
push
jl
lcall
into
idivb
sbb
xor
pushl
push
or
loopne
pop
out
imul
stc
xchg
pushf
add
notb
push
aas
mov
lock
outsb
pop
subb
data16
mov
push
xor
sbb
jmp
mov
out
pop
xchg
int
jb
dec
mov
je
loope
pop
push
push
push
push
add
je
sbb
mov
jne
aam
add
loope
adc
cwtl
ja
mov
cmc
jb
adc
add
jle
push
sbb
jbe
cwtl
adc
add
or
push
iret
jge
rcrl
xchg
test
or
rolb
xor
fs
lea
add
add
jl
adc
sbb
pop
jb
fmuls
jnp
scas
sub
jmp
push
popa
mov
out
dec
lods
iret
xor
aad
fmul
bound
dec
enter
add
std
add
hlt
mov
cwtl
aad
ss
xchg
or
out
nop
push
mov
daa
jnp
jbe
arpl
idiv
or
xchg
mov
out
inc
push
fisubrl
out
popa
outsb
mov
jle
push
jno
orl
cmp
xor
mov
jns
inc
xchg
xchg
gs
scas
xchg
aad
jae
out
hlt
pop
filds
adc
push
rorw
add
fildll
jg,pt
mov
cmp
adc
adc
sti
cmp
or
adc
jo
mov
cltd
mov
add
sbb
adc
sbb
add
add
add
push
add
add
add
or
add
add
pop
sub
add
add
add
or
add
add
fisubrl
push
add
add
add
push
add
add
add
add
add
push
add
cmpsb
or
in
or
popa
add
add
push
add
add
add
cmp
lcall
fisubl
jmp
and
add
fisttpl
lcall
cmp
pop
sub
shlb
scas
xchg
int
je
adc
mov
pop
neg
pushf
xor
xchg
fistpl
sub
mov
cltd
popa
mov
icebp
fidivrs
sub
je
cmp
sbb
or
pop
mov
sahf
sbb
out
mov
mov
idivb
push
lods
je
jg
cmpsl
pop
add
hlt
orb
idiv
lahf
aad
cmp
push
lods
movsl
sub
sarl
mov
add
setns
pushf
call
les
dec
ficompl
jg
in
push
lds
mov
scas
pop
and
sar
lcall
add
inc
jge
cs
sahf
lcall
ficoml
or
jge
daa
sbb
into
xor
out
cld
inc
mov
push
aaa
cmp
ss
sbb
test
test
mov
test
push
cmp
jg
test
aas
mov
dec
inc
ja
mov
lock
mov
sbb
pop
cmpsb
enter
into
fwait
popf
int
xchg
lret
and
loope
pop
test
and
iret
inc
jae
sub
mov
pop
and
jae
add
inc
or
xchg
jns
iret
stc
pop
cmp
jmpw
mov
xor
or
enter
dec
mov
pop
inc
popa
fiadds
je
push
push
mov
es
fldenv
dec
xchg
loop,pt
mov
fs
xchg
pop
mov
lods
fisttps
push
inc
lds
inc
fstpl
lea
mov
fwait
jecxz
fs
pusha
or
pop
mov
rclb
cwtl
test
imul
andl
mov
leave
push
xor
push
lahf
cmp
lahf
inc
in
mov
adc
mov
in
ds
cmp
out
mov
or
and
es
add
notb
mov
lahf
jle
mov
dec
mov
mov
mov
ret
xor
add
sub
cli
roll
mov
push
int
push
pushl
fisttpl
inc
lods
pop
jmp
shrb
and
or
std
jmp
xchg
add
arpl
xor
mov
add
adc
jp
dec
or
cld
inc
ret
popa
jb
jnp
push
adc
xchg
leave
and
or
stos
cmpsl
sbb
xchg
mov
sbb
fcompl
or
pop
push
xor
mov
sub
mov
sub
add
push
mov
jl
pop
mov
dec
cs
cmp
adc
jl
pop
fsts
mov
cmp
xor
mov
ja
test
dec
inc
fxam
mov
fcompl
adc
cmpl
pushf
push
pop
pop
cmp
mov
pusha
cmp
add
fisubrs
dec
jae
mov
rcrb
sub
push
xchg
xor
or
mov
mov
pop
ds
jle
push
daa
inc
jmp
xor
and
and
mov
jne
mov
movl
mov
jmp
inc
in
insb
xor
dec
sub
inc
es
jecxz
leave
movsl
les
pop
sub
xchg
int3
lahf
cmpsl
jp
cmp
addl
cmp
or
add
sbb
cli
jmp
enter
adc
in
or
insb
pop
repnz
bound
sbb
movsl
pop
das
add
enter
add
test
mov
cmp
add
adc
outsl
and
and
loope
pop
mov
xor
pushf
repnz
inc
adc
or
xchg
and
loopne
add
dec
add
loopne
add
aas
dec
add
dec
add
add
add
add
mov
ficomps
movsl
dec
or
out
xchg
fs
cltd
das
cs
lcall
nop
int
jg
cmc
pop
adc
inc
aam
ficomps
cmp
jecxz
sti
not
aad
fidivrs
jb
cmp
mov
sub
hlt
pop
jecxz
lds
sahf
mov
das
ret
das
mov
stos
cmp
mov
push
movb
movb
call
dec
add
icebp
jecxz
mov
int
data16
leave
daa
adc
sub
in
mov
clc
pop
mov
jecxz
in
out
dec
inc
cmp
push
xchg
cmp
adc
inc
in
xchg
mov
lret
mov
xchg
pop
cmc
dec
mov
scas
in
cmpb
out
bound
push
cmp
cmpsb
popw
ret
arpl
inc
adc
iret
dec
js
lahf
cmpb
lcall
cmp
xchg
cli
rep
imul
cmc
ljmp
negl
jge
mov
sbb
std
jns
test
cld
jmp
sbb
mov
add
dec
addr16
fldt
insb
mov
pop
dec
sbb
xchg
and
in
mov
addr16
cmp
bound
cld
or
mov
movsb
add
out
pop
jecxz
movsb
cltd
aam
and
fs
nop
test
inc
sub
shll
dec
sti
jbe
jg
mov
inc
pushf
or
pushf
pushl
call
lea
jl
ret
pushf
pushf
push
lea
jbe
bts
stc
shl
adc
sub
shl
dec
cmp
mov
sar
mov
movsbw
shld
add
neg
test
shr
shr
clc
rol
sbb
mov
sbb
shl
clc
rol
add
bswap
movsbw
mov
pushf
pushf
movb
pushf
mov
setno
setno
pushf
lods
push
cmc
pushf
clc
not
test
jmp
not
bsf
mov
call
dec
inc
mov
dec
mov
inc
sub
mov
xor
lar
mov
lods
cmc
std
shlb
xchg
pop
fldt
js
cmp
sbb
iret
xor
in
imul
cli
push
dec
out
or
cmpsb
shl
imul
xlat
les
mov
pop
jge
xchg
xchg
out
sarb
movsb
popf
mov
aam
out
xchg
pop
hlt
adc
data16
stos
pop
sub
xchg
pop
mov
mov
rorb
add
add
stc
cmp
add
pushf
pushf
lea
jmp
jae
sbb
pop
sub
and
mov
dec
je
dec
je
jb
xor
xor
pop
push
stos
cmpsb
xchg
mov
cmpsb
jp
movsl
add
mov
std
sub
movsb
dec
dec
sub
lds
dec
inc
push
outsb
mov
fsin
cmp
test
cmpsb
scas
xorl
int3
mov
gs
mov
jno
in
sbb
bound
scas
imul
testb
xor
mov
loopne
sbb
neg
pop
pushf
test
dec
int3
lea
xchg
push
jmp
pop
addr16
leave
cltd
mov
enter
in
or
test
in
mov
mov
mov
mov
insl
jnp
xchg
adc
sub
fwait
mov
pushf
ljmp
mov
inc
fadds
popf
movsb
cmpsb
jecxz
iret
lods
adc
push
imul
and
fucomp
or
xchg
incl
cmpsb
mov
lods
add
or
mov
outsl
dec
mov
mov
pop
lods
cld
loopne
or
outsb
mov
push
shrl
mov
xchg
sbb
jne
cmp
pop
bound
ljmp
pop
add
les
ljmp
jno
leave
mov
sarl
push
stos
daa
inc
push
pop
aaa
sahf
and
int
adc
test
popa
jle
lds
jecxz
xchg
sbb
cmpsl
nop
inc
lahf
cmpsl
in
and
leave
cwtl
mov
cmp
rolb
clc
stos
aaa
lock
jge
mov
popf
sbb
xchg
jno
push
pop
xchg
scas
adc
stc
jae
sbb
aad
imul
xlat
pop
jg
loop
leave
mov
xlat
test
jnp
sub
dec
and
xor
push
xchg
jge
sub
dec
sub
lahf
arpl
mov
fcmovnu
adc
add
dec
adc
and
adc
clc
dec
xor
mov
arpl
mov
iret
and
xor
adc
call
daa
bound
std
out
cwtl
adc
dec
leave
dec
pusha
insb
add
xchg
push
sbb
cmpsb
mov
data16
test
bound
dec
lahf
jbe
into
mov
lea
mov
lock
xor
test
insb
dec
sbb
lock
fistpll
mov
xor
add
clc
cmpsb
fwait
jbe
jo
push
mov
adc
or
clc
xchg
and
cwtl
jae
ja
lcall
and
dec
les
inc
pop
adc
sub
adc
cmp
mov
cmp
lods
jb
pop
xchg
add
mov
repnz
adc
loope
add
xchg
lret
adc
pop
rorb
loope
fistps
or
sbb
adc
int
mov
xchg
push
out
fnsave
sbb
das
jmp
add
imul
jb
cmpsl
mov
jbe
popl
and
arpl
lods
pushf
popf
enter
mov
and
sub
rclb
pop
pop
nop
cli
push
imul
das
sub
cmp
test
sti
scas
sub
pop
inc
lock
call
aam
inc
ds
dec
sub
addr16
fs
idivl
loopne
adc
inc
cmpsb
rcrl
mov
paddq
ss
sbb
pop
insb
cs
loope
and
clc
pop
jge
mov
jmp
dec
lds
xchg
iret
xchg
pop
negl
adc
pop
push
sub
and
mov
xchg
sub
out
mov
and
mov
ret
lods
adc
adc
cs
add
movsb
adc
pop
test
repz
push
jb
out
or
and
loope
stos
sahf
xchg
inc
xchg
mov
push
shll
cmpsb
lret
ficomps
dec
aaa
sahf
pushf
push
xchg
jne
pop
mov
std
dec
lret
scas
into
sbbl
daa
sub
loop
test
fs
mov
jp
adc
sub
xchg
cmpsl
pop
jo
shr
in
sbb
mov
jge
inc
mov
inc
cs
sub
imul
ret
push
cli
cmc
pop
bound
mov
push
and
adc
pop
cmp
cmpsb
jle
xorl
movsl
lock
fldl
adc
aad
insb
out
int
pop
sbbb
lahf
je
lock
pop
lret
test
lret
imul
stos
call
outsb
insb
xlat
add
aaa
jmp
mov
mov
xor
push
jbe
and
cmp
imul
cs
sbb
iret
pop
jge
jnp
cmpl
pop
jg
lods
lods
pop
mov
dec
inc
cmp
pusha
cmp
idivl
xchg
aad
mov
pop
iret
rclb
mov
in
pop
and
pop
dec
pop
pop
test
stos
xchg
aaa
mov
bound
ds
pop
dec
inc
nop
bound
fmuls
lods
vrcpss
movsl
ljmp
cmc
mov
cmp
jecxz
mov
iret
adc
dec
outsl
xlat
push
dec
or
mov
out
or
aaa
jg
xlat
sbb
add
andl
cs
push
arpl
fidivrs
std
out
lock
jecxz
pusha
ljmp
inc
cmp
pop
and
out
arpl
xor
cli
in
sbb
in
popa
pop
lea
arpl
fstps
add
or
fs
mov
outsl
xchg
insb
rorb
mov
push
clc
mov
mov
pop
in
mov
pop
mov
cmp
daa
ja
movsb
fdivrl
mov
mov
inc
inc
mov
pop
stos
icebp
add
add
dec
aad
sahf
and
dec
push
push
enter
call
std
inc
inc
sub
sub
fucomi
xchg
jns
pop
outsl
mov
fstpt
jg
and
push
xchg
cmp
mov
iret
stos
xchg
pop
pop
sub
clc
mov
cmp
loopne
shl
test
pusha
jge
outsb
jne
add
dec
add
ljmp
ja
mov
jb
fsubrp
gs
leave
or
sub
cmp
sti
shr
cmp
dec
ljmp
xor
cmpb
mov
cmp
pop
in
sarl
jns
cmp
xchg
sbbb
outsl
mov
add
mov
pop
insb
jge
xlat
leave
lahf
fisttpll
fs
add
inc
dec
push
dec
pop
jno
dec
add
push
or
xor
andb
dec
and
pop
arpl
leave
jo,pn
sbb
xor
push
lahf
add
andb
mov
lds
sub
pusha
bound
and
jbe
inc
and
lret
aad
std
push
stos
out
test
cmpb
cmp
pop
jne
and
stc
push
mov
test
addr16
dec
pushf
jb
iret
ret
enter
mov
leave
clc
lcall
and
aaa
mov
stos
call
jae
adc
dec
cmp
cmc
divl
cmpsb
cltd
out
xchg
adc
stc
aaa
sahf
mov
scas
adcb
push
dec
and
push
sar
jbe
pop
popa
jl
jp
inc
cld
or
sub
fmuls
pusha
cs
lcall
hlt
idiv
rcl
test
jne
dec
mov
in
ret
push
or
iret
mov
add
cmpl
fsubrl
lods
jl
pop
mov
and
fcmovbe
outsb
pop
or
pop
cmp
and
add
sub
mov
mov
or
mov
jge
mov
icebp
add
vpandn
or
and
pop
and
cmp
test
test
mov
pushf
loop
xchg
mov
std
xchg
pop
stos
adc
int
cs
das
pop
aaa
add
lret
aaa
icebp
or
je
mov
jns
inc
sbb
dec
inc
pop
mov
ljmp
pop
pop
ja
push
xor
xor
mov
push
insb
stos
or
sbb
lahf
ja
rcrl
lcall
xchg
mov
test
mov
sub
scas
dec
sub
mov
jo
pop
pop
cltd
pop
jno
popf
enter
jl
pop
lods
fistpll
sub
sub
mov
fsts
adc
aam
cmp
and
lcall
mov
sti
cwtl
mov
sarl
dec
lahf
fwait
and
lcall
inc
int
pop
in
clc
jns
sub
or
faddp
mov
dec
dec
je
pop
das
adc
aaa
jecxz
adc
xlat
inc
aas
mov
mov
call
lret
pop
es
shll
daa
or
mov
push
cmp
lea
jmp
xor
mov
adc
outsl
mov
insl
pop
movsl
in
inc
and
orb
test
xchg
leave
sahf
repz
repnz
mov
in
mov
cwtl
int
mov
mov
and
adc
fidivrs
mov
xchg
mov
mov
mov
pop
pop
imul
stc
or
adc
inc
jno
jg
stos
xchg
inc
enter
push
ja
call
jne
cmp
test
repnz
into
mov
fs
add
push
es
ret
cmp
cmpsb
jne
ret
xchg
mov
mov
mov
pop
jnp
fcomps
gs
or
adc
and
clc
xchg
shrb
inc
xchg
insl
pop
daa
lods
push
jb
xor
push
push
inc
jecxz
jno
xor
loopne
adc
mov
int
dec
dec
pop
xor
cmp
add
insl
bound
arpl
add
movsl
mov
repnz
outsl
sub
cmpsl
in
imul
jp
add
mov
test
insl
cli
xacquire
in
push
mov
pop
xchg
outsl
jnp
or
movsl
pop
adc
loopne
lds
jg
ds
mov
cmp
jno
aam
data16
div
out
xchg
clc
imul
xor
aam
fadd
gs
loop
andl
push
das
jl
mov
clc
out
mov
cld
jmp
xchg
mov
mov
out
xchg
mov
in
sub
push
dec
fwait
push
mov
push
sub
idivb
cmc
xor
cmp
stos
clc
dec
mov
xor
mov
sbb
imul
fs
sbb
inc
aam
xor
push
push
push
idiv
sahf
popf
mov
pop
out
pop
mov
dec
stc
mov
mov
into
cmp
or
cli
pmullw
bswap
stos
sbb
dec
and
adc
lahf
push
pop
inc
and
aas
mov
mov
sub
repnz
lea
fists
jle
sbb
and
adc
sbb
rclb
lahf
enter
out
into
sbb
enter
add
dec
xchg
int
xchg
push
or
ljmp
jae
pop
xor
ss
push
pop
fs
mov
xchg
pop
jmp
jl
shrl
movsb
mov
dec
dec
dec
ret
hlt
jbe
pop
insl
ss
imulb
aas
adc
jg
mov
xchg
stos
mov
xlat
mov
test
jnp
and
mov
insl
pop
popa
pop
stos
int3
jmp
mov
adc
pop
pop
or
xor
dec
rorb
mov
cmp
mov
mov
adc
mov
pop
xor
arpl
inc
popa
xchg
test
fs
mov
mov
mov
mov
cs
repz
xor
jbe
inc
stc
mov
imul
std
push
xor
mov
jo
xor
and
adc
lock
scas
addr16
push
rcll
mov
push
out
pop
clc
adc
outsb
insl
les
push
push
gs
xchg
pop
and
sub
mov
cld
cli
cwtl
outsb
es
push
jge
dec
popf
adc
lds
pop
aas
sti
pushl
and
or
decb
and
or
xor
aas
fstl
add
jmp
sahf
pop
ja
mov
adc
push
and
dec
and
out
repnz
loope
sahf
xchg
cli
jb
mov
stos
mull
pop
adc
xchg
or
sbbb
jmp
adc
sahf
sbb
fsubrs
outsb
mov
fdivr
adc
sbb
xchg
mov
rorb
jne
cld
jmp
enter
and
std
push
jp
push
xchg
push
push
xor
pusha
lahf
cmp
mov
add
push
mov
icebp
mov
jnp
cmp
inc
test
mov
insb
outsl
mov
cmp
enter
mov
cmpsl
add
out
lret
mov
std
js
cmc
div
rolb
outsb
lock
leave
ss
loop
inc
push
andl
outsl
aad
stos
jle
ljmp
inc
dec
jg
ror
lock
mov
xchg
mov
in
jne
outsb
xorl
stos
movsl
jp
lret
and
invd
push
add
sub
mov
jg
rcll
mov
movsl
lret
inc
add
cmpsb
mov
lahf
pop
sub
xchg
mov
les
adcl
ss
in
cld
push
bound
cmp
mov
inc
stos
mov
add
add
jo
test
mov
pop
sub
sahf
xchg
mov
negb
aam
or
lods
inc
push
inc
popf
pop
jecxz
jecxz
movsb
fisubs
and
xchg
pop
leave
call
add
mov
out
jb
push
pop
pop
push
xor
xor
dec
js
mov
sbb
pop
add
xchg
loop
lods
js
cmp
inc
sbb
jp
stos
es
repz
jmp
sbb
lcall
imul
jmp
fldenv
dec
or
aam
cli
sbb
fnstenv
xchg
ret
push
and
xchg
insb
xchg
lret
adc
popa
add
aas
push
inc
push
mov
dec
sub
in
inc
xchg
call
call
fwait
mov
mov
pop
pop
scas
int3
fwait
ljmp
xor
scas
mov
movb
inc
prefetch
xor
lods
jns
xor
xchg
jno
in
adc
aam
adcb
dec
xor
adc
sbb
pop
pop
mov
jnp
xor
dec
sub
add
fcom
xchg
insb
mov
test
push
mov
fsts
cld
dec
or
lods
xorb
icebp
cmp
idiv
add
mov
pop
test
xchg
insl
xchg
dec
cli
fildl
mov
lret
out
sub
add
imul
fsubrs
cmp
pushf
icebp
lahf
xchg
outsl
mov
sub
jmp
in
mov
insl
enter
mov
pop
mov
sub
mov
fiadds
out
inc
push
jae
inc
out
call
jbe
out
mov
mov
dec
and
dec
pushf
fs
xchg
pop
cmp
fwait
add
jmp
mov
mov
fdivp
fdivs
or
mov
cmpsb
mov
sbb
rol
mov
pop
loope
cmp
in
lea
or
lret
inc
cmpsl
or
sbb
out
pop
loope
out
xlat
mov
xchg
les
adc
push
mov
icebp
call
push
faddp
mov
cld
adc
imul
out
aad
mov
mov
sbb
inc
mov
ljmp
cmp
add
out
mov
cmp
xchg
loope
sub
fcmovnb
ffree
pushf
lret
jecxz
push
cmpl
mov
xchg
loope
stc
ficompl
loop
mov
or
mov
lcall
push
inc
repnz
hlt
jmp
mov
dec
and
lods
das
out
cmp
jae
test
in
fdivp
sub
in
loope
mov
cmp
mov
lret
test
cmp
sbb
dec
fsubrp
sbb
notl
push
sub
stc
out
xor
test
or
out
out
jmp
cmp
adc
xchg
test
hlt
rcr
loope
pop
cli
mov
pop
out
aaa
je
push
scas
and
fdivs
adcb
mov
mov
pop
adc
je
and
inc
jmp
cmpsb
jnp
test
xchg
jecxz
xchg
addr16
rolb
lods
std
dec
jp
idivb
cmp
mov
xchg
mov
mov
ja
inc
leave
repz
adc
jno
int3
push
sub
mov
mov
popf
ret
test
es
xchg
mov
cmp
iret
icebp
clc
sbb
pop
push
popl
sbb
push
int
add
cmp
inc
orb
ss
push
aad
or
and
pop
jbe
inc
mov
xor
test
outsl
sahf
pop
lcall
imul
push
inc
scas
scas
jae
shrb
enter
mov
sbb
negb
je
cwtl
mov
mov
neg
cli
mov
mov
std
movsb
push
jns
pop
jne
push
cmp
divl
lods
and
inc
add
jno
mov
aaa
inc
insb
mov
shr
aad
faddp
pop
imul
jns
lock
sub
aam
fs
or
shr
ja
enter
mov
repz
push
seta
push
pavgw
fwait
add
sbb
dec
mov
cmp
iret
mov
inc
push
repnz
or
sbb
test
sbb
out
shl
push
insl
adc
xor
loope
mov
lock
dec
xor
loopne,pt
je
xchg
xchg
mov
dec
jecxz
inc
xchg
mov
inc
or
push
call
test
int
icebp
or
fcmovne
cmpsb
enter
mov
mov
xchg
xor
dec
nop
mov
jle
outsl
loopne
cwtl
icebp
xor
sub
inc
dec
add
ljmp
repnz
xchg
add
xchg
and
jg
lea
adc
add
addr16
ret
add
cmp
cs
sarb
dec
adc
sbb
sub
cmp
jle
loope
shrb
aaa
mov
std
inc
xchg
lahf
and
les
lret
ret
jnp
add
or
lock
xchg
jecxz
sti
call
jle
dec
dec
jbe
xor
and
lock
jle
xchg
and
daa
loop
divl
or
jo
xchg
sar
sti
and
dec
inc
sbb
out
shrb
inc
inc
and
push
inc
mov
outsb
lea
add
sub
jno
in
jne
mov
mov
cmp
andl
xchg
in
push
loop
sti
mov
insb
or
roll
dec
and
or
mov
fwait
and
pop
jno
mov
in
mov
test
pusha
xchg
cwtl
sub
repnz
lcall
pusha
push
lahf
xchg
xchg
xchg
xchg
lods
sbb
ljmp
sub
fisttpll
push
lods
dec
jnp
ja
jo
sti
push
scas
mov
mov
inc
pushf
stc
notb
enter
push
dec
negb
push
repz
or
int3
movsb
lods
mov
adc
lea
pusha
dec
or
leave
divb
jne
dec
mov
xchg
test
jmp
cwtl
mov
ja
inc
arpl
rcr
push
mov
and
setne
cwtl
lea
mov
push
cmpsl
cmp
nop
test
cmp
dec
loopne
inc
mov
iret
mov
into
ljmp
xchg
mov
cmp
jecxz
test
push
rolb
hlt
and
jno
scas
cmc
adc
add
lret
cmc
inc
aas
cmp
or
sbb
inc
out
mov
dec
and
xchg
pop
int3
xor
repnz
push
mov
add
sbb
adc
push
mov
dec
andb
ret
dec
push
xchg
fistl
ljmp
std
out
add
jbe
mov
sahf
bnd
jbe
mov
dec
dec
and
sub
enter
xchg
lds
inc
pop
pop
gs
sub
cmpsb
test
jecxz
dec
xlat
dec
mov
jmp
hlt
sbbb
dec
pop
xchg
sub
xchg
mov
call
test
cmc
shl
repz
add
jg
lds
loop
inc
pop
pop
pushf
dec
and
adc
imul
adc
mov
mov
mov
insb
repz
dec
sub
xor
push
repz
sbb
mov
cmp
xchg
and
sub
cli
out
call
fdivrl
loopne
jge
filds
inc
sbb
ja
fwait
mov
add
jnp
lds
das
hlt
sbb
xor
mov
add
pop
std
push
testl
xor
pushf
fwait
mov
insb
scas
mov
fs
mov
lret
jecxz
push
test
int3
cmpsl
mov
in
lahf
mov
arpl
dec
test
into
xchg
shl
out
xor
test
inc
fnstcw
addb
mov
in
push
data16
sub
jno
mov
inc
sbb
lock
loope
mov
xor
adc
mov
cmp
pop
xor
jge
cmp
and
daa
scas
jg
fsubrs
dec
pop
scas
popf
aam
pop
mov
sub
addl
imul
out
and
aad
fwait
xchg
pop
mov
dec
push
dec
xchg
dec
and
mov
lods
xor
lods
push
pop
jae
cwtl
outsl
rolb
sti
dec
ljmp
in
mov
addr16
cmp
add
lock
push
movl
shrl
ret
xchg
cs
sub
push
aad
inc
cs
rcrb
int3
inc
sbb
lea
out
mov
push
shlb
pop
fidivl
fldt
or
adc
in
xor
add
lods
jae
xchg
fxch
xchg
push
jno
scas
lea
arpl
xor
lods
call
push
call
jne
push
jmp
movl
pusha
pushf
lea
jmp
movl
pushl
mov
mov
pusha
lea
jmp
movb
push
bswap
mov
pusha
jmp
lea
jne
jmp
pusha
lea
jb
pushf
pushf
bt
pushf
cmpb
call
lea
je
pushf
adc
pushl
lea
jmp
inc
out
mov
inc
mov
push
movsl
icebp
ja
dec
dec
aas
jns
shl
ljmp
push
and
sbb
lds
loopne
mov
push
dec
popf
adc
shrb
jp
lods
test
stos
icebp
repz
mov
rcl
enter
inc
je
jmp
mov
lods
and
fnstcw
sub
les
out
aad
mov
mov
loopne
int
fimull
adc
cld
lahf
cs
jle
stos
mov
mov
sub
and
lea
mov
push
cltd
ljmp
sub
mov
insb
xchg
call
pushf
sbbl
fists
sti
pop
xchg
pop
add
nopl
adc
pusha
pop
scas
cmpsb
mov
cs
roll
mov
xlat
pop
jp
pop
bt
clc
not
stc
cmp
stc
mov
call
lea
ja
bt
sub
sbb
shr
bswap
cmc
add
btr
bsf
mov
dec
shl
shl
add
mov
pusha
clc
pushl
repnz
pusha
call
fisttpl
ljmp
push
aam
add
std
add
sahf
cltd
fldt
or
inc
push
aas
and
sbb
dec
sarb
shl
lds
div
sarl
cmp
xor
sub
in
cld
and
lods
pop
je
cmp
dec
mov
push
test
shlb
sbb
mulb
popa
jge
mov
sub
bound
adc
cmp
pusha
mov
stos
fdivr
push
rcl
out
mov
sbb
lcall
xor
sub
ficomps
inc
rorl
js
std
pop
mov
mov
or
add
push
loop
xchg
sbb
aam
data16
xor
push
xor
inc
mov
fadd
lds
div
or
inc
lods
push
push
adc
jge
or
clc
add
xor
rcr
mov
ljmp
push
adc
inc
inc
inc
das
mov
hlt
iret
or
out
and
int3
sub
xchg
mov
movsl
fwait
xorl
xchg
ret
cwtl
cmp
sub
iret
ret
mov
aaa
xchg
inc
js
jbe
stos
orl
ret
add
sbb
fbld
iret
rclb
push
push
lods
xchg
jecxz
cltd
cld
mov
add
clc
sub
adc
orl
pop
dec
xor
sub
mov
mov
in
lea
fs
adc
cmp
jmp
xchg
jp
push
mov
addb
and
out
repnz
movsb
or
lods
xor
mov
dec
pop
adc
lods
or
fcmovnb
sub
jo
mov
pop
sub
loop
push
push
clc
pop
test
int3
dec
popf
push
sbb
pop
xchg
aad
subb
or
cmp
mov
xchg
push
add
xchg
into
jne
test
xor
jl
aas
mov
cwtl
leave
add
das
sub
pushf
leave
mul
sub
mov
adcl
add
into
insl
pushf
xor
sbb
loopne
dec
dec
hlt
dec
std
cmc
push
popf
fldenv
pop
push
sub
cmp
cmpsl
fwait
lcall
insb
push
les
stos
cltd
hlt
xchg
ret
leave
sarl
sahf
push
xchg
das
fisubrs
lret
movb
adc
in
fsubr
cmp
pop
sub
jp
dec
movsl
mov
sti
sub
mov
in
add
mov
adc
dec
dec
shl
mov
dec
ljmp
bound
int3
dec
call
sub
mov
pop
dec
loop
test
shrl
dec
fbld
or
xchg
add
add
add
sbb
cmpsb
mov
push
and
inc
fnsave
das
mov
test
lcall
push
add
sbb
popf
mov
mov
push
sahf
imul
pushf
test
repnz
call
sub
push
sbbl
push
fdivrp
mov
std
xchg
jl
cmp
lds
cld
jg
sbb
outsl
fs
int3
daa
das
jno
add
dec
xchg
popa
mov
inc
mov
adc
cmpps
cwtl
call
enter
loope
int
lcall
mov
int
dec
adc
repz
shlb
mov
sbb
xlat
loop
data16
mov
fnstsw
pop
iret
idivb
mov
ss
insb
xor
clc
add
sbb
insl
push
mov
cltd
imul
scas
and
out
inc
mov
push
repz
mov
sub
xchg
cmp
fists
and
mov
bound
and
dec
cmpsl
lods
sub
int3
mov
movl
movsb
inc
out
stos
nop
andb
jl
xor
arpl
sahf
les
stos
push
data16
shl
pandn
mov
mov
xchg
adc
push
adc
mov
jp
pop
jp
out
mov
sbbb
out
pop
out
test
xor
mov
sub
jl
and
mov
add
or
dec
scas
push
repnz
test
roll
ljmp
fwait
into
lods
dec
sbb
test
xor
movsb
pop
dec
cs
ret
test
xchg
in
sub
sbb
mov
mov
clc
outsl
fs
adc
cmp
and
test
and
out
lods
stc
mov
pop
sub
sahf
int
pop
add
mov
push
xchg
orb
fwait
ds
mov
dec
stc
adc
mov
bound
or
test
pop
xor
loope
sub
idiv
daa
mov
stos
lret
and
out
ret
es
addl
jne
dec
fsubrl
and
pop
dec
adc
popf
js
pop
dec
pushf
fucomp
jge
cli
ja
sub
vpaddusb
jns
mov
ret
add
dec
outsl
popa
fs
imul
add
cmpsl
sbbl
push
push
mov
ror
mov
xchg
imul
dec
inc
movsl
push
clc
xor
outsb
int3
mov
and
addr16
push
xor
sbb
sbb
dec
test
cmp
pop
sub
add
inc
sahf
lret
or
jp
dec
pop
cmp
jecxz
je
pop
imul
jbe
or
fcomp
adc
nop
arpl
cmp
ret
clc
orb
fcoml
or
cmpsb
out
push
adc
adc
sub
int
popa
inc
test
repz
mov
fsubr
push
xorl
cmp
aas
out
movsl
adc
cmp
jl
repnz
out
or
mov
xchg
aad
mov
test
lahf
enter
in
adc
xchg
lds
f2xm1
or
push
jecxz
into
xchg
xorl
shr
rclb
cltd
add
push
rcrl
sahf
das
xchg
aad
mov
test
sti
sbbb
cmp
std
push
dec
push
dec
pop
jb
shr
loope
add
cltd
xchg
lea
add
imul
mov
jl
leave
popa
in
ret
mov
jb
movsb
push
xchg
iret
cmp
add
xlat
pop
jmp
xchg
aad
cmp
lret
icebp
xchg
xor
pop
sub
mov
sbb
es
xchg
pop
jle
add
repz
xchg
data16
andb
lock
inc
mov
pop
es
add
jmp
pushf
lea
jae
bt
stc
cmp
call
pushf
jmp
test
sub
out
sub
jno
cwtl
jle
jmp
test
add
ja
jo
mov
int
andb
ficoms
or
sarb
xchg
and
pop
add
bound
mov
ljmp
fnstsw
sbb
sbb
dec
test
push
lea
jns
ret
stos
out
jo
mov
popa
jo
xor
cs
insb
add
jle
pop
sub
pop
lods
lret
loop
mov
aaa
pop
sub
cmpsb
lret
lret
outsl
xor
pop
and
pop
and
in
mov
dec
xor
les
fistps
jecxz
mov
mov
data16
lret
and
mov
xor
push
sbb
ja
enter
inc
daa
scas
xlat
fnstcw
mov
pop
mov
fs
jp
mov
rcrb
xchg
jle
adc
outsb
idivb
dec
test
addl
lret
mov
scas
xchg
jno
popa
pop
or
mov
in
mov
or
pop
repz
add
sbb
ljmp
flds
add
mulps
push
mov
fs
test
ds
cmp
test
sbb
jno
dec
cmpl
jne
movsb
jmp
repnz
leave
vmovq
repz
dec
pop
in
sarl
push
xchg
popf
aas
lock
hlt
push
in
adc
pop
movsb
adc
ja
std
lods
int
das
cmp
xor
es
inc
xchg
dec
daa
mov
mov
pushl
movb
movl
movb
jmp
push
push
movb
movl
push
pushf
lea
jmp
or
cltd
xchg
sbbl
rorl
cmpsl
sub
aaa
pop
xchg
in
add
xchg
sub
pop
ljmp
and
cmp
sub
sbb
and
fistps
add
rcrl
arpl
adc
pushf
pop
loop
mov
dec
jecxz
stc
jo
dec
cld
xchg
dec
sti
mov
jg
roll
out
cmp
or
xor
das
ljmp
mov
insl
sub
pop
sub
dec
mov
divb
pop
orl
mov
mov
in
gs
lock
sub
ror
push
cwtl
add
pop
mov
xor
fwait
jge
adc
sub
or
fcom
mov
pop
fcoml
lea
and
mov
xchg
mov
ror
xlat
mov
das
in
mov
shll
sbb
daa
dec
xchg
jbe
xchg
sarl
scas
lods
or
das
ret
popa
pop
pop
fstpt
jbe
out
adc
stos
add
xchg
ror
mov
adc
pop
sub
dec
push
xchg
sub
inc
jne
scas
repnz
add
jne
lcall
xor
push
lcall
cmp
lea
les
pop
adc
imul
ficoms
mov
lret
cmp
cmp
and
sbb
mov
fsubp
cmp
or
jo
loopne
mov
inc
lcall
cmpsb
cli
lock
dec
adc
or
jnp
add
xchg
pushf
dec
test
pushl
cmc
shl
call
hlt
pop
mov
scas
jns
iret
pop
mov
iret
push
cmc
xlat
dec
dec
adc
fistl
push
mov
push
jno
aam
or
in
lea
inc
xchg
or
push
mov
xor
mov
arpl
int3
mov
pop
mov
mov
or
std
cmp
sahf
fdivrl
fmull
in
in
insl
aad
pop
lret
mov
in
mov
mov
sub
iret
dec
ja
cltd
rclb
add
ss
popf
in
add
adc
or
pop
fistpll
mov
testl
jmp
adc
xchg
stos
ficoms
pop
adc
dec
xor
dec
mov
cmp
loopne
lahf
xlat
sbb
lret
push
pop
aas
inc
and
loope
scas
push
insl
lds
or
mov
add
fstpt
bound
cltd
das
add
lcall
cmp
cmp
divb
sbb
inc
push
rorl
mov
adc
xchg
and
in
outsb
shll
cmp
fldcw
jge
push
movb
movl
jmp
int3
pop
out
pop
sub
insl
xchg
inc
push
mov
test
mov
rorl
xchg
out
or
nop
adc
jae
sub
jbe
lret
lods
xor
insl
loopne
cwtl
sbb
or
mov
cli
popl
out
sbbb
lods
mov
sti
mov
xchg
loopne
movaps
jno
inc
in
adcb
lret
xchg
negb
cmp
mov
push
adc
mov
mov
idivb
into
jo
rolb
mov
xor
les
cmp
mov
mov
stos
sbbl
out
mov
xchg
repz
inc
orb
arpl
mov
rol
xor
mov
sbb
jmp
arpl
test
jl
xchg
stos
xchg
cmp
adc
into
loop
movsb
fucomi
js
lock
and
gs
out
push
int
popf
mov
js
xchg
sub
imul
jmp
mov
xor
xchg
inc
fcompl
mov
inc
pusha
ja
mov
dec
sti
pop
mov
mov
push
ret
sub
fwait
jg
daa
movsb
clc
cmp
cmp
cld
mov
pop
jnp
test
jge
jge
dec
add
or
jnp
mov
ret
stos
test
add
adc
inc
sbb
mov
jp
push
push
pop
add
add
lods
and
mov
mov
push
mov
cwtl
fnstsw
mov
sub
jae
ror
lea
shrb
dec
hlt
iret
xchg
imul
fldenv
adc
xchg
int
shll
cld
test
loope
dec
push
inc
notl
test
push
lock
fbld
divb
mov
call
jo
movsb
xchg
in
jg
pop
sbbb
clc
repz
orl
cmp
notl
mov
cmp
pop
jg
jns
cmpsl
xchg
arpl
loopne
fadds
data16
inc
repz
sub
inc
xchg
cld
dec
mov
pop
lock
sbb
lahf
push
jno
mov
call
cwtl
mov
adc
lods
movsb
mov
loop
jle
xchg
mov
in
inc
push
dec
pop
arpl
xchg
inc
push
loopne
sub
pushf
pop
mov
mov
lahf
pushf
push
xor
inc
jp
sub
mov
inc
mov
dec
rorb
lods
or
and
pusha
inc
data16
rclb
test
push
or
imul
mov
je
or
dec
sub
adc
insl
mov
aam
jle,pn
dec
shrl
lods
test
push
cwtl
sub
jmp
addl
das
loop
imul
cmpsb
adcb
dec
and
push
cmpsl
add
fisubrl
mov
adc
loopne
outsl
xchg
pop
xor
pop
jae
out
jmp
fisubrl
js
das
fimull
mov
jmp
rcll
lea
jo
lcall
repz
mov
jno
in
test
shlb
aaa
mov
out
jl
jmp
dec
je
ret
iret
cmpsl
mov
xor
or
in
pop
add
pop
or
and
gs
add
xchg
cmpsl
sub
bound
adc
dec
inc
es
out
push
inc
insl
cwtl
stos
in
mov
mov
add
pushl
movzwl
bswap
call
shlb
mov
cmp
push
les
dec
movsb
es
push
jo
repz
inc
inc
test
and
lds
push
sub
dec
dec
insb
adc
xlat
sbb
je
pop
ds
lods
icebp
jo
cwtl
sbb
test
or
cli
xor
fwait
push
out
mov
sbb
out
fwait
lods
xor
pushf
shlb
and
pop
sub
out
xchg
pop
cmp
nop
jmp
test
nop
popa
lcall
scas
pop
pusha
inc
inc
outsb
xchg
jge
jb
push
mov
cmc
lret
daa
and
xchg
xor
add
lret
iret
int
jb
sbbl
push
xchg
cli
dec
gs
clc
jne
movb
push
stos
cmpl
jne
ja
mov
sbbb
push
fdiv
xor
and
jl
pop
dec
outsl
sbb
sbb
and
lock
cmpsb
movsl
dec
dec
pop
fldl
sbb
jge
mov
sub
push
adc
mov
lea
call
call
lea
jbe
sbb
cmp
mov
bsf
add
shr
ror
mov
jmp
push
mov
pop
sub
mov
fisubrl
dec
les
mov
test
pushf
test
mov
test
loop
and
roll
fildl
mov
mov
and
std
mov
mov
lods
push
dec
mov
sub
andb
jl
sbb
sbbb
mov
fldenv
mov
test
bswap
lea
pushf
movl
jmp
lea
jb
pushf
movb
pusha
pushf
pushl
ret
lea
pushf
mov
pushl
pusha
movl
jmp
push
lea
call
push
pushf
movb
pusha
adc
call
setbe
setbe
dec
mov
dec
inc
push
lea
jo
setae
mov
push
call
hlt
cmpsl
leave
mov
sub
xchg
mov
mov
out
xor
pop
mov
jnp
loopne
or
mov
scas
xor
sbb
fadds
xchg
push
xorb
in
in
sbb
cmp
nop
lds
rol
mov
dec
stos
fildll
or
xor
fidivs
ja
xchg
adc
fxch
cmp
mov
stc
cmc
rol
push
not
jmp
insb
into
pop
xchg
pop
sub
iret
cmp
cltd
fwait
and
mov
out
xchg
fmul
dec
cld
mov
add
and
fnsetpm(287
in
adc
lea
mov
mov
adcl
add
pop
rolb
or
push
mov
lcall
dec
test
mov
and
leave
icebp
dec
add
inc
and
pushf
movl
push
pushf
pushl
ret
pushf
pusha
lea
jne
daa
bsf
bsf
xor
aaa
bsf
not
mov
sbb
add
neg
clc
pusha
rcl
mov
jmp
stc
bt
sub
pushf
movw
bt
ror
clc
pushf
sub
pusha
pushf
lea
call
push
jmp
aas
push
jae
pop
sub
jp
jecxz
dec
mov
mov
xor
sub
cld
pushf
lds
cmc
daa
mov
mov
add
int
negb
scas
addr16
mov
insb
mov
push
lods
loop
jmp
orb
iret
sbb
ret
ss
and
inc
loop
ja
movsl
push
adc
clc
mov
pop
jmp
pop
insb
xchg
cmc
cmp
lds
imul
fucom
adc
cmp
xor
push
inc
cld
clc
inc
adc
cmpsb
jle
cltd
sbb
mov
call
loopne
mov
lock
xchg
ror
jb
push
fmull
cmp
xchg
cmp
xchg
mov
push
loopne
andb
push
mov
jnp
jl
cmpsb
orl
adc
loop
nop
int3
push
mov
xor
cli
mov
and
out
clc
cmp
jge
inc
push
push
dec
mov
jle
cli
sbb
adc
xchg
popf
inc
aam
push
cmpb
sti
fwait
ljmp
push
rcr
sbb
and
mov
mov
push
mov
jbe
aas
ljmp
push
lcall
mov
stos
push
ljmp
push
adc
xchg
mov
out
ds
xor
mov
xchg
out
sbb
cmp
xchg
cltd
and
inc
inc
shl
xchg
push
sub
inc
rorb
inc
cmpsb
mov
cmp
fists
shl
pop
mov
lock
pop
push
test
jb
sti
xchg
sbb
int
movsl
dec
and
sub
scas
hlt
rcl
pop
rolb
in
ljmp
cmpsb
cmp
push
push
loope
pushl
out
sti
or
repnz
lock
push
fisubl
ret
repnz
cli
scas
testb
ret
out
lock
ljmp
insl
mov
adc
rol
mov
cwtl
idivb
sbb
int3
shr
mov
xchg
push
jl
xchg
jp
into
adc
out
or
cmp
add
inc
sahf
mov
cld
lock
sbb
mov
xchg
sbb
pop
lcall
mov
dec
test
es
lcallw
leave
clc
or
mov
mov
mov
mov
lods
push
xor
mov
xchg
pop
xor
bound
pop
scas
ret
jbe
sub
pop
clc
add
jns
sub
enter
jp
add
or
jp
inc
shl
mov
les
sbb
jle
sbb
jle
xchg
loop
lret
mov
push
sub
or
xchg
xchg
nop
adc
enter
repnz
mov
es
negb
mov
hlt
mov
test
lret
sbb
jmp
pop
ljmp
nop
cmc
adc
sub
pslld
mov
in
popa
xchg
push
cwtl
add
pop
xor
ljmp
add
mov
and
sbb
pop
lea
or
jno
pop
mov
xchg
fcmovb
jbe
aam
jg
movsl
ljmp
fsubs
bnd
outsl
pop
cwtl
cmp
cmp
hlt
mov
loop
fsts
xchg
mov
xchg
cmp
pop
jp
jg
adc
lret
jo
sbb
sub
jb
int
icebp
test
fisttps
rolb
and
jo
subb
movsb
dec
xchg
dec
sub
xchg
call
cmp
cwtl
sub
pop
push
xchg
ljmp
nop
rcll
push
xchg
sti
mov
clc
fidivrs
cwtl
cmpsb
mov
jle
add
jl
inc
push
pop
sub
cmpsb
add
xor
pop
push
cwtl
es
lcall
push
ret
nop
testb
stc
xor
mov
push
push
hlt
mov
pop
imul
inc
repz
push
cwtl
leave
sub
shrl
pop
mov
mov
push
pop
scas
insb
shr
jmp
push
push
test
test
std
mov
xchg
jb
sbb
ja
inc
in
sti
push
mov
adc
fldenv
pop
cmc
jbe
hlt
cwtl
loopne
xchg
jae
mov
aaa
fcoms
lret
jp
es
sub
shl
adc
mov
sub
fcomps
mov
xorb
push
nop
mov
cs
out
xchg
pop
pop
cmpsb
push
out
jg
in
push
testb
bnd
inc
or
lcall
cmp
cmpb
es
out
push
rcrl
out
orl
repz
push
jbe
testl
fldenvs
shlb
pop
adc
sbb
popa
xor
mov
ror
icebp
sbb
cmp
mov
jnp
pop
test
nop
mov
mov
out
pop
loope
ret
sbb
es
add
xlat
aam
pop
push
inc
dec
xchg
shll
sub
mov
iret
rolb
ret
cltd
bswap
xor
aaa
fimull
jnp
push
jg
nop
std
add
shlb
jb
sub
push
pop
test
xor
insl
pushf
mov
cmp
sbb
and
mov
pop
in
jge
lea
hlt
mov
les
fists
cltd
aaa
sbb
mov
test
aaa
xchg
out
fstpt
push
push
mov
out
mov
push
fincstp
rcrb
mov
cmp
adcb
inc
xor
mov
clc
out
mov
mov
pop
jno
xor
adc
ret
mov
sbb
rcrl
in
pusha
scas
xor
outsb
adc
or
lods
pop
ljmp
repz
shrl
es
insl
sbb
std
aad
clc
pop
imul
outsb
lds
mov
push
mov
push
jp
mov
mov
sti
jo
test
jle
fdivs
cmp
std
mov
add
in
sbb
mov
mov
inc
test
nop
add
pop
cwtl
cmp
add
dec
pop
pushf
pop
test
cmp
ret
xchg
mov
jecxz
add
bound
mov
ret
sbb
push
cmc
movsl
imul
fiaddl
jp
pop
out
lods
into
repz
test
xchg
mov
lods
jo
xor
fisubl
sbb
mov
xor
and
loop
push
je
divb
cmpb
push
test
push
mov
xor
mov
mov
outsb
adc
cmp
push
ds
add
sbb
dec
mov
push
fcomi
xlat
mov
xchg
sbb
pusha
add
pop
lock
repz
test
addb
xchg
test
iret
pop
clc
or
pop
push
jge
push
decb
xor
outsl
push
fstps
insb
push
les
adc
icebp
es
lahf
jb
cltd
xchg
dec
addr16
or
or
jbe
cmp
aaa
mov
mov
cli
data16
push
repz
inc
push
push
add
pop
push
cld
mov
out
xor
jge
xchg
jns
lods
push
out
jne
adc
add
mov
cltd
fstps
fs
test
or
clc
push
ljmp
dec
xlat
scas
cmp
lods
jmp
cmpsl
dec
out
xchg
in
imul
mov
repz
jl
mov
adc
pop
fisubl
nop
leave
insl
pop
rcrl
popa
jno
adcl
andb
xchg
scas
adc
repz
or
push
testl
fidivl
pop
or
xchg
cmpsb
mov
inc
xchg
jo
xor
lds
dec
lahf
mov
rclb
sbb
push
xor
sbb
loopne
mov
hlt
xchg
inc
xchg
nop
outsl
xchg
cmp
pop
cwtl
hlt
hlt
aas
ficoml
xchg
test
rcl
lock
inc
cltd
xchg
sti
mov
jge
dec
repnz
xchg
cmpsb
inc
in
or
popf
imul
hlt
xchg
js
adc
ljmp
mov
xor
aaa
sub
addr16
mov
xchg
sahf
repnz
test
adc
adc
mov
out
lock
pop
sbb
cmpsb
add
xchg
ljmp
lret
mov
mov
jl
lea
and
js
push
sti
pop
ret
cld
adc
pop
mov
or
xchg
shlb
fs
lahf
inc
andl
aas
xchg
push
das
dec
enter
out
push
sbb
jne
cmpsb
push
into
out
idivb
vmovq
cld
and
sub
mov
push
sbb
out
cli
pop
cwtl
sub
dec
push
inc
test
loop
or
fistpl
xchg
or
fldl
add
jg
jecxz
fwait
sbb
js
test
jp
cmc
in
repnz
cmp
mov
xor
xor
dec
lahf
das
adc
jbe
sbb
out
faddl
mov
push
sub
mov
xor
es
mov
mov
mov
jp
rclb
repnz
mov
aam
fcmove
cltd
jge
adc
cmpsb
or
jl
push
push
jbe
int3
add
mov
cmp
mov
mov
push
je
repz
xchg
mov
cmp
test
cltd
push
cli
adc
lds
mov
mov
mov
mov
xchg
int3
cmp
mov
cmp
out
in
cmp
xchg
es
jp
subl
dec
pop
fwait
adc
mov
lcall
rcll
push
xor
mov
pop
insl
adc
inc
enter
dec
pop
xchg
ret
ljmp
xor
bound
or
out
imul
jns
int3
enter
imul
or
jne
xchg
mov
sbb
out
mov
test
iret
xchg
les
mov
ljmp
movsb
out
push
jbe
inc
into
ljmp
es
pusha
add
fists
bound
cmp
insb
cmpsb
int
mov
sub
lcall
mov
pop
shrl
shl
outsb
dec
ds
push
mov
stos
bswap
adc
rorb
mov
mov
aam
jle
mov
fidivl
adc
jecxz
sbb
jo
int3
jbe
xchg
fstps
inc
push
das
pop
cltd
repz
es
dec
fisubrs
adc
xchg
inc
push
mov
cwtl
repz
xchg
loope
inc
cmp
js
icebp
call
jne
xchg
xchg
push
push
push
mov
lods
minps
rcr
out
movsl
push
iret
or
mov
leave
out
aam
rcr
cmc
mov
das
sbb
lret
adc
cli
aaa
xchg
or
ja
xorb
push
imul
sub
and
mov
cltd
sahf
lods
sti
cmpsb
cmc
jge
adc
pop
cmp
or
jle
mov
adc
in
std
xor
imul
sbb
es
push
push
clc
and
ret
movsb
mov
cmpl
roll
mov
cmp
loop
lret
mov
jns
sbb
xor
into
fstps
pop
push
cwtl
icebp
mov
cs
cwtl
out
fcmovbe
stos
fildl
repnz
pop
mov
pop
or
mov
dec
pop
xor
inc
jae
sub
icebp
adcb
mov
stc
xchg
push
inc
in
les
jge
out
mov
es
push
flds
int3
jb
xchg
js
add
lock
fistl
cmc
push
sbb
repnz
adc
pop
fdivrs
lcall
fcmove
cwtl
dec
div
mov
dec
cmpsb
pop
fdivl
sbb
mov
pushf
cwtl
add
cmpsb
vpshad
out
jnp
imul
fs
adc
mov
cmpsb
popa
into
rolb
clc
pop
pop
aaa
xchg
sub
cmpb
shll
xor
xor
ss
lcall
push
hlt
pusha
mov
xchg
lret
jl
jl
mov
ljmp
xor
aad
dec
cwtl
push
push
lahf
cmp
es
daa
test
aaa
mov
pcmpeqd
fld
scas
mov
enter
lret
mov
push
pop
rorl
rcrl
jbe
fwait
out
test
lcall
fadd
in
adc
or
int3
shll
in
shll
or
xchg
add
sbb
mov
test
and
xorb
hlt
or
leave
ds
scas
mov
inc
jbe
imul
mov
jecxz
lods
repnz
into
pop
sbb
adc
xchg
les
cld
ret
in
xchg
in
ss
mov
dec
sbb
fistpl
rcrb
xchg
ljmp
pop
add
or
add
xchg
cmp
outsl
jge
push
mov
int3
push
shl
add
add
leave
loopne
add
and
sbb
or
adc
insl
mov
xorb
mov
das
sbb
pop
cmpl
ss
loop
cmp
nop
fcomp
lods
clc
cwtl
rorl
xchg
movsb
or
push
imul
lods
mov
les
aad
jge
inc
mov
lret
xchg
mov
clc
rorl
test
mov
push
shl
fstps
xchg
pop
jne
andl
out
adc
shrl
int
icebp
or
cmpsl
cli
pop
mov
add
mov
jnp
movb
jg
aaa
cmpsb
jne
push
lods
push
cmc
ljmp
xchg
lock
fsubr
cmpsb
ffreep
jg
push
xrelease
pop
stos
xlat
pop
lock
or
sub
in
xorb
fwait
into
sub
imul
inc
cmp
lods
cmp
xchg
adc
inc
and
cmp
pop
out
sarl
pushf
cwtl
mov
fmuls
cmpsb
cwtl
inc
push
adc
pop
adc
cmp
mov
sub
mov
adc
rol
add
jne
ss
clc
mov
xchg
cmp
leave
out
call
xchg
leave
xlat
fimuls
add
std
adc
enter
int3
repnz
lea
xchg
push
pop
sub
mov
dec
xchg
xchg
or
or
fwait
xchg
jae
mov
ret
jp
and
or
ds
pop
pop
dec
adc
adc
xchg
out
jnp
fimull
mov
arpl
adc
jge
mov
cmpl
pop
loopne
dec
or
orb
xchg
fsubp
pop
jl
daa
sub
adc
pop
sbb
xchg
fimull
ficoms
test
add
mov
sbb
adc
mov
int
stc
shll
mov
aad
adc
arpl
mov
repz
ss
xor
icebp
mov
or
sbb
push
mov
jo
inc
xchg
adc
lcall
xchg
sahf
xchg
push
stos
sub
push
adc
sub
mov
and
sbb
data16
mov
in
jb
jl
xor
inc
cwtl
mov
dec
scas
cmpsl
mov
ljmp
mov
adc
adc
test
jg
and
mov
or
pop
insb
mov
sub
fidivl
jp
into
mov
ss
mov
cwtl
push
aas
das
mov
adc
mov
lcall
xchg
xlat
xchg
or
adc
jl
or
xchg
lods
shrb
scas
cltd
push
jecxz
fbstp
or
jp
adc
sbb
lock
pop
push
aam
lods
mov
xchg
setl
lahf
pop
cli
inc
xor
div
mov
stos
jle
stc
sahf
in
xchg
rcrl
bound
xchg
or
bswap
loop
das
mov
push
mov
sub
lret
cmp
sbb
mov
pop
test
popl
cmp
adc
or
outsl
jge
test
fcomps
test
jg
sbb
addb
js
psrld
in
cltd
pop
mov
inc
int3
popf
adc
outsl
mov
mov
adcb
fistpl
sahf
mov
sub
sub
pop
rcrb
or
xchg
xor
pop
jle
popf
xchg
sbb
cli
sbb
dec
scas
and
data16
xchg
sahf
jno
int
notb
mov
ds
sub
xchg
mov
and
arpl
mov
jno
adc
push
mov
in
rclb
xchg
pop
fdivrl
ljmp
test
cmpsl
mov
out
mov
sbb
addr16
mov
das
xchg
push
mov
xchg
adc
popa
movsl
xor
lahf
cmpsb
cltd
mov
in
cltd
dec
bound
fisubs
stc
sub
push
xchg
call
ljmp
dec
adc
mov
test
jp
sub
jle
sar
lds
in
push
mov
lods
pop
and
sbb
jg
mov
jl
mov
lahf
sbb
int
nop
cltd
and
cmp
into
fcoms
cmc
sbb
dec
dec
jge
jae
lea
mov
test
adc
cli
mov
lock
xor
das
mov
stos
mov
addl
clc
mov
cwtl
js
pop
or
push
mov
rcr
xchg
mov
push
inc
leave
mov
mov
dec
mov
stc
and
sahf
xchg
rcll
cwtl
or
xorl
sahf
jle
mov
push
fsubrp
shll
mov
das
aas
inc
lock
mov
jbe
orb
jge
pop
add
nop
inc
cltd
pushf
mov
scas
fisttpll
outsb
jg
imul
in
repz
out
test
sahf
lock
jae
jge
testb
adc
ljmp
into
scas
pushf
insl
sbb
test
or
mov
enter
inc
inc
fcomps
push
loopne
ljmp
outsb
xchg
xchg
movsl
aad
mov
notb
fldenv
hlt
fsubs
scas
pop
lret
loopne
dec
pop
cmpsb
into
jp
loope
jg
loopne
orb
mov
cmp
jno
mov
inc
hlt
sbb
jl
stc
jae
lea
mov
mov
leave
das
xchg
fidivrl
pop
gs
dec
movsb
addl
pop
cmp
mov
in
mov
adc
into
loopne
sub
jno
int
in
out
push
and
push
mov
pop
adc
or
testl
lock
add
or
sbb
xchg
mov
pushf
or
sti
test
div
sbb
nop
adc
in
stos
xchg
sub
mov
ja
mov
adc
mov
mov
sub
leave
jge
lret
aad
mov
stos
xor
movsb
xchg
and
add
jp
sbb
clc
sbb
cmp
loopne
jns
cmpsl
imul
aad
cmp
adc
add
mov
pop
mov
ret
dec
and
mov
mov
roll
fimull
cmp
leave
jbe
into
int3
adc
lds
ljmp
cli
jg
xchg
push
pop
scas
sbb
sahf
fwait
movb
daa
aas
std
cmpb
jnp
sbb
xchg
shr
loop
test
xchg
test
arpl
add
push
sub
xchg
cltd
push
mov
mov
xor
adc
nop
fcomp
adc
jne
sahf
mov
clc
ss
xchg
jg
sub
loopne
into
pushf
hlt
fcomps
pop
enter
loopne
out
loop
lock
adc
dec
jl
fiadds
adc
hlt
mov
insl
mov
add
sahf
fwait
shr
sub
or
aam
out
fiadds
or
int3
ficoml
xor
ljmp
sbb
shll
enter
pop
lock
adc
nop
test
add
fcoms
jns
inc
sahf
xor
gs
xchg
stc
dec
cmp
xchg
popf
jne
jl
sbb
mov
sbb
mov
mov
mov
pop
roll
lcall
pop
dec
lret
push
xchg
cmp
xchg
mov
mov
adc
fldcw
rcll
xchg
mov
and
add
inc
negb
mov
and
xchg
ret
sbb
adc
daa
pop
adc
into
fisubl
aam
and
lds
mov
xchg
sub
test
sbb
cmp
lret
and
push
dec
pop
repnz
jno
lcall
sahf
mov
movsb
sub
movsl
or
cmc
jp
sbb
iret
filds
dec
out
jns
cwtl
hlt
fcmovb
nop
pop
arpl
mov
jns
cltd
xchg
or
or
popf
mov
dec
int
psadbw
mov
lock
push
cwtl
clc
xchg
jp
and
test
adc
lcall
cld
xchg
jno
cwtl
push
cmpsl
push
xchg
mov
repnz
cltd
mov
fwait
pop
les
adc
pop
push
inc
es
fmul
xchg
adcb
mov
iret
jnp
sbb
jl
mov
aad
pop
cmpb
dec
cmp
and
lods
fadd
fnstsw
fsubl
pusha
mov
cld
fwait
lock
and
jb
scas
bound
cmpb
cltd
adc
dec
call
das
jno
inc
lcall
out
mov
sbb
ljmp
jge
test
jl
lahf
test
xchg
shl
fidivs
mov
and
test
mov
neg
sbb
cli
pop
jb
sahf
mov
push
aam
sbb
mov
push
stc
fdivrl
mov
dec
int
adc
rclb
ds
jno
lcall
ficomps
push
adcb
pop
jo
xchg
sbb
fidivrl
jle
xchg
popf
and
nop
sbb
xor
jl
adc
fidivs
sbb
lock
test
ficomps
inc
lahf
movsb
ficoml
fmuls
orb
push
xchg
mov
cmp
push
jno
mov
fstps
sahf
nop
iret
mov
mov
jnp
ljmp
push
lea
nop
cmp
mov
sbb
les
and
mov
mov
mov
fstpl
dec
jle
in
pop
outsl
sub
cmp
aas
hlt
mov
aaa
into
mov
test
psllw
inc
or
or
lds
dec
cmp
ja
neg
xchg
cwtl
mov
and
pop
sahf
out
mov
sbb
ja
cwtl
dec
push
lock
arpl
and
xchg
add
int3
mov
shr
jnp
add
push
pop
aam
pop
out
cltd
test
cwtl
jl
inc
jp
mov
jp
test
add
mov
pop
adc
jns
adc
and
in
push
mov
outsb
mov
adc
scas
and
xchg
sbb
cmpps
iret
call
xchg
movsl
xchg
in
mov
and
adcl
xchg
cmc
xor
or
mov
mov
inc
loope
mov
and
ret
sbbl
mov
dec
mov
dec
xor
xchg
or
jb
hlt
shlb
xchg
aaa
inc
fwait
inc
adc
fists
ds
mov
popa
mov
jl
rolb
dec
xchg
push
int3
nop
mov
inc
popf
add
xchg
cbtw
and
aam
sbb
icebp
lods
mov
mov
je
scas
sub
scas
inc
orb
cmp
fsubrs
jb
mov
lea
or
sbb
pushf
fstps
enter
push
adc
mov
sub
adc
push
ficoml
mov
or
mov
cwtl
out
imul
int3
xchg
lahf
fcoml
shrb
push
scas
adc
lret
pop
inc
sub
cld
jae
fnstsw
jge
or
pop
lret
pop
push
mov
mov
mov
adc
fdivs
pop
push
push
mov
mov
and
adc
adc
xchg
dec
in
sbb
or
push
jnp
std
inc
cld
pop
ds
rcrb
sub
out
mov
sub
mov
out
pop
ss
in
or
mov
xchg
inc
mov
sbb
lcall
cli
sahf
movsl
mov
xchg
out
notb
cmp
pop
add
adcl
repz
jle
pop
inc
mov
jae
sub
test
je
mov
inc
test
jne
adc
mov
popa
cmpsl
push
inc
mov
fidivrl
sbb
test
fnsave
scas
push
adc
pop
mov
cmpsb
cltd
out
xorb
pop
xor
jnp
push
stc
jge
scas
cs
fmuls
nop
into
hlt
lods
dec
sbb
sub
cwtl
sbb
cmpsl
push
mov
subb
in
ljmp
dec
adc
lock
jg
fcmove
mov
adcb
cwtl
jo
ljmp
xlat
negb
dec
cmp
fldenv
aad
out
cltd
cmp
hlt
ret
mov
mov
sbb
fwait
add
test
dec
into
mov
cltd
push
sub
jmp
mov
stos
fadd
aaa
por
push
in
ficoml
mov
add
int3
mov
out
ficoml
mov
ja
jno
test
pop
inc
aaa
cs
jle
rcrb
stos
aad
std
popf
push
jp
adc
pusha
rcrb
out
adc
inc
adc
mov
xchg
push
jne
lret
or
add
sbb
and
outsb
xor
into
mov
jle
lea
xchg
arpl
xchg
jns
ljmp
add
mov
mov
dec
or
ret
xchg
sub
ficoml
scas
lock
lea
fmul
sbb
pop
loop
push
sbb
or
pop
pop
and
dec
jnp
das
jge
cltd
cmp
in
pusha
movsb
ret
insb
repnz
rorb
xchg
popf
adc
ret
inc
addl
mov
test
mov
sbb
in
cmp
js
jg
sbb
mov
xor
jge
fcompl
cmpsb
xchg
mov
dec
mov
ficoml
adc
xor
fcomps
dec
mov
repnz
adc
or
stos
fwait
add
mov
xor
and
popa
enter
inc
sahf
jl
out
push
ss
adc
out
pop
mov
loopne
mov
pop
mov
incl
cmc
push
adc
mov
inc
mov
inc
iret
fdivl
xor
fwait
push
sti
and
ficoms
adc
aam
nop
mov
xlat
stos
sub
mov
sbb
les
mov
add
xchg
jo
scas
hlt
scas
arpl
cltd
repnz
cltd
in
sbb
test
jecxz
int3
add
xchg
xchg
cmp
negl
and
mov
ss
lret
test
mov
mov
pop
xchg
idiv
mov
dec
pushf
jle,pn
and
xchg
mov
cltd
iret
inc
lea
ljmp
add
mov
add
jb
jle
inc
mov
cmp
mov
dec
loope
cmp
and
repnz
mov
fiaddl
add
sahf
cld
setns
call
test
push
mov
mov
iret
push
jbe
mov
add
mov
lcall
mov
and
inc
cs
ficoml
aas
cmpsb
nop
stos
push
jo
xchg
mov
push
cwtl
and
dec
cli
mov
ret
sti
cmp
push
cmpsb
xor
xor
orb
movsb
xor
jle
in
and
test
pop
or
cmp
xchg
mov
sbb
sti
push
repnz
aas
pop
xchg
or
mov
ret
adc
mov
imulb
or
adc
cmc
loop
mov
je
neg
scas
cmp
imul
mov
repnz
dec
add
into
jp
jbe
fcoms
cli
stc
xchg
ljmp
jl
mov
pop
mov
movsl
mov
sbb
iret
lcall
enter
incb
mov
push
sbb
bnd
fcompl
scas
add
or
or
xchg
mov
or
or
movhlps
lcall
sbb
dec
adc
sub
lcall
mov
ljmp
pop
jnp
mov
cmpsb
or
pop
mov
ja
leave
pushf
cmc
int
call
xchg
push
sbb
int
jp
sub
cmpb
jg
das
push
lret
pop
mov
sbb
je
sti
push
mov
mov
test
lock
nop
sbb
adc
mov
jge
pop
adc
mov
andb
pop
cwtl
add
lock
add
adc
test
sbbb
test
shrb
push
jb
cltd
fstpl
sbb
into
push
loope
add
push
jecxz
insl
test
fcom
pop
inc
jnp
jbe
xorb
mov
adc
xchg
pop
and
mov
cwtl
loopne
cwtl
jb
orb
or
sub
jo
and
or
sti
lock
adc
jl
dec
cwtl
loope
call
cltd
mov
fcmovne
mov
mov
jns
adc
mov
or
outsl
cli
repnz
mov
and
sahf
or
mov
mov
nop
outsl
in
hlt
xchg
sbb
mov
mov
xchg
mov
aaa
mov
pop
xchg
xor
lcall
popf
iret
test
insb
xor
faddl
xlat
insl
ficoml
shrb
mov
cltd
jb
bound
dec
and
sub
mov
std
xorb
mov
jle
adc
iret
xchg
sti
xor
hlt
mov
popf
js
inc
in
adc
and
mov
xchg
and
inc
add
mov
lods
sbb
out
lret
jb
pushf
imul
sub
add
dec
ljmp
ret
sub
push
xchg
adc
pushf
jb
pop
sub
cmp
out
xchg
adc
pushf
pop
mov
test
xchg
je
or
cwtl
xchg
idivl
adc
repz
aam
and
into
ljmp
mov
lcall
xor
nop
imulb
xor
cmp
add
cmpsb
and
adc
shlb
fimull
mov
add
ljmp
or
cltd
jb
sbb
dec
incl
ljmp
scas
cwtl
stos
adc
and
fcomip
mov
add
popa
fwait
cmc
xchg
xchg
cmp
js
lret
fdiv
ljmp
je
clc
popf
push
cwtl
gs
nop
sahf
cltd
mov
push
push
lock
mov
push
movsl
xchg
movq
cmpsb
pop
or
ljmp
xor
ss
mov
mov
jne
push
mov
xchg
dec
mov
ret
xchg
sbb
fstpt
or
lods
and
call
call
mov
insl
mov
jge
add
ljmp
jle
sahf
xor
add
mov
fisttpl
outsb
xor
enter
jne
mov
stc
pusha
and
es
add
xchg
pop
jno
mov
pop
sti
pushf
jns
lea
nop
lods
xchg
xchg
sarb
inc
mov
cmpb
enter
push
lret
mov
cmp
mov
mov
mov
push
std
and
out
cld
sbb
xchg
sub
into
add
jg
adc
mov
or
les
mov
adc
xchg
sbb
pop
cmp
mov
dec
cwtl
push
fcompl
jbe
mov
or
movsb
ljmp
dec
cltd
dec
out
xchg
push
xchg
sti
fnsave
mov
test
pop
mov
cmpsl
stos
cltd
stos
mov
loopne
outsb
into
jns
mov
roll
push
inc
mov
cwtl
in
pushf
add
xor
jp
push
mov
dec
sbbb
push
popl
shlb
adc
and
cwtl
sub
inc
add
int3
fsubp
mov
addr16
jb
ficoml
enter
xor
add
xchg
mov
mov
or
sbb
sbbb
sub
sub
pop
push
cmpsb
sbb
cwtl
inc
insl
or
nop
jae
pop
out
mov
out
mov
cli
jae
int3
in
mov
xor
popf
mov
pushf
xchg
lret
add
add
jo
push
fsubs
sbb
sbbb
xlat
jno
int3
sbb
test
and
rcr
out
in
dec
enter
fdivr
std
lahf
and
nop
or
out
loopne
mov
adc
call
test
pusha
fs
jne
mov
or
sbb
adc
test
rcrb
jl
fsubl
xchg
incl
mov
push
rolb
iret
mov
in
sub
sbb
loopne
push
into
adcb
pop
sbb
movsl
ja
cli
sub
inc
add
xchg
xor
pop
and
es
ret
push
cmp
idivb
nop
jecxz
mov
xchg
jle
and
in
adc
inc
stos
loop
aam
xchg
hlt
dec
out
or
ficoml
sbb
mov
jmp
ud1
cmp
push
mov
sbb
fwait
mov
fdivrs
fdivrs
lock
xchg
pop
repnz
add
mov
xchg
inc
es
lods
sbb
sti
mov
mov
cltd
push
xor
jno
add
xchg
mov
mov
xchg
and
jl
arpl
fimull
fcoms
pop
andb
xchg
cmpsb
xchg
cmp
xor
cmpsb
or
hlt
mov
pop
notb
movsb
mov
mov
xchg
or
mov
test
int3
loope
hlt
clc
xchg
push
orl
push
sahf
xchg
out
cwtl
or
sbb
cwtl
add
pop
adc
xchg
addr16
adc
cmc
cmpsl
into
sbb
pop
jl
sbb
dec
into
movsb
sbb
sbb
fcomps
rcrb
cmpsb
fistl
in
lret
dec
aam
cmp
fcmovb
test
jge
inc
mov
adc
lock
ficoms
cltd
dec
scas
mov
aam
pop
lahf
push
lods
or
and
cltd
pop
xor
push
add
hlt
ficoml
mov
adc
inc
xchg
inc
jl
push
adc
xchg
mov
std
add
in
jnp
testb
adc
or
movsl
ficoml
out
mov
pop
sbb
or
cltd
bound
mov
dec
pop
pop
mov
ljmp
scas
xchg
push
sub
pop
movb
jg
sbb
mov
ljmp
out
mov
pop
mov
jge
gs
and
xor
shll
repnz
scas
mov
and
mov
adc
mov
das
mov
ljmp
push
xchg
sub
inc
into
mov
mov
out
test
sub
mov
mov
out
into
jl
fmull
cwtl
jg
dec
mov
je
test
xchg
lret
mov
ljmp
inc
ret
rcrl
add
lea
mov
sub
inc
adc
mov
ficoml
add
mov
adc
mov
push
jno
inc
ljmp
push
cmp
in
test
adc
repnz
adc
xchg
mov
pop
cmp
xchg
stc
and
lock
nop
cltd
pusha
mov
lret
loop
push
pop
push
idivb
cmpsb
sub
add
iret
out
test
imul
ja
mov
jo
push
sub
leave
jnp
adc
xchg
jb
jmp
pop
sbb
scas
notb
or
mov
ret
in
in
mov
adc
mov
inc
mov
ret
or
xor
ljmp
mov
dec
xor
jp
cltd
add
sbb
movsl
fidivrs
nop
mov
adc
loop
jnp
hlt
fsts
inc
ret
push
and
add
lea
xchg
cmp
mov
pop
sbb
pushf
and
popf
test
mov
cmp
and
subl
and
popl
mov
rcll
adc
dec
jmp
mov
jmp
out
ds
rclb
mov
popl
adcb
lret
xchg
aad
mov
jl
cmp
xchg
cmp
and
push
ljmp
mov
sub
mov
mov
xchg
fistps
xor
adc
jne
mulb
in
nop
mov
ljmp
cltd
adc
in
test
adc
inc
add
ljmp
mov
fidivrl
int
adc
sahf
adc
push
jmp
xchg
adc
push
xor
add
push
fdecstp
sbb
test
jl
lods
jae
loopnew
test
sbb
mov
in
sbb
push
repnz
pop
paddw
add
popl
lods
ljmp
lock
dec
imulb
in
nop
and
mov
push
lock
jnp
xlat
mov
outsl
push
stc
jg
sbb
dec
and
stos
mov
or
jmp
or
adc
xchg
rol
stc
xlat
cltd
jnp
push
cld
rclb
mov
cwtl
insb
popf
mov
dec
ljmp
mov
sbb
pushf
jb
adc
pop
and
lods
insb
ds
and
push
pusha
or
and
push
push
push
sbb
inc
lret
aam
adc
mov
pop
icebp
mov
pop
jno
into
clc
sub
mov
lahf
cld
adc
leave
rclb
into
mov
inc
xchg
iret
adc
shl
cwtl
ficomps
mov
jmp
pop
fisubl
ds
pushf
mov
mov
ljmp
clc
lcall
repz
sbb
push
out
jae
jle
mov
cmp
jecxz
jp
fadds
repz
insl
xlat
hlt
mov
out
repnz
insb
lcall
mov
enter
adc
mov
push
insl
mov
adc
jne
mov
cmc
js
xchg
add
imul
mov
pop
cld
mov
xchg
mov
mov
and
fisttps
jbe
clc
dec
sbb
mov
adc
xchg
sub
leave
scas
lret
adc
push
fisubs
xchg
push
xchg
pop
adc
sarb
enter
fldl
hlt
es
mov
lods
cltd
xchg
lock
mov
cmp
dec
jg
mov
jmp
fs
cwtl
sbb
xor
or
mov
stos
dec
mov
or
repnz
jmp
mov
mov
adc
pop
add
adc
out
stc
es
loope
nop
mov
inc
sub
cs
mov
repnz
cltd
in
cltd
cmp
and
int3
fistpl
mov
iret
and
sbb
inc
jno
in
jecxz
mov
jne
aam
push
cwtl
sub
sahf
out
dec
mov
cmc
lock
mov
mov
sub
mov
jne
dec
mov
push
sbb
push
or
pop
shl
xor
adc
mov
pushf
dec
mov
int
or
hlt
mov
test
das
fadd
xchg
push
out
pop
insl
jmp
add
je
rclb
inc
leavew
jae
repnz
faddl
mov
adc
jne
popf
ror
sbb
into
xchg
adc
fsubrs
out
or
into
mov
rorl
push
loopne
sbb
movsb
mov
iret
inc
or
mov
push
ficoml
jnp
cmp
sbb
mov
out
cltd
repnz
call
mov
jae
push
mov
xchg
mov
mov
add
call
rolb
sbbb
mov
adc
nop
or
xchg
aaa
dec
popf
divb
stos
sbb
test
cmp
pop
adc
jg
xchg
sahf
imul
rcrl
fidivs
add
aaa
cmpsb
push
lcall
adc
dec
xchg
ficomps
pop
cmp
shlb
cli
lret
mov
testl
cmp
mov
cmpsl
inc
jle
inc
mov
test
mov
push
hlt
test
fcomps
idivl
mov
fwait
out
pop
ret
adc
inc
push
lock
add
jmp
imul
push
mov
adc
in
jne
add
fdivr
mov
cmpsb
xchg
and
jge
test
add
test
xchg
adc
movsb
cltd
and
mov
movb
mov
ds
add
lock
in
xchg
gs
movsb
clc
out
mov
push
push
repnz
subl
mov
ss
mov
jecxz
pop
xchg
and
js
scas
mov
adc
cmp
nop
sahf
jge
mov
mov
push
cmpsb
mov
mov
and
aam
lea
add
mov
adc
fstpt
push
movsl
mov
jmp
loop
add
test
xor
sbb
mov
adc
andb
leave
aam
adc
nop
in
and
push
test
and
mov
dec
inc
mov
dec
mov
stc
push
sbb
xor
mov
pushf
or
fimull
pop
leave
arpl
add
cmc
test
not
pop
sahf
adc
imul
shrb
cli
add
insb
data16
cs
xchg
testb
arpl
push
in
jb
cli
or
ss
jle
mov
adc
mov
xchg
mov
adcb
pop
leave
push
dec
inc
jns
adc
and
repnz
movsl
rorb
std
repnz
shll
xchg
xchg
movsl
leave
push
test
push
pop
and
nop
scas
fsts
cs
adc
ljmp
scas
cmpsb
lahf
cltd
ds
stos
dec
in
xor
xchg
lret
xchg
lock
les
lret
shll
popf
or
mov
inc
fwait
pop
add
leave
push
sbb
ficoml
jnp
jle
push
sbb
stc
cmp
inc
sahf
sbb
pop
fisubs
sahf
mov
lahf
aam
push
xchg
pushf
dec
mov
movsl
cmc
jnp
pop
mov
jae
ret
inc
div
sbb
stos
ja
stos
les
sbbb
test
in
mov
test
xor
pop
cli
mov
add
xchg
push
repnz
out
adc
jb
leave
xchg
adc
sub
das
pop
jp
lods
in
shrb
sahf
rol
pop
mov
mull
test
ret
inc
jp
or
imul
pop
jge
rcrb
jno
dec
push
dec
mov
aas
cmp
add
mov
nop
cmp
inc
rcrb
xor
ds
shr
xchg
xor
int3
sub
fidivs
lret
es
xor
pop
fsubl
cmp
ds
cmc
sahf
or
inc
cmpsl
rcrb
push
lret
jmp
aaa
or
and
add
ljmp
pop
push
adcb
mov
addb
enter
and
loope
add
in
les
jp
addr16
inc
adc
mov
scas
mov
outsl
push
fdivrl
mov
jp
jl
or
aam
xchg
sbb
gs
dec
adc
int3
adc
lea
mov
mov
jge
cwtl
cmp
xchg
jl
cltd
mov
xchg
adc
push
xchg
out
adc
xor
pushf
std
shll
sbb
pop
pop
xor
in
idivb
cwtl
adc
jg
mov
cs
out
sbb
adc
out
cmp
in
inc
adc
xchg
pop
pushf
mov
pop
and
ret
sbb
cmp
mov
adc
and
pop
rclb
daa
lock
mov
mov
cld
popf
icebp
repz
xchg
push
in
add
adc
xchg
hlt
cmpl
clc
mov
nop
and
push
jge
mov
cmpsb
add
in
adc
loopne
ljmp
add
fisttps
pushf
and
sub
mov
lcall
jg
mov
xchg
les
orb
leave
gs
jno
mov
int
popl
cmp
jp
stos
cmp
add
test
xchg
cltd
cmp
fiadds
pop
mov
add
or
ret
adc
sahf
nop
push
loop
cmp
xor
lea
xchg
push
xchg
and
inc
lret
dec
mov
scas
jns
add
xor
mov
sub
and
in
scas
jns
scas
pushf
fsubp
lcall
push
testb
les
cs
jmp
ficompl
sti
int3
nop
imul
fnstenv
xchg
aaa
or
movsb
data16
cmp
adc
lret
xor
xchg
sbb
test
scas
xor
lock
dec
sbb
lcall
sbb
or
loopne
pushl
fisubrl
jge
mov
sbb
or
jecxz
hlt
bound
loopne
fnstcw
cld
stc
out
xchg
fstpl
pusha
sbb
adc
enter
xchg
sbb
adc
adc
add
adc
and
dec
xchg
pop
mov
out
xchg
pushf
aam
jo
rcl
lods
sbb
jp
fdivp
mov
sbbb
xor
or
push
push
inc
fucomi
arpl
mov
xchg
cwtl
aam
cmpb
xor
lods
inc
into
mov
fwait
cwtl
push
loopne
push
adc
hlt
cwtl
push
push
mov
inc
pusha
pushf
mov
ljmp
sbb
bound
rcrb
add
xchg
xchg
into
sbbb
shr
and
addl
jno
aad
mov
ljmp
loopne
and
cltd
rclb
jl
mov
jp
mov
call
adc
and
jne
lahf
lcall
test
push
movsb
or
mov
lods
lcall
jle
mov
inc
or
subb
xchg
inc
fdivs
leave
xchg
cs
sub
or
sbb
sbbl
xor
mov
adc
hlt
dec
jecxz
test
icebp
dec
mov
fisubs
roll
adc
sbb
cmovns
aad
cltd
fmull
lds
fidivl
mov
sbb
mov
mov
sbbb
sub
sahf
loop
in
lea
pop
mov
seta
and
mov
repz
mov
xor
adc
cmp
aad
mov
pop
jne
add
mov
cmpsb
push
movsb
sarb
sbb
pop
xchg
cwtl
dec
mov
mov
clc
les
cld
cltd
push
rcrl
or
xchg
push
aam
jl
jb
xchg
jg
ljmp
xor
in
mov
pop
push
xchg
or
mov
adc
aam
stc
sbb
mov
xchg
pop
pusha
adc
int3
in
test
mov
mov
inc
outsb
xchg
lcall
out
movsb
mov
out
mov
and
mov
mov
jl
add
into
es
xchg
mov
call
loop
std
adc
nop
pop
fdivs
sbb
jle
jl
mov
lea
fimull
inc
fcompl
ja
nop
xchg
cs
aaa
add
std
out
fidivrl
dec
mov
sbb
cwtl
pushf
and
adc
mov
out
stos
mov
mov
adc
push
call
arpl
sub
xlat
mov
mov
hlt
or
mov
or
push
push
push
jge
sbb
lock
and
mov
orb
cmpl
call
daa
xchg
adc
sbb
pop
test
xor
mov
mov
jl
div
fcmovb
jg
pop
fsubrp
mov
enter
in
push
adc
sbb
ficoms
or
pop
add
push
mov
pop
xor
out
shrd
into
test
into
or
add
shrb
sbbb
test
cld
cmpb
mov
sahf
or
add
mov
cwtl
cltd
leave
dec
mov
std
mov
cmp
je
xchg
lcall
xchg
push
les
sub
adc
sbb
aas
push
out
jp
jge
fbstp
scas
std
jb
mov
mov
cwtl
xchg
add
out
jns
cwtl
cltd
and
sub
fadds
addr16
outsl
mull
push
and
stos
movsl
enter
pop
lds
out
pop
out
mov
int
sub
ficoml
jge
jle
dec
cli
sbb
sti
mov
xchg
xchg
es
xchg
ljmp
fdivr
test
mov
or
movsl
aaa
adc
out
sbb
aaa
jns
lea
push
xor
xor
addb
inc
xchg
popa
ss
pop
aad
scas
ljmp
xchg
pushf
xorb
jmp
mov
repnz
adc
in
arpl
addl
sbb
pop
mov
fists
ljmp
pushf
mov
fdivl
xchg
subb
testl
sbb
sarb
leave
into
flds
fcomp
mov
sub
pushf
mov
jb
cltd
inc
xchg
xchg
pushf
mov
xchg
fdivr
pop
inc
mov
incb
and
rol
arpl
pushf
mov
adc
movsb
dec
jae
in
mov
rcrb
repz
fists
jb
dec
sbb
pusha
rclb
jg
test
out
fcoml
mov
mov
bound
jmp
daa
jle
loopne
lahf
xchg
xchg
test
adc
xchg
jle
and
mov
push
dec
inc
cmp
nop
jecxz
or
xor
into
out
cwtl
mov
adc
sbb
xlat
insl
rol
inc
mov
ficoms
add
js
test
inc
sbb
clc
jge
adc
push
ret
aaa
sub
dec
push
mov
add
mov
mov
mov
cltd
je
mov
cmp
out
lea
mov
cmp
sbb
jp
xchg
mov
add
test
leave
pop
dec
pop
incl
sti
xchg
lahf
jae
xor
fmull
xchg
dec
repz
cmpb
sub
sub
push
jl
cltd
mov
lea
mov
movsb
enter
test
cmpsb
mov
xor
test
push
adc
mov
inc
std
loopne
and
test
pusha
flds
inc
lods
pop
mov
jp
mov
pop
enter
mov
pushf
dec
adc
hlt
push
cltd
lahf
pop
push
enter
mov
cwtl
ficoml
push
dec
mov
mov
push
inc
aas
mov
push
mov
or
cmp
xchg
stos
add
incb
mov
or
into
mov
inc
xor
enter
int3
in
jl
or
push
pusha
xchg
movntq
out
out
repnz
test
inc
dec
jge
and
inc
cmpsb
loopne
mov
call
hlt
subb
add
mov
into
mov
cmpsb
mov
xchg
fisttps
xchg
sbb
cmc
sbb
popf
paddsb
stc
ficoms
rorb
fstpt
cwtl
sbb
sub
into
loopne
dec
adc
mov
cltd
xchg
cltd
imul
or
sahf
push
xchg
inc
jb
sub
lock
mov
test
mov
sbb
sbb
cmp
pop
sub
insb
fwait
push
test
adc
repnz
mov
and
insb
pop
add
sahf
dec
pop
filds
adc
rorb
or
or
xchg
xchg
push
sbb
mov
mov
inc
loopne
jl
jecxz
push
cs
xchg
inc
sbb
cwtl
adc
scas
loopne
movsb
loope
in
mov
ljmp
push
fcmovu
shll
pop
daa
dec
mov
cld
adc
cmpsb
decb
xor
mov
push
jl
adc
jg
jl
push
push
cmp
xchg
lods
lret
lahf
push
adc
scas
mov
mov
mov
cltd
mov
xlat
add
adc
cs
hlt
lahf
xchg
and
ret
sbbb
inc
xchg
inc
mov
dec
int3
sub
mov
mov
lcall
xor
orb
sbb
test
sub
hlt
in
push
mov
lea
in
mulb
jp
scas
adc
fmuls
pop
sbb
jp
repz
enter
test
or
testb
rcrb
push
jp
sti
mov
outsb
pop
push
bound
cmp
push
dec
mov
cli
test
mov
mov
mov
pop
stc
mov
and
adc
mov
pop
push
fcompp
cwtl
loop
in
leave
in
mov
decl
add
imul
enter
fst
xor
mov
adc
gs
lret
xor
dec
nop
in
mov
jle
and
movl
mulps
hlt
cmc
mov
sbb
daa
add
repz
into
xchg
jne
cmpsb
or
ficomps
faddl
test
andb
test
repnz
inc
les
sbbb
out
mov
push
test
adc
fsubr
push
mov
pop
nop
pop
leave
addr16
fcomps
sahf
enter
mov
cmc
mov
adc
cmp
imul
mov
clts
jne
mov
pop
xchg
lock
mov
shlb
into
mov
movsb
sbb
jne
xchg
xchg
sub
loop
xchg
adc
fcoml
clc
fisttpll
or
xchg
in
xchg
xchg
cmp
adc
mov
out
inc
push
sub
xchg
jae
sub
sbb
imul
mov
lods
mov
or
sbb
adc
add
in
adcb
lcall
or
fcoms
pop
sarb
popa
int
inc
mov
lds
popf
fmuls
adc
inc
cmp
lcall
cmp
jle
dec
and
enter
lods
mov
xorb
xor
pusha
adc
pop
fcmovbe
aad
cmp
popa
add
pop
dec
lods
lcall
cmp
repz
test
mov
adc
arpl
ficoms
mov
or
dec
mov
mov
pusha
cwtl
sub
adc
pop
add
repz
mov
jmp
mov
repnz
movzbl
push
enter
ficoms
loope
xchg
lret
mov
dec
js
sbb
push
cmp
push
or
scas
sbb
sub
in
and
mov
imul
jno
adc
push
scas
inc
lods
into
xor
pop
popf
jge
mov
js
add
cmp
mov
cmp
movsb
sbb
xor
and
mov
mov
dec
xchg
enter
rcrb
adcb
fstl
mov
cs
adc
inc
and
xchg
ret
fstl
cltd
nop
xor
hlt
lods
divps
pop
pop
mov
repnz
dec
inc
xchg
jbe
mov
pushf
int
lods
jecxz
adc
setae
push
mov
aas
mov
addb
int3
mov
cltd
xchg
jno
add
dec
jns
in
icebp
jmp
imul
pop
into
mov
mov
push
cmpsb
push
rolb
cmpsb
mov
pushf
push
cwtl
push
imul
popf
orb
add
repnz
stc
adc
adc
add
sti
cmp
test
adc
cld
sbb
cltd
mov
cwtl
ljmp
add
or
rolb
out
mov
mov
xor
mov
popf
and
add
loop
adcb
or
repz
mov
push
add
pop
movsb
icebp
sti
out
dec
je
push
or
clc
adc
or
mov
mov
xchg
add
fwait
hlt
addb
sahf
sub
repz
rcpps
jns
mov
nop
xchg
cmc
sbbb
pusha
std
neg
jle
test
loop
jnp
stos
mov
cli
fcompl
cmp
mov
out
gs
int3
inc
stos
mov
cmp
shlb
popf
cs
push
adc
fsin
jecxz
jo
mov
iret
inc
js
dec
and
in
ficoms
fmul
cwtl
xor
push
or
mov
notl
fidivrl
or
adc
adc
or
mov
pop
and
jae
es
sub
xchg
bound
adc
jno
mov
jno
adc
fimull
int3
or
add
sbb
jb
outsl
fmulp
in
out
icebp
or
fimull
sahf
rep
enter
xchg
fimull
cwtl
xchg
dec
imul
mov
cmp
xor
pop
out
cwtl
or
jle
dec
push
xchg
rolb
adc
sbbb
dec
xchg
pusha
bound
jmp
shl
mov
xchg
ud2
xchg
into
and
mov
cmp
ret
call
cltd
mov
lret
inc
jnp
add
fxch
enter
call
in
ljmp
add
lret
xchg
cwtl
jno
faddl
andb
lcall
test
mov
sub
into
enter
pop
push
lret
ja
lcall
dec
jns
fdivrp
cltd
push
enter
cmpsl
scas
movsb
loope
lock
lea
adcl
push
sbb
addb
push
xlat
testl
das
fnstcw
and
sbbb
inc
cmp
jp
mov
cmpb
repnz
xchg
or
mov
inc
idiv
adc
ljmp
shrl
fsubrl
in
mov
sub
les
jge
cmp
scas
push
cmpsb
hlt
rcr
sbb
repz
mov
mov
or
repnz
cmpb
pop
mov
mov
rcll
jbe
test
xchg
xchg
cmp
lds
add
jle
fiaddl
lcall
adc
fistpll
jle
and
xchg
adc
cltd
or
pop
inc
xchg
cmpb
js
push
cs
sahf
mov
add
lret
and
inc
pop
push
jp
xor
jno
lock
mov
stos
xchg
sbb
xchg
aaa
mov
sub
test
dec
or
xchg
jl
cmp
cltd
jns
cmp
dec
inc
or
stos
sbb
iret
push
add
test
test
adc
inc
je
xor
mov
ret
push
mov
sub
fisttpl
rclb
lret
popf
cs
sbb
pop
clc
xor
add
xchg
mov
adc
mov
sub
mov
push
cwtl
pop
and
xchg
adc
push
inc
fwait
insl
das
into
rclb
dec
adc
stos
mov
jge
pop
repnz
mov
rcll
pop
loopne
push
push
sbb
lock
fisubrs
popa
pop
add
ljmp
and
ja
or
fwait
push
fdivs
mov
pop
inc
jbe
into
ficompl
sbb
pop
insb
jbe
ficoml
subb
repnz
pop
sbb
iret
add
out
inc
mov
add
inc
test
popf
cltd
loop
shrl
inc
xchg
mov
jecxz
add
call
nop
adc
rol
mov
xchg
fwait
inc
adc
mov
ljmp
add
pop
fs
insb
cltd
movsb
fimull
push
mov
pushf
xor
pop
fsubrl
int3
lcall
jle
into
clc
sbb
mov
lods
lcall
mov
jl
mov
scas
bound
xchg
push
cltd
std
jle
or
lret
cmpl
adc
xchg
mov
inc
jae
int
xchg
push
sti
cwtl
jp
cmp
sbbb
push
cmpl
or
sahf
cs
subb
leave
aad
or
scas
fcmovbe
sbb
lret
in
push
pop
pop
imul
lods
lea
clc
aaa
movsb
sarb
push
or
rcrb
ret
mov
ljmp
into
rclb
imul
stos
ficompl
jae
into
xchg
outsl
aam
hlt
mov
sbb
cmp
push
mov
xchg
xchg
imul
in
repnz
jo
mov
mov
leave
dec
rolb
shl
sub
mov
or
pop
je
mov
or
jmp
adc
cmp
ljmp
jns
jle
unpckhps
lea
inc
push
xchg
mov
int3
push
xchg
test
sbb
jp
bound
adc
stc
mov
xchg
push
mov
mov
mov
or
ret
lock
pop
cwtl
xchg
dec
cli
and
sbb
mov
and
movsb
push
into
call
adc
aad
andl
rolb
xchg
test
adc
cs
sbb
inc
mov
repnz
mov
fsubs
call
pushf
ror
and
xlat
mov
and
or
add
imull
sub
rcll
pop
sub
pop
fldl
test
mov
setb
cmp
inc
mov
cli
out
sbb
pop
jp
jp
cmp
pop
icebp
mov
data16
mov
jp
cmp
jb
mov
rcrb
cltd
subb
jnp
decl
movsl
cwtl
mov
ss
mov
inc
add
scas
fildl
mov
mov
jl
cwtl
fldcw
xchg
sub
push
rcrb
ljmp
sub
lret
loope
jle
inc
insl
push
xor
cmc
or
and
dec
subb
mov
jne
leave
lcall
add
scas
rcl
sub
lcall
pop
fcoms
dec
adc
outsb
mov
pop
mov
enter
pusha
mov
push
mov
cmp
add
adc
fisubl
nop
insb
cmp
push
rclb
pop
sbb
fsts
aad
bound
adc
roll
test
in
adc
std
xor
push
outsl
pusha
push
or
xor
mov
xchg
cs
jecxz
dec
adc
dec
fiaddl
rcr
fdivrl
popf
mov
push
sbbl
sbb
push
nop
jge
test
pop
sbb
fsts
testb
pop
pop
clc
lea
mov
ret
negb
nop
bound
dec
push
jno
or
and
mov
jl
xchg
push
in
or
stos
add
push
cmp
test
mov
mov
cmpsb
sub
adcb
fdivrs
nop
mov
aaa
push
insl
hlt
sarb
xchg
shll
mov
mov
fldl2e
pop
pop
addr16
mov
mov
and
fcmovb
out
cli
dec
out
sahf
aad
xchg
mov
loope
ficomps
pop
push
call
cltd
push
cwtl
mov
cmpsb
push
fnstsw
dec
leave
mov
sub
jl
loop
subb
and
imul
jecxz
and
bound
mov
jo
test
imul
or
mov
mov
xor
mov
fcoml
mov
movsl
out
pushf
movsb
ljmp
cmpsl
mov
cwtl
xchg
cmpb
lea
pop
sub
ret
mov
outsb
xchg
fcmovb
cmp
jno
lock
ds
push
jae
pushf
loopne
fistl
in
dec
pushf
cltd
sbb
cmp
pop
push
loop
xchg
push
mov
push
jb
aad
int3
in
sbb
mov
adc
stos
xchg
inc
mov
add
test
xchg
mov
sahf
hlt
stos
ljmp
std
enter
mov
add
fcoms
idivb
mov
xchg
cmp
adc
add
mov
adc
sub
cltd
sbb
mov
fcmovu
and
pop
adc
inc
pushf
lcall
lret
xchg
cltd
xor
cltd
rol
sbb
pop
cwtl
cmc
leave
sbb
mov
lret
jo
adc
jp
test
mov
es
repz
fimuls
mov
or
sbbb
movsl
push
aad
out
nop
add
mul
stos
jecxz
mov
inc
jg
nop
and
adc
subb
mov
cltd
inc
mov
repz
fmuls
aas
les
popf
or
add
or
mov
loopne
xchg
mov
cmp
fisubl
call
sbb
cmpsb
repnz
sbb
jbe
dec
cli
sbb
mov
xchg
add
ficoml
mov
stos
jmp
in
loopne
rcr
jp
fwait
je
and
sbb
cwtl
gs
rcrl
pushf
mov
mov
push
js
imul
or
cltd
test
stos
stos
loop
ret
lods
pop
cmp
pop
test
cltd
aam
enter
xchg
jbe
jp
sbb
daa
xchg
rcll
cwtl
xchg
push
popl
loope
rcr
or
loopne
cmp
rcrb
xchg
sbb
test
mov
and
inc
pop
fsubrs
stos
pop
xor
mov
sbb
add
adc
push
add
ret
mov
jl
dec
cmp
movsb
sub
andl
insb
xchg
push
out
ljmp
inc
aam
add
fsubrs
aam
daa
cltd
sub
ss
adc
lock
faddp
mov
add
pushf
fwait
hlt
jle
outsl
jbe
jmp
lds
repz
mov
rcrb
jmp
cwtl
mov
aad
xchg
jp
mov
stos
add
sarb
pop
or
out
xchg
pop
adc
stos
xchg
mov
push
outsl
adc
sbb
pop
nop
cmc
testb
mov
pop
jle
in
add
adc
mov
adc
ljmp
pop
loop
stc
ficompl
dec
outsb
mov
lahf
fwait
adc
sbb
into
xchg
iret
lock
shll
mov
aaa
mov
jp
test
mov
rcll
jno
test
cld
jl
xor
jl
les
mov
xchg
into
cli
rol
cmc
out
aam
sti
sbb
xchg
or
pushf
mov
and
push
hlt
mov
shrd
and
dec
or
into
mov
call
lods
xor
jmp
dec
rorb
inc
inc
lds
mov
mov
mov
es
in
pop
xor
fwait
sub
loope
pop
mov
inc
dec
fdivrl
in
pop
dec
loopne
mov
out
dec
mov
jo
add
test
adc
xchg
lahf
mov
fmul
cltd
ja
xor
and
in
mov
adc
fsubrl
mov
ret
mov
inc
gs
popf
bnd
clc
or
adc
mov
lea
test
mov
inc
mov
inc
cmc
pslld
arpl
pusha
insl
test
and
xchg
pop
add
into
rclb
push
imul
mov
sub
stos
pop
adc
jo
pop
fcoms
mov
add
movsb
lcall
push
test
sbb
xchg
cltd
xlat
das
out
loopne
insb
jge
cltd
ror
xchg
shl
sub
loope
cmpsl
jg
sbb
dec
popa
adc
jne
aam
in
sub
dec
sub
ret
fisubrs
inc
repz
mov
xchg
lahf
cmpl
cmp
cltd
mov
ret
repz
scas
adc
mov
add
in
cwtl
or
xor
mov
pop
sbb
xor
test
fidivrl
cwtl
movsl
mov
mov
xchg
jne
adc
jnp
or
push
sbbl
or
cwtl
cmp
test
push
clc
cmc
lahf
repnz
pop
jns
rcl
pop
mov
or
sub
cmc
xor
sub
adc
and
mov
inc
sbb
mov
mov
sbb
xchg
test
jnp
push
push
scas
xor
lret
mov
xchg
cmp
out
pop
hlt
mov
int3
aad
sti
sbbb
or
cmpsl
or
std
cmp
mov
adc
in
pop
lahf
jmp
xchg
repnz
icebp
insl
nop
sub
test
cwtl
into
and
popf
jp
jno
xor
mov
jg
mov
repz
movsb
sahf
insl
loope
jno
hlt
in
arpl
mov
mov
adc
ljmp
cmc
push
sahf
sub
mov
cltd
mov
push
fsubs
hlt
enter
and
sbb
adcb
push
nop
jmp
xor
pop
adc
test
stos
xchg
pop
or
int3
mov
leave
imul
xchg
pop
icebp
add
cwtl
mov
sbb
lock
inc
into
loopne
insb
in
inc
test
or
div
or
pop
cmpsb
enter
add
and
sub
or
adc
jno
cmp
vmovhps
jns
cmpsl
dec
mov
sbb
mov
pop
in
mov
ret
push
xchg
mov
fidivl
pop
neg
into
mov
xlat
jae
dec
out
cld
adc
push
cmp
adcb
dec
and
in
adc
pop
xchg
sbb
cmp
repnz
es
mov
rcl
push
test
nop
jnp
xchg
divl
arpl
sahf
mov
ss
aad
cwtl
mov
mov
cltd
pop
jae
andb
xor
cmp
xchg
addr16
adc
cli
xlat
mov
fwait
loopne
and
aas
mov
ficompl
aam
cs
cmp
push
inc
mov
push
xchg
dec
inc
lock
mov
movsl
cli
aam
sub
in
mov
gs
mov
lea
cmp
test
jp
xchg
test
push
filds
mov
movsl
arpl
mov
insl
inc
adcl
pop
lods
xor
inc
shlb
cwtl
or
xchg
ljmp
sbbb
or
add
stos
sbbl
push
pop
fcomip
add
pop
call
mov
adc
xor
dec
xlat
test
jecxz
out
sbb
fwait
xor
sbb
outsb
popf
aad
sbb
and
and
xchg
xchg
push
stc
sahf
popl
aad
sbb
pop
shll
adc
movsb
lahf
repnz
push
ljmp
dec
jno
repz
in
shll
push
pop
xor
pushf
imul
sub
into
mov
cltd
fstpl
push
ljmp
jo
mov
std
inc
sub
cld
nop
fcomps
lahf
pop
jbe
mov
pop
mov
sbb
cmp
cmp
outsb
and
or
xchg
ja
mov
mov
fstpt
mov
mov
les
mov
loop
inc
stos
ficoml
test
filds
imul
mov
adc
push
xchg
cmp
cmp
in
mov
xor
sbb
or
jl
mov
in
movsb
cmpb
gs
rolb
or
adc
data16
and
ss
in
cmp
pop
fwait
jle
fsubl
repz
stos
mov
sub
outsb
addr16
jne
sbbb
mov
push
fdivr
sbb
and
jo
push
mov
pop
xor
shl
shll
add
cmc
jb
xchg
mov
test
sbb
je
hlt
fcoms
pop
xchg
pushf
ret
int3
lret
push
mov
sbb
mov
push
jle
xchg
mov
js
mov
add
in
mov
inc
fnstsw
ljmp
fs
cmp
out
sbb
push
dec
xchg
push
data16
ficomps
sbb
lock
into
cmc
gs
pop
adc
out
adc
xor
aad
cwtl
pop
add
sbb
sbbb
repnz
lds
sbb
xchg
test
push
jns
out
test
loop
enter
mov
add
pop
jp
packuswb
outsl
imul
call
pop
mov
xchg
and
lahf
out
pushf
sub
jmp
xchg
cmp
xchg
rcll
jge
jae
mov
es
jp
sbb
add
lock
jae
ja
and
mov
or
and
mov
jae
ds
jle
test
xor
fstpt
push
mov
out
mov
stc
adc
or
aaa
fucomp
in
xchg
push
out
mov
jp
pop
dec
nop
mov
dec
and
mov
adc
add
inc
jge
xchg
stos
push
std
or
cmp
out
add
or
push
loope
ret
outsb
adc
fldenv
sbb
add
mov
aam
pop
gs
mov
jle
outsb
jmp
adc
and
xchg
lods
call
repnz
adc
sahf
fstpt
fidivl
xchg
add
adc
xor
shlb
or
mov
repnz
cwtl
ljmp
sub
jo
xchg
ficoml
dec
out
lcall
dec
hlt
fcompl
std
movsl
jle
add
push
mov
pushf
cmp
das
cs
or
call
std
dec
out
adcb
adc
outsb
cmpsb
fimull
pusha
addl
sbb
mov
faddl
jns
rcr
ljmp
push
xlat
rcr
or
pop
pop
lret
ficomps
inc
data16
push
insb
popf
test
mov
or
mov
xchg
repz
xor
cmp
rcrb
xor
pop
mov
mov
jne
mov
mov
sahf
nop
pop
add
adc
mov
scas
arpl
jns
jo
data16
mov
scas
out
sbb
jno
sti
pushf
or
adc
cmpsb
aad
lods
adc
or
repz
xor
in
push
in
xchg
gs
cmp
xchg
cltd
adc
xchg
fidivrs
or
fmuls
ljmp
mov
fmul
push
mov
mov
mov
and
mov
sbb
cs
out
sbb
add
and
mov
pop
adc
sbb
xchg
lods
xor
add
mov
out
xchg
and
mov
out
xor
adcb
mov
dec
mov
fcomi
loope
lret
xchg
lret
adc
xchg
shr
jge
fdivs
mov
or
out
aam
pop
xor
mov
stc
and
cs
enter
and
stos
inc
xor
rorl
xor
cmpsl
outsl
or
and
mov
push
scas
stos
sbb
ss
clc
fmul
int3
pop
pop
jg
mov
ljmp
ret
sub
xchg
cmp
pop
jp
adc
sbb
mov
jae
pushf
lods
mov
lea
inc
subl
adc
jns
mov
ret
sbb
es
arpl
pushf
pop
push
and
jb
xchg
lahf
test
or
das
jb
pop
push
mov
push
fisttps
mov
adc
adc
mov
jle
cs
divl
adc
enter
rcl
test
adcb
jge
mov
ficompl
xorb
rcll
outsb
xor
lret
lcall
pushf
cltd
push
imul
pop
mov
adc
mov
out
bound
daa
mov
sub
test
js
shl
fstl
jge
xchg
jnp
repz
mov
cmp
and
andb
xchg
jle
ja
aam
loop
adc
test
std
xchg
jle
cli
rclb
add
hlt
cwtl
fwait
jp
pop
xchg
mov
loopne
ret
lret
sbb
mov
jns
dec
adc
pop
mov
addr16
inc
push
jbe
jp
xchg
push
jo
ljmp
pop
and
in
lret
pop
lahf
movsb
ljmp
fs
lcall
xchg
mov
scas
dec
shlb
and
rcll
aam
sub
mov
in
xchg
aam
idivb
movsl
add
xchg
and
in
lods
repnz
adc
ret
in
cwtl
stos
pushf
hlt
out
inc
in
mov
or
mov
icebp
xchg
out
adc
push
jle
call
lock
mov
cltd
pop
loopne
or
sbb
jg
call
add
jp
int3
adc
hlt
negb
lods
lock
daa
fnstsw
fmulp
orb
jnp
xor
jp
or
mov
push
test
mov
ds
cmp
lock
movlps
add
jno
into
mov
inc
jb
dec
in
lock
nop
sbb
or
jb
ficompl
cmp
hlt
jb
fadds
pop
fcomps
inc
test
mov
xlat
jl
cltd
mov
pop
int3
mov
push
add
fisttps
xchg
jmp
ficoml
sarb
mov
pop
mov
mov
add
jl
mov
cwtl
push
add
inc
sbb
ret
xchg
fisubl
cmc
xchg
movsb
pop
dec
mov
pop
loopne
jno
or
movsb
push
ljmp
xchg
ret
xchg
fdiv
stos
push
mov
mov
fnsave
add
jbe
pop
or
movsb
or
or
dec
jl
dec
notl
mov
push
pop
movsb
xchg
mov
inc
cwtl
push
mov
call
mov
mov
push
add
rclb
mov
cmp
shll
in
jl
jmp
cwtl
test
sbb
scas
adc
jl
shlb
mov
rcrb
push
fsubs
int3
scas
sbb
ljmp
mov
rcrb
adc
loop
xor
push
xchg
rol
or
cwtl
ficompl
push
add
jl
fstpl
jo
adc
ljmp
push
jns
repnz
pop
add
test
aam
adc
or
ficoml
ror
cmp
in
mov
or
into
and
repnz
divl
jnp
ret
pop
or
push
or
jae
sub
push
loopne
pop
hlt
pop
ficoms
dec
decl
stos
lds
mov
adc
and
cmc
mov
in
push
cltd
pop
imul
rclb
mov
mov
ja
outsl
negb
or
sbb
cbtw
push
sti
sbb
hlt
or
arpl
repz
adc
mov
xorl
lock
call
xchg
idiv
mov
clc
fstl
xor
xchg
or
imul
nop
push
xchg
cwtl
mov
inc
dec
adc
push
dec
mov
scas
xor
imul
push
jae
outsl
xchg
idiv
fcoml
les
fistps
nop
pop
loop
xor
loope
sbb
dec
test
pushf
sbb
or
imulb
int
xchg
in
mov
jmp
imul
add
sub
push
std
cwtl
out
in
push
mov
mov
rolb
mov
mov
cwtl
add
xchg
or
bound
jne
in
cmpsl
orl
in
divl
xchg
cli
shll
xchg
adc
adc
adc
movsl
std
jl,pn
mov
stos
test
jl
xchg
xor
in
sbb
cmpsb
test
arpl
movsl
push
and
test
ss
hlt
mov
sbb
cmc
outsl
add
cmpsb
mov
adc
test
fdiv
aaa
shl
popl
insl
mov
xchg
pop
int
xchg
mov
pop
xchg
repnz
push
jge
or
shlb
mov
or
shrl
aam
call
lahf
push
fdivr
sarb
test
or
test
add
sahf
xchg
push
cmp
mov
push
stc
mov
ficoml
mov
inc
add
arpl
mov
dec
and
add
jb
mov
xchg
in
mov
negl
rcrb
push
popf
adc
test
add
adc
mov
fwait
xchg
cmp
imulb
jnp
out
test
adc
cltd
bswap
add
sbb
outsl
mov
sbb
popl
test
dec
into
cmp
ljmp
push
xchg
push
add
xchg
ljmp
mov
or
mov
testb
xchg
popa
or
jae
loope
out
repz
shll
iret
hlt
jne
aas
mov
filds
fcoml
pop
jl
fwait
sub
inc
iret
mov
jp
test
lea
mov
xchg
add
and
pushf
ljmp
imull
data16
in
cmp
dec
loop
rclb
cld
xor
xor
pop
pop
std
cs
mov
and
call
sti
sub
pop
loopne
dec
adc
lret
hlt
push
cmp
xchg
cmp
sbb
repnz
mov
sbb
popa
pop
adc
aam
cwtl
cwtl
inc
sbb
push
stc
int3
and
hlt
fcoms
ss
rcrb
pop
hlt
sbb
loop
notl
add
jnp
in
mov
add
mov
subb
jns
push
into
pusha
jne
pushf
cltd
xchg
out
cmc
xorl
jbe
mov
pop
mov
push
sarl
jmp
xchg
test
jp
jns
test
popf
out
notl
mov
in
pop
mov
sub
pop
movsb
enter
push
jae
pop
jge
pop
push
aam
jg
xchg
mov
fisubl
jnp
jne
or
leave
mov
jno
sbb
pop
aas
pushf
enter
xchg
repnz
sbbb
test
cmp
cli
ret
and
fsubr
fiaddl
fildl
mov
stc
cmpsb
push
inc
imul
das
popf
or
inc
pushf
lock
xchg
pushf
pop
cmp
adc
mov
mov
out
ss
das
mov
cwtl
sbb
jne
fdiv
cmpsb
pop
sti
xor
aam
or
sbb
sahf
inc
pop
xor
cmp
fcoml
nop
push
push
pushf
or
push
mov
cltd
pop
cmpsl
cmpsb
test
mov
sub
mov
adc
add
mov
adc
xchg
mov
enter
jl
sbb
or
cwtl
enter
mov
int3
ss
js
mov
stc
xchg
xchg
bswap
push
xchg
cmpsb
fiaddl
jle
jns
imul
sbb
fistl
shlb
xor
xchg
data16
pop
in
jp
rolb
sub
jecxz
dec
push
add
add
int
cmc
add
cmpb
mov
mov
adc
js,pn
das
adc
gs
fsubr
stc
sub
sub
aam
shr
clc
inc
and
in
lcall
addl
imul
mov
mov
in
sbb
xorl
xchg
addr16
xor
jnp
jecxz
mov
mov
std
push
pop
cmpl
lock
repz
add
andb
sbb
jne
xchg
repnz
mov
and
inc
shrd
sbb
andb
sub
mov
xchg
xchg
push
hlt
xchg
cltd
sbb
lds
cwtl
push
cmp
mov
out
sbb
jne
aad
jae
in
xchg
int3
inc
cwtl
std
mov
enter
arpl
movsl
outsb
xchg
int3
pop
adc
sti
push
mov
xchg
xlat
xchg
mov
cltd
jp
push
loopne
adc
dec
cwtl
mov
outsl
mov
into
fwait
test
lret
fldcw
sbb
fsubrl
cwtl
or
jae
push
loopne
pop
or
xchg
nop
inc
adc
and
enter
xlat
push
jo
mov
sbb
paddq
mov
movsb
std
pop
das
add
outsl
pusha
sbb
push
test
rcrb
mov
sbb
mov
xchg
jmp
pop
xchg
pop
ret
int3
xchg
cwtl
mov
mov
sub
imul
xchg
mov
nop
jmp
inc
sar
rolb
bnd
mov
fsubr
cltd
cmpsb
add
mov
adc
adc
in
lret
and
mov
cmp
push
clc
mov
test
push
outsl
inc
jp
test
mov
mov
sbbb
rclb
cmp
cwtl
nop
movsl
jp
xchg
push
fmuls
ret
pop
dec
mov
inc
adcb
sahf
pop
lock
fcompl
ljmp
rolb
push
mov
mov
xor
mov
aad
xchg
sbb
sub
jle
rorl
dec
pop
out
insl
lahf
scas
repnz
or
mov
iret
scas
or
fidivl
jne
fwait
or
cs
inc
jns
sbb
mov
sbb
or
pop
dec
inc
int3
pop
adc
sub
jae
lock
push
push
movb
bnd
nop
mov
sbb
std
mov
cs
rclb
jno
and
int3
sub
or
sbb
insl
mov
jle
hlt
mov
sbb
push
jno
mov
jl
adc
sti
int
pop
adc
and
repnz
push
or
movsb
cmpsb
dec
or
scas
or
mov
sahf
cmp
lret
xchg
repnz
mov
add
out
call
in
mov
int3
in
lds
jns
cltd
lret
loop
jle
call
push
int
mov
sbb
jb
lock
sbb
ss
lods
and
outsb
fdivrs
sbb
xchg
dec
mov
insb
std
ja
cld
xchg
jb
es
or
mov
xchg
adc
ret
sub
sub
and
in
jns
or
ficoml
aaa
mov
pop
adc
mov
shlb
cmpb
out
jl
lds
mov
mov
adc
fcomip
fsubs
mov
mov
test
enter
test
and
xchg
adcb
mov
and
or
lds
push
pop
insl
mov
sub
and
sub
cmp
inc
jle
xchg
cltd
add
js
push
dec
mov
add
adc
inc
out
test
out
sbb
hlt
in
push
xchg
lahf
mov
scas
test
fcmove
jl
scas
outsb
mov
xchg
ret
jecxz
push
leave
lock
lock
out
and
out
jne
hlt
repz
push
enter
fwait
nop
dec
aad
mov
cmp
xor
xchg
lock
je
fimull
aas
jne
orb
icebp
cmpl
insb
out
clc
push
mov
fucomi
xchg
add
push
ret
xor
lock
lds
in
flds
add
pop
negl
sub
outsl
cmp
pop
add
push
icebp
aas
int3
adc
fidivrl
sti
movsl
repnz
mov
pop
into
inc
xor
lcall
popa
jbe
mov
sahf
mov
jle
xchg
xchg
pop
or
or
lock
jb
adc
into
addr16
inc
call
insl
add
push
or
lock
mov
adc
andl
lahf
sti
lret
fcom
out
cwtl
subb
push
movsb
mov
adc
stos
cmp
pop
setnp
cmp
stos
cmc
gs
test
mov
ljmp
fs
xor
pop
add
cwtl
push
add
rorb
inc
adc
mov
mov
lcall
add
lahf
unpckhps
mov
pop
jg
sbb
lret
mov
mov
leave
test
loopne
out
hlt
test
xchg
cltd
adc
pop
mov
cmpsl
setae
mov
enter
or
adc
in
push
mov
mov
ret
push
lods
iret
sahf
repz
mov
nop
int3
mov
xchg
loope
pop
mov
sub
aam
adc
mov
add
jp
jnp
rcl
push
dec
negl
dec
xor
xor
jl
adc
fnstenv
imull
jmp
jp
mov
insl
aad
adc
xchg
int3
xchg
cwtl
adc
lret
pop
push
cs
pop
or
mov
lea
or
lcall
push
rcl
jb
stc
ret
cmp
stos
insb
inc
inc
movsl
mov
add
pushf
bound
or
inc
dec
cmpsb
ds
xchg
ficoml
cmpsl
insb
sti
repnz
xchg
sub
fdivrs
mov
fstl
add
outsb
mov
scas
hlt
test
lock
sub
pop
jne
inc
out
ljmp
subb
xor
daa
aam
inc
loope
lock
xchg
sbb
cwtl
xchg
mov
or
lods
vmread
xor
into
lcall
or
stc
sbb
data16
leave
lret
cmpsl
cwtl
je
mov
sbb
add
mov
inc
lcall
lret
jp
push
std
push
into
out
mov
stos
jns
fsubr
mov
xchg
push
mov
add
daa
push
xor
mov
xchg
and
adc
xor
out
inc
xchg
sti
cmp
int3
and
xor
scas
lcall
loopne
popf
and
or
mov
ljmp
sbbb
scas
orb
test
pop
sbbb
hlt
cmp
push
fdivr
fsubrl
ret
jle
ficoml
loopne
inc
xor
xchg
pop
lahf
ficoml
aad
mull
mov
ljmp
mov
aam
add
adc
mov
subb
enter
xchg
sahf
fs
fcoms
ficoml
xchg
imul
xchg
stos
jnp
inc
sub
test
dec
pop
inc
test
mov
mov
jp
stc
sbb
sbb
sbb
xchg
jae
adc
jns
inc
pop
mov
iret
test
xchg
jp
in
sub
cmp
aad
and
nop
add
push
insl
adc
cmpsl
rcrb
sub
out
lret
dec
hlt
lcall
sbb
lock
js
ret
loop
rclb
xchg
fcomps
lods
cmp
cmpsl
or
jle,pn
rol
push
nop
mov
add
fcoms
loope
jae
movsb
mov
mov
jp
into
shll
cmp
mov
fdivrl
ja
insb
les
xchg
scas
or
fistps
sets
jecxz
ljmp
inc
dec
xchg
test
fisubrl
dec
dec
sbb
mov
pop
push
fcoms
push
xchg
cmp
inc
sbb
cld
add
lock
lret
in
mov
add
add
loop
fs
into
pop
stos
adc
inc
sahf
lcall
add
mov
lahf
ja
pop
jne
ljmp
mov
mov
sbb
mov
xchg
jmp
rol
adc
pushf
loop
lret
ret
lds
jp
pushf
pop
mov
mov
out
mov
hlt
mov
ret
sbb
dec
test
adc
mov
inc
mov
xchg
jns
sbb
adc
fimuls
int3
leave
cwtl
pop
jae
in
inc
inc
movsb
mov
push
out
into
xchg
fucomip
pop
or
jnp
xchg
ror
sbbl
lods
out
cltd
scas
scas
fnstenv
pop
lret
aam
dec
add
imul
sbb
int
pop
lock
aad
test
popl
lcall
or
jl
test
out
mov
xlat
jp
cs
mov
xorb
fimull
insb
pusha
ret
jbe
fisttpll
out
mov
stos
jmp
cwtl
shrb
mov
loop
dec
jb
jp
and
bswap
test
sub
mov
mov
push
in
hlt
insb
inc
bound
jns
push
pop
jle,pn
pop
or
lret
ljmp
sub
test
jle
lock
adc
push
dec
mov
shrb
mov
call
lods
iret
mov
neg
mov
sbb
iret
mov
sub
loop
dec
sbb
push
repnz
repnz
in
fcompl
pop
addl
xlat
or
jne
cwtl
hlt
test
scas
addb
sub
ljmp
in
jns
int3
cmp
pop
mov
sbb
mov
dec
pushf
call
shl
mov
stc
pushf
jle
mov
ficoml
adc
lret
mov
jnp
loopne
stos
pop
fldt
lret
mov
xchg
fcomps
mov
repnz
jae
aam
or
cwtl
jg
jle
movsb
inc
ljmp
jno
sbb
in
inc
outsb
pushf
ficoml
xchg
push
idivl
fs
leave
pop
into
rcrb
test
mov
cmc
loopne
cmpsb
shlb
rcll
out
pop
mov
lock
or
sti
add
mov
aas
jmp
aas
mov
jp
add
loop
hlt
leave
mov
add
jmp
filds
sbb
jae
dec
xorb
aam
rclb
or
int
into
add
mov
add
ja
icebp
cmpb
out
mov
sti
iret
ljmp
pop
push
je
scas
popa
pusha
mov
xor
in
std
mov
or
fwait
iret
ljmp
gs
test
outsl
push
mov
into
rolb
pop
and
sub
mov
mov
dec
loop
mov
sbb
add
inc
test
lods
loopne
jmp
call
mov
test
sub
aam
scas
sub
mov
cmp
mov
test
mov
jne
mov
pop
xor
into
lock
pop
cmp
mov
and
lcall
fwait
sahf
fst
cltd
scas
cmpsb
and
cmc
aam
andb
repnz
jg
cmp
sub
push
sbb
xchg
adc
lret
add
pop
inc
pusha
movsb
flds
push
push
in
ljmp
sarl
into
mov
cmpsl
inc
add
add
rclb
xchg
mov
aaa
push
popf
mov
mov
and
xor
scas
test
in
mov
mov
adcl
add
mov
mov
roll
jle
or
sub
repz
ljmp
mov
fdiv
xchg
sbb
fisttpll
enter
adc
les
std
xchg
mov
jmp
sbb
push
test
ret
cltd
test
add
dec
fiaddl
xchg
imul
push
ficompl
lds
inc
mov
adc
adc
dec
pop
shll
xchg
fdivs
nop
int
or
mov
mov
jno
fimull
andl
je
cmp
and
inc
push
xchg
addr16
xchg
cmp
push
dec
call
push
mov
fbstp
fcoml
sete
lret
scas
jb
mov
pushf
inc
push
jo
in
stos
ljmp
adc
mov
daa
hlt
cmove
aam
push
and
add
and
xor
cld
lret
sbbb
aam
lods
cltd
adc
xor
push
lea
flds
and
out
fdivp
adc
daa
mov
in
insl
cli
cmpb
lock
mov
sti
mov
cmpsb
pop
sub
movsl
lcall
jne
add
call
cmp
mov
cltd
mov
inc
rolb
stos
cwtl
ljmp
adc
lcall
jne
mov
outsl
loope
imulb
or
adc
mov
push
hlt
rcrb
sbb
cmpsb
pop
jp
adc
push
jmp
sub
sbb
mov
mov
or
adc
lods
call
xchg
pop
mov
ficomps
pop
movsb
scas
xchg
mov
test
mov
pop
xchg
dec
cwtl
jns
lret
notl
repnz
stos
pop
dec
push
mov
int3
pop
sbb
movsb
test
mov
aaa
scas
mov
cwtl
cld
xchg
sub
mov
pop
jmp
mov
sub
enter
mov
mov
pop
sbb
xchg
sti
inc
pushf
out
sub
fimull
out
adc
aam
mov
sub
sti
dec
adc
add
ficomps
adc
xchg
lret
pop
xchg
mov
sbb
inc
dec
mov
cld
jns
ja
cmc
or
sbb
mov
inc
ret
lods
xchg
add
mov
nop
sahf
jne
subb
bound
lock
scas
dec
outsb
nop
xchg
xchg
rol
jae
dec
mov
into
shl
or
jne
test
pop
loop
enter
jge
les
jle
inc
xchg
adc
subb
mov
jp
ss
mov
cwtl
jb
out
add
cwtl
sub
sbb
les
mov
jl
in
and
sbb
jno
lahf
mov
xor
pop
lods
lcall
in
imul
add
mov
std
repz
inc
sbbb
and
aad
jne
inc
mov
mov
lock
jns
mov
xchg
repz
or
inc
sbb
sub
sbb
daa
lret
hlt
mov
sbb
imul
sbb
xchg
lods
mov
mov
dec
pushf
cltd
sahf
and
adc
subl
push
push
fcompl
push
cmpsl
mov
cmp
and
rcr
jp
scas
dec
pop
jl
or
movsl
pusha
pop
test
ret
js
mov
stos
cmp
repnz
push
fisttpl
xchg
mov
adc
push
fisubrl
cmp
jmp
scas
xchg
bnd
aaa
and
daa
sub
pop
add
fsubrs
nop
test
repnz
test
jl
mov
mov
xchg
lock
sbb
push
and
in
andb
and
out
fsts
mov
sub
mov
xor
nop
aas
shlb
lds
js
inc
stos
loop
dec
loopne
pop
adc
and
addr16
push
rcr
bswap
into
jb
push
jae
movsb
mov
lods
mov
or
or
pop
cld
into
stos
mov
lea
and
xor
mov
push
xchg
je
mov
imul
sbb
xchg
sbb
ret
jnp
lea
dec
adc
sbb
dec
testl
out
mov
les
cmpsl
test
ljmp
mov
pop
and
and
mov
popf
adc
sbb
ja,pn
dec
negb
xor
xchg
inc
ljmp
sbb
rcrb
pop
shll
repnz
jge
cmp
add
rcrb
ficoml
jle
or
lahf
push
xchg
bound
stos
jle,pt
mov
jae
xor
clc
push
push
mov
popf
cmp
inc
dec
jp
lods
hlt
pop
pushf
loop
in
scas
ljmp
movsb
mov
adc
adc
xor
mov
sbb
int3
push
cwtl
adcb
jmp
les
idiv
sbb
dec
gs
int
adc
sbbb
xchg
push
outsb
lock
xchg
cmpsl
mov
fisubs
mov
out
in
cltd
xchg
xor
cmc
push
insb
mov
sbb
sbb
hlt
scas
cwtl
sbb
xchg
cmp
or
cli
cld
xchg
sbb
mov
add
nop
and
repnz
jno
rcrb
scas
or
repz
sbb
sahf
mov
ret
jp
sbb
pop
fists
mov
shl
jns
mov
adc
add
and
mov
cltd
pop
stc
jo
add
sbb
mov
ficoml
inc
pusha
iret
jnp
jns
idivb
cwtl
push
xchg
pop
addr16
enter
jge
imul
mov
xchg
scas
outsl
xor
mov
int3
dec
pop
fmuls
jg
cltd
mov
outsl
ror
imul
fwait
jge
nop
out
mov
fld
lods
hlt
stos
cltd
push
pop
sahf
pop
in
movsl
bound
mov
sti
aad
cmc
cmc
mov
mov
lock
outsb
clc
push
pushf
or
cmpsl
dec
xor
into
int3
mov
push
inc
mov
rcr
gs
or
inc
cltd
test
ficoml
cmp
icebp
fimull
aaa
lcall
scas
bound
mov
pop
test
push
xchg
aam
cmp
inc
mov
in
in
mov
xchg
adc
pop
mov
jno
adc
push
push
aam
or
pop
cmp
adc
cmp
inc
shlb
mov
push
push
mov
imul
jl
cltd
adc
jae
mov
or
nop
jg
or
mov
add
xor
mov
mov
dec
jnp
adcb
xchg
stos
pusha
pop
pushf
add
dec
mov
xchg
js
mov
push
or
xchg
arpl
xchg
mov
sbb
push
mov
cltd
mov
pushf
fwait
sbb
sbbb
mov
out
push
sbb
mov
sub
cwtl
cmp
sbb
jb
dec
mov
in
imul
pop
stos
jge
pushf
mov
aas
and
mov
xlat
ljmp
pop
mov
rorb
ret
push
push
fsubrs
ljmp
call
pop
cmp
pop
jl
push
or
out
jbe
rolb
test
pop
subb
mov
sbb
push
cmc
jne
test
mov
fwait
shll
out
xchg
jae
mov
or
push
mov
ficomps
push
js
incl
push
cmp
call
and
mov
xor
fiaddl
scas
mov
loopne
mov
mov
fidivrs
dec
cwtl
cld
mov
mov
ljmp
push
idivl
imul
mov
and
mov
repz
adcb
fnstenv
lahf
fsubrs
fimull
in
popa
add
adc
cmpsl
fmul
mov
sbbb
mov
mov
mov
test
sar
and
ror
stc
mov
adc
inc
and
mov
insl
mov
out
imul
mov
das
push
and
popf
fnsetpm(287
arpl
stos
jb
sub
lcall
adc
lods
ficoml
sbb
or
push
or
ficoml
subb
xchg
orl
repz
outsb
mov
and
xchg
fcoml
stos
jmp
iret
pop
test
and
push
push
daa
cwtl
hlt
sub
sub
mov
aad
push
dec
in
in
xchg
lret
xchg
mov
pusha
outsl
cmp
push
int3
sbb
adc
sahf
and
cmpb
pop
lret
addr16
ljmp
xchg
lcall
pop
and
ljmp
repz
jge
nop
out
mov
xlat
cltd
xchg
mov
pop
cmp
mov
sahf
adc
rorb
or
fadds
mov
xor
xor
lock
sbb
movsb
fwait
cwtl
or
xor
arpl
sbb
test
and
std
add
or
jae
orl
jnp
mov
loop
add
pop
ret
ficoms
jecxz
xchg
pop
or
xchg
dec
pop
cmp
xchg
dec
and
ljmp
mov
cmpsb
rolb
add
ficoms
jne
lcall
jns
or
dec
sbb
pop
jp
sbb
test
xchg
jnp
mov
push
add
nop
pop
movsb
cwtl
pushf
test
jb
test
and
mov
or
popf
sbb
aad
lret
xor
pop
sahf
and
jnp
loopne
pop
repnz
insb
mov
shll
sbb
push
jl
iret
sbb
cmp
xchg
lds
mov
nop
pushf
int
rorl
mov
adc
mov
in
cltd
push
mov
int3
popf
movsb
loopne
add
mov
ljmp
mov
enter
imul
or
popa
clc
cltd
push
jne
inc
in
rolb
nop
aad
xchg
neg
sbb
mov
repnz
sbb
loop
push
fdivrs
rorl
imul
cwtl
pop
xchg
repz
imul
cmpb
mov
and
or
lcall
add
faddp
aam
cmp
dec
testl
pushf
out
cli
push
mov
jge
pop
fnstsw
lcall
jnp
into
xchg
lods
shl
sbb
jmp
fcomp
push
loopne
idivb
lret
in
aas
into
jl
xchg
sbb
cmp
xchg
lea
cmp
movsl
jp
daa
lods
mov
rolb
sarb
faddl
adc
mov
cltd
sbb
insb
jnp
fiaddl
and
cmp
out
sbb
cmp
mov
pop
repnz
xchg
aaa
fadds
mov
xchg
xchg
aad
pop
add
mov
pop
sbb
scas
xchg
cwtl
das
adc
lea
xor
push
cwtl
dec
and
orb
mov
pop
push
shll
lret
out
adc
fcomps
ret
mov
cwtl
push
aaa
dec
or
sub
sbb
fwait
jecxz
sarb
sub
or
sbb
jp
add
fidivl
test
loop
jle
jo
aam
gs
mov
pop
mov
stos
sbb
sub
into
hlt
es
repnz
lea
ss
xchg
lods
mov
cmp
cmpl
cwtl
mov
xchg
sbbb
test
mov
mov
and
sbb
test
inc
xchg
fsubrp
cmpl
out
scas
jmp
or
sbb
xchg
jp
push
and
inc
dec
or
neg
out
loop
jnp
dec
cmc
and
sbb
sub
mov
mov
push
popl
loopne
ljmp
mov
adc
outsb
sahf
ss
mov
xchg
cmp
cltd
ror
and
test
xchg
mov
sub
popl
ficoml
scas
iret
mov
push
mov
ss
minps
jmp
stc
adc
ret
add
mov
adcb
ljmp
sub
loopne
addr16
push
pop
test
scas
into
xor
fidivrl
adc
scas
rol
push
ljmp
stos
pop
fs
dec
icebp
mov
xchg
iret
add
sbb
shlb
mov
adcb
mov
testb
sahf
in
sub
cmpsl
jp
sbb
xchg
sub
xchg
out
int
cmp
mov
std
lock
push
xchg
adc
pop
mov
in
mov
pop
push
aam
fcoml
mov
adc
pop
fbld
jne
fiaddl
ret
aas
or
push
pop
in
push
fucomip
sbb
arpl
add
xchg
pop
jge
jle
je
clc
sbb
adc
sbb
jl
lahf
adc
jb
mov
mov
test
insb
sbb
imul
test
int3
push
arpl
fstp
and
repnz
dec
aam
add
loope
lods
sbb
dec
jl
fisubs
mov
jmp
into
jbe
dec
and
cli
ljmp
test
hlt
fimull
pop
jne
pushf
stos
inc
mov
adc
je
sbb
push
mov
lods
mov
pop
and
add
andl
outsb
mov
in
repz
or
xchg
sbb
pushf
add
ficoml
repz
xor
insl
arpl
movhps
add
hlt
scas
adc
loope
mov
test
jle
jle
stc
xor
les
nop
mov
sbb
jnp
into
xchg
das
fwait
xchg
sahf
mov
faddl
clc
mov
cwtl
es
inc
jge
enter
mov
lret
mov
ljmp
in
jns
mov
cmp
mov
jns
mov
mov
jno
xor
mov
test
sbb
cltd
adc
imul
pop
rcrb
adc
out
sbb
ret
mov
repnz
mov
jp
nop
and
repnz
push
xchg
sti
mov
push
adc
imul
adc
in
pop
inc
jns
cmp
stc
repnz
push
xchg
xchg
push
xor
inc
sub
jnp
lret
mov
xchg
lds
jp
push
xor
xchg
stos
outsb
test
fsts
pop
mov
cmp
in
rcrl
sbb
jno
mov
sti
subl
cmp
scas
mov
jae
andb
lret
test
fimull
xchg
mov
and
pop
mov
ds
adcb
imul
rcrl
mov
orb
ret
ljmp
xor
movsb
mov
xchg
mov
ljmp
jne
lcall
insl
xchg
add
addr16
test
fldln2
rorb
scas
lds
into
test
push
enter
pusha
int3
ficoml
mov
jnp,pn
adc
pop
mov
mov
jecxz
or
jno
rcrb
out
inc
mov
aad
cwtl
add
addb
xchg
sbb
js
jp
dec
out
mov
push
lock
mov
fcmovnu
sbb
adc
lcall
adc
mov
repz
bound
into
and
push
xchg
into
or
cwtl
ljmp
cmp
xchg
push
mov
push
push
in
mov
jo
mov
adc
push
mov
mov
arpl
lret
mov
mov
cmp
nop
jp
xchg
add
mov
pop
adcb
lea
int3
in
push
mov
mov
pop
jno
int3
jl
sbb
cmp
imul
fmull
loope
push
js
cmp
pop
stc
ljmp
mov
bound
repz
ret
jnp
out
and
mov
lock
xor
pop
adc
add
mov
sbb
push
mov
add
hlt
rcrb
jb
fimull
xlat
dec
fcomp
and
movsb
hlt
mov
fisttps
es
xor
or
xchg
in
loop
fcmovb
mov
or
shl
test
aaa
sbb
sub
adc
outsl
pop
mov
xor
pop
into
mov
ret
jle
mov
mov
movsb
dec
pop
jle
jnp
fsubr
push
or
push
scas
fnstenv
movsl
andb
mov
aam
sbb
xchg
stos
inc
rcll
in
pusha
or
and
adc
mov
sbb
shlb
dec
div
cltd
sahf
cmp
mov
cltd
xchg
stc
mov
cwtl
mov
out
outsb
lahf
nop
fucomi
jbe
lret
pop
cwtl
lods
pop
cmc
mov
mov
icebp
in
jmp
shlb
test
inc
aas
jb
mov
pushf
decb
pop
jae
add
popf
push
test
jns
subb
push
stos
aam
pop
xchg
adc
ret
adcb
push
xor
lds
cltd
in
movsb
out
mov
int3
loopne
xlat
xchg
pop
fwait
jae
fdivrl
jne
fwait
cmpb
pop
jns
adc
das
test
inc
lds
mov
mov
xor
mov
inc
test
pop
into
jg
rcrb
sahf
test
jl
rcrl
cmp
xlat
sahf
in
xor
xchg
fmulp
mov
lret
push
test
mov
repnz
imul
fdivrs
adc
subb
shll
pusha
into
mov
pushf
bound
sub
pop
jle
xor
mov
jmp
fisubl
mov
mov
sub
add
shld
ss
lods
xchg
mov
cmc
push
cmp
mov
sbb
xchg
adc
adc
adc
xorl
jns
adc
fstpt
mov
adc
and
mov
pop
jp
mov
push
and
jl
cltd
in
ficomps
adc
sbb
dec
lcall
mov
mov
or
sbb
mov
lcall
notb
cwtl
jne
xchg
mov
int3
sarb
repz
cltd
add
lret
or
pop
xchg
ret
jb
and
mov
in
cmp
mov
and
mov
in
and
sbb
jle
outsb
rcr
test
adc
xchg
jp
xor
ficomps
stos
outsb
scas
adc
mov
incl
jl
and
iret
lock
dec
cmp
mov
xchg
mov
mov
mov
push
fbld
stc
hlt
or
pusha
mov
fcmovnbe
popa
outsb
loop
sub
push
out
scas
insb
pop
cmp
xchg
xchg
jp
xor
xchg
call
iret
nop
icebp
sbb
addb
int
popa
aad
xchg
inc
sub
andb
mov
lds
inc
lret
mov
xchg
mov
push
mulb
adc
push
push
xchg
cwtl
mov
jb
cltd
hlt
rclb
cwtl
adc
repz
rcrl
sbb
es
pop
add
jnp
dec
test
push
mov
loope
int
mov
mov
xlat
push
adc
std
sbbb
xor
loop
add
dec
aam
mov
and
pop
pop
dec
adc
xchg
sbb
mov
mov
icebp
aas
nop
int3
mov
movsl
xchg
pop
xchg
arpl
insl
pop
mov
add
ficompl
dec
outsb
in
cmpsl
pop
fadds
out
cmp
sbb
aaa
out
jae
es
cmpsb
ljmp
das
neg
adc
push
mov
fadds
pop
jnp
sahf
ret
fsubrs
cld
lock
cwtl
mov
mov
pop
cltd
mov
mov
iret
test
add
xchg
shlb
jo
add
sbb
roll
mov
or
js
cltd
or
movsl
adc
out
adc
cmp
pop
add
fdivrs
jge
mov
cmpsb
cltd
push
ja
sub
into
fcoms
iret
and
enter
mov
lahf
repnz
cmp
add
cld
sbbb
daa
lret
jnp
jmp
hlt
sbb
dec
adc
test
mov
in
loopne
xchg
add
sbb
jle
icebp
lock
or
inc
sub
push
fwait
sub
sbb
icebp
cs
sbb
mov
notb
loopne
hlt
xchg
notl
jl
sbb
repnz
mov
mov
xchg
ljmp
jl
mov
inc
jns
xchg
dec
in
dec
add
xor
aam
and
cmc
mov
push
mov
inc
shll
jle
pop
in
push
jge
outsl
sbb
fisubrs
adc
ret
mov
ja
cld
sbb
sar
testl
ja
sbb
jae
mov
jecxz
xchg
daa
fsubl
dec
in
jp
and
jle
mov
ss
xchg
pop
out
fxch
repnz
mov
js
mov
cmc
lcall
pushf
int3
sbb
repnz
mov
push
stos
jge
mov
movsl
sets
inc
loopne
repnz
fdivrs
outsl
or
rcll
std
dec
or
pop
xchg
mov
nop
orl
dec
fwait
mov
out
jg
popa
mov
dec
pop
pop
int3
cmc
mov
sahf
jns
popf
outsl
cmp
les
out
sbb
cmp
cmpsb
sbb
or
icebp
aam
add
xchg
push
mov
movsb
fidivl
jnp
jae
mov
lods
mov
mov
sbbb
andb
jmp
and
scas
les
add
js
push
or
mov
or
cmp
cwtl
push
xchg
and
or
adc
and
mov
into
aam
idivl
cmc
xchg
jne
mov
xchg
sbb
inc
lret
mov
xlat
or
add
je
or
mov
and
dec
push
test
icebp
fiadds
in
adc
dec
shl
jl
ljmp
fdivrs
inc
leave
or
push
adc
fucomip
shld
movsb
cwtl
pop
or
cltd
xchg
adc
into
scas
ficompl
scas
je
in
xchg
mov
dec
ja
adc
xor
pop
pushf
dec
addl
cmpsb
cmp
out
cwtl
push
lret
xchg
pusha
inc
mov
cwtl
pop
and
vpshaw
hlt
ficoml
inc
cmp
adc
aas
inc
cmp
test
mov
cltd
push
jnp
and
xchg
push
mov
mov
mov
push
scas
lock
mov
stc
mov
lret
icebp
sbb
mov
adc
insb
ud2
int3
and
movsb
lcall
dec
lock
pop
pop
mov
mov
sub
nop
xchg
ljmp
lea
orb
push
dec
mov
jne
neg
stc
dec
vmovsd
jae
movsb
pushf
xchg
ja
or
mul
insl
pop
pop
lret
jno
enter
add
addr16
xchg
mov
cwtl
nop
fcompl
in
outsl
mov
std
out
mov
xchg
pushl
push
cmp
cwtl
push
cs
jg
ljmp
sbb
mov
lcall
xchg
fildl
adc
mov
push
jge
inc
test
sbb
inc
int3
sbb
pop
add
mov
sbb
lds
lret
adc
pop
add
aam
mov
cmpsl
xchg
test
stos
jmp
les
fdivl
mov
adc
dec
ret
mov
fsubrs
and
mov
xor
repz
pop
xchg
ljmp
lret
jl
imul
add
mov
xor
push
rcr
ret
push
clc
cmc
popf
cltd
sbb
lret
jl
and
aas
mov
lcall
and
js
mov
insl
pop
std
movsb
adc
add
mov
lcall
out
mov
ret
inc
fs
sbb
pop
cltd
addb
mov
xchg
pusha
push
dec
mov
or
push
imul
lahf
and
cmpsb
sbb
es
pop
fldcw
mov
shlb
movsl
mov
xchg
mov
shl
or
pmaxsw
fwait
push
imul
add
pop
add
out
movsb
movsl
sbb
shl
mov
sti
mov
sub
adcb
push
mov
pushf
stos
lret
icebp
or
mov
dec
hlt
popf
add
insb
mov
sbb
int3
add
popf
adc
or
lock
nop
push
jnp
fdivp
stc
hlt
mov
cmp
sahf
imul
xchg
adc
mov
push
mov
jle
les
dec
hlt
mov
in
jnp
in
push
jl
sbb
or
out
jns
sbb
and
bound
adc
pop
xchg
nop
mov
fcoml
mov
cmp
jns
daa
xchg
lret
push
outsb
in
add
xorb
movsb
fwait
dec
and
scas
sbb
adc
cmp
add
xchg
xchg
pop
mov
push
lret
pop
sub
fcoms
gs
xchg
sbb
mov
sbb
sbb
mov
xchg
mov
hlt
mov
cltd
in
push
or
mov
mov
ficomps
push
cmp
arpl
cltd
sbb
lea
into
fcoms
sahf
adc
cs
cmp
push
int
int3
clc
ljmp
xchg
add
test
sbb
dec
jp
xchg
inc
push
bound
sub
add
or
cltd
dec
pop
test
mov
scas
cmc
fsub
stc
in
mov
sbb
cmpsb
mov
dec
ljmp
sbb
addb
jne
shr
mov
dec
sti
stos
nop
repnz
and
xchg
push
lods
sbb
shrb
pop
sarb
cmp
fcmovnbe
cwtl
or
mov
jmp
repnz
and
aaa
xorb
mov
jle
hlt
sbb
mov
pop
repz
jo
mov
jns
fwait
mov
test
shrb
aad
mov
imul
xchg
repnz
pop
pop
push
into
out
mov
insb
in
les
sbb
adc
js
cwtl
sub
int3
dec
lret
cwtl
mov
lret
scas
std
adc
call
mov
pop
jb
cmpsb
mov
mov
call
push
mov
ss
or
fcmovu
and
ja
mov
fcoml
loopne
sti
divb
into
pop
mov
sbb
scas
movsb
daa
gs
cwtl
and
xchg
insb
fstps
jl
int3
ret
icebp
xchg
leave
orl
mov
mov
jle
sub
push
adc
mov
iret
push
cmc
fcom
push
ds
push
mov
adc
mov
arpl
loopne
inc
lock
pop
into
and
jae
loopne
fimull
jmp
adc
aaa
cli
add
and
hlt
jge
xor
lds
mov
sahf
inc
cmp
sbb
sti
aas
out
pop
fwait
jge
hlt
aaa
sub
lea
sahf
inc
enter
push
rcrb
and
fcmovb
popa
rorb
sbb
outsb
scas
pop
mov
repz
ficoml
pop
cs
jmp
sbb
dec
int
stc
mov
testb
mov
xor
stos
inc
in
xchg
xor
xlat
sbb
std
jge
call
jmp
in
sbbb
mov
add
mov
cltd
cmp
into
int3
and
lods
mov
lret
push
lea
mov
addb
cmp
je
ljmp
push
cmpsl
repnz
xor
pop
sti
add
mov
mov
lahf
xchg
outsl
mov
sbb
aam
or
rcr
inc
mov
cltd
lahf
movsb
popl
int
xchg
jae
and
arpl
test
cld
or
jge
ljmp
mov
mov
and
mov
mov
stos
inc
hlt
push
ficoms
movsb
mov
sub
sub
mov
lahf
add
jp
and
loope
test
pop
xchg
or
out
test
into
les
xchg
add
les
cmp
and
inc
loope
or
daa
insb
movsb
lods
push
jae
movsb
fdivrs
inc
jnp
test
ljmp
mov
mov
hlt
mov
cld
push
cltd
xor
mov
rol
insb
into
movsb
xchg
pop
push
push
cmpsl
push
xor
mov
cmp
mov
pop
adc
insl
mov
push
lds
fimull
faddl
test
or
adc
and
ret
add
je
les
scas
ret
add
add
and
int3
mov
and
mov
stos
inc
andl
cltd
int3
push
pusha
and
out
cltd
sbb
add
les
mov
movsb
mov
loopne
stos
iret
push
mov
or
jne
sub
mov
push
or
jp
mov
inc
subl
movsb
mov
and
loope
push
fsubr
pop
cmpsl
test
jg,pn
sbb
adc
mov
sbbb
pushf
insb
out
pop
cmpl
add
popa
push
push
adc
sub
loope
lock
jp
and
lret
cltd
push
pop
mull
mov
lahf
xorl
xchg
and
repz
pushf
pop
mov
xor
sbb
pop
adc
rclb
shl
cmpsb
into
mov
sar
cmpsb
out
push
inc
push
jne
int3
testb
add
cld
push
mov
sbb
pop
incb
test
mov
inc
push
sti
jl
out
outsb
cltd
js
xchg
push
mov
xor
fisubl
sti
addb
sbb
sahf
aad
mov
popa
nop
xchg
push
adc
mov
gs
add
sbb
adc
jnp
jl
and
pop
nop
cltd
sub
xor
sub
outsl
insb
sahf
test
lods
rcrl
cwtl
dec
xorl
sbb
mov
ret
push
lods
scas
je
push
mov
mov
movq
testb
add
push
shrl
nop
mov
cmp
sarb
cmpsb
xor
adc
lret
ljmp
and
mov
call
repz
and
std
bound
xchg
sbb
mov
mov
stos
repnz
aas
jecxz
test
mov
sub
out
rcrl
fisubl
lret
cmpsb
data16
fidivrs
push
mov
jecxz
adc
test
ret
jle
xor
mov
pusha
adc
push
xchg
inc
ss
adc
loop
stos
adc
jae
int3
ficompl
mov
ss
cmpsl
adc
addb
call
ja
xchg
lock
mov
ljmp
xor
fwait
xchg
popf
dec
test
mov
dec
decb
pop
les
pop
jmp
lds
jae
adc
pusha
insb
adc
pop
mov
and
xor
cltd
ljmp
mov
ja
ret
mov
stos
mov
pushf
movb
mov
or
and
mov
pop
lods
add
add
aad
ror
cmpsl
out
sbb
icebp
jle
sbbb
movsb
mov
dec
cmpsb
insb
mov
or
test
push
mov
fwait
sub
jge
xchg
push
dec
cs
pop
adc
dec
cltd
add
divb
and
mov
paddd
cmovp
mov
inc
dec
je
scas
cmpsb
call
hlt
jb
fidivl
xchg
ljmp
xor
mov
push
mov
gs
sti
cmp
in
popa
cmp
test
lcall
add
imul
dec
pop
movsb
les
test
pop
push
inc
and
and
adc
push
outsl
jnp
mov
and
cwtl
push
arpl
ficompl
scas
jno
jo
xchg
movsl
pushf
mov
mov
sbb
or
enter
insl
mov
pushf
push
xor
sbb
sahf
lea
nop
aam
push
cmc
adc
mov
movsb
cmp
xchg
repz
sbb
into
inc
mov
mov
nop
cmc
outsl
mov
jae
adc
es
xor
insl
xchg
outsb
inc
sbb
mov
pushf
jmp
xchg
scas
mov
fdivrs
mov
clc
mov
imul
stos
sbb
push
pop
shlb
lods
mov
sbb
idivb
cmp
cwtl
inc
popf
pop
daa
mov
call
push
fwait
jmp
sbb
cmpsl
mov
or
imul
scas
pushf
ret
push
and
xchg
or
lea
fsubr
sbb
mov
idivl
inc
dec
cmpsb
push
repnz
and
xchg
icebp
aas
fsubr
ficoml
pop
repz
jp
xchg
shr
mov
mov
stos
sbb
cmpsb
sbb
mov
jnp
jp
aad
rcl
mov
jg
and
adc
inc
out
test
adc
jnp
scas
push
iret
fsubr
femms
jo
add
inc
add
adc
xchg
lret
push
jb
test
imul
pop
xchg
movsl
lods
test
aas
dec
xchg
push
xorb
lret
and
into
js
sbbb
popf
or
xchg
adc
std
add
mov
in
mov
icebp
cmc
inc
and
push
push
ljmp
test
inc
cmp
sbb
ficomps
mov
inc
mov
sbb
lods
mov
out
push
adc
jnp
mov
ds
mov
ljmp
inc
test
xchg
test
fcomp
data16
into
mulb
lret
jp
push
in
or
sbb
adc
pop
xchg
stos
test
aad
roll
add
or
cltd
in
ficompl
mov
fisubl
aas
out
adc
cwtl
add
cltd
mov
nop
cmc
xchg
repnz
aam
dec
ljmp
and
mov
cmp
lods
popa
inc
adc
test
loop
xchg
fstp
adc
into
mov
ds
push
or
test
cmp
test
inc
outsb
adc
sahf
nop
ljmp
gs
push
into
ficoml
mov
aas
in
pop
inc
mov
add
sub
lret
xor
loope
fimuls
subb
mov
test
jns
js
pushf
xchg
imul
aaa
or
lock
imul
mov
jae
not
adc
ss
cmp
mov
int3
nop
jmp
xchg
lret
mov
int3
stc
adc
and
ljmp
cwtl
sbb
or
shll
xchg
and
push
pusha
sub
aam
pop
mov
inc
ret
scas
pushf
ljmp
or
lock
push
loope
ficoml
std
mov
repz
addr16
lcall
orb
adc
fwait
or
xchg
sahf
js
inc
mov
xchg
push
xchg
mov
mov
mov
ljmp
mov
jecxz
pusha
sbb
lea
push
xlat
int3
fimull
mov
repz
mov
decl
jl
cmp
test
xor
xchg
sbb
jnp
in
pop
stc
xchg
daa
or
bound
outsb
fsts
mov
adc
movsb
js
jle
mov
cmp
sub
xchg
push
cwtl
or
push
mov
into
xor
in
mov
mov
mov
xchg
fldl
mov
aam
mov
gs
sbb
js
push
mov
and
xchg
adc
push
mov
mov
adc
adc
cmp
test
clc
mov
mov
fcomp
cltd
out
addl
shlb
adc
mov
jae
pop
add
negb
inc
pop
inc
inc
mov
out
sbb
outsb
jg
sbb
jnp
pop
movsb
push
sti
dec
out
sbb
pop
sti
hlt
inc
xor
cmpsb
or
sbb
test
cltd
xchg
lea
mov
test
andl
sbb
rcrl
and
cmpb
dec
pop
nop
movsb
xchg
pop
inc
adc
cmpl
cmp
in
pushf
rcrb
mov
pop
stc
add
cwtl
test
xchg
nop
jle
gs
mov
sbb
push
inc
fyl2x
cld
sahf
xchg
xor
rorb
xchg
push
cmpsb
push
les
and
sub
add
xchg
adc
dec
cmpsl
lret
cmp
popw
movsl
push
and
adc
adc
mov
enter
cmpsl
clc
jle
and
lcall
xchg
mov
adc
xor
ficoml
mov
rcl
imul
sahf
test
xchg
pop
push
push
lods
scas
fiaddl
and
sbb
jcxz
ja
cmp
stos
pop
int3
jne
add
push
xchg
test
push
dec
adc
mov
aas
or
and
push
fwait
ljmp
xor
aas
xchg
call
sub
stos
aaa
and
xchg
cmp
add
stc
dec
clc
mov
or
movsl
out
adc
pop
cmp
cmp
repnz
rcr
cmpsb
mov
xchg
push
repnz
in
jl
xchg
pushf
inc
lods
dec
dec
jp
pop
xor
fsubp
push
cmpsl
subb
outsl
popa
mov
mov
mov
ret
or
xor
jl
pusha
scas
adc
dec
mov
mov
sbb
mov
imul
mov
mov
push
into
mov
aaa
stos
icebp
xchg
jp
pop
mov
out
mov
daa
or
aaa
loop
inc
xchg
jae
and
add
test
sbb
jb
frstor
xor
fisubs
cli
fpatan
xchg
test
hlt
pop
jge
imul
mov
stc
adc
mov
int
or
pusha
adcl
popa
aam
lea
xchg
mov
into
sbb
jns
adc
in
xchg
inc
loope
push
in
fwait
inc
nop
push
adc
orb
mov
dec
repz
jo
push
insb
cmp
add
mov
cmpsb
lock
mov
cltd
dec
cmp
push
insl
fcmove
ljmp
dec
and
xchg
sbb
xchg
xchg
shlb
imul
lcall
test
scas
cltd
mov
pop
pop
push
mov
cli
int3
jge
xor
dec
into
stos
cs
aam
mov
adc
push
sbb
jp
adc
inc
fcomps
push
push
andl
aas
jmp
mov
pop
xor
popf
ljmp
or
test
fmuls
into
mov
in
roll
leave
shr
xchg
outsl
into
insl
pop
sbb
xchg
dec
xchg
jp
sbb
mov
jge
mov
jo
test
pusha
pushf
sbb
fld1
rorl
jo
outsb
mov
mov
adc
int3
movb
jne
out
gs
aaa
and
add
insl
add
or
addr16
xor
subb
out
lahf
ficoms
dec
push
add
stos
jnp
scas
ficoml
cmpsl
push
mov
and
add
test
sbb
dec
ret
cmp
cltd
lahf
hlt
sahf
sbb
jns
je
and
fiaddl
adc
adc
lea
xchg
shll
xor
xor
xchg
sub
test
xlat
add
ret
add
jnp
ficompl
pop
mov
and
ret
mov
mov
pop
cmpsl
pop
jns
iret
mov
into
fsts
ljmp
xchg
add
cltd
mov
add
cwtl
sub
adc
loop
sar
clc
in
movsl
inc
push
pop
scas
stc
or
mov
mov
cmp
xlat
lock
pop
jnp
jb
jge
mov
hlt
push
mov
ds
arpl
xchg
stc
nop
hlt
mov
mov
jp
test
sub
iret
xlat
sub
pmulhuw
hlt
nop
sub
movsl
fldt
rorb
jb
cmp
mov
or
sbb
ror
test
loopne
nop
fcoms
ljmp
ret
cmpsl
negb
xchg
sub
out
adc
repz
inc
test
add
push
push
dec
cmpsb
dec
mul
sub
sbb
fsubl
nop
sbb
and
sbb
sbb
xchg
jle
rolb
fmulp
rcrl
xlat
call
push
add
add
cltd
mov
test
mov
cltd
sub
jge
loope
sbb
lods
mov
mov
mov
cwtl
pop
push
adc
popa
cltd
pop
repnz
mov
push
pop
js
jb
jp
xchg
lret
inc
mov
into
imul
std
push
xor
fisubrl
enter
push
sti
lods
sbbl
rcrl
sub
adc
ss
addr16
pop
cmc
pop
popf
xchg
cwtl
pop
mov
leave
cltd
jp
shlb
pop
jle
les
mov
jae
std
sbbb
int
xchg
pop
adc
icebp
and
in
sahf
ss
push
pop
fcmovbe
ficoml
loop
subb
jg
jb
jno
int3
sbb
test
lahf
subl
mov
push
fisubrs
cltd
imul
inc
js
into
rclb
cld
pop
adc
cmp
negb
sbb
add
mov
in
test
dec
fmull
clc
xchg
adc
pop
dec
jmp
fisttpll
adc
jne
and
cmc
ret
lock
adcl
mov
jo
aam
push
inc
test
aas
test
test
mov
aaa
jb
sbb
mov
mov
inc
dec
mov
sbb
jp
mov
jns
fsubp
movsb
inc
adc
cltd
data16
fmuls
cmp
mov
pop
nop
mov
pushf
xor
cmp
dec
ficoms
sbb
out
test
ljmp
notl
xchg
pop
hlt
test
cwtl
sbb
loopne
xor
cmpsb
xchg
or
aam
cmp
clc
test
filds
test
aam
xchg
cltd
xchg
and
mov
jl
test
rorl
cwtl
out
in
addr16
cmpsb
pop
xchg
push
cmp
rcr
pop
push
movsb
pop
or
ret
pop
mov
pop
jge
pop
cltd
ret
imul
cwtl
ljmp
mov
cwtl
push
xlat
mov
movsb
push
mov
lods
or
std
mov
sbb
in
cmp
xchg
jecxz
and
shr
sbb
aaa
outsb
xchg
add
add
xchg
inc
or
mov
stos
fs
lret
hlt
ljmp
mov
hlt
lcall
or
fisubl
movsl
inc
insl
loopne
mov
mov
jo
in
add
pushf
dec
push
faddl
inc
fildl
mov
mov
movsl
jbe
push
jae
jle
les
lret
loop
and
adc
repz
fdivrs
and
pop
inc
lds
mov
fcoms
fstps
cmp
pusha
mov
ds
into
mov
ja
dec
decb
xchg
push
inc
jb
pushf
mov
or
mov
sbb
mov
scas
sbb
into
jb
pop
test
pushf
mov
push
lods
arpl
mov
pop
cmpsb
addr16
iret
shr
leave
xchg
push
cmp
ds
mov
inc
mov
fcmovu
lcall
setle
addr16
mov
sarb
ljmp
cmp
xchg
addr16
mov
xchg
xor
setne
pushl
adc
push
sbb
xor
sbb
jle
lock
xchg
popa
sahf
test
and
nop
ds
fcomi
ljmp
in
sbb
loopne
test
imul
pop
xchg
sbb
lods
lods
repnz
and
iret
out
mov
repz
test
jp
loopne
cmp
and
std
and
inc
ljmp
stc
xchg
inc
and
xorb
pop
popf
ficoml
je
add
or
rclb
imul
jne
sbb
pop
jae
xchg
mov
je
mov
sbb
int3
out
cmove
sub
push
mov
mov
jne
test
cltd
add
imul
pop
pop
cwtl
jns
or
cwtl
sbb
pop
cmc
pop
mov
fistl
pop
nop
lret
and
repnz
pushf
cmc
pop
cwtl
add
pop
and
rcrb
aam
std
dec
call
push
jecxz
sub
hlt
xchg
addb
jns
adc
sbb
call
pop
fadd
mov
ss
mov
adc
push
adc
or
sub
scas
push
repnz
dec
add
jle
filds
cs
sub
xor
cltd
pop
jb,pt
cli
cltd
pop
jb
jns
fistps
push
xchg
shlb
add
mov
pushf
cmp
jp
dec
mov
push
mov
fwait
ljmp
das
in
mov
push
sbb
sub
and
mov
and
std
jle
idivb
xchg
adc
sbb
aam
dec
or
fwait
cmpsb
popa
xchg
push
mov
mov
stc
xor
sahf
push
icebp
pop
fcoml
fnstsw
test
or
loope
xchg
stos
les
int3
cmpsb
fs
cld
lcall
mov
mov
not
sbb
sbb
out
mov
mov
xchg
pop
cmpsl
insl
sbb
xchg
cli
jo
cmp
popf
shr
jg
iret
cmpb
mov
aam
or
out
andb
lock
iret
cwtd
mov
and
loop
mov
call
test
push
xchg
mov
ljmp
fimull
dec
imul
mov
xchg
or
int3
imull
xchg
cmp
mov
fcomi
test
push
push
sbb
lret
lods
mov
cwtl
add
push
mov
mov
push
pop
test
mov
rcll
shlb
aas
mov
psrlq
add
rclb
and
stos
outsl
and
dec
add
mov
mov
loopne
rcrl
nop
loopne
sahf
xor
les
into
out
sbb
add
out
shlb
xchg
fdivrl
xchg
pop
push
mov
test
cmc
xchg
and
lret
mov
cmp
mov
pop
fadds
mov
sbb
adcb
xlat
jb
ficompl
popa
inc
jb
cld
inc
ret
cmp
imul
les
insb
jl
sbb
jl
loop
fsubrl
dec
into
loop
cld
jl
pop
add
bound
pop
inc
ljmp
mov
rclb
stc
mov
xor
in
and
sahf
or
in
xchg
mov
nop
adc
mov
scas
in
jl
cltd
rclb
xor
sbb
mov
jl
in
sub
ret
jle
lock
ljmp
sbb
lar
and
pop
fcomp
loop
push
lock
pushl
xchg
out
pop
mov
sbb
cmp
outsl
inc
js
jae
inc
xchg
aam
cmpsb
inc
icebp
lock
sbbl
mov
test
xor
mov
jge
mov
aaa
ljmp
popf
subb
insl
push
push
jp
outsb
aam
out
sarb
jecxz
jnp
xchg
mov
mov
mov
and
js
movsb
into
cwtl
fstl
pop
out
cmp
or
lret
pop
faddl
push
lds
add
push
into
mov
fcompl
push
mov
nop
aas
push
sarb
push
mov
pushf
ficoml
int
and
mov
sub
sti
out
std
sub
sbb
idivb
xchg
scas
mov
sub
sahf
mov
mov
sbb
out
popf
pop
mov
ljmp
outsl
mov
mov
sub
sbb
sub
or
gs
ds
rolb
add
pushf
cmp
sbb
repnz
mov
test
repnz
and
ja
fsubs
repnz
push
test
jl
inc
jle
ret
lock
and
mov
push
xchg
stc
rclb
ljmp
pop
cltd
ljmp
pop
fcmove
fimull
jne
dec
in
loop
lods
xor
cmpsb
lret
and
and
negb
sbb
xchg
frstor
lock
ss
lret
mov
mov
loop
sbb
enter
fisubs
push
mov
dec
data16
push
sahf
jnp
in
dec
rcrb
sub
lods
arpl
repnz
incl
xchg
sub
sub
add
cld
push
je
push
jecxz
xchg
mov
ljmp
out
sub
inc
mov
add
test
pop
inc
mov
mov
mov
adc
fdiv
out
jl
shlb
jae
inc
in
test
pop
negb
xor
lods
xchg
hlt
rclb
out
sub
out
mov
fistl
xchg
jp
mov
cmp
fprem1
jmp
sbb
jno
int
hlt
loopne
je
fyl2x
mov
repz
sarl
mov
xor
jne
stos
loopne
ljmp
imul
mov
dec
mov
mov
push
add
jecxz
or
stos
xchg
sbb
fsubrp
test
add
nop
cmp
movsl
mov
into
push
out
out
cltd
mov
pusha
mov
push
cld
lret
cmp
hlt
pop
in
mov
or
mov
sbb
cmp
loopne
add
dec
negl
pushl
adc
jbe
negb
fwait
sub
push
fidivrl
les
or
mov
ljmp
fisubl
insl
sar
hlt
addl
mov
adc
ficoml
das
je
cltd
and
adc
xchg
adc
pop
mov
or
pop
std
mov
pushf
mov
pushf
sti
and
xor
lret
pop
sbb
fwait
test
mov
xchg
add
pop
add
jge
inc
out
xorl
stc
sbb
int3
bound
mov
lea
sahf
mov
pop
xchg
adc
outsb
fidivl
fimull
add
fadds
adc
pop
das
in
dec
mull
rorb
inc
ftst
push
add
lret
pop
lock
sbb
ljmp
lds
in
adc
mov
call
pop
inc
jo
or
sbb
jmp
out
mov
jae
lea
popa
pop
add
lahf
into
cwtl
int3
popf
xchg
or
mov
ficomps
adc
jo
mov
adcl
push
movsb
adc
fidivrl
or
pop
test
sbbb
mov
sahf
fisubl
pop
lock
test
mov
or
xor
fidivl
mov
repz
pop
jge
cltd
pusha
sub
aad
xchg
ficoml
push
and
enter
addr16
in
sbb
jp
fisttpll
add
cmp
fcoml
sbbb
ljmp
push
adc
adcb
xchg
xchg
pop
jl
sub
sbb
or
jle
adcb
push
xchg
mov
push
aam
lods
sbb
push
sub
inc
ficompl
dec
popf
xor
or
push
nop
shlb
cltd
dec
out
ud2
fcoml
scas
je
mov
or
adcb
aad
aam
xchg
mov
adc
push
mov
sti
std
dec
popf
jno
rorb
dec
outsb
mov
decb
and
sbb
xlat
xchg
int3
daa
mov
mov
test
cltd
mov
out
int3
negl
and
mov
int3
push
pop
add
test
pushf
insl
test
or
gs
inc
xchg
lea
popf
fimull
xor
negb
cld
aam
mov
in
ljmp
push
fnstsw
jle
les
mov
pusha
and
pop
sbb
sbb
lret
push
test
test
push
mov
scas
orl
push
inc
cmpsb
scas
dec
out
outsl
test
ret
adc
nop
out
adc
gs
pop
into
lds
or
stc
dec
mov
jno
push
jg
mov
hlt
shl
push
repz
xchg
cmovo
movsb
cltd
and
sub
outsl
adc
push
lods
stc
mov
jae
mov
repnz
shr
movsb
fsubs
dec
subl
in
out
std
mov
dec
in
sbb
adc
mov
test
scas
or
dec
repz
push
sti
cltd
pop
js
xchg
dec
and
jns
aas
cli
shl
gs
cmpsb
rorb
mov
loope
ds
mov
outsb
sbb
bound
stc
mov
or
cmp
cmp
pop
insl
jecxz
lods
inc
sbb
xchg
mov
xchg
mov
ljmp
repz
xchg
cltd
dec
sbb
mov
push
jo
add
xchg
mov
or
sub
test
xchg
out
sbb
gs
xor
pop
scas
jb
mov
idiv
movsl
lret
dec
into
xor
inc
mov
es
enter
mov
and
cmp
loop
aas
repz
test
jae
sbb
add
xlat
es
inc
cmpsl
mov
inc
ret
xchg
cltd
test
cmpsl
ss
pop
xor
jmp
or
mov
mov
adc
xor
add
mov
add
bound
shrb
jno
lcall
adc
push
mov
ds
shl
mov
mov
cmp
bound
xchg
and
es
loope
imul
loopne
xchg
sub
inc
clc
sbb
insb
adcb
mov
pop
mov
in
cmp
cs
jne
ljmp
scas
cltd
mov
cld
pop
das
mov
out
sbb
mov
xchg
aad
insl
xchg
ficoml
xor
sarb
aam
pop
adc
push
repnz
xchg
jle
ss
xlat
fimull
call
jl
cltd
pop
inc
in
ret
mov
push
add
xchg
sbb
test
ficompl
pop
loope
enter
mov
inc
mov
mov
mov
push
sub
in
add
mov
adc
sbb
push
adc
inc
cmpsl
hlt
push
xor
pop
test
int3
mov
jbe
test
aad
jmp
stc
movsb
dec
shrl
pusha
xorb
mov
push
sbb
aas
push
les
push
stos
adc
scas
test
scas
add
subb
mov
mov
stc
cltd
je
push
in
cltd
xor
call
adc
push
and
xchg
adc
lret
push
and
addr16
lret
fcoms
lcall
jae
mov
sub
pop
pusha
xchg
stos
jnp
sbb
jp
pushf
pusha
dec
dec
pop
insl
filds
mov
jae
dec
push
mov
sbb
xchg
lea
bound
adc
sbb
sbb
rcrb
or
jl
aas
out
mov
fcmovnu
adc
cwtl
mov
push
iret
jns
repnz
repz
mov
popf
or
lcall
test
or
into
pop
xchg
add
sbbl
mov
sbbb
mov
mov
push
fsubr
enter
pop
out
pop
mov
mov
ljmp
adc
and
nop
dec
imul
pushf
cmpb
pop
or
in
movsb
jno
pop
cmp
repnz
ret
mov
and
dec
pusha
jo
ljmp
mov
mov
fidivrl
inc
jl,pn
cmp
test
cmp
xchg
enter
fidivrl
out
rorl
pop
cltd
in
sbb
imulb
mov
or
in
xchg
hlt
popf
sub
jle
shl
stos
dec
mov
not
movsb
sbb
mov
insb
into
aam
cmp
dec
pop
mov
pop
cwtl
xchg
mov
loopne
orb
push
loop
insl
arpl
cltd
xor
movsb
push
cmpsl
mov
mov
mov
push
pop
ret
mov
mov
daa
xchg
inc
outsb
fcoml
divl
stos
pop
fldl
fisubrl
ficoml
ss
cmp
add
sbb
daa
lock
xor
stc
dec
mov
dec
mov
xorb
mov
test
cltd
fimuls
push
cmpsl
mov
or
stos
inc
mov
icebp
cltd
pushf
inc
or
imul
int
jecxz
out
adc
xchg
scas
mov
and
stos
fildll
scas
pop
sub
test
fidivrl
cmpsb
adc
add
popf
test
sahf
mov
cmpsl
int3
fdivrl
push
inc
cmpsl
or
dec
pop
stc
jmp
test
lahf
fwait
gs
subl
out
mov
pop
or
into
test
or
adc
pusha
or
pop
or
pusha
insb
xor
jl
lods
lds
adc
lcall
jae
mov
lcall
mov
out
out
cltd
and
not
and
xchg
sahf
test
ljmp
cltd
aas
out
cltd
adc
mov
sbb
mov
pop
sahf
cmp
push
dec
dec
movsb
addps
stos
xor
fldt
mov
ljmp
test
out
sar
div
cltd
push
ficompl
repnz
add
mov
out
fisttpl
leave
lock
jmp
testl
ret
xor
movsb
sbb
push
in
enter
push
and
outsb
in
push
and
push
inc
in
cmp
sub
adc
out
sbb
outsl
xlat
repnz
sbb
sbb
adc
nop
xchg
cltd
dec
outsl
shll
cltd
mov
push
pop
aaa
dec
ficoms
out
dec
or
mov
sbb
adc
repnz
sub
or
loop
mov
ficoml
cmc
sub
stos
adc
push
fdivrs
pushf
xchg
pop
iret
loop
pop
and
fidivl
jae
mov
popf
sbb
scas
jae
cli
ja
cmp
and
outsb
xchg
std
add
cmpsb
in
enter
pop
lcall
cwtl
jns
sbb
mov
sbb
fdivrl
in
push
loopne
xor
mov
enter
rcr
movsb
sub
fistl
sub
cmp
xchg
cwtl
sti
aam
xchg
std
notl
ficompl
adc
jle
mov
xor
and
xchg
in
bound
adc
repz
jb
repnz
mov
call
dec
icebp
pop
or
leave
sti
adc
xchg
jl
mov
mov
dec
ret
in
dec
cwtl
addr16
mov
and
insl
mov
xchg
sbb
movsl
add
sub
sahf
cmpsb
mov
pop
icebp
mov
jg
pushf
repz
sbb
out
lea
pop
add
xchg
mov
adc
mov
addr16
lock
dec
pop
adc
insb
out
or
mov
pop
lahf
iret
lock
pop
je
ud1
xchg
aam
inc
cwtl
dec
imul
push
mov
stos
xchg
in
pop
adc
fcompl
adc
jl
sbb
cmc
test
test
fstpl
xchg
sub
jl
pop
jge
add
fimull
ss
mov
cmpsb
mov
test
lods
pop
adc
dec
adc
out
mov
jle
insl
adc
mov
mov
gs
mov
outsl
adc
xchg
insb
nop
popf
dec
pushf
loopne
push
push
aad
inc
push
lret
das
xlat
lahf
movsl
jnp
push
cmpsb
adc
daa
jbe
in
fsts
loope
jge
test
pop
out
xchg
ds
or
lods
insb
lock
ljmp
inc
mov
lcall
xchg
rcrb
pusha
inc
aas
js
jmp
jb,pn
fisubrl
outsl
dec
mov
pushf
dec
std
shll
sub
call
fcoms
mov
jle
les
mov
sub
rolb
jp
stos
jnp
mov
sbb
dec
aad
push
cmpb
or
adc
loop
adc
push
mov
leave
mov
mull
push
push
imul
sub
jg
ficoml
jno
rcrb
pop
add
lods
orb
pop
test
jl
jae
cmpsb
cwtl
mov
addl
out
add
mov
out
and
jge
mov
or
jp
test
inc
cltd
jae
dec
mov
out
stc
imul
pop
mov
and
adc
mov
int3
aam
jno
rclb
cwtl
sbb
into
mov
loop
sub
sahf
test
ljmp
fcomp
adc
jne
fdiv
cmpsl
into
adc
stos
inc
mov
lret
sbb
mov
and
nop
dec
xchg
cltd
lods
lret
shl
mov
push
push
jbe
and
cwtl
fnclex
push
adcb
fmull
inc
lods
cwtl
push
fcmovne
call
dec
adc
cltd
ret
stc
iret
xchg
lret
fidivs
push
pushf
jle
jns
sbb
xchg
bnd
ror
adc
divw
fisttpl
negb
lock
lods
mov
jl
mov
and
ret
mov
movb
imul
mov
maskmovq
divl
idivb
xor
jecxz
or
add
fisubl
pmaddwd
fidivs
mov
adc
testl
js
xchg
mov
mov
repnz
sbb
mov
pushf
out
ljmp
or
sub
sub
int
mov
xchg
pop
fs
push
ret
fsts
pop
adc
push
xchg
xor
movsl
outsb
lcall
out
int
pusha
movsl
xchg
sbb
add
shl
aam
mov
fidivl
xchg
in
adc
stc
lret
push
pop
push
mov
adc
sub
jle
mov
movsl
into
aam
push
pop
pop
test
stos
out
int3
pop
mov
bound
push
and
jne
daa
scas
fsts
clc
mov
ja
mov
ficompl
insb
jg
fidivrl
outsb
stc
ljmp
pop
daa
hlt
sbb
fmuls
loop
mov
insl
andb
enter
mov
push
mov
into
mov
adc
push
xchg
sarb
dec
ss
cwtl
xchg
mov
testb
fcom
loop
adc
jnp
xchg
push
push
sahf
rclb
pop
add
adc
mov
orb
and
xchg
addl
push
sbb
gs
cwtl
sbb
stc
jg
jmp
jae
testl
adc
mov
pop
das
sbb
jl
rorb
push
dec
outsb
roll
xor
adcb
push
in
pop
add
rclb
rorl
fcomps
inc
sbbb
add
repnz
scas
nop
add
or
pop
mov
xor
cmpb
adc
fwait
mov
dec
or
sbb
add
mov
into
ljmp
push
cli
adcb
sti
cltd
pop
rcrb
in
jmp
mov
adc
fcompl
sbb
adc
aam
les
dec
sbb
into
in
lea
cld
adc
insl
loopne
ljmp
mov
adc
int3
pop
push
scas
sub
loope
xchg
stc
scas
das
cwtl
sub
inc
cmp
shll
xor
xchg
cmp
mov
mov
das
call
pop
sar
sub
xchg
sbb
addr16
jb
xor
push
fbld
cltd
and
and
xchg
cwtl
scas
rcll
jle
mov
mov
int3
push
testl
into
mov
xchg
orb
test
inc
aad
sti
mov
subb
div
mov
xchg
test
sbbb
push
sub
xchg
cltd
in
lock
xchg
mov
jb
ficompl
jge
stos
repnz
add
cltd
mov
pop
in
ljmp
rclb
aaa
cwtl
sbb
xchg
jl
adc
mov
int3
sub
cmpsl
loop
xchg
pop
inc
lret
xlat
push
mov
xchg
shl
idivl
daa
imul
divb
dec
adc
sar
xchg
lcall
sbb
or
ljmp
fisttps
repnz
icebp
pop
je
adc
jp
rcrb
test
fwait
jo
ja
iret
mov
cmpb
or
fcomps
decl
imul
lods
push
xor
in
cltd
adc
lods
iret
pusha
sbb
adcb
cmc
adc
jp
insl
scas
cwtl
ljmp
int
addr16
stos
aas
cmp
int3
clc
ljmp
dec
xchg
fdivrs
mov
add
js
mov
mov
out
lret
push
jg
loope
mov
mov
jge
adcb
stc
pop
or
push
rcrl
pop
mov
or
and
test
movsb
loop
ljmp
jo
aam
and
popf
cmpsb
aaa
in
sub
insl
test
mov
push
push
pop
push
in
into
ljmp
aas
loopne
arpl
sub
out
ljmp
mov
outsl
fildl
push
fstpl
dec
add
pusha
std
inc
aam
cmpsb
xor
dec
je
repnz
dec
aas
mov
dec
out
mov
cwtl
xchg
out
mov
rorb
sbb
mov
sbb
sbb
sbb
mov
lret
xorl
out
cmp
sbb
jae
ret
loop
das
arpl
inc
ret
fidivrs
ret
cwtl
in
ljmp
lret
sbb
jp
inc
push
into
or
xchg
jo
jg
adc
mov
test
add
fcmovu
cwtl
outsb
divb
test
aaa
add
xchg
test
mov
push
or
xchg
pop
pop
stc
int3
in
push
imul
xchg
inc
lock
lock
popa
jmp
xchg
cld
cmp
adc
adc
mov
xchg
scas
push
insl
fimull
or
andb
adcb
adcb
adc
into
loopne
mov
jmp
mov
jno
test
adc
cmpsb
fldl
lea
mov
or
stc
push
test
mov
jns
in
adc
add
xchg
dec
xchg
cs
negb
push
xor
repnz
pop
movb
arpl
sbb
inc
or
mov
add
mov
xchg
mov
adc
xchg
out
cmp
jl
popf
or
add
sub
xchg
hlt
rcrb
jl
movsb
mov
in
push
mov
mov
orl
xchg
mov
out
dec
call
xchg
repnz
xchg
mov
mov
int3
daa
scas
pop
mov
test
das
lods
adc
leave
xorb
push
mov
mov
pop
mov
lods
and
inc
and
sarb
repz
sahf
lods
daa
dec
adc
xchg
pop
and
xchg
mov
movsl
scas
stos
xor
aam
test
enter
lret
and
in
xchg
call
test
xor
adc
jnp
enter
mov
sbb
pop
jmp
stc
ljmp
rcr
mov
ljmp
mov
aam
sar
inc
sub
cltd
or
xlat
dec
inc
mov
rclb
loop
mov
enter
jne
jge
add
call
out
insb
fwait
and
push
movsl
cmpsl
cltd
shlb
pop
stc
xor
aaa
fst
cwtl
push
sbb
sub
sbb
jns
lret
add
lds
pop
dec
sub
mov
rcrb
and
xor
push
rcll
aas
faddl
loopne
hlt
sub
lods
xchg
cmp
jp
pop
xchg
stos
adc
loop
out
jne
inc
nop
lcall
pop
in
push
sti
stos
sub
imul
pop
sub
push
jp
mov
repz
loop
cwtl
test
mov
pop
repnz
mov
repnz
pusha
cmpsb
lcall
jne
mov
jne
mov
xchg
stos
xchg
inc
mov
adc
mov
mov
jmp
jne
movsl
test
push
inc
mov
iret
repz
in
jne
mov
lcall
xchg
sbb
pop
push
jno
mov
inc
lods
or
inc
rorl
ret
or
pushf
and
cwtl
inc
cmp
jg
fcoml
cltd
loopne
or
notb
shrb
add
cmc
jno
sbb
jl
jnp
adc
adcb
ja
ret
test
sbb
adc
stos
xchg
call
dec
pop
dec
jp
lds
mov
incl
cmp
pushf
fisubrl
xchg
jnp
cmp
ja
or
adc
or
adcl
push
mov
pop
jp
lods
mov
jge
mov
inc
scas
test
cwtl
fistl
pop
sbb
fists
dec
xchg
pop
mov
jb
ficomps
movsl
xchg
fwait
xchg
or
imul
jae
ljmp
sahf
cmp
xchg
testb
icebp
add
stc
int3
inc
pop
xchg
mov
adc
xchg
cltd
adc
xchg
cs
js
or
orb
lret
xchg
xorl
or
pop
jns
xchg
jae
ficoms
add
es
or
and
enter
mov
ret
in
and
loope
xchg
ds
ret
lods
lcall
int3
fidivrl
mov
add
jbe
or
xchg
mov
jge
jl
mov
mull
test
into
loopne
sti
js
push
jle
mov
lret
das
movd
jp
cwtl
or
out
mov
sbb
movsb
js
sbb
mov
enter
push
xchg
bound
rcrb
es
psubusb
loop
jno
les
mov
dec
add
push
scas
lods
lret
mov
adc
bound
lret
mov
or
xchg
pop
push
cwtl
sti
xorl
arpl
fiaddl
aaa
xchg
cmp
push
nop
mov
sbb
mov
cmpl
adc
jmp
pushf
ljmp
out
lcall
mov
into
fmull
mov
pop
pop
jo
test
or
adc
outsb
in
push
xchg
ja
mov
addr16
xchg
jp
lahf
or
mov
aad
cmp
pop
xor
adcb
mov
hlt
aas
or
leave
nop
daa
pop
jnp
mov
mov
push
xchg
jmp
sahf
test
outsb
jl
pop
mov
and
adcb
and
fisubrl
rcll
push
adc
pop
push
loopne
dec
mov
ret
test
xchg
negb
adc
mov
dec
jl
outsl
xchg
lcall
movsb
out
mov
popa
cmp
sub
sub
add
xchg
in
and
add
sahf
ljmp
negb
cmp
jmp
sub
sbb
jnp
push
pop
and
jp
push
popa
idivl
mov
mov
rclb
push
outsb
jl
int3
stc
in
jecxz
je
jp
mov
mov
inc
insl
incl
fcmovb
mov
mov
xchg
xor
jle
imul
add
jl
dec
sar
and
mov
dec
sti
xchg
shrl
int3
xchg
daa
push
loop
dec
inc
jp
stc
scas
mov
call
int3
test
xor
rclb
mov
pusha
int3
mov
or
in
mov
mov
ficompl
xchg
lock
mov
mov
mov
ljmp
call
mov
push
add
fimuls
mov
subb
and
ljmp
in
adc
int3
pop
mov
andb
aas
lock
jp
or
xor
rcl
jl
aaa
lods
dec
pop
aam
pop
fiadds
test
popa
and
test
or
bound
sarl
loopne
movsb
lret
xlat
repnz
mov
and
mov
inc
rcll
mov
adc
dec
jmp
outsb
mov
adc
pusha
xchg
lods
sbbb
jmp
cltd
jl
xlat
and
aam
adc
pusha
rcr
popa
sub
fiadds
sahf
mov
lock
or
jg
insl
es
nop
xchg
mov
movsb
sub
jl
and
cwtl
cmp
mov
or
mov
fs
sub
inc
adc
lret
pop
sub
mov
push
xchg
test
into
cmpsl
cwtl
jg
xchg
jne,pt
lods
sub
mov
jns
lahf
cwtl
inc
popa
psubq
cltd
ljmp
jnp
and
xchg
repz
push
insb
repz
ficoml
sbb
ljmp
mov
nop
inc
cli
fdivrs
inc
test
mov
lfs
mov
pushf
out
mov
jnp
movsb
cmpb
sti
mov
push
movsl
mov
scas
mov
lret
and
ljmp
mov
cmp
dec
pop
into
cmpsb
push
fnclex
mov
les
ljmp
dec
mov
pop
pop
subb
cli
mov
mov
and
lret
scas
ficomps
mov
push
jno
scas
pop
cwtl
push
adcb
das
dec
mov
ret
test
nop
jp
sub
adc
out
mov
clc
and
fmuls
dec
outsb
idivl
out
sbb
inc
dec
xchg
test
hlt
pushf
mov
pop
mov
aaa
pop
inc
ljmp
ret
daa
insl
mov
ljmp
into
lret
nop
xchg
pop
out
xchg
lods
jecxz
mov
lss
and
repz
in
pop
xchg
and
dec
inc
adc
mov
lods
sbb
fwait
scas
sarb
adc
les
pushf
cmc
aad
push
and
jno
mov
add
pop
pop
dec
sbb
jp
pop
cwtl
xchg
pop
fpatan
xor
in
in
call
lret
or
inc
xor
or
sub
rcrb
mov
es
lods
jb
ret
movsb
jb
cs
fisubrl
jae
fdivl
sub
xchg
push
mov
lock
mov
insb
nop
int3
xchg
cmp
and
arpl
lock
mov
mov
inc
mov
pop
pushf
inc
jmp
ljmp
mov
xchg
adc
fmuls
xchg
inc
xchg
sarb
mov
add
fdiv
xchg
pop
lea
call
pop
xchg
pop
jae
or
stos
movsb
jge
cwtl
sbb
shrb
or
shlb
mov
sbb
jge
inc
xchg
pop
pop
test
sbb
cmpsl
mov
pop
sbb
push
jp
cltd
or
xchg
and
xchg
and
or
sbb
test
add
sbb
sub
addr16
mov
nop
and
xlat
test
xchg
push
out
and
xchg
out
ret
aad
rcr
popf
nop
fldl
xchg
jne
jg
push
mov
test
fcmove
dec
dec
push
mov
mov
jecxz
popf
or
shll
cmp
lcall
inc
testb
xlat
sbb
leave
mov
add
xchg
mov
mov
dec
popf
orb
pop
repz
aam
dec
inc
sahf
mov
mov
pop
cmpsl
mov
jns
outsl
out
sbb
xchg
xchg
fwait
jle
je
mov
mov
mov
adc
inc
xchg
enter
lock
psllq
xchg
insb
cmpsl
nop
dec
stos
mov
lock
adc
add
jo
adc
push
push
cwtl
push
nop
mov
push
mov
mov
mov
cmc
cwtl
ret
cmp
cmpsb
test
adc
jl
mov
daa
pusha
adc
mov
push
inc
out
clc
bound
scas
mov
sbb
jno
and
roll
insl
mov
mov
push
and
jo
les
test
jne
inc
stos
lcall
test
cltd
jmp
xchg
pusha
push
repnz
ljmp
ljmp
mov
loop
inc
ret
stc
sbb
das
std
inc
sahf
loopne
lea
adc
jne
incl
and
and
shrb
cs
pop
cltd
fildl
xchg
mov
repz
shlb
roll
xor
fiaddl
aaa
stc
insl
xchg
adc
push
sbb
fcomp
mov
rorb
push
push
jbe
andl
pop
ffreep
cs
pusha
xchg
test
mulb
ljmp
jl
ljmp
loopne
sti
ret
les
sbb
negb
stos
push
pop
ja
adc
pop
or
jecxz
jp
pop
jb
mov
jne
movsb
cwtl
cmp
mov
sbb
pop
cmp
xor
gs
or
xchg
adc
sub
and
test
stc
out
sub
enter
fbld
ficompl
inc
lock
push
mov
mov
sbb
pop
popf
mov
in
sbb
adc
mov
repz
dec
sub
mov
int3
jb
lahf
jne
insl
fsubl
hlt
mov
jno
sbb
outsl
js
aad
jns
ljmp
stos
adc
into
loopne
adc
daa
enter
or
dec
pushf
mov
xor
test
mov
jae
shrb
or
mov
nop
ljmp
pop
jno
sbb
jmp
add
std
aad
out
ret
pop
fcmovu
adc
xchg
sub
sbb
pop
mov
movsl
adcb
inc
pop
test
mov
roll
lcall
jns
adc
and
mov
sbbb
test
dec
out
adc
movsl
lcall
add
insb
or
mov
dec
icebp
xor
and
pop
inc
pop
or
sbb
lret
ficomps
ljmp
mov
test
lahf
mov
cmp
push
add
mull
adc
jl
das
jbe
xor
sub
xor
or
ficoml
fstpl
cmp
mov
shll
nop
test
push
jnp
jle
mov
xchg
xchg
aam
sarb
hlt
nop
jb
sarb
enter
adcb
gs
push
or
jnp
data16
xchg
push
lret
mov
ljmp
add
mov
jle
jp
mov
mov
xor
push
inc
mov
push
sbb
mov
mov
sarl
mov
mov
shlb
xor
orb
and
mov
jl
adc
in
pop
push
ljmp
negb
jns
out
xchg
lret
mov
das
fisttpll
stos
and
sqrtps
pushf
mov
filds
icebp
ficoml
mov
sbb
push
mov
test
inc
mov
push
dec
cmp
hlt
scas
cmp
dec
xchg
inc
sbb
mov
movsl
push
mov
xchg
ljmp
cwtl
jl
sbb
in
jae
mov
rolb
mov
and
jg
mov
xchg
test
push
mov
xchg
lcall
mov
add
std
mov
call
mov
jg
mov
rclb
ficoml
or
icebp
jl
jp
fildl
inc
adc
jb
pop
mov
movsb
sub
mov
cltd
mov
pop
mov
fcompl
cwtl
adcb
ljmp
sarb
out
les
nop
je
mov
pop
dec
ljmp
or
sbb
aam
adc
roll
dec
rcrb
dec
pop
mov
test
xorl
pusha
pop
cmp
adc
inc
scas
stos
jmp
mov
lods
jp
adc
jecxz
xchg
jns
sbb
in
aas
lahf
adc
jbe
fs
jo
outsl
fsubr
sub
sub
mov
cmp
cmpsb
adc
jle
or
mov
xchg
jae
loop,pt
clc
lods
sbb
gs
in
std
orb
mov
sbb
decb
lret
push
scas
adc
xlat
or
loop
adc
xor
pop
dec
imul
jo
and
test
scas
mov
adc
and
mov
inc
lcall
push
lods
sbb
sub
jp
in
ds
insl
loope
shlb
push
scas
inc
lock
out
rclb
imul
cmpsb
mov
pop
aad
cmp
sarb
add
mov
mov
sub
pop
jno
mov
test
nop
gs
inc
shld
sbb
sbb
lea
jg
lea
outsl
jae
ljmp
inc
jb
ficoml
cld
adc
mov
fs
xchg
sbb
push
icebp
mov
repnz
sahf
xchg
test
ljmp
scas
ljmp
in
testl
lds
mov
mov
jns
mov
jge
jne
sub
js
loope
pop
out
jle
mov
subl
test
adc
or
fadds
adc
xchg
cmp
nop
mov
and
jmp
dec
loopne
inc
mov
test
sbb
ret
or
in
xor
stos
xchg
adc
cmpsl
ljmp
cmp
movsb
lock
jo
fdivr
test
cmc
nop
xchg
fisubl
add
out
mov
and
push
subb
jno
mov
push
loopne
cmp
lods
push
mov
sub
addr16
out
jmp
cmp
pop
push
into
test
add
xchg
mov
je
nop
lock
in
loop
pop
cltd
shll
mov
lds
imul
xorb
jnp
or
fcoms
insl
mov
push
push
outsb
ret
xlat
test
pop
hlt
dec
lea
lods
mov
pop
add
cli
into
out
test
shll
mov
enter
jne
gs
insb
bound
sbb
imul
mov
lret
xor
fmull
xchg
je
add
sbb
add
or
loope
or
cmpsb
or
sub
mov
ljmp
or
mov
test
negb
cmp
ret
cmp
sbb
pop
mov
sbb
jp
pushf
mov
xor
jecxz
aam
add
push
not
sbb
add
mov
lahf
stos
jne
ljmp
call
js
mov
cmp
ds
fsubr
sub
push
mov
xchg
sbb
inc
xchg
cld
lock
test
jnp
lds
mov
xchg
mov
stc
scas
fimull
subb
dec
lock
in
cltd
pop
and
loopne
lret
aad
jmp
push
les
push
punpckldq
and
mov
push
xchg
or
hlt
mov
ljmp
xorl
pop
add
lock
inc
in
adc
cmp
or
dec
lock
mov
sbb
sbb
cmp
dec
insb
fwait
shll
shlb
out
jne
scas
ds
es
fsubl
xchg
test
ljmp
xchg
push
gs
inc
mov
xchg
mov
inc
aam
mov
cltd
adc
testb
rcrb
pop
iret
push
pop
sub
sbbb
mov
push
loop
add
mov
lret
dec
int3
or
dec
lods
test
cmp
ja
xor
cmp
loopne
or
add
sbb
push
mov
data16
pushf
test
jmp
daa
push
pushf
adc
jns
cli
inc
adc
test
orb
pop
xor
mov
push
adc
pop
cwtl
out
cmc
cmp
orb
fbld
mov
out
xchg
emms
cmp
imul
mov
cld
dec
cmp
clc
cltd
pop
hlt
fdivrl
xor
ljmp
outsb
jne
ficoml
jp
push
pop
push
xchg
ficompl
js
cmpsl
pop
fwait
jae
xor
aam
sub
stos
lods
xor
lahf
and
and
cwtl
mov
les
mov
mov
int3
jp
inc
rcrb
jg
xchg
cmpb
push
stc
xchg
or
and
ds
fld
ret
jnp
ret
dec
jno
sar
cwtl
aaa
mov
or
jle
jg
mov
and
mov
sbb
ds
mov
lret
aad
lcall
inc
aad
test
insl
push
pusha
xchg
cmpsl
xor
mov
out
add
adc
out
xchg
out
mov
fwait
mov
test
adc
test
ficomps
adc
hlt
add
xchg
and
pop
clc
inc
pop
or
pop
and
add
movsl
add
mov
out
test
add
popa
jg
xchg
rcr
add
inc
cltd
rorb
pop
lea
fmuls
ljmp
xchg
jns
in
scas
and
lcall
mov
in
push
cmp
nop
sbb
pop
mov
fwait
and
outsl
popf
subb
or
mov
cmp
je
ja
dec
cmp
push
and
imul
test
jnp
mov
add
mov
fadd
movsb
xchg
lret
cmp
mov
mov
push
jmp
inc
mov
lea
add
lcall
nop
in
and
cmp
data16
lock
test
stc
lcall
and
pop
movsb
fidivrl
sbb
jb
push
jnp
scas
adc
cmpsb
in
mov
jno
repnz
push
adc
pop
iret
jp
js
mov
jns
pop
fidivrs
inc
mov
ljmp
push
popf
mov
in
mov
xchg
jl
adc
push
lock
in
movb
dec
jb
int3
fidivrs
fnstcw
jo
fmuls
adc
mov
add
mov
push
inc
mov
adc
pushf
push
mov
lods
or
int
es
adc
rclb
popf
testb
sbb
xor
or
jo
fisubl
scas
lock
adc
pushf
mov
je
xchg
ficoml
nop
ja
enter
mov
cltd
xchg
aaa
sbb
xchg
test
mov
sbb
cmpsb
add
pop
rcrb
sub
fwait
mov
inc
mov
or
cmp
cmp
cltd
ss
cmp
sbb
mov
test
lret
xchg
mov
into
in
push
jbe
dec
roll
movsb
das
sahf
fidivrs
cmp
cltd
sub
roll
sub
ljmp
mov
cmp
jg
fucompp
push
or
inc
jno
fcomps
pop
loopne
or
into
cmp
jl
hlt
sbb
imul
and
xchg
xor
and
add
fidivrl
movsl
dec
ja
jnp
lds
mov
insb
xor
jp
mov
scas
ret
mov
fisubrs
jmp
mov
negb
inc
xor
sbbb
cmp
and
jp
test
add
int3
cwtl
xor
xchg
mov
pop
and
call
dec
xchg
adc
insb
add
inc
into
ret
push
stos
sbb
loopne
mov
popf
dec
loopne
into
mov
mov
sbb
pop
sti
mov
ja
adc
pop
stos
fwait
mov
fmuls
sbb
cltd
sbb
and
pusha
imul
rclb
cld
mov
out
cltd
nop
mov
lock
push
mov
orb
dec
mov
movzwl
lahf
nop
ljmp
xor
mov
lea
sbb
dec
jle
mov
fnstenv
mov
dec
outsl
push
push
mov
xchg
negb
in
push
sub
jp
int
inc
cmpsb
add
or
sbbb
lds
cmp
out
test
sbb
jp
inc
pop
stc
bound
or
jmp
lahf
jp
jns
or
fimull
xor
xchg
fimull
mov
jmp
xchg
cltd
xchg
int3
mov
popa
jns
hlt
fcoms
or
mov
outsl
mov
adc
divb
ljmp
repnz
fwait
lds
test
sbb
xorb
stos
std
aas
add
lock
mov
adc
mov
sbb
outsl
xchg
inc
jge
mov
adc
cltd
cld
jno
xorb
mov
xchg
adc
pushf
adc
push
pop
leave
pop
dec
mov
rcrb
sub
sub
pop
loop
mov
stos
pop
adc
outsl
cmp
cmp
aam
adc
mov
repnz
sbb
xorb
gs
push
test
adc
es
push
and
sbb
xchg
push
adc
outsl
iret
movsb
jae
roll
cltd
out
fs
xor
mov
and
enter
pop
xchg
cmpsl
adc
into
imul
adcb
loopne
mov
adcl
repnz
inc
jl
stos
or
sub
adc
imul
jp
lods
inc
jb
rolb
das
idivb
shl
psubq
ljmp
fldpi
push
lret
xchg
fcmovu
lret
sub
pop
jecxz
cmpsl
and
stos
and
xlat
push
aam
xchg
incl
int3
mov
ljmp
mov
push
cmp
xor
pop
xchg
imul
and
push
addr16
push
inc
out
cltd
push
out
inc
daa
into
push
lret
jns
lods
add
xchg
sbb
cmp
xchg
inc
sarb
or
fisubl
in
inc
outsl
dec
lock
stc
adc
out
enter
sbbb
psubusb
loope
xor
ret
fwait
aam
cltd
adc
mov
pop
pop
movsb
movsb
cwtl
cmp
or
aam
inc
insb
ja
inc
test
inc
pop
nop
sbb
and
cmpsl
lock
mov
add
jge
mov
fwait
jp
jl
rcr
in
xchg
push
push
sbb
cmc
rcll
rclb
nop
cmpsl
fdivrs
adc
lds
adcb
pop
int3
cltd
in
cmp
jl
out
lods
ljmp
aas
cs
sbb
lods
bound
leave
lcall
pop
testb
push
jb
dec
pop
ja
push
pop
push
jb
mov
vpaddq
in
sbb
sti
es
fisubs
fdivr
dec
and
mov
into
in
push
add
push
movsl
mov
int3
mov
cwtl
cwtl
data16
mov
and
pusha
jle
sub
shlb
fsub
jp
jle
lahf
xchg
push
jae
pusha
js
adc
js
and
into
mov
addl
shlb
in
nop
enter
pop
dec
nop
repnz
and
mov
add
ficomps
fcomi
in
repnz
loope
mov
in
and
xchg
repnz
rcl
mov
repz
xor
pop
cwtl
xchg
lret
leave
ficoms
mov
or
adc
pushf
dec
jae
je
mov
mov
xor
mov
lock
jl
cltd
fsubs
push
add
lret
add
pusha
rol
sbb
adc
pop
jo
mov
sbb
js
aad
adcb
int3
push
push
rcl
adc
adc
inc
lcall
mov
sbb
mov
pop
daa
outsl
dec
and
jnp
gs
fidivl
lock
mov
push
into
ficompl
mov
int3
mov
inc
test
cwtl
imul
stos
movsb
lock
sub
or
movsl
xchg
shr
test
fimull
ret
push
or
mov
sahf
daa
shl
and
out
add
inc
das
popl
sub
jecxz
hlt
data16
fcoml
sbb
sbb
xor
or
mov
ljmp
xchg
push
mov
jo
subb
ds
mov
idiv
sub
adc
xchg
loop
xlat
jl
pop
add
stc
jp
pop
dec
test
mov
dec
pop
adc
push
sahf
xchg
cmpsb
test
fsubp
clc
cmc
or
add
push
cmp
sub
loopne
xchg
dec
mov
xchg
dec
push
dec
xorl
mov
mov
xchg
push
add
rorb
imul
std
leave
jle
icebp
pop
lret
mov
add
jl
lahf
mov
into
xchg
and
adc
jo
mov
mov
enter
imul
xchg
int
sub
cmp
add
shll
nop
loope
pcmpgtd
insb
pushf
mov
or
out
lret
mov
pop
adc
xchg
sbb
cwtl
xlat
jg
pop
add
daa
cmp
mov
mov
jno
negb
inc
jge
into
cwtl
std
loope
pop
psadbw
fidivl
lfs
jle
jno
lret
scas
in
nop
sub
div
add
lcall
push
repz
rcr
push
or
add
jge
les
xor
pop
xchg
inc
rol
hlt
mov
adcl
lret
sub
or
outsl
lsl
xchg
pop
sbb
int3
or
or
fisubl
daa
lret
xchg
mov
adc
cmp
mov
loopne
and
jle
xor
inc
pushf
mov
inc
aam
sub
das
adc
call
ja
sbb
stc
test
push
fnstcw
ss
mov
adc
in
mov
jp
adc
sub
add
mov
imul
fidivl
hlt
rcrb
inc
sbb
pusha
sub
ror
lret
xchg
testb
dec
and
daa
shrb
call
pop
ret
mov
lahf
ljmp
pop
into
ret
sbb
rcll
std
or
ja
adc
push
mov
dec
in
rcrb
scas
mov
loopne
pop
test
fsub
xchg
lods
xor
outsl
push
scas
movsb
cltd
inc
rorb
adc
bound
ja
repnz
xchg
js
fdivrl
lock
sub
lret
push
movsb
adcl
sbb
and
push
adc
lods
mov
cmp
mov
mov
test
fdivrs
test
push
adc
rcll
push
cmp
mov
sbb
rorb
lds
fdivrp
add
rorb
mov
push
movsl
xchg
xchg
inc
js
out
mov
test
xchg
ljmp
push
nop
hlt
scas
leave
shlb
hlt
les
xchg
mov
add
jle
sbb
jp
leave
sbb
xchg
xchg
cmp
cwtl
stos
and
in
pop
mov
mov
xor
push
and
push
and
into
lock
cwtl
or
push
mov
push
xchg
inc
shll
dec
mov
mov
xchg
cwtl
jmp
xor
lods
add
jg
jl
ret
movsl
xor
pop
mov
fcmovu
lods
rclb
dec
cs
into
ja
jmp
cmp
pushf
mov
dec
in
mov
mov
filds
jb
or
pushf
popf
gs
mov
xor
gs
or
pop
and
sbb
ljmp
dec
outsb
mov
pop
adc
faddl
mov
jle
jl
dec
xor
inc
mov
xchg
in
sahf
lds
outsb
bound
jle
pop
arpl
jnp
testb
std
mov
mov
mov
stos
pop
lds
sahf
f2xm1
push
xchg
cs
xchg
inc
ljmp
push
cwtl
cmpb
ja
push
pop
cli
push
fnstcw
sbb
nop
xchg
pushf
mov
js
push
jns
mov
jne
inc
test
inc
roll
ficomps
adc
cld
loop
out
add
and
dec
dec
in
mov
pusha
xchg
mov
dec
imul
pop
xchg
adc
les
stos
pusha
adc
lods
nop
xor
xchg
xchg
jae
neg
sub
mov
push
scas
into
xor
or
mov
fmuls
hlt
pushf
mov
push
arpl
shrb
lcall
mov
in
lret
push
or
and
icebp
fdivrs
xor
xchg
pop
je
decb
pop
mov
rorb
dec
jae
pop
daa
sbb
fnstcw
jg
adc
fisttps
push
mov
das
add
fisttpll
mov
imul
mov
mov
in
cwtl
mov
pop
mov
pushf
or
adcb
mov
fwait
jno
and
ja
idivb
movsb
push
rolb
dec
adc
sti
test
mov
add
rcll
mov
shl
jmp
lret
or
push
jp
outsb
sbb
dec
orb
mov
cmc
sbb
icebp
out
xor
and
fucom
xchg
cs
mov
fwait
loopne
mov
and
and
jp
pop
inc
nop
ret
das
sbb
ficomps
jle
jmp
movb
ja
mov
xchg
aad
fnstsw
xchg
insl
adcb
dec
andb
movsl
repz
sub
inc
adc
or
jg
mov
add
mov
adc
push
and
ret
lock
cwtl
test
repnz
cwtl
arpl
test
push
mov
sbb
pop
into
orb
sub
jp
and
std
addr16
int
je
xor
xorl
insb
pop
and
sti
and
or
mov
pop
movsb
repnz
test
ss
add
jle
aam
mov
mov
lret
popf
in
sbb
fiadds
out
mov
sbb
mov
in
sarl
cmp
add
repnz
jge
fcmovb
push
out
jne
push
sbb
call
ljmp
dec
inc
mov
lock
in
sbb
mov
rcrb
shrl
adc
fdivrp
je
fmuls
mov
ljmp
cltd
and
or
pop
cmpsb
mov
test
clc
movl
loop
push
test
and
push
ret
sbb
mov
xor
test
ss
jmp
pushf
insw
lea
mov
jne
or
rol
stos
mov
dec
jecxz
pusha
pop
jg
dec
jp
xchg
loopne
and
sub
rolb
pop
lret
imul
sbb
xchg
test
and
xchg
mov
and
fsubs
popf
adc
int3
mov
xchg
aam
mov
rolb
ret
fmuls
pop
nop
movsb
jbe
mov
sub
mov
lret
imul
repnz
and
rcrb
popa
inc
xchg
mov
dec
outsl
arpl
rcrb
push
push
jnp
add
sbb
andb
xchg
jge
popf
dec
inc
dec
rclb
sub
dec
push
xor
out
lock
xchg
cld
cmp
mov
mov
nop
sub
cwtl
mov
inc
lret
test
xor
inc
subb
add
mov
mov
jge
ficompl
out
into
rcrb
sbb
add
fcomp
xchg
cld
je
aam
daa
cltd
jp
out
pop
scas
jg
js
aad
hlt
xchg
ficompl
std
dec
out
pusha
idivb
lock
lock
push
ret
cmpb
xchg
cwtl
pop
test
mov
test
scas
mov
sbb
fwait
loopne
ret
xchg
fsubr
jl
stc
pop
cs
popf
repz
outsb
mov
sbb
out
inc
mov
jg
in
mov
pop
or
lds
ficoml
jmp
cmp
mov
bound
movsl
push
out
adc
loop
pop
hlt
xchg
rcll
nop
ljmp
inc
fs
push
jns
pushf
xlat
sub
push
jle
push
call
inc
mov
pop
and
jo
mov
ds
dec
cmp
fsts
push
dec
outsb
jl
and
mov
scas
test
imul
jne
adcb
mov
outsb
test
cwtl
xchg
stc
jmp
pop
test
out
testb
mov
jl
nop
push
cmp
ja
int3
out
test
and
sahf
cmp
fwait
pop
add
ljmp
sbb
push
push
pop
gs
mov
insb
push
xor
test
subb
inc
loopne
cltd
xchg
adc
push
sbb
xorb
loop
repnz
xor
pop
pop
and
and
out
pop
sbb
popa
xor
subb
or
and
into
testb
push
and
jl
outsb
xchg
pop
insb
lock
jnp
idiv
hlt
cltd
mov
sub
jge
enter
inc
fucomip
ljmp
adc
dec
repz
test
xchg
sti
pop
and
mov
outsl
dec
sbb
aad
xor
call
cmpsl
and
adc
mov
pop
pop
je
jnp
mov
mov
repz
addb
sub
into
pop
and
out
sbb
clc
mov
xchg
bound
fsubl
mov
out
lret
jp
xor
jmp
call
mov
sarb
aam
scas
cltd
jnp
ds
inc
mov
or
dec
out
or
fimuls
pop
mov
mov
stos
jecxz
mov
xchg
lods
lcall
arpl
jmp
addb
aas
fdivrl
jcxz
popf
sub
test
sub
xor
adc
sbb
jo
ljmp
fwait
scas
dec
push
adc
fcmovb
mov
xchg
outsb
iret
negb
cld
in
pop
pop
pushl
lods
xchg
sbb
mov
arpl
push
push
push
xchg
fcmovu
or
push
xor
mov
repnz
pop
ret
mov
stc
mov
sbb
push
insl
mov
dec
int3
lret
aam
je
ljmp
daa
sub
filds
rorl
push
sbb
bound
inc
adc
pop
add
jno
int3
lcall
jle
xchg
mov
ret
sub
sbb
mov
jne
rcl
push
cwtl
pop
int3
mov
adc
ficomps
arpl
out
enter
out
nop
add
push
jge
jno
sbb
in
jecxz
pop
sar
xchg
xchg
inc
and
mov
add
negb
adc
and
into
adc
das
subb
mov
push
test
hlt
or
mov
mov
enter
xchg
mov
pop
bswap
into
mov
es
cltd
in
dec
popa
sub
jp
adc
mov
inc
lcall
orb
arpl
negb
ljmp
in
out
or
jecxz
je
jmp
mov
jo
in
mov
push
jmp
sahf
fnsave
inc
xchg
pop
negb
mov
push
pop
inc
jecxz
jmp
movsb
xchg
dec
pop
and
gs
nop
mov
mov
cwtl
loop
add
mov
lcall
in
cli
adc
jno
sbb
pop
pushf
das
test
inc
roll
test
pop
shll
lahf
fnstcw
cli
notb
push
xchg
clc
fisubl
aam
insl
jae
addb
lock
pushf
test
jo
mov
call
inc
insl
pop
jne
add
loope
lock
mov
sbb
fwait
cmpb
out
xchg
mov
out
pop
nop
enter
pusha
push
pop
test
mov
stc
xchg
jae
inc
jecxz
xchg
sbb
inc
test
ret
xlat
dec
les
sbb
jne
inc
mov
fisubl
push
mov
loopne
sbb
enter
test
lods
dec
xchg
aam
das
pushf
ljmp
ret
mov
sbbb
lock
cmp
cld
je
adc
sub
scas
enter
pmaddwd
and
inc
sub
jno
fcomps
adc
cwtl
inc
js
rcl
mov
cs
jle
int
mov
sbb
adc
jb
movsl
imul
je
add
popa
mov
lret
adcb
pusha
in
jb
dec
sarb
outsl
pop
cmp
iret
neg
and
dec
push
fiaddl
inc
inc
andl
xchg
sub
fcoml
test
aam
es
mov
test
mov
xor
xchg
popf
loop
xchg
cs
ljmp
sub
mov
dec
fcomp
dec
xor
xchg
mov
xchg
mov
cmpsb
xchg
and
lods
and
push
rcr
jo
ljmp
scas
aam
and
inc
in
or
gs
movsl
sbbb
dec
and
lock
sbb
xor
or
in
xchg
mov
cmpsb
mov
mov
mov
sti
mov
push
lahf
js
jo
in
dec
stos
rcl
ret
mov
cld
enter
fwait
jl
jle
in
mov
sbb
dec
hlt
xchg
sbb
pop
sti
xchg
fwait
cwtl
dec
addl
adc
js
movsb
rolb
mov
xchg
cmp
and
ret
gs
xor
jle
lock
es
sbb
jnp
and
iret
mov
xor
lock
sub
jno
scas
sub
adc
adc
cwtl
mov
xchg
mov
popf
mov
mov
inc
negl
cmc
je
repnz
sub
push
test
fs
jl
out
mov
flds
in
test
sub
aas
into
mov
movsb
shll
popl
lcall
iret
adc
adc
lock
repz
idivl
xchg
pop
ja
sub
cwtl
mov
aam
cli
in
sbb
lds
sbb
rclb
inc
je
xchg
xchg
inc
pop
ss
pop
pop
subl
pop
xchg
aad
insb
in
mov
adc
lcall
test
test
test
sti
aas
fnsave
xchg
inc
push
add
in
jl
pushf
inc
cltd
cmpsl
push
or
xlat
mov
test
cmpb
notb
outsb
out
fbstp
jl
mov
mov
nop
adcb
fdivl
push
or
sbb
lret
in
test
sbb
jle
push
repz
pop
pop
test
mov
mov
pop
jae
add
stos
push
ljmp
jmp
imul
add
inc
cmp
mov
mov
pop
sti
xchg
pop
jns
cmp
xor
out
mov
dec
dec
test
sti
mov
xchg
xor
and
les
ljmp
sub
push
mov
push
scas
clc
cwtl
cwtl
aam
ret
mov
adc
cs
fimull
ss
mov
sub
loopne
cs
test
repz
lock
lret
sbb
pushf
cwtl
dec
lock
cwtl
cltd
inc
jle
add
adc
faddl
pusha
int
jp
sub
xchg
pop
dec
add
sbb
loope
push
and
adc
sub
cmpsb
pop
sbb
jb
mov
mov
pop
sbb
cltd
cltd
fnstcw
insl
aas
sbb
rclb
mov
jns
cltd
pop
mov
or
sbb
add
mov
mov
clc
ljmp
xor
adc
rorb
jne
cmp
lods
add
bound
das
dec
in
and
adc
jae
xor
mov
lock
negb
sahf
scas
lods
pop
cwtl
pop
mull
mov
stos
nop/reserved
nop
ljmp
jp
pushf
xchg
mov
xor
outsb
adc
sub
loopne
xchg
cmp
cmpsb
pop
xchg
repz
mov
fcmovnu
call
std
insl
sbbb
sbb
lods
push
adc
inc
and
ljmp
aad
iret
lods
imul
cwtl
xor
mov
jp
xor
je
or
ss
in
xchg
mov
movsl
jns
cmpsl
hlt
cltd
cltd
ja
notl
ljmp
adc
mov
sub
mov
repz
cltd
push
jmp
ljmp
popf
in
jge
pop
cltd
push
repz
sti
xor
lret
in
sbb
lods
dec
xor
cmp
adc
mov
int3
das
sbb
pop
mov
enter
cmp
push
add
xchg
lds
mov
add
or
std
mov
cltd
sbb
icebp
daa
sbbb
sahf
call
daa
clc
pop
jle
xorb
or
cmp
mov
subl
dec
pop
sahf
test
ljmp
mov
sbb
xchg
pop
idiv
xchg
fs
ficoml
ficoms
fisttps
enter
xchg
xorb
int3
je
xor
mov
testb
add
mov
ret
iret
mov
cmp
cmpsb
int3
fcmovb
in
mov
daa
and
jne
xchg
mov
mov
stc
pop
adc
scas
out
pop
sbb
cwtl
adc
adcl
lea
cltd
mov
pop
mov
repnz
xor
into
enter
mov
fimull
mov
mov
aaa
notl
pop
jecxz
loope
jae
cmpb
push
mov
test
sbb
jns
mov
sbb
lods
xchg
cmpsb
sbb
cmp
fldenv
push
loopne
rclb
cmpb
jnp
fimull
add
lods
data16
ret
cmp
dec
mov
sub
and
sarb
mov
icebp
aas
push
dec
xor
sub
pop
or
mov
jno
fcomps
cmp
std
mov
cltd
pmaddwd
nop
and
ljmp
mov
sti
dec
rorb
mov
push
shlb
and
jl
sbb
loop
jp
xchg
dec
push
enter
lret
lods
dec
std
xchg
nop
ret
mov
fwait
hlt
loop
lods
shrb
mov
and
lods
movsb
adc
push
jne
inc
lock
or
mov
dec
jne
aad
push
push
and
dec
popf
adc
xchg
out
pop
nop
fdivs
jno,pn
jmp
jno
ljmp
add
rorb
xchg
push
mov
cltd
mov
or
pop
fcomp
xchg
sbb
dec
mov
cltd
into
mov
loope
rcrl
andl
stos
dec
adc
xchg
hlt
shlb
arpl
movsb
mov
and
add
pop
aas
insl
andb
aad
sbb
xchg
or
push
lahf
xchg
pop
push
push
cmpsb
ljmp
jmp
xor
push
push
cmpsl
test
dec
dec
rcrb
and
mov
jle
adc
or
mov
jecxz
and
insl
mov
dec
mov
out
adc
xchg
sbb
push
dec
cmp
test
rcrb
fs
mov
jp
aaa
ret
nop
inc
jbe
les
sbb
rcrb
dec
inc
xchg
int3
gs
mov
pop
test
stc
mov
fstpl
sbbb
lods
dec
scas
lcall
or
adc
scas
mov
sub
pop
scas
cmpsl
jle
mov
push
cmc
jle
fsubs
adc
notl
movsl
or
fdivrl
sub
imul
rcll
push
push
pushf
sbb
cmp
inc
sbb
rcr
adc
adc
mov
adc
sbb
cmp
es
fcmove
fistps
pop
adc
sub
xchg
lahf
add
shr
andl
pop
scas
ficomps
mov
push
adc
adc
and
fimuls
mov
inc
xchg
movl
and
or
stc
test
adc
sbb
cmpsl
fcomps
and
lret
rol
xchg
cmp
sti
sub
sbb
aad
ljmp
out
jg
cltd
mov
out
pop
fwait
mov
push
jle
xchg
js
scas
icebp
hlt
sbb
fs
cmpsb
mov
lret
mov
pushf
mov
adc
rcr
cmc
aas
fdiv
ja
pop
mov
repnz
clc
mov
push
push
mov
scas
fs
fdivp
jp
fwait
cmovo
mov
pop
xchg
fidivs
fwait
push
inc
mov
cmc
cmp
into
sbb
add
pop
mov
mov
push
loope
mov
scas
sbb
inc
out
cmp
inc
push
sub
jg
lcall
movsl
xlat
xlat
mov
jmp
fcoml
pushf
aad
adc
rcl
or
das
addr16
jbe
fcoml
into
lcall
inc
pop
scas
jmp
mov
int3
lcall
dec
rol
adc
xor
xchg
cmp
xchg
fcomps
sub
push
repnz
pop
fcmovb
addr16
add
ljmp
scas
ficompl
les
jecxz
insb
mov
mov
lret
cld
dec
mov
std
mov
xchg
enter
fcomp
popf
push
std
inc
into
in
push
dec
sbb
xrelease
cld
sti
pop
cmpsl
mov
sub
cmp
mov
xor
and
mov
push
nop
stos
dec
push
or
int3
fsubl
mov
leave
push
xchg
nop
xchg
and
and
call
ret
dec
sahf
xchg
scas
test
jb
jmp
sbb
xor
dec
add
mov
mov
fwait
inc
add
cwtl
cwtl
movsl
jp
push
imul
pop
sub
shr
jne
mov
add
xchg
cs
sub
fisubrl
cmp
fldlg2
lock
xchg
inc
cltd
aam
ljmp
mov
roll
cltd
lea
or
movsb
orl
shlb
mov
mov
pushf
cmpsw
cmp
outsb
push
shlb
mov
out
or
cmc
cld
push
fcoms
pop
popf
insl
test
cmpsb
aam
pushf
adc
andl
push
jl
stos
jge
test
mov
xchg
roll
pop
aaa
in
push
mov
push
jge
cmpsl
xor
popf
xchg
mov
stc
ret
sbb
icebp
pop
adc
scas
cmpsb
cld
je
lods
mov
in
mov
xchg
test
adc
in
mov
adc
jecxz
subl
mov
int3
jno
jl
dec
mov
cmc
call
aam
pop
xchg
fsubr
mov
fsts
scas
je
pushf
mov
cmc
imul
pushf
inc
pop
int
test
cltd
cmpsl
sbbb
xlat
int
push
cmp
cmp
sbb
and
mov
out
pop
mov
sbb
jne
ljmp
adc
add
test
adcl
xchg
add
and
pusha
pusha
xor
call
ss
jp
and
testb
jle
inc
jo
ret
mov
pushf
cltd
xchg
cltd
arpl
fidivl
or
sbb
lret
cltd
enter
push
dec
aam
sub
repnz
out
xor
jnp
sbb
mov
add
mov
adc
adc
xchg
mov
mov
dec
stos
xchg
adc
ret
rol
in
pop
fiaddl
arpl
mov
jl
movsl
push
clc
cltd
inc
cmp
int3
xorl
jmp
sbb
cmp
xchg
or
adc
pop
cmpsl
rcrb
cmp
cmpb
leave
fstps
scas
and
rolb
xlat
int3
fimull
testb
mov
mov
dec
loopne
arpl
fdivrp
hlt
jb
push
call
push
and
mov
fwait
cld
xchg
add
jl
fistps
and
push
lock
inc
les
xor
push
call
dec
xor
or
pop
hlt
call
pushf
mov
jle
jl
push
sahf
jno
fcomps
scas
fmul
mov
pop
jae
pop
pop
and
xchg
mov
rcl
push
inc
and
out
sahf
nop
push
and
mov
dec
test
negb
or
xchg
ljmp
pushf
jo
sub
dec
into
mov
sbb
add
jle
ljmp
cmpb
adc
xchg
xchg
fidivl
enter
in
pop
sbb
pop
adc
test
test
or
fimuls
mov
xor
lds
jp
notb
rolb
ficoml
push
adc
iret
adc
lcall
add
cwtl
add
decb
test
cltd
loope
cmp
xchg
mov
mov
js
fidivrs
jb
pop
fisubrs
lcall
or
sbb
xchg
fs
cmpsl
in
jle
and
inc
out
cltd
xchg
pop
sbbl
sbb
ljmp
lahf
dec
in
movsl
insb
jp
roll
ljmp
mov
xchg
sbb
mov
cltd
loop
mov
xchg
cltd
nop
pop
mov
test
fisubs
jo
test
push
jg
push
xchg
jmp
and
add
mov
push
pminsw
xchg
mov
loopne
cmp
fidivrs
inc
test
add
sbb
add
aas
stc
cmpl
test
icebp
popl
aad
frstor
scas
pop
sahf
or
mov
and
mov
enter
sbb
lcall
pop
xlat
cltd
sbb
lahf
inc
fcompl
and
adc
jnp
add
filds
dec
mov
subb
mov
pop
lret
rclb
ljmp
sbb
add
ljmp
orl
mov
adc
lcall
pushf
mov
lods
cmpsb
dec
adc
jo
jp
mov
adc
iret
xchg
jl
adc
xchg
cmp
jmp
ljmp
fsubs
mull
test
push
js
ss
ficoml
inc
xchg
or
imul
xchg
loop
xchg
fmulp
arpl
fidivrl
sub
shr
adc
movsb
push
es
lfs
xorl
mov
scas
sub
imul
loop
dec
cmpsl
mov
add
xchg
xor
adcb
pushf
test
or
inc
sub
loop
fildl
xchg
mov
sbb
cmp
test
and
add
daa
adc
mov
iret
jl
xor
or
xchg
adc
repnz
lcall
xlat
ret
cmp
test
adc
add
decb
jb
aas
insl
fldl
sbb
xor
push
inc
insb
js
shl
inc
les
lock
lcall
push
push
xchg
mov
daa
lcall
test
xchg
mov
jae
mov
sbb
ss
mov
adc
pop
mov
inc
xchg
std
movsb
sarb
jbe
jg
cltd
fstl
out
mov
cmpsb
lcall
je
cwtl
ficoml
sbb
loope
jae
ret
jp
stc
in
cwtl
test
or
mov
xor
jecxz
in
xchg
lahf
aad
testl
imul
ficompl
in
out
jl
mov
push
movb
sbb
popf
leave
mov
jo
mov
mov
ret
jl
sahf
icebp
orl
pop
bound
lea
out
xchg
fidivrl
mov
cmp
int3
push
sub
test
mov
outsb
pushf
xor
push
dec
cmpsl
xchg
fisttps
adc
push
sahf
sub
aad
sub
push
xadd
jle
and
movsb
or
mov
data16
call
fimuls
sbb
mov
mov
mov
shll
adc
ljmp
mov
mov
sbb
jns
jo
out
inc
nop
imul
and
cs
fisubl
and
sbb
add
xor
jp
mov
testl
xor
mov
outsl
xchg
lods
loopne
push
and
mov
cmpb
mov
mov
adc
sub
inc
repz
xor
scas
mov
and
mov
mov
inc
mov
scas
jle
inc
pop
cli
mov
mov
add
sti
nop
fimuls
pop
sbb
xchg
out
pop
lret
mov
hlt
scas
xchg
cltd
adc
stos
stos
or
jl
filds
mov
push
cmp
rcr
inc
fildl
cmp
add
and
cmp
jnp
ret
jmp
mov
mov
dec
or
add
xchg
xchg
cltd
loopne
mov
lods
cmp
sti
xchg
test
mov
xchg
cmpsb
inc
sub
ret
test
sbb
mov
rcrb
icebp
xlat
add
and
sbb
mov
mov
rorb
adc
mov
adc
flds
std
fistps
test
lods
lret
in
mov
pop
adc
hlt
and
loopne
or
cmpsl
mov
mov
int3
mov
jp
jo
jae
sbb
or
xor
sub
aad
xchg
sbb
ficomps
fisubrl
insl
xchg
aad
lock
mov
test
inc
sahf
lahf
jl
add
mov
pop
mov
or
stc
outsl
mov
or
sbbb
mov
sub
loopne
dec
ret
adc
or
popf
and
cltd
adc
xchg
adc
mov
stc
int3
faddl
ljmp
shrb
test
int3
loop
pop
inc
nop
adcb
popf
test
jl
lret
mov
iret
mov
shrb
mov
mov
lret
jle
insb
into
ficompl
scas
xor
les
sub
dec
mov
mov
insl
sub
mov
loop
pop
js
push
ficoml
in
inc
je
das
mov
popf
into
test
int3
in
jmp
jne
xor
add
loop
add
dec
pushf
fsubrs
pushf
jl
mov
sti
fisubrs
jnp
add
test
or
daa
enter
cmpsl
test
mov
xchg
mov
jl
inc
xchg
push
inc
in
jnp
shlb
pop
cmpsl
jp
lods
hlt
iret
push
ljmp
ljmp
aam
enter
notb
or
pusha
cmp
adc
movsb
mov
jg
cli
mov
adc
mov
push
popf
cli
sbb
cmpsl
sub
xchg
enter
orb
xchg
imul
inc
and
lcall
add
test
into
aad
sbb
ficompl
push
repz
mov
dec
pop
movsb
mov
sbb
pop
or
cmpsl
sub
subl
or
jmp
cltd
jne
jge
push
xchg
into
test
popf
push
rolb
ljmp
aad
adc
lret
adc
cltd
iret
scas
mov
sbbb
inc
lock
jle
mov
roll
adc
mov
sbb
lahf
out
xor
imul
pusha
xchg
inc
xor
gs
scas
cwtl
push
fs
ret
popf
mov
shlb
mov
dec
shlb
fisubrl
testl
fcomps
pop
xchg
sub
and
inc
wrmsr
cmp
nop
lcall
je
popf
fsubs
and
scas
sbb
hlt
mov
xor
pushf
inc
xchg
sbb
sar
into
lcall
adc
lods
ljmp
mov
push
out
popf
cwtl
and
ret
cltd
loope
pushf
dec
jb
jns
sti
xor
cwtl
push
mov
jle
inc
inc
addr16
scas
fidivl
cmc
or
cmp
mov
sbbl
lcall
insl
sti
xchg
fadds
mov
stos
sbb
nop
or
lcall
push
jns
mov
xor
xor
lcall
inc
test
enter
incb
push
ror
lcall
loop
lcall
xchg
negb
sbb
jge
and
es
mov
addl
and
lcall
stc
rcrb
adc
lcall
dec
mov
cmp
arpl
lcall
std
xor
sub
test
mov
in
ljmp
cmpsb
xchg
lcall
imul
jno
fimuls
mov
out
leave
adc
aam
adc
mov
movb
mov
divb
jns
int
dec
hlt
lcall
std
pop
xchg
xor
imul
test
jge
jmp
push
lcall
fnsave
cmp
call
adc
lcall
push
mov
and
mov
mov
mov
mov
jg
mov
jecxz
call
push
jge
and
xchg
arpl
jp
and
dec
and
mov
adc
jl
aam
lcall
push
daa
lcall
xor
jecxz
mov
rcrl
mov
movsb
xchg
test
das
lcall
xor
fwait
mov
scas
lcall
lock
pop
sbb
fxsave
xor
nop
inc
iret
loop
lcall
rcrb
aam
es
mov
lcall
xor
js
sbb
int3
dec
mov
mov
pop
loop
xor
or
cmpsb
shlb
lcall
fldcw
mov
jo
fs
hlt
lcall
lcall
js
lcall
sub
hlt
leave
pop
xor
lcall
aas
inc
sbb
ds
xchg
ror
lret
lahf
andb
xor
mov
cmpsl
lcall
cs
add
mov
inc
mull
pop
xor
pushf
fst
pop
and
xchg
push
cltd
inc
inc
lcall
fs
test
rcl
outsl
je
mov
lcall
mov
pop
push
or
out
imul
mov
enter
les
test
ja
movsl
gs
dec
lods
cs
pop
sahf
cmp
out
cmp
in
inc
leave
divps
sbb
jns
dec
push
aaa
xor
xchg
dec
and
adc
mov
adc
add
fs
fisttps
insb
adc
sahf
and
xlat
jmp
mov
xor
push
sbb
iret
orl
ss
push
fisubl
jnp
pushf
mov
icebp
fldcw
lcall
jns
sbb
out
inc
lods
xor
jecxz
pusha
mov
cwtl
jns
push
out
stc
pop
iret
sbb
cmp
jl
pusha
ficoml
lcall
or
lahf
inc
lcall
shlb
adc
xchg
adc
sub
faddl
or
dec
shlb
xor
xchg
lcall
in
lcall
popf
fistpl
loop
sbb
lcall
int3
lds
aas
test
lcall
adc
filds
fimull
shrb
sti
sbb
popf
xor
xchg
xchg
xchg
filds
lcall
lahf
dec
fwait
gs
test
inc
in
lods
ss
mov
loope
cmp
or
aas
das
fimull
pop
lcall
jge
sahf
mov
cmp
jnp
mov
cmp
ret
push
push
cmp
mov
aaa
or
lcall
sar
lcall
dec
pop
lcall
shll
xor
push
cmp
pop
test
add
lcall
cmc
cltd
add
aam
xchg
mov
inc
lcall
mov
lcall
inc
mov
clc
andl
jle
lcall
lock
dec
icebp
lcall
jp
dec
mov
add
lcall
xchg
push
test
dec
or
packuswb
test
imul
lcall
cwtl
pop
lcall
or
insb
push
mov
cmp
cltd
adc
stc
mov
push
cmpsb
jb
lods
pop
or
int
lcall
xchg
lcall
xchg
ds
xor
xlat
inc
push
pop
push
mov
or
pop
push
or
in
jp
test
sbb
mov
rorl
loope
xchg
mov
mov
lcall
sbb
lcall
in
popw
adc
adc
sahf
push
sub
mov
mov
lcall
fdivr
sbb
xor
jl
insb
in
add
js
popf
mov
adc
daa
rcrb
xchg
inc
repz
sbb
mov
sub
lcall
imul
lods
stos
test
stc
push
fwait
sub
push
sbb
jp
test
cld
xor
xchg
cmpb
sub
or
lcall
sub
negb
cs
lcall
ds
lret
les
lcall
shr
lcall
mov
pop
in
or
mov
lcall
mov
fldt
xchg
dec
or
lret
jbe
popl
lcall
daa
ficompl
js
push
jecxz
jmp
lcall
push
lcall
aad
lcall
into
sub
lcall
sub
xor
rorl
lcall
add
orb
or
mov
mov
mov
dec
lcall
mov
inc
rcl
testb
jecxz
fs
jo
mov
xor
or
inc
movsl
jmp
inc
or
pusha
lret
pop
cld
or
mov
jno
inc
rcrl
adc
movsl
stos
sbb
dec
xlat
ret
mov
out
pop
out
fsubrs
inc
bound
or
lcall
adc
repnz
lcall
fcompl
inc
mov
lcall
add
lcall
jecxz
mov
fcmovbe
mov
lcall
push
loopne
js
sbbl
lcall
mov
lcall
xchg
cmpsb
lcall
cmc
add
divb
out
loop
mov
sbb
lahf
call
jno
or
pop
xor
fucomip
mov
and
adc
punpcklbw
sbb
jp
or
sbb
cmp
lcall
std
xchg
lcall
sbb
lcall
adc
shr
ficomps
mov
insb
or
lret
cmc
lcall
lcall
popa
aam
or
in
sahf
cmp
lcall
sbb
adc
add
int3
dec
push
xor
subb
pop
popa
js
sub
pop
stos
fldt
fcomps
mov
xchg
xchg
xchg
mov
jo
aam
ret
outsb
into
dec
lcall
pop
jae
push
xchg
js
lods
fsubr
and
ja
pop
xchg
out
push
aaa
adc
push
repnz
js
je
ss
jecxz
mov
cmp
jb
mov
xlat
fwait
mov
stos
loope,pt
insl
dec
xchg
lods
pop
mov
jns
sbb
pop
scas
inc
push
sub
mov
jb
mov
fcmovu
push
ret
ja
jl
enter
decb
subb
lcall
add
enter
idivl
cltd
std
sbb
stos
dec
xlat
push
jge
lcall
mov
and
lcall
cmp
pop
pop
sbb
inc
xchg
popa
scas
jo
lcall
or
hlt
lcall
addl
insb
aam
lcall
scas
fiadds
fcoml
push
sub
xchg
cwtl
sbb
fnstcw
scas
test
mov
lcall
rorl
sbb
add
xchg
ret
stos
lcall
mov
pop
out
sbb
lret
loop
fcmovu
mov
rorl
add
rcrb
icebp
cmpb
sbbl
int
and
les
or
insb
popf
pop
cmp
ret
mov
mov
scas
je
std
cld
lcall
test
dec
call
or
in
jp
xchg
cmp
ret
hlt
es
mov
cmpsl
idivb
jl
out
xchg
add
add
push
stos
sbb
inc
mov
ds
mov
adc
mov
inc
xchg
ficompl
loopne
xchg
or
cmp
inc
fwait
sub
adc
movsb
jns
lcall
repz
je
pusha
loop
cmpsl
jp
iret
lahf
sub
lcall
push
call
xor
jae
adc
jo
pop
fistps
sbbl
fidivrl
int3
and
cltd
adc
test
cmpsb
cmp
or
lcall
outsb
jbe
and
jg
mov
fsincos
mov
mov
js
loopne
jmp
adc
cmpb
fisubs
out
adc
enter
lcall
int3
xchg
mov
lahf
mov
aad
in
popf
pop
mov
adc
xor
mov
add
les
mov
mov
popf
rcrl
orb
mov
in
and
rcr
loopne
lcall
mov
xor
pop
sarb
mov
lcall
jmp
lcall
cmpsl
or
mov
lret
fimull
stc
jb
ret
mov
cltd
loopne
mov
push
lahf
lcall
cmp
sub
mov
pop
out
lcall
out
fcomps
and
cltd
lcall
push
repnz
xchg
les
mov
inc
adc
in
fstps
lret
pusha
lcall
pcmpeqw
sbb
shl
xlat
cmp
lcall
mov
lcall
cmp
mov
out
cltd
hlt
popa
loop
rorb
stos
push
repnz
push
mov
cmc
xchg
pop
pusha
rclb
xchg
out
add
jge
mov
push
leave
mov
sbb
jmp
lcall
xchg
cmpsl
addr16
out
aam
and
pop
rcrb
fisttpll
push
mov
xchg
sbb
inc
add
inc
lcall
incb
pop
into
rorb
lcall
pop
sub
push
cltd
mov
aam
xchg
push
xor
in
jmp
js
or
inc
mov
in
icebp
dec
adc
lcall
pushf
clc
jg
shrb
mov
xor
cld
xchg
daa
jmp
dec
inc
ret
mov
and
or
sub
sub
enter
xor
testl
rcrb
xchg
lcall
repz
mov
stos
in
icebp
les
mov
shrb
sbb
lods
pop
stc
mov
adc
mov
insb
xor
sbb
movsl
mov
cmp
rcll
mov
cmpsl
inc
lcall
xor
xchg
jle
pop
xchg
and
lcall
or
dec
jge
lret
inc
lcall
and
xchg
fcmovnbe
xchg
and
popf
lock
or
idivl
ficompl
mov
xchg
es
and
add
scas
fcompl
in
push
int
sub
dec
fisubrs
lcall
scas
pop
sub
ds
dec
ret
push
push
pop
inc
frndint
push
inc
lcall
in
loope,pt
loop
lcall
orl
jb
out
adc
mov
sbb
xchg
pop
sbbl
cmp
dec
lcall
fadds
lcall
mov
neg
fiaddl
jecxz
pop
adc
ret
lret
push
sahf
rcrb
mov
xchg
mov
xchg
cltd
scas
xchg
and
movsl
jg
loope
lcall
mov
pop
pop
test
cmpsb
fs
and
fwait
jnp
mov
int
adc
push
std
sbbb
jge
sub
daa
shl
rcl
fstpt
inc
mov
ret
lcall
and
lcall
mov
rolb
push
adc
std
stos
ljmp
mov
ret
in
movsb
inc
jae
dec
dec
enter
loope
das
mov
xchg
lods
jle
popa
lcall
sarb
ret
jb
mov
mov
lcall
shl
test
mov
and
lcall
or
das
adc
xor
in
push
repz
aaa
int
or
sub
roll
cmp
jg
jbe
xchg
and
loope
inc
rcrl
in
pop
into
js
jb
jmp
or
sub
hlt
lret
mov
int
lcall
dec
into
xchg
outsl
mov
jmp
push
cmp
xor
pop
jbe
ds
bound
pop
push
ret
mov
pop
mov
inc
dec
cmp
out
shrl
js
pushf
lcall
sti
mov
mov
or
adc
fs
lcall
cwtl
inc
iret
mov
scas
jo
lcall
jne
lcall
aad
sbb
insb
and
xchg
jnp
cmp
out
ljmp
sbb
xchg
dec
cwtl
and
inc
inc
sub
inc
sti
push
out
lcall
fcomps
test
pop
cltd
or
add
and
xchg
in
test
sbb
lret
adc
jns
cmpsl
iret
adc
mov
dec
jp
call
or
mov
incl
push
lcall
push
sbb
fwait
mov
sub
adc
or
mov
cli
lcall
loopne
lcall
xchg
cmp
imul
mov
and
add
std
xorb
adc
int3
and
push
mov
add
repz
xchg
lcall
pop
lcall
lock
pushf
adc
xchg
jp
cltd
add
add
ss
mov
adc
es
clc
int3
xchg
mov
adc
ret
cltd
sub
lds
xlat
in
mov
xchg
or
sarb
mov
das
pop
mov
lcall
stos
popa
lcall
pop
outsb
out
lods
add
pop
xor
cmc
sbb
jo
xchg
dec
ret
or
enter
int
sbb
push
ret
jb
pop
in
cwtl
xchg
out
rcr
adc
sahf
lcall
jns
lcall
dec
mov
ret
lcall
cmp
lcall
insl
sbb
out
rolb
jle
ljmp
inc
mov
fs
lcall
lods
lea
push
rolb
pop
mov
mov
loop
jnp
xchg
mov
les
sbb
fcoml
test
in
lcall
imul
lea
add
push
xchg
stc
mov
pop
lcall
xor
lcall
xchg
ljmp
xor
cmpsl
lcall
test
pop
test
scas
popa
sbb
pop
in
in
mov
aam
ficoms
xor
pop
movsl
add
push
mov
or
push
mov
pop
mov
aaa
enter
shl
out
lcall
lods
fisttpl
cmp
jb
adc
int
mov
or
xchg
stos
lcall
lcall
rcl
adc
push
xor
ljmp
fidivl
scas
into
lret
xchg
lcall
aam
lcall
mov
sbb
aas
scas
cmp
mov
lcall
test
adc
xor
add
mov
mov
add
and
popf
and
jmp
clc
ds
out
lcall
cmp
lcall
mov
inc
movsb
out
in
mov
nop
ljmp
mov
roll
stos
sbb
and
fwait
clc
mov
scas
mov
mov
movsb
mov
sub
das
adc
jmp
cmp
sbb
iret
fdivrl
test
mov
cs
sarb
adc
jl
add
bound
inc
fs
lahf
xchg
jnp
jbe
xchg
call
lcall
cmpsb
lret
lcall
int
lcall
nop
mov
movsb
loope
in
lcall
shrb
fucomp
jb
dec
sub
hlt
repz
out
pop
std
icebp
xchg
lcall
xor
sbb
pop
rclb
jl
adc
mov
call
dec
test
sub
inc
jmp
mov
push
add
jg
loopne
lods
push
dec
lcall
std
add
lcall
adc
movsl
mov
jp
push
ror
js
mov
mov
or
push
jmp
jns
movsb
or
xor
mov
ljmp
mov
lcall
repz
pop
sahf
inc
or
sbbb
lcall
fadds
movsb
outsl
lcall
pop
mov
repnz
push
ret
ljmp
in
lock
jle
dec
lcall
push
outsb
fstpl
sub
fistpl
dec
fs
lcall
jle
lcall
stos
jmp
repz
mov
imulb
inc
push
adc
cli
or
cmp
lcall
cmp
mov
jbe
push
jp
xchg
test
pop
xchg
jmp
and
jo
jp
test
push
repz
mov
mov
inc
aam
xlat
fstl
adc
xchg
pop
cmpb
adc
adc
subl
cmp
inc
es
jae
or
sqrtps
ljmp
jp
fucomi
lcall
in
lcall
ficoms
mov
dec
aaa
ficoml
pop
popa
shl
clc
orb
outsb
adc
lret
enter
rorl
xchg
dec
test
mov
ss
xchg
mov
jg
lcall
lcall
inc
pop
lcall
movsb
xchg
lcall
mov
lcall
or
adc
or
pop
and
insl
test
mov
inc
ret
push
sbb
mov
insb
lcall
inc
cwtl
mov
stos
ficomps
stos
loope
lcall
enter
lods
mov
xchg
repnz
inc
outsb
dec
mov
add
aas
jg
jne
and
lcall
push
sbb
jl
pop
inc
mov
sahf
and
in
call
popa
stc
insl
outsb
sub
lock
pop
inc
adc
mov
movsb
into
ja
dec
lcall
dec
mov
aad
jnp
push
cltd
std
jle
jae
test
gs
push
jge
in
les
punpckhwd
xor
jl
andl
mov
xchg
ljmp
adc
fldcw
xor
out
lcall
inc
mov
xchg
add
lods
push
negl
cmp
out
int
lcall
xchg
push
lcall
inc
in
lcall
lahf
mov
push
sarb
pushf
lcall
or
popa
pop
lcall
or
aam
mov
je
mov
call
dec
or
jmp
or
lcall
call
push
xor
repz
arpl
xchg
cmp
pop
and
lock
mov
ret
push
fists
mov
fiaddl
sahf
adc
lret
lock
sarb
rolb
or
sbb
sbb
inc
pushf
movsb
xchg
sbb
leave
pop
imul
xchg
stos
iret
fdivr
lcall
jno
pop
sbb
ja
mov
aaa
into
sbb
test
lcall
fwait
sbb
add
mov
jmp
fs
mov
test
or
movsb
lods
sti
rclb
fildll
addl
lahf
adc
stos
mov
cmp
and
lcall
insl
push
pop
inc
sbb
sub
mov
lcall
cmp
inc
sti
or
data16
mov
movsl
jmp
mov
outsb
dec
aad
mov
in
scas
cmp
sbb
xor
jnp
daa
adcb
pop
in
xor
stos
cli
ds
lcall
mov
inc
push
jne
rol
lcall
pushf
jb
insl
into
and
push
mov
inc
ret
notb
in
mov
sbb
mov
mov
fiaddl
push
ffree
mov
xchg
jecxz
or
inc
lret
xlat
out
or
sub
adc
cmp
push
lcall
dec
fstps
or
js
ror
sbb
inc
xchg
add
fadds
jl
cltd
cltd
fs
repnz
xchg
xchg
push
push
mov
ja
movsb
xor
adc
sbb
push
lea
sti
in
aaa
lcall
mov
cwtl
mov
inc
fiadds
push
repnz
cmpl
xchg
shll
pop
cmp
lcall
daa
lods
lcall
es
lcall
rolb
cwtl
mov
push
lcall
pop
inc
lcall
and
call
lcall
push
mov
pushf
pop
fadds
xchg
dec
cmc
fnstsw
sbb
lcall
and
pop
cmpsl
ror
jae
repnz
rcl
lcall
shll
ljmp
sub
pop
and
fistpl
jp
sub
insl
push
or
and
lret
outsl
mov
sbb
dec
mov
inc
fs
sahf
push
lcall
mov
xor
lcall
mov
and
gs
cmc
iret
je
out
std
pop
lods
idivb
in
cs
testl
ljmp
ss
movsb
sbb
mov
jp
adc
cmp
cmpsb
mov
js
jle
dec
lcall
sbb
xchg
scas
xchg
xchg
mov
fmuls
pop
cmp
fmull
jno
push
dec
enter
jl
pop
fimull
mov
inc
jle
jmp
iret
add
xchg
int
push
mov
mov
lcall
jge
lcall
mov
or
and
les
stc
movsl
movsl
loope
lock
mov
bound
icebp
cmp
aaa
dec
mov
mov
sub
cmp
fimull
xor
ficomps
adc
in
lahf
aad
push
mov
mov
push
and
cmpsl
lcall
andl
adc
pop
mov
sub
adc
pop
jecxz
ljmp
cmpsb
lret
jb
mov
int
sbbb
xchg
lock
xor
mov
jb
mov
aam
lcall
jp
lcall
sub
subb
xchg
xchg
cli
pop
enter
adc
mov
or
push
cltd
lcall
fucomp
lcall
decb
lcall
xchg
icebp
fwait
adc
sub
push
sbb
imul
fidivrl
mov
lcall
int
lcall
jae
mov
aad
ret
out
mov
arpl
pop
aaa
out
sbb
or
int
inc
leavew
push
dec
xchg
mov
push
popa
lcall
sbb
aad
jp
pop
sbb
movsb
mov
negb
add
push
cs
jle
mov
push
iret
lcall
ret
in
leave
jb
imul
or
lret
rcrb
sub
xor
mov
lcall
dec
mov
mov
in
leave
and
inc
cmpsb
iret
cmpsl
pushf
push
lcall
out
lcall
les
ss
inc
loope
push
and
sbb
sarb
mov
mov
sub
pop
mov
pop
data16
aad
in
aas
mov
into
xor
or
test
pusha
xor
xchg
or
mov
inc
leave
lcall
dec
mov
inc
lret
rcll
pusha
lcall
pop
and
jp
rolb
inc
inc
sahf
notb
and
pop
cmpb
sahf
fstps
push
ficompl
jp
or
sub
lcall
loope,pn
mov
repnz
inc
lcall
movsl
or
imul
pop
lcall
out
jno
repz
fdivrl
fdivr
lcall
cltd
fimull
mov
mov
inc
idiv
push
add
icebp
mov
pushf
bound
cltd
in
lds
ja
sbb
push
outsl
scas
or
xor
hlt
ljmp
push
mov
xor
push
add
adcl
rolb
add
mov
out
xchg
pop
sbb
mov
ja
mov
sbb
out
cvtps2pi
lcall
subl
ljmp
or
sbb
shll
sub
std
sbb
mov
inc
jge
frstor
sbb
adc
test
lcall
xchg
pop
lcall
outsb
sbb
sarl
sub
sbb
sub
jae
int3
dec
lcall
enter
or
xchg
sub
int
lcall
out
jmp
gs
mulb
andb
or
outsb
pop
fstpl
call
xchg
jno
loope
lcall
test
inc
js
mov
adc
lcall
add
das
insb
pop
out
cld
inc
negl
arpl
repz
ss
mov
fidivrs
mov
cmp
xlat
xor
insl
aaa
inc
mov
push
adc
sbb
or
aad
mov
or
pop
jmp
test
xor
jne
enter
lcall
sub
add
xchg
add
pop
notl
jne
ficompl
lcall
fldl
lcall
outsb
and
stos
sbb
pop
xchg
or
lock
cmp
mov
icebp
lcall
orl
jnp
sbb
roll
push
ljmp
pminub
sbb
cmp
sub
out
sti
lods
lcall
nop
mov
cwtl
cmp
cltd
fstps
std
stc
inc
mov
data16
push
adc
aas
mov
sbbl
lcall
ret
popa
sub
int
pop
mov
lcall
add
daa
xor
push
out
cli
shlb
inc
push
fldcw
cmp
lcall
negb
add
aad
or
aam
adc
lcall
cmp
lcall
dec
cld
pop
les
jg
jb
adc
jecxz
out
std
fucomip
test
arpl
push
lret
andb
and
fidivl
les
push
add
cwtl
lcall
roll
scas
int3
inc
mov
jno
dec
sbb
repnz
dec
mov
xchg
mov
aad
adc
scas
stos
mov
lcall
inc
add
mov
lret
dec
and
das
lcall
decb
inc
cmp
ljmp
inc
mov
int
sub
jecxz
xchg
or
rcrb
mov
inc
enter
sbb
and
cmc
mov
adc
data16
in
jo
aas
aaa
iret
das
cmp
push
popa
pop
std
out
mov
sub
jmp
jne
loope
mov
or
lea
jmp
xchg
sti
lock
adc
into
push
lcall
into
lcall
inc
lahf
lcall
repnz
push
push
xchg
loopne
pop
lods
ljmp
aas
jmp
or
lcall
dec
and
cmp
shr
ret
xchg
lcall
mov
test
mov
lods
jno
lcall
sbb
aas
mov
lret
lcall
iret
xchg
inc
les
dec
mov
mov
mov
sahf
lcall
add
lcall
adc
pop
cmc
add
cltd
push
mov
cmpsl
repnz
pop
mov
inc
mov
jo
fnstenv
lret
mov
mov
std
repnz
xlat
mov
mov
add
das
push
jnp
je
sub
push
lret
lcall
xor
cmp
out
sbb
into
int
daa
lcall
out
mov
inc
cmpsl
cmp
mov
mov
push
add
je
add
sbb
jmp
and
lcall
repz
lcall
mov
inc
adc
fisttpll
xchg
sbb
add
decb
or
inc
pop
push
xchg
jb
rcrb
push
cld
ljmp
stos
lcall
outsl
and
jle
inc
or
or
adc
fldt
push
inc
pop
dec
jl
lcall
or
pop
inc
clc
fs
ja
mov
pop
mov
xor
les
jo
cmp
gs
inc
xor
push
nop
jne
lods
ret
leave
lcall
xor
adc
loope
testl
imul
push
or
pop
pop
sbb
shll
jb
lret
adc
xor
sbb
jno
daa
stos
push
pushf
lcall
cwtl
jge
sbb
icebp
xchg
lcall
mov
pop
push
adc
xchg
push
jno
rep
enter
jmp
sub
jnp
inc
lcall
add
ljmp
mov
cld
jns
bound
adc
mov
sbb
xor
and
cmp
nop
out
xchg
ss
mov
push
enter
push
push
dec
divb
lcall
test
insl
mov
cwtl
mov
ret
jp
lret
out
sbb
scas
pop
adcl
cld
push
enter
int3
notb
ret
jg
mov
lcall
out
jge
repnz
mov
lret
int
loope
pop
pushf
roll
movsl
lods
test
or
imul
push
push
cmpsb
push
rcll
xchg
mov
fidivrl
pop
popf
and
out
lcall
dec
aam
sub
cmp
leave
pop
mov
ljmp
scas
inc
lods
lcall
into
fstpl
movsl
call
jns
lcall
repz
loop
sbb
and
mov
xchg
adc
out
push
jmp
daa
push
or
sbb
lcall
dec
add
nop
aam
fisubl
inc
xor
imul
das
lcall
shlb
rcrb
xor
dec
xchg
lcall
das
adc
xor
or
lcall
and
lcall
xor
pop
ret
jae
sbb
add
push
lcall
lcall
jno
lcall
push
pop
xchg
aaa
adc
out
test
fstps
sub
mov
and
jbe
mov
pop
loop
popf
jne
jp
lcall
jmp
lcall
hlt
popf
lcall
aad
lcall
into
fwait
cld
ljmp
mov
loope
lcall
jp,pt
jbe
leave
add
dec
mov
mov
fistpl
mov
jno
lcall
out
jl
into
dec
inc
scas
mov
sbb
stos
xchg
lcall
mov
lcall
mov
lcall
ret
adc
sbb
ds
aam
les
lock
ljmp
dec
sti
js
sahf
dec
mov
lcall
lea
pop
or
or
adc
addl
ja
mov
inc
pop
movsl
in
stos
dec
lcall
adc
jb
jo
loop
xor
mov
xlat
xor
dec
lcall
aad
lcall
test
in
cmp
lahf
out
lcall
out
lcall
jo
lcall
lods
loopne
pop
and
lcall
xor
aad
fdivrl
test
cmc
sahf
pop
lcall
and
push
cmp
or
lcall
dec
mov
inc
cmpsb
jnp
fstpl
adc
hlt
xchg
lcall
cmpsl
lcall
loopne
andl
lcall
or
sbb
insb
ljmp
lcall
cmpsb
lret
in
test
or
xchg
push
xchg
outsl
inc
nop
test
mov
shrb
in
xchg
clc
fisubs
sbb
out
and
mov
pop
nop
xchg
push
fwait
inc
xchg
and
dec
gs
sub
or
jne
mov
or
lods
push
pop
adc
aad
into
inc
lcall
mov
mov
lret
pop
pop
cmp
outsb
sbb
lcall
shlb
insl
cmpsl
lcall
sbb
mov
xchg
pop
iret
sub
pop
ljmp
lcall
or
loop
mov
pop
bound
mov
jle
js
fdivp
mov
lcall
mov
aas
jne
arpl
mov
jge
scas
lcall
sbb
push
mov
push
stc
pop
dec
xor
pop
inc
es
lcall
lcall
jne
pop
sbb
mov
sahf
repnz
cld
jmp
sbb
std
loop
insb
push
lods
inc
scas
lcall
push
cwtl
xchg
sub
jmp
lcall
or
lock
ja
lcall
xor
adc
fisubrs
push
fsubs
xchg
lcall
xchg
xor
lds
cld
push
loop
jp
in
jns
lcall
repz
lcall
jp
lcall
lds
stos
jno
popw
repz
lcall
mov
mov
mov
call
inc
push
les
arpl
in
orb
and
fistps
adc
jl
mov
clc
sbb
aam
cltd
ljmp
push
out
lcall
nop
outsl
lcall
xchg
je
and
imul
hlt
pop
push
and
xor
movsb
add
dec
dec
or
inc
lcall
bnd
jle
sahf
stos
or
data16
iret
jne
fs
and
lahf
mov
cs
pop
jbe
rcrb
xchg
mov
fistps
fmuls
mov
pushf
dec
adc
lret
jle
addps
lcall
mov
add
sub
lahf
cmp
jbe
mov
loope
rcll
pushf
sbb
jp
xchg
js
sub
or
hlt
fisubrl
pop
adcl
mov
ljmp
sbb
scas
lds
xor
xor
mov
pop
mov
leave
lcall
insl
mov
inc
js
cmp
mov
mov
fcmove
and
jns
cs
negb
lcall
xchg
jmp
cli
mov
lcall
mov
out
and
lcall
in
lcall
icebp
push
sbb
lcall
mov
dec
fistpl
jl
lret
sbb
int3
or
test
ljmp
clc
cltd
ds
and
push
adc
mov
cmp
into
or
sbb
cli
sub
xor
mov
cmp
rol
xor
mov
test
xlat
lcall
addl
jbe
sbbl
sub
icebp
or
jnp
push
lcall
mov
xor
jle
ret
lcall
cmp
lcall
push
xor
mov
mov
jb
and
jecxz
ret
shrb
sbb
sbb
das
mov
inc
cmp
or
addr16
adc
aas
add
cwtl
nop
shll
icebp
pop
rclb
mov
jp
sarl
lcall
mov
ret
adc
outsl
fistpl
add
pop
adc
stc
in
call
mov
and
lcall
sub
lcall
adc
lcall
mov
js
xor
hlt
insb
es
and
pop
mov
pop
lcall
insl
fistpl
adc
xlat
fcomps
imul
dec
ds
ss
mov
out
rcrl
mov
xor
fisubrl
mov
mov
lcall
xchg
movsl
sbb
mov
jnp
and
push
mov
inc
stos
pop
jno
mov
rclb
adc
inc
rolb
ja
incl
inc
loope
xchg
xchg
push
inc
fcoml
rep
bound
mov
popa
lcall
mov
lcall
dec
ret
stc
cmp
mov
into
icebp
adc
lcall
dec
pop
lcall
std
dec
ret
test
or
in
xchg
movsl
lcall
sbb
xlat
scas
sbb
mov
xor
mov
push
mov
lcall
mov
sbb
mov
push
sbb
fidivl
jb
lcall
pop
nop
lcall
xor
lcall
or
bnd
push
daa
lcall
pop
ret
test
loope
sti
pop
mov
lods
add
inc
lcall
mov
lcall
scas
or
les
mov
mov
adc
jns
push
ljmp
mov
or
sbbb
cld
fidivs
mov
mov
cmc
scas
popf
dec
imulb
daa
push
mov
sub
add
lods
or
push
fwait
imul
cltd
jns
in
sbb
subl
popl
push
jp
mov
xchg
decb
bound
das
fists
jle
mov
cld
cmpsl
iret
lcall
mov
cs
adcl
inc
dec
or
mov
shlb
scas
xor
or
and
int3
jne
mov
jecxz
jge
in
sbb
mov
pop
push
rcrl
sub
lcall
jnp
push
jmp
inc
lcall
cltd
push
stos
jmp
cli
dec
sub
hlt
mov
imul
sub
cmp
or
or
lcall
push
lahf
lcall
jp
lcall
adc
lcall
scas
mov
inc
xchg
cmc
mov
psubusw
xor
mov
or
mov
inc
xchg
sti
sub
popf
lcall
xchg
cmp
lcall
out
pand
nop
leave
jns
test
aad
or
je
sbb
push
cmpsl
les
jle
stos
repz
movsl
lcall
lcall
sub
or
lcall
inc
fcomps
inc
inc
in
xchg
mov
push
adc
lcall
lcall
pop
inc
hlt
push
in
in
out
sahf
popf
xor
pop
rorl
jno
cmpsb
cmp
shll
mov
xor
lcall
fistps
gs
outsl
pop
sub
xchg
lcall
xchg
out
sub
cmpl
sbb
cli
push
lret
mov
flds
sbb
incl
cmp
mov
add
mov
rcrl
lcall
pop
hlt
lcall
mov
mov
push
and
insb
mov
inc
iret
xchg
scas
fstpl
adc
cs
add
mov
adc
inc
push
ds
jno
es
pop
lcall
rorb
das
sub
mov
pop
sbb
repnz
mov
inc
out
inc
shrb
push
mov
inc
pop
lcall
aam
lcall
insl
aaa
mov
std
ficompl
lret
xchg
cmp
jl
jo
or
ret
mov
pop
gs
dec
push
lcall
test
xor
sub
jp
sbb
out
push
idivl
lods
imul
lcall
or
lcall
mov
fwait
test
popa
stos
loopne
jo
clc
out
jnp
mov
scas
sbb
mov
cltd
sub
and
sbb
jp
mov
lcall
mov
xchg
and
enter
lcall
popl
push
rclb
loop
push
add
mov
jne
ja
stc
fdivrl
fistpl
push
ficoml
or
pop
frstor
pop
mov
or
or
fcoml
lret
fwait
mov
pop
aad
jnp
sbb
icebp
sub
cmp
and
or
cvttps2pi
jle
insb
sub
mov
outsl
lcall
jbe
lcall
aas
xchg
xchg
and
adc
fimull
adc
sbb
lods
mov
jb
xor
int
fstpl
xchg
pop
sub
loope
das
sbb
lcall
adcl
push
jmp
cmp
pop
jae
push
adc
push
stos
mov
ja
outsl
lcall
dec
fwait
lcall
shlb
mov
shlb
scas
stos
mov
cli
lcall
and
cmc
popa
push
paddd
test
mov
scas
fwait
lcall
std
add
adc
es
lcall
jo
mov
aad
cli
out
out
inc
pushf
mov
xor
inc
mov
pusha
in
and
call
mov
insb
fwait
ljmp
iret
movsb
sbb
lods
dec
jb
xor
test
lcall
or
sbb
scas
iret
xor
sub
mov
push
push
sub
fists
sbb
aaa
or
stos
dec
rolb
test
negl
int3
lahf
loope
lcall
mov
aas
lcall
mov
mov
lret
cmp
mov
sarl
shl
lcall
jp
xchg
xchg
or
mov
mov
mov
cmp
sahf
mov
aad
cmpsl
xchg
aas
lods
pop
bound
into
add
fcmovb
adc
fdivs
inc
fs
push
test
xor
jl
fisubrl
sahf
cwtl
lret
lock
lret
pushf
jno
sbb
pmuludq
lcall
ret
push
mulb
lcall
stos
lcall
mov
pop
fisttpl
jno
stos
mov
push
dec
or
pop
call
xor
mov
push
pop
jecxz
les
pop
jle
movsl
in
xchg
xor
loopne
cmp
ja
sub
or
lods
lcall
jbe
cmp
sub
pop
adc
std
inc
jno
cmp
jp
rclb
fxch
inc
fisttps
mov
xor
sbb
mov
test
je
sub
push
xlat
scas
mov
xchg
cmpb
sbb
xor
lds
adc
lcall
lock
fcmove
jl
pop
insb
cli
mov
shl
lock
lcall
cmpsb
stc
lcall
lret
mov
push
data16
imul
add
inc
aam
and
subl
pusha
sub
in
jno
jp
push
in
sub
xchg
lcall
sub
addr16
pop
cmp
mov
out
add
fidivl
cmpsl
lret
lcall
shl
xchg
es
lea
lods
cltd
mov
lcall
add
loopne
and
mov
in
sub
lds
fildll
lcall
dec
scas
lcall
popa
insl
mov
lods
aad
shl
imul
stc
push
fidivl
stos
mov
xchg
int
cmpsb
jo
lcall
gs
mov
movsb
cmp
fidivrl
loop
xchg
lods
fstpl
into
test
cmp
xor
notl
xchg
scas
imul
outsl
xchg
pusha
test
stos
mov
cmp
daa
dec
lcall
pusha
cs
nopl
push
insl
popa
jecxz
ret
lcall
cmp
lcall
in
lcall
outsb
ficompl
jno
sbb
enter
cmp
mov
inc
loope
push
loop
sbb
jb
call
in
jne
xorb
bound
dec
xchg
jge
pop
cld
popl
mov
icebp
inc
and
movsb
add
dec
jmp
stc
clc
gs
insb
inc
mov
xchg
icebp
inc
sub
jns
adc
lcall
test
lcall
enter
fimull
mov
aaa
insb
cltd
dec
pusha
scas
lcall
xor
push
ficompl
fstps
popl
cltd
adc
loop
lret
add
lods
scas
mov
fs
int
push
cmp
xchg
cld
jno
xlat
fdivp
in
pop
hlt
movsl
or
insb
lcall
jno
lcall
xabort
sbb
cli
ds
mov
into
lods
aam
sub
add
pop
mov
mov
jg
enter
push
rcrl
sti
or
dec
push
mov
mov
arpl
sarb
lcall
jne
lcall
push
add
sbb
lcall
push
inc
lcall
in
popf
pop
lcall
in
lcall
shrb
pop
jle
jmp
in
dec
jg
fimull
movsb
loop
lcall
push
scas
lcall
dec
mov
rorl
iret
rcrb
jg
mov
ficompl
lahf
jns
xor
lcall
sub
xchg
and
fmul
lcall
pop
in
adc
fcmovbe
cmpsb
fiadds
push
jnp
pop
lcall
pushf
lcall
push
movsl
lcall
filds
outsl
js
fdivrs
jmp
data16
sub
movsb
movsb
sbb
aad
sub
lcall
fisubs
sbb
pop
leave
fimull
mov
or
jmp
lds
sahf
rcrl
sub
sbb
mov
and
jno
inc
lcall
ret
jo
jns
imul
xchg
dec
mov
rcrl
movsl
mov
arpl
sbb
or
or
push
insb
sub
fisubrl
push
lcall
xor
cmp
std
sahf
push
jno
sub
rcrl
cmp
sub
fcomps
or
mov
inc
mov
lcall
fisubl
inc
push
les
jb
je
adc
adc
push
lcall
jecxz
scas
imul
dec
sub
out
lcall
pop
pusha
xchg
sbb
mov
cs
adc
dec
mov
xchg
xchg
lcall
sbb
sub
out
pop
inc
mov
jns
dec
mov
mov
movsl
lcall
and
lcall
pusha
les
insl
rclb
lcall
inc
clc
lcall
addr16
cmpsb
sarl
lcall
or
sbb
pop
or
int
addr16
sub
lcall
sub
jecxz
inc
pop
enter
in
stos
adc
mov
sbb
mov
dec
sbb
fists
mov
jne
clc
enter
ss
xor
adc
xchg
pusha
stos
shll
sti
add
mov
xchg
mov
je
lcall
inc
cmp
lock
push
xor
adc
ficoml
imul
fistl
fstpl
cmp
lcall
lcall
stos
mov
leave
mov
mov
cmp
lcall
negb
mov
pop
hlt
pushf
lret
repz
enter
lcall
or
aaa
loop
ltr
sbb
jne
cmpb
nop
prefetch
xchg
pop
mov
pop
inc
test
and
lahf
cmpsl
negb
adc
shl
fmuls
inc
cmp
sbb
dec
fisubrl
orb
inc
jl
das
movsl
pop
lcall
mov
lcall
out
xchg
lcall
jb
sbb
in
imull
add
push
iret
cwtl
pop
push
out
aas
lcall
push
pusha
lcall
adc
cld
out
xor
insb
add
lods
pop
jne
jb
outsl
mov
int
sub
pop
push
xchg
rclb
pop
xchg
sub
int
fcmovu
repnz
sub
inc
mov
mov
push
pop
fcmovbe
jae
cmp
shlb
or
aam
and
cwtl
lcall
pop
cmc
lcall
cld
iret
pop
aaa
adc
daa
je
adc
ret
push
pop
loope
lcall
mov
adcb
inc
lcall
imul
sbb
jl
stc
or
add
xor
out
daa
inc
std
pop
hlt
xor
mov
popa
sbb
sub
mov
xchg
dec
sbb
ljmp
stos
enter
gs
mov
dec
movsb
sub
push
sub
das
cmc
xor
sbb
scas
push
iret
outsl
lcall
mov
cs
mov
insb
jae
lcall
xor
mov
pop
pusha
int3
out
popa
lcall
aaa
rcrb
pop
push
daa
lcall
sub
lcall
jbe
cltd
sarb
daa
cmc
lcall
add
xchg
push
sub
hlt
push
lret
aad
cltd
int
fisubl
aas
in
dec
jp
into
dec
ficomps
sbb
cmp
scas
jno
pop
pop
mov
in
and
shrb
leave
xchg
lcall
mov
inc
push
aas
sarl
fcmovne
enter
imul
cmp
jae
and
lcall
fs
adc
sbb
mov
je
push
cli
in
mov
les
stos
lret
mov
stos
mov
push
lcall
push
mov
movsl
mov
sbb
sahf
mov
or
lods
jp
or
sbb
icebp
ret
sbbb
fwait
push
lods
push
mov
insb
and
mov
lcall
sub
cmpsl
mov
cs
xlat
stos
jl
dec
lcall
pop
push
lcall
fstps
jle
and
lcall
mov
lcall
jnp
lcall
and
lcall
out
lcall
and
mov
test
dec
sbb
pop
push
xchg
jmp
lcall
and
popa
jecxz
repz
aaa
xor
jge
add
sbb
dec
sub
or
mov
mov
mov
iret
cmpsl
repz
cmpsb
and
pop
es
sub
out
test
add
add
sti
loope
sbb
les
push
push
in
ret
pushf
or
cmp
add
mov
loopne
sbb
cwtl
or
push
pop
in
clc
inc
loop
outsb
mov
dec
repnz
sub
lahf
lcall
call
sti
push
mov
push
scas
push
mov
push
lcall
sub
sbb
inc
or
adc
ljmp
imul
mov
adc
cmp
sbb
movsl
cmp
scas
sahf
lcall
dec
sbb
out
sbb
xchg
mov
stos
sbb
pop
and
lcall
and
incb
sub
lcall
lcall
xchg
rcrl
dec
fdivr
sbb
bound
pop
jge
mov
lcall
mov
cwtl
movl
mov
lock
mov
imul
mov
cmpsb
xchg
dec
adc
cmpsl
out
imul
clc
sub
fsubrl
bswap
xor
fsubrp
std
push
insb
repnz
sahf
lcall
rcrb
cwtl
xchg
jno
push
mov
xchg
and
mov
lock
jecxz
lcall
lods
test
out
int
lcall
xchg
ret
xor
dec
mov
stos
imull
or
add
push
cmp
rcrl
lcallw
fisubrl
lods
jns
lret
out
xchg
lcall
xor
lcall
in
inc
jl
push
sbb
mov
addr16
pop
mov
adc
dec
xchg
call
push
lcall
arpl
pusha
ror
ljmp
mov
imul
loope
cmpl
sbb
push
jbe
popf
gs
stos
xchg
stos
sbb
ja
push
dec
cmpsb
mov
sbb
pop
jmp
push
xchg
in
mov
imul
and
fwait
leave
xor
sbb
divl
jp,pn
pop
mov
mov
pop
or
hlt
popa
iret
lcall
mov
cs
xor
sarb
xor
addl
lcall
sbb
cwtl
adc
pop
mov
adc
add
sbb
popf
lcall
into
pop
lcall
jo,pn
loope
incb
xchg
sbb
pop
jmp
sub
sbb
fdivrl
pop
aad
fbstp
lcall
push
mov
sbb
pusha
js
lods
das
cld
xor
adc
cmp
lahf
dec
movsb
mov
add
push
cltd
inc
xchg
sbb
xor
pushf
mov
js
int3
in
bound
mov
adc
cmpsl
divb
or
das
xchg
aad
cmp
outsb
mov
mov
mov
mov
or
lret
enter
data16
dec
inc
jnp
mov
scas
cmpb
push
sub
fldl
dec
mov
sahf
lcall
pop
out
lcall
nop
fcomps
push
lret
cwtl
cltd
xchg
mov
repnz
mov
lcall
rdmsr
lcall
jp
lcall
mov
pop
xlat
sub
dec
std
sbb
or
mov
sbbl
in
sbbl
lret
mov
jb
nop
mov
adcb
daa
jnp
cmc
pop
aam
and
mov
lcall
xor
out
repnz
xchg
mov
and
and
and
repz
icebp
mov
inc
mov
pop
je
addr16
add
xchg
lcall
shlb
pop
and
std
shl
inc
sbb
rorl
xchg
mov
lcall
jle
lcall
cltd
arpl
lcall
leave
lds
push
jmp
pushf
mov
mov
mov
es
mov
push
lcall
sbb
jp
jo
mov
mov
ljmp
aaa
mov
push
pusha
adc
lea
xor
sahf
out
mov
pop
negl
daa
jbe
mov
ss
das
lcall
shr
sbb
cmp
mov
fiaddl
lcall
and
adc
lcall
lcall
mov
aas
jno
mov
enter
imul
jnp
sbbb
jle
loop
sub
pop
js
push
pop
mov
dec
push
mov
shll
fnstsw
loope
enter
cmp
lcall
das
stc
hlt
and
mov
cltd
inc
inc
call
and
mov
push
dec
lea
adc
mov
lcall
ja
testb
lcall
fmulp
out
insb
pop
int
scas
mov
stos
add
or
adc
cwtl
or
mov
roll
repz
lcall
aad
sbb
dec
or
add
das
mov
int
mov
pop
push
fisttpl
xchg
mov
or
aaa
fidivl
jge
mov
hlt
lcall
ficompl
lcall
lret
push
lcall
aam
pushf
sub
mov
enter
imul
test
push
lcall
mov
std
mov
lcall
adc
loop
mov
jno
mov
jl
sbb
add
sub
popf
lret
roll
daa
xlat
mov
jle
inc
mov
lcall
nop
push
xchg
mov
leave
ss
sti
fistps
pop
fs
stos
enter
push
cmp
data16
movsb
inc
lock
dec
inc
xor
test
or
jle
mov
or
mov
push
sub
add
in
jl
cmp
mov
icebp
jmp
jns
lcall
ror
adc
adcl
adc
leave
push
fbld
and
divb
rcrl
lcall
fwait
xchg
lcall
hlt
icebp
sbb
mov
mov
dec
sti
jno
inc
lcall
push
jmp
inc
add
hlt
addr16
push
aad
lcall
or
fs
bound
xor
scas
xchg
mov
lcall
leave
sbbb
loopne
sbb
aaa
lcall
xorl
pushf
sbb
cli
lcall
rcl
jl
sub
mov
xchg
inc
in
xchg
and
mov
lcall
mov
mov
mov
cli
or
push
aas
lcall
dec
cmpsb
lcall
xchg
or
dec
sahf
dec
push
sub
lcall
inc
cmp
sti
adc
sbb
ds
das
repnz
mov
mov
pop
jle
lcall
sbb
out
imull
push
mov
jb
movb
mov
and
and
sub
push
lahf
inc
icebp
cmp
ret
lea
ficoml
js
sbb
test
dec
stc
lcall
cli
fistpl
les
pop
xchg
insl
test
lcall
push
dec
adc
shrl
xor
pop
lcall
sub
lcall
sahf
sbb
push
mov
pop
mov
inc
ss
fnstsw
xchg
push
or
ffree
inc
cmpsl
cltd
pop
faddl
rcr
jp
es
sbb
sub
xchg
push
test
lcall
xor
add
dec
fists
lcall
es
lcall
jo
lcall
out
stc
lcall
push
mov
xchg
xchg
jp
jo
loope
lcall
push
stos
lcall
sub
popf
negl
jns
out
xchg
cmpsb
fsts
push
sti
fidivrl
add
lcall
dec
sub
cmp
in
cmpl
mov
fstps
insl
add
mov
and
lcall
ss
cmpsl
mov
scas
pop
cli
adc
stc
ljmp
enter
decb
mov
mov
lcallw
daa
xchg
lcall
rcr
pop
push
into
add
imul
jge
stos
sbb
mov
and
pop
pop
movsb
inc
cmpsb
lcall
push
mov
pop
inc
icebp
sbb
sahf
dec
mov
lcall
jnp
lcall
test
pop
rorl
sub
test
in
loope
jle
scas
xor
push
loope
lcall
cwtl
xchg
jge
flds
shrl
mov
lcall
jecxz
lcall
lods
or
pop
jl
xor
lcall
adc
in
cmpsl
xchg
sahf
or
xchg
imul
lcall
or
or
nop
dec
mov
lret
les
cld
leave
aam
lcall
mov
jle
pop
popf
and
fwait
sti
mov
cld
push
cmpsl
pop
jg
jl
dec
adc
lret
add
mov
fcmove
mov
test
xor
cltd
or
jp
cmpb
cmp
popf
lcall
jle
lcall
or
lcall
add
dec
data16
test
xchg
or
push
cmpsb
sub
mov
xchg
bound
orl
mov
lcall
xchg
incl
and
mov
push
cs
mov
lcall
popa
rcrb
andl
cs
cli
adc
lret
aaa
lcall
bound
jle
mov
fsts
pop
clc
iret
loopne
sbb
jae
arpl
lods
loope
in
sti
mov
add
js
fstl
mov
sub
mov
push
aad
and
aas
lcall
dec
sbb
nop
push
sbb
xor
lcall
sahf
fists
fiaddl
stos
sub
sbb
mov
scas
push
jle
xor
test
and
cmc
lcall
dec
push
sbb
and
pushf
xlat
cmp
mov
push
popf
mov
call
or
xlat
mov
or
sub
cmp
lcall
mov
mov
incl
stos
pusha
hlt
sti
sub
inc
lea
out
and
cwtl
loopne
inc
insl
xor
pop
in
cltd
jnp
mov
mov
xchg
orb
inc
ljmp
dec
cs
out
scas
or
fcmovb
and
push
adcb
daa
shlb
jle
push
push
fs
add
sbb
xchg
loop
leave
pop
sti
rcrb
out
mov
int3
adc
mov
inc
jp
cli
adc
fsubrs
daa
lods
xchg
out
sti
push
or
mov
fbld
lcall
ret
lcall
je
lcall
mov
push
xor
lcall
sbb
and
dec
mov
cmpsl
add
lcall
jbe
jl
cmp
lock
lcall
testl
ficoms
mov
pop
or
imul
outsl
inc
notl
enter
dec
dec
mov
fldenv
lcall
aaa
inc
movd
lcall
lcall
jo
lcall
gs
lods
aaa
mov
or
or
lcall
pop
inc
in
adc
insb
loop
not
outsb
lcall
push
cltd
loopne
fstpl
nop
cmp
notb
and
arpl
lret
lcall
mov
shlb
lcall
xchg
xchg
mov
cmpsb
jmp
inc
xchg
jno
out
xchg
enter
lock
popa
lcall
or
sub
lea
lods
lcall
orl
mov
jge
lahf
sub
dec
xchg
mov
add
mov
andb
loop
lock
adc
js
dec
lret
mov
sbb
dec
sub
xchg
mov
adc
lcall
test
mov
sub
fisubrl
setp
lods
insb
cmp
xchg
scas
add
cwtl
lcall
fnstenv
push
and
dec
mov
lock
dec
out
mov
add
lcall
and
xlat
cmpsl
insl
pop
push
mov
mov
mov
or
push
fcmovnb
or
mov
mov
fiaddl
fiaddl
arpl
pop
or
jae
fimull
lcall
mov
and
rclb
push
cld
adcl
cmp
jge
lcall
inc
arpl
pop
lret
mov
pop
inc
lcall
cmp
lcall
xchg
pop
lcall
fcomp
pop
xor
jle
push
inc
mov
negb
and
out
sti
jbe
xchg
sub
mov
stos
lods
inc
lcall
xor
mov
movsb
push
and
dec
sbb
sahf
das
mov
jle
mov
add
add
lcall
xchg
mov
cs
test
xchg
shl
lds
roll
and
sahf
mov
in
jno
nop
aaa
std
aam
fisubl
pop
arpl
or
sti
loopne
notb
cmpsl
push
fstpt
or
jns
push
adc
jp
jl
and
inc
inc
mov
xchg
sub
cld
ds
pop
jle
dec
lcall
xchg
sbb
push
jg
icebp
cmp
pop
or
xor
inc
mov
sbb
or
leave
out
xor
int
out
jbe
pop
imulb
out
mov
xor
jo
pop
and
xlat
ss
inc
loope
fs
scas
cltd
xchg
cmpsb
in
lcall
js
les
lcall
pop
or
rcrb
cmp
jns
mov
push
fildl
movsl
xchg
sti
sub
addr16
lcall
jmp
sbb
shrb
inc
push
lods
fdivrs
xorl
jb
std
outsl
adc
xchg
movsl
repnz
mov
mov
inc
xchg
fidivl
sbb
cwtl
cli
inc
ljmp
lcall
jo
mov
dec
cmpb
jmp
or
lahf
jle
mov
loop
or
ficoml
cli
les
xchg
inc
pop
lcall
cmp
pop
aas
call
push
stc
mov
mov
push
cld
icebp
adc
and
xor
ret
jae
pusha
push
adc
repz
sbb
mov
lcall
outsl
addr16
aaa
add
orl
lcall
jge
lcall
mov
lcall
je
mov
mov
in
cld
jle
or
sahf
lds
lcall
sub
scas
dec
and
and
lcall
push
outsb
lcall
jb
lcall
xchg
jo
loop
mov
movsb
mov
mov
lcall
hlt
inc
xchg
xor
adc
fstl
outsl
imul
lcall
pop
cmp
dec
sarb
cmp
mov
insl
or
push
jmp
adcl
inc
xchg
fsts
pop
jg
pop
mov
rclb
rcr
jl
test
jno
sbb
sbb
adc
cmc
lcall
or
jp
xchg
jnp
adc
mov
dec
lahf
bound
adc
cmpsb
push
and
inc
lcall
pop
movsb
lcall
dec
mov
or
inc
cmp
arpl
lcall
xlat
das
mov
test
es
sub
imulb
hlt
iret
push
pop
mov
les
scas
adc
lret
cwtl
jnp
sbb
fldln2
stos
test
repnz
mov
and
jecxz
sahf
lcall
push
lcall
es
xchg
lahf
cmpsl
lcall
or
inc
rol
stos
repz
pop
adc
sarl
pop
fcmove
fcomp
cmc
je
repnz
mov
ds
lods
aam
dec
data16
pop
push
mov
das
jmp
sbb
sbb
cs
aas
jg
pusha
dec
adc
lahf
lcall
mov
jbe
jp
aam
subb
iret
add
adc
mov
sub
cwtl
popf
jmp
lret
add
inc
inc
dec
sub
sbb
mov
data16
jg
ficoml
call
pusha
shlb
push
lcall
xchg
ficompl
test
sbb
das
pop
aam
jle
mov
sub
iret
xchg
xlat
mov
bound
out
xor
loopne
jae
sbb
rcl
push
pop
insl
cmp
lcall
dec
xchg
lcall
xchg
mov
mov
adc
clc
enter
pop
push
pop
mov
shrl
dec
mov
lcall
popf
jecxz
sbb
andb
mov
jmp
mov
hlt
cltd
pop
xchg
jo
pop
xchg
cltd
test
aas
ljmp
inc
sbb
andb
movsb
lcall
xchg
ds
scas
leave
es
lcall
adc
mov
ror
hlt
xor
pushf
ficompl
and
enter
dec
pop
sbb
divb
cmp
xchg
push
xchg
movsl
sbb
nop
scas
xchg
mov
mov
lcall
inc
and
aaa
cmp
lcall
aas
movsl
lcall
fs
and
jle
out
pop
sbb
test
fdivrs
push
lcall
call
fimull
dec
repnz
pop
mov
mov
lcall
cmp
pop
insl
mov
sub
jne
cmpsl
pop
dec
inc
mov
mov
mov
lcall
or
lcall
aam
mov
add
scas
sub
sub
fs
dec
mov
mov
rcrb
cmc
out
repnz
pop
push
xor
cmp
pushf
sarl
push
roll
test
mov
mov
ret
cmp
xor
sbb
adcl
mov
push
rclb
ja
inc
cmpsb
cs
fisttpll
sbb
or
push
scas
sub
pop
push
cmpsb
ret
xchg
iret
add
adc
dec
out
ljmp
hlt
leave
sub
cmp
fstpt
inc
pop
mov
movb
fwait
mov
std
es
dec
lcall
popa
cwtl
loop
lcall
or
lcall
jp
lcall
movl
cmp
xor
mov
ss
movsb
mov
pop
fucomp
div
lock
imul
jp
mov
into
inc
fsubl
sbb
pop
mov
pop
ljmp
insl
mov
or
mov
jbe
jmp
xchg
pusha
shlb
push
inc
cmpsb
lcall
shrl
jno
and
enter
jp
push
les
inc
push
or
xchg
push
add
pushf
pop
sbb
push
sub
lcall
jge
xchg
stc
lea
dec
lret
xor
lcall
mov
lcall
pushf
out
inc
push
aam
icebp
fisttps
ja
mov
jg
aas
jnp
pusha
mov
test
mov
jnp
dec
ficompl
in
stos
dec
wrmsr
lcall
insb
adc
call
add
jbe
mov
sbb
or
fldenv
lcall
push
adc
xor
or
mov
dec
das
jb
sub
dec
mov
push
pop
inc
xchg
outsl
push
xchg
and
push
lcall
scas
popa
and
inc
negb
stos
gs
fisubrl
pushf
pop
rorb
lret
push
test
nop
aam
int3
cwtl
lcall
xor
lcall
iret
sub
ficoml
fidivrl
sti
loop
mov
mov
lcall
arpl
sbb
addb
lods
and
push
lds
cli
lcall
popf
in
adc
daa
fpatan
pop
sbbl
pop
inc
aam
mov
lcall
jecxz
jge
add
pop
xchg
push
sub
adc
out
push
jge
jb
push
addr16
insb
lcall
test
mov
pusha
rcll
pop
adc
add
mov
insl
sbbl
sahf
jae
lcall
xor
lret
fistps
int3
repz
ds
mov
leave
lcall
sahf
sub
push
lcall
sub
lcall
jbe
idiv
xor
dec
in
cmp
outsl
shrb
das
mov
pop
nop
push
mov
jecxz
arpl
mov
pop
movsl
into
pop
mov
outsb
sbbb
fisubrl
mov
mov
sti
lcall
lods
xchg
mov
adc
lcall
pushf
inc
lcall
mov
inc
leave
mov
inc
pop
fs
sarb
cmp
das
mov
mov
add
outsl
sbb
or
jge
insb
cmp
lcall
jns
cmpsl
js
cwtl
dec
aas
fwait
jecxz
cs
sub
mov
out
jge
fiaddl
leave
add
mov
inc
inc
dec
int3
and
stos
adc
lcall
push
mov
movsb
xchg
mov
mov
in
in
outsb
lahf
or
shll
mov
aas
and
mov
lcall
ret
xchg
sti
dec
repz
mov
pusha
mov
mov
je
lcall
lcall
sbb
rclb
lcall
fdivp
lcall
and
pop
iret
xchg
int
xor
cltd
mov
push
sub
sbb
pop
inc
sub
jmp
lcall
loope
lcall
or
mov
aaa
mov
sbb
adc
fstp
data16
lcall
out
rolb
fidivl
dec
or
rol
stos
mov
lcall
lcall
call
aam
imul
mov
lcall
jb
lcall
jno
pop
jo
xchg
push
xor
xor
clc
and
testb
xor
xor
loope
lcall
cmp
ret
dec
lcall
xchg
or
and
adc
imul
pushf
lret
mov
adc
lcall
lret
hlt
jne
mov
cwtl
xchg
stos
stos
add
inc
shlb
fidivl
das
mov
mov
mov
cwtl
jno
or
enter
xor
pop
xor
mov
lcall
loop
loop
pop
add
xchg
xchg
stos
iret
sbb
mov
jl
bound
pop
mov
pop
leave
push
lahf
mov
lds
dec
add
lcall
arpl
sbb
pop
inc
xlat
subb
dec
jge
sbb
cld
fisubs
jnp
lcall
repz
rolb
sub
mov
add
mov
xchg
insb
jge
out
scas
dec
pop
repz
sbb
cwtl
lock
push
lods
std
lea
sub
push
xchg
das
lods
mov
sbb
out
loop
out
stos
mov
add
adc
lcall
xchg
shlb
outsb
xor
mov
mov
in
lcall
testl
mov
mov
xchg
mov
or
aam
loopne
cmp
pop
inc
mov
cltd
dec
call
stos
addl
cld
pop
sub
jg
pop
loop
push
or
jns
mov
es
lcall
push
inc
pop
adc
sbb
lcall
lods
adc
in
sub
or
daa
pop
fcmovu
push
mov
data16
popf
mov
adc
mov
fwait
push
sbb
adc
inc
dec
mov
mov
mov
mov
icebp
dec
mov
ret
xor
sbb
sbb
pushf
jbe
enter
les
int
mov
cs
orb
jae
jp
shrb
sbb
dec
lcall
and
dec
push
push
sbb
mov
dec
in
in
mov
push
adc
or
mov
mov
pop
sub
mov
loopne
sbb
call
lcall
dec
int
pop
test
ret
pop
sub
sub
hlt
fwait
or
inc
std
test
aas
push
mov
inc
loope
ret
lcall
mov
pop
mov
and
mov
add
sub
mov
inc
mov
mov
and
xlat
xchg
xor
scas
daa
sub
jbe
mov
inc
dec
ss
divb
push
stc
dec
xchg
ret
stos
cmp
in
leave
adc
push
cltd
lcall
or
adc
lcall
in
jge
repnz
mov
push
sbb
leave
lret
pop
mov
je
cmc
out
sbb
push
inc
lcall
cmp
xor
mov
repnz
mov
inc
sub
fldlg2
imul
lcall
jbe
lcall
mov
and
insb
lcall
push
jbe
mov
adcl
dec
push
adc
iret
mov
pop
lcall
bound
movsb
add
adc
inc
cmp
lods
lcall
add
mov
jmp
enter
fidivl
push
ret
mov
xchg
test
push
repz
push
stc
pushf
sbb
inc
cmp
mov
xchg
jp
mov
add
pop
lcall
ja
test
leave
or
rcrl
add
jae
pop
jmp
ljmp
in
push
fs
arpl
lds
dec
sti
pop
mov
dec
ljmp
test
leave
jbe
clc
pushf
xor
aad
mov
nop
adc
jo
frstor
lcall
orl
adc
shrb
out
xchg
pop
pop
adc
pop
stos
lcall
cmc
lahf
mov
jge
mov
cld
inc
or
lcall
xchg
stos
jl
pop
fisubrl
lods
fnstenv
pop
cmp
cmpsb
test
loope
mov
int3
mulb
mov
sbb
mov
sbb
incl
jbe
jnp
loop
lcall
daa
mov
loopne
fsub
sub
jns
adc
mov
pop
stc
lcall
ficompl
pop
stc
jne
leave
in
lock
stos
mov
sbb
mov
dec
dec
lcall
lcall
push
sbb
xchg
lods
sub
lcall
lcall
insb
push
xor
jmp
aaa
add
push
jmp
sub
push
mov
fwait
push
mov
lahf
test
mov
and
xor
mov
add
jp
push
jnp
xchg
mov
fimull
inc
and
or
jp
push
xor
cld
lcall
or
imul
nop
sub
lcall
mov
lcall
xor
lcall
rol
lcall
jp
lcall
sahf
jns
test
dec
dec
das
andb
inc
mov
mov
fwait
loop
adc
dec
mov
add
lcall
daa
ficompl
mov
inc
in
lcall
sbb
push
dec
mov
dec
pop
or
jae
imul
sbb
stos
mull
andb
cwtl
xchg
sbb
fists
das
dec
sbb
fstl
test
mov
test
push
lcall
xor
arpl
lcall
int3
jo
jns
in
or
cmpsb
mov
adc
out
inc
sub
mov
repz
enter
fwait
sub
adc
aaa
clc
sbb
push
stos
sbb
mov
xor
dec
loopne
faddl
test
xor
ficoms
jp
cli
lcall
mov
int3
sub
es
xchg
bound
xchg
fcmovbe
lock
inc
aas
pop
icebp
fildll
lcall
push
lahf
lcall
rorb
ds
or
dec
adc
lcall
push
dec
shrl
lahf
out
push
sbb
lods
and
cld
outsl
aad
lcall
jmp
push
pop
sub
mov
iret
lcall
pop
and
xorl
or
mov
lcall
sub
adc
lcall
int3
cmp
mov
mov
dec
ljmp
adc
daa
rcll
ficoml
bnd
pop
adcl
int3
rorb
and
and
ljmp
mov
fstps
in
outsb
xor
loopne
dec
in
fcmovnb
jge
jl
push
mov
and
mov
rclb
sbb
adc
in
inc
push
mov
mov
cmc
add
lcall
xchg
ljmp
mov
push
pop
sub
test
cmp
sbb
jmp
lcall
mov
xlat
repz
js
mov
xor
push
shlb
pop
xchg
leave
enter
mov
sahf
cmpsl
mov
scas
aam
sarb
lcall
lea
push
mov
nop
clc
fisubrl
stos
test
inc
lcall
in
pop
sbb
lds
adc
test
xor
lcall
popa
bound
outsb
lcall
cmp
lcall
out
lret
ret
xchg
adc
lcall
inc
test
lods
fidivrs
xchg
out
xchg
or
xor
xchg
mov
ss
popf
mov
lods
lcall
cmp
pusha
sbb
cld
mov
mov
mov
lcall
jno
lcall
jb
mov
enter
daa
lahf
inc
lcall
xorb
loop
gs
adc
xchg
mov
daa
inc
jne
adc
dec
faddl
pop
jge
sbb
cmp
mov
insl
add
xor
mov
jno
fs
pop
loopne
inc
icebp
and
lea
mov
and
push
lcall
das
xchg
xor
mov
sub
nop
dec
xchg
psrlw
insb
sbb
mov
mov
pop
lea
push
adc
fnstcw
dec
push
mov
push
push
mov
xor
sub
jecxz
pop
cmp
lods
fsubs
sbb
pop
xchg
lcall
xor
lcall
or
lcall
push
pop
xchg
dec
add
jecxz
mov
lcall
lret
fistpl
loopne
ds
lret
jno
inc
mov
outsb
push
lcall
shlb
aam
jns
jno
adc
test
push
fidivl
push
mov
pop
sub
lcall
and
cmc
cli
in
lcall
jl
mov
xchg
repz
sbb
repnz
pop
loop
or
pop
movl
mov
nop
mov
xchg
sbb
imul
ret
push
lcall
lcall
repz
fiadds
pop
dec
sarb
es
or
and
imul
lcall
daa
jns
push
sbb
jae
push
ja
into
dec
sbb
sti
inc
scas
or
or
or
pop
jae
sbb
fnstcw
lcall
not
lcall
scas
mov
hlt
loopne
cmp
fs
add
loope
test
sti
lcall
jno
lcall
sbb
hlt
mov
xchg
pop
loop
lcall
adc
lcall
fwait
test
dec
xor
scas
test
ret
add
add
mov
inc
lcall
mov
lcall
mov
lcall
sbb
xor
mov
lcall
dec
adc
pushl
mov
out
sbb
or
outsl
lcall
xor
imul
les
adc
inc
pop
movsl
lcall
push
sahf
lcall
xor
lcall
ja
lcall
xor
adc
cld
and
dec
push
bt
cmp
in
sahf
xor
push
test
lcall
jns
lcall
lret
xlat
lcall
loop
lcall
rolb
push
popa
roll
hlt
fwait
sbb
repnz
dec
pop
aam
mov
add
outsb
cli
dec
std
lcall
push
fistps
cmp
adc
sub
cmc
js
out
int
sbb
cmpsl
add
popf
outsl
cwtl
and
movsl
insb
ret
mov
pusha
loope
jno
pop
nop
fnstsw
or
add
stos
or
mov
lcall
mov
outsl
cmpsl
cli
in
pop
lcall
sub
sbb
push
shll
sarb
inc
mov
xchg
pop
in
imull
ret
lds
mov
iret
cmpsb
dec
pop
add
xchg
nop
ds
popa
rcrb
and
lcall
in
lcall
mov
lcall
mov
cmc
push
add
loopne
add
aaa
js
out
sbb
xchg
adc
call
sbb
imul
and
sbbb
cltd
mov
pop
jp
mov
cmp
stos
mov
aad
mov
into
xchg
lcall
loop
lcall
pop
imul
nop
xor
jno
repnz
addr16
lcall
fdivrs
add
cmpsl
inc
ja
mov
inc
fwait
icebp
jne
movsl
mov
fdivrl
fisubl
pop
pop
dec
int
mov
xchg
jo
and
mov
add
stc
xor
lock
mov
gs
dec
dec
sbb
js
mov
add
std
xlat
lcall
sub
sbb
in
lahf
in
rdmsr
sbb
fisubl
inc
cmp
scas
test
push
add
dec
lahf
sbb
sub
dec
fnstcw
mov
call
mov
js
add
inc
mov
ret
mov
jb
out
lcall
push
push
lcall
and
lcall
pop
inc
lcall
mov
test
cld
pop
cmp
fidivrl
pop
dec
or
lret
or
sbb
aam
mov
pop
xorb
mov
push
cld
lcall
cmp
shr
mov
xchg
push
inc
bound
mov
imul
dec
jg
pop
and
movsb
mov
jns
adc
and
lea
mov
mov
daa
fildl
loope
inc
xchg
mov
pop
adc
pop
sbb
je
pushw
lcall
imul
cld
imul
fwait
mov
lock
push
into
js
dec
push
cmp
mov
mov
lods
jnp
and
dec
mov
cs
mov
jns
lcall
shl
lcall
addl
sub
popf
lcall
in
pop
lret
xlat
lcall
push
and
or
cmpsl
lcall
jbe
lcall
sti
jne
cwtl
lcall
orl
sub
hlt
cmp
in
cmp
lahf
aas
mov
lcall
dec
sub
add
fwait
xor
test
inc
ds
and
mov
mov
and
pop
imul
mov
cmpsb
adc
xchg
roll
or
sbb
fs
lcall
cs
ret
push
daa
outsb
out
add
inc
fidivrl
cmp
xor
scas
jo
mov
cmp
mov
adc
cmp
dec
mov
cltd
fisubrl
int
and
mul
push
inc
std
sbbl
dec
fisubrs
pusha
jnp
insl
mov
andb
mov
lds
in
sbb
push
xor
push
sbb
fisubl
je
pop
stos
sbb
dec
adc
lcall
pop
lcall
xchg
lods
loop
xchg
imul
mov
sbb
dec
cmp
loop
cli
lcall
into
pop
lcall
push
cmp
arpl
lcall
pushf
cmpsb
test
sub
jmp
mov
ljmp
mov
rcll
mov
nop
mov
pop
in
sahf
and
xchg
mov
into
jp
add
das
mov
cmpsl
mov
dec
adc
es
lock
sarl
shll
ljmp
test
lcall
mov
in
jmp
or
lcall
outsl
ljmp
add
lcall
jne
inc
clc
or
nop
outsb
xchg
mov
xor
or
gs
sbb
ret
sub
jecxz
in
mov
scas
jmp
fsub
lfs
imul
ss
pop
test
dec
scas
xlat
movsb
insb
mov
stos
andl
and
xchg
cmp
lea
pusha
mov
mov
scas
xchg
insl
inc
xchg
lods
mov
shr
sbb
xchg
orb
inc
pop
lcall
pop
dec
fildll
sbb
lcall
sahf
mov
cmpsl
jb
loop
cli
xchg
jbe
push
pop
icebp
xchg
hlt
shlb
lcall
call
jo
jge
repnz
pop
lret
sbb
sub
add
inc
cmp
leave
lock
lcall
push
jle
mov
adc
cld
dec
outsb
jbe
jnp
out
scas
pop
std
add
mov
lcall
mov
mov
lcall
popa
inc
lcall
lea
push
nop
fsub
fnstenv
aam
mov
ret
mov
nop
xchg
insl
add
lods
lods
int3
jp
jge
test
pop
gs
pop
xchg
or
xor
in
xor
mov
shll
add
push
data16
sar
lcall
movsb
or
ret
pop
lcall
or
aam
mov
pop
sbb
sub
pop
ret
scas
lcall
xchg
mov
cltd
fidivrl
addr16
push
jmp
mov
test
aaa
add
and
stos
adc
jp
scas
push
and
lcall
pop
loop
sahf
adc
xchg
inc
adc
lcall
jl
jge
nop
xchg
dec
les
lcall
pusha
mov
pop
push
fwait
pop
lcall
loopne
std
push
dec
lcall
das
mov
imul
or
negb
insl
and
and
add
cli
pop
lcall
cltd
popf
lcall
cld
imul
and
fimuls
lds
sbb
in
jle
jb
pop
sbb
test
sub
and
lcall
pop
mov
out
cmp
movsl
add
jp
lcall
lcall
mov
pop
lds
xchg
aad
dec
sbb
aas
push
sub
ret
mov
fiaddl
lahf
fimuls
filds
movsb
and
leave
lcall
mov
inc
fidivrl
rcrl
lcall
fnstcw
adc
mov
adc
idivb
xchg
fs
pop
lcall
cmp
jg
mov
lcall
ret
jmp
jnp
sub
lea
cmp
push
add
fisubrs
insb
out
add
push
dec
lcall
sub
and
push
cmc
icebp
inc
hlt
xchg
repnz
jl
insb
cltd
scas
aad
adc
test
hlt
lcall
dec
lcall
push
js
mov
lret
lcall
xchg
xlat
lcall
dec
sbbb
shr
adcl
inc
inc
xor
fstpl
mov
mov
cmp
dec
adc
lret
xor
lcall
sub
lcall
sub
and
push
in
test
pop
jnp
aad
lcall
movsl
ret
push
or
ds
push
mov
push
sbb
js
lcall
imul
mov
xchg
push
into
push
add
adc
mov
pop
lcall
xor
sbb
sahf
dec
sub
inc
cli
cltd
ljmp
popa
int3
cltd
xchg
shll
test
xlat
or
sbb
add
dec
xor
int
sbb
stos
xchg
lods
mov
aam
lcall
xor
lcall
cmp
ret
jnp
ss
lods
bound
push
sub
lcall
out
lcall
imul
pop
aam
imul
lcall
nop
mov
outsb
mov
inc
pop
push
ret
cmc
dec
sbb
or
or
sbb
outsl
jmp
loope
xchg
push
adc
pop
mov
xor
enter
pop
xchg
rclb
mov
lcall
add
lcall
jne
lcall
bound
lcall
mov
lcall
notb
sub
push
pop
fwait
lock
outsb
stos
ss
push
lcall
lcall
jnp
std
and
test
mov
push
dec
lcall
jae
jmp
fsubrs
pusha
pop
scas
in
addl
lcall
push
jne
xchg
push
es
adc
lcall
add
lods
pop
inc
sub
stos
arpl
pop
mov
in
xchg
mov
lcall
aam
std
or
dec
rolb
push
stos
xchg
fcoml
aad
insb
pop
sbb
shl
pop
inc
mov
test
aam
mov
cmp
testb
lcall
xlat
or
in
mov
adc
lcall
push
push
lcall
arpl
sub
and
dec
int
mov
div
jmp
dec
add
int3
test
lcall
lahf
out
jbe
push
enter
ja
nop
lcall
stc
xchg
rcl
mov
imul
stos
rcll
subl
mov
sbb
sub
pop
std
dec
push
cmp
lcall
cmp
mov
addr16
mov
pop
push
mov
mov
fidivs
fistps
rolb
fdivrs
andl
mov
push
std
adc
in
jp
sub
fcom
aad
cmpsb
aas
outsl
pop
push
cmp
sub
sub
in
mov
loope
jmp
pop
push
xchg
mov
pop
pop
pushf
ret
ljmp
push
lcall
aad
lcall
into
xchg
mov
lcall
lcall
ds
add
add
push
sub
xlat
rcl
call
shr
pushf
inc
fistpl
cltd
mov
inc
int3
test
testb
mov
xchg
mov
xchg
pop
lcall
dec
lcallw
scas
mov
in
decb
sub
mov
mov
test
int
jle
sahf
aas
jmp
jns
jecxz
mov
sub
add
out
mov
ds
cs
lcall
xor
popa
repnz
lcall
push
shrb
outsl
sbb
insl
shll
orl
lahf
sbb
lcall
stos
dec
popf
mov
push
enter
out
xorl
std
mov
sbb
mov
mov
outsb
dec
push
pop
sub
call
cmp
xchg
pop
lret
lcall
test
les
cmp
push
add
pop
and
imul
and
test
ret
xchg
jecxz
aaa
jnp
mov
mov
inc
add
adc
mov
pushf
sarl
dec
imul
xor
imul
mov
mov
add
fcmovb
stos
sbb
lcall
push
inc
lcall
or
lcall
stos
repnz
popf
imul
inc
clc
lcall
mov
xor
sbb
lcall
sbb
arpl
lods
clc
jo
ja
sbb
and
movsl
testl
fistpl
jbe
out
pop
cmp
out
mov
test
cmp
sbb
jb
mov
jle
movsb
in
lcall
subl
mov
fstpl
pop
mov
fwait
adc
enter
sbb
xor
mov
pop
push
loop
pop
pushf
jbe
push
adc
xchg
jle
sbb
fdivr
and
das
jge
loopne
pop
lcall
insb
and
sbb
lcall
pop
repnz
leave
in
stos
cmp
std
icebp
shlb
dec
lcall
sub
lcall
and
lcall
les
lcall
cwtl
setp
sub
push
insb
std
mov
mov
cmp
sbb
imul
mov
add
sbb
lds
or
jecxz
rcrb
lods
or
xor
repz
mov
fistps
dec
xchg
out
les
or
cmc
rcrl
out
shrb
cld
rcrl
pusha
sub
lcall
mov
lcall
int
movsb
cmpsb
lcall
lcall
xor
dec
cld
jb
push
jg
pop
movsb
adc
cmp
add
sbb
out
inc
sbbb
test
mov
cmpl
jl
jecxz
add
dec
mov
lahf
daa
cmpsl
fiaddl
inc
sub
ficoms
out
lea
sbb
lcall
mov
repnz
fisubrs
push
jnp
cmpsb
idiv
inc
sbb
cmc
or
shll
sub
subl
jle
sbb
or
sbbb
push
and
jle
xchg
cs
cmp
mov
clc
lcall
lcall
xorl
out
and
sbb
stos
cmpsl
jns
lret
push
test
sbb
adcl
jp
test
in
sub
and
jbe
adc
pop
loope
dec
psubq
ss
js
lcall
int3
or
loop
fidivl
pop
add
xor
aas
adc
xchg
into
lcall
pop
lahf
sbb
jmp
lcall
pop
stos
lcall
enter
inc
faddl
and
lcall
jmp
lcall
lcall
pop
xchg
sub
mov
mov
mov
addr16
enter
cwtl
nop
test
lcall
dec
mov
cmp
sbb
mov
push
lcall
lcall
cwtl
sub
push
test
push
outsb
and
ljmp
lcall
sub
or
lret
mov
fisubl
push
shll
mov
inc
mov
sbb
sub
lea
fcomps
imul
xlat
sbb
add
adc
adcl
loop
xchg
ret
sbb
push
mov
dec
test
xchg
sub
sbb
dec
lcall
inc
ss
and
mov
test
in
xchg
pop
cmpsl
test
and
repz
dec
mov
shrl
lcall
pop
sar
xchg
inc
cwtl
mov
es
xchg
sbb
push
loopne
add
jmp
cmp
clc
pop
shlb
xchg
leave
sar
add
sub
or
lcall
pop
jg
cmp
inc
or
mov
fisubrl
jns
dec
or
jnp
popa
mov
lods
pop
clc
sahf
xor
mov
xor
xchg
sub
inc
dec
jo
fistps
ret
cwtl
jge
gs
testl
pop
fidivl
dec
push
out
mov
push
nop
negl
dec
lods
jnp
sbb
fsubs
repnz
cmpl
jg
mov
cmp
or
insl
orb
xchg
sbb
add
scas
lcall
fstps
inc
pop
fisttps
fwait
and
fstl
fimuls
pop
leave
lcall
stos
movsl
cltd
push
test
lcall
mov
aaa
pop
dec
jg
mov
inc
jb
and
imul
ljmp
jno
cmp
int3
aaa
icebp
xchg
jb
xchg
dec
adc
sbb
dec
jecxz
test
mov
adc
lret
sub
and
sysenter
scas
lods
fisubrs
sbb
jne
adc
adc
push
cmpsb
lcall
sbb
ficoml
jnp
mov
or
or
cld
fstl
mov
jb
sti
pop
int
dec
jne
lcall
and
push
and
xchg
lret
or
insb
mov
shlb
mov
cli
popf
roll
pop
lret
aas
sub
adc
aam
fcmovbe
cmp
ret
cmpsl
mov
and
mov
shl
movsb
cld
mov
push
sub
call
push
push
mov
lcall
push
test
sti
and
mov
adc
jl
pop
inc
add
xchg
popf
cltd
frstor
shl
sbb
pop
inc
mov
push
sbb
nop
dec
in
cmc
data16
sbb
imul
stos
cmpsb
cmp
cld
push
mov
sbb
inc
dec
sbb
test
loop
das
lcall
out
sti
inc
fimull
iret
sbb
and
sub
lcall
movsl
push
dec
jae
add
lods
mov
xor
lcall
int3
jle
je
adc
jo
in
jb
sti
fbstp
lcall
push
sti
push
adc
sub
jnp
mov
push
loope
xchg
ds
lcall
lahf
loopne
sti
lcall
test
mov
push
aad
lahf
mov
cwtl
into
dec
sbb
sbb
ret
xor
dec
rcrl
sub
xor
sbb
nop
push
push
mov
inc
stc
jnp
rcrl
rcrb
pushf
xchg
sbb
and
dec
jle
arpl
lcall
dec
aas
cltd
rep
cmove
lcall
imul
jbe
mov
pop
jmp
lcall
mov
icebp
bound
xchg
loop
push
addr16
movsl
lcall
mov
outsl
adc
outsl
icebp
push
push
inc
jle
push
lcall
or
push
xor
sub
push
lcall
scas
inc
lcall
enter
iret
ret
jmp
stos
push
lcall
arpl
inc
scas
xlat
xchg
inc
in
fdivl
mov
lcall
rol
loop
lcall
cmp
dec
pop
popa
lea
rcll
cmc
or
add
out
jecxz
adc
adc
cmp
test
lcall
jmp
and
in
ret
cli
sub
jo
xor
lcall
mov
inc
sub
mov
mov
mul
xchg
fcomp
mov
sbb
pop
sbbb
es
lcall
sub
mov
lret
fistpl
pop
fstpt
arpl
gs
mov
mov
push
dec
mov
movsb
mov
negb
repz
jne
in
jge
jbe
test
out
bound
xchg
sbb
jg
dec
lcall
mov
out
sbb
dec
cmp
lods
ja
mov
andl
mull
adc
ljmp
ss
aam
or
xchg
nop
lcall
pop
adc
stos
ja
inc
lcall
in
pop
sbb
push
sar
lcall
pop
adc
adc
jno
mov
mov
incb
and
lcall
cmp
lcall
test
mov
testb
dec
sbb
bound
cmpsb
jge
add
mov
cltd
push
pop
and
clc
dec
jp
adcb
inc
lock
rolb
ljmp
dec
xorl
jb
pusha
data16
std
and
jne
sub
push
push
lcall
in
fstpl
insb
loope
rcrl
imul
cwtl
les
mov
mov
push
shrl
push
xchg
aad
cli
lcall
sbb
lret
add
xlat
lcall
int
lcall
xchg
lahf
jecxz
xchg
xchg
sbb
or
mov
leave
pop
ret
lcall
out
notl
ljmp
push
inc
jns
std
cwtl
mov
lcall
ret
pop
push
scas
jne
cmp
imul
jg
cmp
cltd
pop
sub
call
jnp
mov
arpl
sub
fstpl
out
fcomps
add
jbe
pushf
popf
add
lcall
inc
test
lcall
cwtl
nop
mul
repnz
data16
loope
mov
fstps
inc
push
fwait
aam
cmp
fsubl
stos
cmp
das
sbb
lods
and
lods
ret
mov
pop
loope
repz
mov
jns
sbb
lcall
jmp
mov
and
int3
jb
rcll
aam
mov
cwtl
mov
andl
mov
movsl
lds
add
push
and
mov
sti
out
lcall
lods
adc
sub
lcall
out
lcall
cmp
fs
lods
leave
lahf
lcall
out
loop
lcall
inc
lcallw
ret
lods
or
inc
xchg
cmp
adc
mov
mov
xorl
and
or
pop
leave
scas
sbb
dec
lret
lret
gs
lcall
popf
push
pop
mov
mov
les
lcall
rorb
cwtl
push
pop
outsb
mov
mov
lret
inc
lcall
sbb
hlt
lcall
jp
push
out
adc
inc
imull
clc
rorl
mov
cmp
jg
add
repz
mov
inc
jo
dec
in
push
xchg
andb
push
sub
mov
lcall
lcall
adc
push
sbb
adcl
cmpsl
jp
sbb
mov
pop
dec
xchg
nop
inc
xchg
jp
cmp
dec
sbb
cmc
scas
pop
mov
sub
add
loopne
pusha
int
push
xchg
jecxz
test
inc
sbbb
sbb
jmp
push
test
push
lcall
xor
cmp
lds
sub
addr16
inc
add
or
bound
cmp
mov
xor
mov
sbb
sub
or
push
mov
and
int
mov
lret
dec
imul
clc
lcall
fdivr
lcall
out
lcall
push
in
inc
lret
lcall
outsb
lcall
adc
sbb
sbb
or
jo
clc
lcall
add
mov
xor
lods
lcall
pop
out
cmpsl
stos
int3
adc
fstp
mull
lcall
adcl
jnp
xchg
mov
cmp
cmpb
xchg
pusha
imul
lcall
sbb
bound
jmp
lea
pop
mov
jns
mov
insb
lcall
mov
hlt
push
inc
cli
movsb
das
stos
sub
rcll
aas
fisubl
cmc
sbb
jge
and
lods
int3
lea
and
push
test
stc
cmp
xor
icebp
sarb
call
dec
fcompl
adc
std
lret
call
sub
sarb
pop
imul
das
lock
pop
lcall
lret
mov
orl
flds
ss
push
lcall
leave
mov
xorl
lcall
xchg
les
adc
stos
inc
or
fld
sub
iret
jne
jb
sbb
dec
fisubl
and
pop
into
lcall
ret
stc
lcall
mov
mov
pop
fcomps
fwait
mov
jge
cld
lcall
adc
ljmp
jge
inc
lea
dec
out
fiaddl
sbb
insl
mov
cmp
pop
adc
and
outsl
loop
adc
es
out
mov
fistps
cmp
push
sbbl
lcall
or
mov
stos
mov
and
and
push
xchg
cld
dec
and
jp
das
jge
xor
xlat
cmp
sbb
inc
iret
sbb
adc
pop
into
lret
int3
lahf
cs
lock
pop
jns
mov
sbb
xor
pushf
cld
sbbl
enter
pushf
ret
sub
lcall
pop
cmpsb
lcall
in
jle
xchg
test
ja
jbe
mov
outsb
mov
pop
lcall
sbb
sbb
lea
inc
jmp
ds
cli
mov
lock
imul
into
jo
add
lcall
mov
orl
leave
jge
out
add
cmp
fldl
ficomps
ja
push
xor
outsb
lcall
mov
inc
lcall
lcall
pop
or
cmp
push
xchg
mov
fmull
push
sahf
lret
adc
or
shll
lcall
push
adc
movsl
loope
add
in
jecxz
sahf
loopne
jp
les
push
inc
adc
xchg
lcall
push
jo
add
ficoms
fisubl
bound
inc
clc
sbb
lcall
adc
lcall
adc
je
xlat
xchg
inc
negl
adcb
ficoml
push
faddp
cmp
mov
push
inc
lcall
xchg
mov
pop
scas
xchg
int3
lcall
cmc
ss
pop
jle
int
test
es
jge
sbb
pop
aas
cmpb
xor
sbbb
movsb
aaa
cwtl
lcall
imul
push
test
ljmp
pop
jno
loope
insb
and
mov
push
popl
dec
pop
push
scas
out
pop
cmc
stos
rcrb
mov
xor
push
roll
sbb
jnp
lcall
mov
stc
xor
cli
jo
or
and
outsl
lods
sbb
dec
iret
out
dec
into
mov
sbb
mov
es
clc
imul
outsb
loop
cmp
xchg
aam
mov
jo
sub
or
mov
sbb
mov
rcll
into
xchg
aaa
lods
lcall
dec
out
push
adc
adc
xlat
ret
jle
fbld
inc
outsl
lcall
mov
adc
mov
cmc
pop
stos
jle
sbb
cmp
push
jg
lcall
cmpsl
aad
push
incl
sub
and
es
lcall
dec
int3
stos
mov
mov
in
xchg
imul
adc
rcrl
pusha
bound
negl
dec
pop
into
adc
jg
mov
lcall
icebp
insb
add
inc
jp
inc
test
fmull
dec
loop
rorl
pop
xor
test
sahf
std
lcall
push
sub
les
cmpsb
lcall
ss
sbb
shlb
push
popa
push
jmp
jnp
rcpps
jns
sarl
lcall
jl
or
mov
ss
lret
sbb
int
sub
pop
pop
fdivs
out
mov
outsl
sbb
or
aaa
push
lcall
or
mov
fcmovbe
mov
pop
xchg
hlt
push
sbb
mov
sbb
adc
ljmp
push
xlat
xchg
scas
lret
cld
inc
or
jg
in
lcall
and
repnz
arpl
rcl
orb
outsl
lcall
jmp
inc
sub
pop
mov
ja
dec
cmpsb
fisubl
pop
mov
sahf
or
shl
mov
bound
fmul
lcall
mov
adc
imul
lcall
mov
lcall
lahf
xchg
mov
dec
xchg
ficompl
das
sbb
outsl
jle
xchg
sbb
add
cmc
outsb
fwait
and
movsb
sbb
cs
loop
jns
or
jae
or
frstor
xor
icebp
sti
subl
lcall
inc
lret
adc
or
in
and
lcall
mov
leave
jno
mov
ds
loopne
jp
jbe
shrb
fwait
rcrl
daa
jp
or
mov
ficoml
mov
sub
push
sub
hlt
test
pop
lcall
push
aas
pop
push
mov
into
xchg
mov
lcall
sarl
sbb
popf
mov
mov
mov
into
cmp
mov
pushf
lcall
mov
inc
dec
sub
test
lcall
dec
dec
lcall
shlb
fwait
push
pop
jl
mov
xchg
jle
lret
rorl
pop
cmc
sub
mov
inc
sarb
push
aam
movsl
sub
out
dec
inc
jmp
sbb
inc
adc
mov
repnz
inc
test
cmpsb
fdivs
xchg
ljmp
je
adc
mov
xchg
aaa
push
cs
dec
mov
add
pop
fidivl
arpl
push
lea
lcall
insb
sbb
inc
xlat
adc
dec
jb
icebp
mov
enter
ss
lcall
arpl
mov
sbb
out
mov
lcall
iret
cli
rcr
lcall
outsb
add
shr
movsb
cmp
push
bound
push
idivl
test
ret
pop
dec
jmp
and
es
and
pusha
mov
repz
push
dec
ljmp
inc
lea
sub
lcall
addl
outsb
sbb
sub
xor
es
push
sub
push
imul
fstp
test
mov
lcall
rorl
shl
sbb
push
testl
xor
popf
and
outsb
inc
pop
xchg
mov
and
sub
xchg
sub
ret
shr
pop
gs
xor
push
sub
sub
ja
push
out
sbb
and
or
mov
xchg
test
mov
cmp
fs
cmp
xorb
lcall
jmp
sbb
add
jecxz
pop
pop
mov
test
jno
jge
pusha
enter
lcall
cs
lcall
lcall
jne
lcall
bound
leave
or
pop
dec
setno
and
push
lcall
mov
cmp
icebp
lcall
aam
lcall
or
je
out
fwait
stos
mov
pop
sub
out
in
or
ficomps
daa
movsb
subb
mov
and
push
push
dec
dec
fstps
or
jnp
fwait
mov
fists
pop
adcl
bswap
fldcw
push
dec
cmp
adc
fcoml
pop
push
jnp
xchg
dec
fidivl
jns
pushf
or
jle
jne
lds
rcr
cmpsb
pop
cmp
fcmovb
and
lret
lcall
repnz
pushf
imul
mov
add
pop
scas
fdivrl
lcall
dec
xchg
lcall
fisttps
out
imul
lcall
pusha
push
cltd
lcall
repz
jl
orb
scas
sbb
mov
ret
cli
jp
pop
addb
mov
sbb
jb
nop
xchg
ss
mov
arpl
imul
lcall
les
lcall
jbe
lcall
or
lcall
mov
pushf
and
iret
xchg
cmp
arpl
cld
mov
jns
mov
lcall
sbb
insb
lcall
pop
int3
lcall
mov
orl
lcall
mov
call
sub
in
les
out
repnz
lcall
mov
adc
dec
jmp
sub
arpl
pusha
lea
or
mov
mov
xor
xor
cwtl
adc
pop
sbb
pushf
addr16
ljmp
mov
inc
imul
lods
lea
pushf
inc
push
iret
jl
sub
mov
cmpsb
leave
mov
fnstsw
jge
cmp
stos
push
mov
fisttpl
pop
mov
cmp
or
lret
or
stos
cs
cmp
les
std
or
cmpsb
inc
int3
sahf
test
mov
or
jmp
mov
inc
lcall
dec
adcb
xchg
jno
add
lcall
dec
lahf
mov
and
xor
test
push
mov
scas
ror
je
ss
nop
pop
mov
or
push
out
std
jno
xchg
jle
mov
pushl
sbb
mov
mov
test
dec
xchg
loope
das
lcall
push
and
pop
out
in
inc
mov
leave
lcall
repnz
sti
fisubl
jmp
and
lcall
repz
aaa
out
xchg
jp
mov
lcall
addr16
ffree
pushf
loop
mov
outsl
cmpsl
lods
lcall
rolb
mov
push
sahf
lcall
lret
inc
int3
lcall
dec
push
mov
std
or
or
xor
mov
out
cwtl
sub
test
leave
lcall
inc
pop
lcall
fdivs
mov
cmc
jns
xchg
mov
icebp
lcall
gs
je
mov
adc
sbb
sbb
lods
fildll
in
out
loop
adc
lcall
imul
dec
rorl
xchg
mov
pop
movsb
cmp
lods
jp
stos
xor
scas
insl
or
ss
aas
lods
pop
xchg
lcall
mov
lcall
fbld
int
jno
add
lcall
inc
stos
xchg
fsubrp
loop
mov
out
lcall
push
mov
adc
xor
cmp
pop
iret
push
jl
rcl
and
lcall
stc
loop
out
out
cli
inc
cld
inc
lea
lcall
imul
mov
cmpsb
mov
sbb
decb
inc
pop
mov
icebp
pop
push
lcall
push
mov
push
push
call
cwtl
scas
cmp
push
fisubrl
cmp
pop
fld1
mov
push
mov
nop
cwtl
lcall
dec
rcrb
lods
sbb
les
sbb
std
lcall
and
hlt
lods
xchg
pop
dec
cmp
mov
pop
pushf
push
or
adc
pop
fidivrl
int3
or
lods
lcall
aam
lcall
mov
lcall
scas
lcall
jp
jg
adc
adc
lret
aad
test
mov
jg
mov
lcall
xchg
outsb
gs
loop
mov
dec
lcall
daa
pusha
cmpsl
push
lcall
into
inc
lcall
mov
inc
mov
mov
jns
xor
lcall
aam
lcall
adc
pop
push
adcb
test
icebp
jp
imul
lcall
iret
mov
lret
add
mov
xchg
inc
enter
ss
inc
xchg
lcall
loope
lcall
and
stos
in
fstps
adc
mov
or
adc
ljmp
xor
xchg
sub
or
inc
clc
pop
jbe
lcall
sti
test
gs
jno
int3
hlt
mov
pop
or
jl
ljmp
rcrl
cmc
add
cmp
push
mov
sbb
pusha
xchg
lahf
shlb
mov
repz
out
mov
leave
and
outsb
lcall
imul
xor
pushf
lods
push
dec
and
shrb
inc
push
sub
fs
mov
xchg
push
cmp
movsl
bound
adc
push
iret
inc
jb
xor
lahf
lret
mov
lahf
sbb
aam
les
adc
movsl
xor
pop
pop
jl
or
cmp
sub
or
out
lcall
mov
dec
addr16
sbb
sahf
jmp
cld
repz
addr16
lcall
rorl
lcall
push
mov
mov
jno
les
setp
pop
dec
adc
iret
andb
pusha
loop
pop
lahf
adcb
icebp
ss
sbb
ret
cmpsl
mov
cli
adc
mov
leave
xchg
dec
rcrb
stos
inc
out
adc
into
int
pop
pop
and
ljmp
in
jmp
dec
lcall
pusha
jle
dec
int3
repz
and
les
and
cmp
addr16
xchg
gs
cmpsl
imul
mov
pusha
es
mov
roll
dec
jns
ljmp
xor
fildl
repnz
ds
mov
or
idivb
outsl
dec
movsb
cltd
sbb
adc
lcall
clc
ficoml
cmpb
mov
cmpsl
sti
xor
sbb
cmp
push
mov
out
cltd
mov
aam
xchg
jns
push
cmp
ja
mov
inc
lcall
neg
lcall
mov
ss
out
pop
es
mov
cmp
icebp
push
fdivrp
mov
sub
cmp
movsb
xorb
xor
mov
in
mov
xor
rorl
scas
loop
cld
enter
mov
jg
loopne
test
jl
loopne
in
aad
and
jne
ds
lcall
jge
lcall
mov
lcall
ljmp
or
inc
adc
jns
xor
push
fisubl
lcall
std
in
lcall
sub
xchg
push
in
lret
ja
inc
pop
fidivrs
pusha
xor
cmp
fstps
cli
outsb
cwtl
sub
inc
adc
sbb
mov
push
sub
adc
pop
jecxz
mov
push
xchg
lahf
lods
sub
jle
jb
in
jp
bound
sub
push
sbb
mov
push
loopne
or
pop
adc
add
lds
rcr
sub
repz
pop
sub
std
or
aam
aaa
sahf
cmp
lcall
scas
mov
leave
fsubrs
or
bnd
in
push
xor
adc
arpl
orl
add
or
pusha
jp
inc
lcall
add
lcall
daa
loopne
lahf
pop
cmpsb
outsl
dec
inc
adcl
mov
lcall
arpl
push
push
add
xchg
mov
pop
ficompl
inc
lcall
dec
jne
sbb
test
push
popl
or
sbb
iret
push
lcall
mov
cs
jns
shl
mov
sbb
fwait
inc
repnz
in
and
int3
addr16
sti
lcall
aaa
fcompl
push
dec
push
and
xchg
shrb
fmull
out
mov
sbb
mov
lcall
mov
lcall
sbb
pop
out
xor
mov
negl
jge
cli
lcall
xor
adc
ficompl
cmpsb
mov
and
or
lahf
add
mov
cltd
and
ljmp
jg
cmp
fistpl
repnz
rol
sbb
notb
adc
xchg
mov
cwtl
mov
xor
push
or
pop
lahf
lcall
xor
in
mov
cmp
mov
in
std
fisubl
out
lcall
testb
cwtl
inc
jb
jge
sbb
in
dec
lret
test
xor
push
adc
aaa
sahf
and
ret
ljmp
inc
lcall
sahf
xor
out
cmp
push
mov
insb
stos
je
add
popa
xlat
lea
test
lcall
sbb
lock
orl
adc
jmp
dec
adc
les
mov
pop
test
mov
sti
scas
cmc
fisubl
pop
iret
out
pop
mov
dec
cmp
bound
mov
push
add
test
mov
pop
in
jmp
lcall
fsubl
sbb
repz
lcall
daa
mov
leave
push
inc
insb
ficoml
xchg
out
iret
add
jns
cmpsl
lcall
test
lcall
not
adc
lock
out
add
loope
pop
lcall
in
or
das
or
cmp
leave
lcall
orl
cmp
stos
es
push
pop
lcall
sub
lcall
in
lcall
ds
rorl
movsl
push
pop
lods
mov
jl
push
out
into
hlt
adc
lcall
imul
push
mov
lcall
dec
sub
sarb
out
cmpsl
stos
lcall
dec
mov
test
ds
xchg
adc
sbb
lock
push
pop
sbb
pop
cmpsb
fbld
jp
jno
mov
jge
nop
or
mov
inc
adc
loop
xor
add
sub
xchg
jecxz
sub
dec
xchg
lcall
push
lcall
or
lds
lcall
stc
shrl
lock
out
xor
test
xor
mov
pop
mov
xchg
dec
shlb
jnp
xchg
mov
test
lcall
pmovmskb
add
ficompl
ret
xor
rolb
shlb
cwtl
mov
lahf
or
pop
push
jp
ret
sub
adc
adc
jecxz
mov
int3
lcall
jne
lcall
xor
and
adc
pop
xchg
mov
test
lcall
shll
push
pop
into
leave
pop
ficompl
out
outsb
lret
mov
imulb
cmp
or
mov
movsb
hlt
pop
in
lcall
jbe
mov
mov
insl
lcall
push
lcall
arpl
xlat
dec
andb
mov
pop
sbb
mov
cmpl
add
stc
popf
stos
clc
daa
popa
lcall
inc
adc
nopl
test
data16
lcall
imul
cmp
push
fwait
jmp
mov
movsb
leave
xchg
jnp
dec
jmp
mov
jle
fldl
iret
out
rol
and
sub
sbb
addr16
lods
jns
pop
add
sti
sub
sbb
and
andl
jle
jno
cli
int3
lcall
sbb
jg
adc
sbb
or
mov
mov
or
loopne
sbb
jbe
mov
mov
lcall
js
adc
add
gs
cmp
mov
pop
mov
inc
mov
sbb
pop
pushf
lcall
cmp
xchg
rclb
leave
push
sub
aam
lcall
rcl
mov
dec
cltd
lcall
out
mov
inc
push
pop
lcall
add
lcall
jo
lcall
fsubrs
lcall
pushf
hlt
lcall
or
lcall
test
insb
mov
lcall
dec
inc
lcall
arpl
jo
inc
aas
pop
stos
mov
fcoms
adc
aaa
push
inc
repnz
in
out
lcall
adc
sbb
xor
push
mov
std
mov
insb
je
decl
or
test
lcall
inc
hlt
push
repz
daa
jle
out
call
mov
lcall
cmpsb
xchg
lcall
gs
lcall
push
jae
sub
mov
push
lcall
stos
int
pop
and
lcall
mov
fdivp
mov
les
in
inc
mov
pop
add
addr16
lcall
push
out
call
pop
push
dec
sbb
es
xor
cwtl
sub
in
ljmp
popa
fnclex
push
lcall
out
adc
lds
adc
and
dec
outsb
lcall
sbb
scas
cmpsb
pushf
pop
mov
adc
xor
mov
loope
pop
mov
xor
gs
iret
lcall
push
int3
lcall
mov
lcall
pop
xchg
mov
xchg
push
xchg
insl
mov
and
mov
cmp
cli
stos
sti
mov
pushf
adc
and
ret
lcall
pop
loope
fistpll
shrl
mov
xchg
lcall
cmp
pop
push
pop
loop
jb
xchg
mov
stos
xchg
cmp
jne
icebp
pushf
fcompl
lock
lcall
pop
push
imul
out
cmp
lock
inc
jg
sbb
lcall
cs
pop
mov
add
pop
and
push
push
and
lcall
lcall
fwait
sbbb
xchg
shl
loopne
lcall
push
bound
jne
lcall
mov
sbb
jo
and
lods
add
repnz
int
inc
cs
mov
xor
repnz
mov
xchg
or
cmpsl
or
call
into
xchg
sbb
std
mov
fucom
pop
pushl
sbb
pop
and
stos
lcall
xor
aam
pop
lcall
sbb
subb
xchg
scas
out
jns
cld
mov
pop
xchg
adc
pmullw
call
sti
imul
jne
sub
or
adc
jl
lret
test
or
daa
loope
stos
lcall
add
loope
xchg
dec
jae
push
jno
and
mov
xchg
cmp
popa
outsl
rsm
mov
mov
fwait
mov
jg
sbb
xor
dec
mov
mov
pop
das
rclb
or
xchg
and
iret
push
lret
insl
push
sub
cs
imul
sbb
push
xchg
jae
stos
pop
rol
movsb
inc
lcall
jl
sbb
lcall
into
push
sbb
push
cmp
mov
sub
or
loopne
xchg
adc
lcall
lcall
repnz
shrl
sub
cmp
push
lcall
pop
and
aas
mov
rcrb
sbb
lahf
outsb
cmpsb
in
xor
dec
mov
push
sbb
leave
les
shlb
jb
mov
pop
mov
xchg
pop
insl
mov
cmp
lcall
inc
sarl
ficompl
fs
dec
xchg
lcall
fsubp
lcall
lods
lcall
pusha
lcall
mov
lcall
les
or
inc
lcall
pushf
or
sub
shl
out
in
pop
lcall
mov
jl
xchg
pandn
xor
bnd
lds
inc
or
inc
stos
pushf
ljmp
mov
lea
mov
fsubl
xlat
mov
dec
jnp
push
push
xorb
test
jns
mov
loope
jae
sbb
pop
lods
fimull
insl
lcall
mov
pop
dec
and
cmc
xchg
pop
lcall
out
negl
xor
mov
push
mov
cmp
in
jmp
and
pop
ret
xor
pusha
push
ja
repz
xchg
xor
push
mov
or
inc
push
mov
fdivl
xchg
in
bound
mov
cmpsb
arpl
sbb
fcmovne
shr
pop
mov
into
lcall
sub
rcll
scas
insl
fistl
or
mov
lcall
aas
push
lcall
or
fdivrl
ficompl
sbb
cmp
clc
dec
pop
pop
mov
mov
xor
xlat
sub
lcall
gs
lock
jge
into
pop
les
ja
lret
stc
mov
cmp
negl
bound
adc
dec
mov
dec
mov
pushf
ret
dec
pop
cmp
xchg
mov
loopne
cmc
fisubrs
sub
mov
lcall
dec
sbb
cmp
adc
jge
std
lret
lcall
push
cmp
es
out
lcall
and
lcall
adc
jne
mov
jmp
bound
fstps
sti
pop
sarl
cs
addr16
and
in
cwtl
fisubs
adc
stc
lock
inc
lcall
cli
dec
rclb
mov
fs
inc
sbb
jnp
ss
std
lods
popf
inc
lcall
int
sbb
jmp
ret
mov
pop
lcall
dec
mov
pop
cwtl
xchg
rorb
fdivrl
lcall
lcall
jecxz
lcall
lods
stos
mov
out
jb
fnstsw
pop
popf
lcall
xor
lcall
or
sbb
shlb
xchg
pop
scas
jo
sbb
xorb
scas
lret
out
pusha
xor
aam
test
jmp
mov
mov
lcall
dec
leave
popa
cld
lcall
adc
sbb
add
outsb
mov
test
mov
adc
xchg
mov
stos
and
mov
fwait
in
popf
xor
or
bound
cmp
lcall
lcall
enter
shlb
push
lcall
std
cs
mov
mov
movsb
fidivs
pop
dec
cmpsb
push
lcall
repnz
lcall
jns
adc
lods
dec
sbb
lcall
jns
leave
sub
cmpsb
scas
rclb
cmp
push
out
mov
loopne
lcall
adc
mov
push
in
jp
add
loop
data16
lcall
lcall
sub
lcall
lcall
jp
add
js
xchg
cmp
inc
imul
hlt
ret
rcrl
sbbb
aad
sahf
jnp
pop
into
cmc
into
loope
sub
sbb
bnd
xor
incb
lcall
add
sbb
ret
cmp
cmc
jae
mov
inc
jns
jp
or
pop
daa
push
lcall
lcall
push
push
std
push
notb
lods
dec
fs
xor
cmp
add
push
loope
repz
cmc
adc
jge
jp
leave
xchg
inc
or
push
mov
cmp
les
mov
incb
movsl
dec
xchg
aaa
fimull
lahf
ficompl
sub
dec
lcall
mov
loopne
stos
stc
outsl
and
adc
xchg
push
pop
arpl
mov
inc
xor
aas
in
pop
rcrb
xor
nop
lea
incb
ffreep
sti
movsl
mov
cmpsl
xlat
or
mov
add
ds
frstor
sbb
dec
mov
or
mov
sbb
add
movsl
ret
lcall
sub
cmc
jecxz
out
pop
xor
out
pop
sbb
das
cmp
cmp
push
lcall
adc
mov
movsb
jmp
lcall
fldenv
lock
addr16
jp
push
mov
inc
mov
pop
lcall
outsl
loop
dec
add
in
lahf
cmpsl
gs
rcrl
dec
inc
rorb
sub
fcmovbe
pop
inc
and
or
ljmp
sbb
pop
xchg
pushf
jmp
lcall
jno
lcall
adc
dec
inc
cmp
lcall
inc
clc
nop
fmuls
lds
out
lcall
xchg
sti
sbb
lcall
pop
lcall
sbb
out
and
lcall
mov
mov
lods
xor
neg
movsb
fldcw
add
cmp
pop
lahf
jne
mov
add
test
lcall
lods
stos
lcall
ret
mov
dec
mov
sbb
ja
ret
or
mov
adc
jl
jno
or
enter
adc
lret
mov
push
push
inc
mov
loop
mov
pushf
jo
lcall
mov
insb
bound
fldenv
divb
sahf
jp
lcall
push
lock
sbb
lcall
lret
mov
rclb
jns
mov
roll
cli
sub
in
xor
in
psubw
pop
fdivrp
inc
scas
mov
fcmovbe
pop
xor
mov
scas
push
sub
jo
push
insb
rcrb
adc
mov
int3
add
lods
push
insl
sbb
aaa
lcall
pop
mov
jle
xor
and
neg
or
xchg
stc
xchg
aad
shr
lcall
dec
outsb
sbb
mov
adc
out
ja
fistpl
bound
test
test
jl
stos
pop
cld
jnp
incb
jg
mov
or
fidivrs
sbb
in
push
add
cmpb
and
add
pop
mov
mov
mov
cwtl
add
pop
lcall
mov
sbb
mov
dec
out
xchg
inc
sbb
push
cmpl
enter
ljmp
lahf
outsl
aam
scas
adc
pop
add
lcall
jbe
popa
mov
fwait
das
orl
lcall
dec
mov
pop
mov
lcall
or
inc
shl
ja
lods
scas
sub
call
icebp
int3
lock
adc
lcall
fidivs
repnz
push
and
lcall
test
pusha
mov
or
inc
sti
lcall
mov
mov
lock
sub
lcall
inc
aad
fadds
leave
aas
jns
pop
into
jle
jp
sub
fdivl
lcall
adc
cmpsb
mov
ljmp
push
inc
mov
push
clc
jns
rcll
sbb
cltd
pushf
inc
ljmp
fs
inc
shlb
stos
lahf
test
out
xchg
in
jmp
lcall
and
or
daa
lcall
jmp
xchg
loop
and
std
lret
push
test
in
movsl
xchg
nop
scas
lcall
pushfw
or
test
jp
mov
mov
fsubrs
sbb
and
sbb
les
cmp
lcall
push
mov
pop
out
xchg
adc
mov
or
pop
dec
in
push
addb
lcall
sbb
cs
repz
decb
dec
je
and
cli
fidivrs
jg
cmc
push
pop
pop
shll
mov
cmp
mov
scas
dec
push
arpl
xchg
pop
push
sub
dec
ss
and
mov
sbb
push
stos
aad
lcall
sbb
out
cmp
lea
jns
xchg
icebp
fsubrs
add
filds
mov
shlb
xlat
inc
dec
shl
out
adc
sub
ss
mov
fistpl
sbb
lcall
lcall
mov
dec
mov
dec
pop
lcall
clc
aas
lcall
mov
xor
fidivrl
scas
push
out
jo
in
ss
or
mov
push
setp
outsb
shrl
jle
or
incb
mov
adc
jp
mov
ss
cmp
jbe
cmp
hlt
outsb
daa
adc
lcall
sbb
or
xchg
mov
jge
lcall
arpl
pop
dec
lcall
jno
lcall
outsl
lcall
inc
mov
add
or
popf
inc
popa
jne
lcall
bound
rolb
cld
jge
fcmove
pop
shlb
loop
mov
cmc
and
dec
adc
sbb
sar
inc
test
push
icebp
or
dec
out
fists
dec
cmp
jo
lods
cmc
sub
int3
test
out
clc
shl
jge
psubusw
lret
sahf
lcall
add
push
cmp
lcall
push
mov
mov
testb
rcrb
jb
jle
int
sbb
insb
pop
sahf
imul
mov
xor
xor
repnz
aas
mov
fdiv
outsl
stos
sbb
ds
nop
push
lcall
fadds
lcall
push
lcallw
push
mov
out
lcall
dec
pushf
lcall
loope
lcall
stc
dec
jp
lahf
lcall
pop
cmpsl
jle
mov
fs
mov
hlt
cmp
jl
mov
add
mov
add
movsb
lcall
sub
pusha
out
mov
mov
sbb
loop
or
mov
or
push
mov
cmp
sbb
repz
dec
mov
lcall
or
or
scas
iret
cltd
jae
and
cmp
adc
insb
mov
mov
xor
pop
or
ficomps
int3
sbb
adc
xchg
mov
xchg
lahf
add
fimull
mov
xor
xor
pop
mov
mov
sti
sbb
mov
jp
xlat
sarb
pop
xorb
lcall
pop
jbe
in
aad
xchg
arpl
cmpsb
lcall
lahf
mov
adcl
lcall
leave
push
xchg
sub
testb
mov
in
xor
mov
sub
and
repnz
mul
mov
sbb
pop
xchg
jp
push
mov
cs
ljmp
and
fidivs
cmp
lret
pop
or
lea
sbb
push
push
jle
movsl
ficompl
dec
dec
not
jl
push
fisubrl
sub
out
or
inc
mov
pop
in
xchg
ljmp
lcall
adc
mov
push
adc
and
in
xchg
lcall
lea
lcall
movb
pop
leave
je
pop
cmp
dec
ficompl
push
inc
or
ret
lods
sbb
mov
lcall
dec
fsubrl
shll
pushf
lock
ret
jb
xchg
out
repnz
xchg
or
push
mov
xchg
or
jp
fs
or
sub
pop
lcall
mov
cmc
mov
mov
fnsave
and
xchg
lcall
sbb
jo
sahf
sarb
pop
into
xchg
rorl
incl
sub
and
mov
xchg
jl
stos
fcmovbe
fistpl
ja
in
add
or
lcall
outsl
adc
ss
and
js
popa
cmp
scas
fidivrl
sub
test
aas
lcall
add
push
ret
lahf
movsl
jl
push
dec
pop
mov
sbb
dec
push
xor
inc
out
pop
dec
pop
adc
aad
testl
mov
cmp
daa
mov
gs
cmp
lcall
insl
out
je
mov
lea
xchg
bound
sbbb
imul
pop
jns
add
clc
stc
xchg
jno
lcall
xchg
lcall
inc
pop
lahf
mov
iret
aas
fiaddl
add
xchg
sub
xchg
jmp
adc
scas
fsub
or
lods
bound
inc
fnstcw
and
pop
push
hlt
aad
lcall
adc
stc
outsb
int3
mov
inc
sub
mov
insb
sbb
mov
pop
inc
jnp
push
xchg
cmp
mov
dec
in
xor
dec
xchg
or
lcall
nop
push
lcall
or
lcall
add
pop
mov
sub
adc
pop
jecxz
xchg
mov
mov
sub
sbb
int
push
mov
xchg
pop
fisubrl
xchg
add
popf
sbb
shlb
lds
inc
in
pop
nop
aam
pop
inc
lcall
pop
adc
imul
lods
lcall
cmp
xor
and
lcall
cmp
fcmovnbe
lcall
cmpsl
add
adc
or
adc
mov
les
cmp
lcall
dec
je
addb
pop
lods
popf
out
lcall
mov
sahf
inc
jl
sbb
dec
cld
sbb
pop
push
jecxz
pop
mov
lcall
sbb
lods
lods
sbb
fisttps
mov
ror
pop
das
ret
jle
sub
or
sti
aad
lcall
mov
mov
fisttpll
jns
les
lcall
xor
pop
mov
in
repz
lcall
pop
or
aaa
fildll
cmpsb
bound
out
mov
lcall
loopne
adc
ficoml
loope
mov
sti
std
and
js
jne
jmp
fiaddl
adc
arpl
mov
lcall
jecxz
lcall
rcrl
mov
outsb
mov
arpl
sahf
push
pop
add
add
mov
dec
aas
out
jge
mov
mov
pushf
lcall
or
inc
roll
dec
mov
jae
lcall
cmp
inc
push
outsl
dec
push
mov
insl
jp
or
sbb
lcall
ss
cmp
lcall
fsubl
dec
stos
aas
data16
mov
adcl
add
sub
lcall
and
xchg
aas
sbb
inc
push
out
ficompl
xchg
data16
int
shr
inc
push
aad
lcall
and
mov
lds
je
dec
xchg
lods
xlat
test
jo
push
mov
scas
orl
iret
sbb
adc
push
mov
xchg
add
inc
push
mov
lcall
sbb
sbb
out
xorl
mov
push
adc
mov
repnz
jp
pop
lcall
and
fisttpll
punpcklbw
cmc
mov
push
ficompl
incb
or
fstpl
jnp
lcall
fildll
cmpsl
mov
int3
rcrl
loopne
pusha
lcall
adc
dec
sub
lock
hlt
pop
cs
push
pop
xchg
lds
outsl
repnz
dec
mov
lahf
popa
sbb
pop
subb
mov
jp
jns
sbb
jo
in
ret
adc
filds
mov
lcall
ja
lcall
adc
lcall
imul
rorl
mov
mov
xchg
inc
iret
mov
cmp
sahf
push
lcall
or
pop
sbb
mov
xchg
std
dec
or
mov
lahf
pop
es
push
pop
fists
scas
pop
enter
sbb
cmp
mov
lcall
add
mov
jg
cmpsl
dec
mov
bound
add
pop
rcll
mov
and
ja
lcall
lods
fwait
sbb
dec
push
jl
mov
xchg
icebp
cmp
mulb
mov
lcall
jnp
lcall
test
sbb
in
xlat
fildl
loop
lcall
insb
negl
in
add
xchg
push
ss
xor
mov
pushf
lcall
mov
or
mov
fidivrl
shll
and
push
jae
int
xchg
call
lcall
aaa
xchg
test
or
pop
fadd
orb
lcall
sarl
pop
fcmove
pop
negl
movsb
aas
lcall
outsb
xor
aam
lcall
mov
arpl
push
scas
adc
shll
add
inc
jg
dec
dec
repnz
repz
lcall
or
lcall
or
cmpsb
mov
jl
cmc
lcall
xchg
ret
fs
int
cmp
orb
movsb
and
data16
push
xchg
lods
cmpsl
xchg
mov
aam
stos
aaa
or
push
fwait
cmpb
sbb
movsb
mov
dec
repnz
mov
fsubrl
and
jle
lcall
iret
cmpsb
lcall
mov
cs
aad
jns
lcall
rcrb
inc
xor
cmpl
cmc
and
jo
push
lea
lret
in
out
cmp
aaa
and
cmpsb
movsb
sbb
mov
mov
adc
sub
adc
pop
jbe
lcall
sti
lods
sbb
cmp
xchg
jmp
mov
sub
hlt
in
xchg
cmpsl
pop
sbb
or
insb
movsb
or
lock
lcall
lds
lahf
fiadds
xor
cmpl
mov
xor
mov
aad
mov
jmp
daa
roll
sahf
shlb
ret
and
int
mov
inc
push
fiaddl
imul
xchg
loop
dec
fstpt
xchg
cmpsb
cld
cmp
or
ficompl
mov
sbbl
lret
pop
pop
or
mov
cmp
sub
loop
lcall
cmp
pop
or
sahf
sbb
jp
outsb
movl
pop
inc
popf
daa
add
mov
cltd
lcall
pop
repnz
sar
ret
push
dec
ljmp
cmp
fmulp
xor
xor
orl
dec
lcall
xlat
ret
xchg
dec
push
jnp
cmpb
push
push
push
outsb
fs
sbb
nop
sbb
inc
fwait
lcall
pushf
repnz
xor
lcall
pop
xor
std
sahf
cmp
lcall
push
in
xchg
out
test
mov
jg
repnz
inc
ret
call
dec
repz
testb
push
and
mov
inc
lcall
addr16
xchg
stc
jle
add
lcall
pop
popa
lcall
es
ljmp
xchg
sar
sub
ljmp
inc
or
lcall
inc
adc
or
pop
add
dec
outsl
push
sbb
sbb
ret
mov
xchg
fisttpl
cmp
outsb
xor
mov
xor
insl
repnz
imul
jno
ret
jecxz
sub
lcall
push
jne
movsl
subb
lcall
adc
xchg
das
aam
shr
xchg
imul
mov
lcall
outsl
test
sbb
jo
bts
rcl
mov
lcall
movsb
cltd
out
sbb
lcall
imul
cwtl
mov
lods
fbstp
repnz
bswap
sub
mov
faddl
lock
mov
inc
inc
lahf
mov
add
dec
iret
scas
jne
fsubl
lcall
jge
sbb
clc
sahf
push
push
lcall
ss
lcall
loope
pop
inc
sbb
icebp
into
in
inc
cmp
pushf
mov
lcall
jnp
lcall
test
sbb
xchg
sub
in
xchg
fisubrl
dec
pop
pop
aaa
insb
testb
int
cmp
lcall
fisttpll
into
sub
xchg
push
outsb
lcall
stc
dec
out
stos
leave
fcompl
lods
add
push
lcall
stos
sbb
xor
cs
xchg
lret
or
push
repnz
lcall
sub
lcall
dec
nop
popl
fiaddl
les
popa
mov
ja
pop
subl
mov
mov
fidivrl
js
adc
int
or
push
push
lcall
adc
lcall
jno
lcall
pop
pop
lcall
subb
cmpsl
popf
mov
mov
in
lcall
out
popa
and
ds
push
sbb
aas
inc
push
lcall
push
mov
test
sub
aas
sbb
movsb
push
pop
add
dec
mov
das
lcall
outsl
or
xchg
inc
cmp
dec
mov
cmpsb
or
jns
pusha
lcall
xchg
xor
push
sbb
lods
dec
mov
ljmp
leave
in
or
loopne
shll
push
add
loope
lcall
pusha
jbe
xchg
cmp
loope
popa
add
lcall
lea
insl
push
mov
insb
mov
hlt
push
cmp
pop
xchg
mov
aad
and
fiadds
push
loop
cli
sbb
add
cmp
cwtl
pop
lea
ds
pop
lcall
dec
sub
jmp
push
pop
not
shlb
lcall
jbe
test
dec
inc
aam
sub
lcall
xchg
xchg
out
shll
push
js
add
xchg
xor
in
lock
dec
mov
inc
jnp
out
cmc
push
push
xchg
push
dec
jmp
lcall
fimull
sbb
out
pushf
adc
inc
mov
mov
xchg
cltd
push
movsb
out
mov
sysexit
adc
push
cmpsl
sub
inc
lcall
outsl
xor
xchg
stos
stc
mov
nop
je
push
sub
mov
push
or
push
sbb
loop
in
js
pusha
jnp
dec
lcall
mov
fadds
cmc
lcall
xor
adc
mov
xlat
mov
push
inc
sub
sub
push
pop
lcall
sbb
xchg
pusha
decl
mov
mov
dec
xor
frstor
movsb
cmc
sbb
lods
jb
loopne
lcall
rcrb
jmp
iret
adc
mov
add
jnp
and
push
pop
lcall
data16
push
inc
lcall
mov
lcall
adc
popa
mov
clc
sub
lods
outsb
cwtl
dec
ficompl
stos
out
cwtl
xor
pop
cmc
pop
ret
cmpsb
outsl
sub
mov
in
mov
jmp
dec
ja
lcall
adc
lcall
imul
sbb
fidivl
jbe
mov
mov
notb
mov
dec
popf
add
xor
jge
push
ret
sbb
repz
mov
mov
push
mov
push
fistpll
pop
pop
enter
inc
push
ret
mov
lcall
pop
add
ss
data16
push
xchg
bound
loopne
xor
lcall
lcall
sbb
xchg
mov
lock
jae
inc
mov
loope
mov
test
mov
mov
adc
mov
inc
std
pop
lahf
lods
test
mov
testb
xchg
mov
fsubrl
insb
sar
pop
lds
inc
mov
lcall
mov
xor
xor
adcb
pop
xchg
sub
lods
stos
cmpsb
pop
fimull
out
int
sbb
pop
xchg
into
mov
xchg
cmp
or
insl
push
rol
or
rcll
movsl
fidivl
lret
lret
jge
mov
or
lcall
or
jle
pop
fidivrl
mov
sar
pop
push
jg
pop
lcall
arpl
out
jp
popa
test
lcall
ret
lea
mov
lock
adc
adc
lcall
xchg
gs
lcall
lcall
cmc
mov
sub
data16
fistl
fisubrl
stos
sbb
and
fwait
pandn
mov
popf
push
dec
lea
repnz
fs
or
lcall
and
cmpsb
lcall
jns
cmpsl
jg
ret
rolb
inc
lcall
dec
stos
lcall
loopne
in
adc
sbb
and
cmpsb
test
rcll
fdivs
sub
rcrl
pop
dec
jbe
popf
pop
sti
loope
mov
cmc
jp
lea
jmp
add
stos
hlt
cmp
pop
lcall
jbe
into
test
sarl
addl
xor
ja
mov
push
lcall
inc
es
lock
jp
rcrl
or
lcall
jp
lcall
addl
sub
imul
sbbb
addr16
lcall
xor
adc
push
jl
insl
mov
push
lcall
clc
orl
imul
in
mov
les
mov
jbe
icebp
dec
dec
lcall
lcall
add
jp
ljmp
cltd
fidivrl
jg
repnz
sub
imul
rcrb
xor
cmc
sbb
add
dec
mov
xlat
add
in
mov
aaa
push
pop
popf
movb
sub
imul
xchg
dec
jle
stos
stos
push
fstpt
gs
pop
je
jge
out
imul
pusha
adc
popf
int3
cmp
pop
mov
pop
scas
and
mov
push
lcall
repz
inc
jle
xor
dec
mov
inc
fistpll
fisttpll
or
lcall
sarb
lcall
sahf
loop
pop
push
sbb
cmp
or
lods
shll
mov
jge
xor
pushf
push
lods
fcmovnbe
icebp
rcrb
in
xlat
arpl
lds
adc
inc
mov
mov
xchg
cmp
add
ja
mov
andl
imul
xchg
adc
push
jae
lcall
add
pop
dec
mov
rcrb
lods
pop
jge
push
ja
push
xor
mov
test
and
popa
sbb
push
cmc
ss
pop
mov
daa
jmp
mov
or
sbb
stos
mov
in
insl
mov
lcall
cld
sub
push
rorb
pop
stos
fiaddl
jno
mov
jo
lcall
movsb
inc
lcall
pop
add
data16
jo
fmull
cs
push
xchg
mov
ss
lcall
mov
mov
rorb
adc
jle
std
sbbl
lcall
or
lcall
jp
lcall
mov
bound
jb
imul
add
jmp
push
dec
mov
mov
je
adc
ss
lcall
paddq
lods
push
daa
mov
inc
outsb
int
es
pop
popa
gs
xchg
leave
lcall
lret
stos
lcall
das
add
push
jnp
lods
shr
test
add
aaa
popf
ficompl
lcall
fwait
dec
sbb
fisubl
cmp
mov
adcl
push
jp
fs
xchg
bound
or
adc
popf
dec
sbb
pop
jae
ljmp
jle
cmpb
adc
sub
cli
sahf
out
adc
jl
jge
add
test
jp
in
repz
mov
and
lcall
adc
sbb
xchg
jno
dec
aad
gs
lret
inc
push
push
fwait
dec
xchg
jge
pop
bound
mov
dec
add
cs
lcall
jle
lcall
iret
add
popf
xchg
mov
out
cmpb
jns
leave
push
jae
lcall
xor
mov
lcall
sbb
int3
out
xchg
push
in
dec
mov
loope
aaa
mov
lock
lcall
xchg
scas
lcall
pushf
das
xchg
cltd
loope
lret
mov
aas
cmp
jp
rolb
and
jmp
xchg
sub
lcall
pusha
aad
jg
adc
mov
daa
lcall
adc
cld
pop
and
lcall
add
lcall
icebp
inc
movsb
jge
shr
pop
and
fcmovb
enter
sbb
and
cmpsl
stos
mov
lcall
dec
rclb
loope
pop
jp
js
in
lret
sub
lcall
inc
imul
lret
cld
push
or
push
push
cmp
les
jmp
mov
lods
int3
fucomip
lcall
pop
out
lcall
repz
mov
sti
lcall
or
imul
out
mov
inc
lcall
xor
lods
add
es
shrl
cltd
mov
out
jle
lcall
or
lcall
xchg
fsts
sbb
call
mov
dec
mov
ficompl
addr16
lcall
cmp
jle
adc
pop
jp
or
mov
fstpl
mov
push
jbe
xchg
test
inc
mov
xor
ljmp
jge
fs
jg
pusha
cmp
inc
js
notb
lcall
je
sub
hlt
or
movsl
out
xchg
adc
pop
add
cmp
cmpsl
sbb
rol
xor
aas
adc
jl
inc
mov
popf
sub
ljmp
jbe
fistl
push
fstps
adc
xor
inc
lcall
push
adc
lcall
popa
std
lcall
outsb
loope
insl
push
mov
mov
popf
rorb
lcall
sbbl
mov
into
lods
jp
inc
ja
cmpsb
lcall
sahf
mov
imul
push
or
mov
xlat
pop
outsl
mov
cmp
cmpsl
push
stos
pop
adc
mov
mov
incb
lcall
mov
lcall
dec
pushf
lcall
cmp
lcall
and
lcall
cmp
sbb
adc
loop
pop
lahf
pop
pop
inc
popf
mov
lcall
pop
bound
hlt
pushf
mov
mov
rcrl
xor
pop
scas
lcall
cmp
sbb
adc
mov
add
in
dec
sub
jnp
lcall
test
std
mov
xchg
in
jge
cld
setl
sahf
fdivp
flds
test
sub
add
in
cwtl
in
sar
ss
sub
lahf
das
mov
xchg
rep
stos
imul
test
fisubl
add
lcall
push
int
addr16
cmp
xor
push
adc
lcall
inc
push
pop
inc
cmp
pop
mov
lcall
ret
mov
ror
cmc
lcall
mov
jl
je
mov
pop
lcall
jge
lcall
xor
pop
xchg
mov
repnz
lcall
xchg
pusha
adc
lret
add
fdiv
jp
pop
push
daa
data16
lcall
or
jns
je
out
lcall
hlt
jmp
leave
jbe
aad
xchg
mov
add
or
fcmove
fwait
mov
test
pop
dec
lcall
in
das
lcall
orb
xor
and
fwait
dec
fisubrl
lcall
push
jae
jecxz
mov
xor
ss
inc
or
mov
sbb
call
pushf
mov
in
sbb
es
add
fnsave
sub
jnp
loopne
mov
jbe
popa
outsb
push
loope
pop
mov
lcall
in
pop
mov
mov
sbb
dec
jp
push
mov
aas
pop
call
fidivl
sbb
cmp
xor
adc
ds
fcmove
leave
das
mov
xchg
adc
frstor
lcall
push
lcall
mov
lcall
repnz
dec
xchg
lea
lcall
jecxz
lcall
inc
or
sbb
lea
lretw
cltd
add
ficompl
sbb
mov
pop
repz
lea
out
lcall
lret
fcomps
sbb
icebp
scas
call
xchg
repnz
mov
sbb
lcall
xchg
popa
sbb
cli
sub
sub
lcall
inc
xlat
sbb
mov
dec
cmp
dec
jp
mov
add
ret
sbb
sbbl
icebp
fwait
pop
dec
sahf
ja
pop
xchg
popf
xchg
cmpsb
dec
lea
cmc
xchg
lcall
cs
mov
push
into
sub
cmc
mov
pop
and
and
xchg
jae
ret
xchg
out
jp
repz
das
sbb
inc
jp
mov
inc
mov
fstpl
cld
adc
lcall
ss
cmpsl
pop
add
rcrb
jmp
ja
rcll
lcall
ljmp
popf
icebp
fdivrs
in
inc
jle
or
mov
outsl
push
lcall
dec
sub
stos
cmp
popa
xchg
stos
push
clc
cwtl
pop
insb
pop
outsb
inc
test
mov
lcall
sbb
mov
inc
mov
jg
inc
dec
lahf
lods
lcall
or
pop
iret
fwait
adc
loop
test
sub
mov
ret
pop
jg
mov
or
lcall
in
push
stos
lea
jnp
mov
lcall
xchg
or
cmp
adc
pop
test
sub
scas
jg
or
imul
out
jecxz
cltd
mov
jge
add
loop
lcall
xchg
add
jnp
fsub
mov
jge
nop
lret
lcall
jle
and
fidivs
fsubrs
cmpsb
stc
inc
lcall
inc
dec
lcall
dec
cli
sbb
push
movsb
add
mov
rcrb
add
sub
mov
dec
in
xchg
sbb
sbb
push
out
cmp
out
jle
add
mov
cwtl
addr16
cltd
push
dec
popf
outsb
fldcw
rcll
imul
mov
outsl
loope
add
sub
push
pop
jb
jns
int
popf
add
bound
loope
xchg
jl
mov
lahf
add
lcall
push
test
mov
mov
pop
pop
add
and
jge
scas
fcmove
cmp
pop
jns
pop
test
scas
mov
fbld
push
jg
lcall
call
push
sub
arpl
cwtl
jo
jb
xor
mov
sbb
jl
loope
lcall
loope
lcall
pop
mov
test
lcall
loop
lcall
mov
lcall
xchg
mov
push
sub
cmpsb
lcall
push
out
dec
imul
das
lcall
or
pop
pop
lcall
inc
rcll
mov
repnz
jns
sbb
cmc
jae
push
shrb
xchg
jge
add
pusha
pop
and
ficoml
or
daa
adc
loop
shrb
pop
xchg
push
rol
inc
mov
repnz
dec
sbbb
dec
loopne
cmpsb
popa
jbe
lcall
jge
lcall
in
es
jb
sbb
and
loope
mov
and
into
sbb
add
sbb
dec
xor
call
repz
inc
sarl
in
xor
andb
cltd
sahf
rcrl
jmp
sti
pushf
lcall
sarb
inc
jle
negb
mov
push
fwait
cmp
roll
mov
pusha
jbe
push
or
push
mov
je
and
jb
bextr
insb
mov
cmp
lcall
pop
movsl
lcall
push
sahf
pop
mov
insb
sub
lcall
inc
sbb
xlat
dec
lcall
jmp
lcall
notb
rcrb
inc
addb
lods
xor
xchg
lcall
ret
loope
lcall
xlat
lcall
data16
incl
sbb
lcall
and
jg
hlt
call
rcl
cmc
push
scas
inc
pop
movsb
adc
in
cmp
cmp
or
mov
lcall
addr16
lcall
pop
and
sahf
lcall
jno
cld
adc
push
insb
ljmp
negb
ret
mov
sarl
xchg
test
shlb
jnp
ljmp
cs
jle
lcall
adc
in
and
pop
add
adc
or
or
mov
mov
bnd
dec
pop
xchg
lcall
cs
icebp
fsubrs
dec
lcall
fsubl
dec
xchg
ret
jo
sarb
gs
cmp
mov
inc
lcall
addb
xlat
out
lcall
lcall
jno
cld
push
lock
or
mov
fstpt
mov
jmp
add
mov
mov
mov
or
decl
imul
and
pop
mov
fwait
adc
rorl
inc
xchg
sub
mov
xchg
xchg
or
xor
outsb
add
dec
int3
sbb
jge
sarb
jnp
cmp
mov
repnz
push
xchg
pop
aam
stc
jns
fwait
lock
adc
lcall
mov
sbb
decb
jb
mov
std
sti
dec
push
test
pop
leave
sub
lcall
lahf
fisubs
or
cmpb
data16
add
and
repnz
loope
testb
mov
fists
movsl
lcall
popf
pop
ficomps
test
sub
out
lcall
push
leave
cmp
pushf
or
fimull
inc
push
dec
stos
sbb
shrl
pop
shlb
repnz
pop
mov
subl
aam
xchg
add
cltd
lcall
lcall
sahf
jo
jg
lods
fists
adc
call
push
mov
pop
test
arpl
loop
xorb
fcoms
fisubrl
adc
jl
dec
add
clc
scas
popf
xor
lret
cmp
inc
cmpsl
xor
sbb
mov
mov
aad
xchg
mov
shrb
cmpsb
leave
pop
stos
pop
sub
push
pop
stc
push
sbb
movsb
jno
dec
fisttps
dec
das
sbb
jp
enter
sbb
iret
fnstsw
and
nop
aam
cs
ret
enter
jecxz
rorb
inc
lcall
imul
int3
mov
lcall
aaa
and
push
mov
shlb
sti
pop
lods
lcall
negb
adc
xchg
test
stos
rcrb
jp
cltd
mov
ds
sub
lods
dec
push
pop
sbb
loope
aas
push
lcall
sbb
lcall
xor
sbb
add
bound
xor
and
inc
xchg
fdivr
rcrl
int
lcall
xchg
mov
and
icebp
inc
inc
push
lcall
sbb
xlat
cmp
scas
inc
mov
lcall
mov
cmpsl
pop
lcall
in
mov
daa
mov
cmp
push
and
mov
sbb
fisubl
sbbb
stc
and
xor
mov
js
pop
lcall
cltd
ficomps
inc
jl
rcrb
sbb
popa
inc
or
in
jmp
sub
lea
jbe
lcall
aas
lcall
shrl
std
dec
sub
sbb
and
pop
imul
insl
es
mov
sbb
mov
std
dec
mov
inc
and
aaa
add
mov
adc
push
cmp
push
lcall
jg
mov
test
mov
jno
mov
das
mov
fwait
pusha
bound
icebp
cltd
sbb
sub
mov
aam
and
mov
mov
push
jnp
lcall
xor
mov
lcall
inc
mov
sub
mov
test
in
fimull
or
rorl
outsl
push
test
cwtl
mov
mov
lcall
clc
lea
cmp
pop
xchg
xor
lcall
ret
mov
sbb
mov
lods
and
or
out
lcall
test
aaa
xor
movsl
fwait
ss
aad
mov
cmp
imul
cli
popa
clc
stos
ljmp
lcall
lcall
ljmp
adc
inc
mov
push
pop
fucomip
ret
test
stc
mov
sub
aaa
frndint
inc
loop
and
add
mov
lcall
pushl
xchg
dec
jge
lcall
mov
lcall
aad
in
xor
lcall
dec
icebp
adc
dec
pop
lret
fwait
shll
sarb
ds
std
mov
dec
shll
pop
sbb
in
jno,pt
xor
mov
sbb
mov
sbb
scas
mov
loope
push
sbb
mov
and
adc
adc
popl
lods
incl
and
adcl
lcall
xor
and
stc
shll
rolb
lret
lcall
jecxz
sbb
xor
fisubrl
loop
stc
lcall
or
aam
jns
cmp
push
lcall
cld
mov
xor
fstl
jmp
jge
call
xor
icebp
ss
stos
stos
jne
or
mulb
xor
adc
cmp
xor
sbb
popf
fidivrs
xor
leave
aas
out
mov
les
fidivl
test
adc
add
pop
xchg
dec
lcall
stos
cwtl
lcall
fwait
or
or
orl
loop
hlt
sbb
dec
mov
sub
iretw
cld
mov
rcrb
sbbl
mov
lcall
mov
add
fbstp
mov
cltd
test
in
je
push
repz
jecxz
dec
cmpsb
jbe
xchg
lcall
ja
lcall
adc
lcall
imul
jp
out
jmp
je
rorl
pop
xor
sbb
dec
mov
cltd
inc
ljmp
pop
mov
lcall
setp
xor
mov
ds
push
leave
rcl
pop
lcall
adc
lcall
aad
pop
xor
ljmp
lcall
sarl
cli
add
cmpsb
lcall
aaa
sub
push
adc
cld
sbb
push
cmpsb
cmp
jne
xchg
mov
fildl
repz
cmp
mov
push
pop
xchg
lcall
cmp
sahf
int
add
lcall
fcomps
lret
daa
push
pop
stc
adc
jns
push
xchg
call
mov
lcall
or
xor
add
push
ret
pop
ja
mov
je
lcall
dec
mov
stc
jns
push
scas
sahf
pop
sub
popf
loope
fisubl
sbb
lcall
or
mov
cli
jmp
and
pop
xchg
push
test
xchg
lcall
jecxz
pop
fcoml
jne
test
lcall
jmp
and
xchg
repz
xchg
xchg
or
sti
js
push
sahf
lcall
inc
inc
lcall
cmpsl
adc
std
add
js
lahf
xchg
lcall
shrb
test
rcl
sbb
jle
sbb
pushf
sub
lcall
pop
push
lcall
or
lcall
outsl
idiv
in
int
ss
dec
lock
lcall
out
lcall
fisubrs
lcall
fmul
pop
jo
iret
and
or
xchg
fisttps
lcall
ja
out
rcll
pop
sahf
jbe
mov
scas
test
mov
adc
adc
test
add
lcall
push
std
sbb
mov
sar
into
adc
jne
or
or
xchg
sbb
pop
enter
incb
in
das
jp
mov
outsb
loop
lcall
xchg
scas
mov
mov
and
stos
lcall
dec
std
sbb
xlat
cmp
jnp
shlb
pop
stos
lcall
imul
lock
inc
aad
mov
mov
mov
fimuls
lcall
std
dec
sbb
push
test
pop
cmp
in
lret
sahf
mov
jno
insb
fcmovnbe
jmp
and
sbb
cwtl
lcall
fnop
lcall
mov
pop
xor
jecxz
das
sahf
add
lods
test
test
ds
mov
stc
test
or
aam
lcall
nop
lods
lcall
ds
push
negl
aam
cmc
sub
cmp
and
out
lret
pop
addr16
scas
daa
inc
push
lcall
js
adc
sub
mov
aad
pop
test
xchg
lcall
mov
ret
adc
mov
int3
mov
daa
pop
push
out
inc
aas
mov
out
repz
rcrl
cs
lcall
push
xchg
lcall
sub
push
negb
xor
enter
cmp
xchg
jle
loop
lcall
mov
cs
lcall
add
testl
int3
inc
mov
in
and
rcrl
mov
stos
divl
sub
loopne
ret
jbe
aaa
pop
loope
cmpsl
lcall
xor
js
add
sbbl
cmp
hlt
roll
add
push
dec
aas
pop
das
repz
imul
lahf
mov
cli
jae
mov
scas
add
leave
or
lcall
outsb
push
sbb
dec
call
arpl
pushf
aad
xchg
test
lea
inc
pop
nop
add
inc
lcall
xor
mov
mov
pop
push
sub
xchg
or
mov
mov
js
cmpsl
cmp
or
sub
cmp
les
lods
cmpsl
movsl
sbb
wrmsr
pop
sahf
xor
mov
lcall
stos
add
dec
das
inc
insb
lcall
scas
push
lcall
mov
lcall
pop
push
fucomip
or
std
lcall
add
adc
sbb
sub
dec
sbb
popa
lcall
cld
jno
addl
in
cltd
add
mov
icebp
loopne
xchg
adc
sub
cmc
mov
pop
pop
aaa
shlb
lcall
xchg
sbb
mov
lret
test
adc
pop
mov
push
pop
xor
ret
fisubl
gs
lcall
in
lcall
xchg
std
test
jne
sti
push
sub
es
sub
cmpsl
push
push
xchg
movsl
inc
lcall
lods
and
shrl
lcall
pop
lret
loope
xchg
loop
in
sub
sbb
mov
lcall
fdivp
movq
mov
lcall
clc
mov
lods
mov
pop
lcall
xor
lret
mov
cli
cmpsb
sbb
mov
iret
xchg
lods
adc
or
outsb
fisubs
xlat
scas
cwtl
out
jge
adc
lcall
lcall
pop
ss
mov
stc
push
cmp
lcall
jae
xchg
stos
pop
sbb
mov
and
lods
sbb
movsb
popa
lcall
shrb
lcall
ljmp
xchg
andb
ljmp
jns
mov
xchg
add
cmp
jp
paddusb
mov
jge
jle
sahf
pop
pop
xchg
cwtl
mov
adc
lcall
xrelease
into
icebp
subb
dec
cmp
mov
dec
lcall
xlat
std
lcall
or
lcall
popa
setae
xchg
jae
mov
inc
lcall
in
repz
imul
jne
fstps
xor
xchg
mov
outsl
mov
adc
mov
cmp
lcall
je
lcall
rolb
xor
loopne
xchg
lcall
mov
sbb
lds
scas
mov
pop
cmpsb
dec
ficoml
lcall
inc
push
lcall
flds
pop
xor
lahf
lcall
xchg
stc
lcall
pushf
test
dec
call
cli
test
arpl
mov
sub
shll
fwait
xor
jne
dec
mov
fistpll
std
add
jae
loopne
fistpll
inc
lret
lcall
sbb
xchg
inc
lcall
setno
lcall
lcall
fwait
gs
movsb
daa
mov
roll
lcall
or
lcall
and
lcall
aaa
pop
lcall
inc
sub
rol
dec
shll
test
loop
jle
shll
mov
call
divl
in
icebp
push
sti
and
mov
inc
fisubrs
in
jns
loopne
push
pcmpeqd
pop
fwait
int
bound
lcall
test
aam
sub
pop
lcall
aad
pop
adcl
and
lcall
leave
sbbb
arpl
mov
loop
push
out
jo
sbb
jge
mov
inc
insb
cli
mov
les
divb
lea
pushf
mov
sbb
or
inc
fdivrs
pushl
mov
mov
icebp
jne
cmp
dec
int3
push
push
sbb
xchg
or
push
lcall
mov
lcall
rolb
push
lcall
out
in
into
sahf
xchg
fdivs
mov
mov
mov
stos
mov
dec
bound
dec
pop
adc
movsb
adc
lcall
dec
mov
inc
fimull
in
imul
inc
lcall
fistl
adc
fisubrl
dec
xchg
enter
cmpsb
and
sti
mov
add
jle
loop
test
mov
sbb
cli
cli
mov
push
jp
push
fs
or
lcall
lcall
jg
lcall
push
lcall
xchg
pop
lcall
jl
adc
lcall
xchg
repz
push
scas
or
mov
lcall
fwait
addr16
push
add
xchg
push
cmpsl
fiaddl
pop
fstp
in
insl
mov
lea
roll
ror
lcall
imul
and
negb
or
mov
lds
div
mov
dec
leave
inc
jp
dec
adc
clc
std
jecxz
outsb
mov
lcall
lcall
push
movsb
lcall
in
sbb
in
add
lods
lcall
or
sbb
push
adc
jp
testl
push
insb
ljmp
add
cmpb
jp
add
stc
jae
cmp
jbe
aam
fs
inc
jb
dec
sbb
mov
lods
lcall
sub
mov
jecxz
arpl
sbb
andnps
mov
and
mov
aam
int3
loop
dec
or
add
pop
fs
lret
ret
add
pop
bound
mov
popa
pop
fdivs
test
cmp
and
inc
movsb
mov
loope
lcall
inc
ficomps
cltd
icebp
sbb
repnz
lods
stos
icebp
mov
xchg
sub
cmpsl
insl
cmp
test
lcall
pandn
es
ret
add
mov
cmp
scas
pusha
nop
pop
jp
sub
cwtl
lret
lcall
fnstcw
cmpb
sbbl
fildl
jle
out
xchg
lcall
pop
movsb
lcall
xor
mov
xor
sub
sti
push
sbbl
sbb
mov
fcmovb
pop
jns
scas
shl
lret
icebp
pop
loope
or
fs
rcrb
jnp
sbbl
sub
scas
insb
scas
stc
cld
ds
adc
lret
aaa
fimull
lcall
ja
mov
lcall
pop
adc
fidivrl
pop
adc
imul
out
in
out
xchg
repz
lods
cli
pop
data16
xchg
mov
sbb
lcall
das
popa
lcall
cltd
and
movsb
icebp
pop
sub
mov
pop
jns
push
insb
inc
stos
or
xchg
iret
xlat
lret
fdivrl
mov
cs
mov
mov
aaa
out
rclb
lcall
dec
ljmp
int3
sbb
test
xchg
adc
in
out
sbb
aaa
and
mov
push
lcall
stos
sub
sbb
cld
scas
pushf
loope
push
leave
sti
lcall
mov
sbb
dec
ror
cwtl
rcrl
inc
pop
insb
jnp,pn
aad
pop
pushf
aas
and
xchg
jo
jns
mov
xor
xchg
xchg
sahf
or
xchg
add
aas
xchg
arpl
mov
rcrl
push
sub
scas
lods
nop
mov
inc
pop
aaa
jns
adcl
pop
lcall
in
sbb
push
mov
out
or
movsb
mov
adc
dec
sbb
sbb
adc
lcall
sub
lahf
dec
lcall
add
or
dec
icebp
enter
inc
xchg
cwtl
and
lcall
inc
cltd
xchg
fidivrl
repnz
push
lcall
xchg
sub
in
xchg
stc
and
sbb
dec
rorb
add
int
je
xchg
inc
xlat
ficompl
push
dec
or
push
sar
mov
sbb
in
das
pop
mov
sbb
mov
leave
cwtl
xchg
sub
cli
lcall
jo
lcall
pop
cmp
xchg
test
push
lcall
dec
pop
lcall
pop
and
imul
je
repz
divl
mov
adcl
pop
addr16
sub
adc
mov
ret
in
lcall
adc
lcall
xor
fisubrl
or
fistpl
lret
adc
lcall
dec
lds
sbb
pop
mov
dec
sub
out
cmpsl
popa
lcall
push
outsb
lcall
imul
xchg
pop
sbb
scas
or
hlt
and
gs
cmp
xor
ljmp
inc
sbb
pop
lcall
ret
lock
lret
scas
ss
mov
sub
adc
lcall
movsb
mov
insl
int3
cmp
mov
pop
cld
inc
sbb
pop
pop
xchg
xchg
xor
xchg
push
adc
mov
pop
sbb
fistps
out
pop
enter
sbb
leave
fdivs
jmp
loop
lods
or
dec
xchg
pop
pop
pop
mov
ss
lret
push
lcall
add
loopne
shll
iret
leave
dec
stc
pop
adc
sbb
mov
out
inc
arpl
sbb
mov
xor
movsb
cmpsb
jnp
fldl
test
jp
sub
or
inc
idiv
fisubs
pop
xchg
insb
rcrb
mov
lcall
sub
mov
push
sub
mov
adc
inc
adc
mov
mov
mov
jb
mov
int
mov
daa
fs
and
xor
pop
mov
jae
aas
or
das
lcall
lahf
in
lcall
pop
nop
lcall
imul
clc
lret
and
sahf
aam
out
in
mov
jecxz
inc
mov
icebp
lcall
mov
jnp
jg
aaa
mov
push
call
lcall
xor
push
push
test
push
clc
lcall
pop
xor
xor
add
add
sub
daa
jmp
lcall
out
das
lcall
dec
add
data16
xchg
and
imul
ss
lcall
mov
es
test
enter
into
mov
lcall
push
outsl
pop
and
mov
cs
pop
lea
rcrl
lcall
push
cltd
mov
orl
lret
sub
ret
stos
sbb
in
cmpsb
add
sbb
mov
lcall
loopne
lcall
loope
lcall
jp
sbb
sbb
jp
fwait
sub
hlt
popa
orb
aad
aam
aas
rcrb
push
sbb
lcall
xor
mov
mov
fidivrl
sbb
jae
leave
lods
ficoms
test
and
loope
xchg
xor
pushf
adc
push
lcall
fldcw
xor
xlat
inc
lcall
mov
popa
ss
mov
cld
mov
jmp
mov
lret
sbb
int
leave
mov
pop
pop
push
sbb
push
das
lcall
mov
lcall
xchg
sbb
filds
pushf
lcall
fadd
lcall
cmp
adc
push
int
cmp
mov
inc
mov
push
xor
xchg
adcl
loopne
lret
je
and
dec
adc
xchg
rcr
sbbl
cmp
lcall
adc
push
lcall
lcall
inc
cltd
lcall
lahf
dec
lcall
jle
test
aam
sbb
push
jg
jmp
lcall
jl
adc
repnz
fcomp
push
shrb
mov
xchg
fstp
push
lock
xchg
repnz
stos
les
pop
into
pop
rcrb
xchg
dec
xor
sub
lcall
fstpt
pop
fidivrl
lcall
pusha
loopne
sbb
xor
outsl
clc
stc
mov
inc
xchg
je
dec
mov
sbb
inc
clc
jb
insl
outsb
test
xor
std
mov
lcall
ljmp
inc
push
sbb
lds
push
xchg
lcall
ja
lcall
adc
sbb
aaa
add
leave
bound
and
pop
lret
or
fistpl
cmp
cmp
lcall
lcall
adc
outsb
call
xor
mov
and
lcall
or
enter
outsb
lcall
inc
cmc
adc
movsl
ljmp
adc
mov
pop
negl
jge
cld
out
pop
fldenv
jp
test
aad
push
sbb
lock
stos
sub
and
icebp
fisubl
mov
or
insb
jnp
test
inc
std
addr16
cmpsl
loop
pop
movsb
sub
shl
cmp
lcall
insb
lcall
dec
add
mov
cwtl
shl
push
mov
fsts
mov
xchg
or
repnz
sti
jecxz
fdivr
lcall
or
das
int
lret
pop
movsl
mov
xchg
scas
inc
lcall
add
push
or
sub
xchg
xor
push
sbb
shll
pop
ljmp
pop
movsb
jg
xchg
lret
into
or
repz
sar
sbb
lret
imul
lahf
cld
pop
rol
jg
mov
mov
es
jl
push
out
push
cmpsb
movsl
in
arpl
leave
jne
lcall
xchg
sahf
mov
dec
push
adc
mov
int
lcall
in
daa
loop
lcall
jno
lcall
stos
sti
lcall
cwtl
lods
unpckhps
fnstenv
mov
mov
sti
or
fwait
mov
mov
enter
movsb
xchg
jns
sbb
das
sub
scas
jle
or
mov
fsubr
ljmp
std
mov
js,pn
insl
jns
lcall
sar
lcall
subl
mov
or
int3
outsb
lcall
in
mov
pop
jp
es
jns
ret
pop
or
jno
mov
cmp
xchg
sahf
loopne
mov
pusha
xchg
loope
movsb
out
inc
arpl
xchg
js
push
lret
repnz
hlt
ficompl
push
pop
push
xchg
lods
sbb
cmp
aas
popa
ret
mov
xchg
lahf
mov
sbb
mov
lcall
lcall
xchg
mov
inc
rcr
shll
lcall
jg
lcall
in
lcall
xchg
stos
sub
lcall
insb
push
lcall
cmp
sbb
icebp
fnstcw
mov
cmpsl
mov
xor
or
stc
jp
cmc
sub
sub
pop
int
insb
mov
inc
ret
mulb
cmpsl
adc
pop
iret
cltd
movsl
repnz
enter
cld
fisubrl
popa
lcall
cmp
lcall
bound
mov
push
lcall
mov
lcall
cld
sub
in
or
push
jp
push
cmp
and
pop
or
adc
lcall
cmp
xchg
sub
and
jb
lcall
cmp
fcom
cmp
xor
aam
xchg
lret
pop
test
jns
xor
jmp
adc
or
ret
icebp
pusha
mov
ret
mov
and
lods
inc
sbb
adc
xor
xchg
add
jle
cmpsl
dec
sti
xchg
sub
cs
cmp
es
mov
lcall
popa
sub
cmpsl
jbe
pop
pop
pushf
lcall
aam
lcall
pop
pop
lcall
setns
popa
fyl2xp1
lcall
push
mulb
xor
mov
xchg
lcall
test
gs
mov
jl
lcall
or
incb
shl
jecxz
stos
adc
loopne
negl
or
push
ss
les
cmp
cli
mov
cmp
adc
cmpl
mov
das
adc
outsl
mov
xchg
cmp
and
dec
fisubl
adc
mov
in
cwtl
leave
pop
enter
xchg
xchg
fisttpl
push
cli
xchg
mov
add
ja
jo
or
xlat
fcompl
loope
mov
sbb
clc
aaa
push
or
fldt
int3
das
cmp
add
cmpsb
popa
mov
icebp
lcall
scas
mov
mov
adc
mov
xchg
ret
push
push
sbb
sub
pop
in
lods
xchg
setp
push
je
imul
inc
scas
mov
add
leave
push
jae
lcall
je
lcall
dec
mov
addb
out
jb
cmp
mov
pop
addw
xchg
mov
or
push
test
es
ret
and
aaa
pop
push
pop
test
pop
stos
std
call
inc
sub
subl
xchg
mov
leave
mov
lcall
ss
lcall
in
lcall
adc
sbb
pop
xor
mov
inc
push
fnsave
adc
pop
pop
lcall
and
inc
daa
ljmp
fiadds
out
mov
sbb
stc
xchg
sbb
push
inc
imul
or
negl
outsl
sbb
movsb
push
mov
paddb
test
dec
add
jle
cmp
iret
xor
cmp
mov
fcompl
divl
orb
xor
rcr
cmpl
jno
int3
cwtl
ds
xchg
adc
cmp
aaa
out
lock
cmpsb
add
sarb
in
sub
lods
jnp
lods
lcall
loope
sbb
sti
and
sbb
call
or
shrl
fwait
mov
sbb
imul
sarb
inc
into
sub
out
lcall
inc
sub
lods
mov
mov
ds
in
jge
cltd
test
lcall
sub
test
jle
orb
push
stos
lcall
sub
jle
fidivrl
mov
pop
xchg
xor
cmp
mov
sbb
cs
xchg
or
iret
push
lret
in
lcall
cmp
jbe
aaa
fisubrl
sub
movsl
jge
adc
or
lcall
mov
js
clc
adc
mov
cmpsl
fwait
sbb
lcall
inc
push
lcall
fcoml
jbe
in
adc
lcall
aam
pop
imul
scas
stc
je
ficoms
adc
hlt
fisubl
pushw
lret
xor
shl
lcall
push
mov
adc
xchg
movl
cli
cmpsb
loop
cmc
push
xchg
lcall
in
sbb
cmp
pop
ja
mov
pop
imul
pop
push
jno
xchg
jmp
mov
loopne
pop
pusha
push
adc
arpl
push
lods
and
xchg
xchg
loope
inc
fwait
lcall
lcall
or
ret
not
cmpsl
mov
pop
lcall
lret
es
xchg
fs
lcall
lcall
xlat
fcmovnu
push
mov
pop
inc
adc
in
jae
or
sbb
outsl
mov
add
cmpsb
movsl
pop
inc
lcall
addr16
add
insl
cmp
push
dec
xor
cmc
lcall
in
sbb
pusha
enter
in
adc
mov
les
mov
sbbl
lcall
pop
jg
mov
sub
std
mov
lcall
mov
popf
adc
cli
stos
xor
fisubrl
scas
mov
lcall
jb
jmp
lcall
adc
add
ror
test
inc
scas
mov
lcall
sub
lcall
sarl
mov
sbb
pop
fimull
dec
mov
cmpsb
loopne
ja
test
pop
or
or
lock
mov
lcall
out
mov
mov
std
int3
orb
pop
jmp
ret
add
mov
pusha
in
xor
in
fmulp
test
pop
insb
out
jns
pop
std
lcall
mov
lcall
xchg
fstpl
lahf
mov
movl
xchg
add
lods
test
inc
jb
in
mov
pop
cmpsb
bt
xor
aaa
sbb
push
or
mov
rolb
scas
lcall
popa
jbe
fimull
pop
and
or
aam
fisubl
cmp
and
out
lcall
out
lcall
jmp
lcall
jb
lcall
movsl
and
or
clc
mov
mov
and
pop
jl
add
pop
sbb
imul
loop
dec
lcall
movsb
xor
sbb
xor
mov
call
sbb
stos
cli
xor
fwait
std
sbb
pop
cltd
les
xchg
inc
addb
or
sbb
mov
jno
rcrl
pop
xlat
mov
cs
sub
outsb
jae
push
shlb
lcall
addl
leave
inc
and
inc
lcall
in
sbbl
lcall
mov
lcall
loopne
lcall
loope
lcall
jp
lcall
jmp
jl
inc
fidivrl
psllq
pop
xor
stos
cs
aas
and
jno
stos
sbb
icebp
sbb
es
out
xor
mov
mov
push
repnz
into
dec
into
es
sub
bound
sbb
mov
lcall
pop
fs
inc
cmp
into
cmpsl
int3
push
xchg
mov
push
or
std
lcall
loop
fistps
fwait
cmp
les
iret
pop
push
mov
pusha
movsl
inc
cwtl
mov
sbb
sub
aad
jo
sub
test
mov
dec
or
inc
cltd
xchg
lcall
lcall
mov
pop
sub
sbb
mov
dec
mov
sti
sbb
mov
jmp
sub
pushf
je
lret
xlat
outsb
out
dec
lcall
arpl
lcall
push
sbb
push
mov
sub
in
sti
lds
orl
repnz
pop
cmp
stos
cmp
lcall
push
ret
lcall
pop
ret
sub
in
xchg
jecxz
xor
cmpsl
addr16
lcall
lahf
rcrb
mov
inc
aad
fcmovu
pop
insb
mov
lcall
add
lcall
pop
js
out
shlb
ret
pop
jnp
shll
sub
pushf
ljmp
shlb
out
in
fldcw
rclb
or
test
or
mov
dec
sbb
sbb
cmp
mov
inc
leave
outsb
xor
mov
gs
imul
pop
or
mov
fs
adc
sahf
lods
lcall
fsub
jnp
and
lcall
jp
lcall
das
ss
loop
lcall
fstpl
cmp
ficoml
stos
fiadds
sbb
mov
jge
adc
pop
aaa
lcall
lcall
pop
rcrl
jo
leave
lcall
fistpl
das
outsb
inc
daa
lcall
add
into
jbe
xchg
adc
insb
jne
mov
leave
movsb
bound
lcall
mov
lcall
leave
lcall
lock
sub
inc
jne
sbb
mov
and
mov
pop
jl
jnp
fnsave
filds
ljmp
setp
sbb
xor
inc
insb
push
lcall
add
xor
ds
fstps
pop
mov
pop
lcall
jecxz
mov
and
push
into
sbb
scas
int
dec
mov
adc
xchg
mov
sub
dec
imul
push
mov
xchg
sar
sub
sbb
add
pop
pop
sub
pop
lcall
aam
sbb
iret
cmp
ret
lret
and
cld
pushf
adc
lret
adc
in
ljmp
dec
pop
lcall
sub
and
pop
aaa
mov
fwait
lods
lcall
ficoml
add
shl
jmp
orl
lcall
lcall
out
lcall
scas
cmpsb
lcall
pop
cwtl
stos
lods
mov
negb
sbb
lcallw
cli
jo
test
cld
push
das
lret
jle
lcall
iret
jo
lods
and
arpl
movsl
lcall
jae
lcall
xor
aad
mov
or
adc
fstpt
sub
adc
push
xor
xorl
loopne
daa
leave
xchg
jbe
add
stos
push
inc
xchg
add
scas
pop
enter
jp
mov
xchg
cltd
sub
or
sub
in
pop
aad
ret
sbb
into
jno
clc
lds
jle
lahf
push
jnp
sbb
jbe
mov
cmp
fistpl
leave
xchg
lcall
adc
out
mov
fwait
push
sbb
aas
ret
adc
sbb
pop
inc
mov
outsb
lcall
xor
sti
cmp
imul
out
lcall
test
jle
or
mov
mov
cmp
lds
hlt
push
jp
mov
xor
jbe
sub
pop
out
lcall
push
pop
lcall
scas
jo
adc
jmp
repnz
mov
mov
inc
aad
sub
push
sbb
push
push
xlat
or
ljmp
mov
and
ficompl
orb
push
rcrl
pop
sbb
lcall
mov
cmp
push
xchg
fstl
lcall
lods
popa
daa
mov
test
frstor
mov
push
sbb
and
mov
jmp
and
fiadds
adc
rep
lcall
mov
inc
push
and
ret
dec
stos
jmp
xchg
sahf
lcall
cmpsl
mov
push
dec
sarb
push
lcall
xrstors
sub
das
aaa
ljmp
cmp
pop
push
mov
lcall
sahf
inc
adc
dec
cmp
and
xchg
aam
ljmp
mov
mov
sbb
push
repnz
xor
jnp
call
lcall
movsb
inc
mov
xor
sbb
cmp
lcall
sub
ficompl
and
push
imul
pop
lcall
mov
das
cmp
push
sahf
cmp
or
xchg
sbb
mov
lcall
cltd
mov
inc
fistpll
pop
outsb
in
scas
aas
xchg
lret
enter
add
add
mov
mov
push
loop
dec
pop
cld
lcall
cltd
jne
in
push
fdivl
bound
pop
add
pop
fldt
das
mov
lcall
or
cmc
stc
scas
sub
lock
lcall
and
lcall
bound
lcall
mov
adc
sbb
sub
lret
mov
xchg
inc
and
sti
ljmp
cmpsl
cmp
fwait
push
mov
jl
push
lcall
jmp
pop
jecxz
or
lods
jge
scas
jb
cld
lcall
cmpsl
fistps
dec
xor
mov
pop
mov
loope
lcall
jbe
mov
pop
jns
mov
lcall
loope
decb
in
aam
outsb
lcall
mov
imul
jmp
jg
pop
rclb
or
sub
aas
mov
lcall
shlb
mov
sub
inc
and
mov
push
adc
fidivrs
lcall
imul
mov
inc
and
mov
nop
int3
sbb
cmp
ficomps
push
ljmp
movsb
mov
pop
push
dec
in
push
flds
das
sub
fdivrl
lcall
iret
mov
cli
lcall
mov
mov
or
jns
insl
dec
jae
mov
inc
dec
lcall
lcall
test
lcall
sbb
in
into
stos
or
sub
xchg
lcall
push
out
ret
popa
mov
cmp
add
pop
imul
sti
mov
lcall
clc
das
mov
fldcw
lcall
icebp
aad
push
std
fwait
aas
arpl
lcall
scas
mov
dec
adc
dec
mov
lcall
out
add
mov
hlt
ret
inc
mov
lcall
or
sbb
pushf
test
pop
sub
fiaddl
sub
mul
nop
rorb
lcall
mov
sbb
sub
mov
call
repz
xor
cmp
scas
mov
cmp
push
add
jl
icebp
lcall
lcall
imul
out
cwtl
out
mov
lcall
mov
lcall
daa
adc
jns
imul
dec
jmp
outsl
in
lcall
jns
lcall
mov
lcall
adc
imul
pop
and
andb
or
sbb
or
mov
push
lcall
inc
adc
xor
jns
out
out
dec
aaa
lcall
ss
sub
sub
call
xlat
jmp
cmpsl
xchg
pop
pusha
ret
ds
jb
repz
cld
mov
inc
jle
in
lcall
das
xchg
popa
and
in
add
mov
cmpsl
inc
dec
mov
rorb
push
shll
dec
sbb
sub
ljmp
lcall
mov
aad
data16
xchg
jp
outsl
pop
jp
mov
dec
inc
mov
cmc
push
mov
pop
lcall
int
mov
cli
xchg
push
cmova
cmpsb
sbb
ret
lret
movsb
gs
pop
mov
insl
inc
adcl
jnp
lcall
pop
das
mov
mov
mov
mov
ss
cmp
sbb
cmp
sub
insl
mov
popf
inc
lcall
call
mov
inc
pop
mov
popf
adc
jno
or
lcall
lds
mov
call
jl
pushf
fimull
xor
mov
jne
sbb
lcall
jge
lcall
mov
lcall
mov
addr16
lock
dec
fcmove
sti
mov
mov
lcall
inc
dec
lcall
xchg
std
std
mov
mov
in
xor
inc
lsl
mov
lcall
xor
add
and
inc
or
sti
gs
add
cltd
adc
dec
jecxz
xor
mov
sub
fistpl
movsb
xchg
lcall
xchg
push
test
or
or
adc
jne
shll
and
and
aaa
cwtl
lret
mov
fistps
aam
xor
pop
cmp
inc
inc
pop
mov
test
cld
cmc
rclb
jg
sbb
or
shlb
bound
sbb
test
sbb
mov
outsb
and
loopne
xchg
je
adc
dec
mov
add
mov
mov
daa
in
jg
lcall
imul
sbb
test
dec
data16
mov
mov
or
push
pop
stos
iret
sbb
movsb
sti
fstpt
lcall
lods
jnp
jle
and
or
push
dec
adc
sub
add
push
add
out
jns
das
sbbb
cli
fwait
mov
xlat
mov
xor
test
outsl
std
lcall
ret
outsl
adc
cmp
lcall
pop
jmp
push
dec
imul
sub
enter
fstpt
loope
push
lcall
inc
cmp
jae
xchg
in
lcall
outsl
sbb
push
fst
fcmove
jne
and
lcall
jo
xchg
lahf
or
cmp
ja,pt
adc
lcall
out
adc
std
inc
lcall
test
adc
lcall
mov
cwtl
mov
movsb
jge
fldl
cmpl
mov
inc
lcall
cmp
mov
outsb
mov
xchg
lea
dec
push
rol
out
mov
movsl
xchg
xor
inc
sahf
cmpsb
xor
push
out
test
lcall
loop
lcall
jbe
lcall
or
lcall
xchg
mov
inc
je
cmp
int3
lahf
rorl
enter
out
add
lcall
mov
ja
fsubrl
adc
addb
and
sbb
xor
push
jmp
pop
inc
cli
clc
sti
sbb
cmc
insb
fldt
pop
into
movsl
dec
out
test
dec
push
push
mov
push
dec
rclb
pop
pop
xor
jmp
and
lcall
inc
cmpb
pushf
lea
pop
cmpsb
mov
inc
adc
lcall
mov
cmc
loop
cmpsl
test
adc
pop
mov
lods
sbb
lcall
add
lcall
subb
push
pop
inc
pop
lcall
test
insb
lds
into
mov
dec
lods
out
pop
cmp
xlat
popa
push
mov
lcall
inc
test
lcall
fwait
jo
popa
pusha
ret
sbb
gs
clc
aam
mov
xchg
std
out
lcall
out
xor
inc
adc
jge
negl
in
and
lcall
mov
cmpb
lock
in
or
stos
test
int3
insl
sub
fwait
mov
xor
mov
inc
lcall
xchg
ds
or
pop
roll
stos
gs
cld
addr16
jno,pn
mov
testb
aad
jb
inc
fmuls
push
loop
outsl
cmp
mov
dec
lcall
dec
jg
enter
push
dec
pop
fiaddl
mov
shlb
and
sub
rol
mov
stc
lcall
push
inc
lcall
fmull
mov
and
inc
xchg
dec
ja
lcall
popa
sbb
pop
test
lods
add
cmpl
sbb
stc
sub
lcall
into
add
lahf
test
push
jmp
icebp
mov
push
xchg
mov
xchg
mov
shl
pop
jge
fwait
add
rolb
lcall
add
nop
daa
lcall
push
pop
hlt
mov
mov
ja
scas
loopne
jle
call
and
xchg
aaa
clc
mov
sbbb
push
dec
out
adc
xchg
mov
clc
sub
fadds
sbb
add
jecxz
repz
mov
push
adc
mov
popf
xchg
mov
cmp
es
xchg
jmp
adcb
inc
adc
mov
push
call
jbe
mov
push
sbb
pop
cmp
cmp
jle
xchg
xchg
jb
mov
lock
pop
cmpl
xchg
aam
cli
mov
out
push
jo
push
mov
mov
xchg
push
fidivrl
pop
push
outsl
push
lods
notl
add
add
push
ja
adc
adc
jp
sbb
out
cmp
cs
add
idivb
shl
cmp
es
test
outsb
pop
inc
adc
xor
dec
jl
inc
stos
add
nop
ljmp
aaa
cmpsb
xchg
pop
mov
lcall
out
mov
xchg
adc
jle
repnz
ror
leave
clc
mov
icebp
test
and
sbb
repnz
dec
scas
cltd
rolb
and
cld
add
lock
jmp
or
mov
sbb
ljmp
jl
lock
xchg
dec
xchg
fcoms
arpl
call
adcb
xchg
cmpb
fwait
les
int
cmp
lock
in
aad
mov
out
int3
rorl
xchg
stc
dec
push
mov
jb
xchg
arpl
jle
cmc
cwtl
int3
adc
sbb
dec
push
lock
clc
dec
xchg
ljmp
jg
aad
xchg
adc
sub
push
fcoml
cmp
jle
push
lds
cmpsb
aam
xchg
rorb
jns
xchg
faddl
lea
sbb
fld1
add
adc
jae
sbb
not
push
cld
jl
aam
lods
mov
cwtl
rcrb
mov
ljmp
or
mov
enter
or
out
mov
aaa
adc
lahf
mov
push
xor
insl
cmpsb
push
jo
ss
mov
call
mov
jae
enter
pop
mov
out
test
addl
push
dec
jecxz
sti
mov
cmp
cmpsb
dec
rcr
adc
mov
jge
stos
push
push
inc
mov
lock
push
jle
adc
std
jp
dec
ljmp
cmpsb
stc
test
lock
lcall
or
imul
mov
cmp
dec
popf
stos
outsb
je
jbe
andb
and
sub
xchg
or
test
nop
stos
das
movsl
ljmp
pop
pushf
mov
insb
push
mov
xchg
dec
add
mov
lock
mov
adc
aad
scas
lock
ret
dec
inc
movb
out
out
sub
cmp
adcl
adc
xor
xchg
shll
mov
push
xchg
inc
xor
rorb
push
ret
cmp
pop
shll
adc
xchg
adc
xor
pop
and
mov
jbe
jnp
jge
xlat
pusha
scas
out
cld
push
push
mov
es
jle
jnp
cmp
xchg
sbb
into
jecxz
mov
or
addr16
jbe
lods
aas
sbb
adc
pop
cmp
cwtl
iret
repz
jae
sbb
in
xchg
cltd
pop
test
mov
push
xchg
cmpsb
ret
mov
jecxz
mov
enter
or
rclb
mov
jge
into
mov
xchg
cwtl
inc
or
xor
sarl
push
mov
das
and
out
push
mov
cmp
outsl
es
fisttpl
and
repnz
rcrl
push
test
or
movsl
cli
jo
fnstcw
imulb
adc
xchg
jecxz
jg,pn
in
cwtl
dec
fsubrs
sbb
fsubrs
xchg
lea
or
xchg
push
and
mov
sbb
push
pop
mov
xor
subb
sbb
pop
test
dec
xor
xor
sub
mov
bound
mov
pcmpeqd
shll
cmp
imul
mov
dec
lret
cmp
pop
or
cmpsl
fiaddl
push
cmp
lock
les
adc
or
out
jle
xchg
lock
test
out
outsl
rcll
stos
test
push
mov
or
test
sbb
rorb
outsb
cltd
test
pop
sbb
outsb
add
mov
outsb
push
addl
sub
rcll
mov
sahf
dec
push
int3
adc
sub
mov
push
jmp
out
test
in
je
or
sbb
hlt
xchg
mov
cwtl
push
fdivs
dec
mov
sub
notl
ror
jp
jnp
jge
fmull
add
adc
fs
pop
and
insb
mov
je
push
dec
inc
dec
nop
rclb
clc
hlt
icebp
cmp
jl
imulb
into
or
inc
adc
xchg
sti
cmp
mov
aad
sub
stos
inc
mov
ficoml
into
cmp
lea
jns
cltd
cmp
sub
cmp
std
pop
or
jecxz
sahf
jp
out
mov
and
push
loope
jnp
fs
add
cmpl
mov
mov
outsl
inc
mov
dec
xchg
es
cmp
xor
xchg
lcall
lret
inc
je
and
sub
xchg
data16
jmp
dec
xor
pop
cmpsb
jb
lods
jne
mov
testb
inc
addl
test
jg
das
jno
jb
jp
mov
or
nop
push
jg
cmc
repnz
cmp
mov
push
mov
mov
fsubs
sub
lock
and
sub
or
cli
add
mov
adc
aas
hlt
jne
cmpsb
cmpsl
mov
out
hlt
inc
aam
dec
mov
aaa
sub
push
lcall
mov
inc
lock
in
jmp
xchg
lret
push
push
xchg
pop
adc
mov
sbb
xor
dec
lds
out
push
mov
ds
test
push
in
rcrb
jae
icebp
out
aam
cmpsb
xadd
out
mov
lahf
mov
and
rcll
and
jne
push
nop
and
push
xchg
arpl
adc
xor
rcl
mov
test
jne
jp
ficompl
imul
hlt
xchg
ret
jle
xlat
insl
inc
cli
or
sub
xchg
push
orb
push
aas
mov
out
int
pop
out
hlt
hlt
clc
inc
loop,pt
add
out
cwtl
add
sbb
cli
xchg
dec
xchg
and
mul
subb
sahf
out
icebp
pop
sbb
sub
mov
out
pop
mov
cwtl
fdivp
pop
pop
movsl
cmp
cltd
or
es
rclb
int3
sbb
lahf
pop
xchg
jbe
enter
xlat
outsl
xchg
mov
xchg
mov
pop
xchg
sarb
repz
dec
repz
int3
mov
inc
shrb
fidivrl
push
sbb
hlt
lcall
cmp
xor
cltd
orb
lret
jae
pushf
sbb
xor
cmpsb
adc
lods
out
lcall
jp
bnd
push
jne
pop
les
cld
mov
xor
or
js
rcrl
jb
cmc
xchg
das
mov
nop
out
xchg
pop
pop
pop
jl
jo
jns
cmpsb
mov
mov
addr16
adc
push
dec
out
pop
rolb
cmpsb
adc
mov
cmp
mov
pop
test
test
idivb
cmp
xchg
rcrl
push
div
mov
mov
imul
xchg
es
sub
mov
mov
xchg
mov
sbb
in
jl
scas
test
ljmp
or
push
test
ljmp
push
jl
push
jecxz
push
into
cmpsb
mov
xor
xor
cltd
out
dec
aad
sub
push
sbb
in
loopne
test
pop
movsl
int3
cmp
xchg
xorb
bound
mov
mov
or
jmp
icebp
out
sub
inc
out
mov
sarl
mov
xchg
test
sbb
stc
jns
cwtl
mov
dec
js
xchg
push
pop
test
adc
test
mov
sbb
dec
daa
mov
cwtl
mov
test
push
inc
xor
stos
adc
cmpsb
cmc
ljmp
cli
movsl
hlt
es
mov
push
mov
or
gs
std
push
adc
add
cmp
mov
mov
dec
sbb
es
sub
in
repnz
cmp
filds
popa
iret
call
test
cmp
outsb
mov
cmp
std
fcmovbe
fsubs
or
push
mov
fadds
clc
test
rclb
cmpb
cmp
testb
mov
sub
sbb
loop
jne
xor
ds
cmp
inc
cmp
fsubrl
cwtl
sbb
test
mov
push
loop
lock
xor
test
les
sti
dec
jle
xlat
lock
push
test
push
or
push
jo
pop
pusha
pop
jnp
mov
push
shll
inc
lret
aad
pop
nop
cmp
adc
ss
push
sub
lcall
lret
outsl
push
not
pop
repnz
add
add
outsb
or
gs
test
incb
mov
mov
leave
or
sbbb
mov
xor
insb
aad
xchg
mov
mov
xchg
sti
mov
cmc
lcall
mov
fadds
xchg
adc
nop
ret
mov
push
inc
dec
jns
jp
int3
repz
jmp
dec
mov
sbb
lock
shl
ss
aaa
and
lds
add
cltd
mov
fcomip
orb
pop
pushf
cmp
pop
sub
and
adc
mov
jnp
xchg
sbb
aam
adc
lret
jp
sahf
mov
hlt
dec
jmp
dec
pop
setbe
xor
mov
roll
add
push
cwtl
add
lock
icebp
loopne
ss
nop
sti
xor
cmp
mov
pop
std
fistpl
xchg
xchg
mulb
cmp
clc
ficoml
cmp
lret
mov
rclb
nop
mov
ja
or
pop
ret
xchg
or
loope
cmp
or
mov
test
cltd
clc
mov
sbb
movsb
gs
subb
int3
addb
add
dec
cli
cmpsb
lret
std
mov
push
or
and
in
aaa
sahf
aam
ss
inc
in
dec
notb
sti
repnz
shrb
adc
aas
jmp
adc
mov
push
decl
negb
jmp
dec
add
push
push
adc
mov
ljmp
leave
stos
mov
mov
jle
dec
clc
mov
xchg
cmpsb
sbb
cmp
add
mov
es
in
and
xchg
push
notb
sbb
jge
int3
cli
mov
or
andl
clc
cmp
push
lea
popf
mov
data16
pusha
ror
jecxz
cld
out
roll
jg
mov
imul
decb
add
sbb
mov
in
mov
xchg
mov
cli
negb
sbb
xchg
xchg
adc
jp
sbb
repz
xorb
push
sub
roll
iret
mov
insb
lods
mov
mov
jp
js
fdivrs
xchg
mov
mov
jne
xchg
mov
inc
rorb
ss
es
nop
out
mov
lahf
push
sbb
xchg
gs
fidivrl
shlb
push
mov
cmpsb
rcll
xchg
outsl
inc
test
clc
call
sarb
jb
cmp
aas
cli
ret
or
cwtl
mov
adc
push
cmp
mov
pop
add
adc
adc
cltd
hlt
or
lahf
sub
outsl
adc
stos
pop
pop
sub
jns
push
mov
lock
jp
rolb
xchg
adc
dec
mov
pushf
dec
xlat
sbb
nop
pop
push
sbb
insl
enter
add
push
xchg
jecxz
movsl
inc
nop
call
jl
mov
inc
lret
sbb
lahf
cmc
loop
cmpsb
sub
cmc
jmp
sbb
je
ret
mov
mov
hlt
sbb
rcl
stc
fistpl
inc
call
movsl
jmp
jne
xor
add
fmuls
div
push
jns
adc
lods
int
and
cltd
ljmp
dec
es
cmp
icebp
xchg
add
adc
mov
cwtl
xchg
adc
cmp
out
mov
lock
xchg
xchg
cmpsb
in
push
xchg
jo
push
mov
mov
xor
and
or
sub
pop
push
lods
cmpsb
push
jo
push
add
push
pmulhw
jae
add
bound
xor
mov
es
loop
int3
xchg
push
xchg
test
cmpb
fdivrl
jbe
lods
fimull
or
ljmp
iret
je,pn
icebp
les
xchg
out
cmpsb
lock
dec
lcall
mov
mov
sub
mov
xor
inc
jne
int3
jo
imul
ljmp
push
psrld
sub
ja
test
push
fsts
popa
push
inc
push
and
mov
add
ja
fdivs
sbb
ljmp
fsts
subl
orl
je
mov
mov
jmp
add
sub
movsl
sub
mov
adc
push
cltd
test
mov
lret
cmp
aaa
in
ljmp
or
out
jge
adcb
in
rcll
jg
push
push
cmc
jbe
xchg
dec
popf
cli
sahf
mov
aad
ret
jbe
or
lods
add
inc
insl
pop
inc
cmpb
jb
mov
xchg
inc
jmp
ror
andb
call
add
repz
adc
ljmp
cmp
outsb
or
sub
lcall
dec
clc
mov
fnstenv
test
inc
mov
jge
mul
mov
pusha
fcoml
mov
dec
and
leave
mov
jno
jp
mov
pop
push
jge
mov
icebp
mov
pop
scas
nop
rcrb
sbb
leave
mov
dec
icebp
loope
inc
jne
push
fbld
mov
push
mov
inc
dec
xchg
js
ds
aam
int3
test
rorb
gs
adc
into
clc
insl
sub
fsts
jp
pop
jbe
xchg
jg
jne
shll
rol
jb
inc
or
nop
int3
clc
in
subb
dec
xchg
xor
sbb
mov
ret
imul
sbb
aam
mov
jnp
out
jbe
rcrl
push
ret
pushf
mov
adc
and
stos
js
mov
jecxz
jbe
cmp
movsb
adc
adc
es
and
xchg
idivl
and
dec
sahf
cmp
rorb
pop
mov
and
xchg
push
hlt
roll
adc
fimull
mov
cmpsl
jbe
jne
inc
add
push
cmp
sbbl
and
fs
inc
test
adc
mov
pop
cmc
and
ds
xchg
jns
imul
mov
subb
loopne
xchg
xlat
clc
fistpll
mov
mov
ljmp
icebp
popa
addl
sbb
cmpsb
and
mov
test
addb
imul
jno
xchg
adcb
es
test
dec
ret
daa
arpl
test
stos
test
mov
mov
jne
sub
clc
sbbl
and
cmp
iret
shrl
orl
ss
xchg
cltd
cmp
push
out
cmp
nop
addb
jmp
jo
ja
dec
xchg
sub
scas
pusha
jb
ret
in
sbb
dec
adc
jle
push
cwtl
test
fucom
jp
or
sahf
mov
lcall
loop
jle
cmp
mov
ficoms
dec
push
push
jo
imul
xor
mov
adc
into
scas
mov
cmp
ljmp
sar
or
lea
mov
jno
jnp
sbb
lods
into
inc
adc
rep
lcall
mov
ds
xor
pop
pushf
cmp
adc
push
dec
mov
cld
sub
lret
and
mov
fiaddl
xchg
sbb
imul
pop
push
jl
addr16
push
cmp
push
add
test
shlb
mov
hlt
fiaddl
int3
and
push
push
incb
shll
mov
or
testb
adc
incl
int3
mov
pop
stos
mov
cli
outsl
in
fpatan
ficompl
out
insb
pop
daa
xchg
es
leave
dec
hlt
test
rcl
xchg
inc
dec
fdivrl
fldenv
repz
mov
adc
sub
insb
fnstcw
out
xor
iret
leave
les
mov
and
mov
jp
aad
jno
push
push
push
dec
cwtl
jbe
insb
out
rcrl
push
mov
sbbb
fs
sub
pushf
and
pop
lods
jno
mov
push
popf
xor
daa
insb
jns
scas
mov
shl
sbb
scas
movsl
sbb
subl
push
popf
jae
mov
lock
dec
cmp
je
test
lcall
movsl
mov
xor
mov
in
xchg
stos
enter
out
ror
in
xchg
mov
adc
xchg
mov
sub
sub
hlt
mov
popf
and
jecxz
fdivrs
sbb
pop
mov
xchg
inc
movsb
inc
sub
add
clc
sar
push
lea
or
dec
jns
lret
cmp
mov
rclb
or
push
mov
pop
adc
cmpsb
pop
sbb
jo
xlat
dec
cld
or
add
xchg
mov
cwtl
mov
and
shrb
cmp
dec
mov
ficomps
xor
outsl
clc
bound
and
int
aas
rcrb
pop
test
jp
mov
xor
std
es
rorb
imul
lock
push
rol
test
jno
sub
pop
pushf
pop
data16
xchg
sbb
add
leave
sbb
pop
dec
xchg
fyl2xp1
cmp
rcll
cwtl
jbe
and
cmp
adc
rcrl
xchg
out
adc
dec
rcr
es
jne
jno
divb
iret
sub
pushf
mov
jl
pop
xchg
cmp
cmp
xchg
lcall
jbe
hlt
repnz
repz
cmp
hlt
mov
fadds
sbb
push
add
cmpsb
dec
dec
lcall
lcall
add
jecxz
push
hlt
push
bound
fcmovb
movsb
inc
adc
jns
outsl
pop
pop
cltd
xor
mov
sbb
adc
orb
jl
jp
jb
popa
jmp
repnz
xchg
rclb
mov
push
xchg
icebp
cwtl
int
mov
jge
jb
scas
xor
and
mov
cmp
rol
jae
sbb
rcrl
xchg
stc
inc
int3
push
mov
lret
cli
xlat
idivb
loopne
mov
jmp
es
in
mov
mov
mov
jmp
mov
or
mov
leave
dec
mov
jne
ljmp
xchg
mov
jbe
cwtl
cmp
pop
out
sbb
aaa
fmull
xor
jg
mov
enter
cltd
rolw
icebp
push
es
inc
sbb
pop
shrb
xchg
xor
es
cmpsb
andb
cld
jns
sarb
jmp
iret
mov
mov
xchg
cmp
mov
arpl
fdivrs
pusha
jbe
mov
cwtl
notb
repnz
fcmovb
dec
ds
sbb
mulb
fsubrl
rcl
cmpsl
icebp
push
mov
test
dec
xor
nop
shlb
frstor
les
movsb
mov
nop
repnz
aas
iret
outsb
sbb
dec
push
es
enter
xlat
ret
outsb
cmpsb
test
cld
mov
lret
icebp
mov
push
pop
cltd
and
sti
pop
ljmp
es
test
cmc
mov
and
addr16
adc
flds
lds
fistl
dec
cli
jmp
ljmp
push
dec
sets
jge
je
lock
inc
aas
ret
adc
xlat
pop
inc
jo
pop
dec
mov
cs
into
cmpsb
ds
jmp
lods
cmp
aas
shrb
xchg
stos
and
es
icebp
jno
inc
test
cmp
shld
jmp
test
mov
in
xor
fisubl
iret
cwtl
xorb
lcall
test
aaa
push
mov
ffreep
insl
test
lods
lods
sbb
clc
mov
inc
out
cwtl
in
or
iret
xchg
int3
lret
pop
lcall
aaa
adc
lret
mov
mov
aam
cmp
or
mov
bswap
mov
xchg
mov
mov
sbb
add
cmp
cmpb
sub
mov
and
push
or
pop
int
test
jbe
sbb
cli
rcrl
imul
sahf
lock
dec
int3
loope
js
cwtl
ficompl
xor
cltd
push
sahf
enter
jns
sbb
popf
rclb
xchg
ror
scas
and
test
sbb
stos
pop
xchg
sti
into
or
jne
movsb
xchg
movsl
mov
mov
inc
jl
mov
mov
jl
out
cwtl
dec
cmp
adc
push
mov
scas
in
out
inc
cmp
popf
xchg
mov
jno
sub
push
cmp
inc
and
jle
into
outsl
or
jp
mov
orb
loope
mov
jle
cmp
iret
in
test
fists
add
mov
das
aam
mov
cmc
inc
fcomi
push
mov
fistpll
dec
adcb
cmc
cwtl
inc
outsl
ljmp
push
aad
movsl
jns
xchg
insl
cwtl
ds
jae
mov
push
mov
push
sub
cmpsb
test
push
xlat
icebp
dec
dec
xchg
out
pmaxub
adc
repnz
sub
jae
in
xchg
push
shlb
jp
out
cmp
imul
jle
cld
xchg
sbb
lcall
push
out
push
adc
fsubrl
adc
hlt
or
inc
ret
aam
add
mov
ljmp
lods
fwait
mov
sub
push
adc
hlt
cltd
jno
push
loopne
dec
insl
sbb
call
stos
ds
fwait
jnp
cmc
inc
push
push
sti
xchg
pushf
sub
repnz
fucom
xor
cmpsb
jmp
or
pop
pop
fisubl
mov
mov
mov
scas
mov
call
sub
cwtl
pop
push
sub
mov
cmovae
pop
ljmp
mov
adc
fnstcw
inc
lcall
add
mov
push
sbb
cmp
xor
xchg
shll
lods
mov
shl
add
dec
lea
jp
imul
mov
pop
push
cmpsb
xor
ret
push
ret
out
xchg
lret
stos
call
adc
cmp
push
leave
mov
xchg
push
jecxz
mov
adc
cmp
xlat
xor
sarb
ret
ljmp
fcompl
cmpsb
pushf
call
std
pop
inc
rcr
js
test
lret
faddl
cmp
and
roll
lret
pop
lock
out
jnp
movsl
jb
jp
sahf
xor
pop
inc
sbb
adc
out
ret
add
mov
or
sbb
add
mov
jno
push
jle
pop
lds
movsb
mov
aas
mov
mov
mov
arpl
ss
mov
pop
scas
lods
iret
xchg
cmpsb
addl
repnz
fcomps
jnp
das
gs
jne
popl
push
jmp
lods
lcall
shll
mov
xchg
aam
or
les
ret
iret
rorb
cmp
push
jecxz
xlat
jl
test
outsl
xchg
xchg
sahf
es
push
das
jle
into
push
fsubs
cmp
loopne
cmp
hlt
fwait
jg
lret
fdivrs
add
push
push
shrl
lret
cli
jmp
rcrb
xor
dec
mov
xchg
ret
hlt
daa
inc
fucomp
jns
lds
pop
ret
shr
push
mov
jp
sub
leave
dec
mov
and
xchg
in
xchg
add
xchg
push
fildl
or
or
dec
sbb
test
cmpsb
pop
push
in
repnz
jne
ljmp
shlb
clc
lods
in
into
add
repnz
clc
pop
push
or
insl
adc
cmp
push
add
inc
mov
pushf
add
icebp
cmp
mov
adc
out
add
mov
cmpsb
mov
data16
movl
sub
mov
das
xchg
inc
push
scas
push
xchg
mov
fdiv
loopne
lods
imul
mov
daa
imul
fadds
pop
lcall
add
cmp
pop
mov
cmp
imul
sub
out
and
in
sar
fs
sbb
push
movb
pop
push
mov
dec
clc
push
pop
lods
push
inc
mov
repnz
sbb
jle
lret
sub
push
mov
ficoml
add
iret
imul
repnz
jecxz
es
cltd
jne
dec
mov
lahf
add
pop
lods
imul
test
mov
jl
jmp
cli
je
xchg
addb
rcll
leave
push
scas
lahf
mov
mov
jle
aaa
sub
push
incw
mov
aam
insb
push
insl
in
xchg
sbb
int3
adc
call
sahf
ret
dec
push
popa
rcll
lods
addr16
sub
inc
sub
ljmp
pop
imul
add
inc
sbb
into
adc
adc
cmc
push
or
jg
mov
dec
adc
mov
addb
xchg
mov
fldt
or
pop
imul
cli
sub
cmpsl
add
jl
rclb
xchg
push
repnz
repz
mov
jl
mov
test
mov
aas
ss
lock
out
adc
mov
cmpsb
jo
dec
sahf
adc
sbb
add
negl
std
dec
pusha
mov
insl
or
mov
xlat
inc
andb
es
jno
push
stos
jle
cmpl
insl
in
aaa
movsb
cmp
ret
and
rcrb
cmpsb
xorb
insl
cmp
std
or
pop
fidivl
loope
ror
inc
mov
adc
aas
xor
mov
leave
inc
sbb
or
cmp
cmpsb
nop
mov
out
push
mov
mov
arpl
pop
int3
mov
int
or
test
adcb
mov
mov
test
pop
lea
imul
insl
dec
jp
scas
icebp
in
rclb
clc
addr16
cs
je
cmp
test
inc
mov
cwtl
call
shl
jbe
es
cmpsb
cs
push
inc
dec
cwtl
mov
in
dec
fisubrl
test
cmp
xchg
int3
and
in
insl
mov
es
outsb
aaa
sbb
mov
fmul
push
jmp
mov
or
dec
inc
sub
es
xchg
test
dec
jae
shlb
adc
faddl
mov
push
xchg
xsha1
cmpsb
dec
dec
subb
cmp
mov
sbb
xlat
leave
sbb
lds
xchg
rclb
enter
leave
adc
mov
mov
jnp
add
out
notl
add
inc
push
mov
imul
xchg
mov
adc
adc
idivl
lods
jae
js
es
lret
test
scas
mov
pop
arpl
add
icebp
push
xchg
jmp
jno
xchg
divb
adc
rcr
xchg
nop
jmp
adc
xor
mov
cmpsb
cmc
push
and
in
and
mov
out
jecxz
cmp
insb
add
cmpsb
popl
ss
clc
arpl
mov
sub
and
lcall
leave
push
jmp
sbbb
mov
cmp
pop
xor
int
jp
adc
add
jns
fsubrp
xorl
dec
xchg
mov
mov
mov
jae
cwtl
push
xor
or
repnz
aad
fiaddl
cmc
sbb
imul
repz
test
cmpsb
ja
daa
lock
mov
dec
test
pop
sti
subl
int
jnp
das
mov
fcmovbe
test
lods
xchg
out
xchg
fs
inc
inc
push
shl
es
xchg
jecxz
aas
sarb
sub
cmp
adc
mov
es
out
adc
cltd
mov
push
scas
mov
rcrl
fcmovbe
fstpl
mov
xchg
mov
jns
mov
repnz
fwait
in
pop
mov
je
aam
addr16
test
int3
adcb
scas
popf
mov
ret
jmp
mov
jge
ds
out
daa
outsl
rcrb
lcall
adc
and
xor
repz
sbb
imul
push
jmp
insb
movb
push
push
adc
xor
jbe
mov
aam
inc
dec
dec
sbb
xchg
pushf
cmpsl
mov
pop
ljmp
out
push
pop
andb
mov
adc
push
enter
test
pop
sbb
mov
shlb
dec
lods
aad
and
lods
add
sub
aaa
out
add
lods
sbbb
comiss
sbbl
iret
nop
pop
sbb
orl
orl
and
loope
xlat
mov
mov
ljmp
or
bsr
scas
icebp
aas
push
scas
cmpsb
test
adc
inc
cmp
ret
sbb
cmp
jbe
add
xchg
std
fldenv
cmpsb
cmp
adc
dec
cltd
cld
cmpsb
xor
loop
and
pop
fiaddl
push
and
ss
test
mov
xchg
std
into
push
cmpsb
jp
mov
int
popa
push
icebp
movsb
out
push
push
stos
outsb
mov
inc
push
jnp
adc
negl
cmc
rclb
cmp
push
pushf
leave
rclb
out
add
push
lret
iret
out
test
bound
mov
mov
cmp
mov
out
xchg
subb
lods
mov
out
popa
repz
pop
test
jle
jae
test
xor
ljmp
jp
out
das
xor
inc
outsb
ret
mov
adc
mov
or
pop
fmulp
insl
ror
add
mov
jae
pop
cmpsl
jne
push
out
jne
sarb
mov
es
add
jecxz
in
je
imul
imul
pop
out
lea
and
in
fs
mov
ss
stc
xchg
push
shr
inc
out
xchg
in
insb
add
cwtl
or
imul
mov
jmp
hlt
sbbl
mov
mov
sub
xchg
sbb
shlb
jmp
mov
or
imul
jmp
add
cmpsl
cmc
mov
or
es
push
in
mov
bound
xchg
rcrb
das
cwtl
in
inc
jno
push
jle
inc
mov
cwtl
jge
mov
fdivrs
icebp
adc
cli
add
and
or
pushf
jg
xchg
jns
out
pop
pushf
lret
sarb
pusha
add
adc
pop
push
test
jbe
mov
push
insb
push
scas
xor
inc
jnp
xor
fbstp
in
jb
mov
cmpsb
popf
push
dec
testb
adc
aas
inc
sbb
stc
and
pushf
add
mov
mov
xlat
xlat
push
loopne
inc
jp
int3
aas
mov
xchg
inc
sub
inc
xchg
or
xor
mov
ja
cwtl
out
fbstp
mov
sub
rclb
inc
cmp
and
orl
add
sbb
mov
sbb
jmp
mov
test
jecxz
add
mov
out
and
jp
xlat
in
aas
ret
inc
push
cli
or
scas
cwtl
insl
mov
inc
roll
push
cmc
call
mov
ret
push
cmc
xchg
jmp
cmpsb
roll
stos
inc
sbb
inc
cmpsb
pop
das
xor
addb
sti
push
xchg
inc
cmp
data16
cmp
cmpsb
cld
mov
test
cmp
and
mov
mov
pop
inc
push
lods
call
mov
js
cmp
cwtl
out
pop
inc
xchg
movsb
lea
aam
movl
iret
cmp
call
fmull
shlb
add
popa
push
subb
adc
cmpsb
mov
out
outsl
subb
dec
and
inc
sub
ljmp
sub
sbbl
push
mov
adc
mov
in
jmp
in
fwait
cmpxchg
pop
and
add
scas
int3
iret
popa
incb
mov
add
cltd
and
add
sub
shr
inc
lret
push
mov
lcall
xor
jp
sub
mov
fistps
jnp
xchg
cmp
ficoml
push
mov
mov
inc
pop
push
bound
fs
jge
pusha
and
std
xor
push
sub
cmpsb
aad
orb
and
pop
xorl
fmull
mulb
icebp
hlt
mov
pop
push
add
sbb
notb
jp
or
pop
add
jo
add
out
push
test
sbb
loope
bswap
stos
cmc
into
mov
ror
dec
mov
dec
add
inc
cmp
icebp
pushf
idivb
repz
pop
fstps
jo
iret
or
sub
std
xorb
ficoml
dec
fidivl
mov
mov
adc
dec
lea
mov
sbb
xchg
xlat
lahf
mov
adc
ud1
sbb
dec
xchg
js
inc
ljmp
dec
repz
fnstcw
mov
jp
mov
lock
xor
insl
xchg
push
dec
lods
inc
xlat
aam
xor
mov
fstl
out
push
push
or
or
pop
cli
and
adc
inc
mov
push
dec
cmpsb
xchg
xchg
repnz
jo
sbb
adc
addl
imul
push
jno
xor
mov
dec
ret
imul
and
add
push
add
pop
imul
rorb
push
mov
or
mov
lods
xor
fisubl
ljmp
adc
mov
rolb
repnz
mov
insb
shlb
insl
add
pushf
mov
sbb
clc
ret
push
out
jb
imul
faddl
pop
add
xor
lcall
pop
imul
and
jae
mov
out
rep
daa
mov
bnd
mov
jb
es
leave
push
ret
iret
mov
pop
shlb
cmpsb
popa
add
sbb
cwtl
in
sti
je
inc
scas
ror
movsb
xchg
xor
cli
jecxz
mov
or
jbe
dec
mov
pop
mov
xor
xor
out
mov
dec
and
int3
jno
push
sub
jecxz
sbb
pop
arpl
lock
mov
ds
xchg
mov
adc
not
and
jmp
popf
orl
jge
cwtl
cwtl
roll
xor
mov
sar
dec
out
xor
xchg
sub
les
cmp
or
mov
pop
clc
mov
push
es
adc
mov
ljmp
nop
shlb
or
mov
lcall
push
movb
pop
jge
pop
lds
sub
mov
movsl
insb
mov
push
push
mov
negb
xchg
jns
mov
cld
shlb
push
in
fcomp
mov
pop
mov
testb
xor
mov
into
movsl
jle
out
lods
inc
es
pop
xor
shll
cwtl
inc
pop
es
add
xchg
push
and
test
shl
mov
pop
jne
sbb
stc
mov
push
in
mov
stos
rcrb
es
mov
in
insl
dec
idiv
inc
fucom
push
fsts
xor
xchg
out
mov
jnp
daa
out
imul
cs
xchg
or
xor
xchg
cmpsb
lahf
sub
xchg
ret
mov
mov
xchg
mov
repz
xchg
sub
mov
push
xchg
insl
fcmovnbe
pushf
fcmovu
push
fnstcw
shll
pop
pop
dec
or
addb
xor
mov
push
mov
mov
loop
pop
ja
jp
or
lcall
test
cmpsb
adc
mov
sbb
out
jl
mov
mov
rolb
xchg
xchg
dec
dec
mov
nop
into
push
test
jle
mov
or
repz
sbb
call
adc
nop
fstps
es
xchg
imul
inc
ds
dec
ret
or
inc
setns
and
shlb
cld
inc
mov
push
inc
push
pop
sahf
shlb
cmp
dec
pop
fsubs
sub
cmp
imul
mov
cltd
out
into
add
mov
sub
cwtl
cmpsb
div
test
out
cltd
cmp
scas
sbb
or
mov
cmpsb
lods
lods
inc
jmp
jnp
cmp
fwait
mov
hlt
int3
mov
adc
mov
pop
jno
test
mov
stos
gs
inc
ds
lret
mov
push
pop
mov
adc
mov
jmp
mov
dec
cmpsl
daa
xor
ror
ja
pop
dec
jae
mov
addr16
imul
int
andb
fimull
fistps
mov
fidivl
jb
hlt
std
adc
lods
in
mov
shrb
cmc
out
out
and
mov
into
jns
stos
cltd
repnz
sti
shlb
ds
jns
push
repz
pop
icebp
ljmp
adc
lcall
xchg
cltd
ljmp
xchg
rcl
and
adc
sbb
test
inc
adc
push
push
gs
fnstsw
inc
sbb
popl
push
cli
ds
stos
cmp
and
fcom
into
lcall
mov
aam
dec
negb
sbb
cltd
inc
fisubs
pop
sub
push
cmc
adc
and
sahf
inc
int
stos
loop
adc
cli
aaa
jno
rorb
push
es
gs
adc
ljmp
inc
das
dec
into
rcl
adc
cmp
mov
fs
int
es
add
pop
popf
scas
insb
and
pop
adc
push
adcb
xorl
into
push
pop
lock
fucomi
and
cmpsl
fldl
cwtl
test
jnp
inc
jns
fwait
push
ljmp
shlb
icebp
out
inc
and
jg
ja
outsl
subb
jne
ss
in
mov
pop
imul
loope
test
pop
push
sbb
clc
add
rorl
ds
je
xchg
sahf
into
push
int3
pop
pop
jl
lret
hlt
sbb
xchg
out
test
mov
xor
scas
sbb
cmp
fildl
push
adc
popf
add
pusha
sub
jnp
ljmp
lahf
push
mov
xchg
shlb
leave
jmp
loope
ljmp
je
mov
hlt
jmp
mov
icebp
xorl
aam
scas
push
lods
aaa
andb
test
fs
and
pop
add
nop
add
gs
mov
mov
pop
pop
icebp
shlb
outsl
rcrl
xor
out
push
add
shrb
dec
pop
les
nop
jp
xchg
sub
sarl
ficoms
mov
push
aam
or
xorb
sbb
jnp
jge
adc
adc
sub
aad
sbb
dec
pop
cld
out
push
adc
pop
sbb
mov
pop
ss
pop
shl
pop
lods
test
or
lcall
mov
xchg
adc
int
pop
adc
xchg
cmpsb
rep
outsl
cmp
loope
push
sbb
mov
test
mov
aam
jmp
notl
lods
pushf
lds
inc
loop
xchg
dec
sub
inc
jmp
adc
jl
out
xor
rep
mov
cmpsb
rclb
mov
jno
cltd
sub
insl
push
lods
pop
hlt
fildl
ror
iret
mov
fnsave
push
stos
fwait
lock
sub
pop
jne
jae
push
out
sahf
cmp
out
fists
cmp
mov
pop
fmuls
andl
lret
mov
mov
push
cmpsb
dec
bnd
mov
adc
cmp
cmpsl
loopne
out
push
sbbb
push
push
lea
mov
iret
lcall
ljmp
js
mov
pop
xchg
dec
fsubrl
and
std
or
into
shrb
insb
mov
sub
pop
shrl
mov
xchg
or
jo
mov
mov
into
mov
fucomip
or
out
outsb
cmp
out
or
ret
psubd
mov
pop
sbbb
int3
ljmp
test
lret
jl
jb
fs
lock
icebp
cmpsb
jne
in
push
xchg
jns
pop
mov
ret
push
les
mov
fimull
cmpsb
es
pop
icebp
arpl
repnz
icebp
cmpsb
pop
es
lods
ss
test
mov
movsl
enter
jb
and
lods
cltd
or
pop
loope
adc
inc
cmpsb
dec
aam
mov
aaa
xor
inc
rcl
mov
cmp
dec
rorb
daa
or
sbb
mov
cmpsb
adc
pop
mov
lds
loopne
cmp
mov
and
hlt
mov
dec
add
xchg
pop
mov
xchg
jb
aad
jnp
bnd
scas
adc
dec
push
sbb
fsubl
xchg
adc
ret
dec
cmp
fcom
push
js
jg
lds
mov
mov
jge
ds
push
mov
mov
pop
sub
mov
mov
mov
cmp
jp
int3
mov
in
mov
pop
imul
mov
test
sbb
test
mov
rep
insb
push
mov
ljmp
cmp
add
pop
push
jmp
popa
push
int3
xor
push
adc
lock
mov
mov
pop
cmpsl
and
pop
mov
lds
out
pop
push
std
mov
xlat
mov
push
fldenv
and
fnsave
xchg
add
loop
es
int3
sbb
mov
out
scas
enter
sbb
pop
icebp
mov
testl
aam
addr16
cli
clc
xchg
lcall
aaa
cli
ds
push
mov
test
roll
dec
out
jp
mov
int3
test
movsb
cmp
es
jb
and
pop
and
fchs
adc
negl
dec
int
add
ret
xor
jl
push
rcrb
or
cmpsb
jne
xchg
inc
push
insb
inc
adcb
lret
gs
fcoms
sbb
jo
add
lret
in
shl
sbb
and
mov
test
adc
pop
shlb
data16
and
cmc
xor
xchg
jmp
call
push
add
push
xchg
sub
jmp
pop
dec
mov
dec
sbb
and
std
xor
lcall
mov
js
jl
jge
add
inc
test
adc
repnz
daa
hlt
mov
xchg
or
adc
ror
out
add
mov
mov
lods
bound
mov
into
sbb
pusha
rcll
mov
cmp
aad
mov
test
mov
dec
mov
xchg
adcl
cltd
cmp
dec
sahf
adc
add
mov
clc
mov
jmp
xchg
das
les
hlt
leave
fstl
adc
arpl
mov
lahf
mov
fsts
sbb
adc
es
cwtl
xchg
mov
mov
sti
cmpsb
dec
mov
push
fcompl
std
adc
sub
adc
xor
jnp
or
dec
cmpl
mov
es
jne
out
pop
pop
inc
adc
push
xchg
sahf
movsb
push
pop
inc
mov
jg
push
xor
stos
lods
mov
adc
jb
inc
jmp
ja
nop
dec
call
push
aaa
adc
push
lods
or
std
and
jmp
push
xchg
es
jge
mov
mov
cmpsb
xchg
sub
rorb
add
test
ds
ret
enter
mov
lahf
xchg
js
inc
sbb
scas
shll
jne
mov
fisttpll
adc
adcl
sub
shl
sub
lcall
cmpsb
pop
popa
pop
stos
mov
adc
cld
loopne
xor
inc
xchg
cmp
cs
into
sub
cmpb
mov
push
adc
jle
popa
ret
cmpsb
icebp
mov
stos
jno
ror
adc
out
or
xor
mov
or
push
xlat
mov
push
cmpsb
adc
cwtl
and
adc
outsb
lods
cmp
mov
mov
push
call
movsb
test
jp
aam
mov
insb
in
negb
dec
rcl
cltd
pushf
out
loope
pop
fcomi
les
pop
daa
dec
ja
clc
lock
pop
shrb
clc
mov
out
jbe
inc
mov
adc
jno
out
lcall
aam
inc
dec
xor
shl
xchg
cmpsb
mov
ret
mov
inc
je
inc
xchg
out
enter
push
jns
addr16
mov
lahf
mov
jae
sbb
cmpsb
rcll
push
adc
and
xor
push
or
add
dec
es
in
and
jp
and
or
shr
mov
xchg
mov
add
aaa
mov
dec
mov
xor
cmc
lret
lcall
ret
lods
dec
idiv
lret
divl
packssdw
xchg
lahf
outsl
mov
cwtl
je
pop
sub
mov
push
fcomps
xchg
in
push
mov
push
and
push
or
int
lock
out
lahf
inc
dec
jmp
sbb
push
aad
inc
xchg
loopne
xchg
out
fmuls
jecxz
hlt
xchg
rcrl
ss
fsubrl
cmpsb
mov
mov
add
jmp
jne
mov
icebp
es
xor
push
sub
dec
test
lea
jecxz
cmp
das
push
test
jbe
add
shrb
flds
ret
xor
les
cltd
mov
sbb
pop
cmpsb
addr16
mov
xor
sarl
mov
stos
inc
lods
fwait
stc
lcall
dec
inc
jno
adc
jmp
aas
repz
js
adc
imulb
aas
into
push
out
mov
xlat
leave
fisttps
hlt
lret
out
cmp
jle
test
cwtl
push
lea
int3
mov
mov
adc
adc
sbb
bound
inc
cmp
mov
jmp
cmpsb
xchg
gs
daa
out
xchg
push
bound
sbb
cmpsb
pop
fsubs
or
and
cmc
es
pop
mov
xlat
xchg
lahf
sub
ja,pt
cs
ret
scas
xchg
mull
mov
fidivl
stos
negb
pop
out
enter
fdivr
xlat
out
std
ja
enter
pop
ficoms
jecxz
mov
cltd
test
cmpsb
aaa
fdivl
mov
mov
mov
xchg
rorb
iret
in
fmul
sbb
dec
movsl
inc
rcl
loopne
jbe
or
pop
cltd
std
or
push
push
adc
mov
pop
imul
adc
adc
out
movsb
push
sub
cmpsl
rclb
sub
xor
shlb
dec
nop
ljmp
pop
mov
test
sub
insb
mov
xchg
enter
test
push
push
mov
ljmp
inc
pop
int
or
add
fcoms
xchg
mov
cwtl
sbb
div
mov
movsl
lea
jo
inc
mov
mov
cmp
jl
xor
or
stc
in
mov
sub
pop
jecxz
pusha
pop
pop
insb
cmp
mov
es
push
cltd
jb
iret
aaa
push
cmp
aaa
or
setbe
cmp
mov
adc
add
cmc
sbb
adc
lret
shlb
cmpsb
adc
leave
out
repnz
testl
mov
out
add
in
sbbb
dec
mov
mov
rol
outsl
mov
dec
fcmovu
pushf
pop
imul
xor
test
dec
dec
out
mov
ljmp
movswl
mov
insl
xchg
mov
jne
fiaddl
dec
shlb
daa
or
aaa
lods
daa
call
lret
cmpsb
repz
rclb
adc
adc
jecxz
rorb
pop
add
loope
inc
sahf
add
ljmp
mov
cmc
imul
fcom
or
adc
arpl
nop
rcrl
jns
xchg
cmp
dec
jle
adc
and
aam
inc
lret
sbb
mov
cmp
or
pop
sbb
dec
mov
add
mov
repnz
push
daa
call
iret
mov
mov
test
sub
rcr
sbb
sub
cmc
fadds
mov
dec
xchg
inc
es
int3
ret
cmp
fadd
int3
popf
mov
ret
jns
popa
jae
push
xor
jbe
mov
sarl
pushf
mov
pop
sub
adc
cmpsb
mov
cli
cld
mov
fst
xchg
bound
ja
ja
or
add
jbe
cmp
andb
shrl
hlt
pinsrw
sbb
dec
in
inc
jbe
xchg
xor
xchg
push
das
xchg
xlat
hlt
lahf
lods
dec
in
les
push
stos
jnp
adc
add
pop
or
ljmp
bound
popf
jl
mov
and
lcall
rorb
aad
pop
test
mov
hlt
inc
leave
sub
mov
dec
dec
pop
mov
fisubrl
cmp
pop
in
push
test
mov
testb
mov
jl
push
fsubs
ret
xor
test
and
sar
adc
xchg
lods
jecxz
or
test
dec
add
stc
cwtl
imulb
mov
sahf
push
adc
mov
sbb
orl
in
lcall
mov
adc
ljmp
adc
add
dec
xor
jmp
lret
mov
jmp
lock
cmovae
int
cmp
add
push
jmp
xchg
mov
sbb
jnp
loopne
cmp
rcrb
lock
dec
xchg
test
icebp
jge
push
mov
fwait
imul
imul
xchg
mov
push
aad
mov
aam
nop
repz
push
jge
inc
mov
or
sub
push
mov
les
jl
sbbb
inc
fs
and
jbe
mov
cmpsb
xlat
jmp
lcall
call
and
cmpsb
push
repz
cmp
cmp
sub
lea
pop
jl
add
sub
loop
mov
push
dec
adc
ss
int3
add
test
or
orl
or
adc
enter
daa
xchg
cmpsb
je
mov
icebp
sbb
cmc
pop
or
inc
jle
xor
sub
ja
and
ja
add
lods
xchg
or
dec
sbb
nop
xor
cmpsl
sbb
out
rorl
adc
sbb
cmp
mov
leave
mov
test
jbe
outsb
les
sbb
add
push
jmp
out
pop
aad
in
out
dec
mov
mov
repnz
jns
sbb
cmc
sub
xchg
adc
pop
adc
iret
cmpsb
push
inc
jle
dec
roll
xor
sbb
pop
cmpsb
pop
stc
or
out
imul
jae
shrb
andb
inc
repnz
push
xchg
add
mov
inc
dec
cmpsl
cmp
ja
sbb
mov
call
orb
push
pushf
idivl
cmpsl
mov
repz
cmp
add
add
adc
or
and
loop
cmpsb
das
iret
mov
hlt
jl
movsb
xchg
pop
mov
std
inc
mov
cmp
add
cmpsb
push
dec
test
mov
ret
ljmp
and
push
hlt
fucomip
xor
mov
cs
pushf
push
or
test
mov
mov
cld
sar
xor
xor
test
jbe
push
add
mov
hlt
mov
pop
or
out
xchg
cmp
test
push
xor
mov
jb
sub
pop
xchg
xchg
cmpl
mov
lret
rcrb
in
insl
ljmp
cmpsb
nop
rclb
jae
stos
es
fists
nop
sbb
out
rclb
mov
cmp
cmc
add
sbb
mov
dec
inc
insl
lds
gs
mov
nop
or
mov
jmp
loop
jnp
mov
cmp
push
stos
fdivp
sbb
cmpsl
imul
adc
or
aam
push
push
or
aas
jae
cs
push
ret
cmpb
ds
and
pop
mov
stc
mov
dec
shlb
repnz
mov
push
adc
pop
jae
addr16
sbb
ret
adc
push
cmp
cld
sub
ja
stos
scas
push
and
xor
or
pop
lret
test
std
mov
cmp
fistpll
icebp
ljmp
push
es
in
mov
jecxz
clc
xchg
out
cmp
or
dec
jae
and
leave
mov
gs
rolb
lcall
jle
insl
mov
lret
negb
es
mov
fimull
and
jne
rcll
pop
mov
mov
fiadds
cmpsb
push
add
mov
inc
dec
stos
loopne
movsl
sbb
push
stos
dec
movsl
jb
sbb
shrb
add
dec
pop
test
adc
stos
jecxz
test
jnp
les
jp
fdiv
or
outsl
pop
mov
ficoml
xlat
es
mov
cmp
ss
inc
ss
add
inc
adc
xchg
iret
pop
push
push
fnstsw
repz
pop
xor
in
mov
fcoml
or
or
lock
andb
push
lea
loope
xchg
out
and
int
data16
ljmp
xchg
jl
sub
in
test
mov
lock
repz
dec
nop
cmpsb
adc
xlat
icebp
inc
push
sbb
adc
repnz
repnz
jp
jno
ljmp
loop
lahf
adc
les
mov
cmp
adc
xor
enter
cmp
or
pop
push
jo
pop
pop
mov
mov
pushf
add
pop
inc
inc
pop
sub
jecxz
add
xchg
hlt
jg
mov
xchg
out
cltd
adc
cmc
mov
enter
mov
test
addr16
fidivrl
inc
xchg
mov
lods
jnp
stos
test
movsl
popa
and
in
mov
pop
jmp
xchg
jp
fildll
lock
das
stos
mov
lock
dec
push
jmp
jae
addr16
cmc
iret
push
add
enter
movsl
or
inc
andnps
cmp
xor
test
jno
push
jb
push
test
jle
add
jno
cmpsb
cwtl
mov
es
and
pop
repz
fmuls
cs
push
mov
cli
movsb
aad
popa
rorl
add
adc
sbb
dec
fisubs
shrl
inc
mov
orl
xor
jp
cmp
enter
pop
push
repnz
arpl
mov
push
sbb
fmul
adc
outsb
push
leave
aaa
cwtl
andb
gs
push
xchg
pop
inc
scas
aaa
jp
dec
jp
push
ja
cmpsb
xchg
xor
repnz
ds
pop
add
push
push
add
push
je
fcmovnbe
sub
dec
bound
ljmp
mov
mov
bound
dec
cwtl
add
jne
adc
mov
cltd
loope
push
sub
adc
mov
cmp
fldcw
test
iret
sbb
test
mov
mov
xchg
loopne
xor
fcompl
or
and
fsts
ret
push
and
popf
or
push
inc
push
gs
and
or
shll
subl
xor
mov
int3
insl
dec
jns
loopne
mov
push
cmp
nop
enter
iret
mov
fcoms
cmpsb
movsl
in
cmp
xchg
mov
dec
fsubs
fcoml
sbb
mov
lods
pop
inc
aad
fimull
inc
cwtl
int
ss
fists
lahf
push
repnz
lods
and
adc
cmp
cmp
sti
idivb
int
imul
push
dec
jo
into
cmp
ret
out
emms
cltd
xchg
jno
inc
xchg
fcomip
int3
push
push
sbb
xchg
xor
rcrb
es
push
or
or
cmpsb
xor
dec
repnz
std
mov
add
xor
pop
cmp
fstps
adc
in
cmp
mov
out
lcall
inc
xchg
mov
mov
dec
mov
cmp
sbb
lcall
rolb
xchg
icebp
pusha
int3
nop
lret
mov
pop
aas
addr16
cmp
fldenv
mov
mov
je
sbb
xchg
sub
icebp
sti
pop
lods
xor
push
mov
mov
loopne
cmc
mov
inc
leave
mov
xchg
clc
lcall
out
stc
push
and
orl
push
add
xor
out
sub
sahf
dec
dec
xchg
xor
cld
mov
mov
out
ja
or
pop
and
mov
push
rclb
int3
adcb
cmp
add
mov
cmp
or
jle
cwtl
adc
outsl
jp
and
sbb
fmuls
leave
push
aam
jp
mov
cmp
sub
jge
out
jbe
lds
ljmp
mov
xor
add
xchg
sub
iret
or
es
mov
cltd
imul
sarl
pop
hlt
cmp
leave
call
sub
sub
push
fidivrl
popf
fimuls
mov
fistpl
repnz
cmpsb
jno
or
out
adc
mov
lods
pusha
loope
out
mov
movsl
stc
or
inc
outsb
jge
lcall
cmpb
outsb
sbb
ja
xor
add
adc
mov
adc
and
xchg
icebp
in
cli
imul
push
stc
lods
into
es
enter
add
sbb
repz
add
test
cmp
out
xchg
pop
clc
dec
add
pop
mov
cmp
jp
mov
mov
insl
rolb
stos
sbb
rcll
cltd
inc
fnsave
cmp
cwtl
loop
cltd
cmpsb
ficoml
fildll
xchg
out
out
inc
imul
mov
negb
repnz
std
jle
xchg
dec
out
sub
mov
clc
ret
repnz
std
ficoml
sbb
scas
andb
push
push
sarl
and
fildll
out
ds
push
cmpsb
faddl
enter
push
mov
mov
sbb
cltd
sub
lods
mov
lret
push
lock
inc
out
fs
lcall
rolb
mov
popa
cmp
loope
mov
pushf
in
dec
mov
mov
sbb
ret
out
loopne
or
add
cmp
aad
xchg
pop
or
fimuls
inc
mov
sar
cmp
lcall
rcrb
xchg
imul
dec
mov
or
insb
sbb
cltd
mulb
movsb
cld
insl
ljmp
fnstcw
aaa
jb
jmp
jle
fs
mov
loope
mov
mov
lahf
mov
jle
test
xorb
outsl
fcom
inc
and
mov
les
iret
iret
cwtl
jmp
mov
mov
adc
push
fbstp
ret
aad
out
data16
mov
stos
loope
xchg
push
lcall
cmp
inc
inc
cmp
pop
inc
cltd
int3
out
mov
aas
sti
repz
mov
xor
sbb
shlb
in
mov
sub
cmpsb
sbb
and
add
add
and
cwtl
mov
or
fstps
lock
inc
xchg
mov
movsb
xchg
pand
out
dec
fbstp
xchg
inc
cmc
xchg
leave
out
nop
mov
xchg
and
ss
or
mov
push
push
add
bound
cmp
cs
or
repz
ret
pop
popa
bound
adc
popf
lcall
mov
sarb
sahf
dec
sbb
jno
jne
jbe
lods
mov
into
les
es
xchg
ss
popf
pop
rcll
pop
mov
jmp
mov
or
adc
xchg
pop
inc
mov
push
cmc
mov
mov
xchg
and
addr16
mov
ljmp
xchg
jne
mov
int3
stc
out
cmp
sbbl
cmpsb
insl
push
fiaddl
cmpsl
cmc
sbb
push
scas
iret
setno
ret
lcall
fstl
hlt
mov
imul
xchg
es
test
dec
in
shlb
mov
xor
cmpsl
cmpsl
insb
lcall
inc
cli
adcl
mov
fdivp
shll
sbb
adc
mov
push
push
stos
fptan
loop
arpl
subb
lret
aaa
ljmp
lds
jp
cmp
cmp
xchg
push
es
popf
inc
mov
sbb
lahf
roll
fisubrs
stc
pop
jns
mov
xchg
xor
loope
xorl
ja
jo
enter
out
xlat
jns
dec
das
ret
divl
inc
adc
xchg
inc
adc
ss
cwtl
cli
cmpsb
shlb
push
adc
mov
jae
pop
insl
mov
jle
mov
add
sti
push
loopne
jno
xor
dec
xchg
and
add
mov
cmpsb
mov
repnz
clc
or
rcll
stc
cmpsb
jl
jl
and
pop
shrl
jns
pop
roll
mov
cmp
push
mov
aam
loopne
ss
jo
sbb
adc
mov
cmp
mov
mov
mov
cli
xor
sbb
add
cld
test
jp
ljmp
jmp
ficompl
into
out
sbb
push
out
cmc
xor
outsb
gs
pop
shl
adc
sub
xchg
add
cs
aas
movsl
outsl
mov
inc
adc
dec
mov
push
popa
inc
mov
insl
scas
pop
sub
call
pop
xchg
ljmp
push
clc
cwtl
es
mov
sbb
repnz
test
outsl
inc
lea
lock
int
pop
sub
popa
loop
call
push
sbbl
ss
shr
mov
push
inc
jae
int
pop
in
sbb
adc
iret
repnz
mov
adc
mov
push
cmp
cmp
xchg
ss
cs
sbb
ja
mov
rclb
rcrl
subb
iret
push
ret
mov
and
push
mov
push
jno
inc
add
add
pop
add
adc
push
shl
and
mov
loope
movsl
mov
pusha
es
shrl
mov
add
shl
dec
test
fdivp
add
adc
xor
clc
leave
xor
push
mov
sbb
push
xchg
mov
pushf
arpl
cmp
push
out
xchg
or
test
fmull
add
shr
mov
rcl
in
or
test
es
jb
mov
inc
sub
out
lcall
mov
jecxz
cwtl
in
sahf
aaa
sbb
xor
into
pusha
in
adc
dec
cwtl
or
mov
inc
jo
inc
lods
jp
sti
dec
imul
mov
cmc
rol
xchg
icebp
inc
out
cmp
pop
mov
or
and
sbbb
int
pop
js
outsb
mov
dec
and
int3
lods
in
icebp
cwtl
cmpsb
xchg
xchg
or
in
les
cwtl
icebp
movsl
bound
xor
add
or
sbb
xor
fcomi
mov
xorl
mov
das
in
sub
fsubr
jmp
out
jno
or
and
mov
mov
sub
aaa
cmp
xor
pop
gs
sbb
outsl
mov
cltd
cmp
ficomps
sbb
mov
xor
cmpsb
out
scas
ss
or
inc
pop
sub
leave
pop
xor
clc
adc
test
mov
jmp
arpl
outsb
nop
out
jno
aas
add
cmp
sbb
inc
mov
and
cmp
and
pop
cwtl
adcb
int3
sbb
arpl
inc
fcoml
push
sbb
dec
test
jb
out
cwtl
aaa
jns
nop
pop
repz
mov
xor
xchg
cli
adc
jns
cmpsb
into
mov
push
out
xorb
or
ljmp
jmp
jmp
clc
cmpsl
lock
jl
icebp
int3
pop
push
adc
addr16
sti
mov
inc
adc
in
mov
sbb
cli
mov
xchg
mov
out
sub
mov
cli
pusha
dec
dec
stos
jb
push
cmpsb
aam
in
push
dec
ss
in
xchg
pop
dec
ljmp
mov
rol
in
clc
jmp
push
pop
mov
pushf
divb
pop
insb
cmp
je
add
fmul
xchg
pop
fisttpl
mov
jno
mov
jbe
scas
inc
cmp
push
scas
inc
repz
clc
stos
lcall
mov
ret
ror
mov
sub
or
push
sub
pop
push
pusha
hlt
jge
xchg
idiv
mov
or
insb
popa
sbb
ss
les
sarl
stc
push
adc
loop
cltd
outsl
out
mov
jmp
lahf
mov
push
popa
pusha
dec
inc
inc
insb
mov
dec
ljmp
cmp
add
sub
sbb
mov
hlt
inc
pop
push
lcall
aas
xchg
mov
mov
sub
insl
sub
idivb
mov
outsb
dec
fnstenv
adc
iret
adc
lret
daa
icebp
mov
das
mov
push
test
mov
inc
clc
adc
das
inc
das
fs
andl
mov
loopne
divl
lcall
cmp
mov
pop
jo
push
das
lock
ss
jbe
in
mov
xor
add
cmpsl
inc
call
iret
ret
add
push
jbe
cwtl
movsb
out
xchg
nop
lcall
mov
xchg
sbb
imul
fcompl
dec
outsl
dec
rorl
mov
mov
mov
enter
test
repz
mov
pop
cmp
lahf
out
adc
pop
movsb
jbe
jae
xchg
lret
mov
mov
and
dec
sbb
mov
mov
stos
push
neg
int3
into
jle
xor
aam
in
push
es
insl
mov
rol
jb
and
push
int
mov
aad
stos
cmpsb
xchg
jmp
lret
shlb
jo
sbbl
adc
insl
sbb
ljmp
mov
arpl
setp
cmp
jne
push
out
mov
mov
shlb
cli
mov
jp
push
test
mov
adc
add
ljmp
adc
mov
jne
inc
or
or
sbb
aad
into
push
pop
mov
mov
adc
mov
rcrl
xchg
jnp
loop
or
popa
push
inc
repnz
cmpsl
int
mov
mov
es
jmp
jmp
cmp
iret
in
inc
jbe
aad
pop
jb
pop
inc
pop
xchg
or
out
adc
lret
cmpsb
in
scas
add
or
loopne
sub
out
jge
jbe
filds
add
mov
into
enter
scas
push
inc
jbe
cmp
lret
inc
lods
outsb
xor
xlat
es
nop
add
test
cltd
fsubrp
push
cmp
inc
fistl
xchg
andb
lahf
inc
push
and
add
jb
idiv
test
adcb
call
inc
shll
push
aam
cltd
mov
mov
add
pop
lcall
dec
into
add
or
mov
push
cmp
jecxz
pop
dec
adc
and
lahf
jbe
push
repnz
pop
lret
mov
jb
xchg
repnz
adc
es
push
cmpsb
imul
cmp
inc
sbb
or
shl
or
jle
shrl
mov
lahf
xor
sub
cs
stc
mov
push
mov
jmp
adc
roll
xorl
test
enter
mov
cwtl
dec
mov
lcall
fimuls
shr
cmp
pop
inc
outsb
adc
jb
or
sub
shlb
in
push
mov
sbb
andb
cmpl
insl
xchg
icebp
mov
arpl
ljmp
jns
mov
cmpsb
ja
mov
dec
xor
out
into
int
inc
xchg
js
leave
sbb
movsb
in
sbb
pop
aas
scas
xor
push
test
lock
shll
ret
fiaddl
out
sarb
mov
clc
inc
xor
dec
adcb
push
pop
jge
les
mov
popa
xchg
cmp
cwtl
cltd
ds
xchg
push
mov
push
push
inc
mov
fs
rorl
in
es
int
dec
fs
mulb
sub
jbe
sbb
js
mov
ss
lahf
sarl
jno
or
mov
cmpsb
lock
push
fstl
xchg
cmpsl
jo
xchg
push
add
jecxz
ds
mov
pop
loopne
dec
cmp
js
mov
dec
fs
dec
or
sub
mov
aaa
mull
jb
mov
es
leave
pop
icebp
pop
fwait
or
xchg
clc
jo
gs
dec
xor
adc
inc
insl
xor
mov
fwait
dec
daa
lret
out
pop
pop
xchg
jne
fmulp
add
leave
or
mov
mov
rol
mov
or
rcrb
movsb
add
int3
push
jnp
pop
adc
loope
int
pop
repnz
push
ja
andb
jae
mov
je
out
add
or
sub
mov
inc
cwtl
lds
xchg
adcb
push
dec
movsl
test
mov
cmp
jbe
xor
dec
lcall
xchg
lock
inc
inc
inc
enter
xchg
fmuls
xchg
insb
push
mov
adc
in
dec
or
pushf
jnp
rcrb
push
cmpsb
fidivrs
addl
jo
arpl
adc
lds
or
add
and
icebp
test
cmp
cwtl
fidivrs
jb
xor
and
push
rorb
pushf
outsb
js
das
mov
mov
jp
dec
xchg
lret
loop
mov
popf
mov
ds
jno
add
jbe
ffree
aas
mov
mov
dec
push
sub
mov
ficomps
gs
mov
dec
dec
push
cltd
jne
adc
lods
pop
inc
mov
idivl
or
je
out
push
sub
push
xchg
push
stos
fs
lahf
xor
inc
pop
dec
jb
xchg
push
sbb
dec
not
andb
mov
xor
xchg
lahf
pop
jbe
in
divb
adc
sahf
subl
jecxz
mov
push
adc
cmp
inc
inc
in
sbb
cmpsb
xlat
clc
sbb
clc
adc
xchg
xchg
rcll
shrl
push
mov
push
call
sub
insl
jnp
jmp
loopne
loope
mov
or
ja
lods
adc
add
shlb
mov
adcl
out
adc
xchg
fdivs
loopne
mov
ficoml
or
cmpb
call
out
dec
cmp
ja
fwait
lea
and
mov
adc
cmpsb
shrl
ljmp
xchg
sbb
test
pop
nop
pop
cmc
in
pop
andb
mov
stos
sub
cmpsl
lahf
add
xchg
push
imul
cmpsb
stos
out
mov
xchg
xlat
xor
cmp
je
jle
inc
push
sbb
jg
sub
and
sbb
xchg
data16
es
jmp
sub
gs
das
jmp
xchg
add
fs
push
addl
int3
es
inc
jnp
aad
divl
ds
add
push
loopne
movsl
test
mov
xlat
sub
lock
adc
jo
pop
adcb
int3
cmp
addl
cmpsb
add
or
sahf
mov
jp
int3
mov
out
or
cltd
clc
adc
sarl
xchg
mov
inc
inc
cld
and
mov
sahf
xlat
aam
cltd
stos
in
testl
pop
mov
mov
pop
and
mov
xor
cmp
cld
mov
xchg
test
mov
fs
ljmp
xchg
sub
xchg
rcrl
fdivrs
cltd
out
adc
hlt
pop
cmp
pop
loope
sarb
sbb
cs
roll
nop
cltd
cltd
inc
mov
mov
inc
xchg
cmpsb
sbb
sarb
sti
ficompl
sbb
lcall
jmp
or
outsl
je
clc
xlat
adcb
das
cltd
aad
mov
cmpsb
cli
out
or
ljmp
pusha
shlb
test
inc
mov
or
mov
addl
jae
in
enter
mov
dec
jb
loope
xor
in
repz
cltd
imul
jnp
mov
or
push
arpl
adc
xchg
les
mov
jmp
clc
inc
jp
rcrl
mov
int3
sti
icebp
xor
out
repnz
dec
outsl
repnz
gs
inc
insl
jns
es
jo
ja
mov
mov
inc
pop
push
lret
adc
mov
insl
leave
ret
enter
push
jno
pop
repnz
fcompl
cld
jecxz
mov
cmp
icebp
jb
dec
mov
push
in
adc
es
in
insb
iret
cmp
push
push
sbb
push
dec
jb
add
aam
leave
cli
jle
lret
insb
pop
adc
cmpsb
push
pop
pop
xor
dec
fidivrl
pusha
jns
cmp
xchg
sub
rcrl
inc
dec
xor
inc
mov
jb
cwtl
jnp
and
movsb
sbb
cltd
mov
sub
jl
and
mov
cltd
push
push
js
andb
jb
or
xor
ss
or
add
int
sub
popa
cmpsb
jge
push
nop
dec
push
sub
fistl
test
iret
addr16
int3
add
cmpsb
xchg
fidivrl
jp
imull
jmp
dec
mov
xchg
cmpsb
lret
popa
sbb
xchg
or
mov
sarb
es
outsb
xchg
enter
mov
ljmp
mov
ljmp
inc
mov
push
cmpsb
mov
loop
js
mov
lcall
ret
push
ja
sub
pop
xchg
aaa
sbbl
shlb
lods
shrb
movsl
inc
add
xchg
cwtl
in
outsb
lock
xchg
out
test
movsl
mov
and
mov
icebp
cli
push
xchg
iret
cltd
mov
jnp
pop
lret
hlt
pop
sbb
leave
movsb
es
or
xor
xor
cld
ret
repnz
xor
pop
decl
inc
add
mov
stos
add
dec
or
add
sbb
pop
cwtl
movsb
mov
jmp
mov
cld
push
jmp
sub
adc
mov
jge
jae
jne
pop
sbb
cmp
and
addb
pop
cltd
jno
outsl
fiaddl
push
xor
enter
hlt
jb
push
ret
jno
push
loopne
lret
mov
inc
jns
int3
imul
xor
push
cs
adc
xchg
es
cltd
cmp
je
imulb
xchg
sub
sub
xchg
adc
cmpsb
pop
hlt
fldenv
or
jmp
idivb
inc
int3
mov
adc
cmpsb
pop
and
or
mov
cmp
rorl
pop
insl
jp
out
sub
and
dec
sbb
cwtl
and
xor
jno
mov
outsl
mov
loopne
imulb
movsl
or
jl
xor
inc
add
pop
outsl
pop
ret
loopne
xchg
mov
test
adc
or
mov
in
and
mov
imul
add
into
clc
fldl
rcrl
test
add
rolb
dec
test
cltd
ret
pop
test
lds
ret
lahf
lcall
test
mov
dec
cwtl
testb
sbbb
enter
sti
pop
add
xchg
adc
es
aas
in
push
sahf
rorb
push
addl
mov
loop
js
hlt
mov
push
jne
dec
and
add
xchg
lcall
jge
jmp
fwait
int3
je
repz
dec
frstor
stc
sub
lock
pushf
lahf
jne
mov
loopne
inc
pop
adc
jl
xor
pop
xchg
mov
xor
add
dec
out
fwait
xor
shlb
sub
orl
jns
adc
adc
pop
mov
imul
adc
mov
mov
and
loope
test
in
std
div
sub
xor
cmp
xor
mov
ljmp
mov
call
pop
cmp
out
pusha
jp
push
inc
adc
scas
enter
scas
cmpb
aam
inc
push
push
iret
xchg
xchg
mov
sbb
mov
out
repnz
dec
dec
dec
sbb
push
mov
js
popf
mov
outsl
insb
mov
mov
shr
aaa
xor
cmp
cmpsb
xor
adc
icebp
pushf
jne
dec
push
fldl
shlb
gs
fwait
addb
sbb
mov
mov
xchg
cmpsb
pop
cmp
mov
adc
inc
sbb
cltd
fmuls
cmp
lds
aad
js
add
dec
push
nop
mov
lock
cs
lret
xor
int
enter
or
mov
repz
lods
or
mov
xor
or
mov
ret
mov
out
jnp
shl
push
cmovl
lock
shrl
cltd
cmp
jne
jecxz
cmpsb
mov
js
sbb
pop
sti
mov
jle
andl
sub
andl
shll
sub
sbb
faddl
or
or
fisttps
xor
pop
rsm
roll
cltd
out
dec
insb
cmp
into
jmp
mov
cmpb
fisttpll
lock
adc
jno
or
mov
jecxz
movsb
mov
es
into
dec
cmpsl
mov
push
push
or
rcrb
sub
pslld
repz
xlat
cld
adc
int3
je
mov
fucomp
lods
out
pop
add
cmp
inc
mov
dec
or
mov
out
fnstenv
dec
jnp
push
jmp
rcll
mov
push
out
outsb
pop
or
dec
cmpsb
lea
mov
insl
adc
jecxz
ds
rclb
popa
xchg
xchg
repz
pop
mov
cmpsb
jmp
addb
bswap
inc
mov
je
jl
adc
cli
mov
mov
adc
inc
aas
inc
imul
ds
dec
xor
movsl
loop
push
pop
inc
int3
lahf
xchg
cmp
mov
clc
mov
es
jns
out
inc
sub
xchg
insl
clc
pop
dec
dec
out
mov
aad
dec
jne
pop
sbb
arpl
es
mov
cmpsl
icebp
jl
push
and
scas
out
mov
xchg
pop
cmp
dec
dec
xchg
inc
sarl
push
js
je
roll
outsl
jbe
out
pop
movsl
jmp
jae
clc
cli
jmp
push
pop
sbb
in
pop
xchg
xchg
mov
stos
clc
dec
nop
lods
adc
out
jae
lock
push
or
ret
popf
cltd
icebp
cmpsb
je
jo
bnd
sbbl
xor
cld
in
jmp
mov
sbb
jo
jmp
notl
lods
add
jne
xchg
mov
mulb
ret
roll
out
imul
leave
aaa
aam
sbb
in
daa
shlb
push
adc
out
rorb
cmc
mov
dec
jae
push
and
jge
sub
adc
es
and
std
cmp
ss
xor
es
xchg
jp
addl
les
xchg
dec
mov
sbb
push
out
lods
repz
sub
andb
xchg
lret
dec
push
stos
lods
mov
jl
xor
ds
mov
add
cmp
fwait
mov
in
es
call
mov
dec
lret
loop
pop
out
rcrl
stos
fists
and
mov
jecxz
push
in
push
outsb
mov
xor
out
jne
xor
mov
xor
xlat
lcall
jno
rorb
mov
ret
adc
sbb
sbbb
adc
out
push
lods
push
adc
je
stos
adc
fcomp
loopne
out
dec
mov
dec
insb
pop
mov
dec
push
push
cmp
arpl
xchg
or
mov
mov
push
push
int3
pop
sbb
das
ljmp
cmpsl
inc
xorl
lods
xor
cmp
iret
inc
cwtl
movsb
insl
mov
and
enter
mov
pop
test
cmpsb
xchg
adc
push
pushf
sahf
nop
push
mull
scas
repz
aas
sbb
jp
js
lock
cmpsb
pop
loope
lcall
jmp
cmc
test
aad
fstps
mov
push
pop
jle
add
push
std
into
push
dec
and
lock
and
adc
mov
jns
es
out
scas
push
dec
std
cmp
lcall
cs
outsb
inc
add
stc
fnsave
pop
push
loopne
mov
mov
pop
nop
inc
lods
lds
push
fldpi
sbb
cmp
inc
sub
and
icebp
inc
hlt
daa
xchg
mov
and
out
out
push
scas
gs
test
add
daa
mov
add
aaa
jl
cltd
ljmp
mov
push
mov
lock
repnz
je
int3
sbb
xchg
jae
out
push
iret
data16
lret
sbb
scas
or
pop
roll
rorl
hlt
cmpsb
imul
iret
ljmp
fisubl
insb
mov
shl
or
push
shl
sbb
and
fbld
mov
fwait
mov
push
daa
dec
popf
jno
push
pop
mov
inc
mov
insl
adc
mov
sahf
xor
sub
jne
pop
out
jo
inc
arpl
mov
int
push
dec
ret
enter
cmp
inc
clc
inc
fwait
ljmp
stc
stos
jmp
or
out
cltd
sbb
dec
xchg
xchg
add
mov
mov
cld
sub
xor
sbb
imul
in
ret
mov
push
inc
lock
adcl
ret
pop
cmp
insl
outsb
mov
push
mov
popf
mov
xor
jno
cwtl
arpl
and
pop
call
xchg
movsl
mov
mov
in
cmp
sbb
xlat
into
mov
and
mov
inc
ljmp
in
icebp
dec
inc
rcrl
sub
test
js
sarl
cwtl
jmp
cld
cmpsb
fnstenv
sbb
ljmp
xor
jne
cmpsb
jae
in
jns
mov
sbb
aad
rdtsc
push
test
repz
insl
xor
std
aam
es
mov
rcrl
cmpsl
dec
or
mov
sub
pusha
or
popa
adc
loopne
pop
xchg
xchg
std
add
mov
ficoms
cwtl
std
mov
fcomp
test
int3
push
out
je
xchg
es
jg
add
jo
data16
pusha
daa
inc
xchg
xchg
cmpsb
hlt
fiadds
scas
iret
out
mov
inc
add
ficomps
pop
push
shll
jb
dec
call
jb
jmp
mov
pop
push
xchg
push
setg
mov
insl
mov
ret
shl
add
mov
out
mov
test
shlb
xorl
nop
cmpsb
xor
mov
cmpsb
push
and
leave
into
push
cld
sub
xor
dec
int3
push
or
ja
hlt
sti
dec
mov
or
mov
add
test
in
xchg
adc
outsb
pop
xchg
shlb
mov
push
mov
sub
fsts
out
pop
icebp
and
fstpt
and
jb
jle
xchg
fwait
xor
rcrl
add
jmp
adc
xchg
and
sub
sub
mov
into
sub
ss
mov
jp
push
pop
mov
cmpsb
movsb
repz
fistpl
sub
and
subb
mov
mov
push
jns
mov
popf
out
sahf
outsl
inc
aas
test
pushf
xor
sub
mov
xchg
xor
test
cmp
or
mov
scas
cltd
lcall
mov
loop
mov
dec
mov
jne
mov
mov
clc
adc
mov
into
es
xchg
dec
or
push
xor
sbb
inc
mov
fs
jmp
stos
pop
sbb
mov
mov
icebp
dec
jne
icebp
push
mov
inc
push
lods
pop
stc
dec
call
movsl
inc
cmp
in
mov
inc
dec
push
pop
pop
movsb
cmp
movsb
idivb
insl
push
mov
outsb
mov
jno
inc
ficompl
hlt
cmpsb
cmp
mov
xor
mov
pop
ljmp
cli
cmc
data16
test
jb
mov
setns
rclb
loope
outsb
push
pop
mov
fdiv
jp
es
aaa
inc
loope
inc
mov
push
es
sbb
sbb
pop
push
stos
pop
call
mov
fbstp
js
aad
stos
push
push
xchg
stos
repz
setle
jg
imul
lret
mov
lds
push
add
cmpsb
lods
repnz
sub
pop
dec
jbe
insb
ljmp
jb
nopl
cmpsb
mov
popf
push
xchg
pop
jns
cmp
mov
rorl
sarl
ficompl
iret
mov
xchg
pusha
mov
add
push
mov
into
jae
lds
jl
push
mov
lret
test
int
lock
xor
jmp
ds
rcl
add
sbb
add
inc
xlat
mov
in
icebp
ljmp
lds
adc
out
pop
leave
dec
xchg
loopne
jns
repnz
pop
mov
adc
jno
ficoml
cmp
test
in
insl
flds
lcall
es
mov
out
dec
jns
shlb
jo
test
test
mov
mov
aam
lahf
clc
fldl
xor
mov
push
inc
pop
mov
shll
xor
js,pn
js
cmpsb
arpl
pushf
out
leave
push
mov
mov
lock
sbbb
cltd
out
sahf
es
mov
lcall
bsr
into
fwait
dec
cwtl
popf
daa
bound
xchg
sarl
repnz
add
and
mov
cmp
sub
cmpsb
lea
jno
pop
mov
push
clc
or
sub
out
xchg
sar
lods
aam
jno
aaa
outsb
std
xchg
movsb
sbb
inc
xchg
push
icebp
fwait
inc
and
arpl
lret
xlat
xchg
or
lahf
ret
push
cmp
ljmp
cmp
or
push
mov
aaa
aad
stos
ljmp
push
div
push
subl
dec
xor
cs
pop
hlt
pop
lret
cmp
push
cmp
xor
xchg
movsb
in
mov
and
xor
pop
push
sub
cmp
test
jae
inc
movsl
mov
stc
inc
icebp
icebp
movsb
push
ljmp
imul
inc
jno
sub
mov
sub
jnp
sbb
mov
cs
sbb
ficompl
fcomps
cmp
data16
popa
cltd
cmpsb
inc
gs
inc
out
add
int3
pop
adc
fiadds
mov
adcb
cmpb
das
mov
jbe
pop
fdivrs
or
mov
mov
fwait
xchg
loope
cmpsb
imul
scas
bound
andb
notl
push
lahf
sbb
or
scas
lock
push
cwtl
mov
add
into
and
cmpsb
rorl
mov
cmc
imulb
jp
daa
ret
cmp
sbb
clc
xor
cmp
sti
dec
cmc
adc
mov
cmc
mov
js
iret
fcmovb
sbb
jmp
xchg
out
shll
pop
cmp
add
insl
cmp
pushf
das
dec
cwtl
cmp
fld
shll
ds
popl
movsl
mov
fisubrl
jmp
pop
cmc
shlb
ljmp
add
sbb
mov
xchg
repz
fs
mov
rcr
pop
push
mov
push
lods
daa
loope
mov
mov
xchg
or
cmpsb
sub
es
mov
dec
xor
mov
sbb
out
in
test
cmpsb
jbe
rol
push
int3
outsl
ljmp
mov
push
inc
fsts
lods
pop
out
fmulp
or
fcomp
pop
pop
or
icebp
dec
dec
mov
add
pop
mov
jp
mov
jecxz
clc
xchg
push
in
jns
loopne
lcall
sub
callw
aam
mov
idivl
jo
ret
add
fwait
mov
mov
loope
dec
popa
sub
cld
pop
pop
shlb
jge
adc
inc
push
jecxz
or
mov
lret
aad
inc
into
shrl
xchg
and
sbb
or
cmp
jmp
insb
int3
jne
add
aad
mov
dec
cld
push
lods
cmpsb
push
in
mov
lods
inc
jp
cmpl
fs
icebp
shll
mov
ret
adcb
shr
ljmp
dec
push
adc
cmpsb
dec
jno
lods
xchg
cmpsb
aam
mov
cmc
adc
sbb
sbb
insb
mov
push
adc
repz
les
lret
les
and
push
xor
mov
sub
lcall
pop
inc
pop
mulb
xchg
xchg
mov
popa
mov
cmpsb
xor
pop
outsb
mov
repnz
xor
pushf
adc
ss
insl
pushf
loopne
lock
pop
mov
daa
push
pop
add
mov
mov
out
fdivrs
les
pop
jecxz
dec
lret
subb
cmpsb
subl
pop
rcl
and
sbb
ffreep
adc
add
add
dec
stos
pop
and
std
sbb
sbb
repz
or
mov
xchg
xchg
mov
aam
outsl
cmp
cwtl
jl
jns
dec
dec
push
lahf
repz
cmpsb
mov
or
mov
pavgb
dec
add
ljmp
xchg
nop
inc
dec
or
adc
cmp
jo
inc
xchg
adc
fucomp
cmpsl
pop
cld
gs
mov
lods
xchg
cwtl
push
or
stos
mov
or
mov
add
ret
js
outsl
or
add
clc
imul
xor
push
sbb
mov
ficomps
in
jae
inc
adc
lods
cltd
ljmp
in
ret
xor
push
dec
test
out
loopne
xchg
add
cmpl
out
adc
push
loop
jp
cmpsl
hlt
inc
call
cmc
or
inc
sub
adc
sub
mov
jo
add
mov
bound
stos
jmp
faddl
mov
mov
rcl
lcall
dec
sbb
or
arpl
inc
jne
lcall
bound
xchg
push
jg
mov
stos
mov
lcall
repz
outsb
jb
cwtl
mov
test
push
testl
pop
lret
push
jnp
sbb
jns
fcmovu
into
adc
adc
test
rolb
mov
dec
test
and
lret
call
jmp
mov
shll
xchg
xchg
sbb
daa
repnz
pop
loopne
sub
repz
mov
insl
mov
xor
fcomps
adc
mov
sbb
inc
jno
mov
ficompl
fnstenv
into
vcvtps2dq
xchg
xchg
adc
shl
fwait
lcall
cmc
lret
mov
jecxz
lods
xchg
daa
sysenter
lret
ficoml
pop
lcall
cli
negl
outsb
xor
lcall
mov
fsubrs
push
sbb
or
mov
pop
lods
cmpsl
xchg
pushf
jp
dec
mov
and
pusha
mov
imul
pop
lcall
xchg
lcall
pop
or
or
andb
cwtl
pushf
insb
pop
pop
cs
cmc
mov
mov
lcall
lahf
pop
fsubrs
mov
loop
pop
ret
jg
sbb
lods
cmpsl
mov
add
sbb
jmp
shrl
adc
mov
sub
stc
xor
xor
cld
test
decl
cmovns
fmull
repnz
mov
jb
cmp
xchg
iret
fistps
fmuls
or
pop
lods
xchg
inc
mov
and
xlat
mov
dec
jns
fmuls
mov
ficoms
lcall
pusha
and
mov
xlat
out
lcall
pop
cmp
lret
aas
lcall
loope
mov
fsubs
jmp
lcall
xchg
dec
mov
loop
mov
xchg
int3
sub
cltd
or
lcall
inc
icebp
jge
dec
push
rorl
mov
out
aas
xchg
jl
rcrb
insl
push
adc
mov
jae
and
movsb
std
lcall
repnz
cmp
mov
fdivrs
push
ficompl
movsb
movsl
fwait
mov
jo
dec
cmpsb
dec
les
pop
pop
inc
sub
xchg
or
push
jno
rcrl
iret
mov
xchg
push
xor
out
add
fnstenv
popa
aaa
lcall
shlb
repz
into
or
inc
xor
cmp
outsl
adc
pop
inc
aas
mov
dec
mov
cmp
jne
enter
pop
in
cmc
and
test
fsincos
adc
xor
outsl
out
cmpsl
fidivrl
sub
mov
je
lcall
out
pop
sbb
lcall
pop
push
sub
adc
insb
jmp
lcall
into
in
sbb
cmp
mov
mov
pop
mov
dec
out
mov
fldenv
stos
sbb
mov
jle
push
ror
movsb
stos
inc
js
hlt
stos
mov
sub
add
xchg
aas
jp
lret
sbb
inc
pop
popa
inc
sub
mov
jb
insb
mov
movsl
cs
rolb
lcall
mov
sbb
ds
pop
mov
cwtl
js
mov
push
popa
mov
out
cltd
aam
mov
mov
inc
imulb
pop
daa
jo
rcrb
out
mov
loop
sub
dec
sbb
mov
loope
sbb
xor
or
and
mov
lcall
sarb
jo
and
and
sub
imul
in
and
lcall
mov
mov
sbb
pop
pop
fistpl
movsb
subb
xor
xor
or
mov
pop
lods
mov
scas
pop
mov
aad
lcall
dec
mov
xor
jp
xchg
add
mov
pushf
iret
or
push
ja
jecxz
jb
pop
out
sti
xor
mov
pop
aaa
cwtl
pushf
cmpsb
sbb
jp
testb
sub
lcall
push
xchg
in
mov
sbb
ror
jp
out
lcall
in
fists
outsb
imul
and
lcall
lds
push
mov
mov
add
xchg
adc
rcr
or
or
int3
xorb
icebp
lcall
adc
call
mov
in
mov
mov
xchg
ror
pop
mov
cltd
out
stc
lcall
mov
lcall
int
lcall
sbb
mov
push
aaa
xchg
lcall
xlat
repz
je
ret
bound
cli
xchg
xchg
int
push
pop
push
xor
fimull
cltd
outsl
into
imul
imul
mov
cld
imul
jp
mov
mov
mov
imul
cs
cmp
icebp
jp
dec
fwait
scas
xchg
lret
jbe
xchg
clc
jle
xchg
sbb
sti
cmp
outsl
mov
mov
mov
cli
xchg
jbe
adc
ficompl
mov
mov
push
cltd
pop
es
imul
js
xor
ljmp
cltd
jmp
sbb
imul
mov
jp
jno
es
mov
sbb
cmpsb
popa
push
sub
ret
mov
sub
xchg
sub
xchg
mov
jle
inc
push
cltd
mov
and
outsb
out
lcall
cwtl
sub
mov
cltd
pop
pop
pop
or
inc
lcall
andl
repz
xor
xchg
adc
pusha
stos
rcrl
push
sub
add
jno
popa
mov
int3
inc
cli
mov
xorl
lcall
xchg
mov
stos
jle
cmp
ja
in
cwtl
jno
fidivl
jnp
jnp
jae
aaa
mov
lcall
jb
enterw
pop
repz
pusha
fimull
pop
adc
cwtl
xor
xchg
jle
or
pushfw
adc
cmpb
pop
out
and
fdivrl
mov
jnp
dec
add
sub
sti
cltd
fldcw
stos
inc
gs
jge
jo
push
push
adc
aam
xchg
out
inc
jg
jp
lcall
cltd
mov
outsb
popa
pop
inc
jp
adc
sar
das
movb
mov
jl
xorl
pop
adc
push
dec
xchg
cwtl
push
xor
sarb
add
mov
jae
mov
jmp
xor
lea
or
fimull
ret
lahf
lcall
sub
push
rdmsr
add
lcall
jp
f2xm1
sbb
stc
lods
scas
lcall
jno
adc
sti
sbb
sahf
inc
aaa
adc
jle
push
xchg
mov
dec
sbb
inc
dec
mov
sbb
or
mov
dec
pop
sub
dec
push
xchg
stos
int
pop
insl
lea
cmc
insb
incl
mov
xchg
pop
mov
sub
dec
pop
jge
punpcklbw
filds
cmpsl
out
repz
sbb
cld
push
orb
outsb
loope
lcall
stos
adc
aas
inc
mov
lcall
sub
sub
notb
enter
lcall
call
inc
inc
push
int3
sahf
mov
cltd
mov
lds
push
cli
xchg
setp
fwait
repz
in
adc
sbb
cli
mov
stos
pop
fsubrs
xor
ds
test
mov
sbb
pop
or
das
xchg
xchg
mov
dec
mov
jo
lcall
leave
add
aaa
lahf
xchg
mov
xor
lret
xchg
mov
mov
jp
nop
inc
cltd
sarb
adc
or
repnz
es
lock
ljmp
jecxz
add
and
fimull
lcall
adc
clc
in
lcall
inc
sbb
fs
testl
push
dec
pop
rcl
mov
pop
arpl
cltd
rorl
in
fbstp
icebp
cmp
dec
into
pop
or
rclb
adc
lcall
movsb
sbb
dec
aaa
jp
imulb
push
fcmovb
das
stos
pop
pop
pop
or
pop
lcall
push
and
xor
cmp
xchg
fimull
loopne
pop
xchg
mov
dec
cmp
outsl
jg
cmc
pop
cld
lret
push
mov
sahf
jnp
jns
pop
imul
cltd
dec
add
ljmp
sti
xchg
rcr
stc
ljmp
leave
lcall
xchg
test
cmpsb
cmp
pusha
mov
outsb
lods
lcall
lcall
nop
jns
cmp
sub
addr16
xchg
pop
mov
jmp
sbb
xchg
dec
pop
bound
sub
mov
mov
out
mov
add
testb
xor
push
dec
xchg
xor
sbb
mov
stc
fists
lret
popa
mov
shlb
jl
das
hlt
fisubrl
sbb
inc
out
or
cwtl
cld
cltd
push
cmp
js
push
push
adc
push
loope
jns
inc
lcall
cmp
adc
fisubrl
sub
mov
lcall
mov
lcall
mov
adc
int
xchg
sbb
sarl
xchg
mov
das
cmc
loope
mov
movsb
push
idivb
xchg
xor
lcall
lcall
pop
dec
in
ret
xchg
mov
repnz
test
pop
dec
xor
or
sbb
js
lcall
cmpsb
push
lcall
push
xor
andl
xchg
fsubrp
jp
pop
jae
dec
or
or
dec
ror
pop
xor
sub
xor
lcall
mov
push
nop
imul
jnp
sbb
pop
jnp
movsb
xchg
mov
sahf
xchg
xchg
orb
lock
jae
push
shlb
lret
xor
scas
xor
cmpsb
sti
mov
repz
adc
rclb
xor
xor
mov
mov
mov
mov
scas
xor
lret
or
lods
xchg
push
jg
repz
sahf
cmp
push
inc
dec
cmp
scas
mov
lahf
xchg
adc
repz
roll
xor
adc
jae
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
dec
or
cmp
imulb
icebp
and
and
and
fsubs
aad
shll
int3
and
mov
mov
dec
mov
fisttpl
push
cld
stc
jnp
ss
xor
leave
sub
shlb
push
mov
xor
stos
push
sub
loopne
fbld
gs
adc
fld
stc
lods
xor
cmpsl
and
mov
jmp
int3
mov
es
push
pushf
sbb
adcl
jl
cld
mov
sti
jnp
in
sti
jmp
sti
int
sti
mov
sti
and
fwait
xchg
xchg
add
xor
adc
jae
push
ret
xor
push
xchg
dec
pusha
inc
fidivrl
push
xor
dec
and
and
pop
sbb
xchg
push
lea
inc
xchg
subl
push
std
xor
movsb
cmp
jg
push
sti
dec
ja
dec
cmp
inc
sub
and
mov
je
mov
daa
mov
jle
incb
xor
adc
rclb
xor
data16
xchg
inc
jl
ss
mov
mov
loope
loopne
repnz
cmp
and
add
mov
mov
test
pushf
mov
jge
std
jecxz
sarl
sti
inc
sti
sub
repz
shl
xor
jae
pop
sbb
push
push
int3
dec
dec
inc
mov
das
mov
jle
test
cmpsb
pop
movsb
cmp
jge
jge
std
jmp
sarb
aaa
sti
and
out
fnsave
ret
jae
push
mov
mov
das
xor
cmpsl
xor
jl
repz
rorl
jae
push
insb
mov
push
mov
pop
pop
clc
ja
addr16
push
pop
inc
push
aaa
push
daa
push
daa
dec
daa
mov
daa
test
ss
sub
es
and
push
test
push
inc
mov
mov
push
or
stos
insl
jno
js
in
sti
xchg
ret
pop
add
ds
push
or
sub
mov
outsb
xor
lds
inc
cmp
sub
movsl
push
lahf
push
sbb
insl
jle
stos
mov
mov
lock
pop
cmp
arpl
mov
xchg
std
or
test
inc
jg
cld
daa
cli
daa
insl
daa
call
daa
pop
daa
lds
cmp
mov
lods
sub
xor
call
mov
fstp
test
loope
loopne
arpl
adc
imul
rorb
dec
and
push
xchg
jnp
pop
mov
addr16
movsl
mov
xchg
imul
sti
clc
repnz
lcall
out
loop
fimuls
pushf
into
pushf
lret
inc
xchg
dec
mov
dec
scas
dec
stos
dec
cmpsb
dec
mov
std
loope
xchg
or
lret
mov
xchg
sti
jle
jp
dec
repnz
out
iret
ljmp
fidivl
xor
xor
xor
ss
mov
mov
mov
cmpsb
daa
mov
xchg
rcll
push
and
daa
mulb
repnz
out
daa
ljmp
daa
fisubl
daa
shlb
into
daa
lret
daa
ret
daa
mov
daa
scas
test
aam
sahf
inc
movsb
xchg
jno
mov
cmp
and
out
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
xchg
enter
cmp
and
and
and
and
and
and
and
and
and
and
and
and
and
mov
push
mov
jg
pushf
cmpsb
aaa
fdivrp
xchg
pop
nop
ja
mov
inc
mov
xchg
test
subb
aam
in
loop
loopne
ficomps
pushf
pushf
lret
pushf
mov
mov
mov
mov
scas
pushf
lods
pushf
stos
pushf
test
cmpsb
pushf
sahf
sbb
loop
pop
hlt
cltd
push
xchg
mov
cmpsl
test
outsb
mov
sti
loop
fisubs
jae
aam
rolb
pop
xchg
sub
sti
mov
repz
jl
cld
jle
jl
jp
clc
sti
idiv
hlt
sti
in
sti
fdivr
fdivr
sti
aam
rclb
push
enter
mov
xchg
pop
jnp
daa
cmpsb
daa
movsb
daa
mov
daa
pushf
sub
jle
jbe
jp
clc
and
push
hlt
push
repnz
lock
call
push
shl
repnz
pushf
int3
pushf
lret
pushf
mov
lods
fldt
fistpl
mov
jle
jp
clc
fdiv
fcomi
fcomi
fcomi
fucomi
fucomi
fucomi
fneni(8087
fcmovnbe
fcmovne
cmc
lret
jns
cmp
rcrb
push
mov
sahf
pushf
pushf
rcll
lret
nop
rorb
fucomi
fucomi
fucomi
fucomi
fnsetpm(287
fnclex
fneni(8087
fcmovnu
insb
int
ret
sti
mov
sti
mov
xorl
xor
nop
inc
mov
loopne
test
pushf
out
in
loop
loopne
ficomps
mov
mov
scas
fldt
jg
push
mov
inc
test
xorb
sub
jl
jp
lock
and
and
mov
push
rcrb
rcrb
into
push
int3
push
ret
push
scas
push
lods
push
stos
push
test
cmpsb
push
movsb
push
mov
xchg
xchg
incl
jle
jl
jp
clc
push
negb
hlt
push
repnz
out
pusha
test
sti
aam
dec
sti
dec
sti
mov
sti
cmpsb
sti
movsb
or
pushf
mov
in
ja
addr16
aaa
loop
loopne
aam
into
daa
int3
daa
mov
daa
mov
mov
mov
mov
scas
daa
lods
daa
stos
and
jnp
adc
out
fdivrl
jl
hlt
xchg
dec
dec
mov
xor
addb
shlb
push
loopne
ficoml
call
subb
out
outsb
jg
insb
loopne
fildll
frstors
pop
cmc
pop
adc
pop
xor
push
xor
push
xor
dec
jle
loope
shlb
or
ret
mov
jbe
ret
iret
sub
mov
or
jl
cld
dec
sbb
jnp
sti
stc
push
and
sarb
add
jb
aas
mov
mov
repz
jmp
pop
ret
addr16
pop
data16
mov
loope
loopne
fistpll
mov
mov
mov
mov
scas
fldt
cmp
and
mov
outsb
mov
jl
pop
push
pop
test
cli
or
ss
xor
jnp
jge
std
pop
jl
sti
std
jge
std
in
jl
cld
fildl
int3
aam
lret
outsb
adc
leave
andl
ja
addr16
xor
xlat
dec
xchg
add
int
ret
push
mov
pushl
jbe
stc
xchg
sub
sbb
xor
mov
push
cmpsb
adc
adcb
aad
leave
pop
inc
clc
inc
stos
cmpsb
sbb
cwtl
loopne
cmc
ja
in
jnp
sti
sub
sbb
xchg
jecxz
out
fldcw
add
insb
fbstp
ficomps
std
fcomip
fisubrs
fildl
pop
mov
push
mov
adc
dec
xor
mov
xor
scas
cmpsb
mov
cltd
jo
imul
fldt
xorb
pop
ss
pop
mov
mov
dec
and
inc
jg
test
decl
jge
std
pop
pop
dec
push
shlb
lahf
sub
xor
outsb
sub
sahf
arpl
pushf
pop
pushf
push
pushf
ror
in
fisttpl
fcmovnb
fcmovnb
fildl
cmp
fldt
fldt
fistpl
dec
nop
adc
mov
ljmp
push
daa
shrb
mov
orb
insb
pop
pushf
dec
stos
push
fwait
dec
xchg
jns
mov
mov
loop
lret
je
orl
aas
mov
xor
rcrl
push
movsb
pushf
ljmp
hlt
insl
jl
add
pop
mov
pop
push
daa
int3
daa
ret
daa
inc
daa
cmp
xor
sbb
or
iret
shll
adcl
addr16
outsl
inc
loope
pop
daa
shll
inc
daa
cmp
daa
sbb
add
jae
bound
fisubl
shll
inc
mov
popf
fcoms
orb
test
stos
jl
repnz
cmpsb
out
mov
mov
mov
adc
adc
lds
or
jl
test
mov
mov
mov
fsubrs
xchg
movsb
mov
jne
push
rcrl
rorl
nop
fcom
mov
iret
mov
into
xchg
test
subb
cltd
jp
clc
fmul
hlt
ret
iret
enter
call
push
faddl
aam
rcl
rorb
ror
mov
rcrb
jb
or
pushf
mov
mov
mov
push
repnz
mov
iret
mov
in
push
call
loopne
mov
fcmovu
repz
mov
call
mov
dec
mov
mov
mov
lods
dec
stos
dec
cmpsb
dec
movsb
shll
cmc
or
hlt
and
jp
icebp
jne
xchg
cmpsl
out
data16
jb
or
dec
cmp
mov
and
and
mov
adc
or
test
dec
cltd
jbe
lock
jmp
iretw
popa
jae
and
daa
ret
daa
mov
test
xchg
mov
sbbb
mov
out
mov
add
and
push
push
dec
push
enter
sahf
xor
mov
cld
jmp
iret
test
stc
xchg
orl
fsubrl
gs
fcmovnbe
fisttpl
dec
fcmovnb
fstpt
adc
popf
cmp
add
push
mov
neg
sti
jne
adc
adc
add
dec
rol
dec
scas
jl
pushf
xchg
push
add
lret
ss
sub
insb
ljmp
pop
sarl
ret
add
mov
repz
call
xor
dec
xor
xor
daa
aaa
daa
xor
mov
sub
mov
and
roll
test
add
std
fstpt
jne
jb
mov
in
pop
xor
push
push
push
into
push
dec
push
inc
push
ret
push
ds
cmp
mov
lods
pushf
sub
mov
jge
dec
adc
add
dec
sarl
mov
test
lods
fldl
out
out
lods
icebp
mov
sub
xor
dec
notb
xor
cmpb
fdivrs
rorb
sar
xchg
sbbb
clc
out
hlt
xacquire
mov
pop
mov
and
and
mov
rolb
or
xchg
rclb
fwait
sub
mov
jl
sub
lcall
dec
test
clc
loopne
hlt
lret
popf
or
dec
out
push
in
mov
push
les
ret
push
mov
popf
mov
addb
clc
xchg
mov
pop
mov
xchg
je
insl
daa
in
pop
test
xor
fwait
mov
jne
in
movsb
int
fsubrl
or
or
dec
push
jnp
cmpb
js
lock
gs
xor
lret
data16
push
movsb
sahf
sbb
loope
loopne
ss
imull
jle
xor
jg
or
xor
loope
jbe
in
daa
mov
loopne
push
jle
icebp
js
pop
ja
call
push
push
cmp
push
sub
push
and
dec
and
dec
mov
inc
fildl
adc
xor
xor
xor
daa
xor
mov
adc
push
dec
or
or
or
add
mov
inc
mov
jbe
je
jb
jo
outsb
push
insb
push
push
push
orb
xor
cmc
push
xchg
mov
pop
mov
outsl
rcl
lret
mov
mov
pushf
mov
mov
mov
mov
scas
pushf
lods
pushf
stos
pushf
test
pushf
mov
pushf
popf
pushf
fwait
pushf
xchg
lret
mov
cltd
cld
cs
sub
jbe
je
mov
fwait
outsb
pushf
insb
int
jne
adc
pusha
ss
inc
stos
pop
cmpsl
pop
orb
and
jle
cltd
cmp
sub
sti
jbe
mov
lret
mov
mov
pop
idiv
jne
mov
movsb
data16
ss
xor
adcl
add
out
lret
push
aas
mov
stos
fistpl
dec
push
inc
mov
cmp
lods
lods
pop
stos
lahf
mov
or
add
aaa
cld
daa
stc
daa
imulb
pushf
ljmp
jbe
pop
pop
lret
leave
test
scas
lret
pushf
mov
jg
cmpsb
loopne
test
xchg
stos
jle
lods
fcomi
fcomi
insb
out
sti
out
loop
ficomps
test
lret
pushf
inc
shrb
adc
cmp
fadd
fsubl
jl
aam
fistl
sahf
dec
bnd
fildl
sbb
addr16
pop
fsubs
rorl
or
xchg
clc
repnz
loop
xchg
or
mov
stos
je
mov
loopne
dec
test
jne
mov
push
pushf
ss
mov
mov
addr16
test
xchg
jmp
test
or
outsb
ret
push
stos
xchg
xor
fildl
lock
xor
stos
mov
lock
shll
push
fcompl
sub
and
and
mov
pushf
in
decb
or
dec
out
iret
in
cmp
push
push
ss
xor
xor
fidivs
push
mov
inc
mov
xchg
cmpb
jl
jp
clc
and
and
and
and
sbb
ljmp
xchg
rcll
mov
mov
mov
xchg
test
andb
adc
clc
xor
ss
loop
fcomi
fucomi
in
in
adc
call
loop
loopne
into
sti
fdivr
fdivr
pop
aam
out
test
sti
int3
sti
lret
sti
sti
les
mov
stos
ret
jge
jge
std
cmpb
or
cmp
lock
out
push
in
adcl
call
stos
or
cmp
fdivrs
mov
adcl
shl
scas
jne
fldcw
les
stos
mov
cmp
mov
cmpsl
jne
fldenv
movsb
stos
movsb
mov
mov
mov
lock
call
jle
ss
mov
test
rcll
icebp
jb
lods
in
lods
mov
cmpsb
out
popf
xchg
cwtl
cld
mov
xor
not
jp
sarb
leave
clc
pop
in
cwtl
lret
sub
mov
jnp
int3
xchg
cmp
lret
cmpsb
mov
dec
mov
mov
mov
nop
lods
fmul
or
dec
dec
mov
mov
clc
ret
pushf
repnz
call
push
rcrb
xchg
mov
data16
incb
mov
mov
mov
sbbl
ljmp
push
lret
mov
cwtl
test
hlt
dec
push
mov
scas
dec
lods
cmp
test
mov
test
xchg
test
mov
in
loop
loopne
xlat
fsubrl
and
stos
pushf
test
jl
xchg
cs
sub
clc
insb
jl
sti
gs
aam
les
mov
mov
xorb
stos
and
es
push
loop
mov
test
mov
sti
mov
jns
hlt
clc
cmp
jne
fmul
cmc
fdivrs
shlb
into
daa
int3
sub
mov
mov
jnp
stos
or
push
xchg
mov
mov
xchg
nop
out
xchg
in
mov
ljmp
xchg
xchg
decb
pop
jbe
mov
dec
cld
movsb
jnp
lret
pushf
adc
cltd
push
mov
cwtl
sti
sbb
mov
jbe
mov
xchg
fadds
les
enter
and
shlb
inc
pop
aam
add
std
mov
bound
dec
ret
push
xor
fsubl
orl
scas
pop
cmc
in
ljmp
pushf
mov
pop
mov
out
rcl
inc
shl
jbe
xchg
jge
std
pop
jl
or
pop
repz
sub
or
out
dec
pop
roll
insb
shrl
repz
repz
arpl
push
cmp
mov
loopne
adc
incb
pop
mov
mov
rorb
cmpsb
adc
mov
ret
mov
jge
repnz
cmp
imul
lds
cmp
adc
push
fldcw
pop
loopne
xor
fdivp
iret
cvttps2pi
rolb
out
xchg
push
fildll
fwait
xor
mov
loope
loopne
jbe
jecxz
mov
mov
cld
repz
stc
cli
lcall
adc
ljmp
std
or
jae
and
adc
inc
xlat
inc
push
mov
and
mov
pop
lds
cs
gs
scas
pop
sti
in
mov
call
mulb
fmuls
inc
shll
mov
cld
and
ss
mov
shl
dec
fbld
jle
dec
lds
xchg
stc
pop
jno
popa
jmp
add
push
sti
adc
inc
xchg
iret
ss
int3
rorl
dec
fsubr
ljmp
imulb
xchg
xchg
call
sbb
loopne
aam
aad
mov
add
xor
xlat
add
push
loopne
je
mov
push
test
mov
scas
jmp
mov
cli
movb
sti
test
and
jg
push
fs
sub
cmpsb
dec
pushl
push
icebp
xor
sbb
pusha
loopne
cld
in
mov
test
bound
fisttps
scas
movsb
enter
pop
mov
xchg
xchg
stos
out
out
add
pop
xchg
sbb
mov
loope
loopne
lock
mov
nop
mov
test
jg
jge
std
or
or
or
pop
imul
rclb
jle
push
cwtl
lcall
nop
decb
imul
sarl
aad
sbb
xor
loopne
imul
xchg
push
out
and
pop
xor
sti
cmp
mov
adc
arpl
ljmp
mov
mov
mov
dec
pop
mov
cmpsb
ret
sarb
fisubs
fimuls
jne
cmp
cltd
cmc
sti
pop
mov
and
jae
jno
outsl
and
imul
mov
jle
std
lods
pop
cmc
pop
mov
mov
add
lret
lock
mov
ljmp
fwait
push
xchg
mov
pop
adc
jnp
jns
divl
icebp
fucomi
fucomi
fucomi
fucomi
in
out
jge
xchg
loope
fbld
frstor
cmp
cmp
jns
out
push
lret
cmpsb
pop
movsb
pop
or
adc
mov
adc
push
xor
das
imul
mov
popf
and
incb
gs
dec
cmp
inc
fmulp
pop
mov
cltd
loop
jle
loopne
mov
xchg
mov
mov
mov
mov
push
add
xchg
xchg
add
popf
jb
dec
mov
xor
addb
mov
pop
dec
push
mov
stos
jnp
add
add
mov
clc
jnp
sti
sti
roll
int3
jns
cli
jecxz
push
sub
and
jg
sub
jnp
js
jae
dec
in
loopne
xchg
rorb
mov
outsb
mov
xchg
sbb
nop
xor
mov
hlt
rorb
in
loopne
fsubrs
mov
enter
rcrb
jae
mov
movsb
pushf
mov
aaa
in
js
lret
rolb
mov
call
xchg
push
enter
dec
cwtl
xor
sti
lahf
xchg
push
loop
shlb
ret
push
mov
mov
movsl
int3
popf
or
dec
into
test
mov
add
fsubl
ljmp
dec
cwtl
leave
les
int
hlt
sbb
mov
jns
mov
pushf
sarl
push
out
inc
test
lahf
clc
sti
stos
sti
cmpsl
sti
fwait
add
or
pop
sub
jns
idiv
jmp
jmp
pop
sbb
loopne
ret
aas
int3
jp
lods
fnstcw
stos
notl
push
xchg
ss
jge
in
xchg
pop
push
ja
in
pushf
out
fstps
xlat
arpl
mov
mul
push
ret
stos
data16
or
jns
jbe
sti
loopne
fdivrs
jg
mov
sub
sub
dec
popf
push
xchg
add
pop
cld
js
mov
jmp
daa
mov
mov
int3
xchg
fsubr
std
nop
add
mov
xchg
subb
ss
push
pushf
mov
xor
xorb
fnsetpm(287
imul
xor
xor
jl
sar
mov
mov
mov
cmp
enter
out
fists
fidivrs
int
mov
fisubl
sub
lret
or
adc
jp
clc
cmp
hlt
xchg
in
sub
mov
lahf
and
shll
mov
mov
push
int3
cwtl
out
lret
fbstp
mov
mov
mov
mov
lcall
jns
test
mov
push
push
jnp
push
mov
cli
dec
addb
mov
add
fldcw
cmp
xor
test
shl
ficoms
ret
sti
cltd
add
jbe
xor
mov
ja
out
xchg
int
loopne
cmc
xchg
adc
pusha
sub
cmpsl
sbb
popa
fdivl
arpl
inc
mov
out
jge
jge
add
push
rcr
sti
test
jne
out
mov
dec
std
inc
jl
add
test
sahf
dec
lret
cmp
shlb
mov
jae
pushf
cltd
faddl
es
inc
test
jl
cld
test
jne
scas
jecxz
pushf
mov
ljmp
inc
sub
jl
sbb
add
mov
dec
flds
mov
ss
das
or
add
stos
mov
movsb
ja
pop
ret
sbb
out
adc
test
cmpsb
cmp
es
mov
popa
outsb
sbb
jge
std
sbb
mov
jp
loop
popf
push
and
add
pop
repnz
lret
rcrb
or
pop
ss
jecxz
xchg
shr
or
cmc
jns
out
xlat
fadd
mov
push
adc
test
xchg
sti
lods
or
out
in
cmc
adc
cli
ficoml
hlt
jnp
add
cwtl
testl
mov
sti
pusha
cmpsb
lods
jp
hlt
aad
roll
pushf
mov
fxam
mov
insl
adc
shlb
push
adc
jae
cmp
mov
mov
std
xor
pop
in
sub
les
sbbl
cmp
xor
mov
into
mov
ficoms
pop
jnp
lret
popf
test
or
sbb
push
jl
pop
add
xchg
clc
xchg
and
iret
notl
mov
mov
pop
add
or
ficoms
mov
fisttpll
das
mov
adc
jns
ja
loopew
pop
lret
pushf
dec
cmp
cltd
sbb
decl
add
movsb
xor
idivb
xchg
out
fmuls
or
dec
incl
mov
jo
imul
ljmp
mov
mov
insb
pop
jnp
ja
push
jb
scas
cmc
jmp
pop
scas
mov
shr
xor
les
xchg
mov
cmc
pop
mov
hlt
cmpsl
loop
shlb
dec
repnz
jnp
or
sbb
stos
lret
sti
push
jge
or
neg
xchg
pop
pop
sub
sub
sub
and
lahf
loopne
xchg
clc
loopne
add
in
xchg
fmul
jmp
mov
pushf
dec
cltd
fldenv
jl
jnp
sti
ret
or
mov
push
sti
pop
pop
enter
xor
lahf
shlb
int
xor
daa
mov
jg
out
inc
mov
mov
add
loopne
fbstp
repz
es
into
pop
lea
mov
aas
fsubrs
clc
int
hlt
in
jmp
jae
mov
pop
lret
cwtl
mov
fsubrl
push
or
mov
leave
or
push
loop
pushf
sarb
push
fmul
jle
pop
pop
fidivrl
cwtl
imul
arpl
jl
xor
pop
fistl
push
je
ret
add
mov
lret
lds
call
testl
ljmp
lock
sub
xchg
add
lret
mov
adc
fucompp
rcll
jbe
xchg
dec
cld
daa
jne
push
and
sti
sub
fisubs
push
cmpl
cltd
pop
mov
ret
jne
stos
cmpsb
mov
jmp
dec
ss
mov
pusha
or
rorl
cmc
mov
jecxz
int
xor
jg
dec
arpl
xlat
adc
jne
cli
fbstp
in
cwtl
sbb
loopne
cmc
test
cmc
in
pop
insb
cli
lods
test
push
pop
add
mov
mov
xor
mov
xchg
cltd
jle
movsb
loop
rorl
xchg
jg
jp
enter
xchg
int3
repnz
imul
push
jp
mov
notb
call
xlat
pop
orb
mov
out
or
dec
mov
xchg
lods
sahf
loope
movsl
repz
sbb
cwtl
jne
ret
aas
push
xchg
jmp
jnp
js
xchg
jno
mov
arpl
ljmp
rorl
mov
fstpt
sub
cmpsl
in
xchg
or
cld
adc
xchg
push
addr16
mov
push
mov
adc
mov
and
or
shll
aam
adc
fldl
jge
sti
mov
jmp
cmp
mov
rcl
dec
sahf
cmc
cmp
push
test
sub
and
bts
mov
pushf
in
shl
in
bound
fistl
leave
repz
xor
movsl
rcrb
sbb
mov
mov
orl
add
cmc
clc
fst
pushf
push
pushf
lret
dec
cwtl
loope
xor
push
mov
cltd
aaa
aas
pop
mov
and
cmpsb
or
insl
ret
pushf
xlat
pushf
push
push
push
enter
mov
shrl
test
and
push
clc
mov
jg
lock
push
dec
jecxz
out
lods
xchg
fnsave
inc
mov
add
idivl
out
mov
lods
ret
dec
cwtl
mov
nop
mov
test
insl
lock
mov
loopne
mov
fdivl
enter
xor
dec
cwtl
mov
mov
movsb
inc
jmp
cwtl
jne
nop
or
xchg
scas
orb
jle
lods
sbb
les
call
rol
xchg
jle
ret
jp
clc
xor
lcall
pop
inc
daa
mov
mov
mov
ret
cmpsb
add
dec
outsl
or
in
mov
out
jae
pop
test
mov
rorl
push
in
iret
mov
in
mov
mov
cmp
mov
jnp
mov
mov
mov
or
cmp
pop
aad
test
mov
cmp
pop
cmc
stos
mov
mov
loop
jmp
mov
les
aaa
xor
and
loop
popa
xchg
fnstcw
ficoms
cs
icebp
in
xchg
push
mov
push
mov
out
xchg
repz
ja
jae
in
out
stos
or
iret
loop
shrl
inc
cmpl
fidivrl
mov
leave
cmc
stos
mov
jns
jnp
js
fdivrl
es
loopne
mov
scas
sarb
pop
mov
mov
insb
fwait
sar
xchg
jge
std
xchg
jl
cld
jnp
or
fildl
lret
testb
jnp
jns
rorl
call
mov
les
mov
iret
xchg
cld
inc
into
cmc
mov
and
and
and
test
mov
int3
cmc
test
lret
jp
jl
dec
fmull
sbb
jecxz
sti
aam
rcr
dec
into
mov
into
add
dec
sahf
dec
pushf
jne
cwtl
sbb
add
pushf
call
push
rcr
push
ret
xor
sbbl
test
cmp
cmpsb
mov
pop
lock
cmp
shrl
mov
mov
cwtl
roll
sahf
dec
lret
push
cmp
mov
mov
mov
mov
mov
inc
xchg
mov
push
pop
sub
addb
ret
fnstsw
fsubl
imul
call
push
ror
sarb
enter
dec
ret
mov
mov
cmpsb
mov
insl
xor
xchg
in
adc
jmp
pop
test
mov
mov
scas
leave
mov
mov
xchg
xchg
xchg
mov
xchg
mov
xorb
push
mov
fimuls
fisubs
xchg
loop
jmp
push
lcall
cmp
mov
jle
dec
adc
lret
cmc
mov
dec
fs
bound
push
clc
jge
inc
stos
iret
xor
cltd
hlt
ja
call
push
push
push
loop
fldt
insl
pop
adc
loopne
fbstp
frstor
push
fisttpl
dec
cmpsl
xor
push
sbb
jnp
leave
or
shl
ljmp
popf
mov
jg
loopne
orl
in
shlb
addr16
lock
jle
mov
mov
repz
fsubrs
sti
icebp
pop
out
cwtl
ret
mov
int3
cmpsl
mov
pop
cmc
jb
fucomi
cltd
loop
and
jb
mov
add
and
cmp
movb
js
mov
lods
or
movsl
push
sahf
sti
xchg
mov
repz
cli
idiv
xchg
add
repnz
ficoml
cmc
dec
xor
inc
ss
mov
jne
cmp
jno
fbstp
test
scas
rcll
xchg
add
lock
cwtl
nop
fidivrs
adc
xchg
dec
push
mov
jmp
jns
cmpb
or
testl
stos
mov
lods
dec
fiadds
into
mov
cwtl
xchg
call
into
dec
pop
xchg
daa
enter
cltd
rorb
mov
or
cmpsl
adc
mov
jge
mov
jbe
and
push
ret
mov
jns
test
xchg
imul
mov
cwtl
dec
xchg
pop
fcmovb
inc
cli
lods
dec
jl
push
xor
movsl
xchg
or
sbb
js
fnstcw
les
pop
mov
mov
mov
dec
mov
mov
jl
dec
pop
xchg
add
mov
pusha
fdivrs
iret
rcll
pushf
pop
int3
fwait
adc
pushf
mov
cli
shl
call
lahf
sbb
repz
push
and
paddusb
mov
mov
mov
xchg
cs
mov
mov
pushf
xchg
incb
xchg
jge
or
loop
jae
adc
shll
inc
and
mov
and
xchg
adc
mov
inc
popf
pop
jae
orl
ljmp
cmpl
lods
or
dec
add
sbb
adc
xchg
lods
cmp
cmc
or
push
in
adc
fildl
lods
movsl
cwtl
out
jbe
xchg
mov
inc
push
sahf
and
jmp
pop
mov
xlat
incb
ror
sub
call
push
scas
js
mov
loope
lcall
fisubrl
repz
lret
inc
out
popa
add
add
out
xchg
lret
lret
cwtl
jle,pt
xor
pushf
bound
jge
cld
cmc
adc
pop
loopne
leave
mov
mov
and
clc
repnz
repz
les
sub
rcrl
sbb
xchg
xchg
mov
jmp
mov
xchg
jle
adc
in
int
push
fiadds
add
int
leave
out
push
xchg
adcl
cmp
iret
adc
mov
lock
fimuls
mov
mov
enter
test
jbe
mov
xchg
mov
repz
jno
rcll
decl
ja
call
add
mov
xchg
lcall
shlw
imul
push
fstl
mov
or
cmp
and
int
cld
je
mov
call
or
les
jle
lds
call
movsl
sti
mov
cmc
mov
shlb
shr
out
cmpsb
ret
jle
outsb
call
and
mov
repnz
out
pop
ljmp
mov
lock
dec
mov
mov
cwtl
rorl
enter
test
shl
cmc
mov
add
je
xchg
int3
sub
cmpsb
gs
sub
call
icebp
mov
adc
in
mov
out
in
fildl
imul
fistpl
push
cmp
xchg
stos
fsubr
movsb
jmp
mov
cmp
iret
adc
test
jl
or
cmp
aaa
daa
xor
add
jp
push
jle
add
lret
add
test
or
int3
xchg
dec
mov
lret
cmp
xor
mov
push
icebp
push
push
adcl
pop
rcrl
lock
xchg
sahf
test
pop
xchg
sub
sar
lret
fstpl
add
push
xor
push
andl
add
jne
cmp
fwait
mov
adc
lea
mov
ret
sub
jnp
jns
shl
lahf
icebp
stos
jns
in
jecxz
adc
hlt
or
dec
rcrl
iret
and
mov
mov
roll
scas
mov
mov
mov
push
mov
test
les
cmpsl
mov
or
rorl
aaa
adcb
xchg
repnz
insl
lea
cmp
negl
outsl
push
imul
push
fildl
in
mov
lahf
fisttpl
add
mov
fdivs
les
ret
mov
push
pop
mov
xor
and
add
mov
dec
pop
leave
jb
add
pushf
xchg
mov
adc
cmpsb
ret
rcrl
cld
out
sti
add
cli
rcrb
into
jge
xchg
iret
and
mov
lret
adc
mov
scas
test
or
cmp
pop
scas
popf
sub
xchg
cmpsb
xchg
movsb
xchg
dec
sbb
lea
ficoms
test
jg
jge
jnp
mov
icebp
pop
out
loop
fucomi
fucomi
in
out
lret
jecxz
loope
pop
call
fsqrt
mov
out
sti
roll
loop
fcmovne
outsb
leave
addb
push
mov
mov
jns
mov
add
fldt
cmc
mov
mov
xchg
push
xchg
dec
xchg
inc
xchg
cmp
mov
test
dec
mov
mov
push
xchg
cmc
daa
repz
insl
fmulp
jle
lret
mov
ss
mov
mov
adcl
push
inc
sti
adc
push
stos
jecxz
jl
xchg
push
xchg
sahf
pause
ret
dec
fidivs
lock
cmp
xchg
inc
sub
mov
rorl
iret
inc
xor
fisttpl
push
icebp
ss
fistpll
jmp
cmpsl
pop
pushf
pop
dec
fsubrs
jge
loopne
mov
push
jnp
sub
ret
jmp
fstpl
out
jo
mov
jle
les
cld
jg
xorl
or
and
mov
mov
sub
imul
cltd
stos
test
cmp
aas
push
mov
enter
mov
into
or
and
mov
cmpsb
pop
push
lret
mov
xchg
adc
pop
scas
mov
jns
popf
push
rorl
and
idivl
cmpsb
lock
rorb
mov
jne
out
push
push
cmp
inc
fsubrp
test
cmpsl
pop
lods
push
xchg
mov
mov
stos
xchg
cld
add
cmp
fistl
roll
fistpl
pop
jmp
push
jno
insl
cmp
stos
jecxz
aam
push
jae
ret
pushf
ds
sub
mov
or
in
std
hlt
add
test
lret
cmc
ds
shrb
adcl
jae
out
rcr
dec
fisttpl
mov
test
pushf
sub
mov
xchg
push
nop
lahf
or
out
out
insb
cmp
stos
dec
cmpsl
jbe
push
ffreep
adc
fimuls
pop
mov
pusha
cmp
jle
sti
sub
nop
push
mov
repz
fistps
cwtl
mov
lds
ret
aas
or
subl
or
out
jns
mov
sbb
or
stc
adc
repnz
fmuls
aad
loop
dec
repz
adc
sub
push
pop
push
sbb
jmp
adc
mov
dec
rorl
decb
inc
mov
adc
or
jecxz
std
adc
scas
fdivrl
jle
push
repz
sub
jmp
test
lock
add
pop
xchg
mov
mov
adc
push
push
xor
stos
in
stos
or
testl
adc
int
xor
and
int3
hlt
xchg
or
sbb
jp
cmp
pop
call
cli
jns
xchg
addl
add
ljmp
cltd
test
loopne
mov
rcl
cld
xchg
xchg
jp
or
push
ret
fstl
fstpt
insb
mov
push
xchg
and
in
fstpt
jmp
jg
mov
mov
loop
jno
lods
add
add
aas
cli
aam
and
out
fimull
dec
and
daa
sub
dec
cmpb
push
push
scas
xchg
lea
lahf
popf
mov
pop
or
iret
ss
mov
stos
sbbb
rorl
and
sbb
repz
push
cmp
or
cmp
ficoml
pop
scas
or
lret
mov
cld
and
icebp
xchg
lret
test
in
addl
mov
mov
jp
not
out
and
loopne
mov
dec
sub
jle
insb
mov
dec
inc
dec
mov
mov
lock
fildll
clc
cmpb
repz
negl
ficompl
adc
les
incb
clc
push
push
xor
cs
std
pop
lret
std
xchg
ljmp
jo
push
push
fadds
fcom
push
mov
ret
jl
push
mov
jl
nop
scas
fs
lods
xlat
mov
dec
sub
pop
orl
nop
push
add
mov
pop
xlat
arpl
jne
int
mov
mov
xchg
sbb
in
jecxz
inc
xor
add
xor
mov
neg
mov
orb
lods
inc
adcl
std
cmp
jmp
test
or
mov
xchg
jns
clc
add
mov
out
mov
sub
mov
lret
mov
outsb
dec
fwait
cltd
ljmp
cwtl
loope
fld
gs
fadds
mov
jl
mov
sbb
adc
lret
cmp
xchg
push
test
xchg
add
jbe
cmpsb
stos
pushf
push
sub
fsubl
push
notrack
and
sub
jne
mov
add
xchg
ret
adc
shlb
jbe
sti
repz
or
cltd
jg
iret
jp
icebp
shrl
popa
adc
push
sti
dec
sti
leave
sti
inc
or
pop
lret
mov
add
push
fisubrl
sub
out
mov
cli
ret
add
subl
inc
mov
repz
fistpll
jg
jo
out
frstpm(287
fcmovnu
pop
pop
in
push
adc
popl
nop
aaa
pusha
sbb
and
stos
mov
fcom
cmp
fs
pop
loop
outsb
push
xchg
mov
mov
mov
and
adc
popl
pop
xchg
sti
sub
cmp
jae
adc
sar
movsl
or
in
sub
in
lods
xchg
ffree
mov
les
shll
loopne
aad
rcrl
fwait
inc
out
mov
mov
test
fstpl
mov
push
fnstcw
xor
ds
loopne
rorb
inc
out
aam
mov
lock
jmp
idiv
out
jecxz
fistpll
inc
jae
adc
pop
adc
fists
in
test
jnp
test
rol
loop
fsub
popa
sub
jge
or
cmc
fidivrs
cmp
ret
cmpsb
out
push
fdiv
mov
push
adc
mov
sub
or
xchg
adc
testb
push
ret
out
push
lods
fsubl
loope
mov
jge
add
sbb
movsb
repz
sub
or
imull
jl
or
and
inc
push
das
cli
lods
mov
sti
mov
xchg
shll
pop
cmpsb
outsb
movsb
data16
out
jecxz
or
rclb
in
mov
adc
inc
enter
loop
rol
xor
cwtl
and
push
cmpl
mov
cld
fcomp
push
rcl
dec
push
sar
jne
fwait
test
xlat
cmc
pop
adc
repnz
mov
push
sahf
mov
cltd
stos
jns
mov
loop
push
mov
ja
clc
imul
loopne
add
fcomps
cmp
mov
pushf
movsb
push
or
jb
test
cmc
and
jge
lods
test
jmp
mov
in
loope
test
enter
inc
pop
inc
sub
mov
jmp
or
push
dec
push
dec
dec
dec
inc
jae
cmp
and
in
es
add
fcomps
add
sbb
repnz
mov
add
xorl
inc
enter
in
jecxz
loope
iret
push
mov
repnz
lds
or
lods
xor
fimuls
out
loope
add
jae
fidivs
scas
mov
stos
or
movsb
aam
dec
mov
fwait
jecxz
dec
and
jmp
flds
xchg
mov
or
cwtl
rorl
in
cli
lret
int
imul
mov
sbb
mov
mov
call
mov
loopne
sub
sbb
xorb
push
scas
pop
mov
aad
jl
mov
inc
movsb
lds
mov
jg
ret
dec
sub
imul
enter
frstor
sub
test
fwait
iret
add
mov
shll
xor
adc
pop
pop
mov
f2xm1
jge
lret
mov
repnz
cmpsb
cltd
adc
add
loop
xchg
sti
add
mov
shll
repz
jl
rcrl
stos
mov
movsb
add
imul
das
pop
popf
mov
shll
ret
test
fadds
xchg
mov
bnd
subb
or
test
xor
gs
push
sahf
mov
or
ds
push
mov
ss
and
insl
std
dec
test
inc
fstps
cltd
hlt
xchg
jnp
fstpt
mov
lret
inc
pop
add
rorl
push
jo
insb
sbbb
mov
adc
into
ficomps
pop
jg
mov
inc
or
push
xor
xchg
adcl
cmpsl
aaa
movsl
xor
mov
dec
shl
push
sbb
adc
scas
and
mov
movsb
insb
aas
clc
mov
mov
sbb
mov
jmp
out
mov
js
adc
push
loopne
mov
ret
mov
mov
mov
mov
fbld
sub
shl
push
lret
mov
ret
dec
aam
xor
cwtl
leave
sahf
pop
jecxz
jl
shrl
or
popa
ficompl
cwtl
vphaddubw
fsubrp
loope
mov
mov
jge
lods
mov
mov
cwtl
mov
icebp
pop
hlt
rolb
mov
subl
cwtl
mov
dec
xchg
std
mov
pushf
loop
pop
movsb
rolb
mov
out
mov
mov
jbe
sbb
jecxz
in
sar
int
shrl
sub
xchg
test
push
mov
mov
cmpsl
ljmp
insb
dec
jns
fistpl
xchg
ror
fidivl
test
xchg
cmp
mov
addb
js
stos
repz
shll
int3
movsl
lret
test
sbb
ret
shll
shlb
cli
fistpll
hlt
push
in
out
out
lret
mov
ret
mov
outsb
fidivl
addb
repz
lret
pushf
test
add
jge
jnp
jns
testl
dec
out
push
in
mov
mov
fildll
cmpsb
rorl
pop
ret
int
lret
in
test
add
outsb
jnp
mov
adc
and
and
sub
xchg
enter
lock
lea
test
loop
int
jne
int3
ror
pop
cmc
inc
mov
scas
pop
stos
sub
cmp
fs
sti
pop
pop
push
adc
rcrb
fidivs
out
mov
xor
jne
out
xchg
icebp
fadd
and
lret
pop
cmp
daa
push
lret
sbb
jecxz
lahf
lds
dec
xor
dec
lahf
push
adc
stos
pop
sub
lret
bound
cmp
and
fstps
je
jo
outsb
sahf
test
fiadds
push
sbb
dec
stos
fildll
pushf
sub
add
jno
pop
mov
mov
ljmp
adc
fsubrl
pusha
jae
pop
out
dec
and
dec
mov
sti
pop
enter
outsl
cmp
sti
pop
enter
mov
pop
jns
dec
fmuls
or
mov
leave
cli
clc
movsb
jle
push
adc
or
mov
in
fcompp
fst
insl
dec
fstps
lret
test
cmpsb
std
dec
pop
jnp
enter
add
pop
and
lea
imul
rorb
clc
xor
in
das
nop
mov
dec
lds
add
imulb
mov
jne
cmc
out
cmp
aam
fimuls
dec
push
dec
dec
mov
roll
iret
mov
mov
stos
cmp
add
dec
iret
idivb
cltd
shll
iret
test
xlat
pop
mov
mov
xchg
mov
sub
mov
jne
push
jg
inc
ret
adc
or
out
or
dec
pop
andb
adcb
jle
jbe
test
int
fstpt
jae
fimull
iret
cmpsb
mov
push
in
pop
int
cmp
nop
icebp
push
in
clc
mov
sub
adc
cld
roll
mov
nop
stos
loop
scas
loop
fidivrl
and
repz
lret
dec
fcomps
cmpsb
mov
mov
into
test
xchg
rorl
and
cmp
mov
jae
stos
mov
mov
mov
xchg
xchg
loope
fistpl
in
mov
sub
jle
mov
or
fwait
je
ljmp
scas
fdivp
jg
std
cli
fidivrl
mov
push
jae
pop
add
aaa
jbe
test
inc
sti
cltd
jmp
jge
push
add
xchg
jg
cmc
mov
mov
or
pushf
xchg
fwait
pusha
test
cmpsb
dec
int
cwtl
int3
jl
cld
addr16
sub
adc
hlt
or
lret
mov
cmp
rcr
js
mov
xor
mov
sub
mov
dec
icebp
or
push
shrb
add
adc
jl
insb
ret
dec
repnz
or
std
cmc
imul
mov
das
test
clc
lret
out
fistps
push
outsb
inc
jns
sbb
bound
std
cmp
adc
lock
test
inc
andl
or
repnz
and
push
fcomps
sub
mov
cmc
iret
popf
push
xor
rcrl
enter
add
push
jecxz
mov
loop
xlat
shll
int
inc
mov
and
xchg
mov
jg
loop
loopne
fistps
cmp
inc
xchg
mov
xor
xchg
cld
push
jge
mov
repz
mov
xchg
repnz
loopne
adc
imul
pop
rcrb
mov
repz
fwait
cmp
mov
es
movsl
mov
ret
cmpsb
mov
inc
pop
rcrl
cmp
sarl
xchg
or
je
ror
les
dec
mov
xchg
mov
mov
pop
jmp
out
test
sti
xor
stos
push
mov
xchg
jae
pushf
test
es
popf
sbb
add
nop
insl
out
cmc
pop
inc
cli
lds
cmp
enter
divb
mov
cmp
mov
jae
jbe
sub
ret
int3
adc
fildll
mov
insl
enter
rol
mov
xlat
xchg
fisttpl
inc
bound
lret
mov
cltd
or
lock
cs
test
scas
in
pop
clc
pop
fisttps
jg
in
jne
mov
out
xchg
jl
mov
mov
mov
cmp
mov
int
cmc
add
jecxz
jne
scas
ficoml
cmp
fcmove
jno
lds
aas
mov
push
jae
lret
sub
mov
mov
jns
addb
in
dec
hlt
js
pop
stos
push
fs
fcmovb
pop
loop
fdivl
mov
adc
fidivrl
mov
repz
in
fcoms
aas
cwtl
leave
into
sahf
lds
adc
push
push
repnz
insl
dec
push
test
scas
rcr
pop
in
jle
neg
std
fldcw
mov
xchg
sbb
mov
pop
cwtl
ficompl
lods
outsl
pop
pop
cwtl
mov
stos
loop
mov
xchg
out
add
sar
and
push
push
sti
push
mov
mov
mov
insb
es
aas
xor
out
std
sub
scas
xchg
loope
loopne
in
gs
mov
loop
sbb
scas
add
pop
cwtl
mov
ja
dec
pop
xor
cmp
sub
jg
mov
inc
mov
dec
sti
pop
shll
lcall
jbe
out
scas
cmc
jmp
mov
test
push
enter
mov
ret
push
lahf
test
mov
cltd
rol
mov
push
or
sti
cmp
test
scas
jmp
ret
movsb
jbe
insb
mov
ficoms
push
xor
xchg
out
icebp
or
or
repz
call
dec
mov
lock
fisubl
test
mov
sub
fcoms
nop
ja
fdivs
stos
sti
outsl
add
int3
mov
cltd
xchg
sbb
fsubs
std
out
mov
dec
repz
cmp
xor
xchg
mov
jle
shll
adc
in
ss
fisttpl
movsl
test
lret
or
test
add
stos
mov
pushf
pop
push
sbb
inc
cmp
cmp
loopne
jg
jns
and
mov
outsl
adc
inc
inc
jnp
es
mov
inc
fnstcw
fwait
mov
xchg
stc
mov
jecxz
sub
ret
fst
sub
cmp
or
iret
cmp
loope
xor
sbb
mov
and
stos
mov
xor
out
fimull
xchg
pop
mov
insb
mov
cmp
pop
mov
mov
push
xchg
mov
in
insb
or
ss
popf
call
in
pop
call
pop
xchg
int3
call
mov
mov
mov
mov
fmull
clc
mov
mov
faddl
mov
test
ror
mov
inc
mov
movsb
ror
cwtl
lds
mov
into
push
inc
into
in
test
jae
xchg
shlb
in
fisttpl
mov
or
mov
or
in
adcl
and
jp
aad
idivb
push
nop
in
jp
in
jnp
dec
and
das
iret
hlt
inc
lret
movsl
pop
jl
dec
mov
mov
sbb
test
mov
xchg
and
je
jge
cmc
lret
mov
nop
int
hlt
imul
or
stos
lret
test
les
je
adc
sarl
jbe
loop
sub
lcall
mov
mov
jge
inc
fmul
cmp
pop
leave
push
data16
jmp
sti
ss
inc
icebp
sbb
js
push
fwait
add
adcl
addb
insb
xchg
xchg
push
addb
cmp
mov
cmp
in
popf
repz
mov
fsub
mov
mov
fsts
mov
gs
push
test
aas
push
xchg
add
test
and
mov
sbb
adc
cmp
cmpl
aas
in
adcb
jg
fistl
leave
loopne
sbb
lock
jnp
xchg
out
test
push
dec
ret
mov
mov
mov
push
mov
js
mov
lahf
iret
unpckhps
mov
or
jmp
test
test
lds
fldl
leave
call
and
dec
pop
aam
jmp
out
xor
ret
inc
adc
dec
jle
add
jge
or
mov
out
dec
mov
out
xchg
jnp
cltd
jl
jecxz
mov
lock
pop
add
aad
push
pop
stos
push
nop
push
inc
add
mov
test
orb
stos
xchg
dec
loop
xor
aam
ret
shlb
mov
rcll
mull
aas
jnp
std
push
mov
sbb
add
mov
hlt
or
shl
lret
mov
rcrb
add
mov
xor
mov
test
aam
dec
jl
adcl
add
pop
ret
std
enter
or
ret
jae
push
mov
lods
cmpsb
push
aaa
dec
push
cmp
push
dec
pop
mov
dec
push
lret
cmpsl
aaa
inc
scas
mov
mov
jg
jae
mov
stc
in
dec
add
arpl
xchg
xchg
call
xchg
jge
pop
push
push
push
ja
ljmp
cmp
mov
push
ss
enter
test
test
mov
lret
fnstcw
movb
cli
fcmovb
cs
cmpl
lahf
lret
es
sbb
loopne
xor
and
push
mov
lea
enter
add
cld
cltd
fcoml
bound
xor
jle
push
fwait
lret
jecxz
mov
jb
leave
sbb
imul
jns
insb
adcl
in
cmc
insl
fimull
add
stos
hlt
mov
mov
or
mov
fsubr
mov
jl
or
jle
mov
xchg
jge
and
mov
jne
mov
or
push
iret
sbb
jnp
loop
insb
push
xchg
cmc
adc
and
jmp
xchg
lea
mov
mov
jecxz
xchg
mov
iret
lret
mov
lea
cld
and
push
cmp
mov
sbb
popf
or
mov
or
sbb
sbb
fnstcw
aas
sub
mov
xchg
pop
out
mov
lahf
add
stos
lock
jl
loope
clc
xchg
jno
mov
lret
ret
xchg
push
sub
push
into
adc
push
test
or
in
in
cwtl
rcrl
mov
aas
fadds
jnp
xorb
dec
jge
sbb
out
shr
sbb
push
movsbw
bt
or
bsf
push
and
push
jmp
call
sub
sub
cmp
aas
call
mov
test
adc
adc
sub
pop
adc
fcompl
pop
inc
bound
and
xchg
jns
jns
mov
jmp
push
je
sbb
push
mov
or
mov
xor
push
lahf
aam
mov
std
mov
leave
lods
shlb
xchg
test
xchg
mov
pop
adc
lods
mov
pushf
icebp
dec
nop
faddl
sub
test
mov
pushl
icebp
or
setge
mov
bt
pusha
call
add
push
gs
jb
jae
dec
jb
inc
js
pushw
popfw
jmp
call
jne
gs
xor
fs
insb
add
test
int
sub
xchg
mov
loop
push
xor
out
sbb
lock
adc
into
xor
not
push
xchg
fmul
enter
mov
out
fmull
mov
xchg
xchg
stos
fsubrl
pop
xchg
int
repnz
lods
jmp
add
push
popa
gs
jb
popa
jns
jb
popa
je
add
inc
and
xchg
xchg
into
xchg
pop
lea
jmp
jmp
or
sub
push
cmpsb
neg
jne
sbb
or
and
inc
cmp
fst
mov
or
inc
sbb
push
xchg
jae
sub
push
and
inc
aam
mov
add
scas
fwait
mov
movsl
mov
and
repnz
jnp
push
loope
sub
or
add
sub
mov
pop
cwtl
stc
jp
iret
pop
shl
out
xchg
or
jo
aaa
data16
mov
or
int3
pop
sub
add
or
mov
divb
lret
mov
mov
fmuls
fisubrs
lcall
sarb
ss
int
dec
inc
cltd
xchg
mov
xor
add
adc
adc
sahf
jns
enter
fs
xlat
loop
push
in
ss
pop
jns
lds
xchg
jb
das
adc
rcl
cwtl
rorl
cmpsb
in
push
and
outsl
stos
cmp
lret
cmpsb
cmp
xchg
or
movb
call
neg
cmc
test
movb
sub
mov
push
jmp
pushf
pusha
lea
jne
movzbw
sbb
mov
test
pushf
pusha
add
pushl
movzwl
sub
pushf
mov
pusha
mov
test
add
mov
jmp
lea
je
test
cmp
add
pusha
stc
clc
cmp
movw
lea
jb
stc
push
cmp
movw
lea
jne
jae
sub
mov
xchg
mov
shl
dec
rcl
mov
pusha
jmp
outsl
sarb
lahf
ret
outsb
sub
je
ljmp
and
push
cmc
jns
mov
sub
mov
ret
and
adc
movsl
adc
das
out
jns
popf
aas
int
pop
das
enter
js
pop
lcall
jne
mov
std
dec
pop
push
xchg
out
xchg
jbe
cwtl
adc
out
pop
sahf
insl
mov
jle
sahf
sub
pop
idivb
test
mov
aaa
repnz
jle
sahf
mov
pop
mov
inc
mov
ds
add
scas
push
je
dec
aas
into
mov
jl
mov
lretw
lea
test
sahf
bound
les
fld
sbb
lock
sub
nop
add
out
mov
mov
xchg
arpl
jmp
decl
into
pop
sub
lds
scas
and
dec
and
mov
ljmp
movsl
orl
sbb
xor
inc
push
stc
out
hlt
xchg
push
imul
mov
fcom
loope
rcr
out
xor
cld
xor
or
push
cmp
js
cmp
sub
jge
add
dec
push
pop
sub
ficompl
rcll
int3
enter
loopne
loope
sahf
add
fwait
pop
scas
in
iret
jo
or
imul
pushf
mov
das
dec
xor
cmp
insl
sub
pop
rcrl
popf
mov
js
pop
mov
push
dec
je
lret
int
fsubs
xor
ljmp
mov
and
xor
dec
jnp
lret
xorl
mov
cmp
jl
cmp
repnz
scas
push
mov
xchg
jp
mov
out
add
or
or
ljmp
adc
and
and
call
jmp
leave
je
rcrl
out
mov
adc
inc
es
aas
stc
aaa
cltd
fcomps
popf
fistpll
add
clc
nop
add
loope
mov
sahf
push
test
dec
mov
jle
sbb
out
push
cmp
adc
jae
fistpl
pop
lock
or
hlt
mov
int
mov
sbb
lcall
mov
scas
push
in
fmull
inc
cs
xor
mov
hlt
jnp
ret
lods
clc
jge
jno
rcrb
push
inc
pusha
mov
sub
inc
jbe
ret
sub
mov
jmp
mov
xchg
shlb
std
loopne
push
mov
ja
in
cmp
loope
add
stos
jnp
cmp
sbb
cs
and
mov
fwait
aam
adc
mov
stos
fs
xor
mov
shlb
xchg
pop
jecxz
xorb
pop
push
push
aam
jg
rcrb
inc
mov
mov
test
insl
or
gs
push
jmp
cmp
jnp
sub
xor
push
mov
in
sbb
cmp
sbb
jb
xchg
fdivrs
ret
out
dec
stc
jne
dec
inc
movsl
lcall
cmp
mov
xchg
inc
cmp
fistps
pop
adc
test
dec
in
cmp
fidivl
adcb
xor
sbb
mov
pop
rcrl
mov
enter
mov
jae
jne
nop
out
data16
inc
in
ret
push
lcall
int
cmpsl
jnp
inc
mov
inc
pop
outsl
xchg
int3
repnz
dec
inc
test
jl
in
and
sbb
ljmp
mov
lcall
clc
out
aad
sub
and
sbb
pop
xchg
jnp
lret
in
adc
mov
mov
sbb
push
mov
mov
cmc
xor
rolb
sbb
pushl
or
sbbl
add
lods
into
sub
shlb
or
pusha
push
stos
stos
outsl
jo
and
sbb
sub
frstor
add
rcrl
jno
xchg
sub
mov
pop
shlb
rcpps
or
xchg
out
add
push
and
addr16
rcr
jecxz
testl
shll
stc
aas
pop
dec
in
je
faddp
hlt
push
jbe
mov
sbb
ret
test
inc
jle
gs
fidivs
or
mov
popf
mov
cmpsl
dec
test
jl
jmp
ret
aaa
inc
pop
lret
inc
ja
cmp
push
xor
mov
aaa
xchg
xor
fs
out
cltd
cmp
incb
repz
int3
or
das
adc
aas
pop
or
addr16
sarl
fwait
popf
scas
push
pop
pop
xchg
inc
add
inc
nop
add
mov
inc
push
gs
mov
incl
add
and
add
int
leave
aad
sub
jle
adcb
and
ds
js
push
or
rorb
mov
aas
sbb
jae
sub
inc
dec
mov
ja
fbstp
xor
std
pop
mov
push
jae
testb
sbb
pop
popf
adcl
adc
in
lret
jg
cmc
fisttpl
xor
and
pusha
pop
sahf
les
add
inc
call
pop
sub
xor
test
add
inc
enter
iret
sbb
and
mov
adc
repz
cmp
pusha
jp
testb
sbb
adc
xchg
cmp
clc
xchg
dec
icebp
cmp
sbb
push
rcrb
movsb
sbb
pop
mov
aad
cmp
loop
outsb
xchg
test
shrl
mov
ds
jmp
sub
mov
pop
inc
inc
mov
scas
jne
aaa
data16
adc
pop
mov
mov
in
xchg
call
inc
daa
aam
sub
mov
adc
fs
repz
xorb
push
mov
push
arpl
sub
pop
enter
jmp
bound
and
enter
sbb
mov
fstps
test
fwait
pop
iret
les
jns
and
loope,pt
idivl
iret
iret
fnstcw
sbb
mov
and
inc
ret
push
lods
mov
mov
fistpl
icebp
xchg
mov
xor
shlb
pop
pop
xchg
negl
shll
fistpll
loop
lahf
das
cmp
xchg
mov
loopne
xlat
sub
es
pop
xor
in
dec
pop
inc
cmp
jecxz
popf
int
adc
loope
dec
lea
sub
sbb
pop
lret
sbb
in
adc
or
mov
pop
xchg
mov
mov
sahf
int3
xor
xchg
jge
sub
js
mov
decl
mov
cs
sub
enter
pusha
lea
jmp
jbe
data16
pop
sub
scas
or
and
ljmp
or
add
ljmp
inc
out
push
sarl
dec
lods
jno
jns
mov
mov
pop
xchg
in
add
cli
mov
stc
aas
sbb
pushf
xchg
cmpsb
xor
ljmp
ret
xor
incl
sub
jne
push
and
xchg
stc
pusha
xor
ret
dec
movsb
popa
pop
sub
pop
ds
les
sar
push
bound
int
ds
mov
xor
inc
jecxz
js
movsl
dec
cmp
sub
test
sub
cs
mov
negb
ret
out
nop
xor
push
and
fists
js
pop
jnp
and
mov
push
push
xchg
pop
sub
and
jne
xchg
mov
shlb
in
cmp
push
scas
les
cmp
sub
inc
mov
rolb
ret
mov
das
std
imul
and
popa
pushf
push
inc
out
cli
lods
das
pop
sbb
mov
xor
push
shlb
cmp
push
jecxz
gs
mov
pop
dec
pop
lret
sub
add
cmpsb
insl
imul
test
pop
jne
enter
pusha
push
movl
pusha
call
scas
shl
pop
sub
clc
repz
cmp
sbb
jecxz
pop
ror
nop
mov
shll
test
add
jl
ret
mov
cmp
push
jl
pop
mov
xchg
xchg
jge
dec
sub
cs
xor
in
mov
sahf
shll
ljmp
push
add
divb
iret
push
push
inc
out
mov
into
sbb
sub
lret
clc
call
pushf
lea
call
pushf
jmp
jl
inc
fstps
mov
ss
loop
lods
sbb
mov
lret
push
pushf
mov
mov
sbb
push
pop
movsb
jmp
fmull
int
ja
xchg
repz
push
icebp
loopne
adc
mov
iret
add
mov
add
stos
and
push
iret
inc
sub
lds
inc
mov
pop
jmp
and
pop
push
mov
or
jne
daa
rcr
sbb
in
mulb
ja
fnstenv
iret
fndisi(8087
and
dec
ret
mov
icebp
inc
pop
xchg
hlt
mov
not
lea
movb
push
call
in
cmp
pop
sub
lret
mov
jo
orl
pusha
xor
pop
sub
stc
or
scas
push
bound
mov
insb
outsb
mov
cmpsl
loop
xchg
push
sbb
mov
push
icebp
daa
aas
cmp
and
jns
dec
mov
call
mov
pop
cltd
cltd
lock
jne
push
ja
movsl
sub
bound
add
popa
addr16
imul
popa
je
add
mov
pop
sub
fldpi
scas
jbe
aas
out
jne
pusha
pop
pop
es
pop
jae
test
jae
cmp
sub
jo
mov
pop
inc
les
push
jecxz
mov
cmp
xor
sbb
fldcw
out
pop
mov
loopne
inc
insl
out
xor
mov
lret
ret
ret
mov
es
clc
inc
ret
jno
xor
sub
add
popf
dec
shrl
add
xor
dec
test
xor
pop
es
mov
dec
or
dec
push
out
sbbl
jl
adc
dec
dec
daa
sub
jle
pop
dec
hlt
repnz
insb
arpl
hlt
xchg
and
ret
xor
push
xor
mov
daa
push
and
ret
ss
and
push
jl
gs
jp
pop
js
pop
push
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
das
loop
pop
sub
dec
mov
dec
mov
push
fidivs
call
jl
sti
dec
out
push
jg
and
sbb
insl
cmp
jbe
or
inc
ret
pop
movsl
sbb
decl
sub
insl
call
jge
out
jnp
out
pop
push
shll
sti
lcall
push
lods
cmc
cld
adc
lods
bound
sar
push
push
or
inc
add
stos
jns
mov
xchg
mov
or
fs
jmp
sub
pop
sub
sbb
sub
inc
imul
add
les
js
mov
pusha
enter
jle
mov
imull
xchg
stos
daa
outsl
insl
mov
mov
fildl
dec
pop
movsb
push
stos
into
in
inc
mov
xor
fstpl
add
pop
inc
je
or
aaa
xor
js
pusha
movl
mov
lea
jmp
sar
add
shld
mov
cmc
and
test
cmp
pushf
mov
add
mov
lea
jmp
or
sub
dec
dec
out
cld
add
jp
sbb
cltd
xchg
cmp
push
xor
lcall
mov
push
push
push
push
and
mov
jp
jne
mov
jns
dec
push
ss
dec
jnp
mov
push
enter
scas
add
pop
int3
gs
mov
into
in
imul
stos
lret
xchg
lea
mov
lods
xor
cmc
jbe
out
pop
add
xchg
cmp
sub
pop
iret
xor
out
faddp
inc
inc
es
lods
call
cmc
test
mov
mov
lea
xor
pop
and
aam
sbb
repz
mov
jg
mov
sbb
and
mov
sub
jle
and
call
push
iret
icebp
mov
xchg
push
adc
jbe
pop
imul
test
mov
sub
scas
cltd
shrb
addr16
xor
push
xchg
cmp
stos
mov
lea
and
push
test
inc
adc
ffree
and
fcompl
fwait
xor
jl
push
dec
popf
pushf
jle
jnp
call
std
inc
outsb
adc
xchg
insl
adc
xlat
fbld
stc
dec
mov
add
pop
mov
in
ficoml
fsubs
ret
pop
fbstp
add
data16
mov
mov
icebp
lock
mov
lret
mov
fnstsw
in
pop
out
loop
mov
dec
push
inc
and
mov
add
lock
adc
jo
imul
sub
mov
xor
xchg
pop
subb
push
jno
leave
out
fbstp
mov
nop
outsl
out
mov
inc
ret
jae
dec
push
pop
testl
movsl
insl
icebp
mov
xor
xchg
sub
cli
rcll
push
lods
es
pop
in
sahf
push
and
cmc
sbb
shl
mov
jbe
sub
pop
add
inc
jne
jb
add
sbb
mov
sub
mov
pop
inc
push
cmp
popa
xchg
cltd
rcrb
mov
aam
hlt
dec
pop
cmpsl
subl
fnstcw
int
mov
and
xor
jmp
and
cmp
int3
arpl
aas
cmpsl
mov
das
call
jnp
xlat
insb
ja
subb
loope
mov
shl
mov
pushf
xchg
push
pop
mov
push
pop
fs
xor
cltd
jnp
outsb
pop
push
nop
xchg
in
and
mov
cs
or
inc
xor
je
in
or
sbb
cmpsl
in
insl
dec
cmpb
or
add
lret
dec
push
aad
mov
mov
scas
mov
xchg
pop
sbb
push
sub
aaa
push
fs
inc
sahf
jge
pusha
mov
stos
je
mov
pop
sub
arpl
mov
fwait
push
jbe
jno
daa
jg
xchg
mov
inc
mov
sbb
aam
xchg
cli
daa
or
mov
mov
ljmp
clc
xchg
mov
sub
in
adc
not
and
sbb
sbb
sub
jbe
pandn
stc
rorb
fiaddl
xor
addb
sub
int3
fstpl
push
cmp
and
mov
insb
sub
cmp
push
rorb
mov
dec
cld
call
pushf
jmp
pushf
pushf
push
mov
pusha
lea
jns
call
pusha
mov
push
pushf
pushf
movw
lea
jmp
sti
inc
int3
ficomps
daa
test
mov
jecxz
lock
cmp
int3
adc
or
ds
cmc
test
mov
fdiv
cmp
inc
jge
cmp
mov
ljmp
loop
pop
in
mov
push
dec
mov
mov
into
outsl
adc
mov
gs
les
jae
dec
cmp
ss
cmp
push
out
pop
lea
mov
push
mov
pusha
lea
call
jmp
in
jmp
jecxz
gs
imulb
je
dec
push
cld
repz
inc
push
repnz
xchg
lods
add
dec
in
subb
call
in
push
mov
rcll
mov
inc
xchg
xor
jo
mov
stos
iret
aam
loopne
jno
fnstsw
stc
sub
sbb
test
gs
cwtl
xchg
cmp
addr16
add
dec
pusha
sbb
and
std
imul
add
sbb
aam
add
popf
gs
rorb
in
dec
in
lds
pop
mov
dec
jne
cmpsl
cmp
and
aas
shl
and
mov
adc
push
cmp
add
or
push
daa
es
ljmp
xchg
ja
fisttpll
pop
mov
mov
call
movl
push
lea
jg
pushf
movl
movl
pushf
lea
jmp
jmp
jmp
jmp
sarb
cmp
call
push
and
rcll
sub
ret
sahf
int
outsl
push
mov
ja
push
fisttpll
fbld
fidivs
addr16
fldt
hlt
inc
movsb
push
cld
or
ds
pop
pushf
out
aad
mov
bound
leave
cli
in
das
cmp
cmpsb
inc
stos
and
sbb
add
add
test
in
xchg
mov
insb
push
push
xlat
mov
stc
inc
movsl
js
push
dec
lods
mov
pop
mov
mov
lahf
xor
sbb
mov
movl
pushf
pusha
call
inc
test
xchg
shl
cmc
shl
btr
mov
or
clc
mov
cmp
cmp
test
xchg
rcl
pushf
bt
rol
mov
clc
clc
cmc
sub
pusha
rep
call
pushf
call
push
xchg
iret
mov
pop
sbb
cmpsl
frstor
cmp
movsl
in
nop
mov
fidivrs
movsl
fiadds
lret
pop
jp
or
aam
fxch
dec
icebp
sub
jno
dec
jb
xor
out
cmp
outsl
jg
gs
xchg
mov
adc
ja
pop
or
repz
lods
xor
inc
sbb
cwtl
lods
mov
dec
push
jl
push
cmp
dec
scas
fs
sbb
or
push
leave
test
dec
fs
xlat
mov
sbb
push
aad
inc
pop
les
gs
mov
lahf
or
pop
into
jns
and
mov
sahf
gs
mov
sub
call
in
xor
lret
idivl
dec
or
mov
into
dec
shr
mov
cmp
push
fcmove
jle
hlt
sub
xor
lods
cmp
arpl
jmp
sti
mov
add
push
out
xor
push
mov
jb
push
adc
aad
dec
mov
vunpcklps
jle
and
popl
and
lea
jne
add
mov
cmp
or
pusha
call
jmp
and
sub
mov
lods
pop
rolb
xor
repz
int3
adc
clc
test
cmpsb
das
xlat
add
out
mov
arpl
pop
test
mov
or
mov
mov
test
sbbb
sbb
bound
lods
mov
jo
push
and
flds
sbb
popa
jg
push
xchg
cmp
jmp
mov
sub
ja
dec
lock
mov
test
notb
push
loop
icebp
push
jae
inc
fwait
loopne
hlt
nop
xchg
cmp
xor
sbb
jg
add
pop
mov
adc
mov
jge
push
movsb
jmp
insl
mov
sarb
mov
testl
pop
xor
push
jne
movsb
icebp
or
out
dec
outsl
aad
fistl
push
shl
xchg
lock
add
sarl
xchg
inc
bound
loopne
adc
and
pop
xor
mov
jnp
not
pop
xchg
setns
pushf
movzbw
mov
setge
mov
pop
mov
jmp
lea
ja
jmp
movsb
or
imul
sbb
orb
sar
jg
fucom
sti
pop
pop
fdivs
xchg
dec
fsubs
in
add
pop
andl
cmp
test
addr16
ret
in
scas
lock
ret
idivl
cmc
mov
jmp
jge
les
lret
sub
fucom
fisubrl
mov
mov
mov
pop
outsl
push
filds
sbb
pushf
mov
js
out
cmp
mov
es
or
pop
and
mov
mov
mov
ja
inc
sbb
in
mov
sti
lahf
mov
call
mov
fwait
mov
aas
lcall
jbe
mov
xchg
lahf
adc
jb
mov
sub
push
xorb
scas
inc
out
xchg
dec
mov
subb
jecxz
stc
dec
sub
test
fprem
jae
ficompl
int3
ljmp
aaa
clc
mov
pop
sbb
loopne
mov
inc
mov
aad
push
scas
int3
push
xchg
ds
xor
mov
sbb
ret
xor
lock
xchg
out
leave
add
lods
mov
xchg
adc
and
ljmp
aam
in
aam
mov
adcb
cli
ror
out
stc
movsb
sahf
sub
jl
imul
xor
mov
cwtl
repnz
scas
dec
sbb
mov
hlt
inc
mov
ret
or
xchg
cmp
mov
lods
pop
jo
out
ret
pop
xchg
push
sub
cmp
and
into
dec
cmpsb
pop
fiaddl
xchg
mov
fwait
jp
sbb
int3
cmp
jo
xchg
adc
cmp
or
pop
xor
push
test
xchg
inc
push
mov
stos
pop
dec
pop
push
jae
mov
pop
aas
sbb
stc
pop
das
dec
cmp
cmp
sbb
lea
icebp
xor
repnz
mov
pushf
ret
push
jnp
sbb
cmp
xchg
push
pop
xchg
inc
lret
push
cwtl
les
lcall
movsl
xchg
cmp
cmp
cltd
cli
es
out
sbb
mov
ljmp
out
movsb
scas
mov
sbb
test
push
sub
mov
pop
lock
mov
out
fstl
sub
testb
mov
mov
mov
inc
mov
aas
lods
xor
sbb
int
sub
adc
jp
lock
cmp
mov
cmpsb
rolb
mov
pop
adc
sub
negb
loope
mov
stc
hlt
decl
fmuls
adc
jb
jp
mov
jl
clc
aad
sub
jne
push
add
jae
pop
mov
repnz
stos
es
push
mov
push
fistps
call
xlat
jae
repnz
cmpsb
in
pop
xor
pop
out
es
adc
mov
fisubl
ljmp
repnz
sub
mov
hlt
xchg
lock
mov
or
addr16
mov
shlb
push
mov
adc
cltd
gs
negb
push
loop
int
negb
aam
jb
adc
pop
popf
mov
sub
int
cmp
add
xchg
movzbl
xor
subb
mov
cltd
push
rcrl
repnz
and
sbb
push
cmp
mov
fistpll
sub
cmp
out
sbb
push
xchg
pop
or
adc
jle
hlt
or
lahf
fs
lret
mov
aad
push
inc
push
cmpsl
pop
test
clc
aad
xchg
adc
jbe
cwtl
nop
mov
sbb
or
sbb
push
je
adcl
dec
add
adc
push
mov
mov
xorb
popa
xor
outsl
sub
fsubl
ss
push
cwtl
jle
mov
mov
pop
push
movsl
js
mov
nop
es
pushf
dec
testb
push
mov
xlat
jo
into
mov
xchg
push
clc
pop
xchg
insb
jb
xchg
loop
xchg
je
int
xchg
fcomps
ss
movsb
lahf
ret
lods
cltd
mov
in
mov
dec
fisubs
int3
pop
push
shl
pushf
dec
xchg
in
mov
adc
inc
shrb
mov
push
hlt
pop
cwtl
bswap
push
xchg
lahf
xor
sub
mov
adc
nop
ljmp
jle
andb
mov
pop
push
cmpl
mov
or
divb
mov
xchg
sbb
xchg
sbbb
cmpsb
negb
lods
xchg
hlt
and
es
in
jbe
int3
xorl
ljmp
cli
push
push
mov
jl
pop
stc
and
cmp
sbb
int3
cmpsb
pop
pop
insb
add
add
lea
aas
lcall
mov
or
int
pop
jp
push
mov
pop
hlt
fdivrs
imul
push
int3
into
dec
push
adc
out
xchg
in
fs
sahf
dec
jne
cmp
icebp
sahf
inc
scas
mov
popa
sub
sbb
ljmp
xchg
bound
adc
xor
in
lret
pop
adc
cmp
pop
mov
imul
lcall
dec
mov
sub
mov
mov
lods
adc
lcall
sarl
push
nop
jle
mov
test
mov
sarb
and
enter
push
push
mov
mov
push
sbb
aam
popa
cmp
xor
mov
nop
cmpsb
jmp
dec
mov
adc
mov
enter
adc
or
cli
push
mov
pop
and
xchg
lds
xchg
xchg
jg
xchg
cmpsb
test
mov
lock
les
xchg
xchg
lcall
push
push
lret
or
jb
into
add
xor
mov
out
bnd
mov
xchg
in
mov
xchg
jecxz
ja
or
adc
jnp
addr16
cmc
in
or
mov
jb
int3
push
mov
aas
lahf
out
xchg
test
inc
push
xchg
push
addr16
out
mov
mov
mov
into
push
jecxz
push
scas
sbb
push
arpl
std
xchg
ljmp
ret
push
cmp
fwait
mov
cmc
lcall
sub
scas
ss
movsl
sub
push
loop
into
into
mov
lods
ficompl
loopne
es
andl
lcall
daa
and
sbbb
mov
andb
dec
fsubs
xor
mov
scas
cli
rcr
inc
xchg
lods
lret
test
xchg
fldcw
scas
loopne
inc
adc
into
sbb
jbe
imul
int3
adcl
fistpl
stos
cmp
lea
lahf
adc
or
icebp
push
cltd
xor
mov
scas
cwtl
ja
push
fcmovbe
sbb
ljmp
mov
and
jne
push
mov
jge
test
pop
lock
sahf
pop
notb
mov
jbe
call
bound
out
andb
ror
cmp
cmpsb
xchg
js
lock
ds
es
adc
mov
hlt
mov
jbe
pushf
hlt
and
or
xchg
sti
cmp
mov
orb
es
pop
add
int3
jmp
je
push
stos
mov
jno
repnz
jae
ss
mov
mov
lock
push
xchg
jge
test
fsts
push
mov
mov
mov
movsl
xchg
out
and
xor
pop
int3
clc
std
in
es
mov
push
rol
mov
js
scas
subb
es
inc
mov
mov
jo
leave
daa
xchg
inc
dec
pop
mov
test
std
or
adc
sub
dec
leave
push
into
cmpsb
jmp
dec
push
and
cmp
inc
rolb
lds
rcll
or
push
pop
cmp
jae
outsb
add
ljmp
dec
in
test
xchg
rcrl
dec
mov
mov
xchg
fsubrs
mov
mov
jns
sbb
lcall
popf
jb
xchg
or
mov
adc
rcrb
les
daa
and
mov
sub
cmc
add
lods
sti
mov
sbb
push
out
adc
push
mull
rcrl
stos
shll
stc
shll
sbb
sahf
mov
nop
insb
xchg
jb
movsb
shlb
andl
lods
sahf
mov
aam
negl
or
dec
hlt
popf
mov
sub
scas
push
insl
adcl
pusha
xchg
mov
push
push
or
mov
insl
int3
imulb
adc
xchg
lahf
adc
data16
xchg
dec
cmp
xor
imul
mov
cmp
fwait
mov
aam
icebp
xchg
lret
cmp
cmp
int
jne
and
lahf
cltd
push
xchg
int3
mov
xchg
je
cwtl
mov
and
add
xor
cs
mov
sub
and
dec
int3
cli
out
jne
aas
dec
and
cwtl
mov
imul
jp
cmp
mov
lea
push
stc
lret
fiaddl
div
xchg
cli
mov
or
pop
xchg
xor
or
and
dec
clc
enter
add
jne
or
or
add
push
shrb
xchg
aaa
insb
es
fwait
mov
push
xor
xor
or
push
mov
fwait
pusha
mov
test
cmp
pop
rcll
inc
inc
lds
mov
cmp
cltd
out
inc
aas
icebp
enter
sub
int
cwtl
out
fsts
js
out
mov
outsl
gs
popa
clc
xlat
inc
ljmp
gs
jmp
and
pop
cli
mov
or
push
or
cld
lock
dec
xor
xor
pop
sub
repz
test
xchg
repz
xor
dec
dec
arpl
loopne
push
in
mov
clc
js
test
xchg
add
pusha
push
int
mov
pushf
dec
pusha
jne
rcr
fsubs
fwait
push
mov
outsb
or
test
out
std
adc
push
or
lret
es
jb
jb
jns
or
mov
std
clc
jbe
mov
popa
xchg
xchg
sbb
mov
jp
sbb
in
xchg
dec
push
mov
xchg
mov
cltd
out
mov
es
jns
cmpsb
sbb
divb
adc
xlat
and
ss
push
dec
mov
or
and
sbb
cmp
ror
loope
or
leave
movsl
add
cmp
or
pop
xchg
xorl
jne
es
mov
push
mov
fwait
adc
dec
scas
pushf
sbb
or
mov
int
shlb
sbb
mull
lock
adc
and
leave
adc
cld
popf
xchg
push
ds
add
xchg
xor
mov
jp
xor
hlt
mov
pop
cwtl
inc
mov
shl
xor
pop
ja
std
popa
mov
xor
jo
and
loopne
scas
iret
adc
mov
fadds
cmp
lcall
cltd
xchg
ret
and
mov
cmp
cmp
xor
xor
pop
ss
xchg
rcl
iret
and
loopne
mov
push
mov
shrl
cmpsb
dec
push
mov
mov
mov
mov
rorb
dec
ljmp
js
fcomps
cltd
out
and
insl
mov
or
and
add
inc
addb
aad
pop
xchg
xchg
mov
adc
xchg
inc
arpl
and
ss
popa
cmpsb
adc
mov
ljmp
xchg
jns
xorb
rcrb
mov
fstps
dec
shlb
push
rol
out
sbb
jp
scas
js
js
push
aad
movsb
stc
sbb
add
iret
sub
lds
pop
out
jmp
fldl
pop
jbe
jg
sub
dec
mov
mov
jmp
test
clc
xor
jno
cltd
bound
xchg
add
dec
cmp
jmp
mov
out
in
or
mov
cmp
cmp
cmpsb
fsts
mov
rcrb
and
data16
cmc
addr16
int3
push
out
jb
les
pop
cltd
cmp
in
jmp
inc
rorb
pop
cmp
xchg
out
add
sub
xchg
pop
mov
push
aaa
pushf
ljmp
sbb
xlat
mov
lea
cmpsb
or
jbe
es
sahf
push
push
fwait
or
mov
pop
sub
push
inc
add
inc
das
ficompl
sbb
cmpsb
out
xorl
sbb
jmp
cmp
movsl
adc
sbb
mov
jo
inc
adc
in
mov
jo
out
xor
inc
push
js
inc
shl
mov
cli
mov
mov
loopnew,pt
rolb
xchg
subl
dec
lock
hlt
jns
mov
cmpsb
lods
cli
aas
repnz
mov
pop
sub
mov
xor
cmc
pushl
je
and
loopne
outsb
adc
flds
lahf
rcrb
or
repz
mov
mov
or
sbb
enter
aad
adcb
xor
ljmp
dec
rcl
jl
cmpl
lods
or
int3
xchg
mov
arpl
jle
test
mov
out
fsubrs
iret
mov
push
rcl
pop
sbb
lcall
sbb
cmpsl
fnstcw
mov
push
jns
xor
mov
and
and
loop
lahf
daa
or
xor
sahf
xor
insb
xchg
push
dec
adc
cltd
sbb
add
adc
add
int
mov
push
pop
cmp
cli
mov
inc
imulb
push
scas
push
cmp
pop
mov
std
cmp
cmp
and
out
mov
lahf
jl
jecxz
cmp
mov
xchg
mov
movsl
sbb
jne
mov
dec
xchg
andb
orl
ljmp
loop
sahf
test
add
push
mov
mov
ror
enter
mov
jg
mov
mov
pop
ljmp
cmp
mov
rcr
dec
mov
or
popf
out
hlt
jae
ds
les
jne
add
mull
adcb
fsubr
add
cmpsb
mov
fdiv
ss
loop
inc
bound
mov
cmp
mov
jg
dec
inc
jp
push
ljmp
mov
lcall
xchg
mov
xchg
icebp
lock
inc
es
inc
jecxz
insb
lret
mov
dec
push
dec
rorb
jle
push
cltd
mov
pop
sbb
idivb
jle
dec
in
lret
inc
outsl
cs
jl
jge
shr
movsb
xor
test
xor
mov
xchg
xor
out
js
adc
je
fwait
mov
data16
xchg
xchg
lret
sub
test
out
pop
mov
adc
jmp
push
rcrl
inc
mov
inc
call
xchg
sbb
pop
iret
inc
xchg
jle
inc
add
cmp
sbb
pop
stos
out
bnd
add
mov
or
add
fsubs
leave
icebp
push
xchg
sub
pop
scas
cmpsb
cmp
sbb
out
in
cs
shl
pusha
dec
mov
lods
rcrl
xor
daa
xor
ss
mov
sub
lods
push
jecxz
mul
rcr
jbe
jb
in
add
repz
mov
mov
fwait
icebp
mov
leave
inc
out
xchg
adc
mov
ret
nop
push
cltd
push
mov
mov
mov
es
adc
cs
repnz
jle
ror
icebp
adc
out
push
push
dec
mov
xchg
jg
xor
mov
sub
and
mov
xchg
push
hlt
inc
jl
jl
mov
xor
jmp
mov
out
cmc
dec
mov
mov
test
sbb
movsb
rcrl
push
scas
cmp
push
cltd
loop
movsb
jp
lods
sub
and
cmpsl
les
mov
add
test
lret
mov
fcomps
inc
daa
das
aaa
adcl
iret
lret
call
stos
and
or
xchg
jne
jne
jbe
xchg
push
adc
outsb
sahf
pop
arpl
push
inc
inc
xor
add
adc
jmp
push
jo,pn
cmpb
mov
lret
ljmp
test
gs
mov
out
std
call
or
lock
jns
fwait
and
sbb
inc
jo
mov
mov
xchg
pop
dec
iret
inc
xchg
or
aad
mov
std
enter
xor
pop
add
pop
cltd
cmpsb
or
or
xchg
sub
or
mov
push
sub
xor
and
outsl
mov
popa
lret
mov
imul
cmp
cmp
mov
push
push
or
in
mov
mov
les
or
mov
and
inc
sub
cmp
mov
out
bndldx
pop
xchg
mov
in
clc
jae
fs
sbb
ljmp
lock
pop
xchg
pop
fimuls
mov
rolb
fcomps
cltd
sbb
mov
insl
or
cltd
xchg
out
lahf
mov
ficoml
pop
cmp
mov
add
sub
jno
push
xchg
icebp
in
dec
out
test
or
pop
push
xor
mov
inc
adc
jne
mov
fisubl
sahf
cmp
das
dec
jno
push
mov
enter
shlb
out
hlt
pop
or
lods
jno
jge
add
lcall
add
jnp
adcl
inc
jp
jb
in
or
push
fwait
out
sbb
xchg
pop
leave
cld
ljmp
xchg
jb
shr
ucomiss
rol
add
scas
test
mov
push
cmpsb
out
into
inc
ljmp
nop
xor
sbb
rolb
shrb
xlat
imul
lcall
xor
jo
xchg
jmp
jbe
inc
in
outsl
aam
cmpxchg
hlt
mov
xchg
sti
out
cmpsb
dec
inc
movsl
mov
stos
in
enter
in
fists
jmp
xchg
lock
dec
mov
cmp
xor
inc
mov
mov
int3
loope
push
push
push
bound
mov
cli
hlt
ljmp
push
xor
cltd
pop
sub
leave
sbb
jns
shlb
jmp
mov
clc
insb
mov
xchg
nop
sub
push
cmpsb
push
lahf
les
jb
movsb
repnz
push
jp
pop
or
es
push
xor
xchg
in
sub
pop
mov
sub
and
push
jno
xchg
sbb
inc
insb
cmp
jnp
pop
mov
es
mov
decb
cmp
mov
mov
cmp
mov
rorb
stos
shlb
cmp
pop
call
mov
mov
mov
add
std
mov
mov
lret
mov
jb
clc
cmp
push
push
idiv
lret
out
cmp
jp
jno
in
jmp
int3
pop
adc
mov
cld
cwtl
mov
add
aaa
hlt
adc
cwtl
jle
aas
popf
mov
mov
das
push
mov
xchg
cmpsb
jne
pop
adc
sti
insl
setge
and
or
in
adc
mov
gs
in
inc
int3
pop
sbb
sub
mov
cltd
xor
adc
cmpsb
and
push
add
jb
push
ljmp
mov
cmpsb
adc
xchg
dec
cmp
leave
push
xor
push
mov
ja
jo
mov
pop
scas
rcll
lea
push
outsl
jb
rclb
cmp
fwait
scas
int3
xchg
dec
inc
fnstsw
inc
out
adc
loopw
jo
js
push
sbb
mov
out
or
ljmp
sahf
dec
inc
cwtl
cli
and
and
lcall
icebp
sub
insl
es
sbb
fmuls
call
cmpsb
sbb
and
mov
inc
dec
xor
sub
pop
pop
fidivrs
xchg
xchg
mov
nop
in
add
cwtl
popf
xchg
adc
jbe
mov
add
pop
or
xchg
mov
jbe
sbb
movsb
adc
sbb
or
push
or
xchg
loop
or
cwtl
ficoms
xchg
out
popf
or
into
pop
in
jns
notb
int3
xchg
sbb
mov
xchg
fimull
xchg
call
orl
mov
fdivrl
ret
push
sbb
fmuls
test
xchg
shl
adc
lea
sbb
jg
xchg
rcl
test
lcall
fbstp
cmc
add
xchg
cltd
idivb
rcll
xchg
dec
cmpb
lock
fsubrs
jle
out
xchg
cwtl
in
lock
or
or
cwtl
out
loop
push
fdiv
cwtl
fdivr
fcomps
xchg
cmc
jle
je
outsb
test
ret
xchg
movb
jns
xchg
out
mov
rclb
in
imulb
or
ret
dec
xchg
mov
mov
jmp
mov
out
testb
cmpb
or
test
lea
xchg
push
adc
mull
rcr
stc
mov
jns
xchg
rolb
mov
xchg
nop
movsb
sahf
push
dec
repnz
push
mov
xor
aam
fsubs
mov
add
mov
mov
stos
sub
aam
call
fyl2x
adc
rorb
int3
mov
mov
into
nop
fcmovu
stos
mov
sbb
jmp
ja
mov
mov
gs
fnstenv
and
push
mov
mov
lret
jne
lret
mov
mov
int3
es
ret
enter
sahf
mov
inc
push
iret
and
cmp
add
jns
xchg
push
inc
loope
xchg
pop
icebp
inc
jl
pop
push
push
cmp
pop
adcl
shlb
mov
lock
dec
fisttpl
xlat
xchg
pop
pop
in
mov
mov
push
into
adc
mov
ljmp
out
roll
or
rolb
push
sbb
outsl
out
xor
mov
int3
icebp
movsl
and
inc
pop
repnz
pop
out
fldcw
stc
cmpsb
and
sub
xchg
arpl
push
ret
ret
adc
in
std
xorl
out
dec
mov
jl
xchg
mov
scas
fnstenv
sbb
shl
sahf
hlt
sbb
add
scas
and
mov
ljmp
mov
pop
dec
or
cmc
clc
stos
sub
data16
mov
loope
sub
adc
iret
mov
int3
je
sbb
pop
xchg
sbb
cmpsb
push
lock
pop
cli
jle
shl
push
ficoml
pop
pop
es
pop
and
cmp
shr
int3
sti
pop
mov
sbb
mov
adc
or
push
fcomps
ret
adcb
push
mov
in
cmp
xor
fnsave
lock
ficoml
push
xor
in
jle
int3
ljmp
test
cmpsb
add
lret
dec
sub
mov
outsl
dec
cs
aam
or
mov
xor
xchg
mov
lret
add
loop
pop
psubd
and
leave
or
mov
data16
or
inc
repnz
pop
inc
mov
mov
mov
test
jnp
lock
lahf
scas
mov
dec
inc
jmp
xor
pop
sub
mov
cli
iret
out
sti
cmp
rcll
test
cmp
xchg
mov
bnd
fxch
call
lea
jbe
mov
fisubrl
es
jns
movsb
push
out
add
or
xchg
dec
dec
fcmovnb
sbb
dec
dec
adc
xchg
push
mov
add
lret
es
ja
cmp
mov
cmpsb
dec
shlb
xchg
je
loope
mov
sbb
add
jne
out
test
rorl
movsb
int
mov
inc
bound
sarb
pop
fimull
jb
push
scas
mov
mov
push
mov
jl
out
fdiv
sub
hlt
fistl
jae
cmpsb
inc
pop
lds
shr
sub
shll
ljmp
xlat
mov
pop
xchg
int
popl
icebp
mulb
sbb
jl
push
jno
push
and
enter
or
cmpsb
shl
faddl
jp
cmp
jg
jp
and
leave
call
fcomps
lods
inc
lcall
adc
adc
rcrl
mov
xchg
adc
jp
aas
mov
repnz
jbe
xchg
xchg
inc
push
lcall
out
fidivrs
jp
xchg
js
dec
pop
rcll
push
mov
cli
mov
mov
cmpb
lret
jl
inc
or
out
fsqrt
jns
add
shlb
int3
cwtl
outsl
mov
push
add
add
out
xor
lock
jno
fdiv
pop
xchg
stos
int
cmp
gs
test
mul
lock
arpl
xchg
mov
int
xchg
or
pop
out
ret
pop
mov
xchg
mov
cs
test
inc
aam
nop
arpl
lret
jnp
je
pop
inc
shll
clc
sahf
xchg
dec
push
pop
inc
popf
cmp
es
cli
mov
sub
aas
mov
jmp
cltd
jp
repz
xchg
cmpsb
xchg
xchg
jecxz
test
or
fists
cmpb
nop
stc
mov
rcrl
out
jnp
cmp
test
mov
aas
mov
test
cmpsb
popf
jecxz
add
add
scas
rorl
andb
xchg
scas
or
adc
sbb
icebp
aaa
jl
fidivrl
sbb
es
add
out
xchg
push
rorb
or
inc
hlt
inc
push
cwtl
mov
push
and
fwait
int
cwtl
or
rcl
scas
idivl
bnd
mov
mov
rcrl
es
call
or
or
pop
ljmp
or
cmpsb
xchg
es
enter
xchg
push
mov
and
push
cmpsb
mov
sub
lock
hlt
pop
pop
xor
pop
hlt
add
push
out
es
ljmp
push
in
popf
xchg
inc
cltd
into
inc
push
pop
jbe
xor
cld
cli
jg,pn
call
lcall
es
push
push
mov
cli
lds
pop
or
fimuls
xor
xor
int3
jns
in
xchg
mov
out
out
sub
mov
lods
sub
inc
outsb
ss
jp
sbb
cmp
arpl
data16
pusha
subb
adc
jl
push
sub
dec
daa
sub
les
nop
rorl
inc
xor
xchg
je
xchg
in
jle
or
pop
aam
cmp
jb
cmp
mov
mov
mov
test
movsl
and
shlb
popf
sbbb
pop
mov
test
pop
xchg
sbb
sbb
imul
icebp
shl
adc
shrl
repz
pop
xchg
push
dec
cmc
push
test
inc
cmpb
xor
stos
mov
aad
jb
push
push
sub
data16
or
sub
fcomps
andb
in
sub
sbb
push
cmpsb
sbb
lcall
cmpsb
adc
cmc
enter
cmp
jno
xor
scas
push
in
out
mov
cmp
or
leave
add
pop
ds
xchg
clc
fs
sbb
sub
sbb
sbb
mov
mov
pop
aam
mov
nop
dec
mov
lods
fstpt
add
dec
movsl
fsubrl
es
fsubs
out
addr16
outsl
push
xor
adc
popf
repnz
sar
push
sbb
adc
pop
es
popa
mov
rcll
jo
push
xor
add
jbe
je
test
inc
push
cmp
loop
mov
jae
xchg
rorl
repnz
data16
arpl
xchg
dec
popf
dec
pop
adcb
dec
test
loop
out
fildl
lods
les
in
jmp
mov
xchg
out
pop
jp
js
loope
out
ss
push
jge
cmpsb
push
cli
lret
cmpb
fidivrs
cmp
xchg
pushf
mov
push
xchg
mov
jg
out
push
push
inc
cwtl
cmp
loopne
int3
rclb
cwtl
ret
dec
mov
pop
cmpsb
mov
nop
shr
push
cmp
push
push
pop
aam
push
pop
xchg
mov
mov
mov
jbe
jns
cmp
cmp
es
insb
out
repz
cltd
mov
pop
gs
adc
xchg
mov
mov
inc
mov
push
int
push
pop
push
repnz
jp
out
pop
jae
ficoml
scas
orl
xchg
les
xchg
cwtl
mov
shll
add
roll
inc
sbb
dec
cmpsb
in
mov
sub
neg
enter
and
popf
and
sbb
addb
ljmp
in
and
pop
test
add
push
dec
pop
addr16
stc
xchg
shll
push
sbb
out
cmpsb
jae
jne
in
add
nop
cmc
call
adc
sbb
int3
outsl
lds
cmp
cli
out
push
mov
and
pop
les
mov
movsb
mov
mov
shrl
dec
mov
adc
cmp
and
fiadds
xor
call
cmpsl
outsl
scas
in
jmp
cltd
mov
lahf
adc
movsb
xchg
rcr
icebp
clc
cmpsb
adc
xor
push
nop
or
js
dec
pop
dec
xchg
xchg
or
xor
xchg
jno
call
sub
xor
jge
sbb
pop
add
mov
out
ficoms
pop
nop
mov
xchg
fs
adc
insl
xchg
cmp
fnstenv
fcmovnu
loopne
mov
jg
jno
jl
into
inc
fs
mov
out
movsl
sbb
int3
cmp
push
stos
out
dec
jp
es
inc
dec
movsb
fiaddl
mov
pop
out
cmp
xchg
repz
mull
out
mov
inc
xchg
push
js
test
adc
dec
je
jne
leave
test
mov
hlt
sub
xchg
inc
add
dec
repnz
dec
lahf
xchg
cli
rorb
fisttps
in
es
jp
add
and
mov
fwait
jno
ljmp
dec
fwait
cmpsb
test
jbe
push
push
testb
std
push
jmp
push
sbb
je
pop
sbb
push
ret
movsb
int
ljmp
inc
jl
mov
nop
es
jns
sbb
dec
bound
clc
cli
push
hlt
dec
mov
std
jmp
jp
test
ljmp
shl
sbb
dec
dec
outsl
out
pop
outsb
int3
lret
cwtl
sub
insb
cltd
jns
call
setb
and
mov
test
adc
xchg
cmp
jae
mov
push
jle
xchg
in
mov
into
xchg
rol
in
out
jle
mov
cwtl
call
pop
insb
cmp
push
jns
sbbb
and
movsl
int3
cwtl
and
mov
es
xor
jo
jge
mov
out
cltd
movb
mov
xchg
mov
mov
xor
push
fbld
mov
ret
cwtl
es
jmp
xor
into
mov
imul
aam
and
sbb
ds
sub
push
xor
sub
dec
mov
jl
movsb
inc
mov
mov
fs
lock
dec
daa
cmp
enter
cmp
sub
inc
cmp
inc
scas
test
jb
sub
in
leave
lods
jecxz
out
les
and
shl
cmpsb
out
sar
jle
imul
and
dec
or
or
into
rcll
mov
jp
push
add
xchg
nop
pop
fistpll
sub
out
stc
imul
inc
cmpb
mov
not
fcmovnbe
idivb
rclb
lds
iret
je
push
xlat
xchg
jae
imul
in
hlt
rcll
out
es
xchg
adc
mov
negl
sub
pop
repnz
cltd
movsb
inc
adc
xchg
leave
out
arpl
dec
cmpsb
pop
add
out
in
rclb
test
pop
cli
aad
pop
repz
lcall
push
push
lods
jmp
divb
inc
ficoml
andb
subb
push
xor
fs
sub
mov
sbb
loopne
xchg
es
and
jne
pop
fbstp
jp
or
adc
cmp
xor
popf
adc
xchg
mov
cwtl
mov
push
leave
sarb
les
stc
cmp
sahf
push
jg
sbb
test
inc
clc
mov
in
dec
lcall
cwtl
mov
inc
cmp
mov
inc
jl
dec
fcmovbe
cld
js
repnz
inc
psubd
jmp
fimull
icebp
cmp
sub
push
jl
push
out
or
cmp
adc
mov
push
je
out
jbe
push
repnz
pushf
cwtl
cmp
jg
cmpb
or
or
cmpsb
jae
lcall
popa
cwtl
sahf
adc
mov
insl
es
adc
test
mov
cmpsb
enter
adc
aaa
fnstsw
xor
test
or
test
and
adc
cwtl
sbb
test
dec
scas
inc
pop
cmpsb
cmc
icebp
jno
arpl
inc
push
leave
int3
ficoml
pop
cs
jbe
mov
sbb
out
push
add
jle
dec
pop
push
fdivrp
testb
dec
in
push
into
lds
fdivrp
jp
add
or
jno
hlt
mov
xor
xchg
test
adc
insl
dec
xchg
cs
xor
push
stos
pushf
jmp
int
xchg
push
rcr
push
mov
xchg
icebp
int3
or
jbe
push
push
fimuls
out
mov
pop
lret
pop
jnp
xor
add
stos
call
inc
adc
out
dec
fldcw
int3
push
sub
scas
push
cmp
nop
fisttpll
scas
push
sbb
mov
imul
movsb
cwtl
mov
in
fstpl
fiaddl
rcr
out
add
xchg
sarb
cwtl
add
out
push
jb
into
je
mov
add
cli
iret
pop
xchg
pusha
inc
fsubrl
aas
lret
pushf
xlat
mov
aas
lods
ss
mov
cmp
ja
into
xor
stos
push
dec
add
xchg
inc
mov
test
mov
cmpsb
shlb
pop
add
push
js
sub
push
push
push
int3
xchg
or
jns
mov
stc
rorb
clc
mov
test
aad
js
jp
adc
mov
dec
test
sub
lret
das
or
lahf
jns
fildl
sbbb
inc
rcrl
nop
cmp
add
clc
mov
mov
lcall
std
push
adc
fidivs
xchg
sub
push
mov
ljmp
sbbl
es
dec
fisttps
bound
outsb
push
adc
adc
jge
mov
sbb
jo
mov
mov
inc
sbb
mov
fstl
out
into
sbb
push
insl
adc
arpl
cmpsb
lods
ficomps
cli
daa
lcall
jne
in
jnp
xor
cmpb
mov
roll
cli
es
jno
movsb
add
int3
call
push
add
andb
daa
int3
outsb
mov
repnz
jge
inc
fmuls
add
jae
rclb
daa
into
or
mov
push
hlt
mov
adc
rclb
pushf
clc
inc
mov
js
dec
das
xchg
pop
movsb
mov
scas
mov
cmp
sarl
sub
loopne
ja
es
push
xchg
or
mov
icebp
jae
pop
mov
adc
repnz
cmc
clc
push
mov
cmpsb
adc
adc
dec
es
mov
push
inc
lcall
nop
dec
cld
xchg
push
lcall
and
aas
pop
shll
adc
inc
es
sbb
xchg
clc
adc
push
cltd
loope
pop
shrl
aam
jecxz
pop
cmp
pop
jp
out
stos
cmc
cli
cmp
or
mov
cmpsb
adc
std
mov
xorl
cwtl
fnstenv
insl
xchg
rorb
shll
aam
and
and
xchg
add
inc
mov
cmp
outsl
data16
ret
pop
pop
jle
pop
ss
cmpsb
je
or
outsb
and
hlt
popf
inc
sarb
add
sbb
xchg
ljmp
jl
mov
fimull
push
insl
cwtl
test
cmp
mov
jl
jnp
out
jl
mov
or
adc
cmpsl
pop
fldenv
xor
loop
and
xor
shlb
cli
loopne
cmpsb
pop
mov
jnp
and
rclb
rcl
cltd
out
lret
cmc
ss
shll
sbb
or
hlt
push
sub
neg
fstps
int3
fst
pop
es
mov
jp
into
push
rol
xchg
cmp
es
mov
push
dec
sbb
stc
inc
adc
std
sub
jp
outsb
out
je
cmc
mov
dec
cmpb
out
cmc
rcrb
pminsw
mov
adc
ds
aam
ja
jecxz
jno
repnz
xchg
fcmovnu
out
nop
jno
sarb
push
dec
or
or
shr
mov
ror
dec
test
ljmp
cmpsw
cmp
or
cmp
jp
sti
loopne
cmp
shrd
mov
int3
aam
and
lods
jne
xor
es
cmc
mov
pusha
jp
idivl
int3
inc
xchg
mov
jp
cmp
mov
cmp
push
cmp
into
dec
ret
sbb
xchg
pop
es
fbstp
stc
pop
jle
test
xchg
rorl
movsl
stc
sarb
imul
pop
mov
jmp
ficoml
mov
je
insl
mov
mov
mov
mov
imul
popf
push
sbb
pop
pop
iret
inc
inc
loope
pop
push
sbb
and
mov
adc
adc
subb
sbb
mov
xchg
adcl
push
add
cmp
mov
sbb
cs
inc
stos
fldcw
jb
xor
dec
loop
aad
adc
lret
and
fwait
pop
cmp
mull
jmp
inc
cmp
xchg
jl
sub
loop
shlb
mov
cmp
out
lds
mov
fdivs
pop
mov
xchg
sub
cmp
pop
jge
out
sti
xchg
in
mov
push
decb
lret
pop
out
xchg
fisubl
add
fidivl
jb
fnstenv
xor
push
cmpsb
jns
mov
cmp
es
jg
push
rolb
movsb
ud1
into
dec
add
xchg
hlt
pop
and
hlt
cmp
cmc
cmc
fldpi
out
mov
jno
pop
nop
lret
fisubrl
mov
inc
cmc
cmp
test
cmpsl
insb
pop
adc
mov
dec
mov
push
pop
inc
xchg
cwtl
popa
addl
repnz
mov
dec
mov
xchg
cwtl
jo
leave
les
shll
sarl
sbb
rcll
pop
cwtl
mov
xor
jmp
push
out
add
fwait
sbb
jno
lret
std
lcall
pop
sbb
clc
fmuls
dec
sub
jne
mov
hlt
cmp
push
push
outsl
icebp
out
in
mov
into
int3
or
sub
ss
inc
sub
movsb
stc
mov
rcrb
adc
xor
jnp
pop
aas
xchg
dec
sub
scas
ror
ret
jle
cmpsb
jmp
sbb
out
das
jne
sar
or
ficompl
pop
leave
jns
out
pop
sbb
stos
mov
and
ficomps
pusha
sub
aam
and
xor
fimull
jb
mov
mov
mov
ljmp
mov
cmc
mov
clc
sti
sbb
negb
nop
ljmp
iret
jne
leave
cmp
ljmp
stos
mov
mov
repnz
int
pop
wbinvd
pop
xor
out
neg
mov
pop
xchg
in
mov
insb
adc
mov
scas
xchg
cld
xchg
xchg
loop
clc
lods
sbb
pop
xchg
out
sarb
mov
dec
imul
add
xchg
shl
test
daa
sbb
dec
and
movsb
das
in
addr16
xchg
mov
and
pop
sub
aas
or
and
mov
out
pop
jp
push
mov
aam
clc
hlt
fdiv
fs
inc
out
orl
push
iret
movsb
sbb
dec
push
push
mov
sbb
push
pop
pop
repnz
es
call
aaa
dec
or
cmpsl
daa
clc
mov
rcrb
sbb
test
push
push
shlb
jo
movsb
push
push
enter
add
mov
les
xchg
fsubl
xlat
xor
imul
cmpsb
stos
push
inc
jecxz
arpl
mov
lret
xor
cmpsb
pop
notb
shll
imul
test
mov
jne
lcall
ss
shrb
xchg
inc
dec
sub
cli
mov
xor
xchg
cmp
int
add
test
negl
shrb
test
sbb
imul
push
cmp
pushf
nop
stos
daa
pop
mov
sbb
lods
sbbl
mov
dec
jae
outsl
or
rclb
and
out
mov
in
fidivrl
push
and
enter
mov
pop
push
test
notb
pop
mov
cwtl
xchg
sbb
orb
and
movsl
lock
sti
inc
fnstcw
mov
cmpsb
insl
test
sbb
mov
je
jb
mov
pop
lret
ror
mov
orl
pop
push
fsubrl
in
add
movsl
lods
sarl
push
jo
and
sbb
xor
jp
cmp
divb
ss
insb
fs
pop
mov
push
pop
xor
lcall
and
es
dec
or
cmpsb
fs
xor
fcom
adc
movsb
gs
add
imulb
adc
lret
dec
mov
out
adc
fiaddl
rorb
dec
outsb
into
xor
movswl
push
and
aas
out
jo
xor
xchg
xchg
dec
add
inc
jge
mov
rep
out
insb
cltd
test
int3
mov
ljmp
fidivrl
scas
push
cmpsb
inc
push
push
xor
repz
pop
out
sbb
or
jp
divb
repz
leave
dec
jl
and
jmp
mov
mov
mov
rclb
inc
mov
cmpsb
inc
jl
jge
push
rorb
xchg
cltd
pop
andb
mov
popa
aaa
shlb
into
stos
pop
mov
push
iret
mov
inc
xor
mov
mov
dec
les
cmpsb
fcomp
inc
inc
jne
fiaddl
aam
xor
lock
mov
push
cli
fdivrp
pop
xchg
pop
pop
mov
or
sarl
ljmp
jbe
sbb
mov
icebp
or
testb
dec
mov
outsl
je
push
clc
mov
loop
ss
fmul
pop
pop
in
dec
into
or
cmp
pushl
push
dec
divl
cli
dec
dec
scas
mov
mov
les
pop
mov
add
dec
pop
nop
scas
sbbl
push
jo
mov
inc
push
aam
mov
lock
lret
iret
xchg
xchg
fistpl
and
lea
cmpsl
testb
mov
cmp
cmpsb
in
sub
movsb
mov
mov
add
stc
in
cmp
mov
push
cmp
jne
call
test
xchg
insl
out
push
flds
adc
lret
cmpsb
enter
outsl
push
jo
or
das
mov
into
pop
xor
jne
mov
es
mov
adc
dec
sarl
lea
jl
clc
inc
or
call
adc
add
fcomip
xchg
stos
dec
sbb
mov
popl
repnz
cs
aam
mov
sub
pop
fldenv
or
lcall
xchg
rcl
sbb
loopne
into
es
add
xchg
xchg
jnp
jno
cmp
fildll
mov
xor
dec
arpl
cwtl
int3
mov
inc
popf
fsubs
fsubr
rolb
dec
adc
lret
and
movsb
int
pop
jo
fwait
not
push
leave
je
ss
adc
loopne
scas
mov
les
pushl
lret
sbb
les
jne
sar
je
push
loopne
cmc
es
push
cmpl
cmc
inc
sbb
pop
mov
pop
xchg
and
inc
stos
push
rorl
es
imul
shlb
js
and
subb
jecxz
icebp
mov
out
adc
pop
pusha
stc
fstpl
ret
rcl
cld
aam
push
mov
aam
push
mov
shrl
lcall
repnz
rclb
enter
arpl
cmpsb
and
dec
sbb
xchg
test
fnstenv
es
enter
add
xor
xchg
test
jp
loop
ljmp
out
pop
shr
orl
popa
mov
push
ret
out
jae
iret
xchg
mov
shl
adc
popf
cld
testb
out
sub
lock
cli
pop
inc
push
jecxz
mov
es
out
push
std
jmp
shl
test
das
cmpsb
out
xor
fldt
pusha
push
enter
sahf
mov
lcall
mov
mov
fdivs
jb
pop
lcall
cmpsl
xor
dec
dec
lods
xchg
jns
sbb
push
dec
dec
mov
movsb
hlt
test
or
ja
imul
je
sarl
gs
lret
mov
std
mov
or
xchg
cmpsb
push
xchg
or
xor
inc
xchg
mov
pop
lret
inc
std
pop
xor
ret
ss
ds
fdivr
mov
xchg
xor
nop
cmc
jmp
aad
mov
inc
cltd
sub
call
xor
cmpsl
inc
out
out
stos
mov
jnp
in
ja
pop
mov
xchg
flds
mov
sbb
push
cmpsb
int3
xchg
push
fwait
adc
mov
das
aam
mov
rclb
inc
or
push
ret
push
dec
test
cmpsl
rcrl
mov
test
jge
jno
pop
adc
cld
push
sbb
cmpsl
jecxz
aam
in
mov
int3
xor
sahf
cmp
shl
adc
push
int3
push
fistpll
xor
pop
mov
fists
cmc
out
sahf
sbb
jne
push
xorb
ss
mov
rcrl
fnstcw
sahf
paddw
xchg
es
xchg
cmp
fidivrl
in
pop
lahf
push
dec
dec
cmp
lock
test
jecxz
mov
test
adc
xchg
dec
outsl
test
sbb
lret
jb
arpl
jno
xchg
mov
ds
mov
lods
pop
xchg
es
or
mov
adc
cmpsb
add
push
loope
int3
push
cld
mov
pop
or
aas
es
leave
push
jecxz
jl
adc
sbb
inc
adc
in
pop
jg
dec
dec
imul
pop
xchg
scas
stos
hlt
in
stc
mov
dec
int3
shl
xchg
jmp
lahf
lret
loop
jnp
mov
dec
filds
mov
pop
jmp
adc
rolb
jmp
fidivl
add
adc
int
xchg
gs
lcall
xchg
dec
mov
out
xchg
jo
ret
mov
adc
int
adc
es
push
push
popf
push
add
or
push
dec
adc
in
sar
cmp
sub
stos
test
pop
repnz
ret
pusha
jns
icebp
sahf
or
int3
aam
jg
stos
or
iret
cmp
scas
xchg
push
adc
cwtl
test
mov
jp
inc
sahf
push
xor
mov
jge
xchg
add
xor
adc
and
jl
cli
lock
jns
popa
mov
int3
popa
stos
fimull
icebp
cmpsb
insb
or
loope
sub
lret
mov
lret
int
je
push
scas
sbb
rcrl
fbld
out
ja
test
cmc
dec
sbb
rcrl
mov
pop
test
bound
mov
rcll
sbb
xor
adc
push
jle
cmc
jno
stc
subb
out
xor
cmpsl
sbb
mov
mov
mov
les
out
dec
xchg
adc
ja
cmpsl
push
pop
inc
mov
sub
mov
jns
jmp
in
out
push
out
push
lret
push
mov
inc
fadds
push
sti
mov
mov
clc
out
add
pusha
adc
push
push
push
lret
jne
out
cli
mov
adc
insl
xchg
popf
jge
or
dec
xchg
rcll
rcl
jg
fwait
mov
mov
mov
repnz
fdivs
cmp
xchg
xchg
cmpsb
mov
outsl
std
lahf
ret
repnz
sub
mov
icebp
sahf
jecxz
mov
int
lret
xor
mov
mov
pushf
adcl
cmpsb
xchg
leave
lret
sbb
enter
repz
or
fmull
mov
sbb
leave
outsl
xchg
mov
es
mov
std
fstp
rcrl
aad
in
inc
rcr
sbb
xor
in
dec
test
lds
mov
push
cmc
adc
xor
pop
lock
push
sub
and
xchg
add
insl
loopne
ret
icebp
repnz
out
imul
ljmp
idiv
adc
push
pop
and
cld
sbb
stos
or
fcomps
test
pop
jg
mov
inc
pop
mov
add
mov
addr16
cmpsb
and
mov
lods
iret
andl
adc
xchg
dec
pusha
frstor
andb
ficomps
cmp
testb
pop
fimull
cmpsl
and
iret
or
int3
add
adc
dec
mov
xchg
add
xchg
pusha
ljmp
mov
jmp
fcomps
ss
out
cwtl
out
inc
mov
xchg
subl
mov
rcll
mov
outsb
add
ss
lret
cmp
pop
loopne
cmpsb
aad
xchg
cltd
push
push
inc
int
arpl
xor
jae
jg
ljmp
test
push
inc
jnp
pop
adc
icebp
sbb
adc
jno
jmp
xor
xchg
add
pop
sarb
stos
xor
add
aam
mov
xor
adc
adc
fiadds
adc
push
push
jno
lret
cmp
lcall
out
mov
cmpsl
repnz
lods
add
sbb
hlt
mov
mov
addr16
mov
fwait
or
sahf
addr16
jo
pusha
sbb
out
test
push
push
or
jmp
sbb
cmp
sbb
xchg
xchg
lret
xchg
stos
mov
xchg
mov
xor
and
insb
mov
ljmp
lret
in
pop
or
fcomi
inc
adc
es
lods
push
xchg
xchg
sbb
shl
fdivr
out
leave
xchg
mov
std
cs
jge
pop
adc
mov
out
es
test
or
popa
stos
cltd
lret
adc
cmpsb
sub
xor
push
pop
adc
mov
es
bound
xchg
and
shll
xor
xor
arpl
mov
jno
int3
cli
mov
lods
inc
jne
sbb
test
adcl
pop
imul
and
nop
pop
in
aas
in
mov
rorl
in
lds
shl
cmp
stos
repz
push
out
mov
ds
adc
into
ret
cmp
mov
clc
repnz
ror
mov
mov
adc
xchg
xor
fwait
sarl
call
cltd
enter
xor
inc
lods
lcall
sbb
movsb
add
movsb
push
test
je
cwtl
rorb
test
cmpsb
jnp
mov
jbe
test
add
xchg
nop
mov
and
into
sbb
mov
enter
jge
sub
out
jecxz
mov
xchg
or
xchg
shll
jle
out
imul
aad
cli
dec
sbb
inc
pushf
je
mulb
dec
into
inc
mov
add
in
push
mov
aam
inc
out
imul
sti
fcmovnb
addr16
mov
cwtl
repz
test
pop
fimuls
cmp
mov
repz
add
push
cltd
xor
ret
xchg
mov
mov
lods
out
dec
or
data16
scas
fimuls
xchg
ret
and
nop
scas
dec
pop
xor
sbb
pop
clc
in
cltd
shl
je
iret
sbb
dec
cmp
mov
icebp
test
sysenter
dec
into
scas
inc
mov
inc
aam
clc
sub
jno
push
xlat
test
push
mov
int
outsl
test
in
mov
mov
pop
mov
fcom
ficoml
adc
outsl
mov
jno
out
or
lock
or
out
scas
lret
ret
xchg
inc
add
in
jb
movsb
fistl
inc
popf
xor
scas
adc
mov
out
jbe
add
xchg
or
fstl
push
mov
mov
sub
push
adc
mov
ror
aaa
mov
shl
outsl
adc
inc
and
mov
cwtl
cmpsb
xor
add
repnz
or
jno
addl
js
mov
mov
das
mov
clc
scas
out
cli
mov
push
push
sbb
lds
jmp
jmp
adc
cli
or
arpl
cmp
rorl
push
cwtl
es
aaa
or
repz
mov
lret
dec
daa
fildl
mov
inc
sbb
and
push
cmp
pop
bound
js
js
mov
sub
gs
mov
scas
sahf
ljmp
in
xor
je
inc
cmpsb
loop
add
sti
xchg
dec
in
inc
cwtl
lret
xorl
xchg
jae
sub
mov
and
xorb
jae
cmp
cmpsb
mov
xorb
xor
sub
repz
scas
xchg
cmc
jns
cmpsb
es
icebp
inc
adc
cltd
test
shl
xchg
sub
mov
cwtl
add
or
inc
mov
xor
arpl
out
leavew
clc
loope
dec
mov
sbbl
dec
stos
inc
inc
aas
push
push
into
push
mov
dec
cli
es
out
xchg
inc
fldcw
lahf
sti
fwait
iret
sbbb
hlt
jecxz
cli
mov
testl
inc
leave
sbb
cmpsb
cmp
andl
icebp
call
sbb
cmpsb
jne
subb
jle
cltd
ljmp
jae
inc
xorb
pop
shlb
or
push
cs
mov
aad
stos
sbb
adc
in
int3
push
sub
push
aam
adc
mov
jecxz
push
call
or
pop
xchg
es
xchg
mov
mov
stc
test
rcll
pushf
push
xchg
mov
cltd
out
loop
mov
cmc
jg
lods
lock
cwtl
mov
test
or
test
es
mov
adcb
in
repz
dec
cmp
mov
lods
xchg
mov
test
push
ficompl
mov
pop
out
inc
cli
out
int3
pop
push
stc
adcl
into
fisubs
mov
ret
pop
pusha
addr16
in
xor
rol
out
xchg
lret
in
fcomps
sub
or
sbb
ficomps
rcl
sbb
push
sbb
cmpsl
cmpsb
push
mov
cli
lahf
fnstenv
push
out
jnp
add
in
xchg
es
incl
adc
fstps
dec
pop
sub
or
sub
fists
repz
mov
jle
adc
mov
clc
lock
push
cwtl
inc
mov
sti
push
es
mov
in
adc
adc
add
fcmovnu
sbb
mov
xchg
push
in
mov
xor
pop
jns
cld
shlb
out
xlat
inc
lret
cmp
je
in
aas
push
je
lock
cmpsb
pop
adc
mov
cwtl
pusha
shlb
nop
cli
mov
js
mov
add
in
adc
add
dec
icebp
enter
mov
xor
in
pop
jns
rcr
mov
fstl
mov
push
lods
cmp
push
shl
pop
dec
mov
les
dec
into
push
jo
in
rclb
es
call
pop
loopne
fstps
cmp
dec
sahf
jle
out
or
mov
test
mov
in
xchg
rclb
cmpsb
shl
loopne
dec
adc
add
dec
sbb
push
push
rcll
pop
mov
jns
pop
cwtl
dec
sbb
sbb
cwtl
ret
ljmp
dec
out
xchg
and
sub
xchg
jbe
bnd
mov
sbb
cmc
or
outsl
xchg
cmp
xchg
xchg
mov
xor
mov
cmp
data16
xchg
shrb
daa
and
es
outsl
push
xorb
test
xchg
jge
fisubrl
xchg
hlt
mov
test
lock
loopne
cmp
test
into
jle
or
jb
jp
aad
mov
lret
pop
lds
push
shrl
ret
scas
jge
es
mov
sbb
aam
popa
fistpll
mov
jmp
fucomp
test
xchg
leave
sub
cmpb
jo
std
es
xchg
mov
not
jl
add
pop
jecxz
fistpl
imul
push
pop
push
cmp
jl
fistpl
ds
sbb
rcr
aaa
cmp
fstps
mov
inc
mov
in
icebp
mov
cltd
push
iret
lcall
jmp
mov
cmpb
fmul
leave
push
lcall
pushf
lsl
sub
push
push
cmp
push
cmpsb
cmp
cmpb
push
je
jno
loopne
cmp
lret
into
aam
cmpsb
jne
adc
adcl
ret
jno
sbb
dec
xchg
pop
sbb
add
mov
cmp
pop
ljmp
pop
mov
nop
pop
orb
dec
cmc
fsubr
mov
xchg
test
rcl
mov
clc
loop
mov
daa
cltd
inc
sub
mov
fidivrl
lcall
fimuls
jno
cmc
stos
sub
ljmp
insl
and
sbb
fdivrl
ljmp
pop
mov
or
jbe
addb
mov
fyl2xp1
mov
lods
je
in
mov
in
lods
and
dec
roll
fistpll
js
inc
sbb
fcoml
jb
xchg
out
mov
xlat
sbb
out
pop
idivl
pop
in
mov
jo
xchg
sbb
rolb
js
es
fstpt
out
adc
sbb
jae
jne
popf
mov
call
fistps
stc
pushf
aas
xchg
dec
sarl
push
out
bound
insl
insb
adc
mov
mov
jne
cmpsb
into
clc
cli
push
pop
and
sahf
leave
and
xchg
lock
dec
int3
dec
adc
xchg
push
inc
inc
jb
imul
pop
bound
cltd
cmp
push
inc
or
cmp
jecxz
inc
test
inc
lret
push
cmp
xchg
mov
jbe
ljmp
sbb
sub
mov
cmpsl
inc
mov
xor
sub
mov
jns
fdivr
test
aas
lea
jns
pop
call
jle
xchg
push
xor
mov
sti
cmp
inc
xchg
pop
mov
sub
lods
or
stc
divb
push
in
mov
sbb
and
daa
jmp
cmp
data16
hlt
cltd
sub
sub
insl
sub
ljmp
xor
mov
xchg
enter
push
mov
push
mov
test
lcall
lahf
adc
xchg
push
in
in
std
adc
cmpsb
data16
dec
pusha
lods
fldt
cmpsl
fiaddl
das
and
lahf
ljmp
pop
xchg
dec
mov
xorb
scas
test
mov
cmpsb
xchg
enter
dec
fsts
rcrb
shll
out
jp
xchg
jbe
sbb
jo
out
orl
sbb
push
mov
sbb
pop
cmp
inc
or
cmpsb
mov
xlat
mov
jns
adc
test
imul
adc
jl
mov
popa
sbb
mov
sub
dec
or
xchg
out
lcall
mov
dec
pusha
daa
cmp
out
mov
jle
cmp
cmc
jnp
mov
ja
mov
cmpsb
xchg
sti
xor
scas
hlt
popf
and
shrl
and
push
test
mov
jl
clc
jmp
push
push
cmp
out
xchg
mov
cmp
jl
mov
cmc
mov
add
insb
cmp
sub
ret
dec
jo
sbb
cli
cmpsl
fists
dec
add
sub
pop
mov
fwait
add
cmpsb
jge
movb
fsts
or
out
jle
popf
hlt
out
hlt
adc
int3
adcb
mov
pop
fidivrl
out
lea
mov
arpl
ljmp
pop
sarb
mov
insl
adc
shrb
sbb
test
std
test
es
adc
mov
sbb
add
lods
mov
push
pop
dec
mov
xor
mov
popa
jne
mov
clc
mov
mov
jp
xor
ds
pop
or
daa
test
push
pop
imul
bound
mov
xor
adc
lahf
movsl
dec
xchg
cmpsb
mov
lret
xor
jmp
lahf
lret
insl
mov
stos
mov
fiaddl
adc
sarb
fwait
cmp
gs
mov
adc
cmpsb
filds
mov
sbb
jp
out
test
insl
cmp
call
mov
ljmp
out
rclb
mov
push
sub
pop
hlt
mov
mov
xor
cli
cs
push
xor
push
aas
mov
add
and
jmp
sbb
push
ret
fwait
addl
pop
mov
xchg
xchg
cmpsb
adc
loopne
push
stc
fs
xor
inc
adc
or
xchg
hlt
adc
sub
jmp
aas
rcl
mov
int3
popf
dec
call
sahf
lods
xchg
mov
es
xchg
cltd
mov
mov
push
jns
sub
in
outsb
jp
das
pop
shrl
mov
mov
xor
add
mov
repz
sub
inc
popf
insb
jecxz
sbb
dec
mov
test
pop
pusha
je
sbb
fimuls
pop
in
and
outsl
pop
sub
mov
ljmp
push
adc
sub
lret
lahf
or
or
out
jle
xor
add
sub
popa
mov
cmp
mov
dec
mov
hlt
mov
push
sar
cmp
push
pop
xor
inc
jbe
outsl
mov
jo
shrl
addr16
xchg
sbb
ret
insb
sbb
push
jp
shrl
in
pop
adc
or
cwtl
repz
mov
jmp
pop
adc
mov
setnp
lea
pushl
movb
movl
push
jmp
pusha
pusha
movw
jmp
mov
ret
outsl
pop
sub
sub
or
jp
leave
shlb
ja
test
sub
int3
sub
pop
outsl
dec
int3
lods
mov
push
repnz
pop
and
into
imul
mov
fldl
fwait
call
inc
nop
xor
rcrb
add
pop
gs
jge
inc
fnstenv
pop
pop
fdivrp
jg
ja
repz
std
dec
negl
inc
clc
aas
and
gs
loope
mov
xchg
sbb
pop
sub
push
cli
cld
mov
ret
scas
test
imulb
negb
inc
out
data16
xor
xchg
inc
and
ds
pop
push
pusha
aas
sbb
push
inc
in
push
sbb
lahf
imulb
add
jg
movsb
pushf
outsb
stc
outsb
pop
sub
mov
and
xor
pushl
es
loope
or
push
mov
xchg
lea
fs
pop
aad
stos
test
inc
push
dec
test
add
push
test
xor
inc
jecxz
jl
sub
mov
into
es
std
repz
frstor
cli
xchg
adc
jne
add
andb
pop
test
cli
scas
lock
push
mov
adc
push
or
stos
cmp
in
add
and
pop
sub
dec
cmpsl
sti
mov
cltd
scas
ja
movsl
sbb
mov
dec
cmpsl
cmp
cmp
mov
xchg
leave
dec
mov
lds
xor
stos
rcrb
mov
xorb
dec
pop
inc
add
sarl
xor
xchg
scas
in
add
jle
add
imul
pop
inc
mov
mov
fadds
push
push
sbb
mov
fdivrs
pop
pushf
mov
out
push
push
stc
pop
push
repnz
sub
insl
int3
adc
jo
jg
or
add
outsl
ret
add
ficoml
jno
rol
mov
std
add
xorl
jne
xlat
push
dec
and
js
mov
jno
jmp
sbb
sbb
cmpb
das
outsl
sarb
mov
xchg
leave
push
unpckhps
mov
dec
inc
stc
scas
lds
dec
push
pop
sub
mov
sbb
stc
icebp
idivl
aaa
hlt
adc
pop
push
cmp
mov
cmp
ret
fsubrs
ret
fistl
jecxz
daa
dec
mov
fwait
dec
dec
mov
mov
push
ficoms
xor
hlt
lds
mov
ret
jno
jns
cltd
jnp
pop
cmp
nop
fimuls
repz
dec
sti
fbld
punpckldq
jmp
push
push
mov
jecxz
pushf
xchg
push
cltd
cmpsb
push
sbb
bound
leave
fsubr
cmp
add
ljmp
dec
cmpsl
add
pop
cmp
je
mov
in
sti
add
pushf
lea
je
cmp
cmp
stc
bt
cmp
pusha
pushf
mov
lea
je
pushf
pushf
push
pusha
lea
jmp
pusha
movl
pushf
push
lea
jmp
add
inc
js
je
jb
arpl
jae
fsts
sub
adc
test
mov
sbb
adc
aas
mov
loop
sbb
mov
push
mov
das
sub
lahf
or
adc
mov
adc
int3
push
mov
arpl
std
fisttps
inc
cmpsl
xchg
inc
inc
push
fsts
dec
ret
mull
pop
cmc
jae
stos
sub
test
fcoml
imul
fdivs
inc
mov
in
push
scas
enter
xchg
lret
aas
lret
inc
mov
push
cmp
scas
inc
xchg
jmp
xor
sub
lods
iret
and
popa
jnp
mov
frstor
dec
xchg
jae
pop
sbb
call
mov
pop
leave
mov
inc
inc
mov
jo
sbb
xchg
pop
xor
jmp
enter
scas
jge
sub
outsb
mov
push
ror
mov
cmc
btc
bswap
xchg
bts
bsf
mov
movzbw
mov
bsf
rol
mov
cmp
call
sbb
sub
sbb
jae
loopne
jb
mov
push
loopne
xor
and
sub
sbb
xchg
fiaddl
push
or
cmpsb
inc
mov
mov
jle
mov
sbb
push
cwtl
mov
js
ss
and
icebp
sbb
and
fdivl
cwtl
subl
pushf
fstp
jle
lcall
add
sub
dec
inc
orl
dec
dec
out
hlt
inc
pop
sbb
pop
test
in
fwait
mov
in
push
fistl
xchg
cli
repz
inc
sahf
inc
cltd
xor
sub
sti
incl
lcall
push
jp
loopne
adcl
xchg
cmp
cwtl
stc
sbb
mov
sbb
xor
xor
sub
mov
sub
sub
sub
popa
arpl
loopne
mov
xchg
and
sbb
and
add
lcall
stc
clc
js
jecxz
sbb
mov
out
clc
mov
aad
sbb
cmpl
or
or
mov
sub
jo
mov
xchg
ficoml
sbb
sbb
cltd
mov
add
idivb
stos
dec
cmpsb
shr
xchg
or
shr
fidivl
xchg
or
in
xchg
mov
mov
mov
mov
mov
clc
ljmp
push
rorb
push
ret
mov
mov
mov
adc
mov
xchg
orb
loope
sbb
cwtl
mov
shll
or
in
clc
loop
push
int3
mov
jle
loope
out
mov
test
loopne
ja
adc
call
test
aam
or
aam
lock
cltd
cmp
mov
sbb
xchg
into
fcomps
jle
adc
push
sbb
lret
push
call
not
push
mov
movsb
xchg
pushf
mov
push
jle
hlt
clc
in
in
fimull
xchg
cwtl
adc
cli
push
rclb
nop
add
pop
lock
out
addr16
jl
repz
jno
shrb
popa
xor
addl
test
adc
xchg
xchg
adc
nop
xchg
adc
mov
cwtl
into
les
mov
adc
adc
mov
mov
cmp
testl
call
lods
fisubrl
adc
mov
push
sbb
lret
aam
adc
cltd
idivb
clc
sbb
mov
notb
clc
notb
push
in
sbb
mov
adc
mov
push
adc
mov
xchg
mov
cmp
adc
clc
jl
push
out
xchg
mov
aam
cwtl
clc
lret
ret
mov
clc
mov
pop
push
mov
nop
clc
popl
xchg
div
push
xchg
mov
pop
sbb
cltd
cmp
je
cmp
clc
push
pop
xchg
ljmp
mov
clc
push
dec
xchg
mov
push
inc
mov
mov
mov
jl
stos
push
lock
adc
test
xchg
mov
cli
mov
adc
adc
xchg
jbe
dec
outsb
adc
jno
pop
fsts
sbb
sbb
aad
arpl
adc
icebp
fiadds
mov
push
stos
es
fdivrl
fisubl
mov
fcmovnb
xchg
fldl2e
or
stos
mov
neg
divb
js
or
xchg
xchg
xchg
dec
cli
cltd
hlt
xchg
xchg
shll
or
push
nop
mov
test
loope
int3
dec
inc
pushf
rclb
xchg
mov
xchg
call
sbb
rsqrtps
les
or
test
push
add
mov
push
clc
xchg
hlt
mov
mul
push
in
call
repz
adcl
mov
div
mov
rclb
js
test
ficompl
push
jl
idiv
in
out
ficoml
ret
mov
pushf
adc
test
ljmp
ret
iret
sbb
mov
fcomip
xchg
movsb
rorl
shrb
mov
sbb
adc
xchg
adc
pop
fwait
mov
mov
sbb
in
pushf
clc
fcompl
mov
negb
clc
mov
push
lods
xchg
and
cwtl
xor
and
push
and
repnz
and
push
and
mov
clc
movsl
mov
sbb
outsl
cmp
ret
jno
sub
xorb
shlb
mov
test
mov
sbb
out
movsl
outsl
in
iret
fdivrl
stc
adc
rclb
int3
out
sbb
dec
xchg
add
test
nop
xchg
inc
pushf
inc
loop
or
jbe
out
cwtl
insb
pop
mov
dec
in
cwtl
pop
jg
mov
jle
jns
cld
mov
sbb
int3
enter
popa
push
adc
xchg
dec
shlb
fiadds
adc
adcb
xchg
sbb
divl
rorb
push
push
push
mov
not
push
popf
mov
sbb
cwtl
push
fmuls
aad
clc
sbb
sbb
mov
sub
cmc
into
loopne
shlb
jp
scas
insb
xchg
xchg
push
mov
adc
mov
out
mul
dec
les
push
push
mov
lods
push
test
movsb
mov
insl
in
scas
shlb
xchg
xchg
mov
mov
mov
test
adc
into
loopne
movsb
mov
sbb
nop
mov
test
xor
loopne
lods
mov
jle
movl
mov
add
xchg
mul
out
push
mov
clc
mov
rclb
xchg
adc
mov
aam
out
jbe
pop
push
adc
aad
jle
push
test
mov
lret
int3
push
in
ss
jl
push
int3
fsubl
xchg
xor
or
inc
or
into
or
adc
test
loopne
lock
stos
ret
lock
push
cwtl
dec
add
push
les
ljmp
test
xchg
cli
cmp
add
scas
fmulp
jbe
xchg
int
popf
fsub
pushf
add
ficoml
sarb
out
jg
cli
push
push
in
cwtl
jne
xchg
in
divb
mov
out
mov
sarb
rorb
mov
push
or
shlb
clc
xchg
jbe
loopne
shlb
cmp
xchg
aam
xchg
inc
movsb
loop
rcrb
dec
xorb
shrb
scas
idivb
mov
aam
stos
and
push
fidivrl
mov
add
mov
scas
dec
pop
rclb
mov
lret
mov
repnz
xchg
lock
enter
mov
sahf
aam
add
mov
mov
lods
mov
test
ljmp
jb
insl
testb
clc
in
or
push
mov
out
outsb
in
mov
icebp
mov
into
int3
mov
mov
mov
mov
out
push
mov
push
push
loopne
jle
dec
add
test
fcmove
push
dec
mov
mov
ret
lds
or
push
clc
lcall
push
xchg
add
test
movsb
push
outsb
loop
cli
mov
and
jl
inc
test
clc
nop
enter
outsb
out
add
movsb
rcrb
dec
jbe
cwtl
test
mulb
rcrb
sbbb
inc
push
call
movl
lea
jne
sar
add
mov
jmp
bt
cmp
movb
jmp
sbb
sub
mov
lahf
mov
inc
jo
inc
mov
mov
push
int
sub
and
movsb
and
mov
mov
in
push
cmpsb
pop
loop
or
push
aas
and
inc
jmp
xchg
adc
rorl
ret
lret
iret
jmp
mov
inc
lock
fwait
adc
mov
mov
mov
or
std
je,pt
imulb
cmp
xor
xor
mov
dec
mov
mov
inc
jae
sbb
aad
cmpsb
sbb
xor
arpl
test
jmp
clc
or
jmp
lea
jne
ror
btc
dec
mov
mov
add
add
btc
sub
ror
bswap
mov
push
pushl
pushf
jmp
pusha
test
sub
cmp
cmc
pushl
popl
bt
pushf
push
cmp
mov
lea
ja
and
mov
bt
pushf
sub
pushf
shrd
shr
shld
add
add
dec
cmc
ror
mov
shl
inc
neg
mov
call
sbb
stc
jl
sub
mov
or
pop
mov
and
fsubs
dec
int
out
mov
hlt
adc
test
inc
push
dec
lea
xor
jp
xchg
jo
fstps
mov
cld
hlt
out
pop
ret
pop
or
scas
int
loop
mov
sub
dec
xchg
jno
and
mov
js
ljmp
scas
sbb
out
xlat
dec
xchg
mov
sbb
add
scas
sbb
xor
xor
xchg
pushf
pushf
call
push
jmp
cmc
test
test
xor
jo
lahf
mov
ret
inc
andb
xchg
push
ss
or
xlat
lcall
idivb
jb
ja
xchg
lods
push
cmp
xor
fldcw
xchg
jle
iret
call
aam
lods
push
cli
fwait
int
xchg
insl
cli
push
int
rcl
adc
jns
pop
mov
xchg
aad
lods
dec
push
and
sub
pop
sub
test
mov
scas
imul
xlat
lods
push
movl
jecxz
jne
dec
jnp
pop
fs
roll
xchg
cmc
mov
vpsraw
mov
add
fwait
imul
fldenv
ljmp
stos
in
add
pop
mulb
xor
or
scas
mov
add
in
sbb
add
lock
icebp
xor
and
leave
fsubrl
dec
xor
add
xor
ds
add
and
dec
xchg
pop
dec
add
fs
rcr
cmp
sbb
andb
pop
mov
jecxz
cwtl
repnz
popa
ljmp
mov
loop
cmp
cli
int3
xchg
inc
xlat
push
mov
fidivs
mov
sub
pop
ret
mov
movsl
lret
aam
in
adc
xchg
pop
xchg
sarl
mov
fmull
mov
testl
imul
mov
inc
pop
sub
test
mov
out
xchg
aas
scas
dec
adc
daa
test
mov
aad
lret
frstpm(287
mov
pop
mov
xbegin
push
cwtl
bound
ret
mov
mov
and
rorb
cmpsl
leave
mov
jb
push
cmp
mov
movsl
les
xlat
out
and
mov
xchg
push
sbb
dec
fcoms
dec
inc
or
adcl
sbbl
fdivrl
sbb
jno
les
cmpsl
out
inc
pop
sub
pop
lea
std
add
inc
scas
cmp
jp
pop
int
cmpl
ljmp
lret
add
xchg
jg
adc
shrl
push
popa
test
sti
lock
cmc
insb
pop
mov
shlb
into
ss
cmp
pop
subw
aam
cltd
add
cmp
jne
movsl
movsl
or
xchg
gs
pop
mov
add
repnz
imul
push
xchg
sbb
mov
lea
sti
mov
out
test
test
or
jmp
cmp
sub
cmp
push
pop
xchg
adc
out
jae
jb
cmp
push
cmpsb
pop
dec
cmp
stc
jnp
imul
adc
enter
imulb
in
jb
jne
sbb
iret
in
cmpsb
cli
pop
incb
push
test
cmp
loop
call
pop
outsl
mov
dec
inc
shlb
xor
shll
pop
mov
sbb
mov
pop
insl
out
xchg
fimuls
push
aad
pusha
push
pop
xor
ss
es
sqrtps
addl
shll
cmc
push
idivl
xchg
adc
test
push
jecxz
cld
adcb
pusha
jno
outsl
sbb
out
into
ljmp
call
test
inc
pop
sub
xlat
stos
repnz
mov
push
inc
les
fnstcw
or
in
cwtl
aaa
out
aaa
ficomps
jle
sbb
cmp
mov
dec
or
cli
sbb
push
dec
xchg
es
push
lds
jnp
lods
sub
add
decl
dec
push
out
mov
sbb
sbb
outsb
aam
cld
fs
int3
xor
mov
jle
hlt
pushf
xchg
call
lret
sub
add
jg
test
mov
and
mov
xchg
push
ljmp
shr
dec
xchg
fidivl
inc
adc
xchg
dec
nop
and
push
jne
sbb
out
nop
dec
pop
in
pop
sub
roll
push
lods
jno
mov
rcrb
sbb
sub
inc
inc
push
adc
jns
pop
popf
lods
fwait
out
rclb
pop
stc
pop
and
jl
out
inc
cltd
cli
mov
stc
imul
insl
ret
sbb
dec
sub
pop
push
inc
pop
int3
clc
jg
ja
adc
cmp
fwait
jecxz
sbb
jns
jle
lahf
mov
pop
mov
out
push
js
sub
xor
and
and
and
sub
jo
pop
sub
push
dec
int3
sub
hlt
lods
and
sub
and
lds
ret
jmp
push
push
jg
js
rol
ja
decl
mov
aam
arpl
inc
jle
sub
or
or
cld
in
and
clc
xchg
mov
cmp
fdivrp
rorl
repz
mov
ss
lock
xchg
mov
mov
xchg
add
ljmp
pop
sub
sbb
cmpsl
div
loopne
mov
jmp
mov
mov
call
sbb
and
sti
xchg
loop
push
mov
add
icebp
fs
idiv
cmp
push
and
lea
lods
out
insb
push
cmp
inc
xor
and
adc
dec
fwait
lods
popf
jg
out
mov
std
outsl
xchg
lock
xor
dec
and
xchg
push
mov
mov
adc
mov
cld
or
inc
jnp
lret
xchg
andb
adc
fucomp
xchg
mov
or
mov
push
or
lret
call
sub
push
add
imul
sub
mov
xchg
outsl
mov
inc
je
test
pop
dec
pop
shll
mov
fdivs
iret
hlt
pop
stos
fimuls
adc
mov
cmp
dec
xor
mov
xor
mov
jl
in
sahf
mov
call
les
js
dec
movsb
mov
cmp
test
sbb
xchg
lcall
nop
mov
cwtl
rolb
shrl
push
jge
dec
subl
pop
dec
pusha
lea
jne
mov
call
call
push
push
in
call
ret
icebp
sbb
push
push
outsb
adc
lock
in
inc
arpl
loopne
pop
mov
out
xchg
adc
jne
shl
lock
insb
push
and
notl
cmp
int3
jl
in
shl
sbb
in
rcll
mov
mov
clc
cltd
mov
pop
ficoms
ret
loop
mov
ud0
std
repz
and
aam
xchg
std
enter
pop
sub
push
shrl
jmp
xchg
inc
pop
je
cmp
sbb
sbb
mov
cmc
xchg
mov
pop
jg
cmpsl
or
xchg
jne
inc
mov
mov
stc
xor
push
push
test
adc
fists
iret
es
mov
sub
cwtl
or
mov
xchg
lods
into
rolb
out
bound
es
loope
xchg
mov
scas
jo
sbbl
cwtl
xor
mov
push
or
sbb
lods
xchg
push
sahf
jmp
mov
scas
mov
jo
pop
movl
push
lea
jmp
sbb
fwait
mov
sbb
clc
andl
enter
inc
or
jns
lcall
pop
adc
mov
bound
cld
icebp
fisttps
loope
jo
rep
push
pop
jbe
ror
std
or
sbb
movsb
icebp
sub
in
dec
and
or
test
andl
fisubs
test
sbb
ret
insl
jge
outsl
test
jne
inc
cli
sti
xchg
push
data16
pushf
call
rorl
inc
pop
sub
in
xchg
icebp
call
repnz
mov
imul
mov
ret
xor
mov
std
jge
ret
loop
fldt
popa
lret
imul
jne
std
cmp
sar
sub
into
daa
cmp
xchg
repz
pop
sbb
pop
loopne
inc
or
pop
and
mov
into
adc
mov
loop
js
fwait
push
test
in
sub
pop
mov
popf
out
sub
add
xchg
xchg
imul
push
jmp
pop
sub
mov
add
push
scas
pop
idiv
insb
inc
cld
adc
xchg
jl
jae
jne
mov
pusha
imul
jae
idivb
inc
leave
cli
hlt
push
cli
out
lock
xchg
cs
fdivl
xchg
pop
ss
sub
addr16
xchg
loopne
sbb
daa
sbb
popa
and
add
dec
jp
pop
or
stc
xchg
fsubl
sub
lods
mov
pop
fsub
adc
xor
pop
inc
rcr
mov
xlat
rcrb
mov
cltd
sbb
mov
ja
cmp
rcl
jle
xor
or
lss
jbe
ja
lret
jecxz
push
jne
jl
imul
or
cmp
xor
insl
xchg
and
shlb
inc
jl
fisttps
imul
icebp
repz
in
loopne
rcll
mov
xor
xchg
or
bswap
cwtl
pushf
mov
lea
not
bswap
call
push
push
fmull
sub
jb
bndldx
lock
xchg
mov
mov
push
sub
ds
mov
js
add
push
fdivrs
and
jne
dec
push
andl
ja
push
or
imul
inc
inc
ss
test
dec
inc
and
inc
insl
cs
aam
jp
and
mov
cmp
cmp
xchg
mov
lcall
add
dec
pop
sub
or
int
test
add
fisttpll
inc
mov
xchg
outsl
sbbb
and
sarb
adc
or
sub
pop
sbb
push
ljmp
mov
sub
adc
sbb
jno
sub
ret
and
or
add
iret
cmp
push
xchg
or
inc
pop
fnsave
arpl
dec
hlt
ljmp
ds
or
lret
aaa
ljmp
pop
rorl
xchg
mov
testb
rorb
enter
adc
add
add
movzbl
lea
jmp
mov
enter
sub
xchg
mov
cli
inc
sti
lret
ds
add
xchg
fisttps
stc
fwait
jg
xlat
out
mov
stc
cmp
stos
cltd
scas
bound
in
loopne
out
cld
aam
das
outsl
sub
rorb
stc
rcrb
pop
push
in
mov
lret
push
jl
sub
ficomps
scas
iret
leave
sbb
sub
and
nop
mov
pop
mov
fsubrs
cmp
jmp
jb
stos
dec
pop
sub
loopne
icebp
cmp
sub
cwtl
adcl
lods
lret
lahf
sub
adc
fmul
mov
mov
xchg
stos
mov
pop
imul
ret
jae
sbb
mov
orb
mov
add
call
jle
and
arpl
pop
loopne
mov
push
in
scas
push
sub
das
lret
cmp
inc
call
popa
daa
bound
sub
mov
fcmovu
hlt
jno
push
into
dec
imul
das
enter
cld
or
jg
dec
mov
addr16
lahf
cmp
adc
pop
jg
xor
lock
jo
pop
adc
jle
xor
xor
xchg
jns
mov
mov
movsl
outsb
dec
push
mov
pop
stos
mov
sbb
inc
fidivrl
insl
add
mov
xor
movl
movl
movl
push
mov
lea
jmp
fucomp
xchg
dec
pop
sub
mov
cmpsb
icebp
test
rolb
aaa
xor
testb
mov
test
out
mov
out
lods
sub
pop
stos
xchg
add
fstl
pop
fdivs
subl
adc
cwtl
sbb
jbe
ffreep
cld
and
mov
clc
push
lcall
mov
sbb
arpl
inc
jp
mov
pushf
or
jmp
stc
scas
test
jmp
mov
rolb
fdivl
mov
pop
data16
lods
pop
ret
clc
mov
mov
arpl
arpl
pop
bound
sbb
jmp
pop
xor
bound
sti
lcall
mov
mov
pop
inc
xor
add
or
rcr
fisttpll
imull
cmp
mov
dec
add
shlb
jle
jecxz
das
xor
cmpsb
sbb
dec
jb
adc
rclb
sbb
xor
jecxz
hlt
xor
outsb
mov
sbb
in
dec
imul
push
xchg
pop
pop
and
shl
pushf
ljmp
gs
aad
xchg
xchg
jno
aad
pushf
cltd
stos
out
aad
sbb
inc
fnstenv
pop
jge
mov
outsl
jmp
shr
cmp
fwait
sbb
mov
push
in
adc
pop
mov
pushf
ret
movsb
in
jle
cmp
lcall
stc
jno
notl
jne
or
outsb
shr
call
jl
xor
sbb
jb
pop
into
test
shl
xchg
mov
xchg
lds
lock
out
mov
add
add
push
add
add
add
or
add
add
pop
sub
add
add
add
or
add
add
fisubrl
push
add
add
add
push
add
add
add
add
add
push
add
cmpsb
or
in
or
popa
add
add
push
add
add
add
xor
jecxz
mov
xchg
insl
hlt
iret
xchg
loop
cmp
dec
mov
sbb
sti
sub
add
add
out
lret
pop
fisttps
xchg
dec
mov
inc
mov
jle
or
stc
cmp
rcrb
call
ucomiss
frstor
repz
loopne
cmpsb
xchg
aaa
fisubs
mov
fs
jnp
push
movl
push
movl
push
movb
push
lea
jmp
push
adc
loopne
es
lret
mov
push
mov
dec
push
or
insl
cmpsl
in
inc
adc
dec
or
lods
push
scas
push
push
mov
loope
int3
out
cli
cmp
xor
mov
or
inc
lds
pop
jg
fwait
push
push
test
xor
adc
pop
mov
pop
ja
pop
fsubr
outsl
arpl
ret
sub
and
sub
into
insb
mov
shll
sbb
mov
ds
imul
lahf
leave
mov
sbb
sarb
dec
jno
mov
rcrb
dec
es
add
pusha
push
mov
push
dec
push
inc
dec
jp
lock
sub
pop
daa
imul
insb
mov
mov
movsb
popf
jmp
arpl
stc
mov
lea
adc
mov
pop
mov
je
negb
sbb
loope
lahf
testl
mov
inc
pop
push
dec
stos
inc
pop
pop
in
mov
xchg
inc
das
push
hlt
out
or
ds
cs
cmp
cmp
mov
xchg
inc
out
sub
lods
daa
lds
dec
leave
jo
repz
mov
jmp
jp
movsl
call
mov
sub
punpckldq
ret
lret
mov
jle
dec
xchg
fcoml
xlat
mov
cmp
xchg
pop
pop
lahf
int3
adc
push
insl
mov
xor
mov
jmp
lods
adc
loopne
pop
sbbl
test
pop
or
test
adc
mov
adc
mov
cmp
push
xchg
repnz
shl
iret
sbb
cld
xchg
aad
enter
inc
fs
pop
sub
and
inc
jp
addl
cmp
push
mov
pop
sti
push
lock
jle
ret
in
pop
or
add
mov
out
inc
je
cmc
mov
add
inc
pop
add
and
jmp
mov
lea
call
jmp
movzbw
pushf
movl
lahf
not
lea
pushl
movl
jmp
movb
stos
not
mov
lea
push
lea
call
pusha
lea
jae
cmc
jmp
bswap
add
xor
movzbl
mov
not
pop
lea
pusha
movsbw
bswap
mov
movsbw
push
movsbl
mov
pushf
lea
not
push
mov
lea
jo
push
pusha
mov
lea
not
pusha
mov
pusha
mov
pushl
ret
cmp
push
pop
sub
mov
pop
cmp
mov
or
shrb
mov
inc
xchg
jmp
outsb
ret
add
aad
les
mov
push
and
cmp
xor
dec
mov
fldenv
push
call
cld
pop
jo
sub
dec
dec
popf
xor
sahf
sub
mov
jl
imul
or
outsl
jg
mov
mov
iret
rcl
and
enter
push
iret
cmp
hlt
mov
or
addb
sub
test
leave
test
int
add
add
mov
or
jmp
mov
dec
mov
mov
sbb
inc
lcall
into
pushf
popf
movsb
and
int
aam
add
jmp
lock
mov
pusha
loope
pop
aas
lcall
inc
adcb
dec
test
push
cmpsb
mov
lret
sbb
sub
dec
dec
iret
roll
movb
ja
ret
push
add
cmp
push
pop
in
fbld
enter
add
idivb
dec
mov
xor
scas
mov
push
cmp
push
into
pusha
mov
pop
xor
push
or
scas
mov
mov
ljmp
jmp
mov
and
inc
pushf
inc
mov
movb
push
lea
jmp
lcall
icebp
mov
adc
lahf
inc
sahf
test
aam
test
sub
sub
test
pop
jmp
add
icebp
aam
sbb
jns
andb
pop
test
inc
sbb
outsb
mov
adc
mov
test
mov
adc
xchg
jo
pusha
test
and
xchg
push
out
sbb
jmp
mov
and
outsl
mov
fiaddl
mov
inc
and
arpl
sarl
cld
incl
sub
xor
xchg
sub
lds
adc
jg
push
add
add
stos
xchg
sub
sbb
into
jl
fisttps
aaa
lods
mov
xor
shlb
push
add
les
sahf
xchg
cmp
repnz
jg
and
xor
push
xor
cld
pop
push
pop
sub
iret
and
shll
adc
inc
ja
fidivrs
jg
mov
push
shlb
pop
inc
mov
push
jb
insb
je
xchg
leave
sti
ljmp
jnp
xchg
aad
insl
cmp
or
mov
pop
sub
xchg
scas
addr16
shl
xchg
add
lock
imul
mov
mov
mov
and
pop
outsl
jae
xchg
or
mov
mov
enter
out
sub
xorb
dec
cmp
ss
aas
test
js
xchg
adc
cs
test
cmc
push
movsl
add
test
out
cmpl
jns
clc
cmpb
movw
pushf
jmp
cmp
cmp
bt
cmp
mov
movw
lea
jb
jmp
lahf
jns
push
pop
sub
stc
aaa
mov
in
mov
pop
jne
cmp
sar
jns
divb
xchg
fwait
sahf
inc
arpl
sbb
mov
push
shll
imul
dec
ss
xchg
jbe
mov
xor
sbbl
push
sarb
jns
popa
inc
in
pop
stc
adc
pop
adc
xor
pop
mov
sbb
jae
sbb
lret
pop
xchg
mov
adc
mov
and
pushf
popf
cmpsb
loope
pop
sub
inc
addl
movsb
ss
inc
fisubrl
outsl
cmp
iret
in
mov
jg
test
movsl
mov
repz
repz
and
cmpsl
cmp
inc
popa
mov
sti
sbb
lds
mov
insb
dec
hlt
addr16
or
jne
cli
xchg
aad
cmp
push
pop
sub
cli
icebp
inc
out
jbe
adc
jmp
sbb
arpl
xchg
sar
mov
push
mov
lods
ret
jl
cmp
jbe
int3
mov
inc
jle
pushf
push
dec
shlb
xlat
aas
aam
xchg
push
jecxz
in
pop
cli
dec
jge
lds
cs
lea
jne
mov
add
jl
xlat
cltd
out
das
push
and
out
insl
aam
dec
jne
xchg
lods
adc
scas
dec
dec
and
cmp
adc
loope
xchg
adc
test
aam
insb
sub
test
push
adc
lret
in
push
pop
sub
and
stc
push
xlat
roll
xor
sub
movsl
dec
and
inc
popf
mov
cmp
movsb
btc
xchg
arpl
inc
pop
mov
adc
or
lea
inc
sarb
sbb
push
mul
sahf
rorl
xchg
pushf
repz
jge
aam
int
and
dec
pop
clc
jp
mov
clc
pop
inc
movsl
rcrb
pop
or
jmp
js
sbb
adc
sub
dec
mov
push
aad
imul
jmp
or
outsl
notb
and
push
push
ret
js
fcomps
repnz
and
std
sub
adc
add
fadd
push
je
ret
jle
scas
dec
inc
jbe
dec
inc
mov
dec
test
push
std
push
pushf
lcall
cltd
mov
mov
inc
add
ret
mov
mov
jnp
mov
repnz
test
orb
push
pop
mov
add
repnz
pushf
jmp
movsw
push
pop
sub
out
mov
enter
clc
test
sbb
in
xor
xlat
inc
push
pop
dec
movsb
mov
dec
es
push
sbb
ret
cmp
pop
dec
bound
dec
and
adc
test
adc
addr16
inc
movsb
int
add
popf
fs
stos
leave
fdivrl
lods
push
movsl
andb
icebp
addr16
pop
xor
xlat
xchg
jg
add
cmp
lea
rcrl
stos
sbb
push
inc
dec
int3
hlt
mov
fstp
push
push
or
mov
and
pop
pusha
add
jmp
add
dec
lods
adc
mov
dec
setbe
fadd
pop
push
mov
roll
out
xor
sub
fucomi
das
push
sub
dec
dec
data16
xchg
dec
into
xchg
xchg
cmp
pop
inc
and
loop
lds
lret
add
les
mov
sub
out
sbb
popl
sub
xorl
dec
shlb
ret
pop
pop
sub
clc
out
mov
inc
cmp
pusha
sbb
fsts
mov
lret
xor
jp
mov
fistpll
xchg
cvttps2pi
add
adc
dec
xor
or
mov
cltd
sub
popf
add
mov
push
push
xchg
iret
pop
cmp
int3
out
mov
add
rorb
andb
xchg
mov
ret
outsb
arpl
cld
add
negb
leave
sbbb
cwtl
mov
lods
scas
cmp
inc
clc
fistl
jl
out
cmp
cmpsl
or
sti
inc
imul
pop
sub
rorb
add
enter
sbb
daa
xchg
dec
lret
push
std
adc
in
sub
dec
cmp
test
ljmp
dec
stc
mov
in
mov
mov
pop
mov
and
inc
cs
jb
add
lret
cld
out
push
xor
loope
xchg
imul
gs
stc
sbb
out
cwtl
jle
scas
sbb
adc
ja
stos
lods
dec
pop
orb
pop
int
dec
je
pop
mov
inc
xor
pop
aad
mov
push
ret
sahf
lea
add
cmc
add
mov
xchg
xlat
adc
add
insb
insb
dec
gs
dec
outsl
outsl
imul
jmp
movzwl
call
pushf
movb
pushl
pushl
mov
mov
movw
mov
push
mov
setns
lea
movl
pushf
lea
pushf
call
stos
jl
pop
pop
sub
aaa
rolb
jo
add
fidivs
mov
sbb
cmp
cmp
fxch
jecxz
xor
and
xchg
xchg
or
lahf
and
push
imul
xchg
or
dec
adc
mov
mov
inc
scas
adcb
lea
sbb
mov
ljmp
inc
jbe
adc
loop
int
dec
aas
pop
negb
scas
aam
pusha
aam
nop
pop
and
fnstcw
lock
andl
pop
sbb
jmp
adc
add
jno
sti
jmp
dec
pop
pop
sub
mov
hlt
leave
push
mov
ficomps
mov
jg
add
add
and
adc
iret
or
mov
push
aaa
cmovne
and
cmp
push
and
mov
xchg
pushf
scas
add
iret
mov
popa
push
jmp
in
dec
loop
data16
sub
mov
mov
mov
fs
inc
sbb
inc
dec
ret
sbb
lods
jmp
in
bound
pusha
clc
push
sub
call
mov
sub
inc
mov
fcmovu
cmp
movsl
mov
dec
dec
hlt
mov
jge
cltd
push
into
inc
stc
movsb
ss
imul
mov
cmpsb
jmp
das
cmp
adc
push
fldl
inc
add
lea
mov
pop
pop
inc
lret
xchg
jbe
icebp
bndstx
mov
or
pop
andb
int
shrl
sbb
stos
lcall
sub
addr16
cld
pop
cmp
push
dec
aam
cmpl
adc
xor
push
pushf
pushl
ret
cltd
jmp
push
cmpsl
imul
mov
and
lock
sbb
sbb
pop
and
pop
adc
ficoms
push
xchg
lret
dec
int3
outsb
xorl
pusha
dec
cmp
xor
jne
mov
and
inc
push
dec
mov
xlat
mov
out
sahf
add
jg
cmp
aam
sbbl
in
ret
sbb
loopne
cld
dec
add
adc
or
arpl
xchg
loop
push
cmpsl
mov
cmp
mov
rcr
lret
jns
sbb
pop
pop
sub
call
fisttps
sbb
pop
addl
pop
sub
lock
adc
jae
ret
cli
and
pop
adcl
idivb
cmp
pop
pop
cmp
xchg
and
xor
sub
sbb
imul
mov
int
pop
pop
or
rclb
sub
pop
arpl
or
imul
mov
pop
orl
jge
mov
mov
mov
clc
jge
xor
movl
mov
call
scas
sub
pop
pop
sub
test
xchg
pop
test
xor
dec
cli
add
cmc
out
cmp
rcrl
inc
sbb
lret
es
int3
sbb
hlt
push
cmp
in
pop
shll
aaa
outsl
test
jecxz
lods
xor
xor
and
test
and
stc
call
and
lret
xorb
pop
fwait
jge
stos
int
into
loopne
xchg
jmp
cmp
lea
push
call
cld
push
lds
hlt
mov
subl
enter
lret
pusha
testb
xchg
pop
pop
sub
cmp
clc
lcall
int3
and
mov
mov
outsl
jmp
ljmp
sbb
pop
jecxz
int3
push
iret
jno
inc
jmp
pop
lock
cmp
in
inc
ret
out
mov
scas
pop
xchg
testb
aam
xchg
test
ss
pop
inc
or
jno
adc
loopne
pop
and
sbb
xchg
xor
inc
xchg
or
lock
sub
mov
test
imul
or
pop
sub
bound
lret
rorl
cmp
test
outsl
cmpsl
jg
mov
jne
push
or
mov
jg
loope
lea
int
mov
sarb
arpl
mov
fwait
pop
jp
push
hlt
dec
inc
test
and
push
inc
das
in
adc
sarl
outsl
mov
rclb
ss
push
push
push
int3
sbb
xlat
shrb
fs
xor
dec
fcompl
jbe
cwtl
inc
stos
mov
adc
sub
insl
scas
ret
cld
pop
jmp
sub
notl
jns
bound
push
xchg
repnz
push
xor
ds
cmp
ds
add
pop
popa
insb
mov
mov
push
movsb
or
aam
into
mov
pop
jne
inc
adc
or
jmp
mov
mov
cmp
aam
xor
insb
mov
xchg
fcmovnu
fwait
mov
scas
mov
sbb
add
jo
cs
shlb
imul
xchg
pop
cmp
lret
dec
xchg
jp
fistps
add
mov
lret
sbb
out
out
xchg
in
mov
xor
pop
movl
ljmp
pop
sub
jae
js
into
js
daa
and
jmp
inc
and
cmpl
add
adc
mov
cld
xchg
stos
inc
xchg
repnz
out
arpl
mov
push
xor
xchg
cmp
sbb
adc
shrb
cltd
int3
rorl
sub
imul
outsb
add
cmp
movsb
mov
jno
push
cld
shr
movsl
imul
inc
cmp
pop
out
dec
push
sbb
mov
jnp
incb
imul
divl
mov
aad
out
loope
pop
loope
mov
adc
mov
xchg
in
inc
jmp
cmp
sub
mulb
push
push
imul
pop
mov
sbb
sahf
int3
xor
push
out
leave
mov
push
mov
ret
and
in
andl
pop
sub
pop
fdivp
test
sub
adc
pop
jae
pop
jnp
push
mov
pop
sub
dec
cmp
ficoms
xchg
imul
cld
adc
lcall
xor
xchg
pop
fdivrs
and
push
movsl
or
push
mov
scas
jle
mov
stos
sub
cli
inc
dec
outsl
dec
test
inc
inc
pop
push
fldt
pop
mov
pop
lods
insb
das
icebp
mov
xor
testb
dec
xchg
daa
adc
inc
sbb
aas
sub
dec
inc
jl
jle
arpl
aas
adc
or
lea
mov
push
aaa
add
cwtl
sahf
jae
inc
dec
or
add
sahf
xchg
sbb
mov
daa
enter
fnstcw
pop
xor
pusha
inc
push
pop
jp
add
aam
mov
mov
xor
adc
aad
dec
sbb
insb
push
lds
scas
int
pop
vmread
sub
jge
movsb
pop
jle
and
mov
xchg
mov
shrb
mov
sbb
xor
loopne
sbb
psubusb
xor
mov
push
out
mov
in
mov
ljmp
fsub
fildll
pop
stc
je
stos
xor
and
je
push
call
lea
ja
call
push
andl
mov
sbb
js
popa
and
add
popa
add
and
popa
loopne
add
add
inc
js
andl
mov
add
mov
mov
scas
dec
jno
pop
sub
push
js
push
sahf
sarb
inc
push
in
lahf
pop
les
out
jge
jmp
rorl
clc
add
movsb
cmc
xchg
cli
add
dec
xchg
xchg
roll
arpl
push
adc
inc
pop
xchg
test
les
xchg
pop
jp
mov
nop
mov
add
addl
xorb
in
xorb
mov
xchg
cmp
notl
or
test
repz
out
jns
push
add
xor
xchg
andb
sub
orl
sub
push
cmp
popf
ss
adc
and
cmp
shr
or
push
negb
ret
fdivr
out
test
sub
jecxz
shlb
pop
fwait
dec
daa
sarl
add
inc
and
xchg
fstl
add
sti
lock
popf
mov
lock
mov
fmuls
lods
bound
arpl
cld
ret
sub
adc
xchg
sti
push
adc
inc
out
jns
lret
aam
push
pop
mov
adc
xchg
mov
push
add
add
cld
inc
lds
movl
inc
stos
imul
inc
inc
push
dec
repnz
add
inc
jecxz
xor
mov
push
mov
outsb
xchg
je
aas
jne
pop
popa
incb
dec
bound
pop
sbb
fidivrs
adc
mov
bswap
call
lea
pushf
call
lea
je
mov
lea
movsbl
call
push
or
jmp
xchg
dec
imul
xchg
push
inc
cmp
sub
pop
out
mov
iret
lret
loop
pusha
imul
lea
mov
jne
mov
mov
jne
pop
jo
jb
cld
cmpsb
pop
push
into
in
mov
xchg
xor
lcall
and
shl
popa
pushf
test
sub
cmp
popa
inc
push
stos
andb
aas
xchg
mov
inc
xor
rcrl
sahf
sub
inc
int
aas
scas
cmpsb
mov
jae
sub
lahf
mov
mov
and
sub
xor
mov
inc
mov
xor
ljmp
mov
popf
cmp
test
sub
popa
adc
push
mov
repz
inc
js
jo
movsb
lret
cmp
push
pusha
cmp
push
dec
pop
test
jne
cld
test
push
shll
sti
out
adc
rorl
push
xchg
lahf
and
cmpl
mov
mov
inc
sub
andb
inc
nop
inc
jno
je
dec
int
fs
mov
stos
leave
jnp
fistpll
int
in
pop
pushf
sub
aas
pop
dec
aaa
pop
or
adcb
js
push
lea
cltd
jecxz
mov
data16
gs
push
insl
jmp
push
arpl
pop
push
jo
push
aaa
xor
mov
xlat
mov
ss
cltd
jae
cmpsb
lods
mov
movsl
pop
mov
inc
pop
jmp
and
daa
pop
sub
xor
popl
dec
out
leave
adc
xor
loop
xor
xor
les
ficoms
cs
pop
add
mov
or
cmp
jmp
in
daa
mov
pop
push
in
fwait
out
push
ljmp
clc
adc
leave
and
inc
xchg
sub
rcrb
and
push
jb
jmp
mov
not
not
pop
call
push
lock
std
std
adcb
ret
jl
ljmp
popaw
pushf
mov
pop
xlat
ss
lods
dec
cmp
jge
fxam
adc
add
pop
push
les
out
and
test
sbb
daa
add
mov
and
xchg
push
imulb
test
into
push
enter
roll
jle
jp
sbb
jns
xchg
in
push
loop
xor
sbb
add
imull
sbb
cwtl
lock
inc
push
add
out
sbb
sbb
mov
loopne
addr16
cwtl
or
ljmp
lret
jns
pop
xchg
test
in
cwtl
outsl
arpl
call
neg
cli
xchg
stc
push
data16
scas
sbb
mov
loopne
mov
movsb
push
push
sbb
in
add
mul
push
call
stos
mov
jmp
arpl
push
test
pop
popa
inc
jp
mov
xchg
xchg
jbe
loope,pn
out
imul
mov
sbbl
inc
mov
clc
mov
lods
adcl
dec
adc
out
dec
jae
js
cwtl
jbe
hlt
push
in
stos
or
aas
sahf
mov
xchg
xchg
mov
shl
test
adc
lock
mov
and
bound
stos
xchg
repnz
xor
adc
cmp
adc
into
mov
adc
cs
insl
adc
cwtl
xchg
cltd
add
icebp
push
and
mov
fisubrs
adc
or
xchg
pop
add
jmp
adc
push
popl
enter
in
icebp
xchg
out
jle
lock
xlat
xchg
mov
and
xchg
cmpl
adc
loop
sbb
mov
jle
out
xchg
out
adc
repnz
sbb
scas
or
aam
les
cmpsl
fdivs
fcmovb
or
xchg
xchg
mov
inc
enter
fcomps
cmp
cmpsb
je
into
mov
loopne
adc
fsubrp
or
popf
insl
ror
pop
mov
jae
lods
cmpsl
adc
mov
mov
call
pop
push
add
roll
adc
stc
into
adcb
mov
cmpl
pusha
jge
clc
xchg
sbb
xchg
mov
sub
ss
sbb
mov
lods
stc
push
sbb
mov
mov
jl
cwtl
xchg
mov
jp
jns
popf
call
pushf
xchg
pushf
mov
shrb
ja
ja
push
cmpsb
dec
dec
dec
pop
data16
push
push
repnz
mov
cwtl
mov
push
cld
adc
jns
sbb
sbb
mov
sti
leave
xchg
cmp
push
push
xchg
pop
ljmp
pop
and
mov
ficomps
sub
out
std
and
popa
sbb
xchg
mov
cmpsb
aas
or
stc
jecxz
test
xchg
sbb
cwtl
and
std
push
mov
decb
pop
lss
std
and
cmp
cmpsb
out
xchg
pop
out
insb
imul
loop
insl
sahf
dec
cmp
pop
dec
std
mov
sbb
dec
in
out
gs
pop
call
in
adc
sbb
adc
enter
mov
push
and
cwtl
push
sbb
add
popf
imul
xchg
jl
push
xor
pop
push
pop
fcompl
mov
mov
popa
mov
xchg
and
cmp
or
add
rcl
mov
fsubs
mov
pop
cmp
ret
mov
repz
rcrb
mov
sahf
sbb
or
std
pop
xor
or
idivb
adc
adc
cmc
fimull
test
sbb
push
ffree
call
cli
shlb
in
insb
repnz
rorb
dec
jno
pusha
or
xchg
pop
std
push
pop
jns
sbb
push
jmp
loop
es
xchg
adc
xchg
cmc
pop
stc
out
mov
pop
and
cmp
or
and
popa
rclb
mov
sbb
pop
mov
loopne
in
push
xor
dec
or
pop
lds
fsts
or
aaa
sbb
xor
cli
sub
cli
outsb
pusha
inc
and
xchg
pop
fdivl
adc
stc
pop
xchg
in
adc
dec
mov
mov
les
mov
movsl
pop
sub
lea
mov
hlt
jl
xchg
add
add
xor
loopne
fnstcw
sbb
sahf
sub
cmp
adc
fdivp
mov
xchg
mov
xchg
and
cmpl
test
xlat
fyl2xp1
cmpsl
xchg
rcrb
xchg
pop
push
mov
cmp
cmp
push
sbb
cmp
pop
jp
fildl
clc
cltd
mov
or
jle
jl
js
cmp
mov
sti
inc
push
daa
cmp
add
into
pushf
test
or
das
clc
outsb
cmpsb
mov
loopne
sbb
imul
sbb
sub
ss
inc
aaa
cmpsb
pop
pushf
testb
pushf
mov
cmp
jl
mov
dec
or
xchg
adc
dec
xchg
call
fsubrp
popf
sti
stc
push
rcrl
cmp
and
outsl
dec
dec
adc
iret
xchg
jo
cltd
inc
add
mov
cmpsb
sub
xchg
flds
jmp
xchg
out
sti
xlat
xchg
insb
rorl
add
jns
push
repz
fs
shrb
lret
shlb
subb
out
dec
jne
lods
pushf
in
and
cwtl
and
push
jbe
or
scas
das
pop
enter
jle
xchg
idivb
xor
icebp
icebp
xchg
int
rclb
cmc
mov
aaa
add
jb
push
push
cmpb
test
mov
sbb
mov
std
stos
popa
insl
sbb
mov
add
cs
mov
inc
mov
mov
mov
hlt
push
push
xchg
ja
dec
add
nop
mov
shll
rcll
pop
movsb
or
clc
out
lea
cld
push
mov
mov
cld
jg
fcomi
xchg
adc
aam
adc
cli
xchg
mov
xchg
fimuls
out
adc
dec
mov
cld
dec
xchg
fadds
mov
cli
xchg
add
ljmp
sbb
pusha
movsb
mov
mov
adc
sbb
lret
aam
xchg
out
jb
push
and
cmp
mov
push
insb
mov
mov
adc
mov
fdivs
cli
cs
pop
out
dec
mov
cmpsb
subb
mov
push
xor
nop
pop
inc
int3
inc
cmpsl
push
sbb
movsl
nop
pushaw
adc
mov
prefetchnta
scas
pop
ret
clts
pusha
lods
jmp
xor
xchg
xor
js
insl
cltd
stos
jno
sbb
or
pusha
push
or
or
xchg
pop
in
push
inc
fcomps
stos
aad
sbb
pop
sbb
dec
mov
cltd
int
cmpsb
xor
mov
imulb
mov
fldl2t
ret
jge
mov
fmuls
and
and
loope
pop
sbb
adc
cli
mov
fistps
sbb
ror
mov
es
push
mov
movsb
popf
sbb
pop
cltd
sbb
repnz
lret
fsubrl
jns
ss
roll
xchg
hlt
adc
les
mov
andl
sbb
ret
and
mov
xchg
fcoml
add
sbb
sbb
xchg
mul
add
fmul
push
cwtl
xchg
loopne
test
cwtl
lods
xchg
lock
add
lea
mov
les
sbb
movsl
mov
mov
loope
add
jmp
aad
push
stos
pshufw
movsb
scas
add
cwtl
jle
inc
repnz
sahf
sbb
pop
mov
cltd
pusha
adc
and
call
notl
cld
or
int3
ret
in
mov
loop
je
js
fdivrs
flds
add
xchg
incl
xor
and
pop
nop
shrl
arpl
decb
nop
sbb
shl
pop
mov
pop
pop
jmp
sub
mov
imul
stos
popa
xchg
push
nop
cmp
add
lahf
adc
and
cmp
push
loope
fisubrl
push
insb
popa
jb
sbb
cwtl
push
pop
fwait
mov
dec
push
pop
mov
je
mov
push
mov
clc
adc
in
or
insl
cltd
dec
or
stc
iret
xchg
adc
cmpsl
test
jl
jne
mov
xor
push
add
ret
nop
cld
fcomi
push
jb
mov
dec
clc
pop
and
xchg
xor
mov
push
add
adc
adc
test
jl
mov
xchg
pushf
cmpsb
lret
cltd
stos
das
mov
or
sbb
xchg
jnp
push
pop
std
scas
xchg
add
lret
push
mov
ja
mov
adc
cli
cmc
mov
out
add
xor
mov
mov
and
add
pop
add
ljmp
and
div
or
outsl
outsl
aad
mov
iret
mov
scas
mov
in
inc
dec
int3
add
mov
push
nop
int
jo
mov
sahf
cltd
cld
jmp
push
loopne
lock
lds
fbld
idivb
fstps
nop
mov
xchg
mov
mov
dec
dec
ud2
fcomi
pop
adc
adc
xchg
fneni(8087
and
push
adc
loope
sbb
or
sbb
cld
push
std
imul
pop
pop
icebp
aaa
or
push
mov
inc
sbb
or
mov
pushf
mov
jns
hlt
enter
stos
or
cwtl
ret
xor
shl
xor
scas
xchg
shll
sbb
push
aam
push
sub
push
dec
xchg
repz
insb
add
push
jo
mov
into
add
push
cmpsb
sbb
mov
fistl
insb
lock
cwtl
ss
loopne
shl
pop
or
xchg
mov
pop
or
rcrb
sub
inc
xlat
nop
sbb
push
push
shll
push
pop
dec
loopne
mov
mov
sbb
inc
xchg
jns
out
mov
lret
test
out
sbb
pop
mov
xchg
test
pop
xchg
je,pn
aam
xchg
add
adc
pop
pop
pusha
icebp
dec
pop
mov
fcoms
mov
mov
std
or
adc
push
xchg
hlt
in
dec
adc
mov
xchg
xor
and
leave
xchg
rcrb
js
xchg
pop
mov
pop
sbb
mov
and
adc
out
aad
out
insb
rol
enter
in
popfw
shrl
cmpsb
out
jae
popl
sahf
xchg
cmove
sbb
es
dec
xchg
lea
adc
push
pusha
cltd
mov
push
stc
push
adc
and
sbb
cmc
cmp
sbb
shl
sbb
and
repnz
add
pusha
in
pop
cmpsb
insb
movsb
stc
sti
or
add
mov
test
into
cli
sahf
xchg
test
cld
or
pusha
test
out
out
nop
push
pop
fildll
cmpsb
adc
inc
adc
xchg
lahf
mov
push
popf
cwtl
loope
adc
sbb
inc
ficomps
scas
adc
xchg
xchg
jl
adc
mov
cmc
jns
mov
sbb
mov
dec
or
or
adc
insb
nop
mov
aad
mov
and
cmpsl
fwait
push
mov
mulb
pop
mov
cmp
aaa
pop
mov
fwait
push
ljmp
cwtl
jbe
mov
add
mov
cmp
sub
lret
xchg
sbb
ficoms
push
out
in
testb
push
call
add
scas
lahf
sbb
mov
imul
jb
xchg
or
insb
rclb
mov
jnp
xchg
push
sbb
pop
ficoms
getsec
rclb
loope
outsb
cli
jnp
or
jno
and
out
adc
addr16
mov
sbb
add
dec
ljmp
pop
adc
push
leave
sub
cmpsb
jnp
xchg
push
shrb
inc
push
je
pop
mov
push
pop
cmc
xchg
aaa
ret
cmp
and
dec
push
rorb
jmp
sahf
sbb
mov
cld
pop
mov
mov
mov
pop
xor
cmpsl
mov
jne
dec
mov
and
rol
dec
mov
cmpsb
and
xchg
rsqrtps
repz
xchg
mov
inc
sub
xchg
sbb
jg
ficoms
cmp
cmp
sbb
std
mov
fmuls
xor
pop
setbe
sbb
dec
mov
movsb
xchg
lds
push
dec
lret
mov
mov
fcoms
daa
push
je
add
loopne
clc
or
sbb
cwtl
xchg
pop
ss
lret
push
repnz
mov
notb
outsb
push
dec
out
hlt
sbb
lock
add
pusha
and
test
push
push
andl
pop
add
ret
bound
push
xchg
cmp
sub
jb
or
cld
mov
test
mov
mov
xchg
pushf
or
or
cld
imul
mov
adc
sub
cmpsl
cwtl
mov
sub
push
cld
xchg
cmpl
xchg
fcomps
or
sub
inc
and
mov
es
or
hlt
cli
pop
xchg
push
in
cmpsb
inc
inc
cli
mov
push
or
repnz
jb
cmpsb
enter
cwtl
jbe
clc
out
pusha
fisubl
leave
or
push
movsl
cmpsb
fdivr
push
out
insl
outsl
mov
xchg
notl
xchg
xchg
loopne
lcall
pop
or
arpl
nop
and
and
sbb
and
and
aam
add
or
pop
pop
lods
mov
xorl
cmp
cmp
das
lret
lcall
int3
or
fiadds
pop
sub
ret
clc
loopne
pushf
cmpsb
fsub
dec
push
adc
ret
xchg
aaa
cli
pushf
scas
stc
cli
scas
lock
sbb
mov
xchg
mov
push
add
xor
orb
add
cmp
in
ret
out
xchg
pop
movsb
xchg
sub
xchg
dec
jbe
xchg
test
xchg
rcll
mov
sub
xchg
sbb
das
pop
mov
cltd
fcmovnu
adc
scas
and
psrad
jns
loopne
mov
sbbb
pop
jne
pop
jbe
fwait
cwtl
pusha
mov
ret
mov
fildl
lahf
mov
stc
mov
ret
mov
inc
aaa
pop
push
cmp
shll
sbb
mov
mov
mov
loopne
push
and
inc
sbb
sbb
cmpsb
sti
push
call
aad
jge
fmull
jge
xchg
jns
pop
sub
stc
mov
cmpsb
push
jne
push
mov
or
div
ja
lcall
movsl
movsb
loopne
xchg
lcall
ret
repz
imul
lcall
cmc
imull
cwtl
xor
sbb
aad
jge
pusha
add
lret
repz
jae
rorl
sbb
push
in
cmp
ficoms
std
cmp
and
and
jle
jb
nop
mov
mov
lea
in
fcoms
mov
and
popf
cmpsl
lcall
pusha
xor
testb
mov
inc
mov
cmpsl
add
shlb
imul
fcoml
and
xchg
push
nop
add
push
sbb
data16
test
rolb
in
add
xchg
aad
neg
pusha
mov
sahf
loop
mov
add
jmp
pop
mov
out
sbb
lcall
mov
stc
mov
adc
add
cmpb
sahf
cmpsb
or
push
cwtl
testb
cmpsl
fwait
xor
push
mov
lock
pop
scas
adc
push
stos
cmp
cmp
xchg
cmp
push
adc
push
push
je
adc
sbb
cmp
cwtl
out
cli
xor
xchg
int
outsb
add
xchg
xchg
clc
cmpsb
sbb
clc
pushf
xacquire
adc
jge
jns
xchg
jp
mov
jbe
and
push
mov
cltd
push
jp
add
jbe
and
iret
hlt
es
jbe
clc
adc
fmul
mov
cld
adc
pop
inc
push
pop
adc
push
mov
mov
std
add
jmp
push
cltd
cmpsb
sbb
pop
push
adc
or
mov
push
ret
pop
add
xchg
pop
testl
in
jns
or
pop
scas
add
mov
mov
cmp
sbb
xchg
sti
rcll
lret
mov
ja
pop
or
xchg
fdiv
cmp
loop
mov
iret
into
mov
aam
xchg
mov
cltd
out
mov
sub
stc
mov
dec
mov
xchg
test
fcoms
xchg
ficompl
add
lret
xchg
imul
ficompl
jns
sbb
cmpl
jge
adc
push
cwtl
cwtl
or
aad
jp
les
and
lcall
scas
clc
fcmovbe
les
push
negb
xchg
out
jne
dec
and
mov
mov
lret
cmp
outsb
inc
icebp
mov
dec
push
jge
ds
arpl
jo
mov
mov
out
mov
sahf
fdivrp
sti
pop
in
mov
jg
pop
push
dec
imul
xor
mov
mov
js
fsubl
push
add
dec
data16
xor
xor
jbe
or
mov
cmp
cld
cli
stos
aam
fidivl
ja
push
cmpsb
lds
lcall
xchg
jns
gs
push
pop
loop
fstp
lcall
icebp
aad
daa
not
dec
lcall
stc
lcall
xchg
sub
sub
cmpsb
xchg
shrb
dec
fstpl
xchg
sub
mov
int3
ret
jp
mov
and
and
fnsave
jge
leave
ficoml
lods
scas
jnp
negl
ret
lret
fisttpll
sete
xlat
sbb
divb
inc
push
std
add
sub
dec
ret
shr
lcall
dec
aam
ljmp
test
lcall
sahf
and
pop
cmp
mov
sub
jecxz
dec
lcall
or
mov
adc
ret
mov
sbb
outsl
cmpsb
fcomps
sbb
adc
lea
sahf
pop
pusha
mov
sbb
sub
mov
pop
dec
xchg
shr
inc
sbb
mov
cwtl
mov
popa
push
cmpsl
sahf
fists
repnz
mov
jl
mov
es
pop
stos
fidivl
jo
out
add
sbb
ljmp
push
ljmp
adc
cmpsb
mov
mov
clc
into
cmp
es
and
bound
push
jo
scas
adc
sub
mov
xchg
lock
cli
fcomi
lcall
jecxz
mov
loop
data16
icebp
lock
lcall
popa
gs
ftst
pusha
push
dec
push
scas
cmp
das
mov
ss
adc
and
iret
js
push
mov
fcoms
lcall
loopne
mov
lods
into
or
sub
cwtl
sbb
mov
nop
sarl
pop
je
cmp
jl
scas
gs
mov
cmp
or
xchg
insl
ds
pop
add
push
pop
pop
mov
pop
mov
ljmp
push
adc
sbb
add
cmpl
sarl
sbb
jb
jbe
push
scas
push
cmp
jne
add
cltd
jbe
test
push
mov
test
adc
jb
insl
lods
stos
cmp
and
or
notl
popa
xchg
pop
ficoml
subb
mov
insl
mov
inc
mov
jg
push
pop
in
lcall
push
scas
stos
out
es
xor
pop
push
out
popa
adc
xchg
fwait
loope
pop
adc
or
sub
cltd
mov
push
adc
out
out
bound
insb
xchg
ss
pushf
pop
mov
fsubr
addl
add
mov
mov
stc
nop
lret
sbb
and
cltd
cwtl
and
push
jno
mov
push
ja
mov
push
hlt
adc
iret
repnz
popa
cmpsb
cmp
pushl
sbb
mov
fsubrs
push
xchg
je
dec
mov
xor
loope
sub
add
add
and
fdivs
jns
mov
iret
push
lods
inc
pop
ss
or
mov
lret
sbb
push
push
xor
xchg
inc
jbe
fidivl
pusha
and
xchg
es
iret
inc
fdivr
out
mov
pop
test
aaa
cltd
mov
imulb
push
lahf
mov
out
sbb
loopne
pushf
popl
xchg
jmp
and
out
rcr
mov
lahf
fs
adcb
into
notb
mov
xchg
mov
ficoml
fcom
aam
out
out
jne
or
pop
cmp
adcb
les
push
and
jmp
popa
int
add
mov
dec
rcl
push
push
or
push
mov
aad
repz
jle
adc
xchg
sbb
pop
or
inc
inc
push
ljmp
add
sub
mov
and
div
js
xchg
jae
rclb
stos
or
mov
mov
or
cmpsb
repnz
and
mov
icebp
icebp
test
lea
fcompl
pop
adc
sbb
push
mov
xchg
push
aaa
cli
cwtl
push
bound
loopne
mov
in
loopne
sbb
lock
test
xchg
rcrl
jns
repz
dec
icebp
clc
cwtl
in
sbb
sbb
sahf
aad
jp
test
xchg
shl
enter
bound
sbb
test
js
mov
adc
xorl
sub
adc
pop
ret
pslld
jmp
jns
xor
sbb
clc
icebp
stos
mov
push
sbb
popa
cwtl
es
or
xchg
in
pop
bnd
mov
fimull
push
cli
sbb
fisubs
imul
mov
fisttpll
or
or
fbld
loope
sub
xchg
icebp
testb
testl
mov
or
sbb
adc
shrb
jle
cmp
repnz
notb
mov
add
xchg
push
cli
adc
and
jb
imul
push
sub
sbbl
and
mov
pushf
sub
orb
pop
popf
fwait
push
es
push
fiadds
push
mov
and
std
cltd
inc
mov
std
adc
push
fwait
mov
cld
mulb
negb
push
jns
test
rolb
aam
or
sub
mov
jne
lock
test
push
lret
push
arpl
ja
mov
add
es
sahf
and
jne
and
lret
xchg
es
sbb
arpl
loopne
cltd
xchg
adc
pusha
mov
mov
push
or
ficompl
sbb
push
push
cmp
sbb
cmp
pop
and
dec
sti
ss
sahf
or
jp
scas
std
jae
pusha
psubsb
sarl
jns
insb
loopne
mov
aam
lods
stos
push
pusha
mov
lcall
es
pop
dec
nop
xchg
rcr
mov
push
outsb
mov
test
dec
nop
clc
pop
dec
push
mov
rcl
inc
pop
inc
into
xchg
out
or
nop
jle
mov
addr16
jp
jae
inc
cmpsb
xor
ret
or
enter
fdivs
pusha
aam
or
jns
into
jle
aas
arpl
in
push
jns
mov
mov
jle
push
push
fdiv
scas
call
lock
out
out
jno
push
pop
fsub
push
cld
mov
or
aaa
mov
xchg
enter
add
jns
pop
ljmp
mov
mov
ret
ret
cmc
mov
xchg
outsb
mov
push
icebp
adc
mov
jbe
loopne
and
pop
in
in
call
movsb
cmp
dec
into
aas
cltd
test
outsb
outsl
lea
test
xchg
sub
in
jmp
sbbb
pop
test
in
sub
stc
push
adc
pop
mov
aas
aaa
cld
test
and
iret
sti
pop
cmpsb
cltd
sti
loope
sti
adcb
adc
push
dec
test
mov
adc
xor
cld
xor
dec
test
aaa
inc
adc
mov
aam
or
sahf
mov
xchg
sahf
scas
sahf
xchg
sahf
lods
sahf
xchg
sahf
cs
xchg
sahf
mov
aad
add
icebp
ss
icebp
xchg
cmpsb
mov
cwtl
insb
cmpsb
ljmp
push
jp
push
enter
test
jmp
fnstcw
lahf
test
jge
push
mov
pop
std
dec
xor
sbb
stc
mov
or
pop
push
popf
mov
push
scas
movsb
pop
in
push
clc
xchg
dec
clc
loopne
adc
cwtl
mov
int3
jno
xor
push
mov
in
nop
cmp
pop
add
js
leave
xchg
xchg
lock
jo
aaa
pop
and
cmpb
adc
je
mov
jl
outsb
cli
fstl
pop
ljmp
pusha
and
mov
cmp
dec
imul
in
xchg
clc
loop
sbb
xchg
cmp
std
xchg
jne
add
stos
cwtl
lret
jmp
pop
lods
fldenv
imul
repz
push
sbb
js
mov
push
cmp
ljmp
test
sahf
dec
test
jmp
shrl
or
sub
pop
scas
cmp
rorb
repnz
pop
mov
mov
mov
and
sbb
repnz
clc
adc
push
dec
fdivr
rclb
jp
mov
adc
out
int
pop
pop
xchg
stos
jo
xchg
mov
fcoml
icebp
dec
cld
cld
push
cwtl
xchg
adc
dec
ficomps
add
out
js
outsb
call
adc
pop
jl
loope
in
sbb
jb
cmc
ret
jne
mov
pop
mov
fmull
xchg
pusha
adc
sbbb
adc
cs
mov
into
out
fistl
cmpsb
lods
xor
hlt
mov
push
jl
loopne
sub
notl
adc
cmpsb
jmp
mul
mov
pusha
movsb
nop
imul
and
mov
pop
xchg
and
sub
cmp
sub
repz
outsb
hlt
icebp
jle
dec
push
inc
xchg
push
dec
fistl
cmp
mov
out
dec
mov
fidivrl
cmp
nop
xchg
xchg
scas
jbe
jl
inc
mov
cwtl
test
rcl
btr
fimuls
cmpsl
imul
ror
xchg
lock
scas
push
adc
insl
imul
pop
mov
inc
push
jb
in
mov
jp
pushf
cld
out
pop
mov
nop
adc
jb
fists
jae
adc
xchg
mov
pop
cmp
mov
jnp
cs
sahf
cld
jp
add
jmp
or
jle
out
adc
jbe
scas
aad
pop
shrl
rcl
mov
inc
js
or
ficompl
mov
fmul
adc
adc
and
cmpsb
sbb
xor
pusha
and
cwtl
mov
pusha
insl
xorl
xchg
lahf
mov
movsl
xchg
inc
rol
add
jnp
stc
xchg
out
lea
dec
jno
cmp
std
and
push
xor
hlt
add
sbb
sbb
std
add
repnz
push
push
push
psubusb
pop
push
mov
adc
fists
mov
enter
mov
dec
es
adc
xchg
xlat
lret
dec
adc
stos
cmc
sahf
jbe
fcoml
ds
jns
cmpsb
subl
fidivrs
adc
lea
sbb
xchg
push
xchg
jns
mov
push
lods
dec
das
shlb
pop
js
pop
ret
cmc
pushf
mov
push
cmpl
jg
cwtl
fsubp
repnz
fcoml
clc
clc
xchg
fsubr
fildl
mov
fisttpl
fs
fwait
mov
out
clc
cltd
push
call
or
pushf
jbe
sahf
call
enter
xor
push
fwait
aaa
mov
fisttpll
scas
cmp
int
pop
push
cwtl
fs
icebp
repnz
rclb
mov
mov
pop
jmp
push
xchg
jo,pn
mov
pop
xor
pop
cmc
push
cmp
imul
bound
xchg
lret
dec
ret
mov
data16
add
fsubrl
lods
push
ja
mov
mov
pop
and
sub
sarl
add
pop
cltd
icebp
add
mov
sbb
cmp
push
test
cmpsb
sbb
bound
jge
xchg
in
psubusb
xlat
mov
adc
sbb
and
push
xor
push
into
es
push
call
icebp
out
jmp
bswap
adc
push
xchg
adc
jp
xchg
and
sbb
jge
fists
pushf
loop
aad
jns
fxch
xchg
shrb
push
inc
leave
mov
xor
sbb
into
imul
leave
push
mov
sbb
pushf
or
int
pop
mov
fidivl
scas
ret
xchg
jp
cmpsb
or
mov
mov
mov
inc
sbbb
jp
fwait
outsl
jmp
mov
adc
fcmovne
mov
adc
in
mov
push
inc
push
xrelease
fisttpl
jns
ljmp
xchg
mov
clc
jl
fcoml
stos
out
addb
inc
es
push
out
xor
mov
and
adc
add
sti
mov
scas
add
mov
popf
dec
imul
data16
mov
hlt
sbb
jae
fs
icebp
pushf
bound
sysenter
adc
pusha
or
movb
cmp
rclb
loop
ror
pushf
cli
push
pushf
cmc
and
imul
xor
or
cmpsb
pop
je
mov
xor
sbb
mov
mov
clc
int3
mov
mov
loopne
mov
cmpsb
push
xorl
divl
daa
sbb
clc
cmpsb
push
push
out
push
mov
es
jecxz
rcrb
sbb
push
jle
dec
movsl
dec
outsl
dec
mov
xchg
jne
mov
jle
cli
sbb
mov
xchg
pop
sub
xor
xchg
popa
pop
aas
pop
mov
insb
push
mov
insl
xchg
lret
stos
shlb
test
into
das
dec
adc
cltd
sub
sbb
jle
dec
push
xorl
test
jge
imulb
xchg
movsl
test
out
xchg
mov
and
fnstcw
insl
push
insl
mov
fsub
das
ret
sub
xchg
jno
cmp
out
rcr
xchg
lcall
push
xor
sbb
push
cwtl
mov
rcrl
xor
xor
add
sub
adc
push
insl
mov
cmp
pop
cmpsb
leave
sbb
addr16
mov
test
push
pop
xchg
fisttpl
std
lcall
mov
nop
imull
icebp
xchg
lea
notb
out
dec
jo
je
add
ja
pop
notl
das
pop
es
gs
ljmp
out
jae
xchg
scas
mov
xchg
push
nop
add
push
mov
movsl
andl
es
stos
shrl
idiv
jp
dec
add
pushf
sar
cmc
fimuls
loopne
nop
stc
inc
xchg
push
xor
leave
xchg
dec
cmpsl
push
movsb
in
push
int3
xchg
arpl
or
jge
mov
cli
rclb
fcomi
xchg
loopne
or
pop
ficomps
cmpsb
lahf
fists
push
adc
stos
cwtl
inc
sub
aaa
dec
ds
loop
mov
imul
std
popf
mov
mov
ret
shll
shr
push
push
shl
lret
inc
xchg
pop
stos
cmp
mov
xor
sub
inc
test
aam
clc
test
xchg
icebp
cmpsb
mov
xchg
push
adc
sbbl
out
outsb
les
jp
xchg
iret
mov
repnz
aad
insl
mov
jae
test
movl
push
popl
jb
ds
adc
and
jns
sbb
or
incb
jmp
xchg
sub
cmp
cmc
sbb
ja
mov
mov
mov
rorb
lret
in
cmp
or
sbb
cwtl
jbe
xchg
adc
xchg
divb
cwtl
push
fwait
mov
int3
mov
insb
cmpsb
hlt
dec
loopne
loopne
jb
lock
dec
out
adc
or
push
or
mov
push
cs
shlb
aas
in
fistl
insb
mov
pop
in
stc
adc
jne
cmp
cltd
xchg
or
mov
add
ja
sbb
xchg
push
cmpsb
add
fwait
int
in
pop
iret
pushf
mov
mov
fildl
dec
fcompl
roll
mov
inc
int3
pop
xchg
adc
sbb
mov
xor
jno
sarb
jno
cmc
out
sbb
dec
jne
adc
fdivl
cmc
cmp
repz
adc
daa
inc
into
test
clc
push
clc
out
popf
sbb
sarb
mov
ja
push
xchg
push
mov
adc
add
xchg
aaa
je
adc
xchg
ret
es
int
and
and
xchg
xchg
adcl
adc
sbb
in
inc
adc
hlt
lock
xchg
cmpsb
movsl
mov
jge
lea
cmp
mov
roll
xor
cmpsb
ret
mov
cli
push
cmp
pushf
cmpsb
cmp
mov
sub
clc
stos
or
xchg
jb
in
neg
in
mov
test
xchg
push
aad
dec
in
push
sbb
add
xorl
push
mov
je
xchg
pop
mov
sbb
add
pushf
adc
xchg
test
sbb
or
leave
jmp
or
and
cmpsb
pushf
and
mov
sti
sub
out
cmpl
sub
push
lret
es
imul
aaa
incl
push
rep
lcall
fcoml
pushf
mov
sahf
jb
xchg
cwtl
push
cmp
jp
mov
and
jp
pextrw
cltd
aad
ficompl
cli
test
xchg
add
cld
xchg
orl
xchg
dec
and
xchg
add
xchg
jp
aad
shrl
in
js
push
nop
testb
nop
adc
and
xchg
sbb
jb
xchg
xchg
adc
mov
push
add
cltd
repnz
mov
rcrl
push
mov
std
inc
mov
add
push
test
orl
adc
jns
sbb
mov
je
adc
push
xchg
mov
aas
addr16
sbbb
pop
sar
icebp
xchg
push
stc
pop
or
int3
jle
jne
sbbb
push
ret
outsb
insb
sbb
es
js
xchg
stc
popf
mov
cmpsb
xchg
fwait
nop
cli
xchg
mov
out
sub
dec
cltd
leave
or
rclb
imul
pushl
mov
push
cmpsb
add
cmp
cmp
loopne
in
xchg
jge
test
mov
int3
shl
jmp
aad
ret
jbe
std
rol
push
adc
dec
sub
sub
ret
fcoms
movsb
dec
push
call
and
push
mov
xchg
cmpsb
outsl
sub
mulb
xchg
cmp
fwait
lahf
aam
es
pushf
test
repz
and
ficompl
stos
inc
fiadds
jns
sbb
js
inc
insb
add
jle
sbb
mov
push
sub
sbb
scas
leave
test
mov
cmpsb
and
push
sbb
push
xchg
negl
cmp
or
xchg
out
push
ss
mov
or
cmpsb
push
test
fisubrs
sahf
loopne
outsb
cmp
xchg
push
sbb
add
stos
popa
pop
mov
repz
and
das
adc
iret
sbb
xor
std
xchg
push
js
fwait
jo
test
out
iret
aaa
ljmp
push
dec
adc
movsb
ds
mov
push
test
sbb
stc
clc
repz
fdivs
test
xchg
enter
cmpsb
xor
push
sub
xor
add
aaa
sbb
add
std
lret
adc
cmp
lods
sbb
inc
fwait
lods
lcall
lret
cwtl
push
mov
sar
xchg
fmull
aad
xchg
rclb
lock
cmp
lods
sub
cmpsl
mov
daa
fsubrs
dec
lock
repnz
push
xchg
mov
loop
jl
mov
pusha
repz
sub
jg
xchg
lock
xor
mov
sub
lret
xor
xchg
inc
out
nop
into
xchg
jne
xchg
repnz
icebp
push
pop
pop
stc
add
and
test
jae
jno
pop
xor
pushf
cwtl
pop
fdivrl
pusha
xchg
ss
pushf
fwait
add
pop
out
pop
mov
pop
ljmp
loop
dec
mov
stc
mov
cmpsb
push
push
mov
inc
xchg
add
in
sbb
xchg
ficoms
leave
adc
fistpl
add
xchg
pushf
dec
xchg
mov
xchg
jge
sub
sarb
out
cltd
sbb
popf
in
pusha
and
mov
ret
xor
roll
clc
je
out
jb
push
add
cmp
mov
or
cmpsb
dec
or
icebp
xchg
add
xor
pop
repnz
nop
fistpl
dec
push
in
jo
jle
loopne
mov
sbb
push
nop
adc
rcrl
add
out
jnp
mov
mov
leave
test
mov
mov
scas
stos
add
stc
sbb
nop
cmpsb
call
mov
sbb
aaa
add
xor
pop
adc
mov
add
imul
mov
dec
cmp
push
pop
xchg
mov
fsubrs
xchg
in
xchg
xorl
mov
pop
jo
fmuls
add
mov
push
cmc
inc
mov
jp
lret
stos
mov
pop
and
cmc
pop
aad
pop
xchg
mov
loope
mov
add
sub
hlt
ret
lret
arpl
addr16
repnz
out
or
nop
jno
xchg
stos
fwait
push
shrb
sub
cmp
and
mov
cmp
cmp
jno
rcll
sub
cltd
adc
into
jl
and
or
mov
jb
enter
sbb
rcrb
sahf
sbb
insl
stos
movsl
push
or
xchg
or
sbb
cmpsb
les
out
mov
aad
cmp
xchg
mov
nop
out
icebp
mov
xchg
cmpsl
es
fwait
into
hlt
repnz
push
cmpsb
pop
std
in
rol
and
mov
jp
add
jbe
pop
push
es
and
pusha
xchg
mov
mov
shr
push
push
xchg
cmc
mov
add
fcoms
mov
or
sbb
loopne
cmp
push
mov
leave
push
cmp
icebp
outsl
test
mov
cmc
push
in
xchg
loopne
mov
jle
and
push
adcl
fdivl
mov
jecxz
mov
icebp
lcall
push
jne
test
imul
in
jns
scas
xor
jmp
or
jl
mov
mov
adc
add
cmpsl
dec
push
xchg
stos
sarb
push
adc
iret
and
nop
or
icebp
mov
xor
scas
mov
pop
pop
or
out
and
pushf
sbb
cltd
xchg
mov
cs
jp
dec
in
fwait
js
cmp
xchg
dec
jns
lock
adc
sahf
jno
adc
jp
xchg
push
test
push
cmp
aaa
and
int
cmpsl
repnz
dec
adc
push
jb
arpl
mov
movl
add
cmp
sbb
and
js
or
dec
xchg
dec
insb
lcall
pushf
pusha
push
push
adcl
movsl
ljmp
fiaddl
or
add
push
cmp
cltd
mov
cwtl
out
rclb
sbb
xor
inc
stc
jb
or
in
call
negb
lock
testl
inc
call
cs
mov
in
adc
fisttpl
stc
cmp
enter
xchg
in
cmpsb
addr16
or
sbb
push
mov
call
clc
mov
and
cmpsb
sahf
sub
sbb
sbb
pop
es
adc
xchg
in
push
sub
fstl
push
xor
pop
icebp
mov
aas
pop
cmc
mov
pop
cmc
movsb
jae
jno
jbe
icebp
inc
jp
mov
shll
test
push
mov
sahf
mov
pop
popf
adc
xchg
mov
pop
add
filds
push
jmp
xchg
std
insb
pushf
pop
inc
lcall
xchg
stos
mov
sub
mov
and
and
xor
lock
cltd
lret
arpl
xchg
xor
mov
cmp
xchg
popa
sbb
aad
mov
xchg
or
and
fildll
fmuls
std
loope
push
out
push
sub
jns
pop
mov
jl
xor
sbb
call
pushf
negb
adc
fwait
aad
xor
loopne
sbb
adc
mov
mov
aad
cli
jge
sbb
adc
xor
xchg
xor
ficoml
cmp
xchg
adc
xorl
je
pushf
mov
push
jo
adc
push
mov
outsl
jo
push
rclb
mov
shlb
pop
in
xchg
popa
add
cltd
dec
nop
std
mov
pusha
mov
push
out
xchg
lret
mov
shrb
sub
dec
andl
pop
add
cmpsl
cwtl
fdivr
push
xchg
mov
hlt
iret
mov
adc
or
ss
mov
cmp
jp
or
pop
xchg
sbb
sbb
rcrb
push
xchg
and
dec
imul
mov
mov
push
fnstenv
fisubrs
xchg
xor
les
push
outsb
adc
insb
inc
pop
push
pop
xchg
stc
push
daa
mov
sbb
jle
and
ja
fadds
xchg
push
push
repnz
mov
mov
stos
shrl
mov
and
sbb
pop
inc
cmp
test
cmpsl
rorl
mov
dec
lods
cmp
and
andl
pop
mov
sahf
adc
in
xor
mov
adc
test
mov
inc
cmpsl
out
add
pushf
add
push
vpslld
pop
pop
push
adc
icebp
out
mov
es
mov
out
sub
aad
xchg
les
int
jae
fsubs
xchg
mov
es
ds
mov
adc
es
jnp
mov
outsl
mov
or
mov
nop
jns
sub
xchg
stos
stc
xchg
xor
test
cmp
jg
pop
ret
mov
stc
sbb
sbb
xchg
dec
out
add
cwtl
xchg
xchg
jg
sbb
mov
hlt
sbb
and
jb
adc
xchg
xor
mov
das
adc
stc
xchg
cmpsb
mov
jp
dec
jl
xchg
int
adc
clc
fimuls
cmp
sbb
loopne
cmpsb
addr16
adc
sahf
cwtl
fists
pop
and
pop
xchg
lea
adc
push
sbb
jns
addb
xchg
push
leave
pop
dec
rcl
pushf
mov
dec
pop
add
nop
stos
cmp
adc
xchg
fsts
andb
in
scas
mov
cwtl
adc
imul
pop
cld
lret
mov
or
les
addr16
enter
and
test
xchg
ret
or
mov
or
dec
in
fdivs
mov
adc
jbe
add
xchg
lock
push
mov
adc
adc
adc
inc
xchg
adc
ss
xchg
xchg
push
adc
inc
or
xchg
lahf
fwait
outsb
pop
sbb
dec
sbb
les
adc
xchg
fistpl
hlt
nop
mov
sbb
pusha
test
icebp
sbb
lods
push
adc
sub
dec
popf
mov
lea
cmpsb
cmp
call
ja
std
stos
cld
push
xor
mov
negl
insb
fdivs
into
jb
movsl
popa
scas
add
repnz
stc
xor
pop
scas
das
sbb
decb
aas
jo
mov
adc
jle
push
xchg
mov
clc
icebp
jl
xlat
ljmp
inc
clc
push
fsubrs
call
fwait
bnd
ljmp
scas
xchg
push
clc
frstors
jmp
push
xchg
idivl
clc
imul
dec
jno
pop
sbb
data16
adc
roll
fildll
repz
sub
jg
cmp
xchg
dec
clc
mov
adcl
js
data16
pop
outsl
std
jecxz
xchg
pop
popa
shrb
lock
pushf
repnz
dec
dec
jno,pt
mov
sbb
js
xchg
adc
xchg
mov
mov
sub
jb
mov
outsl
stos
xchg
jl
icebp
jae
dec
add
lods
outsb
sbb
dec
or
mov
mov
notb
enter
insl
clc
xchg
loop
ds
jb
arpl
and
int3
adc
cmp
lds
lds
cmp
lret
and
arpl
sti
cwtl
lret
test
xchg
jle
insl
jp
std
js
pop
les
jo
outsb
clc
leave
jp
ficomps
push
pop
fcomi
xchg
jne
out
jns
les
repz
push
xchg
cmpsl
rclb
leave
lods
mov
adc
dec
mov
jns
mov
sub
lret
push
loop
jmp
xor
xchg
jns
jmp
ficomps
enter
cmc
xchg
xchg
clc
and
jle
lods
sbb
hlt
fidivs
popa
push
mov
mov
xchg
popf
leave
xchg
cltd
scas
jns
sarb
les
sbb
xchg
test
test
sbb
and
xchg
push
imul
jp
xor
repnz
cs
pop
aad
push
cmp
out
xchg
add
jmp
mov
cld
or
mov
fwait
push
out
mov
adc
xchg
lock
xchg
or
pop
xchg
jp
cs
fidivrl
lock
daa
lods
enter
out
jp
mov
xchg
jl
loopne
sahf
adc
pop
ljmp
nop
push
clc
sbb
jp
test
mov
stos
and
ljmp
test
push
jp
add
aam
sub
divl
mov
inc
mov
push
cmc
jp
xchg
mov
in
clc
pop
idivb
out
xchg
icebp
xchg
sbb
adc
push
not
and
mov
fnstenv
sahf
sti
or
xchg
sbb
pop
xorl
cmpsb
arpl
mov
fisubs
sub
mov
sbb
stos
dec
mov
cltd
ljmp
mov
xchg
mov
repz
jge
mov
adc
testb
in
outsb
mov
fmuls
mov
sub
xchg
inc
cwtl
ja
xchg
loope
lods
xchg
jnp
push
subb
jecxz
xchg
pop
sahf
ret
cli
out
leave
mov
mov
nop
sbb
lret
xchg
push
mov
aad
cld
sbb
loop
scas
adc
adcl
stos
mov
add
add
adc
dec
mov
adc
jle
out
and
ficoml
mov
adc
xchg
repnz
add
mov
adc
push
dec
rclb
sub
push
pop
dec
add
in
cltd
test
pop
pop
push
xchg
ljmp
stos
testb
fsubs
add
mov
mov
xchg
xchg
xor
xchg
sarl
xchg
adc
adc
andl
or
jp
and
sti
lret
mov
fcompl
xchg
stc
fidivrl
xchg
jns
fidivs
xor
jae
mov
stos
repnz
out
sti
lock
mov
mull
repz
clc
pop
xchg
cmp
jns
inc
leave
fidivrs
cli
sbb
mov
gs
xchg
incl
xchg
pop
repnz
xor
xchg
mov
mov
stos
popf
lods
cmpsb
and
sbb
push
add
ret
data16
dec
out
stos
fisttps
mov
inc
mov
adc
addr16
stc
dec
jnp
adc
sub
inc
inc
push
pop
into
sub
pop
jnp
jp
push
pusha
hlt
ret
arpl
aad
mov
xorl
mov
xchg
push
push
pop
and
mov
out
imul
repnz
push
mov
cmp
stos
pop
sbb
sub
adc
inc
adc
mov
or
dec
out
out
xchg
enter
mov
jae
ljmp
dec
dec
jle
inc
pop
mov
hlt
jp
lock
repnz
jp
pop
mov
mov
add
adc
xchg
push
fmull
xchg
out
shr
or
pop
cmp
icebp
adc
jp
mov
xchg
mov
jbe
rcrb
xchg
ljmp
fcmovne
mov
scas
inc
out
adc
push
movb
jp
jmp
testb
je
mov
jns
pop
outsb
add
cmp
test
jns
popf
dec
mov
push
sbb
loop
jp
outsl
push
xor
scas
hlt
jp
stc
xor
xchg
xchg
mov
adc
or
push
in
cmpsb
jmp
imul
xor
xchg
push
push
les
dec
xor
nop
sbb
ret
clc
xchg
xchg
rclb
cltd
push
or
outsb
jp
pop
push
or
pop
xchg
or
push
xchg
push
iret
out
stc
loop
add
cltd
pop
pop
xchg
or
adc
pop
mov
test
cmp
roll
jmp
ror
adc
cs
stc
notb
hlt
xchg
jbe
and
xchg
rclb
jo
nop
push
enter
and
inc
sbb
cwtl
mov
cmp
addr16
xchg
clc
ret
cmp
scas
in
xchg
push
jne
aaa
dec
movsb
xchg
jp
aas
xchg
add
jp
mov
popl
and
jb
orb
push
je
add
mov
je
push
clc
xchg
nop
push
mov
mov
jnp
mov
pop
mov
imul
ret
xchg
mov
add
jmp
out
adc
jle
jne
test
out
mov
stos
adc
jmp
lcall
jo
adc
xchg
fcoml
mov
pop
sti
rorl
out
push
xchg
inc
pop
test
xchg
xchg
and
or
jle
pop
push
mov
or
aaa
rcll
fstpl
in
add
mov
jno
idivb
hlt
pop
adc
in
dec
xchg
adc
icebp
jae
mov
or
jae,pn
pop
lock
stc
xchg
and
jbe
js
mov
add
mov
loopne
lock
mov
or
inc
enter
aaa
jp
and
ja
or
push
mov
loope
sahf
mov
shll
or
test
pop
sahf
test
loope
test
test
sub
mov
test
loope
movsl
mov
and
mov
loope
mov
xor
ja
or
push
scas
mov
test
loope
lods
mov
sub
stos
mov
test
loope
mov
mov
mov
test
loope
mov
xor
xor
mov
xor
rorl
push
mov
loope
mov
mov
mov
test
loope
dec
mov
ja
or
mov
test
loope
inc
nop
lods
xchg
insb
stc
fs
fidivs
leave
fs
xchg
xor
mov
data16
test
mov
sbb
dec
and
mov
xchg
ficoml
js
imul
jecxz
push
mov
mov
repnz
inc
rcrl
js
push
rcr
jmp
mov
test
add
pusha
loopne
out
je
fs
pop
repnz
mov
js
jbe
cmp
loope
mov
fadds
jb
sti
and
in
sarb
cmp
push
aam
cmpsb
jecxz
xchg
in
int3
in
movsb
ljmp
xchg
call
loop
adc
loop
lret
ficoml
nop
jns
in
cmp
out
lahf
stc
int3
cmp
mov
addr16
mov
xchg
nop
jae
inc
cwtl
out
arpl
loopne
bound
int
dec
call
mov
rol
out
movsb
rcr
cwtl
pop
mov
rcr
push
callw
loop
add
loope
mov
push
aas
test
out
movsb
out
push
fnstsw
shrb
mov
ret
xchg
jo
jecxz
outsb
sbb
xchg
popa
fucomp
gs
mov
repnz
fiadds
call
subb
imul
and
inc
in
call
js
arpl
mov
mov
pushf
mov
std
mov
xchg
js
push
jle
ret
out
push
adc
or
stos
lret
loope
pop
in
in
sti
adc
mov
movsb
mov
ficoms
imul
pusha
fucomp
gs
clc
movsl
loop
loopne
gs
xchg
in
out
lahf
js
repz
out
push
adc
jb
js
pop
in
or
mov
or
mov
jbe
mov
clc
fistps
dec
jp
mov
xchg
jmp
popa
idivl
ror
in
movsb
lret
sub
out
xchg
in
pushf
push
test
notb
enter
xchg
or
pop
mov
xchg
sbb
or
push
popa
cmpsl
pop
cltd
adc
cmp
cwtl
xor
notb
divb
pusha
in
mov
jle
sbb
mov
fdivrp
lcall
mov
mov
adc
loope
push
imul
cli
sub
cwtl
lcall
jb
cwtl
xchg
xor
repnz
leave
xchg
jo
add
adc
test
jb
or
or
mov
pop
push
or
hlt
int3
lcall
sti
in
add
stos
fstl
rclb
lods
cwtl
lahf
mov
je
loopne
jo
sub
inc
push
popa
scas
in
outsl
fs
test
nop
lahf
lret
pop
pop
fstpl
add
fstp
and
out
and
rcll
mov
adc
loopne
enter
es
test
cmp
inc
dec
daa
add
mov
popf
mov
inc
jae,pt
cmp
aad
lea
push
aam
stc
inc
clc
xor
lcall
sbb
xchg
jl
pop
adc
jne
test
in
push
jl
lahf
aaa
test
adc
mov
jns
dec
mov
or
hlt
push
cmp
add
fildll
and
loopne
adc
outsl
iret
sbb
jne
sub
mov
push
lea
xchg
and
pusha
pop
icebp
xchg
movsb
sbb
jp
jp
inc
jb
test
jmp
dec
in
insl
out
xchg
xor
lock
mov
push
sbb
dec
xchg
das
cmpsl
insl
js
cmp
cmpxchg
xor
pop
or
xchg
cmpsb
push
test
jecxz
leave
fisttpl
jbe
jno
and
xchg
repnz
sub
notb
mov
call
negb
push
inc
mov
test
sbbl
dec
scas
js
hlt
aad
popa
sarb
insl
xchg
shrl
pop
rorl
popl
cmp
sti
pop
movsb
adc
and
or
repnz
stc
std
and
pop
ficompl
sbb
pop
xchg
lds
psllq
in
add
push
popa
loop
jae
aam
mov
popf
cmp
push
lcall
test
push
rclb
std
sub
cli
add
sub
lock
loopne
mov
movsl
xchg
loope
adc
inc
xchg
jmp
lcall
inc
sbb
sbb
fdivrl
scas
cmpsb
pop
pop
ret
cli
repz
cmp
xchg
sbb
icebp
out
add
mov
and
xchg
pop
mov
in
push
loope
sbb
ret
scas
and
xor
out
push
cmpsl
pop
movsb
xchg
lea
ss
loop
push
test
mov
es
xchg
fwait
jmp
hlt
addb
mov
loopne
sbb
lret
ljmp
mov
pop
xchg
in
xchg
repnz
or
repz
loop
ret
cwtl
fdivrl
cltd
jge
adc
pop
xchg
mov
adc
xchg
push
pop
pusha
cmpsb
jmp
call
out
sbb
xchg
sub
mov
and
arpl
sahf
out
stos
lods
push
arpl
lea
cmpb
call
addb
stos
lret
popa
sub
in
cmp
cwtl
sub
push
mov
outsb
outsb
and
and
and
and
js
add
fstpt
or
stos
cltd
dec
jns
push
jb
test
push
fwait
test
lock
mov
mov
jbe
pushf
fmuls
push
rcll
mov
sbb
adc
mov
das
mov
cmpsb
addr16
stc
mov
je
xchg
jb
lods
loope
add
inc
out
mov
jl
andl
xor
in
jle
dec
fdivs
cmpsb
test
mov
call
push
xchg
fistpll
cli
push
adc
test
sti
cmpsb
inc
mov
adc
fisttpl
sbb
cmp
jns
arpl
xchg
loope
adc
xchg
mov
mov
cwtl
cmp
insl
aas
sbb
and
bound
xchg
pop
call
shlb
mov
cmp
adc
imul
aad
mov
mov
pop
sub
push
pop
mov
js
inc
adc
mov
imul
mov
leave
push
lret
push
sbb
pop
jo
lcall
neg
add
outsb
sbbb
mov
mov
jo
movsb
push
enter
outsl
in
or
pop
pop
mov
mov
sbb
adcb
div
and
rcrl
fwait
mov
test
loope
cltd
test
mov
adc
jmp
mov
mov
mov
testb
aam
add
pop
pop
mov
sub
sbb
fwait
cltd
pop
sti
loop
pop
subb
movsl
xor
and
xchg
jns
or
insb
adc
in
aam
in
push
repnz
inc
shrb
or
xchg
adc
xor
lret
aam
in
cltd
rcrl
fcmove
pop
mov
das
jecxz
test
jb
adc
dec
roll
jne
xchg
jmp
xchg
pushf
scas
pop
ret
nop
mov
lock
push
test
loopne
push
inc
clc
sahf
fwait
xchg
adc
mov
push
xchg
lock
adc
test
dec
mov
jo
lret
shll
push
xor
add
sbbb
xchg
xor
jl
loopne
pop
xchg
mov
js
mov
into
mov
sbbb
adc
pop
cltd
fildl
inc
ljmp
dec
test
insl
xchg
mov
sbb
xchg
jae
bnd
ret
dec
xor
xchg
je
and
test
jae
inc
imul
push
xchg
fdivrs
hlt
fcoml
lock
push
sti
repnz
iret
mov
js
pop
stos
xchg
mov
add
xor
sahf
cmpsb
sbb
add
dec
scas
mov
sahf
jnp
jmp
sbb
pop
fs
stos
ljmp
mov
sbb
mov
js
xchg
cmp
lea
and
pop
rcrb
popf
and
pop
xor
mov
mov
das
cmp
push
ja
nop
lock
rol
sub
or
mov
sbb
stc
bound
and
sahf
sub
jne
push
dec
and
enter
bnd
dec
mov
sarl
lock
sbb
push
lahf
les
cs
jge
pop
insl
xor
fimull
xchg
sar
adc
clc
scas
call
xor
icebp
jne
push
or
lret
jo
les
mov
lret
sbb
aad
and
pop
mov
imul
ss
push
popf
and
mov
fucom
sub
pop
xchg
lods
fdiv
push
lods
add
or
cs
mov
fsubr
and
sbb
fimuls
xor
cmp
dec
jns
sbb
adcl
sub
fisttps
push
jmp
inc
scas
les
jb
imul
xchg
and
ds
lock
lock
push
sbb
pop
mov
dec
leave
adc
insl
lds
adc
cmp
shl
lahf
les
testl
mov
ret
push
sbb
fdivl
xchg
jl
xchg
test
leave
ret
pop
into
scas
movsl
ss
ljmp
cmp
cmc
push
pop
mov
pusha
cmp
gs
mov
mov
jo
mov
lock
jmp
std
cwtl
cmp
or
dec
int3
xchg
arpl
test
inc
or
adc
subb
add
mov
gs
leave
ret
jbe
xchg
outsb
fidivrs
test
jl
aaa
test
call
xchg
in
adc
sub
lods
les
adc
and
or
xchg
push
add
fwait
cmp
cmpsb
js
and
push
add
cmp
jge
xchg
andb
sub
stc
jl
out
pop
mov
test
cs
or
fiaddl
pop
daa
iret
xchg
sub
out
enter
xchg
or
mov
lds
pop
mov
push
std
orb
es
mov
and
mov
data16
test
mov
sbb
rcll
test
es
jb
mov
loop
pop
pop
xchg
scas
xchg
fwait
xchg
fcompl
loopne
pop
or
pop
cmp
std
jl
in
fcoms
pusha
xchg
push
subb
cwtl
fmuls
insb
mov
pop
push
push
push
clc
outsl
xor
adc
xchg
add
or
push
movsl
jno
mov
pop
xsha256
cmpsb
push
sti
push
xlat
fldt
scas
push
xor
test
mov
lods
out
push
lcall
or
andb
mov
mov
or
cs
xchg
push
movq
mov
or
and
push
jno
pop
bound
mov
jmp
jle
fbstp
push
mov
xchg
sbb
cmc
add
mov
cli
push
fsubrs
ficoml
mov
cld
sti
mov
sbb
pop
adc
pusha
pushf
testb
rcrl
mov
adc
repz
push
or
mov
cltd
std
je
pop
sub
jo
xchg
out
es
jbe
hlt
lods
call
sti
jae
push
xor
imul
cltd
ss
out
aad
mov
xor
and
ja
sti
and
std
xchg
js
jle
cltd
fcomi
fistl
rcrb
je
aad
inc
cwtl
mov
pop
mov
leave
jmp
mov
fcomps
mov
sahf
movsb
ret
adc
repnz
bound
mov
dec
cmp
push
cmp
popf
dec
cmp
fdivrl
xchg
and
insl
leave
dec
push
push
test
pop
repnz
or
sbb
repnz
add
cmp
mov
pushf
inc
sbb
cmp
sarb
and
call
and
stc
cmp
cmpsb
push
cmc
jp
xchg
clc
jb
push
pop
push
xor
add
sub
add
daa
dec
and
jo
mov
xchg
pop
xacquire
push
bound
in
je
push
pop
fbld
sub
sbb
add
scas
mov
sbbb
xor
inc
add
xchg
pop
nop
fs
imul
jmp
xchg
pop
pop
cli
push
rcrl
push
push
out
push
push
cmpsb
adc
xchg
gs
cltd
out
add
mov
sub
pop
xchg
ret
lods
das
jmp
stos
xchg
vpslld
adcl
xchg
adc
jbe
xor
ss
sub
lahf
fidivrs
push
lret
pop
pop
mov
mov
dec
fmull
fidivl
and
jns
lods
sbb
pop
aad
pop
enter
pop
jge
adc
jge
sar
ljmp
icebp
sbb
sar
mov
mov
and
cwtl
cltd
popa
lea
ja
arpl
shl
div
jnp
movsb
ds
daa
and
das
sahf
test
xchg
sbb
adc
add
loope
xchg
mov
mov
dec
sahf
aad
insb
fmull
rorb
pushf
cmp
and
pop
push
mov
mov
testl
faddl
scas
add
nop
add
add
push
xchg
mov
lcall
xchg
sbb
mov
orl
cmc
jge
or
test
xor
mov
push
loopne
test
adc
mov
xchg
push
pop
clc
sahf
clc
xchg
ja
sbb
mov
lea
fcmovu
jbe
pop
or
shlb
scas
cwtl
mov
ss
aad
movsb
cltd
cmp
cmc
cmpsb
or
lret
xor
sbb
sbb
push
shlb
jp
loopne
push
test
and
sub
cmpsb
repnz
sbb
adc
mov
stc
jg
cmpsb
cmc
push
mov
ret
lds
sbb
xchg
cli
pusha
push
cmpsb
and
cmp
iret
mov
adc
mov
jle
push
into
jne
adc
not
out
ds
jnp
jp
mov
jno
mov
adc
cmpsb
adc
push
sub
repnz
stc
in
test
mov
lods
sub
sub
std
arpl
hlt
xchg
lea
in
sti
fsubrl
push
lret
sbb
push
xor
rorb
xchg
add
inc
cs
push
inc
xchg
pushf
shl
mov
cmpsb
add
mov
lcall
lahf
or
out
mov
push
mov
xor
lcall
arpl
dec
mov
add
sbb
lea
xor
sub
adc
mov
cmp
lea
sub
movsb
cmpsb
xchg
dec
or
sub
fsubrl
lahf
arpl
loopne
lods
aas
mov
sub
push
xchg
pop
sbb
aad
test
fidivl
cmpsb
cwtl
ficoml
test
out
orb
test
sbb
aad
sbb
repz
fisttpll
and
pop
xchg
popa
pop
fcmovu
sbb
sub
mov
loop
adc
ficoms
adc
xchg
and
nop
add
push
nop
cmp
or
rorb
or
adc
cmpsl
cmp
adc
jne
test
call
cwtl
xchg
pop
push
into
repz
ljmp
aas
add
je
push
out
scas
pop
inc
push
inc
pop
cwtl
xchg
push
sbb
cwtl
fmull
cmp
pop
inc
pop
lcall
mov
mov
dec
mov
jo
sub
popf
mov
xchg
testb
rclb
jmp
cmp
xchg
push
aam
pusha
mov
xchg
mov
cmp
jbe
adc
into
cmp
or
movsl
sbb
push
mov
mov
cmpsb
xchg
sti
test
pop
mov
or
cltd
lods
jns
jge
mov
jns
jno
or
test
mov
pop
jge
inc
push
or
fidivrs
ficompl
add
pusha
or
mull
xchg
mov
pusha
sti
xchg
testl
and
jae
xchg
xchg
or
icebp
cmpsb
loop
out
sbb
je
pusha
add
xor
or
cltd
subb
sbb
pop
and
inc
out
fisubl
lods
dec
fnstcw
adc
fs
xor
mov
cwtl
xchg
ret
cs
test
jge
xchg
popa
adc
shll
xchg
jns
movsl
mov
xchg
jmp
mov
rolb
mov
rorb
cltd
loope
xchg
mov
dec
mov
adc
pop
js
pop
push
mov
outsb
int3
sti
xor
cltd
insl
xor
or
sbb
clc
xchg
xchg
mov
inc
cmp
push
jmp
dec
mov
or
outsl
aad
xchg
fisubrl
dec
dec
xchg
xchg
test
and
fs
push
dec
fdiv
scas
lret
cltd
ret
loopne
in
push
add
xchg
sar
aam
jns
push
mov
rolb
and
sbb
push
cltd
push
push
adc
cmp
insl
xor
xchg
and
insl
mov
je
popf
jl
ja
push
sbb
lds
jge
popl
sbb
jg
xchg
pop
mov
ljmp
xor
cmpsb
adc
call
scas
add
xchg
sub
call
lcall
adc
mov
sbb
pusha
xchg
xchg
xchg
mov
sub
mov
mov
xor
jl
scas
sahf
jb
or
xorl
sub
sti
outsl
xor
test
stos
sbb
xchg
out
nop
cs
in
mov
pop
lahf
test
push
nop
mov
push
and
inc
jmp
insl
test
popf
subb
adc
pop
push
cwtl
jp
addb
fbld
sbb
adc
xlat
movb
xlat
pop
pop
fildl
xor
dec
stos
out
mov
pushf
pop
aaa
sbb
in
negl
not
pop
fistl
sbb
repz
cli
mulb
lret
nop
jbe
cmp
xor
mov
and
push
xor
cmp
mov
jp
sbb
xchg
pop
mov
data16
sbb
push
imul
pop
add
mov
sbb
xchg
movsb
pop
ss
mov
cmp
pop
sbb
mov
or
lret
add
in
mov
and
pop
push
inc
lds
adc
mov
lcall
and
mov
mov
les
rcll
hlt
sub
mov
dec
test
fldl
fstps
scas
dec
test
xchg
sbb
inc
sbb
scas
cmp
jl
call
notl
mov
xchg
aad
cld
lret
out
mov
div
gs
aas
lret
mov
std
xchg
loope
adc
jp
imul
int3
orl
pop
xchg
mov
jae
repnz
mov
jl
ss
int3
sub
mov
cmpb
push
or
mov
push
into
jp
push
pop
cmc
mov
jbe
fcmovne
mov
inc
mov
cmp
pushf
mov
mov
jae
push
push
xchg
adc
xchg
cwtl
cmpsb
mov
jb
lea
mov
push
jp
pop
les
push
adcl
mov
repnz
nop
les
repnz
or
add
mov
movsb
sub
fwait
mov
movsl
mov
pushf
jo
sbb
in
test
pop
ret
pop
mov
dec
sbb
aad
int
adc
jne
loopne
cwtl
mov
push
jns
fidivs
pusha
test
loop
xchg
mov
nop
push
mulb
hlt
sbb
xor
loopne
mov
adc
test
sti
or
test
sbb
mov
cmpsb
dec
and
lahf
mov
mov
leave
adc
dec
nop
dec
dec
hlt
hlt
out
mov
adc
pop
push
mov
shlb
mov
cli
push
pop
movsb
adc
or
adc
movsb
cmc
out
push
ss
ret
andl
jp,pt
cmpsb
push
lds
nop
repz
mov
dec
jp
ja
out
loopne
mov
jp
sbb
or
les
insb
pop
cld
push
insl
sbb
enter
lds
xchg
add
inc
fst
xchg
sti
outsb
sbb
in
dec
jge
outsb
int
mov
mov
cmpsb
inc
jp
leave
inc
xor
adc
or
iret
imul
cmp
lcall
sbb
pop
lds
inc
leave
xchg
and
es
outsl
pop
outsb
rcrl
insb
in
daa
mov
shr
sub
into
adc
pop
or
mov
shlb
adc
adc
repnz
inc
push
xchg
sub
ja
out
loopne
jae
xchg
or
push
pusha
mov
mov
jle
lods
push
jle
or
jbe
out
xchg
testb
pop
into
cmp
pop
sahf
xchg
and
push
mov
mov
mov
pop
mov
xchg
insb
push
xchg
lods
pop
mov
jns
roll
pop
std
pop
cwtl
ret
or
xchg
and
jns
mov
xchg
sub
test
add
mov
ljmp
push
popa
push
jmp
out
xchg
add
cmp
push
jnp
pop
and
xchg
es
test
fidivrl
mov
jp
jl
pusha
fcoml
jge
notb
ret
push
out
hlt
adc
push
out
pop
aad
mov
cmp
sbb
mov
xchg
sbb
adc
int3
xchg
or
adc
pop
cltd
xchg
fsts
push
xchg
sbb
pushf
push
pop
jne
xchg
ficoms
cwtl
aas
clc
inc
int3
xchg
test
testb
cmc
data16
clc
push
jo
cmpsb
aad
adcl
clc
sbb
push
ds
xor
mov
xor
adc
mov
cmp
inc
push
or
movsb
nop
sbb
mov
std
jae
ljmp
inc
adcb
push
hlt
xchg
add
push
xchg
mov
push
shrb
ss
int3
add
jne
sub
mov
cmp
loope
stos
mov
movsb
jo
loopne
add
lea
test
cmp
lea
mov
push
repz
cmp
adc
std
repnz
inc
cwtl
add
je
das
idivb
pop
mov
mov
outsb
mov
nop
dec
dec
fcomps
sbb
je
nop
aam
and
push
incb
push
mov
das
sub
pusha
pushf
es
xorb
adc
mov
loop
hlt
xchg
pop
cltd
negb
loopne
push
stos
mov
imul
and
pop
popa
xchg
sahf
ljmp
pusha
je
outsb
sub
xor
jno
into
lcall
aam
jnp
adc
push
mov
shll
and
sbb
xchg
mov
cwtl
dec
push
mov
mov
loop
dec
jb
mov
xchg
sbb
fistps
pop
pop
fistl
out
lock
jns
jo
icebp
xchg
xchg
loop
sahf
adc
lret
fdivl
popf
testb
dec
cmpsb
adc
icebp
add
push
clc
cmpsl
mov
mov
fdivrs
push
sbb
or
xchg
loope
jns
cltd
repz
jns
test
nop
lock
enter
jl
sbb
and
or
pop
andl
in
daa
sub
xchg
shll
mov
jp
fsubrs
jp
pop
mov
xlat
add
rclb
cld
test
movsb
negl
test
cld
sub
adc
rclb
adc
into
xchg
daa
jbe
sbb
inc
xchg
clc
mov
sub
roll
sbb
int3
out
jne
bnd
aad
test
mov
and
data16
sub
into
loope
popf
sbb
jo
popa
cwtl
mov
mov
test
xor
sahf
call
or
cmp
jae
xchg
ja
xchg
in
push
test
pop
or
gs
je
xchg
add
fadds
rclb
loopne
mov
pop
mov
insb
adc
mov
cmp
jecxz
mov
sbb
xchg
jle
cmc
sbb
jne
jo
testl
dec
movsl
mov
mov
xchg
je
iret
and
sbb
jnp
push
pop
popf
sahf
push
jl
mov
xchg
push
scas
mull
pop
mov
into
addl
sbb
je
repnz
std
and
xchg
push
insl
adc
loop
mov
xchg
mov
data16
adc
pushf
push
fbstp
idivl
cmpsb
or
adc
and
push
push
mov
addb
cmpsb
std
dec
insl
mov
xchg
ljmp
insb
cmp
shrb
xchg
or
leave
pop
xor
cwtl
std
sbb
mov
push
or
lock
out
nop
inc
in
and
std
lods
addr16
mov
add
nop
or
paddq
jmp
pushf
pop
push
aad
or
stc
sbb
insb
adc
ljmp
or
mov
outsb
fscale
mov
or
scas
jae
xchg
test
ljmp
mov
fwait
cmp
js
jne
addb
int3
cmc
mov
and
orb
mov
scas
push
cmpsb
adc
fs
sahf
repnz
mov
sbb
test
test
into
rdmsr
stc
sbb
jmp
ljmp
iret
test
jo
fcmovbe
xlat
jb
push
mov
stos
mov
adc
xchg
fwait
shlb
cld
xchg
push
jge
mov
sub
in
pushl
push
addb
jnp
mov
sub
ja
push
outsl
push
lock
xchg
ficoml
cmpsb
lea
icebp
or
mov
inc
adcl
cmp
roll
inc
out
or
call
outsb
lea
or
stc
or
lret
pop
mov
xchg
roll
out
jo
push
cmpsb
loop
cmp
cmp
jmp
cmp
inc
lret
jl
add
in
and
or
add
push
push
sti
lret
add
mov
rcrb
mov
jge
sbb
mov
and
mov
int3
ljmp
mov
loop
push
gs
mov
pushf
xchg
fistl
push
mov
add
ss
cmp
fwait
dec
stos
xchg
test
lds
dec
movl
std
dec
pop
cmp
data16
push
adc
fwait
pop
xor
pop
lds
out
jo
ficoml
mov
icebp
rcrb
lret
adc
jns
jmp
xchg
mov
sbb
xchg
sti
mov
ds
xchg
xchg
xchg
testb
cld
or
and
outsl
dec
mov
add
or
aad
ds
mov
stc
mov
test
adc
xchg
mov
inc
rcrl
test
sub
sbb
mov
jecxz
nop
and
adc
mov
lea
mov
mov
jns
jo
jno
cmpsb
pop
fwait
enter
and
cltd
pop
in
dec
and
mov
loopne
xchg
add
and
outsb
out
les
mov
std
mov
jecxz
mov
in
sub
lahf
sbb
push
xlat
push
fldl
mov
imul
divb
call
mov
addl
loop
inc
xchg
push
xchg
std
orb
inc
dec
adcl
mov
js
inc
popf
aam
iret
enter
pop
pop
lods
inc
lcall
cs
aad
jo
mov
mov
xadd
scas
pop
push
nop
in
test
inc
push
scas
testb
cmp
mov
popf
jo
mov
pop
fstps
xor
sbb
fmuls
mov
cmp
int3
in
push
mov
movsl
aam
mov
mov
inc
jbe
adc
movb
cli
aam
xchg
nop
jp
or
inc
jmp
cmpl
or
sbb
xchg
xor
mov
push
cli
push
add
leave
xchg
repnz
dec
aad
enter
dec
sarb
pop
xchg
mov
mov
mov
push
push
loopne
inc
jns
xchg
outsb
sarl
adc
ja
out
call
pop
mov
stc
xchg
adc
sahf
aad
cmp
pop
jno
ficomps
lock
push
scas
jae
pop
jns
push
jl
mov
xor
div
xchg
xchg
pop
jnp
mov
sbb
pop
out
or
call
popl
xchg
push
inc
dec
sbb
xchg
ret
adc
mov
loope
jne
mov
repz
xorb
rclb
scas
push
mov
mov
sub
mov
loopne
xchg
into
xchg
std
jge
fcompl
popa
loop
cmpsb
xor
inc
sbb
jl
and
xor
aad
cmp
hlt
ja
or
push
add
or
xchg
push
push
jmp
xchg
push
xchg
scas
and
pop
fisttpl
inc
shr
loope
adc
lods
inc
fimull
dec
and
adc
xor
mov
xchg
lods
in
dec
fadds
lock
xchg
cmpsb
xchg
shrl
aad
cwtl
lcall
xchg
adc
and
push
xor
iret
mov
jnp
into
cwtl
sbb
enter
jns
bound
cmpsl
mov
sub
fcomp
xchg
cmpsb
lret
jae
call
cmp
cs
mov
pop
cld
stos
scas
mov
cltd
or
cli
fcomps
aad
or
mov
mov
add
inc
gs
xor
mov
pop
sub
cmc
ds
mov
dec
repz
sbb
test
push
inc
repnz
addr16
pop
push
or
mov
push
adc
shlb
lret
cmc
mov
test
outsb
leave
aad
rclb
mov
jle
out
cmp
ja
fsub
or
sub
push
ja
mov
adc
and
xchg
xchg
movsb
pop
aam
cmp
cmpsb
xchg
or
movsb
or
sbb
jne
xchg
nop
mov
test
jmp
setbe
test
xchg
xlat
push
jns
aam
imul
out
push
add
fistl
add
or
jl
test
push
mov
ret
cmpsb
or
jg
ffree
mov
outsb
xchg
cld
icebp
mov
jns
mov
js
cs
cli
divb
shl
or
inc
jp
push
jo
or
jns
sbb
xchg
mov
daa
cwtl
leave
pop
jns
lods
push
fsts
pop
sub
mov
inc
mov
stc
xor
mov
dec
jl
mov
xchg
sbb
out
cmp
out
add
idivb
fnsave
popa
cwtl
ljmp
in
icebp
jge
scas
xchg
pop
aad
lds
or
loop
pop
in
lret
push
mov
notl
push
add
add
push
fdivrl
lock
ds
cli
mov
pop
pushf
adc
or
cltd
adc
clc
sbb
test
rol
push
iret
jae
add
pop
test
lea
test
mov
mov
mov
jns
fidivl
xchg
test
xor
xchg
pop
xorb
mov
or
adcl
int
cld
lret
or
or
cmp
sbb
jmp
aaa
push
push
mov
cltd
adc
adc
andb
popf
mov
or
adc
adc
pop
cmp
and
repz
lock
add
xchg
outsb
loopne
push
pusha
xchg
decl
mov
movsb
xlat
or
sarl
adc
push
jl
jns
adc
xchg
mov
ret
test
dec
push
push
inc
test
addr16
sub
jne
in
push
test
jle
and
xchg
das
jecxz
add
mov
test
pop
cwtl
call
sbb
call
stos
lret
add
mov
xchg
mov
pusha
mov
or
rol
push
mov
repz
pop
std
in
decl
push
pushf
and
and
add
xchg
pop
rcll
lret
mov
fwait
xchg
iret
adc
xchg
scas
mov
cmp
cmp
test
cmpsb
or
fsts
or
inc
inc
mov
arpl
subb
mov
adcl
xor
xchg
dec
dec
jae
test
jp
cwtl
push
adc
ficoms
mov
clc
fimull
xchg
addr16
les
cwtl
push
dec
xchg
xchg
rcl
and
sahf
mov
mov
mov
xchg
enter
mov
push
jo
mov
xlat
pop
jno
clc
mov
xchg
shll
xchg
adcl
pop
mov
hlt
xchg
mov
cmpsb
call
add
pop
loopne
ret
mov
cmp
mov
jge
jne
push
ret
mov
xchg
test
add
and
hlt
adc
cmp
xchg
inc
fwait
mov
mov
test
mov
pop
jg
jp
mov
mov
lret
fmuls
xchg
jns
xchg
imul
sarl
push
mov
into
push
dec
rol
iret
mov
adc
dec
fmull
aaa
inc
sub
and
dec
ljmp
dec
das
test
rclb
ss
rcl
fstpl
xchg
je
shl
adc
aaa
lahf
jl
imul
xchg
xor
fdivs
mov
ss
loop
pop
pop
xchg
push
outsl
cwtl
xor
inc
dec
mov
mov
sahf
sub
jle
jo
lds
test
popa
stc
aam
and
sahf
movsb
aaa
mov
mov
pop
pop
addl
iret
pop
xor
into
fcmovu
fwait
pop
cmpsb
fdivrl
pop
mov
mov
setae
lock
or
push
xchg
pusha
jl
dec
jp
sub
jno
dec
pop
pushf
sbb
std
subb
xchg
xchg
xchg
or
push
xchg
push
subb
sar
jecxz
int
cltd
and
mov
adc
lock
nop
adc
orl
movsl
mov
xchg
outsb
imul
mov
setle
pop
mov
mov
mov
xor
fisubl
test
sbb
addl
cwtl
cmp
mov
outsl
fimuls
pop
mov
pop
mov
rclb
mov
insl
mov
mov
push
sbb
fcmovb
rcrb
mov
jge
imul
cli
pop
dec
xchg
pushf
int
inc
ret
xchg
test
int
mov
mov
sahf
or
test
hlt
out
xchg
stos
dec
fcom
arpl
lods
popf
into
pusha
rolb
cmp
inc
rcrb
push
cmp
xchg
aas
pop
aad
mov
jmp
inc
fnstcw
push
es
pop
pop
jge
stc
mov
imul
dec
lods
inc
lahf
test
repnz
mov
daa
iret
or
jno
jo
jl
pop
and
lcall
ja
or
xchg
xchg
or
ret
cs
xchg
sbb
xchg
xchg
push
mov
xchg
sbb
fcmovu
sbb
and
jbe
iret
ss
ljmp
jle
adcl
jno
pop
pop
imulb
pushf
adc
nop
push
pop
adc
sbb
push
enter
lahf
dec
fldenv
in
fists
jns
xchg
stos
ret
ficompl
and
inc
xchg
adc
in
push
dec
fsubrs
push
clc
movl
addr16
mov
cmc
push
push
jecxz
push
adcl
dec
cmp
and
test
dec
test
test
test
adc
mov
cli
call
les
call
push
push
js
clc
mov
popa
clc
pushf
popf
fcmovbe
in
iret
call
mov
int3
or
aam
rorb
xchg
xchg
stos
leave
clc
sarb
push
shl
cmpsb
aas
inc
aad
dec
pop
scas
ret
push
cmc
sub
inc
int
or
add
inc
or
sbb
sbb
pop
movsl
xchg
ljmp
popa
mov
mov
imul
data16
jb
call
mov
adc
jp
or
adc
fs
xchg
pop
sbb
jne
out
xchg
mov
shlb
mov
fs
push
ret
xor
adc
xchg
out
xorb
dec
test
mov
loopne
imulb
clc
shrb
mov
cmp
lret
mov
inc
cli
fisubl
shlb
fiaddl
mov
adc
les
imull
xor
shll
xchg
repnz
xchg
mov
jp
sbb
cmc
mov
shr
not
pop
icebp
sbb
cmpsb
push
fiadds
stc
int3
push
enter
aad
push
mov
dec
test
push
jbe
addb
sbb
lock
cmp
xor
pushf
ss
scas
mov
push
sub
aad
push
mov
jg
or
jecxz
dec
test
and
adc
adc
nop
ds
cld
cld
jle
js
mov
fcoml
notb
adc
fstpt
xchg
ret
sub
cmp
popf
mov
add
idivb
xchg
mov
mov
push
mov
dec
mov
xor
js
enter
fmull
mov
rolb
jmp
or
jp
movsb
and
insb
adc
sub
fsub
or
mov
icebp
rorb
lea
scas
pop
fcom
or
inc
xchg
lret
fmuls
xlat
rol
cmp
gs
push
movsl
inc
xchg
es
fidivrl
ljmp
jg
hlt
hlt
push
sbb
inc
fistpl
je
xchg
aad
sbbb
mov
sbb
es
xor
lcall
fwait
cli
aas
repnz
les
mov
cltd
push
mov
sbb
fcmovnbe
mov
in
pop
ds
cmc
sub
pop
mov
rolb
pop
sbb
jae
loop
add
fistl
push
jp
movdqu
enter
std
xchg
lahf
fstpt
pushf
and
add
and
out
out
add
into
add
mov
pop
test
adc
lret
add
negb
aaa
fstpt
adcl
push
mov
movsb
test
sub
add
outsl
pusha
outsb
sti
pop
cmc
mov
pop
pusha
mov
fdivl
andl
mov
testb
xchg
outsl
ret
inc
inc
mov
xchg
es
cmp
pusha
fistpl
push
adc
and
pop
jae
lret
icebp
jmp
dec
aad
or
std
outsl
sbb
pop
xchg
adc
fsubrs
clc
and
sbb
outsl
dec
cmp
call
fcoms
push
cmp
add
stc
pop
adc
ljmp
loopne
sub
in
test
xor
xchg
repz
mov
repz
xlat
sbb
mov
sub
push
fcmovnbe
scas
insl
pushf
idivl
mov
mov
lret
pop
pusha
cmp
xchg
cmp
mov
stc
bnd
inc
sbb
push
cmp
xor
hlt
push
mov
add
std
inc
lock
sbb
fcomps
add
fsubl
and
fisubrs
pop
jno
loope
push
and
jg
iret
mov
icebp
xor
rol
xchg
into
dec
fsubs
push
cli
adc
cltd
loopne
loope
cmc
jno
les
test
leave
mov
push
mov
movb
pop
xlat
mov
repnz
jge
mov
mov
popf
ffreep
fwait
addl
cmp
jp
xchg
push
jb
cld
cmpl
dec
and
jno
jae
mov
mov
pushf
jp
jno
int
jno
cltd
jo
loopne
mov
inc
enter
pusha
subb
lock
sahf
out
in
cmp
pusha
lret
or
mov
mov
adcl
lock
push
cmpsb
push
loope
adc
fs
xchg
pop
cmp
or
lods
dec
jl
inc
loopne
add
mov
sbb
lahf
test
call
test
scas
loope
stc
js
and
inc
xlat
jecxz
mov
xor
pop
pop
push
xchg
ja
jmp
xchg
pusha
mov
addb
pop
pop
call
lods
sarl
mov
outsl
aaa
sbb
push
or
nop
jp
or
clc
mov
add
jg
dec
xchg
mov
or
push
sbb
aas
sbb
mov
dec
orl
pop
xor
pop
cltd
ret
inc
hlt
fs
mov
adc
push
xchg
notb
jo
mov
jl
mov
cmpsb
ret
ret
xchg
push
cmp
or
test
ret
jbe
mov
int3
into
cmp
jp
cld
mov
pusha
and
adc
and
push
rcr
cmp
cltd
out
in
xchg
sub
or
or
sbb
cmp
adc
lock
imul
neg
es
stos
enter
push
add
lcall
enter
nop
pop
rorl
xchg
xor
loopne
adc
adc
jbe
push
jno
scas
xchg
mov
dec
mov
cmc
pop
dec
shll
jae
lods
movsb
adc
ss
and
daa
jo
mov
pop
add
aaa
jmp
push
mov
push
inc
test
leave
fidivl
mov
dec
mov
inc
test
lods
leave
repnz
orl
xchg
xchg
aaa
aad
cmc
push
test
push
mov
insl
mov
xchg
add
adc
mov
test
lods
out
add
fimuls
mov
clc
mov
fdivr
mov
cmpsl
xchg
mov
in
scas
loop
add
mov
inc
jge
icebp
mov
rorb
xchg
mov
push
scas
adc
or
xchg
dec
fnstenv
mov
jae
sahf
sbb
pop
push
and
leave
icebp
xchg
mov
sahf
or
mov
imul
xor
mov
int3
xlat
mov
sti
test
jmp
mov
sti
pop
in
or
sbb
push
sbb
jmp
or
pop
or
les
movsb
inc
or
xchg
or
test
test
enter
sub
adc
ja
inc
es
mov
lods
mov
loopne
xor
xchg
xchg
fs
call
out
sbb
into
push
cltd
nop
push
xchg
leave
loop
sbb
out
mov
movsb
mov
sbb
adc
mov
push
jge
adc
popa
add
vunpckhps
mov
daa
cwtl
inc
mov
jns
cmp
xlat
jmp
push
push
ljmp
js
ljmp
in
adc
test
mov
fistps
nop
rolb
push
jge
xchg
mov
inc
inc
fmuls
mov
fdivs
jno
aam
cmpsb
or
sbb
xchg
sbb
mov
cltd
and
lods
or
and
push
xchg
jae
dec
push
push
adc
xchg
cmpsb
cwtl
imul
and
xchg
fbstp
jno
mov
or
or
dec
xchg
xchg
in
adc
mov
adc
ret
jmp
lcall
mul
pop
adc
push
mov
into
mov
mov
jp
adc
jae
neg
push
xchg
inc
shl
adc
stos
hlt
aam
jecxz
push
es
scas
in
cmc
cwtl
dec
fadds
pop
jno
test
cmpsb
mov
cmpsb
jb
orb
xchg
pop
stos
push
xor
test
in
fsubrs
mov
imul
dec
dec
xchg
mov
andl
cltd
out
fisttps
add
sub
sbb
mov
rcrl
aad
in
cwtl
and
out
fsubrl
jo
stc
pop
and
or
or
sub
into
push
clc
aaa
js
xchg
push
pop
inc
out
jp
clc
lcall
inc
mov
xchg
test
negb
repnz
inc
test
out
jmp
loopne
xchg
push
stc
xchg
mov
mov
cwtl
xchg
loopne
fadd
js
push
stc
push
dec
xchg
xchg
das
xor
lods
loop
test
mov
sarb
mov
mov
notl
int
sbb
js
lea
xchg
nop
xchg
cltd
cmpsb
add
nop
int
mov
in
cs
mov
lea
mul
cs
fcompl
pop
jg
das
in
pop
mov
cmpsl
in
add
iret
push
nop
pop
mov
jbe
dec
scas
cmc
add
push
and
xor
mov
adc
xchg
mov
imul
cmpsl
mov
sahf
inc
sbb
pop
mov
loopne
jns
xchg
xchg
ja
jmp
out
movsb
sbb
dec
cmp
mov
cmpsb
data16
sbb
orl
mov
repnz
jmp
pop
mov
push
mov
xchg
clc
xorb
popl
std
cmp
sarb
sub
mov
hlt
and
jno
pushf
outsb
js
adc
sar
mov
mov
pop
pop
and
xor
stc
xchg
pop
call
xchg
inc
pop
push
and
ss
out
clc
mov
in
mov
mov
mov
sub
cmc
jp
cmpl
scas
cmpsb
test
xchg
test
notl
pusha
mov
mov
aad
pushf
mov
clc
mov
mov
out
jo
mov
in
hlt
test
mov
clc
neg
and
push
add
sbb
loop
loopne
adc
add
in
mov
push
pop
ss
movsb
xchg
cmp
cmp
xchg
pop
push
decl
js
push
add
out
pusha
lret
fmull
xchg
sub
xchg
jne
mov
scas
inc
js
adc
out
enter
mov
sub
sti
cmp
iret
push
xchg
mov
scas
jnp
out
pushf
pop
loope
pop
mov
ljmp
xor
mov
xor
push
mov
leave
out
cs
repnz
adc
pop
inc
pop
clc
ficomps
test
mov
inc
fwait
movsl
sub
push
and
add
shll
adc
push
mov
std
nop
cli
cmpsl
cmpsb
std
xchg
fcoms
and
pop
pushf
test
mov
mov
sbbl
mov
fidivl
push
repnz
or
scas
jb
mov
mov
lods
push
enter
mov
call
adc
push
jl
add
andl
or
adc
jp
in
hlt
xchg
adc
push
enter
orl
mov
jae
hlt
lret
lret
cltd
sbb
xchg
mov
mov
loope
mov
cmc
xchg
call
call
xchg
clc
mov
mov
pop
xchg
shl
in
pushf
or
cmc
scas
mov
mov
andl
cmpsb
rorb
jp
mov
push
loop
stos
push
fidivs
mov
rol
xchg
mov
push
in
mov
rol
xorb
mov
xchg
mov
mov
rcl
xchg
mov
ror
mov
mov
push
enter
fiadds
add
call
call
call
call
call
call
iret
inc
push
push
xor
adc
sbb
dec
into
insb
ds
add
sbb
push
pop
push
adc
gs
cmpsb
lret
fisttpll
add
mov
push
or
or
push
loopne
test
adc
ret
xchg
jecxz
or
xlat
jns
or
adc
out
sti
jb
xchg
mov
mov
cwtl
push
adc
xchg
push
xchg
lahf
pop
push
enter
lret
insl
mov
fcoms
ja
rcr
jns
or
xchg
add
clc
push
mov
adc
push
mov
and
add
arpl
data16
scas
movsb
adc
cmp
in
xchg
xchg
pop
add
sbb
mov
cmpsb
loop
dec
aam
adc
data16
sub
mov
jecxz
adc
xor
and
test
popa
call
push
in
sub
inc
mov
int3
mov
cld
mov
int3
ja
js
jle
push
push
lret
push
fsts
or
fnstenv
jle,pn
div
jl
jmp
xchg
arpl
sahf
cwtl
adc
xchg
jp
nop
mov
cmp
loopne
xchg
icebp
in
aaa
adc
inc
addr16
shrl
sbb
out
mov
pop
icebp
pop
lods
cltd
mov
enter
fiaddl
mov
xchg
mul
add
popa
repnz
jle
lock
popf
jp
hlt
jp
pop
sub
jle
cmp
idivb
bound
call
nop
xor
mov
lods
xor
xchg
push
xchg
nop
mov
out
test
push
cld
cmp
mov
leave
pop
mov
ret
jmp
ret
pop
rorb
rolb
mov
mov
or
adc
mov
andb
xchg
push
cmp
cmpsb
fnstsw
pop
mov
lods
testb
fsts
pop
mov
xchg
mov
in
push
pop
xchg
icebp
adc
fimull
outsb
inc
adc
fsubs
nop
pop
jb
pop
cmc
es
xchg
mov
pop
xchg
pop
cmpsl
into
jns
xchg
jnp
mov
xchg
or
fsubrs
jg
pop
nop
mov
cltd
mov
or
cs
mov
add
inc
in
or
aam
jne
nop
mov
jp
rol
jns
in
or
mov
xlat
or
imul
push
jle
stc
cmp
das
jns
or
xchg
leave
or
or
xor
sub
push
call
test
scas
mov
mov
in
mov
dec
test
scas
fstpt
sahf
fdivr
sti
pop
sbb
cmp
rol
cmp
pop
sbb
and
push
cltd
mov
xchg
sahf
cmpsb
fidivrl
movsb
jbe
jmp
sbb
stos
test
out
push
sub
dec
and
loop
sahf
jg
daa
scas
out
mov
push
nop
sbb
add
xchg
repnz
ret
xchg
pop
ss
stos
arpl
dec
mov
or
mov
mov
or
xchg
sarb
push
jae
test
xor
stos
in
loopne
xor
ljmp
aam
cwtl
jae
cltd
xchg
test
mov
ret
movsl
pop
fdiv
ss
shll
sbb
jmp
pushf
popf
add
repnz
push
out
dec
push
sub
cld
mov
jb
mov
push
cmpsl
jo
shl
sub
inc
jp
outsb
orl
roll
stc
mov
clc
clc
push
xorl
xchg
lock
insl
call
sbb
scas
push
xchg
call
jle
fdivr
push
or
push
test
or
xchg
and
repz
xchg
movsb
push
xchg
aam
cmp
mov
xchg
inc
xlat
stc
mov
push
call
xchg
les
pop
xchg
pushf
xlat
jns
pusha
fdivr
data16
notb
xchg
or
rorb
xchg
xlat
stos
scas
push
movsb
xchg
pop
xlat
stc
xchg
or
xchg
pushf
adc
xchg
andl
nop
adc
das
or
jns
das
mov
pop
pusha
loopne
mov
stc
out
xchg
addr16
and
outsl
mov
arpl
dec
xchg
cli
call
add
pop
xchg
inc
lods
push
xchg
xorb
jae
arpl
xchg
jae
xchg
imul
fs
or
testl
add
mov
xchg
and
clc
sbb
negb
mov
jns
cs
mov
popa
xchg
xchg
xchg
repnz
cli
notb
mov
stc
idivb
insb
xchg
adc
mov
imul
jecxz
adc
adc
es
sub
xchg
mov
dec
pop
fstl
fcoms
inc
leave
push
sub
sub
lods
mov
in
sub
jmp
hlt
cmp
xchg
mov
fcoml
xchg
into
mov
repz
fdivl
push
jp
cwtl
les
push
jle
xchg
xchg
lock
pusha
nop
xchg
jbe
mov
mov
in
rcrb
pop
push
inc
xchg
shlb
loop
iret
xchg
push
mov
pop
cmp
pusha
pusha
adc
jmp
sub
add
jl
jle
sti
cmpb
adc
xchg
xor
dec
xchg
outsl
int3
call
pop
jge
or
jle
stos
lods
jbe
test
cli
movsl
addr16
out
call
jns
call
call
push
pop
adc
cli
xor
test
test
pushf
or
cli
mov
test
push
rcrb
or
scas
pop
stc
fldt
mov
ja
mov
push
loop
jbe
fs
call
out
mov
inc
jmp
loope
out
or
dec
jo
pop
pushf
loop
imul
dec
call
loop
mov
jl
rcll
shrl
xchg
jae
jecxz
fmuls
cmp
frstor
enter
lea
push
sub
mov
imul
xchg
outsb
dec
xor
xchg
test
lcall
xchg
cmpsb
pop
and
push
cmp
test
push
cmp
roll
push
jp
mov
mov
inc
nop
fnstsw
rorb
dec
pop
leave
push
pop
adc
sarb
clc
xor
stc
out
mov
pop
into
lods
movsl
in
enter
cmc
jmp
call
test
into
pop
jb
xchg
or
jle
or
mov
icebp
jo
mov
xor
sahf
movsb
clc
add
ss
enter
sub
popf
insl
jns
jo
jecxz
xor
fdiv
sub
add
cld
not
pusha
out
adc
nop
and
mov
mov
cmpsb
mov
xchg
cltd
cltd
ficompl
pop
bound
or
outsl
add
xchg
sahf
pop
jg
cmp
add
fstl
loopne
idiv
jmp
adc
xor
sub
sbb
jbe
sbb
es
mov
stos
mov
fdivs
mov
stos
outsl
clc
xor
cmp
jmp
sbbb
mov
lahf
js
nop
pop
orb
adc
out
xor
arpl
fsubr
and
xchg
or
mov
sub
loop
fcoms
rolb
jns
loopne
stc
mov
orl
mov
push
fdivrs
or
enter
xchg
stos
loopne
mov
fdiv
xchg
and
mov
pop
nop
fdivl
notl
insb
sbb
sub
std
mov
dec
insb
mov
mov
aas
mov
gs
les
pop
lods
orb
clc
cwtl
xchg
mov
gs
pop
jl
push
adcb
mov
mov
push
push
lea
mov
cwtl
jae
icebp
jne
sub
adc
mov
into
jo
pop
and
lods
xchg
sbb
mov
divb
jno
adc
arpl
sbb
clc
cmpsb
or
cmpsl
jns
add
mov
jbe
ljmp
dec
out
xchg
adc
rcll
pushf
jo
cmp
lret
stos
insl
dec
xor
cmp
xlat
and
sbb
add
pop
out
adc
mov
cwtl
cmp
mov
out
push
in
sbb
or
adc
aam
pop
jnp
aaa
pusha
cmp
int3
mov
cmc
nop
repnz
mov
mov
scas
movsl
pop
mov
loopne
hlt
xchg
push
test
fcos
cmp
adc
jmp
repz
outsl
and
repnz
lahf
jp
jne
lret
stos
pop
in
fiaddl
sahf
repz
stos
pop
adc
pop
sbb
cmpb
and
loop
mov
sahf
aad
adc
cmpsb
adc
xchg
push
adc
cli
mov
xchg
sbb
inc
fsubl
add
push
add
lret
push
ja
dec
pop
incb
xchg
push
push
pop
js
adc
std
mov
mov
jns
cmc
dec
adc
mov
lret
rcr
add
lds
lcall
cmpsl
jne
jno
xchg
mov
fadd
push
es
movsb
outsl
loopne
orl
dec
and
fidivl
xor
js
pusha
inc
dec
cwtl
icebp
xchg
and
cmc
enter
jno
add
pop
fwait
nop
popa
adc
cmpsb
movsl
cli
clc
jmp
mov
pusha
adc
push
stos
xchg
js
sbb
xchg
pop
mov
in
and
popf
or
lods
clc
and
adc
out
adc
testb
mov
cwtl
lds
loopne
sahf
cmp
xchg
push
into
fsub
sbb
cmpsb
mull
lret
stos
bound
lods
dec
push
lahf
stc
int3
leave
hlt
cltd
int3
mov
cs
nop
iret
adc
push
stc
shr
movsb
or
jns
adc
cmpsb
stos
xlat
and
or
sbb
xchg
fs
jbe
aad
stos
xorb
jecxz
in
fldenv
les
xlat
sahf
nop
fistps
ret
mov
jg
or
cli
hlt
mov
lods
aas
popf
enter
or
push
lret
jno
outsb
mov
imul
push
mov
and
push
and
decb
mov
mov
sub
jle
neg
mov
inc
jmp
mov
or
movsb
push
xchg
fwait
adc
jmp
stc
mov
rcll
imul
xchg
mov
pop
jno
xchg
sbb
lds
xchg
jl
cli
adc
adc
xchg
cmpsb
sbb
adc
call
xchg
adc
andb
bound
mov
push
and
xchg
shll
ljmp
ret
push
pusha
xchg
pop
fimull
adc
fwait
idivl
pop
jnp
xchg
xchg
inc
addr16
insl
nop
xchg
jae
clc
rcrb
jmp
cmpsb
lret
in
xor
xorl
xchg
mov
xchg
ret
stc
pop
outsl
push
mov
xchg
or
pop
adc
add
ficoml
jo
xchg
push
mov
cmc
jae
out
dec
in
cmpb
fidivrl
sahf
fcmove
addb
lock
aaa
out
and
adc
add
mov
lret
lock
and
testb
repnz
mov
ret
stc
lock
add
push
and
mov
jb
cmp
add
cmc
iret
popa
jae
and
scas
sub
fs
outsl
mov
inc
sub
lock
in
loope
jno
or
shrb
sbb
test
sti
xor
inc
xchg
jo
pushf
cs
enter
sub
inc
outsb
test
fidivl
scas
pop
aad
jl
xchg
mov
inc
xchg
orl
shr
cmpsb
cmpsl
inc
xchg
outsl
mov
xchg
cmc
cmpb
cmp
lea
aam
mov
test
je
mov
jle
and
mov
xor
pop
sar
mov
clc
add
sarl
xor
test
jecxz
push
mov
adc
and
pop
jnp
loopne
sbb
dec
cmpsb
and
cld
and
test
cwtl
push
push
xor
mov
outsb
jp
cmpsb
push
repnz
xchg
test
cmpsb
or
aad
xchg
cmpsb
adc
mov
fildl
mov
pop
aas
mov
popf
nop
jmp
sub
xchg
dec
cs
sub
adc
cltd
xchg
fmuls
jp
mov
iret
notl
mov
cmpsb
push
insl
mov
jl
jae
cmpsl
jge
cwtl
adc
cld
xchg
xor
sub
cmp
dec
sub
adc
pop
aad
scas
adc
int3
jecxz
std
fildll
or
or
or
or
lret
sbb
sub
xchg
adc
test
push
mov
mov
mov
andl
rcrb
scas
repnz
push
and
idivb
into
xchg
stos
push
bnd
adc
enter
es
fdivrs
lods
fadds
out
aaa
lods
outsl
jne
shl
add
mov
dec
mov
pop
mov
and
or
xchg
mov
xor
sub
mov
xor
in
sbb
mov
scas
outsl
mov
mov
scas
mov
pop
or
push
inc
xchg
lret
enter
hlt
lds
and
push
daa
aas
cmp
pop
dec
test
push
test
mov
dec
sbb
jo
pop
dec
or
jle
mov
adc
jno
lea
fcoms
mov
icebp
pop
clc
shrb
mov
cwtl
out
push
aad
clc
ss
movsb
adc
mov
std
push
cmpsb
dec
xchg
lret
out
pusha
push
rcll
roll
cmp
cs
pop
shll
pop
mov
inc
mov
add
mov
cmpsb
fisttps
cmc
fmull
adc
sub
ret
jno
push
outsb
xchg
not
cmp
cmpb
out
push
jecxz
push
push
or
arpl
or
xchg
shr
dec
cmp
stc
push
add
addr16
and
rolb
aad
icebp
xchg
jge
dec
leave
mov
int3
xchg
mov
inc
fdivr
leave
or
xchg
aas
or
cmp
iret
fdivrs
je
xchg
cwtl
shlb
into
and
shlb
jns
xchg
icebp
jb
test
sbb
mov
int
jno
aas
fstl
stc
mov
inc
jmp
push
call
jecxz
jb
xchg
ds
aad
adc
subl
pop
enter
push
jb
pop
ret
test
lea
sbb
arpl
push
shl
fmuls
incb
and
push
mov
maskmovq
notl
insb
out
ljmp
mov
aaa
mov
out
inc
nop
lods
and
divl
cmpsb
push
cli
or
inc
nop
push
repnz
push
dec
mov
shrb
lret
pop
dec
mov
movsb
out
ret
pop
stc
insl
adc
jns
sub
iret
es
cltd
gs
mov
adc
call
ja
lahf
std
test
mov
sahf
cmp
and
push
dec
jb
test
repz
mov
mov
cs
cmpsb
data16
loopne
cli
cld
pop
xchg
mov
repz
add
jl
sub
add
arpl
inc
hlt
pop
xchg
xchg
push
jg
jb
gs
push
inc
mov
sahf
lods
push
xchg
xchg
roll
fistl
xchg
pop
mov
pop
test
mov
mov
xchg
stos
mov
mov
xchg
xchg
pop
leave
mov
movsl
sbb
rcl
out
or
js
push
or
into
nop
repnz
dec
int3
push
mov
mov
push
xlat
mov
xchg
shrl
sub
mov
cmp
mov
stos
push
lahf
je
mov
xchg
or
fsub
ljmp
mov
scas
push
fdivr
jle
cmp
mov
mov
xchg
mov
iret
mov
fdivrs
repz
mov
fdivrs
gs
mov
mov
adc
mov
fistl
mov
inc
push
hlt
insb
xchg
add
xchg
xchg
sbb
call
sub
xchg
popf
adc
mov
aam
call
imul
mulb
mov
cmp
inc
pop
push
test
dec
repz
insl
je
mov
iret
int3
sti
jle
je
mov
daa
sti
adc
je
mov
cmpsb
hlt
mov
jne
mov
les
std
aaa
jne
mov
aad
adc
mov
jne
mov
adc
repz
xchg
jle
arpl
int3
mov
mov
repz
icebp
hlt
jle
into
dec
mov
iret
jl
xor
cmpsb
neg
int3
jle
hlt
bound
loopne
test
loopne
push
aam
cmc
nop
negl
rorb
loop
sbb
nop
cltd
clc
shrb
stc
xchg
int3
push
push
mov
lock
lea
or
jns
cmc
stc
mov
jl
rorb
test
cmp
pop
pop
in
les
mov
sub
adcl
stos
or
push
pop
and
mov
jne
xchg
fwait
cmpsb
mov
out
pushf
jae
xor
dec
lock
dec
in
ds
test
repz
xchg
push
mov
xchg
repnz
roll
gs
jg
pop
pop
sub
xchg
dec
in
xchg
push
mov
mov
data16
test
mov
push
pop
pop
or
scas
cmpsb
fidivrs
lock
mov
xor
adc
sub
inc
add
cmc
sbb
sbb
outsb
or
jae
push
jnp
cmpsb
inc
mov
pop
int3
lock
fs
pop
xor
jl
repz
mov
xchg
jno
fs
data16
les
mov
mov
jp
in
outsl
xchg
cwtl
clc
arpl
push
sbb
stc
sbb
imul
jle
adcb
fdivrs
push
lds
dec
test
cmp
or
fucomi
mov
xchg
jo
and
scas
xchg
clc
push
pop
jp
mov
out
ret
mov
pop
mov
outsl
shl
call
arpl
mov
adcb
outsb
adc
mov
out
daa
sbb
fistl
cmp
push
repnz
loopne
push
lret
rcll
faddl
mov
xchg
mov
mov
mov
clc
fsubs
fsubrs
scas
inc
or
sti
push
mov
mov
adcl
test
or
test
adc
int
sbb
aaa
into
push
xchg
out
mov
aam
jo
lahf
aaa
jmp
and
xchg
xlat
stos
fdivs
adc
aad
js
inc
mov
pop
mulb
xchg
inc
jle
and
test
repnz
cmpsb
cmpsb
inc
cli
movsl
pop
push
mov
sub
enter
cmc
mov
push
sub
mov
mov
stos
bound
addb
fldz
lods
jp
cmp
mov
xor
adc
push
fimuls
repz
jecxz
ss
sbb
fmull
into
std
sbb
inc
cmpsb
ret
xchg
inc
and
inc
pusha
lock
hlt
nop
mov
and
mov
add
mov
shlb
inc
mov
push
aaa
mov
mov
cwtl
repnz
scas
mov
arpl
and
js
sub
sbbl
pop
cwtl
loopne
out
jp
mov
sbb
cli
js
clc
leave
add
xchg
rcl
push
pop
lret
sahf
jbe
jp
push
mov
jle
push
mov
icebp
pop
test
adc
test
in
mov
xor
xchg
sbb
sbb
arpl
cmp
mov
cmp
pusha
and
fsubs
sub
add
pop
fmuls
pop
inc
fdivrs
push
gs
adc
std
mov
jne
pop
hlt
pushf
jecxz
mov
jmp
sarb
jmp
and
push
lods
cli
sbbl
fistl
icebp
xchg
fwait
push
repnz
push
loop
fsubrs
ret
mov
sahf
aaa
dec
sub
xchg
push
sub
testl
test
mov
stc
xchg
push
cmp
pop
testl
imul
mov
add
pop
adc
and
js
sub
fmuls
in
movb
jp
cmpsb
pop
jbe
movsl
xchg
sbb
into
jnp
mov
xchg
push
push
fdivrs
dec
mov
xor
aad
push
push
sbb
in
xchg
das
adc
fdivl
fwait
pop
mov
jecxz
pushf
jp
loope
cli
or
inc
sbb
loope
cwtl
shll
aas
dec
lock
fdiv
testl
mov
std
or
push
xchg
sbb
or
pop
add
test
jmp
in
push
mov
fsubl
ja
pusha
inc
iret
ss
in
pop
xchg
mov
pop
repnz
nop
pop
jge
xchg
and
inc
xchg
jae
xor
mov
mov
jp
inc
pusha
adc
iret
sbb
jp
mov
mov
les
cltd
add
adc
jmp
or
cwtl
decb
test
movsl
xchg
cltd
sbb
push
stos
adc
dec
sbb
pop
add
sbb
popa
pop
std
jle
popf
push
xchg
cmpsl
push
rorl
cmpsb
subb
clc
sub
push
mov
lea
aam
and
cwtl
sbb
mov
adc
testb
add
orb
outsb
les
std
test
inc
dec
stos
push
inc
mov
ja
or
shll
push
dec
mov
ja
or
int
dec
test
loope
dec
mov
ja
or
fnstenv
pop
xlat
mov
mov
jns
mov
mov
mov
popa
hlt
ss
cmp
mov
fcmovnb
lcall
jmp
xor
push
negb
clc
xchg
add
loopne
adc
arpl
pop
push
rcll
loop
adc
sbbl
sti
sbb
and
cmc
add
sahf
fldt
add
repnz
std
push
out
mov
add
addr16
out
add
pushf
pop
orb
std
sbb
inc
call
mov
dec
and
jo
mov
inc
xor
push
mov
mov
sbb
ret
adc
mov
jmp
pop
dec
fmull
lea
push
out
fisubl
sub
pop
xor
cmp
jnp
mov
push
mov
sub
fisttps
in
adc
cmp
daa
daa
jne
mov
outsl
push
jge
sti
inc
cwtl
fidivl
sbb
mov
mov
xchg
loope
pop
adc
scas
aad
adc
push
arpl
aad
ficompl
xor
cwtl
mov
pop
jmp
push
out
xchg
xchg
stos
adc
xchg
mov
out
fisubl
inc
out
xchg
jae
inc
int3
call
cmpl
jmp
jp
outsl
mov
pusha
lahf
push
pop
mov
pop
xchg
xchg
pop
adc
push
cltd
fstps
enter
cmpsl
push
xchg
mov
adc
push
daa
sarb
shl
shlb
xchg
bound
out
rorl
repnz
repz
aad
pop
daa
jbe
aaa
mov
out
cmpsl
hlt
xchg
xchg
cltd
les
int3
loopne
popa
lds
and
mov
or
in
daa
fldcw
shrl
int3
test
ret
pusha
inc
mov
jge
cmpsb
inc
add
lods
gs
aam
mulb
ss
jl
mov
cmp
cmpsb
mov
xchg
je
rcll
and
mov
pushf
push
aam
test
sbb
fucomip
repnz
lea
fisubl
adc
adc
adc
sub
notb
fcmovnbe
dec
jb
jbe
add
nop
aad
sub
or
aad
push
sbb
call
inc
push
movsl
out
push
lahf
mov
iret
movsl
add
xchg
dec
and
mov
jmp
cmc
sub
lock
and
mov
hlt
sbb
stc
push
adc
stc
xchg
cld
push
jb
xchg
jmp
mov
nop
out
ret
xchg
cmc
cltd
out
or
xor
jae
add
jns
xor
stos
jmp
dec
adc
cmpsb
aas
jmp
or
push
xor
fdivl
adc
movsb
sti
mov
cmp
mov
push
push
lret
mov
fs
lea
pop
lret
clc
sub
aad
pusha
rcrl
cwtl
out
xchg
xchg
nop
xchg
es
adc
xor
aad
cwtl
jp
xor
xchg
push
jo
insb
xchg
pop
mov
repnz
dec
adc
jb
mov
push
clc
repz
ficompl
mov
test
sub
ficoms
cld
popf
push
adc
leave
dec
push
roll
sub
testl
dec
xchg
aas
mov
imulb
adc
and
and
and
jno
push
sub
jp
mov
enter
pop
fcmovne
hlt
call
cld
sbb
stc
in
add
pop
sub
pop
mov
stos
sbb
mov
sbb
aaa
sub
cmc
lea
sub
mov
push
adc
mov
insb
aam
xchg
pop
div
cwtl
lds
and
cs
addl
mull
and
repnz
mov
shll
xchg
and
out
jns
rep
adc
nop
addr16
mov
mov
adc
in
fadd
enter
repz
add
test
mov
cmpb
jge
sbb
push
aam
rcrb
sti
jl
ret
sbb
data16
push
pop
dec
clc
mov
push
push
push
pop
popaw
pop
xchg
orl
imul
jle
sbb
adc
flds
push
push
jo
pop
lret
xchg
cmpb
lock
data16
insl
mov
sbb
test
jp
lock
or
xchg
mov
adc
hlt
inc
mov
dec
and
int3
out
mov
pop
bound
xchg
cltd
addl
push
xchg
mov
jmp
pop
aaa
loopne
jecxz
shlb
and
adc
xor
lock
push
in
inc
adc
insb
pop
movsb
push
mov
stc
inc
das
lret
int3
adc
xchg
xchg
stos
xchg
popf
imulb
loop
arpl
mov
cbtw
and
xor
mov
in
and
push
cwtl
lods
jne
pop
pop
cmpsb
scas
out
jge
fs
adc
push
cs
jl
pusha
int3
lds
push
mov
add
push
xchg
js
out
push
repz
xchg
addr16
call
dec
iret
sahf
or
std
movsb
cmp
push
scas
dec
aad
data16
fs
cmp
adc
in
adc
adc
xchg
jo
xchg
js
data16
sub
mov
mov
loope
ret
cmp
xchg
cwtl
xchg
pop
xchg
adc
jecxz
add
mov
pop
mov
out
rcrb
mov
push
outsl
xchg
rclb
adc
jmpw
out
lahf
stc
call
adc
push
cltd
sub
mov
mov
mov
xchg
ja
adcl
nop
pop
xchg
xchg
hlt
popaw
loopne
and
movsb
loopne
jns,pn
addr16
xlat
add
mov
mov
mov
inc
clc
xchg
test
fistl
adc
cmp
cmp
lret
xchg
xor
cmp
or
repnz
imul
cmp
jl
sarl
ss
jp
clc
sahf
lock
outsl
xchg
test
xchg
xchg
loop
mov
jmp
clc
fnstenv
mov
pop
ds
inc
outsl
pmaxsw
cli
cmp
mov
cld
enter
mov
and
push
ficoml
jecxz
cwtl
test
mov
sti
xchg
clc
mov
mov
jp
mov
sbb
popa
icebp
cmp
stc
cmpsb
sbb
pop
adc
pop
sbb
imul
imul
xchg
es
push
sbb
jb
adc
push
cmp
test
cli
pop
inc
inc
clc
mov
xor
es
lcall
fimuls
xlat
popa
and
inc
or
pop
pop
iret
into
or
rcl
and
loopne
clc
fdivl
lahf
xchg
inc
rol
int3
add
sub
call
imul
mov
lret
cltd
mov
fldcw
orb
lods
addr16
cmc
movsb
and
and
lods
adc
cwtl
mov
enter
mov
add
cltd
mov
jl
cwtl
mov
xchg
jae
in
push
push
ljmp
pop
ret
test
mov
mov
mov
clc
cmc
adc
mov
hlt
clc
stos
loopne
je
leave
les
xchg
lock
rclb
pop
insb
adc
lahf
cmp
xchg
mov
mov
jbe
add
scas
jo
repz
xchg
or
cli
adcb
mov
subb
jae
mov
pop
test
enter
lock
xchg
fcoms
mov
rcl
xor
xchg
clc
rcrb
push
push
mov
scas
mov
xorb
test
lock
jl
ds
push
clc
sbb
test
loope
sbb
fimuls
or
shlb
roll
push
in
jo
aam
notb
loop
cwtl
outsb
mov
push
test
xchg
loop
mov
sbb
lods
pop
loop
ficoml
adc
imulb
call
call
fdivr
int3
or
popa
mov
loopne
mov
icebp
in
push
xchg
mov
ljmp
pop
push
aad
fdiv
ja
sub
mov
nop
add
fmul
mov
or
rolb
jb
in
in
inc
fsubr
cmpsb
testb
sahf
jns
imul
pop
adc
mov
lock
movsb
leave
xchg
lret
xchg
notl
or
push
cmp
mov
mov
push
and
xchg
xchg
out
pop
push
ljmp
call
push
fcoms
adc
mov
or
add
push
je
insl
mov
mov
xchg
popa
adc
sahf
repnz
out
or
movsl
mov
rclb
fmuls
adc
and
push
ficoms
mov
testb
adc
jl
push
lock
ljmp
jno
cwtl
shrb
mov
xchg
push
stos
test
sbb
add
mov
div
cli
icebp
xchg
les
mov
lea
call
lods
push
clc
fsubl
mov
mov
repnz
in
jp
sbb
push
sbb
or
or
lret
sub
jmp
out
xchg
push
int3
lcall
dec
hlt
jmp
dec
jl
xchg
or
ficoms
dec
mov
push
fxch
clc
mov
mov
lret
cmpsb
bound
sub
lds
pop
jae
arpl
fs
mov
cmpsb
pop
shlb
addb
mov
mov
or
push
hlt
xlat
dec
push
dec
push
pop
xchg
inc
mov
aaa
inc
out
out
mov
outsb
js
xor
gs
cli
jb
mov
add
mov
mov
mov
mov
test
push
out
mov
or
mov
int
add
hlt
push
mov
push
repnz
pop
into
push
ljmp
pop
loop
out
push
rorb
fsts
stos
push
jle
inc
fwait
xchg
pop
cmp
pushf
push
mov
fstpl
fcompl
pop
mov
adc
and
mov
mov
xchg
push
xchg
push
jle
clc
mov
push
adcb
rorl
xchg
jle
ror
movsb
icebp
pop
adc
cltd
and
int
sbb
xchg
cwtl
cwtl
dec
or
jl
dec
mov
pop
cwtl
sbb
or
outsb
addr16
adc
cli
nop
adc
test
push
clc
shlb
mov
xchg
xchg
lock
adc
mov
daa
int
leave
mov
xchg
mov
push
mov
lock
test
stos
pushf
int3
pop
mov
xchg
in
pop
xchg
dec
push
enter
push
mov
push
ret
or
mov
cltd
shlb
mov
rcrb
loop
sete
pop
mov
loopne
fwait
aam
ret
cmp
jecxz
xor
lock
loope
and
dec
add
push
mov
insb
push
mov
pusha
xchg
movsl
cwtl
insl
loopne
cmp
or
cwtl
xchg
lods
or
push
lcall
pusha
loop
addb
aam
mov
mov
xchg
xchg
cmpsb
mov
sub
add
push
xchg
cmp
fwait
jbe
jle
pop
or
fldcw
cmpsb
cmpsl
xchg
jbe
scas
jb
inc
out
adc
mov
rcll
fcomp
and
xor
sbb
sbb
sbb
xlat
aaa
mov
and
add
xchg
add
clc
scas
sub
inc
mov
xor
cmp
jge
jecxz
adc
jo
repz
and
adc
push
jo
inc
add
jmp
jb
adc
add
lds
stc
leave
add
or
data16
xchg
cmp
add
mov
pop
clc
cmp
sahf
in
cmpsb
sbb
popa
fiaddl
pop
mov
andb
xchg
xchg
in
mov
in
pop
jb
lock
mov
mov
pop
or
sub
out
rcrl
xchg
pop
push
mov
in
mov
mov
mov
cmp
push
rclb
in
jmp
shrl
fstpt
pop
mov
mov
xchg
jne
imul
push
imul
divl
sub
insl
in
xchg
mov
pop
mov
test
pop
and
out
pop
jnp
popa
add
and
lret
adc
push
cmp
sbbb
or
adc
repnz
clc
ljmp
fcmovbe
push
pop
inc
inc
adc
pop
push
xchg
pop
enter
sbb
scas
adc
adc
xchg
scas
addr16
xchg
pop
pop
adc
fdivs
ret
mov
clc
leave
push
or
mov
into
div
mov
ds
mov
je
shll
mov
mov
xchg
adc
cwtl
adc
shlb
test
add
inc
jae
nop
xchg
scas
add
xchg
xchg
adc
roll
outsl
loopne
in
das
out
add
mov
xchg
mov
push
jg
sbb
xchg
xor
in
pop
pop
lods
adc
stc
xchg
js
add
ret
movsb
fisubrl
push
mov
jmp
aaa
mov
int3
push
int3
popf
aaa
mov
add
adc
cmp
or
aad
mov
mov
out
cltd
mov
xchg
sbb
inc
or
push
in
js
xchg
cmpsb
das
jecxz
mov
jmp
out
je
icebp
fmull
dec
xchg
loope
add
pop
sbb
pusha
and
pop
data16
shr
fcoml
inc
clc
out
dec
push
test
int
cmc
xor
jle
sub
sbb
mov
mov
icebp
pop
jb
mov
ja
movsl
stos
dec
rcrl
or
push
sbb
repnz
cmpsl
mov
lret
test
fildll
addl
mov
dec
xchg
xchg
xchg
pop
test
push
std
sarl
cmpsb
cmpsb
push
test
pop
dec
xchg
sbb
test
adc
cmpsb
and
insb
push
xchg
hlt
cmovp
pop
adc
xchg
add
lods
cmp
clc
cmpsb
mov
or
pop
daa
mov
cmpsb
push
aad
and
add
pop
mov
cmp
cltd
clc
jo
dec
incl
idivl
xchg
test
cld
call
cmp
jmp
loopne
arpl
pop
icebp
out
ja
shl
xchg
sbb
mov
jmp
fildl
push
std
sbb
testb
js
lret
dec
jmp
popa
mov
cmpsb
push
push
stos
fisubrs
std
orl
jns
fwait
das
movsb
mov
andl
imul
scas
sbb
jbe
mov
jns
or
lods
adc
pop
adcl
pop
mov
fwait
xor
xchg
jns
push
mov
mov
inc
loopne
in
testb
inc
out
push
popa
sbb
ficoms
or
sbb
or
or
xor
scas
mov
inc
je
mov
jne
in
mov
mov
dec
adc
cmp
xchg
dec
test
scas
cld
push
adc
fcmovnbe
adc
xchg
sbb
fnstenv
xchg
cmpsl
push
dec
push
sub
cmp
scas
clc
inc
icebp
cli
push
jle
xchg
mov
pop
mov
loopne
jbe
add
ficompl
xchg
cli
outsb
adc
gs
fwait
push
idivl
mov
push
mov
cltd
pop
in
jg
mov
imul
pop
cmpsb
repz
push
repnz
xchg
jnp
jns
mov
sbb
inc
sbb
pop
je
jns
popa
sbb
mov
mov
push
push
jne
inc
out
jle
scas
in
pop
pushf
push
enter
add
lods
mov
movsl
test
xchg
push
sahf
pop
mov
pop
jp
and
mov
and
jns
int3
push
insb
lds
push
jns
jp
sar
mov
fmuls
pop
js
xchg
xor
add
sub
xchg
pop
sbb
xchg
mov
dec
xchg
push
cmp
pusha
arpl
popf
push
insb
outsb
ja
ds
stc
sbb
inc
pop
aad
xor
ror
pop
dec
or
and
pushf
aad
adc
cmp
mov
rcrl
or
mov
es
loopne
int
fisttpl
dec
or
pop
aam
loopne
jne
xchg
hlt
add
pushf
xchg
mov
dec
popa
xchg
dec
loop
int3
sbb
jb
inc
aaa
pop
push
dec
je
or
xor
repnz
shrb
inc
das
sbb
xchg
aaa
jae
sbb
adcl
sbbl
in
add
lret
icebp
inc
popf
aam
aad
jle
pushf
les
rcrl
test
test
scas
fisubrs
mov
xchg
aas
pmulhuw
push
and
jne
int3
popa
and
fdivr
sbb
negb
xchg
xchg
int3
mov
cmp
pop
sbb
negb
cmp
mov
fsubp
mov
je
sub
pushf
or
push
cmp
cmp
jge
scas
sub
jmp
inc
dec
or
std
ficomps
mov
ret
adc
or
sbb
aad
jb
lock
cwtl
xor
xor
icebp
imul
mov
xchg
add
sub
into
dec
aaa
fcoms
cmpsl
push
mov
mov
pusha
sub
enter
enter
idivl
dec
std
sbb
xchg
xchg
xchg
sbb
mov
and
stos
aad
xchg
movsb
or
mov
pusha
adc
push
jmp
xchg
cmp
nop
adc
dec
cltd
push
cmpsb
jl
outsb
mov
push
mov
mov
in
jns
xchg
sbb
popf
jb
or
lds
repnz
jmp
jns
cwtl
push
sub
mov
das
mov
call
call
push
clc
cwtl
adc
pop
xor
jo
pop
test
lret
xchg
iret
or
push
and
aaa
cmpsb
fdivrl
dec
or
hlt
je
adcb
fimull
sub
fdivrs
shll
or
xchg
push
mov
push
sti
cltd
cmovbe
cltd
push
mov
sbb
insb
icebp
out
pop
pop
push
mov
push
hlt
insl
pop
cmp
push
std
stc
push
pop
repnz
mov
mov
jmp
xchg
jmp
jbe
imul
jns
test
push
stos
notl
lcall
xor
popf
mov
xchg
subl
div
dec
push
sbb
add
mov
nop
pop
cli
in
shl
cmpl
jb
aas
jp
jno
mov
sub
out
out
in
pop
jl
sahf
pop
repz
test
add
push
in
scas
add
push
push
ficoms
or
sub
pushf
out
cmpsl
lea
test
adc
call
pop
sub
xchg
jo
rol
cmc
sbb
jge
daa
cmp
test
or
scas
pushf
imul
adc
ljmp
stos
shlb
pop
add
xor
and
push
pop
hlt
add
sub
jecxz
dec
sarb
xchg
mov
jnp
xlat
mov
or
cltd
lea
movsl
cs
push
xchg
pop
dec
cwtl
push
pushf
fwait
mov
data16
xchg
mov
add
fldpi
sbb
add
and
mov
hlt
or
push
push
pop
cmc
into
mov
jg
int
movsl
adc
adc
ljmp
pop
cwtl
push
inc
sbb
jne
sbb
mov
add
sub
ret
clc
ret
jmp
jp
inc
jns
scas
leave
js
lahf
pop
ds
test
loopne
and
pop
aam
mov
adc
fidivrs
mov
rcr
repnz
pusha
enter
jne
pop
addr16
pop
out
iret
mov
stc
iret
mov
push
sbb
jo,pn
xchg
pop
mov
mov
add
pop
lods
test
stos
adc
mov
or
push
ret
lcall
xchg
fwait
mov
pop
nop
cmpsb
andl
sahf
sbb
ficoml
mov
cltd
mov
mov
mov
xchg
pop
mov
out
ficomps
mov
xor
cmp
shl
pop
mov
or
cwtl
pop
sbb
cmpsb
dec
mov
imul
into
sbb
ds
test
pop
xchg
shll
shr
xor
or
loope
mov
adcb
in
out
xor
inc
mov
movsb
adc
dec
in
imul
ds
pop
es
lret
xchg
icebp
icebp
scas
mov
test
nop
data16
xchg
roll
cld
rorb
fcmovne
popa
pop
push
push
sbbb
fisttpl
icebp
cmp
mov
bound
sarl
jno
pop
cpuid
je
stos
add
jae
mov
movsb
pushf
xchg
je
pusha
and
test
mov
out
and
mov
lock
shrl
ljmp
mov
fwait
or
imul
in
jl
pop
cmpb
sub
nop
mov
movsl
fadds
jl
int
adc
xchg
mov
or
lahf
pop
push
test
xor
fwait
pushw
into
lret
pusha
ja
popa
push
xchg
fcmovu
sbb
jns
outsl
cmc
pusha
adc
and
pusha
pop
adc
mov
gs
ljmp
bound
iret
xchg
dec
sbb
xchg
out
in
data16
dec
int3
arpl
sbb
push
mov
cld
adc
iret
imul
mov
in
jns
dec
xchg
call
test
dec
scas
cli
cmp
xchg
mov
sbb
xchg
in
fcoms
pushf
aam
xchg
or
flds
mov
add
loop
xor
sbb
pop
fwait
cmc
fwait
cmp
imulb
or
popf
les
inc
je
adc
cltd
std
and
jae
mov
cmp
mov
xchg
pop
insl
fwait
inc
and
gs
xchg
jp
or
sub
mov
lock
jns
test
scas
repnz
inc
push
mov
cmp
pop
repnz
adc
loopne
adc
cmp
push
cmp
aam
fsts
icebp
jb
jo
int3
sbb
out
and
push
scas
insl
adc
fldl
adc
or
loopne
xchg
ret
mov
lcall
adc
das
loope
mov
mov
mov
fcoml
jp
mov
testl
aaa
in
in
lock
clc
int3
cmp
aas
mov
int
lods
mov
inc
pop
pop
not
lea
adc
lret
insb
insl
test
lods
mov
mov
into
loopne
cld
pop
pop
xchg
cmpsb
add
lea
pop
sbb
imul
lret
sarb
pop
push
repnz
mov
push
sbb
dec
or
pop
gs
and
mov
mov
popa
ss
inc
push
xor
mov
or
sahf
add
jecxz
loop
mov
push
ljmp
popf
xor
popa
pop
mov
xchg
out
rclb
aaa
mov
jns
cmp
mov
push
sub
adc
sub
inc
idivl
stos
push
js
sbb
icebp
lret
data16
and
sbb
test
test
fmul
cmp
xor
dec
addl
inc
mov
fxch
in
or
adc
nop
or
out
jo
cmp
rcrb
dec
pusha
imull
mov
push
jno
cli
shlb
mov
sub
dec
iret
cmc
jg
mov
push
icebp
std
js
mov
or
stos
clc
and
mov
xchg
pop
out
pop
loopne
outsb
sub
cld
rorl
mov
cmc
mov
cmpsb
inc
mov
adc
sbb
pusha
mov
into
add
inc
lods
scas
ljmp
out
scas
mov
jle
sahf
test
or
mov
pop
test
sub
test
pop
stc
ja
xchg
xchg
sbb
sahf
pop
clc
mov
repz
push
jle
outsl
xchg
insb
movsl
pop
add
mov
in
jns
jl
mov
scas
test
cmpsb
pop
cmp
xchg
pop
and
dec
into
inc
cmpsl
sbb
and
mov
jp
adc
cmpsb
mulb
test
gs
jne
cmpsl
into
shlb
and
test
jns
rclb
xchg
fistps
adc
xchg
scas
cmp
jp
push
push
inc
jp
xor
cltd
push
xor
jmp
mov
dec
scas
clc
insl
cmp
shrl
orb
mov
push
or
loope
xchg
add
sbb
adc
addl
xchg
or
xchg
and
and
repnz
shrb
insb
sti
inc
fmul
in
cmp
scas
dec
jmp
repz
jo
in
mov
call
inc
jnp
out
push
fidivs
push
call
pusha
hlt
pop
fyl2xp1
mov
pop
sub
pop
or
stos
jo
test
imul
js
mov
int3
pusha
test
mov
clc
addb
add
or
repnz
mov
adc
jp
pusha
and
dec
sbb
pop
push
lock
pushf
push
dec
xchg
xchg
repz
fbld
ficoml
jns
popf
sbb
rolb
les
pop
into
pop
add
nop
dec
pop
xor
cmp
inc
js
lods
into
dec
aas
mov
repz
movsb
call
addr16
cld
shl
out
fdivs
loope
repz
add
jno
push
mov
sub
scas
adc
iret
rorb
xor
mov
mov
mov
pop
testl
jle
cs
inc
dec
notl
pop
sahf
jns
and
push
and
in
inc
notl
xchg
repnz
iret
inc
jge
gs
cmp
imull
sahf
pop
xchg
jecxz
and
les
shll
push
je
fcompl
push
test
imulb
mov
addb
mov
idivl
mov
cmp
sahf
mov
pushf
cmpsb
cmpb
xor
test
jg
adc
loope
sub
dec
xor
aam
hlt
sbb
out
mov
dec
pop
mov
movsl
cmp
in
xlat
in
mov
jns
mov
mov
test
aam
loopne
arpl
xchg
mov
dec
negb
push
pop
data16
ret
mov
pushf
xchg
enter
xchg
test
jmp
cmp
push
lea
je
adc
push
sahf
adc
outsl
cmpsl
fs
push
inc
div
dec
or
xchg
cmp
jne
cmp
into
dec
sub
rclb
jbe
jbe
sbb
inc
test
xchg
add
dec
cmp
mov
outsb
arpl
dec
push
mov
push
adcb
jo
mov
push
mov
adc
add
pusha
enter
jns
jae
mov
icebp
sub
loope
pop
das
mov
fwait
mov
dec
insl
mov
imul
std
adc
and
pop
mov
sbb
inc
dec
xchg
iret
sahf
xchg
les
add
or
mov
frstor
mov
mov
xchg
loopne
mov
sti
cmc
inc
mov
and
mov
mov
adcb
xor
dec
clc
push
mov
xchg
das
loope
jae
adc
push
dec
sbb
je
push
jle
mov
add
aam
rcll
inc
push
sbb
dec
and
icebp
cmpsb
jns
std
sahf
rclb
add
sbb
movsb
add
inc
xchg
push
jne
lds
int
xchg
push
sahf
inc
xor
lea
add
sahf
mov
cltd
pop
call
fcomps
sahf
or
movsb
or
fsubr
and
mov
push
sub
sahf
jns
xor
aad
adc
hlt
mov
in
pop
call
pusha
mov
stos
push
add
out
cmpsb
outsl
jae
fdivl
lahf
cwtl
add
std
sub
adc
or
iret
mov
jmp
sub
push
push
addl
bound
clc
pushf
push
into
inc
fildl
mov
dec
popa
jns
mov
fisubrs
fsubl
test
outsl
shr
jmp
mov
add
je
add
mov
mov
push
xorb
mov
and
cmc
call
imul
loopne
lock
int3
scas
push
adc
jb
mov
cmc
popa
sbb
xchg
repz
pop
cmp
and
xchg
les
pop
sub
repz
mov
test
pop
adc
and
stc
pop
aad
ljmp
sbb
push
xor
adc
shll
fidivrl
std
adc
cs
xchg
xchg
adc
test
jmp
lahf
sbb
xchg
movsl
jg
mov
mov
lret
xor
jmp
xchg
fwait
repz
test
or
xor
mov
push
rorl
xchg
push
pushf
jp
xor
je
and
pop
insl
mov
cmp
stc
bound
hlt
lcall
test
mov
stos
cli
xchg
xchg
scas
mov
call
mov
pop
test
pop
xor
and
xchg
inc
arpl
adc
stos
push
xchg
add
sub
fsubrs
test
clc
mov
shl
shlb
mov
fimull
rclb
addl
push
loop
inc
lret
rorb
xchg
xchg
adc
xor
jbe
outsl
jns
pop
push
inc
shl
push
sub
shlb
add
out
hlt
mov
add
mov
test
test
mov
rcr
jns
stc
fldenv
jne
mov
jns
or
dec
push
pminub
enter
mov
fstpl
jo
push
cwtl
ja
pop
cli
push
aaa
gs
les
push
add
ret
lods
cmp
mov
in
test
jae
or
ja
pop
pop
add
mov
outsl
add
movsb
das
xor
xchg
adc
out
sbb
aad
or
mov
push
pop
cmc
xor
sbb
in
jl
divb
roll
push
sahf
shll
mov
mov
pushf
in
cmp
test
notb
aaa
mov
jo
loopne
cltd
sbb
and
push
in
testb
cmp
pop
es
fnstcw
sti
fstpt
cmp
lea
pop
repz
push
sahf
jmp
jno
sub
inc
mov
mov
test
jecxz
cwtl
push
mov
mov
mov
cmp
lods
xor
int3
scas
adcl
xorl
in
push
sub
or
lods
insl
mov
cwtl
mov
orb
cld
fcomps
nop
add
fwait
mov
sarl
neg
push
jno
sti
xor
imul
out
es
fbld
ret
mov
or
cli
push
lock
clc
jbe
push
push
mov
jno
cmp
xchg
adc
imul
gs
ja
dec
ss
leave
and
mov
aad
push
test
mov
xchg
xchg
lahf
outsl
stc
ja
push
sub
cli
pop
sbb
mov
pusha
jae
sbb
cmpsb
mov
mov
dec
testl
scas
jb
jecxz
ljmp
cmpsb
mov
insb
mov
lock
inc
mov
repz
pop
aas
mov
lea
jb
push
cmpsb
faddl
jnp
cld
jmp
int
sub
sbb
cmpsb
or
pop
aaa
clc
or
mov
adc
sub
xchg
loop
icebp
push
and
es
push
scas
add
xchg
jmp
sub
xchg
push
bound
into
jmp
xchg
sbb
jg
lret
leave
push
xchg
rcr
fimuls
jns
or
mov
pop
or
sbb
inc
inc
xchg
fwait
or
adc
and
and
jo
cwtl
cmp
sbb
cltd
shl
lret
ret
push
lret
rcl
mov
out
add
hlt
jns
cmc
leave
jl
test
pop
pop
add
adc
sbb
loope
and
pop
stc
lock
pop
sbb
xchg
andnps
mov
loop
adc
repz
popa
mov
cmp
cwtl
loopne
fwait
leave
jle
dec
mov
inc
out
cs
pop
dec
mov
ret
or
cli
pop
inc
xchg
mov
sub
dec
mov
cmpsl
and
out
push
insb
mov
leave
mov
jne
or
lods
sbb
in
inc
inc
inc
clc
adc
sbb
out
cmpsb
jae
enter
jne
fldcw
std
cmpsb
xchg
rcll
dec
icebp
repnz
aad
cmpsl
loopne
movsl
inc
sahf
ss
shl
add
sbb
aad
cmp
push
xchg
repnz
insl
stos
fwait
loopne
mov
mov
push
add
inc
rolb
sti
shll
notl
bound
sbb
mov
jle
xchg
fcomp
add
pop
pop
and
add
or
push
xchg
jno
imul
xor
xchg
jp
pop
les
xor
mov
jbe
fwait
xchg
mov
xchg
inc
xchg
mov
iret
mov
outsb
xchg
mov
mov
fldenv
lock
push
fiadds
movsb
scas
sbb
push
js
push
outsb
xor
cli
adc
push
push
cmp
in
push
leave
in
jno
inc
add
rorb
or
hlt
mov
lea
xchg
and
clc
lcall
iret
mov
xor
or
sbb
inc
out
scas
or
fidivl
jae
fisubl
popf
push
bound
inc
das
cwtl
out
stos
movb
pushf
jb
jbe
or
dec
lods
or
ret
xchg
repz
das
adcb
lods
sbb
das
mov
cmp
mulb
cltd
stos
notb
hlt
xor
push
nop
int
cli
fdivrs
mov
add
pop
cmp
dec
add
mov
xor
pop
andl
push
aas
in
mov
pop
mov
xchg
push
movsl
sarl
rcl
mov
jmp
arpl
stos
jns
rcr
cmp
push
out
mov
fwait
comiss
or
loope
mov
pop
pop
mov
outsb
mov
push
xchg
js
xchg
dec
scas
lds
inc
loope
jl
test
jmp
fsubr
clc
adc
jge
add
in
adc
cwtl
jp
clc
imul
imul
mov
jle
pop
test
stos
decl
cli
add
jnp
fadds
mov
popf
lods
sahf
mov
lods
dec
push
out
repnz
leave
popf
cmpl
dec
cmp
mov
inc
scas
pop
fistps
ss
mov
fwait
nop
cld
jecxz
aaa
push
repnz
lret
xchg
mov
ss
popa
xchg
add
inc
cwtl
std
mov
cltd
mov
fsts
cmpsb
pusha
mov
loope
popa
xchg
outsl
in
adc
clc
sbb
loope
loopne
mov
and
adc
xor
sbb
cmpsb
adc
into
call
neg
jns
sub
das
mov
fidivs
lods
jp
xchg
dec
mov
mov
push
out
jno
cwtl
les
or
xor
push
dec
scas
fndisi(8087
iret
mov
push
fidivs
cmp
xchg
in
movsl
mov
leave
dec
adc
sbb
sbbb
pop
adc
inc
adc
lods
repnz
loop
shlb
imul
pop
cmp
das
and
xchg
stos
fs
push
pop
loop
fdivrs
jge
jne
mov
adc
mov
movsb
mov
test
out
les
lock
and
clc
push
push
insl
repz
xchg
pusha
mov
pop
test
sbb
lods
in
cmp
fdivl
and
inc
and
cmpsb
addl
fildl
adc
xor
divb
repz
mov
push
icebp
and
jmp
push
out
adcl
jge
sbb
jae
cmpsb
icebp
push
scas
add
imul
or
add
jne
cmp
addl
xchg
jne
push
xchg
xor
push
mov
adc
jns
icebp
or
mov
fwait
mov
fbld
sbb
fimuls
popf
cs
and
out
in
sub
fldenv
shrl
adc
icebp
sbb
nop
mov
pop
fistpl
mov
pop
mov
inc
and
test
stos
add
idivl
nop
xchg
imul
sahf
fwait
test
xor
sub
add
scas
sbb
fsub
jo
insl
jnp
mov
pop
and
fucomp
ja
pop
xchg
repz
or
mov
pop
rol
cmpsb
dec
icebp
mov
iret
mov
lret
lret
mov
aad
addr16
xchg
mov
ljmp
adc
push
mov
push
shrb
lret
inc
mov
cltd
and
xor
lock
loop
data16
pusha
xor
xchg
movsb
ljmp
xchg
pop
outsb
ret
jmp
dec
lock
jmp
pop
xor
add
cmp
push
mov
cmpsb
adc
stos
enter
xchg
out
dec
cmpb
xor
xor
mov
adc
pop
jmp
sbb
add
sbb
dec
xor
adcl
jnp
cli
lea
rclb
ret
mov
mov
repnz
cwtl
lcall
sub
or
cli
mov
add
inc
cmp
arpl
cmp
pop
mov
std
push
dec
shlb
mov
or
cwtl
inc
mov
inc
scas
sbb
sti
add
cltd
and
and
in
lds
lods
jmp
pop
mov
fwait
and
xchg
fidivrl
cltd
popa
and
out
jns
sub
mov
sbb
sahf
adc
or
lock
xor
jecxz
inc
xchg
jnp
mov
cmp
nop
fists
lods
inc
pop
push
xor
in
in
cs
gs
push
inc
adc
lods
mov
inc
scas
lock
push
pop
mov
xchg
mov
int3
xlat
add
in
mov
or
imul
icebp
pushf
dec
das
cmpsl
jae
js
outsl
or
jo
js
data16
mov
adc
enter
add
lea
pop
xchg
lcall
mov
pusha
out
outsl
das
pop
testl
pop
sub
lahf
and
out
xor
repnz
xchg
cld
int
push
inc
adc
adc
cltd
enter
add
std
mov
imul
es
jg
leave
xchg
mov
clc
xor
mov
and
sbb
std
pop
xchg
mov
aam
imul
cmpsl
and
test
push
hlt
add
adc
das
xchg
mov
aaa
xchg
out
pop
mov
lret
ret
icebp
stc
stos
push
aam
or
sbb
repz
scas
push
jnp
xchg
mov
lock
repz
or
aaa
sahf
mov
cld
jbe
pop
xlat
xchg
or
fldcw
push
dec
mov
ds
imul
into
clc
sbb
mov
setbe
fs
and
xchg
clc
push
or
cltd
cmpl
xor
mov
ss
fadds
outsl
testb
mov
sub
out
stc
push
or
xchg
lea
mov
jns
mov
jns
or
inc
gs
cld
ljmp
movsl
call
fcoms
sbb
notl
sub
jno
neg
clc
sbb
mov
mov
repnz
into
loop
push
in
aaa
push
scas
jb
push
insl
imul
push
xor
scas
push
jp
repz
mov
outsl
lock
jne
loop
mov
leave
jmp
xchg
sbb
jo
cltd
mov
dec
ds
mov
mov
loopne
xchg
or
jge
add
nop
outsb
jnp
inc
cli
andb
push
push
sbb
xchg
cli
xchg
cmc
or
lea
imul
repz
add
ds
hlt
jne
imul
dec
sahf
fdivrs
push
std
nop
je
mov
inc
or
bound
ds
mov
mov
fmuls
icebp
mov
pop
mov
add
and
hlt
mov
inc
scas
add
adc
int3
add
mov
xchg
adc
stc
insl
mov
xchg
in
sbb
fwait
out
cltd
ss
pop
xor
adc
in
das
add
or
cs
xor
cmpsb
dec
shr
adc
pop
jge
xchg
lock
add
sti
or
stc
jl
jle
jo
ljmp
jmp
or
inc
mov
jbe
push
mov
add
jno
test
add
mov
js
std
outsl
dec
pusha
xchg
xchg
pop
sti
sbb
push
ja
jg
push
inc
and
push
xor
add
outsb
movsb
cmp
in
imul
push
jg
push
gs
adc
adc
push
cmp
sub
jbe
mov
push
mov
jno
popf
cs
mov
sub
fldenv
stc
add
xor
test
insb
jne
fstsw
push
ficomps
dec
inc
test
or
movsl
mov
mov
push
inc
inc
xchg
divb
xor
out
cwtl
adc
inc
jl
cld
cmc
in
imul
lret
add
shrb
mov
int
jns
mov
jg
push
jle
movsl
popa
in
jae
sbb
ja
into
dec
xchg
dec
sbb
hlt
ss
pavgb
leave
push
mov
dec
fildl
fstpt
loope
push
cli
mov
pushf
mov
cmp
cmp
inc
and
xchg
loopne,pt
mov
cmp
jbe
xchg
adc
xlat
cltd
push
subl
test
push
pusha
jge
add
stos
pop
iret
jbe
add
out
pusha
inc
and
cmp
adc
xchg
cmpsb
add
aas
sahf
jg
adc
cmp
pusha
fwait
stc
mov
mulb
stc
mov
mov
out
lea
cmp
out
or
push
rorb
mov
push
repz
fimuls
pop
xchg
mov
inc
mov
cs
push
xor
mov
sub
cmp
add
cwtl
push
sub
pop
outsb
cmp
jne
mov
xor
nop
fsub
push
adc
add
adc
mov
out
xchg
xchg
jmp
test
mov
push
mov
jo
mov
in
cli
cmp
int
test
fildl
xchg
popf
inc
mov
mov
push
adc
in
clc
loope
add
lcall
mov
js
xchg
xchg
cmp
in
call
mov
mov
cwtl
flds
xchg
xchg
fnstenv
push
inc
inc
or
std
mov
lock
js
jmp
enter
inc
mov
ret
jl
add
sub
cmp
xor
add
mov
adc
test
push
cmpsb
hlt
sahf
jne
das
outsl
sub
add
jle
ret
xor
andb
push
sub
mov
dec
jns
imul
std
mov
jns
mov
div
imul
sub
arpl
orb
fwait
push
add
mov
inc
push
les
sub
fcomps
sub
adcl
fprem
cli
fidivrl
sbb
loopne
cmp
jl
out
ja
xor
mov
and
pop
mov
or
mov
jb
cltd
pop
sbb
or
mov
mov
lcall
mov
mov
imul
or
adc
cmpl
mov
xchg
push
inc
mov
push
repnz
jge
sub
test
loopne
jne
xor
ret
and
ret
push
repnz
enter
xchg
in
or
jne
jo
add
xchg
push
iret
in
outsb
out
push
xchg
cmpsb
movsl
les
testb
cltd
negb
push
leave
ret
push
testb
dec
jo
aad
sbb
push
xchg
cmpsb
and
pusha
out
adc
or
pop
xor
repz
inc
or
ljmp
shrl
xchg
adc
loop
and
test
out
mov
test
in
and
xchg
or
cmpsb
repz
or
sbb
fisubl
inc
and
leave
arpl
cwtl
jns
jge
aaa
stc
lret
ret
push
cmc
mov
shrb
pop
dec
cmp
mov
mov
out
mov
jb
imul
lret
dec
or
mov
into
jo
dec
lods
scas
shl
mov
cli
outsl
mov
popa
test
add
jmp
cmp
pop
gs
inc
rolb
sbb
lods
push
mov
pushf
popa
call
in
lahf
sti
cmp
scas
mov
into
xchg
or
mov
out
pop
pop
loope
pusha
sbb
push
adcb
fdivrl
cmpsb
jb
sets
stos
add
dec
adc
cmpsb
or
push
es
inc
pop
movsl
pushf
cltd
scas
mov
push
jno
repz
push
mov
sbb
into
cmp
loop
rclb
and
or
cltd
sarl
jns
or
sbb
dec
adc
xor
testl
mov
mov
mov
loope
fcomip
xchg
cmp
jmp
bound
inc
andl
test
test
and
jae
nop
std
mov
mov
adcb
iret
mov
sub
pop
shrb
dec
cltd
enter
xorb
outsb
or
mov
call
jmp
xor
adc
popf
add
and
pop
fdivrs
inc
insl
outsb
mov
clc
loopne
icebp
xchg
mov
mov
xchg
imul
call
out
xchg
jns
scas
loope
sbb
test
or
pop
mov
lcall
adc
xchg
cmpsb
add
mov
and
cmp
mov
jbe
adc
inc
jle
cmpsl
loopne
hlt
pop
movsb
rolb
xchg
push
sbb
xchg
jo
bound
sbb
push
jbe
in
inc
out
test
mov
ret
xchg
push
test
fstl
mov
adc
push
mov
xchg
cs
sbb
xchg
add
xchg
xchg
aam
push
or
xchg
notb
pusha
cld
jo
popf
xchg
mov
sub
lahf
fdivp
repnz
adc
dec
cs
rolb
insb
rorb
xchg
xchg
dec
popf
xor
push
repz
adc
push
lret
cmp
pop
filds
call
jl
sbb
orl
jecxz
fcoml
clc
ficompl
aam
outsb
test
push
mov
loope
add
pop
ret
dec
aam
xchg
idiv
jg
imul
pusha
cmc
mov
xor
add
push
stos
adc
xchg
mov
mov
xchg
vmaxps
or
and
adc
sub
mov
jmp
cmpsb
imul
mov
sub
test
notb
pop
push
jg
clc
fwait
dec
jbe
mov
push
mov
test
pop
inc
xchg
add
mov
cwtl
xchg
mov
addr16
xchg
outsl
mov
sti
es
jbe
ja
orb
jl
pusha
and
pmulhuw
int3
aas
repnz
adc
dec
jae
inc
inc
loopne
and
aad
xchg
xchg
movsb
lret
lods
jnp
cmpsl
jmp
sbb
push
xor
xchg
cmp
adc
sbbb
inc
push
pop
imul
lods
aad
jmp
add
fisubs
dec
sub
inc
push
adc
out
sub
aaa
lods
scas
jmp
adc
lret
fidivrs
cmp
sbb
cmp
movsb
lods
xchg
stos
fmuls
dec
mov
test
jns
jne
pop
and
adc
dec
repz
mov
cltd
mov
decb
mov
mov
das
mov
jae
mov
push
imul
and
push
sub
add
fmull
cwtl
cmp
pop
mov
pop
or
pop
popf
nop
push
push
pop
xchg
sarl
push
iret
cmp
cmpsb
in
mov
mov
adc
clc
arpl
sbb
mov
fidivrl
and
aas
pop
pop
xor
or
shlb
in
dec
cmp
jne
cmp
rorl
lea
pop
or
out
mov
in
fidivrl
pusha
repnz
mov
int
fnstenv
xchg
jns
mov
pop
int3
mov
es
mov
xchg
adc
sub
shlb
jns
jmp
les
or
scas
loop
loopne
int
repz
or
es
mov
mov
insb
popf
out
outsb
nop
dec
mov
cmpsl
mov
rcll
cmp
fdivrp
cmpsb
aam
leave
jecxz
mov
mov
push
out
fstpl
or
inc
movsb
add
int
and
ret
mov
mov
jnp
xor
scas
adc
icebp
add
dec
lahf
lock
cmp
mov
pop
popa
xchg
mov
out
in
and
adc
sub
mov
mov
mov
xor
inc
pop
ja
mov
inc
call
jb
xchg
repnz
mov
mov
andb
imul
daa
fsub
fadd
in
cmpsb
insb
sar
sbb
push
add
sub
mov
fcomp
gs
sbb
cmp
subb
sahf
sti
dec
in
nop
add
sbb
mov
add
ret
aas
mov
lret
cmp
fwait
popa
or
aas
cmpsb
mov
cmp
icebp
sbb
push
adc
mov
pop
push
adc
adc
fsubrs
and
bound
cmp
mov
call
pusha
xchg
dec
orb
imul
mov
or
pop
sahf
xchg
movsl
into
push
pop
mov
sub
mov
into
push
rclb
popf
mov
cwtl
icebp
idivb
mov
cwtl
mov
js
mov
nop
mov
mov
xor
pusha
sarb
xor
xor
shr
mov
mov
lea
movsl
mov
shlb
adc
mov
jb
dec
mov
xchg
mov
push
stc
mov
pop
loop
stc
sub
lahf
test
push
cmc
jb
shrb
pop
je
mov
or
pop
adc
mov
mov
fsub
push
aam
and
test
scas
cli
mov
pop
lret
xlat
test
or
cmp
dec
push
out
test
pop
es
jmp
mov
sbbb
je
add
in
sbb
lahf
into
jns
movsb
dec
cmpsb
rorb
mov
mov
roll
xchg
and
adc
scas
mov
movsb
xor
std
leave
mov
mov
jnp
xchg
pop
push
sub
loop
mov
icebp
repnz
outsb
pop
xchg
mov
adc
lods
add
xchg
in
iret
cmp
loopne
jbe
imul
fwait
push
nop
pop
test
lret
and
pop
add
cwtl
outsl
int
test
cmpb
push
bound
or
int
and
jbe
orb
popa
mov
xchg
mov
stos
mov
push
xchg
loopne
pop
inc
ficoms
jg
sbbl
cltd
xchg
leave
pop
cmp
and
dec
stos
pusha
add
fistl
je
shll
cmp
inc
repnz
inc
pop
sub
lea
movsb
and
in
insl
cld
repz
jo
std
popf
jmp
clc
adc
xchg
jge
push
and
jb
xchg
cltd
jge
mov
or
pop
or
xchg
sub
in
lea
sarb
inc
dec
sub
or
aaa
cmp
add
mov
adc
lret
xchg
mov
loope
adc
and
ja
or
dec
cwtl
mov
aad
adc
pop
cvtps2pi
xchg
ja
notl
in
fmuls
push
insl
sarl
add
hlt
fwait
idivb
or
aaa
add
popw
stc
idiv
adc
gs
xor
orb
push
jns
push
cmpsb
xchg
inc
shlb
mov
loope
xrelease
ret
call
and
mov
or
add
xchg
into
jp
cmpsb
pop
sub
mov
repz
test
dec
cmc
xor
incl
es
imul
xchg
mov
xchg
cmp
lock
add
js
cld
mov
inc
test
and
xchg
mov
xchg
jns
mov
or
fstpt
cmpsb
scas
sbb
inc
mov
push
jg
mov
add
dec
mov
push
cmp
inc
in
jb
jp
addb
cmp
aas
cmpsb
push
mov
mov
or
inc
ret
cwtl
adc
and
mov
push
dec
jmp
inc
dec
xchg
mov
sub
cmp
lock
cmp
lods
and
xor
mov
cmpsb
aas
daa
test
xchg
std
sbb
and
sbb
cmp
dec
push
daa
dec
cmp
push
out
pop
push
jmp
movsb
mov
xlat
pop
sub
mov
jo
xchg
loopne
cli
cltd
pusha
jbe
inc
mov
cld
aam
in
cltd
jno
movsl
push
fs
sub
adc
rclb
fcompl
xlat
mov
fldl
pop
xor
int3
popa
or
xlat
inc
sbb
pushf
dec
fwait
pcmpeqd
jp
cmp
mov
xchg
loopne
clc
mov
push
movsb
cmp
push
pop
mov
xchg
dec
cltd
sbb
cli
icebp
cmpsl
leave
fdivrs
mov
ss
call
jle
push
mov
fwait
pop
popa
roll
lea
mov
orl
aaa
stos
jae
xchg
mov
rcrl
push
jnp
test
sbb
inc
mov
push
imul
mov
pop
sbb
or
pop
xlat
push
sbb
xor
jns
stc
adc
and
ret
or
xchg
push
pop
mov
fmull
cmp
push
adc
inc
xor
outsb
add
cs
mov
lea
fisttpl
fnstsw
fwait
push
in
adc
pop
in
enter
cmp
dec
and
arpl
cld
adcl
mov
aam
mov
outsb
add
adc
mov
sar
lret
mov
add
movsb
nop
dec
popf
adc
adc
cmpb
adc
aam
cmpsb
push
push
stc
cwtl
scas
cmpsl
cmp
jae
shll
fcoms
ds
cwtl
sarl
or
xchg
mov
clc
push
out
popa
jmp
push
pop
idivb
mov
mov
fs
mov
insb
xchg
jns
pop
outsl
out
imul
and
jle
or
or
push
push
or
jno
push
in
sbb
xchg
fildll
rcr
fstpt
add
pop
into
mov
cmc
sbb
add
dec
or
lds
inc
sarb
jnp
mov
test
shrl
sbb
popf
mov
push
insb
imul
fists
sub
outsb
sub
pushf
fs
mov
or
lahf
stos
pushf
cli
dec
outsl
mov
cmc
movsb
mov
inc
aam
pop
inc
push
test
aaa
mov
aad
mov
gs
and
mov
mov
in
xchg
inc
mov
inc
clc
dec
cli
or
xchg
outsl
sub
das
push
jb
sbb
lock
icebp
or
push
test
sub
or
xchg
movsb
push
push
enter
xlat
xchg
dec
ret
iret
jno
mov
aam
lods
rclb
ret
lods
in
lock
fdivp
fistl
hlt
jmp
pop
divb
sbb
cld
jns
adc
cmp
sbb
push
jmp
xor
xchg
dec
mov
enter
je
mov
mov
mov
dec
shufps
clc
nop
adc
fstl
push
xchg
cmpsl
jmp
dec
cltd
call
loopne
lock
data16
cmpsb
pop
jne
xor
jb
orl
sahf
jmp
push
fildl
sub
xchg
or
out
iret
xchg
adc
adc
test
int3
imul
add
mov
or
inc
ss
dec
in
rcll
call
dec
dec
xchg
pushf
fsubrs
add
or
fxch
rcl
mov
stos
clc
roll
mov
cmp
cmp
xchg
lods
adc
out
rolb
xor
push
mov
test
js
cmpsb
or
repz
subb
out
mov
leave
sub
cmc
mov
jge
jmp
jns
sub
fistps
jns
pop
out
pop
or
shrb
mov
scas
scas
cmp
xchg
jnp
add
or
mull
or
sbb
adc
jmp
jecxz
test
sub
jp
push
in
enter
enter
mov
mov
pop
into
shlb
mov
jns
int
outsl
mov
lcall
test
lcall
leave
sarl
loop
shll
jns
shll
cmp
insl
xor
loopne
stos
rcll
fnstenv
mov
dec
push
mov
inc
push
mov
cmpsb
adc
testb
xchg
mov
cmp
xchg
mov
mov
jae
shll
arpl
sahf
lcall
sbb
add
addr16
mov
cmp
xchg
mov
mov
pushf
mov
jecxz
pop
loope
add
xchg
fwait
pushf
push
fsub
movsb
aam
xchg
in
and
add
cmp
mov
nop
outsb
fdivs
or
or
cld
jns
fmul
loopne
and
xor
and
add
lahf
dec
jmp
cmp
xchg
pxor
mov
jecxz
add
fs
jp
adc
dec
sub
push
insb
add
push
test
bound
fcomp
push
jae
push
or
inc
lret
cmp
std
in
sbb
out
mov
inc
xchg
stos
mov
scas
xchg
aaa
or
add
dec
mov
in
push
push
xor
sbb
insb
mov
and
xchg
fsubs
mov
sbbb
inc
loopne
aaa
inc
xchg
bound
mov
adc
pop
imul
sbb
shrl
jmp
insl
fsts
pop
cmpsl
ficoml
mov
sub
ds
rcrl
xchg
test
cltd
mov
xor
adc
jecxz
int
pushf
insl
int3
hlt
and
mov
mov
arpl
rol
loopne
and
adc
sbb
jno
fdivs
mov
and
pusha
add
int3
jle
mov
xchg
iret
fwait
int3
call
pop
pop
xchg
scas
aam
bound
rclb
or
ret
mov
and
push
mov
cmpsl
xchg
or
imul
add
adc
xchg
out
fwait
or
fisttpll
mov
xchg
sub
cld
dec
xchg
fadd
lea
add
stos
jp
xor
jbe
dec
cld
repnz
xor
xor
popa
xchg
clc
inc
pop
call
sub
idivb
lock
push
std
cltd
loopne
adc
or
push
nop
movzwl
mov
mov
sbb
mov
imul
and
xor
xchg
xchg
add
shll
or
mov
or
rcl
jno
adc
push
add
push
hlt
hlt
jne
inc
popfw
ljmp
mov
inc
bound
sbb
lret
or
fsubs
pushl
xchg
in
pop
sahf
mov
push
push
xchg
sub
mov
mov
xchg
push
jns
adc
mov
rcr
imul
mov
or
daa
loop
adc
dec
xchg
jns
shrl
jmp
jns
dec
jg
and
pop
xor
pusha
pushaw
jmp
inc
pop
fwait
push
push
dec
lret
pop
jecxz
ja
lret
cmp
cmpsl
push
rcrl
fstpt
push
xlat
into
jb
hlt
sti
push
pop
add
jbe
jne
add
xchg
cmc
push
jae
pop
dec
inc
sbb
xor
nop
push
cmp
sub
push
jg
push
jno
mov
mov
or
aad
fisubrl
inc
and
mov
mov
fwait
mov
xchg
int
pop
xor
lahf
loop
xchg
jnp
std
pop
mull
jbe
lret
xchg
dec
lea
gs
sub
adc
movsb
fwait
xor
jne
xchg
xor
mov
or
mov
lock
dec
nop
lea
aas
jp
shrl
in
xor
mov
lea
mov
int3
xchg
xchg
dec
fstpt
pop
and
out
shrb
vunpcklps
or
xchg
and
insb
call
iret
push
and
das
fucom
jp
in
js
jnp
sbb
lock
push
imul
into
sarl
ja
clc
notb
aad
and
notb
mov
repz
push
int
add
dec
mov
test
outsb
mov
cli
enter
lcall
int3
push
lret
pop
or
mov
push
adc
adc
pop
and
enter
push
jne
mov
xor
mov
test
pop
jne
xchg
pop
call
or
test
xor
or
jbe
push
nop
xchg
mov
mov
add
nop
outsl
lahf
test
xor
dec
lcall
lcall
sbb
adc
push
pop
andl
jo
jge
xor
jne
pop
stos
sub
adc
pop
pop
lods
sbb
cs
and
insl
xchg
push
push
mov
rolb
mov
xchg
xchg
push
cmp
jecxz
jge
or
out
js
mov
or
pushf
jae
std
rcr
xchg
ret
incb
sub
fsubs
mov
xchg
xchg
faddp
fwait
or
push
mov
fwait
out
mov
imul
xchg
jae
mov
push
jne
vpshufd
and
nopl
std
imul
sub
mov
fwait
or
aam
stos
nop
mov
roll
and
xchg
out
dec
outsb
xchg
dec
stc
mov
shlb
cmp
push
mov
jmp
das
addb
movsb
pop
addr16
xchg
add
ja
jle
mov
xchg
and
adc
filds
gs
add
xchg
pop
jne
cmp
and
fsubp
aam
xchg
scas
cmpsb
aam
icebp
loopne
arpl
data16
cltd
jnp
sub
mov
jecxz
sbb
out
mov
test
push
mov
jbe
out
out
or
aad
adc
xchg
adc
shr
adc
xor
sbbb
outsb
mov
adc
xchg
rclb
int
scas
dec
sbb
lret
xor
push
inc
test
jns
xchg
rcrb
aas
fwait
into
icebp
cmpsl
push
xchg
xchg
loop
mov
hlt
inc
fisttpll
lahf
pop
lock
std
scas
pop
sbb
out
repz
mov
test
adcb
addr16
gs
push
and
pop
cmpb
mov
and
and
and
pop
sarl
popa
fisttps
das
rorb
push
mov
add
jmp
lods
add
sbb
fsts
cwtl
jbe
xchg
jo
inc
add
push
inc
cwtl
popf
mov
mov
cwtl
push
jle
and
lret
push
mov
jle
mov
push
adc
jp
fnsave
int
stc
xchg
jl
ret
mov
imul
movb
add
jge
push
fcmovbe
iret
pop
cwtl
or
sbb
lcall
rorb
jae
cmpsb
call
xchg
outsl
mov
stc
jae
es
insb
mov
sbb
fistpll
pop
jo
mov
cwtl
sti
scas
xor
xor
sub
mov
cld
xchg
fdivs
xor
mov
cmpsb
cld
dec
cmp
shll
sub
dec
push
pop
cmp
into
into
es
jp
adc
lret
stc
data16
cmp
leave
jb
sti
xchg
mov
dec
data16
add
mov
adc
push
push
popa
xchg
test
sbb
shr
xor
rolb
push
pusha
cmc
sbb
xor
mov
fisubrs
inc
pop
push
jmp
fldt
dec
sub
add
xchg
jnp
aas
mov
mov
pop
mov
push
mov
movsb
and
dec
les
jp
jmp
cwtl
daa
jl
ja
cmpsb
xor
repz
dec
cmp
inc
ds
data16
cli
in
cmc
dec
cmp
jae
lds
xchg
push
test
iret
push
xchg
inc
rorl
cmc
jbe
mov
xchg
movsb
mov
push
mov
mov
jp
xchg
xlat
xchg
clc
loopne
repnz
inc
adc
pop
add
int3
sahf
jb
daa
xchg
frstor
arpl
push
cmp
pop
jns
cmc
and
and
leave
adc
nop
pop
push
jmp
or
mov
in
xchg
add
dec
jns
inc
pusha
adc
add
xchg
adc
stc
push
movsb
sub
pop
daa
hlt
push
stc
or
pop
mov
xchg
xchg
lods
jmp
inc
lods
roll
sub
xchg
lds
ja
lods
cmpsb
imul
mov
fcmovu
xchg
test
xor
pop
inc
mov
xchg
sarl
adc
add
out
nop
add
ss
aaa
lret
mov
add
mov
cmp
sub
lar
shll
pop
pop
repnz
loop
push
inc
xor
es
popa
dec
test
mov
cmp
dec
cmp
add
sbb
sbb
xchg
in
stos
dec
out
imul
popf
nop
loop
cmp
lods
xchg
dec
enter
fs
sbb
xor
xor
arpl
cmp
jo
xchg
xchg
mov
aad
cmpsb
insl
dec
pop
add
sub
mov
nop
push
pop
xchg
dec
mov
cmpsb
add
insl
pop
xchg
mov
sbb
cltd
adc
cmpsl
nop
int
in
andb
xchg
inc
aas
addb
or
xchg
or
lock
addl
xchg
stos
mov
jns
xor
jne
sbb
mov
mov
mov
pop
sahf
cmpsb
mov
cmp
mov
xor
dec
pop
stc
jl
pop
jb
adc
mov
lds
movsb
mov
jl
mov
mov
mov
dec
repz
in
add
cmpsb
stc
into
push
iret
or
and
cmp
add
aam
mov
repz
cwtl
or
xchg
scas
les
test
std
rcl
outsb
in
mov
nop
pop
xchg
mov
dec
mov
xchg
sub
push
call
out
mov
lcall
sbb
orb
movsb
and
pop
loope
je
push
dec
stos
jns
mov
mov
mov
ret
ds
push
adc
subl
out
leave
dec
lock
mov
loop
push
jecxz
xchg
mov
mov
mov
push
mov
cmpl
mov
push
sarb
pop
push
lahf
test
popa
leave
inc
bt
aaa
stc
repz
mov
ja
iret
inc
fsub
lret
jno
pop
or
mov
mov
mov
call
rol
mov
iret
or
jae
push
outsb
nop
das
inc
add
dec
test
adc
dec
cmp
lea
jle
pop
inc
jg
mov
jbe
repnz
in
push
mov
lea
mov
jecxz
mov
or
out
repnz
push
test
or
sbb
out
fwait
in
ret
stc
sbb
mov
cmp
push
pop
sti
adcb
in
lahf
data16
mov
lcall
push
xchg
push
out
cwtl
or
cmpsb
popf
cmp
push
push
negl
addl
push
mov
jmp
jnp
sbb
adc
stc
sbb
pop
xchg
sbb
mov
xlat
cld
pushf
adc
xchg
fsubrl
jg
or
jno
insl
movaps
les
insl
cmp
dec
pop
jb
dec
clc
xchg
adc
jge
mov
out
flds
mov
and
xchg
dec
xchg
mov
adc
sub
mov
sahf
cmp
sub
xchg
xchg
ret
fisubrs
loop
lods
mov
or
add
sarb
xchg
mov
cmp
xchg
cltd
fwait
push
cltd
push
test
ds
enter
push
subb
mov
flds
cwtl
clc
nop
sub
adc
pushf
jno
out
mov
sub
add
mov
and
pushf
nop
cmpsb
hlt
mov
mov
dec
pop
loope
push
sbb
jno
inc
and
sbb
negb
pusha
pop
push
mov
aam
push
or
in
sbb
loopne
jmp
mov
mov
js
aas
ficoml
xchg
lds
daa
or
add
jl
imul
enter
dec
push
ret
repz
fbld
ret
in
lahf
xchg
in
push
into
lahf
lcall
push
ficoms
add
sbb
push
and
inc
sbb
iret
push
or
sbb
mov
clc
mov
cmp
fsubrl
fdivrs
xchg
mov
stc
fidivs
sub
int3
repnz
aad
push
pop
outsl
mov
push
aad
push
test
loope
rorl
bound
mov
test
loope
fisttps
pop
push
fnsave
pop
fisttpl
shll
or
call
out
addr16
out
shlw
or
in
fs
loope
repnz
ja
or
lock
test
loope
out
mov
ja
or
in
mov
test
loope
jp
cli
shll
or
push
clc
stos
dec
cmp
or
divb
jne
hlt
mov
repz
xorb
test
es
mov
xchg
fstl
rol
pop
inc
filds
arpl
mov
and
jne
jno
clc
jl
inc
cmp
insb
and
imul
imul
sub
lods
sbb
loopne
popa
data16
sbb
mov
loop
push
push
int
pop
fnsave
cmp
xchg
into
repz
rolb
mov
out
xchg
push
lock
ret
lret
jmp
mov
out
in
push
xchg
shl
jno
pop
in
and
testb
xchg
out
jns
push
loopne
push
imul
push
lret
jae
das
pop
repnz
adc
sbb
add
sbb
sbb
push
push
ret
loop
iret
mov
adc
jmp
sbb
mov
or
xchg
fs
int
stc
fistl
js
out
negl
lock
mov
xor
adc
push
mov
addr16
push
out
adc
jmp
push
sub
repnz
add
mov
lock
xchg
adc
je
movsb
push
or
adc
or
or
or
adc
in
xchg
xchg
sub
out
mov
adc
sarl
js
jle
pop
mov
push
jmp
push
xchg
xchg
notb
data16
out
mov
adc
sub
adcb
mov
aad
int3
jle
int3
les
add
push
ret
mov
adc
pop
xor
mov
xchg
sbb
les
gs
mov
and
adc
psubb
dec
mov
add
adc
sarl
sub
jp
or
push
push
push
ljmp
es
repz
iret
xchg
clc
ror
push
mov
repnz
fdivrs
movsb
mov
movsb
test
xchg
pop
cmpsl
test
je
sbbb
out
adc
and
popl
in
sbb
mov
mov
cmp
mov
sbb
add
cmp
push
cwtl
xchg
imulb
ret
mov
hlt
std
call
mov
addl
fistps
mov
and
xchg
jno
xchg
push
xchg
imul
xchg
fistl
mov
je
repnz
sahf
cli
mov
fisubrs
test
repnz
inc
adc
outsb
imul
js
lea
loop
cli
les
mov
cwtl
divl
and
jle
iret
push
pushf
jmp
ss
sti
add
push
test
xorb
xchg
sbb
loopne
push
movsb
imul
sar
mov
jle
xor
sarb
pop
dec
adc
scas
cltd
or
xor
cmp
mov
mov
add
jne
push
nop
test
test
pushf
mov
pop
lock
push
adc
popa
in
push
outsb
adc
add
xlat
add
xchg
xor
in
testl
mov
xchg
dec
xor
das
int3
repz
mov
mov
cwtl
jmp
xchg
lods
sti
xor
dec
out
mov
push
pop
lock
cwtl
mov
out
adc
xlat
aas
push
adc
mov
jb
fwait
icebp
xchg
mov
mov
inc
les
inc
pusha
push
fsts
xor
fstpl
lods
fidivrl
jae
shl
add
sbb
inc
push
fidivrs
clc
into
lret
xchg
sahf
dec
mov
daa
in
aam
lock
jle
jne
cmp
es
enter
xchg
xchg
mulb
mov
out
out
loopne
dec
fcomip
mov
cwtl
xchg
mov
sub
pop
mov
mov
sub
pop
ljmp
mov
jno
jne
push
addr16
faddl
call
mov
adc
push
mov
mov
or
out
rclb
cmpsb
inc
dec
dec
mov
sub
test
jp
sbb
fwait
jbe
sbb
fidivl
adc
sbb
les
nop
mov
xchg
mov
or
xchg
adcl
loopne
xchg
mov
loopne
pop
shlb
shll
mov
mov
cli
mov
mov
lock
mov
mov
inc
in
aad
xchg
fcoms
les
jns
xor
mov
mov
fcoml
data16
xchg
movsb
fdivrl
xlat
push
cwtl
xchg
mov
dec
clc
xchg
pushf
adc
loopne
int3
push
push
ret
mov
icebp
pop
adc
cmp
mov
fdivr
mov
les
sbb
xchg
mov
jp
subl
stos
mov
je
jecxz
jbe
out
push
xor
out
call
jbe
lahf
cmp
test
push
repz
cmp
push
jns
fistpl
push
pushw
subl
pop
lea
pop
lea
call
mov
push
push
aas
bnd
mov
fisttpll
push
inc
adc
xchg
aas
jae
ret
xor
xchg
jnp
jle
loopne
or
std
loop
test
imul
test
scas
lods
xchg
cmpsb
add
mov
pop
pusha
lock
jp
mov
lret
or
sbb
popa
std
xor
mov
adc
iret
call
pop
sub
sub
loopne
cmpsl
cwtl
addr16
lcall
in
lcall
outsb
shll
test
loopne
inc
popa
rorl
jb
mov
movsbl
test
cmp
inc
or
shrb
mul
add
xchg
pusha
adc
cmp
loopne
std
mov
xlat
sub
aad
hlt
out
dec
mov
pop
iret
xchg
pop
mov
mov
arpl
jp
std
push
jmp
jmp
push
pop
xchg
mov
push
pop
cli
pop
test
adc
sbb
xchg
das
push
mov
mov
add
pop
out
mov
ja
nop
ds
jmp
mov
loopne
test
push
fwait
mov
or
mov
ds
push
or
sub
lock
addr16
mov
leave
out
pop
and
mov
fistl
orl
sub
add
loope
aad
mov
inc
add
jbe
or
pop
repz
or
jb
push
dec
pop
jo
xor
adc
popa
mov
cmp
addr16
jge
dec
add
push
lcall
pop
ret
nop
repnz
daa
icebp
cmpb
testl
adc
outsb
pop
scas
xchg
xchg
jg
mov
repnz
in
xchg
xchg
pop
sub
jp
arpl
sbbl
xchg
outsb
jae
data16
sbb
repz
pop
icebp
clc
xor
outsb
sbb
mov
push
repz
push
jno
data16
loope
cmp
add
mov
call
fs
adcb
popf
adc
out
xchg
mov
mov
push
add
sbb
popa
pushw
fsqrt
bound
shrb
mov
cwtl
dec
sbb
jle
jno
gs
imul
out
repz
push
mov
adc
sub
push
cli
movsl
enter
arpl
jns
adc
push
and
xchg
cmpb
outsl
in
gs
lret
sub
mov
shll
dec
pusha
jecxz
mov
jecxz
outsl
adc
call
fisubrs
adc
adc
jp
xchg
dec
faddp
jp
adc
iret
cmpsb
mov
xchg
test
mov
call
mov
jno
mov
cmpsb
clc
clc
xchg
xchg
sub
repz
add
jp
lds
xchg
jp
xlat
xor
ffree
mov
adc
mov
arpl
pop
fs
xchg
dec
xchg
shl
pusha
adc
mov
mov
mov
repnz
mov
into
adc
sub
add
cmp
sub
mov
mov
outsb
adc
nop
repz
fmull
mov
pop
adc
repnz
push
mov
ds
mov
mov
mov
jp
out
sahf
repnz
nop
ret
sbb
icebp
cmpsb
popa
lret
push
xchg
mov
fdivr
repz
jbe
stc
mulb
push
mov
sbb
cli
jo
lock
aad
fcompl
outsb
je
jae
push
xor
stc
test
xchg
idiv
jbe
jge
pop
dec
ljmp
mov
cmc
jae
mov
in
sbb
jns
addl
out
mov
addr16
jns
ja
mov
push
jne
cli
fsubl
iret
testb
sbb
call
sbb
stc
test
or
jo
jo
stos
push
ljmp
les
lock
out
in
pop
jae
je
in
ds
or
sahf
or
popa
or
in
push
lret
xor
mov
lret
dec
cmc
jmp
mov
in
push
out
cmpsb
adc
sub
aaa
xor
rcll
fidivl
push
sbb
nop
jo
xchg
adc
test
in
sbbl
push
dec
xchg
jl
lock
mov
and
adc
out
mov
or
pop
lret
xchg
mov
mov
cltd
rcrl
ljmp
mov
dec
mov
sahf
negb
mov
mov
in
xor
rolb
mov
mov
je
inc
xchg
mov
mov
inc
loope
addb
sub
lods
xchg
xchg
insl
mov
enter
je
mov
loop
xchg
adc
fcompl
aaa
push
std
imull
mov
inc
pop
mov
lret
test
push
mov
mov
cmp
das
les
insl
pushf
fsubrl
jns
xchg
mov
repz
mov
sahf
andb
in
pusha
cmpsl
xor
xor
shr
enter
inc
out
mov
int3
into
xor
pop
loop
popf
jecxz
cmp
push
cltd
mov
xchg
adc
test
ret
jl
jle
cmp
pusha
sbb
repnz
loopne
push
xchg
out
fsubrs
repnz
and
mov
xor
cs
xor
pop
mov
sbb
out
push
inc
dec
add
xchg
xor
mov
mov
add
sbb
test
and
xor
sbb
mov
push
adc
xchg
xor
stc
xchg
mov
xchg
das
push
test
mov
out
das
mov
jle
jecxz
xor
add
push
jb
mov
mov
mov
shlb
nop
xchg
push
or
loop
mov
scas
iret
cs
sbb
mov
xchg
push
xchg
and
cltd
mov
adc
sahf
cwtl
push
xlat
in
mov
mov
fcmovnbe
mov
mov
popa
aas
out
mov
stos
jb
cmc
pushf
jmp
jle
mov
roll
mov
mov
int3
frstor
aad
inc
adc
add
adc
dec
outsl
mov
mov
stos
mov
loope
rolb
xor
sbb
and
jle
xchg
adc
and
ficoml
pop
fidivrl
subb
push
outsl
outsb
jmp
adc
in
dec
js
iret
mov
xchg
test
mov
out
leave
call
sbb
add
xorb
in
push
inc
test
aam
int
pop
repz
mov
or
mov
lods
shll
cmp
shrb
mov
mov
movsb
mov
ja
pushf
mov
pop
rcl
adc
xchg
mov
test
mov
clc
jmp
insb
lock
addr16
jl,pn
shr
push
cmpb
xchg
push
push
xor
pop
mov
push
mov
pop
and
or
cwtl
rorb
dec
pushf
cwtl
cmpsb
cmp
xor
cld
lret
mov
in
lcall
xchg
pop
leave
pop
orb
dec
mov
fldcw
xor
mov
and
ds
out
mov
loop
inc
aaa
cmp
jle
jno
pop
cmpsl
dec
cltd
inc
sub
jae
stos
lahf
mov
or
push
cli
mov
mov
mov
nop
dec
cwtl
clc
mov
stos
fstpt
mov
pop
pusha
mov
loop
mov
rorb
mov
adc
or
jp
adc
cwtl
push
into
push
movsl
pop
lret
push
inc
pop
cwtl
cmpsb
mov
mov
push
mov
nop
xor
arpl
cmpsb
fsubr
jge
rorl
and
into
push
into
fmul
fwait
adcl
scas
and
jno
xchg
jecxz
adcl
mov
mov
fcoms
aad
and
mov
mov
sbb
xchg
push
in
mov
scas
icebp
bound
inc
xor
jns
fdivrp
sub
mov
nop
mov
push
fs
test
test
jns
scas
ds
jns
adc
mov
or
adc
ds
loopne
rorb
add
xchg
ss
jbe
test
xchg
push
xor
mov
pop
loop
pop
shll
rolb
enter
push
pushf
push
lock
leave
into
mov
ret
sub
sbb
sbb
push
hlt
outsb
movsb
les
cmp
add
mov
mulb
sub
pop
fmul
sbb
subl
sarb
cmp
mov
lcall
and
sub
push
pop
sbb
mov
cltd
aad
jbe
cmpsb
cmpsl
pop
mov
into
add
dec
mov
or
shll
clc
jle
in
in
and
jge
xchg
cmc
cwtl
push
xchg
jl
or
fwait
cltd
sub
or
pop
out
test
insl
test
ja
cli
shll
mov
inc
sub
mov
pop
popa
xchg
popa
fistl
mov
sub
add
icebp
push
or
xchg
adc
inc
mov
add
lahf
imul
cmp
mov
cs
movsb
xor
arpl
imul
xor
sub
mov
gs
nop
scas
imul
mov
adc
xor
push
adc
test
pop
bound
nop
addr16
pop
xchg
mov
adc
pop
cmp
mov
cwtl
sub
fdiv
mov
add
fisttps
xchg
pop
xchg
in
xchg
push
push
dec
xchg
out
jg
insb
and
xchg
xor
repnz
dec
push
imul
lahf
pop
icebp
xchg
movsl
sub
inc
cltd
inc
push
out
mov
stos
and
jg
rcrl
pop
dec
mov
rclb
nop
lret
nop
jbe
cmpsb
mov
jae
xchg
inc
cmp
mov
test
mov
mov
mov
notb
test
cmp
cmp
fldl
nop
inc
imul
ljmp
sbb
jecxz
repnz
popa
aad
push
mov
cmc
jl
mov
or
sbb
test
jmp
jmp
adc
push
call
das
push
rorl
stc
repnz
popf
rorb
push
out
int
add
jno
hlt
rol
clc
xchg
in
insl
js
xchg
lock
xor
xchg
shll
ds
ficoms
cmpb
add
add
cwtl
lods
adc
jmp
xchg
pop
mov
gs
mov
dec
pop
fs
or
inc
leave
xchg
ss
nop
add
rcrl
mov
insl
repnz
pop
pop
mov
dec
jb
adc
inc
addr16
jno
or
mov
int3
nop
or
jmp
pusha
ss
nop
in
out
mov
push
xchg
jns
mov
sbbb
sbb
push
push
shrb
jecxz
sub
jl
dec
mov
icebp
push
cmp
adc
inc
scas
rcr
ja
addl
subl
call
movsb
pop
repnz
sti
mov
mov
sbb
loopne
sti
movsb
add
shl
dec
cwtl
dec
stc
popa
cmp
mov
lret
jp
mov
mov
xchg
aad
jge
loopne
dec
mov
or
jbe
cltd
aad
adc
std
jb
dec
xchg
cmp
movb
out
stos
push
sti
aad
inc
fcomp
sbb
pop
enter
out
mov
add
jl,pn
fisubrl
fwait
jae
adc
jne
sbb
xchg
fwait
push
jge
jo
mov
mov
xor
in
jge
cmp
jno
xchg
push
cmp
je
nop
pop
fisttpl
sbb
adcl
adc
mov
sub
leave
jo
rorb
xchg
adc
xchg
in
fwait
jae
in
jp
sbbb
shll
cmpsb
sbb
and
add
mov
test
mov
mov
insl
xchg
xchg
sbb
push
aad
xorb
fmull
std
out
out
mov
clc
or
icebp
rcll
dec
xchg
call
ret
aad
cltd
adc
mov
cmp
xchg
or
rcrb
sahf
stos
ss
scas
mov
loopne
dec
rcrl
fwait
hlt
enter
mov
cwtl
fcomps
push
mov
pop
xchg
cmc
mov
cld
fsub
inc
clc
aas
sub
xchg
call
nop
fdivrs
xchg
popf
imul
push
xchg
stc
mov
xchg
xor
push
jns,pt
xchg
pop
fwait
sub
dec
push
lods
mov
inc
lock
push
mov
xchg
outsb
imul
or
cmp
xchg
cmpsb
pop
aad
aam
jno
pop
cmpl
nop
xchg
xchg
cmpsb
sbb
test
push
stc
cmp
int
ds
subl
jns
fcomps
sub
test
mov
pop
cmpsb
cld
add
inc
jmp
mov
hlt
sbb
adc
mov
mov
rcl
pop
mov
pop
shll
js
adc
shrb
push
add
in
dec
dec
lret
stos
inc
cli
push
adc
cwtl
sub
dec
jmp
or
jne
or
or
push
scas
cli
or
add
fadd
mov
adc
in
enter
shrb
mov
mov
or
lahf
pop
rcrl
sub
cmp
push
mov
mov
adc
jne
add
pop
cwtl
add
add
aam
js
xchg
jno
jbe
jmp
fcmovnbe
dec
xchg
test
fcoms
ret
js
jbe
cltd
push
jbe
cmpsl
inc
sahf
pushf
jb
rcrb
movsl
lret
mov
add
adc
adc
aam
pop
cmpl
dec
stos
cmpsb
clc
pop
or
cmp
push
mov
sbb
xor
clc
adc
cmp
cltd
adc
push
std
subl
pop
dec
adc
pop
mov
push
push
xchg
ret
adc
hlt
daa
xchg
test
push
insl
inc
jb
jge
scas
clc
mov
push
test
mov
repnz
lret
push
jg
mov
mov
test
outsl
cmpsb
adc
xchg
sub
ja,pn
or
push
mov
jecxz
pop
jns
ljmp
mov
bound
cs
push
out
jno
es
cmp
xchg
cwtl
data16
dec
cmp
call
lock
cmpsl
push
adc
push
adc
and
add
orl
test
xor
js
cli
xchg
clc
adc
mov
mov
inc
xchg
push
dec
out
push
test
and
dec
stos
int3
mov
insb
inc
xorl
call
push
out
xchg
or
in
enter
jge
clc
stos
sahf
icebp
lahf
pop
fstps
add
stos
xor
js
in
fnstenv
or
loop
pop
push
roll
inc
pop
jmp
lods
add
xchg
xchg
mov
outsb
lea
xchg
pop
aad
cltd
out
jl
sbb
aaa
push
ret
jp
stos
cmc
cmp
mov
sub
push
add
sbb
setno
jae
push
testb
mov
out
jbe
decl
int3
and
out
pop
popf
cli
pusha
sub
push
pop
xchg
mov
dec
out
icebp
or
xchg
xchg
cwtl
add
cmpsb
dec
repnz
js
cmp
rclb
sub
cmpsb
sti
dec
add
jbe
fiadds
or
into
mov
push
ljmp
mov
pop
sbb
sub
dec
sub
mov
mov
pop
add
loopne
bound
mov
sbb
pop
mov
xchg
xchg
pop
rclb
jg
ds
cltd
adc
loope
push
pusha
cmp
in
jb
push
dec
xlat
out
pop
sbb
aad
push
jb
jnp
aam
fdivs
cmp
mov
adc
hlt
jp
test
cmp
aad
push
fsts
adc
pop
or
fdivs
stos
jp
pop
pop
and
call
adcb
js
mov
xchg
mov
adcb
cli
aam
ss
sub
push
push
cs
loopne
jno
mov
dec
pop
push
inc
jne
xchg
call
popa
pop
pushf
push
repnz
pop
push
cltd
xchg
sahf
add
lds
int3
daa
mov
dec
cs
cmpsb
push
jp
dec
stc
sbb
mov
cmp
test
xlat
jns
or
ss
jne
test
aad
outsb
jbe
lds
ret
add
jle
rcr
mov
outsl
jno
inc
inc
jne
and
inc
jle
and
std
out
xchg
xchg
dec
or
cltd
push
mov
sub
cmpsb
mov
fdivrl
add
stos
lds
jmp
dec
mov
andl
mov
nop
mov
pop
cwtl
push
pop
insb
iret
xchg
repz
lods
mov
test
loopne
jg
in
cmpsl
fadds
cmp
or
sbb
push
ja
std
push
jge
sbb
jmp
adc
int3
ss
inc
mov
movb
pushf
call
dec
call
jb
inc
mov
jg
push
popa
addl
jns
mov
cmpsb
dec
mov
xlat
jl
cmp
lahf
mov
bnd
mov
int
adc
xchg
test
mov
mov
lahf
inc
call
repnz
dec
xor
fildll
mov
mov
sbb
jmp
hlt
in
pop
lods
xchg
and
push
and
add
clc
mov
rcll
add
sahf
adc
aaa
jp
sbb
mov
mov
mov
rcl
aas
insb
pushf
jns
stos
dec
pop
mov
out
subb
inc
sbb
lahf
fsubs
mov
in
mov
add
shrb
mov
fmuls
adc
cmp
mov
rcr
mov
xchg
inc
leave
fcmovu
stos
add
out
fwait
jo
pop
icebp
sbb
mov
iret
mov
pop
jns
xor
cmp
inc
cmp
push
std
mov
xchg
fistpl
mov
mov
adc
pop
push
jge
stc
stos
insb
sahf
and
std
aad
cmc
icebp
xchg
mov
and
aam
cmpsb
xchg
mov
test
je
xchg
dec
pop
mov
and
pusha
or
call
std
push
xchg
aad
xchg
out
xchg
and
push
add
repnz
hlt
scas
fsubs
or
mov
in
cwtl
scas
push
xlat
out
push
and
into
adc
cld
out
adc
lods
ljmp
movsb
test
jo
and
das
push
push
movsb
cmpsb
clc
scas
or
data16
or
push
imul
and
mov
stos
inc
jp
mov
fidivrl
test
add
xchg
mov
mov
je
incb
cmpsb
pop
and
lock
push
pusha
lods
sub
divl
ds
or
scas
cli
xchg
mov
mov
punpcklbw
fwait
cmpsb
aaa
dec
mov
xor
popf
push
movsb
sbb
jmp
nop
nop
lea
mov
xor
push
je
xorl
xor
mov
adc
orl
int3
or
into
cli
sub
mov
xchg
rcrb
ret
pop
mov
lods
mov
sbb
imul
js
or
adc
dec
mov
ljmp
imul
mov
stc
imul
cli
cld
or
and
and
xchg
mov
pop
dec
lock
clc
leave
bound
fidivrl
xchg
or
lcall
ror
clc
leave
lcall
lods
aad
cmp
cltd
mov
enter
movsl
lock
stc
movsb
fisubl
stc
loop
and
scas
clc
les
rorb
aas
push
mov
push
xor
out
pop
ja
push
fstps
cltd
fistpll
mov
cmpsb
xchg
sbb
or
push
xchg
cmp
mov
xchg
ja,pn
aaa
sbb
lods
adc
mov
notb
cli
mov
out
stc
push
adc
add
inc
push
xchg
adc
pop
xchg
inc
pop
in
xchg
and
xchg
inc
pop
pop
mov
cmp
mov
scas
push
or
mov
test
pop
and
mov
xchg
inc
push
stos
lahf
push
xchg
lods
in
lock
scas
dec
lahf
sbb
insb
leave
js
xchg
jo
lods
cmp
adc
mov
iret
dec
jnp
xchg
push
lds
sbb
adc
push
sbb
adcb
xchg
shrl
xchg
xchg
xchg
in
and
ljmp
pop
fists
push
fwait
sbb
or
jb
fsubrl
pop
and
data16
fs
movsb
pop
push
js
test
insl
mov
adc
or
or
xchg
sahf
jg
adc
jno
lea
xchg
and
mov
xchg
popl
into
push
cli
mov
inc
mov
pusha
xchg
jno
jb
clc
les
outsl
je
popf
test
add
js
sub
xchg
mov
testb
rcr
daa
xchg
insl
cltd
movb
lods
push
mov
push
mov
fbld
sbb
lods
jns
and
push
fdivrs
inc
mov
add
test
cmc
stos
jae
jecxz
adc
pop
xchg
insb
je
mov
ljmp
stos
adc
cmpsb
aad
loopne
mov
das
sbb
pop
mov
dec
jno
test
jbe
xlat
imul
xchg
adc
pop
xchg
jg
ds
loope
adc
cwtl
jo
mov
xchg
adc
push
ret
aas
push
inc
ret
inc
mov
shlb
fcmovb
ds
cmpb
outsl
mov
cmp
mov
mov
pop
movsl
movsb
ds
cltd
mov
shr
cmpsl
aad
jge
cmpsb
xchg
jp
dec
cmpsl
lret
lods
xor
js
notb
enter
loopne
or
rcl
fstp
and
je
pop
js
add
mov
mov
jns
je
mov
fmul
xchg
pushf
or
sbb
adc
js
pop
xchg
pop
out
mov
iret
adc
loopne
mov
aas
nop
mov
outsb
mov
lahf
fwait
or
dec
ffreep
repnz
push
les
movsl
rep
xorb
push
clc
jns
cmpsb
pop
pusha
and
lret
xchg
dec
call
out
mov
in
insb
addl
mov
loopne
mov
fs
loope
adc
mov
pop
xchg
push
pusha
add
es
jae
pop
mov
inc
fwait
mov
cmpsb
jae
icebp
pusha
outsb
inc
test
out
clc
pop
or
shlb
xor
adc
sahf
or
icebp
sbb
add
sbb
out
mov
mov
jns
pop
imul
add
sbb
sub
mov
cmp
call
insl
pop
js
jno
xchg
push
stos
or
nop
scas
add
add
or
ret
add
sbb
mov
lock
jb
inc
repz
fisubrs
inc
push
mov
nop
sub
cmpsl
xor
lods
mov
rorl
jmp
out
cmc
repz
xchg
std
movsl
out
pop
jns
mov
adc
jge
or
cmp
out
test
sbb
movsl
cmp
stos
inc
xchg
push
mov
call
mov
dec
cwtl
andb
inc
popa
dec
mov
call
push
adc
mov
movsb
adc
cmpsb
mov
leave
and
jp
negb
pop
fsubrl
pop
gs
movsb
jne
leave
push
mov
cmp
fisttpll
sahf
test
adc
sbb
hlt
fucomp
je
xor
pusha
lds
mov
repnz
mov
aam
gs
icebp
out
mov
rcll
popf
mov
and
xchg
pusha
je
out
inc
cli
or
cmp
pop
sub
pop
lds
add
movsb
jb
xchg
stc
xlat
push
fldt
sbb
dec
insl
add
xchg
stos
mov
mov
fisubs
test
xchg
iret
stos
sbb
ja
std
movsb
nop
inc
mov
data16
hlt
jbe
in
jo
push
jo
adc
pusha
movsl
lcall
ljmp
or
out
add
pop
jno
push
loopne
hlt
mulb
mov
mov
adc
sbb
xchg
arpl
xchg
jp
out
push
mov
xchg
fdivrs
adc
mov
adc
lret
mov
push
imul
push
mov
int
orb
xchg
rcrb
adc
leave
adc
ficoml
in
and
cld
icebp
pop
mov
rorb
daa
call
mov
fmull
iret
ljmp
and
lea
repnz
aas
sub
inc
repnz
mov
loopne
lahf
jne
jnp
insb
pusha
jae
cmp
cmpsb
and
pop
mov
jo
insb
insl
stos
adc
adc
xor
push
mov
add
and
sbb
cmp
or
jns
jns
js
int3
mov
pop
std
pusha
nop
mov
mov
fldcw
loope
out
jecxz
daa
adc
cltd
mov
sub
out
xor
mov
mov
insl
loop
mov
loope
mov
lret
jp
pop
pop
xchg
andps
mov
jle
andl
mov
sbb
inc
push
push
jle
test
sbb
dec
and
repnz
xchg
in
arpl
jns
add
into
dec
popf
loope
jo
push
std
or
xchg
pop
xchg
mov
imulb
iret
imul
lahf
fisubl
jecxz
mov
nop
xchg
mov
popf
mov
push
xlat
xchg
xchg
clc
stos
pop
push
testb
xchg
and
pusha
adc
sbb
xlat
fsubrs
out
out
sbb
add
loopne
icebp
push
mov
lods
or
rorb
mov
push
and
cmpb
mov
mov
xchg
pop
in
dec
rorb
ficompl
orl
push
mov
jnp
sub
mov
clc
cmp
loop
mov
jns
mov
cli
xchg
xchg
out
xchg
jns
mov
cmp
mov
mov
push
cmc
mov
xchg
mov
andl
loop
js
orl
add
and
flds
mov
push
iret
xchg
xchg
repnz
push
jne
cmp
enter
test
out
xchg
fidivs
lret
clc
mov
popf
mov
mov
rorb
add
push
lock
in
jbe
sub
xchg
cwtl
pusha
mov
mov
xor
movsb
out
add
mov
mov
rolb
inc
movsb
ljmp
rcrb
fisttps
sbb
loopne
mov
sbb
xor
xlat
dec
jle
or
pop
out
aas
ss
orb
mov
cmp
cld
call
xchg
loopne
push
push
adc
add
mov
adc
dec
or
pushf
jp
mov
cmpsb
push
cmc
jg
pop
cwtl
dec
icebp
out
aas
mov
pop
loope
test
div
mov
mov
outsl
sub
pop
jbe
nop
adc
dec
dec
cmp
insl
repnz
mov
mov
mov
or
ret
fidivs
fcomps
fwait
jae
repnz
mov
push
fldenv
mov
pop
jae
and
cmp
and
push
incl
test
movsl
sub
call
jecxz
iret
mov
xchg
enter
sub
fidivrs
jns
dec
mov
push
test
fimuls
out
add
cwtl
jge
rcll
jp
sbb
push
fwait
dec
push
sahf
data16
mov
inc
jecxz
leave
scas
scas
cwtl
adc
aam
imul
outsl
js
mov
dec
sti
xchg
jnp
fdiv
adc
mov
push
enter
ja
push
push
and
filds
and
popf
xchg
xor
leave
mov
sub
stos
mov
mov
jmp
xor
cwtl
lea
cs
push
wrmsr
scas
cmc
adc
jp
repz
addb
idivb
mov
loope
in
add
orb
push
fimull
jge
mov
out
xchg
xchg
push
popf
cld
and
lods
dec
and
cmc
jns
jns
out
aaa
and
testl
mov
lock
jns
mov
bound
icebp
mov
aam
cmpsb
mov
add
dec
xor
stc
jle
jbe
lahf
jmp
push
mov
divb
repz
xchg
or
xchg
mov
arpl
xchg
lahf
cmp
fisttpll
xchg
mov
addl
sahf
and
enter
leave
mov
scas
outsb
mov
cmp
fs
adc
outsb
pop
mov
jp
cmpsl
sbb
fistpl
xchg
jecxz
xchg
dec
inc
fdivs
imul
cmpsl
mull
dec
stos
pushf
test
xor
icebp
adc
imulb
cltd
ljmp
xchg
stos
mov
test
in
sbb
pusha
mov
jns
add
insb
scas
mov
mov
xor
mov
mov
arpl
lcall
ret
xor
out
mov
xchg
scas
and
jno
xchg
rcrl
xchg
adc
xor
in
adc
dec
sbb
xchg
jno
pop
mov
push
outsb
hlt
pop
icebp
jnp
jo
inc
xchg
out
outsl
aad
mov
pop
sbb
pop
and
xchg
cltd
loopne
data16
fistps
data16
sti
hlt
push
pop
add
push
leave
mov
out
ja
adc
xchg
les
scas
ffree
das
ror
adc
pushf
loop
jp
mov
mov
addb
jle
sbb
xchg
out
ljmp
cmp
push
inc
int3
fsub
mov
or
data16
insl
mov
or
xchg
sub
xchg
ljmp
push
fnstsw
dec
or
pop
scas
cs
add
pop
adc
mov
fcom
ja
ds
out
pop
leave
inc
enter
fmuls
nop
std
push
and
or
add
cmp
or
adc
std
xchg
mov
ret
xchg
mov
jle
push
inc
loop
dec
cwtl
leave
lock
in
lods
xchg
adc
enter
xchg
add
je
xchg
fs
jnp
jecxz
push
fwait
xchg
add
xchg
sbb
ja
inc
clc
sub
enter
push
xorb
mov
mov
cmp
sbb
imul
and
add
movsl
adc
sahf
aas
cli
clc
inc
sbb
inc
push
sbb
stos
andb
setl
cli
cltd
jp
jmp
xchg
js
pop
inc
xor
and
add
mov
sarl
insb
test
mov
cmpsb
das
cs
mov
jmp
cld
push
pop
cwtl
mov
mov
add
adc
xor
in
bound
add
pop
scas
out
jb
cmp
rcrl
xor
in
mov
mov
das
fcoml
sub
ss
lods
aad
dec
in
mov
push
push
cmpsl
xchg
mov
scas
mov
inc
in
popf
int
inc
push
xor
mov
psubusb
mov
in
adc
scas
cs
out
addr16
push
mov
mov
mov
fcoms
js
les
adc
cmp
adc
inc
fcoml
fidivrs
pop
adc
aas
out
test
inc
xor
mov
leave
jle
push
and
imul
xchg
push
idivb
xchg
mov
mov
xchg
adc
and
cltd
ljmp
mov
push
xor
jns
sbb
and
xchg
jmp
jb
xchg
mov
mov
shlb
outsb
out
js
xchg
jne
in
outsl
jne
xchg
into
xsaveopt
in
jmp
jecxz
in
ja
add
xchg
stos
out
mov
outsl
dec
shlb
mov
xchg
xchg
out
cmpxchg
lret
scas
sub
sahf
les
jmp
idivb
or
mov
jp
in
dec
adc
nop
push
ror
sub
test
out
xchg
push
mov
xchg
cld
incb
or
stos
lds
sti
dec
mov
pop
es
mov
pop
bound
and
popf
lock
jno
icebp
dec
cs
push
std
or
outsb
dec
xchg
or
pop
into
mov
out
pop
cmpsb
jmp
inc
xchg
push
ret
inc
pop
sbb
xor
test
pop
jne
movsb
xchg
mov
in
fwait
dec
cltd
cmpsb
jl
pop
test
cli
sbb
repnz
add
dec
jmp
pop
sbb
popl
mov
shl
pop
push
lahf
addr16
pop
xor
fsubp
repz
sbb
cmp
mov
rcl
xchg
addl
sbb
inc
into
clc
and
imul
ret
xor
or
mov
xchg
dec
das
or
jmp
repnz
int3
shlb
add
and
xchg
pop
mov
or
mov
movaps
mov
xor
sbb
mov
cltd
mov
aam
out
sarl
mov
jecxz
cli
push
xor
inc
mov
add
jge
push
or
cmp
inc
aaa
push
outsb
mov
cmc
movsl
mov
xchg
cli
xchg
mov
xor
xchg
out
inc
movsl
xchg
sbb
xchg
jl
cmc
popa
xchg
pop
fldl
xlat
cmpsb
cmp
xor
mov
rcrb
andl
out
cmpsb
xlat
stc
arpl
inc
pop
mov
sub
mov
xchg
adc
inc
scas
arpl
jle
int
sub
insl
mov
cwtl
jns
cld
xlat
dec
jo
enter
xchg
lcall
ljmp
scas
fdivs
add
xorb
neg
imul
dec
movsl
add
ljmp
pop
push
and
notl
outsl
mov
unpcklps
shl
rclb
mov
and
repnz
sbbl
and
arpl
adc
lret
xchg
mov
iret
call
repnz
frstor
cmp
inc
in
and
lock
push
jle
adc
cmp
mov
inc
jmp
adc
pop
shll
in
mov
dec
push
push
push
mov
aam
jo
pop
movsl
std
mov
inc
adc
pop
test
not
in
imul
ficomps
cmpsb
cwtl
mov
sbbb
inc
xchg
mov
jg
insl
jle
dec
cmc
movsl
cwtl
add
mov
mov
adc
lock
out
imul
sbb
insb
sarb
fst
pop
add
dec
pop
jle
loop
sbb
jp
testl
mov
sub
and
mov
outsb
add
test
out
popf
ss
add
fdivr
sbb
out
xchg
xchg
xchg
loop
jne
fstps
push
fisttpll
aad
cmp
loop
adc
mov
mov
sahf
out
xchg
adc
fadds
inc
add
jns
frstor
xor
fiadds
add
push
pop
add
pop
cli
insl
jge
add
add
inc
fadds
mov
mov
ss
jns
in
icebp
dec
add
addb
sbb
push
push
pop
nop
jl
sub
and
mov
nop
push
jecxz
movsl
in
arpl
push
lock
fcomps
scas
mov
notb
fldt
stos
jne
ficoml
daa
mov
pop
or
cmpsb
int3
mov
popa
xor
repnz
fsubs
xchg
push
cltd
xchg
mov
push
jns
push
mov
ds
iret
imul
lea
mov
cli
mov
mov
mov
mov
je
push
outsb
cwtl
test
add
lret
pop
sahf
sbb
clc
pop
ret
cs
cmp
pop
mov
pop
les
subb
adc
repnz
mov
popf
out
mov
xchg
in
xchg
dec
ds
hlt
cmp
subl
nop
mov
pop
push
pop
mov
sub
push
pop
xchg
lods
out
cltd
add
lds
jge
arpl
gs
bound
sbb
mov
lds
push
pusha
add
lcall
sahf
or
and
cs
test
xchg
into
jae
out
cmp
sbb
mov
or
add
int
cmp
adc
aad
test
and
xlat
xchg
pop
pop
jg
pop
in
test
inc
aad
push
push
cltd
push
add
xchg
add
in
dec
loopne
rcr
cltd
sbb
sub
lret
cmpsb
shlb
xchg
cmp
jmp
loop
fdiv
mov
rorl
aad
dec
pusha
adc
ss
mov
inc
push
loop
ja,pn
xor
xchg
popa
inc
pop
rolb
mov
clc
push
mov
push
in
xor
or
push
mov
insl
dec
hlt
testl
filds
cmpsb
cmp
dec
jle
add
xchg
push
mov
xchg
iret
jb
inc
pop
mov
pop
pop
icebp
dec
cwtl
or
rolb
fsub
xor
mov
popa
in
push
repnz
mov
xor
or
gs
mov
test
test
cmc
mov
test
sbb
lahf
outsb
dec
jmp
mov
add
aad
outsb
lret
in
mov
shlb
mov
fisubl
icebp
shrb
mov
or
scas
fcmovu
outsb
dec
adcb
mov
cmc
xchg
jns
mov
enter
mov
inc
sbb
pop
insl
dec
adcb
push
mov
adc
dec
negb
hlt
out
pop
dec
cltd
jle
enter
mov
and
sahf
xor
orl
mov
lret
xchg
daa
test
pop
outsl
xchg
mov
inc
clc
pushf
add
shl
add
and
scas
pusha
xchg
je
and
fcomp
inc
mov
in
sahf
mov
lea
loopne
inc
xrelease
mov
or
repnz
pop
test
aaa
cmpsb
cli
stos
shl
cmp
pop
mov
loop
xchg
dec
pushf
dec
add
and
push
sbb
repnz
sbb
insb
data16
outsb
daa
mov
and
jno
orl
sbb
ror
xchg
dec
adc
pop
mov
iret
and
xchg
cmpsb
jl
push
sub
loopne
add
mov
arpl
mov
jne
pushf
cli
inc
mov
cmpl
andb
fs
clc
or
stos
cmp
lret
sbb
fildl
outsb
push
xchg
nop
cltd
or
push
scas
xchg
es
mov
aaa
xchg
icebp
cmp
cmpsb
lcall
cmp
push
std
mov
adc
and
pop
and
mov
or
fcoml
pop
push
or
test
enter
aad
push
push
ja
pop
xchg
jae
lret
outsb
mov
and
into
sbb
add
lret
push
pop
ss
push
cmp
cmp
pop
lea
sub
mov
movsl
xor
loope
mov
sbb
xchg
xchg
and
adc
mov
push
push
mov
fcomps
mov
or
mov
repz
out
and
jb
mov
dec
cmp
cs
xchg
cmp
in
dec
lret
mov
enterw
xor
into
xchg
aad
inc
add
xchg
xchg
aad
fidivl
fsubl
and
add
fcmove
mov
stc
lcall
adc
add
fwait
in
sarl
clc
mov
and
rcll
jne
jbe
iret
xor
scas
xor
out
unpcklps
imull
add
xor
xchg
dec
and
sbb
xchg
pop
lock
lret
add
leave
push
testb
inc
aas
fcmovbe
mov
mov
dec
sub
pop
mov
jmp
cwtl
or
inc
sbb
repnz
jl
loop
clc
sbb
enter
mov
in
or
or
out
pop
and
pop
cmp
in
xchg
pusha
jg
push
xchg
cmc
pushf
mov
mov
xor
cwtl
mov
cltd
imul
test
mov
fnstenv
icebp
push
sbb
jmp
xchg
xchg
jle
pop
ficompl
loopne
pop
and
jae
shlb
xchg
sar
movsb
sub
mov
push
push
pop
hlt
mov
mov
mov
cmpsb
pushf
and
lea
mov
mov
jp
aaa
fnstenv
xchg
dec
pop
test
xchg
aas
inc
xor
aam
xchg
adc
leave
mov
pop
pop
call
xchg
loopne
leave
outsl
test
test
in
lret
jnp
xchg
fists
push
cmp
xor
xchg
xchg
ret
mov
jge
testb
fsubs
add
popa
loopne
dec
push
mov
xlat
out
push
mov
divl
pop
lahf
shrb
mov
fiadds
in
aad
rorl
push
testl
ds
xchg
or
or
cmp
or
nop
push
and
or
sbb
notb
and
ja
and
sbb
adc
das
out
js
inc
sub
mov
mov
je
push
or
rcll
stos
in
cmpsb
jae
inc
and
mov
scas
push
mov
mov
dec
adc
out
scas
icebp
insl
fwait
jmp
fistpl
ret
js
ljmp
cltd
popa
pushf
push
cltd
mov
jbe
jmp
cmpsb
pop
sub
out
and
mov
cmp
mov
cmpsb
sub
aam
cmpsb
push
or
push
insl
mov
or
or
or
aam
les
pop
dec
jno
mov
adcb
dec
faddp
push
lds
stos
push
out
shrb
mov
addb
mov
jb
mov
or
or
mov
dec
iret
adc
mov
addb
ja
shrl
orl
jae
adc
push
pusha
xchg
xchg
enter
cmp
test
mov
add
mov
inc
repz
cmp
dec
test
push
pop
clc
jb
out
sti
mov
addr16
xchg
adc
out
loop
rorl
mov
mov
jbe
notw
cmpsb
gs
fstpt
mov
jmp
insl
push
xchg
cmpsb
mov
test
sub
jge
pop
mov
and
dec
loope
sbb
sbb
xor
jns
repnz
stc
xchg
fcoms
aas
aaa
es
nop
add
mov
repz
cmp
lret
mov
stc
fdivrl
adc
xlat
ljmp
inc
and
mov
sar
scas
rcr
pusha
or
and
lahf
aas
imul
psubq
aas
data16
fdivrl
aam
adc
cli
fwait
add
jp
insb
in
xor
aad
testl
sub
xchg
jp
xchg
inc
pushf
clc
lods
pop
mov
daa
mov
aad
mov
rclb
in
add
inc
xor
jns
stc
sbb
andb
adc
mov
jp
mov
sbb
inc
ja
adc
or
inc
outsl
iret
ljmp
add
mov
or
adc
add
adc
mov
or
out
xchg
add
in
shlb
in
loope
ficompl
rorl
mov
idiv
and
or
arpl
andb
in
mov
sti
mov
xchg
and
sahf
out
xchg
int3
pop
fstpl
gs
sbb
pop
dec
les
xor
xchg
nop
cmp
pop
aam
test
fsubr
mov
dec
sahf
jl
repnz
pop
gs
in
shrb
sub
jp
mov
sbb
pop
fadds
ljmp
add
push
jne
cwtl
adc
in
mov
push
cmp
jle
shrb
divb
arpl
sub
jnp
mov
stc
cmp
mov
add
lcall
push
jle
and
lret
lret
cmp
cmpb
loope
push
jmp
or
adc
idivl
loope
ja
pop
jno
ret
or
push
repz
pop
or
mov
mov
repnz
add
jecxz
and
or
pop
dec
cmp
ret
test
and
or
mov
ja,pn
orb
or
outsl
push
mov
in
lods
mov
loopne
push
mov
lahf
ret
push
mov
in
mov
std
out
nop
xchg
pusha
movsl
xchg
in
mov
pushf
jg
das
sarb
stos
stc
xchg
add
imul
std
cmp
xorl
inc
popa
inc
dec
push
je
jnp
ja
es
jecxz
pop
jp
pushf
xchg
mov
rolb
loope
xor
jns
mov
sarb
sub
mov
lock
inc
push
mov
dec
mul
cld
sar
movsb
movsb
push
mov
ret
adc
aas
test
mov
in
pop
sbb
push
lahf
mov
lock
negb
fwait
jmp
push
adc
sbb
pushf
jns
insl
mov
sbb
out
mov
xchg
push
pusha
mov
mov
xchg
mov
test
mov
sbbl
or
jb
mov
jmp
addb
xorb
mov
mov
jmp
rorl
sbbb
xor
dec
xchg
psadbw
adc
xor
add
sbb
xor
mov
mov
pop
jb
aad
dec
push
adc
xchg
arpl
popf
cli
cmp
mov
adc
pop
mov
push
stos
and
lods
xchg
adc
jns
mov
sbb
lahf
mov
movsb
xchg
xchg
sahf
not
test
pop
cwtl
jbe
mov
fwait
movsb
jmp
test
dec
push
adc
xchg
fstps
jl
xorl
out
jb
cmpb
lds
adc
mov
ret
andb
mov
jge
jns
fsts
in
pop
lock
mov
xchg
mov
xchg
mov
in
mov
jmp
mov
out
add
test
inc
clc
cwtl
dec
xchg
dec
mov
and
push
pushf
mov
orl
rorl
dec
dec
jns
pop
sub
repnz
adc
ds
lea
icebp
movb
push
sarb
test
mov
icebp
cltd
xchg
std
mov
jo
mov
dec
mov
ds
ss
sbb
mov
ja
rclb
jbe
aaa
sbbb
mov
xchg
jbe
fdivp
mov
adc
adc
test
or
cmc
adc
inc
xchg
pop
stos
out
js
pop
pushf
lcall
mov
push
xchg
in
mov
cmp
es
cmp
testb
fdiv
or
push
xchg
aad
fwait
loopne
es
loopne
fldcw
outsb
repnz
xchg
mov
loop
adc
sbb
cs
xchg
xchg
jne
std
lock
and
fistpl
pop
in
cmp
mov
pusha
insb
pop
mov
insb
inc
loopne
inc
mov
and
mov
cwtl
sbb
stos
or
inc
cmp
into
addl
inc
mov
mov
lahf
cmpsb
imul
cmp
or
jnp
fmuls
test
sbb
mov
test
push
leave
outsl
repz
and
xchg
xor
stc
jns
sahf
testb
push
sahf
xor
sarl
add
or
mov
xchg
push
xchg
scas
mov
push
mov
xchg
insl
cmp
mov
or
leave
mov
add
or
aad
fidivrl
pusha
fistps
jle
insb
pop
je
out
ficompl
ds
or
ret
jp
dec
leave
xchg
orl
jae
aaa
repnz
testl
pop
ds
in
fmuls
or
mov
jns
sbb
out
jae
mov
lds
je
aad
mov
mov
mov
out
ja
lret
jecxz
data16
loope
lods
jle
cli
aas
mov
push
mov
mov
jp,pt
inc
mov
fwait
lock
adc
lcall
dec
ret
sarb
loopne
cmc
jecxz
pop
punpcklwd
adc
out
cwtl
sub
ret
dec
clc
jge
sub
mov
ret
loopne
js
jno
push
repz
dec
jb
jmp
jnp
or
ds
mov
mov
nop
inc
or
cwtl
fidivl
stos
push
add
fisttpl
mov
add
push
xchg
aad
xchg
adc
or
jno
mov
xor
mov
cmpsb
call
stos
pusha
sarl
out
mov
cmpsb
das
sbb
adc
repnz
leave
nop
and
shrl
push
pushw
and
clc
and
pop
iret
stos
or
and
mov
jno
cld
faddp
sub
adc
sub
mov
icebp
xchg
xchg
push
adc
pop
push
mov
mov
sbb
xchg
outsl
pop
and
fsubs
test
mov
adc
sub
fmull
add
xlat
stc
cmp
xor
adc
cld
repnz
push
and
call
mov
jp
test
pushf
and
mov
jecxz
pop
lret
call
pop
jnp
loope
cmp
ret
mov
cmovle
sti
idiv
shll
xchg
dec
aas
add
adc
xor
jmp
fwait
mov
fidivrl
loope
out
pop
push
div
xchg
insb
test
outsb
stos
gs
sarb
nop
mov
hlt
cli
outsb
mov
ja
dec
mov
cmpsb
mov
add
or
or
clc
fwait
or
or
push
cld
jmp
cmpsb
mov
mov
jns
fimuls
adc
pop
dec
mov
mov
push
mov
outsl
and
stc
stc
cwtl
cmpl
or
mov
mov
mov
inc
mov
lods
andb
cmp
sub
data16
movsb
sub
lahf
push
inc
dec
pop
add
sahf
or
pop
mov
ss
jne
movsl
xor
xchg
cli
xorl
aad
jp
dec
pop
cltd
inc
jg
ds
stc
xchg
pusha
mov
sbb
add
stc
or
mov
rcrb
push
jo
push
scas
popl
push
jecxz
cwtl
cmp
pusha
andl
repz
mov
out
xchg
jge
int
xor
aaa
sbb
scas
mov
or
mov
xchg
lock
mov
xchg
mov
rorb
jno
icebp
add
push
mov
or
mov
xchg
cmp
cmpb
out
out
pop
repz
push
adc
idiv
into
add
cld
add
add
adc
outsl
scas
fimull
arpl
mov
ret
xor
mov
push
sub
stos
jle
adc
jg
scas
clc
xchg
nop
addr16
data16
outsl
or
cmp
call
pop
jl
adc
fisubrs
sarb
xchg
add
out
jnp
cwtl
xchg
jl
adc
xchg
sub
push
xchg
clc
hlt
fildl
push
xchg
movsb
dec
mov
aad
call
sbb
lock
xchg
cwtl
mov
imul
mov
sbb
lods
lds
push
ret
shl
les
shlb
jo
cmpsb
in
lock
add
dec
inc
repnz
dec
cltd
xchg
pop
push
push
test
test
xchg
xchg
sbb
mov
dec
adcl
or
fadds
xchg
fimuls
notl
nop
jno
clc
call
push
mov
and
das
pop
xchg
push
sbb
add
adc
push
sub
std
or
clc
jae
push
adc
add
in
mov
outsl
insl
inc
enter
popa
jle
insl
inc
xlat
rorb
push
stc
in
loop
call
inc
inc
mov
cltd
jg
das
xor
jmp
clc
rorb
jl
rorb
xor
add
xchg
add
ss
and
sbb
bnd
mov
jns
cs
rcrb
xchg
cmpsb
add
jns
into
in
fldl
test
sub
jns
sahf
cmpsb
jne
fwait
rcrl
xor
sub
sbb
and
xchg
inc
mov
addb
push
mov
pop
movsb
aaa
sub
decb
adc
xor
mov
in
aas
xor
mov
mov
and
ret
xchg
nop
dec
imul
aaa
and
or
ret
xchg
popf
and
outsl
pop
fwait
adc
test
push
xor
xchg
or
fstps
shrl
cmpsb
data16
out
xor
outsb
mov
mov
fs
xchg
add
pop
aaa
jns
lret
lahf
call
neg
cs
out
aam
test
fsubl
dec
xchg
or
aam
mov
data16
mov
fcomps
mov
xchg
call
xorb
adc
push
out
mov
sub
rcl
popaw
xor
pop
dec
or
fistl
or
xchg
mov
gs
mov
xchg
push
pop
lahf
push
mov
xchg
cwtl
pop
mov
test
mov
cmpsb
pop
adc
pusha
push
mov
in
jns
inc
cmpsb
xor
sbb
test
add
xchg
cmp
fcomp
jge
pushf
cmc
mov
sbb
or
mov
mov
mov
stc
xchg
cmpsb
jo
sub
bound
loopne
out
adc
test
btr
pop
inc
mov
mov
lret
cmp
fildl
shlb
dec
fwait
inc
imul
roll
dec
mov
test
fcompl
mov
lods
decb
mov
mov
nop
push
adc
popl
adc
js
aad
fdivp
push
push
and
push
adcb
adc
xlat
aas
cmp
insl
movsl
and
cmp
notl
sub
mov
pextrw
aaa
dec
repnz
fistpl
pusha
sti
out
sub
roll
aaa
or
shll
adc
lods
cmp
mov
push
adc
cld
sti
jae
and
mov
mov
sbbb
or
pop
cmpl
push
nop
fmuls
xchg
sub
inc
ss
mov
nop
clc
mov
stos
push
cs
mov
imul
iret
adc
sub
dec
mov
sbb
xchg
mov
adc
hlt
dec
ds
ret
mov
pop
lea
and
inc
test
xor
fcoml
mov
cmp
pop
lahf
xchg
xor
xchg
push
push
xchg
sarb
sarl
clc
pop
aaa
jp
pop
and
orb
out
rolb
cmpsb
les
fsts
push
rorb
push
movsb
add
aas
cmp
out
fs
sbb
and
jl
nop
inc
testl
repz
mov
cmpsb
insb
dec
movl
mov
cld
adc
push
and
cvtdq2ps
movsb
add
push
push
iret
pop
movsb
jmp
cmc
sub
lds
imul
stos
enter
in
inc
push
jo
mov
jmp
pop
sbb
push
pushf
dec
adc
cmpsb
or
push
mov
mov
mov
and
movsb
xchg
mov
imul
jb
das
mov
outsb
cmp
dec
lahf
nop
add
pusha
mov
out
push
mov
sbb
fs
out
dec
stc
jbe
pop
out
sub
fisttpl
sub
ds
xor
pop
push
sbb
std
inc
xchg
cmpsb
mov
cltd
push
jl
xchg
test
nop
leave
pop
inc
jge
xchg
test
hlt
test
jnp
fdivrs
cltd
cmp
sub
lret
inc
in
or
lods
inc
jle
cs
adc
or
mov
xchg
cs
cwtl
or
out
stc
pop
cmc
fwait
leave
xchg
xor
sub
hlt
mov
or
fiadds
cmp
cwtl
andb
popl
hlt
test
mov
cwtl
fistpl
scas
cmpsb
add
or
loop
inc
push
das
mov
cmpsb
leave
lods
dec
adc
push
arpl
rcll
ret
pop
roll
sbb
jbe
mov
pusha
xchg
fldcw
xchg
xorb
inc
call
lock
sbb
push
sbb
mov
xchg
jns
xchg
lea
jo
mov
sbb
movsb
or
sti
clc
sahf
lea
xchg
adc
out
jno
mov
inc
jb
jmp
push
fadds
lea
sub
push
aas
mov
jbe
inc
sti
jmp
nop
ret
mov
jb
sub
push
sahf
cmpsb
pop
sub
std
ficoms
ret
sbb
mov
dec
add
add
cmpsb
inc
xor
and
xchg
fcomi
int
imull
sbbb
popf
xchg
xchg
into
add
scas
daa
mov
decb
das
lret
test
hlt
jbe
xchg
mov
add
pop
jnp
mov
popf
and
jg
scas
negl
adc
mov
lea
es
pop
nop
sbb
push
pop
pop
lock
repnz
scas
fmull
cld
fimull
xchg
pop
xchg
out
outsb
jle
adc
adc
imul
xchg
out
cmp
jno
aaa
xchg
inc
xchg
aas
xchg
fcomp
stc
rorb
inc
xchg
call
mov
fnstenv
add
fcomps
ficompl
scas
imul
out
lods
or
sarl
fcomp
imul
stos
imul
jns
adc
jns
fdivr
mov
sbb
call
mov
test
adc
hlt
or
shl
leave
xchg
mov
mov
pop
xchg
jle
xchg
in
pushf
js
imul
inc
xchg
jbe
push
shl
movsl
fnstsw
negl
mov
jo
xchg
mov
mov
xchg
loop
mov
xchg
js
movsl
cmp
fwait
push
xor
xchg
out
pop
in
adc
xchg
icebp
cmp
push
jns
shrb
popa
aam
xchg
nop
xor
jge
mov
cmp
int
xchg
push
mov
clc
loopne
repnz
or
adcb
add
outsb
aam
push
xchg
lock
jecxz
out
inc
fwait
push
jmp
push
loopne
mov
ja
mov
idiv
xchg
clc
xchg
xchg
xchg
lock
loope
mov
jge
mov
or
xchg
mov
xorl
jp
or
push
xor
dec
adcb
lock
sbb
adcl
pop
test
aad
xchg
insl
or
dec
movsl
push
pushf
shlb
add
lea
sbb
ds
push
nop
cmpsb
inc
fdivl
paddb
es
cmc
adc
xchg
push
adc
push
mov
out
push
mov
xlat
mov
dec
xchg
push
int
or
adc
stc
jbe
rclb
rcl
into
mov
enter
test
mov
mov
mov
mov
divl
stos
mov
movsb
mov
sahf
adc
pop
xchg
mov
nop
mov
mov
mov
xchg
orb
jp
clc
xor
inc
fcoms
hlt
sbb
mov
or
xchg
mov
xor
push
jno
mov
inc
imul
cmpsb
add
pusha
into
repz
repnz
mov
cmp
xchg
insl
fdivrs
or
adc
mov
push
xchg
adc
lret
loope
adc
push
mov
and
push
xchg
jns
or
adc
mov
clc
ret
ds
rcr
mov
mov
push
mov
jns
or
jns
jns
imul
je
mov
jp
std
mov
adc
scas
adc
mov
clc
lods
mov
jle
mov
xchg
rcl
jns
or
repz
shrb
mov
jns
or
clc
movsb
loope
adc
pusha
pop
fmuls
xchg
stc
xchg
imul
shlb
cwtl
clc
jl
sti
adc
add
xchg
adc
mov
clc
xchg
mov
push
xchg
nop
fdivs
adc
or
mov
shlb
lret
xchg
mov
ja
or
xchg
mov
mov
adc
test
mov
xchg
xchg
clc
mov
mov
sarl
or
mov
clc
jp
loopne
add
mov
mov
jmp
or
pop
push
frstor
pusha
fsubp
out
loope
lret
push
jbe
bnd
xchg
jnp
es
stc
in
popa
movsl
adc
loope
pop
inc
adc
pop
dec
nop
dec
insb
lea
loop
push
or
xor
jecxz
mov
repnz
mov
nop
in
adc
scas
nop
sarl
mov
inc
mov
insl
pop
notb
popa
jmp
stc
shlb
inc
mov
jo
sub
jne
imul
call
adc
lock
andb
adc
enter
adc
xchg
push
inc
fdivrs
xor
jmp
loopne
xchg
push
mov
out
scas
imul
adc
mov
imul
mov
dec
push
movsl
popa
repz
out
jmp
cmpsb
scas
xchg
dec
jb,pn
jno
inc
sub
mov
and
push
movb
jns
push
nop
mov
mov
and
mov
mov
rorb
stc
nop
push
cmp
into
mov
sbb
loop
inc
adc
sbb
mov
cmp
cmp
pusha
pop
loope
or
sub
loopne
inc
or
data16
add
jno
mov
push
push
rorb
push
repz
lods
loop
arpl
imul
shlb
fdivr
repnz
xchg
mov
popf
sbb
or
fstl
mov
cmpsb
cmp
leave
jp
mov
pusha
or
cmc
setae
xchg
cvtdq2ps
std
jle
sbb
arpl
sbb
popa
xchg
sbb
xchg
mov
nop
dec
ja
jnp
stc
push
out
daa
orb
je
mov
mov
jle
pop
in
lea
fcmovbe
movsl
mov
inc
test
out
xlat
stc
shll
enter
xchg
jp
push
notb
clc
sub
xchg
xchg
and
mov
movsl
mov
and
xchg
fcoml
xlat
xchg
repnz
insb
xchg
and
popa
sbb
xlat
push
cwtl
stos
sbb
in
ja
int
jecxz
lret
js
mul
pop
cmpsb
shll
imul
push
fisttps
dec
xchg
les
ja
mov
jae
jecxz
out
mov
icebp
and
mul
adc
push
pop
ret
sbb
add
jno
out
ljmp
cmpb
nop
bound
pop
xlat
dec
arpl
cli
sbb
fstl
xchg
popf
jne
add
lret
mov
adc
adc
pusha
sti
or
int
shrl
into
and
add
mov
sbb
popf
test
pusha
mov
sbb
mov
loope
movsb
repz
out
jle
jp
sahf
cmpsb
add
or
sub
ljmp
jae
div
pop
sub
add
subb
mov
jge
mov
out
mov
xchg
cs
xchg
or
xchg
test
js
cmp
mov
imul
mov
idivb
int
sbb
xchg
inc
jg
jp
jge
idivb
add
xchg
cmpsb
addr16
cld
std
inc
orb
daa
insb
push
mov
ret
dec
mov
cmc
enter
in
sbb
xchg
shll
or
push
jl
cld
test
loope
decb
mov
or
mov
test
loope
incb
test
add
test
loope
xchg
mov
shll
or
push
nop
mov
test
loope
decb
lea
or
test
loope
std
fsub
sbb
cltd
mov
shll
mov
jne
xor
xchg
into
adc
not
push
cwtl
mov
mov
loop
movsb
mov
imulb
clc
out
mov
repnz
mov
div
mov
clc
jle
push
adcb
clc
mov
push
mov
aam
xchg
mov
sub
cwtl
loopne
mov
clc
call
scas
mov
divb
clc
clc
mov
mov
mov
clc
mov
push
mov
rclb
mov
clc
cwtl
fcmovbe
pushf
negb
xchg
mov
push
out
test
ljmp
repnz
xchg
mov
push
orb
jne
and
test
add
pop
jle
sbb
fsubrs
jne
push
movsb
test
mov
test
fimull
jmp
lods
adc
dec
mov
dec
cmp
movsl
cmc
mov
clc
hlt
xchg
xchg
pop
iret
jle
loop
in
lods
adc
sub
clc
clc
test
mov
out
add
out
in
pop
out
xchg
or
shl
sub
rep
or
scas
fcoms
imul
fcomps
xchg
add
je
rcl
ficoms
adc
push
xchg
cmpsb
adc
lcall
mov
inc
out
mov
roll
shll
xchg
sub
mov
call
call
jmp
mov
or
addb
adc
push
push
fsubrl
lods
sbb
std
shlb
das
mov
or
cmp
cmpsb
in
test
mov
ret
jl
stc
repz
cmc
jl
jns
xchg
test
mov
jne
in
mov
repnz
mov
xor
cwtl
scas
popf
sbb
inc
inc
addr16
cwtl
mov
xchg
xchg
jae
rorb
adc
insl
push
xchg
rol
mov
jbe
jae
nop
pusha
call
pop
add
test
cmpsb
bound
cmpsb
add
sahf
xor
pop
and
cmpsb
jl
mov
out
outsb
mov
cld
mov
mov
cli
lds
fwait
cmc
outsl
or
push
dec
mov
mov
out
loop
repnz
xchg
mov
mov
jns
push
jmp
test
add
repnz
sahf
in
inc
in
les
xchg
adc
fildll
popa
sub
adc
outsb
mull
dec
jmp
pop
sar
les
loopne
pop
addr16
loop,pt
dec
xchg
scas
xchg
pusha
notb
call
int3
dec
stc
xchg
dec
inc
cs
andl
scas
daa
fcoms
cwtl
push
cmp
fmuls
or
ret
jb
nop
rcll
jb
test
mov
mov
mov
test
mov
fmulp
lret
test
in
icebp
xchg
dec
inc
bound
lcall
cmc
xchg
test
jb
cwtl
cmpsl
cli
mul
fiaddl
test
repnz
fcoml
stc
jl
imul
jb
decb
fldl
addl
data16
or
jmp
sbb
jecxz
fsubrs
test
xchg
jo
xchg
dec
nop
fs
cmc
cwtl
fimuls
data16
loope
push
addr16
adc
out
nop
call
push
mov
adc
mov
xchg
arpl
dec
xor
jecxz
jo
out
in
movsb
mov
mov
dec
nop
shl
cmp
lods
enter
in
insl
push
xchg
pusha
lock
jmp
in
hlt
in
lock
nop
push
sar
push
xchg
rcll
rolb
nop
pop
test
xchg
out
insb
mov
rolb
jg
sub
negb
stos
xchg
ss
add
push
nop
sbb
xchg
sbb
stos
sbb
dec
push
fiadds
xchg
ds
xchg
cld
mov
xchg
sbb
dec
mov
adc
xchg
mov
sbb
mov
into
cmpsb
fs
js
insl
sar
mov
daa
mov
jns
fadds
fmuls
pop
aas
cmpsb
and
mov
pop
aas
sbb
cwtl
cmp
leave
shl
flds
sbbl
push
clc
mov
mov
fcmovu
jmp
inc
sub
cwtl
loopne
movl
outsb
in
out
pop
cwtl
sbb
push
dec
lcall
add
out
in
lcall
jne
mov
mov
dec
pusha
lret
lcall
imul
mov
aad
xor
mov
and
jmp
mov
and
adc
lock
pop
insl
fisubrl
sub
mov
inc
xchg
or
fists
push
sar
adc
adcl
out
lahf
roll
adc
sahf
cmp
andb
outsl
sti
negb
xchg
mov
jne
mov
dec
pop
cmp
lods
sbb
adc
dec
xor
outsl
pop
jmp
push
mov
push
aad
pop
dec
adc
add
mov
testl
and
and
jge
divl
cli
cwtl
in
xchg
aas
lock
sti
or
clc
pop
mov
mov
mov
adc
setle
or
mov
pop
or
test
jns
jb
mov
mov
pop
loope
or
and
nop
jno
cld
fsubrp
xchg
out
push
pusha
fstps
fidivl
jns
push
rol
cltd
sbb
cwtl
mov
jp
pop
test
xchg
test
adc
xchg
xchg
adc
xchg
mov
clc
nop
adc
xchg
js
lea
lcall
mov
add
in
lods
cmc
out
push
xchg
insl
mov
clc
pop
rcll
xchg
ret
divb
mov
outsb
clc
popl
push
jle
jbe
in
mulb
fmull
push
mov
mulb
dec
cwtl
adc
xchg
mov
mul
push
fisttpll
jne
es
repz
sbb
in
or
addl
clc
adc
dec
mov
xchg
adc
xchg
clc
adc
sbb
jns
or
clc
cs
mov
jns
or
clc
mov
mov
notl
adc
mov
fdivrs
popa
mov
fdivrs
or
xchg
xchg
test
jb
adc
adcb
adcb
adc
jle
mov
nop
xchg
jl
notl
adc
mov
clc
clc
mov
fdiv
lods
or
mov
shr
adc
xchg
inc
aam
or
mov
in
mov
or
ljmp
clc
push
data16
mov
adc
mov
imul
mov
or
clc
mov
or
mov
mov
mov
cmpsl
adc
ficoml
and
jecxz
sbbl
mov
lret
jp
sahf
inc
mov
or
cmc
lds
rcll
imul
mov
in
jns
pop
push
adc
inc
repnz
loopne
push
mov
lods
addr16
inc
sahf
dec
sbb
adc
scas
sti
mov
nop
dec
pop
mov
cmp
xor
out
aaa
and
roll
adc
popf
fildll
clc
test
or
or
int3
pop
or
lcall
dec
setb
or
js
pushw
xor
nop
sbb
roll
ss
pop
cmc
xchg
fwait
or
into
sahf
pop
outsl
jne
xchg
pop
stc
xchg
jb
mov
lods
cmc
jae
mov
ss
iret
mov
pop
test
in
fsubs
or
rclb
push
insb
xchg
adc
mov
cli
cmpb
mov
mov
enter
or
xchg
push
outsb
mov
pushf
xlat
fisubrl
loope
hlt
aam
mov
fidivrl
out
scas
mov
mov
add
les
mov
fwait
xchg
ret
mov
sbb
mov
push
aam
add
push
jle
add
adc
xchg
rcl
jp
push
mov
mov
les
lock
mov
xchg
sbbb
imul
cwtl
mov
loopne
repnz
push
rcll
testb
jne
das
push
sbb
ficoms
pop
psadbw
gs
lcall
adc
shr
imul
jae
xchg
mov
xor
in
mov
repnz
xchg
adc
add
jle
test
sub
insl
ret
insl
and
dec
das
or
push
add
mov
push
mov
adc
cmp
aaa
test
and
imul
mov
loopne
adc
sub
jecxz
adcb
sbb
push
xchg
aad
cmpsb
jmp
pop
sbb
push
into
hlt
js
or
and
loopne
or
enter
add
mov
pusha
and
clc
lret
push
sahf
mov
shl
data16
repnz
mov
shl
inc
idivl
lcall
push
cli
cwtl
cmc
xchg
add
and
rol
pusha
and
cmpsb
jp
dec
aad
cwtl
rcr
stc
pusha
jp
or
xlat
es
out
aam
fcom
arpl
sti
outsb
push
movsb
or
pop
push
int3
inc
les
mov
jle
stos
es
les
int
icebp
mov
mov
outsl
push
add
push
cwtl
xchg
pusha
repnz
push
dec
in
mov
pop
dec
push
mov
push
lds
je
inc
sbb
xchg
mov
subl
hlt
jns
jns
aam
jne
push
rorb
testb
jl
add
jno
fsetpm(287
jle
into
mov
adc
clc
dec
test
or
mov
xchg
xchg
ja
mov
mov
cmp
div
shlb
push
push
stos
movsb
push
lret
or
ja
jl
sbb
mov
hlt
or
popaw
jbe
jmp
cmpsl
mov
push
cwtl
push
or
push
push
or
jns
mov
jbe
js
js
lea
js
loopne
imulb
out
adc
or
ja
clc
leave
scas
repz
xchg
and
xchg
cmp
stos
mov
insl
cmc
or
cltd
lret
idivb
js
mov
jns
dec
inc
push
lock
sub
enter
sub
fists
mov
xchg
sub
je
mov
mov
jns
int
push
sbb
cmp
stc
mov
jp
mov
stos
xchg
push
fsubrp
scas
shrb
jecxz
push
or
fsts
lahf
or
sbb
mov
ja
add
orb
pop
mov
scas
insb
or
lcall
add
push
mov
loop
into
sub
xchg
push
cmp
jo
or
jnp
add
ds
mov
push
pop
hlt
jo
cmp
push
lock
xchg
hlt
push
pop
pop
pop
js
push
addb
ljmp
xchg
sub
add
jns
cs
sarb
shl
cmc
xchg
add
push
fiaddl
push
aam
lret
faddp
test
xchg
xlat
fimuls
int
pop
mov
push
mov
xchg
and
aam
lock
sbb
adc
mov
aam
call
sahf
shll
outsb
fsubrp
call
adc
cwtl
fcmove
mov
ljmp
xchg
xchg
ret
xchg
rcll
xor
shl
rcl
push
clc
xabort
shl
push
fidivs
mov
inc
fidivl
push
xchg
mov
adc
rolb
mov
clc
test
into
sar
sbb
jnp
sahf
xchg
jno
sbb
shrb
mov
adc
pop
jns
xchg
push
inc
adc
not
out
xchg
ret
pop
mov
adc
insb
inc
andl
adc
arpl
jno
push
mov
xchg
and
dec
mov
pop
imul
mov
cltd
sbb
xchg
pop
xchg
adc
cmpsb
push
inc
ret
adc
loope
pop
pop
pop
movq
or
ja
stos
mov
mov
pop
or
mov
imul
mov
or
dec
push
mov
or
cmp
imul
mov
push
lret
fldenv
xchg
xchg
xchg
mov
mov
or
mov
or
subl
or
xchg
in
push
xchg
test
test
pushf
add
roll
pop
js
mov
out
xor
mov
xchg
ficoms
faddl
ret
pop
loope
pushw
aaa
cld
test
xorl
cld
rclb
imul
popf
pop
mov
arpl
mov
or
and
mov
jbe
movlps
sbb
or
dec
into
push
xchg
dec
mov
adc
mov
or
call
cmpsb
push
mov
push
mov
pusha
lret
rcll
inc
rorl
mov
jnp
xchg
push
clc
push
jmp
push
cmpsb
inc
mov
xchg
or
hlt
push
outsl
cmp
mov
or
xchg
push
sti
xchg
int3
clc
and
inc
cwtl
mov
popf
xchg
xchg
cs
rorb
mov
lret
ss
xchg
jge
movsb
test
push
jp
push
in
fidivs
pop
test
jl
or
mov
xchg
adc
mov
rorb
enter
mov
adc
rcr
and
cmp
outsb
xlat
push
push
or
cwtl
push
enter
push
pop
pop
pop
divb
adc
callw
add
pop
add
mov
xchg
fwait
repnz
xchg
inc
push
or
das
loopne
imul
cmpsl
xlat
mov
mov
jmp
xor
mov
aas
jl
mov
in
adc
sarb
xor
jl
pushf
xchg
pop
xor
xchg
test
cmpsb
aas
lds
adc
es
pushl
push
icebp
xchg
mov
add
adc
jge
or
mov
jo
cmp
cmp
out
push
jp
test
mov
or
mov
bound
mov
clc
or
in
jns
les
sub
push
sub
jne
pop
sbb
mov
mov
cli
es
xchg
inc
mov
cmpb
jns
cmpsb
adcl
fsts
mov
shl
jns
movsb
add
cmpl
add
inc
loop
lcall
push
sub
pop
dec
ds
in
std
adc
mov
or
stc
xchg
mov
xchg
ds
jbe
mov
fisubs
dec
fwait
push
nop
jle
and
sub
int
out
push
push
nop
push
xchg
cmp
or
test
sbb
aam
rorb
js
cmpsb
into
push
push
mov
fs
mov
jb
adc
enter
xchg
faddl
mov
sub
push
lock
mov
pop
pop
adc
std
push
xchg
push
jg
loope
add
xchg
jae
dec
popa
call
test
bound
idivb
or
js
outsb
adc
pop
mov
push
mov
cmp
dec
sbb
sti
adc
adc
nop
pop
xorl
adc
aaa
sbb
movq
out
repz
jl
pop
mov
mov
fistps
xorb
jae
in
mov
daa
cli
test
add
mov
or
jns
les
push
jb
adc
mov
adc
jo
add
add
repz
sahf
pushf
pop
ficomps
push
cmpsl
es
mov
sub
adc
enter
pop
andb
mov
mov
push
or
mov
not
adc
adc
push
out
mov
stc
add
pop
sbb
iret
arpl
dec
insl
data16
xchg
add
xchg
movsb
sbb
test
adc
nop
adc
outsl
xchg
pop
or
out
aas
dec
jno
outsl
push
mov
dec
dec
push
inc
sub
jbe
repz
test
inc
or
sbbb
adc
add
daa
lret
inc
sbb
bound
out
dec
lock
pop
xlat
push
div
mov
arpl
cmp
xchg
pop
add
inc
adc
cmovne
sub
hlt
push
fildl
pop
xchg
adc
cmp
pop
out
mov
aaa
negb
sbb
cwtl
in
cwtl
pop
out
sbbb
clc
sbb
icebp
xchg
adc
mov
xor
imul
test
loop
rcrl
lods
adc
cmpsb
jecxz
sub
mov
mov
test
push
inc
push
jo
jb
ss
inc
pop
mov
inc
mov
add
sbb
xchg
shll
stos
mov
inc
fldpi
cs
sahf
sub
mov
test
bound
mov
xchg
mov
inc
lds
pusha
lock
dec
or
jle
and
stc
mul
mov
inc
jge
inc
fmuls
adc
testl
mov
in
das
cwtl
xor
fcoml
aaa
or
out
push
xchg
and
jns
scas
add
mov
js
or
mov
push
je
aad
and
jmp
cmp
test
testb
push
mov
stc
lds
cwtl
push
enter
pusha
adc
jo
push
js
sub
into
lret
cmp
and
xchg
mov
jbe
mov
add
dec
pop
mov
mov
xchg
hlt
shlb
cld
jo
xor
cmc
shll
clc
sbb
xchg
xchg
and
clc
xchg
daa
mov
lock
std
cli
inc
jo
sub
push
xchg
jl
stc
inc
call
xchg
mov
emms
and
adc
dec
xchg
into
jb
mov
jbe
movsl
mov
xor
rorb
mov
int
shll
orb
pop
loopne
jbe
stos
mov
rol
rcll
and
sub
add
outsl
push
pusha
popa
mov
sbb
loop
dec
cmpsb
sub
inc
adc
insl
imul
leavew
clc
fiaddl
pushf
mov
fdivrl
pop
clc
adc
mov
fmuls
loop
xchg
xchg
out
jbe
push
fidivrs
repnz
dec
push
inc
jae
loopne
xor
push
shlb
ret
out
ds
fs
cltd
push
dec
xchg
xor
xchg
push
js
jo
and
mov
sbb
xchg
enter
adc
sahf
mov
mov
jno
data16
movsl
pusha
mov
scas
pop
mov
mov
jle
dec
xor
cmp
lods
jbe
mov
mov
lahf
xchg
je
rep
nop
aaa
ja
jo
and
ljmp
dec
imul
rcrl
mov
mov
mov
dec
jno
nop
pop
cmc
rcll
and
and
cmp
sub
and
adc
hlt
idiv
adc
in
adc
outsl
jl,pt
loop
xchg
cmpsb
test
ja
sbb
dec
scas
xlat
pop
pop
mov
fdivrl
pop
and
xor
pop
ss
fcomp
and
and
mov
loope
not
or
rcrb
mov
xlat
push
loopne
pop
push
testl
xchg
jle
pusha
xchg
or
imul
mov
out
push
pop
ljmp
pop
cmc
rorb
dec
mov
ljmp
push
pop
adc
push
push
sbb
mov
sub
scas
push
cmpsb
int
mov
rcrb
test
inc
mov
jne
adc
ss
es
cwtl
mov
xchg
adc
adc
inc
fidivs
fmuls
or
xchg
dec
leave
rorl
push
lock
ret
or
mov
xchg
xchg
jbe
xlat
push
inc
dec
adc
out
add
lret
sbb
iret
cld
fstps
push
mov
sub
testb
sarl
fildll
mov
mov
xor
mov
push
xor
xchg
xchg
jp
jns
mov
aas
rorb
jecxz
loopne
shll
mov
mov
push
xchg
xor
xchg
mov
mov
sbb
sbbl
add
inc
xchg
xchg
fstps
or
cltd
and
loopne
or
cltd
clc
into
xor
jbe
xor
mov
mov
jbe
cltd
mov
xor
xchg
cmp
shll
add
push
mov
mov
jg
mov
iret
loopne
notb
mov
pop
push
sbb
sbb
data16
aad
jbe
insl
xchg
sub
jno
dec
les
in
cwtl
repnz
shlb
movsb
jo
aam
adc
jbe
ja
and
call
jae
sbb
adcl
imul
cltd
and
lock
lock
inc
mov
jns
out
jge
shrl
xchg
add
mov
push
cmpsl
sbbb
lea
out
pop
jmp
pop
cmpsb
sbbb
ret
loop
adc
aas
lret
scas
loopne
adc
dec
pushf
shlb
addl
out
xchg
add
clc
jecxz
mov
xchg
or
mov
xchg
fstps
pop
js
xchg
sbb
rcr
sbb
test
ficompl
icebp
aas
xor
xchg
xchg
push
push
adc
mov
daa
pusha
mov
lret
jne
clc
xor
or
dec
xchg
cmp
lock
jp
js
and
sub
scas
xchg
xchg
sub
loopne
stc
sarl
xor
fdivrs
xchg
cmc
bound
push
cmp
xchg
fdiv
jbe
sub
fnstsw
xlat
neg
in
ret
push
or
pop
dec
inc
aaa
xchg
xchg
lret
push
stc
mov
shrb
xorl
mov
repnz
imul
cwtl
fldln2
jge
data16
cmpsb
or
ret
pop
mov
mov
ja
jp
xchg
pop
mov
push
adcl
mov
cwtl
out
std
and
dec
addl
stos
stc
lret
rclb
jo
xchg
push
adc
into
pop
pusha
hlt
pop
aad
fsubrs
sbb
aad
fdivs
es
test
xor
pop
jns
aaa
js
orb
mov
cmp
adc
repz
in
cltd
jl
enter
sbb
or
dec
adc
pop
add
sbb
lret
std
ret
stc
and
push
pusha
clc
push
cld
inc
cltd
sub
push
add
mov
mov
rolb
mov
hlt
test
xlat
push
loopne
and
push
pusha
mov
stc
les
cmpsb
mov
cmp
jl
xor
jno
jae
cltd
cmp
cwtl
std
mov
xchg
xor
enter
and
sbb
sahf
xlat
cmpsb
cs
ja
xchg
aaa
divl
push
xchg
mov
mov
mov
jl
nop
add
cwtl
xchg
lret
loopne
pop
repz
jno
mov
aaa
adc
cltd
mov
rolb
cmp
movsl
stc
lret
xor
mov
sbbl
mov
rcrl
xchg
xor
insl
popf
dec
adc
nop
in
aam
mov
pop
push
adcl
hlt
jmp
xor
add
cmp
jge
notb
or
in
xchg
add
xor
aas
cwtl
fwait
std
aaa
loopne
mov
into
call
rcrb
imul
xchg
push
xchg
gs
or
add
adc
and
jns
ret
sbb
mov
iret
jns
adc
push
aad
jns
cwtl
pop
fsubrp
mov
cmpsb
xchg
jns
lock
xchg
ja
addr16
in
pxor
adcb
and
repnz
inc
pop
test
sbbb
adc
inc
xchg
adc
loopne
xchg
adc
add
lahf
xchg
lock
adc
dec
adc
pusha
or
sbb
xchg
nop
xor
js
adc
adc
leave
ja
fcom
addr16
stc
mov
adc
inc
lods
data16
xchg
inc
or
lret
mov
fistpl
pop
adc
scas
rorb
adc
sub
sarb
jnp
cmp
xchg
aam
mov
dec
aam
fwait
outsb
shlb
xchg
aam
loopne
lock
jo
xchg
sbb
insl
ja
mov
stc
cmp
dec
ss
jl
ret
dec
jl
jp
mov
and
cmp
int3
addb
into
insb
sub
xlat
cmpsb
dec
sbb
jge
shlb
call
add
pop
pusha
sbb
or
or
iret
cmp
jge
mov
mov
je
shll
rcpps
add
adc
xchg
orl
mov
add
adc
sbb
mov
notb
js
jbe
rclb
jno
dec
or
xchg
jge
mov
mov
aam
or
in
mov
xchg
repnz
adc
mov
mov
insb
imul
mov
xchg
dec
loopne
xchg
sbb
xchg
mov
or
cwtl
cmp
repnz
push
adc
xor
pop
mov
adc
xchg
mov
dec
mov
dec
jmp
jne
jo
insl
mov
mov
add
dec
inc
lahf
mov
mov
pop
mov
lock
std
bound
xchg
test
ss
jno
nop
jl
xchg
aaa
mov
popa
subb
dec
xchg
xor
mov
adc
or
clc
pop
cwtl
mov
hlt
insl
mov
dec
int3
dec
dec
cmp
push
mov
pop
mulb
or
lret
ljmp
cmp
jo
cmc
or
scas
dec
xchg
pop
xchg
lahf
adc
pop
add
divb
sbb
inc
or
mov
imull
pushf
loopne
shl
adc
pop
mov
dec
je
sbb
ret
adc
enter
hlt
adc
dec
lcall
pop
sbb
pop
and
mov
cmpsl
movsb
push
lods
cmp
test
xlat
loopne
psubw
pop
clc
xor
adc
gs
cld
adc
js
cmp
aad
xor
pop
jo
sub
mov
insb
repnz
je
push
xchg
push
add
jns
cli
aad
jp
mov
adc
dec
mov
push
xchg
pop
mov
xchg
stos
into
leave
adc
push
dec
jl
dec
lret
std
xchg
add
daa
clc
ljmp
add
push
lods
adc
stc
cmp
jle
push
lret
jmp
cld
pushf
faddp
jmp
mov
pusha
enter
cmc
xor
ss
mov
orb
lret
mov
xchg
int3
lret
fdivs
or
rclb
bound
stc
clc
mov
sbb
int3
push
mov
rol
sahf
int3
mov
in
xchg
out
push
enter
push
imul
cmp
call
in
mov
adc
dec
mov
push
pop
adc
or
cwtl
outsb
imul
outsb
sub
out
stos
cmp
stc
xor
repz
repnz
sarb
mov
cmp
ljmp
mov
mov
fcomps
jle
push
xchg
cwtl
lret
into
mov
cmpsb
repz
mov
stos
es
adc
xchg
sub
cmp
aam
jne
adc
mov
daa
or
sbb
push
sti
repnz
xchg
mov
jne
aam
nop
cli
dec
pusha
xchg
clc
imul
push
push
push
dec
mov
clc
jbe
push
outsb
xchg
push
data16
pop
mov
or
push
add
sbb
cmp
test
xor
dec
or
movsb
lret
sbb
lds
mov
loop
xor
repz
scas
xchg
mov
pop
mov
fwait
lods
jmp
mov
push
mov
leave
xchg
jbe
or
call
inc
ds
stc
dec
sub
inc
int
into
andb
pusha
frndint
movsb
cmc
js
xchg
mov
jp
sahf
pop
dec
mov
es
inc
xor
mov
mov
jmp
loop
leave
fsubrs
aam
lret
cwtl
loopne
push
in
addr16
rorb
cmpsb
push
xchg
inc
adc
nop
push
xchg
cmpsb
pop
jae
xchg
dec
adc
push
inc
insl
mov
dec
jns
pop
cmp
test
fists
shll
repz
repz
loopne
cmpsb
cmp
jg
cmp
jns
push
adc
rcrl
add
fcompl
shl
dec
cld
rorb
cmp
xchg
mov
in
enter
xchg
jno
stos
mov
outsl
out
ss
aad
dec
mov
stc
xor
push
jbe
mov
inc
loopne
and
push
jge
dec
ret
sub
imul
repz
mov
xchg
cltd
aam
mov
jne
cli
cli
mov
or
xchg
popa
dec
sbb
xchg
cmp
insb
fadds
in
and
int
mov
jbe
xchg
out
ss
sub
jno
dec
jns
pop
hlt
lahf
push
adc
cltd
mov
adc
and
outsl
pushf
repnz
mov
dec
mov
pusha
mov
mov
cmp
mov
pop
sub
jbe
imul
add
sbb
mov
call
xchg
jecxz
nop
mov
jns
lret
or
cltd
jae
jae
fbstp
sbb
enter
jns
push
test
shr
mov
fmuls
lds
cmp
jbe
xchg
cli
hlt
rorl
addb
aam
in
aaa
lea
add
sub
xchg
add
lea
dec
lcall
jp
sbb
push
cltd
out
inc
and
inc
les
add
hlt
push
cli
inc
mov
pop
xchg
mov
pop
dec
pop
mov
push
mov
ljmp
or
stc
pop
les
out
or
push
addr16
addr16
into
or
rorl
in
int3
aaa
pop
mov
sbb
push
xchg
jbe
negb
dec
out
xchg
loope
inc
movsl
xor
gs
pusha
test
inc
pushf
mov
push
out
shrb
mov
aam
gs
jno
or
clc
int3
aas
jmp
clc
in
mov
pusha
add
dec
stos
sarl
popf
jle
jge
xchg
arpl
jnp
int3
push
xchg
mov
jns
cmpsb
push
dec
out
mov
lcall
cmc
pusha
fs
clc
or
cmp
sbb
pop
xchg
cmpsl
inc
mov
sbb
mov
pop
push
rclb
mov
fidivrl
jne
roll
jns
cmp
and
int3
jmp
xchg
lcall
jmp
pop
or
aad
push
popa
mov
jl
or
outsb
dec
jmp
pop
mov
push
and
ds
incb
inc
mov
jns
mov
sbb
and
pop
xchg
shll
pop
sbb
push
push
pop
push
xchg
and
dec
adc
adc
adcl
cmp
mov
pushf
xchg
adc
jb
jae
pop
in
notl
or
pop
adcb
bt
sbb
dec
imul
adc
pop
cmp
int
cmpsl
sbb
test
mov
xchg
sub
inc
fdiv
movsb
add
lret
push
negb
inc
jnp
xorb
mov
inc
insl
mov
hlt
cli
mov
xchg
xlat
cmpsb
pop
mov
push
xchg
negb
aad
cmpb
or
jle
je
imul
testb
add
sbb
xchg
mov
add
cmp
xchg
int3
push
adc
sub
xchg
pop
or
clc
dec
cmpsb
enter
movsl
and
rorl
lret
push
add
rcll
mov
lds
or
mov
pop
hlt
mov
jmp
pusha
mov
pop
or
out
nop
sbb
jnp
or
push
push
out
and
testl
or
fcomps
fsubs
jp
movsb
xor
mov
mov
sub
inc
cltd
aad
stos
inc
xor
mov
clc
mov
push
test
fmull
movsl
mov
test
push
xchg
xchg
mov
je
mov
and
jo
pop
lock
adc
xlat
aas
lods
testb
dec
inc
in
in
cmp
mov
add
inc
mov
pusha
inc
das
xor
decl
sub
inc
sub
pop
push
or
cmp
cs
xchg
and
lahf
aaa
pop
xchg
push
fcomps
or
test
or
mov
test
xchg
jns
and
fcoms
mov
test
test
cmp
jmp
cmp
cmpsb
pushw
mov
loopne
out
mov
mov
sbb
mov
sub
adc
push
mov
jle
pop
fisubrs
xchg
jb
cmpsb
cltd
clc
cmpsb
addr16
enter
gs
aad
insb
dec
fidivrl
mov
mov
adc
sbb
dec
push
and
rcr
xchg
add
adc
popa
test
repnz
shlb
jns
lea
aad
mov
cmpsb
aaa
dec
push
mov
loop
repnz
loopne
dec
add
xchg
cld
pop
mov
lock
push
nop
shl
mov
pop
lock
sub
mov
out
add
xchg
lock
rcll
call
xor
rcrl
xchg
dec
loope
sbb
add
push
cmp
out
add
stc
loopne
jecxz
push
fisttpl
addl
xchg
ret
inc
stos
loopne
cmp
aad
mov
add
xchg
pushf
cmp
sbb
stos
push
add
mov
xchg
add
in
or
mov
out
adc
fmull
jp
jno
adc
xchg
dec
mov
mov
aad
enter
jl
mov
lock
xchg
lock
push
push
mov
or
dec
les
inc
out
inc
sti
push
lret
adc
ret
jne
sub
mov
lret
xchg
les
aaa
mov
loop
lock
mov
pushf
or
movsb
xor
jns
sub
mov
jbe
adc
mov
das
stos
sub
scas
adc
enter
enter
scas
xchg
adc
lret
imul
push
adc
push
mov
enter
pop
rolb
mov
stos
das
and
push
adc
xchg
mov
cwtl
ret
std
add
in
and
call
ret
mov
rol
or
xchg
inc
mov
stc
outsl
sub
loop
cmp
xor
push
sahf
mov
test
ja
xchg
shlb
push
and
jmp
sbb
sti
pop
pop
mov
rorl
jb
add
je
call
or
gs
nop
cld
xchg
sbb
add
xchg
outsb
pusha
out
adc
arpl
mov
sahf
lret
xchg
add
in
int3
clc
inc
call
push
xchg
adc
or
push
xchg
xchg
pop
popf
jb
xchg
repz
in
and
adc
xchg
jb
mov
jg
mov
xor
sbb
gs
sbb
out
add
pop
rol
adc
rorb
jmp
sbb
clc
rclb
adc
sbb
xchg
sub
xchg
shlb
xor
fidivs
mulb
sbb
shl
enter
insl
leave
pop
mov
repz
sahf
xchg
inc
jle
mov
testb
loop
jle
jns
ss
dec
xchg
pushf
movsl
nop
xchg
xchg
lock
push
xabort
pop
inc
push
dec
aad
fmull
jg
mov
lret
mov
fidivl
push
mov
call
mov
adcb
jp
xchg
push
push
cltd
stos
add
jecxz
or
shl
ja
mov
mov
xchg
sbb
xchg
jno
xchg
stos
pop
insb
lock
rcr
jbe
shll
repz
data16
mov
aad
notl
mov
pop
and
fisttps
hlt
or
or
cwtl
cli
in
push
and
shl
int3
fdivl
fisttpll
call
dec
jmp
sbb
sbbl
in
in
pop
icebp
and
mov
xchg
jne
xchg
divb
cltd
jnp
sahf
aas
not
add
jl
lea
mov
lds
in
sbb
add
lock
pop
movhps
jno
xchg
mov
add
jmp
shrb
aaa
sti
popa
jns
sbb
out
cmpsb
and
jb
or
out
mov
lret
lock
mov
inc
and
adc
inc
sbb
push
cs
imull
lods
ret
xchg
jns
ds
out
inc
pushf
aad
pushf
xchg
lods
ds
mov
lahf
scas
mov
into
cld
pop
repz
rcll
lahf
and
xchg
nop
sbb
mov
fs
mov
xchg
jmp
sbb
ss
cli
hlt
adc
jnp
jae
sti
nop
xchg
xchg
jnp
cmp
pusha
xor
add
lock
xchg
fisttps
hlt
stc
jne
jne
sbb
mov
jge
mov
or
punpcklwd
in
xchg
sbb
xchg
sbb
or
adc
xchg
mov
cld
popa
cmc
mov
shl
or
iret
movsb
push
push
sub
neg
lods
or
sar
icebp
fidivs
mov
popf
or
dec
add
je
lock
add
lods
xchg
mov
divb
add
adc
xchg
mov
jo
fnsave
xchg
ffree
push
mov
jb
jb
mov
mov
push
mov
hlt
mov
dec
out
test
in
sbb
mov
cmpsb
rorb
jns
fwait
mov
lods
and
les
ficoml
jne
je
dec
divb
pop
sbb
xchg
es
cmp
push
daa
xchg
daa
or
ja
adc
xor
xchg
sub
es
and
push
sbbb
jnp
jl
mov
jge
jl
cld
sti
stc
pop
pop
in
jmp
mov
lret
and
je
daa
pushf
cmpsl
pushf
sub
pushf
sub
pushf
sub
lods
pushf
sub
pushf
scas
pushf
das
pushf
scas
pushf
xor
pushf
xor
sub
mov
xor
mov
xor
push
and
ss
mov
lock
pop
cwtl
sete
ficoml
stos
stos
push
pop
mov
out
xchg
rclb
or
xchg
or
push
fdivrp
mov
xor
nop
ret
mov
or
out
or
divb
enter
cltd
ljmp
imul
mov
mov
or
adc
xchg
adcb
mov
xchg
xchg
hlt
push
mov
rclb
xchg
cltd
mov
mov
sbbb
hlt
mov
dec
repnz
mov
mov
add
lods
add
mov
push
adc
stos
lahf
add
push
xchg
rolb
faddl
loopne
push
mov
sub
rorb
clc
mov
frstor
push
inc
cmp
jp
data16
leave
insb
insl
mov
clc
mul
push
sbb
push
and
cltd
mov
mov
fcompl
cwtl
mov
idivb
mov
pop
cmpsb
adc
inc
cwtl
out
push
lret
cwtl
add
sbb
repnz
or
jo
pop
lock
dec
mov
out
sarl
mov
xchg
pop
mov
xchg
mov
out
push
clc
xchg
xchg
push
cmp
pop
jp
clc
shrl
jle
fdivr
stc
mov
or
adc
and
aaa
jl
out
outsb
adcb
mov
jae
clc
lds
xor
xchg
repz
lret
fwait
shll
xlat
pop
mov
ljmp
adc
mov
scas
push
fdivl
in
cwtl
cltd
cmp
and
int
sti
mov
mov
mov
repz
int3
popf
in
aam
shl
icebp
das
out
adc
data16
stos
adc
mov
cmp
pop
add
add
test
ljmp
cwtl
sub
fstl
adcl
fnstenv
mov
adc
pop
or
jmp
sbb
ret
pop
mov
mov
mov
xor
xor
xor
cli
mov
xchg
pop
sti
add
cmp
jge
std
cwtl
jl
sti
test
add
std
jle
xchg
movsl
mov
shlb
or
dec
mov
dec
cmp
dec
cmp
mov
cmp
mov
repnz
ds
push
adc
mov
mov
xor
push
movsb
adc
in
mov
test
mov
jne
shl
jp
enter
movsb
or
jo
jb
in
out
jmp
cwtl
mov
mov
outsb
xchg
mov
cmpl
pop
mov
pushf
push
xchg
mov
mov
test
movsb
je
fpatan
cwtl
nop
testb
cs
push
adcb
push
enter
nop
in
clc
shl
push
mov
xchg
insb
sbb
xchg
add
mov
push
out
clc
ljmp
sbb
imul
push
push
mov
mov
call
lock
adcb
rclb
addr16
mov
addb
bnd
mov
xchg
mov
scas
mov
mov
in
jp
aam
jb
mov
int3
out
jbe
outsb
xorb
sahf
push
jp
loop
out
in
push
icebp
out
cwtl
hlt
enter
loope
cmp
pop
adc
mov
into
icebp
aaa
xchg
aam
push
fdivrs
push
call
inc
arpl
hlt
fdivrp
pop
jmp
into
aad
cmpsb
mov
xor
js
pop
adc
std
mov
xchg
mov
mov
push
stos
jbe
bswap
jmp
fldcw
pushf
pop
xchg
sbbb
pop
push
in
push
nop
adc
push
mov
sub
add
scas
xchg
out
mov
push
testb
iret
push
mov
jge
sub
pop
xchg
mov
mov
push
fistl
adc
xchg
push
ficomps
cwtl
rorb
sbb
js
into
push
test
lock
dec
mov
push
mov
jbe
ret
pop
adc
cmp
int3
jbe
dec
test
xchg
and
mov
push
cmpsb
dec
push
in
mov
aam
jno
mov
or
mov
xchg
inc
cmpsb
rcl
adc
xchg
xor
mov
mov
xor
jbe
lahf
sub
nop
jmp
aad
sbb
fsubrl
adc
fisttps
stos
push
mov
sbb
push
mov
push
or
push
outsl
xchg
call
or
aas
cwtl
mov
call
add
mov
aam
ret
mov
mov
into
mov
int
int3
add
call
rcl
out
fisubs
loope
mov
mov
pushf
or
mov
or
adc
test
pop
jae
and
test
enter
test
jmp
repnz
pslld
jae
lds
inc
in
adc
inc
push
jp
mov
lock
pop
sbb
xchg
adc
xor
push
ja
sbb
adc
mov
dec
mov
outsb
cmp
cmp
xchg
jb
aaa
sbb
mov
jne
mov
sbb
sbb
jb
scas
lock
and
pop
adc
or
mov
jl
pusha
adc
outsb
cmpl
and
aas
lods
imul
pop
test
xlat
orb
fwait
mov
xorl
hlt
rcrl
out
hlt
ds
icebp
xchg
mov
ficoml
inc
cmp
cmp
mov
popf
loope
or
in
fdiv
or
jb
xchg
dec
adc
or
into
jo
push
das
ds
add
inc
nop
cli
xor
xchg
add
mov
test
push
insb
pop
ret
es
repz
outsl
or
ljmp
adc
js
outsl
js
or
xchg
jo
fnstenv
dec
scas
test
ja
in
rclb
hlt
repz
dec
into
nop
mov
or
mov
je
sbb
jb
repnz
hlt
xchg
outsl
push
xchg
xchg
cli
loop
leave
jns
inc
into
dec
cmc
or
dec
push
outsb
sub
sahf
dec
ror
nop
jle
mov
shlb
xchg
and
cmpb
imul
mov
subl
sbb
mov
arpl
xchg
and
mov
cmpsb
lods
popa
mov
and
fdiv
clc
test
mov
or
sbb
pushf
inc
hlt
into
pop
sub
rolb
pop
cld
call
adc
pusha
sbb
xchg
test
clc
cmpsb
or
dec
xchg
mov
mov
push
mov
pop
sbbb
push
or
jnp
insl
je
mov
push
cld
std
movsb
jns
scas
xchg
jl
daa
in
cli
js
jnp
mov
xchg
xchg
mov
out
jle
ret
bound
mov
sbb
adc
adc
adc
xchg
mov
pop
push
arpl
test
out
xchg
fsubrl
and
adc
fldt
and
cmp
ja
int
mov
insb
cmp
mov
pop
add
pushf
pop
sahf
pop
pop
cwtl
lods
add
das
and
enter
pop
dec
cmp
inc
xor
push
xor
outsb
sbb
lea
test
mov
lock
divl
es
cmp
rclb
and
je
pusha
adc
xchg
sbb
xchg
mov
roll
sub
in
inc
jle
mov
xchg
in
loop
icebp
lds
inc
mov
shlb
in
dec
push
cmpsl
xchg
cli
xchg
mov
xchg
mov
mov
mov
test
in
out
out
xor
scas
sbb
sbb
inc
insb
mov
push
pop
xchg
sbb
cmpsb
pop
imul
test
ret
daa
adc
repnz
lods
cmpsb
ljmp
insl
outsl
xor
pusha
sub
mov
jns
sbb
adc
loopne
add
adc
xor
test
cmp
repnz
jns
pop
pop
aad
clc
fsubs
std
mov
dec
pushf
push
push
inc
adc
jno
mov
cmc
ret
dec
mov
ljmp
dec
mov
mov
pop
jbe
outsl
push
adc
pop
cmp
in
mov
aaa
stc
loopne
mov
xchg
mov
outsb
dec
ja
pop
xchg
mov
pop
sti
cli
aad
and
jmp
call
mov
inc
into
rep
insb
xchg
adc
mov
xchg
and
into
mov
jne
and
add
in
mov
push
pop
imul
jne
mov
es
pop
fwait
or
shll
daa
inc
inc
dec
push
hlt
clc
inc
js
cmpsb
dec
xchg
std
int3
mov
sbb
or
push
lret
xor
dec
cli
sbb
mov
jns
lret
xchg
cmp
jle
stc
dec
push
int3
pop
jb
inc
popa
mov
clc
movntq
push
enter
jmp
pusha
call
mov
xchg
fnsave
cmp
mov
mov
mov
jp
rcll
or
and
in
adc
fdivrs
jns
test
dec
mov
jo
adc
mov
push
test
push
clc
and
mov
push
stc
int3
mov
dec
add
and
je
data16
rcpps
mov
neg
jp
cmp
outsl
rolb
faddl
push
xchg
jmp
rcr
rclb
out
xchg
clc
ret
in
out
mov
aad
lock
jno
or
out
push
lods
mov
out
push
loop
xor
xor
dec
sbb
push
in
pop
jle
idivb
push
int3
ss
push
scas
inc
mov
sub
add
fadds
mov
sbb
cmp
jl
dec
pop
sbb
in
dec
cmp
in
xchg
jns
std
mov
cld
xchg
fcmovne
add
mov
inc
push
jne
and
hlt
leave
sbb
mov
xchg
xlat
and
mov
inc
adc
rcl
in
mov
stc
clc
cltd
mov
dec
sub
out
sub
xchg
mov
fnstenv
pushf
nop
nop
jp
imul
sub
int3
push
mov
jl
hlt
fisubs
insb
cmp
pop
cwtl
push
add
mov
mov
aam
xchg
xchg
xchg
dec
xchg
push
jne
in
pop
sbb
xchg
jmp
loop
jmp
and
xchg
pop
hlt
mov
pop
ss
cmc
xchg
cmpsl
sbb
inc
jae
ljmp
jnp
or
ljmp
div
pusha
movsb
pop
in
mov
aam
sub
sub
xchg
mov
xor
add
xchg
pusha
pop
xchg
mov
xchg
sarl
xor
or
and
sahf
push
pop
add
not
clc
pop
shll
cmpsl
loopne
mov
cmpl
js
inc
outsb
sbb
loopne
adc
into
or
xor
sahf
outsl
jb
arpl
inc
mov
pop
mov
pusha
je
iret
sub
dec
aad
push
adc
jl
repnz
sub
push
xor
sub
gs
test
cmp
ss
pop
pop
pop
les
push
nop
out
sbb
pop
mov
mov
int3
mov
pop
cmpsb
sahf
aam
xchg
std
mov
mov
cmpsb
mov
dec
pop
adc
into
push
and
or
xchg
pop
inc
dec
bnd
pop
jb
xchg
cs
popf
das
into
xor
insb
out
or
ja
dec
mov
sbb
cmpsb
pop
cld
jne
repnz
in
cmpsb
jle
pop
out
jnp
dec
push
idivb
shrb
pusha
movsb
jo
dec
divb
leave
jle
pop
arpl
dec
mov
leave
out
cmpsb
pusha
cmc
ret
dec
pop
cltd
sub
test
mov
inc
adc
movsb
pop
mov
pop
icebp
mov
pusha
mov
into
outsb
jge
insb
pop
mov
push
adc
lcall
add
iret
imul
rclb
mov
pusha
sbb
push
push
ljmp
adc
movsb
hlt
cmp
ja
adc
clc
xor
nop
fistl
sub
hlt
push
adcb
rcrl
sub
cmpsb
test
inc
add
gs
repz
pusha
adc
push
lock
mov
call
sbb
dec
adc
pusha
or
xchg
jg
xchg
and
adc
arpl
jle
cmpsb
jne
adc
adc
shlb
outsb
out
xchg
movsb
mov
xchg
andb
jl
cltd
adc
sarb
arpl
cltd
lcall
out
test
fmul
aad
outsl
test
cmpsb
add
mov
mov
mov
roll
pop
out
fsubrs
dec
xchg
xchg
jns
addr16
mov
mov
clc
adc
add
rolb
cmp
mov
dec
data16
sahf
loop
cmpsl
cmp
add
add
loopne
mov
fistl
stos
mov
dec
mov
xor
repnz
mov
and
mov
rcrl
mov
gs
jnp
xor
fistl
push
shll
xchg
icebp
mov
add
add
loope
jb
or
data16
repnz
aam
jbe
std
and
std
dec
xor
add
and
xor
loop
fcoml
fidivrl
popa
pop
mov
dec
push
in
and
pop
bound
xchg
mulb
int3
push
nop
xlat
mov
lcall
jns
loopne
out
jp
cmpsb
xor
xor
push
mov
adc
sarl
fwait
cs
cwtl
std
and
gs
mov
mov
fmuls
add
sbb
or
sbb
or
jp
dec
mov
push
aad
dec
xor
cwtl
sbb
lock
loopne
lock
xchg
sbb
clc
into
adc
gs
jp
cmpsb
fs
je
xor
dec
pusha
xchg
xchg
jecxz
leave
sbb
sbb
fmuls
std
out
sub
xlat
lahf
push
inc
popa
and
arpl
nop
mov
xchg
or
push
outsl
cwtl
xchg
xchg
jl
push
cmp
mov
imul
cmp
loop
cwtl
cmpsb
pop
out
lea
lock
adc
cltd
ret
xor
lea
inc
out
cwtl
mov
pop
pop
xchg
lahf
stc
jb
cmpsb
cli
push
out
scas
sbb
stc
loop
push
push
fcmovu
push
fidivrl
stos
fcomps
stc
push
mov
adc
jns
adc
leave
push
or
into
addb
sub
sbb
mov
adc
xchg
jbe
data16
test
fptan
jle
sub
and
adc
je
test
xchg
jb
mov
scas
cltd
mov
cwtl
jns
and
jbe
push
dec
adc
inc
pop
xor
push
adc
jno
jno
cmp
or
mov
sub
lea
cmpb
adcb
xchg
fsubrp
push
mov
daa
fcomps
enter
add
xor
mov
cmpsb
pop
jecxz
nop
in
fsts
dec
push
xchg
cmpsb
cmc
aad
dec
addb
daa
sub
push
cld
dec
mov
push
jb
jo
mov
cmp
dec
sub
add
fisttpl
push
mov
xchg
adc
push
sub
mov
and
xchg
out
mov
pop
fisttpl
sahf
mov
pop
pop
xchg
jno
jg
push
and
subl
pop
mov
cmc
test
imul
xchg
int3
jl
nop
std
push
add
and
je
jne
xchg
xchg
dec
jp
push
lock
fptan
test
repz
cltd
dec
in
ds
fiaddl
or
test
jo
outsb
stos
gs
push
push
inc
clc
pushl
sub
pop
out
sbb
dec
stos
mov
sub
sbb
add
adc
mov
add
or
pop
jae
movsl
clc
fcmovnb
inc
clc
jmp
es
stc
std
jne
sub
in
adc
mov
ja
inc
push
lds
and
nop
loopw
arpl
jae
push
add
clc
repnz
andb
fstps
adcb
jg
pop
hlt
jae
or
xchg
fstps
mov
and
out
pop
dec
jo
add
fisttpll
or
jo
testb
out
inc
lcall
fwait
neg
clc
pop
ja
insb
in
out
add
pop
test
pop
add
or
mov
jb
adc
mov
cmpsb
cmpsl
jge
inc
jbe
jo
ret
mov
data16
test
icebp
add
mov
testl
push
rorl
mov
icebp
ret
nop
adc
jb
mov
mov
jns
jmp
ret
jno
js
jge
mov
fwait
cmc
xchg
mov
adc
pop
inc
fprem
repz
daa
pop
mov
dec
hlt
out
mov
mov
sbbb
fcmovbe
jo
repnz
xchg
xor
out
mov
and
es
dec
mov
mov
cltd
dec
fwait
add
stc
in
sbb
add
out
cmc
adc
adcl
and
xchg
xchg
aad
pushf
adc
push
pop
aaa
xchg
push
pop
in
push
adc
pop
sbb
xchg
lods
jmp
pushf
fs
out
cmp
insb
sarl
outsl
loop
into
enter
out
xchg
and
jno
pusha
pop
sub
inc
cmp
outsb
movsb
sti
ret
pop
jge
xor
inc
jp
and
xchg
mov
add
int3
add
sbb
stc
adc
mov
dec
mov
sbb
pusha
mov
mov
xchg
adc
lahf
sbb
sub
xchg
pop
mov
mov
cmpsb
fldt
bound
or
ficomps
dec
aam
jl
or
lds
not
mov
lds
pop
mov
cmp
je
and
and
daa
adc
jb
mul
roll
aas
xchg
nop
enter
rorl
lret
nop
xchg
loopne
sub
inc
insb
jmp
dec
inc
repz
jge
filds
int
test
outsl
dec
adc
add
dec
shl
shll
sub
insb
adc
xor
adc
out
mov
and
mov
push
cmpsb
fs
fiadds
xor
fprem1
shrb
mov
in
rep
movsb
mov
out
jmp
sti
clc
jbe
push
sbb
cwtl
scas
iret
xchg
repnz
mov
sbb
cmpsb
leave
icebp
das
call
adc
in
ret
in
je
fstpl
pushf
xchg
pop
xchg
add
mov
test
cmp
loop
xchg
mov
loopne
pop
inc
aam
fstpt
xor
dec
and
test
pop
cmpsb
jge
daa
pop
mov
sti
jnp
xor
xorb
movsb
or
adc
idiv
lahf
inc
scas
jp
or
shll
and
sbb
rorb
or
call
pop
outsb
mov
mov
leave
mov
repnz
adc
es
scas
jg
es
daa
fwait
jns
sbb
nop
lds
jno
cmp
dec
push
shr
mov
es
repz
dec
sbb
xchg
and
clc
in
pop
push
icebp
add
movsl
lret
xchg
nop
cwtl
fcompl
mov
push
repnz
imul
or
cmp
fwait
outsb
out
movsl
cmc
cmp
xor
pop
push
aas
nop
cmpsb
lods
sbb
repz
lock
aad
loopne
push
xlat
nop
mov
adc
jnp
in
addr16
ljmp
inc
mov
ret
popa
out
out
dec
cli
sbbb
sbb
loopne
nop
push
loope
mov
orl
fisubrl
jl
pop
mov
movsl
sbb
out
cmpsb
scas
add
negl
test
cwtl
in
mov
out
cmp
les
adc
stc
ja
mov
out
xchg
in
call
imul
loope
lahf
icebp
insl
mov
jecxz
pop
dec
pop
mov
cmp
mov
repz
bound
xchg
pop
ss
mov
in
xor
cmp
mov
or
nop
pusha
push
mov
xor
mov
dec
or
sbbb
cld
mov
inc
je
and
mov
mov
xchg
inc
notl
and
inc
outsl
push
scas
dec
ds
mov
pop
mov
jns
div
xchg
push
push
out
mov
xchg
insl
call
push
lahf
push
jge
mov
cmc
outsb
sti
xchg
js
mov
push
xchg
mov
ja
clc
fimull
sbb
sbb
mov
or
aad
add
xor
movsl
addr16
in
enter
mov
lret
cld
data16
push
test
ret
mov
xchg
push
push
and
ret
add
mov
dec
bound
roll
sbb
aam
repnz
push
or
lret
jl
out
inc
pop
adc
push
push
inc
cmp
adc
nop
popf
aad
mov
add
sti
cmpsl
jle
fildll
or
mov
repnz
insl
push
cmpsb
and
in
rorb
cmc
add
aad
js
fimull
adc
jle
iret
mov
aad
dec
xchg
loope
adc
jae
sahf
out
mov
xchg
and
icebp
xchg
nop
std
jns
in
test
fiaddl
imulb
subl
xor
adc
inc
mov
call
jp
jle
mov
sbb
hlt
shlb
dec
pushf
mov
clc
pop
pop
cmpsb
adc
ret
push
pushf
add
mov
dec
clc
or
shll
insl
lahf
xchg
in
pop
mov
sbb
mov
xchg
mov
xlat
out
jae
icebp
decl
fisubs
xlat
lock
or
jae
push
dec
mov
aad
ja
jge
repnz
push
clc
lea
cmp
test
out
adc
mov
gs
movsb
out
cmc
clc
push
push
cwtl
dec
ljmp
cmp
sub
sub
hlt
xchg
repnz
imul
mov
mov
push
aam
jl
ret
stc
push
mov
inc
and
popf
sbb
or
xchg
mov
mov
cmpsb
add
in
jo
mov
outsl
sbb
in
adc
outsb
in
ljmp
frstor
imul
into
lods
add
mov
lahf
stc
adc
scas
push
dec
mov
cmpsb
sub
rcrl
mov
dec
sti
pop
lock
repz
mov
iret
or
mov
sub
loopne
fadd
sub
mov
pop
mov
icebp
mov
push
cli
aad
push
test
ja
adc
nop
add
mov
ret
xchg
call
cmp
add
into
popl
stc
cmp
mov
out
movsl
pop
xchg
pop
mov
sub
insl
mov
xchg
loopne
shrl
or
xor
popa
fucom
in
pop
call
push
cmpsb
add
out
xchg
aas
jp
push
imul
mov
cmp
dec
imul
xchg
out
cmpsb
dec
loop
adcl
add
in
js
lods
mov
pop
repnz
mov
insl
cmp
pop
pushf
adc
scas
cmp
loopne
adc
cwtl
shl
test
int3
jae
sbb
lods
scas
push
shrl
jle
ss
nop
pop
jl
repnz
frstor
loopne
rcrl
mov
dec
enter
dec
jp
jmp
push
repnz
outsl
push
mov
jmp
hlt
xchg
push
hlt
out
fidivrl
add
scas
mov
scas
test
sbb
cmp
clc
mov
add
mov
push
shll
imul
jl
mov
daa
adc
lock
and
xor
aaa
std
popf
jb
push
mov
xchg
pop
and
inc
fistpl
aaa
rol
hlt
jne
xchg
mov
int3
test
or
or
out
xchg
imul
repnz
mov
decl
or
push
xchg
xchg
mov
pop
adc
fcomps
mov
add
and
add
jmp
fstpl
in
leave
scas
movsb
mov
fcmovnu
xor
cmp
sbb
xchg
mov
lock
addr16
mov
add
pusha
pop
mov
imul
xchg
inc
jno
imul
adc
jp
pop
pop
inc
das
in
mov
pushf
or
sahf
testb
sahf
mov
mov
addl
push
pop
test
js
lret
sbb
xchg
fisubrl
xchg
testb
adc
cld
inc
adc
mov
lret
cltd
adc
inc
in
sahf
lret
lret
xchg
cmpsl
jo
xchg
xchg
cmpsb
imul
add
jp
pusha
jge
clc
inc
xchg
pop
ss
negb
mov
sub
jle
jno
xchg
jo
xchg
call
cld
idivb
int3
add
loope
dec
out
mov
bound
pop
js
push
xchg
pushf
adc
leave
push
push
cmp
fucomi
add
lahf
imul
dec
into
pop
push
aad
pushf
push
nop
jge
dec
jbe
xlat
rolb
cwtl
xchg
shl
es
adc
or
shl
cmp
and
popa
adc
inc
insb
dec
add
fadds
cltd
mov
cwtl
aam
clc
stc
sidtl
hlt
out
jmp
push
cmp
mov
xchg
mov
mov
fwait
call
clc
sbb
mov
adc
in
mov
or
add
jp
mov
or
fwait
imul
repz
ror
adc
dec
rorb
out
jp
leave
cltd
push
shlb
xchg
dec
mov
xorb
pop
pop
jnp
jle
into
idiv
jle
lret
aad
xor
psrad
fidivrs
adcb
xchg
movsl
mov
and
xchg
out
divb
dec
jge
inc
sub
adc
hlt
stc
mov
std
xchg
bound
aam
sbb
dec
or
xor
shr
cmp
scas
adc
rorb
or
xchg
cmp
test
ljmp
jp
and
jno
push
mov
xchg
decl
adc
xor
mov
movsb
xchg
leave
bound
lahf
loopne
cmp
lock
into
adcl
mov
push
mov
fcmovnbe
icebp
out
repz
ljmp
adc
ret
divl
data16
cmpsl
xchg
xchg
sarb
sbb
pushf
xchg
xchg
or
nop
mov
dec
jns
jge
jmp
sbbl
in
test
xchg
xor
push
ja
adc
lods
iret
xchg
xchg
ja
lret
push
jns
hlt
inc
push
scas
pop
sarb
sub
aaa
les
sbb
mov
shll
imul
imul
in
loopne
fdivr
xchg
pop
call
mov
out
inc
jns
xchg
jbe
mov
mov
arpl
adcb
add
push
in
push
enter
movsl
and
mov
pop
cltd
fcomi
ljmp
mov
mov
add
loopne
aam
xchg
xchg
clc
cmp
ja
adc
jbe
xchg
mov
icebp
or
jnp
xor
fimull
lods
pop
scas
adc
sbb
aas
push
sub
ja
push
mov
test
add
xchg
adc
jae
ret
push
jo
sub
sbb
mov
and
pusha
mov
inc
lret
jp
in
fisubl
out
stos
cmp
xadd
imul
adc
or
mov
faddl
jne
pop
mov
test
cmp
adc
push
sub
sti
testb
push
cmpsb
push
sti
std
xchg
mov
stos
std
ficoml
fdiv
pop
ljmp
jp
and
pushf
ret
cmpsl
rcl
push
and
clc
cmpsb
in
push
sbb
nop
lea
jp
push
mov
and
andl
jle
jb
cwtl
orl
inc
in
insb
xlat
mov
nop
xchg
and
pushf
call
fwait
add
gs
xchg
push
cltd
pusha
xchg
push
mov
int3
hlt
cltd
mov
addr16
lret
icebp
repnz
hlt
adc
or
jns
xchg
push
xchg
pop
leave
mov
lret
aad
enter
mov
mov
rcl
jmp
xchg
shr
incb
outsb
cli
mov
test
out
int3
dec
and
sbb
je
pusha
call
jbe
xlat
into
inc
jae
fwait
call
mov
sbb
in
loopne
repz
inc
test
dec
outsl
jg
cmc
ret
add
jecxz
jmp
sarl
ja
cmpsb
loopne
std
mov
add
sub
jp
mov
mov
push
pop
cwtl
orb
add
add
cltd
push
adc
int
test
xchg
cmpsb
mov
pop
aad
xchg
clc
mov
stos
and
sub
push
cli
xchg
push
pop
std
dec
imul
dec
not
cmpsb
and
push
les
stc
movsl
shl
xchg
ss
fldl
cld
mov
jno
jp
cmp
gs
dec
dec
fiadds
pusha
mov
and
arpl
jp
mov
mov
push
movsl
daa
mov
icebp
xchg
fistps
sbbb
jle
sbb
pop
in
pop
adc
add
adc
inc
mov
aad
icebp
adc
les
ljmp
in
cwtl
out
loopne
or
adc
push
jb
jg
leave
adcb
icebp
popf
adc
adc
xchg
push
pushf
les
cmp
lea
test
push
rol
nop
cmp
mov
popa
fdivrl
rclb
xchg
push
push
or
insb
pop
mov
icebp
mov
xor
sahf
imul
pop
add
xchg
mov
or
jecxz
pop
mov
xchg
clc
jp
int3
xor
xchg
push
jne
mov
mov
outsb
inc
jge
pop
aaa
clc
push
push
insb
jg
jb
js
mov
jns
les
in
clc
cmp
fs
ja
jle
dec
mov
cltd
fstpl
imul
pop
outsl
mov
ljmp
loopne
add
jp
dec
mov
repnz
call
nop
xchg
jns
in
mov
mov
mov
fsubrp
pop
xchg
lods
xchg
jo
aam
aad
in
ror
andb
nop
mov
xchg
outsb
loopne
pusha
push
inc
int3
push
mov
mov
gs
fdivrl
dec
xchg
fcmove
mov
cmc
dec
push
jns
xchg
mov
pop
pop
adc
call
xchg
xchg
or
test
mov
loop
lea
fcoms
adc
pop
into
in
or
adc
adc
repnz
stc
lret
and
mov
adc
fcoms
arpl
xchg
mov
std
stos
fwait
xchg
pop
ja
adc
out
nop
adc
orl
and
popa
in
push
adc
cmpsl
mov
repz
pop
lret
in
fcmove
push
push
cltd
cli
mov
sbbb
jb
outsl
xchg
subb
scas
add
call
jnp
das
adc
in
mov
xor
inc
lahf
xor
lret
fisttps
jp
sub
nop
cwtl
loopne
fisttpl
cwtl
lods
into
mulb
adc
fdiv
xchg
cmc
xor
nop
mov
lock
loope
aam
cmpsb
push
cltd
stc
jl
cmp
pop
inc
adc
jg
xchg
shlb
mov
das
loope
ljmp
inc
cwtl
mov
push
repz
dec
addr16
sub
push
js
popf
int3
lods
inc
xor
add
shlb
into
popf
jmp
negb
inc
test
repnz
xchg
scas
pop
ficompl
or
lahf
or
bnd
cmpl
hlt
repnz
pop
std
mov
fwait
pop
stos
jmp
and
mov
int
rorl
inc
das
subb
jl
xchg
pusha
xchg
daa
jbe
out
xchg
loopne
push
fnstenv
pusha
ljmp
mov
imul
mov
xlat
fldenv
ficompl
push
pusha
jp
cltd
adc
dec
enter
dec
sarb
adc
icebp
sbb
push
mov
cmp
scas
outsl
cmpsb
gs
fprem1
mov
cli
xchg
adc
stos
push
adc
sbb
add
and
jae
mov
aad
aas
scas
push
cmp
mov
bound
mov
shl
xor
ljmp
mov
or
mov
loopne
cmpsb
mov
mov
push
add
mov
jns
jmp
fstps
and
andl
clc
out
mov
insb
xchg
sbb
jb
mov
negb
js
mov
movsl
mov
sahf
cmpsb
lahf
repz
jle
adc
pusha
std
mov
rol
xor
gs
xchg
sub
in
out
adc
icebp
outsb
movb
lret
cmp
ret
xchg
fstl
jge
imul
and
push
xchg
fdivrs
loope
in
jle
jne
dec
mov
icebp
cwtl
pop
jge
mov
shll
adcl
jg
mov
and
les
and
pushf
mov
inc
mov
push
sbb
out
fnstcw
lahf
ja
dec
fnstsw
cmpsb
arpl
out
dec
test
dec
mov
inc
dec
cwtl
or
mov
test
pop
inc
inc
mov
bound
int3
xchg
dec
dec
mov
mov
push
push
sub
mov
jle
in
and
xchg
adc
or
xchg
xor
xor
test
mov
sahf
push
sarb
movsl
xchg
btr
push
add
movsb
call
nop
cwtl
push
xchg
sbb
arpl
and
xchg
dec
nop
shl
xor
xchg
xchg
push
push
dec
lods
fists
scas
jge
stc
nop
fidivrl
fs
pop
movsl
scas
int
jns
fistps
push
fmull
lods
std
jne
pop
stc
xchg
stos
sub
mov
nop
mov
push
clc
mulb
cmpsb
sub
inc
stos
xchg
inc
add
lods
adc
outsl
fldt
pop
xchg
push
jno
inc
cwtl
adc
mov
hlt
imul
mov
sub
loop
mov
fcoml
icebp
arpl
inc
jne
daa
movsl
jle
shll
mov
mov
jne
sbb
lock
sub
sbb
xchg
shl
push
xchg
cwtl
lods
or
movsb
mov
add
sbb
xchg
mov
lahf
js
cmp
out
lds
jo
enter
enter
stc
mov
ficompl
bound
sbb
adc
mov
adc
pop
xor
mov
fdivs
push
push
or
pop
stos
notb
aad
fimuls
jp
in
test
cmp
stos
pop
out
push
sbb
xor
pop
sahf
ficomps
aad
jb
jbe
lods
call
xor
leave
cmp
hlt
push
inc
aad
mov
clc
icebp
jge
adc
mov
sbb
push
jp
aad
insl
fistl
hlt
or
popa
mov
outsb
ljmp
cmp
jmp
nop
xchg
push
out
pop
mov
sbb
dec
xchg
sbb
and
cwtl
cmpsb
lret
js
out
ret
ds
aad
pop
adc
push
sub
xchg
insl
rclb
fwait
cmc
ret
mov
fptan
out
or
in
adc
stos
add
jge
test
sahf
pop
sbb
xchg
movsb
add
inc
mov
xchg
jp
add
movsb
adc
lds
sub
insl
int
pop
jns
mov
xchg
ds
mov
out
inc
add
es
popf
insl
cmpsb
or
add
or
xchg
jmp
hlt
or
cmpsb
push
popf
mov
arpl
xchg
popa
pusha
dec
js
xchg
ds
pop
mov
js
pusha
xchg
cwtl
mov
loop
repnz
jne
fmuls
mov
mov
ja
test
loope
pop
loopne
es
out
ss
sbb
in
mov
pop
push
fsubrp
out
mov
push
mov
and
maskmovq
imull
pop
jmp
cli
xchg
and
sub
aas
cwtl
fmull
imul
lock
mov
sub
adc
and
sbbb
adc
xor
sbb
in
cmp
pop
cmpsb
aam
mov
lahf
jp
and
push
es
cli
mov
leave
and
gs
push
mov
inc
dec
in
lret
out
sbb
and
stos
push
leave
int
fs
jns
mov
dec
push
pusha
mov
inc
pop
cli
jp
jns
shl
mov
sbb
pop
cwtl
test
add
adc
or
std
popa
insl
or
iret
sbb
sarl
clc
ret
mov
aas
xchg
dec
adc
icebp
rorb
outsb
insb
arpl
ds
in
pop
leave
ljmp
push
out
addl
adc
pop
xchg
add
lock
push
adc
fcompp
into
pusha
into
mov
add
mov
mov
gs
out
add
dec
or
push
mov
jle
shlb
xor
pop
ja
test
js
and
dec
inc
inc
decl
and
in
dec
adc
repz
xchg
mov
lret
sbb
cli
xchg
pop
inc
or
stos
notb
nop
add
fwait
dec
outsb
xchg
nop
setnp
xor
sbb
sbb
mov
shrb
adc
leave
aam
lods
mov
mov
mov
cwtl
mov
dec
cwtl
les
jae
mov
cmpsb
add
in
insl
mov
jbe
shrb
fldt
sbb
jmp
fucom
adcb
jle
mov
aad
insl
movl
cltd
popa
push
std
xchg
mov
pop
push
push
sahf
movsl
sbb
push
dec
imul
pop
outsl
jb
and
jno
orl
dec
dec
arpl
mov
cwtl
jl
sub
xor
mov
loopne
inc
ja
pop
in
mov
mov
jmp
mov
push
aas
mov
add
insb
fwait
gs
dec
out
push
adc
fwait
add
sbb
nop
pop
xchg
clc
xchg
xchg
xchg
cmc
aaa
jmp
jge
xchg
mov
loopne
icebp
cwtl
nop
pop
mov
sbb
movsl
mov
loopne
notb
sbb
and
xchg
shll
sbb
xchg
rol
push
ret
call
jle
fdivrl
add
cmp
pop
idivb
and
push
test
sub
mov
xchg
clc
pop
jmp
fstps
cwtl
xchg
xchg
arpl
mov
jl
jno
jae
imul
rclb
push
adc
push
adc
icebp
jl
fdivrs
rolb
lock
pop
inc
insb
rclb
ret
xchg
stc
pop
int3
cltd
mov
aad
insl
stos
leave
popa
lock
or
mov
cwtl
sbb
ja
repz
cmp
xchg
fdiv
jp
pop
clc
dec
add
nop
adc
hlt
cmpsb
daa
fiadds
cmp
in
pop
mov
lahf
xor
xor
jg
sbb
cmp
mov
test
mov
int
xchg
jle
outsl
jns
adc
not
sbb
rcr
loope
lahf
push
dec
pop
adc
xor
in
cmp
jp
dec
pop
jae
std
cwtl
es
sub
xlat
inc
adc
mov
lahf
xchg
lret
aaa
aad
shl
fisubl
add
or
xchg
test
aad
xor
cltd
call
divb
rclb
mov
xchg
cmpsb
cld
insb
repz
xchg
popf
and
stos
mov
roll
push
repz
sbb
fwait
mov
fcmovu
mov
jo
adc
push
and
pusha
lock
pop
clc
add
xchg
or
cmpsb
xorl
out
cwtl
dec
test
adc
mov
and
pop
jno
inc
dec
jne
arpl
push
inc
mov
mov
shrb
cmc
xchg
xor
xchg
test
and
xor
cmp
imul
adcb
mov
mov
adc
sbb
repnz
cli
loopne
jns
add
clc
jno
decl
insb
mov
bound
push
out
adc
mov
repnz
clc
adc
or
pusha
mov
out
sub
cmp
add
cmpsb
xor
dec
jle
mov
scas
or
sti
adc
mov
pop
insb
lahf
and
sbbl
adc
mov
cmpsb
inc
dec
pop
or
xchg
call
jmp
subb
out
imul
sbb
std
pop
mov
mov
jae
mov
mov
xchg
push
aaa
jo
xchg
mov
cwtl
xchg
xor
mov
jae
jmp
insb
jo
test
fcmovbe
test
xchg
xchg
jae
mov
imul
cmp
mov
lret
fdivrp
outsb
push
div
nop
dec
outsl
mov
jb
out
pop
pop
mulb
fucomip
push
xchg
hlt
or
add
xchg
jae
push
cmp
adc
in
negl
clc
xchg
mov
cmp
mov
mov
cmp
imull
pop
sbb
fsubrs
sbb
dec
js
dec
cmc
cmpsb
ljmp
sbb
cli
es
ret
push
fstl
cmp
or
adc
xchg
scas
xor
dec
xchg
clc
jmp
add
xchg
or
adc
cmc
data16
xor
adc
jns
das
mov
jp
sub
fsubr
popa
andb
cmp
lea
pop
mov
fsubrs
pop
sahf
gs
push
movl
test
cmpsb
icebp
mov
lahf
adc
adc
xchg
out
mov
xchg
pop
ss
push
in
stos
icebp
pop
cmp
mov
mov
inc
sbb
mov
xchg
jp
or
ret
mov
repnz
mov
fwait
je
xor
push
pop
lods
dec
shll
in
ja
mov
insl
pop
pop
push
cmpsl
add
repz
cmp
jae
mov
shl
sub
mov
out
or
inc
in
inc
or
mov
inc
xchg
pop
addr16
stos
xor
in
mov
test
and
test
jge
ja
add
lock
jge
negl
and
mov
loopne
lods
push
cwtl
insb
test
pop
clc
mov
les
push
scas
xchg
and
mov
sbb
and
imul
cltd
jg
jbe
sahf
cltd
push
adc
mov
xchg
mov
jp
xchg
mov
adc
or
sub
xchg
in
cltd
mov
sbb
xchg
xchg
push
adc
sbb
popa
mov
adc
or
inc
fstpt
cmp
dec
mov
jmp
test
stos
out
ljmp
call
shl
pushf
repnz
adc
jno
pop
mov
xchg
imul
hlt
call
jmp
xchg
rolb
pop
fdiv
xchg
pop
fsubrs
loopne
inc
outsb
mov
rcrl
cwtl
pusha
push
ret
sbb
fisubrs
ficoms
les
pop
insb
lahf
dec
std
gs
xlat
in
mov
xchg
inc
ret
add
xchg
scas
cltd
xchg
ljmp
ret
add
icebp
fdiv
xchg
scas
vpsubusb
sbb
pop
fnstsw
icebp
xchg
xor
sub
xor
mov
subl
cmp
test
loop
xlat
cmp
lds
iret
sub
push
mov
xor
je
lock
cwtl
adc
test
cmpb
scas
jg
nop
or
pop
jno
popl
dec
xchg
add
adcb
xchg
icebp
stos
mov
dec
or
pop
add
mov
cmpsl
mov
cmc
dec
mov
into
shlb
insl
xchg
outsb
fcompl
out
xchg
sub
outsb
rolb
lahf
xchg
pop
push
rcr
outsb
mov
jmp
shlb
jns
mov
movsb
nop
fists
sar
mov
loope
mov
test
mov
lea
fcomip
jbe
push
xchg
push
add
or
in
adc
xchg
nop
mov
mov
add
push
cmc
push
jnp
movsl
test
jle
es
nop
test
cmp
add
dec
xchg
inc
pop
nop
rcll
pop
mov
mov
aaa
pushf
push
je
cli
ljmp
cmpsb
add
mov
andb
fs
scas
push
out
xor
stc
lds
dec
cli
pop
loope
adc
xchg
popf
jns
fsubl
stos
xorb
sbb
dec
inc
pop
stos
mov
mov
pop
or
mov
and
cmc
outsl
stos
aam
jmp
fs
cmp
dec
dec
xchg
aas
nop
adc
jo
test
outsb
fsubl
push
inc
fdivrs
rcrb
movmskps
cmp
orb
icebp
mov
pop
in
cmp
cli
pop
mov
jo
rorl
inc
push
es
pop
mov
lret
stc
add
push
scas
xchg
stos
pop
in
imul
out
daa
or
popf
mov
ljmp
sub
pop
sbb
sbb
imul
mov
push
jb
push
into
in
out
sbb
or
adc
dec
loop
inc
xchg
aad
sub
xchg
out
mov
repnz
ja
sub
mov
push
xchg
clc
cwtl
mov
mov
js
pop
mov
push
sbb
or
cwtl
stos
jl
mov
pop
scas
sbb
scas
imulb
mov
inc
inc
scas
mov
mov
mov
pushf
clc
push
test
add
sbb
ds
mov
mov
sbb
sahf
loop
adc
bound
pop
or
mov
mov
xchg
mov
xchg
nop
loopne
je
bnd
fwait
cltd
lcall
xor
lea
jmp
xchg
mov
sbb
mov
mov
mov
sbb
lcall
popf
imul
jne
out
jo
xchg
or
cltd
pop
mov
lods
mov
popa
popl
pusha
movsl
mov
ret
xor
mov
pop
test
dec
adc
fiaddl
pop
pop
inc
sbb
or
cwtl
mov
in
push
dec
push
sbb
ficomps
add
mov
inc
xchg
dec
sbb
sbb
mov
in
orb
rorb
mov
dec
mov
jl
jmp
inc
inc
mov
and
mov
xchg
das
cltd
scas
mov
les
test
mov
cltd
mov
xor
adc
leave
sub
cmc
fidivrl
shll
repnz
rclb
ds
scas
icebp
sbb
in
shrl
adc
lcall
sub
dec
int3
sbb
xor
je
outsb
jns
push
ret
sub
jle
pop
es
lret
inc
movsb
or
mov
inc
push
mov
ljmp
jne
jle
xchg
fdivp
cmp
dec
imul
lret
es
insb
out
sbb
add
xchg
push
xor
popf
shrl
push
push
ss
popf
insl
cltd
lahf
jle
in
and
xchg
fsubrl
in
xchg
sbb
push
aaa
xchg
pop
fiaddl
fdiv
pusha
jmp
int3
xchg
lcall
test
inc
push
cmpsl
sbb
and
push
xchg
fcmovu
stc
xchg
or
test
adc
fwait
addb
sbb
add
push
sbb
icebp
dec
outsl
add
mov
mov
jb
scas
fstps
sbb
jp
idivb
mov
jae
and
jge
or
add
xchg
insl
cwtl
pop
sbbl
cmc
mov
insb
pop
jne
push
orb
ficomps
fs
pusha
push
leave
sbb
adc
mov
test
stc
cmpsb
cmp
in
sub
push
imul
std
jns
iret
clc
subl
loopne
jnp
xchg
in
sbb
xchg
aam
repz
lea
loop
push
std
jno
xchg
and
jecxz
or
shrl
mov
jne
clc
sbb
lock
adc
push
movsb
or
and
daa
ret
xchg
pop
ret
and
mov
rcr
sbbl
mov
push
mov
imul
out
xor
add
jmp
mov
xchg
push
adc
sahf
out
dec
lret
bound
rcrb
fs
jb
scas
xchg
xor
dec
adc
mov
push
lds
add
xchg
test
sbbl
adc
cmp
jnp
xchg
xchg
test
shrb
adc
push
xchg
and
or
aad
test
xor
addr16
jbe
hlt
jb
pusha
das
sarb
aam
pop
sbb
push
loope
mov
or
mov
mov
mov
push
jno
push
sbb
push
mov
ss
int3
xchg
fiaddl
shrb
ljmp
sub
jl
mov
orb
call
lahf
ljmp
pop
pop
mov
add
stos
add
mov
xchg
dec
mov
push
jle
jbe
push
mov
sbb
adc
add
jnp
fsubrl
movsb
or
mov
mov
bnd
fs
lret
jp
sub
pop
pop
ds
adc
xchg
lods
xchg
pop
push
xchg
xchg
fidivrs
rol
lock
aad
lcall
mov
dec
stc
pop
mov
mov
clc
pop
nop
js
sbbl
repnz
dec
add
and
int
scas
enter
std
mov
out
xchg
jl
jp
adc
fistpl
jmp
jbe
xchg
push
push
xor
sbb
push
pop
rcr
pusha
scas
mov
mov
xchg
push
sbb
mov
cmp
sbb
push
lahf
push
xor
lods
enter
or
xchg
sarb
or
mov
popa
pmuludq
cmp
cli
inc
mov
mov
out
shr
mov
and
xorl
bnd
stc
or
cmpsb
into
or
inc
lcall
enter
fmuls
jbe
jl
mov
push
stos
push
mov
mov
mov
mov
pusha
jns
mov
inc
int3
xchg
xchg
xchg
cmpsb
shlb
jge
jp
add
out
xchg
pop
or
push
test
cmpsb
rcrl
cmp
rorb
or
cmp
mov
push
mov
inc
inc
push
pop
dec
sahf
and
push
dec
idivl
rolb
pop
mov
mov
int
insb
lahf
int
nop
xor
or
fcoml
loope
fstps
pusha
push
ja
dec
adcb
mov
dec
fsubrl
imul
and
mov
mov
xchg
adc
inc
mov
mov
repnz
mov
out
loopne
shll
nop
mov
cld
lret
repnz
push
mov
shrl
inc
and
sbb
pop
repz
jl
jns
cld
push
dec
call
testb
mov
and
cmp
fiadds
add
push
adcl
adc
xor
add
popf
negb
or
xlat
aam
gs
movsl
mov
pop
push
dec
mov
mov
xchg
and
jbe
jno
nop
jl
sub
xchg
fimull
adc
jnp
and
lock
jl
imul
mov
add
mov
adc
sahf
icebp
mov
xchg
dec
cmp
out
insl
lahf
adc
mov
inc
adc
and
pop
fsubr
ret
cmp
adc
inc
or
repnz
xchg
aad
xchg
pop
sub
cwtl
lret
or
rcll
ficoml
std
mov
xchg
mov
mov
not
std
inc
jp
and
std
loop
pop
test
subl
mov
xor
dec
imul
sti
sub
adc
pop
arpl
aam
jns
lds
cs
cmp
push
insb
mov
mov
lods
xor
out
addr16
pusha
test
push
outsl
and
lcall
inc
mov
fiadds
pushf
test
mov
lock
adc
aad
lock
jno
movsb
das
add
sub
adc
push
mov
jnp
mov
cmp
sarl
das
mov
sub
dec
dec
clc
mov
inc
fcomi
inc
repz
lds
push
aam
xchg
das
cltd
cmp
dec
or
pop
rcll
push
sbb
dec
imul
sub
mov
mov
sbb
inc
cwtl
add
sbb
cltd
or
call
add
and
jecxz
xor
mov
fistps
xchg
pusha
jb
add
mov
div
jge
out
test
sub
stc
add
jnp
inc
push
jb
pop
dec
inc
jmp
cmc
add
and
adc
push
sti
mov
out
fimull
mov
jns
negl
pusha
adc
mov
xor
lds
movsb
cmpb
mov
add
sbb
test
and
jns
outsb
xchg
orb
jns
push
mov
xchg
cmp
xchg
insl
adc
add
jp
lea
adc
pop
cmp
inc
aam
or
mov
push
pop
fmuls
jnp
xchg
outsb
stos
test
test
xchg
hlt
jbe
ret
int3
fidivrs
mov
shlb
dec
pop
sbb
out
push
sbb
pop
sub
or
cs
add
push
xchg
cmpsb
divb
faddl
dec
stos
popf
cltd
outsl
adc
add
push
stc
jae
xor
mov
ljmp
repnz
test
xchg
add
movsb
xchg
inc
sti
mov
mov
scas
xchg
mov
in
dec
or
mov
xchg
pushf
mov
mov
fisttpl
in
stos
mov
movsb
mov
into
cltd
xchg
add
imulb
dec
jbe
addl
lods
push
clc
add
inc
mov
add
shll
in
icebp
mov
inc
mov
xchg
pop
sahf
mov
add
mov
mov
inc
mov
loop
fmul
inc
adc
jmp
popf
ror
adc
adc
mov
ret
xor
div
or
std
arpl
push
jo
in
testb
add
jl
outsb
rcl
add
and
in
push
cltd
stos
sbb
mov
rcll
push
in
rcll
jp
sub
mov
xor
aam
cmp
inc
mov
cmp
adc
fisubrs
imul
jg
jg
pop
ret
dec
rcll
inc
sbb
jg
in
dec
cmpsb
enter
fistpl
push
jge
pusha
adc
nop
repnz
and
not
xchg
dec
xchg
sub
mov
mul
jne
loopne
lret
xor
shlb
lds
mov
cwtl
mov
push
clc
inc
fs
in
and
repz
jge
inc
std
pop
pushf
or
rcrl
andl
hlt
call
pop
and
stc
jg
loopne
push
jb
rorb
in
das
shlb
cmpsb
mov
push
inc
jmp
or
mov
pop
gs
or
lret
ficompl
test
push
adc
fistpl
and
xchg
stc
xchg
insl
mov
rorb
xchg
xor
add
and
in
mov
adcb
repnz
cmp
add
xor
nop
repz
enter
dec
jmp
inc
outsb
scas
hlt
fmull
ret
dec
in
push
mov
or
xor
imul
call
mov
pop
adc
jbe
leave
jp
popa
aas
push
mov
adc
jmp
jns
xchg
mov
sbb
subl
xor
dec
scas
or
into
dec
jmp
icebp
pop
mov
cmpsb
aas
and
sbb
stc
add
xchg
clc
push
fwait
test
jb
lcall
pop
bnd
cltd
mov
xchg
sti
mov
xchg
cmpsl
push
repz
mov
xchg
fidivrl
xchg
lods
mov
xchg
xchg
testb
fstpt
sarb
pop
xor
in
inc
xlat
rcrb
adc
push
mov
or
movsl
clc
repnz
jl
cmp
jne
ret
or
popf
and
adc
mov
lods
sub
cltd
or
push
sbb
jp
jbe
mov
xchg
test
add
std
movsb
push
mov
sarl
or
rolb
pop
pop
add
sti
lret
insb
cwtl
daa
orl
jae
or
pusha
or
sub
sbb
shlb
xchg
pop
clc
fs
idivb
adc
push
out
adc
mov
fisubs
xor
clc
mov
das
mov
fcomps
xlat
jne
hlt
divb
mov
popa
pop
test
mov
daa
adc
mov
mov
std
call
ja
add
cmpsb
jae
int
aaa
aad
mov
andl
jp
out
sbb
or
add
adc
mov
imul
mov
sub
adc
xchg
fs
mov
aam
push
mov
clc
call
sbb
test
out
jb
cmpb
pop
scas
fldcw
mov
jmp
mov
jle
pop
push
mov
xor
in
rolb
clc
xchg
xchg
push
nop
xchg
mov
sub
cli
call
xchg
dec
or
xchg
cmpsb
mov
fidivl
test
cltd
xlat
sbb
fwait
test
pop
hlt
jnp
loop
or
pop
dec
lcall
in
sahf
pop
roll
sub
stc
dec
push
out
mov
push
jb
fildll
xchg
dec
xchg
stos
nop
popf
jg
rorl
std
xchg
pusha
fldcw
cwtl
mov
aas
jecxz
inc
and
add
mov
test
add
adc
dec
mov
pop
roll
dec
fadd
mov
test
test
dec
mull
xchg
lret
cmp
out
das
push
add
mov
clc
xchg
or
jp
jp
fs
sub
adc
cs
adc
inc
ja
cmpsl
adc
pop
gs
nop
mov
data16
out
push
in
push
mov
push
xchg
pop
adc
das
jbe
jp
and
sbb
or
dec
dec
rcll
mov
push
cmp
pusha
gs
in
xor
insb
mov
repnz
sub
mov
or
push
je
fdivrs
xchg
popa
iret
xor
enter
mov
in
mov
cwtl
jle
and
jns
push
pop
sub
mov
push
add
adc
loope
fwait
aad
fildll
xchg
shl
data16
ficompl
aad
adc
lret
jmp
clc
leave
pop
ret
add
jns
adc
fmuls
jo
push
add
pop
push
xchg
stos
mov
sahf
repz
cli
mov
mov
cmc
jp
ja
repz
mov
push
jg
jle
data16
nop
add
stos
out
loopne
add
loop
dec
insl
push
push
jle
mov
sbb
lods
mov
imul
sub
pop
mov
push
mov
adc
pop
mov
lahf
pushf
jo
iret
xor
mov
sbb
adc
std
ss
xchg
addr16
scas
lods
pop
fwait
clc
lods
int
xchg
popa
loopne
popf
loope
push
dec
push
lock
loopne
sub
dec
or
pusha
adc
test
xor
inc
js
add
mov
in
inc
testb
adc
lods
inc
dec
jge
sub
adc
movlps
xchg
push
gs
xchg
xor
dec
inc
pop
or
push
sahf
or
outsl
leave
call
cmpsb
test
xlat
movsl
pop
mov
and
or
push
stos
and
cmpsl
and
lods
ret
mov
xchg
sub
mov
xchg
test
ljmp
cli
fdivrp
inc
cli
or
loop
and
cmc
xor
push
icebp
mov
push
adc
pop
jle
sbb
jg
lods
cmp
sbb
test
cmpsl
dec
popf
mov
call
mov
push
sbb
mov
stc
pusha
pushf
xchg
outsb
cmp
and
sbbb
cmpsb
jae
dec
mov
les
jns
push
pushf
add
sub
sbb
lcall
mov
enter
movsb
clc
cwtl
icebp
cwtl
add
loop
stc
and
shrb
test
dec
pusha
inc
xchg
jmp
out
adc
loop
xchg
pushf
mov
fdivrs
pop
popl
pop
jge
pop
std
and
test
test
pusha
cli
jns
pop
sub
push
andl
and
mov
pop
mov
xchg
fisttps
mov
sbb
push
dec
data16
in
rclb
sarb
and
stc
dec
adc
loopne
pop
mov
adc
jb
andb
mov
aas
insl
cltd
inc
xchg
push
xchg
cld
sbb
jmp
aad
pop
pushl
into
xchg
clc
fmuls
xor
sub
xchg
mov
sahf
lahf
or
mov
mov
cwtl
std
out
subb
or
sub
mov
sarl
xchg
push
xchg
scas
loopne
mov
cmpl
rcr
shr
adc
mov
repz
mov
push
notl
stos
dec
rclb
xchg
sub
pop
pop
push
not
outsb
xchg
xchg
fsubs
add
sbb
ljmp
pop
aad
rclb
pop
inc
mov
scas
out
jecxz
lahf
jge
mov
out
repnz
mov
pop
lods
adc
lahf
jo
and
dec
and
movsl
hlt
repz
cli
mov
push
fwait
push
sbb
fucomi
xlat
inc
jb
orl
clc
pop
jecxz
or
xchg
push
out
repnz
add
mov
xchg
xchg
or
mov
popf
jle
or
add
mov
xchg
or
adc
dec
int
daa
or
cmpsb
push
sub
add
jp
sub
std
sahf
sbb
in
mov
mov
sub
aas
sbb
jb
clc
scas
push
gs
xchg
pop
and
xchg
cmp
mov
into
loope
and
clc
notb
push
gs
jo
testb
aaa
insb
adc
mov
ljmp
shll
cltd
jp
cmpsb
xor
sbb
adc
add
lock
mov
cmp
outsb
jmp
cltd
sti
test
cld
sbb
sti
pusha
sbb
and
add
outsl
out
xchg
jns
xchg
cmpsb
xchg
mov
mov
add
or
aas
adc
mov
insb
dec
rclb
push
cmpsb
sbb
xchg
pop
mov
mov
dec
repz
repz
shlb
and
insl
fdivl
ret
popa
pop
or
push
icebp
bound
aam
push
fcomps
into
movsl
jmp
mov
add
add
xor
aaa
mov
into
gs
les
push
lock
lahf
nop
lret
addr16
call
incl
bound
fsubrl
mov
icebp
cmp
fistl
stos
xchg
mov
or
mov
sbb
cmc
xchg
adc
lods
pop
aam
jo
mov
push
push
push
jnp
push
clc
adc
mov
mov
insb
cmp
xchg
das
and
je
xorl
rclb
inc
add
sub
mov
xchg
insl
or
bound
les
dec
jl
push
cwtl
mov
mov
inc
sub
mov
mov
cltd
dec
xchg
add
pusha
push
xlat
pop
mov
stc
adc
xchg
scas
pop
nop
iret
sbb
data16
sbb
movsl
fsts
ljmp
ljmp
movl
sbb
cmp
sub
out
dec
cmp
sti
leave
inc
call
and
cmpsb
arpl
sbb
jne
mull
xchg
push
xor
jae
dec
stos
ds
mov
rorl
icebp
ja
xchg
aam
push
out
xlat
int3
in
and
aad
daa
in
movsb
cmp
push
nop
in
add
xor
cmp
xor
repnz
aad
and
enter
mov
fisubrs
scas
decb
movsb
in
xchg
rorl
xchg
cmpsb
inc
stos
adcl
pop
mov
pop
fmuls
movsb
lea
repz
jo
ljmp
pop
ja
das
addr16
adc
insb
cmp
add
das
out
pop
fcmovne
in
or
xchg
mov
pop
pusha
mov
insb
dec
cmp
cmp
lahf
mov
sbbl
lret
adcb
js
dec
or
inc
into
mov
xchg
mov
sbb
lret
add
loope
mov
cmpsb
aam
push
outsl
in
cli
dec
mov
sbb
add
shl
jne
idiv
repnz
into
out
lea
mov
nop
add
sbb
xchg
adc
js
in
leave
cld
lahf
sub
popa
jo
cmpsl
xor
je
call
popf
idivb
xorl
cmp
test
iret
push
add
int
lock
sarb
rcll
mov
fcmovnu
sub
inc
xchg
and
mov
iret
sub
xchg
or
xchg
fnstcw
movsb
push
rorb
sbb
mov
inc
pop
sahf
cmp
or
sbb
jne
pushf
fdivl
fldl
shr
pop
rorb
leave
out
add
jge
cld
dec
arpl
add
hlt
into
mov
das
iret
mov
ljmp
lods
setb
call
dec
cmc
jbe
sub
inc
test
ds
push
xchg
xchg
sahf
pop
pop
xchg
cmp
ss
mov
pop
out
xor
stc
push
mov
push
and
mov
inc
pushf
xchg
mov
xchg
arpl
mov
add
xor
xchg
cwtl
mov
gs
xchg
inc
xchg
pop
xchg
cmc
xlat
push
rclb
cmpsb
mov
mov
out
cmc
or
xchg
mov
jnp
loop
cmpsb
dec
xchg
int3
das
inc
loope
in
push
mov
pop
mov
pop
icebp
mov
or
stos
pop
pop
cmp
cwtl
mov
and
mov
cmp
fldz
loop
xor
xor
and
mov
jae
and
call
sahf
fidivrl
dec
enter
cmp
dec
push
in
mov
es
rclb
pop
or
mov
hlt
adc
jnp
lods
push
mov
out
add
bound
xchg
aad
xchg
pop
pop
mov
jae
enter
xor
outsl
leave
or
dec
inc
xchg
push
xor
scas
push
movl
in
pop
bound
int3
insl
hlt
rcl
lret
inc
push
in
repnz
adc
nop
add
xchg
enter
xchg
rcrb
cmpl
or
jne
xchg
jle
lock
inc
push
mov
test
out
pop
cmpsl
pushf
sbb
imul
mov
lret
lods
pop
adc
test
out
cmpsb
pop
sti
cmpsb
fwait
nop
fcom
xchg
out
sbb
leave
sarl
clc
dec
movsb
cwtl
cltd
je
cmpsb
or
test
cmp
mov
les
mov
hlt
cmpsb
and
out
cmpsb
push
lcall
stc
push
xchg
pop
dec
xor
adc
xchg
sbb
dec
js
pop
adc
and
xchg
movsl
cli
xlat
jg
call
push
out
sub
jp
in
mov
lods
inc
adc
pop
addr16
orb
and
out
dec
in
sti
sub
nop
xchg
bndldx
xlat
push
pop
push
inc
or
nop
insl
fdivr
in
fidivs
clc
xchg
or
and
inc
int
jo
lods
mov
jo
and
xlat
or
fst
xchg
outsl
in
test
arpl
aad
jp
nop
add
jl
push
fadds
aad
stc
or
lock
mov
test
cmc
das
sbb
mov
rcrb
push
cmc
pop
add
imul
cmpsl
jge,pt
and
imulb
movsl
xor
cmp
roll
stos
lock
xchg
pusha
add
xor
jl
cmp
shl
xor
cltd
dec
or
jmp
std
xlat
fiadds
dec
mov
dec
or
out
jo
fcomps
in
mov
mov
clc
mov
mov
mov
lret
or
mov
sub
and
mov
repz
rorl
cmp
fmull
jbe
mov
pop
ror
ret
cmc
lds
shlb
mov
xchg
cmp
push
mov
xor
ss
clc
mov
pusha
test
pop
push
push
xchg
jbe
and
fs
cwtl
outsb
lock
lods
pop
cmpsl
clc
xlat
mov
cmp
xchg
mov
inc
clc
mov
xchg
xor
lock
sub
aam
cmp
and
xchg
mov
push
outsl
jmp
mov
jnp
add
sub
push
sar
xor
lds
jecxz
inc
or
shr
stos
daa
lea
mov
jbe
xor
pop
xor
das
test
rolb
adc
scas
jp
in
xchg
cwtl
cwtl
mov
jb
or
sahf
call
push
mov
pop
jle
lods
movsb
mov
mov
ljmp
mov
sub
mov
jns
daa
out
xor
xor
sbb
jl
faddl
inc
xchg
loopne
xchg
stc
inc
or
lds
mov
aam
sub
leave
jb
std
sbb
dec
or
or
lds
and
in
pop
es
loop
mov
pop
adc
loop
xchg
repz
call
jne
cmp
jno
adc
jo
adc
scas
ret
std
enter
pop
cmp
pop
rcll
sub
or
mov
xchg
stos
and
das
mov
lea
test
jno
cmp
sbb
pop
sub
push
ljmp
es
cwtl
ret
btc
cltd
and
iret
adcl
int
add
xchg
xchg
stc
lock
jle
repnz
cmc
pushf
fsts
sub
inc
cmpsb
test
adcb
icebp
in
cmpsb
aad
in
adc
jle
js
add
mov
in
lock
mov
jo
mov
xor
in
inc
cmp
aaa
jp
repz
jb
or
adc
pop
iret
sbb
icebp
xchg
add
push
xchg
inc
outsl
int3
pop
pop
out
jmp
pushf
mov
repz
aad
outsl
aas
xchg
dec
movsb
jns
lock
lret
lds
sub
stos
mov
add
xchg
pop
cmpsb
popa
les
mov
jmp
push
cmpsb
mov
jb
xchg
insb
mov
lods
push
aad
add
sbb
mov
int
andb
push
outsl
jp
in
scas
test
mov
std
and
in
cmp
cltd
add
mov
dec
flds
xchg
repnz
lret
mov
push
outsl
inc
cmp
idivb
pop
lock
cltd
ds
in
insb
pushf
rol
cmpsb
add
sbb
sbb
mov
xor
popl
into
push
insb
test
inc
adc
bound
xchg
ud1
adc
cmp
cmc
inc
mov
xchg
ret
xchg
mov
pusha
fs
test
stos
mov
mov
test
cmp
dec
mov
mov
mov
in
sub
push
aaa
adc
or
rcrb
add
mov
mov
fisubrl
push
orb
mov
jno
mov
push
sbb
into
notb
xchg
out
or
or
orl
lock
push
sbb
and
add
add
fidivl
cs
les
xlat
or
imul
or
xchg
xchg
mov
icebp
xchg
addr16
mulb
cmp
mov
mov
ret
out
jo
inc
mov
pop
mov
iret
pushf
mov
dec
or
inc
push
inc
jecxz
adc
fs
shr
in
iret
out
fld
lock
sub
xchg
or
sbb
dec
inc
fwait
mov
xchg
pop
add
imul
loopnew
lock
xchg
pop
xchg
aam
jo
pushf
lret
enter
or
add
xchg
js
sbb
in
shll
push
clc
push
lds
inc
adc
sub
jno
cmpsb
aad
push
mov
pop
push
add
or
push
sahf
jae
jecxz
fmull
pusha
or
jmp
jnp
sbb
hlt
lcall
stos
out
scas
ret
mov
jne
lock
fistl
leave
test
lcall
stos
pop
mov
or
mov
mov
out
adc
shr
dec
mov
cmpsb
mov
sbb
call
test
cmp
shll
jmp
mov
cld
in
mov
xchg
repnz
jp
and
jl
movntps
mov
xchg
xor
xor
cltd
jnp
fs
cld
sub
mov
in
xchg
jae
cli
mov
es
sub
nop
push
cmpsb
xor
aaa
xchg
push
cmp
insl
adc
pop
xchg
pop
outsl
imull
in
pushf
repz
mov
call
pop
nop
jo
cmp
loope
sbb
mov
inc
xor
cwtl
inc
cmp
dec
insb
mov
mov
mov
out
mov
add
cmp
movsl
pop
sbb
idivb
lds
scas
dec
cwtl
cli
arpl
push
adc
js
lds
int3
pop
fnstsw
mov
fwait
cwtl
pop
or
cmp
adc
das
mov
jno
es
scas
pushf
xor
or
lock
and
inc
sub
scas
pusha
test
imul
xchg
pop
mov
push
nopl
xchg
in
bound
xchg
loop
mov
mov
int
test
cmp
add
ret
xchg
mov
cmp
rsqrtps
sbb
jg
loop
mov
push
test
inc
xlat
adc
pop
fnstsw
xchg
hlt
push
loopne
push
mov
mov
and
dec
sbb
rorb
pushf
mov
push
inc
scas
jg
push
inc
xchg
push
dec
mov
xor
sub
xchg
aad
cwtl
test
xchg
fwait
mov
cwtl
nop
and
testb
sahf
xchg
inc
xchg
loopne
pop
push
add
and
jns
sbb
les
mov
sub
mov
xchg
in
mov
movsl
stos
stos
pop
loopne
jae
xchg
in
cmp
pop
jmp
xchg
add
xor
cmpsb
test
cmovns
scas
push
jb
push
daa
mov
jecxz
jp
aam
xor
pop
cmpsb
sbbb
xchg
pop
inc
xchg
cmp
mulb
sbb
xchg
int3
arpl
pop
aad
adc
jne
sbb
test
xchg
cmc
jno
adc
push
push
movsl
adc
ret
repz
mov
inc
imull
clc
rolb
rolb
negl
xchg
adc
sbbl
es
seta
or
mov
das
lods
sub
cmp
andb
sbb
mov
xchg
jmp
mov
jb
pusha
add
mov
xchg
notl
sbb
mov
pushf
mov
add
gs
clc
xchg
imul
mov
sub
dec
jns
or
xchg
nop
fsts
and
pusha
nop
not
xor
or
mov
jno
push
cld
dec
enter
push
fcmove
addr16
test
or
cld
jle
enter
fidivs
ljmp
cld
mov
in
sbbb
push
mov
inc
push
sub
jne
pop
add
popf
pop
rcl
mov
loopne
cmc
mov
cs
jp
push
cmp
fwait
nop
std
ljmp
test
mov
cwtl
xchg
pusha
xchg
mov
nop
inc
mov
push
mov
out
fwait
add
icebp
dec
jbe
std
aaa
js
test
xor
jg
mov
jo
mov
int
movsl
pusha
xor
sbb
add
push
jns
into
in
mov
nop
orl
sub
popf
das
scas
mov
pop
push
mov
xchg
push
test
call
inc
sahf
fsubrp
sub
repz
xor
jmp
stos
mov
and
loopne
jb
enter
push
fimull
in
ret
out
rcrl
popf
cmp
popa
fwait
stos
dec
push
fprem
adc
xchg
cli
adc
sub
fsubs
jmp
cmp
sbb
insb
lcall
dec
fisubrl
jno
repnz
dec
lea
bound
mov
out
sbb
mov
cli
cwtl
mov
test
adc
xor
repnz
sti
adc
pushf
xchg
loopne
sbb
pop
pusha
adc
inc
push
stc
jp
dec
sub
cmc
and
test
test
sbb
pop
cmp
or
jp
iret
shr
or
repz
dec
mov
jle
lret
xchg
push
scas
inc
addr16
and
cmp
stos
jmp
and
leave
jns
adc
into
inc
or
and
add
scas
inc
pop
or
testl
cmc
fwait
mov
dec
dec
mov
stc
hlt
jl
enter
pop
sub
pusha
pop
mov
xchg
sbb
idiv
mov
rcrb
push
out
sbb
in
jmp
jecxz
inc
out
jo
test
or
dec
aad
jmp
icebp
js
roll
dec
sbb
add
mov
push
push
imul
sbb
or
test
addr16
mov
xor
not
mov
insb
lret
pop
rcrb
in
jb
mov
mov
jge
in
xchg
jecxz
icebp
cltd
pop
push
inc
sbb
ror
or
mov
call
xchg
cmp
pushf
pop
push
cli
bound
inc
repz
adcb
ret
rcrl
test
adc
lods
fs
test
jmp
mov
mov
lret
in
jne
jns
ljmp
shl
and
in
popa
inc
jmp
or
fildl
into
fistpll
jns
notb
add
xchg
outsl
fdiv
sub
jo
lret
aam
xchg
jmp
dec
fiaddl
int3
movb
jne
subb
inc
gs
pop
clc
dec
enter
repnz
add
jmp
jne
cwtl
xchg
cltd
cmp
mov
rorb
ss
cmp
andb
sbb
cmp
pop
negl
mov
andb
outsb
jb
cmpsl
xor
es
outsb
and
cmpsb
and
sbb
test
xchg
push
sbb
xchg
and
ret
inc
scas
out
xchg
int3
sahf
cld
jbe
jmp
sbb
xchg
push
mov
call
dec
addr16
xchg
idivb
mov
pushf
fstl
jno
cwtl
clc
mov
or
es
jo
lret
fistl
enter
test
xchg
or
xchg
and
push
sbb
push
push
mov
in
dec
sub
orb
inc
add
adc
adc
push
daa
add
jmp
shr
or
cli
std
sarb
lods
push
push
nop
push
xchg
roll
movb
jecxz
mov
xchg
mov
inc
lret
xorl
aad
popl
clc
mov
jb
xchg
xor
mov
mov
orb
mov
test
pop
xor
push
adc
mov
cmp
xorl
xorb
gs
pop
cli
ret
lea
iret
xor
das
int
or
cmp
xchg
push
jmp
push
insb
push
into
mov
nop
jge
enter
jo
sarb
imul
xor
sti
mov
scas
out
or
ljmp
xlat
mov
jnp
inc
lock
jne
or
ret
jge
repnz
bound
gs
adc
aas
inc
js
fdivs
cmp
int3
ss
loopne
pop
push
and
mov
and
repz
pop
sbb
lods
jle
lahf
nop
jg
test
mov
outsb
pop
adc
or
push
stos
popf
or
daa
dec
inc
and
out
aad
movsl
xchg
mov
mov
adc
adc
add
jnp
out
enter
arpl
gs
in
outsb
out
cmp
add
xchg
jo
cld
jo
mov
and
jns
shrb
cli
jge
mov
cwtl
sub
xor
adc
mov
push
pop
clc
rol
xchg
out
mov
mov
outsb
in
inc
bound
je
pop
xor
jle
popf
cmp
scas
in
gs
test
push
xchg
icebp
xchg
add
lret
lret
push
enter
or
mov
pusha
cmovo
xchg
dec
add
push
add
and
lea
decl
int3
adc
push
inc
adc
add
jle
icebp
lods
mov
mov
clc
mov
test
jb
push
adc
ja
std
push
dec
sub
mov
push
int3
test
jb
cmp
xchg
push
mov
mov
adc
cmp
icebp
fiaddl
enter
dec
outsl
add
jns
in
inc
out
add
push
or
shr
xchg
inc
shll
pop
and
cmp
adc
mov
es
daa
mov
push
icebp
cli
xorb
mov
imul
repnz
std
cmc
pusha
xchg
aaa
pop
js
sbb
and
add
shrb
push
xchg
js
jae
ljmp
and
nop
test
jmp
bound
shr
or
jne
es
mov
aas
pop
pop
loopne
inc
rcr
sahf
add
lock
push
and
xchg
adc
cwtl
xchg
xchg
adc
test
sahf
push
jne
adc
icebp
mov
cli
testl
sti
xchg
imul
imul
mov
lret
sub
addb
inc
sbb
jb
int3
sbb
push
int
or
pop
dec
notl
out
clc
xchg
rsqrtps
ss
mov
pushf
xchg
nop
adc
sbb
jo
add
xor
inc
pop
incl
xor
mov
loop
cmc
enter
xchg
or
jns
pop
shll
cltd
cmpsb
push
pop
mov
andl
sbb
mov
lods
mov
scas
mov
aas
dec
ljmp
and
js
fsubrs
mov
lahf
js
cmp
xchg
adc
adc
je
scas
jecxz
xor
scas
sub
rcrl
push
and
out
inc
jno
adc
je
jge
mov
clc
outsl
inc
push
adc
xchg
jge
pusha
cmp
mov
adc
push
js
lret
xor
jg
mov
sub
push
and
cwtl
push
adc
in
xchg
or
xchg
dec
mov
or
xchg
add
mov
popa
fidivl
sub
shl
sti
sbb
xchg
fsubrl
cmc
movsl
in
out
fwait
imul
insl
mov
push
xchg
cmp
xor
nop
xchg
xchg
ss
xchg
aam
aas
fcmovnb
mov
mov
fidivs
xchg
mov
mov
movsl
insb
pop
xchg
jno
sbb
mov
xchg
mov
test
mov
cmc
sahf
mov
mov
cltd
xchg
inc
xchg
xchg
call
cmc
xor
mov
mov
divb
add
out
and
xchg
stc
hlt
sbb
shrb
or
sub
xchg
mov
in
mov
push
std
cltd
lds
jl
pop
mov
jmp
sbbb
xchg
cltd
xchg
mov
sahf
stc
adc
mov
popf
cwtl
mov
inc
xor
cwtl
push
out
push
inc
mov
sbb
sbb
push
cmp
add
aad
in
sub
pop
cmpsl
lret
jle
test
xor
aad
sbb
adc
cmpsb
and
lods
cmpsb
adc
cmp
cmp
test
repnz
idivl
dec
push
imul
mov
stc
or
fcmovnu
mov
xchg
mov
cwtl
shlb
add
pop
mov
push
lea
pop
in
sbb
lea
push
adcl
enter
rorl
fistps
scas
inc
adc
rol
mov
mov
cmp
adc
icebp
add
stc
jp
outsl
jmp
leave
pop
mul
pop
movsb
aam
jns
sbb
ss
not
icebp
das
and
mov
add
ljmp
lods
fwait
call
ret
mov
jmp
loop
je
or
ss
pop
std
and
orl
movsb
test
cwtl
sbb
cmp
je
repnz
ret
push
dec
cs
scas
xchg
xchg
fildl
cli
notb
cmp
popf
dec
inc
adc
mov
sarl
pop
pop
sahf
test
sbb
shl
mov
mov
mov
arpl
mov
cmpsb
mov
outsl
pop
fs
testl
pop
scas
into
pop
lock
push
lods
ficompl
and
fidivrl
jb
and
sbb
in
hlt
mov
push
cwtl
push
pop
lahf
and
cltd
pushf
xchg
enter
sbb
jecxz
xchg
stos
xchg
push
mov
xchg
and
arpl
mov
push
or
sahf
pop
sahf
in
mov
jg
xchg
push
mov
aas
insl
dec
xchg
mov
sub
adc
and
mov
and
lret
adc
cltd
nop
stos
jae
jl
imul
cmc
mov
std
inc
jmp
mov
push
insl
mov
inc
pusha
popa
mov
pop
mov
xchg
in
lcall
mov
mov
xor
add
push
adc
jle
mov
pop
clc
std
jno
mov
cli
xchg
lahf
fiaddl
outsl
mov
or
xchg
sub
imul
shlb
movsl
hlt
sbb
or
xchg
xchg
stos
xchg
clc
adc
adc
adc
cwtl
push
rolb
aam
lret
xor
imul
xchg
add
xchg
repnz
pusha
jp
and
outsb
adc
xchg
push
ss
pushf
testl
std
jp
jns
lock
push
mov
cmc
lock
dec
push
jmp
add
sti
sub
fsts
cmp
lret
daa
in
aad
sub
adc
mov
mov
hlt
xchg
adc
push
out
ror
nop
jo
mov
aas
mov
pop
es
lock
ret
mov
stc
pushf
push
mov
and
add
out
fcompl
jbe
pop
mov
dec
fldcw
push
cmc
sbb
lahf
cmp
stos
lds
cmpsb
jle
and
aam
jb
jmp
mov
xchg
popa
jl
mov
negb
jl
clc
into
or
or
shl
cmpsb
sbb
xchg
sbb
xchg
fisttpl
fdivl
fcmovne
loopne
es
sarb
aad
add
adc
neg
stc
mov
adc
pop
mov
mov
loope
cwtl
outsl
pop
loop
lods
cmp
pop
mov
jns
stos
jno
push
jns
ljmp
sbb
push
pushf
xor
cmpsb
out
add
std
add
inc
dec
imul
movsl
outsl
shlb
negb
imul
pop
pop
pop
enter
loopne
lods
aad
lods
lahf
add
shll
leave
cld
icebp
out
fwait
test
inc
jno
cmc
or
pop
outsb
dec
push
pushf
jl
aam
jl
addr16
stc
subb
and
dec
sbb
movzbl
out
inc
or
cmpsb
imull
or
mov
les
cs
dec
sbb
cli
xlat
sti
mov
xlat
popf
test
or
dec
adc
cltd
pop
cmpsb
cli
icebp
pusha
in
add
or
or
inc
movb
cwtl
inc
push
fisubrl
arpl
cld
mov
sub
xorl
mov
mov
push
lods
xchg
js
mov
sub
push
ret
mov
or
daa
std
mov
mov
mov
jbe
xor
fnstsw
jb
jne
lcall
outsb
pop
mov
cmpsl
jno
add
pop
xchg
insl
mov
mov
dec
cltd
xchg
mov
fidivl
repnz
pop
into
std
xchg
adc
mov
mov
mov
xchg
andl
scas
inc
test
aas
loopne
cli
gs
nop
imul
pusha
and
mov
and
fdivrs
or
mov
mov
push
stos
pop
xchg
fildll
lret
loop
jbe
js
stc
xchg
sbb
std
stos
fstpl
push
setbe
adc
aad
mov
dec
pop
into
xchg
xchg
pop
xchg
adc
loop
aas
push
add
push
out
add
and
iret
and
fdivr
mov
fidivrl
jb
lds
ss
sub
lock
mov
mov
fldl
js
leave
jmp
dec
push
cwtl
stos
or
jmp
sub
leave
mov
out
jmp
ret
inc
jl
mov
cs
mov
push
mov
dec
nop
sbb
push
pop
leave
cmp
test
sarb
jno
loop
icebp
hlt
sbb
xchg
mov
sub
mov
mov
cmp
notb
inc
mov
std
nop
fistl
stc
pop
or
in
sub
add
pop
jo
xchg
push
iret
jns
es
cs
test
fsts
lret
sahf
repz
inc
xlat
mov
sahf
call
lret
clc
mov
add
mov
scas
pop
sbb
mov
pushf
lods
rorl
into
push
sbb
test
movsb
shll
int3
scas
repz
push
in
lret
mov
es
fmulp
cmp
dec
or
outsb
xor
mov
in
fisttpl
cmpsb
aaa
sub
inc
loop
cmpsl
mov
xchg
leave
mov
adc
outsl
ds
lods
sti
lods
mov
das
mov
xor
pusha
pop
in
arpl
in
push
fcoms
jbe
subb
es
int3
push
sbb
jno
fsubs
test
pop
xlat
pop
xchg
xchg
pop
xchg
cltd
imul
inc
cmpsb
lret
test
push
js
mov
imulb
mov
xor
xor
sbbl
es
out
cmpsb
pop
or
and
pop
mov
stos
icebp
pop
das
pop
lock
pop
sysret
mov
jne
rcrl
jo
test
jp
cmc
lods
mov
out
nop
xor
fiadds
cmpsb
mov
xchg
jno
in
sub
mov
fdivrp
sahf
add
movsb
push
push
inc
loop
mov
pop
out
dec
adc
iret
xchg
cltd
xchg
xor
xchg
lret
jb
sbb
into
sbb
or
stc
push
adc
jno
jmp
test
das
mov
test
sub
sbb
jl
push
inc
mov
aas
sub
enter
test
push
pop
push
mov
and
sub
dec
xchg
cmpsb
dec
jne
lahf
cmp
fimuls
loop
push
push
pop
cmc
adc
inc
std
mov
push
lock
cmpb
add
out
je
xchg
dec
jmp
add
inc
inc
mov
out
dec
mov
call
icebp
push
and
aam
out
fdivrp
jecxz
xor
pop
mov
orl
movsb
orl
rcl
rorb
aaa
mov
std
pop
in
subb
push
imul
je
add
push
icebp
add
mov
in
adc
jns
ljmp
jo
nop
movsl
in
into
xor
xor
insb
vmovd
bound
cmpsb
imul
hlt
gs
outsb
in
inc
mov
push
mov
mov
je
test
push
cmp
inc
xchg
and
push
roll
pop
repnz
or
add
test
repz
mov
andb
push
jnp
out
cmpsb
les
test
jecxz
jbe
xchg
cltd
jle
addr16
mov
inc
test
add
cltd
leave
popl
pop
inc
aaa
rolb
mov
xchg
cmc
or
fstps
mov
mov
icebp
xchg
hlt
cs
mov
mov
mov
cmpsl
repz
inc
adcl
cmc
cmp
movsl
add
addl
leave
repz
add
cs
or
hlt
jns
push
adc
mov
insl
xchg
mov
pop
movsb
mov
mov
mov
mov
std
jns
and
fidivs
sbb
xor
push
mov
inc
jp
inc
mov
fistl
mov
push
sub
push
xchg
jnp
outsb
stc
insl
add
repnz
and
and
cmpsb
sub
in
aas
mov
pop
ds
inc
lahf
mov
dec
push
fimuls
xor
push
sub
hlt
cmp
dec
arpl
adc
out
loop
jp
dec
cmc
test
fcom
inc
imulb
shlb
out
jb
dec
or
and
iret
jge
pusha
push
pop
fimuls
sbb
adc
mov
lods
ret
mov
jp
cmp
out
repz
mov
push
jmp
lods
and
into
or
pop
mov
int
call
mov
nop
pusha
mull
jle
aad
push
mulb
aas
stc
repz
push
add
sub
jecxz
add
mull
sub
out
jge
xlat
mov
dec
mov
xchg
fdivrs
mov
xchg
out
repnz
mov
scas
push
out
mov
cmp
loop
sahf
sbb
xor
push
and
or
outsl
push
shlb
inc
add
and
xor
test
xchg
lahf
push
push
xchg
and
push
xchg
fcmovne
jns
xchg
jns
adc
mov
inc
mov
push
mov
in
mov
pop
test
jne
push
gs
fdivrs
cltd
hlt
xchg
adc
sbb
out
xchg
sbb
push
jno
data16
ror
insb
cwtl
shl
rclb
mov
cmc
mov
cmovg
jno
push
hlt
sahf
adc
add
mov
mov
pop
xchg
cmc
sbb
stos
mov
mov
aas
xchg
push
pop
push
call
mov
inc
dec
inc
adc
push
js
add
stc
adc
rclb
inc
push
pop
or
or
jg
shll
sub
out
jle
adc
ret
aad
pop
addr16
fildll
inc
popa
jge
loop
in
push
divb
adc
sub
pop
xlat
dec
filds
outsb
repnz
out
mov
mov
negb
clc
fisubrs
jne
insl
cli
pop
mov
in
mov
icebp
imul
loop
xor
ljmp
adc
mov
mov
ljmp
xchg
mov
push
adc
repz
test
fnsave
adc
adc
xchg
cli
popa
jns
adc
pop
xchg
out
add
xlat
adc
call
std
sahf
pop
int
loop
mov
out
inc
lock
sub
cmp
sbb
xchg
int3
pop
sbb
sbb
subb
adc
jae
out
pop
cmpsb
add
callw
fwait
popf
stos
out
psubw
loopne
add
add
ja
in
jp
repnz
sarl
cmp
pop
popa
fidivrs
adc
xchg
fwait
add
pop
jle
xchg
mov
pop
scas
lock
dec
push
repnz
pop
dec
xchg
fdiv
aad
enter
lock
nop
fldt
cmp
out
inc
or
out
enter
and
hlt
add
imul
in
orb
push
sub
mov
out
cmpsl
xchg
dec
shlb
mov
cmpsb
in
sti
les
inc
push
inc
inc
adc
add
cmp
mov
repz
dec
sar
ljmp
cwtl
fdivrs
nop
mov
insl
mov
cltd
sbb
jns
ret
push
mov
sbbb
add
jle
in
jnp
scas
push
push
adc
or
fwait
mov
mov
or
mov
pop
subb
out
xor
sbb
jle
jo
mov
inc
sbb
xor
icebp
xor
test
mov
fisubs
push
push
dec
mov
xor
pop
rcr
pop
movsl
mov
xchg
jle
testb
or
cltd
pop
lret
mov
cli
add
cmpsb
mov
orb
cmpsb
aad
psubw
cmc
xchg
data16
aas
mov
loop
push
pop
xchg
jge
jecxz
inc
adc
push
mov
adc
in
movsb
jbe
cwtl
pop
sbb
push
sbb
xchg
divb
sub
cmp
fwait
cmpsb
test
dec
fisubs
dec
std
stc
dec
lret
cld
mov
sbbl
mov
loopne
mov
das
push
lock
jne
pop
pop
cmp
cmpsb
inc
push
insl
das
mov
push
imul
shrl
xchg
pop
call
pop
idiv
sahf
cmp
mov
stc
pop
andps
mov
sbb
jmp
enter
xor
cmp
jle
sub
mov
movsb
lock
andb
mov
mov
ja
jl
adc
pop
inc
jp
mov
fistl
in
xor
or
dec
push
pop
repnz
mov
mov
jb
mov
pop
fwait
shlb
outsl
mov
and
fsubs
inc
xor
jle
adc
loop
fsts
popf
sbb
xor
call
dec
add
nop
pushf
dec
xor
sbb
pop
rcrb
jne
in
cmpsb
mov
add
ficomps
or
jb
inc
leave
ja
loop
mov
pop
mov
xchg
xchg
mov
stos
jo
and
mov
mov
sbb
jmp
int
adc
cmp
js
or
push
xor
and
shrb
jne
es
popa
aad
ds
jnp
test
adc
mov
test
shll
or
adc
lods
jnp
cmc
cmpsw
fidivl
cmp
mov
jmp
in
pop
fiadds
xchg
adc
popa
adc
cs
into
daa
int3
lahf
cs
aaa
test
popf
lods
adc
mov
xor
stc
out
push
out
push
xchg
out
add
icebp
out
add
mov
jne
aad
jle
cmp
push
pop
fsubp
out
and
arpl
adc
ds
sarl
stos
das
mov
and
icebp
mov
inc
es
neg
jne
mov
je
loopne
push
aad
arpl
xchg
mov
cld
push
out
out
roll
xchg
mov
xchg
fstps
out
or
aaa
pushf
clc
mov
or
cli
ja
cmpsl
pop
xchg
out
scas
fsts
repnz
jmp
call
rcr
push
jns
pushf
sbb
mov
xchg
std
mov
push
mov
das
sbb
dec
leave
pusha
adc
dec
fsubl
leave
inc
push
xchg
pop
jbe
shl
push
cmc
sub
lea
ret
add
mov
out
pop
dec
sub
adc
mov
std
xchg
or
lret
hlt
popf
push
adc
movsl
inc
add
sub
nop
sbb
je
dec
inc
sub
and
push
aas
mov
test
jne
cmp
ret
fwait
mov
or
scas
mov
pusha
push
push
subb
repnz
inc
pop
aam
negl
and
lods
or
cmp
enter
push
mov
adc
rorb
repz
dec
js
icebp
cmp
or
iret
mov
test
sahf
loop
jae
mov
mov
je
cltd
pusha
jns
or
add
xchg
push
hlt
rcrb
stos
lret
out
adc
pop
mov
xchg
xchg
sahf
cld
cmp
mov
leave
in
hlt
gs
cli
push
push
adc
xchg
ficomps
xchg
loope
std
mov
stos
pop
cmp
mov
sbb
sbb
lods
jnp
mov
mov
pop
adc
push
les
or
adc
arpl
xchg
test
cltd
aaa
pop
in
iret
inc
lahf
jae
test
mov
sbb
sbb
mov
loope
clc
pop
mov
xchg
fstpt
aas
insl
cmp
lahf
mov
adc
inc
mov
mov
movsb
outsb
inc
or
jecxz
imul
push
movsl
push
mov
cmpsb
lock
xchg
shlb
inc
dec
jnp
into
mov
lea
jb
std
aad
xchg
out
lret
ss
and
outsl
bound
sub
fldenv
sub
mov
mov
jecxz
sbb
sub
push
mov
idivl
cmpsl
xchg
in
jo
push
ja
ss
insb
test
push
xchg
add
pusha
mov
pop
sbb
cmp
aaa
pop
or
or
pop
in
insb
and
adc
nop
call
pushf
push
std
mov
mov
mov
ds
add
jae
js
fisttpl
mov
inc
divl
xor
jns
sub
jno
mov
mov
xlat
mov
es
cwtl
xchg
rcrb
jns
into
fwait
test
mov
mov
stos
test
jo
mov
mov
decb
loopne
fwait
pop
sti
push
or
adc
push
icebp
mov
xor
test
lret
mov
outsb
stc
int3
jae
inc
pop
add
repnz
loop
iret
cmpsb
movsl
lahf
push
xchg
cwtl
push
mov
mov
jns
negb
and
push
xchg
jno
sbb
aaa
jno
fsts
pop
adc
ret
jo
cwtl
inc
es
in
int
pusha
adc
mov
cmp
adc
call
push
jnp
xchg
int3
jmp
xor
ss
pop
and
fistl
orb
fwait
lahf
jp
fistl
leave
femms
es
ror
stc
adc
xchg
and
scas
add
xor
jmp
lahf
mov
dec
mov
decb
nop
or
pusha
inc
push
and
jnp
test
sub
int3
in
fidivrs
pop
adc
adc
pop
xor
stos
inc
loop
aam
shrb
cmp
jne
mov
sbb
outsl
pop
out
cmpl
call
xlat
push
sub
adc
mov
dec
adc
mov
sub
or
jg
loope
fsubrs
fdivs
dec
adc
jb
jne
mov
imulb
push
stc
add
jl
sub
sbb
cmp
xchg
or
adc
cltd
icebp
add
jb
mov
cmpsl
mov
inc
mov
xchg
cltd
xchg
cmpsb
push
xchg
and
dec
outsb
ljmp
int
insl
gs
call
fbstp
mov
mov
aas
or
add
cmpsb
cmpsb
mov
xchg
jns
jae
lret
mov
and
in
inc
sbb
ror
orb
xor
sti
jb
add
sub
pop
int
in
aas
icebp
jle
or
ss
aas
push
ret
movsb
mov
mov
dec
fsubs
push
out
add
insl
cmp
es
add
mov
pop
mov
pop
stc
jp
mov
cmpsb
cwtl
clc
pop
push
fisttpl
not
movsb
sbb
xchg
movsl
cwtl
hlt
xchg
mov
jb
mov
scas
iret
xchg
xchg
sahf
das
cltd
rclb
pop
xor
adc
cmc
mov
and
leave
lcall
fdiv
int
and
bnd
cmpsl
outsb
dec
mov
dec
into
or
iret
es
lea
sahf
inc
call
xchg
add
sub
mov
sbb
xchg
pop
cmpsb
ja
mov
lahf
cmc
insb
sbb
call
sti
test
mov
fcmovb
push
sbb
adc
shll
in
setl
jp
push
lock
sahf
or
es
std
sub
jae
jno
popf
es
cmp
les
stc
xchg
xor
rolb
mov
cwtl
and
push
pop
jb
jnp
jge
mov
pop
or
pop
bound
popa
adc
pop
lea
xchg
and
clc
adc
int
mov
pop
fs
sbb
sbb
jmp
xchg
mov
xor
jae
cmpsb
out
push
rcrb
mov
repnz
add
mov
addr16
gs
lret
mov
movsl
test
cs
push
sub
loope
pusha
test
test
pop
xchg
cli
sarl
jne
add
jno
nop
or
xchg
rclb
pop
add
jmp
pop
xor
sub
dec
jno
mov
cwtl
mov
stc
fwait
sub
in
push
push
adc
int3
mov
shrb
ss
sbb
in
jo
dec
push
test
pop
std
lock
mov
and
out
mov
mov
inc
pop
jns
out
cmp
adc
nop
insl
dec
fnstenv
mov
xlat
sbb
clc
sbbb
cltd
jns
mov
lea
enter
inc
add
cmc
shr
mov
xchg
mov
xchg
stos
es
jbe
sahf
pop
scas
pop
xorl
imul
imul
fsubl
in
test
push
fisubrs
mov
les
sbb
in
movsl
mov
push
pushf
sbb
nop
cwtl
ret
push
and
adc
sub
sub
test
frstor
adc
test
pushf
jl
jo
or
cltd
stc
loope
ret
mov
mov
sub
add
sub
ja
push
push
xchg
ret
mov
dec
insl
sbb
xchg
inc
js
pusha
mov
xchg
adc
xchg
ja
inc
add
mov
push
cmpsl
aam
adc
mov
push
call
cmpsb
dec
lock
dec
add
lcall
push
aam
adc
and
and
lods
push
mov
in
dec
fadds
mov
mov
js
mov
sar
mov
hlt
adc
mov
pop
mov
fdivrs
shr
lds
mov
ja
mov
jbe
lcall
mov
out
lods
pushf
xchg
pop
push
das
dec
sub
xor
repnz
mov
or
repz
fistl
ja
or
cmpsb
push
enter
inc
lods
subl
mov
mov
in
pop
or
outsl
jecxz
test
cmpsb
jb
mov
fs
ljmp
loop
add
ds
add
xchg
lods
repz
test
pushf
mov
mov
mov
call
sub
and
lret
and
xchg
dec
enter
inc
ljmp
fistl
add
js
mov
test
fcomp
dec
jne
sbb
fcoms
iret
movsb
pop
aad
ficoms
xor
xchg
in
stc
adc
sbb
mov
les
jg
ss
sub
xchg
rcll
fdiv
adc
out
adc
into
fcomi
dec
enter
iret
popa
and
sarl
sub
leave
push
pop
push
repnz
fidivs
xchg
jo
loop
adc
pushf
jno
orb
ja
gs
add
mov
in
scas
test
pop
sbb
dec
imul
mov
sarb
mov
scas
lods
nop
scas
xchg
repz
jmp
and
cld
pop
stos
insb
mov
jo
mov
test
jb
inc
scas
add
and
xchg
mov
xor
call
les
mov
ja
mov
int3
fdivs
cmpb
pop
push
fisttps
push
mov
subl
imul
add
sub
lret
call
mov
xchg
xchg
push
scas
lock
push
and
movsl
mov
adc
jb
daa
push
push
gs
cmpsl
jne
insl
insl
dec
hlt
test
ret
pop
filds
mov
inc
inc
out
in
add
jmp
lods
lcall
jle
jl
repz
adc
xchg
mov
hlt
push
push
inc
repz
aam
push
jno
pop
cmpsb
lds
mov
iret
xchg
mov
out
cmp
in
out
xchg
cmpsb
test
clc
movsl
div
xor
mov
pop
lcall
and
lret
jmp
push
mov
nop
pop
fcmovu
jmp
xor
lret
push
lock
adc
nop
and
adc
test
mov
aam
jno
push
out
aaa
insl
add
lds
or
add
dec
out
adcb
pusha
out
rcl
popf
psrlq
aas
ljmp
xor
mov
stc
insl
push
push
adc
dec
mov
roll
sbb
inc
inc
mov
xchg
ja
jo
mov
pop
out
loopne
push
and
clc
nop
mov
movsb
mov
bnd
iret
dec
push
push
fists
cmpsb
push
or
aaa
mov
mov
xchg
xchg
sub
adc
arpl
out
fwait
jno
cmp
stos
test
jmp
dec
dec
dec
fcoml
mov
gs
lret
or
pop
test
orl
outsl
xchg
mov
cltd
inc
push
stos
pop
in
mov
push
leave
out
sahf
xor
iret
jmp
xchg
cmp
mov
and
jecxz
sarb
mov
stos
rolb
push
pusha
sahf
insl
jo
pop
cmpsb
jmp
dec
and
out
mov
push
inc
lds
ljmp
jb
aam
pop
and
pop
sar
test
test
rcll
pop
xchg
cmpsb
cmc
fsubrl
xor
stos
jle
nop
dec
jle
add
sbb
mov
mov
xchg
mov
inc
lret
bswap
lods
add
mov
stc
sub
jno
rcrl
movsl
mov
test
pop
stc
mov
inc
jmp
and
iret
pop
xchg
mov
mov
adc
fstps
cmc
pushf
push
outsb
push
aam
in
inc
lods
dec
imul
jae
xchg
jae
lods
lock
in
mulb
ja
xor
adc
clc
mov
adc
add
int3
xor
xchg
adc
xchg
push
ret
xchg
cmc
push
dec
mov
pcmpeqd
jno
repnz
movsb
jns
mov
cli
xor
sbb
xchg
adc
or
cmp
roll
xchg
aam
xchg
cmp
repnz
adc
xor
dec
dec
push
cmp
imul
sub
xlat
jns
cli
bnd
inc
xchg
shrb
outsl
cltd
mov
or
xchg
sub
xchg
dec
dec
sub
fisubrl
push
push
jo
dec
in
arpl
adc
hlt
stos
call
adc
clc
inc
les
push
fwait
pop
mov
cmc
stc
and
mov
in
outsb
sbb
cmp
dec
scas
inc
rclb
test
pop
out
adc
jb
inc
fcomip
fdiv
pop
pop
sbb
jns
fadd
mov
repnz
lock
pushf
in
mov
and
dec
push
jne
mov
mov
leave
pop
fwait
pop
enter
movsl
test
popf
lods
sub
cltd
mov
test
sbb
add
xchg
or
jbe
mov
sbb
mov
ret
inc
jle
pop
mov
xchg
and
test
jle
ret
bnd
imulb
dec
pop
xchg
cmpsb
call
mov
lea
push
adc
out
popf
adc
cmp
push
pop
cmp
leave
scas
mov
sub
xchg
mov
mov
jno
sub
xorl
adc
mov
push
sbb
xchg
pop
mov
adc
in
insb
call
push
int
dec
rcll
mov
xchg
call
enter
pusha
call
sbb
push
pop
outsl
insb
mov
inc
sahf
mov
sbb
push
sbb
mov
adc
lea
scas
jb
sbb
adc
sub
fisubrs
xchg
push
pop
push
insb
mov
xchg
add
ss
pop
sbb
aad
insl
and
inc
dec
rolb
nop
aad
aad
xchg
pop
pusha
jle
push
xlat
jns
add
es
add
adc
jb
sbb
or
cwtl
aad
aas
out
mov
cmp
popf
rcrl
jae
cmp
js
mov
xchg
mov
mov
mov
mov
shll
bound
ret
cmp
js
inc
or
int3
aaa
dec
cli
xchg
shll
ds
mov
sub
mov
sbbb
subb
fdivs
repnz
pushf
mov
cmp
stos
add
mov
cltd
adc
dec
jno
pop
dec
sub
pushf
push
pop
inc
mov
xor
add
mov
jne
fcomps
fnstsw
xchg
test
clc
fsubs
test
stos
push
in
pop
mov
xor
or
adc
movsl
ds
nop
or
mov
add
adc
mov
xor
test
subb
inc
repnz
mov
push
adc
adc
fwait
roll
loopne
into
push
sbb
or
sbb
adc
dec
adc
out
jb
jl
jl
pop
pushf
scas
test
ficomps
xor
pushf
enter
sbb
push
add
imul
std
call
pop
mov
inc
cli
nop
jle
call
enter
into
jle
adc
dec
sarb
nop
ss
adc
mov
sub
mov
add
in
notl
push
call
push
stc
mov
fwait
ret
mov
adc
iret
push
roll
outsl
iret
movsb
dec
pusha
mov
dec
mov
data16
adc
xchg
movsb
pushf
adcb
loopnew
imul
add
fdivrp
dec
popa
loop
and
gs
add
push
stc
mov
outsl
or
int3
pop
cmpsb
push
mov
out
inc
inc
mov
xchg
outsb
sbb
out
shrb
mov
cwtl
pop
cld
lock
enter
out
push
cmpsb
mov
add
push
or
loope
dec
aam
cmc
mov
test
in
push
add
dec
dec
test
mov
xchg
dec
adc
popa
jnp
out
push
out
adc
jmp
in
adc
xchg
or
ljmp
fdivr
mov
or
out
stos
mov
or
xchg
sahf
sub
ret
xchg
loop
xchg
rcrl
loopne
test
fdivrs
or
mov
je
je
pop
mov
pop
inc
inc
xchg
or
das
and
js
icebp
add
add
mov
vandps
sub
popa
push
jbe
mov
loopne
cmpsl
sbb
xchg
aaa
repz
popf
nop
fstl
gs
cmp
mov
xchg
pop
test
loop,pt
out
lea
outsb
fisttps
mov
shlb
cli
loopne
fisttps
addr16
dec
hlt
int
ss
imul
pop
xchg
mov
mov
and
in
cwtl
adc
mov
xor
cmpsb
sbb
cs
inc
out
es
mov
rcrl
js
mov
push
dec
out
out
adc
xchg
jae
sbb
jns
or
and
sbb
js
and
and
out
adc
jno
mov
not
xor
stos
loope
adc
sub
and
mov
push
nop
movsb
rorl
loopne
and
in
sbb
cmp
rorb
xchg
adc
mov
enter
dec
xchg
add
adc
push
lret
or
sub
push
les
cld
cld
mov
xchg
clc
pop
repnz
leave
adc
and
cld
mov
mov
lods
movsl
lock
iret
enter
shll
mov
cli
mov
ss
movsb
mov
mov
mov
or
pop
push
push
out
adc
dec
jbe
fcomi
ffree
push
or
stos
dec
fsubrs
ficoms
movsb
add
pop
adc
fdivrl
dec
push
mov
aad
xchg
push
test
int
xchg
jns
or
dec
mov
jge
mov
xlat
sbb
mov
mov
adc
push
jae
xchg
lods
push
mov
xor
dec
mov
jp
int
or
push
adc
sahf
xchg
out
test
lods
jg
scas
clc
xlat
test
lods
xor
cmpb
mov
xchg
xchg
mov
push
into
xlat
or
inc
or
dec
lret
pop
insl
xor
xchg
or
mov
xchg
adc
or
rep
cmp
mov
in
out
or
sub
icebp
inc
lahf
cmc
nop
out
mov
out
jl
cli
jecxz
addl
cmc
popf
into
mov
or
pop
pusha
jle
clc
inc
adc
xchg
imul
push
mov
hlt
push
jp
sbb
addl
sbb
fsts
call
add
sbb
cmpsb
sub
testl
sahf
xchg
cwtl
adc
shlb
into
es
imul
cld
repz
xor
push
fmuls
ss
fcmovbe
xchg
mov
mov
aas
imul
dec
push
call
mov
out
or
mov
insl
loopne
dec
xchg
adc
mov
es
xchg
push
movsb
imul
sarb
inc
mov
into
pop
imul
add
int3
adc
fwait
mov
add
subl
loope
cmp
adc
imul
movsl
test
or
sbb
sbb
inc
stos
cmp
cltd
mov
addr16
pop
pop
cmpsb
xchg
mov
fiadds
push
jge
les
xchg
mov
ljmp
cmpsb
mov
nop
cltd
mov
std
mov
xchg
push
mov
adc
add
xchg
out
lret
test
mov
cltd
ja
cmpl
fdiv
adcb
sub
ret
jae
lods
jns
clc
cltd
mov
cltd
mov
mov
jp
enter
lock
mov
mov
cwtl
fdivrs
mov
mov
ljmp
push
clc
pushf
ret
aam
pop
mov
mov
push
scas
push
mov
adc
stos
dec
loopne
mov
adcb
push
xor
fiaddl
jl
hlt
cwtl
push
adc
jno
fnstenv
loopne
xchg
dec
mov
add
cli
cwtl
or
and
xchg
sub
clc
fcmovnbe
push
lret
mov
fldenv
inc
xchg
mov
xchg
ja
mov
dec
and
mov
mov
adc
adc
xchg
or
pop
and
aas
jne
or
sbb
aam
insb
sbb
jp
out
repz
mov
jnp
mov
mov
insb
mov
call
sbb
mov
add
clc
scas
lods
push
stos
adc
push
adc
dec
stos
pushf
sbb
pop
loopne
imul
and
sbb
mov
mov
in
mov
in
icebp
adc
cmpsb
test
jnp
jmp
ret
mov
push
cmpsb
cld
sub
pop
sub
xor
das
daa
fimull
mov
rcr
pushf
insb
mov
test
add
xchg
or
xor
mov
lods
rorl
test
js
sar
jp
test
push
dec
pusha
push
mov
mov
xchg
out
cmpsb
out
and
mov
enter
subb
mov
inc
test
stos
jmp
xchg
aas
lods
or
aaa
lea
popa
ss
pop
shrl
xor
pop
mov
mov
and
hlt
and
cmpl
cmc
loop
mov
mov
xchg
sbb
in
adc
hlt
mov
cmpsb
mov
bound
adc
aas
pusha
lock
jbe
out
sti
fdivrs
and
lea
sub
lods
mov
stc
xorb
xorb
adc
ss
leave
mov
rol
xchg
mov
out
and
jns
fisttps
leave
mov
add
dec
ja
and
loope
mov
enter
pushf
mov
sbbb
mov
mulb
push
and
pop
arpl
push
notb
or
jae
dec
mov
adc
add
fdivs
mov
pop
nop
mov
loopne
push
das
mov
enter
add
jno
adcb
xchg
int3
lock
inc
dec
jp
and
mov
push
enter
mov
push
lret
adc
repnz
pusha
inc
iret
in
mov
scas
sbb
test
jle
cmpsb
test
aaa
lret
jns
add
inc
jmp
mov
fdivp
in
dec
xor
test
jl
out
movsb
and
or
in
xor
or
xchg
dec
jns
push
mov
clc
sbb
jp
arpl
mov
sub
popf
hlt
out
jno
mov
sbb
mov
jg
repnz
clc
sbb
loope
into
nop
pop
mov
adc
push
adcl
cmpsb
icebp
fs
std
mov
mov
add
fucomi
sbb
xchg
repnz
ds
mov
cmp
shl
jl
pop
test
std
inc
fdivrp
lea
add
dec
pop
dec
xor
rcll
jp
push
popf
push
and
push
mov
mov
sub
fdivp
pop
shl
mov
cmp
hlt
pop
testb
dec
fimull
mov
repnz
jecxz
stos
stos
inc
bound
rorb
push
pop
test
add
imul
mov
jmp
or
loop
fwait
test
cwtl
imul
imul
jae,pn
cmpsb
in
xlat
ficompl
dec
fistl
lret
cmp
ss
push
insb
loope
aad
je
mov
mov
jne
mov
movhps
xchg
push
seto
aad
mov
push
sub
outsl
daa
and
enter
push
adc
jno
dec
fistpll
mov
adc
lods
mov
xchg
cmpsb
mov
mov
shrl
jae
xchg
out
fcom
clc
dec
aad
xlat
enter
sbb
pusha
lods
inc
das
xlat
pushf
ja
shr
lods
xchg
stos
cli
jle
cwtl
jl
daa
insb
dec
mov
cmpsl
cmpsb
pop
jb
cmp
scas
mov
pop
out
mov
int3
sbb
fdivs
mov
fistl
mov
arpl
mov
xor
xchg
scas
pop
lods
push
stc
call
pop
jg
mov
insb
js
dec
in
jecxz
fcmovu
out
push
fisubs
cltd
mov
into
mov
jge
data16
mov
push
inc
out
fcom
adc
ljmp
jmp
inc
jae
out
je
xlat
aas
adc
loopne
cltd
loopne
lret
cmpsb
mov
mov
sbb
sbb
scas
std
insb
push
loopne
jmp
add
and
das
push
jge
cmpsb
push
inc
jmp
cmpsl
insb
in
jns
mov
mov
das
dec
jp
xor
dec
fcompl
in
imul
test
out
movsb
loope
pusha
xchg
add
sbb
pushf
int
jbe
pop
sahf
sub
fs
xchg
lock
push
fcmovne
sbb
movsl
push
cmp
jbe
stos
or
xchg
add
scas
or
es
push
push
fdiv
adc
adc
lock
lods
xchg
mov
add
test
xchg
std
stc
loopne
sti
mov
aam
in
call
ds
aaa
fsubl
jb
shl
fcoml
mov
add
out
fisttpl
xchg
pop
cmp
in
test
insb
and
stc
in
mov
imul
pop
adcb
ljmp
adc
stos
rcrl
and
insb
mov
xchg
orb
mov
sub
loope
fdivrs
sub
outsl
stc
mov
and
mov
pop
sbb
cmpl
mov
repz
adc
mov
jle
maskmovq
inc
rclb
or
into
jmp
sbb
or
push
push
sbb
sbb
add
ss
imul
out
cltd
hlt
inc
and
mov
xchg
cmp
mov
xchg
icebp
xchg
adc
add
icebp
jae
or
daa
hlt
adcl
lahf
repz
xor
neg
lret
cwtl
ret
pop
call
movsb
fdivrl
mov
call
cs
aas
mov
das
sbb
xchg
inc
pop
nop
int3
out
movsl
negl
xor
mov
nop
dec
outsb
rorl
scas
mov
sbb
mov
jbe
sub
xchg
or
lahf
lcall
jne
ss
or
adc
popa
mov
mov
inc
aas
jmp
out
loop
pop
mov
inc
push
fimuls
pushf
mov
mov
sub
sbb
lock
out
jecxz
push
pop
sbb
jbe
push
das
sbb
fwait
imul
dec
push
testb
movsb
scas
nop
xor
xchg
movsb
scas
cwtl
enter
mov
sti
movsb
add
xchg
fisubl
sub
test
stc
sub
or
xchg
mov
xlat
inc
push
lds
or
push
pop
push
mov
adcl
gs
mov
push
mov
out
jmp
cmc
ljmp
mov
xchg
or
or
fstl
mov
jmp
push
les
testl
add
xchg
push
data16
fstps
arpl
adc
mov
or
adc
pop
pop
hlt
lods
or
lock
mov
ss
push
mov
pop
test
push
pop
mov
in
push
cmp
fcoml
jnp
adc
pop
or
ret
pop
or
inc
loope
into
flds
cmp
inc
clc
test
cwtl
repz
cli
sbb
cltd
call
adc
mov
clc
clc
std
mov
div
arpl
clc
inc
cmp
push
pop
or
stos
xlat
fiadds
or
aaa
insb
cmp
xchg
pop
push
xchg
push
pop
stos
jl
jmp
xor
lds
pop
pop
sbb
and
dec
and
sub
ret
sub
pop
mov
rcrb
pop
clc
fiadds
and
adc
add
sbb
loope
mov
push
stos
xchg
xchg
test
mov
out
fsts
addr16
push
cwtl
sub
aad
mov
aad
dec
mov
and
pop
lret
cmpsb
push
call
bnd
cmpsb
clc
das
ret
mov
push
rcr
jmp
and
xor
xchg
icebp
cmpsb
insl
bound
adcb
addb
add
add
dec
loop
in
shld
jl
push
mov
shr
mov
jl
mov
push
or
mov
insl
lds
insb
jmp
call
popa
sarb
jg
jg
test
js
add
jo
mov
ficompl
jns
aad
ja
arpl
dec
int
mov
dec
mov
push
popa
jle
out
ss
hlt
sbb
enter
and
or
cltd
xchg
jae
add
out
add
adc
push
push
adc
push
xchg
push
mov
inc
and
pop
ds
inc
sbb
fisttps
lds
mov
pop
in
hlt
icebp
sub
push
push
outsl
test
test
neg
mov
andl
les
dec
fistps
mov
xchg
enter
cwtl
stos
sub
imul
sti
mov
and
data16
leave
out
or
cmpsb
mov
cwtl
xlat
mov
out
mov
inc
mov
rcrl
fs
sbb
scas
and
mov
mov
std
mov
push
adcl
aad
enter
out
out
icebp
hlt
out
xchg
out
push
fdiv
addr16
test
test
loop
mov
fcoml
out
add
out
sbb
aam
int
sbb
jle
mov
outsb
xor
mov
push
jmp
mov
aad
and
mov
int3
cmpsb
scas
push
pop
mov
add
adc
enter
test
xchg
cmp
mulb
clc
pop
dec
repnz
in
dec
call
xchg
xchg
aaa
cmpsb
cmpsl
push
fwait
lea
clc
aam
jmp
lock
addl
mov
sub
or
andb
aam
mov
lock
in
daa
jecxz
mov
sbb
xchg
cmp
addb
mov
xchg
scas
pop
mov
ret
jl
loopne
xor
push
xor
xchg
pusha
jno
dec
mov
les
out
popf
sbb
shll
jno
arpl
fbstp
test
ja
cmp
das
icebp
adc
aad
mov
xor
xchg
lret
mov
notl
test
add
dec
xor
nop
xchg
cmc
cmc
or
cltd
repz
xchg
test
xlat
testl
jno
jmp
shlb
xchg
mov
push
xchg
pop
aad
jp
stc
adc
push
cmpsb
pop
push
outsl
ja
pop
loopne
pop
push
sub
mov
orl
fcmovb
fisubrl
pop
sub
movsb
push
mov
jo
out
subb
pop
fsubrs
out
call
or
icebp
ret
or
xchg
subl
punpcklbw
or
mov
and
xchg
shl
inc
out
mov
scas
mov
xchg
test
xor
aas
cmpsb
callw
jmp
add
pop
sbb
cwtl
std
sub
xchg
xor
movsb
mov
sub
mov
scas
xchg
bnd
shl
dec
sub
outsl
add
add
xchg
orl
sub
push
ret
ds
jns
movsb
push
or
scas
imul
push
xchg
fsubrl
push
jge
imul
fldcw
mov
mov
sahf
cmp
ss
xchg
rorb
jp
jmp
loopne
ret
and
xchg
out
sbb
int3
stc
pop
xchg
idiv
pushf
sub
mov
pop
cmp
setb
xchg
xchg
add
inc
xchg
mov
aaa
out
jb
push
scas
pop
pushf
sub
test
adc
mov
and
adc
bound
adc
add
data16
sbb
call
cli
mov
inc
aaa
pop
xchg
in
adc
xchg
call
add
out
xor
mov
fbstp
mov
sbb
jg
fldcw
popf
cmp
xchg
pop
fwait
mov
das
inc
cmc
fsubp
fidivrl
push
dec
add
or
scas
fcoml
mov
adc
pop
inc
or
push
push
scas
mov
sub
sub
cwtl
loopne
jbe
push
or
aad
loop
lods
iret
xor
std
push
mov
jne
scas
sub
ljmp
dec
hlt
xor
lea
movsl
mov
push
or
popa
rcrl
xchg
js
pusha
pop
es
xchg
call
test
testb
push
xchg
lods
call
data16
jbe
notb
adc
and
sub
mov
notb
ss
hlt
cmp
cmpsb
inc
in
xchg
add
mov
incl
std
cmp
data16
lds
icebp
prefetch
or
or
stc
mov
add
call
insl
insl
inc
push
loop
maskmovq
testl
pop
pop
pop
aaa
addr16
push
pusha
repnz
add
inc
jb,pn
inc
push
sbb
int3
adc
es
lock
outsb
xchg
fsubr
scas
fbld
pop
xchg
lods
out
clc
mov
mov
ss
pop
ss
adc
stc
out
sub
cs
out
or
lock
or
fildll
aad
push
pop
ret
lret
ret
ret
dec
in
pusha
es
sti
or
lea
scas
out
dec
mov
adc
rorb
mov
add
dec
sub
pop
jo
mov
mov
dec
jecxz
xchg
aaa
jl
jo
loope
cld
sub
scas
shlb
jae
pop
data16
push
xchg
adc
push
push
fistpll
insb
cwtl
push
push
sbb
test
mov
rorb
pop
out
mov
ja
xchg
pop
dec
test
es
rol
mov
icebp
or
or
mov
add
aad
pop
mov
add
rol
xor
inc
dec
das
jmp
adc
dec
dec
arpl
jbe
orb
cmc
xchg
mov
mov
call
adc
push
inc
mov
cmpsb
aam
stos
add
adc
xchg
popl
jno
dec
push
add
inc
sbb
push
rcl
leave
adc
inc
das
lea
xchg
addl
shr
xchg
into
int
lret
outsb
mov
imull
add
mov
mov
jmp
movsb
int3
cmpl
adc
mov
ja
stos
ss
mov
test
or
inc
xchg
sub
jbe
inc
xchg
jmp
push
mov
in
outsl
stos
add
roll
call
scas
outsb
xor
lods
push
mov
xor
push
in
jno
cwtl
xchg
or
or
mov
imulb
sbb
cmpsb
movsb
repnz
bound
push
xchg
mov
and
dec
loop
adc
or
and
into
fcomps
lock
out
cld
dec
dec
lock
dec
movl
and
fcmove
mov
add
jns
and
mov
and
jne
pop
std
and
pop
mov
jle
xchg
andl
and
fsubrs
ficomps
rorb
cmp
and
pop
mov
cmp
adc
push
cmp
cmpsb
imul
xchg
adc
and
sub
lods
jns
xchg
xchg
insl
in
pusha
jbe
cmp
cmp
and
nop
jg
cmp
jle
jmp
inc
mov
jp
addr16
xchg
ret
xor
jae
push
aas
mov
lret
das
mov
in
aaa
insb
mov
shr
or
fcmovu
sub
popf
cmp
mov
jne
fdivs
ficoml
sbb
cwtl
hlt
pop
imul
jb
push
or
pusha
mov
xor
inc
call
jl
aad
nop
dec
xchg
push
pop
mov
xchg
sbb
mov
hlt
cwtl
or
cld
repnz
cmpsb
in
or
je
fdivl
cmp
int3
xchg
dec
mov
xchg
loopne
pop
negb
jbe
jnp
loop
mov
hlt
mov
test
sbb
mov
xor
add
mov
pop
aas
add
add
add
shl
mov
inc
aaa
pop
icebp
clc
sbb
lcall
xor
icebp
jnp
dec
nop
and
outsl
loope
popf
cmpb
sbb
or
out
mov
cmp
mov
lea
jp
bound
xchg
dec
jno
sbb
negl
outsl
pop
sbb
imul
fistpll
repnz
je
jmp
sbb
xchg
stos
xchg
jmp
out
fdivs
call
jp
xchg
loop
push
and
fidivrl
js
push
loope
arpl
shl
bound
xchg
repnz
mov
gs
pop
ds
fadds
xchg
fs
pop
xchg
je
xchg
adc
add
popa
mov
shlb
jo
les
mov
inc
iret
sarb
shll
mov
jmp
and
test
mov
inc
xchg
ljmp
insb
scas
jg
mov
adc
xchg
push
xchg
sbb
pop
outsb
fs
dec
in
in
sub
addr16
ret
insl
nop
rcr
in
lock
call
lods
push
loopne
insb
lods
xchg
adc
sbbb
xchg
jne
leave
xor
fdivs
nop
adc
or
sbb
xor
xchg
mov
cli
in
jp
ljmp
sarb
nop
adc
inc
in
test
adc
sbb
xchg
int
pop
lock
cmc
pop
cmp
xchg
notb
clc
pop
loopne
xchg
pushf
mov
sub
cmp
pop
xlat
jl
sahf
divl
mov
cmpsb
pop
pop
xchg
dec
mov
push
push
mov
pop
in
clc
aam
push
mov
jbe
pop
pop
xchg
out
push
out
test
clc
hlt
xchg
lods
xchg
jb
jae
or
xchg
les
xchg
lret
mov
sbb
rcl
in
adc
mov
cmpsb
adc
sbb
or
mov
cwtl
mov
xor
les
xchg
stc
jl
loopne
out
xchg
xchg
pusha
and
mov
movlhps
lret
fdivs
and
aam
mov
iret
pop
or
cli
or
mov
test
sbb
sbb
pop
clc
sub
cli
mov
sarb
mov
mov
sub
popa
xchg
sbb
mov
or
test
push
fcomip
repnz
push
jle
inc
dec
xchg
xchg
jmp
or
scas
idivb
dec
int3
paddb
icebp
pop
sbb
sbb
cli
fimull
jnp
jl
jle
js
mov
and
and
pop
xchg
in
pop
and
pusha
jmp
popa
jns
jge
call
adc
cmpl
mov
imul
lock
js
mov
lcall
cmp
inc
xchg
xchg
rorb
jle
or
xchg
mov
loopne
xchg
cwtl
stos
sbb
mov
shl
mov
push
pop
mov
pop
add
mov
andl
or
icebp
stos
mov
shr
hlt
ficoms
inc
ror
xchg
xchg
inc
call
call
push
jae
and
nop
xchg
cwtl
fidivrl
lods
nop
pop
test
lret
sub
xchg
leave
adc
gs
sub
jne
into
mov
shrb
xchg
cmc
repz
aam
clc
movsb
lret
fmull
shl
das
in
cmp
nop
repnz
ficoml
or
mov
mov
and
xchg
loopne
mov
ret
out
jbe
bound
xchg
jmp
and
das
rorl
js
push
rolb
jns
push
pop
adc
sbb
cmp
lret
jmp
mov
xchg
shlb
mov
clc
ljmp
mov
jge
sar
mov
jmp
or
js
push
adc
adc
enter
andb
mov
rclb
cwtl
sub
adc
insb
sbb
dec
mov
pop
adc
out
mov
loope
inc
xchg
jnp
push
inc
mov
subb
xchg
jnp
xchg
into
add
pop
rorb
jle
jno
dec
jecxz
ret
repnz
sub
jae
lods
push
lret
negb
adc
mov
xor
fs
xchg
mov
imul
out
xchg
stc
ja
push
inc
fs
cli
jp
lock
into
push
dec
pop
outsb
mov
call
jo
jg
or
lea
jp
and
push
push
test
les
cltd
mov
adc
ficoml
lock
mov
mov
loop
add
push
mov
inc
mov
adc
xchg
out
sbb
pop
test
fisubs
orb
subl
mov
or
push
rol
dec
es
pop
adc
xchg
jmp
or
insb
fucom
int3
shr
dec
xor
movsb
sbb
push
xchg
insb
lahf
cmp
xchg
out
stc
ret
pop
push
or
cmp
mov
dec
push
nop
jbe
jmp
jbe
cwtl
iret
dec
add
xchg
adc
clc
stos
jecxz
jno
pusha
inc
adc
lret
adc
loope
pop
js
mov
or
lock
cmc
scas
sbb
inc
enter
push
sbb
jle
sarb
cmc
xor
rcrb
or
adc
mov
push
clc
push
xchg
in
dec
and
rcr
ljmpw
add
jle
cmp
lcall
jbe
lcall
jb
lcall
outsb
in
dec
fisubs
mov
mov
adc
in
scas
push
jmp
popf
addr16
das
and
shll
rcr
inc
mov
jg
mov
sbb
xchg
mov
sbb
push
js
add
add
lahf
popf
sbb
push
jl
adc
mov
test
push
fiaddl
adc
aad
pop
jb
cld
adc
sbb
add
aad
repnz
cmp
out
jne
push
push
fwait
insl
icebp
mov
in
adc
js,pt
movsl
mov
sub
mov
adc
in
aad
insb
or
cmp
add
pusha
pop
and
out
sbb
push
push
pop
rolb
div
es
mov
cwtl
xor
push
adc
mov
lock
add
pop
lea
std
lds
jnp
fists
sbb
cwtl
push
nop
push
mov
and
push
adc
inc
nop
jns
or
adc
cmp
data16
pop
or
repz
bound
movsl
xorb
cmpsb
sub
push
jo
cli
xchg
call
outsb
ljmp
xchg
cmc
arpl
loope
jne
leave
rcr
je
test
jbe
push
sbbb
lahf
pop
mov
jmp
and
add
sub
mov
mov
push
jae
adc
repnz
stos
aam
fimull
lock
or
pop
es
mov
mov
cltd
pop
mov
pushf
add
repz
xchg
and
xchg
cmpsb
in
jnp
repz
mov
decb
out
nop
cmpsb
jb
xchg
jg
notb
mov
ss
aam
inc
push
push
mov
mov
xor
add
iret
mov
mov
xchg
pop
rep
and
mov
gs
add
out
adcb
mov
jno
out
jp
js
in
mov
push
sarb
jl
add
dec
scas
bnd
xor
xor
jne
jno
mov
cmc
fwait
sbb
adc
fucomip
sti
out
cltd
enter
jecxz
cmp
mov
clc
xchg
push
sbb
popa
sahf
xor
int3
jne
jmp
sar
scas
adc
nop
xor
adc
sar
cmp
mov
jo
push
clc
mov
js
divb
ret
imull
or
les
sbb
mov
or
dec
cmpl
sbb
arpl
adc
fwait
pop
cmpb
mov
popf
outsl
jge
cwtl
sbb
pop
stc
je
arpl
fwait
pop
js
inc
mov
mov
test
add
mov
in
push
rcrb
adc
in
jle
stos
shll
xchg
pop
nop
add
jmp
lods
das
cmpsb
xchg
cmp
mov
add
add
push
jp
fcomip
cmpsl
mov
dec
or
sub
pusha
adc
repnz
xchg
ja
jecxz
pop
enter
cli
cld
test
les
add
ficoml
rclb
jge
fld
adc
sarb
lret
xor
loop
xor
in
jp
lea
or
rcr
jle
push
bound
xchg
mov
or
push
jmp
mov
pop
call
jl
mov
adc
andb
xchg
repnz
mov
push
add
mov
xchg
mov
pop
xor
mov
mov
mulb
adc
inc
loop
mov
fidivl
xchg
jno
out
push
mov
enter
inc
cmpsb
or
ljmp
push
mov
pushf
outsl
pop
test
jnp
xchg
mov
cmp
std
cmc
mov
enter
daa
xchg
dec
insb
and
test
pusha
jp
cmp
mov
loop
call
push
loop
inc
cmpsb
jp
adc
pop
stos
sbb
popf
lret
jl
pusha
or
clc
add
test
sbb
or
or
cmp
imul
cmpsb
scas
sar
push
xchg
test
mov
jnp
mov
loopne
or
out
cmp
popf
jp
in
inc
xor
mov
fsubrp
mov
cmp
sar
jmp
xchg
pop
std
ficoml
scas
dec
shl
push
push
jbe
leave
pop
icebp
add
add
adcl
jbe
fldz
scas
jg
mov
mov
fildl
aad
sbb
pop
scas
xchg
pmulhw
in
xlat
inc
outsl
ficoms
xchg
mov
clc
sub
dec
cmp
cmp
sahf
add
iret
sbb
push
clc
or
hlt
jnp
sbb
pop
inc
test
or
jns
jge
pop
stos
dec
fadds
sub
inc
sahf
fwait
xchg
or
push
adc
pushf
stc
mov
cltd
sti
adc
xor
pop
popf
inc
pop
icebp
jge
inc
fistl
jae
and
ljmp
mov
sub
jnp
xchg
push
mov
jns
adc
mov
cmp
mov
xchg
and
pusha
int
sub
adc
div
mov
push
fsts
js
test
pop
xor
punpcklwd
fcmovu
out
scas
or
push
fmull
push
cli
hlt
sbb
stc
shlb
icebp
sub
sub
cmpsb
test
xor
sbb
and
jno
cld
xchg
ror
or
pop
jne
adc
and
add
jne
fscale
ret
sub
mov
mov
mov
jle
add
incb
dec
xchg
push
jge
rolb
divb
dec
mul
call
sub
sub
outsb
out
push
lock
mov
xchg
psrad
push
jno
nop
xchg
aaa
repnz
cwtl
outsl
xchg
jle
cmp
fs
fadds
aad
push
out
jle
out
iret
mov
sub
lods
aam
pop
enter
dec
push
xor
jbe
push
add
sbb
xchg
out
cli
popa
enter
psadbw
leave
or
mov
inc
nop
faddl
mov
dec
inc
outsb
mov
adc
es
pop
sahf
imul
dec
int
nop
xchg
js
or
xorb
pop
cmc
sbb
cmpsb
push
out
test
sub
loop
sub
add
inc
xor
fs
xchg
xchg
imul
add
loop
cmp
sub
lcall
mov
sbbl
pop
jb
test
sub
call
add
inc
call
in
in
pop
adc
sbb
xor
add
xchg
iret
sbb
sbb
test
mov
or
jbe
imul
mov
xor
iret
xor
xor
rolb
ret
or
mov
dec
aas
fwait
stos
out
rolb
xor
mov
sti
movsl
pop
enter
adc
adc
pop
push
adc
sbb
lds
in
jb
jb
es
jns
cmp
fsubr
push
in
out
mov
out
xchg
rolb
jae
sar
scas
mov
fld
cwtl
pusha
adc
lea
xchg
cmp
sbb
out
jne
lret
sbbl
dec
add
cmp
or
push
int
push
inc
xchg
mull
iret
sbbl
lods
stc
add
push
stos
outsl
and
jl
jo
hlt
jne
sbb
shll
and
std
test
dec
inc
mov
popa
xchg
dec
xchg
fucomp
jne
flds
mov
lock
xchg
push
push
lcall
ss
xchg
adcb
and
or
call
xchg
dec
testl
js
in
sbbb
subb
adc
dec
sbbb
jmp
and
inc
push
adc
cmp
inc
push
mov
loope
lock
divl
mov
pop
sbb
xchg
mov
hlt
or
clc
enter
or
leave
scas
dec
add
and
imul
pop
sub
adc
xor
mov
lcall
adc
dec
cmp
inc
sti
cltd
lahf
aaa
cwtl
loopne
and
adc
cltd
fidivrl
pusha
pop
xchg
ficomps
add
adc
mov
xchg
cli
arpl
jns
pusha
andb
fldl
js
mov
pop
sbb
xchg
outsl
and
cwtl
int
sbb
call
movsl
loopne
ret
lret
push
sbb
jge
movsb
loopne
mov
xchg
mov
jle
xchg
adc
aaa
mov
into
inc
clc
xlat
mov
dec
popa
pop
mov
in
cwtl
sub
leave
cmp
xchg
les
mov
out
jbe
mov
push
xchg
push
jns
xlat
or
clc
jns
aad
jo
test
cmp
sbb
sbb
int
push
push
std
mov
js
clc
je
xchg
cmc
xchg
sarl
fmul
mov
rcrl
adc
clc
jmp
test
ud0
jmp
clc
mov
lret
xchg
mov
scas
stc
roll
fcmovnu
push
jb
pop
js
int3
rorb
xchg
rolb
add
stos
leave
outsl
call
jmp
sub
out
adc
std
push
lret
and
or
rorl
xchg
fwait
xchg
xchg
add
cmp
sbb
xchg
mov
or
sbb
jmp
repnz
testb
adc
mov
mov
xor
dec
mov
mov
sub
ja
sub
add
pop
or
leave
mov
mov
enter
mov
cmpb
push
lret
pusha
add
xchg
sub
scas
sbb
jp
aaa
jg
sahf
negl
es
frstor
jno
je
out
pop
sbb
mov
test
jb
faddl
jle
or
mov
movsb
push
ja
stc
cmp
xchg
mov
in
mov
sub
sbb
cmp
cmp
xchg
push
rolb
sbb
loopne
call
mov
dec
cld
arpl
call
push
and
push
mov
cmp
or
jnp
pop
inc
adc
sbb
test
decl
leave
not
or
sub
incl
cmpsb
fcoml
popf
repnz
leave
rclb
jno
mov
hlt
mov
test
jg
xchg
add
sbb
pusha
aam
popf
adc
xor
in
sbb
mov
shlb
repnz
test
pop
lahf
scas
jg
jecxz
jmp
jno
and
cmp
and
movsb
sarb
ljmp
sahf
jecxz
xchg
mov
or
js
cwtl
fwait
shll
mov
imul
mov
into
mov
push
xchg
push
mov
je
xchg
bound
sub
dec
xchg
sbb
test
sahf
xchg
outsb
adc
jns
outsb
cmpsb
xor
jno
xchg
add
loope
pop
mov
in
add
popf
add
loop
imul
stc
aad
pop
mov
jb
mov
mov
jg
leave
es
into
in
jnp
shlb
hlt
mov
xchg
push
shlb
out
aam
imul
in
inc
dec
xchg
ret
mov
add
negb
insb
cld
jb
push
mov
or
js
loopne
decb
les
dec
cmpsb
push
mov
cltd
pop
jns
ja
xchg
pusha
xchg
int3
fidivrl
icebp
aaa
aam
sub
in
push
repz
shl
jns
mov
test
insl
cmc
pushf
xchg
hlt
les
adc
sahf
shl
push
repz
aad
jb
mov
pop
cmp
mov
sti
nop
jecxz
leave
push
dec
test
jmp
stc
je
invd
and
push
jae
test
dec
mov
js
or
cmpsb
pop
insb
pushf
insl
int3
mov
xchg
pusha
inc
ja
out
jmp
xor
mov
pop
mov
cld
adc
lock
int3
inc
sti
dec
jle
mov
adc
and
pop
idivb
xchg
sub
pop
rorl
aad
mov
mov
mov
sub
int3
adc
call
pop
testb
xor
sbb
ret
add
movsb
dec
and
xchg
add
loopne
bnd
pop
ja
pop
pop
add
nop
pop
jns
push
xchg
sub
icebp
mov
stc
push
mov
sub
ljmp
or
shll
les
fucomp
mov
sahf
pop
shll
scas
sub
mov
jle
stos
in
mov
adc
je
incb
add
fnsave
daa
divb
xchg
xchg
mov
das
xchg
cwtl
mov
mov
cmp
adc
or
movl
out
or
pop
jmp
sar
jl
nop
les
incl
sub
xor
jbe
or
insb
xchg
jb
imul
sahf
mov
sahf
filds
xchg
xchg
daa
push
clc
inc
push
mov
xor
loop
xchg
fcom
cmp
ja
cmp
or
xchg
and
mov
stc
sahf
mov
jmp
inc
movsl
mov
adc
ret
xchg
insl
sbb
rolb
cmp
mov
test
push
repz
mov
enter
jg
out
lret
test
lret
xchg
and
cmp
and
aas
xchg
test
mov
fmul
icebp
gs
mov
pop
xchg
adc
mov
cld
dec
push
pop
nop
pop
xchg
leave
popl
and
arpl
add
es
fisttps
inc
fisttpl
cmp
cmp
mov
dec
insb
jno
or
or
jno
inc
or
jl
dec
mov
cli
loope
fistpl
xchg
fidivrl
xchg
mov
stos
xor
lods
mov
inc
mov
mov
add
lock
into
mov
push
jo
jg
les
xchg
cmpsb
sahf
outsb
push
mov
push
jns
or
mov
stos
pop
pop
sti
add
insl
inc
or
mov
jecxz
aam
or
pop
sub
iret
add
xchg
mov
sahf
adc
int
mov
pop
sti
aad
push
repnz
xchg
cmp
add
push
addb
jnp
inc
mov
insb
roll
inc
call
test
and
cmpsb
add
mov
or
ret
lods
sbb
mov
or
and
test
pop
add
and
adc
push
in
jp
xchg
cmpsb
cmp
aas
adc
mov
imulb
cmp
out
and
aaa
pop
xchg
pop
lock
mov
jmp
cmp
cmpsb
scas
sahf
stc
dec
sahf
xor
push
pop
test
mov
outsl
fistps
addr16
mov
adc
rclb
fisttpll
ja
jae
outsb
mov
ret
mov
push
adc
mov
outsb
cmp
adc
cmp
addr16
lcall
push
cmpsb
mov
mov
sbb
mov
xchg
push
rorl
ja
imul
cmp
mov
bound
andb
or
mov
and
add
pusha
lea
fsubrl
gs
push
adc
push
outsb
sar
xchg
int3
pop
pop
nop
adc
icebp
mov
scas
je
cli
nop
out
xchg
mov
jle
stc
or
ljmp
pop
cmc
lea
cmpsb
jae
cs
dec
lods
insl
sti
outsl
addb
aam
cwtl
cmp
fmuls
lret
push
mov
and
icebp
in
cmp
adc
repz
dec
sub
loopne
lret
lcall
dec
loopne
idivl
lods
and
push
enter
dec
lret
js
pop
psubb
adc
fisubs
adc
roll
cwtl
xor
inc
lahf
mov
pop
jae
call
jne
pop
or
loopne
push
xchg
jg
dec
jbe
cmp
mov
jle
xchg
gs
inc
pusha
push
test
cs
lock
call
std
scas
push
add
aad
sti
jge
pop
lods
out
xchg
push
das
flds
call
jle
outsb
xchg
push
imul
pop
pop
pop
cmp
jo
out
add
fdiv
notl
xchg
das
jmp
mov
fcmovu
cmp
pop
in
sub
jp
lock
loopne
or
xor
adc
inc
push
cli
stc
adc
data16
fstpl
adc
jl
ljmp
sbbl
shlb
push
notb
enter
mov
mov
pop
push
sti
jns
jle
cmp
cmp
sub
push
adc
ljmp
xchg
sbb
jo
scas
push
mov
or
mov
std
xchg
ljmp
loop
mov
xor
jp
mov
mov
repnz
sbb
cmpsb
es
cmpl
or
jb
es
cmp
pop
pop
dec
loopne
mov
nop
sub
cltd
gs
add
pusha
inc
fiadds
pop
inc
sbb
push
and
inc
mov
sbb
shr
movsl
ret
and
repz
stc
mov
ror
push
pop
push
fisubrs
call
cmc
mov
sarb
cmp
or
scas
nop
adc
into
mov
xchg
xchg
mov
jp
scas
jecxz
stos
xlat
setae
mov
mov
repnz
iret
cli
mov
rclb
dec
popa
in
mov
push
and
mov
or
std
out
pop
xchg
fcoms
cmpsb
testb
imull
nop
mov
clc
enter
repz
xor
jle
jno
mov
vphadduwd
ret
lret
and
jnp
testl
adc
jl
push
outsl
adc
cmc
cli
ret
mov
mov
jbe
test
movsl
mov
inc
xchg
jp
scas
xor
sahf
enter
mov
call
push
push
loope
fcoms
xchg
insb
aad
push
nop
pusha
xlat
loopne
test
adc
lret
add
pusha
push
push
fidivrl
or
add
or
aad
sahf
mov
cmp
or
out
popa
int
pshufw
sahf
movl
cmp
mov
inc
orl
js
loop
inc
push
and
xchg
out
mov
in
inc
fbstp
mov
mov
mov
jbe
stos
icebp
mov
repz
cmp
mov
xorb
ljmp
xlat
mov
int3
aaa
cmpsl
sbb
mov
jno
fst
push
in
sbb
ficoml
fldt
leave
and
adc
icebp
xchg
sub
mov
dec
dec
rcll
cmpsb
mov
push
and
outsb
ds
test
iret
or
push
mov
cmp
hlt
inc
ds
int
adc
in
xchg
xchg
dec
xor
mov
cwtl
clc
cmpsb
jb
pushf
dec
and
pop
enter
add
scas
std
movsb
push
mov
pushf
fmuls
fwait
mov
jb
lea
fisubrs
repz
ds
ss
push
dec
pop
std
in
psrlq
mov
ss
outsl
les
insb
push
loopne
xchg
cli
loop
loope
out
mov
mov
pop
adcb
xor
mov
mov
cmp
sbb
test
dec
mov
in
cmpsb
test
cmp
test
lods
mov
into
shl
mov
cld
loopne
xchg
into
or
push
repz
mov
push
out
sbb
ljmp
sbb
mov
push
push
adc
pop
xlat
enter
sbb
mov
in
pop
mov
mov
jns
mov
ja
call
push
ja
mov
xchg
xchg
out
or
fsubl
jb
nop
nop
sti
aad
jno
in
popf
sti
push
jp
clc
fmuls
cmp
jb
pop
out
sub
xchg
sub
adc
jnp
cmpsb
stos
sub
adc
and
in
aam
mov
mov
pop
std
enter
sti
das
sbb
pop
les
and
shrb
xchg
push
jle
adcb
pop
or
lods
pop
or
cwtl
adc
jno
push
xchg
jo
xchg
test
sar
lock
outsb
mov
enter
adc
push
adcb
dec
xchg
out
jnp
xchg
dec
adc
clc
jmp
push
test
mov
in
or
scas
dec
ret
int
fdivp
popa
add
xor
push
loope
adc
push
out
pop
outsb
fincstp
cmova
pusha
push
xlat
add
xchg
pop
stc
faddl
in
mov
rolb
mov
adc
repz
test
or
mov
mov
adc
and
test
gs
mov
out
cmpsb
mov
and
loopne
fdivrl
cmpsb
es
pusha
scas
in
xchg
adc
or
insb
adc
es
cmc
movsl
xchg
mov
inc
and
jle
nop
mov
pop
movsb
lahf
bound
push
xchg
adc
iret
stos
js
cld
xchg
pop
popf
adcb
test
out
mov
sbb
cmpsb
dec
mov
jno
inc
inc
mov
imul
push
mov
xchg
cmpsb
scas
or
xor
push
mov
mov
push
aad
jge
adc
out
mov
loop
adc
imul
loopne
ja
pusha
sub
pusha
mov
mov
dec
inc
out
fstl
pusha
ds
imul
lods
mov
mov
push
cmp
cmp
pop
add
sbb
call
aam
movsl
mov
pop
xchg
add
movsb
jns
add
jg
pop
dec
js
xchg
scas
fsubrs
shll
adc
lret
mov
imul
sbb
hlt
push
dec
adc
cmp
sbb
lock
test
xchg
int
push
sbb
xchg
mov
xchg
mov
mov
mov
fisubl
lods
mov
js
cmpsl
mov
les
mov
cmc
je
adc
xor
adc
mov
scas
cli
xor
call
ret
fsubr
mov
movsb
leave
cld
push
stos
xchg
or
in
pop
into
push
sbb
xlat
in
mov
add
call
sbb
jle
cli
xchg
adc
mov
mov
jle
clc
add
movsl
mov
nop
mov
pop
push
jo
cmp
push
js
mov
mov
addl
mov
or
sbb
notb
pop
enter
daa
call
xor
cmp
inc
dec
clc
adc
out
jo
repz
inc
jle
nop
mov
ret
push
cwtl
loopne
mov
mov
xchg
out
mov
mov
in
adc
divl
je
cwtl
push
sbb
push
fdivs
jge
in
call
jo
cmpsb
jb
mov
sub
stos
pop
clc
and
das
aaa
pop
fwait
adc
testb
rcrl
es
adc
push
leave
jl
mov
clc
xchg
inc
loop
cltd
popa
sbb
and
repnz
add
pop
cmc
cmpsb
rorl
mov
jb
sbb
jmp
pop
sub
adc
lock
inc
je
std
and
mov
les
xor
cwtl
inc
mov
jl
psadbw
mov
adc
insb
rclb
jl
jle
nop
std
into
fcomi
fstpt
movsb
icebp
ss
jne
imul
xchg
sti
mov
jbe
xlat
xchg
clc
xlat
loop
cwtl
ret
xor
fxch
cli
fwait
add
add
xor
mov
out
dec
cli
in
shll
mov
rcrb
lds
pop
push
loop
std
vpackssdw
push
nop
jmp
inc
test
lods
inc
xor
mov
or
movsb
sti
adc
popf
leave
xor
xchg
mov
xchg
pop
enter
mov
mov
ret
icebp
mov
xchg
gs
clc
fstps
stos
sub
jno
movsb
mov
adc
rclb
jb
cmc
popf
or
push
adc
sbb
adc
adc
xchg
fsubl
mov
test
xor
cwtl
jge
std
cmp
pusha
pop
add
rolb
xchg
push
out
sahf
enter
in
fwait
add
jecxz
add
fistl
sbb
mov
ljmp
dec
pushf
add
fucomip
adc
and
sbb
orl
sti
ja
jo
and
adc
and
mov
push
inc
jp
jns
sbb
cmp
stc
xchg
mov
inc
jns
aam
or
cmp
push
mov
stc
mov
and
xchg
push
adc
push
cwtl
mov
push
jno
jmp
pop
dec
fmull
jae
clc
jmp
add
fistl
xchg
push
or
mov
aad
xor
jl
push
push
aad
std
mov
jne
mov
mov
test
inc
push
push
xchg
push
insl
test
fmul
and
mov
jbe
add
and
enter
mov
mov
test
sbb
pop
push
jmp
push
sbb
mov
in
test
js
pop
sub
lahf
jmp
std
cmpsb
jl
xor
inc
xchg
sahf
jge
out
xchg
mov
imul
je
pushf
xor
mov
fidivrs
aas
push
out
xchg
xchg
inc
outsb
loopne
out
popf
mov
out
mov
inc
and
mov
mov
jns
xchg
fs
lock
push
out
bnd
lds
pop
jp
in
out
mov
xchg
icebp
jno
xor
xchg
lcall
adc
jno
je
mov
nop
pusha
adc
and
invd
nop
xchg
inc
lea
xchg
adc
out
mov
roll
fildll
mov
adc
subl
imul
loopne
and
sbb
ds
fidivrs
js
mov
cmp
pop
adc
inc
movsl
add
sbb
ror
test
xor
std
cmpsb
inc
xchg
fisubrs
and
xor
pop
add
dec
icebp
add
xchg
pop
fdivp
and
jecxz
daa
nop
cmpsl
aaa
aas
fucomi
jno
mov
jl
insb
outsb
rolb
dec
clc
cli
mov
push
jnp
sub
cmp
loop
cmp
shll
sbb
clc
push
inc
lods
mov
push
stos
inc
in
cltd
xchg
pop
icebp
mov
xor
ss
sub
icebp
push
scas
fidivrl
pop
cmp
out
ficoms
in
xchg
andnps
inc
adc
int3
adc
ss
test
mov
xchg
mov
andb
iret
nop
daa
adc
sbb
into
aad
test
xor
xchg
push
push
cltd
negb
cltd
repz
inc
push
pop
cmc
pop
mov
aam
pusha
insl
mov
sub
push
call
xchg
adc
aas
ss
mov
xor
lods
pusha
fnsave
fiaddl
out
lret
fildll
pushf
dec
mov
add
xchg
pop
fnstcw
popf
imul
cmpsl
pop
push
inc
cltd
cmpsb
sub
mov
jg
outsb
cmpsl
cwtl
sbb
sarb
fwait
pop
scas
cmpsb
repnz
push
sbb
lret
cmp
aad
mov
jbe
loop
aam
pop
daa
dec
movsl
fnsave
fldcw
or
repz
clc
cmpsb
jns
add
adc
out
or
std
cmpps
and
sbb
xor
cmpsb
test
sbb
and
pop
shrl
test
mov
lock
lea
pop
sbbb
js
orl
xchg
sbb
stc
adc
fidivrl
daa
pop
push
xor
and
jmp
test
xor
aas
mov
jmp
jmp
scas
jo
sbb
in
mov
loop
aas
fcos
and
sub
and
sbb
fldl
mov
enter
cltd
mov
add
xlat
ja
lock
pop
dec
es
jp
xorb
pop
jae
sub
pop
cmp
mov
leave
daa
iret
cmp
jns
pop
or
mov
push
xchg
adcb
or
in
xor
test
xchg
jp
lock
mov
mov
xchg
jge
loopne
call
cmp
mov
dec
pop
push
adc
jmp
orb
adc
mov
xchg
xor
mov
in
jl
sbb
push
into
fwait
pop
or
rcrl
and
add
mov
pushf
sbb
fildll
xor
sbb
arpl
push
jae
inc
dec
cltd
or
ret
repnz
mov
mov
mov
adc
or
mov
std
pop
or
les
insb
sahf
loope
sti
inc
fdivs
xchg
pop
ret
mov
into
xor
xchg
jo
adc
out
sub
stc
mov
jp
cmpsb
ja
lret
dec
sti
cs
jae
adc
mov
addl
xor
mov
sahf
jge
pushf
xchg
xchg
cwtl
cmpsb
stc
push
ret
mov
mov
test
xchg
imul
mov
cmp
mov
sbb
mov
push
and
mov
or
aad
sbb
fs
aam
cli
push
jne
mov
cli
push
popa
jle
fs
insl
fwait
popf
jle
lea
cld
mov
pop
pop
dec
mov
add
jno
sub
adc
ss
jne
movsb
repnz
shl
and
shlb
clc
cli
out
mov
jge
mov
sub
push
scas
je
gs
cltd
dec
pop
mov
idivb
add
mov
testb
sbb
repz
js
mov
movsb
out
sub
incb
cmp
add
int3
mov
pop
mov
push
call
xor
ret
in
sbbb
mov
cmp
push
jb
roll
roll
popa
xchg
cmpsb
xor
inc
sbb
mov
sahf
and
mov
adc
mov
xchg
mov
xchg
call
jo
rcl
int
cwtl
out
andb
hlt
cmp
fdivrs
jp
mov
pop
jg
and
lahf
js
shlb
out
or
les
or
or
push
pop
sub
sub
pusha
test
sbb
mov
sahf
orb
dec
sbb
int
mov
cmpsb
jo
adc
in
test
clc
push
adc
cmpl
cmc
adc
out
aam
ds
and
aad
loopne
aam
idivl
jns
pop
jns
xchg
stos
sbb
lahf
pop
bound
cs
cmp
xchg
aaa
scas
pop
mov
movsb
adc
pop
add
sbb
mov
cmpsb
rcr
inc
adc
mov
cli
mov
aad
cwtl
and
or
rcr
clc
out
aaa
insl
cltd
xchg
xor
movsl
popa
call
and
push
cmp
xor
adc
push
mov
in
cmpb
sbb
cmpsb
inc
push
fisubs
jne
shl
out
insl
notl
dec
mov
out
jns
test
push
repz
push
jbe
adc
lock
push
mov
pusha
adc
popa
hlt
xchg
xchg
jecxz
frstpm(287
mov
nop
mov
xchg
and
mov
lahf
xlat
test
sarb
test
xor
das
div
and
jns
jmp
pusha
loopne
add
or
adc
or
xchg
mov
pop
lds
or
xchg
xchg
jbe
and
mov
pop
adc
jmp
popa
stos
jge
loop
inc
xchg
mov
std
cwtl
sbb
arpl
pushf
xorb
rol
int3
imul
fwait
negb
test
imul
mov
aad
imul
test
push
es
push
aam
cmpb
cwtl
add
test
mov
std
cmp
repnz
in
sar
sub
out
jmp
mov
xchg
adc
icebp
xchg
ret
cltd
sahf
sub
int3
push
inc
push
pop
lahf
pusha
xchg
pop
andl
adc
push
sbb
les
popa
sub
leave
sar
cmp
lahf
orl
dec
adc
notb
jbe
std
cmc
jmp
adc
jecxz
xchg
int
movsb
dec
sahf
imul
mov
cmpsl
mov
mov
cmc
out
inc
ljmp
sub
clc
jnp
out
xchg
push
roll
sbb
mov
xchg
repz
loopne
sbb
ficomps
sub
jmp
lret
pop
jp
jg
cmpsb
add
xchg
notb
mov
push
push
mov
aam
loopne
test
insb
pop
es
sbbb
or
push
xchg
into
fwait
add
adc
mov
and
cmpsb
stos
scas
cld
ja
xchg
pusha
sub
gs
in
cltd
add
test
gs
lahf
notl
mull
add
loopne
lret
or
das
clc
lea
ljmp
and
and
cwtl
dec
or
xchg
into
sbb
aad
and
inc
sbb
fisubrl
mov
nop
outsl
sub
out
add
jnp
bound
lcall
push
adc
xchg
cmp
movhlps
gs
outsb
push
sub
push
sbb
xor
stos
std
jns
add
bts
addr16
loop
mov
adc
push
or
mov
add
xchg
mov
lods
sub
mov
dec
push
int3
mov
out
addr16
insb
call
icebp
in
out
xchg
inc
push
adc
popl
pop
dec
scas
adc
xchg
lahf
fadds
in
aaa
jmp
cs
mov
cltd
dec
roll
xchg
popf
push
xchg
rcrb
mov
int
lods
xchg
push
lds
jge
cltd
fstps
rcrl
sub
int3
pushf
mov
xor
or
cld
addb
mov
sbb
xchg
add
ja
xchg
repnz
adc
pop
inc
daa
aas
out
and
ljmp
loopne
fidivrs
es
sbb
stos
bound
cmp
cwtl
sbb
and
mov
push
sbb
stc
scas
mov
jns
or
popf
test
or
inc
cmpsb
push
cmpsl
xchg
sti
mov
xor
test
sub
test
adc
jnp
test
mov
mov
or
mov
xchg
push
mov
xchg
jae
sub
lock
xchg
sub
sbb
xchg
lcall
push
std
lahf
fistps
jl
pop
jns
xchg
fcoml
xchg
lods
fwait
cld
test
bound
jg
cmpsl
push
or
mov
dec
push
imul
dec
adc
xchg
and
iret
push
mov
cmp
and
or
icebp
xchg
shll
push
sbb
inc
jns
jne
stos
mov
push
test
shlb
repz
or
pop
xchg
xlat
popf
leave
mov
mov
insl
popf
int
xchg
popf
and
xchg
out
xor
dec
in
cmp
adc
pop
testb
mov
das
mov
jle
mov
push
scas
or
in
scas
lock
addb
sub
fs
mov
push
pop
and
ja
jmp
fsub
setbe
xchg
ficoms
mov
sarb
jno
addr16
adc
ss
add
pop
xchg
jle
mov
adc
addl
inc
sbb
jbe
xchg
ss
push
aam
shll
stc
inc
or
cmpsb
jmp
and
cmp
pop
popf
enter
pop
jmp
sbb
dec
jne
pop
cmp
mov
cmpsb
push
sub
imul
sub
dec
hlt
rcl
addb
add
les
xchg
aaa
js
aad
mov
inc
jno
mov
xchg
into
or
jno
pminsw
outsb
stc
out
adc
nop
adc
and
lcall
in
or
mulb
outsl
out
bnd
dec
cli
mov
js
and
movsl
add
mov
or
jp
xor
std
xchg
loop
clc
mov
jo
and
js
inc
jmp
in
movl
inc
mov
pop
xchg
sbb
mov
and
adcb
mov
xchg
add
sub
add
or
mov
jmp
pop
mov
cwtl
test
pop
js
loope
mov
pop
mov
jp
out
int
mov
push
sub
daa
jne
mov
cmc
lahf
aaa
repnz
lret
movsb
add
xor
adc
add
xchg
fidivl
xchg
cmp
push
pop
jg
sbb
fldl
push
faddl
push
negb
jl
push
inc
adc
out
loop
fisubl
fistpll
cmpsb
imul
std
scas
fistpl
mov
and
push
arpl
js
std
movsl
faddl
cld
dec
into
pop
aad
mov
jmp
sub
lods
mov
negb
loopne
adc
test
fdivr
xchg
fstpl
stos
in
subl
aaa
ds
mov
jge
jle
xor
pop
push
adc
test
push
inc
ljmp
and
adcb
xor
adc
clc
divb
sbbb
jl
jp
jle
shlb
dec
cli
int3
hlt
cmpsb
adc
mov
clc
mov
push
mov
addb
mov
loopne
jb
dec
fcoms
xchg
xchg
mov
dec
test
test
pusha
cld
dec
mov
mov
repnz
xchg
int3
fdivr
dec
mov
xor
push
sti
and
mov
jmp
cli
jge
sbb
mov
pop
adc
or
lret
popa
xchg
pop
mov
ds
sbb
inc
and
movsb
fstps
mov
mov
sub
mov
push
xor
xchg
cmp
cli
pop
xor
or
mov
rcl
jns
xchg
inc
das
sbb
sarb
mov
negl
imul
pop
mov
sub
loopne
decb
xor
loopne
pop
push
cld
push
popa
icebp
push
jle
adcb
dec
mov
dec
bound
adc
idiv
sub
ja
jle
mov
xchg
mov
pop
xchg
bts
lahf
or
mov
out
jne
mov
add
push
or
fdivrl
mov
xchg
push
and
loop
cmp
outsw
sahf
mov
pushf
out
or
cmpsl
nop
or
shl
xchg
mov
mov
push
mov
lea
xchg
bnd
addr16
movsb
jbe
test
lods
cmp
adc
gs
ret
mov
nop
sbb
repnz
xchg
out
jge
loopne
dec
xchg
cmc
icebp
sti
inc
mov
aad
pop
sbb
arpl
and
aad
call
push
xchg
mulb
loope
push
mov
orl
es
mov
pusha
andb
fmuls
push
and
adc
jae
push
add
inc
sub
or
and
cmp
sti
roll
pop
popa
repz
xchg
je
xor
xchg
push
fidivs
rcrl
aam
ret
dec
loop
push
iret
push
mov
jo
ret
jns
test
mov
mov
or
les
out
xchg
pushf
inc
jb
repnz
test
lods
jle
loope
hlt
aam
mov
xchg
ficoml
mov
call
in
push
in
or
push
test
jbe
fwait
xchg
ret
mov
sbb
mov
push
aam
adc
shr
std
inc
dec
adc
cltd
fiadds
push
les
lock
mov
xchg
int3
clc
push
jp
idivb
jle
or
xchg
mov
sbb
ret
sbb
inc
out
push
lock
dec
or
jo
lock
pop
or
test
push
push
dec
xchg
push
xchg
sbb
pop
mov
div
clc
fldl
out
adc
out
push
test
sbb
xchg
call
sbb
xchg
xchg
jmp
push
dec
jge
leave
push
cli
or
nop
clc
fcmovnu
xchg
arpl
or
ror
addr16
or
adc
mov
adc
add
pop
gs
or
sub
mov
dec
xorb
xor
jne
add
jae
lcall
cmp
cltd
xor
cld
icebp
mov
lret
sbb
aad
data16
movsb
sahf
jne
xchg
xorb
xchg
out
movsl
jl
cmp
addl
pop
pop
jae
xchg
inc
loop
hlt
dec
idiv
hlt
adc
jbe
pusha
jecxz
jb
jp
and
jno
popa
adc
push
lea
je
cmpl
icebp
cmp
icebp
xchg
repnz
xchg
jbe
lcall
sbb
xchg
mov
arpl
aas
jb
adc
shrb
adc
mov
xchg
xchg
test
aam
adc
movsl
stos
xchg
je
gs
xor
inc
pop
out
shl
xchg
icebp
cmpb
jmp
ror
dec
inc
adcl
call
repnz
push
jp
pop
xchg
xor
jecxz
mov
push
mov
shr
outsb
mov
dec
push
xchg
aad
arpl
mov
adc
xchg
mov
adcb
sbb
cmpsb
je
lods
stc
into
ficompl
dec
jb
jbe
mov
callw
mov
dec
test
flds
cltd
xchg
pop
sbb
arpl
push
loopne
sub
jbe
xchg
cmp
data16
mov
repnz
mov
je
xchg
addr16
lock
xor
pop
sbb
notb
call
aas
sbb
negb
sbb
fs
cwtl
outsl
int
sub
clc
mov
sub
add
jbe
jb
push
out
lahf
and
into
jae
movsb
inc
aam
sbb
ret
clc
mov
mov
fistl
add
jnp
cmc
xchg
pop
or
hlt
fsts
pop
push
js
adc
xchg
or
movsb
clc
in
or
out
mov
aaa
xchg
aad
clc
pushf
jnp
aam
inc
mov
dec
nop
lock
lret
pushf
out
hlt
enter
jp
or
mov
inc
ss
xchg
js
and
jle
sbb
mov
popf
dec
adcb
dec
repnz
mov
pushf
stos
pop
stos
ljmp
xchg
mov
sbb
dec
mov
or
fists
mov
xchg
mov
sbb
in
jno
push
lea
sti
in
jge
jl
sbb
sti
adc
xchg
sti
xchg
sti
adc
push
sti
or
or
xchg
sti
push
sti
cld
sti
xchg
sti
clc
xchg
inc
sbb
repz
movsb
xor
sbb
inc
sti
ret
sti
sbb
inc
sti
sti
xor
mov
push
sti
test
xor
mov
inc
sti
ss
int3
fsts
clc
sarb
inc
pop
cmpsb
adc
cmc
nop
mov
negb
inc
or
lret
rcrb
inc
sbb
push
cmp
push
mov
mov
cli
xchg
push
push
dec
int3
push
test
cwtl
mov
mov
push
push
enter
push
test
mov
mov
jp
out
push
mov
mov
call
loopne
xor
mov
inc
data16
int3
fcom
xchg
aad
mov
in
xchg
stos
rclb
push
adc
or
push
pop
adc
xchg
and
cmc
es
dec
js
int3
icebp
lcall
aad
cwtl
or
jae
mov
xchg
int3
jno
adc
jno
test
jmp
out
jo
xchg
js
sbb
int
add
xchg
es
mov
test
insl
cs
ret
inc
mov
insl
xchg
nop
mov
out
sub
lret
mov
fldcw
jp
out
jns
lret
mov
sub
mov
scas
int
rcll
pusha
mov
push
sub
mov
push
and
imul
popa
sbbb
cmp
and
jecxz
cmp
fbld
push
out
fwait
iret
iret
xchg
lea
test
aas
dec
fwait
xchg
stc
fisttpll
iret
and
jg
xchg
fsubl
repz
mov
xor
push
or
and
pcmpeqd
push
sbb
push
mov
or
lods
xor
xchg
sbb
ret
xchg
mov
mov
xchg
xchg
imul
pop
stos
sahf
cltd
mov
out
stos
pop
mulb
pushf
pop
push
cmp
push
cwtl
test
inc
shlb
cmpsb
sub
or
cmpl
push
movsb
outsl
orb
mov
adc
into
addb
clc
enter
loopne
or
inc
out
dec
and
dec
sbb
out
js
push
mov
testb
jbe
out
sub
ficoml
clc
arpl
je
sahf
int3
inc
pop
dec
imul
dec
cwtl
jo
mov
xor
icebp
cld
push
rclb
and
add
sbb
xchg
imulb
inc
cmp
mov
aas
adc
ljmp
sub
mov
push
insb
sbb
cmp
movsb
mov
xchg
div
mov
push
push
pop
push
movsl
outsb
iret
idivl
int3
inc
cli
sub
aaa
je
cmp
xchg
ret
push
enter
mov
sub
test
hlt
push
mov
sbb
xchg
in
iret
in
sbb
test
push
push
mull
fdivl
dec
mov
inc
push
jp
out
jbe
xchg
add
push
repz
adc
and
shl
and
push
pop
sub
xchg
jmp
in
add
mov
cwtl
clc
subb
sbb
jae
xor
dec
imul
jne
imulb
add
jmp
dec
clc
mov
in
mov
xchg
cmpb
lock
cmc
stc
mov
push
xchg
pop
outsb
add
fiadds
mov
out
movsb
cmp
rcll
fwait
jl
testb
test
adc
rorl
mov
mov
enter
sbb
sbb
rorb
mov
or
dec
adc
jp
ljmp
jl
stos
jg
aam
sahf
lods
push
loop
or
push
test
aam
xor
fmull
js
and
push
or
loopne
dec
notb
mov
pop
jns
out
push
dec
push
lea
xchg
iret
push
repz
aad
jp
divb
js
mov
sbb
xor
bound
cmp
mov
xchg
push
add
cs
cltd
icebp
pop
iret
xor
jecxz
or
mov
rclb
stos
jmp
push
vpmaxsw
loopne
lret
sbb
mulb
jnp
mov
clc
cwtl
cltd
jb
sar
mov
into
insb
or
mov
das
clc
xor
js
mov
inc
jge
pop
adc
repz
call
mov
ja
push
dec
xchg
xor
xchg
lds
int3
fdivrs
fildl
fsts
or
fstl
sti
mov
stc
cmpsb
jp
scas
sub
add
cwtl
jne
push
mov
push
enter
xchg
fdivs
pop
mov
cs
mov
mov
idivb
cmc
mov
pop
std
mov
add
pop
jbe
cmp
inc
dec
aad
cmc
push
lock
psadbw
cmc
xchg
jp
fadds
xchg
psadbw
jne
sub
in
sarb
ja
hlt
xchg
adc
ja
ja
fs
add
arpl
or
roll
loopne
and
rep
or
js
mov
rcl
jae
dec
xchg
in
sar
pop
lds
push
mov
fsts
mov
jbe
insb
or
jb
pop
xorb
jo
xor
jmp
pusha
xor
push
jle
or
xchg
clc
notl
mov
xchg
push
movsb
stos
mov
jle
ror
dec
js
jo
xchg
mov
outsl
out
xchg
in
jae
push
enter
in
pop
or
mov
loop
notl
mov
cmp
cltd
repnz
pop
mov
aaa
outsb
cwtl
xchg
adc
pop
shlb
psadbw
in
cmp
idiv
mov
cmc
in
insl
cmp
add
adcl
in
clc
repnz
ds
mov
push
push
jo
xchg
cwtl
push
mov
inc
fsubrl
xchg
add
lret
mov
ss
aad
mov
mov
jns
fists
dec
cmp
out
adc
push
xchg
adc
test
jl
adc
pushl
push
ficoms
jmp
jb
fsubl
push
daa
loopne
adc
rolb
sbb
xchg
lret
loopne
jo
xchg
lock
out
jbe
outsb
int3
push
push
mov
or
lahf
out
outsl
xchg
mov
mov
test
push
jle
pop
lock
or
adc
or
mov
outsl
cmp
scas
sar
jno
mov
loopne
mov
or
or
pushf
or
sub
xchg
cld
pop
aas
test
lods
xchg
test
call
xchg
xor
loop
sub
fcmovne
add
rol
nop
pop
adc
dec
jae
inc
push
dec
xchg
inc
outsl
mov
movsb
sub
push
xchg
stos
mov
scas
arpl
mov
in
dec
xchg
or
int3
fidivl
xchg
dec
lret
js
ret
out
addr16
jo
mov
rclb
xchg
fsubrs
fsubrs
std
or
rclb
jg
cmpsb
outsl
outsb
push
push
test
js
mov
jmp
aam
test
push
loope
fsubrp
jb
xchg
inc
mov
pop
sbb
sbbb
sbb
fistpll
pushf
jmp
jge
mov
jo
sti
jecxz
mov
and
icebp
divl
ficompl
fwait
mov
dec
jns
inc
pushf
lds
outsl
clc
int3
movsl
fsubs
mov
sub
jecxz
jge
loopne
jecxz
sahf
jo
mov
popl
iret
fld
dec
xlat
test
stos
cmpl
adc
negl
popl
mov
clc
cmp
out
pusha
mov
dec
bnd
mov
outsb
arpl
or
repnz
xchg
sbb
popa
fimull
xchg
pusha
adc
jecxz
push
or
push
and
fdivr
xchg
sbb
cld
repnz
addb
pop
jle
fistpll
out
repz
cmpsb
push
push
xchg
or
push
xchg
dec
jns
cmp
nop
push
ljmp
lods
mov
icebp
out
imul
pushf
pop
idivb
inc
xor
mov
xchg
sbb
pushf
andb
mov
sbb
xchg
and
aad
outsb
in
push
outsl
andb
rorl
push
xchg
mov
xchg
ret
les
es
jp
orl
lods
or
or
in
jecxz
cmp
jmp
inc
push
add
xchg
aad
aam
lret
sbb
pop
mov
inc
loopne
fidivl
call
xchg
or
shl
notb
iret
ret
cltd
lds
out
fdiv
js
fstpl
and
sub
shrl
mov
jl
nop
out
lahf
testl
xchg
adc
cwtl
cltd
xchg
push
cltd
cltd
sbb
xchg
pop
mov
xchg
xchg
cwtl
push
dec
push
mov
sbb
mov
mov
daa
add
cmp
pop
stc
mov
xor
cltd
jo
pop
jmp
mov
mov
push
cltd
cmp
xchg
cmp
jl
adc
fistpl
or
dec
shrb
push
or
jno
mov
mov
pop
sti
and
ret
mov
inc
or
mov
stos
pop
mov
lea
in
aas
mov
ds
cwtl
loop
sbb
ja
out
repnz
jae
jae
pop
pop
cmp
pop
and
mov
mov
pop
jmp
pusha
mov
xlat
or
xchg
sbb
pop
rclb
aaa
mov
jp
pop
xchg
or
clc
test
mov
or
mov
jl
pusha
clc
and
xchg
or
fstl
xchg
mov
cld
out
aad
sar
enter
push
or
adcb
xchg
xor
push
bound
pop
mov
jne
les
iret
push
or
outsl
fdivl
fnstcw
into
add
adc
lock
sahf
jg
xchg
push
cltd
sbb
push
jl
sbb
insl
sbb
lret
stc
dec
mov
ret
mov
add
repnz
sbb
xchg
lock
pushf
adc
fdivrl
sbbl
cmp
mul
or
sbb
sbb
cmpsl
adc
clc
or
aaa
ret
or
pop
ljmp
sahf
xchg
xchg
out
ret
cmp
fcoms
jmp
mov
inc
call
andl
sub
xchg
test
fidivrs
jo
or
xor
in
lock
nop
clc
mov
or
xchg
ss
xchg
pushf
sbb
icebp
idivb
jp
int
adc
xchg
pop
dec
xor
and
mov
sbb
mov
mov
mov
xchg
mov
cs
cmp
jmp
jle
fimuls
bound
in
mov
adc
adc
cld
nop
pop
dec
pop
out
cs
sbb
popf
stos
push
adc
push
or
cmpsl
popa
repnz
cmp
pusha
call
cltd
out
mov
into
andl
loopne
and
cmp
test
lds
xchg
les
inc
and
cwtl
inc
dec
rcll
push
jbe
fnstsw
mov
jo
mov
jnp
addr16
call
lea
and
jbe
cli
push
cmpsb
mov
pop
mov
dec
fmull
adc
pusha
dec
jecxz
cwtl
dec
aaa
js
mov
mov
imul
mov
mov
loopne
jno
xchg
loop
mov
fbld
in
test
or
add
pop
test
loope
pusha
xorl
fimuls
leave
aad
sbb
xchg
adc
cmpsb
xor
xor
hlt
or
or
out
lods
jne
mov
mov
jb
fnstsw
or
push
cmpb
jl
xor
or
xlat
xorl
xchg
push
mov
nop
cmp
sbb
dec
xchg
adc
dec
push
das
lret
lds
add
mov
cmp
adc
out
lahf
xorb
iret
sbb
sbb
jp
std
and
dec
add
xlat
mov
sbb
xchg
or
push
or
repz
push
fsubrl
outsb
fmul
dec
jbe
xadd
adc
ja
fbstp
dec
imul
or
xchg
daa
aad
test
xor
mov
subb
push
mov
sbb
pop
arpl
int
mov
inc
push
xor
clc
stc
fcoml
nop
or
repnz
jno
out
sub
or
adc
test
inc
and
xor
mov
jbe
lods
adc
jne
pop
or
xchg
jns
pop
shr
pop
fidivs
enter
adc
or
addb
into
std
and
nop
icebp
xchg
adc
das
adc
aam
scas
push
push
decb
movsl
push
inc
mov
lea
rcl
rcll
pop
cmpsb
fsubl
popa
sar
std
lds
mov
int
sub
jecxz
mov
psubw
sbb
movsl
mov
in
and
xchg
adc
xchg
mov
test
gs
hlt
or
jge
repnz
adc
xchg
iret
mov
xchg
inc
add
mov
inc
sbb
push
scas
dec
add
mov
or
fistpl
pop
mov
jb
cmp
and
sar
xchg
loopne
insb
or
lock
push
test
and
sub
repz
fmuls
fisttpl
ffree
push
push
nop
and
cwtl
adc
pop
repnz
in
and
fmuls
mov
push
das
add
repnz
mov
or
idivb
jns
roll
addb
mov
xchg
negl
bnd
adcb
mov
notb
mov
jl
scas
out
psrld
mov
sbb
mov
cmp
cld
aad
adc
mov
daa
adc
clc
jmp
mov
sbb
mov
xchg
mov
jo
mov
mov
pop
or
fidivrl
and
cwtl
iret
cmp
mov
push
in
mov
jle
xlat
ja
or
jb
mov
subb
xlat
js
xchg
push
xchg
xor
mov
xlat
and
icebp
cwtl
aad
or
xchg
in
nop
dec
loope
shr
jbe
pop
cmp
decl
mov
pop
hlt
fstpl
xor
pop
mov
aaa
js
stos
add
test
cmpsl
enter
xchg
enter
mov
test
hlt
jp
mov
mov
sahf
aad
sbb
mov
cmp
push
jae
movsb
add
mov
inc
outsb
push
addr16
or
inc
adc
shr
test
adc
mov
or
divb
jge
orb
fistpll
pushf
fsubrs
adc
lock
repnz
push
xchg
pop
imul
mov
std
push
sbb
sbb
repz
mov
sbb
ret
cmp
jne
lea
xor
cmp
and
inc
and
ja
nop
fwait
xchg
dec
xor
ret
imul
push
xor
jmp
ljmp
rolb
and
or
jbe
jecxz
data16
and
sub
mov
in
adc
inc
sub
or
push
push
repnz
mov
stos
pop
cmp
inc
cltd
cmpsb
aas
fstps
mov
sahf
hlt
xor
or
sbb
inc
and
out
pop
fisubl
xor
adc
inc
imul
fwait
and
fnstsw
outsb
out
push
das
jno
nop
test
mov
pop
add
scas
in
es
outsb
inc
sub
pop
insl
subb
ljmp
mov
ret
movl
test
dec
xchg
and
push
hlt
out
jne
shrb
pop
push
push
loope
and
cmp
imul
inc
xor
pop
imul
pop
xchg
mov
push
call
xchg
jbe
test
movsl
mov
jle
push
rorl
jmp
mov
ret
or
jmp
icebp
xchg
xchg
mov
nop
test
inc
mov
sub
mov
add
pop
ficoms
push
mov
mov
cmp
into
dec
xchg
jmp
jo
rorb
adc
and
or
xchg
leave
xchg
nop
jns
push
mov
in
jne
call
push
or
std
cwtl
nop
cmpsb
cmp
pop
lcall
jo
mov
sub
adc
jo
mov
push
movsl
pushf
fnstenv
fdivs
jno
das
inc
sub
out
in
cli
or
pop
sbb
sbb
xchg
adc
push
outsl
pop
aas
mov
pop
mov
mov
jecxz
or
adc
fs
pop
push
stc
outsl
xchg
adc
fiaddl
pushf
fistpll
bnd
pop
icebp
xchg
pop
jae
mov
mov
pop
jp
xchg
std
cmp
or
testl
dec
testl
in
fisubl
enter
push
in
xchg
adc
or
push
xchg
mov
in
adc
insb
sarb
mov
or
repz
add
pop
mov
scas
cmp
fwait
loopne
pop
nop
xor
gs
stc
sbb
lahf
adc
push
pusha
sbb
inc
adc
xchg
arpl
fwait
push
jge
cmpsl
sbb
lcall
lea
pop
mov
pop
and
cs
or
adc
test
fcoml
mov
pop
pop
test
xor
pop
push
cwtl
gs
hlt
ret
cmc
dec
xchg
mov
sbb
add
ficoms
and
test
xchg
out
rolb
cmp
and
test
mov
cmp
jns
pop
jl
popf
mov
inc
test
jp
outsb
mov
popf
dec
jb
push
pop
lret
into
cmp
add
cli
xchg
jle
and
xchg
pop
mov
xor
mov
sbb
pop
or
icebp
xchg
mov
out
into
in
mov
fsubrl
mov
out
call
push
mov
push
pop
in
test
inc
nop
adc
in
ss
mov
vsubpd
int3
pop
mov
cmpsb
orb
addl
inc
fwait
dec
std
lahf
fiaddl
mov
xchg
jno
xchg
rorl
sub
push
je
mov
jo
repnz
mov
ret
jbe
push
cmp
cmp
sbb
cmp
xchg
push
inc
scas
xchg
pop
pop
pop
repnz
out
inc
xchg
push
int3
jp
jg
or
dec
in
jns
xchg
neg
dec
dec
mov
dec
jp
xchg
sbb
xor
fnstcw
push
inc
sar
in
sbb
notb
lods
es
vunpcklps
xchg
mov
pop
inc
sbb
pop
sti
push
iret
ds
push
mov
mov
jmp
push
xchg
push
mov
inc
lea
cmp
jp
out
cmpsb
test
xchg
test
adc
adc
mov
sti
jle
pop
lock
imul
fwait
std
push
popa
mov
imul
xchg
and
mov
std
js
loope
jae
lret
mov
cmpsb
dec
mov
mov
mov
in
cmp
xchg
xchg
lahf
cmp
pop
push
lahf
pop
dec
xchg
mov
xchg
xchg
push
rcr
dec
dec
nop
sub
mov
inc
sbb
dec
add
ficompl
adc
into
push
push
rcll
mov
repnz
leave
add
out
mov
or
add
or
adcl
cwtl
push
out
nop
mov
cmc
clc
cmpsb
pop
dec
cltd
je
bnd
fwait
leave
cmp
adc
pop
xchg
mov
push
stos
adc
xchg
add
sbb
jbe
mov
test
xchg
sbb
ret
mov
pushf
mov
in
sub
cmpsl
cmp
adc
in
sahf
cmpl
loop
pop
movq
dec
jb
repz
pop
test
pushf
sub
cmp
gs
scas
xchg
popf
imul
insl
inc
cmpsl
ljmp
nop
inc
out
test
les
mov
test
pop
cmp
mov
and
loopne
stc
mov
mov
adc
and
jne
xchg
adc
adc
push
ss
push
orl
xor
imul
push
cmp
jo
frndint
jle
push
or
mov
adc
adc
jg
lods
add
gs
icebp
test
lock
xchg
orl
mov
loope
loopne
js
cmpl
or
mov
std
call
stos
and
inc
push
movl
inc
or
sbb
hlt
aas
jb
lahf
fucompp
jle
pop
loopne
mull
aas
stos
test
fcompl
xchg
cli
fmuls
add
jb
xchg
scas
push
cwtl
mov
xchg
xor
rorl
nop
rorb
orb
imul
es
push
lock
inc
cmpsl
ss
adc
xchg
loop
xchg
xor
add
pop
mov
bound
cmp
and
mov
sbb
push
into
or
push
sbb
xchg
fsubs
es
std
and
push
sbb
pop
lods
sub
std
fistpl
pop
xchg
inc
inc
out
push
call
jns
outsb
lahf
inc
leave
clc
pop
cmp
mov
push
xchg
aas
push
mov
repnz
lock
out
ljmp
pop
repnz
jmp
clc
adc
enter
xor
and
mov
out
inc
scas
ror
adc
cmp
bound
pminub
mov
mov
mov
or
xchg
adc
movsl
sbb
rorl
dec
insb
xchg
xchg
xchg
loopne
stc
adc
addl
ret
pop
lret
out
or
jle
clc
test
or
in
inc
pop
cmpsb
leave
xchg
xchg
mov
std
cmp
popa
jbe
pop
mov
ljmp
icebp
loop
mov
int3
cwtl
loopne
ret
jnp
repnz
adc
mov
scas
aam
add
test
pop
push
cwtl
mov
testl
or
fwait
xchg
std
pop
sti
mov
fistl
popa
leave
aaa
pop
pop
movhlps
adc
enter
sar
ds
adc
stc
mov
sub
mov
add
mov
and
test
sbb
pop
rcll
sbb
mov
nop
movsb
inc
jbe
cwtl
jno
fadd
mov
lcall
in
das
pop
cmp
outsl
cwtl
dec
xorb
neg
les
dec
adc
and
test
icebp
push
roll
clc
xchg
jns
push
pop
cmp
sbb
arpl
push
stos
pop
pop
pop
mov
cmpsb
imul
sub
jns
mov
pop
mov
jne
cld
mov
dec
push
xchg
sbb
sub
inc
adc
icebp
xchg
clc
push
jge
xchg
mov
orl
sub
dec
sub
inc
fmuls
lock
ret
cs
aam
out
packssdw
jp
push
cs
add
mov
mov
sahf
scas
je
lahf
or
fs
jnp
aad
or
mov
dec
xchg
fidivrl
clc
jmp
push
sti
fidivrl
jg
in
or
in
fiaddl
sbb
stc
fnsave
rclb
inc
test
adc
ret
cmpsl
pop
fistl
xchg
fs
je
mov
popf
pop
or
outsl
sub
fsubl
or
jg
sarb
xchg
adc
pop
mov
jl
sarl
std
aas
nop
jge
cmc
jne
cld
cwtl
pop
shlb
fmuls
mov
pushf
and
sub
xchg
shl
xchg
push
mov
xchg
ret
pop
subl
repnz
and
cmp
adc
mov
xchg
mov
cmp
jne
mov
mov
push
xchg
mov
cs
scas
fcoms
add
add
nop
xchg
mov
cmp
sub
sbb
adc
sbb
cmpsb
leave
push
dec
and
mov
mov
or
push
adc
jg
mov
std
jo
add
icebp
movsl
leave
add
sbb
adcb
pop
xor
sahf
ss
repnz
jbe
cs
mov
fistps
aas
pop
gs
cmp
dec
pop
sbbl
and
out
les
inc
or
push
aaa
iret
xchg
xchg
xchg
pop
xchg
mov
sbb
sbb
cmp
rol
fisttpl
std
pop
cltd
dec
and
jmp
mov
pop
sub
cli
ljmp
dec
pop
mov
and
fwait
inc
mov
lock
push
loopne
push
push
mul
lret
ljmp
xchg
mulb
cmp
jecxz
test
mov
test
adc
jbe
jle
lahf
xlat
lock
jbe
pop
aad
fcmovbe
clc
out
and
jo
ret
xchg
jge
outsl
xor
xor
sahf
in
or
cmp
aad
test
inc
sub
js
add
jb
sbb
xchg
and
sbb
clc
xchg
xchg
ror
les
in
in
ljmp
jbe
or
add
les
mov
ret
xchg
aas
loopne
sbb
sbb
sahf
mov
leave
inc
cmp
sbb
in
cmp
mov
mov
and
les
pop
sti
ficompl
fsubs
pop
sub
loope
xchg
mov
cmc
xchg
jne
push
es
sub
lea
hlt
rorb
cmc
xchg
loopne
es
js
mov
pop
jl
mov
inc
or
stc
mov
or
push
cmpsb
dec
xchg
cs
nop
test
cs
and
mov
dec
std
ds
or
dec
fld
sub
sbb
jmp
xchg
jle
jns
fdivr
xchg
rcll
dec
stc
add
or
inc
cwtl
das
mov
inc
fimull
sbb
sar
sub
adc
pop
xchg
std
mov
adc
fiaddl
adc
cmp
jbe
sbb
xchg
pop
testb
xchg
icebp
sub
test
or
sbb
dec
jbe
jnp
lock
jle
and
cmpb
pop
inc
xchg
xchg
jnp
xchg
adcb
int3
dec
outsl
jle
insl
cltd
dec
pop
mov
xor
fdivrs
sar
add
fucomp
neg
jge
sbb
or
das
mov
shlb
xchg
jns
stc
in
mov
cmp
bound
dec
mov
or
stc
pusha
in
fsubs
cmp
sub
inc
pusha
and
xchg
loope
je
sub
imul
repz
pop
xchg
out
in
dec
jns
aad
add
cmpsb
inc
das
push
mov
cld
scas
leave
sbb
and
sub
xchg
test
mov
push
aam
jecxz
divb
nop
roll
push
test
xchg
cmpsb
movsl
jns
adc
testl
xchg
pusha
xor
mov
idivb
ss
mov
das
ror
xor
mov
dec
pop
lret
mov
pop
fisubrl
mov
fdivrs
shl
loop
cmpsl
std
sbb
jb
pusha
out
je
or
sti
pop
fisubrl
orl
or
push
loope
nop
ja
or
cld
loope
push
push
push
dec
in
icebp
fldenv
aad
pop
adc
data16
cwtl
jno
or
idivb
fsubs
insb
mov
add
nop
fcmovbe
mov
and
outsl
bndldx
adc
adc
fstps
jb
call
adc
cwtl
test
scas
insl
ja
xchg
xchg
adc
enterw
cld
mov
ficoms
mov
popa
add
es
rolb
mov
mov
push
jo
pusha
popa
push
mov
mov
xor
mov
xor
cmpsb
push
mov
jo
pusha
or
orb
roll
sbb
dec
fwait
out
cmp
pop
mov
sbb
adc
adc
outsb
sbb
pop
outsl
cltd
dec
and
bound
mov
mov
inc
push
push
xor
dec
dec
mov
jns
push
stos
jns
push
add
jns
test
stc
push
je
dec
jo
negb
imul
mov
xchg
aaa
je
pop
cs
movsl
lods
enter
in
fwait
outsl
sbb
ret
bound
push
mov
pop
clc
dec
sub
sub
pop
scas
xchg
test
jne
mov
sbb
dec
pop
lock
mov
in
mov
lea
orl
add
sbb
xorl
in
lock
lods
xchg
xor
xlat
nop
movsb
mov
pusha
scas
mov
mov
loope
dec
fcomi
js
test
imul
push
or
les
inc
or
xchg
stc
jnp
jae
repnz
mov
mov
or
movl
into
jne
into
sbb
xchg
mov
mov
enter
push
scas
in
pop
push
jns
pusha
bound
jb,pt
pop
rclb
fcmovu
ljmp
movsl
push
pusha
xchg
xor
fistps
and
enter
xchg
in
leave
int
dec
jge
stos
xchg
adc
xchg
fisttpl
inc
lods
or
lret
rolb
add
iret
push
dec
or
xlat
data16
ret
push
mov
call
decb
sarl
push
movsb
lds
pop
inc
add
push
lds
dec
dec
imul
mov
jae
adc
mov
in
or
pop
cmp
add
shlb
in
fiaddl
mov
fsubrp
add
inc
and
cs
lea
outsb
cmp
adc
test
pop
add
mov
mov
pop
andl
jb
xchg
scas
enter
callw
ja
cmpsl
pusha
js
cld
add
leave
addl
test
sbb
dec
jmp
into
pause
cltd
add
ss
into
aas
roll
adc
out
xor
rorb
fistpl
lret
sub
test
scas
cmp
in
xlat
mulb
mov
repnz
jne
aas
xorb
idivl
push
stc
xchg
mov
std
fdivp
cwtl
push
jns
mov
xor
mov
les
dec
jp
out
in
pop
jl
stos
cmc
add
push
jb
pop
mov
xchg
adc
iret
btc
xlat
into
dec
mov
fadds
decb
push
and
xor
aad
gs
xchg
daa
popa
popf
aad
jmp
sbbb
out
mov
gs
sti
fwait
aas
lods
sub
pusha
sbb
dec
mov
fs
mov
push
dec
push
sti
xchg
negb
inc
jge
sbb
xlat
jns
inc
sub
into
push
out
sbb
jmp
jmp
cmp
out
imul
and
cmp
fidivrl
cmp
mov
in
jbe
pop
repnz
cmp
xor
xchg
shll
sahf
fwait
xorl
jns
mov
scas
movsl
sbb
outsl
out
out
mov
cli
mov
outsl
xchg
xorl
mov
xchg
lods
push
into
ljmp
add
sbb
pop
sbb
ret
push
filds
or
shlb
inc
loop
popf
mov
std
ret
clc
inc
lds
push
jmp
test
das
je
and
leave
add
push
add
ret
out
cli
nop
or
adc
call
cmp
clc
xlat
mov
mov
xchg
ja
je
pusha
loop
pop
push
jns
mov
cmpsb
push
int
inc
add
xchg
pusha
xchg
push
cmp
cltd
shrb
push
inc
inc
sbb
sub
inc
sub
pop
push
adc
cmpsb
addl
es
lret
lock
xchg
xor
test
mov
pop
xchg
dec
mov
std
mov
push
mov
sar
aam
mov
mov
pop
xor
dec
inc
sti
inc
stos
mov
out
movsb
add
outsl
add
or
push
mov
xchg
std
xlat
js
push
fildl
aaa
or
sbb
mov
pop
jle
enter
dec
add
in
push
push
addb
inc
mov
call
mov
fwait
mov
adc
fsubl
push
mov
in
addr16
jge
push
jbe
adc
push
cwtl
sbb
jecxz
fstl
fsubrl
imul
loopne
xlat
leave
or
xchg
fildl
dec
test
flds
jbe
jle
adc
jno
pop
fadds
sbb
mov
scas
inc
xor
or
mov
cmp
cmp
sarb
rorb
xor
mov
inc
jne
jns
pop
pop
loop
xchg
les
les
notb
xchg
dec
ret
sbb
clc
pop
jle
push
push
and
xor
roll
xchg
sub
jns
jo
aad
hlt
test
js,pn
sarb
add
fcoml
xor
pop
fldl
or
nop
mov
dec
adc
lock
clc
cmpsb
sub
cwtl
or
mov
pusha
insl
or
dec
loop
mov
mov
rolb
or
jg
jl
cmpsb
mov
divb
fsub
mov
pusha
dec
cltd
fdivs
adcb
std
push
adc
incb
roll
dec
mov
pop
jb
xchg
outsb
cltd
adc
jp
sahf
push
lock
mov
adc
jp
sbb
pusha
jae
cmp
jo
loop
pshufw
repnz
xchg
jl
or
cmp
mov
in
cmpsb
icebp
les
add
sub
adc
mov
jge
popf
jge
pop
xchg
push
fsubs
xchg
dec
fstpt
orl
fucomi
repnz
inc
fcmovnbe
push
adc
aad
fstpt
add
fdiv
push
jns
mov
add
jns
adc
add
fwait
addl
or
jle
rclb
inc
cmp
lods
pop
push
les
cwtl
adc
or
and
xchg
xchg
xchg
sbb
sub
stc
clc
lock
push
in
pop
es
aad
push
xor
jns
pop
xchg
clc
lock
hlt
push
rolb
pop
pop
or
jle
data16
hlt
mov
aad
loop
pop
mov
add
mov
jae
add
xchg
jnp
data16
and
psubusb
nop
movsl
loope
jb
xchg
test
clc
push
aad
push
loop
pop
fdivl
or
push
cmp
mov
dec
test
xchg
pop
out
repnz
das
leave
loopne
dec
adcl
cwtl
lret
aad
and
mov
lock
mov
ficoml
dec
test
jnp
push
ljmp
adc
test
sub
mov
adc
mov
imul
dec
push
leave
xchg
aaa
iret
xchg
push
pop
xchg
cmc
inc
push
pop
ret
mov
pop
hlt
adc
mov
sub
dec
nop
inc
lret
mov
mov
adc
mov
and
push
cmpsb
lahf
repnz
sub
dec
test
stos
fcoms
sub
mov
scas
mov
xchg
mov
add
ret
mov
test
testl
xchg
cmp
cmp
mov
mov
inc
ds
ret
and
xchg
adc
sbb
pop
mov
aas
addr16
xchg
push
es
inc
xchg
or
inc
or
push
cmp
mov
cmp
lock
ds
sbb
cmp
pushf
nop
xor
lahf
inc
loopne
pop
loope
mov
inc
mov
out
decl
mov
dec
orl
les
cmp
adc
mov
fadds
or
cmp
sbb
inc
out
mov
xchg
iret
xchg
jge
in
call
jle
imul
push
adc
add
add
push
aam
cmpsb
mov
ljmp
cmp
jno
out
push
andb
ficoms
pushf
jno
aad
mov
push
icebp
repnz
push
in
test
cmp
xor
outsl
mov
idivl
icebp
and
repz
rorb
pop
mov
add
test
mov
push
nop
js
push
cmp
ret
outsl
popf
scas
jo
nop
pop
push
push
jns
dec
fisubl
adc
mov
mov
push
adc
loopne
xchg
imul
jns
rclb
nop
pop
mov
xchg
cwtl
xchg
sahf
mov
jae
out
cltd
fcomi
jmp
test
push
jnp
sbb
in
and
cmp
sbb
or
and
push
out
out
pop
pushf
jb
paddd
mov
repnz
add
mov
jle
clc
sbb
cmp
xchg
in
int
push
xchg
mulb
out
loopne
mov
mov
int
je
ret
or
xor
push
mov
xchg
jl
fdivrs
pusha
or
and
leave
cltd
shll
les
and
mov
clc
fisubrs
fidivrl
dec
pop
orl
pop
xchg
std
cmp
pop
sub
js
sub
push
or
dec
popf
pusha
sar
jne
mov
iret
popf
sub
fsubs
xchg
jmp
push
sbb
sub
xchg
pop
add
cwtl
cmp
leave
inc
jmp
das
jmp
sarl
cwtl
dec
out
shl
lea
dec
sub
mov
xchg
testl
shl
mov
pop
cmc
mov
lret
orl
and
cmp
scas
fwait
mov
add
cmp
aas
cltd
pusha
mov
pop
pushf
pusha
adc
in
push
pop
push
loopne
cld
lea
inc
adc
dec
rclb
das
cmpsb
add
fcoms
loope
xor
mov
int
aam
add
test
mov
test
clc
pushf
push
add
push
or
and
es
adc
jp
ss
dec
fcompl
cli
adc
mov
scas
fwait
nop
xlat
je
ficoms
montmul
cmpsb
ret
cmp
mov
adc
lock
cmp
int3
sub
in
test
jb
sub
mov
ret
push
push
notl
xchg
push
mov
xchg
push
enter
dec
fstpl
pusha
adc
mov
adc
jle
fists
shrl
push
sarb
arpl
outsl
neg
or
stos
adc
xchg
cltd
push
fstps
std
or
dec
or
xor
call
dec
xchg
nop
iret
or
and
xchg
adc
cmpsb
int3
not
push
ss
jb
or
mov
pusha
sub
pop
cmc
xchg
xchg
jnp
or
adc
movsl
mov
or
mov
bound
shr
lret
adc
adc
mov
or
lock
xchg
push
xchg
shlb
addl
mov
repnz
rcrb
addl
pusha
cwtl
xchg
pushf
shlb
mov
sub
xchg
sahf
sarl
add
fwait
aas
fmul
pop
out
add
xchg
aad
mov
outsb
int
xchg
lcall
mov
dec
mov
jge
fldcw
cmp
adc
pop
decl
sbb
sbb
jo
xchg
xchg
push
rcrb
cmpsb
push
out
scas
push
push
jbe
test
or
xchg
mov
mov
sbb
inc
mov
out
pop
push
stos
xchg
andb
ja
adc
insb
xchg
lods
jp
pop
jo,pt
out
rclb
jae
dec
mov
loope,pt
xchg
repz
mov
cmp
pop
repnz
push
fidivl
mov
mov
test
fstpt
jecxz
fcmove
dec
push
fisubl
inc
insb
repz
jbe
ljmp
dec
stos
dec
insb
push
xchg
adc
add
cmpsb
iret
iret
int3
push
jo
xchg
mov
cwtl
and
adc
mov
dec
sbb
rcr
les
cld
mov
pop
adc
arpl
jne
shr
mov
pop
pop
xor
int
xchg
mov
xchg
adc
pop
xor
mov
cs
push
mov
test
mov
xor
and
pop
xor
xchg
or
cld
mov
push
addr16
lea
adc
movl
outsl
or
and
cmpsb
sub
adc
sbbb
jne
push
mov
sub
sbb
out
in
push
pop
fcoml
shrb
mov
test
js
and
add
in
shr
pusha
leave
mov
mov
fadds
sahf
std
push
adc
js
aaa
stc
clc
inc
xchg
imul
dec
adcl
cmp
push
pusha
and
mov
addr16
xor
jns
ds
pop
pop
push
out
mov
push
stc
lock
cld
dec
xchg
shrb
nopl
std
and
ds
or
clc
cmpl
inc
mov
mov
xlat
js
dec
test
mov
cmp
add
test
xor
or
and
lret
inc
aas
xor
xor
insb
jno
rolb
fidivrl
add
rol
loop
xchg
cmp
pop
pop
sub
mov
mov
imul
sub
jbe
inc
push
inc
add
sub
jb
out
orb
add
xor
xchg
cmc
in
push
mov
aas
cmpsb
mov
ret
insb
mov
push
jno
mov
int
in
lea
jp
mov
cwtl
pop
mov
mov
stc
rolb
and
pusha
nop
adc
sbb
orl
cwtl
orb
lahf
mov
int
cltd
xchg
shl
pop
ret
movsl
bound
dec
in
pusha
pop
jo
or
fwait
shll
stos
mov
scas
dec
mov
dec
lcallw
mov
pop
pop
js
sarl
or
push
out
jb
push
addr16
std
sbb
mov
mov
pop
ret
fisubl
cltd
pop
out
fwait
outsb
adc
out
mov
sbb
outsl
lea
push
adc
rorb
add
stc
xchg
jae
mov
cs
pop
inc
fwait
rcl
inc
pop
ds
mov
notl
dec
sub
imul
adc
push
dec
les
sbb
ss
outsl
cmp
cmp
pushf
and
xor
out
adc
xchg
cltd
adc
mov
mov
test
or
inc
jbe
shll
loopne
add
xchg
rorb
faddl
test
sub
add
adc
push
xchg
repnz
shll
ds
cmp
add
imul
cmpsb
in
in
fwait
ror
cmp
xchg
and
inc
and
xor
xchg
inc
sub
cmpsl
mov
sbb
ss
sarb
adc
aam
adc
cmpsb
mov
js
push
scas
addb
mov
adc
mov
sbb
mov
pop
jae
out
shll
inc
push
mov
adc
push
pusha
mov
push
fwait
hlt
mov
repz
fadds
fucomp
mov
cmpsb
jo
inc
stc
push
lods
push
sub
sbb
orb
and
nop
pop
idiv
popf
add
mov
scas
add
add
scas
push
add
and
fdivs
pushf
or
lods
arpl
cmpsl
mov
mov
pop
pop
movsl
inc
cmpsb
xchg
pusha
jo
dec
inc
mov
test
pop
or
divl
pop
dec
add
rclb
adc
mov
test
mov
or
sbb
sbb
push
lret
test
xchg
in
fld
lock
fcomp
rclb
pop
mov
nop
fidivrl
mov
stc
xchg
add
cmpsb
cli
or
jl
push
test
jecxz
mov
push
fadd
sbb
fwait
nop
aas
pop
mov
push
jbe
jns
in
mov
cmp
push
scas
or
into
sub
in
mov
jno
mov
sbb
add
xchg
sub
insb
add
pop
inc
jns
rorb
out
xchg
add
ss
insl
insb
push
lods
jl
cltd
das
repnz
aas
xchg
xor
icebp
nop
repnz
das
push
bound
fs
in
add
cltd
rolb
loop
cmc
lea
cmpsb
sub
shrl
das
mov
or
adc
pop
fsubp
cwtl
mov
cmpsb
push
movsl
mov
adc
mov
sub
push
mov
lcall
lods
sbb
push
or
pushf
dec
mov
mov
fwait
jge
mov
sbb
jne
es
sbb
xlat
cmpsl
testl
mov
neg
into
mov
adc
je
scas
arpl
and
adc
xlat
loope
cmpsb
loopne
pusha
fcmovbe
je
mov
cmpsb
aas
popf
xchg
mov
clc
jmp
dec
jmp
stc
push
adc
mov
aad
sarl
mov
kmovb
bound
mov
jo
or
leave
loopne
push
push
jo
sub
dec
push
cmc
mov
out
lahf
jp
fistps
xchg
pop
sbb
cwtl
mov
bnd
call
cmc
mov
pop
cmp
dec
lods
xchg
in
dec
addb
xchg
cmp
mov
sub
fnsave
adc
push
add
out
test
popa
adc
mov
fdivs
mov
imul
insb
pop
aaa
jne
cmp
jl
mov
jle
dec
adc
aad
out
sub
fisttps
push
adc
cli
shl
mov
xchg
xchg
repnz
mov
mov
adc
xchg
mov
jmp
sbb
mov
mov
test
pop
mov
mov
xchg
xor
test
jge
lahf
or
and
push
test
xor
dec
test
cmpsb
loope
and
xchg
popf
les
sti
xchg
push
movsb
xchg
sbb
dec
cmp
xor
xchg
add
xchg
aaa
not
xor
and
test
addr16
adc
arpl
sbb
mov
repnz
cmpsb
inc
add
insl
shlb
imul
cs
lret
or
pop
add
mov
pop
cwtl
popf
mov
add
inc
and
or
push
fwait
cltd
ja
push
add
rcl
jne
xlat
jb
add
mov
pop
das
ja
push
int3
sbb
sub
ret
fbld
shll
lods
std
push
jbe
lods
js
addb
int3
mov
or
mov
pusha
jle
pop
dec
mov
add
xchg
add
sbb
mov
jns
repnz
clc
add
or
or
testb
test
sbb
out
lods
jge
test
adc
sbb
hlt
sbb
outsb
fmuls
add
push
dec
pop
inc
enter
sub
aad
pop
int3
jns
out
adc
adc
scas
fcomi
loop
dec
lahf
fcoms
pusha
or
add
mov
xchg
xchg
lret
cwtl
rolb
xchg
jmp
shrb
div
ret
idiv
xchg
in
pop
orb
mov
adc
or
dec
mov
mov
hlt
jnp
test
mov
icebp
aad
insl
inc
pop
adc
in
cmp
inc
adc
or
jnp
sbb
mov
cmpsl
or
fiaddl
sub
test
cmp
data16
sbb
mov
mov
add
test
xchg
sbb
sub
xchg
fcmovu
mov
mov
jge
xchg
push
inc
mov
dec
int3
xchg
out
mov
fisttps
jnp
adc
sbb
push
in
pop
push
lods
shr
test
ret
adc
nop
fistps
test
cmp
xchg
loopne
out
sahf
jg
aad
nop
jb
inc
dec
aad
mov
inc
xchg
adc
inc
orl
or
mov
aad
xchg
adc
pusha
pusha
push
scas
cmpsl
push
dec
push
jnp
pop
push
sarb
xchg
mov
pop
call
xchg
out
cmp
jle
sbb
rorl
js
add
pop
push
inc
and
pop
lods
icebp
insb
cmpsb
into
rcrl
fwait
mov
es
mov
movsb
and
mov
outsl
imul
push
mov
lods
mov
scas
int3
leave
jne
add
in
push
xchg
fstps
fldl
js
mov
inc
jp
cmp
dec
test
inc
jo
pushf
adc
movsb
punpckhdq
loope
mov
fisttpll
subl
adc
loopne
sbb
sarl
sahf
jb
pusha
cmc
pop
pop
adc
iret
hlt
adc
sub
mov
incl
loope
push
call
subl
and
ss
pushf
hlt
shrl
mov
cld
push
daa
clc
xchg
scas
lret
aam
add
aaa
pop
fimull
push
mov
sbb
add
add
sbb
out
shll
mov
in
jne
mov
das
rolb
push
rol
test
daa
pop
mov
cltd
push
xchg
mov
mov
into
sub
jbe
pop
mov
ror
mov
sbb
out
pop
or
push
pop
xchg
xchg
aad
pop
test
das
out
adc
mov
sbb
loopne
loop
mov
jmp
ficomps
testb
cmc
mov
stos
or
fwait
mov
in
mov
shr
adc
push
mov
jnp
push
mov
test
insl
testl
mov
mov
aaa
ss
idivb
push
add
pop
fdivs
mov
add
dec
cwtl
pop
push
arpl
nop
repnz
stos
pop
cmpsl
jl
pop
lock
sarb
cmp
xchg
out
jmp
jle,pn
loopne
ds
ss
mov
dec
into
fcomps
stc
fisttpll
mov
call
xor
and
or
psrlq
mov
or
xchg
mov
xor
cmpsb
out
push
xchg
push
div
fisubs
fdivl
aad
cmovg
push
out
and
mov
cmc
adc
repnz
ss
leave
sbb
out
pusha
fcompp
cmpsb
xchg
mov
rorl
xor
mov
mov
jb
andl
and
cmp
and
xlat
push
pop
push
or
pop
inc
xor
cmp
mov
sbb
in
or
sti
inc
gs
loop
loop
xor
mov
fstpl
push
pusha
mov
cmp
pusha
xchg
mov
jo
orb
mov
mov
add
outsl
mov
mov
fistps
fstp
imulb
pop
cmp
rcll
ficomps
test
jne
inc
cwtl
mov
xor
pop
cwtl
mov
cmpsl
xor
lret
cmp
inc
testb
jb
mov
cmpsb
or
pop
xchg
inc
loopne
jmp
or
shll
icebp
mov
push
in
loop
loopne
jmp
mov
loopne
push
call
in
mov
xchg
xchg
dec
outsl
dec
rorb
mov
mov
sub
jmp
lods
cmp
ja
loopne
sbb
mov
adc
pop
pop
or
push
cmpsb
scas
lock
push
jp
sub
jbe
add
sqrtps
mov
mov
inc
orb
jnp
sbbb
lahf
shlb
fnstenv
add
outsb
test
jmp
in
pop
mov
xchg
or
add
loope
jmp
in
push
not
insb
fdivrs
fadd
jns
xchg
test
xor
call
xchg
jo
mov
sub
mov
loopne
rcrl
mov
jo
faddl
adc
add
inc
mov
hlt
in
lea
xchg
mov
adc
xchg
js
dec
fisttps
pushf
push
mov
lcall
pop
test
adc
jo
and
andb
dec
out
mov
sbb
repz
and
fcoms
lds
or
and
repz
jp
mov
pop
sub
insb
mov
mov
mov
xorb
inc
or
inc
std
xchg
jns
gs
aas
sub
insb
sub
mov
push
pop
push
arpl
popf
xchg
sbb
adc
out
sub
pop
and
xchg
test
xchg
mov
inc
jb
xor
xchg
outsl
js
xchg
cmp
flds
mov
stc
in
mov
fdivp
adc
mov
aam
and
test
push
shll
popa
into
dec
push
mov
push
pop
cld
movsb
fwait
or
in
xor
lds
mov
xchg
and
int3
mov
cltd
inc
jbe
cmpsb
hlt
ds
popw
push
ficomps
nop
pop
mov
test
cmp
jns
aad
stos
push
aad
loop
pop
mov
push
jle
fwait
push
out
or
jge
sub
and
es
loope
adc
cwtl
and
repnz
mov
mov
or
pop
cwtl
mov
repz
in
imul
cmpsb
adc
cmp
sub
std
movsb
push
and
inc
xchg
stos
or
orl
jno
ljmp
jne
lods
leave
ja
fisubrs
cmpl
adc
shr
adc
fwait
cwtl
sbb
das
xor
mov
sbb
pop
add
cmp
push
push
enter
push
and
shrl
mov
push
das
push
xor
rorl
mov
mov
add
mov
outsb
sub
in
aad
pop
fildl
dec
push
movsl
fidivl
aad
lea
xchg
fisubl
cmc
sbb
add
stc
jg
stos
js
jb
cld
cwtl
sarl
dec
xor
test
cmp
rcrl
jle
sub
test
xchg
scas
mov
lahf
fadds
xchg
popa
xlat
xchg
test
cld
xchg
insl
les
out
sahf
sub
movsb
and
mov
into
aas
lock
jns
outsb
cmp
mov
shlb
js
pusha
sub
add
leave
test
push
pop
dec
dec
out
aad
pop
pusha
test
adc
xchg
mov
mov
ds
inc
sbbl
xchg
sub
pop
daa
loopne
call
or
or
push
fcomi
sbb
xchg
fimuls
cmp
mov
in
in
inc
push
mov
jmp
ja
mov
xor
loopne
mov
inc
ret
mov
fdivrs
cmp
std
aas
lret
pusha
push
add
test
push
mov
inc
cmp
sbb
in
call
jns
scas
pop
pop
jecxz
das
push
xlat
pop
xchg
loopne
add
inc
inc
push
sub
repnz
shrl
and
add
inc
mov
xor
dec
inc
inc
xchg
mov
repnz
inc
add
adc
pushf
pop
movsb
cmc
mov
fiadds
cmpsb
push
lods
add
xor
je
mov
xchg
or
and
mov
fsubs
pushf
push
dec
mov
mov
mov
sbb
xor
insl
or
aad
outsl
rcl
cli
addb
inc
mov
sti
icebp
outsb
inc
xchg
cwtl
mov
stc
repnz
insb
fwait
test
std
adc
mov
insb
repnz
mov
jb
sarb
lcall
xchg
mov
sbbb
mov
mov
jle
pop
stos
movsb
mov
adc
dec
jmp
pop
cmc
sbb
mov
push
or
jl
push
test
hlt
adc
es
lock
xchg
xchg
mov
repnz
push
call
aad
mov
out
rclb
test
pop
mov
or
mov
in
dec
xchg
xchg
adc
fcoms
mov
mov
adc
and
xor
mov
sub
mov
pop
jb
cld
sbb
out
sub
cli
rcr
jg
js
mov
xchg
xchg
hlt
xchg
mov
fmuls
push
fmull
adcb
mov
fcmovnbe
mov
test
inc
and
pop
add
push
and
add
cmpsb
sbb
icebp
clc
xchg
push
sbb
mov
das
dec
cmp
repz
repz
push
xchg
call
shlb
repz
loop
mov
sub
sub
pusha
xchg
in
test
mov
ja
imulb
jp
ret
movsb
mov
std
mov
out
mov
xchg
and
mov
pushf
pop
jno
imul
jns
pusha
push
rcll
insl
inc
out
out
or
dec
add
push
testl
add
jle
mov
leave
pop
fnsave
imul
mov
xchg
xchg
push
fcmovu
cmpsb
xor
lahf
xchg
mov
mov
leave
out
xchg
fdiv
out
dec
xchg
pop
stos
pop
inc
fcom
mov
cmp
mov
and
fcompl
xchg
mov
sub
cld
in
cmp
repnz
push
imul
xchg
and
sub
mov
cwtl
repz
mov
imul
fmull
or
lret
push
ja
out
mov
xchg
and
pop
dec
pushf
add
cmp
push
add
lock
out
xor
push
mov
push
outsl
ljmp
into
das
insl
sbb
leave
mov
jno
jbe
in
push
shl
cwtl
rcll
mov
mov
jbe
adcb
lahf
mov
sbbb
sbb
shrb
nop
jns
or
gs
push
or
orl
xor
icebp
mov
lods
and
ds
add
jle
push
add
in
mov
inc
push
mov
adc
jnp
adc
mov
les
cmpsb
jg
sarb
push
push
xor
movsb
mov
popa
mov
sbb
cmp
popa
lcall
cmpsb
pop
aad
jb
jae
js
jnp
jmp
xchg
fs
setbe
out
dec
push
lahf
mov
jns
pusha
sahf
mov
popa
fdiv
mov
nop
fnsave
cmp
mov
pop
xor
cwtl
inc
je
ret
scas
and
jo
cmpsb
out
adc
mov
in
clc
les
push
cmpsl
outsl
mov
jp
stc
pusha
loope
out
aad
imul
adc
jmp
mov
and
or
jbe
mov
loope
imul
divb
xchg
or
and
leave
out
jns
in
mov
mov
add
leave
adc
xor
xchg
ss
fildll
push
xchg
pushf
repnz
add
sub
loope
dec
or
ss
popf
sbb
ret
jae
stos
jle
dec
jp
sbb
adc
cwtl
pusha
and
ljmp
cmp
nop
std
popa
clc
mov
arpl
out
leave
in
xor
mov
mov
in
sub
jno
cli
lahf
hlt
aad
pop
push
fbld
std
xor
sub
mov
pop
into
jp
rcl
andl
pop
into
mov
int
and
mov
in
lret
mov
outsb
xor
in
fwait
std
mov
xchg
mov
fcmovu
cmpsl
pop
rcrb
or
dec
jns
or
pop
sarl
subb
lret
dec
adc
mov
ss
int3
mov
adc
jp
iret
clc
or
add
arpl
push
adc
addb
jae
ficoml
adc
xor
and
test
jg
dec
and
xchg
inc
dec
mov
minps
cmpsb
sbb
pop
jns
xor
xor
cwtl
adc
jo
xchg
xchg
ljmp
adc
aam
and
xchg
or
in
xchg
pop
pusha
xchg
lahf
fcmovbe
push
adc
cld
sub
jl
jb
mov
ss
mov
xor
adc
lcall
std
popa
repnz
dec
cmp
sbb
aas
mov
pop
pop
std
mov
int3
addl
mov
pushf
add
ficoml
jno
mov
pop
inc
fbld
notb
subb
dec
imul
data16
xor
push
fadds
pop
xor
push
jae
shll
les
int3
stos
cwtl
sbb
and
or
sahf
push
mov
pop
nop
mov
ret
jmp
inc
mov
xchg
push
mov
xchg
andb
mov
popa
xchg
push
mov
pop
and
andb
notb
or
shll
out
popf
or
je
jge
ret
and
std
push
and
push
mov
jb
scas
out
push
divb
jmp
in
out
mov
sbb
push
mov
cs
mov
scas
push
mov
js
sarl
push
xchg
and
jns
xchg
and
mov
add
enter
adc
add
movsl
les
sahf
push
inc
pop
pop
shll
and
loope
adc
in
std
cmpsb
and
jge
xchg
pusha
clc
iret
icebp
adcl
pusha
mov
lea
sub
sbb
shrl
mov
lods
lds
xor
mov
sti
int3
jns
scas
pusha
call
stc
in
or
es
mov
je
movsb
in
mov
out
mov
out
push
sahf
std
cli
and
xor
and
aad
je
and
cmpsb
nop
das
or
xor
pushf
nop
jae
pop
adc
push
aad
out
int
insb
inc
mov
lock
ljmp
shll
xor
sub
and
popa
push
push
subb
je
or
cli
insl
cltd
adc
ja
push
add
ret
dec
xor
mov
push
mov
mov
push
movsb
mov
bound
jo
mov
push
mov
xor
cltd
mov
notl
test
cs
cmp
lods
clc
cmp
add
push
push
and
ficoms
imul
or
in
mov
lods
nop
mov
outsl
jbe
add
push
and
je
stos
sub
out
fmull
lret
mov
mov
xchg
stos
insl
dec
sub
aad
and
push
mov
fidivrl
popf
push
sbb
push
jb
push
pop
jmp
ret
pushf
push
sbb
ret
sbb
dec
dec
cmp
xor
adc
mov
rcr
sub
push
sub
in
push
sub
pop
cmp
xlat
out
mov
or
insl
mov
shlb
cmp
std
fnstenv
or
mov
and
enter
pop
push
cmpsb
scas
loopne
call
fnstenv
mov
call
jp
mov
test
pop
repz
jge
or
dec
xchg
ja
xchg
repnz
inc
pop
mov
adc
cmc
jae
cmp
ficoml
xchg
xchg
jbe
jb
lret
or
pop
rorb
lcall
jp
ja
push
mov
rolb
jecxz
push
cmpsb
test
inc
xchg
mov
push
hlt
hlt
mov
lret
jb
mov
mov
adc
aas
jo
mov
jmp
xchg
fldenv
cwtl
push
std
negb
jle
adc
sub
testb
fidivrl
adc
cmp
pop
xchg
push
add
pushf
mov
mov
adc
cmp
nop
add
jb
xchg
addb
lock
sub
cmpsb
js
out
in
mov
test
aad
and
out
lods
hlt
jne
xchg
enter
mov
and
insl
popf
rcr
test
out
clc
inc
in
add
cmp
xchg
in
daa
jns
mov
push
lea
test
lret
mov
subb
adc
sti
jb
mov
add
js
add
push
addr16
inc
in
mov
xchg
sbb
dec
xlat
fadd
stc
ficoml
mov
dec
adc
cwtl
rorb
lods
mov
add
lret
jno
aam
aad
pop
sti
cmpsl
cmpsl
lea
xorb
add
mov
sbb
lock
pop
sbb
cmpl
cmp
adc
shr
subb
repnz
or
sbb
mov
add
cld
fsts
inc
sub
jle
pop
ljmp
pop
cmpsl
test
loope
xchg
cmpsb
in
mov
insl
mulps
fsts
xor
or
pop
xor
ret
rorl
fisubs
cli
jbe
mov
jae
inc
nop
and
sbb
rclb
mov
xor
in
cmp
mov
xchg
hlt
ja
cmp
jge
das
and
aas
or
ret
xlat
jbe
xchg
mov
pop
sbb
xor
insl
mov
xchg
rcll
aas
movups
inc
inc
stos
cmp
xchg
xchg
add
icebp
sbb
push
mov
jge
adc
sarb
jg
xchg
fwait
pop
ficompl
imul
arpl
xchg
popa
xchg
pop
sbb
push
adc
pop
lcall
repz
xchg
adc
sub
icebp
pop
add
add
xchg
mov
add
cs
sbb
loope
shrb
cs
out
repnz
mov
lock
jno
lods
daa
adc
cmpsb
mov
pop
mov
dec
scas
mov
push
sahf
cmp
mov
or
aas
lock
dec
imul
pushf
xorb
fnstenv
cltd
pop
adc
leave
jo
ja
add
incb
loopne
xchg
hlt
push
bound
cmpsb
fs
inc
mov
fstps
cmpsb
jae
mov
and
pushf
shr
insl
and
xchg
cmpsl
sbb
lock
call
mov
xchg
insb
mov
orl
mov
or
jmp
dec
outsb
push
lret
inc
adc
add
pop
cwtl
cli
test
jbe
cmpsb
mov
out
mov
bound
sbb
add
push
push
mov
and
lahf
push
popa
cmpsl
push
xchg
out
xchg
addr16
js
xchg
adc
or
fucomip
adc
sbb
imul
mov
dec
adc
xchg
jns
pusha
ja
jl
cmpsb
cmp
xchg
loopne
xorb
push
xchg
fidivl
and
sbb
es
fwait
pop
nop
in
js
lea
sbb
scas
mov
push
mov
movsb
loopne
cs
pop
insl
test
push
lods
arpl
mov
xor
cltd
push
lock
in
test
outsb
and
adc
jmp
into
cmc
js
cmpsb
lea
push
test
pop
out
cmpsl
repnz
adc
out
cltd
mov
fcoml
xchg
stos
pop
xchg
xor
push
pop
cwtl
ret
sbb
out
sbb
fstps
lea
dec
test
adc
mov
mov
xor
mov
sbb
jne
insl
es
mov
adc
xchg
jb
inc
mov
pusha
jns
and
mov
call
mov
pop
pop
mov
addb
cmpsb
outsb
rcll
out
jae
mov
dec
test
jmp
mov
fisttpll
test
fldcw
cmpsb
pop
pop
and
out
andb
pop
inc
and
xorl
sti
cwtl
sarb
mov
out
xchg
cmpsb
mov
movsb
sti
push
bnd
or
or
jl
adc
and
hlt
or
clc
fadd
outsl
sbb
icebp
jmp
sbb
pop
jnp
mov
push
fnstsw
pop
xchg
jmp
cmp
dec
repz
pop
psubsb
cmp
mov
adc
xchg
inc
sub
orb
iret
mov
mov
fnstcw
cli
add
aam
out
scas
in
mov
test
adc
push
movq
adc
xchg
cmpsb
arpl
and
into
cli
jnp
mov
or
movsb
adc
pop
andb
sbb
xchg
sbb
push
push
xchg
jne
mov
test
push
and
cwtl
cmp
movsl
xchg
fwait
adc
jb
mov
pop
outsb
stos
loop
fst
dec
xchg
stc
cli
mov
es
xchg
jp
jl
mov
add
dec
cld
add
pop
jae
outsw
lds
clc
and
xchg
insl
loopne
pop
mov
adc
xchg
add
cs
jl
aam
es
adc
xchg
and
sub
nop
es
or
cwtl
je
xchg
and
jp
pop
clc
cwtl
pushf
dec
push
add
testb
lret
cwtl
dec
popa
pop
inc
outsb
out
xchg
add
push
and
aad
sbbb
outsb
xchg
jo
loopne
imul
push
shll
into
cmpsb
add
andl
add
xchg
or
fcoml
jp
adc
aaa
sahf
aaa
pop
pop
xchg
adc
push
sarb
jnp
hlt
insl
jb
test
xor
and
dec
sub
mov
sub
jecxz
dec
in
inc
cmpsl
cli
adc
mov
dec
push
stos
mov
inc
jns
scas
sbb
xchg
bound
mov
push
mov
mov
jecxz
in
les
fstpl
dec
mov
push
cmc
dec
fcompl
clc
jnp
mov
nop
pusha
nop
jmp
cmpsb
iret
pop
sbb
dec
jle,pn
stc
push
cmpsb
inc
popf
or
notb
jecxz
sbb
push
push
iret
cmp
cmp
cmpsb
jo
shr
mov
out
ss
fidivl
xchg
cmp
jle
clc
jno
pop
cli
lret
fidivrl
lret
out
jbe
stos
cltd
lds
pop
xchg
pusha
pop
mov
mov
sub
into
lret
cmpl
push
out
mov
lea
push
movsb
popa
call
jns
aam
loopne
mov
xchg
cmp
lea
es
cli
mov
mov
es
in
and
dec
adc
aad
jbe
testl
lea
aad
pop
and
mov
xchg
adc
dec
int3
push
push
and
dec
sbb
mov
jp
movsl
fsubrs
push
pop
lock
popf
fdivs
popa
mov
inc
pop
sbbl
scas
inc
mull
fadd
ret
nop
cwtl
mov
or
jge
sbb
loop
add
xchg
and
aas
mov
jns
xchg
adc
lcall
or
mov
fidivrs
mov
movsb
cld
push
mov
mov
test
xchg
mov
movsb
aam
cmc
lret
sub
mov
cwtl
xlat
dec
cmpsb
mov
jl
pusha
mov
daa
sbb
loop
or
sub
xchg
mov
or
sbb
mov
ret
mov
enter
adc
imul
add
mov
push
ja
arpl
clc
sub
sub
nop
std
mov
push
test
push
out
ss
push
jne
xchg
sub
mov
mov
ss
fs
es
ja
jp
ljmp
in
pop
loop
in
call
loopne
push
mov
pop
icebp
jmp
mov
loope
sbb
roll
cltd
scas
into
add
mov
fwait
xchg
xchg
mov
hlt
push
cmc
into
mov
mov
int
int
je
mov
imul
arpl
test
xor
fstpl
insb
adc
std
pop
loopne
in
xchg
div
pop
xchg
push
jp
jne
jo
hlt
and
and
fsubs
mov
ss
and
lea
pop
lret
mov
or
dec
jno
dec
ret
push
fdivr
lods
adcb
push
xchg
xor
fmuls
and
call
aam
push
fdivr
mov
dec
xchg
or
in
mov
xchg
pop
adc
push
cmp
pop
std
add
aas
inc
xchg
aad
xor
fsubr
and
add
pop
fmul
adc
add
addr16
lcall
fs
ss
imul
out
cmpsb
out
xchg
sub
xchg
nop
xchg
mov
add
mov
inc
xor
add
gs
loopne
inc
mov
mov
push
cmp
xchg
adc
push
or
push
xchg
rcrb
push
std
cs
jmp
pop
in
pop
ret
push
ljmp
inc
sub
jge
mov
cmp
mov
xchg
aaa
outsl
mov
jno
iret
in
sahf
les
pushf
shl
test
cs
mov
negl
fstps
pop
repnz
adc
add
loope
cs
and
pusha
xchg
ja
xchg
push
std
jae
stos
mov
and
lds
sub
imul
jns
pusha
add
sbb
mov
mul
hlt
add
nop
add
popf
mov
loope
push
pusha
or
outsb
pusha
mov
cmp
inc
fdiv
add
nopl
pop
push
lods
cmp
cltd
inc
fistl
call
movsl
push
scas
pop
xor
sbb
xchg
pop
test
in
pushf
cmp
push
sbb
int
outsb
jns
sub
daa
movsb
int
sub
push
int3
xchg
imul
pop
and
sub
stc
js
sbb
pop
pop
cwtl
xchg
sub
out
push
mov
mov
sbb
scas
pusha
orl
sarb
sbb
add
cld
fwait
rorb
adc
xchg
xchg
loop
and
push
jle
in
fcomps
test
loopne
mov
push
leave
adc
pop
fists
ret
out
enter
in
sbb
jo
icebp
push
sub
cmp
mov
loope
add
dec
push
and
call
mov
push
xchg
xchg
repz
mov
mov
mov
fcmovb
or
mov
test
mov
subl
sbb
pop
xor
or
mov
cli
mov
fimull
int
and
aaa
cmpsl
ds
cmpsb
or
pop
lret
insl
bound
xchg
imul
add
and
out
repz
loope
push
jno
adc
stos
cld
inc
sti
imull
pop
jo
sbb
cld
xchg
jae
mov
cltd
insb
xorl
adc
sbb
fistpl
and
add
adc
push
push
cmp
jne
mov
insb
xchg
cmpsb
add
frstor
mov
mov
outsb
cmpsb
jnp
mov
loopne
aaa
lahf
mov
xchg
repnz
scas
cld
insl
jnp
les
loope
mov
pop
mov
mov
push
push
pop
jmp
jl
jb
sbb
cltd
loopne
icebp
jae
xchg
bound
dec
pop
mov
arpl
test
fdivrs
mov
cmc
lahf
mov
add
cmp
les
ds
jle
clc
mov
cltd
les
or
aad
jecxz
fldenv
test
in
cli
dec
cmp
scas
cli
xorb
mov
pop
mov
cmp
mov
insl
pop
push
add
div
inc
fnstenv
jmp
push
cmp
fs
add
out
cmpsb
jge
push
mov
adc
sbb
cli
adc
sbb
xchg
sbb
clc
jmp
pop
ja
mov
aaa
fmul
imul
daa
lret
jmp
int
ss
rcll
cwtl
mov
mov
scas
jg
sbb
cmp
in
popf
sub
call
lcall
jbe
xchg
cmp
cltd
xchg
mov
lcall
orl
out
rolb
les
sbb
adc
andl
mov
adc
mov
test
inc
mov
ficomps
mov
dec
xchg
stos
mov
fwait
rorb
fcmovu
xor
cmpsb
jecxz
adc
sub
bound
jl
mov
jecxz
ljmp
aad
flds
mov
push
pop
mov
popf
jge
mov
push
pop
fcomi
loop
pushf
jecxz
mov
rol
pop
cmpsb
test
jp
push
or
daa
repz
pop
mov
mov
je
dec
pop
adc
cltd
xchg
out
ret
jbe
icebp
fldenv
mov
xchg
inc
enter
sub
mov
inc
sbb
push
pop
dec
jmp
clc
outsl
inc
xlat
mov
das
leave
jecxz
pushf
out
add
mov
sub
inc
fcomps
aad
mov
push
out
lret
cwtl
lea
and
or
jnp
cmpsb
push
sbb
daa
into
add
or
cmp
sub
add
xor
cmpsb
and
inc
test
mov
push
rcll
push
xchg
add
les
into
mov
cmp
mov
scas
push
nop
cmp
add
xchg
dec
gs
or
xlat
neg
imul
pop
aas
imul
scas
lock
scas
data16
mov
and
xchg
pop
sahf
sbbb
adc
loopne
pop
xchg
sbb
cwtl
fstpl
std
popa
sahf
pusha
adc
xchg
nop
push
stc
cmp
push
idivb
or
push
testb
in
mov
mov
mov
pop
cmc
sbb
and
nop
sbb
imul
jns
adc
test
test
sub
jno
push
mov
mov
fcomps
mov
jp
dec
push
or
or
push
arpl
or
call
pop
xchg
adc
mov
out
sbb
mov
mov
adc
lock
adc
mov
out
je
xchg
jne
into
ljmp
arpl
fwait
or
sar
push
xor
inc
dec
or
in
xchg
dec
push
sbb
leave
jae
push
dec
scas
and
test
fdivrl
and
sbb
and
lea
cld
add
adc
pop
stos
adcb
ret
test
inc
in
mov
lock
push
mov
mul
fcomip
push
xchg
fsubrl
mov
popf
xor
add
add
and
lret
and
push
ret
lds
scas
test
ljmp
popf
mov
jg
fiadds
adc
std
inc
test
sbb
push
out
inc
jge
sbb
or
xchg
imul
fistl
push
repnz
lret
sarl
xor
lds
rcl
push
enter
xor
cli
xor
and
sar
cwtl
xchg
rcrb
mov
idivb
gs
inc
or
adc
nop
repnz
or
addr16
pusha
jne
sarb
adc
sbb
pop
add
dec
lds
sahf
out
jge
aas
test
or
adc
aaa
cmpsb
sbbb
dec
cli
cmpsb
out
jbe
sbb
cli
out
push
aad
add
dec
lea
mov
mov
das
inc
fisttpl
or
push
sub
pop
mov
addr16
cmove
xchg
cmc
es
inc
pmulhuw
lods
xchg
cmpsb
pop
xchg
jp
mov
addr16
mov
pop
jae
dec
ret
mov
mov
adc
add
popf
cmpsb
scas
sbb
jmp
add
aaa
fdivs
popf
adc
sbb
add
pop
aad
out
mov
jno
lds
daa
in
push
es
cld
xchg
int
ficoms
mov
mov
jo
push
mov
pop
pop
dec
mov
aad
pop
aad
clc
popf
inc
sbb
sarl
jmp
jl
add
inc
xchg
leave
insb
test
xchg
cmpsb
push
fwait
mov
jno
popa
and
imul
xchg
lahf
loopne
or
loop
aas
cld
sub
outsb
cmc
in
ret
mov
or
shr
add
jb
xchg
xchg
add
loopne
jns
or
cmc
sbb
call
aas
les
std
fwait
add
dec
out
repz
stos
js
enter
ss
mov
out
jl
ret
cmp
dec
das
and
lods
push
in
pop
jae
sbb
ss
push
mov
cmpsl
lods
jmp
jmp
mov
mov
je
pop
push
pop
testb
dec
sbb
pop
hlt
mov
mov
adc
sbb
sahf
xchg
enter
mov
pop
adcl
pop
out
sbb
dec
mull
pushf
mov
repz
mov
xor
stos
pop
mov
inc
mov
push
push
jo
aam
sbbb
mov
test
out
cmp
popf
idivl
sbb
mov
add
cmpsb
xchg
mov
leave
fistl
sarb
out
enter
pop
idivb
or
jns
jg
movsl
loope
cmp
int
outsl
mov
notb
and
stos
xor
movsl
inc
mov
and
lcall
xchg
push
xchg
in
jle
add
jnp
dec
mov
xchg
cmpsb
pop
mov
fsub
jmp
jno
pop
mov
fxch
mov
mov
add
xchg
mov
pushf
aam
jmp
and
push
popf
out
push
inc
scas
aad
mov
add
xchg
fisttps
jbe
shll
push
scas
cmpsb
imul
sub
cmpsb
dec
xor
dec
std
cli
scas
fistpl
mov
mov
stc
xchg
xchg
adc
test
ss
jp
daa
jl
xchg
xchg
dec
add
jae
mov
mov
outsb
loopne
xchg
fsts
cmp
pop
mov
jnp
push
adc
lahf
adc
insb
imul
mov
xlat
push
xchg
int3
xchg
ss
daa
mov
xchg
mov
sub
pop
call
int
mov
mov
sbb
std
jns
adc
lock
call
sahf
adc
mov
popa
mov
test
xchg
push
in
adc
xchg
sub
sbbb
mov
xchg
ret
cltd
cmp
cmc
mov
sbb
jae
cmp
push
fcmovnb
imul
xchg
mov
mov
or
xchg
push
fcomi
mov
cmpsb
add
insb
roll
dec
xchg
movsb
and
addl
mov
mov
adc
pop
fidivs
ljmp
mov
pop
nop
push
xchg
test
xchg
cmpsb
int
xor
je
hlt
fiaddl
xlat
and
insl
mov
inc
xchg
repnz
shll
ja
mov
orb
sbb
js
ficompl
mov
jbe
xlat
jb
add
adc
mov
add
adc
xchg
push
inc
add
jle
adc
mov
xor
int
jne
cmp
testb
and
fldl
in
ss
and
shlb
stos
jo
xorb
or
dec
jo
mov
mov
adc
iret
ret
xor
xor
adc
xchg
popf
mov
sbb
out
rcll
aam
mov
in
bnd
out
pop
mov
in
loop
dec
jo
shlb
inc
rcr
rolb
mov
cmpsb
sbb
fcomip
unpcklps
push
cmpsb
cli
mov
out
fnsave
or
pop
xchg
adc
push
js
loop
out
cmp
jle
jno
cmp
into
push
clc
subl
sti
mov
cwtl
push
cmp
loope
push
adc
and
jb
dec
push
jne
jle
sahf
push
pop
roll
cmp
or
jno
jae
insb
iret
and
jecxz
clc
std
sbb
adc
xchg
mov
iret
mov
ffreep
sub
sbb
inc
mov
adc
jno
cmp
cmp
pusha
pop
pusha
dec
shl
mov
jmp
icebp
outsl
cwtl
lahf
mov
xchg
pusha
out
icebp
add
divl
cmpsb
xchg
jbe
repz
mov
js
jp
dec
movsb
sub
popa
push
insl
dec
das
jecxz
cmp
mov
cli
sahf
pushf
mov
xchg
adc
pop
jmp
test
jns
cltd
mov
inc
cmp
scas
imul
in
call
mov
jns
cmpsl
sahf
insb
xchg
xchg
imul
sbb
add
push
xor
adc
out
sbb
sti
in
test
cmpsb
push
in
or
cmp
pop
add
jne
popa
jle
mov
imul
lret
cltd
inc
orb
or
aas
add
lock
gs
pop
nop
call
sbb
add
outsb
xchg
flds
push
fsubs
sbb
jne
add
push
lret
inc
xor
jnp
xchg
rep
std
pushf
mov
push
mov
lods
adc
sbb
fnstcw
push
mov
mov
adc
sti
movsb
lret
popa
in
jecxz
mov
xchg
mov
mov
xor
adcl
mov
cmp
mov
xchg
xchg
cli
ret
push
insl
mov
imul
mov
xchg
cli
push
xchg
leave
cwtl
pop
insl
ret
sarb
jns
sbb
ss
sbb
mov
dec
mov
out
pop
dec
sbb
out
sbbb
out
jl
pushf
xchg
dec
xor
negl
sahf
push
in
stos
loopne
cmpsb
and
data16
push
test
out
stc
pop
test
rorl
sbb
std
adc
mov
jecxz
fstpt
roll
cwtl
jne
cmp
repz
iret
lea
stc
orb
sbb
add
jmp
orb
sbb
mov
jbe
sub
stos
sub
dec
add
iret
stos
pop
add
mov
pop
add
sbb
add
mov
push
xchg
fcom
add
idivl
les
cmpsb
jo
mov
sahf
add
fwait
xor
jae
jmp
adc
jno
xchg
dec
xchg
aas
loope
loopne
mulb
or
xlat
cmpsb
dec
daa
repz
cs
fwait
data16
xchg
shl
out
in
xor
loop
sub
fwait
ja
ret
popf
add
lret
xchg
push
leave
push
and
loopne
cmc
addr16
jns
test
mov
mov
push
sub
jge
imul
nop
shl
mov
cmp
pushf
cmp
popa
adc
jmp
xchg
jae
mov
repnz
in
mov
pop
cli
jmp
subb
loop
dec
orb
adc
testl
lock
aad
fidivl
cwtl
jno
in
into
xor
js
adc
and
sub
aas
sbb
mov
sbb
orl
dec
mov
mov
add
icebp
out
dec
xchg
dec
inc
mov
imul
out
loopne
xchg
jne
xchg
subl
repnz
xor
cmpsl
pop
pop
cmp
push
adc
dec
push
mov
aad
rolb
clc
loop
int3
push
in
enter
cmc
mov
call
call
call
jmp
lock
mov
add
or
xor
xchg
xchg
mov
xchg
lea
bound
xchg
xchg
neg
loopne
dec
leave
push
das
cwtl
out
xchg
mov
sub
cmp
fsubr
jge
fmuls
adc
jbe
mov
xchg
jne
sbb
mov
push
fwait
push
fdiv
fwait
and
mov
mov
or
push
ret
loop
xchg
xchg
push
enter
adc
xorb
icebp
lds
nop
jne
sahf
xchg
cmp
add
adc
ljmp
and
fucomp
out
xchg
xchg
xchg
adcl
mov
loope
add
loope
mov
orl
test
sbb
jmp
nop
push
add
jmp
xchg
jp
jle
xchg
adc
imulb
adc
stos
xchg
mov
xchg
cmp
push
mov
rorb
adcl
sbb
mov
dec
inc
or
popf
cmp
push
xchg
dec
mov
lods
or
sub
pushf
insb
jns
neg
xchg
ret
mov
js
jp
push
hlt
mov
xchg
ret
inc
out
bound
jecxz
loopne
cmp
roll
hlt
jnp
cmp
lds
hlt
jns
lahf
std
sub
cmpsb
mov
mov
out
adc
loopne
jno
sub
xchg
push
fldl
adc
repz
insb
test
add
call
xchg
lea
xchg
clc
nop
xchg
in
pop
mov
mov
pop
ja
nop
leave
xchg
cmp
repz
scas
jp
adc
cwtl
cli
xchg
nop
stc
rclb
int3
inc
dec
add
dec
xchg
test
mov
icebp
mov
mov
xchg
cltd
mov
xchg
cmp
push
decl
lea
fs
adc
xchg
daa
sbb
test
adc
stc
rcll
jle
add
jl
xchg
xchg
jp
mov
push
adc
pop
mov
mov
out
test
mov
lret
dec
divb
adc
push
or
std
frstor
dec
fwait
imul
add
bnd
stos
bnd
xchg
and
je
popa
sti
xchg
jmp
cmp
mov
orl
icebp
or
dec
mov
xchg
inc
test
das
cmp
mov
cmp
pop
mulb
jne
sti
idiv
add
sahf
lea
fists
sahf
and
push
cmp
cmp
cmp
cli
in
sub
hlt
jo
insl
and
or
cwtl
jle
push
mov
jns
or
insl
mov
hlt
xchg
jo
aad
jp
dec
mov
daa
pop
mov
mov
lock
shl
aad
xchg
or
lock
mov
nop
adc
pop
mov
mov
enter
add
rclb
pop
cmp
js
lds
and
ret
inc
mov
or
cmp
or
jb
xchg
or
mov
or
aam
test
mov
test
lea
push
adc
pop
jo
fcomps
stc
mov
sub
into
jb
or
jnp
lock
int3
loopne
outsl
mov
push
mov
dec
mov
loopne
xchg
mov
call
mov
or
out
cld
addl
ljmp
enter
or
mov
ja
adc
dec
sub
jecxz
rclb
xchg
cwtl
xchg
xchg
dec
test
nop
leave
lea
jno
xchg
mov
mov
jp
leave
andb
ss
or
jl
xlat
stc
jle
orb
jle
mov
dec
nop
xchg
xlat
rcrb
mov
and
in
sbb
mov
sub
sub
lret
int3
add
stos
xchg
or
push
call
mov
aas
notb
scas
nop
cmp
lock
fstl
dec
xor
and
jl
xchg
orb
cmpsb
add
cmp
and
add
cltd
lock
aad
shl
jbe
mov
repz
loop
hlt
dec
sbb
in
test
mov
jne
lds
and
nop
jno
xchg
mov
inc
add
repz
adc
stos
add
loopne
xchg
jp
mov
fs
mov
pop
movsb
add
in
xchg
cwtl
mov
fdivs
push
clc
movsb
mov
rclb
repnz
mov
clc
stos
ret
into
or
test
aam
sbb
ret
ljmp
mov
lods
mov
xchg
mov
clc
lock
jp
test
xchg
in
mov
clc
inc
xchg
out
std
dec
mov
fwait
sbb
jae
ficoml
lret
add
mov
hlt
clc
mov
jp
call
mov
movsb
je
rorb
aam
push
xorb
jle
push
clc
xchg
mov
test
repnz
xchg
lret
dec
pop
fimull
adcb
not
dec
idiv
mov
out
jle
push
movsb
cmp
ret
shlb
xchg
push
fsubr
mov
xchg
mov
mov
insl
mov
mov
in
xchg
dec
cwtl
stos
jle,pt
sub
mov
lret
push
in
lock
xchg
in
mov
rorl
adc
mov
bound
cmpsb
fdivrs
cmp
loopne
or
imull
add
rcrb
rclb
pusha
xchg
std
ret
push
dec
cmpsb
xchg
ljmp
push
cltd
xchg
jge
push
or
sarb
lcall
pusha
lea
jmp
mov
inc
mov
sub
ljmp
andb
inc
fwait
ficoms
enter
icebp
scas
out
lods
dec
lret
jge
pop
gs
call
fisubl
cmp
roll
push
fistpll
jmp
xchg
scas
fwait
imul
loopne
pusha
inc
shlb
mov
rdmsr
cmp
aam
mov
daa
lds
fwait
cmpsl
jmp
les
cld
lcall
or
xor
inc
sub
int
enter
aas
incl
pop
or
cmpsb
mov
dec
pop
cmp
int3
mov
dec
leave
aad
xchg
mov
xchg
andl
mov
hlt
push
inc
popa
sub
subl
or
jle
iret
call
sahf
int3
lea
push
adc
fldl
xor
jno
fdivr
inc
in
mov
dec
incl
je
mov
add
inc
sub
insb
arpl
movsl
and
daa
std
add
sub
inc
pop
mov
cmpsl
sbb
mov
sub
repz
ds
test
lcall
xchg
jne
insl
jb
inc
les
xchg
push
in
fcmove
inc
mov
mov
clc
pop
ja
xchg
roll
lock
cmc
dec
and
jnp
fisubrl
pop
pop
adc
sbb
jmp
xor
cli
mov
jb
pop
jmp
add
pushf
pusha
pushf
pushf
lea
jmp
loop
sbb
sbb
jb
call
pushf
fstl
jns
or
mov
push
pushw
add
and
xor
lret
pop
pusha
call
adc
out
push
mov
movsl
push
clc
dec
push
dec
je
aas
push
mov
lcall
jno
mov
loope
stos
cmp
add
or
xor
mov
dec
xchg
rclb
and
and
xlat
dec
lcall
imull
cld
test
out
sbb
mov
sub
add
sahf
lock
xor
fadd
inc
sub
add
rclb
push
imul
fdivrl
js
sub
mov
mov
scas
and
jl
cwtl
out
dec
jnp
push
xor
aad
data16
pop
pop
call
hlt
shll
push
scas
inc
std
jnp
jle
mov
dec
test
or
pop
sub
movsb
mov
mov
stos
lods
and
push
mov
shlb
repnz
std
mov
inc
sub
push
pushf
adc
loopne
into
rolb
jmp
stc
testl
dec
sub
mov
sub
inc
or
jnp
sub
xor
xlat
mov
cltd
not
daa
pop
in
in
adc
je
scas
adc
lret
pusha
andl
fs
cld
out
dec
shll
lea
mov
jbe
fdiv
sbb
stc
outsl
lret
js
bound
scas
sbb
stc
inc
lea
cs
cmpsl
leave
mov
sahf
daa
jbe
test
or
add
movsl
push
mov
int
rcrl
int
cmc
fnstenv
mov
subb
fs
mov
xor
xor
and
sub
cmp
in
jle
loop
cmp
repnz
pop
adc
adc
outsb
jne
aas
rorl
sub
and
sarl
repz
pushf
pusha
call
adc
popa
mov
mov
ret
repz
sarl
cwtl
mov
shl
mov
mov
xchg
inc
aaa
lret
outsl
repnz
ret
mov
adc
pop
sti
push
jp
repz
ret
ret
inc
xor
insl
dec
inc
stos
mov
push
popa
xchg
mov
ja
mov
or
fsts
lret
pop
stc
push
inc
addr16
mov
and
ret
adc
xchg
inc
lds
pop
mov
xchg
and
cmp
push
into
enter
sbbl
out
test
in
mov
lahf
mov
or
mov
sarl
stos
test
jne
orb
xchg
ror
push
ljmp
popa
leave
int3
nop
xchg
cmp
cltd
xchg
cli
test
pop
or
jbe,pn
mov
cli
push
loope
xchg
push
mov
sarl
adc
dec
inc
and
lret
lcall
xchg
mov
xchg
mov
xor
jg
inc
popl
and
cwtl
dec
mov
test
sub
adc
fdivp
mov
lret
push
cmc
push
mov
jb
fsincos
mov
dec
aaa
mov
adc
rol
add
sub
adc
push
test
jmp
out
rcl
dec
lods
cmp
insl
xor
xlat
nop
or
cmp
ds
sahf
xor
push
pop
ja
divl
mov
push
in
pop
rolb
add
lds
xor
insl
fnstsw
xchg
push
cmc
outsl
outsl
cmpsb
cmp
ds
call
cli
mov
mov
fs
ja
test
cmp
sub
xor
cmp
add
ror
cmc
mov
or
cmp
sub
not
mov
call
je
popa
mov
cmp
or
dec
sbb
pop
xor
sub
mov
xor
ret
leave
cltd
jge
in
loopne
popf
push
loopne
aam
or
sbb
test
push
jl
cs
mov
shll
inc
inc
clc
jne
add
aaa
push
fisttpl
xchg
pop
sbb
fistl
mov
outsl
or
mov
dec
jo
int
mov
nop
or
pop
and
out
in
in
setno
mov
mov
cmpsb
and
cwtl
cmp
cltd
fnsave
pop
call
adc
xchg
add
inc
add
pop
add
pop
mov
add
stc
adc
in
push
mov
ja
stc
movsb
mov
or
or
adc
out
les
dec
or
js
sti
mov
push
test
repz
cmp
pop
jge
call
mov
sub
imul
pusha
fwait
imul
pop
out
loop
aaa
xchg
lock
inc
jo
js
negb
test
js
je
cmpsl
pop
fists
push
add
scas
push
out
jecxz
inc
out
push
mov
out
hlt
mov
imul
test
xor
jns
push
jp
hlt
jbe
scas
pop
mov
dec
xor
ds
xor
mov
out
adc
pop
xor
add
inc
mov
or
ljmp
lret
adc
lds
mov
aad
sbb
xchg
shlb
or
fsubl
push
or
fld1
xor
lea
ljmp
push
nop
pushf
jmp
cld
ret
dec
mov
test
dec
aad
sti
inc
rcl
stc
popa
or
adc
lret
add
scas
insl
loop
test
aam
lahf
imul
js
mov
xor
jecxz
in
sbb
lea
in
sar
cltd
and
jmp
push
test
mov
xchg
pop
out
jnp
mov
ja
aad
xor
mov
push
pushf
lea
dec
mov
decl
mov
xchg
adc
xor
mov
in
pop
jmp
and
enter
pop
bound
jmp
out
push
xor
xor
xchg
dec
aas
mov
scas
inc
shlb
mov
iret
add
orl
sbb
test
mov
movsb
shll
dec
in
inc
push
cli
fs
pusha
add
sub
and
inc
sub
cwtl
inc
pop
sub
int3
lods
subl
pop
mov
in
rcrl
jp
enter
pop
add
jecxz
adc
sarl
outsb
test
add
push
cmp
cmpsl
in
jns
pop
les
in
mov
dec
add
pop
movups
mov
imul
push
shll
cmp
into
shll
ror
cmpsb
pop
repz
nop
xor
stos
or
jne
out
xor
pop
lea
outsl
jle
add
fsubs
sub
inc
xor
and
addl
or
lahf
xchg
ret
xor
jo
test
mov
aaa
dec
mov
inc
inc
push
ret
cld
ret
shl
sar
inc
gs
dec
mov
stc
in
jle
or
mov
jmp
cmp
and
pop
lods
lret
rcr
inc
push
js
adcl
adcb
jmp
dec
iret
jne
push
adc
fnstsw
hlt
mov
outsl
icebp
sub
stos
addb
mov
mov
mov
inc
stos
pop
mov
xor
xor
xlat
int3
adc
cs
xor
xchg
sub
iret
mov
daa
add
bound
daa
in
and
add
jp
outsl
out
sub
movsb
jp
mov
jbe
das
sub
es
movsl
es
jo
mov
or
pop
sti
mov
cmp
inc
mov
addb
lret
lret
mov
stos
adc
pop
jnp
sbb
xchg
hlt
mov
dec
loope
xchg
xor
push
leave
inc
icebp
fisubl
shll
stos
nop
mov
std
incl
std
sbb
into
cld
jle
testb
divb
jns
inc
call
lret
pop
repnz
fldcw
cmpsb
lods
mov
push
sub
das
cmc
loop
mov
repnz
mov
cmp
pushl
cmp
jmp
mov
pushf
push
movb
pushf
pushl
ret
cmp
ja
sbb
cltd
cmp
inc
cmpl
rorb
stos
xlat
mov
xchg
inc
cld
sbb
mov
sub
inc
lret
fcompl
mov
fdivr
pushl
lds
scas
ja
push
inc
les
lret
loop
hlt
push
das
xor
jne
sbb
test
dec
inc
andl
or
ss
icebp
stos
adcl
inc
mov
add
cmp
mov
aaa
outsl
adc
xor
call
push
sbb
inc
sub
pop
jge
mov
cmc
subl
mov
leave
ja
outsb
jbe
add
cld
sahf
rcrl
jle
adc
lods
jns
mov
inc
jl
sbb
std
cmpsb
and
sub
into
cs
push
jae
adc
pop
inc
fdivrp
sub
imul
sbb
mov
mov
shll
rcrb
mov
cwtl
cmp
popa
cmc
into
mov
movsl
clc
pushl
jb
imul
add
jmp
mov
roll
fildl
sbb
push
icebp
lret
jae
dec
int
inc
jle
les
xchg
push
sub
mov
test
sbb
xor
loop
aas
hlt
push
nop
das
cmp
mov
test
loopne
sbb
int
nop
push
pop
ret
mov
cmp
sub
push
rcrl
and
inc
sub
sbb
in
cmp
jg
call
int
or
mov
popa
pop
sub
aam
fdivr
jg
jnp
inc
sti
jne
insl
int
repnz
outsl
cmpsb
in
sbbl
sbb
push
out
jne
stos
jae
mov
pop
js
inc
in
call
adc
push
sbb
jno
sub
jg
and
xchg
sti
adc
pusha
scas
jecxz
inc
fstl
stos
push
mov
std
frstor
into
xchg
lock
outsb
xchg
das
add
shll
insb
sub
and
mov
test
aad
es
jl
xchg
fisttps
add
call
push
or
cmc
inc
push
push
dec
les
add
aaa
add
mov
xor
mov
fstps
mov
mov
pop
cld
outsl
mov
cli
fnstsw
push
adc
xor
cs
bound
mov
cltd
jecxz
push
jns
mull
loopne
add
sub
shrd
jb
daa
xlat
cmpsl
scas
push
pusha
or
mov
sbb
mov
xor
and
mov
imul
push
call
test
xchg
test
fimuls
cld
lcall
daa
and
sahf
cmpl
and
inc
arpl
dec
or
mov
jecxz
xchg
dec
imul
andl
out
fidivrl
dec
jp
test
xor
icebp
ljmp
mov
cmp
cmc
jl
pop
mov
scas
aaa
flds
testb
in
pop
jge
je
sbb
sub
fmul
add
pop
push
mov
dec
dec
xor
mov
mov
pushf
xchg
sub
xchg
into
mov
adc
cmp
sub
ja
ljmp
cmpb
lea
add
pop
addr16
pop
push
and
scas
inc
ds
jne
mov
sub
add
or
shrl
mov
jnp
and
aad
mov
mov
pop
in
jns
ljmp
hlt
lahf
add
mov
xor
inc
sub
mov
gs
mov
stos
and
push
scas
mov
insb
push
xor
cmpsb
and
add
aam
int
scas
mov
pop
add
fnsave
xorl
loope
push
andb
inc
pop
jae
cmc
test
pusha
mov
not
setb
lea
movb
pushf
call
cld
mov
aaa
xor
iret
repnz
jno
mov
inc
inc
orb
adc
leave
cs
hlt
aad
mov
ret
pusha
sbb
shl
jns
ja
sbb
fidivl
add
ljmp
xor
rcr
rolb
mov
bound
push
lods
add
pop
and
push
ret
lahf
lcall
pushf
jb
lret
mov
out
mov
insb
je
xor
mov
push
inc
out
rorl
fcomip
mov
cmp
inc
sub
ds
sbbb
pop
repnz
lret
pop
push
inc
add
mov
jmp
mov
imul
add
aam
cmpsb
loopne
sub
sbb
iret
cmp
push
pop
lahf
sbbl
adc
cmp
inc
add
push
dec
ja
andb
test
add
push
xchg
repnz
mov
push
sbb
je
popf
or
imul
and
inc
xchg
or
mov
shll
shll
mov
sub
cmp
test
cmp
not
test
cmp
pusha
clc
mov
pusha
cmc
pushf
add
bt
test
push
movb
push
lea
jne
jmp
movl
movb
movb
mov
push
push
pushl
movb
pushl
ret
jmp
mov
lea
jne
cmp
sub
not
bsf
mov
inc
call
test
mov
jl
lret
in
xlat
iret
scas
gs
shl
hlt
fdivr
cltd
fs
and
or
sub
repz
rdtsc
roll
jne
jmp
les
mov
notb
cmp
xchg
inc
xchg
jle
lret
add
adc
pop
ja
sub
pop
xchg
in
push
clc
mov
jge
xlat
cltd
ficompl
test
out
lea
xorl
jb
scas
stos
ds
push
pusha
pusha
push
lea
dec
call
lods
loop
addr16
std
inc
adc
mov
cmc
dec
cmp
rorb
aaa
sbb
xor
shrb
sub
cmp
or
lock
inc
int3
std
notl
mov
push
fists
gs
jecxz
xchg
sub
fildl
or
iret
fisubl
dec
pop
jg
jge
les
or
dec
inc
mov
or
inc
sub
mov
cmp
ficompl
clc
pop
xchg
in
push
mov
pop
divb
cli
cmpsl
daa
aaa
lds
lds
les
mov
aas
inc
call
mov
and
nop
sub
fnstcw
js
loope
jae
mov
push
mov
inc
loope
pusha
lret
negb
inc
test
pop
add
sub
jmp
add
insb
push
cmp
pushf
mov
movw
lea
ja
call
lea
call
xchg
sub
andb
shll
pop
ret
inc
inc
nop
lds
xor
enter
cs
xchg
jbe
arpl
mov
movsb
inc
in
out
in
mov
int3
jne
pop
sbb
inc
gs
and
pop
pop
mov
test
push
idiv
inc
xchg
pop
ret
fbstp
or
or
push
test
dec
and
imul
inc
movsb
fisttps
popa
jmp
push
test
xchg
cmp
pop
sub
and
pusha
sub
pop
mov
fs
inc
xor
les
jae
pop
pop
push
dec
lret
pop
adc
and
movsl
and
fsts
loope
ljmp
adc
sub
or
jecxz
lock
sbb
enter
mov
fcoml
lock
dec
add
and
push
ss
arpl
rcrb
adc
and
lea
imul
push
neg
lea
ja
sub
stc
ror
pusha
cmp
jmp
lea
jne
sete
movzbw
movb
pushf
mov
sets
cwtl
mov
jmp
add
aas
fs
fstps
cs
sbb
jne
icebp
xchg
sahf
jecxz
push
cmc
repz
add
jnp
xchg
es
and
testl
sahf
cltd
dec
pop
lock
out
dec
and
cmpsb
loope
xchg
repnz
inc
leave
push
orb
icebp
push
mov
insb
jnp
sub
jg
or
or
aas
loopne
sti
ret
push
pop
fldl
movsb
mov
idivb
sub
and
sub
icebp
push
sbb
fwait
int
adc
pop
inc
loope
or
mov
mov
pop
test
push
movsl
std
popf
inc
aam
ja
push
shll
mov
mov
pusha
pushf
mov
lea
movb
mov
not
cwtl
setne
setl
pushl
popl
pushf
not
pop
lea
jo
push
pushf
setns
movl
setno
bswap
lea
pusha
jmp
pusha
loop
lea
xchg
dec
pop
pop
cmp
xchg
shlb
sbb
addl
xor
adc
mov
sbb
cltd
sbb
jecxz
push
aas
lea
and
inc
fldenv
pusha
movsl
add
jle
jne
popf
lahf
aaa
sbb
bound
push
adc
adc
xor
push
sub
xchg
cs
mov
xchg
jo
pusha
and
stos
stc
aam
punpckhbw
jae
aam
and
mov
nop
adc
inc
cltd
dec
gs
lahf
ss
mov
mov
fs
or
testl
sub
les
lds
push
lods
xchg
or
xlat
cmp
or
insb
mov
xchg
cmpsl
pop
cmpsb
outsl
ja,pt
rclb
push
xchg
jae
cmp
dec
cmp
xor
cmp
xor
xlat
cmpsb
mov
pop
mov
add
bound
xor
push
push
and
sub
cmpsl
mov
dec
xchg
fs
cmc
hlt
mov
mov
push
orl
mov
or
into
popf
ret
icebp
cmp
push
es
add
ds
pop
ss
dec
and
dec
and
cld
mov
lods
mov
out
jl
push
mov
fsubl
aam
fwait
push
sub
in
movsb
sbb
mov
push
loope
or
jle
mov
loopne
mov
bt
cmp
test
pushl
bt
jmp
cmc
cmp
or
mov
call
ror
stc
cmp
mov
call
add
dec
gs
popa
addr16
outsl
js
add
sub
in
pop
jne
and
loop
mov
pop
pop
jo
mov
shl
adc
jns
mov
lcall
dec
fs
stos
mov
inc
cmpsl
aad
jns
imul
jnp
es
mov
sub
sub
test
ret
mov
fbld
iret
push
and
insb
pop
cmp
pop
pop
jne
in
pop
insl
iret
ss
xor
sub
sbb
push
scas
cmp
mov
mov
pushf
lea
je
pusha
cmc
stc
add
sar
mov
movw
pusha
add
test
call
xor
mov
jae
lods
mov
lahf
or
fidivrs
into
aas
pop
inc
ret
out
aam
mov
mov
xor
mov
push
movsb
mov
dec
mov
andl
inc
sub
out
popf
fidivs
das
add
lret
mov
push
incl
xchg
mov
cmpsb
push
int
push
dec
jo
lret
push
jnp
dec
or
mov
les
leave
pop
arpl
in
jb
jp
sub
cmp
sbb
fisubrs
xor
inc
in
pop
lret
sub
loope
lock
loop
cmp
lds
pop
mov
dec
test
mov
ljmp
push
pop
or
jno
int
xor
ja
pop
sarl
dec
test
inc
mov
xchg
inc
sub
int
mov
jne
sahf
mov
cli
xor
fsubrs
sbb
jp
xor
rorb
inc
pop
cmc
lahf
inc
lahf
pop
adc
sti
stc
pusha
fiadds
mov
lods
icebp
sub
jmp
scas
shlb
ret
lahf
loope
push
fdivrp
push
loop
ficoml
jecxz
rep
and
xchg
mov
outsb
mov
test
or
popa
es
ret
or
popa
inc
adc
cmc
in
loopne
jae
inc
call
and
inc
sub
pop
inc
lcall
xchg
jp
cs
in
lret
popf
shlb
ja
push
in
adc
mov
cmp
mov
int3
sbb
inc
mov
inc
shlb
aaa
xchg
shlb
sub
cmp
into
mov
xchg
scas
pop
sub
cltd
in
aam
pop
xchg
sub
and
dec
aaa
js
cmpsl
lcall
rcll
push
mov
call
pushl
stc
test
mov
pusha
sub
pushf
inc
mov
push
call
pushf
pushf
movb
movl
mov
pusha
push
mov
lea
jmp
mov
test
sub
jne
pushf
add
stc
shld
mov
pushf
jmp
adc
cmp
lea
pushf
cmp
push
pushf
lea
ja
sar
daa
rcl
shld
mov
xadd
shrd
or
setnp
lea
mov
sets
sub
cmp
rcl
mov
not
lea
shr
bswap
sbb
and
add
shr
sub
movsbw
pusha
lea
mov
push
jmp
jmp
pushl
popl
push
movb
mov
mov
lea
jmp
xadd
cmp
mov
shl
sar
add
push
mov
jmp
push
push
push
mov
mov
pusha
push
lea
jmp
call
call
mov
pusha
pushf
push
movw
lea
jmp
pushf
popl
call
movb
pushf
pushl
popl
movb
lea
jmp
mov
mov
pushl
pushf
lea
jmp
pushl
popl
movb
lea
jmp
cwtl
call
sets
lea
setb
movzbw
mov
jmp
rol
rol
not
cmp
mov
bsr
mov
rcl
jmp
shr
shr
mov
jmp
push
call
pushf
pushf
mov
call
call
jmp
rol
mov
jmp
pushf
call
clc
add
jmp
bt
sub
pushf
pushf
call
jmp
pushf
mov
pushf
mov
push
lea
jmp
neg
shl
shrd
daa
movzww
clc
cmp
clc
cmc
add
push
pusha
movw
pusha
inc
clc
cmc
ror
bt
not
add
jo
push
clc
cmc
add
cmc
push
cwtl
clc
push
cmc
add
stc
pusha
clc
jmp
add
pusha
mov
movw
push
pushf
movb
lea
jmp
inc
pushf
ror
pushf
call
cmp
sub
lea
rcr
jmp
pusha
pusha
movl
mov
pushf
pushf
mov
push
lea
jmp
pusha
shrd
call
mov
push
pushf
call
pushf
pushf
not
lea
jne
pusha
dec
push
sub
call
pushf
pushf
popl
call
sub
movb
bt
pushf
rol
mov
xor
push
clc
stc
pushf
sub
jmp
or
mov
bt
push
pushf
sub
jmp
sub
lea
jbe
pushf
mov
mov
movw
pusha
lea
jmp
clc
rol
call
sub
call
pushl
popl
pushf
pushf
lea
jmp
clc
add
jae
pushf
mov
pushl
movl
push
pusha
lea
jmp
mov
pushl
popl
pushl
pushf
movw
lea
jmp
bts
mov
mov
jmp
jmp
pushf
pushl
popl
pushf
lea
jmp
call
sub
bts
rol
not
rol
rol
xor
btc
shrd
shl
btc
add
pushf
rcr
test
add
sub
cmp
clc
sub
bsf
stc
mov
pushf
jmp
jmp
mov
bt
cmc
pusha
cmp
sub
pushf
mov
pushf
lea
jne
push
push
clc
test
sub
pusha
push
xchg
jmp
and
sar
pushf
rcr
movzbl
sub
sub
pushf
movzbw
jmp
call
jmp
and
push
bt
cmp
call
add
push
mov
push
pushl
pushf
lea
jmp
lea
jle
add
pusha
pusha
mov
pushf
pushf
pushf
pushf
pushl
ret
pushf
mov
movb
pushf
pusha
movb
lea
jmp
setne
push
mov
not
jmp
mov
movw
pusha
pusha
lea
jmp
mov
pusha
pushf
lea
jmp
pushl
mov
lea
jp
push
pushf
popl
pushf
call
call
push
mov
pushl
pushl
pusha
lea
jmp
aas
sbb
aas
mov
jmp
call
mov
xchg
movsbw
pop
mov
repz
popl
jmp
pusha
bsr
das
das
mov
sub
not
and
mov
pushf
movb
pusha
sub
mov
shr
pushl
push
mov
jmp
pusha
movsbw
pushf
popl
bswap
call
pushl
popl
pushf
pusha
lea
jmp
push
inc
call
pusha
jmp
movl
pushl
popl
pushf
push
lea
jmp
mov
push
pushf
pusha
pushl
ret
ror
stc
call
pusha
mov
jmp
pusha
mov
movb
pushf
movw
pushf
lea
jmp
call
add
push
call
jb
lea
pushf
pusha
mov
pushf
call
xor
rdtsc
call
pushf
popl
pusha
pushl
jmp
inc
mov
call
pusha
stc
sub
clc
cmc
call
pusha
movb
pusha
jmp
mov
pusha
pushf
lea
cpuid
jmp
test
std
pusha
bswap
mov
test
neg
shl
pop
and
cwtl
or
pop
xchg
dec
lahf
pop
aam
shr
lea
pop
bsf
push
stc
mov
lea
mov
not
lahf
cmp
mov
test
pushl
popf
bswap
mov
pusha
pop
pushf
mov
lea
mov
pushf
mov
pushl
ret
cmp
pushf
shr
cmp
or
cmp
cmp
xor
jmp
call
pusha
pushf
mov
pushf
pushf
pushl
lea
jmp
mov
pushf
movb
push
pushf
lea
jmp
pusha
mov
jmp
jmp
pushf
movb
call
pusha
add
push
jmp
pushf
inc
cmp
add
setp
xor
neg
bts
ror
push
pushf
xor
cmc
add
xor
lea
shl
cmc
add
lea
btc
bt
movzbl
rcl
rcr
rol
lea
mov
jmp
push
mov
mov
pushf
mov
mov
push
pushf
lea
jmp
jmp
push
movb
call
bt
lahf
rol
mov
ror
mov
test
sub
cmc
pushf
stc
shl
mov
pushl
jmp
pushl
push
add
push
mov
pushf
lea
jmp
movl
mov
pushf
pushf
popl
call
jmp
mov
movb
mov
mov
mov
lea
jmp
pusha
pushl
popl
pushf
push
lea
jmp
adc
shrd
cwtl
mov
pusha
or
bsr
mov
pusha
cmc
add
push
mov
pushf
lea
jmp
mov
pushf
mov
lea
jmp
not
mov
jmp
pusha
mov
mov
push
lea
jmp
sub
clc
mov
cmc
movl
pushf
sub
pusha
push
movb
pushf
mov
movb
pushf
pushf
lea
jmp
jmp
mov
push
mov
shl
clc
jmp
jmp
shld
call
add
movb
pushf
cmc
cwtl
mov
call
call
pushf
call
mov
call
pushf
mov
push
mov
movb
movw
lea
jmp
jmp
movsbw
sbb
mov
pusha
push
clc
cmc
add
mov
push
push
movw
lea
jmp
or
movzbl
jmp
rep
rcr
lea
rcr
bsf
mov
bsr
btr
mov
call
jmp
push
pushf
popl
call
test
bt
add
pushf
pushf
jmp
sub
pushf
call
pushf
popl
call
mov
shl
pushf
push
mov
pushl
pushf
jmp
push
call
mov
pushf
not
push
bt
add
stc
clc
cmc
sub
jmp
jmp
pusha
movb
mov
pusha
pushl
lea
jmp
adc
pusha
clc
lahf
mov
movzbw
rol
mov
cmp
add
pushf
mov
movw
lea
jmp
mov
push
jmp
push
pushf
mov
push
movb
pushf
push
lea
jmp
stc
mov
call
inc
push
push
mov
pushl
pushf
lea
jmp
call
pushf
popl
call
shr
pushl
mov
call
rol
shld
rcr
add
not
xor
ror
xor
ror
cmp
not
or
pusha
rcr
and
shl
shl
movb
adc
mov
bt
add
jge
add
call
lea
jne
lea
call
mov
pushf
call
pusha
mov
pushf
push
lea
je
pushf
mov
pusha
pusha
mov
mov
pushf
lea
jmp
xchg
sbb
btc
mov
dec
mov
cmp
jge
sub
bt
cmp
cmc
call
pushl
popl
push
movw
lea
jmp
sbb
sar
mov
pushf
cmc
sub
push
pushf
mov
pushf
lea
jmp
call
pushl
popf
mov
mov
mov
mov
lea
jmp
mov
pushl
movb
push
call
push
test
jmp
pushf
lea
jne
pushf
call
pushf
pushl
popl
cmp
clc
add
cld
pushf
pushl
popf
push
lea
jmp
bt
pushf
add
lea
jb
mov
call
cmp
bt
cmp
pushf
sub
stc
pusha
call
pushl
popl
movb
push
lea
jmp
pushf
mov
push
lea
jmp
add
pushl
lea
jbe
inc
bt
pusha
ror
test
bt
test
not
test
add
jmp
pushf
pusha
mov
call
mov
jmp
stc
shl
call
push
xchg
lea
not
call
cmc
add
jg
sub
stc
cmc
pusha
neg
bt
cmc
add
pusha
cmc
sub
jmp
cmc
bt
sub
pusha
movb
cmc
shr
jmp
push
mov
movb
lea
jmp
jmp
not
mov
mov
push
mov
stc
movsbw
bsf
rcl
add
bsf
jmp
adc
jmp
call
mov
pushf
popl
mov
mov
pushl
popl
mov
lea
jmp
call
pushf
popl
call
movl
std
xchg
movzbw
movw
mov
pushf
lea
movzbl
lea
movl
movb
xchg
jmp
cmp
pushf
sub
stc
cmc
test
cmpl
pushl
mov
pushf
pusha
pushl
jmp
pusha
call
movl
lea
jbe
pushf
pusha
mov
pushf
push
pushl
pushl
ret
pushf
mov
jmp
mov
push
push
pushf
lea
jmp
jmp
stc
sub
cmp
pusha
stc
clc
and
lea
jl
pusha
movb
mov
pushf
push
jmp
jmp
push
clc
mov
rcl
shl
cmc
pusha
mov
cmp
sub
lea
jne
test
stc
pusha
shl
pusha
mov
push
call
pushf
jmp
pushf
mov
push
pushf
lea
jmp
dec
or
bsr
sub
mov
setle
bsf
add
movsbw
push
setp
lea
cmc
rol
sar
pushf
sub
movsbw
lea
not
neg
bt
pop
bsr
neg
add
and
movzbl
pusha
bt
mov
clc
pusha
clc
or
mov
pushf
movl
lea
je
stc
cmp
push
xor
lea
je
xchg
test
call
push
jmp
push
pusha
pusha
pushf
mov
pushf
pushf
lea
jmp
clc
add
call
jmp
push
mov
dec
jmp
mov
mov
pushf
movb
lea
jmp
mov
mov
mov
movb
lea
jmp
add
pushf
pushf
mov
pushf
mov
push
pushf
lea
jmp
mov
pushl
pushf
pushf
pushf
pushf
popl
pushl
mov
pushl
popl
pushl
push
lea
jmp
dec
lea
call
push
mov
pushf
mov
push
lea
jmp
pushf
jmp
mov
movb
pushl
lea
jmp
mov
jmp
mov
pushf
popl
pushf
call
ror
pusha
mov
movb
test
cmc
add
pushf
pushf
call
pusha
pushf
pushf
mov
mov
push
mov
lea
jmp
not
mov
cld
pusha
cld
movb
cld
movl
jmp
pusha
call
mov
mov
pushf
pushf
movl
pushf
popl
movl
mov
pushl
popl
push
pushf
pusha
lea
jmp
movb
pushf
mov
movb
pushf
pushf
pushf
lea
jmp
movw
pushl
not
cmc
cmp
call
pushf
inc
movb
mov
lea
jg
not
call
xchg
push
push
call
add
ja
add
pusha
pushl
pushf
popl
jmp
pushl
popl
mov
movw
mov
lea
jmp
mov
add
stc
mov
add
mov
add
mov
add
adc
add
stc
mov
add
add
clc
mov
add
mov
add
jmp
add
jmp
add
add
add
mov
add
sti
mov
add
mov
add
adc
add
mov
add
mov
add
mov
add
out
add
add
and
add
cpuid
add
sbb
add
mov
add
out
add
sbb
add
jmp
add
adc
add
sbb
add
add
add
and
add
add
and
add
pop
mov
add
icebp
mov
add
adc
add
mov
add
mov
add
icebp
mov
add
mov
add
add
add
mulb
add
add
mov
add
add
add
sti
mov
add
adc
add
jmp
mov
add
out
mov
add
add
add
mov
add
add
add
add
mov
add
add
and
add
jmp
add
adc
add
mov
add
add
add
mulb
add
pop
mov
add
and
add
mov
add
and
add
adc
add
adc
add
mov
add
mulb
add
and
add
and
add
add
add
add
bt
push
adc
add
mov
add
add
stc
mov
add
add
add
add
add
clc
mov
add
adc
add
add
add
and
add
mov
add
adc
add
out
mov
add
mov
add
and
add
adc
add
out
add
out
add
add
clc
mov
add
adc
add
sbb
mov
add
out
mov
add
hlt
mov
add
pop
mov
add
mov
add
sti
mov
add
and
add
icebp
mov
add
mov
add
add
add
sti
mov
add
stc
mov
add
clc
mov
add
stc
mov
add
out
add
and
add
add
adc
add
sti
mov
add
stc
mov
add
mov
add
and
add
stc
mov
add
out
add
add
add
stc
mov
add
hlt
mov
add
stc
mov
add
cli
push
jmp
aad
rcl
mov
pushf
mov
mov
cmc
add
call
cmc
pushf
sub
bt
cmp
cmp
stc
mov
movb
stc
clc
sub
push
mov
pushf
inc
jmp
clc
clc
sub
movb
call
mov
pushf
pushf
pushl
mov
lea
jmp
cmp
stc
mov
shl
inc
mov
mov
jmp
movb
pushl
popl
mov
pushf
push
lea
jmp
mov
jmp
movzbw
inc
movzbw
bswap
not
setle
not
setno
pusha
inc
movsbw
dec
shl
bsr
sub
setp
jmp
pusha
pushl
popl
mov
lea
jmp
call
stc
add
mov
mov
pushf
pusha
mov
pusha
pushl
ret
pushf
jmp
mov
pushf
push
lea
jmp
jmp
pushl
popl
mov
lea
jmp
rol
test
sub
clc
push
clc
neg
clc
mov
clc
add
stc
cmc
cbtw
test
cmp
push
lea
jmp
xadd
not
rcr
mov
xor
xor
mov
pusha
add
pushf
jmp
pushl
popl
pushf
push
pushf
push
lea
jmp
stc
aaa
notl
test
setne
mov
clc
sub
push
clc
and
call
jmp
pushl
mov
pushf
mov
pushl
lea
jmp
test
pusha
xor
add
seta
dec
or
pop
xor
btr
sbb
movzbl
not
rol
and
pushf
mov
test
mov
mov
sub
call
pusha
push
mov
movb
pushl
ret
movb
mov
pusha
mov
mov
movb
push
pushf
lea
jmp
mov
pusha
pushl
pushf
popl
push
call
mov
pushf
pushf
popl
mov
call
call
pusha
call
rcr
mov
not
mov
jmp
mov
pushf
lea
jmp
btr
mov
cmc
shrd
mov
pushf
jmp
mov
call
push
jmp
add
pusha
xor
cmc
sub
test
pushl
sub
mov
movb
jmp
jmp
clc
call
pushf
mov
mov
mov
lea
jmp
pusha
push
call
shr
pushf
pushf
mov
call
neg
bt
push
stc
cmp
add
pushf
clc
pushl
sub
mov
mov
push
lea
pushf
mov
pushf
pushf
lea
jmp
movb
pushl
popl
mov
push
mov
mov
lea
jmp
push
lea
jne
stc
pusha
xor
mov
xchg
pushf
jmp
movw
pusha
jmp
call
mov
movl
mov
push
mov
lea
jmp
mov
mov
pushf
mov
mov
lea
jmp
jmp
mov
pushf
push
push
pushf
lea
jmp
jmp
lea
jno
pushf
pushl
popl
pushl
movb
lea
jmp
pushf
pushl
popl
movb
mov
lea
jmp
movl
push
mov
pushl
pushf
pushf
movb
pushl
ret
jmp
pushf
mov
pushf
movb
pusha
mov
mov
pushf
pushl
lea
jmp
pusha
dec
call
rcl
ror
jmp
jmp
lea
jne
bsf
clc
xorb
lea
bswap
movsbw
pop
pushf
pushf
mov
movb
lea
jmp
call
pushf
mov
pusha
movw
movb
lea
jmp
push
mov
push
pusha
lea
jmp
mov
lea
jmp
pushl
popl
pusha
lea
jmp
mov
pushl
pushf
popl
pushf
call
push
mov
pusha
lea
jmp
jmp
lea
mov
pushf
pusha
call
mov
pushf
mov
push
lea
jne
movsbw
neg
mov
push
cmc
movl
call
pushf
mov
mov
pushf
mov
pusha
mov
lea
jmp
push
test
sub
clc
test
push
cmc
shr
call
mov
pushf
popl
jmp
test
xchg
stc
mov
test
push
sub
push
jmp
push
mov
movb
pushf
lea
mov
push
push
lea
jmp
mov
push
pushf
pushf
popl
pusha
call
bswap
mov
clc
sub
clc
add
pusha
pushf
push
push
pushf
popl
pushl
push
lea
je
push
pushl
popl
mov
lea
jmp
add
not
movzbl
test
clc
push
sub
movb
jmp
jmp
test
clc
clc
add
clc
jmp
pushl
popl
pushf
mov
lea
jmp
movsbw
mov
xchg
mov
lahf
lea
mov
mov
pusha
pusha
divl
lea
jp
pushf
pusha
mov
pusha
jmp
mov
jmp
dec
mov
bt
pusha
add
pushl
jmp
sub
sub
dec
inc
mov
clc
add
pushf
pushf
movb
lea
jmp
sub
shrd
pusha
ror
mov
add
mov
pushf
jmp
rol
call
movzbw
xor
neg
shrd
mov
rcl
rol
not
add
not
pushf
mov
lea
jnp
pusha
mov
push
mov
lea
jmp
add
call
push
mov
pusha
pushf
lea
jmp
jmp
pushf
popl
pushf
pushf
pushf
push
pushl
popl
push
movb
movb
lea
jmp
neg
lea
add
movzbw
shrd
bsr
cmp
mov
rcl
bswap
test
movsbw
add
bsf
mov
or
movzbw
or
add
movzbl
pusha
lea
je
inc
rcl
sar
sub
push
neg
cmc
ror
movsbw
stc
ror
sets
rol
adc
bsr
add
or
add
btr
btc
bts
movb
movzbl
movsbw
mov
bt
rol
clc
clc
call
push
call
sub
rol
mov
not
mov
shl
neg
call
pushf
call
test
sub
cmc
cmc
mov
bt
cmc
pushf
sub
pusha
lea
jg
lea
jmp
pusha
push
mov
pushf
pushf
lea
jmp
neg
mov
test
clc
xor
push
rol
cmc
stc
clc
neg
clc
cmc
call
push
jmp
pushf
popl
pushf
call
test
mov
adc
shl
mov
jle
pusha
cmc
movl
sub
call
movsbw
mov
pushf
mov
mov
call
mov
movl
pushf
mov
pushf
lea
jmp
cmp
cmp
add
pushl
test
sub
call
stc
mov
bt
pushf
sub
mov
call
pushf
stc
add
pusha
pushf
push
pushf
pushf
popl
call
call
add
add
pusha
movl
sub
movl
pusha
mov
call
pushf
popl
jmp
call
pusha
not
mov
xor
neg
cmc
xchg
shrd
btr
pop
mov
shl
setl
xchg
lea
ror
mov
adc
pushl
popl
sar
sub
movl
test
movzbw
sub
mov
sbb
add
rcr
rol
shld
rcr
xor
bsr
call
lea
xchg
bsf
push
push
sub
rcr
call
add
pushf
jmp
cwtd
mov
shr
bts
mov
pushf
pushf
pushf
not
lea
js
pusha
not
pushl
mov
sub
test
and
pushl
pushf
pushf
push
mov
pushl
call
aas
lea
bts
mov
sar
mov
bt
bt
bt
not
pushf
push
not
cmc
bt
bt
and
jmp
push
pusha
mov
push
mov
push
lea
jmp
jmp
clc
sub
jmp
mov
movb
pusha
call
call
bswap
mov
pusha
pusha
pushf
lea
jmp
inc
pusha
pushl
decl
jmp
