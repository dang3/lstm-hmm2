lcall
cmp
xlat
jnp
inc
mov
in
cwtl
mov
adc
add
and
xor
pop
call
mov
add
add
stos
cld
or
dec
mov
in
out
stos
push
xor
mov
les
add
xor
jle
loop
outsb
pop
mov
test
xchg
or
jae
aaa
imul
decb
pop
test
fildll
les
sarl
in
fucomi
clc
movsl
pop
add
fidivl
je
icebp
and
fwait
jge
pop
jns
call
sub
push
pop
cmp
jnp
test
aaa
push
mov
fadds
sub
pop
mov
cltd
popf
mov
in
add
push
notl
and
rclb
fcomp
pushf
mov
into
js
mov
add
or
rcr
push
dec
cmpl
fldl
add
add
mov
out
loop
shrl
adc
mov
fs
shll
in
jmp
scas
mov
add
add
add
add
push
and
int
or
je
push
pop
lea
int
or
je
push
pop
lea
int
ret
nop
sbb
add
dec
pop
nop
add
add
add
add
incl
add
add
add
add
addb
add
pop
mov
int
mov
push
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
and
and
fs
add
add
add
push
inc
add
dec
add
add
loope
dec
loopne
push
add
add
add
add
add
add
xor
add
loopne
add
loopne
add
add
add
and
add
and
add
add
add
add
add
add
add
add
add
sbbb
add
add
add
hlt
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
inc
sbb
add
add
dec
dec
dec
push
add
add
pop
push
add
loopne
add
pusha
push
add
loopne
add
and
add
jb,pn
insb
outsl
arpl
add
add
add
add
inc
add
add
add
inc
add
inc
clc
adc
add
sub
icebp
mov
inc
movb
lret
jp
mov
lds
mov
mov
xchg
out
pop
outsb
pushf
cmpsl
test
jae
ficompl
into
and
int3
xchg
cmpsl
ss
nop
and
push
sbb
dec
push
and
sbbb
and
cmpsb
jmp
mov
and
jge
mov
mov
push
shll
jmp
sbb
in
outsl
test
mov
cltd
ret
movsb
movsb
inc
lods
inc
inc
imul
iret
dec
mov
xchg
jae
adc
and
sub
icebp
mov
mov
pop
mov
mov
pop
jbe
pop
mov
jne
mov
ror
cltd
cli
mov
cmp
mov
je
sub
pusha
bound
xor
xchg
lods
lods
lret
in
out
and
mov
pop
icebp
dec
std
mov
enter
push
aad
xchg
lcall
xchg
bound
cmc
inc
add
and
add
or
push
movsb
lock
adc
mov
mov
out
rcl
stos
arpl
iret
push
mov
dec
jecxz
clc
and
mov
jle
scas
xor
sbb
pop
cs
fninit
mov
imul
leave
and
mov
rep
dec
sbbl
int3
sbb
fwait
mov
and
mov
cmpsb
adcl
scas
pop
cmpsl
mov
inc
out
jno
cmpsb
xchg
dec
dec
mov
pop
sti
cltd
jecxz
cmp
sete
neg
dec
shlb
ret
lahf
stos
cmp
scas
lods
loopne
inc
out
pusha
pop
repz
xchg
negb
mov
mov
inc
jmp
pop
out
movsb
push
dec
in
cld
fbld
nop
push
loop
insb
stc
lock
js
jno
mov
and
bound
mov
push
sub
cwtl
movsb
cwtl
mov
lods
adc
jmp
and
dec
movsb
pop
mov
nop
arpl
inc
and
dec
movsl
adcb
stos
dec
push
stos
add
repz
mov
mov
pusha
mulb
icebp
mov
lods
shlb
out
ret
mov
lock
in
mov
out
pop
shlb
vxorps
int
loopne
pusha
sar
or
std
mov
mov
mov
stc
and
mov
jle
sbb
jecxz
decl
jo
mov
mov
aas
mov
jnp
mov
mov
fldt
fnsave
cmpsl
out
sub
and
mov
pop
dec
jns
mov
pop
jno
pop
data16
xchg
shll
xlat
xchg
cld
sbb
lock
adc
pop
repz
lods
sub
mov
ret
frstor
mov
xchg
and
int3
sub
mov
arpl
inc
push
movsb
xchg
xor
aam
mov
dec
iret
test
mov
mov
sub
lds
daa
xchg
mov
mov
sub
cmc
mov
cmpsl
pop
dec
outsb
mov
xor
cltd
ret
sti
lea
shll
test
xchg
fisubl
sub
xor
test
adc
fwait
mov
fisttpl
and
cs
fs
bt
loop
test
push
std
sub
mov
cwtl
andl
and
mov
xor
sub
jecxz
iret
mov
mov
aas
mov
sub
xchg
lods
stos
mov
xchg
dec
in
imul
xchg
dec
fidivl
orb
cmp
movsl
jno
jae
cwtl
out
mov
sbb
sub
lods
xlat
stos
mov
xchg
sub
insb
mov
test
sub
inc
pop
mulb
xor
pushf
cmp
mov
pop
movsl
sbb
fiaddl
sub
jle
mov
add
daa
fsubl
adc
xchg
adc
dec
out
stos
xchg
cwtl
cs
lods
mov
imul
shrl
movsb
xor
cmpl
xchg
push
lcall
xor
out
adc
mov
mov
pop
mov
inc
inc
jmp
mov
pop
repz
lahf
xor
mov
sub
outsb
xor
and
lods
pop
pop
or
xchg
pop
lods
lods
xchg
pop
fnstsw
mov
xchg
cmpsl
mov
scas
movsb
adc
mov
sub
mov
and
cmp
mov
mov
xor
xchg
xchg
xor
mov
mov
and
or
jb
ljmp
call
inc
inc
inc
cli
arpl
fwait
pop
and
pusha
mov
add
int3
arpl
mov
mov
or
mov
loop
arpl
and
movsl
pop
repz
dec
shll
sub
mov
stos
movsl
xchg
mov
shll
fwait
imul
cs
and
adc
xchg
mov
mov
dec
loope
movsb
mov
adc
push
les
mov
push
mov
pop
and
push
push
js
pop
mov
popf
arpl
xchg
out
sub
das
mov
cmpsl
and
mov
pop
mov
sbb
jp
stos
mov
adc
test
xchg
and
leave
aas
mov
movl
dec
mov
mov
movsb
push
lods
loop
push
ret
adc
mov
sbb
test
mov
sti
movsl
xchg
xor
sub
stos
test
leave
sub
sub
mov
pop
xchg
or
mov
cld
pusha
andl
shll
mov
mov
cli
movsl
imul
scas
lds
cmc
inc
fistpl
mov
inc
mov
add
push
outsl
pushf
mulb
sub
mov
fsubrl
movsb
notl
jne
jmp
sbb
insb
lods
scas
inc
adc
mov
std
cld
movsb
popw
sub
add
mov
push
sub
int
mov
and
or
scas
jbe
sahf
add
adc
mov
mov
sub
scas
mov
pop
lods
mov
cli
add
lods
aaa
mov
and
jecxz
shlb
xor
scas
and
inc
outsl
jge
bound
sti
mov
lods
add
dec
lahf
shlb
cmpsb
sub
and
dec
xchg
mov
mov
icebp
bound
scas
jmp
daa
imul
cmp
mov
mov
test
xchg
rcr
lods
lods
and
inc
cmp
hlt
lods
cmp
xchg
arpl
loop
scas
mov
addr16
das
out
mov
mov
loop
push
testb
lods
scas
jecxz
mov
cmp
mov
push
movsb
in
xchg
lea
ret
daa
out
push
mov
out
stos
loop
stos
mov
add
jmp
pop
cmp
movsb
mov
movsl
loopne
aam
dec
popl
mov
mov
push
fldenv
rcrl
mov
cmp
movsl
mov
outsl
aas
dec
adc
fisubs
xlat
mov
mov
adc
mov
scas
das
mov
sbb
pushf
adc
insb
ss
mov
in
adc
dec
andb
das
mov
mov
sub
fisttps
mov
jo
movb
cmp
testb
mov
cli
loop
movsl
mov
mov
adc
lret
xchg
push
mov
out
cs
sarl
jmp
mov
jge
xlat
imul
and
and
mov
js
mov
fstl
mov
fimull
xchg
mov
cmpsl
and
aaa
pusha
fnstcw
push
jnp
fsubs
xor
mov
in
adc
jecxz
push
cmp
push
add
int
xor
aas
ret
inc
mov
push
hlt
sahf
cs
dec
xchg
jge
add
in
nop
xlat
sbb
mov
xor
scas
xor
push
test
subb
add
mov
cmpsl
hlt
stos
mov
cmp
xor
icebp
pop
mov
sub
daa
cld
lods
das
movsb
dec
frstor
in
and
loope
cli
jno
xchg
push
mov
jmp
aam
mov
inc
in
dec
daa
scas
mov
mov
and
cmpsl
jae
mov
mov
test
clc
in
push
sti
das
and
mov
xchg
cmp
mov
xchg
outsl
xchg
push
cmp
sti
movsb
test
scas
adc
pop
adc
mov
mov
rcl
push
mov
stos
mov
clc
mov
adc
mov
mov
pop
out
fs
loope
inc
mov
xlat
out
and
xor
mov
faddp
mov
lods
test
imul
fsubl
sub
mov
mov
mov
mov
sub
pusha
daa
dec
loop
dec
xor
inc
bound
cmp
mov
stos
mov
sub
lock
or
add
cmp
jnp
sqrtps
aaa
loop
shll
repz
jnp
xchg
lcall
stc
es
jmp
js
mov
mov
mov
cmpsl
xchg
fadd
dec
jmp
lea
mov
pop
mov
mov
or
mov
mov
push
dec
lods
cwtl
shrb
call
scas
pop
push
jno
inc
loope
add
xchg
jae
mov
mov
imul
xchg
sub
rcr
and
adc
cwtl
lea
shr
push
add
cmpl
aaa
jmp
movsl
mov
leave
mov
push
cmp
dec
jb
jge
inc
cmp
loop
jp
ljmp
xchg
popf
repnz
and
push
stos
pop
arpl
mov
mov
scas
pushl
jge
mov
mov
jl
push
andl
pop
jb
mov
pop
fstl
std
cld
call
loope
test
pop
movsl
jecxz
outsl
and
cmpl
insb
scas
inc
pop
xor
jae
mov
inc
add
fldenv
orl
cmc
cmpsl
mov
ret
add
mov
addr16
pop
popa
dec
mov
cmp
cmp
mov
inc
xchg
mov
cmp
out
push
call
cmp
ljmp
dec
mov
xor
adc
cmp
fidivs
arpl
sub
dec
jmp
xlat
ret
and
dec
pop
scas
fs
dec
and
lods
out
or
daa
fdivrs
pop
mov
cmc
mov
and
cmp
fldcw
loope
fadds
subb
or
das
sbb
push
icebp
lds
adc
mov
imul
scas
mov
mov
lahf
fidivrl
cmp
push
or
popf
xchg
mov
je
mov
cld
movsb
andl
and
jno
sti
sub
pusha
das
sub
pop
mov
cmp
andb
mov
mov
jns
mov
dec
mov
pop
fisttps
repz
xor
jl
and
nop
jno
mov
into
stos
and
dec
mov
sti
mov
mov
lret
out
cmp
pop
mov
mov
add
mov
mov
pop
mov
imul
mov
rcl
sub
inc
cmp
adc
mov
mov
cli
loope
outsl
cmp
jecxz
jg
cmpsl
mov
add
cmp
imul
mov
aas
mov
pop
inc
loopne
and
icebp
loope
lret
ljmp
xchg
mov
mov
mov
add
lock
mov
movsb
dec
mov
stos
fsubrl
pop
mov
push
seta
mov
into
mov
mov
mov
jae
lret
ret
sbb
mov
rcrl
xchg
dec
pusha
rcll
dec
shrl
nop
mov
test
mov
sbb
scas
add
mov
mov
sbb
arpl
add
dec
xor
jne
mov
stos
jg
les
sub
andb
xchg
mov
leave
mov
in
pop
xchg
pop
rolb
loopne
mov
dec
cmp
inc
test
jnp
test
movl
je
shll
sub
pop
ss
jnp
mov
aas
mov
popf
in
and
data16
dec
jae
sbb
fwait
rcrl
xorb
dec
push
mov
adc
pushf
sub
and
das
push
pop
ret
adc
incl
imul
and
cmp
dec
mov
stos
outsl
mov
es
dec
jbe
mov
xchg
mov
xor
mov
push
imul
lret
pop
cmc
cmp
inc
sub
mov
outsl
jnp
mov
cmpsb
xor
pop
inc
rorb
cmp
sub
imul
inc
test
stos
mov
xorb
pop
into
ret
and
je
stc
fisubl
ljmp
sbb
lods
dec
xchg
mov
fstl
mov
in
ret
lds
cwtl
fucompp
mov
mov
cs
dec
movsl
mov
addb
and
and
and
mov
lahf
add
rorl
push
test
push
or
sbb
and
lock
aaa
xor
sub
test
addl
mov
adc
sahf
cmpsl
inc
xchg
mov
sti
xchg
fwait
mov
and
fisubrl
lods
cmpl
in
cwtl
xchg
xor
cmp
cmc
ret
in
or
mov
dec
shll
xlat
cld
iret
mov
xorl
stos
test
scas
sbb
pop
jmp
out
add
shll
sbb
mov
push
enter
aad
jecxz
movsl
dec
clc
and
cltd
movsb
push
mov
pop
dec
mov
xorb
cmpsl
jecxz
pop
mov
ficomps
mov
fidivrl
popf
repz
popa
flds
inc
mov
pop
mov
daa
and
and
adc
xor
cmp
loopne
mov
arpl
and
add
fcmovnbe
mov
and
jmp
inc
cmp
sub
xchg
ret
mov
adc
mov
stos
sub
jecxz
nop
push
jg
mov
mul
jbe
cmp
fstl
inc
scas
jg
push
lahf
pop
stc
cli
mov
pop
testb
inc
inc
cmpsl
xor
and
pop
sti
mov
lods
lcall
stos
and
mov
and
rep
inc
add
xchg
add
movsb
sub
scas
rorb
nop
int
inc
imulb
and
push
push
mov
cmpsb
cmp
loope
lods
out
pop
and
fistps
mov
add
mov
out
outsl
iret
jecxz
testl
cwtl
movsb
and
pushf
push
mov
hlt
pop
fmulp
stos
xchg
push
mov
int3
stos
lds
cmp
mov
bound
and
adc
xchg
add
movsl
bound
mov
mov
mov
cmpsl
imul
fwait
cltd
add
lods
test
movsb
sbb
aad
sub
aas
outsb
push
push
mov
and
xchg
lock
mov
psllw
mov
outsl
in
test
and
test
cld
and
cmpsl
mov
mov
sbb
fbld
rcl
rcr
in
into
test
and
movsl
test
dec
arpl
loope
inc
sti
pusha
xor
stos
inc
hlt
mov
dec
sbb
sbb
xchg
jae
xchg
and
daa
testl
pop
push
int3
and
mov
sarb
jle
mov
addr16
mov
cmpl
sbb
scas
lods
es
xchg
xchg
idivl
dec
fbld
and
repnz
repnz
lock
xor
cmp
pop
hlt
and
adc
sbb
popa
ds
push
std
sub
lahf
cltd
sbb
hlt
inc
push
std
adcb
stos
pop
jae
outsb
dec
je
std
xchg
movsl
sub
stc
inc
ud0
fnstsw
dec
out
dec
ret
jg
lea
mov
mov
or
jne
mov
or
je
push
pop
xor
cmpw
jne
cmpw
jne
add
mov
lea
jmp
inc
loop
or
je
push
pop
mov
xor
cmpb
jne
cmpl
jne
and
dec
cmpb
je
cmpb
jne
cmpb
jne
mov
jmp
loop
jmp
inc
loop
jmp
mov
mov
addl
ret
lea
pusha
push
mov
sub
mov
mov
mov
add
not
xor
sub
stos
loop
or
je
mov
ror
mov
leave
mov
mov
lds
mov
addl
call
jmp
call
nop
add
add
lea
ret
nop
push
push
push
nop
cmpl
jne
lea
pusha
nop
push
call
subl
nop
jne
call
jne
mov
nop
ret
jne
push
call
push
push
mov
mov
cmp
je
mov
jmp
push
mov
cmp
jne
je
nop
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
xor
pusha
mov
mov
mov
mov
add
push
pushl
mov
add
xor
dec
inc
lods
add
xor
xor
mov
or
je
ror
add
inc
jmp
decl
je
cmp
jne
add
pop
cmp
jne
mov
add
movzwl
mov
add
mov
add
mov
popa
ret
mov
mov
test
je
and
add
push
push
call
or
je
push
push
call
or
jne
pop
pop
mov
ret
cld
push
push
push
push
mov
add
mov
sub
movl
mov
mov
mov
xorb
inc
loop
push
mov
subl
ret
js
les
pop
pop
push
pop
mov
mov
mov
mov
call
js
pop
pop
pop
ret
lea
add
add
sbb
add
aaa
ss
test
mov
movsb
aaa
loopne
out
aaa
pop
cmp
cmp
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
push
jo
arpl
jns
ja
outsb
addr16
add
add
add
dec
add
add
adc
add
add
add
add
add
add
and
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
dec
addb
xor
add
xor
add
dec
add
add
add
add
push
jo
arpl
add
pusha
add
add
add
pusha
add
loopne
jb
jb
add
add
xor
add
jo
add
add
add
add
pusha
add
loopne
add
add
sbb
add
push
add
add
adc
add
clc
jg
add
or
add
pop
jg
add
sarl
andl
addb
lcall
add
add
add
add
or
add
add
add
add
jo
add
incl
add
add
add
add
add
add
add
add
xor
imul
lahf
loopne
call
out
lods
mov
test
decl
fs
fsubs
pusha
jne
jg
ret
lcall
inc
mov
mov
dec
inc
jno
jmp
ret
nop
inc
sbb
lcall
xor
adc
mov
ja
inc
lods
mov
iret
sub
cmp
sub
test
outsl
xchg
je
xor
ljmp
fisttpl
xchg
mul
cwtl
scas
ss
lock
dec
adc
push
sub
les
popa
adc
lahf
cmp
mov
xchg
push
subl
fwait
and
ficoml
pop
inc
fs
jns
cltd
testb
push
lahf
mov
lahf
jae
sbb
sbb
mov
ja
test
popf
pop
push
sub
stc
xchg
inc
and
pop
xor
ret
outsb
xor
cld
push
nop
call
int
mov
inc
js
insl
or
jg
mov
dec
jb
adc
xchg
aad
hlt
jge
dec
push
mov
inc
xchg
popa
cmp
jle
sub
cld
ret
or
lret
mov
jns
sbb
xor
sahf
mov
sbb
sub
adc
je
sub
insl
jg
dec
imul
aas
jns
sbb
negl
mov
mov
xor
lcall
and
mov
das
pop
and
lods
cmp
decb
repnz
movsb
mov
lahf
sub
scas
cmp
and
inc
adc
jne
cmpsl
shl
faddp
push
je
daa
test
ss
adc
mov
cmpsl
mov
lds
daa
cmp
insl
sub
cmpsb
addr16
jae
mov
cmpsb
aas
pusha
gs
in
mov
jecxz
fidivrl
xchg
pop
adc
arpl
cmp
loope
or
and
xchg
cmp
loope
shl
mov
xchg
ret
test
stos
js
inc
adc
out
cmp
sub
mov
shll
add
xor
add
and
or
stos
in
pop
xchg
push
sub
pop
cmp
cmp
mov
xor
adc
js
movsb
test
pop
fldpi
sub
push
xchg
sbb
mov
outsl
in
inc
jnp
cld
sahf
jmp
test
mov
clc
and
adc
outsl
sub
add
lret
cmp
cmp
pop
inc
pop
add
xchg
por
jp
or
cwtl
or
lock
mov
xchg
aad
cwtl
mov
pop
mov
mov
pop
jns
rcl
out
clc
push
fstpl
mov
dec
sbb
sarb
cld
push
xchg
leave
jg
dec
cmp
lds
es
lret
jne
add
sarb
aas
add
push
push
popf
xor
jnp
inc
mov
je
inc
sub
xchg
pop
mov
cmp
jge
inc
push
mov
popf
or
movsb
dec
sahf
xchg
int
pop
in
jp
xchg
pop
in
aas
sarl
xchg
fadds
fs
xor
jge
rol
dec
pop
sub
decb
sti
push
mov
arpl
or
jecxz
jbe
rcrl
scas
jae
aas
ljmp
stc
and
fistl
xchg
mov
shrb
stos
scas
pop
test
insb
or
fisttpl
cltd
out
loopne
push
inc
pop
pop
mov
inc
pop
rcrb
add
sbb
jns
enter
cmpsb
jbe
adc
das
adc
xor
add
repz
jg
pusha
ljmp
outsl
dec
add
push
popw
jae
test
dec
mov
or
mov
in
das
jnp
std
sub
push
jle
scas
shlb
adc
and
repz
push
jmp
xchg
xchg
aam
outsl
into
daa
add
mov
cmp
scas
pop
test
and
out
imul
sbb
pop
mov
push
jge
or
xor
bound
mov
sbb
sti
fsubp
insb
mov
ja
movsb
imulb
pop
lret
mov
mov
jg
loope
outsb
sbb
je
shl
sub
or
dec
in
imull
sbb
in
in
rorl
cltd
scas
push
cltd
loopne
mov
and
sbb
cld
fsubrs
xlat
sbb
inc
push
push
dec
xchg
mov
dec
addr16
lret
push
aas
mov
or
jecxz
loop
fs
jle
cmpb
les
inc
bound
sarb
and
outsb
cmpsb
sub
dec
pop
in
xor
outsl
jmp
adc
mov
mov
loopne
jg
pop
xlat
stc
pop
lock
cmp
sub
mov
adc
ja
xchg
sbb
popa
jmp
mov
xchg
imul
mov
int
pop
add
shr
cltd
push
out
jge
pop
and
mov
pop
daa
cwtl
testl
jae
outsl
mov
mov
loopne
hlt
inc
xchg
nop
and
sbb
sub
cltd
push
aas
push
push
jl
xorl
mov
add
roll
cmp
mov
inc
push
lahf
push
imul
pop
bound
jae
lret
loope
inc
pop
es
jo
jb
dec
lods
hlt
sbb
aad
adc
ds
rorb
xchg
sub
push
out
into
scas
out
outsb
fdiv
push
daa
push
mov
in
out
dec
sub
scas
push
push
cmpl
cmc
xchg
sbb
mov
xor
push
loopne
xchg
cmp
andb
adc
bound
inc
inc
mov
inc
fnsave
pop
or
cmp
test
pop
test
add
jmp
rcl
ljmp
xchg
cmpsl
push
lds
movsb
fs
lods
int
dec
sbb
mov
imul
pop
shrb
out
stos
add
jae
repz
sbb
or
sbbl
leave
jo
inc
aaa
sub
roll
enter
or
movsb
cltd
sub
xor
imul
je
out
push
pop
loope
add
pop
sar
mov
pop
add
jbe
add
fcoms
popa
or
filds
cmc
arpl
jecxz
insl
sbbb
and
es
in
mov
insl
pop
jp
mov
jnp
out
in
mov
rorb
xchg
dec
in
mov
shlb
outsb
ret
sub
jg
aad
cs
test
sub
push
push
and
ret
mov
in
sub
out
adc
rcrl
dec
or
push
jbe
cwtl
adcb
cmp
pop
or
jno
or
push
inc
push
add
xor
push
movl
fbld
rcl
lods
cmp
push
sub
movsb
xlat
mov
stos
in
and
ss
xchg
inc
out
push
iret
add
imul
inc
imul
dec
out
pop
filds
imul
test
fstpt
pusha
nop
nop
mov
cli
mov
jne
shl
mov
cs
fsubs
cmp
movsb
sti
cmp
mov
and
or
mov
sbb
es
pop
mov
fbld
adc
shlb
mov
movsl
sub
jae
mov
es
cmp
xor
int3
movsb
ds
pop
jmp
out
lods
loope
inc
stc
cmp
enter
call
clc
xchg
xor
stos
aam
mov
mov
inc
xchg
rclb
jge
pop
sbb
fistpl
inc
iret
lods
aad
or
in
dec
stos
test
dec
lock
out
in
roll
imul
cmp
xchg
mov
mov
inc
rcrb
pushf
dec
jl
mov
dec
push
or
mov
pusha
stc
les
push
imul
mov
fnsave
das
xchg
xchg
inc
cli
pop
clc
pop
std
sbb
fistl
lret
mov
iret
icebp
imul
jo
fsubl
jg
in
push
push
fldenv
push
ja
repz
sahf
popa
shll
dec
mov
aam
xchg
jb
cmp
cld
sub
sub
inc
lcall
push
in
mov
or
fsubp
xchg
cmp
test
pop
cmp
test
adc
add
shll
cmp
adc
fisttpl
leave
and
sarb
mov
mov
insl
mov
mov
mov
push
or
mul
aad
mov
insl
negl
inc
push
test
punpcklwd
add
mov
push
aad
scas
add
test
sub
xchg
aam
pop
xor
loope
adc
stos
jl
bound
adcl
aam
jne
addl
mov
or
aas
jns
pop
or
jg
push
xor
cmp
addb
into
popa
addl
sbb
arpl
sbb
cmc
imul
sbb
aam
insl
dec
mov
outsb
sti
ficomps
out
mov
out
xchg
and
outsb
dec
mul
xor
xchg
jmp
mov
rorb
fwait
jmp
jmp
pushf
dec
aaa
es
fldl
icebp
sub
dec
bound
andl
xor
pop
pop
fcoms
or
js
or
add
test
orl
xchg
jns
lret
mov
leave
shr
xchg
rcrl
mov
mov
imul
fistl
dec
adc
clc
fmull
mov
mov
mov
cmp
sub
mov
xor
clc
std
inc
fists
mov
xchg
fisttpl
pop
call
xchg
adc
fisttpl
arpl
cltd
ds
jae
mov
mov
mov
push
add
pop
mov
repz
jg
sub
out
xchg
shl
xchg
xchg
sar
outsl
mov
add
aam
mov
movsb
push
out
sub
mov
cmpsb
cmp
push
cmp
mov
mov
and
and
insb
add
xchg
jmp
and
orb
sbb
sbb
jno
aas
sub
push
leave
bound
lret
nop
and
mov
mov
xchg
cwtl
lret
jg
push
cmp
ljmp
aas
lock
mov
xchg
and
es
pop
nop
mov
xchg
sbbl
scas
inc
jns
stc
xor
inc
or
xchg
mov
pop
mov
jne
mov
or
cmp
inc
cs
xchg
mov
imul
cs
mov
in
xchg
cmp
dec
add
dec
sarl
cmp
lret
push
int3
pop
jo
dec
xchg
mov
cmp
fistpll
mov
or
ds
and
arpl
imul
out
mov
in
add
xchg
xor
test
mov
pop
mov
sub
pushf
inc
imul
push
dec
push
mov
nop
adc
mov
lret
ss
lods
inc
cltd
clc
clc
out
ja
sarl
aas
loope
ja
test
insl
sar
aad
add
outsl
xor
ljmp
andb
pop
and
push
xchg
adc
repz
jl
test
std
mov
sbb
fistpll
jge
scas
aam
mov
jo
jmp
cld
je
push
mov
lret
dec
pop
sbb
jge
loopne
icebp
xchg
pop
mov
fisttpl
ja
mov
in
and
xchg
mov
in
mov
push
mov
in
out
andl
cli
inc
mov
roll
mov
adc
test
inc
ret
and
shrl
test
in
push
xchg
hlt
aas
cmp
push
sub
dec
and
adc
pusha
ds
out
xchg
pop
add
mov
xchg
push
lcall
push
xor
lret
movsb
fistpll
dec
dec
mov
aaa
cmp
mov
fdivrl
mov
inc
mov
test
mov
fimuls
nop
sti
out
enter
fsubrl
sbb
outsl
adc
mov
jno
ret
rcr
adc
push
jecxz
cltd
lea
pusha
call
cld
jnp
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
rol
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
addb
add
add
add
add
add
add
jb
add
jle
add
jp
add
dec
sbb
add
push
push
mov
add
pusha
jmp
nop
jb
outsb
xor
outsl
imul
subl
push
push
push
call
or
sete
lea
mov
lea
mov
lea
push
push
call
add
rdtsc
jmp
nop
and
fs
insb
add
add
inc
add
call
add
lea
push
push
push
push
push
push
push
call
cmp
jne
call
cmp
je
cmp
je
jmp
mov
push
pop
push
lea
push
push
lea
push
push
call
push
call
push
call
push
call
or
je
mov
push
push
call
or
je
push
push
call
push
push
call
or
je
call
push
call
popa
movzbl
leave
ret
lea
push
mov
add
push
cld
xor
mov
mov
mov
mov
mov
mov
dec
mov
push
lea
push
push
call
push
push
push
push
push
push
lea
push
call
or
js
mov
push
pushl
call
mov
or
je
push
push
push
push
push
pushl
call
or
je
mov
push
push
push
push
pushl
call
or
je
mov
mov
cmpw
jne
movzwl
add
cmpl
jne
mov
xor
mov
movzwl
movzwl
lea
mov
add
cmp
jbe
mov
add
loop
mov
cmp
jbe
mov
sub
mov
add
mov
push
mov
cmpl
je
push
lea
push
push
push
pushl
lea
push
push
pushl
call
jmp
pushl
lea
push
mov
call
pop
cmpl
je
pushl
call
cmpl
je
pushl
call
cmpl
je
pushl
call
mov
mov
pop
leave
ret
jmp
push
mov
add
pusha
mov
andb
lea
movzwl
push
push
push
push
push
pushl
push
push
call
andb
jmp
nop
inc
dec
inc
arpl
outsb
popa
cs
add
add
call
or
je
jmp
lea
push
push
dec
outsl
imul
lea
push
push
call
or
je
jmp
inc
dec
inc
cs
add
add
call
or
jne
pushl
push
push
call
or
je
push
push
push
call
call
mov
add
or
jne
popa
leave
ret
pusha
xor
jmp
cmp
call
pusha
call
pusha
pusha
pushl
popl
mov
pushl
ret
push
jmp
call
movl
jmp
jmp
call
sub
je
insl
push
outsl
outsl
je
pop
jae
jae
gs
xor
pop
popa
fs
jo
xor
cs
insb
add
inc
and
inc
arpl
call
jmp
and
and
popa
cs
je
pushl
movl
movb
lea
je
jmp
push
pushf
pusha
mov
pusha
movl
pushl
mov
push
call
push
pushl
popl
mov
pushf
pushl
pushl
ret
push
call
pushf
pushl
popl
pushf
pushf
pushf
pushl
ret
pusha
pushl
popl
movb
movb
pushl
ret
pushf
movl
call
call
push
push
movw
movl
call
lea
je
pusha
mov
pusha
mov
call
mov
push
lea
call
pushf
not
mov
movw
call
cmpl
movb
lea
jne
push
pushf
pusha
movl
movw
lea
push
pushf
pushf
movb
jmp
pushl
popl
pushf
mov
pushl
ret
mov
jmp
push
mov
call
movl
call
movl
pusha
pusha
pushf
movl
pushf
call
mov
pushl
mov
pushf
mov
jmp
stc
or
pusha
lea
jne
jmp
pushf
movl
call
pusha
movl
pushl
pushf
pushl
popl
pushf
movb
mov
pushl
ret
pushf
mov
pushf
mov
call
push
popa
gs
outsl
outsb
xor
pop
pop
cs
push
popa
gs
outsl
outsb
xor
movw
lea
call
call
mov
mov
dec
lea
and
lea
sub
rcl
bswap
jmp
jmp
push
imul
insl
push
outsl
outsl
je
pop
inc
outsl
outsb
je
pop
and
fs
je
and
and
js
fs
je
movb
pusha
mov
jmp
push
movsbl
setg
mov
mov
movw
pushl
mov
call
pushf
pushl
popl
push
pushl
ret
stc
cmp
call
lea
pushf
pusha
mov
push
push
call
movl
call
movl
pushf
jmp
mov
jmp
call
movb
call
pushl
popl
push
push
mov
movb
pushl
ret
call
mov
or
clc
cmp
pushf
mov
mov
lea
jne
call
pushf
mov
push
jmp
call
push
call
mov
lea
pusha
not
xor
pushf
or
call
push
mov
cmp
or
call
movl
pushf
pushf
pushf
pushl
pushl
popl
pushf
mov
pushl
ret
jmp
adc
bts
mov
stc
pushf
pushf
or
pushl
lea
je
clc
cmp
call
pushl
pushl
popl
pushf
mov
mov
pushl
ret
movl
pushf
pushf
mov
pushl
popl
pushf
pushl
ret
pushl
popl
pushf
movb
push
pushl
ret
mov
call
cmp
sub
pushf
cmp
cmp
pusha
add
cmp
clc
push
cmp
add
call
lea
call
call
push
jmp
pusha
pushl
popl
jmp
jmp
jmp
call
mov
jmp
jmp
and
and
popa
je
mov
push
push
pushf
mov
call
mov
push
push
mov
lea
jmp
jo
mov
je
jns
or
and
outsb
outsl
je
gs
jae
and
je
and
inc
or
and
dec
push
dec
and
or
inc
or
rdtsc
pusha
pusha
push
mov
mov
movw
mov
mov
mov
jmp
mov
movb
call
pushf
call
cmp
jmp
jmp
mov
call
jmp
call
call
push
into
leave
cwtl
pusha
mov
mov
mov
mov
add
push
pushl
mov
add
xor
dec
inc
lods
add
xor
xor
mov
or
je
ror
add
inc
jmp
decl
je
cmp
jne
add
pop
cmp
jne
mov
add
movzwl
mov
lea
mov
lea
jmp
xor
mov
popa
ret
jmp
pushl
push
call
stos
cmpl
jne
add
ret
mov
mov
ret
add
test
icebp
jmp
pushl
movl
jmp
pushf
pushl
pushl
popl
pushf
pushl
ret
xchg
movsbw
mov
mov
pop
pushf
bswap
mov
bswap
not
call
clc
mov
test
rcr
pushf
lea
cmp
call
pushf
mov
pushf
call
pop
mov
jmp
jmp
pushf
pusha
movw
pushf
pushl
pushf
inc
jmp
mov
push
jmp
movw
pushf
mov
pusha
movl
pushl
pushl
popl
movl
pushf
pushf
pushl
ret
push
mov
pushf
pushf
mov
pushl
movl
jmp
call
pop
not
rcl
shrd
ror
mov
cmp
jmp
pushl
popl
movl
movb
mov
pushl
ret
push
mov
mov
pusha
movb
lea
jmp
or
pusha
pushf
push
mov
lea
je
push
call
push
pushf
inc
jmp
mov
jmp
bt
push
cmp
jmp
pushf
lea
je
push
movb
pushl
mov
lea
jmp
xor
call
mov
movzbw
rcr
or
shrd
mov
cmc
mov
neg
rcr
pusha
bsr
sub
movzbw
mov
cwtl
mov
movsbw
lahf
mov
lea
pop
dec
pushl
sub
lea
movsbw
movsbw
pusha
lahf
lods
cmp
bt
test
call
movl
push
jmp
movl
pushf
pusha
pusha
mov
pushl
pushf
movb
mov
call
call
pushl
movl
jmp
mov
call
movb
call
pushl
popl
mov
pushf
pushf
pushl
ret
call
push
mov
jmp
call
pusha
pusha
movl
pushl
popl
pushf
jmp
pusha
lea
push
push
push
jmp
call
push
pusha
mov
push
jmp
push
mov
pushf
pushl
call
pusha
call
pushf
movl
movb
movb
pushl
popl
pushf
pushl
pushf
pushl
ret
call
jmp
jmp
movzbl
mov
pusha
cwtl
lea
pushf
mov
mov
jmp
mov
movb
call
push
pushf
movl
mov
push
jmp
pushf
lea
je
lea
bswap
lea
lahf
setle
movzbw
push
bswap
lea
call
lea
call
jmp
lea
jne
lea
lea
pushf
movsbw
mov
pusha
lea
pushf
lea
jmp
movb
movl
jmp
pushl
popl
pushf
push
pushl
ret
xchg
rcr
sar
bsf
popa
rcl
cmp
call
pushl
lea
call
lea
mov
lea
pushf
lea
jmp
clc
pushf
call
call
inc
pushf
mov
pushl
mov
pushf
popl
jmp
mov
test
cmp
pusha
jmp
movb
movl
pusha
jmp
mov
movsbw
call
call
lea
je
mov
mov
pushf
jmp
push
movl
call
jmp
pushl
popl
mov
push
pushl
ret
movl
jmp
pushl
movl
pusha
jmp
call
lea
je
pushf
pusha
jmp
mov
pusha
jmp
movl
pushl
call
pushf
pushl
popl
pushf
mov
mov
pushf
mov
pushf
movb
jmp
pushf
movl
jmp
pusha
call
pushl
pushf
movl
pushl
jmp
movl
jmp
mov
push
jmp
movl
call
movsbl
movl
lahf
setge
pushf
lea
mov
pushf
mov
jmp
movl
pusha
pushf
pushl
movl
pushf
pushl
mov
movl
call
push
mov
push
pushf
mov
jmp
call
lea
jne
clc
add
bt
push
pusha
jmp
jmp
jmp
pushf
lea
call
cmc
test
push
pushl
or
call
movb
pushl
mov
jmp
jmp
call
mov
mov
pushf
jmp
jmp
jmp
movl
mov
pushf
jmp
call
movl
jmp
call
jmp
push
movb
lea
jmp
push
movl
pushf
pushl
popl
push
movw
pushf
push
pushl
ret
movb
jmp
pushf
pushl
pusha
movl
call
call
pushf
movb
pushl
popl
pushf
pushl
ret
call
test
bt
cmp
call
jmp
stc
cmc
jmp
neg
and
pushf
pop
lea
jmp
jmp
mov
jmp
pop
pushf
mov
lea
pop
movzbw
movzbl
mov
pushf
push
lea
call
clc
call
call
lea
je
cmp
popf
pusha
push
pushf
lea
jmp
call
mov
pushf
dec
pushl
mov
pushf
pushf
call
push
mov
pushl
call
pushf
movb
movl
movb
movl
jmp
jmp
pushf
movw
jmp
call
mov
push
pushf
movl
call
pushf
pusha
movw
mov
pusha
mov
call
pushf
jmp
push
pusha
call
call
movl
movw
movw
pushl
pushf
pushl
popl
push
mov
movl
jmp
pushf
mov
call
movl
movw
pusha
call
pushf
pushf
mov
jmp
mov
mov
pushf
jmp
bswap
mov
pushf
call
jmp
call
test
pushf
jmp
mov
mov
jmp
mov
pusha
mov
mov
pushl
jmp
jmp
call
movl
pushf
pusha
jmp
pushf
mov
jmp
pusha
jmp
push
pushf
movl
jmp
stc
cmp
stc
add
pusha
pushf
pusha
call
jmp
mov
mov
pushf
pusha
call
call
pushl
popl
push
pushf
pushf
pushl
ret
movl
jmp
push
lea
pusha
bswap
movzbl
not
bswap
lea
pushf
not
lea
push
pushf
lea
jmp
pushl
popl
pusha
push
mov
pushl
ret
lea
jne
cmc
shl
jmp
jmp
call
or
mov
lea
je
push
pushl
popl
call
xchg
not
push
lea
pushf
pusha
cmc
add
jmp
test
jmp
lea
call
call
call
mov
movsbw
mov
bswap
push
mov
pusha
jmp
push
pusha
jmp
movl
mov
pushl
lea
call
clc
cmc
or
pusha
lea
jne
jmp
pushf
call
pushf
pushf
movl
call
mov
call
movl
pushl
mov
call
push
call
movl
mov
jmp
or
call
jmp
jmp
pushf
pushf
call
lea
jne
btr
not
orb
pusha
call
push
mov
push
mov
pushf
jmp
movl
call
mov
jmp
pushf
clc
movb
cmc
cmpb
pushf
jmp
call
call
jmp
call
pushl
popl
mov
mov
push
pushl
pushl
ret
mov
movl
call
movb
pushl
popl
call
movl
jmp
call
call
movl
push
mov
jmp
pushf
movl
mov
mov
jmp
jmp
cmp
movw
lea
jne
push
cmc
stc
mov
sub
pusha
movb
jmp
jmp
push
pusha
movzbw
mov
call
pushl
movl
mov
pushl
popl
pushf
pushl
ret
call
jmp
pusha
push
jmp
push
pusha
mov
call
pushl
popl
pushf
movw
pushl
ret
movl
jmp
movsbw
movzwl
lea
mov
seta
mov
pushf
movsbw
lea
lea
mov
setnp
pushf
movl
lea
mov
pusha
not
lods
jmp
mov
movl
movw
call
pushl
popl
mov
pushl
ret
pusha
mov
push
pushf
call
pusha
lea
jmp
movl
pushl
pushl
popl
movb
pushl
ret
mov
jmp
movl
jmp
mov
call
pop
call
lea
leave
sar
shr
push
test
lea
call
pushl
popl
jmp
jmp
pusha
pushl
popl
push
pushf
pushl
ret
movl
jmp
movl
push
pushl
popl
pushf
pushl
ret
call
movb
bt
sub
movw
lea
jmp
push
cmpl
pushf
lea
je
pushf
pushl
pusha
movl
push
pushf
movb
pushf
mov
pushf
mov
pushl
popl
pushf
movl
pushf
movl
jmp
pusha
push
mov
push
mov
push
pushf
movl
pushf
pushl
call
pushf
cmp
call
movl
not
cwtl
movsbl
lea
lea
jmp
movzbl
bsr
pop
call
mov
pushf
mov
pusha
jmp
push
push
stos
pushf
jmp
setns
pushf
movl
lea
lea
pushf
push
mov
jmp
movl
call
pusha
mov
pushf
push
movb
mov
movl
push
push
jmp
jmp
jmp
jmp
movl
push
call
movl
movb
jmp
pusha
mov
jmp
movl
pushf
pushl
popl
jmp
mov
movl
push
mov
pushl
movl
jmp
pushf
movl
movw
pushl
popl
pushf
pushl
ret
movl
mov
call
pusha
mov
movzbl
setge
lods
pusha
mov
call
mov
call
call
movb
call
pushf
mov
movb
lea
jne
test
call
push
jmp
call
mov
jmp
and
or
not
bswap
andb
lea
mov
lahf
cwtl
push
push
jmp
pushl
popl
mov
pushf
mov
pushl
ret
movl
call
mov
test
bt
pushf
cmp
jmp
push
call
pushf
movb
mov
movl
mov
movl
pushf
jmp
xchg
lea
cmp
lea
neg
mov
cmp
stc
add
cmp
call
movl
push
movl
pushf
movb
movl
movw
jmp
jmp
mov
pushl
jmp
pushl
popl
movw
movb
pushf
pushl
ret
push
movl
jmp
jmp
movl
push
call
jmp
mov
call
jmp
jmp
jmp
lahf
call
movl
jmp
mov
rep
push
shrd
pop
orb
and
mov
pushl
inc
rol
setae
xor
lea
movzbw
pushf
lea
pop
mov
pushf
pusha
jmp
call
sub
mov
cmp
mov
bt
add
call
pushl
popl
movb
pushf
pushl
ret
push
mov
pushl
popl
pusha
call
movl
mov
pushf
movl
jmp
push
movl
push
mov
call
push
lea
jne
btc
btr
mov
test
btc
shr
btr
sub
rol
shrd
stc
shl
add
movzbw
mov
stc
stc
pushf
test
shl
call
pusha
pushf
pushl
popl
push
pushf
movb
pushl
ret
pusha
mov
lea
pusha
mov
pushl
popl
jmp
movl
pusha
pusha
mov
call
mov
push
push
call
lea
je
call
push
push
movb
mov
call
push
pushl
popf
mov
pushf
movb
lea
jmp
jmp
movl
jmp
mov
call
movl
push
movl
push
mov
pushf
mov
push
push
mov
pushf
mov
pushl
jmp
pushf
movl
pushf
jmp
jmp
jmp
mov
push
movl
call
add
jmp
lea
jne
jmp
movsbl
not
mov
jmp
lea
jne
mov
pushf
lea
mov
pushf
push
incb
pushf
movw
pushf
movb
lea
jmp
pusha
call
popa
bswap
call
push
pusha
lea
jmp
movl
push
pushl
popl
movw
pushl
pushf
pushl
ret
pusha
call
orb
cmc
cmpb
call
movl
movb
pushl
popl
push
push
movb
movb
pushl
ret
pushl
mov
pushf
call
movl
jmp
not
lea
leave
movsbw
pushf
pop
mov
pusha
pushl
pushl
push
lea
jmp
not
pusha
push
bswap
mov
lea
push
pushf
pushf
call
jmp
pusha
call
call
pusha
pushf
stc
mov
shr
lea
pushf
mov
pushf
pushf
cmp
movl
clc
xor
movb
mov
call
call
movw
movl
pusha
movl
call
jmp
mov
movl
pushf
pushl
popl
push
pushl
ret
push
pushf
pushl
popl
pushf
pushl
movl
movb
pushf
pushl
popl
movb
pushl
pusha
pushl
ret
call
jmp
call
mov
pushf
pushf
call
push
lea
jmp
pushf
pushf
jmp
pusha
mov
jmp
btr
jmp
mov
pusha
lea
jmp
jmp
movl
movl
push
jmp
push
pushl
movl
movb
jmp
pushf
pushl
popl
movb
push
pushf
pushl
ret
lea
bswap
jmp
or
pushf
call
movb
mov
pushf
xchg
bswap
setbe
push
movl
jmp
pushf
movb
pushf
pushl
popl
pushf
pusha
movb
pushl
ret
mov
call
pushf
lea
je
push
call
push
bt
cmc
cmp
mov
push
lea
jne
pusha
mov
mov
pusha
cmpb
pushf
call
mov
mov
mov
pusha
lea
jmp
mov
call
movl
push
mov
pushf
call
mov
push
movl
call
movl
jmp
call
push
pusha
pushf
mov
call
dec
call
pushf
pushl
popl
pushf
pushl
ret
pushl
popl
push
pushl
ret
call
movl
call
pushf
pushl
popl
push
pushl
ret
pusha
pusha
movb
movl
pushl
jmp
jmp
call
lea
movsbw
lahf
lea
pusha
jmp
push
mov
jmp
pushl
popl
call
mov
pushl
movb
movl
mov
push
call
call
mov
movw
pushf
lea
jmp
movl
pushf
jmp
pushf
mov
jmp
mov
pusha
call
mov
movb
jmp
push
movl
movb
call
jmp
clc
push
pusha
pushl
or
mov
pushf
jmp
push
pushl
jmp
pushf
pushl
popl
pushf
push
pushf
mov
pushl
ret
movl
jmp
lea
jmp
movw
jmp
pusha
movb
stos
lea
cmc
cmpl
call
push
movl
push
pusha
push
movl
mov
jmp
call
push
bswap
lea
pushf
mov
mov
movb
mov
call
movzbw
mov
jmp
movl
call
pushl
popl
pushf
pushf
pushl
ret
pushf
pushl
popl
pushf
jmp
pusha
jmp
shl
cmp
push
push
pushf
mov
push
bt
pushl
popl
mov
clc
bt
clc
pushl
popl
cmp
cmc
xor
push
call
pushf
pushl
popl
pushf
mov
pushl
ret
movl
jmp
jmp
jmp
push
call
rol
adc
rcr
jmp
pushf
mov
jmp
mov
lea
push
pushf
lea
jmp
movl
mov
movl
pushf
pushl
popl
pushf
pushf
mov
pushf
pushl
ret
mov
movw
pushl
popl
pushl
movb
pushl
ret
pusha
movl
jmp
pusha
pushf
movl
jmp
insb
xor
inc
add
outsl
jb
aad
sahf
add
add
inc
add
mov
add
pop
pop
add
cltd
test
sbbb
add
add
sbb
add
mov
jg
das
dec
dec
fsubr
loopne
and
cmc
and
shrl
xchg
adc
in
jle
push
or
sub
pop
pop
into
xchg
pop
rcrl
cld
and
jbe
inc
frstor
add
add
scas
dec
adc
jge
mov
clc
mov
imul
ja
xchg
sbb
fldl
push
xchg
sub
test
pushf
imul
adc
cmpsb
mov
cmpxchg
xor
nop
jge
dec
test
and
nop
inc
dec
lds
mov
ljmp
push
and
jmp
andl
push
mov
push
add
jbe
out
faddl
xchg
and
and
repnz
lcall
or
sub
rcr
pop
popl
stos
mov
pop
mov
sbb
andb
jnp
loopne
enter
cmc
mov
lds
cs
jp
loope
daa
pushf
jb
or
adc
lahf
fldl
shr
pop
sub
iret
repz
sbb
shrb
and
pop
sti
sub
or
xchg
in
outsb
test
ret
sbb
inc
and
add
fcmove
xor
pop
out
jo
xchg
packuswb
jne
aad
arpl
push
push
mov
aad
gs
int
push
aaa
or
push
sub
inc
pop
xorb
jge
mov
sarb
sti
fisttps
cmpsl
incl
daa
iret
add
andb
mov
mov
jle
jns
sub
int3
test
dec
lcall
insb
cmp
addl
xchg
stos
bound
mov
gs
jne
push
adc
mov
pop
dec
inc
inc
adc
push
lock
bound
jae
pop
andb
insb
jl
cmc
imul
push
ret
mov
rcr
mov
dec
mov
movsl
mov
lcall
lahf
loopne
ss
pop
hlt
inc
xor
inc
and
cld
shll
stos
cmp
push
mov
push
fcmovnu
je
scas
stc
sbb
xchg
out
and
pop
jno
inc
add
lret
xchg
ja
out
mov
mov
mov
and
js
inc
daa
imul
stos
sbb
popa
inc
scas
movb
jbe
jg
je
and
addl
int
ret
xlat
test
leave
push
xchg
addr16
jp
repnz
popa
inc
dec
lods
test
add
lret
sahf
lcall
add
add
scas
cmpsb
lods
lock
popa
cwtl
adc
push
cmp
pop
enter
leave
sarb
xor
xorb
pop
jg
adc
pushl
test
xor
mov
testb
fiadds
scas
push
mov
sbb
mov
rorl
pop
imul
xor
inc
push
push
inc
pusha
ss
fs
ss
pop
aam
dec
sbb
lock
ljmp
ds
cmp
hlt
das
ljmp
mov
ds
imul
popf
mov
and
dec
sub
pop
testb
test
mov
push
ret
aam
mov
xchg
xor
shrl
ljmp
out
xchg
js
dec
mov
sahf
xor
lahf
lcall
nop
dec
ds
mov
faddl
mov
fwait
mov
jno
sub
cld
movsl
jne
imul
xor
push
mov
sbb
mov
mov
xor
xor
and
dec
ds
sbb
inc
mov
xchg
mov
aam
push
cmp
iret
cmp
pop
out
insb
leave
int
outsl
dec
jbe
cmp
pushf
ror
enter
dec
lahf
loop
mov
jmp
jae
ljmp
cmp
xchg
aad
outsl
das
int
and
lahf
neg
mov
in
xor
shlb
dec
inc
shl
ret
mov
fwait
dec
leave
xchg
cmp
repnz
das
rorb
test
mov
cmp
push
fists
lahf
out
imul
and
push
icebp
mov
test
aam
pop
ljmp
jo
addr16
mov
sub
inc
cld
or
es
mov
push
push
pop
mov
mov
dec
jp
mov
xlat
fcmove
adc
or
test
aaa
sbb
imul
mov
int3
add
negl
icebp
xchg
jmp
in
dec
pop
shrl
je
dec
mov
dec
das
jbe
data16
stos
ss
aad
pop
mov
cmp
adc
and
cmp
xchg
jl
rcrl
mov
inc
push
ja
call
xor
pop
test
cmp
ja
outsb
test
stos
mov
xchg
leave
push
pop
mov
xor
test
insb
and
pop
push
out
arpl
xchg
adc
ss
jl
or
inc
xchg
sub
insb
scas
jae
stc
repz
mov
stos
pop
rcll
mov
out
outsb
sti
rcll
test
incb
inc
aad
icebp
repz
dec
les
outsl
xor
dec
pushfw
lods
lods
mov
jl
pop
imul
sti
and
cmpsb
jg
sbb
jae
xchg
dec
push
push
xchg
arpl
sub
push
sub
fdivr
lret
lcall
fscale
cmpsl
sub
mov
or
scas
icebp
ret
sbb
jmp
mov
jmp
in
sub
fists
adc
pop
jbe
aad
sub
dec
cmp
imul
and
mov
push
dec
ss
xchg
out
inc
xor
cltd
pop
or
push
clc
mov
mov
mov
cmp
lret
sti
mov
fdivl
pushf
dec
scas
cmp
test
lret
jae
ljmp
leave
pop
into
lahf
cmp
sbb
jo
iret
push
cli
mov
rcrl
imul
mov
xor
xchg
out
in
jb
daa
rcll
mov
push
addb
mov
testb
inc
ss
dec
outsl
in
aam
in
subb
rcll
adc
rclb
je
mov
leave
int3
mov
outsb
lret
mov
mov
call
cmp
lcall
out
mov
add
dec
imul
xchg
mov
incb
ret
mov
or
movsl
ja
sub
mov
out
jmp
or
sbb
lods
mov
mov
insb
mov
out
jmp
push
int3
pop
addr16
mov
mov
iret
adc
lcall
mov
repz
xor
nop
cmpsl
pushf
into
or
xchg
mov
testb
jl
in
popf
jecxz
jmp
insb
push
fstpl
or
cmp
push
shrl
pushf
inc
lcall
icebp
dec
xor
inc
xchg
push
popf
adc
fcmove
lret
stc
dec
and
stos
mov
test
outsb
ffreep
out
cwtl
sub
dec
das
icebp
mov
dec
sbb
mov
push
mov
clc
lahf
push
jae
lret
mov
insl
push
mov
in
mov
je
hlt
xor
cmp
fistpll
pusha
lods
add
pop
adc
mov
jb
dec
xchg
jmp
and
xor
movsl
pop
mov
jb
out
pusha
lods
cltd
jecxz
add
inc
neg
movsb
out
inc
mov
adc
fidivrs
pop
fbstp
out
or
xchg
inc
xchg
sbb
icebp
jnp
imul
outsl
repz
test
mov
int3
test
into
push
mov
push
push
sub
fmuls
fisubl
jg
pop
jge
and
sub
add
faddl
push
pop
xchg
xor
xor
icebp
xchg
add
adc
fs
adcb
in
pushf
frstor
sarl
mov
xchg
outsl
cltd
mov
addl
inc
pop
cmp
out
cld
fs
xchg
loop
jo
sbb
mov
popa
movsb
mov
pop
xchg
call
push
adc
or
and
in
or
sub
push
call
sbb
cmp
pop
daa
xor
mov
lds
movsb
push
fs
cmp
lods
int3
xchg
shrb
inc
or
cltd
sbb
sbb
or
ret
jmp
test
fiadds
sbb
dec
rcrl
fisubl
add
aas
das
or
test
adc
xor
or
jmp
xchg
xorb
cmp
pop
inc
aas
cmp
cmpsb
jmp
ja
idivb
loopne
dec
stc
cmpsb
scas
sub
push
sbb
popa
mov
inc
lock
test
or
cli
xchg
and
test
scas
jg
roll
lret
dec
rcr
bound
push
in
outsb
mov
sbb
cwtl
mov
sub
cmpsl
aas
movsb
call
pop
popf
sub
push
call
stos
xor
xchg
hlt
pop
dec
push
jb
daa
dec
push
pop
decb
lcall
dec
fisttps
push
mov
sbb
and
add
enter
cwtl
xchg
push
jae
push
das
leave
xor
in
push
aaa
fwait
push
jg
add
cwtl
sub
fucomi
loop
je
sbb
pop
cmp
push
and
scas
rsm
dec
push
es
mov
pushf
jg
mov
dec
push
outsl
mov
cli
cli
daa
cmpsl
test
push
int
aam
add
fldl
inc
mov
adc
and
jne
repnz
jo
in
xor
lods
mov
fcoms
cld
cmp
mov
add
mov
imul
push
loopne
inc
mov
xchg
loope
and
mov
inc
sbb
or
frndint
andl
and
inc
enter
lcall
and
popa
mov
cmp
inc
push
stos
leave
mov
adc
pusha
fcmovbe
mov
ljmp
nop
cmp
cmpsl
xor
ljmp
xchg
ja
insl
dec
mov
xor
ljmp
sbb
cmp
cli
lahf
lock
fwait
dec
pop
adc
sbb
xchg
and
and
or
sub
jp
clc
incb
xchg
sbb
xchg
cmp
sbb
xor
scas
inc
sbb
xchg
mov
inc
sub
add
loope
popa
mov
adc
sti
inc
jb
sbb
movsb
push
in
mov
jmp
sub
das
mov
hlt
sbb
int
leave
dec
add
je
fs
or
mov
pushf
xchg
out
sub
push
lret
es
or
outsb
cmpsb
adc
test
fwait
sahf
cli
push
shl
nop
inc
dec
int
xor
and
mov
inc
mov
in
mov
sub
hlt
shrb
mov
loopne
dec
pop
jbe
push
aad
nop
pop
rep
inc
jns
gs
pop
xchg
mov
or
sub
cwtl
test
in
mov
repz
xchg
xor
nop
test
fnstcw
into
mov
shrb
loop
pop
in
pop
stos
jnp
inc
pop
jp
in
inc
pop
sbb
push
push
push
in
mov
fucom
xchg
xor
fisubrs
shl
sub
inc
lret
and
add
push
enter
xor
xchg
insl
cltd
test
loopne
jne
jo
xor
movsl
inc
xor
jb
gs
add
xchg
imul
repnz
in
mov
andl
dec
sub
in
fs
push
add
movsl
loopne
push
sahf
mov
pushl
jecxz
jp
and
mov
repz
movsl
imul
mov
sbb
mov
xor
sbb
icebp
push
ret
arpl
pop
movsl
cmpsl
insl
or
jns
mov
mov
inc
jg
sbb
or
iret
add
cld
add
push
test
cmp
movsl
sub
sarb
mov
into
mov
imul
push
cmp
into
es
test
pop
sub
or
add
and
jns
int
cmpb
neg
test
mov
sub
push
pop
pop
sub
push
xchg
or
hlt
std
mov
or
jo
mov
xchg
jb
jns
scas
mov
push
adc
out
fucomp
push
jg
cltd
stc
imul
pusha
lahf
adc
jne
test
push
negb
insb
jo
push
and
in
dec
mov
mov
dec
dec
mov
pop
es
push
leave
dec
inc
movb
adc
nop
imul
inc
rcrb
xor
sub
ret
sarb
mov
push
ja
cmp
into
or
testb
lret
add
loopne
jmp
aam
lcall
pop
int
sub
and
sub
hlt
pop
clc
lds
pop
lods
mov
shll
mov
sub
test
rol
sub
adc
cli
mov
jnp
adc
push
adc
jo
and
xor
push
lret
je
mov
shl
or
cmc
sbb
mov
xor
sbb
push
pop
push
push
sub
jg
sub
sti
mov
mov
sbb
fnstsw
mov
ret
pop
jge
cltd
xchg
icebp
fwait
mov
inc
jle
jbe
or
negb
mov
lods
out
aas
cmp
adcb
std
pop
addb
push
das
lock
sahf
out
loopne
mov
leave
lock
push
out
inc
mov
jecxz
fisttpll
enter
inc
sbb
jp
sbb
ja
lret
add
cmpsl
jns
push
data16
dec
popf
repz
sub
inc
in
sub
subl
mov
jne
pop
mov
mov
add
mov
xchg
leave
pop
mov
dec
div
or
fidivl
fmulp
cli
push
loopne
or
add
std
loopne
jae
push
inc
xor
xor
imul
lret
cltd
enter
lea
scas
outsl
sub
fstpl
sti
loopne
out
jb
sub
fstl
pop
scas
es
lods
movsl
insl
cvttps2pi
lret
gs
lock
sub
insl
dec
rol
std
xchg
loop
test
xor
mov
out
out
mov
cmp
xor
pop
sub
push
mov
add
sbb
push
cmp
adcb
add
jp
push
outsl
rcrl
sti
pop
es
dec
xor
cmp
rorl
dec
pop
out
or
dec
inc
push
scas
xor
cmp
outsl
mov
push
or
dec
cmc
cmc
aaa
xchg
outsl
cmpsb
pushf
add
stos
stos
leave
mov
jl
fidivs
test
cwtl
dec
int3
push
sub
insb
into
das
stos
jno
cwtl
das
xchg
xlat
movsl
xchg
test
pop
cmp
lods
gs
dec
fnstenv
pop
and
jnp
rclb
je
pop
add
xlat
cltd
frstor
pop
mov
test
push
test
ljmp
jnp
cwtl
daa
jmp
scas
jp
in
adc
neg
dec
aad
add
or
mov
sbb
adc
addr16
cwtl
clc
stos
out
or
enter
and
pop
popf
adc
jp
xchg
mov
inc
ja
test
insb
xchg
aad
aas
cli
or
inc
jmp
test
ror
dec
into
or
mov
mov
pop
fisubrs
or
push
xchg
sbb
es
lods
rcll
movsl
cmpsl
or
imul
rcr
stos
mov
mov
pop
lret
testl
stc
ljmp
mov
cmp
mov
pusha
sbb
out
sub
push
ret
and
dec
rorb
arpl
mov
aas
jle
in
sub
xor
jp
dec
loopne
adc
jbe
mov
xchg
cs
in
mov
inc
js
cmpsl
insl
test
clc
push
test
xchg
push
mov
mov
or
mov
xchg
xchg
movsl
ds
sub
mov
xor
lret
xchg
and
pop
or
xchg
ret
mov
out
and
call
xlat
mov
fidivs
movsb
add
out
push
xchg
pop
xor
pushf
sbb
fidivs
scas
popf
jnp
xlat
popa
scas
pop
push
jnp
lret
xor
sub
ret
sub
stc
es
add
inc
fstl
call
adc
fsubs
or
dec
jecxz
int3
in
sub
or
jge
sub
negb
xor
cld
mov
fstpt
jmp
sbb
mov
std
aaa
sti
fcoml
ret
xor
xor
idivb
daa
xchg
xchg
out
les
pop
or
or
rol
call
hlt
pop
rclb
add
rorb
sub
ja
clc
mov
mov
jns
mov
and
aaa
dec
and
add
fadds
lcall
xor
mov
pop
js
cmp
fnstsw
gs
fsubrl
mov
ss
imul
sbb
sub
outsl
xor
adc
fldt
cmc
push
fdivl
fdivrl
test
popa
xor
sbb
shrl
adcl
pop
push
jnp
adc
mov
jecxz
movsl
jne
repz
sahf
aad
idivl
mov
repnz
movsl
or
out
mov
sub
dec
enter
add
loopne
sub
ljmp
sahf
rclb
das
in
mov
lock
shl
xor
add
movsb
insb
shl
push
cmp
icebp
rorb
jecxz
je
dec
lds
aad
add
iret
jne
movsl
jae
ficomps
mov
cmp
es
outsb
mov
imul
es
sbb
jb
shll
xchg
jecxz
je
lret
js
stos
shlb
popa
xor
fs
sbb
xchg
es
out
popa
mov
cmpsl
sub
push
outsb
loope
sub
sub
cmp
xchg
pop
add
dec
cmp
repnz
loope
jae
push
mov
nop
shll
xor
xchg
xchg
out
es
divb
stos
sarb
sbb
ret
push
cs
mov
pushf
xchg
push
mov
add
dec
aad
arpl
in
adc
stc
pop
inc
pop
jno
cli
push
sub
nop
sbb
in
mov
or
dec
cs
mov
int3
cwtl
mov
adc
call
xorl
or
inc
xor
xchg
ljmp
push
pop
cmp
push
jo
push
vandpd
clc
jno
pop
mov
call
or
fs
or
je
push
call
aam
mov
mov
fdivrs
jbe
dec
dec
xchg
fwait
stos
push
lret
lods
adc
out
arpl
test
sub
lock
in
dec
push
pop
cmp
fstpt
lock
dec
xor
mov
dec
outsl
ss
sub
addr16
xlat
inc
sahf
inc
test
lahf
jns
sub
inc
nop
inc
cmp
shll
jle
jns
push
enter
mov
pop
adc
mov
lock
cmp
cmp
sub
push
js
cmp
cmpsl
cmp
sub
or
rorb
arpl
nop
pop
xor
mov
movsb
sub
mov
inc
xorb
inc
not
pop
je
sbb
mov
lcall
jmp
loop
popa
xchg
cld
and
dec
mov
pop
xchg
repz
mov
mov
aam
icebp
sbb
icebp
insl
roll
cmp
int3
dec
jno
cmpsl
pusha
cmp
jns
xchg
das
xchg
jo
dec
mov
repnz
and
pop
ret
scas
jl
cmc
sbb
mul
dec
stc
scas
adc
in
flds
cmp
sbb
add
cmp
iret
pop
pop
push
push
mov
fstps
add
ds
ret
jno
and
js
hlt
in
std
test
pop
add
aaa
and
sub
jmp
fldl
imul
sti
lods
dec
sarl
or
sub
dec
scas
mov
or
test
movsl
ja
in
adc
mov
in
or
inc
or
rorb
or
dec
or
movsl
pushf
xor
cmp
sbb
sbb
das
insb
bound
and
into
lea
test
jno
cmp
sub
sbb
cmp
and
mov
or
repnz
fsts
dec
ret
sbb
jbe
push
scas
sbb
jno
aaa
sar
aas
loope
pop
out
test
mov
sbbb
inc
shlb
xchg
pop
dec
mov
jecxz
mov
enter
popf
mov
jae
add
dec
adc
xchg
pushl
inc
in
sahf
jp
xchg
in
dec
lret
dec
sub
mov
jmp
sbb
push
or
hlt
pop
push
lods
xchg
dec
xor
in
pushf
fcomps
sub
inc
pop
pusha
shll
add
arpl
sub
cmpl
aaa
xchg
mov
mov
push
insl
mov
cmpl
xchg
and
testl
roll
or
repnz
or
inc
mov
repnz
movsb
test
in
in
ret
daa
sub
xor
shl
jg
mov
push
sub
mov
and
outsb
pop
mov
push
mov
in
add
addl
mov
sub
or
dec
dec
mov
ds
mov
repz
popf
gs
scas
iret
lret
push
cld
sub
lahf
sub
mov
jb
and
push
lahf
xchg
int
scas
popa
jnp
or
sbb
mov
out
pop
cmp
dec
add
mov
jmp
cmc
es
popa
jl
fisttpll
mov
xor
inc
sub
cmp
dec
sbb
jnp
xchg
notl
cmp
xchg
aad
loope
mov
adc
enter
jae
mov
mov
mov
fwait
outsb
mov
mov
mov
mov
push
les
dec
push
lock
int
bound
cmp
mov
shrl
mov
adc
aas
sahf
xor
sub
adc
and
or
cltd
sbb
push
dec
and
sub
inc
das
es
sbb
jbe
xchg
fwait
dec
iret
mov
jg
scas
fnstenv
mov
mov
fadds
adc
add
fs
push
mov
movsb
mov
cmp
adc
scas
movsl
js
sub
jno
pop
sti
pushf
mov
fdivrl
cmp
inc
xor
mov
dec
jecxz
sub
stc
scas
repnz
sbb
dec
cmp
jo
push
push
ss
mov
out
mov
cmp
jne
es
lea
inc
push
and
in
cld
jne
xchg
loopne
or
xlat
dec
fistl
xlat
cwtl
sbb
stc
jns
mov
out
jecxz,pt
sub
int
lods
or
shr
clc
push
test
ficompl
rorb
mov
sahf
xor
andb
in
inc
andb
imul
inc
inc
call
inc
ficoml
mov
in
fisubrs
loope
mov
imulb
xchg
mov
movsb
cltd
mov
cs
pop
cmpsb
mov
pop
in
mov
std
shl
xchg
lcall
xchg
int
dec
sub
sti
andb
fcmovbe
das
push
rolb
add
lcall
mov
sbb
mov
mov
xchg
and
ds
lock
dec
cwtl
stos
js
sbb
aaa
add
pop
test
and
dec
adc
stos
mov
sbb
push
mov
ret
dec
test
and
jg
dec
lds
add
cmp
jns
imul
push
mov
rcll
add
ja
lea
cmp
dec
mov
mov
mov
push
lret
mov
pop
stos
in
push
lods
ret
add
lcall
add
lret
cmp
push
mov
adc
ret
fistpl
sahf
mov
lds
in
test
in
nop
repnz
fistpll
es
test
incb
push
movsb
movsl
xor
adc
outsb
shl
pusha
mov
stos
sub
push
cmp
nop
xchg
mov
xor
loope
mov
push
ret
fmuls
pop
clc
pop
jbe
push
xor
inc
js
push
orl
fbld
leave
push
jb
sub
cmp
imul
in
cmp
idivl
imul
gs
popa
mov
adc
add
in
lods
jp
add
ljmp
orl
sbb
jg
mov
sbbb
sti
mov
inc
mov
shll
sub
nop
in
mov
mov
adc
inc
les
pusha
and
lcall
mov
fcoml
push
roll
dec
bound
adcl
xchg
cmp
mov
mov
cs
call
lods
push
xor
push
daa
ret
test
test
mov
add
push
lret
popf
inc
sub
or
adc
mov
and
mov
jns
xchg
out
adc
mov
jnp
push
jp
adc
fistpll
fcom
adc
mov
cmp
insl
push
outsb
xchg
sub
jle
fistpll
lods
scas
mov
mov
inc
arpl
divb
lahf
cmp
adc
jl
mov
addr16
in
jmp
movsb
cmc
cmp
inc
loop
sub
sbb
inc
sbb
mov
cld
cltd
and
orb
mov
mov
or
ljmp
pop
jns
in
inc
jmp
movsl
daa
repz
mov
xchg
ret
fnstsw
mov
cli
jns
cs
sub
and
rcr
jno
jg
add
cmp
aam
push
inc
inc
out
je
aam
loop
repz
sbb
add
scas
imul
jne
pop
fisubrs
xchg
xorb
mov
scas
pop
mov
shl
bound
dec
loope
and
xor
xchg
leave
sub
xchg
or
jmp
ret
pop
std
lods
sub
or
or
cmp
adc
dec
in
fnstcw
leave
mov
fisttps
add
jae
je
jb
leave
adc
xchg
add
cltd
in
in
xor
ret
inc
sar
mov
leave
and
popa
pop
mov
outsl
xchg
loope
xchg
fwait
xor
fidivl
or
mov
shlb
push
loopne
sub
cmpl
adc
shrb
loopne
jo
incl
mov
je
shlb
ror
mov
push
pop
loopne
jae
add
sbb
lods
cmp
adcb
aaa
xchg
push
aam
mov
test
jnp
cmp
pop
scas
out
inc
mov
lea
push
imul
int
cmp
push
mov
or
inc
xchg
ret
cwtl
jge
int
mov
jecxz
ljmp
aam
insb
lds
add
dec
sub
xchg
ljmp
xor
add
xchg
push
xchg
lcall
mov
mov
mov
lods
mov
mov
in
add
sub
out
inc
and
push
lahf
int
nop
fstps
test
scas
inc
pop
fidivs
idivl
add
add
pop
imulb
mov
inc
gs
jb
jp
lods
or
xor
add
jmp
jecxz
or
sub
fldt
ret
dec
fisttpll
mov
aam
mov
insl
pop
cwtl
push
or
or
sub
jmp
movaps
insb
adcb
add
test
clc
mov
push
and
pop
and
push
xlat
rclb
mov
lcall
cwtl
push
inc
xchg
sbbl
lea
pop
out
jbe
sahf
or
pop
xchg
ljmp
sbb
jae
leave
aas
rcrl
popf
mov
xchg
xchg
sbb
iret
ret
loopne
stos
aas
pop
jb
cmp
mov
jo
inc
mov
adc
gs
jo
clc
push
xchg
inc
xchg
ret
push
inc
arpl
xchg
sbb
pop
imul
push
stos
mov
mov
push
stos
pop
add
in
repnz
out
push
xchg
pop
jmp
cmp
sbb
xlat
loop
adc
les
movsb
add
mov
mov
cld
push
xchg
and
fsts
loop
add
jne
adc
ret
das
mov
fs
ret
imul
into
sahf
cs
jl
scas
inc
lods
rcl
pop
aas
or
fwait
insl
test
sti
fbld
push
sbb
ror
movsb
hlt
dec
jecxz
fcmove
mov
adc
in
push
pop
xor
fld1
pop
iret
push
push
orl
aad
push
mov
loopne
adc
mov
insl
sub
and
mov
fwait
mov
add
cli
mov
jae
jno
movsl
fbld
adc
inc
jbe
sub
rcrb
pop
sbb
scas
pop
mov
dec
stos
fsubrs
outsl
jg
test
cmp
inc
dec
movsl
or
fdivl
jne
mov
repz
push
and
fwait
cli
pop
fwait
jno
cli
test
addr16
jbe
pop
mov
test
xor
push
in
ret
je
inc
into
inc
shll
inc
daa
push
fildl
inc
pop
xchg
mull
int3
xor
testb
pop
fistpll
mov
lds
xor
xchg
loop
xor
mov
int3
cmpsb
xchg
mov
mov
and
dec
fmull
movsb
mov
lock
aaa
sbb
lcall
jecxz
test
mov
test
xchg
iret
jnp
fisubs
mov
loop
in
std
lret
add
mov
popa
jnp
dec
mov
cmpsb
pop
ficoms
sub
dec
push
push
mov
imul
push
rcr
cmp
inc
cmc
sbb
cmp
lods
loopne
test
out
das
cmc
imul
lock
jb
add
jmp
lcall
test
push
sbb
cmp
sarl
or
mov
adc
fnstenv
in
mov
sti
fmuls
inc
out
xchg
mov
pop
in
iret
icebp
lock
mov
cmpsl
push
xchg
push
pusha
test
outsb
add
leave
or
pop
mov
movsb
cmp
mov
in
popf
dec
jp
sbb
leave
mov
push
pop
popf
shrb
and
mov
dec
test
pop
dec
jmp
mov
sbb
sub
aam
gs
sti
in
pop
sbbl
loopne
cltd
sub
bound
xchg
mov
arpl
ret
mov
das
lahf
adc
push
sub
and
sbb
sub
mov
adc
mov
stos
mov
and
and
or
push
jbe
jno
add
adc
xchg
in
iret
xlat
repz
scas
into
pop
pop
imul
xchg
sub
aad
pop
or
sub
je
cs
inc
mov
negl
in
aam
iret
les
pop
cmp
lcall
rcrb
xchg
or
or
xchg
lcall
and
push
jbe
cli
lods
les
jl
adc
mov
stos
adc
xchg
lock
loopne
jno
adc
fimuls
xlat
push
inc
mov
xorl
mov
xchg
movsl
loopne
add
jae
mov
insb
aam
js
xor
push
adc
out
lods
jp
in
ret
and
mov
xor
les
sar
lret
stc
jne
in
aam
mov
mov
mov
into
imul
xlat
inc
mov
pop
mov
xchg
imul
xor
repz
pushf
xchg
xchg
popa
jg
std
in
push
nop
cmc
cmp
lret
sar
jae
std
sub
xlat
push
insb
sbb
lret
cmp
mov
jbe
add
jne
inc
jle
inc
in
push
jno
or
dec
popf
mov
jae
ret
imul
inc
and
mov
xor
pushf
int
and
mov
fwait
cmp
lods
push
sub
mov
jp
and
mov
or
mov
pusha
adc
pop
mov
xchg
and
pushf
sti
mov
xor
popa
mov
lret
dec
inc
push
push
cli
dec
insl
inc
dec
lock
leave
popa
sbb
cld
aaa
xchg
xor
sbb
stos
scas
pop
cmp
add
sub
je
stc
dec
xchg
mov
dec
cmp
mov
and
stos
gs
xchg
sbb
xchg
aam
into
clc
and
mov
xchg
imul
sbb
push
push
pop
sbb
lock
xchg
loopne
pop
pusha
popa
mov
popf
xor
xchg
pusha
andb
fwait
mov
inc
pop
push
cmpb
xor
dec
cmp
mov
or
push
sub
insb
popf
sbb
aad
push
test
cwtl
ja
dec
cmpsl
mov
mov
out
popa
test
pop
rorb
inc
lock
sub
into
cmp
dec
xchg
sbb
pop
cli
fwait
mov
hlt
push
into
jno
and
jno
or
mov
jb
pop
jl
jp
sbb
mov
loopne
imull
xchg
inc
or
lea
in
fidivrl
fst
movsb
fistpl
or
sub
std
stos
shll
and
dec
inc
jg
push
lock
ljmp
pop
mov
shlb
mov
outsb
push
pop
jns
outsl
clc
and
movsl
dec
out
jp
add
testl
aas
mov
sbb
mov
pusha
jmp
mov
popf
xorl
pop
xchg
push
sbb
in
lret
lret
mov
mov
orb
jae
dec
lret
push
adc
daa
test
push
lret
push
jbe
loop
xor
inc
cmpsb
sbb
test
jmp
or
jle
adc
push
push
add
jge
lret
packsswb
mov
testb
outsb
push
jl
mov
test
adc
sarl
je
mov
ja
jbe
mov
jns
test
cmc
hlt
inc
pushf
mov
das
inc
mov
inc
push
mov
insl
or
mulb
pop
mov
sti
popf
mov
xor
decb
loopne
adc
push
sbb
mov
cmp
cmp
into
int
push
cmp
sub
xchg
mov
shlb
fwait
inc
cld
fdivs
xchg
inc
and
sub
inc
mov
mov
les
push
in
mov
sbb
lock
hlt
dec
lcall
sbb
stos
mov
mov
clc
inc
sbb
jo
out
add
xchg
xor
wbinvd
mov
add
daa
or
mov
xor
mov
mov
lret
leave
in
jmp
ljmp
fistpl
push
shlb
divb
xchg
push
js
ja
or
jle
test
mov
icebp
cmpl
ss
fsubs
lret
in
jg
test
push
seto
sbb
loopne
jns
mov
stos
mov
push
les
and
lods
xchg
scas
enter
int3
ret
or
sbb
jb
pop
push
add
or
inc
xchg
add
insb
aaa
repz
push
xchg
and
pop
pop
pop
sbb
lds
sbb
jle
adc
push
xchg
rcrb
jp
enter
push
jmp
xor
mov
shll
cmpsl
add
xchg
rcrb
mov
arpl
bound
push
faddl
sub
in
enter
out
rcrl
mov
push
fimuls
imul
push
mov
movsb
lret
adc
sti
mov
out
add
jne
jmp
xor
mov
push
inc
icebp
shlb
ss
dec
pop
push
pop
jae
sub
jp
ret
add
mov
rol
dec
leave
dec
int
sbb
imul
dec
daa
pusha
xchg
or
mov
xchg
dec
xlat
cmc
sbb
fsubs
addr16
or
cmp
loop
int
repz
xor
fdivs
xchg
out
lods
adc
inc
loop
mov
pop
les
adc
xor
js
into
fsubr
hlt
push
jg
push
jmp
and
mov
mov
push
lahf
jnp
mov
lret
cli
insl
or
or
adc
sbb
gs
xchg
push
jp
add
sbb
and
dec
jp
cmp
cmp
rorl
xchg
mov
pop
popa
aaa
lret
je
pop
and
or
aas
inc
lret
dec
sbb
daa
lahf
popf
rcrl
mov
adc
adc
int
pop
xor
sub
add
xchg
fcomp
or
mov
ficompl
lret
push
xor
stos
xchg
pop
fistpl
pop
mov
cld
inc
jae
ror
push
ret
dec
repz
int3
scas
mov
mov
adc
mov
pop
mov
mov
xchg
dec
xor
add
mov
data16
sub
in
inc
xchg
ret
fcom
das
in
add
cld
test
imull
cmc
lret
int3
mov
push
sub
push
push
cltd
inc
test
mov
push
pop
loopne
lret
call
dec
scas
mov
lret
aaa
sub
gs
push
adc
in
stc
xchg
sarb
pusha
jecxz
mov
cmpsb
cmp
dec
push
mov
jne
lock
mov
enter
les
cmpsl
cltd
sbb
mov
sub
xor
cwtl
cmp
push
clc
icebp
call
jae
or
lea
cmc
fbld
in
or
dec
sub
mov
lds
ret
xor
mov
leave
sbb
add
jecxz
push
cmp
mov
xor
andl
mov
lret
sbb
popa
mov
stos
popf
lods
out
jbe
loopne
sub
cmp
xlat
mov
push
cmpsb
push
popa
inc
and
pop
test
pop
fs
add
mov
sbb
adc
pop
inc
jo
push
mov
add
or
test
fists
cmp
fmul
jno
mov
xor
mulb
adc
or
or
in
clc
xchg
jne
and
dec
jb
scas
pop
lcall
jp
push
out
add
adc
cmp
repnz
push
cld
cmc
sti
jae
cld
loope
jb
cli
lods
inc
dec
mov
pop
ds
xlat
fdivrp
scas
loop
repnz
pusha
pop
lods
mov
bswap
mov
shrl
inc
xchg
call
aas
sbb
insb
push
inc
mov
test
daa
fwait
movsl
push
rorb
add
dec
sub
mov
decb
xor
cs
dec
mov
jne
hlt
mov
ret
and
lock
mov
xor
mov
sbb
fistpll
pop
dec
cld
sbb
sub
push
bound
push
push
or
mov
das
and
daa
xchg
adc
imul
mov
pop
sbbl
aam
cltd
adc
adc
xor
fs
repz
out
jno
mov
dec
push
bound
loope
popa
js
adc
rolb
hlt
cmpb
jle
mov
ljmp
aaa
jp
ja
jge
jmp
adc
sbb
cld
rclb
hlt
lods
in
gs
adc
cmp
sub
sub
lcall
mov
cltd
sbb
ds
ss
push
jae
sub
or
lcall
imul
clc
jae
adc
sbb
cli
cmpsb
pushf
mov
lock
fisttps
daa
outsb
xchg
mov
in
pushf
out
adc
cs
cli
push
or
push
inc
aas
sbb
popf
pop
xchg
pop
jp
mov
sub
add
adc
dec
dec
push
aaa
mov
lcall
test
fsubr
mov
lcall
bound
cld
cmp
mov
pop
fsub
movsl
xchg
xchg
imul
mov
adc
or
dec
add
sub
mov
push
mov
sbb
nop
cmp
sub
mov
mov
sbb
call
push
fs
fwait
inc
js
pop
jle
mov
adc
mov
in
fcoms
fsubr
stos
je
xchg
stos
cld
sub
mov
mov
xlat
pop
ss
stos
and
mov
aaa
decl
add
shll
lcall
lods
call
inc
sahf
lods
leave
cld
pop
test
repz
xchg
pushf
imul
jl
sub
add
add
push
pushf
jno
mov
imul
adc
sbb
and
fidivl
sbb
into
js
test
mov
lds
sbb
fmull
pop
jnp
imul
push
int
jns
jno
out
xor
fiadds
scas
jge
fbstp
sbb
mov
ret
pop
cmp
pushw
mov
cltd
push
mov
adc
mov
dec
les
popa
pop
aad
out
xchg
pop
pop
pop
iret
aad
repz
xor
push
push
jl
insb
ror
mov
cmpsb
inc
pop
leave
popf
jne
sub
sbb
pop
add
gs
sbb
fistps
mov
dec
add
xor
push
mov
lcall
mov
adc
int
sub
lods
push
cmp
pushl
insl
dec
jb
jns
lret
jnp
push
sbb
add
scas
andb
jp
ljmp
lret
sub
sbb
jno
cmp
or
mov
aam
inc
adc
insb
push
imul
add
cmp
push
lahf
ret
sub
xor
sbb
out
outsb
push
cld
push
ret
ret
ds
bound
into
lea
jl
std
xlat
push
dec
mov
dec
mov
jle
clc
repz
scas
xor
push
jno
fadd
rorb
mov
data16
cmpsb
movsl
pop
sahf
mov
data16
aam
xor
push
add
lahf
adc
insl
inc
jbe
mov
inc
dec
mov
pop
adcl
adc
sub
aaa
test
or
es
inc
push
pop
push
push
fdivrs
mull
mov
nop
xlat
xor
mov
ljmp
aam
ljmp
cmpsl
push
mov
insb
popa
movb
insl
in
jge
scas
in
push
inc
mov
mov
pop
scas
pop
mov
rcrl
std
sub
add
sub
mov
pop
sbb
repnz
cmp
les
xor
jge
xchg
mov
mov
adc
lret
push
inc
ficompl
aas
dec
decb
idivb
mov
loope
push
cmpsl
out
adc
mov
aam
test
shl
aas
pop
pop
push
iretw
jo
cmp
mov
cwtl
js
jl
adc
inc
loop
frstor
je
ja
push
out
dec
addr16
shll
xor
sub
les
mov
jbe
xor
test
push
and
imul
pop
nop
nop
pop
data16
scas
sub
fs
sbb
xchg
dec
mov
add
pop
out
push
loop
out
add
test
or
mov
push
cmp
test
xchg
sub
or
sahf
dec
imul
call
aam
repz
mov
and
imul
cmp
xchg
ljmp
in
inc
add
sbb
add
mov
aaa
bound
xlat
loop
xchg
sti
or
cmp
pop
inc
stc
out
daa
inc
wbinvd
mov
cli
push
pusha
clc
aaa
fnsave
movsl
into
jno
ret
sub
in
popf
repnz
jecxz
sarb
loope
gs
dec
xchg
ljmp
cmp
aam
incl
xlat
ret
aaa
mov
icebp
out
fsubl
mov
mov
fwait
push
dec
inc
out
and
lods
inc
cmpsl
mov
outsl
xchg
pushf
bound
and
or
xor
sub
ss
mov
flds
pusha
outsl
and
jmp
icebp
adcl
jge
loope
cmp
add
mov
cmpsl
dec
lods
pop
lret
pop
xchg
push
sbb
push
sbb
push
sub
movsl
cmp
add
push
or
aam
xor
jne
or
into
lds
push
lcall
cmc
je
mov
pop
mov
dec
cli
and
sub
pop
dec
adc
in
jnp
xor
dec
mov
dec
cmpsb
cmp
inc
mov
mov
nop
in
loop
pop
mov
addl
xor
push
xchg
fs
cwtl
imul
lods
cltd
mov
je
add
sbb
fiadds
mov
sti
test
ss
outsb
subl
clc
mov
push
stos
sbb
mov
sbb
sbb
outsb
stos
xchg
std
leave
gs
pop
dec
mov
xor
clc
push
dec
flds
test
mov
mov
jle
bound
aam
movsb
pop
sbb
inc
mov
dec
cmp
sti
pop
cbtw
sub
xor
xchg
ja
push
mov
mov
or
cld
stos
std
in
fwait
rcr
mov
sti
rcll
sub
hlt
jg
mov
stos
mov
mov
or
gs
dec
pop
jg
lods
mov
add
arpl
push
outsl
ret
incl
pop
mov
jp
xchg
popf
mov
and
mov
jns
in
sti
mov
imul
mov
sub
sub
in
ret
fs
mov
popf
sbbl
add
gs
das
inc
jge
cmp
mov
and
lock
dec
inc
std
mov
movsl
lcall
outsl
sub
cmp
sub
xor
int
sbb
popa
lea
inc
push
loopne
fwait
mov
xor
lock
nop
aaa
ss
data16
xor
sarb
xor
decl
stos
and
lahf
dec
jbe
cmp
mov
js
into
xor
pop
xchg
cmp
jns
cmp
insl
and
loopne
imul
lods
add
sbb
por
test
test
mov
scas
pop
or
in
test
mov
scas
das
sbb
jge
lea
pop
lods
jle
scas
int
fwait
ja
scas
int
xlat
rorl
dec
jle
lods
test
fsubrl
add
pop
mov
repz
mov
idiv
loopne
cltd
inc
sub
inc
lds
imul
out
ja
and
outsl
lods
adc
loope
jns
add
movsl
push
psrld
ret
adc
xchg
and
inc
movsb
std
jecxz
roll
xor
sbb
out
mov
testl
dec
pushf
aad
bound
mov
sbb
jl
cmp
dec
insb
push
test
je
out
jmp
adc
sub
jbe
xchg
shll
fdivr
mov
fdivrl
repz
call
mov
mov
xchg
inc
inc
sbb
ficompl
mov
adc
jb
xchg
lahf
push
out
push
sahf
cmpsb
cltd
aaa
loope
scas
sbb
lcall
call
mov
test
leave
ljmp
xor
unpcklps
or
mov
pop
icebp
les
or
and
jl
push
scas
inc
lea
jge
dec
adc
or
dec
jb
pop
lock
push
cli
imul
cmp
inc
lea
cmp
mov
cmp
mull
push
test
and
or
lea
fistl
sbb
movsl
push
jge
lret
test
xchg
out
push
rolb
mov
popa
mov
jmp
jae
jbe
push
aas
push
fs
sbb
test
xor
mov
mov
dec
fisubs
fimull
shl
jecxz
addb
int
or
loope
lods
jnp
lock
outsl
movsl
jo
push
dec
mov
mov
hlt
ja
mov
ret
sarb
adc
add
mov
pusha
subb
or
jne
insb
mov
inc
mov
subl
and
inc
cmpsb
subb
or
inc
push
xor
jbe
cmp
fists
xor
dec
inc
int3
and
dec
jl
xor
xchg
les
push
nop
and
jp
clc
std
push
sbb
ficoms
idivl
imul
in
dec
mov
fwait
ds
adc
in
fldenv
mov
mov
jmp
fidivrl
divb
and
xchg
push
cwtl
jnp
or
push
lahf
mov
leave
rcr
leave
movb
xor
iret
aad
dec
jb
cmp
bound
pop
sbb
sub
xchg
ret
cmp
sti
push
cmc
sbb
das
outsb
pusha
sbbl
jle
cmpsl
cmpsb
xor
adc
cmp
sbb
psrlw
je
maxps
or
shr
mov
out
inc
test
xchg
enter
pop
mov
mov
repnz
pop
je
cmpsb
scas
js
and
dec
jmp
sti
arpl
leave
jbe
sub
mov
xchg
mov
test
adc
jmp
aam
bound
fnsave
cltd
je
xchg
cmc
pop
push
xor
push
lret
fcomi
sbb
mov
scas
lods
scas
jne
aad
leave
shll
pusha
insl
xor
mov
stos
cltd
insl
pop
das
mov
mov
nop
adc
sub
popa
fmuls
jno
jp
pop
push
bound
loope
and
aam
mov
ds
loopne
test
das
push
les
mov
out
mov
shlb
adc
movsb
cmpsl
inc
mov
loopne
mov
mov
push
mov
lods
sub
or
testl
aaa
add
frstor
sub
addb
pop
jbe
mov
dec
inc
mov
fdivr
loop
pushf
addr16
inc
push
out
add
mov
aad
jbe
int
ret
pusha
and
mov
out
add
push
pushf
add
ss
sbb
ljmp
out
pop
das
lcall
pop
enter
pushf
mov
add
cld
dec
fidivrl
dec
push
push
dec
jno
mov
hlt
xor
sbb
ret
lahf
cld
in
stos
cli
fwait
loopne
in
mov
or
popa
ss
or
lahf
add
cmc
dec
shl
insl
jbe
enter
mov
or
inc
xchg
xchg
out
stos
cmpsb
lret
mov
add
in
test
hlt
cmp
in
inc
add
mov
mov
xchg
leave
or
push
int
insl
xorl
ljmp
cltd
aaa
fwait
loope
mov
fucomip
push
pop
cwtl
mov
std
test
out
clc
lahf
das
nop
mov
fs
mov
ficoml
xchg
outsb
aad
andb
add
subb
ror
mov
add
aam
aas
leave
repnz
or
pop
push
test
movsb
mov
sub
xor
jns
popa
dec
jbe
dec
pop
es
add
pop
xchg
ret
or
sar
add
mov
call
push
mov
lock
ficoms
dec
xchg
fists
data16
dec
mov
sub
mov
jno
cmpsl
cwtl
fiaddl
cld
idivl
insl
aam
in
je
push
in
pop
push
testb
sahf
push
jl
fidivrl
and
mov
xor
loope
fadds
daa
xlat
sub
cmpsb
mov
xchg
jb
jp
fisubrl
pop
shlb
int
adc
xor
push
mov
pop
pop
adc
mov
mov
inc
push
cli
sbb
add
add
pop
xchg
inc
cmp
ds
mov
insl
aaa
push
inc
jl
aas
filds
ds
in
clc
pop
mov
popa
iret
iret
insb
les
xor
stc
stos
test
cmpsb
les
daa
pop
in
pop
in
lret
fcomp
jbe
xchg
mov
aam
mov
adc
pop
sbb
stc
push
ja
lods
aad
jne
pop
mov
sub
lcall
sub
in
add
inc
enter
xor
or
inc
xorl
dec
xor
rclb
repnz
enter
xchg
pop
pop
and
in
sti
je
xlat
lods
adc
outsb
inc
lods
test
jl
push
das
pusha
daa
dec
jp
or
sar
lods
shlb
xor
call
cmp
sub
xor
into
in
mov
push
popa
mov
jno
and
and
inc
mov
mov
jmp
ljmp
cmp
push
or
lock
pop
xchg
into
cmpsl
fbld
xchg
or
je
mov
xlat
inc
mov
in
jp
pop
add
ja
into
pop
lahf
sub
mov
fsubs
cld
cmp
or
jb
iret
jne
sbb
mov
test
stos
scas
pop
push
lcall
add
inc
xchg
sbb
inc
jecxz
jge
xor
test
pop
pop
notl
std
sbb
jb
inc
push
mov
pop
outsl
pop
xchg
ret
rcll
shll
inc
idivb
dec
push
mov
js
sub
mov
hlt
cmp
jl
dec
xor
and
arpl
gs
pop
fs
mov
xor
test
test
push
sarb
mov
pop
inc
repnz
cmp
outsl
pop
xor
cmpsl
or
push
insl
pop
add
cs
mov
mov
sbb
push
dec
out
jns
mov
shlb
inc
shl
movb
pop
pop
gs
loopne
loop
push
bnd
push
add
fiadds
and
in
xchg
clc
xchg
xchg
mov
inc
idivl
mov
mov
scas
fisttpl
add
movsl
sbb
test
adc
leave
adc
cmp
imul
frstor
and
call
ret
daa
pop
jg
lods
mov
adc
insl
add
nop
clc
mov
les
aam
in
pop
lahf
xchg
flds
cmp
subl
cltd
xor
xchg
or
cmp
icebp
shlb
push
adc
div
sub
dec
xchg
inc
jnp
inc
dec
mul
cmp
sub
sbbl
frstor
jne
dec
js
add
idivl
push
sbb
in
inc
mov
xchg
dec
in
sahf
mov
adc
mov
push
xor
sbbb
cmpsb
arpl
mov
inc
lahf
lahf
dec
dec
cld
addb
mov
fdivp
dec
add
push
and
mov
push
in
loopne
lret
inc
leave
mov
test
cmpsl
and
loop
fs
cmpsl
je
push
pushf
imul
push
cwtl
cmc
jne
xchg
addr16
inc
sub
mov
lea
cmpsb
dec
jg
push
fbstp
inc
pop
test
adc
add
mov
adc
mov
mov
iret
lock
into
jmp
xor
lret
jmp
enter
jg
add
mov
xor
push
sahf
mov
sti
pop
out
test
and
repnz
out
inc
add
cmp
xor
jp
cmpsl
shr
scas
jmp
mov
mov
xchg
push
mov
jle
sbb
in
fnstsw
inc
int
sbb
fwait
sub
gs
mov
mov
push
ds
jnp,pt
int
cmpsl
cwtl
fists
fsubr
div
lods
test
dec
sub
mov
data16
es
cmpl
pop
iret
adc
pusha
cmp
cmpsb
in
sub
jle
roll
inc
enter
mov
jl
mov
mov
cmpsl
insb
mov
andb
dec
mov
and
cli
cmpsl
lahf
mov
xchg
stos
sbb
sahf
addr16
std
pop
stos
pushf
lock
cmp
jne
mov
enter
bound
insl
mov
sub
mov
push
sub
rolb
cld
mov
jmp
jnp
std
or
mov
inc
xchg
jmp
cmp
push
addr16
push
inc
js
or
add
imul
ds
ret
shlb
hlt
hlt
pop
out
pop
popa
sub
and
fs
dec
push
mov
test
cmp
push
lds
mov
add
leave
add
push
lahf
add
pop
lahf
sbb
push
xchg
xor
mov
or
adc
int3
ljmp
push
sbb
push
lods
pop
and
in
lret
ret
and
mov
jg
in
push
js
inc
inc
arpl
adc
sbb
dec
mov
ret
and
ret
fstpt
fs
sub
jbe
div
xchg
pop
mov
mov
pop
add
push
cmp
movsb
rorb
aas
test
lods
mov
push
jb
test
add
xor
mov
cmpsb
loop
repnz
jbe
mov
push
ficompl
test
mov
push
cld
push
xchg
sbbl
mov
subl
mov
dec
call
dec
xor
ret
cmc
test
inc
lock
dec
sahf
pop
pop
clc
mov
pop
outsb
xchg
sbb
fsubrl
pop
push
cmovbe
fisubl
xor
push
mov
jp
movsb
cmpsb
push
data16
adc
and
cmp
xchg
inc
adc
sbb
rcrb
and
pop
jl
fdivl
ss
mov
add
cmp
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
rol
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
push
adc
add
add
add
adc
add
add
add
sbb
add
sbb
mov
les
repz
sbb
inc
inc
outsb
add
xchg
mov
sub
cmpb
dec
sbb
sbb
jnp
loopne
push
add
popf
fists
rcrl
or
call
push
cmp
lea
add
test
iretw
out
jns
call
popa
xchg
xor
mov
push
add
dec
add
add
push
jle
pop
add
enter
lcall
lods
lock
push
sbb
xchg
pop
mov
in
cmc
jmp
add
stos
and
cmp
jp
jmp
pop
xor
scas
mov
mov
xor
add
sahf
add
aaa
mov
jne
add
adc
cld
add
aaa
jl
je
add
shlb
leave
lret
xchg
and
cmp
iret
or
push
xor
pop
sahf
jecxz
inc
pop
xchg
lods
fildll
mov
or
arpl
push
or
mov
sti
and
push
and
