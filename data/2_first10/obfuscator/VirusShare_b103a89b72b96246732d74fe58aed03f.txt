dec
inc
push
dec
pop
push
xchg
pusha
call
pop
mov
add
add
mov
mov
add
shr
je
mov
xor
sub
stos
rcl
loop
cmp
je
add
add
jmp
popa
pop
cltd
sub
cmp
mov
ss
js
js
dec
frstor
mov
loope
cs
fs
pop
xchg
dec
aaa
js
pop
inc
pop
jne
shl
in
lret
outsl
fsubl
sub
popf
mov
lret
nop
xchg
rcrb
fdivl
movsl
jns
xchg
mov
inc
and
arpl
cmc
inc
aam
in
js
add
sub
cmp
cwtl
or
push
imul
cmp
inc
xchg
xor
loopne
leave
xor
scas
pop
sub
fs
out
popf
jge
pop
and
mov
push
pop
jne
mov
cmpsb
cltd
xchg
push
mov
lahf
sbb
mov
pop
xchg
out
insl
inc
pusha
repz
inc
test
sbb
lds
mov
pop
repnz
mov
sub
or
aas
fnstsw
sub
test
mov
test
mov
push
pop
aas
jmp
icebp
outsb
fisttpll
adcb
mov
iret
cmp
sub
cmp
pushf
int3
sub
add
psadbw
lret
test
popf
call
adc
inc
sub
cmp
aaa
lock
mov
clc
clc
sub
arpl
in
cmp
fstps
movsb
in
add
sbb
and
push
pop
rorb
adc
ss
movsb
inc
iret
pop
xchg
loop
pop
sbb
sub
add
jg
mov
sbb
sbb
dec
and
in
fiaddl
sbb
loopne
sbb
imul
lcall
mov
mov
divb
stos
dec
dec
push
fdivrl
xor
fprem
sub
and
cmp
and
xchg
mov
inc
rcrb
cmpl
xchg
mov
mov
mov
xlat
pop
cld
pusha
jbe
mov
xchg
icebp
sub
mov
xchg
inc
push
in
and
push
loop
mov
fadds
jl
ret
or
xor
adc
or
fmull
movsb
mov
dec
enter
mov
mov
add
in
mov
sbb
es
aas
adc
mov
sbb
jae
jbe
rclb
pop
sbb
xor
jle
mov
inc
out
inc
aaa
jp
mov
xor
gs
lods
shll
inc
sbb
imul
loope
add
popf
fidivrl
cli
mov
mov
dec
or
mov
add
push
cmp
out
pop
ja
movsb
es
dec
inc
xor
jmp
scas
inc
or
fnstsw
in
mov
jmp
adc
pop
jge
pop
xchg
aaa
cwtl
pusha
lret
jmp
shl
cmpsb
fcmovu
es
incl
mov
sub
sub
inc
jmp
leave
psrad
adc
adc
mov
std
pop
jns
jmp
aaa
jmp
or
pushf
fcoml
cmp
mov
lods
lods
mov
shrb
inc
dec
fistl
mov
mov
out
cmp
cmp
mov
xor
nop
dec
sahf
pop
fsubs
scas
insl
pusha
push
adcb
inc
lods
mov
test
aad
stos
loope
sub
push
mov
jae
push
cld
cmpsl
xchg
xor
stc
mov
popf
fcompl
fimuls
ss
xchg
mov
push
loope
push
jbe
ljmp
cltd
dec
jns
cmp
jno
pop
inc
mov
mov
cmp
xchg
les
call
bound
xlat
add
push
loopne
push
std
push
mov
lds
mov
setae
inc
les
inc
mov
loope
in
dec
jnp
in
lcall
pushw
cwtl
mov
jmp
fistps
lods
xchg
cs
popa
cmp
testl
orl
rclb
pop
cmp
outsl
stos
mov
fldl
and
push
cmc
mov
into
mov
cwtl
xor
adc
outsl
dec
sub
dec
or
sub
fimull
or
push
xor
add
pop
ret
jno
pop
push
stos
bound
jae
pop
mov
in
and
and
pop
popf
push
and
add
and
push
rcrb
sarl
inc
pop
xorl
out
jo
mov
xchg
fildl
jg
push
les
out
sub
xor
dec
sub
ss
cli
pop
outsb
out
in
mov
cltd
fucomp
push
xchg
xor
mov
xchg
repz
lret
aam
outsl
push
cwtl
and
jno
in
stc
jno
or
dec
mov
dec
or
ficomps
je
dec
arpl
xorb
cmpsb
fidivl
jge
les
pop
xor
or
fdivl
cli
arpl
lcall
mov
push
push
mov
sbb
icebp
fmull
ds
mov
adc
popf
inc
inc
rolb
adc
add
sub
adc
mov
ret
xor
mov
mov
push
adc
int
mov
pop
outsl
lods
into
jmp
pop
test
jle
incl
fdivs
jge
iret
sti
xchg
sbb
inc
pop
out
sub
out
paddd
mov
or
sbb
xchg
test
jae
cmpsl
mov
cmp
sbb
imul
add
adc
mov
stos
push
outsl
cwtl
lret
mov
or
insl
mov
fildll
mov
cwtl
mov
test
xchg
inc
inc
loope
popa
pushf
xchg
or
sub
movsb
inc
lods
xor
add
shr
cmp
mov
sbb
add
sti
imul
mov
cmp
mov
mov
inc
leave
sarb
mov
in
pop
mov
sbb
adc
xchg
cmp
test
gs
stos
xor
sahf
push
inc
shlb
xchg
push
lret
xchg
test
xor
xchg
rclb
sub
sbb
mov
icebp
dec
and
les
out
into
pop
outsb
jae
cmpsb
ret
push
stos
rcrl
mov
pushl
xor
push
jne
and
pop
in
fwait
pushf
testl
lods
mov
mov
cmc
fistpl
push
add
pop
add
xor
imul
aas
stc
push
lock
dec
out
mov
cmp
aad
xchg
xor
cmpsb
lret
insl
jge
cltd
into
sub
jns
cwtl
pop
mov
push
clc
mov
hlt
int
in
or
mov
nop
bound
add
in
push
sub
std
rcr
inc
pop
mov
loope
loopne
dec
cmp
mov
out
fadd
bound
in
adc
imul
add
sub
push
pop
dec
jl
shlb
iret
add
lcall
fbstp
fimuls
adc
pop
dec
pushf
stos
jns
lret
mov
dec
pop
imul
jo
push
gs
hlt
incb
aad
xchg
fcoms
dec
fdivrs
sub
dec
jg
cmp
and
les
movsb
cmpsl
mov
ja
push
daa
enter
xchg
sub
hlt
movsl
scas
int3
dec
in
movb
jne
rorb
jge
mov
lds
sub
sbbb
mov
test
mov
es
and
int3
js
and
arpl
dec
scas
mov
xor
lret
dec
int3
dec
mov
subb
in
out
sarb
cmp
aaa
or
xor
aad
ds
xchg
adc
and
lock
lods
inc
fisttpll
loope
inc
sub
add
out
inc
insb
lods
adc
push
int
data16
inc
push
or
lahf
gs
cmp
xchg
push
sbb
test
dec
dec
cmpsb
adc
add
mov
push
push
gs
push
lods
fistl
cmp
mov
sbb
aad
xor
inc
pop
sarl
cmp
in
jg
jmp
imul
leave
inc
fisubrl
lock
leave
pop
loope
add
push
push
sbb
and
mov
je
pop
pop
in
stc
pop
popa
cmc
mov
sub
jae
xlat
mov
jnp
and
test
sbb
enter
sub
out
shlb
divb
sbb
das
push
and
and
into
cmp
or
push
in
sahf
xchg
or
xchg
int3
sbb
pop
xchg
out
jbe
in
stc
push
xchg
add
add
xchg
pop
nop
inc
pop
mov
mov
push
cmpsl
push
inc
mov
stc
mov
cmp
cmp
pop
lea
insl
fs
test
jmp
push
faddl
pop
xchg
stos
clc
sub
cld
adc
xchg
mov
aam
push
lret
adc
jns
add
seta
fsubr
adc
xchg
push
lds
xchg
lret
and
test
enter
xchg
out
mov
push
jnp
xchg
pop
sti
rcrl
pop
and
jmp
or
sbb
mov
out
test
mov
or
and
insb
mov
cmp
in
push
and
mov
mov
inc
sbb
out
jae
xor
add
into
add
dec
push
in
loopne
inc
insb
sbb
mov
cwtl
or
cmc
sbb
mov
or
fisubs
repz
mov
inc
xchg
cwtl
push
fbstp
dec
les
in
jge
fsubs
fsts
fstpl
adc
fcomps
or
cmp
ret
mov
jle
pop
in
filds
enter
pop
jl
insl
lock
mov
fsubs
test
andb
inc
adc
imul
sub
dec
xor
xor
stc
cld
incl
pop
jnp
stos
rcl
sub
data16
adc
inc
in
rcll
add
adc
sahf
aam
dec
sub
fisttps
mov
pop
fs
repz
mov
sbb
daa
aam
add
cs
mov
jp
lahf
std
xchg
shrb
add
sti
int
scas
or
lock
in
dec
std
mull
and
popa
pop
subl
insb
jecxz
leave
ja
arpl
lods
adc
mov
pop
outsb
in
mov
inc
sub
cwtl
pop
daa
mov
lds
jmp
or
sub
outsl
fwait
pop
outsl
mov
movsb
mov
lea
and
sbb
jle
push
loope
sbb
cltd
add
jb
addr16
adc
cli
jp
xchg
aas
dec
cmp
mov
scas
mov
and
inc
fcmovu
cmp
mov
mov
aaa
inc
cmp
adc
mov
jmp
cmpb
mov
cmp
inc
inc
fbstp
call
inc
js
sbb
mulb
scas
loopne
add
mov
popf
stc
test
pushf
cmp
cmp
sbb
sbb
xor
stc
fnstsw
xchg
jns
sarl
add
fcoms
sbb
stos
adc
inc
add
mov
or
out
inc
sub
fs
adc
sbb
scas
push
add
push
mov
pushf
pop
ss
jle
pop
cwtl
iret
pop
push
lds
jno
jl
std
cmpsl
jg
fnsave
xor
jae
loop
mov
or
imul
sub
fwait
cmp
leave
cmpsl
mov
pushf
cmpsl
push
das
and
mov
sbb
xor
addr16
jmp
xor
add
mov
fs
hlt
cmp
and
cld
pusha
pop
call
adc
mov
test
cmp
mov
mov
out
push
test
pop
bound
aas
dec
data16
popf
test
decl
inc
enter
mov
out
loop
adc
in
lahf
hlt
pop
adc
add
das
insl
cmpsl
fbstp
testb
xor
mov
stos
pop
push
fstpl
pop
test
ss
outsl
xchg
jns
mov
cltd
in
or
fildl
cmp
adc
shrl
cwtl
or
test
cmp
add
cmp
jnp
test
or
rcll
rorl
in
mov
mov
pop
pop
sub
or
gs
mov
in
cmpsb
mov
imul
clc
lock
arpl
jg
sbb
arpl
cmpxchg
mov
int3
sub
mov
cmpsl
les
in
fsubl
inc
jae
mov
adc
and
mov
mov
and
fs
fmul
fisttpl
sbb
pop
shr
dec
out
fs
aam
popa
pop
out
ret
push
jmp
int
ret
gs
xchg
in
sub
ljmp
lret
xchg
sarl
popa
mov
int
pop
xor
in
and
mov
push
push
sti
shll
sahf
fwait
rcrb
add
fldcw
xchg
fnsave
jo
xor
mov
fnstcw
negb
xchg
mov
xchg
ds
push
jp
pop
mov
or
out
dec
mov
sub
jbe
xlat
repnz
lods
imul
dec
arpl
aam
and
xor
imul
ss
sbb
stos
xor
in
je
mov
sub
lods
mov
and
xor
jmp
rclb
lahf
and
in
push
jb
adc
fiadds
loop
jne
in
popa
popa
mov
adc
mov
cli
xchg
fstpt
jp
inc
mov
je
imul
pop
pop
popf
xor
xchg
xchg
in
cmp
fnstenv
push
pop
adc
sbb
jl
cmp
popa
inc
add
dec
out
imul
dec
out
mov
or
pop
push
rcr
mov
xchg
dec
mov
mov
push
or
and
xor
xor
sti
jb
fwait
and
cmpb
scas
or
daa
int3
and
lret
jae
cmpsb
mov
cs
or
test
movsl
scas
dec
mov
les
mov
xchg
iret
cld
xchg
xor
ja
shrl
mov
and
mov
mov
add
js
sub
fstps
push
arpl
popf
nop
xchg
filds
mov
add
or
aam
out
and
pop
push
or
test
xor
mov
cmp
into
outsb
mov
jle
popf
mov
lcall
and
jg
xor
aas
jge
faddp
das
mov
data16
addr16
push
fstpl
inc
test
outsl
jp
jge
cmp
xchg
mov
call
sub
xor
and
mov
push
mov
inc
scas
sti
addr16
jno
mov
sub
push
jp
arpl
and
cmp
sub
sub
fidivl
sub
out
dec
cld
xor
aas
xor
mov
push
lret
sbb
xchg
icebp
push
lret
lods
sbbl
and
aas
pop
push
sub
movsb
jmp
fs
xor
xlat
sbb
push
test
and
popf
cmp
cmp
bound
xchg
mov
inc
cmp
cs
mov
imul
xchg
pop
inc
xor
dec
mov
cmp
adc
fsts
mov
cltd
and
test
inc
imul
push
fimull
aaa
mov
pop
pop
lcall
ret
rcrb
into
inc
lcall
xchg
cmp
lcall
stos
xor
push
cmc
push
sbb
pop
fcomi
sarb
or
dec
fwait
mov
xchg
mov
daa
xlat
inc
inc
pop
stc
movsl
sub
js
ljmp
fs
sahf
mov
in
pushw
and
or
fsubrl
dec
xchg
pusha
cmp
push
flds
lret
orb
xchg
clc
mov
idiv
imul
sub
push
test
mov
out
adc
inc
fstl
pop
sbb
rorl
lret
add
sub
in
or
inc
and
pushf
jle
test
sub
cmp
mov
pop
lcall
stos
sahf
inc
nop
out
outsl
sbb
add
push
mov
push
movsb
add
pop
daa
and
popf
mov
in
or
dec
out
in
lds
xchg
data16
scas
xor
jns
cwtl
sarl
dec
mov
push
mov
add
pop
mov
call
enter
lods
mov
or
setle
fstpt
pop
ljmp
dec
mov
sbb
popf
mov
jmp
fldcw
or
stos
push
in
das
mov
and
gs
jecxz
je
test
shl
enter
jecxz
mov
cmpsb
not
adc
ret
mov
fiaddl
push
cltd
pop
fstpt
cli
test
or
add
icebp
clc
adc
or
jne
xor
popa
sub
outsl
pop
inc
das
xor
ds
mov
out
in
and
or
adc
imul
add
and
sub
cmpsl
adc
adc
jo
dec
scas
sbb
or
sbb
xor
xlat
jge
and
pop
jge
sub
rcrb
nop
sub
inc
push
pop
mov
dec
fcoml
xchg
dec
and
jo
cmp
adc
and
or
insl
imul
pop
dec
test
dec
fldcw
in
loope
xor
js
leave
xlat
jns
out
xchg
inc
mov
das
jno
cli
mov
adc
push
imul
cltd
jns
add
jle
jle
inc
out
pop
es
or
aas
repz
jmp
mov
outsb
popf
clc
or
ss
orl
cs
aas
sbb
popf
shr
lahf
jb
enter
bound
je
loopne
inc
mov
hlt
repz
cmp
pop
mov
inc
mov
cmp
dec
shlb
test
add
fwait
in
and
fsubr
pop
lahf
mov
inc
jne
pop
nop
inc
push
or
int3
xor
sbb
xor
pop
test
negb
push
ficompl
xchg
lret
mov
or
xor
or
imul
xor
cmp
jle
mov
inc
frstor
or
inc
loop
gs
movsb
xor
movsl
fildl
ror
adc
out
mov
mov
stos
sub
subl
pop
sbb
jbe
push
inc
imul
ret
sbb
stos
jb
pusha
pop
clc
fisubrl
iret
inc
loop
test
sub
inc
pop
dec
mov
cmp
test
inc
dec
or
inc
jge
out
pop
ret
outsl
cli
daa
out
add
gs
pop
popa
xchg
inc
movsl
jne
push
in
daa
fiadds
fisubrl
lret
mov
sbb
testb
cs
jns
xchg
xor
cltd
mov
xorb
je
mov
pop
push
ds
sub
adc
push
nop
in
cmp
xor
sarl
shll
fistpll
addr16
push
push
scas
lock
sti
leave
push
push
push
out
test
fdivrs
push
cmp
xor
in
mov
pop
js
mov
fsubr
xchg
es
ret
or
ljmp
dec
lock
movsb
int3
cmp
pop
xchg
mov
pop
push
xchg
pushf
hlt
outsl
jp
cmc
mov
or
push
loope
mov
test
dec
jno
or
dec
push
mov
mov
fimull
popf
enter
dec
loope
pop
and
or
sbb
repz
je
popa
out
arpl
movsl
jo
adc
nop
aaa
fwait
cmp
add
daa
xorl
fisttpll
and
adc
xchg
stc
or
cmp
fcoms
loope
stos
pop
repnz
in
sub
xchg
fwait
push
fs
fwait
sub
push
inc
arpl
mov
cmc
mov
cmp
movsl
in
xor
icebp
add
rolb
adc
popa
adc
je
popa
movsb
xchg
das
rorb
cmpsl
pop
mov
jg
mov
sub
or
xor
pop
mov
ret
sahf
inc
dec
popf
fnstcw
mov
int3
ja
sar
xchg
push
and
pusha
sbb
xchg
pop
aam
dec
mov
shlb
int
push
test
pop
pop
ficompl
fldl
mov
cs
fbld
lock
adc
divb
xchg
mov
les
in
jecxz
mov
or
adcb
sahf
mov
jmp
lods
adc
ja
pop
add
cltd
lods
jae
xchg
loopne
sub
pop
pop
sub
jb
enter
push
clc
mov
pop
lea
push
fimuls
sub
mov
aas
aas
dec
jae
sbb
aad
popa
or
cmp
rcl
clc
std
sti
sbb
mov
pusha
pop
stc
sub
std
fwait
cwtl
jne
push
scas
pop
mov
ftst
sti
push
popa
aam
add
sbb
push
xor
mov
push
repz
push
inc
lret
sub
pop
sbb
sbb
xchg
ja
jge
cmp
ret
stos
jl
mov
dec
repnz
adc
addl
rcll
rolb
ror
sbb
push
loopne
mov
add
inc
arpl
push
jecxz
inc
daa
sti
dec
bnd
inc
pop
inc
imul
add
arpl
fstpt
jl
xor
xor
lea
add
shrl
dec
out
and
arpl
dec
imul
sti
and
jl
subl
pusha
sub
mov
jle
lahf
pop
ret
hlt
js
sbb
jbe
imul
add
push
mov
fdivl
xor
in
dec
lcall
mov
push
hlt
fs
in
dec
and
test
aas
jb
leave
pop
push
and
mov
jmp
add
outsb
aam
cmp
jns
inc
outsb
adc
jmp
rclb
mov
or
mov
fsubrl
into
or
ljmp
in
dec
pusha
lret
and
or
popf
cli
sarl
mov
stos
ja
add
push
pop
pop
push
fldcw
sub
sub
and
or
push
insl
pmullw
mov
roll
sub
mov
outsl
sbb
dec
sahf
inc
adc
loopne
xchg
xlat
sub
and
sub
xorb
xor
adc
push
inc
mov
shlb
inc
jo
mov
push
xchg
mov
dec
push
call
dec
fmul
outsb
jl
lcall
lds
or
iret
and
clc
mov
and
test
jo
inc
pop
xchg
sbb
inc
iret
fildl
jg
gs
bound
xor
fwait
mov
jns
repz
pop
daa
xchg
addb
lds
mov
xor
icebp
add
cmpsl
idivb
mov
mov
in
aad
or
pop
sub
sbb
push
push
mov
push
insb
mov
bound
cmpsb
or
call
jo
push
dec
xchg
inc
test
xchg
data16
inc
mov
ret
pop
pop
push
inc
loop
fsts
mov
std
popf
mov
xlat
scas
loopne
adc
jmp
gs
cld
test
ret
xor
popf
icebp
dec
mov
insl
mov
push
ja
in
adc
cmp
insb
xchg
dec
cmp
fldl
jb
ss
movl
nop
das
inc
cmpsl
inc
lds
mov
aam
jnp
xchg
mov
in
cli
sti
std
testl
in
push
mov
mov
push
js
xor
sub
stos
fs
gs
rolb
out
mov
adc
sbb
insl
cmpsb
sbb
stos
cmp
rolb
sbbl
xorb
add
add
mov
mov
mov
push
int3
xchg
jb
push
cmp
mov
cs
sub
dec
jge
sbb
mov
and
jecxz
lahf
push
push
jmp
inc
xchg
xor
inc
lds
push
inc
jge
mov
cmp
pop
push
outsl
jae
int3
jae
or
push
inc
or
popf
scas
adc
fistps
xor
in
pushl
pop
mov
add
out
xor
ret
pop
pop
push
mov
jecxz
push
jno
lahf
rorb
jbe
fwait
jg
dec
mov
push
mov
loope
push
mov
inc
nop
stos
lcall
and
mov
jg
ss
cwtl
in
push
out
adc
lahf
jae
mov
adc
cmp
into
push
pop
shlb
push
or
xchg
insb
cli
int
aad
fwait
test
xchg
pop
push
lret
jno
sbb
mov
adc
ficompl
mov
mov
mov
les
xor
mov
or
mov
push
insb
add
inc
iret
scas
ficomps
inc
insl
insb
pushl
mov
adc
mov
dec
xor
sub
xchg
sti
dec
xor
lods
mov
jbe
nop
pushf
fwait
ljmp
dec
fildll
pop
push
fdivr
or
cltd
insb
aam
fcomps
xorb
lds
nop
adc
stc
sbb
or
push
jl
outsb
daa
ja
bnd
inc
mov
test
aaa
or
push
adc
mov
cltd
cmpsl
adc
add
push
jb,pt
dec
cmc
stos
pop
jg
pop
mov
pop
iret
cmp
xchg
test
sbb
aas
orb
je
bound
movsl
add
xchg
ja
stos
add
lea
pop
sub
call
or
mov
ret
lods
pop
shrb
sti
fnstcw
add
pmulhw
xchg
lret
sti
push
fsts
nop
stos
xchg
add
jmp
jge
adc
and
inc
push
sbb
pop
mov
add
call
int
cmp
popa
imul
xor
mov
scas
sub
jne
pop
sti
cmp
adc
jb
fbstp
cmp
sub
out
loope
push
mov
inc
fisubrl
mov
loopne
in
divl
out
xchg
mov
in
imul
push
lret
jnp
mov
into
aaa
mov
popf
stc
mov
or
addr16
test
test
lret
cmp
rcrb
xchg
out
or
out
cwtl
inc
mov
repz
bound
call
inc
pop
cwtl
push
cld
sbb
out
test
dec
add
pop
push
insl
xor
adc
mov
xor
aam
adc
push
out
orb
gs
pop
iret
pop
xlat
call
loop
push
jnp
jecxz
jns
dec
mov
leave
mov
scas
add
sbb
ret
xchg
movsb
mov
cmpsl
lods
test
cmp
std
cs
add
pop
pusha
je
and
add
sbbl
lock
cmpsl
and
into
mov
cmc
das
stos
xchg
insl
scas
or
repz
jmp
push
cli
jo
lcall
mov
in
call
fadds
dec
mov
repz
test
push
mov
ss
cli
test
xchg
arpl
scas
sub
pop
push
shll
xchg
aas
and
sub
xor
mov
repz
clc
fwait
jecxz
in
popa
add
xor
mov
cld
pop
rolb
push
call
xchg
xor
call
push
mov
std
sti
or
push
sbb
mov
divl
cmc
enter
cmp
mov
loopne
dec
cmp
push
xchg
push
aad
pop
pop
sbb
shrl
ss
fistps
nop
mov
push
push
faddl
jecxz
insb
mov
mov
lcall
push
out
lahf
dec
cs
xchg
pop
sbb
ret
cmc
mov
mov
sub
pop
sub
pop
test
adc
fcompl
mov
pop
lea
cmp
and
mov
pushl
cmpsb
fsts
aad
ret
jecxz
mov
rol
dec
adc
insb
xor
fsubrl
inc
sbb
sbb
adc
outsb
inc
test
mov
jno
xchg
insl
cs
sub
mov
jg
repz
std
xchg
shlb
lahf
out
mov
xor
mov
pop
dec
shll
out
ficomps
dec
xchg
push
stc
inc
lods
or
iret
sbb
imull
bound
fsubs
jg
clc
cmp
push
jno
add
in
adc
jns
loopne
mov
stos
xchg
pop
and
mov
mov
and
ja
sti
push
mov
push
push
adc
cld
sub
adcl
jle
insl
jne
push
push
stos
cmpb
add
pop
pop
sbb
push
rcrl
sbb
dec
hlt
push
cmpsl
fdivl
flds
pop
xchg
pusha
les
call
push
jg
notl
mov
and
sub
pop
push
mov
inc
test
hlt
dec
gs
jecxz
cmc
or
ds
cltd
jae
sub
xchg
mov
ljmp
xor
mov
mov
mov
enter
sub
and
xchg
jg
adc
aas
mov
inc
pop
shrl
pop
ret
sbb
xor
inc
mov
ja
inc
lret
mov
adc
pop
cmc
xchg
lea
mov
push
mov
jo
lret
loopne
xchg
mov
adc
add
lods
mov
inc
pop
jns
stc
jmp
and
pop
add
lcall
sti
dec
das
sub
sahf
xchg
enter
in
jge
sbb
out
jae
mov
jns
and
jno
cltd
push
mov
mov
xlat
mov
jle
mov
jle
imul
loopne
push
and
pusha
push
pop
xchg
aad
repnz
jae
inc
and
and
push
andb
adc
fsubs
das
shr
nop
jg
dec
xor
jge
or
jmp
fldenv
pop
mov
push
fnstenv
bound
mov
xor
mov
out
adc
and
inc
add
sbb
shl
fwait
mov
jnp
pop
or
and
andl
jo
adcl
imul
xlat
movsb
push
or
and
imul
mov
cli
mov
cmpsb
adc
int3
cmp
sbb
xor
inc
sbbl
int3
push
sbb
into
inc
ljmp
test
icebp
mov
test
addr16
je
mov
xor
je
mov
imul
adc
mov
dec
xchg
and
dec
sbb
out
sub
jp
pop
dec
imul
std
enter
or
dec
sbb
cmp
outsl
in
jnp
enter
enter
loope
mov
inc
cwtl
mov
scas
aas
icebp
mov
dec
cs
xor
push
jge
or
mov
mov
lock
mov
std
adc
push
das
cld
push
add
call
cmp
mov
add
idivb
movsl
cmp
aaa
push
pop
fisttps
xchg
fmull
in
int3
or
cmp
add
jne
mov
jbe
sub
jnp
and
lods
in
sahf
or
mov
adc
pop
sahf
inc
cltd
mov
xor
loope
dec
push
cwtl
sbb
xor
std
inc
pusha
xchg
pop
mov
hlt
fs
imul
sahf
jecxz
div
sbb
aaa
jae
jo
xchg
or
push
cwtl
jecxz
bnd
cmp
add
jns
and
out
inc
out
xchg
dec
popa
enter
push
icebp
mov
xchg
dec
imul
cmpsb
or
push
inc
and
sub
jle
dec
adc
mov
sub
fcoml
dec
cmpb
pop
adc
mov
test
lret
je
ficompl
js
cmpsl
push
and
lret
int3
sbb
xchg
mov
rorb
test
cwtl
rcll
sbb
iret
ret
dec
inc
sub
aas
cmp
push
mov
dec
sbb
xchg
loop
in
cmp
scas
jl
adc
add
jp
mov
sub
f2xm1
inc
stos
lods
dec
aad
cmpsb
jg
and
pop
out
mov
sbb
lcall
jl
jae
add
lret
xor
push
sbb
mov
out
cmpsw
into
jl
popa
fs
popa
outsb
pop
and
lret
mov
sbb
xchg
jo
aaa
push
movsb
in
ja
push
shll
in
mov
stos
sarb
sbb
sbb
movsb
mov
cltd
fisubs
sarb
paddsw
outsl
loope
sbb
jmp
movsb
mov
sbb
idivb
cld
test
mov
test
imul
ljmp
and
loope
or
insl
add
or
mov
xor
mov
call
shll
add
xchg
pop
mov
push
into
pop
mov
ljmp
pop
push
test
fisubl
jecxz
dec
das
dec
lret
aam
sbb
xor
fistpll
stc
add
enter
outsl
pusha
fistpl
jnp
daa
idivl
inc
punpcklbw
mov
add
lds
shlb
sbb
mov
xor
cmp
nop
ficompl
popf
sti
inc
mov
testl
out
push
cmp
jmp
or
popf
add
gs
mov
adc
leave
or
sti
mov
jo
pop
in
mov
mov
add
xchg
sbb
mov
out
mov
in
jo
xchg
loopne
pop
bound
in
test
cld
pop
mov
in
gs
out
mov
dec
stc
scas
inc
cs
sub
les
loope
add
fidivs
xor
xchg
and
cmp
fmuls
cs
jge
stc
sti
mov
cwtl
pop
add
fistps
mov
sbb
push
in
xor
push
lock
push
or
loopne
adc
adc
mov
sub
js
fidivrl
testb
xor
add
fadds
faddl
cmp
jge,pn
adc
add
movsl
pop
sub
bound
mov
pop
or
pop
xchg
aas
jb
cli
jle
adcb
std
ja
add
aaa
adc
cs
mov
xor
loopne
imul
popf
fs
sub
pop
xchg
cld
sbb
jmp
adc
jmp
and
push
mov
mov
ljmp
inc
or
cmp
imul
adc
pop
cmp
xlat
pop
bound
hlt
cmp
inc
push
sub
sbb
xchg
lea
add
pop
pop
dec
cs
pop
scas
es
pop
aas
jmp
mov
insl
cmp
cltd
out
ficoms
ja
mov
sub
xchg
insb
mov
xchg
add
rcll
mov
arpl
insl
jns
inc
fdivrs
sub
out
push
jo
inc
push
test
dec
sub
inc
cli
or
into
mov
in
movsl
cmpsb
or
ror
pushf
call
dec
in
sbb
xor
mov
dec
in
jle
shl
push
call
push
gs
mov
sbb
xor
in
mov
push
add
adc
cmpsb
or
imul
clc
sbb
adc
or
insb
lds
mov
sub
out
mov
insb
xlat
in
gs
aad
ss
cmp
push
jae
adc
adc
push
xchg
roll
cltd
out
aas
aaa
inc
lods
insl
jnp
mov
pop
sbb
add
mov
xchg
data16
push
loopne
arpl
adc
repz
mov
inc
mov
in
jnp
hlt
pop
lods
mov
push
and
jecxz
dec
mull
in
pop
sahf
xchg
mov
jge
cltd
lods
lods
movsb
mov
sti
div
sbb
mov
imul
lods
or
fsubrs
mov
mov
pop
pop
sub
sub
or
sbb
ja
out
jp
xchg
cmp
xchg
bnd
sub
mov
dec
pop
sub
shr
outsb
gs
dec
mov
push
movl
andb
bound
testl
inc
in
loop
pop
mov
or
outsl
add
dec
mov
xor
cltd
je
fcmovnb
adc
cmp
cltd
xor
mov
xchg
pushf
cld
cli
inc
cmp
push
mov
xor
or
in
push
lds
loope
pop
stos
repnz
test
cmpsb
cmp
icebp
push
mov
push
cmpsl
cmp
lcall
scas
or
fwait
rorl
fistpl
sub
xchg
sub
nop
enter
xchg
int
adc
loopne
jns
cld
out
jmp
gs
mov
inc
hlt
pop
insb
pusha
clc
xor
mov
push
lea
lret
sahf
pushf
add
dec
ficomps
dec
rcr
dec
js
repz
adc
out
out
sbb
scas
cmp
mov
imul
rorw
cmp
pop
xchg
imul
pop
popa
sbb
bound
jo
dec
push
pop
cmp
test
cmp
push
mov
movsb
aad
rorb
pop
adc
subb
push
cmc
dec
or
cld
in
lea
outsl
ljmp
xchg
dec
add
bound
dec
pop
rcrl
push
cmp
or
xchg
je
stos
mov
xchg
insb
orl
hlt
shll
nop
loopne
pop
cmp
jbe
icebp
sub
sub
fwait
push
cmc
popa
fwait
stos
jmp
xor
scas
jecxz
insl
push
or
decl
cmpsl
incb
sub
outsb
mov
aaa
lock
and
add
dec
sub
push
dec
fsub
xor
fisubrs
hlt
stc
iret
negl
rcr
lret
idivl
and
insb
dec
sbb
roll
fldenv
adc
jne
xor
jge
pop
mov
xchg
dec
loopne
fcmovnu
les
ficoms
incb
or
inc
cmp
add
jne
pop
movl
cmpsl
testb
movsb
cltd
lahf
in
icebp
out
rol
cmp
mov
dec
enter
ja
and
mov
loope
pop
pusha
jo
mov
out
ret
pop
xchg
adc
fs
cmpsb
shlb
shlb
jne
add
repz
xchg
push
add
jl
daa
lret
repnz
cmc
dec
jl
aaa
lods
mov
adc
push
ret
andl
jns
enter
push
and
in
test
adc
ja
inc
lahf
les
mov
jmp
cmp
pop
repnz
aad
lock
fdivrs
jb
mov
jo
sub
leave
lods
xchg
jg
sub
stc
rclb
icebp
out
cmp
sti
dec
push
push
sub
jae
pop
das
mov
adc
mov
adc
push
dec
and
jbe
add
pop
or
xchg
or
std
rdtsc
push
into
test
inc
test
dec
mov
and
dec
mov
xlat
fstl
push
je
xchg
xchg
insb
and
dec
cwtl
fisttpll
pusha
shl
imul
mov
adc
cmp
adc
jo
xrelease
cmp
hlt
mov
dec
xor
aad
mov
pop
mov
stc
stos
pop
add
fisttpl
add
shll
jmp
int3
pusha
jne
pop
sub
pop
inc
lret
imul
mov
clc
test
addr16
jns
push
jge
sbb
imul
cwtl
fists
je
mov
scas
loop
ja
imul
nop
in
push
jnp
adc
stc
mov
out
inc
out
xchg
cld
popf
mov
or
push
push
into
xor
in
pop
mov
loopne
dec
fs
mov
add
lret
fwait
into
ljmp
mov
sbb
pop
jp
jg
mov
ljmp
sti
std
nopl
fs
jno
mov
inc
xor
sbb
xchg
sbb
dec
in
fimull
cmp
inc
jns
aam
aad
xchg
cmp
lods
movsl
xlat
int
imul
mov
and
jo
pushf
rcrl
or
clc
jecxz
sub
push
stos
repz
fsubs
inc
jl
iret
inc
push
push
or
pop
call
test
or
jnp
push
outsb
roll
out
andl
mov
or
dec
fwait
mov
dec
cli
jnp
sub
aaa
dec
xor
push
lock
sub
dec
pop
loope
pusha
push
and
or
call
shlb
and
pop
cmp
bswap
jae
sub
pop
iret
movsl
mov
pop
repz
sarl
mov
ljmp
out
inc
shrl
stos
out
data16
call
fcompl
fdivl
mov
lds
jmp
pop
inc
outsb
adc
add
imul
outsl
popa
or
xchg
std
lret
adc
or
rcrl
jle
shrl
rcl
pop
mov
loop
fldt
pop
inc
fisubl
adc
nop
dec
leave
jl
and
cs
ret
outsl
and
daa
dec
pop
sbb
stos
stos
int3
mov
outsl
roll
cli
or
cld
and
cmpsl
xor
ror
and
xchg
pop
out
add
or
ret
into
mov
loopne
xor
mov
daa
mov
xor
les
test
cmpsb
xchg
mov
ret
and
pop
dec
loopne
pop
popf
mov
cmp
mov
mov
pop
mov
xor
faddl
daa
or
divl
mov
pop
jns
pop
aaa
pop
add
dec
push
ret
hlt
mov
cltd
icebp
ret
jg
jae
fcoml
push
sbb
mov
xlat
sub
pop
xor
loope
icebp
das
or
push
in
ficoml
int
std
fstpl
mov
test
sub
xorb
loopne
sbb
out
ljmp
mov
clc
enter
pop
adc
push
mov
sbb
dec
cmp
jecxz
xchg
adc
sbb
fildl
inc
ret
xor
fs
popl
sbb
push
mov
popa
loope
jg
je
cld
mov
cwtl
mov
cwtl
out
or
dec
xor
je
cwtl
mov
mov
pushf
fwait
imul
insl
xchg
adc
or
inc
dec
scas
and
ja
sbb
xor
lret
xchg
sub
add
dec
adc
je
inc
pop
ds
clc
ja
cli
mov
repnz
js
adc
lods
sbb
pop
adc
mov
mov
mov
nop
push
addr16
sub
push
mov
mov
dec
mov
xchg
clc
xor
pushf
xchg
cmp
js
and
jp
cltd
stos
test
mov
mov
shrb
js
mov
mov
cmp
adc
popf
ror
mov
faddp
push
add
std
lret
push
sysexit
xor
pop
cmp
fldt
rcrl
call
in
push
dec
stos
lahf
call
sub
hlt
pop
pop
repnz
dec
roll
mov
cwtl
push
mov
cmpsb
adc
add
hlt
cwtl
gs
cmp
adc
cmp
push
paddd
inc
jmp
js
loop
das
loop
xchg
lock
fnstsw
gs
mov
inc
add
inc
mov
mov
daa
xor
cmp
jno
icebp
nop
lock
bound
jecxz
push
stos
dec
test
mov
pop
jbe
sub
leave
fdecstp
xlat
int3
fs
add
pop
pop
mov
repz
and
fisubl
aam
fisubrs
fistpl
test
xchg
into
pop
ja
es
cmp
xchg
into
clc
frstor
xor
fldenv
sbbb
mov
pop
sub
jecxz
jecxz
sti
ljmp
enter
xor
repnz
je
cmpsl
dec
or
lds
popa
stos
int3
cltd
xchg
pop
repz
test
lret
fldcw
mov
inc
and
pop
aad
mov
and
cmpsb
pop
fwait
mov
xchg
pop
pop
dec
dec
pop
clc
xchg
xor
push
imul
scas
dec
lods
pop
rclb
in
jl
pop
sub
jnp
lds
in
dec
add
sbb
xlat
cwtl
insb
out
ljmp
sbbb
cmp
bound
push
sub
negl
insb
xor
clc
mov
sbb
lods
aam
pusha
addr16
and
dec
clc
xchg
fcoms
nop
mov
sub
icebp
inc
fimuls
sub
xchg
out
imull
inc
das
xchg
lock
orl
icebp
js
xlat
das
push
sbb
lcall
fmull
scas
dec
ficoms
fiaddl
out
sub
scas
or
dec
push
inc
mov
pop
movsb
cli
orl
push
lock
dec
les
xchg
pushf
call
repnz
or
cmp
and
sub
fwait
xchg
add
mov
mov
xchg
pusha
or
fstps
rcll
push
lea
stos
inc
stos
dec
int
mov
sub
in
cmpsb
in
dec
loopne
inc
mov
add
xor
pushf
ret
cmp
jbe
jl
fcompl
dec
sbb
fld
add
rorl
jecxz
add
push
mov
aad
inc
or
cmp
push
inc
jl
mov
inc
mov
ret
pop
imul
dec
or
int
cmc
mov
mov
je
in
jno
lret
mov
xchg
push
or
rdmsr
mov
jb
clc
inc
fisubs
xchg
mov
inc
mov
dec
or
mov
push
dec
sti
lret
or
cwtl
nop
sahf
push
sbb
in
adc
jo
push
push
icebp
cli
aad
xor
rcrl
pop
adc
call
sbb
test
lcall
lahf
and
xchg
jl
aaa
andl
bound
mov
or
jl
jb
pop
dec
cmc
xor
shlb
or
mov
daa
mov
pop
xchg
sub
int3
stos
mov
insb
dec
push
mov
sbb
cmp
xchg
cli
xchg
mov
mov
mov
pop
aam
fsts
mov
mov
xor
and
push
xor
call
aad
repnz
loopne
out
and
aad
inc
jnp
and
out
mov
and
dec
imul
insl
jne
call
aaa
mov
mov
mov
push
xorb
add
and
hlt
jo
inc
pushf
and
add
ret
dec
add
xchg
pop
sub
insl
mov
std
push
leave
arpl
ljmp
shl
xchg
xor
dec
sub
and
and
jae
pushf
nop
mov
cmp
cmp
adc
fsub
outsl
iret
fistps
add
mov
pop
bound
push
shll
out
add
mov
cmpsl
popa
into
outsl
mov
inc
jnp
pop
cmp
daa
outsb
pushf
mov
sbb
enter
sbb
les
lahf
fs
xchg
and
cli
xchg
bound
mov
or
jmp
adc
or
jmp
or
push
iret
je
or
xor
ret
movsl
pushf
lods
scas
enter
xor
punpckhwd
stos
arpl
jbe
and
or
lret
pop
das
loopne
loope
out
int3
pop
movsl
jmp
outsl
mov
lahf
jg
jecxz
psubusb
xchg
test
jb
enter
push
out
ror
int3
ljmp
fs
int
sub
popa
test
push
jbe
push
xchg
pop
mov
sbb
sarb
mov
mov
aas
les
sar
pop
jl
pop
inc
xor
sahf
ljmp
sbb
push
mov
rcr
test
push
pop
sub
lret
pop
dec
mov
repnz
cmp
popa
or
xchg
leave
scas
mov
sbb
cmp
add
dec
test
negb
sbbb
xor
sub
stc
add
add
mov
rolb
in
mov
fdivl
mov
stc
jmp
cwtl
jae
xchg
jp
nop
in
mov
cli
shl
push
or
fidivrs
lcall
fsubrl
xchg
in
js
or
or
sub
fldenv
dec
dec
pop
cmp
cld
cltd
sub
icebp
in
lret
add
aas
push
add
add
hlt
test
mov
cmp
and
sub
xchg
dec
dec
cmpsb
clc
inc
sub
jmp
addl
jl
je
jp
adc
and
aam
into
push
je
sub
sbb
in
scas
rcr
in
lcall
mov
dec
jbe
lahf
cmp
ss
mov
xorb
push
adc
and
inc
lods
add
popa
inc
insb
mov
cld
and
and
notl
or
mov
adc
iret
popf
xchg
mov
and
and
xor
xchg
fs
ss
mov
sahf
sysexit
jmp
push
aam
movsb
dec
mov
lcall
ret
mov
ja
and
lret
fbstp
push
cmp
xor
pushf
sbb
pushf
xor
pop
push
dec
sbb
push
cvttps2pi
scas
popa
push
and
lcall
fnstenv
lcall
cmp
adcb
dec
loop
mov
adc
push
rcrl
mov
xor
mov
adc
sub
outsl
xor
dec
lods
andb
lahf
cwtl
call
mov
inc
iret
fildll
stos
sti
fcomip
jns
mov
loop
test
test
xor
sub
lcall
mov
jb
add
int3
mov
divl
dec
mov
scas
mov
pop
cmpsb
jmp
cmp
lcall
leave
adc
lock
les
ljmp
les
ret
xor
push
jle
jns
scas
or
mov
popf
das
or
scas
addb
scas
icebp
xchg
adc
daa
cmp
mov
adc
cmp
xor
imul
jecxz
in
mov
pushf
fstps
mov
mov
xchg
out
loopne
mov
cmc
lods
adc
in
lods
fisubl
mov
xor
adc
inc
dec
and
mov
js
scas
dec
adcb
int
lcall
mov
aam
push
jns
or
leave
iret
aam
or
mov
cmc
sbb
sub
inc
outsb
sti
popf
adc
or
sub
int
arpl
jbe
frstor
xchg
insl
fnstsw
jnp
mov
comiss
fwait
fs
xor
aas
mov
es
add
add
adc
imul
into
outsl
aaa
add
testl
dec
dec
mov
pop
push
test
push
mov
popf
cmc
fildl
stos
ja
and
jmp
mov
jae
add
or
adc
or
rcll
in
mov
into
cltd
adc
fs
jl
jg
fwait
pop
loop
testb
into
mov
dec
test
jb
mov
test
sbb
scas
cmp
push
xchg
imul
repnz
xor
xor
outsb
sub
nop
push
out
sarl
and
daa
xchg
cwtl
dec
int
lea
mov
push
cmp
imul
mul
fnstsw
iret
arpl
push
pusha
xor
loop
adc
mov
into
xlat
test
mov
insb
mov
push
aaa
bound
daa
dec
stos
or
mov
stc
int3
sub
data16
out
mov
inc
outsl
pop
nop
into
cmp
cmp
clc
bound
sbb
jnp
and
ds
sub
repz
aad
push
cmc
or
pop
ret
or
mov
xchg
jmp
cmp
in
mov
and
mov
aaa
mov
out
sbb
xor
pop
jg
in
push
mov
jne
in
loope
into
inc
rorb
std
push
fsubrp
sub
lods
dec
lock
mov
sbb
cs
in
test
movsl
icebp
data16
popa
stos
mov
lret
push
inc
jg
clc
movsb
out
pop
addr16
add
rclw
adc
pop
lcall
sahf
jmp
decb
pop
or
dec
xor
imul
push
je
or
out
jge
popa
sbb
pop
sub
dec
in
mov
push
sbb
inc
pushf
lret
xor
iret
mov
dec
add
test
and
jns
test
imul
test
stos
in
mov
ss
pop
inc
in
xchg
fstps
pop
sub
add
xor
iret
push
cmp
aaa
sti
rcll
xor
dec
cltd
pop
push
ret
dec
add
and
dec
jns
lcall
movb
xchg
adc
xor
in
ret
fmulp
sbb
mov
into
cmpl
add
xchg
jns
adc
lret
add
insl
sti
punpckhbw
aas
inc
mov
jg
push
stc
mov
je
out
test
sub
cli
xchg
std
jmp
je
gs
rorl
mov
aas
mov
lret
mov
icebp
mov
stos
mov
push
sbb
cld
lret
xchg
cs
xlat
pop
insb
add
push
or
jl
push
adc
sti
sahf
and
fsubrl
movsb
push
cmp
gs
sbb
fldenv
int3
cs
mov
fisubrs
dec
cmp
xor
mov
mov
dec
mov
cmpsl
pop
cs
cmpsl
pop
jb
add
add
xor
mov
fs
sarl
aam
pop
xchg
mov
fcompl
rcrl
sub
dec
push
jo
pushf
lods
sbb
pop
push
xor
repnz
jnp
xor
shr
icebp
adc
inc
mov
xchg
addr16
mov
dec
pop
shlb
sarb
and
aam
jne
sub
stos
shlb
sbb
sbb
shlb
mov
repz
jo
aaa
push
std
cmpsb
imulb
pop
stos
aaa
test
out
or
insb
insb
sub
pop
les
cwtl
xchg
aas
push
jae
mov
test
dec
in
pusha
sub
jecxz
jns
loope
sub
ja
xor
ja
mov
xor
jns
popa
dec
jb
mov
int3
pop
subps
lods
xchg
xchg
dec
cwtl
stos
ss
ds
sub
push
mov
mov
dec
jb
dec
push
rolb
adc
mov
stc
dec
popf
and
pop
mov
and
inc
stc
scas
sbb
lds
jle
loope
cmc
movsl
ret
lret
fmull
cmc
cmc
outsb
data16
adc
mov
mov
js
out
jns
nop
fs
inc
xchg
and
test
stos
mov
inc
adc
or
pop
adc
xor
lcall
lods
pop
pushf
adc
pop
pop
push
pop
push
and
xor
aas
jne
jno
xlat
test
mov
xchg
add
adcb
xchg
lret
fdivl
pushf
cmpsb
pop
out
mov
dec
fucomi
repnz
lahf
roll
test
dec
push
es
dec
cs
mov
fwait
shll
shll
mov
into
hlt
push
mov
in
lahf
lret
repz
adc
mov
inc
movsl
out
mov
mov
fiaddl
insb
xchg
adc
clc
fdivrl
mov
out
bound
adc
add
lods
fistpl
shll
sbb
sub
mov
xchg
dec
loope
xchg
jno
jo
mov
xchg
cli
inc
repnz
sub
xor
aad
mov
add
test
jp
incb
xor
mov
push
push
mov
xchg
or
add
sbb
push
inc
mov
int3
push
and
and
stos
jns
xchg
je
js
pop
imul
test
repz
pop
push
sub
xor
rcrb
rcll
cmp
add
inc
add
pop
shrl
mov
test
inc
inc
push
in
in
sbb
sbb
xor
mov
test
inc
int3
inc
imul
dec
test
int3
and
jo
out
sarb
and
int3
and
adc
adc
xchg
popa
dec
rolb
lods
out
aad
push
add
in
push
adcl
ds
dec
mov
test
jo
out
aaa
fcomps
fmul
push
jecxz
arpl
mov
insl
negl
imul
xor
cmp
jge
movsl
pop
mov
cmp
sub
adc
addr16
aaa
and
test
push
and
or
insb
mov
xchg
scas
and
push
mov
xchg
pop
in
or
and
jne
pop
and
out
clc
inc
pop
arpl
por
aaa
fimull
mov
cmp
out
jle
mov
stc
cmpsb
decb
arpl
dec
lods
mov
xchg
push
aaa
repnz
pop
fildl
add
inc
inc
and
pushf
mov
bound
iret
mov
mov
push
and
ja
icebp
jb
xor
into
sbb
push
mov
dec
xchg
mov
ficoms
jns
mov
sti
xor
add
les
test
xchg
dec
fs
or
aad
push
sarb
cmp
jl
lret
ret
in
dec
stos
roll
sysexit
sub
mov
dec
push
ret
iret
jp
dec
jbe
adc
lcall
xchg
clc
mov
cmpsb
or
mov
or
sbb
cmp
adc
daa
fwait
sbb
scas
or
mov
push
outsl
xor
mov
sbb
pop
testl
sahf
clc
subl
adc
push
inc
xchg
nop
in
xor
adc
addr16
xor
mov
leave
shll
cmp
fs
addr16
shll
test
mov
lods
push
movsl
lret
jecxz
fists
test
cmp
inc
pop
push
mov
frstor
pop
sarb
xor
sbb
cmpsb
push
inc
mov
mov
lea
push
insb
imul
xchg
cli
mov
xorb
outsl
jge
jne
adc
lods
or
xchg
sub
and
adc
mov
repz
xor
imul
repz
sub
and
jo
inc
jmp
pop
mov
mov
jmp
fnstenv
stc
add
fwait
imul
mov
pop
enter
adc
icebp
ja
das
inc
ljmp
ret
daa
in
not
les
dec
scas
out
dec
stc
or
mov
aam
jg
mov
jbe
pop
cltd
pop
cmp
rorb
fcoms
ljmp
mov
inc
jp
jo
gs
lock
dec
jne
push
mov
mov
aam
lds
lock
cmpsb
or
inc
jns
lret
dec
pop
xchg
inc
scas
cmp
add
sbb
sub
or
into
lret
mov
enter
inc
push
jns
inc
inc
pop
sbb
adc
pop
ljmp
imul
add
adc
sbbb
adc
out
es
aas
inc
or
xlat
xchg
addl
lea
lock
dec
notl
cld
js
std
sbb
push
xchg
push
pop
in
mov
imul
sub
lret
daa
fstpt
mov
sbb
pop
xor
cwtl
sub
mov
sbb
cmp
and
xchg
roll
adc
mov
jmp
lfs
add
inc
add
sarl
mov
in
mov
mov
mov
movsb
scas
scas
mov
add
add
add
add
jmp
jmp
jmp
jmp
jmp
