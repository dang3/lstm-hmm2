push
mov
push
call
push
ror
add
ror
dec
sub
pushl
lea
ror
add
shl
dec
dec
mov
add
popl
shl
shl
pop
add
ret
push
call
push
push
push
push
call
pop
push
push
push
call
pop
push
push
push
push
call
push
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
call
call
push
push
push
call
mov
push
push
call
mov
push
push
call
add
add
push
xor
add
pop
mov
xor
push
dec
mov
sub
xchg
push
shl
lea
rol
shl
ror
pop
push
call
push
push
call
mov
push
ror
not
sub
pop
mov
push
shr
add
add
shr
inc
rol
pop
add
push
shl
pop
mov
push
push
call
sub
jne
push
rol
dec
pop
pop
pop
push
xor
sub
shr
pop
pop
push
dec
add
inc
dec
ror
pop
pop
push
push
push
call
pop
xor
push
push
call
ret
push
shl
ror
add
pop
mov
push
push
call
cmp
jne
push
sub
inc
inc
rol
lea
add
ror
pop
pop
pop
push
add
lea
sub
rol
sub
lea
pop
mov
push
ror
dec
shl
rol
pop
pop
push
push
push
call
mov
push
push
push
call
pop
add
push
inc
not
pop
push
mov
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
mov
push
push
call
add
push
push
push
call
mov
add
push
sub
add
not
pop
add
add
push
sub
lea
shl
inc
lea
pop
add
push
inc
xor
rol
sub
lea
sub
shl
pop
mov
push
push
call
add
add
push
push
push
push
call
jmp
push
push
push
call
mov
push
push
shr
add
inc
mov
xor
pop
push
sub
pop
push
call
push
pop
push
push
dec
inc
dec
ror
ror
pop
call
push
shr
mov
xor
xchg
push
push
push
call
push
call
push
push
push
push
call
push
push
push
add
sub
rol
shl
dec
lea
mov
sub
pop
push
rol
rol
ror
rol
mov
add
xchg
push
push
push
call
push
push
ror
rol
pop
call
push
push
call
mov
push
shr
dec
inc
sub
sub
inc
pop
movl
movl
push
push
push
push
call
movl
push
push
push
push
call
push
push
xor
xor
inc
rol
mov
sub
xchg
push
sub
sub
add
pop
push
call
push
add
add
not
pop
mov
push
push
push
call
call
mov
push
sub
sub
ror
ror
not
shr
xor
mov
add
xchg
push
push
push
call
push
call
push
pop
push
push
push
call
call
push
push
sub
sub
dec
rol
mov
add
pop
push
shr
not
lea
pop
push
push
lea
pop
call
push
push
push
push
push
call
call
push
xor
ror
mov
sub
xchg
push
push
call
push
call
pop
push
data16
pop
push
jg
insl
arpl
jnp
jle
push
insl
pop
push
jl
pop
jae
popa
arpl
jg
push
insb
jle
jp
push
pop
arpl
pop
pop
jp
push
je
jb
je
pop
pop
jle
push
ja
push
ja
pop
jne
jle
jno
fs
jnp
pop
pop
popa
js
push
add
add
add
jbe
call
push
push
dec
inc
add
not
pop
call
push
sub
shl
inc
ror
mov
sub
xchg
push
push
push
call
push
call
push
sub
pop
pop
push
push
push
call
pop
push
push
call
pop
push
inc
pop
leave
push
lea
lea
pop
xor
push
dec
not
pop
inc
push
push
push
push
call
ret
push
push
add
not
mov
add
pop
push
ror
dec
xor
add
pop
push
push
push
push
call
call
push
lea
pop
push
call
push
add
add
sub
ror
pop
cmp
jbe
push
add
lea
inc
sub
dec
ror
pop
add
push
push
push
push
call
pop
push
push
call
pop
push
push
call
pop
push
push
push
push
call
pop
push
shl
add
pop
pop
push
pop
xor
ret
push
shl
pop
pop
push
push
push
push
call
push
push
mov
add
xchg
push
push
push
push
call
push
push
push
push
push
call
call
push
push
call
mov
push
xor
mov
xor
xchg
push
shr
inc
sub
pop
push
call
push
add
inc
rol
ror
pop
push
push
push
call
call
push
shl
pop
cmp
jae
call
arpl
push
pop
pop
pop
jae
jl
jle
jg
arpl
jb
fs
push
popa
push
jle
push
jno
jp
pop
pop
jbe
ja
jnp
jno
pop
jbe
arpl
jge
jp
imul
js
pop
jp
push
push
imul
popa
jb
push
addr16
insb
push
je
arpl
jbe
jb
arpl
push
push
push
call
push
push
push
push
push
call
call
push
push
call
add
push
push
call
jmp
mov
push
push
add
sub
xor
ror
mov
sub
pop
push
push
push
push
call
push
push
push
call
call
xor
push
add
shl
add
shl
add
xor
ror
pop
sub
push
push
push
push
call
push
push
push
push
call
push
push
push
push
push
call
push
push
push
call
jmp
or
je
push
add
add
xor
not
dec
pop
xor
pop
push
push
push
call
pushl
pop
push
sub
lea
pop
mov
mov
push
push
call
mov
push
add
xor
mov
add
xchg
push
add
lea
shl
rol
lea
dec
pop
push
push
push
push
call
call
cmpw
jne
call
push
jle
push
pusha
imul
pop
jg
pop
push
pop
jne
push
jp
ja
push
outsl
pop
push
fs
pop
jle
jne
push
pop
pusha
pop
push
addr16
popa
jbe
jns
jbe
imul
fs
push
pusha
pop
popa
pop
push
bound
push
bound
jnp
pusha
jns
insl
gs
add
add
add
pop
idiv
incl
test
sub
shr
shr
pop
add
push
push
dec
shl
add
dec
lea
add
mov
sub
pop
push
push
push
call
push
call
push
add
xor
shr
shl
sub
pop
cmpl
jne
push
push
call
add
push
dec
ror
not
inc
shr
pop
add
push
push
call
cmpl
jne
push
push
push
call
add
push
lea
xor
mov
add
xchg
push
sub
add
dec
pop
push
push
push
push
push
call
call
push
push
call
push
push
push
shl
mov
sub
pop
push
add
dec
not
sub
dec
add
pop
push
push
inc
not
xor
shr
not
add
shr
sub
pop
push
call
push
push
push
push
call
mov
push
push
push
call
insb
pop
jb
outsl
jge
pop
pop
push
push
pop
outsb
push
pusha
pop
jnp
js
push
push
jge
push
push
pop
push
jbe
jns
push
pop
jl
push
arpl
pop
jle
push
insb
popa
addr16
insl
push
jle
jbe
ja
push
js
jne
ja
jo
jns
push
imul
imul
push
call
push
push
push
call
mov
add
push
shl
inc
sub
sub
pop
add
mov
xor
push
shl
pop
add
push
push
call
mov
xor
push
rol
inc
dec
sub
not
not
pop
rep
pop
push
push
call
mov
add
push
push
call
add
push
push
call
mov
xor
push
lea
add
shr
lea
lea
pop
mov
push
push
push
push
call
xor
push
push
push
push
call
add
call
pusha
push
addr16
jle
jo
jge
push
jo
push
ja
pop
je
pop
push
pop
bound
jl
push
push
jb
jl
je
outsb
insb
jo
pop
push
push
popa
jae
ja
imul
jg
addr16
jns
jns
fs
pop
jo
jb
je
outsb
jg
jo
push
push
push
call
mov
push
push
push
push
push
call
xor
push
push
push
push
call
add
push
lea
ror
pop
add
add
push
push
push
call
mov
push
lea
mov
add
xchg
push
push
call
push
push
xor
dec
ror
pop
call
push
push
call
push
push
inc
xor
inc
lea
shr
add
mov
sub
xchg
push
xor
pop
push
push
push
sub
pop
call
push
add
lea
lea
add
not
shl
pop
mov
push
push
call
push
push
push
sub
not
lea
ror
add
pop
mov
push
push
call
add
add
push
push
call
mov
push
push
push
push
push
call
xor
push
push
push
push
call
add
push
push
push
call
add
push
push
call
mov
push
push
push
call
xor
push
push
call
add
push
lea
pop
rep
push
push
push
call
mov
xor
push
sub
shr
not
pop
or
je
push
add
add
lea
inc
rol
not
lea
pop
mov
xor
push
push
call
mov
push
push
push
call
xor
push
push
call
add
push
sub
dec
ror
rol
sub
not
pop
add
push
not
lea
pop
add
rep
push
add
pop
mov
push
push
push
push
push
call
xor
push
push
call
add
push
ror
sub
shr
pop
or
je
push
push
push
push
call
mov
push
push
push
call
add
call
jb
jp
push
pop
jno
push
jnp
push
fs
outsb
bound
push
bound
push
jns
pop
imul
jns
pop
arpl
push
jl
pop
je
data16
outsl
outsb
pop
push
jne
push
jb
popa
insb
insl
bound
pop
add
push
call
rep
push
not
sub
pop
pop
push
ror
add
inc
add
shl
not
sub
mov
add
xchg
push
push
push
call
pop
mov
push
dec
shl
inc
pop
jmp
push
sub
xor
shr
shl
add
sub
pop
push
push
shl
not
ror
dec
ror
pop
mov
push
push
push
push
call
add
push
push
push
call
push
push
push
push
call
push
push
push
call
push
push
push
push
call
push
push
push
call
push
push
push
call
mov
mov
push
sub
add
add
shl
inc
add
ror
not
pop
add
push
push
push
call
mov
push
push
call
add
push
sub
pop
mov
push
push
push
call
add
push
push
push
call
xor
push
push
push
call
mov
push
dec
pop
xor
rol
push
push
push
call
xor
push
inc
lea
not
sub
add
shl
pop
inc
push
push
push
call
cmpb
jne
push
push
call
cmp
je
push
push
push
push
call
add
cmpl
jne
push
push
push
call
xor
push
push
call
pop
push
inc
xor
pop
pop
pop
push
sub
add
dec
pop
pop
push
push
call
push
push
jbe
data16
je
push
push
arpl
push
push
je
push
insb
je
push
outsl
je
push
jae
jg
jl
pop
addr16
jno
bound
push
push
jno
jg
fs
jp
outsb
push
pusha
outsl
fs
push
jl
push
call
pop
push
not
sub
pop
leave
push
push
push
push
call
ret
push
shr
lea
pop
mov
push
push
call
add
mov
push
push
push
push
call
push
call
push
push
call
xor
pop
push
add
inc
pop
pop
push
ror
pop
pop
pop
push
push
push
call
pop
push
rol
shl
ror
shr
dec
xor
shl
pop
leave
push
push
call
ret
call
jl
jae
jno
pop
popa
jbe
jo
insl
push
pop
pop
addr16
jnp
je
push
outsb
imul
push
jns
push
insl
push
jae
data16
pop
pusha
insb
jo
pop
jle
jno
jbe
jg
push
push
gs
jnp
push
push
jle
jbe
insb
pusha
jbe
outsl
je
push
call
push
push
sub
ror
sub
inc
add
lea
pop
mov
call
imul
jne
outsl
pop
je
outsl
jbe
popa
jns
pop
push
jbe
push
jo
jae
js
push
jg
imul
pop
pusha
ja
addr16
jns
gs
gs
push
insl
pop
jp
jne
push
jle
insb
js
insl
popa
je
push
jb
jno
push
call
cmpl
jne
mov
call
jl
bound
je
pop
pushw
outsb
push
jne
pushw
jge
pop
gs
jns
pop
push
jnp
jg
push
addr16
jae
je
push
jbe
push
push
jns
jno
jbe
jp
push
imul
jbe
jo
addr16
pop
add
cmp
add
add
jmp
mov
call
jg
push
pop
insb
ja
jae
push
ja
jnp
push
js
jno
outsb
push
push
pop
push
jnp
push
pop
je
push
pop
jne
pop
push
pop
outsb
push
jg
jge
arpl
insb
pop
imul
jbe
push
push
jle
jbe
push
pop
push
jae
push
push
push
call
and
push
push
push
call
pushl
pop
push
push
push
push
call
sub
push
push
call
jmp
push
push
call
jno
js
pop
pop
pop
pop
imul
pop
pop
data16
insl
push
push
imul
fs
outsb
pusha
pusha
jp
insl
jb
jno
jns
push
push
bound
imul
insb
jbe
popa
jbe
popa
push
arpl
bound
jno
imul
jge
push
call
sub
pushl
push
ror
add
not
shr
pop
pop
push
push
call
sub
push
push
push
call
cmp
jne
push
shl
xor
xor
lea
lea
add
pop
mov
add
push
rol
lea
sub
inc
pop
movzwl
push
ror
add
sub
rol
pop
sub
push
push
call
cmp
jne
push
shr
rol
sub
sub
shr
pop
leave
push
push
push
call
ret
push
sub
add
rol
pop
push
push
shl
not
inc
xor
pop
mov
add
push
push
call
push
push
push
push
push
call
push
push
dec
sub
pop
push
push
sub
add
pop
push
push
add
inc
lea
pop
mov
push
push
push
call
push
push
push
call
pop
push
push
push
push
call
mov
add
push
pop
mov
add
push
push
push
push
call
pushl
popl
push
push
push
push
call
mov
push
push
push
call
add
push
push
call
xor
push
shl
inc
pop
lea
mov
push
sub
shr
ror
pop
add
push
push
call
xor
push
push
call
rol
nop
push
call
jbe
push
jle
jp
je
push
jns
insl
jl
push
outsb
jb
pop
push
pop
jp
data16
push
insl
jge
addr16
jns
imul
je
pop
js
imul
insl
addr16
pop
push
jp
pop
imul
add
sub
call
sub
lea
pop
xor
push
add
shl
not
pop
nop
nop
push
rol
not
not
sub
pop
inc
push
sub
lea
pop
nop
push
push
push
call
nop
push
push
push
push
call
cmpb
jne
nop
push
sub
dec
dec
lea
shl
sub
pop
nop
push
push
push
push
call
cmp
je
push
call
outsb
outsl
je
jp
push
jg
push
push
imul
jl
imul
jbe
jge
push
jne
push
push
pop
push
addr16
jns
ja
arpl
addr16
jb
outsb
je
push
arpl
push
outsl
push
jo
push
data16
push
jo
jo
insl
pop
outsl
push
pop
jns
pop
jo
jbe
je
jg
pop
pop
add
push
call
nop
nop
push
push
call
inc
push
sub
dec
xor
pop
nop
push
ror
add
add
pop
nop
push
add
ror
inc
rol
add
pop
cmp
jb
push
not
add
shl
dec
ror
add
pop
mov
add
push
push
call
movzwl
push
push
call
mov
add
push
push
push
push
call
mov
add
push
push
call
pop
push
push
push
push
call
pop
pop
push
rol
add
sub
add
shr
shr
sub
pop
pop
push
dec
add
not
pop
leave
ret
or
add
mov
add
cwtl
push
add
sahf
push
add
push
add
push
add
popf
push
add
fwait
push
add
cmp
mov
inc
sti
lea
pop
pop
push
pop
inc
cmp
adc
and
std
in
mov
jp
repz
jg
out
jo
inc
or
rorb
mov
outsl
aam
xchg
ret
jl
lsl
mov
inc
js
incb
push
sbb
pop
das
xlat
jno
popa
movsb
mov
and
mov
jle
sbb
jle
arpl
cmc
lahf
cmp
cs
ret
and
or
jbe
pop
sti
lcall
iret
xchg
or
sbb
cmp
sbb
or
lock
sahf
cmp
mov
push
sarb
mov
cmpb
xor
jbe
pop
je
mov
js
push
fdivrs
inc
negb
not
sub
or
jmp
cmp
lret
out
lret
ljmp
and
push
sbb
frstor
shl
icebp
inc
jb
dec
mov
push
addr16
sub
xor
imul
jp
mov
popf
out
ficoms
out
sub
or
out
jp
lods
adc
mov
lea
sbb
and
sub
sbb
adc
mov
pop
arpl
jno
mov
pop
movl
sub
movsb
jne
ret
hlt
push
lock
xorb
shll
adc
in
pop
jecxz
lods
xchg
xchg
div
movsb
sub
sarl
pop
xchg
xchg
push
lock
call
loope
cli
fisttps
xchg
movsl
movsl
sbbl
xor
sub
out
test
test
pop
sub
dec
mov
sub
pop
sbb
jle
dec
jne
adc
cmp
sbb
xlat
sub
test
std
sub
or
mov
pop
adc
out
add
jns
outsl
jae
mov
shll
pushf
sbb
cwtl
or
ss
jmp
popf
aam
cmpsb
mov
pop
insl
mov
scas
imulb
jbe
jb
mov
pop
sub
or
lret
mov
orb
pop
and
mov
push
addb
loop
xchg
and
cli
jmp
lret
lock
fsub
lods
push
faddl
les
mov
push
adc
add
pop
and
cmp
jmp
mov
jg
sub
aaa
loop
stc
fwait
test
mov
cmpsl
add
sbb
mov
addr16
jp
xlat
and
cmp
xor
mov
pop
cld
mov
jl
bound
ret
and
fdiv
rcrl
into
inc
xor
out
shl
mov
and
pop
mov
push
lret
addb
or
sahf
mov
shrl
scas
into
cmp
rcl
sub
push
push
out
gs
cmp
test
pop
int
add
mov
test
adc
mov
popf
repnz
loope
pop
cmp
aad
dec
cmc
mov
lret
ljmp
pop
sub
xchg
xlat
inc
mov
ret
cmpsb
add
and
mov
lock
lcall
adc
test
subb
adc
stc
sbb
mov
xor
or
cltd
push
and
jle
and
jge
imul
scas
dec
add
xchg
inc
and
lods
daa
xchg
icebp
test
mov
js
inc
aam
mov
mov
sahf
fs
xchg
pop
call
mov
fldenv
inc
and
mov
arpl
inc
out
push
fdivs
test
aas
lahf
pand
jae
imul
fldenv
fiaddl
push
sbb
hlt
aaa
xor
mov
dec
jo
or
mov
mov
bswap
push
cmpsl
mov
jns
push
cmpsl
cmp
push
enter
mov
push
cs
add
loopne
lods
lahf
setnp
roll
push
xchg
dec
jbe
inc
in
and
sbb
lahf
pop
sarb
push
adc
push
mov
out
ljmp
popa
fstps
cmpsb
loop
add
xchg
mov
scas
cmp
arpl
sub
xor
jno
add
sbb
test
adc
gs
cmpb
das
stos
lea
lcall
mov
or
push
inc
xor
pop
in
fwait
push
lock
out
xor
push
push
push
sub
lock
in
mov
inc
sub
sub
add
lea
shlb
call
adc
mov
inc
add
mov
lcall
jmp
push
loopne
push
inc
cmc
out
dec
mov
fcoms
cld
push
in
repnz
mov
fdivs
jno
jg
add
gs
test
stos
popa
push
push
pop
jl
pop
or
mov
movsb
xor
sbbl
sub
and
mov
dec
cmp
mov
pop
push
arpl
ret
test
movl
lret
add
pop
out
sub
lds
hlt
or
out
push
xor
insl
mov
in
mov
push
inc
mov
push
xchg
outsb
outsl
leave
pusha
xlat
ret
pop
and
mov
insl
xchg
stos
push
cs
lods
add
jno
jecxz
lods
mov
psubusb
pop
outsb
lods
jle
movsl
ljmp
add
sbb
je
pop
add
mov
shl
sarl
in
pop
das
and
push
addr16
jbe
jae
dec
push
xchg
xlat
sbb
loope
repnz
adc
push
test
sbb
in
pop
pop
not
out
ds
arpl
sub
cmp
mov
adc
mov
shll
std
das
fimuls
fcoms
cltd
cwtl
dec
sahf
and
adc
mov
in
xor
push
push
adcb
push
jmp
add
fucom
xchg
imul
or
xchg
push
adc
mov
push
in
addr16
push
out
orl
sbb
inc
in
xor
mov
call
dec
or
lds
jecxz
fnstenv
repz
rcll
xchg
das
rcrb
lcall
push
jg
jbe
mov
pop
or
mov
dec
xor
fadd
sub
ja
popf
mov
ret
inc
push
add
mov
fisubrs
sbb
or
mov
pop
jp
fidivl
mov
pop
push
imul
and
push
in
test
add
scas
mov
je
jo
sahf
add
mov
sub
pop
jae
jge
push
jg
dec
jnp
dec
in
xor
cmp
rorl
iret
fsubr
mov
lea
fistpl
std
cmp
decl
shlb
pop
jbe
test
addr16
add
out
mov
add
push
mov
xchg
xchg
out
mov
cli
pop
testl
inc
sub
lock
fsubl
add
loop
adc
add
jecxz
mov
call
sbb
sub
loop
jmp
jmp
out
cmp
fnop
mov
gs
arpl
xchg
push
faddl
add
out
fsubrp
push
cld
in
repnz
fwait
pop
push
decb
cmp
in
mov
add
ja
in
and
out
shlb
cmpb
jae
mov
lods
sub
pushl
dec
jb
ja
or
inc
test
in
loope
mov
shlb
mov
push
xor
daa
xor
sahf
incb
lods
enter
jecxz
jmp
adc
addr16
jmp
insl
mov
stos
adc
aad
jns
xchg
mov
lcall
push
push
cmp
cltd
mov
in
out
sbb
xchg
lea
or
lcall
adc
popf
add
aaa
js
jae
inc
adc
mov
nop
rcrl
je
test
sahf
aas
idiv
insb
mov
cld
dec
fsts
fdivl
ja
in
out
adc
dec
fsubrs
arpl
rcr
fs
lds
pop
fstps
jne
mov
push
mov
jmp
nop
cld
out
or
push
in
cmpb
cs
out
adc
dec
pop
xor
xchg
mov
pop
push
or
inc
in
push
jne
xor
cltd
sbb
pop
nop
xor
sub
sub
push
fsts
pop
in
pushf
fstl
flds
adc
call
sbb
repnz
adc
pop
movb
ret
iret
pop
mov
inc
jnp
cmpsl
and
je
adc
out
fcom
adc
shll
mov
divb
add
lret
xchg
inc
test
mov
dec
fidivrs
xor
call
decl
stc
outsl
in
push
jne
outsb
sbb
push
out
mov
mov
dec
mov
loopne
and
xchg
popa
int3
jno
stos
push
pusha
jae
jnp,pt
mov
movsl
shl
icebp
aam
jne
add
aam
js
pop
xchg
or
add
cld
or
sbb
jge
push
cmp
mov
xchg
sub
fwait
push
pop
pushf
xor
mov
sub
dec
jg
add
cmp
dec
test
dec
ss
clc
adc
sub
cltd
jns
pop
in
push
test
push
cmp
or
pushf
outsl
add
push
jl
push
out
xchg
movl
fwait
ljmp
cwtl
call
bound
out
cmovp
inc
mov
add
xchg
rorl
push
call
add
jmp
push
int
add
loopne
mov
js
sbbb
xor
mov
cmp
into
in
push
push
jecxz
stos
cwtl
mov
mov
hlt
roll
adc
fcomps
mov
push
aaa
in
xchg
mov
mov
imul
dec
lahf
cmp
jmp
stmxcsr
mov
mov
mov
rorl
int3
movsb
mov
hlt
jmp
arpl
pusha
sbb
lds
dec
int3
push
cli
insl
insb
aaa
fimuls
mov
jno
mov
pop
mov
movsb
lahf
cmp
sbb
jae
outsb
push
dec
popa
add
sbb
clc
or
imul
mov
cmp
pop
add
les
lret
push
sar
ljmp
mov
pop
xchg
mov
sbb
rcrl
push
sub
inc
clc
std
add
dec
ret
add
add
pop
cmp
cmp
cmpsb
fsubs
dec
adc
rcrb
test
inc
push
std
and
aad
popf
mov
test
repz
imulb
adc
les
movsb
dec
jmp
loope
lret
push
pusha
add
add
out
jmp
mov
adc
dec
mov
out
xchg
mov
ret
cmp
sbb
inc
in
movsb
mov
rdtsc
aaa
xchg
inc
xor
test
adc
int
xchg
inc
jne
sbb
out
in
jae,pn
pop
dec
xchg
hlt
jb
pop
or
xchg
dec
sbb
jne
pop
andb
pop
leave
cltd
mov
xchg
sahf
icebp
lret
data16
pop
push
dec
fistl
sub
push
mov
outsl
imul
dec
in
fsubl
and
lret
mov
sbb
sbb
rcr
mulb
not
dec
sub
clc
mov
adc
inc
cmc
cwtl
pushl
roll
into
pop
sbbl
sbb
minps
mov
pop
mov
fxch
sarl
sbb
call
bound
sub
ret
ffree
ret
fisubrl
adc
xchg
das
mov
xchg
adc
leavew
insb
jmp
mov
dec
or
cltd
mov
sub
frstor
mov
sbb
insl
out
add
loopne
push
lock
lods
test
stc
lahf
loopne
mov
jnp
test
rcr
jl
stc
and
shll
sbb
add
inc
in
pop
nop
ja
mov
std
ficoms
fcomip
pop
jbe
movsb
and
jmp
lcall
add
notb
dec
addr16
stc
lret
in
mov
cwtl
cmp
mov
das
push
push
aas
pop
outsl
cmp
mov
dec
sahf
cli
je
shll
sub
add
fsubrs
loop
jbe
add
xchg
lahf
out
and
add
in
mov
xor
ret
add
int3
call
mov
ja
xor
call
ljmp
and
mov
in
dec
lahf
sbb
add
mov
xlat
pop
sub
adc
fwait
xorl
int3
pop
push
xchg
xchg
xchg
rcr
jne
push
ja
ret
fnsave
mov
adc
push
scas
inc
push
lds
out
pop
mov
xor
and
or
jne
pop
xor
popa
or
xor
cmpsl
les
pop
psadbw
ffree
jne
les
mov
dec
lahf
inc
scas
fdivs
ja
sti
aas
sbb
inc
incl
xchg
jg
sub
pop
arpl
imul
push
xor
loop
lods
mov
mov
push
call
aad
loop
lcall
outsl
mov
es
imul
mov
jo
mov
jl
add
adc
lret
pop
clc
andl
movsb
inc
mov
out
jae
push
add
cmc
hlt
mov
hlt
add
repnz
lock
in
rcr
popa
cmc
fwait
imul
add
ror
cwtl
in
push
jns
test
add
imul
jnp
cmp
adc
scas
inc
lock
cwtl
inc
dec
aaa
jg
rcl
scas
jo
bound
xchg
das
rolb
aaa
jmp
dec
cmp
in
sbb
push
jno
jl
dec
mov
addr16
sar
mov
test
enter
lods
mov
and
adc
jge
jge
mov
inc
iret
jnp
cmp
mov
loop
sahf
jmp
leave
stos
loope
test
mov
cld
les
es
sub
mov
in
idivl
dec
jle,pn
mov
inc
repnz
or
jecxz
jns
sub
jbe
fsubr
daa
add
popa
arpl
dec
push
sub
mov
lods
lret
xchg
daa
xor
cs
sub
leave
scas
aaa
xchg
sti
test
add
or
outsb
gs
daa
pop
pop
orl
stos
push
lret
jp
out
jmp
mov
rcrl
push
sbb
xor
out
enter
das
lcall
rcrl
jecxz
sub
dec
fistps
mov
jno
insb
mov
ss
inc
push
xor
jg
lods
movsl
mov
pop
add
in
inc
lock
add
mov
stos
fldt
sti
push
mov
mov
data16
xor
sub
lret
sbb
outsl
lods
lret
or
scas
sbb
fs
leave
sub
xchg
adcb
fsts
ds
insl
aaa
imul
sbb
icebp
popa
lcall
test
stos
pop
popa
or
xor
lods
add
cwtl
stos
mov
fstenv
jl
fldt
hlt
dec
jnp
loope
and
cltd
adc
jecxz
or
push
cmpsl
stos
pop
inc
aad
mov
mov
push
xchg
xorb
xchg
aas
mov
mov
aam
mov
push
out
pop
cmpl
lods
in
inc
push
loop
jp
stos
dec
iret
inc
push
dec
dec
mov
mov
add
dec
and
ss
gs
mov
mov
sbb
dec
and
sub
pop
xor
mov
hlt
test
jnp
mov
push
hlt
mov
les
jge
aas
xchg
in
sbbb
sbb
push
cmp
and
shll
daa
push
cmpsb
push
mov
dec
xchg
mov
aam
xor
sbb
jecxz
daa
gs
xor
adc
push
mov
data16
add
sbbb
mov
xlat
cmpsb
xchg
lcall
or
xchg
or
sbbl
sub
lods
xchg
cmc
popa
jne
jp
fcoml
in
js
test
icebp
into
sbb
inc
imul
sub
inc
mov
fdivl
js
cli
mov
mov
add
xor
pop
imul
mov
insl
sub
les
and
add
cmp
adc
sub
pop
add
and
fs
jg
xchg
xlat
mov
cmp
jge
and
mov
add
jne
fistpll
push
loope
hlt
pop
repnz
jmp
xor
and
sti
add
scas
dec
stos
fimull
sub
scas
out
sub
mov
pop
jno
scas
xor
cmpsb
and
jg
leave
mov
sub
mov
iret
pop
imul
xchg
gs
sbb
xchg
pop
insb
aaa
jecxz
mov
or
or
pop
pop
outsl
cmp
adc
pushf
jle
bound
fs
push
xchg
out
mov
jle
adc
sub
or
xchg
sbb
das
imul
fildl
xor
dec
out
rcrl
fsubrp
cwtl
cmp
out
outsl
insl
ss
inc
into
push
push
sbb
inc
jl
or
cmp
jbe
xchg
adc
imul
dec
mov
mov
or
hlt
pop
in
fstps
cmpl
lods
into
pop
loope
outsl
jl
or
dec
nop
cmc
ljmp
push
pop
shl
pop
test
mov
push
bound
rcl
xchg
adc
xchg
cld
xor
mov
ljmp
and
fld
mov
xor
pop
mov
mov
push
and
iret
bound
adc
pushf
xor
out
out
mov
xchg
jae
or
stos
in
inc
inc
push
xor
loopne
jbe
pop
cmc
fdivr
sbb
out
mov
leave
push
push
add
fwait
sub
mov
ds
dec
nop
stos
pop
pop
mov
fs
subb
mov
inc
and
es
or
mov
mov
mov
mov
std
ret
sbb
ror
shr
lret
in
jge
pop
xchg
jb
jns
mov
adc
xchg
push
aas
test
xlat
dec
cld
xchg
subl
ds
mov
hlt
xchg
cmpsb
enter
mov
pop
xchg
mov
pop
jge
and
aas
fdivs
test
cmpsl
idiv
and
xor
xchg
int3
ja
pop
or
sbb
inc
jno
into
adc
das
mov
add
add
ljmp
sahf
insb
stc
mov
shlb
mov
sub
adc
cmp
pop
imul
xchg
pop
inc
std
daa
jmp
push
scas
cmp
and
mov
sbb
fdivrl
addr16
pop
jp
cmp
adc
add
lret
lock
pop
jns
push
dec
sub
jl
mov
pop
pusha
test
dec
jb
loop
and
cmp
dec
and
outsl
jo
arpl
les
mov
data16
xchg
out
mov
sub
jbe
pop
xchg
jl
pop
sub
inc
pop
and
mov
in
mov
sbb
je
pop
mov
sub
sbb
or
cmpsl
sbb
pop
testb
rorl
push
pop
cs
popf
push
arpl
cltd
push
repnz
pop
shrl
xchg
faddl
test
sbb
jae
daa
xor
mov
ljmp
mov
je
and
lds
push
lret
out
adc
adc
movsb
int
popa
mov
ret
pushl
popf
inc
pop
inc
pop
aam
lret
lods
xchg
clc
pop
push
pop
scas
sbb
xor
dec
sub
sahf
push
and
add
mov
sahf
mov
jp
push
int3
sub
loopne
ljmp
jge
xor
add
push
add
orb
or
ja
jo
xchg
jne
arpl
not
repz
fmull
cmp
test
cmp
fstl
mov
add
scas
cltd
add
in
push
jge
mov
mov
cmpsb
sub
pop
cmp
sahf
dec
push
test
or
xchg
arpl
add
mov
js
mov
daa
mov
data16
mov
jmp
jb
dec
std
sub
add
pop
inc
add
inc
es
lods
addr16
cmpsb
mov
xchg
insl
cmp
fwait
push
push
add
add
sti
out
lret
cmp
pop
inc
pusha
cs
mov
push
xchg
jmp
adc
mov
mov
mov
lret
cmp
insl
mov
enter
das
mov
mov
xchg
ds
fdivl
mov
inc
lock
jne
nop
unpckhps
sub
ret
fadds
inc
and
mov
mov
mov
xor
cli
stos
mov
into
mov
ljmp
xchg
xchg
dec
imul
pop
stc
cli
int
push
sti
pop
dec
in
sahf
imul
data16
clc
inc
int3
mov
movsb
push
int
sbb
push
test
sub
inc
push
add
dec
dec
mov
pop
out
inc
into
insb
fldcw
mov
sar
mov
dec
lret
cmp
jne
sbb
mov
jns
addr16
mov
inc
shrb
and
decb
loope
pusha
subb
pop
clc
stc
movsb
fidivl
aas
add
loop
mov
icebp
mov
dec
sub
shr
nop
and
mov
js
push
cltd
cld
cld
push
jno
popf
xchg
mov
fistps
imul
and
or
and
mov
cmpsl
out
lds
xchg
adc
push
out
sbb
push
adc
icebp
inc
inc
jl
pop
cltd
cld
outsl
sub
out
xchg
sub
imul
sub
push
addb
sbb
pop
lahf
pop
fbstp
sub
pop
movsl
cmp
push
xchg
inc
cmp
jo
dec
sbb
div
ret
repz
stos
xchg
push
push
jecxz
jl
test
sbb
dec
shll
mov
movsl
push
mov
sub
ret
jg
jo
std
and
pop
add
push
in
fisttpll
lds
mov
sub
imul
sub
mov
pushl
pop
movsb
push
dec
sub
mov
je
fsubrl
lret
imul
mov
dec
sub
jne
scas
cs
sbb
dec
adc
and
fsubs
jae
sbb
push
mov
add
pop
adc
mov
call
cld
add
jg
push
shlb
mov
daa
aad
fs
cmc
fcompl
sub
test
and
arpl
sti
add
lods
out
sarl
jo
movsl
nop
shr
cwtl
subl
inc
test
push
mov
test
inc
xor
aaa
cmpsl
sub
stos
xchg
ret
addl
add
das
jle
into
mov
fmull
mov
shll
mov
ror
dec
out
inc
rcrl
xor
scas
icebp
loopne
sbb
subl
mov
mov
lahf
sti
pop
pop
sar
jo
lock
stos
inc
std
dec
sbb
dec
movsb
hlt
daa
test
popa
mov
jl
out
outsl
bound
jbe
inc
xor
fisubrl
gs
xor
xor
and
pop
idiv
cmc
xorb
pop
adc
movsl
pop
rcll
sahf
add
pop
int3
jp
jne
mov
outsb
lahf
add
test
mov
and
in
out
lds
pop
and
xor
lahf
sub
sub
mov
lcall
adc
movsb
add
rclb
vcvtss2si
or
pop
movsl
rol
inc
adc
xlat
mov
cmpsl
fucom
sbb
call
mov
mov
pop
push
dec
mov
call
pop
adc
jb
icebp
pusha
xchg
fdivs
sti
sbb
aam
daa
sbb
stos
xor
inc
sti
nop
lds
ret
fs
inc
adc
mov
add
mov
pusha
clc
jns
mov
scas
push
fwait
mov
mov
in
das
imul
dec
pop
mov
ret
add
sbb
lret
fs
lods
mov
jge
arpl
imul
ja
pop
repnz
leave
add
lret
out
cs
xor
mov
xchg
fs
xchg
and
push
lods
mov
mov
mov
ljmp
push
mov
dec
inc
sbb
and
shlb
loope
jne
push
scas
cs
daa
scas
stos
sbb
sub
arpl
mov
add
iret
or
pop
sub
mov
lods
ror
sub
bound
xor
sub
stos
dec
cmp
ljmp
cld
mov
aaa
faddl
jge
xchg
fstps
mov
xor
sbb
lea
jp
xor
aam
mov
pop
xor
mov
xchg
add
popa
push
xor
mov
cmpl
ja
cmp
dec
rclb
xchg
mov
divb
std
lahf
popf
or
xor
jns
xlat
jne
inc
std
hlt
shll
or
inc
jg
inc
jae
add
enter
popa
nop
enter
aaa
sub
aas
loope
jge
xchg
iret
pop
jmp
mov
jbe
daa
push
add
dec
std
push
test
bound
das
les
lods
fwait
pop
ret
or
fsts
adcl
cmpsb
fs
mov
xor
cmpsl
into
and
dec
addr16
popa
add
cs
fimuls
hlt
push
adc
mov
adc
popl
xchg
gs
mov
test
or
rclb
dec
and
arpl
fdivs
std
test
inc
outsl
mov
sbb
movsl
gs
xchg
mov
jnp
mov
jmp
dec
movsl
xor
hlt
pop
addr16
out
mov
inc
sbbl
pop
lret
addr16
and
push
into
aaa
sti
lods
pop
sbbb
add
sbb
pop
lock
xchg
pushf
imul
sbb
imul
inc
dec
pop
mov
push
repz
cwtl
dec
repz
sbb
stc
aad
cwtl
add
xlat
in
sbb
rclb
add
out
xchg
cmp
pop
pop
fisubs
insb
push
clc
push
push
sub
mov
adc
push
out
pop
mov
addl
push
pop
sub
mov
jg
gs
shr
add
lcall
push
in
xchg
ds
push
stc
daa
pop
pop
add
sbb
nop
ljmp
jge
xorb
sub
sbb
movsl
enter
lock
xchg
lods
push
mov
sbb
jp
movsl
imul
pop
cltd
out
inc
push
aas
cld
sub
push
xor
fsubs
scas
inc
xor
jecxz
push
dec
fs
loop
cld
cmp
mov
idivl
jg
out
adc
fmull
fwait
xchg
fwait
mov
jns
and
mov
es
jbe
jns
mov
and
jge
scas
cmc
cld
mov
dec
and
out
inc
inc
xchg
icebp
adc
adc
scas
adc
in
jle
aas
mov
fcompl
jbe
or
loop
arpl
mov
adc
scas
inc
leave
mov
dec
adc
pop
fstpt
inc
stc
inc
jge
dec
adc
fldenv
sbb
dec
outsb
xchg
fildl
sub
scas
jmp
pop
pushf
and
mov
mov
jb
jge
sub
mov
mov
and
cs
inc
movsb
pop
sub
sbb
sbb
inc
pop
sub
cmp
xchg
scas
push
les
jp
dec
xor
and
je
cltd
push
ja
mov
in
lods
jl
xor
mov
add
mov
fldcw
xchg
scas
pop
lea
sbb
mov
push
lret
push
pop
push
sbb
adc
mov
aas
pop
cmp
jae
jae
into
inc
ret
dec
mov
fwait
rclb
jnp
sub
mov
loope
stc
mov
xor
orb
fdivrp
shlb
mov
and
popa
iret
test
cmp
pop
call
repnz
jg
and
mov
ljmp
out
xlat
mov
out
fwait
mov
imulb
pushf
imul
jns,pn
mov
jmp
outsb
mov
scas
out
addl
imul
mov
je
sarb
pop
stos
out
mov
cmc
jp
fdivl
push
inc
imul
sbb
in
insb
or
test
pusha
loopne
xor
lahf
pop
dec
addl
push
xor
pop
js
mov
fwait
ret
jge
sub
daa
or
pop
sahf
adc
imul
or
adc
mov
jg
out
adc
cli
cmp
inc
push
or
mov
lret
and
loopne
pop
sahf
jecxz
cld
mov
lahf
lret
nop
mov
enter
xor
sbb
aad
lds
mov
lret
dec
xchg
shlb
mov
inc
fisttps
fisubrl
cltd
xchg
daa
outsb
xor
sbb
imul
movsl
in
jno
es
jb
ret
inc
add
pop
push
imul
pop
sahf
clc
sub
pop
and
and
mov
cltd
test
insb
movsl
xor
jb
push
inc
jp
xchg
ljmp
jbe
push
shrl
rcl
test
sbb
ds
sub
add
cld
or
xor
lods
pop
inc
pop
mov
popf
xlat
jnp
inc
je
lods
add
cmpsl
mov
shl
dec
aam
adc
mov
adc
pushf
icebp
add
addr16
aam
and
or
xor
idivb
mov
or
mov
in
fidivl
movsb
iret
ret
push
pop
adc
movsb
xchg
sbb
mov
and
lret
mov
and
sbb
mov
popf
mov
imul
ret
sub
cmp
int
jne
jg
xchg
push
aaa
ja
dec
pop
jno
mov
outsb
fldt
jl
scas
and
mov
loope
icebp
daa
mov
test
fstpt
or
fnstsw
xor
xor
int
ficoms
mov
mov
js
movsb
fcmovnu
aam
mov
sub
push
popl
jo
adc
fldl
dec
xrstors
ret
mov
movsl
or
jg
mov
cs
repz
dec
and
sub
fsubrp
in
popa
push
cmp
int3
or
xor
xor
fldt
pop
push
jp
ret
cmovb
int3
out
adc
iret
in
pop
dec
in
inc
ss
sub
or
imul
push
rolb
push
pop
aas
sub
or
adc
je
mov
sbb
jge
push
jb
cmp
sbb
test
enter
in
jle
test
int3
xchg
pop
or
and
push
add
xchg
sbb
push
push
cmp
lods
push
inc
cmp
xchg
sbb
fwait
jne
cltd
scas
push
mov
jnp
rcll
inc
idivb
add
mov
test
out
popf
aaa
pop
mov
mov
lret
xchg
fsubs
inc
aaa
adc
insb
call
andb
mov
addr16
fsubs
repnz
sarb
fldl
jns
or
fmulp
movb
and
fstl
jno
stos
adc
repz
jne
pop
insb
dec
data16
ljmp
adc
cmc
sub
mov
or
jecxz
int3
shrb
in
sahf
fwait
cmc
xor
sbbb
scas
ret
popf
ss
hlt
ror
test
gs
pop
jl
jecxz
ret
inc
dec
lea
fsubrs
shll
and
adc
cmpsl
pop
jno
xchg
mov
add
dec
or
andl
inc
sub
inc
std
daa
or
xchg
pop
inc
lcall
cwtl
rclb
xlat
lar
cwtl
cmp
push
cmp
mov
dec
or
movsl
cmc
or
loopne
movsb
fisubrs
pop
sbb
mov
sbb
iret
dec
add
lods
sub
js
xchg
and
jmp
rorb
pop
out
inc
shlb
xor
subb
mov
cmp
loope
xchg
xchg
int3
in
add
push
clc
clc
jns
test
or
cmpsb
pushf
cld
sbb
inc
imul
enter
js
inc
xchg
mov
adc
in
adc
sub
xchg
sbb
call
outsb
addr16
shll
or
repnz
ljmp
push
sub
mov
jl
sbbb
shl
std
sbb
rcrl
jb
leave
rcll
ret
sti
fsts
cs
jne
jge
scas
lods
jns
jbe
pop
and
and
sbb
push
stc
jae
js
movl
add
sbb
pop
insl
daa
lret
pop
test
adc
sub
in
inc
dec
push
in
mov
push
sahf
inc
shlb
fstl
or
dec
inc
adc
push
add
cmp
hlt
mov
sbb
loope
pop
out
lods
popf
jae
in
aam
insb
fs
mov
mov
jb
lcall
xchg
xor
pop
test
pop
pushf
scas
daa
pop
cmp
push
test
pop
fcmovnbe
lea
fnstsw
aas
dec
cli
sbb
or
ret
pop
movb
pop
inc
outsb
or
insl
fisttps
in
or
lds
sub
push
int
loope
daa
rolb
ja
xchg
jb
insb
dec
push
lea
inc
fsubs
sbb
sbb
mov
push
cmc
imul
fimuls
mov
das
add
and
sbb
dec
mov
inc
xchg
adc
and
add
pusha
dec
outsb
lods
pop
xor
clc
loop
es
cwtl
mov
cmp
int3
in
sbb
dec
mov
mov
popa
add
and
or
daa
mov
mov
adc
and
push
mov
fbld
cmpsb
sbb
mov
jno
test
mov
add
jl
scas
lds
enter
sbb
jns
add
pop
add
lret
popa
mov
insl
adc
shrl
sarl
call
adc
lea
xcrypt-cfb
cmpsl
cmpsb
aam
fcoms
cmp
lds
lret
ret
mov
cmp
xor
inc
jmp
mov
stos
je
pop
mov
aaa
cwtl
cmp
or
movsl
cmpsb
icebp
xchg
nop
les
sbb
iret
push
idivb
fidivrs
shll
push
mov
pop
popf
in
jmp
mov
das
mov
xor
mov
add
dec
add
fdiv
pop
sbb
scas
adcb
adc
stos
inc
mov
sahf
call
push
cld
insb
xor
std
inc
int3
mov
xchg
cmp
lcall
popf
stc
jo
mov
lds
adc
jns
cmpsb
mov
mov
sub
daa
and
sbb
inc
test
mov
push
xor
lods
add
push
mov
push
pushf
cld
lods
xor
aad
add
dec
fisubrl
pop
adc
inc
pop
cmpsb
inc
xor
movsb
je
fiadds
arpl
push
filds
adc
sub
and
push
notl
push
pop
lods
imul
testb
mov
loop
jo
dec
sti
push
rorb
movsl
jle
call
test
xor
sub
rcll
inc
sub
lods
cmp
rolb
in
sbb
out
cmpsb
xchg
mov
mov
jmp
xchg
and
push
cmp
ja
mov
pop
mov
stos
push
jp
addl
ljmp
in
jne
test
jge
add
fcoms
inc
lret
les
and
ds
mul
dec
inc
sub
insb
test
cld
jge
scas
xor
stos
mov
in
cmc
inc
adc
jmp
lods
leave
cwtl
jl
ret
xor
stos
imul
dec
mov
in
mov
int
dec
repnz
stos
cltd
dec
pusha
movsl
push
scas
xchg
in
lfs
push
je
jecxz
push
stos
mov
loope
xchg
dec
lret
mov
xlat
mov
or
lahf
mov
outsl
inc
sbb
loop
rcr
lcall
inc
orb
cmp
testb
call
push
jg
mov
mov
and
femms
cwtl
sub
adc
sbb
jp
adcb
arpl
push
xorb
icebp
cmp
inc
mov
imul
jb
add
adc
hlt
xchg
lods
sbb
pop
fistpll
pop
cmpsl
pop
aaa
leave
iret
stos
xor
ret
test
fs
test
hlt
out
icebp
xor
xchg
dec
and
cld
jbe
xor
xchg
loope
cmp
pop
jb
mov
insb
inc
mov
jecxz
scas
adc
add
loope
test
sti
add
xchg
jg
mov
ds
test
jno
int3
xchg
out
add
add
out
nop
test
add
aam
xchg
shr
and
pusha
test
cwtl
push
mov
add
pop
out
out
scas
fnstenv
fbld
push
cwtl
push
into
xchg
insb
mov
mov
jae
aaa
jno
jo
xor
outsl
lret
mov
dec
pop
fcomp
icebp
daa
lahf
das
insb
fldl
cvtps2pd
add
pop
or
add
subb
sub
adc
xchg
testb
push
or
add
mov
neg
mov
and
jo
sbb
xchg
lret
stos
mov
add
test
rcll
jmp
fisttps
push
shll
xchg
pop
mov
pusha
add
popa
mov
push
xchg
and
out
xor
test
xchg
mov
inc
mov
mov
movsl
mov
arpl
push
xchg
in
repnz
dec
xchg
les
test
push
jbe
pusha
dec
mov
sbb
pop
movsl
pop
imul
adc
aas
sub
jle
sub
stc
adc
inc
cli
insb
mov
cmp
ficompl
dec
daa
mov
mov
jbe
jbe
adc
add
dec
mov
pop
fildl
mov
xchg
mov
test
ljmp
push
in
xor
hlt
lods
aas
es
adc
pop
dec
mov
popa
or
insl
cmp
mov
enter
jo
es
push
aaa
push
aad
adc
pop
mov
mov
lods
cld
out
cmp
ljmp
test
dec
jbe
pop
out
pop
fbstp
cld
jne
into
sub
sbb
ja
jnp
shrl
repnz
mov
clc
aad
push
lods
fisttpl
dec
movb
inc
dec
push
lock
sub
xor
cs
push
mov
ds
mov
fcmove
add
dec
or
inc
popa
sbb
add
ss
and
sbb
lea
cmp
shr
and
shufps
sti
aam
nop
mov
ficomps
movsl
jne
cltd
scas
fmulp
jle
dec
fs
pop
ljmp
cmp
je
je
jmp
pop
jno
xlat
mov
fucomi
add
and
mov
sub
outsb
lahf
add
inc
mov
mov
push
mov
outsl
out
iret
mov
lea
lahf
stc
mov
je
negl
jbe
in
fs
pop
out
add
xor
dec
lret
pushf
fldt
and
sub
xor
adc
cmp
dec
sbb
pop
pop
and
mov
inc
lcall
rcll
jo
xor
xchg
sub
lret
mov
je
popa
dec
pop
iret
or
js
sbb
and
pop
pop
mov
clc
stos
mov
mov
lret
in
loopne
imul
pop
add
mov
outsb
jno
data16
out
sti
lahf
inc
pop
mov
add
aad
popf
fisttps
and
into
inc
in
loope
in
outsl
repz
sbb
stc
add
mov
push
push
aad
sbb
rorl
and
sub
add
test
mov
std
je
jecxz
arpl
scas
fs
std
lahf
dec
fcoms
mov
testl
ljmp
cmp
notb
clc
pop
push
pop
movsb
and
mov
enter
cmc
scas
push
inc
dec
jns
mov
mov
ss
stos
leave
rcll
stc
push
int3
lret
pop
jns
nop
leave
hlt
jbe
stos
pop
cs
cwtl
jmp
mov
or
push
ljmp
insb
cmp
inc
pushf
pop
int3
jbe
xor
rcll
xchg
ja
in
ss
mov
or
dec
mulb
in
sahf
mov
daa
add
mov
aad
push
mov
jo
cli
lahf
lods
jbe
xor
pop
adc
imul
jp
adc
mov
or
xor
xchg
lret
jmp
subl
movsl
add
test
ret
sahf
or
add
cld
roll
rol
out
pusha
inc
int
popf
cmp
mov
pop
sbb
fwait
mov
jle
sahf
test
cli
insl
stc
mov
cmp
mov
dec
dec
adc
pusha
and
lds
popf
and
xchg
test
bound
sub
icebp
xchg
jnp
dec
mov
nop
sbb
add
xchg
inc
call
add
mov
mov
cmpsb
ljmp
clc
inc
clc
mov
and
adc
dec
out
filds
pop
mov
jmp
sbb
inc
mov
aas
jae
jle
je
mov
dec
insb
mov
out
scas
fwait
xor
cmc
mov
movsb
scas
loope
mov
jno
push
outsb
push
arpl
mov
lock
fsubl
mov
cmp
sbb
imull
jg
stc
and
jno
cli
xchg
ss
adc
mov
repnz
fnstsw
in
ss
xchg
jns
sub
dec
sti
pop
stc
rclb
or
mov
enter
loope
fs
mov
xchg
cmp
adc
adc
std
je
out
fcmovnu
push
dec
and
and
scas
jo
push
test
sbb
xchg
lds
inc
iret
xchg
pop
cmp
jg
mov
sbb
popf
adc
jmp
adc
outsb
rcrl
push
mov
sarb
or
add
sbb
jmp
pop
inc
jmp
pushf
sub
dec
sbb
addr16
sub
pop
mov
lock
jne
dec
fadd
pop
inc
mov
inc
and
ja
insl
sub
push
mov
aas
mov
pusha
mov
shrl
insl
xor
mov
lahf
lcall
push
in
lahf
subl
or
data16
aas
cli
inc
movsb
push
shrb
dec
ljmp
movsl
enter
dec
out
or
in
int
mov
hlt
pop
aad
adc
xchg
out
enter
les
dec
or
sbb
mov
iret
xchg
outsb
xor
xor
and
push
mov
in
mov
mov
sub
sub
negb
in
jl
es
mov
imul
mov
push
cmp
jmp
mov
enter
aaa
jo
hlt
popf
mov
mov
mov
or
bswap
test
sti
test
xor
jae
mov
rol
fiaddl
mov
insl
push
clc
push
push
xchg
pop
mov
inc
dec
xchg
sub
fnstcw
or
pop
cmpsb
jnp
stos
mov
loop
loopne
fisubl
push
pop
sbb
sub
or
adc
test
sub
push
dec
or
faddl
das
sub
jp
cmp
push
idivb
xor
mov
daa
loop
and
insb
mov
sarb
lock
bnd
adc
push
inc
add
xorl
mov
push
mov
xchg
std
lahf
and
push
push
mov
or
pusha
push
aam
jb
add
fists
sbb
push
lods
or
push
jle
push
mov
cmp
sub
mov
dec
or
aaa
adc
rolb
dec
pushf
lret
lock
repz
cmpsl
add
cmp
jb
push
sbb
adc
in
push
pop
incb
in
aad
mov
mov
add
cmp
enter
mov
int3
pop
outsl
les
sbb
xchg
cld
jle
mov
call
pop
std
data16
pop
test
xchg
xchg
out
and
daa
test
call
jecxz
imul
mov
cmpsl
jmp
arpl
dec
push
shlb
mov
in
psubb
repz
mov
jge
loope
lock
out
pop
call
mov
or
arpl
mov
inc
or
aas
cld
pop
scas
mov
movsl
mov
fcompl
mov
shll
nop
cs
jmp
xchg
hlt
imul
mov
mov
push
adc
and
add
and
push
cmp
call
in
in
insl
cmpsl
mov
test
and
gs
out
fsubr
xor
add
lea
pop
or
dec
out
call
leave
jno
or
and
dec
or
out
ss
jno
roll
xchg
xor
mov
outsl
fs
pop
sbbb
fsubs
fistl
je
arpl
test
scas
fbld
lret
dec
push
or
fs
cli
icebp
cmpsb
inc
jo
xchg
daa
push
test
test
cmp
cmp
jae
push
push
mov
sbb
and
mov
nop
mov
mov
sub
fadds
and
mov
pop
push
es
shll
jg
xchg
pop
repz
dec
lahf
ret
push
outsl
fldl
push
jmp
mov
cli
push
inc
aas
push
or
inc
push
arpl
ljmp
in
mov
jge
mov
mov
adc
lea
jg
sbb
or
in
ja
add
xchg
shll
imul
jbe
push
nop
push
aad
mov
ret
mov
jecxz
lds
xchg
ds
cwtl
repnz
hlt
xchg
test
xor
jbe
sub
cld
inc
dec
or
inc
lods
fucom
jle
pop
or
or
mov
insl
sbb
shll
push
xor
cmpsl
mov
mov
mov
icebp
imul
in
inc
pop
push
ss
ja
jno
xor
dec
repnz
jnp
adc
loop
fisttps
or
xor
cld
jnp
aad
push
nop
lea
in
ds
cwtl
mov
int3
inc
test
sub
cld
mov
dec
cmpsb
inc
push
or
mov
sbb
jne
mov
scas
add
test
add
adc
lock
jb
jnp
lds
mov
int3
push
adc
jecxz
sub
mov
jo
adc
enter
xchg
inc
fimull
pusha
pop
or
or
fnstcw
adc
cmp
push
aad
cli
enter
or
pop
in
loope
pop
fs
lock
outsb
sub
xchg
add
jae,pt
dec
cmp
sub
mov
mov
adc
sahf
mov
jbe
mov
and
lret
sbb
clc
xor
xchg
setbe
push
aaa
stc
inc
push
xor
xor
mov
loopne
lret
pusha
and
push
fnstcw
sub
and
pop
sub
sub
xchg
sub
pop
daa
cld
dec
push
sub
fstl
loop
jnp
retw
cmc
inc
jno
mov
mov
sub
cmp
mov
sub
push
or
repz
push
or
cmp
sbb
mov
mov
push
inc
inc
lods
cmp
sub
mov
inc
jne
aas
sahf
cmc
inc
jns
jle
rorb
adc
sub
insl
dec
es
push
fwait
sbb
aas
fsubrl
scas
xor
mov
xlat
int
fcmovne
pop
insb
push
fs
adc
leave
mov
push
push
bound
test
adc
ds
pop
cld
inc
fisubrs
mov
lret
arpl
or
outsl
imul
rorb
push
pop
popa
jno
dec
stc
shrb
sub
std
push
stc
std
test
mov
lahf
or
cmp
arpl
dec
cmp
dec
mov
mov
loopne
je
jnp
ss
xchg
cli
push
sub
outsl
cmp
jmp
lods
or
jmp
jb
inc
test
lcall
mov
pop
test
sub
sub
js
jmp
subl
shlb
pop
addr16
in
icebp
stos
lds
jmp
fwait
xor
ljmp
and
pusha
pop
ja
divl
std
jmp
xrelease
jl
dec
jecxz
test
push
cmp
sub
imul
sbb
cmp
lods
lds
lock
mov
lds
nop
add
shrb
pusha
xlat
mov
jns
pop
aas
lock
mov
or
adc
and
mov
inc
test
inc
into
popa
mov
jnp
loopne
sbb
push
je
cmpl
ror
in
cmp
dec
into
or
push
iret
fs
dec
int3
xor
insb
inc
shll
jp
pop
mov
or
mov
je
jbe
loopne
out
js
mov
inc
int
std
mov
shll
mov
push
test
or
addr16
or
xor
jae
loop
mov
sub
popf
fsubrs
jl
pop
jp
sub
and
dec
push
jnp
add
dec
inc
xchg
fcomi
inc
xchg
ficompl
add
lock
inc
test
jp
or
scas
xchg
xchg
xorl
es
int3
ljmp
mov
cld
cmp
adc
cmp
cmc
inc
mov
leave
aam
jns
ret
mov
push
pop
insl
xor
test
repz
jne
cmp
sarb
jo
and
sbb
pop
mov
add
imul
push
xor
lock
rcl
scas
loop
jae
loop
pop
pop
xchg
or
insl
notb
xorl
ret
xlat
jae
cltd
loopne
adc
xchg
out
push
enter
stc
xor
les
lock
fistl
jb
sbb
jmp
into
xor
inc
adcl
pop
dec
push
cmp
adc
shrl
sti
orb
lds
adc
jno
jl
loopne
les
jp
loopne
sub
in
frstor
fmull
mov
and
xchg
jge
jmp
cmc
pushf
repnz
orl
cmc
adc
sub
or
xchg
jecxz
mov
mov
nop
popf
movsb
lea
aaa
stos
lret
adc
fsts
int3
ficoml
add
lods
push
fnstsw
jns
xor
and
call
xchg
mov
xchg
mov
xor
adc
xchg
enter
fiadds
cmp
pushf
lods
jp
pop
test
sbb
mov
movsl
inc
lock
imul
fidivrs
ret
lcall
les
push
stos
mov
cwtl
cwtl
out
fld
leave
push
arpl
cli
xchg
mov
jbe
cmpsl
aam
mov
or
cmp
xlat
adc
insb
mov
stos
enter
stos
mov
int3
inc
or
adc
lcall
adc
xchg
ret
dec
scas
dec
fnsave
lret
jmp
jmp
adc
mov
out
xchg
push
data16
and
cmp
mov
cmpsb
imul
outsb
sub
pop
jl
sub
dec
sti
mov
dec
loope
repz
repnz
addr16
push
mov
imul
ds
in
sbb
ljmp
scas
rcrl
data16
push
test
cmpsl
into
into
dec
cmc
pushaw
loopne
fnstsw
lret
shll
xchg
loope
stos
mov
test
xor
dec
pop
dec
int
dec
pushf
or
rolb
add
dec
adc
lcall
push
mov
add
push
inc
mov
inc
mov
iret
pop
mov
insb
bound
test
sbb
shrl
jae
xchg
xchg
test
pop
js
insb
inc
stc
sub
cmp
cmp
fwait
push
jg
xor
adc
shrb
or
lock
mov
cmp
push
popa
test
push
movsb
jae
rcrl
lock
fcompl
lods
pop
out
xchg
fnsetpm(287
push
lret
push
pop
xor
aaa
jle
stc
rcrl
cmp
jp
cmpps
test
pop
imul
jp
inc
out
fs
jge
fidivrs
mov
aad
ds
lea
add
pop
fldl
or
leave
sub
mov
in
enter
rcrb
jns
dec
dec
and
jl
cmp
into
test
mov
xchg
or
xor
stc
or
mov
sarl
enter
pop
mov
mov
xor
mov
mov
aaa
xchg
and
sbb
and
inc
stos
scas
push
pop
lar
std
adc
xor
sub
into
xorl
add
push
lret
xchg
jmp
pop
mov
cli
pop
shlb
ficoms
int3
mov
enter
mov
imul
es
gs
jb
push
shl
aaa
pop
jmp
imul
inc
inc
pop
in
fwait
mov
jo,pn
push
sub
rcl
dec
insl
sahf
jne
mov
gs
js
xor
lods
or
inc
mov
ret
inc
jecxz
or
test
add
sub
jae
pop
xchg
clc
push
mov
push
adcl
je
cmpsl
outsb
and
pushf
mov
stc
stos
movsl
cs
adc
jle
adc
loope
shrl
inc
test
js
dec
or
loope
cmp
stc
or
mov
adc
ds
and
dec
inc
fisttpll
ds
mov
jae
push
or
push
push
push
sbb
ja
fwait
test
aaa
sub
pop
adc
dec
test
mov
stos
ss
mov
mov
dec
imul
ja
es
incb
sbb
fimull
fisubs
fucomip
cmp
mov
punpckhbw
add
ljmp
pop
imul
pop
mov
repnz
cld
repz
jns
faddl
stos
decl
cmp
stos
ret
inc
pop
dec
and
add
iret
push
dec
xor
rclb
mov
movb
rclb
and
cmpsl
loopne
jnp
insb
sub
adc
dec
xor
jmp
push
mov
xor
in
lods
jbe
lret
fdivl
pop
jo
pushf
stos
sub
fsubl
je
gs
jb
sub
xchg
sbb
in
lret
insb
cwtl
mov
in
in
push
mov
mov
mov
rorl
lock
push
rorl
mov
outsb
pushf
xor
mov
mov
xlat
orl
sarl
or
xor
subl
and
sbb
or
pop
add
sbb
dec
pop
out
pop
cmp
int
fnstcw
xor
fs
jno
fistpll
mov
lock
dec
or
jb
adc
adcl
addr16
dec
pop
sti
fcom
push
movl
and
out
fcoml
mov
sub
insl
adc
movq
aas
lock
mov
mov
iret
and
xchg
int3
stos
inc
fisubs
sbb
cmp
and
jecxz
ss
jbe
clc
test
lahf
xchg
adc
dec
push
sub
insb
dec
sbb
outsl
sub
lock
or
fmulp
lret
mov
lahf
xor
pusha
negl
xor
jg
xchg
pop
in
jb
dec
mov
in
lcall
andl
in
jmp
and
and
stos
adc
inc
cmp
mov
imul
gs
call
pop
cmp
push
mov
dec
pop
mov
movaps
mov
pop
loopne
movsb
scas
aaa
stos
sub
push
popf
cmc
rcll
mov
shl
fnstcw
std
int3
pop
out
mov
mov
xchg
nop
push
cmpb
fisttpll
adc
rolb
inc
ret
sbb
daa
sub
shr
dec
sbb
imul
test
inc
lret
gs
pushf
test
jecxz
aam
xor
stc
int
push
in
or
push
inc
push
mov
aas
movsl
fidivrl
out
bnd
pop
shrb
pop
dec
leave
shrb
sarb
mov
or
or
mov
or
inc
dec
xor
mov
daa
and
xchg
push
xor
add
loopnew
dec
rorb
shr
arpl
daa
cmp
sti
fstl
cmp
or
xorl
movsb
fsincos
nop
jecxz
and
xchg
mov
outsl
mov
mov
data16
mov
ret
mov
pop
jmp
and
push
push
jo
ret
jo
push
inc
mov
loop
xchg
cmp
enter
orb
sub
fisttpl
dec
sbb
mov
push
jbe
cmp
rcll
in
cs
imul
jb
lret
faddl
pop
jnp
pop
jg
push
push
out
xor
mov
aad
or
fldl
sbb
in
hlt
sbb
movsb
adc
aam
ljmp
sbbb
and
arpl
push
cmp
cs
repz
out
mov
insb
cltd
xchg
jne
ret
dec
xchg
pop
mov
in
int3
pushf
ss
push
pop
mov
sar
lea
in
sub
jae
int3
mov
sbb
daa
xchg
jmp
jge
push
adc
pushf
mov
ss
fcmovu
lods
iret
int3
in
insl
imull
leave
inc
pop
jo
hlt
loope
fidivl
mov
shll
sub
lahf
dec
aam
xchg
insl
push
sbbl
sbb
in
xchg
cmp
pop
dec
popl
fmul
test
pusha
cmp
mov
xor
cmp
xchg
cmp
pop
push
popf
and
in
push
push
mov
out
xchg
sbb
ljmp
cmp
jns
or
std
cmp
push
or
or
mov
pusha
imul
data16
in
rorb
shr
aam
fwait
xchg
lret
mov
adc
divl
jp
xchg
mov
int3
aaa
push
push
xchg
lahf
orl
pop
insb
sub
lcall
ret
icebp
aas
ja
testl
incb
add
push
mov
add
jl
cmc
cmp
inc
fcmovbe
out
xorb
adc
dec
push
jne
fdivrs
xor
or
bnd
jle
out
pop
add
and
inc
mov
cmpsb
add
std
pusha
sahf
mov
xchg
pop
arpl
mov
sahf
pop
cmp
cs
ds
je
testb
jge
ret
out
and
daa
movsl
and
hlt
sub
xorl
jae
mov
xor
inc
mov
xor
push
sub
mov
cmpsb
sbb
dec
in
addr16
or
xchg
add
aam
mov
sbb
cmc
and
ret
sbb
inc
sti
stc
mov
mov
lahf
and
dec
das
imul
orl
ret
stos
or
sbb
pop
xlat
pop
sti
sbb
mov
stos
push
outsl
mov
xorb
flds
jp
out
shll
jo
jle
fcompl
inc
or
out
call
push
adc
pushf
shlb
inc
pop
ljmp
es
inc
fisttpll
data16
and
mov
cmp
lock
mov
xor
ljmp
arpl
jmp
fstl
popa
xchg
daa
pop
loope
loop
imul
lods
out
out
add
mov
add
cmpsb
fiadds
ret
stos
xchg
lahf
pusha
outsb
jl
mov
out
and
mov
lds
out
lret
mov
andb
addr16
insb
xchg
sbb
and
pusha
xchg
cmc
cld
dec
adc
mov
dec
push
push
clc
call
jnp
shlb
lods
insb
xorb
fstpl
jne
sbbl
push
push
stos
sbb
ret
inc
or
rclb
popa
sub
mov
insl
std
add
aaa
xchg
xor
pop
adc
xchg
xor
cmc
xchg
dec
mov
sub
movsl
loopne
mov
ss
push
push
test
ja
fcomps
in
js
push
je
jns
sub
inc
fsub
fcomps
aam
lods
jb
popf
pop
inc
movsl
movq
or
pop
out
test
outsl
lcall
jnp
into
test
cmp
xor
aam
faddl
andb
xchg
or
jne
dec
popf
lret
jne
and
cmp
xchg
in
xchg
clc
out
and
iret
insl
mov
pop
out
dec
aaa
pop
mov
xlat
xor
nop
adc
sub
aaa
adc
mov
test
inc
and
dec
inc
xor
mov
sbb
insb
out
in
mov
icebp
sbb
sub
dec
cmpsb
mov
push
push
ss
outsb
ret
mov
and
stc
in
or
xor
es
insl
popa
sbb
jle
jno
lds
jp
aad
xchg
repnz
mov
and
out
outsl
test
dec
daa
jl
pop
subb
push
lret
jmp
xchg
push
inc
adc
sbb
lret
sti
fisubrs
mov
imul
dec
mov
or
sbb
fsubrs
fimuls
hlt
out
pop
or
outsl
int
mov
movsl
cmpsb
mov
dec
ja
stos
sbb
and
sbbb
ds
arpl
stos
mov
sub
xlat
push
pop
add
push
ds
cmp
outsb
dec
push
sbb
popf
sbb
xchg
mov
lcall
add
push
sti
mov
movsb
jno
into
sbb
sub
insb
test
xchg
mov
sbb
add
mov
in
sarl
or
push
fsts
fcomip
mov
and
inc
fldenv
xchg
arpl
or
stc
push
ds
int
addr16
jg
sbb
rcll
jle
pusha
add
add
push
xor
fwait
cmp
add
iret
jge
sub
out
stos
shll
cmp
mov
leave
xchg
add
mov
fimull
rorl
jo
sub
cld
add
push
scas
sbb
pop
pop
int
xchg
mov
icebp
xor
into
or
ds
rcrb
add
pop
sub
sbb
stos
aaa
or
inc
and
in
jbe
out
dec
ljmp
cwtl
mov
sub
adc
negl
dec
inc
aaa
push
test
popa
pushf
out
cmp
push
and
roll
add
push
pop
mov
xchg
adc
and
or
clc
and
shll
inc
out
dec
into
sbb
xor
push
iret
iret
test
call
hlt
dec
in
outsb
sbb
ljmp
sub
mov
mov
jmp
aam
and
cld
pop
scas
push
shl
add
push
movsl
jmp
fldcw
sub
jl
stos
cli
aaa
xor
adc
or
mov
xlat
sarb
dec
xor
popa
or
sti
cs
pushf
mov
aad
ret
cmp
hlt
int
dec
cmp
inc
push
sar
and
sahf
adc
sti
cld
jnp
lock
xor
pop
movsb
out
dec
pop
push
std
mov
inc
sbb
mov
in
icebp
imul
mov
mov
xlat
out
ds
mov
push
and
rcrl
jbe
add
cltd
xor
pushf
enter
inc
push
ret
xchg
data16
or
add
or
add
cmp
in
xor
push
xchg
jae
cmpsl
fwait
scas
ja
or
in
xchg
aam
pop
push
out
cmp
jp
dec
dec
pop
jecxz
enter
mov
pop
push
dec
inc
xchg
add
mov
cli
add
mov
aas
pop
sub
in
stc
xchg
outsl
sbb
je
in
call
loope
pop
inc
push
push
mov
cld
and
add
lahf
aaa
mov
and
mov
inc
mov
in
out
fwait
shll
out
adc
mov
jbe
notl
jecxz
mov
loop
inc
push
sub
rcrb
scas
sti
mov
out
jbe
jo
mov
pusha
jne
test
cmc
lea
sub
pusha
push
lahf
mov
push
xor
jb
in
mov
out
sarl
pop
lea
mov
jae
dec
in
or
push
rcl
ss
cmp
daa
or
pusha
mov
in
push
movsl
mov
mov
adc
cmp
add
mov
pop
or
inc
pop
mov
addr16
rcrl
cli
cld
jns
adc
xor
push
sub
aam
fs
popf
push
cmp
xor
fs
das
push
push
add
outsb
outsb
arpl
sub
dec
cmp
dec
outsl
in
ds
push
mov
mov
sbb
bound
cwtl
inc
add
mov
or
cltd
jle
clc
jnp
inc
out
test
inc
adc
inc
mov
int
sbbl
cwtl
hlt
inc
loop
mov
fiaddl
into
pop
add
cmp
cs
jg
jo
scas
add
pusha
lock
add
enter
add
adc
fadds
vpmaddwd
mov
mov
scas
aaa
shrl
aad
xor
and
notl
insb
nop
enter
pop
scas
jbe
out
cli
xchg
cmpsl
lea
mov
int
andb
mov
or
add
jl
jl
sbb
fcomps
sti
inc
fisttpl
lret
ror
ja
out
sbb
inc
xchg
addb
add
push
jb
or
push
push
xchg
xchg
icebp
pop
out
inc
sub
xchg
shl
sbb
test
xchg
jae
and
push
ror
out
les
pop
insl
xor
bound
jle
jne
lret
push
leave
add
fadd
test
xor
scas
and
pop
push
dec
adc
inc
jne
sbb
nop
cmp
pushf
mov
mov
mov
stc
xchg
in
mov
mov
mov
adcb
es
pusha
jmp
call
inc
lret
mov
mov
fs
cmpsl
enter
std
fiaddl
push
and
mov
jecxz
jns
lea
int
cmp
fmuls
adc
fdivl
subl
imul
jmp
mov
loope
xchg
popa
inc
push
aam
cmp
das
fidivs
call
dec
mov
mov
jg
xchg
lds
inc
pop
lahf
xor
mov
rcll
xchg
loopne
jle
frstor
sahf
pop
test
jge
inc
aam
cmp
jns
add
inc
push
push
mov
xchg
cmc
lret
mov
cmp
decl
push
fwait
cmc
mov
pushf
dec
int3
outsb
adc
aad
xchg
mov
xchg
je
bound
aad
xor
sbb
out
jbe
pushf
mov
inc
call
lea
pop
inc
imul
aas
fwait
aas
in
mov
mov
cmpsl
cmpsl
add
cli
mov
adc
iret
into
popf
mov
push
push
stc
mov
pop
pushl
fsubr
data16
pop
jmp
fadds
add
loopne
mov
movsl
rcll
and
adc
into
stos
loop
or
sub
pop
mov
lret
add
out
imul
sub
dec
fildl
lds
push
or
cmp
jl
adc
lret
das
ss
arpl
xchg
mov
push
xchg
mov
nop
mov
mov
inc
popa
mov
hlt
orb
lahf
and
aad
lods
loope
andb
mov
sti
cmc
push
sub
in
ficomps
fdiv
and
insl
xor
pop
dec
inc
inc
mov
loope
mov
stos
add
sub
xchg
aas
and
or
imul
mov
hlt
cmp
pop
stos
out
inc
add
ljmp
push
pop
add
mov
pushf
or
sbb
std
xor
enter
repz
in
rorl
and
push
xchg
pop
call
pop
cmp
xchg
dec
inc
cmpb
add
jnp
add
lret
test
mov
sbb
ds
xchg
dec
stos
sbb
cmp
push
mov
stos
push
lahf
xchg
xchg
fstps
cmpsl
testb
ret
xor
mov
sub
xchg
mov
imul
lods
mov
jo
into
subl
jbe
inc
add
adc
ret
cs
sti
daa
out
push
inc
adc
rorl
loop
dec
loope
adc
cmp
sbb
shr
push
cwtl
pop
sbb
mov
jecxz
negb
fdivp
aam
stc
pop
adc
mov
movsb
rcr
mov
sahf
jge
sub
cmp
jnp
outsb
ljmp
pushf
pusha
push
iret
jns
movsb
adc
push
pop
xchg
xchg
xchg
icebp
cwtl
mov
rorb
lret
in
mov
sub
pop
out
cmp
mov
mov
mov
pop
adc
in
push
testb
inc
in
adc
subb
ja
cld
cwtl
and
mov
mov
dec
push
and
shrb
sbb
and
cmc
aad
jl
mov
xorb
in
add
sbb
imul
mov
pushf
fdivrp
decb
gs
ja
iret
add
call
sbb
mov
pop
xlat
cmc
pop
xor
insb
cltd
cmp
dec
sub
imul
in
mov
and
test
pop
push
sbb
setbe
addr16
movsl
int
push
in
cmpsl
nop
xchg
inc
stos
insb
jp
mov
or
mov
hlt
dec
std
test
sbb
xchg
sub
lods
mov
pop
xor
add
in
mov
add
xor
sahf
iret
xlat
jl
mov
dec
sub
inc
scas
popf
sub
jbe
push
shrl
stc
xor
jmp
xor
sbbl
repnz
fmuls
jge
sti
mov
jbe
jmp
and
and
inc
lods
repz
mov
inc
or
sbb
jno
je
and
push
xchg
sbb
cmc
into
fimuls
adc
mov
push
in
fcoms
sub
xchg
cmp
sbb
jecxz
out
cmpsl
insl
sub
fisttps
pop
mov
xor
push
aam
mov
loopne
xchg
sbb
lods
sub
mov
in
pop
in
lea
pushf
std
stos
mov
xor
fistps
mov
mov
popf
in
out
fisubrs
jle
in
add
jg
dec
mov
out
push
and
test
mov
aam
cmp
subl
in
jnp
xchg
es
jle
sbb
test
push
in
cmpsl
pop
inc
cmpsl
pop
pop
fsubs
sti
cmpsb
jge
fadd
pop
outsl
jne
pushf
or
dec
adc
xchg
mov
jnp
scas
imul
xor
adc
jg
pop
in
mov
pause
jne
dec
int3
mov
mov
push
mov
sub
xchg
add
dec
in
fidivrl
mov
lahf
cmpsb
ficoml
mov
and
int3
not
fisttps
stos
mov
and
xchg
dec
inc
je
adc
ret
xor
mov
fs
imul
call
cmp
xlat
iret
cltd
and
pop
dec
mov
arpl
enter
outsl
cmpsl
inc
cmp
dec
mov
je
scas
push
popf
vpmovsxbw
movb
sbb
add
inc
cmp
mov
test
push
jne
mov
cs
jns
inc
sahf
adc
stos
fmuls
fcoms
inc
es
push
dec
inc
call
cmpsl
xchg
shll
es
cmpsb
sbb
ljmp
lcall
cli
cmp
scas
ljmp
out
out
lods
clc
or
cmpsl
fsubr
mov
pop
mov
mov
mov
inc
jmp
sbbl
cmc
js
mov
enter
js
inc
lret
stos
pop
mov
jns,pn
inc
xchg
fsubs
addr16
xchg
xchg
aas
addr16
hlt
cmpsl
out
movsl
movsl
popa
into
cmp
pop
out
and
push
adc
xor
insb
jle
lret
dec
gs
xor
cs
daa
sbb
adc
xor
xor
jl
divl
sbb
xchg
jecxz
aaa
mov
cmp
cmp
repnz
or
and
cli
arpl
mov
mov
out
jg
out
push
repz
jl
cmc
in
dec
mov
dec
call
inc
mov
and
test
mov
inc
loope
and
js
fidivrs
aaa
loop
inc
arpl
adc
gs
shrl
jmp
push
insl
jmp
jl
out
mov
rcl
mov
mov
scas
xor
xchg
test
jns
push
rclb
xchg
test
xor
sbbl
in
mov
pop
rcr
and
pop
and
outsl
out
andb
bound
mov
mov
lahf
mov
in
xlat
shl
lock
inc
jne
xchg
mov
jns
stos
mov
or
push
clc
lds
ret
inc
mov
sar
addr16
xchg
xchg
sbbl
aas
xor
mov
xchg
and
mov
int3
lcall
aaa
movb
loope
outsl
test
jae
pop
jno
add
lret
sub
test
sbb
lods
inc
fnstsw
ljmp
push
mov
stos
daa
cmp
pushf
outsl
loopne
inc
xor
push
dec
stc
inc
movsl
push
ret
or
int
cs
xchg
pop
add
cmp
jge
and
pop
pop
add
incb
sbb
jge
pop
adc
add
fcomi
fcmovnu
lret
lret
int
push
jl
scas
fnstenv
insl
jns
mov
and
shlb
fcmove
mov
mov
or
shll
cltd
mov
shl
faddl
jge
inc
push
ljmp
fiaddl
sub
push
aad
sub
jno
out
dec
xor
mov
clc
pop
cli
mov
and
fpatan
rcrl
faddl
adc
pop
or
sub
adc
repz
or
in
outsb
mov
bound
mov
cmpsl
pop
shl
cwtl
aad
mov
xchg
lea
sub
andb
push
push
mov
xchg
int3
mov
push
xor
mov
daa
mov
fnsave
pop
mov
cmp
nop
jnp
jp
pop
imul
fldt
data16
mov
mov
push
mov
fldl
inc
xorl
negb
mov
int3
lcall
adc
gs
jbe
outsb
add
ljmp
xchg
mov
push
mov
test
jl
rolb
in
inc
lods
mov
dec
xchg
leave
push
pop
mov
adc
xchg
and
push
mov
jecxz
std
popf
lea
mov
add
mov
push
or
mov
cli
icebp
push
imul
clc
and
shlb
jae
out
clc
int
ror
sahf
cli
pop
inc
pop
wrmsr
inc
int
sub
jg
int
lea
cmp
loop
cs
mov
xor
pop
fildl
cmc
in
arpl
sbb
movsl
js
faddl
fsubl
sahf
sub
sahf
push
out
dec
scas
add
xor
mov
dec
inc
sbb
push
gs
mov
lock
ss
sbb
inc
cmpsb
or
and
sti
cld
aas
enter
aas
sub
adc
jnp
cmpsl
or
or
aam
test
push
dec
shrl
test
xlat
and
jo
cmp
ljmp
in
pop
push
inc
sub
sub
sbb
out
jno
pop
or
or
sar
xor
dec
dec
jb
in
inc
push
adc
jb
call
flds
add
xor
in
inc
dec
bound
sti
lods
adc
sub
jae
hlt
push
push
loope
jmp
xchg
sub
ror
out
ljmp
and
call
sbb
call
mov
sub
sub
inc
fsubr
or
flds
xor
push
xor
negb
pusha
fdecstp
mov
hlt
into
sbb
stc
jp
jecxz
jae
stos
sub
scas
das
movsb
pop
daa
les
sub
sbb
lret
adc
xchg
jg
sbb
ret
sub
loop
adc
add
das
jns
and
insb
jge
xchg
fldenv
fsubr
sbb
int
aad
imul
mov
add
mov
popl
aaa
out
dec
push
mov
add
adc
cmp
mov
inc
add
test
adc
jg
mov
push
das
cld
add
sbb
pop
mov
mov
and
adc
dec
shlb
adc
sti
addl
mov
subb
xchg
shlb
dec
out
and
sub
ret
mov
inc
pop
jbe
mov
je
ljmp
add
dec
lds
adc
movsl
fs
stos
cmc
jle
or
insl
sbb
sbb
dec
push
dec
stos
pop
dec
mov
jb
sbb
push
add
insl
cs
repz
les
pop
cld
stos
enter
xchg
shrl
add
push
and
add
insl
push
insl
xchg
push
mov
mov
in
mov
aaa
or
jmp
and
jbe
fnsave
call
test
cmp
xor
pop
rcrl
addr16
jae
push
stos
xor
mov
add
push
adc
push
mov
xchg
and
sarb
inc
or
xor
movsl
fnstenv
shlb
loopne
and
lcall
aam
mov
inc
lcall
sub
and
faddl
lcall
fldt
cmp
push
leave
shll
bound
xchg
insl
adc
rcll
pop
lcall
xchg
cmp
fisubrs
movsb
cltd
jno
sahf
fmuls
mov
mov
jmp
rolb
dec
and
pop
cs
add
mov
adc
insb
and
inc
in
shlb
in
adc
cmp
or
push
es
cmp
jecxz
mov
jo
cmp
lret
mulb
jge
shlb
orl
push
fwait
mov
into
aad
push
and
ret
les
inc
or
jle
and
fcompl
cs
cmpsl
iret
fisubs
sbb
leave
icebp
inc
lcall
fcmovu
mov
mov
xchg
mov
rcrl
cmpsb
aaa
bound
loopne
jle
int3
sub
dec
outsl
inc
out
inc
mov
imul
ja
in
scas
add
bsr
lock
clc
movsl
loope
sub
cmpsl
subl
pop
mov
mov
pop
scas
out
stc
loopne
test
iret
sbb
lea
jb
movsl
or
loop
negb
mov
loope
push
push
dec
insb
xor
lcall
ror
cmpsb
repz
loop
xor
ficoms
dec
andps
shlb
fisubrs
pop
ret
sbb
sbb
daa
or
subps
push
rorb
insb
dec
aaa
pop
cmp
xchg
xor
jbe
les
and
out
out
mov
pushf
out
xor
dec
cwtl
sbb
stos
mov
xor
sbb
das
out
push
popf
pusha
cltd
addr16
jmp
aam
mov
dec
fwait
inc
enter
mov
or
jg
ret
adc
mov
out
push
aam
sub
jg
add
cld
xor
data16
and
push
mov
cld
ja
int
sbb
arpl
and
movsl
insl
loop
imul
pop
rcl
call
sbb
push
mov
mov
adc
dec
stos
call
jb
add
xchg
mov
lahf
or
mov
dec
test
push
xchg
add
fnsave
dec
dec
mov
lret
mov
out
pusha
or
push
jno
into
push
xchg
pop
mov
test
sarb
sbb
xchg
mov
cld
mov
in
mov
xchg
or
insl
mov
es
push
clc
lcall
inc
jo
cmp
lods
jp
dec
pop
imul
dec
insl
adc
and
push
fisttps
mov
cmp
je
divl
pop
dec
jle
sub
movsb
jg
xchg
movsb
les
sti
pop
pop
cmpsl
and
addr16
mov
adc
test
xor
sarl
inc
dec
ss
fwait
out
lret
ret
jge
movsb
sub
adc
add
mov
mov
add
push
push
dec
jp
mov
sub
shlb
xor
fistps
sub
and
es
jge
arpl
in
adc
test
test
dec
pop
dec
cmp
adc
adc
movsl
push
ds
cmp
rcrl
mov
or
mov
xchg
js
cmp
xchg
mov
fistps
add
dec
xor
push
pusha
arpl
pusha
in
inc
sar
lods
pop
in
xchg
sbb
push
add
js
sbb
xor
sub
call
test
test
inc
outsb
jne
in
inc
push
adc
sahf
mov
jne
jne
inc
ret
pop
in
cmp
fstpt
in
dec
repz
sbbb
rorl
jo
out
and
mov
pop
mov
pop
and
jae
addr16
sbb
out
xchg
xchg
push
lcall
pop
push
add
inc
dec
push
mov
sbb
xchg
mov
lods
lods
mov
ret
imul
jbe
pop
nop
ds
cmpsb
mov
lds
xor
arpl
iret
iret
cmp
xchg
inc
and
lahf
cwtl
je
leave
movsl
ljmp
pop
insb
sti
adc
out
mov
sbb
push
jno
sub
je
push
cld
rcll
iret
incl
jae
pop
lret
lock
pop
aam
mov
mov
mov
push
xchg
mov
push
popf
ret
ss
mov
push
cmp
xor
and
mov
mov
or
xor
mov
and
mov
cmp
mov
push
pop
scas
or
lds
cltd
insb
push
icebp
push
dec
jnp
pop
cwtl
je
pop
cmp
pushf
test
xor
repnz
icebp
or
dec
jns
bound
popa
push
dec
jl
mov
pop
jnp
out
pop
cmpsb
arpl
lods
loope
jmp
pop
cmp
mov
gs
push
adcl
pop
nopl
orl
sbb
mov
add
popf
js
add
add
sbb
std
aaa
fs
mov
mov
imul
inc
push
xor
pop
sub
add
cld
pop
adc
push
mov
ds
push
pop
sti
jge
shl
xor
push
popf
or
jmp
jmp
xor
enter
pop
rol
lcall
inc
cs
and
xchg
mov
push
movsl
mov
jl
lds
or
adc
inc
mov
out
push
imul
sub
cli
xor
movsw
jg
xchg
push
xor
jae
jp
movsb
jmp
mov
hlt
mov
sub
cmp
lret
and
jne
out
push
outsl
or
add
enter
ljmp
pushf
add
ljmp
cmp
ja
xchg
pop
enter
shlb
scas
push
mov
or
pop
xchg
mov
in
push
dec
lock
sbb
out
mov
cmp
in
nop
pop
test
shrb
mov
inc
das
add
mov
scas
repz
cmp
roll
std
lock
pop
in
nop
popf
loop
fdivrs
sti
outsl
sub
mul
scas
loop
and
xor
and
xchg
pop
sub
ljmp
jp
loope
ret
mov
test
mov
sbb
or
shl
arpl
xchg
mov
jp
inc
sub
je
scas
or
imul
add
dec
and
movsl
add
ret
test
shlb
xchg
rclb
inc
mov
ss
scas
fisttpll
cltd
inc
mov
inc
into
in
dec
scas
stc
mov
lret
aam
loope
movsb
or
jo
loop
sbb
pop
xchg
xor
dec
lods
imul
fcoms
add
mov
and
sub
pusha
in
push
pop
mov
xchg
stos
xor
xor
jp
jae
jb
xor
lahf
jge
ljmp
pushf
sub
addb
cmpsb
int3
jae
mov
imul
xchg
xor
sahf
xchg
dec
mov
xchg
jle
push
or
inc
call
inc
jle
jbe
lock
mov
sbb
dec
adc
adc
cmpsl
mov
bound
pop
cmp
dec
inc
mov
jl
enter
ja
ljmp
out
push
adc
out
movsb
repz
xor
fldcw
lret
xor
daa
rcl
leave
enter
jge
and
or
inc
inc
jg
push
jle
push
sub
and
sbb
rep
cli
in
push
lahf
sbb
sub
shlb
aas
inc
jle
add
icebp
sbb
mov
mov
cli
fsub
mov
arpl
jo
inc
or
rorl
enter
sbb
ret
cwtl
rcl
lods
aad
test
pshufw
jle
and
push
repz
ljmp
add
inc
adc
add
cmp
and
cs
mov
add
jb
fnstcw
inc
rcrb
or
decb
leave
push
adc
and
push
cmpsb
stc
and
inc
movsb
inc
xor
mov
daa
sub
loop
js
out
cld
inc
dec
cs
jge
push
nop
and
insl
push
fstpt
enter
neg
lahf
adc
fwait
mov
add
aam
imul
addr16
push
pop
sub
in
clc
lret
arpl
pop
in
test
add
dec
pop
add
xor
out
push
sbb
inc
lahf
sti
sub
loopne
scas
dec
mov
mov
mov
and
pushf
xor
sarl
roll
fidivl
inc
dec
adc
repnz
mov
out
clc
xor
leave
testl
stos
pop
inc
imul
fisttpll
pop
xchg
adc
jbe
adc
add
adc
jb
insl
adc
shll
sti
pop
in
ror
test
lret
aad
sbb
test
xor
lcall
and
rcr
call
lret
push
test
push
mov
lcall
pop
mov
pusha
xchg
mov
imul
and
ret
rcll
jnp
add
inc
sub
rorb
fnstenv
das
rcr
fcmovnbe
bound
cmp
mov
into
out
push
jmp
js
aad
shr
adc
es
pop
imul
in
std
xchg
pop
scas
sbb
icebp
clc
hlt
add
lcall
push
ss
xor
mov
push
jg
sbb
pop
cmp
mov
ret
pop
jne
dec
sub
das
dec
inc
out
sbb
adc
lret
test
out
das
jge
mov
sub
xchg
popa
dec
fadds
rcl
pop
mov
jge
gs
inc
and
mov
cmp
add
or
push
movsb
or
cltd
cltd
push
adc
mov
jne
and
addr16
test
ret
scas
xor
fsts
loopne
ds
sbb
in
loop
nop
cmp
adc
test
cmp
pop
insb
sbb
inc
clc
mov
repz
adc
int3
jnp
inc
sbb
jecxz
dec
std
or
repnz
imul
cmp
not
in
pushf
incl
cmp
int
fisttps
push
inc
pop
cmp
xor
les
push
sub
shrl
dec
push
test
gs
sub
clc
sub
inc
jmp
adc
mov
lret
add
xchg
adc
dec
pop
mov
js
push
dec
adc
pusha
inc
out
test
xor
out
test
imul
cmp
or
or
int
and
das
push
sbb
jge
bnd
sub
nop
xchg
adcb
pop
lods
jno
mov
push
jns
or
cmp
sbb
push
es
or
iret
mov
add
adc
sbb
movsb
mov
lock
dec
je
loope
out
pop
adcb
out
push
loope
cmp
lcall
movb
or
adc
cltd
mov
fcoms
sbb
sbb
push
out
scas
mov
push
pop
pushf
mov
dec
lods
iret
mov
jbe
xor
or
sbb
pop
sahf
jo
mov
dec
aam
mov
loope
push
scas
jmp
arpl
sub
ja
icebp
xchg
jle
sub
xor
xor
push
into
imul
sub
cmp
cmpl
das
out
call
cmpsb
inc
and
dec
fdivrp
push
int3
fs
in
pushf
sub
sbb
rclb
lret
loopne
add
insb
and
popf
aas
mov
into
in
dec
pop
scas
clc
cmp
sub
push
inc
out
add
jbe
and
or
scas
lahf
jnp
pop
fmul
int
loopne
in
jae
inc
pop
int
fwait
or
jg
aam
shll
mov
jp
mov
xchg
icebp
inc
adc
call
and
dec
loope
cmpb
stc
pop
imull
ret
jp
push
mov
mull
ret
std
jo
push
jno
aad
mov
addb
jns
push
cltd
jmp
stos
dec
sbb
cmpsb
and
loope
inc
xchg
fiadds
xor
push
clc
sbb
enter
lods
add
movsl
push
mov
jecxz
gs
insl
out
mov
daa
loope
faddp
fidivl
pop
jge
ficompl
aas
adc
xchg
shl
jo
int
fistpl
daa
push
aad
in
xchg
or
xchg
sbb
push
mov
sub
aam
fmull
and
sar
es
mov
loope
or
outsb
or
dec
out
lds
fbld
xlat
stos
fwait
rorb
adc
lret
xchg
lahf
lods
mov
test
lods
mov
arpl
call
push
fisttps
arpl
mov
in
lods
pop
rorl
out
xchg
test
jp
loopne
cmp
test
testb
xor
lods
and
test
push
xor
mov
addr16
out
adc
pop
dec
and
add
daa
pop
sar
jp
gs
fnstcw
mov
call
mov
call
sbb
sbb
xor
or
xorb
ret
dec
pop
ss
cmp
lret
jbe
sbb
ja
pop
sub
pop
pop
aam
aas
lods
insb
loop
push
jle
pop
or
testl
fldt
inc
push
aam
dec
dec
cmp
pusha
imul
test
mov
push
outsl
stos
mov
or
xor
decb
pop
adc
outsl
push
cmp
cmp
jo
sbb
popa
pop
inc
insb
ss
sub
iret
add
rorb
sub
mov
loopne
sub
add
shrd
xor
fstpl
test
fists
dec
ljmp
fcomip
out
pop
dec
into
and
repnz
mov
sbb
and
imulb
and
add
lods
jecxz
push
lret
mov
cwtl
out
sti
push
xor
mov
loop
jmp
mov
popf
test
or
icebp
sub
lcall
movl
out
fnstenv
clc
fisubrs
mov
data16
mov
mov
sub
test
inc
int
inc
or
in
pop
nop
shrb
mov
lcall
in
sti
daa
push
cs
xlat
aad
adc
sbb
icebp
mov
in
xchg
sahf
test
dec
movlps
adc
in
mov
imul
xor
cltd
cld
mov
cmpb
fxch
test
out
or
insl
cmpsb
and
stos
pop
sub
inc
insl
xchg
or
movl
stos
adcb
sahf
jo
or
sbb
pop
pop
xchg
out
dec
ficoms
int3
out
xchg
mov
jno
push
repz
negb
sub
repnz
mov
and
test
sbb
pop
and
js
fcompl
cs
and
push
xor
sub
in
dec
inc
nop
sub
popa
std
and
or
and
fcomps
cmp
rcrl
xor
adc
fstps
scas
jae
xchg
pusha
sbb
xchg
sub
jecxz
mov
mov
mov
mov
and
mov
and
jbe
inc
jb
lock
xchg
cmp
out
lahf
call
cmpl
inc
andl
cltd
daa
mov
sbb
cs
lahf
cmovle
xchg
mov
mov
jecxz
and
mov
ljmp
leave
mov
xchg
cld
cmp
arpl
adc
jne
adc
mov
and
lcall
stos
mov
shrl
xchg
xchg
cmp
push
adc
adc
aam
push
pusha
adc
pusha
pop
xchg
push
iret
xchg
cmpsl
lea
cltd
fwait
negl
jle
mov
mov
or
cltd
je
ret
imul
cmp
insl
sbb
mov
xor
jne
gs
rcrl
ficoml
inc
sbb
orl
inc
xor
add
mov
in
movsl
shll
add
adc
xchg
add
aam
and
rclb
dec
xchg
dec
mov
or
arpl
rcrl
sub
pop
jo
insb
mov
movsl
xchg
xor
mov
imul
hlt
sarl
pop
stos
mov
lds
push
xchg
shrl
jmp
mov
aam
test
roll
sub
pusha
lods
push
das
out
mov
data16
jo
shl
cmp
lret
sbb
cmp
xchg
mov
dec
insb
les
jl
push
mov
stc
sbb
scas
mov
repnz
jmp
ja
sub
mov
mov
es
stc
daa
jbe
fdiv
add
sahf
pop
adc
stos
inc
inc
flds
and
mov
daa
mov
ret
cmp
scas
out
pusha
fisubrl
stos
inc
popf
mov
cld
mov
inc
movsl
jnp
int3
mov
aam
pop
pushf
mov
ja
mov
pop
repnz
jecxz
or
fwait
mov
pop
xchg
movl
mov
sub
es
lock
iret
cld
jb
arpl
in
mov
fimuls
xlat
jp
sub
ffreep
ret
cmp
aad
inc
xchg
ss
xor
ss
shrl
mov
mov
cmp
aaa
mov
out
push
or
stc
or
lcall
cmp
cmp
enter
sbb
pop
gs
pop
push
lret
mov
jo
xchg
and
push
icebp
push
pop
rcr
and
idivl
lret
mov
adc
add
ret
notl
aaa
add
pop
adc
rclb
or
popf
mov
xor
popl
cmp
outsl
loopne
movzbl
inc
out
adc
xchg
mov
sbb
mov
imul
jne
daa
insl
ret
stos
loop
mov
jo
push
scas
ljmp
popa
movsl
fs
push
sub
mov
ret
mov
cmc
je
test
fs
shrl
enter
mov
mov
sub
test
sub
test
test
gs
pop
jno
xchg
test
fninit
mov
inc
leave
data16
js
xor
or
pusha
xchg
ret
ds
mov
cmpl
and
sub
cs
repnz
fwait
leave
popa
knotb
scas
int
sbb
jbe
jp
xchg
hlt
test
insl
aaa
incl
test
and
outsb
clc
lock
inc
sti
add
lock
loop
aad
mov
mov
mov
sbb
push
pusha
sbb
xchg
inc
sbb
mov
add
hlt
aam
push
pop
pop
pop
loope
clc
in
mov
inc
in
dec
das
scas
sar
push
xor
xchg
jns
daa
lea
in
sbbb
cmp
imul
push
repnz
jp
rolb
mov
add
mov
int3
outsl
mov
push
sub
imul
cmp
add
jae
push
popa
notb
mov
mov
push
mov
push
in
and
jmp
mov
dec
ss
icebp
ret
sub
adc
mov
sbb
push
and
add
or
nop
je
pop
adc
pop
or
fnstsw
cltd
hlt
mov
xchg
outsb
outsb
inc
sub
orl
hlt
push
repz
lods
pop
add
cmp
or
sub
mov
sub
xlat
mov
xchg
sub
insl
mov
and
cmpsb
bound
or
pop
stos
sarb
imul
das
test
icebp
out
shlb
mov
testb
aam
clc
add
inc
mov
push
pop
push
fwait
jecxz
jg
arpl
jb
test
pop
arpl
rcll
pop
add
test
pop
mov
cmpsl
and
mov
inc
mov
or
jo
aas
pop
xorb
add
stos
jl
ds
pop
cli
xchg
aaa
jmp
fnstenv
cmc
or
cwtl
pop
dec
ss
mov
add
into
nop
dec
ljmp
loopne
pop
xorb
int3
or
leave
mov
mov
xchg
loopne
or
dec
mov
mov
shlb
popa
pop
movsl
sbb
mov
mov
fidivl
js
push
fisubl
add
repnz
jecxz
inc
imul
mov
push
ret
sahf
dec
ret
fisubs
fcompl
hlt
cmp
shll
addl
out
leave
mov
push
fsubrl
ret
sub
cmp
shrb
fbstp
popf
sub
das
push
mov
imul
xchg
inc
cmc
mov
test
add
insl
outsl
stos
sbb
xchg
mov
aas
or
inc
ljmp
mov
test
or
sub
test
repnz
gs
nop
and
add
shlb
cmpsb
rorb
aaa
push
out
cwtl
inc
fcompl
pop
cmpl
jno
outsb
dec
push
sti
lret
cmp
mov
addr16
addr16
je
adc
cltd
into
cmp
shlb
fbstp
jmp
jp
cmp
bound
xchg
add
push
sub
adc
xchg
xchg
xchg
hlt
pop
dec
cmp
rorb
std
or
jbe
sbb
fistl
adc
enter
xchg
pop
cmp
inc
mov
push
push
lcall
sti
scas
daa
xchg
jo
adc
xor
mov
pop
dec
scas
stos
sbb
dec
lret
dec
xor
push
movsb
fnstsw
xor
inc
dec
divb
xchg
jne
icebp
sub
aas
cmp
or
mov
scas
test
lahf
lods
repnz
cmpsl
lods
push
jno
test
sbb
fwait
test
outsl
movsl
cli
and
push
imul
mov
push
movb
sbb
xchg
xor
outsb
shll
sbb
jecxz
mov
xor
pop
in
out
inc
inc
test
adc
push
mov
negl
dec
and
jns
dec
ds
in
jp
xor
adc
xchg
lods
adcl
jmp
lds
lock
in
cwtl
pop
fistl
stos
bound
rolb
mov
push
mov
xor
rcr
out
sub
push
fscale
icebp
pop
loop
movsb
push
loop
test
ficoml
inc
notl
xchg
shlb
enter
mov
pop
xchg
hlt
aad
test
test
lcall
mov
adc
es
inc
fwait
mov
mov
ljmp
add
jecxz
push
and
jp
hlt
push
pop
int
push
bound
mov
aaa
out
push
jb
and
insb
fnstsw
jp
subl
fs
xlat
lret
mov
shrb
scas
lock
int3
fwait
jecxz
scas
dec
stos
push
lea
push
mov
xchg
stos
sar
xor
jnp
adc
or
into
mov
test
jg
cltd
fwait
or
loopne
roll
ret
lcall
ja
loop
in
sub
pusha
daa
fld1
jbe
pop
xchg
in
das
shlb
mov
rcrb
jne
ficompl
sahf
sbb
mull
add
pop
fisttpll
ds
iret
cmp
lods
xchg
sub
movsb
mov
cs
sbb
sbb
sbb
cmp
fists
lds
mov
lret
jnp
xchg
sbb
cld
push
push
mov
nop
and
mov
je
mov
or
popa
test
xchg
sub
out
mul
daa
sbb
loope
in
mov
jo
test
scas
gs
mov
mov
lret
mov
xchg
push
loopne
jo
sub
imulb
lcall
repz
jne
adcb
jle
ret
sub
in
nop
call
enter
xor
ficoml
xlat
pusha
aas
xor
repnz
cld
mov
sub
in
mov
je
mov
sbb
out
sbb
out
xor
sbb
int
ljmp
fsts
xor
stc
jns
jecxz
cmpsb
js
imul
jecxz
push
push
ljmp
jp
in
xlat
xchg
test
jb
inc
aad
jno
shr
call
les
mov
lods
jb
rcll
fistpll
sub
pop
or
xor
push
cmpsb
mov
int
push
sbb
jns
xchg
inc
cmovp
inc
sub
cmp
sbb
jg
jb
or
inc
xor
mov
inc
jnp
insb
sti
mov
js
mov
fcmovnu
mov
notl
mov
pop
adc
sarb
outsb
clc
rorl
les
mov
clc
xchg
ds
or
fistpll
popa
dec
mov
inc
mov
in
cmp
dec
mov
arpl
pop
adc
js
push
mov
jmp
aaa
ret
xchg
mov
add
mov
sti
in
jo
cmp
loope
fistpl
mov
aas
aas
cmpsl
mov
add
mov
xchg
xlat
sub
pop
nop
popa
cltd
cmp
into
push
addl
insl
icebp
cli
jecxz
fadds
inc
dec
jbe
leave
fwait
repz
dec
out
push
jne
outsl
gs
push
clc
inc
sbb
movsl
ljmp
xchg
xor
and
sbb
xor
and
movsl
push
stos
pop
dec
sarb
ficoml
mov
cmc
xchg
xchg
pop
cwtl
lahf
lock
or
dec
cli
xchg
std
mov
test
stos
data16
jmp
rcrb
push
loop
jne
adc
mov
ja
cmc
sbb
mov
aam
les
dec
js
pop
hlt
subl
pop
fcoms
inc
insb
nop
inc
in
xor
and
pop
mov
mov
or
pop
inc
ljmp
sti
cltd
fiaddl
js
testl
xor
test
sub
aaa
repz
jns
pop
xor
ja
sbb
rcl
dec
push
pop
movsb
scas
filds
push
mov
out
dec
mov
cmp
mov
sbb
pop
jecxz
sub
push
repz
fmulp
js
shr
sub
jns
sbb
inc
fwait
pop
ret
cmp
or
mov
or
jp
inc
push
xor
sahf
pop
lods
adc
dec
push
jle
outsl
ds
fwait
mov
dec
jle
popf
xor
ljmp
loopne
mov
ja
push
lock
outsl
add
sub
cmp
cmp
fwait
rcll
or
jmp
mov
adc
inc
into
jmp
int
xor
mov
imul
mov
inc
rcrl
add
js
into
pop
notb
add
dec
jb
repnz
pop
xchg
int
mov
xchg
jno
addl
hlt
cltd
pop
mov
roll
sbb
jns
clc
sub
jecxz
nop
jae
movsb
inc
ret
or
out
pop
cli
pop
mov
inc
lock
icebp
or
inc
or
dec
repnz
mov
stos
outsb
sub
dec
and
jle
xchg
mov
in
popa
dec
push
fbstp
hlt
sub
sub
cwtl
jp
enter
fisubs
in
lock
pop
repnz
icebp
sub
pusha
adc
lds
cwtl
add
mov
fists
setle
cli
je
imul
mov
inc
xchg
add
push
pop
xor
cwtl
addr16
mov
inc
xor
dec
ds
dec
inc
out
push
and
movsb
and
mov
inc
pop
push
sarb
je
xor
shrl
push
sub
or
call
and
rorl
es
pop
dec
xchg
loopne
pop
lds
lock
aad
fs
test
in
dec
mov
pop
fbstp
xor
push
hlt
adc
jge
push
xchg
lret
ja
mov
fstl
lahf
insb
popa
mov
push
popf
loope
jb
in
jne
test
in
stc
dec
pop
cltd
imul
and
std
xchg
fstp
js
data16
sbb
xchg
in
lcall
ret
mov
mov
test
sub
dec
popf
mov
ret
dec
xchg
jo
testl
pop
and
xor
out
adc
ljmp
test
jnp
in
push
add
fisubs
lods
dec
xchg
xchg
ret
pop
jbe
stc
xlat
pop
adc
cmp
test
cs
pop
cld
push
push
enter
dec
test
cmp
sti
jnp
mov
jmp
and
jb
push
fwait
imul
aas
xchg
adcb
sbb
sub
lods
sub
movl
cmp
lds
dec
fidivrl
mov
pop
adc
xchg
mov
mov
pop
push
mulb
push
nop
xor
in
jp
lods
out
inc
es
cwtl
dec
dec
fwait
popa
popf
push
jnp
lock
stos
sub
lret
ficoml
outsb
mov
xchg
cwtl
mov
adc
daa
mov
add
movsb
mov
pop
ss
jne
mov
daa
adc
rolb
mov
lret
inc
ror
or
mov
cld
movsl
jecxz
inc
ja
les
or
sarl
cmp
mov
into
adc
cs
mov
xor
mov
flds
orl
cmc
je
cltd
cmpsb
mov
out
notl
mov
xor
popa
push
push
dec
adc
sar
cmp
mov
fisubrs
adc
test
call
addr16
sbb
pop
cltd
clc
push
jge
pushf
pop
cmpb
mov
dec
aam
bnd
pop
lods
pop
xchg
leave
jne
imul
leave
xchg
lds
bsr
add
jmp
popa
adc
ljmp
fstps
fisttpll
add
scas
jo
loopne
and
into
push
jecxz
jg
sbb
xchg
cmpl
dec
test
ret
frndint
int
stc
sub
push
mov
sbb
leave
sbb
ror
int
push
xchg
js
aaa
ja
lret
sbb
cltd
test
jmp
mov
pop
mov
push
mov
test
add
test
cwtl
loopne
cltd
pop
cmc
cltd
push
xchg
bound
mov
aaa
mov
in
stos
mov
jmp
stos
or
sub
and
movsb
jns
outsl
iret
jg
mov
test
outsb
xchg
add
or
ss
loop
test
sbb
loope
repz
ret
dec
mov
mov
or
add
and
dec
hlt
aad
loopne
adc
enter
jno
mov
push
pop
sub
xor
ja
in
adc
mov
inc
insl
inc
out
dec
xor
mov
add
mov
push
or
pop
cmp
das
and
and
outsb
fistpll
popa
mov
shlb
ja
fsubrl
mov
out
mov
xchg
cmpsl
cltd
jge
add
aam
cmp
loopne
loop
mov
in
dec
jle
sbb
push
dec
mov
scas
xor
fnstsw
das
int3
mov
shl
and
stos
mov
ja
imul
sbbb
xlat
fs
mov
adcb
insb
cmp
ja
fsubr
movsl
popa
icebp
cwtl
cltd
cltd
push
bt
fwait
mov
aad
jae
dec
cli
sahf
mov
mov
call
test
stos
push
cmp
xor
roll
jmp
inc
movsb
sub
in
mov
ja
cmp
pop
sub
xor
mov
lcall
fstl
xchg
push
clc
cmp
je
cmc
mov
loop
int
repz
sub
adc
push
hlt
ds
andb
icebp
pop
or
stos
push
add
arpl
add
jecxz
mov
sbb
push
in
adc
xor
and
aas
jp
lahf
sbb
adc
mov
test
inc
bnd
push
in
mov
imulb
out
inc
or
xor
stos
xor
or
loop
imul
xchg
push
xchg
push
push
sub
pusha
popf
inc
je
jno
in
cmpsl
push
cmp
outsl
lds
dec
lret
les
pop
push
xchg
addr16
shl
cs
in
lods
rorl
add
rorl
jmp
ja
jb
adc
lods
addr16
push
addr16
out
pop
test
cmp
mov
inc
lock
sbb
fmuls
fistpll
out
or
cmp
bswap
cmp
push
or
mov
push
xor
pop
daa
inc
fistps
cmp
out
mov
push
fwait
push
popa
adc
idivb
mov
cwtl
or
pop
leave
sub
xchg
into
mov
hlt
push
xor
xchg
dec
mov
dec
sub
dec
imul
cwtl
inc
sub
lea
aaa
mov
add
jne
aad
lock
or
imul
xor
sub
lahf
adc
stc
cmp
aas
mov
ret
push
lods
popa
and
and
js
stos
mov
cmpsb
imulb
cmp
scas
dec
mov
push
jns
jb
hlt
add
sub
mov
test
add
mov
dec
mov
fcomp
adc
xchg
sahf
xlat
es
mov
and
enter
jp
jns
lock
lods
aaa
mov
and
mov
push
jp
push
inc
push
sbb
add
inc
in
push
mov
leave
mov
xor
fbstp
cli
loop
outsb
cmpsb
sti
and
sbb
sub
in
cmp
cmp
push
xchg
int3
imul
lock
lret
mov
inc
bts
xor
bnd
push
nop
dec
sub
cltd
stos
sbb
xchg
push
jle
xchg
lahf
pop
in
std
imul
clc
cmp
sahf
jno
data16
add
mov
ret
clc
cld
imul
test
mov
out
push
pop
jnp
dec
inc
add
adc
or
rcll
cmp
push
outsl
ret
mov
adc
cmpsb
int3
xorb
add
in
and
cmp
xchg
stc
mov
pusha
daa
xchg
ja
jno
dec
inc
cmc
inc
pop
sbb
dec
aad
inc
push
mov
repnz
fs
leave
sbb
imul
pop
add
fldenv
xor
rcr
imul
leave
decl
and
inc
cmp
ja
pop
lahf
inc
movsb
or
sub
addl
jle
les
mov
scas
shl
inc
mov
and
xor
inc
cmp
ret
into
ljmp
push
icebp
adc
push
lret
mov
mov
xor
mov
sbb
or
es
test
and
test
test
into
aas
dec
and
imul
je
jo
test
jae
in
jnp
ja
push
xchg
inc
push
lcall
roll
mov
jns
mov
shlb
and
adc
sahf
mov
ds
xorl
vmptrst
je
xchg
mov
dec
lcall
mov
cmp
aas
lcall
mov
test
xor
roll
imul
mov
in
mov
adc
out
cmp
dec
and
insl
dec
sbb
add
data16
scas
test
mov
or
dec
pop
ds
loope
outsb
jnp
movsb
add
popa
outsl
pop
shll
cmpsl
mov
xor
shl
or
mov
dec
or
inc
rcll
out
outsb
shlb
pop
pop
jle
test
stos
cmpsl
sbb
xchg
and
jle
inc
push
imul
inc
push
cmpsl
ret
jbe
out
gs
popa
sbb
out
mov
cld
cs
and
repz
lods
pop
movsl
fisttpl
push
pop
addr16
xor
nop
add
mov
adc
cmp
and
jg
push
sahf
sbb
cmpsb
int3
popa
push
in
in
lcall
pop
jne
ja
jg
and
orb
and
jne
jo
idivl
jno
sets
pop
nop
int
in
fsubrp
pop
mov
ds
fldenv
pop
push
add
cmc
lahf
mov
aad
inc
mov
or
add
sbb
pop
mov
rcrb
mov
lods
inc
enter
inc
sbb
xchg
outsl
outsl
repz
xchg
inc
shr
in
cmpsl
in
cmpsl
pop
mov
pop
mov
push
sub
data16
sub
xchg
imul
rcrb
xchg
stos
sbb
ficoml
inc
mov
lods
fs
push
xor
jle
or
mov
mov
gs
dec
or
fwait
mov
insl
push
mov
pop
faddp
cltd
cmp
push
lahf
hlt
add
and
push
push
shll
dec
sbbl
inc
and
push
cmp
aaa
scas
push
lea
add
cltd
adc
or
sub
cmpsb
ja
inc
shlb
inc
out
sub
jae
dec
movsl
dec
jo
cmp
in
in
mov
and
jb
sub
stos
pop
sub
lods
adc
imulb
pop
mov
xchg
pop
adc
mov
popf
ja
ljmp
shll
pop
push
outsl
sub
mov
or
fdivr
push
outsl
outsb
mov
inc
pusha
sahf
push
arpl
or
adc
in
bound
jnp
cmp
adc
or
mov
shll
ljmp
out
and
fstpt
mov
jae
cmp
sbb
cmpsl
pop
cmp
outsb
dec
outsb
loop
jge
xchg
sbb
fldcw
sub
adc
pop
pop
or
loop
enter
push
stos
jne,pn
pop
inc
xor
adc
clc
xchg
dec
stos
inc
lods
pop
and
inc
pop
popf
hlt
dec
cld
ror
lods
jecxz
int3
rolb
nop
rorl
fidivrl
pop
movsb
inc
pop
jle
mov
hlt
add
cmp
pop
aaa
sbb
data16
mov
lds
cmp
cltd
and
je
outsb
xor
pop
faddl
mov
ret
ja
je
xchg
pop
repnz
xor
mov
push
adc
sbb
lcall
cmp
mov
push
push
popf
loopne
push
imul
test
add
hlt
cmp
sbb
pusha
mov
jo
std
enter
test
ror
cmp
inc
mov
inc
mov
xor
pop
test
fs
mov
mov
jg
cs
fcoml
loop
repz
mov
divl
enter
mov
cmp
or
pop
fdiv
pop
jge
rorb
inc
mov
shl
sub
or
int
shlb
mov
add
repnz
push
push
scas
nop
cltd
or
loop
xchg
pop
jmp
sbb
icebp
out
mov
call
in
das
loope
cmpsb
mov
sbb
scas
jmp
scas
ret
fdivrl
sub
cltd
cltd
pop
mov
cli
sbb
push
sbb
cmp
fwait
lret
roll
sbb
sbb
aas
mov
movb
xlat
inc
movsl
sbb
or
lcall
out
jp
jecxz
xchg
xchg
js
cmp
cld
and
xchg
enter
ss
daa
add
je
shr
ja
jle
les
sub
lret
pop
shl
jae
pop
xor
mov
jg
data16
movsb
push
mov
test
mov
dec
dec
xlat
clc
and
mov
lods
push
inc
cli
sub
mov
stos
dec
add
push
fsts
gs
jp
in
out
jo
pop
xlat
and
mov
scas
push
data16
stos
sbb
jg
add
xchg
jne
popa
pop
xchg
push
cwtl
movsl
test
inc
scas
std
movsb
mov
sub
sbb
test
cmp
jbe
xchg
vphsubwd
inc
pop
icebp
push
pop
mov
je
pop
lret
es
pop
jb
ret
hlt
stos
imul
test
lcall
xchg
popa
jns
cmp
cmpsb
fwait
sbb
cmpb
xchg
xor
lahf
inc
adcb
fistps
sti
sbb
mov
mov
ds
xchg
xor
loop
je
push
xor
cltd
sub
push
mov
mov
xor
rcll
jbe
dec
adc
loope
push
jb
stos
xchg
push
addr16
repnz
jge
hlt
cmp
or
jno
idiv
mov
cmp
push
jle
fildll
xchg
nop
mov
insl
stos
lods
outsb
je
cmp
pop
stos
lock
pop
or
into
sbb
sub
pop
xlat
lea
push
push
scas
inc
mov
xor
push
orl
mov
fmul
jl
push
in
xchg
mov
push
icebp
scas
xor
iret
xor
and
fldenv
std
nop
jnp
movsl
repnz
jmp
pop
pcmpgtw
pop
inc
lahf
arpl
sub
jecxz
inc
shlb
push
xchg
push
subl
and
lock
cmpsl
xchg
mov
jg
add
add
xor
inc
push
js
cltd
xor
and
les
sahf
jns
je
cmp
pop
xchg
call
pop
mov
pop
nop
mov
outsl
data16
xor
jbe
pop
and
jg
inc
ljmp
and
dec
fsubrs
xlat
mov
sbb
pop
mov
mov
push
repz
push
orl
sbb
pop
mov
inc
push
dec
sub
mov
or
push
pop
into
and
push
pop
xchg
xchg
sub
pop
faddl
iret
pop
jns
adcb
inc
cld
adc
insb
dec
fsubl
dec
stc
call
std
out
testl
sbb
pusha
repz
cmp
sarl
movsl
xchg
mov
popa
inc
add
aam
sbb
ret
add
jp
mov
sbb
or
cs
xchg
fisttpll
scas
sub
addr16
ffreep
mov
nop
loopne
imul
jbe
jge
mov
cmpsb
mov
push
icebp
les
inc
sarb
or
js
push
aam
add
sbb
das
add
pushf
inc
aam
aas
das
std
int
icebp
xchg
into
repz
mov
mov
mov
sub
shl
icebp
shr
adc
out
fsqrt
adc
xchg
inc
int3
add
xlat
insl
not
cltd
pusha
into
cli
cld
push
add
ret
mov
add
pusha
das
dec
push
gs
and
outsb
cmp
sbb
rorl
or
pop
les
aam
fwait
push
adc
aam
dec
das
push
mov
orb
sbb
jge
xchg
cld
add
mov
xchg
aas
xchg
outsb
xlat
jbe
test
xor
int
add
in
inc
ljmp
dec
xlat
xchg
mov
jns
fldl
in
push
pop
fbld
lea
jp
push
pushf
leave
xchg
inc
mov
gs
jno
xor
push
insl
add
repz
inc
jle
rol
and
std
orb
out
sub
ljmp
pushf
daa
sti
xor
push
decl
pop
push
nop
or
ret
fstpl
lcall
jecxz
pop
rclb
popa
mov
ret
sub
scas
pop
cmp
sbb
add
shl
xor
pushf
or
mov
popa
in
stc
mov
dec
dec
mov
and
ret
adc
test
daa
ljmp
lods
jl
popf
pusha
vpcmov
pop
or
or
mov
push
fs
mov
outsb
pusha
faddl
jl
mov
arpl
enter
outsl
rorl
push
mov
repnz
arpl
movsb
and
test
aam
xchg
add
dec
mov
subl
inc
xchg
fcomps
dec
jmp
jb
cmp
roll
jo
push
mov
xchg
lahf
inc
out
push
ja
fdivp
gs
ja
ret
and
mov
gs
and
xchg
lret
jae
mov
cwtl
cmp
div
jge
mov
mov
cmpsl
add
popf
jb
stos
add
iret
xlat
mov
and
testb
pop
push
test
and
or
stos
adc
data16
sbb
sub
adc
xchg
clc
push
loop
imul
int3
dec
les
add
lret
jmp
pop
inc
mov
sbb
test
dec
pop
mov
icebp
push
jge
inc
xchg
nop
xchg
add
cltd
test
test
mov
push
jecxz
aad
push
dec
mov
cmp
pop
sbb
mov
mov
pushf
dec
imul
inc
repnz
sbb
mov
mov
clc
xchg
icebp
js
mov
out
enter
sti
sub
adc
mov
pop
sub
ret
movsb
sub
adc
sbb
cmp
out
out
and
into
inc
lods
leave
loop
inc
loope
popa
xchg
push
arpl
sub
icebp
bound
mov
or
jl
xchg
addr16
mov
out
repz
sbb
jbe
out
inc
or
sbbb
dec
scas
rorl
loope
cmp
daa
out
ja
sub
jno
mov
mov
mov
sub
inc
imul
fs
sub
push
mov
xchg
fisttps
movsl
adc
out
cmp
test
ja
int
dec
add
test
test
cltd
popa
add
loop
sub
jbe
dec
arpl
daa
xchg
pop
hlt
icebp
jl
test
outsl
add
lcall
lods
roll
jnp
inc
pop
cmp
add
cli
mov
fdivr
and
xchg
push
xchg
mov
test
sti
cld
mov
pop
pushf
pop
jl
mov
sbb
push
pop
nop
push
lds
call
stc
int3
push
stc
insl
and
test
add
popf
test
sub
jae
es
pop
push
cwtl
je
movsl
mov
loopne
inc
enter
loopne
mov
xlat
data16
lock
dec
mov
pop
mov
popa
mov
shll
call
add
lods
pop
stc
rorl
mov
pop
mov
mov
into
sbb
fcoms
mov
nop
add
cmp
cli
mov
dec
stc
in
mov
sub
data16
imul
lds
and
dec
lea
sub
movsb
inc
dec
movsl
lret
addl
and
jns
or
push
push
lods
pop
cwtl
in
fmul
xor
dec
stos
scas
dec
icebp
cmpsb
lods
dec
pop
sub
clc
adc
popf
lea
adc
jge
pop
inc
loope
jns
call
cmpsb
addl
mov
push
mov
pop
jne
test
lods
xor
repnz
inc
jmp
dec
push
push
pop
dec
adc
mov
mov
ss
scas
ret
sub
bnd
test
out
in
jecxz
jnp
lahf
mov
pop
test
mov
push
cwtl
cmp
outsb
add
clc
fwait
mov
jno
xchg
icebp
sbb
sub
or
or
and
xor
push
sbb
adc
jnp
xchg
mov
in
and
lret
push
xor
cmp
pop
or
inc
mov
arpl
cltd
dec
push
jb
or
mov
cmp
sub
shrl
cld
fldl
iret
mov
or
shlb
mov
or
jge
mov
je
sub
andl
jae
mov
sub
sub
adc
mov
lret
jmp
test
xor
inc
pop
pop
lods
nop
mov
repz
adc
jg
jb
inc
xor
push
insb
iret
mov
xchg
mov
ljmp
push
mov
inc
mov
pop
adc
mov
jg
dec
ja
int
sti
insl
test
xor
jne
xor
outsb
lds
mov
das
jg
mov
fcomi
into
cli
retw
xchg
lods
cmc
fwait
ret
push
pusha
add
pop
push
push
push
insb
pop
mov
fwait
loopne
jnp
test
dec
loopne
mov
stos
cli
xor
add
fisubrl
and
scas
scas
es
add
int
add
lock
sbb
mov
std
out
aam
cmpsl
pushl
pop
xchg
xchg
outsl
scas
dec
jno
xchg
clc
negb
mov
xor
jg
lods
mov
xlat
sbb
sub
xchg
pop
add
push
xor
mov
jl
and
movsb
ret
int3
imul
lea
xchg
cwtl
es
mull
xchg
into
repz
pop
jmp
call
stc
sbb
je
add
cmp
shlb
mov
and
or
pusha
ror
imul
xchg
pop
outsl
insb
cmp
cld
mov
sub
cmp
inc
fidivl
addl
cmpsb
push
ljmp
iret
xchg
out
lea
jo
mov
jbe
mov
movsl
movsb
dec
push
fldz
add
test
or
bound
cmp
dec
xchg
mov
xorl
incb
lret
xor
inc
outsb
mov
popa
dec
xchg
cli
lret
vpmacsdd
lds
mov
and
loope
mov
std
inc
fisubrl
xor
push
jbe
in
or
imul
adc
or
and
adc
push
inc
adc
scas
enter
xchg
lods
sub
mov
movsl
xchg
push
mov
xchg
fsubs
test
in
dec
sub
inc
dec
pop
adc
stc
adc
xlat
out
push
jne
gs
mov
popa
sub
das
movsb
fcompl
aam
lret
dec
mov
mov
push
aaa
mov
push
and
adc
sbb
cmp
sbb
xchg
or
or
insl
rorb
xor
push
push
mov
push
es
dec
xchg
mov
aam
les
sub
push
xchg
xchg
int3
dec
fbld
mov
push
lret
and
add
in
in
jne
ret
pop
lock
inc
xor
push
add
jp
shl
xor
sbbl
ffree
pushf
push
imul
call
xor
sub
cli
xor
or
sub
orb
mov
mov
cmp
lret
stos
push
xchg
jns
sbb
mov
jns
add
inc
adc
jp
fcompl
cld
xor
push
cwtl
inc
jg
cmp
sbb
stc
sbb
xor
iret
jnp
aam
es
inc
movb
jmp
fwait
test
hlt
xchg
pop
pop
leave
aaa
sbb
sarb
push
scas
lock
add
mov
inc
scas
pushl
ret
sbb
dec
jno
scas
mov
or
pushf
insb
push
mov
clc
cmc
mov
and
fwait
dec
cmp
into
sub
mov
orb
inc
arpl
les
xor
dec
mov
and
stos
xlat
or
and
adc
add
in
in
andl
jne
jp
cmp
int3
inc
sbb
test
xor
mov
loopne
je
jbe
fcoml
jno
add
cmp
add
orb
shrl
add
jle
dec
inc
ret
and
dec
ret
xor
adc
insb
sti
dec
xchg
cmp
test
jge
push
mov
inc
push
ret
push
cmp
mov
clc
mov
inc
mov
xor
int3
jns
pusha
icebp
cmpsb
scas
pop
xor
mov
mov
jo
sub
cmp
fs
jl
push
push
cmc
decb
mov
orl
dec
sahf
pop
les
pop
test
pop
out
hlt
mov
out
lret
pushf
cli
inc
popf
fs
xchg
xor
inc
imul
lods
or
mov
cmp
cmp
inc
and
es
dec
fstl
dec
outsl
mov
daa
xchg
xorb
es
ficoml
xchg
and
jne
sarl
ja
adcb
push
clc
ss
and
add
cld
jbe
or
fistl
adc
cmpsb
dec
push
mov
cltd
ljmp
mov
fiadds
inc
mov
out
scas
sbb
cmp
add
and
mov
push
jbe
nop
je
in
mov
jecxz
xor
sbb
mov
xchg
xchg
dec
out
int
xchg
mov
pop
dec
daa
sub
fst
rcrb
xorb
inc
bnd
pop
cmp
pop
add
pop
dec
nop
sub
inc
into
jns
out
xor
divps
jae
imul
or
outsl
and
loope
outsb
cli
int
push
and
mov
mov
push
mov
lods
xor
jmp
repz
das
scas
aas
movsb
and
pop
and
push
jne
out
mov
movsb
mov
shl
aad
xchg
cwtl
xchg
jl
fs
andl
icebp
mov
sub
outsb
push
sub
inc
clc
pushf
js
lods
add
push
imul
outsb
pop
fwait
xor
adc
cli
inc
cwtl
xchg
sub
je
lcall
or
int
jne
imul
push
add
not
fldenv
stos
xchg
cmp
sbb
imul
sbb
mov
or
fcmovnu
push
sub
xor
cmp
add
movsl
and
and
test
ljmp
cmp
cmc
nop
movsb
mov
smsw
ja
addr16
stos
jp
fcompl
sarb
mov
sbb
cld
mov
push
sbb
adc
lock
mov
pop
push
sbbb
adc
scas
std
jmp
test
insl
imul
and
into
push
sub
jl
loopne
lret
fisttps
nop
cmc
cs
mov
ret
mov
dec
stos
movsl
cmc
inc
pop
sbb
mov
cmpsb
fisttpl
and
mov
push
and
test
xchg
nop
or
mov
popf
aad
call
push
ljmp
ljmp
sbb
in
pop
add
mov
int
ret
mov
ficoms
or
scas
xor
and
pop
mov
push
cli
add
fucomip
std
icebp
cmp
jno
mov
mov
js
adc
inc
rol
sbb
mov
inc
mov
pop
mov
jne
mov
cmpsl
dec
pop
scas
mov
add
xor
pop
push
mov
add
mov
outsb
or
sub
inc
repz
aaa
je
ja
insb
mov
roll
inc
mov
insl
dec
cwtl
cmp
ja
inc
sbb
or
popf
xlat
mov
cmp
and
cwtl
push
and
and
mov
xchg
clc
popf
ret
push
int
hlt
xor
gs
push
push
lea
sbb
cmpb
into
cmp
jge
push
fisubs
cmp
inc
mov
sub
out
jg
movsl
out
mov
mov
or
aas
and
dec
jne
jp
aas
sub
dec
xchg
stos
adc
rcrb
in
mov
adc
dec
cmp
push
mov
das
pop
leave
dec
fwait
jns
insb
pop
jle
jae
pinsrw
fdivr
pop
stos
inc
mov
leave
fstpl
add
gs
adc
outsl
xchg
mov
out
ds
push
sbb
mov
mov
dec
outsb
aam
iret
cltd
mov
aas
and
jb
int
daa
decl
dec
leave
mov
fcoml
loop
mov
dec
sbb
sub
push
pop
clc
out
fnstsw
out
mov
jle
or
pop
shlb
xor
pop
stos
push
enter
xor
xor
sub
hlt
hlt
adc
push
adc
jne
loope
mov
fucomi
jp
popf
pusha
jae
in
jbe
sub
outsl
jbe
adc
xchg
adc
shrl
jne
test
xor
lret
or
sahf
stos
std
shl
cmp
dec
addr16
pop
sbb
adc
and
int3
cmp
fwait
push
in
xchg
xchg
lods
adc
mov
jl
mov
and
imul
bound
push
mul
insl
inc
mov
lods
fnstsw
jb,pn
mov
sbb
in
je
pushf
add
movsl
scas
fstpl
mov
rcr
push
fists
jp
or
sbb
dec
dec
ficompl
jno
and
jg
xchg
inc
das
push
mov
loopne
addr16
xchg
mulb
pop
adc
dec
or
hlt
cmc
dec
xchg
movsl
mov
ja
rcll
or
mov
mov
lock
dec
sub
or
cld
push
das
mov
insb
mov
or
ss
daa
testl
fcomi
out
xor
popa
aaa
enter
lret
mov
pop
or
imul
stc
addr16
mov
out
imul
or
std
punpckldq
in
roll
jmp
out
insb
cmp
adc
fsts
data16
inc
cltd
xor
sbb
outsb
or
test
pop
dec
dec
adc
jmp
add
xchg
or
pop
inc
add
mov
or
pop
mov
pop
lret
rorb
in
jns
and
out
push
xchg
sbb
sbb
push
push
std
mov
repz
push
sub
stos
insl
rcll
movsl
aaa
ss
fsts
or
xor
push
pmulhw
mov
sbbb
scas
sub
lcall
ss
repz
mov
adc
das
std
les
test
sub
xchg
mov
or
test
push
dec
in
sbb
inc
jp
ss
mov
cmpsl
dec
hlt
ror
ds
or
rcrl
dec
mov
add
fldt
stc
cli
leave
in
test
stos
fsubrs
ds
in
or
imul
inc
adc
cmpsl
sub
or
je
in
xchg
int3
sbb
inc
test
sub
xchg
es
mov
test
icebp
dec
mov
pop
loopne
mov
sbb
rol
je
bound
xchg
adc
imul
outsb
pop
cmp
out
pop
inc
xor
test
lret
negb
stos
orl
jne
cmp
xor
add
adc
dec
xor
and
cmp
testl
lock
push
insb
dec
lcall
fimuls
shll
add
xchg
int
add
cld
cs
js,pt
incl
push
or
fstpl
dec
jb
subl
aas
ss
or
adc
sbb
nop
mov
push
and
data16
jmp
lods
cli
outsb
push
clc
lret
shlb
lods
out
push
jae
push
nop
cmp
jb
pop
fcomps
pop
adc
lret
pop
cli
adc
popa
mov
shlb
das
or
jecxz
sbb
push
out
adc
or
sub
popa
pop
orl
dec
loop
test
jmp
xor
lods
mov
push
pop
jb
mov
push
push
add
mov
jp
and
mov
stos
cmp
ja
scas
imul
push
and
outsl
or
jle
or
cmp
fwait
or
lahf
fdivr
push
int
shll
andl
mov
mov
xor
add
jne
lock
jmp
dec
mov
stos
add
fcoml
into
loope
mov
mov
data16
mov
xor
scas
ret
add
and
lahf
jle
ds
stos
mov
lcall
addr16
aas
lds
ja
sub
ret
inc
add
hlt
sub
aam
push
or
ret
mov
clc
sub
push
daa
leave
push
cs
pusha
dec
xchg
jb
pop
jne
inc
dec
nop
pop
cmp
pop
sub
rep
decb
or
pop
dec
cld
leave
mov
dec
stos
popf
push
jnp
cmpsb
xor
out
arpl
rolb
cwtl
orl
outsl
cmpl
lcall
inc
mov
lods
sarb
adc
jb
xor
xor
aad
pop
ret
aas
and
in
fsubrl
data16
fcmovnbe
add
sahf
add
aad
cltd
lret
stos
fisttpll
shlb
mov
stc
popa
mull
mov
sbb
aaa
and
mov
add
mov
mov
cmp
int3
pop
loope
dec
movq
pop
adc
iret
adc
push
roll
or
daa
ss
dec
mov
shll
mov
jg
addr16
repnz
pause
out
lds
and
jg
dec
and
mov
push
cld
sbb
outsb
pop
pop
push
mull
in
aam
fidivs
loop,pn
push
ret
test
leave
sub
imul
aad
es
shll
mov
fldenv
rorb
push
mov
add
xor
push
in
aaa
not
loop
inc
mov
das
pushf
cmpsb
xchg
aad
mov
test
xor
add
adcl
fucompp
sub
inc
rcr
add
sbb
cli
cli
iret
or
pusha
and
cmp
add
call
mov
mov
adc
int
mov
cld
fs
jae
mov
mov
and
mov
dec
incb
xor
or
je
je
mov
pusha
or
bound
push
rol
lret
popa
sbb
inc
add
xchg
and
notl
loop
add
sahf
fs
out
shll
lret
fs
stc
imul
sti
or
lret
insl
loope
inc
pushf
cmpsb
aad
pop
mov
inc
in
popa
or
ficomps
and
mov
or
xor
insb
jns
jecxz
push
push
push
push
out
lahf
mov
adc
pop
mov
popa
enter
outsb
ret
out
cmp
sbb
adc
jo
enter
cmpsl
jmp
ret
shr
lret
sub
jb
mov
into
mov
pop
xchg
inc
adc
mov
out
outsl
pop
repz
call
dec
inc
mov
cmp
dec
lods
out
xor
mov
in
lret
and
pop
adc
xor
ja
je
lds
cmp
sub
mov
leave
cmpb
add
mov
aas
push
sbb
js
mov
sbb
jnp
inc
inc
mov
adc
push
jmp
xchg
jp
mov
fisubs
xchg
daa
imul
nop
arpl
push
outsb
stos
mov
xchg
pop
xor
loop
pop
pop
inc
enter
pop
or
cs
imul
xor
jo
jns
pop
pop
bound
stos
insl
iret
push
sti
or
nop
rol
pusha
negl
push
and
or
pop
mov
cmp
xchg
mov
pop
test
add
or
aas
dec
das
xchg
popa
or
add
iret
faddl
adc
popf
pop
sbb
xor
call
xchg
dec
push
sahf
