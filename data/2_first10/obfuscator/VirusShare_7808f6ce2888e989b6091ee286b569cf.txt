push
call
ret
ret
fstpl
or
shrl
adc
stc
mov
fcomps
push
mov
pop
int
pop
testb
aaa
mov
jo
jno
loop
lret
arpl
insb
jno
sub
or
clc
push
loop
ret
and
sub
mov
das
adc
and
push
xchg
xchg
jg
loopne
inc
ror
push
pusha
sub
movsl
mov
xor
push
sub
mov
imul
and
xchg
xor
dec
cmp
sarb
cmp
and
push
gs
mov
dec
adc
cmp
ret
cmp
cmc
scas
subl
mov
add
out
cmpsl
mov
adc
xchg
fildl
cmp
nop
mov
ds
repnz
pusha
or
push
dec
push
mov
adc
mov
fsubl
mov
mov
jae
push
cltd
dec
mov
repz
clc
imul
gs
insl
add
adc
mov
bound
test
out
pushf
xchg
pop
pusha
in
mov
iret
ret
ret
mov
stc
iret
ds
cmpsl
pop
outsb
rolb
jne
push
adc
lds
sbb
xchg
fsubrl
cmp
stos
subb
dec
mov
incl
push
lea
cmp
adc
rcrb
cmp
push
in
jl
aam
stos
or
push
mov
jge
inc
stos
mov
stos
mov
push
gs
mov
adc
loopne
dec
mov
rclb
ljmp
inc
inc
inc
pop
test
aaa
jmp
and
ret
std
pop
adc
fldenv
pop
fcom
sbb
inc
dec
sbb
sub
je
cmp
dec
fdivr
mov
sub
daa
cmc
or
xor
js
dec
push
push
or
in
xchg
sti
xor
jg
push
lret
shll
popa
inc
scas
pop
aam
cltd
test
inc
in
mov
push
sbb
inc
mov
sbbb
or
pop
mov
or
sti
and
ss
sbb
clc
adc
push
fsts
stc
addr16
insl
push
jecxz
loope
test
jge
sub
cwtl
sbb
ja
das
jnp
lock
dec
xchg
adc
mov
inc
sub
xor
loope
push
sbb
dec
xor
cs
inc
fisttps
or
and
pop
pop
sbb
and
pop
stc
or
mov
in
ja
dec
push
popa
test
xchg
shll
xchg
add
shll
cltd
int
cmc
scas
clc
pop
xor
fisttpll
rol
push
pop
adc
rcll
mov
xlat
ret
cltd
mov
pop
out
jne
cmp
cmp
cmp
std
pop
push
lret
sbb
xchg
sar
ret
movsb
mov
call
sbb
ja
mov
inc
loopne
adc
in
insb
outsl
xor
rcll
jnp
mov
fdivl
push
hlt
hlt
mov
push
and
mov
mov
pop
insl
outsb
xchg
lods
sti
gs
bnd
insb
mov
dec
mov
das
fmulp
in
imul
mov
sub
es
xorb
push
in
mov
and
lods
xchg
push
lds
sbb
inc
pusha
add
insb
ret
hlt
cli
push
jns
add
sub
jo
in
lahf
cmpsl
shll
adc
push
pop
test
js
xchg
imul
dec
sub
mov
push
insl
adc
testl
ja
xchg
js
sub
aad
insb
pop
xor
repz
pop
dec
movsl
test
mov
sti
imul
xchg
cmp
cmp
cmp
mov
loope
hlt
stos
call
mov
pusha
cmp
in
mov
push
sbb
mov
cs
dec
sub
cwtl
mov
jp
cld
push
xor
aaa
out
ljmp
push
and
ficompl
out
dec
cmp
mov
cld
fmuls
mov
pop
mov
movsl
inc
add
lods
fs
mov
jne
push
mov
out
sub
xchg
sub
add
loop
test
dec
sbb
jl
mov
into
jns
sub
outsb
fiadds
ljmp
frstor
sahf
in
repnz
mov
xchg
xorb
or
xchg
aas
stos
in
mov
cmc
and
idivb
out
scas
pop
insl
in
and
xor
adc
sbbl
or
pop
push
xchg
mov
and
iret
sbb
fdiv
jae
leave
xor
test
push
dec
enter
ret
incl
jl
test
lahf
hlt
cwtl
cmp
stc
fdivr
dec
loopne
inc
inc
fdiv
mov
and
shlb
pusha
ud0
icebp
xor
cs
mov
cmp
aas
and
push
dec
scas
sbbl
dec
lods
repz
sbb
adc
mov
cs
mov
push
adc
inc
inc
mulb
cld
mov
or
mov
hlt
into
xor
add
dec
inc
into
mov
imul
mov
jle
subl
jge
add
ljmp
cmc
cmp
mov
loope
dec
mov
jno
jge
inc
add
sbb
adc
and
or
nop
aam
push
inc
cltd
sub
cmp
ljmp
out
enter
sbb
imul
dec
in
and
mov
add
icebp
pop
daa
scas
ds
andl
adc
mov
and
push
daa
nop
jmp
das
in
mov
xor
shrl
cmp
cmp
or
add
inc
lret
jno
inc
mov
aam
sbb
dec
mov
sahf
xchg
scas
inc
sbb
test
and
jl
xchg
jge
pop
ja
xor
jle
push
adc
aam
jecxz
push
cmp
add
and
mov
mov
ds
repz
cmp
sub
xor
pop
dec
popf
sahf
cmp
aaa
out
sbb
popa
add
mov
fidivs
add
arpl
mov
sub
push
lods
jge
cmp
push
ror
add
fistl
scas
mov
das
inc
inc
adc
popa
and
sub
push
iret
out
push
gs
fisubl
xor
dec
mov
js
leave
fistpl
xlat
mov
clc
lret
pushf
push
popa
inc
sbb
mov
or
xchg
int
sbb
mov
imul
adc
mov
xchg
push
js
xchg
std
in
pop
rcl
aad
mov
push
ret
xor
sbb
clc
mov
and
int3
pusha
adc
hlt
lods
push
adc
sbb
dec
mov
push
pushf
cmp
in
ljmp
add
popf
mov
pop
rolb
and
xor
lret
sub
pushf
pop
movsl
repnz
mov
rcl
push
pop
shr
cmp
sarl
xor
test
push
inc
dec
bswap
andl
out
xor
adc
dec
inc
addr16
call
mov
jge
sub
outsb
xor
lret
jns
bnd
pop
jle
data16
enter
cmpsl
xchg
push
push
push
mov
gs
sub
dec
mov
push
call
and
gs
xchg
and
mov
andl
hlt
inc
lods
es
inc
mov
repnz
iret
add
sbb
and
lcall
pop
mov
xchg
mov
loop
enter
sar
and
mov
jmp
test
or
int
fistl
add
int
xchg
nop
lock
jb
cmp
cmpsb
xchg
mov
mov
jmp
mov
push
dec
mov
and
call
andb
std
in
mov
es
and
sbb
icebp
imulb
in
aaa
jbe
jo
xor
adc
adc
xor
adc
rcll
ficoms
inc
lea
mov
scas
lock
jge
jne
lock
dec
jb
aaa
orl
jae
sub
into
movsl
rcrb
inc
mov
add
pop
fnstcw
adc
add
cmpsl
sbbl
add
push
adc
xchg
loopne
jecxz
and
lods
push
xchg
xlat
pop
cld
test
mov
xlat
jno
dec
leave
sbb
push
jp
jg
mov
sub
mov
sbb
jecxz
orl
or
mov
pop
ffreep
mov
adcb
pop
sub
aas
arpl
in
out
jne
loop
xchg
jae
adc
dec
mov
xor
jnp
push
dec
xor
cltd
xchg
cmp
pop
jge
or
or
sarl
fmuls
dec
add
sub
loop
sbb
aaa
mov
and
mov
inc
scas
in
mov
jno
mulb
sub
adc
cltd
insb
pop
fldt
dec
test
insl
adcb
dec
ja
mov
in
mov
sbb
and
insb
or
xor
mov
push
test
jo
movsb
dec
shl
cmp
inc
iret
in
sbb
dec
mov
outsb
mov
popa
jo
lock
fwait
insl
push
daa
sbb
mov
push
sahf
xor
in
arpl
pusha
cmp
icebp
or
pop
add
pop
push
ds
loope
mov
enter
movsl
push
sub
lods
faddp
scas
sarb
data16
lods
or
mov
mov
cld
js
addl
out
push
pusha
dec
pop
ret
add
mov
pushf
fisubl
ret
jae
adc
xor
subb
pop
call
out
in
ret
hlt
hlt
enter
mov
int3
fisttpl
cmp
orb
mov
push
or
and
sub
push
fs
cmpsl
pop
xchg
fsubrs
mov
fnclex
imul
xchg
aaa
cltd
in
adc
mov
push
mov
inc
dec
push
lahf
xchg
cld
pop
sbb
sub
mov
jne
in
arpl
or
int
outsl
popa
out
cmp
pop
fs
xor
sbbl
sbb
xlat
fdiv
dec
pop
loopne
xor
mov
pop
jge
and
add
lcall
ss
inc
push
fidivrs
call
dec
pop
cmp
xchg
sub
outsl
push
jle
js
roll
jns
cltd
push
sub
lret
and
insl
pop
ljmp
sbb
pop
cmp
scas
dec
cmpsb
mov
aas
fistl
jp
xchg
xor
cmpsb
push
scas
stos
out
inc
dec
cli
mov
inc
shrl
mov
insl
iret
outsb
test
loope
and
mov
clc
sti
aad
pop
and
push
jp
lods
out
mov
mov
filds
xor
repz
imul
sahf
mov
roll
cs
xchg
ljmp
jmp
test
aas
sub
sub
mov
add
and
ss
lea
idivl
fwait
repnz
cld
dec
or
rol
dec
outsl
xor
sahf
adc
sbb
add
xchg
das
pop
lods
jecxz
lock
mov
xchg
and
in
xchg
jne
jl
mov
add
sahf
sub
push
or
test
sub
filds
ret
int3
cmp
lcall
pop
shll
mov
enter
sbb
fwait
sbb
cmpsl
or
cwtl
sbb
add
hlt
sbb
stos
les
imul
cmp
push
sub
sahf
lret
gs
nop
in
test
testb
push
mov
cmpsl
int3
shr
adc
xadd
xchg
pop
jbe
mov
cmp
jmp
xchg
sub
clc
nop
insb
shl
cmc
inc
xchg
cs
int
push
shlb
aad
jbe
out
pushf
cltd
jmp
dec
xor
imul
mov
push
movsl
test
loope
cmpsl
ss
mov
jbe
sbb
adc
jmp
mov
jbe
sub
push
adc
mov
cmp
dec
dec
jl
pop
mov
iret
fsubl
out
out
pop
adc
and
pusha
sti
stos
andb
adc
das
mov
fidivrl
push
faddl
jns
mov
adc
std
mov
inc
clc
jnp
mov
mov
daa
mov
rcl
mov
mov
fidivrs
xchg
or
and
les
add
dec
cld
pop
mov
inc
shr
stc
and
clc
and
add
fstps
imul
rorl
mov
ljmp
js
add
mov
inc
movsb
jno
jns
jae
jae
clc
mov
popf
cmpsl
mov
filds
shrb
xchg
repz
xor
mov
ljmp
je
scas
aad
jbe
xor
push
fs
xchg
jp
sbb
loope
loopne
jne
xchg
pop
mov
comiss
mov
mov
notl
mov
adc
mov
stc
jle
dec
test
leave
adc
addb
imul
mov
outsl
jecxz
lret
inc
push
push
lds
mov
pop
pop
jbe
add
test
movsl
xchg
mov
and
or
jae
mov
aam
sub
das
mov
or
cmp
push
test
and
cli
lods
fnstsw
sub
test
push
pop
mov
pop
mov
and
xor
or
pushf
mov
clc
pop
sub
out
cs
test
addb
sub
sbb
add
mov
iret
dec
jnp
mov
add
inc
popf
jecxz
out
rorl
adc
mov
push
pusha
hlt
mov
mov
test
clc
xor
or
mov
mov
cmpl
push
add
data16
mov
ja
mov
lods
sub
nop
pop
cmp
out
shl
xchg
jb
fisubs
lea
pop
fildl
insl
inc
xchg
add
fidivrs
dec
fcompl
push
lods
hlt
add
idivl
jge
int
adc
cld
sub
js
repz
je
fisubs
imul
movsl
dec
mov
imul
dec
jecxz
aam
add
scas
sbb
out
mov
adc
testb
xchg
pusha
mov
and
test
add
inc
scas
mov
lods
push
sub
out
mov
cmpsl
inc
and
aam
mulb
xor
scas
stos
pop
sbb
out
das
hlt
sbbb
lds
test
xchg
mov
ror
xor
mov
pop
sub
mov
push
shr
fimuls
push
das
xchg
mov
inc
adc
or
cmp
mov
out
mov
dec
sub
pop
mov
jle
jns
sarl
clc
out
lret
leave
andl
sub
sub
mov
jl
gs
sbb
cmpsb
dec
addr16
jns
ds
lock
mov
adc
ljmp
adc
xchg
push
mov
mov
pop
out
cmp
xchg
roll
lea
adc
scas
mov
jbe
rclb
cltd
pop
sub
sub
dec
xlat
clc
or
movsl
sbb
add
jmp
mov
aas
lds
mov
incb
or
and
rclb
stos
jne
fsub
jne
adc
push
jmp
aad
imul
xchg
and
dec
lods
js
aad
xor
push
stos
mov
mov
adc
fmuls
fildll
xor
jo
cmp
and
add
xchg
lods
cmp
sarb
cs
or
cmpsb
daa
cmpsb
xchg
pop
add
rcl
in
jl
scas
leave
jne
jae
arpl
jnp
mov
cmp
iret
fs
jbe
push
loope
int
xor
movzwl
pop
push
cli
fdiv
imul
cmp
jecxz
aaa
pop
fstpl
test
sbbl
or
sbb
xchg
loopne
fsubrs
punpckhbw
leave
ss
push
sbb
nop
push
out
scas
in
hlt
and
and
inc
xchg
imul
mov
mov
sbb
mov
jo
mov
arpl
push
xor
cmp
out
or
fmuls
sbb
stc
in
movsb
enter
mov
inc
pop
mov
xor
add
mov
enter
mov
xor
sub
sarb
stos
and
rcrl
popa
mov
mov
push
mov
sahf
adc
jae
xor
es
push
jle
out
aam
dec
inc
or
lsl
call
cmpsl
xorl
out
mov
testb
mov
sub
dec
adc
jmp
scas
xor
sub
mov
jae
loope
mov
sbb
push
lods
js
mov
test
cmp
fwait
add
pop
in
jge
insl
aas
mov
sbb
mov
movsb
cwtl
or
or
or
and
push
mov
mov
sti
push
jb
mov
je
jle
jle
shrl
pop
sub
push
bound
adc
or
pop
push
shrb
mov
jns
movsb
mov
mov
push
or
push
mov
jbe
mov
cli
rcrl
fnstcw
sub
mov
fisubrl
sub
ss
push
int3
lret
jp
pop
int
sub
out
xlat
xor
lret
js
fdiv
imul
push
frstor
cmp
std
mov
mov
in
add
mov
xchg
jmp
add
jns
dec
arpl
hlt
and
jg
or
jecxz
lahf
scas
fsubrp
std
nop
mov
pop
roll
xor
shl
loope
lcall
pop
xchg
retw
adc
hlt
in
jp
add
fldln2
repz
or
imul
outsb
xor
xchg
jecxz
xchg
jae
add
jae
inc
js
pop
push
divb
push
and
add
test
jb
es
cmp
js
cltd
xchg
jns
lcall
push
cmp
aad
xchg
mov
pop
pop
sub
jnp
js
adc
push
inc
jb
jmp
adc
push
add
fcom
movsb
fdiv
popf
pop
pop
sbb
scas
es
loop
mov
lahf
inc
xor
stos
and
scas
jecxz
cmpsl
int
push
dec
pop
pop
mov
testl
cmp
jmp
add
inc
fstpl
sub
push
outsl
push
adc
jbe
inc
ljmp
fsubs
sub
imul
cs
xchg
sub
out
and
sbb
inc
outsb
bound
xor
sub
jle
sarl
jnp
pop
mov
jbe
add
sbb
mov
test
loop
jle
cs
addb
mov
mov
ret
pop
push
pushf
push
jnp
push
sahf
xchg
push
insb
jne
push
dec
add
popa
sbb
lret
mov
add
sbb
push
inc
arpl
mov
lcall
xlat
loop
pop
clc
push
mov
and
std
add
rcrl
mov
clc
inc
rcrb
jae
push
xchg
iret
into
or
cwtl
push
sti
mov
insl
sbb
mov
sub
add
mov
pop
xor
xchg
push
sarl
push
out
mov
aas
lahf
mov
cltd
in
xchg
fidivrl
inc
les
lret
out
xor
hlt
adc
push
sub
add
sbb
mov
or
fdivs
lahf
mov
sub
mov
xchg
in
lcall
pop
or
jmp
mov
lods
adc
dec
pop
stc
add
dec
lahf
lods
outsl
cmp
push
lds
jb
addl
mov
jae
xor
lret
xor
xor
inc
push
cvtps2pd
pop
mov
xchg
aad
cmp
mov
mov
fs
leave
sbb
xor
pop
stos
and
fsubrs
jb
call
testb
add
inc
inc
push
lds
push
out
jg,pt
or
sbb
rorl
mov
lret
int3
sbb
insb
in
mov
xchg
fimuls
aam
cmpsl
adc
sbb
ret
or
sub
push
mov
pop
xor
sub
movsl
repz
xchg
push
cmpsb
jno
out
cmp
xor
repz
xchg
jno
ljmp
xor
jecxz
movl
xchg
fidivrs
cld
xorl
sbb
pop
into
repz
push
push
fiadds
in
mov
sub
xchg
xor
dec
out
aas
cli
fildll
inc
sbb
xor
pop
je
insl
jne
pop
jo
stos
or
es
and
je
fcmovu
cmp
sub
in
or
push
pop
fldenv
dec
cli
fwait
mov
js
mov
or
dec
in
fisubl
pop
xchg
or
cmp
mov
jo
mov
mov
cwtl
leave
or
sub
outsl
lahf
test
add
in
idivl
or
in
pop
stos
or
mov
inc
lea
test
sbb
fisubrs
push
xchg
repnz
fimull
rcrb
mov
scas
xchg
pop
popf
jnp
mov
imul
cmp
sub
pop
jne
sub
mov
stos
add
and
hlt
inc
cmp
push
in
addr16
pop
out
punpckldq
mov
lods
cmp
sbb
dec
cmp
in
arpl
dec
dec
cmp
nop
cmpsl
jecxz
xchg
cli
or
sbb
xchg
data16
int3
jns
xor
mov
cltd
sahf
test
mov
out
xchg
push
dec
fimull
push
ficomps
mov
jae
push
and
addl
push
nop
cmpsl
xor
sub
add
add
adc
jae
outsb
mov
gs
enter
arpl
dec
movsl
aam
fisubl
and
pushf
add
mov
dec
xchg
ja
das
les
lods
shll
mov
mov
and
jns
jecxz
pop
sbb
cwtl
xor
into
pop
addr16
xor
dec
jne
addr16
jmp
xor
in
inc
push
rcrl
mov
add
push
mov
stos
sti
cli
arpl
js
or
jecxz
cmp
dec
or
push
and
jmp
out
dec
popf
cltd
lods
mov
pop
xor
sbb
in
insw
jmp
mov
in
and
and
repz
cwtl
out
ds
addr16
nop
push
xlat
cmp
repnz
pop
out
sbb
sbb
inc
mov
ljmp
into
daa
mov
lea
data16
dec
jns
inc
pop
roll
int3
add
pop
negb
cmpsl
addr16
sti
loop
adc
dec
push
and
cmc
jmp
aas
fwait
js
movq
jmp
cld
pop
in
ja
inc
mull
test
pop
iret
ja
or
aad
jl
adc
jo
cmp
movsb
mov
test
icebp
or
mov
pusha
dec
dec
sbb
dec
fisubs
pushf
push
pusha
xchg
mov
test
negl
push
xlat
lahf
testl
inc
xor
lea
imul
arpl
cmp
icebp
mov
test
loope
push
nop
out
dec
dec
push
sbb
ss
jle
jmp
mov
jno
pop
jnp
xchg
pop
xor
lds
fdivl
or
fisttpll
fmuls
push
push
nop
adc
xor
out
jge
jge
inc
mov
mov
push
adc
loop
mov
lcall
lret
pop
push
sub
or
outsb
or
das
or
pushf
push
out
xchg
push
cmp
das
add
mov
sbb
push
add
jno
or
xchg
xor
or
lods
fs
add
sbb
inc
dec
out
fists
aam
aaa
mov
push
sbb
adc
cmp
jne
aaa
jnp
data16
push
adc
fimull
pop
dec
add
mov
daa
push
shlb
xchg
jno
mov
cltd
cmpb
xchg
test
or
add
js
and
sub
in
adc
add
pop
clc
into
test
shlb
mov
or
int3
or
jno
pop
mov
pop
sub
ds
xchg
fs
inc
add
xchg
or
sub
inc
movsl
cmp
mov
ljmp
test
ja
push
imul
jg
cmpsl
addr16
iret
push
and
push
mov
mov
fs
push
int
mov
add
cmp
cwtl
cltd
fsub
scas
mov
clc
push
mov
or
lods
sbb
push
dec
xchg
mov
mov
push
mov
cmp
jecxz
rcrl
sub
into
in
mov
inc
xor
push
aas
xlat
cmp
mov
add
dec
push
push
and
inc
repz
fmull
cmpl
and
ficoml
inc
cmp
out
icebp
pop
cmp
addr16
sbb
jp
inc
jg
dec
rcrb
mov
and
xchg
mov
out
mov
pusha
cmp
mov
rolb
ss
out
jp
rcrl
scas
cmp
test
jl
pop
mov
rorl
ljmp
cwtl
orl
pop
stos
inc
add
mov
cmpsb
mov
dec
loope
orb
sbb
das
and
jno
bound
icebp
aas
iret
push
roll
mov
sbb
aas
push
or
incb
in
faddl
push
and
scas
ljmp
sarb
popa
out
out
sarb
fnstsw
in
clc
push
insl
stos
mov
cld
imul
push
cli
jnp
loope
mov
in
push
movsb
repz
inc
jge
aas
push
int3
pop
cltd
cs
sbb
into
lcall
lea
int
dec
pop
subb
aas
jp
xlat
loop
mov
call
dec
std
mov
popa
xlat
dec
dec
cmp
or
adc
cmpsb
cli
push
inc
mov
mov
mov
xchg
test
ss
out
loop
in
mov
js
cmpb
inc
mov
push
pop
fidivrs
sbb
inc
inc
inc
adcl
pop
sahf
pop
arpl
or
sub
xchg
mov
xor
xor
cmovno
ret
sub
or
test
mov
hlt
sbb
push
divl
mov
adc
or
add
movsb
loope
or
int3
pushf
imul
addr16
or
add
push
jmp
pop
testl
decb
rolb
or
pop
mov
jno
pop
or
sbb
cli
stos
data16
pop
ret
lods
jbe
insl
or
icebp
mov
enter
sub
inc
imul
pushf
jle
add
xor
sbb
stos
sbb
bound
or
shl
cltd
jb
imul
sbb
pop
out
cmp
sub
test
xchg
cmp
lods
in
or
sub
jb
bound
pop
ret
ret
push
ja
or
mov
lahf
nop
rcr
loope
cmp
cmpl
incl
stos
jge
addr16
int
in
dec
xchg
pop
cwtl
sarl
aas
call
jg
mov
std
or
dec
mov
dec
int
adc
or
fcoms
lret
mov
test
negl
dec
bound
xchg
jbe
adc
aad
and
xchg
ljmp
push
jnp
mov
lret
or
movsb
idiv
out
push
cs
push
xchg
push
cli
popf
mov
pop
lock
push
pop
jl
or
push
xor
jle
out
dec
mov
jp
aas
xor
out
xchg
inc
xor
dec
stos
fmuls
outsb
or
cmpsb
adc
push
adc
pop
jge
cmp
dec
outsb
ficoml
aad
aad
mov
mov
outsl
popf
addr16
mov
orb
btc
sub
jb
pop
dec
test
pop
mov
lea
sub
fs
mov
ret
into
aas
rclb
in
out
cmp
dec
cmc
and
jge
mov
inc
mov
jb
movsb
sub
pop
push
stos
add
cmpsl
out
sbb
xor
xor
xor
mov
cmp
fs
lret
push
pop
shll
pop
dec
push
ds
jecxz
mov
pop
inc
push
jno
insb
add
daa
adc
mov
mov
shr
sahf
rolb
lahf
lret
push
push
movl
lret
les
arpl
in
dec
or
outsb
lea
enter
mov
sub
sub
cli
lock
movsl
popa
dec
movsl
jnp
mov
and
sahf
cli
pop
lods
cmc
push
mov
sub
fdiv
fdecstp
push
loop
out
jno
xchg
mov
ja
pusha
pop
push
arpl
xor
sub
fistl
xor
sub
push
lea
sbb
sub
inc
adc
sbb
ret
sub
dec
cmp
sub
sbbl
sub
scas
pusha
cmp
xor
jb
xor
sbb
orb
jns
stc
cs
sub
cmpsl
add
es
insl
nop
lods
pop
popf
inc
cmp
fsubr
lods
xor
and
or
dec
mov
sbb
mov
fs
or
rol
gs
mov
mov
add
or
es
sti
mov
iret
jmp
sub
push
pusha
lods
andl
xor
pop
sbb
mov
dec
addr16
jo
inc
fisttpll
xchg
stos
orl
hlt
cmp
adc
add
pop
push
inc
pop
in
cmpsb
push
test
ret
scas
lret
jle
push
cmp
fldt
in
test
ljmp
pusha
lret
outsl
mov
adc
pop
sarl
mov
adc
pop
pop
js
cmp
icebp
js
stos
and
aas
jnp
outsl
insb
movsl
out
push
mov
cwtl
flds
push
leave
icebp
and
int
sub
fs
jno
inc
jnp
dec
into
and
xor
das
and
xchg
pop
dec
fisubs
leave
jb
fists
sub
mov
stos
lds
pushf
inc
ja
add
jne
push
int
popf
cmp
xchg
lret
and
push
dec
adc
mov
dec
out
outsl
int3
daa
sub
mov
xor
mov
je
leave
sbb
in
mov
mov
pushf
ljmp
sub
inc
out
jbe
jb
mov
sub
outsl
lds
lds
cmp
data16
jns
add
sub
data16
jl
sub
lods
pop
sbb
push
lds
das
aam
push
xor
addr16
inc
hlt
xchg
cmp
addr16
gs
cmp
daa
cmp
dec
stos
rcll
jmp
popa
in
sbbb
jns
lcall
sub
subl
lds
jo
stc
repz
cmp
das
mov
or
std
subb
or
int
or
jg
pop
lods
add
jmp
mov
clc
fsts
dec
push
jmp
loope
push
jno
stos
out
push
inc
js
sbb
sub
xchg
repz
out
sarl
cltd
xchg
and
mov
cmpsb
imulb
lahf
cltd
lret
lahf
and
mov
cmp
clc
cmpsl
std
and
xchg
pushf
xchg
and
add
je
sub
in
in
push
jg
popa
test
mov
repz
cmp
int3
or
jmp
sub
inc
jae
adc
loop
push
int
adc
sbb
das
mov
xchg
test
dec
adcl
mov
ficoms
xor
lret
inc
jg
in
sbb
nop
movsl
mov
push
mov
mov
add
push
sti
pushf
ret
or
fdivrp
lahf
jb
fisubrs
pop
int
std
orl
sti
lods
test
inc
mov
xchg
mov
sbbl
inc
addr16
cld
lret
movb
leave
pop
inc
jp
fnstcw
pusha
jle
mov
sub
and
les
addl
mov
and
out
scas
movsb
xchg
mov
cmp
xor
cs
mov
out
cmp
fcoms
out
dec
sahf
out
pop
adc
das
mov
or
sbb
dec
js
sub
sub
cmpsl
xchg
cwtl
std
mul
jge
lods
sub
ret
arpl
es
test
jl
cmpsl
sbbb
scas
pop
sub
or
pop
adc
cmpsl
add
cwtl
fstps
inc
stos
jb
xor
test
push
jae
lahf
xchg
imul
cmpsl
xchg
loop
push
in
sub
mov
dec
pusha
aas
out
mov
cwtl
movsb
mov
in
sub
sahf
mov
mov
jl
pop
mov
ss
test
push
in
xor
push
js
sub
add
imul
mov
xchg
sahf
push
addb
rorb
repnz
arpl
push
test
mov
ljmp
shrb
jbe,pn
aad
pop
inc
sub
mov
sbb
xchg
neg
dec
repnz
add
enter
cmp
and
in
and
xor
push
pop
in
mov
mov
aaa
mov
jecxz
inc
outsl
roll
popa
ret
push
mov
aad
xchg
clc
popa
adc
ret
lret
bnd
add
push
mov
push
leave
pop
pop
ljmp
inc
gs
push
popf
and
push
add
dec
cmpsl
lods
or
pop
popf
inc
dec
jnp
xchg
ds
in
popa
test
add
jb
outsl
sbb
add
pop
jns
dec
push
pop
stc
ja
cmp
dec
into
mov
ret
and
xchg
jl
repz
lahf
subb
mov
mov
in
ja
mov
stos
adc
jbe
mov
jp
xor
sbb
mov
xchg
jle
push
mov
xor
pop
scas
dec
das
mov
and
push
dec
fimuls
es
push
sub
sbb
adc
cmp
xchg
push
mov
or
shll
dec
adc
les
mov
mov
push
add
xlat
and
cmc
fcompp
pop
mov
dec
inc
out
or
test
mul
mov
push
mov
out
mov
inc
sub
int
scas
mov
jg
minps
cmp
mov
les
push
cld
fldt
out
rorl
xor
jb
frstor
jp
out
jle
xchg
loopne
push
or
int3
pop
fistpl
aas
rol
fucomi
cmp
test
xor
inc
shll
dec
lret
scas
and
fcompl
fcmovu
cmova
dec
aad
cmp
xchg
loopne
push
iret
xchg
out
rcl
ffree
and
movsb
std
or
icebp
mov
push
stc
pop
jo
add
sub
lods
inc
jge
dec
test
pop
adc
lahf
fiaddl
pop
icebp
adc
repnz
add
xchg
lods
adc
loope
cmp
ss
test
and
sbb
lods
scas
jae
fstl
pop
xor
out
call
jle
mov
in
or
pusha
pushf
int
jl
mov
icebp
lcall
xchg
inc
mov
sub
aas
xchg
mov
movsl
sub
jp
mov
roll
lock
lea
or
in
adc
mov
add
fnsave
cmp
mov
movb
dec
movsb
add
lds
xlat
add
sbb
sbb
cltd
mov
lods
mov
enter
cli
adc
xor
add
push
fisubrl
mov
mov
jmp
lcall
enter
aas
ret
enter
loopne
pop
stos
and
rorl
or
cli
xchg
andl
inc
push
ljmp
inc
movsl
les
mov
gs
out
cmp
lcall
inc
out
mov
xchg
inc
scas
jp
das
add
sub
bound
mov
fdivs
mov
xor
test
mov
lret
push
xor
enter
out
xlat
mov
add
test
push
cmpsl
jbe
mov
push
xor
out
jl
adc
lcall
imul
test
nop
repz
sub
int
adc
movd
jae
scas
fdivl
insb
out
fadd
ja
aaa
mov
dec
es
test
jne
sbb
bswap
das
pop
xchg
out
jp
jecxz
pop
and
aad
sbb
pop
fildl
dec
rcrb
mull
jge
rorb
lods
in
fldcw
mov
jae
push
lods
mov
gs
scas
leave
add
adc
pop
scas
int
mov
repz
push
movl
cmp
dec
jbe
leave
stc
loopne
mov
movsl
lea
int3
in
shll
aad
jo
hlt
add
pop
sbb
xchg
les
xor
sub
sahf
fisttpll
hlt
jno
and
ja
loopne
jnp
cmc
mov
jne
popl
pop
je
mov
fs
xor
cli
shl
mov
das
std
aas
rorl
jge
adc
pop
roll
paddsw
mov
ljmp
xor
mov
cmp
dec
inc
or
data16
andb
addr16
lahf
jecxz
jl
mov
cvttps2pi
cwtl
pop
outsl
pushf
push
mov
jge
outsl
test
lahf
pop
js
enter
dec
sub
push
xor
push
cld
add
mov
mov
cwtl
and
sti
mulb
repnz
dec
outsl
adc
ljmpw
jl
push
mov
loop
and
or
push
lock
fstps
xchg
mov
lods
mov
lret
divb
pop
mov
mov
sbb
enter
out
loopne
push
fs
cld
leave
cmp
sub
push
arpl
or
pop
lcall
or
adc
nop
ficoml
cmp
sbb
xor
push
mov
leave
sub
ret
push
push
and
bnd
xchg
or
sub
outsl
add
jae
mov
icebp
inc
adc
jp
adc
add
xchg
push
pop
flds
mov
xor
mov
jmp
xchg
adc
or
dec
mov
lods
or
xchg
mov
mov
sbb
in
push
xchg
hlt
xchg
dec
jp
sbb
cmp
sbb
sub
int3
push
lock
rolb
roll
mov
inc
pop
mov
imul
xchg
sbb
aas
pop
addr16
mov
xor
in
xor
cmc
xchg
xor
sbb
insb
xchg
sahf
sbbl
rcll
xchg
jno
mov
repnz
dec
je
outsb
in
fistpll
mov
mov
stos
rorl
es
dec
aas
sbb
popa
jo
cmp
int3
sub
daa
xor
in
imul
stos
cmp
repnz
gs
or
mov
jns
jmp
xchg
and
es
inc
test
xchg
nop
or
xor
sub
test
pop
shll
dec
ret
adc
ds
sbb
gs
add
push
les
test
add
and
jp
rorb
jle,pt
std
inc
mov
lock
pop
xchg
xor
push
hlt
and
sbb
sub
add
movsb
test
pop
jmp
testl
sub
jb
cmpsb
and
jns
and
mov
imul
inc
cmp
mov
arpl
mov
xchg
into
dec
xchg
mov
test
xor
adc
push
cmp
mov
dec
push
pop
int
xchg
jmp
cmc
aad
mov
sub
mov
cwtl
icebp
sbb
dec
bound
inc
sbb
nop
lea
xor
cmpsb
cld
push
imul
mov
mov
mov
inc
push
mov
andb
cmpb
icebp
std
mov
adc
cmp
cmpsb
adc
add
inc
jg
pushf
jle
fmul
dec
addb
jg
out
or
mov
sbb
mov
je
test
xchg
xor
add
ja
xchg
xor
inc
lock
mov
mov
sbb
dec
xchg
int3
pop
jo
rcl
push
iret
addr16
sbb
or
int3
push
jae
mov
dec
inc
xchg
sarb
inc
push
lods
fadds
shll
stc
and
mov
incl
adc
jns
inc
sbb
mov
in
imul
cmc
xor
xchg
cmp
inc
js
lods
jmp
add
arpl
or
rcrb
ljmp
pop
insb
out
out
sub
incl
pop
and
push
sub
mov
jmp
mov
adc
fadds
out
jecxz
xchg
das
xor
and
push
fsubrp
cmc
sub
ja
dec
out
jae
test
mov
sarb
xchg
xor
mov
mov
daa
movsl
mov
dec
fsubl
iret
jns
add
out
adc
rclb
mov
cmpsb
pop
scas
jl
and
sarb
popf
or
adc
jmp
sub
add
ret
push
inc
cld
and
mov
enter
cmp
jg
lods
mov
insl
std
leave
in
bound
popa
or
cmp
jno
nop
hlt
lods
cmpxchg
sbb
loope
sahf
int
push
loope
xchg
rcrl
fadd
xlat
mov
push
inc
lret
jbe
jns
add
pop
cs
insb
push
add
xchg
dec
jp
cmp
unpckhps
dec
dec
les
aaa
pop
iret
jne
in
pop
js
pop
pop
pop
mov
mov
or
repz
scas
sbb
cld
cmp
sbb
cltd
cmp
and
pop
stos
das
xchg
pop
and
sub
xor
sub
xchg
pop
js
sub
mov
pop
jl
push
in
es
lock
inc
fildll
sub
in
sub
rcr
push
jns
fwait
dec
dec
leave
mov
ficomps
in
xor
dec
mov
adc
cmp
xlat
mov
push
jg
fadd
mov
xlat
ret
xor
or
jno
push
and
lock
pop
xchg
popa
xorl
cld
push
jnp
pusha
lahf
mov
jb
mov
lret
stc
je
out
mov
xor
cmp
sbb
lea
lret
push
sub
cwtl
bound
xor
mov
pop
movb
lea
xor
fidivs
ljmp
jae
fucomi
mov
inc
stos
mov
in
inc
or
pop
lea
cmp
and
mov
jg
or
mov
shrb
cmp
test
and
inc
testb
pushf
lahf
das
xchg
fldenv
jl
out
add
fnstsw
or
inc
jno
insb
dec
and
adc
loop
mov
shrl
incl
loopne
gs
xchg
push
popf
outsb
cmp
loope
daa
mov
jmp
addr16
sub
pop
insb
orl
das
mov
xchg
sub
movsb
lods
test
stos
loopne
daa
andb
push
aas
mov
dec
mov
inc
xchg
aad
or
sub
addb
fstps
mov
sub
roll
push
scas
fistpll
cmp
int
pop
lods
hlt
repz
mov
xchg
sbb
inc
mov
jb
fsubrs
push
sbb
cli
xchg
sbb
mov
scas
iret
mov
cmp
movsl
jge
btl
dec
les
push
mov
jp
in
xor
sbb
sti
push
and
pusha
sbb
cmp
lods
test
test
shl
hlt
jns
mov
rorb
xchg
mov
movsl
or
aam
xchg
xlat
lods
mov
dec
divb
cmp
cvtpi2ps
push
imul
add
lahf
xorb
fdivl
test
pop
mov
add
xor
dec
stc
into
add
mov
mov
add
es
cltd
add
stc
sub
jb
push
lret
in
sub
shl
cld
cmpsb
xor
or
push
popl
push
pop
mov
pop
pop
ficomps
inc
jb
add
sarb
xor
out
insl
and
inc
push
popa
jb
or
loopne
sub
and
xchg
mov
mov
xlat
aad
mov
push
xchg
movsl
mov
jo
dec
adc
lods
xor
aam
and
cmp
sub
popf
mov
les
ljmp
mov
push
dec
inc
stos
movl
jne
jae
insb
in
push
mov
cmc
movsb
cmpb
lahf
sbb
cmc
in
leave
sub
jae
jns
dec
sbb
and
pop
add
adc
clc
int
inc
mov
jbe
cmp
sarl
sahf
movsb
xor
scas
mov
je
lret
in
jno
shlb
lahf
imul
cmpsb
lret
cmc
push
aam
test
mov
mov
xor
lods
addb
ss
dec
fstp
adcb
mov
xor
mov
arpl
jl
jle
das
cmpsb
jmp
jge
or
sbbb
lods
lea
xlat
sub
sbb
pop
xor
dec
cmp
leave
gs
jo
cmc
xchg
pop
out
push
sbb
jp
xlat
mov
enter
add
sub
add
pop
sti
push
rep
sbb
push
movsb
addb
push
je
ds
pop
fadds
cbtw
sar
scas
adc
xchg
fstpt
pop
mov
cmc
int3
shl
add
test
movsb
push
outsl
jno
js
inc
push
aad
ss
mov
addr16
and
lods
ds
pop
dec
rorb
or
mov
xor
pop
and
rorl
ss
jbe
test
fidivl
add
cs
cmp
es
sbb
add
lods
lea
add
mov
jo
es
icebp
test
imul
stos
jnp
cs
lods
test
lcall
pop
xchg
cmp
sarl
test
sahf
loop
jae
pop
lea
push
ljmp
mov
xor
test
in
out
dec
rcr
pop
lods
cmp
and
mov
cwtl
lods
cwtl
int
dec
inc
pop
inc
loop
pusha
xchg
dec
push
dec
in
lods
or
es
cmpsb
imul
add
insb
push
or
into
insb
iret
rcll
inc
test
push
jmp
and
imul
xlat
out
mov
enter
xchg
or
pop
adc
rol
pop
jle
xchg
ficompl
xchg
movsl
lea
jne
mov
push
jp
or
je
ljmp
jmp
hlt
jecxz
scas
mov
xchg
aaa
or
nop
sbb
jecxz
std
add
cwtl
pop
jo
test
les
cmpsb
xor
mov
cli
dec
mov
push
xor
and
jl
lahf
jns
mov
jns
icebp
push
xchg
das
aas
insb
in
pop
scas
mov
shlb
xchg
xor
bound
inc
sub
xchg
jns
ss
adc
sub
pop
inc
movsl
mov
pop
dec
pop
lods
xchg
dec
sub
mov
mov
subb
xchg
sbb
cwtl
jecxz
scas
mov
push
stc
ret
subl
inc
cs
xchg
push
mov
or
aam
and
mov
xchg
xchg
out
divl
cmpsb
pushf
repnz
bound
dec
add
dec
xchg
sub
xor
arpl
mov
sub
inc
inc
or
cmp
loopne
sub
ss
mov
out
mul
add
or
jl
push
fldl
mov
stos
lea
aam
add
sub
lods
call
mov
aaa
fstpl
repz
dec
addb
testb
sbb
in
mov
out
sub
mov
adc
in
adc
lock
clc
cs
adc
jge
adc
clc
sub
out
mov
push
sbb
mov
mov
je
fdiv
jmp
push
xchg
je
push
add
aad
push
mov
jb
xor
pop
cmp
mov
test
js
push
sbb
std
sub
adc
sbb
sub
repnz
pusha
imul
inc
dec
fisubs
gs
mov
add
jbe
push
push
pop
xor
or
fwait
mov
jle
cltd
addb
jl
js
adc
es
jne
mov
push
dec
mov
pop
push
sbb
out
int3
fldcw
pusha
pop
out
add
out
mov
xor
and
pop
addr16
push
mov
jnp
loope
adcl
xchg
popf
sub
mov
cmpsl
popf
in
xorl
and
or
lahf
mov
push
clc
dec
add
fstl
cwtl
lret
ret
lret
sbb
cmp
pop
dec
mov
cli
lret
fildll
xor
shlb
and
jne
xchg
cmp
lea
mov
stc
ss
and
dec
data16
aas
adc
std
jno
xchg
or
pop
mov
in
loope
dec
les
rolb
sbb
popf
cmp
or
and
pop
mov
cmp
ljmp
movsb
sbb
jbe
sub
pop
lret
mov
pop
sbb
add
out
or
and
xor
cld
sbb
push
inc
push
scas
test
enter
or
nop
test
or
shrb
scas
dec
inc
xchg
xchg
sub
push
cmp
inc
lcall
jge
mov
std
add
movsb
mov
cmc
fucomp
outsb
or
mov
lcall
cmp
push
inc
cmp
cmp
push
add
aaa
xor
adc
push
cli
loope
outsl
lock
add
sbb
inc
scas
adc
sbb
pop
jp
xor
cmc
das
dec
into
mov
lahf
movb
sarl
inc
or
sbb
icebp
stos
testb
stos
xor
mov
adc
mov
mov
daa
mov
cwtl
imul
or
mov
cmp
fdivrs
mov
xor
je
xchg
add
xchg
shrl
roll
jo
pop
aad
out
outsb
scas
in
scas
xor
mov
mov
daa
mov
mov
test
or
imul
push
push
or
jns
push
lods
dec
add
jns
mov
push
into
testl
cmp
xor
sbb
ss
stos
cwtl
pop
add
push
pusha
daa
mov
cwtl
xchg
mov
clc
outsl
jmp
mov
into
cmp
jbe
push
dec
xor
movsb
cmp
xor
pop
clc
ds
xor
push
repz
sbb
xchg
addr16
fwait
enter
or
cmp
das
repnz
rorb
pop
jo
stos
aad
outsb
insl
lds
scas
cmpsl
jnp
ret
es
add
call
test
cmp
out
or
mov
inc
pop
arpl
test
add
adc
cmp
dec
fs
cmp
sahf
inc
insb
dec
data16
adc
fisttpll
add
loopne
sbb
shr
pop
in
popf
push
subb
out
je
inc
fs
push
shl
sub
fadds
outsb
sarl
push
jb
decb
xor
xor
dec
aam
cmp
arpl
xlat
jbe
xchg
mov
out
add
mov
ficomps
sub
pop
aam
push
sbb
xchg
mov
lea
sbb
push
adcb
bound
jp
sub
sbb
mov
cltd
repz
aas
es
loop
mov
cltd
pop
mov
cwtl
sub
xchg
mov
push
or
aam
inc
cmc
cmp
lock
adc
xchg
jno
xor
xchg
mov
add
ror
mov
cld
push
xchg
pop
xchg
mov
push
mov
inc
xor
movb
imul
cli
stc
pop
pop
movsl
xchg
popf
fsubrp
test
jnp
stos
sbb
xchg
mov
loop
aas
fistps
sbb
in
repnz
insb
ud1
shl
inc
xlat
jbe
dec
sti
decb
clc
jnp
sub
lahf
daa
sbb
dec
aas
int3
jmp
pop
mov
in
int3
sbb
mov
rclb
fisubs
and
mov
rclb
sbb
push
pop
sbb
mov
or
inc
cmp
fimull
scas
lret
aas
cmpb
cmp
add
sti
lea
jg
pop
fisubl
sub
jmp
mov
rolb
lods
repnz
in
in
out
mov
addr16
xchg
jnp
insb
push
dec
fnsave
int3
mov
arpl
cmp
in
push
xchg
or
into
push
aam
jmp
fists
stos
test
pop
mov
xchg
outsl
ja
rolb
repnz
test
mov
fsubs
cmp
sbb
in
sahf
in
pop
fbstp
jecxz
mov
ret
sbb
xor
xchg
mov
mov
test
iret
xchg
or
push
mov
mov
mov
mov
adc
clc
aaa
repnz
pop
in
pushf
mov
pop
testl
and
inc
adc
out
lods
popf
jo
jge
mov
cmp
adc
or
lcall
sbb
dec
lods
cmpsb
int
pop
inc
xor
sbb
xchg
push
shrb
add
loop
loope
cmp
xchg
repnz
inc
sub
adc
subb
lock
push
add
mov
sti
xchg
dec
loope
sub
lahf
mov
mov
bnd
push
mov
push
sbb
sbb
cmp
enter
insb
std
les
outsb
jb
in
add
out
jb
jne
push
inc
test
enter
sub
cltd
aaa
aad
btr
push
int3
jb
push
inc
stos
xchg
sbb
cmp
sbb
jmp
mov
cmpl
jne
and
movsl
stc
dec
add
xchg
fdivl
adc
cmpsb
out
fwait
popa
aam
icebp
fbld
cmp
jge
lea
xchg
jp
sub
lea
inc
pop
inc
sub
cmpsb
xchg
js
mov
inc
mov
xor
jo
je
dec
push
dec
inc
mov
data16
mov
icebp
stos
mov
cs
aam
and
outsb
call
mov
mov
dec
outsb
push
sub
adc
stos
cld
repnz
and
mov
repnz
xchg
push
fstpt
aad
daa
ret
data16
xchg
mov
mov
hlt
push
mov
stos
fwait
nop
jmp
fisttpll
lret
add
stos
fstpt
loop
fisttpll
test
lods
sub
test
pop
sbb
dec
es
lret
inc
push
lret
and
sub
out
roll
sub
push
jo
pop
stc
je
lock
lock
sbb
xor
cmp
outsb
push
out
leave
sarl
testb
fstpl
rcrb
push
std
sbb
mov
sahf
mov
lret
imul
mov
mov
ss
addl
cmpsb
and
fs
ret
lret
mov
cmpsl
xlat
pop
popa
add
addl
imul
aaa
xchg
sbb
lock
lods
mov
call
sbb
or
in
xchg
pop
pop
pop
sbb
add
xchg
ds
or
les
movsl
int3
ret
je
jge
pushf
shlb
or
faddl
in
push
jmp
in
insb
xchg
gs
xor
cld
sub
cld
pop
insl
nop
in
jge
test
call
sub
outsb
leave
flds
popa
xorb
scas
sbb
dec
ja
cmpsl
jmp
push
pop
adc
adc
or
cmp
adc
cs
insb
test
pop
cli
jnp
xor
cmpsb
pop
mov
cmc
sub
xor
push
inc
daa
cmp
rorl
pop
rclb
out
jo
sbb
jae
inc
push
cmp
xor
jns
xor
pop
inc
jle
push
gs
xor
add
pop
dec
in
pop
outsl
or
js
rorl
ss
aaa
dec
dec
sahf
loopne
arpl
push
lock
mov
xchg
cld
loopne
mov
ja
pop
lret
xchg
ret
movsb
xchg
xlat
out
lds
bnd
mov
lret
icebp
fsubrs
add
decb
lods
mov
jmp
fsubl
pop
insb
mov
push
or
sbb
out
jmp
jle
jnp
lods
push
out
mull
inc
test
shlb
lods
and
and
fbld
rcr
lcall
dec
fnstcw
push
adc
sub
in
mulps
outsb
push
push
mov
mov
add
xchg
mov
outsl
dec
lcall
cmpsb
dec
fnstsw
scas
dec
mov
pushf
jge
hlt
cmp
data16
xor
sbb
mov
popf
inc
mov
mov
mov
and
pop
insb
push
mov
sbbb
popf
push
sbb
aam
adc
out
rclb
or
aaa
arpl
cwtl
pop
ret
loopew
jae
pushf
sub
icebp
jg
pop
fimuls
clc
push
cmp
divl
xchg
cld
mov
fs
xchg
jmp
leave
or
test
out
js
sub
and
sahf
dec
mov
fnsave
inc
adc
out
lea
xchg
bound
lahf
push
add
outsb
jns
mov
inc
mov
adc
dec
sub
loopne
sbb
push
mov
cmp
jg
mov
outsl
cmpsb
lcall
js
inc
sti
xchg
cmp
sub
cmp
cmpsl
mov
lret
ja
outsb
xchg
stos
mov
mov
icebp
push
xorb
aad
xchg
loope
icebp
mov
add
mov
sbbl
jo
sub
roll
pop
aaa
push
xchg
mov
sbb
xlat
cmpb
in
mov
repz
repnz
xor
in
mov
rcrl
mov
lods
xorb
push
fwait
and
shlb
xor
lcall
std
stos
push
push
clc
stos
dec
cmpb
cmp
xchg
sbb
enter
push
lock
outsb
addl
jg
cmp
lock
mov
cmpsb
les
mov
sub
pop
pop
jp
and
mov
sub
inc
xlat
lods
xchg
or
push
inc
out
sub
shll
nop
xor
addb
sbb
popf
cmpsb
sub
imull
loopne
xchg
roll
fcoms
addr16
sub
cwtl
sar
fisubrl
scas
mov
scas
test
lcall
push
cld
dec
pushf
ja
mov
lods
mov
ds
fnstsw
aad
dec
xchg
push
jbe
mov
dec
cltd
lcall
mov
lods
and
push
jne
push
ret
xlat
adc
add
xor
out
fstps
scas
push
clc
mov
mov
cmp
cltd
jecxz
ss
arpl
ds
repz
lret
aas
mov
std
mov
stos
pop
dec
sub
mov
push
int
mov
push
imul
cmp
jp
dec
xor
sbb
test
xlat
push
shll
adc
std
out
and
dec
cmp
pushl
ljmp
push
es
mov
adc
mov
mov
dec
cmp
sarl
mov
aam
out
out
imulb
in
aas
dec
or
mov
and
rorl
into
addb
xor
pop
xlat
pusha
mov
les
pop
xchg
imul
jg
aam
enter
decb
pop
outsb
in
insl
push
hlt
in
jb
mov
pop
ds
adc
sbb
push
push
mov
movsb
mov
flds
fcomps
fstpt
sbb
cmp
sbb
xcrypt-cfb
cmpsl
and
scas
dec
out
imul
lretw
mov
mov
pop
adc
out
insl
xor
fnsave
mov
sahf
pop
fdivl
ss
popf
lret
sub
cmp
ds
push
cmp
add
and
lea
jg
stc
imul
stos
ret
and
xchg
sbb
cmpsb
mov
mov
fistpl
inc
loope
insb
bound
aad
adc
jbe
xlat
mov
cmc
loopne
fs
bound
aam
or
adc
jns
js
mov
inc
inc
mov
mov
mov
mov
mov
sbb
and
mov
mov
push
mov
nop
loopne
inc
xchg
stos
nop
adc
mov
rcrb
add
dec
push
cmpsb
jae
shrb
push
mov
lret
mov
cmc
shlb
fiadds
cwtl
neg
dec
es
add
xchg
xchg
enter
push
std
mov
pop
push
push
pop
or
aad
sub
pop
push
pop
mov
pop
adc
test
fwait
rcrl
subb
rclb
lahf
mov
pop
lcall
adc
mov
mov
test
jle
xchg
push
sbb
mov
pop
enter
mov
xlat
lods
cmp
and
cmp
aad
test
enter
xor
pop
pusha
inc
call
pop
xchg
xchg
sbb
inc
mov
mov
inc
push
sbb
fwait
push
sbb
xchg
xchg
mov
je
lods
inc
int
add
push
ss
xchg
cs
stc
test
pop
sbb
inc
mov
push
mov
ret
gs
pop
add
jo
pop
js
fmuls
jl
xor
test
sbb
popf
imul
popf
or
out
push
sub
outsl
fadd
dec
adc
cmp
dec
adc
push
cmpsl
inc
inc
repz
mov
fldl
into
mov
out
ficoml
into
rep
sub
pop
enter
rorb
es
hlt
or
pop
imul
xchg
call
adc
aam
pop
jmp
dec
pop
stos
xor
sub
add
or
jmp
insl
push
cmpsl
cmp
icebp
aam
pop
decb
sub
jmp
lds
lret
out
in
lds
dec
adc
ret
cs
inc
dec
fimull
out
aas
mov
ljmp
pop
or
adcb
lea
loope
ljmp
das
or
adc
cwtl
cmp
add
mov
aaa
push
int3
in
mov
push
mov
fbld
jns
sahf
lock
iret
cmp
or
ret
push
cmp
fdiv
mov
mov
pop
imul
xchg
fildl
aad
adc
dec
test
aad
xchg
adc
add
sbb
xchg
arpl
mov
fs
adc
pop
jle
test
test
inc
and
and
jo
inc
xchg
shll
sbb
or
jl
inc
mov
lods
std
push
data16
fildll
in
out
sub
xchg
dec
lret
mov
outsl
sbb
inc
xor
repz
and
add
xor
inc
repnz
faddl
push
or
jmp
mov
lock
xchg
mov
sahf
hlt
aas
and
mov
pop
jo
insl
pop
jo
or
je
adcl
fcoml
icebp
bswap
outsb
xchg
inc
mov
push
inc
jne
pop
mov
pop
mov
push
dec
jb
shlb
xchg
sbb
and
jnp
mov
mov
bound
aaa
imull
or
fistps
mov
xchg
popa
je
mov
push
stos
adc
and
mov
lods
outsl
jno
testb
and
clc
inc
ss
into
das
inc
stos
fwait
dec
test
int3
shl
ficoms
or
aad
pop
fucomi
lods
sub
scas
pop
mov
adc
imul
arpl
sub
and
xor
and
sbb
cmp
lcall
stos
adc
cmpsb
xchg
sub
fadds
pop
mov
push
out
nop
jns
mov
rclb
pop
mov
aas
pushf
cmpsl
adc
insb
fnstenv
mov
das
jmp
adc
sbbl
ss
xor
rorb
and
or
iret
jmp
ds
aad
inc
imul
lcall
xchg
outsb
clc
lahf
xchg
in
adc
mov
push
pop
jns
fstps
push
cmp
sarl
pop
inc
fisubl
xlat
imul
pushf
jecxz
cs
mov
cltd
fistps
pop
jne
lds
mov
fwait
int
sti
or
and
addr16
in
les
xorb
mov
adc
notl
std
sub
cwtl
insb
fs
jmp
repz
sti
rcr
cmc
and
push
cmpsl
je
add
add
and
in
psubb
arpl
cmp
adc
jo
sub
out
mov
nop
and
lds
add
imul
mov
ret
push
mov
daa
sub
gs
aas
mov
jb
subb
mov
add
inc
out
sub
mov
mov
ljmp
sub
or
add
ljmp
or
je
pop
mov
or
in
roll
adc
and
pop
xor
sub
mov
das
ret
jp
lods
dec
lret
push
ljmp
cmc
inc
cmp
jb
jp
jmp
insb
ja
leave
or
jns
pop
jae
mov
aaa
mov
es
push
scas
lret
cmc
dec
add
out
outsb
shlb
jle
lret
mov
push
mov
iret
and
mov
dec
inc
lea
sub
cltd
push
mov
mov
fsubrs
cmp
scas
loop
call
xchg
mov
test
rcr
add
ret
lea
jmp
mov
jbe
popa
dec
cmp
daa
mov
xor
rcrl
repz
sub
addb
add
jnp
mov
mov
push
fistpl
lods
mov
xor
cmp
aas
xlat
test
pop
xchg
cltd
sbb
cmp
lcall
leave
pop
clc
cmp
inc
call
scas
and
jl
daa
mov
push
xchg
xchg
push
adc
insb
loopne
das
addr16
add
or
jno
xchg
ficomps
aam
icebp
xor
push
adc
xlat
mov
dec
insb
mov
aas
pop
pop
clc
xor
ficoms
addr16
pop
lock
push
push
jl
add
or
jbe
fnstsw
popa
in
imul
push
xchg
or
pushf
fwait
repnz
push
mov
ljmp
aad
or
xchg
stos
mov
mov
sub
fisubrl
cwtl
sbb
adc
push
xor
cmp
lcall
fstpl
mov
mov
sbb
cltd
jmp
jmp
push
popf
mov
adc
out
sub
dec
xchg
inc
nop
sbb
in
data16
pop
fidivl
or
dec
sub
lods
cmp
jmp
jle
pushf
pop
mov
jb
fnsave
mov
xchg
rorl
lcall
inc
js
test
sbb
ficompl
inc
arpl
fiaddl
inc
jg
repnz
test
dec
mov
push
daa
loop
pop
in
mov
movsl
xor
jb
sub
mov
test
sbb
js
jl
cmpsb
aad
or
mov
icebp
jp
pop
cmp
adc
lea
ret
lahf
inc
scas
faddl
xor
sbb
sub
inc
jno
mov
sbb
jbe
int
mov
loop
lahf
cld
cmp
mov
sarb
inc
aas
ss
movsl
jg
add
subl
cmp
xlat
shrl
outsb
sbb
push
test
dec
in
movsb
scas
repz
js
test
lods
dec
sahf
in
mov
or
or
xor
add
push
call
add
data16
mov
sbb
sarl
xchg
inc
flds
aas
pop
cli
pop
imul
insl
gs
and
pop
mov
sub
pop
addr16
dec
daa
gs
das
sti
mov
sarl
jmp
popa
repnz
test
dec
sbb
dec
stos
repnz
insl
dec
pop
dec
test
outsb
test
in
jge
int
or
fdivr
adc
dec
popl
sbb
push
pop
stc
mov
je
loopne
rcrl
lcall
int3
sbb
pop
dec
arpl
lods
shl
jb
adc
fcomp
daa
adc
cwtl
ljmp
outsl
lret
xor
adc
cld
xchg
and
mov
dec
int
dec
cwtl
xlat
es
stc
sarl
in
inc
add
dec
add
loope
movsl
clc
imul
pop
adc
xchg
dec
fldcw
inc
aad
pop
inc
in
inc
imul
xor
jno
cmp
mov
mov
out
loopne
pop
dec
shr
in
cmp
idivl
icebp
mov
mov
push
mov
mov
popa
xlat
insl
jg
rolb
pop
fsubs
int
mov
adc
scas
pop
jecxz
iret
jnp
push
mov
.byte
adc
xor
nop
add
add
test
mulb
mov
mov
jns
cmp
xchg
sbb
dec
xor
and
addr16
and
cmp
lea
test
test
nop
mov
int3
cmpsb
std
xchg
adc
pushf
xchg
sub
rorl
call
es
push
pop
imul
pop
and
lret
adc
jge
aam
add
lock
mov
or
cmp
or
xchg
hlt
addr16
test
pop
sub
daa
pop
mov
push
out
sbb
sub
int
nop
xchg
out
xor
dec
lds
sahf
hlt
addr16
cld
ret
das
or
adc
rorb
movsl
inc
into
or
or
cmpsb
push
out
or
pop
into
sub
and
jo
pop
sbb
mulb
mov
sbb
ficompl
push
pop
push
mov
and
cmp
in
pop
test
lahf
push
xchg
or
xchg
jb
xlat
sbb
and
gs
dec
and
jmp
int3
lahf
pop
or
aam
sbb
insb
sub
iret
inc
jle
adc
push
xchg
inc
outsb
daa
and
lods
lahf
loopne
push
testb
adc
jne
push
xor
mov
sub
jnp
push
adc
jae
jno
push
addl
into
push
loopne
or
sub
es
ror
push
pop
xchg
cmp
movsb
cltd
xchg
test
into
jmp
sahf
sub
cwtl
dec
xchg
stos
sbb
xchg
shrl
leave
inc
ja
pop
push
fistps
fldenv
rcrl
and
cli
mov
mov
aas
jmp
in
scas
jnp
dec
insb
fcoml
lods
pusha
sbb
mov
outsl
sarb
cmp
sbb
pop
add
ja
sbb
mov
cmp
xchg
and
scas
.byte
.byte
.byte
add
add
cs
add
add
add
addb
addb
add
pop
add
addb
add
rolb
add
adc
add
nop
add
addb
add
cs
add
add
add
mov
add
addb
add
cs
add
add
add
add
add
addb
add
fadds
add
lock
addb
add
add
addb
add
cs
add
add
push
add
pop
add
cmp
add
push
add
adc
add
push
pop
add
addb
adc
add
cwtl
add
adc
add
mov
add
cs
add
add
push
add
add
add
add
orb
loopne
add
clc
add
adcb
add
add
adcb
add
add
adcb
add
add
cs
add
push
add
add
push
add
call
add
cmp
add
push
pop
add
and
add
ss
add
inc
pop
add
bound
add
addb
sbbb
add
xor
andb
cmpb
add
js
add
nop
add
addb
add
cs
add
add
add
mov
add
addb
add
cs
add
add
add
add
add
rolb
add
add
cs
add
add
add
add
add
rolb
add
add
add
push
add
add
add
add
add
loopne
add
add
add
cs
add
add
add
add
add
lock
add
add
add
push
add
add
add
add
add
add
add
cs
add
add
add
add
add
adc
add
cs
add
add
add
add
add
and
add
cs
add
add
add
add
add
xor
add
cs
add
add
add
add
add
inc
add
add
cs
add
add
add
add
add
push
add
add
cs
add
add
add
add
add
pusha
add
add
cs
add
add
add
add
add
jo
add
add
add
cs
add
add
add
add
add
addb
add
push
add
add
add
add
add
nop
add
add
cs
add
add
add
add
add
mov
add
add
push
add
add
add
add
add
mov
add
add
add
cs
add
add
add
add
add
rolb
add
push
add
add
add
add
add
rolb
add
cs
add
add
add
or
add
add
add
cs
add
add
add
or
add
add
add
cs
add
add
add
or
add
push
add
add
add
cs
add
add
add
or
add
push
add
add
add
cs
add
add
add
or
add
push
add
add
add
cs
add
add
add
or
add
push
add
add
add
cs
add
add
add
or
add
add
add
add
cs
add
add
add
or
add
add
add
add
cs
add
add
add
or
add
add
add
add
cs
add
add
add
or
add
add
add
add
cs
add
add
add
or
add
add
add
push
add
add
add
or
add
add
add
push
add
add
add
or
add
add
add
push
add
add
add
or
add
add
add
push
add
add
add
add
add
rolb
add
movl
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
mov
add
in
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
addb
insb
add
add
add
add
add
add
inc
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
inc
add
inc
add
add
add
add
add
add
inc
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
dec
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
dec
add
pop
add
add
add
add
add
add
add
hlt
dec
add
in
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
in
add
add
add
nop
cltd
add
add
add
add
add
add
add
in
add
add
add
pushf
cltd
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
stos
sbb
stos
sbb
enter
rep
aad
add
jnp
hlt
pushf
cmpl
aas
or
lret
nop
pop
dec
jne
jecxz
jns
popa
push
filds
aam
mov
xchg
inc
pop
lret
inc
es
add
popa
push
push
mov
adc
jns
cmpsl
testb
ja
addr16
mov
out
jbe
jge
cmp
adc
mov
mov
movsl
scas
sbbb
cmp
in
icebp
mov
adc
inc
or
push
cli
jmp
imul
loopne
inc
cli
pop
sahf
pushf
dec
inc
dec
sbbl
push
or
call
fld
mov
or
sub
pop
leave
inc
sub
jns
out
out
or
dec
xchg
jbe
adc
ret
lods
into
cmp
cmp
test
adc
jnp
cld
dec
mov
xchg
insl
sti
nopl
dec
adc
testb
add
in
mov
push
sub
sar
fs
pop
aas
push
dec
mov
cmp
aad
sahf
and
push
fldl
adc
je
cs
cli
xor
mov
gs
movsb
call
cltd
mov
nop
or
cld
add
shll
push
cmp
fimuls
push
shlb
jbe
nop
in
lea
in
clc
inc
push
adc
dec
addr16
jge
and
ljmp
sarb
mov
jp
shl
aam
stc
mov
fbld
jb
rorl
adc
or
push
inc
scas
adc
test
pop
enter
jbe
je
inc
sub
testl
mov
ret
hlt
adc
inc
lret
lods
out
dec
repz
cmp
mov
sbb
mov
or
jbe
and
push
pop
out
or
jns
inc
ret
xchg
divl
repnz
jns
lods
pop
shrl
inc
icebp
mov
push
in
fidivs
in
inc
enter
inc
enter
ficoms
pop
sub
sbb
pop
cmpsl
imull
or
mov
xchg
xchg
xor
pop
mov
xor
inc
cld
ss
sub
popf
push
jno
cmpsl
ficoml
sbb
mov
pusha
fidivrs
imul
dec
stc
or
pop
ficompl
sub
fidivs
mov
dec
std
movsb
les
sbb
or
gs
push
xor
push
stos
mov
lret
mov
in
cmp
repz
and
loop
push
inc
and
jmp
test
sub
outsb
out
push
daa
in
xor
mov
scas
repz
cwtl
ret
insb
xchg
pop
cmpsb
sub
pop
sub
std
xchg
insl
inc
mov
ljmp
cmp
andb
dec
mov
cmpsl
and
xor
clc
sub
xor
popa
add
pop
lods
xchg
add
lods
jae
test
inc
fwait
jl
or
mov
inc
imul
mov
data16
mov
jmp
adc
fwait
cmp
mov
xchg
sbb
adc
sbb
mov
mov
pop
out
subl
push
je
fadds
sub
aas
cmp
pop
aad
push
xor
push
and
in
sbb
test
jmp
pop
sarl
rcrl
fsubs
push
fisubs
imul
sbb
pop
lret
cmp
inc
jbe
sbb
icebp
push
sub
or
shrb
push
mov
adc
cld
ret
mov
out
mov
cwtl
dec
scas
or
sbb
hlt
inc
test
stc
not
rolb
lret
lahf
or
push
pusha
jb
jg
mov
pop
inc
enter
pop
and
ja
rcl
pop
pop
push
pop
stos
and
gs
addr16
in
push
call
aas
sti
mov
mov
jns
mov
mov
std
inc
add
andb
xchg
test
and
adc
insl
roll
addr16
ljmp
jae
repnz
jmp
aad
push
cmpsl
outsl
lea
in
pop
std
adc
sub
and
or
mov
and
dec
sub
fildl
sbb
inc
cmc
icebp
adc
cmpb
stos
dec
lea
mov
fildl
movsl
out
das
jnp
mov
data16
outsl
mov
xor
sub
ficompl
lds
cwtl
xor
enter
mov
sbb
pop
push
mov
andb
les
call
dec
fiaddl
lea
cmp
xor
testb
addr16
ljmp
mov
js
pop
jns
xor
mov
fidivrl
mov
xorb
cmc
jp
jge
xchg
test
cmpsb
mov
and
xor
lods
adc
insb
pusha
scas
sub
sub
mov
scas
jb
and
lcall
ja
jns
adc
subb
daa
in
out
pop
es
jno
xor
mov
mov
jno
mov
jmp
mov
pop
xchg
sub
inc
cltd
cmp
lds
fnclex
ret
sub
lahf
clc
push
dec
xor
sbb
jo
lret
cmp
xchg
call
imul
jl
ljmp
mov
in
xchg
dec
fisubs
lock
and
inc
sub
push
mov
nop
std
es
addl
pop
js
cmp
mov
pop
test
fwait
nop
sti
jo
fstpt
or
neg
imul
mov
fsts
lock
je
pop
imul
stc
pop
dec
test
mov
and
mov
adc
shll
ss
adc
leave
sbb
fnstsw
pop
add
fwait
mov
mov
mov
int
jbe
sahf
test
mov
jge
pop
push
nop
ja
xchg
push
push
sub
or
lea
mov
pop
xchg
loopne
fnsave
mov
sbbb
dec
cmp
jbe
iret
xor
test
imul
adc
dec
ds
pop
lcall
add
mov
jnp
mov
ljmp
xor
xchg
ret
cmp
ja
xchg
int3
and
add
cld
jmp
push
inc
loopne
cmc
fistl
or
and
fdiv
push
inc
inc
adc
pop
icebp
mov
je
cs
jne
sub
ret
mov
or
shrd
xchg
jge
fstps
xchg
jbe
fidivrs
fdivrs
jmp
inc
outsl
jmp
repz
xor
and
pushf
dec
dec
xor
pop
addr16
fsubrs
dec
es
inc
mov
mov
test
test
jecxz
data16
dec
pop
push
push
or
daa
pop
loop
pop
negb
enter
out
mov
out
mov
add
mov
cltd
repnz
xorb
inc
dec
jg
sub
sbb
jnp
add
fs
cmp
jmp
mov
dec
inc
adc
test
sub
in
adc
mov
dec
or
outsb
ret
inc
push
cmp
mov
mov
sbb
xchg
mulb
jnp
sbb
xlat
mov
add
push
adc
mov
out
leave
xor
push
jbe
movaps
les
mov
fmul
jge
mov
push
std
pop
pop
xor
lret
arpl
fsubrl
push
cmp
out
mov
repnz
fsub
arpl
add
mov
sub
fisttpl
cmc
sahf
ja
testb
bound
pusha
pop
rolb
shrl
jg,pt
icebp
mov
movsl
mov
int
pop
ret
adc
out
and
mov
repnz
and
jae
stos
adc
sbb
push
inc
mov
fcomp
xor
xchg
inc
cmp
xchg
sbb
mov
cmpsl
pop
cmp
cmp
mov
pop
adc
aam
stos
sub
test
int
pop
clc
sub
rol
outsl
outsl
js
sub
jae
pusha
push
les
int
stc
jns
mov
into
rolb
push
or
daa
popf
xor
mov
aas
loop
or
push
adc
adc
adc
popf
or
push
movsl
das
ficompl
cld
or
enter
orb
je
inc
sbb
xor
xorl
adc
xorl
jg
aas
rcl
xor
testl
insb
in
hlt
adc
push
cmp
dec
jmp
data16
maxps
inc
mov
xchg
xor
fwait
xchg
dec
sbb
jbe
shl
fstpl
mov
lcall
or
pushf
sub
in
pusha
jecxz
add
push
lret
add
xchg
mov
aas
shll
xor
mov
or
push
repnz
orb
jp
sbb
mov
fwait
pop
add
dec
pop
add
adc
test
mov
push
pop
notl
mov
xchg
xorl
repnz
jmp
xchg
outsb
inc
jne
aam
pop
jo
xchg
rcll
jge
imul
mov
xchg
filds
ja
xor
mov
ja
imul
mov
mov
les
cmp
push
inc
test
repz
loop
aaa
jle
mov
fistps
fisttpll
inc
xchg
add
mov
loop
xlat
outsl
and
cmp
lods
stos
fadd
push
cltd
sbb
roll
je
mov
adc
shll
ret
arpl
nop
ss
shlb
jb
inc
sub
lods
rcrl
inc
mov
insb
jmp
pop
cmpsb
mov
xchg
int3
mov
stos
xlat
repnz
push
test
xchg
mov
hlt
stos
cmp
xor
adc
jno
popf
sub
adc
push
hlt
and
fnstenv
cmp
cmpsb
mov
mov
mov
jle
in
mov
int3
xchg
inc
out
adc
in
sahf
inc
test
push
jl
ljmp
mov
loope
fcomp
lcall
loopne
mov
mov
gs
mov
imul
inc
hlt
into
or
sbb
aaa
push
pop
pop
inc
stos
int
pop
stos
push
cmp
inc
jo,pn
adc
mov
add
int
es
scas
or
cmp
jno
dec
cwtl
rep
sub
jne
jle
pop
pop
jp
cmc
add
jmp
clc
push
cmp
add
lret
sbb
pop
rcl
pop
aam
jmp
jns
inc
or
scas
pop
push
test
incb
sub
out
adc
mov
push
jecxz
fwait
push
jnp
pop
cwtl
jb
pop
inc
or
das
and
into
pop
sbb
mov
out
dec
cld
mov
sahf
shrl
fdivrl
sub
cli
inc
aad
in
jp
pusha
fsts
or
xchg
fsubl
adc
std
or
int3
and
das
idiv
push
pop
scas
pop
jb
fwait
jb
in
jg
shlb
cmp
hlt
dec
cmp
pop
mov
xchg
loop
enter
dec
into
out
inc
lret
and
inc
mov
sbb
stc
jmp
leave
shll
xchg
dec
xor
sbb
sbb
xor
mov
jmp
jge
lcall
es
int3
pop
test
mov
lcall
lcall
int
repnz
sub
and
jp
add
fistl
mov
fimuls
xlat
jecxz
jp
push
push
inc
mov
stc
push
mov
insl
xor
xchg
iret
scas
xchg
ja
fisttpll
loopne
ret
xor
lret
fwait
sub
scas
adc
sahf
cmp
cmp
jne
sub
add
lock
sub
and
out
jnp
dec
mov
jbe
in
mov
mov
lea
cmp
push
jmp
mov
pop
fmull
jmp
mov
out
mov
jle
xor
outsl
pop
in
mov
rcll
or
pushf
dec
rcrb
pop
ja
rclb
das
mov
out
hlt
or
imul
movsl
inc
cmp
push
test
fnsave
ret
outsb
insl
loop
adc
jl
mov
ja
fdivs
lahf
scas
xchg
into
dec
mov
rorl
hlt
add
into
call
out
mov
out
popa
fwait
dec
mov
loop
ret
fsts
into
lcall
jnp
pop
fs
jge
enter
pop
adc
xchg
aas
out
outsl
or
mov
jle
dec
pop
or
fcmovnbe
adc
push
push
inc
movsb
sti
inc
sarl
pop
jmp
jle
shlb
xchg
sub
sub
and
sub
and
cmp
es
jmp
scas
push
jo
shll
or
jle
push
cwtl
aam
jmp
cmp
xlat
dec
test
xor
aad
lcall
fwait
mov
lods
add
stc
mov
ss
fsubrs
outsl
les
add
loopne
jl
shrl
sbb
pop
mov
mov
lods
inc
imul
and
shrb
sub
sbb
in
jp
loope,pn
fnstsw
rcll
mov
and
lds
xchg
cmp
xchg
jbe
or
stos
es
sub
and
cwtl
dec
mov
stc
or
or
add
add
cmc
icebp
push
test
mov
clc
jne
clc
inc
daa
mov
ja
jmp
nop
pop
std
aas
mov
add
fucom
push
mov
fstpl
mov
cmpl
out
mov
or
dec
jae
outsb
aam
out
daa
mov
inc
inc
jo
dec
sbb
dec
mov
adc
push
sbb
mov
icebp
inc
fdivs
ja
jo
fistl
mov
xchg
mov
dec
loope
je
aas
pushf
push
in
nop
fsubrl
xor
sub
scas
popa
pop
and
or
lahf
jecxz
hlt
sub
xchg
ret
push
xchg
push
adc
insl
pop
dec
cmp
loopne
lods
xorl
movsl
in
dec
shll
or
lods
jb
mov
mov
loopne
pop
aaa
jne
or
pop
jge
pop
jle
adc
lods
movsb
adc
fdivp
dec
sub
fisubs
aam
xor
insl
es
jne
idivb
add
cmpsb
lcall
decl
cld
or
div
inc
addr16
dec
loop,pt
repz
push
fstpl
push
xor
repz
xchg
jae
gs
adc
ret
jnp
inc
and
pop
sbb
push
repz
jo
dec
add
lock
xchg
cltd
cmp
dec
and
js
loope
stos
jle
mov
int
push
mov
push
sub
dec
shl
incb
adcl
mov
imul
or
ja
pop
dec
lea
mov
add
insb
fmull
outsb
xchg
ljmp
in
insl
inc
inc
rorl
add
mov
adc
push
in
jp
adc
adc
fldt
lahf
in
les
jmp
jp
dec
jns
stc
push
test
or
fwait
pop
ret
pop
inc
pop
dec
pop
out
ljmp
xchg
pop
mov
jbe
push
mov
les
pop
filds
add
loopne
dec
loop
jns
or
push
mov
jmp
push
sbb
fiaddl
mov
cmp
loopne
cmp
ss
insl
ljmp
xor
lods
lods
pop
fsub
shl
sub
or
cltd
int3
fsubrl
inc
cltd
repnz
inc
sbb
or
mov
fprem
pop
je
sti
in
daa
add
fistps
rcll
int
mov
jp
cmp
mov
orl
stos
mov
mov
rorb
pop
jmp
inc
leave
push
xor
ljmp
cs
xlat
cld
aam
fcomi
adc
jbe
fisttpl
fnsave
repnz
ret
ret
pop
movsb
sub
xor
jecxz
mov
xchg
push
fdivl
mov
jbe
sbb
dec
dec
js
mov
lahf
repz
mov
scas
mov
outsb
cmc
cs
add
movsb
out
mov
inc
int
and
mov
arpl
enter
shr
mov
out
sarb
pop
cwtl
cmp
popa
inc
cmpsl
testl
arpl
cmp
cmp
fstps
xor
pop
rorb
push
lds
popf
mov
lock
inc
pop
push
movsl
and
mov
sahf
lahf
sub
das
mov
scas
lret
in
sbb
out
testl
or
test
insb
push
push
jp
pop
inc
jb
ss
push
call
out
push
pop
pop
aaa
or
jl
movsl
pop
daa
loopne
cltd
push
mov
lcall
inc
push
push
ficoml
fwait
push
popl
imul
fstpl
mov
push
ffree
add
inc
fcomp
sti
fistl
out
movsb
jmp
das
mov
sub
pop
or
or
push
scas
loop
sub
sub
pop
cwtl
nop
mov
lea
pushf
fwait
dec
add
test
lods
mov
mov
sahf
lea
sarl
fldenv
jo
push
cmp
push
and
mov
mov
fdiv
add
mov
into
dec
outsb
into
sbb
cmpsb
mov
popa
inc
mov
sbb
push
outsb
mov
dec
cmp
lret
and
jp
push
jmp
add
in
pop
pop
or
mov
sbb
xchg
push
and
add
out
xorl
rorb
pushf
xorb
test
and
xlat
inc
jmp
xorb
pandn
clc
in
out
pop
in
push
scas
xlat
mov
jl
xchg
push
loop
push
call
dec
in
loopne
lods
scas
and
sub
fcmovb
add
push
mov
xlat
sub
lcall
xchg
sti
pop
pushf
es
lds
rolb
xchg
popf
lahf
jns
sbb
sti
loope
out
sub
xchg
add
mov
js
loop
stos
cmp
outsl
jne
pop
mov
xchg
xor
pop
jmp
scas
enter
adc
movsb
lock
js
jmp
enter
es
xor
mov
inc
or
int
imul
pushf
cmp
ror
loop
das
arpl
out
push
idivl
xor
mov
movsl
sbb
cmpsb
xlat
pop
and
jae
and
fisubrl
mov
out
ret
popa
jmp
aaa
movsl
insb
jl
divb
test
loop
mov
lcall
out
aad
xchg
repz
lret
lea
hlt
adc
in
mov
sub
cmpsb
jecxz
jbe
push
xor
push
mov
mov
mov
cmp
xchg
inc
sbbl
cmp
mov
xor
sbb
das
lahf
sbb
shl
call
jne
xor
inc
lods
sbb
in
insl
test
insl
sbb
push
push
adc
pop
je
jp
fs
push
sub
jns
pop
pop
add
jns
mov
stos
and
mov
aad
xlat
or
shrb
cld
pusha
call
inc
lods
in
jb
outsb
into
test
mov
mov
mov
inc
sub
roll
fstpt
dec
add
adc
cmpsb
sub
push
cld
or
int3
in
dec
inc
jle
out
roll
test
lods
lret
aas
loop
cmp
adc
out
dec
adc
cmp
jae
add
xor
shlb
in
xchg
shlb
cmp
push
movsl
cltd
add
pushf
jge
or
jecxz
movsb
scas
dec
cmp
mov
mov
or
aad
loope
repz
jmp
jl
sbb
cmp
sbb
inc
je
cmp
rep
jl
or
pop
xorl
call
jns
or
mov
test
mov
mov
les
out
clc
push
lods
sarb
lds
arpl
add
lods
pushf
dec
cs
and
mov
aam
xor
sbb
fwait
mov
or
inc
nop
cltd
rclb
in
pusha
cmp
add
fmul
push
inc
fsubrs
pop
scas
in
adc
push
movsl
dec
add
fistpl
xchg
dec
cmp
filds
fisttpll
movsl
xchg
sti
add
or
and
sbb
std
and
inc
les
data16
and
jp
mov
dec
mov
scas
mov
or
jecxz
rcrl
ds
cld
mov
shrl
push
sahf
les
lcall
loopne
adcb
adc
jo
jge
pop
xor
lret
adc
cwtl
jp
inc
dec
cltd
push
ja
jb
int
cmc
adc
dec
mov
jo
cli
mov
popa
xchg
adc
xor
cmpsl
jecxz
push
adc
ret
push
pop
sbb
lods
add
enter
fcmovu
or
push
stos
xor
lcall
leave
popf
nop
fmuls
lret
test
sbb
sub
lea
andb
dec
call
psubb
adc
mov
loope
sub
div
sub
mov
pop
xchg
sbb
mov
add
std
inc
or
adc
inc
jb
sub
repz
jae
out
testb
shlb
mov
out
mov
div
addr16
mov
test
lock
xor
jnp
push
sub
pop
mov
popf
mov
sub
mov
cmpsl
dec
lea
jno
jmp
jne
dec
or
dec
cmp
insl
cmpl
shl
int
and
sahf
xor
pusha
mov
xchg
aas
cmp
out
in
stos
mov
adc
mov
xlat
stos
sub
outsb
push
out
jp
sbb
push
xchg
mov
jg
mov
fdivs
jg
jg
sub
or
pop
aas
sbb
pop
fisubl
repz
aaa
add
daa
pop
mov
pop
mov
in
enter
test
popa
jmp
jl
mov
scas
sub
adc
dec
in
pop
xchg
js
or
sub
pop
push
cwtl
adc
fwait
clc
test
loop
out
and
fstpt
subl
xchg
push
subl
xchg
cmpb
ficoml
or
xor
gs
lock
mov
loope
pop
inc
pop
arpl
add
adc
cld
lret
lea
cmp
xchg
in
mov
insl
mov
or
into
loopne
cs
mov
jmp
mov
repz
stos
dec
cmp
push
push
roll
icebp
xlat
sarb
add
xor
mov
mov
loopne
cmpsb
testb
dec
cmp
dec
div
or
std
rcr
fnstsw
jmp
stos
xchg
jno
cli
mov
clc
push
lods
stos
mov
or
js
dec
into
pop
mov
sbb
test
push
sbb
mov
aaa
jo
jnp
pop
bnd
stos
pop
mov
pushf
leave
fincstp
mov
insl
cmp
xchg
xchg
int
pop
insb
sbb
insl
jb
repz
or
pop
lock
xor
rorb
adc
std
cmpsb
popf
or
jne
fpatan
nop
add
and
adc
fisttpll
cli
enter
gs
in
xchg
mov
sti
in
push
fs
sub
and
lcall
and
lods
push
out
cmc
ret
popf
xchg
or
xchg
or
fnstsw
cltd
bound
rcrb
mov
adc
xor
bound
mov
mov
adc
in
test
jge
pop
out
cmp
push
jp
in
mov
ret
mov
and
cwtl
xor
push
xorb
and
fdivs
mov
aad
dec
dec
xor
push
adc
int3
outsb
popa
divl
mov
test
push
jbe
pop
sbb
push
rorl
push
cmp
je
adc
fsubrs
xor
lea
and
mov
testb
adc
push
pusha
jae
jns
xchg
rclb
inc
jmp
test
push
jns
mov
popa
ror
outsl
sub
sbb
je
push
sbb
enter
iret
jnp
loope
add
jno
das
inc
shl
arpl
enter
pop
xor
rcrb
push
dec
lock
inc
mov
cmp
add
stc
inc
pop
std
mov
inc
dec
test
mov
das
sub
test
clc
xor
daa
fadds
std
repnz
arpl
xor
sbb
sar
dec
add
insl
mov
cmp
xchg
andl
cmp
pop
pusha
shrl
sti
and
mov
jge
mov
cs
in
sub
fdivl
sub
mov
mov
sbb
fwait
mov
push
push
mov
pushf
insb
pop
aas
or
in
xlat
mov
jmp
std
inc
aam
cmp
in
mov
std
mov
fiaddl
xor
fsubrs
add
push
dec
sbb
pop
or
call
mov
and
add
and
arpl
xchg
cmpsb
xchg
sub
sahf
fnstcw
cmpsb
jmp
icebp
loopne
adc
popa
add
pop
add
scas
adc
mov
mov
jmp
dec
insl
pop
jb
sahf
add
sbb
lea
push
loop
add
jns
addr16
pop
jne
sub
adc
jne
mov
rorb
ss
leave
jg
add
add
mov
xor
inc
add
lcall
pop
inc
cmpsl
cwtl
adc
add
or
sub
adc
cmc
mov
loope,pt
jne
and
lahf
adc
clc
sbb
push
test
cmpsb
ljmp
je
pop
inc
cmp
std
fnstenv
sub
int
pop
sbb
jbe
popa
imul
jne
cmpsb
add
test
push
cmpb
faddl
push
inc
mov
cld
xlat
sub
pop
cmp
pop
mov
xchg
into
not
aas
popaw
sub
push
and
cmpsl
cmp
test
xchg
push
jb
push
cs
jecxz
push
fiadds
pop
lret
ja
and
push
lods
mov
fisubs
in
lds
movsl
cli
cmp
std
out
cwtl
and
mov
and
lea
sub
shll
fisubrs
inc
imul
adc
mov
inc
mov
aas
mov
arpl
insl
push
movsl
xor
aam
leave
push
test
pop
sub
push
je
popa
mov
inc
idivl
loopne
adc
adc
dec
int3
cmp
aas
push
insl
popf
adc
xchg
negb
adc
out
inc
jmp
mov
rcr
push
stc
shlb
popa
mov
mov
test
adc
cwtl
dec
add
jne
cld
push
incl
fs
clc
call
and
sub
sbb
aas
inc
sahf
out
jnp
cmp
and
push
imul
xlat
sahf
jmp
imul
stc
insb
bound
iret
sbb
or
int
sub
in
cmp
test
jmp
mov
clc
inc
lea
mov
pop
and
aas
xchg
fnsave
orb
or
ret
aam
xchg
ss
movsl
adc
dec
adc
mov
les
inc
sarl
add
imul
je
jmp
fiaddl
lods
mov
and
lods
rdtsc
xor
sub
pop
ja
addr16
mov
push
mov
sub
jecxz
or
insl
js
dec
push
or
ds
xchg
test
jge
lods
imul
out
lret
cmpsb
sbb
popa
das
sub
mov
pusha
dec
jge
dec
shlb
pop
or
lret
add
outsl
lcall
fstps
divl
ja
or
hlt
cltd
mov
fdivrs
sbb
mov
call
jae
pop
mov
insb
pushf
push
sarl
pop
dec
icebp
arpl
arpl
push
adc
push
sahf
fisttpl
sub
adc
pop
es
inc
popa
inc
xchg
mov
lods
mov
std
dec
aad
jmp
pop
xor
bound
insl
dec
dec
rcl
ljmp
dec
pop
push
das
jb
add
add
sbb
out
add
cmp
cmc
mov
xor
jb
jecxz
lahf
push
cmpsl
iret
cwtl
fildl
out
jmp
stos
and
les
adc
sbbb
mov
imul
adc
test
pop
leave
sub
sbb
test
mov
aas
rcl
push
movsl
out
enter
inc
repz
sbb
scas
idiv
mov
mov
adc
shrb
push
dec
outsb
mov
inc
pop
xchg
lock
mov
xchg
adc
jne
inc
and
addl
pop
lock
mov
shlb
xor
xchg
inc
add
push
imul
sub
enter
jg
sahf
fadd
push
test
iret
stos
push
negl
pop
xchg
mov
sub
sbb
repz
jae
std
in
repnz
movsl
dec
mov
xor
xchg
lahf
outsl
into
jecxz
xchg
pusha
filds
pop
push
dec
mov
or
jge
sbb
dec
dec
jge
pop
mov
inc
pusha
hlt
mov
cmp
dec
add
sbb
test
popf
add
xchg
mov
add
and
gs
and
dec
xchg
ret
lods
xor
mov
lcall
scas
movsb
or
sarb
mov
mov
dec
cmp
roll
fisubs
add
hlt
repnz
mov
imul
xchg
jo
jg
lret
leave
pop
dec
adc
xchg
sti
rcll
jp
dec
aas
shrl
add
xchg
rolb
sbb
and
jp
xchg
xlat
in
outsb
or
and
aas
lret
jae
je
lret
scas
mov
insb
mov
popf
fidivrs
xor
loop
push
cmc
jne
adc
sub
cltd
enter
lods
lock
cli
mov
pop
mov
fisubl
and
loop
xor
jg
adc
push
imul
jnp
cmc
pop
pushf
adc
test
rorl
xor
sub
rclb
fs
dec
mov
out
mov
push
sub
outsl
dec
mov
mov
xchg
push
mov
cmp
add
inc
shl
outsb
jns
mov
jne
popf
cmp
mov
push
or
sahf
xchg
fwait
repnz
add
out
mov
popl
loopne
mov
fwait
in
mov
in
and
push
inc
or
sbb
int3
je
into
jbe
nop
pop
test
mov
inc
test
push
pushf
jb
fistpl
jb
dec
adc
loope
mov
cmpsl
push
jno
mov
scas
shl
sbb
inc
xor
jecxz
ds
lea
mov
sub
adc
int3
gs
loop
jne
enter
lds
popf
and
cmp
mov
fnstsw
mov
dec
or
mov
loop
mov
xor
popf
pop
mov
xchg
dec
adc
cmp
sahf
or
jnp
cmp
inc
lods
decl
in
push
and
std
testb
adc
inc
mov
or
fisttpll
cmpsl
roll
sub
adc
mov
jge
cmovb
sub
or
xchg
jae
push
int
xchg
pop
pop
dec
aad
jns
push
push
inc
sbb
iret
mov
scas
lods
xchg
aaa
lret
xchg
add
cli
stc
mov
mov
cmc
pop
sti
xchg
mov
xchg
add
or
cmp
loope
sub
aas
or
push
ds
push
push
cmpsl
inc
call
scas
mov
pop
pop
or
xor
inc
scas
dec
and
lock
insl
in
iret
loope
mov
or
cmp
pop
outsb
mov
fidivrs
loopne
mov
lea
sub
push
ds
ss
mov
mov
hlt
leave
push
shlb
push
outsl
cmp
sbb
jg
js
mov
adc
enter
push
and
push
cmc
je
cmp
in
or
xchg
ljmp
mov
inc
out
mov
adc
lds
lock
pop
bound
loop
into
insl
push
mov
xor
mov
subl
xchg
jbe
lahf
pop
push
out
adc
mov
cmp
scas
cmp
pop
fdivr
lcall
sub
hlt
orl
pusha
sub
fnstcw
ljmp
out
xchg
pop
andl
and
ja
sbb
gs
jg
xchg
aad
inc
out
mov
bound
xchg
mov
hlt
pop
addr16
movsl
push
mov
xor
into
xor
mov
cmc
adcl
sbbb
addr16
test
jl
or
add
pop
pop
jmp
jle
loopne
loop
pop
adc
loope
mov
push
hlt
jmp
xor
push
jnp
mov
xchg
rorl
sar
bnd
mov
lock
subl
scas
int
stc
mov
lret
xchg
push
ja
gs
scas
dec
cltd
fnsave
jg
std
dec
mov
and
cs
cltd
pop
or
pcmpeqb
push
dec
cmp
lahf
lahf
xor
xor
iret
imul
bound
loope
call
cmc
xchg
cmc
lret
dec
xchg
lahf
mov
in
es
mov
ud1
fsubp
je
push
adc
iret
adc
shl
inc
xor
push
push
cmp
xchg
sbb
adc
or
jp
inc
fisttpl
roll
in
pop
pushf
add
add
aaa
sarl
sub
push
adc
mov
lds
pop
movsb
aam
push
xor
je
dec
add
dec
mov
or
in
add
test
xor
cli
shl
mov
cli
neg
push
mov
cmp
jns
arpl
mov
mov
mov
sbb
or
pop
xchg
add
cli
scas
outsl
pop
inc
stc
pop
mov
mov
sub
ja
jne
cs
sahf
and
testb
shrb
xor
cmpsl
mov
sarl
and
movsb
shll
jnp
pop
push
xorb
jb
outsl
scas
add
outsb
sub
xchg
fdivl
sarb
rolb
adcl
sbbl
push
xor
push
loope
out
leave
ret
xchg
sub
rorl
fincstp
jbe
popf
jae
call
cs
mov
and
out
jmp
cmp
pop
sbb
mov
dec
xor
ljmp
xchg
adc
pushf
repz
insb
push
mov
sbbb
nop
or
sbbl
mov
mov
into
imull
sti
ss
aas
pop
test
mov
loop
lcall
xor
pop
lret
mov
jae
dec
push
dec
ror
cmp
ljmp
ret
cmpsb
test
xchg
arpl
pop
out
cltd
jge
fsub
mov
or
mov
mov
je
roll
add
dec
sub
or
dec
pop
das
fdivrl
ficompl
xchg
stos
icebp
paddq
cwtl
jl
or
cwtl
push
add
inc
xchg
fadds
push
iret
dec
xor
hlt
xchg
inc
lcall
xchg
fmull
pop
and
insb
sub
mov
jb
data16
cmp
xchg
in
clc
mov
or
push
mov
cmp
xor
push
mov
jp
sbb
mov
mov
and
cmpsb
xchg
mov
sbb
cmp
mov
loope
sub
jbe
push
mov
daa
jecxz
pop
ficompl
jbe
shl
mov
lahf
sub
cmpsl
fsubrs
or
mov
push
popa
pop
std
sub
push
mov
mov
rcl
inc
adc
push
or
repz
push
addb
mov
aas
xchg
outsb
mov
dec
cmp
addr16
push
mov
outsl
int
cwtl
mov
roll
mov
lret
lock
repz
xor
cs
adc
lods
bound
sbb
inc
sub
xchg
push
inc
jg
in
hlt
cmp
notb
cmp
adc
jg
divl
mov
mov
add
inc
push
and
shlb
in
sub
loop
inc
fdiv
pop
and
cli
jbe
lea
add
aam
cmp
push
in
clc
cltd
dec
or
mov
movsl
pop
mov
mov
dec
loop
or
ss
pop
aas
add
arpl
dec
imul
insb
jecxz
add
incb
lret
xchg
adc
scas
int3
jl
iret
dec
test
int3
fimull
add
cld
mov
adc
xor
scas
and
adc
lcall
xor
lahf
loop
jle
mov
insb
push
dec
mov
pop
arpl
mov
cmp
sub
cmc
dec
lds
mov
aad
notl
jnp
lods
into
and
and
imul
xchg
shrb
xchg
push
sbb
or
sbb
xor
in
shl
lret
loopne
xchg
pop
out
outsl
mov
and
mov
push
mov
add
lret
jge
enter
or
pop
adc
call
jl
cmp
sbb
js
imul
dec
outsl
add
lea
hlt
lods
dec
push
cltd
mov
int3
repnz
out
lcall
gs
jg
movsb
xchg
sbb
shrl
lahf
xor
scas
and
mov
ljmp
xchg
fsubl
aaa
xlat
inc
mov
lods
xor
outsb
stos
push
inc
inc
cmpsl
inc
in
fisubs
sbb
pop
jnp
mov
out
test
mov
xor
and
cmp
add
fisubrl
cmp
sub
xchg
lcall
jge
sub
sub
pushf
insl
das
imul
movsl
adc
hlt
int3
fidivrl
add
inc
mov
scas
int3
arpl
dec
mov
test
daa
outsl
js
jb
nop
loopne
xchg
iret
push
sti
jg
cs
push
lods
mov
mov
jns,pn
cs
cmc
jmp
jg
pop
add
shr
xchg
ljmp
mov
and
push
arpl
out
loop
dec
sub
aas
test
push
scas
and
stc
fnstsw
jge
das
cmp
add
pop
cmc
jae
mov
push
test
jp
xor
pop
imulb
lcall
xchg
cmpsb
insl
fistps
jbe
mov
and
out
pop
test
add
sub
rcr
pop
enter
adc
jbe
bswap
fstpl
add
dec
loopne
out
push
sub
pop
fimull
call
pop
in
test
hlt
sub
mov
mov
stos
movsl
cmp
or
push
xlat
cli
ret
adc
int
mov
lods
add
adc
adc
out
mov
stos
lret
cmp
jnp
mov
pop
lahf
xor
jl
mov
fcoms
clc
jecxz
inc
rolb
lods
push
push
mov
pop
inc
adc
cmpsl
push
mov
or
insb
iret
jg
pop
rol
mov
xchg
jg
or
dec
pop
push
test
ljmp
aad
dec
jne
push
out
adc
call
in
adc
repz
and
enter
push
pop
mov
into
mov
sarb
aad
add
fistps
daa
inc
push
xchg
cmc
cmp
or
dec
pusha
pop
pop
popa
adc
inc
pop
dec
or
insb
jle
fwait
das
pop
aas
lock
cmp
jns
rcrb
xchg
dec
jb
insl
adcb
push
mov
loope
sub
imul
stos
rcl
fisubs
andl
scas
xor
cli
cmp
jge
xor
xor
test
sub
jns
jb
inc
xorl
es
adc
sbb
out
mov
jno
add
int
movsb
xchg
lods
sub
pop
testb
pushf
jecxz
loope
mov
int3
mov
mov
stc
add
fsubs
repnz
cmc
add
mov
and
bound
pop
nop
fucomi
add
fs
mov
fldcw
shlb
sub
fadds
or
jecxz
mov
out
mov
inc
sbb
sbb
addb
mov
adc
or
mov
fistl
mov
out
into
fstps
cs
rorl
xchg
xchg
xor
dec
inc
or
cli
rcrl
inc
test
aaa
sub
jno
xor
mov
call
outsb
test
dec
ss
push
std
aam
cmp
icebp
sahf
adc
pop
push
leave
std
sbb
in
inc
pop
imul
mov
cmp
jge
subl
mov
frstor
dec
jns
inc
sti
or
xchg
outsb
ss
and
jno
sbb
inc
in
jns
or
mov
daa
or
sub
sti
mov
push
nop
cmpsb
mov
lea
mov
mov
repz
jecxz
pop
dec
mov
push
push
mov
nop
and
hlt
jl
call
test
mov
jo
outsb
mov
hlt
scas
inc
sub
jne
ficoml
test
std
fstl
jmp
das
insb
adc
inc
repz
insb
sbb
pop
divb
cmc
add
leave
clc
dec
push
add
add
pop
mov
add
mov
cmp
mov
mov
pushf
mul
imul
xchg
in
pop
sub
xchg
sub
fiaddl
xchg
popf
inc
cmpsl
push
and
and
shrb
mov
lea
ja
jecxz
fwait
mov
lret
cmc
push
mov
push
mov
adc
mov
rorl
pop
je
lods
scas
orl
ss
push
sub
stc
scas
rorb
dec
jg
fnstenv
cmp
mov
jmp
sbb
fisttpl
jmp
repz
call
jbe
aas
in
inc
jne
sub
push
pop
or
aaa
loope
lods
pop
ljmp
aaa
push
popf
mov
shl
pop
cmp
je
int
push
mov
push
popf
insb
call
das
push
sti
mov
mov
out
and
fdivr
mov
inc
adc
fnstsw
repz
dec
loope
cld
xor
call
sub
inc
mov
cmp
mov
movsl
loopne
out
jae
mov
les
cld
inc
and
inc
jb
lods
shlb
push
jmp
mov
pop
repz
xchg
dec
pop
fbstp
arpl
negb
push
add
es
push
frstor
cltd
sahf
add
shrb
mov
push
jo
aaa
xor
mov
and
xchg
and
mov
out
arpl
jne
sbb
jge
jmp
popf
pop
frstor
xchg
cli
pop
jae
cmpsb
inc
mov
sarl
popf
lahf
inc
dec
mov
xchg
dec
call
pop
fstps
xor
negb
loope
repz
xchg
xchg
jmp
sub
xchg
bound
fwait
cmp
push
loopne
inc
jno
push
cs
push
jp
pop
in
shl
xchg
out
addr16
jae
ds
int3
mov
sti
repnz
popf
sub
out
push
jns
jno
cltd
mov
movsl
lret
fidivrs
pop
jp
jb
pop
xchg
xor
sub
push
jge
stos
pop
outsl
call
decb
icebp
sbb
and
rclb
mov
add
daa
cs
jp
sub
dec
sbb
test
or
lods
sbb
jle
adc
dec
sbb
bound
stc
fstp
roll
push
push
add
adc
sbb
mov
mov
mov
fbstp
clc
jp
pop
cmpb
mov
popa
addr16
xchg
in
and
out
pop
and
das
clc
arpl
leave
adc
shl
add
push
jle
shlb
or
je
and
sbb
push
ret
adc
xor
loopne
rcl
hlt
ljmp
in
fadds
add
test
add
incb
loop
add
lods
push
xchg
or
enter
cmc
jns
rclb
inc
repnz
mov
out
sbb
dec
xor
popf
and
jg
andl
pop
inc
add
icebp
jns
out
inc
mov
mov
push
loope
imul
xchg
in
aad
pushw
lods
mov
mov
outsb
jecxz
js
cmp
lods
xchg
loop
inc
lods
cmp
loope
adc
jnp
inc
mov
call
loope
shrb
or
aam
xor
les
inc
mov
push
or
inc
sbb
iret
or
xchg
sbb
add
or
lret
and
xor
push
add
imul
mov
inc
ljmp
pop
xchg
and
lea
push
outsl
add
sbb
adc
jmp
xchg
out
pop
or
mov
inc
push
inc
push
jns
inc
shlb
add
sidtl
movb
enter
or
inc
fisubrs
pop
sub
sub
js
sub
cmp
push
pop
sub
adc
mov
adc
xchg
pop
jnp
jns
mov
test
cmp
jle
adc
fadds
and
cmp
cli
sub
pop
lds
movsb
dec
dec
lgs
cmp
mov
shll
jg
test
xchg
sub
push
pop
jle
fdiv
jnp
cmp
fcmovbe
xor
rolb
inc
jge
adc
jg
pop
fs
popa
or
mov
rol
add
lods
fcom
jmp
cmc
and
lret
bound
mov
xchg
mov
int3
in
imul
mov
mov
icebp
sub
cltd
lea
xchg
aaa
push
adc
inc
daa
mov
das
fucomip
mov
push
jmp
sbb
mov
mov
sub
mov
ja
mov
lret
arpl
mov
dec
sub
add
inc
test
cld
pop
js
push
jmp
cmp
mov
sti
mov
call
pop
mov
fs
repz
sbb
mov
les
xor
aam
int
mov
adc
sbb
inc
pop
xchg
iret
xchg
dec
or
inc
xchg
dec
mov
pop
bound
in
jge
lret
pop
mov
aas
and
adc
adc
in
sbb
cwtl
push
cld
adc
fsubp
mov
sub
inc
shll
ret
adc
jg
insb
push
inc
cmpb
daa
pushf
xchg
outsb
mov
add
mov
ror
inc
or
cmp
test
mov
sbb
data16
imul
out
repz
mov
sbb
icebp
xor
out
push
aad
mov
pop
popf
sarl
test
cs
xlat
adc
push
xchg
mov
outsl
sbb
xor
lahf
adc
push
mov
test
rolb
popa
in
adc
mov
sti
add
sbb
and
sub
jns
cltd
xorl
movsl
sub
shlb
stos
mov
add
adc
inc
inc
popa
test
icebp
insl
jo
mov
test
outsl
ja
loop
adc
enter
mov
push
lret
movsl
stos
adc
fucomp
out
addb
sbb
subl
pop
imul
aad
in
xlat
aad
jge
jae
sub
pop
loope
mov
inc
lods
pushf
adc
icebp
fmuls
fldt
dec
mov
cwtl
pushf
mov
xor
and
pop
out
leave
mov
sub
les
popa
jo
cmpsl
cmp
adc
fnsave
popa
test
adc
or
mov
jmp
dec
jno
mov
cmp
sub
lcall
xor
imul
jbe
in
xor
push
stc
lods
not
and
iret
imul
dec
imul
pop
in
cmpsl
mov
add
push
shll
imul
orl
mov
fdivs
fs
cmpsl
pop
pop
and
sbb
jns
filds
push
lea
mov
sbb
nop
test
jbe
xchg
xor
jbe
xchg
push
jmp
and
jle
cwtl
out
mov
push
cmpsb
mov
push
insb
sub
mov
add
pop
pushf
popf
add
xchg
leave
xchg
jne
mov
pushf
jbe
jge
and
xchg
inc
iret
imul
decb
mov
mov
or
mov
and
mov
mov
inc
imul
mov
sub
push
rorl
push
mov
or
push
mov
cld
inc
arpl
int3
stos
add
aad
cmp
fnsave
arpl
fwait
or
pop
sbb
xchg
sarl
mov
je
cs
dec
cmp
bnd
inc
xchg
inc
std
les
mov
add
xchg
push
push
into
mov
mov
or
fcompl
and
mov
enter
pop
xchg
inc
cltd
lret
ret
xchg
aad
mov
ss
mov
inc
push
inc
jp
and
mov
add
orb
mov
jnp
pop
mov
xchg
mov
mov
lret
sarb
or
fmul
push
push
lods
push
jo
in
je
out
push
ja
popa
movsb
in
loope
sbbb
adc
dec
and
stos
ljmp
lea
xor
inc
int
in
inc
vdivps
rcrl
pop
sti
push
mov
cltd
and
les
aaa
scas
jne
sarl
pusha
pop
mov
int
mov
mov
pop
into
dec
sahf
push
daa
mov
stc
or
jbe
pop
mov
rcrb
dec
das
jge
stc
xor
pop
pop
jp
pushf
sbb
sbb
hlt
mov
out
cmc
int3
fsubs
jo
mov
pop
mov
rclb
cmpsb
xchg
dec
jae
dec
ds
int
add
shl
mov
scas
add
cmp
mov
jg
call
jp
fcmovbe
pop
mov
jae
vbroadcasti64x4
ret
pop
pop
sbb
sbb
add
mov
std
jmp
mov
sbb
push
jg
mov
mov
adc
dec
jmp
rcll
addr16
mov
and
cltd
jl
cmpl
add
push
mov
stos
mov
xchg
mov
push
cli
mov
add
add
ss
mov
xchg
stos
movsb
push
fdivrs
iret
imul
mov
outsl
dec
inc
cmovae
notl
sbb
lahf
add
ljmp
icebp
pop
repz
cmp
or
inc
add
and
push
sbbl
or
jle
stos
rclb
hlt
mov
cld
add
scas
out
or
xchg
dec
pop
aam
mov
insl
dec
imul
sub
mov
pop
xor
mov
sub
xor
xlat
mov
inc
inc
iret
in
sbb
inc
dec
mov
mov
aad
sub
cltd
pop
stos
stc
add
fs
mov
pop
imul
add
dec
cmovno
fwait
xor
sbb
addb
push
jl
add
xchg
cmpsl
dec
sti
fucomi
or
fwait
xlat
aas
int3
pushf
xchg
inc
add
dec
mov
adc
repnz
jnp
cmp
cli
popa
loopne
or
test
in
mov
and
mov
dec
jmp
mov
cld
ljmp
or
sub
push
outsb
mov
jae
aad
push
rcr
out
add
pop
shrl
divb
les
es
cmp
push
sbb
addr16
shrb
inc
jno
mov
ret
xlat
and
jnp,pt
fs
arpl
fisttpl
pop
sbb
fcoms
ljmp
std
jmp
shlb
mov
push
hlt
jmp
inc
mov
pop
push
xchg
stc
cltd
pop
fisttpl
adc
ret
imul
imul
dec
jnp
push
xor
not
mov
hlt
jecxz
jne
mov
std
mov
xchg
push
jbe
hlt
ja
negb
pushf
dec
cltd
daa
lds
adc
ret
rclb
xchg
movsl
cmp
pushf
xchg
adc
insb
or
lret
sub
fsubrl
jno
cltd
pop
cmpl
add
push
mov
jne
inc
mull
xor
ficoml
fildll
cmp
adc
dec
loop
loope
mov
add
sarb
xchg
mov
neg
jns
popa
pop
add
add
sbb
outsb
je
cmp
cltd
loope
cmpsb
shufps
test
inc
out
mov
test
scas
jb
test
lods
cmpsb
cmp
push
push
xor
sarb
in
sbb
dec
push
push
lds
addr16
push
sbb
xor
movsb
cmp
or
adc
movsb
into
jns
inc
lea
inc
lcall
push
insl
dec
inc
push
pop
dec
sbb
or
mov
mov
adc
sbb
aam
orb
xlat
push
mov
scas
outsl
jle
push
mov
and
lret
lcall
faddl
xor
inc
push
cmpb
xorb
jb
push
push
mov
pop
sub
jl
repz
push
mov
inc
mov
rorb
or
lock
mov
adc
aad
xor
dec
sbb
into
hlt
xor
jmp
adc
mov
lcall
fisubrs
inc
scas
sbb
dec
mov
fcompl
adc
outsb
shlb
sbb
paddsb
jl
int
mov
add
xor
fistpll
notb
or
lock
shll
movsb
dec
adc
sbb
insl
mov
iret
mov
lods
mov
daa
adc
or
inc
pop
lcall
mov
pop
aad
and
xchg
out
ds
insb
aas
stos
mov
vmovshdup
jge
mov
cmc
pop
sub
pushf
inc
mov
jb
jmp
push
fmul
and
and
sbb
xchg
cmp
add
dec
divb
inc
cmp
out
or
mov
mov
andl
sbb
test
mov
add
stos
xchg
repz
clc
add
cmp
xor
dec
lock
mov
shrl
adc
int
shll
imull
cli
aas
add
test
int3
jp
pop
insb
pop
jbe
lahf
and
cld
jg
cmp
aad
fildl
scas
popf
sub
cli
arpl
mov
cmp
incl
xor
pop
cld
lods
inc
cs
ret
cmp
mov
pop
adc
add
lock
or
add
pop
nop
and
mov
mov
and
iret
paddusw
dec
xchg
pop
xchg
ja
insl
roll
lods
lret
jp
stos
and
mov
out
jle
jae
enter
sete
loope
jne
movl
jmp
mov
shrl
movb
data16
sbb
cwtl
pop
stos
aas
inc
jp
iret
loopne
pop
mov
adc
arpl
adc
out
add
loope
adc
cs
inc
pop
dec
fisubrl
push
gs
or
popf
push
pop
ja
xchg
push
xor
mov
enter
push
lea
addl
push
xor
jns
imul
add
add
sarb
push
push
ficoml
mov
out
lret
enter
fnstsw
push
jo
es
push
xchg
data16
mov
sahf
icebp
or
pop
pop
sbb
ss
or
cs
lret
outsl
cwtl
shll
and
cs
pop
add
inc
mov
inc
aam
les
push
inc
call
rorl
mov
test
out
dec
fs
cmpsl
ja
in
dec
jecxz
xor
stos
orb
adc
cmp
mov
sti
or
push
mov
fwait
inc
divb
inc
ret
cld
lea
rorl
sbb
test
sub
data16
mov
int3
inc
arpl
ljmp
outsl
mov
jge
cmp
out
cs
sub
mov
jo
cmc
and
xlat
bound
dec
test
cmp
imul
add
jmp
mov
push
int3
sub
ret
aad
mov
mov
movsl
and
imul
mov
pop
dec
outsb
clc
aad
mov
inc
dec
in
or
pop
xor
xchg
popf
xchg
jno
push
int3
pop
iret
fstps
pop
xor
addb
test
lret
in
cli
mov
dec
daa
mov
and
pop
push
xchg
pop
sub
aaa
mov
lahf
pop
outsb
rorb
lods
cltd
shll
xor
scas
sbb
mov
ljmp
xchg
jle
std
mov
scas
push
sbb
pop
js
jl
mov
xchg
into
int3
mov
mov
leave
outsb
inc
mov
out
mov
xchg
pop
mov
dec
and
push
inc
test
push
inc
push
push
ficoms
xor
mov
xor
dec
xchg
or
stos
mov
imul
shll
push
and
xor
shrb
jb
inc
shlb
and
dec
ja
arpl
inc
xchg
inc
mov
adc
dec
mov
sub
push
popa
loope
sub
sub
or
jp
inc
aad
mov
cmp
push
mov
das
sub
popf
jle
mov
popa
cmpsb
dec
xchg
push
sub
adc
loope
sbb
inc
cmp
lret
xchg
jae
insb
sub
dec
std
cmp
mov
or
adc
mov
inc
pop
or
mov
daa
sbb
cld
fisttps
push
int3
ret
mov
shrl
roll
repz
stos
lock
pop
hlt
std
xor
sub
sub
frstor
jl
mov
jae
stc
sub
pop
mov
push
mov
sub
clc
inc
sbb
sub
in
push
lcall
stc
enter
outsl
push
stc
bound
je
cmp
xor
push
js
xchg
jns
into
stos
xor
mov
cmp
push
mov
movsl
stos
lcall
sbb
jle
add
xor
and
aad
out
adc
dec
jge
sar
dec
fidivs
mov
add
fisttpll
test
xorb
xor
dec
adc
xchg
test
mov
sbb
lahf
mov
sbb
in
sbb
jecxz
adc
sub
fsubs
cld
out
adc
js
out
xor
pop
ret
push
in
subb
sbb
nop
stc
scas
popa
pusha
mov
push
lock
inc
test
xor
je
mov
je
loope
ret
into
mov
jge
aad
pop
mov
cmp
inc
mov
jge
cmp
scas
test
icebp
or
add
push
add
or
mov
mov
int
test
sete
sbb
in
in
std
jns
or
insl
loope
adc
loopne
test
cmp
movlps
pop
fildll
loop
xor
jo
out
lods
xchg
or
xchg
xchg
and
cmp
push
into
adc
inc
rcl
mov
push
pop
incl
scas
add
push
andb
pop
pop
adc
sti
cmpsl
aas
sbb
sub
cwtl
in
inc
stc
add
scas
shr
in
cmpsb
test
in
cmpsb
mov
jnp
pop
xchg
inc
and
jle
sub
sub
mov
push
sub
popf
xchg
pop
sub
mov
pop
insb
ret
fwait
les
adc
nop
mov
mov
movsb
adc
pop
decb
and
xchg
mov
mov
lods
loop
cmp
fld1
loop
pushl
cld
mov
pop
pushf
ret
push
or
cmpsl
mov
nop
dec
dec
dec
pop
clc
imull
fsubr
jle
cld
loope
out
or
outsb
data16
cwtl
or
iret
sub
stos
push
inc
adc
fidivl
arpl
fsubl
mov
fldt
gs
xchg
shlb
jecxz
and
aad
cmpl
enter
or
dec
cmpb
test
cmp
and
add
loope
mov
nop
push
mov
xor
jbe
sub
fxch
xchg
sarl
cltd
pop
cmp
addr16
mov
call
inc
lods
in
jb
pusha
push
cltd
leave
ljmp
mov
test
jae
int
in
push
add
cs
push
stc
and
pop
sbbb
sub
mov
or
fcmovbe
filds
loope
and
push
int
pop
cmc
cmpsb
loopne
pop
push
verw
inc
sub
filds
jne
stc
lcall
mov
push
xor
lahf
repz
jno
outsb
or
js
inc
out
jecxz
mov
cltd
xor
test
fadds
jne
sti
ss
lea
decl
hlt
sub
sbb
inc
int3
jl
pop
mov
icebp
pop
or
xor
lahf
mov
xchg
mov
outsb
sub
mov
aad
jecxz
sbb
test
adc
and
or
sarb
cmp
push
sbb
inc
inc
pop
lahf
cmpsl
mov
and
popa
ljmp
mov
push
jmp
out
stos
jb
hlt
adc
outsl
xor
insb
pop
outsl
sbb
shlb
fiaddl
vmwrite
xchg
fistl
and
pop
rclb
cmp
sub
cmpsl
into
add
out
mov
xchg
call
shrb
mov
push
sbb
xor
mov
mov
mov
hlt
or
sub
push
das
loop
jbe
fistl
mov
mov
xlat
jge
mov
inc
and
jno
rorl
rcrl
jae
cmp
in
push
mov
stos
jg
push
fnstcw
xchg
push
cwtl
or
leave
dec
xchg
into
add
push
nop
imul
push
jnp
cmpb
mov
push
xchg
or
mov
and
cmp
sub
adc
pusha
into
sbb
mov
imul
hlt
jg
sbb
pop
lahf
call
nop
vpcmpeqb
lods
sti
or
dec
sub
test
enter
negb
dec
fldt
stc
pop
sbb
or
ss
mov
loopne
jnp
test
lret
loope
fbstp
mov
ljmp
adc
xchg
sub
cmpb
jp
push
loop
push
inc
outsl
fwait
insl
in
test
insl
pop
jecxz
fcompl
mov
cmp
xchg
sbb
ds
shll
sub
sbb
add
jg
out
sub
pop
rol
int
arpl
sbb
mov
inc
push
out
mov
mov
pop
xor
sub
xor
mov
cmp
pop
jle
rorb
enter
test
push
push
int
jne
fiadds
in
mov
rolb
pop
mov
jp
imul
arpl
cmpsl
mov
mov
and
leave
pop
das
cmp
out
push
int
roll
mov
fidivrl
or
inc
pop
pop
bound
inc
push
add
pop
lods
dec
les
int
push
mov
mov
mov
add
icebp
mov
enter
inc
dec
stos
jp
aam
data16
pop
and
mov
mov
add
repz
into
sbb
stc
adc
add
inc
negb
bound
sub
mov
adc
nop
push
cwtl
sarl
sbb
pop
or
fwait
addb
push
das
lahf
imul
stos
scas
dec
or
jb
scas
arpl
ret
or
jbe
fbld
imul
stos
adc
test
dec
add
mov
dec
sbb
lock
xor
bound
mov
xchg
sti
sbb
dec
fidivl
test
repz
sbbl
xchg
lock
cmc
notb
add
fwait
dec
jns
in
jl
js
xlat
pop
fstps
into
repnz
jns
in
movsb
push
cltd
addr16
pop
jnp
sbb
xchg
lock
pushf
loope
cmp
lock
jb
loopne
andb
jbe
jmp
ss
pop
xchg
push
gs
imul
mov
out
cwtl
cmpl
int3
cs
addl
call
add
inc
or
sub
cmp
xchg
push
mov
scas
jne
mov
fcmovbe
js
xchg
call
xchg
sub
jmp
insl
sub
icebp
xchg
bound
cs
popf
mov
rcrb
sbb
cmp
fsubl
nop
call
jp
or
mov
jo
inc
sbb
fwait
aas
dec
inc
sti
ss
add
jge
adc
adc
ss
arpl
and
cmp
adc
mov
sbb
shrb
cld
mov
dec
adc
lea
sbb
dec
xor
sub
add
mov
jo
xor
aad
push
push
cmp
cmp
add
test
das
jg
jl
jo
es
mov
scas
push
sarb
jge
xchg
adc
xor
lret
xchg
mov
in
jle
or
rol
movsl
daa
inc
xor
sbb
hlt
dec
cli
into
xorb
out
ja
fsubr
fsubl
mov
inc
mov
roll
outsb
add
lret
lret
mov
hlt
add
iret
fisubrl
shl
push
scas
push
pop
test
mov
out
popf
js
jnp
xor
add
jae
and
mov
dec
icebp
stos
jns
aaa
adc
test
int
bound
scas
ficomps
popa
inc
dec
or
ret
lret
roll
fldcw
sub
push
mov
inc
clc
cmpsl
xchg
adc
lds
dec
adc
adc
adc
cmc
stc
das
mov
push
jl
out
in
pop
jg
mov
and
pop
sub
fidivl
popf
sub
mov
js
push
xor
scas
outsl
mov
xchg
xchg
push
shrb
add
jle
pushf
cmp
xor
aam
mov
jo
adc
scas
dec
push
xor
notb
push
stos
mov
cld
xchg
and
divl
ret
push
mov
cmp
rcrb
lods
xor
push
or
mov
dec
into
les
fsts
mov
mov
xchg
mov
nop
scas
mov
fisttps
mov
pop
test
outsb
in
push
aad
add
mov
push
aad
inc
and
mov
lds
mov
aaa
xchg
mov
cmc
cmp
scas
pop
adc
or
dec
out
xchg
fidivrs
lock
and
pop
push
or
cmpb
cmp
daa
dec
test
or
fsubl
and
fstl
clc
inc
sarl
sub
and
popf
imul
shrb
xlat
mov
pop
add
out
sub
add
sbb
cmpsb
mov
mov
insl
loopne
es
fcmovb
in
inc
int3
imul
xor
jge
je
pop
dec
sbb
add
out
daa
sarb
jnp
scas
add
enter
jns
iret
lahf
icebp
loope
xchg
add
add
xchg
sub
jg
ret
mov
test
ja
and
jae
sbb
sub
or
push
std
mov
add
xlat
es
ret
pop
mov
pusha
daa
or
aam
lahf
jno
call
xchg
fidivs
adc
jmp
or
mov
cmpsl
shl
xchg
inc
adc
rcr
adc
xorl
sahf
sbb
outsl
lret
push
mov
mov
fadd
xchg
jg
push
out
cmp
mov
aaa
sub
jp
jecxz
sub
jge
scas
stc
xor
xchg
pop
fstpt
dec
or
xor
orb
xor
xlat
push
in
pop
lods
lds
nop
mov
xorl
call
mov
push
mov
sbb
adc
push
ret
adc
cmpsb
and
out
dec
sbb
mov
xstore-rng
adc
mov
nop
in
lahf
cwtl
fcoms
dec
sub
out
dec
push
pop
add
test
xchg
mov
daa
test
cmpsl
loope
sub
xchg
shl
mov
jmp
dec
push
ret
ret
adc
and
adc
jbe
xchg
lret
lcall
sub
xor
outsb
std
push
or
aam
or
fsubs
mov
jo
andl
or
fdivrs
shrb
testl
mov
popf
mov
add
jle
mov
inc
fisubs
sub
rorl
dec
ror
mov
sbb
movsb
mov
loopne
mov
jecxz
push
fbstp
sbb
popa
call
lcall
fists
xchg
push
dec
jmp
xor
sbb
ss
jne
push
or
adc
mov
xchg
cmc
ja
imul
cmp
fnstsw
popa
mov
add
in
mov
cmp
dec
je
or
sbb
in
subb
pop
dec
sub
add
dec
pushf
xor
or
mov
pushf
ficompl
mull
jp
inc
inc
inc
cld
mov
push
push
push
out
or
mov
jnp
rcrb
jp
or
cmp
das
sbb
pop
push
repnz
cmpsl
adc
sub
or
cli
aam
outsl
jo
cltd
in
mov
aam
cld
imul
icebp
pushf
shrb
fsubl
adcl
push
push
scas
mov
add
int3
inc
jne
cli
push
sub
xor
xlat
testb
andl
mov
rcrl
pop
dec
test
push
loopne
mov
lods
jns
add
fstps
and
enter
fcmovne
ss
add
leave
jmp
sahf
sahf
out
clc
insb
aam
dec
pop
enter
test
add
pop
aam
mov
add
loopne
cmpsl
add
add
hlt
lods
inc
pop
xchg
mov
cmc
call
cs
push
xchg
sbb
xchg
mov
mov
testb
and
ss
pop
test
push
xlat
sub
mov
ficomps
mov
fisubrl
jb
pop
xor
xor
aas
lock
push
sarl
stos
and
test
mov
dec
sbb
test
sub
sub
xchg
outsb
aam
push
inc
out
cld
sub
es
jns
inc
sub
out
cmc
popa
andb
das
add
and
lret
xchg
repz
shlb
mov
repnz
adc
mov
into
popa
loope
cmc
dec
cld
scas
fwait
and
and
rolb
stc
and
fiadds
inc
loope
mov
adc
sbb
dec
xchg
push
cli
out
das
mov
xor
pop
pop
sbb
mov
gs
ds
or
dec
and
inc
cmpsl
imul
add
fisubl
jp
cmp
jg
cmp
sub
cld
dec
ud2
addl
push
dec
xor
cmp
xchg
stos
sbb
test
xchg
aam
sbb
push
mull
orl
shll
in
test
imul
je
incl
in
mov
in
xor
testl
jns
and
and
cmp
cs
adc
mov
xchg
les
pop
aas
gs
cmp
cmpsb
loop
lock
jl
movsl
pop
loopne
neg
push
add
popa
dec
iret
or
mov
mov
test
sbbl
test
sbb
subb
je
adc
inc
subl
cli
roll
adc
sub
icebp
pop
pop
scas
ljmp
pop
stos
pop
mov
pop
stc
mov
in
pop
aas
fdivrl
in
ja
dec
mov
sbb
stos
daa
movsb
add
xor
pop
and
mov
push
rol
or
jo
sub
mov
addr16
int
fs
cwtl
out
subb
outsl
rorl
sarb
mov
negl
inc
inc
in
fisubrl
insl
cld
jl
adc
outsb
shlb
stos
lds
jle
les
in
scas
xchg
flds
and
jmp
sahf
pop
out
jl
add
dec
movl
mov
sbb
xchg
sbb
fwait
jp
stos
push
loopne
mov
push
mov
lret
icebp
sti
sbb
add
cmp
jp
aas
movsl
jle
sbb
mov
les
outsb
sar
pop
xor
ss
sbb
in
fwait
mov
pop
mov
push
out
das
and
rcr
sbb
xor
movsb
ds
rolb
inc
jo
cld
repz
cmpl
and
shrl
ljmp
mov
jmp
gs
sub
insl
outsb
add
mov
mov
iret
jbe
xchg
sub
or
jns
stos
inc
cmp
in
lcall
mov
fprem
sbb
push
sbbl
xchg
inc
shlb
iret
adc
xchg
dec
and
mov
popa
inc
mov
dec
add
ljmp
popa
hlt
ret
jmp
and
pop
pop
out
add
jno
dec
mov
lret
mov
jp
dec
inc
data16
roll
out
lret
nop
lock
mov
sbb
or
inc
adc
cmp
adc
test
jmp
enter
sbb
or
sar
out
popf
adc
out
mov
or
pushf
push
push
stos
je
outsb
sbb
xchg
adc
sbb
or
or
outsl
ds
cmp
jo
or
ret
cltd
jne
add
xchg
dec
mov
orb
mov
je
xor
rorb
xor
mov
cwtl
dec
in
push
lods
pusha
adc
popf
imul
mull
or
outsl
jne
xor
jb
daa
loopne
jnp
aaa
adcl
adc
cmp
sub
inc
mov
dec
mov
bound
inc
out
pop
inc
into
pop
xchg
aas
fmull
pop
aam
test
sahf
test
or
outsl
xor
mov
das
mov
pop
sub
lds
enter
andl
mov
mov
cmpsb
inc
pop
pop
lods
inc
add
cmp
and
popf
std
popf
inc
decl
add
out
js
or
push
push
pop
cmpsb
daa
lret
push
pop
loop
mov
scas
lock
dec
stos
sahf
mov
into
mov
ljmp
addr16
test
jnp
push
add
push
xchg
gs
jno
dec
shll
xor
es
push
scas
out
pop
out
and
pop
sub
adc
push
loop
enter
nop
xchg
adc
sub
outsl
aam
fsubs
call
data16
mov
or
sub
push
cmpl
fadds
and
fnstcw
and
not
ljmp
or
fisttpl
adc
jo
stos
xor
icebp
in
test
in
dec
sub
xchg
movl
movl
mov
sbb
lea
pop
mov
xlat
sub
push
dec
xlat
test
repz
xchg
mov
cmpsl
xor
dec
lods
dec
pop
out
rorb
mov
sbb
popa
cli
push
adc
xchg
jmp
or
fisubs
and
push
pop
je
mov
icebp
push
jle
mov
mov
lahf
mov
loop
cmp
mov
mov
add
mov
jae
aaa
push
jg
sub
andb
push
dec
mov
fdivrl
cwtl
cld
sbb
sub
mov
fstl
or
xchg
insl
scas
rcrl
xchg
add
cs
cs
and
and
mov
jmp
scas
xorb
dec
adc
je
dec
dec
std
jae
fadd
test
pusha
insb
mov
and
push
lock
fdivr
fidivl
loopne
xor
loopne
mov
xlat
dec
push
or
ljmp
sbb
jmp
mov
sub
xor
hlt
movl
cmc
subl
sbbl
test
xchg
jle
push
in
jne
cli
xor
aam
movsb
outsl
daa
inc
ja
or
leave
imul
stc
int3
jecxz
adc
xlat
iret
addl
mov
or
shll
xchg
loopne
inc
jb
mov
and
lret
sahf
mov
mov
xor
sbb
pop
inc
int3
popa
push
adc
jo
mov
mov
mov
lcall
or
testl
sub
mov
add
fstpl
cmp
cmp
dec
bt
shrl
fdivl
add
lret
aaa
xchg
daa
aas
xchg
sbb
adc
ret
and
out
out
and
sbb
cmpsb
push
iret
push
lret
cmc
hlt
lahf
std
inc
fidivs
int
and
jle
into
int
or
push
repnz
movsl
pushl
loope
icebp
int3
add
outsb
inc
jbe
neg
lds
gs
jl
pop
pop
pop
jns
xor
loope
shlb
fwait
ljmp
leave
into
out
xchg
jg
adc
out
das
nop
outsl
lock
add
xor
cmp
cs
jp
adc
and
mov
loopne
xchg
mov
or
movsl
popa
stos
push
adc
test
cmp
rcl
mov
cmpsl
jp
lcall
sbb
push
iret
popf
jbe
arpl
jns
dec
mov
fwait
into
add
in
cld
mov
ds
in
cmp
push
xor
pop
and
xchg
shl
in
and
les
je
pop
scas
cmpsb
mov
cmp
sub
test
add
and
fnsave
hlt
xchg
jne
int
xor
adc
rcrl
adc
pushf
cmp
or
fisubrl
or
insl
mov
pusha
out
xchg
jp
push
jno
movsl
cld
cs
je
das
addr16
notb
adc
jno
dec
int3
xchg
inc
loop
lahf
inc
out
pusha
xchg
repnz
scas
pop
jnp
xor
xlat
outsl
scas
jno
out
nop
jb
adc
pop
pop
pop
xchg
ds
mov
xchg
push
sarb
mov
push
push
adc
lods
stos
test
xor
jge
inc
xchg
sbb
jp
add
ja
imul
lahf
orb
xor
cmp
dec
sbb
call
mov
sahf
outsl
repnz
or
test
push
sahf
call
pop
pop
xor
std
mov
adc
mov
loope
dec
int
hlt
jmp
pop
pop
adc
mov
fnsetpm(287
lret
push
mov
fstpl
sub
xor
mov
cmp
and
add
mov
cmp
jecxz
adc
xor
mov
xchg
lods
mov
sarb
sub
cmp
jp
inc
rcll
insl
lahf
pop
aam
in
fdivrs
cmp
insb
jo
scas
test
in
push
xor
js
push
mov
sub
sbb
pop
mov
cmpsl
push
pushf
fidivs
mov
jle
sbb
dec
adc
mov
xor
stc
sub
dec
out
xchg
fxch
jmpw
adc
push
sub
sub
lret
cwtl
out
scas
cmp
adc
cmp
sbbl
push
or
stos
pusha
push
repnz
cmp
aam
icebp
jp
aas
and
fstl
or
les
nop
xor
or
jne
inc
sbb
les
lret
push
mov
lock
idivl
lea
and
mov
sbb
ret
les
das
movsb
outsb
lock
mov
stos
lahf
jbe
cwtl
in
lods
inc
jnp
roll
mov
lcall
aam
pusha
clc
jno
mov
ud2
add
xchg
loope
cmp
lret
xlat
add
and
mov
les
loopne
mov
pop
repz
add
mov
cmp
stos
hlt
loopne
pop
mov
inc
pop
xchg
sub
movups
aam
imul
add
clc
aam
mov
xchg
testl
rolb
jle
hlt
push
adc
jmp
xchg
cmp
jmp
sahf
hlt
fadds
push
mov
repnz
stos
and
loopne
pop
and
hlt
frstpm(287
out
mov
les
test
call
popw
xor
test
jns
jns
jno
inc
cmpsl
mov
fsubs
mov
hlt
mov
icebp
mov
dec
inc
loopne
xor
push
xchg
std
push
dec
mov
test
nop
cmpsb
stc
repz
pop
mov
addb
mov
in
stc
add
outsb
fnstcw
xor
adc
or
test
jno
sbb
cmp
lret
push
out
dec
mov
bound
xchg
jae
sahf
cmp
das
pop
xchg
aas
dec
pop
sub
lock
shl
cmp
or
cmc
mov
in
pop
cmp
dec
sub
popf
mov
lret
ds
xor
mov
jecxz
mov
testb
aad
inc
sub
sti
aas
xor
or
dec
nop
decb
stos
arpl
mov
mov
push
pop
mov
mov
sti
sub
inc
fs
movsl
mov
sbbl
jnp
insl
xor
or
sbb
dec
icebp
sub
and
and
sbb
inc
pop
ja
in
movsl
idivl
adc
das
popa
jge
ret
push
jo
pop
pop
insb
test
in
jge
mov
cpuid
nop
aas
sarb
push
repz
jl
insl
popa
lea
pop
arpl
scas
mov
lahf
mov
iret
jne
setbe
dec
jmp
fidivs
dec
lret
or
adc
shl
fsubr
xchg
shrb
test
popa
or
mov
std
imul
addr16
fcoms
mov
sub
xchg
shrl
pop
repz
test
jmp
data16
dec
xchg
mov
les
mov
sbb
pop
or
xor
adc
jnp
lea
add
mov
lock
mov
inc
pop
je
xor
jnp
jl
out
xchg
out
out
in
push
push
cmpsb
lock
mov
and
mov
testl
xor
or
or
lret
push
jmp
ss
add
movsl
bound
jno
pop
in
jp
adc
adc
and
into
arpl
fisttpl
test
push
or
xchg
jg
subl
aam
stc
jb
hlt
push
call
xor
lock
pop
andl
mov
in
mov
sub
out
ss
push
rol
mov
push
pusha
jmp
add
arpl
or
imul
pop
or
pushf
or
cmp
data16
scas
cmpb
pop
inc
jp
imul
inc
mov
mov
arpl
shlb
mov
or
or
in
clc
jb
add
push
jg
outsl
pop
mov
cltd
inc
xor
imul
fadds
pop
adc
mov
pusha
repz
jnp
fs
adc
xchg
jp
dec
or
jnp
push
movsl
stos
push
fdivr
push
xchg
jae
lods
push
stos
mov
call
mov
sub
add
adc
pusha
in
movsl
fyl2xp1
inc
mov
into
add
divl
jp
pop
mov
fs
ret
cltd
xchg
push
pop
and
xlat
xlat
loope
sarb
subl
push
push
cltd
jl
jbe
or
iret
dec
push
outsb
mov
cld
dec
mov
push
or
inc
lret
xchg
js
loopne
lcall
testb
pop
fcomp
out
pop
cli
xor
inc
stos
dec
pop
cmp
into
enter
nop
add
push
adc
jecxz
mov
test
and
push
dec
push
jg
push
pop
xchg
jo
or
lods
xor
and
cmp
popl
pop
add
ljmp
mov
or
and
mov
dec
jns
insb
dec
dec
cmp
mov
cwtl
imul
inc
push
push
adc
jns
imul
incl
lods
setp
lods
pop
push
xchg
push
ss
cmp
gs
fdivrs
xor
popa
in
xchg
mov
shll
cmc
and
push
dec
out
addr16
mov
lcall
insl
icebp
ja
push
lods
dec
test
enter
int
xorb
hlt
lods
xchg
outsb
push
out
xchg
mov
dec
mov
loope
push
test
mov
data16
dec
movsb
xchg
call
mov
jno
outsl
inc
ja
fidivrs
test
xlat
aad
out
pop
or
into
adc
test
insl
dec
pop
push
adc
xor
icebp
stos
xchg
fcoms
xor
cwtl
dec
adc
inc
push
decb
fdivs
pop
mov
inc
mov
dec
add
sub
lods
xor
gs
sbb
or
aas
add
rclb
pop
push
lea
lock
mov
or
outsl
test
pop
push
cmp
add
cmova
xor
pop
rcrl
mov
adc
xchg
or
or
stos
int3
lret
xchg
cmp
push
mov
cmpsb
and
in
dec
or
mov
dec
testb
iret
shrb
fldcw
lea
pop
icebp
imul
popa
mov
ret
pop
add
mov
outsl
bound
mov
fisubrs
incb
mov
cmp
lds
push
dec
lret
ds
mov
push
hlt
mov
movsb
movsl
das
testl
loopne
dec
push
les
fwait
xchg
scas
fiadds
mov
cwtl
imulb
dec
push
dec
dec
xchg
jb
repnz
loope
sbb
ja
and
jmp
cltd
inc
mov
shll
inc
lods
enter
xchg
cmp
scas
mov
push
clc
fldt
pop
popf
mov
test
adc
jl
jne
push
fidivrs
xor
dec
jnp
xchg
aas
add
scas
or
sub
push
std
gs
inc
cmp
insl
mov
jle
jb
cmp
fbstp
mov
and
add
inc
clc
pop
enter
mov
leave
or
sbb
out
js
sarl
pushf
add
mov
shlb
jle
or
jne
imul
lcall
add
jmp
movsb
dec
inc
loopne
popa
movsl
in
inc
mov
mov
lock
pop
rclb
jns
stos
push
inc
cwtl
mov
inc
and
mov
sub
inc
adc
repnz
sahf
sub
sbb
aaa
test
ja
adc
or
and
imul
jne
lahf
xor
dec
mov
rolb
mov
mov
lea
mov
cmpsb
out
push
pop
xlat
add
xor
out
loop
cmp
sti
jae
inc
sub
outsl
in
or
inc
sarb
cmp
mov
test
pop
jno
lahf
out
xchg
negb
adc
xchg
insl
mov
mov
test
aas
mov
ficoms
mov
shr
call
add
xchg
nop
mov
sub
sub
lods
outsl
loop
or
or
cld
std
push
inc
in
mov
pop
scas
rorb
pop
test
je
mov
add
sbb
in
xor
inc
inc
inc
aam
mov
inc
mov
in
loop
and
mov
aam
add
mov
xor
and
mov
adc
es
ja
push
push
jp
adc
cmp
cmpb
aad
mov
add
xchg
push
pop
pop
mov
leave
push
stc
xchg
iret
lahf
jl,pn
adc
cmp
jle
sub
cltd
psubusw
or
hlt
mov
in
lea
jmp
and
inc
icebp
int
jecxz
ficoml
sahf
push
mov
pop
movsb
cmpsl
mov
dec
cmpsl
dec
xchg
in
jge
fsts
mov
add
dec
ret
push
sbbl
in
movsl
push
mov
test
jno
push
add
and
rcrb
push
mov
lret
add
inc
mov
scas
jge
pusha
xlat
pop
xor
dec
pop
int3
fsubrl
inc
mov
or
sub
aaa
js
shll
mov
mov
vmread
bound
xorb
aas
jle
jns
mov
mov
cmpb
push
enter
xlat
pop
sbb
es
fldt
fprem1
push
mov
shl
push
pop
xchg
xchg
test
cmp
es
xor
nop
mov
daa
outsb
adc
sbb
jl
push
add
jne
mov
jae
outsl
sub
pop
sbb
adc
jp
dec
fsubr
test
and
jl
add
leave
jge
adc
inc
scas
not
stc
mov
mov
xchg
int
or
jmp
addr16
jl
mov
dec
es
mov
inc
xchg
xchg
mov
dec
push
xchg
mov
lret
mov
push
mov
lret
dec
int
daa
aam
cmp
pop
daa
ficomps
pusha
cs
sub
in
inc
mov
adc
xlat
cmc
sbb
inc
mov
xor
jg
out
cld
mov
stc
or
cmp
lock
pop
fsubr
pop
jmp
mov
and
dec
mov
cld
insb
dec
lods
or
test
or
lcall
popa
ja
out
mov
adc
sbbb
pop
mov
lock
imul
loop
dec
cmp
sbb
xchg
adc
lods
sbb
sub
mov
enter
in
add
dec
jl
iret
repnz
out
mov
or
fwait
mov
mov
jg
sub
push
jo
jnp
shrb
in
xchg
push
mov
mov
scas
xchg
add
xor
ret
sbb
inc
xor
popf
cwtl
bound
cmpsb
jmp
icebp
test
or
mov
mov
insl
into
mov
movsl
popf
mov
sbb
mov
sbb
add
jmp
repz
cwtl
cmp
dec
sti
sbb
jo
push
or
pushf
cmc
gs
jmp
mov
pop
enter
xor
mov
adc
sti
add
lahf
inc
sbb
mov
sub
sub
or
aam
push
or
repnz
iret
mov
fisubl
push
push
inc
stos
pusha
pop
inc
add
mov
mov
mov
cmp
lods
sbb
popf
xchg
sbb
dec
push
sub
scas
pop
mov
in
aad
adc
adc
pop
sub
lcall
pop
cli
mov
push
add
add
xchg
insl
mov
xchg
subb
push
add
mov
or
push
or
je
jo
mov
dec
cmc
mov
xchg
xor
xchg
fsubs
test
xchg
iret
push
lock
mov
cmpsl
movntq
mov
jnp
inc
fwait
and
pushf
dec
nop
add
loopne
adc
pop
xchg
sarb
mov
cmp
mov
cs
iret
inc
push
outsl
mov
enter
dec
and
loop
imul
sbb
fidivrl
push
adc
sub
adc
lods
jge
test
outsb
pushf
stc
mov
inc
adc
adc
pusha
jo
enter
mov
pop
push
test
xchg
loopne,pt
sub
pop
or
cltd
cli
or
iret
xor
fdivrl
orb
xchg
adc
mov
lods
pop
idivl
pop
dec
movsl
pop
mov
lds
add
das
and
add
inc
filds
or
inc
xchg
imul
add
fs
jg
bound
inc
cmp
test
rclb
jl
cmpsl
sbb
adc
sub
push
orb
in
pop
jnp
lret
pop
jno
aam
or
stc
repnz
test
push
xor
insb
adc
mov
dec
sub
mov
mov
inc
lods
adc
in
inc
fs
mov
leave
mov
mov
adc
adc
xor
pop
aas
sahf
or
fs
lret
pop
fists
sbb
rcrb
sbb
or
iret
inc
xchg
daa
in
add
je
fists
addb
repnz
sbb
jae
dec
xorl
or
push
hlt
sar
daa
xchg
int3
jmp
call
jmp
aam
push
clc
stc
cmc
andl
fstps
xor
in
lods
aam
sar
mov
adc
xchg
sub
icebp
repnz
daa
cli
xor
sbb
mov
cld
mov
fisttpl
inc
dec
xor
ljmp
and
mov
incb
mov
std
ret
mov
rorb
iret
jl
or
inc
add
inc
ljmp
mov
sar
pop
arpl
or
pop
sub
inc
sub
xchg
mov
push
inc
mov
test
push
lods
fisubs
outsl
jg
dec
js
loope
sub
scas
jo
mov
xchg
mov
or
daa
loopne
or
mov
mov
lret
xchg
cmp
or
or
xor
xchg
mov
loope
out
sbb
daa
jle
mov
int
cmp
mov
jbe
sub
mov
push
push
add
aas
in
std
xor
fidivrs
push
xchg
lods
fs
mov
pop
jl
lret
mov
je
mov
pop
jl
mov
jae
push
pop
lods
mov
push
test
jp
sahf
stos
js
mov
insb
xor
mov
xor
aad
jle
cmovge
mov
insl
cmp
test
xchg
or
xor
mov
test
mov
jo
outsb
aam
mov
push
sbb
mov
lahf
and
sbb
dec
bound
testb
mov
xor
cmpsl
scas
test
fistpll
xor
push
stos
sbb
fisubrs
loopne
push
leave
std
or
lock
andl
cltd
xor
std
sbb
dec
and
int3
xchg
stos
xor
popa
sbb
jbe
sti
mov
mov
mov
sarl
lahf
adc
adc
push
bound
adc
shll
test
gs
lds
ljmp
xchg
icebp
clc
or
sbb
scas
push
dec
mov
stos
mov
neg
mov
lock
rcrb
stc
into
repz
dec
lock
outsl
hlt
es
or
aam
into
out
cmp
jb
inc
mov
pop
cmc
addb
lret
ficomps
pop
popf
imulb
add
xor
in
xor
inc
into
test
mov
dec
out
call
dec
xor
jp
scas
or
imul
adc
ja
pop
test
ja
adc
pop
in
lock
mov
mov
lcall
loope
add
or
jo
jg
enter
mov
push
int3
popf
notl
lods
jecxz
lret
ret
es
stc
mov
in
and
sbb
dec
aas
dec
jmp
xchg
add
loop
clc
or
and
adc
inc
ret
cmpsb
mov
orl
inc
jge
and
cmp
cmp
dec
scas
sbb
iret
inc
int3
test
adc
pushf
mov
leave
lods
int
lahf
xchg
lret
shl
aas
sub
imul
pop
xchg
test
loop
inc
insb
pop
push
loopne
push
enter
dec
cli
in
in
rcrb
mov
nop
and
push
push
dec
jb
sbb
mov
xchg
hlt
jns
nop
sub
cs
psubsb
repz
cld
jae
in
xor
fscale
xor
rorl
das
and
fildl
mov
outsl
hlt
fnstcw
xlat
aaa
push
repnz
fbld
inc
arpl
or
mov
repnz
xor
pop
xchg
or
stos
pop
shrl
dec
sub
sbb
inc
jge
xor
out
sbb
insl
loop
notb
sub
adc
jg
cmp
pop
shlb
add
push
jecxz
or
xchg
pop
cmp
add
xchg
dec
push
sub
mov
xlat
push
aam
aas
cmp
dec
cmp
scas
or
nop
add
push
xchg
cmp
mov
jbe
fnsave
jl
cmpsb
mov
sub
sub
jle
push
sbb
mov
jg
dec
loopne
out
bnd
pop
adc
jle
jmp
pop
cwtl
mov
mov
cmp
outsl
outsb
pop
aas
adc
lods
xchg
lock
aam
aad
or
mov
sbb
mov
out
adc
addb
inc
aas
test
and
shll
jmp
mov
jg
xor
aas
loopw
xor
push
inc
xchg
adc
jns
inc
and
xchg
cmc
or
and
rcrl
xlat
xlat
push
inc
ss
rclb
xchg
mov
jg
xchg
adc
imul
mov
sbb
ss
test
popa
dec
mov
clc
jle
xchg
add
outsl
sti
test
pop
aaa
mov
sbb
pop
dec
clc
jge
lea
and
ja
jge
dec
pop
pop
fwait
mov
mov
popa
jbe
pusha
pop
repnz
jp
cmp
add
adc
inc
iret
bound
pop
sbb
movsb
xor
pop
pop
mov
pop
sub
mov
aam
mov
mov
mov
subb
stos
into
xor
cli
pop
add
repnz
mov
dec
mov
inc
cmpb
push
jp
cmpsl
push
mov
xchg
scas
pop
imul
lahf
xchg
xor
rclb
mov
jmp
jmp
outsl
dec
adc
popa
and
cmp
stc
je
repz
jle
test
fwait
cmp
mov
mov
rcr
int3
inc
shrb
mov
xlat
mov
sub
mov
fistl
scas
cmp
das
add
int3
in
aam
cmpsl
icebp
add
decl
xor
imulb
adc
xor
sti
inc
addr16
in
cltd
push
arpl
adc
sub
stos
enter
inc
push
mov
mov
sbb
rcll
notb
test
test
pop
jl
push
xchg
adc
pop
jge
push
test
push
adc
push
or
sbb
in
fnstenv
mov
push
lahf
mov
les
call
push
lds
negl
xor
gs
or
push
pop
xlat
xchg
push
pop
jb
sbb
sti
sbb
inc
cli
in
push
sahf
xor
lret
and
insb
popf
daa
pop
push
push
in
icebp
gs
push
dec
add
lahf
sub
in
push
jle
adcl
or
shrb
insl
lods
mov
std
rolb
push
repz
adc
add
mov
test
leave
lahf
or
mov
cmpsl
or
lcall
dec
xchg
mov
mov
ffreep
cmpsl
movsl
mov
ffree
sub
lret
push
leave
or
insb
inc
xor
adc
jb
out
add
shll
adc
notb
cmp
inc
int
mov
fsubl
cltd
test
pop
xor
mov
mov
push
dec
and
sbb
xchg
xor
pop
adc
add
ss
mov
xchg
aad
shlb
jns
xlat
js
dec
stos
and
insl
adcb
insl
mov
add
pop
std
push
rolb
cmp
fwait
hlt
sub
cmp
mov
popf
sub
xchg
and
in
in
mov
and
sbb
xchg
pop
add
inc
scas
imul
push
test
ss
arpl
mov
movsl
mov
jg
sub
insl
sbb
mov
jecxz
sbb
adc
in
inc
test
aam
cld
fs
pop
pop
popf
xlat
xchg
imul
popa
inc
adc
xchg
mov
iret
test
pop
jno
mov
sarl
es
mov
nop
arpl
adc
scas
or
cmpsb
push
pop
mov
lock
mov
mov
cmp
and
int3
and
movsl
xor
and
into
pop
stc
js
jnp
scas
sub
adc
lea
aam
addl
scas
mov
inc
push
sub
mov
in
or
ret
jp
push
fimull
mov
cmp
pop
sub
mov
jne
fsubl
push
insl
xor
cltd
inc
into
sti
das
jno
xor
mov
js
out
lock
jl
jge
outsb
cmc
js
leave
jbe
rcr
xlat
mov
cmpsl
pop
outsl
movsb
push
pop
out
sbb
cmpsl
aas
fwait
int
cmp
ret
or
aam
xor
sbb
add
lcall
cmp
lcall
leave
les
mov
lret
push
sub
inc
sbb
outsl
pop
subl
xor
je
push
fimull
bound
jle
insb
popf
mov
loope
std
pop
in
or
mov
mov
roll
mov
lfs
lahf
stos
inc
outsb
call
sbb
xlat
popl
add
cmpsl
push
adc
in
lods
pop
lcall
cwtl
adc
xor
adc
fistl
jge
aam
les
add
sub
mov
fs
arpl
outsb
aad
js
popa
push
push
pop
movsl
out
mov
insb
jmp
stc
daa
mov
cmp
lcall
rcl
push
or
out
push
mov
pop
and
sub
jne
aaa
icebp
jno
xchg
iret
cmp
jmp
jmp
rorb
and
xor
bound
movsb
and
mov
lds
jbe
les
call
xor
xor
adc
mov
loopne
jbe
or
pop
in
std
dec
xor
rcr
nop
pusha
in
shll
mov
cmpsl
rolb
lahf
mov
adc
cltd
cmp
test
sbb
sub
ds
test
data16
or
lret
add
lcall
pop
inc
add
adc
push
stc
pop
fidivl
out
sub
mov
cmp
dec
rol
jae
scas
int3
pop
xchg
pop
cmp
lret
scas
xor
push
xchg
xchg
mov
xor
movsl
mov
sub
push
in
sbb
sahf
scas
outsb
and
add
inc
ja
cltd
push
das
pop
inc
int
cmp
ret
fmuls
push
adc
das
repz
push
push
or
xchg
pop
adc
push
pop
pop
cmpsb
sbb
iret
adc
test
stos
jp
std
outsl
jno
jg
inc
pop
nop
int3
lea
fidivrs
fs
and
jg
enter
shlb
mov
iret
jne
and
lock
ficoml
xor
xchg
sbbl
loope
or
sbb
loop
inc
enter
movsl
out
mov
lahf
xlat
sahf
call
or
sub
add
cmp
ds
in
test
inc
pop
xlat
std
fstl
ja
inc
add
pushf
mov
adc
fwait
push
or
jmp
mov
idiv
sbb
xor
fidivrl
jns
lret
dec
cmpsb
pop
popa
fistpl
mov
adc
in
dec
xchg
shlb
jb
sbb
push
push
test
xor
push
adc
or
cmc
xchg
in
push
clc
xorl
clc
xlat
cs
pop
call
adc
test
popf
aaa
push
cmp
aas
sub
lret
inc
mov
rorl
push
cmp
dec
lret
in
mov
or
aam
repz
jmp
cmpsl
push
out
clc
and
loopne
push
inc
arpl
xor
jp
sbb
push
pusha
daa
fiaddl
xor
scas
in
adc
rcll
pop
loope
sbb
std
sbb
push
push
mov
aad
sub
push
fidivs
daa
cmp
xor
adc
xor
xor
leave
adc
int3
out
in
test
and
les
lret
push
pop
fwait
ljmp
scas
loop
jge
pop
inc
xor
data16
int3
test
fprem1
dec
push
jae
jge
aas
mov
aad
popa
pop
push
stc
or
push
push
loopne
and
out
inc
pop
bound
mov
push
nop
xchg
dec
jno
imul
inc
mov
stos
mov
insb
loopne
inc
xor
rol
dec
outsl
mov
lret
mov
idivb
xchg
dec
imul
xor
mov
pusha
popa
test
push
add
loope
xchg
repnz
jbe
mov
outsl
inc
push
mov
jmp
inc
test
xchg
xlat
stos
movsb
or
add
packuswb
in
cmp
mov
aaa
xchg
rol
ljmp
loope
mov
inc
insb
xchg
into
repnz
mulb
pop
or
xor
lret
xchg
enter
loop
lock
loopne
jp
std
mov
ss
pop
cmpsb
mov
insb
cld
push
movsl
mov
push
inc
icebp
fbstp
xchg
outsl
nop
pop
ret
cld
push
lods
dec
test
and
pusha
mov
std
xor
inc
mov
leave
call
push
shl
sbbb
push
ss
adc
pop
adc
cmpsl
aaa
std
popa
push
mov
sahf
in
movaps
cmp
mov
or
push
jnp
in
and
sbb
push
cmc
or
fnstenv
outsb
mov
pop
mov
or
mov
popf
and
lock
loop
add
cmp
mov
insl
in
jle
ret
or
rcrl
jecxz
lret
sbb
xchg
lcall
lret
and
or
dec
inc
xchg
or
sbb
xchg
aaa
cmpsl
mov
xchg
movsl
icebp
popf
mov
rcll
xor
sbb
aaa
sbb
cs
xchg
ret
xchg
dec
mov
out
ljmp
std
imul
jno
xchg
aad
inc
sub
das
inc
push
cmp
test
insb
aam
leave
arpl
inc
mulb
ljmp
ret
or
pop
leave
sbb
mov
sub
rorl
test
inc
ds
xchg
and
stos
sub
repz
loop
int3
dec
xchg
shr
or
fdivs
sub
jle
arpl
cs
ds
jmp
dec
jge
insl
mov
sbb
cmp
and
dec
in
mov
sahf
sub
xor
cmpsb
shll
loopne
pop
pop
inc
jecxz
fcmovb
cmp
cmpxchg
cmp
xchg
cs
ret
mov
iret
pusha
add
jns
ljmp
adc
xor
push
cmpb
loope
xor
dec
mov
xchg
cmpsb
push
out
imul
dec
shll
adc
int3
and
movsl
mov
out
push
cmp
dec
out
cmc
inc
fwait
std
inc
test
xchg
xchg
lret
shlb
mov
cwtl
leave
xchg
ret
sub
inc
in
add
mov
out
sbb
aas
mov
nop
jns
push
rorl
test
push
push
dec
shrb
mov
out
jle
in
lock
sub
sbb
push
ljmp
push
cmp
mov
sub
into
shlb
jg
cmp
dec
xor
inc
jne
loop
adc
adc
mov
add
fidivrl
fldenv
lock
and
rolb
jmp
mov
xchg
pop
fmulp
push
add
stos
sub
xor
test
stc
enter
in
rorl
mov
je
out
dec
xchg
add
inc
xlat
jno
dec
mov
jp
push
pop
pushf
or
sahf
xor
mov
pop
pop
push
mov
pop
push
xchg
scas
pop
rorl
fisttps
ds
js
movsl
add
popa
sbb
jbe
outsl
xchg
ljmp
lods
lds
jb
jg
or
mov
adcl
jge
adc
mov
inc
sbb
push
jl
out
jnp
push
cmpsl
lds
pop
psubw
loope
push
sbb
nop
inc
jge
lea
adc
xchg
inc
setl
sbb
dec
and
in
jle
xor
fs
or
add
test
xchg
sub
mov
mov
scas
pop
fisubrs
popf
bound
jnp
cmp
imul
lea
pop
mov
hlt
mov
repnz
mov
push
fcomps
add
mov
call
push
inc
xor
push
sub
and
les
jns
jle
push
mov
pop
shlb
adcb
fwait
mov
nop
mov
nop
inc
dec
shlb
ficompl
mov
popa
add
jmp
or
retw
mov
aas
xlat
subps
pop
sbb
xchg
jg
sub
int
icebp
mov
shrb
shl
movsb
push
out
imul
sahf
mov
mov
out
mov
pop
jmp
leave
icebp
xor
jl
xchg
or
loop
xchg
inc
outsb
ret
xchg
cli
adc
sub
stc
out
push
les
inc
scas
mull
mov
sti
insb
fidivl
cmpsb
add
aaa
int
xchg
adc
pmulhuw
lret
jo
adc
aam
jnp
push
dec
mov
inc
pop
aam
push
xchg
push
pushf
push
fidivs
jae
loop
jno
or
scas
js
dec
pop
clc
sub
in
or
out
mov
into
mov
adc
or
orl
adc
data16
and
mov
fisubrs
adc
aaa
daa
xor
mov
mov
push
sbb
pop
sahf
pop
push
btsl
xor
xchg
aas
cwtl
ficoml
pop
and
cmp
in
push
adc
lock
jne
sbb
stos
out
dec
repz
fwait
add
push
in
dec
inc
shrb
js
mov
cmpl
xchg
mov
jo
sbb
jle
outsl
cltd
lock
stc
jecxz
aam
cmp
jp
and
aam
test
fidivs
test
dec
hlt
sbb
and
and
jmp
in
pushf
cmp
imul
stc
lods
popl
movsb
aas
cmpl
in
movb
inc
fadds
push
int
ljmp
stos
pop
js
gs
testl
je
jo
add
lcall
mov
lods
adc
or
testb
sub
mov
jecxz
xchg
int
mov
xor
pop
mov
xor
xor
sarb
xor
or
in
cmpsb
cmpsb
xchg
lods
mov
mov
inc
roll
cmp
repnz
aad
dec
push
imul
xor
and
scas
insl
in
sub
fimuls
jmp
xchg
clc
test
cmp
jl
add
add
imul
jne
lock
sbb
add
fistpll
mov
adcb
xlat
das
icebp
sarb
ds
iret
push
insl
and
inc
out
xchg
leave
test
xchg
imul
aaa
mov
sbb
xor
aaa
mov
js
sbb
and
and
cmp
mov
iret
mov
cli
xor
add
xor
xchg
or
and
icebp
orb
push
dec
xchg
xchg
push
mov
icebp
sti
xchg
push
mov
scas
dec
sbb
mov
test
negb
mov
mov
mov
fs
cmp
xchg
or
push
mov
enter
add
mov
mov
jb
cld
int
xor
faddl
arpl
in
lret
or
jmp
lds
mov
cmp
lods
push
test
sbb
sbb
jno
shll
addl
mov
fimuls
dec
fistl
pop
cmp
fadd
inc
aad
imul
and
lcall
hlt
pop
push
not
xor
pinsrw
sti
dec
sbb
in
fdivrp
xor
aam
cli
adc
lods
fwait
and
stos
inc
mov
mov
push
movsl
xchg
mov
aam
or
popf
cmp
rorb
aad
dec
inc
bound
aaa
xacquire
sub
ljmp
divl
out
mov
pop
fcoms
inc
sbb
pop
jo
adc
jmp
rorb
ffreep
insl
mov
sbb
push
orl
pop
mov
jl
sub
inc
inc
xchg
mov
aam
xor
jmp
cmpsl
aam
pop
dec
popf
jno
jmp
pop
cs
call
adc
push
sti
add
scas
jg
cld
push
mov
sub
mov
push
decb
dec
mov
divb
in
test
jno
mov
pop
mov
sub
sahf
or
inc
iret
ror
incl
mov
ljmp
lds
inc
stos
pop
sub
movsb
cltd
mov
and
mov
lock
push
push
aam
add
pop
test
or
call
cmp
dec
pop
mov
pop
les
xor
test
mov
out
xchg
dec
pop
jnp
mov
hlt
ret
ja
stos
fwait
pushf
aas
inc
ret
insl
xor
sti
outsb
call
pusha
int
scas
mov
aas
mov
jmp
lret
jecxz
sar
gs
xor
add
jecxz
xor
fdivrs
leave
dec
movsl
jo
mov
icebp
xor
dec
imul
xchg
pop
dec
jb
jae
lea
addb
mov
sub
rcrl
xchg
dec
cmp
std
pop
lods
stos
inc
aaa
mov
mov
sub
fstpt
lods
mov
shr
in
popa
arpl
push
jmp
and
add
imul
pushf
mov
lcall
dec
ret
out
fnop
iret
or
enter
aas
ja
and
or
pusha
jbe
jg
cmp
dec
push
std
dec
mov
popf
cwtl
pop
or
cmp
jg
jbe
mov
cmp
test
test
fst
test
or
xor
or
xchg
mov
mov
sbb
sub
shl
sbb
in
cmp
mov
or
adc
mov
sahf
push
scas
in
pop
pop
dec
xchg
jbe
jns
pop
int
addr16
or
insl
bound
xchg
xchg
pop
sbb
loop
pop
sbb
sub
mov
cwtl
push
mov
mov
shll
pushl
pushf
fstl
popa
jle
loope
ficoml
jl
cmp
popf
xchg
jmp
aam
xor
loop
out
test
dec
dec
xor
push
push
pop
fucomp
scas
push
jmp
fsubrs
push
mov
cmc
aaa
mov
les
fcompl
data16
int3
paddb
xor
jae
or
mov
je
inc
push
cwtl
mov
or
or
sbb
cmc
jnp
push
xlat
insb
pushf
adc
mov
daa
xchg
mov
enter
bound
inc
pop
int
pop
lea
mov
and
sub
push
aam
or
lods
push
sub
dec
fcomps
mov
fcoml
hlt
out
dec
adcl
push
sub
jns
sub
ret
lods
scas
or
mov
ljmp
adc
lds
stos
xor
cmpsb
aaa
aaa
outsl
mov
or
imul
jp
lcall
clc
movsb
and
lret
fsubrs
xchg
in
out
outsl
dec
ret
pop
adc
test
pop
out
test
mov
jmpw
mov
or
sahf
ljmp
or
bound
loopne
push
cld
outsl
mov
icebp
ret
in
hlt
adc
or
jg
xor
addr16
pop
jmp
mov
and
inc
mov
lods
pop
shll
sbb
outsb
dec
and
jle
xor
jg
stos
aam
push
jnp
cmpsb
roll
ja
test
xchg
xchg
mov
cmpsb
mov
subb
pop
and
sbb
pop
daa
das
shrl
loope
fsts
popf
pusha
inc
inc
pop
ss
xchg
test
cmpb
ficomps
jno
or
and
xchg
jb
inc
arpl
outsb
mov
lcall
pop
and
pop
xor
or
push
cmp
jge
cwtl
cld
push
dec
rcr
je
ljmp
iret
cmp
nop
xor
add
js
scas
addr16
pop
cmp
jb
repnz
ja
in
push
inc
mov
fdivrs
shrb
mov
enter
rol
adc
xchg
adc
sbb
inc
orl
adc
movsl
sbb
loop
aaa
adc
int
sbb
adc
insb
mov
div
push
mov
movsl
and
sahf
fwait
ljmp
jne
adc
aas
xor
fwait
stos
and
rcr
mov
and
dec
sbb
in
inc
sahf
xorl
cli
outsl
mov
pop
nop
lods
add
mov
addr16
and
fsubr
loopne
addr16
and
pop
cmpsl
and
lcall
push
lods
outsb
push
adc
and
fsubrl
test
je
clc
or
cmp
sbb
mov
test
xorb
cmc
push
ss
and
lahf
mov
jne
push
pop
push
mov
in
or
xchg
arpl
push
in
add
jecxz
stos
daa
cmp
movsb
call
xor
ret
mov
imul
jmp
jp
fstpt
cmpsb
adc
push
jg
jge
pop
pop
fcmovnbe
mov
add
mov
ret
push
or
shr
stos
and
push
lds
js
push
add
and
xchg
clc
sub
arpl
or
jbe
xchg
dec
add
repz
repz
out
in
sub
loopne
or
pop
pop
hlt
jg
mov
xor
and
xlat
push
cmpsl
adc
mov
addl
mov
dec
jb
into
lods
loop
cmc
mov
xchg
das
jle
out
sbb
cld
lahf
dec
test
sbb
jmp
das
shrl
dec
sub
bound
movsb
mov
roll
jo
or
cmp
mov
inc
inc
add
xor
popa
dec
movsl
sbb
scas
mov
push
or
jnp
nop
mov
lods
lret
xor
push
ret
pushf
cltd
sub
jns
lahf
dec
push
mov
or
loopne
fcoms
cmp
mov
fs
sarb
pushf
shll
mov
xor
out
iret
lock
aaa
cmp
stos
int
xchg
lods
xchg
into
mov
out
mov
fsubrs
and
shll
and
mov
lcall
fwait
lods
rol
lret
mov
push
pop
addr16
popa
jbe
clc
fwait
xor
cli
iret
loop
call
int
imul
rorl
outsl
subb
icebp
lea
orb
dec
pop
and
ds
jge
insl
test
scas
mov
sbb
mov
mov
or
xor
mov
cmp
stc
pushf
aas
adc
jno
lcall
stos
pop
inc
mov
and
add
mov
shr
mov
xchg
mov
jge
push
sbb
cmp
movsb
jno
fistpl
in
cld
inc
scas
pop
gs
lahf
fdivrp
hlt
lret
sbb
mov
pop
adc
in
leave
cmc
fisubrl
push
lock
sbb
and
xorl
pop
sbb
je
mov
iret
mov
mov
arpl
xor
mov
mov
aad
rep
mov
sub
jge
js
mov
mov
stos
xor
insb
mov
cmp
xchg
jns
inc
in
and
lret
or
dec
arpl
icebp
jge
sbb
jo,pn
push
pop
loop
xor
inc
sar
lret
cmc
inc
or
into
mov
fbld
add
mov
mov
sbb
add
call
jmp
xchg
sbb
fdivr
push
pop
stos
pop
lahf
inc
xrstors
jecxz
int
addr16
imul
push
shlb
enter
fistpll
cs
ss
inc
jnp
mov
in
push
adc
mov
cmp
dec
popa
std
loop
mov
dec
mov
xor
cmpsb
or
repnz
push
push
imul
inc
sbb
add
idivl
jnp
and
cmpsl
jns
out
mov
loopne
fisttpl
test
jg
sub
stos
mov
cmc
ds
mov
hlt
stos
aas
mov
add
outsl
adc
rcrl
mov
pusha
ret
cwtl
adc
sub
or
cs
mov
in
test
dec
ret
loope
push
test
xor
mov
pop
xchg
movsl
test
loopne
push
ret
stos
scas
fstp
push
leave
cmp
subb
outsl
push
enter
pop
out
add
pop
lds
loop
or
mov
cld
or
pop
lods
incb
roll
mov
pop
and
imul
and
int
imul
cmp
cmp
aas
jno
loopne
sbb
aaa
lcall
aas
add
pop
cmp
xchg
mov
lahf
and
xor
test
cmpsl
pusha
mov
sbb
cmc
fs
xor
adc
sahf
mov
ss
lret
push
xchg
add
add
outsb
sub
int3
sbb
push
lahf
rorl
add
inc
fs
daa
pop
push
and
dec
outsl
rcll
cmp
out
and
adc
leave
xor
pop
lret
jp
mov
pop
xor
lret
fadds
fmul
cmp
mov
lahf
insb
popa
cmp
je
shl
sarb
lock
icebp
mov
repnz
cmc
jbe
test
popf
jb
adc
push
ficoml
fmuls
or
aas
pop
pop
insl
sbb
lock
fldl
sbb
test
lods
test
iret
xor
shrb
lahf
rclb
test
push
in
push
mov
je
in
push
or
push
mov
sub
pusha
xorb
pop
ret
pop
jae
inc
jg
jne
enter
xchg
in
ja
shll
dec
or
or
mov
sbb
dec
ret
pop
inc
sbb
ftst
pushf
into
sub
jge
loope
cltd
loopne
and
clc
shr
pop
xchg
pusha
push
mov
mov
jg
movswl
xchg
pop
mov
into
cmp
cmpsb
inc
jnp
and
mov
add
fucomip
fldcw
mov
add
add
lods
adc
lret
mov
xor
pop
xchg
inc
jecxz
out
lret
loope
sub
cli
and
dec
pop
add
xchg
mov
xor
mov
sub
aas
add
dec
movsb
std
ljmp
fisubrs
and
scas
jle
inc
sbb
jmp
ret
movsl
cltd
cmp
imul
mov
into
inc
repz
lock
fldcw
or
mov
popf
ret
out
gs
inc
pop
mov
mov
outsb
mov
test
xchg
jl
ret
fnstsw
or
cmp
lret
sahf
pop
cmp
test
fs
pop
pop
add
jp
scas
fwait
push
adc
popa
adc
cmp
jp
js
out
test
incl
cltd
and
cmp
inc
inc
pop
shrl
and
xchg
jo
mov
aas
pusha
mov
push
push
cmpl
imul
push
push
add
mov
bound
jne
dec
xor
stos
loope
scas
aad
hlt
push
into
in
pop
adc
push
ljmp
movsl
dec
mov
lahf
dec
shrb
repnz
pop
stos
xchg
lcall
pop
in
xchg
notl
dec
test
dec
in
ret
hlt
dec
loopne
movsl
leave
orl
stos
cmp
mov
mov
pop
or
daa
xchg
sub
mov
cmpsb
or
leave
xchg
icebp
mov
nop
cmp
and
inc
jmp
sub
out
subl
in
lods
mov
xor
add
dec
and
sub
aad
inc
shlb
push
insb
mov
outsb
sti
inc
mov
aad
xchg
add
hlt
and
jbe
jnp
xchg
call
add
push
loop
push
or
fisubl
es
cmpsb
repz
cmpb
mov
pop
cmp
jb
mov
je,pn
lahf
fwait
test
cmp
fstl
ds
mov
in
fdivrl
jno
out
or
ret
ret
cmp
aaa
loope
ret
inc
add
inc
jg
sub
push
fstpl
cmp
movsl
xchg
je
sbb
jge
inc
repz
call
xchg
sarl
sbb
sbb
repz
fmuls
aaa
in
xchg
inc
dec
cmp
cld
jmp
mov
shll
mov
bound
and
mov
or
pusha
sub
cmp
mov
rorb
inc
pop
lret
sub
nop
pop
push
add
cld
inc
insb
stos
test
aam
mov
cmp
cltd
push
mov
cmpsb
add
inc
sbb
sbb
push
fst
push
and
stc
dec
mov
xor
mov
push
dec
and
add
or
je
insb
lds
dec
ficoms
je
xor
mov
push
cmp
es
mov
lds
add
mov
jae
push
ss
or
pop
pop
push
fistpl
add
lahf
into
and
loope
push
dec
imul
and
mov
mov
dec
imul
lock
jmp
lahf
jge
jo
ja
fsubrs
pushf
pop
aam
out
mov
rol
lcall
push
and
in
stc
testl
add
shrb
lahf
in
jns
out
mov
repz
add
out
push
test
inc
inc
sub
into
repnz
js
fcoms
mov
or
mov
pop
and
sbb
sub
lea
push
inc
cmp
push
sbb
xlat
cmpsb
push
in
push
aaa
rorb
aaa
or
mov
sbb
mov
loopne
stc
das
shrl
pop
in
jne
inc
jmp
adc
call
inc
push
bound
sbb
add
enter
cli
das
jl
scas
jne
mov
in
cwtl
out
aaa
in
int
jge
lcall
mov
addr16
cmp
movsl
aaa
out
ja
cmp
push
or
rcrb
pop
test
aad
mov
loopne
scas
shll
jmp
outsb
imull
fnstenv
sub
js
push
push
lea
inc
paddq
or
inc
in
mov
mov
or
jnp
lcall
dec
out
push
sub
cmp
cmp
leave
sbb
dec
push
push
mov
and
loopne
xchg
jecxz
and
dec
aaa
cltd
sbb
cld
iret
push
setbe
adc
and
add
imul
sahf
and
pop
testl
imul
add
shrl
loope
int3
mov
loop
push
jne
jmp
sbb
out
mov
ja
ds
cmpsb
xchg
xchg
or
mov
mov
movsb
jmp
call
push
andb
or
scas
int
lret
out
fwait
out
es
inc
imul
ja
xor
lret
fldenv
inc
cmp
es
add
jno
int
mov
push
imul
je
je
push
add
inc
xchg
fadd
lret
mov
fcmove
cmc
add
rolb
xchg
lock
xor
inc
push
out
dec
push
adc
xchg
ds
fdivr
adc
xor
aad
aaa
mov
inc
mov
repz
or
adc
jb
test
ljmp
addr16
xchg
mov
and
test
add
add
mov
ss
xchg
and
mov
in
xor
fmuls
inc
bound
fidivs
faddl
or
mov
or
or
or
and
scas
sub
aad
iret
jnp
mov
imul
dec
add
lret
insb
in
xchg
mov
int
sub
cmp
or
enter
jp
mov
xchg
mov
and
xor
and
dec
cli
jge
aam
mov
sbb
das
in
icebp
mov
ds
mov
mov
bound
xchg
adc
pop
mov
push
js
lcall
push
fistl
test
mov
pop
xor
flds
divb
mov
jnp
shlb
lock
sub
icebp
mov
push
outsb
or
cld
dec
mov
mov
mov
cmp
sbb
pop
mov
stos
fisttpll
popf
jecxz
mov
jmp
inc
popa
faddp
mov
dec
mov
xor
sub
or
mov
xor
xor
xchg
ljmp
test
pop
jbe
and
pop
mov
and
push
cli
mov
pop
insl
scas
out
hlt
notb
xchg
pop
cmp
mov
or
js
jno
xor
mov
cwtl
movsb
jl
ja
stc
lahf
push
xchg
insb
sbb
fwait
pop
cmpsb
ja
test
shlb
mov
mov
inc
loop
sub
lods
leave
push
sub
cltd
dec
mov
iret
adc
adc
lds
movsl
pop
fimuls
leave
push
daa
aad
add
out
push
pop
mov
push
push
mov
movsl
push
or
leave
int3
add
pop
out
shrl
push
sidtl
mov
pop
sub
imul
sub
or
mov
rol
push
and
mov
xor
data16
push
test
xchg
ss
outsb
and
loope
pop
dec
hlt
jle
fs
sbb
jg
jne
jmp
aaa
xchg
ds
sub
inc
leave
lcall
push
jo
imul
mov
subl
jmp
add
aaa
mov
in
fnstcw
outsb
aas
outsl
xor
roll
adc
lret
int
pop
jle
xor
repz
adc
add
sbb
test
sbb
pop
or
mov
sbb
addl
mov
push
test
jmp
les
jge
cmpsl
lods
push
pop
xchg
pop
outsb
stos
fs
fiadds
cwtl
popf
mov
sti
stos
mov
mov
and
cmp
int
dec
push
mull
lretw
push
stos
mov
nop
sub
fildll
dec
jg
mov
scas
xor
cmp
rep
xorb
xchg
das
scas
cmp
mov
imul
push
jmp
iret
xor
dec
sub
and
push
push
shrb
out
ds
add
jne
push
push
dec
cmpsl
lret
mov
xchg
lock
repz
std
sbb
mov
push
sub
adc
push
push
sub
mov
mov
pop
mov
out
call
icebp
rorb
or
xchg
stos
sub
mov
subl
xor
jno
add
dec
mov
jne
push
jne
test
pop
cwtl
dec
add
pop
push
call
jge
js
subb
xor
mov
in
cmp
sub
sti
in
notb
arpl
scas
sbb
mov
scas
xor
rcrb
add
lods
sti
jmp
xor
jmp
add
xchg
divl
shll
rcll
push
mov
insl
es
sub
jae
mov
mov
xlat
sbb
and
xor
nop
int
fwait
in
dec
daa
pop
cs
push
dec
arpl
push
mov
ret
mov
xor
in
ljmp
add
in
loop
cmpsb
jns
lods
lds
icebp
lods
mov
push
push
test
cmp
pop
or
and
mov
int3
aas
or
push
enter
xor
cwtl
stc
jle
or
fwait
js
pushf
push
mov
aas
scas
push
sti
call
test
imul
test
rcll
aad
jp
cmp
sbb
dec
icebp
gs
cli
movsb
cmp
test
pop
jne,pt
pop
rorb
fdiv
arpl
push
imul
fsubs
inc
rcr
negl
push
subb
and
xor
inc
mov
mov
pop
push
mov
stos
lret
mov
cmp
xor
jae
dec
lds
addr16
dec
jmp
movsl
mov
xor
imul
inc
out
testb
jg
loope
daa
jmp
jmp
test
outsl
dec
inc
pop
into
fisubrs
fbld
inc
mov
mov
or
add
pop
xchg
mov
enter
sbb
cmp
test
dec
mov
popa
push
mov
ret
fiaddl
adc
pop
xchg
jle
xor
loopne
mov
mov
cmpsb
inc
or
and
ss
jg
xor
dec
aas
and
pop
lock
push
xor
int3
mov
loop
jno
rcrb
ret
ret
iret
outsb
jg
add
pushf
aas
mov
dec
mov
sahf
cmpsl
mov
movsb
sahf
dec
in
sti
in
push
dec
push
pop
xchg
cltd
or
fstpt
sbb
jne
sub
inc
or
sbb
xchg
idivb
push
imul
sub
fwait
and
mov
lret
int3
movsb
stos
frstor
jb
adc
mov
insl
mov
mov
and
pop
add
in
nop
iret
pop
leave
and
mov
and
mov
cmpl
add
pop
push
out
pop
int
fsubr
xchg
cmpsl
cmp
hlt
cmp
into
pop
daa
rcrb
jae
outsb
mov
loopne
out
lret
leave
sbb
push
add
cltd
jecxz
mov
inc
push
sbb
sub
lds
stos
jb
pop
inc
and
stc
pop
hlt
mov
in
jg
or
jmp
xor
cmp
cs
jbe
repz
mov
sbb
jns
orb
mov
jmp
jp
ret
cmc
push
movsl
pop
shlb
or
std
out
xchg
ja
mov
iret
pop
pop
lds
loope
xchg
pusha
mov
ljmp
enter
nop
sbb
mov
ret
jo
add
xchg
jle
fdivl
mov
ficoml
adc
insl
cmp
mov
loope
test
lret
adc
das
sub
xchg
xchg
cmp
sub
inc
push
rcl
ss
add
push
push
shr
aas
sub
cmp
push
push
jge
pop
pop
sbb
orb
dec
or
int
sub
stos
sbb
dec
push
pop
cli
lcall
jne
xchg
pop
pop
jl
das
add
sub
mov
fimull
jo
clc
fadd
sub
mov
push
or
sbb
jb
fnsave
hlt
push
adc
pop
pop
mov
pop
fnstsw
cs
or
sahf
shll
sbb
adc
jb
aas
hlt
sub
xchg
sbb
scas
cmp
sbb
jg
or
je
xchg
std
test
sub
into
stc
xchg
loop
and
shrb
jg
push
lcall
push
movsb
daa
into
mov
les
ret
in
notl
repz
sub
jle
fcoml
jae
sub
cmpsl
adc
push
repz
pop
cwtl
push
adc
push
mov
adcb
sbb
add
daa
out
repnz
test
sbb
scas
daa
inc
jne
popf
and
xlat
mov
or
loop
and
xchg
std
es
rolb
dec
in
aaa
mov
or
sub
cmp
loope
mov
in
lea
mov
ja
mov
inc
lahf
push
jo
adc
aad
into
cmp
mov
push
sub
lea
adc
imul
adc
pop
or
or
inc
jle
adcb
int3
lds
outsl
or
sarl
arpl
jecxz
in
test
sub
jecxz
adc
out
sbb
gs
xlat
test
add
push
subb
mov
lcall
jle
cmc
mov
aad
inc
and
in
cmp
out
fmuls
push
push
push
iret
loope
push
adc
dec
mov
enter
jno
jae
jg
sub
sub
fs
jl
jecxz
sub
mov
pop
jmp
mov
mov
fidivl
loop
sub
outsb
push
xchg
jno
add
pop
inc
leave
mov
jb
fnsave
cmp
mov
bound
test
rcl
push
sub
adc
mov
sahf
pushf
xor
xlat
push
pop
test
and
mov
test
push
repz
lds
lahf
cs
pop
push
add
xchg
shl
movsl
inc
xchg
fidivrl
in
jns
jae
lahf
mov
stos
jns
test
test
dec
cmp
lret
push
dec
insl
push
inc
cmp
and
outsb
sub
cmp
xor
shlb
cs
and
js
popf
xor
or
pop
adc
aaa
xor
adc
push
fstp
les
jl
jb
dec
test
push
sub
adcb
and
lahf
cmp
icebp
or
cmp
into
pop
sbb
jnp
or
mov
push
inc
sbb
mov
inc
sar
frstor
inc
add
jne
test
gs
out
repnz
aaa
call
jnp
mov
jp
xchg
xor
sar
rorb
rorl
xor
mov
inc
sbb
cmp
inc
sub
mov
and
in
xor
orl
fnstsw
push
nop
xchg
loopne
fisubrl
fstl
xchg
xor
jge
loop
lds
in
jle
mov
fsubl
jle
insl
mov
or
data16
fstps
jl
xor
mov
lock
jg
xlat
scas
xabort
outsl
or
fs
test
loopne
dec
inc
sti
mov
cmp
cmp
sbb
out
test
xchg
mov
push
push
xchg
les
or
inc
mov
clc
addb
mov
inc
fidivs
dec
and
push
mov
test
mov
test
xchg
lcall
out
or
movsl
aaa
aaa
jmp
ja
out
ret
push
shrb
lret
stos
inc
push
pop
jne
mov
mov
mov
in
jnp
cmp
xor
adc
push
pop
testl
std
fdivl
mov
iret
cmp
jo
icebp
xchg
rorl
fisttpl
sarb
int3
lahf
push
mov
hlt
fldt
ret
or
sub
icebp
out
lcall
mov
std
out
fs
push
sti
dec
jne
lahf
pop
in
movsb
pop
cmp
push
aad
jb
inc
in
adc
push
daa
cmp
stos
pop
fcmovnu
insb
mov
jne
loopne
int
gs
sarl
lret
movsl
out
cwtl
sub
mov
mov
sbb
push
dec
dec
pop
pop
push
mov
xor
movsb
sub
cmp
ret
dec
add
xor
sbb
jnp
dec
nop
adcl
jo
addr16
add
icebp
pop
das
pop
push
sub
and
sbb
adc
dec
push
stos
pop
cmp
push
lret
jo
addr16
lret
add
adc
mov
arpl
push
adc
cmp
into
bound
ja
jmp
arpl
xchg
dec
pop
inc
or
xor
gs
iret
ret
xchg
enter
push
xor
mov
dec
adc
lods
cs
mov
dec
insb
aas
jnp
sbb
or
and
inc
aad
push
cmp
push
adc
mov
push
sarl
pop
mov
fs
iret
add
hlt
push
jb
jne
cmp
mov
movlps
jl
mov
repz
shll
pushl
push
rorb
add
scas
or
push
dec
decl
jmp
mov
sbb
jb
inc
imul
xchg
int3
cmpl
scas
xor
popa
lea
imul
movsl
xchg
fs
jmp
call
add
lret
xorb
and
test
shl
mov
mov
push
mov
inc
mov
mov
fs
inc
push
clc
mov
rcrb
hlt
leave
and
sbb
mov
mov
jmp
xor
mov
fldt
gs
pusha
sbb
mov
lods
movsl
push
pop
iret
pop
pop
loope
daa
mov
bound
jp
bound
cld
lret
sbb
scas
out
out
dec
es
dec
pushf
cld
js
es
fiadds
lret
push
gs
cs
pop
push
lcall
mov
loopne
imul
in
outsb
ljmp
sbb
xor
out
aam
addl
sarb
mov
pop
out
and
arpl
fidivrs
into
imulb
jno
rorb
rorl
mov
imul
je
nop
cmp
push
xor
jne
adc
sub
out
push
inc
int3
mov
jns
inc
push
pop
dec
sub
jno
rcr
mov
aam
adc
stos
sbb
cmpsl
imul
and
pop
loope
ljmp
and
rolb
adc
jg
pop
lahf
lock
lods
add
jge
inc
cmpsl
outsl
les
fcmovbe
xor
mov
into
dec
adc
dec
and
mov
mov
and
add
in
jo
sahf
cld
cmpsl
push
jp
int3
shlb
es
pop
pop
and
lea
pop
add
out
push
push
mov
test
sub
jbe
sub
lds
and
lcall
bound
mov
ficoml
lret
push
or
jmp
sub
mov
cmpsl
dec
mov
adc
test
inc
push
add
xchg
xchg
add
sub
mov
cmpxchg
mov
inc
aam
adc
popa
lahf
mov
dec
sub
inc
and
jno
and
lods
and
push
cmc
sbb
pop
and
fcomp
cmc
jle
aad
or
mov
cmp
sub
sub
pop
mov
enter
inc
out
xchg
sbb
push
scas
add
popf
xchg
fimuls
sahf
js
int3
mov
pop
fidivl
mov
xchg
test
cmp
aam
push
cltd
into
push
or
es
inc
outsb
cmp
xor
arpl
pusha
dec
in
dec
mov
sbb
insb
stc
ljmp
sbb
mov
mov
jnp
or
xor
push
shll
insl
and
out
mov
loope
inc
ror
imul
mov
repnz
dec
cmpsl
data16
push
loop
call
push
add
push
push
push
cli
add
nop
jmp
push
sbb
add
mov
mov
negb
notb
jnp
inc
scas
push
and
insl
dec
cmp
out
jae
adc
jne
flds
dec
out
aam
sbb
jns
adc
popf
repz
sbb
lret
ljmp
push
pop
xor
je
inc
outsl
arpl
pop
loope
imul
and
mov
mov
xchg
jp
fisubs
mov
movsb
fcomps
mov
xor
push
in
push
pushf
xchg
jmp
mov
xor
dec
or
pop
jno
mov
xchg
dec
push
rol
add
testl
test
or
arpl
xchg
das
mov
push
movsl
in
ljmp
mov
or
mov
jne
pop
cld
pushf
dec
addr16
pop
jae
mov
pop
orl
ds
into
ret
and
sub
test
call
xchg
jl
rorb
mov
cmp
arpl
lcall
cmp
sbb
arpl
push
mov
fwait
ds
outsb
fistpl
add
shrb
xor
scas
cmpsb
cld
add
and
adc
faddl
nop
adc
pop
cltd
lahf
mov
xchg
xlat
div
jbe
and
push
stos
pop
xor
xchg
negb
je
pop
gs
aad
pop
imul
stc
pop
ja
cmp
rcrb
mov
lahf
pop
jge
sti
mov
mov
div
dec
cwtl
sbb
add
outsb
pop
rorb
lcall
mov
dec
ljmp
dec
popa
test
aaa
sbb
insl
lds
jbe
sub
ss
xchg
push
cwtl
addr16
repnz
stos
dec
dec
push
pop
xchg
addr16
jns
xor
scas
dec
push
pushf
cmc
test
jge
stos
pushf
pop
sub
add
adc
nop
js
xchg
or
xchg
jg
lcall
jecxz
inc
popa
pop
mov
idivl
lahf
push
addl
ret
jo
dec
or
sarl
xorb
and
add
dec
mov
mov
add
ds
fs
mov
mov
push
xchg
cli
push
cmp
or
enter
cmc
mov
jg
les
nop
or
ret
sahf
lods
xor
hlt
cmp
sub
mov
xor
out
je
sub
fs
in
dec
aaa
repnz
mov
shrb
adc
jmp
mov
lahf
lret
xor
ljmp
xor
push
stos
cmp
popa
das
loopne
dec
mov
inc
or
scas
daa
out
cmpsl
incl
push
mov
pop
and
sbb
dec
and
iret
and
in
jbe
xor
jnp
in
loop
insl
in
mov
cmp
sbb
push
incl
sti
lds
and
scas
pop
shll
mov
inc
in
insl
je
jno
les
jl
mov
mov
rcrl
jg
sbb
dec
ja
mov
das
adc
sub
sbb
cmp
cmp
out
fcompl
bound
jne
sti
add
out
or
scas
sti
fwait
sub
pop
lea
cmp
icebp
cmp
cwtl
jno
mov
into
xor
sbb
or
cmp
jbe
mov
mov
and
scas
pop
jae
cs
jle
aaa
nop
cmp
sub
lds
jmp
popa
gs
adc
sahf
mov
call
dec
dec
pop
cmp
lcall
movl
jle
in
das
mov
fwait
testl
sahf
mov
nop
dec
dec
push
jnp
lds
jb
leave
mulb
jno
xlat
adc
leave
pop
xor
clc
rcrb
pop
cpuid
sbb
lds
and
sub
loope
sbb
sbb
lock
or
int3
aaa
inc
mov
cltd
cmp
iret
out
push
mov
push
fbstp
daa
pop
in
test
add
in
mov
and
testb
cltd
rorl
rcll
mov
push
sub
hlt
pusha
pop
fsub
mov
jmp
sub
mov
lret
insb
jge
cmp
rolb
and
test
jns
inc
mov
inc
sub
js
mov
cmpsb
ret
jb
add
or
sub
cmpsb
fcom
popa
shl
rclb
out
cmp
bound
cmp
je
mov
idivl
adc
popf
sbb
sbb
push
lea
push
xchg
pusha
mulb
pop
mov
sarl
or
add
cmp
cmp
push
jae
ljmp
adc
jne
push
cld
sbb
adc
mov
mov
repz
or
les
es
mov
fdivrs
sub
cld
mov
out
cmp
jbe
mov
mov
in
pop
mov
xlat
shrl
inc
xchg
xor
ror
packuswb
jno
je
inc
rep
fldt
fisttpll
inc
bound
lods
outsl
or
iret
ds
xor
out
ja
sub
xchg
pop
daa
xor
dec
nop
pushf
mov
cmp
mov
cmpsl
popf
stos
and
jno
fnstenv
xchg
add
divl
sub
push
rcl
lea
pushf
xor
shlb
aaa
daa
lahf
sbb
mov
mov
mov
adc
push
mov
cmpsb
sbb
push
jo
hlt
jae
add
and
lret
iret
stc
movsb
push
cld
lods
xchg
out
hlt
inc
test
loope
inc
movsl
notl
lods
fcmove
mov
in
mov
sbb
aas
mov
mov
adc
addr16
xchg
jecxz
cli
push
ret
popa
add
xor
mov
mov
stos
push
fwait
pop
cmpsl
mov
rcll
insb
dec
stos
stos
sbb
addb
notb
data16
pop
push
lock
dec
cmp
and
icebp
push
dec
inc
xor
lock
insl
inc
jnp
in
fsubs
xchg
xchg
or
rolb
sbb
sub
lods
pop
dec
sbb
dec
rcll
push
adc
mov
xlat
push
lahf
and
int3
mov
insl
neg
xchg
aam
outsb
out
andl
loopne
data16
xor
stos
push
jle
mov
pop
add
xlat
test
cmp
aas
sbb
sahf
mov
inc
jmp
out
mov
dec
xchg
jo
shl
ficomps
jno
adc
jp
mov
cmp
mov
ljmp
addb
jge
and
out
cmc
xchg
lcall
and
mov
mov
decl
test
nop
insb
lcall
jb
jne
add
add
outsb
xor
jmp
push
push
test
out
push
jecxz
add
mov
lods
cmp
jge
mov
mov
ficompl
inc
xor
push
test
sub
test
cmc
je
insb
sub
mov
fcom
in
pop
push
sbb
repz
fcomp
iret
test
push
add
imul
mull
ret
cltd
sub
js
sub
sub
mov
addr16
into
pushf
cwtl
sbb
jae
test
mov
inc
add
fiadds
mul
cmp
scas
mov
scas
in
in
xchg
jne,pt
jne
cmp
cmpsl
adc
lret
mov
fistpll
pop
shll
nop
mov
mov
and
cmp
pop
leave
sti
push
sub
sub
jnp
push
inc
xorps
lcall
mov
mov
pop
xlat
pushf
movsl
int3
or
push
jne
mov
pop
cld
hlt
xchg
pop
sahf
test
push
mov
sbb
ret
arpl
data16
jb
mov
and
nop
adc
outsb
fdivr
jp
xchg
cwtl
pop
and
jg
sbb
sbb
pusha
adcb
rorb
jae,pn
mov
cmpb
dec
adc
inc
xchg
sub
outsl
push
or
and
fldl
dec
adc
and
inc
data16
js
mov
les
lds
and
fdivs
popf
fisubrl
pop
xchg
inc
jns
jbe
bound
jbe
fdivl
mov
jle
sub
loop
pop
adc
push
jo
lock
fnclex
and
testl
push
add
ljmp
or
push
xchg
inc
sbb
sub
jae
pop
imul
popa
lret
xlat
add
xlat
xchg
and
mov
adc
pop
cltd
jo
sbb
push
call
xchg
std
or
imul
cmpsl
pop
xchg
cmp
int3
daa
mov
imul
push
mov
jo
cld
ret
or
into
xorb
xor
cmp
xchg
xchg
and
xchg
imul
push
ret
aam
inc
pop
push
sarl
lock
or
pop
push
mov
xor
push
sbb
inc
and
adc
sub
test
pop
jg
popa
pop
in
mov
mov
outsb
xor
cs
sbb
inc
iret
imul
test
sbb
gs
xor
jnp
pushf
test
insl
jl
inc
dec
sub
mov
aad
ja
jo
inc
add
adc
lds
cmpb
scas
dec
mov
dec
cmpl
jecxz
arpl
ds
jo
inc
xchg
lods
mov
mov
cmpb
push
ja
insb
cmp
and
mov
lea
cmp
push
mov
ret
lret
lahf
dec
xchg
mov
ds
pop
adc
addr16
dec
popa
arpl
dec
imul
cmc
out
shrl
and
pop
mov
push
movsb
xlat
lods
lods
leave
lcall
or
in
bound
clc
push
bound
xor
fisubrs
pop
cld
repnz
scas
push
fistps
loopne
int3
into
mov
sub
enter
jbe
shrb
sub
int
repz
in
xchg
inc
stc
das
adc
and
push
ficoml
cs
insl
imul
shr
cld
arpl
fmulp
xor
sbb
mov
inc
jbe
int3
rorb
xor
ret
daa
pushf
icebp
fnstenv
addr16
repz
iret
shrb
mov
test
or
int
inc
xor
dec
pop
bound
xchg
in
fcoml
fsubp
jle
and
icebp
dec
stc
xor
push
mov
ss
push
fistpl
mov
cld
dec
aam
fisubrs
imul
int
rclb
push
jg
lods
orb
loopne
sub
xchg
fsubl
insl
inc
mov
imul
dec
pusha
ss
jl
adc
jmp
cs
jmp
xchg
mov
mov
lcall
dec
gs
pop
jne
cmpsb
jp
popf
dec
nop
dec
int3
mov
cs
in
je
lahf
mov
stos
mov
ja
icebp
add
jo
mov
dec
mov
sub
inc
repnz
pusha
scas
arpl
outsb
sub
lods
cmc
pushf
cmp
les
js
adc
or
out
sbb
push
shrl
xchg
stc
test
add
push
xor
pop
mov
leave
dec
xchg
sub
or
add
mov
mov
jecxz
popa
fimuls
xlat
int
ficoml
lret
sbb
xchg
in
roll
popf
fsubr
gs
gs
pop
xchg
mov
pop
mov
push
cltd
icebp
mov
fildll
sub
mov
push
or
push
cmpsl
adc
ret
into
in
rolb
std
sub
iret
push
pop
scas
push
sbb
jle
loop
popf
popf
pop
aas
xor
or
pop
negb
sub
and
imul
mov
mov
scas
scas
hlt
js
sbb
mov
sete
cwtl
int
cmpsl
dec
adc
mov
mov
or
fs
adc
push
aad
test
mov
ret
subb
arpl
test
repnz
scas
mov
fisubs
jbe
vshufpd
das
cwtl
inc
movsl
push
xor
pminub
hlt
cmp
lods
arpl
pusha
mov
js
or
fisubs
inc
out
shl
and
fbstp
jmp
cs
jns
jnp
movsl
mov
inc
nop
mov
lock
lret
mov
ja
stos
out
dec
mov
mov
aad
sub
lcall
insb
xorl
jbe
jmp
icebp
mov
xchg
add
adc
imul
aam
sbb
shr
outsb
sti
add
mov
fldenv
dec
cmp
cmc
iret
sbb
add
rcll
sub
fisttpll
addb
lea
xlat
sbb
sub
popa
mov
mov
data16
data16
mov
addl
js
icebp
ja
in
or
outsl
in
jmp
and
in
pop
adc
push
popf
leave
in
mov
cmp
jle
add
and
fstp
mov
lcall
movsl
jecxz,pt
rorb
rcrl
and
push
jg
cs
or
gs
mov
add
popf
scas
leave
cmpsb
mov
mov
lea
push
push
cwtl
jne
mov
jns
jbe
mov
mov
xchg
sahf
lahf
and
dec
mov
xor
push
lods
dec
inc
jg
dec
mov
or
sub
inc
das
mov
nop
jne
add
out
sub
fmul
and
out
xor
lock
push
sbb
jecxz
test
out
add
rcl
rorb
inc
inc
arpl
adc
or
xchg
int
out
popa
fildll
test
pop
xor
in
incl
inc
inc
sub
daa
iret
jne
mov
xlat
out
cltd
jnp
fisubrl
cltd
loopne
cmp
xchg
int3
and
xchg
bound
scas
aaa
call
out
fsubl
xor
inc
mov
lds
sub
mov
mov
ljmp
test
es
dec
cmc
push
lods
push
std
xor
in
loop
mov
cld
push
adc
jmp
pushf
fs
and
not
add
xchg
pop
sbb
xor
sbb
jge
std
fdivp
cli
mov
xchg
gs
leave
rol
sub
pop
xor
mov
jno
and
jge
lods
sub
test
shll
mov
call
std
sti
mov
and
add
lcall
pop
loop
movsb
push
scas
fidivl
loop
inc
lret
movsb
pusha
fld1
push
mov
xlat
or
stos
dec
sbb
in
pushf
outsl
mov
outsl
mov
mov
nop
fnstsw
out
jle
ss
sbb
js
lcall
repz
pusha
jg
fldl
lret
push
scas
popf
loope
jmp
adc
imul
fwait
pusha
es
pop
push
cmp
push
mov
ffreep
adc
cmc
ss
mov
pop
insl
loopne
xorl
ds
push
push
fstps
rorb
incb
cmp
aaa
push
xchg
mov
aad
mov
xor
mov
scas
mov
testb
imul
loope
addr16
pop
sbb
repz
mov
mov
push
cmc
inc
push
and
pop
jae
cmp
or
mov
sbb
mov
jl
cs
ss
and
or
cmp
jne
ret
inc
xchg
lods
insl
int3
hlt
fcoml
fildl
pop
aas
cmp
mov
adc
pop
sarb
cmpsb
adc
mov
cmc
xchg
das
xlat
or
stc
shrl
pop
pop
ja
pop
mov
jle
outsl
xchg
xchg
and
push
sbb
mov
stos
dec
insl
push
xchg
jno
add
jle
hlt
sbb
ljmpw
pop
fisttpl
fistps
scas
mov
addr16
loopne
jg
cmpl
test
cltd
test
sbb
adc
ficompl
inc
push
data16
aam
lahf
jne
sub
int3
push
notb
jp
in
icebp
faddp
and
loop
add
sub
mov
loop
push
xchg
arpl
dec
dec
jecxz
ficoms
pop
loopne
fidivl
or
lock
pop
test
arpl
push
pop
lahf
addr16
pop
lods
add
jns
call
mov
add
in
rorb
dec
inc
xor
les
shld
pop
mov
mov
cs
xor
mov
push
mov
insl
ss
xor
pusha
dec
imul
test
sbb
int3
add
sub
dec
sub
or
insl
or
cmp
adc
inc
inc
pop
add
jnp
add
test
sub
mov
sub
pushf
jmp
inc
icebp
imul
jae
or
addr16
adc
mov
and
stos
mov
mov
push
sub
dec
out
mov
mov
scas
out
inc
insl
mov
lcall
fsubrp
lock
pop
sbb
insb
jp
rorl
jmp
rorb
pop
ret
lea
sbb
push
xchg
movsb
pushf
stos
rcl
sarb
out
leave
xor
out
cmpsl
ja
or
xor
adc
push
jl
and
inc
idivb
mov
dec
pop
loope
mov
mov
les
push
push
sub
dec
sbb
or
call
popa
fsubs
cmp
adc
ret
outsl
mov
mov
mov
mov
jae
fwait
seta
mov
aaa
sbb
cmp
or
rsqrtps
jnp
dec
and
pusha
jb
and
call
dec
xor
mov
sahf
jbe
sbb
mov
mov
inc
and
hlt
sbb
add
jp
xchg
cld
fcompl
stos
add
stos
fists
xchg
mov
jmp
clc
pop
lret
lds
enter
adc
test
adc
jae
jle
cmp
mov
jmp
xor
pop
xor
and
mov
dec
cmpb
cmp
cwtl
mov
in
push
pop
push
dec
or
cld
adc
outsb
dec
and
cmp
push
fldcw
or
push
cltd
xchg
push
inc
clc
pop
pusha
pop
dec
cld
jb
push
xor
sti
push
and
adc
notl
hlt
popf
scas
cmp
test
adc
ds
sbb
xor
fisubrs
inc
addb
outsl
pop
xchg
jl
mov
movl
cmpsl
jg
jo
xor
sbb
and
movsb
and
hlt
repnz
jns
pop
and
pop
bnd
inc
push
inc
in
adc
shr
in
in
test
inc
aas
inc
sbb
rcll
call
enter
sbb
inc
js
dec
inc
push
leave
or
int3
dec
cld
lret
mov
xor
push
arpl
jno
movsb
jbe
pop
shll
mov
cmp
std
test
push
pusha
in
fisubrs
cmc
inc
mov
dec
aam
insb
xchg
int3
inc
or
sarl
out
add
lcall
arpl
ja
pushf
test
pop
stos
xchg
mov
cmc
movsb
or
mov
or
fcmovbe
gs
scas
lds
mov
cltd
inc
adc
mov
loope
xchg
lcall
mov
push
outsb
std
aam
dec
loop
and
and
loope
add
adc
jecxz
mov
xor
rcrl
mov
mov
and
jecxz
insl
pop
fstps
dec
test
jae
adc
arpl
or
leave
push
add
or
and
jnp
push
jp
push
pop
out
lea
sub
test
pop
fstps
jne
dec
cmp
sub
call
loopne
into
test
adc
or
xorb
xchg
adc
mov
lret
sub
mov
push
push
insl
inc
mov
mov
jne
inc
mov
scas
popl
cmp
repnz
jno
mov
or
push
mov
pop
pop
dec
pop
adc
icebp
inc
and
rcll
add
pop
lea
xor
jle
popf
imul
stos
push
nop
sub
jnp
stc
test
cld
nop
jg
inc
loope
repz
jg
call
add
pusha
cmpsb
add
jo
add
cli
sbb
jnp
outsl
inc
mov
adc
lcall
and
repnz
inc
xor
xlat
xor
test
jg
arpl
scas
dec
insb
in
pop
mov
mov
xor
and
cmp
dec
rorb
bound
jo
insl
cli
mov
adc
std
hlt
jne
push
ret
mov
xor
ja
lods
andb
or
push
ds
movsl
ror
into
leave
push
add
ljmp
jmp
loopne
shl
mov
out
mov
lret
insl
lds
pop
push
outsb
add
pop
jmp
je
out
inc
arpl
mov
mov
lock
out
imul
nop
lea
add
adc
das
repnz
jno
push
gs
cmpsl
pop
push
inc
mov
mov
sub
sbb
movsb
push
pop
xor
sbb
xor
jecxz
xchg
sub
movsb
inc
sub
call
jle
fnstenv
mov
inc
les
cld
lods
jne
and
xchg
mov
cmp
lods
pop
inc
imul
fcmovb
pop
cmp
adc
pop
enter
int
pop
sbb
mov
and
jnp
sahf
jecxz
jecxz
dec
jg
cltd
xchg
pop
imul
and
insl
repz
mov
inc
push
in
out
rcl
out
push
mov
scas
xor
outsb
jae
jge
lcall
push
mov
pop
xchg
mov
hlt
mov
out
ficompl
add
pop
xlat
sbb
fimuls
clc
or
add
adc
mov
js
shrl
or
sahf
aam
test
loopne
daa
mov
cmp
mov
fildll
mov
int
xor
pop
xchg
mov
dec
mov
das
mov
inc
cs
div
mov
add
scas
iret
push
loop
dec
mov
mov
xchg
and
mov
jo
rorl
jge
adcl
mov
int
inc
rclb
cli
push
or
dec
adc
and
fs
xlat
cmc
push
clc
mov
xor
ja
lcall
repnz
es
jle
cmp
icebp
jle
dec
int3
sti
jl
outsb
sbb
es
fldl
dec
or
push
imul
or
dec
data16
fs
mov
das
inc
pop
pushf
in
popa
aam
call
daa
fidivrs
sub
popa
adc
mov
xchg
lret
int
xchg
cmpsb
inc
in
fcmovnbe
nop
or
xchg
rcll
shlb
jle
ret
add
test
cmp
movsb
pop
xchg
pop
pop
icebp
push
jno,pn
test
sbb
pusha
inc
or
or
jnp
loopne
xor
or
mov
inc
mov
xchg
repnz
je
cmp
lcall
add
adc
dec
push
mov
jb
sbb
mov
pop
dec
add
or
add
enter
fldcw
rorl
jmp
out
aas
push
mov
pop
dec
shl
lcall
fwait
jle
repz
cmpsl
push
call
dec
jnp
adc
mov
lcall
insl
add
out
imul
xor
fadd
fs
in
nop
pop
punpckhdq
and
and
dec
insb
arpl
loopne,pn
das
cmc
push
test
setle
test
and
test
lock
test
shll
movl
insl
pmulhuw
aaa
adc
add
jno
pop
or
sarb
adc
dec
decb
dec
xlat
lds
fwait
xorb
btc
ds
xor
add
pushf
jg
dec
or
jbe
or
in
pushf
inc
lret
roll
xchg
loope
aam
mov
shll
idivl
dec
and
and
outsb
mov
dec
subb
scas
pop
outsl
sub
inc
into
lock
cs
scas
popa
repz
gs
call
pushf
cs
popf
pop
fimull
pop
clc
dec
stos
dec
in
popa
push
fstpt
cmp
pop
mov
rorb
and
xor
pop
mov
rol
lods
into
enter
xchg
xor
fnsave
icebp
setbe
mov
add
pop
sub
pop
popf
pushf
sti
fs
rolb
add
jnp
xlat
bound
xchg
or
jp
jmp
or
or
pop
ror
mov
sbb
cwtl
xchg
jg
loopne
in
inc
outsl
call
xchg
push
dec
mov
test
dec
jbe
stos
loope
and
incb
push
or
int
pushf
rolb
std
pop
push
pushf
movsl
movsb
cmpsb
sbb
ficoml
push
lea
dec
divb
in
dec
mov
pushf
jmp
ret
and
in
sub
lock
ret
and
shrl
mov
addr16
or
inc
out
cmp
lods
mov
sub
push
cmp
out
cmpsl
mov
movsl
mov
dec
xchg
and
pop
pusha
dec
fisttpll
sbb
fidivl
or
xor
repnz
xor
cmp
add
sbb
and
jae
mov
hlt
cmp
sbb
iret
mov
imul
fcoml
lock
sub
pop
cwtl
mov
ds
int3
rcl
repz
and
movl
inc
dec
into
push
mov
pop
imul
lret
out
popa
dec
stos
ja
mov
inc
in
push
das
shlb
inc
test
in
pop
stos
loopne
xchg
test
lock
out
insl
das
sub
pop
xchg
cltd
data16
mov
dec
fidivrl
jle
sbb
cmp
inc
jecxz
js
es
outsb
sub
test
sbbl
pop
loop
gs
pop
in
jge
mov
mov
inc
mov
pop
rcl
outsl
push
fdivs
lcall
inc
jmp
xchg
add
mov
cmp
lock
jmp
or
mov
das
sbb
jge
filds
in
std
cmpsb
or
push
and
xor
scas
cs
xchg
push
push
pop
jmp
push
js
adc
pop
mov
pop
int3
xor
dec
xchg
ss
sbb
jle
sti
bound
pop
test
les
fcom
inc
mov
test
sbb
xor
test
cmp
outsb
insb
inc
loopne
and
sub
jge
pop
lods
push
push
xchg
pop
cmp
out
jge
jb
fcmove
and
cmpsb
jmp
inc
fxch
mov
test
push
scas
lea
push
fstps
xchg
sub
out
mov
jl
pop
fistpll
sbb
lock
pop
lock
cmpsl
dec
imul
push
jl
inc
jns
mov
fidivrl
addr16
mov
les
lea
pop
dec
ret
and
outsl
push
fdivrl
or
test
lock
xor
das
lcall
sub
orl
sub
pop
dec
imul
mov
cmp
testb
sbb
jne
and
int3
rorl
pop
sti
mov
test
negb
mov
ljmp
add
and
pusha
scas
jl
scas
fs
fwait
or
cmpsb
dec
adc
jp
or
fiadds
lods
adc
xlat
call
pop
cmpsb
xchg
clc
outsb
nop
dec
ds
cmp
sub
orl
inc
add
add
js
jno
fcompl
fsqrt
out
adc
shrb
bound
inc
xchg
lods
cmpl
icebp
jle
xor
push
mov
jo
icebp
lahf
das
cmp
sbb
pop
mov
and
test
add
mov
xlat
xchg
lahf
int3
push
inc
fsubrs
xorb
iret
testb
push
lret
mov
outsl
dec
xchg
es
jp
in
lcall
bound
and
sbb
jne
sub
dec
cmp
mov
xor
sub
and
or
sub
leave
loopne
nop
fildl
push
dec
xor
push
dec
inc
sub
dec
push
inc
test
xchg
scas
imul
cmp
ss
mov
stc
hlt
mov
loop
or
xlat
mov
add
in
in
loope
pushf
mov
iret
mov
imul
or
mov
lods
jecxz
mov
js
dec
ds
stos
dec
sub
push
cli
mov
iret
adc
dec
jmp
sub
leave
xlat
ss
outsl
inc
jmp
and
and
jne
mov
pop
movsb
adc
mov
iret
push
test
mov
xor
sbb
lods
fimull
rorb
xor
imul
in
jb
inc
call
jl
add
mov
mov
mov
int3
roll
scas
adc
shl
xor
xchg
add
xchg
repnz
adc
pop
xchg
sub
je
xchg
in
mov
movsl
lret
sahf
mov
aad
loopne
orl
popa
mov
les
popf
cmp
lahf
sbb
mov
pop
push
outsl
add
stos
lret
andl
aam
adc
push
cltd
adc
test
add
add
es
push
movsl
mov
fwait
rclb
das
push
push
or
lds
sbb
mov
aaa
insl
pop
xor
in
aas
test
rclb
and
sbb
into
rorl
adc
push
mov
adc
dec
inc
sti
push
out
pop
or
out
pusha
cwtl
push
inc
icebp
pop
add
or
mov
xchg
rcr
insb
fdivrs
mov
out
idiv
jae
or
and
rcrl
dec
adc
cmp
call
cmpl
nop
pop
int3
push
and
fdivrl
inc
dec
out
insb
int
cmp
incb
loopne
mov
dec
sbb
js
cld
sbb
fildll
sub
sahf
push
aad
std
sti
pop
jb
sub
or
sahf
clc
jo
sti
pop
pop
and
sbb
aaa
mov
ljmp
mov
jb
aam
sbb
sbb
adc
jo
out
repnz
mov
mov
mov
in
mov
xchg
mull
daa
mov
in
or
jmp
cmovo
and
outsl
add
shlb
push
jae
xor
loop
icebp
clc
cmp
in
outsb
xchg
lea
adc
scas
and
xchg
push
sub
xorb
shll
xor
pop
cmp
aas
or
jmpw
inc
sub
mov
cmp
jl
jmp
add
lds
adc
inc
and
mov
loop
test
adc
popa
inc
or
push
xor
lahf
leave
mov
push
dec
insb
aad
dec
push
repnz
sbb
lods
xchg
and
mov
dec
xor
xor
sbb
ja
clc
adc
aas
and
pop
xchg
pop
add
mov
insb
inc
cli
pop
lods
or
movsb
sbb
pop
dec
shlb
in
sub
das
fs
nop
jp
sub
lock
lret
jno
cmp
dec
ficoms
sub
insb
xchg
sbb
cmp
push
into
icebp
xor
cld
mov
in
fidivl
dec
mov
lds
test
push
lock
mov
ret
cmpsb
shll
xchg
cmc
inc
ret
iret
lds
in
cmpsl
sub
outsb
mov
mov
and
xchg
push
mov
mov
jne
and
mov
addr16
dec
bound
divl
adc
in
push
in
mov
lods
jecxz
outsb
outsb
icebp
mov
or
jmp
inc
mov
pop
loop
xchg
and
adc
sub
cli
cmp
rcl
jns
mov
fisubrl
loopne
dec
scas
scas
dec
paddusb
in
push
push
popa
loopne
lahf
cmpsl
lds
mov
xor
or
mov
push
dec
inc
outsl
mov
hlt
adc
jmp
pop
test
es
repz
ljmp
sub
jno
mov
inc
pop
xchg
mov
sbb
push
jnp
mov
mov
jns,pt
stc
pop
fwait
mov
pop
push
jb
pop
rcrb
out
les
jns
push
enter
int
lds
cmp
sub
outsl
pop
mov
adc
cmp
push
dec
jle
or
jp
add
cmp
in
jns
stc
xor
jmp
das
icebp
lret
xor
clc
shll
std
mov
inc
jb
pop
xor
scas
xchg
ret
push
rolb
out
daa
out
clc
add
daa
repnz
sbb
fsubr
outsl
cmc
js
cmp
dec
xor
or
les
xchg
adc
inc
and
push
mov
mov
pop
dec
insb
add
inc
stos
adc
pop
dec
add
ds
and
aaa
xlat
cmpsl
sbb
add
cmpsl
sub
test
pop
sub
test
jns
mov
sub
and
adc
ror
pop
jnp
jno
das
inc
dec
daa
lcall
cltd
push
cmp
in
add
or
outsb
xchg
sub
test
cwtl
sahf
fistl
ret
cmp
push
jo
ds
push
mov
adc
mov
jp
push
cld
jo
jge
xor
cmp
mov
xorl
imul
subb
push
mov
pop
adc
mov
xchg
dec
leave
lods
dec
lea
dec
mov
inc
sti
movl
jmp
sbb
shrb
test
cmp
jnp
pop
pop
iret
mov
out
and
push
test
and
andl
push
mov
aaa
dec
mov
cmp
aas
mov
dec
std
sub
push
out
arpl
in
subb
dec
cmp
jp
loope
dec
pop
andl
xchg
xchg
xor
jb
insb
xor
out
sub
aam
std
pusha
mov
pop
and
cmpsl
lret
repz
lcall
lahf
jp
rolb
jle
fistpl
jns
mov
aaa
cld
sub
jp
nop
inc
jns
mov
push
cmp
outsl
ret
mov
jg
pop
pop
pop
mov
add
insl
sbb
add
nop
cmp
in
adc
mov
icebp
pop
fnstsw
leave
dec
add
test
popa
mov
jp
xchg
xor
mov
fnstcw
xchg
sub
xchg
sbb
pop
sbb
jbe
jbe
out
pop
imul
mov
or
and
and
ret
mov
inc
int
xor
mov
scas
add
stc
push
mov
cmp
aam
aas
xlat
out
lcall
fbld
dec
push
xchg
cmp
ja
pop
mov
push
or
mov
rcrb
fsubl
aaa
aad
mov
xchg
push
fcomi
in
sbb
imul
call
and
jecxz
bnd
jle
pop
addr16
pop
xor
sti
jmp
sbb
arpl
add
mov
push
jb
enter
and
mov
xor
loope
fsubr
mov
sbb
mov
out
adc
and
jb
xchg
mov
pop
subl
outsb
xor
push
mov
lods
push
or
bound
std
lods
shl
subl
in
es
jmp
pop
cmc
cmpsl
cltd
scas
mov
cli
add
jae
dec
fimuls
pop
rorl
jecxz
mov
js
sbb
cmc
xlat
jbe
outsl
outsl
out
fwait
cld
cwtl
test
fmul
aad
inc
xchg
pop
pop
or
dec
push
jle
leave
xchg
xchg
and
shl
xchg
imul
test
js
int
cwtl
fwait
adc
mov
jle
push
repnz
rclb
stos
imul
mov
in
dec
mov
je
sub
sbb
loop
mov
inc
test
out
js
rcr
lcall
mov
cmpsb
lods
dec
mov
lret
cs
out
fisubl
ret
cwtl
cmp
jp
adc
mov
inc
adc
movd
xor
cmp
test
xchg
pop
stos
pop
adc
ljmp
out
mov
popa
and
test
fbld
fcmovu
jnp
orb
cmpb
jg
xor
ja
fisubl
jmp
lcall
pop
jl
and
in
jnp
in
inc
out
inc
gs
mov
scas
xor
imul
getsec
popa
negl
aad
jae
enter
mov
add
nop
int
dec
push
mov
test
repnz
insl
push
add
dec
stos
push
sahf
xchg
dec
out
cmp
ljmp
push
stos
inc
cld
movsl
ja
lock
inc
xchg
dec
dec
add
ss
or
sbb
push
jecxz
xchg
int3
and
iret
lret
sub
mov
xor
jns
out
mov
pusha
out
xchg
clc
mov
nop
sub
sbb
xchg
lcall
test
dec
cmp
sub
call
stos
or
inc
jge
fisubrs
and
int3
add
cmp
rcll
lods
outsl
fcmovb
add
mov
mov
mov
mov
pop
inc
stos
fsubs
xchg
jmp
outsb
cmp
mov
jmp
cmpsb
jp
xchg
sahf
sarb
fidivl
xchg
jo
idivl
dec
repnz
hlt
xor
shrb
dec
lock
xchg
mov
lret
lds
mov
or
jb
les
fucom
shr
cmp
ret
push
xor
mov
into
mov
push
int3
push
xor
jmp
outsl
sub
mov
das
pop
insb
sbb
cmc
inc
loop
and
popa
cli
test
loopne
rcrl
sbb
mov
xor
int
pop
cmp
mov
rolb
outsb
xor
fmul
or
dec
pop
sbb
mul
aam
and
sbb
mov
or
fcomps
jmp
inc
dec
hlt
xor
jl
test
sub
xor
pop
inc
imul
jmp
mov
jle
mov
test
xor
sti
push
add
sbb
xchg
mov
outsb
pop
xchg
add
mov
rorb
lea
sub
fwait
cmp
lods
in
or
push
pushf
lods
cmp
sti
inc
inc
sub
push
mov
jg
dec
push
cmp
and
mov
mov
push
push
lret
jge
push
dec
aad
movl
ss
dec
shll
pop
mov
xor
adc
jle
xchg
sbb
out
or
inc
prefetch
fwait
mov
xchg
or
jmp
sub
push
push
bound
imul
mov
mov
cmp
je
scas
addr16
ja
out
sbb
outsb
fadds
push
out
add
dec
gs
mov
cmpl
jl
aaa
andl
fs
fwait
sbb
add
ljmp
divb
xor
xor
inc
arpl
mov
xchg
push
mov
stc
add
cmpsb
pop
cmp
aam
cmpsb
cmp
inc
ficomps
js
xor
imul
test
jl
sub
ljmp
je
mov
sti
scas
sti
pusha
lods
xorb
fdivl
mov
fnstcw
fwait
in
mov
mov
adc
lret
dec
int
push
xchg
nop
loopne
shll
push
add
jbe
mov
push
cmpsl
pop
or
sarb
push
or
jnp
fildl
test
movl
ss
mov
into
fistl
jo
jge
cwtl
inc
xchg
and
push
inc
jl
sbb
and
inc
es
popf
adc
inc
movsl
pop
shl
push
imul
negb
xor
inc
and
add
cmp
add
popa
push
sub
arpl
jbe
inc
pop
xchg
orl
shl
out
lods
pop
test
data16
cmpsl
lods
inc
push
iret
dec
orl
sti
flds
fldcw
jb
lcall
adc
cmp
xor
addl
sbb
jne
jns
pop
pushf
fmuls
inc
dec
scas
lds
inc
inc
mov
not
lods
ss
sub
mov
xor
mov
jns
aam
jmp
xlat
iret
inc
mov
out
out
arpl
stos
lods
ljmp
in
pop
or
push
pop
and
push
in
mov
mov
push
rorb
jle
jmp
cmp
push
lds
add
cmpsl
int
in
or
sbb
cmp
pusha
xchg
mov
cld
fisubrl
sub
shlb
cli
iret
cmp
mov
sbb
push
xchg
out
add
sub
mov
jne
jne
xor
sarb
or
gs
dec
test
cmc
mov
lods
cmp
aam
cmp
dec
or
mov
into
xchg
clc
dec
or
pop
dec
adc
mov
adc
mov
dec
xchg
shl
dec
jbe
lods
mov
lods
jge,pt
test
fdivrp
mov
push
mov
jg
cs
mov
stos
sub
notb
ljmp
pop
mov
xor
mov
pop
cmpsl
pop
add
sbb
aad
mov
pop
stos
mov
cmp
mov
leave
stc
jnp
push
lret
mov
orl
andl
aas
sbb
out
sbb
mov
sbb
decb
push
push
mov
ljmp
pushf
lret
pop
xchg
cwtl
icebp
jne
or
movsl
jmp
add
inc
adc
push
or
lea
in
cltd
jp
js
dec
pop
jno
and
mov
pop
out
xlat
popf
pop
aaa
std
cli
mov
and
jo
push
cmp
pop
sub
lahf
fdiv
fisubrs
mov
cltd
dec
scas
xchg
pop
cmc
lock
arpl
add
mov
ss
cmpsl
enter
mov
adc
sub
lods
cwtl
push
cmp
loop
push
fcomps
mov
icebp
xor
pop
inc
push
dec
es
mov
add
jl
xchg
in
inc
loope
push
cvtdq2ps
das
push
jecxz
mov
add
int3
pusha
insl
movsb
add
dec
rcrl
bound
push
sub
adc
mov
dec
int3
mov
or
mov
xchg
rcl
cmp
in
push
mov
add
cld
inc
fiadds
imul
and
pop
sbb
aaa
or
xchg
cld
hlt
das
and
adc
cmpsb
sbb
icebp
or
sbb
add
js
stc
jno
sbb
xchg
jecxz
cwtl
imul
mov
repz
test
add
in
lds
pushf
int
mov
pop
jmp
lock
out
sub
call
lret
shll
outsl
fmuls
rcrl
in
sbb
pop
cmp
loopne
pop
lods
lds
sbb
fldcw
loope
cmp
stos
jecxz
in
int
xlat
xchg
into
aaa
mov
pop
dec
jmp
xor
xorl
in
pop
inc
movsl
push
jecxz
loop
out
fs
sub
ret
add
push
mov
sahf
repz
mov
cmp
aad
clc
mov
push
add
jns
pop
sub
lcall
dec
shr
xchg
shll
imul
mov
jg
add
xor
jb
dec
push
cmp
or
stos
in
addb
lret
stos
sub
adc
andl
mov
fnstenv
add
int3
dec
and
add
test
cmp
popf
mov
mov
lcall
jo
cs
sbb
dec
sub
pushf
data16
push
popa
stos
frstor
int3
orb
jge
mov
jmp
int3
int
pop
sar
xor
loop
leave
sti
dec
insl
lahf
cmpsb
inc
cmp
inc
sbb
pop
test
roll
push
xorl
xor
int3
test
dec
jb
and
insl
add
imul
dec
push
lods
and
enter
mov
dec
shr
xor
push
sub
xchg
imul
mov
aad
jns
jne
push
add
xor
popa
sub
mov
xor
das
sub
in
in
push
cmp
jno
aam
aas
lahf
add
testl
popf
idivl
jo
mov
bound
add
test
add
mov
pop
int
rorb
imul
xlat
test
lock
push
add
push
push
mov
jmp
int
add
mov
aaa
push
dec
leave
loop
mov
mov
lret
push
or
or
stos
push
inc
aas
jle
les
sbb
jl
push
add
mov
push
lea
add
xchg
imul
jno
imul
xlat
xor
xor
clc
dec
pop
js
sbb
pop
imul
test
repz
inc
leave
cwtl
inc
divb
push
mov
in
in
cmp
lock
das
adc
insb
or
sub
int3
add
inc
cmp
in
mov
inc
scas
jns
add
push
push
mov
pop
push
fistpl
jbe
daa
jb
outsl
push
sbb
xor
push
pop
xor
xchg
in
arpl
xchg
clc
iret
push
mov
jge
jl
adc
inc
ljmp
icebp
jno
inc
add
imull
divb
es
inc
add
xchg
pop
xor
int3
mov
int
and
std
jo
dec
pop
cs
push
stc
imul
adc
inc
jno
pop
imul
arpl
xchg
xor
xchg
push
jl
mov
int3
adc
adc
adc
iret
lret
push
pop
jge
hlt
ret
je
sub
sub
daa
xchg
pop
fisttps
mov
clc
sbb
pusha
jmp
lods
push
add
cli
xchg
lahf
iret
xchg
out
shlb
push
mov
leave
mov
push
sub
pop
mov
sub
adcb
and
sbb
push
pop
leave
out
jnp
mov
loope
fcomps
arpl
outsl
mov
enter
enter
outsb
push
push
loop
sub
and
adc
cmp
loop
push
fstpt
out
test
jo
push
pop
mov
xchg
inc
dec
cs
shl
aaa
xor
sub
mov
xor
enter
lcall
jb
xchg
push
mov
xchg
lret
inc
inc
cld
stc
cmpsb
xor
cmp
scas
sbb
jno
out
xchg
xor
jnp
aad
fcoms
xchg
pop
test
xlat
xor
adc
sti
mov
add
mov
sbb
movsb
repz
pop
aam
nop
mov
in
jno
push
jb
and
mov
pop
jle
sbb
jb
adc
aas
leave
rcrb
and
movsl
sbb
pop
jo
clc
adc
jmp
jns
pop
das
xor
subl
movsb
jp
ret
and
add
mov
push
push
push
ja
subb
sbb
cmpl
push
and
aam
or
mov
inc
stos
leave
inc
or
loope
mov
cmp
xchg
push
dec
adcl
adc
lret
dec
movb
dec
decl
jno
jl
mov
xchg
inc
fisttpll
loop
iret
movsl
pop
popa
fcompl
sub
mov
outsb
iret
lret
fcomp
jnp
xchg
xchg
mov
imul
mov
cwtl
push
inc
cld
jge
fcompl
icebp
lahf
dec
adc
pop
inc
sub
inc
sub
mov
jmp
jo
adc
enter
pop
cmc
lock
dec
test
jb
out
jl
xchg
mov
inc
inc
ljmp
push
popf
pop
dec
inc
es
jge
call
jns
in
mov
xchg
aad
fwait
jecxz
cmpsl
hlt
je
xor
cmc
ret
xor
je
or
sti
ret
sub
push
xchg
roll
mov
notl
add
jp
cmp
lock
repz
fnsave
sbbb
push
lea
jnp
imul
mov
xchg
in
aad
loope
or
jge
jp
push
lcall
adc
jmp
pop
les
rol
mulb
cmp
roll
inc
jns
shrb
mov
or
add
or
nop
lahf
xchg
int3
dec
xchg
and
cmp
xorb
insb
out
pop
adc
je
in
cmpsb
hlt
sti
dec
xchg
movsb
out
mov
movsb
or
addl
pop
lock
jns
lcall
in
add
ret
std
cmp
outsl
orb
mov
xorl
lods
sti
mov
in
pop
out
xor
mov
loope
xchg
or
xchg
icebp
adc
inc
insl
mov
mov
or
popf
add
pop
bound
test
aam
adc
fstl
repnz
jp
add
xor
mov
mov
mov
jp
rorb
jb
outsb
fwait
sbb
ror
fcom
sub
fld
int3
inc
clc
and
inc
push
scas
pop
mov
inc
push
cmp
jns
add
mov
addb
lock
gs
and
int
repz
mov
mov
sbb
call
ds
inc
mov
inc
pushf
insb
sub
stos
subb
xor
arpl
fisubrl
lea
inc
inc
repnz
arpl
push
icebp
ficomps
pop
loopne
pop
sbb
jno
cmp
popa
les
push
xor
mov
xor
jge
xor
xor
mov
push
or
pop
mov
in
jb
xor
loope
divl
add
or
lea
jmp
inc
sar
orl
jnp
lock
pop
rorb
sbb
jno
imul
mov
mov
sahf
loopne
lds
stos
shrb
add
shll
stc
lods
ja
lret
mov
je
test
inc
leave
ss
movsl
in
xchg
cmp
cltd
or
arpl
xchg
xchg
aas
mov
dec
cmp
fisttps
les
push
push
push
movsb
jo
inc
sbb
cli
ss
nop
lahf
mov
inc
jp
or
add
stc
ret
adc
loopne
insb
sub
adc
dec
adc
adc
xchg
or
je
cmp
cmc
outsb
test
cmc
lret
enter
fistpll
fs
cmp
pop
xchg
ss
xchg
pushf
ret
mov
and
pop
or
inc
jne
icebp
call
ds
xor
add
ret
pop
and
mov
es
cmpsl
add
jo
add
xchg
push
icebp
sbb
xor
add
hlt
jle
in
dec
inc
cmc
and
out
adc
stos
jns
imul
pop
mov
dec
dec
jno
cmp
leave
mov
in
sub
dec
inc
adc
inc
jg
lcall
cmp
addr16
fbld
mov
jns
add
test
xor
or
popa
and
int3
mov
adc
pop
inc
imull
addr16
mov
xchg
lds
jb
mov
mov
xorb
in
and
repnz
pop
movsl
fs
icebp
aaa
xchg
push
imull
sahf
loop
dec
aam
icebp
std
test
popl
mov
in
into
push
addr16
sub
sub
xor
or
or
mov
cli
iret
fdivrl
mov
jmp
xchg
dec
stos
or
cmp
daa
stos
and
cld
in
scas
lods
add
dec
test
adc
pop
imul
push
add
cmpsl
loop
pop
push
in
xor
aam
les
divb
and
cmp
jne
daa
ret
jb
insb
js
sub
stc
sbb
pusha
lock
cwtl
lea
xor
push
aas
cmp
and
mov
rep
mov
lods
lret
les
jle
sub
test
sub
push
ds
out
or
lods
adc
dec
iret
enter
das
mov
push
cmpsl
test
cwtl
mov
inc
jle
neg
mov
aas
int
and
and
sub
aaa
ds
aas
arpl
add
cmp
enter
cmpsb
sub
fistl
or
dec
pop
pushf
dec
inc
jecxz
dec
js
scas
mov
cli
xor
sub
mov
xlat
jg
repz
add
test
pop
pop
mov
jo
ret
jno
xchg
add
mov
pop
insl
cwtl
shl
jle
sti
mov
fnstcw
xor
or
pop
pushf
or
push
notb
mov
out
adc
mov
push
hlt
and
xor
scas
stos
movsb
stos
adc
ret
in
adc
inc
repz
dec
pop
mov
pop
in
push
inc
xchg
lahf
test
inc
mov
sbb
or
push
mov
lock
adc
inc
popf
ljmp
mov
xchg
and
adc
xor
sti
leave
lret
mov
sub
mov
imul
adc
hlt
lret
movsl
jb
jne
mov
jle
cmpsb
out
add
cmc
mov
sahf
icebp
add
scas
jb
xchg
xor
and
mov
pop
jl
mov
xchg
icebp
xchg
js
jl
cmpsb
notl
js
cld
mov
testb
out
cmpsl
mov
loop
mov
jb
jge
into
xor
sub
enter
int3
int
rcrl
jp
popa
inc
push
xor
imul
push
mov
push
inc
mulb
push
hlt
test
je
fucomi
cmp
nop
jb
aaa
pop
or
mov
mov
jbe
pop
xchg
outsb
ja
movsl
out
arpl
or
outsl
xchg
mul
add
sub
mov
shrl
mov
in
sbb
sub
rol
shrb
inc
dec
push
sub
cmp
push
out
push
ss
push
push
xchg
int
xor
push
rolb
push
push
ss
lods
mov
dec
dec
mov
orb
ret
jb
shlb
cmpsb
xchg
insl
lods
in
into
push
test
pushf
mov
sbb
push
outsb
repnz
pop
icebp
test
fucomi
jo
and
pop
mov
fsub
mov
fs
xchg
jnp
call
inc
mov
arpl
imul
outsb
fwait
mov
jns
lahf
mov
dec
test
mov
push
jae
inc
cmc
xchg
sahf
sub
cmpsl
jl
jae
mov
pop
repz
ss
cmp
push
fsubl
add
out
inc
lods
ja
in
mov
rorl
lahf
fists
repnz
mov
mov
pushf
je
imul
dec
and
cmp
xor
push
or
pop
dec
shll
imul
cmp
lods
xor
push
imul
xchg
mov
cmc
insb
lret
sub
outsl
test
push
lcall
fld
jp
cs
in
movb
scas
idivl
add
fcmovnbe
ja,pn
stos
and
repz
pusha
pop
xor
rcr
outsl
fdivrl
repz
stos
cs
pop
dec
clc
add
imul
mov
xorl
lock
popa
jo
jg
push
xchg
and
jo
mov
movsl
dec
xor
cmp
mov
dec
pusha
mov
rdmsr
in
mov
adc
mov
or
mov
or
push
or
mov
mov
push
mov
data16
clc
cmp
pop
xor
lret
jne
stos
mov
push
mov
js
outsl
imul
push
ja
xor
jle
js
xchg
mov
push
fisttps
jl
in
testl
mov
popa
sbb
subb
push
jmp
xchg
jbe
inc
fs
inc
je
sti
call
sti
jecxz
gs
jp
mov
outsb
movsl
cltd
test
loop
jmp
xor
mov
aas
lea
pop
inc
mov
pop
cmpsl
mov
scas
imulb
clc
daa
mov
push
xorl
jo
jge
push
aaa
icebp
xchg
jmp
mov
leave
dec
loope
pop
ja
cs
incb
adc
xor
sub
sti
divl
sbb
cmp
sbb
ret
cmp
shlb
sbb
push
mov
cmc
xchg
das
xor
cmp
cmp
inc
rcrb
xchg
mov
and
icebp
mov
popf
je
adc
dec
dec
lods
pop
jge
fsubrs
mov
xchg
jg
jmp
mov
mov
out
popf
ds
in
je
out
test
adc
mov
aam
jg
xor
add
mul
mov
lods
sbb
push
inc
push
imul
mov
test
lock
mov
xchg
push
out
or
fwait
xor
ja
hlt
stos
shr
pushf
pop
mov
inc
xor
mov
push
mov
scas
lret
int3
cmc
ds
loopne
sti
and
adc
jb
jb
sub
cmp
jnp
xor
cld
das
cltd
jns
xchg
test
sahf
dec
sahf
push
adc
filds
xchg
jmp
popa
add
cmp
out
out
add
cld
insl
stc
pop
xchg
sub
lea
sbb
lods
pop
sub
add
icebp
lahf
shrl
dec
jo
lret
div
inc
inc
orb
add
loopne
dec
or
nop
dec
arpl
bnd
adc
cmp
xor
out
aad
jle
add
pop
sub
js
jo
or
mov
cmp
xor
popf
xchg
aas
pop
add
das
inc
sub
mov
cmc
push
or
push
pop
xchg
cmp
cltd
ss
sub
lret
shl
pop
mov
les
push
or
jmp
das
xchg
pop
push
std
out
flds
jmp
mov
push
push
movsb
jne
xor
fisubs
sub
aaa
fidivrs
repz
data16
ja
loop
add
int3
cmpsl
dec
mov
xlat
xor
jl
adc
pop
cmp
js
lods
ljmp
mov
pop
and
adc
cltd
sbb
arpl
cmc
pop
int3
xchg
pop
dec
push
and
repz
push
push
imul
pop
xor
aam
jns
and
jno
inc
mov
or
xor
aam
pop
iret
sbb
sub
pop
adc
push
add
ja
shlb
popf
fcmovbe
pop
xchg
xchg
ret
sbb
push
outsl
ds
dec
dec
cwtl
jp
jle
or
sub
push
les
in
imul
sub
in
cmp
lds
loopne
jns
rcll
imul
imul
jb
les
sub
pusha
xchg
jp
int
jp
out
xchg
outsb
xchg
cmpsb
sbb
ljmp
push
pop
adcl
jp
imul
les
cmp
push
add
stos
movb
dec
pop
push
xor
sbb
ret
pop
jmp
iret
adc
add
subb
jp
into
mov
sarb
das
rcll
cmp
mov
xchg
add
jb
sbb
xchg
jp
pop
mov
jl
jns
push
scas
aam
jns
out
out
fisubl
jge
sub
fistpll
aad
xor
xchg
xchg
leave
fs
mov
inc
and
call
adc
xchg
or
ss
shrl
mov
fldcw
inc
xor
dec
fidivl
and
xchg
mov
cli
or
push
shl
scas
test
sahf
dec
jp
decb
loop
mov
sbb
and
dec
lods
mov
jecxz
or
repz
out
leave
add
and
test
dec
test
push
sbb
stc
cwtl
pop
movsl
xchg
and
fucomi
scas
daa
out
ja
jae
xlat
stc
fcoml
test
push
mov
in
lods
adc
fidivrs
xor
pop
lods
adc
pop
dec
pop
xchg
je
or
cmp
ficoms
ja
mov
and
xlat
in
enter
push
and
movsb
inc
loopne
xchg
mov
pop
les
nop
mov
shrb
jbe
mov
sahf
lods
imul
pop
cmpsl
dec
arpl
adc
mov
icebp
movsb
xor
roll
bound
or
mov
cmp
pop
mov
pop
lds
andb
lock
ss
ret
loop
mov
push
adc
pop
pop
and
cmpl
popa
xchg
pop
imul
pop
or
test
imul
add
rcrb
pop
stos
sub
and
jnp
cmpsb
xor
jbe
dec
inc
in
mov
es
and
mov
mov
dec
pushf
mov
cwtl
mov
scas
in
rcrb
rcr
dec
popa
and
push
in
push
std
dec
movsb
dec
sbb
jbe
push
scas
je
mov
aam
dec
mov
lahf
jmp
jae
into
mul
jl
adc
sbb
jmp
in
outsl
aam
loop
mov
pminub
cli
cmp
iret
pop
mov
pop
in
arpl
sub
dec
nop
roll
xor
pop
nop
ds
mov
sysexit
xor
xlat
jne
movaps
cmpsl
adc
iret
icebp
xlat
cmp
cmp
add
adc
push
test
loope
iret
lret
sub
cltd
add
or
mov
arpl
aas
iret
or
and
jne
and
std
mov
push
pop
push
enter
ror
pop
test
ret
pop
cld
dec
lea
fwait
pop
clc
icebp
push
rorl
inc
out
adc
mov
shrb
pop
pop
jl
jmp
mov
pop
je
shrl
ficoml
cmc
daa
push
mov
xchg
xlat
aaa
out
add
xor
sub
mov
inc
call
shll
mov
sbb
test
in
sti
push
sbb
or
mov
fisubrl
mov
dec
jp
cmpsl
dec
xchg
mov
xchg
mov
es
mov
sbb
in
movsb
fdivp
lahf
mov
adc
push
lahf
push
stos
xcrypt-ctr
cmpsl
sbb
add
or
pop
testl
iret
fstpt
dec
push
jmp
outsb
sti
add
sub
ret
test
ja
xchg
adc
dec
sbb
mov
sbb
loope
popf
jb
popa
inc
shl
imul
xchg
xor
cs
push
iret
clc
pop
nop
mov
add
inc
loopne
xorb
das
pop
js
dec
mov
repz
aaa
rclb
jne
jg
cmp
int3
loopne
mov
rorb
lret
mov
inc
negl
adc
rol
out
imul
inc
pop
mov
fimuls
lds
sub
push
mov
xchg
stos
pop
loopne
push
frstor
aad
xor
dec
sbb
xchg
mov
jne
lds
dec
jne
cmc
sahf
in
cmc
lahf
jno
push
dec
lahf
mov
cmpsb
adc
scas
minps
and
pop
and
rclb
cmp
rep
gs
jae
insb
adc
mov
leave
in
stc
popa
mov
sahf
dec
pushf
arpl
xchg
cmp
and
js
imul
mov
jno
adc
or
cld
sbb
jae
or
add
pop
rolw
sbb
outsb
or
push
mov
mov
aam
add
xor
nop
add
lock
sub
jle
movsb
sti
dec
jecxz
aad
gs
and
jmp
adc
push
push
jb
pop
sbb
cmp
cmp
cli
or
dec
mov
sbb
imul
loop
mov
xor
jge
popf
leave
gs
mov
cli
xchg
iret
in
jecxz
clc
cwtl
mov
scas
xchg
cli
add
and
push
pop
fidivrl
mov
scas
cmpsl
aaa
ret
lds
les
xchg
mov
push
mov
mov
in
or
sbb
out
out
xor
mov
pop
dec
subb
dec
shll
cmp
pushf
call
pushf
loop
lock
sub
incb
lods
inc
popa
xchg
xchg
pop
jecxz
ret
out
push
cmp
lods
push
jg
mov
mov
mov
outsl
loopne
leave
xor
inc
test
mov
lds
mov
mov
dec
pushf
and
insb
scas
test
mov
gs
cmp
and
ficomps
es
dec
pop
xchg
sub
jle
cmp
or
mov
mov
add
or
pop
cs
jbe
out
insl
or
mov
repz
daa
mov
hlt
jno
jmp
push
mov
hlt
mov
lods
std
and
hlt
aas
cwtl
sub
xchg
jne
mov
icebp
pusha
popa
mov
xlat
pop
lea
std
push
ss
lahf
arpl
pop
cs
cs
lcall
pop
cmp
lret
loope
adc
fisttpll
ja
mov
mov
cli
shlb
mov
add
out
sbbb
test
mov
ret
push
mov
insb
dec
in
js
icebp
or
pop
scas
sbb
cmp
js
push
ja
jmp
jge
leave
xor
sub
dec
paddsb
dec
jmp
movsb
lcall
pop
cmc
sarb
add
cwtl
xor
icebp
orb
or
outsl
cmp
xchg
hlt
jnp
and
jno
notb
push
and
jno
cmp
dec
pushf
roll
or
decb
cmp
xchg
out
push
xchg
cmp
je
icebp
add
in
mov
xor
lods
les
orb
fstp
jmp
mov
jmp
orb
jno
adc
and
dec
xchg
in
popa
aam
loopne
pop
jae
aam
dec
push
sub
and
inc
arpl
jne
dec
lods
mov
sbb
in
cmp
test
push
pop
lods
or
fistpl
dec
mov
jmp
lods
rcrl
cltd
fsubp
and
jnp
sahf
jp
push
push
xchg
push
stos
rolb
and
fidivrl
mov
adc
stos
int
add
push
xchg
call
jmp
dec
mov
fmul
cmp
sbb
mov
adc
or
outsl
cmp
or
xchg
cmp
sbb
adcl
lock
out
jle
adc
in
and
inc
jle
pop
mov
test
ret
pop
outsb
outsb
sub
mov
dec
sub
jl
jns
pop
push
faddl
fwait
dec
cwtl
test
fsubp
dec
xchg
xchg
xchg
mov
mov
jns
pop
jne
imul
mov
sub
pop
pop
xchg
jne
or
repnz
inc
fnop
dec
adc
jg
nop
mov
sub
adc
movsl
mov
jp
adc
sahf
rorl
test
aam
xchg
adc
and
sahf
push
xchg
mov
xor
sbbb
push
call
sarb
xor
sbb
sbb
ret
inc
and
pop
sbb
addr16
sub
pop
into
cmp
inc
mov
enter
dec
adc
sub
pushf
inc
and
pop
mov
jnp
data16
mov
scas
fnsave
adcb
test
lea
mov
or
cmpsb
jnp
rclb
shll
pop
cmp
mov
stos
lahf
daa
enter
add
imul
push
jb
lock
sub
loop
out
sbb
xor
pop
sti
jp
data16
pop
lods
test
jecxz
and
cmpl
lret
and
ficomps
ljmp
mov
fdivrp
mov
xchg
jp
cltd
inc
xor
cmp
mov
cld
orb
xor
sahf
lret
imul
test
jge
mov
dec
lret
aam
aaa
sub
aaa
push
test
mov
cmp
in
mul
xor
cld
mov
je
xchg
add
negb
xor
pop
div
sbb
xor
inc
scas
stos
add
rorb
or
call
cmp
lahf
pusha
mov
sub
call
ljmp
out
sub
sbb
inc
dec
jp
rcrb
xor
add
scas
and
fstpt
push
add
lods
xlat
inc
xchg
fsts
int
add
lahf
test
rcll
pop
sbb
outsb
or
and
push
xor
rorl
pop
shll
jecxz
sbb
mov
mov
xor
mov
addr16
dec
mov
lcall
push
or
adc
mov
xor
cmp
sbb
rorb
shrl
hlt
test
jp
fidivl
adc
mov
add
das
add
enter
sti
xchg
test
adc
orl
sbb
and
inc
cmp
aad
addr16
addr16
pop
mov
xor
mov
mov
sahf
xlat
mov
call
addr16
in
test
les
mov
sahf
jne
fisubs
ja
xchg
cs
push
or
ss
adc
inc
and
in
pop
arpl
call
mov
je
insl
xchg
call
mov
jl
mov
xchg
inc
xor
stos
mov
arpl
add
inc
into
sar
insb
jae
cmp
add
xchg
jl
aaa
cmpsb
clc
lret
orb
and
call
inc
mov
add
mov
fabs
adc
loope
sub
mov
insb
mov
sbb
rcr
sub
imul
xchg
jno
movsb
sbbb
inc
sbb
dec
xor
fistpll
push
push
add
dec
cmp
dec
xorb
jno
cmp
cwtl
lods
sbb
cld
lods
adcb
mul
xor
jno
clc
fnstcw
cmp
ljmp
outsl
data16
nop
imulb
ja
icebp
xor
mov
es
aaa
push
jnp
add
rol
pushl
mov
ficomps
fidivl
mov
add
mov
sub
and
cmp
cmp
stos
pop
sahf
test
add
sub
xchg
imul
or
iret
enter
cmp
movsb
dec
arpl
je
das
sbb
or
adc
sbb
sbb
clc
dec
repz
sub
or
cmp
aaa
fildl
mov
add
fidivrs
sahf
cmp
outsb
jae
loopne
add
in
jne
inc
cmp
in
jmp
mov
mov
add
mov
rorl
sbb
fs
aas
dec
repnz
popf
jge
data16
pop
loope
sbb
pop
rorl
push
jle
sbb
dec
xchg
fs
loope
mov
les
mov
aaa
je
mov
mov
lods
lahf
mov
mov
cmp
movsl
cltd
mov
xor
mov
fsts
mov
xlat
out
cld
cmp
jo
fdivl
mov
subl
sub
ja
ja
movsl
xor
es
mov
pop
mov
sar
sbb
push
pop
inc
mov
loopne
out
insb
jne
fisttpll
addl
jnp
shll
pushf
lds
gs
pop
jne
sub
push
test
push
lret
sub
mov
sub
cmp
xchg
xchg
adc
aam
ss
in
fildl
xor
or
mov
pop
dec
cwtl
aam
lods
leave
ja
mov
jl
repz
pop
xor
fistps
ret
inc
in
lret
pop
mov
push
xchg
stos
xor
out
rcrb
in
push
add
adc
sti
pop
push
lds
faddl
cmp
hlt
or
xor
das
xchg
jmp
mov
or
xchg
loopne
xchg
call
xor
inc
dec
adc
fcomps
jne
xchg
cmp
andb
inc
add
push
lret
mov
adc
psubusw
xchg
inc
push
cwtl
scas
imul
push
lahf
ret
into
call
aad
movsb
movsl
adc
jg
mov
cmp
mov
sbb
in
mov
mov
rolb
pop
stc
and
test
cmp
movsb
das
xchg
add
test
add
out
ss
mov
add
gs
and
loope
add
icebp
xor
sub
cmp
cmpsb
outsb
out
mov
add
scas
and
lods
jecxz
in
xchg
sub
and
insl
cmp
mov
add
inc
mov
jbe
pop
adc
push
lock
adc
enter
cmpsb
jne
sarl
jno
pusha
pop
ret
mov
fwait
cmp
mov
dec
sub
dec
mov
in
inc
sub
ljmp
into
push
pop
adc
inc
aas
push
lret
mov
popa
rclb
push
add
dec
dec
jbe
jns
sub
lods
pop
ss
mov
test
add
mov
stos
leave
nop
aad
cs
fwait
testb
in
call
and
mov
adc
cmp
push
mov
add
ret
xor
xchg
sbb
push
adc
xchg
in
sub
sub
nop
jns
addl
inc
lahf
lods
add
insb
jl
cmpsl
and
lahf
in
repnz
das
dec
mov
or
mov
aam
jge
xor
cld
rolb
popa
xchg
ljmp
cmc
mov
lods
sub
adc
xchg
pop
movsb
inc
repnz
ds
mov
test
fwait
xor
mov
jge
sub
in
imul
pop
inc
mov
sbb
in
sbb
mov
inc
push
sti
mov
scas
xor
divl
aam
and
lea
mov
push
outsl
mov
xchg
pop
push
stc
repnz
and
shl
xchg
cld
dec
or
or
imul
or
sbb
xor
loop
int
adc
sti
fstps
daa
and
or
fbld
outsb
or
adc
xchg
daa
xor
push
sbb
imul
mov
inc
push
inc
ds
cmpsb
jmp
ja
inc
nop
mov
int3
aam
push
mov
add
lret
lods
sub
pop
xor
add
and
scas
popf
push
jmp
push
push
movsb
mov
test
test
mov
push
dec
enter
add
jne
pop
loope
add
stos
ret
fstpl
mov
or
cmp
test
fwait
out
mov
inc
lods
js
jb
pop
rclb
jmp
dec
sub
inc
enter
ja
mov
ucomiss
addr16
xchg
outsb
test
sub
mov
xor
fwait
push
push
hlt
add
adcl
out
inc
xchg
popa
add
xchg
aad
cmpsb
ds
in
das
mov
inc
jg
sar
scas
out
lock
shrl
sbbb
jno
data16
gs
inc
jmp
adc
les
add
fwait
dec
mov
popa
lcall
loopne
rolb
jne
or
out
scas
lock
inc
lds
adc
push
stc
xor
dec
mov
and
sbb
inc
mov
mov
jns
cwtl
xor
sbb
in
mov
pop
imul
aam
pop
ds
pusha
test
es
notl
or
test
mov
jnp
inc
cmp
subl
shl
sub
sbb
dec
and
ljmp
es
mov
fcomip
or
iret
fimuls
push
push
out
or
outsl
jp
adc
mov
fcoms
data16
sbb
int
ret
add
add
xor
stos
cli
repz
fcmovu
mov
arpl
sub
sbb
hlt
push
dec
mov
sbb
inc
sbb
adc
sbb
jno
scas
insb
popa
cltd
pop
ja
push
outsl
hlt
cmp
push
and
xchg
imul
fisttpll
roll
cli
dec
gs
in
add
movsb
xchg
xchg
mov
clc
jp
loopne
mov
stos
push
sbb
jno
aad
pushf
push
scas
and
ds
cmpsb
rcr
into
push
and
pop
pop
fisubl
insl
sarl
mov
repnz
mov
mov
cmp
or
pop
jp
lock
fs
jle
push
es
lahf
pop
mov
imul
ds
stos
xor
sti
jb
jbe
xor
test
jns
cmp
stos
dec
out
pop
xor
fstpl
jle
and
cmp
ret
imul
pop
sub
test
mov
adc
sarb
push
stos
mov
sub
push
or
jne
dec
dec
lret
fwait
mov
test
xor
jo
decl
fsubrs
scas
cmp
std
out
std
jns
cmp
arpl
lcall
pusha
xor
sub
sbb
cmp
adc
push
das
out
adc
mov
push
mov
insb
xor
cmc
mulb
jno
lods
mov
js
push
pop
mov
and
xchg
inc
adc
mov
push
cmp
hlt
clc
mov
add
cmp
mov
stc
repnz
roll
mov
aam
xchg
data16
push
pop
in
stc
call
jle
pop
mov
push
pop
dec
pushf
les
pop
ss
dec
test
xchg
cmp
push
sub
call
test
lods
inc
fs
shlb
and
test
out
fidivrl
das
jne
mov
fwait
jp
dec
lret
lods
jg
jns
pop
xchg
fadds
jecxz
adc
js
pop
or
arpl
and
scas
fisubrl
push
pop
push
dec
jecxz
push
fsubp
fstps
mov
inc
xchg
sub
lahf
sbb
push
pop
jbe
aas
ret
xor
pop
xchg
aam
in
scas
cmp
mov
sbb
aas
popa
in
cmp
lods
mov
loop
ss
add
dec
cmc
jge
imulb
mov
add
pushw
cmp
jecxz
lcall
lahf
in
aas
aad
gs
push
dec
push
in
hlt
xchg
sbb
ljmp
mov
xchg
adc
pop
scas
mov
or
enter
insl
xchg
sbbl
pusha
push
cmp
es
ret
adc
inc
pop
outsb
sbb
jb
notb
dec
jle
cmp
adcl
fwait
dec
rcl
add
cmp
and
lcall
cs
cmp
sub
or
cli
pushf
push
push
rep
pop
sub
mov
jnp
mov
cmp
add
jns
cmp
test
or
mov
gs
pushf
jle
push
sub
inc
cmp
xchg
outsl
lods
ljmp
and
sub
add
mov
fidivl
test
repnz
adc
mov
and
push
adc
into
lock
dec
xor
lcall
pop
mov
das
gs
jge
jmp
push
push
lds
sub
test
mov
add
ja
ret
nop
lock
sbb
sub
imul
or
cwtl
lds
xor
data16
sub
inc
in
insb
push
scas
lret
pop
xchg
push
or
mov
not
mov
mov
aam
push
jge
into
jle
mov
sub
shll
lret
lret
outsb
mov
fsubrs
jg
insl
imul
add
cli
shl
ja
ss
test
cmp
je
cmpb
jnp
mov
jecxz
dec
aam
ds
cmp
fwait
pop
lret
iret
mov
cmp
pop
pop
mov
in
mov
mov
mov
add
out
dec
adc
repnz
int
insb
psubq
out
sub
enter
in
notl
es
mov
repz
insw
lds
push
mov
cld
lock
cld
push
jne
ficoml
xor
mov
negl
adc
jmp
push
aam
insb
adc
adc
js
hlt
rorb
cmp
pop
xor
pop
movsb
mov
sub
mov
pop
adc
jo
and
push
cmp
xchg
jl
add
lret
mov
sbb
cld
mov
por
imul
movsl
and
push
xchg
mov
sti
push
loopne
cltd
pop
sahf
out
test
push
jp
sub
sub
mov
dec
sahf
popl
sub
notb
fsubl
out
cmp
dec
fwait
call
out
fcmovnb
test
pop
mov
or
or
mov
and
cmp
int
mov
lcall
cmp
pushf
mov
lret
xor
push
in
cmp
std
hlt
mov
cli
nop
jno
ja
cli
fstp
js
stos
push
cmp
mov
fbstp
adc
dec
pushf
inc
cmc
lods
addr16
test
mov
imul
sbb
or
push
jns
pop
inc
pop
push
clc
dec
mov
pusha
mov
out
test
pop
jb
adc
ret
mov
test
scas
psraw
add
movsb
movsb
cmp
adc
fmuls
adc
lds
fdivrs
or
mov
popf
popf
push
icebp
jbe
fwait
jle
outsl
jg
lds
out
cld
and
dec
lret
mov
xor
scas
fnstsw
imul
xchg
and
test
test
mov
rorl
sbb
pop
xchg
dec
mov
mov
fcoms
and
in
cmp
dec
mov
mov
out
inc
mov
push
sbb
ljmp
movsb
je
lock
ret
ret
add
test
lahf
iret
stos
cwtl
sarl
int
lahf
lret
add
cmp
mov
inc
jns
add
ret
cltd
rclb
imul
sub
jb
ror
push
mov
sub
and
or
sti
adc
je
dec
mov
jmp
xchg
mov
and
pop
and
fucom
pop
jno
roll
mov
repz
sti
cs
sub
stos
adc
aas
inc
jge
pop
sbb
das
pop
or
jl
rorb
pop
add
stos
adc
adc
lods
mov
xor
movl
jmp
jg
jbe
mov
fcomi
inc
mov
push
lahf
push
ljmp
shr
pushf
jb
sub
mov
jecxz
loopne
mov
fs
sbb
adc
adc
cmp
add
ljmp
xchg
mov
pop
lods
insl
popa
sbb
jp
out
inc
xchg
adc
imull
jo
dec
jmp
mov
dec
movsb
pop
sbbl
sbb
loope
hlt
out
out
dec
mov
cmp
mov
and
outsb
and
push
mov
es
xchg
jmp
cmp
mov
dec
xchg
mov
cld
xor
inc
jmp
leave
push
ja
shlb
dec
sahf
fs
jbe
lds
inc
jbe
xlat
shll
or
imul
sbb
jnp
xchg
jle
popf
les
pop
enter
inc
mov
inc
inc
inc
fs
adc
jl
mov
lcall
adc
std
inc
or
jns
xor
stos
jbe
pop
sub
popfw
loop
clc
imulb
cmc
mov
adc
aad
mov
xchg
ljmp
outsl
lods
adc
xlat
pop
fistpll
inc
mov
mov
jmp
pop
dec
jae
fidivs
pop
xchg
test
cli
pop
inc
outsb
int3
cmpsb
rcrl
cmc
inc
jae
paddsw
mov
mov
jle
mov
pusha
mov
add
pop
lret
hlt
ljmp
cld
in
push
es
int3
in
add
push
push
ja
push
aas
lret
outsb
test
call
mov
sub
lret
or
ss
mov
jmp
popf
sbb
jne
arpl
icebp
mov
mov
push
xchg
dec
xor
sub
iret
mov
into
test
xchg
mov
dec
int
fsubs
or
xchg
jg
mov
adc
adc
je
pusha
fnstsw
insb
scas
xchg
aam
inc
inc
or
hlt
mov
adc
jbe
mov
ficoml
and
ret
je
ret
outsl
cs
or
stc
jmp
push
cmp
es
cli
icebp
ret
cs
xchg
push
fs
jg
xchg
jbe
aam
pop
fcomps
rcll
outsb
movsb
stc
cmp
out
int
and
test
pop
push
pushf
pop
cmp
popa
loopne
mov
jae
daa
mov
jbe
js
fdivr
movsb
lea
fmuls
add
push
in
lret
mov
xchg
jnp
ljmp
scas
mov
imul
in
sbb
jp
std
test
cmp
pop
iret
or
adc
bound
pop
aad
iret
out
lock
movsb
cld
mov
xchg
loope
scas
cmp
ljmp
cmp
lods
or
data16
icebp
xorb
repz
out
addr16
and
dec
jle
aad
sbb
add
mov
in
push
test
lods
dec
dec
xchg
jge
sti
xor
cli
mov
sti
unpcklpd
cmpsl
push
dec
sub
test
out
es
mov
pop
flds
arpl
jecxz
mov
imul
sub
sbb
add
aad
pop
scas
mov
pop
jbe
push
xor
pop
cltd
xlat
jne
push
test
cmp
test
pushf
cmp
mov
and
stos
sbb
pop
aaa
mov
add
mov
jg
dec
mov
aas
push
xchg
imul
int3
in
stc
push
pop
inc
test
shrb
add
jbe
lahf
dec
imul
test
dec
es
sub
push
rorb
rcl
xor
xor
mov
sbb
testl
fcmovb
cmp
mov
dec
rcr
jb
addr16
dec
push
cld
repz
mov
leave
popa
aam
pop
ja
mov
clc
xor
hlt
pop
loop
mov
add
mov
mov
shl
mov
test
adc
fisubs
and
lea
dec
std
sub
cmp
xor
repnz
loop
xchg
subb
mov
iret
pop
sub
xchg
inc
sub
mov
mov
outsb
lahf
ljmp
ficompl
jb
rcl
inc
jne
decb
cmpsb
imul
push
sbb
sbbl
pop
notb
mov
dec
add
or
sub
lds
mov
inc
xchg
jb
es
cmp
int3
sti
sub
mov
test
mov
push
jecxz
out
ja
les
lahf
loop
dec
outsl
pop
loopne
jb
jg
dec
in
xchg
sub
push
mov
hlt
test
scas
popf
shlw
sub
icebp
insl
movsl
xchg
push
mov
mov
fstps
test
sub
xchg
inc
std
push
mov
mov
push
popf
test
cmp
insl
jg
cmp
lods
daa
lret
sbb
or
jmp
rcrb
bound
dec
inc
xchg
jae
and
push
loopne
dec
or
mov
adc
sbb
inc
mov
scas
add
mov
or
jmp
nop
cmp
sub
stos
mov
test
sbb
ret
push
pushf
clc
int3
add
add
dec
out
mov
inc
push
ret
mov
mov
int
xlat
btr
push
push
mov
add
mov
mov
scas
push
mov
mov
aam
sbb
dec
push
je
js
loopne
movsl
bound
jo
jo
dec
jnp
dec
fsts
mov
lock
jge
push
mov
leave
cmp
xor
popa
invd
sbb
adc
shlb
add
xchg
mov
lds
hlt
jge
pop
mov
xchg
in
pop
push
cmp
pop
fs
pcmpgtd
cs
lock
xchg
ss
addr16
je
mov
imul
mov
out
test
mov
xchg
and
inc
jmp
pop
pop
inc
les
rolb
test
iret
cmp
lret
sti
shll
fldcw
stc
pop
xchg
push
pop
sbb
pop
mov
lret
fdivs
jne
int
fsubrs
shll
jg
jns
adc
repz
xchg
push
in
rep
xor
adc
mov
push
xor
insl
jmp
scas
add
adc
leave
mov
clc
dec
pusha
adc
lahf
xor
or
movsl
aas
les
das
mov
adc
adc
loope
std
xor
and
icebp
cmpsl
aaa
ja
stos
stos
xor
imul
sbb
mov
dec
adc
mov
jp
mov
jb
jbe
fidivrs
xor
fsubrs
daa
xor
xor
call
popa
popa
movl
cwtl
insb
dec
int
fwait
xlat
aaa
ljmp
and
sub
pop
cli
test
test
push
xchg
dec
rcr
cmp
xor
fistl
imul
pop
push
jns
jle
aam
test
inc
cmp
daa
inc
sbb
loop
fdivs
xor
dec
sub
mov
add
jns,pt
add
fisttpll
jmp
hlt
jl
sti
mov
or
sbb
loopne
xor
sahf
mov
dec
sbb
xor
sti
nop
pop
cmp
jle
push
sbbl
daa
xor
iret
sbb
dec
pop
xchg
mov
add
jb
inc
enter
mov
push
or
scas
out
push
test
push
call
push
or
sbb
inc
lods
mov
sbb
cmp
call
dec
mov
call
loop
fs
inc
add
inc
enter
mov
add
pop
sbb
mov
and
cmpsl
xlat
cld
lods
mov
jae
out
cli
push
cmp
cmpsl
in
mov
imul
jmp
inc
cmp
ds
stos
inc
stos
fs
test
mov
jp
mov
pop
loopne
loop
and
out
lock
xchg
sti
popa
outsb
adcl
mov
cli
and
fcompl
push
nop
push
mov
mov
sub
pop
dec
repz
xchg
xor
out
push
in
ret
shrl
jmp
cmp
inc
stos
xor
mov
aam
inc
cmp
loope
iret
out
jg
loope
in
fisttps
dec
mov
stos
add
pusha
xchg
jno
xor
out
jns
cmpsb
test
in
dec
fstl
xlat
sbb
enter
jle
fldcw
cmp
lret
or
imull
scas
test
push
insb
js
adc
int
test
shlb
ja
mov
or
cltd
cmpsl
dec
sbb
inc
mov
fs
outsl
mov
lods
sarl
ds
addb
mov
outsl
jo
pop
fwait
insb
cmp
imul
into
jp
sbb
outsl
jmp
pop
gs
inc
xchg
pusha
aas
popf
insb
cmpsb
leave
cs
icebp
es
mov
mov
lods
sbb
add
or
cmp
filds
push
mov
inc
inc
popf
mov
mov
push
mov
ret
cmpsb
pop
gs
rorl
insl
fst
mov
fisttpll
into
sub
cmpsb
les
pop
mov
lods
xchg
sbb
jno
stos
adc
imul
movsb
repnz
outsl
xor
or
and
rcl
fmuls
in
ds
mov
push
jbe
dec
mov
cli
ficomps
into
push
cmpsl
les
out
mov
fidivrl
aad
loope
sbb
fwait
ds
sbb
stc
sub
aam
imul
mov
add
adc
mov
sbb
mov
dec
movsl
pushw
insb
nop
xor
sbb
cwtl
jne
xlat
xor
imul
out
mov
scas
jle
pop
cmp
fsubl
fisubl
mov
mov
pushf
movsl
cmpb
sub
push
sbb
rcll
push
rcr
in
xchg
rcrb
hlt
icebp
and
insl
mov
add
adc
and
pushf
lods
gs
push
adc
jne
mov
xchg
or
inc
decl
mulb
mov
pop
pop
popf
cli
rcrb
jbe
mov
mov
pop
push
in
mov
pop
mov
addr16
jae
pop
xchg
fcmovnb
fldt
adc
insl
leave
aas
add
hlt
adc
mov
mov
or
pop
mov
add
add
cmp
clc
cltd
cmc
in
outsb
cmpsb
cmpsl
pop
cli
mov
inc
dec
xchg
add
mov
jbe
push
jno
jns
imul
arpl
shlb
or
iret
dec
mov
adc
in
cmp
push
out
lods
cmc
sbb
xchg
push
out
or
pop
xor
or
pop
call
ds
jecxz
sbb
push
mov
dec
and
lods
sub
scas
loopne
and
ljmp
or
jbe
jo
aaa
cs
xchg
inc
std
sbb
loop
in
shrl
sbb
mov
lahf
cmp
xchg
sbb
xchg
bound
mov
jl
mov
popa
add
aam
pop
addr16
popf
xchg
mov
add
and
and
into
aam
cmp
scas
and
insl
jp
popf
pop
shlb
imul
and
xor
adc
xchg
js
mov
fisttps
push
cwtl
dec
sbb
fnstenv
es
movsl
orb
xor
les
sub
and
dec
mov
lret
stos
int
mov
imul
push
add
push
arpl
fsubrs
aas
out
stc
push
enter
jbe
push
adc
or
aas
leave
das
iret
mov
pusha
outsb
lods
popa
or
pusha
push
pusha
xchg
daa
jmp
or
inc
pusha
mov
xchg
fxch
jae
fcompl
mov
icebp
sub
mull
pop
mov
xor
fwait
nop
insb
cwtl
ja
jae
jp
in
xchg
mov
outsl
mov
xchg
fstpl
sbb
jns
xor
pop
aas
dec
jno
pop
outsl
cmc
adc
dec
inc
cli
icebp
das
ljmp
mov
into
mov
sub
fstl
mov
add
pushf
cltd
hlt
inc
mov
xlat
mov
fldcw
cmp
pop
and
dec
mov
pop
fmuls
jp
loop
mov
fs
dec
mov
fwait
inc
inc
pop
cmp
fwait
dec
sub
icebp
push
mov
adc
cld
lods
add
xor
xchg
sahf
jle
test
jbe
stc
sahf
inc
xor
jne
mov
movsl
aad
pop
into
subl
push
mov
std
fsqrt
sbb
cld
jb
shll
or
pop
xlat
or
lods
dec
mov
aad
add
mov
lods
and
xchg
lock
inc
xchg
stc
jns
inc
in
mov
ret
push
test
std
scas
mov
inc
repnz
imul
push
lods
fs
pusha
lock
jmp
xchg
or
ss
adc
mov
test
dec
aaa
test
xor
pusha
loopne
push
pop
loopne
and
xchg
or
aaa
jp
jp
lods
xor
stos
dec
sbbb
imul
and
or
cmc
push
mov
mov
xor
pop
dec
jns
pop
add
out
lods
xor
adc
cmp
call
mov
test
add
lret
les
cmp
adc
xor
sbb
movl
pop
lahf
popf
call
out
or
and
lahf
sti
stos
shlb
mov
adc
adcb
rclb
icebp
adc
enter
loop
xor
push
xchg
jp
dec
or
pop
cmp
pop
mov
and
das
pop
push
dec
push
adc
in
push
andl
cmpsl
mov
pop
fwait
cs
lock
add
movl
ja
call
mov
xchg
mov
das
or
je
lcall
out
paddusb
jge
call
xchg
inc
and
pop
pop
or
dec
sbb
popf
shll
mov
push
jno
stc
and
js
and
int3
shrl
mov
insb
push
scas
iret
jns
sub
shl
pop
mov
mul
mov
mov
stos
icebp
repz
lret
mov
mov
xchg
stc
ret
xor
out
inc
and
sub
ret
dec
inc
or
fstpt
xchg
rolb
ds
and
andl
cs
cmp
test
or
xchg
fldl
or
ret
adc
repz
aaa
add
cmpsl
inc
es
je
push
cltd
out
scas
xchg
or
sub
xchg
sahf
cwtl
jb
push
adc
xor
mov
adc
lock
fdivl
xchg
icebp
sbb
push
xchg
int
xchg
or
test
es
int3
cld
mov
sbbb
mov
testb
jbe
jo
out
cmpsl
add
mov
jnp
lods
scas
push
sub
cmp
jmp
js
in
mov
cmpsl
sahf
mov
sub
push
cmp
cmpl
xchg
dec
test
fldl
xchg
xchg
inc
outsl
in
dec
push
dec
sbb
pop
pop
fistpl
data16
loop
xorl
rol
or
dec
xchg
pushf
push
cmp
aas
xchg
cmp
mov
outsl
movsl
mov
xchg
push
repnz
pop
dec
xchg
out
in
in
pop
and
fidivrs
jb
inc
dec
sub
outsb
clc
into
xchg
xchg
or
push
in
mov
xchg
jb
sbb
out
add
xorl
jbe
stc
das
ljmp
imul
xchg
and
push
mov
mov
xor
rorb
daa
loop
mov
sbb
pop
in
pop
movsb
mov
cwtl
insl
popa
cmc
xchg
cmp
jle
push
fs
push
shrl
scas
aas
in
mov
fsubs
adc
std
jge
mov
jbe
mov
aas
jmp
mov
nop
cli
pop
repnz
xlat
lahf
mov
jmp
jg
or
imul
mov
dec
ds
sbb
dec
lret
xor
mov
negl
xor
or
sbb
xchg
mov
ret
xchg
fs
adc
mov
inc
jg
push
sbb
push
dec
lret
in
or
jne
lcall
xor
inc
shlw
adc
dec
sbb
cmp
fwait
andb
mov
dec
sahf
push
andl
enter
stc
mov
dec
fcoms
out
nop
sbb
je
or
inc
push
je
xlat
adc
aas
mov
scas
xchg
jo
lods
inc
rorl
rcll
mov
sbb
test
jne
inc
in
test
cmp
dec
adc
testb
stos
mov
jmp
into
nop
mov
leave
dec
push
pop
pop
pop
cmp
enter
cmp
push
fwait
aaa
jge
call
mov
cmpsl
subb
pop
mov
add
in
xlat
pop
dec
popa
fists
jnp
lods
jp
push
fstl
ret
xchg
dec
std
int3
cmpsl
mov
xchg
roll
push
xor
rcll
ret
stos
shll
xchg
sub
sti
shrb
cmpsl
xor
dec
xor
adc
imul
dec
cmp
cwtl
sbb
fwait
add
adc
mov
fs
and
jae
ds
push
mov
es
imull
scas
cmp
mov
pusha
jbe
sub
lret
in
cmp
jg
into
mov
mov
sbb
push
aad
sub
xchg
lret
or
mov
jnp
xor
pop
cmp
jp
and
adc
push
cmc
fcoms
jns
jmp
add
les
aas
cmp
mov
imul
call
lds
stc
sub
daa
pop
jae
stos
cmp
popfw
loop
jno
scas
scas
cltd
xchg
sub
inc
lock
clc
je
pop
test
pop
xchg
nop
xchg
cmc
popf
jbe
mov
stc
daa
mov
mov
arpl
jnp
fs
xor
mov
jns
aaa
fcompl
mov
pushf
adc
pushf
sbbb
mov
dec
faddl
jbe
dec
xor
arpl
es
mov
jle
das
ss
insl
lret
and
movsl
xlat
xchg
cltd
sbb
or
pop
sti
push
cmc
xor
out
test
popa
mov
sub
or
push
dec
dec
fs
aas
in
scas
je
cltd
cmp
aam
inc
les
je
sti
inc
dec
push
xchg
pushf
sbb
test
ss
cmp
mov
mov
xor
inc
jl
cmpsb
cwtl
fisubrl
pop
fisubrl
aaa
xchg
lock
test
cmp
sbb
xchg
push
inc
das
and
sbb
jne
loopne
or
repnz
aam
sbb
inc
mov
dec
loop
lea
sub
sub
rorl
lea
fsubs
xchg
fimuls
int
fbld
loopne
cmp
mov
scas
inc
xor
cmp
adc
das
sti
cltd
divl
repz
cmp
repnz
or
mov
cmp
jo
outsb
inc
fcoms
cmp
out
arpl
mov
das
xchg
insb
out
sub
pop
jmp
or
mov
loop
adc
mov
cs
xor
jb
cmp
repnz
add
add
mov
dec
jl
jo
dec
bound
push
or
das
or
mov
icebp
jge
inc
scas
and
iret
movsl
inc
pushf
pop
cmp
into
ret
jl
mov
les
fisttps
jl
inc
loopne
pop
mul
adc
pop
fcmove
enter
jl
test
mov
orl
js
xlat
cwtl
jbe
push
test
loop
sub
pop
push
imul
std
or
dec
mov
aad
push
je
adc
add
add
adc
inc
aaa
mov
and
test
or
dec
aad
les
xor
sub
or
ret
lret
xor
xlat
leave
aaa
out
sub
pop
cld
arpl
pop
inc
or
sub
fnstsw
xor
push
pusha
aaa
and
ja
fs
std
push
fbstp
push
add
push
xchg
js
in
mov
xchg
cs
sub
mov
and
sub
int3
mov
lret
rorb
rcrb
and
test
xor
fcomp
add
sbb
pushf
je
in
mov
push
dec
xlat
data16
popa
stos
ret
cs
jle
int
and
fisubrl
pop
sbb
and
ljmp
ret
cmp
jne
fwait
mov
fstpt
sbb
aaa
xchg
jge
adc
cli
dec
dec
das
addr16
or
xchg
outsb
lods
mov
cli
mov
and
data16
jecxz
out
adc
adc
and
outsl
test
lcall
jg
adc
cmp
add
lret
loopne
cmp
add
ret
repnz
test
les
aam
mov
mov
jge
les
sti
in
icebp
testl
shlb
jg
adc
scas
mov
popf
imulb
data16
sub
and
stos
daa
mov
inc
mov
inc
adc
dec
cmpl
in
fadd
jns
inc
mov
xchg
insb
popa
repz
or
adc
es
fs
mov
popa
imul
mov
je
and
cmpsl
push
jae
pop
cld
jmp
outsl
and
jnp
mov
xchg
mov
mov
jbe
das
pop
xor
and
les
add
jecxz
js
cli
nop
ret
insl
sbbb
jne
xchg
mov
dec
push
ret
push
or
lds
mov
mov
mov
and
inc
in
sub
iret
mov
inc
ficoml
dec
xchg
fwait
icebp
rol
in
push
push
xor
xchg
mov
stc
adc
cmp
push
scas
sbb
inc
mov
xor
mov
pop
sbb
sahf
mov
cmc
ljmp
in
rcl
push
repz
popf
add
dec
mov
movb
aas
cmpsb
cmpsl
imul
nop
sub
push
aad
push
dec
adc
adc
cwtl
ljmp
mov
sarb
daa
ficoms
rcrl
aas
dec
fstpt
mov
in
dec
sti
fs
ja
mov
and
dec
mov
in
inc
jecxz
pop
scas
add
xor
ljmp
inc
aam
and
adc
js
cmpsl
xlat
ss
mov
mov
mov
cmpsl
mov
xlat
divb
mov
cmpsb
cld
push
lds
scas
push
mov
pushf
jl
das
push
pop
test
sbb
jne
mov
mov
popa
test
or
pop
cmc
xor
xor
mov
test
ja
sahf
push
mull
faddl
fsubs
ss
dec
mov
or
ds
pop
xor
mov
push
loope
xchg
sub
xchg
inc
adc
insb
dec
es
mov
xor
insl
das
push
std
push
call
mov
xor
int
xchg
xchg
sub
push
xchg
dec
pusha
iret
je
insb
mov
dec
lret
sub
stc
leave
push
pop
cmp
lock
mov
cmp
aam
and
and
imul
mov
jnp
aad
out
pop
out
xor
inc
rcrl
cli
imul
pop
pusha
jne
mov
out
mov
mulb
and
in
es
inc
and
mov
dec
push
sbb
into
sub
cmp
xchg
add
xchg
push
sub
cli
imul
scas
outsl
hlt
mov
push
jae
add
xor
jae
aaa
or
mov
adc
lahf
data16
repz
call
lds
testl
movsl
fcoms
pop
hlt
hlt
cmp
lcall
clc
lods
lret
daa
frstor
pop
fcomp
or
ja
pop
sbb
outsl
fisubrs
insb
or
add
pop
jmp
decb
push
shll
mov
les
mov
cmp
inc
or
enter
inc
pop
aam
adc
push
adc
add
scas
dec
cmp
sbb
or
sbb
cwtl
scas
stos
cmpsl
push
add
es
fsubp
mov
xor
or
repz
insb
fstpl
jmp
or
pusha
stos
add
or
sub
push
adc
mov
lock
nop
mov
push
jno
cwtl
dec
inc
or
pusha
leave
dec
daa
xchg
cmc
nop
int
std
mov
push
cmpsl
mov
sbb
add
dec
jno
dec
push
out
mov
int3
scas
imul
pusha
ja
jnp
add
mov
arpl
lds
ret
popa
pushf
loop
mov
cs
ljmp
xchg
test
mov
cmp
or
imul
cmc
filds
repz
sarl
xchg
push
mov
test
mov
jae
addr16
push
stc
out
into
sub
mov
xchg
rcr
mov
int
push
sub
sbb
jb
mov
pop
cmp
lahf
nop
mov
dec
jge
fcoms
cmp
mov
shl
loopne
inc
or
iret
fnsave
or
mov
jp
lds
inc
jne
cmp
cmpsb
mov
sti
rsqrtps
pop
mov
cmpsl
ret
repz
xor
scas
pop
mov
shll
pop
pop
and
in
jne
and
inc
cmpsb
mov
jle
add
dec
hlt
fs
sub
fdivrs
loop
sbb
in
adc
lret
adc
fldenv
repnz
xchg
add
imul
out
mov
in
xchg
ficomps
adc
sbb
movsb
pop
push
insb
into
push
adcb
jnp
lahf
mov
jns
into
inc
sbb
in
js
add
aas
xchg
lods
mov
jmp
ret
dec
cwtl
push
lods
mov
adcb
divb
pop
arpl
and
je
push
jecxz
fidivl
jecxz
jne
pop
xchg
dec
cmp
cli
add
push
sub
lock
dec
popf
stos
mov
xchg
test
movsbl
decl
cmp
xchg
in
sbb
mov
add
and
data16
xor
out
sahf
mov
and
adc
aad
xor
push
fdivrs
arpl
inc
inc
pop
inc
pop
cltd
inc
lcall
mov
subb
xor
pop
jmp
outsb
cltd
push
inc
std
push
jbe
fmuls
lret
cltd
das
xchg
and
movsl
cmp
out
lds
inc
arpl
clc
bound
pop
jns
push
outsb
clc
add
push
adc
pop
aas
notb
fisubl
cmp
into
test
fld
jle
sbb
sbb
jnp
pop
lds
mov
cwtl
call
imul
adc
mov
lods
daa
imul
dec
leave
inc
mov
jge
pop
aas
adc
adc
sarb
iret
pop
and
push
pop
cli
faddp
mov
cltd
js
sub
in
and
sti
jne
fisubrl
popa
jge
lcall
xchg
or
push
ss
xchg
lods
cmp
aaa
sub
adc
mov
jecxz
cmp
ret
adc
jbe
jmp
pop
mov
dec
out
ficoms
xchg
inc
dec
enter
mov
repnz
add
mov
push
adc
aam
and
outsl
popf
mov
inc
outsb
add
cmp
or
add
push
mov
mov
iret
popf
js
movsb
leave
xchg
movsl
mov
xor
mov
nop
cld
inc
loope
sbb
mov
out
add
aam
fucomp
mov
call
int
arpl
mov
ret
sub
test
and
jno
mov
lds
addr16
mov
and
fs
cmpl
add
mov
je
inc
sbb
jbe
sbb
xchg
leave
addl
xchg
sbb
xor
adc
pushf
sarl
es
iret
mov
cmp
add
sub
push
adc
sub
repnz
movsl
and
add
push
sub
scas
popa
adc
rolb
add
and
cmp
jg
decl
jge
iret
movsl
repnz
xchg
mov
lock
or
or
fildl
xorb
cli
out
adc
push
sub
std
pop
loope
pop
f2xm1
dec
mov
fstpl
mov
adc
fsubrp
rorb
xchg
mov
out
sub
dec
call
nop
push
je
xor
clc
xor
dec
inc
xchg
add
je
icebp
and
push
xchg
xchg
addr16
inc
nop
std
cltd
outsl
jae
mov
sbb
mov
movsl
loop
out
out
xchg
fwait
es
mov
adc
shl
pushw
subl
repz
loop
rol
stos
lret
xor
and
dec
imul
sbb
xor
inc
bound
sub
mov
xchg
add
cmp
outsl
test
mov
lock
scas
add
testb
xchg
cwtl
scas
and
xchg
fwait
mov
cmpsl
test
push
fs
pop
ret
pop
dec
xchg
sbb
adc
inc
imul
add
loopne
adc
nop
movsb
xor
fwait
push
mov
sti
int
orl
sahf
cs
mov
add
cmp
sub
pop
add
inc
pop
addl
dec
out
out
sbb
pop
in
sub
xorb
shl
cld
mov
ficoml
hlt
in
xor
scas
cs
ljmp
fsubs
xchg
pusha
pop
jg
in
popa
je
mov
lock
andl
pop
iret
mov
sub
jns
popf
dec
push
shll
mov
lcall
adc
jo
mov
adc
clc
or
rclb
iret
pop
xor
cmc
fldt
mov
imul
into
dec
xchg
push
and
mov
loope
jmp
dec
insl
xchg
add
add
faddl
cmp
push
cmp
pop
xor
or
push
jae
imul
ret
xchg
mov
call
and
pop
push
cmc
insl
or
xchg
inc
mov
aas
fldenv
add
xor
sub
add
push
add
loope
mov
subb
sbb
jae
mov
push
xor
xchg
push
xlat
sbb
sbb
outsb
mov
jl
out
sub
xor
inc
daa
int3
jg
ja
pop
jns
idivb
test
lods
loope
daa
xor
lods
out
sub
outsl
lret
int3
addr16
jnp
fs
xor
jbe
lea
sub
push
inc
test
ds
xor
shlb
xchg
mov
dec
push
or
leave
cmp
je
dec
mov
mov
repnz
cmp
cli
inc
cwtl
mov
xchg
lock
call
sub
add
xor
fucompp
xchg
and
lock
testb
push
mov
jnp
outsb
roll
lea
cmpsl
stos
sbb
jle
push
and
and
and
movsb
adc
sahf
sub
imul
mov
jp
gs
pop
into
jmp
mov
dec
inc
pushf
dec
ja
bswap
xorl
fnstcw
fdivr
xchg
cmp
dec
dec
cmp
ret
mov
dec
mov
push
rorl
push
je
shrl
test
jge
lret
jb
pusha
push
push
int3
aad
mov
adc
out
ret
inc
imul
or
cwtl
sub
mov
push
shrl
jo
xor
lds
and
cmp
stos
mov
mov
or
outsb
mov
nop
aad
in
mov
lds
test
pop
dec
das
popa
add
xchg
jns
inc
cli
sbb
mov
int3
lds
rep
aas
push
xchg
or
mov
cmp
jo
cs
push
xchg
fs
or
in
in
pusha
pop
jl
stos
call
cltd
pop
cmpsl
sub
ffreep
enter
xlat
fldcw
sbb
fcompl
mov
push
cmc
jno
jp
mov
cmp
sub
fldcw
fisttps
add
pop
test
pop
push
jmp
arpl
inc
or
insl
sahf
fiadds
mov
loope
shrb
dec
push
or
push
push
aaa
inc
aaa
push
or
and
pop
or
jge
std
xchg
movsb
je
lahf
ds
or
cld
fisubl
test
and
insl
sar
mov
pop
jns
push
xor
jo
ficomps
ljmp
in
loope
xor
in
xor
insl
lods
lock
inc
xchg
fs
sbb
repnz
movsb
arpl
gs
call
sbbb
cmp
and
sbb
xchg
das
xor
testl
cs
insb
sbb
repnz
jo
mov
jl
ret
or
mov
push
mov
mov
xlat
arpl
inc
and
arpl
mov
xor
pop
pop
xor
imul
subb
and
ja
push
aaa
movsl
dec
test
imul
insl
jnp
sbb
push
clc
mov
mov
jg
sub
test
push
xor
cmp
push
push
insb
mov
int
push
imul
mov
push
std
adc
pop
loope
and
mov
sbb
je
push
xchg
aaa
in
loopne
cltd
pop
mov
enter
and
push
sub
pop
cmp
pushf
in
add
pop
push
cmpsl
and
jbe
mov
in
mov
or
xchg
push
movsb
test
cwtl
aas
fiaddl
outsl
addr16
fcompl
fmull
sbb
mov
xchg
div
mov
loopne
mov
dec
insl
sahf
hlt
xchg
push
loope
sub
wbinvd
out
xor
pop
add
popa
push
aad
sub
mov
movsb
popa
les
or
inc
lea
jmp
test
outsl
cmp
sub
outsb
mov
xchg
leave
dec
pop
adcl
xchg
xlat
sub
pushl
cld
movsb
xor
cltd
repnz
jne
adc
push
repz
mov
mov
mov
sbb
loope
push
mov
icebp
add
shlb
imul
and
hlt
stos
inc
push
inc
pushl
cmp
xchg
inc
bound
xchg
mov
mov
inc
dec
clc
movsl
pop
scas
hlt
ret
shrl
xor
cmpsl
push
fucomip
sbb
imul
cmp
movsb
add
or
test
cmp
std
cmpsb
jbe
cmp
add
cmpsb
ljmp
lds
or
fyl2x
stc
cwtl
inc
mov
dec
inc
in
outsb
mov
adc
xor
add
test
and
push
mov
imul
push
lds
push
and
test
fmull
fimuls
loop
repnz
xchg
in
cmpb
std
adc
arpl
inc
cmpsb
ljmp
adc
pop
pop
fcompl
xor
ja
aad
shll
out
in
jno
loop
push
jmp
dec
orb
xchg
aam
cmp
sete
sbb
jecxz
cmc
out
add
xlat
push
enter
sub
lea
fiaddl
jp
adc
sahf
xchg
push
lods
jge
sub
cmc
rcrl
pusha
int
sbb
idivb
mov
cs
add
lret
enter
cmp
mulb
data16
arpl
inc
pop
or
push
pusha
pop
bound
push
in
iret
mov
adc
insl
repz
inc
and
and
adc
shlb
pop
in
jb
add
mov
data16
mov
push
int
dec
cli
in
push
xchg
inc
cmp
rolb
add
xchg
push
adc
daa
mov
test
enter
mov
incl
repz
dec
mov
pop
test
sti
call
mov
add
aaa
sbb
and
mov
cmp
jbe
lret
addr16
or
nop
cmp
or
int
leave
jp
cmp
lahf
js
adc
mov
mulb
xchg
sbb
sub
iret
imul
les
cmpsb
inc
push
push
mov
jbe
mov
mov
inc
pop
add
movsl
pushl
ss
bound
and
mov
mov
inc
mov
pop
movsl
fsts
out
xor
pop
loop
or
xor
jno
fisubrl
roll
addr16
insl
sahf
loopne
je
jl
push
je
push
cmpsb
clc
subl
mov
lds
xorl
push
mov
pop
mov
mov
sarb
xchg
call
cltd
test
jmp
xchg
sbbb
or
dec
inc
insb
aas
sub
cwtl
lock
repnz
xchg
iret
in
lcall
or
ret
setno
xlat
xchg
cmp
inc
lds
cmp
mov
lret
cltd
xor
fidivrl
cmp
inc
outsb
sub
adc
sub
in
sbbb
push
les
mov
popf
and
js
mov
push
fistpl
ljmp
fsubrs
or
push
push
dec
mov
gs
jmp
fsts
out
lds
scas
fnsave
adc
add
insb
inc
mov
mov
das
and
or
pusha
sub
jp
push
jl
push
push
call
jae
push
in
cmp
imul
es
pop
test
and
pop
mov
scas
jnp
cmpl
sti
test
cmpsb
add
insb
jp
lods
add
out
leave
mov
xchg
mov
filds
cwtl
sbb
fnstsw
jg
jbe
add
ret
stos
iret
sub
loop
mov
test
mov
insb
push
rol
int3
daa
sbb
je
push
lods
jp
cli
cmpsl
nop
sub
int
sub
mov
jg
cmp
add
inc
mov
inc
ljmp
loop
jae
pusha
or
mov
pop
push
arpl
test
sbb
mov
dec
push
xor
cmp
call
loop
push
jmp
mov
mov
sbb
cmp
mov
out
and
xchg
out
adc
push
iret
add
leave
bound
addr16
arpl
outsl
mov
sub
sub
sbb
cmp
iret
sbb
mov
adc
adc
sbb
sub
inc
rcrl
aad
call
fwait
and
xchg
ja
pop
push
repnz
and
test
xchg
movsl
sbb
pusha
jno
cmp
in
mov
fmuls
cmp
decl
in
jecxz
xchg
inc
and
arpl
mov
push
cld
mov
adc
push
clc
insb
enter
adc
lahf
insl
mov
push
pop
popf
ds
sbb
xchg
mov
dec
mov
fnstenvs
movsl
lds
jl
inc
or
out
sti
push
sub
out
jmp
dec
ss
pushf
cld
fidivrl
mov
sbb
dec
mov
or
js
out
aaa
pop
mov
dec
pop
lcall
std
cwtl
xchg
out
gs
inc
pop
push
fldt
sub
in
incl
sbb
sub
dec
ret
fbstp
or
add
rclw
out
sbb
addr16
aas
mov
dec
fsts
cltd
add
pop
out
aas
mov
lahf
pushf
fldcw
std
fdivr
data16
add
or
loop
adc
in
arpl
mov
stos
loope
mov
cmpsb
lods
jge
sbb
outsb
xor
xor
lds
jns
sub
xchg
lcall
flds
mov
movsl
mov
ret
ja
inc
mov
enter
pop
push
inc
mov
xchg
out
das
orl
jle
pusha
jae
inc
jb
cmp
jmp
dec
inc
jge
in
outsb
ds
add
aas
out
dec
jae
sahf
fdivrl
rol
cmp
loope
add
das
cld
push
test
xor
stos
mov
push
je
dec
sub
imul
pop
and
idiv
int3
push
shrb
popa
push
sarl
pop
les
pop
xchg
mov
pop
and
insb
and
jp
mov
popa
push
or
jae
movsl
loope
or
bound
test
mov
ja
es
mov
test
push
testl
push
loope
fstl
sahf
mov
pop
pop
fistps
outsb
jmp
ja
add
add
pusha
gs
test
cltd
lods
push
mov
andb
jno
or
or
clc
cmp
adc
rcrl
sbb
aam
pusha
xchg
mov
mov
out
inc
cmp
mov
daa
pushf
push
shlb
cld
cmp
cwtl
sbb
add
fsubp
daa
xchg
movsl
pop
jle
push
xor
loope
aaa
or
insl
lods
cld
and
add
mov
mov
out
ret
jmp
jae
cmp
fildll
sarl
insb
jae
mov
insb
mov
sub
or
mov
adc
ficoms
pushf
mov
add
sub
sub
xchg
mov
je
pusha
loopne
fs
popa
push
clc
adc
repnz
or
ret
in
pop
out
aad
add
fists
pop
jnp
imul
sbb
adc
lea
jae
jl
inc
adc
sub
cltd
lods
dec
fistpl
sub
insl
leave
pop
jbe
pop
ljmp
pushf
imull
xchg
arpl
movb
fdivs
daa
or
es
jp
xchg
adc
daa
cmpl
shrl
push
ljmp
jecxz
add
xchg
and
into
movsb
xlat
out
mov
jge
mov
insb
jmp
ds
shrb
ret
pushf
jns
movsl
push
dec
and
mov
mov
or
sub
jb
add
addr16
int3
inc
sbb
movsl
xor
sub
cli
sahf
jb
hlt
lcall
mov
fnsave
sub
test
mov
cld
outsl
pop
fwait
js
pop
jl
xchg
data16
ret
dec
fdivp
mov
insl
aas
and
push
fidivl
jp
hlt
jmp
jg
xor
or
fucom
rcll
mov
adc
aas
dec
inc
xchg
jg
pop
in
hlt
push
dec
ret
pop
into
inc
imul
data16
rol
es
scas
lret
in
push
sbb
popw
out
jp
cmp
mov
popl
xor
and
pushl
mov
add
rorl
es
xlat
repnz
mov
lods
lahf
xchg
repz
fs
icebp
mov
and
and
adc
pop
push
push
push
insb
sub
test
cmc
mov
sbb
sahf
xchg
rcr
test
mov
xor
and
fcoml
sub
mov
jge
icebp
sbb
sbb
push
idivb
int
xor
in
mov
fiaddl
jg
inc
dec
cmc
xlat
fistpl
rcll
jmp
lea
xchg
pop
lock
cld
jmp
pop
sbb
dec
or
daa
mov
ss
scas
cmpsb
push
sbb
sar
fiaddl
shr
pop
pop
imul
sub
in
jle
and
and
das
mov
cltd
idivb
sub
outsl
dec
inc
jecxz
subb
addr16
jb
push
mov
jg
rorb
sahf
mov
out
or
push
adc
mov
imul
lret
ss
stos
push
mov
fnstenv
sub
cmp
imul
cmpsb
hlt
xor
sbbb
pop
rorb
pop
adcb
ret
cmpsb
mov
mov
or
push
and
sarb
or
ljmp
jne
insb
scas
cmpsl
negl
testb
inc
cli
aas
btr
and
fucom
sbb
adc
daa
inc
neg
loope
jne
jg
cli
imul
pushf
or
sub
push
push
aad
pop
mov
adc
inc
addr16
faddl
sbb
cmp
aaa
push
xchg
add
cld
outsb
cmp
pop
std
cli
jmp
lea
sbb
lock
cld
outsl
mulb
je
call
jbe
sbb
mov
pop
ret
or
jmp
loopne
and
push
xor
sub
int
test
push
mov
xchg
add
pop
lret
pop
cwtl
imul
in
pop
jns
icebp
pop
popf
cmpsl
sub
pop
push
fldcw
addr16
cwtl
fwait
js
repnz
lcall
aam
mov
lock
add
test
and
xor
ja
mov
and
ja
mov
fadd
shll
and
aas
fs
pop
ss
pop
je
lret
popf
imul
movl
pop
movsb
and
sbb
leave
out
fimuls
int
cmp
push
in
aad
je
mov
cmpsb
xor
and
loope
sbb
insl
stc
and
bswap
out
or
xchg
and
ficoml
adc
aam
into
dec
inc
loop
je
ret
cmpsl
jmp
popf
mul
jl
rcr
std
cld
inc
mov
iret
sub
sti
shlb
daa
dec
jecxz
xchg
add
addr16
pop
xlat
fstl
push
cwtl
mov
sti
enter
cwtl
pop
loope
repz
loopne
mov
dec
pusha
stos
push
xor
push
add
jne
lret
stc
inc
dec
lea
rcrl
xor
rcr
cmp
adc
es
push
test
jp
fists
popa
inc
mov
or
xorb
push
sub
fwait
cmpsb
add
dec
in
ljmp
adc
jbe
outsb
pop
addr16
or
push
add
mov
xor
adc
sti
out
push
xchg
test
hlt
inc
lds
fidivl
das
adc
out
add
cmpsl
aad
xchg
mov
je
xchg
mov
mov
mov
scas
test
add
sub
cmpsb
inc
jne
orl
mov
adc
inc
pop
cmpsb
pop
jb
icebp
mov
shrb
jle
arpl
insl
inc
inc
lods
fisubrl
cmp
push
subb
int
stos
inc
popa
or
jecxz
mov
mov
insl
lret
pop
ficompl
sub
lods
pop
movsl
mov
fldl
pop
psrld
imul
stos
subb
mov
out
icebp
mov
scas
sub
std
sbb
or
inc
jno
sub
xor
lds
popf
adc
or
and
sahf
inc
add
push
fcompl
pop
jbe
pop
sub
xchg
cwtl
shlb
and
sbb
adc
cs
dec
inc
sbb
lahf
loopne
xorl
loopne
and
cltd
mov
mov
adc
and
mov
pop
inc
mov
pusha
popa
jge
xchg
or
cmp
xchg
dec
jb
subl
mov
adc
rclb
sbbl
inc
lret
dec
lods
and
xchg
jge
js
pop
fidivl
xor
insl
inc
dec
push
les
mov
sub
sbb
out
jmp
push
xchg
inc
mov
and
mov
lds
xchg
imul
push
and
pop
xchg
rcl
test
out
incl
mov
nop
pop
inc
xor
repnz
pop
dec
lret
sub
outsb
and
xchg
jmp
scas
sub
insb
jb
cmpsb
js
inc
adc
mov
push
cmc
vmaxss
inc
call
and
popa
test
sbb
fistpll
cmp
xchg
xor
push
imul
inc
lcall
mul
push
and
sub
sar
scas
inc
insb
imul
ror
sbb
lock
mov
pushf
jl
iret
test
xor
out
xchg
mov
push
xchg
arpl
ja
jo
jns
or
loope
jle
adc
jno
scas
test
andb
sbb
mov
mov
xchg
xchg
sub
mov
inc
inc
lods
lret
out
call
mov
lock
pushf
fidivrs
lret
dec
ja
pushf
aam
das
and
insl
test
lods
fcom
mov
jecxz
enter
addr16
mov
fcmovne
lods
adc
fdivl
ret
push
adc
pop
jmp
pusha
cmc
in
sub
inc
mov
fst
call
jb
mov
fistl
enter
mov
mov
ffree
testb
jp
pop
add
testb
cs
ljmp
adc
loope
jb
movsb
sub
inc
cwtl
popf
xor
dec
xor
dec
mov
fs
lahf
sbb
mov
in
dec
test
scas
push
rclb
cmp
popf
fbld
fwait
or
mov
movsl
mov
mov
scas
and
xorb
fldt
mov
movsl
cmp
in
push
dec
je
div
imul
imul
mov
ss
pop
adc
or
aaa
sub
ss
mov
fs
push
inc
aas
and
jne
adc
outsl
ja
mov
loopne
jae
cmp
xchg
outsl
int3
rclb
adc
cmovae
scas
orl
mov
leave
fstl
test
lahf
in
pop
push
cmp
jmp
cld
fs
imul
mov
sub
test
movsb
jmp
clc
mov
jge
fadd
pop
dec
fwait
mov
pop
add
jp
and
add
in
dec
mov
clc
pop
adc
add
cmpsl
insl
pop
aam
out
mov
sbb
xchg
lods
outsb
or
xor
dec
pop
addr16
inc
jns
adc
push
repz
push
stc
mov
dec
or
pop
loopne
cmp
mov
mov
out
adc
mov
sarb
cmp
in
iret
jne
insb
outsb
or
mov
scas
mov
in
stc
and
adc
push
in
repz
and
mov
jno
out
out
inc
in
jecxz
mov
stos
dec
in
call
xchg
or
pop
and
cmpb
jnp
subb
lcall
fs
rcll
cmpsl
push
movsb
outsl
aas
imul
aad
ss
out
mov
push
cmpsl
jbe
ss
pop
push
clc
fimuls
mulb
test
mov
ret
repz
xchg
out
mov
and
add
mov
jb
dec
dec
loope
test
jo
jp
ja
adc
mov
sbb
shrb
mov
push
fdivrs
jle
mov
lahf
imul
jbe
fldt
sbb
jne
shrl
push
pop
data16
lret
xchg
push
loop
pop
cmp
shr
mov
cmp
push
aad
add
aam
xor
inc
xor
ss
fwait
sahf
cmp
mov
jne
pop
rcl
scas
out
cmp
je
mov
or
mov
inc
rorl
sub
mov
push
addb
or
jle
sbb
cwtl
mov
cwtl
mov
mov
ffreep
pop
sarl
push
xor
ret
push
shlb
inc
xchg
jg
pop
rclb
in
loopne
mov
sbb
mov
xchg
cmp
dec
xor
lock
shll
inc
out
pop
das
xor
mov
pop
out
and
mov
pushf
call
aas
jecxz
jge
shrb
cmp
lock
push
fwait
push
add
xlat
test
cmp
fadd
lret
pop
inc
nop
jle
int
rcrl
shrb
and
mov
xchg
mov
jo
filds
aad
gs
test
loopne
nop
hlt
sahf
mov
adc
fistl
dec
ss
mov
add
push
subl
push
mov
adc
out
push
insl
stos
imul
int
pop
cmc
in
out
lea
lcall
jle
imul
jecxz
push
les
xor
imull
rol
xchg
cltd
push
ss
mov
jbe
xchg
rcrb
and
imul
xchg
fisubrl
sbb
cmc
shl
loope
imulb
pusha
fnstcw
jg
xor
scas
stos
leave
imul
and
call
push
inc
dec
xchg
mov
psubb
lcall
push
inc
inc
or
jl
cs
in
inc
sub
mov
mov
cmp
xlat
sti
fisubrs
mov
lods
cmpsb
fildll
aas
mov
jge
fsts
cmpsb
sbb
add
movsb
or
push
sub
adc
jne
movsl
pop
lea
aaa
cmp
pusha
sbb
or
fbstp
arpl
xor
jbe
ljmp
cmc
lods
add
xchg
and
in
imul
ror
mov
mov
lods
jmp
stc
jecxz
in
pushf
cmp
bswap
scas
pusha
xor
sub
lcall
lods
insb
mov
or
popa
cmp
call
aaa
popa
pusha
xchg
cmp
out
cli
fsts
sub
pop
pop
push
das
jae
cwtl
sti
jmp
int
lcall
gs
pop
or
inc
mov
mov
xchg
fwait
inc
jecxz
mov
jo
in
push
cmp
fcmovu
xor
pusha
jg
ret
decb
fcomp
test
sub
add
adc
pop
fwait
out
cmp
xorl
dec
cmpsl
lret
lds
mov
cmp
mov
ljmp
push
int
data16
not
pop
xor
in
dec
in
mov
xorl
push
ss
insb
dec
push
sbb
jle
std
aas
jle
mov
cmp
adc
sbb
fwait
es
cmp
sub
std
xor
and
mov
cmpsb
negb
pop
repz
lcall
push
dec
pop
ss
xlat
mov
outsl
push
sub
cmpl
fmuls
and
push
sub
popa
mov
call
inc
sbb
ds
loop
mov
push
inc
inc
cwtl
sti
pop
in
hlt
cmp
in
repz
into
sbb
or
sub
sub
imul
jbe
pop
icebp
mov
lret
mov
ficoml
push
leave
adc
lods
dec
stos
aad
jecxz
cld
shr
jp
sub
iret
jae
shlb
xchg
lret
push
mov
adc
mov
scas
gs
pop
inc
mov
shll
in
mov
ljmp
subl
mov
out
test
jecxz
aas
mov
xlat
jmp
pop
out
add
lret
fdiv
jne
cmp
daa
pop
das
mov
clc
loope
mov
or
aaa
in
test
test
push
daa
push
outsb
mov
or
lock
add
outsl
push
inc
dec
push
mov
shlb
and
xchg
or
in
sub
in
shrb
insl
mov
sbb
inc
into
ret
addb
shlb
cmp
insb
dec
or
sub
fbstp
cmpsb
cwtl
iret
stc
push
adc
cmc
xchg
inc
pop
les
fstpt
out
mov
daa
shll
pop
jns
loop
stc
in
test
gs
stos
lods
cmpsl
imul
or
sub
popf
fcoms
add
and
test
lret
cmp
mov
stos
addr16
add
outsl
cltd
clc
aad
xlat
jg
inc
aaa
push
shlb
bound
adc
shll
insl
jmp
test
call
mov
cmp
mov
fld
and
or
inc
add
in
pusha
aam
mov
sbb
xor
icebp
scas
int3
lar
jbe
push
adc
mov
inc
sbb
push
adc
scas
inc
inc
fs
cmp
pop
outsb
loopne
add
int3
sbb
out
fstpl
fidivl
out
addr16
mov
js
xchg
mov
aaa
sbb
arpl
xchg
ds
in
push
adc
mov
test
mov
cmpsb
inc
pusha
iret
pop
push
mov
xor
into
clc
fdiv
mov
imul
lods
xor
out
int3
and
outsb
or
cmpsl
aam
push
inc
cmp
lret
adc
fists
push
cmpsb
xchg
pusha
negl
enter
add
pop
les
notl
cli
xor
cwtl
test
mov
aas
inc
leave
inc
lahf
sti
or
dec
xor
adc
rclb
outsb
dec
push
leave
lods
pop
int
outsb
daa
pop
fildll
sbb
nop
or
lea
loope
cmpsb
aam
lods
out
cmp
arpl
mov
push
test
add
dec
fcoml
and
filds
xchg
push
or
xchg
dec
push
xchg
jmp
in
lea
sbb
stos
cmp
popf
inc
into
adc
pop
fisubrs
cmp
ss
cli
mov
je
inc
cmp
mov
jge
and
loop
push
cmp
scas
negl
lock
ljmp
push
test
pop
cld
jle
sub
data16
cld
mov
mov
adc
pop
loopne
and
fmuls
dec
xlat
ret
mov
or
leave
jmp
push
movsb
and
sbb
add
cli
pop
loopne
push
cmp
cmp
insb
das
sbb
mov
push
jecxz
push
adc
fcompl
mov
pop
sbbb
leave
in
jo
sarb
stos
sub
xor
inc
inc
lods
mov
pop
repnz
jl
xchg
and
fisttpl
fsub
and
push
in
dec
fwait
aas
jp
sub
sarl
jo
xchg
dec
xchg
stos
mov
mov
xor
sub
lret
mov
lret
test
fdiv
test
stc
repz
movsl
pop
jle
inc
addr16
add
mov
in
inc
cmpb
jnp
fucomi
scas
and
aas
xchg
inc
fwait
insl
mov
cmp
gs
mov
scas
fcmovne
ret
repz
addb
push
and
leave
loopne
dec
jo
mov
cmp
das
das
negl
xchg
mov
lcall
inc
xchg
sbbl
push
add
lcall
pop
ret
push
dec
xor
sub
mov
mov
xor
lret
mov
xchg
pop
maxps
ljmp
mov
pop
xor
clc
mov
lahf
fcmovne
sbb
sbb
ret
inc
arpl
dec
aad
popl
lods
push
js
xor
fwait
ret
adc
loope
stc
inc
mov
pop
xchg
mov
pop
popa
outsb
ret
jle
scas
adc
xchg
in
imulb
pop
jl
jns
divb
sub
mov
mov
adc
push
dec
jne
mov
sub
inc
jecxz
sbb
xchg
popa
sub
push
mov
lret
es
mov
pop
in
xchg
pop
hlt
in
movsl
jge
outsl
push
pop
xchg
mov
jmp
mov
rclb
pop
inc
push
pop
cmp
pop
or
pop
cmp
inc
cmp
adc
dec
loope
xor
cmp
lock
test
pop
scas
inc
xor
dec
shrb
movsl
push
and
popf
push
punpckhdq
outsl
sbb
dec
cmp
mov
ljmp
mov
or
arpl
push
in
jo
scas
lcall
mov
jp
outsl
cmp
and
adc
daa
jbe
pop
repz
pop
int3
gs
push
popa
push
mov
jp
lock
dec
sub
movsl
add
xchg
mov
sbb
cmp
add
dec
push
test
lods
or
add
pop
repz
xchg
and
jmp
pusha
jle
mov
pop
cwtl
popa
push
jle
jo
adc
dec
test
rcl
xor
es
and
adc
mov
push
jmp
jge
fidivrl
divl
cmp
outsb
pop
adc
inc
jae
scas
mov
xadd
inc
or
inc
sbb
repz
sub
push
adc
mov
hlt
sbb
je
repnz
rclb
push
mov
subb
cmc
fiaddl
push
sub
xchg
in
ds
pop
out
test
or
sbb
enter
and
mov
test
xchg
dec
lds
cltd
cmp
sub
inc
mov
sub
push
or
push
les
pop
lds
sub
test
lahf
cmp
jp
imul
xlat
jnp
lods
popf
leave
add
out
mov
int3
xor
pop
jg
or
fsubrp
jp
jbe
cli
stos
repnz
subl
iret
push
jmp
iret
mov
push
add
pop
mov
xchg
sbb
pushf
mov
inc
in
and
mov
dec
das
inc
mov
aas
cmp
addl
js
adc
cmp
xor
lahf
and
and
clc
sub
fstps
push
lret
xchg
xor
xor
jl
hlt
test
les
and
cmp
aas
fsubrl
mov
adc
stos
xor
popa
cli
stos
pusha
xor
cmc
fs
das
in
jle
popl
and
sbb
lret
movsl
push
sub
ret
pop
xchg
sbb
push
push
inc
in
jns
xchg
out
repz
mov
loop
data16
aaa
mov
inc
jp
popa
sarl
cmovle
fcomip
leave
aas
ja
jmp
add
mov
rcll
popa
out
add
loopne
arpl
flds
mov
or
insl
dec
xchg
dec
repnz
fs
stos
mov
cmp
mov
xlat
arpl
push
mov
mov
les
fbstp
mov
imul
cld
mov
xchg
jl
fildll
out
loopne
decb
sub
jne
or
cs
pop
xchg
jbe
mov
scas
test
inc
pop
mov
push
call
loope
lods
stc
inc
mov
enter
sbb
dec
mov
cmp
add
jecxz
into
ds
fdiv
lods
mov
in
pop
daa
insb
cmc
leave
mov
dec
push
rorb
push
rcrb
fcomip
push
repz
lahf
mulb
mov
cmpsl
jmp
fnstsw
out
inc
loopne
push
adc
call
sbb
xchg
cmc
mov
sub
cmp
mov
enter
jns
rolb
sarb
cmc
add
sub
jge
adc
lcall
lahf
cltd
es
pusha
inc
jecxz
cmp
adc
lea
mov
jae
or
sub
stos
test
icebp
out
xor
xchg
insb
je
xchg
cmp
nop
adc
add
jne
outsb
mov
leave
cmpsb
enter
xchg
sahf
inc
xor
scas
cmc
dec
lods
xlat
nop
xor
in
push
xchg
jno
ds
xchg
cmpsl
pop
inc
mov
adc
lcall
cmp
sbb
loop
mov
mov
mov
dec
push
rol
mov
repz
xor
imul
sub
mov
fwait
cmpsb
psrlw
inc
push
test
scas
inc
push
and
cmpsb
mov
clc
pop
lock
pusha
push
mov
fsubrl
mov
or
push
push
jecxz
sub
inc
or
mov
loop
int3
clc
cltd
mov
out
pop
jo
in
xor
mov
adc
xchg
cmc
mov
incb
push
inc
ja
fisubrs
jne
jns
mov
jecxz
xor
push
and
mov
stos
xor
and
in
xchg
insl
into
sub
jb
hlt
dec
xlat
jns
enter
mov
aam
insb
jmp
xor
sti
arpl
mov
cmp
jge
cmp
pop
in
and
add
popa
loop
pop
out
movsb
dec
or
push
add
push
inc
jl
or
pop
mov
sub
test
sub
jle
pushf
in
mov
loopne
hlt
out
lea
int
ret
aad
dec
xor
or
ror
jae
mov
in
negl
cmp
lahf
jecxz
sbb
or
or
lret
cmp
rcrl
mov
mov
sub
or
dec
hlt
mov
out
push
leave
lods
add
mov
call
int3
aad
xor
push
pop
xor
jp
fidivrl
arpl
mov
sub
out
push
movsl
jno
ds
inc
push
push
and
push
popf
dec
push
xchg
lret
arpl
adc
xorl
cltd
or
adc
sub
int
push
daa
jle
mov
faddl
ds
jmp
repz
dec
push
icebp
dec
pop
jne
dec
sahf
mov
xor
mov
pop
andb
or
popa
jle
jge
cwtl
inc
jno
xchg
xchg
sbb
sbb
vunpcklpd
pop
subb
inc
sub
popf
fstpt
cltd
insl
lods
add
add
popf
push
sub
or
shrb
stos
mov
inc
test
incb
add
fstpl
jbe
movb
jmp
jp
cltd
push
addr16
and
mov
das
rorb
pop
popl
fst
cmp
mov
xchg
or
mov
jne
xor
in
pop
sub
mov
adc
or
je
popa
dec
in
call
es
icebp
scas
pop
xlat
cmp
pop
iret
and
xor
aas
mov
add
call
pop
push
mov
out
pop
mov
iret
pop
in
shrb
icebp
pop
pushw
shrl
mov
out
dec
mov
aas
pop
lret
push
inc
test
bound
mov
je
lods
outsl
and
push
cmpsl
int
pop
decb
stos
inc
xchg
popa
aad
gs
pop
repz
std
mov
push
mov
ja
sub
fsts
insl
sbb
ds
test
cs
in
add
mov
fwait
and
sbb
js
les
sbb
fildll
and
jae
pop
dec
fmuls
xlat
jnp,pt
je
jp
nop
xor
aam
mov
mov
lcall
dec
and
data16
inc
cmp
sub
push
scas
call
push
mov
jp
dec
scas
sub
mov
xchg
faddl
xchg
das
ja
xchg
mov
xchg
lret
mov
fadd
mov
sbb
lock
pop
push
lcall
movsl
stos
or
arpl
loopne
verw
bound
pop
test
into
aam
cmp
or
mov
sub
and
push
mov
in
pop
jmp
dec
xor
mov
mov
adc
fildll
addl
scas
inc
aad
xor
cmp
scas
and
stos
pusha
add
lret
aaa
mov
dec
out
dec
and
dec
nop
sub
inc
clc
sub
inc
jmp
ret
push
push
cmpsl
pop
add
in
xchg
push
jp
add
mov
mov
testb
scas
call
jecxz
mov
sbb
mov
ds
xchg
jecxz
jmp
mov
inc
or
jl
sbb
push
mov
jns
shll
dec
pop
sbb
inc
sbb
and
ret
inc
in
icebp
push
cmp
lea
lahf
mov
or
and
mov
mov
shrb
fistps
stos
mov
inc
sahf
mov
leave
pusha
dec
mov
jb
mov
and
adc
xor
cmp
imul
nop
and
cmc
add
push
dec
stos
sarb
ss
std
sub
mov
stos
xchg
jecxz
call
jae
jg
pop
mov
xchg
mov
sbb
stos
mov
inc
in
dec
dec
pop
lret
xor
pop
in
les
ret
sub
fdivrl
add
mulb
mov
xchg
stos
jo
inc
bound
sti
jecxz
pop
bound
xchg
jl
dec
lret
pushf
scas
jns
gs
ja
lcall
aas
xchg
idivb
add
lea
jno
int
dec
loop
xchg
imul
sbb
iret
jecxz
pop
jecxz
shlb
or
push
les
idiv
es
push
pusha
xchg
dec
push
mov
stc
mov
rorl
sbb
sbbl
jmp
jno
xlat
sub
ljmp
int
lret
mov
jecxz
inc
insb
aas
rcr
mov
or
inc
leave
ficoml
je
jo
or
setg
push
or
sahf
test
ret
popa
js
mov
mov
imul
sbb
andl
push
ja
cmp
mov
imul
jmp
shr
jge
lcall
mov
imul
popa
shrl
scas
and
cmpsl
int3
xchg
push
or
loop
cmp
xchg
enter
inc
imull
pop
push
popa
push
sub
js
mov
mov
daa
push
jle
arpl
push
cltd
jle
fnstcw
fsubrs
leave
or
cmc
xchg
stc
mov
mov
ret
movsl
lcall
daa
aaa
lock
int
or
xor
mov
and
pop
aad
xchg
mov
mov
sbb
gs
mov
or
push
mov
fisubrl
cmp
jecxz
in
jmp
aam
push
pop
sbb
mov
repnz
lret
pop
movsl
out
in
jnp
jnp
scas
or
repz
dec
dec
aad
cmc
ss
test
shll
rcl
in
pop
adc
adc
push
or
aaa
cwtl
or
add
call
sbbb
xchg
and
fidivl
and
test
enter
pop
pop
cmp
add
xchg
aad
mov
or
subb
cli
fucomip
loop
test
dec
hlt
in
jns
push
push
xchg
outsb
add
mov
push
sbb
xor
roll
adc
int3
addr16
mov
mov
or
mov
dec
pop
outsl
or
hlt
and
xchg
jnp
scas
xchg
sar
out
stc
lcall
ret
xchg
out
inc
add
mov
mov
ljmp
orb
jbe
add
shlb
inc
aam
ss
mov
push
dec
or
mov
push
mov
ds
push
rorl
sub
in
cmp
or
sub
or
rcll
imul
sarb
sub
lret
stos
cs
cli
xchg
dec
sbb
inc
aaa
cwtl
jmp
lds
in
stc
iret
lahf
insl
arpl
xchg
inc
dec
pop
and
aas
mov
rcl
into
mov
fiaddl
xchg
subl
sbb
mov
push
mov
js
mov
fcom
popa
sarb
pop
adc
pop
mov
rcrl
or
jnp
je
inc
pop
cmc
aam
sub
aas
and
and
push
xchg
or
dec
dec
pop
lock
imul
lods
mov
test
in
sub
xorps
sbb
lret
or
aaa
fsubrl
adcb
arpl
hlt
popf
imul
repz
push
mov
les
push
mov
add
inc
cmp
inc
loopne
pop
xor
fdivp
les
pop
dec
dec
and
outsb
js
dec
add
mov
inc
fimuls
movsb
out
push
add
jg
mov
mov
outsl
cld
xor
fimull
cmp
cmp
aas
sbb
xchg
bound
pop
ret
into
xor
push
xchg
loopne
sbb
nop
loopne
hlt
push
rorl
ljmp
fisttps
xlat
loop
xor
cmp
imul
dec
sub
push
pusha
imul
or
cmp
xchg
pop
adcl
icebp
dec
xchg
push
xchg
push
sub
movsl
mov
pop
in
mov
scas
daa
iret
inc
in
sbb
push
outsl
sbb
dec
loop
cmpsb
sub
jg
sbb
jge
push
lahf
shl
jle
sub
dec
mov
int
rcll
dec
mov
jbe
cli
ljmp
xor
js
pop
xchg
add
or
pop
loope
xor
mov
lea
xchg
mov
negl
ret
mov
mov
push
movsb
stos
loopne
pop
mov
cmp
mov
push
and
mov
test
and
out
dec
push
aam
fwait
inc
mov
stos
cld
lret
stos
inc
loopne
lods
adc
popa
push
in
xor
cmp
sub
fists
add
cwtl
sub
inc
pop
lds
inc
ja
lods
andl
push
pop
enter
cmp
in
int3
inc
les
adc
out
stc
add
aaa
sbb
push
outsl
lret
pop
add
cmpb
lret
sbb
jmp
push
iret
rorb
push
xchg
ja
outsl
jb
daa
arpl
mov
adc
adc
push
jmp
outsb
ss
arpl
clc
sbb
cmp
out
jb
sub
push
hlt
in
call
ss
addr16
mov
enter
ror
lods
or
pandn
pop
pop
scas
jo
mov
ja
ja
push
sbbb
pop
clc
push
adc
addr16
sub
xchg
or
xor
inc
daa
dec
push
lcall
push
dec
inc
dec
arpl
sub
jle
loope
pop
scas
outsb
jo
push
pop
fimull
test
repnz
popf
adc
sub
mov
and
rcrb
sbb
jmp
sbb
cmp
in
jno,pn
mov
aam
xor
pushf
cmp
cli
and
inc
subb
sub
arpl
xchg
hlt
outsb
lds
pop
icebp
mov
jge
push
lods
mov
das
imul
mov
or
jb
push
out
mov
push
ds
jecxz
mov
movsl
lret
sbb
ds
cmc
in
mov
in
mov
add
mov
add
repnz
push
sbb
fdivl
mov
mov
inc
test
mov
popa
jle
xchg
imul
inc
sbb
das
pop
jle
mov
ljmp
std
mov
repnz
lea
ja
mov
add
sar
sub
push
adc
loope
mov
dec
and
syscall
out
sbb
push
dec
pop
call
jbe
lods
push
mov
inc
mov
push
add
xor
push
xlat
xorb
add
decb
mov
jle
pop
mov
mov
les
jge
cmpsb
test
cmp
stc
xchg
sub
dec
icebp
notb
enter
lock
mov
out
jle
push
movsl
movsl
push
jmp
pop
ds
lret
cli
mov
cmc
xchg
rcrl
aam
inc
mov
mov
les
shl
dec
hlt
cmpsb
jno
fcmovbe
pop
pop
cmpsb
jo
mov
in
fnstcw
jmp
xor
mov
xor
cli
fnstsw
cmp
nop
scas
mov
push
iret
shrb
mov
test
inc
testl
sahf
xchg
xchg
sub
icebp
mov
push
jl
shll
fdivp
pushf
cmpsl
jmp
fsubr
sbb
dec
mov
mov
jbe
and
cwtl
sbb
arpl
cmpsl
xlat
movsb
test
cltd
out
arpl
rcrl
int
pop
pushl
pusha
pop
push
pop
mov
mov
fwait
in
mov
adc
cltd
lods
cmp
mov
movsl
popa
lea
aam
dec
popa
mov
mov
lds
lahf
pop
insl
cmp
fsubrl
fsubrs
pop
dec
fists
and
or
cmp
loope
or
subb
or
dec
test
ds
sub
adc
xchg
dec
cmpl
dec
insl
mov
mov
push
dec
adc
adcb
sbb
sbb
push
xchg
and
xchg
out
lcall
xor
sub
pusha
iret
icebp
lods
mov
add
insl
leave
adc
cmp
adc
in
sub
sti
and
iret
adc
repnz
lcall
sub
cwtl
pusha
in
insl
pushf
shlb
cmp
outsb
outsb
je
outsb
inc
insl
mov
fs
insl
movsl
pop
pop
pop
scas
es
pop
out
push
add
pusha
out
fists
inc
clc
adc
out
cmpsb
movb
enter
jno
mov
es
out
xor
xchg
add
aam
pushf
fistpl
jnp
dec
mov
mov
xor
cmc
cmp
ret
cwtl
divb
femms
inc
xor
cmc
repz
rcll
xor
cmp
xor
js
mov
mov
add
jns
xlat
mov
test
lods
jmp
inc
popf
scas
sbb
adc
arpl
push
dec
lar
call
cli
mov
enter
mov
push
js
adc
push
lods
push
pop
sahf
jp
in
mov
pusha
and
push
mov
and
sub
add
sbb
rep
mov
adc
jns
cmp
enter
push
data16
leave
scas
xchg
push
jecxz
dec
inc
adc
push
sti
mov
es
jmp
cltd
push
xchg
mov
loope
inc
mov
popf
mov
ss
lods
pop
ss
jg
jnp
dec
mov
cli
call
popa
jmp
std
add
dec
push
dec
nop
cmc
and
aad
scas
sub
pop
test
sub
movsb
push
test
sbb
jnp
mov
lea
hlt
nop
popf
repz
lret
and
push
xor
mov
mov
jle
rolb
ret
movsb
mov
sti
hlt
mov
pop
stos
xchg
shll
mov
es
cmp
sub
movsw
mov
test
jmp
sbb
pop
pop
in
test
insl
out
out
xor
movsb
jno
push
stc
inc
pop
adc
imul
dec
mov
aas
repz
xchg
scas
lret
outsl
cmc
mov
jbe
loope
mov
and
test
xor
add
jae,pn
subb
cmp
cld
jmp
ljmp
pop
cmp
xor
and
mov
jg
loop
mov
stos
sbb
mov
aas
aad
xor
cmp
cli
jle
movsb
cmc
js
out
xor
pop
leave
into
outsl
pop
and
push
adc
outsb
ja
je
ljmp
and
sub
das
divl
inc
mov
jmp
movsb
int3
xlat
xchg
mov
je
outsl
stos
fisttps
jecxz
mov
pop
fs
jp
inc
sti
cmp
hlt
out
popf
pop
inc
push
xchg
push
mov
fsubrl
sti
out
xor
mov
dec
xor
mov
ficoms
mov
lea
mov
aad
insl
shll
cmpsb
jns
arpl
in
repz
push
xor
sub
popf
insb
push
jae
iret
orl
jecxz
cmp
sarb
xchg
dec
pop
sar
daa
cmpsl
mov
nopl
mov
sbb
mov
fiadds
shlb
and
testb
rolb
arpl
cmpb
jae
popf
shrl
in
cli
repz
lods
nop
xchg
jg
aaa
aaa
ds
out
jns
loopne
jbe
xor
jg
jnp
loop
out
or
lret
and
lea
jecxz
pop
sarl
mov
hlt
dec
adcb
in
inc
cld
int
mov
insl
mov
xor
out
xor
or
negb
xchg
shlb
loopne
es
lea
adc
not
xor
inc
rcrl
aam
cmc
sub
rcrb
nop
jmp
dec
stos
es
pop
mov
and
dec
andl
lret
jbe
inc
ret
lret
push
mov
addr16
push
cmp
repnz
push
pop
fs
in
in
lea
inc
icebp
bound
std
ret
test
sub
lods
subb
out
and
incl
pop
ret
arpl
xlat
popf
xlat
outsb
adc
insl
sub
jl
or
push
cs
xchg
push
mov
xchg
mov
jmp
mov
pop
mov
stos
bound
ljmp
mov
cmpsl
jge
jbe
jl
sbb
fisttpll
icebp
cmc
mov
out
push
cs
imul
repnz
arpl
pop
fbld
add
stc
xor
fmul
xchg
xlat
and
jmp
notl
dec
cs
lcall
leave
in
add
mov
in
stos
bound
cmp
gs
sub
cmp
lcall
add
sbb
push
push
and
jns
mov
orb
les
hlt
pop
xchg
mov
ljmp
sbb
pop
ss
mov
push
movsl
sarl
fsubs
loopne
out
cmp
fsts
push
add
jmp
add
sub
fisubrs
lods
jnp
mov
pop
jle
popa
sahf
jl
or
in
out
push
sbb
sub
xchg
sub
push
mov
aad
push
mov
dec
mov
sahf
inc
out
call
mov
frstor
shll
jecxz
cmp
fcomi
mov
insb
dec
mov
cmovp
scas
mov
or
adc
push
xchg
pusha
jl
and
lret
rcll
popa
inc
or
jne
in
in
icebp
ss
jae
xor
ficoml
cvtpi2ps
jno
das
mov
mov
in
gs
aas
or
shrl
sbb
xchg
cmp
mov
stos
popf
dec
fidivs
xor
adc
xchg
imul
pop
test
cmp
push
pop
push
and
jo
cmc
insb
push
pop
jl
out
adc
mov
xor
push
mov
dec
nop
sub
test
jns
nop
adc
movl
sub
lret
nop
shr
scas
dec
xchg
adc
push
aas
xchg
cmpsl
xchg
jl
aam
stos
sub
xlat
xlat
jbe
ds
jb
dec
negl
iret
shrb
pop
int
daa
es
rcrb
mov
clc
mov
jb
add
lock
lcall
mov
dec
add
dec
push
insb
mov
test
fnstcw
dec
stos
mov
outsb
or
addb
mov
out
lds
adc
pusha
adc
push
cmc
movsb
sub
gs
lds
push
test
pmulhw
push
lds
repnz
jo
loop
in
mov
ja
dec
adc
mov
xchg
sub
inc
mov
push
sub
out
sbbl
inc
cmp
and
inc
ret
push
mov
sub
cmp
push
fisubl
fistps
test
leave
mov
sbb
cli
hlt
je
sub
jecxz
jae
sub
ret
popf
xchg
xchg
repnz
pop
pop
subb
push
jge
nop
mov
sbb
cmp
inc
or
dec
mov
sub
pop
in
mov
outsl
xchg
adc
mov
clc
mov
jno
cmp
mov
jns
or
sub
xorl
inc
adc
xor
cmp
mov
fisttpl
nop
mov
cmp
sahf
xor
xor
negl
and
clc
pop
sub
sti
mov
mov
mov
pop
dec
pop
push
lcall
out
psubw
push
in
rorl
mov
in
les
imul
pop
mov
and
es
mov
and
lock
in
pop
addr16
mov
cmp
loope
outsb
jmp
clc
mov
imul
fcoml
sbb
pop
xchg
jl
ja
adc
jbe
insb
je
adc
jns
pop
jno
add
xchg
int
aad
mov
lret
inc
loopne
xor
jae
popf
daa
out
mov
mov
cs
scas
mov
pop
shlb
and
test
shl
sub
outsb
js
les
sahf
lock
insl
add
lods
mov
stc
push
mov
out
stc
aam
xchg
push
push
testb
dec
lea
mov
add
into
pusha
out
test
xlat
mov
sbb
and
pop
mov
cwtl
jne
push
dec
test
pushf
xlat
xor
dec
xor
in
mov
and
jbe
stos
xchg
movsl
mov
mov
jb
iret
mov
mov
repnz
xchg
std
int
xchg
lds
pop
fmull
shll
inc
shrb
std
out
inc
sbb
arpl
sbb
pop
pop
pop
test
xchg
insl
pusha
bound
test
ljmp
dec
adc
test
bnd
dec
inc
add
out
popf
cs
aam
mov
push
inc
das
je
pushf
scas
xchg
or
mov
int
mov
pop
cmpsb
call
repnz
shr
std
mov
outsb
adc
xor
adc
xor
jne
push
rcrb
add
mov
bound
movsl
addb
lahf
fmuls
aad
mov
ljmp
adc
add
pop
dec
xor
stos
nopl
fadds
xor
test
adc
pop
xor
adc
imul
ja
push
fnsave
loope
insb
repz
in
mov
push
je
xor
movsb
sbb
adc
into
adc
or
insb
cs
insb
in
nop
in
clc
out
add
sahf
jge
mov
push
dec
daa
aas
or
and
sbb
cmp
fsubrs
xchg
sub
mov
inc
jne
adc
fwait
xchg
movsl
push
mov
mov
jno
mov
mov
cmpsb
cwtl
in
imul
mov
sahf
xchg
shlb
repnz
ret
jns
mov
xchg
dec
cmp
sbb
add
push
xchg
pop
cmp
adc
adc
inc
and
cmp
pop
jb
dec
lret
lea
push
cmp
inc
jp
cmp
repz
mov
and
sbb
or
sub
pop
inc
lea
dec
adc
xor
ds
pusha
sub
xchg
cmp
jo
sbb
jmp
shll
add
les
cmpsb
fwait
inc
add
in
sub
sub
outsb
incb
movsb
jmp
mov
xor
sub
push
nop
fists
addr16
push
fidivrs
repz
mov
add
imulb
push
in
jbe
mov
add
popf
pop
sbb
lods
rorl
sub
mov
stos
xor
fidivs
add
ret
aas
imul
and
push
inc
roll
or
cmp
icebp
sbb
pop
push
mov
aaa
outsl
aas
into
loopne
test
dec
mov
stos
js
dec
lods
lcall
dec
aam
and
pushf
sub
pop
mov
cwtl
mov
andb
stc
or
popf
cld
getsec
jb
rol
and
push
pop
scas
jge
mov
das
mov
and
ret
stos
into
mov
pop
test
test
add
mov
call
adc
xlat
lret
adc
fdivr
add
dec
or
and
sub
divb
cmc
mov
add
dec
xchg
int
bound
sbb
push
mov
jae
cs
aam
cmp
fadds
sbbl
cmp
cmp
rcrl
cmp
push
push
es
inc
xchg
out
mov
or
push
popa
pop
sub
repz
fisubrl
add
xchg
cmp
stc
ss
scas
sarl
negb
and
xor
jmp
lods
jne
pop
push
popf
popf
jb
fisttpl
es
fsubrs
rclb
mov
sub
sub
int
inc
inc
int3
inc
ss
sbb
loop
orl
and
and
dec
mov
add
and
push
inc
sbb
or
ja
mov
xor
pop
sub
sti
inc
cld
xor
sub
inc
jb
jne
sbb
cmp
enter
sub
inc
sbb
int
shll
stos
xchg
imul
data16
cmp
lods
push
std
mov
jge
inc
adc
nop
xor
ss
xchg
cmpsb
xchg
add
ficomps
inc
pop
sbb
stos
nop
sub
test
add
fs
inc
push
enter
jae
cmc
and
pop
sahf
frstor
xor
imul
adc
jge
pop
mov
cltd
test
add
push
push
inc
mov
fsubl
inc
dec
mov
repz
pushf
push
or
ds
cmpsl
jno
jp
pop
xchg
mov
add
movsb
mov
addr16
cld
pop
loopne
mov
std
aas
cmp
das
sub
fmul
sbb
fsubs
xor
loopne
faddl
bound
bound
mov
in
fwait
inc
pop
sbb
stos
inc
pop
mov
pop
mov
adc
lock
cltd
jno
adc
test
shll
mov
pop
xchg
mov
add
mov
push
mov
push
mov
negl
out
lock
lret
cmpsl
push
dec
inc
dec
ja
xor
fldl
mov
mov
mov
pop
outsb
xchg
enter
adc
push
pop
fcomi
das
fbstp
inc
xchg
jp
fnstsw
xor
lcall
sar
outsl
or
fidivrs
out
ja
iret
test
shrb
rorl
pop
and
fwait
and
outsl
in
repnz
cmp
inc
push
cld
pop
xbegin
or
push
xor
rorb
je
test
or
adc
jp
jbe
mov
xor
mov
cld
cmp
xchg
cmp
test
jnp
cld
or
mov
adc
or
sub
leave
les
enter
pop
sar
add
xor
xchg
popf
popf
rcrl
imul
xlat
jge
push
mov
xlat
std
sbb
out
stos
mov
or
inc
js
stos
or
push
cmp
mov
inc
add
mov
jl
jl
cwtl
push
ds
mov
dec
mov
rcrl
decb
mov
dec
addr16
sbb
jnp
pop
jae
ret
mov
jp
lods
adc
adc
sub
push
into
dec
mov
adc
sar
out
inc
lods
movsb
mov
xor
pmullw
es
add
jmp
xlat
pop
push
pop
je
push
jns
xchg
mov
aas
add
or
cli
xor
stos
push
insb
dec
mov
test
push
call
outsb
ror
cmpb
add
cmp
test
xchg
mov
das
jnp
lea
cmp
mov
and
cmp
fisttpll
xchg
mov
lret
les
push
lods
jae
arpl
jmp
adc
and
push
mov
mov
xchg
xlat
outsb
cmp
cmpsb
rcrb
push
popf
dec
push
pop
add
call
add
movsb
xor
cmp
mov
cmpsb
pop
lcall
out
bound
mov
cld
pop
shll
jne
and
adc
sub
add
inc
mov
mov
cmpsl
loope
shl
inc
movsb
loope
ja
pop
jle
mov
fstpl
cmpsb
xchg
and
divl
inc
xor
in
hlt
cmp
pop
adc
rcr
dec
fildll
sub
stos
mov
push
fwait
test
and
adc
pop
sub
pop
movsl
aam
and
jg
pusha
push
stos
jno
pop
ds
pop
lcall
test
sub
int
sbb
pop
mov
sarl
or
popf
in
out
mov
push
popf
jp
push
and
pusha
pop
pop
imul
les
inc
mov
popf
addr16
push
outsb
pop
jmp
shl
aas
sub
and
fwait
loope,pt
pop
sub
addr16
bound
lcall
xchg
sti
xchg
sub
dec
mov
lock
add
insb
pusha
fdivs
adc
js
in
jl
xor
add
push
mov
test
add
adc
aaa
fcoms
and
mov
divb
nop
test
add
cs
into
stos
sbb
sti
loope
mov
aaa
negl
xlat
ret
dec
mov
jmp
dec
adc
repnz
pusha
ds
add
loopne
arpl
sbb
pop
in
mov
scas
inc
js
push
addr16
xor
daa
movsb
in
fldcw
xchg
xchg
push
xor
sub
movsl
mov
jp
lea
sti
pop
sbb
aas
je
mov
stos
pop
dec
and
clc
stos
sti
popa
popa
mov
pop
inc
les
and
xor
jl
stos
xchg
sbb
sub
out
ficoms
pop
fmull
pop
cmp
add
sahf
fsubs
lea
mov
ja
jecxz
gs
je
fneni(8087
outsl
jp
std
cmpsb
sbb
push
adc
or
pushl
mov
ficoms
repnz
push
push
jmp
push
fld
sbb
jb
cli
sbb
cwtl
or
insb
and
imul
push
outsb
jle
sahf
pop
adc
lds
pop
xor
test
xchg
mov
pop
mov
mov
xchg
push
gs
push
add
clc
shrl
sub
lods
cli
pop
pop
dec
scas
jle
add
mov
mov
es
in
div
pop
enter
imulb
rorb
test
scas
loope
lods
pop
aad
bound
lods
cmp
aam
icebp
mov
jno
movsb
push
jo
pop
cmp
push
sbb
and
pushf
sub
shlb
push
xor
mov
mov
sub
or
aas
aaa
xchg
test
push
fwait
stos
dec
inc
call
jns
dec
xchg
lret
int3
push
out
push
sub
xor
or
mov
xchg
cli
xchg
mov
dec
push
aam
incb
fxch
xor
loope
subb
loopne
movsb
cltd
cltd
push
sub
sbb
les
insl
sbb
cs
mov
insb
mov
sub
fsubl
adc
jle
dec
shlb
outsl
sub
inc
shlb
loope
std
insb
loopne
jne
out
lcall
stc
pop
cli
mov
testb
xor
out
dec
cs
mov
ret
pusha
test
rolb
fstl
adc
add
test
push
lret
sti
dec
jno
cmp
add
addr16
push
xor
ret
cmp
and
test
pop
ja
cwtl
add
movsb
sub
mov
pop
pop
jmp
lcall
pop
aas
cld
movl
mov
jmp
xor
sbb
xchg
jmp
insl
pop
jmp
in
adc
cltd
fsubr
dec
add
lcall
in
inc
inc
and
fnsave
xchg
aam
ret
xchg
scas
push
push
sti
push
mov
scas
mov
add
and
and
push
cs
adc
pop
mov
loopne
shll
in
int
jbe
lcall
jecxz
xchg
sbb
adc
addb
add
pop
stos
lret
sbb
push
fbld
pop
out
cmp
imul
xchg
je
adc
inc
int
addr16
arpl
pusha
test
push
shl
stc
int3
mov
ret
sti
or
cmp
aaa
mov
add
mov
mov
adc
sbb
in
cmpsb
sub
inc
mov
adc
sbb
inc
mov
inc
lods
cmp
jo
imul
sbb
mov
daa
mov
out
cmp
mov
dec
and
cmc
xor
pop
stc
daa
or
hlt
lret
push
notl
fcoms
lods
lods
repz
cs
cli
nop
in
mov
sub
lret
inc
xchg
xor
aam
insb
in
adc
mov
mov
test
pop
sbb
hlt
mov
frstor
jmp
pop
mov
xchg
imul
sub
imul
xor
push
rol
test
jecxz
sbb
rolb
lock
mov
pop
xor
jmp
inc
cmp
std
mov
loop
push
call
out
xorb
push
xor
sbb
out
rclb
testl
push
fstpl
jl
push
push
int3
icebp
jnp
jmp
and
mov
mov
dec
clc
cwtl
outsl
loopne
test
jecxz
ljmp
mov
leave
pop
ss
fnstsw
fwait
push
dec
aas
idivb
pop
dec
mov
sarl
fstp
mov
insl
mov
push
or
add
xchg
rcrb
rcl
daa
mov
lods
rolb
push
cwtl
xchg
mov
cmovno
daa
inc
jmp
mov
add
imul
jecxz
pop
pop
jmp
lods
mov
insb
push
or
or
shll
dec
fistpl
dec
lret
mov
jecxz
dec
imul
xchg
fsubr
mov
lods
pop
mov
sub
mov
lods
rolb
test
cmp
movsl
out
filds
inc
jbe
mov
xchg
outsl
addr16
nop
dec
fs
std
orb
xchg
incl
loopne
lods
mov
in
adc
xlat
bound
jl
in
loopne
test
xlat
pop
add
mov
dec
mov
xchg
rclb
inc
in
mov
stos
or
notb
mov
icebp
mov
sub
pop
popf
sbb
and
fmul
xchg
mov
jl
adc
ja
cmp
mov
lea
pushl
rorl
jae
cld
mov
mov
scas
mov
inc
dec
or
push
sub
fwait
push
push
push
dec
aaa
testb
adc
jmp
xor
lds
insl
mov
mov
lods
xchg
loop
lea
sub
cmpsb
scas
aaa
push
push
pop
jb
xor
ss
mov
pop
dec
or
inc
mov
push
dec
adc
jb
stos
xlat
dec
push
pop
iret
mov
stos
cmp
fcomp
mov
mov
cmp
fstps
dec
push
push
mov
movsb
xor
in
cmp
sbb
adc
and
fisttpl
xchg
xchg
xchg
call
out
in
mov
mov
icebp
mov
jno
outsl
or
xchg
add
push
inc
pop
push
push
jnp
test
sub
test
cmpsl
inc
jnp
sbb
pop
push
xor
cmp
sub
add
fimuls
sbb
test
je
cmpsl
mov
sub
pop
push
xchg
sub
sub
aaa
sub
inc
in
rorb
pusha
sub
inc
clc
je
es
push
test
pusha
in
ret
sub
cmpsb
das
aad
enter
ror
sub
aam
scas
dec
xchg
mov
jnp
jno
pop
es
bnd
and
ret
shll
mov
sti
test
imul
mov
push
jae
fnsave
xorl
out
ss
imul
sub
xor
jae
in
lock
in
and
lret
inc
and
clc
jmp
cmpsl
mov
test
gs
push
jo
nop
cmp
xlat
leave
mov
test
addb
stos
sub
add
or
pop
pop
and
out
mov
in
push
jle
inc
ficoml
popa
dec
mov
mov
cmp
jo
ds
aad
mov
jns
cmc
es
dec
stc
in
jmp
add
lods
mov
movb
cld
fcompl
push
mov
cmp
mov
jno
sahf
rcrb
fnstsw
pop
pop
stc
outsb
out
les
in
cld
scas
in
stos
leave
cltd
sub
daa
stos
cmp
push
xchg
push
inc
daa
repnz
or
or
mov
out
cwtl
jge
ds
or
jp
mov
inc
je
jae
push
arpl
clc
test
int3
jp
and
or
add
fistl
mov
je
fs
rorb
and
mov
mov
ds
shr
int3
dec
shlb
icebp
sbb
dec
pop
sub
adc
push
xor
jl,pn
loop
jecxz
xchg
add
xor
aaa
das
jge
inc
out
mov
and
insl
into
add
push
mov
negb
xor
andb
cmpsb
sub
mov
arpl
cmp
xor
jno
iret
mov
jno
mov
and
or
out
dec
add
pop
popa
popa
mov
mov
iret
xchg
cmp
sbb
daa
push
mov
sub
pop
inc
pop
dec
dec
fistps
push
pop
fcomps
fists
and
das
jl
push
into
add
xchg
out
mov
dec
jl
loop
jo
push
js
and
je
int3
add
add
fstpt
je
pop
enter
cmpsl
mov
test
lahf
stc
shrl
jo,pt
jno
cmp
mov
mov
cmp
xor
dec
std
and
or
cmp
leave
mov
rcl
cld
pop
pop
push
pop
icebp
cli
test
mov
jge
pop
xchg
repz
outsb
xchg
push
arpl
movsb
dec
xor
test
inc
loopne
out
outsb
mov
and
iret
aam
push
sub
ds
pop
and
out
mov
cmpsl
out
adc
mov
mov
sbb
mov
mov
mov
addr16
xchg
shrl
out
lock
dec
push
sbb
mov
test
add
sub
mov
cli
rolb
addr16
mov
pop
ss
mov
xchg
pop
dec
or
jge
imul
out
xor
push
iret
xor
lahf
roll
xchg
inc
inc
lahf
jae
pop
fdivrs
repz
test
stos
iret
add
ret
push
in
pop
movsl
jb
popa
xor
jb
and
add
dec
mov
or
dec
push
mov
xchg
int3
sub
movsb
lods
dec
insl
xor
inc
lret
outsl
cmp
push
lahf
xchg
fsubrs
dec
in
out
xor
or
cmp
fisttpl
add
pop
dec
in
int3
mov
stos
out
xchg
in
jg
xor
push
pop
mov
test
or
mov
loope
outsl
std
jmp
or
cmp
pop
xchg
jo
dec
lret
pushf
test
cli
and
lcall
stos
sub
loope
rcr
lret
fs
xor
test
fldl
or
push
std
xchg
ret
imul
shll
jne
jp
sbb
cmp
stos
adc
lea
dec
xchg
mov
mov
mov
xchg
mov
mov
sub
jb
mov
aam
leave
repz
pop
lret
lds
xor
sbb
enter
mov
adc
and
insl
cmpsl
dec
je
or
imul
pop
fucomp
movsl
cmp
xchg
inc
mov
imul
enter
repnz
mov
shlb
pop
cmp
cltd
jae
lock
xlat
in
in
btr
ja
cmc
pop
mov
or
mov
jmp
ret
mov
enter
and
ret
fisttps
dec
sub
xchg
push
add
push
jg
or
inc
outsb
adc
out
fs
dec
pop
ret
and
lock
cwtl
scas
sbb
add
xchg
arpl
ret
push
jecxz
mov
daa
or
ljmp
addr16
adc
sub
dec
pop
mov
push
in
jo
aaa
in
bound
lcall
pop
xchg
xor
mov
sub
popf
mov
fists
hlt
mov
lret
ffree
jecxz
movl
add
ja
lods
cmp
xor
push
push
not
push
addr16
popf
roll
dec
aaa
out
rcl
fsubrs
inc
repnz
pusha
dec
lcall
out
mov
cmp
enter
pop
shlb
jl
cs
jno
mov
xchg
jb,pn
or
fdiv
jp
cld
inc
pushf
xchg
ret
jle
rclb
pushf
iret
jb
and
into
aad
pushf
int3
push
out
inc
jge
jg
outsl
mov
repz
push
xchg
sbb
in
add
mov
adc
jl
mov
stos
jb
test
push
xor
adc
add
push
mov
xchg
pop
and
cmp
sahf
sahf
push
aam
insb
lods
cs
dec
lock
aas
cmpsb
out
add
in
inc
outsb
adc
ds
mov
or
mov
dec
xchg
pop
cld
sub
test
bound
push
rcr
movsb
int3
and
jl
daa
test
mov
stc
push
and
ja
cmp
out
bound
hlt
xor
mov
cmp
call
or
loop
adc
xchg
pushf
movsb
stos
lock
mov
xor
cwtl
dec
movsb
mov
fwait
bswap
es
inc
imul
sti
pop
mov
mov
pop
dec
push
sbb
mov
mov
add
mov
fimull
push
jne
ja
xchg
jbe
popaw
scas
cltd
push
cs
loop
mov
or
jmp
ljmp
bound
mov
or
lret
mov
add
dec
jne
loopne
sub
and
stc
movsl
add
pushf
out
push
inc
or
jo
and
lea
lods
int
or
cmpsl
push
dec
pop
popa
lods
add
inc
dec
jnp
ficoms
mov
sub
inc
sub
xchg
insb
fnstcw
jns
ds
sbb
xchg
enter
mov
add
push
push
inc
mov
sbbb
xchg
mov
test
dec
xor
mov
mov
jmp
push
ss
push
in
or
sbb
xor
stos
or
xchg
mov
fs
or
xor
xchg
cli
je
and
fnstenv
or
out
fcmovu
xchg
in
mov
pop
push
dec
sbbl
fiaddl
lahf
fwait
dec
mov
xchg
pop
rorl
and
mov
movsb
pop
xchg
test
mov
or
inc
xor
adc
adc
cltd
jne
incb
mov
dec
clc
jnp
sub
cld
aaa
xchg
test
add
iret
adc
inc
xchg
cmp
inc
arpl
test
jge
fnsave
jge
int3
mov
add
cmp
jbe
lock
icebp
jo
leave
test
cmc
imul
and
stos
push
js
and
push
adc
icebp
push
sbbl
filds
pop
ficoml
mov
xor
push
out
inc
lret
into
and
inc
les
mov
pop
test
cli
xchg
jbe
or
ret
pop
mov
dec
mov
jns
in
aad
sbb
nop
jo
cmp
repz
cmp
nop
inc
jnp
inc
push
xchg
fadd
jno
xor
jmp
into
jl
mov
aaa
out
mov
lcall
and
imul
pop
lcall
pop
pop
ret
jle
sub
and
xchg
inc
jge
xlat
lahf
bound
pop
pop
mov
es
sahf
adc
ror
out
rclb
xchg
jmp
mov
popl
cmp
xchg
adc
jns
jno
cmp
loop
lret
mov
mov
pushf
in
loopne
rcl
inc
mov
sbb
test
das
pop
mov
in
out
loop
pop
cli
sub
test
movsl
addr16
pop
inc
and
inc
mov
push
out
inc
mov
mov
mov
jg
or
lock
out
jbe
imul
cmpl
pushf
jno
out
rcr
lahf
inc
sub
xchg
push
dec
mov
sub
xorb
popl
and
setg
fisubl
xchg
sahf
into
xchg
jge
push
xchg
lahf
push
in
aas
movsl
scas
scas
jle
enter
jp
in
iret
fidivs
lods
xorb
imul
es
pushf
pop
and
pop
or
in
ret
movsl
add
sarb
pop
add
push
test
out
sbb
fs
mov
lret
cmpsb
dec
jl
out
clc
mov
xor
mov
add
xor
test
xor
fcoml
lods
lock
push
mov
push
inc
std
sbb
mov
clc
pop
lds
push
ss
mov
cmp
test
movsb
adc
sti
mov
pop
inc
cmp
push
xor
das
or
sbb
xor
in
pusha
lods
pop
add
or
add
inc
cli
xchg
and
fnstsw
bt
es
js
test
cmp
out
sarl
std
mov
cmp
jmp
mov
repnz
push
mov
cwtl
cld
pop
inc
jmp
shlw
out
loop
imulb
inc
and
roll
sub
jecxz
rorb
lret
add
mov
mov
call
xchg
push
inc
into
jb
dec
enter
xor
aas
xor
aad
jecxz
adc
cmp
pop
scas
outsl
dec
testl
push
push
mov
dec
jbe
or
bound
push
xor
push
mov
and
cmpl
add
add
rolb
mov
dec
fists
mov
cmpsl
push
ficompl
andl
push
xlat
push
dec
cwtl
mov
mov
pop
pop
mov
ds
int3
stos
cli
imul
lds
or
xor
dec
lea
mov
inc
inc
scas
shrb
ret
cld
ret
xchg
dec
fstpt
xor
inc
sarb
pop
scas
adc
cmp
iret
std
inc
dec
sub
aaa
subb
cld
cld
pushf
negb
push
into
sbb
in
xchg
inc
lock
mov
mov
fisubrl
call
add
mov
jae
clc
xor
fmull
pop
xlat
cmpsl
dec
fistps
mov
pushf
stos
sbb
push
out
inc
xor
inc
cld
sbb
mov
add
lahf
rclb
or
mov
mov
mov
sarl
push
push
bound
mov
mov
out
sahf
icebp
nop
test
push
inc
mov
out
out
xorb
mov
popa
fsubr
and
insb
add
or
pop
idiv
xor
or
vorps
and
int3
push
pop
push
fimuls
or
pop
je
jl
mov
push
sti
mov
adc
adc
jecxz
lods
cmp
aad
addr16
jb
mov
loopne
fnsave
xchg
xchg
mov
push
out
ja
and
daa
test
jns
sbb
sarb
pop
xchg
adc
cmc
outsl
xchg
pop
xlat
nop
mov
cmp
fdivrs
push
mov
jmp
movsl
mov
cmp
cmpsl
leave
sbb
mov
sar
movsb
int3
push
pop
xchg
pop
dec
mov
sub
test
mov
push
cltd
push
testl
into
int
dec
add
cmpsl
push
rsqrtps
and
dec
mov
out
jno
insb
pop
fwait
inc
sahf
jp
pop
xorb
movsb
scas
ret
pop
loope
jo
mov
jmp
and
mov
stos
in
and
jbe
xor
mov
mov
js
inc
jl
adc
inc
es
push
inc
loop
push
mov
push
add
mov
mov
inc
clc
cmp
push
push
sub
cltd
addr16
or
inc
incl
pusha
in
pop
jne
icebp
xlat
pushf
or
pop
sarl
leave
pop
sbb
jns
pop
cli
sti
and
inc
mov
sub
lret
rcr
xlat
test
pop
inc
in
or
movsb
mov
or
in
or
js
out
jno
cmp
add
adc
mov
jmp
xchg
cmp
stos
sub
pop
testb
orb
mov
xchg
sub
cmp
or
dec
pop
push
mov
and
adcb
push
add
pop
fwait
lods
mov
pop
and
fdivr
arpl
push
sbb
movsl
xor
ss
sub
push
rclb
add
cmpsb
imul
test
push
pop
sbbb
inc
lahf
push
sbb
xchg
mov
dec
push
sub
imul
mov
lret
neg
pusha
jne
push
and
cmp
inc
ja
pop
test
pop
pusha
sarl
stc
push
xchg
jo
pop
shrb
pop
sti
lahf
inc
mov
mov
repz
outsb
enter
or
in
xchg
imul
addr16
aad
xlat
test
jge
adc
jle
ret
mov
adc
dec
out
lods
faddl
xchg
adc
xchg
aaa
out
mov
std
ja
xchg
and
outsl
pop
hlt
das
sarb
iret
mov
test
pop
pop
call
outsl
add
sub
int3
inc
mov
or
xlat
stc
movsb
stos
or
pop
movsb
cmovge
or
sub
movsb
shll
sbb
ljmp
int3
repnz
mov
inc
movsb
jge
or
popf
call
xor
pop
dec
pop
fisubl
ss
xchg
fimull
rclb
push
mov
into
lahf
fs
lock
sbbl
fwait
into
push
pop
shl
leave
dec
xor
mov
psraw
pop
and
aam
out
inc
jno
inc
xor
adc
lret
add
cli
icebp
arpl
jb
inc
adc
pop
scas
push
adc
popa
mov
cmp
movl
jo
call
mov
mov
push
push
shll
pop
jo
fmul
xchg
dec
clc
clc
inc
insl
pop
pop
sti
or
aaa
or
dec
inc
leave
aad
sub
or
imul
jg
sub
inc
gs
stos
xchg
push
adc
sub
add
jae
outsl
cmp
add
and
adc
add
jmp
aam
or
andb
and
lahf
outsb
loope
mov
shrl
or
push
movsb
sbb
rcrl
dec
jmp
iret
cld
mov
adc
pop
outsw
loop
or
mov
dec
mov
popa
sub
push
add
mov
insb
jo
mov
movsb
jnp
rcr
xchg
test
mov
adc
fistps
cmpl
out
test
imul
or
ret
push
ss
inc
and
jnp
popa
hlt
inc
mov
or
mov
rcll
repz
mov
xchg
pop
incl
iret
fs
pop
fdivrs
cs
ficomps
pop
pop
mov
adc
or
insb
inc
mov
add
cld
dec
sti
mov
testl
out
lds
mov
push
lret
rcrb
inc
push
jo
dec
cwtl
add
mov
in
shlb
daa
icebp
push
sbb
sbb
out
lea
cmp
sbb
fcomp
bound
ret
dec
sbb
add
in
or
inc
inc
sub
addr16
mov
iret
sbb
cld
adc
and
lcall
das
movsb
inc
pop
xchg
push
adc
mov
jbe
shlb
adc
int
and
mov
jecxz
mov
lahf
inc
lret
cli
faddl
add
repz
mov
in
xor
xorb
add
sub
dec
popf
cmp
or
or
sbb
jnp
call
in
push
xlat
cmp
jmp
lds
call
je
add
xor
ds
leave
aas
loop
mov
test
lahf
test
sbb
cmc
xchg
mov
cmp
ret
aam
cmp
bound
adc
jae
inc
mov
lahf
add
sbbb
mov
flds
ror
ljmp
das
ljmp
les
sbb
mov
shll
je
adc
sub
sbb
adc
xchg
inc
pop
in
jecxz
mov
push
sbb
nop
adc
add
mov
addr16
int3
sub
cmp
sahf
and
push
ja
repnz
stos
inc
sbb
fucomi
test
pop
and
mov
lods
jae
sbb
inc
jle
and
adc
or
fs
pop
rolb
or
push
rcl
cs
scas
adc
addl
addb
sbb
and
fucomp
adcb
nop
cltd
mov
sub
push
stos
lret
push
or
mov
pop
push
xor
mov
xchg
jbe
mov
loopne
push
xchg
repnz
adc
inc
out
into
mov
fisubl
pop
jecxz
sub
jecxz
push
in
inc
pop
divl
test
dec
push
outsl
sub
pop
rcrl
dec
push
jnp
xchg
mov
jbe
test
repnz
dec
xchg
sbb
pop
xlat
sahf
mov
sub
mov
pop
xchg
pop
xor
adc
lret
inc
sbb
imulb
adc
aad
xchg
jae
ja
pushf
inc
xchg
xchg
ja
pusha
and
push
jnp
cmpsl
fnstenv
out
int3
add
sub
mov
test
mov
pop
lods
sbb
dec
mov
js
int3
push
jbe
scas
imul
into
cmp
mov
les
mov
cmp
fstl
inc
fwait
sub
pop
push
mov
sahf
sbb
mov
in
stos
add
lods
mov
nop
stos
loop
mov
jne
in
int
dec
mov
mov
icebp
add
mov
dec
xchg
fsubs
xorl
movsb
test
sub
aam
pop
xchg
push
dec
fidivrl
iret
loopne
jbe
leave
inc
dec
in
xor
popa
pusha
les
in
insl
ret
push
adc
pop
cmp
mov
cwtl
mov
mov
and
lods
xchg
outsl
mov
jge
das
lods
es
lea
icebp
aam
scas
fucomip
push
xchg
ror
aaa
mov
aas
xor
outsl
ljmp
scas
mov
push
sbb
fsubl
iret
popf
inc
jl
cmpsl
into
mov
fwait
lcall
mov
fwait
push
rorb
mov
mov
bound
sahf
in
push
cltd
dec
lahf
rclb
enter
loope
add
inc
stc
outsb
xchg
movsl
jbe
ljmp
mov
inc
lock
dec
ja
movsl
fs
lea
jmp
bound
in
jmp
inc
add
cwtl
inc
jg
out
fxsave
imul
mov
shrl
sub
xchg
clc
leave
sahf
rolb
mov
rclb
xor
leave
dec
cmpsl
sub
jl
mov
mov
push
ss
fidivrl
jae
push
jnp
jl
incl
jne
lcall
jmp
jae
aad
mov
inc
pop
leave
lock
daa
lock
lahf
mov
insb
jbe
adc
pushf
xor
in
mov
mov
hlt
movsl
adc
ds
pushf
sub
mov
inc
pop
jno
mov
dec
pop
mov
mov
pusha
insl
pop
pop
inc
clc
andb
push
jnp
or
mov
inc
xor
insb
mov
jae
mov
mov
push
popf
out
inc
dec
cmpsb
xchg
jb
and
pop
int3
rcl
mov
push
jl
sti
pop
out
sbb
repz
bswap
push
stos
mov
sbb
sti
mov
mov
adc
insb
and
jns
in
mov
lahf
push
jl
in
mov
cs
jge
sub
movsb
or
lods
dec
add
pop
ret
and
mov
xchg
push
or
std
lahf
cmc
pusha
cmpsl
mov
lahf
out
mov
sbb
into
adc
lods
fnstcw
dec
xor
mov
jbe,pn
std
push
aas
jg
adc
jmp
sti
jg
or
fsts
fdivs
cmp
movl
adc
sar
icebp
adc
lock
lret
lea
lcall
xchg
fstpt
pop
cmp
scas
xchg
sbb
jb
nop
pop
mov
lds
into
mov
lods
in
mov
and
push
cmpsl
lcall
fisubrl
pop
add
mov
lret
mov
jo
ljmp
into
adc
add
loop
lret
add
inc
pop
lret
mov
nop
fldcw
gs
jbe
xor
inc
push
or
lcall
fistl
or
in
and
outsl
ljmp
mov
test
adc
jmp
sbb
cmpsl
repnz
bound
pop
push
pop
mov
pop
mov
in
xor
inc
mov
out
dec
jo
aam
xchg
sub
push
push
sbb
aaa
push
int3
std
mov
xlat
and
lahf
shrl
push
jecxz
out
dec
dec
jl
mov
insb
cmp
fidivrl
mov
sbb
jmp
dec
xor
cmc
jb
sbb
sbb
out
les
fisubrs
packssdw
cmp
or
fildl
fisubrs
and
xor
push
stc
inc
mov
sub
sub
ja
out
or
mov
cwtl
imul
imul
roll
adc
pop
ret
and
xor
icebp
push
push
andl
mov
das
push
cmp
test
lods
cmp
pop
shlb
imul
add
jno
out
jge
mov
mov
mov
mov
out
aam
sbbb
and
cmp
pusha
push
out
push
mov
xlat
mov
fwait
pop
mov
and
mov
jne
mov
fiaddl
cmpsb
and
cmp
orl
enter
jo
jmp
leave
mov
mov
mov
inc
cli
jnp
push
in
fwait
mov
lahf
cwtl
inc
js
bound
lds
push
popf
inc
inc
rcr
ret
aaa
mov
dec
inc
call
cmpsl
jnp
negb
adc
cmp
dec
loop
xor
insb
aas
rcr
aaa
and
adc
subb
push
test
inc
lret
jmp
clc
out
sbb
push
pushf
nop
rep
inc
fdivl
jne
les
repnz
mov
cmp
sbb
xor
leave
mov
shlb
jb
es
mov
stos
clc
cli
ss
jl
xor
add
mov
sub
xchg
xor
dec
call
jmp
and
adc
sub
mov
enter
cmpsb
rolb
push
fistpll
jae
pop
jg
jg
mov
sub
testb
jmp
dec
fidivrl
mov
int3
adc
aaa
adc
jp
inc
jg
int3
add
int
xchg
mov
enter
jl
fbld
dec
mov
mov
cmpsb
xor
jge
sti
cmc
inc
idiv
cmp
cld
daa
test
int
jg
addl
or
movsb
and
idivl
das
clc
scas
add
inc
cmp
cmpsb
scas
call
sti
jp
sub
dec
add
mov
mov
aam
jb
rcll
cmp
xchg
lods
dec
xchg
ds
lret
cwtl
rorl
pop
mov
inc
xorb
cli
lock
cs
mov
jae
fcmove
sub
stos
ja
pop
cmp
inc
mov
sbb
mov
dec
adc
adc
call
and
out
push
xor
and
mov
or
dec
cmp
push
add
enter
push
lahf
sbb
cmp
ror
fdivl
dec
push
cmc
mov
jmp
cmp
pop
insl
repz
inc
or
mov
mov
dec
or
xor
jmp
lock
cmp
test
jo
sub
jb
dec
xor
mov
popa
xchg
xchg
jae
repnz
adc
pushf
xchg
aam
pop
out
out
push
xor
in
fdivl
sub
add
rol
and
cmpsb
loop
mov
cmp
mov
sbbb
sarl
fidivl
enter
inc
iret
push
ret
xchg
or
in
hlt
cmp
mov
rorl
addr16
jp
pop
call
or
daa
or
mov
int
jl
test
prefetch
cmp
adc
jbe
subl
rorb
popf
xor
fcmovne
push
insl
and
xchg
push
mov
pushf
paddw
mov
jle
scas
push
aad
or
mov
push
push
int
adc
xor
insb
or
push
mov
mov
ja
cmp
sbb
cmp
cmp
push
sub
not
cli
fistpll
or
mull
sub
mov
or
lods
lds
mov
inc
rolb
or
cmp
cmpsb
bound
iret
jl
adc
pop
add
xor
dec
out
cmp
xlat
mov
mov
cmpsb
push
scas
sub
call
push
popf
jae
mov
int3
popf
gs
shrb
ja
push
mov
inc
dec
in
decb
xor
test
mov
lds
mov
repnz
or
mov
lock
mov
mov
outsl
dec
push
loopne
push
adcb
adc
std
ret
je
stc
mov
add
mov
das
insb
incb
ljmp
mov
aas
and
int
pop
loopne
cmp
mov
pusha
rol
movsb
mov
cmp
outsl
or
jbe
in
movsb
or
push
dec
sub
ds
adc
pop
xchg
iret
lods
lods
or
in
add
fldcw
jp
cmp
sbb
sbb
out
mov
jb
lock
insb
or
sahf
pop
jnp
inc
push
sub
es
mov
xlat
sub
fldl
addb
xchg
jo
xor
push
loope
insl
xor
pop
sahf
sub
add
aad
cmp
bound
and
movsb
pop
lahf
movb
and
arpl
insb
lods
xchg
adc
cs
shll
sub
mov
mov
scas
cmpl
lods
xchg
add
sbbb
cmp
stos
int
in
mov
bound
xor
daa
aaa
xlat
jb
iret
js
loopne
sarb
scas
movsl
outsl
mov
pop
push
pop
jo
fwait
adc
jg
mov
inc
int3
push
jg
jg
daa
or
or
daa
cs
iret
and
inc
mov
pop
rol
inc
xchg
fs
shrb
cmp
cmp
mov
mov
lret
jno
insl
cli
push
fldenv
cli
xlat
mov
jnp
fistpll
leave
mov
or
repnz
insb
aam
movsl
out
dec
or
mov
test
cli
icebp
sbb
pop
pushl
push
ficoms
fmull
stos
fidivrs
xchg
loopne
fwait
inc
cmpsl
sbb
jae
out
jb
cmpb
mull
insl
ficoms
push
in
inc
cmp
out
mov
xchg
out
mov
mov
push
sbbl
xchg
loopne
xor
inc
and
xchg
mov
xchg
lds
and
in
test
sub
js
mov
out
dec
push
repnz
jne
repnz
or
int3
cmpsb
andb
jmp
shlb
pusha
mov
xor
rcrl
out
rclb
nop
sbb
push
push
inc
shr
push
inc
cmc
jecxz
and
mov
jae
test
jae
sti
fldt
mov
lock
cmp
or
fldpi
scas
adc
je
cmpsl
iret
es
ret
inc
lret
aas
xor
sbb
mov
jo
or
pop
arpl
and
insb
jecxz
scas
imull
mov
fidivrl
adc
sbb
ss
arpl
adc
dec
xor
test
mov
jl
in
int3
mov
mov
jp
mov
adc
in
add
add
jbe
add
sub
and
roll
les
ret
xchg
cmp
mov
and
or
lds
xor
in
shll
stos
shll
into
cmp
add
push
insb
mov
jb
and
xchg
sbb
adc
push
dec
xor
or
pop
mov
push
mov
pop
mov
daa
popa
ja
push
pop
adc
pop
and
mov
add
daa
cli
fistps
or
add
cmp
jg
mov
lret
lock
and
loopne
dec
jo
mov
aaa
mov
mov
insb
cmp
xlat
mov
aam
in
and
inc
mov
arpl
je
fldl
sti
cmpsb
sbb
mov
cmc
xchg
lods
dec
adc
push
lret
scas
shl
in
cmp
mov
test
xchg
repz
xchg
std
adc
lock
adc
xchg
mov
sbb
cwtl
imul
rcr
and
fsubrs
pop
imul
push
add
adc
lds
int3
lret
test
hlt
xor
sub
push
sub
insl
stos
jns
das
std
jns
mov
xor
or
fisttps
xchg
cmp
pop
sahf
in
je
rcrl
fwait
movsl
push
and
shll
xor
lahf
aaa
push
ljmp
adc
aam
nop
stos
lahf
pop
or
add
cs
pop
daa
sub
cld
setbe
mov
cs
lods
test
lods
mov
js
bound
test
in
jbe
je
clc
cld
dec
mov
pushf
push
les
ret
pusha
push
stc
pushf
fsubp
inc
cltd
push
push
mov
lods
fimuls
ffreep
addr16
dec
subb
pop
mov
sub
stc
arpl
jne
test
insb
mov
xchg
xlat
pop
cmp
test
inc
pop
test
movsl
outsl
fsubl
push
inc
mov
add
into
push
push
loopne
cltd
jp
sti
mov
pop
push
pop
dec
adc
jmp
jp
mov
lea
inc
fsubrp
jo
or
or
push
fstps
jle
popa
add
in
std
jg
mov
jae
and
ffreep
insb
or
mov
scas
mov
adc
clc
in
or
xchg
lock
imul
push
loop
or
notl
cmp
push
sub
mov
pop
std
pushf
inc
adc
daa
in
mov
rcrl
or
dec
not
and
lret
pop
cmp
out
in
mov
cmp
cmp
out
testl
pop
add
adc
loope
lds
pop
dec
int
xor
xchg
loope
movsb
inc
pusha
xor
adc
or
cmpsb
xlat
sub
fs
mov
addr16
sbb
xor
inc
mov
sub
dec
and
push
call
or
js
sub
mov
jnp
ds
and
jecxz
test
lret
xor
stos
cmc
int3
out
lods
push
test
movsb
adc
mov
xchg
dec
mov
jmp
xchg
push
movsb
cmp
add
cmc
mov
cmp
jbe
in
push
ret
dec
test
push
orb
or
sbb
sbb
cld
pusha
sub
aas
idiv
test
or
cltd
sbb
xor
pop
stos
xchg
in
ss
es
sbb
pop
sub
dec
jb,pt
scas
push
mov
inc
lock
dec
dec
les
movl
xor
pop
fists
int
iret
in
inc
xchg
cmpsl
mov
loop
enter
sub
out
or
out
fadds
push
mov
and
pushf
jmp
les
mov
inc
mov
inc
in
mov
int
pusha
jne
jmp
mov
mov
push
and
pop
xchg
lgdtl
mov
mov
mov
daa
cmp
adc
xor
insb
sbb
notrack
out
inc
es
mov
shrb
adcl
or
subl
sbb
sbb
jg
add
xchg
stos
dec
js
pop
cmpl
sbb
cmc
rcrl
pop
cwtl
sbb
rorb
stos
cmpsb
icebp
cmp
iret
or
dec
dec
inc
xor
mov
int3
sbb
xchg
push
ljmp
imul
lods
xchg
int
inc
xchg
cmp
and
aam
fs
mov
mov
mov
rcrl
sbb
icebp
mov
mov
jbe
vorps
faddl
cwtl
mov
add
inc
push
andb
scas
push
lods
in
mov
fwait
jns
iret
mov
in
sbb
aam
rcl
and
popa
ds
mov
dec
xchg
je
icebp
jae
cmp
test
lods
mov
mov
in
or
pop
dec
nop
sbb
xlat
adc
fdivrl
sub
jge
es
out
int3
ffreep
pop
pop
inc
das
cmc
jge
mov
test
mov
pop
mov
sti
rcrl
push
inc
repz
ss
mov
cmp
into
or
clc
pop
cli
fnstenv
les
in
std
mov
je
mov
sub
lods
xlat
fcoml
jl
and
inc
mov
pop
insb
rorl
scas
fisttps
stos
pop
sbb
lcall
mov
jmp
fidivs
dec
push
jg
cmp
loop
push
addb
pop
push
lods
das
or
out
repz
and
cli
push
fiaddl
es
fs
sub
push
out
mov
inc
xor
mov
ficompl
outsb
sub
leave
mov
stos
aad
jne
xchg
lcall
in
dec
inc
sub
cmp
jb
stos
inc
jns
loopne
add
jmp
mov
pop
ds
cmp
xchg
out
test
cld
jp
dec
insb
dec
mov
push
sub
stos
sub
mov
ret
add
xor
gs
dec
push
in
sahf
jp
sbb
fwait
xchg
inc
lcall
icebp
or
in
loopne
adc
mov
xchg
jl
cmp
imul
in
dec
jmp
or
jns
cmp
fsubs
les
aad
ret
push
jg
xchg
mov
sub
lds
mov
ds
dec
sahf
popa
sbb
movl
mov
or
add
enter
mov
mov
push
cmp
push
dec
stos
shll
lods
add
or
arpl
icebp
push
les
repz
jge
out
adc
fistpll
sub
imul
aad
jae
repnz
add
jle
lock
pop
popf
add
fldenv
stc
push
pop
shl
jmp
stos
in
and
or
sub
inc
repz
sub
imul
lret
push
lahf
lds
xchg
es
scas
leave
mov
push
mov
jae
jmp
xor
fisubs
jmp
aas
pop
dec
push
std
out
and
test
add
adc
mov
rcrl
mov
dec
sub
hlt
and
pop
repnz
lods
addr16
sbb
xchg
xor
jecxz
jo
lahf
movsl
mov
sub
ljmp
pushf
lods
mov
lea
ffree
xchg
cmp
rclb
cld
and
inc
fwait
xor
mov
mov
jo
jmp
and
gs
in
pop
ficoms
cmp
sahf
inc
inc
dec
in
sbb
cli
sbb
pop
and
arpl
out
mov
sbb
out
in
std
push
lret
xchg
stc
mov
aad
push
hlt
jno
repz
leave
cltd
cmpsl
mov
sub
mov
dec
mov
mov
cmp
dec
out
xchg
dec
push
mov
sti
jne
ret
sub
or
fidivrs
pop
nop
lock
or
lahf
xorb
dec
scas
xor
push
sbb
std
insl
jne
imulb
cwtl
enter
xchg
fcomi
cmovo
mov
jl
pop
imul
stc
cmp
add
xchg
mov
loope
jge
bound
leave
jmp
cmc
add
mov
fidivl
fildll
mov
in
in
outsl
xchg
fsts
add
das
dec
mov
mov
or
std
rorb
pushf
shrb
xchg
ja
adcl
sub
mov
pop
xchg
pop
cmpsl
adc
insl
pop
dec
aas
push
jmp
sub
repz
add
xor
test
inc
andb
sbb
push
mov
pop
adc
mov
xchg
adc
mov
imul
mov
add
cli
jp
iret
insb
sub
lret
mulb
cltd
or
mov
loope
popa
rolb
lds
sub
and
cmp
xor
leave
out
jo
jmp
ljmp
dec
push
inc
dec
sbb
dec
clc
ljmp
sub
outsb
cmp
dec
mov
adc
imul
mov
cmp
push
fwait
adc
jmp
mov
sbb
mov
aas
inc
xchg
inc
adc
ret
push
outsb
fs
pop
pop
mov
aaa
cmp
and
pop
aas
idivl
scas
jmp
outsb
or
xorl
imul
cltd
mov
push
jae
and
scas
pop
mov
inc
js
pop
fs
push
sub
gs
lods
sub
sub
inc
mov
test
push
fxch
and
pusha
sub
dec
jp
inc
add
int
push
test
and
jecxz,pt
sbb
sbb
repz
fsubrl
xlat
push
xchg
adc
sub
xor
movsl
jno
pop
addb
inc
scas
add
jle
mov
xchg
add
push
int
pop
pop
movsl
test
inc
xor
mov
aaa
cmp
lock
cmc
mov
aaa
jge
nop
loope
les
push
xchg
lea
mov
and
div
jp
xorb
inc
ret
cmp
or
and
jecxz
shlb
dec
cmp
ja
push
popa
push
jnp
insb
jns
ret
adc
popf
add
xchg
int
stc
fs
lock
or
sahf
hlt
cmp
test
sbb
or
cmpl
xor
xchg
mov
or
test
and
lea
adc
dec
push
cmp
js
mov
jl
add
add
add
int
testb
insl
sbb
xor
or
cs
aaa
aas
jmp
pop
push
icebp
cwtl
add
mov
pushf
outsb
push
pop
pop
test
push
inc
push
xchg
pop
aaa
pop
stos
mov
lahf
pop
clc
cld
mov
xor
cltd
pop
aas
pop
xlat
out
data16
fiaddl
and
andl
loope
mov
nop
push
xchg
push
jns
mov
inc
ds
sbb
mov
cmp
lea
xchg
inc
iret
stc
xchg
adc
das
popf
daa
mov
mov
outsl
insl
aaa
mov
xchg
mov
dec
cmc
pop
mov
inc
jg
push
xchg
push
cmc
sub
pop
mov
hlt
mov
inc
sub
xor
or
pop
movsl
mov
mov
jo
mov
mov
pop
roll
loopne
dec
sub
repz
mov
push
lds
push
out
dec
jnp
ret
aad
scas
fisubs
adc
push
test
fwait
mov
lea
lret
clc
js
sbb
xchg
rcrb
ss
pop
imul
dec
cwtl
int
int3
push
scas
push
mov
adc
sub
pop
scas
add
mov
cwtl
in
in
pop
shrl
stos
es
cmp
mov
data16
inc
jmp
pop
out
xor
mov
xchg
imul
lret
in
fldl
out
fidivl
imul
and
test
lret
das
rclb
fstpl
adc
ret
ljmp
mov
orb
cmpsb
and
ds
insl
mov
aad
ret
outsl
daa
test
mov
mov
ja
cltd
xchg
cwtl
lret
jle
movsl
dec
adc
call
fdivrs
out
in
jle
add
sub
adc
dec
shrb
ja
mov
sub
push
mov
mov
out
aam
add
xor
xchg
adc
jmp
pop
in
jmp
sub
mov
bound
test
and
cmp
jns
stos
cltd
sub
into
shr
push
and
mov
and
enter
fsubl
out
sti
adc
mov
sub
lds
mov
call
rorb
outsb
cmpsb
aaa
jg
mov
sub
adc
xor
cmp
shll
aaa
mov
inc
push
dec
push
mov
movsl
fistpl
pop
lds
shlb
repnz
loop
lea
mov
adc
adcl
dec
cld
imul
stc
xor
jle
adc
lret
outsb
divb
subb
or
adcb
adc
mov
addl
xchg
pop
imulb
push
cli
mov
push
loope
jmp
push
aad
in
jbe
dec
adc
ret
in
js
sbb
std
mov
sbb
pop
call
insl
test
and
popf
cmpsb
rcr
ret
inc
data16
enter
fists
add
cli
imul
adc
testb
jno
jns
mov
xchg
cmp
hlt
cld
fldl
negl
adc
jbe
mov
sarl
fidivl
imull
mov
ss
aam
sbb
aam
jb
push
pop
jl
negb
jbe
dec
cld
aaa
xor
mov
mov
dec
ret
add
and
cmp
jno
out
sub
xor
push
xchg
aaa
sti
jl
mov
and
mov
jo
sarl
jle
sbb
mov
pop
js
push
jnp
enter
popf
popa
pop
ds
icebp
dec
in
or
popf
inc
es
fsubl
add
sub
inc
ljmp
push
fildl
pop
xchg
shl
aad
push
mov
cmp
and
inc
adc
insl
lock
idiv
cmpl
std
sbb
xchg
fnstenv
fwait
xchg
lods
xor
mov
mov
cli
test
lock
test
pushfw
into
popa
sub
ja
mov
out
add
adc
movsl
xor
mov
add
inc
call
xor
or
cmp
arpl
push
idivl
stc
aaa
sub
sbb
dec
jnp
call
pop
xchg
or
cltd
inc
sbb
push
ljmp
lods
lret
test
bound
pop
push
pop
jl
mov
add
sub
mov
push
pop
aaa
rclb
ljmp
fwait
cmc
pop
repnz
lcall
test
inc
jo
insb
sub
mov
test
push
mov
or
fistl
xchg
cmp
mov
add
xchg
mov
push
in
jecxz
xchg
mov
pop
in
add
cs
xor
in
cmp
or
dec
aad
ret
dec
into
mov
pop
js
std
sbb
daa
lea
orb
xchg
mov
adc
xchg
mov
fnstenv
in
cwtl
in
int3
cld
icebp
or
dec
sub
fistpl
lods
stos
pop
mov
xchg
dec
stos
scas
rorb
adc
orps
inc
or
add
enter
rol
xchg
cli
adc
xlat
inc
mov
xor
imul
outsb
dec
loope
push
call
jl
stos
sub
out
notb
lods
or
imul
mov
pop
pushf
inc
mov
popa
lea
cld
cmc
sub
xor
jnp
cmp
popf
lcall
fmulp
xor
mov
cmp
jno
xchg
adc
aam
sub
jno
aad
es
xchg
mov
cs
xchg
test
mov
rcrl
add
cmp
mov
lret
sbb
xor
jmp
jnp
ds
fwait
dec
dec
fdivrp
jno
addr16
in
icebp
xor
push
ljmp
pop
fs
xchg
insl
into
sbb
ja
sbb
iret
cli
jb
cmpsb
add
sbb
aam
data16
sbb
aas
push
shll
pminsw
bound
lcall
lods
sub
jno
pop
pop
sahf
sahf
pop
test
push
stc
push
js
inc
pusha
cmp
sbb
cltd
fldl
test
in
scas
jae
pop
lea
sti
mov
mov
cli
imul
push
push
fdivp
mov
mov
shrb
cmc
je
mov
stos
out
xchg
lods
aas
cmp
les
dec
popa
out
xor
sbb
aaa
ret
rcr
pop
mov
xchg
mov
adc
xchg
xchg
jno
lret
inc
sub
lcall
ss
xor
sub
or
mov
inc
ja
xor
jb
adc
repnz
mov
imull
addr16
xchg
and
xor
pop
pop
std
mov
pop
rcr
inc
loopne
imul
jecxz
je
out
or
mov
das
sbb
push
test
and
gs
add
xchg
hlt
call
fucomp
imul
xchg
push
jno
nop
jbe
movsb
pop
xchg
ds
popf
out
adc
scas
es
cmpl
dec
cld
das
std
ret
aas
pop
or
cmpsb
and
push
lret
inc
cmc
dec
mov
daa
testb
dec
cmp
xor
lock
popa
cmp
sub
lock
int
add
roll
or
faddl
std
imul
xchg
outsb
jne
cmp
sar
sub
add
pop
bnd
cmpsb
pop
fsubrp
sysexit
or
add
adc
cld
lcall
cmp
fcomps
rorb
sub
xlat
and
imul
hlt
ss
inc
aaa
aad
push
sbbb
das
mov
mov
lock
sti
cld
xchg
orl
repz
jecxz
push
mov
push
call
xchg
jge
xchg
jp
add
leave
pop
sub
cmovnp
push
mov
cmpsl
jg
dec
loop
loope
mov
jne
mov
les
cmp
xor
cld
cli
mov
test
adc
les
mov
or
or
jnp
hlt
fnstenv
lret
push
jl
sbb
sub
aam
popf
std
iret
xchg
or
sbb
in
aaa
popa
adc
rolb
cmp
fidivrs
data16
insb
ljmp
xor
add
ficomps
cld
push
enter
ss
mov
mov
sub
sbb
outsb
dec
outsb
test
push
mov
arpl
loope
xor
cmp
xlat
scas
push
pop
sahf
lock
adc
push
dec
repz
lock
sbb
shlb
sbbl
mov
pop
xlat
sub
pop
popa
dec
mov
lret
jne
js
and
inc
mov
ret
popf
push
lea
popa
push
jp
cs
adc
or
and
sub
repnz
shrl
adc
adc
pop
pop
ss
adc
popa
je
or
pop
call
out
jecxz
or
les
mov
int3
nop
push
mov
loop
loop
mov
cmc
int
xorb
ljmp
dec
rcrl
loop
jo
stc
and
sbb
xchg
jp
xchg
cs
sbb
push
outsb
outsl
scas
enter
sarl
dec
pop
rcrb
dec
pop
push
adc
es
inc
add
clc
sbb
mov
repz
shll
xchg
ret
lahf
xor
sub
rolb
mov
xlat
sub
mov
inc
xchg
fimuls
movsl
xor
ret
add
les
inc
lock
lahf
mov
xchg
enter
push
mov
and
in
aam
ror
int
mov
das
xchg
mov
out
adc
daa
ja
xchg
jge
xor
pop
in
adc
es
mov
cmp
jmp
nop
out
mov
adc
jp
fstpt
cmp
push
mov
or
repz
rcll
lods
add
sbb
lods
sti
in
in
mov
es
and
mov
shl
movsl
imul
or
push
cmp
std
sub
and
cwtl
inc
cmp
aas
std
gs
outsl
add
xchg
xchg
call
sbb
inc
mov
xchg
rorb
scas
or
add
xor
xchg
pop
or
jae
testl
inc
out
jns
sub
inc
shl
sahf
cltd
cmp
and
and
test
mov
inc
xchg
test
mov
in
int3
outsl
clc
or
xchg
dec
mov
jge
loopne
int3
push
ffree
aad
orl
mov
sub
sbb
ret
add
cmp
fisttpll
insl
fnstsw
ja
push
jle
xchg
stos
xchg
push
and
xor
jecxz
ja
sbb
add
inc
je
data16
jge
mov
dec
mov
mov
hlt
xor
xchg
fcmovu
rcrl
out
cmp
movsb
dec
pop
in
push
out
out
mov
in
pop
mov
pushf
shll
cltd
mov
orb
and
out
push
movsl
mov
cmp
sub
lcall
mov
pop
dec
inc
mov
iret
push
hlt
jp
jae
addr16
jne
mov
cld
pop
jl
sbb
out
mov
outsb
mov
test
je
dec
popf
es
adc
dec
ja
jmp
xor
mov
aad
jbe
and
pop
mov
orb
lds
mov
xchg
push
test
jge
pusha
and
inc
aas
cltd
call
cs
jle
ficoms
xchg
jo
pop
sub
fidivrs
mov
mov
fstp
mov
out
sub
inc
ret
sub
shrl
or
xchg
mov
push
jmp
push
jno
sub
orb
imul
xor
popa
mov
and
add
ret
jmp
shrl
sub
into
sbbl
pop
sbb
rcrl
test
push
xor
jmp
movsb
repz
pop
cmp
movsl
shrl
nop
outsl
es
push
lea
xlat
outsl
pop
push
movl
sbb
mov
cli
sar
cmp
push
push
mov
test
js
inc
xchg
data16
ret
pop
mov
sti
jg
jae
imul
scas
cwtl
ljmp
dec
push
das
inc
lea
jge
mov
cmp
test
pop
repz
out
dec
add
jle
jb
xchg
cmp
fisttpl
fwait
mov
cmp
adc
iret
sbb
sub
arpl
or
xor
dec
out
aad
adc
jl
and
push
dec
test
mov
out
enter
cmpsl
call
adc
int3
push
fbld
push
xchg
pop
inc
jbe
add
loopne
imul
ja
and
add
cmpsl
lods
iret
xchg
loopne
in
into
loop
cld
clc
mov
jp
xorb
dec
scas
cmp
fcmovne
inc
jmp
insb
pop
rcll
stc
cmp
daa
mov
and
dec
or
addb
sbb
int
fwait
sbb
div
sub
jne
and
or
mov
ficompl
adc
jp
sub
mov
cmp
and
into
jg
into
adc
mov
popa
xor
mov
mov
add
mov
lret
xor
fadds
mov
or
inc
out
push
lcall
add
push
cmp
test
sub
lds
je
sbbl
enter
dec
push
test
rclb
icebp
ja
xor
int3
inc
popf
ret
test
xor
insb
xor
outsl
ficoms
nop
add
mov
cli
push
fmul
stc
loope
scas
fmull
outsl
add
sahf
jle
lret
jmp
mov
in
lret
jecxz
ds
fsts
insb
lods
andb
mov
and
xchg
mov
lds
and
mov
cmpsb
add
jle
push
mov
call
lret
mov
sbb
es
ret
daa
pusha
adc
fiaddl
rcrl
clc
xchg
fdivr
mov
gs
mov
adc
push
mov
jae
int
xlat
int
jmp
jge
cld
out
mov
mov
stc
xchg
andb
cs
mov
xchg
inc
subl
add
dec
and
cmpsb
mov
enter
stc
shr
dec
lods
out
cwtl
push
or
push
xchg
in
jmp
loope
in
or
fdivl
mov
cmpsb
mov
les
dec
cmp
fdivr
push
aad
sub
inc
push
ljmp
xlat
pop
in
jmp
jne
jb
mov
ret
mov
stc
add
test
stos
xor
sahf
sti
pop
sbb
mov
mov
jg
sti
xchg
roll
inc
push
jl
fcomp
out
es
dec
pop
fwait
stos
cli
aas
addl
cmpsl
mov
ret
nop
and
mov
xchg
inc
jge
jl
sub
shlb
ret
xor
rcl
fisttpl
das
cs
lods
popa
cmp
lret
jmp
fisubrs
jbe
leave
arpl
dec
push
inc
cmp
sahf
daa
sub
xchg
fcompl
or
dec
test
aas
in
pusha
xchg
imul
lea
repnz
lods
xchg
in
ret
testl
std
popa
push
push
out
add
bound
aaa
adc
add
lods
xor
nop
push
xor
mov
loopne
xchg
in
testb
and
lea
repnz
xchg
repz
jp
lahf
into
add
decb
cs
leave
jg
jp
aad
bound
jb
aas
call
sbb
jmp
scas
pop
sahf
push
test
shl
jb
pop
mov
xchg
sub
leave
cmpsb
fwait
push
mov
ljmp
and
add
test
adcl
insl
test
push
repz
cmc
out
into
xchg
jno
orl
push
movsl
mov
cs
dec
xchg
test
xor
fs
dec
cwtl
pop
scas
mov
adc
inc
add
mov
mov
sbb
lods
pop
xchg
or
testb
sub
repz
cmpsb
outsl
lock
jns
rcrb
mov
orl
leave
mov
pushf
mov
lret
adc
stos
sbbb
mov
or
lods
fistl
jmp
int3
inc
push
push
mov
xchg
xchg
clc
inc
push
sub
fdivp
leave
loopne
arpl
shll
mov
jmp
cmpl
push
or
aam
pusha
repnz
scas
inc
sbb
mov
jae
andl
adc
movsb
daa
aad
sub
inc
push
jo
sbb
cmp
addr16
mov
ja
jns
mov
ficompl
loopne
xchg
cmp
xor
xchg
mov
pop
dec
jns
inc
out
fstps
lcall
or
add
or
cmp
cs
loope
mov
mov
rcl
pushf
js
jae
adc
rorl
addr16
sbb
out
mov
push
inc
pushf
sub
int
mov
push
mov
sbb
push
sub
test
push
mov
sbb
aaa
lret
shlb
push
in
push
dec
jno
scas
pop
xchg
test
mov
bound
or
xchg
scas
incb
xchg
mov
popa
push
or
hlt
inc
addr16
jnp
inc
js
js
shl
cmp
add
mov
pop
add
test
stos
mov
test
mov
popf
mov
repz
and
outsb
call
mov
mov
loop
xor
out
push
fwait
movb
cltd
jp
push
cmp
call
dec
mov
mov
iret
in
and
iret
sub
mov
push
sar
and
stc
popf
cmp
inc
pop
jno
dec
inc
push
pop
movsl
fistps
lret
adc
xchg
and
lret
nop
rcll
rcr
xchg
ja
aad
inc
outsl
sbb
cli
rcr
push
mov
jnp
test
vpavgw
stos
pop
jbe
es
loop
lahf
xor
push
mov
jne
and
dec
push
dec
dec
mov
scas
pop
les
xchg
insl
jge
xlat
xchg
call
inc
stc
mov
test
xchg
push
imul
test
and
sub
jbe
out
cmp
enter
clc
inc
pop
sub
dec
popa
sbb
push
movsb
out
lret
mov
adc
add
mov
dec
mov
cld
insl
mov
sub
jne
icebp
call
adc
outsb
add
xlat
jle
cltd
mov
test
push
int
arpl
test
cmc
sub
sub
loop
sub
adc
xchg
jae
enter
push
or
push
push
lret
rorl
sbb
cwtl
out
lcall
cs
sahf
popa
fimull
mov
loop
mov
pop
add
fiadds
fdivl
dec
sbb
mov
pop
xor
sbb
add
sti
leave
iret
mov
xchg
aas
push
fsubl
adcb
outsb
je
sub
inc
cmpsb
iret
push
cli
mov
push
dec
fwait
mov
sti
cltd
fcomip
mov
lret
ret
jecxz
jl
jmp
fs
popl
loop
ss
sub
push
cmp
dec
sbb
dec
mov
lock
lods
pop
scas
scas
jns
in
jo
dec
pop
pop
test
push
push
decl
pop
jle
arpl
sub
pushf
inc
popa
adc
in
aad
fdivrl
aas
cmp
std
movsb
xchg
or
mov
in
cmp
mov
sub
jne
sub
adc
inc
push
cmc
or
addr16
outsb
dec
dec
ja
subb
mov
adc
push
inc
jno
add
jg
mov
fwait
movsl
xchg
pop
lds
adc
sti
xor
stos
xor
dec
mov
ljmp
and
ja
adc
vrsqrt14sd
fstpt
mov
cmp
and
pop
dec
mov
xlat
stc
inc
jle
cwtl
jg
jae
or
sub
add
imul
pop
sti
xchg
ret
inc
push
xchg
xchg
pop
cmpsl
sub
icebp
arpl
aas
push
jge
pop
or
and
negb
das
movsb
jmp
loopne
xchg
mov
inc
lods
outsb
les
frstor
mov
push
jge
xor
jo
imul
pop
int3
sbb
out
nop
mov
dec
lret
sub
jne
dec
ds
pop
cmp
jnp
sahf
in
push
pop
lods
sub
rcrl
outsb
int
divl
cmpsb
lahf
sbb
sbb
mov
daa
gs
xchg
dec
push
outsb
or
lret
or
push
cmpb
adc
inc
les
fidivrs
insb
xor
cld
or
shrb
cmpsb
pop
scas
jmp
jno
pop
mov
sbb
test
pop
and
lret
add
das
aaa
cmpsl
add
and
add
std
push
inc
push
jae
xchg
nop
xchg
mov
inc
std
insl
shl
mul
pop
fwait
nop
sbb
iret
sti
lock
push
xchg
dec
fmul
lock
nop
enter
ret
nop
div
fldlg2
sbb
xor
push
gs
mov
pop
mov
mov
movsb
lcall
push
insl
pop
jge
xor
cmp
int3
cmovne
ss
adc
nop
xlat
popa
loope
cmp
cld
xchg
insb
push
xchg
mov
psubsb
insb
inc
cmpsl
dec
insb
mov
jecxz
fwait
shr
mov
cmpw
movsb
push
data16
call
dec
aas
push
daa
xchg
sbb
dec
push
mov
push
cmp
cltd
add
push
jmp
push
movsb
dec
push
das
push
rcr
mov
cmp
cmpsb
pop
xchg
xchg
adc
dec
data16
adc
xchg
pop
mov
test
cld
stc
jge
popf
mov
cmp
jns
inc
pop
nop
jmp
iret
je
negl
lds
inc
add
test
pop
cld
adc
inc
push
mov
sub
cmp
out
sbb
inc
or
or
sbb
mov
sub
sub
pop
js
pop
jle
or
xchg
sub
xchg
pop
sbb
push
mov
jnp
notl
notl
adc
out
scas
sbb
inc
jb
dec
loope
ljmp
ljmp
dec
add
mov
mov
fnsave
clc
and
fwait
mov
pop
mov
pop
mov
sbb
mov
cltd
scas
inc
scas
jg
push
aam
push
sub
mov
sub
cmp
mov
stos
push
sub
cmp
jnp
movsb
aas
adc
mov
mov
fmuls
fbld
into
jecxz
push
repnz
fs
pop
mov
mov
imul
lock
jno
mov
std
rorl
lahf
stc
xabort
and
incl
xchg
in
stos
sarl
cmp
dec
mov
dec
jbe
arpl
jle
aas
or
sub
or
iret
das
add
push
pop
outsb
mov
sub
xchg
inc
imul
rcr
mov
loopne
repz
mov
sbb
not
push
movsb
cmp
call
notl
sbb
push
or
sub
cli
cli
cld
lcall
jl
jmp
dec
jae
inc
mov
dec
jb
adc
dec
dec
xchg
and
adc
sub
xchg
int3
clc
xchg
pop
fs
mov
sti
push
inc
sahf
mov
mov
xor
cmp
call
gs
cltd
mov
pop
pop
gs
push
inc
out
mov
push
sbb
inc
data16
add
lds
push
pop
sub
jle
mov
ret
sbb
imul
movsb
inc
call
les
mov
or
dec
and
scas
jb
frstor
mov
lods
outsl
add
lcall
mov
mov
addl
or
adc
in
xchg
add
adc
mov
test
hlt
loope
and
or
jp
mov
stos
jecxz
adc
jno
leave
sarl
sbb
fstps
stc
mov
fcompl
stc
xchg
push
sbb
push
mov
lret
sbb
sbb
sahf
movsb
mov
int3
mov
cmc
fistpl
lods
inc
sarl
inc
mov
out
push
clc
daa
int3
pusha
fwait
js
and
cmp
out
test
inc
jns
pop
pop
out
xlat
jb
icebp
push
or
repz
lods
push
imul
push
xor
in
pop
out
xchg
aad
pop
xor
ljmp
sbb
mov
add
cli
jnp
pop
mov
xchg
mov
bound
in
sarb
inc
loop
or
mov
xchg
or
loop
jne
mov
pop
mov
xchg
ret
xchg
jp
enter
and
bsf
xor
into
dec
dec
adc
clc
dec
sub
nop
les
aam
pop
jmp
add
clc
and
out
fisubrl
mov
mov
mov
xchg
setns
addl
xor
add
pop
sbb
dec
jo
inc
sti
sahf
jle
or
or
jecxz
aas
inc
pop
inc
repnz
stos
or
jo
es
sbb
push
fst
fstpl
scas
dec
inc
insb
das
mov
or
adc
inc
and
in
jb
push
lcall
inc
jno
ss
sti
mov
push
add
xor
mov
shlb
mov
push
mov
nop
std
orb
dec
dec
out
push
fldt
and
out
pop
out
data16
inc
leave
and
jne
xor
fisttpl
xchg
call
arpl
repnz
adc
lds
je
pop
imul
jl
cmp
rol
subb
push
jae
scas
mov
movsb
scas
ret
xor
xchg
out
repnz
push
ss
movsb
into
push
pop
pusha
jbe
cmp
pusha
fists
cmpsl
mov
dec
frstor
add
mov
mov
dec
scas
jle
pop
imul
cli
in
xchg
ljmp
es
sysenter
mov
or
imul
mov
fnstsw
mov
mov
add
movsl
pop
cmp
and
nop
sub
xor
xchg
movsb
cmp
fwait
mov
add
pop
cli
pop
lods
hlt
pop
lret
rcl
shll
daa
es
pop
idivl
fwait
xchg
mov
and
int
stos
pop
cmp
cmp
fldt
jp
xchg
inc
loope
insl
fdivrs
adc
addr16
or
fwait
fwait
in
lret
lret
cltd
jecxz
mov
std
jg
and
movsb
or
jae
nop
or
daa
adc
daa
jnp
jne
or
mov
outsl
test
mov
gs
or
outsb
outsb
pushf
lods
sbb
dec
add
dec
sbb
fildl
cmp
or
lahf
pop
lock
rorl
push
jmp
sbb
adc
adc
push
adc
mov
or
icebp
mov
das
iret
negl
es
icebp
ret
sbb
mov
lcall
mov
wbinvd
cli
sahf
mov
xor
jl
outsl
inc
dec
push
in
mov
cmc
mov
mov
jecxz
sti
or
xchg
dec
push
test
repnz
aaa
sub
lret
sbb
push
jnp
or
mov
gs
mov
testl
test
mov
inc
mov
int
adc
dec
cld
mov
stos
add
mov
repnz
xor
mov
in
ljmp
mov
aaa
push
rorb
mov
fbld
sub
pop
mov
and
repnz
icebp
or
pushf
aas
in
cmc
je
cmpsb
std
add
enter
jp
leave
xchg
fcoml
mov
out
mov
and
test
and
cld
xor
pushf
cmpsl
mov
inc
movzwl
mov
pop
sarl
shrb
ret
xorl
test
outsl
jae
pop
aas
addr16
sub
addl
inc
nop
inc
add
cmpsl
push
popa
sbb
scas
or
mov
int
bound
loopne
adc
and
scas
enter
sub
lock
lods
xor
jo
push
adc
xchg
ljmp
sbb
mov
int3
js
pop
mov
or
push
in
popa
push
movsl
mov
out
mov
pop
push
je
and
and
cmp
mov
cwtl
xchg
dec
mov
fwait
or
xor
sub
jge
test
inc
repz
pop
and
sbb
jns
cwtl
mov
andl
xchg
pop
push
ljmp
mov
fsubrl
jmp
jns
hlt
mov
cmp
push
pop
test
stc
repz
shlb
adcl
leave
xor
cmp
inc
sub
xlat
push
sbb
scas
sub
dec
lea
sbb
and
hlt
mov
cmp
mov
je
movsl
daa
and
push
ljmp
push
mov
adc
push
jmp
inc
mov
fisubrl
xchg
fbstp
mov
test
fcomp
je
xlat
mov
xor
push
jae
es
push
sbb
pushf
inc
cmp
xchg
sbb
jno
pop
add
clc
adc
arpl
ret
sbb
sub
cli
and
imul
xchg
jp
jae
add
test
xchg
data16
hlt
and
cld
ss
dec
push
jne
jmp
pop
xchg
xchg
bound
or
pop
sbb
mov
ror
loopne
fcomps
jb
mov
loopne
in
sbb
test
mov
fcmovu
outsl
imulb
mov
and
hlt
insb
lods
inc
mov
clc
es
gs
mov
ja
push
idiv
fldl
repz
insb
cld
and
sbb
out
loop
mov
lds
cmpsl
mov
ja
dec
mov
xchg
mov
frstor
xor
dec
pop
in
mov
mov
adc
add
bound
aam
push
cmc
mov
mov
test
cli
jae
mov
cld
std
repnz
and
ljmp
mov
pop
inc
or
outsb
movsl
jg
insl
cs
jbe
stos
mov
mov
xchg
mov
test
ret
mov
das
std
in
xor
push
aam
jno
int3
rcl
xchg
xor
mov
icebp
jb
fwait
sub
inc
sti
adc
mov
xchg
dec
push
lcall
pop
sub
daa
jns
fildl
ss
push
inc
mov
repnz
mov
sub
xchg
sub
rorl
outsl
mov
mov
lcall
imul
adc
test
and
xor
or
imul
or
lret
mov
add
leave
fwait
or
pusha
in
jae
test
shrb
imull
mov
mov
cmpsl
push
mov
mov
mov
inc
int
inc
cmc
xlat
fists
cmp
jle
lods
stos
or
mov
in
arpl
aam
in
mov
mov
push
and
aam
movsb
mov
pop
and
mov
and
fs
mov
pop
fcmovne
out
mov
sbb
mov
into
sbb
in
scas
sbb
cmc
jmp
dec
test
repnz
push
icebp
out
lods
adc
movb
sbb
jge
arpl
dec
xchg
jns
cmp
test
andb
icebp
fsts
mov
dec
cmpsl
int
rorl
sbbb
jmp
mov
push
int
pop
nop
in
and
outsb
mov
das
mov
pop
push
sub
insl
shll
pop
repz
popf
cli
cmpsl
mov
bound
sub
dec
fs
sbb
push
mov
mov
pop
cltd
or
test
daa
jbe
sub
sbb
xor
bound
xchg
lahf
mov
jb
push
jmp
cld
lods
mov
mov
dec
nop
mov
pushf
add
jecxz
inc
addl
leave
mov
lret
inc
inc
inc
dec
adc
or
test
loope
out
xchg
subb
lods
xlat
je
jecxz
loope
leave
stos
push
insl
mov
sbb
push
mov
cmp
rolb
push
lds
data16
int3
leave
or
popa
jne
stos
clc
dec
mov
negb
pop
test
jmp
push
xchg
scas
sbb
and
or
mov
pop
adc
js
inc
mov
sub
mov
aam
ret
inc
popa
mov
mov
inc
inc
jae
ret
push
mov
cmp
push
pop
in
pop
jl
cmp
mov
into
adc
sbb
sub
stos
mov
add
mov
cltd
and
mov
ja
xchg
or
pop
jge
fdivr
jo
cmc
or
setbe
stos
pop
enter
pushf
loope
int3
mov
cmp
outsl
test
cmp
mov
cwtl
and
imul
aad
loope
lds
dec
dec
xor
xchg
mov
fwait
mov
mov
sub
add
xchg
mov
imul
cli
sbb
insb
lret
adc
dec
inc
lds
or
sub
xor
and
sub
push
ret
dec
jl
fidivrl
jo
std
pop
lods
push
mov
popf
movsl
and
ds
out
cld
pop
pop
push
sbb
dec
jbe
pop
xor
js
inc
pop
dec
mov
adc
mov
add
shrb
sarl
enter
iret
dec
rclb
xor
mov
mov
sub
adc
pop
dec
test
inc
in
pop
mov
jmp
cld
inc
inc
xor
scas
sbb
push
test
jge
xchg
xchg
nop
pushf
jo
or
mov
and
sub
dec
cli
call
cmp
push
mov
popf
mov
cmp
mov
loop
nop
push
test
mov
pop
pop
aam
mov
andl
dec
fistps
in
mov
cmpsl
test
cltd
sub
out
jno
adc
sub
out
fldcw
inc
mov
mov
jmp
mov
out
pop
test
lods
cmc
xchg
imul
add
lods
jnp
ja
xchg
into
sbb
lods
mov
and
leave
shlb
push
lcall
xor
jns
or
inc
mov
jecxz
push
cmp
mov
pop
mov
push
jp
repnz
mov
mov
cmp
jb
ljmp
lahf
aas
movsb
sbb
xchg
int3
sarb
les
dec
push
sub
in
cwtl
jb
pop
rclb
dec
test
xchg
outsl
jmp
xor
clc
dec
in
push
aam
push
and
push
out
and
sub
out
addb
inc
pop
ss
pushf
mov
testb
in
and
insb
sub
dec
xor
xchg
pop
out
jbe
pusha
stc
je
cmp
mov
fstps
andl
jg
pop
adc
pushf
test
sbb
stc
mov
movsl
in
mov
aam
add
cmp
sti
push
add
sahf
inc
rorb
mov
xlat
rol
out
out
and
add
mov
push
int
or
add
and
xchg
mov
cmc
cltd
pop
ss
or
xchg
sub
xor
je
mov
cmpsb
jns
ljmp
xchg
insl
inc
mov
fists
outsl
fisttpl
fidivs
cmp
add
push
insl
cld
out
sub
adc
sbb
add
mov
cmp
cmp
mov
cmpsl
sahf
dec
daa
cmp
addr16
into
sbbl
inc
setl
jns
imul
sub
fcomps
sbb
fdivs
dec
inc
cmp
adc
fs
ret
iret
add
mov
fsts
add
dec
mov
fwait
gs
cltd
cltd
scas
adc
push
sbb
fidivrl
test
sub
mov
push
ret
stos
or
jns
cmp
pop
inc
mov
mov
dec
in
outsl
sbb
or
jecxz
test
push
je
pop
sub
mov
mov
mov
mov
movsb
icebp
mov
and
je
daa
pop
rolb
adc
in
xchg
dec
mov
adc
push
ret
pusha
dec
ja
jns
addr16
inc
pop
pop
adcb
push
or
iret
and
sbb
dec
pop
push
jle
mov
lods
dec
int
lods
fsubr
int
jnp
shll
jle
pop
or
adc
lret
popf
stos
stos
mov
stos
aam
pop
mov
mov
xchg
or
lret
cwtl
idivb
pushf
stos
ja
pop
dec
cltd
inc
clc
ret
and
mov
inc
loopne
xor
inc
adc
mov
inc
push
arpl
fiaddl
pushf
fidivrs
sub
inc
mov
add
jbe
ljmp
adc
mov
jb
mov
cwtl
sub
and
push
mov
cmp
insl
into
xor
test
add
ficompl
stc
test
test
adc
sub
pop
push
je
frstor
xchg
inc
test
push
mov
arpl
inc
test
gs
rorb
les
fimuls
enter
cmpsl
fsubrs
pop
inc
dec
mov
jle
mov
je
in
loopne
sub
scas
dec
in
or
subb
lds
inc
xchg
fsubrl
cmpsl
imul
loope
call
imul
cmp
imul
hlt
pop
mov
pop
sub
dec
pop
jne
jge
pop
mov
mov
xchg
ret
call
scas
dec
cmp
test
xchg
add
sarb
or
sub
fwait
mov
jno
adc
xor
sbb
popa
setae
out
insl
xchg
fwait
lds
sbb
pop
cmpsb
aad
cmp
ljmp
push
imul
mov
jmp
or
cltd
lahf
insb
adc
inc
aas
mov
sbb
adc
scas
mov
hlt
stos
dec
dec
cld
rclb
scas
lods
loopne
testb
push
es
mov
jmp
jo
xchg
icebp
jmp
popa
xchg
jecxz
sahf
pop
jg
adc
pop
sahf
aaa
xor
in
adc
ss
call
inc
shlb
xor
addl
popa
int
incl
into
dec
test
xchg
mov
xchg
cmp
sbb
add
out
add
movsb
mov
data16
sarb
fistpl
xor
mov
jae
mov
mov
add
mov
in
mov
loope
cmpsl
inc
inc
pmullw
push
ja
ds
inc
ss
outsl
mov
arpl
push
inc
sbb
mov
xchg
jnp
xor
fstl
adc
mov
inc
push
push
in
push
fildl
popf
adc
and
aaa
sub
lods
xor
adc
cs
xor
insl
sbb
mov
sarb
mov
inc
pop
pop
jmp
mov
jl
push
push
xchg
adc
push
sub
mov
inc
add
inc
scas
xor
lods
mov
stos
mov
in
xchg
mov
out
arpl
mov
sbb
call
jne
pop
addl
mov
fcmovbe
scas
lahf
shll
ss
fistpll
in
movsl
sbb
cmp
mov
insl
and
in
mov
popa
mov
and
adc
popa
jnp
out
pusha
inc
push
icebp
add
mov
popa
fs
outsl
xor
movsl
sub
movsb
jle
cmp
cld
adc
outsb
repnz
aad
cmp
inc
nop
cmp
sbb
push
nop
and
sub
mov
push
ds
hlt
mov
movntq
push
lds
lret
scas
jo
fistpl
test
pop
cmpsl
mov
cmc
sbb
mov
cmpsl
fcomps
nop
ud1
add
in
jp
or
cmp
sahf
les
pop
data16
leave
add
dec
inc
mov
push
jp
or
sub
xor
sbb
mov
rcrl
ljmp
jle
inc
movsb
jno
or
add
or
cmpsl
mov
sbb
and
loop
int3
icebp
enter
ds
jle
or
nop
inc
ffreep
out
cmp
jge
out
add
mov
xchg
adc
xchg
jecxz
pop
negl
xor
adc
push
cmp
push
subb
cmp
jmp
out
fdivl
adc
dec
push
rcrb
inc
lea
pop
ret
stos
cltd
sbb
sub
jle
ret
jbe
cmpsb
and
stc
add
cmp
fwait
les
std
push
lret
std
cmpsb
lea
mov
loopne
fidivrs
adc
mov
stos
inc
pop
push
pushf
or
cmc
dec
iret
mov
xchg
and
xchg
jno
sub
aas
sub
insl
mov
adc
adc
in
pop
cmp
fwait
inc
push
jecxz
pop
flds
shl
mov
sbbl
fadd
or
add
mov
fnsave
test
sub
or
xor
and
fcoms
iret
push
mov
ficomps
jmp
lea
ret
outsl
push
mov
bnd
test
imul
cld
sbb
jo,pn
jae
mov
sub
dec
inc
inc
mov
cmp
std
mov
xchg
nop
pop
mov
adc
and
insb
sub
dec
or
call
mov
das
xchg
cmp
stos
mov
lahf
bnd
mov
pop
insb
mov
inc
cli
xor
push
mov
sbb
pusha
inc
sub
dec
dec
adc
lods
mov
and
jg
mov
sub
pushf
gs
sub
int3
lcall
std
mov
shll
pop
outsb
sbb
mov
lahf
push
outsb
jo
in
int3
xor
ss
jle
out
jmp
pop
test
xchg
xchg
fstpt
out
rclb
adc
inc
mov
sbb
mov
pop
subl
and
sub
ror
push
jl
dec
lea
rolb
ljmp
inc
mov
enter
sbb
add
loope
cmpsb
dec
add
add
es
adc
mov
sub
dec
in
and
cld
enter
add
jl
jno
mov
sbb
or
mov
mov
adc
xor
arpl
nop
in
pop
sarl
pushf
test
clc
sbbb
inc
add
xchg
idivl
enter
jnp
test
stc
hlt
in
inc
push
mov
mov
repnz
cmp
add
pop
add
fistpll
add
xor
sti
sub
mov
fwait
push
clc
cmp
loop
in
pop
jl
lea
test
mov
les
mov
loop
icebp
test
inc
sahf
out
sar
outsb
sbb
addr16
fsubl
into
adc
je
into
in
adc
fistps
mov
pop
adc
mov
cmpsb
loopne
adc
adc
push
scas
mov
dec
ret
sub
xor
xchg
test
outsl
int
pop
dec
inc
sbb
fidivs
gs
data16
mov
inc
xchg
adc
push
xchg
fisubrs
xchg
cmp
sub
std
fistpll
sbb
rolb
push
xor
xor
lea
xchg
and
sahf
jo
arpl
xchg
cmp
or
fiadds
inc
clc
dec
popf
and
inc
inc
mov
inc
out
xchg
sbb
shll
lods
movsb
inc
aam
xor
pop
popf
ret
dec
das
xchg
add
xchg
nop
fldcw
inc
inc
push
cli
add
cmpsb
pop
into
ss
inc
jp
jo
push
cld
int3
push
push
mov
push
cmp
xchg
sub
adc
mov
lds
sbb
movsl
scas
sbb
sbb
pusha
mov
xor
ja
repnz
push
in
pop
fdivl
xchg
add
shrb
leave
jp
ljmp
pop
push
push
xchg
and
enter
pop
shr
pop
js
sahf
mov
xchg
mov
jg
mov
adc
mov
pusha
xchg
jnp,pt
adc
xchg
sbb
mov
jnp
and
lock
lcall
pop
pop
xor
loopne
xchg
lock
sub
orb
cmp
sahf
and
call
in
dec
mov
mov
mov
daa
pop
adcb
pop
pop
pusha
int
xor
ficoms
aaa
inc
out
test
xchg
pop
jmp
repz
in
mov
dec
mov
and
rcr
pop
jae
es
sub
jne
xor
or
ss
cmp
lea
mov
clc
int
fisttpl
xor
mov
mov
mov
rcll
and
je
push
sbb
call
adc
or
fimull
popf
mov
rclb
push
adc
or
sbb
shrb
mov
add
es
fisttpl
leave
xchg
adc
enter
mov
leave
xchg
lret
xor
clc
jl
rclb
lahf
add
les
adc
out
sbb
out
sbb
dec
cwtl
dec
loope
aad
xchg
in
mov
mov
adc
ja
push
pop
pop
mov
jo
mov
push
jp
inc
imul
or
xchg
in
xchg
or
mov
imul
sub
add
addr16
dec
pop
cs
pushf
push
or
add
cmp
insb
add
inc
int
stos
fidivrs
jp
and
lods
mov
jo
push
cmp
in
insl
enter
pop
mov
adc
fimull
in
pop
cmc
int
int
ret
or
test
insl
dec
test
movsl
ja
jmp
adc
push
push
pop
mov
call
cs
mov
ffree
and
adc
push
or
mov
ja
in
pop
add
dec
test
and
fstpt
jmp
or
mov
or
dec
mov
cmp
shlb
jo
mov
bound
es
or
pop
rcr
dec
in
ss
insb
ret
sbb
jl
in
dec
data16
push
mov
addr16
ds
in
pop
data16
or
imul
fdivl
jge
int
cltd
outsl
and
mov
mov
inc
dec
rcrl
pop
loope
jo
imul
sbb
adc
mov
lret
pushf
inc
pop
cmp
cmp
mov
push
gs
sti
loopne
cmpsl
ret
fcoml
sub
pop
mov
jmp
es
std
stc
filds
jg
bound
in
cltd
out
sarb
pushf
sub
adc
pop
movsl
pop
js
cmpsb
adc
push
test
push
gs
sub
sahf
push
cmpsl
cmp
xor
icebp
lds
ficoms
scas
lahf
ret
xchg
adcb
sbb
les
push
ss
add
gs
adc
sti
das
add
repnz
pushf
push
push
sub
pop
sbb
adc
xor
mov
int
stos
xchg
mov
enter
mov
jns
into
mov
inc
mov
mov
out
ljmp
sub
pusha
addr16
xchg
fmull
cmp
and
btr
int3
push
out
xchg
pop
and
scas
test
mov
cmpl
sarb
in
lods
ja
int3
sbb
cmpsb
insl
movsb
addr16
or
pop
mov
mull
pop
cwtl
loop
iret
sub
daa
ljmp
outsb
xor
jle
repnz
cltd
rcll
lret
fmul
shl
mov
ljmp
pop
add
cmp
mov
popf
lcall
xor
mov
mov
movsl
inc
adc
inc
or
iret
xchg
jnp
push
jle
cld
stos
movsb
adc
xchg
sub
push
int
mov
testl
ficoml
cmp
push
lret
insb
jb
or
cmp
xlat
dec
int
push
inc
sbb
insl
and
clc
jge
cmpb
inc
js
insl
and
arpl
mov
arpl
jg
adc
push
std
xchg
pop
in
sbb
push
inc
xor
into
iret
xchg
lahf
mov
sbb
out
jnp
mov
mov
scas
mov
jmp
fisttps
pop
stc
push
mov
fwait
or
fdiv
pop
scas
dec
jge
stos
dec
or
arpl
outsb
aas
add
lcall
loop
inc
scas
hlt
adc
lea
int3
sub
in
ss
jne
and
dec
in
jo
pop
xor
inc
push
jbe
imul
xchg
fiaddl
sub
movsb
adc
scas
sbb
xchg
out
lds
rorl
jb
xor
add
jo
mov
lods
cwtl
cmp
inc
mov
cmc
sbb
jge
or
xchg
aaa
mov
xor
div
movsl
lods
test
and
fistpl
enter
cmp
mov
add
ds
cmp
pop
mov
loopne
imull
or
sahf
add
and
push
dec
push
sub
in
ret
mov
call
xor
jg
add
pushf
mov
add
or
adc
sub
daa
in
dec
shlb
sbb
out
dec
in
in
sarb
dec
sbb
mov
push
sub
movsl
mov
jg
xor
adc
pop
loopne
pop
add
mov
lret
push
inc
stos
nop
psllq
and
cli
jg
cvtdq2ps
mov
xor
or
lock
and
dec
imul
jmp
and
cmp
xor
xchg
orb
loop
outsb
jo
inc
fcomps
push
xchg
pop
sub
inc
enter
mov
push
inc
adc
xor
mov
inc
pusha
rolb
dec
out
cltd
aad
jle
add
sub
mov
fadds
cs
mov
sti
vdivsd
scas
and
jmp
xchg
loop
ljmp
imul
cmp
jno
mov
movsb
push
jb
push
dec
pop
int3
ret
aaa
fadds
xor
sbb
subb
and
jb
xchg
xchg
rcrl
mov
test
into
cmc
dec
stc
mov
ljmp
dec
cmp
cmc
movsb
and
mov
and
add
dec
std
fcomps
push
lods
dec
xchg
aad
adc
xchg
and
pop
pop
push
add
enter
push
fcmove
ss
pop
lock
loopnew
sub
fcomp
push
sub
push
add
xchg
pushf
test
daa
mov
out
loopne
jmp
or
int
pop
xor
cltd
mov
pop
mov
jns
sub
adc
xor
pop
repz
and
fdivrl
mov
push
das
jle
xchg
and
jbe
movb
lods
mov
inc
pop
or
movsb
jae
les
pop
jg
inc
jne
popa
push
cmp
dec
cltd
fprem1
sub
orl
mov
clc
ljmp
dec
mov
or
xor
mov
adc
adc
inc
push
jp
imul
mov
jne
mov
outsl
adc
dec
loopne
stos
call
dec
jno
daa
loopne
dec
fimull
inc
inc
pop
repz
cld
pushf
and
rclb
jo
pop
jno
mov
aam
fimull
and
fildll
sub
sub
shlb
testl
xor
das
repnz
mov
add
mov
ja
mov
mov
inc
inc
xchg
es
add
mov
push
jl
fdivrl
xor
or
dec
in
in
pop
loope
cmp
sahf
decl
hlt
add
jb
lea
enter
int3
inc
popf
pop
stos
xchg
sti
into
and
adc
cmp
jbe
lret
out
push
lock
cwtl
cwtl
movsl
mov
jp
xchg
popf
xchg
mov
je
jbe
ds
out
test
jle
cmc
sbb
jne
imul
xor
test
sahf
sub
rolb
xlat
jne
push
lock
mov
fcomps
out
aad
sbb
pusha
add
push
lahf
cmp
push
imul
push
mov
out
jne
push
mov
adc
rorb
fdivrp
int3
std
xor
out
lods
push
fsubr
shll
adc
fsubrs
fisttpl
add
pop
sub
ret
xor
mov
xlat
cmp
das
xchg
or
arpl
cmpsl
lods
sahf
pop
scas
addr16
mov
ss
dec
add
ja
out
in
jle
or
pop
mov
add
cwtl
jbe
jns
rcrl
fsubrl
out
sbb
movl
stc
daa
pushl
hlt
pop
xor
push
mov
inc
sub
inc
push
pop
jmp
push
aad
mov
imul
add
push
repz
test
dec
loop
push
fldcw
push
push
push
loop
push
xor
mov
xor
sub
sbb
xor
bound
ja
add
sub
adc
xchg
mov
cmp
push
ljmp
push
clc
jge
test
stos
sub
inc
shr
mov
cmpsl
xchg
sbb
insl
lahf
xchg
insl
pop
dec
xlat
insb
jp
out
adc
lock
or
jp
jp
add
mov
lock
jl
jl
xchg
pop
mov
xor
flds
lds
clc
sub
mov
ret
fisubl
cld
lcall
nop
popf
lahf
push
sti
push
movsb
bound
xorl
in
and
mov
es
jle
adc
xchg
outsb
jnp
xchg
fadd
sti
dec
stos
fmuls
pop
loopne
or
incl
nop
lret
xor
cld
js
cmp
loope
push
cmpsl
call
pop
dec
mov
or
aam
call
xor
data16
in
and
inc
jecxz
in
int3
xchg
mov
sub
cmp
arpl
scas
sub
sbb
lods
bnd
mov
shll
cld
ljmp
sbb
inc
mov
and
fsub
adc
rcl
mov
cmpsb
push
int
push
aaa
or
cld
adc
lret
or
adc
cwtl
out
mov
rclb
movsl
adc
push
push
sbb
enter
adc
hlt
mov
dec
sbb
gs
jmp
and
mov
and
in
xor
leave
dec
stos
xlat
sbb
inc
iret
and
gs
xchg
ss
inc
inc
mov
sub
add
adc
sub
add
ret
jecxz
das
test
fistl
rcll
mov
pop
push
pop
imul
pop
data16
mov
cwtl
push
and
or
pop
movsb
fs
loop
ds
pop
inc
cli
sar
cltd
sahf
sbb
xchg
cmp
mov
sbb
scas
fcomps
jg
inc
gs
jbe
inc
fdivs
jno
xchg
pop
lock
sub
lahf
push
ret
push
jg
mov
out
stc
insb
ret
dec
test
mov
loopne
in
paddsb
fs
sub
push
add
xor
add
add
jl
push
lods
setg
jecxz
cld
inc
sarl
sbb
sub
cmpsb
leave
ss
std
call
mov
jg
addr16
sbb
adc
jl
mov
fisubs
jne
cld
push
aam
sahf
adc
or
cmpsb
fiadds
aaa
pop
pop
push
shlb
fs
pop
mov
outsl
jno
sarb
push
mov
jg
int
aam
sub
xchg
call
insl
mov
lea
rorb
jno
sub
jle
sbb
cmovns
jmp
cmp
mov
push
adc
dec
loop
xchg
cmc
ljmp
cmpsl
mov
stos
int
jns
add
shll
mov
xor
sub
jle
mov
push
and
pop
add
and
cmp
sub
movsl
cmp
sub
inc
cmp
and
pop
jbe
push
mov
pop
outsb
scas
insb
pop
sub
jbe
xchg
and
push
cmp
shlb
imul
and
mov
addr16
jl
in
cltd
clc
fsubl
lods
push
inc
shlb
add
lret
mov
xor
jge
sbb
push
call
pop
dec
jp
lock
pop
lcall
sbb
dec
scas
lock
jbe
hlt
loope
pop
imul
cmp
xchg
arpl
adc
fisubrl
push
repz
scas
mov
adc
inc
jl
xor
pop
mov
rcrl
fisubs
in
seto
pop
in
mov
imull
or
lret
data16
adc
pop
into
push
movsl
aad
fisubrl
mov
insl
sub
push
cmp
xlat
push
mov
inc
pop
sbb
mov
adc
sbb
and
sti
mov
es
roll
pop
test
mov
fs
mov
dec
iret
leave
loop
bound
je
hlt
mov
cmpsb
repnz
sub
out
or
xor
pop
pop
sahf
lret
test
add
ja
ret
sbb
add
cmpsb
mov
cmp
adcl
outsl
sbb
mov
mov
and
popa
sub
inc
std
stos
or
push
jmp
push
mov
outsl
into
pop
xchg
std
xor
xlat
repnz
stc
jae
stos
add
mov
jle
insb
in
sar
popa
xor
pop
test
jg
lcall
and
adc
or
fadds
jecxz
movsl
pop
repz
insl
xchg
out
in
data16
ret
inc
test
fists
insl
mov
cmp
and
call
clc
add
int
into
addr16
into
adc
sub
enter
pop
inc
loopne
pop
xor
add
jl
xchg
lods
mov
adc
inc
ret
rcrl
cwtl
test
sti
je
stc
sarb
cmp
cmpsb
imul
xchg
mov
xor
lcall
sub
or
pop
gs
xor
or
xor
cld
push
inc
xor
dec
sbb
negb
daa
jg
sub
mov
js
mov
mov
repnz
arpl
or
cmp
mov
jg
cmpb
insb
call
adc
lods
jb
cmp
stos
or
and
imul
add
dec
mov
push
mov
shl
sbb
mov
jge
fcoms
fistl
push
daa
in
or
mov
loop
push
adc
or
sub
in
jnp
jne
xor
in
and
push
push
adcb
jp
and
or
add
push
ja
jge
movsb
cld
xchg
lds
mov
mov
lret
add
fstpl
pop
scas
push
mov
sub
ja
test
cmp
sbb
xor
push
pushf
adc
or
xchg
push
push
push
filds
test
xchg
xchg
pop
mov
test
cwtl
jmp
popf
sahf
push
dec
test
sub
test
fcmovbe
bound
cmp
pop
jecxz
ljmp
adc
cmc
hlt
pop
cmpsl
test
lock
lahf
xor
inc
xchg
sub
iret
xchg
out
sbb
addr16
adc
mov
repnz
dec
pop
jg
jno
scas
cmp
hlt
mov
mov
arpl
mov
or
out
push
push
mov
xchg
and
inc
pop
pop
push
in
mov
adc
dec
add
and
mov
mov
xor
or
outsl
shrb
cmpsb
adc
lcall
leave
jge
sti
inc
and
xor
rcrl
sbb
pop
dec
inc
out
cmpsl
leave
sbb
push
repz
inc
popa
dec
jae
mov
or
hlt
mov
popa
icebp
dec
shrl
xor
data16
std
xchg
xorl
sti
jmp
sbb
je
fs
mov
pop
or
jo
icebp
mov
fwait
and
xchg
ret
dec
sbb
xor
sti
mov
cltd
pop
xchg
pushf
sahf
pop
xlat
rorl
roll
add
and
loop
xchg
jecxz
mov
movsl
cld
mov
mov
cmp
sahf
push
test
js
sub
mov
lret
loop
xchg
xor
in
movsb
ja
movsl
mov
mov
ret
xchg
add
cld
xor
xchg
dec
and
aam
sub
and
aam
cltd
dec
ss
dec
fists
clc
jns
pop
in
adc
data16
mov
adc
es
pop
insb
out
scas
or
sbb
jno
imul
rorl
adc
fwait
imul
test
xor
shl
push
aaa
bound
je
mov
imul
add
cmp
into
stc
roll
pushf
push
pop
ret
stc
fsubl
and
icebp
call
pop
lcall
jecxz
fstpt
ss
movsl
lret
cmpsb
daa
jge
sub
jns
test
push
mov
jnp
cmpsl
pop
dec
into
and
xchg
inc
pusha
mov
shlb
test
ds
sbb
add
ljmp
fstpt
mov
loop
sbb
lods
jns
pop
push
in
push
cmp
xor
xchg
push
push
cltd
jb
add
scas
test
cmp
pop
and
jne
cs
adc
addb
divb
std
inc
mov
imul
mov
sub
push
xchg
sbb
cli
cltd
mov
shrb
and
adc
xchg
ljmp
add
inc
adc
mov
mov
das
cmp
ss
sbb
mov
lock
addr16
pop
shlb
je
cmp
sbb
xor
or
aas
loop
pop
pop
mov
inc
stos
ret
mov
test
mov
ret
mov
sbb
lods
pop
and
mov
jnp
icebp
sub
fistps
mov
rcrb
adc
add
xchg
lds
inc
inc
mov
lds
jb
lea
orl
je
outsb
adc
das
inc
out
inc
fsubl
cmp
scas
nop
cmp
je
lock
pop
cmpl
and
sub
inc
push
imul
jle
sahf
enter
xchg
frstor
aam
fnstsw
jmp
mov
mov
ds
dec
orl
imul
scas
push
call
sarb
jo
loope
int
aad
shrl
fimuls
lods
mov
push
ficomps
pop
jmp
pop
ret
aad
pop
notl
mov
nop
test
insl
aam
push
bound
lock
lods
outsl
pusha
test
and
std
mov
jmp
jo
cmp
hlt
add
xchg
cmpl
fdivr
les
add
push
mov
pop
inc
add
inc
push
cmp
outsl
arpl
cmp
jmp
jmp
xor
mov
sbb
xchg
arpl
fld
sub
out
mov
dec
adc
jno
jecxz
fsubp
mov
cmp
test
xchg
movsb
adc
pop
xchg
or
or
mov
fstps
jmp
out
add
cmp
dec
mov
jmp
fdivs
rorb
out
adc
mov
arpl
mov
arpl
int3
adc
xor
pop
sti
fstpl
mov
lods
inc
jge
xchg
pop
adc
push
add
movl
int3
jl
jmp
jbe
pop
pop
push
pop
lods
xchg
test
ja
add
dec
push
mov
or
push
jo
sub
pusha
jb
lret
sbb
stos
and
add
movsb
xlat
pop
faddp
mov
out
in
jb
cmp
lcall
popf
lahf
test
ljmp
mov
imul
jge
fisttpl
lahf
pusha
ljmp
sub
mov
inc
lock
dec
int
sti
sbb
in
outsb
sbb
test
movsb
aaa
imul
ljmp
dec
add
xchg
daa
fdivs
jnp
push
xchg
adc
insl
xchg
lcall
xor
cmpsb
push
pop
xchg
xor
inc
aam
jo
sbb
mov
shlb
fsts
clc
mov
mov
stos
cmp
or
dec
mov
sahf
xchg
test
mov
push
xorl
es
gs
mov
sti
inc
xchg
add
mov
hlt
pop
cs
mov
xchg
inc
icebp
jns
mov
pop
loope
pop
int
rorl
jmp
cli
xchg
jmp
xchg
in
pop
movsl
je
pop
jp
xor
push
fidivs
test
insb
mov
push
std
stos
pop
xor
fsubrl
or
push
les
mov
add
push
mov
push
scas
arpl
add
mov
int3
adc
rolb
stc
ss
int
cmp
xchg
or
addr16
sbb
insl
hlt
or
rorl
mov
mov
pop
adc
xor
sbb
out
in
ja
imul
mov
faddl
and
sub
icebp
sbbl
mov
popl
push
test
lock
sbb
cmc
das
add
mov
lret
mov
mov
clc
pop
xchg
cmpsl
dec
xor
mov
adc
stos
xchg
std
mov
xlat
add
mov
mov
fucomp
push
sbb
dec
int3
popa
adc
insb
add
adc
mov
push
add
pop
shr
adc
rorl
lea
dec
into
jmp
loopne
test
mov
test
fisttpl
mov
ret
cmc
loop
pop
fsubrl
fisttps
sub
jns
mov
cld
or
outsl
in
stos
pushf
lcall
inc
mov
sarl
ja
cmpsb
inc
pop
stos
cmp
div
das
imul
push
jne
fisubrl
push
cli
shrl
and
jg
or
fidivs
xchg
jg
add
and
popa
inc
mov
lret
outsl
inc
es
xchg
mov
push
int
scas
pop
or
fbld
adc
push
scas
lea
rolb
push
lea
cmc
hlt
popf
test
sub
out
subb
push
aaa
test
stos
aad
repz
adc
in
inc
mov
inc
test
stc
rol
cs
jbe
mov
xlat
jno
push
xchg
xor
gs
xchg
mov
or
call
mov
mov
or
add
iret
mov
divl
jo
mov
leave
aad
es
inc
xor
gs
into
inc
popf
mov
repnz
push
pusha
les
scas
inc
or
loope
arpl
xchg
clc
adc
dec
cmp
jl
push
mov
jecxz
icebp
pop
inc
xor
or
adc
dec
mov
xchg
add
push
ds
add
iret
addl
inc
shrl
cmpb
cmp
mov
inc
das
adc
pop
xorb
push
pop
stos
mov
aaa
xchg
ret
mov
dec
cmp
pushf
out
std
sbb
sbb
xchg
fildl
out
sub
lahf
dec
cmp
push
push
lods
in
ret
inc
movsl
cmpsb
nop
ret
ret
lcall
xor
xchg
inc
test
movsl
pop
inc
sub
mov
stos
or
into
fadd
out
shr
and
and
sar
jle
add
mov
js
pop
push
mov
clc
jmp
adc
pop
in
sysenter
ret
sbb
xor
sub
push
notl
fsubrs
in
fucomp
nop
sub
xor
mov
mov
bnd
mov
lods
add
iret
push
mov
imul
jl
movsl
xchg
inc
mov
push
jmp
sarb
sbb
loope
loopne
xchg
hlt
stos
movsb
lds
dec
add
jno
rcr
mov
sbb
dec
push
sbb
scas
das
cmp
loope
mov
jae
insb
and
cltd
ret
mov
pop
adc
mov
inc
aaa
hlt
jne
aam
addr16
sbb
jge
dec
xor
int3
inc
add
lret
lock
hlt
stc
xchg
jbe
mov
push
aam
mov
jmp
adcl
test
jg
repz
adc
call
ss
repnz
push
lock
sahf
lret
out
sar
arpl
in
inc
out
jb
cwtl
addr16
pushf
and
pop
popf
mov
mov
add
inc
shll
jae
xor
xchg
jae
sbbb
fs
lods
add
filds
ret
enter
add
cmc
and
mov
adc
fstl
inc
mov
sub
or
jnp
cwtl
gs
pop
jge
in
rcrb
or
neg
lods
dec
roll
push
push
xchg
push
stc
add
jb
leave
es
mov
inc
push
pop
js
or
clts
int3
inc
jp
icebp
loopne
xorl
inc
mov
cwtl
data16
mov
push
jle
push
dec
xor
add
add
mov
xchg
adc
pushf
inc
cmp
outsb
or
pusha
xor
out
push
dec
push
cld
adc
xor
xor
mov
mov
pop
js
xchg
cmpsl
iret
les
push
into
repz
inc
jecxz
xor
stos
shl
pop
in
sub
cmpsb
sub
sub
push
movsl
adc
loope
pop
pop
lea
jp,pt
cmp
ja
jbe
add
loop
mov
cmp
sbb
jbe
adc
js
jmp
inc
std
repz
icebp
mov
xchg
stos
push
repnz
and
and
pop
mov
jo
and
xor
stc
and
unpckhps
rep
mov
in
in
ss
adc
pop
adc
dec
lods
mov
dec
leave
sbb
aad
stos
mov
je
xchg
pop
lahf
subl
adc
pop
inc
sub
test
sbb
lock
fldenv
and
and
xor
outsb
mov
sub
pop
cli
mov
loop
cld
add
inc
cmp
pop
sti
dec
lcall
cmpsb
je
pop
jno
daa
test
dec
mov
lods
cwtl
sbb
mov
scas
ds
js
lret
gs
push
je
inc
push
pop
pop
pushf
cld
mov
pop
jge
cmp
mov
mov
jnp
imul
hlt
push
jg
jno
xlat
xchg
add
int3
jae
arpl
dec
push
dec
cmp
push
stos
pop
add
test
dec
mov
push
cmpsb
ficompl
mov
je
divb
movsl
int
inc
orl
mov
sbb
lret
pop
add
lods
pop
mov
inc
inc
cmp
adc
ja
hlt
ja
fstl
shrl
data16
cli
jle
or
dec
cwtl
repnz
push
rcll
mov
adc
inc
hlt
outsb
sub
dec
rcr
ja
and
dec
lods
inc
and
iret
inc
push
ja
mov
cmpsb
dec
addb
rcrb
add
or
cmpsb
arpl
aas
test
and
add
cmp
or
das
or
or
les
jmp
mov
in
scas
ficoml
jo
mov
shrb
lahf
mulb
cmp
mov
xchg
sub
jl
lock
rorl
sub
push
xorl
or
push
int
pusha
fsubp
or
fldln2
fists
and
cs
aam
adc
dec
and
jle
aaa
mov
adc
inc
push
mov
mov
dec
pushf
sub
shlb
aaa
xchg
jbe
add
aas
roll
add
mov
outsb
jl
dec
shll
mov
push
dec
rolb
adc
mov
loope
movsb
cs
mov
test
adc
bound
into
dec
arpl
jae
ret
mov
stos
scas
or
stos
sbb
cmc
and
mov
pop
dec
sahf
pushf
cmpsb
xchg
mov
pop
mov
xchg
cmc
jle
insl
je
jmp
leave
inc
ss
jb
adc
jbe
inc
stc
data16
mov
dec
jb
mov
stos
int3
rorl
push
adc
orl
popa
push
popf
cmc
gs
shlb
inc
jg
inc
mov
fcomps
dec
mov
lock
pushf
aas
mov
lret
sbb
cwtl
pop
push
jne
add
insb
pop
fwait
into
cmp
push
stos
inc
loopne
add
jecxz
gs
mov
sub
aaa
push
mov
popa
cli
jle
movl
cmp
fcmovnbe
xchg
jp
rclb
mov
insb
push
lcall
rclb
pushf
scas
das
jp
test
or
jbe
add
xchg
adc
push
mov
es
movsb
sbb
cmovns
push
pop
sub
and
sub
mov
push
and
mov
pop
xchg
mov
pop
les
cmp
or
or
loopne
mov
aam
mov
mov
bound
pop
pop
dec
or
mov
push
or
test
bound
sbb
dec
scas
sahf
xchg
xlat
repz
mov
add
int
xchg
stos
jg
std
dec
mov
loope
xchg
xchg
out
int3
adc
and
jp
add
cmp
cmp
sub
mov
ret
or
orb
repnz
mov
mov
cmp
or
fiadds
std
and
in
push
pop
cmp
sbb
sbb
sbb
xor
out
jmp
and
dec
or
testl
and
adc
call
fwait
push
push
pop
xchg
dec
loope
std
sbb
in
push
in
lods
lods
jo
mov
xor
mov
add
mov
imul
scas
dec
push
roll
dec
push
leave
shrb
ffree
and
fildll
sub
jnp
cmp
rsm
inc
push
mov
push
cmc
sarb
dec
pop
push
sti
cmp
mov
sub
mov
jl
ds
cmp
sub
in
xchg
add
arpl
pusha
shrl
jle
pop
mov
xor
outsl
jp
hlt
xchg
js
cli
sahf
das
add
sub
call
xlat
ss
cmpsl
xchg
ror
xchg
jnp
dec
fnstenv
pop
sub
cmpsl
mov
test
clc
mov
repz
sub
pop
inc
fsts
les
xlat
les
daa
rcrb
stos
cli
adc
insb
sbbl
ret
add
cltd
dec
fmul
stc
loop
sbb
pop
inc
stos
push
inc
nop
push
loopne
sbb
add
sub
fadds
jl
js
cmpsl
cmpsb
mov
pop
or
aas
cld
dec
shr
xchg
das
dec
cmc
mov
and
xchg
mov
add
and
mov
dec
and
mov
lret
lods
xor
repz
cli
movb
imul
jg
andb
or
std
fistl
lods
test
sbb
add
adc
inc
push
add
pop
xchg
inc
std
mov
push
mov
push
cmp
push
out
aaa
dec
int3
or
adc
imul
sub
in
add
jmp
xchg
ds
lahf
and
cli
les
daa
mov
adc
mov
es
sar
mov
lret
adcb
and
jnp
mul
mov
idivb
shrl
mov
and
inc
jmp
shrb
or
dec
mov
fucomi
push
lcall
jnp
cmp
nop
mov
sub
and
xchg
pusha
outsl
xchg
push
inc
mull
cld
loopne
push
aad
fstps
pusha
dec
pop
rol
bound
sbbb
xchg
lahf
dec
mov
inc
les
das
inc
xchg
movsl
out
ds
mov
cmc
repz
push
adc
adc
fsubrs
jns
dec
fdivr
enter
xchg
adc
scas
or
int3
das
test
push
push
lods
les
xchg
stc
xor
push
nop
dec
cmp
scas
aas
pop
mov
sbb
mov
inc
iret
xchg
in
and
addr16
sbb
outsl
sbbl
out
dec
cltd
xchg
mov
dec
test
lods
or
inc
push
cli
int
hlt
fsub
imul
test
bound
mov
and
add
xlat
mov
xchg
and
and
mov
lret
mov
fistl
insl
xor
jle
shrl
int3
cli
jle
cmpb
jb
std
push
rolb
clc
stc
xchg
mov
jb
dec
ret
push
cmp
mov
outsb
std
mov
add
arpl
in
ret
push
adc
sub
sub
scas
mov
dec
jp
mov
xor
xor
dec
cltd
sahf
jns
push
dec
ret
gs
stos
int3
and
jg
rclb
push
das
xchg
aaa
add
adc
stc
mov
sbb
inc
mov
jl
imul
xchg
push
dec
or
pop
test
sub
add
or
jo
add
xchg
dec
lret
decl
test
jae
push
addr16
dec
and
test
push
test
shll
rcl
push
lcall
mov
lods
movsl
cmpsl
cld
adc
adc
out
jae
aad
pop
or
dec
mov
jp
int3
sub
jns
sub
inc
mov
cmp
lods
cwtl
ret
into
pop
pop
ret
xadd
rolb
adc
or
rclb
mov
rclb
xchg
sub
add
fcoms
shrb
xor
inc
rclb
leave
out
out
fdivl
nop
mov
push
fsubs
jb
sub
gs
in
sub
or
pusha
mov
ds
push
sti
pop
daa
jne
aad
add
test
jnp
xlat
xchg
jb
ljmp
stc
push
jmp
loop
es
dec
jmp
jae
mov
cmc
xor
dec
jae
fsubrl
gs
daa
addl
adc
loop
das
jp
sub
out
repnz
mov
or
loope
mulb
cmp
or
mov
lahf
popf
add
adc
cld
pop
lahf
jp
jp
mov
mov
inc
jl
gs
dec
popf
aaa
and
lret
ljmp
adc
xchg
jmp
ljmp
sub
xchg
inc
dec
jae
xchg
int
mov
mov
movb
jo
or
xor
lock
sbb
mov
add
cmp
hlt
pop
jecxz
lahf
sbb
mov
pop
sub
jnp
lcall
leave
fstpl
pop
xchg
addr16
popf
sub
push
mov
mov
sub
cmpsl
jns
cmpl
sub
sub
sbb
dec
sbb
and
and
pop
xchg
loopne
inc
and
in
testb
mov
sub
fucomp
or
xor
jnp
std
call
mov
pop
mov
data16
mov
adc
aas
xchg
dec
popa
xchg
adc
das
js
and
lret
pusha
shrb
jmp
pop
pop
cltd
adc
jns
push
mov
mov
lret
dec
xor
and
jg
cltd
sar
push
movsl
stc
rolb
add
call
sqrtps
stos
out
lret
xchg
cmp
movsl
dec
in
sti
sti
mov
imul
in
and
mulb
pop
sti
xor
pop
xor
jae
cmpl
or
ss
add
cmp
or
in
cltd
lret
cmp
lcall
mov
mov
add
pop
mov
fbstp
pop
cmp
xchg
jnp
xor
or
das
add
xchg
mov
enter
shlb
hlt
lock
xor
mov
cmp
xchg
jmp
cmp
jae
sbb
repnz
push
jb
jo
cmpl
dec
pop
mov
xchg
lret
out
aaa
data16
fstps
aam
fbld
cmp
les
and
jb
loop
sahf
mov
sub
pusha
jno
xor
add
pop
mov
jb
out
test
adcb
mov
loop
aam
vpsrlw
push
cmpsl
out
cmp
mov
aas
push
and
inc
lcall
xor
mull
push
test
shlw
outsb
mov
stos
pop
push
insb
mov
rorb
mov
std
sub
outsl
push
cmp
repnz
sahf
dec
ret
js
push
jnp
sbbl
add
xchg
and
arpl
mov
jmp
enter
add
je
sbb
mov
sub
mov
out
loopne
pushf
xchg
out
push
les
mov
movsl
xor
popf
ret
iret
jmp
push
movsb
xchg
xchg
dec
ret
pushf
sbb
lods
rcll
jecxz
data16
loop
cld
xchg
inc
lret
xor
mov
icebp
lds
pop
cmp
xlat
lahf
sbb
in
jl
push
loope
test
adc
int
loopne
mov
arpl
aas
idivb
mov
or
int3
pop
stos
xchg
enter
lock
mov
cmpl
xchg
rclb
add
sub
lods
repz
xchg
js
rcll
repz
popf
shlb
dec
and
sub
jbe
fcoml
in
inc
or
inc
pop
sub
jle
pop
dec
imul
adc
jno
pop
sub
roll
mov
cmp
mov
cmpsl
nop
fstps
cmp
push
inc
mov
mov
pop
inc
pop
inc
xchg
dec
mov
aas
jae
or
repz
je
cmpsb
lahf
mov
repz
and
sub
mov
sbb
add
sbb
sbb
lret
aad
daa
mov
mov
lods
and
xchg
mov
popf
test
push
sub
mov
pushf
dec
aam
mov
pop
aaa
push
ret
jge
lcall
or
xor
xchg
addl
sub
pushf
dec
sub
or
xchg
gs
lods
fdivl
pushf
dec
cmp
fisubl
mov
sarl
sub
mov
scas
push
sbb
sub
stos
loop
orb
push
jecxz
cwtl
sbb
pop
inc
xor
test
cli
dec
jl
push
pop
vfmaddpd
add
gs
mov
decb
fidivl
repz
aas
int
xor
pop
fnstcw
ljmp
sbb
sbb
inc
stc
in
addr16
jg
dec
test
cmp
jo
pop
pushl
xchg
add
sub
aad
inc
dec
int
mov
sub
jmp
push
or
iret
inc
add
lret
imul
je
in
bound
push
inc
out
pushf
and
mov
mov
mov
fcom
dec
push
add
mov
add
jno
inc
int3
jle
ss
inc
sub
mov
mov
mov
mov
in
or
es
xor
push
mov
or
popf
ja
mov
enter
pop
sub
orl
and
mov
sahf
and
dec
imul
lret
enter
cld
fisttpl
xchg
jo
mov
xchg
mov
lock
test
and
cli
jb
jmp
dec
cmp
push
adc
aaa
pop
push
sbb
jp
scas
and
cmc
sti
mov
sub
fcompl
adcb
jle
sbb
mov
dec
les
mov
fldl
sub
mov
push
fdivs
cmp
xchg
mov
mov
mov
mov
test
and
cmpb
test
lret
ja
sbb
and
arpl
ja,pn
cltd
fsubrs
cmp
outsb
fcoml
pop
or
inc
xor
mov
hlt
mov
cmp
and
sti
test
xor
inc
mov
pop
pop
adc
mov
je
pop
stc
es
dec
mov
push
sub
push
and
iret
pop
test
xor
addr16
mov
fidivrs
cltd
lcall
into
mov
shll
aas
lss
dec
cli
aam
cmpsl
mov
subb
fisubs
dec
pop
inc
scas
insl
sbb
cmpb
cli
xor
dec
or
or
les
mov
xor
sbb
xor
stc
call
lods
lods
mov
push
xlat
rcll
jne
inc
lea
cmp
push
and
mov
xor
sbb
les
insb
sbb
ret
xor
mov
jae
lcall
cmp
pop
lea
in
movsb
and
jns
scas
mov
es
mov
push
xchg
xchg
iret
fcomip
push
fisttpl
and
jmp
adc
ss
adc
test
dec
mov
fwait
sub
data16
cld
out
add
inc
in
inc
enter
das
add
push
inc
sub
sub
add
sbb
sbb
pop
jae
stos
pop
ss
or
pop
cwtl
cwtl
or
dec
pop
and
ret
pop
fidivrl
jecxz
in
xor
dec
ljmp
mov
sbb
pop
aaa
sbb
jge
sub
movsl
lock
fimull
dec
adc
add
addr16
pop
xchg
aaa
sbb
push
fsubl
das
jmp
mov
xor
movsb
or
mov
gs
push
lods
add
lods
fldcw
inc
and
pop
mov
sub
dec
fnstcw
fcoml
data16
sahf
sbb
or
test
push
jo
je
inc
lock
mov
mov
shlb
ds
inc
inc
xor
mov
es
and
sti
jno
and
int
mov
jmp
cmpsb
inc
sub
or
sbb
cmp
sub
in
or
xchg
mov
mov
repnz
or
mov
addr16
clc
dec
inc
pop
mov
inc
out
out
mov
push
push
jns
dec
xchg
faddl
jo
add
or
mov
adc
mov
fbld
fcmovne
fs
push
mov
sbb
insb
movsl
in
adc
cli
testb
je
lods
lock
rcll
popf
mov
icebp
rol
dec
jno
ss
cs
mov
adc
mov
movsl
test
xor
and
mov
or
test
jne
jno
push
lods
popf
push
enter
pop
inc
xchg
pushf
or
adc
insb
adc
mov
xchg
add
fwait
imul
loope
js
aaa
push
mov
ret
and
push
cmpb
inc
sbbl
adc
jae
xchg
iret
ss
aad
push
mov
lock
pop
cmp
pop
push
or
fdivs
fidivrs
fsub
cltd
or
fsubrl
insb
scas
or
lock
test
xor
dec
jle
adc
fisubl
outsb
mov
test
cmp
or
dec
mov
rcrl
add
test
call
sub
enter
adc
mov
xchg
hlt
or
test
and
jnp
adc
or
mov
adcb
sbb
shrl
cmp
jno
mov
mov
sub
adc
lods
roll
add
rorl
rolb
cltd
lret
in
popf
out
call
dec
or
dec
mov
sub
prefetch
pop
cmp
xorl
mov
das
inc
mov
push
ret
out
iret
add
push
je
sbb
jb
lcall
jmp
adc
add
insl
jno
insl
mov
pushf
pop
cmp
pusha
and
push
push
mov
test
shrb
pusha
cmp
cs
pop
stc
sbbl
stc
sub
adc
sahf
pop
inc
pop
les
and
es
xchg
in
mov
push
ja
sub
sbb
ret
mov
pop
and
imul
hlt
jg
in
out
inc
add
add
or
js
mov
fst
aad
ds
test
push
dec
lods
mull
jns
insb
pop
mov
das
loopne
pop
ss
and
inc
mov
call
cmp
dec
sarl
jmp
push
ret
pushf
lods
insb
mov
pop
subl
in
test
or
xlat
test
mov
mov
in
cld
sahf
fcomps
pop
pop
and
lods
shrb
mov
lds
mov
push
sarb
stos
popf
add
insb
adc
cmp
push
push
scas
jb
xchg
test
std
push
sub
jl
fnstenv
xchg
in
adc
lods
xchg
inc
out
addr16
pop
xor
dec
xor
imul
push
push
ss
outsl
xor
cmp
lock
mov
inc
inc
mov
pop
mov
cli
das
in
cmc
push
push
inc
push
rcrb
iret
shl
outsb
mov
adc
sbb
inc
or
incl
iret
pop
fisttpll
cwtl
mov
inc
sbb
clc
enter
push
dec
rcrl
sbb
mov
fnstenv
es
ljmp
xchg
add
out
mov
cmc
push
xchg
pop
inc
cmp
pop
mov
js
pop
out
cmp
shll
loopne
or
mov
stc
push
hlt
push
cmc
imul
aas
test
fs
lods
cmpsl
sub
dec
clc
mov
mov
cs
jnp
ret
sub
inc
das
cmpsb
call
lret
aaa
dec
cmpsb
in
jae
jmp
mov
clc
and
ja
jbe
sub
repnz
and
jne
fnstsw
jge
inc
loopne
add
in
pop
jbe
push
push
or
adc
shll
loop
in
sub
lcall
fimuls
ss
cld
cmp
push
cmpsl
mov
push
xchg
mov
inc
mov
filds
fstpt
cmp
mov
es
psubsb
mov
or
adc
out
orl
mov
out
push
inc
mov
mov
push
mov
out
push
sub
mov
imul
ret
xor
and
xchg
aam
das
sbbl
std
mov
mov
ret
mov
shlb
mov
xlat
jo
push
inc
enter
arpl
out
adc
lcall
adc
push
fsubrl
push
fs
dec
or
inc
xor
out
fstps
cmc
add
inc
jno
adc
in
pushf
cltd
push
aad
push
mov
jns
jbe
jno
pusha
pop
icebp
sub
mov
rcll
push
out
fidivrl
mov
jmp
shl
pop
sbb
inc
les
push
mov
rcrb
push
fmuls
ljmp
xchg
jp
jg
add
pusha
cwtl
push
inc
push
icebp
add
mov
and
sub
int
dec
sbb
push
shlb
sbb
adc
sbb
mov
sbb
jmp
shrb
cmp
pop
dec
pop
jp
rclb
popf
push
dec
hlt
and
mov
or
loope
xor
add
outsb
pop
mov
sahf
out
push
inc
adc
push
inc
adc
sti
xchg
mov
fistl
xchg
inc
fcomps
push
sahf
inc
mov
in
shlb
rcl
mov
or
cld
stos
cmpsb
inc
leave
lock
leave
imul
cmp
cmc
mov
icebp
mov
fidivl
sbb
jb
cmpsl
xor
xchg
shlb
std
scas
xor
xor
add
xchg
pushf
and
in
repnz
lea
ss
nop
out
ljmp
pop
and
cmp
mov
fisttpll
push
insb
jmp
neg
rorb
dec
cs
int3
mov
sub
jmp
lock
jl
push
insl
std
fucompp
inc
in
lods
icebp
outsl
pusha
cmp
jge
and
mov
inc
xchg
and
push
nop
cmp
ds
sarb
mov
shrl
icebp
loope
scas
test
push
aaa
mov
ret
and
adc
cmpsl
sbb
imul
add
push
adc
rorl
or
arpl
mov
rorb
out
add
xchg
jp
and
iret
inc
jnp
leave
int
test
ljmp
adc
daa
push
scas
mov
mov
das
or
out
xor
insl
ret
xor
lock
add
push
mov
outsl
icebp
sbb
pop
add
xchg
pop
imul
mov
xor
rol
scas
pop
out
nop
test
mov
jo
jb
hlt
in
stos
inc
xor
and
and
add
sub
fmulp
aas
or
cmpl
out
out
into
add
push
pop
jbe
fildl
mov
inc
adc
into
adc
std
outsl
jecxz
jbe
in
push
rolb
mov
sbb
into
mov
fwait
xchg
int3
sti
and
or
in
mov
jnp
sbb
cltd
pop
push
jbe
push
fdivrs
mov
lods
adc
call
popf
mov
test
mov
out
and
aam
add
call
cmp
shr
sub
sbb
cmpsb
jge
pop
fstps
pop
call
or
ret
jge
ds
scas
imul
frstor
cmp
lea
dec
nop
and
push
sub
sbb
pop
repz
and
sub
les
pop
xlat
xor
cmpsl
adc
jne
or
enter
fiaddl
sbb
pop
int3
dec
mov
add
mov
cmp
or
xor
shlb
xor
out
inc
fisubrs
and
jbe
push
aaa
pusha
andb
sub
inc
jg
fimuls
divb
cmp
loopne
push
addr16
stos
cmp
jecxz
loope
xorl
jb
lret
xchg
outsl
xchg
and
scas
xchg
in
cmpsl
xchg
cs
dec
cmc
loopne
dec
add
mov
mov
mov
or
mov
mov
dec
pushf
pop
xor
fisttpl
mov
int
jmp
test
inc
stos
jns
jmp
fistps
add
push
sub
adc
clc
add
inc
sti
pop
fs
in
fwait
mov
repnz
rcrl
push
sahf
pushf
mov
xlat
repz
dec
es
fldl
mov
lahf
into
jnp
pop
popa
push
rdpmc
inc
sahf
adc
flds
pop
icebp
jns
cltd
pop
in
ljmp
arpl
pop
dec
pop
jb
test
add
out
pop
or
in
jne
mov
or
dec
aaa
repz
jae
xchg
loop
xchg
xchg
or
addl
mov
ret
repnz
das
imul
dec
pop
fidivrl
je
pop
and
imul
sub
jg
dec
sti
sub
aaa
out
fs
mov
scas
or
dec
add
outsb
fistps
mov
sub
push
int3
mov
mov
cwtl
fistpll
inc
cmp
dec
cld
sub
cltd
xor
dec
out
leave
mov
cmp
pop
jl
cmc
clc
inc
mov
call
add
lods
inc
and
lods
jle
out
mov
in
testb
cmpb
and
int
imul
lret
push
mov
xor
ljmp
int3
inc
sti
in
loop
out
jne
out
andl
out
or
cli
dec
les
jo
inc
shrl
cmp
and
fwait
loop
mov
testl
cmp
and
pop
jbe
push
pop
sub
pop
jb
jae,pn
outsb
or
push
and
arpl
out
fcomp
lahf
testb
pop
cmc
mov
aas
pop
mov
jl
lret
mov
dec
sbb
xor
roll
dec
std
out
or
jge
bound
mov
aam
fdivrl
or
dec
pusha
enter
es
add
mov
adc
test
lods
jne
movsl
mov
es
enter
cmp
shrb
jmp
xchg
jno
dec
roll
push
fnsave
stc
and
add
int
out
push
mov
cmp
lcall
or
xchg
cld
insb
cmp
pushf
inc
in
sub
imul
xor
inc
mov
clc
in
fmuls
divl
push
test
fmulp
data16
mov
data16
pusha
pop
mov
in
dec
sbb
dec
cli
cmpsl
jno
jg
adc
fbstp
mov
hlt
dec
fldenv
mov
scas
stos
lahf
into
pop
adc
inc
cmpsb
mov
fistpl
sub
jo
stos
into
out
pop
orl
loopne
test
cmp
mov
andl
inc
xlat
out
mov
popa
jb
in
loop
repnz
cld
jmp
cli
jns
xchg
mov
mov
mov
stos
rcll
push
jmp
inc
mov
mov
iret
movsl
add
dec
int
nop
bound
rorb
cmc
inc
lods
adc
dec
cmpsl
daa
mov
add
rclb
andb
pop
mov
in
sar
aas
inc
jno
and
jg
lret
bound
cmp
scas
push
xor
in
subl
decl
icebp
test
mov
inc
repnz
inc
fildl
lds
jnp
lcall
shrl
and
mov
cmpsl
jns
test
pop
hlt
xchg
lret
fldz
and
pop
sbb
ds
pavgb
inc
jp
mov
insl
ljmp
jecxz
pop
adc
adc
out
fbstp
xor
inc
lds
pop
scas
mov
aaa
adc
fs
fimuls
mov
push
adc
cmpsb
loope
push
enter
cld
mov
adc
cmp
lods
cwtl
lret
xor
push
cli
and
mov
lods
jecxz
imul
adc
pop
and
add
sbb
scas
fiaddl
roll
and
jb
aam
mov
ss
push
pop
xlat
icebp
lods
push
and
test
aaa
filds
hlt
push
add
adc
dec
cmp
lods
or
scas
jp
mov
test
sbb
xor
mov
dec
gs
in
inc
inc
outsl
xchg
lret
mov
and
int
call
xchg
data16
and
mov
inc
fwait
cmpsl
lods
xchg
mov
shlb
jbe
mov
dec
xor
xrelease
sbb
call
outsb
popa
push
fldl
lods
int
movhps
cwtl
pop
outsb
pop
mov
aad
and
cmc
dec
pusha
pop
push
mov
or
out
sub
into
in
fs
test
add
dec
mov
in
sbb
mov
add
movsl
mov
push
pop
push
lahf
shll
push
cmp
pop
cs
lods
adc
ja
fsub
and
out
daa
je
out
lret
add
icebp
pop
dec
icebp
dec
cmp
mov
xor
imul
adc
aas
into
faddl
push
cmp
inc
add
lea
and
call
daa
ret
push
in
arpl
adcl
arpl
js
fildll
cld
movsb
scas
xlat
sbb
aad
push
xor
leave
jo
adc
dec
sti
mov
daa
jmp
rolb
xchg
lcall
sarl
jae
xchg
mov
stc
add
mov
and
into
in
and
ds
arpl
mov
in
ljmp
ret
xor
add
sbb
repz
or
gs
push
shlb
sbb
jmp
mov
sarl
call
or
insl
mov
inc
adc
ret
icebp
loopne
xor
mov
ss
inc
rcll
jnp
jns
mov
cmp
jle
je
mov
shll
jmp
test
repnz
xchg
inc
lock
pop
adc
lret
or
cmp
in
pop
pop
mov
cmp
xor
out
call
dec
inc
lcall
fbld
or
cmp
jb
xchg
xchg
ds
mov
push
out
scas
mov
push
jmp
pop
push
mov
pop
lcall
outsb
cmpsb
inc
les
mov
add
sub
stc
lock
pusha
sub
mov
mov
aaa
stos
outsb
push
arpl
sahf
cmp
mov
adc
push
xchg
ret
pop
icebp
dec
bound
inc
cltd
add
cmp
rclb
mov
mov
xor
adc
jmp
je
or
pop
clc
mov
sub
popf
push
lcall
xchg
xchg
ret
jns
in
mov
mov
test
decl
inc
movsl
add
push
adc
mov
ss
mov
icebp
push
ret
pop
push
clc
js
mov
test
sbb
iret
mov
pop
lret
jg
ror
mov
sbb
into
roll
pop
pop
dec
lock
rorb
push
and
movsl
cmpsb
and
cltd
xor
fisttps
push
pop
leave
mov
add
and
setne
mov
pop
in
adc
cmp
and
loope
pop
add
movsb
shl
in
adc
mov
in
out
leave
cs
fadd
into
fs
lahf
sub
shrl
aad
adc
divb
ror
fdiv
out
sub
mov
sub
xor
adc
daa
jecxz
push
and
loop
mov
inc
adc
loop
jge
das
mov
outsl
or
push
repnz
push
fwait
bound
push
add
xor
das
mov
or
inc
pushf
push
sub
fcom
and
sbb
jmp
lret
loopne
clc
mov
insb
stos
jle
pop
lods
addr16
adc
add
jmp
mov
jp
inc
and
xor
data16
bound
mov
dec
out
add
cmp
cmp
andl
push
pop
mov
daa
lock
loopne
into
mov
or
clc
jle
cli
mov
pusha
add
in
xchg
add
xchg
cmp
mov
xor
mov
and
aas
mov
inc
mov
and
roll
jbe
pop
sub
pushf
inc
cs
pop
and
aam
adc
imul
inc
pop
mov
and
fs
jnp
jp
ret
xor
movsb
and
pop
arpl
andl
popa
pushf
adc
xchg
jbe
xchg
xchg
pop
inc
stos
xchg
or
jmp
mov
sub
mov
adc
mov
subl
mov
mov
dec
and
into
pop
mov
push
hlt
and
les
sahf
mov
cmp
test
jmp
adc
and
insb
xlat
adc
push
mov
mov
xchg
mov
cmpsb
mov
jl
lea
cli
ret
and
or
sbb
or
repz
sbb
cmp
dec
enter
ret
call
pop
ret
jnp
xchg
inc
outsb
pop
ss
ja
xor
adc
in
cli
xor
and
lcall
mov
xor
dec
addr16
adcb
jle
nop
push
enter
dec
xchg
daa
inc
cmc
mov
jne
inc
daa
imul
stc
ljmp
sub
mov
lods
xchg
xchg
arpl
repnz
insb
jno
cmp
addb
cs
in
stc
repnz
jo
ss
jo
stos
jge
pop
mov
push
sbb
cmp
loope
mov
scas
test
add
out
in
or
pop
mov
repz
push
rcl
stos
iret
push
inc
into
pop
out
add
mov
lret
jmp
pop
fidivs
es
imul
leave
out
ss
xor
stos
lcall
cld
dec
cmc
test
sbb
or
mov
push
and
sbb
mov
xchg
shll
outsb
fnstsw
pushl
clc
lods
mov
std
pop
mov
stc
call
mov
mov
dec
incb
js
shlb
fsub
sub
pop
in
bound
lea
xchg
or
inc
mov
sbb
ja
adc
loope
popa
aad
lahf
jne
ds
shll
jae
adc
dec
mov
and
out
mov
jae
dec
icebp
ss
sbb
mov
fimull
fwait
xchg
clc
fs
inc
inc
and
lcall
mov
push
fdivrs
jno
pop
jge
hlt
cmp
pop
pop
lds
cli
bound
pop
and
pop
cmp
test
mov
pop
mov
testl
push
push
sub
push
arpl
fdivrl
in
push
jp
fnstenv
mov
inc
adc
cs
pusha
int3
push
addr16
sub
sbb
xor
iret
dec
dec
cmp
pop
xchg
in
mov
mov
in
pop
addr16
xchg
dec
cltd
cmovge
cld
cwtl
outsb
in
mov
push
loope
fldt
imul
or
call
mov
enter
add
mov
les
fs
pop
add
push
test
push
shrb
loop
sarb
cmp
sub
cld
push
dec
mov
gs
cmp
push
test
and
xchg
mov
decl
aad
out
cltd
push
and
or
xor
stos
or
mov
pop
and
call
pop
cmp
mov
in
xchg
arpl
sub
mov
push
adc
ret
jne
mov
mov
stos
outsb
scas
sub
int
or
out
inc
push
pop
jge
fdiv
add
push
rcr
fdivrl
in
mov
test
imull
ffreep
cmp
and
je
jmp
lcall
scas
fistpll
pushf
or
adc
cmpsl
jp
dec
and
mov
imul
inc
out
xchg
pop
mov
in
mov
xchg
mov
loopne
inc
mov
adc
pusha
jecxz,pn
cld
cwtd
dec
adc
inc
cmp
scas
mov
mov
cmc
icebp
les
pop
mov
int3
or
outsl
sub
xor
popa
ss
mov
lcall
pop
or
cld
clc
ret
dec
adc
leave
cltd
icebp
cmp
mov
xchg
rolb
lcall
pushf
fdiv
dec
push
xchg
mull
adc
test
lods
das
push
cmp
cmp
jg
cmc
jl
mov
inc
sti
test
pusha
adc
mov
xchg
xchg
pop
xor
xchg
leave
ljmp
pop
jle
out
inc
daa
repz
xchg
lcall
rcl
xor
popa
mov
mov
push
push
roll
mov
repnz
mov
shl
sub
and
dec
testb
inc
stos
cmpsl
push
mov
adc
jle
jno
fs
hlt
push
mov
sub
adc
btc
test
nop
popa
sbb
add
das
and
sbb
xor
dec
mov
add
in
int3
into
jle
dec
and
sti
jo
sbb
rcrl
xor
outsb
sbb
jmp
stos
mov
jne
mov
ss
push
aaa
dec
jmp
out
pusha
mov
mov
add
dec
pop
add
fsubrs
sarb
cmpsb
mov
push
rorb
rcr
xchg
push
in
pop
fisttpll
outsb
jle
insb
fs
dec
adc
pop
mov
add
cmp
insb
jl
flds
sti
add
mov
movsb
xchg
fnclex
adc
shlb
mov
jg
dec
jne
hlt
jecxz
loop
jbe
cltd
nop
nop
sti
ljmp
or
fistps
adc
jnp
mov
int3
daa
gs
popa
fsubs
rcrb
fisubrs
add
cltd
adc
icebp
lahf
icebp
mov
lret
loop
pop
jb
mov
imul
and
jae
pop
test
fs
xchg
js
int
jmp
lret
cli
gs
stc
cli
test
pop
loop
mov
shlb
mov
add
outsb
fimull
dec
inc
adcb
mov
mov
aas
repnz
jae
mov
inc
and
lret
mov
cmp
mov
loopne
push
stc
or
sbb
gs
les
mov
dec
push
mov
push
mov
in
mov
nop
mov
sub
idiv
outsl
or
or
ret
sbb
pop
fadds
scas
fnstsw
rcrb
cmp
pop
cmpsl
shll
sub
mov
push
adcb
jle
add
shll
lock
adcb
jle
loop
cmp
add
adc
stos
sub
stos
fistpl
fiadds
xor
sar
aaa
mov
sarb
xorb
pop
mov
out
mov
cld
adc
inc
push
aas
jno
aaa
scas
cmp
mov
jno
popa
pop
mov
pop
cltd
cmp
pop
shr
add
cmpsb
xchg
jns
outsb
mov
xchg
and
sub
add
in
mov
and
aaa
add
outsl
xchg
movsb
push
shr
shrb
adc
int3
push
cmpsb
xchg
mov
mov
movsl
push
pop
lahf
dec
cld
in
mov
mov
outsl
hlt
outsb
sar
aad
push
imul
clc
call
xchg
stos
mov
in
adc
std
jno
rorl
out
popa
outsl
lock
lods
push
ret
inc
movsb
mov
loopne
jmp
bound
push
ss
mov
loop
adc
lods
jbe
jno
jg
aaa
movsl
inc
stos
cmp
cli
in
imul
out
mov
sub
lea
dec
mov
lods
mov
push
enter
add
fidivrs
sub
lods
les
call
dec
adc
xchg
neg
sbb
iret
sub
sub
and
xor
mov
jae
dec
jecxz
out
les
jbe
pop
test
mov
in
and
test
sbb
xor
inc
les
sarb
cmpsl
popf
int3
pop
xor
lret
fs
and
cltd
mov
mov
sahf
mov
cmp
and
stos
aam
hlt
lahf
pop
sbb
outsl
add
mov
pushl
cld
mov
in
sbb
mov
mov
cmp
insl
lea
repz
jecxz
stc
mul
dec
in
sbb
jmp
outsl
jb
xchg
ret
in
adc
pop
fldenv
nop
out
xchg
inc
cmp
es
mov
push
mov
stc
inc
pop
push
pop
add
daa
pop
mov
lcall
pop
flds
rclb
or
aad
jne
jp
popf
mov
mov
fmuls
xor
cld
fstpt
push
and
adc
lret
lahf
cmp
hlt
loopne
and
and
bound
pop
test
push
in
xorb
stc
into
push
in
pop
mov
loopne
inc
je
push
hlt
mov
mov
push
cwtl
in
mov
idiv
cwtl
dec
jae
arpl
mov
pushf
rorb
mov
enter
pusha
ljmp
test
call
std
jno
scas
mov
adc
mov
scas
fsubrs
not
cmp
lds
sbb
mov
lret
dec
sahf
jbe
jbe
dec
aam
in
outsb
fistps
jl
in
les
out
fisubrl
cmp
movsl
mov
mov
cmp
std
jb
shlb
sbb
push
xor
ret
daa
rolb
dec
roll
inc
push
jae
stc
je
jbe
lea
pop
sbb
add
sahf
lret
pop
mov
adc
push
adc
sub
mov
jns
gs
cmp
xchg
mov
mov
sbbb
mov
lock
or
dec
jb
mov
push
fwait
add
jne
cmp
adc
mov
and
push
andb
repz
pop
sbb
cmpsb
leave
mov
xchg
divb
pop
aam
jae
dec
es
mov
dec
jg
test
test
sbb
inc
jo
sub
faddl
add
fstp
mov
out
sbb
push
pop
jo
stos
inc
data16
or
popf
sti
mov
call
mov
push
sbb
ljmp
pusha
aad
es
fwait
mov
and
or
dec
add
jno
js
cmp
sbb
push
insb
adc
adc
sbb
sub
and
inc
add
or
adc
ja
and
test
ljmp
or
pop
sbb
push
movsl
jmp
push
fsts
mov
jecxz
fmuls
aas
mov
push
push
pop
sarb
addl
mov
in
mov
imul
and
mov
xchg
or
hlt
outsl
mov
mov
jb
mov
lea
mov
int3
movsb
cmpsb
call
in
adc
fisubs
lret
ljmp
pop
cmp
jb
addl
and
dec
pop
sbb
sbb
and
fs
icebp
out
and
sub
les
mov
jl
mov
outsl
dec
rcrl
inc
push
test
gs
xchg
cmp
fsubs
enter
mov
lret
push
push
call
mov
shrl
scas
popa
inc
loopne
popa
jmp
xlat
sbb
xchg
icebp
mov
xor
and
push
pusha
mov
sbb
xchg
inc
xchg
cmp
daa
rorb
arpl
adc
jae
xor
stc
shll
xor
in
or
sbb
mov
scas
bound
daa
or
mov
movsl
cmp
stos
fsts
pop
cmp
add
sub
sti
lods
dec
inc
or
jne
jecxz
xor
jmp
cmp
jl
fidivl
push
popa
mov
sub
loop
addr16
in
push
repnz
lcall
scas
jo
mov
and
xchg
jmp
push
inc
js
cli
lahf
xchg
ret
jl
ja
loope
adc
shll
in
mov
aam
adc
shrb
inc
or
mov
sub
xor
push
inc
decl
rcll
mov
mov
pop
add
scas
and
or
pop
push
outsl
dec
fidivl
jae
lds
adcb
pop
mov
sahf
mov
mov
cmc
push
sti
mov
mov
xor
aas
jno
bound
jns
lods
add
insl
cmp
je
mov
push
std
push
mov
or
mov
push
das
ret
popa
flds
in
fistl
sub
subl
mov
repnz
popf
sub
lcall
out
lods
mov
xorb
adc
sub
lcall
icebp
int3
fstpt
out
or
and
inc
inc
loop
add
jb
cmpl
fistps
ret
data16
int
addr16
aam
fidivrl
push
pushf
arpl
loope
mov
inc
popf
inc
cmp
lret
xchg
inc
sbb
adc
mov
xchg
jbe
notb
aad
pusha
jmp
out
xchg
repnz
xor
add
bound
sub
fwait
xchg
mov
or
sub
sub
mov
sbb
mov
cmp
push
in
subl
xor
dec
rcll
inc
mov
pop
movsl
mov
addl
ret
jmp
bound
cltd
loop
inc
add
test
and
imul
mov
stos
negb
stos
mov
cmp
jae
pop
scas
inc
imul
movsb
fmuls
dec
sub
mov
xchg
idivl
and
dec
or
xor
jne
or
xchg
std
jg
insl
js
cmpsb
cmp
xchg
andl
or
mov
cmp
clc
movb
and
xchg
pop
push
rcll
pop
mov
mov
movsl
mov
xchg
pop
mov
push
push
or
pop
adc
outsl
rclb
mov
sub
fsts
fildl
test
paddb
arpl
pop
lods
jp
fmulp
adc
out
stos
cmpsb
mov
add
mov
xchg
les
insb
jo
es
test
clc
ljmp
int3
stos
xor
subl
pop
sub
ret
xchg
dec
mov
scas
sub
or
lahf
xchg
bound
adc
adc
sbb
inc
xchg
pushf
cmpsl
je
roll
pushf
lret
out
iret
and
mov
imul
rolb
xchg
insl
shlb
or
aas
fs
adc
sbb
add
push
aad
or
sbb
sti
daa
leave
in
scas
jae
sub
push
jbe
pop
arpl
sbbb
jmp
xchg
js
repz
outsb
push
inc
xchg
hlt
shlb
mov
lahf
das
loope
push
cwtl
leave
jo
loope
mov
add
lea
out
mov
mov
inc
add
shll
and
jle
push
jle
inc
test
cmp
dec
lret
mov
in
ficoml
popa
movsl
cmp
mov
push
jg
sbb
mov
mov
out
or
out
add
sti
inc
mov
in
gs
or
or
lock
lods
jno
push
cmp
in
mov
sub
pushl
out
mov
mov
movsl
rorl
jmp
ficompl
sub
xchg
pushf
out
mov
iret
xor
push
mov
jmp
icebp
xchg
push
dec
jmp
xchg
loope
data16
aas
shl
fwait
cmpsl
pop
mov
and
pop
sqrtps
hlt
mov
pop
inc
psllw
jns
adc
pop
mov
test
hlt
mov
cmp
or
mov
je
push
stos
xchg
fwait
mov
mov
mov
or
loopne
xchg
dec
xchg
shrl
xor
dec
push
mov
cmp
adc
mov
mov
mov
mov
daa
cmp
push
movsl
inc
arpl
sub
icebp
xor
sti
push
dec
pop
jle
test
jb
xlat
jo
mov
arpl
sbb
nop
dec
xor
inc
fldl
mov
fiaddl
das
mov
enter
dec
ljmp
or
mov
dec
inc
or
aas
adc
popf
push
stos
pusha
nop
push
jecxz
test
subb
push
dec
out
rcrl
push
stos
data16
loope
pop
adc
add
inc
mov
lret
add
jp
dec
push
das
xor
pushf
adc
mov
sbb
jge
xlat
mov
fnstsw
mov
sub
lock
loope
pop
pop
rcrb
repnz
paddq
pop
cld
fs
mov
enter
loope
pop
rcl
xor
cld
int3
mov
inc
sub
adc
inc
in
sbb
mov
test
ja
sbb
push
jo
ljmp
add
jecxz
mov
imul
jne
js
add
sarb
push
and
sub
hlt
mov
pusha
out
test
nop
dec
jbe
loopne
add
push
pop
aad
sub
sarb
jae
mov
icebp
pop
cltd
nop
adc
and
in
jb
ret
mov
loope
jbe
add
sahf
test
adc
mov
shlb
stos
inc
push
mov
inc
sbb
adc
andb
sub
inc
mov
cmp
nop
xchg
rcll
mov
push
xor
mov
ret
les
lods
inc
repz
int
repz
push
pop
ret
lods
mov
add
xchg
test
popa
inc
into
or
fsubs
xchg
xchg
es
mov
jno
stos
push
inc
inc
loope
int
mov
in
pop
ret
mov
cmpsl
dec
mov
cli
int3
push
xor
test
mov
mov
xor
stc
push
pop
push
in
jno
clc
xor
loopne
cmpb
int3
shlb
push
mov
lcall
pushf
inc
cmp
adc
jp
xchg
mov
je
andb
jecxz
mov
pop
insl
pop
nop
sbb
das
lods
aam
xor
sbb
test
test
pusha
in
test
popa
ja
cmp
jg
push
pusha
mov
xlat
push
pop
xchg
mov
dec
testl
pop
adc
xchg
fdivrs
push
pop
xor
sub
inc
gs
sbb
push
push
jae
sahf
decb
movsb
imul
xor
adcb
mov
or
leave
cltd
insl
xor
ljmp
popf
repnz
fs
cwtl
lods
test
daa
or
pop
mov
imul
mov
push
in
dec
push
mov
or
rcrl
nop
cmp
cmp
inc
jbe
mov
test
jae
aas
xor
andl
pusha
shll
jne
jl
mov
mov
dec
mov
into
test
add
inc
jo
andl
xor
aas
cs
out
cmp
sub
push
pop
cmpsl
sbb
jbe
mov
sub
jne
pop
jp
ret
mov
jbe
leave
int3
adc
pop
cmpsl
cmc
lret
push
rcrb
inc
pop
lahf
call
and
cmp
add
andl
int
ss
fcoms
mov
outsl
leave
mov
and
stos
pop
shrb
lahf
cmp
mov
test
insl
je
popa
xchg
movsl
nop
lcall
xchg
pop
rolb
cwtl
cmp
cmp
insl
int
push
les
cs
scas
sub
mov
in
out
pop
xor
add
adc
pop
pop
jmp
xor
push
pop
inc
jo
xchg
pop
add
push
sbb
jne
pop
xor
jp
add
ja
sbb
mov
ret
xchg
int
push
ret
push
pop
dec
leave
pop
lahf
sbb
sub
lds
xchg
insl
mov
int3
cmpsl
push
test
aam
sbb
test
push
dec
or
inc
cmp
imul
gs
arpl
xchg
push
push
shl
movsb
cs
lock
aaa
jns
mov
pop
adc
cwtl
lods
mov
xchg
xor
movsb
adc
cmp
mov
fcoml
mov
add
adc
repnz
add
jmp
mov
jmp
aaa
cwtl
pop
hlt
inc
cmp
and
dec
subl
jne
rcrb
cltd
inc
lods
cmp
mov
cmp
mov
add
shll
inc
push
gs
mov
stc
fiadds
vpmovusqd
sub
mov
fisubrs
cmpl
add
mov
sub
leave
mov
cmc
in
out
icebp
adc
rorl
leave
aam
jg
roll
jo
cmp
test
fs
je
fdivl
mov
or
stc
test
cmpsb
push
jmp
enter
cmp
out
rorb
ss
fs
cmp
dec
movl
in
jmp
xor
or
xor
cmp
inc
mov
in
repnz
mov
pop
pop
iret
aad
jl
daa
xchg
in
xor
cli
ja
adc
outsl
inc
xorl
mov
cmp
aaa
add
rcl
jne
call
mov
inc
cmp
pop
loope
adc
xorb
insb
cli
xor
xchg
mov
add
rolb
mov
and
pop
ret
dec
xor
mov
fnstsw
dec
leave
xor
dec
pop
ss
xchg
mov
and
stc
lea
xchg
in
xchg
mov
or
lcall
push
sbb
push
sbb
shrl
shlb
dec
dec
push
cltd
add
sub
push
and
dec
pop
data16
lcall
leave
push
cmp
js
scas
inc
imul
fcmovbe
rcll
add
cmc
mov
jnp
or
bswap
pop
cmp
push
lods
ljmp
in
arpl
lods
test
xor
cmp
aaa
adc
outsb
aad
shll
fcmovnu
fildl
popf
xchg
sbbb
cmp
dec
xchg
jg
pop
or
xor
pop
xchg
mov
mov
add
test
das
push
stc
insb
lea
ljmp
iret
pusha
push
arpl
push
jae
pop
push
and
mov
or
lret
or
jne
test
stos
xchg
jle
push
aaa
xor
push
push
jg
popa
stc
mov
inc
push
jb
cmp
sub
adc
cltd
pop
ljmp
mov
imul
dec
push
ret
xchg
add
rcrb
frstpm(287
and
out
cs
sbb
mov
add
adc
js
lret
test
call
push
in
std
add
pop
jnp
sub
lods
pop
mov
enter
inc
cs
and
dec
out
sarl
adc
sbb
cmp
jne
sbb
in
inc
imul
mov
or
jge
add
es
aam
cli
jp
add
inc
adc
adc
add
mov
rcrb
or
jne
je
xor
adc
add
loop
shl
or
add
mov
inc
sbb
aam
cltd
fdivrs
mov
sbb
ja
cmp
jecxz
insl
popl
pop
cmc
add
mov
mov
push
inc
dec
dec
sbb
rorl
int
movsl
or
dec
jg
mov
lods
jno
repz
cli
xor
ljmp
push
imul
and
rolb
add
push
pop
jg
movsl
jbe
adc
outsb
stc
ret
mov
xchg
dec
xor
cmp
iret
mov
xchg
inc
jge
adc
sar
cltd
mov
ja
xor
or
inc
ss
in
mov
loop
leave
bound
dec
mov
cltd
push
pusha
pop
mov
cmp
sbb
xor
fnstsw
adc
fisubs
sub
movb
lock
mov
xchg
dec
lods
mov
scas
sarb
or
inc
js
dec
js
mov
push
and
js
mov
mov
fdivs
sar
ss
xchg
xlat
xor
jge
add
push
rol
adc
and
push
mov
cmp
ret
xchg
int
int
out
pop
addb
and
popf
mov
or
scas
adcl
dec
jno
mov
cmpsl
sbb
lock
jo
or
adc
jp
out
in
adc
fnsave
dec
push
mov
cs
gs
sti
in
lds
ja
icebp
inc
jb
inc
outsb
push
jnp
jbe
or
shrb
add
xor
jns
sbb
sbb
jae
stos
js
mov
xchg
dec
push
aam
adc
out
outsb
daa
mov
sub
mov
lret
test
and
jne
shrb
adc
in
push
and
ret
xor
outsl
dec
jp
cmp
add
push
add
xchg
movsb
pop
nop
out
sbb
repz
xchg
test
in
inc
fdiv
arpl
sbbl
movsb
fstps
adc
scas
inc
ja
jg
test
loop
or
push
xchg
inc
hlt
daa
addb
xchg
xor
lret
mov
ret
nop
pop
adc
and
push
ret
push
sub
aad
cwtl
or
xor
mov
call
int3
jmp
push
out
xor
fwait
out
rorb
ss
mov
mov
pop
fdivs
std
or
pop
adc
call
or
rcrl
dec
push
dec
lahf
cmovne
mov
addr16
insl
and
sub
test
push
sub
es
testl
mov
xchg
dec
push
mov
dec
sub
adc
std
push
scas
lea
pop
fcoms
gs
cwtl
ja
pop
pop
jbe
add
and
nop
int
adc
mov
movsl
maxps
push
iret
push
sbb
stc
mov
aad
stos
ficoml
mov
mov
push
es
shrb
insb
ss
movsb
shll
push
pop
inc
lods
mov
cli
inc
ja
stos
fisttpl
add
int
shr
or
pop
cmp
cs
push
ds
test
sub
out
je
imul
push
fwait
add
jnp
dec
or
xchg
add
mov
sub
les
xor
add
xchg
pop
push
cwtl
mov
ss
icebp
rol
push
loop
popa
inc
mov
mov
lret
sub
pop
dec
jns
gs
test
fnsave
or
dec
xchg
or
ss
sbb
repz
mov
adc
std
inc
cmp
adc
sbb
cmp
hlt
push
in
sbb
adc
inc
push
mov
cld
inc
sbb
pop
out
pusha
inc
or
aad
sbb
aas
int3
mov
xchg
push
sub
jge
cmp
mov
push
ret
jno
movsb
dec
jl
inc
pusha
pop
push
mov
fbld
push
incl
mov
cmp
xchg
in
adc
mov
sahf
inc
dec
or
jge
add
stos
fistps
stc
push
rorl
std
in
cmp
sbb
xchg
ret
fwait
xchg
jmp
enter
pop
fwait
dec
lret
pop
sub
push
xlat
push
push
xor
test
and
popa
lret
or
jmp
jmp
add
dec
orb
xchg
or
sub
pop
xor
adc
dec
enter
sub
xor
flds
sub
adc
movsl
out
xchg
dec
out
lcall
sbb
inc
or
lods
dec
mov
out
iret
jne
je
or
aas
xchg
daa
clc
and
loop
jns
clc
int3
lahf
addr16
insl
push
lea
clc
loop
pop
outsb
lahf
xlat
fsubs
adc
lcall
aam
and
xchg
lods
jae
sub
sahf
daa
pop
xchg
adc
std
idiv
icebp
cmpsl
jle
loope
cmpsl
cld
lock
insl
idivb
mov
iret
sahf
scas
mov
adc
lods
xchg
stos
xchg
jo
mov
fstp
pop
das
pusha
pop
sbb
cmp
mov
fcoms
mov
cmp
adc
mov
jle
loope
loop
mov
adc
xchg
xchg
int
sub
sti
mov
sub
jbe
rcrb
or
xchg
jmp
ficoms
jle
daa
push
in
repz
daa
out
mov
sub
sbb
lcall
mov
mov
lods
in
pop
cwtl
iret
or
aam
jns
movl
lods
arpl
push
adc
adc
xchg
pop
mov
xchg
xchg
imul
or
jge
push
lds
mov
xchg
outsl
fdivl
pop
ds
mov
sar
dec
andl
push
mov
lds
mov
jl
dec
rcl
and
pop
xor
sbb
sbb
test
dec
loop
ss
fbstp
ljmp
addb
das
mov
imul
ficoms
xlat
rcrb
dec
lea
les
xor
xor
jbe
add
sbb
scas
push
and
in
aaa
dec
loope
ror
add
push
lcall
test
loope
jns
loope
xor
aad
int3
push
out
in
test
imul
out
ret
sub
push
adc
xchg
dec
es
fwait
or
jns
cltd
cld
lds
fcomps
cmpl
inc
jge
cmp
dec
imul
jo
and
sbb
or
pop
call
xor
inc
ret
push
mov
jns
arpl
pop
jge
jno
pusha
mov
out
jo
xlat
mov
mov
repz
or
xchg
adc
and
sbb
test
data16
sahf
daa
adc
xlat
jge
jp
shll
cmp
push
jae
stc
das
pop
test
movl
push
loope
in
mov
jmp
or
subb
aam
int
push
into
js
sbbb
outsb
stos
js
dec
sbbl
or
pop
repnz
adc
in
popa
push
inc
or
std
adc
jle
adc
mov
push
xchg
cmp
clc
xor
sbb
pop
into
adc
je
test
pop
pop
jno
xor
out
sub
xchg
adc
adc
push
pop
test
jno
and
xor
int3
sub
jge
testb
push
mov
xchg
scas
push
in
add
jns
sub
enter
lods
dec
jle
push
dec
mov
add
or
fdivrp
jecxz
and
ret
pop
out
jne
mov
stc
sbb
out
or
pop
inc
clc
xchg
mov
xchg
in
lret
aas
xchg
cs
mov
imul
lods
or
fimull
xchg
paddsb
cmpsl
stos
repz
sbb
scas
stos
dec
sub
mov
lcall
xor
incb
and
insb
imul
imul
movsl
adc
pop
rclb
adc
xchg
mov
xchg
aam
stos
mov
jo
dec
scas
je
vmovd
pop
dec
sub
mov
cmp
popf
mov
bound
mov
fsubrl
xor
stos
dec
pop
cmpl
cmp
je
mov
adc
inc
push
std
add
inc
pop
cmp
xchg
scas
pusha
cltd
scas
xor
adcl
scas
pop
arpl
nop
clc
mov
adc
dec
pop
loope
mov
inc
insl
shr
push
add
or
sub
ljmp
jg
xchg
cmp
xor
rcrl
fs
enter
nop
mov
lods
and
cmp
repz
add
push
cmp
leave
pop
cmp
gs
pop
ret
outsb
syscall
sub
inc
lahf
add
inc
jle
jb
loopne
andb
adc
cld
sub
cmpsb
xor
xchg
jbe
aad
sub
fmuls
xchg
aas
adc
clc
gs
jno
testl
or
jmp
loopne
leave
push
mov
loopne
sub
push
jo
cmc
stos
lcall
xor
inc
xor
xor
pop
movsb
test
push
or
xchg
test
xor
cmp
or
lods
lds
fsubs
es
push
mov
pop
rcrb
and
fwait
je
dec
pusha
test
aam
movsb
popa
pop
mov
jle
test
mov
and
mov
push
test
mov
dec
addr16
inc
int3
ja
aas
inc
mov
inc
mov
fst
in
mov
loop
hlt
jmp
dec
cmpsb
dec
jnp
adc
cmp
jbe
xchg
cmc
jne
dec
inc
jge
and
push
mov
mov
mov
mov
inc
jns
push
loope
mov
rcll
fmuls
loope
in
mov
and
bound
pop
and
loop
shrl
nop
sbb
push
sub
xor
repz
lret
ret
pop
pop
clc
ret
jge
fstl
push
pop
sbb
or
shll
pop
mov
mov
lock
rcrl
fldenv
jmp
push
xlat
sahf
pop
mov
jo
mov
mov
mov
cmp
les
pop
jnp
pop
jmp
xchg
int3
sti
xorl
or
ret
mov
scas
bound
pop
jecxz
jecxz
pushl
loope
and
or
mov
scas
jg
pop
lahf
add
pop
out
lcall
out
sti
stc
fwait
add
dec
and
arpl
cltd
je
sbb
aas
jp
sbb
pop
mov
mov
cmpsb
add
jecxz
arpl
fnstenv
int3
cmp
fisubl
stos
add
fdivl
mov
addr16
fcompl
dec
sahf
mov
repz
call
test
push
sbb
das
jbe
or
mov
aad
aam
aas
insb
sahf
push
clc
sarl
addr16
and
jl
jns
fidivrs
nop
jno
roll
xlat
xchg
aad
mov
push
cmp
daa
push
rolb
cwtl
aas
das
sub
jmp
xor
jmp
pop
pop
dec
insl
unpcklps
dec
add
jbe
xlat
push
cwtl
adc
pop
lds
dec
cmpsb
jecxz
xor
ret
xchg
sbb
out
sbb
popf
imul
popa
adc
mov
pop
ret
mulb
dec
sar
mov
add
mov
out
mov
cmp
enter
and
test
movsb
jne
faddl
aas
stos
pop
push
xchg
ss
jo
mov
scas
dec
pusha
mov
roll
stos
les
lods
loop
push
sti
daa
sbb
xchg
inc
xor
cmp
adc
repnz
jb
and
or
push
lods
bound
dec
jnp
sub
call
mov
inc
ds
jns
jne
pop
jne
inc
addr16
lret
pop
pop
loope
fisttpl
loopne
add
faddl
push
insl
popa
mov
cs
jge
rep
movsl
cmp
scas
repz
and
xor
push
pop
in
loop
in
lret
adc
gs
mov
mov
test
outsb
dec
out
cmpsl
mov
push
add
inc
mov
enter
pusha
push
cli
ret
mov
arpl
lods
imul
insb
fistl
lsl
jnp
cmpsl
sti
repnz
clc
and
loopne
lods
add
test
inc
and
fs
lods
adc
jp
movsb
test
dec
sub
xchg
dec
popa
sub
sbb
sti
arpl
mov
jp
aas
shll
cld
bound
aad
adc
or
sbb
xlat
pmullw
jp
mov
push
out
pushf
xchg
add
ljmp
dec
aam
inc
aam
push
push
jecxz
test
mov
sub
sub
xor
sub
rcrb
xchg
mov
cld
jmp
leave
mov
sbbl
arpl
jmp
int3
movsb
mov
xchg
lods
jge
or
pop
mov
push
xchg
or
xor
sbb
loopne
and
xchg
and
sbb
ficoml
fidivs
add
fcoms
int3
xchg
mov
into
mov
outsl
adc
mov
sbbl
push
pop
addr16
fstpl
jl
mov
andb
dec
jle
loop
or
push
add
xor
xor
push
icebp
mov
lahf
arpl
dec
inc
pop
inc
jae
stos
or
scas
push
out
pop
jg
xchg
ret
sbb
negl
out
fldenv
and
push
into
mov
adcl
push
mov
or
mov
in
and
push
addl
hlt
scas
mov
adc
leave
pop
dec
adc
loopne
dec
dec
push
mov
sub
pushf
and
mov
dec
inc
dec
xchg
ds
das
fs
std
xor
jno
mov
mov
out
lods
and
lods
xor
xchg
ds
mov
cmp
inc
jmp
jae
or
add
movsb
mov
addr16
mov
mov
push
rcrl
jne
insl
nop
push
sbb
rcr
fwait
adc
enter
daa
paddw
sbb
jl
insb
jno
push
rcll
adc
in
in
adc
notl
jl
popf
adc
push
repnz
cmp
cmp
in
mov
jbe
insb
inc
shlb
sub
xchg
mov
or
dec
ljmp
pop
fldl
xchg
pop
and
data16
sbb
lcall
repz
lret
cmc
dec
popf
push
jle
mov
js
js
repz
ffreep
pop
jmp
ja
gs
xchg
int3
leave
repz
sbb
scas
dec
ret
xor
imul
pushf
call
push
cwtl
bound
leave
jne
nop
inc
mov
xor
push
pop
dec
arpl
sub
lds
cli
lcall
push
mov
pop
mov
inc
dec
pop
sub
loope
mov
mov
cld
fbstp
and
sub
pushf
lock
shrb
dec
mov
mov
in
mov
inc
push
test
and
jo
pop
mov
add
mov
cmp
adc
sub
adc
inc
cltd
out
jns
pop
lret
orl
rol
xchg
pop
jle
add
mov
sbb
fcomps
stc
xchg
pushf
jo
shrl
adcb
lret
and
ficomps
lcall
adc
cmp
movsl
fsts
xor
in
pop
pop
push
xchg
outsl
js
mov
insb
push
cltd
shlb
sbb
jge
inc
push
push
adc
sbb
xchg
push
add
lock
fsts
mov
inc
arpl
stos
mov
out
push
dec
stc
insl
xchg
insl
int3
xor
adc
dec
cmp
dec
rclb
popf
subb
mov
popaw
pop
add
cli
xor
cwtl
pop
cld
dec
stos
lret
inc
xchg
dec
fidivs
sub
mov
in
mov
xor
jnp
call
stc
enter
ret
cmc
sbb
fsubrs
movsb
jecxz
mov
or
repz
fs
xor
ret
ljmp
mov
mov
jne
xchg
mov
repz
pop
mov
mov
xor
fnstcw
aad
push
push
ret
pop
mov
add
xor
jmp
mov
mov
dec
ficompl
loop
and
orb
repz
dec
iret
popf
into
pop
mov
leave
push
fistps
sbb
movsl
lods
xor
mov
nop
aaa
fistl
jmp
pushf
xchg
fimuls
popa
pusha
push
into
cwtl
xchg
ja
and
pop
std
mov
popa
xor
out
rcrb
fbstp
dec
sti
es
jg
inc
cmp
pop
pop
idiv
dec
cmp
setns
add
daa
jb
nop
sbb
sbb
nop
xchg
fisubl
shrl
adc
sbb
imul
rep
xchg
mov
mov
pop
mov
sbb
mov
popa
es
loopne
cmpsl
xor
lea
xchg
stos
xchg
xchg
fdivrs
out
repnz
or
pop
adc
testl
sbb
xor
cli
leave
fdivr
outsl
adc
ffreep
outsl
add
out
addb
hlt
sahf
js
lds
dec
jmp
and
es
mov
stos
jg
repnz
adc
xlat
push
pushf
mov
mov
mov
lcall
imul
xchg
cmp
inc
pop
jmp
int
shll
mov
cmpb
or
inc
xchg
popfw
shll
icebp
inc
and
out
push
xor
jbe
fwait
dec
or
and
mov
sbb
jl
or
aas
icebp
inc
push
push
jns
jns
aam
inc
jmp
dec
ds
xor
dec
sub
pop
imul
or
push
jns
xchg
out
es
int3
testb
push
mov
inc
mov
push
mov
mov
or
insl
jp
aaa
mov
bound
pop
repnz
adc
push
push
nop
jge
shl
fwait
xchg
cmp
hlt
data16
pop
or
les
popa
sub
fadd
pop
sbb
dec
push
out
dec
cmp
stos
das
lahf
aam
add
inc
imull
or
or
cmpl
jmp
jb
or
lds
or
popa
and
xor
fcmovb
xor
sub
rorb
test
mov
icebp
ja
popf
or
jnp
dec
lds
pop
jge
stos
lds
add
mov
mov
mov
mov
aam
sbb
jmp
shll
aaa
adc
jmp
push
and
inc
or
jbe
pop
call
popa
je
xchg
xorb
pinsrw
repnz
les
jae
jp
daa
sub
adc
gs
in
or
sahf
jle
or
sti
scas
pop
add
pop
data16
ljmp
jle
dec
mov
jns
xor
or
test
imul
aaa
pushf
mov
fwait
nop
lods
xlat
add
xchg
call
push
vphaddwd
dec
clc
pop
outsb
mov
and
xchg
mov
mov
mov
into
sti
xchg
inc
cmc
xchg
shll
iret
push
or
or
xor
mov
mov
and
mov
lea
cmp
cli
leave
sti
sub
ja
pop
ficomps
ljmp
xchg
leave
fwait
sub
or
mov
out
or
sub
and
iret
inc
in
sarb
mov
inc
clc
movsl
or
mov
sbb
jo
aas
mov
cmp
les
xor
cld
jno
fidivl
imul
push
inc
mov
dec
rcll
or
inc
lock
cmp
push
jg
push
push
imul
mov
pusha
and
mov
cmp
pop
jbe
repnz
and
stos
addr16
jmp
xchg
xor
dec
fsubr
mov
idivb
test
jmp
movsl
inc
or
push
jmp
int
ficoml
xor
jp
inc
cltd
jmp
mov
pop
out
jecxz
je
jmp
ja
in
and
call
dec
loop
xchg
pop
mov
pop
test
mov
aaa
push
or
or
cmpsb
xchg
cmc
ljmp
in
adc
xor
std
test
add
adc
inc
jp
arpl
mov
mov
push
inc
sbb
push
or
xchg
jmp
mov
pop
pop
push
sti
iret
loopne
pop
jo
xchg
outsb
and
je
sbb
pop
mov
mov
sbb
call
stos
adc
pop
add
fdivl
dec
sub
adc
cmp
cltd
adc
jne
in
addr16
sub
rcrb
xchg
rorl
les
ja
adc
pushl
rol
fwait
adc
and
adc
lahf
aas
int3
xor
sarb
and
mov
mov
mov
push
push
movsb
inc
ljmp
fnstenv
push
dec
fiaddl
outsb
outsl
sar
mov
xlat
dec
iret
fistpll
sub
xor
sub
es
pop
add
ljmp
daa
pop
sbb
adc
in
flds
and
inc
inc
in
mov
pop
pop
lret
cmpsb
fcompl
push
aas
stos
or
mov
xor
fptan
lret
ffreep
xor
fs
lods
jne
push
inc
mov
pop
mov
lahf
mov
push
mov
ja
pop
cs
int3
mov
stos
inc
addr16
mov
jecxz
popa
pusha
movsb
xchg
insl
movsl
jnp
add
sub
movsb
mov
mov
push
in
jecxz
aad
repz
mov
cmp
lret
test
fmul
mov
add
xchg
pushf
jecxz
es
insb
in
daa
shrd
imul
cmp
mov
xor
push
cmc
push
push
xchg
mov
mov
jne
sahf
outsl
push
daa
outsb
add
fmull
cmp
or
data16
mov
xchg
jno
push
jae
mov
imul
fwait
pand
out
or
mov
add
lret
push
cwtl
aad
push
xchg
mov
push
mov
and
mov
test
xchg
and
das
ficoms
cmpb
imul
inc
sbb
fistl
and
pop
test
stos
inc
push
bound
lahf
mov
push
lahf
xor
sub
xlat
lods
sbb
hlt
fs
jp
inc
mov
inc
pop
xchg
push
mov
jno
sbb
test
mov
pop
pop
fmulp
out
push
push
out
mov
fistl
sub
lcall
and
rcl
divb
xor
mov
enter
dec
push
movsb
push
mov
cmp
fsubrl
jnp
loope
std
cmp
jle
iret
push
in
mov
decl
mov
adcl
clc
loopne
out
movsb
stc
stos
ss
push
sub
lret
imul
xor
sbb
stc
aam
sysenter
sbb
push
arpl
and
int3
mov
out
punpckhwd
fistps
aam
sbb
mov
test
pop
ljmp
dec
pop
xchg
add
pop
fwait
loopne
bound
jg
sbb
fsts
mov
addb
mov
out
mov
add
sub
aaa
mov
pop
mov
into
mov
and
nop
xlat
std
jl
xor
negl
sub
adc
xchg
test
ss
push
popf
aam
jl
lahf
leave
cmp
loopne
fsub
fsubrl
and
addl
out
jle
mov
cmp
fstps
roll
mov
sahf
sub
pop
lahf
add
jmp
lahf
cltd
lea
les
ffree
xor
aam
sub
fwait
int
dec
inc
or
mov
sbb
popf
adcb
jne
cwtl
mov
loopne,pn
push
lds
adc
mov
inc
fisubrs
mov
jb
push
lods
fstpt
add
rolb
decb
ljmp
mov
lcall
inc
ret
xor
fdivrl
pop
adc
incl
sub
out
and
sbb
pop
icebp
insl
sbb
push
enter
ret
cmp
jmp
out
int3
fmull
pop
pop
xchg
gs
jae
xchg
xchg
inc
hlt
lock
sub
inc
fbstp
ret
add
jmp
popa
lret
or
mov
std
adc
fildll
adc
push
sbb
add
inc
fidivs
ret
cld
dec
adc
les
lods
adc
jbe
mov
inc
add
xchg
sbb
jno
ljmp
adc
mov
int
or
jno
pusha
mov
push
mov
in
xchg
fists
lret
js
inc
pop
in
pop
push
sbb
ss
out
fs
xor
push
xor
xchg
inc
push
into
cwtl
test
sarl
pop
fists
sbb
ret
cld
lahf
fisubl
add
loop
xor
mov
and
scas
pop
mov
mov
test
jo
sub
add
aaa
xlat
dec
lret
stos
sub
add
push
fstpt
xlat
dec
push
cmpsl
mov
cmp
xor
int3
rorl
adc
out
and
inc
or
aaa
fs
and
mov
aad
or
pop
pop
push
aad
out
sub
add
xchg
iret
loope
xchg
fsubs
sets
push
pop
xchg
repnz
shll
mov
add
test
fldt
jne
xor
sub
test
mov
call
leave
out
outsl
mov
mov
push
adc
cmp
mov
les
aas
mov
fs
cmp
lcall
lods
and
imul
jb
sarb
test
jb
gs
in
push
sbb
xchg
int
mov
imul
or
pop
push
sbb
sbb
and
sbb
bound
or
mov
mov
push
xor
icebp
cmp
lds
xchg
jl
jno
repz
stc
sbb
cmc
pop
aas
mov
fistps
push
pop
addb
dec
fwait
andb
push
jbe
jl
pop
aas
push
cmp
imul
cwtl
std
pop
dec
test
fildll
sub
cmp
iret
mov
test
cmp
ja
ret
pop
daa
rorl
push
in
fs
test
add
xor
or
or
shrl
dec
push
jl
dec
lods
pop
dec
outsl
int3
imul
add
push
xchg
mov
mov
cmp
int3
add
jns
mov
jns
rol
int3
xchg
jo
mov
mov
out
out
outsl
cli
mov
xchg
jnp
dec
ret
bound
push
jge
or
mov
xchg
mov
ljmp
popf
xor
shlb
stos
js
mov
inc
cwtl
inc
call
je
and
dec
dec
fisubrs
dec
stc
clc
ja
shl
cmp
push
sub
mov
mov
add
stc
in
and
pop
push
mov
daa
movsb
or
imul
popf
das
and
into
jae
or
mov
adc
xchg
xor
mov
pop
mov
xchg
dec
inc
pushf
pop
mov
and
gs
out
das
mov
pop
mov
mov
sub
enter
mov
sarl
and
jl
out
mov
pop
cmp
mov
pusha
out
fnstenv
or
in
xchg
and
loope
push
testb
pop
xor
outsl
or
and
iret
lahf
mov
aam
ss
and
test
lods
js
or
sbbb
mov
insb
jg
push
mov
jg
pop
xchg
mov
dec
mov
mov
sbb
lds
push
sub
add
mov
mov
sbb
inc
sub
outsb
push
jge
std
adc
arpl
pop
and
cltd
sti
arpl
sahf
popa
jno
lods
pop
dec
outsl
les
mov
cltd
xchg
push
cmpsl
jae
mov
packssdw
and
pusha
sub
lock
call
xor
rcr
repz
js
in
push
or
add
mov
sub
lret
js
rcrl
lcall
mov
or
shlb
fsubrs
bound
dec
cs
ret
out
insl
imul
xor
mov
int3
add
sub
cld
rcrb
gs
fdivs
loope
ja
ja
call
lods
pop
adc
push
iret
push
xchg
stos
loop
loope
sub
in
lea
mov
xchg
and
jg
inc
pop
sub
dec
leave
push
shlb
xchg
mov
push
and
dec
das
scas
cmp
test
rolb
dec
mov
mov
mov
and
pop
inc
xchg
or
xchg
insb
inc
fisttpll
or
sbb
mov
mov
pop
inc
nop
cmpsb
push
into
mov
and
pusha
call
sahf
dec
enter
nop
dec
and
mov
rcrb
dec
aam
xchg
ret
pop
pop
pusha
sub
cmc
cli
loopne
pushf
subb
sbb
sbb
daa
loopne
inc
mov
adc
sub
mov
dec
pop
std
mov
inc
adc
sbb
mov
xchg
lret
insb
fdiv
aaa
test
push
jl
enter
mov
sub
jg
push
dec
lods
inc
in
xor
or
pushf
xor
mov
popa
into
pop
movsb
inc
std
mov
in
jbe
pop
xchg
popa
cmpsb
mov
dec
and
int3
test
sbbb
push
sub
adc
mov
push
cmp
mov
bound
imul
pop
bound
sbb
iret
fmull
jbe
push
nop
lahf
pop
fsubr
test
add
push
xor
mov
pop
xchg
mov
clc
in
loope
sub
rcpps
cs
and
jo
jecxz
mov
fucomi
fsubrl
mull
scas
cmpsb
inc
js
cmp
data16
cmp
mov
adc
add
lods
pop
and
not
sbb
imul
xchg
inc
xchg
cmpsb
sbb
add
aam
pop
fildl
xor
sbb
and
cmp
fldl
cmpsb
mov
test
dec
mov
cmpsl
jle
dec
stos
das
outsb
or
push
mov
pushf
dec
rorl
xorb
mov
pop
aad
testb
or
xchg
jno
and
push
outsl
popf
out
and
lods
sar
sti
xor
repnz
dec
insl
xor
pop
xchg
push
movsb
xor
sti
enter
xor
jns
lods
mov
cmpsl
sbb
gs
mov
cmpsl
jnp
cmpsb
mov
sbb
jb
aaa
sub
jmp
cwtl
cmc
pop
popf
jge
bound
scas
in
aam
lods
mov
mov
rcll
movsb
pushf
orl
add
gs
cltd
cmpsb
mov
cmp
push
out
push
pusha
ds
in
int3
push
notb
push
fnsave
sbb
sti
leave
cmc
sub
les
sbb
adc
inc
aad
repz
sub
test
xchg
or
dec
mov
rcr
aad
fists
xchg
xchg
cmp
fs
xor
mov
je
imul
pop
lret
fiadds
les
repz
dec
aam
in
lds
xchg
xlat
roll
push
sbbb
mov
sti
mov
push
mov
adc
aaa
sub
clc
mov
pop
les
lds
aaa
aad
xor
popa
aas
mov
push
call
dec
stos
mov
push
dec
mov
pop
adc
stos
pop
jne
jp
imul
dec
adc
aam
jp
cmp
popf
int
enter
addr16
out
lea
mov
rclb
je
adc
jbe
sahf
jmp
test
into
enter
dec
fmuls
fbstp
or
sub
mov
enter
iret
dec
cltd
imul
or
add
xchg
jne
in
xchg
jb
mov
out
leave
aas
adc
pop
adc
push
stos
sbb
cld
mov
pop
hlt
jg
and
std
test
sbb
cwtl
cmpsl
les
jl
out
mov
dec
mov
and
xor
popf
dec
sarb
cs
xchg
fdivrp
inc
jp
cs
inc
xchg
sbb
iret
fisubrl
popa
add
test
rcll
insb
jno
fs
pop
push
push
pop
jl
xchg
daa
nop
arpl
dec
nop
bound
sbb
cmp
and
decl
push
cli
push
sar
mov
aad
sbb
mov
push
lods
loop
sahf
into
inc
nop
test
pop
and
sti
das
addl
ss
lret
jp
sub
orb
arpl
test
or
jl
mov
scas
mov
lahf
sub
sbb
js
addr16
fadds
sahf
sub
scas
int
dec
cltd
adc
push
lods
cmpsl
mov
inc
les
xlat
lock
jl
sbb
cmp
mov
inc
push
cmp
rorl
or
outsl
mov
andl
mov
push
fs
out
lods
addr16
fimuls
pop
adc
jmp
dec
xchg
xchg
mov
in
fcomps
sub
aad
sub
outsb
inc
sbb
icebp
sub
dec
xlat
enter
pop
dec
jp
rorl
test
sub
lds
xchg
lret
or
addr16
mov
xor
fstpt
lods
out
andl
mov
sub
ret
outsb
shrl
aaa
shlb
mov
popa
inc
mov
movsl
aam
xor
inc
pop
push
push
inc
dec
dec
jecxz
or
jmp
jnp
inc
shll
mov
adc
test
mov
dec
incl
fldz
mov
out
mov
lods
adc
jmp
imul
inc
jmp
loop
jecxz
mov
outsb
aas
jle
dec
shlb
lea
stc
fcmovnu
dec
mov
jg
xchg
adc
nop
mull
inc
pop
cmp
add
rcr
cmp
dec
daa
or
xor
call
mov
inc
mov
lret
pop
mov
inc
sbb
pop
push
mov
loop
mov
adc
push
mov
add
sub
push
pushf
mov
cs
imul
lea
adc
sbb
js
cmp
dec
fmull
aas
mov
jnp
adc
fsts
daa
add
dec
add
mov
add
mov
call
mov
int3
mov
cmovae
mov
addr16
add
mov
push
loopne
mov
pop
or
outsl
decl
or
mov
fdivl
sub
dec
popa
mov
xor
cmp
lea
pop
out
adc
dec
fwait
gs
inc
and
imul
in
jge
shlb
leave
adc
loopne
xchg
out
repnz
push
pop
jbe
lcall
fmulp
ret
push
xchg
inc
test
insl
popf
test
aam
ret
jns
jecxz
pop
popa
ss
imul
cmp
lods
sub
in
jmp
or
cld
out
lahf
mov
cmp
sub
add
inc
push
in
and
cmp
sahf
ja
in
add
sub
inc
clc
shlb
xchg
xchg
enter
push
cmp
aaa
flds
jecxz
add
push
rcl
mov
or
push
sbb
lret
jb
ljmp
loopne
add
sarb
xor
adcl
sbb
or
std
add
xor
or
ja
adcb
lcall
imul
dec
ds
shlb
aaa
inc
rcrb
mov
mov
jmp
xchg
sbb
mov
mov
pushf
xchg
das
bound
push
pushf
stc
pop
dec
add
out
cwtl
push
mov
xchg
xor
cmc
and
fisubs
pop
cmp
imul
pop
adc
xor
pushf
push
sub
test
adcl
mov
push
or
cmc
shrl
sbb
outsl
lret
sub
std
popf
dec
sub
jne,pt
xorb
pop
add
fidivrs
jns
jl
rolb
adc
jbe
nop
ds
sub
cmp
push
or
inc
xchg
icebp
dec
mov
lcall
add
adc
test
daa
dec
mov
or
add
test
ret
or
in
jbe
cmp
aaa
sbb
push
ret
add
pop
in
add
arpl
xor
dec
sub
cld
jle
mov
pop
js
ret
pop
mov
pop
movsb
aas
fldl
jne
bound
mov
call
xor
cltd
xlat
movsb
mov
test
or
cmp
daa
pop
inc
in
imul
sbb
rolb
push
mov
test
or
pop
test
inc
imul
mov
sarb
cmp
xor
mov
mov
test
sbb
or
es
hlt
aam
sbb
gs
shlb
jae
sub
subb
cmp
mov
ljmp
jne
jnp
xchg
add
xchg
in
rcr
mov
mov
cmp
scas
sbb
mov
mov
mov
stos
aaa
mov
xchg
inc
imul
mov
sbb
imul
aaa
push
imul
pop
repz
les
lods
pop
sbb
pop
aad
cmp
or
push
dec
lret
es
dec
mov
xor
and
pop
pop
pop
roll
mov
or
dec
andl
or
test
in
sbb
rcrl
scas
aas
lea
pushf
std
add
dec
xor
mov
lret
iret
int
subb
push
out
lods
jge
pop
loope
mov
pop
xor
mov
lret
mov
lods
ljmp
cld
ss
repz
mov
inc
cmp
scas
adc
addb
xor
mov
xchg
pop
mov
push
cwtl
sub
movsb
push
decb
jg
push
enter
inc
jp
pop
xchg
scas
aaa
add
xchg
icebp
cmc
xchg
shlb
push
mov
imul
aam
ja
iret
call
daa
adc
mov
mov
sub
push
lret
ljmp
jp
dec
lods
and
pusha
in
test
mov
addb
xor
movsb
pop
aad
xor
inc
fs
dec
mov
insl
adc
mov
or
daa
inc
decb
mov
sub
and
push
or
dec
xchg
test
xlat
pop
in
and
outsl
lahf
pop
jmp
pop
repnz
pextrw
push
sbb
mov
aad
sti
mov
movsb
pushf
aad
dec
pop
fimull
pop
aas
xchg
fwait
outsb
jecxz
lock
add
aas
adc
sub
ret
push
or
ds
pop
iret
testb
aaa
inc
sub
jae
movsb
xor
cmpsb
shl
xchg
aas
cmp
icebp
mov
xchg
in
adc
fistps
lods
jl
mov
int
mov
dec
sub
push
cmp
orb
cmp
or
jmp
loop
sbb
jo
movsl
test
jne
test
cmpsl
aam
mov
cmc
jg
out
jmp
mov
test
add
sti
mov
xor
mov
sbb
call
mov
sub
lret
cltd
or
in
inc
jo
idivl
adc
adcb
add
addr16
push
xchg
loope
cltd
pop
xor
les
stos
cmp
lods
or
sbb
testl
cmp
ja
sbb
fadds
fidivrl
into
daa
enter
xor
mov
pop
mov
popa
test
and
cmc
paddusw
jecxz
pop
lods
ljmp
call
aam
cwtl
push
test
xchg
arpl
js
negl
sbb
jg
mov
cmp
popa
cs
mov
push
int
mov
push
sub
xchg
rolb
cmp
dec
mov
jb
loope
std
xchg
mov
popa
jg
pop
mov
addr16
jge
aad
cmp
sbb
mov
sub
aad
lret
mov
ficoms
addl
fdivp
lock
and
lds
cmc
stos
js
mov
mov
pushf
push
cmpl
push
fnsave
add
sub
push
rorl
mov
cli
and
adc
mov
cltd
push
in
dec
out
inc
xorl
into
int
inc
push
loop
arpl
sbb
arpl
ret
fadds
stos
push
add
mov
push
pop
insb
jl
sahf
roll
mov
sahf
lcall
cvtps2pd
pop
sbb
push
push
jmp
outsl
add
mov
dec
shll
rolb
dec
or
lahf
inc
outsl
popa
adc
adc
inc
mov
push
add
sbb
cmpsl
and
imul
fsubl
inc
dec
jns
aas
dec
dec
arpl
dec
jns
xor
outsl
aad
adcl
inc
mov
cmc
xor
mov
or
inc
pop
or
fstps
and
push
subl
out
add
mov
mov
enter
or
arpl
xor
sti
cwtl
imul
iret
in
fldenv
jo
shrb
loope
data16
mov
lret
xor
ficompl
je
mov
mov
outsl
enter
dec
cli
ljmp
clc
dec
mov
call
add
jno
pop
bswap
push
mov
mov
sbb
cwtl
inc
push
cmp
fisubs
stos
repz
pop
rep
mov
lcall
gs
and
push
pop
cwtl
pop
lock
sbb
test
push
xchg
xchg
test
push
sub
add
mov
push
jb
lods
jmp
jno
jne
cmc
test
cmp
cmpsb
push
push
add
adc
pop
cli
in
fcmovne
shrb
pop
ror
lret
mov
mov
out
sub
jmp
sbb
stos
adc
addb
or
loopne
std
fs
cmpsl
ja
aad
xor
shlb
nop
in
repz
int
sbb
cli
add
lret
mov
cld
xchg
hlt
cli
bound
movsb
cmp
insl
aam
xor
dec
or
dec
and
jae
xor
mov
pop
addr16
xchg
cld
out
jbe
in
cmp
or
mov
cld
sub
movsl
js
outsb
int3
mov
add
cmp
mov
xchg
in
xchg
icebp
idiv
fwait
mov
xchg
lahf
shrb
daa
and
xor
inc
mull
jbe
or
add
or
stc
lods
cmpsb
stos
test
setb
movsl
mov
aas
andl
test
push
movsb
pop
mov
icebp
pushf
pop
inc
push
int
sub
mov
loope
daa
push
lcall
data16
push
ret
jg
movsl
lcall
incl
cmpsl
icebp
ret
fbld
pop
bound
push
jmp
mov
jno
out
mov
or
jns
psrad
test
pop
xchg
rcll
iret
ljmp
lock
pop
jo
sub
lods
sub
fimull
jl
add
loope
sbb
mov
mov
ds
adc
adc
rorl
mov
and
mov
scas
je
sub
stos
cltd
into
push
cmpsl
rcrl
push
lahf
lds
push
shll
inc
pushf
fiaddl
mov
loope
in
bound
inc
and
adc
mov
cmpb
push
das
aas
cld
inc
mov
repz
jecxz
xor
fidivrs
iret
xchg
rcr
mov
sbb
xor
cmp
iret
dec
push
jl,pt
add
in
push
pop
idivl
test
fidivl
mov
xchg
mov
and
mov
adc
adc
movsl
xchg
inc
shrb
cmp
pop
or
dec
dec
cmp
cmp
dec
mov
adc
in
test
mov
xor
call
mov
pop
aas
lock
int3
test
sbb
es
hlt
lods
enter
fisubl
cmc
dec
push
sbb
sbb
sbb
dec
push
cs
inc
mov
lock
sbb
or
cli
dec
cmp
cmp
out
hlt
jmp
sti
dec
push
adc
into
lods
dec
mov
decb
stc
scas
aas
adc
sub
mov
shlb
jns
cmp
mov
fwait
push
in
pusha
insl
xchg
dec
fisubrl
mov
lret
int
movsb
or
lea
pusha
adc
push
jg
ret
stc
adc
fwait
sub
add
push
movsb
xchg
fisttpl
repz
scas
lret
pop
pop
cmp
sarl
xchg
es
push
or
leave
lods
xor
ljmp
rcll
sbb
pop
push
push
cmp
loop
and
push
in
mov
fnsave
mov
cmp
inc
aad
pop
js
dec
jbe
cwtl
lods
lock
int
lods
and
ret
push
mov
adc
dec
scas
shl
mov
loop
fwait
or
inc
mov
movsb
popa
jb
fstl
call
pop
int
out
ror
jae
and
add
fistps
ror
mov
xchg
jns
jb
hlt
inc
data16
adc
sbb
xchg
mov
inc
mov
out
sub
sbb
fst
mov
push
les
mov
and
pop
mov
mov
jl
nop
and
adc
sbb
lcall
cld
aaa
jno
sbb
outsl
adc
ljmp
add
sbb
push
sbb
pop
jne
loope
mov
outsl
cmc
dec
pop
mov
gs
daa
jg
sbb
cmpsb
jl
or
int
push
hlt
push
adcl
mov
mov
js
pop
loopne
fsubrl
fdivs
test
lahf
pop
pop
pop
inc
adc
data16
lahf
into
add
jnp
dec
push
xchg
add
sub
gs
adc
or
mov
pop
imul
fbstp
shl
mov
inc
dec
cmpsb
lods
into
pop
mov
mov
ss
mov
push
and
mov
xchg
mov
out
xor
xchg
out
jno
xor
lret
scas
push
add
aam
mull
les
mov
adc
or
xchg
and
add
xchg
test
std
adc
ffreep
fdivrs
jae
or
insl
repz
jns
lods
ja
jne
jae
dec
or
xchg
sbb
leave
imul
scas
mov
adc
sbb
lea
mov
sub
jb
xor
or
test
add
cs
or
imul
cmp
mov
add
cs
scas
stos
into
mov
xchg
rorb
mov
mov
cmp
push
and
pop
mov
int
imul
movsl
inc
xchg
nop
lret
xor
jo
sub
insb
add
sbb
mov
jge
imulb
loopne
sbb
out
mov
lock
pop
jecxz
fisttpll
fstps
data16
jmp
popf
or
test
and
test
adc
xchg
mov
adc
add
push
fsubs
add
std
jge
adc
xchg
add
ret
inc
xlat
and
arpl
mov
xor
icebp
loope
adc
pusha
sbb
je
xlat
fs
frstor
sub
fcoml
pop
cmpsb
lret
jp
xchg
nop
add
fwait
test
add
dec
mov
insb
lcall
sbb
ret
pop
mov
sbb
jbe
mov
rolb
sbbl
test
mov
out
das
lods
cmpsl
es
out
push
cld
sahf
scas
out
pop
xchg
mov
jmp
cmpsb
mov
fldl
dec
xchg
sahf
push
outsl
jo
mov
mov
xchg
add
lret
jb
mov
dec
pop
inc
jno
iret
cmp
faddl
push
xor
aas
mov
jg
lahf
xor
testl
popf
and
movsl
xchg
in
mov
in
in
pop
fistl
jmp
jmp
fucomp
jle
push
jno
cltd
inc
adc
test
lds
dec
or
outsb
sbb
cmp
mov
int3
lahf
dec
cmp
or
dec
or
es
fwait
jbe
aas
sbbl
adc
sub
cld
jmp
xorb
push
iret
pop
xchg
dec
lds
xchg
push
jo
pop
ja
lcall
adc
sub
repnz
sub
cmp
add
iret
xor
cmp
es
in
ljmp
push
std
jg
rcll
data16
mov
push
pop
or
xchg
xchg
jl
iret
sub
gs
cmp
adc
sub
mov
ljmp
xor
popa
fildl
jbe
adc
mov
mov
lods
jo
lods
pop
mov
out
cmpb
aaa
lods
das
cmpsl
add
fwait
mov
imul
divl
pop
lret
lahf
mov
push
jmp
fwait
loop
sbb
out
inc
mov
xor
or
push
fcmovnb
hlt
out
and
jmp
fcom
les
sub
lock
xlat
mov
movsl
mov
pop
add
push
aam
out
and
xchg
mov
pop
les
lock
testb
cmc
pop
dec
addr16
sub
movsb
call
shl
dec
inc
jb
jmp
sub
imul
xchg
arpl
mov
mov
adc
pop
mov
sub
cmp
lock
pop
mov
dec
dec
gs
wbinvd
inc
lods
dec
int
lcall
jo
adc
xor
push
mov
push
xchg
test
lods
dec
cmp
jp
leave
insl
cmp
mov
pop
adc
mov
sub
add
fidivrl
adc
ds
mov
test
cld
xorb
test
jne
xor
arpl
pminsw
ljmp
popf
mov
adc
pushf
cld
push
loope
cmp
inc
adc
iret
test
cmp
test
mov
mov
pop
jns
imul
movsb
das
jae
into
aam
cmovl
inc
mov
push
inc
aas
adc
dec
cld
out
push
insb
sub
mov
adc
sub
cli
es
push
test
jmp
mov
jae
xor
cmp
incl
adc
inc
adc
in
lock
add
add
nop
push
inc
push
das
or
jb
jge
sbb
jnp
sub
xor
mov
ds
mov
shrb
push
les
cltd
mov
jb
mov
mov
repnz
jb
jge
cltd
sub
cmpsb
clc
or
pop
fstps
pop
push
adc
std
aam
int3
stos
xorb
cmp
jne
fsubl
cmp
gs
lret
mov
in
mov
fidivrs
sbb
outsb
lds
scas
jnp
jmp
sbb
test
push
cwtl
enter
sti
add
ljmp
jecxz
cld
sbb
jno
sub
lds
fldl
inc
sti
outsl
mov
aad
cs
xor
inc
out
fisttps
stc
and
arpl
dec
mov
cmp
pop
pop
or
xor
mov
es
add
stos
dec
sub
loop
cmpsl
xchg
push
sub
hlt
mov
scas
inc
lahf
sub
push
dec
xor
test
xchg
aas
mov
divl
mov
enter
insb
inc
mov
fldcw
pop
or
stos
in
shr
pop
ljmp
les
adc
mov
jae
stos
out
test
mov
jns
ret
or
mov
daa
and
and
lods
sub
mov
xor
leave
jl
repnz
and
mov
cld
cwtl
data16
pop
sub
popa
lahf
sbb
sub
movsl
popf
std
mov
test
xor
xor
sub
les
cmp
add
sub
xchg
adc
fisttpl
pusha
js
aad
mov
ds
adc
or
cmp
es
movsb
pop
rorb
and
sub
es
aad
mov
xor
pushf
mov
in
shll
popa
es
cmp
and
inc
repnz
movsl
jbe
cmp
push
es
adc
stos
mov
inc
es
pushf
push
xchg
push
sbb
push
xor
jne
in
push
mov
xlat
int
dec
enter
mov
outsb
sbb
push
mov
sub
loopne
pop
shrb
fistpll
popa
movl
daa
xchg
lods
xchg
xchg
mov
and
add
pusha
mov
shl
negb
lret
adc
call
jae
aad
lods
and
sti
mov
push
rep
pop
popa
or
xor
jbe
inc
mov
inc
or
inc
cmpsl
ja
xlat
pop
push
arpl
and
mov
imul
lcall
adc
sub
aam
push
popw
fsubs
movsb
inc
int3
sbb
outsl
push
hlt
out
fucomi
add
add
xchg
shll
xchg
ljmp
pop
mov
and
call
sbb
pop
push
pop
int3
lods
into
sub
xor
push
sbb
les
jg
scas
xchg
call
fcoml
fdivs
xor
lods
iret
lods
repz
loop
shll
out
or
outsb
dec
mov
add
outsb
enter
adc
sub
mov
rcr
xchg
cmp
push
push
lahf
mov
in
and
pushf
mov
mov
ss
aam
loope
je
insb
outsl
adc
frstor
data16
or
push
sbb
pop
repnz
nop
pop
jne
pop
sahf
push
sbb
jne
pop
jmp
add
jg
pop
repnz
hlt
or
movsl
cmp
dec
mov
pusha
push
sbb
xchg
out
cmpsb
decl
lcall
ds
addr16
inc
xchg
call
testb
mov
test
sub
aas
inc
call
fidivs
cmc
jl
sbb
or
out
adc
push
mov
ret
popa
rcrl
adc
mov
js
outsb
jle
in
sub
add
int3
adc
xchg
pop
sub
or
stos
and
dec
jecxz
inc
jp
out
hlt
mov
cmpl
xor
push
cli
and
fldl
pop
and
lea
jecxz
idivb
loop
filds
xchg
push
mov
fucom
in
idivl
add
and
cld
int3
lods
and
pop
lock
inc
inc
rcll
adc
ds
jo
or
jns
pop
xchg
inc
in
decl
xor
test
sbb
add
data16
ret
jne
or
mov
dec
cmp
inc
loope
movsl
pop
imul
push
aas
pop
out
jecxz
pushf
testb
sbb
je
xchg
push
test
dec
mov
enter
mov
pop
mov
or
xchg
xchg
mov
mov
sti
out
dec
dec
and
outsl
mov
xchg
inc
pop
stos
mulb
inc
jno
in
in
mov
push
adc
out
mov
jns
xchg
insb
xchg
jge
iret
ret
test
pop
xlat
mov
in
into
push
mov
mov
xchg
pop
mov
cwtl
ja
or
fwait
jp
mov
ds
mov
fldenv
movsb
mov
in
cmpsl
xor
shl
rcr
mov
adc
aas
test
fcoms
or
shll
sbb
push
inc
pushf
icebp
adc
mov
mov
xor
jne
cmp
fdivrl
cltd
push
mov
movsb
clc
fisttpl
xchg
arpl
pusha
shrb
test
and
jae
stc
shrb
call
add
test
jg
mov
sar
push
shrl
push
push
movsl
pop
add
push
leave
pop
cltd
pop
mov
hlt
test
fucomp
ja
stos
jecxz
adc
mov
cmovno
xchg
repz
lea
or
mov
shr
mov
cmp
inc
jno
jmp
insl
iret
lods
mov
std
push
lea
aaa
roll
rcll
aas
fistl
pop
cmpsb
inc
push
mov
mov
and
orl
lea
dec
jno
inc
addl
fwait
pop
pop
xchg
inc
rorb
imul
add
sbb
xor
test
cwtl
fiadds
sbb
popl
js
mov
mov
sub
mov
push
and
in
push
fstp
xor
rorl
jae
out
div
add
stos
push
mov
or
in
inc
repz
pushf
lds
mov
dec
cltd
addl
mov
dec
cmp
inc
fmull
xchg
mov
scas
es
dec
push
dec
cltd
push
jns
push
jmp
outsb
xchg
sub
mov
les
out
cld
inc
inc
and
add
in
adc
push
insl
fucomp
inc
pop
mul
mov
or
cmp
out
mov
rcl
dec
mov
stc
gs
or
push
ss
xor
mov
jne
push
stos
mov
mov
lds
mov
mov
push
rorb
mov
push
dec
xor
repnz
das
jae
xchg
xlat
movsb
out
jg
pop
es
loopne
inc
repnz
and
stos
jae
cmp
push
mov
push
rcr
filds
ss
cmp
dec
repz
cmpb
jbe
adc
jmp
add
daa
mov
sar
or
das
das
xor
prefetch
imul
xchg
push
insb
adc
call
mov
adc
xor
les
xchg
call
lds
sbb
and
jmp
hlt
mov
pop
push
ss
int
sti
test
in
adc
pop
stc
hlt
dec
xor
push
fucom
daa
xchg
cli
adc
jb
cli
jns
mov
mov
sbb
inc
jo
pushl
scas
inc
ljmp
pop
inc
push
jle
xor
movl
push
daa
arpl
push
enter
out
insl
adc
push
leave
adc
inc
sbb
jae
or
xor
loope
popf
movsl
inc
push
xchg
xchg
in
push
aas
mov
xchg
out
test
push
or
mov
sbb
call
add
mov
sub
sub
je
mov
mov
jge
add
es
inc
xor
cltd
sbb
pop
mov
imul
xchg
movsb
adc
cmpsb
jno
or
or
push
cmp
lock
aad
push
mov
dec
or
aas
or
dec
nop
xor
loope
test
sub
insb
test
cltd
movsl
cltd
fadds
jne
mov
lods
push
dec
out
xchg
inc
out
and
mov
in
sbb
push
add
mov
cmp
rcrl
push
shl
cwtl
clc
mov
cwtl
adc
jb
imul
inc
mov
out
push
sub
or
adcb
pop
test
adc
cmp
shl
aas
popa
jge
paddb
pop
mov
xchg
push
adc
stos
and
std
scas
push
pop
mov
cmp
aaa
pop
inc
rcr
pop
rdtsc
or
cmpsb
or
loop
mov
int
loopne
mov
pop
leave
arpl
ret
outsb
int3
sub
jmp
cmc
ja
jmp
daa
mov
sbb
out
pop
pop
jge
sbb
mov
xchg
arpl
aaa
push
jg
enter
mov
adcl
sbb
shlb
ds
sub
mov
mov
sti
test
cmc
mov
dec
inc
xor
pop
mov
pop
mov
lods
in
adc
test
jne
aas
xor
les
inc
mov
ret
push
dec
or
lcall
cwtl
iret
mov
xor
jbe
and
pop
in
cs
pushf
insl
stos
std
cmp
pop
sti
push
jb
gs
inc
rclb
mov
dec
je
mov
or
out
loopne
sbb
sub
adc
add
jge
cmp
fdivrp
add
push
scas
outsl
adc
push
mov
pop
ss
xor
in
ljmp
mov
ss
pop
dec
pop
inc
mov
sub
cmc
lds
jns
sub
inc
popf
loope
icebp
inc
rorb
xor
movsl
imulb
mov
loop
xchg
call
jmp
js
leave
int3
pushf
dec
pop
push
leave
xchg
subps
add
pop
pop
shrl
repnz
call
out
mov
mov
js
mov
ds
mov
mov
roll
and
fs
subb
movsl
xchg
mov
push
lahf
jecxz
pop
lock
iret
xchg
xchg
leave
int3
xchg
cmp
call
pop
cmp
arpl
push
xlat
mov
mov
lock
xor
mull
and
xchg
outsb
fs
cmp
cmp
popa
xchg
pop
inc
popa
cltd
ud2
shl
xchg
jb
push
clc
jo
dec
dec
jbe
out
imul
adc
pop
sbb
dec
pusha
gs
insb
jo
adc
mov
aam
je
loope
dec
sub
xlat
in
addr16
or
int3
and
jno
pop
sub
lret
push
inc
xchg
dec
jmp
aaa
rorl
cmp
xchg
cmp
xchg
adc
fdivl
pop
xlat
aas
fiaddl
sub
loop
pop
sbbb
cmp
outsl
insb
and
mov
push
lods
in
movlhps
incb
or
in
insl
mov
pusha
cmpsb
mov
mov
push
shll
and
inc
test
xor
cwtl
pop
xchg
cmp
xchg
mov
insl
pop
inc
adc
xor
lods
scas
or
dec
or
adc
lea
jnp
bound
pop
rolb
lcall
xchg
fidivs
and
add
inc
sub
das
mov
adc
pop
mov
icebp
add
cmpb
movsl
add
imul
and
into
nop
mov
shrl
je
xor
pop
sti
call
xor
xchg
jae
cmp
pop
lds
cmp
lea
andb
and
push
mov
sbb
cmpsl
scas
imul
loopnew
xor
pusha
xor
add
xchg
pop
or
jge
fs
rcrl
daa
sahf
std
push
lcall
imul
cwtl
or
inc
mov
je
pop
data16
fldz
cmc
xchg
xor
clc
mov
pop
pop
or
jg
orl
sbb
popf
push
sti
ljmp
out
popa
aad
cmp
stc
adc
dec
cmp
flds
adc
jb
xor
scas
stc
rcll
repz
sbbl
fdivrs
call
cmp
int3
sub
out
sbb
sbbl
pusha
mov
dec
test
mov
mov
sub
cli
cli
lcall
push
or
fldl
das
les
imul
push
in
jge
xchg
sub
lods
xorl
loop
push
out
pop
sahf
mov
es
sahf
jmp
inc
dec
shl
out
sarl
adc
dec
dec
mov
push
xchg
leave
inc
mov
inc
cmp
imul
fs
push
insb
jp
aam
sbb
cmpsl
fsub
int
gs
movsb
pop
inc
jg
lahf
outsb
int
mov
and
movsb
mov
ret
scas
call
enter
jmp
add
jl
sar
mov
jg
cld
jl
adc
stos
outsb
mov
test
jno
data16
sahf
fstpl
pop
cli
ficoms
repz
sbb
js
int3
jb
sub
decl
out
loopne
add
rorb
ret
test
mov
cvtps2pd
and
pop
pop
xchg
les
ss
push
mov
mov
jb
lahf
fstp
adcb
pusha
xor
xchg
xchg
aad
push
xchg
and
hlt
imul
test
inc
scas
mov
call
xchg
mov
fsts
xlat
push
mov
gs
cmp
lods
ss
pop
popf
and
mov
push
mov
ret
movsl
daa
stos
or
xor
or
dec
sub
rorb
xchg
std
adc
xorl
pop
incl
cld
leave
pop
fwait
pushf
push
ljmp
mov
inc
add
cltd
xchg
pop
cmp
leave
adc
repnz
inc
mov
fstp
cmc
add
and
sahf
js
loopne
push
dec
int3
push
je
and
inc
push
lds
dec
lods
shrl
mov
cs
fdivs
push
push
lcall
add
add
pop
jmp
in
into
aas
test
insb
xor
iret
xlat
popf
mov
mov
jne
into
fsts
or
rcrb
test
div
fistpl
insb
repz
xchg
or
mov
mov
fwait
inc
adcl
pop
jle
outsb
push
push
xor
cld
lret
pop
jecxz
xor
adc
addr16
test
outsl
cmpsl
rol
adc
xchg
outsb
movsb
stos
push
shl
push
mov
leave
cmp
arpl
out
mov
push
jmp
jne
cs
mov
mov
adc
jnp
in
inc
add
lods
sti
into
pop
pop
add
das
ret
shll
lods
stc
mov
aad
mov
fwait
xchg
and
push
dec
push
rcr
pop
add
and
fwait
cmp
cmp
mov
xchg
aaa
leave
mov
pop
jae
pop
adc
jae
icebp
in
repz
adc
cmp
pop
or
cmpsl
jmp
dec
jecxz
mov
mov
dec
je
jg
or
and
je
out
fs
cmp
subl
sarb
jmp
dec
dec
pop
aad
pop
pop
int3
inc
cmpsl
mov
sub
xlat
sub
shrl
movsl
mov
pop
scas
inc
jp
iret
aad
popa
inc
xchg
sub
inc
pop
or
mov
cmp
in
cltd
xor
inc
notb
out
xor
lods
loopne
mov
lds
cmp
xchg
push
js
or
adc
mov
ja
sarb
jno
outsl
pop
ret
push
fdiv
jae
leave
mov
and
xor
sbb
push
out
xchg
cwtl
dec
ja
pop
inc
cli
sar
xchg
adc
dec
test
lods
xor
inc
sbb
push
in
stos
lahf
push
xchg
scas
pusha
std
add
jecxz
sub
xchg
mov
in
fwait
sbb
popa
inc
push
push
pusha
leave
pop
arpl
ret
js
mov
inc
fs
nop
sti
xor
add
mov
inc
stos
inc
das
dec
mull
push
scas
and
data16
fs
les
sub
adc
inc
sarl
push
xor
test
cli
xor
xchg
movsb
cmp
repz
andl
mov
jae
cwtl
fwait
xor
mov
out
ljmp
rcr
xlat
cmpsl
into
hlt
scas
mov
jo
fnstsw
pop
scas
xchg
aam
test
mov
pop
xchg
in
adc
jne
mov
adc
jecxz
sub
orl
rcll
fisubrl
inc
in
scas
cmpsl
cld
add
mov
xor
dec
push
or
inc
jo
sub
aam
mov
stc
xor
sub
mov
mov
add
inc
test
inc
adc
daa
call
lock
sbb
or
mov
scas
cmp
arpl
and
iret
pop
aaa
cmp
adcb
push
mov
push
clc
mov
mov
sub
lock
jmp
jg
jne
push
jo
xor
xchg
or
push
jae
mov
cld
adc
in
adc
dec
xlat
push
sti
inc
lret
movsl
mov
xchg
shrb
loopne
sub
outsl
movl
dec
das
lcall
sub
or
in
cmp
dec
cmp
insl
push
mov
add
mov
jnp
sub
push
out
mov
mov
or
ret
mov
push
in
push
cwtl
sub
fwait
ljmp
bound
cs
xchg
ret
ds
lahf
dec
mov
and
push
or
movsl
out
insl
jne
push
pop
nop
cmp
aaa
adc
repnz
popa
arpl
adc
popa
insb
adc
lds
mov
lret
xchg
stc
jno
pushf
xchg
jnp
outsb
ret
dec
dec
add
fcmovnb
fcmovnu
fnstcw
adc
xor
jmp
mul
out
cld
data16
fcmovb
ja
repnz
dec
mov
mov
stos
cmp
not
fldcw
outsl
cmp
mov
jbe
repz
sub
outsb
jae
sbb
pop
jae
xchg
je
jbe
push
mov
mov
aad
fdiv
push
inc
cld
scas
pushf
imul
sti
out
rcll
mov
cmpsb
sub
int
shlb
add
fidivrs
leave
es
sub
imul
lahf
jg
push
out
fimull
push
scas
add
dec
xor
iret
bound
mov
adc
sub
xor
sbb
jle
sbb
pushf
add
rcrb
mov
mov
push
push
repz
rcr
jecxz
inc
push
test
and
enter
cmp
addr16
cli
into
rorb
ret
je
nop
mov
scas
jle
aad
inc
mov
mov
daa
leave
sbb
into
adc
push
je
fcompl
jge
outsl
loopne
push
mov
push
sub
add
mov
int3
div
sub
fwait
adc
ret
add
xchg
push
xchg
mov
inc
rcll
xchg
les
loopne
int3
sub
mov
enter
jne
xor
cli
std
mov
xchg
xchg
int
dec
pop
push
shr
ds
aaa
dec
pop
dec
movsl
test
mov
in
repnz
aaa
popa
rolb
mov
jbe
adc
push
jg
dec
jne
lcall
outsb
hlt
test
xor
push
stos
lea
popa
cmc
sub
addr16
fbld
data16
addl
lea
mov
jne
push
mov
mov
loope
ficompl
dec
and
daa
fdivl
add
cmp
and
add
shlb
loopne
sti
mov
mov
ja
cld
xlat
fdivrp
jp
cmp
sbb
pop
cli
addb
test
inc
dec
push
loopne
sbb
push
cmc
stos
mov
and
or
mov
mov
mov
push
shlb
adc
loop,pn
mov
lcall
push
pusha
fsubp
outsb
push
lcall
js
in
scas
mov
ljmp
mov
push
sub
and
daa
sbb
loope
push
lods
push
xchg
push
xchg
js
lret
inc
add
cmpsb
and
jns
sub
jg
popf
in
or
popa
and
std
xorl
mov
dec
mov
fisttps
and
fidivs
adc
lock
xchg
sbb
sbb
jb
test
mov
pushf
fimull
arpl
insl
inc
xchg
leave
pop
lahf
sbb
stos
stos
or
aas
in
popf
std
aad
inc
sub
fisttpll
ret
mov
dec
fs
push
and
sbb
insb
mov
push
insl
xchg
jp
mov
fsub
push
xor
icebp
into
test
jl
push
pop
lret
mov
movsb
addr16
aad
insb
sbb
decb
leave
mov
fildl
sub
sahf
lods
mov
fdiv
jl
aam
jecxz
out
cli
sub
call
mov
scas
pushf
pop
mov
xchg
pushf
shll
mov
cmp
ljmp
adc
je
sbb
sub
subb
ret
popa
and
loope
popf
push
nop
out
ja
aam
fs
lds
out
daa
ficoml
pop
cmp
adc
fsubrl
fldenv
jp
sbb
mov
pop
dec
jle
mov
dec
in
inc
mov
jl
mov
add
sbb
push
fimull
stc
lds
cmc
popa
mov
fisubrs
cwtl
xchg
fisubrl
cmp
pop
push
in
in
arpl
mov
loopne
push
pop
sub
pusha
add
mov
jo
push
orl
jno
lea
fistps
rorb
mov
inc
popf
and
jmp
push
iret
out
stc
adc
lds
imul
jnp
enter
les
mov
or
popa
pcmpgtb
push
lret
add
xor
pop
cmp
les
xchg
in
aaa
sahf
movsl
mulb
inc
outsb
dec
pop
xchg
mov
sub
cltd
clc
pop
daa
pop
mov
cld
scas
fwait
xchg
es
into
sub
push
addr16
cmpsb
mov
fdiv
sub
add
add
dec
xorb
sub
xchg
mov
inc
xchg
xor
jns
imul
add
lods
mov
jg
mov
popf
mov
xchg
inc
rclb
mov
mov
lcall
mov
and
andb
iretw
je
scas
push
cmpsb
push
leave
fcoml
add
push
movsl
mov
outsb
mov
mov
pop
test
enter
mov
push
or
rcr
mulb
ret
pop
jbe
pop
int3
adc
push
cmc
jmp
repz
test
jns
xchg
sahf
pop
and
dec
fisubl
jl
sub
and
push
shlb
out
dec
sub
sbbl
add
cmpsl
fidivrl
and
mov
adc
xorb
mov
push
push
movsl
int
mov
inc
jbe
fisttpll
jo
jns
jo
aas
loope
mov
add
sbb
xor
arpl
mov
dec
pop
movsb
fisttps
jnp
jae
sbb
jmp
lret
pop
ja
pop
jge
xchg
cmpsb
cmc
jae
hlt
sbb
int3
push
pop
mov
in
fcmovnb
aad
aad
lds
mov
dec
test
push
insl
outsl
and
adc
or
and
sbb
mov
outsb
cli
sti
mov
sbb
jo
adc
lcall
mull
lds
and
outsl
add
jnp
xchg
pop
ja
leave
enter
leave
pop
insb
inc
cmp
lahf
lods
scas
gs
stos
adc
jl
mov
jno
ja
jle
cmc
and
mov
mov
test
xor
jae
repnz
push
xchg
stos
xchg
dec
inc
loop
loopne
jecxz
push
dec
stc
jl
aas
fdivl
jnp
shll
andb
mov
push
and
fsub
sti
mov
jbe
int3
mov
inc
fucom
xor
add
xchg
or
xchg
adc
lods
inc
sub
cmp
outsl
xor
xor
sbb
notl
shll
adc
ret
es
movups
push
push
pop
jae
lods
fldl2e
clc
call
jns
ljmp
popa
and
dec
jmp
push
jbe
inc
loop
sbb
dec
xchg
xor
xchg
xor
xchg
cmp
fcoml
into
xchg
push
mull
ret
popa
imul
mov
lret
push
ljmp
into
push
test
mov
dec
fs
sbb
into
insl
or
inc
mov
loopne
ss
repz
add
mov
les
and
test
out
mov
jo
lret
xor
int
dec
mov
pop
pop
jmp
sarb
mov
lcall
sbb
sbb
aas
stos
cmp
inc
imul
mov
push
xor
out
pavgw
cmp
jecxz
adc
dec
out
jno
stos
ja
jne
in
outsb
xor
cs
jae
aam
jo
push
push
outsl
mov
jae
leave
xor
sbb
mov
movsl
mov
sub
add
out
arpl
in
xor
js
dec
or
mov
or
popf
pop
sbb
loope
jbe
dec
pop
inc
out
inc
push
or
and
pop
mov
mov
push
push
adc
pop
enter
fcompl
push
xor
loopne
inc
adc
push
jge
and
rcl
insl
mov
sub
and
dec
mov
clc
pop
jo
push
test
sbb
repz
cli
add
sub
or
loop
pop
lcall
test
mov
pushf
cmp
push
push
scas
dec
in
jno
gs
pop
cmp
scas
faddl
ret
mov
push
push
or
xchg
sahf
mov
push
inc
js
fdivrl
and
lods
push
js
dec
dec
inc
int3
lods
pop
aam
imul
mov
mov
cmpsl
mov
fstps
outsl
loop
or
jp
loop
cmc
mov
lret
mov
loopne
jg
inc
cltd
inc
out
call
pop
mov
pop
sub
inc
out
popf
sub
xchg
loopw
adc
rcll
in
pop
xor
pop
fcomp
jle
jecxz
out
cli
xor
inc
xchg
movsl
loop
bound
xor
arpl
inc
cs
jl
jne
jge
ret
inc
mov
dec
insl
pop
loop
inc
push
inc
mov
xor
insb
mov
es
mov
push
in
test
xor
stos
nop
movsl
inc
mov
sub
push
push
jbe
adc
inc
cmp
mov
jle
pop
enter
and
iret
cmpsl
data16
fwait
mov
imul
leave
call
adc
mov
mov
cmp
mov
jbe
pop
jne
push
push
xchg
ret
in
mov
pop
out
xlat
dec
jb
sbbl
aam
popa
jns
gs
rcrl
lret
push
cmpsb
or
mov
xchg
fnstenv
jle
sub
push
orb
sub
ret
fmuls
jmp
push
sub
rorl
or
cmpsb
fisubs
push
jbe
fnstcw
aad
jne
lea
mov
insb
sarl
inc
mov
outsl
push
jmp
and
xchg
enter
out
push
cmc
iret
movsl
stos
xchg
and
inc
jb
push
in
jmp
into
ficomps
or
mov
fwait
push
cmpsl
mov
rolb
ds
std
out
and
mov
inc
and
or
out
es
xchg
xchg
xchg
mov
repnz
xchg
inc
rorb
dec
add
jl
sbb
loopne
sbb
push
lock
cmp
inc
dec
push
lret
inc
cmp
dec
inc
hlt
mov
pop
popf
xchg
daa
cmpsb
jne
aas
cmp
es
rcrb
mov
jl
adcb
mov
insl
test
jnp
jb
lret
mov
jl
add
inc
pop
sarl
arpl
mov
daa
loop
jp
pop
sub
mov
mov
dec
fiaddl
roll
inc
sbb
pop
in
gs
data16
adc
call
das
push
fmull
mov
fdivrl
push
shrl
xlat
fwait
sahf
dec
dec
cmp
dec
outsl
or
push
cltd
pop
in
add
dec
mov
add
dec
xor
pop
cs
sub
inc
xchg
cmp
aaa
dec
imul
test
enter
lods
jbe
js
test
les
les
stos
add
xor
jns
inc
shl
pop
movsl
daa
pushl
mov
cltd
int
int3
dec
fisttps
stc
adc
mov
das
and
in
mov
test
loopne
xchg
in
dec
clc
mov
jge
sahf
pop
mov
push
pop
mov
add
dec
je
repz
mov
mov
in
movups
out
and
fdivl
add
add
mov
pop
push
lea
dec
negb
sar
mov
mov
push
ja
les
push
mov
jne
aaa
dec
xchg
xor
xchg
cmpsl
sbb
je
int3
movsl
pop
lret
sub
mov
sbb
out
in
jnp
sub
jae
movsb
in
enter
xor
jmp
cmp
jmp
adc
stos
mov
mov
sub
pop
lods
sahf
cs
arpl
mov
lds
imul
jmp
mov
or
icebp
int
in
fsubrl
shrb
sahf
add
aas
mov
push
lock
mov
inc
mov
mov
and
mov
pushf
xor
jb
dec
add
addr16
fisttpl
imul
repz
push
fldenv
jp
jge
adc
pop
push
aas
sub
loop
in
andl
pop
add
scas
mov
add
in
lea
ss
lret
and
leave
idivb
movl
inc
or
mov
lcall
ficoms
dec
sub
repnz
xor
pop
add
mov
sbb
adc
nop
cmp
lea
adc
or
imul
ljmp
mov
mov
inc
push
add
repz
sarb
imul
out
data16
dec
jp
loopne
lods
and
stos
add
outsb
clc
xor
es
jmp
shlb
into
adc
pushf
loopne
cld
fs
and
faddp
xchg
and
insb
and
sub
lock
insl
cmp
pop
xor
pop
mov
into
shld
lret
or
mov
movsl
fmuls
jbe
lret
pop
mov
sub
es
jne
je
stc
sbb
js
sub
insb
xchg
dec
adc
xor
popf
test
push
and
ja
sbb
mov
mov
out
push
push
imul
inc
or
xor
jg
sub
fildl
add
jo
xor
inc
pop
imul
sbb
xor
lds
fwait
imul
stos
cmp
imul
mov
lret
sub
cmp
lcall
and
dec
iret
sbb
mov
out
sbb
divl
cld
add
pop
ret
rol
cmp
and
xor
fsub
inc
fiadds
cmp
cmpsb
das
fwait
hlt
or
pop
or
outsl
call
and
and
aas
jno
not
pop
jb
lret
mov
daa
jg
ret
dec
icebp
sub
stos
movsb
sub
pop
incl
shll
ja
fbstp
fs
mov
add
arpl
popfw
push
out
inc
scas
data16
fwait
repnz
jne
aad
adc
imul
fwait
jno
rorb
fmull
mov
or
push
fisubrl
out
mov
pop
sti
mov
cmp
dec
fwait
dec
sahf
mov
or
mov
xlat
outsb
pop
mov
sbb
jecxz
sbb
or
and
mov
jno
push
lahf
repz
mov
pop
cltd
insb
gs
jl
xorb
dec
pop
in
cmpsl
lret
push
arpl
subb
sub
mov
ret
pop
js
pop
dec
scas
jae
mov
xchg
add
xchg
add
sbb
push
pop
jne
inc
inc
jno
cmp
inc
ss
mov
pusha
jmp
std
cmc
sub
adc
cltd
push
mov
pop
in
jmp
sar
fs
lods
bound
xor
cmp
outsb
fstp
inc
test
cmp
lahf
subb
sbb
test
sub
les
inc
sti
jl
fldt
xor
xchg
lock
cwtl
xchg
pop
push
fadd
push
add
add
out
gs
fcoml
out
in
push
and
js
dec
dec
xor
xor
aad
xor
icebp
out
jle
stc
push
pop
inc
jle
repnz
add
insl
mov
clc
clc
aad
cs
xchg
add
mov
cli
push
push
and
cltd
xchg
rol
jne
add
loop
iret
cmpsb
inc
in
or
fs
pop
jg
xor
cmp
test
push
das
dec
inc
pop
repz
mov
inc
push
popf
es
xor
mov
je
fstp
dec
out
inc
lods
adc
jge
das
out
inc
mov
mov
cmp
sbb
add
inc
cmp
sbb
ret
jge
jnp
cmc
pop
add
orb
add
dec
insb
fstl
xchg
mov
inc
push
jp
pop
adc
sahf
sub
add
cmp
xor
pop
cmp
out
lods
dec
out
jb
mov
push
call
jbe
xlat
insb
sbb
jnp
int
and
push
push
movsb
jp
jb
add
xchg
and
xlat
add
jb
out
lcall
mov
inc
xor
xchg
mov
lahf
or
int3
xchg
imulb
nop
ret
adc
and
pop
addl
jo
aaa
adc
in
or
inc
repz
pusha
xchg
arpl
mov
out
mov
ret
cmpb
shll
xchg
sub
mov
rclb
add
aaa
xchg
xor
daa
and
mov
sahf
jne
and
clc
fs
push
nop
mulb
int3
sub
shrb
ret
testl
mull
bound
shlb
push
shl
cmp
imul
fnstsw
test
out
data16
or
lea
add
movsl
adcl
sarl
addr16
into
dec
pop
lods
aas
xchg
stc
scas
jp
push
xor
push
roll
loopne
sbbl
xor
xor
leave
pop
sbb
loopne
lods
test
dec
cmp
xor
popf
xor
mov
mov
shlb
mov
jno
xor
pop
cld
sbb
dec
aaa
dec
pop
mov
out
push
cmp
pop
mov
pusha
lods
cmp
add
mov
lds
cmp
cltd
ljmp
or
stos
icebp
fidivl
lret
cmp
sbb
or
rorb
xor
lea
push
out
movsb
movsl
pop
into
shlb
pop
pop
xchg
dec
mov
aam
cltd
inc
pop
mov
scas
push
in
and
push
mov
out
push
or
out
or
cmp
mov
sub
xchg
mov
mov
icebp
sbb
outsb
mov
jne
dec
xchg
inc
outsb
ss
lds
xchg
add
hlt
cwtl
inc
lea
mov
jle
enter
imul
in
mov
stos
shl
int
imul
adcl
cli
lcall
ja
xchg
outsb
es
dec
sub
cmpsl
gs
and
cmp
test
outsl
or
xchg
shrb
ds
decl
dec
xor
mov
pop
fildl
xor
cmp
decl
mov
and
push
mov
icebp
mov
test
cmpsl
pop
inc
inc
inc
adc
lret
decl
shll
or
xor
push
popf
dec
mov
addr16
sbb
ljmp
ret
inc
imul
pushf
pusha
repz
loop
je
jno
xor
pop
and
lret
out
mov
orb
insl
cli
rcl
loopne
ret
push
es
or
push
ljmp
mull
jb
imul
out
jo
xor
pop
shlb
fistps
lds
jnp
cwtl
leave
ljmp
push
sbb
stos
adc
jp
push
outsb
or
pop
pushf
push
in
jnp
andb
lods
bound
xchg
lock
in
std
push
cld
inc
xorb
jg
mov
mov
and
jno
fs
xchg
test
testl
lahf
pop
daa
ljmp
mov
ss
hlt
cmp
repz
inc
daa
call
xlat
inc
bound
add
and
adc
fisttpl
arpl
dec
orl
std
and
push
leave
fistpl
xor
jns
imul
add
adc
sbb
fisttpl
sarb
sbb
push
in
movsb
nop
adc
xor
test
imul
test
xchg
adc
sub
lret
mov
cltd
fcompl
push
inc
pop
mov
dec
xchg
out
aaa
movl
divb
aas
pop
cmc
sub
xor
or
sbb
lock
stc
std
std
mulb
jle
jb
jg
hlt
sbb
ret
test
shlb
xor
movsl
sti
mov
jae
sahf
sub
and
pushf
dec
cmp
int
sub
jecxz
push
in
dec
mov
pop
stc
dec
loope
rcl
aaa
add
pushaw
add
test
in
fcomps
lock
mov
ja
loopne
sub
inc
xor
xor
mov
xor
fcoms
mov
adc
xchg
add
xor
cmp
iret
mov
cmc
aam
leave
sub
sbb
adc
pop
cmp
bound
jb
pop
or
or
add
or
mov
xchg
adcl
and
lock
pop
je
push
dec
enter
mov
sbb
into
and
inc
lock
das
inc
shll
inc
push
mov
loop
rcrb
jne
push
dec
xchg
adc
les
sub
push
pop
cmc
inc
lcall
mov
mov
adc
arpl
nop
shrb
addr16
xchg
lds
shll
fcomp
loopne
je
xchg
scas
or
mov
mov
adc
outsb
test
inc
insb
mov
test
and
lret
adc
pop
enter
dec
call
jg
xor
or
fistl
and
jne
hlt
xchg
push
js
adc
pmullw
xchg
sub
push
pop
sub
pop
addr16
push
sbb
pop
es
pop
adc
jg
jb
pop
imul
sbb
cmpsl
jb
add
cmpl
push
mov
mov
adc
shrb
pop
lock
aaa
adc
pop
jbe
inc
stos
mov
dec
jg
loop
arpl
mov
or
mov
sub
dec
les
int
addr16
ret
cmp
mov
movsl
ss
fs
roll
jne
xor
test
xor
leave
cmc
mov
iret
jg
dec
imul
out
test
pusha
pop
loope
jmp
cmpl
outsb
aas
mov
add
arpl
dec
xlat
cli
mov
push
sbb
aad
mov
xchg
or
dec
sbb
ss
adc
daa
call
jg
orl
fisttpl
pop
mov
out
lcall
je
imul
mov
add
sub
adc
test
in
dec
pop
in
lret
cli
and
mov
mov
sub
lock
stos
and
adc
rclb
dec
insb
xlat
les
test
push
xchg
insb
sub
cli
lret
pop
adc
imul
add
or
cmp
jae
fbstp
and
jle
sarb
mov
and
fisubl
ret
inc
adc
mov
xchg
in
push
cmpb
jnp
jmp
in
arpl
fcmovnb
mov
pop
xor
ds
adc
pop
sti
bound
mov
mov
in
sbb
nop
and
ds
stos
addr16
inc
shrl
sub
imul
arpl
subl
mov
dec
jge
inc
jge
dec
cld
jo
neg
push
mov
cmp
in
or
fildl
int3
loopne
xlat
dec
jecxz
lcall
push
fldl
shrl
mov
loop
inc
fs
in
pop
in
mov
loopne
cmp
mov
scas
cmp
push
xchg
cli
cmp
hlt
mov
jns
ret
inc
adc
jbe
out
shl
ret
stc
xchg
inc
test
jecxz
jg
in
sbb
push
cld
sub
iret
jge
dec
pop
test
mov
jmp
xchg
pop
cltd
push
adc
inc
jmp
mov
and
icebp
jnp
add
jnp
mov
push
bound
fisubl
cmp
aam
push
cmp
sbb
mov
xchg
jg
cmp
outsb
xchg
test
inc
stos
outsb
test
mov
mov
add
xor
in
imul
xlat
adc
cmp
movsb
dec
int
rcrl
cli
pop
cltd
rcrl
pop
lahf
sbb
dec
leave
adcl
dec
in
push
mov
or
test
pop
dec
cli
shl
pop
xchg
mov
shll
xchg
mov
or
and
int3
xchg
test
dec
mov
jp
cmpxchg
pop
sub
adc
mov
mov
mov
xor
cld
push
cmp
les
adc
loopne
push
sbb
es
cmpsb
clc
sbb
cmp
inc
sbb
sub
push
push
test
jmp
dec
inc
mov
fidivs
xor
stos
xchg
and
dec
cmp
or
dec
les
xchg
pop
add
and
iret
addr16
outsb
fildl
inc
or
stos
dec
pop
sub
xor
xor
mov
cli
int3
neg
pop
aad
cli
cmp
adc
and
clc
mov
sub
dec
inc
arpl
fcmovb
jmp
jbe
mov
push
insb
fcoml
outsb
mov
jne
adc
cmpsl
ret
sarb
push
push
cmpsb
fs
push
xchg
or
inc
pop
dec
and
out
adcl
fdivl
enter
outsl
aad
fisttpl
fs
mov
mov
pop
xlat
inc
xor
dec
adc
mov
out
sarb
hlt
and
push
scas
ret
cmp
pop
push
repnz
jecxz
adc
dec
dec
push
xchg
mov
in
outsb
mov
cmp
outsb
lods
pop
popf
dec
xor
push
shrb
ds
xor
fnstcw
jnp
sbbl
sbb
addr16
icebp
add
push
aas
stos
int
push
and
xor
sbb
or
sbbl
lock
push
lahf
pop
jo
pushf
mov
mov
xchg
dec
movaps
inc
mov
mov
sti
jae
xor
clc
mov
jb
andb
aas
xchg
push
push
mov
aam
dec
out
lock
rorb
sahf
test
ljmp
dec
pop
enter
stos
cmp
inc
xor
out
push
in
ret
jae
mull
adc
and
bound
ret
rolb
ljmp
jno
cmp
pusha
sub
push
mov
cmc
pop
les
sete
in
push
jmp
out
mov
je
notb
fcoml
shr
dec
mov
arpl
push
lea
pop
negl
in
bound
mov
or
add
dec
mov
xchg
icebp
int3
jp
cmpsl
das
scas
les
adc
dec
jmp
jl
sub
imul
call
mov
push
xlat
mov
pop
adc
sub
ret
stos
out
or
ja
stos
pop
and
cmc
and
mov
mov
frstor
lock
xlat
shlb
clc
ja
stc
pusha
sbb
mov
mov
bound
shll
test
jecxz
in
iret
nop
or
mov
xor
ret
jmp
movsl
lods
jge
loope
sbb
inc
adc
out
bound
adc
push
gs
mov
mov
fidivrl
in
sub
cmpsb
aam
hlt
jg
and
cmp
push
gs
imul
sub
pop
xor
aas
nop
pop
mov
fisubs
dec
into
sub
nop
lcall
ljmp
dec
push
insb
jns
lcall
inc
lock
sarl
movsl
inc
mov
filds
int
mov
enter
clc
fstl
dec
mov
dec
bswap
push
mov
push
inc
xor
mov
sub
pop
pop
dec
fsubp
cwtl
and
mov
cmp
and
shrb
pop
add
mov
push
sbb
sbb
ja
ret
adc
cmp
jbe
adc
pop
jbe
ss
movsb
cmp
cs
loop
out
jne
les
mov
mov
mov
mov
dec
sub
dec
inc
stos
or
in
insl
xor
cli
mov
mov
out
or
xlat
pop
add
sahf
scas
iret
pmulhuw
or
inc
stc
das
mov
xchg
shrb
std
loopne
cmpsl
mov
test
or
aad
sub
into
lods
push
push
aad
cmp
mov
stos
fcmovbe
jle
lods
das
mov
test
das
gs
mov
sbb
push
or
adc
push
popf
pop
cmpl
scas
cmpsl
ror
xchg
scas
ja
aaa
cmp
mov
xchg
pop
scas
jge
in
stos
xlat
and
inc
lret
cmp
hlt
int
sbb
fisttpll
xchg
pop
out
push
or
adc
lea
test
mov
xor
loope
cmp
in
sub
add
mull
ret
cmp
sti
mov
mov
push
jmp
jnp
jmp
lret
sub
lock
fisubl
data16
xor
mov
lret
sbb
push
scas
jge
mov
test
jle
adc
in
dec
inc
out
push
pusha
addb
lods
enter
inc
jmp
addr16
dec
jno
pop
fiaddl
push
insb
imul
adc
sub
inc
and
mov
add
pop
idiv
dec
jle
fmull
stos
sbb
and
jecxz
std
inc
jbe
jecxz
shll
xchg
scas
push
or
ror
jle
sub
daa
cmp
cmc
repnz
test
pop
out
add
sti
movsb
dec
xor
push
rcrb
pushf
sahf
pop
cmp
push
pop
mov
mov
pop
pop
inc
fcmovbe
enter
lods
andl
xchg
addr16
pop
leave
dec
hlt
push
cmp
xchg
clc
jb
sahf
xchg
xchg
sub
push
lcall
pop
inc
mov
das
inc
addl
or
shr
mov
call
es
inc
push
jbe
cmpsb
mov
and
pop
jle
mov
das
cmpsb
test
sti
sbb
jmp
stos
cld
int
test
mov
push
mov
inc
sub
and
sub
fnstsw
xchg
cmp
jbe
js
int
leave
clc
or
inc
jg
cmp
jl
outsl
leave
cmp
stos
or
adc
push
loope
ffree
ret
cmc
pop
inc
sub
inc
fucom
push
mov
mov
xchg
cwtl
push
dec
arpl
push
jmp
movsb
stos
notb
call
das
cwtl
mov
jge
xor
push
call
gs
xchg
pop
hlt
mov
adc
in
mov
inc
pop
jb
push
ss
push
mov
add
xchg
andl
out
cmc
mov
mov
xorb
jg
mov
jmp
rcrb
pusha
pop
push
dec
xor
mov
pushf
pop
mov
test
or
and
rolb
cli
stos
test
daa
ljmp
pushf
in
jno
xchg
inc
jnp
adc
dec
xor
in
cmp
mov
pop
adc
repnz
mov
or
lds
ret
jb
mov
adc
outsl
imul
clc
push
push
push
or
xchg
aam
inc
fisubl
mov
iret
push
fdivs
loope
inc
dec
lock
pop
aad
movsb
mov
dec
loope
adc
add
jle
loop
xor
mov
lods
push
cmc
int
jno
and
nop
inc
test
push
adc
sub
push
movsl
jnp
stos
int3
push
dec
cld
and
ret
xchg
push
ja
dec
xor
fsubl
mov
fsubrl
mov
outsb
ljmp
popa
les
cmp
mov
lea
mov
out
push
leave
js
xchg
push
mov
push
cld
mov
xor
mov
int3
cmpsb
cli
mov
ja
in
xchg
mov
cs
aas
mov
pushf
cwtl
xchg
sub
rolb
rolb
inc
xor
jecxz
dec
and
push
sub
out
stos
rcrb
into
sbb
popf
inc
sbb
xchg
mov
push
insb
repz
mov
or
fdivrs
push
int
and
sti
lcall
inc
jbe
popf
push
inc
ss
mov
mulb
imul
pop
in
bound
in
in
fnstsw
sbb
mov
dec
xchg
loop
std
pop
mov
fidivs
lcall
jbe
cmp
mov
xor
lret
jmp
rcl
cmp
or
sarl
pushf
pop
dec
push
pop
arpl
push
and
imul
imulb
stc
fldenv
xchg
push
test
push
pop
dec
mov
mov
lods
fcomp
insb
pop
fbld
xor
or
xor
add
pushf
call
mov
mov
sbbl
xchg
aam
pop
sbb
es
notb
sub
or
fcoms
sub
std
pop
jl
xlat
mov
sbb
and
mov
push
stc
jbe
call
mov
mov
jae
cmp
jnp
scas
pop
pop
adc
mov
lahf
xchg
push
fisttpll
xor
add
ret
xor
sub
arpl
stos
mov
jnp
gs
sub
jnp
push
decb
pop
lods
inc
jns
out
cli
mov
test
cmc
clc
outsl
sub
arpl
fistl
inc
jns
mov
jo
jns
or
mov
add
data16
scas
cmp
dec
leave
lcall
sbb
js
movsl
repz
out
inc
xor
popa
mov
xchg
adc
jae
add
jg
fidivl
aas
cmp
inc
inc
repnz
add
fisubl
into
or
mov
add
repz
fmull
sbb
repz
insb
jno
adc
add
adc
test
pop
movsl
pop
int3
and
pop
adc
adc
jno
fisttpl
jbe
cmp
push
stos
xor
jns
jl
xor
jo
sub
cmp
lret
in
add
mov
mov
leave
mov
mov
pop
std
cmp
adc
cmpsl
dec
pop
cmp
repnz
sbb
lret
fdivr
aas
std
das
cs
sbb
insl
inc
mov
pusha
xchg
fstl
xor
pop
jl
cmpsl
and
iret
fdivrs
or
fsin
rclb
inc
dec
int
arpl
frstor
sbb
pushf
sbbl
lods
ficoml
adc
mov
aaa
inc
mov
push
pop
add
into
or
cmpsb
insl
pop
push
jo
lods
push
ret
jle
jecxz
sub
lods
xor
xchg
ja
sub
mov
test
jmp
outsb
popa
ja
into
xor
das
je
fstpl
sbb
mov
arpl
aam
gs
and
rcl
sub
ljmp
mov
mov
cld
arpl
aam
ret
scas
jne
pop
mov
dec
test
shlb
inc
xor
scas
xor
fsubrp
push
push
pushf
das
mov
pop
fucomip
scas
cwtl
or
push
cwtl
sbb
sbb
insl
and
and
pop
and
xchg
dec
xchg
xchg
mov
inc
adc
imul
dec
test
outsb
add
test
inc
mov
dec
add
dec
dec
lret
pop
jne
call
push
testl
sbb
xchg
cmp
cltd
lock
je,pn
jmp
sbb
enter
je
xchg
push
rcrl
or
bound
lods
jg
jg
xorb
in
mov
call
rclb
test
pop
pop
rorl
test
cmp
repnz
jne
in
jb
mov
and
inc
cli
jecxz
cmp
mov
adc
mov
mov
je
jg
call
mov
sti
rolb
in
out
pop
sarl
mov
inc
lds
xchg
pop
add
dec
push
lock
ret
das
mov
pusha
enter
push
xchg
lods
lret
stos
push
rcrl
xor
add
pop
gs
or
out
shlb
mov
cmpsb
xchg
sarb
dec
insb
je
mov
mov
scas
cmp
push
sbb
jo
adc
push
inc
pop
js
push
pushf
and
test
add
gs
or
testl
add
call
xchg
inc
adc
push
imul
add
push
shlb
imul
push
jle
inc
xor
mov
in
sbb
inc
mov
and
aas
xlat
daa
adc
xchg
jl
push
xor
mov
sbb
mov
out
cmp
sub
shrl
and
xor
jg
add
filds
xor
or
sbb
push
leave
dec
xor
mov
loop
int
mov
cmpsb
idivl
cmp
cmc
mov
and
cmp
adc
into
test
les
dec
inc
mov
std
aas
enter
cmp
mov
sbbl
sub
or
pop
lods
and
pop
and
in
lahf
add
or
cwtl
or
mov
fld
and
aaa
lods
dec
loop
out
inc
push
xchg
xor
pop
stc
inc
and
fldcw
mov
and
or
aas
pop
or
mov
add
testb
insb
gs
repnz
sub
mov
and
sti
repz
into
mov
pushf
xor
xchg
aaa
pusha
out
or
mov
stos
insl
loope
mov
mov
je
dec
stc
in
rorb
cmp
inc
or
inc
add
mov
xor
push
push
lret
insl
aaa
fisttpll
popa
dec
mov
sub
arpl
data16
cmp
xchg
jnp
rorl
or
sub
fistps
into
cs
vpsrad
mov
adc
mov
loopne
cmp
icebp
ret
rcrb
push
mov
lods
daa
out
mov
or
pop
ret
add
push
dec
loope
adc
imul
xor
sub
bound
fildl
hlt
sarl
imul
pop
jae
jns
xlat
jg
push
sub
jbe
xchg
js
adc
scas
adc
addl
insb
out
mov
inc
int
xor
mov
inc
mov
and
mov
pusha
mov
fsub
xchg
call
dec
push
popf
stos
push
fwait
pop
xchg
test
aam
sbb
jo
movsl
ja
repz
xchg
xchg
in
cmp
roll
or
std
or
iret
insl
jp
fstpl
pop
pop
or
jg
jns
shlb
sarb
setl
jl
sti
mov
mov
cmpsl
or
imul
lds
and
dec
inc
cltd
pop
andb
in
pop
mov
inc
add
ret
dec
xor
mov
in
push
sub
add
test
mov
lret
and
add
ds
push
mov
int3
scas
inc
sub
dec
fisubrs
sbb
lods
mov
jmp
es
pop
mov
dec
mov
and
pop
sbb
sbb
daa
add
jp
xchg
jo
sub
sahf
push
outsl
cmpsl
pop
fidivl
cmp
cld
movsb
shr
pop
rcrl
les
jns
sbb
aam
xchg
mov
insb
sbb
test
out
add
xchg
jmp
inc
shll
roll
ja
out
xchg
repnz
fbstp
add
inc
jno
sub
sbb
or
adc
mov
jmp
out
inc
jns
bound
inc
mov
push
sub
or
pop
aaa
outsl
xor
out
sub
mov
jmp
cmp
rcll
or
xor
jns
les
adc
pop
mov
mov
or
jg
ja
inc
lcall
rclb
punpckhdq
lods
dec
xchg
cld
mov
imul
lea
or
or
lods
adc
xchg
jl
xor
push
inc
iret
adcb
insb
fimull
jne,pn
mov
pop
cwtl
rcrl
cmp
mov
clc
sarb
push
adc
popf
adcb
pop
or
cmp
or
icebp
dec
jo
outsl
cmpsl
push
mov
jl
in
loopne
jo
adc
sbb
lods
add
ja
mov
out
or
mov
jecxz
jmp
cmp
or
fisttps
mov
in
fidivl
daa
xchg
mov
fldenv
inc
adc
inc
dec
pop
xchg
shrb
loop
clc
mov
pop
cli
gs
and
popa
sub
add
push
push
mov
jo
outsb
lds
cwtl
mov
clc
shlb
aaa
icebp
xchg
imul
bound
je
adc
mov
in
out
enter
fisubrs
adc
jle
push
ja
nop
pop
outsb
gs
cltd
mov
jmp
mov
gs
mov
cli
mov
inc
jno
inc
jnp
into
dec
xor
lahf
add
mov
push
push
cmp
sub
stc
jl
and
repnz
inc
inc
cmpsl
xor
rcrl
notl
mov
iret
repnz
adc
stos
aam
mov
mov
pop
pop
inc
jp
dec
insb
xor
aas
jg
fisttpll
jg
mov
sub
hlt
pop
adc
call
mov
js
dec
cmp
out
mov
add
sti
rorb
lcall
addl
add
dec
imul
nop
cltd
mov
addr16
rorl
mov
add
push
cs
dec
daa
dec
movsb
popf
mov
jbe
mov
mov
pop
test
push
mov
add
and
ficoml
inc
mov
push
jns
sti
add
jecxz
or
adc
jge
cmp
jne
inc
les
mov
lods
add
push
pushf
leave
inc
mov
mov
and
jmp
jo
ja
and
jecxz
sbb
dec
push
sub
rcr
shr
push
ret
cmpsb
pusha
push
push
pop
mov
mov
mov
daa
cli
inc
push
lds
and
das
push
testb
inc
xor
shrl
add
dec
jl
in
adc
and
mov
cld
ficoml
inc
sar
mov
insl
pop
cmp
and
adc
hlt
out
arpl
stc
inc
add
pop
xor
sbb
adc
jl
sbb
or
cs
jge
mov
mov
jmp
mov
mov
jnp
ret
pop
inc
sarb
popl
lea
mov
fimull
pop
ret
push
inc
jle
dec
inc
xchg
jne
icebp
pop
adc
bswap
mov
inc
fidivrl
lods
push
mov
rclb
xlat
dec
push
rclb
push
cmp
add
out
out
and
lcall
shll
cmp
or
cmp
mov
mov
hlt
aad
stos
mov
test
xchg
pop
lods
loope
jbe
imul
scas
inc
out
cli
fldl
sarl
sbb
nop
in
jg
fistps
fcoms
popa
mov
sub
mov
xchg
cmp
push
jl
imulb
addr16
fdivrl
out
js
imul
jp
adc
jp
outsl
adc
adc
sub
aam
sub
sbb
aaa
insl
in
into
ds
bound
dec
xchg
mov
sti
pop
jge
mov
in
push
add
mov
pop
aam
inc
add
in
mov
mov
push
push
cmp
cmc
add
adc
jl
sub
sub
pusha
aad
lcall
cld
mov
inc
add
pop
push
dec
pusha
push
sub
pop
mov
aam
scas
sub
cmc
je
jl
imul
into
or
pop
loopew
cmp
xor
sub
std
imul
pop
mov
inc
loope
push
or
out
fists
sub
sub
dec
ss
add
pusha
in
mov
mov
mov
movsb
mov
rol
add
scas
daa
or
pop
inc
mov
outsb
ret
call
fidivl
xchg
sti
dec
cmpsb
jae
xor
mov
add
cld
popf
pusha
loope
mov
clc
add
popf
data16
clc
push
icebp
arpl
js
pop
xchg
mov
nop
mov
js,pt
loop
vhaddpd
mov
jecxz
leave
inc
ret
add
inc
or
xor
pop
dec
add
jnp
adc
ss
and
popa
ja
aas
mov
inc
ljmp
insb
sarl
mov
xchg
fwait
daa
aas
fiaddl
gs
aam
push
ss
popf
lock
into
xchg
dec
xor
and
lock
gs
in
inc
ja
mov
inc
adc
pop
roll
mov
or
jge
fisubl
lahf
iret
test
push
into
daa
dec
je
pop
mov
lods
mov
jecxz
or
jl
adc
xor
dec
dec
out
movl
int3
rorl
inc
ds
movsb
lret
ljmp
sti
cmp
pop
ja
sub
push
mov
lcall
int
out
ret
das
iret
cltd
psubusb
fs
cld
adc
frstpm(287
scas
xchg
sbb
and
ljmp
adc
pop
jns
or
lds
enter
call
push
xchg
pop
in
lds
jne
movb
lods
mov
push
add
inc
or
dec
xchg
aam
jae
jno
bound
cli
dec
imul
lret
sti
out
xor
adc
lcall
mov
mov
jmp
sti
fstps
popa
out
leave
ja
xchg
lret
push
xchg
push
dec
mov
push
push
data16
rolb
lret
icebp
mull
push
and
sbb
outsb
nop
xchg
fildll
arpl
nop
push
rorl
mov
dec
daa
push
hlt
pop
xlat
add
ret
lcall
add
mov
data16
cmp
mov
and
push
inc
jbe
ja
in
inc
jns
sahf
or
stos
in
or
adc
mov
test
and
dec
adc
loope
sbb
mov
repz
pop
fsubrs
push
hlt
shlb
das
mov
scas
popl
xchg
mov
aad
mov
ja
sarl
or
add
cmp
sbb
imul
in
adc
inc
xchg
lods
dec
cmc
jb
decl
aam
mov
mov
pop
int
xor
sbb
jge
imul
call
inc
add
jne
add
pop
mov
push
add
pop
outsl
or
jbe
popf
into
shlb
pop
dec
test
jnp
shrb
in
aas
mov
lret
xor
mov
sbb
sti
les
das
adc
and
dec
inc
mov
inc
sbb
in
test
adc
pop
rcrb
adc
call
jb
inc
insl
pop
mov
dec
imul
sub
cmp
cwtl
clc
push
xorl
mov
and
or
mov
dec
pop
popa
cmp
mov
shrb
mov
sbb
sub
pop
ds
aas
sub
imul
mov
push
lods
inc
loopne
push
push
add
sub
and
pop
adc
mov
sub
test
mov
xchg
icebp
xchg
sub
pusha
add
shrl
scas
cmpsb
ret
repz
int3
jno
dec
mov
sub
jbe
inc
es
xchg
test
sub
sub
fdiv
aas
sbb
jle
es
sbb
rol
addr16
test
pop
jo
testl
je
in
inc
xchg
dec
inc
pop
push
pushf
lret
cmpsb
and
pop
jmp
or
sbb
ds
fdiv
push
pop
cli
jl
std
mov
test
shl
inc
aam
pop
sbb
idivb
roll
and
or
pop
iret
leave
mov
pop
data16
pop
cltd
in
mov
mov
sub
cld
bound
add
xchg
loop
cmp
pop
pop
pop
lcall
jb
je
and
pop
es
aaa
subl
lods
fwait
call
cmpsl
sbb
inc
out
popa
in
cmpsl
aad
xor
bound
test
lcall
mov
pushl
sub
cs
or
cmp
out
xchg
xor
imul
lahf
lods
shll
push
sti
insl
lods
cmp
fs
aam
cmp
mov
mov
test
push
sub
call
leave
data16
and
cmc
cli
xchg
hlt
movsb
push
push
dec
iret
shlb
mov
in
sub
xchg
or
aas
icebp
xchg
fmuls
inc
es
or
jbe
ss
aaa
inc
loopne
insb
ss
shrl
mov
aad
in
push
in
lahf
lcall
xor
cwtl
inc
jo
mov
push
mov
stos
sti
add
cmp
mov
sti
in
movsb
sbb
adc
notl
mov
or
ret
lock
inc
add
lods
lcall
push
clc
cmpsb
cmp
jns
testb
xchg
enter
imulb
adc
and
pop
push
fnsave
movsl
pop
ret
insb
lcall
imul
sub
mov
jecxz
mov
arpl
nop
pop
push
fs
cmp
xor
pusha
lods
hlt
pop
xor
pusha
mov
in
or
pusha
fstps
pop
add
rcr
ds
jae
sbb
sbb
or
cmp
lods
push
orl
bound
insb
dec
pop
ja
xchg
fwait
jbe
jmp
inc
scas
inc
xchg
enter
dec
sbb
fsubs
fs
push
adc
adc
arpl
sbb
or
jae
xchg
sti
mov
call
jl
mov
mov
add
aam
sahf
push
rcrl
mov
into
ja,pt
pop
cmpsb
sbb
stos
addl
daa
out
push
lods
dec
aaa
push
js
inc
mov
ss
push
call
std
pop
jae
sti
pop
push
fnop
pop
add
ret
xlat
inc
xchg
push
fsubrs
pop
mov
xchg
xor
and
jge
mov
movsl
mov
pop
aad
jno
push
data16
push
addr16
cli
fsubs
dec
call
push
andl
xchg
push
lret
clc
xchg
mov
mov
inc
scas
stc
test
lock
mov
fsubrl
pop
or
mov
outsl
imul
pop
pop
aam
ret
lock
frstor
shrl
aaa
dec
or
pushf
cwtl
dec
aam
sub
movsl
jae
dec
inc
and
in
add
popa
jmp
mov
push
push
fwait
int3
sbb
movsb
and
loopne
aas
in
pop
add
test
or
test
popa
pop
inc
push
add
push
mov
jb
outsb
fsubrl
in
dec
dec
ret
test
inc
ret
ljmp
push
aam
jl
pushf
mov
test
mov
aaa
movsl
and
hlt
fsin
dec
mov
sahf
les
ret
mov
push
popf
jne
and
daa
pop
jle
shlb
xorb
aaa
jecxz
and
fsubl
ror
xlat
leave
mov
cmp
out
lret
mov
xor
into
jge
into
test
out
jl
lret
pop
pop
shll
jmp
sub
fisubl
pop
jne
ja
lock
hlt
jmp
into
arpl
mov
push
nop
and
bound
dec
cmp
xchg
jb
test
sbb
andb
jns
push
jle
add
add
ja
push
aad
jecxz
jnp
xor
aas
leave
add
inc
jb
ret
in
dec
out
sti
inc
nop
xor
sti
in
jge
xor
rcr
shl
or
les
sarb
imul
adc
mov
jns
pop
xchg
cmp
test
enter
adc
arpl
and
cld
mov
jmp
dec
dec
jecxz
loop
push
dec
rclb
dec
xchg
mov
lcall
adc
mov
push
pusha
or
test
and
fisttpl
pop
mov
aam
mov
in
jne
pop
iret
xchg
sub
cld
pop
mov
xor
inc
mov
xchg
xchg
and
inc
and
or
sub
aaa
xchg
mov
fwait
and
fdivs
dec
cmc
lea
xchg
insb
movsb
outsb
push
daa
lahf
arpl
into
fnstenv
jmp
xor
and
xchg
fistpll
jns
ja
and
lcall
iret
sti
add
divb
mov
push
jecxz
push
rolb
imul
lcall
jecxz
add
xchg
les
xor
dec
cmp
dec
mov
orl
stos
ja
push
inc
sarb
add
cmc
stos
mov
xchg
and
mov
jmp
xchg
dec
xchg
adc
fsts
and
test
add
fnstsw
push
jecxz
lock
daa
sub
cmp
lock
sbb
lods
mov
push
mov
repz
ss
popf
jno
lahf
xchg
adc
cmpsl
adc
pop
popf
jle
push
cli
lods
arpl
test
loope
outsl
inc
mov
aam
int3
pop
sub
cmpsb
arpl
and
lods
pop
movsb
test
adc
or
rclb
hlt
jmp
mov
stc
jl
std
xor
fisttps
xchg
add
adc
insb
stos
fisttpl
scas
test
mov
ret
add
dec
cmpsl
sub
test
sbb
shlb
pop
fmuls
mov
inc
imulb
adc
shll
out
scas
adc
enter
clc
dec
loope
in
dec
sbb
cmc
mov
test
sub
mov
movsl
ljmp
cmpsb
js
movsb
pop
loope
inc
cmp
inc
gs
cltd
pop
push
jnp
adc
jge
and
pusha
ljmp
bnd
pusha
movsl
shrl
in
pop
dec
pop
adc
sbb
or
clc
and
stc
pop
mov
or
xchg
cmp
sti
pushf
adc
aad
aas
pop
sub
push
mov
and
insl
es
add
and
loope
shll
ljmp
push
lods
in
mov
adcl
mov
sti
push
xchg
mov
add
pop
xor
dec
jmp
je
std
inc
mov
xchg
push
xchg
out
mov
pop
in
mov
jno
adc
push
sub
in
popf
into
out
xorb
shll
xlat
test
add
cltd
push
out
add
scas
cmp
icebp
loop
ds
xor
pop
and
mov
daa
fdiv
inc
inc
in
add
out
popa
sub
lock
clc
jno
pop
mov
lcall
xchg
pop
jge
jle
fadds
fldenv
cmp
adc
mov
cmp
pushf
repz
sub
out
ds
cmp
jo
ss
lret
mov
jg
mov
ror
mov
or
into
lock
fildll
mov
inc
and
cmp
xchg
jne
scas
rorb
repz
sti
repz
shl
mov
sbb
push
in
int
in
movsb
dec
stc
pop
inc
and
push
xchg
mov
push
and
and
stc
lcall
xchg
lea
ds
mov
dec
lret
xchg
mov
popa
test
out
mov
idivl
in
in
sbb
or
iret
pop
aaa
mov
dec
jle
ja
scas
aad
lcall
mov
stos
mov
adc
add
dec
xor
je
movsb
push
or
jnp
in
daa
rcrb
sti
adc
or
mov
xor
jmp
daa
fnstenv
inc
loope
xchg
jl
in
scas
push
mov
cmp
movsl
popf
jle
je
fildll
or
mov
mov
pop
sbb
sub
cmc
shll
adc
sbb
inc
int
mov
out
fucomp
or
addr16
lahf
jmp
les
jle
mov
cmp
or
out
stos
dec
push
mov
sbb
xchg
adc
ss
sbb
cmp
popa
sarb
xchg
lds
ret
enter
pusha
pop
out
and
mov
arpl
sti
mov
shlb
add
inc
addl
inc
mov
clc
jnp
xchg
cmp
and
mov
sub
dec
sub
or
pop
sub
jp
cmc
orl
mov
adc
test
aam
xchg
idivb
mov
xor
adc
fld1
jns
cmp
out
ret
lahf
xor
mov
outsl
cmp
mul
push
and
and
fcoml
outsl
mov
jns
andl
jl
mov
roll
sahf
stos
in
mov
arpl
je
fidivrl
js
mov
add
movsl
or
aad
push
xchg
clc
loopne
mov
add
test
mov
and
daa
cmp
push
and
inc
repnz
test
push
mov
popa
fcmovb
repz
mov
stos
mov
xor
mov
and
sub
movb
into
leave
sbb
adc
push
aam
inc
jp
xor
xor
push
imul
iret
push
icebp
pop
lock
mov
es
outsl
ljmp
mov
mov
rorb
cmp
aad
aas
fistpl
and
xchg
lcall
xchg
xor
or
mov
mov
loope
int3
cmp
cmp
inc
mov
outsl
test
cmp
cmc
stos
aam
sahf
add
cmp
in
mov
call
int
mov
fmul
xchg
fistpll
aam
stos
jge
lcall
rcr
and
mov
jno
sbb
jge
dec
leave
leave
push
xchg
mov
and
lds
xchg
adc
mov
xchg
adc
mov
adc
xor
leave
out
mov
aam
fistps
cld
jl
test
mov
fidivrs
stc
sbb
inc
pop
pop
repnz
and
lods
mov
dec
repz
or
add
aas
clc
add
inc
rcrl
int
mov
jg
int
dec
call
and
std
leave
xchg
inc
test
insb
mov
inc
sbb
sti
or
push
paddb
and
cmp
jl
dec
fwait
push
push
lds
sti
lret
cmc
loopne
pop
add
outsb
stos
out
cltd
es
out
repz
lcall
rcrb
adc
mov
dec
cmp
mov
fldcw
xchg
loopne
cmp
mov
mov
out
and
ds
add
loop
sub
adc
stc
jns
imul
loop
insb
je
mov
xchg
bound
sub
movsl
sti
out
repz
xor
testl
clc
jbe
mov
cmp
sbb
sub
bound
xlat
cmp
out
scas
in
pop
cmpsb
cmp
scas
mov
push
mov
push
in
xor
mov
adc
std
fists
mov
insl
sti
stos
push
inc
cmc
lea
shll
bound
jne
enter
mov
mov
cmc
outsl
adc
mov
test
rclb
shrl
xchg
call
mov
outsl
addr16
inc
jle
jbe
and
cmp
cwtl
fiaddl
xlat
or
andb
push
test
jae
in
sub
test
pop
pushf
insl
sbb
enter
aas
adc
rorl
or
sbb
dec
mov
fildl
xor
push
push
nop
xchg
xchg
jnp
mov
mov
incl
mov
rcr
and
cmp
pop
jl
xor
adc
or
loopne
jne
mov
push
add
into
jo
aad
lods
movsl
ret
mov
cmp
cmp
pop
lods
jecxz
int
call
dec
add
mov
xchg
pop
jmp
xor
xor
loopne
cmp
and
mov
push
out
push
insl
add
fwait
das
dec
ret
aam
and
das
push
mov
fldl
push
clc
inc
pop
dec
das
mov
and
aad
push
xchg
xchg
ja
sub
pop
xchg
mov
jge
mov
sbb
cmp
movsl
rorb
out
xchg
push
push
mov
or
inc
fbld
andl
adc
ret
sti
mov
aad
call
bt
jge
adc
idivb
int3
cwtl
les
pop
or
add
and
cmp
repnz
popa
and
and
jbe
mov
xor
mov
js
adc
out
cmpsb
sbb
ljmp
lea
ja
cmp
cmp
inc
popa
loopne
jp
cmpsb
insl
jo
sahf
add
xchg
adc
pop
lret
and
in
and
outsb
mov
mov
sbb
add
out
jecxz
gs
popf
test
and
or
adc
js
rcrl
imulb
in
neg
gs
jl
int3
adc
mov
das
jecxz
or
bound
jg
lea
lret
xchg
out
cs
mov
mov
data16
mov
in
mov
inc
inc
mov
inc
cld
in
fwait
cmp
iret
pop
mov
push
cmp
ret
mov
jmp
pop
lock
lods
mov
push
nop
cli
lret
imul
shrb
cmp
jb
sbb
pop
fisttps
cmpsb
aas
xchg
aad
pop
or
xchg
jbe
les
nop
mov
xlat
or
mov
daa
out
mov
mov
xchg
mov
xor
and
cmpsb
adc
adc
cmpsb
cmp
cli
jmp
jno
adc
es
into
repz
mov
ret
push
jb
rcl
imul
mov
or
mov
fnstsw
aaa
push
mov
xchg
daa
fildll
jecxz
cwtl
ss
sbb
lahf
jb
aas
pop
jle
mov
repnz
push
iret
mov
daa
in
and
sbb
jle
jecxz
mov
xlat
push
rorl
das
outsb
adc
mov
xchg
fwait
or
cwtl
imul
in
jg
repz
cmp
std
push
fs
scas
sbb
pusha
ficomps
push
and
js
out
adc
xchg
pop
stos
sarb
daa
pop
movsb
sub
pop
add
enter
add
dec
xchg
aas
add
jecxz
xor
lods
adc
push
ret
imul
inc
sub
pusha
ficoms
aaa
das
imul
adc
stos
xchg
sub
xor
push
inc
test
mov
movsl
mov
cmp
cmp
push
xor
ret
lret
ret
ds
popf
dec
sub
mov
add
jbe
mov
inc
ret
in
movsb
add
imul
fs
push
jle
inc
mov
cmp
jecxz
push
and
jmp
push
mov
lcall
mov
insl
pop
lcall
pushf
int3
add
and
daa
inc
push
pop
jl
push
insl
hlt
out
adc
je
ss
inc
gs
int
ret
push
pop
and
cmp
outsb
adc
inc
add
aaa
inc
mov
sbb
mov
out
ss
ds
loopne
or
sbb
push
push
ror
movsl
arpl
icebp
xchg
aad
mov
pop
ret
pop
xchg
mov
fcom
jo
in
cmp
pop
out
inc
fimuls
cmc
adc
iret
pop
mov
daa
movsl
popf
mov
sub
mov
ret
jg
push
mov
shrl
sub
enter
inc
aam
xchg
sub
daa
les
repz
loopne
jle
mov
sbb
inc
xchg
cmpb
mov
add
sbb
mov
push
je
xor
testb
iret
jb
add
adc
or
jge
lahf
sub
lock
cli
mov
sarl
sub
and
repz
pop
loope
dec
cwtl
pushf
push
outsl
lcall
and
or
sub
cmp
cmc
adc
lods
adc
inc
mov
addr16
into
das
rcl
mov
push
fmuls
sub
xor
mov
push
jle
into
mov
add
pop
mov
popa
sub
jle
pop
outsb
popa
imul
out
xchg
je
stos
add
mov
lahf
cs
gs
jge
sub
jmp
mov
rcr
aad
test
jg
xor
repnz
lcall
lea
mov
fildl
or
jb
jp
push
sub
int3
pop
leave
popa
into
mov
push
subl
mov
cmp
pop
add
fwait
test
shlb
dec
scas
xor
std
pop
sbb
inc
jb
testb
mov
cli
call
xchg
mov
popf
movsb
adc
test
sbb
out
sbb
cli
xchg
les
in
ret
pop
stc
bound
mov
mov
push
dec
and
jo
in
sub
xchg
inc
dec
fisubl
add
or
inc
fs
lods
aas
or
negb
sbb
add
jmp
cmp
in
ret
popa
int3
jo
cmp
cmp
shlb
fcomi
mov
inc
pop
das
jbe
shrb
add
mov
xor
mov
mov
scas
sbb
xor
loope
cld
mov
stos
or
add
xchg
stos
das
jno
or
jecxz
cli
loopne
inc
repz
roll
mov
rcrl
loope
adc
outsl
iret
or
mov
jb
insl
mov
sbb
xor
pop
addr16
cvtpi2ps
cmp
cli
cmp
outsl
enter
xchg
insl
adc
push
mov
inc
jp
in
push
aad
adc
xchg
cmp
mov
push
adc
cmp
xorb
cmp
add
mov
jmp
adc
xchg
gs
ja
outsb
or
repnz
dec
push
filds
or
mov
adc
inc
adc
test
mov
sub
outsb
push
adc
xchg
mov
mov
dec
pop
imul
add
or
leave
add
pushf
jae
jmp
mov
icebp
imul
fs
or
lods
loop
adc
xlat
test
scas
mov
push
or
lcall
sub
cli
ljmp
xor
pushf
movsb
adc
mov
in
out
mov
inc
lret
pop
jg
shrl
pop
mov
ja
sub
xor
fcmovb
or
fadd
repnz
popa
cli
jle
mov
ljmp
inc
inc
push
jecxz
rcrl
jmp
ret
dec
stos
sub
or
lock
dec
adc
and
data16
stc
inc
sbb
nop
xor
lret
stos
popf
adc
popf
movsl
adc
xor
mov
mov
lods
push
pop
fidivrs
xor
dec
in
scas
daa
test
insl
ret
inc
pop
or
das
push
mov
jo
repz
fstpl
push
add
shll
test
pushw
icebp
jns
pop
jg
jle
or
adc
mov
and
es
jno
mov
sub
jnp
leave
and
mov
push
mov
dec
ror
mov
stos
out
jns
or
or
add
and
cld
jbe
je
dec
jnp
cmpb
mov
xchg
popf
or
and
ljmp
inc
cltd
jno
imul
push
cmp
int
push
xor
add
mov
xchg
push
jge
out
add
inc
aaa
jbe
mov
cld
mov
pop
lea
ds
out
imul
ffreep
or
xchg
pusha
inc
lcall
xor
pop
mov
push
loope
add
adc
fcoml
dec
leave
and
in
xchg
scas
mov
add
and
xor
arpl
cld
shlb
aas
xor
push
movsb
test
es
jle
icebp
xor
cwtl
inc
cmp
mov
add
fidivrl
aam
movsl
xchg
fisubrl
pop
sub
adc
jns
mov
mov
xor
sub
and
mov
sbb
sbb
or
xor
imul
sbb
adc
lock
rorl
data16
mov
or
or
dec
inc
rcll
mov
sarl
push
pop
lock
mov
int3
push
sbb
dec
sbb
jb
ja
or
inc
mov
popa
clc
and
mov
dec
mull
sub
mov
test
inc
adc
sub
dec
pop
mov
test
mulb
xorb
jnp
pushf
push
mov
fptan
pop
jo
pop
lds
push
aas
loope
add
mov
neg
outsb
flds
cmpb
xor
mov
adc
xor
xcrypt-ecb
cmpsl
dec
lods
push
cs
int3
lret
push
sbb
leave
jo
cmc
test
push
jle
cmp
sahf
push
xchg
arpl
dec
mov
scas
mov
lods
mov
scas
shl
leave
sub
daa
ret
or
fisttps
cltd
test
mov
mov
fs
jns
rcrb
jl
ljmp
lea
cmp
pop
or
insl
hlt
ror
xor
aad
push
test
jbe
lods
mov
cmp
lahf
bound
in
test
xor
add
sbbb
mov
in
pop
loopne
mov
in
mov
dec
push
aaa
xor
insb
pop
lods
add
jmp
jb
pop
xor
pop
adc
jl
negl
das
sub
fcomps
sub
sarb
mov
mov
addr16
lods
push
inc
inc
xor
push
lret
inc
iret
cmpsb
scas
xchg
or
sub
and
xchg
aas
mov
jle
gs
mov
mov
mov
pop
jb
push
xchg
les
aam
fcompl
xchg
iret
add
sub
in
aas
xchg
mov
mov
push
cmp
movhps
das
jl
lea
stos
mov
xchg
jg
outsb
addr16
enter
mov
std
mov
mov
rol
mov
mov
jb
insb
pop
cmpsl
in
mov
xchg
dec
cmp
fcom
int3
sbb
ds
rcrl
xlat
mov
shrb
push
push
jnp
mov
test
pop
iret
pop
sbb
mov
sub
lods
xchg
sub
js
movsl
inc
sub
ja
aad
std
adc
xor
das
cmp
push
push
aad
sub
imul
xor
and
es
sti
mov
cli
and
jge
das
fisttps
push
sub
pop
sub
fs
pop
popa
push
add
test
xchg
data16
add
inc
fisubrl
pusha
das
pop
cs
cld
sbb
stos
mov
pop
push
jg
cmp
jp
jge
sub
repnz
mov
jb
mov
xchg
adc
mov
outsb
or
push
fstpt
add
test
add
pop
adc
jb
paddusb
lcall
pop
pop
push
sub
pop
cli
or
adcb
cmp
pop
sub
std
push
dec
cmp
xchg
sbb
sbb
dec
push
xor
or
mov
imul
enter
push
imul
flds
repnz
push
jbe
xor
in
lcall
xlat
stc
mov
jne
adc
int3
jmp
popf
adc
inc
and
xchg
sub
movsl
dec
fldcw
inc
xchg
push
and
jmp
gs
push
xchg
pop
push
inc
sub
call
inc
jns
out
out
push
sbb
scas
dec
sub
bound
or
inc
jae
xchg
cld
inc
push
outsb
js
dec
xor
jb
fiaddl
sub
std
ficompl
inc
fsubrs
scas
movsl
inc
fwait
or
leave
fistps
xor
mov
sub
ret
push
push
xor
fimull
sar
loope
je
lret
dec
cwtl
les
mov
push
xchg
cmc
push
cld
ss
dec
dec
loop
int3
jp
mov
popa
mov
or
push
repz
pop
push
lds
testb
in
pop
sub
sub
add
inc
adc
daa
xor
clc
das
xchg
data16
add
ljmp
mov
mov
push
or
xchg
lods
pop
dec
or
adcl
mov
data16
in
inc
scas
lea
push
push
pop
jae
icebp
std
ret
push
sbb
mov
push
cmp
add
push
pop
mov
adc
mov
in
out
pop
test
push
jne
sbb
push
lock
mov
or
ss
jmp
dec
cmc
lods
jecxz
mov
adc
repz
loop
ja
jb
cltd
imull
in
inc
testb
popa
sbb
and
stc
adcb
dec
enter
inc
imul
push
jmp
test
mov
mov
cmovns
shrb
inc
push
subb
adc
mov
cmc
dec
daa
sti
or
je
jnp
mov
daa
jnp
pop
pop
dec
dec
imul
filds
xchg
mov
sbb
test
jmp
stos
int3
pop
cmpsb
sti
adc
lcall
xchg
sbb
or
test
mov
cltd
inc
loope
cmp
cmp
andl
rclb
jmp
lcall
je
repnz
jnp
adc
xor
push
sub
rol
loop
loope
or
punpcklbw
fsubrl
cltd
hlt
fisubrl
rorl
stc
adc
push
mov
sti
mov
pop
loop
xchg
jb
jae
dec
mov
jns
dec
inc
jle,pn
cmpsb
xchg
dec
jae
mov
test
mov
jmp
in
jle
sub
cld
lahf
movsl
in
cmp
in
lret
xchg
std
subb
dec
xchg
aam
outsb
xor
dec
fldl
cmovle
inc
test
adc
and
jp
xor
pop
insl
stos
add
sub
outsb
mov
stc
or
pop
pop
or
mov
in
mov
push
add
lcall
mov
xchg
lea
outsb
lahf
mov
in
addr16
stc
imul
pop
xchg
pop
adc
je
pop
mov
adc
cmp
sub
test
repnz
subl
sbbb
mov
mov
jne
push
sub
sti
mov
inc
inc
stc
rorl
cltd
cmpsl
js
mov
and
loop
leave
ret
mov
jnp
jmp
mov
lods
inc
mov
fisttpll
jnp
sbb
sbbb
cmpsl
cmp
in
xor
lcall
lods
mov
pop
jmp
sahf
cs
lods
push
jle
and
aaa
jle
jns
fsubrs
and
mov
cs
lret
mov
imul
xor
cmpsl
sub
push
les
dec
jmp
push
inc
fistpll
out
sub
sub
sbb
or
lods
test
push
xor
mov
add
rcll
aam
jg
sbb
inc
jmp
sub
mov
push
sar
pop
jl
imul
cmp
adc
clc
and
inc
mov
fnsave
xchg
sbb
or
addl
pop
jae
daa
in
jnp
dec
movsb
bsr
stos
xchg
push
cmpsl
pop
fstl
rcl
mov
mov
shr
jle
xchg
jle
push
test
or
push
das
adc
and
pop
add
push
adc
xchg
push
cmp
or
xor
xchg
cmp
xchg
stos
jmp
lcall
push
xor
xor
add
comiss
and
mov
xchg
ljmp
shlb
jbe
push
rcll
pop
popa
enterw
add
mov
imul
jne
scas
sub
xchg
cmpb
lock
sbb
mov
stos
mov
jp
push
pop
repz
sub
xchg
insl
pop
push
movsl
out
cwtl
xor
inc
xchg
popf
cmp
stos
jle
fldenv
lods
xchg
repz
push
loopne
in
bound
mov
mov
xchg
and
test
subl
arpl
repz
push
lcall
leave
add
xchg
inc
lock
fcompl
sbb
lock
sbb
or
aas
push
aaa
xchg
push
cmpsb
test
push
loope
lods
mov
icebp
fldt
fisubrs
out
movsl
shl
into
cmpsl
lea
stc
xor
fldl
mov
fbld
cmp
notb
adc
push
and
repz
mov
jb
xor
out
mov
cltd
or
mov
sub
sbb
mov
inc
mov
mov
push
shll
jo
movsb
jge
in
jle
ss
into
pushf
fcmove
loop
push
sahf
std
mov
ret
loop
imul
inc
xor
stos
jmp
inc
enter
push
arpl
sub
popa
std
and
mov
les
push
cmp
mov
mov
ja
inc
cmc
adc
icebp
and
out
mov
adc
jno
fstp
mov
fstpt
inc
mov
pop
or
xchg
out
in
lods
inc
xor
shrb
dec
daa
insb
imulb
cmp
jp
shrl
and
test
das
lcall
ja
cmpsl
xchg
xchg
xor
mov
mov
fcoml
ljmp
lock
add
out
add
ja
mov
aam
jmp
imul
mov
jecxz
inc
lds
sarb
scas
cmp
and
int
repnz
xchg
cmp
push
js
push
jp
xchg
orb
aaa
addl
pop
mov
pop
iret
jmp
testb
mov
imul
jae
aad
in
in
out
outsl
pusha
sbb
int3
adc
xor
and
mov
pop
jmp
push
add
push
mov
sub
fisubl
pushf
loop
movsl
pusha
mov
sbb
pop
lock
aas
jno
add
xchg
or
fildll
cltd
repnz
cmove
paddusb
ss
pop
psubw
jg
imul
mov
shl
in
das
das
data16
adc
cmpsb
in
add
test
and
dec
iret
clc
leave
sbb
rcl
sarb
inc
adc
aam
fiadds
repnz
push
jp
cmp
add
insl
sarb
or
sub
sbb
jecxz
gs
jbe
sub
stc
pop
mov
fdivrl
cmp
or
cvtps2pd
xchg
fs
in
ljmp
xor
in
aad
push
pop
fxch
sub
daa
mov
sahf
sbb
jmp
inc
repnz
loopne
in
ret
mov
mov
aaa
sbb
int
jge
jns
addr16
add
add
jns
aad
lea
mov
adc
jecxz
ret
outsb
std
fisubl
cli
jns
jg
mov
addr16
jne
mov
ja
je
leave
push
sbb
push
pop
dec
scas
lods
ret
or
sahf
xor
xchg
cmp
pop
fiadds
add
shll
add
cmpsb
pop
out
push
jl
sbb
inc
mov
out
mov
shlb
dec
shrb
and
jle
cmp
jg
add
insb
xchg
loopne
icebp
jne
jbe
mov
xchg
mov
pop
mov
mov
mov
mov
icebp
push
cwtl
xor
jnp
xchg
mov
sti
pushf
pop
insl
imul
rorb
push
xor
icebp
sub
jge
scas
imul
sub
rorl
mov
mov
cli
pop
ja
xchg
jp
nop
mov
data16
or
addb
addr16
jg
xor
out
arpl
bsf
cmpsl
inc
dec
fs
dec
mov
add
jbe
mov
inc
clc
call
inc
mov
scas
dec
inc
shrl
mov
pop
push
xchg
mov
in
shlb
test
repz
mov
dec
popf
fcoml
jnp
into
cmp
hlt
mov
test
test
inc
cli
pushw
mov
insl
pop
js
lahf
pop
mov
repz
push
sub
gs
pop
adc
sarb
pop
repnz
daa
dec
hlt
pop
loopne
je
mov
jmp
sbb
icebp
int
jecxz
icebp
adc
les
loopne
insl
mov
mov
sar
orb
fsubs
lahf
pop
pushf
adc
ja
loope
and
cmp
loopne
dec
mov
or
inc
xor
adc
out
jp
repz
dec
xchg
ds
pop
data16
dec
loope
mov
adc
jne
fsubrs
hlt
jg
push
push
hlt
ss
loopne
in
hlt
bound
and
mov
movsb
repz
repnz
fcoml
inc
mov
out
aaa
lods
pop
jnp
popf
jne
int
sarb
push
subl
pop
movb
into
in
pushf
loop
pop
iret
xchg
pop
cli
push
les
pop
outsb
and
adc
add
outsl
mov
sub
mov
mov
aad
cmpsl
lods
cwtl
addb
jne
inc
jl
ficompl
inc
popa
jnp
repnz
pop
ret
pop
adc
or
fwait
and
sub
or
dec
xchg
inc
mov
dec
sbb
pop
repz
inc
sbb
ret
decl
mov
dec
test
xchg
pop
ljmp
std
xor
sbb
mov
sub
xor
clc
ss
pop
pop
cs
push
cmp
jge
pop
mov
out
xor
loop
xchg
out
mov
imul
call
loopne
mov
xor
sub
cld
shll
add
popf
pop
in
popa
jo
fs
clc
adc
andb
je
cli
test
lcall
sti
jge
lcall
test
adc
test
loopne
xor
repz
cmp
scas
daa
xchg
sbb
aam
xor
push
ret
adcl
cli
add
adc
inc
dec
repnz
mov
and
and
je
je
xchg
dec
cmpsl
cs
icebp
add
lahf
je
subl
cs
stc
clc
lods
pushf
stc
adc
ja
sub
fists
out
mov
shll
int3
pop
jne
lds
addr16
mov
mov
sar
inc
jb
and
fs
sbb
mov
sbb
int3
add
mov
adc
mov
xchg
or
mov
aaa
and
dec
setp
xor
adc
mov
shl
fisubrs
cld
sbb
or
movsl
inc
mov
loopne
jmp
jb
out
enter
push
mov
pop
push
andl
xor
dec
lds
xor
stos
orb
jae
cmp
int
pop
lret
jo
idiv
push
mov
insb
jns
ss
mov
popl
sarb
jmp
arpl
sbb
mov
cmp
xchg
mov
mov
cwtl
sub
pusha
mov
add
dec
add
adc
addr16
inc
inc
popa
gs
jmp
pop
jmp
mov
movsl
mov
push
inc
jb
xchg
pop
jp
xchg
push
lcall
mov
mov
movsl
cmc
xor
push
jb
xor
in
sbb
push
stos
pop
lods
cmpsb
pop
cmp
cmp
dec
je
test
cmp
aaa
dec
sub
repz
sub
jb
mov
mov
or
bound
arpl
hlt
ds
popf
inc
inc
mov
aam
adc
dec
fstpt
adc
dec
and
je
das
in
pop
cmp
in
imull
loopne
inc
inc
pusha
xchg
stos
lret
into
cld
les
and
loopne
xchg
sbb
gs
ds
lds
jl
rcr
mov
jecxz
push
push
xchg
xor
loope
mov
fsubs
mov
xor
lcall
fcoms
push
mov
mov
inc
rol
iret
or
push
enter
pop
mov
sarl
cli
movsl
mov
pop
or
mov
xor
and
scas
inc
fidivs
les
cmc
cmp
dec
in
fld
iret
pop
sub
xor
cmp
in
push
dec
jbe
in
jae
cmp
add
jge
jbe
inc
jns
dec
dec
adc
or
jg
fs
mov
cmp
cmc
pop
lea
add
icebp
outsl
into
pop
ds
xchg
popf
repnz
xchg
inc
in
mov
loope
ja
jl
cmp
mov
mov
cli
xchg
flds
pop
cmp
pusha
push
jne
repz
inc
cmpsl
shrb
mov
cld
pop
pop
test
clc
std
adc
mov
pop
add
leave
jp
push
jmp
and
push
pop
test
add
fcmovb
dec
add
xchg
scas
fldl
pop
mov
sbb
setbe
pop
mov
push
inc
in
inc
pushf
xor
iret
and
xchg
sbb
lahf
mov
xor
jae
popf
and
es
int
lods
mov
xchg
add
or
sbb
arpl
add
adc
jae
lods
cmp
cmp
popf
inc
jne
add
ja
pop
lock
mov
cld
sub
bound
into
rcl
mov
jecxz
daa
push
out
ja
mov
and
test
xlat
inc
fs
lea
lcall
mov
push
xchg
ljmp
and
or
jecxz
insl
ret
aas
aad
or
das
int3
push
adc
lods
adcl
dec
mov
jmp
cmpsb
xlat
in
sbb
fwait
out
dec
mov
movb
es
insl
xchg
popa
jge
out
call
xor
ret
mov
sbb
adcb
testl
dec
adc
mov
xor
mov
dec
sbb
pop
imul
in
xorl
adcl
xchg
adcl
shlb
out
cmpsb
xor
or
shll
aas
adc
dec
ss
das
out
fiadds
sub
sbbb
leave
sub
mov
lods
or
mov
jb
nop
or
cwtl
addl
xor
aad
sub
in
jmp
cli
add
das
popa
mov
mull
jbe
dec
mov
inc
lret
int
into
fs
adc
pop
or
adc
push
es
ret
rorb
sahf
jg
cmp
aam
pop
cmpsl
das
push
int
aaa
dec
and
in
pop
loopne
push
xchg
mov
push
and
ret
push
fsubr
stos
mov
mov
call
rol
ret
dec
sbb
out
and
enter
aam
dec
mov
add
or
sbb
jecxz
mov
repz
jnp
js
ljmp
push
andb
je
cmpsl
insb
pop
arpl
sti
lret
mov
cmpsl
in
xchg
aas
sub
pop
pop
cmp
test
sub
cmp
pop
je
xchg
fldt
mov
popf
xor
mov
xchg
mov
stos
cs
ljmp
mov
mov
pop
dec
int
pop
mov
pop
mov
subb
xchg
add
mov
arpl
or
cli
into
mov
dec
xchg
and
pop
cmp
in
pop
mov
mov
mov
sub
sub
xor
repz
or
dec
mov
les
jns
popf
in
loopne
in
test
jo
jecxz
add
int
mov
jb
hlt
mov
lahf
and
loop
adc
or
lahf
jo
repz
sbb
cltd
das
in
popa
mov
cmpsl
dec
lahf
push
xchg
stos
cmpsb
jns
dec
dec
adcb
or
adc
fcos
rcll
inc
jno
mov
sbb
dec
pop
jge
or
je
lods
daa
fiadds
daa
lahf
arpl
jne
or
out
xchg
dec
push
dec
movsl
sahf
xlat
xchg
nop
jle
push
jo
jne
pop
stos
call
cmp
in
rclb
andl
mov
fyl2xp1
push
jb
cmpsb
loop
je
fnstcw
scas
ljmp
adc
mov
jg
jns
out
jnp
sbb
dec
leave
insl
dec
inc
rorb
push
mov
and
test
int3
pushf
dec
jmp
lods
scas
sahf
repnz
sti
jg
in
xor
push
hlt
pop
ja
in
imul
jmp
sbb
sbb
or
mov
fadds
sbb
mov
lock
scas
xchg
std
les
enter
mov
movsl
out
cmp
ljmp
pop
xor
jo
jo
es
mov
push
sub
sub
lock
add
nop
cltd
shlb
in
shlb
sarb
xchg
jo
idivl
adcl
pop
push
fs
call
mov
sub
iret
pop
cmp
int3
outsb
mov
repz
dec
push
mov
lods
lret
dec
push
cltd
ja
int
mov
out
mov
jl
inc
fs
mov
faddl
movb
lods
repnz
mov
jno
xchg
scas
incl
sbb
or
sbb
out
sbb
adc
andl
jnp
je
aaa
add
xchg
jns
mov
adc
mov
mov
push
cmp
rcrl
and
shll
adc
test
mov
xor
daa
ljmp
inc
fdivrp
pop
in
dec
jl
lret
xchg
push
add
data16
pop
inc
insl
xchg
in
cmp
push
call
inc
mov
sub
lret
sahf
mov
inc
fstp
cld
xor
sbb
test
add
pusha
or
cmpsl
dec
jnp
js
or
fisttpll
rcl
cmpb
cmp
dec
fstpt
sub
and
stc
int
test
sti
notb
jo
icebp
xchg
inc
or
jecxz
cmpsl
mov
fnclex
and
jg
sahf
shll
arpl
or
ljmp
int
stos
dec
shrl
js
add
sub
rcr
aas
sbb
cli
insl
scas
jmp
sbb
das
cs
and
xchg
add
add
addb
jb
mov
inc
pop
pabsd
test
loope
nop
jno
push
stos
or
sahf
push
addr16
adc
leave
sarb
je
mov
dec
pop
and
pop
leave
out
loop
aad
out
ds
repz
cmp
jns
xchg
mov
adc
dec
fcompl
adc
int3
xor
and
sub
xor
lds
stos
jb
mov
or
xchg
adc
iret
dec
mov
cmpb
push
and
dec
xchg
ljmp
cli
adc
out
and
loopne
shrb
sbb
sub
repnz
or
mov
nop
shlb
jmp
mov
and
mov
nop
iret
and
jne
fildl
xchg
scas
std
mov
mov
add
xchg
sbb
pop
outsb
lods
cmp
jg
and
push
iret
jne
xchg
mov
or
jb
movsb
adc
cmp
dec
pop
or
ljmp
cld
xor
aas
fisubrs
call
jo
push
push
jns
xchg
or
cwtl
lcall
es
dec
xchg
adc
mov
out
aas
xchg
leave
cmpsb
fildl
xchg
pop
inc
mov
cmp
or
mov
int3
add
push
push
mov
in
jno
rcrl
loopne
sbb
pop
jae
push
sub
rolb
jl
loopne
arpl
lea
cmpl
das
in
add
and
ficomps
outsl
add
mov
cwtl
dec
mov
cld
pop
mov
sub
xor
mov
in
les
or
out
cmc
cmp
xchg
enter
xor
jnp
cmp
sub
xchg
std
xchg
bnd
mov
lea
pop
xchg
or
out
jnp
inc
jno
push
mov
push
inc
aaa
mov
lods
pop
loop
bound
ret
xor
mov
inc
mov
adc
lods
and
push
dec
lds
push
mov
repz
das
leave
xchg
outsl
pop
repz
xor
scas
lcall
js
xor
or
lods
push
cmp
inc
popa
roll
xchg
adc
ret
mov
jecxz
adc
mov
imul
aad
ret
adc
insb
inc
cmpl
or
and
jns
movsl
in
jb
push
sub
sbb
test
icebp
sub
pop
out
mov
adc
xchg
mov
or
dec
xchg
sub
loop
mov
decl
dec
push
cs
sti
xchg
xchg
clc
dec
clc
jns
adc
adc
mov
repnz
rcl
lds
lcall
dec
mov
mov
scas
mov
loop
xchg
lods
movsb
cli
jp
arpl
cwtl
pop
cmpb
inc
fdivl
mov
stos
jnp
scas
cli
int
add
insb
pop
dec
push
pop
test
stos
cmpl
inc
sti
loop
sbb
dec
ljmp
mov
mov
stos
mov
das
aas
repz
mov
sahf
or
mov
pusha
ret
loopne
fucom
rcl
shrl
enter
fisttpll
ja
ficoml
add
sub
loope
sbb
sti
das
int
pop
aam
shlb
les
scas
sahf
xchg
insb
push
sub
pop
pop
inc
dec
pop
push
push
addl
xchg
sbbl
xchg
push
insl
mov
lret
movsl
sahf
xor
jne
shll
jl
adc
jl
loope
sub
dec
lcall
pop
inc
rol
lahf
dec
leave
loop
xor
pushf
scas
in
cltd
mov
mov
adc
add
cmp
mov
or
ss
rclb
sti
mov
mov
mov
inc
cmc
pop
jmp
and
jb
fcomps
in
push
aad
mov
add
test
insl
test
outsl
rol
adc
stos
sub
sahf
out
stos
mov
adc
gs
aam
hlt
movsb
xor
scas
inc
cmp
mov
adc
int
adc
sbb
test
fnstcw
pop
cmp
dec
stc
aad
jno
or
push
loop
push
xor
mov
dec
inc
pop
jae
jl
jge
push
mov
mov
orl
and
movsl
scas
mov
nop
push
js
neg
das
dec
jno
inc
loope
pusha
xchg
leave
mov
cmp
cmp
rcrb
ss
gs
inc
test
and
mov
sti
insl
sti
out
sub
push
jmp
lret
les
jnp
ljmp
sbb
je
cmpsb
adc
xor
xchg
lret
dec
lret
pop
or
add
and
pop
aaa
cmc
mov
aad
mov
aas
push
loopne
inc
stos
or
aaa
fmul
add
sub
cmpsl
popf
mov
inc
inc
mov
inc
pop
fwait
sbbl
inc
add
in
mov
or
cmpb
cmpl
andb
add
or
xchg
inc
out
fdivl
add
mov
subl
jno
fwait
mov
sbb
lods
push
xor
bound
fistpll
sub
cwtl
add
stc
dec
mov
xchg
mov
inc
repnz
ret
loop
out
iret
sbb
or
and
jbe
pop
mov
lahf
or
or
cwtl
leave
lods
int3
adc
mov
insl
jne
sub
and
push
adc
les
mov
fsubrs
jae
cld
add
icebp
mov
mov
jl
ret
cmp
fucomip
xor
or
pusha
xchg
push
aas
pop
aam
push
mov
stos
push
outsl
pop
fistl
cld
cmp
cmp
iret
jb
xchg
xchg
dec
push
mov
dec
mov
add
jae
mov
adc
or
sahf
mov
fxch
es
adc
rorl
bound
jmp
xchg
xor
movsb
movsb
ljmp
jmp
in
xchg
lret
push
xor
mov
notb
pop
fwait
nop
or
jle
add
adc
xlat
shll
sbb
xor
dec
fwait
aaa
dec
syscall
push
add
push
cld
jb
add
stc
in
push
addb
jnp
hlt
es
inc
ljmp
xchg
sar
inc
dec
mov
add
mov
xchg
mov
xchg
rorl
mov
pop
sahf
and
jne
jg
sahf
mov
sarl
xorb
jae
jns
in
jno
and
test
or
cmp
rolb
dec
xchg
jmp
in
repnz
or
pop
jne
mov
sbb
dec
insb
dec
shl
fmuls
inc
xor
dec
ss
sub
pop
leave
inc
mov
stc
lret
inc
stos
add
stos
dec
cli
arpl
mov
lock
xchg
fidivrl
lods
push
in
inc
push
mov
jbe
int3
and
fidivrl
dec
data16
outsb
ds
fcomi
call
imul
add
mov
outsl
pop
adc
push
mov
addr16
mov
test
aas
hlt
xchg
xlat
and
rolb
inc
fsubr
adc
incb
cli
pop
or
clc
lret
add
sbb
js
in
cs
in
imul
out
sub
push
cmp
fcmovu
mov
mov
test
or
clc
mov
lret
int3
rcl
fidivrs
lods
mov
pop
mov
fsubs
pop
mov
jmp
jae
push
cmp
loopne
jne
xor
push
out
xor
cmp
lds
ret
pop
aad
mov
push
sahf
nop
mov
test
mov
and
dec
push
push
test
or
cli
mov
iret
in
mov
popf
pusha
push
or
movsl
lcall
lcall
out
or
imul
cmpsl
out
jae
imul
jmp
mov
scas
xchg
xor
in
inc
and
push
pop
cmc
and
sub
mov
inc
xlat
push
push
cmpb
or
imul
pop
in
dec
mov
loop
mov
xchg
inc
sub
stos
clc
cmp
fs
jl
lods
or
aas
cmp
mov
mov
push
jno
ret
imul
ret
jnp
fdivl
das
jecxz
mov
insl
jno
and
pop
mov
fnstsw
loopne,pt
mov
lods
in
bound
lahf
dec
enter
push
into
lds
insb
std
pop
xchg
xchg
inc
ret
mov
lret
icebp
nop
sbb
cmp
daa
rorl
data16
nop
or
or
loopne
cmp
les
adc
jl
cmp
add
or
mov
mov
stc
rcr
dec
repnz
mov
mov
or
mov
ss
fldcw
or
xor
sub
mov
std
aad
cmpl
push
and
add
movsl
xor
or
adc
les
jl
adcl
addr16
xor
mov
mov
xchg
cwtl
add
cmp
or
cmpsb
out
mov
inc
xchg
stos
fiadds
sbb
mov
mov
or
cltd
pushf
add
inc
movsb
std
jecxz
sbb
mov
sub
mov
dec
mov
push
test
xchg
push
adc
jge
lret
out
popf
leave
push
inc
sbb
xor
adc
xor
mov
arpl
push
adc
in
das
sbb
nop
sub
sbb
mov
dec
pop
lods
cmp
sbb
int3
xchg
sbb
inc
pop
add
mov
jp
jg
mov
and
inc
sub
nop
test
inc
mov
out
mov
arpl
and
or
adc
ljmp
push
jg
bound
lcall
xor
fidivl
scas
xchg
ja
shlb
cmpsl
mov
mov
push
adc
mov
popa
inc
jbe
sbb
or
sbb
cmp
mov
lahf
adc
inc
xchg
xchg
sub
jge
stos
adc
fldt
mov
inc
add
jb
push
push
mov
pop
sub
jge
jne
xchg
sbb
cmp
fisubl
pop
sbb
sbb
mov
ljmp
jo
ret
lret
adc
sbbb
cmp
adcl
mov
push
nop
test
cld
rcl
daa
adc
jmp
cmpb
mov
cli
fnstenv
push
mov
mov
inc
jge
fwait
mov
adc
jp
mov
push
sub
repnz
enter
leave
dec
pop
test
outsb
push
xchg
push
outsl
out
sub
mov
popf
pop
sbb
std
lds
aad
cli
inc
sbb
mov
pop
mov
inc
sbb
mov
xchg
xchg
imul
pop
out
inc
cmp
pop
shrb
jb
sbb
movsl
jl
cmp
mov
push
xor
mov
lds
pop
fistl
xchg
cltd
ror
inc
test
cltd
popa
ljmp
sti
mov
das
popa
loopne
cltd
sbb
mov
cmp
add
cs
xchg
or
ja
andl
cli
fbstp
mulw
out
outsb
cmp
mov
xchg
jle
std
sbb
hlt
add
add
mov
clc
sub
mull
sbb
xor
xor
bound
fsts
sub
frstor
cs
xor
lods
sbb
inc
push
std
mov
rcrl
mov
add
scas
out
mov
sbb
rorl
cwtl
add
mov
pop
add
jno
scas
mov
clc
popf
iret
sbbb
insl
fwait
cvtpi2ps
or
jge
aaa
lret
pop
out
ljmp
fldl
xchg
pop
pop
nop
pop
sbb
out
inc
mov
fisubs
dec
push
xchg
js
popa
adc
sub
popl
call
or
loop
ds
jmp
mov
pushl
mov
stos
mov
push
push
sub
call
cmc
dec
adc
aam
call
clc
xchg
fistpl
sbb
or
pushf
dec
call
mov
push
lods
movhps
shlb
dec
push
inc
xchg
scas
fmulp
in
divl
xor
cmp
mov
mov
mov
enter
xchg
sbb
adc
mov
xor
pop
push
fcoms
push
fisttpll
imul
lods
mov
leave
sahf
into
call
pop
inc
mov
sbb
mov
dec
cmpsl
mulb
shrl
shl
sub
add
jo
inc
data16
outsl
jo
jmp
rclb
inc
cli
nop
ret
pop
cmp
lret
lods
mov
loopne
push
jbe
push
js
gs
mov
xchg
jle
sub
into
cmc
and
xor
stos
xor
pop
repnz
and
std
outsl
adc
lcall
mov
jg
dec
pop
dec
add
test
inc
dec
sub
in
xlat
xchg
adc
xchg
not
mov
or
ds
and
shlb
xor
sarl
jle
add
mov
cli
cmpsb
mov
cmp
push
pop
mov
jmp
scas
jnp
mov
inc
orl
mov
adc
int
sub
aaa
scas
sbb
mov
adcb
mov
push
lea
adc
adc
mov
mov
and
div
loop
les
inc
cmp
into
scas
ljmp
rorl
push
test
insb
popf
movsl
jp
fnstsw
dec
and
inc
shlb
cmc
xor
jb
mov
ljmp
mov
incl
inc
xchg
xchg
addl
inc
fs
jb
push
movsl
xchg
mov
leave
fcmove
scas
add
mov
cmp
mov
cmp
addr16
inc
outsl
sbb
mov
jmp
and
clc
dec
jne
aad
and
leave
fwait
scas
jbe
lret
cmc
and
pushaw
sti
in
jle
jmp
daa
xchg
push
mov
cmp
fstl
xchg
xor
mov
add
lea
data16
inc
inc
rolb
in
in
fdivrl
pop
or
nop
loop
push
and
mov
pushf
and
fs
nop
movsl
or
inc
daa
push
jo
jno
dec
fs
orl
sbb
sub
in
adc
jno
je
pop
cs
loopne
ljmp
bound
pusha
shlb
test
in
fs
push
and
cs
daa
shl
out
in
jns
imul
movsl
pop
sub
cmp
and
jge
fbstp
dec
xchg
add
or
push
mov
push
jbe
fucomi
in
add
mov
ss
int
lahf
pop
xor
mov
sbb
in
mov
daa
imul
pop
pop
popa
and
loopne
xchg
sub
and
xor
sub
add
cmp
outsl
add
cbtw
jle
cwtl
sbb
enter
js
push
pop
mov
push
int3
je
lahf
sub
ret
and
or
xchg
repz
enter
je
loop
push
push
pop
or
mov
dec
pop
out
sub
scas
mov
push
xchg
pop
dec
xchg
pop
or
or
lock
pop
sbb
or
cwtl
lods
push
jle
xorl
sbb
jp
out
push
sub
dec
dec
xor
aad
push
stos
push
push
bnd
mov
jno
xchg
icebp
movsb
popf
dec
jle
sub
lods
lea
orl
stos
jne
pop
lret
inc
cmpsl
rcl
loope
iret
dec
sub
aam
adc
ret
imul
jno
movsl
pushf
cmp
cs
divb
push
out
mov
jg
out
xor
data16
movsb
inc
scas
testb
push
xchg
cltd
sub
sbb
xchg
pop
fists
push
ds
mov
loop
jne
mov
xchg
loop
je
and
pop
sti
ja
fwait
les
xor
fadds
test
call
xchg
negl
movntps
push
push
outsl
insb
pop
cmp
mov
add
movsl
mov
mov
mov
sub
cmpsl
clc
decb
or
jae
dec
mov
addb
gs
add
jb
push
pop
fimuls
push
dec
imul
mov
mov
mov
inc
mov
sub
mov
pop
mov
xchg
mov
inc
xchg
push
ret
aam
xchg
and
cli
jecxz
mov
adc
pusha
rcll
or
sbb
in
cmpsb
nop
imul
fsub
xor
sbb
outsb
inc
mov
and
inc
loope
cmpsb
cmpsl
outsl
ret
cmp
pop
pop
fiaddl
inc
rorl
fisttps
or
loope
push
xchg
jge
inc
outsb
pop
add
movsb
aaa
lcall
repnz
sti
xor
psubd
cmp
add
dec
sbb
push
hlt
dec
dec
fwait
aaa
scas
jle
inc
aaa
out
or
xchg
nop
test
aaa
xor
jp
mov
mov
ret
scas
jmp
shrl
dec
out
xchg
and
inc
jecxz
cwtl
outsb
mov
pop
inc
mov
jb
push
cmp
jmp
pop
dec
adc
sbb
fisubs
or
into
scas
pop
mov
stc
mov
xor
std
push
scas
xor
adc
add
push
leave
sbb
or
jbe
mov
sbb
cwtl
cltd
inc
mov
mov
push
push
dec
push
add
out
and
mov
fld
stos
rolb
popf
sbb
popa
lds
int
fs
or
sbb
imul
es
mov
push
mov
cmpb
and
xchg
leave
scas
mov
add
sbb
in
out
iret
jecxz
adc
pop
out
movsl
sub
inc
sub
inc
dec
data16
mov
out
mov
out
push
cmp
xchg
loopne
xor
fcoms
aas
aaa
nop
loope
repz
and
dec
pop
sub
mov
repnz
ljmp
lea
test
push
cmpsl
xchg
ret
adc
lret
stos
inc
xchg
stc
insb
add
add
or
or
movsl
nop
arpl
outsb
shll
ror
mov
adc
lret
push
mov
ss
dec
or
cmpsb
inc
ljmp
rcrb
lods
xor
adc
pop
cltd
jp
mov
popf
test
inc
cmp
out
adc
incb
xor
push
pushf
lret
orb
pop
pushf
dec
inc
mov
add
imul
adc
add
mov
mov
sub
push
push
dec
je
das
rcll
lret
pop
xor
insb
sti
xchg
repnz
inc
dec
sbb
test
or
stos
adc
bound
shrb
and
das
or
push
jmp
daa
fistpl
xor
test
aam
push
aad
xor
fsub
push
gs
mov
adc
bound
jae
pop
pop
stc
inc
addr16
or
mov
lahf
dec
rcll
jns
into
cmpsb
movsb
dec
inc
fsubs
in
add
addb
pop
scas
inc
loop
test
cmpsb
ds
mov
and
int3
cmp
cmp
inc
scas
jge,pt
mov
dec
repnz
int3
mov
inc
cld
ljmp
sub
fs
faddl
ret
pop
xchg
pop
jp
cmp
xor
andl
push
icebp
inc
std
outsb
gs
das
pop
pop
sbb
pop
inc
or
adc
cwtl
and
push
jae
popa
pop
sbb
addr16
addb
push
cli
jne
xchg
inc
xchg
xor
and
insb
mov
pop
jecxz
dec
fidivrl
inc
cmp
ja
dec
jecxz
cli
dec
subb
out
pop
aad
mov
xor
mov
jae
lahf
pop
mov
ds
cmp
fisttpll
in
rcrb
in
jmp
or
push
ja
mov
mov
cmc
scas
lods
ret
dec
adc
mov
inc
inc
pop
mov
jne
lcall
hlt
sbb
movsl
sahf
inc
jmp
inc
stos
arpl
lods
in
push
aam
xor
inc
call
cmp
xor
mov
int
mov
jp
adc
jecxz
fiadds
fidivrl
les
movq
add
or
test
pop
fwait
inc
and
xchg
fbld
js
xchg
xchg
and
iret
and
movsb
repnz
push
mov
xchg
rcrb
pop
lods
lock
dec
add
popa
mov
test
mov
ror
jmp
cmp
push
imul
xchg
pop
int3
mov
jb
mov
test
sarl
imul
orl
pop
pop
cmpsb
mov
int
setne
js
pop
es
mov
cmpsl
pop
pop
cmp
mov
xchg
xchg
pop
mov
sub
orl
jno
rcr
jecxz
push
xchg
mov
jp
mov
notl
jecxz
pop
fimuls
cmpsl
sahf
int3
pop
es
pop
mov
hlt
adc
xor
pop
imul
jecxz
mov
pop
xor
or
cmp
repz
mov
pushf
into
mov
sub
movsb
int3
dec
mov
cmc
dec
and
xorb
cli
outsb
xchg
test
inc
loopne
out
jnp
out
sub
aas
in
int
jo
cwtl
fsubl
jne
dec
mov
adc
aas
test
loop
pop
push
sub
inc
sub
sub
jne
popa
mov
scas
test
push
jae
movq
jmp
mov
fdivrs
sar
sub
mov
push
lret
loope
xor
fwait
gs
iret
jl
xor
xchg
loope
sbb
das
ja
fistps
mov
nop
lea
push
xor
sub
shlb
or
mov
sub
psraw
flds
and
fs
mov
add
movsb
out
inc
xor
mov
and
imul
inc
incb
fcmovne
and
testl
cmp
add
xchg
scas
mov
fstps
push
test
sbb
xchg
cltd
xor
add
xchg
repnz
add
fstpt
je
pop
push
pop
cltd
cmp
lret
add
lock
adcb
mov
dec
and
js
push
pop
mov
aaa
add
push
aaa
lahf
ret
insb
xor
sub
jmp
add
fcomps
push
mov
leave
inc
shll
mov
iret
mov
ja
dec
push
and
push
cli
enter
mov
fistps
je
cs
in
mov
insl
pop
adc
pushf
dec
pop
mov
cltd
or
mov
fstps
popa
std
push
gs
out
stos
or
in
dec
jbe
push
and
rcll
fcmovne
inc
mul
cmpsb
popf
xor
sub
xchg
mov
add
adc
mov
lock
shrl
loope
testb
mov
ret
add
pop
cwtl
sarl
loop
xchg
scas
adc
add
cmp
mov
xchg
sbb
add
outsl
ja
icebp
cmp
fsub
test
pop
sbb
outsb
notb
lcall
jne
xchg
popa
jmp
icebp
repz
sbb
adc
mov
iret
sub
call
adc
jg
popa
mov
mov
cwtl
jg
push
push
ss
add
stos
pop
sbb
xchg
inc
dec
push
mov
in
mov
adc
or
mov
push
pop
lcall
xor
adc
fiaddl
aas
lea
rcrb
call
imul
bound
adc
sub
dec
jp
dec
add
cmp
test
out
cltd
xchg
pop
or
jno
mov
push
icebp
inc
pop
mov
jne
sbb
insb
shrl
or
xor
mov
lret
mov
mov
mov
fiaddl
in
loop
add
jns
fwait
add
inc
and
imul
les
jmp
sub
mov
fiadds
xchg
mov
in
imul
mov
aad
cmp
imul
pop
sub
shrl
es
adc
add
dec
loope
push
testb
idivl
icebp
mov
shl
mov
sbb
adc
std
loopne
test
xor
sbb
mov
inc
sbb
popf
sbb
mov
dec
push
pusha
daa
insl
sbbl
xchg
out
pop
test
shrb
mov
imul
push
jg
sbb
jbe
and
sbb
and
fdivrs
call
out
in
inc
mov
or
cli
cmp
aam
inc
js
xchg
mov
inc
or
nop
cwtl
pop
push
jmp
sbb
and
inc
dec
shlb
adc
adc
push
clc
int
cs
aam
cltd
movsl
arpl
ret
cmp
fdivrs
out
int3
jbe
cmp
mov
mov
in
mov
cmp
sahf
dec
out
andl
scas
sub
outsl
lret
inc
and
imulb
rclb
pop
mov
pusha
push
xchg
sbb
int3
push
in
or
xchg
mov
cltd
dec
jecxz
add
into
push
cmp
orl
lret
stos
jmp
filds
xchg
jnp
lock
dec
inc
sbb
mov
mov
das
fldt
cmpsl
cmp
mov
pop
loop
sti
or
xchg
stos
pop
jle
xor
addr16
and
mov
repz
clc
push
push
jecxz
pusha
dec
mov
or
jmp
mov
pop
aas
jmp
sti
push
imul
imul
cmp
push
xor
ljmp
xchg
sub
stc
lahf
rorl
jnp
loopne
cltd
cmp
and
xor
into
mov
dec
iret
add
mov
ret
std
and
jnp
lret
sar
jae
mov
das
sti
sbb
adc
xchg
sar
shlb
ljmp
xchg
pop
gs
sbb
xchg
rcrb
andl
aam
sbb
mov
inc
sbb
xchg
mov
pop
adc
fstps
clc
or
jnp
and
cli
jmp
and
and
enter
add
xchg
das
popf
dec
and
jbe
insb
cmp
mov
das
imul
sbb
leave
push
fdivs
and
sbb
shrb
mov
leave
data16
xchg
es
out
adc
out
pop
xchg
xchg
lahf
jno
push
sub
nop
xchg
shlb
jo
sbb
mov
pop
push
insl
bound
cld
daa
lcall
mov
fnstcw
mov
repnz
mov
pop
sti
sti
mov
movhps
pop
xchg
popf
test
push
pop
sahf
cmp
lret
das
nop
or
dec
pushf
push
popa
fcoms
cmp
add
jno
pop
sahf
inc
outsl
jl
jg
mov
mov
enter
fstpl
insl
neg
push
sub
push
sbb
inc
xor
add
in
add
in
push
mov
pop
mov
sub
shll
leave
jg
aas
bound
xchg
sbb
fcmovnbe
jbe
jge
aas
ljmp
mov
lret
mov
pop
xor
ret
add
test
pop
push
cmp
mov
inc
test
jbe
jns
sti
xchg
fwait
and
jns
aad
subb
cmp
push
outsl
cwtl
inc
add
out
jg,pn
and
xchg
inc
test
clc
inc
js
jne
pop
jnp
jle
jno
push
sahf
mov
lcall
stc
ljmp
add
js
push
mov
inc
pop
dec
jge
imul
ret
ds
and
or
loopne
push
mov
jae
pop
stc
repz
and
in
cmp
pop
mov
dec
movsb
pop
out
pop
xor
sub
mov
dec
mov
in
das
sbb
popf
shl
call
mov
je
pop
add
jns
loope
cs
xor
fsubr
outsb
into
in
repnz
fistl
into
popf
test
jle
or
jle
xchg
dec
stc
sti
out
add
inc
es
test
nop
loop
cmpl
lahf
jp
cld
cmc
xor
sbb
lds
inc
xchg
jecxz
jns
loop
out
push
xor
jle
jbe
arpl
and
fdivrs
xchg
mov
into
rcrb
sub
loopne
mov
insb
das
rorb
mov
cmp
lea
mov
cmpsb
dec
dec
xchg
lods
popf
xor
imul
push
rolb
mov
push
cmp
xchg
jmp
push
roll
jmp
sbb
lock
sti
adc
nop
lods
xchg
jecxz
xor
sub
dec
lret
push
sti
adcb
mov
cmp
xor
and
repz
mov
pop
or
jle
sahf
sub
mov
dec
repnz
mov
adc
inc
xor
ja
jg
xchg
outsl
sub
xchg
es
and
push
lea
loope
mov
imulb
push
dec
popa
mov
add
jae
cmp
xchg
xor
cmp
adcb
scas
leave
xchg
dec
movb
fdivs
addr16
jle
xchg
push
je
push
test
out
inc
aas
stos
test
popf
test
mov
fstps
pushf
ss
jo
and
push
add
mov
mov
sub
xor
xchg
mov
mov
cmp
jmp
in
dec
and
test
popl
push
pop
add
call
in
and
sbb
fdivrl
or
mov
ret
cmp
movsl
inc
out
fnstcw
in
cmpsb
gs
je
cwtl
sbb
rorl
jb
sbb
add
add
dec
ret
mov
pop
mov
cli
push
lahf
test
out
xlat
sahf
dec
stos
lods
or
mov
jbe
nop
cmp
lret
sub
and
or
mov
ds
shll
enter
pop
adc
fdivrl
out
xchg
clc
push
data16
mov
into
mov
testb
pushf
sbb
cmp
add
pop
shll
pop
clc
dec
movsl
in
push
sub
mov
lods
xchg
int3
int3
mov
insl
mov
mov
shlb
jge
mov
out
fucomi
dec
cmpsb
insb
shlb
jbe
aad
xor
je
lods
adc
popa
addr16
lahf
inc
loope
xor
cwtl
ljmp
jp
sbbl
outsl
sbb
leave
pop
ja
fsubp
movsl
repnz
mov
mov
lock
mull
mov
pop
cmc
jbe
mov
sub
pop
mov
pop
mov
aaa
mov
push
in
sbb
sti
fstps
or
fcmovnu
xchg
jmp
inc
in
shlb
sar
inc
cmp
jmp
xchg
test
repz
rcrl
iret
adc
mov
jle
cmpsl
push
hlt
xchg
notb
xor
inc
lea
sbb
pavgb
pop
jne
sub
repz
or
imul
aaa
loop
int3
xchg
cs
lcall
mov
ror
add
bound
cmp
outsb
push
aas
and
sub
mov
cmp
push
cmp
xor
loopne
pop
cmp
repnz
arpl
push
test
mov
iret
stos
shll
pop
ja
sub
test
je
xchg
imul
mov
dec
mov
mov
test
sahf
push
in
repz
movsb
test
lcall
pusha
icebp
sarb
mov
mov
into
inc
jecxz
mov
pushf
lods
mov
or
pop
mov
outsb
mov
addr16
mov
xor
fwait
inc
sbb
outsl
xchg
loop
or
push
lock
repnz
or
inc
jmp
add
and
idivl
jl
lods
test
inc
jb
xor
movsb
mov
sub
and
inc
push
and
pushf
xchg
jp
out
cmpsl
add
dec
dec
cmp
xchg
sti
sub
daa
stos
jb
mov
inc
push
nop
test
outsb
pop
sub
cmp
cmpsb
leave
pushl
mov
lcall
stos
adc
shlb
sbb
or
cli
arpl
mov
repnz
xchg
bswap
or
jno
scas
cmp
mov
inc
push
icebp
inc
es
sub
push
jnp
dec
stos
dec
movsb
hlt
outsl
xchg
jo
lea
jle
movsl
or
xchg
pop
push
mov
pushl
jge
fisubrl
popa
cmpsb
cs
stc
sbb
and
xor
xor
add
dec
ja
mov
cmp
sbb
inc
xorl
cwtl
push
and
inc
and
iret
cli
sbb
shrb
cmpsl
fsubrl
inc
push
icebp
repnz
daa
jae
cld
popa
jg
xor
aad
mov
dec
cmp
cmp
mov
and
sarb
inc
cwtl
popa
cltd
xchg
mov
and
mov
aaa
orl
dec
push
loope
mov
push
mov
stos
jge
mov
and
mov
cmp
jge
fidivrl
into
lea
fadd
fsubr
mov
lock
adc
add
movsb
aas
lcall
mov
fisubrl
cmp
test
rep
and
sti
iret
push
test
push
sub
cmpsb
stc
jecxz
scas
cmpsb
sub
les
icebp
jo
test
push
lcall
bsr
lcall
int
sub
fistps
scas
bound
rolb
push
adc
sbb
adc
jbe
xor
stos
loop
out
mov
aas
mov
repz
lea
ud1
dec
into
xchg
push
dec
jno
mov
leave
inc
or
push
aam
int
js
icebp
out
mov
daa
cmp
sub
pushf
jl
mov
pop
sub
dec
mov
sub
daa
repz
and
leave
xchg
sub
addr16
mov
cmpsb
cltd
das
or
mov
jo
jg
arpl
mov
arpl
pushf
and
ss
in
das
frndint
jl
or
cmp
scas
lcall
into
popf
aad
out
cltd
rcl
lahf
and
jle
lock
inc
mov
mov
sub
cli
sub
adc
icebp
xchg
push
pop
ret
push
ret
mov
push
inc
add
fsts
pop
dec
xor
jg
sub
aam
mov
pop
or
adc
jl
fsubr
dec
fcoms
xor
add
enter
lahf
int3
rorl
gs
mov
and
call
inc
add
inc
xor
pop
dec
stos
movsl
cli
pop
jae
lods
mov
push
inc
jb
ljmp
je
mov
loop
pop
pop
into
stos
pop
sbb
inc
mov
pop
ja
stos
mov
sub
add
lret
or
push
jmp
cmp
xchg
cmp
mov
movsb
imul
dec
bound
xorb
out
and
and
sti
cwtl
dec
xor
push
jno
push
dec
or
loop
adc
popa
push
ljmp
and
sbb
mov
push
adc
xlat
ss
popf
mov
outsb
lods
ljmp
fsts
sbb
fnstenv
sbb
clc
data16
xorb
loop
outsb
lret
lea
lods
popf
xor
jbe
fwait
shrl
mul
stos
aaa
ljmp
mov
dec
out
cmpsl
push
and
jecxz
adc
lret
in
sub
movsl
lea
mov
fistpll
out
stc
xor
pop
mov
fucom
cmp
dec
xchg
in
insl
cmp
cli
scas
xor
rcrl
mov
subb
imul
xor
add
and
adc
fsubl
jno
gs
mov
push
xor
dec
add
data16
out
sub
sbb
mov
data16
inc
and
or
jae
pop
js
nop
pusha
xchg
mov
mov
shl
mov
cwtl
ljmp
les
push
inc
add
xor
shll
cmpsl
imul
jo
jb
mov
jns
add
mov
cwtl
cmp
vminsd
adcb
or
xchg
adc
mov
imul
dec
dec
mov
ss
push
dec
xchg
add
and
jl
jmp
add
aas
dec
fdivl
ficompl
mov
rcrl
pop
push
int3
mov
xor
xchg
test
mov
jge
adc
or
pop
xor
jae
lcall
and
jp
inc
and
ja
sub
repnz
jmp
test
fdivr
sub
aam
or
int
jle
ret
sbb
mov
cmp
in
fmuls
and
lfs
fwait
cs
sbb
xchg
push
pop
hlt
jno
pop
lods
xor
lss
cmc
xor
cmp
mov
das
scas
mov
push
rolb
push
add
pop
js
daa
add
aam
call
xor
fldt
sarb
imul
into
adc
adc
mov
sub
jbe
outsl
add
xchg
pop
jnp
cmp
jns
out
es
out
sbb
pop
popa
sub
sbb
into
out
pop
dec
insl
sub
jecxz
fistl
mov
mov
adc
adc
add
xchg
loopne
sub
pushf
fsub
inc
cmp
lret
aaa
scas
jg
push
fcmovnbe
mov
ret
cmpsl
mov
mov
xchg
cs
sbb
add
sub
dec
push
jne
mov
mov
mov
bound
push
push
add
leave
cltd
cmc
push
enter
push
cmp
cmp
and
jle
enter
into
mov
movsl
popa
in
pop
pop
rorb
or
and
fildll
outsl
inc
mov
jb
push
mov
or
pushf
imul
icebp
ss
add
cmp
outsl
sub
fcmovne
int
arpl
lret
in
jl
jecxz
push
sbb
mov
stos
fimuls
mov
and
cs
nop
out
adc
test
sub
and
mov
and
mov
and
int3
pop
mov
popf
repnz
pusha
iret
popf
jne
gs
fiadds
adc
inc
pop
inc
cmp
popa
cmp
add
popa
out
jmp
ss
xchg
jbe
mov
mov
fdivrl
or
add
pop
and
fildll
mov
sbb
stos
lcall
inc
add
test
push
inc
lods
int
pop
or
push
mov
roll
in
xor
test
jb
push
shll
rorb
rorb
sbbl
xchg
cmp
addw
mov
or
xchg
jo
lret
insb
popa
pushf
aad
mov
mov
push
cli
andl
add
xchg
mov
imul
lea
mov
cmc
or
mov
cmp
fwait
test
stos
shlb
das
push
es
add
lds
mov
cmp
and
hlt
jb
divl
mov
push
push
fwait
out
lods
bound
or
mov
and
movb
push
xor
mov
or
cmp
imul
xchg
and
jo
xor
sar
sub
in
and
insb
mov
and
ret
pop
and
mov
dec
lret
imul
mov
lahf
lea
les
pop
jne
and
and
insb
mov
or
jl
and
cld
add
xchg
sti
repz
test
adc
into
test
inc
fimull
add
js
cmp
push
andb
mov
and
push
dec
in
add
imul
jg
aad
rcrl
pop
xchg
in
mov
push
imul
add
cmp
adc
adc
and
mov
rclb
insb
cmp
sub
pop
aad
add
cmpsb
pusha
movsl
loope
dec
mov
and
xchg
sbb
decl
popa
cwtl
inc
sbb
addb
xchg
ja
dec
lods
jns
jno
add
shll
jmp
sti
cli
hlt
dec
notl
test
aaa
sbb
add
or
mov
sbb
jp
dec
and
sub
xor
cld
ret
sarl
idivb
orl
xchg
jae
xchg
divb
dec
inc
insl
sbbl
mov
xor
mov
insb
iret
cmpl
dec
inc
xchg
mov
xor
test
dec
mov
jge
sub
fsubs
ljmp
sti
daa
add
test
add
sub
sbb
and
jno
movl
and
xchg
lret
inc
sub
sbb
mov
mov
outsl
and
sarb
add
mov
and
or
jnp
cli
jl
imul
inc
adc
fs
mov
aad
icebp
add
gs
push
adc
add
lods
mov
mov
scas
ja
in
das
jle
sub
pop
mul
cld
jb
pushw
or
sbb
imul
into
mov
jnp
cmp
ss
jp
outsb
shr
sti
mov
sbb
adc
mov
stos
int3
mov
cmc
lods
fildl
dec
lods
hlt
scas
les
lea
adc
ret
jl
repnz
insb
jl
xchg
push
pop
mov
xchg
hlt
adc
and
push
jecxz
ss
and
xchg
jge
lock
cmp
sub
lahf
jmp
sbb
mov
push
lods
and
ljmp
lock
in
and
xlat
ss
add
sbb
jle
mov
or
pop
adc
fcmovbe
fs
gs
jno
data16
inc
daa
clc
pop
cmp
call
cmp
sbb
cmp
clc
mov
inc
loop
mov
inc
xlat
mov
mov
push
dec
scas
xor
inc
adc
repz
sub
lahf
aas
test
lods
xchg
mov
mov
aaa
and
cmp
push
sar
gs
and
leave
sub
mov
lea
mov
test
rorl
in
lea
int
xor
add
cmpsb
int
outsb
inc
testl
mov
enter
divl
and
lods
outsb
movsl
jnp
jecxz
movsb
and
mov
jo
jge
pop
fistl
jnp
inc
xchg
mov
int
mov
icebp
jne
or
xchg
outsb
inc
xchg
repz
push
loopne
mov
jge
pop
js
sub
sub
pushf
adc
and
into
jge
fcomp
jg
jge
lret
or
dec
fldcw
dec
std
push
fsubl
frstor
jnp
stos
and
out
in
scas
in
stos
loop
fidivs
xchg
dec
test
jecxz
mov
call
pop
and
lods
lahf
pop
outsb
or
mov
outsb
mov
and
outsl
hlt
mov
mov
iret
xchg
mov
sbb
jmp
movsl
pop
ljmp
adc
lret
mov
inc
fdivs
add
cmpsl
mov
lcall
inc
les
outsb
jmp
mov
aad
mov
lret
lods
inc
inc
ljmp
jl
data16
xchg
sbb
loop
subb
dec
mov
push
leave
jecxz,pt
jp
lahf
fnstcw
enter
in
cmp
mov
add
dec
mov
jg
or
inc
or
in
dec
dec
js
xchg
mov
mov
mov
aaa
fbstp
int3
xchg
xchg
hlt
xchg
rcl
add
dec
adc
jl
loop
test
jbe
add
and
add
pop
or
divl
pop
add
push
inc
pop
push
mov
sub
sbb
jae
ljmp
div
repnz
jle
popa
push
push
xchg
xchg
iret
or
inc
xlat
scas
aam
ret
cmp
jge
scas
adc
add
xchg
sbb
xor
rolb
jl
fisubs
lock
and
push
lock
pop
xor
aam
xor
sub
test
xchg
cmc
sbb
fistps
repz
mov
push
or
pop
dec
imul
jecxz
aam
jno
arpl
pop
xor
in
xor
and
fcompl
in
mov
xchg
faddp
aad
bound
std
xlat
outsl
icebp
push
out
mov
out
or
sub
lods
fiaddl
lea
insb
push
imul
std
pop
xchg
test
xchg
rorb
icebp
test
mov
cltd
push
jge
imul
xor
jle
cmp
lock
xor
mov
sbb
cwtl
out
xchg
add
or
jbe
push
in
lea
cmp
fsub
subl
bound
sub
xchg
jg
push
xchg
jle
jb
das
into
cmpsl
xchg
jbe
loop
sti
mov
sub
inc
iret
adc
cmp
and
inc
pop
lea
push
imul
pop
shrb
jmp
or
adcb
push
xchg
loop
push
mov
jmp
adc
cmpsl
sbb
gs
sub
cmc
add
xor
scas
xchg
jb
push
jns
xchg
ret
or
sbb
aas
or
testl
adc
adc
mov
mov
push
out
adc
cmp
ret
shlb
add
inc
push
add
std
aad
mov
add
loop
jmp
rcrb
and
mov
sub
hlt
and
ds
out
pop
push
mov
pop
out
cmp
movsl
iret
stos
pusha
adc
add
xchg
adc
push
pop
add
xchg
out
mov
mov
mov
dec
sub
out
ljmp
pushf
push
cmpsb
stc
iret
in
pushf
adc
push
scas
cs
aam
mov
xorb
cmpsb
test
ds
pop
fwait
xchg
int3
sbb
or
add
add
xor
mov
xor
pop
fcmovu
movsl
mov
sarl
fdivl
gs
add
lahf
and
popf
jmp
mov
pop
call
jl
xchg
jp
jecxz
pop
fwait
dec
jo
fildll
aas
xchg
mov
sti
cmp
addr16
fcmovnu
add
out
ss
jle
pop
ljmp
pop
or
ja
xor
addl
mov
and
xor
enter
subl
fwait
sub
mov
push
mov
sbb
jge
pushf
cmpb
or
cli
cli
cmpsl
testb
iret
sti
addr16
or
mov
repz
insb
sub
add
xchg
fwait
xchg
cmp
mov
in
xlat
in
pop
or
popa
push
mov
ljmp
jne
or
sti
mov
jne
pop
jb
fs
jp
push
pop
leave
incl
sbb
dec
lods
xlat
sbb
insb
jbe
lods
or
popa
xor
add
sahf
sub
test
cmpsl
inc
ds
or
imul
lcall
sub
inc
ret
jo
or
div
mov
push
divb
push
mov
fldcw
test
jne
cmpsb
or
loope
aad
pop
or
into
cmp
lds
jg
mov
mov
not
stos
sbb
xor
push
mov
fwait
ja
push
mov
sarb
loope
cltd
push
pop
insb
jno
ret
hlt
cmp
mov
repz
jns
imul
roll
out
or
xor
insl
xor
test
rcl
pop
js
test
rolb
or
js
arpl
cmp
mov
fnstcw
mov
daa
xchg
aas
or
ds
mov
test
enter
adc
and
pop
pop
mov
addb
sub
fildll
mov
out
xor
jmp
cmpsl
dec
ds
or
lret
mov
xorl
lret
fildll
push
in
jmp
pop
sub
gs
sub
popa
push
lock
fsts
mov
push
lock
clc
arpl
sbb
sar
out
fwait
hlt
stc
push
ss
pop
adc
out
mov
jle
inc
and
and
sbb
lods
int3
in
xchg
cwtl
xor
push
mov
xchg
aaa
cmc
mov
sbb
ja
jbe
add
movsb
outsl
mov
fistpll
nop
cs
xchg
push
jg
fwait
ds
les
pop
ret
orb
pmuludq
popf
inc
movsl
sbb
mov
in
cmp
xor
jge
adc
cmpsb
or
out
or
cmp
and
cmp
in
mov
lds
gs
loop
out
and
add
aam
repnz
and
addr16
sub
and
mov
pop
xlat
jo
add
jns
sub
xor
repnz
xchg
lahf
mov
insl
lds
icebp
stos
rorl
or
or
addl
cmpsl
jno
out
lahf
movsb
js
das
push
jecxz
repnz
add
cltd
mov
mov
mov
inc
adc
ljmp
add
inc
adc
add
mov
pop
popf
inc
mov
jne
popa
js
cld
pop
push
mov
sub
xor
int
add
xor
or
test
mov
or
mov
addb
insb
push
push
ljmp
push
mov
pusha
xchg
iret
mov
mov
cwtl
clc
fs
adc
cmpsb
cld
or
jecxz
scas
cld
ja
push
ljmp
fwait
xchg
add
fistpll
lea
inc
imul
fstpt
out
xchg
inc
lock
mov
push
imul
cmpsl
int
fisubrs
out
cwtl
jecxz
dec
jno
pop
out
pop
pushf
js
mov
xchg
inc
and
jno
jae
mov
das
jne
cld
cli
fstps
xchg
sbb
mov
fistps
mov
push
xor
mov
roll
lods
lret
cmp
inc
push
push
xchg
shrb
inc
test
push
shlb
lock
or
push
jnp
movsl
popf
bound
decb
mov
aam
xchg
xor
in
fsubs
push
aam
push
lahf
push
push
lahf
mov
hlt
inc
out
cwtl
incl
mov
into
pop
call
lds
lods
repz
addr16
or
daa
cmp
jle
cmp
push
imul
push
gs
inc
fsubs
mov
fninit
cmp
dec
sahf
repz
xchg
push
fwait
mov
in
mov
mov
cmc
popa
dec
xor
mov
adc
push
xchg
stos
or
add
sub
jmp
lcall
or
push
cwtl
stos
daa
cmp
cmc
popf
inc
pop
and
cmp
push
mov
pop
mov
aad
repz
and
mov
xchg
out
mull
ficomps
imul
fwait
in
decl
xlat
sub
ljmp
mov
mov
rcrl
mov
fwait
push
outsl
sbb
sbb
mov
push
loopne
mov
or
pop
test
pop
sbb
rcr
add
dec
xchg
jge
movsl
xor
mov
ja
jmp
je
pop
mov
pop
dec
mov
out
hlt
loopne
jmp
loopne
cmp
xor
mov
outsl
add
pop
mov
les
das
pushf
adc
stos
pop
push
push
xchg
aad
shll
and
xor
pop
sub
jl
mov
roll
sbb
fidivrl
lret
mov
pop
int
jne
clc
dec
arpl
stos
subl
jecxz
aaa
push
inc
enter
ljmp
aaa
mov
inc
cld
pop
inc
andb
inc
outsb
cmp
fmul
sub
mov
lahf
or
cltd
subl
rcrl
mov
mov
imul
shlb
cwtl
and
jnp
push
xor
rclb
fisubl
out
mov
les
jg
jno
mov
push
dec
push
sarb
sbb
jmp
xchg
or
popa
sub
and
shl
sbbl
push
xor
xchg
mov
lods
mov
mov
push
mov
jne
sbb
mov
sbb
xchg
jp
push
lods
jbe
imul
es
das
adc
repz
dec
pop
imul
jl
or
bound
mov
jp
dec
pusha
push
ret
sahf
test
jae
pop
jb
lods
lea
push
out
mov
push
iret
cmp
iret
push
out
mov
ss
fdivr
loop
mov
sbb
mov
xchg
pop
repz
cltd
sub
cmp
push
pop
addl
jbe
xchg
insl
and
out
sti
xchg
sahf
les
sti
jne
sub
cmp
fwait
insl
jbe
and
sarb
mov
arpl
mov
add
mov
loopne
sub
adc
cmp
adc
aam
mov
mov
roll
add
std
test
push
divl
push
mov
inc
outsl
mov
mov
fs
loop
mov
mov
mov
fwait
adc
push
and
jne
fsubs
scas
sbb
mov
enter
lahf
sbb
cli
testb
cwtl
or
lods
mov
out
or
pop
mov
int3
xchg
push
mov
cmc
into
xchg
adc
pop
inc
mov
jns
clc
and
sarl
arpl
mov
xor
dec
scas
popa
push
xchg
mov
fdivs
push
mov
das
sbb
mov
pop
popf
or
fwait
and
aam
and
lcall
xor
jp
aam
add
movsb
xlat
and
fwait
rcrb
adc
push
push
aas
shrd
ret
insb
test
or
adc
and
mov
adc
fildll
push
xchg
cmp
cmpsl
mov
push
insl
outsb
clc
pop
popf
xor
test
mov
out
xacquire
out
stc
sub
fisubl
push
insl
lea
fstps
push
push
mov
dec
test
clc
mov
cmc
mov
fisubrl
cmpsl
mov
cmp
loopne
imul
sarb
es
jae
and
fcom
sub
cli
sbb
jb
popa
ret
daa
push
stc
aaa
sarb
out
and
fstps
and
aaa
and
mov
decb
mov
mov
push
add
inc
scas
call
fadds
cmp
mov
xor
sbb
jns
outsl
push
sbb
jge
or
insl
mov
sarl
hlt
jecxz
sti
movb
cmp
imull
in
mov
pop
xor
dec
es
out
xchg
mov
push
jne
dec
add
icebp
cmp
call
and
mov
ror
xchg
adcl
testb
stos
test
cmpsb
push
sbb
mov
popa
inc
jecxz
push
or
ljmp
mov
and
fsubr
cli
dec
pop
out
ds
mov
lahf
sub
xchg
pop
cs
xor
pop
sbb
es
jp
xchg
mov
push
out
out
stc
push
ja
cmp
leave
mov
pop
add
loope
or
push
ja
repnz
cs
xor
mov
je
push
adc
cmp
scas
xor
out
xor
adc
mov
fldt
xchg
aad
or
mov
dec
inc
in
mov
sub
mov
fldz
sub
mov
iret
xor
xchg
sti
xchg
mov
cld
movsb
rclb
out
sub
dec
scas
notb
imull
and
pusha
imul
jl
sbb
jae
xchg
call
rolb
and
ss
repz
sarb
xchg
pushf
out
jb
insb
pop
mov
icebp
mov
stc
or
push
mov
dec
mov
or
lret
ljmp
cmpsb
test
mov
push
push
fisttps
xchg
adc
icebp
adc
ljmp
out
inc
push
insb
mov
pop
movsb
outsl
popl
je
sub
imul
iret
stos
dec
ss
sub
pusha
movsl
sub
sarl
cmp
ja
jl
inc
shrl
addr16
cmp
cmpsb
push
push
iret
nop
sarb
fisubrl
loop
mov
repz
rcrl
dec
imul
push
xlat
roll
insb
out
insb
or
xor
mov
mov
mov
and
and
in
lods
jl
xchg
les
daa
jecxz
add
stos
rcr
and
popl
mov
sti
pop
js
xchg
lahf
add
fsts
pop
sbb
mov
enter
mov
std
frstor
or
addr16
shlb
in
cmp
lret
inc
jbe
xchg
cmpsb
enter
icebp
repnz
jmp
dec
fidivrs
jnp
loope
push
and
loop
jge
les
mov
xchg
das
insl
test
sub
fwait
in
lock
push
sub
cld
mov
leave
xlat
jo
or
mov
pop
data16
lea
scas
test
cmp
push
sahf
mov
jb
cmp
idivl
aad
jp
xchg
stos
lret
es
lret
add
cmpl
fildll
es
jle
dec
sar
nop
push
ds
out
pop
push
pop
xchg
jge
add
sbb
push
mov
add
pop
xor
shr
mov
pop
leave
cltd
push
cltd
shr
lock
inc
mov
cwtl
flds
je
pop
sub
and
mov
outsb
jns
scas
data16
add
bound
sbbb
aad
test
cmp
push
sub
pushf
loopne
mov
xor
jb
cmc
lcall
out
ds
ljmp
sub
mov
lret
loopne
pop
das
cmc
popf
jb
mov
loopne
jo
mov
andl
push
lods
dec
xchg
inc
add
mov
out
xchg
xchg
mov
popf
xchg
setnp
xchg
push
ja
cltd
cmpsl
and
and
push
xchg
shll
nop
cmpsb
fistpll
sub
leave
pop
sub
mov
mov
sar
jge
and
xor
sub
icebp
daa
mov
loopne
dec
aam
adc
jmp
es
xchg
push
add
cmpl
xchg
xor
pop
nop
xorl
or
jns
lock
test
decl
dec
int
repnz
xor
test
jle
std
into
inc
xchg
jg
dec
enter
in
xlat
aas
sub
scas
jp
int
cmp
jae
lahf
adc
into
mov
push
inc
cmp
shlb
sub
test
xor
inc
mov
sub
jp
aas
mov
jno
inc
push
push
cmp
dec
mov
jecxz
or
xlat
insl
lods
or
les
push
mov
imull
xlat
repz
mov
inc
out
ds
dec
ja
or
jg
jno
movsb
cli
data16
inc
adc
lcall
scas
arpl
test
xor
je
jmp
addr16
mov
pop
scas
shll
or
mov
shlb
jle
sub
push
cmp
fadd
inc
dec
hlt
out
cltd
idivl
dec
test
jp
jbe
shll
sbb
xor
xor
sub
not
mov
outsl
sbb
decl
sub
mov
aad
fcmovnu
es
sbb
xchg
leave
xor
mov
fwait
cli
or
push
fidivrs
cli
sbb
nop
cmpsl
mov
sub
inc
mov
mov
and
xor
pushf
and
enter
stos
inc
lret
rcrl
je
and
xor
xchg
push
sbb
mov
cmp
dec
push
and
mov
push
jl
and
pop
int
adc
sub
and
roll
add
xchg
pop
and
fisttpl
adcb
jecxz
in
cmpsl
sub
mov
arpl
daa
mov
xchg
push
or
cmp
popa
adc
cltd
add
dec
iret
fsubr
jns
mov
arpl
and
cmp
in
mov
inc
repnz
adc
mov
pop
push
bound
loop
clc
sbb
push
sbb
int
mov
sbb
dec
outsb
cmp
cli
and
jo
sub
fadds
je
icebp
mov
or
jns
sub
xchg
in
imul
stos
lods
icebp
imul
cmp
fs
xor
in
mov
sbb
out
fstpt
jae
ds
les
xchg
call
push
xchg
jo
dec
aas
inc
je
arpl
pop
pop
daa
xor
std
imul
add
add
js
mov
scas
jo
pop
sbb
push
into
shr
les
jmp
push
dec
test
cs
das
sub
into
jle
out
inc
imul
add
adc
leave
test
jnp
adc
cmp
pop
popf
mov
or
ret
je
lds
imul
mov
push
mov
cmp
add
mov
adc
jne
mov
dec
dec
lcall
cwtl
sbb
cmp
sbb
xchg
sysenter
repz
rclw
xchg
test
xchg
psubsw
mov
pop
jbe
fcomp
pop
xchg
inc
outsb
push
adc
jp
push
mov
mov
xchg
and
scas
lods
xchg
push
push
push
sbb
and
jp
popf
mov
imul
jp
clc
fsubr
and
lds
xchg
in
ds
mov
adc
cli
sub
les
addr16
loopne
shl
push
fwait
mov
sub
pushf
jge
jl
xlat
jo
sbb
lods
les
adc
add
stos
test
mov
cmp
sbbl
imul
sbb
mov
stc
inc
outsl
lods
cmpb
ja
dec
addl
mov
fmuls
add
mov
lahf
sarb
sub
cwtl
cmp
push
movsb
outsb
lahf
mov
inc
xchg
mov
scas
pop
dec
xchg
mov
mov
mov
mov
lds
inc
out
insb
jecxz
push
in
lahf
mov
outsb
ja
jb
shl
dec
xchg
sahf
xlat
cltd
mov
adc
in
add
mov
cwtl
jp
lock
mov
dec
mov
add
add
addr16
ds
pop
repnz
incl
push
xor
xor
je
mov
insb
inc
ds
push
mov
mov
lret
rorb
cmc
or
mov
leave
je
push
mov
jne
inc
push
jo
enter
cs
enter
adc
sbb
cmpsb
jne
jb
nop
mov
jg
mov
adc
push
xor
adc
shll
dec
movsl
sbb
pop
jle
xchg
mov
rcll
fwait
nop
add
repz
aaa
inc
call
mov
adc
pop
pusha
in
xor
out
xor
sub
negl
or
push
xor
das
or
stos
test
dec
call
mov
inc
xor
inc
xchg
push
sub
std
mov
pop
pop
aas
subl
repz
push
xchg
rcrl
or
out
xor
jl
mov
sub
xor
mov
push
std
cmc
das
mov
pop
xor
cmp
jl
xor
out
cmpsb
cmp
push
sub
in
movsb
stc
pop
inc
and
xchg
shrl
imul
cmp
enter
push
insl
mov
jno
xor
ja
xchg
add
addr16
js
add
inc
jnp
jle
into
pop
outsb
aaa
into
aaa
enter
fistpll
jmp
dec
mov
jb
mov
fadd
aas
xchg
lock
lods
xchg
dec
lret
or
xchg
dec
clc
adc
push
enter
push
lock
outsl
out
inc
xor
fildll
repz
ds
data16
xor
adc
jle
sbb
fmulp
leave
test
mov
shlb
or
cmp
xchg
pusha
ja
scas
cltd
aas
xchg
arpl
and
mov
aam
fsubrs
adc
mov
sti
sub
jbe
popf
movsb
mov
jl
out
xchg
xchg
out
sbb
insl
call
adc
insl
nop
push
mov
jno
mov
stos
repnz
cmp
ss
and
ds
je
lods
sub
jmp
mov
ret
xor
fimull
adc
outsl
out
in
mov
repz
lret
cmpsl
inc
mov
add
push
imul
pop
xor
cmp
adc
sub
cmp
js
fisttps
dec
mov
xchg
adc
xor
pop
leave
movsb
dec
push
aaa
mov
daa
les
icebp
cmp
pop
and
hlt
adc
cli
dec
clc
inc
clc
sub
sbb
rclb
scas
stc
sarb
xchg
inc
lahf
jns
mov
xchg
push
ja
pop
adc
sub
xor
enter
mov
mov
test
and
outsl
rcll
das
lea
ljmp
or
les
mov
ljmp
xor
out
mov
jecxz
test
jmp
jp
sub
nop
scas
out
push
adc
ret
fdivrs
xchg
inc
in
push
in
pushl
add
repz
rcl
push
cs
pcmpgtw
pop
push
xchg
hlt
add
int3
push
mov
or
movsb
xlat
test
adc
push
lcall
dec
lret
sub
push
dec
hlt
dec
dec
scas
xchg
sub
out
cmpsb
push
lods
mov
mov
aas
jl
inc
and
push
repz
or
insl
enter
dec
cwtl
in
in
pop
jae
dec
fidivrs
xchg
out
sub
xchg
cmpsl
sub
adc
movzwl
stos
stc
or
mov
pop
cmp
test
mov
and
scas
test
sbbl
into
test
out
sub
jp
outsl
adc
cmp
fcomp
ljmp
int
sbb
mov
movsb
xor
rcll
push
fadds
or
sbb
xor
int3
enter
push
xchg
cs
arpl
dec
mov
fdivr
test
mov
sahf
pop
sbb
fisubrl
dec
ficomps
xchg
mov
push
inc
add
decb
addr16
pop
pcmpeqw
ja
xor
dec
rclb
xor
dec
test
sbb
add
jnp
std
sub
outsl
es
sub
bound
xor
fistps
xchg
addr16
iret
shl
mov
cmp
test
mov
mov
dec
and
rcr
mov
lea
lock
jmp
xchg
push
nop
in
and
adc
data16
add
into
pop
mov
ss
fwait
inc
dec
xor
mov
dec
mov
stos
repz
imul
xchg
repz
rclb
mov
mov
adc
mov
and
cmpsl
lods
shll
pop
sbb
push
add
jle
out
jne
and
es
push
out
sbbl
mov
jg
fs
aad
leave
inc
cmp
inc
mov
xchg
or
icebp
jbe
xchg
mov
mov
divb
pop
dec
shl
push
repnz
dec
xchg
adc
adc
imul
ljmp
fcomp
sub
ret
dec
add
sbb
movsb
mov
mov
pushf
rolb
mov
pop
or
cld
stos
ljmp
enter
and
inc
aad
outsb
aad
adc
es
sbb
imul
test
inc
pop
out
sbb
inc
mov
hlt
enter
aaa
inc
xchg
inc
imul
adc
cmpsl
push
mov
mov
fidivrl
and
cmp
inc
ljmp
cmp
data16
clc
and
in
pop
movsb
inc
fisttpll
sbb
mov
imul
in
int
inc
enter
rorl
cmpb
xor
sub
scas
clc
pop
outsl
mov
fadds
sbb
iret
mov
es
mov
in
stc
test
jle
and
or
cmp
dec
imul
aaa
mov
pop
les
imul
in
push
inc
movsb
dec
and
jno
add
mov
pop
lods
mov
sbb
or
loop
ror
pop
ret
ret
out
loop
int
hlt
adcb
mov
repz
stc
cmpsl
and
push
fucomp
or
cltd
mov
mov
fidivs
inc
gs
adc
pop
sub
std
enter
inc
jbe
xor
in
cmp
daa
iret
in
iret
outsb
stos
gs
pop
ss
dec
shrl
pop
andl
in
addl
sahf
push
outsb
pushf
lret
and
cmpsl
rcrb
cld
adc
dec
into
std
and
das
add
cs
sub
and
ds
push
ret
fstpl
aas
cmp
push
popa
aas
push
jo
xchg
xor
inc
ljmp
mov
lods
mov
and
cltd
shlb
out
daa
sub
stos
inc
cvttps2pi
pop
mov
popf
push
add
outsl
arpl
dec
hlt
add
addb
scas
dec
out
call
sbb
cmp
icebp
or
push
and
jne
jo
xchg
jp
xchg
rcr
mov
inc
loop
ljmp
adc
cmpsl
jmp
mov
sub
xchg
jecxz
test
lock
fcompl
in
xor
push
sar
outsl
mov
inc
sub
cmp
gs
cmp
popf
stos
testb
repz
ljmp
into
gs
aam
lods
into
jle
cmc
jp,pt
sub
xor
pop
mov
test
mov
xchg
and
les
xor
imul
lods
xchg
stos
sbb
xlat
sahf
or
rcll
sbb
loopne
lcall
jb
js
fisttpl
inc
adc
add
mov
hlt
insl
push
imul
xor
lret
arpl
dec
jnp
push
insl
dec
adc
jmp
mov
xor
mov
xor
pop
mov
out
imul
mov
mov
dec
sbb
loope
dec
adc
push
inc
imul
inc
or
add
cltd
out
jecxz
rcrl
push
or
mov
adc
push
jbe
out
xchg
add
mov
adc
xor
adcl
insb
inc
mov
out
sub
inc
aaa
leave
sbb
leave
inc
mov
pop
cmp
ljmp
jmp
neg
sub
cmp
mulb
notl
mov
clc
pop
lret
sbb
lock
cmp
mov
pop
into
fbld
test
dec
imul
cmc
leave
mov
cmc
pop
les
and
dec
mov
stos
cmp
int3
fiaddl
jl
mov
stos
adc
xchg
in
pop
rcrl
or
or
out
pop
dec
or
adc
jne
mov
arpl
mov
pop
and
ja
gs
clc
cmp
xor
push
cmp
and
sub
out
adc
aam
mov
dec
hlt
xor
popl
fs
loope
lret
lret
repnz
adc
dec
xlat
sti
push
call
shl
or
stos
das
push
mov
leave
clc
shlb
fildl
and
adc
in
mov
scas
jne
add
cmc
cmc
jno
mov
mov
call
inc
lea
je
cmp
jno
sbb
jle
aam
cmp
fimuls
push
pop
sub
or
sub
push
jl
pop
xor
sub
mov
pop
aas
stos
rorl
mov
addr16
in
add
gs
jl
test
setno
sbb
push
push
clc
pop
mov
fstpl
sbb
das
outsl
aad
add
insl
jg
dec
fdivr
adc
sar
xor
repz
js
lods
mov
push
mov
addr16
popf
pop
stos
shll
cwtl
outsb
mov
adc
push
jo
jp
jp
fwait
jp
int
repz
insb
fildll
push
pop
and
mov
setno
cld
mov
pop
or
orb
fldt
and
enter
mov
dec
and
push
loopne
out
fmull
stos
subb
cmp
dec
jbe
and
inc
int
aam
or
pusha
jp
mov
jb
mov
aas
pushf
lahf
sub
xchg
sbb
hlt
stos
test
push
push
add
mov
ficompl
mov
fisubrs
cmpsl
dec
xor
mov
sti
mov
sbb
inc
adc
rorb
popa
rorb
xchg
loop
pop
pop
mov
xor
pop
data16
test
leave
push
push
inc
push
icebp
es
sub
daa
lods
loop
aas
lea
cs
xor
and
ja
xor
bound
int3
outsb
adc
and
sub
mov
sub
repz
jle
lods
subb
xor
fdivrl
fnstcw
push
sub
rcrb
jnp
inc
inc
insb
test
repnz
xor
sbb
xor
imul
add
inc
mov
sbb
and
jb
data16
bound
adc
push
xlat
test
les
data16
push
adc
xchg
shll
lock
andl
jno
fbld
push
cmp
repnz
lds
cmp
insl
jnp
insb
lods
and
sub
sbb
mov
and
aaa
jg
test
cmp
leave
loope
pop
sub
jae
or
adc
imul
jle
pop
roll
out
adc
add
xchg
or
pop
fsincos
hlt
pop
addr16
int
mov
push
outsl
mov
jmp
fists
fcomp
loop
mov
cld
loopne
hlt
movsl
mov
bound
sbb
xor
dec
jg
push
dec
cmp
flds
adc
ja
pop
xchg
push
push
std
jne
sbb
sbb
xor
and
jle
cmp
inc
inc
out
or
orb
push
push
das
xchg
push
cmpsl
xor
sbb
je
aaa
and
ja
xchg
jle
sbb
lock
and
xchg
nop
pop
rolb
add
xor
or
jae
mov
dec
xchg
jp
mov
jle
add
xchg
cmpsl
divl
into
sub
xchg
push
and
add
xor
mov
adc
xchg
jg
mov
cld
add
xor
inc
mov
mov
stos
pop
add
cmp
pop
mov
movsb
add
out
dec
mov
daa
lock
dec
push
push
ret
fldenv
pop
jb
cmp
inc
xor
push
jb
ficoms
xor
dec
imul
mov
mov
andb
adc
cmpsb
xor
test
cmp
mov
out
push
adc
ja
dec
mov
js
imul
addl
loop
sub
xchg
pushf
jno
mov
sub
or
inc
and
fildll
cltd
in
outsl
cmp
data16
leave
push
addl
adc
xchg
jge
ret
mov
stos
imul
pop
inc
loopne
jp
cmc
push
gs
pop
shrb
push
shl
rclb
das
and
push
mov
jecxz
inc
add
mov
pop
push
jae
pop
mov
leave
xchg
incb
dec
cmpsl
outsb
xchg
fld
hlt
pop
dec
popa
pop
sti
sub
or
or
pop
cmp
shr
out
xchg
jbe
xchg
jae
and
movsl
dec
in
jb
mov
xchg
ss
stc
sahf
orb
cli
xor
les
pop
sti
push
mov
outsl
cmpsl
inc
jge
test
inc
shlb
jno
fnstenv
subl
cmc
int3
jb
or
push
mov
mov
mov
mov
cmpsl
test
cmp
unpckhps
cltd
mov
sub
dec
dec
outsb
xor
inc
xchg
stos
das
xchg
aas
pop
pop
add
aad
je
jmp
ja
test
cmp
mov
cmp
incl
mov
shll
inc
movsb
push
mov
js
jbe
xlat
and
std
mov
adc
dec
xchg
nop
outsl
jnp
mov
inc
cs
cwtl
loopne
testb
or
das
xchg
dec
add
dec
push
sub
dec
xchg
out
sbb
jmp
in
addr16
fdivrl
idivb
sti
xor
adc
or
mov
add
sbb
jno
cmp
push
aas
clc
cmc
in
gs
mov
sbb
outsb
cld
mov
adcb
lahf
jb
icebp
orb
int3
mov
xchg
rolb
adc
mov
popf
outsl
popf
pop
mov
pushaw
lock
add
movsl
jle
and
dec
inc
test
xchg
mov
cmp
sub
xchg
push
scas
test
scas
cld
mov
sbb
outsb
cld
dec
faddp
sbb
insb
or
dec
out
mov
jo
xchg
jg
add
xchg
mov
dec
lods
dec
xor
in
xchg
inc
mov
outsl
lock
imul
pusha
jg
pop
inc
xor
data16
push
mov
inc
jne
xchg
loope
or
cli
add
hlt
sahf
push
test
mov
mov
cmpsl
sub
sti
cltd
ja
mov
imul
out
dec
cmp
push
mov
add
rcll
cmp
repz
dec
cwtl
sub
pop
aaa
push
insb
dec
mov
lds
push
jne
add
ljmp
and
insb
jnp
in
inc
and
rorl
arpl
aad
pushf
lret
or
test
rcrl
lret
mov
insl
repnz
sbb
es
cmp
jmp
add
xchg
jecxz
mov
in
mov
inc
cmpsb
dec
mov
das
add
sbb
and
cmp
cmp
xchg
pop
imul
imul
int3
cmp
lods
fs
mov
sbbb
push
and
mov
pop
aas
sarb
adc
insb
int
aaa
shlb
mov
lret
pushf
fldenv
or
inc
xchg
call
call
add
adc
xchg
andb
push
lods
jle
pop
fisubrs
push
or
pop
repz
cmpsl
xchg
out
lret
pop
stc
inc
mov
pop
push
nop
adc
nop
xchg
jns
xlat
outsl
xor
insl
data16
daa
mov
push
xchg
mov
movsl
pop
add
inc
das
test
sahf
jecxz
lods
lea
jbe
or
inc
mov
add
addr16
in
pop
mov
aas
enter
dec
rclb
mov
repnz
jb
xchg
jge
mov
aaa
mov
adc
lock
insb
imulb
leave
outsl
xchg
outsl
call
in
xchg
and
jg
mov
mov
outsl
cmp
stos
dec
arpl
pusha
xchg
jmp
outsb
lock
movsb
faddl
repnz
loopne
push
aaa
out
aas
out
jae
dec
sbb
jno
pop
push
or
or
sbbl
adc
push
cmp
out
mov
flds
cli
aad
xchg
mov
sbb
arpl
mov
push
and
or
iret
mov
iret
fdiv
ret
addr16
nop
xor
lods
mov
push
adc
jmp
inc
test
fdivrp
insl
sbb
xchg
mov
bound
ds
cmpsl
fistpl
xchg
sub
jne
into
mov
cli
mov
movsl
sbbb
push
cmp
jmp
lcall
lret
mov
cmp
sbb
outsl
jecxz
mov
sbb
xor
stos
jnp
rolb
fwait
roll
cmpsb
mov
in
cltd
xor
jo
test
pop
insl
stos
in
repnz
pusha
cmpb
das
imulb
mov
pop
sbb
pop
stc
and
movb
or
shrd
xor
pop
sbb
decb
aaa
xchg
cltd
icebp
out
mov
dec
mov
ds
in
mov
mov
ja
shlb
call
fstl
pop
or
inc
nop
popw
popf
das
pop
xor
test
adc
out
ret
test
and
inc
push
adc
les
xchg
or
inc
xbegin
push
dec
fcoml
pop
stos
jae
xor
rorb
cli
in
std
push
xor
xor
movsb
js
mov
shll
stos
pusha
jb
cmp
mov
je
mov
push
inc
and
enter
sub
mov
dec
rol
push
inc
mov
lods
xor
push
lods
sbb
cmc
sbb
add
sub
mov
adc
out
je
sahf
push
cmpsb
adc
out
test
xchg
daa
sub
sub
or
add
inc
jns
xor
pop
lods
mov
cwtl
jle
pop
or
sub
push
jne,pn
enter
mov
push
std
xchg
sub
imul
mov
jg
loope
jae
loope
les
jns
imul
js
cmp
push
sbb
mov
test
cmp
push
call
sub
fidivrl
jge
xchg
push
int
ficoml
xor
cltd
fcmovnu
adc
sbb
xchg
or
mov
test
out
xor
or
mov
addb
sub
or
push
push
mov
add
movsb
add
repnz
cmpsl
repz
sbb
idivb
or
aam
add
inc
pop
xor
mul
filds
xchg
mov
cmpsb
jns
mov
ret
xor
in
bswap
ja
or
or
jne
or
sub
mov
add
out
clc
xchg
mov
mov
std
aad
and
adcl
xchg
push
jl
xchg
jns
loop
insb
push
xor
pop
xchg
ret
lcall
xchg
lret
ja
in
or
imul
out
rcll
jb
sub
push
or
imul
mov
or
rcrb
mov
leave
icebp
cmp
jmp
jb
xor
cmpxchg
jne
cli
or
push
xchg
or
or
pop
mov
mov
xor
adcl
lea
sub
pop
dec
xchg
inc
xor
jmp
out
int
int
jne
clc
cmp
mov
cmp
popl
mov
xor
adc
es
int3
adc
test
jne
cwtl
xor
or
arpl
dec
xor
sub
dec
nop
icebp
or
pop
outsb
out
push
pushf
push
inc
inc
add
dec
int3
and
pop
fs
rol
dec
mov
xchg
or
mov
jmp
mov
out
pop
lock
cmp
insb
pop
sbb
pop
aas
xlat
inc
fnstenv
lock
add
xchg
xchg
and
sti
imul
add
push
adc
cwtl
inc
out
ret
sub
cmp
nop
ret
xorb
jbe
jp
xchg
sub
addr16
dec
leave
xchg
lods
rcll
mov
loopne
jbe
fucomip
sub
and
movsb
or
pop
lds
mov
dec
lret
jb
mov
outsb
jno
cmp
jb
inc
cmp
pop
pusha
shll
sub
jl
leave
adc
rol
xchg
ljmp
fwait
mov
sti
fs
clc
jbe
lret
inc
mov
aas
or
dec
out
imul
xchg
push
pop
and
sbb
ret
rcrb
cltd
fdivs
add
mov
pushf
jb
jo
orl
inc
sbb
xchg
ret
push
push
cltd
xor
push
push
in
scas
lret
mov
mov
add
sub
in
xchg
push
dec
int3
sti
jae
xchg
cmp
mov
call
pushf
jb
cld
mov
xor
jnp
mov
sub
dec
sub
test
aas
mov
fldt
rcl
jmp
or
aaa
lods
mov
push
mov
fwait
xchg
fildl
adc
ficompl
and
mov
push
rcrl
xchg
bound
and
sbb
push
push
pop
test
cmp
cmp
fiaddl
add
cmp
in
sti
or
pop
stc
pop
jl
loop
dec
repz
outsb
pcmpgtb
cmc
lar
lds
lds
xchg
jg
add
sahf
fimuls
mov
xor
jns
aas
bswap
fistpll
pop
les
cli
ss
add
arpl
mov
pop
cmp
mov
xchg
mov
cmpsb
lods
repz
aam
imul
mov
call
and
pop
pusha
mov
and
in
jg
mov
fcompl
int
mov
add
mov
insb
inc
insl
loopne
fs
dec
repz
jno
stos
rcrl
mov
push
repz
fimull
out
xchg
jle
dec
fists
pop
dec
call
in
cmp
sahf
xchg
jb
enter
push
xor
das
xchg
je
mov
out
test
dec
add
mov
pop
fwait
mov
das
push
cmp
xchg
push
mov
jbe
ret
inc
repnz
hlt
jae
push
in
shlb
add
cli
popf
and
adcl
mov
cmpl
jo
cwtl
loope
sub
cmp
xor
jg
jnp
pop
or
aaa
jle
add
ja
mov
cmp
icebp
xchg
in
xor
push
push
push
ja
and
xor
cmpsl
add
aam
pushf
aaa
jl
rolb
jae
test
mov
jmp
out
mov
bound
fcomps
xor
push
lods
sub
push
mov
cwtl
jo,pt
cs
mov
inc
and
sub
cmpsl
leave
or
cmp
inc
aas
leave
in
xlat
gs
std
mov
lods
inc
push
sub
xchg
push
lret
psubusb
mov
fs
xchg
dec
jo
mov
dec
aad
lcall
mov
sub
mov
cmpsl
dec
ds
and
sbb
mov
icebp
push
push
ja
loop
int
mov
cmp
cmp
dec
aad
or
aam
hlt
push
xlat
pop
jne
sbb
fisubrs
dec
addl
lods
les
arpl
xor
push
mov
fdivp
ljmp
repz
jge
add
andb
xchg
mov
jmp
add
scas
int3
lret
push
xchg
lods
aas
fwait
iret
aaa
les
mov
dec
push
popa
mov
stos
jne
push
push
es
pop
pop
mov
push
jle
fistpl
test
push
or
test
mov
inc
aas
push
jge
je
sahf
test
sarb
xchg
shl
dec
mov
aaa
cltd
jno
fistl
fwait
sub
push
not
mov
xor
jmp
pop
into
pop
inc
cwtl
sbb
jnp
icebp
mov
insb
push
push
mov
inc
dec
repnz
movsb
sub
mov
push
lock
in
sub
and
adc
test
or
add
ret
imul
in
fst
aaa
sub
mov
inc
xor
insb
rcll
sbb
dec
push
push
testl
mov
xchg
stos
xchg
or
call
sti
stc
and
ret
aad
out
or
fisubrl
nop
inc
xchg
lods
jo
inc
pop
addr16
adc
aad
seto
inc
out
js
sti
adc
sarb
out
jo
xor
push
dec
js
inc
inc
out
mov
add
dec
push
jb
test
mov
jge
sbb
popa
enter
lods
jmp
rol
push
mov
xchg
push
notb
xor
or
imul
jp
xchg
xor
jns
push
jns
fildl
call
daa
xchg
adc
cld
fcoms
jnp
aas
jnp
inc
mov
ret
or
inc
hlt
push
fsubs
movsl
ljmp
cmpsl
test
das
data16
addr16
cld
orb
sub
adc
cmpsl
test
mov
add
in
sbb
and
aaa
sbb
jbe
ret
jp
iret
outsl
cmp
and
loop
shlb
mov
pop
cwtl
inc
mov
aas
or
rclb
sahf
fsubs
pushf
dec
push
lock
popf
xorl
outsl
aad
flds
push
shll
and
sbb
mov
jbe
jl
xchg
dec
les
jmp
stc
fcmovbe
outsw
bound
sti
and
push
xchg
nop
xor
pop
mov
inc
sahf
out
fucomi
adc
sub
or
pop
inc
add
cwtl
adc
arpl
add
xchg
ja
push
fcoml
test
jmp
sbb
xor
adc
cmp
cmp
pusha
cltd
mov
mov
push
cmp
sahf
enter
sbb
and
repnz
ljmp
mov
adc
jb
outsb
ss
cli
sbb
lock
jbe
inc
sub
cld
shl
sti
xor
lds
jge
push
mov
xchg
shrl
push
leave
repz
sbb
test
cmp
or
data16
repz
orl
mov
mov
fstps
jl
jno
outsl
loope
andl
in
jle
mov
inc
jge
add
xor
mov
aas
pop
push
repz
mov
shrl
cli
shlb
inc
pusha
mov
dec
sub
pushw
test
mov
xchg
aas
sbbl
xlat
xlat
iret
cli
push
insl
decb
mov
inc
sbb
nop
mov
sub
xor
fwait
mov
in
dec
rorl
jmp
mov
push
rclb
mov
cltd
aaa
xchg
xor
adc
bound
mov
sub
or
pop
mov
aaa
jno
ja
out
sub
into
inc
dec
bound
fnsave
addr16
loop
push
out
jb
andb
add
cli
cmc
push
sub
pop
call
jo
mov
sub
mov
and
or
or
out
inc
lcall
test
push
or
lcall
jecxz
arpl
xor
cmp
mov
mov
push
fisubrl
vpsubsb
mov
stc
imul
jb
add
inc
fsubrl
rol
fsubrl
add
xchg
iret
stos
in
stos
and
imul
out
out
jle
or
push
pop
jae
mov
jle
mov
fstpl
or
cmp
xchg
xor
mov
mov
lcall
stos
repz
push
ret
push
adc
std
add
ds
into
in
fsincos
loop
mov
ret
pop
sub
inc
pusha
cmpsb
or
jo
mov
jp
or
mov
nop
mov
in
and
add
cltd
in
inc
ja
stos
int3
fistpll
push
pop
sbb
and
pop
cmpb
pop
sub
adc
fwait
lock
mov
jns
add
arpl
adcl
or
addl
shlb
stos
or
test
pop
mov
mov
sub
aaa
bound
movsb
mov
ret
fsts
mov
rcl
jnp
gs
insb
mov
mov
subl
xor
pop
dec
ljmp
pop
addl
das
call
and
mov
outsb
xor
push
push
dec
and
lods
scas
sbb
mov
fisttpl
mov
imul
push
or
dec
fld
jecxz
pop
test
inc
int3
into
inc
repnz
mov
cmc
or
popf
push
pop
mov
or
push
sbb
lds
jg
jmp
dec
pop
or
pop
or
sub
jbe
fcoml
clc
fisttpll
insl
and
daa
push
hlt
push
sbb
push
loope
test
leave
sub
xlat
leave
add
out
call
sub
sub
repz
rcrl
insb
jbe
sub
and
cmp
push
rorl
jb
loopne
jnp
lods
movsb
inc
pop
inc
mov
push
jne
stc
pop
pop
xsavec
cmovnp
pop
enter
imul
je
stc
iret
mov
cmp
or
xchg
lcall
ljmp
push
mov
aas
pop
add
lret
sub
mov
and
jno
mov
aad
cltd
insb
mov
push
inc
inc
lods
ficompl
xchg
or
shrl
add
jp
xor
ss
loop
bound
es
xor
push
pop
mov
mov
and
sub
lods
out
or
push
or
mov
sub
test
cmpsl
mov
iret
loope
xor
in
scas
lods
stc
in
or
pop
lahf
cmc
pop
outsb
cmp
test
rcrb
enter
aaa
loope
push
jo
mov
movl
sub
rcll
and
jmp
repnz
fs
sub
dec
es
cmp
sti
or
or
and
mov
jne
aam
jg
lcall
push
adc
js
adc
movsl
mov
mov
in
das
adc
mov
pop
test
push
mov
pop
pop
dec
cwtl
shlb
mov
xor
icebp
test
roll
mov
in
sbb
jl
mov
mov
mov
rorb
lock
jp
add
or
or
mov
in
insl
movsl
dec
mulb
scas
add
mov
mov
adc
inc
push
pop
mov
adc
testl
jne
mov
dec
jbe,pt
inc
stos
mov
fsubs
int3
xor
xchg
jae
call
test
and
shll
in
cmc
xor
add
xor
test
sub
pusha
sbb
lret
rcl
mov
jle
cli
out
ret
iret
mov
ss
shl
insb
lods
adc
and
int
sub
xchg
add
jmp
xchg
ficomps
icebp
in
daa
call
xor
ficomps
imul
inc
pop
mov
inc
cli
xchg
dec
adc
fbld
push
dec
test
pop
lret
cmp
clc
test
outsl
movsb
or
or
inc
mov
sub
out
inc
call
dec
jecxz
dec
inc
aam
fsub
in
mov
mov
aad
mov
pushl
dec
incb
or
pop
movsl
mov
sbb
push
pushf
lret
jae
mov
mov
push
inc
lods
xor
fisttpl
idiv
lods
ljmp
sbb
cmp
adc
ret
sar
cmp
and
jnp
xchg
pop
flds
insb
aad
sub
cmp
icebp
lock
mov
divl
fnsave
cs
in
std
jnp
add
pop
scas
mov
int
mov
jge
push
xor
dec
aam
xchg
adc
sub
mov
jnp
sti
xlat
mov
popf
push
pop
xor
icebp
loope
add
mov
xor
das
mov
lock
mov
inc
fcomps
arpl
and
dec
lret
dec
in
lds
mov
mov
bound
test
mov
insl
pop
pushl
mov
repnz
add
push
push
mov
adc
push
jnp
out
and
fmull
loopne
out
mov
xchg
or
fcmove
add
cmp
imul
mov
pop
xchg
lock
push
mov
rcl
movsl
pop
push
pop
imul
mov
shrb
and
mov
iret
mov
sub
mov
dec
lock
cwtl
mov
jnp
xor
xorl
and
jecxz
test
mov
cltd
inc
stos
sbb
sarl
and
adc
inc
movsb
addr16
les
stos
push
dec
out
and
loopne
xor
in
aad
cli
xor
push
xor
cli
sbb
je
sarl
jns
dec
push
cmp
adc
inc
stc
adc
xor
jge
inc
mov
int3
mov
jns
mov
adc
stos
jg
mov
push
jg
sbb
add
pop
jl
bswap
xlat
xchg
mov
pop
lret
es
loope
aam
pop
les
pop
inc
test
mov
pop
mov
xchg
pop
xchg
enter
dec
ds
aad
mov
test
xor
scas
sti
ja
arpl
push
lock
sub
addr16
cmpsb
adc
popa
lret
aam
cld
or
jno
jbe
iret
mov
insb
adc
call
cltd
outsb
pop
iret
movb
mov
mov
add
rolb
int3
xchg
and
je
mov
xchg
dec
or
xor
jno
sbb
dec
shlb
es
gs
add
sbbb
jp
stc
rcrl
jo
xor
xchg
mov
imul
jecxz
mov
pop
out
push
in
push
fistpll
xlat
push
mov
repnz
movsb
cmc
xchg
ljmp
subb
aam
sbb
pop
mov
push
cmp
loope
arpl
xlat
push
sub
ljmp
sub
mov
fisttps
mulb
inc
cmpsb
sbb
andl
jmp
and
and
mov
lahf
dec
cmc
aam
mov
push
xor
out
roll
mov
in
jnp
add
pop
xchg
or
rol
push
push
jae
cmp
jge
push
push
stos
sahf
xchg
pop
lea
sbb
xchg
inc
jbe
bound
cmp
push
push
je
rcr
pushf
or
lret
sbb
mov
mov
int3
cmp
call
mov
lcall
test
int
mov
push
add
pop
pushf
cmp
cmpsb
je
and
sbb
std
mov
mov
or
xchg
bound
mov
popl
jbe
ljmp
and
push
push
ds
dec
int3
pop
iret
pop
xor
fsts
idivb
xchg
stos
sbb
rclb
aad
xchg
lcall
push
inc
inc
mov
test
out
popa
sbb
das
rclb
sub
push
lret
pop
cmc
and
pop
mov
sti
xchg
repnz
dec
mov
aas
mov
mov
dec
inc
dec
jne
mov
push
adc
sub
test
insb
fdivp
shlb
mov
inc
rep
stos
clc
adc
push
mov
jo
icebp
xor
pop
movsb
jno
fsub
push
jns
pop
dec
mov
push
clc
shlb
jmp
jp
test
or
xlat
cmp
lds
sbb
movsb
dec
or
lock
bound
popa
fucom
jg
xchg
jns
or
xor
push
repz
mov
sub
pop
and
mov
andl
test
push
xor
push
arpl
push
fcoml
fnstsw
adc
cmc
pop
jmp
add
movsb
dec
rclb
mov
dec
loop
xchg
dec
xchg
push
xor
and
mov
dec
test
fwait
out
cmp
xor
gs
adc
cmc
push
data16
loop
push
adc
movsl
gs
dec
fidivrl
lret
pop
jns
dec
ret
xor
add
jg
push
sub
pop
pop
mov
clc
and
fptan
xchg
inc
cli
js
sub
clc
mov
mov
das
cmp
pop
pop
or
cld
inc
sub
mov
inc
pop
stc
arpl
rclb
lcall
aas
lret
jmp
and
shrb
fcomps
imul
sti
cmp
inc
scas
call
mov
sub
and
xchg
xchg
xor
jmp
ret
bound
mov
mov
pop
push
ret
sbb
and
dec
fsubr
push
cld
je
push
test
mov
insl
dec
enter
insb
mov
xor
xchg
cld
xor
and
ficoml
cmp
outsl
ret
jp
mov
mov
cmp
sbb
fdivrs
sub
movsb
loopne
mov
pop
mov
inc
dec
cmc
lods
dec
iret
add
hlt
cmp
lahf
aas
lret
loop
inc
mov
lahf
xor
mov
inc
idivl
repz
test
test
out
pop
add
and
mov
pushf
into
mov
das
daa
pusha
sub
or
pop
js
icebp
in
xor
add
pop
inc
pop
inc
mov
add
and
dec
ret
int
or
pop
fs
xchg
loopne
pushf
les
into
out
mov
or
xor
pop
loopne
insb
cwtl
ljmp
popa
or
push
shl
xchg
adc
jb
adc
mov
pop
or
sub
inc
xchg
in
pop
xor
adc
stc
and
jno
pushf
dec
push
pop
cmp
push
xchg
fidivrl
rorl
sub
das
divps
fidivrl
outsl
mov
pop
cs
push
std
imul
fst
into
xchg
cmp
or
inc
mov
stc
push
jno
inc
push
int
push
int3
and
lea
mov
dec
and
pop
mov
scas
pop
push
imul
xor
mov
mov
xchg
jno
mov
js
cmp
sbb
mov
in
and
push
shl
pop
sbb
or
orl
jno
rolb
mov
dec
pop
jmp
and
pop
outsl
inc
scas
fwait
decl
hlt
in
dec
mov
movsl
stc
mov
sbb
inc
adc
inc
loopne
or
cmp
shl
sub
pop
jp
aas
mov
add
roll
pusha
cltd
je
sub
int
test
test
jb
out
jb
jb
cwtl
push
sub
push
inc
cltd
shl
fildll
push
cmp
in
xor
ss
into
xchg
andb
xor
lahf
arpl
scas
push
and
int3
push
aad
std
xor
aaa
fdivrs
cmp
sbb
insl
cmpsl
enter
lcall
push
das
and
std
pop
sarb
test
add
dec
test
ljmp
push
gs
sub
mov
rorb
mov
adc
cltd
test
push
fimull
sbb
std
stc
push
fwait
inc
jg
sbb
mov
cmpsl
xchg
out
fildl
push
pop
loopne
popa
jo
dec
jge
mov
dec
popa
xor
push
jge
push
in
jecxz
sbb
sti
and
fisubl
add
jbe
mov
loope
add
jb
sti
xor
fs
test
je
and
adc
jl
lret
mov
cltd
flds
cwtl
adc
dec
cmp
decb
mov
aas
arpl
scas
mov
sbb
jmp
fisubs
mov
push
xor
and
out
fnstsw
inc
cmp
inc
pop
loopne
sub
jb
xor
mov
call
inc
lds
fiaddl
jae
imul
mov
jmp
add
xor
add
jb
loope
push
lahf
in
icebp
rorl
sbb
dec
cwtl
movsl
mov
icebp
aas
and
adc
jle
ret
jnp
lret
test
cmp
in
jmp
mov
imul
in
mov
cltd
mov
sti
es
jg
popa
roll
ffreep
cs
pop
jmp
mov
loopne
insl
xor
fwait
ja
add
cli
sub
movsl
or
mov
nop
push
inc
cli
xor
stos
mov
jmp
outsb
sub
cmpsl
mov
daa
cmp
rorl
push
std
imul
pop
xchg
push
mov
pop
add
hlt
jno
scas
pop
add
ret
jns
iret
repnz
add
lock
sbb
jb
fdivrl
dec
lret
jg
sbbl
repz
jecxz
mov
loopne
repnz
pop
sahf
mov
jg
clc
in
insb
sbbb
pop
pop
iret
in
xchg
add
or
and
xchg
push
mov
sub
add
in
addr16
fstpl
jl
pop
xchg
inc
test
mov
cltd
stos
adc
lret
jbe
cmpsb
xchg
cmp
sti
insb
js
or
add
das
out
add
pushf
int
ret
jecxz
ja
adc
shlb
lret
xchg
mov
sbb
pop
test
nop
dec
sub
xchg
adc
adc
pop
xchg
sbb
andb
subb
imul
stos
pop
mov
mov
push
lret
and
pop
xchg
stos
mov
repz
leave
xchg
adc
pop
icebp
or
jne
jg
and
mov
fsubrs
das
mov
jno
ret
and
pop
std
aaa
mov
pop
mov
in
cmp
mov
push
jnp
jbe
push
lods
test
xlat
mov
das
ud0
or
dec
jmp
test
inc
insb
les
je
inc
push
sbb
in
iret
sub
jmp
mov
fidivl
push
mov
filds
mov
stos
movsb
into
lret
sub
push
daa
mov
push
mov
js
aaa
mov
mov
std
jno
and
and
push
xchg
int
mov
sub
stos
movsl
call
xchg
dec
push
sbb
or
cmpsb
inc
int
jbe
xor
mov
lcall
outsb
out
jge
jecxz
dec
xchg
jae
dec
andb
lock
push
movsl
xchg
xor
mov
fnstcw
inc
sti
out
test
mov
push
sbb
mov
daa
lret
mov
jl
dec
mov
sub
xchg
cmp
mov
sti
jnp
pop
aam
je
call
adc
or
push
cmp
add
xchg
in
loope
lret
and
shl
mov
push
ficompl
fstpl
outsb
cltd
xlat
or
mov
mov
sub
pop
ret
outsl
cwtl
push
adc
ljmp
lahf
stos
cmc
subl
xchg
imul
jno
push
jae
test
imull
sub
and
int3
icebp
jle
dec
dec
inc
insb
push
mov
mov
jo
mov
iret
cmp
push
add
loopne
xchg
inc
dec
pop
mov
xor
push
jle
outsl
dec
mov
popf
add
xor
xchg
bound
int3
and
xchg
mov
mov
rolb
add
dec
add
mov
sub
dec
js
enter
pushf
pop
data16
xor
xchg
jmp
xor
frstor
or
cmp
mov
dec
enter
stos
jo
lcall
xor
mov
sbb
jecxz
mov
push
mov
mov
jge
jbe
lret
pop
fstpt
lcall
es
adc
aam
cli
mov
inc
or
xchg
js
inc
and
jns
lcall
inc
pop
jb
cmp
inc
push
out
or
or
push
scas
mov
or
enter
push
arpl
mov
dec
mov
out
pushf
rcll
dec
jle
adc
test
faddl
out
in
cmp
and
add
jns
das
ret
jnp
dec
scas
addr16
mov
js
lret
xchg
lods
std
pop
and
pop
lods
out
int3
sub
rol
push
decb
mov
jecxz
insl
jecxz
xor
dec
icebp
mov
scas
stos
dec
ret
mov
mov
jne
and
xchg
aaa
shll
push
dec
fisubl
and
pop
outsl
cmpsl
xchg
enter
sub
add
cmp
arpl
cmpsb
or
push
int3
adc
push
xor
daa
les
lock
into
cmc
ja
add
add
and
sahf
and
jo
add
dec
add
inc
push
fsubp
mov
fwait
cmp
pop
and
pop
or
inc
mov
nop
push
dec
cmp
xchg
out
inc
daa
jp
jmp
adc
adc
inc
sbb
push
push
pop
lret
jl
pop
lods
sbb
add
xchg
push
push
add
push
sbb
jg
loop
xchg
bound
clc
mov
xchg
xchg
mov
mov
pop
push
sbb
je
mov
sub
sbb
inc
push
mov
dec
aam
and
mov
mov
data16
adc
lea
sub
out
ficompl
and
popa
daa
mov
js
xchg
aam
jnp
dec
nop
loop
lret
leave
and
fwait
jle
pusha
data16
inc
sub
filds
lea
mov
push
jbe
mov
fldenv
dec
les
adc
jo
mov
lret
adc
test
push
dec
lret
cmpsb
inc
sub
inc
stos
insl
add
cmp
subl
cltd
jp
adc
sbb
test
push
adc
mov
call
add
arpl
outsb
mov
mov
imul
ljmp
and
xchg
fs
scas
fmul
xchg
sub
mov
sub
int
cld
sub
xchg
fimuls
mov
es
inc
ret
scas
jno
mov
jno
sbb
fwait
jns
mulb
push
inc
sub
shll
mov
xchg
xor
dec
flds
lods
stos
adc
pop
push
add
stos
sbb
ja
inc
mov
ror
mov
lds
or
ds
int3
enter
jne
mov
xchg
in
and
mov
xchg
in
arpl
mov
lock
scas
cmpsl
mov
ljmp
adc
aam
imul
inc
in
icebp
and
jno
sub
or
dec
push
loopne
mov
sbb
sbb
loopne
cmpb
pop
cmp
sub
add
pop
adc
ds
xor
sahf
jnp
adc
xchg
lds
orl
jae
sbb
add
inc
xor
mov
aad
es
jb
movsl
sub
push
mov
jnp
mov
mov
push
je
pop
cmp
xchg
inc
pop
sub
mov
mov
hlt
sub
stos
inc
ret
sub
mov
push
pop
loopne
cs
in
mov
sbb
xor
sbb
into
push
xchg
inc
and
bswap
scas
cld
ffree
cmp
sub
fistpl
mov
or
idiv
cmp
test
lea
pop
pop
and
cmp
dec
popf
in
cmpsl
pushf
bound
dec
xchg
adc
xchg
pusha
clc
mov
sbb
cltd
call
mov
adcl
mov
mov
xor
pop
or
cli
xor
mov
int
aam
xchg
in
and
scas
xchg
and
push
les
jg
js
mov
or
add
mov
xchg
ljmp
in
inc
xor
aaa
dec
xchg
imul
sub
mov
insb
jmp
cwtl
mov
and
mov
push
cmp
rcrb
jmp
cmp
mov
mov
aad
pop
movsb
lret
mov
mov
xor
pop
je
add
mov
and
js
push
pop
or
mov
pop
sbb
sbb
sbb
insb
test
mov
jae
jae
mov
adc
out
jmp
push
mov
bound
cmp
cmp
xchg
sub
std
je,pn
mov
mov
dec
adc
mov
ds
xor
dec
mov
sub
jo
xchg
push
sub
jbe
jne
idiv
fcmovne
jecxz
rcrb
pop
lret
cmp
daa
aad
add
loop
pop
cmp
push
jle
cli
imul
imul
and
jle
incb
clc
mov
loopne
mov
ss
outsl
dec
in
loopne
and
outsb
cmpsl
xchg
xchg
dec
jecxz
out
in
mov
iret
loopew
inc
push
mov
sub
dec
and
out
xor
mov
sahf
dec
xchg
pusha
cmc
xor
jo
std
cmpl
mov
aaa
out
pushf
xchg
ds
cwtl
add
xchg
das
into
sub
rcr
mov
sub
das
add
pop
pop
jno
mov
jae
scas
sub
daa
subl
jbe
jmp
push
lahf
ja
repz
or
or
test
lret
adc
xchg
mov
and
inc
and
movsb
rolb
jle
ljmp
or
xor
addr16
mov
fdivrl
popa
gs
xlat
add
add
push
cmp
rclb
mov
lods
jle
xchg
xchg
lahf
pop
lds
mov
and
data16
xor
out
push
mov
in
cmp
mov
jbe
insl
decb
xor
mov
je
call
push
stc
xchg
dec
dec
js
loopne
in
cmp
test
insl
jge,pt
push
scas
sbb
insb
add
cld
addr16
sub
dec
push
int3
xor
mov
test
repz
lods
sar
std
gs
cmp
lret
repz
ja
add
and
arpl
iret
sbb
das
addl
in
mov
adc
xorb
xchg
movsb
ljmp
mov
xchg
pop
pop
inc
shll
mov
cmpsl
imull
out
pop
mov
pop
stos
rolb
xor
jne
sub
and
aaa
mov
pop
dec
mov
inc
adc
xor
mov
push
xchg
and
push
out
ljmp
xor
cmp
aaa
test
push
add
jmp
out
scas
mov
and
mov
push
in
lods
cmp
adc
lods
out
jae
notb
push
jae
xchg
pusha
or
aad
mov
je
bound
jno
out
int
and
push
test
xor
clc
fidivs
push
outsb
jb
jmp
lret
popa
lock
enter
jns
std
sub
rorl
push
push
inc
mov
xchg
jg
or
mov
sub
push
repnz
std
and
dec
fcomp
mov
fcoml
loope
aaa
adc
cmpl
sahf
sbb
add
shlb
sahf
outsl
push
std
aaa
dec
jo
in
loop
sahf
push
mov
push
scas
push
mov
shlb
lret
inc
add
xlat
mov
fcomi
sbb
iret
mov
ss
leave
out
out
sub
imul
sub
xor
pop
rcrb
and
call
inc
mov
xor
test
dec
inc
sub
rcl
out
andl
xchg
test
inc
stos
in
jge
xchg
rcll
pop
inc
dec
sahf
sbb
leave
or
sbb
push
cmp
jb
add
jne
xchg
pop
test
fnstsw
sti
mov
in
sbb
adc
dec
adc
addb
adc
xor
fistpl
imul
rcrl
arpl
lods
sti
lock
rcll
push
jle
inc
lock
leave
pop
jbe
add
sar
mov
aam
mov
add
cmp
testl
mov
testl
loope
cltd
xchg
ja
and
popf
jecxz
cli
jle
add
gs
jae
ljmp
jp
iret
fs
cmp
popf
push
pop
or
xor
cmp
sub
pushf
incb
inc
rcrl
sub
adc
jl
dec
pop
mov
push
jge
dec
test
outsl
cs
sbb
cmpsl
fwait
in
test
xchg
lret
pop
int3
inc
arpl
das
push
dec
lds
repnz
sahf
je
xor
insl
mov
sbb
push
pop
fwait
imul
jp
xchg
push
xor
push
pop
popa
cmpsl
and
arpl
nop
cmpsb
pop
jae
out
repz
ret
pop
lods
xor
lea
ja
and
leave
xor
shrb
pop
pop
rcrl
int
xor
into
repz
and
je
mov
or
ficompl
test
jge
dec
mov
ret
insb
lods
sbb
adc
sub
jne
and
xchg
cmp
cmpsl
mov
add
adc
lods
and
sbb
gs
in
push
jno
dec
add
shl
lret
mov
in
and
clc
mov
mov
mov
mov
shrl
jb
or
test
aam
inc
lcall
jno
lcall
pop
orb
xchg
xor
add
das
lods
rsm
popl
test
pop
jno
mov
jno
push
faddp
and
inc
adc
add
xor
outsl
je
push
sub
clc
mov
int3
adc
and
mov
icebp
dec
jnp
ds
mov
adc
or
fwait
sahf
cmp
insb
data16
adc
imul
in
rcrl
xchg
mov
movsl
xor
jo
outsb
std
xchg
and
call
int3
or
pop
add
push
fiaddl
dec
push
fcmovu
xor
pop
jge
insb
aam
xchg
imul
jl
jne
sti
push
sub
jmp
lock
ret
cli
dec
lea
aad
mov
cld
sbb
int
push
pop
mov
divb
dec
mov
mov
add
and
fsubrl
xchg
out
cmp
les
shrl
xor
inc
mov
mov
mov
iret
int
js
mov
cltd
mov
leave
and
loope
orl
mov
sbb
lea
cmp
jle
je
fiaddl
cmp
and
sbb
sub
daa
fisttpll
ds
mov
ljmp
or
lcall
movsl
pop
arpl
pop
inc
adc
sbb
push
lahf
mov
and
adc
cmp
jae
or
pop
mov
xchg
fnsave
loop
cmp
cmp
jnp
fstpt
das
sub
jb
int
fldl
jge
pushf
push
jmp
push
cmpsb
adc
int
pop
mov
sbb
jae
adc
lret
call
popl
sub
jae
xor
pop
cmp
and
sahf
sub
push
outsl
pop
cmpsb
icebp
mov
pop
pop
fdivs
pop
lods
fstps
imul
or
aaa
stos
movsl
mov
pushf
cld
sahf
sahf
add
int
shrl
hlt
ret
jmp
xlat
daa
popa
mov
mov
das
mov
fstps
insb
outsb
add
psubsb
lret
pusha
xchg
pusha
lahf
sbb
push
stos
sti
lea
outsl
or
popf
jno
das
sbb
sub
dec
sbb
jae
andb
outsl
daa
push
lret
xor
xor
in
mov
pop
add
es
sub
stos
jno
mov
jnp
adc
fwait
xor
jb
es
shrl
add
xor
inc
insb
pop
js
xlat
sub
adc
insl
mulb
sahf
cmp
pop
into
mov
stos
or
add
sarb
shlb
les
fisubs
xchg
movsl
jb
sub
push
xchg
xchg
or
test
push
fwait
inc
pop
dec
test
push
dec
adc
mov
addr16
cmp
xor
pop
pop
sbb
imul
das
jo
jmp
adc
pop
sbb
sti
xchg
jb
mov
test
sub
cmp
addr16
fcmove
dec
fnstcw
rcrb
pop
adc
add
popa
xchg
fcoms
add
sbbb
sub
and
adc
jl
call
std
out
cmp
sbb
pop
mov
push
enter
mov
cmpsl
cli
out
test
loope
dec
adc
mov
xchg
xor
fnstsw
inc
jmp
xlat
or
sbb
pop
adc
push
cmc
es
push
mov
cmp
pop
loope
arpl
jge
push
loope
roll
mov
mov
or
fs
enter
fwait
icebp
arpl
aas
aam
fldpi
ja
loope
insb
or
xchg
pushf
mov
mov
pop
ljmp
or
pop
jnp
ljmp
stos
jg
push
sbb
xchg
and
into
int
ja
jmp
mov
pop
adc
mov
push
dec
fisubs
ret
movsl
pop
int3
add
aam
popa
arpl
xchg
or
ret
jmp
in
xchg
mov
pop
out
or
aaa
inc
mov
pop
adc
add
jle
sub
push
out
jnp
js
icebp
or
jns
addl
movl
xlat
or
sub
and
pop
popf
js
push
repnz
or
add
mov
sbb
in
xchg
cmp
aad
inc
insl
push
or
out
repz
ss
cwtl
sbbl
into
das
jecxz
sub
lock
cmc
dec
jae
iret
clc
pop
or
cmp
push
and
xchg
mov
popf
aad
jmp
push
ret
push
mov
andb
out
enter
imul
jne
sbb
and
xor
and
or
adc
sub
add
pop
test
dec
std
xchg
sbb
xchg
in
rclb
sbb
ja
xchg
out
fs
cltd
sbb
xchg
cltd
cltd
outsb
movsl
sub
dec
hlt
loope
xchg
mov
in
jbe
xor
imul
or
xor
sbbl
mov
and
push
out
test
mov
cmp
xor
pop
mov
out
cmp
xchg
out
jb
lock
daa
jecxz
cld
test
inc
std
popf
lea
jg
cld
sbb
in
dec
stc
mov
xor
jp
in
jmp
out
pop
stos
xor
xor
jo
mov
jge
lea
or
dec
stos
xchg
rclb
pop
aam
xchg
in
xchg
lods
push
sbb
leave
dec
sti
int3
push
in
in
aas
imul
add
aad
pop
ljmp
or
mov
pop
jecxz
inc
loopne
pop
rorb
pop
sbb
fdivp
sahf
dec
insb
mov
pop
call
push
sbb
push
lods
es
mov
fwait
dec
dec
and
lcall
mov
cmp
scas
in
jno
cmp
pop
jne
ss
lea
cmp
xchg
xchg
lods
rcrb
push
out
adc
mov
sbb
xor
imul
pushf
sub
push
fs
popa
mov
into
mov
out
add
xlat
cwtl
xchg
rclb
jle
mov
lds
or
shlb
pop
repnz
les
mov
shll
shll
sbb
jle
xor
and
push
insb
pusha
sub
testl
adc
stos
xor
mov
repnz
ficoms
xor
push
or
ds
pop
jb
cmp
jae
mov
adc
mov
mov
pop
add
mov
and
daa
mov
mov
clc
scas
sub
cwtl
mov
push
xchg
push
inc
sbb
dec
push
cmp
call
add
pop
jno
in
jno
cltd
and
mov
outsb
mov
pop
cmp
paddsb
mov
shr
aas
in
pop
or
inc
outsl
or
dec
jnp
mov
pop
imul
sub
add
je
inc
sbb
inc
dec
ja
xor
and
push
std
and
lods
mov
push
mov
xchg
jne
out
mov
inc
lods
push
out
scas
lret
fistl
mov
mov
push
sti
rolb
sub
std
xor
ja
data16
xchg
and
mov
imul
cmp
and
pop
fcmovu
testb
js
cltd
mov
jae
loope
sub
mov
fs
sbb
icebp
les
ljmp
mov
pushfw
mov
xchg
mov
and
pusha
sub
das
inc
xor
mov
cmc
mov
rol
aad
ret
icebp
push
sub
inc
aaa
xor
adc
pop
jbe
xchg
mov
aam
in
out
xchg
shlb
ja
push
mov
aas
jmp
sub
cmp
mov
rcrb
inc
cltd
in
shll
adc
sbb
in
and
mov
jbe
xor
sub
sub
mov
aas
sarb
xor
lock
pushf
cmpsl
mov
adc
imul
bound
enter
repz
push
xor
sub
ja
fimull
inc
filds
xchg
fstp
stos
fcmovbe
daa
pop
das
cmp
adc
jecxz
incb
pop
pop
xorl
aas
mov
insb
inc
jno
les
fwait
or
pusha
mov
pop
leave
out
pop
inc
dec
fs
int3
out
pop
pusha
je
nop
fnsave
push
inc
negb
mov
or
pop
lea
cmp
xchg
sub
sbb
cmpsl
scas
sub
pop
repnz
jle
mov
outsb
jmp
fsubrs
mov
arpl
inc
data16
iret
jge
lret
inc
fs
cmp
or
loope
push
out
mov
ja
std
mov
int
mov
leave
lret
jg
pop
leave
mov
test
inc
inc
inc
pop
repnz
inc
xor
test
cld
sub
pop
mov
sbb
xchg
adc
icebp
test
icebp
rcrb
addr16
pop
subl
mov
jnp
jecxz
fcomip
aaa
mov
call
sbb
lahf
sub
ds
aaa
inc
lcall
mov
lret
es
ret
cmp
xor
sub
jl
push
shl
rcl
sbb
push
xor
jo
inc
arpl
xor
cmp
adcl
fcmovb
inc
cmp
cltd
adc
icebp
cmc
jae
cld
or
addr16
xor
mov
lock
sub
xchg
inc
push
lds
rcl
jl
ficompl
fisubs
dec
push
mov
stc
icebp
jnp
outsl
mov
sbb
js
out
sub
push
imul
aam
test
rclb
inc
mov
jge
je
sub
xchg
cmp
or
stc
xor
addb
inc
bnd
sbb
call
jge
mov
mov
or
pusha
or
jno
jg
leave
dec
cmp
lcall
sbb
imul
xchg
pop
in
cli
pop
pusha
push
add
pop
mov
inc
mov
jg
cmp
mov
mov
mov
adc
jo
inc
out
enter
fnsave
subl
scas
inc
mov
loope
pop
in
sbb
jecxz
dec
leave
dec
rcll
adcl
aas
cmp
ljmp
push
jno
out
sbb
cltd
push
and
popf
xor
and
pop
test
pop
movsl
cmp
or
outsb
jl
cmpsl
fwait
in
jb
mov
cmc
mov
and
pop
mov
dec
lret
rcll
cmpl
xor
cmpb
add
inc
cs
outsb
push
mov
sahf
popa
mov
lea
bound
dec
js
in
mulb
add
arpl
xchg
xchg
add
imul
push
icebp
pop
jmp
cmp
mov
pop
and
testb
out
out
mov
cmc
dec
mov
loop
pushf
mov
dec
scas
das
inc
xchg
sbb
scas
lods
fwait
cmc
mov
mov
inc
jns
pushf
sbbb
mov
stos
sub
into
or
mov
ret
test
pop
in
push
xchg
out
lcall
inc
test
adc
push
je
jp
movsl
and
jp
ljmp
scas
and
imul
into
cmpsl
cmc
pop
xor
outsb
jne,pn
or
xchg
xchg
sbb
sbb
fcoml
and
add
push
ja
into
sub
cmp
popf
int3
mov
pop
enter
jne
xchg
repz
cld
in
inc
dec
push
jns
movsb
push
cmp
insb
lds
inc
inc
pushf
sbb
pop
lods
das
cmp
cmpsl
mov
ret
xchg
inc
ffreep
xchg
nop
js
push
mov
cltd
fwait
imul
js
cmc
les
xchg
mov
push
adc
fdivrl
adc
fwait
jl
add
fdivrs
jbe
push
mov
cmp
stos
xchg
push
cmp
add
inc
adcl
data16
shll
pop
add
jb
pop
xchg
into
pop
sub
xor
inc
or
mov
xor
xchg
push
xlat
xchg
xchg
inc
cmp
sbb
ja
push
mov
movsl
jbe
and
repnz
dec
sbb
roll
std
and
cwtl
leave
bound
xor
aam
mov
lahf
in
cmovp
mov
push
popa
loop
js
cmp
std
mov
mov
stos
rolb
stos
in
jp
outsb
in
aad
push
jae
push
cli
pop
shrb
test
arpl
popf
aaa
icebp
arpl
stos
mov
add
insl
sahf
mov
sbb
test
daa
push
decl
add
out
mov
jb
sbb
pop
xor
add
jns,pn
adc
call
sbb
adc
mov
pop
mov
jbe
shlb
int3
sub
dec
jge
jno
push
call
add
pop
inc
mov
xlat
lret
xchg
sbb
in
pop
pop
shlb
mov
mov
cmp
sysexit
push
mov
sub
jg
mov
daa
sbb
dec
push
cmp
call
xor
stc
ret
xchg
jl
pop
mov
lahf
xchg
pop
cmp
mov
dec
cmp
add
jl
call
idivb
lock
adc
mov
push
nop
jg
mov
mov
addr16
loope
mov
push
mov
sbb
repz
shl
dec
out
pop
xor
jne
inc
push
xor
or
leave
mov
adc
mov
std
test
sbb
mov
or
lods
adc
mov
lds
xlat
or
xor
rep
ja
sbb
add
or
jg
jmp
push
mov
or
and
scas
loope
std
sbb
mov
imul
rcr
push
add
pop
push
movsb
ret
jecxz
pop
sub
mov
mov
xorw
imul
test
inc
push
jbe
or
dec
loopne
enter
ss
add
or
scas
outsl
ja
ficomps
fyl2xp1
cmc
cmp
mov
cmpsl
insb
pushf
xchg
das
sbb
pop
mov
xlat
repz
add
jo
adc
loopne
or
adc
cmpsb
ja
dec
outsb
mov
outsb
outsl
bnd
xor
lock
sarb
mov
out
inc
cld
cmpsl
jne
xchg
jb
mov
dec
inc
xor
push
popf
mov
jp
jbe
int3
push
ds
jecxz
sarl
jmp
xchg
sbb
pop
pop
cs
jnp
sbb
out
pushf
jnp
lods
gs
cmp
ljmp
loopne,pt
sbb
test
std
fcompl
mov
je
ja
js
fsubl
xlat
mov
adc
mov
movsb
mov
xor
packuswb
jns
jne
hlt
mov
icebp
xorl
ret
jg
push
loopne
daa
fidivrs
scas
mov
rcl
shrl
es
jecxz
add
mov
shlb
or
push
cwtl
fisubl
aad
std
sbb
dec
and
aad
outsl
xor
pop
arpl
mov
mov
jp
cmp
push
ficoml
add
or
cwtl
dec
in
arpl
shlb
ja
xchg
sbb
in
int3
sub
test
inc
and
mov
leave
repnz
das
adc
test
adc
sub
add
sbb
push
push
pop
inc
insl
mov
movsl
sbb
arpl
mov
dec
pop
inc
jecxz
lods
sbb
pop
lret
xor
popa
inc
fsubr
movsb
or
cltd
cwtl
jne
imul
lock
push
pop
jno
test
inc
loopne
mov
ret
imul
sbb
std
scas
add
out
xchg
push
xchg
xor
dec
cmp
mov
ret
jg
pop
adc
xor
or
imul
les
movsl
shll
mov
cli
in
imul
push
cltd
jns
fbld
fucom
inc
stc
mov
dec
and
mov
outsl
enter
lahf
imul
jecxz
push
sub
sti
mov
lds
xor
addb
lahf
sbb
int3
das
lret
pop
jmp
mov
shlb
sbb
cmpl
and
mov
jmp
and
sub
clc
sti
mov
cmp
ljmp
repnz
cwtl
test
data16
xchg
mov
xor
icebp
aaa
repz
xchg
inc
gs
ss
sbb
in
add
shrl
or
into
mov
movsl
aas
hlt
inc
lock
das
jp
jnp
cli
lcall
test
fcoms
sub
mov
push
pop
jg
fnstenv
enter
pop
loope
push
sub
dec
add
lahf
adc
mov
cmpb
fsubp
and
mov
adc
mov
jmp
or
xor
repz
fbld
in
enter
repz
test
lcall
push
or
enter
adc
xlat
xchg
fnstcw
ljmp
subb
out
sub
jmp
xor
maxps
outsb
lahf
scas
pop
lret
mov
outsl
iret
add
sub
mov
hlt
lods
sub
test
test
rorl
xchg
mov
subb
pop
jg
loopne
or
inc
add
xor
mov
pusha
popa
cltd
loope
not
sub
addr16
nop
add
inc
pushf
xor
dec
dec
insl
and
mov
jg
outsl
mov
dec
cwtl
movsl
in
inc
in
ss
out
pop
mov
arpl
cwtl
cmpsb
sbb
stos
in
jp
xchg
lret
adc
add
or
mov
xchg
hlt
pop
xchg
jmp
and
and
xchg
inc
mov
shl
push
bound
lahf
lds
jg
lahf
stos
loope
aas
pushf
int3
push
xor
inc
push
loop
jo
xor
dec
fcompl
ret
loope
adc
or
push
and
out
popf
adcb
jne
cmp
or
loop
inc
imul
push
cmp
je
inc
xor
out
mov
pop
jl
mov
jno
mov
sbb
ja
test
add
into
mov
adc
push
pop
pushf
mov
ret
mov
leave
into
or
cmp
fcomi
xchg
dec
dec
enter
or
icebp
stos
pop
and
jmp
hlt
notb
aam
xchg
pop
cmp
data16
mov
cmp
aaa
mov
xchg
sub
negb
jge
jns
xchg
iret
sbb
fnstenv
movsl
test
jp
in
push
cmc
or
dec
push
and
aas
mov
cmp
push
icebp
xchg
xor
clc
cwtl
cmp
add
cmp
loope
imul
sbb
gs
fdivrs
or
jno
xchg
fpatan
inc
push
iret
and
jns
mov
sbbl
mov
xor
addb
dec
loopne
out
jo
or
test
leave
fimuls
adc
test
or
mov
adc
dec
sbb
out
xor
ffree
jnp
mov
mov
lret
pop
mov
adc
incb
call
repz
adc
mov
dec
mov
jmp
popf
jo
les
and
in
xchg
rcl
dec
sub
xor
mov
movsb
lret
mov
dec
and
jecxz
add
and
xor
das
stos
inc
push
xchg
mov
add
daa
fisubrl
aas
mov
and
ret
fcoms
sub
sarb
loopne
mov
in
mov
lahf
movsb
jg
insb
cmpsb
cmp
cmc
test
arpl
jns
xchg
ja
ljmp
leave
push
out
mov
leave
sub
test
jo
push
cld
test
out
xchg
outsb
jmp
es
stos
jae
test
mov
scas
xor
cltd
loopne
addr16
inc
js
push
sti
je
xor
lock
test
xor
out
insb
ret
orl
rol
adc
and
movsl
jne
xor
ss
das
inc
jbe
jb
test
cmp
and
into
fsubl
jo
add
push
inc
pop
xchg
loopne
outsl
andb
and
dec
int
inc
mov
ffreep
jae
aas
sti
sarb
push
sub
push
sbb
sti
out
xor
add
cmp
cmc
sbb
filds
ljmp
int3
fisubs
cld
test
adc
or
push
xchg
xchg
repz
pusha
inc
push
pop
add
adc
cmp
jb
push
pop
sub
inc
icebp
add
test
je
fimull
dec
and
jne
xor
ja
out
ret
das
pop
adc
sub
stos
inc
mov
inc
test
lahf
push
jno
sarb
add
in
mov
push
std
sub
add
stc
test
pop
pop
ss
hlt
scas
ljmp
mov
adc
scas
lock
mov
add
insb
sub
pop
push
adc
sbb
leave
and
inc
clc
sub
jecxz
ds
imul
roll
aaa
cmp
push
in
nop
insl
bound
dec
shll
mov
cmpsb
cwtl
and
pop
ss
movsl
dec
daa
pop
ret
sbb
cld
test
mov
cld
xchg
adc
inc
cmpsl
mov
outsb
adc
mov
fidivl
shr
pop
sub
sub
pop
jg
ret
in
loope
lahf
push
inc
fcompl
jno
push
dec
xchg
jae
es
notl
push
add
loope
mov
ds
cmpsl
call
pop
add
jo
sbb
add
mov
push
enter
in
ja
adc
jecxz
inc
imulb
in
stos
xor
mov
test
sarl
ds
add
pop
or
mov
dec
add
insl
loop
fscale
fisubl
dec
lret
leave
dec
mov
icebp
cltd
xchg
push
push
shl
stos
fnstenv
sub
mov
and
adc
jns
sbb
or
roll
push
sbb
pop
mov
imul
xchg
test
test
ret
xchg
std
xlat
nopl
pop
jmp
push
jecxz
std
push
cmpsb
rclb
push
fidivs
fcmove
sub
popa
pushf
stc
mov
and
shll
call
pop
and
cmp
push
leave
pop
mov
dec
push
ss
jo
pop
sub
xchg
add
je
shl
mov
in
sbb
ret
sahf
and
pop
cld
andb
pop
cli
arpl
in
aam
mov
adc
rorl
imul
sbb
out
aad
sahf
fldt
jns
cmp
cmp
xor
mov
out
jmp
or
adc
scas
push
repnz
xlat
sbb
jno
rcll
mov
jl
cmp
lods
scas
in
out
in
mov
ds
mov
sub
cmc
xchg
xor
test
cmp
enter
cmp
or
or
dec
stos
xorb
repz
mov
mov
pop
hlt
fidivl
scas
ljmp
loopne
mov
movsl
jmp
bound
jbe
sar
test
das
cmp
add
adc
pushf
lds
sub
in
outsl
mov
mov
inc
pop
and
lcall
sarl
jns
add
xorl
pop
imul
add
rclb
dec
mov
addr16
inc
popf
xchg
adc
add
iret
dec
xchg
std
push
adc
in
scas
loop
data16
add
xchg
add
scas
loope
movsb
push
je
test
lahf
mov
popa
lock
pop
mov
dec
lods
scas
push
mov
and
push
sbb
dec
sahf
pop
test
lcall
jno
fcmovnu
sub
fmull
and
outsl
movsb
mov
stos
insb
mov
lahf
outsl
add
ud1
push
mov
lds
xor
mov
fnstcw
dec
mov
push
call
cmpsl
and
addl
inc
shll
repz
out
enter
mov
mov
jmp
lea
mov
icebp
add
pushf
bnd
clc
adc
cld
mov
xchg
push
sub
or
cmp
add
sti
add
std
out
cmp
push
je
or
cwtl
stc
push
and
iret
loopne
fisubrl
and
fistpll
sbb
fdivl
out
loope
sub
push
outsb
pop
mov
pop
loope
movsb
mov
rcrb
xlat
loop
bound
cld
stc
js
addr16
adc
mov
dec
ret
sub
mov
cltd
mov
stos
sub
sub
cmp
and
aaa
mov
imul
mov
sbb
inc
push
jp
ja
iret
fwait
out
cs
jns
inc
jge
adc
out
push
dec
inc
jb
lock
xchg
pop
hlt
dec
andb
negl
insb
inc
sbb
out
or
mov
dec
test
xchg
mov
mov
ds
push
stc
repnz
xor
cmpl
sti
out
insb
out
ret
sbb
test
lea
pushf
sbbl
jae
cmpsb
imul
add
imul
xor
pop
cmp
pusha
scas
mov
jl
push
cltd
pop
loopne
pop
sub
cmp
arpl
add
stc
sub
sbb
xor
adc
sahf
inc
inc
dec
sbb
in
cmc
movsl
cltd
pop
pop
ret
add
adc
pop
popa
into
int
dec
xor
adc
iret
out
into
jb
sub
in
cwtl
sarb
cmpl
outsl
add
or
fscale
push
cmp
ret
mov
clc
push
xorps
aad
jno
outsl
movsl
rorl
sub
inc
push
and
and
add
pop
divl
leave
shll
loop
xorl
mov
lcall
cmp
xchg
push
xchg
sub
push
lcall
push
xchg
jne
mov
mov
jl
fsubl
roll
mov
cmp
aam
popa
adc
mov
xor
movsl
jb
fwait
adc
jae
shl
or
xor
scas
mov
jbe
mov
xor
les
sub
cmp
push
add
add
stos
out
out
insl
ret
icebp
inc
push
insb
push
xchg
addr16
sub
or
lret
inc
or
rorl
aad
dec
out
adc
push
push
lds
sarl
aas
pusha
jnp
and
and
xchg
cltd
lods
xor
leave
mov
jmp
lret
pop
xchg
and
repnz
mov
cmpsb
jbe
cmpsb
icebp
xchg
xchg
mov
test
xorl
push
or
jmp
jbe
and
mov
jno
lock
sbb
push
sti
inc
lods
push
divb
lea
add
repnz
stc
cmc
mov
xor
mov
mov
push
mov
cmp
sub
cs
test
outsb
in
xor
dec
lods
test
cmp
add
lret
push
cmp
movsb
pop
xchg
in
jne
pop
jno
xchg
and
insb
daa
jge
push
push
mov
jl
mov
cmp
inc
mov
loopne
imulb
es
push
dec
or
inc
inc
xor
inc
arpl
rcr
je
ja
loopne
fwait
xchg
aas
hlt
mov
arpl
adc
out
and
repz
ss
fisttpl
movsb
mulb
cs
xor
xor
mov
inc
hlt
push
fdivrl
or
js
stc
jg
cld
pop
aam
addb
cltd
pop
xchg
les
jne
or
push
xchg
mov
sbb
daa
loope
ss
mul
lock
cmp
inc
cmp
data16
mov
or
add
xor
jb
sarl
inc
loope
stos
sti
xchg
dec
scas
call
out
arpl
inc
and
add
push
push
bts
scas
cmpsl
pop
outsb
mov
ret
inc
fidivrs
les
and
iret
add
sub
fsubrp
mov
or
push
movsb
bnd
xchg
pop
dec
cwtl
xchg
sbbb
push
mov
mov
and
and
aas
or
repnz
adc
out
push
xchg
into
xchg
mov
adcb
sub
inc
pushf
mov
sbb
jmp
call
xchg
jmp
out
arpl
mov
iret
in
sub
add
push
pop
cmp
hlt
in
imul
jb
movl
outsl
mov
cmc
repnz
aas
xor
out
mul
mov
sbb
inc
rorl
fdivrl
and
adc
add
lods
scas
mov
in
frstor
xor
pop
lahf
push
in
push
mov
or
ljmp
pop
repz
out
mov
lea
inc
aas
dec
mov
add
pop
outsl
push
mov
clc
ds
test
xor
lds
inc
ja
stos
push
lock
xorl
fwait
push
decl
ja
inc
lock
aam
aad
or
push
xor
push
xchg
jnp
add
cwtl
sub
dec
xchg
dec
movsl
mov
ret
mov
xor
jl
mov
jmp
adc
inc
jge
mov
rolb
sub
icebp
outsb
cmp
lock
mov
int3
add
imul
movsl
repz
xchg
sbbb
adc
call
push
mov
mov
popf
aam
mov
and
push
mov
lods
cmp
xchg
repz
scas
jmp
cmp
mov
dec
jne
popf
adc
inc
xor
stos
cmpsl
add
xor
aas
repz
xor
cltd
and
mov
push
mov
adc
sub
inc
sub
ja
jl
scas
sbb
and
test
sbb
sub
add
lret
shrb
icebp
dec
push
idivb
cmpsb
push
xchg
pop
rcrb
adc
lds
xor
mov
and
cli
inc
push
push
xchg
cmc
jge
xlat
sbb
lods
fidivl
mov
xchg
cli
push
inc
leave
xor
in
outsl
call
lods
int
loopne
push
insl
popa
sbb
in
pop
and
int
lock
out
add
testb
pop
arpl
fimuls
push
stos
lahf
mov
fstpt
or
mov
adc
mov
mov
test
push
and
jb
fdivr
mov
push
fs
pusha
fmull
mov
xchg
fstpt
push
mov
adcb
mov
ret
dec
mulb
jns
dec
outsl
movsl
outsl
xor
ja
daa
mov
adc
pop
mov
add
addb
xchg
sbb
icebp
xchg
sub
xchg
cmc
mov
pop
mov
cmpsl
int
mov
push
mov
xchg
cs
sub
pop
pop
add
mov
or
test
or
shlb
push
cmp
push
fistpl
scas
lret
sbb
lret
sbb
jns
xlat
data16
jmp
out
ja
mov
xchg
or
lock
ret
sub
imul
dec
popa
frstor
mov
push
adc
cmp
out
int
add
pop
mov
into
imul
test
cli
mov
mov
cmc
cmp
push
out
jno
les
pop
jl
or
int
xlat
jp
imul
imul
rcrb
or
mov
int3
aam
scas
xchg
or
testb
out
and
push
push
cmp
jecxz
insl
aas
imul
push
jg
in
cmp
insb
sub
mov
sarb
push
cwtl
pusha
jle
xchg
inc
cmp
jle
mov
cmp
push
adc
bound
loopne
push
pop
jno
mov
ss
sbbl
add
les
sub
dec
arpl
iret
push
mov
movsb
pop
push
in
sub
or
fildl
and
aad
aad
push
xor
fsubs
adc
sub
decl
mov
test
cmp
sbb
or
js
adc
dec
cmc
pop
or
nopl
mov
pop
ljmp
sub
int3
jg
test
daa
movsb
cmpsb
stc
add
mov
dec
cmp
mov
push
lock
rorl
inc
repz
nop
mov
in
rcr
rcl
cmp
cmp
jae
sub
pop
mov
mov
outsb
ret
inc
cmc
jnp
xchg
adc
inc
sub
sahf
test
push
stos
jns
mov
movq
dec
or
pushf
scas
popa
inc
or
dec
outsb
stc
or
fbstp
inc
adc
je
xlat
mov
mov
mov
sub
std
push
lock
xlat
cmp
cmp
loopne
pop
add
rorb
xchg
inc
push
decl
fdivs
pavgb
fsubr
icebp
test
dec
push
arpl
leave
cmp
aad
call
fs
loop
out
mov
dec
adc
mov
push
in
mov
stos
pop
cs
ja
not
call
push
pushf
out
cmp
incl
mov
adc
or
shlb
or
lea
jns
inc
mov
ja
std
into
mov
cmpl
and
loopne
mov
loope
stos
cmp
push
rcr
pop
and
or
and
dec
js
cld
pusha
add
mov
iret
int
inc
dec
jb
push
fdivl
inc
ss
push
push
rol
es
mov
ss
cltd
or
xorb
orb
sub
jge
pop
and
adc
xchg
sub
sti
add
into
jne
push
push
xor
test
xchg
cmp
mov
ss
scas
xchg
out
or
lcall
in
push
outsb
jne
mov
lods
add
adc
mov
dec
push
jp
mov
xchg
je
neg
das
push
and
cltd
push
jp
jmp
adc
xor
loop
xchg
xor
sbb
inc
ret
cwtl
sub
enter
scas
arpl
pop
jecxz
cvtps2pi
loopne
add
je
out
lea
push
outsl
lock
subb
addr16
mov
pop
rcll
test
adc
lret
add
or
xlat
out
cwtl
push
pop
je
loop
xchg
cld
movsb
insb
repz
sbb
xchg
push
int3
push
ljmp
cwtl
pop
xor
mov
dec
in
fs
xor
imul
xchg
mov
jnp
mov
hlt
sahf
jl
mov
push
data16
mov
insl
lea
cmpsl
push
sub
xor
repnz
jno
xchg
pop
mov
stc
mov
cmp
pop
xchg
cld
jle
popf
ret
xchg
adc
lock
cmpsb
sub
cli
xchg
pop
arpl
and
sub
movsb
push
jl
hlt
xchg
mov
xchg
in
enter
mov
cld
or
aas
scas
sbbb
and
cli
push
sahf
fs
mov
sarl
icebp
dec
cmp
addr16
jnp
mov
jecxz
and
or
cmp
push
mov
jne
xchg
dec
push
or
es
fnstenv
ss
mov
sbb
fcmovu
repz
lcall
or
jmp
dec
mov
in
mov
add
push
sub
add
pop
adc
xchg
add
decl
mov
dec
sub
pop
mov
out
cmc
sbb
icebp
pop
dec
pop
adc
dec
lret
nop
pop
lcall
fs
sbb
lret
dec
push
pop
outsb
div
xchg
sub
shlb
out
jae
in
xor
xchg
adc
pop
sub
sahf
mov
mov
xchg
jl
jmp
xor
jae
jp
push
lret
push
cltd
in
pop
add
ds
mov
ss
add
pause
jg
insl
test
mov
xor
xor
dec
jmp
mov
ds
or
iret
movl
cli
mov
std
sahf
loopne
negb
add
adcl
enter
outsb
popf
xor
rclb
out
aad
sub
repz
jl
pop
cmpsl
in
or
pop
mov
int
imul
jg
pop
loop
or
outsb
daa
je
fstp
iret
dec
arpl
jb
jo
ret
fs
xchg
sbb
mov
xchg
out
add
sahf
add
add
das
mov
or
sub
ja
push
loopne
add
arpl
dec
xchg
lock
inc
in
popa
test
loope
push
cmp
orb
pusha
jo
ret
jmp
adc
ja
or
push
pop
jnp
loop
add
pushf
stos
push
out
pop
and
add
out
and
or
popf
pop
lods
out
push
popa
pushf
adcb
push
aas
push
push
and
xchg
outsb
ret
push
jge
adc
and
dec
sub
add
ljmp
aaa
shlb
std
push
mov
or
cmpsb
push
ds
dec
add
in
pop
or
jmp
inc
movsl
sbb
sbb
fidivs
cltd
xor
pop
add
out
pop
popf
jmp
sbb
jge
pushl
pop
push
push
lea
dec
cmp
mov
cwtl
jmp
xchg
adc
fistpl
loopne
in
ja
add
out
sbb
sbb
adc
sti
mov
test
lahf
cmp
cmpl
or
aam
clc
out
cmp
mov
mov
push
pop
shrl
adc
imul
fldt
das
cmp
mov
je
clc
cmpsl
je
sub
jbe
mov
xor
dec
sahf
pusha
dec
mov
enter
push
mov
and
in
cmpsb
cld
dec
stc
fsts
out
outsb
pop
out
add
xorb
xchg
and
outsl
xor
fucomi
ljmp
inc
sahf
cld
push
sub
insb
imul
fsubs
mov
mov
push
mov
jb
ja
aam
cmpsl
xorb
jno
imul
int3
sub
and
push
ror
adc
cmp
call
mov
mov
cli
and
lds
inc
jnp
lcall
xlat
cmpsl
adc
das
out
int3
aam
sbb
cwtl
out
call
lods
xlat
test
icebp
xor
mov
jge
in
das
jg
fcmovb
aad
mov
fcompl
xor
sub
test
popf
cltd
push
mov
cmp
jb
inc
loop
adc
xchg
mov
mov
imul
mov
or
stc
and
out
dec
popf
cltd
jmp
movsl
imul
sti
mov
int3
xchg
mov
xchg
fistps
outsl
int
or
sub
lds
fs
add
lahf
add
jmp
push
mul
jne
lret
movsb
gs
mov
out
mov
adcb
mov
mov
pop
sbb
lods
xchg
andl
inc
out
inc
faddl
rdpmc
popa
shll
not
dec
cli
pushf
filds
xor
lahf
mov
insb
and
pop
or
mov
sbb
add
add
xchg
cmp
jle
sbb
jmp
andl
xor
mov
cmp
sub
inc
jp
call
xor
loop
fldpi
fs
stos
lret
cmp
fisttpl
test
xchg
and
les
jne
xor
int3
in
mov
and
fmuls
ror
mov
stos
insl
jge
cmpsl
lea
lock
test
sbb
inc
movsl
into
dec
mov
push
mov
cmp
sahf
xchg
outsb
lahf
push
pop
shl
lret
in
dec
add
jbe
add
adc
scas
scas
sub
pop
test
mov
mov
jo
push
sub
push
or
xlat
xchg
in
shlb
popa
xor
mov
cld
lds
push
adc
aaa
sbb
sarb
dec
and
ss
push
push
sub
hlt
sbb
jp
cmp
les
std
inc
loop
popf
or
call
sbb
mov
xor
or
dec
cmp
mov
xchg
outsl
mov
lock
mov
es
test
stos
std
add
cwtl
mov
add
in
mov
orb
pop
mov
xor
sbb
rol
scas
and
push
loop
inc
sub
aam
mov
adc
ret
inc
outsb
shr
pop
jle
cmp
test
lret
push
movsb
loopne
pop
sbb
and
xchg
and
scas
and
add
aad
or
push
inc
push
inc
out
sub
adc
leave
adc
dec
mov
mov
mov
std
dec
stos
out
xchg
ret
lret
mov
int
cwtl
int
into
in
cmp
lret
loopne
icebp
flds
cld
fldl
lahf
stos
xchg
and
lods
inc
inc
fcmovu
inc
sub
adc
pop
pushf
xchg
cmpsl
sbb
mov
adc
adc
sub
pop
inc
cli
push
lock
data16
xchg
es
pop
fisttpll
adc
andl
jge
mov
ret
xor
push
cmpsb
jp
mov
mov
jge
jne
int
popf
adc
in
rol
push
lret
popf
jb
bound
jne
lods
fwait
dec
dec
je
and
fidivrl
mov
out
lds
xor
push
out
es
test
repnz
test
dec
repz
inc
sbb
dec
xchg
aaa
push
ja
popl
movsl
icebp
js
xchg
andl
imul
and
add
clc
sti
jnp
jns
push
hlt
lret
jb
in
test
ficoms
scas
mov
push
sbb
rorl
inc
sub
mov
mov
mov
cmp
mov
add
mov
jp
mov
jb
pop
imul
mov
scas
fsubrs
adc
pop
pop
xchg
imul
ret
jge
jp
mov
mov
mov
cmc
adc
sbb
xchg
jne
mov
pusha
lods
or
rcr
adc
push
negl
out
mov
xor
call
dec
mov
mov
ja
inc
or
cmp
sti
jmp
js
addb
test
mov
pop
jmp
adcb
inc
mov
cmp
or
test
mov
insl
popf
lret
mov
ja
ret
jl
cmpsl
jge
and
enter
push
xchg
mov
leave
push
rcr
xor
push
xor
inc
jg
mov
je
mov
mov
fwait
add
add
xchg
jl
pop
push
aas
out
fisubrl
jp
inc
cmp
and
cmc
out
test
rcrb
out
push
out
cmp
movsl
sbb
mov
into
insl
clc
add
mov
gs
jne
cli
pop
sbb
push
mov
clc
add
push
lods
mov
subb
out
lret
sub
aad
das
jl
jne
ljmp
popf
call
mov
int
ljmp
testb
cmp
sub
push
rcll
std
mov
loopne
cmp
adc
enter
jp
push
mov
aas
cmc
lcall
insb
ret
cmp
shr
lock
jno
addl
mov
dec
push
push
cmp
mov
jno
leave
push
mov
insl
fnsave
mov
sub
imul
rcl
rolb
outsb
pop
call
dec
sbb
push
fadds
lcall
sub
mov
pop
ret
in
xchg
imul
data16
mov
fldl
push
jb
mov
aas
or
fwait
add
sbb
push
push
xor
mov
adc
scas
pop
xchg
jle
shlb
mov
sbb
fsubrl
xchg
mov
dec
or
sbb
pop
stc
push
fimull
cld
ret
cmp
sahf
jmp
int
fcomp
pop
repnz
pop
mov
sbb
ficoms
xchg
movsl
cmpsl
cmc
mov
int3
sub
outsl
test
mov
pop
fisubrs
fst
pop
and
sbb
mov
xchg
addl
push
xor
mov
lods
and
sub
sbb
or
jmp
fldl
aad
jl
in
stos
and
sub
jo
aaa
in
mov
or
ret
dec
je
gs
xchg
push
dec
ljmp
cmpsb
xchg
nop
loop
mov
out
jge
popa
ja
cmpsb
mov
sti
js
scas
mov
or
mov
inc
insb
sub
cmp
add
stos
int3
push
data16
xchg
sub
popf
mov
mov
sbb
mov
sbb
add
shlb
mov
clc
push
lock
adc
loope
imul
roll
movsb
sub
xchg
pop
mov
lods
mov
cmpsb
ja
repz
test
xor
pop
sarl
addr16
mov
lods
out
outsb
mov
mov
popa
push
dec
int
mov
adc
jecxz
rcr
leave
icebp
shld
pop
mov
mov
mov
mov
sahf
dec
sub
loopne
cmp
ret
movq
or
lret
fisttpl
mov
push
xorl
xchg
std
aam
hlt
pop
ret
jge
mov
sub
fs
jae
outsl
mov
add
jecxz
cmp
cs
mov
out
fistpll
push
sub
fnstsw
cmp
shlb
in
fldz
mov
icebp
sahf
mov
xor
jecxz
mov
out
js
xchg
add
sub
push
fsubrs
and
jo
jno
ss
call
loop
sub
push
mov
push
in
fldenv
arpl
cmp
dec
mov
dec
lahf
cmpsl
adc
jae
int3
xor
inc
call
xorl
iret
pusha
pop
cmp
xchg
rcrl
lods
rolb
rcll
push
xchg
cs
jne
mov
icebp
dec
push
mov
xor
jae
pusha
mov
sub
xchg
adc
aad
push
ds
xchg
mov
mov
mov
sub
mov
and
sbb
lea
ss
cmp
mov
xor
in
imul
push
jg
jp
cli
push
mov
xor
jnp
mov
out
out
push
push
sub
cwtl
mov
cmpsb
subb
in
movsb
mov
inc
xor
cmp
shlb
ret
movsb
and
rclb
jl
cld
mov
movsb
mov
fldl
add
inc
andl
and
mov
push
cmp
jae
adc
push
cmc
sbb
cmp
imul
xor
jns
aas
pop
or
dec
xchg
out
jns
mov
idiv
and
test
xor
sbb
mov
dec
sub
add
pop
iret
dec
push
xlat
lahf
xchg
jecxz
push
ljmp
inc
mov
jecxz
and
add
adc
sub
sbb
cmp
inc
xchg
sbb
mov
adc
sbb
cli
mov
sub
push
xor
lods
xor
mov
pushf
outsl
hlt
clc
mov
adc
imul
sub
sbb
test
lret
jns
jo
testl
mov
loope
loopne
imul
jp
push
js
add
push
addr16
in
mov
sarb
mov
mov
xor
mov
sub
cld
cld
ret
mov
sub
rcrl
push
shrl
mov
imul
jns
xchg
sub
mov
and
and
dec
sbb
add
rcll
repz
or
je
ds
cmpsl
dec
inc
test
insb
ret
shl
cli
cmp
jmp
icebp
stc
mov
xlat
inc
lods
outsl
jne
push
cltd
addl
adc
add
xor
push
loopne
jle
pop
sbb
mov
addr16
pop
cmp
js
add
cmp
pop
jbe
cli
sahf
out
push
cmp
movl
out
outsl
shr
push
pop
xor
inc
pop
dec
or
ret
mov
adc
das
xlat
and
lods
pop
and
clc
iret
xor
cmpsb
mov
or
stos
aas
rolb
push
sub
icebp
inc
out
stc
decl
xchg
aam
test
mov
mov
xchg
add
sub
cld
dec
and
pop
sbb
dec
in
outsl
enter
mov
fdivl
push
es
test
mov
xchg
inc
loopne
xchg
cld
push
lahf
in
cs
dec
xor
loopne
dec
imul
mov
and
test
xchg
loopne
repz
stos
stos
data16
mov
bound
jb
int3
cld
push
daa
pop
sbb
inc
test
lods
jne
movsb
les
mov
xchg
leave
icebp
pop
mov
arpl
stc
test
adc
hlt
jle
aas
dec
sti
neg
or
xchg
sbb
xchg
xchg
jmp
mov
sbb
dec
sub
jns
jmp
pop
sub
adc
cmp
push
imul
xchg
sub
mov
inc
je
lret
dec
into
and
pop
xchg
lea
jae
orb
jns
cmpb
push
gs
mov
mov
out
xlat
in
movsl
data16
mov
jl
cmp
mov
fcoml
clc
jp
adc
aaa
xchg
xchg
ret
cltd
sbb
shll
popf
fdivrl
imulb
cmp
push
fisubs
test
popa
push
insl
inc
sub
push
sub
dec
jp
xchg
addl
adc
sbb
jbe
and
jge
xchg
mov
sub
xor
ds
mov
int
arpl
inc
cmp
xlat
in
jmp
ljmp
xchg
addr16
enter
mov
or
sbb
inc
mov
in
repz
push
cli
cmp
adc
xor
lcall
xchg
in
mov
pushf
add
mov
xorl
xchg
inc
or
pop
xor
push
scas
mov
and
sti
xchg
pushf
xchg
addr16
fsubrl
xor
test
cmp
xor
sti
push
pop
add
clc
push
pop
enter
push
sbb
cltd
xor
in
or
pusha
test
inc
adc
push
sub
aad
clc
cmp
push
jl
lods
mov
out
mov
loope
add
xor
mov
mov
ficompl
jne
mov
out
mov
add
rclb
mov
sub
mov
fdiv
stc
shr
push
dec
jl
dec
imul
lahf
stos
push
add
test
data16
push
lea
lea
loop
scas
mov
mov
cld
lcall
in
mov
mov
call
enter
scas
inc
and
push
mov
stos
pop
imul
data16
push
and
cmpsl
outsb
sub
sbb
testb
lcall
loopne
add
cmp
cs
mov
inc
cmp
lret
pop
pushf
xchg
inc
stos
pusha
loope
push
movsl
mov
je
push
xchg
inc
call
das
push
ds
jge
repz
mov
sahf
pop
sub
inc
out
pop
push
or
push
hlt
cmp
push
mov
orb
shll
adc
jp
add
enter
sbb
mov
divb
push
inc
into
ret
aam
pop
repnz
sbb
pop
das
jecxz
add
bound
rcl
cltd
jo
jnp
xor
xchg
mov
mov
fsubrp
and
out
lock
aas
loop
decb
sahf
xor
sahf
sub
pusha
inc
enter
dec
cmp
lret
sti
mov
sbbb
insl
mov
cs
cmp
negb
scas
dec
xchg
dec
dec
mov
push
out
ljmp
jae
inc
mov
pop
cmp
xchg
or
xchg
sbb
out
shl
xchg
mov
nop
and
jp
repnz
add
cmc
outsb
add
aas
adc
insb
sbbb
icebp
aas
jle
notb
test
mov
add
cmp
pop
add
or
and
cs
cmp
cmp
out
mov
jnp
inc
neg
pop
push
dec
lea
xor
jge
sbb
fninit
jl
fsubrl
je
push
xorl
add
dec
and
push
js
xchg
bt
and
out
mov
sub
xchg
out
add
mov
jmp
push
push
rorb
mov
fistps
cwtl
xor
nop
bts
mov
int3
hlt
mov
xchg
mov
lret
aad
cld
dec
or
sub
push
das
dec
dec
xchg
lret
rolb
sbb
ss
mov
mov
jg
fldl
cltd
shrb
imulb
mov
push
or
loop
or
sub
les
test
adc
mov
mov
adc
mov
push
jl
in
int
roll
mov
leave
cli
stc
pop
xor
arpl
out
pcmpeqd
jmp
pop
xchg
sbb
test
loop
and
arpl
jno
popf
out
pushf
jg
push
aad
xchg
aaa
dec
in
ficoml
stos
fcomi
and
pop
dec
push
or
stos
jp
loope
ficompl
mov
mov
aas
enter
mov
cli
jmp
jle
mov
adc
xchg
jge
out
mov
das
mov
repnz
inc
mov
and
push
and
cmp
sbb
sbb
out
lods
shrl
cld
push
xchg
and
inc
mov
in
sub
stos
mov
cli
inc
addr16
mov
rcr
cltd
adc
dec
fisttpl
and
movsl
sub
jb
movsb
ret
pop
cmp
cs
pushf
inc
cmp
loop
sbb
pop
pop
xlat
ljmp
jne
test
ds
dec
xchg
and
out
xchg
pop
fisubl
arpl
cli
jp
jecxz
lds
jmp
ljmp
dec
in
xor
mov
sbb
pushf
jg
or
cmp
mov
imul
cmp
insb
jns
pop
push
pop
add
mov
incl
in
rcrl
out
and
adc
jg
push
imul
inc
andl
pushf
sub
leave
xchg
les
test
fdiv
push
std
or
ds
les
iret
push
jmp
xchg
or
cmpb
jbe
in
sub
or
stc
cmc
pop
cs
inc
mov
repz
push
mov
sbb
call
ds
sarb
cmp
dec
mov
cmp
loop
sub
notl
out
mov
or
insb
inc
mov
into
mov
repz
clc
test
cmpsb
inc
mov
out
mov
stos
xchg
push
pop
cwtl
mov
inc
fisttpl
test
mov
inc
test
dec
or
mov
xchg
daa
hlt
lcall
mov
mov
push
lea
dec
cltd
mov
xchg
dec
mov
std
test
push
inc
fdivrl
idivl
data16
fldln2
cmpb
or
out
mov
mov
outsl
cmp
jmp
adc
add
lock
jg
xor
jno
shll
mov
or
push
lods
cmpsb
inc
jo
cltd
cmp
icebp
aam
xchg
dec
or
cmpsb
mov
dec
lret
pop
hlt
push
sub
sub
adc
testb
pop
inc
fldenv
jmp
cmp
lcall
push
sub
repz
icebp
popf
repz
cmp
out
sub
flds
pop
adc
or
mov
dec
in
mov
stos
les
adc
data16
dec
add
cmp
mov
lods
pop
shr
lods
mov
or
fsub
scas
stos
sub
lret
js
lahf
xor
out
adc
xchg
std
xchg
pushf
and
xlat
push
lret
shl
jecxz
icebp
or
mov
scas
popa
aaa
jle
fs
mov
test
addb
mov
mov
loop
sub
inc
cmpsl
jle
lret
dec
xlat
mov
int
pushf
pop
mov
es
jb
in
pop
push
xor
jno
cmp
lock
add
sbb
addr16
rclb
test
fstpl
mov
mov
xchg
lds
xchg
rol
jmp
or
scas
jge
jae
or
ret
jb
inc
pop
stos
lods
jmp
add
mov
ja
ror
and
inc
and
scas
adc
jb
pop
dec
iret
jae
pop
ja
stos
adc
add
nop
and
mov
fildll
xchg
inc
push
notl
dec
push
jno
loop
rdmsr
add
aas
ljmp
push
sbb
lds
rcr
das
sbb
mov
test
shll
inc
notb
and
xchg
add
int
outsb
fdivrl
mov
push
add
lcall
adc
aam
lret
outsb
in
mov
or
rol
cs
scas
or
das
shlb
sbb
repnz
xchg
mov
xchg
cmpsl
in
sub
inc
push
mov
testb
pushf
pop
push
fnstsw
in
add
shll
or
mov
lea
out
inc
lods
ficoms
sbb
push
and
sub
sbb
cli
jecxz
icebp
ret
jge
push
pushf
cmpsb
push
xchg
mov
jo
stc
pushf
pusha
ficomps
movsb
or
lods
mov
mov
cmpps
or
data16
xor
jo
std
jge
ficomps
inc
sbb
xchg
push
jnp
rcll
sbb
inc
and
lahf
jbe
jge
js
and
pop
scas
hlt
or
nop
pop
jno
pop
xlat
push
xor
xor
sub
mov
daa
adc
loopne
mov
nop
jns
or
fsubrl
pushw
adc
mov
pop
push
jnp
std
insl
or
nop
lcall
cmp
mov
cmpsb
roll
jne
rcl
dec
out
fidivrs
popf
test
mov
xchg
sbb
mov
out
mov
scas
xor
je
xchg
clc
rcrl
es
imul
cmpsb
fwait
mov
and
popf
sbb
and
cwtl
nop
fs
cli
loopne
int
in
add
cld
add
sbb
pushf
stos
int3
mov
imulb
push
adc
outsl
imul
ja
jae
rorl
lods
jmp
or
mov
sub
push
mov
mov
pop
lock
popa
test
js
fidivl
push
jno
mov
mov
movsb
mov
out
add
out
fcmovnbe
cmc
fdivs
dec
pop
mov
and
or
mov
jg
fstl
xlat
cmp
jge
orl
in
cmp
mov
sbb
test
aaa
test
xlat
divl
mov
xchg
inc
push
lea
fisubs
jnp
out
mov
sub
aad
out
mov
mov
fldl
cli
jb
inc
pusha
scas
loop
cmp
addb
in
or
push
xor
adc
cmp
inc
int
sub
pop
xchg
add
add
sub
mov
xor
stc
nop
sub
loop
dec
xchg
sbb
push
mov
inc
ret
aam
fwait
mov
push
imul
jge
aam
repnz
or
imul
fs
pop
sahf
shll
inc
dec
xlat
mov
jg
dec
pop
rcrl
out
out
aam
mov
dec
insl
ja
cwtl
mov
xor
cmp
shr
pop
sub
inc
lds
fmull
insb
cmp
inc
fstl
mov
test
fwait
jl
lcall
adc
fldt
test
aas
fidivs
push
ret
mov
test
pop
sbb
pavgb
aas
jmp
mov
and
data16
jl
leave
and
repz
or
cmp
in
cmp
mov
insl
pop
sti
dec
decb
adc
xchg
adc
fdiv
xchg
cmpsl
push
aam
push
and
cs
cmp
mov
mov
xchg
loopne
in
loop
mov
loope
pusha
outsl
call
push
das
jmp
sarb
mov
mov
or
data16
fsts
jns
fildl
mov
sub
test
mov
jl
mov
inc
xchg
xchg
pop
daa
fdivr
sahf
add
dec
jb
or
outsb
outsb
mov
sbb
push
inc
fdivrs
fadds
inc
in
rolb
mov
into
call
mov
pop
jl
jmp
in
hlt
sub
xor
cmp
icebp
flds
in
xchg
add
dec
outsl
insl
inc
imul
movsl
lds
sbb
daa
fnsave
lret
dec
cmpsb
stc
loopne
test
inc
into
xor
les
mov
repnz
inc
mov
pop
jecxz
inc
int3
mov
add
sub
sub
aas
mov
aad
in
push
mov
push
sbb
adc
jbe
test
or
adc
jp
std
add
or
aam
cmc
test
movsb
mov
xchg
xchg
sbb
push
ljmp
mov
pushf
pop
imul
push
or
push
ja
sub
add
loope
pop
jnp
pusha
aam
scas
dec
xchg
shrb
in
xchg
cmp
fwait
adc
ret
dec
add
push
mov
arpl
gs
cld
outsb
ss
insb
push
sbb
push
je
xor
fsubrs
dec
sbb
inc
add
mull
lret
cmp
dec
and
sub
in
sarb
es
pop
aam
sub
cmpsl
out
popa
fiadds
and
push
add
lret
push
hlt
inc
xor
addr16
cli
inc
outsl
jne
imul
fidivrl
psrlw
mov
repz
push
xor
test
loope
add
cmp
xor
mov
add
leave
ds
sbb
pushf
outsb
pop
mov
fiadds
ds
int
jae
adc
adc
ret
ljmp
lahf
add
push
data16
insb
pop
push
xor
shrb
dec
fcmovnb
insl
inc
sub
and
xchg
xchg
out
and
scas
lds
push
repnz
popa
sarl
jbe
dec
jg
cld
jecxz
mov
cltd
andl
sub
mov
push
dec
cmp
xchg
lds
aaa
mov
mov
xor
push
lea
enter
fnstcw
test
mov
jno
fbld
sbb
xor
cmpsl
andl
popf
jbe
dec
mov
test
mov
in
shlb
xrelease
lods
pushl
adc
call
stos
stc
test
icebp
rcrl
xchg
test
mov
fisubrl
cltd
out
adc
mov
sbb
ljmp
xchg
mov
aad
mov
inc
imul
rcll
jne
clc
out
icebp
roll
loopne
ret
and
jmp
jl
stos
mov
sbb
and
inc
xor
adc
mov
ds
movsb
mov
adc
data16
adc
cmp
mov
push
ja
jne
push
cld
das
xchg
jnp
sub
in
pop
leave
add
sbb
pop
fisttpll
xchg
lods
movsl
into
sahf
dec
sbbb
les
push
adc
cmc
je
daa
in
ret
mov
inc
cmp
jno
mov
sub
pop
icebp
nop
cmp
scas
xchg
out
sub
sahf
ss
xor
xor
repz
inc
je
mov
sahf
les
add
or
lahf
imul
enter
or
in
data16
cmp
enter
sub
pop
lock
mov
sbb
fisubrs
stos
dec
movsb
xchg
sbbl
mov
std
mov
xchg
sub
and
jne
inc
lret
inc
lods
popf
lock
push
pop
enter
lock
push
dec
rclb
and
inc
lret
out
in
push
sbb
rcrl
cmp
cli
or
popf
jl
insl
in
lods
aaa
inc
add
mov
pop
jmp
cmp
mov
test
loop
xchg
icebp
aam
adc
pusha
xor
sbbb
jmp
stc
dec
xlat
xchg
add
sar
insl
adc
repnz
cmp
jecxz
xchg
adc
aam
ficoms
xchg
les
sub
sub
aam
fstl
inc
in
mov
out
push
hlt
ljmp
loope
movsl
mov
mov
icebp
std
sub
fidivrs
xchg
mov
fnstenv
push
popf
rcrl
mov
stos
cli
and
xchg
imul
add
mov
sub
fimuls
mov
push
pushf
jl
add
shll
dec
cs
jecxz
adcb
mov
mov
inc
inc
iret
mov
int
sbb
jp
es
lods
jne
rcrl
lret
cmp
push
adc
cmpsb
dec
dec
aam
std
push
push
adcb
mov
outsl
xchg
jae
arpl
mov
out
or
inc
das
shrl
and
jnp
gs
lahf
iret
pusha
jbe
adc
jp
popl
lock
movsb
hlt
cmc
outsl
lcall
and
lret
cwtl
leave
mov
int
lods
imul
addb
fcmovnbe
and
pop
and
mov
jns
ret
push
mov
pop
mov
mov
push
sbb
pop
addr16
ja
mov
xor
and
shll
push
movsb
xorl
xor
subb
addr16
ret
ljmp
cmp
cld
dec
xchg
pop
jl
gs
in
rcrb
into
xlat
or
lahf
out
xor
roll
sti
out
jecxz
in
or
push
aas
fists
rol
cmpsb
xchg
fsqrt
mov
cmpl
fadds
lods
rol
mov
jb
arpl
sbb
push
out
idivl
jl
pop
lds
cmc
push
xor
unpcklps
cld
jmp
test
subl
nop
lods
rcrb
cmp
dec
pop
gs
xchg
dec
addr16
push
cmp
push
mov
cmp
mov
add
or
fdivrl
adc
push
shrl
adc
int3
repnz
loop
sbb
loope
or
push
gs
xchg
adc
mov
mov
jl
ret
add
ds
fs
mov
mov
mov
pop
popa
jge
nop
mov
clc
setnp
inc
jo
mov
push
fistps
scas
fbld
or
fcoml
jmp
cmp
outsb
imul
ja
hlt
and
ficomps
jmp
jl
xor
out
popa
adc
jmp
ficoms
add
insb
sti
jne
cmp
std
lods
mov
dec
inc
jl
stos
fldenv
fisubrs
in
xor
mov
inc
clc
mov
jg
inc
cmp
xorb
jns
jns
loop
inc
hlt
clc
inc
mov
sbb
and
xor
test
jl
test
sub
mov
popf
sub
mov
push
fisubrl
stos
std
sahf
jo
inc
sahf
mov
inc
cmp
in
xor
xlat
hlt
out
mov
xchg
cmp
mov
dec
pop
xor
sub
pop
sub
add
push
pop
cmp
push
sbb
loopne
jl
enter
mov
scas
sbb
push
inc
xchg
sub
enter
cmp
jnp
xor
xchg
cli
pop
shlb
repz
leave
jne
and
sbb
mov
pop
sbb
ret
and
lahf
sbb
fsub
popa
push
loope
in
mov
jmp
or
subl
pop
jae
lret
mov
inc
pusha
cmpsb
push
iret
lods
sbb
mov
or
dec
outsb
pop
xor
mov
stos
xchg
lock
out
mov
lods
popa
leave
ljmp
jmp
shll
xor
das
lds
push
inc
xchg
arpl
ret
and
or
inc
push
inc
cmp
outsb
cs
cld
lcall
shl
cmp
pop
xchg
call
aas
scas
movsl
jle
push
mov
arpl
or
jle
rclb
std
xor
into
in
sti
add
andl
test
sar
jno
test
aas
lea
out
imul
cs
in
inc
loopne
xchg
xchg
fiadds
adc
jg
dec
neg
shrb
or
mov
call
lret
pop
cmp
push
push
outsb
scas
xchg
dec
cmpb
mov
pushf
rcrb
out
or
inc
mov
popf
bound
xor
sbb
lcall
mov
or
and
sbb
push
jmp
sbb
cmp
xchg
mov
mov
mov
mov
mov
test
cmp
scas
shll
mov
or
xor
xchg
arpl
inc
lahf
iret
push
xchg
push
adc
lahf
sub
xchg
arpl
dec
xchg
dec
sbb
mov
aam
jecxz
nop
inc
cmpsb
les
push
sbb
idivl
pop
sub
mov
fiaddl
xor
lods
add
cwtl
add
and
lret
stc
stc
bound
js
inc
mov
stos
test
adc
pop
pusha
mov
dec
lods
cmp
or
dec
dec
mov
xchg
lock
es
pop
xchg
ficoms
pop
ss
push
mov
push
inc
nop
mov
std
jl
and
xor
test
add
loopne
test
fadds
mov
addr16
and
dec
pop
mov
cmp
mov
lea
leave
loope
mov
add
jns
les
into
mov
cmp
and
arpl
jb
push
sbbl
mov
dec
jo
dec
push
data16
and
adc
adc
jne
dec
mov
mov
lock
popa
repz
cmp
mov
fldcw
xor
pushf
aam
test
scas
cmp
test
fidivrs
push
mov
xor
ret
and
jg
stc
sub
mov
adc
push
pop
nop
mov
pop
cli
and
xchg
xchg
xor
fidivrl
inc
subl
jnp
ret
pop
int
mov
das
mov
call
addr16
pop
sti
arpl
movsb
test
and
aas
aas
mov
or
inc
push
faddl
fmuls
ja
mov
mov
pushf
add
adc
mov
and
mov
daa
dec
cmp
push
mov
xchg
push
sarl
vpunpcklwd
fwait
sbb
adc
mov
loopne
mov
or
dec
je
cli
aad
test
gs
into
hlt
aad
xlat
push
push
inc
or
push
stos
xor
lock
adc
adc
or
movsl
arpl
imul
or
nop
lret
ljmp
cwtl
jnp
insl
scas
lds
xchg
incl
in
stc
and
add
jg
cmpsb
sbb
jp
cmpb
mov
lock
lcall
cmpsb
int
jo
test
scas
je
and
movsl
or
cltd
cs
outsl
xor
cmp
or
xchg
shlb
cmp
fnstenv
add
adc
xor
das
cld
cwtl
push
dec
dec
scas
fwait
sbb
jae
test
cmp
mov
ror
leave
xchg
mov
sti
lcall
shl
lds
adc
mov
xchg
popa
mov
and
adc
push
cli
or
test
mov
adc
and
popa
rorb
push
scas
sbb
xor
jb
out
cmp
sbb
loop
push
jecxz
dec
inc
or
insl
je
aaa
or
rolb
or
fiaddl
dec
jnp
into
xor
scas
push
inc
dec
sahf
js
or
int
in
out
addr16
bound
cmp
mov
cmp
xchg
out
lods
push
outsl
and
xchg
cwtl
stc
mov
scas
lahf
xchg
mov
xorl
cmp
shrl
sub
xchg
mov
into
test
jge
ljmp
mov
daa
shll
mov
and
cli
lcall
loope
cmp
mov
or
add
adc
std
lds
cmp
xor
xchg
pop
aas
int
inc
push
pusha
cmp
lahf
shlb
xchg
pop
test
ret
lods
or
sbb
es
adcb
insl
imul
sub
cvtps2pd
mov
rcrl
cmp
mov
jbe
mov
dec
and
loop
aaa
adc
push
out
clc
test
cmpsb
xchg
adc
out
sbb
mov
adc
sub
iret
and
push
push
adcb
jns
rcll
add
cmp
jae
jbe
mov
xchg
popa
fisubrl
sub
pxor
arpl
and
jl,pt
std
shrb
add
rep
adc
adc
loopne
incb
outsw
dec
std
xor
mov
pop
loopne
xchg
adc
cmc
pop
rcll
test
mov
xchg
cltd
outsl
xchg
pop
jae
sbbb
xlat
adc
inc
outsl
cmpb
mov
test
push
adc
aad
dec
push
add
movsl
pop
push
ret
sbb
lea
adc
mov
push
imull
dec
movsl
cmp
inc
cmp
mov
call
shll
in
inc
mov
std
xor
out
fildll
sti
ss
sbbb
and
in
inc
mov
sub
imull
test
cmpb
push
lret
aam
push
cmc
pushf
das
or
pop
mov
ret
inc
daa
fbld
cltd
xor
push
jl
xchg
lcall
aad
outsb
mov
rclb
stos
jnp
xchg
mov
pop
add
jge
sub
subb
adc
adc
test
jbe
sub
addr16
decb
pop
hlt
jecxz
mov
add
call
add
inc
inc
sub
mulb
inc
pushf
das
adc
scas
stc
cmpsl
gs
js
inc
sub
addl
sti
pushf
cmp
jne
mov
adc
cmpb
pop
jmp
lds
jnp
loop
fwait
lret
dec
pop
std
xor
push
push
cmpsl
mov
insb
loopne
lea
push
adc
test
lds
add
inc
or
and
lahf
std
adc
inc
sbb
jbe
xchg
xchg
lahf
xchg
and
test
xlat
in
sbb
add
fdivrs
in
orl
push
xchg
movsb
out
jno
xor
xlat
mov
sub
push
jno
fwait
sub
jg
lds
icebp
outsb
mov
fmuls
xor
loopne
cmp
jp
in
add
ret
sbb
lahf
pop
cmc
jns
pusha
loopne
xor
shll
les
sub
shlb
push
dec
mov
jmp
nop
inc
sti
sbb
jo
mov
les
les
mov
insl
cmp
sub
add
dec
mov
icebp
jno
pop
fists
inc
jb
movsb
punpckhwd
cmp
js
rolb
jae
sub
outsl
hlt
fmuls
xchg
mov
mov
rorl
imul
push
arpl
das
sti
aam
and
dec
pop
cmp
lcall
jno
mov
or
sbb
aaa
sbb
sbb
sub
dec
xor
in
inc
mov
xchg
xchg
mov
int
ror
iret
cmp
bound
lods
in
inc
jbe
lock
xor
insb
fmuls
aaa
inc
sarl
mov
int
enter
push
out
rcr
leave
mov
loop
fs
mov
add
stos
lods
mov
sub
jmp
fbstp
imul
jmp
sbb
fildl
enter
inc
mov
adc
fcomip
dec
rolb
pop
jo
mov
lcall
xchg
mov
addr16
outsb
push
call
or
cmpsl
push
mov
adc
cs
pushl
push
jmp
add
leave
setp
aas
mov
fidivrs
cmpsl
repz
mov
dec
les
jae
push
push
dec
fcoms
mov
jmp
jb
arpl
mov
dec
jbe
adc
in
mov
xchg
xor
jnp
mov
add
imul
test
mov
in
push
sub
enter
loop
jne
adc
mov
stos
sub
mov
pop
nop
andb
icebp
leave
push
add
push
lahf
pop
jmp
fists
add
mov
pop
into
subl
mov
jmp
adc
xchg
mov
sti
fstl
xchg
enter
jno
dec
arpl
add
xchg
pop
call
sbb
pushf
xor
push
int
clc
cli
pop
jmp
inc
pop
out
gs
shl
repnz
mov
es
int
enter
aas
cltd
pusha
pop
xchg
shlb
mov
mov
ficompl
mov
cs
cmpb
aad
cmp
dec
adc
mov
sub
dec
xchg
xchg
and
sub
dec
int3
stos
cmpsl
push
call
jne
popf
mov
push
mov
insl
in
adc
idivl
or
mov
out
mov
lea
inc
or
push
push
clc
pop
pop
push
stos
adc
sbb
out
mov
push
sbb
push
ljmp
dec
push
xor
test
add
data16
lock
int3
arpl
scas
lds
fists
test
dec
push
leave
inc
cmpb
mov
mov
mov
mov
aaa
adc
dec
xchg
out
ret
cs
fsubrp
dec
movsl
push
lds
and
xor
loope
lret
pop
jl
or
xor
jne
enter
sbb
xor
push
push
jecxz
inc
loope
push
movsl
sub
jae
iret
out
pop
ret
adc
or
adc
sbb
lods
je
sub
push
mov
sbb
xchg
jno
mov
sub
adc
pop
sbb
mov
movsl
gs
inc
test
imul
jb
pop
sub
xchg
jp
negl
and
fs
adcb
aas
sub
rorb
or
push
test
test
jnp
ja
push
fcmovbe
insl
xor
inc
rcrl
pop
push
movsb
jo
sbb
lahf
mov
mov
stc
je
and
xchg
rclb
mov
fcoms
cmpsl
fnstsw
push
mov
mov
sahf
xchg
out
xlat
int3
mov
in
push
mov
ret
cmpsl
sbb
lret
or
push
xor
jnp
mov
inc
inc
test
or
cmp
sbb
fistpll
ja
movsl
rcll
rol
mov
inc
movsl
pop
leave
jmp
mov
mov
and
aas
fs
fwait
pop
insb
and
push
jno
and
cmp
clc
inc
rolb
sub
lock
or
jo
icebp
sub
mov
cld
jge
out
xchg
daa
and
push
test
push
xor
mov
or
out
xor
sub
cmp
adc
inc
sbb
sti
es
test
pop
sbb
mov
cmp
out
mov
nop
add
ljmp
xchg
mov
outsl
test
adc
mov
sub
lret
pop
fs
mov
arpl
lcall
pushf
in
xor
ficompl
add
add
mov
or
sub
push
pusha
pop
cli
add
imul
mov
roll
push
sbb
jl
std
nop
inc
xchg
xchg
cmp
xor
push
add
out
sbb
mov
sub
sahf
jmp
nop
lret
adc
out
popf
push
stos
xor
inc
and
jno
push
scas
inc
aas
dec
xchg
repz
stos
cmc
xchg
mov
mov
jae
sbb
xor
fsubrl
and
ja
push
mov
dec
rcll
and
sbb
or
pop
call
inc
hlt
cwtl
icebp
into
jbe
insb
add
pop
xchg
cmp
xor
ret
mov
je
dec
mov
leave
mov
mov
ljmp
in
loop
lahf
lahf
fsubs
mov
fldt
jns
pop
mov
mov
dec
lret
sub
dec
mov
inc
jecxz
push
mov
lods
cld
fwait
adc
adc
dec
jnp
xor
shll
xor
int3
adc
gs
sahf
or
andl
add
push
int3
clc
int3
push
mov
push
rcrl
inc
pop
cmp
out
xchg
sahf
push
and
mov
jl
decl
dec
jnp
pop
cmc
repz
mov
mov
sub
arpl
lcall
jge
daa
sbb
dec
or
int3
and
jno
push
xchg
adc
bound
lock
xor
lea
cmpsb
std
stos
xchg
jns
orl
adc
packsswb
ret
jp
sti
enter
test
mov
push
shr
push
fmul
xchg
push
sbb
mov
push
xchg
adc
les
pop
rcll
and
xchg
xor
jbe
rcll
mov
cltd
mov
inc
mov
sub
or
movsl
and
mov
popa
jo
fcompl
addr16
daa
fnstenv
jne
push
jns
sahf
dec
inc
ficoml
push
or
mov
fs
sti
xor
mov
cmp
outsl
rcl
jl
dec
push
in
dec
add
jmp
add
loopne
call
inc
outsb
iret
pop
adc
enter
push
fnstsw
xor
scas
push
or
shrb
xor
mov
xchg
xchg
and
dec
stos
cmp
aam
shrl
cld
je
sub
inc
addr16
push
insb
add
cmp
fisttps
add
mov
jge
in
idivb
xchg
aas
lock
mov
repnz
lds
fdivr
sbb
dec
ret
jle
decb
outsl
inc
inc
jl
mov
sub
mov
popa
popf
fsts
movsl
pusha
xchg
push
loope
and
ss
jmp
or
xchg
mov
out
mov
lods
imul
and
int3
cltd
and
inc
and
adc
mov
pushf
mov
repz
jl
shrl
js
adc
xchg
addl
gs
cli
mov
adc
sub
or
jo
mov
lock
jmp
repz
inc
mov
xchg
test
mov
pop
incb
jne
push
xchg
lock
mov
fcmovb
jp
pushf
addr16
mov
mov
out
inc
cs
addl
repnz
stc
lods
lock
fstpt
pop
js
mov
push
xchg
jmp
iret
inc
andb
sub
call
clc
movsb
pop
sub
imul
xor
add
mov
aam
outsl
pop
int3
shrl
cltd
imul
lods
mov
and
cwtl
push
iret
push
lea
pop
enter
mov
cs
in
add
cs
push
jb
scas
inc
sub
insl
popl
shlb
pop
pop
movsl
pop
xor
push
or
bound
pop
sbb
jbe
adc
test
xchg
rcr
mov
xlat
lcall
push
fldt
test
in
push
xchg
jb
sahf
inc
lock
sarb
cmp
ret
fwait
push
or
mov
dec
sbb
jae
xchg
mov
movsb
inc
jl
mov
cmpsb
mov
add
daa
pop
leave
out
mov
xor
xor
xchg
dec
xor
jmp
jb
ret
dec
stc
pop
sub
cmp
into
xchg
add
sbb
push
fwait
test
sbb
outsb
imul
sub
mov
loop
addr16
stos
rcrl
rorb
adc
lret
xor
push
es
daa
adc
rorl
gs
stc
push
add
lea
pop
leave
inc
push
jns
lea
cltd
mov
jae
cmp
ret
sti
or
adc
xchg
lods
daa
cmp
push
pop
pop
sbb
dec
mov
push
les
jae
mov
sbb
repz
inc
bsf
and
fsubrs
mov
add
rep
gs
insl
push
jl
or
decl
cmp
cmp
add
inc
insl
or
and
je
mov
popa
loop
subl
cmp
xlat
inc
rcll
mov
pop
stos
aad
lahf
ljmp
mov
jecxz
aam
adc
push
adc
push
add
push
adc
lock
icebp
out
mov
mov
mov
cli
ds
adc
sub
fs
mov
inc
cmpsl
push
and
inc
or
mov
adc
inc
in
xor
popa
cltd
mov
arpl
ja
cmpl
xor
jmp
xchg
dec
imul
push
insb
movsb
pop
sub
jle
insb
and
push
cmc
daa
and
incb
cmpltps
adc
aaa
cmp
jl
push
adc
and
dec
test
insb
and
jbe
cli
fstpt
not
inc
adc
cli
and
add
adc
into
loop
pop
loopne
popa
push
dec
lods
push
lahf
cwtl
xchg
sbb
xchg
jl
lods
dec
adc
es
test
ljmp
jmp
cmc
fsubrl
aas
jae
add
dec
jne
fsubrl
movsb
pop
fstpl
adc
push
fwait
pop
or
hlt
jo
pop
add
mov
mov
ret
mov
dec
add
loopne
pop
insb
outsl
cmp
jg
push
popf
inc
xchg
cs
mov
jle
shll
inc
sarb
ret
pop
dec
add
push
inc
cmpsl
sbb
call
test
pop
shrl
mov
in
ja
dec
shll
adc
hlt
stos
push
push
imul
daa
movsb
xchg
dec
in
sbbl
xor
repz
ret
jno
data16
xchg
jo
imul
clc
jmp
inc
jae
mov
add
dec
iret
add
jo
int
repz
cmp
pop
jns
mov
fldl
push
rclb
aad
mov
jne
ret
jg
cld
cmp
xor
mov
sub
and
add
mov
test
inc
xor
daa
xor
rcrl
cmp
push
adc
xchg
jbe
adc
imul
in
jb
or
adc
xchg
dec
push
pop
or
jge
shrb
sbb
jge
lea
pop
popf
dec
int3
push
push
cmpsb
inc
xor
in
sub
adc
mov
push
inc
cmc
inc
and
xchg
test
lcall
cltd
repz
nop
pop
ret
mov
xchg
sub
insb
push
in
or
cmp
std
std
sub
rcl
adc
daa
je
inc
push
negl
mov
fucomp
sbb
orl
and
imul
mov
cmp
hlt
sahf
testb
sbb
popw
aad
in
out
add
out
inc
push
or
fwait
int
ficoms
test
jg
adc
xor
sbb
loopne
ret
rolb
rol
or
daa
mov
mov
orl
gs
fidivs
stos
outsl
push
jmp
leave
clc
and
add
xchg
lahf
stos
jge
inc
mov
xchg
test
cmpsl
rep
rorl
push
or
pop
js
and
push
cmp
and
mov
movsl
pop
mov
outsl
push
rcr
in
orb
fisubrl
inc
sub
hlt
outsl
or
filds
xor
xlat
dec
outsl
lahf
sbbb
pop
int
lea
outsb
aaa
stos
pop
and
jp
push
cli
mov
pop
mov
jmp
in
pop
lods
cmp
sbb
xchg
ret
xlat
aaa
mov
or
call
cmp
mov
xchg
sti
pop
mov
aad
jae
or
movsl
or
int
jmp
notb
outsl
or
loop
xor
int
mov
jbe
imull
iret
nop
cli
xchg
jbe
or
add
call
std
int3
adc
es
mov
movsl
cmp
push
dec
outsb
xchg
pop
pop
mov
popf
fwait
mov
jp
inc
cmp
mov
pop
mov
jle
sbbb
fbstp
dec
xchg
fcmovnbe
xchg
push
cmp
data16
mov
loopne
filds
xor
loop
lock
into
mov
je
icebp
sbb
mov
fwait
in
cld
imul
jge
cmpsl
cmp
lret
int3
push
sub
outsl
mov
sub
dec
sbbl
inc
movsb
and
repz
push
and
adc
add
clc
inc
mov
adc
or
jmp
pop
sbb
dec
mov
pop
xchg
in
dec
push
jbe
cli
dec
mov
cmp
mov
mov
xorl
or
cmp
xor
bound
fisubl
hlt
je
inc
sub
mov
sub
push
es
or
jno
inc
daa
lahf
sbb
push
das
fs
cmp
lock
pop
adc
jb
pop
push
adc
pop
mov
in
jns
orl
mov
adc
pop
testl
shl
fs
or
dec
loope
and
in
es
out
sarl
jp
mov
xchg
pushl
outsl
das
cld
lock
xor
mov
cltd
push
inc
stos
insl
adc
adc
xchg
outsb
dec
xchg
jb
pop
scas
test
jbe
imul
lods
mov
inc
pop
mov
cmpsl
shlb
sbb
ret
pushf
adc
test
mov
jae
add
int
ss
sbb
pop
sub
mov
enter
mov
icebp
xchg
mov
add
pop
dec
stos
sub
or
or
xchg
jecxz
cmpsl
dec
ror
in
lods
andl
aas
dec
xor
cmpsl
pop
loop
sbbl
push
mov
das
rcll
daa
popf
and
repz
out
sub
and
loopne
imul
pop
mov
push
pop
xor
cmpsl
jnp
jno
loop
loope
stos
fs
ret
into
xchg
sbb
cmp
mov
aas
mov
jl
xor
ret
push
push
adc
fcompl
mov
jecxz
pop
repz
pop
addl
jle
insl
add
ds
cli
bound
or
test
int3
outsl
addr16
mov
cmp
sub
mov
sbb
lods
push
aad
xchg
push
dec
dec
sub
push
test
push
and
loop
outsb
jne
fiaddl
outsb
ret
cmp
std
or
cmp
icebp
jle
sub
gs
scas
std
pusha
movsb
sub
sub
pusha
push
dec
fnstenv
testw
dec
xchg
adc
push
jg
pop
stos
decl
das
mov
lret
mov
movsl
leave
adc
out
clc
xor
fimull
out
mov
or
jne
adc
and
into
fwait
cltd
ljmp
pop
inc
add
cmp
lods
ret
pop
subl
mov
push
scas
outsl
aad
jae
adc
cmp
jle
aam
inc
js
ret
jns
into
inc
std
int
inc
xorl
pop
leave
movsb
or
pop
cmp
mov
push
test
pop
cmp
mov
daa
mov
sti
inc
push
mov
clc
xchg
jl
and
je
jle
mov
mov
cmp
shl
nop
sbb
insb
dec
add
in
and
pop
or
pop
and
jnp
sub
adc
pop
sub
ret
mov
cmpsb
ljmp
pop
cmpsl
and
stos
repz
and
faddl
push
dec
pop
imul
sub
adc
mov
cmpsl
dec
cmpsb
sbb
jecxz
xor
mov
fdivrl
xor
push
jae
movsl
mov
fbld
jle,pt
imul
fldt
cli
pop
xchg
int3
adc
stos
cmc
dec
sbb
sbb
dec
mov
or
sub
test
test
xor
sahf
fwait
notb
nop
add
dec
push
repz
iret
mov
in
mov
cs
jecxz
sbb
notl
fidivrs
mov
inc
scas
pop
inc
mov
pop
inc
push
xchg
int
lds
mov
xlat
xchg
das
cwtl
mov
insb
sub
inc
out
mov
lods
mov
cwtl
dec
adc
pop
bound
cs
and
lods
cli
pop
push
pusha
stos
lret
cmp
xchg
inc
aas
push
mov
push
push
lock
sbb
or
fsubl
fistpl
add
sub
fcomi
add
and
mov
ja
sbb
stos
movsl
push
mov
iret
mov
shll
adc
mov
mov
push
inc
leave
aad
cmp
jmp
dec
push
push
in
imul
sbb
mov
stos
popa
mov
gs
fnsave
mov
jb
mov
out
dec
iret
cmp
dec
call
sbb
cltd
addr16
test
aad
fnsave
clc
xor
lods
push
js
call
xchg
js
fisubl
push
pop
jecxz
pop
cmp
stos
subl
jae
jecxz
jmp
lret
push
xchg
repz
adc
mov
popa
test
hlt
aaa
sub
popa
pop
add
adc
jno
pop
fs
js
nop
push
stos
mov
pop
adc
out
insb
sub
int3
adc
jg
ret
sub
adc
cmpsl
inc
mov
lock
xor
push
sbb
leave
sbb
scas
mov
nop
push
lock
dec
movsb
dec
adc
aam
cmp
cmp
sbb
xor
sbb
mov
cwtl
cmp
xor
cli
in
clc
cmc
inc
fists
test
push
imull
lret
or
adc
scas
popl
test
sbb
lods
lcall
jmp
dec
dec
adc
cwtl
cmp
mov
push
int
addr16
cltd
and
adc
stos
fcompl
jns
shll
xchg
in
inc
xorl
mov
cli
test
dec
rolb
mov
adc
jecxz
js
lds
out
adc
push
in
add
xor
mov
jecxz
or
call
mov
push
lret
pusha
xchg
jecxz
lods
push
outsb
mov
dec
xor
adc
inc
sub
push
xchg
ja
pop
pop
or
jne
mov
adc
mov
insl
and
jmp
shll
push
jg
ss
test
insb
adc
pop
and
test
js
sti
inc
into
mov
mov
insl
jno
andl
dec
and
out
sub
jnp
lock
js
jge
inc
pop
xchg
pop
add
sahf
lret
daa
mov
dec
adc
imul
jle
mov
pop
add
jbe
loope
adc
lds
enter
fwait
or
xor
popf
or
fcoms
pop
cwtl
rcrl
inc
add
adc
xchg
cmc
sbb
imul
out
sbb
add
xchg
movsl
ja
mov
jmp
ja
pop
rolb
aas
lds
outsb
or
sahf
fists
aad
stc
cmp
jns
cli
mov
xor
ret
repnz
dec
or
mov
mov
jecxz
push
clc
or
out
jg
sbbl
lcall
dec
icebp
cmpsl
jnp
lods
inc
imul
push
fcom
mov
dec
sbb
addr16
ret
fwait
imull
jg
mov
sbb
jo
loop
shll
cmpsb
test
dec
sub
push
add
movsb
push
orb
cld
ret
and
adc
movsb
push
nop
and
outsl
adc
pop
fbld
rorl
aas
mov
rclb
bound
dec
sbb
es
and
pop
and
movsl
inc
std
in
xor
lcall
pushw
mov
push
cmpb
pop
fisubrl
das
push
cld
sub
and
dec
out
inc
mov
lret
pop
data16
outsl
mov
mov
push
hlt
mov
in
loop
rclb
push
mov
stos
adc
nop
pop
imul
dec
loope
movsb
sub
insl
out
inc
test
inc
push
outsl
enter
sbb
jns
test
scas
pushf
jmp
xchg
sar
call
loope
dec
pop
lret
mov
mov
push
addb
mov
add
lcall
lret
mov
xchg
mov
mov
ret
adc
cwtl
mov
jae
movsb
ret
popf
add
lahf
add
test
add
aas
cmp
call
icebp
mov
cs
mov
xchg
dec
adc
jmp
jecxz
mov
cltd
push
and
mov
fcmovb
scas
in
xor
and
sub
dec
or
mov
cmc
add
fs
sub
ret
movsl
stos
outsl
xor
call
add
andl
xchg
stos
int
dec
das
xchg
cmp
adc
mov
rorb
rorb
and
repnz
lock
inc
out
mov
cmc
loop
subl
jl
xchg
int
push
xorb
hlt
jmp
push
mov
mov
xchg
or
leave
and
je
outsb
cli
call
jecxz
or
hlt
pop
imul
pusha
aam
js
loop
cmpsl
stos
cmpsl
add
pop
mov
cmp
or
push
cmp
scas
pushf
and
repz
out
push
repnz
cld
and
add
fidivrs
cmp
push
mov
hlt
imul
imul
sub
iret
jo
xchg
std
jne
leave
imul
shlb
or
sbb
sub
dec
das
xchg
sub
lods
sbb
imul
in
jl
dec
cmp
cmpsl
cli
out
inc
jge
adc
adc
mov
jbe
add
push
mov
lcall
insb
inc
in
add
xor
inc
xchg
sub
shl
test
mov
cmp
iret
cmc
loope
fwait
outsb
and
jmp
andl
and
ficompl
pop
sahf
lock
push
pop
jbe
xorb
mov
sub
in
xor
xchg
inc
mov
lds
push
jecxz
cwtl
mov
adc
pop
sub
jle
xor
and
lock
push
pop
rolb
mov
xchg
pop
ret
dec
inc
pop
out
inc
mov
and
out
dec
push
mov
lret
and
dec
sti
jno
inc
mov
adc
icebp
es
sub
enter
aas
adc
add
push
fldcw
shlb
lods
incl
adc
sub
push
pop
test
lods
imul
push
ss
cmpsb
pop
shl
lods
pop
test
xchg
cmpsl
inc
dec
shlb
xor
adc
int
lcall
sbb
adc
lahf
lock
add
pop
mov
cmp
jl
scas
sbb
mov
stos
repnz
je
or
add
dec
enter
inc
pop
and
rorb
push
jp
dec
push
mov
and
test
outsb
lock
pop
idivl
enter
lea
sub
adc
arpl
lahf
popf
enter
sahf
out
push
jp
or
mov
xchg
pusha
lsl
fwait
test
ds
inc
mov
inc
sub
xchg
addl
es
iret
xchg
test
pop
outsl
nop
pop
adc
xor
test
icebp
push
push
and
and
roll
out
sub
nop
leave
jge
loope
dec
std
je
sarl
sub
dec
push
and
push
dec
ljmp
jmp
mov
dec
sbb
cs
cmpb
aas
adc
imul
sbb
out
fisubs
shll
mov
dec
lods
or
xor
xchg
loopne
xchg
in
dec
test
add
add
loopne,pn
pusha
sbb
push
adc
add
lock
xchg
inc
lret
ret
cmp
or
push
jno
push
xor
jecxz
and
rcr
loope
or
addl
in
add
and
dec
les
or
xchg
sbb
lea
mov
stos
mov
pop
adc
and
push
mov
dec
ss
jp
cmpsb
subl
test
inc
xor
ficomps
call
call
cltd
lods
push
jb
sahf
decb
xor
mov
jae
pop
lods
mov
jno
xor
xor
aas
sub
loope
pop
outsb
fs
test
xchg
inc
push
inc
pop
test
push
sub
or
mov
xchg
js
icebp
scas
mov
es
call
lahf
push
in
clc
pop
mov
jle
cmp
mov
push
les
xor
fs
outsb
xchg
cmpsl
add
mov
mov
and
cmpsb
mov
push
cs
pop
add
and
cmp
scas
sar
stos
hlt
cli
rolb
xor
inc
push
mov
add
movsb
adcb
std
dec
fstpl
mov
movsb
dec
xchg
sar
sub
je
movsb
pop
pop
insb
icebp
and
or
icebp
mov
adc
in
aaa
sub
stos
mov
adc
shrb
adc
xchg
das
xrelease
aam
stos
out
andl
dec
ret
je
and
scas
mov
gs
sbb
pop
dec
pop
inc
xchg
xorb
stos
sbb
fdivrs
push
or
orb
in
pop
mov
sub
movsb
sbb
in
test
mov
push
fldenv
sub
xchg
sahf
sbb
xchg
jmp
popa
or
int
cs
pop
xlat
faddl
ret
jg
lcall
sbb
mov
adc
jg
push
scas
pop
fimuls
ja
out
jp
xchg
push
aad
lods
push
sbb
adc
lock
pushf
sahf
xor
xchg
fwait
mov
out
aam
mov
push
jmp
and
pop
cwtl
mov
icebp
xlat
mov
test
int3
test
jne
jns
mov
sub
xchg
ret
adc
or
jle
cmp
jge
pop
lahf
test
jle
pop
mov
jl
lods
jb
loopne
dec
and
mov
sub
aad
pcmpeqw
insl
movsb
push
jp
cld
insl
mov
adc
xchg
jp
xor
loope
insb
lret
in
in
lock
xchg
dec
test
mov
ret
out
mov
aaa
mov
push
repnz
mov
or
mov
jne
pushf
pop
sbb
push
popa
ret
dec
popf
jmp
mov
outsl
inc
xor
pushf
fdivs
dec
popf
leave
ja
push
int
xchg
xchg
and
cmpsb
cmc
call
and
sub
pusha
int3
mov
mov
mov
mov
xor
and
hlt
prefetchw
das
push
fdivl
cmpsl
add
scas
mov
mov
flds
rcr
or
dec
stc
fstpl
jnp
jmp
jle
jle
jbe
js
adc
fsubrs
mov
push
or
mov
cs
add
and
pop
fcmovnbe
ds
arpl
jg
jne
xor
dec
lcall
lcall
sti
adc
mov
jmp
outsb
jl
rcl
out
push
fistps
outsb
mov
out
aam
xchg
bound
inc
dec
pop
cmp
iret
cmpsl
cmp
aaa
ljmp
shrl
int3
mov
jmp
xor
push
push
leave
ds
sub
int3
movsl
in
dec
ja
sub
daa
mov
shrl
mov
bound
int
icebp
or
and
cs
nop
mov
push
stc
mov
sub
inc
enter
adc
pop
dec
dec
fnstcw
out
add
jne
jmp
lock
dec
int3
push
and
sbb
add
xlat
loopne
out
ds
cmp
mov
cltd
xor
fsts
ret
push
cli
push
ds
inc
lcall
xchg
dec
mov
mov
ljmp
ds
inc
enter
std
and
add
xor
cmp
xchg
pop
call
lahf
sbb
fmull
xor
inc
cmp
arpl
inc
mov
frstor
out
sahf
cmp
xor
das
jo
mov
sbb
xor
daa
jns
outsl
mov
in
popf
fisubrl
adc
xchg
loopne
mov
push
mov
sbb
into
dec
mov
testl
mov
mov
mov
call
xor
movsl
xchg
sub
push
jmp
rcr
dec
ret
adcb
out
xchg
and
xchg
fs
pop
fmull
lahf
insl
and
out
sub
jle
lret
lahf
out
repnz
push
xor
in
mov
inc
mov
fs
mov
ja
mov
or
xchg
rorl
out
jl
inc
dec
loopne
add
jns
add
ret
pop
jnp
pusha
dec
int3
pop
cs
dec
mov
rcr
pop
lcall
jg
pop
cmp
mov
mov
jno
push
jb
daa
adc
pushfw
jno
pop
adc
sub
lcall
push
popf
push
out
call
inc
sub
in
pop
call
ljmp
add
xor
mov
cmc
shl
pop
int
and
out
int3
ret
sub
jge
call
mov
test
pushf
into
xchg
fwait
insl
pop
pop
and
scas
in
nop
xlat
jne
pop
scas
les
fildll
xchg
pop
xor
sbb
cmpsl
inc
fnsave
or
arpl
cld
repnz
fadd
push
or
inc
mov
out
int3
pop
cltd
jae
fsubl
cmp
dec
and
sbb
fnstsw
xchg
jl
or
dec
scas
inc
or
cld
fidivs
and
push
subl
pop
lcall
fisttps
jmp
pop
aad
xor
cld
pop
outsb
sti
test
lods
xchg
cmp
push
fstl
push
pop
push
mov
or
bound
inc
mov
pop
dec
dec
or
enter
jns
stos
arpl
flds
outsl
nop
or
add
xor
ret
xchg
sbb
lds
call
cwtl
push
out
jae
subl
repz
push
mov
jnp
xchg
orl
add
shrb
inc
daa
cli
dec
adc
mov
popf
je
in
mov
mov
and
jbe
pop
push
mov
jb
jg
icebp
or
ficoml
pop
dec
pop
add
hlt
pop
push
pop
xchg
push
out
xor
bound
push
into
arpl
jae
inc
mov
in
std
jmp
mov
cmpsl
lret
nop
push
cld
cmp
xchg
add
and
adc
int3
jge
cmpsb
xchg
ret
js
or
lods
push
pop
fisttpl
jno
jp
sahf
dec
inc
jg
jno
sbb
clc
adc
test
test
fcompl
or
test
cmp
pop
xor
cmp
xchg
adc
mov
shll
xchg
sbb
orl
pop
dec
mov
adc
subl
popf
pop
xchg
cmp
mov
fnsave
jp
or
mov
xlat
inc
jecxz
adc
mov
or
mov
xor
adc
data16
addb
cmp
adc
in
or
in
or
ljmp
ja
dec
inc
subb
mov
dec
daa
fcomi
lahf
pusha
cmp
sub
test
cmpsl
lods
js
mov
test
adc
int3
mov
cmp
loope
sub
fisubrl
popa
dec
mov
hlt
jns
push
push
push
pop
adc
push
sbb
mov
cwtl
adc
insb
adc
mov
fnstsw
scas
iret
or
mov
jl
and
pop
pop
sbb
and
xor
cmp
mov
icebp
push
aam
mov
or
and
pop
popf
sbb
test
dec
shlb
inc
jmp
or
loop
daa
jg
inc
jl
lret
cmp
dec
jnp
sahf
sbb
jnp
xchg
xchg
ret
lds
mov
pop
loopne
dec
test
flds
dec
lea
pop
js
insb
lds
sahf
fs
addl
mov
or
inc
mov
sti
xor
jle
jl
in
adc
inc
nop
xchg
adc
fistpll
xabort
sub
out
test
lock
daa
xor
jo
je
push
push
mov
sbb
mov
mov
mov
add
jle
sbb
jno
std
xor
aas
out
push
ljmp
int
jecxz
je
pop
xor
jge
rolb
push
das
bound
push
add
test
lahf
cltd
js
mov
and
fdivrl
xchg
cmpsl
pop
pushf
mov
adc
lods
imul
pushf
repz
jae
or
mov
jecxz
iret
adc
in
outsb
incl
sbb
push
subb
jg
mov
dec
dec
jno
lods
push
fisubl
call
mov
orl
push
fidivs
and
stos
sub
mov
sub
stos
mov
loop
push
or
sub
jns
dec
xor
into
adc
test
xchg
xchg
dec
inc
sbb
pop
scas
and
mov
sub
inc
cmpsb
and
ror
or
ss
fmull
pusha
pushf
jl
push
mov
add
imul
sbb
push
sub
into
repnz
jge
xchg
sti
enter
inc
or
je
mov
mov
sbb
divl
xchg
mov
xor
outsb
pop
mov
std
pop
dec
gs
jecxz
leave
jns
push
insl
jl
les
mov
cld
out
sbb
into
pop
cmp
and
add
fs
fmull
pop
jnp
mov
dec
test
xchg
ljmp
pushf
cmp
outsb
and
mov
mov
andb
gs
pop
fwait
mov
jl
nop
xchg
clc
push
push
pusha
dec
mov
rolb
push
test
movsl
std
jns
xor
aam
adc
sub
mov
dec
mov
pop
cli
clc
mov
repz
scas
movsb
popf
and
imul
mov
jb
jae
out
pop
pop
xorl
add
and
inc
mov
addr16
and
clc
push
sub
shr
inc
sbb
ret
sub
imull
sub
dec
push
inc
xchg
inc
int3
lret
mov
addb
and
mov
mov
xchg
inc
add
sbbb
pop
or
xchg
cld
lods
xor
dec
dec
ret
hlt
cmp
mov
mov
or
mov
mov
std
std
cmpsb
nop
stos
xchg
lret
test
push
cmc
andb
cmp
or
rorl
fyl2x
push
cld
fwait
fsubr
pusha
mov
add
push
dec
pop
pop
xchg
jge
inc
adc
pushf
mov
lret
fbld
pusha
push
daa
jp
push
repz
mov
jo
aas
cli
test
test
inc
ljmp
mov
rorl
fwait
and
or
dec
jb
mov
leave
dec
jb
mov
mov
std
jle
xchg
push
int
mov
mov
mov
jb
scas
gs
inc
lret
lock
cmpsl
xor
in
dec
lods
adcb
jmp
gs
inc
cwtl
pop
iret
jb
adc
fildll
cmp
or
fbstp
xchg
cld
call
fldcw
test
cwtl
test
enter
jg
push
pop
sbb
shrb
jecxz
in
add
mov
pop
inc
lcall
add
add
leave
lahf
in
jnp
test
mov
test
push
movsb
popa
and
aad
dec
cmp
andl
or
andb
inc
stos
repnz
rclb
aad
mov
jno
fcompl
stc
and
dec
or
xchg
add
lock
test
lods
inc
ret
xchg
les
push
mov
jns
movsl
mov
out
out
shl
cmpb
shlb
pusha
adc
ljmp
fidivrl
sbb
xchg
dec
pop
stos
insb
sbb
call
jmp
cmp
adc
sbb
jnp
push
fdivr
ret
inc
or
lret
in
inc
cmp
pop
sahf
sbb
dec
jb
cli
mov
std
add
xor
ret
dec
int3
shrb
cmp
repz
pop
ret
movsl
mov
mov
jge
pop
pop
out
ret
sbb
xor
dec
cmp
loope
lret
in
lods
pushf
mulb
xor
pop
push
lods
out
mov
mov
add
je
jae
pop
and
test
cwtl
ss
sub
jno
jl
and
les
fs
test
mov
arpl
sbb
ss
lock
cmp
pop
ret
lods
fisttpll
xchg
jl
inc
out
sbb
out
pop
adc
rcl
xor
int
pop
xlat
ljmp
jmp
rclb
sti
fildll
in
inc
filds
nop
cmpsl
pop
loopne
xchg
cmp
ja
jno
pusha
out
std
nop
je
dec
out
pop
cmpsl
push
and
jne
xchg
and
sbb
aam
push
out
pop
out
cmp
inc
cli
sbb
lds
and
dec
inc
mov
negl
jge
mov
or
inc
test
adc
les
test
cld
add
addl
outsb
xchg
lods
push
mov
pop
ljmp
lret
fidivrs
pop
pushf
scas
aam
loope
mov
lods
test
insl
shll
push
icebp
sub
adc
pushl
movsb
fsubl
mov
cld
dec
std
xchg
mov
fwait
test
push
xorb
pop
mov
push
cmp
sbb
in
ljmp
sub
push
push
movsl
lar
and
mov
dec
or
mov
or
shl
add
inc
push
out
push
inc
lret
inc
clc
mov
and
and
push
cmp
int3
mov
out
ret
mov
lds
filds
fists
mov
mov
out
cld
jb
inc
inc
jp
hlt
push
push
addl
hlt
mov
mov
shl
shlb
scas
lods
jbe
lds
add
movsb
stc
dec
mov
les
mov
sbb
hlt
test
popl
lods
dec
lea
sbb
xor
daa
sub
movsl
sub
sbbb
rcl
pop
scas
mov
and
xchg
insb
mov
cmpsb
add
popf
xor
stos
mov
adc
xchg
sub
fidivl
xchg
test
pop
jmp
or
les
xchg
scas
lret
add
fisubrs
mov
stc
add
add
jmp
inc
loope
pushf
jge
fwait
jle
mov
movsl
xchg
adc
ljmp
lea
and
lcall
aaa
mov
and
pop
cmpsl
loope
pop
mov
jp
jns
out
mov
mov
mov
dec
out
data16
addr16
cmpsl
lahf
pop
arpl
pop
and
ss
dec
int
push
inc
out
pop
xchg
fadds
sub
xchg
cltd
xchg
clc
add
pop
sub
ret
or
pop
xchg
mov
pop
cmp
nop
pop
fstl
cmc
jo
jg
rorl
pop
and
cld
dec
repz
in
imul
sbb
outsl
stos
dec
cmp
mov
pop
outsl
mov
xchg
mov
sahf
sbb
fstpl
pop
sub
mov
ja
adc
push
jmp
xchg
scas
pop
and
mov
testl
push
testb
inc
cmc
out
orb
in
adc
jns
mov
fidivl
dec
mov
cmp
orb
movsl
ret
hlt
mov
mov
jne
adc
les
mov
lahf
rclb
test
or
test
lret
pop
xor
outsb
xchg
and
add
mov
test
pushf
mov
dec
cmp
pushl
in
jecxz
mov
xchg
andl
andl
stos
popa
vdivps
sbb
pop
mov
jl
imul
decb
pop
mov
adc
fidivs
adc
int
xor
repz
sbb
pop
negb
mov
inc
fcmovnu
mov
lret
mov
xchg
mov
mov
ds
pop
fistpl
xor
mov
push
fnstcw
xchg
test
lods
add
inc
gs
push
sub
sahf
sbb
das
pop
neg
mov
dec
mov
movsl
test
out
mov
sbb
xchg
xor
mov
lods
xor
sub
push
cmpsl
mov
jo
adc
sbb
sub
mov
push
pop
sub
test
mov
dec
or
mov
loopne
mov
lret
pop
jecxz
jo
hlt
test
std
sbb
mov
loop
les
loopne
dec
iret
fsub
push
or
sbbb
push
int3
or
sbb
stos
or
lds
fucom
cltd
mov
bound
les
and
add
scas
inc
es
lret
sbb
and
xlat
ror
mov
dec
pop
xor
mov
push
pop
sub
dec
mov
or
and
je
jp
xchg
jecxz
push
dec
ss
ss
fidivrl
dec
repz
mov
inc
xchg
jne
outsb
iret
sahf
xchg
add
pop
sub
or
jle
mov
sub
xchg
xchg
rorb
fnstenv
out
cwtl
jb
mov
mov
orl
pop
icebp
std
sarb
pop
mov
scas
je
shl
fnstsw
popf
clc
outsl
sti
and
daa
ja
xlat
not
cli
ljmp
nop
add
cmp
ja
dec
mov
jecxz
mov
mull
mulb
cltd
adc
es
mov
jo
sbb
jp
ret
xor
fs
out
fcmovnu
andb
jo
jle
inc
fsubrp
dec
loop
mov
xor
fcom
repz
jl
xor
lods
xor
jo
xchg
push
fildl
cltd
inc
xchg
push
mov
fmul
push
testl
shll
or
push
dec
sub
add
or
sub
mov
mov
fisubrl
je
stc
shll
push
lods
icebp
add
pusha
sub
pushf
jb
shr
mov
or
std
push
mov
aam
mov
jmp
or
repnz
popa
aad
cli
aas
or
shlb
inc
and
fucom
outsl
imull
stos
mov
out
nop
fdivrl
pop
js
jae
stos
ret
push
push
dec
sbb
add
push
shlb
insl
push
dec
dec
dec
scas
xlat
shl
or
repz
adc
and
pop
jecxz
mov
push
cld
pop
int3
and
mov
lea
fnstsw
arpl
push
mov
cld
cs
xor
std
fst
fcoms
ss
pop
les
dec
or
gs
clc
out
sub
lahf
adc
data16
jbe
test
rcl
test
inc
and
and
out
and
in
jle
js
test
inc
pop
out
insb
jnp
clc
dec
jge
mov
lret
popf
das
pop
out
push
sub
hlt
js
jno
movsl
cmpb
pop
mov
shlb
sbb
fs
pop
pop
pop
scas
sub
or
mov
mov
dec
or
push
in
lods
fcomps
roll
ja
push
ds
sbb
scas
imul
add
movb
fs
inc
dec
mov
call
sbb
pop
jno
sub
repnz
mulb
or
lea
jge
xor
mov
loope
mov
lock
pop
add
movsl
in
ret
xor
sbb
lods
mov
sub
sub
pop
test
test
rcrl
inc
ficompl
mov
cltd
adc
cmp
jbe
push
daa
adc
cmp
xchg
fcomi
lods
sbb
inc
lahf
sahf
inc
or
test
push
orl
mov
or
add
pop
mov
das
inc
adc
scas
aas
jmp
pop
cmp
sub
imul
test
scas
mov
pusha
nop
sbb
fsts
int
lock
xchg
bound
or
outsl
jmp
mov
rcrb
je
pop
jmp
jb
pusha
adc
shlb
addr16
and
xor
mov
mov
mov
jbe
iret
sbb
dec
in
mov
xlat
inc
loopne
mov
sbb
popa
jne
mov
popa
mov
sbb
push
mov
je
mov
adc
icebp
outsl
int3
rorb
pushf
mov
mov
jns
movsb
xchg
in
mov
mov
pop
popa
xor
scas
cmpb
imull
add
cltd
adc
adc
imull
dec
fdivp
loopne
int
mov
pop
loop
out
stc
mov
loopne
insb
xor
xchg
jl
sbb
lcall
movsl
ds
dec
push
inc
xchg
jge
test
cmpsb
cmpsb
inc
das
adc
popl
xchg
sbb
jge
fs
add
inc
cmpl
movsb
jp
xchg
jp
ds
arpl
xchg
push
fisubl
xchg
push
mov
dec
imul
out
pop
dec
jg
xchg
or
shrl
push
sarb
jg
pusha
mov
sbb
xor
shrb
and
or
clc
ret
push
mov
mov
or
push
ja
mov
les
xlat
mov
es
sti
mov
addr16
mov
les
mov
cmp
hlt
xor
jl
or
jecxz
jns
jnp
popf
loopne
daa
or
cmpsb
stc
fwait
rcrl
outsl
pusha
repz
sub
jo
addr16
xchg
mov
stc
add
rcrb
pop
jb
adc
mov
dec
testl
sti
gs
test
sub
fsts
mov
js
and
push
cmp
aam
loope
push
out
xor
lea
mov
xchg
insl
in
rcll
add
jg
inc
test
es
push
inc
jnp
xor
sahf
cld
inc
lds
icebp
lcall
in
test
xchg
push
adc
sti
inc
jbe
enter
adc
lret
push
sbb
scas
mov
insl
aaa
sbb
addr16
insb
lea
pop
mov
mov
jae
inc
push
xchg
or
cli
addl
add
jbe
pop
scas
loopne
push
clflush
or
cmpsl
in
lds
and
aas
loopne
push
stos
cmp
xor
adc
aad
fnstcw
insl
add
mov
adc
out
leave
xchg
sbb
bswap
daa
cmp
fcomp
shll
rolb
and
loop
push
sub
je
in
adc
mov
das
sbb
outsb
sbb
jecxz
and
inc
in
aad
cwtl
or
add
inc
outsl
je
mov
aam
fstl
push
into
add
xchg
xor
jo
jmp
movsb
clc
divl
sub
pop
out
adc
scas
mov
lock
dec
sub
pusha
cmp
ret
sub
mov
out
fcoml
or
adc
push
mov
cmp
lea
cmp
push
mov
ljmp
imul
cmp
lods
scas
in
int
jbe
add
icebp
mov
jmp
mov
stos
mov
aas
sbb
fs
out
jmp
jl
push
orl
xchg
orb
lea
jno
and
dec
push
mov
rcrl
test
push
jb
pop
jge
push
and
xchg
fdivrl
pop
and
int3
push
and
out
pop
mov
fwait
pop
into
pop
fs
leave
out
mov
mov
and
loop
loop
push
icebp
cmc
adc
sti
pop
push
mov
icebp
and
jbe
rcrb
aaa
stos
loope
shlb
mov
mov
jge
jb
inc
mov
add
mov
mov
inc
test
push
xchg
inc
les
pop
sbb
dec
in
and
jne
cmp
jle
movsb
bound
push
adc
pop
popf
repnz
or
pop
cmp
push
fcomps
fidivl
jmp
fs
xchg
out
stc
sarb
lods
lret
lcall
mov
mov
dec
dec
shlb
cmp
ret
mov
xchg
jnp
in
inc
dec
cli
sbb
add
mov
es
sbb
std
or
fstp
cmpsl
xor
les
adc
inc
inc
xlat
pop
and
mov
push
cli
incl
scas
sti
or
fs
mov
nop
popa
mov
xchg
fdivrl
sti
scas
and
and
les
in
test
mov
inc
mov
nop
mov
les
frstor
pusha
xchg
xchg
sub
addb
sbb
mov
icebp
jne
jo
mov
pop
xor
mov
jge
lods
in
mov
dec
out
fwait
cmp
out
xchg
xchg
cmc
mov
cmp
push
or
enter
stc
bts
imul
in
add
test
sbb
xchg
das
test
sub
aam
cli
add
mov
pop
jecxz
xchg
dec
fs
push
cmc
or
adc
mov
stc
push
xchg
add
outsl
dec
fucomip
lods
or
cwtl
out
data16
jge
in
stc
sub
ljmp
mov
xchg
or
xchg
lds
iret
mov
pop
js
lcall
inc
xor
and
add
xchg
icebp
adc
addr16
fsubl
out
loope
test
jg
fldl
lods
inc
jo
jnp
push
andb
aam
es
movsb
push
inc
movsb
fidivrs
sub
push
loope
movsl
les
dec
stos
add
and
push
int3
push
mov
loopne
aaa
je
inc
pop
fsubr
pop
insb
sub
mov
sub
addl
das
or
mov
and
roll
dec
ja
shll
fwait
ds
nop
iret
sar
mov
push
jge
sub
pushf
insl
push
mov
mov
cld
jb
iret
pop
je
mov
push
jp
inc
mov
adc
or
add
adc
into
fwait
mov
clc
xchg
mov
loop
cmp
xlat
mov
ja
pusha
jb
leave
out
push
jle
lret
out
sub
std
sbb
ret
add
xor
scas
push
imul
test
push
int3
pop
out
pop
enter
imul
shlb
and
push
dec
mov
xor
mov
dec
mov
ds
leave
int3
and
dec
push
popa
in
sbb
jmp
aas
lock
cli
shrb
mov
or
sub
sbb
lock
or
mov
push
cmp
pop
data16
cmp
jno
sub
jp
mov
and
jnp
add
jb
add
jge
add
sub
mov
ret
ret
ljmp
pop
sub
pop
push
iret
insl
sbb
pusha
rcl
xor
cmpl
xlat
push
cmp
rcll
add
fsubrl
pop
dec
test
js
add
aad
out
scas
mov
dec
roll
jb
adc
sub
push
or
adc
jno
inc
cmpsb
nop
inc
push
adc
jle
xchg
jle
and
aaa
addr16
mov
popa
shlb
sub
mov
out
cmc
jae
sub
or
push
adc
adc
xorl
daa
or
inc
adc
xchg
outsb
push
mov
mov
lcall
daa
add
mov
mov
les
jno
push
and
and
fiadds
test
jne
popl
sti
or
fs
nop
add
imulb
ror
mov
mov
jp
out
pop
cld
push
testb
push
and
xlat
push
add
sbb
pusha
jmp
cwtl
inc
cmp
pop
notb
out
cmp
or
mov
daa
mov
hlt
or
xchg
into
movb
mov
pop
ja
jl
or
xchg
cmpsl
mov
aad
in
into
mov
pop
cld
add
cmpsl
sbb
ds
mov
cmpsb
jb
popa
mov
jo
movsb
jnp
mov
pop
aad
jbe
je
mov
out
gs
dec
jp
inc
rorl
xchg
cld
inc
ret
sub
mov
jle
out
xchg
dec
mov
jp
mov
jo
cwtl
fisubrl
outsl
es
imul
popl
xor
test
mov
loopne
mov
fstpt
jecxz
adc
xor
inc
xlat
aaa
fwait
jns
push
rcr
mov
dec
push
filds
jne
imul
xor
int3
js
addr16
mov
sarl
cmpsl
cmc
xchg
mov
clc
jg
sub
jo
shll
cmp
aas
sub
jp
adc
xor
mov
mov
adc
outsl
cs
outsb
sarl
jle
ja
arpl
jns
lret
sub
mov
aas
dec
insl
push
or
cmp
adc
movsl
sub
jnp
add
jae
lahf
pop
or
clc
je
mov
stc
mov
cmp
movsl
dec
mov
outsb
insb
mov
out
lret
adc
movsl
xchg
ds
cli
imul
data16
sub
pop
in
and
jae
pop
jecxz
pop
adc
add
dec
arpl
inc
mov
call
xor
cmp
cmpsl
lock
lods
sub
popf
pop
daa
popf
adc
pushf
cmc
scas
int
ret
lret
sti
jl
pop
sub
push
push
in
xchg
jns
lcall
subl
xor
pop
jp
call
bound
clc
lret
stc
sub
cmc
jecxz
xor
dec
sub
and
dec
into
push
cwtl
mov
jecxz
and
mov
dec
add
push
sub
lcall
mov
xor
dec
cli
aaa
mov
lods
mov
xor
hlt
cltd
or
shlb
add
int
cwtl
jns
or
xchg
fists
jl
mov
je
imul
call
adc
add
push
inc
adc
roll
pop
pop
jle
mov
jg
into
ficoms
lds
faddl
mov
popf
ss
xor
jbe
repz
imul
gs
mov
xor
mov
mov
jl
dec
inc
adc
xor
sub
xchg
inc
add
xor
popa
movb
out
dec
pop
ret
mov
cltd
cli
dec
xchg
pop
jo
shll
push
repnz
fdivs
cmp
mov
sub
sahf
and
out
cs
cmp
aad
out
cmpsl
stos
push
and
cs
pop
xlat
movsl
lea
add
inc
pop
jge
cld
jle
out
adc
mov
fisubrl
ss
stc
lret
inc
testb
pop
out
mov
push
jo
fmull
jg
jno
mov
std
fisubs
pop
pop
mov
sbb
cli
add
mull
jmp
cmp
aas
stos
bound
fidivs
or
minps
mov
sahf
xor
loopne
push
into
cvtpi2ps
mov
push
mov
xor
cmp
jnp
jbe
push
xchg
jae
jns
out
fcmovu
ficoml
jge
sbb
lretw
bound
cmc
or
lahf
out
push
pop
pop
mov
or
push
inc
adc
adc
jmp
cmp
cmp
mov
fisubrs
add
test
iret
xchg
out
cmp
loop
outsb
out
cmp
out
test
fistpll
fsubs
sub
push
and
xor
mov
movb
das
xchg
xor
pop
pop
clc
or
or
lret
ret
ficomps
cli
call
jns
push
mov
lea
das
inc
addl
mov
imul
out
mov
lods
je
ss
mov
lods
lods
andl
aad
cmp
pusha
add
stos
das
xchg
jg
mov
mov
dec
cmp
icebp
or
dec
sub
push
xchg
cmp
ds
ja
popf
xchg
xchg
lret
jne
mov
lods
ljmp
aam
rcrl
outsb
or
xchg
mov
inc
pop
test
mov
sub
mov
dec
mov
call
shl
add
ret
push
shll
sbb
fwait
roll
insb
sbb
pop
jb
imul
jmp
das
call
sbb
sub
sti
adc
test
sbb
fwait
shl
aas
mov
cmp
shrl
cmc
xor
xor
shlb
dec
jecxz
scas
mov
pop
mov
lods
dec
mull
mov
xchg
in
dec
pop
sub
sub
pusha
ret
jnp
lods
xor
out
iret
fildll
lahf
sahf
call
pushf
ljmp
jno
mov
dec
sub
imul
pop
outsb
int
xchg
cmp
cmp
out
cmp
cmp
ret
fldt
cmc
fs
lock
cmovb
jg
insb
mov
shl
jae
adc
imul
clc
popf
mov
jle
dec
sub
jb
cwtl
or
cmc
int
popl
cmp
stos
pop
sub
fildll
mov
test
push
pushf
mov
xchg
pop
adc
push
imul
and
push
add
xorl
jne
dec
sub
ja
xchg
hlt
outsb
dec
in
lds
sub
jl
test
sbb
push
in
std
inc
call
xor
xor
inc
sahf
and
jnp
lret
cmp
add
int
inc
lea
lods
js
rcr
or
cmpsl
mov
jns
dec
jmp
inc
in
pop
sbb
push
call
xor
stos
adc
push
pop
cmp
push
outsl
lods
aaa
das
jno
cs
mov
jo
cmp
movsb
add
hlt
pop
xor
test
adc
movsl
mov
jmp
push
adcl
mov
in
mov
xchg
loop
jmp
rclb
pop
jo
and
xchg
xorl
das
or
mov
test
cmp
mov
fs
mov
mov
push
jnp
and
xorb
and
jns
fimuls
movsl
test
inc
and
jb
mov
shl
xchg
lods
and
sbb
fs
mov
jns
adc
ljmp
loope
ja
fdivrl
or
test
scas
enter
cwtl
dec
cmp
or
ffreep
mov
fsubs
mov
xchg
mov
xor
loopne
and
cmpsl
push
push
mov
enter
js
pop
aam
adcb
clc
fcmovne
mov
sub
popf
scas
or
popf
xchg
sub
in
jge
test
or
jne
lods
adc
sub
dec
outsb
dec
jae
nop
pop
mov
mov
lahf
orl
fbstp
mov
add
pop
xchg
js
sub
icebp
pop
inc
cmpsb
fbld
push
jle
sub
add
test
cld
fcompl
movsb
xor
clc
insb
or
les
inc
sbb
adc
in
not
inc
shlb
sbb
add
or
jb
sbb
mov
pop
jmp
pop
hlt
das
jge
xor
es
push
test
enter
adc
dec
mov
add
idivl
lods
push
mov
adcb
push
mov
adc
stos
addb
push
test
sbb
mov
mov
cmp
sub
adc
dec
loop
das
adc
pop
mov
pop
or
popa
pop
mov
jg
jle
in
stc
ss
mov
pop
pop
scas
sbb
pop
cmp
movsb
imul
insb
mov
xlat
push
fbld
xor
xchg
movsl
add
clc
mov
gs
cmp
js
xor
lret
sub
pop
test
push
imul
push
std
push
je
adc
xor
and
insb
mov
out
xor
sahf
loope
stos
xor
and
pop
addr16
stos
ss
enter
and
push
les
dec
adc
popf
sbb
adc
cli
jp
pop
add
pop
movsb
jp
xchg
das
ret
push
mov
negl
xor
pop
push
sarl
pop
int3
imul
adc
js
mov
jno
cwtl
dec
jnp
int3
pop
scas
sub
mov
adc
fwait
adc
mov
push
cs
stos
fadd
adc
sub
pop
cmp
xor
or
sbb
jbe
out
nop
pop
in
jne
jae
dec
mov
sbb
mov
int
mov
leave
das
or
adc
cmpsb
pop
push
addr16
dec
cld
out
or
jno
frstor
jno
test
cmp
or
inc
rcrb
out
in
fimuls
inc
out
add
or
rcr
fucomp
test
mov
adc
pop
mov
movsl
jbe
mov
sbb
in
test
in
or
popa
mov
pushf
lret
mov
movsb
adcb
shrl
in
or
lea
fsubp
fsubp
cli
lcall
cmp
jmp
mov
jae
shll
xor
sti
ljmp
loop
jb
fists
mov
pop
xor
cmpsb
jp
mov
pop
std
push
mov
mov
push
mov
adc
insb
div
lahf
or
sbb
dec
push
mov
stos
add
and
xor
out
xlat
jmp
cwtl
ret
inc
mov
pop
bnd
push
retw
jne
out
in
inc
inc
jae
inc
idivl
loop
cmc
jecxz
fisttpll
lahf
pop
sub
jae
xor
jp
adc
call
les
inc
sub
cmp
loopne
xor
adc
insb
rcr
nop
cli
into
jbe
mov
inc
in
jnp
add
adc
out
aad
das
nop
mov
test
cltd
xchg
mov
nop
js
in
lock
push
popf
or
shrb
imul
push
mov
jae
scas
xlat
movsl
lods
cwtl
shl
ss
pop
lods
bound
push
jo
and
dec
cmp
int
dec
push
sbb
fstps
push
lret
jp
sub
addr16
fwait
or
pop
int
and
sub
push
popl
push
dec
cmc
mov
psraw
pushf
cld
scas
fadds
pushf
lret
push
scas
orb
lcall
mov
pop
int
adc
out
rcrl
adc
cld
mov
xor
jp
push
cmc
mov
movb
loope
ja
xchg
mov
mov
outsl
stos
out
adc
jl
iret
jg
out
movsb
fwait
adc
fimuls
pop
mov
dec
stc
push
rcr
lea
pop
jg
outsl
dec
pop
inc
adc
lret
out
dec
cmc
test
push
or
nop
rcl
outsl
in
cmp
sbb
adc
loopne
push
jecxz
ret
fsubl
sbb
xchg
inc
loop
lcall
mov
cmpsb
jo
add
es
mov
clc
pusha
ss
dec
push
mov
pop
adc
or
mov
adc
faddl
push
pop
ds
into
sahf
xchg
pushf
fsubr
sub
adc
or
dec
xchg
dec
push
adc
popa
mov
cmp
pop
sub
jecxz
fs
loop
sbbb
or
inc
into
and
cmp
inc
loop
cmp
xchg
or
xor
movsl
xlat
jg
shl
fimull
mov
cmp
xchg
int
cld
loope
inc
add
movsl
sub
int
push
mov
pop
loope
fs
js
ja
cmpsb
cwtl
outsb
push
ljmp
shll
loope
adc
xor
sub
lock
subb
test
and
inc
out
loopne
mov
pop
shll
call
and
sti
sarl
push
imull
out
mov
aam
push
push
add
rorb
enter
dec
mov
inc
mov
loopne
jb
adc
xchg
into
fs
outsb
jmp
mov
mov
cld
mov
and
push
fisubl
loopne
cs
push
int
es
mov
add
int3
daa
add
xchg
push
ret
push
cmp
lret
sbb
adc
pop
pushf
sub
iret
adc
pop
jno
jge
xchg
movsl
movsl
dec
cmp
insb
cmc
fs
push
cmc
outsb
lcall
mov
aam
xor
jo
push
fldpi
mov
xchg
fneni(8087
or
scas
xchg
idivb
notl
mov
push
or
fwait
sub
pop
cmpsb
cmp
stos
pop
cltd
lods
mov
pop
push
lahf
pop
insl
lock
std
add
adc
sub
push
in
xor
test
movsl
in
adc
shl
jo
push
mulps
ja
sub
dec
shlb
or
push
aaa
movsl
pop
jmp
ja
dec
cmp
jns
je
loopne
jg
and
icebp
jge
push
scas
cmpsl
sbb
jb
mov
insb
mov
adc
call
bound
mov
js
adc
call
fmull
or
in
adc
lret
sbb
and
xchg
mov
and
nop
pop
in
jecxz
dec
xor
sub
mov
jae
sbb
dec
fldt
jle
xchg
dec
adc
jecxz
gs
inc
and
sbbl
push
fcoms
dec
add
insb
pop
mov
pusha
loopne
dec
insb
in
add
hlt
pop
loop
pop
test
clc
inc
dec
test
das
ret
jo
push
sbb
lods
jb
lods
jbe
fldl
mov
aaa
test
pop
daa
jo
xchg
test
inc
lods
mov
sub
rolb
cs
shll
or
mov
pop
movsb
xor
clc
jmp
xor
pop
les
dec
lock
or
sub
sahf
int
jp
jbe
mov
fdivrs
and
cmp
mov
adc
out
sbb
lods
adc
add
sub
test
xlat
jmp
enter
cmpsb
jecxz
in
test
bound
jmp
mov
movb
notb
daa
sbb
incl
mov
into
or
xchg
inc
cmpsb
push
daa
test
icebp
fstps
ja
jnp
popa
jp
out
mov
xor
in
data16
inc
sbb
mov
lcall
movsb
xchg
inc
xchg
cli
mov
lds
push
mov
mov
or
aas
xor
push
add
mov
mov
jmp
das
sub
cmc
imul
ja
std
mov
cmpsb
push
mov
subb
subl
leave
pop
xor
and
into
pop
lcall
xor
sbb
popf
push
fwait
fs
call
dec
mov
pop
mov
mov
pop
mov
stos
pushf
fwait
push
enter
jle
mov
mov
inc
push
mov
cld
adc
sarl
inc
jl
enter
fsts
mov
jmp
outsb
inc
and
sub
xchg
dec
adcb
loopne
sbbb
cli
sbb
xor
aam
out
pop
stos
sub
aas
mov
push
scas
cmc
mov
jo
lds
jae
stos
jecxz
movsb
imul
sub
mov
dec
inc
dec
sbb
test
cmp
lret
jae
rcll
jo
inc
xchg
scas
pop
mov
jb
mov
rcrl
dec
lahf
jae
cwtl
cmp
pop
mov
cmp
popf
sub
sub
mov
sahf
jo
mov
dec
sub
xchg
inc
rcr
inc
insl
int3
adc
push
out
dec
loopne
sub
sbbl
pop
or
sbb
dec
cmp
in
xor
push
cwtl
loope
dec
icebp
aas
into
xor
faddl
jbe
aas
sub
int3
cld
cld
mov
xchg
xor
add
cmp
iret
test
arpl
icebp
jno
push
mov
cli
sbb
ss
sub
dec
xchg
or
jb
pop
test
add
mov
cwtl
imul
fsubrs
or
sbb
push
mov
subb
push
jmp
pop
jmp
orl
pop
push
or
xor
bound
or
outsl
push
pop
sub
into
cmp
call
or
loopne
faddl
mov
inc
inc
xchg
test
mov
aam
inc
lret
sbb
fadds
lcall
jmp
test
hlt
loope
xchg
add
xor
mov
sub
pop
sahf
sbb
jg
enter
adc
mov
mov
repnz
mov
pop
enter
pushl
sub
lods
sti
rcrl
jns
pusha
std
gs
mov
or
sub
sahf
into
dec
out
pop
push
push
jne
fwait
mov
in
fs
mov
inc
add
mov
sbb
adc
and
lret
add
test
mov
push
lods
xchg
scas
mov
push
lods
dec
adc
xchg
or
mov
xchg
cmpsl
aad
mov
cmp
mov
mov
cmp
jo
ljmp
mov
push
cld
and
xchg
in
mov
mov
inc
mov
out
out
adc
inc
or
out
adc
rorl
jle
push
mov
xchg
mov
rcrl
test
adc
dec
sub
push
sub
or
dec
stc
fmuls
aad
enter
cmc
mov
jl
adc
add
test
cmpb
fdivl
mov
mov
or
push
mov
mov
and
push
mov
ljmp
mov
jbe
aad
sbb
push
gs
outsl
out
fsubl
and
mov
stc
cmp
cmpb
rorl
mov
ret
add
cmp
jecxz
das
in
popa
std
adc
add
pop
notb
loope
lds
mov
popa
xor
jno
icebp
mov
jae
dec
pop
js
shlb
int
stos
inc
test
adcl
pushf
jecxz
repnz
flds
inc
or
or
mov
jp
push
jl
push
jecxz
ret
fdivp
loop
pop
test
loopne
leave
cmp
stos
and
mov
call
jns
inc
dec
sar
adc
push
test
mov
clc
iret
fiadds
pushf
inc
mov
je
mov
hlt
das
add
roll
fsubrp
insb
enter
push
dec
add
sub
jmp
in
nop
sbb
aam
xlat
mov
out
das
mov
and
push
push
jno
movsb
lret
jle
stos
add
jmp
add
fists
rcrl
jnp
pop
lahf
imul
sahf
call
adc
push
imul
push
mov
gs
pop
ret
lcall
lahf
mov
adc
pop
pop
int3
ficompl
mov
mov
data16
jae
push
sub
mov
xor
dec
mov
sbb
jno
nop
scas
xchg
push
imul
out
xchg
jl
push
div
add
mov
mov
mov
test
rol
xor
bound
push
fildl
test
std
inc
int
cwtl
cli
sti
bound
stos
pop
sub
sbb
pop
int
cmp
dec
popa
inc
pop
cmc
loop
dec
gs
mov
stc
int
inc
int3
scas
addr16
into
or
xor
stos
adc
call
aas
mov
scas
mov
mov
icebp
mov
xchg
repnz
jae
mov
fnstenv
add
dec
arpl
xchg
mov
mov
adc
mov
bound
xchg
jnp
xor
push
dec
xor
inc
hlt
insb
shl
mov
clc
loope
jle
inc
movsb
lcall
rolb
aam
jmp
movsb
fiadds
xchg
adc
xlat
jno
cs
add
push
enter
call
sahf
fsts
test
or
repz
push
sbb
loope
lcall
xchg
lods
jmp
and
inc
cmc
inc
mov
pop
mov
imul
mov
mov
jle
movsl
mov
in
xchg
jo
in
or
add
adc
cmp
xor
mov
out
cli
xor
clc
adc
jle
outsb
std
lret
sbbl
mov
adc
pop
call
dec
push
push
lock
pop
imul
push
lahf
out
mov
out
push
ljmp
ret
push
mov
xchg
jp
test
xchg
add
mov
jle
mov
shll
adc
sub
popa
faddl
sub
out
movsb
adc
xchg
push
rcrb
dec
mov
orb
call
ds
push
push
xor
out
pop
icebp
stos
cld
ljmp
icebp
inc
xchg
or
add
cmpsb
repz
lret
mov
fbld
leave
test
in
jne
std
and
mov
xor
insb
ss
dec
repnz
push
call
fpatan
testb
cmp
repz
mov
dec
mov
xorl
mov
and
mov
incl
jae
dec
loope
popf
dec
xchg
mov
xchg
inc
fldcw
icebp
daa
push
in
inc
push
xchg
dec
jb
mov
out
fnstsw
sbb
add
loopne
mov
pop
lahf
or
mov
es
pop
mov
gs
sbb
movsb
outsl
mov
xor
mov
inc
cmpsb
jecxz
push
inc
bound
cmp
mov
stos
sub
adc
imul
inc
rclb
pop
js
jne
ret
popa
and
mov
ret
jnp
add
pop
push
fdivrl
jge
inc
aad
adc
push
sub
mov
stos
mov
adc
and
negb
dec
adc
cmp
push
mov
sbb
ffree
mov
ret
in
jle
add
cmp
or
jp
mov
das
fbld
int3
adc
mov
and
mov
enter
sub
je
sub
aaa
loopne
arpl
hlt
in
cli
inc
jl
stos
mov
and
cli
lea
xchg
mov
add
stos
jmp
mov
adc
and
call
test
shlb
into
xor
stos
dec
dec
cli
mov
mov
mov
int
xlat
dec
and
loop
cmp
enter
dec
aaa
mov
mov
fcomp
adc
arpl
imulb
jle
and
aam
enter
inc
jp
hlt
xchg
mov
xor
imul
sub
mov
xchg
pop
and
mov
addr16
fldenv
push
cmp
outsl
and
jecxz
int3
add
push
mov
in
out
cmp
imul
lcall
fwait
in
xchg
inc
dec
call
xchg
lea
jle
out
lahf
lahf
pop
pushf
or
popa
jo
pop
mov
lock
push
push
jo
push
xchg
ljmp
test
mov
xor
adc
push
mov
dec
xchg
and
inc
mov
lds
mov
cmp
imul
stc
push
into
lret
in
jno
clc
xchg
mov
aaa
lods
jmp
test
pop
std
pop
jmp
push
xchg
out
add
fidivs
mov
add
lret
orl
dec
or
adc
shll
xlat
dec
jmp
loopne
shlb
outsl
clc
stc
push
fcoml
dec
test
pusha
mov
jnp
mov
push
aas
xchg
ljmp
or
pusha
repnz
rolb
jge
movsb
repnz
dec
bound
push
jge
adc
mov
loopne
aaa
mov
lahf
test
add
dec
inc
adc
pop
int3
ret
sbb
inc
adc
pushf
pop
leave
dec
rorl
test
filds
lods
adcl
xor
sbb
add
mov
xor
inc
sbbl
push
cltd
lock
hlt
shlb
sti
push
xor
or
sub
pushf
fwait
sub
inc
xchg
pop
dec
stos
add
insl
popa
push
mov
je
icebp
dec
pop
cmp
or
xor
and
orl
sbb
cltd
stc
or
mov
adc
push
iretw
stos
es
adc
dec
jle
imul
pop
cmpsl
sbb
adc
pop
push
les
cmpl
mov
cmc
jle
nop
sbb
cltd
fbstp
pop
xchg
dec
or
xchg
ret
mov
fiaddl
cwtl
testl
mov
cmp
mov
call
fidivl
out
pushf
rolb
out
mov
xor
sbb
fs
pop
mov
jg
stos
add
addr16
adc
out
je
mov
imulb
aaa
mov
push
sbb
cli
adc
push
inc
cmp
add
je
sbb
sub
dec
jge
in
mov
aas
mov
cmp
fbld
lahf
sbb
inc
or
aaa
jne
loope
shll
rorb
xchg
dec
rorl
push
sarb
jl
jg
rolb
sub
stos
push
mov
repnz
and
xor
sub
out
jbe
lods
sub
call
out
aad
cmp
dec
xor
jecxz
hlt
dec
fcomi
in
adc
call
imul
out
popa
pop
adc
hlt
mov
es
push
mov
ljmp
cld
dec
adc
xchg
test
dec
fistpl
imul
mov
jle
add
xchg
sbb
enter
pop
cmpsb
popf
pushf
iret
lods
insl
mov
cmp
ds
cs
faddl
mov
mull
mov
mov
daa
jmp
aas
jo
cs
cmp
loopne
xor
sub
stc
imull
mov
xlat
shlb
bnd
out
jp
push
std
test
cmp
mov
xor
repz
or
aas
ret
push
jmp
ss
jno
dec
fistps
mov
mov
iret
mov
pop
addr16
test
xchg
ss
stos
or
cmc
jns
cmp
test
pushf
iret
addr16
add
inc
pop
mov
push
outsl
add
testb
cmp
mov
push
xor
sbb
cmc
dec
and
sar
test
push
inc
and
cmc
insl
fs
sbb
mov
mov
xchg
xchg
inc
adc
iret
cld
or
and
or
out
insb
and
add
lods
adc
ret
pop
leave
mov
mov
adc
int
es
std
pop
sub
sbb
insl
pop
es
jge
jmp
fistl
xchg
loop
outsl
mov
popf
mov
jne
push
and
mov
jp
movsb
out
xchg
mov
push
mov
push
jb
cmp
jnp
unpcklps
fcmovnb
cmp
sbb
stos
lret
test
sub
test
inc
push
cli
addr16
xchg
jo
fcmovnb
sub
arpl
fsubrl
icebp
jmp
insl
addl
mov
pop
mov
je
pop
sub
loopne
icebp
imul
or
insl
test
jle
loope
inc
inc
and
sub
jbe
sbb
jnp
lret
ja
adc
add
sub
mov
out
stc
jge
stos
jo
and
inc
push
jae
enter
pop
push
xchg
xorb
aas
cmc
or
sahf
sub
jo
xor
loop
jecxz
push
clc
add
in
fsubs
push
sbb
dec
xor
xchg
sbb
je
sbb
and
dec
jns
dec
iret
xchg
in
stos
into
je
jo
xchg
shll
cmp
mov
test
enter
or
sbb
fmuls
lret
loope
mov
ds
add
sbb
xchg
mull
arpl
ljmp
dec
sbb
dec
or
mov
sbb
adc
jl
stos
cmp
add
in
int3
test
shl
in
cmpsl
out
bound
push
shl
dec
pop
popf
lret
xor
lock
jns
pop
mov
aas
or
jo
inc
jo
popa
jmp
jecxz
and
push
imul
inc
push
inc
hlt
and
sub
inc
test
out
mov
adc
push
mov
mov
inc
jmp
mov
inc
add
xor
adc
and
add
push
out
dec
pusha
ljmp
push
push
xchg
pop
fnstsw
pop
or
pushf
addr16
mov
inc
mov
push
lret
mov
je
cmpsb
and
or
popf
xchg
pop
mov
outsb
push
or
insb
sub
or
cs
sbb
mov
sbb
pop
sbb
inc
adc
cmpsb
fcomps
ret
fdivrl
cmp
cmp
dec
sbb
cmp
inc
sbb
out
orl
gs
sbb
mov
hlt
cmp
pop
dec
pusha
mov
mov
xlat
push
lea
xchg
jg
daa
sub
sub
outsl
and
popa
mull
lret
std
mov
and
sbb
mov
imulb
cltd
mov
aam
dec
insl
insl
je
addl
and
pushf
sbb
test
cld
dec
pop
push
sub
mov
dec
mov
or
push
add
xchg
aaa
rcrb
mov
mov
inc
pop
and
xchg
sahf
xor
mov
data16
xor
enter
jg
mov
push
loopne
int
jnp
ret
inc
mov
mov
outsl
cli
js
lds
in
or
lock
sub
fcmovne
xlat
jb
push
rorl
dec
or
outsl
fs
ljmp
in
jne
mov
sub
adc
mov
mov
or
popa
and
lret
cli
insb
inc
dec
popa
cmp
add
cmpl
lahf
sahf
hlt
test
jl
fdivrp
outsb
fsubr
pop
in
fists
in
adc
push
andb
cwtl
and
int
in
daa
jle
sti
xchg
xchg
and
cmp
faddp
dec
xchg
call
lret
orb
or
jecxz
and
xlat
fsubr
ret
pop
pop
cmp
orb
mov
push
fnstenv
aaa
dec
push
ds
shll
lea
or
lret
and
dec
fistps
jp
mov
cs
xchg
jle
mov
mov
cmp
add
sbb
stos
repz
jge
mov
clc
rorl
and
mov
aas
dec
xor
cs
add
outsb
sub
jns
cwtl
aam
cli
xor
xchg
mov
mov
jns
xchg
inc
pop
mov
mov
pushf
pushl
inc
call
push
mov
test
popa
les
xchg
in
push
mov
leave
in
pop
aas
push
jl
aad
out
xchg
mov
iret
leave
imul
in
bound
push
sahf
movsl
adc
test
adcb
scas
sbb
call
jl
mov
orl
rolb
mov
in
xchg
pop
add
mov
movsl
fcmovb
mov
or
mov
lahf
inc
ds
mov
clc
xor
cmova
outsl
cld
je
in
inc
ja
mov
sar
repnz
xor
pop
imul
pop
adc
xor
ret
push
jnp
jp
mov
js
loope
bound
cli
or
shll
cmpl
shrl
mov
lods
xor
jl
xchg
leave
out
cs
pop
adc
aad
xor
jl
cmp
add
das
xor
ss
fisubs
add
cmpsb
xchg
fsubrl
addb
daa
or
or
xchg
es
mov
inc
mov
jecxz
shl
add
es
cmp
data16
inc
add
inc
mov
inc
arpl
nopl
imul
imul
out
jg
sbb
fstpt
das
cbtw
xor
sub
jo
push
or
push
adc
cmp
ja
pop
mov
pop
pop
add
in
pop
mov
pop
add
adc
test
mov
push
pop
or
stc
jmp
loop
pop
sub
lods
das
lcall
rclb
push
jo
ret
loope
stos
fisttps
sbb
mov
cs
pushf
and
adc
dec
cmp
jnp
mov
aaa
xchg
push
shrl
out
xchg
inc
inc
in
loopne
arpl
mov
iret
sbb
out
and
adc
nop
lcall
les
orl
dec
insl
cwtl
xchg
jecxz
mov
lea
xor
xchg
cwtl
pop
add
mov
addr16
pop
adc
fcmovb
adc
outsl
out
sub
or
popa
cmp
inc
xchg
push
fmull
sbb
or
xchg
and
sbb
xchg
cmc
gs
push
mov
ficoml
fsubl
sahf
xchg
push
movsb
push
xor
cmp
es
subb
dec
sub
adc
fcomip
cmp
ret
stos
test
push
xchg
push
mov
jge
add
jle
jae
xor
push
dec
xlat
pop
jp
dec
imul
int
fwait
test
mov
cmpsb
mov
mov
shl
mov
lret
sahf
ss
stc
mov
mov
scas
and
mov
inc
lods
sbb
les
dec
adc
js
mov
jle
inc
mov
xor
ror
ret
mov
sub
dec
dec
inc
cmp
mov
sub
push
loope
adc
gs
js
imul
and
cld
push
push
xchg
sbb
fstps
sarl
repz
xor
push
rcrb
adc
inc
inc
int
push
dec
clc
leave
testl
outsb
outsb
dec
pop
fildll
cmp
ficoml
popa
inc
ljmp
cld
xor
shlb
stos
in
mov
insb
mov
and
into
cmpl
shll
mov
out
shrb
shrl
aam
jp
stos
aad
inc
cmc
fwait
dec
xlat
xor
cltd
in
pusha
sbb
jo
sub
sub
mov
dec
ret
in
outsl
xorb
std
bound
xchg
ficomps
out
lret
push
sub
jae
repz
in
loopne
fistps
pop
xor
sbb
mov
das
movsb
and
mov
mov
movsb
xor
into
jecxz
mov
mov
mov
and
push
cld
jno
mov
xor
dec
add
leave
fcompl
mov
dec
and
lret
sub
mov
cli
int3
dec
jno
mov
adc
arpl
hlt
xchg
outsb
push
cld
or
inc
push
jns
or
aas
es
mov
aad
lea
aam
mov
clc
mov
xchg
mov
or
mov
dec
adc
xor
out
inc
push
orb
mov
js
aad
dec
lret
pop
loope
cmp
movsb
mov
xor
insl
pop
ja
xor
fiaddl
push
dec
mov
loope
imul
cmc
in
mov
inc
xor
cmp
rorl
mov
aad
lahf
mov
or
std
add
jge
mov
stos
pop
xchg
aad
add
push
xorb
insb
jmp
add
fstpl
mov
frstor
js
mov
pop
xchg
gs
lea
sbb
inc
mov
mov
push
test
or
sub
push
inc
mov
xor
lcall
lahf
xchg
popa
rolb
mov
outsb
es
fists
add
bound
add
adc
pop
cwtl
cmp
jmp
mov
ds
xor
out
inc
sbb
push
xlat
jle
push
out
les
mov
sahf
inc
cmp
mov
or
xor
mov
scas
inc
sbb
test
call
fcomps
icebp
ja
out
push
lea
arpl
je
mov
jbe
in
sub
mov
std
push
xor
xchg
xchg
push
jno
test
adcb
add
sub
push
dec
sahf
fidivrs
sub
or
movsb
pop
add
jl
xor
sub
sahf
ret
stos
push
xchg
test
mov
addr16
cmp
and
jo
lds
push
and
dec
push
mov
inc
subl
xchg
out
or
sub
mov
adc
inc
lret
je
fstpl
inc
fimull
imul
mov
jns
imul
xchg
inc
imul
cwtl
sbb
lahf
jns
xchg
out
int
gs
xlat
inc
dec
dec
pop
fcompl
jmp
inc
mov
dec
ror
cmp
mov
ss
fsubs
inc
sbb
jp
push
xchg
fstpl
stos
ret
mov
adc
rclb
push
cmp
xor
lret
inc
jle
pop
pop
jnp
aas
mov
fmull
dec
stc
jns
cs
mov
or
jbe
add
or
pextrw
cmp
scas
sub
sub
test
xchg
daa
lock
mov
pop
sti
jno
mov
std
jnp
in
aas
or
xlat
lret
jle
cltd
jl
cmpsb
fsts
rcrl
jmp
sbb
push
shrb
sub
jg
sbb
sub
sbb
mov
add
xchg
cmp
mov
das
fsub
divb
aad
mov
dec
test
lds
flds
iret
cmpsl
push
sub
stos
pop
xor
popf
mov
cmp
mov
dec
or
scas
fidivl
push
sbb
and
in
mov
shll
loopne
or
mul
leave
out
sub
push
and
jle
sbb
negl
and
arpl
das
add
loop
lods
insb
in
push
or
xchg
inc
in
push
rorl
cmp
mov
add
pushl
jmp
leave
sti
cmp
iret
sbb
dec
push
push
scas
mov
fadd
js
jne
mov
cmp
movsl
inc
sbb
dec
mov
add
or
xlat
popf
ret
aaa
sahf
jb
push
lock
add
pop
sahf
xor
jl
outsb
and
sub
cmp
lods
mov
adc
inc
adc
mov
movsb
sub
pop
add
push
and
dec
xchg
mov
into
add
add
mov
sbb
sti
xchg
stc
sub
test
xchg
lret
jg
nop
pop
mov
mov
in
adc
jbe
lods
pushw
jno
mov
xor
ljmp
test
jecxz
leave
pusha
push
xor
cltd
push
out
xor
loopne
sbb
inc
xchg
pop
lea
mov
in
pop
pushf
nop
sbb
xchg
call
cli
fs
stc
jmp
fwait
clc
sbb
je
mov
sbb
mov
ret
xor
data16
mov
cli
popf
iret
or
xor
stos
in
fsubrs
cld
movsl
in
xlat
sub
or
push
push
iret
add
xlat
dec
fimuls
xor
jae
mov
mov
xchg
aam
jbe
lods
pop
cmpsb
sbb
mov
testl
je
stc
call
jb
mov
loop
fldcw
jbe
adc
sbb
lds
xor
lret
xchg
out
std
push
add
pop
pushf
divl
js
or
idiv
bound
mov
les
sub
int
mov
into
shlb
inc
sbb
ja
shrl
pop
pop
nop
loopne
enter
insl
jecxz
mov
add
push
xchg
gs
loop
jmp
mov
sbb
mov
jae
out
cmp
lret
das
dec
pop
ret
aas
mov
pop
lds
stc
pushf
add
xchg
nop
js
stc
into
add
stc
mov
das
test
and
pusha
jg
int3
dec
push
and
xchg
out
icebp
stc
cs
pop
stos
adc
jae
xor
jb
cmc
inc
add
ror
xchg
or
pop
dec
push
das
in
insb
in
or
pop
aaa
mov
sbbl
lock
ror
add
shl
mov
mov
popf
out
lahf
adc
xor
cmpsb
sub
push
test
push
ja
cmp
jb
push
idivb
js
push
cmc
ds
ljmp
adc
mov
xchg
mov
mov
jno
stos
stc
and
and
sbb
and
popa
push
cmc
and
sub
test
aad
lods
add
push
push
insl
dec
cmp
sub
test
ja
jne
lcall
or
lods
ja
jae
jo
movsb
mov
out
sbbl
xlat
imul
sub
stos
leave
out
sub
dec
aam
pop
sar
dec
dec
ror
call
jp
ret
call
fsub
inc
and
orb
jae
dec
pop
dec
lea
pop
stc
dec
or
pop
dec
rorl
pusha
inc
int3
std
test
push
orb
js
push
aaa
mov
jbe
cmpsl
dec
insl
sub
dec
in
into
push
loopne,pt
jo
dec
inc
pop
ret
inc
stos
gs
add
fs
or
mov
imul
repz
leave
out
cmpsl
pop
mov
daa
pusha
arpl
mov
push
shll
adc
mov
shll
dec
lahf
inc
hlt
es
ss
jge
das
pop
push
cmp
je
cld
insb
addb
push
call
repnz
jnp
outsb
fcoml
mov
cmp
rorl
imul
xlat
pop
dec
jl
int3
std
filds
repz
push
shlb
push
subb
and
sbb
mov
in
sbb
mov
xchg
mov
or
test
out
pop
sbb
add
ss
mov
jp
push
pop
sub
push
stos
rcr
cmp
pop
rcrb
mov
push
inc
stos
pop
leave
mov
mov
and
out
gs
in
or
jg
loope
adc
mov
lods
lret
push
test
ljmp
test
icebp
cmp
test
inc
std
aad
adc
and
dec
and
jecxz
popa
sahf
out
dec
xchg
repnz
aaa
outsl
ja
leave
mov
mov
lods
jno
ss
xchg
cmp
movsl
loope
int
jle
mov
stc
pop
adc
and
stos
cltd
testl
into
dec
test
das
negl
movsl
lods
pop
mov
add
or
push
cmp
adc
cld
aad
add
jo
jno
lea
gs
xchg
mov
push
mov
pop
jle
or
das
inc
pop
jg
sbb
jge
scas
push
inc
sahf
inc
mov
int
push
mov
into
sub
mov
lret
jge
push
jne
cwtl
ret
insl
test
and
dec
aaa
mov
stos
das
push
lock
pusha
cmp
sbb
mov
das
fs
push
xor
iret
test
mov
aam
sub
arpl
add
push
and
cmp
fiadds
jge
mov
sub
adc
outsb
pop
mov
aam
and
push
in
loop
scas
sub
add
les
aam
xlat
stos
mov
addr16
pop
movsl
shrl
pop
leave
pop
lret
mov
or
call
pop
les
lods
mov
aam
notb
dec
jge
jmp
fisttpll
sub
clc
fcom
ss
mov
fwait
inc
ret
push
jae
xor
and
cld
dec
jge
out
in
shlb
out
mov
add
pop
stos
push
mov
inc
popa
inc
adc
je
or
sahf
and
out
aas
mov
subl
pop
mov
pop
xor
cmp
mov
repnz
pushf
and
sbb
pop
addr16
xor
and
push
xlat
cwtl
xchg
lds
pmaxub
test
mulb
lcall
cmp
push
adc
pop
mov
ror
cmp
fxch
cs
test
jge
sub
lahf
lock
add
js
mov
cmp
nop
sbb
aas
sbb
pop
clc
cmp
data16
jle
ret
pop
das
cmp
push
inc
data16
push
push
sysret
aas
arpl
jecxz
add
mov
push
mov
call
roll
pop
lds
pop
dec
dec
lcall
cmp
call
dec
nop
sahf
sub
pop
icebp
xor
js
pop
outsl
cmpsl
jecxz
aam
mov
popa
mov
das
shl
and
push
loop
mulb
mov
adc
lcall
sub
pop
pop
test
jl
cmpsl
pop
js
cs
sub
mov
pop
mov
or
sbb
xchg
lock
jmp
dec
mov
xor
add
ficoml
sti
fwait
mov
adc
int
int
mov
pop
lods
inc
insb
dec
cmp
pop
pop
push
inc
dec
jge
jnp
scas
and
negl
push
mov
cmpsb
mov
pop
sbb
adcl
pop
cmp
mov
fdivrl
push
push
sub
in
movsb
mov
xor
insl
dec
and
test
xor
fstpl
outsb
divl
and
dec
sbb
dec
sbb
mov
lea
in
cmpl
push
xor
arpl
add
loope
xchg
and
jne
xchg
dec
es
push
jo
cld
mov
out
das
add
push
xchg
daa
test
xchg
call
shll
fcomip
xchg
sti
mov
lret
adc
cwtl
pop
loope
cs
sbb
mov
sub
sbb
or
cmp
sbb
cmpb
sub
pop
mov
adc
incl
xlat
shlb
nop
xor
in
add
push
into
jb
rorl
mov
adc
negl
rclb
push
outsl
mov
sbb
mov
outsl
adc
jb
cmp
stos
lods
stos
ret
dec
fwait
xor
inc
sub
leave
fwait
ljmp
cmp
adc
int3
mov
es
inc
ljmp
jbe
mov
jo
inc
pop
push
push
imul
sub
std
mov
sti
jns
push
jne
pusha
push
mov
add
mov
xchg
sbb
mov
mov
movsb
push
add
mov
sub
aaa
jae
pop
shll
cs
inc
xchg
pusha
cmovge
mov
lds
loop
mov
ret
cli
fdivrp
scas
inc
adc
xor
sbb
js
js
cmp
stc
push
sbb
push
push
cmc
je
dec
mov
sahf
mov
and
shlb
mov
xor
arpl
sbb
and
jo
fidivs
dec
enter
popa
inc
aam
push
popl
push
mov
nop
xchg
mov
cmp
mov
cs
rcr
pop
or
mov
push
movsl
fiaddl
or
cmp
mov
mov
scas
ret
dec
aaa
xchg
sbb
ror
in
mov
or
sbb
jle
movl
and
lcall
adc
xchg
shlb
out
dec
fsin
in
and
sbb
cmp
adc
cwtl
xchg
jno
jmp
cmp
in
push
cltd
or
xchg
cmp
or
shrl
lock
rcrb
clc
das
mov
add
push
insb
das
lods
dec
push
pop
shll
lcall
test
pop
sahf
cwtl
js
xlat
push
jns
mov
mov
sub
stc
xor
pop
lret
test
mov
movsb
imul
mov
jmp
sbb
pop
out
fisubs
mov
mov
fistps
push
or
adc
addl
or
mov
cmpsl
mov
pusha
mov
and
fucomi
orl
flds
aas
xchg
and
dec
lahf
in
stc
push
mov
cwtl
mov
xchg
addr16
fwait
xchg
iret
mov
pcmpgtd
repnz
xchg
leave
jb
es
ret
and
sbb
mov
xor
lahf
ret
push
pop
dec
sub
arpl
mov
add
int
mov
popf
and
fbld
mov
sbb
sbb
cmp
xchg
mov
lret
pop
out
pop
sbb
inc
fs
push
adc
inc
fiaddl
jbe
push
mov
imulb
negb
cmp
dec
out
gs
sbb
jbe
push
sbb
mov
add
scas
rcll
adc
scas
adc
pop
mov
into
int
jnp,pn
cmp
inc
aad
mov
ret
frstor
cmp
add
or
cli
push
fidivl
inc
lds
inc
fwait
pop
imul
fdivrs
sub
adc
inc
and
sub
shr
xchg
loope
loop
in
jp
shlb
adcb
or
pop
mov
pop
jbe
cmp
sbb
cmpsb
cs
jle
test
mov
jno
rolb
push
shrb
cmpsl
sbbl
xor
mov
pop
jge
imul
int3
mov
mov
mov
arpl
mov
icebp
dec
or
pop
push
aas
stos
xor
or
push
add
shll
out
mov
sbb
fcmovb
sbb
cmp
add
or
pop
scas
xchg
shlb
mov
ja
out
out
aaa
push
test
int3
in
mov
loope
sbb
pusha
cmpl
push
dec
test
jg
mov
mov
xor
insl
fwait
sbb
and
cld
pop
mov
pop
std
mov
xorb
add
cmp
xorb
xor
push
jmp
cmc
test
iret
push
lret
in
mov
add
in
arpl
sahf
mov
out
loopne
add
sbb
test
jnp
xor
sbb
xchg
sbb
dec
adc
add
aaa
xor
jmp
cmp
mov
mov
sub
lcall
mov
in
test
ror
sahf
dec
cmp
rcrl
mov
rcrb
orb
and
pop
push
xor
cmc
dec
fdivs
jbe
jbe
pop
pop
jle
mov
mov
nop
cmp
push
xchg
cmp
jae
and
leave
xor
sbb
stc
sarl
push
inc
subb
hlt
add
movsb
int3
jne
adcb
push
loop
mov
pop
mov
out
sbb
dec
add
jge
fwait
mov
mov
out
clc
into
pop
icebp
jns,pt
out
mov
mov
cs
je
add
out
lds
jae
and
mov
loopne
inc
imul
cwtl
stc
push
and
push
das
popf
cltd
andl
movsb
jge
push
fsub
cmp
and
sub
xchg
xchg
mov
cmp
add
shrb
fwait
and
js
into
scas
shlb
and
into
cmp
bnd
jmp
movsl
cmp
xchg
in
xor
ja,pn
decb
lea
sub
out
add
out
test
push
mov
sub
fs
repz
xor
pop
jo
daa
push
lret
ret
mov
inc
pop
neg
mov
jae
sub
inc
adc
sub
inc
dec
mov
pushf
push
mov
cmp
insb
or
test
xchg
frstor
sub
pushf
mov
jb
pusha
or
stos
idivl
scas
sub
test
or
aad
xor
cmpl
inc
shlb
gs
mov
mov
jmp
decl
dec
shrl
dec
mov
das
faddl
jle
xor
adc
mov
std
iret
jge
pop
insb
jno
dec
out
push
sub
mov
inc
andl
cmpb
sbb
in
xchg
repz
xor
and
pop
mov
add
aas
jae
mov
mov
dec
test
xorb
add
movsb
mov
aas
ljmp
sub
outsl
mov
pop
shlb
fwait
test
jbe
mov
or
rcrl
movsb
pop
sub
push
movsb
push
inc
sbb
rorl
add
popa
sahf
fisttpll
sub
cltd
jne
setp
cmp
mov
lahf
mov
sbb
xchg
pop
fs
or
test
push
cmp
jne
lahf
repnz
int3
push
xchg
dec
xor
adc
stos
mov
insb
pop
into
xchg
push
sbb
xor
adc
push
dec
mov
fdiv
pop
movsl
int3
jb
nop
shl
lods
pushf
pop
pop
sub
sti
xchg
int3
mov
and
xchg
mov
das
jmp
fwait
xor
add
shll
xor
fwait
mov
lods
aaa
lods
popf
rcrl
aas
xchg
jbe
jb
mov
std
and
inc
add
pop
shrl
jae
test
dec
daa
popf
dec
ljmp
sub
pop
insb
push
mov
imul
push
sbb
adc
mov
mov
add
insb
fldenv
dec
out
sub
popf
test
and
dec
fwait
jmp
and
jb
std
xor
or
int
push
mov
pop
andb
fyl2x
jge
imul
fcmovbe
aaa
clc
fcoms
popf
and
lock
lret
xor
push
pop
push
mov
adc
dec
repnz
xchg
xchg
scas
outsl
repz
mov
inc
cmp
pop
sub
out
xor
xchg
outsl
clc
pop
sub
mov
push
stos
jb
mov
dec
sbb
inc
lock
add
mov
sbb
dec
stos
pop
fidivl
pop
cmpb
stc
add
lret
mov
jmp
mov
cmp
lods
sbb
insl
lahf
pop
jb
test
nop
hlt
addr16
cmc
mov
or
hlt
xchg
mov
mov
adc
push
sub
lret
imul
es
into
and
repnz
jb
pop
cmc
divl
ja
mov
and
xor
push
inc
and
fsubs
cmp
adc
inc
loopne
and
or
cmp
daa
add
popa
movsb
cmpsl
daa
cmc
into
xchg
mov
out
ficoml
pop
inc
inc
or
push
sbb
test
push
adc
arpl
dec
mov
xor
lods
jle
mov
outsl
adc
in
repz
jo
cmp
mov
sahf
loop
bound
das
call
pushf
or
lret
lock
jg
xchg
bound
xorl
int
push
adc
imul
aaa
std
in
es
fadd
dec
cltd
loop
das
push
sbb
mov
nop
cwtl
mov
dec
dec
xchg
push
imul
scas
int
pop
inc
inc
sbb
cwtl
aaa
push
hlt
in
and
push
xchg
xor
xor
mov
roll
jno
pusha
dec
push
imul
mov
mov
pushf
jge
cmpsl
ljmp
add
pop
ds
xchg
mov
mov
cmp
out
aad
sbb
mov
xchg
pop
pop
pop
les
dec
cwtl
movsb
adc
sarb
sbb
popf
mov
jecxz
clc
pop
fldl2e
aad
outsl
repz
xchg
ret
mov
in
std
in
out
scas
push
xor
rorb
add
add
mov
aaa
mov
cmp
jl
aam
rcr
mov
scas
mov
adc
sbb
cmp
sub
push
xchg
inc
outsb
push
mov
stos
andb
cli
mov
xchg
push
jb
jmp
mov
sbb
xor
dec
pop
addr16
adc
pushf
push
mov
sahf
xchg
std
push
cld
rcrb
dec
js
pop
bound
icebp
dec
add
add
push
imul
repz
loop
mov
xchg
add
jb
dec
js
fdivl
xchg
insb
scas
rclb
add
add
xlat
scas
sub
fsqrt
enter
push
jmp
jne
dec
jle
sti
mov
fwait
negb
popa
xchg
mov
jb
mov
cmp
stos
mov
es
and
xchg
popl
cmpsl
addr16
das
jle
mov
pop
hlt
mov
push
data16
imul
push
cmp
mov
mov
adc
cmp
xor
ss
and
dec
icebp
mov
daa
fwait
into
das
clc
test
jbe
jo
and
or
sub
in
xchg
outsl
enter
sqrtps
inc
daa
addr16
hlt
xlat
xor
imul
and
inc
add
aas
leave
push
aas
std
dec
jo
popa
popa
daa
ss
xchg
pusha
popf
das
sbb
mov
pop
xor
adc
js
and
pop
call
mov
jne
loop
shr
lock
fldcw
and
aad
aam
fdiv
fimuls
jo
sbb
icebp
lods
scas
jl
inc
inc
in
jmp
fistpl
xchg
xor
dec
sbb
imul
mov
jbe
pop
jne
xchg
cs
iret
imul
shlb
xor
lcall
lods
push
mov
push
sbb
fdivp
out
xchg
mov
inc
or
mov
jge
lds
inc
xchg
cmp
xor
aad
mov
pop
insb
mov
and
adc
mov
ffreep
jmp
cmp
in
adc
xchg
fwait
outsl
sub
or
mov
mov
loopne
jg
xlat
mov
scas
in
pop
or
mul
xchg
sbb
jge
xlat
out
push
jo
popa
sub
fadds
push
mov
imul
xor
sub
imul
mov
sub
push
jl
dec
pop
dec
xor
into
sub
shrb
iret
adc
push
int
and
test
or
lret
icebp
test
dec
sub
lahf
xchg
push
icebp
push
dec
mov
xor
push
mov
jae
scas
lret
sub
stos
pusha
add
pop
out
out
aam
loope
test
pop
xchg
das
xchg
inc
pop
addl
in
enter
pop
es
mov
push
loop
daa
dec
outsb
lcall
adc
sbb
lret
sbb
rcrb
aad
or
mov
add
gs
adc
inc
add
imul
dec
sti
call
inc
lds
cwtl
das
mov
clc
div
out
divb
mov
xchg
xor
adc
pusha
data16
repnz
hlt
loope
jne
not
jae
add
rcl
sar
sub
decb
cmp
shll
adc
pushf
lahf
orl
mov
push
add
xchg
addb
nop
fs
js
xchg
outsl
stos
cld
cmp
mov
arpl
inc
inc
popl
ds
adc
sub
cmp
or
xchg
aas
dec
popa
hlt
inc
pop
jnp
or
lret
adc
pop
push
and
dec
or
adc
into
jp
or
push
jne
loopne
xor
or
dec
cmpsl
aas
test
push
es
adc
and
jecxz
int
je
adc
and
push
cmpsb
popa
sti
jne
fidivs
outsl
xchg
jl
cmp
mov
punpckhwd
adcb
pop
mov
jb
mov
pxor
into
je
test
fwait
data16
cld
xchg
lds
rolb
xchg
out
pop
jns
dec
and
test
lahf
stos
rcrb
clc
test
jmp
xchg
xchg
inc
cmp
repnz
movsb
enter
jge
stos
ja
sub
mov
adc
adc
movsb
popa
push
lahf
mov
cmp
stos
push
sahf
sub
ja
fwait
or
ljmp
in
pop
add
jnp
cltd
inc
daa
sub
adc
pop
sub
jo
in
sti
pushf
cmp
xlat
adc
push
clc
inc
mull
in
movsb
mov
jno
es
push
push
mov
dec
push
test
insb
repnz
inc
outsb
dec
sbb
push
or
mov
add
mov
orl
jae
subl
daa
js
enter
adc
iret
enter
adc
lock
cmp
gs
push
mov
inc
popf
xor
shll
leave
mov
mov
push
inc
mov
das
fnstcw
test
cmp
ret
or
iret
test
cmp
lret
scas
sub
aaa
xchg
pop
push
mov
adc
aam
pop
sbb
insb
jmp
and
aad
add
int3
xchg
leave
inc
pusha
out
imul
mov
sar
les
and
fmulp
xor
bound
dec
mov
aam
jno
int3
add
lahf
jecxz
inc
outsb
xchg
jmp
in
fwait
scas
js
xchg
mov
sub
push
sahf
in
xchg
pop
popf
inc
cmp
mov
jle
inc
and
outsl
ret
in
mov
xorb
lds
xor
inc
xchg
cld
cwtl
dec
add
sbb
mov
xchg
or
ret
rol
loope
cld
mov
mov
pusha
sub
imull
mov
mov
push
sbb
pusha
faddl
push
jle
les
or
cli
outsl
ja
ret
pop
or
cld
test
lock
pop
gs
loop
or
inc
popf
xchg
shll
leave
cltd
lahf
adc
lods
or
dec
popa
add
in
or
rcpps
sbb
pop
cmpsb
jne
and
cwtl
xchg
iret
testb
mov
mov
push
jo
dec
or
into
cmp
movsl
imul
aam
jp
lret
mov
cmp
or
daa
out
lret
add
outsl
xlat
cmp
dec
test
lret
jmp
jge
mov
lds
jns
in
jge
add
negb
sarl
into
sub
aad
bound
jno
aad
loop
add
pop
sti
cli
movsb
sbb
add
negb
in
or
and
mov
sub
mov
xor
out
in
inc
fidivrl
cmp
pop
xchg
dec
jns
jo
push
out
xor
xchg
out
scas
pop
cmp
inc
mov
mov
inc
data16
cmc
test
cmp
fwait
push
outsb
lods
sub
jp
iret
popa
adc
jecxz
jns
sub
mov
xchg
movsl
jnp
jnp
push
mov
inc
insl
or
in
mov
es
jne
sbb
pop
xchg
pop
or
and
aas
push
clc
in
lahf
inc
jmp
xchg
cmpsl
xchg
cmp
stc
pop
xor
ja
jb
adc
push
fisttps
sub
push
lea
in
aad
cmp
test
ret
pushf
stos
cmp
js
jae
adc
jp
js
xchg
xor
xor
stos
out
jp
ds
subb
adc
rcll
mov
sbb
cwtl
dec
loopne
sbb
lret
sti
mov
push
sbb
fbld
cmp
out
icebp
jns
out
rcrl
mov
push
into
inc
jge
cmp
repz
insl
sbb
ror
loopne
add
dec
divl
movsl
arpl
mov
fstl
int
xor
jl
and
scas
xchg
cmpsb
loopne
test
xchg
sbb
cmpsb
xorb
mov
fwait
dec
jb
dec
fisubl
dec
sbb
movsl
and
stos
xchg
iret
and
cmpsl
xchg
add
lods
mov
es
add
rorb
pop
insl
dec
sbb
sbb
fbstp
jnp
pop
push
stos
enter
jae
or
in
xchg
rcrb
xor
pop
daa
ret
pop
sub
inc
shll
out
lahf
movsb
imul
sti
adc
mov
in
and
stos
or
iret
jge
aam
decl
mov
outsb
mov
lcall
cmp
pop
mov
xor
ss
scas
xor
das
mov
jbe
pop
cmp
xchg
and
in
add
fldcw
push
ja
jp
sub
imul
inc
out
stos
js
xlat
mov
pop
or
and
cld
xchg
adc
ljmp
into
inc
fcmovnbe
stc
mov
push
daa
jmp
out
aaa
cwtl
inc
nop
jnp
dec
dec
or
sub
jb
inc
movsb
addl
data16
dec
ss
mulb
adc
inc
fisubrs
push
mov
mov
rcrl
mov
mov
cmp
adc
sub
out
push
xlat
jle
mov
and
cli
arpl
mov
or
mov
cli
mulb
push
or
cs
sarb
jg
mov
mov
pushf
lods
inc
mov
push
testb
lods
xchg
out
push
mov
push
cltd
out
gs
inc
and
xlat
push
sub
out
loopne
sarb
rcrb
sub
mov
push
insb
xchg
dec
fisubl
sub
bound
xchg
sub
adc
test
and
jno
cmp
mov
jno
fstl
fwait
jne
test
push
int
jmp
push
dec
scas
imul
fcomps
hlt
insl
out
inc
adc
clc
mov
sbb
pop
out
je
repz
dec
repnz
daa
push
inc
or
push
xor
xchg
pop
ret
sbb
mov
movsl
or
add
movsb
lret
imul
scas
fdivrs
test
in
dec
bts
decb
jne
and
fists
cmpsl
stos
in
movsl
nop
rcll
testl
adcb
jne
stc
decb
call
test
je
or
arpl
mov
dec
iret
adc
lods
nop
inc
jns
movsb
aas
mov
sbb
ljmp
or
xlat
adc
mov
sbb
pop
jb
or
dec
lahf
inc
fsubrl
push
pop
inc
or
inc
xchg
stos
inc
shlb
sub
mov
jle,pn
out
test
sub
dec
dec
cmp
repnz
adc
ficoml
gs
frstor
aas
adc
in
sbb
mov
fisubl
push
outsb
repnz
jo
cwtl
jno
repz
cli
out
mov
imul
lods
hlt
mov
jp
inc
loope
lods
jbe
inc
sub
push
callw
mov
mov
popa
cmp
divb
and
faddp
aam
or
and
dec
pop
xchg
sub
stos
pop
lods
mov
or
fwait
in
sbb
movsb
das
inc
fcompl
mov
ret
inc
into
jns
sbb
sub
xchg
mov
sub
mov
shrb
xor
dec
dec
push
mov
jmp
mov
cmp
add
push
test
cli
ret
imul
or
and
mov
jno
fistpll
cmp
test
nop
or
xor
test
xchg
and
inc
cmp
gs
out
mov
inc
pop
adc
mov
cmp
cld
cmpsl
dec
repz
mov
sbb
sbb
repz
dec
idivl
xchg
cmpl
lock
xchg
shrb
push
pop
enter
aaa
jge
loopne
jg
jecxz
push
mov
lods
aaa
in
outsb
push
adc
pop
inc
xor
loop
add
mov
add
inc
std
loope
push
dec
xor
fstp
lods
sbb
xor
xlat
inc
mul
ret
push
cld
pop
lret
out
popa
incb
jo
andl
paddusw
push
jns
add
loopne
lods
insl
hlt
push
jae
jns
inc
xchg
and
inc
jo
ror
mov
into
aaa
repnz
test
dec
pop
call
lret
jne
nop
js
aam
mov
js
test
sub
jnp
adc
cmpsl
lods
insl
mov
dec
in
lock
shlb
mov
jae
dec
sub
xchg
aad
in
pop
pop
jne
or
pushf
mov
adc
imul
cmc
pop
jns
xchg
call
adc
aad
loope
fs
add
daa
sbb
testl
leave
push
mov
and
out
mov
lock
ja
out
mov
sub
icebp
popa
mov
cmp
int
mov
dec
lea
pop
dec
mov
and
out
pushf
int3
popf
push
dec
mov
aaa
sub
leave
fcompl
ja
out
or
mov
jle
out
movsb
push
inc
jno
in
xlat
jmp
mov
stos
push
aad
stos
mov
or
ret
jne
add
outsl
xor
fwait
mov
mov
dec
cli
int3
add
cmp
clc
in
push
pop
in
cmpsl
bound
sub
aas
jl
mov
xor
add
pop
lahf
jo
mov
pop
movsl
sbb
mov
das
xorl
cmp
sbb
sub
xchg
sub
and
adc
inc
xchg
mov
xchg
cmpsb
fists
cmp
push
fisttpll
gs
sahf
sub
push
orb
sub
movsb
sub
insb
cmp
sub
mov
cld
int
inc
mov
mov
mov
rcl
sbb
or
stos
inc
sub
bswap
sti
call
or
lds
ret
mov
dec
shlb
outsl
mov
sbbl
and
sbb
pop
pop
popf
jmp
pop
add
in
imul
pop
ja
scas
mov
cli
mov
inc
cltd
in
add
xchg
pop
dec
movsb
fimull
jl
mov
cmp
add
sbb
mov
gs
mov
iret
scas
add
ss
mov
iret
mov
adc
dec
call
inc
cmp
and
pop
jnp
hlt
xor
aaa
inc
xchg
mov
pop
push
dec
push
xor
in
mov
cltd
fisttpl
pop
nop
jns
imul
dec
push
ljmp
sbb
bnd
into
adc
jg
imul
xor
sbb
mov
sahf
push
rol
jecxz
rcrb
mov
xor
xor
inc
out
gs
pop
ljmp
cmp
clc
xchg
outsb
pop
outsb
outsl
repz
add
cmp
test
mov
ret
xor
push
push
loop
ficompl
test
pop
push
add
adc
xor
loop
out
sbb
in
and
fildll
xchg
fsub
fidivrl
lret
loop
mov
nop
adc
jmp
outsb
mov
mov
inc
je
ds
loope
add
outsl
cmp
cmpsl
and
ror
addr16
test
jne,pt
popf
dec
std
addr16
pop
sub
and
fstps
add
push
push
testb
out
jl
cmpsb
dec
fidivs
pop
or
mov
pop
sub
sbb
xor
cld
out
aam
cmp
mov
jp,pn
jmp
pop
flds
cmpsb
fs
test
dec
mov
pop
subb
aas
mov
dec
add
je
mov
mov
jne
mov
jne
mov
popa
sbb
jl
imul
mov
ret
fcomi
orl
test
movsb
cmp
and
dec
movsl
cli
adc
shll
xchg
mov
lock
push
and
pop
mov
outsl
jae
dec
ja
dec
ljmp
adc
je
fiadds
out
xchg
xchg
dec
lahf
loop
in
jl
fisubs
popa
cmc
insl
xor
jp
icebp
mov
sub
lods
xor
and
jg
push
shr
push
arpl
dec
mov
xor
jae
inc
into
cmp
sahf
ficoms
popa
lods
add
cmc
mov
pop
ja
cmp
loop
cmp
out
in
push
xchg
sub
jne,pt
xchg
or
inc
cmpl
or
int
mov
loope
lahf
pop
in
fcmove
mov
jnp
push
xchg
mov
stos
cmp
int3
lahf
jae
xchg
add
xchg
pop
ret
jg
adc
fstps
add
xchg
xchg
pusha
mov
jmp
xchg
nop
orb
jbe
jmp
or
sbb
je
pop
div
adc
jmp
mov
sti
lahf
adc
jns
and
sbb
or
mov
xchg
and
jmp
repnz
test
sub
inc
push
insl
sub
pop
push
add
cmp
insl
subl
cmp
mov
mov
push
cmpb
cmp
icebp
cmp
or
or
push
adc
xor
cli
dec
fldl
in
cmp
cltd
or
test
les
rolb
andl
rcll
stos
mov
sub
outsb
fstpl
jecxz
push
stos
ret
lahf
es
rorb
push
inc
jecxz
addr16
stc
xchg
subl
cmpsl
jecxz
bound
stos
fwait
jge
cmp
xor
les
sub
insl
ljmp
dec
cmp
dec
sbb
aam
sub
cmp
jbe
fnstsw
pop
add
xor
cmp
and
cmp
push
fsub
push
fidivs
test
mov
jp
enter
mov
sub
es
jmp
mov
add
fsts
lods
sub
repz
ljmp
fisttps
sbb
jl
adc
jl
outsl
xor
jge
and
sub
add
dec
xlat
mov
dec
mov
lock
dec
std
repz
xchg
lea
push
adc
lret
xchg
push
mov
jecxz
adc
js
fcompl
sub
mov
or
cmp
fisubrl
jmp
mov
mov
addb
insl
jnp
mov
cltd
pop
in
push
xchg
xchg
je
data16
sbb
aas
ret
flds
mov
push
out
test
out
and
ss
xor
jge
add
sub
push
fsubl
jle
inc
and
xor
outsb
lahf
int3
lcall
imul
test
xchg
jmp
daa
sbb
nop
jmp
or
cmpl
es
in
mov
jp
adc
adc
xor
sbb
jbe
cwtl
js
rcll
inc
insb
ljmp
push
xor
jo
int
mov
in
fs
xor
jno
lods
push
add
cli
push
loop
ffreep
pop
sbb
aas
push
outsl
out
xchg
adc
mov
push
cmp
aad
stc
or
jecxz
dec
test
cwtl
dec
push
cmp
je
scas
aam
dec
loope
ss
idiv
out
sbb
mov
sti
rorb
fcomps
mov
ret
jb
dec
push
ss
sahf
aam
dec
repnz
mov
mov
int3
je
aad
and
dec
daa
movd
or
fcompl
repz
lods
daa
test
jecxz
push
or
cli
adc
fs
mov
aam
dec
out
dec
push
fstps
push
repnz
lds
push
fdivs
mov
cmpsl
mov
mov
lods
jae
rcrl
jp
stos
dec
enter
test
pop
mov
int
mov
pop
fsubs
popa
in
jb
jnp
imul
adc
icebp
fs
inc
mov
mov
push
mov
fnsave
fstpt
adc
aas
push
cwtl
xchg
fisttpl
pop
or
neg
mov
popf
cmp
xchg
add
cld
push
push
push
mov
cwtl
sub
sbb
cmp
mov
in
cmpsl
loope
pop
jmp
add
pushf
orb
mov
out
rolb
stos
cmc
nopl
popa
add
stc
scas
stos
dec
push
fldl2e
sbb
pop
adc
es
icebp
aad
daa
inc
cmc
add
ja
test
adc
adc
test
ret
aaa
add
or
lret
jmp
add
jmp
js
inc
aaa
jg
std
stos
cmpsb
push
rcl
xor
cmp
and
lock
mov
into
adc
inc
xchg
and
sbb
out
lock
mov
dec
pop
xchg
dec
rcrl
bound
ret
shlb
cmp
mov
pop
sti
push
lret
daa
cmpsb
add
add
xchg
push
jl
cmp
dec
inc
nop
fdivr
test
inc
add
shlb
cmpsl
sub
pusha
xor
mov
cld
sub
loope
test
hlt
popa
cltd
insl
pop
rorb
test
insb
sahf
or
into
dec
stos
rcll
loope
dec
sub
ds
sahf
jge
and
ja
das
cmp
fidivl
das
je
push
rcr
cmp
rorb
scas
cld
cli
mov
push
into
imul
repnz
pop
push
push
int
xchg
lods
lret
sbb
or
add
pop
lods
jecxz
mov
into
out
fwait
add
clc
pop
js
jle
fists
not
clc
and
pop
pop
xchg
lret
cmp
cmp
clc
imul
mov
xor
xor
inc
shrb
lods
push
push
cs
sub
add
js
leave
outsl
xchg
ret
sub
ds
nop
pop
jae
cmp
dec
jo
je
popa
xor
imul
movd
dec
mov
add
xor
xor
mull
sahf
fsubr
mov
movsl
mov
sbb
mov
cs
adc
rcll
leave
shr
mov
icebp
inc
or
fwait
mov
xchg
dec
popa
jne
rol
test
inc
ret
lods
mov
stos
mov
lret
pop
stc
cmp
xor
jo
in
int3
out
inc
es
or
lods
lods
or
aaa
cltd
stc
cld
test
xchg
aaa
push
lret
mov
ss
fwait
pop
and
pop
push
int3
xor
mov
sahf
movsb
push
outsb
adc
or
dec
sbb
cmc
xchg
and
xchg
loop
insb
or
sub
cmpsl
xlat
std
mov
mov
outsb
cltd
adcl
and
inc
shr
stos
fistpll
push
rorl
and
push
sub
stc
jmp
xchg
and
fstpt
leave
movsb
pop
jne
inc
sti
adcb
inc
loop
imul
sub
push
ret
scas
adc
fisubs
sub
mov
imull
push
push
jnp
test
mov
scas
aas
in
add
jmp
fstps
cmp
gs
xchg
xor
push
ror
cltd
lds
cmc
in
dec
sub
dec
test
movsb
bound
mov
es
cmp
pop
outsl
sbb
bound
xlat
pop
inc
mov
cld
mov
sub
mov
ja
dec
ljmp
push
dec
int3
scas
jecxz
push
lcall
sub
or
xchg
les
incl
das
jns
sahf
jne
out
stc
lock
cmpb
pop
lcall
nop
stc
mov
test
add
pop
sbb
out
test
add
ss
sti
lret
cmc
pop
bound
sbb
sbb
and
data16
mov
call
iret
std
mov
pop
push
push
enter
aas
pop
inc
test
lods
lcall
or
lret
mov
pusha
add
and
loop
xchg
or
into
mov
lcall
sub
jg
pop
mov
sbb
push
shll
ja
js
xor
inc
stc
cltd
inc
outsb
or
jp
shl
add
xchg
mov
and
inc
add
shr
pop
sbb
cmp
pusha
pop
cmp
cli
xchg
xchg
mov
outsl
repnz
and
int
inc
aas
adc
sbb
adc
jbe
pushf
call
add
mov
fcomps
jnp
imul
aad
loope
insl
pop
andb
mov
out
mov
lahf
cmp
jecxz
mov
mov
sarb
ret
dec
pop
sbb
std
incl
jnp
dec
lret
cmpb
fisttps
outsb
add
loope
jnp
ds
fistpll
jle
mov
js
lea
sbb
push
and
subl
loop
sbb
mov
xchg
int
mov
shld
fdivs
mov
mov
rcr
cmp
pop
mov
sbb
fs
cmp
adc
mov
ljmp
ret
or
xchg
stos
mov
lods
dec
mov
int3
negb
push
test
mov
test
popa
imul
xchg
mov
ret
jge
pop
pop
test
push
mov
iret
xor
jnp
push
push
psubd
push
test
cli
in
aad
int3
ja
sbb
sbb
pushf
mov
pushl
sti
fidivrl
fidivrs
popf
xchg
fwait
out
pop
inc
mov
sahf
cld
adc
call
inc
fdivrs
xchg
test
mov
stc
xor
dec
shlb
add
ds
fldcw
mov
out
les
xchg
or
repz
stc
dec
push
shr
cs
dec
out
xchg
xlat
dec
xchg
or
movsl
es
push
sti
in
mov
sbb
mov
fidivs
pusha
ss
jae
stc
xor
xor
jle
inc
test
inc
push
lret
int
xchg
pop
pop
loop
mov
or
xchg
aas
push
fs
pop
movsb
xchg
mov
xchg
dec
and
xor
and
sarb
mov
shl
sub
cmp
fstl
negl
dec
mov
xor
and
data16
testl
push
xchg
js
xchg
shr
push
pop
jb
xbegin
pop
ljmp
stos
lret
xor
add
jae
cmp
push
jl
sbb
dec
daa
mov
js
dec
and
dec
enter
arpl
push
sbbb
mov
clc
inc
cmpsl
pusha
mov
maskmovq
idivl
data16
cs
outsl
shlb
test
and
inc
jno
loop
stc
mov
in
mov
xor
sub
mov
adc
or
int3
dec
daa
dec
std
push
xchg
cs
mov
jns
rclb
fcmovnb
insb
mov
mov
pop
xor
xor
add
dec
push
xor
pusha
fisttpll
nop
mov
in
mov
not
mov
dec
ds
pop
mov
mov
add
dec
loopw
dec
cli
es
mov
add
ret
dec
ja
xor
add
dec
lds
adc
mov
dec
cmpsb
ljmp
pop
jno
in
repnz
das
fstps
push
lods
dec
lods
xorb
pushf
ret
jo
rcrl
cwtl
fsub
and
in
data16
sub
stos
jmp
test
and
imul
push
mov
mov
add
mov
stc
mov
inc
cmc
lret
adc
xor
aas
repnz
imulb
jge
imul
int3
pop
out
out
lahf
jecxz
nop
dec
push
and
pop
sti
cwtl
test
adc
and
rolb
test
mov
mov
cwtl
stos
dec
xchg
xor
inc
sbb
xor
loope
pushf
dec
out
ror
sbb
push
jb
jl
out
ja
test
sbb
sbb
inc
addr16
or
cld
jmp
xlat
xor
jge
popa
dec
aas
shlb
pop
enter
repz
pop
xor
aad
dec
xchg
imul
mov
fldcw
movsl
sbb
dec
mov
cmc
fdivr
adc
test
inc
test
jl
pop
adc
inc
or
or
jecxz
inc
mov
inc
fdivs
push
out
sahf
out
imul
or
pop
rorl
jecxz
mov
js
adcl
cs
sbb
sti
subb
adc
test
fs
add
fstpl
inc
aad
popa
out
pop
out
mov
jnp
sub
sbb
dec
add
ret
mov
push
push
add
mov
xchg
sbb
stos
popf
xlat
test
in
fsubrl
mov
mov
xor
pushf
stos
or
push
adc
pop
out
sub
loope
adc
push
std
push
inc
pop
mov
xor
add
and
xchg
je
xor
movsb
xchg
ljmp
xor
popa
movb
lds
mov
xchg
je
pop
jno
pop
cmp
and
cmp
xor
js
arpl
inc
ds
sub
or
arpl
rcll
fstl
mov
out
sahf
sub
cs
pop
pusha
rcrb
and
mov
movsl
rclb
loope
xchg
inc
xchg
ficompl
mov
xor
subl
adc
cmpsb
and
das
bound
arpl
test
rcr
rol
mov
clc
adc
pop
inc
repz
mov
mov
dec
pop
inc
or
jb
je
xchg
sbb
pop
adc
ss
xor
pop
mov
sub
inc
cmp
imul
lret
inc
jmp
inc
idivl
inc
lock
dec
bound
mov
push
mov
or
mov
aaa
js
lods
xchg
mov
andb
mov
jno
fistpl
or
enter
xchg
gs
cmpsb
movsl
loopne
dec
sub
sub
rorb
es
xlat
cmp
pop
cltd
xchg
movsb
push
fwait
imul
std
ret
testl
mov
ret
xchg
mov
xlat
loope
or
push
add
mov
xchg
outsl
shrb
addr16
bound
cltd
stc
jb
mov
adc
xchg
jno
scas
movsl
mov
mov
mov
sti
xor
cmpsb
in
push
cmp
jmp
mov
stc
fisttpl
push
adc
call
pop
aaa
dec
add
inc
xchg
es
js
xchg
dec
xor
clc
adc
mov
scas
test
xor
sub
xchg
cs
pop
js
xchg
or
iret
add
xchg
stos
dec
or
ja
mov
popf
js
push
xchg
movsb
inc
add
stc
int
repnz
out
icebp
sahf
jo
adcl
xor
xchg
repz
pushf
sahf
movsl
inc
lcall
je
inc
in
sub
mov
rol
popf
jp
aad
bnd
stos
jno
out
jnp
rorl
mov
jae
sub
jo
adc
imul
xorb
sub
cltd
rcr
dec
cmpl
pop
sahf
pop
push
fimull
jge
lahf
cmp
mov
ss
sbb
push
add
orl
dec
inc
insl
inc
pusha
lret
pusha
inc
pop
jp
xchg
shrb
outsl
and
les
insb
sbb
xchg
loope
std
mulb
lcall
mov
mov
int
xchg
gs
adc
cmpsl
inc
lods
jmp
mov
pop
adc
shlb
xor
arpl
sub
inc
mov
push
movsl
pop
shll
pop
ret
ss
xor
lods
pushf
pop
push
mov
cmc
mov
mov
aas
icebp
jo
sti
or
das
es
pop
popa
ret
cs
shlb
sbb
in
jae
jmp
cmp
xor
mov
push
gs
mov
cwtl
add
cmp
cmpb
inc
ret
clc
shll
and
mov
scas
or
mov
cmp
pop
pop
pusha
bound
scas
in
pop
out
xchg
shlb
aas
ret
fs
pop
or
orb
xchg
cmp
cmpsb
out
les
out
pop
int3
cmp
xor
xor
xchg
sbb
movsb
jmp
int3
in
repnz
sbb
adc
jne
iret
out
adc
dec
mov
dec
add
div
pop
mov
mov
stos
jle
push
and
clc
or
into
movsl
xchg
insb
xor
xchg
ljmp
jno
push
pop
ret
xlat
push
xchg
adc
adc
lods
pusha
xchg
mov
xchg
ljmp
les
xchg
lret
adc
jo
xchg
mov
jae
or
or
roll
leave
adc
js
push
add
setge
mov
pushf
sbbb
in
dec
or
mov
stos
lret
pusha
fwait
mov
mov
out
outsb
jmp
mov
ret
mov
in
adc
inc
iret
mov
dec
adc
pop
outsb
lock
insb
mov
aam
mov
push
add
popa
adc
mov
push
popa
loopne
dec
sbb
cmp
movsl
mov
das
sbb
push
inc
jne
and
ss
subb
mov
mov
pop
or
add
sub
fildl
sar
and
xlat
jecxz
pop
shl
arpl
sahf
sbb
inc
shr
fisubl
insl
pop
or
pusha
cmp
push
jnp
mov
movsl
les
mov
mov
xchg
shlb
fcoml
cmp
mov
adc
add
push
je
mov
ss
aaa
es
mov
dec
rcrl
addl
jp
mov
mov
lret
shrl
lcall
mov
and
add
cmpsb
xchg
arpl
fisubrs
gs
push
sbb
stc
push
je
push
adc
mov
sub
jle
or
sbb
aad
dec
test
sarb
adc
xchg
jbe
ficompl
cltd
lds
pop
add
push
movsb
sbb
imul
ljmp
inc
cmp
fwait
mov
loope
jmp
push
imul
or
inc
push
popa
clc
rclb
ficoms
int3
adc
jnp
jo
push
int
roll
adc
or
or
fsubs
cmp
adc
lret
add
jp
cwtl
jb
dec
test
adc
addr16
add
mov
aas
pop
sub
subl
push
stos
insl
sbb
clc
cmpsl
sub
ljmp
cmc
cltd
pusha
cmpsb
adc
xchg
in
pop
add
jle
jl
aam
movsb
jp
lret
jge
cmp
lret
aas
mov
jge
cmpsb
fcomps
xchg
cmpl
mov
add
addb
stc
sti
adc
jle
mov
sub
mov
cmpsl
mov
cs
aad
sbb
repz
inc
sbb
or
add
std
cwtl
sub
out
or
ret
dec
cwtl
sub
aaa
or
stos
jle
popa
adc
in
sahf
rcrb
jo
jb
push
pop
mov
movsb
jg
xchg
jbe
lahf
fsubrl
mov
adcl
mov
loop
filds
pop
xchg
mov
scas
cmp
inc
pop
and
push
out
test
bound
fcompl
lods
lods
push
mov
hlt
cld
adc
pop
and
in
in
data16
lea
out
lds
push
fsubrs
scas
pop
clc
cwtl
sbb
lds
dec
xlat
add
fcomps
xchg
xor
arpl
mov
dec
pop
jl
and
dec
push
xor
mov
push
inc
dec
xchg
in
pop
outsb
stos
adc
push
sbb
push
xchg
or
cmp
sbb
pop
push
adc
push
fwait
sti
cmp
clc
jmp
jp
sub
mov
sbb
xchg
xchg
and
cli
dec
xchg
mov
in
jno
aam
sarb
in
or
sbb
lods
imul
xor
pop
mov
and
ds
xchg
lock
aad
jmp
sbb
out
xchg
add
les
rolb
mov
mov
ret
test
in
push
xchg
stos
sub
mov
cmp
push
push
push
inc
push
jb
add
negl
int
or
pop
aad
in
pop
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
and
call
dec
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
mov
pop
mov
add
push
push
push
pop
pop
pop
sub
add
pushl
mov
pop
add
xor
mov
xor
mov
sub
push
jle
mov
pop
push
popl
sub
call
mov
jmp
mov
pop
sub
mov
cmp
jne
push
call
div
fs
xchg
mov
pop
pop
jmp
call
cmp
jle
sub
mov
mov
jmp
jae
test
mov
outsb
arpl
xor
xchg
jg
sti
test
cli
lods
push
pop
push
loopne
in
pop
pop
ljmp
cmp
ljmp
xchg
bound
pop
pop
push
cmc
jb
push
add
inc
or
xchg
pop
jmp
pop
inc
mov
push
out
out
aas
mov
adc
cld
in
pop
sbb
jge
xchg
mov
test
aaa
shr
push
out
ljmp
aas
inc
xchg
xchg
scas
jbe
mov
dec
mov
in
lret
sub
out
loop
mov
adc
imul
xlat
sahf
shlb
pop
das
fistpll
mov
jb
in
pop
pop
push
nop
jo
out
inc
inc
jmp
pop
decl
stos
xor
jmp
sub
sahf
jmp
test
orl
xchg
mov
mov
xor
cmp
mov
sbb
mov
cld
sub
jns
jecxz
mov
movsb
es
push
or
aas
lret
xor
jb
out
pushf
pop
ss
mov
in
outsb
js
xchg
cmp
xor
aaa
jge
fs
push
shlb
jecxz
mov
jb
dec
jns
mulb
orb
and
jns
cmp
jno
xor
aam
pop
and
adcl
insl
add
mov
and
ja
out
testl
inc
lret
pushw
inc
jp
loope
out
cmpsl
jbe
mov
sbb
aad
mov
mov
cmc
femms
inc
js
push
icebp
jbe
loopne
aad
xor
jbe
pop
or
sti
bnd
adc
mov
mov
mov
shrl
fstp
mov
adc
push
notl
push
push
imull
push
sbb
pop
imul
inc
incb
iret
mov
cmp
sti
or
mov
mov
ss
sbbb
pop
inc
sbb
dec
sarl
stos
shl
cmpsl
mov
test
fistps
jl
mov
mov
mov
cmp
sbb
and
cld
adc
sub
sbb
pop
cmp
pusha
aam
sub
push
testb
jg
or
int
sbb
push
ret
push
aad
movsb
cltd
loopne
xor
sbb
frstor
fstp
sbb
stos
mov
fcmovnu
mov
fildll
mov
fists
sbb
fisttpll
sbb
or
mov
and
fisttpll
sbb
aaa
popl
stos
xchg
sbb
push
add
fisttpll
sbb
xor
add
sbb
aam
inc
mov
mov
fists
inc
pop
nop
fisttpll
fsubrs
push
int3
xor
lcall
push
add
fisttpll
mov
jb
lea
fists
cs
out
sub
push
cli
cs
inc
sub
fisubrs
mov
dec
lcall
in
push
mov
xchg
lea
fisttps
mov
sub
push
add
push
add
fisttpll
mov
sbb
loop
push
rcrb
add
sbb
aam
inc
nop
lea
fists
inc
inc
mov
aaa
repnz
fimuls
daa
fisttpll
sbb
aaa
lret
mov
sbb
frstor
mov
fisttpll
sbb
push
lcall
es
sbb
push
xchg
fisttpll
shlb
das
cwtl
pop
lods
and
jbe
pop
cld
pop
fisttpl
shlb
lret
adc
fisttpll
mov
in
popf
mov
rolb
sbb
pushf
ss
fcompl
in
and
jno
inc
rol
lods
iret
dec
sub
repnz
ror
mov
add
clc
je
mov
pushf
push
nop
fucomi
and
jno
inc
rol
lods
sub
cltd
movsl
fdivl
je
mov
pushf
push
nop
fucomi
and
jno
inc
rol
lods
sub
lret
sub
jg
push
adc
pushf
out
xor
shlb
fisttpll
sbb
pushf
ss
pushf
push
nop
fucomi
cmp
cli
fildll
xchg
adc
rorb
lret
sub
aad
out
inc
pop
mov
dec
push
sub
adc
mov
inc
mov
sbb
xchg
dec
push
and
cltd
cmpsb
fmull
push
daa
push
notl
dec
lods
mov
inc
mov
and
ret
push
imul
mov
fists
jl
lock
mov
sbb
fmull
sbb
pop
ss
adc
pop
negb
or
adcl
inc
inc
mov
mov
fisttps
push
or
outsb
push
out
mov
hlt
fnsave
ss
outsb
mov
xchg
sbb
push
sti
js
xchg
or
scas
out
mov
repnz
lcall
in
popf
push
fcoml
and
test
mov
pushf
mov
xchg
jg
rclb
and
sahf
sbb
pop
cmp
out
sahf
jmp
fstps
dec
jo
inc
test
mov
pop
js
and
dec
in
std
sub
xchg
mov
out
cwtl
sub
mov
mov
mov
mov
mov
mov
mov
fists
sbbl
fistps
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
filds
jle
call
jmp
add
dec
push
add
es
xor
xor
rcrb
ss
in
cvttps2pi
ja
mov
and
orb
cmp
mov
je
fstpt
xchg
fidivs
dec
aas
fwait
insb
cltd
stos
icebp
jge
fsubs
js
mov
jmp
xor
sbb
and
gs
popa
mul
and
adcl
push
out
aam
xor
push
mov
mov
in
shrb
inc
mov
in
inc
hlt
lock
insb
dec
daa
push
popf
jae
mov
pop
cmp
pop
cwtl
sti
mov
icebp
push
sbb
and
push
sbb
dec
lock
stc
push
push
xchg
push
push
std
push
mulb
call
add
push
clc
shlb
std
test
js
fstl
lahf
jp
fildl
mov
ret
in
fstps
jp
push
jg
pop
sarb
sti
into
mov
xchg
or
sub
inc
rcll
add
popf
ror
cmp
cmpl
aad
add
adc
mov
adc
cmpsl
jns
out
jp
fwait
lahf
inc
cmpsl
jmp
dec
pop
ds
add
pusha
inc
addl
mov
rorb
push
ds
jle
pinsrw
mov
add
mov
sub
addl
mull
in
mov
sub
push
sar
jl
in
push
lods
cmp
adcl
loope
xchg
jno
outsl
ss
ret
sbb
lcall
pop
mov
std
aam
sbb
add
push
fisubl
xchg
mov
jbe
mov
fldl
sbb
and
leave
add
push
mov
mov
add
xlat
mov
outsb
or
and
lds
mov
push
push
fidivrs
aad
mov
inc
mov
jae
pusha
cmp
add
sarb
adc
and
clc
push
fidivrl
std
sbb
sahf
mov
xlat
mov
test
lret
scas
arpl
or
aam
filds
add
and
and
or
setbe
mov
lock
les
out
mov
aaa
sahf
hlt
and
outsl
sub
std
rcrb
mov
aam
inc
and
jno
cmp
cwtl
xchg
jb
clc
addl
cltd
icebp
loope
or
scas
jnp
dec
enter
mov
and
add
add
add
lods
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
add
add
lods
add
add
lods
add
add
lods
add
add
lods
add
add
lods
add
add
lods
add
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
lods
add
add
lods
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
movb
lods
xchg
add
call
popf
add
fcmove
add
sahf
push
add
mov
add
std
sti
add
xchg
dec
add
cwtl
push
add
clc
repnz
mov
dec
add
mov
add
test
dec
add
scas
pop
add
ret
test
idiv
std
add
incb
outsb
fnsave
mov
lahf
xchg
pop
xchg
dec
add
mov
jo
pop
aam
add
incl
incl
hlt
cld
cld
add
xchg
dec
add
lods
pop
add
mov
addb
int
add
popl
sub
add
cld
stc
add
cmpl
pushf
xor
add
stc
repz
mov
pop
add
mov
std
add
test
in
mov
xchg
sub
adc
pop
add
cli
cld
add
idiv
add
mov
add
scas
pop
add
xchg
cmp
xchg
mov
add
lock
add
leave
mov
add
stc
hlt
add
xchg
daa
add
lahf
aas
add
stc
cld
add
idiv
add
movsl
dec
add
in
add
fmulp
add
leave
mov
add
out
out
adc
add
lcall
out
hlt
add
cltd
xor
lret
mov
add
jo
add
fsubp
add
fsubp
add
imul
mov
jge
push
addr16
add
fmulp
add
loope
add
lret
mov
add
into
rolb
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
or
add
adc
add
pop
pop
add
sub
cmp
cmp
inc
inc
inc
add
push
add
pop
add
add
js
test
xchg
add
stos
stos
add
rcl
rolb
fiadds
jmp
jmp
clc
clc
clc
add
sti
incl
movsb
mov
rolb
lret
add
add
add
add
jl
add
fwait
add
add
add
add
add
incl
dec
dec
incl
insb
insb
incl
nop
nop
incl
mov
incl
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
incl
insb
popf
incl
nop
mov
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
incl
dec
ret
insb
into
incl
nop
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
incl
dec
incl
insb
incl
nop
incl
mov
incl
add
sub
add
add
jl
add
fwait
imul
add
xchg
add
lock
add
mov
dec
inc
add
add
jmp
add
ds
add
add
jl
add
fwait
xor
add
inc
add
lock
add
insl
add
test
insb
lcall
add
add
add
add
jl
add
fwait
add
add
add
add
add
and
and
dec
decl
insb
ljmp
call
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
insl
jmp
test
dec
add
call
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
jmp
ret
add
ljmp
call
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
jmp
add
add
add
bound
add
add
inc
inc
popa
pop
add
push
pop
pop
push
add
add
add
add
pop
add
pop
pop
pop
pop
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
inc
inc
inc
dec
dec
dec
dec
cs
dec
dec
dec
add
xor
cmp
cmp
ds
inc
inc
inc
add
sub
xor
xor
xor
add
sbb
and
and
add
sbb
push
add
add
add
and
push
add
add
sbb
sbb
pop
sbb
add
add
adc
adc
push
pop
sbb
adc
sbb
add
or
push
or
or
or
push
add
sldt
add
pop
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
sahf
cmp
sahf
cmp
cwtl
jp
mov
fmulp
stc
hlt
stc
hlt
push
icebp
mov
add
add
push
fcmove
decl
addr16
decl
addr16
push
fcmove
pushl
add
add
push
fcmove
call
jo
call
fsubp
call
fsubp
decl
imul
repnz
mov
add
add
mov
out
repnz
call
jne
decl
lcall
out
hlt
decl
cltd
xor
adc
push
fcmove
cli
out
out
shlb
add
movsb
xchg
stc
hlt
call
xchg
daa
call
lahf
aas
push
stc
cld
jmp
sti
lcall
movsl
dec
decl
pushf
xor
call
in
in
fmulp
mov
add
add
add
add
test
in
mov
xchg
sub
adc
pop
push
cli
cld
in
idiv
pushl
mov
ljmp
scas
pop
call
xchg
cmp
xchg
mov
stc
lock
std
mov
cld
stc
lcall
cmpl
pushf
xor
incl
jl
ljmp
incl
jl
aaa
mov
pop
jmp
mov
std
mov
add
add
add
add
lcall
xchg
dec
jmp
lods
pop
pushl
mov
cmp
int
decl
mov
pushl
mov
push
sbb
ds
mov
add
add
add
add
push
fcmove
push
cld
cld
push
fcmove
mov
add
add
add
add
lcall
xchg
dec
call
mov
jo
pop
aam
std
std
ljmp
mov
cmp
dec
mov
add
add
add
add
call
test
dec
jmp
scas
pop
aas
ret
test
idiv
std
cli
ljmp
mov
inc
ret
cmp
pop
test
mov
add
add
add
add
mov
std
sti
push
fcmove
call
xchg
dec
jmp
cwtl
push
jmp
clc
repnz
aas
mov
dec
lcall
xchg
dec
push
fcmove
std
sti
dec
mov
incl
add
add
add
add
mov
inc
mov
push
call
push
fcmove
lcall
sahf
push
lcall
sahf
push
push
fcmove
push
call
popf
inc
mov
mov
jns
les
push
call
push
call
xchg
inc
lods
xchg
mov
add
add
lods
xchg
mov
lods
xchg
inc
lods
xchg
inc
lods
xchg
mov
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
test
mov
add
push
add
addb
call
test
aam
les
mov
movsb
pop
add
add
fsubrl
shlb
add
mov
add
call
les
and
lods
add
insb
add
les
nop
mov
dec
add
add
aam
add
enter
in
add
insb
add
pushf
add
adcb
js
pop
movsb
add
add
les
sub
pushf
add
js
mov
lods
xchg
add
aam
add
lods
add
addb
les
and
mov
add
int3
mov
sub
mov
in
add
hlt
hlt
add
je
fdivl
add
shlb
les
add
mov
pusha
add
mov
nop
add
mov
add
test
add
rol
add
push
add
mov
loopne
add
rolb
js
enter
js
and
enter
mov
sub
test
in
loopne
add
fadd
add
shrb
add
call
js
and
mov
add
int3
add
loopne
add
int3
pushf
add
js
int3
mov
fadds
loopne
fadds
adc
mov
add
enter
loopne
add
fdivrs
add
call
rolb
clc
hlt
hlt
add
rclb
cmp
test
clc
loopne
add
lock
cmp
add
incl
add
cmp
cmp
add
add
push
insl
insl
push
cmp
cmp
push
outsb
outsb
outsb
je
cmp
inc
push
push
dec
imul
add
add
xor
adc
insl
sbb
add
fs
cmp
insl
insl
cmp
add
inc
xor
push
dec
dec
dec
dec
pop
push
or
insl
sbb
je
pop
insb
or
pop
pop
pop
pop
push
pop
imul
pop
cmp
push
pop
insl
sub
outsl
inc
outsb
outsb
outsb
outsb
inc
sbb
insl
je
add
add
push
pop
inc
imul
incl
pusha
jb
pop
insl
push
aaa
add
push
insl
insl
push
ss
and
outsl
incl
and
imul
cmp
aaa
push
insl
add
and
pop
aas
incl
pop
pop
or
insl
insl
aaa
inc
insb
inc
push
pusha
xor
aas
aas
and
and
pusha
push
insl
pop
add
add
add
add
add
and
sub
aas
sub
push
sub
je
add
add
add
je
and
push
sub
aas
or
sub
insl
outsb
aaa
add
add
add
inc
outsb
xor
pop
sub
ljmp
or
sub
outsb
inc
add
add
add
outsb
das
pop
push
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
dec
pop
pop
pop
pop
pop
pop
jne
outsb
sbb
add
add
pop
sbb
pushl
pop
pop
inc
add
add
inc
ljmp
call
das
insb
jmp
add
add
sbb
decl
or
call
add
add
cmp
xor
sbb
syscall
pushl
gs
add
add
adc
cmp
adc
dec
dec
dec
dec
and
cmp
sub
cmp
adc
add
add
push
sbb
xor
dec
es
ljmp
xor
dec
xor
sbb
jmp
add
add
pop
cmp
adc
sub
cmp
pop
pop
dec
jb
or
pop
jmp
add
add
pushl
sbb
sub
push
adc
pop
dec
pusha
dec
sbb
je
incl
add
add
aaa
je
lcall
cmp
ds
jmp
sub
sbb
ljmp
inc
push
push
push
lcall
dec
jne
pop
es
dec
sbb
pushl
aaa
push
add
inc
ljmp
and
ljmp
aaa
add
aaa
inc
cmp
add
incl
add
inc
outsb
call
ljmp
add
outsb
ljmp
add
add
addr16
add
cld
aas
push
ud0
loopne
inc
add
incl
add
incb
add
add
jg
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
clc
add
pop
incl
add
inc
add
push
ud0
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
adcb
add
adcl
ret
out
mov
push
andb
add
mov
dec
push
ret
xchg
push
stc
jecxz
clc
loope
jmp
ret
ret
out
scas
js
push
mov
lods
mov
stc
fcmovnb
cld
bnd
std
div
cld
icebp
out
cli
in
jbe
lods
jbe
adc
mov
mov
cld
loopne
jmp
out
mov
xlat
int
cli
lock
cld
loopne
cld
jmp
lds
mov
scas
jns
adc
xchg
push
out
lret
scas
cld
fadd
sti
out
call
lret
ret
leave
sar
leave
sar
lret
ret
lret
test
rcr
sar
out
ret
nop
push
adc
add
add
xchg
jno
out
int
cld
faddp
jmp
sar
pop
mov
jmp
movsb
push
fcom
xlat
fcom
xlat
fcom
xlat
call
lcall
mov
ja
jmp
sar
std
loop
push
fmul
inc
xchg
outsb
lahf
les
lods
std
call
int
cmp
pushl
cmp
loopne
loopne
loopne
sub
jl
and
pop
call
fld
std
in
in
xlat
inc
xchg
imul
add
add
mov
fdivr
mul
incl
jmp
lods
push
ljmp
mov
call
jmp
out
ljmp
mov
mov
pop
lods
incl
gs
clc
in
jmp
fidivrs
xor
add
add
mov
sti
jmp
stc
jecxz
ljmp
jnp
pop
stos
pushw
lds
jmp
icebp
icebp
push
repnz
repnz
lock
mov
xchg
incl
lcall
mov
stc
jecxz
cld
in
loopne
shrl
add
mov
mov
jmp
movsb
pop
pushl
xchg
jmp
jmp
rolb
sti
sti
sti
sti
sti
stc
stc
stc
jmp
mov
xchg
pushl
int3
cltd
decl
mov
jmp
out
out
fadd
inc
xchg
jb
fidivrs
sar
hlt
ljmp
mov
mov
das
int3
cltd
lcall
lret
and
mov
jmp
mov
xchg
lcall
xchg
call
stos
cmp
xchg
ljmp
mov
int
std
jmp
fidivl
add
int
xchg
fcmovnb
sti
in
decl
scas
insb
incl
cmpsl
lcall
xchg
lcall
int3
xchg
lcall
int
lcall
les
lcall
mov
lcall
int3
cwtl
lcall
mov
sbb
mov
sti
out
push
fmul
dec
popf
jns
fidivrs
xlat
fcmovbe
sar
mov
lcall
into
lcall
rcrb
lcall
mov
push
rcrl
call
rcrb
ss
ljmp
std
jmp
fdivrl
add
shlb
mov
call
scas
push
call
iret
pushf
call
rcrl
call
shll
lcall
ret
call
aad
call
aam
call
mov
cmp
lods
lcall
scas
push
cmpsb
mov
in
sarb
aaa
fnstcw
loopne
mul
into
lcall
ljmp
incl
scas
call
aam
call
aad
call
xlat
cmpsl
lcall
lret
xchg
lcall
les
call
xlat
cmpsl
call
cmpsb
call
aam
jmp
test
jmp
addr16
loope
cld
bnd
jg
add
add
lods
fdivr
cmc
in
call
into
mov
and
lods
lcall
aad
call
aad
call
xlat
cmpsl
decl
fldcw
lcall
int
lcall
xchg
decl
scas
decl
fldcw
call
cmpsl
jmp
shll
in
aam
imul
jmp
enter
add
add
lahf
jl
jmp
imul
jl
xchg
das
scas
je
cmp
cmp
sub
test
sub
test
push
rclb
push
rclb
and
jnp
sub
test
sub
cmp
mov
cmp
scas
ja
popf
mov
lock
in
xlat
ret
dec
lahf
jl
fdivs
fdivr
cld
out
stos
mov
cmc
std
std
std
dec
stos
cld
out
clc
jmp
test
fnstcw
push
in
mov
cmc
cmc
std
std
std
call
in
in
jnp
jnp
cmc
in
call
mov
add
fdivrs
in
aam
fcmovnu
iret
push
hlt
hlt
std
std
std
jge
enter
mov
in
aam
call
mov
out
add
add
mov
call
leave
stos
ljmp
pushl
popf
jmp
xchg
jmp
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
decl
test
ljmp
shll
call
fisubrl
call
call
mov
testb
add
shlb
jmp
mov
push
lcall
stos
decl
loopne
incl
loope
incl
loop
incl
jecxz
call
enter
out
std
sti
ljmp
sar
aad
incl
loop
decl
loope
call
scas
call
test
jmp
mov
call
mov
incl
add
add
mov
jmp
lds
lcall
enter
fbstp
incl
loop
incl
in
incl
in
call
lret
jmp
fidivl
incl
mov
jmp
in
call
lret
xchg
ljmp
lahf
dec
jmp
les
dec
mov
incl
add
add
mov
push
ljmp
inc
mov
jae
pop
lret
xchg
call
fisubrl
incl
in
call
lret
out
std
sti
call
lret
fnstenv
call
jl
sar
dec
aad
jmp
mov
pop
pushl
jmp
dec
mov
incl
add
add
mov
stc
out
in
ljmp
call
test
cmp
fsubrs
adc
popf
decl
aam
incl
out
decl
xlat
pushl
lret
cmp
xchg
call
insb
call
mov
mov
fidivrl
add
mov
mov
in
ret
mov
test
nop
lcall
leave
fwait
push
std
incl
leave
decl
mov
or
lret
pushl
jecxz
lcall
lret
bound
js
in
ret
std
cli
cld
stc
cld
clc
sti
idiv
imul
in
faddp
mov
mov
add
mov
mov
pusha
out
ret
lahf
out
loop
out
jmp
ret
pushl
mov
lcall
int3
mov
incl
out
call
mov
pushl
ret
std
std
cld
cld
cli
clc
ljmp
test
mov
add
add
mov
jo
lret
cld
cli
stc
cld
clc
cmc
dec
mov
cmp
fsubrs
incl
jle
fnstenv
hlt
cld
cli
cmc
jmp
lret
shlb
jno
int3
test
mov
jmp
out
call
mov
pushl
gs
mov
cld
sti
jmp
lret
lret
jae
add
add
movsl
test
in
fld
push
loopne
stc
lock
aam
lahf
lcall
add
aad
mov
stc
icebp
in
call
mov
jo
add
add
shrb
fadd
mov
fidivrl
add
clc
pop
push
ud0
loopne
incl
add
incl
add
incb
add
add
aas
cld
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
rolb
jmp
pop
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
andb
add
jns
xor
mov
mov
ja
sahf
scas
js
sub
add
add
js
mov
addr16
mov
jmp
int
call
stos
mov
mov
je
jp
jb
or
add
add
adcl
mov
lods
cli
loop
call
clc
loopne
jmp
lds
std
mov
push
int
jl
cmp
add
add
xchg
insb
cmc
jecxz
cltd
in
lods
std
fnstcw
cld
fnstcw
cld
fnstcw
push
aad
fidivs
gs
scas
jp
jns
add
add
adcb
movsb
jle
out
leave
stos
sti
fnstcw
cld
fadd
std
in
loopne
cld
cli
sti
stc
std
ljmp
cld
fnstcw
jmp
mov
int3
sahf
js
mov
push
sahf
scas
jns
add
add
add
pop
mov
mov
sti
hlt
shll
cld
fidivrl
sti
cmc
repnz
in
ljmp
fstp
fdivr
out
out
in
std
hlt
lock
jmp
cld
fnstcw
push
xlat
sar
lods
mov
mov
push
popf
mov
push
add
add
add
mov
fistpll
mov
std
ffreep
push
repnz
xlat
fcos
fcmovbe
fcos
aad
call
aad
fcmovnbe
fcos
fcmovnbe
fcos
out
push
out
jecxz
std
jecxz
std
ffreep
push
fmulp
fidivl
pop
sahf
mov
push
pop
mov
mov
mov
in
loopne
sti
repz
pop
cwtl
movsb
pop
jmp
xlat
fdivr
loopne
fdivr
aad
call
aad
jmp
fcomp
jmp
fcomp
cmp
ret
cld
repz
in
std
loop
clc
in
fnstsw
pop
lahf
mov
push
add
add
add
cwtl
sti
stc
fnstcw
in
loop
sar
pusha
mov
lcall
popf
dec
pushl
addr16
fcmovu
jmp
fcmovu
fdivr
fcomp
fdivr
in
loopne
in
loopne
xor
dec
ljmp
call
in
loopne
out
clc
out
fnstsw
pop
mov
add
add
mov
icebp
not
mov
in
loop
fsub
leave
call
call
popf
dec
jmp
mov
incl
cmp
call
fdivrp
ljmp
cmp
lcall
pushf
dec
lcall
jno
jecxz
into
jmp
iret
push
out
call
mov
in
mov
add
add
stos
xchg
hlt
aad
ljmp
push
stos
call
dec
jmp
xchg
call
fwait
cmp
jmp
jmp
in
jmp
in
push
out
push
out
aas
mov
mov
and
dec
jmp
outsb
jmp
loop
jmp
push
dec
mov
pop
cmp
add
add
cltd
je
out
iret
mov
std
jecxz
call
sar
pop
lods
imul
xor
lahf
pushl
nop
pushl
in
out
push
in
out
ljmp
push
jmp
push
jmp
pushl
mov
nop
aas
xchg
jmp
pushf
dec
ljmp
jne
cmc
out
call
fdivr
ljmp
mov
test
rclb
clc
sti
jmp
int
jmp
insb
mov
lcall
mov
pushl
nop
ljmp
mov
xor
repnz
cld
repnz
push
lock
out
lock
repnz
repnz
xor
mov
cmp
cwtl
incl
cltd
lcall
mov
lcall
dec
jge
jg
jmp
jmp
sar
cli
call
cmpsl
repnz
add
add
mov
fadd
in
ljmp
daa
sahf
dec
jmp
mov
pushl
xchg
ljmp
nop
jmp
lds
xor
cli
cld
cli
cld
push
div
push
div
clc
std
clc
std
pushl
mov
mov
and
mov
inc
into
lahf
decl
lahf
lcall
mov
ljmp
push
jmp
jmp
ljmp
iret
movsl
or
mov
fwait
jbe
out
sarb
jmp
aad
int
mov
cmp
lods
pushw
xchg
ljmp
leave
xchg
jmp
lcall
nop
lcall
mov
xor
mov
std
cld
cld
cld
cld
cld
pushl
mov
lcall
nop
jmp
leave
xchg
decl
decl
lahf
call
test
pop
call
aam
jmp
xlat
std
call
mov
xchg
ret
sub
mov
int
jmp
sar
jmp
fcos
bound
push
ljmp
les
jmp
leave
xchg
lcall
leave
xchg
call
enter
ret
pushl
mov
xchg
lcall
enter
into
pushf
call
scas
cmp
nop
call
mov
jae
jmp
jmp
sar
xlat
mov
fld
xchg
insb
and
add
add
sahf
jnp
repnz
cld
std
out
jmp
aad
mov
mov
js
ds
mov
lcall
xchg
lcall
xchg
lcall
lret
xchg
call
xchg
pushl
lds
pushl
mov
xchg
lcall
int3
cwtl
lcall
int3
xchg
lcall
lret
inc
aam
lcall
mov
adc
dec
int3
lods
jmp
xlat
std
jmp
mov
xchg
ret
and
mov
sar
jmp
sar
pop
cmpsl
arpl
sbb
fwait
pushl
shlb
lcall
int3
xchg
lcall
int
lcall
int
call
int
pushl
ret
mov
ljmp
rolb
sbb
lcall
int3
xchg
jmp
into
pushf
decl
scas
incl
sahf
call
test
pushl
outsb
jmp
aad
jmp
clc
in
call
mov
fld
xchg
insl
sbb
add
add
mov
ret
jmp
mov
mov
cmp
aam
jmp
int3
cwtl
lcall
into
lcall
rcrb
pushl
lds
ljmp
mov
adc
pushf
call
rcrl
call
iret
popf
call
cltd
pushl
shll
adc
mov
test
jmp
fcos
ljmp
imul
add
add
xchg
outsb
add
sti
in
in
jmp
sar
cmpsw
lcall
stos
popa
incl
mov
lcall
iret
pushf
call
iret
fwait
call
rcrb
call
rcrl
ljmp
nop
decl
rcrb
call
shlb
lcall
stos
pushl
int
lcall
test
pushl
outsb
jmp
in
mul
iret
std
shrb
add
enter
ljmp
in
fcmove
lods
pushl
dec
lcall
mov
mov
sub
mov
call
rcrl
call
mov
decl
aam
ljmp
xchg
ljmp
enter
aad
call
aam
call
aam
call
aam
call
mov
jmp
cmpsb
cmp
stos
call
mov
incl
push
jmp
iret
mov
out
fdivrp
cld
jmp
test
das
shrb
sar
in
std
jecxz
call
cmpsb
pop
pushl
int3
cltd
incl
mov
pop
shll
call
mov
call
aad
call
cmpsb
decl
movsl
ljmp
xchg
jmp
lret
or
cmpsl
call
xlat
test
adc
cmpsl
call
cmpsb
call
aad
call
aam
lcall
aam
ljmp
stos
lcall
mov
sub
xchg
jmp
xlat
out
repz
test
test
add
add
mov
fcos
push
loope
std
fadd
call
pop
call
mov
decl
mov
sub
test
call
aam
call
aad
call
cmpsb
call
fsubrs
incl
fsubrs
jmp
lret
xchg
incl
fldcw
decl
fldcw
call
xlat
test
adc
cmpsb
call
aam
lcall
test
shlb
jmp
popa
fmul
push
jecxz
stc
out
call
mov
rolb
add
add
mov
mov
push
loope
fcmovnb
cmpsb
jmp
fwait
dec
call
mov
mov
pop
aad
decl
shll
decl
cmpsb
decl
xlat
cmpsl
decl
fisubrl
incl
fisubrl
jmp
lret
xchg
incl
fldt
pop
fldt
or
test
decl
movsl
call
xlat
movsl
lcall
cmpsb
decl
mov
dec
jmp
lret
push
in
cld
jmp
jmp
lods
ljmp
add
shrl
sar
push
loope
cld
out
ljmp
stos
popa
ljmp
into
pushf
incl
mov
fsubrs
lcall
fldcw
lcall
cmpsb
lcall
xlat
cmpsl
lcall
xlat
test
pushl
ret
mov
sbb
jmp
jmp
jecxz
pushl
mov
call
fnsave
lcall
fdivl
lcall
lcall
fldcw
lcall
leave
xchg
cmp
mov
jmp
out
loop
icebp
fcmovne
icebp
shrl
add
fnstsw
cld
push
in
repz
lcall
test
cwtl
jmp
sahf
jmp
lret
cwtl
jmp
lret
daa
lret
daa
lret
daa
lret
daa
lret
daa
lret
sub
mov
sub
xchg
incl
cltd
ljmp
int3
lcall
lret
cwtl
jmp
lret
cwtl
decl
xchg
jmp
lret
cwtl
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
xchg
jmp
xchg
pushl
test
lcall
repz
mul
xlat
stc
fdivs
add
mov
mov
std
lock
push
out
in
int
mov
std
std
cli
sti
out
repnz
mov
shll
cli
in
fidivrs
jg
shrb
std
icebp
in
push
in
fidivrl
lret
cld
std
idiv
pushl
mov
stos
stc
lock
cld
icebp
jecxz
out
mov
iret
cmpsl
xchg
mov
pop
cmc
out
sti
push
out
std
icebp
in
mov
jge
jecxz
fdivrp
jmp
div
call
lret
daa
popf
dec
fidivrl
ljmp
fcmovne
out
aad
xchg
pop
xlat
mov
mov
out
loopne
push
ljmp
scas
cmp
inc
hlt
call
decl
fldcw
ljmp
cmpsb
pop
pushl
ljmp
mul
hlt
fstpt
add
shrb
out
clc
in
push
fmulp
jmp
in
hlt
call
loopne
incl
fldcw
decl
rcrb
call
in
stc
out
push
in
loopne
aam
movsl
mov
aam
lahf
int
imul
stc
lock
aad
incl
cmp
int
decl
movsl
decl
cmpsb
decl
cmpsl
decl
test
decl
stos
decl
lods
decl
lods
decl
lods
incl
lods
decl
xchg
stc
std
mov
out
incl
fldt
decl
loope
decl
mov
push
aad
jmp
mov
call
fcmove
sti
repnz
out
loopne
aam
mov
add
shrb
sti
icebp
push
aad
incl
lods
decl
iret
cltd
decl
incl
fbstp
incl
loope
incl
loope
incl
loope
incl
loop
incl
loop
incl
loop
lcall
shll
fdivr
repz
mov
incl
mov
incl
loope
decl
rcrl
call
fcmovb
std
cmc
cli
hlt
call
in
out
mov
sti
repnz
fadd
jmp
movsl
push
call
ret
test
sbb
scas
call
loopne
decl
loop
incl
jecxz
incl
mov
incl
mov
incl
in
incl
jecxz
jmp
shrl
out
cld
cli
pushl
in
incl
fnsave
add
mov
decl
in
call
in
lcall
fsubrl
jmp
mov
lret
std
cmc
cli
cmc
jmp
in
mov
jmp
clc
repnz
sti
repz
in
fildll
dec
lcall
popa
call
xchg
adc
mov
decl
mov
or
mov
incl
sar
in
incl
in
incl
in
jmp
shrl
cld
call
stc
repz
fcos
pop
loopne
incl
loopne
incl
in
lcall
call
leave
ljmp
out
ljmp
loop
jmp
stos
lcall
lds
jmp
push
jmp
mov
stc
lock
cld
idiv
sti
div
jmp
aam
incl
add
add
lds
sti
idiv
sti
out
fcmovb
call
scas
xchg
jp
pusha
mov
push
call
leave
nop
call
aad
decl
fidivs
incl
in
incl
in
incl
in
jmp
aam
call
hlt
call
incl
loopne
incl
out
jmp
ljmp
pop
ljmp
pop
aam
incl
test
lods
push
cmp
pop
incl
mov
push
std
sti
idiv
sti
div
scas
hlt
aam
sahf
sahf
clc
repz
cld
idiv
push
out
push
int
fbstp
decl
pusha
ljmp
scas
push
sbb
shll
decl
in
incl
out
jmp
aad
stc
std
dec
clc
repnz
xlat
incl
loop
incl
jecxz
call
call
sar
jno
aad
mov
enter
xchg
ljmp
scas
imul
mov
jmp
mov
push
iret
mov
cld
clc
cld
clc
push
call
mov
add
mov
scas
fdivr
repz
cld
cli
push
jmp
not
push
mov
mov
mov
insb
lcall
rorl
or
lods
jmp
cld
stc
lcall
in
incl
loop
incl
out
call
call
into
call
mov
jmp
mov
jp
idivb
push
out
cld
cli
std
sti
clc
push
icebp
in
fcmovnb
lods
leave
iret
test
add
shll
scas
repnz
fdivr
cmc
lock
clc
std
cli
cld
out
call
dec
movsl
jns
jp
ljmp
mov
call
xchg
ljmp
repz
push
in
fdivr
add
ret
in
incl
out
call
out
ljmp
loope
lcall
int
jmp
mov
incl
movsl
jnp
hlt
les
cld
cli
cld
cli
idiv
sti
div
cmc
clc
repz
mov
xchg
and
add
add
movsb
xchg
push
aam
mov
xchg
in
mov
repz
in
stc
cmc
cmc
std
sti
cli
std
sti
repz
out
mov
mov
stos
outsb
call
roll
add
out
incl
out
decl
pop
test
inc
fwait
imul
mov
repnz
std
std
cli
clc
sti
div
hlt
repnz
jecxz
lds
mov
mov
push
shrl
add
rcrb
in
int3
rcl
repz
push
jecxz
jmp
mov
mov
pmaxub
decl
mov
sbb
mov
mov
jnp
repz
std
cld
cli
stc
push
out
out
ljmp
test
mov
add
les
mov
clc
repnz
std
cld
cld
div
in
mov
jl
push
sbb
shlb
lcall
rorb
out
mov
stc
std
cld
sti
hlt
call
scas
lret
cmpsb
xchg
pop
ret
movsb
lea
leave
mov
cli
div
clc
std
jmp
fwait
popa
decl
outsl
decl
lcall
ret
test
std
std
clc
repz
cmpsb
mov
add
add
popf
xchg
stos
xchg
xchg
repnz
jmp
cld
sti
std
jmp
shlb
rcll
mov
cld
sti
cli
cld
out
into
loopne
stos
xchg
jb
movsl
mov
lret
scas
cltd
cmp
lds
sti
cli
div
stc
in
scas
mov
lds
mov
std
sti
clc
hlt
cld
call
add
add
mov
sbb
int
mov
cld
stc
idiv
jmp
mov
lret
scas
xchg
push
in
mov
cmpsl
repnz
push
iret
call
mov
adc
add
add
push
ud0
add
jmp
pop
incl
add
inc
add
incl
add
incl
add
incb
add
add
cld
add
aas
incl
add
clc
add
aas
incl
add
lock
ud0
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
cld
add
add
aas
add
inc
add
add
add
clc
add
pop
incl
add
incb
add
add
incl
add
incl
add
inc
add
incl
add
jmp
ud0
add
push
ud0
add
clc
pop
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
jb
adc
add
add
add
out
mov
inc
and
dec
pop
and
stos
jae
add
cltd
push
leave
sub
pop
mov
sbb
lods
enter
dec
pop
out
cmp
repz
test
stc
pavgw
hlt
fldcw
icebp
sub
push
jno
xor
push
cltd
fildl
push
inc
enter
outsl
inc
mov
pushf
inc
add
jae
test
es
jg
movsb
fs
pop
cltd
sahf
cmpsb
das
int3
adc
add
cltd
jb
out
inc
push
pop
pop
stos
sti
hlt
fdivs
jb
je,pt
cmp
js
mov
insl
addr16
lods
push
dec
addr16
icebp
xchg
insb
jnp
ret
push
or
cmpsl
or
fsubrl
add
mov
xor
jp
adc
jbe
mov
xchg
push
cs
mov
sti
adc
or
add
mov
jl
xchg
xor
mov
mov
sub
repnz
repz
pop
dec
xchg
cltd
repz
push
mov
iret
jne
fisubl
cmp
int3
add
sub
xor
sub
lock
xor
and
sahf
cli
mov
cwtl
sarb
clc
xchg
push
adc
fwait
ret
cld
pop
jl
and
loop
stc
cmp
pop
jae
jb
leave
call
cld
and
mov
jns
pushf
push
in
aas
jnp
out
cli
push
push
into
ret
lock
push
stos
daa
sub
cmp
imul
clc
fidivrl
inc
pushf
pushf
fsubs
mov
rdtsc
adc
jnp
xchg
sbb
xchg
fwait
push
rcl
cwtl
fistps
jmp
jl
movl
pusha
cwtl
call
xchg
adc
dec
push
gs
or
mov
dec
inc
cwtl
js
mov
xor
stos
mov
push
lahf
pop
pop
jle
sub
xchg
cmpsb
cltd
cmp
bound
adc
in
test
and
pop
clc
jle
cmc
cld
mov
sqrtps
movsb
aaa
sbb
mov
lcall
cltd
int3
dec
lods
lods
ret
pop
cs
dec
mov
int3
rcrb
ss
cmc
fidivl
pop
in
lods
cld
test
and
add
lahf
mov
xchg
jecxz
scas
fwait
mov
cmpsb
aad
incb
aad
sarl
dec
repz
das
out
mov
pop
push
cmpsl
sub
adc
fnstenv
xor
arpl
mull
stc
and
adc
pop
mov
pop
xchg
lret
sub
je
fstp
xchg
mov
mov
ljmp
lcall
xchg
inc
jecxz
xchg
xchg
xchg
adc
adc
lcall
cmc
dec
jle
mov
outsb
pop
jecxz
push
out
or
push
inc
das
je
loope
push
insb
mov
shrl
mov
add
inc
lods
jmp
xchg
cmp
mov
sub
mov
ljmp
adc
mov
inc
hlt
loope
lcall
xor
fwait
mov
and
lret
repnz
rcll
addr16
lahf
pusha
fstl
pop
push
nop
lods
std
imul
sbb
lods
mov
pop
jmp
repnz
ja
gs
cmc
ds
cmp
add
jns
stos
cmp
lods
add
mov
mov
movsb
xorb
sub
shl
add
or
in
out
imul
or
je
mov
ljmp
arpl
rorb
aas
int3
into
jge
icebp
call
cmp
test
out
xchg
scas
das
push
ja
repnz
repz
std
push
ljmp
cmp
call
inc
ror
add
jb
sub
rcll
das
sbb
notl
cmp
data16
out
mov
jns
test
cmp
mov
lret
mov
out
aam
lock
shlb
push
sbb
mov
push
jne
jmp
push
imul
mov
ljmp
popf
mov
mov
aam
xor
push
dec
mov
xor
jbe
mov
hlt
aaa
rorl
orb
lret
cmp
mov
jno
lret
xor
sahf
dec
insl
pop
mov
mov
cmpsl
mov
sbb
mov
xor
movsb
push
dec
xlat
push
xchg
out
pop
loopne
int3
scas
xchg
add
les
jae
icebp
inc
test
xor
in
jno
daa
ret
popf
aas
repnz
sub
cmp
sub
pop
int
mov
sti
mov
pop
lods
pop
xchg
dec
add
fwait
pop
notl
adc
movsl
push
mov
es
and
jle
xchg
mov
mov
inc
cmp
jecxz
and
pop
dec
jmp
test
sbb
jecxz
inc
jmp
int
push
rorl
hlt
out
push
je
out
insb
loop
or
ds
and
bound
addr16
aaa
out
idivl
leave
dec
cmpsl
xchg
push
ja,pn
xchg
les
addb
lea
sub
xchg
cmp
mov
xor
test
loope
dec
out
roll
and
into
imul
ja
fstpl
dec
mov
jmp
mov
lret
add
fiaddl
les
out
jecxz
jne
add
cmp
out
nop
les
xor
or
mov
push
out
mov
pusha
xchg
popf
lret
fisttpll
mov
in
add
push
fsub
or
mov
stos
test
dec
and
cwtl
stos
mov
addr16
xchg
test
bsr
jnp
cmp
jg
insb
cmc
outsl
jge
mov
sarb
cmp
xchg
adc
mov
sub
shll
lret
mov
call
hlt
xor
dec
push
inc
cmp
out
jecxz
jg
outsb
or
jp
cmp
xchg
out
stos
mulb
and
icebp
out
mov
sub
cmpsl
fists
jne
pop
lock
sti
mov
mov
cmpsb
cmp
paddw
lahf
scas
sar
cmpsb
andb
push
push
sbb
xor
cmp
cmp
movsl
adc
fcompl
in
cmpsl
dec
outsl
push
xor
pop
sub
dec
dec
mov
fbld
mov
mov
cmp
xor
lret
add
stc
mov
xor
mov
bound
dec
incb
or
in
lret
out
inc
pop
xor
rcll
ret
shl
sub
fimull
fdivl
sbb
int3
std
fwait
sub
push
jns
jnp
popf
fdivrl
dec
mov
int3
inc
mov
pop
push
pop
inc
xchg
dec
popf
and
daa
fxch
outsl
jecxz
movsl
mov
mov
mov
movsb
mov
lahf
add
add
sub
test
out
push
ret
sbb
sub
rorl
jmp
cmp
loope
mov
mov
mov
sbb
mov
mov
leave
pop
call
push
std
ror
fcoms
push
pop
pusha
lock
push
imul
pop
and
es
xchg
loope
or
inc
bound
push
les
orl
inc
push
push
bound
cmp
pmullw
hlt
mov
dec
lods
jg
rorl
xchg
lcall
fnsave
xchg
xchg
repz
negb
invd
out
loop
jl
dec
jmp
mov
pop
sub
dec
xchg
hlt
add
jle
mov
stc
xor
lea
and
daa
outsl
fwait
xchg
mov
dec
clc
shlb
ja
in
lahf
add
jne
jg
lds
addb
scas
cmp
pop
pop
scas
xchg
jmp
cmp
pop
sub
lcall
ret
and
sti
icebp
fstpt
push
gs
out
inc
mov
sub
movsb
nop
ljmp
mov
inc
inc
mov
jl
add
sbb
mov
ficompl
mov
mov
imul
cmp
xchg
out
stos
mov
imul
mov
jmp
insb
inc
xchg
jmp
dec
inc
cmp
outsb
cmp
push
adc
xchg
sub
ja
xchg
pop
stos
or
cltd
adc
mov
xchg
inc
push
mul
popf
and
and
outsl
mov
mov
lods
sahf
inc
add
pop
pop
push
lea
jmp
out
sub
push
mov
mov
mov
loopne
mov
pop
dec
insb
mov
and
mov
stos
push
dec
das
and
push
jns
fcmovu
mov
xlat
repnz
and
lea
jno
mov
fcmovne
mov
jb
out
cmp
test
lea
push
in
mov
xor
enter
out
adc
pop
iret
sub
rclb
mov
jp
or
int3
pop
cmp
cmp
cmp
cwtl
sahf
mov
cmp
inc
ss
adc
js
add
jmp
and
mov
push
das
pop
sub
je
pop
repz
shrb
sbb
adcl
and
push
jl
dec
and
in
dec
inc
lods
mov
fsubs
test
movsl
sub
rcrb
jle
fisubl
or
pop
mov
hlt
push
push
inc
clc
inc
pop
or
mov
dec
cmc
rcr
add
push
std
pop
push
iret
test
mov
repz
rolb
out
adcl
dec
jb
jl
imul
xchg
or
mov
lods
inc
mov
sub
pop
je
pop
jb
sub
mov
mov
pop
int3
push
cmpsl
addb
xchg
shrl
pop
sti
ja
pop
aad
xor
jp
xchg
leave
rclb
pusha
insl
in
rclb
into
js
xchg
pushf
ret
or
test
and
enter
and
gs
inc
xor
mov
movsb
icebp
mov
outsl
imul
lods
xor
into
arpl
out
adc
push
push
idivb
ret
sbb
in
ret
adc
push
in
maxps
cmp
adc
hlt
sbb
pop
into
data16
fadds
sti
popf
loopne
pop
dec
je
sub
aas
inc
mov
cmp
and
and
and
je
pop
jnp
or
mov
inc
insl
mov
jno
sub
mov
cltd
test
repz
pop
sub
aam
xchg
add
adc
push
xchg
in
pop
ret
or
movsb
ds
mov
out
insb
push
in
sub
cmpsb
pop
add
aam
push
daa
rcll
aad
bound
lods
cmpsl
repnz
scas
xor
xchg
int3
rorb
fisttpl
pop
es
sbb
add
repz
movsl
cmpsb
xchg
stos
sarb
mov
sbb
push
xchg
and
add
lret
sarb
aad
loopne
insb
shll
or
cmp
pushf
push
sbb
sbb
sub
sub
dec
cld
out
lret
jmp
mov
sahf
inc
cmp
lcall
push
movsl
push
pop
out
cmp
mov
mov
out
dec
cmp
dec
sub
stos
sub
mov
push
pop
xchg
cmpsb
inc
pop
sar
adc
dec
nop
inc
and
cmpsl
adc
adc
mov
sbb
lret
jno
xchg
ss
in
mov
insl
mov
adc
in
sarb
pop
pop
loope
scas
pushf
pop
push
cmp
in
push
or
clc
or
cmp
inc
adc
inc
test
mov
call
mov
int
ret
mov
icebp
std
adc
lods
cmp
imulb
aad
xchg
pop
das
inc
pop
mov
sbb
pop
int
cld
ffreep
lret
sub
sub
adc
lds
sahf
repz
inc
cli
mov
adc
dec
clc
idiv
dec
hlt
icebp
jbe
mov
inc
adc
pop
lods
add
in
aas
sbb
movsb
inc
adc
lods
daa
xor
xchg
dec
adc
cmpsl
cmpsl
clc
mov
ret
mov
adc
adc
inc
fistl
insl
mov
jbe
aad
out
hlt
mov
jo
cltd
jns
icebp
add
sub
adc
jg
or
popa
imul
sbbl
fidivrs
sub
enter
jne
roll
in
sub
push
cmpsl
pop
aaa
mov
adc
adcb
mov
in
out
xor
jnp
movsl
cmpsb
cltd
aaa
xor
mov
shrl
lods
dec
dec
jecxz
xchg
int3
and
ret
cmp
bnd
mov
jle
xor
and
adc
pop
mov
leave
mov
dec
daa
mov
mov
loopne
xlat
dec
jnp
subl
ja
xor
mov
andl
adc
cmp
push
xor
test
push
in
stos
jne
push
inc
add
scas
xor
mov
imul
in
dec
cmpb
mov
rorb
lock
aad
idivl
in
adc
ret
leave
or
aam
cmp
xchg
pusha
add
stos
push
mov
jg
jecxz
lcall
addr16
push
sbbl
xchg
es
sub
rolb
pop
push
inc
inc
cmpl
push
jle
xor
test
sbb
add
lods
inc
orl
cmc
or
lock
sbb
sbb
mov
test
push
js
std
mov
sarl
and
cmc
dec
sbb
jno
inc
daa
add
and
sbb
push
pmaddwd
add
dec
mov
fists
xchg
cmp
cwtl
add
movsl
xchg
les
int3
shll
inc
iret
jno
lods
and
fadd
shrb
dec
cmpsl
std
test
sbb
sti
push
push
or
test
sbb
mov
roll
push
jbe
sahf
lret
adc
mov
jae
push
mov
push
in
in
outsb
mov
in
jle
or
lods
cwtl
in
mov
push
insl
push
mov
sbb
enter
adc
mov
out
test
push
pop
mov
pop
inc
and
hlt
hlt
dec
ret
aad
xor
mov
adc
lcall
lret
nop
fcmovbe
mov
mov
push
test
jnp
repnz
pusha
mov
inc
adc
aam
ficompl
jmp
xchg
add
add
test
loop
cmpsl
xchg
xlat
ret
mov
and
lods
push
js
lcall
cmp
or
fwait
inc
push
or
mov
xchg
mov
movsl
push
lcall
xor
shlb
xchg
sub
aad
adc
ret
fcmovnu
sub
scas
ret
arpl
adc
xchg
mov
pop
or
cmc
shrb
add
dec
jge
repz
aad
mov
cli
mov
push
sbb
sbb
add
int
jg
pop
or
icebp
jbe
loope
mov
jl
out
sub
mov
out
jl
inc
mov
mov
rcrl
sbbb
gs
xchg
jg
fs
call
mov
xorb
mov
adc
push
lcall
xor
dec
sbb
push
and
xor
sub
lahf
add
dec
jae
adc
push
aaa
mov
aam
imul
push
lods
xlat
ja
and
ds
lcall
out
ljmp
scas
jno
lret
mov
scas
enter
xlat
jl
inc
bound
leave
add
outsl
push
and
jp
call
and
fistpl
cmp
lret
arpl
cmpsl
nop
lcall
add
stc
add
cwtl
sbb
mov
dec
jmp
dec
aad
inc
clc
movsl
inc
loop
mov
xchg
jge
lds
lret
cmp
js
mov
repz
lods
dec
xchg
xlat
add
es
mov
das
ja
into
push
cmp
jle
cld
out
int
xor
mov
mov
call
xchg
and
in
std
addr16
jne
fs
stos
cmp
mov
and
lock
scas
adc
pop
jmp
roll
cli
mov
int3
sub
in
movsb
gs
cmp
stc
lods
mov
jns
ss
incb
cmp
stos
sbb
inc
xor
insl
es
cmp
push
sub
arpl
mov
mov
sub
stos
jns
push
sub
in
fs
adc
loop
loop
sbb
sub
fnstcw
cs
inc
mov
dec
mov
jae
sti
push
adc
push
and
xlat
ret
xchg
jnp
push
ficompl
mov
aad
or
pop
cmpsb
or
call
cmpsb
adc
out
out
cmpsb
stos
mov
dec
xchg
adc
pop
push
xor
inc
mov
lea
icebp
sbb
out
xor
orl
sti
lea
and
cwtl
out
lds
jno
xor
rcl
xchg
pop
loope
leave
rclb
cmc
imul
ss
inc
mov
mov
bound
push
adc
iret
cmpl
inc
hlt
xor
fsubr
stos
loopne
mov
fsubrl
scas
stos
cmpsl
adc
sub
xchg
sti
xor
stos
mov
jmp
inc
add
shrl
out
pop
push
mov
lret
cwtl
sarl
ficoms
mov
lods
mov
insb
mov
decb
adc
mov
ds
cmp
push
cmpsb
sub
inc
cmc
repz
pop
out
imul
add
shr
pop
mov
mov
loopne
dec
dec
pop
mov
orb
xchg
insl
hlt
les
sbb
inc
sbb
mov
daa
pop
leave
popf
imul
pop
dec
imul
xor
inc
fs
mov
inc
daa
xlat
mov
lea
sub
xchg
cli
xchg
sub
inc
hlt
ds
into
inc
sbb
xchg
fcmovu
jecxz
icebp
movsl
inc
repz
test
mov
push
fldt
lea
je
decb
movsl
push
inc
jp
jo
mov
lods
fdivrl
mov
mov
push
cmp
mov
jl
out
push
stos
xlat
lret
cmp
pushf
add
jno
fwait
or
jbe
jno
xlat
bswap
sub
data16
inc
test
jmp
mov
cmpsb
add
xchg
lret
mov
push
int
jg
xchg
lahf
mov
jl
pusha
and
sub
push
pop
dec
jo
and
mov
jnp
pop
jns
sbbb
jge
call
mov
add
ja
rcr
jmp
stos
iret
jg
rorb
sub
adc
mov
or
ret
mov
mov
push
inc
jge
or
mov
push
ret
cmp
adcb
cmc
adc
fs
pop
dec
cmpsl
push
faddl
dec
sbb
xor
dec
enter
xor
jae
push
sbb
mov
push
pop
inc
call
in
sbbl
mov
push
mov
div
pop
icebp
pop
mov
fisttpll
cmp
cltd
sub
std
cmpsb
xchg
dec
mov
xchg
lods
xchg
sbb
lods
sub
imul
push
sbb
mov
out
mov
xor
fstpt
lret
mov
mov
ljmp
fs
loopne
jle
imull
jae
jmp
and
jmp
mov
mov
loope
push
xor
pop
pop
xor
outsl
and
mov
adc
movsl
in
pop
sbb
inc
inc
cmp
cmp
jecxz
popf
sub
or
movsl
xchg
dec
mov
in
stos
cwtl
pop
ja
popf
fs
inc
add
xor
inc
xchg
mov
lret
ljmp
cld
jnp
outsl
test
jnp
int
mov
in
divb
and
shlb
mov
mov
push
xor
insb
sbb
dec
enter
mov
mov
push
jp
sahf
ss
or
jmp
addr16
dec
dec
add
fs
cmpsb
js
repz
lret
aas
fisubl
push
inc
push
push
inc
mov
pop
repz
xchg
mov
and
repnz
dec
mov
andb
xchg
dec
jg
pushf
cmp
add
mov
push
xorl
call
jo
out
push
push
daa
sub
ds
dec
sarb
push
jp
xor
loope
pop
mov
xor
call
in
jmp
push
mov
fcmovu
test
insl
cmpsb
xor
adc
pop
insb
cmp
jne
add
pop
mov
int
sub
addr16
mov
mov
inc
sbbl
and
sub
fnstcw
sub
xchg
sub
out
and
mov
cmp
pop
inc
cld
xor
sti
adc
jb
lods
jno
jbe
popa
lods
sarb
cmp
jmp
add
loopne
shlb
sbb
iret
out
lods
inc
insb
test
mov
push
movsb
insb
sbb
loope
out
mov
push
not
sub
in
arpl
sub
add
addb
out
sub
repnz
add
cld
or
testl
ffree
and
jle
fsubl
lock
push
mov
push
out
test
push
sahf
cwtl
xlat
push
fidivrl
aas
imul
jg
ljmp
dec
lahf
dec
add
sahf
xchg
lds
rclb
push
or
push
inc
dec
cwtl
adc
and
das
jmp
rorb
cld
jp
insb
cmp
jecxz
pop
mov
jmp
dec
mulb
xchg
dec
cmpsl
sbb
mov
stos
push
mov
rcrl
mov
stos
push
std
mov
shrl
ret
mov
fstp
and
dec
push
mov
jle
mov
gs
jle
leave
or
fistpl
cmovl
pop
push
cwtl
xchg
pop
push
fisttpll
pop
inc
push
xlat
xchg
jmp
mov
icebp
rorl
mov
test
imul
sbb
test
pop
in
xchg
xor
sbb
sti
dec
pop
test
adc
inc
cmp
lcall
out
sti
popa
pop
mov
inc
mov
shlb
cld
fwait
mov
sub
fyl2xp1
out
addr16
test
adc
xor
xchg
popa
sti
outsb
cmpsl
lods
push
pop
pop
xchg
mov
adc
sub
pop
xor
xor
out
lahf
cmp
jecxz
dec
push
xchg
test
push
mov
cmp
xchg
cli
xchg
adc
xor
int
es
adc
in
aam
punpckhdq
int3
insb
scas
out
cld
xor
stc
mov
cmpl
cmp
cmc
add
out
movsl
lcall
inc
test
jge
push
stc
scas
xchg
shl
scas
mov
faddl
subb
mov
jne
jle
jl
jmp
xlat
stos
jnp
bound
dec
pop
in
ja
mov
and
mov
add
mov
push
dec
mov
imul
cmp
test
cmp
jg
or
pop
xchg
mov
shl
shl
in
and
mov
pop
lods
add
shlb
push
mov
popa
loope
jg
dec
movsb
add
pop
outsb
jle
aad
or
cmpsb
repnz
test
cmp
pop
sbb
enter
or
cmp
inc
lods
mov
xchg
xchg
aad
not
xor
sti
hlt
jno
cmp
je
adc
lds
sub
mov
add
or
push
test
fcmovnbe
inc
lcall
push
mov
arpl
sub
pop
sarb
in
out
test
mov
hlt
push
out
push
das
sbb
pop
xchg
jle
fcomps
inc
aam
out
fs
sbb
or
or
int3
les
outsl
in
inc
sti
sub
vpunpckhbw
xchg
mov
fs
pusha
inc
test
movb
retw
lods
aaa
cmp
sbbb
pop
int
xor
adc
mov
mov
decb
mov
xor
mov
ja,pt
es
into
pop
and
repz
aaa
cmp
cli
dec
and
je
les
mov
fimuls
mov
cmpsl
insb
outsl
mov
fbld
movsl
ror
push
loope
push
mov
push
pop
fidivl
fidivl
mov
xchg
loop
gs
outsb
jecxz
loop
std
xor
mov
enter
mov
test
lahf
inc
or
popa
dec
inc
adc
gs
fistpll
out
mov
xchg
outsb
jecxz
pop
daa
outsl
push
shll
mov
cs
mov
mov
inc
aas
icebp
push
in
pop
inc
out
inc
insl
imul
xlat
popf
iret
daa
mov
ss
cs
fcomps
test
xchg
jg
data16
push
jne
fcomps
int3
mov
xor
loopne
sbb
cmp
clc
int3
rclb
rcr
shrl
sysexit
es
testl
mov
xor
sbb
fldcw
pop
xchg
jae
mov
pusha
movb
jle
or
jne
sub
mov
jmp
cwtl
ret
mov
cltd
inc
loop
xor
xchg
jmp
fsubl
movsb
ficoml
test
mov
pop
or
jb
or
insb
inc
neg
in
mov
in
xchg
fdivrl
or
repnz
sbb
imul
lret
jo
repz
fcoms
out
cmp
jns
cmpsb
mov
cmp
inc
or
cld
mov
mov
push
int3
imul
dec
xlat
je
inc
fcomps
daa
adc
and
inc
xchg
jecxz
lret
cli
inc
cli
loopne
sbbl
fcoml
or
mov
sbb
or
sbb
leave
roll
add
mov
pop
adc
sahf
mov
mov
out
test
and
jmp
mov
in
mov
mov
sbb
aam
andl
lret
shll
lods
dec
iret
out
adc
xchg
sbb
jnp
cmp
sbb
add
jecxz
fmull
in
ja
mov
pop
add
arpl
or
imul
insb
push
aaa
push
cs
fildll
dec
pop
orb
jecxz
inc
cmp
out
push
js
mov
ja
push
or
repz
jmp
fs
adc
and
cld
insl
into
cmp
mov
out
in
out
and
or
roll
push
cld
jmp
loope
or
fists
ffreep
mov
cmp
rolb
fld1
fcmovb
mov
test
jecxz
arpl
pop
sar
sbb
lret
icebp
scas
adc
scas
jecxz
aas
and
aam
ret
pusha
mov
iret
mov
add
stos
mov
push
xor
out
jne
mov
pushl
push
cmp
push
dec
mov
nop
xchg
push
mov
call
fnop
or
sbb
xchg
jbe
cmp
mov
dec
ja
adc
pop
imul
lret
mov
cmpsb
pop
fs
push
pusha
ds
stos
or
rcrb
lret
outsb
nop
inc
mov
inc
cltd
or
dec
cs
lds
hlt
jns
jecxz
push
xor
jns
jge
xor
inc
mov
scas
ret
cmpsb
in
rcl
sub
fdivrl
dec
inc
dec
push
xor
adc
add
mov
add
jle
adc
ret
adc
pop
mov
pop
aad
pop
leave
sarb
insb
mov
bound
addl
ljmp
jnp
cmp
mov
fsubl
jmp
lock
mov
repz
cmpsl
loope
cmp
or
xor
js
inc
call
scas
test
lcall
daa
add
loope
aas
loope
cltd
sub
bnd
lods
xchg
and
xor
gs
mov
sarb
add
add
fwait
icebp
mov
jge
mov
inc
mov
pop
les
mov
imul
push
test
dec
jo
inc
lods
mov
xor
popa
and
mov
or
push
mov
repnz
lock
adc
cwtl
jae
outsb
jg
jp
lret
cmpsl
pop
in
jmp
dec
add
mov
xlat
outsb
and
mov
stc
es
addb
outsl
fs
mov
repnz
enter
pop
pop
pop
sar
leave
stos
pop
mov
cmc
fucomp
outsl
mov
loop
jle
dec
mov
dec
xchg
pop
sbbl
inc
pusha
int3
jb
xchg
inc
and
pop
stos
push
iret
pop
ja
scas
lret
repz
shll
xor
cmpsl
and
adc
push
outsb
xchg
insl
jle
cmp
pop
jmp
js
lods
test
push
jl
sub
pop
test
cwtl
jbe
outsb
or
dec
adc
movsl
lret
mov
lds
xor
or
add
ret
incl
or
sub
fwait
out
dec
xchg
inc
cld
pop
lret
stc
lods
into
xor
data16
movswl
ljmp
push
sub
sub
hlt
dec
jns
lods
shll
xor
push
inc
insl
fdivl
mov
and
sub
loope
pop
insl
inc
div
mov
jle
in
xchg
mov
inc
je
imul
jnp
pop
mov
icebp
fdiv
test
jmp
shr
je
or
dec
scas
out
cmpsb
add
xor
sub
xchg
in
and
pop
sbb
xor
dec
int
mov
jl
mov
out
push
xchg
or
pop
push
push
jae
arpl
xchg
mov
add
and
and
pop
and
dec
cld
sti
push
test
sbb
lods
not
dec
sbb
fcoml
js
mov
inc
pop
jo
dec
cmp
in
fld
mov
push
movsl
xchg
and
scas
cmp
cltd
xor
int3
push
in
sarl
add
popf
jp
inc
mov
inc
adc
mov
ja
scas
add
mov
popa
sub
jb
mov
mov
gs
push
in
repz
xchg
lcall
push
jmp
jl
rcrb
shl
pop
fwait
pop
xchg
push
scas
xchg
enter
nop
imul
outsb
sub
leave
scas
adcl
in
mov
enter
adc
ljmp
insl
add
idiv
push
cs
jle
mov
popa
push
push
inc
sub
icebp
lds
cmp
push
aaa
push
push
mov
js
mov
jmp
xorl
add
mov
scas
sbb
sbb
nop
xor
out
sbb
fcompl
loope
dec
fisttpl
lahf
mov
movsb
push
ret
out
into
xchg
pop
sbb
dec
fs
loope
push
inc
adc
or
sbb
cmp
pop
xchg
pop
add
jg
sub
insl
xchg
push
out
adc
pop
push
rcll
adc
or
inc
sti
stc
fld
sbb
jecxz
cmc
outsw
out
push
cli
rorb
scas
push
dec
mov
cmpsl
ficoms
dec
jp
push
aad
popa
pushf
enter
cmpsl
jno
add
sub
cmp
test
jnp
sbb
xchg
jnp
mov
test
and
dec
repz
dec
push
mov
push
addr16
cmpsb
sbb
cmp
in
cli
test
imul
and
pop
fidivrl
jp
bound
aaa
pop
cmpsb
repnz
ficompl
sub
or
fsubrs
push
stos
mov
pop
mov
ja
test
icebp
das
sets
pop
ffreep
add
or
mov
inc
fcmovnu
adcl
mov
sub
add
mov
repz
xchg
adc
inc
test
insb
cmpsl
adc
out
das
ja
and
out
push
and
lahf
fwait
jp
adc
pop
rol
fsubs
lret
cmpsb
and
ljmp
xchg
or
dec
stos
sbb
pushf
aad
push
pop
movsb
popf
sti
cmp
scas
mov
inc
sbb
int
jge
add
test
ljmp
mov
sbb
cmp
sbb
hlt
int3
out
lock
mov
int3
je
sub
mov
sbb
dec
gs
js
pop
nop
or
inc
add
mov
repz
bound
xchg
shlb
popf
xor
push
add
aam
xchg
jg
js
movl
push
ret
and
jb
scas
push
mov
jecxz
insb
shr
imul
mul
pop
mov
dec
lcall
inc
jns
push
scas
mov
sahf
ss
push
adc
leave
mov
in
jp
xchg
sbb
or
cld
sahf
gs
fstpl
push
cmp
lea
jmp
lea
les
push
je
es
lock
push
pop
jp
sbb
xchg
mov
or
xor
or
push
or
cmc
adc
lea
subl
or
and
testb
rcrb
cmp
and
xchg
cmp
addl
mov
stos
insl
inc
jecxz
test
popa
mov
and
push
sbb
std
cmp
add
cmpsl
jmp
mov
inc
push
mov
jns
or
xor
dec
jmp
xchg
je
es
dec
lahf
arpl
push
fdecstp
xchg
adc
stc
ret
imul
sbb
cs
inc
lods
into
mov
pcmpeqd
mov
in
sub
jo
dec
pop
fldenv
mov
outsb
push
addr16
daa
movsl
es
mov
pop
mov
in
aas
inc
outsl
add
xchg
sub
push
int3
jnp
mov
push
inc
inc
mov
cwtl
daa
xor
pop
mov
cmp
xor
adc
lret
jecxz
shlb
inc
sub
int
imul
inc
xchg
daa
js
pushf
pop
cwtl
outsb
or
sub
adc
mov
and
scas
push
sub
mov
sub
dec
fidivrl
outsl
pop
scas
stc
movsb
push
adc
lcall
movsl
aaa
dec
aaa
jo
flds
add
test
xor
jb
fiaddl
push
ret
mulb
push
cld
out
pop
in
shrb
pop
push
mov
stc
push
and
cltd
cltd
pop
fsub
xlat
fcomp
push
xorl
xor
xlat
stos
dec
cmp
lock
mov
jns
test
dec
sarl
lds
xor
rorb
popf
adc
xchg
fs
or
mov
sbb
ret
pop
mov
jb
loope
int
fwait
lds
xchg
ljmp
popf
movsb
addr16
and
test
sub
outsl
mov
add
xchg
fbld
adc
orb
push
jo
stos
mov
es
inc
fldcw
add
xor
mov
loop
and
gs
in
or
outsb
mov
mov
inc
dec
mov
or
mov
cmp
xchg
fsubrl
ljmp
xor
xor
out
lds
aaa
arpl
pop
outsb
mov
cmpsl
sub
mov
xor
mov
cs
scas
adc
mov
dec
out
movsl
and
test
and
aas
xchg
fadds
sbb
test
testl
das
mov
das
fstpl
adc
out
pop
lods
insb
sti
push
sti
xchg
stc
in
sub
mov
dec
repnz
fbld
lds
push
addb
sub
into
xchg
push
int3
emms
sbb
fisttps
sub
loope
pop
ljmp
push
jns
jnp
jecxz
lock
lcall
push
test
dec
int3
sbb
pop
pop
lahf
sbb
push
pop
outsb
rcrl
mov
int
jg
mov
roll
call
hlt
cmpsl
fnsave
adc
cmc
addr16
clc
addr16
jne
lcall
gs
jae
pop
fistpll
xchg
dec
add
lods
sub
mov
repz
leave
test
nop
sbb
dec
mov
xchg
jb
cmp
pop
je
or
push
enter
sub
stc
mov
inc
outsb
jle
adc
fcomps
out
jg
xchg
cmp
add
pop
test
lcall
dec
ds
lret
lods
rclb
into
test
inc
mov
adcl
loope
icebp
mov
pop
push
std
insl
test
add
xor
stos
and
or
rorb
or
imulb
adc
dec
push
jmp
div
push
pusha
sarb
daa
push
nopl
push
xor
stos
xchg
icebp
and
mull
jne
cmp
loopne
ror
insb
insl
sub
and
mov
flds
mov
rolb
fldcw
fs
add
pop
xchg
pusha
aam
shlb
dec
les
sub
mov
mov
cmpb
dec
enter
jecxz
insb
dec
fs
cmp
icebp
outsb
mov
push
mov
sub
ljmp
aam
adcb
jno
add
test
mov
sbb
pop
sbb
push
add
scas
fbld
shlb
je
dec
add
xchg
cmp
and
idiv
pop
cmp
inc
mov
in
jp
xchg
repnz
and
sbb
fstp
sub
mov
in
dec
adc
out
cmp
enter
inc
sub
fcoml
add
push
aam
mov
out
int
sti
adc
cli
and
gs
in
das
jmp
push
cmp
repz
es
fstpt
or
push
add
cs
jecxz
add
dec
jmp
gs
push
jnp
loop
push
cmpb
pop
mov
pop
mov
ret
shll
mov
test
cwtl
and
mov
sub
adc
aam
mov
sarl
mov
sarb
mov
repz
jno
jno
pop
mov
out
push
push
lds
cmpl
add
js
push
lcall
xchg
pop
gs
fwait
aam
xor
mov
mov
int3
or
fistps
arpl
popa
setg
push
sub
mov
ret
pop
add
dec
pushf
pushw
les
pop
xchg
into
enter
sbb
mov
sbb
mov
mov
dec
cli
flds
aam
repz
jle
cmp
sahf
out
mov
imul
cld
or
jle
jg
mov
and
xlat
test
inc
mov
pop
mov
fadds
sar
repz
inc
filds
outsl
mov
add
imul
xchg
int3
xchg
in
pop
faddl
sub
mov
pop
shll
cwtl
pop
adc
sub
adcl
xlat
mov
mov
in
add
xchg
cmc
sbb
xor
inc
mov
sbb
sbb
xchg
rorl
sub
adc
mov
ret
cs
aaa
xor
jae
ret
sbb
add
inc
push
insl
mov
pop
gs
xchg
addr16
pop
mov
cmp
stos
jb
lods
sbb
ja
je
iret
nop
xchg
pop
xlat
dec
popf
and
imul
jge
xor
ret
leave
mov
test
mov
xor
pop
daa
mov
lret
ficoms
fsubl
cs
imul
mov
loopne
mov
mov
jne
push
cmp
jno
pusha
pop
xorb
int3
jmp
ja
lret
sti
fsubl
mov
lea
in
insl
adc
popf
push
dec
jo
pop
cmc
push
call
into
mov
xchg
push
pusha
jmp
jmp
and
ljmp
add
mov
mov
jecxz
cld
dec
ret
sub
mov
and
aas
mov
rclb
mov
or
adc
dec
and
ja
xchg
mov
push
das
in
mov
and
mov
xchg
adc
cltd
mov
lock
dec
ss
int3
pop
jl
jns
pop
jl
mov
push
xor
imul
scas
aad
iret
inc
xor
mov
les
push
das
push
add
sahf
mov
adc
mov
or
pop
or
dec
push
xor
in
int
or
out
inc
cmpsb
fcoms
dec
xchg
jl
sub
mov
jle
push
xor
shrb
sub
or
les
sbb
sub
hlt
jne
mov
js
push
gs
aam
sub
imul
cmpsl
cli
imulb
push
push
scas
inc
push
insl
fsubl
adc
xchg
inc
add
aam
and
cmpsl
loope
loopne
or
outsl
mov
mov
push
andb
jae
adc
clc
enter
mov
pop
push
inc
mov
aam
or
lods
jle
xor
xor
hlt
xor
call
insb
sbb
faddl
fcmove
cli
call
or
push
push
mov
or
jp
jmp
cmp
cmp
sbb
xor
das
aaa
insl
mov
mov
mov
cmpsb
push
cmp
rclb
insb
in
mov
divb
lods
mov
mov
divl
rorb
je
movsb
push
jbe
test
mov
sub
xchg
cmp
xor
addr16
leave
pop
fmull
pop
rorb
cmp
es
mov
jne
in
push
jns
imul
push
dec
mov
xor
out
pop
fistpll
mov
jp
pop
add
pusha
clc
ds
sbb
out
aas
dec
and
leave
xchg
cmpsb
aaa
scas
sub
xlat
sahf
sub
js
cli
popa
stos
cli
mov
dec
cltd
pusha
mov
cmpsl
pop
inc
dec
adc
jg
leave
loopne
cltd
cmp
dec
sub
in
imul
addr16
pushf
in
cmp
arpl
imul
xor
mov
test
or
inc
clc
cli
nop
or
xchg
jp
loop
sbbb
test
fdivrl
lds
imul
cmp
test
scas
sbbl
xchg
sub
ja
test
or
sbb
loopne
insl
nop
std
ds
xor
fs
fwait
push
mov
xor
cmc
loope
cmpsb
stc
cmp
or
dec
jle
jae
dec
adc
jo
mov
and
into
inc
in
aam
loopne
push
stc
into
fsubrl
xchg
je
push
mov
ja
mov
push
xor
push
movsb
movsb
mov
add
fucomi
repz
or
loopne
jne
xor
ja
dec
mov
ljmp
jg
adc
aam
bound
adc
jo
in
push
decl
imul
cmp
outsw
icebp
out
cltd
jg
pop
out
int3
xlat
push
gs
and
mulb
out
shrl
xchg
out
adc
mov
stos
psadbw
clc
bnd
outsl
add
rcrb
jmp
xor
js
cmp
sarl
push
mov
imul
loope
mov
scas
dec
pusha
mov
das
scas
aam
adc
xchg
lcall
dec
jo
inc
cmpsb
ljmp
sub
lcall
in
xchg
push
xchg
mov
iret
add
pop
xchg
push
arpl
nop
iret
scas
add
pop
mov
pop
not
andb
in
adc
sti
jae
ja
pop
and
cli
shlb
cmp
dec
sub
scas
cmp
inc
ljmp
inc
sbb
roll
jmp
xlat
inc
pop
daa
mov
and
rcl
fld
push
xchg
pop
fwait
dec
ds
std
mov
ja
push
inc
xchg
jl
imul
repnz
mov
adc
outsl
inc
js
aaa
scas
dec
dec
stos
in
lea
cmpl
fwait
xchg
jmp
das
ss
out
lods
push
outsb
pop
int3
or
loope
pusha
xor
test
xor
sbb
mov
and
cld
in
mov
fisttps
rorl
test
xchg
mov
ret
xor
sti
adc
lret
adc
insb
jbe
imul
adc
jp
jp
jbe
fs
cmp
mov
push
push
mov
mov
es
and
jo
mov
je
push
push
sub
sub
cmp
push
jae
mov
jns
es
jns
arpl
call
xor
mov
add
repnz
les
cs
sbb
fdivl
push
and
ds
hlt
push
cmc
and
pusha
sahf
push
hlt
mov
nop
aam
jno
arpl
sar
mov
jle
or
mov
or
pop
lcall
and
jno
jg
fcmovu
jle
mov
pusha
xchg
cmpsl
mov
imul
and
addr16
cltd
push
mov
and
cltd
ljmp
out
mov
cwtl
pop
and
lods
jle
add
insl
iret
aad
xchg
xlat
jno
adc
xrelease
aaa
dec
xchg
xchg
and
push
je
mov
mov
jge
mov
les
adc
push
mov
xor
pop
lods
dec
mov
mov
aaa
mov
push
jae
cwtl
fstl
push
or
inc
decl
leave
mov
add
pop
aaa
mov
push
int3
xchg
add
jge
inc
lcall
adc
push
int3
stc
mov
int3
inc
lds
add
lret
dec
imul
in
pop
mov
mov
iret
xor
lcall
in
add
int3
adc
mov
test
aam
inc
xchg
mov
shll
ret
outsl
or
jo
movsb
sbb
loop
out
xchg
pop
add
pop
adc
scas
imul
and
mov
dec
xor
push
mov
ret
cmp
mov
push
jecxz
outsl
mov
push
add
sbb
inc
pop
in
jp
add
mov
sub
jno
xchg
sahf
or
out
xor
adcl
btr
imul
iret
fsub
mulb
pop
jge
mov
jp
sbb
pusha
mov
dec
xor
jge
mov
mov
insl
mov
popa
lods
inc
push
or
repnz
and
add
jge
ret
imul
int3
arpl
and
mov
push
dec
arpl
xchg
dec
push
repz
pop
sbb
mov
xchg
repnz
sti
lock
in
mov
mov
lock
pop
push
mov
inc
mov
lds
sub
mov
xor
decb
or
lods
jnp
mov
popa
mov
pop
mov
cwtl
mov
jmp
out
es
jp
in
punpckldq
jecxz
je
jecxz
addb
sub
push
push
sbb
hlt
adc
jb
inc
aam
push
arpl
je
and
fistps
and
enter
daa
call
lcall
daa
enter
mov
push
shrl
aam
pop
jecxz
sti
lahf
sti
mov
xchg
xchg
sahf
out
ret
scas
les
fs
push
and
mov
cmp
je
fstpt
loop
ss
lea
lds
out
adc
or
push
mov
std
idivl
test
mov
inc
enter
push
imulb
cmp
jmp
push
scas
loop
fstps
xor
pop
test
sub
dec
clc
loop
sub
xacquire
add
je
xor
dec
leave
out
sub
xchg
loop
imul
mov
or
lret
stos
dec
negb
and
pop
dec
pusha
lea
or
cmpsl
mov
int
adc
outsb
es
js
out
xchg
sub
xor
jecxz
ficompl
repnz
lods
ret
clc
dec
mov
std
and
hlt
iret
test
mov
jno
jns
fcoml
jmp
inc
push
xchg
fbld
data16
add
jb
xor
in
mov
inc
dec
xchg
pop
loope
in
mov
sbb
sahf
cmp
xor
mov
mov
xchg
fnsave
jge
jl
lcall
jecxz
les
adc
jbe
or
scas
lods
dec
sub
aad
mov
pop
pop
pusha
xor
in
sub
fidivl
dec
jg
pop
sub
fmul
stc
lea
jae
mov
push
pusha
inc
aas
subl
mov
fisubl
mov
cmp
jns
inc
sbbb
xor
lahf
inc
sub
in
mov
push
int3
cs
mov
dec
add
rol
shrl
dec
sub
mov
pop
cmpsb
mov
push
fwait
mov
fwait
leave
pop
jecxz
jbe
sbb
jecxz
or
inc
and
out
inc
cmpsl
sub
jge
xchg
mov
cld
loop
lahf
test
sbb
outsl
and
mov
jp
pushf
int
push
mov
lods
cmc
fadd
xor
loop
scas
jg
sbb
xor
sub
and
mov
push
notb
cmpsl
push
inc
hlt
cmpsl
fsubr
in
mov
pop
or
mov
imul
in
mov
lea
aaa
and
shrb
or
mov
int3
mov
jl
ficoms
adc
notb
clc
mov
pop
test
adc
mov
xor
popf
leave
jg
rcrl
jae
dec
sub
dec
push
out
dec
shl
mov
sbb
stc
in
enter
sub
fmuls
insl
inc
jp
push
sbb
mov
outsb
outsb
pop
insb
xor
dec
pop
stc
fisubs
inc
pop
adc
in
push
aaa
cmp
dec
or
dec
enter
push
mov
div
daa
cld
fwait
jne
es
pop
push
mov
loopne
nop
jbe
mov
cmpsb
mov
inc
jne
cmp
aas
adc
out
call
inc
dec
shr
les
mov
jecxz
push
sti
cli
pushf
adc
sub
cmp
out
outsb
mov
rolb
imul
mov
cmp
push
and
fistpll
daa
sahf
xlat
leave
in
inc
sbb
addr16
out
mov
xchg
int3
mov
mov
or
fsubp
rolb
out
jle
test
jno
insl
jb
clc
into
and
sarl
stos
test
inc
and
nop
jecxz
pushf
mov
mov
scas
in
insb
and
cmp
add
jnp
daa
xchg
jmp
or
push
inc
push
cltd
xor
clc
and
inc
in
int
lcall
push
and
addl
mov
add
push
add
mov
aad
mov
lret
xchg
push
loopne
cmp
sbb
fildl
mov
enter
jbe
sti
xor
lock
add
cmp
xchg
xchg
jo
mov
orl
insl
insl
dec
icebp
or
jns
in
bound
add
int3
sbb
or
loopne
mov
adc
lock
outsl
lods
pop
lcall
test
cmpsb
push
xchg
push
rolb
dec
and
xchg
movhps
adcl
and
ret
jle
push
bound
adc
push
lret
cltd
mov
add
dec
out
pop
add
cmpb
sahf
insb
testb
cmp
mov
add
mov
jbe
jne
cmpsl
push
and
push
negl
lock
sbb
sub
fildll
fwait
or
mov
cld
out
outsl
shl
mov
jnp
cwtl
cmp
stos
sbb
jae
mov
cltd
lahf
adc
icebp
les
push
push
mov
push
in
gs
mov
mov
mov
mov
mov
inc
dec
mov
xchg
addl
insl
mov
or
push
addr16
sbb
loopne
fwait
std
pop
sub
data16
lret
in
dec
lret
push
lods
flds
dec
mov
push
inc
adc
lock
cmpsl
fs
jns
push
test
pop
test
lret
xchg
add
lea
mov
ss
dec
inc
push
les
scas
sarb
pop
mull
adc
fcom
aaa
pop
xlat
pop
sti
scas
mov
enter
xchg
imul
dec
in
aad
lret
sbb
xchg
std
sub
lret
pop
in
lahf
es
push
scas
lods
cmp
mov
cwtl
je
aad
leave
shlb
aad
int
dec
sbb
aad
mov
mov
lock
mov
fidivl
sub
dec
call
mov
add
fdivs
lret
xchg
add
ja
push
gs
xchg
sbb
cli
jmp
popa
adc
test
dec
sub
xchg
es
sbb
pop
pop
mov
mov
stos
or
sbb
push
in
jo
fs
inc
xchg
int
cmpsl
jno
jmp
fdivrp
cmc
ss
push
pop
out
lcall
or
xor
scas
fisttpll
mov
ret
add
xchg
and
daa
cs
js
pop
mov
push
xchg
leave
out
adc
and
movsb
mov
in
inc
cmpsl
push
push
sub
mov
cs
dec
sahf
sub
repz
xchg
scas
loop
es
popa
mov
jp
imul
jg
xlat
pop
cmp
and
lret
test
sbb
rclb
mov
fadds
cmpb
cwtl
shlb
dec
dec
lock
push
sub
mov
push
xlat
cmpsl
sub
or
sub
pushf
ja
repz
cmp
aad
sbb
inc
fcmovnbe
fucomp
cmp
out
mov
movsb
dec
fwait
in
test
idivb
dec
pop
sbb
pop
aaa
insb
in
mov
cs
stos
jge
leave
data16
xchg
pop
mov
stos
out
pop
xchg
adc
xorb
sbb
mov
mov
iret
mov
mov
divl
add
dec
dec
addr16
les
mov
test
test
add
add
hlt
imul
notl
in
push
jle,pt
daa
fnstenv
jmp
pop
mov
filds
jo
push
gs
insb
repz
jnp
test
int3
add
pop
add
mov
mov
aas
ds
add
aaa
loop
mov
fwait
mov
pop
cwtl
add
adc
mov
iret
test
push
add
mov
fwait
sub
lock
cltd
mov
sbb
sbb
scas
cmc
xor
or
and
pop
test
mov
cmc
test
jnp
mov
pop
mov
int
push
dec
int
stos
jne
mov
cmp
loopne
push
gs
pop
mov
mov
xchg
jae
sbb
sbb
repnz
pop
call
mov
cs
pop
cmp
mov
sub
xchg
adc
pusha
sub
fldl
mov
jns
imul
test
dec
mov
ss
rorl
out
jne
scas
pusha
shl
cltd
insl
insl
lds
ja
bound
xor
lods
mov
pop
cld
in
loop
out
out
cli
movsb
test
dec
cmp
mull
dec
pop
repz
andl
jmp
push
xor
jmp
icebp
roll
daa
int3
push
sbb
lret
jmp
das
push
xor
xor
mov
jge
fdivs
pushf
xor
mov
jbe
mov
leave
add
inc
gs
cltd
sbb
xchg
movsl
cli
inc
pop
loope
daa
cmpsb
mov
pop
scas
sub
insl
mov
sbb
call
and
fcomip
push
mov
imul
mov
test
cli
dec
xor
dec
arpl
push
mov
nop
das
cmp
out
sahf
cmpsb
stos
mov
arpl
or
mov
jb
xor
lea
push
mov
jae
mov
sbb
fisttpll
std
shrb
mov
pop
xorb
repz
dec
popa
fidivl
notb
enter
orb
sub
xchg
ja
in
sti
dec
sti
mov
icebp
fmuls
out
rcrb
xchg
jecxz
push
std
push
mov
lret
imulb
inc
das
inc
sbb
xor
dec
ficomps
inc
add
sbb
popa
ja
jae
fcomip
mov
out
xor
dec
jg
mov
aas
cmpsl
rcrl
into
lahf
sbb
sub
jmp
lock
out
adc
inc
adc
test
adc
stos
and
push
jmp
ret
ja
pusha
aaa
and
pop
fistps
mov
pop
pop
xchg
pop
or
imul
add
sti
mov
push
xorb
fs
shrl
lahf
cmp
mov
test
insl
nop
aad
ret
xchg
pop
js
sub
insb
fs
adc
rclb
xchg
daa
jns
push
rclb
xchg
lea
repz
adc
popa
push
and
cwtl
sub
xchg
hlt
cltd
mov
repnz
pop
imul
popa
pop
stos
xor
das
pop
flds
ret
dec
and
leave
pop
sbb
sub
inc
ss
xchg
jle
pop
lret
inc
push
pop
aad
ss
add
sbb
push
adc
mov
mov
je
inc
add
sub
add
out
mov
xchg
jne
js
jae
push
adc
mov
into
out
daa
fistps
shr
ds
rclb
pop
or
xchg
stos
jb
addr16
dec
jge
pop
sti
repz
jbe
inc
movlps
or
adc
push
sub
imul
in
sub
lods
dec
pushf
test
cld
dec
mull
push
xor
or
scas
pop
add
dec
jb
mov
out
cmpsb
xchg
mov
jb
and
mov
outsl
test
lret
mov
mov
sti
repnz
xchg
outsb
push
rcrb
stc
negl
dec
jns
loopne
push
sbb
mov
inc
inc
cli
subb
push
fdivrs
mov
ret
cmc
inc
lcall
mov
outsl
out
dec
movsl
data16
faddp
adc
ss
shll
mov
inc
jb
mov
shl
mov
fistpl
int
dec
repz
cmp
xchg
notl
push
fcoms
mov
cmp
ret
sbb
cld
mov
lcall
xchg
aas
testb
test
scas
inc
push
cmpsb
jnp
pop
js
xor
lea
insb
xchg
mov
sub
sbb
jg
push
and
outsb
fisttps
out
push
push
push
int
lock
bound
cmp
pop
mov
add
jns
into
lock
mov
cmp
jne
rcrl
dec
add
push
push
je
fdivl
ljmp
inc
fmuls
out
ds
mov
ret
jb
das
repz
ljmp
mov
or
mov
xor
lods
mov
inc
pusha
push
sbb
fildl
loopne
xor
stc
movsb
js
in
xor
push
fidivs
push
jno
mov
int
insb
or
mov
sub
data16
pop
pop
mov
leave
mov
fists
ret
mov
out
mov
notb
insl
sbb
dec
jmp
xchg
add
jmp
pusha
xchg
fcomi
lret
dec
mov
push
xchg
xchg
shlb
cmp
into
mov
dec
sub
das
xchg
and
call
orl
jecxz
inc
sbb
call
stos
jae
int3
mov
mov
fs
mov
leave
adc
inc
daa
xchg
aas
ffree
popf
stc
out
add
icebp
pusha
inc
fs
jle
push
add
jbe
xor
outsl
lcall
or
push
outsb
out
call
xchg
jl
xchg
xchg
dec
and
and
sarl
xchg
jae
and
ja
pop
sub
cmp
rorb
pop
inc
test
push
out
mov
dec
jg
es
in
je
jnp
add
add
shlb
repz
pop
jge
push
scas
outsb
jo
add
scas
cld
test
movsl
pusha
fsubrs
push
aas
lahf
jne
test
outsb
lock
cld
outsl
sub
loopne
cltd
jo
cmpl
and
sbb
imul
clc
push
pop
pop
fcoml
rcl
xor
adc
pop
inc
mov
in
mov
cltd
iret
test
sahf
xor
jae
clc
aaa
jecxz
fiaddl
jg
xor
insl
movsb
mov
dec
mov
shrb
adc
cmpsl
push
enter
ret
cwtl
mov
dec
pop
jg
pop
into
out
and
and
sbb
adc
and
in
dec
dec
jl
mov
sub
lock
push
push
xorb
sub
adc
xchg
test
or
push
sbb
and
aaa
adc
xchg
jbe
lcall
push
movsl
xchg
pushf
fsubs
adc
test
dec
or
dec
repz
aas
mov
jmp
clc
enter
jne
cmpsb
add
mov
ja
inc
fiaddl
insl
xor
push
lret
icebp
jnp
in
shlb
fisubrl
sbb
xchg
mov
test
icebp
nop
int3
mov
mov
lret
mov
push
clc
jmp
and
mov
mov
mov
les
sbbb
ja
xchg
sbb
mov
lret
adc
inc
int3
xchg
cmpsb
subl
jne
orb
mov
xchg
scas
repnz
adc
jp
push
rcl
es
hlt
out
ret
pusha
test
hlt
scas
xor
sub
inc
and
test
push
push
jae
mov
push
mov
dec
adc
shlb
mov
test
pop
and
shlb
xlat
xchg
pop
stos
jae
in
jecxz
mov
cmpsl
xor
fldcw
hlt
stos
enter
mov
sbb
vandnps
das
pop
inc
jg
shl
sub
lods
jae
push
or
lsl
jne
jl
sbb
decb
xor
aas
xor
cmc
mov
call
mov
mov
sub
sti
mov
add
and
dec
push
xchg
in
mov
in
pop
sub
in
lock
std
sub
mov
xlat
push
rorl
lods
xchg
inc
out
lods
inc
mov
mov
test
aas
jbe
xor
jnp
and
inc
lret
sti
lahf
std
xchg
pop
push
pop
inc
jecxz
and
movsb
jb
push
aam
icebp
les
leave
mov
pop
jnp
jg
jmp
pop
adc
out
in
loop
fcompl
pop
cmp
adc
push
shrb
data16
xchg
das
mov
outsb
decl
lcall
mov
sub
cmp
cld
jmp
jnp
mov
jno
cmp
loop
push
adc
rcrl
sub
jmp
mov
popf
xor
xchg
adc
sbb
rcrl
popf
xchg
or
ds
loop
sbb
in
or
out
out
push
push
inc
loop
mov
dec
xorb
test
orb
push
sahf
js
xor
int
cli
repz
lods
adc
nop
imul
pop
xchg
mov
jle
cmpsl
xchg
repz
add
dec
add
inc
cmp
icebp
xor
lock
cmp
sarl
movsl
cmp
mov
xor
and
mov
pop
sbb
jnp
and
cmp
push
orps
push
mov
xor
aas
mov
rcll
out
and
lea
push
lahf
nop
mov
jbe
mov
mov
push
push
icebp
lock
jnp
mov
add
imul
pop
xchg
gs
aad
and
push
rcll
sub
jb
xor
jle
push
xorb
test
mov
test
lret
pop
sbb
aaa
push
jge
dec
ror
add
shrl
mov
mov
jnp
lds
xchg
dec
lret
xchg
or
ljmp
js
in
aas
sbb
lods
and
fnstcw
cltd
fsts
push
aas
lahf
iret
aaa
sbb
pop
arpl
in
sbb
jbe
cmp
cbtw
aas
sub
mov
stos
push
push
jno
push
push
pop
mov
push
or
xchg
das
mov
push
dec
aam
inc
repnz
dec
loopne
decl
scas
add
xchg
xchg
push
cltd
ret
pop
cwtl
mov
push
add
mov
movsb
adc
in
cmc
mov
mov
jne
adc
fisubl
xlat
adc
cmp
sub
jnp
cmp
outsl
aad
lcall
idivl
push
dec
mov
and
test
push
fcomps
mov
jnp
enter
jge
or
mov
jle
xchg
xchg
addl
lret
sarb
roll
popf
jns
dec
push
add
add
mov
and
ljmp
dec
push
push
push
mov
scas
std
into
shr
cmp
inc
push
xor
cmp
mov
xchg
pop
jg
xchg
sub
xlat
les
add
adc
jns
in
out
add
and
aas
pop
repnz
stc
dec
cwtl
add
repz
test
es
incb
fwait
mov
sub
jne
ret
rcrb
cmpsb
pushf
jo
xchg
or
iret
mov
mov
sahf
scas
jp
je
fadds
insl
or
orl
dec
outsl
jae
fnop
clc
ljmp
adc
imul
les
clc
push
mov
and
lea
sbb
shrl
pop
ljmp
mov
cmp
outsb
or
cltd
out
mov
push
pop
rclb
adc
inc
cmp
dec
inc
push
sbb
sbb
hlt
cmpsb
jl
and
mov
pop
xchg
jns
sbb
xchg
push
pop
mov
gs
xlat
mov
cs
or
xchg
call
inc
inc
push
push
lahf
scas
xchg
into
movb
int3
or
inc
xchg
roll
cltd
es
jge
cmpsl
js
sahf
adc
test
sbb
fldl
push
cltd
icebp
ljmp
data16
push
clc
pop
jae
aaa
mov
subl
or
js
mov
inc
shlb
dec
ljmp
fucom
rorl
dec
lds
jo
cmpb
xchg
call
pop
mov
test
cmp
jns
rclb
sbb
and
leave
sbb
in
ret
sub
and
sub
push
leave
int
sarl
push
pop
pop
pop
fisubrl
mov
jno
in
lods
loope
and
sbb
lret
sti
push
adc
rcll
push
lret
in
cmovne
cld
fisubrl
rcrb
in
and
mov
test
xchg
ss
jo
dec
call
inc
jl,pt
sbb
ret
loope
inc
in
sbb
loope
pop
and
adc
mov
mov
popf
xchg
notb
xor
cmpsl
dec
mull
subl
repz
or
jno
cld
xchg
lcall
std
rcrb
fldl
xchg
pop
pop
or
popa
mov
shrl
stc
scas
pushf
out
sbb
inc
fldl
loop
iret
fnstcw
sub
mov
clc
sub
sahf
mov
fs
adc
fwait
xlat
cmpsl
movsl
and
dec
in
test
jg
or
cmp
mov
jne
adc
mov
icebp
out
jg
les
int
ss
xlat
pushf
pushf
call
jae
inc
mov
mov
movsb
mov
decl
mov
ret
movsl
mov
cmpsb
adc
shrb
dec
jecxz
or
arpl
cmp
jecxz
paddq
adc
push
insl
sbb
scas
lret
push
scas
scas
cmp
cmpsl
dec
cmp
or
xor
mov
popf
xlat
mov
icebp
inc
int3
fsts
or
addr16
adc
mov
mov
in
in
ret
cmp
pop
cli
stos
fs
sbb
xchg
popf
psubq
ds
fwait
cld
jmp
popf
pusha
inc
sub
push
fwait
jno
pop
aas
jb
inc
cs
pop
outsl
xlat
mov
inc
rep
mov
dec
movsb
ret
mov
ja
dec
xchg
jg
mov
mov
call
jmp
loopne
or
lods
push
loope
xchg
sarl
mov
xchg
cmc
push
inc
dec
das
mov
outsl
cmpsb
shrb
rcrl
jnp
dec
je
inc
dec
lods
cmpsb
push
sbb
lods
dec
jne
mov
mov
push
push
jecxz
cmpsb
or
and
cmp
inc
movsl
sbb
pop
adc
sub
movsb
xor
fcoml
sbb
lods
lahf
pop
pusha
imul
dec
je
sub
and
xor
jb
add
mov
pop
xchg
adc
or
lods
jbe
hlt
ss
jae
out
cltd
mov
xor
mov
jp
mov
push
pop
sub
pop
adc
stos
inc
subb
nop
and
movsl
cmp
out
inc
push
mov
adc
subb
insl
dec
shll
test
push
mov
dec
aaa
daa
enter
mov
ja
rcll
outsl
aad
lcall
push
mov
bound
call
addl
lock
add
mov
jno
dec
and
mov
lcall
ja
aad
mov
sbb
xchg
mov
insb
add
sbb
leave
shl
xor
cmp
dec
iret
cmpsb
push
xor
orl
xchg
cmc
sub
fs
pop
stc
std
fst
dec
add
mov
pop
jle
cmpsb
sub
pop
cld
dec
dec
leave
div
pop
xor
pop
fstpt
js
or
fwait
cmp
xchg
mov
mov
dec
push
push
push
sub
add
dec
cmp
add
or
sbb
sub
ret
pop
lcall
and
icebp
xor
pop
in
cmp
lea
add
pop
and
mov
jne
pushf
inc
add
push
fwait
jg
cltd
mov
sbb
push
jb
mov
out
inc
mov
aas
cmp
mov
pushf
aaa
pop
les
arpl
add
fdivl
xchg
pop
out
gs
dec
shrb
inc
test
dec
sbb
xchg
xorb
lds
test
das
hlt
ret
scas
loopne
push
fistl
hlt
xor
arpl
scas
cwtl
stos
sbb
adc
popa
and
inc
add
cmp
test
xchg
arpl
arpl
xor
lea
sbb
and
dec
das
xchg
inc
repz
leave
and
inc
sbb
jb
stos
imul
inc
lret
mov
sub
es
outsb
aas
push
imul
incb
or
cmp
loop
or
rclb
push
push
push
push
mov
or
dec
test
out
jnp
push
lods
mov
jnp
in
rcll
insb
aas
mov
push
arpl
xchg
sbbb
je
andb
into
mov
adc
jmp
and
outsb
lret
jp
movsb
or
scas
or
xchg
mov
jb
inc
loopne
pop
sub
imul
out
add
imul
pop
subl
and
mov
sub
pop
rorl
sbb
xchg
dec
aas
mov
inc
ja
push
mov
adc
movsl
fstpl
mov
cmp
jo
inc
clc
rcrl
sahf
bound
lahf
inc
push
xor
push
mov
in
test
and
data16
mov
movsb
iret
les
jne
jl
pop
xorb
pop
outsb
xchg
fdecstp
push
shl
mov
ds
les
xor
inc
pop
loope
xor
sub
loope
mov
mov
fnsave
mov
stc
sahf
ret
subl
sub
lret
push
outsl
mov
cwtl
je
mov
repnz
jp
xor
mov
jle
push
mov
and
push
xchg
fiadds
mov
pmaxub
popf
outsl
aam
sbb
fwait
pushf
push
sub
inc
lahf
outsb
dec
push
div
pop
rep
js
and
push
fildl
inc
jnp
leave
cmp
clc
push
movsb
adc
lods
mov
stos
jns
fs
xchg
mov
cmp
jmp
push
js
lea
xlat
outsl
jo
adc
or
and
sbb
nop
data16
and
cmp
fistpl
ficoml
dec
xor
jmp
pop
sub
jns
xor
pusha
shlb
icebp
pop
data16
rclb
enter
lock
iret
jge
mov
rcrb
push
push
in
jmp
rolb
mov
pop
pop
sbb
nop
dec
xchg
es
sub
jnp
sbb
imul
popf
iret
inc
mov
imul
jnp
adc
pop
sub
xchg
xor
imul
xchg
jp
add
jmp
dec
ljmp
ds
incb
orl
jle
lods
and
xchg
fdivrs
adc
xchg
sti
icebp
fcmovne
out
fmul
adc
out
sub
out
out
xchg
bound
scas
adcb
dec
es
xchg
inc
outsb
les
fmul
or
pop
fldt
mov
jo
cltd
xchg
push
jno
push
fwait
lcall
mov
jmp
cmp
ficoml
ds
loop
xor
sbb
cltd
xchg
mov
test
int3
sub
ja
jle
popa
int3
arpl
mov
push
call
fnsave
adc
movsb
sahf
cmpl
cmp
iret
add
jp
int
gs
xchg
call
ds
test
sbb
ss
cs
add
ficoms
sub
cmp
jle
and
add
push
push
frstor
leave
mov
je
fdivrp
cmpsl
sahf
pop
xchg
ret
push
adc
add
push
inc
mov
mov
xor
or
adc
xorl
push
ljmp
inc
sbb
sub
pop
mov
mov
or
jo
cmp
sarb
cs
mov
ds
xchg
add
ja
dec
sbb
imul
and
mov
jp
mov
lret
cmp
mov
inc
mov
rolb
add
add
push
adc
xchg
lcall
cmp
cli
push
stc
in
push
lds
sbb
push
loope
xchg
arpl
rolb
xlat
pop
mov
into
push
fs
mov
mov
mov
popa
xchg
lods
mov
xlat
addr16
xchg
mov
imul
movsl
jb
inc
mov
inc
sub
mov
test
mov
jo
in
ja
test
pop
lock
mov
xchg
pop
push
mov
clc
out
std
clc
sahf
out
fnsetpm(287
out
rcrb
enter
scas
out
icebp
push
imul
xor
lea
imul
lcall
push
push
stos
out
xchg
fwait
arpl
pop
jge
cmpsb
stc
sub
push
outsb
cli
sarl
mov
filds
bound
or
movsb
ljmp
mov
repz
and
cmp
scas
jo
xor
pusha
andl
into
or
rcll
dec
push
add
dec
mov
out
mov
cmp
daa
adc
decw
xor
add
js
inc
lods
push
out
lock
and
test
mov
stos
cld
ret
cld
fisttps
enter
adc
mov
dec
repnz
std
xlat
not
sbb
outsl
or
aam
test
adc
lock
arpl
rcl
fdivrs
mov
pop
sub
jae
xchg
fimuls
rcr
pusha
daa
xchg
xor
cli
and
jecxz
add
jnp
loop
js
adc
mov
arpl
cmpsb
clc
mov
pop
nop
divl
jecxz
sbb
or
shl
mov
jae
pushf
leave
inc
fsts
mov
mov
ljmp
pop
mov
sub
ret
or
sub
in
xchg
add
or
adc
push
dec
fwait
dec
mov
xor
sub
aaa
mov
stos
sbb
dec
sbb
popf
pop
and
jo
loopne
lock
sbb
pop
ficoml
les
outsb
in
adc
cmp
adc
adc
adc
inc
pop
jg
lock
scas
push
nop
dec
rorl
adc
mov
or
or
fmull
pusha
test
mov
jns
test
jbe
jmp
sub
push
mov
fsts
xor
add
pop
shrl
ss
test
jns
xchg
mov
icebp
fbstp
cmpxchg8b
jnp
lea
cmp
std
popf
lcall
mov
cli
popf
xchg
push
pop
or
dec
xchg
es
cli
scas
dec
jae
stos
mov
dec
repz
ret
stos
and
sbbl
add
xor
add
add
pushf
dec
adc
push
xchg
fisubs
dec
cmpsl
out
inc
cld
pop
adc
dec
loope
push
testl
push
jnp
repz
pusha
arpl
jnp
dec
je
lret
lock
inc
lret
test
cmpsl
inc
dec
adc
add
jmp
jns
sbb
xchg
mov
inc
fisttpl
mov
mov
cmc
xor
lods
repnz
bnd
pop
mov
repnz
pop
and
sub
pop
paddb
inc
push
mov
mov
cmp
mov
ror
sti
jle
inc
test
mov
lods
push
fcompl
in
loope
repz
loope
sahf
scas
lods
lcall
enter
bound
sub
aaa
mov
pop
std
jge
push
je
int
inc
insb
pop
push
movsb
cltd
push
popf
flds
jb
fisttpl
dec
mov
mov
clc
xor
and
insl
push
pop
repz
in
mov
je
imul
or
bnd
xchg
cltd
mov
ret
ljmp
daa
xor
fldt
popa
mov
or
inc
pushf
int3
or
fwait
sahf
rcrb
sbb
sub
or
divl
sub
icebp
je
inc
push
sbb
inc
aad
fcmovbe
movsl
jecxz
leave
fimuls
sarb
xor
ret
mov
push
fs
jbe
lods
push
loopne
jae
in
and
jbe
xchg
lea
push
xchg
lods
cmpsl
dec
mov
inc
cmp
sbb
popl
movsb
aaa
stos
xchg
daa
imul
scas
adcl
sbb
pop
jecxz
or
mov
sbb
dec
jno
lret
pushf
or
adc
ljmp
rcr
add
inc
jbe
or
push
mov
xchg
clc
nop
inc
cli
mov
mov
mov
pop
pushf
hlt
enter
out
pop
inc
fistps
inc
jmp
mov
add
xor
dec
and
adc
ds
int3
add
sbb
xchg
inc
sbb
jp
mov
rol
es
ret
push
dec
or
sub
mov
add
fimull
jb
jle
and
jbe
jb
cmp
sbb
test
bound
pusha
mov
xor
cmp
cwtl
insb
ds
cmp
movl
xchg
sub
fcomps
in
decl
js
xor
fdivrl
mov
xchg
addr16
fistpll
imulb
pop
mov
inc
xchg
jb
xchg
test
inc
insb
scas
ret
je
and
jecxz
fst
incb
orl
lea
aaa
mov
mov
jno
icebp
scas
inc
popf
push
addl
or
mov
or
jecxz
dec
aam
add
adc
inc
jg
and
jbe
cmp
fnsave
hlt
aam
lods
idivl
lods
and
adc
aam
mov
xor
int
jmp
xchg
cmp
xor
jl
sar
add
jne
cmp
sub
mov
sbb
xchg
inc
jge
adc
stos
fildl
jle
les
out
nop
aam
daa
cmp
add
xchg
jb
stos
lock
mov
sbb
cmpsl
cmp
jbe
xor
iret
loope
add
pop
pop
pop
js
push
mov
xchg
leave
sub
inc
mov
pusha
xchg
insl
sub
in
mov
pop
mov
and
nop
cmp
xor
mov
pop
adc
mov
loop
pop
mov
jae
cwtl
mov
notl
push
dec
push
push
jp
stc
pop
or
mov
dec
loop
xchg
cmc
test
jno
xlat
paddd
test
sub
sbb
in
or
jp
mov
insb
push
bound
lahf
popa
in
push
arpl
xchg
mov
sbb
inc
shll
push
jbe
daa
scas
pop
xlat
out
mov
xchg
repz
lea
mov
or
loop
aaa
movsb
sub
adc
mov
jp
int3
ficomps
sub
pop
scas
fldenv
lahf
push
xchg
rclb
cli
divl
sub
xlat
jns
fcoml
jge
jo
cmp
xor
mov
imul
scas
repz
pop
xor
and
pop
idivl
pop
loop
sahf
push
inc
push
mov
fsubp
pop
lcall
das
pop
lods
fistpl
pop
mov
fstpl
pop
cmp
xchg
jl
stc
adc
iret
mov
jg
fadds
movsl
and
outsl
pop
sub
popf
dec
xor
cwtl
ss
xor
mov
outsb
test
xrelease
dec
fildll
outsl
mov
xor
jp
fs
and
or
std
xor
push
push
xlat
inc
pop
repz
mov
out
adc
ja
push
jb
cmp
pop
ret
jl
jne
mov
or
cli
jp
pushf
mov
popa
lret
dec
jb
fistps
jnp
in
inc
sub
imul
fstps
fwait
lret
jo
iret
stos
test
sub
enter
xchg
xchg
outsl
mov
mov
push
mov
pop
mov
mov
mov
xchg
sub
mov
fildl
add
mov
clc
repnz
mov
cmc
pop
cli
scas
imul
leave
mov
loope
arpl
and
das
cwtl
pop
loopne
push
cmp
xor
ret
lcall
dec
lock
or
lret
or
pop
mov
sti
shll
ss
xorb
push
xor
push
sbb
xor
je
daa
je
scas
fisubl
pop
movsb
js
push
rep
movsb
cltd
dec
xchg
or
inc
bound
jp
fisubrs
out
loopne,pt
cmp
jmp
rol
lods
in
xor
sbb
dec
xor
lea
xchg
jnp
cmpl
rorb
in
aad
insl
xchg
jge
jmp
aam
pop
mov
ljmp
aad
ss
sbb
mov
mov
repz
test
lahf
jo
outsb
lahf
movups
ds
xchg
mov
push
push
lds
push
xchg
arpl
push
les
out
rclb
adc
xor
push
sbb
leave
mov
je
clc
ret
shlb
xor
jmp
cmpsb
push
aad
mov
cmpsb
fidivl
cld
push
or
inc
push
das
lock
adc
stos
xchg
jbe
pop
cmp
xchg
sbb
lea
xchg
lcall
decl
lods
cmp
jae
push
jae
inc
mov
into
mov
fs
orl
inc
add
pop
or
aad
clc
cld
jns
add
xor
lahf
lds
bound
mov
mov
push
ret
cmp
stos
fdivrp
add
aad
out
push
cld
clc
int3
jne
mov
inc
fwait
add
fimull
or
mull
test
aam
testb
jp
add
add
sbb
add
sti
adc
test
in
xchg
or
into
push
filds
rcl
mov
jecxz
sbb
mov
out
xchg
xchg
loopne
sub
gs
insl
pop
cmp
scas
addr16
insl
in
in
jp
aam
enter
aaa
jb
xchg
rcrl
out
test
fidivrl
sahf
jns
jl
dec
push
add
cltd
pop
sub
sar
stos
push
add
mov
jge
inc
mov
dec
adc
lahf
add
shlw
push
adcl
cmc
mov
adc
add
inc
int3
pop
xchg
push
out
mov
mov
sub
cs
inc
xchg
nop
andb
or
fdiv
mov
xchg
leave
cmp
mov
cld
cli
jg
aaa
inc
and
jle
sub
sub
mov
and
je
xor
mov
les
add
leave
mov
pop
lea
sub
xchg
xor
pop
daa
dec
jl
sub
cmp
lea
shll
pop
outsb
cmpsb
fs
fsts
mov
shll
dec
or
loope
jp
or
inc
loopne
fcoms
adc
int3
xchg
push
sahf
out
repz
pop
popa
in
pop
lret
add
enter
adc
mov
out
fdivl
insb
mov
stos
outsl
push
pop
addb
nop
xchg
adcb
inc
lahf
cltd
pop
hlt
enter
pop
inc
rep
push
mov
xor
xchg
pop
cs
sbb
pop
sbb
add
xchg
sbb
or
jecxz
in
push
mov
jle
lcall
js
dec
sarb
push
in
push
push
fists
loopne
sub
icebp
lds
xchg
loopne
test
std
orl
ror
mov
jmp
cmp
lods
popa
in
sbb
mov
jp
adc
pop
aas
in
sub
rorl
shll
and
mov
es
add
es
or
sarb
test
mov
fmuls
rclb
pop
push
das
adc
rorl
mov
pop
pop
scas
adc
jne
inc
jp
jmp
mov
mov
pop
xchg
and
cmp
xorb
push
push
cld
sahf
shr
js
adc
ror
mov
add
hlt
mov
lds
inc
idivl
cltd
and
or
stc
sbb
push
pop
mov
sahf
sahf
jns
lret
test
and
icebp
xchg
repnz
je
xor
addr16
cmp
and
out
cli
xchg
mov
sub
pop
push
mov
push
mov
rcll
notb
push
pop
pushf
sahf
sahf
loop
sbb
jp
mov
xor
xchg
cmpsb
fnstcw
mov
mov
inc
dec
cmp
pusha
mov
xlat
xorl
or
orl
shrl
pop
mov
test
lret
loope
icebp
imul
aad
test
pusha
sbb
and
mov
ficomps
je
js
ljmp
testb
cmp
popf
push
fildl
jmp
mov
or
sub
and
dec
cmp
leave
push
int3
test
movsl
je,pn
dec
push
aas
mov
pop
sbb
and
xchg
cmp
or
pushf
jle
pop
ljmp
push
pop
aaa
push
test
test
inc
add
push
mov
and
push
push
jne
lret
jae
insl
sub
int3
xor
movsb
xor
push
jo
mov
dec
arpl
dec
mov
lcall
or
ret
mov
test
push
int3
les
loope
movsl
inc
jecxz
add
and
xor
adc
jp
push
add
xlat
fidivl
jno
cmc
push
stos
push
push
rorl
mov
testb
sahf
mov
cld
movsl
sahf
or
sub
jge
sub
push
dec
mov
loop
xchg
sbb
jo
iret
lea
repz
mov
and
leave
sbb
ss
inc
fistps
stc
mov
xchg
imul
sbb
xor
adc
cmpsb
adc
pop
psubsw
xchg
pop
and
popa
jne
push
push
xchg
jp
es
cmp
push
dec
int3
jp
sti
pop
add
and
xor
ret
pop
lret
dec
popa
ret
std
xchg
sbb
xor
jnp
xor
aaa
mov
add
sti
sbb
or
imul
push
add
jg
mov
sbb
imul
lcall
and
inc
ja
jnp
xchg
dec
xchg
sbb
popfw
jmp
fldpi
pop
testb
lahf
in
xchg
out
dec
aam
loopne
gs
xor
or
clc
and
mov
test
fisubrs
inc
jne
add
clc
stos
jns
xchg
add
stos
stc
jb
js
repz
cmp
sbb
lea
adc
cmp
daa
xchg
adc
icebp
pop
movsb
iret
xor
clc
or
aad
andb
mov
push
test
xor
inc
imul
sbb
loope
jle
mov
rclb
mov
mull
jp
and
test
add
int
sbb
push
movsl
cmc
andb
mov
je
lret
imul
sbb
sbb
subl
orb
jne
sbb
test
lods
ljmp
jp
pop
cmpb
inc
add
xchg
mov
xchg
adc
jo
pop
xor
insb
aam
les
push
imul
push
scas
repnz
and
pop
mov
jbe
leave
ficompl
das
test
dec
ljmp
lea
xchg
xor
je
dec
outsl
insb
jno
fistpl
iret
jne
dec
pusha
push
popa
mov
scas
inc
sbb
adc
xchg
jg
js
and
mov
sti
das
xchg
inc
jp
cmp
pusha
lds
add
sub
push
pop
mov
bound
adc
out
test
dec
outsl
cld
aam
mov
ja
sub
pop
aad
xchg
or
lret
dec
push
mov
dec
mov
mov
cmp
sbb
xor
sub
lahf
jnp
adc
jg
dec
mov
int
add
dec
rcrl
enter
jmp
push
or
adc
cmp
insb
add
into
sub
popf
lods
out
shr
shr
mov
lcall
and
mov
or
mov
test
push
adc
shrl
into
cmp
and
inc
xor
xor
dec
in
dec
mov
cmpsl
cld
cli
inc
jmp
mov
xchg
sti
out
sahf
pop
push
data16
adc
or
xlat
notl
bound
out
or
and
dec
xor
mov
sub
dec
xor
push
or
fistl
loop
hlt
scas
fcomip
dec
or
in
js
loope
fcompl
fstpl
mov
inc
cmp
nop
popa
fdivl
xor
xor
jmp
adc
cmp
add
pushf
mov
out
mov
test
add
fucom
fadds
fisubrl
daa
je,pt
das
inc
push
call
testl
jg
fldcw
je
mov
lret
cmp
sbb
adcl
lods
fdivrs
lods
mov
inc
mov
ret
jmp
dec
test
jo
mov
cmc
pop
cltd
imul
mov
or
or
dec
in
aaa
lods
cmpl
mov
aas
add
stos
gs
mov
daa
in
mov
in
mov
nop
jecxz
xchg
xor
xor
push
sub
or
dec
mov
clc
cmp
and
les
test
and
jge
sbb
inc
inc
lea
mov
sbb
adc
scas
or
push
jge
scas
mov
or
xor
loopne
icebp
xchg
fsts
fbld
cs
cld
stos
jb
gs
pop
or
add
push
mov
sub
in
cld
in
xchg
mov
lahf
cmp
mov
scas
sarb
jecxz
js
cmp
les
test
add
movsb
idivb
add
and
mov
pop
and
es
dec
leave
cwtl
aas
test
inc
fucomi
addr16
loop
mov
xlat
inc
push
fs
shl
cwtl
inc
inc
inc
mov
mov
repz
ror
jmp
jecxz
push
shrl
or
xchg
jo
mov
sub
lods
sbb
or
mov
jle
subl
push
aas
inc
ret
pusha
push
sbb
xchg
popl
inc
roll
adc
inc
sahf
scas
rolb
scas
ss
fisttpll
add
das
push
les
add
or
jmp
xchg
mov
fs
out
fs
repnz
or
sub
add
mov
xor
jge
xchg
pusha
cli
jae
and
cli
xor
lret
outsb
inc
aaa
and
repz
jmp
imulb
lods
pop
mov
pushf
neg
pop
movsb
nop
rolb
aas
mov
subl
mov
popa
sbb
sbb
fsubrp
add
sbb
mov
jl
out
and
enter
out
xor
fcom
jo
sub
shlb
xlat
adcl
scas
stos
or
mov
inc
adc
lea
and
jg
mov
js
out
prefetch
sbbb
scas
sbb
mov
push
cmp
in
xchg
clc
pop
int3
nop
lock
inc
cmp
sbbl
jge
fcompl
rclb
fwait
mov
inc
lds
pop
adc
inc
mov
call
xchg
and
push
or
lea
inc
cwtl
add
pop
push
jno
dec
lock
jl
mov
rep
pop
cltd
dec
inc
xor
add
mov
pop
sub
mov
mov
cmpsl
add
frstor
mov
and
lds
fwait
lcall
push
dec
mov
add
pop
sub
iret
jae
shlb
shl
gs
ret
and
in
sti
pop
and
in
xor
movsl
mov
shll
mov
sub
lds
cmc
pop
sbb
adcb
mov
fs
cmp
repnz
mov
xor
mov
divl
daa
test
subl
aam
lahf
push
xchg
xor
insl
xchg
dec
or
pop
fimull
mov
scas
and
add
pop
cwtl
pop
test
or
adc
loope
add
cmc
gs
dec
inc
adc
push
add
jp
adc
mov
popa
cs
popa
je
push
les
pushf
mov
arpl
ss
cld
pushl
xchg
stos
pusha
dec
add
pop
xor
sub
mov
out
pop
jg
mov
mov
mov
lahf
mov
mov
lods
mov
sub
mov
aad
call
adc
pop
sub
into
movsb
mov
popf
loopne
out
mov
mov
mov
lahf
rcl
push
adc
mov
and
pop
add
lret
in
adc
out
repz
cmpsl
mov
pop
insl
das
scas
push
add
pop
jge
cmp
decl
xorb
dec
pushf
stos
loopne
div
push
cld
adc
adc
scas
mov
arpl
imul
lods
pop
ficomps
pop
fwait
into
xchg
enter
push
sahf
aad
inc
mov
xchg
rorb
and
outsb
dec
pop
nop
jbe
pop
lcall
mov
sbb
xchg
dec
test
jno
dec
in
sub
pushf
mov
popa
jecxz
or
adc
shl
divl
dec
push
inc
bound
in
jo,pn
cltd
nop
clc
cmp
dec
dec
sbb
mov
hlt
lahf
sbb
in
ds
popa
sub
rorb
dec
jecxz
jne
test
mov
pop
cmpl
js
je
in
cmpsb
xor
ret
inc
jp
je
xlat
shrl
mov
aam
or
cmp
loope
loopne
jmp
inc
sub
xchg
mov
pop
mov
pop
pop
xor
dec
lret
pop
out
enter
mov
bnd
xchg
addr16
xchg
adc
mov
lcall
fldt
repnz
sbb
dec
test
repz
sub
jle
dec
loop
in
or
popf
pushf
push
xchg
push
mov
test
push
xchg
lods
imul
loopne
jb
lahf
fsubrp
xchg
pusha
and
xor
nop
push
push
mov
out
fs
inc
mov
sbb
stc
fcoml
dec
push
cmc
or
movsb
or
or
lods
insb
cmp
jb
das
in
xchg
outsb
arpl
dec
adc
pop
dec
adc
test
ljmp
push
cmp
inc
and
pop
or
imul
imul
push
imul
int
cmp
imul
dec
test
pop
mov
out
mov
mov
push
mov
adc
jae
outsl
add
pop
push
sub
or
inc
out
jbe
fstps
jp
mov
insb
dec
jl
xchg
cmp
mov
inc
mov
sbb
aaa
xchg
leave
cmpsl
mov
sbb
shl
into
popa
add
icebp
or
aam
dec
sub
add
sub
sti
mov
mov
idivl
cmpsb
pop
fsubs
add
cmc
shl
jbe
pop
inc
add
jns
xchg
sub
fdivl
fstp
or
cld
loop
rcrb
xor
adc
ret
xchg
mov
sub
fstl
int3
mov
lahf
sbb
sets
push
inc
out
mov
xchg
cmc
inc
push
push
insl
pop
xchg
inc
insb
sbb
mov
mull
xchg
cs
pop
xor
xchg
jne
or
frstor
sub
add
lea
das
clc
sarl
add
in
les
cwtl
icebp
jno
add
or
aad
cld
or
jmp
aad
bound
decl
cmpsl
jmp
insl
adc
mov
lock
pusha
jecxz
mov
aad
jl
pop
pop
cmp
sub
notb
mov
pushf
add
push
es
dec
ss
stc
push
shld
pusha
loope
sbb
pminub
add
jecxz
jmp
je
in
cmp
pushf
icebp
mov
push
jp
and
ret
jecxz
lret
mov
jb
push
or
jmp
mov
add
dec
bound
mov
adc
stc
push
pusha
jg
sub
in
adc
iret
mov
add
push
fcoms
add
popf
or
icebp
data16
jne
lods
add
bound
sarb
mov
cwtl
adc
fistpl
jmp
and
sub
loopne
rcrb
test
xor
push
pop
pop
mov
jnp
adc
inc
dec
aad
jmp
test
out
std
jle
sub
enter
mov
test
in
data16
mov
mov
std
mov
dec
ljmp
orb
or
test
mov
push
ret
jp
pop
mov
mov
aad
push
shlb
mov
and
xchg
xor
push
mov
arpl
dec
push
loopne
popa
cmp
ljmp
test
jbe
mov
dec
xchg
adc
inc
fcmovbe
push
mov
mov
jbe
arpl
cmpsb
add
popf
add
outsb
xor
push
leave
xor
imul
cmp
jbe
sarb
xchg
jae
push
xchg
xchg
lods
gs
es
ficompl
jne
movsl
fistps
cmc
hlt
shlb
cmpsl
mov
jnp
xchg
out
cmc
scas
hlt
or
das
pop
int3
clc
mov
jnp
sti
mov
lret
repnz
adc
jns
dec
inc
imul
fs
cmpsl
xor
mov
sti
inc
call
cmpsl
cld
add
addr16
adc
add
nop
jmp
mov
dec
ja
adc
mov
nop
dec
shlb
jp
xchg
aas
and
jmp
push
xchg
shll
mov
out
mov
push
mov
imul
push
xlat
test
call
mov
popf
mov
popf
dec
adc
ds
mov
lods
add
push
cli
mov
push
addl
aad
fs
rcrb
repnz
insb
cli
push
loopne
jl
cmpsl
cmp
iret
popa
movsb
xchg
xchg
jo
push
divb
outsl
jp
mov
pop
mov
push
dec
dec
and
jl
cmpsb
dec
inc
dec
pop
pop
bound
jle
pop
xor
or
cmp
pop
pushf
shr
dec
push
push
cmc
push
mov
out
push
call
xor
movsb
add
js
lret
adc
jg
popa
sbb
cmp
pop
lock
fidivl
clc
sahf
push
iret
mov
imul
in
jne
test
jbe
int3
stos
insb
sbb
mov
xor
inc
and
and
pop
mov
ljmp
add
icebp
movsl
or
push
lods
pop
pusha
sbb
loop
aaa
jecxz
call
xlat
ss
repz
jecxz
jle
and
or
mov
sbb
adc
addr16
stos
xchg
add
fwait
daa
mov
inc
ljmp
lret
inc
jnp
push
xchg
adc
sbb
inc
lock
int3
mov
insb
adc
fstps
cmpsb
cmp
cmpsb
inc
jae
xchg
iret
push
push
xchg
mov
xchg
dec
cli
fwait
cwtl
xor
rolb
es
clc
and
push
dec
leave
imul
test
loop
ret
stos
popa
adc
xorl
jecxz
mov
dec
xchg
fbstp
stc
andb
adc
loopne
ret
ja
cltd
mov
push
and
inc
add
js
sbb
loop
aas
and
fidivl
pop
lcall
ja
dec
mov
pop
xor
iret
es
ret
hlt
stc
or
je
mov
ret
mov
fnstsw
aas
jo
add
int3
es
sub
pop
mov
orb
dec
adc
mov
leave
mov
jo
jo
adc
in
aad
sbb
cwtl
dec
sub
push
inc
xchg
fwait
adc
scas
div
seta
dec
dec
jb
jmp
xchg
les
sbb
mov
ds
adc
mov
push
cld
pusha
clc
dec
push
cli
mov
inc
test
lock
xor
mov
push
int
movsl
ret
test
cmp
ljmp
push
lret
ljmp
lret
mov
mov
add
adc
jge
pushf
sbb
nop
lds
dec
and
fnstsw
or
xchg
insb
xchg
out
fs
mov
ror
aaa
out
aaa
sub
in
repnz
loope
push
add
adc
jo
inc
int
mov
leave
dec
cs
aas
clc
mov
sbb
shrb
sub
fnstcw
or
sbb
or
mov
mov
inc
jecxz
add
insl
ljmp
or
pop
loope
dec
and
les
mov
sub
outsb
mov
push
xor
cld
in
dec
rcll
cmc
jae
std
inc
xchg
jne
sahf
pop
lods
pop
cmp
cli
and
or
xor
mov
cmc
adc
mov
cmp
and
pop
xor
lea
dec
mov
aam
jae
xor
lds
subb
out
xor
mov
ret
out
lcall
sub
xorb
sub
movsb
lock
mov
ds
int3
push
mov
fdivrs
sti
cmpsb
fbld
add
sub
rol
popf
lret
and
jne
imul
aad
mov
pushf
jae
push
cmp
push
pop
fstpt
dec
lods
ret
xchg
aaa
xchg
fists
cmp
lahf
dec
adc
mov
cwtl
dec
xchg
dec
fs
push
rcl
xchg
dec
lea
in
icebp
shl
xor
sti
js
inc
xor
xor
out
out
push
push
cmp
fldenv
dec
sub
mov
and
cmp
mov
mov
or
scas
rorb
xchg
mov
sbb
lret
jbe
mov
daa
fdivl
add
notb
pop
lahf
fs
nop
test
dec
into
adc
mov
xor
mov
push
iret
sub
imull
pop
sub
sbb
or
cmc
lahf
fsubp
adc
push
jno
jle
cmp
mov
repnz
test
pop
mov
xchg
sarb
inc
xor
push
shl
push
ret
mov
cmpsb
sbb
cmpsl
xchg
push
adc
aas
adc
xchg
jge
xchg
test
xchg
movsb
mov
sbb
jmp
pop
and
xchg
lods
roll
daa
into
pop
or
insb
add
adc
lods
lea
mov
rol
sbb
dec
arpl
and
movsl
push
sahf
jmp
xchg
jo
cwtl
or
mov
cmp
pop
popf
lret
adc
inc
rcr
fildll
cmp
mov
cmpb
and
mov
jmp
in
mov
pop
ja
insl
mov
push
or
mov
adc
sub
adc
sub
push
enter
mov
mov
or
outsl
mov
fsts
cmp
js
inc
lods
mov
into
test
scas
mov
lock
imul
lret
lock
xchg
in
imul
adc
push
test
cmpsl
rolb
xor
divl
xchg
push
xchg
sub
fbstp
imull
cmpsl
iret
xchg
jbe
mov
mov
int
inc
lcall
jmp
ss
mov
je
fwait
pop
push
fiaddl
aam
sub
push
jle
inc
es
adc
loope
fucomi
sbb
jb
test
xor
ss
jmp
mov
dec
cmp
jg
sub
mov
ss
in
mov
mov
pop
imul
xchg
out
outsl
pop
inc
in
frstor
insb
pop
sub
adc
jl
insl
xchg
addr16
lret
aam
pop
sub
shlb
or
fnstcw
mov
fadd
pop
and
and
or
movsb
or
pop
xchg
ja
push
aaa
cmpsl
dec
xchg
enter
pop
std
test
dec
cmp
sub
test
rolb
loop
sbb
stos
xlat
or
ljmp
aad
mov
mov
arpl
out
int3
jbe
jae
pop
dec
leave
les
sarb
xchg
sub
inc
xorl
jae
stos
jge
push
ss
mov
pusha
repnz
imul
mov
cmp
push
std
daa
mov
or
stos
mov
les
pop
or
cwtl
repz
mov
push
add
es
je
dec
mov
pushf
add
cmpsl
push
ja
popf
mov
sub
jne
dec
xchg
xor
sub
jg
cmp
and
push
xor
outsl
fistps
cmp
dec
sbb
or
cmp
jno
clc
push
fwait
mov
push
and
mov
pop
int3
mov
daa
loope
mov
adc
push
push
or
xchg
shl
jl
pop
xchg
aas
cmpsl
gs
data16
pop
xor
psrlw
xor
mov
dec
pop
movsb
cmp
jle
push
sbb
shlb
repnz
addl
lea
sub
stc
mov
push
cld
push
sub
out
into
lret
data16
jne
lods
or
xor
les
lods
lret
dec
mov
in
xchg
outsb
mov
mov
js
in
push
mov
mov
jnp
arpl
fsub
mov
stos
adc
jno
fadd
sarl
cmc
xchg
sub
bound
pushf
gs
sbb
fmuls
sti
movsl
inc
pop
jae
mov
addr16
and
ss
aas
xor
jmp
mov
push
pop
xor
xor
mov
inc
and
rclb
faddl
pusha
nop
fistl
jmp
xchg
mov
mov
inc
scas
sbb
cmpsl
cs
out
aam
jnp
dec
bound
decl
addb
and
mov
cli
inc
js
lcall
mov
repz
mov
call
jbe
sub
sbb
bound
ja
xchg
imul
data16
pop
add
mov
adc
xor
bound
jl
sbb
dec
jg
mov
idivb
leave
and
loope
cmp
out
pop
or
xchg
test
jb
push
popa
sbbb
cmc
subl
push
mov
mov
pop
test
in
jbe
dec
mov
sbb
sub
hlt
sbb
aam
inc
out
ficoms
mov
push
ret
aaa
sbb
ret
test
aam
hlt
dec
out
dec
hlt
stc
lahf
cltd
mov
pusha
add
mov
mov
mov
push
xor
sbbl
mov
std
ret
out
in
test
push
hlt
cwtl
dec
test
lret
sub
scas
push
sahf
adc
and
out
aad
les
add
fs
xor
cmp
dec
pop
pushf
fnstenv
daa
je
adc
dec
shll
movsb
mov
imul
lret
and
test
sub
sbb
aad
mov
adc
scas
jge
aam
pop
or
vmwrite
inc
pushf
or
lea
insl
repnz
insl
pop
ljmp
jp
push
scas
popf
jle
rcll
inc
daa
pop
sbb
clc
and
fdivrs
inc
in
jg
adc
sub
bound
ss
sub
fsubs
cmpsb
adc
jmp
xor
cld
add
push
loop
jnp
push
or
xchg
push
imul
fsts
add
jg
mov
mov
sbb
loop
push
mov
ret
sbb
xchg
xor
jp
les
repz
jne
gs
out
insb
arpl
sub
xchg
and
pop
subl
lahf
std
cmpsb
test
je
sbb
gs
loop
or
hlt
stos
pop
mov
xchg
and
pop
or
and
mov
test
sbb
sbb
dec
roll
pop
ret
pop
sub
lahf
daa
lret
push
nop
mov
popa
cmp
xor
ffreep
shrb
pop
mov
cltd
movb
push
imul
adc
popf
pop
ss
dec
jae
in
and
add
xchg
push
mov
mov
inc
pop
addr16
mov
xor
mov
aaa
scas
bound
sarb
insb
movsl
lock
in
xchg
scas
mov
in
fstpl
lds
movsl
add
pop
or
dec
fs
jl
rcl
cmpsb
cmp
inc
push
mov
xlat
xor
and
cltd
push
inc
pusha
ss
ds
push
push
mov
mov
jge
and
sub
vprotb
push
shll
lret
imul
cwtl
mov
mov
add
lahf
ror
hlt
adc
fcoms
ljmp
jae
mov
xchg
cmpsb
xchg
into
loopne
scas
leave
test
mov
out
dec
dec
xor
mov
cmpsl
lahf
in
xor
lret
pop
mov
adc
and
cmp
pop
pusha
sbb
dec
aad
sbb
xchg
jp
scas
and
pop
cwtl
or
push
or
cmpsl
jmp
sarl
lahf
adc
xchg
push
inc
bound
xor
xchg
jp
sbb
add
icebp
es
mov
test
je
insl
ret
xor
jne
or
or
rcrb
loop
xchg
fisubl
call
divb
lods
mov
repnz
je
mov
mov
inc
lock
clc
ss
in
leave
mov
and
xchg
dec
das
or
mov
push
movsl
mov
test
aam
vmread
cmc
nop
repz
xchg
sub
popf
mov
cmpsl
bswap
xchg
sub
icebp
scas
je
adc
push
nop
aaa
jbe
out
xor
pop
or
add
xchg
jecxz
push
shl
lahf
mov
jl
or
jne
or
mov
imulb
sub
outsl
cli
mov
xlat
aas
mov
icebp
adc
icebp
push
sbb
lods
push
fimuls
mov
aas
xor
jp
clc
sbb
scas
jnp
adc
or
scas
lock
xchg
pusha
stos
aad
addr16
ss
pop
test
into
mov
add
dec
sub
push
loop
jle
js
add
mov
adc
jl
jno
lret
mov
xlat
int
jg
adc
dec
jl
lret
mov
lahf
pop
xor
and
jmp
sahf
inc
test
in
cmp
icebp
jne,pn
pop
lods
cmc
pcmpgtw
xchg
jge
pop
cmpsl
mov
fsubs
push
xor
push
jmp
enter
cmpsl
test
xchg
sti
xor
rcrl
dec
push
push
addr16
mov
inc
cmpb
mov
mulb
and
pop
dec
nop
mov
jb
out
flds
mov
movb
xchg
adc
xchg
adc
insb
push
push
ljmp
in
xchg
add
inc
mov
push
mov
jle
inc
cltd
or
addr16
das
jmp
test
pop
mov
out
mov
dec
lock
ret
outsb
adc
inc
nop
cmp
popf
mov
xchg
add
sbb
mov
mov
idivl
and
adc
into
cpuid
out
xor
jo
adc
fidivs
jle
sub
jp
test
push
xchg
ret
sahf
inc
or
scas
add
mov
hlt
and
mov
in
loop
testb
pmulhuw
in
xor
adc
and
cmc
lret
icebp
iret
loope
xor
bound
mov
andl
insl
leave
jns
mov
sti
int3
clc
mov
xchg
and
shll
xlat
xchg
jge
repz
lods
push
dec
xchg
icebp
sub
inc
roll
shl
out
inc
sub
xchg
dec
pop
or
and
les
out
sbb
fbstp
cli
popa
lcall
or
enter
lret
push
and
sub
push
push
movsl
xchg
in
sar
js
mov
jmp
shrl
js
pop
push
xchg
push
add
dec
es
in
ss
mov
std
cs
movsl
test
icebp
enter
ret
int3
inc
cmpsl
imull
test
push
mov
sti
push
push
je
mov
dec
mov
rorl
mov
sub
mov
lds
push
inc
movsb
add
adc
inc
enter
mov
push
movsl
jge
dec
push
test
js
cld
dec
lods
addl
icebp
dec
sub
cli
lret
push
rcll
hlt
mov
cltd
hlt
or
in
fstps
jmp
jbe
mov
sbb
lods
roll
aas
jecxz
js
popa
cmp
pop
add
inc
pop
test
ds
shlb
je
inc
mov
fs
xchg
mov
push
insb
jbe
mov
out
mov
xchg
sti
insl
sahf
fidivs
or
fdivrl
mov
ja,pn
outsl
aam
leave
int
into
out
lods
pop
lea
sahf
mov
xor
xchg
ss
sarb
add
popa
daa
or
dec
lock
inc
dec
xor
lods
mov
cli
call
xchg
out
fsts
daa
cmp
jns
out
pop
jle
repz
xor
xchg
dec
push
out
adc
adc
scas
pop
xchg
mov
xchg
jo
lds
ss
dec
popa
xchg
push
call
mov
adc
in
pop
dec
out
enter
dec
in
cld
cs
dec
inc
xchg
ret
push
pop
pop
mov
or
mov
mov
leave
enter
pop
sub
jge
sbb
jne
test
out
js
lods
arpl
pop
or
dec
pusha
test
cmp
inc
sbb
sub
jns
arpl
ficoml
fcomps
jno
pop
add
sbb
pushf
shll
adc
mov
jg
pop
cmpsl
or
movsb
mov
jns
pop
fadds
xchg
outsl
xor
into
mov
mov
dec
add
adc
sbb
call
gs
lahf
out
cld
outsb
cmp
push
add
jae
sahf
cmp
aad
adc
shlb
cmp
in
shlb
xchg
pop
lret
mov
test
pushf
sbb
add
pop
les
mov
leave
hlt
pop
mov
ss
into
jmp
loopne
inc
sub
adc
aaa
mov
pop
pop
sub
loop
imul
int3
pop
inc
xor
scas
add
jmp
xor
dec
daa
adc
test
out
jns
outsl
fs
or
jmp
pop
mov
dec
mov
aaa
aaa
push
mov
xchg
cwtl
daa
mov
dec
dec
add
inc
popf
pop
into
mov
ljmp
sub
mov
mov
out
rclb
repnz
adc
add
sbb
arpl
inc
lcall
push
fdivr
cmp
jmp
jmp
mov
cld
pop
cmp
cmp
mov
test
lds
aam
adc
nop
addl
jecxz
popa
fsub
pop
mov
int3
sub
js
fimull
rcrb
lods
mov
mov
rorb
mov
in
adc
jp
sub
jo
add
xchg
mov
mov
xor
xchg
dec
xchg
xchg
cmc
adc
test
add
or
cmp
cmp
add
fsubl
cmpsb
mov
js
in
inc
pop
xor
cmp
outsl
adc
sub
mov
mov
rorb
mov
pop
mov
and
aam
daa
mov
fisubrs
outsl
push
xor
adc
or
mov
mov
sub
mov
fldenv
pop
jmp
push
notl
cmp
call
sbb
pop
push
int3
push
sbb
int
adc
cmp
mov
add
inc
in
mov
sbb
in
sarb
shrl
movsl
adc
adc
fldenv
sbb
push
mov
jmp
inc
popf
dec
inc
lahf
add
test
push
fnstenv
push
sbb
xor
negl
enter
xchg
jg
in
call
mov
add
push
xchg
loope
or
pushf
sub
fsub
push
mov
mov
dec
gs
inc
shll
push
movsl
mov
cmp
ds
orl
cld
sti
sbb
pop
repz
mov
jge
fdivrl
xchg
pop
dec
mov
insl
ljmp
jecxz
jo
lahf
pop
lods
fstps
mov
lods
jle
xor
imul
push
stos
jle
push
scas
pop
jne
xlat
add
hlt
subl
or
mov
xchg
xor
js
ja
movsl
cmpsb
push
xchg
ss
xchg
into
add
sub
push
xchg
jmp
subl
rclb
add
lds
adc
dec
lcall
popf
inc
out
repz
fwait
or
push
into
mov
fs
dec
sbb
pushf
mov
sub
mov
pushf
xor
out
lods
mov
movsl
test
sti
fadds
mov
push
sbb
xchg
inc
neg
inc
push
jae,pt
pop
xor
xchg
and
call
shll
push
lock
or
pop
pop
in
pusha
sbb
xchg
inc
js
lds
jns
nop
or
stos
adc
mov
mov
dec
xchg
vmwrite
sub
test
mov
dec
sbb
pop
adc
dec
cwtl
dec
jg
in
jg
loope
pop
dec
dec
dec
or
xchg
sbb
jbe
jbe
push
jge
xchg
in
jl
imul
popf
sub
hlt
clc
orb
out
xchg
jno
xor
xorl
sub
dec
hlt
sti
inc
gs
outsb
jmp
pop
subb
hlt
stos
sbb
scas
dec
xor
and
push
loopne
mov
dec
ljmp
lahf
or
aad
xor
jge
out
inc
xlat
or
inc
xor
mov
push
xor
xchg
scas
dec
insl
sbb
fwait
stos
ja
mov
and
inc
adc
dec
jb
or
test
cli
jl
es
pushl
and
dec
cmc
adc
mov
push
sub
or
add
xchg
gs
arpl
push
andl
pop
scas
inc
stc
and
in
fldt
inc
das
mov
into
fucomip
jbe
shl
inc
scas
add
int
jp
inc
icebp
mov
push
push
xchg
jl
test
cmp
cli
ja
fucom
push
jge
aaa
scas
inc
mov
inc
test
pop
mov
xchg
pop
push
fdivrs
sahf
or
rcrl
testb
xor
xchg
sti
xor
lock
jecxz
mov
and
pop
sti
in
mov
push
stc
xchg
push
jno
je
ds
scas
int
and
cmpsl
fwait
imul
outsl
adc
test
cltd
jae
je
mov
lahf
mov
popa
shr
cltd
in
idivl
mov
or
sbb
mov
nop
pop
je
inc
in
js
mov
sub
mov
mov
push
xor
out
sbb
pop
pop
or
cmp
mov
mov
add
adc
dec
imul
out
add
dec
xchg
adc
inc
movsl
and
popa
cld
std
push
inc
stos
or
shlb
fcomip
in
call
push
jne
icebp
xorb
adc
mov
jbe
or
out
pop
cs
mov
lcall
sub
js
out
sub
iret
adc
test
adc
push
and
fadds
mov
sbb
mov
add
ljmp
push
sub
sub
mov
inc
loop
int3
in
cmp
dec
jg
lret
shr
scas
pop
ljmp
stos
inc
icebp
test
mov
pop
sbb
jae
fsubl
xor
inc
outsb
movsb
push
pusha
jmp
mov
aas
notl
in
dec
push
jle
in
cs
ret
push
pop
cmp
icebp
inc
shl
sbb
push
jo
mov
pop
ss
pop
ss
inc
aaa
and
clc
inc
mov
sub
lcall
in
mov
push
mov
xchg
push
add
orb
dec
push
fldt
xor
lret
jecxz
addr16
gs
push
xchg
cli
push
pop
jge
pop
in
inc
mov
call
xor
inc
pushf
mov
xchg
jae
sub
popf
aas
pop
cli
dec
pop
gs
mov
aaa
fmuls
notb
imul
xor
mov
scas
lcall
mov
aad
fbstp
inc
pop
pusha
outsb
and
out
or
cwtl
xor
mov
and
sub
imul
pop
cmp
jp
daa
sub
paddusb
add
div
push
repz
sub
pop
jo
fisubrs
stc
ljmp
pop
mov
imul
or
lcall
push
iret
in
push
mov
add
dec
add
leave
push
mov
adc
in
jge
and
in
int3
cmp
test
es
dec
or
mov
pop
cmp
push
sbb
repnz
pop
xchg
sbb
push
or
out
xchg
cld
add
and
shrl
rcl
jp
and
inc
mov
inc
test
add
add
scas
or
xchg
cltd
roll
cmp
movsb
js
push
jl
lea
jae
sub
jno
inc
fprem
adc
cmp
jno
dec
and
or
lret
xor
das
inc
fldenv
mov
xchg
popa
xchg
pop
ljmp
push
mov
adc
fbld
mov
ljmp
add
in
mov
sbb
jb
xor
dec
add
mov
inc
lea
outsb
push
mov
in
aas
aas
xchg
into
xchg
in
lret
rcrl
mov
sbb
pop
jp
fbstp
adc
mov
cmp
dec
movsl
data16
jg
xchg
xor
in
insb
cmp
push
sbb
inc
arpl
mov
inc
stc
lock
dec
pop
or
in
xacquire
push
pop
xchg
gs
inc
and
jge
int3
test
scas
nop
lcall
cmp
je
inc
mov
loop
mov
neg
lods
dec
dec
or
scas
test
push
lock
int
jne
mov
mov
mov
dec
je
pusha
imul
ror
mov
das
push
mov
js
adc
decb
push
push
add
inc
stos
add
inc
mov
xchg
rcrl
pop
lods
imul
insb
jge
inc
das
lea
out
lods
adc
cltd
mov
mov
jno
sub
xor
mov
fcomp
xchg
xor
mov
and
movsbl
sti
jae
jge
sbb
das
test
lahf
xchg
push
clc
xchg
pop
and
in
mov
xor
movsb
out
movsb
stos
push
movsl
mov
fsubs
inc
xor
push
fidivl
or
jno
loop
jmp
psrld
rcll
dec
sub
out
xlat
push
neg
lcall
popf
gs
cmc
push
mov
in
out
xor
cmc
out
gs
dec
pop
dec
pop
pushf
cwtl
je
fcompl
lds
add
cltd
std
sbb
or
lahf
inc
xchg
xchg
loopne
mov
in
lock
adc
pop
dec
xor
push
sahf
repz
mov
movsl
pop
sti
cmp
cmpsb
mov
or
call
mov
and
pop
dec
mov
test
push
shll
jo
fistl
adc
les
push
stc
cli
in
out
push
imul
lret
aaa
mov
cmp
inc
enter
add
inc
xchg
je
push
loope
scas
pop
movsl
mov
insb
adc
pop
pushf
cmpsl
ret
push
mov
inc
lret
mov
pushf
aad
mov
inc
sahf
pop
into
push
sub
and
mov
pop
insb
inc
sti
repz
sub
sub
mov
pop
jno
call
aas
in
aaa
jge
pop
shlb
dec
sbb
repz
mov
or
jg
push
fistps
push
sbb
test
hlt
and
sbb
outsb
dec
nop
je
lahf
dec
push
dec
cmc
mov
cld
leave
das
push
jl
mov
cld
jle
das
rcr
cmc
mov
jb
add
dec
or
mov
and
mov
or
ljmp
push
xchg
rclb
decb
cmp
lock
add
into
stos
inc
xchg
mov
ljmp
adc
mov
or
pusha
jo
cmp
jmp
inc
cs
in
mov
mov
inc
push
shrl
adc
xor
movsl
fsubl
stos
icebp
rolb
je
nop
add
add
push
ljmp
cmp
arpl
lock
inc
mov
mov
leave
inc
sbb
leave
xor
shlb
cmp
pop
push
mov
mov
into
out
and
mov
sbb
dec
fwait
inc
outsb
out
imul
push
or
jnp
lcall
movsl
push
mov
popf
pop
testl
andl
pop
daa
dec
push
inc
hlt
push
ret
loopne
push
int
loope
bnd
les
or
adc
ss
push
jbe
iret
mov
cmp
inc
test
push
pop
ja
pop
inc
mov
xor
push
pop
cli
adc
lods
or
cltd
dec
fadds
int
cmpl
ja
ret
xchg
lret
fwait
or
xchg
testb
int3
rolb
icebp
pop
xchg
mov
aas
fldl
push
out
xchg
stos
mov
repz
cli
xchg
adc
inc
test
pushf
ficoml
xlat
sbb
lret
addr16
xchg
fwait
xor
das
pop
js
push
inc
add
shll
sti
bound
int3
movsb
mov
cmp
bound
dec
pop
jb
imul
leave
arpl
arpl
lods
stos
lds
lock
adc
lea
jmp
and
xchg
outsl
movsl
dec
xchg
add
fisttpl
jnp
lock
mov
pop
jecxz
sub
or
test
int
sbb
outsl
test
shlb
xor
mov
mov
cmp
sub
fildl
dec
dec
sti
mov
push
fs
dec
int3
cld
pop
xchg
pop
dec
orb
sbbb
mov
cmp
orl
xor
sbb
mov
cmp
dec
push
push
ret
adc
ja
mov
cltd
je
pop
fwait
xchg
xorb
xlat
push
pop
sti
mov
mov
xchg
push
inc
cmp
loopne
mov
shll
mov
nop
das
mov
and
push
ljmp
or
cld
jp
enter
int3
mov
ljmp
cmpsl
rcr
mov
mov
mov
mov
fnsetpm(287
pop
cwtl
call
aad
pop
jae
add
mov
loop
cld
adc
and
jbe
mov
xchg
rcll
popa
push
sub
mov
xor
adc
imul
mov
xchg
push
push
loope
aaa
xchg
andl
and
xchg
lret
cmp
sub
cmp
int
add
mov
xchg
pushf
xchg
inc
je
jno
push
mov
clc
in
inc
xor
jmp
add
loopne
fildll
pop
movsb
int3
fiaddl
bound
shr
test
mov
or
sbb
je
lock
pop
mov
shrl
dec
and
in
mov
cmp
xchg
aas
push
call
enter
adc
ds
sub
cmc
and
pop
adc
aad
clc
mov
adc
jo
mov
orb
in
lock
mov
or
and
outsb
imul
inc
jno
inc
lds
cld
push
in
mov
mov
or
cmp
fsubs
adc
add
mov
stos
fs
sbb
movsb
loope
mov
push
pop
cmp
lock
push
xchg
ljmp
add
ret
push
adc
push
mov
add
mov
inc
mov
xor
icebp
adc
xchg
jno
aad
mov
dec
pop
pop
ret
jmp
ror
insl
test
or
xor
loop
test
std
dec
jmp
sub
lods
in
je
fwait
mov
dec
repz
xor
cwtl
cmp
jne
inc
sbb
shl
mov
or
into
test
pushf
inc
out
and
cmpsl
loopne
aaa
xor
in
pop
xchg
das
cmp
mov
dec
jb
loope
pop
sbb
jae
rorl
out
lock
out
xor
loop
ljmp
mov
loopne
ror
lret
imulb
outsb
mov
testb
bound
xchg
xchg
popf
les
adc
daa
bound
popl
test
iret
push
faddl
mov
leave
loop
or
jge
add
scas
sub
outsl
mov
cs
dec
lea
sbb
lcall
icebp
mov
sbb
fisttpl
jb
xchg
je
and
sahf
leave
push
sbb
lret
leave
mov
mov
idiv
out
int3
cmp
mov
and
rolb
cmc
mov
clc
ja
pushf
mov
jmp
push
jno
pop
repz
rorb
fs
das
lods
mov
pop
and
inc
cmc
jl
mov
pusha
lods
es
lcall
imul
ja
out
jae
lret
bound
lahf
inc
je
test
inc
pop
loopne
mov
sarl
addr16
adc
in
push
rorl
std
ljmp
add
in
mov
repnz
xor
and
fldcw
imul
into
pop
mov
inc
imul
add
adc
lret
mov
les
ret
cmp
popf
jle
stc
and
dec
in
fdivr
adc
xor
rclb
sub
or
testl
scas
xor
pusha
mov
cmp
data16
test
fbld
fsubs
dec
push
dec
sti
cwtl
clc
inc
xchg
push
cmp
or
mov
lock
xlat
mov
push
inc
fisubs
out
shlb
pop
fmul
and
push
sub
jge
sbb
jp
fisubrs
ror
ljmp
leave
ret
mov
dec
push
xchg
aam
outsb
mov
popaw
mov
ret
push
sub
lods
es
push
and
stos
push
sbb
ds
popf
aad
mov
cltd
push
popf
out
xor
imul
dec
xor
and
out
sbb
enter
mov
arpl
loopne
lods
jp
cwtl
jg
shlb
movsl
xchg
pop
add
push
out
add
fs
arpl
add
gs
test
push
add
jo
push
push
sub
xchg
das
idivl
inc
dec
jge
xchg
adc
dec
fbld
data16
rclb
push
push
test
repz
mov
dec
scas
jo
mov
fildl
cmp
jns,pt
pop
mov
loop
ljmp
lret
sbb
inc
aam
jl
outsb
push
push
adc
xor
cld
jmp
mov
dec
xor
test
and
add
and
jecxz
andb
lods
dec
mov
ljmp
sbb
stc
rclb
adc
xor
stos
add
xchg
mov
adc
push
fmull
cmp
mov
inc
adc
add
jno
in
jo
add
sub
rolb
cmp
add
push
xor
xchg
jns
loope
and
lahf
ja
xchg
mov
adc
fdivp
and
add
add
adc
mov
cmpsl
sbb
and
add
inc
or
pop
aad
mov
push
xchg
stc
or
mov
shl
or
mov
loope
adc
outsl
cmp
insl
es
out
loope
xchg
jns
mov
xor
out
clc
pop
sub
shrl
enter
popa
hlt
cs
adc
inc
stos
cmc
fstps
cli
mov
xor
cmp
jnp
xor
jmp
jmp
cmpsl
and
insl
mov
fstps
in
xchg
shll
sub
or
movsl
andb
insl
mov
mov
and
enter
cltd
xor
or
pop
ss
jbe
inc
cmp
bound
jo
mov
mov
add
sub
popa
addr16
fs
mov
sub
mov
dec
push
xor
ja
mull
dec
sbb
daa
adc
push
inc
std
lock
cmp
push
or
js
ret
lock
push
repnz
cmc
cmpl
pop
insl
xchg
out
push
int
mov
fnstenv
cmc
xor
push
jo
adc
jbe
add
xchg
rclb
sbb
and
fsubs
xor
mov
int
shl
add
lods
lahf
call
sub
leave
pusha
mov
lcall
pop
pop
push
repnz
and
mov
push
orl
bound
icebp
xor
test
rcll
ret
push
xchg
int3
dec
addr16
lea
pop
movsl
scas
in
mov
and
mov
cmpsb
add
inc
jns
movl
sahf
and
ss
push
mov
andb
shll
mov
cmpsb
ret
insb
mov
mov
sti
jmp
push
lret
popa
push
inc
insb
pop
mov
out
inc
outsb
cltd
mov
ret
mov
jge
into
sub
add
nop
add
dec
sbb
xchg
mov
dec
movsb
mov
sub
jbe
mov
fiadds
fwait
fwait
push
cmpsl
mov
rcll
jle
loopne
pop
mov
jb
gs
mov
cmpsl
adc
push
loop
fwait
pop
xchg
adc
aad
dec
mov
pushf
in
loope
in
lcall
aam
mov
rcrb
ret
pop
inc
iret
notb
xor
mov
dec
out
pusha
in
xlat
xorb
adc
stos
mov
push
shll
xchg
push
lcall
sbb
mov
add
movsl
test
pusha
jp
shlb
cmp
outsb
add
ds
inc
inc
inc
pusha
sbb
loopne
inc
sbb
xor
mov
fbstp
xor
lahf
faddl
hlt
xchg
test
mov
inc
insb
and
out
test
rcrb
push
push
xor
es
jno
push
cmp
mov
jmp
mov
in
dec
repnz
dec
outsb
adc
dec
cmc
fidivl
sti
xor
pop
mov
rcrb
imul
dec
dec
gs
inc
jns
insl
sbb
into
mov
push
mov
test
pop
sbb
push
pop
jl
insb
push
xor
cld
xor
mov
fwait
out
push
mov
pusha
out
hlt
jge
fwait
cmp
xor
es
and
imul
jge
pop
mov
cld
add
cmpsl
cmc
xor
push
lock
lret
aad
or
inc
pop
fistl
mov
dec
mov
lds
mov
orl
lret
dec
inc
sbb
mov
rolb
fldenv
stc
aad
andl
pop
es
test
xchg
dec
xlat
xchg
aaa
xor
subl
cmp
in
and
push
scas
dec
lcall
movsb
and
sub
out
pusha
outsb
test
cmpsb
adcb
lret
movsb
jle
push
mov
jmp
mov
or
mov
and
mov
scas
inc
test
cmp
or
roll
fsubl
ret
fs
aam
adc
test
fstpt
pop
repz
popf
xchg
iret
jge
shl
arpl
dec
mov
push
jge
loop
push
filds
push
mov
inc
dec
in
inc
mov
mov
movl
clc
leave
mov
jbe
xlat
test
sub
mov
xchg
and
cmp
dec
addr16
repz
cmp
dec
lcallw
inc
add
or
jno
adc
mov
insl
cmp
mov
inc
mov
fwait
mov
adc
and
dec
xchg
sub
jl
push
sub
filds
push
les
ficompl
xchg
bound
mov
or
lahf
and
lret
mov
fnstenv
mov
aaa
pop
lods
sub
mov
mov
mov
fdivl
lods
stos
test
aas
inc
lods
gs
sub
lcall
jo
jp
mov
xlat
test
dec
xchg
xor
or
fldl
lea
jge
bnd
stos
daa
daa
cmpsb
fldt
mov
cmp
insb
mov
pop
push
xchg
jmp
push
out
push
cmp
xchg
ffreep
dec
pop
inc
clc
sti
popa
add
testl
push
push
imul
mull
lods
shlb
or
cmp
or
popf
daa
shlb
test
inc
mov
nop
int3
subb
jecxz
or
ja
pop
ret
mov
mov
scas
es
mov
xlat
jnp
dec
imul
push
out
movsb
add
xchg
loope
adc
sbb
push
loope
daa
popl
inc
mov
fwait
dec
daa
sarl
or
or
lret
aam
xchg
add
sbb
repnz
lahf
addw
int
push
jb
push
mov
ss
mov
ljmp
sbb
xchg
test
mov
add
nop
rol
rorb
into
es
enter
cltd
rolb
add
cli
jp
xchg
dec
ss
cmc
mov
aam
jmp
lea
cmc
cwtl
or
sahf
loopne
das
sub
add
call
stos
dec
cmp
outsb
mov
mov
jge
sarb
cmp
and
and
paddd
sbb
mov
outsb
jecxz
lcall
dec
je
inc
cli
xchg
sahf
pop
shlb
daa
daa
fsubp
loope
mov
mov
dec
mov
dec
mov
outsb
add
popa
shr
adc
outsb
daa
test
aas
add
dec
pop
xlat
pop
outsl
daa
pop
shl
subl
fcomps
dec
cs
pop
inc
and
lretw
pushf
add
mov
cmp
mov
callw
cs
xor
addr16
jmp
mov
mov
iret
clc
mov
bound
rolb
roll
pop
and
mov
int
push
mov
fwait
pushf
or
and
mov
pop
sbbb
xchg
push
inc
mov
inc
int3
pusha
mov
xchg
mov
dec
and
es
repnz
das
adc
cmp
out
push
xor
push
loope
jmp
shlb
sbb
pop
in
jnp
scas
cs
add
cmp
ss
cmp
out
push
push
int3
dec
in
jb
sarl
xlat
mov
cltd
inc
pop
xchg
cld
cmp
fstl
loope
ret
cmp
add
cmpsl
dec
jp
mov
dec
test
push
xor
aad
mov
ja
or
add
hlt
ss
jge
mov
test
test
lcall
movsb
int3
pop
mov
data16
jle
jae
pop
xor
clc
ret
rclb
jo
sub
call
inc
hlt
lds
scas
jns
jns
aaa
xor
ds
xor
push
and
mov
cmp
ja
sub
test
adc
cmp
jl
ss
jmp
pop
inc
cli
push
scas
sbb
sub
and
mov
in
cmpsl
imul
scas
push
scas
ss
xchg
sbb
addb
out
call
repz
int
add
sub
stos
adc
pop
or
lods
pushf
aas
pop
gs
push
and
xchg
cmpsb
adc
sbb
mov
jl
nop
xchg
pop
and
jmp
in
icebp
xchg
testb
pop
stc
shlb
and
loop
push
lret
push
sbb
outsl
mov
pop
in
xchg
jo
push
aam
and
mov
in
scas
sbb
jle
outsl
push
daa
std
or
cli
lahf
mov
imul
aad
mov
shlb
outsl
jp
movsb
in
xor
aam
dec
sbb
mov
jl
xchg
inc
pop
sti
mov
xor
cmpsb
xchg
mov
sbbl
jnp
cmpsl
mov
jne
in
shrl
faddp
loope
addr16
les
fnstcw
mov
jge
pusha
outsb
fs
xchg
scas
mov
jmp
xchg
ja
fs
cmp
scas
sahf
mov
mov
jae
aad
lea
push
mov
icebp
mov
cwtl
es
jge
fdivrs
push
xchg
pop
ret
xor
lret
insb
mov
ret
loop
mul
ja
ja
scas
aas
sub
jo
test
pushf
xor
pop
add
sub
or
pop
in
int
leave
shl
ljmp
hlt
adc
lret
incb
sub
adc
mov
hlt
xor
or
insl
push
xchg
or
fimuls
xor
adc
stos
xchg
scas
xchg
in
jno
pop
push
pop
pop
icebp
les
dec
aas
xchg
out
sub
add
mov
sub
stc
loopne
cmp
mov
out
loope
lahf
mov
lret
mov
adc
movsl
xor
mov
cmp
or
inc
rcrb
push
mov
jl
mov
scas
fldl
xor
sbb
fs
mov
add
lret
or
mov
adc
jmp
shll
rsm
hlt
orb
ja
or
sbb
mov
ror
add
push
sub
dec
sub
test
push
ret
adc
jecxz
mov
jg
outsl
data16
jle
cmc
sub
mov
jecxz
inc
sub
sti
xchg
out
andb
mov
std
fsubs
or
inc
push
mov
in
sub
sbb
xchg
mov
lock
pop
pop
loope
xchg
add
popa
stos
movsl
pop
sbb
arpl
lds
add
cmp
lahf
jae
jge
pop
mov
sub
cmp
jno
es
out
cmp
frstor
lret
or
int
fsts
outsb
xchg
xor
mov
clc
or
fsubrs
xchg
leave
pop
jnp
aam
xchg
pushf
ljmp
in
ds
dec
inc
sub
dec
in
and
lea
fsts
mov
stos
pop
jnp
mov
loope
mov
les
or
sub
sub
pop
xchg
out
sbbb
and
enter
sub
adc
jb
pushf
dec
call
cli
jg
mov
xor
inc
sub
sub
xor
or
pop
adc
dec
mov
sub
bound
jo
sbb
out
jnp
push
xchg
loope
push
mov
lods
ss
data16
push
fimull
stos
iret
lds
inc
sbb
mov
cli
push
cltd
fwait
nop
jb
cmp
dec
out
dec
push
lret
add
fisubs
les
mov
mov
pop
cmpsb
stos
imul
popa
dec
and
mov
or
imul
aad
sbb
cli
jmp
lret
inc
sbb
dec
std
gs
push
out
repz
push
lods
push
ds
push
sbb
test
push
sub
mov
jg
test
scas
mov
cli
mov
mov
jl
stc
es
cwtl
pop
sbb
stos
inc
pop
mov
enter
mov
mov
cmp
divb
xor
stmxcsr
dec
sbb
pop
cmp
loop
adc
fiaddl
sub
pusha
pop
pop
dec
add
push
pop
subb
or
xlat
jnp
or
out
push
dec
mov
ficompl
int3
mov
add
sub
cmpsl
mov
cwtl
mov
inc
int3
jmp
mov
xchg
decl
push
stos
popa
shl
fldl
mov
in
loop
rorb
insl
and
out
shlb
and
xchg
fsubs
pop
push
enter
in
dec
popf
sub
mov
xor
int3
adc
pop
push
je
shr
xlat
dec
xlat
ret
add
sbb
shll
hlt
push
daa
xor
inc
insl
xor
sarl
out
scas
pop
push
gs
or
movsb
cmp
dec
push
dec
cmp
sbb
decl
pop
xor
imul
jb
cmpsl
xchg
movsl
lret
xorb
pop
ret
insl
sbb
lcall
adc
imul
jecxz
gs
fcmovnbe
out
roll
orl
push
add
ret
inc
imul
and
negl
pusha
mov
out
inc
into
lcall
imulb
sub
insb
subb
jg
in
push
mov
in
mov
sbbl
adc
lods
xor
xor
cld
mov
pop
mov
arpl
push
scas
daa
mov
imul
sti
aas
inc
insl
lret
sub
cmp
sub
lea
mov
or
sarl
pop
sbb
fstps
hlt
pushf
pop
js
jmp
dec
divl
xchg
outsl
outsl
mov
bound
test
adc
imulb
aas
test
jg
fmul
mov
outsl
imul
clc
lods
mull
test
loop
nop
daa
ds
add
scas
call
cmp
lahf
jb
adc
jnp
int
lea
iret
jge
int
xor
gs
push
pushf
mov
adc
sti
out
inc
lret
sbb
lds
jnp
push
rorb
movsl
lret
xchg
sarb
mov
mov
hlt
xchg
cmp
dec
push
mov
repz
std
or
cmp
pop
cmp
and
mov
jl
cld
hlt
cmp
and
fdivrs
int3
cmp
xchg
push
jecxz
loope
hlt
mov
mov
shll
shll
cmp
mov
bound
push
jb
inc
inc
and
repz
lret
jecxz
sbbb
imul
mov
mov
push
push
aaa
pop
cmp
mov
lret
fs
inc
mull
les
cltd
scas
wrmsr
pop
sub
fsubrl
scas
push
cmp
mov
dec
sub
pop
insb
fmull
call
mulb
stos
mov
popf
lods
pop
mov
loopne
mov
mov
or
or
inc
repnz
repz
push
and
inc
or
sbb
push
out
es
pop
or
push
inc
mov
leave
push
ds
cli
lea
arpl
popf
sti
daa
sub
or
outsl
lods
or
mov
nop
ret
scas
sub
xor
cmp
fwait
adc
inc
ljmp
dec
cmc
cmpl
mov
rorl
roll
dec
int3
and
mov
and
sbb
and
add
addr16
sub
sub
or
mov
push
or
dec
sub
and
je
push
xchg
notl
in
adc
inc
dec
push
aaa
loop
daa
adc
push
leave
xchg
sarl
and
pop
cmp
int3
movsb
mov
sbb
jbe
and
xchg
sbb
pop
cli
mov
xor
out
out
add
push
xor
sbbl
or
dec
shlb
pop
std
dec
icebp
cmp
mov
rolb
jg
sbb
pop
cmpsb
mov
into
jno
xor
movd
cmpsb
mov
icebp
push
lods
rcrl
mov
in
pusha
js
cmp
jb
imul
add
xchg
rol
cs
add
loope
or
jmp
push
xchg
mov
addl
out
inc
sbb
imul
jp
sbb
ja
imul
jae
push
icebp
fucomp
sbb
and
out
xchg
mov
cmp
cvtps2pd
stos
out
stos
cmpl
push
out
jbe
adc
mov
and
loopne
cs
push
out
dec
xchg
adc
inc
ds
stos
or
mov
repnz
scas
pop
sbb
push
pop
xor
jg
adc
shl
add
cli
add
call
sub
ss
pop
adc
repnz
dec
fsubs
es
ret
xchg
inc
cmp
lods
mov
emms
and
stos
sub
jg
pushf
sbb
pusha
sub
mov
xor
into
lods
lret
mov
sub
fistl
cmp
mov
sti
cmpsb
push
cmp
sarb
daa
in
loope
sub
lret
dec
xchg
jle
jno
pop
arpl
xor
inc
lods
push
push
orl
aam
fucomp
ss
push
inc
dec
adc
out
pop
mov
idivl
les
or
ret
arpl
outsb
test
mov
popf
mov
or
js
imul
jecxz
pushf
lret
sahf
popa
sbb
mov
sub
jecxz
dec
and
xor
fcmovnbe
incl
rorb
lahf
push
int3
mov
out
adc
cltd
add
mov
or
inc
loopne
out
out
mov
sbb
inc
lcall
jno
outsb
test
sub
dec
data16
xlat
cli
xchg
push
cmp
add
bound
xor
jl
pop
insl
or
or
aam
mov
xor
in
inc
loopne
cmpsl
adc
pushf
ficomps
ja
inc
lds
pop
mov
ds
and
adc
and
repnz
popa
popa
inc
sub
es
aas
in
in
mov
lret
into
jno
mov
push
mov
pop
jecxz
xor
lds
push
ret
adc
cld
insb
jno
xor
push
pop
ret
aam
xor
das
es
scas
jp
push
gs
cltd
icebp
mov
xlat
popf
ljmp
cmpsl
cwtl
mov
cs
add
xor
and
nop
push
or
dec
jb
repz
mov
add
ja
inc
ljmp
cwtl
sub
dec
and
mov
inc
js
adc
fistps
sub
push
mov
mov
xor
out
lea
stos
lret
xchg
cltd
arpl
leave
sbb
stc
mov
notl
mov
add
or
out
jns
xchg
cmp
mov
sbb
les
movsb
shrb
sti
aam
inc
jecxz
xor
insb
adc
pop
xchg
gs
ja
add
enter
stos
dec
lea
push
xor
pop
dec
aaa
inc
sbb
push
push
and
shrb
mov
rcr
mov
mov
jp
fistl
sub
icebp
jge
in
iret
std
jae
pop
pcmpgtb
pop
jnp
push
pop
mov
into
arpl
mov
hlt
cmp
sti
dec
aad
aad
adc
inc
pop
sbb
xchg
jl
mov
sbb
cmp
in
mov
aaa
bound
push
dec
push
mov
pop
lret
add
bound
out
adc
nop
out
inc
mov
int3
test
xor
ret
or
inc
lret
pop
dec
jp
cmpsl
push
dec
mov
cmp
cli
pop
mov
shrb
inc
inc
movsb
shrl
dec
lret
sub
leave
fists
and
xchg
jo
in
mov
adc
push
js
xor
and
aam
push
pushf
dec
outsb
mov
push
inc
push
fcompl
add
test
mov
lds
dec
jo
scas
jo
mov
jnp
inc
push
ja
mov
mov
inc
mov
cmpsb
aas
pop
xchg
lods
clc
stc
cmp
sbb
push
insl
stc
dec
or
push
mov
adc
cltd
mulb
daa
data16
stc
mov
push
xorb
out
lea
push
movsb
outsl
cmpsb
addr16
mov
mov
cmpsl
imul
insb
mov
ja
xlat
xchg
push
xchg
mov
pop
inc
adc
mov
mov
xor
cmp
dec
outsl
jb
fwait
inc
cmp
in
cmpl
and
and
mov
cmp
pop
popa
sub
inc
mov
out
inc
cs
jmp
and
push
psubd
test
pop
sub
into
nop
sbb
mov
stc
xchg
push
pop
fisttpl
aam
lret
test
cmp
js
scas
pop
xchg
add
bound
pop
fbstp
xor
mov
push
imul
lea
pop
int
pop
loopne
xor
enter
and
adc
into
mov
and
jge
int
add
adc
adc
mov
loopnew
out
dec
movsl
jno
cmpb
add
aas
fldenv
inc
jbe
add
push
cmp
inc
jge
aaa
xor
push
mov
inc
cmpsl
lods
leave
lods
or
push
mov
mov
aad
rorb
in
adc
jno
jnp
test
icebp
dec
push
bound
mov
je
test
insl
mov
pop
ss
repz
jg
lods
nop
jl
jle
outsb
test
js
call
add
pop
sub
scas
lret
push
ja
inc
in
pop
cmp
mov
rcll
cs
into
dec
out
loope
in
insb
xor
mov
movsb
shll
mov
inc
addr16
dec
popf
ja
insl
inc
jmp
dec
add
mov
lds
xorl
jl
negl
jns
insb
lret
loop
movsl
inc
aas
jecxz
pushl
mov
inc
lea
out
push
lret
iret
xor
jo
push
cld
pop
ds
cltd
sahf
ljmp
aam
das
or
sbb
adc
lcall
int3
ret
pusha
rorb
sbb
sbb
cltd
js
test
mov
mov
dec
cli
mov
aam
sbb
or
faddl
xor
fs
push
fstpt
mov
insb
fisttpll
imul
sub
fildll
ss
dec
stos
cwtl
pop
sahf
cli
out
aad
scas
stos
int
push
cmp
dec
add
idivb
pop
es
jge
loopne
imul
jecxz
mov
push
inc
cld
fistl
outsb
xchg
xchg
loope
call
inc
adc
add
arpl
dec
xlat
adc
out
dec
adc
mov
lods
in
sbbl
sub
add
gs
stc
js
xchg
es
sbb
cmp
in
and
sbb
in
popaw
ja
fimull
adc
shlb
inc
icebp
jno
xor
jb
push
aad
mov
mov
cmp
xchg
xlat
inc
fnstcw
add
push
mov
xchg
mov
xor
sti
add
jnp
dec
mov
pop
or
mov
add
xor
mov
cmc
sbb
adc
add
cmp
mov
movl
cmpsb
xor
mov
jo
xchg
mov
test
sub
ficompl
jmp
sbb
jp
andl
aad
ss
je
mov
lods
push
xlat
int3
or
inc
pop
cmp
sbb
push
cmp
test
mov
push
xchg
jnp
lret
xor
aad
cmc
scas
jb
xchg
mov
cmp
cmp
cmp
test
xchg
dec
mov
jbe
xlat
imul
stc
dec
jo
sar
jno
adc
jbe
mov
xchg
xlat
or
mov
je
scas
enter
add
push
dec
outsb
or
mov
mov
xchg
jne
call
pop
adc
xor
cwtl
mov
in
cli
sbb
xor
adc
shrl
mov
shlb
pop
aas
mov
into
mov
mov
leave
cmp
sbb
stc
or
jle
dec
fbstp
adc
mov
jl
jle
movq
je
mov
pop
pop
push
aam
test
stos
mov
mov
cmp
scas
std
lds
xchg
ret
mov
shl
inc
and
mov
cmp
insb
push
repz
pop
mov
mov
sub
push
mov
inc
mov
jle
pushf
cmp
jns
pop
insl
push
mov
mov
movsl
push
cwtl
jle
xchg
xchg
cmp
mov
enter
sub
jne
pop
adc
out
fisubrl
push
and
cmp
mov
lds
aam
jge
loopne
nop
or
mov
lret
push
xor
imul
sub
addl
imul
xor
push
push
jno
pop
or
sub
lahf
mov
mov
cmp
arpl
hlt
mov
lcall
jmp
or
int3
outsb
popf
mov
sub
iret
hlt
mov
mov
add
into
pop
adc
adc
add
dec
cmpl
inc
cmc
test
ja
imul
sbb
paddusb
mov
stos
jp
cmp
mov
pop
inc
fildll
mov
mov
jae
xor
popf
mov
mov
cmp
inc
pop
loope
mov
push
aam
ret
lods
mov
add
mov
xchg
or
rcl
cmp
pusha
shl
lret
rolb
frstor
repnz
xchg
sbb
inc
mov
in
mov
ja
mov
add
jbe
add
xor
push
inc
int
out
mov
test
imul
testb
sub
fisubs
add
jg
mov
pop
lds
mov
daa
sbb
sub
mov
popf
add
and
into
xchg
ficoml
cmp
mov
leave
int
jecxz
repz
mov
pushl
es
jns
loope
mov
gs
aad
out
lahf
imul
sti
subb
adc
scas
jmp
aas
add
data16
push
mov
jl
lods
nop
incl
adc
jb
push
and
ljmp
inc
mov
stos
xchg
mov
push
mov
jo
jmp
aas
stc
lock
hlt
push
xor
push
stos
out
adc
ret
rorl
inc
divb
inc
nop
rorb
xchg
cwtl
push
jecxz
stos
sbb
mov
testl
dec
cltd
mov
mov
add
mov
int
notb
mov
sbb
jmp
jae
push
sbb
arpl
add
lret
inc
xor
inc
inc
pop
test
jp
mov
jp
bnd
inc
fs
pop
sbb
jle
call
scas
mov
cmp
mov
mov
int
icebp
or
popl
cmp
mov
adc
fidivl
out
orl
jg
ljmp
xchg
or
xor
cmp
mov
stc
stos
push
sub
ret
lods
xor
in
cmpsl
out
and
push
xor
rolb
js
or
adc
clc
fs
scas
test
out
adc
sub
xor
popf
cmpsl
or
lahf
aad
xchg
jns
push
out
dec
and
out
popf
aad
jne
fmull
cmpsb
dec
out
jl
xchg
mov
push
mov
movsl
inc
push
cs
mov
mov
data16
ret
lret
mov
and
mov
pusha
mov
or
jno
cmp
cs
repnz
das
jle
xchg
dec
xchg
pop
xor
int
test
pop
cli
into
inc
cltd
adc
and
pushf
and
mov
outsb
pop
fcompl
cmp
lret
cmp
movsb
jb
enter
loop
inc
push
push
inc
imul
fucomp
ss
mov
loopne
mov
jg
jns
jne
xchg
sub
popa
cmp
in
pop
dec
mov
ret
sbb
jmp
adc
movsb
and
nop
mov
jae
shrl
fbstp
std
mov
or
and
rcll
shrl
and
xor
fcoms
jnp
pop
inc
lret
or
adc
mov
jb
sub
sbb
xlat
and
inc
dec
pop
push
stos
sub
lds
outsl
bound
mov
xorl
icebp
sbb
mov
inc
add
mov
sub
push
test
fisttps
push
sahf
mov
xlat
jo
adc
xlat
cmpl
inc
sub
idivb
sahf
arpl
mov
int
call
in
int3
andl
mov
lcall
lods
add
inc
dec
mov
xor
jecxz
out
dec
xlat
out
add
dec
pop
lods
loop
dec
xor
sti
xchg
int3
lock
and
rorb
repz
leave
jle
mov
dec
and
lods
mov
mov
jnp
inc
mov
icebp
scas
adcb
pop
mov
lods
or
in
push
shrl
add
pop
lea
into
insl
mov
pop
je
je
jne
ret
movsb
scas
mov
mov
test
push
loop
mov
ljmp
lahf
outsl
add
mov
jno
push
lods
fdivp
lea
xor
lods
and
cmp
out
insl
fsubl
inc
arpl
test
loop
aam
rcll
push
add
lret
in
jmp
ret
ds
push
bound
fldcw
outsl
insl
outsb
dec
sbb
in
mov
jb
fldl
pop
fistpl
mov
mov
add
inc
stos
xor
mov
insb
test
cmp
nop
xor
xor
imul
cmp
ljmp
pop
aad
or
movsb
gs
call
cli
cmp
dec
sbb
add
pop
adc
xchg
fs
ss
addl
jne
push
repz
adc
sub
jb
cmp
lds
mov
es
pop
pop
jnp
in
mov
sbb
mov
gs
mov
jle
lret
arpl
sti
jnp
sbb
loope
mov
dec
andb
out
sub
xlat
adc
popa
inc
push
rolb
aaa
jmp
push
and
sub
dec
mov
icebp
cmp
push
jnp
inc
sti
out
std
loopne
imul
popa
and
mov
movsl
and
sub
jne
movsb
mov
inc
ret
lods
loopne
in
mov
xor
aam
jge
popf
sbbl
add
mov
leave
insb
sbb
pop
jge
mov
mov
roll
fld
sarb
xchg
fs
xchg
jno
lret
add
ret
bnd
in
pop
aad
cmpsb
std
fdivrs
sbb
adc
stos
das
inc
mov
repnz
push
fidivs
ljmp
jecxz
popf
xchg
jnp
xorl
xchg
push
aas
popa
push
lret
mov
lret
repz
push
pushf
push
add
stos
fstpl
mov
cmp
adc
stos
stos
dec
cmp
or
mov
add
repnz
add
in
sbb
cmp
push
jle
iret
js
loope
fimuls
xor
fnsave
jg
xchg
mov
mov
dec
push
mov
add
dec
sbb
mov
jl
cmpsl
push
pop
fcoms
mov
lret
les
pop
push
js
xchg
sbb
popf
push
push
data16
mov
push
cmp
pop
push
add
adcb
and
test
je
test
das
loopne
xchg
sbb
ss
dec
add
dec
add
or
add
popf
dec
sarb
loop
popa
mov
test
popa
ret
xor
sbb
add
sub
jne
leave
lahf
mov
pop
popa
in
test
lea
mov
xlat
adc
add
mov
movsl
stc
dec
scas
mov
int3
add
out
cltd
int3
adc
sbb
insl
dec
jp
iret
in
xchg
pop
dec
and
push
out
mov
mov
dec
int3
push
fwait
jge
mov
imul
xorl
push
in
push
cltd
int
xor
xor
add
mov
pop
pop
jl
divb
mov
and
mov
push
sahf
popf
mov
pop
or
out
push
sbb
sbb
xchg
and
cmp
dec
leave
and
dec
sub
lock
mov
add
sbb
cmova
outsl
movsl
dec
dec
jmp
ret
inc
jmp
push
xchg
hlt
and
rcrb
add
and
outsb
inc
fiadds
jno
mov
pop
test
add
pop
jae
sbb
pop
inc
stos
movb
lds
mov
pop
adc
pop
sbb
fsubrl
mov
aaa
call
ljmp
fidivrs
and
sbb
shlb
call
test
jno
cmpb
popf
jecxz
mov
sub
nop
arpl
fwait
and
jmp
sti
aaa
push
dec
push
inc
inc
xchg
jne
out
push
jae
pop
outsb
in
cmp
mov
push
insl
xor
mov
mov
fwait
jl
into
sub
add
jmp
dec
xor
sbb
dec
inc
out
mov
and
xor
iret
pop
inc
cli
outsl
mov
jne
dec
mov
jg
jo
jnp
sbb
lock
fsubrl
mov
add
push
sbb
bound
sub
add
adc
adc
mov
jo
dec
movsb
jecxz
bound
and
adc
and
add
jo
jmp
mov
das
loope
mov
cmp
aas
aas
bound
cmp
scas
gs
mov
incb
mov
and
stc
test
sub
cmp
rorb
mov
mov
inc
cmp
xor
jbe
lret
dec
int3
push
aas
mov
sub
push
rcrl
mov
xchg
and
push
lcall
sub
fadds
sti
jno
outsl
xchg
cmp
xchg
aas
insl
clc
ret
movsl
xlat
jle
xchg
xor
jo
addr16
sub
and
jnp
pop
out
cmp
mov
dec
mov
mov
mov
adc
daa
cmpsb
es
les
mov
or
sbb
outsl
filds
movsb
dec
sbb
inc
mov
jmp
outsl
pop
lods
dec
int3
fcomps
dec
dec
fwait
icebp
shll
fstl
or
clc
fstps
icebp
popf
fwait
arpl
inc
repnz
or
fidivs
popf
sti
lcall
mov
push
jnp
imul
mov
gs
rorb
xchg
sub
pop
sub
addr16
mov
pop
sub
mov
dec
jge
rorl
nopl
sbb
push
dec
push
pop
out
sbb
lret
inc
mov
jge
adc
mov
mov
cmp
int
dec
add
and
pushl
pop
test
xor
inc
jge
mov
jg
dec
cmpb
sbb
testl
xchg
lock
mov
sub
test
mov
push
leave
daa
xchg
pop
lret
pop
repz
add
sub
sbb
dec
std
ljmp
lcall
mov
andb
mov
xlat
test
stc
xchg
rcrl
test
sbb
iret
daa
mov
mov
mov
cltd
ja
lret
scas
inc
outsl
subb
lcall
aam
pcmpeqb
xchg
roll
or
push
cltd
pop
cmp
sub
sbb
jae
cmp
pushf
cmp
js
aad
out
ret
cli
xor
xchg
or
pushf
push
enter
cmp
jmp
fimull
xchg
pop
lret
movsl
jle
mov
xor
mov
sub
shl
fimull
ret
pushf
mov
stos
negl
gs
dec
int
fmull
bound
xlat
mov
xor
incb
push
cmpsl
sbb
stc
sub
push
rcr
push
push
clc
aaa
mov
xchg
jae
fcompl
inc
mov
outsb
fistpl
stc
mov
ret
mov
add
dec
insb
cmpsl
daa
cwtl
aaa
adc
inc
mov
pop
xchg
pop
dec
mov
rcll
mov
fidivs
inc
outsl
lods
pop
sahf
mov
cmpsb
loop
xchg
sub
xchg
cld
neg
movl
sti
fisttps
jl
into
fisttpll
insb
ds
lods
sub
xchg
imul
je
mov
or
out
pop
ds
mov
xchg
std
xchg
fisubrl
or
js
xchg
mov
ljmp
push
out
cmp
xor
mov
roll
jno
mov
sbb
inc
push
adc
xchg
sahf
sub
mov
sbb
pop
sbb
mov
loop
fsts
test
mov
or
cmpsb
fsts
rcrl
and
jge
push
jg
push
imul
sbb
mov
mov
mov
test
jbe
pop
dec
mov
lods
bound
icebp
jo
popl
jge
jmp
mov
iret
xchg
pop
mov
dec
sub
insb
das
pushf
push
mov
xor
push
xchg
xor
ss
pop
aad
call
stos
mov
imul
jmp
push
fstps
lahf
mov
movsl
rcll
xor
sahf
shlb
xor
cmp
pop
negb
aam
xor
sahf
xchg
sbb
ds
add
mov
or
mov
xor
adc
push
jno
scas
push
pop
fwait
sub
into
mov
out
push
xor
jmp
jb
sbbl
mov
mov
gs
pop
pop
dec
mov
inc
ret
sub
jle
push
negl
jnp
mov
add
enter
out
fnstcw
out
mov
mov
aaa
js
std
into
xchg
loop
mov
sub
mov
mov
inc
mov
dec
push
xor
fwait
or
insb
xor
dec
clc
repnz
aas
xchg
mov
jo
out
mov
xchg
sbb
test
lock
xor
pushf
imul
jb
add
mov
js
mov
scas
sbb
push
pop
or
mov
cmpsl
xor
xchg
xchg
clc
les
xchg
sbb
dec
or
sti
sahf
lahf
xor
adc
pushf
xchg
pop
jl
dec
push
scas
pop
repnz
pop
and
fsubrs
pop
cmc
lret
or
fimull
lahf
pop
int
mov
fs
jne
inc
pushf
push
imull
add
jnp
sub
sbb
jae
xor
jecxz
cwtl
xchg
pop
nop
imul
sbb
inc
movhps
imul
sbb
repz
rcll
push
cld
sbb
or
rolb
psllq
imul
xchg
aas
pop
xor
out
or
and
fisubrl
scas
xchg
xchg
push
adc
cwtl
in
lods
ret
adc
mov
xchg
jl
push
addb
shll
or
insl
out
aam
out
es
fs
lods
dec
enter
adc
mov
or
imul
pop
fwait
je
int3
loopne
sub
inc
aaa
shrb
aas
pop
out
push
fimull
dec
dec
inc
push
xchg
or
sub
mov
jg
loopne
xchg
mov
outsb
into
xchg
shlb
and
mov
mov
test
or
daa
pop
icebp
jge
call
sarl
xor
aad
pushf
pop
int3
insb
outsl
pushf
es
stos
enter
subb
js
or
jg
xchg
fmuls
cmp
cmpsb
mov
clc
mov
and
scas
shlb
xchg
fimuls
cmc
or
das
in
ss
mov
sub
cmp
imul
pop
ljmp
fsubs
cmp
mov
xor
test
imul
cmpl
adc
lret
adc
mov
xchg
cmpsb
mov
js
mov
outsb
lahf
xor
jl
scas
negl
out
ret
into
pop
push
sub
movsb
sbb
push
xor
pop
sbb
fisttpl
pop
mov
add
lret
mov
add
sar
test
cmp
lcall
mov
pop
cltd
cld
aad
xchg
and
mov
xchg
sub
lock
cwtl
mov
jp
enter
or
adc
les
pop
or
jbe
xchg
cs
ret
sub
push
mov
mov
movsb
add
out
leave
sahf
push
mov
sbb
inc
push
in
mov
dec
pop
sbb
inc
xchg
mov
push
cmpsb
sub
out
mov
cmp
out
ja
cltd
or
mov
push
push
dec
sub
fisubrs
das
push
imul
dec
xchg
mov
pop
int3
jae
sbb
mov
cmc
mov
popf
imulb
movsb
in
push
fidivs
adc
ret
sbbl
cmc
outsl
or
cltd
add
cmp
pop
dec
adc
out
enter
jns,pn
xchg
adc
ret
shrb
movsl
ljmp
out
test
arpl
inc
mov
jge
movsl
inc
arpl
inc
cmp
fwait
mov
pop
push
enter
clc
idivb
fsts
inc
lods
aam
add
dec
mov
hlt
fldt
push
subb
jne,pn
jns
cmp
jae
cmp
loop
cmc
jne
mov
mov
xor
jge
cmc
sahf
rorb
xchg
jle
enterw
ror
cmp
jl
mov
rcrb
pop
mov
push
ljmp
stos
mov
shlb
inc
ret
aad
or
nop
xchg
mov
mov
mov
add
mov
shll
cmpsb
sub
jecxz
adc
lcall
sahf
sub
push
mov
push
in
push
dec
add
pop
das
sti
movsb
fisttpl
pop
xchg
js
test
push
in
call
dec
xchg
cs
jne
scas
inc
dec
jns
ss
xchg
and
jg
push
stc
add
and
pop
out
xor
shrb
adc
sbb
in
sbb
xchg
fiaddl
cli
mov
pop
loopne
mov
scas
jg
loopne
sbb
fwait
dec
sbb
lods
xchg
fadd
rcr
stos
mov
push
jmp
sbb
sbb
std
add
add
mov
mov
aam
repz
adc
fsubrl
leave
sbb
mov
iret
std
fnstcw
test
push
push
jg
loopne
test
ja
ret
insl
inc
add
ss
movsl
pop
repz
jb
push
adc
cmp
xchg
push
mov
xchg
pop
repz
lcall
mov
push
lcall
fimuls
cld
dec
add
into
call
push
mov
shlb
jae
icebp
sub
mov
cmp
or
mov
aaa
pop
or
loope
ficoml
push
enter
leave
jge
setge
mov
pop
sbb
pop
js
lcall
out
xchg
in
pop
inc
sti
jl
xchg
push
inc
lea
xor
movsl
testb
push
fisttps
std
inc
jl
movsb
repz
sbb
xor
shrl
sarb
xadd
jecxz
push
mulb
test
cmp
dec
roll
dec
in
push
loop
mov
xchg
inc
jo
iret
xlat
sub
dec
xor
or
aas
mov
xor
push
popf
subl
jge
fcomps
nop
in
xchg
sbb
popa
ficomps
cmp
or
in
and
cwtl
mov
insl
mov
push
int
sbb
jle
adc
loopne
sub
inc
jg
inc
ljmp
lods
add
pop
sbb
sub
ret
outsl
jbe
jl
push
aas
push
jo
push
xor
jne
mov
stos
pop
push
inc
lds
sbb
and
outsl
fidivl
shlb
lds
loope
dec
mull
ret
sbb
cmpsl
sbb
inc
outsb
pop
mov
sti
sbb
push
pop
lahf
in
fdivrl
sbb
cmp
adc
test
sbb
push
ds
lret
add
ss
clc
je
pusha
mov
fmuls
stos
daa
jmp
jl
mov
ret
or
pop
shlb
cmp
and
rcll
cld
pop
fdecstp
imul
mov
inc
push
leave
pop
mov
pusha
mov
lock
adc
jb
mov
scas
scas
sbb
jbe
pop
lods
sti
mov
mov
inc
push
or
mov
xchg
inc
push
out
call
xlat
scas
sub
fwait
lods
repz
and
push
cmpsl
xchg
mov
repnz
adc
push
dec
jge
scas
dec
dec
ret
xor
sub
add
mov
xlat
jmp
es
popl
push
pop
cmp
rcrb
adc
lahf
pop
jle
push
xor
jmp
push
js
imul
sbb
adc
jge
jnp
lods
sbb
mov
fisubrl
dec
jnp
mov
fldl2e
mov
fptan
call
sbb
mov
or
cwtl
add
fisubrl
inc
or
sub
pop
lret
bound
push
jbe
test
xor
push
xlat
mov
dec
jg
ja
inc
jo
inc
push
or
push
mov
lret
pusha
dec
lods
sub
mov
pop
repnz
out
movsl
out
cmp
movsb
sahf
or
mov
pop
xor
fstp
test
or
mul
orl
in
inc
fistpll
mov
ja
hlt
and
ds
sub
call
or
imul
mov
jge
lret
inc
fsts
lcall
mov
xor
addr16
or
cwtl
fsubrs
movsb
lock
into
fmull
pop
pop
and
mov
subb
ficoms
push
xor
push
adc
mov
and
pop
mov
stos
cmc
add
clc
test
sbb
xchg
daa
fstl
dec
inc
popf
inc
mov
sahf
adc
adc
insl
insl
das
fists
lea
daa
cld
dec
xor
into
fldl
xchg
out
ret
rcrb
ficomps
dec
push
jae
xor
or
int
lock
xor
mov
imull
lds
lea
and
movsb
pusha
out
sub
and
or
inc
jae
add
aaa
pop
stos
dec
lds
adc
sub
mov
fwait
std
outsl
push
test
call
enter
lret
cmc
and
xchg
dec
in
sub
idiv
scas
xchg
mov
xor
and
xor
daa
dec
pop
out
push
inc
sub
mov
or
fldenv
js
jb
push
inc
popl
and
inc
fdivrp
insb
inc
sbb
add
std
sub
lcall
dec
mov
or
jbe
xor
push
cmpsl
or
mov
je
ds
fs
std
sahf
daa
pop
scas
in
nop
mov
test
je
pop
or
sub
clc
out
sarl
pop
push
lcall
and
xchg
shr
cmpsb
rcrl
jns
dec
cmpl
mov
cs
filds
adc
or
shl
xor
aas
lock
add
mov
int3
sahf
jp
pop
mov
sarl
xor
mov
pop
ja
jecxz
rorl
fbstp
mov
loopne
js
mov
push
out
scas
and
int3
xchg
mov
add
ror
pusha
stc
inc
cmp
inc
cmp
mov
or
ret
arpl
fildl
js
loopne
neg
mov
xor
scas
or
dec
adc
mov
push
sub
dec
xor
adc
and
push
and
sbb
movsb
and
jae
sub
xor
lock
icebp
jbe
and
cmpsl
add
jnp
mov
jb
or
mov
dec
sub
pusha
inc
outsl
les
aaa
rcrb
sbb
js
jno
pop
aas
or
push
in
add
add
dec
fadd
les
loopne
push
cmp
rcrl
jecxz
xchg
iret
push
inc
push
cmp
lods
add
loopne
cmpsb
xlat
mov
imul
sahf
enter
inc
loop
stc
fsubs
nop
xchg
mov
in
movsb
mov
out
ffree
mov
push
push
clc
jno
push
hlt
movsb
mov
push
push
out
sahf
out
pop
fcmove
mov
imul
push
cmpsb
mov
push
fsub
sbb
fsubrp
sbb
xchg
adcl
js
inc
push
aas
mov
adc
mov
out
adc
cmp
add
mov
aas
xchg
mov
lock
std
mov
ret
adc
pop
push
adc
adc
in
rcll
cwtl
cmp
andb
sbb
aaa
push
addr16
out
loopne
or
int3
mov
adc
mov
fsubs
dec
sub
out
ljmp
jp
daa
xor
jae
xor
xlat
sahf
ds
movsb
pusha
and
sbb
jmp
and
xchg
nop
mov
cwtl
and
mov
das
add
mov
enter
outsl
in
and
or
and
fwait
test
cmp
in
mov
mov
and
jns
fucomip
push
ja
sub
jl
fcoml
jno
in
sub
andb
fsubs
adc
xlat
bound
push
or
dec
mov
cli
xorl
xlat
mov
push
sti
lods
dec
call
fists
fildll
in
xor
aad
pop
inc
pop
sahf
sub
les
dec
adc
dec
subb
cltd
xor
fwait
mov
int3
sti
adc
xchg
enter
dec
negl
stc
stos
push
test
mov
scas
jb
push
cmp
repz
push
cld
cs
and
out
shlb
sbb
adc
sbb
dec
pushf
jg
sar
addb
pop
xor
loopne
mov
pop
je
mov
stos
andb
and
and
ret
nop
xchg
lock
push
push
sub
jnp
fidivs
jmp
movb
pop
push
int
bound
jae
adc
ud2
outsl
jne
lret
lods
lea
pop
mov
mov
cmpsl
push
dec
pop
in
ja
mov
lret
fcoml
jle
jg
xor
loop
pop
insl
std
gs
aas
test
or
fists
add
sbb
sti
jle
mov
mov
jg
gs
sbb
adc
and
sub
roll
cmc
ret
iret
popf
cmp
fs
mov
push
push
dec
mov
js
sbb
stos
int
push
psubusw
mov
aam
mov
mov
loop
aas
jl
cmc
lods
inc
mov
imul
aas
add
and
cmpsb
or
dec
pushf
pushf
movaps
mov
add
insl
push
pop
xor
loope
jb
jns
sub
es
hlt
in
mov
dec
dec
xchg
hlt
pusha
xchg
sahf
in
add
xchg
bound
pop
out
mov
sub
cmc
fisttps
ja
dec
mov
mov
pop
push
adc
fmull
add
in
fsub
orl
pop
lock
in
ficomps
outsb
cld
push
mov
sbb
or
jae
mov
jns
test
pop
xchg
sti
sbb
ret
dec
fwait
mov
shrb
pushl
les
sub
mov
jge
repz
xchg
mov
mov
cld
loopne
mov
loope
sub
int3
xchg
loope
sbbl
cmc
push
cld
fidivrs
xor
and
dec
icebp
mov
call
aaa
pop
outsb
movsl
in
mov
add
rcl
test
fisttpll
in
push
insl
pop
aas
mov
xor
or
imul
push
mov
xchg
push
dec
lods
enter
stc
in
push
aam
fcomp
jbe
scas
and
sub
fcoms
jge
push
repnz
ss
add
sbb
into
xor
repz
pop
cld
adc
subl
popa
in
xor
mov
and
test
aaa
or
aaa
sbb
sbb
or
sbb
mov
add
shll
gs
stc
push
or
inc
or
sbb
in
stos
lcall
cld
inc
call
daa
pop
rorb
rorl
enter
mov
int
cmp
dec
jg
in
xor
fstpt
in
mov
pop
movsl
and
cmp
movsl
or
cmpsl
mov
cld
stos
xor
rorb
sub
jp
sub
arpl
jge
push
enter
jns
push
pop
stc
lret
push
jle
push
mov
xor
xchg
in
or
mov
mov
scas
lods
mov
push
test
push
inc
jne
rcll
xsaveopt
sbb
aam
jno
xor
jle
ss
inc
loop
inc
loope
mov
cld
mov
in
or
arpl
jb
adc
movsw
sbb
ret
push
stos
imul
xlat
pop
cwtl
and
sbb
adc
xor
mov
ficomps
mov
test
lds
scas
adc
fldenv
xlat
dec
xchg
push
xchg
cmp
xchg
ret
icebp
insb
adc
and
sar
cltd
lret
addr16
inc
jb
imul
aam
mov
outsl
pop
adc
insb
inc
fcomip
pop
fwait
cmp
int
sbb
dec
sbb
inc
or
inc
sub
mov
sub
mov
xchg
sbb
and
lret
adc
bound
dec
xchg
imul
sub
xchg
cmp
xor
adcl
popa
gs
insl
inc
jecxz
or
cmp
arpl
out
js
sbb
mov
adc
push
ljmp
push
mov
sbb
inc
cs
andl
adc
or
xchg
push
insb
loope
xlat
mov
push
xchg
sub
xchg
push
aam
mov
adc
sub
pusha
dec
sub
test
jmp
inc
sbb
mov
aas
lods
hlt
pop
cmp
add
or
push
das
push
cmp
xchg
leave
leave
inc
xor
adc
xchg
insl
cmp
sahf
and
movups
test
inc
mov
push
push
mov
jno
mov
inc
jge
bnd
pop
movsl
stc
dec
lods
mov
test
mov
aam
call
fcmovnbe
das
or
lret
stos
adc
in
sub
mov
aaa
scas
aad
mov
pop
and
jae
and
fnstsw
lret
sbb
out
outsb
and
jmp
cmp
cltd
out
mov
add
scas
dec
in
pop
rcl
mov
outsl
ja
push
xlat
das
cmp
pop
fisubrl
dec
jne
aas
inc
addr16
xor
mov
sbb
pop
adc
and
lods
inc
lea
hlt
sub
push
shr
out
cmc
cmp
mov
mov
xor
mov
pop
and
divl
call
and
pop
test
mov
mov
and
jle
mov
std
out
xchg
add
vminsd
imul
out
push
scas
ficompl
in
test
movsb
jge
dec
mov
test
xchg
pop
xchg
xor
outsb
mov
cld
jae
clc
jae
mov
in
cmp
push
rolb
test
xchg
adc
jge
movl
lods
fcmovbe
pop
xchg
dec
xlat
ficoml
fidivrl
movsl
pop
sbb
adc
repnz
xchg
xchg
pop
clc
in
scas
cmpsl
or
stc
dec
ds
mov
sbb
pusha
mov
addl
sbb
in
adc
dec
xor
bnd
into
dec
lahf
pushf
xchg
outsb
insb
push
nop
mov
subb
sbb
inc
clc
xchg
movsb
pop
jo,pn
or
dec
out
repz
ds
push
pop
add
jg
mov
cmp
mov
add
dec
xchg
and
das
stc
sbb
sub
scas
mov
nop
pmaxub
loop
in
je
inc
aas
push
cld
dec
push
stos
popf
and
push
addr16
adc
push
std
sub
inc
sub
mov
dec
mov
mov
stos
repz
subb
ljmp
jbe
lds
dec
lret
fnstenv
es
jnp
sub
adc
or
or
lret
jb
test
push
ror
mov
lods
xchg
daa
imull
cmpsb
outsl
cmp
das
dec
push
add
push
js
xlat
mov
dec
adc
jno
pusha
sti
lret
repz
inc
xchg
xor
or
jb
or
xor
jne
dec
xor
out
push
sti
push
cmpl
repnz
mov
inc
dec
jle
insl
cmp
xchg
scas
inc
and
cmp
in
sub
jns
and
adc
cltd
shlb
jmp
mov
test
daa
loope
lret
and
dec
push
addr16
loop
xor
mov
loope
and
adc
call
loop
ss
scas
in
and
loop
notl
push
into
cmp
xor
scas
dec
das
xor
jne
adc
xor
cmp
dec
ss
add
lret
add
jge
inc
mov
mov
mov
loopne
and
into
aad
jbe
xchg
loop
pop
leave
mov
aas
xchg
lock
fiadds
cltd
mov
jge
cmp
nop
xchg
in
inc
mov
rcr
mov
jno
and
mov
push
in
imull
paddw
xchg
push
mov
es
addr16
sub
std
les
adc
daa
int3
imul
add
int
and
aaa
pop
mov
xchg
xchg
sub
sbb
enter
in
sub
push
js
sub
icebp
add
push
adc
mov
jae
push
movsl
push
ja
pop
or
cmp
xchg
fidivrl
and
hlt
stos
movsl
xchg
and
decl
dec
enter
ret
ja,pn
jnp
push
mov
rcl
cmp
or
or
mov
jge
adc
ficompl
dec
in
push
fisubl
ss
and
jbe
sbb
jbe
and
mov
cmpsb
addl
cmc
sti
and
adc
inc
ja
xor
pusha
popa
data16
jg
jmp
lret
mov
mov
data16
xor
sbb
fists
outsb
mov
repnz
xchg
fcoml
ficoml
out
push
arpl
sti
sub
xor
in
ljmp
add
push
push
xlat
mov
sbb
testl
or
jbe
jbe
cltd
cmp
ret
in
aad
ljmp
cmp
mov
addr16
inc
dec
aam
aas
xchg
xchg
xchg
call
mov
sahf
jge
sbb
mov
sti
adc
add
lahf
jecxz
ret
cmpsb
push
fldt
cli
loop
into
cli
divb
pop
mov
jle
xchg
xchg
iret
mov
fdivrl
insl
pop
loopne
adc
sbb
dec
mov
mov
or
imul
mov
data16
shrb
test
sbb
loop
cmp
cmp
xor
icebp
xor
inc
xlat
lds
ss
popf
mov
sbb
mov
movsl
lds
fwait
addb
faddl
lods
add
sbb
xor
or
dec
lret
aaa
mov
dec
cmp
shl
ja
addr16
mov
leave
sbb
sub
repnz
mov
inc
mov
cmp
decl
jno
data16
add
ljmp
and
in
and
in
or
sub
int3
test
cli
mov
pusha
pop
shll
and
push
mov
cli
daa
bound
stos
mov
xchg
data16
jp
arpl
lahf
pop
sub
sub
out
lock
xor
pop
loopne
mov
sub
push
lret
negb
sub
es
loop
xchg
xorl
sbb
push
lds
mov
les
xchg
in
add
ds
testl
das
cld
xor
push
mov
xchg
jns
rcll
enter
pushf
pop
stos
jno
lret
sbb
cmp
xorl
stos
mov
jmp
dec
dec
dec
fldenv
in
xor
push
mov
inc
push
xchg
scas
cmp
dec
pop
push
addr16
add
aas
add
add
xchg
mov
pusha
imul
icebp
loope
mov
dec
add
sub
mov
dec
jl
pop
adc
sar
mov
xchg
pusha
in
or
or
pop
insl
cmp
insl
iret
cmp
mov
andl
into
fcompl
pop
setbe
add
fs
fiaddl
sbb
xor
loope
pop
add
mov
xor
dec
das
aas
jg
std
int3
and
dec
lret
jbe
lea
scas
cmp
aas
mov
into
rorb
dec
inc
movsb
lds
ja
pushf
push
stos
sbb
outsb
in
out
or
push
xchg
fcmovbe
movsl
sub
popa
pop
ss
mov
jo
popf
pop
mov
test
xchg
mov
xor
hlt
sub
cmc
sbb
stos
fs
dec
mov
jns
xor
sar
push
xchg
dec
jns
fmull
in
fstps
lret
fimuls
mov
shr
movsl
push
push
jle
fdiv
lds
in
es
adc
mov
hlt
add
xchg
aaa
hlt
push
mov
in
out
std
push
stc
aam
fisubs
push
pushf
xchg
sub
mov
aad
push
jl
aam
xor
ds
in
sbb
xorl
out
aam
mov
int3
jbe
and
xchg
mov
test
icebp
adc
inc
push
insl
iret
mov
addr16
dec
push
add
pop
ss
sahf
inc
mov
xor
or
inc
jge
iret
leave
mov
sbb
mov
adc
xchg
aad
mov
sarl
popf
movsb
and
dec
pop
stc
adc
pop
mov
dec
inc
fidivrs
mov
add
xor
pusha
je
cmp
cwtl
sub
mov
repz
adc
mov
and
xchg
fdivs
mov
or
imul
fistpll
data16
mov
sub
jb
xor
cmp
mov
clc
in
hlt
jge
repnz
fucompp
les
sar
iret
cmc
rcrl
fcmovb
fdivrs
repz
adc
nop
int3
ja
nop
stos
and
repnz
cs
in
cmp
mov
sar
arpl
add
pop
cmp
dec
sbbl
mov
push
xlat
sbb
and
add
jb
add
scas
in
and
xchg
leave
cmp
test
adc
dec
push
ljmp
out
scas
xor
inc
scas
pushf
into
insl
cmpsl
or
jae
ljmp
into
imul
sub
pop
add
imul
and
mov
jo
out
call
movsb
pusha
pcmpeqw
enter
arpl
cwtl
mov
mov
cmpsl
nop
test
or
ret
stos
xlat
int
inc
cmc
shl
mov
iret
cwtl
rcrb
xor
jnp
in
xor
ja
shlb
jl
push
push
push
shrd
or
imul
inc
test
or
arpl
cmc
push
cmp
xlat
xchg
cli
pop
xor
xchg
and
in
pop
pop
mov
xchg
into
add
jl
imul
push
rcrl
push
es
insb
inc
fs
das
cmp
js
out
mov
cld
rcl
cli
cmp
jne
test
out
rorb
mov
fadd
vrsqrtss
sub
subb
lahf
sub
mov
xchg
adc
pop
pop
testl
mov
dec
mov
sbb
mov
sbb
stc
int
sarl
cmp
es
xchg
sarb
jg,pn
cltd
sti
mov
clc
xlat
xor
or
sub
imul
or
dec
outsl
ret
sub
jmp
add
int3
mov
mov
in
mov
pusha
mov
les
mov
test
adc
arpl
sub
jge
rclb
das
push
jmp
push
cmp
dec
popf
adc
push
movsb
es
cli
sub
mov
das
inc
data16
dec
cmp
lds
sub
xchg
jo
mov
inc
or
push
jg
and
insb
pop
or
jo
push
inc
insb
adc
cltd
mov
fs
pusha
cmp
in
outsb
popa
loopne
inc
pop
pop
es
mov
mov
inc
stos
pop
push
leave
ljmp
and
jp
mov
movb
loop
repnz
pusha
inc
mov
jmp
and
sbb
lret
das
and
out
lods
iret
mov
out
jge
js
cmp
pusha
jbe
sub
adc
out
push
incl
sub
scas
jo
push
dec
jnp
and
jge
push
roll
push
test
mov
push
mov
mov
aam
cmp
sub
xchg
sbb
dec
outsl
ds
data16
xchg
sub
inc
cmp
cmpsb
push
xchg
lahf
lods
jle
out
push
sbb
push
push
stc
or
rcll
add
je
jle
push
rolb
pop
fwait
mov
dec
cli
in
jae
adc
out
iret
sbb
and
std
xor
js
sti
xchg
sub
fs
inc
sbb
out
nop
fwait
sahf
ss
add
cmc
mov
movsl
pop
lcall
leave
pop
pop
push
add
out
push
push
xchg
jecxz
aad
mov
js
jl
gs
and
dec
inc
jmp
lods
fs
cld
lret
rorl
lret
aaa
clc
inc
into
sbb
inc
jnp
enter
mov
loope
push
xor
ret
mov
lods
and
sub
stc
mov
lret
xor
rcrl
sbb
adc
push
and
xchg
and
jno
call
xchg
subl
andb
aam
sbb
add
jnp
pop
lea
loopne
or
sbb
mov
adc
outsl
xor
mov
push
and
popa
mov
das
jb
dec
mov
jmp
and
test
in
jbe
sbb
testl
push
ja
mov
stc
sbb
mov
jge
inc
cmpsl
shrb
adc
pusha
sub
test
xchg
sub
cmp
out
mov
xor
addr16
bnd
ret
adc
cmp
pop
cmp
fstl
bound
inc
inc
mov
aaa
mov
pop
sub
aas
jmp
lock
std
mov
or
insl
loope
mov
sbb
mov
mov
jge
das
pop
dec
mov
rcl
stos
clc
icebp
sub
enter
fistl
xchg
lods
pop
xchg
je
repnz
dec
nop
imul
jge
cmp
ret
pusha
lret
add
push
dec
sbb
out
xor
test
cmpsb
inc
xchg
mov
mov
sbb
jne
mov
lods
mov
aad
lods
xchg
sbbl
adc
rep
call
jb
lods
or
xor
jge
sub
inc
mov
jns
popa
mov
clc
dec
repnz
call
adcl
sub
xor
sbb
hlt
sbb
int
sub
js
cld
ljmp
jg
repnz
jae
cmp
jmp
sub
out
clc
test
pop
addr16
pop
jecxz
popf
inc
popf
mov
mov
lcall
scas
inc
not
hlt
adc
lods
lea
cltd
cwtl
cmp
loope
ja
fidivl
sub
js
jno
test
scas
mov
mov
mov
ss
test
cmpps
mov
xor
dec
jmp
xchg
jo
mov
js
int
in
push
push
fildll
inc
pop
lret
divl
sub
repz
xlat
push
adc
stos
push
idiv
imul
mov
inc
cmp
sub
add
xor
pop
das
push
adc
clc
icebp
stc
cld
mov
and
add
cmp
mov
dec
sub
lea
mov
scas
loopne
sbb
hlt
mov
pop
add
icebp
push
hlt
nop
pushf
dec
dec
rcrl
testb
fimull
int
sahf
mov
outsb
push
mov
sub
loope
adc
sahf
movsb
mov
fmull
ret
push
push
mov
pop
mov
scas
faddl
xchg
pop
sub
pop
mov
leave
inc
xchg
fisubrl
or
xchg
out
icebp
mov
push
sarl
aad
xor
lea
cld
mov
stos
daa
push
mov
cmp
lahf
out
pop
ss
mov
dec
ret
push
xor
or
pusha
sub
pop
inc
adc
dec
sarl
outsl
mov
xchg
lock
mov
ret
outsl
jge
cwtl
and
pop
pop
mov
adc
mov
mov
enter
sbb
jecxz
sarl
mov
push
mov
inc
mov
das
cli
lahf
mov
dec
inc
or
loop
fcmovu
and
imulb
adc
icebp
imulb
push
mov
dec
cld
mov
scas
rcrb
jmp
xchg
xchg
fwait
push
pop
xchg
jecxz
dec
mov
xchg
jae
scas
mov
pop
mov
in
loope
mov
js
push
sbb
fs
mov
xchg
and
nop
inc
xchg
jnp
jns
dec
insb
test
mov
mov
scas
push
in
fisttps
jle
mov
dec
icebp
js
sbb
sarl
xchg
popf
push
aas
dec
jmp
ja
jne
mov
notl
insl
dec
jno
cmc
sti
push
cmpl
mov
testl
xlat
fsubrp
xor
fwait
add
ficompl
stos
and
mov
add
ret
fs
dec
fcomp
arpl
jae
adc
push
jmp
xor
andb
mov
and
push
lods
enter
push
sub
shrl
mov
and
mov
adc
sub
inc
and
subb
xor
mov
adc
pop
pushf
fisubs
pop
pop
push
shll
xchg
sbb
xor
insl
and
xor
mov
loopne
imul
jl
inc
dec
ljmp
jle
lahf
and
dec
jg
gs
je
pop
data16
adc
push
cmpl
lcall
mov
push
add
jnp
xlat
push
fninit
rcrb
sbb
insb
and
dec
fwait
enter
scas
mov
xchg
dec
push
jno
iret
mov
mov
enter
roll
xor
xchg
jb
test
add
sub
mov
dec
nop
or
jne
cmc
cmp
mov
xor
add
movzwl
mov
add
pushf
sbb
jns
jmp
mov
lock
mov
adc
xor
inc
notb
add
loop
push
stos
fiadds
aad
rclb
mov
mov
aam
mov
pop
mov
xchg
mov
xchg
test
adc
loope
sub
jge
leave
sbb
loop
sbb
jmp
lds
mov
xchg
dec
inc
andb
or
bound
test
je
xlat
mov
dec
rorl
fldcw
sbb
sahf
out
or
fwait
out
je
into
decl
lret
aam
lods
xor
test
movsl
jmp
daa
into
aad
jmp
in
jnp
notl
pop
lock
nop
mov
mov
scas
test
mov
push
cli
subl
pop
or
shlb
inc
lea
je
mov
test
daa
cmp
ror
sub
in
cmp
int
add
stc
push
or
mov
repnz
dec
pushf
popa
jmp
fcomi
shll
push
add
xor
je
cld
shl
mov
dec
leave
pop
mov
xlat
leave
mov
add
adc
mov
call
pop
hlt
and
ret
out
lock
dec
jmp
enter
rclb
xor
mov
push
sbb
loope
mov
insb
adc
cli
or
and
and
or
mov
mov
adc
mov
in
cmpsl
cvttps2pi
mov
or
xchg
nop
in
movsb
xchg
push
fdivl
push
jmp
dec
cli
loop
aas
sahf
jne
out
and
in
add
sub
push
mov
and
cmp
mov
push
inc
pop
dec
xchg
sbb
and
out
dec
daa
add
shl
pop
adc
daa
mov
mov
cmp
lods
mov
sbb
jb
xchg
push
std
cltd
xor
lcall
xchg
aad
mov
daa
xchg
or
cld
dec
into
arpl
mov
pop
cld
jbe
cs
cmp
mov
ficoml
xchg
test
pop
fdivrs
test
aaa
add
insb
jbe
iret
mov
ret
aas
fisttpl
jg
cmp
mov
adc
inc
nop
es
xchg
mov
push
shll
push
mov
push
or
cwtd
fisubrl
mov
xchg
sahf
dec
nop
js
sub
enter
push
mov
jecxz
xor
aas
jae
imul
lea
inc
rcll
or
xchg
popf
aaa
or
fdivrl
push
sub
clc
cwtl
sub
push
inc
insl
pop
lret
jmp
pop
leave
das
add
out
adc
int
pop
lret
pop
push
pop
loopne
nop
xchg
xor
xor
dec
add
nop
jns
inc
cltd
mov
mov
cmp
cld
test
or
push
out
sahf
test
add
xchg
mov
scas
cmp
js
mov
pop
jns
sbb
add
sub
cmpsb
mov
xor
out
rclb
adc
call
or
jmp
mov
aas
call
imul
jl
add
outsl
dec
pop
mov
gs
ja
outsl
aad
cmp
push
loop
lret
notl
clc
jecxz
scas
jmp
inc
mov
dec
ficoml
xor
mov
mov
hlt
inc
xchg
fiaddl
outsl
mov
imul
loope
sbb
xchg
mov
dec
fwait
adc
mov
adc
test
pop
mov
xor
cmp
iret
jae
test
push
iret
push
xchg
add
jmp
test
loop
mov
jne
push
push
adc
jmp
and
and
mov
sub
fwait
out
iret
shl
clc
sbb
test
or
stc
or
push
movsl
sbb
push
lods
cmp
sub
cmp
fsubrl
jns
jg
xor
adcb
or
imull
mov
sbb
fucomip
pop
sub
mov
ja
push
andb
dec
fcmovne
arpl
xchg
out
addl
cmp
jmp
stc
sahf
out
mov
outsl
jge
iret
cmc
push
rol
outsb
roll
sbb
int3
ja
imul
cmp
adc
fwait
xchg
xor
cmpsl
push
gs
mov
mov
aad
pop
hlt
loop
jmp
xchg
fadds
xorb
ds
push
mov
inc
scas
xor
and
data16
lcall
fcom
sub
mov
xchg
and
adc
jl
cmp
push
movsb
or
mov
pop
aas
movsl
mov
ss
pop
mov
sahf
mov
ljmp
mov
fisubrs
pop
mov
xor
adcl
test
cmc
enter
je
clc
adc
or
inc
mov
mov
jge
sar
movsb
xchg
mull
in
arpl
int
imul
idivl
sbbb
in
lret
in
and
and
pushl
cld
testb
out
adc
outsb
aad
movsb
insb
cltd
rclb
mov
stos
adc
addr16
nop
pop
cs
xchg
arpl
adc
shl
pop
insl
add
pop
lret
enter
jmp
jl
xlat
jno
mov
clc
mov
lods
enter
fcmovu
imul
pop
push
mov
sarl
push
jge
push
sub
pushf
inc
xor
pop
daa
add
push
ret
sub
hlt
push
iret
lahf
cld
xchg
data16
add
xchg
test
pushf
test
inc
sbb
adc
lods
scas
xchg
push
cmp
mov
mov
jl
mov
adc
aas
sbb
jns
mov
jne
or
popf
shlb
mov
xchg
outsl
lret
data16
dec
mulb
or
lods
sub
inc
out
std
mov
sahf
pop
and
ds
arpl
stos
push
and
add
hlt
jp
mov
cmpsl
xchg
jl
push
sub
mov
ja
movsb
cmc
mov
sub
std
push
xchg
inc
lods
sub
push
xchg
movsl
das
jmp
inc
jmp
mov
ret
cmpsb
pop
dec
mov
adc
rcll
fmulp
insb
ficomps
jge
pop
repz
rcrl
or
push
shll
enter
and
in
mov
dec
es
or
sbb
sbbb
sub
ret
ljmp
cwtl
and
jbe
mov
jle
jl
sub
add
add
mov
icebp
pop
popa
and
jmp
push
daa
mov
push
push
shl
mov
sub
mov
pop
xchg
push
fwait
cmc
fadds
or
push
sbb
cmpsb
jns
or
jecxz
jmp
mov
fdivrs
bound
xor
sbb
loop
push
pop
das
aaa
daa
fdiv
xor
mov
push
push
aas
fisubrs
into
int3
adc
ret
dec
gs
movsb
repnz
outsl
jmp
sbb
clc
mov
pop
std
lods
jp
xchg
out
test
test
sub
push
mov
stos
push
test
and
mov
jp
in
popa
stos
add
jp
jno
push
roll
or
adc
pop
push
xchg
mov
aas
aaa
lea
mov
mov
scas
sub
xlat
xchg
xor
mov
neg
push
mov
sub
aas
mov
and
sub
xchg
lret
dec
test
jp
pop
xlat
sub
sbb
leave
mov
pop
mov
sbb
in
pop
add
xchg
stc
orb
testl
out
cs
push
movl
add
sub
test
loop
mov
ret
dec
mov
cwtl
dec
shll
int
out
subl
cmp
push
or
in
adc
in
cld
mov
pusha
or
icebp
incl
push
cmp
ss
adc
inc
xchg
sub
out
movsb
xchg
imul
jmp
in
cmpsb
addb
insl
div
mov
and
sbb
mov
sbb
je
adc
imul
andl
dec
or
test
sub
mov
fnstsw
lcall
ljmp
cld
push
stos
outsl
mov
sub
ljmp
in
and
cmp
jno
es
mov
movsb
cmp
inc
sbb
sub
fistl
dec
inc
cld
mov
rcl
push
jns
jo
adc
xchg
scas
cwtl
pusha
lock
add
test
sahf
int
push
movsb
rcrl
notl
cli
loopne
orb
xchg
adc
inc
and
cmp
jge
sbb
jb
xchg
sub
in
sbb
mov
add
gs
rol
jb
pop
jns
jbe
xchg
das
xchg
or
iret
arpl
in
jne
movsl
js
mov
shlb
mov
xlat
xor
movsb
mov
xor
adc
push
xchg
and
inc
adc
cmp
add
dec
pop
in
movsb
jecxz
push
int3
out
fcmovne
add
cli
add
cmp
xchg
push
loop
iret
in
mov
inc
in
pop
pop
or
or
xor
adc
xchg
std
xor
sub
mov
push
mov
jmp
and
cmp
nop
movsl
mov
jne
push
xlat
lds
mov
jmp
dec
sbb
add
xlat
add
sbb
xchg
mov
cmp
and
and
cmc
or
sub
pop
and
pop
xor
mov
hlt
subb
push
sub
adc
rcrl
in
divl
cs
cmp
bound
jne
mov
mov
sbb
ret
lds
mov
xchg
inc
imul
mov
cmp
orl
int3
clc
and
xor
xchg
pushf
shrb
lods
mov
mov
das
fisttps
jno
jns
jno
xor
ljmp
in
nop
repz
lret
or
adc
loop
jbe
mov
adc
sbb
and
lods
jge
jno
test
aad
and
outsl
xchg
mov
sbb
fs
out
scas
das
idiv
xlat
adc
xchg
dec
mov
jnp
out
or
pusha
loop
jmp
insb
push
mov
or
repz
ss
inc
jmp
mov
jecxz
cmp
cmp
data16
dec
repnz
adc
or
add
pop
mov
test
sub
jns
mov
repnz
inc
dec
cmpsl
push
addr16
mov
int3
stos
or
enter
inc
jbe
leave
mov
jno
add
imul
rcrl
mov
mov
into
jae
fmull
cmpsb
mov
and
sbb
mov
scas
cli
xor
popa
or
insl
jp
push
xor
add
push
insb
scas
push
in
add
addr16
pop
and
adc
mov
loope
cltd
inc
ret
lret
insl
push
xor
clc
push
cmp
mov
push
push
xor
sbb
xor
add
xchg
sub
clc
fdivrs
xchg
ja
dec
fisubs
fnstenv
push
mov
xchg
jecxz
test
xor
and
dec
cmp
mov
inc
push
data16
adc
mov
aas
lret
dec
mov
sbb
mov
sub
cmp
mov
int3
ret
icebp
add
and
popf
cmpsb
sbb
test
gs
mov
inc
add
leave
int
repz
orl
adc
xor
pop
sub
pop
pop
or
decl
mov
push
jno
mov
mov
adc
popa
test
aam
sub
xchg
les
mov
pop
pop
push
xchg
jmp
out
xchg
push
std
and
cmp
mov
das
enter
inc
aam
xor
mov
sbb
mov
pmullw
mov
xchg
inc
stc
cmp
adc
out
adc
adc
pushf
cmpsb
or
mov
cmpsb
inc
add
add
inc
xchg
mov
sbb
push
sbb
fildll
pop
xor
mov
xchg
sbb
mov
insl
pop
roll
into
orb
mov
dec
cmp
in
push
js
aad
pop
cmp
mov
lds
movsl
pop
mov
jbe
jns
inc
pop
mov
sub
fs
xor
mov
aas
pop
xor
scas
ror
aam
aad
jne
loopne
rorb
sbb
sub
dec
ret
xor
jbe
and
daa
add
pop
cli
ss
dec
adc
dec
ljmp
cld
push
ljmp
jae
rep
das
icebp
inc
shrb
call
jae
fwait
mov
aaa
xchg
mov
jo
push
inc
in
ret
mov
push
adc
jl
loopne
ds
sbbl
sarl
cmp
pusha
mov
jno
mov
movsl
sub
push
dec
mov
dec
lods
ljmp
add
nop
aam
test
es
fiaddl
push
sbb
out
jmp
and
xlat
pop
mov
rcrb
xchg
lret
mov
mul
dec
mov
fidivl
cltd
pop
insb
push
cmp
xchg
rorl
inc
fmull
out
add
repnz
mov
xor
dec
pand
xor
ja
or
inc
sbb
ljmp
push
push
cmpb
das
clc
sbb
xor
cmp
scas
jbe
cmpb
pop
and
push
aas
je
scas
or
mov
leave
les
rclb
and
loope
or
mov
cld
mov
call
add
and
js
aad
das
push
sbb
vprotb
js
jno
cmpsb
mov
loopne
push
sti
xor
dec
xchg
adc
cmpl
lcall
insl
push
cmp
pop
sub
lcall
mov
rol
sub
rcr
mov
dec
in
adc
cltd
pop
lock
in
jle
adc
xor
mov
mov
sbb
sub
pop
mov
sbb
insl
lods
mov
adcl
popf
adc
cld
xchg
inc
fldcw
inc
mov
jae
lea
and
aas
repnz
aas
dec
sub
loopne
or
inc
or
cld
push
xchg
mov
inc
xchg
cmpsl
cmp
ret
dec
sub
shll
in
sub
jns
and
outsb
xor
mov
add
add
bound
sbb
xchg
loopne
in
cmc
bound
out
dec
adc
push
and
inc
xor
pop
xchg
repz
rclb
or
push
xchg
push
in
rcr
jns
out
mov
push
push
icebp
mov
xor
sub
pop
ja
pop
jp
sub
out
mov
sbb
cmp
sbb
xor
mov
sub
xor
dec
cmp
shlb
in
add
xchg
jns
cmp
dec
xor
jmp
add
test
loope
lods
mov
mov
mov
hlt
cs
das
movsl
out
inc
leave
and
into
lds
test
xchg
add
xor
out
and
push
and
mov
clc
pushf
incl
shrl
sbb
mov
icebp
shr
inc
les
incb
test
repnz
imul
push
push
dec
and
pop
dec
aad
fldcw
popa
ret
ds
dec
rcrl
int
mov
movsb
cmp
sbb
test
iret
outsl
icebp
sbb
xor
or
pop
xchg
mov
or
push
cmp
popf
pop
in
cld
cs
jbe
imul
pop
push
nop
or
xor
xchg
adc
lret
data16
sub
push
pop
push
mov
xlat
xor
movsb
mov
push
repz
out
notl
mov
fstpl
rol
out
mov
mov
jbe
sbb
add
test
outsb
inc
addr16
das
xor
mov
inc
push
imul
sbb
data16
mov
jg
inc
test
loope
cltd
mov
dec
fstl
inc
pushf
lret
ljmp
mov
das
xlat
fs
sahf
sbb
pop
mov
stos
in
cmc
mov
aaa
jp
jmp
sub
sub
xchg
dec
cwtl
push
push
mov
xor
inc
sbb
or
inc
cmp
xlat
pushf
add
inc
pusha
test
bnd
cmpsl
or
xchg
push
shr
add
or
add
xor
cli
pop
jns
xchg
push
cmp
xor
jmp
cs
lcall
cmp
xor
cld
imul
cli
icebp
decl
jecxz
cmpsl
lds
mov
mov
xchg
aaa
push
mov
pop
addr16
shl
fstpt
mov
fnstenv
adc
cmp
sti
mov
adc
outsl
cmp
aaa
roll
js
lea
inc
xorl
cmp
icebp
add
aam
addr16
jb
push
mov
push
cmp
rcrb
fs
cmp
mov
in
push
pop
mov
test
cmp
pop
mov
jmp
ret
xchg
loop
aaa
es
hlt
push
dec
fwait
mov
mov
pop
ret
cmp
out
mov
les
gs
das
inc
add
mov
pop
jne
xor
lods
jo
js
je
adc
xchg
lahf
int3
cmpsl
stc
fisubrs
or
inc
sbb
pop
aaa
movsl
jne
nop
xchg
dec
hlt
sub
fdivrl
rcl
lahf
aas
and
cmp
inc
and
adc
push
into
mov
or
std
mov
or
xlat
stos
hlt
cmp
rcrl
sbb
and
cmp
add
in
testl
push
test
jg
stc
imul
inc
sbb
jbe
add
sbb
jns
xchg
cs
test
decl
pop
insl
jle
pop
mov
pop
mov
loope
clc
repnz
mov
mov
movl
push
cmp
push
je
mov
mov
les
pop
pop
inc
push
xor
jmp
pushf
push
lock
pop
xchg
call
sub
hlt
lret
jmp
cmp
pusha
repnz
enter
icebp
insb
sub
fiaddl
dec
or
jno
icebp
stc
addr16
mov
movsb
ljmp
mov
pushl
mov
fcmove
outsb
mov
outsb
es
and
cmc
sbb
adc
cmp
out
into
test
jmp
dec
pop
stc
cmc
aam
xor
xor
in
in
dec
add
sub
pop
clc
jno
jne
rorl
fldt
mov
mov
push
push
jb
jb
in
push
xchg
push
mov
aam
scas
aam
jecxz
in
adc
ret
jb
and
jp
cltd
imul
fidivs
call
sbb
sti
imul
inc
pop
loopne
jle
push
lock
push
sub
lcall
add
mov
push
ljmp
and
sbb
mov
xchg
cmpl
pop
stos
xor
cmc
scas
and
rcr
jp
cwtl
and
mov
shl
cmp
sbb
cmp
dec
fsts
cmp
leave
and
adc
inc
ljmp
in
dec
in
xchg
out
movsl
dec
mov
mov
mov
loope
mov
jl
lea
stos
fildll
mov
adc
jecxz
out
mov
mov
xchg
xor
hlt
jne
popa
pop
or
mov
sbb
arpl
dec
out
sub
push
push
mov
jns
and
pop
xor
dec
fdivrs
mov
and
or
xchg
xchg
iret
mov
adc
in
fyl2x
in
adc
insl
sbb
mov
mov
jmp
sub
cmc
ret
ljmp
add
cmp
xor
sub
in
hlt
jbe
lret
add
xchg
dec
mov
xchg
ret
xchg
out
xchg
dec
int
adc
inc
or
xlat
leave
and
add
sbb
icebp
repz
add
test
sbb
sahf
mov
lret
fdivrs
aaa
scas
adc
pop
loope
xlat
subb
repz
or
fstl
inc
pop
mov
lods
cmp
fmuls
shl
adc
pop
lods
dec
pop
and
lahf
pop
mov
cmp
pushf
fsubr
jnp
lods
push
hlt
xchg
inc
mov
xchg
sahf
fstp
xchg
lods
stos
adc
sbb
mov
inc
into
daa
add
cmc
sub
jo
flds
push
cld
sti
scas
mov
lret
mov
leave
test
loopne
mov
lea
pushf
dec
mov
and
in
daa
lahf
push
in
lods
add
lret
out
push
add
movsl
xor
lds
das
cmpsl
dec
dec
xor
rcr
jmp
xor
xor
mov
xchg
cmp
jl
mov
bound
mov
xlat
mov
ds
mov
enter
loope
push
or
adc
ror
jns,pt
dec
cld
int
loop
or
sbb
adc
fs
bound
dec
cltd
and
test
aad
sti
inc
sub
sub
mov
faddp
ljmp
jne
mov
fs
into
cwtl
das
outsl
push
adc
mov
les
daa
repnz
or
sub
and
loop
ja,pt
inc
push
fprem1
mov
movl
cli
mov
lods
push
xchg
mov
test
ss
icebp
jne
outsb
dec
pop
aad
cmpsb
and
add
sti
test
fnstenv
push
enter
jge
or
lods
push
pop
sbb
icebp
outsb
dec
cs
inc
inc
add
sub
xor
sahf
aaa
lret
lcall
xchg
push
and
sub
push
cmp
cmpsb
sbb
outsb
mov
mov
lret
mov
dec
ds
push
jns
push
addr16
dec
in
push
jg
sub
push
scas
test
loopne
lods
jg
in
push
add
scas
xor
sahf
inc
mov
pop
inc
push
ljmp
cmp
cltd
jge
stos
pop
stc
and
push
xlat
test
imul
and
mov
xchg
insl
or
add
fchs
stc
adc
mov
pop
inc
sub
sub
mov
mov
cmp
mov
mov
cwtl
add
mov
js
mov
or
mov
lret
test
jnp
into
pop
xchg
mov
mov
push
hlt
ja
xor
popa
sub
stc
rcr
xchg
jbe
or
aaa
icebp
inc
or
sti
inc
dec
shrl
push
mov
loope
pop
lock
push
sbb
into
pop
mov
or
jne
int3
cmpsl
out
jnp
xor
inc
sub
loop
mov
test
int
inc
das
stos
cmp
lahf
out
push
out
test
mov
gs
mov
cmp
ret
pop
sbb
cmc
xor
pop
cwtl
xchg
mov
movsb
mov
cmc
mov
sbb
jecxz
lods
jno
pop
lret
xorb
rcrl
mov
jbe
xor
and
int
fs
out
iret
roll
or
out
cltd
jne
adc
das
out
insl
xchg
insb
push
test
pop
pop
mov
mov
mov
cmp
in
pop
adc
pop
ret
loop
sub
push
fistpl
inc
mov
lcall
scas
sbb
sbb
inc
pop
movsl
adc
jne
dec
pop
shrb
rcl
cmp
mov
data16
lea
dec
js
push
addb
das
cmp
je
sbb
sub
push
popf
cmp
xor
int
loop
xchg
mov
gs
push
push
mov
lcall
jmp
xchg
dec
cwtl
rorb
fucom
sti
cmp
inc
test
push
inc
jl
cmpsl
inc
in
lahf
repz
jmp
mov
sbb
lret
pop
les
push
push
and
mov
hlt
or
xchg
stc
cltd
jb
loopne
hlt
roll
jo
inc
or
mov
mov
and
bound
sub
xor
jle
jmp
lea
repz
mov
mov
mov
in
inc
popa
es
fmuls
sub
xchg
add
lods
or
inc
add
ret
cmp
lods
scas
f2xm1
ss
push
push
ljmp
imul
lods
or
out
pop
rcrl
jmp
fwait
aam
or
aam
iret
and
or
xor
and
loop
mov
sbb
inc
mov
sbbb
and
dec
pop
mov
jbe
pushf
int3
xchg
inc
cld
push
jle
prefetch
pusha
out
ss
js
in
push
fwait
lret
add
fldt
testl
or
int3
inc
arpl
mov
adc
inc
in
imul
subb
mov
sbb
pop
mov
data16
mov
lock
leave
shrb
mov
ss
ja
jne
mov
jae
sarl
mov
and
shr
inc
and
mov
sbb
inc
hlt
or
xchg
into
fs
jmp
xchg
bound
sub
mov
fmuls
push
lahf
inc
rol
sarl
out
loope
test
fucom
movsl
push
push
inc
mov
in
outsl
nop
pop
pop
in
shr
ljmp
adc
adc
aam
inc
test
sub
adc
lret
insl
in
fsubr
xchg
fisubrl
shlb
add
lcall
mov
testl
mov
dec
inc
ja
popa
jb
mov
pop
lock
adc
pmuludq
sbbb
mov
push
aad
test
test
insb
mov
jbe
lahf
lcall
shlb
sub
imul
xchg
mov
in
ret
inc
push
frstor
and
or
dec
or
sub
cmp
jg
loope
pop
ja
jg
jne
and
xor
jno
dec
adc
inc
nop
and
xchg
js
jb
push
andl
mov
iret
sarb
inc
or
mov
mov
hlt
cld
jge
inc
inc
jecxz
ret
inc
push
dec
shll
xchg
dec
sahf
ret
scas
sub
xchg
int3
ret
stos
mov
int
test
dec
je
not
sti
push
mov
andb
push
jbe
lock
movsl
cld
mov
adc
loopne
rol
loop
stos
cwtl
or
push
pop
pop
rorl
xor
and
and
jno
cli
popf
shl
pusha
push
cmpsb
mov
cmp
lret
jmp
ss
pop
cli
mov
jno
xor
xchg
mov
cmc
rolb
lock
lds
and
cltd
aaa
sbb
inc
jmp
xor
xchg
inc
mov
add
jle
cmp
xchg
xchg
mov
cmp
sbb
negb
mov
jae
out
adc
mov
ljmp
sbb
dec
insb
push
jbe
mov
or
xchg
pop
ss
mov
loope
xchg
or
dec
or
inc
iret
pop
sub
ret
pop
pop
pop
ljmp
addr16
and
pop
pop
add
stos
cli
adc
gs
insb
push
sbb
mov
cmc
inc
pop
or
pop
dec
sub
ja
xor
push
sarl
lock
mov
int
inc
incl
leave
imul
test
add
cmp
pop
xchg
into
stos
stos
xchg
notb
lret
add
mov
leave
xor
xchg
push
xchg
ret
fdivs
repnz
push
inc
xchg
fcmovbe
call
jbe
push
repnz
fldcw
xor
insl
in
in
lret
imul
inc
sub
mov
scas
hlt
mov
mov
mov
inc
loope
dec
mov
push
xchg
push
mov
jb
sbb
dec
gs
cs
mov
shl
mov
or
ficoms
push
or
scas
fmul
and
lret
ja
dec
subl
call
imul
std
cmpl
add
sbb
out
xor
and
push
sub
inc
enter
iret
arpl
mov
mov
sbb
push
mov
ret
mov
and
inc
push
dec
nop
sbb
xchg
out
or
inc
rcl
scas
add
mov
inc
out
pop
pop
jbe
sbb
pop
les
and
fidivrs
enter
jno
out
push
hlt
std
test
sbbb
or
mov
cld
lods
addr16
fs
xchg
in
fwait
dec
fnstcw
test
xchg
jmp
test
loopne
lcall
in
pop
aaa
mov
outsl
in
repz
dec
hlt
jecxz
test
lret
xor
dec
ds
cwtl
jp
outsb
addr16
insl
leave
add
in
xchg
xor
idivb
hlt
in
mov
push
add
clc
pop
add
repz
imul
test
je
insl
xor
add
jb
mov
or
jge
jae
pop
movsl
scas
mov
mov
jge
dec
pop
shrl
push
sbbl
dec
mov
jge
dec
or
mov
popf
shrl
int
dec
jecxz
leave
adc
push
jae
push
and
test
rol
xlat
inc
sbb
mov
adc
mov
cmp
call
jns
je
mov
sub
adc
daa
or
dec
jge
into
shr
cltd
call
ja
sarb
std
jo
js
pusha
cmc
xorb
rcrb
adc
push
sub
jne
dec
out
adc
xor
cmpsl
test
fucomi
sub
daa
add
xchg
cli
cmc
xor
mov
mov
icebp
imulb
andb
negw
adc
cmpsl
push
and
inc
push
inc
inc
inc
shll
or
icebp
inc
mov
push
rcrl
mov
test
and
and
negl
xor
lret
sub
es
jp
add
in
pushf
cmc
xchg
test
rcrb
jns
mov
xor
js
adc
inc
sti
xchg
pop
aad
leave
imulb
mov
mov
jns
int
mov
sub
and
stc
rorb
sub
pushf
add
stos
fwait
addl
shll
mov
out
inc
bnd
sbb
add
cli
adc
adcl
jl
insb
inc
je
push
fisubl
inc
cmp
iret
jmp
pop
lds
xor
add
jmp
push
inc
pop
hlt
movsl
jle
or
ja
push
fcomps
sbb
lahf
cmp
add
push
cmp
mov
stos
test
sahf
lcall
rclb
cmp
mov
lcall
lods
add
pushf
pop
fstps
and
gs
clc
stc
scas
pop
cmpsl
jnp
outsl
jae
psubd
lock
jle
push
jecxz
in
arpl
ljmp
mov
int3
push
popa
fwait
mov
stc
addl
cmp
jbe
mov
ret
push
mov
xor
pusha
mov
div
jno
mov
xlat
fwait
loopne
sbb
pushf
shrb
fists
ficoms
jle
insb
mov
jge
and
shl
imul
or
and
cmpsl
insb
js
fwait
mov
sarb
dec
icebp
pop
fs
mulb
xchg
std
sub
in
push
xchg
jmp
and
aam
inc
movsb
adc
xchg
push
ret
out
das
sti
pop
push
inc
imul
dec
pop
mov
jbe
in
movsl
nop
addr16
out
push
ret
fs
sbb
mov
lods
rol
and
xchg
cmp
jl
sub
push
icebp
in
inc
mov
xor
jl
cmp
outsl
fistl
lret
lret
sub
mov
xchg
lds
jg
pop
dec
adc
sub
push
pop
xor
pop
push
sub
mov
xchg
xlat
jge
mov
mov
addr16
leave
mov
es
insb
jne
inc
inc
sbb
ret
pop
addb
dec
or
add
jge
arpl
lds
out
pop
into
stc
call
push
clc
mov
mov
lods
lods
sub
scas
cmp
das
mov
lea
clc
jmp
ljmp
addr16
icebp
stos
mov
push
mov
mov
loop
mov
fstpt
in
int
aad
fcmovnu
mov
mov
in
leave
adc
cmp
fwait
and
mov
test
or
addr16
aaa
and
or
aam
dec
scas
jl
idivl
ss
je
dec
jae
les
je
sub
jns
pop
cs
mov
pusha
insb
in
mov
cmp
push
jnp
in
dec
ret
jmp
lcall
bound
gs
adc
dec
xor
push
push
fidivrl
ret
shl
jbe
push
ret
popa
clc
jp
insl
xchg
pop
pop
nop
aam
adc
sbbb
cs
test
fsubrp
xchg
jb
nop
pushl
enter
jae
pop
push
sbb
data16
negb
mov
mov
jno
cmp
cmpsb
mov
dec
or
test
outsb
or
or
jbe
cmpsb
mov
stos
outsb
or
mov
xchg
dec
nop
call
dec
push
jp
fistpl
in
xchg
sbb
mov
cmp
xor
pop
inc
dec
jnp
push
jb
sub
ret
mov
push
pop
aaa
inc
push
xor
push
popf
dec
rclb
aaa
jbe
pop
jg
cmp
mov
mov
xchg
mov
fsubrp
dec
dec
inc
repnz
jmp
call
mov
and
cmpsl
inc
xor
cmc
jge
imul
testl
call
aam
mov
adc
ja
cmp
jp
dec
popf
jns
push
jmp
fcmovne
sub
xchg
test
or
in
lods
cmp
in
lea
push
pop
inc
pop
shlb
and
pop
mov
fwait
popf
mov
add
or
jle
movsb
lret
aas
mov
push
insb
sub
push
or
jo
ss
outsl
repnz
scas
pop
xchg
mov
mov
pop
jno
fistpll
dec
jae
or
dec
loop
in
scas
mov
jecxz
leave
iret
leave
adc
add
loop
mov
pusha
mov
mov
mov
pop
sub
sub
ror
pusha
pop
xor
or
popf
add
mov
test
call
inc
sbb
and
lds
or
push
cmp
add
xor
and
xor
out
out
ror
mov
ds
in
lret
add
es
sub
inc
push
mov
push
idivl
push
adc
in
rcrl
adc
dec
roll
testb
and
inc
or
mov
inc
cmp
mov
and
xchg
mov
jnp
test
gs
jmp
es
inc
icebp
inc
test
mov
pop
and
cmc
repz
mov
sub
xor
mov
mov
mov
cwtl
pushf
mov
sbb
jge
or
add
in
dec
jg
push
std
mov
fs
nop
add
cmpsl
shlb
shrb
jnp
pop
lds
pop
jo
pop
mov
ss
sti
arpl
mov
lods
out
mul
xchg
addr16
pop
or
inc
fwait
push
push
mov
dec
aaa
xchg
movsl
repnz
pop
cmp
fs
or
shlb
bound
mov
mov
cmp
ret
ficompl
lods
aas
andl
lcall
movsl
jne
mov
push
mov
mov
jle,pn
inc
sbb
xor
movsl
mov
xor
les
gs
jns
stos
cwtl
adc
and
push
fldcw
mov
scas
and
stos
push
bound
fldt
mov
in
roll
or
adc
mov
pop
inc
jl
xor
das
xchg
mov
in
mov
stc
xchg
lock
mov
test
insl
aad
movsb
pop
or
les
nop
idiv
inc
jp
shr
pop
push
and
rorb
mov
adc
fisttps
push
or
dec
aad
fisttpll
adcl
repz
enter
sahf
mov
pushf
xor
xchg
andl
or
sbbb
jo
jmp
and
jmp
int
roll
stc
mov
sti
mov
rorb
mov
inc
sbb
call
sub
xchg
mov
xchg
xor
in
inc
lock
imul
insl
popa
add
fucomp
mov
shrl
outsl
jmp
fsubrl
jns
aaa
push
add
lds
jp
add
adc
add
pop
sub
pop
inc
xchg
mov
out
into
pop
push
movsl
pop
dec
push
fldl
xor
mov
loop
cmp
pop
outsb
add
adc
mov
push
cmc
mov
jnp
push
lret
cmp
xor
adcl
and
xchg
fisubl
jae
out
mov
repz
call
int3
pop
nopl
pop
jg
into
xchg
inc
mov
cmpsb
jne
aad
sub
or
dec
mov
mov
jl
sbb
shrl
and
mov
cwtl
cmp
testl
add
adc
pop
mov
lret
pop
fldenv
fidivs
out
dec
jo
dec
fisubl
inc
sahf
mov
jb
es
rcl
cmp
pusha
insl
in
sbb
xchg
nop
xchg
fstpt
inc
and
jb
aad
fadd
xchg
aaa
fwait
push
idivl
jl
int
add
test
pop
cli
imul
mov
inc
inc
movsb
sub
imull
lret
jge
sub
mov
test
addr16
jns
mov
pop
mov
cmp
cs
ds
movsb
subb
mov
adc
jno
or
mov
adc
xor
lret
insl
xor
cmpsb
mov
pusha
mov
xor
pop
dec
lret
ficoms
inc
mul
add
aad
stos
out
jns
mov
sub
rsqrtps
jno
jmp
pop
scas
or
jns
sbb
insb
sub
pop
add
adc
fdivs
mov
and
std
lcall
and
pop
movsl
sbb
push
das
cmpsb
xor
push
in
fwait
jl
xchg
xchg
test
xchg
push
mov
fdivrs
pusha
ss
jnp
imul
fs
iret
movsb
je
stos
inc
ret
sub
idivb
adc
jns
jbe
pop
dec
loopne
mov
sbb
pusha
pop
fbld
mov
js
fincstp
fistl
push
mov
ljmp
sti
mov
xor
pop
fistl
cwtl
arpl
test
cld
or
xchg
fwait
inc
jge
sahf
add
rclb
and
mov
data16
mov
fisubl
mov
out
scas
sbbl
lods
es
add
sub
cmp
inc
xchg
mov
mov
xor
nop
mov
cmp
stc
mov
cwtl
test
jbe
dec
xchg
jp
fcoms
pop
cld
push
rolb
add
jns
sub
xor
adc
jle
pusha
inc
test
ss
mov
sbb
xchg
add
pusha
in
inc
jns
fcmovnb
jbe
xor
cmp
jp
inc
das
add
ljmp
xor
dec
fs
mov
jns
jae
mov
xor
and
pop
stos
add
in
shlb
icebp
mov
imul
test
dec
inc
les
and
xorb
pop
pushf
aad
outsb
mov
mov
mov
sub
or
int3
mov
push
xor
xchg
xorb
adc
jl
popf
jp
sbb
lret
loope
dec
loop
aam
fisttpl
dec
or
incb
jmp
pop
and
sti
push
dec
or
ds
mov
call
add
mov
inc
xor
fwait
jp
mov
mov
fs
pop
jle
sbb
lds
test
pop
add
add
and
stc
cli
inc
stos
gs
pop
movsl
mov
pop
jle
or
cmpsl
inc
xor
sbb
xchg
sbb
mov
mov
je
repz
xlat
mov
arpl
stc
shrb
les
call
ljmp
cmp
psrlq
push
clc
jo
xchg
push
and
xchg
and
pop
outsl
inc
xor
sbb
xchg
push
mov
pop
sbb
sahf
sbb
inc
clc
js
stos
fcmovne
add
cld
sti
mov
ss
movsl
mov
lods
loopne
ss
push
inc
pusha
add
paddusb
add
test
xor
sub
or
nop
clc
xchg
pop
sarb
jmp
cmp
mov
mov
cmp
clc
fs
enter
inc
mov
inc
pop
jecxz
lahf
es
fnstenv
aaa
rcrb
inc
sub
xchg
cmpsb
or
and
pop
push
jge
movsb
xor
push
and
xor
jle
mov
repz
or
iret
scas
sbb
cmp
dec
sub
aas
shr
or
cltd
inc
push
dec
stc
out
pop
xchg
push
pop
into
les
insl
jmp
imul
or
push
xor
movsb
addr16
dec
fwait
cli
xor
es
je
push
setg
push
push
fsubrl
cs
dec
mov
cltd
cmpsl
sbb
cmp
in
loop
fsubrs
mov
in
mov
in
lret
or
test
inc
mov
ret
sti
mov
insl
adcb
xor
and
mov
lods
jb
out
jg
and
or
rcl
das
imul
dec
mov
popf
sub
or
cld
mov
pop
test
shrb
jns
lcall
in
inc
mov
pop
mov
adc
adcb
cs
in
std
pop
jbe
pop
xlat
xor
push
imul
xchg
fmuls
or
sub
mov
lret
mov
jae
add
fadd
ficompl
out
and
iret
sub
mov
add
push
in
int3
sbbb
sbb
mov
sub
les
out
jle
inc
and
pop
sti
adc
dec
mov
andb
pop
jl
cltd
cmp
cmp
daa
cld
inc
sar
mov
xor
inc
mov
loope
add
sbb
pop
mov
jp
sbb
inc
lds
cmp
jnp
push
mov
push
push
scas
mov
sarb
nop
ret
into
xchg
cmpl
inc
add
fwait
out
push
scas
or
pop
scas
dec
mov
mov
push
jg
outsb
out
loop
adc
not
sahf
sub
mov
push
xlat
imul
cmp
cmp
mov
dec
mov
mov
xlat
xchg
loopne
add
sub
push
sarl
cwtl
out
jbe
cmp
and
sub
movsb
inc
adc
pop
outsb
xor
dec
filds
jb
mov
outsl
push
int3
cmp
jnp
mov
insb
scas
pop
adc
or
or
dec
flds
sub
loop
daa
pushf
arpl
cmpsl
repnz
sbb
fadd
push
outsb
xor
in
movsb
in
nop
daa
jmp
xor
das
lcall
les
dec
jp
adc
lcall
ret
data16
push
pop
mov
popa
stc
lods
leave
jmp
insl
mov
ret
cltd
dec
xchg
fisttpll
aam
jns
aas
test
pushf
sub
fidivrl
es
xchg
dec
mov
rolb
push
sbb
inc
orl
fbstp
add
test
sbb
rcll
pop
pop
lahf
pop
inc
in
pop
xchg
adc
sarb
jno
mov
ds
inc
pop
jl,pn
jmp
and
cmc
jg
ret
filds
dec
data16
dec
sahf
inc
mov
dec
dec
test
mov
push
lock
fwait
add
adc
sbb
xchg
inc
pop
sub
jo
pop
mov
lret
jp
add
xchg
ret
or
call
scas
cmpsl
ljmp
mov
in
mov
sub
test
and
adc
arpl
mov
sub
xchg
and
adc
mov
fimuls
sbb
hlt
jmp
pop
inc
pop
and
shl
cmp
xor
mov
cwtl
mov
es
mov
outsl
inc
xchg
cmp
xchg
push
lock
fwait
rorl
fmuls
mov
add
pushf
pop
dec
lea
mov
int
test
stos
fldlg2
imul
xchg
mov
fidivl
mov
mov
mov
enter
xchg
iret
dec
cmpsb
cmpsl
mov
sbb
ja
jae
hlt
dec
imul
and
adc
mov
jp
dec
mov
or
mov
add
adc
mov
lock
pop
and
sub
pop
arpl
dec
scas
inc
mov
sub
jbe
movsb
into
fcoml
fwait
testb
mov
cmpsl
sub
dec
mov
loope
js
mov
outsb
clc
mov
xor
lds
xchg
lret
mov
inc
add
mov
inc
adc
int
ret
dec
lods
iret
dec
inc
dec
jle
clc
addr16
push
pop
out
push
inc
dec
or
cmp
ljmp
and
sbb
xchg
popf
ret
dec
sbb
sbb
sbb
cmp
rcrl
movsb
push
sbb
ret
cmpsl
sub
adc
sti
stc
mov
test
jmp
pushf
mov
je
mov
push
and
xchg
fneni(8087
and
insl
pop
and
mov
sub
jmp
cs
ret
cmpsb
test
lea
gs
test
lahf
mov
je
mov
sub
mov
test
jp
test
movsb
mov
pop
inc
sub
and
pop
xchg
xor
cmp
ret
cmp
sbbb
out
or
in
mov
sbb
call
mov
xorb
test
add
test
ret
cmp
test
xchg
push
jno
pop
lea
cld
mov
arpl
mov
push
lods
mov
nop
fstpt
adc
inc
xchg
ret
adc
mov
pusha
inc
sbb
fdivrl
xchg
lea
xor
add
sahf
push
sbb
jmp
mul
js
xchg
aad
lods
cs
rorl
jo
cltd
rcrb
jmp
dec
outsl
xchg
sbb
pop
mov
jle
ficomps
mov
fsubrl
stc
xchg
daa
cmc
cmp
sbb
shrl
pusha
or
outsl
add
je
cmp
fldl
rcll
mov
movsb
shlb
cmc
or
inc
movsb
sahf
cmp
popf
sub
inc
shll
fisttpll
test
insb
stos
ss
xchg
sbb
pushf
adc
sub
jno
or
cmp
or
and
inc
xor
mov
sub
iret
std
jl
addr16
jbe
and
lea
pop
daa
inc
push
mov
pop
add
outsb
add
inc
push
pop
sbb
movsb
and
xor
lods
lahf
faddl
popf
dec
or
sbb
and
in
subl
push
fisubrl
push
jo
loop
adc
xor
xor
sbb
mov
lods
call
xchg
mov
cmp
aam
loope
jp
mov
xchg
out
rolb
inc
fldl
adcl
xchg
stc
ret
mov
mov
pop
lods
bound
dec
jno
xor
ret
add
mov
jge
lcall
sbb
or
lods
and
and
xchg
addl
aas
out
xor
imul
in
lock
unpcklps
je
out
push
xor
ss
sub
dec
mov
imul
add
nop
aad
insl
popa
stc
xchg
sub
sub
sbb
push
add
push
push
ljmp
enter
inc
xor
lea
stos
rolb
out
inc
ja
pop
popf
adc
sub
sub
lods
lahf
sub
mov
xchg
stc
adc
out
movsl
pop
fidivrs
subb
xor
xor
mov
aaa
movsb
push
cmp
jno
imul
and
out
fmull
add
and
in
cli
loope
mov
mov
sbb
mov
jmp
push
xchg
bndstx
cmp
sti
fcomip
nop
dec
mov
lds
fmull
add
clc
and
dec
mov
xchg
sub
mov
push
cmp
mov
lods
pop
adc
inc
pop
xor
ja
sbb
push
add
in
adc
rcrl
fwait
imul
loopne
cmp
cmp
dec
mov
or
in
inc
loopne
xor
lret
orl
pop
cli
mov
lret
int3
nop
sub
leave
sub
push
mov
insb
sbb
cmp
fcompl
pop
insl
addl
and
pop
xchg
push
push
aaa
adc
sbb
xorb
ret
xchg
jmp
inc
adc
mov
push
xchg
test
push
cltd
inc
lahf
rcll
outsl
int3
add
pop
add
ljmp
lcall
and
ret
repnz
inc
pusha
sti
push
and
call
ljmp
popa
cmp
addr16
ror
sub
mov
add
jle
lods
mov
scas
cli
jb
mov
cmpsb
in
xchg
adc
rcr
or
jae
dec
js
sub
lock
syscall
lahf
je
xchg
jmp
pusha
cmpsb
xor
xchg
sub
cltd
arpl
cmp
mov
cli
in
jno
mov
das
popa
xor
jne
mov
mov
xor
aaa
or
lret
insb
mov
jge
mov
imul
aas
and
inc
ret
sub
push
bswap
push
scas
sub
jp
pop
and
repz
icebp
in
lea
mov
adc
sbb
daa
add
lret
adc
jb
xor
mov
int3
jbe
sub
movd
mov
xor
or
pop
enter
sub
or
mov
sbb
mov
mov
scas
dec
lea
xchg
xchg
xchg
call
clc
lods
sbbl
push
adc
bound
or
js
mov
scas
push
sbb
or
push
addr16
sahf
cmp
mov
cmpsb
je
mov
xor
lea
push
or
cmp
jg
out
dec
repz
jno
xchg
in
jle
push
insb
mov
cmp
mov
leave
insl
sbb
jnp
mov
pop
call
pop
mov
sbb
adc
xlat
div
or
sti
fs
xchg
lret
pop
subl
push
in
pop
xor
cmp
icebp
hlt
pxor
cs
mov
sbb
mov
daa
int
push
iret
xor
jb
ret
jb
arpl
or
mov
ljmp
das
xchg
cmp
stos
inc
sbb
mov
mov
xor
dec
sub
mov
leave
leave
movsb
dec
movsb
cmp
cmp
mov
xor
cmpsb
pop
push
mov
mov
cld
repz
cmc
pop
mov
xor
mov
pop
movsb
xor
cmpsl
jno
pop
adc
mov
add
xchg
fiaddl
cwtl
or
adc
aad
cmpsb
mov
inc
decb
les
stos
push
sahf
lret
jp
data16
jo
inc
cmpsl
aas
inc
dec
loope
xor
fnstcw
xor
leave
push
mov
push
mov
push
jo
add
pop
jle
hlt
push
into
pop
and
imul
mov
mov
bound
insb
pop
pop
es
fidivrs
add
lret
shr
daa
test
repnz
jmp
sub
sbb
cmp
orb
loopne
inc
and
pop
lds
in
loopne
es
lock
adc
xor
cmp
ss
mov
mov
or
pusha
std
mov
add
clc
enter
icebp
movsl
out
jg
xor
jo
mov
xchg
frstor
push
add
sbb
mov
out
pop
push
lret
fidivrl
clc
jmp
inc
jne
nop
mov
test
dec
mov
lods
aas
jbe
jge
in
into
jmp
icebp
pusha
loopne
sub
clc
into
stos
jle
or
push
lahf
cmc
pop
jbe
shl
push
test
insl
mov
repnz
or
push
mov
cltd
sbb
jae
push
sbb
lret
sahf
lods
sub
mov
sub
pop
sbb
add
sub
jb
loopne
es
lret
arpl
xchg
aaa
pop
ds
inc
inc
aad
cmp
cltd
inc
insb
cmp
repz
or
cmc
mov
mov
icebp
sbb
jbe
jb
pop
jge
stos
pop
xchg
fidivrl
dec
push
xchg
cmpsl
hlt
imul
adc
fwait
mov
and
mov
jnp
cmp
mov
mov
mov
dec
std
inc
xor
out
iret
sbb
dec
ss
test
add
adc
inc
cmpsl
and
arpl
fldl
push
imul
sbb
jmp
dec
shl
mov
push
pop
fidivl
popa
popf
mov
fldt
adc
mov
and
push
cmpsb
xchg
inc
or
cmpsl
dec
push
outsl
mov
jnp
lods
aad
call
or
int3
mov
push
and
cmp
enter
arpl
out
and
imulb
or
cmp
dec
stc
sbb
das
out
test
mov
addps
cmp
jecxz
shrl
test
mov
cmpsl
mov
test
stos
sub
divl
adc
dec
push
adc
shll
sbb
xorl
ret
jb
scas
mov
shlb
sbbb
lret
cmpsl
mov
and
lret
adc
add
sbb
rcl
lods
imul
mov
inc
dec
push
movsl
test
cli
jne
aaa
dec
int3
add
mov
fdiv
pop
or
outsl
push
into
int
cmp
movsb
cmpsb
mov
mov
add
dec
and
push
scas
cmp
into
jge
nop
xchg
or
ret
xor
xor
inc
mov
sub
dec
mov
xchg
dec
and
xchg
test
into
xchg
arpl
cltd
mov
pop
push
mov
or
xlat
rcrb
mov
pop
mov
jo
lock
sbb
sbb
jle
push
push
pop
adc
out
pop
leave
ret
out
stc
repnz
addr16
es
cmp
sub
push
and
pop
ss
cltd
std
inc
stos
xor
push
dec
pusha
push
sub
fs
add
stos
xchg
push
lret
xor
in
and
push
into
lret
cmpsb
and
mov
lret
adc
pop
jp
mov
andl
ljmp
jno
cmc
add
call
push
clc
mov
dec
mov
out
outsb
js
popa
in
aam
xchg
cs
push
std
adc
xchg
arpl
pop
popa
ss
lods
loop
pop
imul
adcl
adc
cs
xchg
lock
push
or
sbb
jle
fdivs
out
iret
pop
or
and
out
addr16
jg
imul
mov
loope
leave
movsb
push
mov
jb
jnp
rolb
inc
fldl
add
jo
loopne
mov
cmp
sbb
mov
rcll
je
in
jae
test
sbbb
mov
mov
bound
ret
mov
mov
or
pop
pusha
in
into
adc
dec
daa
mov
in
push
mov
pop
pop
add
mov
imul
ret
subps
jg
adc
mov
imul
dec
cmp
movsl
xchg
cmp
int
dec
iret
cmp
mov
daa
mov
aas
and
test
xchg
xor
es
inc
jl
inc
sbb
jl
jns
mov
push
and
cmp
sub
push
ljmp
sub
flds
pmuludq
sarl
mov
insl
stc
xchg
mov
mov
sahf
mov
cs
or
lods
test
add
shll
sbb
test
cmp
dec
xchg
jno
or
out
inc
add
scas
sbb
jno
fstps
lret
out
insb
push
in
add
mov
ss
add
mov
jne
insb
inc
out
inc
gs
fwait
dec
pop
std
fsts
mov
loopne
sub
mov
movsl
jecxz
mov
mov
int3
and
inc
cld
sub
or
cmp
pop
mov
cmc
and
cmpsb
daa
inc
sub
inc
mov
xor
xlat
lret
or
iret
and
inc
ljmp
push
lods
and
int3
xchg
and
leave
out
clc
cmp
cmp
fdivl
das
and
pusha
cmp
not
dec
notl
cmpb
mov
add
leave
aaa
fwait
add
push
es
scas
mov
push
call
mov
pop
xor
lahf
cwtl
flds
xchg
pop
pop
push
pop
mov
pop
mov
ljmp
mov
dec
jb
cli
pop
data16
or
outsb
jecxz
adc
xchg
and
adc
dec
imul
add
paddw
add
cld
test
xlat
and
insl
mov
aam
and
imul
scas
cmpsb
xor
bound
mov
sbb
or
mov
inc
dec
mov
mov
fadds
jecxz
pop
add
sub
pop
in
sbb
add
or
jp
ss
cmp
popf
lods
jae
xor
push
rcll
shll
imulb
scas
pop
sar
into
mov
shlb
mov
idivl
adc
inc
lods
sbb
pop
xlat
and
xlat
jle
pop
cmp
or
xlat
dec
xchg
jle
repnz
lds
lret
leave
lahf
mov
scas
mov
aaa
add
mov
je
test
inc
sahf
fwait
jle
cli
adc
iret
xchg
cmpsb
cmp
sti
pop
mov
dec
pop
test
adc
fdiv
leave
cmpsl
in
fcoml
jle
sub
pop
or
popa
lods
sub
stos
lock
lods
dec
inc
fisttpll
add
lcall
and
xchg
scas
mov
rolb
out
fldcw
out
scas
out
cwtl
dec
sub
add
cltd
add
push
mov
xor
add
push
sub
inc
inc
cwtl
fildll
and
jp
xchg
loopne
aad
ret
and
lods
inc
jno
xor
push
outsb
mov
daa
lret
test
gs
adc
cli
pop
into
into
or
and
nop
cmpsb
or
push
mov
stos
std
leave
das
test
and
insl
fldcw
negl
jecxz
dec
push
adc
push
or
mov
or
xchg
pushf
cld
int3
shrl
fxch
pop
es
imul
call
inc
outsl
loopne
mov
ss
and
adcb
fwait
mov
and
and
test
mov
rcl
fistpl
lds
sbb
nop
shll
movsb
dec
jns
int3
into
in
ljmp
jp
pop
rcll
xchg
mov
std
jns
push
shll
mov
mov
xor
mov
pop
stos
dec
aad
je
push
imul
push
int3
lods
mov
xchg
jle
add
mov
icebp
and
insb
push
mov
jae
mov
rcll
xor
dec
aam
nop
mov
cld
and
sub
scas
or
int
in
pusha
arpl
cmp
or
repz
or
into
scas
int
dec
jne
sbb
pop
and
lea
inc
mov
push
mov
inc
lods
cmpsb
int
dec
mov
mov
cmc
sub
mov
in
out
mov
mov
mov
jp
repz
cmpsl
das
xlat
xchg
je
cmp
jne
bound
subl
cs
push
cmp
in
cmp
and
subl
sahf
data16
leave
loop
jle
mov
push
sub
imul
imul
sub
andb
test
cmp
dec
and
fwait
xorl
je
add
clc
cmpsl
stc
es
loope
dec
cmp
in
pusha
stc
ret
into
or
push
and
pop
scas
scas
add
lcall
dec
mov
mov
aad
scas
dec
inc
iret
daa
shl
hlt
lds
inc
mov
lock
inc
push
mov
pop
lds
pusha
movsl
loope
jmp
jecxz
ds
fs
add
mov
mov
jmp
cmpsl
inc
repz
lret
aam
das
push
lock
adc
adc
xor
adc
push
xor
in
in
ja
sub
cmp
pop
iret
lods
push
cmpl
pop
sub
cld
jb
adc
mov
rclb
ret
test
lahf
adc
xor
sarl
and
add
jo
cld
iret
ret
insl
out
int3
jb
js
scas
xchg
pusha
mov
repnz
inc
subb
rol
ljmp
xchg
add
mov
test
xchg
xlat
sbb
iret
clc
mov
push
xchg
ret
and
inc
stos
xchg
ret
sbb
cltd
mov
movsl
adc
xor
or
sub
mov
xchg
pushf
iret
xor
dec
jae
jg
pusha
adc
pop
push
sub
xchg
adc
and
aad
and
dec
outsl
das
insl
loopne
jge
pop
int3
fdivrs
out
xor
int3
push
cmp
add
lods
push
jae
push
clc
test
jecxz
xchg
pop
pop
test
xchg
sbb
or
cli
sub
xchg
pop
mov
xchg
push
cmc
xchg
xchg
nop
std
pop
imul
dec
imull
push
in
jno
adc
jecxz
sbb
shrl
mov
les
mov
fsub
xor
ljmp
adc
notl
lods
test
fldl
pop
mov
jnp
dec
add
in
or
sbb
or
jmp
or
lods
mov
cld
inc
mov
dec
cs
leave
push
fs
mov
mov
add
hlt
mulb
call
je
mov
cmpsl
imul
inc
push
test
dec
out
je
ja
addr16
push
cwtl
movsb
imull
mov
mov
das
xlat
pushf
out
sub
push
imul
lds
inc
xchg
aam
pop
stc
xchg
xor
xchg
in
push
orl
daa
fs
shl
mov
mov
psraw
int3
mov
sbb
iret
nop
cmc
in
sbb
jmp
jmp
daa
jo
movsl
orb
cmpsl
mov
jbe
out
xor
fstl
cs
inc
fdivl
scas
stos
iret
rcr
jbe
xchg
mov
js
dec
mov
stos
mov
jge
inc
fsts
inc
rolb
mov
or
lock
dec
shrl
and
stc
imul
dec
xchg
jns
cmp
mov
and
mov
gs
sbb
enter
mov
bound
nop
pop
or
pop
aas
push
jne
fildll
sbbb
fnstsw
inc
push
and
testl
push
adcl
iret
xchg
push
adc
shl
push
jno
sbb
ss
ja
xchg
mov
cmc
jl
repz
imul
mov
inc
dec
test
dec
das
int3
dec
dec
dec
xchg
inc
cmp
loopne
mov
dec
add
push
mov
jb
js
fwait
sbb
leave
push
push
mov
mov
repz
and
scas
xchg
mov
mov
push
ljmp
mov
jns
out
cwtl
test
adc
aam
in
jo
stc
icebp
iret
repnz
jns
jg
das
mov
mov
pop
jp
fs
push
fistl
jb
shll
aad
testl
loopne
push
jge
fsts
lret
xor
sbb
sbb
fs
shlb
rcrl
jg
fsubrl
mov
test
stos
iret
popf
or
sti
in
test
push
pop
mov
push
xchg
sub
in
out
xchg
push
mov
int3
push
mov
mov
es
dec
jmp
adc
pop
adc
push
pop
mov
jnp
add
out
push
adc
fsubl
sti
and
lock
pop
aad
out
cld
sub
sub
out
repz
mov
sub
sbb
add
popf
lret
ret
insb
cli
xor
jno
mov
pop
mov
cwtl
sub
rorl
mov
add
lahf
in
mov
mov
xor
mov
inc
pop
xor
out
sub
sub
mov
push
push
push
in
or
aaa
inc
pushf
loopne
jb
sbb
pop
xor
push
les
das
das
les
hlt
add
pop
fmuls
fisttps
mov
in
sbbl
dec
adc
shll
push
dec
mov
cmp
cmp
andl
repz
cmpsl
in
jnp
ja
mov
ds
sbb
pop
adc
jo
mov
mov
lcall
ror
push
je
and
int3
lea
sete
mov
add
or
not
push
xlat
out
sbb
lret
mov
and
push
stc
fsub
dec
test
fidivrl
pusha
sbb
adc
inc
and
nop
inc
sti
dec
jecxz
sbb
std
filds
mov
sub
fwait
pop
rorb
movsl
inc
rol
bound
dec
mov
in
fdivs
sbb
mov
jg
dec
mov
mov
adc
push
fldenv
mov
idivl
pushf
movsl
ficoml
aas
rorb
sub
cmp
push
shlb
mov
movsb
shll
add
sahf
stos
ret
and
xchg
dec
push
loopne
scas
adc
rcrb
out
push
cld
jo
or
mov
insb
ss
dec
push
add
test
dec
lret
out
and
mov
dec
inc
jae
dec
aad
xchg
ljmp
test
js
loope
cmp
push
les
aas
xchg
pop
stc
jno
mov
mov
repnz
mov
sbb
sahf
push
xor
mov
das
negl
jbe
xchg
or
mov
sahf
mov
or
pop
ret
inc
fisubs
lcall
jle,pn
sbb
xor
cmpsl
outsb
or
xchg
xor
xchg
pop
je
push
adc
ja
rclb
dec
xor
push
clc
ja
ret
sub
jne
and
pop
mov
hlt
dec
jns
scas
lahf
lods
sbb
pop
loopne
subb
mov
out
xchg
xchg
mov
out
xchg
and
jno
movsb
mov
jns
inc
fs
rolb
xchg
addl
xlat
push
dec
cmp
scas
mov
jae
ret
add
pushf
pop
fs
or
dec
scas
scas
pop
out
mov
pop
test
inc
inc
cmc
arpl
out
mov
cmp
sub
movsl
roll
bound
test
mov
inc
mov
dec
and
adc
jo
movsb
mov
cltd
rclb
add
mov
or
out
loop
xor
mov
and
cmp
lock
push
and
sub
enter
cmp
in
push
xor
outsl
add
inc
mov
inc
cmp
sbb
xchg
shr
mov
ret
fdivs
ret
pop
jns
fs
js
inc
jae
cli
loope
hlt
xor
aam
es
and
xchg
test
test
xchg
pop
xchg
ss
mov
jge
adc
dec
add
mov
test
sbb
mov
mov
dec
movl
inc
lahf
jmp
test
or
out
nop
mov
int3
cs
or
mov
sahf
and
jmp
jns
es
sbbb
push
and
jns
xchg
mov
pop
mov
xor
scas
pop
xchg
and
sbb
dec
fsubrl
popw
loope
or
sbb
cmpsb
in
push
xchg
push
pop
stc
rcr
fisubl
fimuls
popa
mov
outsb
pusha
xor
out
add
mov
popf
mov
out
imul
call
dec
aad
adc
mov
aaa
sbb
pop
xchg
outsb
popa
aas
xchg
jmp
pop
sbb
enter
mov
into
outsl
xchg
mov
jae
test
xor
mov
push
jp
pop
enter
lret
test
xchg
add
xchg
add
mov
dec
mov
rcll
jmp
test
movsb
je
ret
inc
and
pusha
leave
popa
repnz
rcrb
mov
aad
aam
lcall
movsb
mov
push
cmp
gs
adc
inc
dec
aad
and
add
into
add
dec
rolb
rorl
sti
pop
in
mov
sub
push
jnp
mov
jne
cwtl
vcomisd
sbb
sbb
je
ffree
push
rol
cli
shlb
outsl
mov
cmp
lods
insl
mov
adc
shrl
dec
mov
dec
and
mov
xor
jnp
sbbl
mov
xchg
push
mov
loope
pushf
mov
cmp
or
mov
mov
add
mov
test
mov
jg
cmp
cmp
sub
dec
sub
das
mov
pop
pop
adc
mov
add
mov
aaa
hlt
xor
es
stc
mov
pop
iret
jmp
ds
xchg
inc
add
pusha
int
stos
pop
sbb
cltd
mov
sub
insl
inc
ret
mov
out
aaa
push
mov
rcll
xchg
pop
sbb
mov
push
jg
fsubrs
push
aad
sub
push
call
adc
cmp
fldt
in
push
pushf
dec
and
daa
push
nop
pop
popf
inc
outsb
pusha
int3
aas
pushf
adc
and
jge
jo
fs
cmp
rorb
fstpt
push
xlat
cli
and
sbbb
stos
test
adc
xchg
cltd
add
das
scas
inc
jg
mov
ja
inc
xor
repnz
test
dec
cmp
movsl
int
loopne
xchg
mov
xchg
jne
or
ss
mov
mov
test
pushf
mov
mov
dec
idivb
das
bound
xchg
rcll
ret
xchg
adc
and
or
cmp
push
orb
adc
push
adc
shlb
lahf
sub
push
adc
in
xchg
and
sbb
pushf
pop
not
jo
push
in
mov
mov
jae
mov
adc
adc
outsl
or
pop
xor
push
fwait
push
lea
inc
pop
push
push
imull
pushf
movsl
inc
dec
add
xor
clc
call
clc
or
packuswb
dec
push
bswap
and
fdivl
sub
mov
ja
mov
aas
dec
sti
fadds
pop
daa
mov
test
loope
iret
in
add
mov
lds
lret
adc
cltd
scas
cmp
push
xchg
pusha
sbb
fstps
jno
add
dec
insl
fwait
dec
cli
xor
cmp
inc
cmp
vdivsd
cmp
xchg
push
aaa
mov
addr16
enter
push
mov
es
pushf
call
fistps
pop
fistpll
adc
jnp
push
mov
cmp
mov
cmpsb
addb
mov
int3
pop
icebp
ja
je
mov
mov
ret
cmp
cmp
insb
pusha
push
sbb
jmp
cmp
mov
mov
xor
push
adc
inc
fsubr
imul
ficoml
inc
mov
je
push
jle
es
push
jg
mov
lret
lcall
push
leave
test
add
arpl
daa
jnp
mov
test
fiaddl
push
fstps
push
rcrl
or
popa
inc
xchg
andl
inc
fnstcw
stc
pop
loopne
pop
and
jmp
mov
scas
jnp
add
out
test
nop
cmp
jo
adc
nop
pop
aam
dec
xchg
stos
pop
mov
cltd
pusha
pop
push
movsl
pop
sbb
das
les
popa
mov
pop
fcmovnu
xor
negb
dec
mov
daa
and
jbe
int3
dec
iret
mov
xor
xchg
xchg
in
xor
sub
pusha
sub
xor
jle
push
mov
fwait
mov
leave
les
test
inc
add
sbb
push
xchg
int
lret
scas
cmp
ret
or
add
add
push
dec
gs
or
sub
fstps
or
stos
cmp
std
iret
call
into
lahf
into
ss
sbb
leave
add
and
push
sub
testl
mov
insb
enter
dec
cltd
jno
lcall
inc
push
mov
sahf
scas
push
movsb
mov
leave
out
leave
ffreep
popa
shll
pop
rcrb
test
or
imul
hlt
mov
sub
into
mov
sbb
daa
aas
mov
int3
hlt
xor
dec
adc
andb
or
mov
dec
adc
out
aam
cmp
sti
out
dec
sbb
js
out
add
adc
push
adcl
test
inc
add
mov
mov
xchg
aaa
adc
mov
sub
jbe
and
je
xor
xor
jle
jl
out
cmpsl
outsl
xchg
push
xor
mov
mov
call
repz
pop
ficoml
mov
jns
push
rcrl
cmp
mov
shrl
stos
test
push
mov
and
pop
inc
mov
mov
mov
bound
push
cmpsl
call
add
cmpsl
dec
jecxz
jae
adc
mov
and
pop
scas
jae
jbe
xchg
cmp
sbb
stc
mov
test
insl
inc
push
loop
jmp
fdivl
adc
sbb
jle
push
aaa
sbb
xor
mov
sub
push
leave
mov
jp
insb
pop
gs
out
iret
push
or
mov
inc
adc
jge
bound
out
sahf
stos
sub
lret
iret
in
cmp
fwait
or
mov
jne
shlb
dec
stos
xor
fbstp
mov
aaa
dec
pop
sbb
and
pop
jae
lods
mov
jge
insb
rcll
popa
std
arpl
cmp
jl
lods
xchg
repz
test
mov
aas
mull
nop
xchg
pop
call
imul
mul
lcall
lods
jl
movsb
cltd
jle
cltd
mov
sbb
movsl
shl
inc
lea
sahf
ret
jecxz
imul
mov
inc
test
pop
mov
insl
movsb
push
je
in
sub
movsl
jg
mov
and
inc
push
xor
xchg
lcall
icebp
mov
mov
paddq
outsl
mov
cmpsl
test
cmp
cli
pop
sub
xchg
lods
mov
lods
mov
repz
int3
xchg
jbe
mov
bound
dec
scas
pop
clc
cltd
xchg
xchg
mov
xor
push
imul
mov
and
pop
jmp
out
arpl
ficompl
fwait
les
sbb
sub
js
xchg
nop
or
cmp
fwait
js
sar
hlt
sub
pop
cmp
daa
mull
push
std
fisttpll
dec
orl
fnstsw
repnz
adc
cwtl
pop
fld
repz
pop
pop
fldl
fs
push
fstl
adc
and
repnz
xor
movsl
movsb
adc
adc
pusha
sahf
jmp
out
movsl
lahf
int
adc
in
cmp
inc
xchg
iret
sbbl
loopne
test
push
fimuls
xchg
lock
cmpsl
loope
and
mov
int3
cwtl
push
sarb
andb
in
sub
faddl
inc
inc
inc
mov
repz
xchg
jge
mov
ds
mov
or
and
imull
lcall
repz
push
lods
popa
cmc
mov
pop
mov
sub
daa
lcall
push
push
imul
icebp
in
cmp
int
call
neg
sbb
lea
loopne
or
sub
mov
ds
jl
dec
mov
roll
addl
data16
add
pop
ret
inc
push
or
jns
inc
out
insl
addb
push
jns
fiadds
mov
mov
nop
cwtl
pushf
fisttps
leave
add
jno
sbb
clc
adc
push
xchg
in
pop
mov
je
sbb
sbb
adc
lds
lahf
stc
mov
leave
sbb
in
daa
xchg
int3
sbb
jne
mov
mov
loope,pt
subl
push
popf
sub
xlat
cmpsl
lods
loopne
shrb
gs
xchg
hlt
scas
and
cwtl
sub
xor
and
jecxz
clc
push
testl
sub
sbb
rcr
sub
cmpl
jmp
movsl
jmp
sub
enter
cmp
jnp
outsl
lret
sub
div
mov
jge
jnp
mov
mov
out
lods
shrl
cld
dec
cmp
ret
data16
and
loop
inc
jo
mov
pop
jp
shll
xchg
sbb
ficoml
mov
js
sbb
sbb
es
repnz
insb
adc
mov
xlat
dec
mov
jle
int3
les
or
bound
dec
aam
and
push
lds
pop
mov
loop
repz
or
jbe
shll
jl
nop
pop
stc
pop
xchg
fcomp
mov
data16
rcrl
movb
lock
push
std
sub
cs
fwait
or
aaa
mov
enter
mov
shl
mov
cmp
sti
scas
mov
xor
sub
pop
ret
mov
xchg
push
int
outsb
cli
loop
js
stos
sbb
xor
cmpsl
in
jge
push
fwait
add
test
jle
dec
test
push
nop
insl
shr
dec
daa
and
test
adc
enter
mov
or
jnp
or
lods
cmp
pop
lret
cmp
mov
mov
and
sti
shlb
arpl
ljmp
cmp
dec
pop
cld
cmpsb
mov
xchg
push
orb
fldcw
inc
pop
sti
and
lea
pop
and
cmc
add
cmpsb
or
inc
aad
insb
fidivs
negl
push
push
popf
cmp
into
mov
ret
jg
cli
pushf
dec
pop
lret
fldcw
xchg
lcall
mov
inc
mov
out
jle
mov
pusha
mov
mov
outsb
cmpsl
dec
xchg
pop
mov
pusha
test
xor
cs
inc
in
xor
enter
cltd
mov
jle
inc
pop
idivb
rcrb
out
ljmp
fstpt
insl
lock
out
lahf
lock
push
out
fwait
xchg
scas
enter
mov
xchg
js
pop
sbb
hlt
adc
mov
xor
test
jno
gs
xor
mov
gs
mov
ret
scas
fs
xchg
adc
aam
add
inc
call
test
je
cld
rorb
mov
xor
fadd
icebp
enter
sbb
loopne
or
pop
mov
xor
add
iret
push
sbb
xchg
lods
jno
push
or
jnp
add
movsb
dec
fwait
cmpb
cs
fdivrl
push
xchg
dec
jl
jge
ljmp
orl
inc
out
in
in
gs
cmp
jge
pop
notl
pop
jo
mov
pop
xchg
xlat
imul
add
outsl
pop
add
push
xchg
data16
and
sbb
pop
jne
mov
dec
xor
sbb
dec
push
cmp
in
ret
in
adc
jns
push
mov
iret
icebp
mov
in
jnp
insb
cld
pop
and
lock
movsb
pop
arpl
sahf
bound
ljmp
cmpsl
inc
std
imul
sub
pop
movsb
imul
ret
out
xchg
pop
test
ret
jnp
lock
push
add
out
mov
in
add
mov
js
mov
scas
jmp
int
jo
xor
push
ret
push
mov
xchg
mov
sarl
sbb
xchg
sub
inc
sub
mov
ds
test
mov
xor
andl
and
fcomps
xchg
xchg
sbb
xor
inc
inc
inc
in
jnp
cmp
pop
and
push
pop
aaa
int
jecxz
data16
pop
push
or
and
mov
sbb
adc
mov
push
push
push
js
inc
fwait
mov
out
jb
fwait
cmp
scas
repnz
pop
call
in
pop
add
push
or
jno
ret
fmull
add
mov
add
push
jle
cmp
push
loop
push
sbb
xchg
and
push
stos
inc
mov
xchg
sbb
cmp
sarb
inc
dec
ss
loop
lea
nop
jecxz
lds
scas
pusha
cmp
adc
jnp
test
popf
das
jb
xchg
mov
cmp
mov
mov
addr16
dec
fcomps
cmp
dec
sbb
fs
pushf
jno
cmp
xchg
dec
xchg
mov
pusha
gs
aas
xchg
into
or
outsl
jne
cwtl
jno
dec
dec
cwtl
mov
popa
fists
std
call
scas
lock
mov
out
iret
repnz
jne
stc
xor
adc
pop
js
rcrb
inc
lock
cltd
push
jge
out
or
shlb
cmpsl
out
jge
loop
xchg
les
pushf
push
movsl
xor
dec
cmp
adc
jmp
cmpsl
mov
jge
ja
mov
cmp
test
xor
mov
jnp
jae
jge
jmp
mov
mov
cmpsb
in
or
stos
sbb
jge
sbb
inc
xchg
rclb
and
adc
mov
popf
cs
in
fs
xchg
adc
lcall
pop
insl
fcmovnu
or
sub
add
fsubl
cltd
add
enter
gs
rorl
insb
loopne
push
cmp
lret
stc
mov
cmp
sbb
pop
inc
xchg
mov
mov
mov
push
fiaddl
add
aaa
dec
add
xor
jp
mov
hlt
out
fistpl
mov
ds
push
adc
sub
push
ret
or
adc
loop
jp
jl
cmp
dec
mov
stc
inc
cli
xor
and
push
cmp
popa
bound
xor
jnp
ret
dec
lcall
repnz
xchg
mov
mov
and
pop
call
aaa
sbb
xlat
mov
mov
inc
aam
or
sbb
dec
imul
inc
mov
fsubrl
sbb
jb,pn
inc
xorb
arpl
fwait
inc
shlb
push
fimuls
or
test
jbe
sbb
lods
mov
test
punpckhdq
ret
loop
xor
mov
movsl
addr16
fimull
mov
pop
lods
inc
sub
dec
fldl
adc
icebp
sub
nop
pop
cmp
dec
es
sbb
js
mov
iret
hlt
aad
pop
cmp
dec
push
in
popf
flds
stc
cmp
add
out
out
setb
jnp
bound
out
arpl
and
decb
ja
jecxz
cli
out
mov
mov
xlat
aad
pop
pop
fcompl
fisttpl
xchg
pop
and
es
push
mov
jmp
xor
cmp
daa
add
and
sti
add
outsb
xchg
incb
mov
push
add
push
popf
fadds
cmp
xor
jnp
sbb
mov
sbb
shrb
mov
add
mov
das
in
xlat
popf
sahf
push
cld
inc
repz
scas
andb
sub
sbb
xchg
ret
lods
push
ret
or
clc
icebp
jae
scas
out
mov
sti
adc
cmp
push
jp
cmpsb
mov
idivl
jg
lahf
int3
out
xor
hlt
shrb
sub
push
xlat
lahf
mov
cmp
daa
int
sbb
pop
jmp
cmpsl
inc
push
push
sbb
iret
sbb
xchg
test
xchg
insb
sar
fcmovnb
popa
jge
dec
jp
arpl
mov
mov
cmp
out
out
xchg
and
popa
test
pop
leave
mov
mov
add
test
hlt
push
popa
ret
xchg
add
jb
xor
enter
das
popf
movsb
stos
stc
jle
mov
insb
ficomps
fdivr
mov
jg
rorl
adc
and
inc
inc
jl
int3
dec
push
cmp
xchg
or
inc
mov
or
push
faddl
clc
push
xchg
jne
icebp
pop
inc
shl
les
out
out
push
cmpsl
shlb
fstps
or
xchg
push
and
cld
push
pop
or
cmpsb
jl
repz
scas
jg
out
adc
push
mulb
cmp
and
mov
pop
je
inc
push
test
stc
shll
rorb
incb
sbb
cli
jl
cmpsl
js
mov
pushw
dec
ret
js
push
inc
bnd
cwtl
fcmovbe
enter
je
xchg
aas
rorb
notl
test
jbe
mov
lock
loope
or
ja
inc
cld
lock
out
cltd
jle
test
imul
inc
sub
imul
in
mov
ja
jns
xor
xchg
mov
in
aad
xlat
out
xor
jb
repz
test
jae
shlb
dec
ss
insl
push
cmp
ljmp
push
dec
insb
roll
pop
adcb
adc
xchg
xchg
mov
adc
sub
mov
inc
pushf
cmpsb
shlb
inc
hlt
adc
adc
shll
inc
cld
mov
dec
xchg
jecxz
sub
addl
and
pop
xor
xor
shlb
xchg
icebp
arpl
or
pop
inc
pop
orl
push
push
insb
lea
lds
inc
jmp
ret
and
mov
int3
pop
flds
shl
jl
pop
and
pop
add
sahf
dec
mov
imul
jmp
test
inc
loop
sbb
jle
pop
push
sub
dec
movsb
stos
add
jns
jl
icebp
pop
nop
cmp
aad
in
fstl
cmp
push
cli
add
fs
sub
ja
pushf
ret
dec
xor
inc
popa
mov
xchg
mov
fcoml
std
sub
stc
popf
es
data16
pop
daa
add
xor
inc
xor
bound
out
ror
push
imul
push
movsb
mov
cltd
adc
push
insb
out
mov
ret
mov
push
imul
sarl
imul
push
leave
sti
insb
mov
mov
cs
push
cmp
xlat
out
push
sbb
xchg
mov
pushf
mov
movsb
jg
pushl
in
inc
mov
cmp
sarb
xlat
scas
mov
movhps
out
cli
cs
lret
fmuls
sub
cmp
pop
out
mov
fistpl
mov
and
cld
adc
cmc
dec
aad
push
enter
das
jmp
mov
dec
lret
js
hlt
lods
rcll
pop
jae
loope
add
out
pop
stos
add
jbe
fwait
xchg
mov
mov
into
jge
pushf
inc
mov
mov
xchg
add
mov
test
out
cmpsl
cwtl
int3
mov
push
lret
mov
fcomi
inc
or
leave
inc
jb
into
stos
ss
mov
xchg
pushf
in
cltd
sbb
rol
jp
scas
gs
fcoms
adc
inc
xchg
pop
jnp
test
and
mov
aam
fnstenv
in
mov
jl
repz
out
or
or
adc
mov
adc
out
movsb
sahf
and
aas
xor
mov
imul
or
int3
nop
out
mov
in
mov
add
test
es
les
fdivrl
in
jnp
fisubs
sbb
loope
ret
xchg
inc
in
scas
jns
lret
sarb
xchg
cmpsl
ja
rcll
and
testl
nop
jnp
shrb
sbb
dec
mov
sbb
pop
mov
nop
xchg
cltd
and
mov
add
mov
dec
fs
mov
mov
push
into
xchg
xor
pop
or
stos
iret
dec
mov
cmp
out
mov
loope
pop
jle
outsb
and
test
or
adc
mov
rolb
roll
js
div
out
mov
lods
push
mov
or
jbe
fucompp
cmp
push
enter
loopne
je
imul
mov
mov
xlat
imul
enter
ss
or
pop
jg
sub
push
sbb
sub
fldenv
mov
or
dec
cmp
xor
pop
mov
jecxz
cmp
stc
xchg
jb
loop
daa
and
inc
jmp
idivb
sbb
xor
cs
add
fimuls
or
xchg
lods
xor
or
mov
mov
pop
pusha
and
outsb
xlat
cmp
fistl
sbb
or
inc
xor
test
pop
mov
call
jnp
xchg
imul
std
call
sub
mov
jmp
popw
push
inc
lock
adc
adc
iret
loope
test
popf
pop
mov
cli
xlat
xchg
mov
dec
pusha
inc
xor
mov
ja
push
pcmpgtw
bound
mov
push
mov
pop
and
daa
or
enter
scas
mov
test
jmp
das
xorl
cld
rcll
sbb
shr
mov
fdivrs
popa
xchg
clc
push
or
pusha
icebp
xorb
pop
out
popf
rcl
fwait
into
sbb
jae
jg
and
jmp
jmp
lods
ja
sub
dec
push
sbb
enter
cmp
mov
cltd
rorl
arpl
or
push
xchg
adc
push
shr
es
movsl
out
mov
jecxz
mov
push
sbb
and
add
cmp
adcl
jns
mov
js
sub
cwtl
adc
sarb
mov
cld
sbb
push
sub
insl
xchg
shlb
adc
sub
insl
es
push
lcall
jg
jge
xor
sub
xchg
shll
int3
pop
out
push
cld
or
add
sbb
das
roll
lods
jne
inc
sarb
mov
in
push
imull
jbe
popa
adc
xchg
sub
lock
stc
xor
sub
add
in
lcall
dec
popf
inc
xchg
push
xor
lret
mov
jno
nop
gs
outsb
pop
clc
in
es
pop
xor
aaa
popa
mov
cmpsb
cmpsb
imul
xchg
lds
add
aad
add
push
les
adc
ret
jnp
adc
mov
sub
lcall
pop
call
pop
adc
les
mov
push
push
xchg
hlt
aas
arpl
xor
aas
push
rcrb
sub
xor
xchg
xor
lea
lret
je
inc
pop
add
rclb
and
mov
add
push
or
sub
mov
cltd
aam
add
xchg
mov
movb
mov
scas
ja
inc
out
iret
addr16
test
in
cmc
jnp
fsts
testb
icebp
push
jmp
xchg
sbb
leave
sub
dec
fdivp
aaa
cmp
outsb
dec
fmuls
jge
jle
inc
rcr
mov
in
mov
cmp
sub
push
out
xor
out
mov
cmp
dec
or
xchg
in
icebp
hlt
scas
adc
ficompl
push
sbb
mov
mov
cmpsb
push
inc
sbb
xorb
add
xor
or
xor
jecxz
mov
popa
scas
jns
cs
sub
rcll
sub
ja
testb
in
pushf
pop
xchg
inc
xchg
jno
dec
cld
sub
daa
cli
mov
int
dec
inc
rcl
fmull
mov
mov
shrb
push
ja
mov
test
mov
xor
mov
pop
pop
mov
add
daa
push
push
mov
sub
call
push
in
enter
or
adc
sbb
push
fimuls
adc
mov
scas
ret
dec
pop
adc
pop
push
xchg
mov
xor
and
ret
mov
inc
cmp
dec
xlat
lock
sbb
rclb
add
and
fcmovb
popa
pop
adc
fnstcw
xchg
add
sub
shrb
sub
out
stos
les
orb
adc
add
fsubs
jmp
pusha
cmpsb
jge
stc
mov
sarl
insl
in
test
addr16
jb
pusha
push
cs
dec
mov
pusha
popa
ljmp
addr16
cltd
fnstenv
pushf
push
in
xchg
js
movsl
pop
test
pop
adc
lret
push
std
mov
out
sbb
addb
in
loope
xchg
out
and
mov
das
xchg
lods
cmp
xchg
inc
sub
stc
jne
adc
lret
mov
push
xchg
test
test
or
pop
mov
or
xor
xor
add
cmp
mov
in
and
inc
xchg
insb
repz
jno
jae
inc
mov
addr16
lcall
fcoms
filds
repnz
test
dec
sti
in
shrl
mov
jg
int
shlb
sti
push
push
inc
sub
mov
jne
pop
rorb
add
loopne
push
sub
loopne
into
jb
mov
enter
jnp
push
cltd
fadds
icebp
cmpsl
and
xchg
lcall
adc
sbb
std
lods
in
mov
lret
sarb
cmp
icebp
dec
and
jo
fiadds
dec
lret
cltd
mov
rcrb
cmp
jp
dec
sub
rcrb
dec
es
sub
rep
sbb
mov
out
imul
dec
imul
adc
mov
inc
and
out
stos
or
je
pop
inc
hlt
xchg
inc
pop
int3
cmp
sbb
inc
ja
iret
faddp
mov
lods
mov
jne
ljmp
and
ret
or
test
pusha
not
xor
adc
push
ds
cld
or
arpl
shll
or
dec
shll
ss
imul
addl
in
sub
outsb
mov
daa
mov
negl
cli
hlt
mov
mov
pop
cld
push
and
ja
sahf
add
mov
rcrb
jecxz
je
cli
mov
repnz
adc
cs
push
cltd
std
je
push
movsl
dec
das
mov
pop
push
xor
daa
or
dec
fucom
and
rol
xor
clc
mov
scas
fidivs
lcall
fimuls
sub
fnstenv
sub
sub
cltd
dec
sti
push
mov
sub
dec
xchg
out
ljmp
rolb
dec
lret
in
lret
adc
jp
xchg
cld
or
jecxz
mov
cmp
xchg
pop
mov
ret
jb
mov
jbe
mov
cmp
push
inc
enter
and
lea
lods
dec
adc
mov
ret
dec
push
mov
cmpsl
adcb
in
cli
jp
cmc
inc
xor
mov
jae
jg
inc
xchg
and
add
push
mov
xchg
sahf
xchg
shlb
mov
dec
push
lahf
or
mov
mov
sti
incl
icebp
dec
pop
mov
mov
and
leave
inc
mov
clc
sarl
cmp
cmp
mov
inc
test
sbb
mov
adc
push
jb
push
jecxz
fnstenv
jno
cwtl
pop
das
sub
and
or
sub
outsb
in
icebp
xor
jo
or
add
iret
add
sub
inc
test
shlb
xchg
call
fdiv
psraw
jecxz
repz
sti
daa
in
adc
loopne
in
test
mov
test
ljmp
push
xor
push
xchg
test
les
jle
aam
in
mov
dec
mov
addr16
or
add
test
cmp
call
pop
mov
incl
enter
incb
stos
nop
or
mov
bound
insl
nop
rorb
adc
imul
notl
jns
add
fcoml
push
cmpsl
loop
fimuls
sub
pop
inc
sbb
pop
imul
cmp
notb
mov
adc
mov
adc
mov
push
pop
mov
xor
xchg
addb
scas
pop
leave
f2xm1
movsb
xor
in
adc
stc
loopne
mov
dec
inc
pop
pop
lods
push
xlat
push
lret
sbb
push
call
idivb
xor
js
push
out
mov
sub
in
cmp
add
outsb
mov
ds
jb
les
negb
add
or
insl
inc
mov
jle
sti
add
loope
lcall
mov
or
out
jle
ljmp
loope
jae
add
or
cwtl
inc
jp
lea
inc
int
in
jecxz
or
add
lret
jecxz
pop
call
scas
pop
mov
pop
test
in
jmp
mov
jp
jmp
mov
jmp
lret
inc
inc
sbb
movb
sub
xchg
jl
xchg
jne
sbb
fiaddl
cmpsb
das
sbb
add
mov
ss
call
adc
or
sbb
mov
or
lods
add
movsb
pop
addr16
js
pushf
add
mov
mov
xor
addr16
arpl
xchg
fildl
push
dec
cwtl
cmp
leave
movsl
mov
sbb
addr16
js
xchg
int3
pop
inc
jno
in
les
test
mov
push
or
xchg
ds
repz
js
ljmp
push
test
mov
mov
sub
dec
and
pavgw
push
mov
nop
mov
lret
test
int3
inc
mov
jno
add
push
push
out
jae
scas
lcall
xchg
mov
outsb
pop
scas
sar
int
loopne
push
in
xchg
mov
pop
aas
or
cmp
inc
sub
dec
xchg
pop
jle
pushf
inc
dec
stos
push
cli
xchg
repnz
test
lock
popa
jg
in
and
xor
xor
test
xchg
and
or
lcall
xchg
sarl
idivb
sbb
clc
ja
sub
inc
push
pop
testl
jnp
aam
test
cli
leave
mov
mov
mov
in
mov
mov
out
lret
jbe
js
push
scas
jns
sbb
add
aad
ror
sbb
pop
test
fadds
pusha
push
hlt
mov
push
stos
add
int3
stos
lea
cmpsl
pop
cltd
adc
ss
insb
daa
mov
gs
or
add
fnsave
arpl
test
mov
outsl
call
mov
or
mov
xchg
mov
aas
xlat
outsb
adc
mov
or
loope
inc
ficoml
push
push
stc
mov
fsubrs
rcl
jae
lods
xchg
or
pop
gs
popa
cli
dec
aaa
shlb
adc
cmp
inc
jmp
cmpsb
add
nop
out
shlb
cmpb
daa
not
dec
popa
mov
jns
fs
pop
mov
mov
decl
fimuls
add
add
test
ret
rcr
pop
push
push
xor
js
xchg
lahf
imul
test
mov
imul
and
adc
cmpb
pop
rorb
mov
mov
mov
jl
pop
mov
dec
pop
push
or
imul
lahf
mov
es
fisubl
sbb
enter
mov
pushf
mov
jae
bound
xchg
subb
cltd
dec
mov
fisttpl
xor
lret
xlat
push
or
inc
stos
repnz
repnz
xchg
stos
cmc
lods
fistl
mov
sub
mov
push
in
out
pop
pop
paddb
scas
subb
mov
adc
inc
xchg
xchg
and
xor
in
ss
sub
or
mov
inc
fists
aam
mov
mov
ret
imul
mov
sub
lds
inc
push
cmp
pop
aad
xchg
jg
in
psrad
lods
es
xchg
dec
pop
lods
cmc
jne
push
xorl
jg
pop
rcll
xor
in
icebp
push
lock
push
xor
in
add
xlat
mov
std
push
cmp
insl
aam
outsb
mov
xor
adc
and
lret
out
pop
out
adc
xchg
jns
inc
sub
jmp
cmp
repnz
lret
enter
aas
mov
fstps
js
push
push
bnd
sbb
mov
cmp
pop
sar
mov
loopne
xchg
loopne
inc
leave
test
cmc
rcll
lods
pop
fadds
jp
add
mov
xchg
add
pop
jo
push
fiaddl
or
pop
popf
push
cld
pop
outsb
fucomi
in
adc
pop
add
insl
push
mov
lea
outsl
push
mov
mov
push
sbb
imul
and
test
mov
mov
adc
in
mov
jmp
dec
test
inc
pop
fs
jno
pushf
mov
dec
fdivrp
test
dec
pushf
push
sub
loope
jle
xchg
fdivr
hlt
mov
stc
pop
or
sbb
mov
add
pop
sub
fmull
fidivrs
inc
cmp
and
xchg
fcoml
xor
repnz
adc
mov
outsl
sahf
mov
int3
ret
adc
je
in
std
cmp
adc
push
xor
sub
dec
out
push
out
xor
fisubrl
lcall
sub
repz
aas
xchg
pop
loopne
push
fadds
ss
imul
fisubrs
loopne
arpl
es
jb
sahf
out
xchg
xchg
mov
adc
sub
jns
icebp
mulb
mov
lea
mov
aad
jnp
push
lahf
in
sub
mov
cmpsl
outsl
pop
bound
jge
xor
dec
mov
adc
inc
ret
sbb
sbb
push
sub
pusha
dec
scas
jnp
sub
push
nop
inc
stos
push
mov
push
sub
push
lods
cmp
cmp
jl
arpl
sbb
xor
aas
cld
inc
mov
add
and
fmull
cmpsb
shlb
mov
sbb
jns
add
pop
mov
adc
add
popa
js
shrb
ljmp
adc
push
push
mov
xor
mov
daa
daa
add
loope
mov
imul
dec
enter
dec
sub
insb
fdiv
sub
inc
jl
sbb
inc
cs
cli
push
cltd
push
jb
fnstsw
cli
je
sbb
outsb
sub
repnz
fucomip
mov
movsb
lret
imul
mov
fs
aad
mov
repz
lods
out
xor
cli
sbb
mulb
rclb
popa
push
inc
xor
push
sub
std
movsl
cmp
jb
sbb
test
sub
adc
es
cmp
push
or
pop
call
ror
movsl
loope
call
fisubs
outsb
mov
adc
cltd
mov
push
jp
lret
repnz
adc
pop
push
outsb
lods
and
iret
sbb
cwtl
out
xchg
ret
adc
xor
scas
fldenv
aas
test
sbb
stos
xlat
call
or
jmp
push
lahf
jb
inc
adc
flds
leave
dec
fdivrl
jle
dec
in
cltd
inc
jmp
fwait
icebp
jno
xchg
mov
out
sahf
mov
scas
mov
add
adc
aad
dec
inc
in
lea
fcmovb
shlb
lahf
repz
push
xor
mov
loop
aam
into
pop
hlt
jns
fs
sahf
dec
jge
divb
shrb
mov
mov
add
sub
push
inc
push
call
push
int3
mul
adcb
push
mov
mov
ret
test
mov
mov
lods
xlat
mov
sbb
cmp
adc
mov
lods
dec
imul
pop
repnz
cmpsb
sahf
jecxz
flds
test
jae
lods
add
andb
lods
pop
mov
and
cmp
rcl
adc
or
jge
jo
xchg
addr16
inc
mov
lods
mov
test
cmp
lds
mov
push
popa
sub
pusha
xchg
test
aam
sub
jecxz
out
xor
ret
xor
dec
insl
test
push
ds
loope
inc
sbbb
ljmp
jecxz
fwait
test
sub
test
pop
fs
cmc
push
loopne
push
sbb
xchg
aad
push
nop
stos
pandn
pop
mov
cmc
out
std
jmp
xchg
xchg
push
or
lods
ljmp
cmp
or
jp
adc
and
lods
xchg
jo
sahf
xchg
icebp
andl
fwait
and
stos
and
add
aas
bound
push
sti
dec
outsl
cmpsl
popl
xor
loop
mov
cmp
enter
cmp
mov
aam
in
and
stos
frstor
mov
icebp
test
mov
inc
xor
rolb
loope
pop
xor
or
or
lods
cmpl
in
bound
jp
mov
sbb
xor
pop
cmpsb
inc
idivl
jge
mov
pop
cli
lahf
repnz
in
test
xchg
jp
outsb
xchg
out
daa
in
fisubs
subl
push
imul
add
dec
jb
cmp
aad
je
dec
jge
push
xor
mov
or
sub
and
jnp
data16
or
sub
aad
jecxz
cs
sub
pop
mov
arpl
insb
mov
sbb
daa
out
jne
cmp
jl
cwtl
mov
pop
jmp
jae
or
inc
es
loope
mov
pop
or
jns
nop
sbb
movsb
rorl
cmpb
push
fistl
mov
aad
in
clc
adc
popf
mov
in
mov
xchg
and
xlat
jb
mov
lods
sbb
lret
imulb
idivb
test
fprem
stos
add
push
insl
ljmp
adc
mov
scas
icebp
push
jno
sar
fs
es
clc
and
sub
or
inc
mov
inc
repz
jmp
fwait
push
mov
pop
mov
add
sbb
hlt
fiadds
jbe
andl
xor
shlb
mov
loop
stos
in
aad
mov
mov
xchg
movsl
loopne
inc
sub
adc
fsub
cmp
inc
push
xor
lock
mov
pushf
sbb
call
leave
jge
inc
test
mov
cmpsl
mov
cmp
pop
insb
pop
test
callw
and
xchg
sbb
aam
and
loopne
test
mov
sbb
mov
aaa
push
dec
xchg
mov
ljmp
cmpsb
push
dec
mov
or
fincstp
pop
mov
dec
pop
ljmp
into
lods
xor
pop
xor
out
push
xor
or
inc
arpl
and
popa
scas
push
jno
mov
xchg
dec
rdtsc
and
rcr
pmaxub
adc
int
aas
or
lock
mov
push
rorl
outsl
mov
test
pop
fdiv
ret
fisubrs
movsb
cli
aam
lea
lods
cltd
scas
push
shl
sub
mov
test
xlat
xlat
decl
push
cltd
andb
cwtl
sub
imul
mov
push
push
cmp
lods
xchg
xchg
lds
pop
or
jge
hlt
fsubs
cmp
push
stos
outsb
mov
xchg
dec
xchg
pop
jns
adc
decl
mov
fsubl
xor
std
and
out
ret
fiaddl
hlt
loop
or
push
pop
push
jo
xchg
ret
ret
jmp
xchg
pop
in
mov
fbld
push
jno
xchg
mov
leave
ja
mov
sahf
popa
loop
xchg
push
mov
int
negl
arpl
xor
mov
inc
dec
lahf
mov
mov
je
sbb
out
mov
sbb
pop
movsb
cmp
cmp
mov
push
cwtl
push
jg
inc
out
cmp
fcomps
xchg
scas
fidivrs
xchg
push
lods
scas
imul
out
ss
pop
or
rcrl
add
aaa
xchg
mov
xor
mov
or
movsb
jg
ds
dec
pusha
push
fwait
daa
mov
pop
add
mov
adc
pusha
loopne
movsb
mov
imul
or
lahf
divb
into
adc
les
add
fiadds
dec
loopne
or
out
jb
js
add
repz
pop
and
add
pushf
ja
addb
shlb
adc
dec
ret
mov
or
xor
in
mov
lret
movsb
cmp
mov
lahf
inc
mov
cmc
aam
addl
adc
jle
loope
add
cwtl
jbe
pop
and
cmpsb
dec
bound
mov
pop
fcomps
sub
and
ret
inc
stc
int
out
mov
mov
xchg
scas
mov
and
cmp
call
dec
arpl
inc
mov
popf
jg
aam
aaa
rolb
sbb
xor
xchg
fstl
into
pop
stos
cs
mov
test
mov
cmp
xor
xor
mov
notl
popa
dec
test
movsb
popf
sahf
hlt
xchg
sbb
cmpsb
clc
mov
lods
adc
jl
repnz
mov
jnp
bt
mov
cmp
push
mov
incl
imul
enter
sub
in
xchg
popa
xorl
jo
les
arpl
and
jnp
enter
sti
push
add
fcoms
dec
mov
push
fadd
test
les
dec
xor
in
shlb
dec
mov
xchg
lds
dec
push
cmp
addl
popaw
dec
lods
push
fnstcw
cmp
rol
jp
add
push
sub
addb
jp
cmp
mov
mov
arpl
pop
inc
xor
popa
xchg
mov
jl
ljmp
jae
outsl
hlt
adc
jecxz
jae
push
jmp
fcoms
jb
cmp
shll
daa
lahf
test
pop
imul
add
xor
adc
leave
arpl
jae
mov
movsl
fs
or
inc
jp
mov
pop
mov
sbb
sub
xchg
jno
scas
mov
aam
add
lahf
mov
cmpsl
aaa
sbb
rorl
dec
sarl
rcl
mov
inc
inc
nop
jae
push
lea
lods
sub
mov
adc
push
sub
sub
mov
jecxz
lea
or
bound
icebp
mov
xchg
jmp
sub
sti
fnsave
lods
cmp
mov
orl
jecxz
fistpl
lahf
cmp
in
pop
outsb
cmp
or
or
and
and
outsb
jmp
jbe
mov
mov
cmp
sub
insb
push
jne
imul
mov
loop
cld
mov
mov
dec
sbb
fcmovu
in
inc
mov
ljmp
ret
jge
sub
sbb
lods
jmp
mov
jge
cli
dec
adc
test
jmp
loopne
int3
xor
out
and
add
jl
sarb
lret
lea
lods
add
or
push
adc
scas
test
and
push
fimuls
flds
push
pushf
sbb
cmpsl
movsb
or
stc
jg
ljmp
jge
pop
inc
adc
popf
andl
movb
adc
jnp
mov
notl
mov
jg
gs
adc
push
es
sub
icebp
inc
insb
push
adc
cmc
inc
les
jg
xor
xchg
das
fidivrs
adc
lahf
sub
pusha
je
dec
into
adc
ljmp
les
jl
push
fnstsw
jnp
xor
add
fistps
sbb
fcoms
mov
lea
in
mov
clc
push
add
mov
inc
push
xchg
out
in
les
pop
das
add
test
mov
aaa
dec
jle
or
into
mov
addl
push
movsl
outsl
xlat
je
imul
inc
mov
push
jle
lods
fs
pop
sbb
jmp
stc
in
mov
and
pop
sbb
clc
in
dec
insl
rolb
xor
pop
imulb
orb
stos
outsl
lret
popa
dec
dec
testl
mov
push
add
xor
xlat
jle
fdivrl
ja
xchg
xchg
mov
addb
icebp
lock
jbe
popa
mov
dec
inc
xor
mov
test
loope
stos
int
fcmove
push
fistl
inc
idivb
mov
lock
aad
sbb
xor
jecxz
sbb
mov
push
push
shl
fstpl
or
insl
rorl
sub
sub
mov
into
jle
inc
xchg
adc
movsl
bound
xchg
xchg
pop
std
fiaddl
inc
mov
ss
popa
pop
xchg
xchg
movsb
push
xlat
leave
mov
xchg
lret
sub
into
xchg
sbb
adcb
jle
mov
faddp
scas
lods
mov
xchg
shll
repz
ret
xchg
push
mov
inc
push
out
adc
sahf
sahf
push
jg
mov
gs
dec
ja
or
push
pop
fbstp
pop
adc
mov
cmpsb
inc
das
and
js
push
or
bound
fs
mov
std
lahf
cmp
clc
cmc
sbb
adc
xchg
out
lahf
push
xchg
leave
into
xchg
out
pushf
fdivl
add
lahf
add
movsb
mov
xor
adc
adc
test
push
mov
push
dec
jmp
arpl
int3
sub
repnz
xchg
pop
and
fiadds
lcall
invd
rorl
and
sub
fldl
in
insb
mov
jb
ja
push
mov
mov
mov
fs
dec
jecxz
mov
bound
int3
and
xchg
dec
out
aaa
clc
xchg
dec
lahf
dec
fcompl
nop
xchg
pop
jb
add
movsb
mov
jg
inc
mov
jg
frndint
out
xlat
je
jg
inc
xchg
adc
adc
mov
iret
push
sbb
or
push
popf
ds
mov
dec
mov
cmpsb
cltd
addb
fisttpl
push
enter
fimuls
outsl
ds
stc
jbe
or
inc
pop
sbb
adc
sbb
mov
bound
dec
pop
mov
sbb
test
jmp
fidivrs
jge
loop
cltd
scas
scas
dec
push
pop
sbb
cwtl
adc
sbb
movsb
ja
sub
daa
xlat
icebp
pop
loopew
insl
ret
movsl
cwtl
or
push
and
pop
fwait
jle
xchg
shlb
testb
jecxz
imull
adc
or
cld
jnp
aam
imul
dec
jmp
inc
xchg
das
cli
cmpsb
push
data16
ret
inc
inc
add
sbb
js
xor
movsb
and
xlat
cld
ljmp
pop
xchg
inc
jle
inc
fs
es
inc
arpl
jbe
pusha
fidivl
jo
shll
add
jnp
push
sbb
or
pop
mov
and
or
push
les
bound
adc
rorb
xchg
pop
xor
mov
inc
inc
lods
mov
dec
fnstenv
mov
dec
push
clc
add
jl
popa
push
push
xor
insb
mov
push
cltd
sub
test
ret
scas
out
mov
cmp
ss
cmpl
inc
cmpsl
mov
mov
xchg
cli
sub
hlt
dec
push
mov
push
je
stos
cs
mov
xor
pop
mov
jns
jns
dec
xchg
and
push
dec
cmp
cld
outsl
add
ja
mov
cs
clc
push
sarl
push
xor
mov
xor
mov
clc
inc
or
cmp
adc
mov
xor
push
out
sbb
push
cmpsb
add
das
jne
and
or
ljmp
mov
and
cld
dec
xchg
adc
jg
test
jecxz
idivb
loope
dec
push
popf
sbbb
cli
in
and
inc
pop
in
enter
fisttps
fisubs
cmp
push
mov
jb
cmpsl
adc
or
adc
fsubrl
jb
cltd
lods
shrb
dec
lods
rolb
mov
pop
in
inc
gs
xor
and
mov
sub
fadds
mov
in
pop
push
mov
add
sbb
orl
pop
test
push
xchg
dec
xor
stos
adc
sbb
movsl
adc
fsubr
in
pop
imul
les
sti
mov
jle
repnz
scas
leave
sbb
imul
sub
add
add
inc
stos
lods
repnz
test
mov
fistpll
dec
cmp
xor
test
aad
aam
mov
pushf
imul
jg
cmc
jg
into
notb
je
repz
int
add
sbb
fwait
mov
mov
ljmp
mov
sbb
pop
sbb
movsl
sbb
lret
cli
aas
jae
xlat
les
clc
cmp
jmp
mov
adc
add
std
xorl
outsb
sub
nop
fistps
lret
fimuls
jne
xor
mov
mov
sub
idiv
mov
lret
push
data16
jge
mov
inc
cmp
cmp
add
es
sub
fwait
std
loopne
mov
in
fwait
mov
in
cs
outsl
xchg
adc
sub
fdiv
and
jae
bound
repnz
sub
inc
mov
inc
shrb
test
adc
fmull
in
add
and
mov
scas
mov
aaa
jbe
pop
mov
jae
movsl
aaa
push
adc
in
fs
xchg
cli
pop
clc
fldt
dec
lea
orl
mov
jae
leave
cmp
popf
cli
xor
adc
mov
inc
movsl
inc
mov
pop
adc
sahf
lcall
cmp
sti
sbb
push
adc
mov
jle
mov
and
adc
push
add
rcrb
jle
popf
cmp
mov
sbb
and
xor
addr16
push
not
push
mov
outsl
push
mov
addb
add
ja
jno
in
or
in
or
cmp
fs
dec
cmp
push
dec
out
inc
xor
mov
popf
cmp
dec
sbb
aad
inc
dec
mov
xchg
dec
out
mov
mov
fsts
fs
movsb
inc
nop
mov
imul
addr16
fwait
in
inc
mov
or
imul
shrb
cltd
inc
dec
cmp
push
cmp
xor
jl
mov
jecxz
adcb
les
insb
test
mov
cwtl
jnp
out
repz
add
mov
daa
or
xchg
loopne
idivl
not
inc
adc
int3
cli
sub
out
pop
jmp
ret
dec
sbb
ficoms
cli
sti
xor
pop
addr16
inc
dec
rorl
enter
add
adc
clc
sub
mov
push
mov
mov
insl
inc
leave
adc
pop
pop
jg
inc
sti
shlb
mov
jp
adc
sub
stos
sub
pop
clc
outsb
mov
into
jbe
int3
sti
jge
jecxz
mov
insl
test
inc
add
mov
cmp
push
out
imul
jb
jmp
call
stc
addr16
xor
sahf
leave
or
mov
cmp
nop
dec
repnz
inc
dec
push
stos
or
add
sub
add
mov
mov
lcall
sbb
dec
or
push
adc
or
or
inc
sub
ret
lcall
out
sti
jae
sbb
aaa
push
sbb
test
ss
xor
mov
xor
test
adc
rorb
scas
xchg
jne
jne
mov
int3
xchg
lock
aas
fisubrl
and
ja
lret
sbb
dec
push
cs
leave
js
insl
movsl
call
filds
mov
mov
xor
cltd
inc
push
inc
sub
outsb
daa
mov
rcr
or
cmp
pop
inc
or
lea
mov
or
mov
or
sub
jge
dec
dec
sub
sub
lods
jns
popa
repz
lret
out
pop
sbb
sub
enter
ds
jge
not
push
fst
pusha
data16
adc
daa
insl
mov
std
bound
jg,pt
sbb
pop
mov
popf
add
mov
pop
inc
jl
push
in
sti
inc
jo
mov
sub
cld
ljmp
rclb
mov
ret
ds
lcall
andl
lods
ret
jg
adc
xor
xchg
aas
or
mov
mov
mov
test
data16
sahf
mov
lods
pusha
add
push
cmpb
cld
xor
pop
xchg
lret
sub
dec
lock
push
xor
iret
adcb
test
call
sub
pop
adc
mov
mov
shrb
xchg
pushf
inc
loop
dec
inc
inc
jbe
or
mov
fidivl
add
jnp
or
pop
fldenv
test
nop
pop
xchg
adc
sbb
fbstp
xchg
xchg
into
add
jb
stc
sbb
sahf
es
mov
filds
bound
mov
adc
add
sbb
into
dec
arpl
imulb
push
in
ja
movsl
je
mov
fstps
jb
jne
cltd
and
sub
pop
movb
roll
jne
scas
inc
test
sub
sub
cmpl
loope
cmc
and
notb
mov
add
xchg
lcall
stos
mov
es
int3
sbb
xor
ljmp
xor
pop
and
outsl
jmp
sub
pusha
lods
inc
cmpsb
pushf
sub
into
adc
mov
mov
push
fsubrl
cmp
lds
add
xchg
test
mov
rclb
ret
lock
lahf
and
mov
les
mov
cmpl
in
push
add
cwtl
pushf
mov
sahf
jae
les
aas
add
sbb
test
add
adc
sar
mov
xchg
cmp
das
sbb
cmpsl
pop
bound
mov
in
adc
dec
push
mov
jmp
in
stos
or
xor
or
mov
fcmovnbe
xor
mov
mov
test
push
mov
scas
and
daa
and
enter
fwait
ds
mov
aaa
lods
cmp
dec
xor
sarb
cld
movups
add
pop
addr16
cmp
jmp
pop
mov
add
scas
cmpsl
lock
stos
cli
insl
test
insb
sbb
mov
ficoml
lds
orb
xchg
arpl
pop
and
cwtl
dec
jp
mov
jns
jnp
scas
sbb
xchg
pop
sbb
ret
pop
nop
je
and
cmpsb
jmp
sub
enter
mov
xchg
sbb
in
cmpsb
rcll
push
xchg
mov
xor
or
pop
cmp
imul
cltd
add
jle
mov
pop
pop
adc
adc
ret
insb
xchg
out
fsubrl
add
xor
lods
xchg
mov
div
fldl
insb
xor
leave
aas
jb
aad
std
pop
shl
or
lods
sbbl
jno
bound
arpl
lock
das
dec
push
fs
cmpsl
xchg
fidivrl
sahf
jne
sbb
ror
pop
test
arpl
adc
xor
fwait
into
gs
cmp
test
in
popa
xchg
mov
movsb
imul
pop
mov
sub
dec
mov
pop
jg
mov
adc
aad
aas
pop
test
cli
shll
ja
test
cmp
add
mov
das
inc
insl
jbe
in
inc
ret
push
mov
mov
inc
sbb
xchg
fcom
into
stos
fimuls
sub
insb
mov
cmp
pop
iret
mov
outsb
out
popa
ret
dec
test
mov
pop
add
xchg
adc
mov
call
mov
stc
subb
in
xor
xor
and
test
insb
dec
je
test
adc
cwtl
sbb
rcll
xchg
xchg
sub
ja
clc
dec
fs
sbb
pop
arpl
sbb
fildll
jl
pop
stc
enter
pop
clc
xchg
mov
dec
xor
or
push
scas
lods
cmp
insl
loopne
pop
scas
repnz
ja
out
add
lret
mov
xchg
add
mov
mov
xor
cltd
popa
mov
popf
jbe
adc
pusha
and
jge
jb
loop
mov
jnp
pop
ds
push
data16
dec
mov
iret
int3
out
mov
jo
dec
popf
or
leave
sbb
add
mov
cltd
dec
cmp
cmc
push
arpl
aam
xor
and
mov
lods
mov
std
arpl
stc
mov
notl
imull
dec
movsl
out
js
fsubrs
cmc
inc
lret
dec
cmp
addr16
sub
cmp
push
jae
pop
hlt
xor
push
xor
cld
cld
mov
or
xorb
xchg
xchg
inc
push
dec
fnstsw
and
xchg
pop
clc
xor
movlps
rorb
sti
adc
inc
add
dec
inc
dec
fadds
std
push
hlt
int
dec
push
jnp
or
jnp
add
movsl
sbb
out
xor
xor
daa
push
lods
jae
insl
orb
xchg
cwtl
or
fdiv
sbb
out
pop
or
fisttpl
jo
roll
push
sbb
push
es
loop
mov
repnz
mov
int3
mov
ljmp
cmp
es
inc
loop
and
nop
sbb
sbbl
dec
pop
stos
mov
stos
fwait
int
ljmp
push
push
call
roll
add
scas
pop
scas
pop
out
cmpsb
lods
add
aas
inc
aas
ficompl
push
fneni(8087
pop
sahf
jns
add
mov
lea
add
dec
dec
pop
sahf
insb
inc
fdivl
ret
call
push
fcmovnu
mov
cmc
leave
out
addr16
test
push
cmp
push
lock
mov
push
pop
dec
cmpsb
ljmp
adc
mull
sbb
sub
movsl
xchg
add
push
cmpsl
cmp
fcompl
outsb
dec
xchg
stos
add
cmp
mov
xchg
add
pop
lea
jp
or
fdivr
ds
jae
ret
pop
cmp
sub
adc
imul
aad
mov
out
aaa
jmp
push
ss
cwtl
in
lcall
cmpsl
lret
iret
mov
fmulp
pop
dec
dec
jns
jle
pop
sbb
pop
pop
data16
cmp
dec
cmp
adcb
sbb
movsb
pop
cmp
inc
out
xor
daa
mov
fcom
fsubs
decl
xor
sub
cld
dec
mov
test
fmulp
insb
push
mov
push
jp
shr
adc
mov
jge
fnsave
loope
in
push
and
arpl
sbb
xchg
add
pop
inc
lods
mov
sub
dec
ret
sahf
icebp
repnz
adc
sub
test
fwait
cwtl
repnz
repz
sarb
movsb
stc
jno
xor
pop
or
or
sahf
inc
sub
adc
push
sahf
clc
sub
adc
fsubrl
leave
loope
js
aam
je
aam
out
add
push
push
or
lahf
mov
sti
and
jge
jmp
ljmp
mov
pop
inc
testb
mov
xor
dec
pop
jp
sahf
add
into
cltd
mulb
adcl
sub
jmp
sar
and
mov
inc
test
sub
fsts
je
push
mov
rcl
cmp
int
xchg
sarl
push
bswap
pop
push
sub
imul
test
leave
mov
push
in
popa
dec
fsubrp
pop
push
pop
ja
mov
icebp
hlt
or
xchg
test
mov
lcall
pop
mov
mov
dec
jo
sub
scas
outsb
inc
lock
movb
cmp
iret
je
clc
adcb
fdecstp
fists
pop
add
and
mov
add
mov
inc
push
push
nop
hlt
loope
pushf
mov
push
cmpsl
add
rcrb
in
or
jmp
pop
push
jbe
lret
push
cmpsl
inc
icebp
in
mov
and
enter
std
or
mov
push
cmp
push
cmp
pop
add
mov
jp
mov
or
imul
enter
ss
push
push
pop
xchg
aas
push
iret
mov
cld
inc
sub
push
adc
hlt
scas
push
dec
xchg
jle
ret
mov
data16
inc
jns
js
push
sbb
mov
xchg
pop
int
adc
mov
jo
scas
fisubrs
inc
movsl
pop
pop
mov
xchg
mov
dec
inc
cwtl
insl
call
or
inc
and
xor
inc
clc
int
test
mov
negb
mov
mov
hlt
push
xor
push
mov
ss
sarl
movsl
ljmp
je
dec
dec
dec
cmp
into
mov
mov
mov
loope
ja
mov
lret
jne
inc
cwtl
loop
dec
jecxz
xchg
fidivrs
fadds
mov
rcr
cltd
hlt
pop
inc
mov
ffreep
mov
mov
scas
xchg
and
outsl
add
pop
fdivrl
js
or
ret
or
jp
scas
xchg
rorb
fmull
fstps
jle
shlb
sub
lahf
adc
mov
xchg
fdivrl
or
bound
sub
mov
sbb
sti
imul
popf
jb
ficomps
add
test
add
aas
lds
sub
cld
fwait
dec
mov
out
movsl
rorb
fs
fstpl
fwait
dec
mov
mov
or
aam
ficomps
jmp
lcall
xor
xchg
in
lcall
mov
jg
aaa
pop
inc
insl
test
ljmp
sbb
mov
mov
inc
mov
bound
ret
in
leave
pop
int3
xchg
adc
mov
inc
in
mov
add
sub
cmp
popf
insl
decb
rcl
adc
scas
add
cli
xor
xchg
cltd
movsl
sub
aaa
cmp
push
cmpsl
xor
dec
xchg
mov
subps
popf
repnz
xor
rclb
pop
cmp
push
test
imul
jge,pt
sbb
jp
mov
out
and
lret
xor
rorl
lret
mov
popf
sarl
sub
out
and
arpl
xchg
pop
xchg
jge
jo
scas
dec
jns
jecxz
repz
shll
inc
xor
movsl
jl
pop
xlat
nop
and
pushf
inc
mov
mov
push
mov
popf
aas
and
stos
dec
pop
or
pop
test
scas
js
loop
popf
jno
sbb
cwtl
push
das
or
cmc
rol
jecxz
mov
push
adc
sbb
xchg
jnp
pop
mov
adc
jmp
leave
sbb
add
xlat
lahf
into
xchg
xor
dec
xchg
inc
push
notl
inc
test
aaa
push
sti
jl
inc
js
push
push
shrl
clc
xchg
testl
jae
jno
sub
in
xor
or
and
rol
ds
pop
ret
je
xchg
add
rolb
cmpsl
cmp
mov
cmp
adc
jg
out
inc
pop
das
jae
mov
and
iret
sbb
fists
negl
das
mov
aas
jo
jbe
mov
push
sbb
inc
sub
icebp
pop
outsl
mov
adc
mov
aad
add
xchg
mov
sub
sub
pop
pop
adc
out
daa
mull
jle
mov
incl
jae
out
pop
repz
cmp
cli
pop
cmc
lret
sub
xor
out
in
outsl
jge
movb
hlt
shll
pop
cmp
roll
loopne
std
pop
jmp
push
push
out
stos
adc
mov
jecxz
dec
jle
or
out
mov
testb
mov
jb
std
xor
push
ds
outsb
xor
xchg
cltd
inc
adcb
sti
lret
lock
jp
lahf
sbb
aaa
jp
jge
in
and
stos
jge
cmc
mov
mov
push
je
movsb
das
sub
add
push
addr16
and
sub
adc
stc
leave
cmpsl
das
push
ret
xchg
jp
clc
adc
mov
or
icebp
js
push
cltd
fldl
into
and
lret
mov
mov
stc
push
cmp
sub
push
or
jo
mov
mov
shrl
maskmovq
imull
jno
sub
test
xor
jns
out
fstpl
jp
cmpsb
mov
out
dec
sbb
cltd
cmpsl
leave
js
sub
shrb
add
jbe
ss
fimuls
ret
inc
pop
xchg
addr16
dec
imul
fucomip
adc
and
xor
stos
sbb
and
adc
cs
push
addr16
jno
popf
pop
pop
add
ljmp
out
sub
rorl
dec
ds
mov
test
loopne
cmp
aaa
ret
fistpl
xchg
clc
aam
xchg
cmpsb
lods
lods
pop
xchg
lahf
inc
mov
aad
cmp
xor
mov
lahf
mov
loope
xor
pusha
and
sbb
pop
jl
or
repz
mov
jl
inc
pushf
mov
bound
xor
jo
cmp
out
mov
int3
adc
roll
mov
mov
mov
in
js
fidivl
stos
cmpsl
add
sub
imul
push
mov
lcall
lret
xor
lds
mov
xchg
pop
inc
add
adc
lods
cli
mov
or
insl
sub
mov
inc
and
nop
lods
mov
cmp
test
pop
pushf
xchg
rcll
push
movsb
int3
mov
in
aas
mov
pop
mov
mov
xchg
scas
je
push
daa
js
int3
loope
insl
mov
mov
and
in
into
xor
xor
jmp
cmp
xor
sbb
cmpsb
cmp
mov
dec
enter
lret
hlt
xchg
rcl
push
cmp
xchg
lret
in
aas
adc
fildl
int
rcrl
stos
pop
lea
add
jnp
jno
add
pop
addr16
nop
push
mov
hlt
push
test
addl
sti
je
lret
cmc
cli
adc
jp
xchg
jp
and
dec
lods
lea
xchg
pop
ret
push
in
out
ret
xor
inc
iret
sub
cmp
xchg
mov
sbb
sbb
out
inc
addr16
xchg
or
jmp
jge
sub
loop
adcl
jmp
push
ret
test
int3
sbb
pop
cmp
loopne
jae
movsl
lret
xchg
jne
push
push
loop
xor
jo
int3
or
mov
jns
mov
push
cmp
lret
xor
out
ret
xchg
pop
add
sbb
ret
jo
cmp
mov
push
sbb
or
push
pop
add
sbb
push
add
mov
test
sbb
incl
add
rcll
mov
xor
adc
adc
hlt
imul
mov
loop
movsb
mov
mov
mov
mov
fs
addr16
sbbl
mov
or
jmp
fbld
add
in
sbb
dec
adc
mov
or
ficomps
nopl
dec
jo
lock
jno
test
cs
sti
add
and
xchg
enter
stc
mov
cld
xor
add
xor
mov
rclb
mov
imul
test
mov
mov
std
les
mov
aam
and
add
inc
fwait
mov
cmp
sub
ljmp
dec
inc
fwait
add
jmp
pop
mov
pop
adc
sub
lret
adc
pop
and
outsl
int
and
es
mov
xchg
pop
pop
or
daa
out
and
push
add
mov
adc
aaa
adc
jno
add
inc
pop
les
mov
into
xlat
mov
or
cmc
inc
jge
out
push
stc
mov
mov
or
xchg
adc
add
fidivrs
inc
testb
pop
mov
or
sub
les
mov
test
jmp
adc
pushf
mov
dec
sbb
sub
mov
mov
lret
and
xchg
mov
gs
mov
rorl
mov
popf
sbb
mov
leave
cmp
int3
cltd
lods
mov
sbb
test
mov
adc
sbb
push
out
xchg
daa
ja
push
xor
cmp
jmp
inc
pop
mov
in
or
in
cld
sbbb
int
cmp
xchg
aad
mov
pop
test
popf
sub
je
pop
mov
test
icebp
call
cmp
nop
mov
fists
xor
cmp
ja
xor
xchg
out
mov
scas
dec
jae
fsubrs
jp
scas
push
inc
shlb
daa
scas
inc
in
stos
lcall
adc
xor
adc
inc
loopne
lds
push
sub
repnz
mov
shl
inc
call
sarb
xchg
jp
add
sbb
add
cmp
adc
jle
sub
icebp
std
repnz
imul
fdivs
cmp
das
ljmp
pop
push
xchg
mov
repnz
movsl
add
push
fisubrs
ljmp
jl
mov
jbe
cmpsl
pop
push
fcomp
pop
cli
imul
and
xchg
mov
mov
push
inc
mov
inc
add
daa
out
xchg
mov
and
imul
xor
cmpsl
fucomip
xor
enter
nop
add
adc
into
and
fsts
xchg
out
rcll
pop
push
inc
jno
pop
bound
pop
inc
sbb
jb
test
inc
das
sarl
mov
mov
mov
push
hlt
pop
aad
jns
jle
leave
aam
add
lahf
mov
mov
idiv
loope
inc
shr
cmp
inc
int3
xchg
mov
loop
sub
sti
inc
repnz
outsl
imul
lret
stos
cld
and
fnsave
sbb
mov
xchg
sbb
mov
stc
adc
xor
aam
xor
mov
lcall
dec
test
ficomps
push
insl
sahf
leave
cmp
jp
and
push
adc
mov
dec
test
dec
jb
mov
lret
pop
mov
cmp
xor
out
rcrb
pop
fcoml
or
aas
fstpt
leave
sub
test
pop
ds
cmp
lret
xchg
pop
fiaddl
into
sub
int
dec
cmp
jo
cwtl
stos
ffree
out
inc
fcom
stos
mov
mov
cmpsl
test
js
cmp
add
repnz
fnstsw
je
lret
cmp
xchg
es
in
mov
sbb
divl
psubusb
cmp
dec
push
mov
sbb
test
or
mov
nop
mov
ret
push
and
lock
push
inc
mov
ds
addr16
arpl
std
inc
sub
jg
ret
ret
add
adc
mov
mov
jmp
cmp
cmp
mov
mov
and
out
movsl
fsubrs
push
imul
push
fstpt
add
out
jle
lret
shrl
pop
add
repnz
xor
xchg
dec
xchg
icebp
je
adc
dec
push
iret
negb
add
fiadds
mov
and
sub
jnp
scas
ret
divl
jo
cmp
push
cltd
xor
je
mov
scas
mov
push
fisubrs
fwait
mov
dec
pusha
sub
add
cltd
data16
mov
leave
ret
addr16
ja
mov
sub
adc
in
ljmp
inc
pusha
cs
pop
adc
sbb
insb
hlt
out
movsl
inc
fisubs
xchg
jae
in
dec
mov
mov
outsl
ficoms
iret
dec
mov
lea
dec
std
sub
xchg
xorb
jecxz
xor
inc
das
out
scas
in
inc
in
aas
mov
inc
call
mov
stc
psadbw
sbb
inc
pushf
dec
mov
std
dec
dec
pop
pop
out
flds
mov
movsl
movsb
jns
out
push
push
mov
shrd
mov
sub
int
fisubrl
nop
ja
push
inc
mov
sbb
or
sbbb
addr16
into
lret
push
movsb
or
add
mov
jp
kmovw
mulb
adc
les
adc
mov
jecxz
push
mov
push
xchg
std
dec
mov
outsl
in
les
outsw
sbb
push
or
cmpsb
sub
cmp
call
scas
shrl
into
mov
aam
clc
fwait
in
push
inc
pop
inc
dec
clc
jmp
scas
push
xlat
mov
fmuls
cltd
push
stos
mov
fndisi(8087
inc
ret
scas
fwait
jnp
mov
movsl
outsl
outsl
inc
fsubl
push
test
imul
mov
inc
xor
shrl
add
adc
add
xchg
test
fs
xchg
and
dec
mov
pop
cltd
push
xorb
cltd
imul
ret
pop
test
insb
fwait
ljmp
stos
mov
cmpsl
sbb
in
mov
jg
adc
leave
mov
je
or
popl
xchg
pop
push
add
cmp
inc
mov
scas
cmpsb
movsl
ja
cli
adc
xchg
stos
aam
loop
sub
mov
test
push
inc
jae
or
rcr
inc
mov
sti
jmp
call
push
inc
mov
int
sahf
sbb
orb
pop
dec
dec
fsubl
insb
and
dec
add
mov
pop
mov
imul
test
testb
push
pop
or
pop
sub
lahf
sbb
imul
mov
mov
decb
xchg
add
mov
sbb
xchg
and
inc
mov
push
dec
and
movsb
jne
xor
adc
outsb
lret
mov
testl
jnp
pop
mov
lock
fisubs
pop
shll
andl
scas
clc
xchg
lock
mov
mov
popa
movsl
or
mov
push
shlb
fistps
cmovg
or
dec
jl
push
loop
xlat
imull
xor
fsubl
dec
negb
sti
mov
push
add
imul
pop
je
jge
lods
cld
adc
adc
leave
and
cltd
enter
push
xor
pop
test
add
in
or
scas
test
inc
js
and
iret
jo
pop
loope
jno
popa
ror
lea
jo
fdivl
push
mov
mov
lea
imul
in
mov
xor
add
cmp
add
mov
ret
subb
inc
mov
xchg
movsb
ds
popa
inc
loope
fidivl
pop
and
inc
xor
mov
movsl
js
mov
cmp
mov
mov
cmpsl
mov
fldcw
je
ret
fsub
jno
gs
fstps
iret
push
testl
std
mov
je
insl
mov
test
in
fisubrl
jno
push
and
stos
xchg
xor
push
mov
mov
cmp
insl
mov
out
xchg
cmpsb
and
pusha
repnz
cmp
movsl
cmp
mov
je
adc
push
adc
add
cltd
jl
negl
or
xor
lea
mov
aas
pop
push
lcall
xchg
ret
sbbl
imul
daa
out
inc
cli
das
fs
repz
lods
jno
leave
cli
repz
mov
lea
pop
ss
cld
scas
into
xchg
test
jb
stos
loope
jmp
sub
shlb
pop
pusha
test
mov
fcompl
scas
lret
mov
sub
xlat
icebp
adc
jo
and
shrb
and
arpl
xchg
mov
mov
jl
inc
mov
inc
out
pop
std
insl
dec
stos
fbld
jmp
mov
cld
arpl
dec
shll
and
loop
subl
mov
add
jmp
stos
lcall
jge
add
and
jl
dec
sbb
inc
sub
push
inc
movsl
ja
shrl
push
sti
xchg
dec
in
lods
cmpsl
popa
mov
in
sti
and
imul
push
push
push
dec
jp
jns
fwait
dec
sbb
mov
inc
add
add
in
js
jge,pn
mov
adc
and
mov
mov
jb
loop
xchg
adc
ja
adc
loope
andl
mov
insl
dec
push
lds
mov
pop
fstpt
adc
int
jp
inc
frstor
jle
xchg
idiv
ss
jno
mov
mov
mov
sub
xchg
rol
mov
outsl
xchg
movsb
jmp
loope
sub
aas
sub
jge
xchg
inc
and
push
dec
ret
inc
push
popf
cmc
or
data16
cli
mov
lahf
push
mov
sbb
xchg
fisubrl
insl
dec
dec
mov
pusha
pop
mov
pop
fsubl
rclb
ret
mov
je
mov
inc
xor
push
pop
sbb
inc
dec
ljmp
psllq
aad
loopne
cli
hlt
je
adc
popf
or
xorb
test
aas
jne
push
adc
push
rcll
sbb
mov
lods
inc
hlt
insl
popa
add
mov
cli
mov
lock
mov
call
mov
cwtl
sub
xchg
hlt
inc
inc
mov
testl
adc
pop
dec
aam
mov
cmpsl
or
sub
getsec
mov
mov
adc
jae
xor
aad
pop
insb
int3
loope
xchg
lret
sbb
and
mov
das
insl
inc
repz
xlat
in
sub
and
loop
mov
push
lldt
arpl
mov
outsl
scas
outsl
sbb
jecxz
and
mov
push
fstpl
mov
outsl
into
cmp
std
out
xor
add
repnz
or
insl
push
loopne
xchg
jge
xchg
into
rclb
or
cwtl
xchg
dec
push
fisttpl
and
jecxz
rcrb
cmpb
icebp
cmp
addr16
cmp
pop
push
jmp
and
jecxz
xor
sbb
sub
repnz
dec
jg
adc
cmp
push
out
out
lret
push
fists
pop
call
cmp
fnsave
ss
add
and
insl
ja
and
leave
int3
push
repnz
gs
stos
outsb
or
xor
je
mov
loope
test
jns
das
pusha
mov
pop
push
ret
js
dec
jge
add
rcr
xchg
jae
adc
dec
cwtl
pop
xor
mov
xchg
scas
inc
lods
in
jns
dec
cmp
mov
and
pop
jbe
test
repnz
movsb
jae
test
jmp
cli
jp
dec
inc
dec
adcb
btc
int
or
push
and
daa
out
les
jne
stos
loopne
cmpsb
inc
dec
clc
push
sbb
aas
mov
scas
jg
fs
sub
mov
inc
cmp
xchg
adc
out
push
xchg
xor
inc
mov
push
pop
mov
lods
jg
stc
mov
and
and
ror
lods
sub
mov
or
in
test
lret
stc
mov
push
mov
aas
mov
in
dec
or
jb
repz
popa
pop
cltd
ret
sbb
dec
cs
inc
in
or
cmpsb
popa
aad
and
int
adc
cld
das
fldt
test
in
sbb
fnstcw
pop
bound
mov
lcall
rorb
aam
pop
adc
sahf
or
xor
scas
jo
loop
fimull
bound
insl
incb
scas
or
mov
fstl
inc
xor
mov
jg
jecxz
enter
cmp
add
cmpsb
cmp
dec
loop
lea
test
dec
loop
sbb
pushf
ljmp
push
xchg
add
add
cli
lods
fwait
xchg
movsb
mov
imul
jle
mov
cs
adc
stc
push
add
das
cwtl
rcr
dec
std
sahf
mov
xor
addr16
jno
push
and
arpl
sbb
cmpsl
push
mov
ficompl
xchg
jnp
js
sub
and
push
cmp
cmpsb
jns
xchg
repnz
aas
fucom
aaa
fs
push
pop
xchg
insl
xchg
into
push
push
inc
pop
mov
mov
jp
insl
das
inc
push
lock
fiaddl
push
mov
cwtl
in
roll
mov
mov
inc
test
les
jae
das
repz
mov
cmp
dec
add
rclb
iret
xor
repnz
fldl
xor
jecxz
sbb
xor
idivb
push
pusha
adc
cmp
sbb
jg
test
movsb
gs
testl
xlat
xor
inc
dec
inc
sub
pop
ss
push
adc
pop
fidivl
sahf
pop
mov
fxch
xchg
mov
push
fisttpll
pop
js
in
inc
or
pop
lods
pop
out
xchg
cmp
dec
mov
or
test
xchg
inc
inc
pop
sub
ja
and
mov
xor
popf
movsb
test
test
mov
aas
int3
push
lea
fisubrl
adc
mov
inc
mov
pop
mov
call
out
enter
mov
sbb
mov
inc
inc
xchg
cli
adc
roll
sbb
ss
xchg
gs
and
xor
inc
vrcpps
dec
adc
jp
and
lahf
xor
cwtl
dec
mov
push
aaa
std
sbb
int
push
jbe
subl
popa
or
xor
jp
mov
loopne
mov
mov
fldln2
push
mov
call
jp
inc
fs
cld
pop
in
xor
or
xor
mov
push
push
jp
xchg
or
or
fisubrl
mov
daa
movsl
cmp
or
call
ret
ret
clc
out
in
mov
cmp
mov
in
jns
and
rolb
jo
adc
jecxz
out
cmpsb
out
test
mov
pop
xchg
mov
in
adc
int3
cwtl
inc
dec
xor
push
mov
sahf
gs
imul
dec
mov
pop
mov
sub
clc
inc
and
push
inc
mov
xor
lret
sbb
pop
pop
fdiv
ss
es
mov
mov
mov
mov
jns
insl
stos
leave
sub
hlt
decl
pusha
das
not
call
sub
test
sub
js
shlb
push
punpckhbw
add
iret
and
xchg
or
js
pushf
mov
lret
enter
clc
pushf
bound
mov
test
adc
rorl
or
popa
cmp
sbb
inc
in
repz
dec
das
sarb
pop
aas
mov
stc
rcrb
fsubrl
sbb
out
mov
in
lods
dec
pusha
filds
movsb
cwtl
push
cwtl
sbb
mov
rol
xor
negb
or
mov
jecxz
cmpsb
jno
and
leave
std
and
adc
mov
inc
aas
dec
add
ja
pop
push
in
cmp
mov
es
inc
push
clc
dec
iret
pop
fcomip
cmpl
testl
and
push
jbe
shl
inc
cwtl
int
push
mov
in
adc
add
je
out
sub
std
sahf
lret
mov
in
out
loop
sub
inc
jge
je
mov
fildll
add
cmp
push
sub
xor
push
and
jno
lods
das
adc
adc
andl
pop
sub
movb
daa
sub
xchg
mov
fildl
push
pop
sub
cmp
sti
les
lods
js
inc
les
xor
lea
icebp
pop
cltd
sbb
cmp
mov
call
pop
inc
inc
test
or
jle
and
mov
adc
out
jnp
jb
lahf
test
inc
and
mov
push
and
cmp
cltd
mov
bnd
mov
loop
mov
stos
int
rorb
adc
mov
or
dec
adc
dec
pop
jbe
into
inc
xor
inc
clc
and
and
and
daa
mov
or
loopne
dec
or
shll
or
bt
int3
xor
repnz
sbb
or
pop
mov
scas
jo
test
xor
mov
and
adc
inc
fcmove
jle
add
movsl
push
push
fisttpll
sub
addl
test
jl
ja
cltd
fmuls
fnstenv
push
mov
aaa
scas
xor
mov
ja
ljmp
jmp
adc
dec
pop
aam
sti
push
shrl
pop
lds
jle
push
push
mov
fstpt
add
xor
jno
fwait
out
add
and
jae
outsl
div
push
jnp
fwait
xor
pop
jbe
mov
dec
sbb
sbb
mov
dec
dec
push
arpl
mov
test
out
out
inc
ljmp
je
pop
add
cmp
movsl
inc
shrb
dec
pop
das
inc
shll
loop
or
sbb
test
lock
adcl
sub
nop
mov
add
imul
fsubrl
ljmp
enter
pop
lcall
popf
jmp
pop
movsl
jnp
andb
inc
jecxz
rcrb
dec
sti
mov
pop
bound
adc
ret
jecxz
jae
cltd
js
jl
imul
jb
mov
adc
enter
repnz
out
inc
pop
add
cmp
adc
pop
nop
cs
cmp
add
outsb
cmp
sbb
roll
xchg
daa
adc
mov
sub
and
xor
leave
xchg
sbb
andl
sub
fistps
test
sarb
mov
cmp
adc
mov
fistpll
push
jl
sbb
inc
xchg
int
pop
fsubrs
mov
sbb
je
jnp
pop
push
mov
dec
add
and
stc
push
out
jae
jae
add
call
pop
inc
xchg
ret
nop
roll
fwait
int
jo
ja
shl
ret
cwtl
sub
jae
stc
imul
mov
or
aam
outsb
pop
mov
jno
push
xor
mov
pop
repz
cmp
dec
sub
call
int
pop
repz
lds
divl
out
loop
dec
add
outsb
or
sub
cmp
mov
and
and
repnz
popa
or
pop
pusha
notb
push
cltd
adc
xor
fisttpll
insb
sub
imul
jae
or
leave
mov
xchg
jnp
mov
inc
ss
xor
loop
dec
and
mov
pop
lds
popf
dec
cwtl
mov
pushl
jb
inc
rcrb
loop
xchg
or
out
add
mov
pop
nop
icebp
or
arpl
pop
adc
mov
add
ja
adc
movsl
repz
stos
cmp
sahf
ffree
jp
mov
xor
add
dec
test
cwtl
inc
fcompl
divb
negb
dec
daa
das
sbb
add
xor
adc
push
repz
test
mov
subl
mov
cli
movsb
sahf
testl
mov
and
inc
mov
push
in
sbb
mov
leave
mov
int
outsl
je
mov
push
fwait
mov
mov
call
push
or
inc
or
pop
insl
xor
pop
add
cs
push
inc
aaa
and
movsb
sub
xchg
cmpsl
fwait
adc
icebp
idivb
push
repz
cmp
or
jl
cmp
imul
lock
jns
sahf
divb
stos
sbb
fstps
dec
sub
cwtl
xchg
add
pop
fcoms
sbb
cmpsb
out
inc
outsl
mov
lea
add
add
sbb
fnstsw
inc
je
dec
test
or
ficoml
mov
dec
sbbl
push
icebp
scas
sub
cmp
jb
fiadds
push
daa
lahf
push
and
pop
xchg
jle
sub
or
mov
sar
pop
adc
pop
push
lock
rcrl
mov
push
ficompl
pop
cmp
dec
inc
or
dec
repz
out
sbb
or
or
cwtl
xchg
push
jg
outsl
mov
sub
mov
shrb
sbb
xor
iret
dec
add
fdivs
or
lock
test
fists
mov
cmp
inc
push
js
jle
mov
push
aad
adc
cmpsl
adc
cltd
adcl
mov
xor
jmp
arpl
test
mul
repz
or
or
rcrl
cmp
cli
popa
sub
subb
cwtl
adc
loopne
adc
cmp
das
dec
test
and
imul
fbstp
push
sbb
mov
mov
fidivrs
and
sub
stos
cmp
push
in
xor
adc
inc
or
mov
dec
or
sub
mov
mov
xor
data16
adc
adc
jbe
std
ds
fadd
outsl
in
cmp
adc
cmp
fincstp
cmpsb
add
jmp
mov
fcomp
sub
pusha
jge
out
rol
sub
ret
std
mov
push
sub
out
cmc
jle
imull
jmp
movsb
inc
sarw
into
xchg
daa
and
pop
mov
in
stc
pop
cmp
or
les
and
mov
sub
xchg
inc
mov
gs
push
jecxz
pop
mov
pop
xchg
arpl
pop
ljmp
andl
cmp
and
mov
shll
and
filds
insl
shl
in
fs
je
xchg
cs
sub
xchg
bound
mov
loope
xchg
sysret
fistl
repz
cmp
mov
pop
test
inc
or
cmp
je
inc
lret
sub
xor
inc
sbb
popa
mov
jmp
push
or
mov
pop
fnsave
mov
add
sahf
jg
popf
pop
out
cltd
popa
inc
inc
or
imul
clc
xor
es
movsb
aaa
mov
cmp
jge
dec
sub
imul
or
push
loopne
mov
jmp
ret
mov
gs
repz
lret
cli
mov
jp
mov
jl
pop
in
ljmp
mov
loope
push
or
adc
jle
adc
cld
pop
shl
sub
or
sub
outsb
loopne
inc
and
pop
dec
mov
xor
ljmp
std
insb
push
sbb
nop
iret
out
sbb
jge
loopne
pop
into
and
sub
push
add
or
out
fistpl
xchg
or
add
pop
jns
cmp
push
xchg
loopne
pop
sti
sub
jecxz
mov
jo
mov
and
push
testb
pop
fbstp
xchg
sarb
and
into
sarl
fsub
lods
mov
jbe
and
loop
push
mov
dec
hlt
repz
xor
cmc
xrelease
mov
cmp
mov
mov
rolb
in
xor
xchg
sub
outsb
addb
test
arpl
push
push
enter
loop
mov
inc
mov
cld
dec
cltd
divl
mov
scas
or
gs
fwait
iret
pushf
mov
or
pusha
mov
dec
pusha
add
xchg
pop
dec
dec
pop
mov
adcl
pusha
sar
fcoml
loopne
filds
pop
sbb
loopne
shr
or
sub
daa
test
push
push
xlat
or
pop
mov
jae
insl
loop
movsl
popf
xchg
xchg
aam
mov
adc
or
int
icebp
ja
je
or
leave
xor
ds
rclb
imul
pop
movsb
cmp
push
ret
and
aaa
add
pop
pop
pop
pop
pop
cmp
pop
mov
sbb
rclb
shll
ljmp
movsb
add
xchg
mov
dec
or
ljmp
cmc
lods
mov
sub
leave
sbb
addb
int
in
dec
popa
in
jecxz
push
es
lret
pop
aas
mov
je
lcall
mov
fisttps
jbe,pt
idivl
pop
test
out
in
xor
push
or
ret
pop
cmpsb
and
adc
sahf
or
xchg
lahf
cmpsb
xor
xchg
es
data16
out
push
sti
pushw
shrl
cli
sbb
call
cld
xchg
mov
shrl
dec
jmp
mov
or
std
mov
add
pop
push
sarl
in
cmp
aad
add
jae
mov
adc
jo
inc
pushf
dec
cmpsl
xchg
sub
push
jp
or
add
mov
fs
fcompl
pop
sti
mov
cmp
cmp
mov
jno
out
sti
fnsave
cwtl
loope
cmp
add
movsb
push
test
je
and
sub
adc
pop
je
mov
in
inc
mov
ljmp
xchg
cmp
sbb
cmc
jecxz
mov
dec
xchg
test
mov
xchg
outsl
adcl
cmove
dec
hlt
sqrtps
add
shr
std
scas
add
xchg
pop
and
sub
lock
aam
or
add
mov
cmp
add
cmp
test
adc
std
ds
jle
test
mov
or
rcr
bnd
dec
ret
aaa
insl
jno
dec
mov
xor
jle
sub
loopne
xchg
sbb
mov
xchg
pusha
insl
dec
cltd
push
lds
cs
ret
aaa
mov
adc
jmp
icebp
lcall
cmp
push
imul
lret
inc
movsl
std
jbe
dec
repz
into
push
mov
add
mov
outsb
das
inc
inc
aad
push
je
mov
and
inc
xchg
mov
jecxz
popf
js
bound
push
push
adc
mov
push
sbb
js
int3
xchg
cmp
enter
gs
pop
pop
mov
test
mov
test
out
push
fidivrl
cmpsb
icebp
not
leave
insb
pop
call
cltd
movsb
sbb
pop
leave
frstor
inc
fs
adc
jb
hlt
pop
inc
pop
push
dec
inc
sbb
pushf
pop
add
and
loopne
pusha
int
jbe
inc
shll
fmulp
repz
test
ret
xor
pushf
enter
movsb
cli
dec
inc
in
and
xor
shll
sbb
les
jbe
mov
jg
lods
ret
xor
aas
adc
pushf
jl
add
inc
add
mov
mov
leave
mov
cltd
push
xor
js
jnp
pop
sbb
repz
out
stc
cmp
adc
mov
rcll
bound
scas
pop
mov
int
mov
lcall
stc
cmp
xchg
fwait
push
fs
push
mov
mov
popa
pusha
daa
pop
push
iret
adc
aad
mov
add
cld
push
jnp
xor
cwtl
out
jnp
imul
adc
ss
ret
jmp
push
mov
imul
jmp
mov
sbb
sbb
sbb
out
js
les
cwtl
les
daa
mov
inc
pop
sbb
nop
push
outsb
push
push
pop
or
andl
adc
cmpsb
pusha
ja
outsl
push
popa
aas
int3
dec
pop
popa
addr16
pop
jo
xchg
adc
adc
mov
jl
pop
cs
insl
loope
mov
fnstsw
popa
push
lods
or
into
push
ja
mov
pop
outsl
or
push
data16
sbb
adc
into
cmp
aad
stos
pop
sti
mov
scas
mov
fnstsw
mov
push
std
negl
pop
ret
push
push
adc
shl
cmc
mov
ljmp
movsb
in
jle
xor
repz
push
jo
xor
push
pop
pop
lods
jl
dec
ljmp
sub
and
leave
mov
iret
jecxz
shrl
mov
jno
mov
dec
pop
xchg
lret
xor
stos
es
xchg
mov
push
faddl
scas
loop
sbb
push
mov
loop
add
fadd
mov
fstpl
mov
je
mov
pusha
xchg
clc
sbb
push
jae
lahf
inc
xchg
adc
cmp
cltd
dec
cmp
ret
mov
mov
pop
and
pushf
enter
scas
hlt
cwtl
and
sti
je
or
mov
mov
cs
fimuls
cmp
cmp
pop
fimuls
mov
mov
and
scas
movsl
mov
add
lods
pop
or
es
jb
addr16
xchg
lret
mov
sbb
popf
sbb
mov
loopne
push
movsl
je
mov
notb
jb
adcb
mov
cld
cmpl
data16
jge
mov
fwait
fwait
cmpsb
and
add
push
sbb
test
enter
dec
shl
xor
cmc
cmp
add
jnp
dec
jge
dec
lock
mov
lods
ss
cs
gs
enter
mov
pusha
and
test
push
dec
shrb
xlat
inc
sbb
xchg
fsincos
mov
ret
fisubs
ja
xor
jl
fiadds
fbld
pop
sbb
leave
fdivl
sub
lea
xchg
pop
mov
inc
mov
pop
dec
das
cltd
outsl
test
lret
mov
or
xchg
sub
xor
arpl
sbb
push
cmp
push
xor
pop
fiaddl
outsb
in
jmp
sbb
lcall
int
sbb
pop
mov
dec
xor
xor
loop
lods
push
addr16
mov
mov
and
pop
push
or
jmp
cmpsb
pushf
jge
cmpsb
cmc
xchg
hlt
push
test
stc
iret
nop
testl
dec
inc
cltd
push
inc
jae
dec
in
movsl
jmp
pop
hlt
std
adc
pop
int3
and
lock
ds
lods
pop
sarb
sub
jle
push
rcll
iret
out
xchg
inc
outsb
rcrb
ret
dec
and
push
pushl
inc
xchg
inc
mov
mov
mov
rolb
jne
loop
in
ficoms
repnz
insl
lds
dec
pushf
adc
inc
jae
cmp
jb
std
push
into
andb
mov
out
int3
dec
in
mov
pop
loop
xchg
mov
xor
cmp
inc
cld
or
pop
sub
push
call
arpl
mov
pop
mov
sti
insl
bound
mov
in
ljmp
enter
or
push
pop
push
call
sub
adc
les
shll
push
dec
push
popf
shll
fwait
xor
sub
and
sub
cmp
lret
addb
mov
movsl
dec
dec
mov
leave
sub
inc
push
ret
xchg
jg
aas
or
push
iret
cmp
in
sbb
jb
jbe
testb
push
lcall
mov
jg
fimull
inc
mov
pop
push
out
movsl
mov
pop
outsl
dec
leave
push
clc
loope
shll
dec
cmp
cmp
mov
pop
adc
sbb
popa
mov
or
addr16
imul
insl
dec
cmp
vmovntdq
mov
pop
cs
shrl
aad
jecxz
mov
xor
push
pop
andl
cmp
es
jb
or
mov
arpl
and
push
sub
and
sub
add
stos
mov
pop
xchg
js
imul
dec
push
lods
mov
shrl
int3
inc
add
inc
lahf
mov
outsl
pop
out
pop
sbb
shlb
and
imul
les
sbb
out
dec
movsb
mov
push
jns
mull
xor
cltd
add
lahf
je
faddl
dec
inc
bound
xor
adc
push
xchg
mov
add
dec
mov
mov
xchg
pop
cmpsb
bound
cmpsb
mov
and
inc
cmp
inc
inc
out
pop
pop
dec
jge
stos
test
mov
icebp
xchg
add
or
int
pop
or
imul
iret
cld
clc
push
xor
or
adc
test
sbb
xor
fs
sbbl
enter
and
inc
cmp
cmpsl
jbe
and
fstpt
cmpsl
adc
es
in
pop
lcall
in
out
insb
or
sbb
inc
mov
mov
xchg
ljmp
ret
add
sub
mov
add
lahf
adc
cmp
push
push
pop
xchg
lds
pop
enter
popa
or
mov
adc
daa
push
mov
test
xchg
and
xchg
cmpsl
movsb
fisubrl
or
pushf
mov
ljmp
testl
in
inc
adc
pop
xor
xor
mov
cmp
jle
sbb
push
jle
adc
add
outsb
inc
and
cmc
cmp
insl
outsb
lret
sbb
mov
lock
cmp
je
sub
ja
sbb
mov
push
inc
lcall
cmp
call
jb
xor
into
fldcw
xchg
mov
inc
push
xlat
iret
pop
jmp
jl
in
push
scas
outsl
clc
sbb
xor
mov
hlt
dec
stos
sub
inc
lods
pop
in
cli
jmp
xor
sbb
fmull
or
xor
icebp
daa
js
jmp
jbe
jb
arpl
dec
cmp
rcrb
mov
sub
pop
bound
pusha
xchg
adc
jb
mov
jno
sbb
out
mov
jge
push
scas
jecxz
xchg
dec
mov
add
cmp
add
push
repz
push
xchg
lret
add
lcall
ds
jge
cmp
aam
cmc
add
rcrl
sub
cli
roll
fsubr
sahf
adc
push
loop
pop
mov
loop
ficoml
mov
ljmp
mov
popf
popa
xchg
push
xor
mov
cld
jmp
dec
gs
bound
movsl
pop
adc
bound
cltd
or
cmp
movb
insb
adc
out
iret
lcall
leave
leave
cmp
aam
dec
dec
aad
sub
fwait
adc
jmp
in
xchg
leave
icebp
leave
in
push
sti
stc
stos
add
lds
mov
andl
fiaddl
sbbb
frstor
dec
dec
rolb
push
out
lods
xor
sbb
cmc
fucomip
mov
cmc
mov
mov
rorb
mov
sarl
push
jo
enter
test
adc
pop
and
leave
fldt
adc
int3
fildll
ss
in
push
push
rcrb
sub
aas
jp
dec
rcrb
cli
adc
mov
sysenter
les
into
xor
fwait
cld
das
ja
xchg
or
in
test
sub
nop
std
xor
xchg
or
mov
icebp
icebp
lret
dec
sahf
fiadds
xor
arpl
js
mov
in
cmp
ljmp
mov
scas
in
fistpl
inc
bound
sbb
xchg
sub
pop
inc
adc
inc
movsl
es
fcomip
dec
xor
imul
jg
jl
sub
and
xchg
out
fstl
pop
loop
cld
daa
and
test
push
cwtl
out
dec
cltd
or
sub
push
lret
out
sub
mov
cs
lds
fcoms
add
sbb
jae
andb
cmp
adc
add
test
jb
leave
dec
push
add
and
jp
out
or
push
sub
xor
cmp
in
ds
push
mov
push
or
jb
sbb
jne
xor
adc
inc
sti
lret
adcl
lock
cwtl
add
enter
inc
addr16
std
or
sub
pop
pop
cmp
sub
scas
addb
push
out
push
xlat
sbb
push
out
cmp
mov
push
xchg
faddl
inc
faddl
sub
sub
ret
cwtl
lahf
and
sbb
ret
jecxz
ja
mov
sahf
loop
mov
cmp
call
pop
mov
lcall
xchg
imul
cwtl
xor
mov
mov
xlat
lods
int
mov
test
das
arpl
sub
lock
sbb
dec
pop
repnz
sub
adc
insl
int
out
xchg
push
adc
sub
xchg
dec
add
mov
dec
cmp
adc
sbb
leave
jmp
or
and
xor
mov
outsb
cmpsl
sbb
popa
bound
inc
or
mov
jp
mov
je
dec
xchg
inc
pusha
mov
inc
subb
add
hlt
sub
je
jg
push
dec
push
dec
in
mov
cmp
fists
pop
fs
mov
loopne
mov
mov
lahf
and
dec
lahf
mov
jmp
ret
push
fdivr
mov
sub
bound
xchg
dec
inc
mov
lcall
xorl
iret
inc
xchg
fmuls
jge
ss
xor
mov
pop
call
inc
fcmovne
dec
out
lods
or
ds
mov
outsb
inc
push
cmpsl
add
add
je
inc
xor
lret
cs
mov
aas
call
xchg
and
leave
push
cmp
lock
test
icebp
cltd
out
mov
inc
in
add
jno
stc
sbb
repz
jg
std
addw
es
aam
mov
mov
leave
push
shl
cmp
cmp
add
add
add
and
lret
gs
frstor
sti
mov
bound
mov
pop
mov
inc
adc
sbb
imul
mov
and
and
jge
icebp
adc
lock
stc
shll
sbb
jo
stos
test
lods
daa
or
cwtl
cli
lret
out
aas
add
ret
stos
add
sbb
inc
xchg
mov
jae
jbe
sub
cmp
insb
sbb
shl
mov
adc
xor
and
loop
pop
test
fcmovnu
repz
pop
roll
out
test
mov
push
lahf
mov
or
mov
mov
mov
orl
stc
into
jbe
cwtl
adc
call
jecxz
jge
cmp
pop
cmpsl
aaa
inc
test
popa
and
and
mov
lds
adc
shll
push
mov
insl
pop
add
jae
push
mov
cld
pop
add
xchg
sbb
fldenv
rorb
clc
sar
jp
stos
xor
test
mov
push
cs
lods
sub
cmpsb
push
shrl
faddl
test
and
sub
fnstenv
jp
push
and
pop
xor
mov
mov
mov
push
xchg
mov
dec
shrl
sbb
jp
cltd
subb
or
mov
push
shlb
ja
pop
out
or
dec
add
jne
gs
mov
push
push
and
inc
or
cmp
mov
test
adc
mov
jns
jge
int
sbb
test
or
aad
mov
int3
pop
jne
inc
leave
or
sti
lret
mov
stc
jae
mov
mov
pusha
sub
dec
push
or
scas
mov
mov
inc
jo
imul
mov
std
shrb
push
mov
sub
mov
into
ficoml
sbb
cmp
push
es
push
test
mov
in
lods
fidivl
or
jle
push
lds
aam
dec
repz
aad
nop
dec
lds
ror
pop
jb
inc
pop
mov
jecxz
mov
adc
and
das
sbb
mov
rorb
mov
fiadds
sbb
movsl
jmp
dec
pop
aaa
out
je
adc
jns
call
stc
sub
in
push
xchg
popa
lock
ret
xchg
aas
xor
std
xchg
fiaddl
jae
sub
mov
adc
cwtl
adc
jns
mov
in
xchg
add
frstor
sbb
popf
outsb
fdivl
aad
push
cmp
fstl
jnp
jno
inc
adc
and
popf
xlat
mov
test
sbb
mov
sbb
loope
in
stos
jne
cmp
pop
inc
fsubl
enter
sub
cmp
shl
sbb
xor
insb
daa
aaa
jbe
popa
int3
ret
dec
je
in
and
dec
lret
lods
pop
mov
and
dec
out
pop
add
cmp
fidivrs
mov
add
pop
lahf
push
xchg
inc
add
jp
adc
int
stc
addr16
gs
cmp
pop
or
xor
das
push
inc
inc
and
pop
dec
fildl
dec
clc
push
and
dec
fxam
insb
mov
sub
and
push
xchg
push
dec
inc
adc
std
sub
mov
sub
mov
xchg
mov
popl
adc
push
out
daa
push
lahf
dec
js
mov
xor
je
mov
cmp
iret
lods
add
and
inc
out
sbbb
inc
inc
push
add
jo
cmp
push
mov
jl
and
dec
push
out
dec
hlt
repz
out
sbb
gs
fsubs
lods
mov
jmp
adcb
inc
sub
pusha
iret
daa
xor
jns
fadds
mov
fisttpll
out
dec
mov
xchg
fdiv
and
sub
mov
mov
mov
mov
mov
scas
test
stc
or
xchg
sbb
adc
loope
jns
adcb
hlt
dec
cltd
repz
sub
les
sbbb
hlt
test
cmp
fnstsw
mov
jbe
xchg
cwtl
loopne
jp
roll
sub
cld
xchg
mov
jge
xchg
leave
cmp
push
sub
data16
fcmovnbe
pop
mov
ds
outsl
xchg
add
jecxz
add
or
jae
xor
decb
mov
popf
mov
mov
dec
dec
xchg
pop
imul
sbb
lock
pop
dec
sub
sub
fisttpl
and
sub
gs
xor
out
jne
sub
and
popa
pusha
dec
into
flds
inc
or
lea
push
sbb
xchg
in
outsl
je
jmp
adc
lcall
pop
mov
push
mov
dec
icebp
inc
mov
mov
jl
adc
and
rolb
xchg
or
aam
mov
sbb
adc
mov
xchg
cwtl
mov
imulb
mov
adc
fdivs
and
cmp
dec
mov
and
pusha
jge
and
sarl
inc
sbb
lahf
js
test
jmp
mov
push
inc
xor
xchg
add
mov
add
or
cmp
cmpsb
mov
rcrl
inc
jnp
push
rcll
push
jecxz
adc
or
cmc
das
add
std
int3
fidivrs
push
mov
adc
stos
cs
add
rcr
dec
sub
sub
jg
dec
xor
test
mov
test
dec
mov
and
ficoml
inc
adc
out
mov
and
lods
inc
stos
jb
cli
push
movsb
call
push
je
jg
mov
shll
pusha
jmp
addr16
gs
mov
inc
aas
and
lahf
jb
icebp
rcrb
jmp
leave
pop
jbe
jle
adc
bound
out
mov
imul
rcll
dec
push
rclb
bound
lcall
push
les
cmp
and
add
dec
iret
iret
clc
sbb
stos
xor
mov
jae
out
test
xchg
out
lret
jmp
dec
aaa
add
test
hlt
and
jle
push
xchg
ret
icebp
movsl
sbb
adc
dec
jbe
dec
push
mov
xchg
push
sbb
movsl
jl
leave
ficompl
imul
xlat
inc
jl
je
xor
pop
outsl
js
or
inc
or
shrb
mov
fs
pusha
push
out
mov
data16
std
mov
dec
sbb
mov
lea
fwait
jae
sub
pop
fs
and
rcll
mov
sub
shr
cmp
jp
add
cwtl
xlat
repnz
rolb
jge
es
push
push
xor
je
rcr
out
cld
sub
shr
popf
ret
testb
lods
fidivrs
or
or
fildll
jecxz
mov
lcall
shr
ficompl
xchg
cltd
and
call
xor
ret
xchg
lret
adc
leave
jge
xchg
mov
rol
mov
rorb
out
add
in
arpl
lods
mov
fadds
add
repnz
pop
and
repnz
in
mov
mov
pop
mov
fwait
pop
cwtl
dec
shrl
pusha
cmpsb
xor
adc
dec
push
and
adc
hlt
scas
jae
sahf
jg
jge
mov
jne
sbb
sar
stos
dec
sbb
cltd
xchg
or
mov
sahf
sub
movsb
in
scas
dec
xchg
idivb
movsb
dec
jmp
mov
push
adc
add
sub
pop
xchg
fwait
inc
xor
pop
mov
enter
mov
aam
xchg
xor
mulb
adc
xchg
sbb
dec
sbb
jecxz
sbb
mov
out
in
mov
mov
fiaddl
loope
jnp
out
ljmp
pusha
jb
in
pop
sbb
fld
xchg
jns
scas
shll
pop
mov
rol
adc
dec
insl
stc
add
xchg
popa
cltd
or
cmp
pushf
mov
sbb
ret
mov
arpl
add
in
pop
lret
push
stc
ror
shlb
scas
mov
adc
mov
cmp
daa
mov
jnp
mov
xchg
jnp
in
aaa
cmp
cs
mov
icebp
xchg
rcll
and
flds
popf
enter
xchg
stc
inc
and
push
push
pop
pop
jae
ret
pop
mov
xchg
and
loope
aam
test
mov
sbb
sub
lret
pop
push
cmpb
or
testb
xchg
xor
popa
shrl
sbb
mov
bound
add
aad
jecxz
push
xchg
mov
xlat
mov
dec
out
dec
loope
push
enter
fisttps
inc
loop
mov
inc
xor
xchg
outsb
mov
aad
dec
ret
xlat
sub
hlt
cmp
adc
mov
push
push
addr16
ret
add
mov
or
test
sbb
mov
pop
mov
fwait
push
lret
ja
sbb
lahf
sbb
mov
jae
sub
fucomp
pop
cmc
dec
xchg
xchg
add
sti
jecxz
shlb
xchg
xor
sbb
pop
das
mov
dec
mov
and
mov
jl
cmp
mov
icebp
add
cmp
ds
inc
sbb
addr16
push
rcrl
divb
js
lea
push
mov
lcall
pop
push
fnstenv
add
sti
dec
push
sti
xor
roll
rcrl
jge
clc
out
sub
cmp
cmp
into
sub
aad
mov
bound
push
out
xor
push
or
and
mov
out
sbb
or
pop
sub
and
fisttpll
sub
push
dec
ja
push
sbb
sbb
push
pop
scas
inc
mov
enter
mov
jns
jo
lods
jne
scas
aas
outsb
mov
jns
call
xchg
sbb
pop
mov
mov
sbb
lret
xchg
mov
test
fcomps
push
pop
inc
or
fincstp
jo
out
add
sbb
push
inc
dec
xchg
ficoml
pop
loopne
pop
pop
pop
clc
jne
clc
dec
fwait
bound
data16
cmp
repz
in
nop
and
and
or
xchg
jo
cmp
jno
jecxz
mov
clc
mov
mull
cmpsl
icebp
call
add
mov
mov
xor
mov
xlat
cmp
aad
xchg
pop
inc
aam
lahf
dec
loop
inc
add
data16
mov
es
fstpl
sahf
xor
sbb
push
mov
adc
inc
rcrb
inc
or
movsl
mov
jno
lods
push
jnp
mov
ja
enter
addr16
xlat
cmpsl
mov
xchg
sbb
enter
dec
xchg
inc
or
push
mov
test
xor
cmp
mov
ds
daa
fs
cld
fdivrl
lock
push
sbb
pop
dec
sbb
jecxz
and
mov
std
dec
aas
mov
aad
or
test
sub
xchg
hlt
dec
arpl
cmc
jb
sub
cmpsl
xchg
outsl
xor
aaa
pusha
divb
mov
sub
scas
flds
stos
lret
imul
icebp
negb
shlb
stc
fldl
popf
cmc
pop
out
add
rclb
dec
xor
sahf
shrb
ret
cvttps2pi
ret
lcall
dec
and
jnp
cmp
xchg
adc
call
out
cmp
mov
jl
out
das
xchg
push
mov
jle
pop
test
xlat
hlt
imul
bound
mov
dec
testl
sub
scas
scas
add
sub
pop
outsb
push
negb
dec
cmp
cld
rcrl
lcall
mov
shr
and
in
push
jnp
adc
ret
bound
mov
scas
rcr
mov
mov
fstp
jno
dec
ret
xchg
jmp
stc
push
push
inc
pop
inc
in
shl
mov
mov
iret
aad
or
lods
inc
xchg
mov
push
fldenv
jl
xchg
dec
xor
fcomi
push
and
add
sbb
lods
adc
pusha
in
pusha
int
lret
addr16
mov
fcompl
ret
cmp
and
push
orl
enter
stos
iret
cmp
jp
xchg
rorb
sub
es
fcomps
push
imul
mov
inc
clc
sub
adc
insb
lods
xchg
sbb
adc
jno
mov
out
jo
xchg
pushf
push
pop
add
mov
jmp
or
pop
arpl
xor
lods
movsb
movsl
addl
dec
sti
test
inc
dec
sub
popa
sbb
sarl
leave
ljmp
lcall
push
dec
gs
sarl
int3
inc
in
and
sbb
cs
repnz
enter
push
jl
pusha
sub
outsl
sbb
shl
and
psrlq
addr16
add
shll
dec
test
lcall
pop
adc
or
fwait
cmpsl
pop
mov
xchg
sub
loopne
in
scas
or
and
aas
mov
jne
jno
aas
xor
sub
pop
cltd
sarl
stc
adc
cmp
sbb
xchg
sti
sbb
loopne
mov
adc
mov
mov
nop
adc
into
ja
bound
shlb
add
fidivs
enter
xchg
leave
pop
lds
out
dec
adc
adcb
lea
out
adc
and
sahf
test
adc
loop
inc
cmp
testl
scas
push
pop
test
adc
aas
std
ds
fnstsw
add
jl
adc
ja
clc
and
andl
notb
dec
or
inc
mov
mov
cmpsb
test
xchg
xchg
mov
insl
push
ds
das
sti
test
loop
fnstsw
fistl
xor
xchg
enter
out
jns
push
lret
mul
jae
inc
hlt
sbb
pop
out
loopne
or
inc
pop
mov
fistl
icebp
push
dec
inc
add
sbb
shrb
mov
xchg
fiadds
adcb
in
sub
jno
xlat
mov
xchg
bound
dec
add
sub
loopne
into
nop
and
stc
mov
mov
cltd
mov
xor
adc
test
cwtl
std
push
jl
and
xchg
mov
fcom
lahf
outsb
cmp
inc
xchg
into
adc
jmp
mov
gs
ret
and
into
sub
dec
inc
js
js
xor
in
dec
xor
jae
stos
jno
xchg
lods
pop
test
scas
mov
repnz
pusha
and
ja
mov
jno
repz
mov
cld
fmuls
fdivr
test
xor
cmpsl
sub
cs
push
mov
push
in
cs
rorl
test
scas
je
inc
adc
out
push
mov
pop
sub
sbb
cld
mov
int3
add
mov
or
aas
fldcw
cld
test
mull
cltd
ds
xchg
mov
stos
add
int3
xchg
inc
popa
subl
cmpsb
icebp
fmuls
mov
adc
fcomip
mov
fstl
mov
jmp
adc
data16
mov
xchg
add
or
movsl
fcomi
cmpsb
sahf
sub
fwait
cs
push
dec
pop
mov
loopne
sub
test
arpl
jg
into
mov
adcb
mov
adcb
inc
call
aas
scas
xchg
test
orl
cmp
iret
xchg
xor
inc
sti
adc
test
idiv
dec
jmp
aas
fisttpll
sbb
flds
fwait
divb
mov
inc
aaa
insl
fcmovbe
ret
cmp
pop
shlb
jno
lcall
add
jbe
xchg
mov
imul
orb
mov
repnz
jno
stos
in
jp
pushf
mov
fidivs
rolb
add
or
cmp
jp
jb
dec
movsl
jns
shll
test
mov
aad
mov
in
sub
addl
pop
aad
cmpsl
out
pop
loope
xor
and
ret
loop
js
ror
jno
cmp
and
jo
pop
sbb
xchg
jns
out
movsb
cmpsl
adc
test
push
xor
test
xchg
loopne
nop
pop
add
add
out
pop
sub
data16
sbb
rolb
jp
sub
and
adc
out
add
push
movb
inc
insb
mov
ret
cmp
inc
mov
orl
mov
mov
jbe
nop
and
fidivs
jg
cwtl
lock
adc
mov
cs
push
mull
and
sti
push
xchg
int
jo
lcall
lods
cmp
or
sbb
mov
inc
pop
enter
mov
sbb
cmp
xor
push
jo
push
cmc
fiaddl
test
inc
push
filds
enter
adc
jns
sub
dec
jge
imul
das
mov
xchg
sti
outsb
negl
xchg
fdivs
xor
push
or
xchg
xlat
jb
add
popa
hlt
jl
sbb
push
mul
bound
jb,pt
into
or
scas
bound
lcall
mov
daa
inc
sarl
test
mov
fstpl
push
cli
dec
lods
push
cmp
push
js
ret
dec
adc
inc
adcl
xchg
mov
mov
adc
push
ret
enter
sbb
iret
pop
mov
jo
jecxz,pn
dec
fldl
jl
adcb
sub
pop
fdivrs
xchg
int3
int3
ret
xchg
cld
stc
loope
dec
scas
add
xor
sbb
xchg
sahf
jp
mov
mov
push
cmp
enter
jo
fdivr
xor
fidivs
mov
ud2
mov
pop
stos
sub
subb
sbb
pop
loope
pop
lahf
and
icebp
ret
adc
and
aam
test
xor
push
out
xor
xor
sbb
and
xor
rcll
es
subb
push
enter
push
pop
sub
stos
ds
push
xchg
outsb
inc
dec
pop
clc
outsb
sub
aam
je
cld
mov
iret
cltd
jecxz
mov
iret
mov
or
mov
in
xor
popf
sub
je
dec
out
int
cli
js
ror
push
hlt
fadds
jo
pop
iret
mov
in
jnp
jno
fwait
push
mov
in
inc
mov
cs
sbb
test
mov
sbb
movsl
and
push
pop
inc
ret
sahf
dec
lock
notb
aas
call
lock
add
sub
push
les
jl
adc
stos
ja
xor
imul
push
xchg
adc
mov
jp
cmp
cmc
xor
sub
jmp
and
mov
jl
inc
dec
fstl
aam
pushf
inc
call
adc
out
dec
sbb
mov
xor
lahf
push
sub
or
daa
repz
and
iret
outsl
cmpsb
and
in
insb
and
rcll
jo
pop
mov
dec
cmp
outsl
xor
sub
ljmp
dec
jge
adc
inc
lfs
pop
inc
jo
sbb
fstl
mov
orb
cwtl
aad
push
subb
dec
mov
add
mov
loop
sahf
fisubrl
out
int
cmp
jo
fs
aam
out
mov
and
push
pop
sbb
lret
pop
push
sub
push
pop
sub
pushf
push
repz
pop
jae
jge
dec
lds
adc
inc
fwait
ja
or
cmc
sbb
dec
xor
and
mov
mov
cld
mov
addb
test
jle
shr
loope
ja
loopne
int3
insb
xchg
sbb
mov
sbb
dec
sbb
ret
stc
mov
fdivrs
adc
mov
shl
fcompl
stos
xor
jge
or
in
test
rorb
std
ss
push
add
negb
cmp
pop
pop
scas
scas
orb
dec
cmp
jne
adc
repz
les
adc
cwtl
psadbw
movsl
cmp
das
shrl
and
test
and
dec
in
std
stos
or
punpckhdq
orb
imull
loopne
fs
dec
mov
stos
call
ljmp
mov
sub
mov
push
leave
mov
clc
or
xchg
and
or
and
jecxz
dec
sarl
pushf
inc
fcoms
cs
fwait
adc
inc
aas
push
push
jbe
xor
orb
pop
xor
push
sub
mov
ds
mov
daa
or
push
add
pop
mov
add
and
pop
test
dec
jl
push
mov
add
int
sbb
dec
imulb
enter
pusha
sbb
dec
test
mov
je
jns
faddp
xor
mov
fldenv
ret
pop
sbb
stc
aas
pop
pusha
or
add
dec
dec
cmp
call
cmp
inc
cmp
sbb
rcr
in
mov
pop
mov
ljmp
fstl
movsl
xchg
jnp
fmull
iret
xorb
gs
xchg
loopne
jbe
mov
mov
xchg
popa
fistpl
out
int
pop
gs
mov
out
inc
sub
add
js
vminps
mov
dec
popf
push
insl
in
cmp
xchg
or
outsl
lret
mov
push
sbb
cmpsb
ds
inc
dec
mov
mov
cli
cld
aam
arpl
and
cmp
jne
mov
jne
lods
sbb
lods
xor
dec
lds
xchg
mov
xchg
mov
mov
addr16
pop
push
je
xchg
movsl
stos
out
mov
mov
addb
fildl
sub
cmpb
lods
xchg
mov
or
lret
xchg
pop
pop
dec
mov
adc
and
mov
outsl
push
insb
and
xchg
lods
fnstenv
mov
jae
shlb
jno
mov
mov
jle
sbb
pushf
outsl
adc
int3
and
adc
xor
lret
xor
in
mov
test
aad
xchg
sub
sbb
out
fs
inc
lock
data16
das
movsb
xchg
and
into
in
lock
jno
insb
pop
imul
mov
insb
iret
or
jp
fdivr
enter
ds
and
xchg
nop
and
incb
and
sti
pop
mov
pop
jg
popa
jns
xor
mov
lret
jp
jnp
and
inc
inc
adc
mov
lret
pushf
pop
sti
into
jo
pop
jns
in
jo
or
fwait
nop
shrl
mov
xor
push
clc
jbe
adc
lds
inc
mov
es
or
data16
imul
xor
ja
jbe
bound
out
fdivrl
sbb
dec
jae
add
idiv
sbb
popf
jp
gs
sub
hlt
mov
mov
and
test
mov
cld
and
outsb
push
lret
mov
lds
jp
pop
jbe
fsts
dec
sub
pusha
rcrb
pop
sbb
add
repz
and
insl
rcrb
pop
pop
sub
lcall
jns
pop
jno
jg
das
lret
test
popa
add
xchg
dec
push
and
push
cmp
add
aaa
scas
dec
adc
dec
dec
sub
inc
sbb
loope
mov
stos
movsl
pop
push
divb
inc
mov
les
jo
lods
jnp
pushf
aam
outsb
xchg
cld
daa
scas
pop
js
cltd
and
add
lods
push
pop
and
mov
out
or
mov
mov
in
pop
jno
popa
xchg
xchg
daa
sbbb
fsubrl
mov
pop
loop
mov
mov
clc
xchg
lock
testb
stc
movsb
jnp
pushf
adc
pop
cmp
push
fldcw
xchg
js
js
push
mov
cld
inc
nop
testb
jecxz
fs
out
inc
aam
add
cmp
hlt
jmp
cmpsl
imulb
cmpsl
or
sbb
xchg
out
xlat
xchg
xor
fisubrs
fwait
lea
lods
add
repnz
clc
out
dec
inc
and
sub
gs
inc
mov
movsb
cmp
stc
cli
pop
stos
ds
mov
sub
inc
hlt
dec
jns
lret
je
shlb
push
loope
jae
aaa
lods
hlt
dec
icebp
mov
mov
sbb
mov
int3
movsl
outsb
mov
fwait
scas
mov
sub
test
stos
cmp
xor
xchg
or
mov
cwtl
mov
dec
mov
test
or
jns
jne
bound
mov
in
ret
cltd
shr
in
adc
std
sbb
mov
nop
and
imul
fs
mov
or
sub
int
pop
mov
push
cwtl
mov
pusha
rolb
mov
cmp
sub
les
adc
int3
scas
pop
mov
xchg
sti
fucomip
dec
dec
fwait
xlat
mov
sub
jno
icebp
xchg
dec
cmp
push
mov
xchg
pop
out
stos
mov
jns
mov
push
mov
jo
xorl
mov
adc
notb
pop
int3
sbb
sarl
clc
and
jbe
sub
outsb
shll
dec
mov
fimuls
pop
dec
loopne
movsb
enter
push
mov
jmp
decl
fmull
outsl
push
mov
add
int3
lods
icebp
repz
push
fisubrs
or
sahf
add
aas
daa
repz
out
fs
fwait
xchg
mov
push
or
inc
push
add
push
popa
dec
mov
cmp
xchg
in
jle
push
mov
sbb
movsl
xchg
mov
mov
cld
int
push
sub
aam
xchg
in
movsb
jmp
lret
mov
pop
data16
push
or
inc
cs
push
xchg
mov
test
push
sti
int3
xchg
sbb
or
cmp
ljmp
xor
inc
mov
pop
xchg
fsubr
std
sub
push
fwait
out
push
cwtl
inc
popf
mov
pop
test
int
mov
sbb
push
jmp
inc
inc
pop
imul
pop
fisubl
decb
roll
mov
andb
lea
std
daa
es
rcrl
mov
loopne
js
lret
xor
jmp
shlb
aad
push
movsl
or
mov
jne
or
mov
jecxz
jne
in
mov
push
sahf
je
test
dec
addr16
mov
mov
dec
pop
inc
out
sub
stc
shll
leave
out
pop
and
mov
mov
icebp
aaa
xchg
sbb
xchg
sbb
lds
mov
popa
rorl
and
in
mov
add
push
sbb
push
cmpsb
pop
lcall
popa
sub
pushf
mov
mov
mov
addr16
adc
mov
mov
push
int3
into
adc
cmp
pop
pop
lock
insl
ljmp
add
adc
sbb
adc
imul
int3
call
jo
shlb
mov
dec
add
insb
push
mov
daa
push
push
xchg
ljmp
dec
sbb
cmc
or
mov
adcl
pop
or
pushf
gs
std
nop
into
push
adc
add
je
xchg
mov
mov
cmp
mov
rclb
popf
pop
or
outsb
xchg
repz
out
sub
fs
loopne
or
push
or
mov
push
icebp
jecxz
inc
jp
mov
adcl
je
pop
mov
hlt
cwtl
pop
scas
sub
pop
inc
leave
jmp
scas
add
sbb
ret
add
inc
test
testb
aaa
add
cmp
pop
and
or
loopne
mov
push
push
sbb
or
mov
xlat
sub
xor
adc
mov
xlat
aaa
in
push
pop
dec
dec
pop
sti
in
sbb
lret
mov
mov
repnz
popf
jns
lcall
test
jno
dec
dec
and
mov
xchg
movsl
fldenv
stc
cmp
mov
sbb
dec
sarb
cmpsb
mov
scas
cltd
mov
pop
adc
xchg
leave
stc
rorl
cmp
mov
je
mov
pop
push
add
sbb
xchg
xchg
loop
jae
mov
enter
dec
jns
pop
subb
push
fldt
stc
das
out
jo
mov
mov
fcmovnu
imulb
xchg
cld
push
sti
fisttps
fdivrs
out
cmc
add
xlat
popf
pop
xchg
xorb
jb
or
jnp
dec
movsb
pop
movl
fidivl
sub
cmp
lock
cwtl
xchg
es
scas
inc
mov
mov
popf
jl
xchg
cmp
in
call
js
jge
lret
out
loope
mov
lea
xchg
jns,pt
inc
mov
inc
hlt
outsl
ret
dec
xchg
inc
and
cmovns
loop
jle
lret
mov
xchg
and
add
jecxz
and
les
ret
mov
sahf
int
inc
inc
push
sub
pushf
jl
sub
cld
cld
and
fldt
icebp
out
jmp
test
mov
cmc
jecxz
dec
sbb
sub
inc
pop
pop
jns
rcrb
inc
lahf
test
mov
fisubrs
shr
int3
mov
cmc
jae
in
cmp
jne
imul
in
lret
fsubs
push
jne
xor
adc
iret
fstps
fistpl
inc
fwait
add
sbb
movsb
in
mov
mov
icebp
sti
lods
test
pushf
cmp
pop
aas
inc
adc
push
xchg
cmp
test
js,pt
dec
xlat
subl
xchg
ror
mov
mov
push
jae
cli
aam
dec
mov
cmp
adc
pop
movsl
or
push
add
pop
add
dec
inc
lcall
ret
jae
cli
push
push
loop
cmp
pop
fists
fcmovb
dec
addr16
adcl
pop
mov
adc
hlt
mov
xor
cmpsb
out
nop
xchg
lods
pop
loope
mov
stos
mov
pushl
inc
fnstsw
out
cmp
stos
leave
fidivl
cmp
jg
and
orl
js
jmp
xor
scas
loop
mov
jne
sub
inc
sarl
cmc
cld
fidivl
sbb
push
xchg
sub
dec
testb
xor
nop
leave
inc
cltd
mov
pop
loop
imul
aam
mov
lods
or
and
push
dec
xchg
test
push
dec
sar
jne
test
xchg
test
xor
push
stos
jg
mov
fdivrp
testl
or
adc
sbb
popf
test
mov
xor
outsb
js
into
push
jo
cld
or
movsl
std
test
mov
xlat
cmp
addr16
xchg
xor
sub
bound
ljmp
gs
lahf
shrb
sarb
rorl
sbb
sti
and
fnsave
mov
imul
sbb
shl
sbb
iret
fdivl
in
insl
inc
cmp
ficomps
add
ret
sub
ss
mov
inc
outsl
shl
and
xor
add
sbb
es
inc
mov
and
xor
inc
cmp
mov
iret
cmp
jge
inc
jg
pop
les
lcall
mov
or
out
push
hlt
push
imul
jnp
or
cmpsl
mov
outsl
es
push
cmp
stos
das
arpl
xchg
loopne
fninit
pop
mov
cs
xchg
push
cld
xor
sbb
sub
mov
nop
cli
pop
lret
sub
jns
or
cmp
loopne
or
pop
cmpb
daa
data16
mov
std
in
lea
xchg
mov
jo
mov
test
sub
mov
jmp
adc
or
aad
pusha
push
cwtl
loopne
xlat
dec
test
clc
cwtl
xchg
cmp
cmp
push
jmp
inc
ret
sub
sub
add
ds
and
add
xor
shlb
fdivrl
ds
push
mov
lahf
dec
cmp
ds
andl
fwait
or
loope
jne
cmpsb
xchg
xchg
push
xchg
xchg
ds
inc
inc
or
mov
insb
xorb
cmp
pop
data16
sti
mov
arpl
jmp
cmpsb
aam
pop
cmp
mov
cmp
sub
mov
stc
mov
cmp
adc
or
push
cmp
aaa
xor
repnz
scas
add
imul
pop
imul
mov
xchg
shll
add
in
cmpsb
bound
popf
mov
mov
sub
jp
or
mov
add
mov
xchg
imul
inc
insb
mov
lahf
rorb
push
je
lock
add
or
aam
out
jl
dec
or
sub
or
aam
mov
or
pop
push
int
jb
jae
arpl
mov
jb
mov
lds
insb
addl
mov
mov
int
inc
xor
test
mov
aad
and
xchg
xchg
or
cs
push
mov
cmpsb
mov
inc
add
sbb
lods
je
fcomps
fs
loope
aad
rcr
clc
lock
add
xchg
test
pop
mov
std
outsb
cmp
loope
jae
sbb
pusha
loopne
add
mov
lock
test
adc
jno
jnp
pop
sub
add
fcoms
xchg
pop
repz
add
call
shrb
punpckldq
rol
int
mov
and
xor
mov
insl
and
and
xchg
iret
dec
or
and
jb
mov
sbb
mov
adc
pop
lock
fisubs
jne
inc
inc
mov
out
in
aam
sbb
dec
xchg
std
adc
ljmp
push
stc
push
mov
xchg
adc
incl
adcl
bswap
idivl
and
dec
and
leave
lock
pop
xchg
loope
int3
std
hlt
pop
mov
pop
std
pop
xchg
out
add
sbbb
fdivp
ja
subl
jae
cmp
lea
lcall
bound
imull
scas
iret
negl
and
cmp
adcl
daa
or
in
sbb
and
xchg
push
and
ljmp
fwait
adc
inc
popf
lea
push
outsb
sbb
mov
push
mov
xor
adc
mov
mov
jo
aaa
push
aad
aam
fstl
jle
inc
fisttps
std
jns
sub
hlt
sarl
push
mov
and
mov
cli
xor
cmp
es
in
mov
and
lcall
and
add
adc
call
mov
mov
test
jg
jo
out
xor
leave
int3
xor
enter
ja
pslld
fisttps
pop
jmp
mov
int
into
rol
dec
arpl
dec
push
jecxz
lret
mov
lahf
or
rorl
jl
add
repnz
popf
xor
xchg
add
mov
or
sub
xchg
cmp
cmp
outsb
jbe
mov
mov
mov
ds
lds
jmp
add
push
ds
add
lock
xchg
add
xor
kmovw
dec
outsb
jp
fdivrl
and
cmp
sbb
fnsave
gs
fstpt
mov
test
mov
mov
and
inc
mov
out
test
ds
inc
inc
push
pop
add
lcall
imull
fdivs
les
jmp
loop
adc
subl
fcoml
out
popf
cmp
xchg
xlat
sbb
arpl
loopne
dec
in
pushf
push
pop
xchg
into
cli
pop
cmp
push
xchg
xchg
and
dec
push
lock
das
cmp
sub
and
arpl
popa
pop
hlt
mov
insb
push
pop
dec
fwait
jle
out
inc
mov
in
pop
mov
add
dec
test
mov
pop
mov
sub
enter
dec
cltd
mov
sarb
add
loope
cmpsb
xchg
movaps
cmp
pop
cwtl
pushf
punpckhwd
jo
dec
cmc
mov
mov
mov
popf
repnz
aaa
movsb
pop
leave
popa
mov
sbb
add
mov
stc
jle
dec
sbb
pop
mov
fdivs
pop
sub
xor
and
hlt
mov
shrl
mov
into
lret
sar
nop
ljmp
jmp
outsl
lock
out
lcall
mov
mov
xchg
in
outsl
adc
lds
pushf
or
push
adc
out
fwait
pop
xchg
jecxz
xchg
arpl
fstl
adcb
add
sbb
add
clc
cltd
dec
out
add
mov
xor
pop
test
shlb
nop
pop
xor
add
test
adc
mov
push
mov
mov
jl
loop
iret
je
lods
dec
popa
jg
jae
inc
fdivl
fdivl
sub
jmp
fsubl
js
jle
fsts
clc
movsb
or
jae
push
xchg
rorl
sbb
bt
loopne
or
repnz
sti
outsl
mov
pop
stos
ret
jecxz
divb
push
fstp
addr16
test
lahf
mov
adc
xor
mov
or
xchg
jnp
push
xrelease
cs
sub
pop
inc
ja
xor
sahf
jae
jns
repz
pop
jno
clc
movsb
arpl
pushf
popf
imul
sbb
shl
mov
pop
lods
push
pop
sub
lcall
js
in
sbb
negb
in
sub
and
jmp
out
dec
mov
clc
cli
adc
jae
scas
push
jmp
cmp
es
mov
mov
xchg
shrl
pop
mov
dec
fs
adc
cmovns
adc
or
ror
lods
add
fwait
scas
mov
insl
push
loope
mov
iret
and
mov
adcl
adc
loopne
xor
repz
lds
pop
mov
inc
push
jbe
lret
and
inc
gs
cld
jle
inc
stos
sub
fisttpl
icebp
cmc
mov
push
insl
fmuls
pop
hlt
mov
pop
mov
test
adc
push
jns
jl
add
movsl
xlat
pop
enter
mov
mov
jno
cmp
pusha
in
xor
jg
mov
gs
push
movsl
aas
add
out
inc
jns
mov
in
addl
dec
push
add
sbb
pop
or
adc
loop
cwtl
xchg
or
inc
out
xchg
mov
fcmovbe
nop
and
add
adc
jns
push
mov
in
cmp
jecxz
sub
arpl
pop
mov
loopne
lods
sahf
and
push
add
insl
hlt
lea
mov
push
cmpsb
dec
ret
aam
movsb
test
int3
mov
mov
add
mov
add
mov
sub
dec
and
adc
sahf
jg
mov
dec
xor
loop
push
cmp
push
sub
popf
rcrl
cwtl
mov
jne
and
or
and
mov
push
push
xor
pop
lods
adcl
jbe
movsb
test
xlat
aam
lock
jb
pop
cmpsl
sub
cltd
fisubl
mov
adc
jg
jmp
data16
and
and
in
ds
cmp
je
ljmp
imul
dec
and
cs
clc
lahf
icebp
adc
add
jle
inc
fwait
int3
ja
aad
and
adc
inc
push
in
xlat
mov
mov
lret
ja
mov
data16
lret
push
xchg
jno
or
xor
pusha
jg
and
out
pop
jg
dec
pop
mov
je
outsl
jae
cmp
in
jmp
push
es
sbb
and
jne
adc
xor
sub
sarb
in
mov
lret
dec
or
sub
add
lods
outsb
push
out
gs
pushf
int3
mov
frstor
xchg
xchg
sbb
xchg
nop
adc
mov
cmpsl
sub
lret
push
data16
ljmp
lds
sub
pop
lods
out
sub
xor
and
dec
insl
sbb
add
and
adc
sbb
jae
fisttps
push
stos
jmp
aad
mov
adc
stc
push
cmp
lea
cli
out
ret
shll
imul
mov
cwtl
mov
adc
incb
cmc
and
clc
mov
js
pusha
pop
out
or
lcall
pop
cmp
in
js
jo
cmp
jmp
mov
fidivs
fdivrs
daa
pop
cmp
nop
repnz
sbb
mov
jmp
leave
push
push
push
and
push
insl
jne
hlt
iret
mov
ss
add
add
mov
jno
ror
add
rcr
mov
jo
rcrl
stos
push
arpl
repz
adc
xor
mov
dec
ljmp
xchg
test
enter
jns
test
out
or
lea
adc
popw
mov
mov
pop
cmp
dec
mov
rcll
imull
shll
or
jbe
out
inc
aad
and
cmp
lret
cwtl
lods
sbb
arpl
mov
jo
mov
mulb
fisubl
das
pop
fcompl
mov
push
leave
in
call
lock
xor
push
jno
aam
inc
cwtl
sbb
or
fisubrs
dec
adc
push
enter
cmp
lcall
rcll
add
insl
pushf
stos
push
ror
mov
push
aad
xlat
pop
test
sbb
jg
mov
jecxz
or
clc
cmc
sub
adc
mov
sub
and
or
adcb
bound
mov
push
cmp
mov
out
data16
negb
xchg
fidivrl
xor
add
movsl
imul
inc
mov
dec
cmpsl
dec
lods
addr16
jmp
iret
sbb
cmc
push
or
lock
mov
push
imul
mov
sbb
arpl
pop
add
das
cld
test
fcomps
lods
mov
push
jb
push
fldcw
pop
icebp
ss
pop
lods
je
aas
cmp
xchg
mov
adc
mov
lock
xor
cmc
push
pop
scas
jns
out
cmp
movsb
mov
lahf
loop
lcall
ret
sbb
lcall
push
cmc
dec
push
imul
cmpl
stos
or
clc
cmp
adc
insl
incl
loopne
int
push
sub
rclb
and
xchg
shrb
fisubl
sub
out
mov
arpl
into
xor
xor
push
lret
in
dec
fdivs
imul
mov
js
aas
mov
cli
test
jle
scas
call
clc
jle
pop
iret
pushf
mov
icebp
cmp
pop
mov
orb
add
jns
dec
dec
iret
jnp
mov
faddl
and
rolb
fildl
ret
inc
cwtl
out
fmul
fs
std
lock
add
push
int
scas
or
inc
insl
lods
shlb
fstpl
jbe
mov
mov
roll
ret
insl
cltd
popa
sub
xchg
and
cwtl
xchg
into
pop
jmp
push
dec
scas
mov
arpl
sub
pop
xor
ds
adc
add
ficoml
mov
stos
add
cs
lds
outsb
movsl
pop
repnz
aas
insb
in
sbb
inc
xchg
mov
insl
negb
inc
stc
in
push
mov
ljmp
repz
fucomp
xchg
pop
adc
in
test
ja
push
jns
adc
in
xorl
inc
movsl
out
icebp
into
gs
add
cmp
cmpsb
or
shll
lods
sbb
icebp
into
aam
mov
cmp
jne
cwtl
sbb
jmp
insl
rcrb
dec
cwtl
cmp
mov
jne
iret
push
cmp
pop
jbe
je
sti
xchg
mov
shlb
fcompl
into
in
mov
pop
push
jl
mulb
and
stos
pop
out
jg
mov
leave
xor
lds
fcmovbe
sub
jg
inc
cmp
lret
mov
fdivs
mov
dec
int3
dec
es
pop
or
and
das
cwtl
je
cmp
rcrb
and
or
sub
dec
fdivp
xor
fmuls
add
push
out
mov
inc
mov
push
push
lret
cmpsl
and
jg
dec
int3
mov
mov
inc
push
inc
aas
daa
insl
aam
out
xor
mov
inc
pop
and
mov
mov
and
std
lcall
ret
pop
mov
popa
xlat
push
mov
arpl
or
push
loopne
mov
std
loope
sub
in
les
mov
push
subb
dec
iret
dec
mov
out
aas
jmp
and
xor
mov
add
cmpsb
mov
cs
psrld
mov
pop
in
ds
lret
and
rcr
add
jge
jg
daa
icebp
sti
popa
and
mov
out
nop
jo
cli
push
mov
sbb
int
jae
into
repnz
iret
fsincos
inc
jnp
mov
xchg
jns
ret
stos
out
out
es
xchg
notb
stos
inc
in
mov
icebp
mov
icebp
xor
ficoms
neg
pop
icebp
lods
loop
xor
mov
push
in
sub
push
adc
and
sahf
and
cmp
push
mov
jb
sub
mov
push
lcall
test
and
in
xchg
test
hlt
xor
mov
dec
cwtl
pushf
or
cwtl
ror
pop
push
add
rol
xchg
data16
imul
bound
out
repz
xchg
int3
js
xor
jo
std
popf
stc
ret
mov
ljmp
xchg
mov
xchg
repnz
dec
push
xor
shlb
mov
add
mov
jecxz
shll
call
out
les
movsl
jbe
dec
push
and
movsb
int
hlt
in
test
jecxz
mov
or
sbb
sub
je
out
or
ret
sub
fidivrs
leave
std
aad
cmpsb
sarl
xchg
mov
mov
cmp
notl
iret
repz
cmp
adc
ret
mov
mov
push
adc
pop
jg
in
stos
test
pop
push
stos
es
sarb
cmp
adc
mov
push
nop
push
mov
fists
mov
mov
cs
jmp
xlat
mov
lds
shrl
lahf
pop
pop
imul
stos
jno
cltd
mov
sbb
stc
and
cld
aad
and
push
cltd
scas
rolb
scas
sub
fucomp
int3
and
add
push
out
mov
mov
mov
cmpsb
fwait
dec
in
loope
mov
jbe
mov
pop
imul
add
scas
mov
xchg
push
add
icebp
fcmovbe
mov
push
mov
fnsave
pop
push
pop
and
lock
inc
pop
ret
clc
push
icebp
outsl
cmp
movb
out
outsb
ror
sub
xor
jo
mov
mov
pop
jp
aam
cmp
dec
cmp
sbb
mull
in
xchg
inc
int3
ret
daa
or
cmpsl
push
adc
jno
mov
push
lret
cmp
add
ds
adc
aam
or
xchg
repz
fs
sbb
xchg
out
jbe
push
adc
out
adc
push
sti
scas
fidivrl
rcrl
sub
adc
cmc
daa
push
into
into
les
fldcw
push
or
jno
lret
gs
push
rcll
out
xchg
mov
push
mov
data16
sbb
mov
fsub
iret
stos
out
push
je
es
test
rolb
cmp
nop
test
adc
jle
repnz
cmc
cltd
push
data16
rorb
aas
and
lds
inc
xor
or
mov
and
jne
pop
test
fdivrs
out
mov
adcb
or
inc
popf
or
mov
push
jns
mov
mov
outsb
stos
daa
sub
push
add
in
sub
imul
mov
shrl
mov
inc
xchg
add
das
aas
lret
mov
adc
lds
xor
sub
xchg
shll
inc
push
sub
daa
inc
cltd
aas
jne
nop
cld
cmpsb
mov
cli
push
sub
sbb
pop
leave
dec
push
push
ja
ret
mov
pop
out
clc
pusha
dec
push
adc
pop
jae,pn
stos
leave
repz
sbb
sub
xlat
fidivrl
aad
fwait
or
adc
les
sbbl
rolb
cmpsl
fnsave
std
inc
xchg
pushf
cmp
cld
cmp
cmp
push
pop
cmp
or
adc
xbegin
pushl
pop
cli
lret
lahf
repz
xchg
pop
lret
jl
cli
insb
xlat
or
and
mov
ja
std
vcomiss
jno
popa
xchg
ret
push
aaa
mov
aad
lods
fdivrs
pop
imull
addps
dec
jmp
xor
dec
arpl
mov
lds
xchg
popf
or
push
cltd
enter
in
or
mov
push
rsm
fwait
lret
testl
mov
adc
out
push
jo
mov
addr16
mov
push
insl
add
aad
subl
xchg
xchg
and
scas
sbb
cmp
fwait
jne
mov
add
fldcw
loopne
xlat
loop
push
push
xchg
pop
insl
lods
mov
adc
les
inc
lods
out
inc
and
in
aas
cmp
imul
ds
and
ret
jns
out
dec
mov
jns
mov
inc
jo
xchg
xor
dec
sub
add
xchg
and
xchg
dec
aam
mov
sub
mov
jne
aam
pusha
cmpsb
cmp
fadd
xchg
push
lods
in
cld
in
popf
jns
roll
adc
popa
push
fisubrs
imul
add
mov
mov
push
mov
cmpsb
xchg
inc
repz
out
divl
jb
rcl
out
scas
and
lds
cltd
jno
jnp
mov
mov
jge
sbb
cvtps2pd
or
das
adc
fldl
push
aas
push
movsb
aaa
push
in
in
xchg
or
push
out
or
testl
cld
stc
ds
xchg
ss
xor
jnp
sbb
pop
or
or
push
int3
bnd
pop
test
popa
scas
lea
pop
push
push
outsl
push
mov
cmp
mov
test
les
sbb
push
pop
sbbl
xor
or
or
mov
movsb
test
mov
inc
mov
sarl
sub
mov
push
adc
sbb
sbb
ss
and
dec
mov
inc
cli
or
divl
push
popf
mov
mov
xchg
mov
std
fadds
fstps
dec
jae
mov
sbb
dec
inc
push
jnp
movsb
pop
mov
rclb
pop
cmp
mov
fs
mov
loop
xchg
and
popf
inc
push
inc
loopne
fs
or
stc
mov
daa
sub
ss
cld
dec
lret
imul
push
sbb
ret
movsl
and
in
dec
sbb
mov
jns
loop
lods
inc
sbb
sbb
lcall
out
dec
ss
lret
sarb
and
jo
loopne
pop
clc
xchg
mov
add
mov
cmp
cmp
loop
ficomps
and
pop
mov
retw
jne
cmp
sbb
test
sbb
xor
mov
xchg
ljmp
insb
sbb
dec
ret
inc
rcrl
cs
dec
and
out
loop
ret
inc
movsb
mov
nop
push
dec
movsl
js
sarb
mov
nop
xor
cwtd
push
pushl
dec
mov
fdivr
imul
sub
mov
pop
lahf
mov
or
ficoml
call
call
xor
sub
aas
and
cmp
mov
stc
outsb
das
fprem
in
xor
cmp
sub
push
ret
inc
push
jle
movsb
insl
ret
mov
xlat
inc
adc
ja
in
mov
or
stos
pop
push
shl
add
andb
push
pop
xchg
add
outsl
leave
fildll
testb
and
in
jl
movsb
aaa
sbb
loope
addr16
sbb
ret
loope
stos
lret
dec
pop
xor
and
pushf
dec
mov
loop
and
shrd
shll
push
js
loope
cli
adc
outsb
lods
pop
xor
into
mov
sbb
dec
dec
push
jle
pop
das
xor
jno
or
lock
xchg
adc
bound
and
jns
sub
xchg
inc
cwtl
xlat
in
lahf
inc
leave
and
cmpsb
ja
push
popaw
xor
out
add
scas
xor
mov
pop
xchg
cmp
push
inc
in
test
cmc
movsb
or
pushf
add
mov
xor
dec
or
insb
out
pusha
adc
sub
push
or
scas
dec
xchg
xchg
insb
push
jno
dec
inc
xchg
mov
andl
rcrb
aaa
test
js
adc
negl
sub
mov
popf
sbbb
pop
and
addr16
outsb
pushf
push
and
clc
adc
repnz
das
or
testb
test
add
ja
and
test
cmp
mov
dec
push
xor
or
dec
pop
pushf
jmp
inc
jmp
das
inc
test
pop
icebp
pop
imulb
cs
mov
and
loop
or
decl
shrl
mov
xchg
xchg
add
sbb
add
and
sub
sub
lret
or
adc
xor
sub
push
fs
jns
fs
stos
mov
and
pop
mov
adc
dec
pop
xchg
roll
and
addr16
repnz
insl
clc
cmp
push
repnz
cmp
or
inc
mov
mov
fdivrs
sbb
xchg
adc
sub
add
int3
inc
jmp
insl
push
sub
or
shrl
daa
setl
movsb
xor
aas
cmc
je
popf
mov
and
sarb
mov
imul
xchg
daa
mov
jmp
testb
xchg
scas
lock
sbb
js
xchg
hlt
fstp
cmp
adc
stos
sbb
cmp
mov
out
nop
addb
pop
enter
mov
cld
and
les
inc
cmpsb
push
dec
sbb
mov
sbb
xor
cmp
sbb
sti
cmpsl
pop
out
rcr
jnp
dec
dec
sub
sbb
dec
sub
pop
push
das
int
and
pop
push
cs
movsb
pushf
lcall
sti
out
mov
test
cmpsl
and
pop
xchg
sbb
mov
mov
pop
mov
fucomp
ja
mov
jb
and
pop
mov
jle
lret
sbb
sbbl
fnstsw
andl
test
dec
imul
push
outsb
push
hlt
push
lea
push
idivb
aam
cwtl
ret
and
push
xor
and
lods
aaa
out
sbb
mov
sub
sub
cmp
ret
jo
mov
xchg
cli
push
push
inc
xchg
or
push
dec
cltd
lods
rorb
popf
cmpsl
and
fcmovnb
cld
test
mov
jb
and
or
push
inc
mov
fwait
pop
in
push
jno
lcall
adc
add
popa
mov
inc
bnd
xchg
pop
pop
stos
dec
inc
test
out
iret
sti
jge
inc
inc
ucomiss
inc
ja
jb
lret
ljmp
scas
mov
mov
js
xor
clc
in
inc
cmp
push
dec
scas
std
mov
inc
mov
lock
sub
mov
jge
test
mov
jae
fdiv
ret
sbb
scas
jecxz
iret
int
mov
adc
js
gs
test
sti
aam
pop
mov
mov
cmpsl
dec
mov
dec
xlat
sbb
lods
mov
mov
jbe
jbe
push
ljmp
aad
jo
hlt
dec
leave
mov
faddl
sub
adc
adc
es
or
sub
icebp
or
inc
ljmp
dec
xchg
nop
adc
add
fmul
mov
cltd
adc
aaa
in
sbb
lods
rcr
mov
ret
test
mov
loope
or
mov
push
test
or
xor
push
out
repz
push
jg
push
xlat
dec
lods
mov
inc
rcl
repz
loop
sbb
pop
xlat
xor
es
pop
and
in
push
mov
jb
push
push
cmp
dec
arpl
fldl
int
sbb
dec
sti
or
mov
loop
sbb
addr16
or
test
push
loopne
fwait
mov
adc
repz
call
xor
fidivrl
cmpb
pop
pop
out
mov
aas
lock
push
adc
mov
icebp
xchg
and
mov
jmp
pusha
and
cmc
xchg
in
mov
push
cwtl
les
push
je
test
scas
mov
pop
add
out
pop
out
daa
jo
mov
icebp
xchg
cmc
sti
lods
inc
cmc
lds
cmp
rcll
jecxz
test
ds
out
sbb
mov
pop
sbb
xor
loope
out
nop
test
inc
lds
inc
sub
icebp
sbb
jp
jmp
int
mov
cmp
jle
pusha
lock
imul
xchg
add
int
dec
xor
and
sub
mov
icebp
pop
xor
dec
adc
jg
sbb
mov
jge
int
inc
mov
fsubrs
leave
mov
fisubrs
jae
push
cmp
push
out
xor
mov
fwait
rclb
add
jg
cmpb
incl
push
dec
and
bnd
push
cmp
aad
jle
test
push
jbe
mov
mov
punpckhdq
fcmovne
inc
iret
outsl
nop
in
and
inc
or
xlat
push
fs
cli
push
iret
push
test
mov
insl
imul
adc
mov
lret
cmp
gs
xor
xor
adc
inc
mov
jge
jns
cmp
and
test
out
jo
aas
fwait
rol
sub
std
cld
andb
jge
mov
test
push
mov
mov
fwait
stos
jae
js
negl
xchg
aas
mov
adc
or
pop
mov
xchg
rorl
or
test
ret
arpl
test
dec
stc
or
cmc
call
aas
orb
mov
jecxz
inc
ja
push
adcl
jg
imulb
lods
fsubrs
or
sbb
mov
push
in
push
adc
das
int
sahf
out
out
pop
xchg
push
mov
pop
es
mov
mov
adc
or
popa
adc
out
mov
push
enter
jb
bnd
bound
inc
in
push
adc
int3
aad
fs
loope
gs
add
inc
inc
adc
into
pushf
cwtl
data16
inc
insb
add
mov
inc
andl
mov
outsw
mov
inc
into
dec
sub
add
mov
xor
push
jno
lock
mov
mov
dec
test
and
adc
pop
adc
int
and
xor
adc
sub
jg
dec
call
jg
mov
pop
scas
scas
mov
testl
pop
sbb
cs
adc
pop
sub
cmp
addr16
dec
fcmovb
call
punpckldq
pop
test
xlat
xchg
sub
xchg
and
dec
cmpb
pop
push
ss
push
vpmaxub
jg
mov
lret
sub
imul
push
stos
add
push
pop
lods
icebp
movsb
shrl
dec
adc
out
mov
xor
sbb
adc
jl
bound
adc
push
sti
jno
lods
andb
jge
mov
mov
or
insb
adc
fnstcw
int
push
fwait
and
and
ds
inc
push
mov
mov
sub
pop
in
popa
mov
mov
nop
mov
cwtl
cs
and
dec
mov
push
xchg
and
pop
fldl
div
pop
sbb
movsl
jo
iret
add
rcrb
popf
into
lock
pop
xchg
xorl
insb
in
mov
fcoms
sub
in
sbb
test
clts
in
sbb
pop
sbb
jno
repnz
xorl
xor
sub
mov
cmpsl
call
mov
sbb
add
mov
stos
inc
xchg
test
cmpsb
jg
ret
in
xlat
dec
lods
cld
aam
jb
push
arpl
popa
stos
gs
leave
andl
in
ja
stc
dec
jge
push
mov
xlat
nop
xor
popf
clc
xor
cli
sub
mov
or
loope
aam
mov
pop
ffree
jmp
jle
sub
dec
push
cmp
inc
push
fnstenv
jl
mov
cwtl
cltd
ret
rorb
jmp
or
mov
int
cltd
shll
sub
jns
push
dec
mov
arpl
fldenv
xor
incb
nop
popf
cltd
mov
xchg
push
cld
pandn
mov
adc
data16
mov
xchg
fldt
fstpl
inc
arpl
popf
mov
pop
gs
ret
iret
sub
ret
xlat
fsubl
push
cltd
mov
stos
scas
popf
divb
out
out
xchg
leave
mov
xchg
cmp
cmp
aam
ds
push
call
repz
sub
ficompl
sarl
inc
dec
add
add
lods
pop
mov
leave
nop
jl
lret
xlat
xorl
pop
repnz
push
lea
enter
loope
sahf
xor
jo
imul
xchg
xchg
imul
xchg
pop
or
sti
aaa
jecxz
test
bswap
and
mov
jle
push
fisubrl
incb
movsb
adc
andl
cmp
test
mov
xchg
cmp
out
out
pop
push
sub
fwait
shr
test
arpl
imul
or
push
pop
sti
ja
mov
push
leave
add
iret
shlb
icebp
out
sbb
stc
bound
je
mov
pop
push
das
sub
sub
sub
dec
test
or
mov
ss
out
loopne
inc
adc
push
aad
pop
or
mov
scas
add
clc
push
movsl
dec
repz
loop
xor
push
inc
je
add
fadd
call
int
inc
add
xchg
adc
insl
xchg
out
dec
adc
jp
pop
mov
data16
lret
js
icebp
xchg
fs
jne
je
loope
sbb
mov
xchg
mov
ja
mov
xor
loop
sub
test
or
mov
lea
out
rclb
in
pop
movsl
test
jae
push
push
std
repz
sub
aam
or
andl
inc
or
mov
enter
rcrb
rorb
imull
aam
repnz
andb
push
inc
jne
out
and
cmp
mov
jnp
stos
add
std
jmp
sbb
xor
pop
test
fsub
jecxz
cmc
adc
xor
push
imul
fstpt
cmp
mov
and
dec
jmp
dec
and
std
rorb
test
cmp
add
sbb
sub
dec
jae
adc
int
xchg
or
xor
inc
cld
shlb
mov
scas
fwait
cmp
insb
jbe
pusha
stos
loop
das
jmp
mov
pop
add
xor
bound
js
jbe
sarb
or
jo
std
pop
sbb
jo
and
ficoms
sub
fmuls
enter
inc
inc
pop
sbb
dec
xlat
js
xor
stc
popa
mov
sub
jecxz
dec
movsl
mov
insb
icebp
adc
push
xchg
sub
mov
push
rorl
or
pop
push
xchg
xchg
mov
cmp
in
data16
sub
add
jae
push
mov
pop
cmp
dec
push
push
pop
sub
inc
push
hlt
nop
push
sub
or
js
sub
loopne
push
shl
aad
fsubl
lahf
test
inc
test
lahf
mov
mov
rcr
fldcw
sub
ficoml
pop
xorl
popf
add
imul
movsl
notl
inc
inc
aad
push
dec
xchg
inc
lods
ja
xchg
jb
icebp
outsl
cwtl
into
inc
adc
es
dec
jae
js
sbb
mov
or
outsb
loope
xchg
sbb
rolb
push
and
jl
stos
jmp
push
test
xor
and
pop
sbb
cmp
mov
xchg
daa
insl
cmp
cmp
adc
rolb
cltd
test
mov
mov
push
jg
imul
orb
mov
and
adcl
shrl
jne
push
push
pop
jle
pop
mov
jb
pop
push
mov
add
jnp
aas
jbe
rcrl
and
jo
int
and
in
push
leave
out
popa
imul
sbb
mov
mov
dec
in
sbb
outsb
adc
test
repnz
adc
enter
cmp
in
imul
fucom
add
push
into
aam
sub
push
pop
aaa
out
pushf
enter
test
sbb
jnp
fcmovne
sub
dec
mov
pop
divl
iretw
inc
into
sbb
xchg
inc
push
mov
dec
or
mov
or
mov
dec
pop
scas
jmp
imul
inc
addr16
jle
pop
or
xchg
and
or
stos
add
mulb
dec
neg
mov
out
add
push
out
sbb
aaa
and
pop
mov
jle
mov
ds
daa
dec
jecxz
jmp
mov
stc
mov
cmp
lea
mov
in
dec
push
push
outsl
and
dec
jne
data16
mov
pop
mov
mov
sub
xor
out
fsubrs
insl
mov
les
xor
mov
mov
inc
cli
pop
xor
push
aad
mov
scas
mov
pop
cmp
in
cmpsl
jne
adc
shlb
stos
pop
push
das
adc
mov
aas
inc
cmp
mov
add
push
orl
popa
fdivrs
hlt
cmc
insb
arpl
in
arpl
xlat
adc
insl
jle
jb
outsb
dec
loop
pusha
cmp
xor
adc
pop
pop
out
lods
insl
push
inc
cmc
sahf
jg
arpl
mov
sbb
or
xor
std
iret
jbe
mov
or
imul
sub
jbe
pop
xor
push
cmp
icebp
test
bound
gs
shl
cli
mov
adcl
and
std
xor
adc
outsb
into
outsb
adc
adc
mov
pop
gs
lahf
mov
pop
fcmovb
pop
ret
in
pop
xor
aam
pop
pop
jnp
sbb
adc
jl
mov
out
arpl
sbb
nop
loope
divl
loopne
push
loopne
adc
lahf
bound
ljmp
cmp
out
xchg
xchg
pop
dec
subb
insl
cmpb
pop
fisttpl
movsl
jmp
mov
adc
stos
inc
js
dec
aas
xchg
adcb
sbb
mov
je
decb
mov
outsb
in
pop
inc
pop
adc
out
mov
jns
sbb
mov
sbb
adc
jns
xchg
pop
cmc
je
add
inc
enter
push
jl
add
mov
sbb
out
dec
or
lahf
pop
jns
mov
shll
fcoml
pusha
adc
xor
test
in
cmp
cmp
mov
xchg
mov
dec
mov
std
dec
pop
jae
jmp
icebp
jg
push
sbb
sbb
in
or
in
cld
shll
cmp
lret
push
dec
inc
mov
xlat
push
aaa
sub
xchg
rorl
pop
mov
or
jmp
sbb
repz
pushl
inc
sbb
cs
lret
pop
mov
cmp
shll
lret
stos
sbb
hlt
mov
bound
pop
jmp
daa
lods
lret
xchg
sti
shl
repnz
ficompl
ficompl
xchg
xorb
and
cmp
push
cld
out
out
fsubrl
cmp
inc
sbb
les
in
ljmp
push
leave
repz
or
xchg
sbb
ficoms
inc
lcall
and
aad
rorb
fs
subb
jmp
repz
out
pushf
inc
jnp
cmp
cmp
cltd
fidivrl
in
icebp
lods
insl
shlb
loopne
cmp
cltd
mov
dec
loope
pusha
fidivrs
cmp
andl
xchg
repnz
cs
sub
sub
mov
das
popa
jne
xchg
mov
out
cli
lret
cld
push
out
push
mov
lea
dec
loope
mov
int
mov
mov
xor
adc
lret
cmp
mov
es
bnd
dec
out
jnp,pt
aas
fsts
pop
adc
loope
xor
insb
mov
pop
int
iret
shlb
fstpt
fildl
adc
xlat
shrb
push
sub
mov
jae
fs
out
xor
ret
or
dec
stos
cmpb
sub
fisubrs
inc
jp
xchg
mov
sbb
jne
push
or
push
jno
mov
sbb
repz
pop
jl
inc
jnp
loop
mov
mov
je
mov
test
addl
or
rorl
test
cmp
pusha
scas
xchg
cmpsb
xchg
pop
cltd
dec
adcl
jae
sti
sbb
or
pop
shlb
aas
loop
mov
aam
jbe
xor
mov
insl
add
mov
adc
cmp
xchg
jnp
jp
sti
imull
loopne
stos
jle
aaa
and
fsubrp
hlt
xchg
mov
out
loope
out
and
push
shrl
movsl
mov
and
sub
inc
mov
ret
sub
mov
jbe
pop
sub
jp
pop
ds
bound
inc
sub
cmc
jl
mov
lahf
pop
lea
adc
imul
es
cmc
push
xor
js
mov
push
push
popf
sahf
int3
leave
lea
adc
ds
cmp
loopne
sub
mov
jmp
aad
mov
imul
insl
dec
dec
sarl
sahf
pop
xor
lea
loop
jle
inc
ror
inc
pop
sbb
mov
mov
or
in
fnstcw
mov
or
or
sub
push
fisttpl
mov
inc
cmp
add
xor
sbb
in
adc
or
cmp
hlt
ljmp
js
pop
imul
or
jmp
insb
xlat
xchg
inc
and
lret
and
and
cwtl
cmp
xor
push
loope
cld
int3
stc
mov
sub
lds
clc
pop
jo
cmp
sti
jbe
rcll
mov
mov
hlt
pushf
xchg
xchg
imul
fistpll
pop
pop
jle
pop
cli
mov
roll
cmp
movsb
loop
push
fwait
sub
jge
dec
sub
cld
int3
and
stos
pop
je
lods
jl
pushf
xchg
add
xor
jno
dec
daa
adc
jecxz
xor
pop
data16
xor
cmpsl
push
test
bound
inc
cmp
jbe
sub
ficoms
into
add
cmp
cwtl
mov
ja
sub
mov
mov
inc
jl
negb
jecxz
xchg
xor
movsb
xchg
mov
inc
adc
inc
xchg
arpl
sub
mov
mov
and
sbb
push
adc
scas
aas
xchg
movsl
test
xchg
cmp
imul
inc
pop
add
cmpsb
push
dec
add
or
rolb
imul
andb
frstor
sub
es
cmp
xchg
mov
insl
test
xlat
fdivrl
arpl
or
sbb
pop
add
mov
push
jae
mov
mov
fwait
inc
add
xor
stos
or
adcl
sti
mov
lods
mov
mov
subl
out
add
pushf
call
jbe
test
arpl
cmp
out
dec
mov
xchg
pop
fimuls
hlt
push
rcll
xchg
int
mov
push
cmp
test
dec
lea
popf
stc
gs
pop
out
cmp
dec
mov
leave
aad
cmp
mov
enter
adc
test
jnp
shll
out
and
and
in
mov
arpl
jge
out
jae
fdiv
pusha
or
mov
mov
fcmove
std
movsl
cwtl
adc
ret
fwait
popf
or
outsb
std
pop
adc
cmpsb
cmpsl
mov
dec
int
lret
loope
scas
daa
call
pop
lret
movsl
jne
movsl
cmp
xor
imul
mov
call
push
stos
jle
xor
mov
push
xchg
push
push
in
shll
jne
jo
test
xchg
out
jae
mov
add
jnp
inc
std
sbb
jne
or
idivl
ret
sbb
cmc
std
mov
xor
stos
add
pop
or
or
jb
iret
dec
sar
push
mov
pop
loope
adc
addb
pushf
add
jmp
lret
mov
fwait
ret
cli
inc
out
mov
sub
or
insl
adc
imul
nop
or
mov
stc
sahf
rclb
les
arpl
xorb
cmpsl
push
pop
iret
mov
mov
or
aas
popf
int3
cmpsl
btsl
adc
sub
mov
jmp
pop
aam
jmp
mov
lret
pop
sub
xlat
inc
sbb
fsub
xor
adc
icebp
or
adc
ss
pop
mov
rclb
icebp
pop
xlat
pop
clc
lret
loop
xchg
cmpsl
test
gs
xor
lcall
adc
jb
jge
movsl
rcrb
xchg
xor
jne
jecxz
mov
test
jmp
jae
shlb
rclb
mov
out
in
jo
or
popf
jnp
rclb
inc
stos
ret
ss
bound
fidivrl
lods
cmpsl
in
cwtl
mov
mov
cmp
fs
xchg
shrb
push
out
cmc
ja
js
dec
enter
stos
stos
mov
inc
pop
xor
xor
push
insl
or
sahf
hlt
add
add
fildl
jecxz
adc
sti
xor
cmp
shrl
jns
mov
rol
jb
push
aam
call
imul
push
or
into
data16
mov
lcall
or
pop
xchg
andl
add
jge
shlb
mov
int3
jge
call
dec
or
sbb
scas
out
mov
and
out
test
shlb
mov
jmp
inc
mov
xor
popa
mov
pop
push
movsl
mov
stos
add
cmp
inc
fistl
test
cwtl
jecxz
jle
jecxz
cmp
cmc
mov
mov
pop
push
lret
pop
pusha
shl
mov
and
mov
movsb
outsl
and
ret
stos
jae
stc
mov
sub
in
inc
lods
pop
aaa
push
xchg
out
push
addr16
sbb
jg
mov
or
adc
mov
std
fs
jo
push
mov
into
cmpsl
mov
aam
mov
jb
dec
enter
pop
jae
push
add
xlat
and
pop
sbb
xchg
mov
mov
pop
test
add
xor
rcrl
cltd
jge
insl
mov
sub
xor
sub
mov
dec
inc
inc
addr16
jge
loop
aas
roll
cwtl
cwtl
push
xchg
adc
adc
cmp
stc
stc
push
movsl
xor
xchg
vunpckhpd
push
cmp
mull
xor
xchg
sbb
movsl
pop
loope
pushf
mov
fidivs
lock
std
fnstcw
pop
dec
rorl
std
mov
xor
jno
mov
fs
or
push
cs
in
xchg
fs
out
push
mov
pop
test
test
jns
add
cmp
into
ss
arpl
leave
test
iret
int3
lahf
push
and
inc
aaa
fs
ds
adc
and
and
sahf
push
dec
loop
jmp
xchg
out
and
mov
sbb
cwtl
add
pop
dec
jp
loop
xchg
jge
mov
addr16
stos
mov
sahf
and
push
loopne
mov
pop
inc
pop
inc
push
lret
dec
adc
out
daa
xchg
mov
xchg
sti
in
dec
flds
aam
pop
and
mov
int3
pop
xchg
sub
mov
xchg
insl
pop
pop
and
scas
inc
shr
jp
into
cld
lret
fmull
out
push
dec
pusha
outsb
pop
mov
add
data16
dec
jl
cmc
xor
aas
sbb
fdivrl
xor
repnz
repnz
and
xchg
mov
push
lds
sbb
add
iret
jge
add
cltd
out
jmp
xor
test
loope
fcom
loopne
jne
mov
hlt
popa
mov
inc
push
push
paddusb
iret
mov
out
push
aaa
adc
jmp
inc
flds
scas
push
insb
mov
les
dec
es
aas
test
imul
je
cli
test
jae
inc
dec
xor
clc
inc
lods
fsts
sub
jecxz
or
adcb
mov
test
arpl
inc
stos
in
inc
push
cmp
js
sbb
mov
gs
iret
mov
push
or
sbb
push
scas
add
aam
mov
cmp
mov
out
push
adc
jno
out
jmp
jnp
loope
pop
mov
push
cli
psubsb
push
fdivrs
mov
daa
notb
and
mull
inc
or
cmp
dec
cmc
jl
jo
and
xor
push
lock
rcrb
push
arpl
push
out
ret
lods
jge
and
enter
addl
sahf
aad
jmp
push
dec
pinsrw
adc
sub
shrb
jle
inc
or
xor
lds
cmp
push
mov
xlat
mov
jae
in
pop
sub
in
and
stos
xchg
ss
inc
mov
mov
insb
decb
rcrl
xlat
mov
stos
in
pop
and
jle
mov
pop
xor
ja
int3
or
mov
mov
and
stos
pushl
cwtl
mov
sub
lock
adc
ss
ljmp
push
shlb
pop
push
fidivrs
rcll
xlat
push
popf
repnz
lds
sub
mov
addl
mov
push
push
mov
pop
jle
imul
fs
fmulp
lds
addb
jecxz
adc
rorl
fdivp
mov
hlt
or
inc
push
pop
test
mov
cmp
xor
push
ds
inc
js
lret
test
push
pushf
push
jbe
sub
lock
in
inc
call
mov
push
xchg
inc
pop
sbb
mov
fcmovb
push
dec
fstl
adc
in
gs
loop
cmp
pop
pop
pop
iret
pop
pop
mov
add
int
data16
xchg
movsb
shlb
cmp
ja
clc
mov
xchg
dec
sub
imulb
push
icebp
push
lods
popf
and
mov
add
xor
sbb
inc
int3
out
xchg
cmp
sti
aam
push
sub
sbb
add
cmp
popa
and
mov
mov
sbb
pop
clc
iret
daa
pop
or
jl
adc
cmp
mov
push
dec
mov
lret
cmp
jmp
xchg
pop
mov
add
add
mov
push
sbb
sti
or
into
xchg
rolb
mov
cltd
movsl
lods
dec
repnz
nop
je
mov
std
fcoms
test
fdivr
aaa
xchg
sub
push
add
xchg
loop
adc
mov
and
test
rcrl
out
lea
adc
jecxz
insb
adc
xor
stos
mov
or
xchg
mov
lcall
aad
or
mov
jg
mov
loopne
nop
ror
jecxz
dec
jle
loopne
xchg
fcom
sub
call
das
lock
sti
mov
pop
mov
rcl
test
sub
push
clc
pop
js
cld
mov
cmp
ljmp
mov
aad
dec
fcomp
cltd
pop
out
xchg
pop
in
xor
sbb
dec
push
jmp
mov
or
mov
popl
clc
adc
into
mov
and
sbb
js
add
mov
dec
mov
inc
ficomps
cs
dec
jl
dec
out
es
push
mov
mov
call
xlat
push
mov
pusha
roll
xchg
in
push
stc
adc
or
loope
or
inc
out
sub
clc
push
outsb
jmp
fldl
sub
scas
push
rcrl
lock
mov
cmp
mov
mov
push
scas
pusha
mov
cmp
out
push
test
cmp
sahf
push
decb
and
mov
ja
xlat
cmp
inc
jl
xchg
ss
insl
dec
fmulp
cwtl
in
xchg
jp
std
lcall
sub
popf
fwait
out
sub
ja
sbb
mov
or
push
fadds
les
cpuid
adc
cmp
sbb
or
in
cmpsb
out
icebp
pop
jmp
leave
aad
sub
cld
test
sub
xor
or
jno
je
imul
stc
imul
pop
pop
aam
ljmp
js
out
std
push
adcb
out
adc
out
testl
mov
xchg
and
jg
mov
mov
mov
movsl
ret
adc
scas
jl
movsl
cmc
js
adc
enter
stos
cwtl
or
lods
push
pop
iret
mov
stos
out
fldl
push
cli
cmpsb
loopew
pop
lods
aam
gs
jb
test
fcoml
mov
push
xor
mov
sub
sbb
mov
pop
pop
inc
in
inc
aam
sub
add
popa
clc
sub
ds
aas
jg
adc
push
cli
shlb
dec
arpl
push
pop
insb
add
shll
dec
push
int3
stos
jmp
mov
sbbb
pop
xchg
fwait
cmc
ficoml
aas
sub
nop
aad
aaa
push
sbb
jbe
fcomps
adc
popa
jmp
in
mov
jp
cmp
decl
pop
aaa
jl
ss
addr16
jl
dec
mov
or
sub
hlt
sbb
loopne
sbb
mov
sub
loopne
fidivrs
imul
out
cmc
divl
ljmp
pushf
ds
cmp
and
shll
sub
out
jns
sbb
test
xchg
fcomps
push
call
outsl
rcrl
scas
pusha
jb
jae
fsubr
sbb
mov
or
sti
fistl
xchg
into
or
pop
sub
lea
shll
xor
je
outsl
roll
xchg
sub
ja
inc
push
adc
pop
ret
and
jl
mov
cli
pusha
shrb
call
and
stos
or
mov
aad
je
cltd
adc
cwtl
cmc
ja
inc
sbb
mov
push
xchg
or
outsl
and
into
mov
out
leave
mov
pop
inc
icebp
call
push
mov
cli
push
jle
cmp
sub
test
leave
mov
lods
fsubl
mov
jecxz
add
cs
add
mov
jmp
mov
sbb
xchg
das
jno
rorl
repnz
inc
je
jbe
sbb
and
jne
add
fwait
in
jp
push
out
mov
loopne
sub
imul
stc
dec
sbb
out
pushf
int
fimuls
push
outsl
ds
xlat
pushf
lea
fwait
ret
lahf
cmp
xchg
or
scas
es
aad
nop
mov
dec
mov
filds
push
clc
mov
out
cmp
mov
dec
es
jecxz
sub
dec
inc
mov
cmc
lea
test
shrl
sbb
inc
mov
into
stos
and
jle
cmp
je
adc
stc
mov
test
sbb
mov
sub
bound
scas
or
fldt
testl
and
fisttps
jns,pt
adc
daa
or
sahf
cld
in
mov
addr16
stc
imulb
imul
jbe
mov
imul
add
pop
aad
mov
mov
and
jmp
fscale
shlb
push
call
and
pop
mov
mov
xor
push
in
jg
and
push
mov
int3
addr16
mov
je
add
mov
xor
dec
rol
mov
stos
aas
mov
mov
push
jge
mov
jnp
and
test
or
pushf
sub
movsl
aad
push
mov
dec
adc
movsb
dec
add
cmp
lods
cli
sub
lods
xrelease
insl
or
inc
cmpsb
data16
sar
jo
xchg
nop
pop
jb
xchg
imul
push
data16
aad
sti
dec
cmp
rcll
or
daa
std
lret
rorb
iret
leave
mov
xchg
add
sahf
fiadds
test
cmp
and
fwait
xor
jno
pushf
xor
mov
pop
imul
jge
ficoml
cmpsl
dec
sbb
xchg
mov
sti
mov
inc
pop
jp
movb
cltd
repz
xchg
add
jne
jnp
or
xorb
sbb
cmp
inc
in
pop
mov
mov
adcb
adc
call
es
mov
stos
cwtl
mov
mov
sub
call
ja
inc
sbb
xchg
scas
sbb
adc
push
mov
scas
sbb
push
mov
out
lret
hlt
jno
push
fldenv
mov
sar
sbb
popa
roll
or
lcall
push
cli
inc
cmpsl
xchg
push
mov
aam
rol
push
lcall
in
insb
adc
lods
adc
cmp
in
addr16
icebp
dec
lods
cmp
call
pop
mov
insb
xlat
xor
imul
test
mov
and
jns
fildll
xchg
adc
inc
cmp
cmp
out
aad
jmp
dec
sbb
inc
dec
rcrl
xor
loopne
push
ds
xchg
xor
mov
je
mov
xor
loop
mov
cmp
inc
std
sub
fnstenv
push
rclb
sahf
mov
adc
aam
mov
addr16
push
test
popf
das
pop
incl
mov
lods
dec
xor
cld
xchg
and
mov
push
cld
push
ret
test
and
dec
orl
insl
sub
and
pusha
xor
pop
sub
or
jp
out
movsl
sbb
sbb
insb
xor
mov
mov
push
pop
mov
cmpsb
pop
push
pop
push
mov
pop
inc
pop
mov
imul
mov
xlat
repnz
jg
xchg
idivl
mov
mov
push
push
loop
adc
mov
test
jb
mov
inc
in
jg
jl
mov
cli
ficoms
test
inc
push
xor
and
testb
filds
icebp
push
mov
mov
sub
and
mov
push
cwtl
push
jmp
mov
shlb
sub
fists
lret
pop
test
mov
loope
dec
lds
faddl
rolb
dec
popa
or
sbb
jbe
or
ja
xor
mov
frstor
clc
pop
xchg
mov
pop
sub
divb
cmc
lret
xchg
lods
jns
sub
mov
pop
ret
popf
cmp
inc
loopne
mov
out
movsl
mov
shr
cmp
das
subl
mov
int3
xor
xchg
xchg
rorb
addr16
outsl
pop
popf
aam
je
push
adc
movsl
xchg
mov
adc
xor
pop
cltd
adc
mov
icebp
ljmp
stos
adc
mov
jnp
insl
popf
inc
adcb
cmp
orl
scas
mov
mov
mov
mov
stc
xor
std
or
push
scas
and
adc
lcall
lahf
inc
enter
or
xchg
push
cltd
jle
lea
pop
cmp
es
adc
es
bound
mov
in
push
jne
in
mov
fwait
push
dec
loop
jle
mov
add
rclb
imul
in
out
or
setbe
inc
out
es
lcall
leave
lcall
and
xchg
jg
shll
in
inc
imul
divb
xor
ss
sbb
not
add
inc
shlb
jb
out
in
outsl
lea
outsb
sbb
push
inc
inc
xor
xor
sbb
xor
sbb
div
cwtl
push
rcll
bound
add
adc
ja
fimull
orl
and
nop
jle
inc
jbe
aaa
push
cmp
out
dec
push
mov
ja
cmpsl
pop
repz
xchg
pop
cmp
push
xchg
daa
mov
in
ror
dec
in
mov
mov
arpl
jns
dec
push
pop
addr16
ljmp
insb
mov
inc
leave
sub
add
inc
push
inc
aad
dec
mov
icebp
push
pop
pop
sub
stos
popa
push
mov
jmp
outsl
fwait
or
in
fisubrl
add
inc
data16
mov
jnp
mov
pop
stc
scas
pop
adc
pop
mov
add
or
rcr
jmp
pop
pushw
mov
or
dec
sahf
xorb
xor
inc
scas
divl
and
nop
sub
lea
hlt
jp
sub
pop
out
jns
fs
pop
fbld
jb
push
mov
icebp
loope
xorl
push
xchg
inc
fs
pop
sbb
shrl
or
imul
add
pop
sti
dec
xchg
out
inc
mov
hlt
js
or
pop
das
std
adc
xchg
push
test
lods
and
adc
mov
movsl
xor
sarb
push
pop
test
or
repz
in
cmp
ret
mov
into
push
mov
jmp
and
shl
jb
pop
and
stc
test
push
mov
test
dec
data16
das
nop
jp
mov
clc
and
cmp
icebp
pop
outsl
scas
inc
in
das
sti
je
das
xor
inc
outsb
xor
add
pop
lret
lea
pop
push
int3
mov
cs
test
mov
mov
loop
mov
in
mov
or
repz
mov
test
or
iret
lea
inc
cmpsl
lret
imul
out
and
and
dec
inc
pushf
mov
pop
cs
sahf
div
fcoms
xchg
xor
adc
mov
adc
or
jmp
ds
pop
xchg
mov
xchg
stos
xchg
sub
sub
or
inc
xor
and
xchg
and
dec
andb
or
addr16
mov
jae
cmp
mov
in
fmull
adc
lods
lret
test
push
loope
pop
lds
cmp
mov
mov
das
pop
or
dec
out
in
push
roll
mov
dec
mov
jg
adc
dec
sbb
pushf
pop
int3
xchg
xchg
arpl
testb
cwtl
adc
lret
ss
out
aas
inc
imull
cmc
and
repz
nop
cli
xchg
add
mov
pop
or
les
movsb
mov
arpl
jbe
pop
adc
in
fwait
jne
addb
stc
shrl
mov
pop
pop
or
outsb
mov
or
aas
shll
adc
dec
and
sbb
mov
je
jo
sti
das
stos
movsb
inc
shrb
nop
mov
sbb
pop
mov
divl
adc
dec
mov
xlat
js
mov
sub
push
adc
xchg
fsubr
pushf
ficoms
push
adc
pusha
and
mov
or
xchg
shll
jne
pop
sar
xor
mov
jbe
xchg
das
sub
cmp
mov
pop
ret
inc
idiv
cld
mov
inc
xor
pop
add
cmc
enter
mov
jnp
sar
lret
push
hlt
push
xchg
popa
sub
xor
dec
lods
je
xor
notb
fnstenv
scas
bound
push
stos
arpl
sahf
inc
cld
push
inc
mov
loopne
fisttpll
sub
xor
jo
xor
test
jmp
icebp
pop
mov
sbb
in
cmpb
mov
mov
or
xchg
jp
mov
mov
rorb
jne
dec
inc
leave
je
je
xorb
sbb
lea
xorb
fsubs
or
movsb
fs
inc
mov
jp
das
jle
les
mov
mov
jo
dec
out
cmp
repz
cltd
mov
adc
les
out
cwtl
mov
sbb
cwtl
andl
int
inc
push
sub
adc
shlb
test
xor
mov
mov
lret
ret
push
aaa
mov
sub
xor
sub
pop
fwait
shl
ret
aam
xor
adc
add
ja
inc
add
adc
jle
adc
sub
movsl
push
les
push
jo
scas
lret
sub
dec
mov
inc
aam
adc
insl
mov
and
addl
jg
pusha
and
in
sub
add
imul
inc
sbbl
sbb
mov
sub
iret
ds
in
lret
pop
in
pop
ja
push
sub
mov
out
adc
mov
jmp
adc
movsl
in
mov
xlat
testb
cli
inc
or
popa
subb
sub
out
cmpsl
dec
call
jle
aam
andl
push
adc
movl
out
das
enter
sbb
cli
rcrl
popw
in
xchg
sbb
scas
dec
clc
mov
or
mov
mov
cmp
pusha
push
xor
mov
icebp
push
leave
mov
jae
and
cmp
jl
insb
xlat
decb
mov
bound
std
xchg
es
mov
and
cld
jl
das
push
mov
in
or
arpl
outsl
int
loop
ret
testb
xor
repz
call
mov
stos
jge
push
loop
pop
mov
jmp
mov
jp
push
adc
subl
fistpll
test
pop
add
insl
ds
jecxz
adc
adc
xor
add
xchg
test
adc
mov
jecxz
mov
lods
sub
dec
insl
mov
dec
sbb
sbb
aaa
push
out
fildll
nop
call
adcl
xchg
cmp
lea
jnp
out
mov
popa
mov
arpl
mov
sub
imul
pop
mov
stc
inc
push
xor
add
push
sub
sub
daa
outsl
ss
rorb
inc
xchg
cmp
mov
xchg
icebp
add
dec
addr16
inc
test
add
xchg
mov
jge
add
dec
push
mov
sub
add
sbbl
mov
or
pop
ljmp
insl
enter
ror
jecxz
adc
inc
xor
add
xor
out
mov
inc
out
mov
mov
add
in
mov
cltd
jp
add
cmpsb
fcoml
adc
std
xchg
addb
int
cmp
iret
sub
mov
nop
rcl
leave
bound
mov
lcall
mov
test
adc
aaa
pop
sub
or
ja
mov
test
xor
nop
sub
pop
cmpsb
mov
dec
or
mov
mov
xor
orl
cmp
xchg
sti
xchg
mov
dec
addr16
sub
xlat
sbbb
daa
adc
insl
sub
outsb
pop
dec
inc
xchg
and
dec
js
add
mov
or
inc
jb
cli
fs
mov
loopne
add
adc
test
xchg
dec
xchg
xor
adc
aas
add
mov
sbb
pop
fcompl
pushf
faddl
cltd
push
sbbb
in
xchg
popa
cmp
dec
stc
jle
lret
cltd
gs
aaa
mov
sti
mov
addr16
mov
pop
dec
sub
loopne
movsb
xchg
jnp
call
adc
pop
mov
lret
les
cmp
push
lret
mov
push
mov
in
push
icebp
out
test
add
stc
xor
movsl
cli
xchg
or
mov
dec
mov
mov
bound
leave
and
mov
scas
rcll
lea
pop
jle
or
mov
jbe
inc
adc
or
rorl
pop
xor
fwait
je
inc
cmp
and
dec
or
mov
xchg
fs
or
data16
pop
jns
popf
jmp
into
test
lea
adc
ljmp
hlt
cmp
mov
sub
mov
dec
dec
test
cli
daa
xlat
mov
aad
add
mull
stos
xchg
pushf
gs
mov
das
ja
xlat
inc
adc
shrb
jmp
xor
mov
outsl
je
pop
fimull
sbb
cmp
push
adc
lahf
jb
jecxz
mov
sub
je
pop
xchg
das
aaa
test
sub
bnd
mov
mov
adc
mov
add
cmp
into
dec
fstps
inc
jbe
dec
cmp
clc
in
repz
mov
cmovo
pop
loopne
in
leave
test
mov
fmul
cwtl
ret
lea
lock
cmp
int
xor
rcl
inc
mov
fidivs
mov
push
inc
xor
push
not
lods
cmpsb
push
push
xorb
cmc
std
into
jg
cmpsl
or
in
in
int3
bound
inc
jne
enter
pop
sub
sbbb
mov
sub
inc
or
or
adc
jle
jl,pn
inc
mov
sub
dec
add
notl
xchg
mov
pop
push
adc
and
jg
inc
and
out
test
add
pop
dec
icebp
push
xlat
dec
aam
ljmp
mov
stc
cmpsb
pop
scas
mov
mov
cmp
xor
gs
repnz
and
int3
jmp
test
xchg
sbb
inc
bound
sbb
pop
leave
subb
dec
iret
fldt
add
xchg
sub
push
adcb
packsswb
cmp
jecxz
adc
add
xchg
push
insl
lock
hlt
or
dec
in
leave
sbb
out
mov
push
sub
add
cwtl
pop
add
adc
bound
orl
cmp
or
or
lods
andl
pushf
lret
cmp
test
mov
pop
bnd
push
cmpsb
cmp
cli
aam
fwait
movsb
dec
jbe
clc
jo
je
enter
mov
mov
mov
loope
testb
repnz
scas
cmpsb
es
insb
aas
in
sti
movsb
pop
adc
xorb
loope
mov
pop
xchg
adc
neg
lret
lret
sbb
imul
das
xor
lahf
inc
cltd
cltd
int3
lcall
sahf
xor
iret
sbbl
jg
test
dec
push
mov
scas
dec
sub
daa
push
rolb
pop
fistpl
lcall
push
jne
loopne
loope
xlat
bound
xor
rorb
jge
sbb
je
jne
fmuls
sbb
lods
pop
jnp
adcl
and
xchg
ja
stos
shll
fdivrs
les
punpckhdq
out
mov
out
lods
pop
cmp
test
xchg
in
mov
jl
stc
mov
xchg
adc
sbb
pushf
shl
dec
mov
mov
je
mov
adc
stos
xor
mov
icebp
ficompl
insl
div
icebp
jmp
jge
sarl
add
sti
pop
jmp
aad
jo
mov
pop
pop
insl
mov
add
test
cmpsb
pop
ss
dec
orl
imul
rclb
insl
push
mov
sbb
ret
pop
test
pop
xchg
les
test
sub
out
mov
dec
stos
sbb
dec
and
dec
mov
inc
imul
cmp
cmp
and
push
stc
xchg
rcrb
test
int
les
aas
test
mov
mov
cwtl
mov
or
fincstp
enter
xor
jg
ror
sbb
and
add
mov
cmc
sub
bound
add
aaa
int3
sub
out
xor
mov
push
faddl
push
mov
push
out
jb
loopne
jecxz
xchg
repnz
xchg
pop
lods
scas
js
pushf
jmp
ss
mov
inc
and
bound
adc
nop
loopne
arpl
inc
mov
loop
movsl
or
dec
push
mov
inc
pop
aaa
mov
jge
lcall
stos
rcrb
or
fidivrs
push
arpl
jle
mov
lret
popf
fidivrl
repz
adc
xlat
aas
xor
decl
dec
mov
dec
subl
fldenv
mov
jne
xorb
cs
fsubs
pop
mov
fsubp
in
js
pop
cld
jnp
std
clc
sarb
out
mov
mulb
push
xor
cmp
rcrb
xchg
mov
sarl
xchg
fcoms
lret
adc
bound
dec
pop
es
mov
int3
sbb
insl
ret
mov
sbb
add
stos
gs
push
das
sub
adc
cltd
jmp
and
xchg
inc
cld
lcall
lods
call
cld
dec
out
pop
mov
mov
mov
movsb
push
adc
fwait
mov
fbld
mov
in
jb
fwait
dec
jl
call
xchg
sbb
mov
and
jne
xchg
jl
mov
mov
dec
jne
pop
cli
cmp
mov
xorb
adc
inc
adc
mov
dec
sub
stos
fcoml
jbe
aaa
repnz
cmp
rorb
sub
mov
imul
dec
fstpt
cmpsl
js
outsb
loope
jb
cs
xor
js
sub
push
shrl
fsubr
and
cwtl
shrl
push
mov
or
xchg
enter
push
adc
sub
fildl
xchg
mov
test
mov
sahf
stos
lock
mov
xor
insl
xchg
mov
dec
testl
popa
aad
dec
mov
js
cs
call
lods
lock
mov
inc
jg
add
sahf
add
jb
adc
sub
cmpsl
cmc
mov
and
mov
dec
stos
xchg
push
mov
push
xchg
nop
scas
dec
std
pop
cld
data16
sub
clc
jns
mov
pusha
insl
fwait
loopne,pn
jg
lea
jmp
mov
fucompp
scas
mov
dec
ljmp
inc
mov
jge
test
jb
mov
ds
das
into
dec
jnp
test
adc
clc
jmp
cmp
push
jns
dec
sub
mov
inc
out
call
lahf
jno
xor
xchg
cld
sar
xor
inc
jge
pop
scas
mov
fwait
lds
cs
sbb
sub
sbb
les
inc
dec
not
xchg
cltd
inc
sarb
lods
add
aaa
and
xchg
pop
fstpt
xor
mov
iret
std
xchg
cli
scas
and
push
in
and
xor
mov
dec
les
fisubl
jle
cmp
fidivl
push
jg
jg
ljmp
or
fwait
hlt
dec
pop
sub
shr
bound
add
jb
dec
lret
cmp
ljmp
and
fists
popf
mov
sub
scas
mov
push
pop
sbb
xchg
in
xor
test
jle
dec
xor
es
sbb
sbb
mov
daa
add
sbb
mov
dec
rorl
pop
push
jl
sub
cmp
mov
push
sti
dec
idivb
add
lret
outsl
cs
imul
lret
addb
adc
sub
fidivl
cmpsl
loopne
xchg
push
clc
arpl
ret
or
orb
aas
cltd
das
sbb
lock
xchg
push
mov
insl
rolb
rorb
in
dec
call
cmp
cmp
or
cmp
jbe
cld
call
icebp
aas
imul
xor
shlb
cmpsb
cmpsb
cmp
jne
cltd
and
js
jg
jle
das
mov
lret
pop
push
or
mov
push
jle
leave
enter
xchg
fdivrs
jg
xor
movsl
insl
pop
sbb
inc
data16
fsts
lods
jl
and
mov
fwait
jge
jmpw
xor
adc
cmpl
fidivrs
pop
lock
pop
out
sbb
jmp
add
push
pop
sub
into
lcall
subb
sub
out
es
aad
jno
push
adc
out
lret
pop
out
push
push
push
pop
mov
add
push
and
lods
cmp
dec
mov
cmp
inc
test
pop
pop
roll
or
loop
adc
dec
pop
inc
mov
dec
negl
movb
dec
cmpsb
ret
xor
bound
or
call
out
mov
leave
push
stos
les
dec
mov
xchg
pop
mov
jg
outsl
mov
bound
fs
pop
jb
dec
pop
or
fidivrl
mov
mov
jo
jnp
ret
dec
clc
sub
or
mov
rol
int3
out
lcall
orb
xchg
jp
sub
cmp
jno
mov
jne
sub
or
test
adc
shrl
call
cwtl
or
arpl
mov
mov
test
outsb
dec
pop
test
pushf
add
mov
mov
mov
lcall
xchg
rclb
ja
loope
mov
test
fisubs
popf
ficompl
pushf
and
xchg
loopne
mov
xlat
lods
cli
dec
cmp
bound
or
lret
outsb
and
push
rolb
xor
ret
std
lea
into
out
sar
cmc
add
fs
gs
shrb
mov
mov
mov
shll
enter
loope
mov
dec
xor
sbb
mov
mov
aas
mov
sub
adc
ss
xchg
test
stos
cwtl
js
pop
frstor
orb
xchg
outsb
stos
inc
and
mov
mov
test
pusha
push
hlt
repz
cmp
xchg
jne
outsl
or
add
and
fsubs
sub
pop
clc
enter
or
test
inc
and
fidivrs
fisubrl
je
and
or
scas
rcrb
inc
ljmp
pop
imul
mov
lock
inc
mov
jle
movsb
daa
pushf
cld
push
leave
xor
push
push
mov
insb
pop
xor
mov
or
pop
jle
fisttpll
push
roll
cld
sbb
or
push
fsubl
cmp
adc
imul
ljmp
ret
add
sahf
cmpsb
xchg
bound
sti
mov
divb
and
inc
ret
xlat
cld
lock
fnstenv
lret
shrb
xchg
add
pop
adc
in
fwait
popa
jns
mov
aaa
xchg
adc
mov
nop
jmp
xor
in
out
sub
dec
test
addr16
jmp
lds
xlat
xor
lds
xchg
add
cmp
or
dec
sti
sbb
mov
mov
mov
sub
adc
jno
pop
jge
jmp
cs
jnp
pop
fwait
daa
rclb
sbb
jb
mov
jne
cmpsl
xor
iret
fwait
pop
aad
loope
push
jnp
shll
or
inc
jl
call
pop
sti
test
decl
jmp
int
mov
out
or
aas
xor
rcll
mov
xor
adc
mov
shl
sahf
adc
nop
sbb
push
jecxz
fsubs
sub
test
sar
movsb
std
imul
add
je
pop
xchg
std
mull
aas
jb
dec
in
pop
das
sbb
dec
cli
faddl
mov
test
hlt
jecxz
sbb
ljmp
daa
fistl
movsb
mov
xchg
scas
aaa
popf
shll
cmc
jmp
push
sarb
mov
ljmp
mov
push
arpl
jo
push
push
jmp
adc
int3
add
dec
inc
mov
jle
xchg
pop
clc
adc
out
push
cmp
mov
mov
jmp
mov
inc
repnz
push
fsubr
ret
fdivl
add
icebp
sbb
pusha
dec
lds
ja
shrb
dec
jbe
xor
sub
sahf
push
xor
xchg
and
pushf
jnp
nop
xchg
pusha
mov
xchg
or
push
iret
mov
xchg
sbb
hlt
in
push
xor
sub
jnp
call
fidivrl
dec
xchg
in
test
ja
les
aad
xor
out
add
jnp
add
sbb
sarl
imul
fucom
loop
pop
jae
out
dec
sbb
cmpsl
test
adc
sbb
mov
jns
pop
xor
jmp
mov
mov
addl
cmp
dec
inc
cmp
aad
data16
out
subl
shr
mov
sbb
xchg
fadd
pop
cli
out
imul
ss
cmp
xor
shl
out
clc
jne
adc
dec
push
enter
sahf
mov
inc
fdivr
xchg
arpl
sbb
repz
or
loope
ror
popf
xor
das
sbb
enter
popa
mov
adc
dec
dec
xchg
mov
testl
xchg
ljmp
shl
das
push
fiadds
cmp
pop
test
into
enter
stc
inc
jmp
lea
clc
inc
jmp
mov
movsl
and
mov
cmpsl
add
dec
pop
jno
cmp
imul
cltd
sti
sub
sub
lock
lods
push
xchg
xor
ljmp
andl
pop
sub
sarb
iret
push
pop
in
arpl
fstpt
in
shl
mov
mov
and
cmp
dec
ror
out
outsl
popl
dec
fistpl
sbb
adc
push
push
std
insl
push
shrb
add
test
and
push
pop
popa
les
cmpsb
pop
lock
cmp
cmp
push
push
popf
jle
fcoml
dec
pop
jecxz
adc
mov
adc
xchg
adc
pop
fsubrs
adc
add
scas
nop
sti
inc
mov
push
addr16
xchg
mov
and
push
push
pop
pusha
clc
jge
into
addl
fs
lds
or
jb
pop
inc
push
scas
lock
call
cmpsl
setp
cmp
repz
bound
pusha
push
push
dec
pop
adc
aas
lcall
sbb
stos
lea
cmp
pop
or
jmp
push
inc
lcall
movhps
cs
add
jmp
push
jp
jl
sbb
pushf
movsb
imul
sub
mov
es
xchg
in
fnsave
push
lahf
jo
xlat
dec
imul
jle,pn
lcall
lcall
roll
mov
lock
or
in
rcl
cs
sbb
into
out
int
and
cmp
daa
inc
test
push
testl
adcb
inc
cwtl
pushf
fs
jp
out
jne
cmpsl
and
dec
jbe
stos
nop
jbe
repz
into
dec
pop
ret
rcr
pop
aam
sti
dec
roll
push
pushf
sbb
jae
push
jecxz
sbb
push
shl
lret
jns
mov
sub
leave
data16
addl
daa
adc
jne
xor
aad
test
cli
fbld
cmp
and
stc
fadds
mov
add
test
adc
mov
dec
push
xor
jmp
testb
mov
test
push
sbb
out
jne
mov
lret
cmpb
nop
or
outsl
in
xchg
sub
xchg
cmpsl
sub
aad
ja
and
repnz
sbb
xchg
std
xchg
cli
pop
add
bound
sub
inc
outsl
xor
mov
scas
adc
jp
inc
mov
mov
out
enter
test
js
and
rorb
adc
loop
xor
dec
addb
pop
pop
inc
mov
pop
fnsave
ja
push
call
and
sarb
jae
cmp
push
aas
cmc
or
lcall
lds
sbb
es
std
iret
test
cmp
sarb
loop
sarl
pop
popa
subb
push
insl
aas
sub
or
addr16
sbb
fwait
iret
in
push
sub
fisubrl
add
ret
addl
pop
xor
loope
pushl
decl
shll
dec
inc
into
jge
xor
bnd
mov
xchg
das
mov
int
cld
xchg
int
and
xorl
iret
out
lock
push
rcrb
scas
out
rcrb
add
jbe
cmp
dec
lods
jmp
sti
dec
sahf
sub
pop
mov
sarl
cmp
arpl
xchg
sub
or
cmp
es
push
push
popa
pop
mov
jmp
shl
cmp
and
dec
insl
mov
jmp
dec
and
fisttps
mov
push
stc
xchg
mov
daa
test
and
and
lcall
arpl
int
cmp
jo
xlat
dec
pop
xchg
dec
jle
cmpb
lds
mov
xchg
call
pop
outsl
push
mov
sub
das
ljmp
jnp
and
pop
and
xlat
sahf
or
adc
push
movsl
pop
outsb
xor
lods
cmp
inc
sahf
pop
popl
inc
xchg
cmp
into
loopne
cmpsl
arpl
mov
imul
jle
bound
jnp
cmpsb
xchg
and
mov
xchg
fimull
pop
xchg
pop
cli
leave
js
in
mov
adcb
or
pop
sbbb
testl
mov
push
rorl
dec
mov
pop
imul
lods
mov
and
hlt
imul
mov
cmp
es
adc
jae
ror
inc
xor
enter
test
and
xchg
jl
in
inc
nop
sub
ret
mov
cs
int
sbb
lods
es
jmp
sub
mov
xor
test
movsb
sbb
xor
aam
bound
cmp
dec
scas
adc
test
jg
ss
aaa
scas
fadds
imul
sbb
adc
popf
inc
mov
cmp
hlt
mov
jge,pt
lea
cmp
push
cwtl
movsb
push
push
push
scas
pop
pop
mov
sbbb
stos
xor
arpl
lahf
jno
cmp
cmp
inc
pop
dec
push
xchg
xchg
and
cli
test
aas
xchg
insl
push
shll
mov
cmpsl
mov
jno
mov
test
mov
mov
inc
ljmp
leave
stos
je
leave
jmp
negb
add
push
movsl
jb
mov
mov
inc
push
push
les
jb
into
or
pushf
lret
iret
out
mov
mov
jmp
sub
clc
aaa
inc
fucom
xor
rcrb
std
xor
lods
xchg
mov
jbe
xchg
xor
insl
and
and
adc
dec
cmp
cmpsl
mov
std
int
insb
xor
xor
rcpps
xor
mov
ljmp
xchg
std
jmp
mov
stos
int
js
pusha
mov
fcomip
jne
sbb
cmc
lock
in
fwait
or
or
les
and
xor
mov
test
sarl
add
sub
cmpl
adc
insb
out
cmp
xor
add
in
mov
pop
insl
mov
xor
in
pop
in
fistl
popf
xchg
mov
jbe
mov
lret
ja
and
xchg
pop
xchg
lahf
daa
cwtl
inc
lds
and
mov
iret
sbb
loopne
jge
and
and
ljmp
jno
out
mov
test
dec
divb
mov
inc
pop
xchg
cmp
stos
rorl
jmp
push
xor
aad
rdpmc
cmp
dec
push
ds
repnz
mov
jo
jae
cmp
movsl
imul
adc
sub
jbe
push
sbb
adc
or
scas
jns
inc
cltd
or
mov
adc
inc
push
ficomps
mov
pop
movl
dec
ret
xor
push
fstps
leave
aad
mov
sbb
jnp
or
xor
xor
repnz
cmp
dec
in
cwtl
sarb
cmp
ror
mov
cmpsl
or
sti
icebp
push
frstor
inc
int3
int3
jns
jbe
in
add
fnstenv
aas
out
addb
or
lahf
add
ret
cmp
sbb
sbb
mov
push
push
sbb
cmpsb
jbe
mov
dec
xchg
adc
loopne
fmulp
sub
mov
loop
fmull
fwait
sbb
xor
outsb
cmp
call
pop
jns
subb
cltd
bound
inc
rcrl
push
ja
xor
outsb
sub
stos
mov
add
inc
leave
cltd
mov
outsl
aam
js
imul
mov
jno
or
into
je
cmp
sub
je
add
loop
cmp
push
inc
leave
mov
nop
shrb
mov
ret
ror
inc
and
fnstenv
cmp
jnp
pushf
jo
enter
jnp
mov
jecxz
scas
adc
aam
leave
xor
cs
test
or
inc
popf
pop
or
loopne
xchg
std
cmpsb
sub
aad
push
dec
call
out
nop
cwtl
test
sahf
or
sarb
mov
and
cltd
pop
add
xor
and
add
mov
loope
imul
or
pop
cmp
test
sbb
pop
jns
cs
jmp
and
daa
enter
sbb
fcmovnbe
std
push
lret
mov
add
or
add
movl
sbb
cwtl
das
mov
stc
cmp
cld
daa
mov
cwtl
adc
es
mov
and
cmc
movsb
into
xor
xor
and
in
adc
in
jbe
fdivs
in
cs
repz
sub
subb
push
xchg
sbb
fcomps
mov
cmp
mov
push
xor
ja
cld
call
push
inc
out
mov
js
xchg
fcmovb
push
aas
sbb
inc
jns
leave
aaa
adc
pop
data16
jecxz
loope
popa
mov
fidivrs
jmp
xchg
loopne
push
pop
add
int
xchg
and
sbb
fs
mov
inc
cwtl
sbb
loope
mov
jecxz
lods
cmc
scas
std
jle
aas
push
or
pop
fcomp
pop
mov
sbb
movsb
and
xor
add
and
loope
ljmp
hlt
cwtl
xor
pop
repnz
adc
fidivs
lock
push
adc
cmp
es
je
xchg
rolb
jb
cmpsl
cwtl
pop
test
pop
xchg
data16
rcrl
inc
mov
scas
jge
inc
and
fnsave
xchg
and
adc
loope
popf
scas
enter
out
ret
jp
cltd
cli
or
imulb
fs
push
mov
popf
hlt
and
fisttps
stos
mov
jmp
inc
and
in
aas
dec
insb
cmpsl
test
lret
and
leave
cld
out
xlat
out
xchg
add
in
jp
push
cmp
lods
and
mov
sbb
inc
mov
sub
jl
repz
or
mov
add
add
pop
into
jno
int
stos
in
repz
cmpsl
shl
or
sarl
mov
inc
add
xor
pop
push
je
adc
sbb
or
or
stos
pop
push
mov
or
push
fstpt
sarb
mov
sub
outsb
xor
cmp
sbb
shl
addb
hlt
lret
lret
and
add
mov
enter
sbb
sbb
mov
int
pushf
inc
in
sahf
sbb
jg
inc
jge
xor
sbb
shll
nop
push
inc
das
mov
into
int
shr
idivl
por
frndint
cmp
adc
hlt
test
jo
in
into
mov
shlb
lods
push
cld
jmp
add
push
adc
je
mov
push
out
repnz
mov
pop
mov
lds
cmp
inc
jne
inc
push
adcb
lods
mov
fcoms
mov
push
in
out
push
xchg
icebp
xchg
addr16
add
prefetch
or
movsl
mov
call
daa
jg
das
and
shl
mov
xchg
push
call
pop
cmp
mov
xor
xor
push
xor
pop
subb
push
daa
enter
lods
in
mov
cmp
divb
aam
mov
cmpsl
push
and
in
adc
inc
repnz
cmp
aas
divb
insl
outsb
xor
pop
mov
push
loopne
aam
xor
sti
xlat
sub
jl
add
test
mov
ror
or
mov
lret
icebp
popa
je
dec
jg
fwait
movsl
cmp
push
mov
sbb
cmp
icebp
mov
push
lds
hlt
movsl
mov
sub
sbbl
mov
testb
jb
push
jge
test
je
and
or
add
dec
pop
sub
je
ljmp
xchg
data16
jge
push
ror
jnp
bound
mov
into
cmp
std
xchg
jmp
cmpsb
lea
fistl
ljmp
inc
in
dec
mov
icebp
daa
lods
mov
repnz
clc
ss
push
dec
les
daa
repnz
cmpsb
mov
lcall
push
jge
rorb
lea
sbb
add
popf
insb
push
sbb
pop
aas
ja
mov
mov
ljmp
add
jmp
lahf
sbb
jb
inc
in
or
xor
js
ret
inc
mov
ljmp
popa
in
xor
mov
data16
jecxz
mov
dec
ljmp
scas
mov
nop
push
test
add
xor
fbld
cmp
dec
nop
jmp
cmpxchg
jb
xchg
inc
rcrb
xchg
mov
les
sbb
test
imul
inc
xor
mov
pop
scas
inc
mov
mov
shlb
lret
mov
mov
ja
cmp
test
xchg
enter
cmp
add
inc
inc
aam
sub
mov
imul
inc
pop
jle
mov
fadd
aam
mov
sub
sbb
add
fcomps
mov
scas
stc
sub
mov
pop
call
xor
sahf
pop
cmc
pop
shl
shrb
adc
push
sahf
test
shlb
push
cmpsb
dec
xchg
adc
adc
xchg
imul
pop
push
bound
and
fstps
adc
cmp
xlat
cmp
fcoml
iret
je
mov
fisubs
lahf
fcmovnb
sbb
sub
pop
aad
cld
lret
in
or
mov
daa
sti
mov
lds
repnz
icebp
mov
pop
jnp
mov
cs
mov
jae
cmp
xorb
cmp
mov
push
xchg
mov
test
aam
inc
xchg
mov
xchg
sbb
or
dec
lock
xor
imul
fwait
mov
fcoms
xor
pop
mov
nop
fadd
or
and
inc
dec
dec
push
jl
or
pop
gs
or
mov
pop
data16
pop
pusha
lahf
dec
push
mov
mov
and
pop
sub
mov
test
pop
stos
lret
and
bnd
mov
lret
scas
add
sbb
jae
fucomp
push
mov
ljmp
fcomps
roll
push
mov
and
fwait
cs
jo
or
jge
ss
push
dec
fs
mov
mov
sub
and
ret
pop
sub
xor
dec
movsb
iret
movsb
mov
aaa
mov
xor
or
gs
addr16
cli
mov
lret
rolb
cmp
bound
fmull
jns
orb
aas
nop
ret
mov
push
push
in
scas
fs
mov
in
push
push
xor
cli
or
xchg
sbb
cwtl
imul
rolb
sbb
popf
fisttpll
decl
cmpb
and
lods
imul
clc
shl
in
shrb
das
sub
inc
out
mov
jp
xor
lret
or
or
xorb
gs
jo
mov
iret
lret
lahf
xlat
cwtl
or
pop
add
and
ja
jp
addr16
aam
and
and
and
ret
pop
mov
push
xchg
sub
pop
ds
cmc
ljmp
ss
mov
dec
xor
mov
enter
sub
out
jle
mov
dec
push
push
xor
dec
push
jae
cltd
loope
inc
inc
mov
xchg
out
movsl
loope
xor
cs
or
rorb
fs
mov
outsb
sub
mov
nop
xchg
jo
or
mov
imul
adc
repnz
lret
pop
out
addr16
sub
or
test
mov
out
inc
iret
or
sub
sub
fildll
inc
sbb
cmp
cmpsl
ret
dec
dec
and
sbb
movsl
sbb
jb
inc
inc
popa
inc
pop
imul
or
iret
gs
iret
cmp
popl
xlat
out
mov
cs
sub
xchg
es
out
mov
jb
call
imul
insl
add
mov
pop
and
rolb
xlat
data16
lock
out
lret
fldlg2
xor
sub
jae
push
inc
mov
push
int3
mov
icebp
inc
lock
sub
mov
int3
or
outsb
mov
cltd
setge
mov
loope
pop
in
mov
icebp
aaa
mov
pop
rcrb
mov
dec
imul
and
cmp
push
jae
cmpsl
out
setne
adc
clc
inc
ret
wbinvd
subb
xchg
cmp
jge
and
loop
xor
push
ss
movsl
cmp
loop
cld
ja
scas
ljmp
push
lods
ret
xchg
out
in
push
or
enter
imul
in
in
fsubs
loopne
insb
xchg
jae
add
int
mov
stos
jae,pn
repz
jge
add
push
fcom
inc
mov
imul
dec
jnp
das
jecxz
xchg
outsl
inc
adc
push
das
ret
adc
out
sub
dec
pop
popa
lret
mov
stos
push
adc
arpl
out
enter
jmp
inc
xchg
leave
test
xchg
add
sub
add
out
adc
iret
fnstcw
dec
xchg
das
gs
into
cwtl
xchg
dec
mov
inc
mov
test
subb
daa
test
fstpt
add
sahf
push
pop
loopne
sub
sarl
jmp
adc
into
lods
pop
cmp
lahf
xchg
jle
in
ret
cmpsb
sub
xorl
stos
adc
fucomp
mov
push
xchg
enter
or
fcmovu
add
repz
test
cmp
insl
fldt
sbb
or
adc
pop
xor
outsb
sti
jno,pt
pop
mov
clc
mov
xor
pop
push
repz
and
mov
imul
cmp
pop
out
into
fldt
test
lds
sbb
jl
sub
pop
notb
sbb
arpl
rolb
lret
stos
call
mov
faddl
adc
jnp
push
add
test
push
jmp
push
stos
ljmp
mov
shll
orb
dec
sbbb
je
mov
fldt
inc
ss
mov
inc
test
xchg
cli
mov
push
inc
ret
bound
mov
cmpsl
jp
pop
adc
jbe
mov
pop
lods
nop
or
xchg
es
sbb
leave
dec
jl
adc
jb
mov
jge
repz
xchg
mov
ds
outsb
inc
lcall
std
movl
dec
lret
sub
aas
lea
adc
and
sbb
jecxz
sbb
and
mov
stc
sbb
daa
lea
rcr
pop
dec
dec
xor
gs
ljmp
shr
mov
fsubs
push
jmp
xchg
xor
shr
mov
fsts
and
sub
or
dec
inc
test
fdivl
adc
mov
mov
mov
fdiv
cmp
cmpsb
rorb
cmp
dec
repz
test
push
adc
xchg
mov
pop
into
cli
sub
push
inc
in
mov
xchg
push
leave
sub
mov
mov
cmpsl
cmp
sbb
dec
test
insb
cmpsb
pusha
sahf
in
fsubp
mov
cmp
lock
xor
add
ds
sbb
add
sbb
dec
je
mov
insb
or
sub
dec
jle
lcall
add
imul
sub
xor
and
cmp
mov
andps
add
pop
sbb
xchg
inc
daa
ret
pop
inc
add
adc
out
iret
jb
jl
ret
lock
popf
mov
cmp
jge
or
xor
mov
leave
mov
adc
test
scas
mov
lea
or
scas
mov
push
in
dec
inc
add
pushf
add
add
mov
mov
es
pop
and
rorb
xchg
inc
outsb
pop
jl
jp
imul
das
or
nop
lds
repz
dec
dec
or
and
addr16
xchg
dec
inc
loopne
or
mov
out
mov
enter
pop
ficomps
inc
adc
and
js
jo
movsl
lds
add
adc
in
mov
inc
cltd
pop
shlb
sarb
imul
sbb
sub
pushf
clc
lods
or
mov
inc
dec
cld
sub
ret
gs
jnp
cli
jmp
arpl
xor
push
mov
cwtl
lds
pop
xor
test
pop
call
pushf
rcl
gs
je
lahf
dec
xchg
push
lock
fcoml
pop
inc
shr
push
sub
fistpll
jns
inc
hlt
push
iret
adc
xor
outsb
in
ffreep
rol
pop
cmp
jne
out
lods
pop
sbb
lcall
mov
cli
or
xor
add
enter
mov
js
mov
jae
inc
scas
xlat
pop
pop
repz
lds
or
clc
inc
cmpl
mov
popa
mov
xchg
call
mov
mov
adc
adc
jo
xor
sbb
push
aam
lahf
mov
fistl
in
mov
and
loope
sarl
xchg
push
test
jno
movsl
hlt
neg
repz
stos
jnp
and
gs
mov
lea
in
fwait
popf
cmp
mov
lret
call
les
xchg
fwait
lahf
jmp
dec
adc
push
loopne
sarl
repz
dec
xlat
add
movsl
aad
das
iret
addr16
repz
sahf
xchg
inc
jb
out
dec
and
sbb
jno
dec
pop
inc
xchg
add
jb
test
cld
dec
int3
inc
fidivl
jl
mov
add
sub
mov
ss
xchg
mov
jg
mov
lcall
xchg
stos
ss
pop
mov
ret
scas
jb
mov
push
pop
fmuls
mov
inc
mov
adc
mov
push
sbb
xor
sub
jp
ret
loop
inc
subb
xchg
test
test
xchg
mov
adcl
lods
arpl
leave
test
mov
push
jbe
dec
xor
sti
and
loopne
cmp
inc
xor
bound
push
push
popf
adc
pop
or
test
mov
adc
mov
pop
fwait
call
out
loope
lods
inc
loopne
sub
sar
fidivrl
rclb
repz
insb
push
outsl
mov
push
mov
push
cwtl
pop
fdivrl
fwait
jle
cmpsb
movsl
jl
ljmp
adc
jmp
inc
inc
mov
add
or
aad
pop
mov
lahf
adc
sbb
pop
mov
push
ror
test
aas
ret
fdivr
aam
test
inc
jae
into
mov
jae
add
mov
pop
push
out
shrl
and
mov
test
mov
adc
adc
fmull
mov
or
mov
mov
movsb
jnp
int
iret
add
movl
and
cmp
pop
scas
xor
add
je
shll
xchg
pop
stos
or
into
pop
sbb
in
icebp
sbb
faddl
insb
jmp
jg
push
outsb
cmpsb
popf
dec
xchg
jle
movsb
ja
and
cmp
dec
mov
mov
or
adc
fcompl
jge
ret
mov
pushf
push
lods
sbb
movsb
movsb
popf
or
fnsave
pop
in
xor
cltd
xchg
stc
aam
cmp
mov
shll
call
jl
push
jne
rorl
data16
mull
aad
fwait
je
out
xchg
adc
sub
cld
lret
popa
pop
testb
mov
es
xchg
or
lret
xor
out
jno
stc
outsl
std
outsl
jg
push
mov
pop
add
pop
leave
push
and
fsub
add
cli
loopne
roll
dec
dec
imul
jl
mov
cmp
mov
repnz
int3
mov
out
xchg
test
mov
jmp
mov
shr
fprem1
sub
sub
push
test
push
out
in
mov
mov
mov
repnz
pop
ljmp
sub
out
lret
dec
jecxz
popf
jne
cmp
in
xchg
adc
out
shr
lret
pop
xor
mov
int
pusha
or
xchg
dec
mov
adc
int
outsl
mov
movsl
insb
cmpsb
shlb
inc
popa
stos
lock
out
inc
pop
aas
add
mov
jmp
ds
test
test
daa
outsl
fimull
fmull
lcall
repnz
imul
lods
jne
add
sub
outsl
in
lea
mov
adcl
or
mov
rcll
push
jo
adc
into
pop
mov
out
pop
push
xchg
nop
sub
or
nop
pop
loope
cmpsl
sbb
ljmp
pop
in
xchg
mov
hlt
pop
popf
repnz
enter
mov
xchg
pop
adc
cld
ret
pop
ret
shl
enter
dec
push
into
stc
push
stos
out
mov
push
cmpsl
mov
adc
push
and
push
xchg
and
jno
cli
jb
nop
pop
dec
or
lahf
mov
dec
cmp
loope
inc
lea
add
fcmovnb
dec
sub
mov
push
sbb
mov
inc
mov
aas
testb
pop
and
pop
in
clc
lods
sub
aas
adcl
sbb
and
std
gs
jge
test
xchg
mov
sub
js
imul
out
pop
insl
or
sub
and
mov
lds
sbb
jae
js
repz
jl
push
push
data16
xchg
mov
test
lahf
push
jp
not
iretw
daa
mov
mov
sub
pop
mov
and
sbb
jecxz,pt
stc
sub
mov
mov
andl
jecxz
add
inc
add
rcr
int
xor
aaa
jno
inc
out
cld
or
cmp
jge
fidivrl
push
adc
mov
cltd
mov
cltd
out
mov
fisttpl
jmp
jo
js
xor
cmc
xor
fidivs
adc
insl
sarl
repnz
xchg
and
sahf
je
mov
push
enter
test
test
add
mov
or
loope
add
aaa
cmp
pop
or
jno
rcr
insl
outsb
push
sbb
call
sbb
scas
pop
test
dec
stos
push
ficoml
dec
push
sbb
mov
push
xor
js
push
mov
test
sbbl
ret
ret
aam
sbb
mov
xor
scas
stos
fildl
dec
cld
adc
xlat
and
insb
add
int3
inc
fs
ret
test
xor
stos
push
jecxz
mov
and
xchg
jl
decb
mov
push
addr16
je
dec
loope
movl
andl
test
xchg
cmp
loop
call
push
dec
ja
mov
inc
xorl
inc
pop
mov
fsubl
scas
addr16
imul
jle
push
cwtl
and
sbb
les
mov
mov
data16
cld
adc
cltd
push
mov
mov
lods
add
xor
push
fnstcw
bound
mov
mov
scas
leave
xchg
sub
ja
pop
rcrb
jbe
mov
lcall
mov
je
roll
add
mov
jecxz
or
fcomp
sub
mov
ret
push
aaa
pop
cltd
xchg
fmull
loop
pop
pop
and
push
mov
arpl
sub
in
rorl
aas
cltd
icebp
xchg
lahf
mov
addr16
aad
insl
or
push
pop
lahf
mov
test
add
test
outsl
stos
xor
data16
pop
adc
call
outsl
test
in
pop
adc
mov
mov
xchg
mov
call
out
or
mov
xor
or
jmp
jge
ljmp
mov
adc
pop
ss
xchg
cli
mov
ret
inc
out
xchg
pop
sbb
ret
and
popf
mov
les
and
cmp
ret
lret
push
push
call
jl
mov
add
jno
jge
enter
pop
sahf
mov
mov
into
mov
cmp
dec
loopne
sar
inc
cmc
dec
xchg
mov
ret
sti
arpl
sti
inc
je
pusha
in
pushf
mov
pop
jnp
dec
insb
mov
xchg
or
popa
pop
int3
push
ja
inc
inc
xor
cmp
push
addr16
push
mov
cmp
data16
mov
mov
cmpsb
lret
cmp
adc
push
lret
sub
sbb
adc
cmpl
enter
lds
xor
mov
insl
lods
sbb
ja
mov
inc
add
test
cmpsb
adc
adc
add
pop
imul
ss
mov
popf
adc
out
mov
int
inc
mov
sbb
mov
and
and
lret
in
decl
aaa
pop
lret
cmp
jae
std
adc
cmp
jb
adc
test
test
sbb
sub
sahf
jnp
jecxz
insl
test
rclb
or
jp
js
mov
push
adc
and
pop
rclb
out
xchg
psrlw
jo
pop
popa
dec
addb
ljmp
dec
inc
mov
in
cltd
daa
shrb
xchg
xchg
imul
inc
loope
inc
fsubs
add
mov
xchg
and
lret
mov
pop
ss
insb
or
cmp
xor
cmp
arpl
mov
cmpsl
mov
loope
notl
xlat
mov
lea
loop
pop
shr
stc
cmp
xchg
clc
push
xchg
movsb
add
jno
fistps
into
test
out
cmp
xor
fcmovnb
mov
add
repz
dec
xchg
fiaddl
xor
and
xchg
sbb
hlt
ds
or
hlt
pop
sub
inc
inc
adc
push
adc
scas
push
inc
pop
dec
inc
add
jp
mov
xor
fisubrs
cs
lahf
cmp
mov
popf
jnp
mov
dec
push
fnsave
cmpsb
add
cmp
rclb
lret
inc
xor
push
outsb
loop
dec
sbb
mov
pop
xchg
pop
addr16
jo
jo
or
arpl
jmp
out
push
aad
repnz
lea
xchg
ljmp
push
push
adc
dec
push
int
stos
and
inc
mov
push
mov
repz
inc
cmp
push
pop
aas
mov
orl
adc
jg
and
fucomp
cmp
xchg
neg
mov
test
out
int
dec
das
addr16
sub
adc
test
pushf
outsb
or
pop
aaa
sub
mov
adc
jl
sub
mov
rolb
lods
cmp
cmpsb
es
call
sbb
lret
loope
fimuls
jmp
xor
mov
mov
popf
js
scas
sub
mulb
mov
cmpsb
push
adc
enter
xchg
fs
fbstp
jns
xchg
mov
imul
xor
movsl
jb
pop
jecxz
test
loop
xor
or
jno
inc
imul
jecxz
outsb
movsb
xlat
pop
xor
xor
outsl
jp
xchg
sbb
pop
xchg
in
mov
arpl
dec
movsb
mov
ljmp
xchg
xor
imul
jp
or
and
inc
cmp
sub
dec
adc
dec
out
outsb
and
neg
aaa
imul
sbb
xchg
in
scas
call
push
jae
sub
ja
fs
mov
mov
or
into
push
push
push
mov
daa
pop
sub
pop
inc
mov
add
sbb
mov
loopne
adc
and
mov
out
movsb
lret
cmp
pop
mov
clc
sbb
inc
aaa
popa
call
ficomps
jg
stos
popa
sbb
int
outsl
mov
sub
xchg
pop
or
imul
or
sbb
movsb
mov
enter
sbb
and
dec
and
push
incb
pop
dec
mov
jbe
cmp
jg
xor
in
stos
cmp
test
mov
jo
movsb
dec
mov
mov
xor
jae
jne
mov
push
mov
ret
lods
popa
push
fdivr
rorl
fnstcw
pop
popf
and
dec
inc
mov
push
mov
pop
cmp
or
pop
stos
fcomps
dec
xlat
je
filds
xchg
xchg
lret
lcall
js
rcl
sar
inc
mov
mov
dec
loopne
imul
xchg
test
mov
pop
inc
jecxz
xchg
repnz
mov
lahf
jne
cmp
adc
loop
mov
mov
pop
std
xchg
notl
sbb
mov
fiadds
rorl
pop
mov
sub
dec
orb
inc
xchg
pop
imul
push
pop
mov
mov
jo
add
negb
lret
das
filds
inc
xor
mov
enter
jg
sub
mov
jle
cltd
or
cmc
ss
arpl
adc
and
out
dec
insl
mov
addr16
test
lods
je
mov
aaa
dec
add
jge
mov
pop
or
pop
mov
adc
sbb
cmp
sahf
xchg
sub
jno
mov
jmp
test
cld
roll
lcall
xchg
mov
jp
jns
adc
je
xchg
clc
mov
popf
gs
stc
adc
cmp
sub
test
popl
mov
mov
push
xchg
cmpsl
int3
aam
popa
enter
test
aaa
sub
ret
jb
pop
xor
xlat
xor
jnp
push
cmp
xchg
mov
and
pop
and
add
mov
call
sub
call
clc
inc
outsb
jne
and
xchg
dec
pop
pusha
mov
mov
out
or
fidivrs
sarb
mov
pusha
and
sbb
lea
enter
dec
pop
loop
addr16
ds
negb
idivb
sbb
shll
sbb
sbb
pushf
mov
jne
mov
mov
ja
insl
cs
cwtl
and
repz
mov
adc
loope
cs
mov
pop
xchg
jne
jae
and
or
out
repnz
and
mov
stos
and
popa
mov
mov
loopne
mov
inc
sbb
jl
ret
mov
add
out
add
cmp
pop
adc
je
das
sbbb
add
xor
lods
lods
add
das
dec
nop
lret
mov
in
xchg
add
adc
into
cmc
mov
dec
inc
mov
jg
sbb
fcomp
fisubrs
call
or
inc
add
pop
sahf
cld
inc
ret
mov
sarl
jae
outsb
ss
or
push
aas
push
mov
push
cltd
cmp
jg
aaa
imul
jle
or
jg
rorb
and
mov
adc
jp
int3
ret
popa
inc
lock
aas
sbb
xchg
test
pop
mov
xor
adc
sbb
std
fsubr
add
inc
out
pop
adc
leave
sahf
xlat
push
jge
mov
shll
mov
mov
push
mov
into
pop
insb
and
loope
call
jmp
pop
cld
xchg
jmp
inc
mov
hlt
pop
mov
imul
xchg
and
in
aaa
ljmp
insl
inc
ret
sub
or
pop
or
sti
push
int
clc
jns
leave
data16
mov
jmp
xor
js
mov
outsb
outsb
pop
jle
daa
ds
out
jmp
dec
and
xchg
pop
outsl
sbb
cld
sub
outsb
xor
ret
cld
in
vpunpckhqdq
adc
test
bound
test
mov
xchg
imul
add
lahf
fidivl
icebp
jp
mov
inc
or
push
lret
jb
push
sub
xor
and
xor
stos
and
pop
icebp
xor
idivb
addb
sub
inc
cmp
lock
test
lods
mov
aas
xor
stc
inc
mov
jge
rcl
gs
xchg
push
push
enter
iret
test
shlb
mov
imull
inc
loop
gs
fs
pop
mov
mov
addr16
jle
add
and
lret
sbb
jp
mov
repnz
ret
fidivrl
movsb
mov
dec
sub
mov
mov
jno
lock
add
jmp
in
inc
enter
in
dec
shll
int3
bound
dec
inc
xchg
xchg
or
std
sarl
inc
add
fs
push
jne
pop
dec
xlat
cmpsl
cmp
mov
and
push
pop
jmp
sbb
or
jl
fcoml
push
xchg
mov
adcl
jno
sbb
sub
fcomp
loop
sbb
jmp
movsb
xor
out
ficoms
lcall
ss
ret
and
and
insb
or
mov
xchg
inc
dec
or
in
fdivrl
xor
add
pop
test
test
mov
xchg
subl
cltd
push
adc
data16
sub
sub
out
les
inc
xchg
or
xorl
mov
push
xor
scas
push
xchg
jbe
mov
popf
shl
bnd
addl
or
cli
aad
mov
push
mov
loopne
adc
sti
lods
add
dec
dec
sbb
add
ss
fildll
pmullw
or
jae
dec
inc
ss
and
jp
lods
jne
jl
fwait
pop
push
cltd
push
cmp
movsb
push
push
ljmp
stos
push
shll
jmp
xchg
scas
mov
jo
push
inc
lret
xor
cli
aad
lahf
aaa
cmp
in
mov
jmp
ljmp
and
cmc
in
cvtpi2ps
shl
mov
push
xchg
sbb
call
xor
dec
cmp
pop
xor
lcall
lahf
jl
loop
cmp
stos
xor
insl
inc
mov
xor
mov
mov
dec
mov
mov
in
add
xorl
mov
imul
popa
dec
gs
mov
shlb
aas
xor
bound
cmp
adc
pop
jecxz
das
mov
popf
and
mov
mov
push
lods
outsl
lods
call
mov
mov
in
ds
adc
loope
add
sbbb
popa
jnp
fistps
lock
and
jle
stos
jno
jnp
scas
pushf
and
test
orb
fcoms
dec
mov
fs
add
lods
jmp
into
leave
sub
jns
sbb
inc
sub
xor
jle
push
mov
outsb
les
xchg
mov
push
out
das
sub
test
sbb
lcall
movsb
add
aaa
es
addr16
div
dec
pop
inc
ds
rolb
mov
dec
cmpsl
adc
pop
jne
cmp
into
je
lods
fwait
aam
js
and
pop
jae
loop
sbb
jb
adc
jp
mov
dec
movsl
das
ja
push
push
cld
cmp
pop
idiv
mov
aaa
fists
in
out
je
and
iret
leave
adc
add
inc
xchg
pop
push
rorl
aaa
jecxz
dec
mov
mov
xor
enter
mov
sbbl
lret
xor
rorb
arpl
jp
and
dec
xchg
cmpsl
and
cmpl
cwtl
push
mov
xor
movsl
outsl
aaa
decb
mov
in
shrl
lret
sub
adc
shll
xchg
push
icebp
xor
sti
add
fwait
sub
int
in
bound
outsl
ja
xor
cltd
dec
bound
add
push
dec
imul
stc
push
loopne
data16
test
add
rcll
cmp
inc
dec
lahf
pop
pop
les
and
dec
add
ljmp
pusha
cli
iret
stc
std
adc
xchg
mov
scas
xor
cli
jge
dec
leave
jp
imul
add
xor
mov
sub
loope
xor
adc
pop
xchg
xor
rcrl
sub
ljmp
jne
mov
aas
addl
fs
stc
imul
jmp
rcrb
enter
jle
rcrl
aad
rcrl
insb
jae
in
pop
je
adc
lret
rcll
jbe
cmp
and
push
iret
push
pushf
sbb
mov
test
lock
inc
addr16
insb
xlat
in
nop
rcll
xor
lds
lods
je
stc
icebp
dec
jno
mov
mov
xchg
or
test
mov
mov
jns
ss
push
or
insb
cmc
sub
rclb
aad
inc
lock
cmp
inc
mov
fbstp
push
xlat
loop
push
shrb
xchg
cltd
mov
xor
fidivl
sbb
pop
inc
mov
pushf
xchg
dec
or
add
or
xchg
arpl
mov
sbb
inc
jb
xor
daa
sti
and
fsubrl
jle
cmp
or
arpl
mov
test
orl
xchg
push
sahf
insb
push
cmc
stos
jb
cmpsl
out
ja
in
jmp
das
mov
jg
jns
ljmp
dec
jg
cmpb
mov
cmpsb
or
mov
lea
xorb
aam
xor
sub
pop
dec
push
add
push
cli
and
and
and
pop
jecxz
xor
adc
sub
adc
hlt
fildll
imul
add
add
mov
aad
pop
aaa
cmc
std
jecxz
clc
enter
roll
add
cmpsb
aaa
dec
add
ja
xchg
stc
lret
stos
aaa
dec
decb
arpl
cmc
xor
pop
movsb
xlat
enter
jne
mov
orl
dec
jp
popa
sbb
popa
push
jo
push
popa
push
in
dec
setae
pushw
push
dec
sbb
or
andl
icebp
mov
call
lcall
xchg
out
fistl
lods
xchg
jmp
adc
fmuls
inc
jae
in
ss
stos
fnstenv
fcoms
addr16
loope
pop
gs
clc
inc
dec
enter
notb
fs
pop
push
fcmovb
test
cmp
push
je
inc
jns
call
insl
je
test
pop
into
and
adc
cmp
iret
inc
hlt
and
dec
dec
jge
lret
mov
xchg
call
jmp
call
sahf
mov
es
add
bound
jb
test
into
sub
iret
dec
movsb
mov
mov
mov
loopne
pop
lahf
aad
cmp
orl
pop
mov
adcl
shrb
es
clc
jp
fcmovne
adc
sbb
ljmp
jnp
add
mov
jnp
rcrl
enter
outsl
fmuls
mov
mov
dec
xchg
cs
aaa
adc
int3
pop
cli
popa
lcall
es
pusha
adc
cmp
repnz
fs
loope
icebp
stos
scas
call
icebp
repnz
cmp
mov
mov
sub
repz
ret
sar
sub
adc
lret
inc
mov
call
pop
mov
mov
in
mov
aas
test
mov
and
sbb
aaa
dec
ror
jmp
adc
jbe
test
cmp
push
push
xor
rcll
test
bound
cmpsl
jmp
mov
inc
pop
pop
fidivrl
test
add
ret
lahf
push
fnstsw
and
inc
sbb
loop
pusha
xchg
lret
xor
push
dec
popf
add
mov
jge
gs
aad
pushf
lret
lahf
dec
repz
jl
cmp
in
out
aam
sbb
cmpsb
sub
mov
inc
testb
adc
inc
hlt
in
mov
pop
jae
sub
mov
ja
outsl
xchg
loopne
enter
jnp
mov
out
pop
inc
sahf
test
push
jnp
pop
mov
decb
sub
int
pop
push
or
jmp
popa
mov
mov
cwtl
imul
mov
das
jne
sub
imul
xchg
and
jle
iret
dec
fdivs
pop
xor
push
mov
xchg
mov
icebp
and
pushf
rcl
lods
jle
in
and
add
subb
inc
jno
inc
inc
bound
dec
sub
loopne
clc
dec
jg
sarl
mov
ja
outsl
mov
mov
dec
push
inc
sti
pop
mulb
sbb
xchg
push
cmp
ss
add
xlat
inc
add
test
sub
test
add
dec
xchg
xchg
in
test
push
jno
out
adc
loopne
mov
inc
xor
mov
test
sub
and
int3
fistl
ss
and
movsb
dec
jbe
sbbl
sub
test
cwtl
mov
cli
fwait
mov
aas
enter
in
jmp
xchg
xor
leave
mov
pusha
or
cmpsb
or
fs
fwait
pop
ss
push
nop
mov
hlt
aas
shlb
mov
mov
cltd
dec
xor
enter
out
dec
dec
or
insl
push
cmc
data16
lahf
int3
adc
test
in
les
loope
cmp
in
sub
mov
stos
or
pop
adc
mov
mov
jmp
movsbl
inc
scas
lds
mov
pop
out
call
xor
cld
stos
mov
and
dec
mov
fisttpll
pop
jnp
sahf
aad
jo
push
test
setb
iret
popf
cmp
mov
hlt
cmp
enter
xchg
test
ficoml
outsl
add
jp
sub
imul
cmpsb
adc
mov
loop
inc
add
int
ret
mov
sub
xorb
and
jge
mov
sbb
mov
mov
xchg
aad
mov
repz
loopne
mov
push
rcll
mov
mov
cs
scas
adc
fisttpll
sbbl
aaa
sbb
add
lret
std
pop
sbb
fcomp
and
shl
sbb
pop
mov
jb
repnz
mov
or
sti
mov
ret
mov
popf
std
xor
dec
push
inc
mov
mov
xor
sar
mov
add
call
mov
pop
daa
in
lret
sub
mov
mov
das
mov
inc
pop
and
sbb
mov
hlt
jle
inc
aaa
dec
mov
aam
dec
fsubrs
out
xchg
rcrl
aaa
cmp
arpl
js
inc
xor
dec
icebp
pop
pop
cmp
add
clc
xor
movsl
mov
jbe
cltd
jmp
and
dec
sub
mov
or
cs
insb
sbb
fwait
mov
fisubrl
out
xchg
cmc
mov
scas
movsl
and
movsb
push
push
pop
pop
stos
push
cmpsb
lahf
add
inc
mov
mov
loope
adcl
rolb
dec
hlt
scas
adc
xchg
shrl
icebp
jns
adc
cli
out
repnz
icebp
and
aam
pop
out
cmp
pop
das
and
jno
addr16
sub
rorl
outsb
rcrl
orb
or
xor
jb
cmc
push
mov
mov
add
xchg
leave
xchg
outsl
shrl
flds
add
pop
sub
cmc
sub
and
sub
test
cmp
movsb
jb
in
loope
imul
add
jle
je
repnz
gs
loopne
mov
and
out
loope
cmpsb
mov
js
and
cmp
jo
insl
insb
and
dec
and
enter
addr16
xchg
outsb
xchg
or
ss
pushf
popl
sbb
test
xor
ret
or
js
cmpsl
xchg
sbb
bound
add
jge
adc
clc
xor
mov
xor
jne
cltd
imul
fwait
pop
test
lret
cli
leave
les
in
and
jbe
repnz
mov
or
repnz
mov
jo
xlat
fld
inc
out
jbe
and
faddl
ret
inc
pop
push
aas
pop
mov
adc
pop
in
sub
out
out
xchg
enter
or
inc
frndint
mov
lret
and
cs
sahf
imul
movsb
xchg
pop
in
test
in
push
ret
testb
mov
or
imul
fwait
inc
lods
push
lods
push
cmpsb
test
aaa
mov
out
xchg
cmp
add
roll
inc
inc
stos
xchg
jns
lods
imul
add
shl
push
inc
dec
ds
bound
inc
cmp
pop
add
loope
push
cld
mov
bound
into
pushf
jmp
xlat
scas
dec
inc
stos
nop
mov
cmc
in
test
mov
mov
cmp
int3
dec
cmp
or
dec
ja
sub
mov
inc
push
and
xchg
inc
adcb
dec
lods
jl
scas
pop
sbb
mov
push
lock
xchg
insb
in
in
dec
push
aad
int
cwtl
add
dec
mov
pop
push
and
fs
pop
xchg
fldenv
jno
movsb
cwtl
cwtl
push
jmp
ljmp
fucomp
sbb
loope
loope
daa
popf
mov
mov
decl
in
pop
rcrb
shr
sahf
test
cmp
sahf
mov
mov
ljmp
sbbb
sahf
cmp
imul
fstpl
cli
fs
lret
das
xchg
loope
int
mul
dec
adc
mov
push
xchg
lock
movsl
jg
popf
or
pop
std
popa
outsb
enter
shl
stos
loopne
cmp
dec
lods
xchg
andl
ror
jb
out
ficompl
mov
sbb
xchg
outsb
mov
cmp
ret
jecxz
fs
dec
sub
out
das
fnsave
inc
stos
outsb
test
adc
mov
pop
cli
adc
xchg
adc
lea
xchg
xor
pop
xor
add
jmp
jp
int
ljmp
insl
andb
sbb
hlt
inc
out
fists
mov
stos
jmp
imul
std
xor
xor
jmp
lahf
mov
movsb
lods
dec
cmp
inc
scas
push
test
xor
cmpsb
pop
cli
dec
xchg
mov
pop
pushf
cli
cld
mov
rcrb
push
gs
dec
insl
repz
jg
mov
cltd
cli
insb
cwtl
imul
fstpt
rorl
add
pop
loop
pop
das
adc
cmpsb
scas
mov
icebp
dec
sti
clc
cltd
insb
xchg
jg
and
pushf
mov
insl
add
xchg
dec
or
mov
dec
orb
sub
inc
xchg
out
push
push
lods
dec
cltd
jae
jl
xlat
fs
mov
cmp
popf
lds
dec
jno
add
or
lods
hlt
arpl
pop
lods
cmpsl
jb
cmp
or
repz
pushf
mov
rol
pusha
pushf
movsb
dec
shlb
sti
xchg
inc
test
es
sub
cld
outsl
pushf
sub
sub
scas
sbb
rcrl
test
adc
mov
jne
rcll
adc
mov
pop
lds
stc
jbe
pop
leavew
mov
add
inc
add
lahf
jbe
mov
mov
sbb
test
shll
ds
in
iret
xchg
rol
lea
in
push
outsl
add
adc
push
repnz
das
push
sub
cs
add
adc
and
sbb
popa
mov
fistpll
les
mov
lret
jb
inc
imul
and
mov
leave
jnp
cmp
andb
pop
cltd
pop
repnz
aad
mov
inc
mov
in
inc
iret
nop
sub
push
enter
mov
push
movb
dec
jecxz
or
cmpsb
sub
movsb
sarb
je
pop
fistps
jge
movsb
fstpl
stc
hlt
cmp
iret
push
adc
xlat
stos
mov
adc
cmp
xchg
lahf
adc
imul
testl
push
outsb
rcrb
outsb
cmpsl
mov
out
into
lock
mov
xchg
movsb
scas
jecxz
ss
push
es
sub
daa
dec
cmp
icebp
scas
shlb
jne
pop
mov
pop
push
dec
cmpb
popf
mov
or
mov
scas
jo
iret
inc
or
jns
jo
inc
daa
dec
pop
xor
adc
in
pop
mov
bound
pop
loopne
mov
fcompl
test
or
mov
mov
nop
scas
scas
jo
pop
inc
mov
sbb
icebp
dec
push
cmp
cmp
inc
sbb
clc
sub
stos
or
movb
incl
adc
push
dec
sbb
dec
in
hlt
or
mov
sub
or
jge
xchg
lahf
mov
aad
xchg
adc
fwait
idiv
sub
inc
int3
add
mov
cmpsb
mov
fdivrs
call
cmpl
loopne
orb
repnz
loope
es
push
sahf
push
imul
pop
sbb
and
sti
push
aad
rclb
cltd
lcall
dec
mov
and
rcl
outsb
cmpsl
and
cmp
pop
and
xorl
pop
adc
stos
pop
cmp
nop
cld
sub
xor
cwtl
sub
enter
call
mov
push
out
push
mov
imul
fldl
mov
subb
rcr
pushl
loopne
xchg
mov
aad
sbb
mov
stc
cmp
ret
push
or
mov
pop
cli
add
and
fistpl
push
fcomps
push
and
aam
mov
mov
outsb
mov
enter
test
pop
dec
addl
ret
push
pop
push
in
adc
or
add
pop
test
jg
sbbb
push
rcr
dec
xchg
imul
popf
in
mov
sbb
insb
jnp
lock
cwtl
dec
fcoml
lods
arpl
push
repz
test
es
enter
mull
ret
and
or
cmp
or
imul
dec
xchg
mov
stos
push
ret
insl
je
lods
pop
gs
cs
xchg
sbb
xor
test
mov
mov
add
xchg
xor
jns
mov
test
in
dec
push
gs
shrl
loop
sar
jo
pushf
cld
dec
sbb
cs
sbb
fdivl
jae
push
adc
out
mov
test
lea
inc
in
sub
dec
outsb
emms
out
lock
arpl
dec
mov
mov
lea
fwait
jb
sbb
mov
pop
xor
sbb
xchg
lds
mov
sub
cmpsb
or
sub
jno
filds
pop
xchg
bound
mov
test
add
sbb
lret
inc
mov
dec
movsb
ret
jns
and
faddl
repnz
cmp
inc
adc
sbb
jmp
mov
lret
sbb
and
outsb
mov
dec
cli
inc
das
jb
pop
xor
int
jnp
cld
in
adc
les
sub
or
sti
adc
inc
inc
mov
adc
jmp
cmp
mov
pop
push
lahf
or
sub
mov
inc
or
lcall
lahf
shrl
pop
mov
sub
pop
aam
push
add
movlps
cmpsl
popa
out
cmp
dec
das
leave
bnd
repz
lret
adc
jno
mov
hlt
add
mov
jno
out
mov
or
and
sbb
insl
icebp
or
aas
sub
push
adc
sub
jp
jge
push
sub
jmp
dec
push
add
ret
mov
mov
mov
mov
dec
test
fistl
out
xchg
jne
bound
pop
pop
jl
addb
xlat
je
lcall
pop
sbb
and
cli
xor
outsb
ss
loopne
mov
cmp
mov
loopne
lcall
pop
adc
aaa
mov
ja
pop
leave
inc
sbb
and
lea
stos
daa
cmp
mov
mov
inc
rcrl
push
sahf
and
leave
popa
aam
or
shl
add
popa
or
mov
jns
rcl
adc
test
mov
scas
pusha
xor
mov
and
jne
and
test
push
addr16
and
loope
in
stos
xor
ss
inc
out
adc
xchg
roll
ret
scas
add
xchg
xor
data16
cwtl
lahf
xchg
ljmp
daa
jns
inc
mov
aas
ja
je
jnp
pop
xor
movhps
out
cmpb
sub
adc
divb
jnp
add
pop
into
push
into
jnp
shlb
cs
pusha
arpl
mov
sub
out
movsb
push
and
lcall
fsubrs
stc
push
pop
jmp
es
mov
jecxz
movsl
dec
cmp
lds
in
pushf
or
sahf
add
inc
or
sub
xchg
mov
mov
push
and
ror
andb
mov
push
sub
cmp
inc
inc
icebp
test
pop
push
mov
int3
cwtl
dec
mov
adc
in
fcoms
sbb
aaa
sub
cmpsb
iret
mov
das
mov
push
inc
xchg
test
movsl
dec
idivb
xor
iret
add
scas
lods
mov
jbe
lcall
insl
in
sbbl
dec
mov
xor
repz
andb
lahf
into
cmpsl
loope
adc
dec
dec
aad
leave
cmp
xlat
add
scas
jns
push
sub
ss
dec
mov
rol
dec
cltd
sub
mov
inc
pop
stos
out
ds
popa
dec
pushf
xchg
pop
insb
sub
and
jno
and
add
insl
push
push
cltd
in
lahf
cld
fwait
xchg
mov
xchg
divb
sub
jmp
jo
or
or
mov
dec
mov
rep
inc
pop
add
jbe
lea
push
int3
inc
lds
in
imul
mov
sub
test
inc
mov
fstpt
mov
push
dec
jp
inc
mov
mov
mov
mov
jne
dec
addr16
cmp
jmp
popf
jl
imul
out
leave
push
iret
mov
xorl
iret
or
cmp
dec
jnp
xor
xchg
mov
sbb
xor
ljmp
adc
sbb
pop
cmp
cli
int3
testl
add
int
sub
shrb
sarb
mov
cli
jns
mov
out
inc
mov
cmp
and
xchg
xchg
mov
test
cltd
mov
mov
aas
add
in
inc
pop
cmp
xlat
mov
xor
rcl
js
mov
inc
add
inc
leave
fs
scas
cmp
sub
fwait
es
mov
jb
cmp
inc
lea
outsl
pop
inc
pop
orl
push
mov
fdivrl
dec
shl
test
aaa
loopne
and
jge
push
icebp
pop
mov
lahf
sub
out
pusha
icebp
inc
xor
ss
or
gs
mov
mov
cmp
and
mov
imul
mov
sbb
xor
aaa
cli
adc
fidivl
mov
out
ss
mov
lock
dec
sub
and
or
fsubp
outsl
xor
mov
xor
pop
mulb
jnp
insb
mov
sbb
cmpsl
cs
xorb
mov
cmp
mov
ss
insl
shl
or
lods
adc
mov
out
and
adc
bound
mov
mov
xchg
inc
adc
sub
pop
push
stc
add
push
adc
xor
test
pop
sub
cmp
jecxz
push
and
xchg
repz
fsubrl
add
jg
test
push
outsl
pop
in
clc
adc
jmp
mov
mov
mov
test
jae
cmp
lret
mov
mov
push
or
or
add
ljmp
lock
stc
shl
jo
hlt
xor
sbb
mov
push
jne
out
dec
mov
pop
add
sub
jo
scas
ss
pop
pusha
adc
hlt
popa
fmuls
ret
push
or
lret
sar
outsl
stos
je
xchg
in
push
fdivrp
xlat
popf
sahf
jnp
xchg
cmpsl
adc
inc
ljmp
mov
bound
gs
js
clc
hlt
notb
pusha
bound
jns
and
sbbl
jle
popl
pusha
nop
cmpsb
insb
pop
arpl
ror
jne
pop
insb
movsl
mov
ljmp
push
pop
popf
push
aad
lock
jg
mov
mov
add
out
mov
pop
out
pop
add
popa
mov
xor
shlb
mov
push
dec
dec
in
mov
les
xchg
outsb
mov
sahf
jmp
mov
lret
je
stos
test
jae
dec
sub
das
cwtl
js
idiv
daa
out
or
out
push
add
scas
push
insb
sahf
outsb
fwait
test
or
jns
decl
cmp
jb
sub
mov
dec
inc
insb
lret
xchg
cli
cmp
push
xchg
adc
mov
sbb
fisubrs
mov
pushf
or
sub
mov
and
pusha
iret
int
jne
out
mov
ja
int3
mov
and
test
or
cmp
push
jp
arpl
jmp
fs
mov
in
mov
clc
test
lcall
dec
pop
mov
jmp
add
xor
pop
and
hlt
jo
out
xor
rcl
int
in
xor
adc
add
lods
jae
jo
out
sbb
and
lret
sbb
xchg
xor
out
js
inc
adc
add
xchg
aaa
cmpsb
push
jbe
outsb
adc
aad
push
cld
mov
popf
xor
test
icebp
cmpsl
daa
movsl
stc
jg
inc
inc
test
xchg
pop
mov
mov
cmp
lret
fcoms
in
mov
bound
xchg
sub
mov
imul
cwtl
mov
fwait
add
add
and
push
jle
inc
xor
mov
aam
aam
fidivrl
cmc
mov
rcr
into
divl
sub
mov
cwtl
test
adc
adc
pop
stos
lock
or
clc
mov
and
ljmp
inc
cmpl
mov
enter
stos
aas
push
fstl
stc
jo
imul
push
pop
mulb
adc
mov
xchg
mov
lods
lcall
and
movsl
insl
jne
jnp
xchg
cmp
leave
sti
xlat
xor
pop
mov
pop
push
popa
pop
stos
or
xchg
pop
pop
mov
inc
movb
xchg
fsubl
dec
push
ficoml
loope
dec
int3
sub
mov
jmp
scas
repnz
jge
sbb
out
andb
xchg
xchg
push
sti
cmpsl
and
cmpsb
xor
test
ljmp
mov
leave
inc
cmp
clc
jno
jp
dec
inc
lods
into
jge
pusha
sbb
movsb
pushf
push
setnp
aad
mov
dec
jbe
jns
lcall
xor
jnp
mov
inc
dec
inc
push
ss
xchg
int
lods
test
add
xchg
mov
sbb
ret
push
addr16
fcoms
cmp
push
adc
in
imul
mov
xor
cwtl
jnp
mov
jns
cltd
and
sbb
fldcw
and
ret
sbb
imul
and
icebp
mov
out
popa
ljmp
push
inc
je
push
push
sub
adc
mov
adc
inc
cmp
and
fincstp
fdivs
ss
sub
cmp
sbb
cltd
insb
clc
test
cmp
test
push
mov
adcb
cmpl
lock
enter
adc
xchg
cmp
mov
scas
sub
pushf
sbb
jmp
jl
lds
movsl
cmpsb
lcall
outsl
push
movsl
sbb
cld
cmc
inc
mov
out
aam
les
and
or
je
fcoml
lret
frstor
lds
push
lods
or
test
pop
or
sahf
sub
movsb
popa
push
in
or
lods
push
rorl
fstps
das
sub
out
dec
mov
int3
imul
mov
adc
push
jp
stos
enter
jl
lcall
jae
js
cwtl
pop
jl
sbb
xlat
hlt
and
jb
ret
movsl
or
sbb
push
and
in
addl
sbb
cmpsb
dec
push
sti
cmp
xor
ss
movl
add
add
mov
int
imul
xor
xchg
mov
sbb
lea
leave
or
pop
adc
clc
fmul
mov
mov
inc
mov
aas
aaa
push
sbb
scas
pusha
pop
mov
outsb
xchg
nop
pop
adc
loopne
mov
cli
imul
sub
lret
and
cmpsb
imul
into
sbb
clc
mov
sti
fdivrp
popf
shrl
push
jnp
in
push
xor
out
ljmp
out
call
mov
mov
cld
arpl
fsubrl
dec
fiadds
aam
xchg
mov
sarb
notl
outsl
repnz
pop
lea
mov
fwait
gs
mov
xchg
shrl
data16
outsl
dec
or
test
cmp
jbe
fwait
rorb
fiaddl
inc
iret
out
mov
mov
push
mov
dec
sub
push
and
push
popf
inc
ljmp
out
fldenv
mov
sbb
sahf
rcl
xlat
cmc
cmp
mov
mov
pop
jns
pop
xor
js
xor
es
mov
andb
data16
sbb
arpl
inc
push
inc
and
pop
sbb
test
adcl
cmc
test
xchg
pop
cmp
scas
dec
or
test
shlb
inc
push
push
cld
nop
lahf
insb
rcrb
mov
jl
xchg
mov
lods
icebp
loop
sub
hlt
insl
arpl
cmp
sbb
mov
push
jns
scas
test
and
outsb
xchg
sbb
ss
mov
daa
adc
cmp
add
data16
ret
adc
add
pop
mov
jl
mov
imul
jmp
cld
jmp
in
icebp
lods
imul
ja
cmpsb
lock
pop
inc
outsb
mul
shrb
test
test
cmp
inc
cmp
pop
outsl
jbe
cmp
fnstsw
mov
lods
jne
add
popa
iret
inc
mov
dec
dec
mov
fcompl
aaa
inc
mov
sbb
and
fiadds
xor
or
pop
popl
ljmp
in
enter
les
add
imul
or
stc
sub
cwtl
pop
les
fbld
lods
push
adc
fildll
push
ficompl
adc
sbb
inc
data16
addl
loope
in
cmp
jno
fs
test
sbb
mov
push
lahf
jnp
mov
aad
outsl
sahf
cmp
xor
mov
mov
fistps
push
jmp
cs
sbb
push
adc
inc
xchg
std
loop
adcb
test
push
stos
sub
cmp
out
cmp
mov
fisttpll
test
ss
mov
push
mov
gs
mov
out
popf
inc
cwtl
mov
push
push
sbb
pop
push
mov
xchg
imul
mov
mov
test
rcrl
jg
and
push
or
pcmpeqd
arpl
mov
fisttps
push
sub
add
arpl
mov
xor
add
mov
stos
inc
jne
pop
push
ja
adc
lret
ret
add
pop
and
jb
test
jecxz
push
iret
cmp
inc
or
jns
stc
mov
xchg
or
pop
repnz
mov
adc
adc
out
ja
data16
addl
jmp
je
popf
mov
pop
mov
test
fs
jge
out
jl
push
or
jmp
dec
push
imul
pop
stc
mov
mov
outsl
add
xor
push
cmc
push
ret
mov
lret
xorl
data16
fs
add
add
or
in
sub
mov
insb
pop
outsl
mov
xor
fnstcw
mov
jg
cwtl
fcomp
pop
jnp
cli
out
xchg
push
lock
js
mov
inc
xchg
cmp
xchg
sub
fistps
shlb
shll
jns
daa
inc
xchg
sub
ret
pop
jno
and
hlt
std
enter
scas
seta
push
mov
add
pop
jb
dec
mov
dec
jmp
lods
cmc
lret
shlb
sub
addr16
in
adc
je
add
dec
fsubp
xchg
bound
pop
sbb
arpl
into
popa
inc
daa
daa
mov
in
sub
adc
mov
lods
mov
rcrl
mov
movsl
addl
mov
shrb
jo
jp
mov
sbb
test
push
pushf
mov
loop
and
mov
push
mov
fisubl
mov
call
mov
outsl
gs
pushf
test
xchg
lock
xor
cli
jge
mov
es
pop
or
in
lods
xchg
dec
mov
mov
aam
adc
movsl
mov
mov
loope
insl
scas
dec
adc
mov
fiadds
je
jmp
mov
outsb
leave
test
push
into
sbb
dec
pusha
imul
cmp
fsts
mov
push
add
mov
inc
and
scas
push
inc
mov
into
sti
xchg
xchg
int
add
mov
outsl
rcrl
popa
pop
ja
sbb
xlat
sbb
iret
push
jae
rcr
xchg
jp
pop
shr
sub
push
cmc
pop
xchg
jns
cmp
mov
lock
and
out
inc
pop
sub
dec
adc
mov
fwait
xorb
inc
sub
ret
shl
popf
inc
and
or
dec
jns
jecxz
mov
mov
lahf
or
mov
int
divb
xchg
and
mov
push
sub
jecxz
addl
xchg
into
pop
jns
or
sarl
mov
mov
ja
xor
or
mov
jne
inc
into
ds
cmovb
mov
aam
jo
inc
mov
ljmp
and
mov
lcall
data16
jnp
aam
call
test
push
mov
fisubrl
dec
cmpsl
lahf
stc
sub
xor
int3
rcrl
xchg
out
pop
pop
cmp
popa
dec
dec
outsl
or
pushf
lret
aaa
pop
fisubrs
jae
xor
out
fldz
pop
seto
mov
popf
pop
cli
mov
stc
xchg
jp
aas
cmp
call
cs
nop
hlt
mov
enter
mov
push
mov
inc
loop
rclb
xchg
mov
rclb
in
call
jb
or
aas
sarb
fmul
adc
xchg
sbb
test
pop
or
pop
cmpsb
lods
jecxz
popf
cs
cmp
jecxz
pop
lcall
pop
adc
popf
sub
inc
push
aaa
push
sub
mov
pop
push
dec
fidivrs
mov
jle
push
cmp
xor
mov
add
lods
push
inc
stc
ret
fcoms
xor
pop
adc
jge
and
cmp
inc
scas
jb
pop
rolb
lods
js
decl
inc
fmull
arpl
call
xchg
mov
dec
inc
xchg
mov
push
mov
mov
cmp
inc
or
sub
mov
sbb
cmp
pushf
fmul
das
popf
xor
aaa
arpl
and
sbb
inc
fistps
mov
cmp
push
pop
inc
mov
iret
or
stc
in
inc
xchg
aam
outsl
lret
ret
test
imul
mov
inc
adc
xchg
stos
dec
push
and
dec
leave
je
lret
clc
mov
pop
pop
sbb
fbstp
scas
gs
fs
rsm
cltd
dec
mov
inc
inc
movsb
jg
adc
xchg
outsb
std
test
sti
adc
adc
mov
push
mov
adc
aam
lahf
mov
mov
jmp
je
scas
mov
test
cmp
shrb
lods
add
orb
repz
das
sub
jl
push
ficomps
fs
je
into
cmpsb
arpl
jno
clc
pop
sbb
adc
movsl
lock
adc
jno
add
jl
aad
sub
cld
xchg
cld
push
cs
ljmp
fcmovbe
loope
add
jno
jns
push
std
sub
ds
pop
cs
jecxz
push
iret
aam
mov
mov
or
push
xchg
cli
cld
or
adc
gs
pusha
ret
inc
pop
add
sbb
cmc
mov
mov
icebp
inc
sub
cvtps2pd
lods
jne
insb
sub
mov
adc
xlat
jno
mov
arpl
add
sbb
std
clc
sub
ret
rcl
push
repz
test
adc
xor
shlb
pop
in
cmp
add
jne
es
test
pop
mov
popf
sbb
mov
das
xchg
or
insl
out
insb
scas
fildll
add
fdivl
les
icebp
rcll
adc
pop
repz
imul
mov
push
cmc
push
inc
ficoml
jge
test
sbb
pslld
cmpsb
stc
testl
das
lea
mov
xor
mov
xchg
inc
xor
adc
dec
fsubrs
cmp
xchg
jmp
cld
insl
sarl
cmpsl
mov
cmp
clc
xchg
dec
sahf
xchg
add
cltd
xchg
std
iret
pop
popa
pop
lret
ffreep
mov
shll
adc
iret
sarl
bound
or
pushf
inc
jmp
scas
cmc
mov
sub
js
dec
mov
mov
mov
test
icebp
xlat
icebp
insl
mov
ret
sub
mov
ud2
push
pop
lods
arpl
push
aaa
jp
mov
cmp
cli
jno
bound
testb
pushf
lods
adc
ss
into
mull
pop
dec
es
sub
xor
lds
mov
or
rcrl
mov
jo
stc
in
add
lods
inc
or
jp
adc
in
int3
movsl
pop
and
push
mov
and
pop
pusha
add
imul
addr16
aam
cwtl
push
mov
or
loopne
pop
jo
xor
out
das
popf
rcrl
mov
mov
adc
rolb
sub
test
add
push
lcall
and
lea
xor
inc
dec
in
ret
mov
dec
mov
dec
cmp
inc
js
movsb
pop
inc
cltd
dec
leave
pop
and
sub
lret
jmp
inc
ficompl
fstpl
addr16
fsubr
mov
pop
push
xchg
sub
cs
mov
push
cmp
lods
test
mov
das
pop
xor
jmp
inc
adc
xor
push
sbb
cmp
cmpsb
test
mov
imul
jb
mov
aam
jle
adc
daa
xor
aas
push
sbb
xor
fwait
push
in
out
jecxz
lea
ret
push
xchg
mov
stc
rolb
xchg
jl
pop
pop
es
xor
add
int3
cmp
repz
push
std
dec
mov
stc
mov
jle
mov
adc
mov
insl
mov
xchg
pop
adc
jmp
inc
cmpsl
nop
cmp
xchg
jns
loopne
cmp
pop
push
aas
das
sahf
ret
orl
jmp
lret
mov
cmpsb
dec
cmp
cmc
push
or
ficompl
sbb
inc
pop
xor
sbb
xor
inc
negl
movsl
rorb
inc
jp
xchg
cmp
inc
push
lcall
mov
fistpl
imul
xchg
test
pop
xchg
lret
pushf
sub
inc
das
xchg
cmp
sub
push
movsl
sub
sbb
outsl
out
lds
cmp
pop
sahf
jae
pop
cmp
lods
xchg
fcompl
gs
inc
fchs
in
lods
sbb
adc
push
jp
sub
outsb
test
sahf
pop
int3
push
cmp
sub
push
jge
cmpsl
pop
cwtl
icebp
mov
jb
in
jno
insl
mov
mov
lahf
jne
cld
imul
xchg
jb
sahf
repz
in
fucomip
mov
cmpsb
xor
insl
aam
pushf
dec
sub
cltd
mov
loopne
mov
sbb
xor
in
out
mov
fsubs
mov
push
insl
movsb
sub
xchg
xlat
mov
mull
fdiv
pusha
fidivrs
adc
imul
insb
jae
pop
divl
add
jnp
lock
xorl
add
in
or
mov
orb
push
fdivp
pusha
cmp
push
fcmovbe
into
addl
and
shrb
push
pop
push
cmp
aam
adc
xlat
imul
arpl
loopne
popl
fwait
mov
pop
movntq
es
push
repnz
out
clc
scas
dec
sbb
mov
sub
in
and
mov
xchg
xchg
pop
cmp
ret
sub
lea
pop
aas
je
jnp
jle
or
mov
insl
push
xchg
mov
lret
in
lods
jnp
sahf
xchg
cli
jno
mov
pop
xchg
jge
fistl
mov
aas
mov
sbb
scas
xor
adc
gs
sub
pop
popa
jo
test
ss
movsb
push
xchg
cmc
cmp
mov
shrb
std
mov
lds
pop
arpl
add
adc
mov
into
pop
js
push
fildl
jg
sbb
mov
and
les
cmp
jg
cltd
repz
xor
xchg
dec
loope
inc
adc
mov
add
dec
out
pop
jno
push
hlt
dec
hlt
daa
test
sbb
fisubs
dec
mov
cwtl
mov
xchg
fisubs
mov
lods
sub
cld
push
mov
inc
ss
shll
inc
sub
shlb
test
push
movsb
dec
pop
add
cwtl
jge
xchg
fstpt
add
xchg
scas
outsl
out
xchg
push
push
outsb
adc
mov
stos
push
jno
cs
aaa
mov
jmp
mov
dec
lahf
movsl
enter
mov
mov
shlb
cmp
cli
mov
xchg
pop
xchg
call
repnz
sbb
or
cmp
and
pop
xor
stos
mov
mov
loop
xlat
fwait
fs
or
mov
int3
sbb
fdivrs
rcrb
stos
xor
imul
cmp
push
pop
daa
cmp
repz
pop
mov
mov
mov
mov
sbb
mov
je
push
idivb
enter
in
push
divl
pop
stos
xor
ret
stc
inc
adc
xchg
mulb
in
cmpsb
lret
lods
cmp
imul
daa
cmp
ret
push
rcr
push
subb
sub
mov
mov
loop
jecxz
xlat
mov
jbe
rcll
jo
and
mov
lods
lcall
fs
xor
movsl
pusha
std
mov
lods
jns
ja
or
notl
or
fstl
clc
in
pop
jbe
std
je
lret
push
sti
mov
mov
out
lahf
les
dec
dec
jp
dec
add
mov
fsts
ja
dec
xor
pop
popa
out
cld
xor
dec
cmp
or
lds
add
mov
or
clc
cmpsb
jnp
push
mov
repnz
dec
aam
into
mov
mov
addl
add
inc
cwtl
jo
fmull
and
push
hlt
or
cwtl
cmp
stc
push
jl
fcmovnbe
in
stos
fstp
lretw
pop
lcall
cmpsl
adc
std
stos
sahf
push
inc
test
xor
push
cmp
sub
stc
shl
xchg
iret
pop
in
sub
mov
xor
into
sbb
fbld
pop
call
xchg
push
jl
xchg
shrb
je
movsb
cmp
jecxz
out
lea
outsb
xchg
mov
ficompl
popa
aaa
stos
movsb
push
dec
mov
rcr
icebp
mov
sub
mov
insb
xchg
push
adc
fstl
jp
fidivrl
or
and
mul
mov
out
popf
xor
sub
and
push
lds
js
sub
ja
xchg
adc
scas
fbstp
shll
das
push
sahf
adc
inc
repz
mov
out
push
sti
adc
push
ja
xchg
stc
xor
pop
popf
mov
sbb
mov
inc
adc
mov
dec
inc
jl
aam
mov
pop
dec
sub
add
sub
inc
sbb
test
and
adc
das
cmpsb
xor
iret
mov
add
sub
in
into
jle
and
stos
scas
jmp
or
pop
pop
and
insl
dec
aad
inc
cmp
es
pop
inc
fcompl
push
sbb
sbb
je
pop
mov
xchg
fst
cmc
lcall
out
xor
nop
repz
adcb
out
add
adc
jle
push
je
push
add
int3
call
jecxz
movsl
mov
mov
ret
lcall
in
in
pushf
daa
ret
add
mov
push
sti
andb
fwait
ss
jecxz
jp
addb
mov
xlat
xchg
mov
int3
xchg
fmul
sbb
mov
dec
xchg
aas
or
mov
fwait
stc
add
pushf
inc
xchg
rolb
mov
dec
dec
pop
insb
cli
xor
leave
xor
and
std
inc
lret
cmp
sbb
jno
jbe
idiv
adc
fldcw
add
adc
call
lods
ret
and
push
cvtps2pd
jnp
mov
lahf
lret
xor
cmp
pop
jae
mov
shrb
push
out
push
lret
cmp
cmp
inc
lcall
push
mov
insb
mov
data16
adc
push
adc
mov
out
ret
out
inc
movb
test
insl
xchg
aaa
subb
out
fnstsw
add
frstor
push
mov
hlt
inc
pop
jnp
mov
add
adc
mov
andb
cltd
mov
push
mov
jge
mull
cmp
ja
ret
ret
loop
sub
mov
repz
pop
sti
push
shll
inc
mov
mov
xchg
cmp
stc
jge
mov
int
push
popf
push
jbe
stc
es
js
or
lock
xchg
repz
rcl
pop
enter
pop
popf
lea
fstpt
cmpsl
ret
pop
or
out
aad
sbb
add
add
xor
cld
add
fadds
jecxz
push
pop
punpckldq
andb
andl
jge
stos
mov
clc
xchg
jl
cmpsb
sbb
out
cmp
mov
push
fdivs
push
pop
mov
cs
lock
cmc
mov
cltd
inc
sbb
mov
lods
sub
xchg
or
inc
out
fwait
daa
cltd
adc
mov
scas
pusha
int3
mov
xchg
mov
adc
sub
adc
mov
sub
iret
jge
test
push
pop
fbstp
ljmp
adc
ja
push
enter
push
in
push
aad
xchg
enter
dec
pop
adc
pop
jle
push
idivb
dec
hlt
xchg
repnz
pop
in
mov
js
in
xor
mov
inc
mov
mov
loope
add
lods
mov
je
or
adc
push
mov
out
jmp
inc
push
xchg
or
je
cmp
jae
mov
mov
hlt
add
add
push
bound
sete
std
lock
pop
inc
sbb
adc
pop
rcll
test
xchg
aam
leave
sbb
jp
pop
leave
mov
pop
mull
dec
jo
loop
fldcw
ret
daa
pop
xchg
popl
loopne
cmp
and
out
clc
mov
test
xor
fcomps
or
movb
imul
out
shlb
in
and
push
and
sti
sbb
xchg
add
sbb
push
xchg
cmpsl
cmp
inc
xchg
mov
aas
mov
repz
and
push
push
pop
fdivl
testl
jbe
cmpsl
lcall
movsb
and
xchg
dec
jae
pop
jb
fisubrs
or
push
repnz
sub
jno
loope
addl
nop
or
ljmp
or
jecxz
mov
xchg
mov
cmp
jp
pop
stos
inc
sar
dec
jmp
and
pop
jne
jl
sub
enter
or
add
mov
mov
aam
mov
sti
jne
mov
mov
add
subl
sbb
clc
leave
lcall
ret
mov
mov
pop
sub
xchg
std
popf
stos
cmp
sbb
mov
rcl
dec
push
xlat
push
mov
insb
mov
repz
jb
mov
cltd
push
add
scas
insl
lret
inc
cmpl
loope
cli
stc
jecxz
sbb
fs
cmp
imul
dec
int
mov
dec
sbb
in
sbb
cmp
fildl
or
lea
icebp
mov
mov
jns
into
pcmpgtd
in
das
or
sbb
popf
int3
or
sti
inc
shlb
lret
and
stos
jno
add
into
mov
nop
sbb
sti
adc
cmp
push
xchg
pop
pushf
aaa
arpl
sbb
rcrb
stos
repz
lock
cld
pop
inc
stos
pop
inc
pop
mov
sbb
or
cmp
movsl
lahf
pop
add
jno
add
sbb
fs
cmpsb
icebp
iret
nop
jge
lea
sbbb
cmp
sti
xchg
out
xchg
pop
int
into
mov
or
jno
int3
mov
pop
add
ret
sbb
aam
fld
jp
xor
lea
ror
lods
in
mov
nop
lods
mov
jecxz
jecxz
fwait
mov
dec
sub
scas
dec
cmp
mov
inc
jne
xor
lds
lods
xchg
sub
pop
adc
xchg
xor
jecxz
cwtl
jle
movsl
pop
dec
sbb
sti
pop
ret
fcoml
gs
cmp
scas
mov
lock
jb
aam
mov
mov
rcr
stos
mov
fldenv
pop
dec
push
in
jnp
xchg
clc
in
add
js
mov
push
lods
cltd
mov
push
iret
test
in
mov
cmc
xchg
adc
cld
dec
xor
repz
adc
mov
in
cmp
notl
out
and
mov
pusha
jbe
and
dec
mov
cmc
adc
mov
cmp
decb
call
mov
les
scas
imul
jge
sub
insb
aas
sbb
shll
fsubrl
push
jg
mov
out
mov
jns
fcomi
popa
mov
pusha
sarl
lahf
xor
push
inc
int3
ljmp
or
arpl
xor
and
int3
inc
ja
xor
mov
js
js
jp
mov
sbb
adc
mov
sbb
ror
lods
xchg
popf
and
push
in
out
stos
out
mov
into
js
pop
popa
jo
sahf
sbbb
pop
fucomp
cmp
or
rcrb
js
and
cwtl
jae
dec
xor
xchg
rorb
cmc
pushf
out
mov
notl
pop
sub
mov
adc
in
lds
lret
add
mov
inc
cmp
inc
cltd
mov
push
cld
mov
dec
nop
fidivs
data16
insb
xchg
stos
lods
rcll
xor
xchg
inc
out
scas
sub
add
mov
jns
cltd
out
dec
lock
add
enter
xor
ret
fiaddl
stos
jl
fcoml
jp
mov
out
sub
mov
xlat
cmp
xchg
mov
mov
jbe
ret
mov
nop
xor
outsl
and
sbb
hlt
mov
call
sbb
sub
mov
daa
loopne
loop
fs
fst
test
inc
xor
addr16
and
in
sahf
hlt
pushf
mov
lret
les
adcl
fwait
loope
adcb
fwait
rcrl
stos
testl
pop
cmp
or
fsubr
movsb
xchg
das
xor
in
xor
xchg
daa
daa
pop
es
dec
xchg
sub
push
rep
subl
dec
test
fisubl
adc
add
int
ljmp
gs
aas
fimuls
xchg
sbb
push
push
and
inc
cmpsb
loop
xchg
es
dec
and
js
push
out
dec
cmpsl
sub
ljmp
jae
jl
ret
pusha
out
jo
nop
xlat
xorl
loopne
xchg
scas
les
sahf
lret
or
into
mov
rcl
test
lods
pushf
addr16
stos
pop
movsl
pop
dec
dec
jo
dec
mov
sbb
stos
rcl
ret
in
movsl
jle
pcmpgtw
lret
mov
lock
or
or
out
mov
aas
mov
sarb
fs
enter
xchg
sarl
cmp
repz
or
sti
xor
jle
shlb
or
mov
orb
scas
outsb
mov
adc
adcb
mov
movsl
push
ror
inc
jns
int3
xchg
xlat
lods
fidivrl
inc
sbb
lock
cmp
xchg
jno
sbb
push
xorb
arpl
ffreep
or
adc
inc
mov
stos
shrb
inc
add
bound
leave
bound
iret
xchg
cltd
xor
mov
or
add
push
sbb
cmc
cmp
stc
push
inc
movsl
les
ljmp
hlt
add
fisttps
add
jmp
cmp
leave
mov
mov
cmp
cmp
jg
push
loope
sti
push
pusha
int
jno
jbe
andb
dec
arpl
dec
adc
add
mov
sub
jmp
das
stos
jns
stos
ficompl
cltd
mov
jg
test
push
nop
orb
addl
ss
xchg
les
or
mov
push
push
mov
jb
sbb
push
sub
sub
stos
and
cs
and
pop
imulb
cmp
in
push
adc
jo
movsl
mov
scas
mov
clc
int
lret
fsubs
mov
sub
sub
sub
jns
jbe
sub
mov
push
mov
dec
insl
inc
xchg
mov
push
outsl
faddl
inc
mov
add
in
pop
xor
push
popf
ja
pop
cs
stos
lahf
mov
push
jbe
loopne
mov
adc
das
sbb
pop
xor
out
mov
push
testb
inc
mov
lds
and
push
ss
push
sbb
or
aam
jb
roll
add
push
jo
inc
js
sbb
lods
and
or
stc
and
jge
js
arpl
mov
loop
adc
sbb
imul
inc
movsb
orl
add
cmp
jne
or
add
push
out
xor
mov
jns
and
scas
cli
xchg
pop
lods
sub
and
add
mov
popl
push
push
cmp
push
bound
test
sbb
aad
xchg
sbb
insb
loope
stos
out
jns
inc
xor
pop
or
inc
mov
aad
mov
mov
mov
jo
pop
dec
clc
cmpsb
frstor
scas
addl
lods
scas
mov
fwait
jmp
xlat
inc
sbb
push
pop
enter
mov
nop
push
push
inc
and
bound
and
mov
sbb
pop
test
add
lret
rorl
mov
dec
inc
jecxz
loope
push
je
mov
cmc
add
xlat
inc
dec
outsl
jo
clc
lods
adc
mov
jo
pop
xchg
iret
xchg
cmp
and
insb
push
and
stos
and
sbb
push
inc
stos
mov
or
push
sbb
roll
mov
aas
mov
scas
in
sbb
dec
das
cmp
std
inc
push
or
jmp
mov
out
xchg
mov
mov
dec
dec
into
xor
int
and
and
sub
ret
xchg
int
pusha
scas
lahf
mov
or
cmp
popf
repz
push
adc
into
xlat
adc
clc
ror
bound
pusha
push
leavew
or
rcrl
inc
in
call
adc
xchg
xor
xor
fcoms
mov
adc
aas
hlt
jae
dec
sub
and
adc
and
or
pop
insb
notb
cltd
jge
jne
and
mov
mov
cmp
or
jle
std
push
lods
ja
mov
out
mov
stos
in
add
dec
pop
mov
outsb
daa
mov
rcrl
cltd
call
ja
lret
sub
xlat
sub
add
aad
sub
ljmp
xor
repnz
adc
bound
and
out
mov
ret
faddl
test
rolb
cltd
mov
cmp
int3
aad
or
js
cmp
repnz
adc
rolb
mov
push
cs
lock
adc
dec
and
movsb
cmp
pop
add
in
test
jns
lret
sahf
int
adc
popf
shr
mov
test
adc
jne
fdivs
lock
test
pusha
lahf
enter
jbe
push
sub
mov
call
pop
mov
bound
xchg
loopne
rcrb
mov
aas
pop
divl
aas
lock
icebp
dec
cmpsb
sarb
jo
push
mov
scas
ljmp
fs
movsb
mov
fsts
xchg
and
mov
mov
cs
fnstenv
shl
out
cmp
push
outsl
js
xor
add
imul
testb
test
mov
je
xor
xor
cmc
and
xor
adc
hlt
or
jns
jg
ss
ret
jg
push
addr16
mov
mov
mov
mov
pop
mov
mov
aad
dec
xor
ljmp
fwait
dec
js
negl
cwtl
icebp
in
cmp
andl
pop
push
sub
fisttps
bound
stos
jge
jle
inc
ljmp
int3
adcl
pop
js
inc
sub
std
mov
pushf
and
mov
jne
das
xchg
sub
jecxz
mov
movsl
ds
or
add
cld
in
aaa
push
jmp
jge
ja
adc
fs
add
or
add
rorl
je
cmpsl
adc
fs
mov
scas
mov
sbb
movsl
imul
xchg
mov
pusha
sti
dec
pop
sbb
or
mov
sub
scas
lds
cmp
vmptrst
push
ja
inc
imul
jle
icebp
adc
mov
shll
sub
shl
push
mov
cmp
call
dec
xlat
mov
cmc
cmpsl
mov
sar
mov
cmp
push
loope
fs
sbb
fdivl
pop
js
cmpsl
adc
add
stos
xor
or
mov
sub
jb
pop
pop
xor
mov
aam
inc
stos
or
xchg
cmp
data16
mov
xor
mov
mov
sub
or
int
lods
fs
ficomps
push
jnp
or
cmp
dec
stos
fs
sub
out
inc
fisttpl
subb
sub
cmovno
jo
mov
xor
ds
pop
add
jmp
pop
sti
pop
mov
sub
ljmp
cmp
cmp
add
sbb
in
mov
rolb
xchg
ljmp
addr16
pop
fmull
mov
pop
cmpsl
int3
movsb
mov
push
jnp
push
testl
or
mov
and
sub
cs
neg
jl
xor
aad
xchg
mov
xchg
cmp
test
lock
dec
stc
sti
rep
mov
push
in
scas
jle
xchg
mov
flds
aad
sahf
mov
mov
push
sub
stos
clc
jno
clc
sub
es
dec
call
xchg
aad
and
lret
adc
in
loopne
dec
mov
nop
ret
aaa
push
cmc
cs
sbb
lods
out
leave
jno
jno
aam
addr16
shrb
mov
mov
push
enter
stos
movntq
out
cmp
sbb
icebp
cmp
inc
dec
ror
push
jge
jne
jae
push
push
pop
push
xchg
jmp
cmp
dec
cmpsb
rclb
andl
push
mov
shrb
dec
stos
mov
shll
mov
shrb
lods
iret
and
pop
and
sub
jo
mov
fistps
jge
aaa
push
mov
or
add
mov
xchg
inc
mov
and
dec
mov
movsl
sbb
jnp
mov
mov
mov
je
mov
or
filds
xor
fmul
jae
sahf
in
jo
adc
xor
pop
xchg
aaa
ret
inc
cmpb
sub
mov
dec
xchg
or
jecxz
pushf
cltd
mov
enter
push
dec
dec
cmp
xchg
sub
js
adc
es
jmp
mov
movsl
inc
arpl
sbb
test
jge
sbb
aas
jl
int
mov
fsubrs
xor
xchg
loop
or
mov
in
inc
xchg
xchg
subl
ja
call
and
cwtl
mov
jns
int
mov
lcall
in
pop
lcall
pop
jecxz
push
xchg
xor
fists
aas
and
lcall
cwtl
mov
add
test
out
xor
dec
cmp
rol
mov
cs
push
popf
mov
and
int
insl
or
mov
in
sbb
adc
lcall
data16
dec
lods
aad
dec
push
aaa
mov
mov
aas
jl
push
inc
dec
test
shlb
pop
mov
push
nop
mov
mov
movsl
scas
push
shll
lock
and
sbb
movsl
pusha
bound
stc
pop
in
lret
xor
stos
dec
jae
push
jo
pop
popf
js
jmp
out
mov
adc
int
in
fs
ljmp
add
mov
cmp
cmp
push
loopne
fs
int
jle
sti
cmp
pop
sub
in
call
bound
adc
mov
xor
pop
push
xchg
aad
xchg
rol
nop
ljmp
pushf
push
mov
cli
pop
shl
pushf
popf
lods
jmp
pusha
sub
es
push
sbb
mov
aad
sbb
lret
outsl
push
jbe
sbb
test
addb
adc
fisubrl
inc
fdivr
mov
add
fisttpl
jp
mov
push
xchg
mov
pop
ret
rorl
jg
fistps
mov
js
push
shrb
in
xor
out
or
pop
std
sub
inc
mov
aaa
pop
fadds
jno
scas
mov
and
cmp
lahf
loope
out
add
push
lds
imul
cwtl
sub
loope
xchg
hlt
dec
hlt
cmp
daa
dec
pop
aas
insl
stc
psllq
xor
push
xchg
sub
test
ret
sti
or
cmp
or
cwtl
dec
ret
pop
js
int
inc
mov
and
mov
pop
pop
jo
inc
or
push
adc
xchg
ljmp
repz
je
push
iret
push
fcmovu
mov
sub
jo
xor
es
pushf
sarb
adc
add
adc
xchg
in
mov
mov
mov
add
xor
std
jbe
mov
mov
inc
dec
lcall
adc
xchg
stos
inc
sbbl
add
dec
cmc
test
cltd
movsl
pop
or
je
int
sahf
adc
out
lods
cmpsb
mov
fmull
pop
mov
ljmp
mov
push
imul
lret
mov
repnz
jne
jp
stc
imul
cmp
add
inc
fcomps
dec
xor
cmpsl
sub
mov
les
aaa
mov
xchg
lds
mov
sub
inc
mov
adc
push
int3
xchg
daa
hlt
pop
pushf
adc
adc
adc
shrb
daa
js
ja
push
rclb
mov
fsubp
js
pop
les
and
sti
xor
insb
insl
push
insb
frstor
in
xchg
test
hlt
cmp
mov
or
xchg
adcb
fs
jo
lock
movsb
sbb
xchg
jne
sbb
loop
cli
push
or
aaa
inc
cmp
jo
xchg
mov
fwait
data16
divb
inc
mov
push
and
adc
sub
pop
inc
pop
xchg
cwtl
sub
mov
daa
addb
ffreep
push
lock
mov
aad
or
lret
out
jne
dec
leave
mov
push
lret
jbe
je
xlat
and
push
inc
pop
std
mov
notb
pop
xchg
sti
cmpsb
push
pop
jno
dec
adc
cmp
and
jg
mov
or
outsb
mov
pop
xor
in
cltd
mov
aam
push
jmp
insb
push
dec
xchg
insl
dec
adc
lea
in
nop
push
pop
aaa
test
stos
inc
jbe
cmp
add
mov
call
inc
push
sub
adc
inc
sbb
xor
dec
sub
cmpsb
ret
popf
sub
hlt
mov
in
movsl
adc
add
mov
ss
push
scas
xor
push
pop
sbb
and
sbb
inc
movsl
mov
rcl
push
stos
dec
push
dec
scas
sarl
mov
scas
movsl
pop
dec
lret
gs
pop
notl
out
sbb
pop
pop
dec
dec
jg
inc
mov
or
mov
cmp
addr16
mov
xchg
hlt
xchg
add
jmp
mov
out
std
or
pop
xchg
jecxz
pop
lods
shr
and
jns
je
lock
mov
push
add
pop
cwtl
inc
push
int
orb
mov
push
dec
scas
inc
js
int
ss
imul
adc
mov
testb
xchg
nop
ss
jnp
stos
outsb
bndstx
das
fsubrl
leave
ret
mov
jl
mov
push
mov
movsl
lahf
push
adc
loope
repnz
mov
cmpl
shlb
jmp
dec
cmc
in
pop
sub
mov
pop
dec
inc
lods
out
mov
jge
adc
and
aas
push
mov
imulb
mov
mov
or
xlat
stos
add
xor
mov
fwait
lods
js
fdivs
mov
je
pop
jns
pop
lods
push
insl
loope
fs
fmull
sbb
dec
cltd
and
das
sbb
jle
or
repnz
jmp
popf
dec
sub
xor
divl
mov
adc
jbe
pushf
inc
cmc
sub
pop
pop
push
push
cli
mov
cs
adc
loope
nop
jae
lret
fsubs
seta
and
inc
fcomp
sbb
cmp
ljmp
pop
imul
sti
test
xor
sbb
jg
pop
insb
dec
jp
hlt
and
jg
push
cli
xor
stc
inc
sub
xor
sbb
hlt
lcall
inc
addr16
mov
mov
add
or
push
pushf
ss
out
addl
jne
cmp
push
sbb
push
cs
fldl
mov
subl
inc
in
scas
fwait
movsl
mov
out
insl
adc
and
mov
pushf
std
xor
popf
dec
je
xor
mov
xchg
xchg
gs
lock
addl
mov
cwtl
mov
dec
ja
enter
shll
xor
jnp
pop
inc
dec
cld
aas
add
movsb
mov
roll
mov
or
push
push
fstp
xchg
fnsave
fstpt
mov
mov
test
adcb
mov
out
nop
mov
lret
dec
pusha
fadds
cmp
dec
xlat
push
xor
and
xchg
int
or
shrb
xchg
or
mov
xchg
mov
sub
into
fs
push
jnp
jne
adcb
fdivl
pop
pop
fdivrs
outsb
xor
adc
cltd
push
lcall
inc
pop
loope
dec
xor
lahf
mov
xor
sbbl
mov
sbb
das
ficoms
cmpsl
pop
mov
movsl
xchg
sub
pop
bound
mov
lcall
mov
xorl
jl
movsl
mov
dec
xor
insl
cli
enter
cmc
cmp
cmpsb
loopne
pop
inc
sub
out
loope
push
pop
stos
mov
or
inc
cmp
lods
jns
ret
pop
pop
dec
add
add
pop
cwtl
aas
std
arpl
jmp
ja
clc
mov
ds
fiadds
sahf
xlat
pusha
xor
add
mov
divb
pop
aad
cwtl
sub
jle
repz
sbb
inc
lret
add
imul
aaa
cli
mov
jge
push
ja
push
jmp
mov
xor
add
lods
lds
sarb
addr16
cmp
cmp
fwait
sub
push
dec
pop
mov
es
cmpl
xchg
dec
mov
dec
ljmp
ja
mov
mov
shlb
mull
js
adc
loope
inc
out
push
adc
mov
cmp
inc
ljmp
ljmp
dec
push
xor
xchg
push
shrl
pop
fs
mov
adc
push
ret
mov
pop
cmp
sub
rcrl
pop
and
push
adc
xchg
rcll
imul
push
mov
in
cmp
outsb
sbb
pop
and
adcb
mov
int
nop
scas
ja
mov
arpl
mov
inc
mov
enter
bnd
sub
lods
pusha
subl
out
bound
mov
fcomps
sbb
jecxz
aaa
dec
add
ficoml
arpl
ds
ret
movsb
jno
cmp
fildl
add
mov
dec
xor
das
jo
or
outsb
bound
dec
push
dec
mov
repz
xor
add
mov
out
add
xor
stc
mov
int3
inc
push
pop
add
ss
jb
mov
into
push
mov
adc
mov
decb
shlb
jne
lcall
cmp
out
jnp
push
inc
outsb
movsb
mov
lcall
dec
mov
add
pop
sti
imul
ret
daa
stos
mov
cmp
nop
cli
inc
fildl
adc
cmp
std
xor
xchg
mov
mov
push
jo
xlat
pop
sbb
je
push
pop
cmp
adc
mov
push
ja
push
xor
adc
sub
or
mov
fsubl
icebp
test
sbb
xchg
sub
xor
cs
mov
pop
pop
repnz
mov
fidivrs
pop
je
mov
dec
imul
mov
lcall
add
sar
sbb
jg
lahf
push
outsl
into
pop
lret
fists
cmp
out
pusha
lret
inc
sub
subb
mov
and
dec
add
mov
jo
sbbl
aas
sub
je
imul
inc
cmp
jae
shll
mov
adc
out
pop
aas
fcomi
push
movsl
insl
das
pop
sbb
pop
cmp
adc
stos
adc
std
leave
mov
shl
inc
jmp
cmpsb
out
test
pop
fistpll
lret
push
xchg
xchg
add
xor
push
aam
mov
jne
or
fs
mov
mov
std
push
xor
xchg
mov
inc
movd
cltd
rolb
dec
jbe
pcmpeqd
lcall
mov
push
jl
les
inc
das
fadds
jmp
xor
hlt
ja
or
or
cltd
enter
testl
jns
loop
or
andl
push
sbb
sbb
je
add
add
cltd
jmp
ja
sbb
xchg
pop
lock
push
cmp
inc
adc
ficomps
xchg
ret
fstpt
scas
mov
cmp
cld
xor
xchg
xor
inc
cmp
loop
sub
fsubl
pop
in
cmp
std
pushl
pusha
xchg
or
cmc
fsubr
addl
jnp
nop
mov
inc
mov
sbb
pop
stos
scas
fistpl
lods
cld
jnp
pop
or
push
inc
pop
mov
xchg
orb
in
lods
sahf
aad
mov
mov
jmp
push
push
adc
fmull
aad
or
mov
rolb
mov
in
loopne
push
xchg
sub
dec
in
mov
and
mov
je
pop
leave
push
mov
add
or
mov
sbb
fadds
mov
pusha
mov
cmpb
xor
mov
icebp
sbb
loop
pop
and
ret
fucomp
xor
cs
add
mov
stos
out
sbb
push
xchg
aam
in
pop
jge
lds
inc
and
icebp
cs
sahf
data16
aad
mov
pop
mov
ljmp
push
nop
in
xchg
cmp
sub
rolb
insb
push
lock
mov
add
movsb
data16
nop
sbb
mov
popl
mov
test
cwtl
int3
cmc
xor
mov
sub
xchg
in
xchg
cmpsb
sub
fisttpll
add
add
sbb
inc
stc
or
in
xor
inc
pop
leave
subl
icebp
inc
lea
sub
xor
cltd
mov
addr16
pop
mov
shr
pusha
jg
jge
xor
pop
jae
mov
pop
jae
xchg
or
enter
xchg
push
cmpsb
mov
sub
fisubrs
sbb
stos
hlt
or
mov
xor
add
fs
xor
orl
push
shl
sub
adc
mov
outsb
pop
sbb
push
dec
cs
mov
cs
dec
pop
mov
jns
stos
shrl
add
dec
sti
movsb
leave
pop
outsb
mov
movsb
ret
bound
ss
cwtl
into
es
stc
fildll
sbbl
sbb
xor
push
into
stos
sbb
shrl
ljmp
mov
lods
sbb
jbe
mov
mov
fcmove
or
jo
cmc
je
or
push
mov
outsl
ss
jp
cli
and
insl
fistpll
subl
xchg
sbb
xchg
inc
push
mov
dec
int3
test
rcll
xor
and
adc
add
push
mov
inc
jae
sti
cltd
pop
cmp
mov
mov
insl
xor
sbb
jo
and
or
sbb
cmpsl
jl
adc
inc
pop
pop
inc
dec
sub
addr16
loop
sbb
in
and
loope
jne
loopne
mov
jmp
xchg
into
or
daa
add
bound
pop
mov
iret
int
clc
jg
pusha
or
movsb
sbb
inc
fs
xchg
stc
mov
fucomip
iret
add
add
clc
sahf
sub
sub
inc
jne
ds
cmp
std
add
aam
inc
or
stos
dec
xchg
add
repnz
mov
inc
or
movsl
ret
sbb
nop
jecxz
xchg
sahf
popf
mov
into
popa
jnp
repnz
scas
ret
test
push
fisubrs
data16
jp
lcall
mov
mov
inc
pop
cmpsl
stos
bound
sub
cmpsl
or
xchg
jnp
inc
mov
cmp
ss
inc
aam
leave
push
lods
jmp
pop
mov
sub
cli
pushf
xor
dec
xchg
xlat
xchg
gs
sbb
data16
lds
clc
xchg
scas
je
cmpsb
jno
dec
call
movsl
lds
add
add
inc
mov
je
adc
sbb
aad
dec
mov
pop
jbe
and
jle
hlt
jge
push
into
sub
dec
pop
push
push
sub
dec
and
in
xchg
push
adc
out
fisubrl
loop
add
test
lret
fidivrl
or
mov
pop
movsl
xor
psrld
aaa
call
pop
add
inc
fimull
xchg
jae
inc
sub
test
push
js
andb
scas
jmp
sbb
out
insl
xchg
inc
loop
out
xchg
pushf
mov
fnclex
or
test
dec
es
xor
das
stos
pop
pop
mov
jmp
stc
inc
lods
cmp
js
sar
inc
inc
or
sbbl
fdivs
fmul
cli
push
cmpsb
daa
fsubrl
xchg
sub
xchg
push
lcall
addr16
inc
xchg
cwtl
push
xchg
scas
jmp
jl
cmp
test
mov
sbb
fistps
add
pusha
shl
int3
sub
inc
xchg
icebp
xor
hlt
mov
sbb
fcmovb
mov
pop
dec
cmp
loopne
adc
cmc
mov
add
adc
arpl
mov
and
sbb
int
dec
mov
jnp
xlat
jg
cmc
ret
repz
jns
lods
jae
mov
pop
mov
add
jp
inc
adc
rorb
out
mov
inc
sti
adc
das
sysexit
lret
movsl
adcl
xor
adc
push
fidivrs
and
xor
outsb
sbb
mov
or
push
mov
mov
inc
repz
jbe
push
jp
pushf
jp
lds
int3
xchg
xchg
pop
lahf
push
loopne
cmc
pop
mov
arpl
ja
add
add
mov
ljmp
mov
popf
xlat
sarb
int
repz
enter
int
paddusw
cmpsl
int
mov
imul
inc
or
out
pusha
mov
in
adcb
ret
cmpl
dec
jl
or
jl
inc
jp
daa
mov
or
fldenv
mov
daa
push
repnz
adc
ja
hlt
xchg
xchg
roll
das
lds
je
bound
jo
sub
into
push
adc
push
jo
adc
jmp
dec
sbb
test
pop
rcr
xlat
test
add
sub
jae
jo
jno
imul
mov
sbb
or
add
das
pop
fistps
repz
push
xor
movsl
cmp
push
pushf
push
inc
adc
call
mov
ja
sub
rol
xlat
aad
cmp
mov
lret
mov
xor
pop
pop
or
repnz
or
push
xchg
insl
fadd
or
cmp
mov
stos
sub
mov
mov
mov
add
jae
les
sbb
xor
adc
fstps
mov
ret
in
push
lods
xor
pop
fcmovb
inc
cmp
adc
sub
jecxz
arpl
or
add
dec
cwtl
sti
dec
pop
mov
addr16
lret
leave
or
sub
js
fwait
icebp
shlb
pop
je
insl
push
insl
xchg
sub
cmp
sub
jmp
push
add
sub
leave
push
pop
sbb
xorb
cltd
addb
aad
popa
add
pop
imul
cmp
out
mov
es
jle
pop
push
cltd
adcb
add
outsl
decb
fs
repz
das
sbb
mov
push
lods
movsl
mov
or
sub
push
sub
enter
add
test
xchg
pmaxsw
gs
xchg
cltd
lret
mov
add
mov
pop
lret
mov
gs
fstpt
jae
sahf
add
sub
scas
cltd
cmp
cmp
or
push
aad
push
dec
outsb
orl
xchg
ret
in
nop
mov
fcoml
xchg
cwtl
jae
push
pop
pusha
dec
inc
xchg
pop
push
xchg
fsts
mov
pop
dec
gs
pusha
imul
dec
mov
ss
inc
subb
andl
ljmp
mov
ret
idivl
mov
shr
cwtl
xchg
xchg
xor
mov
pop
lds
in
push
xchg
in
enter
push
stos
fwait
bound
inc
in
mov
pop
push
mov
testb
arpl
add
add
mov
cmp
lea
insb
jns
div
xchg
ljmp
sub
or
dec
inc
ljmp
and
sub
mov
or
or
fwait
sahf
fsubp
xchg
fisubrl
xor
or
in
jle
aam
mov
dec
dec
ret
repz
in
call
inc
xor
push
mov
loop
popa
or
test
bound
mov
jg
inc
insl
push
leave
outsl
and
jns
dec
icebp
push
inc
outsb
dec
ret
mov
and
leave
stc
sub
je
shlb
andl
xchg
arpl
repnz
lret
loope
aad
dec
cwtl
inc
lds
sbb
hlt
lret
dec
jecxz
cltd
sbb
and
js
dec
sbb
loop
addr16
ljmp
cmp
fs
mov
out
jns
and
outsb
push
push
pop
dec
repz
int3
dec
ret
jmp
mov
mov
sub
jmp
fs
sub
sahf
pop
mov
push
mov
push
cs
adc
sbb
xor
mov
push
xlat
cld
inc
scas
dec
mov
mov
inc
mov
jp
loop
sub
enter
cltd
sbb
cmp
mov
xchg
jne
imul
sbb
jns
shlb
ja
sub
pop
jle
stc
scas
jecxz
mov
cmp
or
push
cmp
jne
cmp
add
add
push
xchg
xor
js
push
mov
jmp
add
mov
mov
xchg
pop
ret
pushf
nop
std
dec
loope
mov
sti
fstpl
cmpsb
jb
std
jnp
inc
dec
xor
nop
xor
pop
push
jne
addr16
in
mov
cltd
iret
into
jne
movsl
cmp
adc
inc
sbb
jbe
subb
repnz
lock
inc
lds
sub
cmp
sbb
xchg
or
mov
mov
hlt
push
jo
rcl
or
dec
jae
xor
stc
adc
in
mov
sbb
and
mov
inc
and
dec
jb
loope
cmp
xchg
pop
imul
insl
or
jnp
add
mov
jno
push
sbb
fwait
mov
xorb
pop
ss
imul
dec
pop
lods
iret
or
pop
mov
sbb
jl,pn
outsl
icebp
and
mov
xor
push
add
loop
xchg
ret
mov
sbb
xor
cmp
push
insb
loope
lea
jmp
in
dec
sub
sub
scas
mov
mov
arpl
pop
and
jbe
outsb
stos
jecxz
stos
fildll
lahf
or
movsb
xchg
cmc
frstor
icebp
inc
andl
testb
xor
in
jp
shr
sub
dec
mov
pushf
fs
jne
jecxz
dec
les
push
sub
loope
shr
jne
cmpsb
add
inc
shrl
mov
in
lock
js
and
adc
sbb
sbb
mov
xchg
jne
dec
sbb
dec
mov
jg
mov
inc
pop
imull
dec
popa
jge
pop
cmpsb
jmp
xchg
les
out
out
push
pop
add
es
dec
insl
stc
std
xchg
leave
insb
push
mov
add
les
and
stos
bound
paddd
pop
inc
lahf
mov
jg
push
xchg
jne
push
lods
fdivl
lret
mov
jmp
je
rorb
mov
adc
stc
and
cmp
fbld
pop
jmp
mov
aad
pop
or
or
ss
mov
js
push
arpl
jl
imul
lds
call
pop
sub
push
mov
mov
daa
pusha
push
insb
dec
xchg
rorb
popa
cmc
ret
mov
xor
subl
rcll
imul
sub
xor
sbb
dec
ds
xorb
xchg
xchg
mov
and
and
fstl
push
sub
call
int
sbb
cmpl
and
push
xor
icebp
aam
adc
in
xor
sub
add
fwait
nop
ds
xchg
stos
push
lock
pusha
add
js
mov
std
notb
mov
out
addr16
mov
xchg
and
test
and
adc
mov
arpl
mov
sub
inc
imulb
repnz
outsl
dec
ror
les
push
aad
add
fs
inc
inc
mov
idivl
add
push
xchg
mov
pop
fbstp
data16
sub
add
aaa
xor
inc
push
push
dec
