push
call
ret
ret
jl
inc
test
stos
sti
ss
jmp
bound
enter
push
repz
adc
mull
mov
lcall
test
nop
leave
xchg
scas
push
ja
sbb
mov
cmpsl
pop
mov
int
xor
or
iret
xor
sub
pushf
sahf
es
xchg
and
ror
inc
mov
sbb
adc
mov
in
xor
data16
mov
mov
jbe
xchg
and
iret
stc
repnz
xor
in
dec
data16
lcall
enter
fistpl
mov
pop
andl
xchg
fwait
jns
mov
jmp
adc
pop
mov
ja
dec
outsw
into
sub
clc
sti
out
clc
mov
in
push
shll
stos
outsb
xor
adc
leave
popa
sbb
jp
hlt
and
cld
sub
adc
xchg
xor
jae
mov
ss
pop
stc
lds
out
push
jp
or
pop
xor
jmp
aas
in
jnp
sub
inc
sub
jg
out
fisubl
out
lock
cmp
aas
add
cwtl
jecxz
cltd
sbb
or
shlb
icebp
test
ds
test
lods
shll
lods
push
dec
repz
mov
add
les
cmp
lcall
ficoml
in
cs
push
cmp
fisubrl
pushf
aaa
rorb
push
mov
dec
sahf
testb
dec
or
jecxz
call
dec
dec
mov
xchg
pushf
pusha
xor
cmp
dec
test
pop
cmp
push
jne
jmp
js
arpl
rclb
insl
pop
or
fisubrl
mov
stc
mov
inc
aas
fmull
xchg
bound
lock
cltd
mov
push
xchg
shl
and
gs
inc
mov
push
jo
ficoml
or
cmc
pop
dec
cld
test
shlb
lcall
cmp
jb
xchg
jne
dec
call
add
popa
popf
dec
inc
repnz
ja
call
sub
or
dec
sbb
xchg
xchg
es
int
push
inc
ret
mov
push
xorb
fdivrp
push
scas
jg
inc
fs
push
movsb
xlat
push
push
aam
pop
gs
ret
cmp
mov
pop
sbb
pop
pushf
inc
adc
pushf
or
fs
or
add
or
ljmp
or
outsb
cmpsl
gs
or
mov
pminsw
shll
jmp
cmp
sbb
pop
aas
jmp
mov
mull
test
or
dec
fbstp
scas
push
cwtl
cmp
mov
xor
outsb
mov
adc
sar
test
and
loope
inc
movsl
jbe
pusha
icebp
rcl
aas
lcall
mov
xchg
ds
pop
jno
shl
adc
dec
xor
push
cli
pop
enter
enter
je
add
push
sbb
call
js,pt
mov
push
or
inc
push
dec
jle
test
vcvtpd2psx
lock
mov
mov
int3
scas
and
fwait
scas
jae
adc
dec
add
push
lds
into
sbb
call
ret
movsb
xor
scas
test
pusha
fidivrs
cmp
jo
mov
or
jecxz
mov
into
cs
rorl
ret
sbb
aad
push
out
iret
or
xor
cwtl
cmp
data16
aad
ffree
mov
lods
in
cmpb
fs
lret
scas
or
push
test
jle
dec
sub
cs
pushf
leave
outsb
dec
clc
lret
nop
fdivl
push
js
push
je
mov
sub
inc
push
sbb
xchg
sub
in
pusha
mov
ds
inc
movsb
sbb
mov
outsb
sbb
cli
aas
mov
mov
jae
divps
das
cmpb
mov
add
pusha
push
or
jle
hlt
pop
ljmp
xor
jp
jecxz
xor
mulb
shlb
mov
outsl
or
xor
pop
jnp
popa
loopne
test
idiv
jl
cmp
jg
push
pop
mov
pushl
out
cmpsl
mov
xchg
fimull
dec
xor
fwait
mov
jmp
xorl
fiadds
cli
shll
imul
mov
and
popf
mov
xor
sahf
inc
xor
divl
cmp
fcmovbe
fsts
pop
lods
xchg
cmp
jecxz
fistpl
and
ficoms
lods
mov
lods
jae
cmpsb
hlt
sbb
fisttps
jp
xchg
pushf
data16
sbb
cmpsl
out
aam
test
shl
fsubrs
xchg
call
es
adc
cltd
and
arpl
jae
repz
sarb
sahf
out
stos
stc
jns
fs
popa
pop
pop
insb
sbbl
aas
lock
test
test
stc
mov
xchg
leave
addr16
fcomip
and
aaa
xor
mov
xchg
jle
cmpsl
adc
popa
pop
push
dec
fmul
sbb
or
test
push
mov
iret
lret
add
add
cmpsb
xchg
fnstcw
mov
mov
jae
inc
or
jle
mov
gs
add
mov
push
inc
orb
xor
es
pop
add
fsubp
fdivrs
lahf
loop
jmp
scas
mov
enter
scas
push
into
data16
dec
sub
mov
jmp
xchg
jo
aas
sub
dec
bound
adc
xchg
shll
mov
xchg
fsubrs
imul
xchg
xor
cmpsl
ds
in
sub
cmp
mov
stos
sahf
inc
fidivrs
xchg
out
repnz
les
loopne
test
adc
xchg
fcmovnb
fs
xor
cli
shrl
stc
or
and
xchg
pop
andb
lcall
mov
sbb
nop
fnstcw
mov
xor
aad
shr
sub
adc
repz
stc
mov
add
mov
outsb
or
pushf
add
ds
leave
js
mov
and
loope
jg
add
add
sarb
add
incb
and
push
adc
rol
shrl
dec
mov
push
cmp
sub
mov
rclb
ja
jle
jae
pusha
ja
mov
jecxz
ret
incl
iret
dec
dec
outsl
shl
in
in
mov
adcb
idivb
jecxz
out
pop
outsb
inc
pop
inc
xchg
pop
stc
daa
bound
dec
jmp
cmp
scas
call
jbe
push
scas
sbb
in
lret
inc
sub
insb
int
and
pop
pop
jmp
jl
jnp
sbb
lahf
jmp
out
lret
je
jp
std
in
cmpsl
dec
sbb
inc
cld
add
call
adc
test
shrl
xor
data16
dec
mov
xor
lds
mov
push
sbb
add
test
or
cmp
movsl
mov
inc
jae
jbe
push
shr
adc
jl
jne
push
inc
adc
push
cwtl
adc
movsl
dec
sbb
daa
mov
ud2
cmc
sbb
push
dec
gs
pop
add
ljmp
enter
out
pop
in
test
dec
cs
cmp
adc
pop
psrld
and
push
xchg
pop
stc
cmp
fs
pop
mov
xor
and
stc
addr16
push
or
inc
jecxz
rcrl
jo
sbb
push
aad
test
leave
fimuls
fldcw
fs
jbe
das
cmp
and
arpl
or
rcl
mov
xor
scas
xor
push
aad
cmp
inc
sarl
cwtl
int
mov
inc
dec
add
xchg
or
jecxz
and
mov
dec
push
xchg
insl
pushl
push
xor
outsl
cmpsl
iret
loopne
jmp
mov
mov
fisubrs
mov
adc
imul
test
adc
mov
inc
pop
xor
iret
mov
mov
cmpb
subl
or
lret
aad
push
cmp
or
das
aam
push
cltd
les
cmpsb
jb
xor
sub
lds
movq
std
sarl
xor
cwtl
xor
lock
or
lahf
adc
jnp
out
mov
fcoms
loopne
and
cmp
js
in
clc
pusha
mov
fldenv
push
push
jge
jno
fimuls
not
aaa
sub
stos
leave
jo
outsb
dec
stos
xor
pop
js
insl
cli
lcall
std
mov
cmp
xchg
lds
pop
mov
jmp
mov
push
xor
xor
jbe
or
sbb
pusha
pop
sti
jp
les
into
mov
sub
add
inc
imul
and
cli
mov
out
loop
add
lea
inc
pop
sub
dec
mov
test
xchg
pop
cmpsb
cmp
adc
pop
inc
dec
mov
inc
ret
mov
imul
test
push
jp
hlt
jg
incb
inc
dec
sub
ss
leave
iret
push
aaa
out
cmp
xor
cmp
xchg
fs
scas
xlat
dec
inc
push
and
sbb
xchg
rolb
aaa
in
and
ret
pop
mov
sbb
mov
mov
dec
ss
adc
jae
push
out
lods
xlat
imul
push
pop
data16
repz
ret
jmp
jbe
cmpsl
stos
push
loopne
add
stos
shrb
adc
jg
mov
leave
loopne
inc
enter
aas
dec
in
xor
or
lret
and
push
dec
cld
xchg
fisubrl
adc
ljmp
cmpsl
aam
shr
dec
adc
pop
outsb
mov
in
add
jae
xlat
pop
movsl
sbb
loop
dec
push
push
push
jg
mov
push
dec
pop
icebp
and
jno
lods
or
jbe
dec
sub
in
aam
sub
jg
push
push
shrb
inc
pushf
mov
mov
pushf
icebp
inc
fdivs
in
cwtl
sub
stos
sub
inc
popa
mov
pop
push
test
sbbl
push
mov
sub
stos
ficoms
and
xor
arpl
and
and
sti
in
into
pop
data16
mov
xor
dec
dec
sub
popf
cmp
rcrb
lret
and
push
lods
sahf
sub
leave
add
fstps
cwtl
cmpsb
test
repz
sbbl
mov
inc
inc
push
ret
mov
sbb
push
xchg
out
adc
cmpsb
or
mov
xchg
xchg
sbb
daa
lds
cwtl
cmc
nop
mov
xor
repnz
xor
lea
lock
aad
pop
pop
mov
and
fs
xchg
sbb
add
sbb
or
bound
jge
sub
dec
mov
shrb
cmp
outsb
cmp
daa
jg
add
inc
popa
dec
cs
inc
fs
ds
pop
mov
mov
push
mov
inc
push
cwtl
jge
add
repnz
mov
add
push
push
inc
mov
inc
jmp
mov
cmp
add
jnp
cmpb
testb
cmp
jbe
cmp
fcompl
and
xchg
sbb
sbb
jle
idivl
xchg
xchg
sti
gs
rep
repnz
adcb
lret
xor
cmpsb
cmp
test
jp
sbb
sbb
mov
iret
xchg
xchg
ffreep
dec
mov
jge
dec
int
inc
fwait
fsubs
dec
jno
pop
add
dec
cmp
xor
stos
mov
push
jb
fwait
cmp
inc
mov
dec
pushf
jg
inc
dec
pop
add
into
pushf
in
pop
cmpsb
outsl
imul
fstl
inc
cwtl
and
aas
cmpsb
loop
xor
adc
xchg
shll
and
arpl
mov
stc
jmp
pop
mov
repnz
cwtl
dec
jo
outsb
ret
cmp
add
aaa
xor
rorb
mov
aaa
fistps
adc
jo
lret
sar
int3
adc
sti
fldcw
sbb
mov
lock
lret
fnsave
mov
stos
mov
es
jns
cwtl
js
sbb
xor
fisubrs
sbb
shl
inc
bound
ds
jmp
jmp
cmp
enter
lcall
or
jbe
jle
jne
lock
cs
pusha
in
xchg
push
lds
ficompl
cltd
fwait
or
add
rclb
bound
scas
push
cmc
push
gs
test
negl
and
insb
or
add
imul
scas
dec
add
sub
sti
pop
or
incl
cmp
inc
sub
mov
xchg
mov
fcmovne
pop
mov
push
mov
ljmp
inc
loopne
xchg
pop
mov
push
adc
xchg
or
fisttps
sub
push
ficoms
push
mov
pusha
mov
outsb
mov
mov
loopne
lods
xchg
rcr
adc
mov
mov
sub
mov
imul
xchg
adc
mov
daa
mov
insl
adc
push
mov
push
sbb
scas
push
imul
ret
sub
inc
pop
loopne
jns
pop
sarl
or
push
test
xchg
push
lock
push
gs
inc
dec
js
dec
bound
lahf
enter
into
add
jmp
xchg
xchg
dec
ja
push
mov
icebp
data16
mov
sbb
inc
leave
out
push
jg
lods
sub
cmpsl
jno
dec
lods
xor
and
cmp
scas
lret
cmp
cmpxchg
je
pop
negl
or
or
call
repnz
cmp
jle
enterw
sbb
or
decl
addr16
push
sahf
push
xchg
add
bound
jp
gs
dec
inc
inc
loope
loopne
js
xchg
fwait
add
movsl
ud0
jne
fdivrl
push
and
xchg
add
or
pushl
pop
lods
sbb
sub
mov
push
jmp
int
ljmp
jg
stos
addb
sub
push
fs
pop
imul
test
pop
jmp
mov
popf
pop
adc
mov
imul
sbb
call
adc
jmp
js
or
cmp
inc
push
popa
dec
enter
enter
lret
dec
jns
lret
orb
hlt
xchg
aad
gs
icebp
iret
push
add
lcall
jmp
mov
or
adc
sub
adc
sbb
int3
cmp
or
dec
fsts
mov
test
jb
sahf
pop
incl
inc
pop
push
mov
push
sbb
jbe
adc
push
and
jle
das
pushf
cmpb
rorl
mov
sub
dec
cs
cmp
cltd
mov
sub
sbb
fnstenv
adc
dec
insb
pop
push
ret
xchg
mov
pop
pushf
push
adc
mov
iret
push
mov
sahf
enter
cmp
repz
aas
and
cmc
cs
push
movsb
pop
in
push
js
or
xchg
cld
pop
outsl
adc
sbb
lods
dec
jp
xchg
mov
fistl
dec
jae
push
or
and
aad
pop
mov
push
jg
or
add
xor
mov
shrl
mulb
mov
pop
jecxz
xchg
pop
cli
jae
out
add
ds
add
xchg
xchg
or
and
pop
jp
mov
shrb
mov
scas
adc
sbb
push
ret
inc
mov
testb
cmp
leave
jl
push
movsb
pop
mov
hlt
xor
in
stos
mov
icebp
dec
push
enter
cltd
add
loop
pop
mov
rep
out
pop
or
mov
xchg
in
lcall
add
and
out
movsb
xchg
data16
mov
rcrb
scas
xlat
pop
push
popa
notb
imul
sbb
sub
dec
rclb
icebp
fldenv
and
jge
adc
je
mov
pop
dec
call
repnz
adc
imul
rorl
inc
cmp
sub
adc
jns
xchg
das
push
jno
inc
dec
popf
and
sub
adc
xchg
add
mov
mov
push
outsl
mov
sbb
cmpsb
ror
in
ljmp
jg
or
rorb
stc
xor
imul
mov
dec
sarb
dec
inc
lock
lods
popa
lret
and
add
cmp
push
xchg
sbb
orl
leave
sub
mov
fdivrl
pop
out
loope
lret
sahf
dec
xor
pop
push
adc
pop
lahf
sbb
mov
std
sub
test
into
jl
jno
adc
iret
jbe
scas
ss
movsl
lea
mov
mov
sbb
mulb
je
push
pop
lods
mov
sub
lret
sbb
aad
pop
sarb
sbb
cmc
jb
pop
aaa
or
scas
enter
xchg
lahf
mov
xchg
imul
shlb
or
mov
mov
inc
mov
mov
mov
ja
cmpsl
dec
shl
mov
clc
push
daa
shll
addr16
sbb
jne
std
xor
xchg
sub
daa
xchg
adc
ucomiss
nop
punpckhbw
pushl
int
fisubrl
leave
test
push
jg
mov
pop
mov
inc
xchg
in
dec
push
xor
sub
or
sbb
scas
mov
mov
add
lea
mov
inc
mov
loopne
xchg
mov
shr
push
add
rcrl
testb
or
xchg
or
and
push
in
lcall
aad
push
outsl
or
mov
mov
or
aam
pop
pop
pop
fsubrs
xchg
sbb
inc
outsb
lock
sarl
sbb
cltd
pop
mov
or
psubusb
daa
aaa
inc
hlt
push
orb
cli
testl
loope
pop
or
test
cmp
jnp
rolb
test
push
mov
in
xlat
rorl
ja
adc
pop
sti
pop
xchg
cli
enter
add
sti
mov
pop
fsubrl
adc
cmp
pop
xchg
es
sbb
test
int3
lcall
fisubl
push
mov
xlat
jno
ds
pop
dec
cwtl
sub
jo
mov
and
jne,pn
andl
xor
ds
cmp
jp
and
in
xchg
pushf
clc
lods
fsincos
xor
pusha
cmp
andl
outsl
push
mov
je
test
fld
fmull
rcr
xchg
mov
fildl
push
push
xchg
sub
loopnew
mov
and
pop
mov
dec
add
jb
inc
add
andl
mov
aas
in
idiv
adc
test
imul
mov
notb
outsb
push
or
ficoms
popa
push
cmp
cmpsb
xchg
imul
cmp
addr16
in
xchg
out
cmc
sbb
test
imul
shll
push
les
sbb
push
or
pop
scas
mov
xchg
test
dec
add
cmp
xchg
stc
out
shll
popa
mov
outsb
and
movsl
inc
push
popa
pop
cmp
cs
cwtl
cmp
aam
or
and
subb
or
clc
insb
push
shr
sbb
test
ret
sub
pop
and
cld
shl
cwtl
insl
xor
cmpsl
movsb
push
stos
fcmovb
cmpsb
mov
push
jb
out
mov
inc
loopne
mov
sbb
pop
xchg
push
sar
std
inc
dec
inc
sar
mov
mov
in
or
test
adc
outsb
repz
jp
dec
push
movsl
ds
dec
jnp
sbb
js
subb
push
mov
stos
inc
cmpb
pop
cmp
scas
ret
and
out
and
dec
std
int3
stos
int
mov
repnz
inc
cmc
out
jle
sahf
test
loop
mov
xor
xchg
test
fstpl
jmp
loope
push
xor
data16
nop
xchg
loope
push
and
mov
sub
sti
fcoms
xchg
xlat
cmpl
jle
pop
adc
fs
fsubp
aaa
push
in
jge
sub
sarb
jno
call
inc
aam
jbe
cld
inc
xor
nop
and
in
sahf
add
cmc
and
adc
adc
fwait
xchg
rcrl
popa
popa
dec
add
test
sahf
mov
negl
rcrb
sti
jne
cmpsl
test
ljmp
inc
sbb
cmc
mov
jno
mov
out
add
jl
adc
sub
lret
popa
adcl
sarb
in
gs
int3
sub
mov
sbbb
int3
out
mov
jne
std
adc
inc
push
cmp
das
pop
ret
push
mov
jb
add
cld
cltd
jecxz
cli
int3
cs
scas
mov
pop
scas
es
inc
adc
in
sub
shrl
pop
psubb
mov
in
hlt
addr16
in
cmpsl
popf
imul
fsubl
sub
fst
xchg
lock
lods
cs
sub
bound
xchg
movsl
and
stos
add
and
mov
sbb
mov
xlat
mov
insb
mov
push
loopne
sbb
bndstx
ljmp
aaa
or
jnp
sub
aas
lret
add
adc
cwtl
data16
push
xchg
xlat
sub
mov
aaa
movl
or
xchg
lahf
mov
mov
shr
pop
and
nop
jae
cmp
xor
push
test
daa
out
adc
ret
xchg
jmp
call
and
sbb
xor
popf
aas
jbe
pop
jno
outsb
push
xor
mov
cmp
cli
inc
je
lcall
cli
aam
jae
xchg
dec
rorl
aas
push
dec
les
xchg
sub
ja
mov
out
jl
sub
adc
jae
push
jne
ds
sbb
mov
pop
inc
mov
or
xor
loop
loope
mov
test
sub
pushf
loop
push
ja
push
jae
cltd
popf
dec
cmp
in
les
mov
mov
dec
cltd
inc
cmp
ss
or
sbb
dec
addb
cmp
mov
das
iret
out
ret
xchg
and
sbb
outsb
sbb
mov
xor
loop
lods
fldenv
push
xchg
test
push
pop
imul
pop
out
xchg
icebp
add
outsb
xchg
daa
imul
in
sub
dec
enter
adc
lahf
mov
gs
mov
daa
push
das
inc
inc
lds
pop
pop
aaa
ficoms
fwait
imul
mov
dec
leave
jo
nop
xchg
add
pushl
fldl
lahf
push
fsubrs
dec
pop
cmp
jo
and
lret
pop
test
or
push
sbb
push
mov
dec
test
xor
inc
int3
xlat
sahf
pop
mov
nop
and
adc
mov
stos
daa
cld
adc
xor
mov
rorl
cmp
inc
mov
roll
adc
jb
inc
push
les
dec
xor
fcmovne
xchg
ss
adc
xchg
loop
xchg
andb
negb
jge
pop
test
inc
or
loopne
mov
xlat
scas
outsb
jae
cmp
add
add
and
and
lret
out
xchg
mov
arpl
jns
jnp
je
jno
jmp
mov
push
pop
sbb
or
jg
es
cmp
jmp
pop
orb
push
xor
js
rol
scas
arpl
adc
pop
std
xor
lea
or
les
inc
cld
int
adc
jecxz
scas
inc
shr
cld
int3
cmp
cmp
outsb
cmpsl
leave
xchg
push
add
mov
cmp
cmc
cmpsb
push
mov
lock
xchg
fldcw
cmpb
test
sub
cli
popf
shr
dec
and
stc
and
sahf
sub
cmc
or
shll
inc
insb
mov
pop
jne
sbb
fsubrl
aad
js
dec
ljmp
jmp
sub
xchg
ja
sub
in
ret
pushf
cmp
int3
loopne
fwait
dec
in
push
mov
imul
lret
mov
push
int3
inc
jmp
ret
orb
enter
jge
mov
jae
in
fcoms
sbb
mov
jmp
sub
adc
outsl
les
lock
xchg
jl
inc
fisttpl
xor
mov
push
test
aaa
sti
imul
ljmp
inc
rcrb
pop
or
mov
stos
loopne
test
inc
mov
in
pop
push
sbb
adc
xor
jns
jg
mov
les
mov
leave
das
xor
push
inc
fisttps
jg
inc
imul
aad
ret
lods
mull
dec
cltd
inc
adc
insl
loop
pop
mov
push
cltd
pop
lret
lcall
mov
aaa
jne
dec
outsl
arpl
fistl
call
cs
insb
cmp
or
xchg
sub
push
xor
add
and
push
xchg
imul
mov
mov
jmp
cld
sbb
adc
leave
imul
lods
cpuid
popf
adc
sbb
ljmp
test
das
inc
add
sti
lret
fidivrl
mov
stos
test
adcb
fmull
fdivrl
in
loop
lret
aad
add
das
pop
scas
dec
fiaddl
test
push
cmpsb
arpl
out
mov
sbb
aam
add
cmp
add
pop
out
xchg
xor
leave
pop
aaa
stos
and
sub
dec
sahf
lret
loop
jp
into
ret
fadd
pop
push
inc
pop
inc
std
dec
cmp
xor
and
mov
lret
jae
jp
roll
mov
jl
imul
mov
imul
push
mov
daa
xor
push
cmpsw
adc
nop
daa
int3
gs
add
or
add
push
mull
popf
cmpsb
outsb
xor
jnp
jns,pt
fildl
dec
mov
jbe
xchg
inc
leave
cmpsb
dec
dec
insb
inc
push
clc
gs
push
idivl
cmp
push
adc
mov
fdivl
dec
mov
add
ljmp
or
xlat
fdivp
lods
pop
lahf
stos
jmp
fmul
arpl
add
inc
lock
int3
ret
gs
and
ds
jo
jl
adc
std
int
jg
outsl
adc
jno
aam
sbb
xor
mov
outsb
popa
cli
jp
xor
push
mov
sbb
repz
fdiv
push
stc
add
aam
adc
imul
mov
out
xchg
fadds
mov
sbb
outsb
and
outsl
cmpsb
sbb
cld
jo
fmull
ret
outsl
mov
inc
popf
mov
int
push
and
push
outsb
dec
xchg
andl
outsl
movsl
pop
enter
fwait
jge
popf
mov
adc
ja
mov
mov
aaa
addr16
leave
jo
out
loopne
xchg
icebp
xchg
stc
sti
fimuls
add
sub
mov
in
cmc
pop
cmp
lahf
int3
fisttps
push
xchg
mov
popf
xor
jns
ja
aam
inc
clc
push
push
jp
cwtl
ljmp
cltd
dec
ss
in
add
xor
repz
bound
mov
jnp
test
add
iret
lods
fwait
pop
movsl
dec
addl
xchg
mov
sbb
insb
fcomps
cmp
sbb
xor
cmpsl
into
or
jp
adc
cmpsb
sbb
fcomp
pop
icebp
pushf
in
lea
fiaddl
or
mov
movsb
jecxz
fisttpll
mov
nop
ret
sub
cmp
pop
jp
aas
mov
push
frstor
sbb
test
cmp
js
cmp
xor
inc
aad
inc
sub
outsb
in
xchg
aad
dec
mov
push
mov
adc
pop
jl
push
mov
nop
loopne
pushf
cmp
dec
lret
je
dec
push
pop
mov
sbb
push
xchg
ss
push
add
stos
jae
or
and
rcr
imul
iret
imul
out
scas
xchg
adc
loope
jmp
add
je
pop
enter
mov
add
maskmovq
cmp
addr16
push
push
inc
xor
xchg
cmp
loop
movsl
imul
aaa
dec
pop
repz
fimull
loope
jecxz
call
lea
rcl
mov
sbb
sub
mov
out
stos
mov
sti
pushl
mov
cld
pop
popa
subl
lea
enter
outsb
push
sbb
sub
add
outsl
push
subl
lahf
cmpb
aas
lcall
add
inc
dec
xchg
add
sahf
nop
jnp
subb
push
sbb
jle
cs
pop
imul
ds
in
xchg
bound
lods
xor
arpl
aaa
test
mov
pop
mov
push
adc
mov
fst
aam
bound
mov
std
clc
outsb
xchg
aad
sub
mov
push
xchg
rcrb
mov
in
lods
inc
lea
dec
aam
and
in
cld
dec
or
add
add
shll
shrl
pop
and
aas
push
data16
pushl
outsl
punpcklwd
pop
and
and
mov
and
divb
scas
in
ds
xchg
dec
movsb
js
stos
cmp
xlat
imul
sub
loopne
mov
pusha
pop
inc
subl
lahf
push
jp
loope
and
rolb
inc
cs
ret
or
leave
lahf
cld
sbb
mov
int3
or
negl
cld
jbe
cs
mov
adc
or
loopne
out
and
pop
ret
test
cld
movsl
les
in
sbb
inc
movsl
cmp
test
adc
cmpsl
mov
sub
mov
mov
cmc
mov
in
ret
in
jle
stos
push
loopne
add
movsb
pop
mov
movsl
fadd
dec
add
insl
sub
sbb
mov
out
fs
jb
mov
out
mov
mov
lret
out
loop
scas
stc
stos
cmp
jb
scas
cmp
in
pop
mov
in
mov
fisttpll
xchg
ret
jnp
add
mov
add
and
iret
insl
xor
and
cmpsl
jle
add
popa
sarl
and
sub
repz
lock
push
pop
mov
and
dec
out
gs
in
dec
addr16
mov
test
pop
ljmp
mov
sbb
js
sub
inc
out
push
sbbl
ja
imul
cwtl
ljmp
clc
push
in
fucomi
sub
sub
scas
out
sbb
in
lds
or
aas
or
cmpsl
cmpsl
jl
mov
inc
inc
in
cmp
cli
test
fcmovu
dec
cli
mov
xor
inc
testb
jns
inc
fstpl
xchg
cmc
xchg
xor
lods
sbb
stos
movsb
test
lods
in
pushf
dec
mov
addb
xchg
dec
lods
int3
fsubrs
cmovne
mov
jb
or
scas
sbb
xor
sahf
bound
sub
sbb
adc
push
or
pop
mov
repz
jbe
fsts
xchg
in
pop
xchg
xchg
dec
loope
hlt
push
sbb
mov
aaa
pop
xor
dec
xor
adc
xor
cmp
xlat
fdiv
addr16
sarb
scas
push
icebp
jmp
insl
mov
sub
into
jle
clc
push
icebp
jg
pop
mov
nop
xchg
pop
cmpsl
push
hlt
leave
dec
out
rcrb
ljmp
pop
pusha
pop
ljmp
sub
out
cmpsb
shrb
xor
dec
mov
jmp
js
pop
cltd
pop
lret
sbb
insb
out
jl
jnp
add
xor
cmp
imul
loopne
fmuls
lret
cmp
ds
or
push
xor
out
mov
mov
jg
ror
push
roll
adc
sbb
xchg
in
xchg
out
enter
or
mov
movaps
scas
daa
jecxz
test
scas
cltd
inc
out
movsl
sbb
leave
roll
adc
js
enter
lods
aam
push
jno
mov
mov
loope
sbb
outsl
pop
arpl
in
insl
repnz
pop
cmp
or
push
icebp
mov
mov
movsl
pop
fs
ds
data16
ljmp
mov
mov
orb
jnp
and
mov
loopne
xor
xor
jp
add
dec
es
sbb
lods
aas
ror
mov
inc
in
mov
mov
movsb
bound
test
push
inc
cmc
es
xor
nop
jae
jb
ljmp
xor
pop
jle
movsb
sub
mov
push
sbb
pop
cmp
cmpsb
in
movsl
add
xchg
fisttpll
mov
push
pusha
pop
sub
add
xchg
push
sub
stos
sub
pop
insb
push
dec
mov
in
scas
repnz
pop
out
dec
sahf
add
nop
cmp
jl
sbb
loope
xor
xor
mov
or
out
jnp
outsl
adc
je
pop
xor
loope
add
cltd
add
sar
inc
paddb
add
mov
cltd
dec
cmpsl
mov
addb
pop
adc
sbb
ret
push
scas
mov
dec
dec
add
repz
adc
outsb
aam
arpl
std
cltd
aaa
xlat
xlat
jle
sbb
and
into
sti
sub
lret
fildl
in
insl
or
test
push
push
xchg
movsb
mov
fwait
adc
xchg
or
fcmovbe
es
mov
scas
aaa
gs
aaa
ljmp
xlat
clc
pop
repnz
xchg
inc
jmp
outsl
aaa
aad
pop
inc
aaa
push
into
lahf
mov
sbb
repz
push
out
sbb
push
jg
nop
packssdw
pop
mov
xchg
lret
sub
test
scas
jo
mov
shrl
inc
mov
xchg
mov
or
inc
fstl
aas
test
mov
in
lret
insl
dec
push
mov
add
mov
mov
das
cmp
popa
mov
sbb
hlt
add
inc
pop
rorl
xchg
xchg
mov
and
mov
ror
arpl
mov
push
aad
dec
roll
adc
dec
mov
pop
and
mov
cmp
inc
cmpsl
xor
push
cmc
aad
repnz
scas
ljmp
push
cwtl
cmp
cmpsb
adc
cwtl
movsl
mov
cli
jo
test
or
and
and
sbb
mov
ja
cmp
lea
mov
jg
mov
add
mov
test
ss
and
add
lods
mov
cltd
aad
adc
add
cmpsb
inc
pop
aam
int
je
scas
dec
out
mov
or
and
std
inc
sbb
cmp
out
adc
sub
repz
fimuls
aas
ja
inc
fsts
jne
mov
inc
add
xor
nop
mov
leave
mov
inc
shrl
xchg
out
push
jbe
pop
jbe
je
insl
sbb
jbe
out
dec
push
push
pop
xchg
jae
out
pop
imul
test
aas
sbb
mov
icebp
popa
pop
and
fidivrs
xchg
ret
fldenv
and
pop
movsb
out
in
push
orl
roll
in
repz
adc
jge
mov
sbb
dec
cmp
sub
xor
inc
adc
js
inc
xchg
dec
hlt
fbstp
cmp
fisubl
push
xor
push
cmp
xchg
xor
and
sti
or
arpl
mov
cmp
ljmp
and
loope
xchg
pop
mov
cmpsl
jae
and
xchg
sbb
mov
xchg
mov
popf
sub
sbb
rclb
daa
dec
test
stos
fucomip
xchg
xor
loope
pop
sub
inc
mov
out
and
push
lcall
jmp
lahf
and
mov
cmp
into
je
push
pop
xchg
push
mov
enter
jae
jbe
or
fisubs
ja
rolb
shrl
or
jno
pop
je
pop
icebp
push
out
stos
inc
cli
mov
in
mov
sub
xor
jg
and
fildl
inc
dec
cwtl
push
rorb
sub
fisubl
and
in
xchg
loope
mov
jbe
sbb
fcmovne
aad
push
rclb
pop
mov
xor
cs
push
pop
sbb
hlt
pushf
adcl
cmpsb
popa
pop
or
dec
lea
fucomi
pop
xchg
jle
xchg
cmp
movsb
xchg
imulb
push
mov
or
fcomps
cs
out
addr16
loope
popf
ret
imul
adc
xchg
movsl
lods
sbb
jp
insl
movsl
leave
mov
stos
ds
ror
repnz
inc
shr
jne
test
imul
cmp
mov
sbb
add
jecxz
sub
std
mov
jle
les
sub
ret
dec
fs
xchg
je
or
or
pop
mov
adc
and
outsb
inc
sbb
popf
pop
cmc
es
cwtl
push
jmp
scas
pushf
insb
popa
je
mov
pop
cmpl
dec
mov
fs
jno
data16
inc
sub
les
lds
mov
jno
cs
xor
jno
xchg
test
pop
ret
fildll
xchg
insb
mov
fidivrl
push
ja
cmp
mov
mov
subps
insl
enter
and
imul
test
cwtl
iret
and
dec
rorl
cli
cmp
aaa
jnp
or
sbb
add
iret
mov
mov
out
inc
jg
call
jl
call
sub
xorl
jg
dec
fisubrl
aas
mov
jl
clc
pop
mov
jge
cs
imul
jae
mov
mov
outsb
mov
cmp
mov
int3
xchg
mov
jmp
in
mov
jne
mov
ds
mov
and
ja
pop
jle
inc
mov
imul
dec
push
inc
xlat
fidivs
addr16
aad
int3
cmp
sub
jl
leave
int3
jge
xorl
into
enter
test
sbb
scas
loop
lret
jecxz
or
cmp
out
in
data16
inc
rolb
fsubs
inc
dec
jno
fidivrs
or
cmpsl
sub
std
adc
jp
es
fwait
xchg
iret
out
into
jbe
testb
scas
mov
scas
push
inc
cli
clc
ret
sbb
pop
out
mov
push
aaa
pop
and
or
xor
add
cmpsl
iret
mov
pop
lret
mov
shlb
mov
add
push
sbb
clc
xchg
cmc
mov
aas
pop
push
pop
jno
outsb
dec
sub
dec
and
pusha
dec
sbb
fcmovbe
adc
es
mov
adc
icebp
xor
sub
sbb
ss
mov
cld
jnp
hlt
call
stos
lahf
mov
cltd
push
iret
aas
push
fadds
daa
cmpsb
test
sub
sub
loope
cs
push
mov
cmpsb
fdivrl
inc
popf
inc
mov
cmp
pop
sub
sbb
push
pop
add
daa
std
xorl
shr
jp
cmp
xchg
mov
lds
enter
or
inc
xor
xchg
add
xchg
sbb
daa
repnz
aad
sbb
pop
inc
pop
mov
dec
jnp
je
inc
imul
sub
jg
fs
xchg
imul
addb
adc
aaa
and
jg
sbb
and
out
push
test
add
outsb
hlt
jae
xchg
clc
mov
loopne
frstor
xchg
mov
xchg
daa
xor
push
pop
sbb
push
aas
pop
int3
adc
gs
aam
mov
pop
out
leave
or
sbb
ret
xchg
loopne
ljmp
fdivrs
fsts
cmpsl
cli
mov
sub
rorb
dec
imul
adc
in
add
add
push
xchg
ja
cmpsl
adc
and
push
add
sub
pushf
xor
add
xchg
lock
jle
in
test
test
pop
clc
call
mov
mov
pop
push
ret
inc
lods
test
popf
xor
dec
mov
mov
adc
test
mov
mov
mov
jbe
pushf
loope
jmp
test
mov
into
iret
sti
mov
mov
and
push
stos
dec
mov
movsl
dec
in
push
icebp
ja
pusha
or
iret
mov
xchg
sahf
cmpsb
ficompl
dec
pop
push
and
icebp
stos
mov
bound
lea
std
popf
ja
adc
test
loopne
adc
mov
mov
pop
in
ss
adc
ja
stc
xor
mov
adc
or
cmp
lahf
lahf
inc
mov
add
jne
sbbb
lods
xchg
xor
fwait
shlb
in
pop
dec
mov
jl
cmp
mov
xor
shld
dec
sbb
lea
pop
inc
nop
mov
imul
pushf
push
insl
out
adc
push
jg
sub
pop
pop
adc
cmpb
pop
dec
mov
adc
inc
jae
adc
addr16
lods
xor
push
or
pop
outsb
bound
xor
jmp
popf
sbb
test
xchg
and
dec
fs
jnp
push
and
ljmp
push
out
cltd
lods
pop
cmp
and
xchg
adc
aam
addr16
pop
cmc
sahf
pusha
lret
pop
add
outsl
mov
xchg
in
sbb
push
mov
aam
add
nop
sub
pop
movsl
adc
lea
cs
frstor
push
loop
test
cmpsb
fucomi
push
adc
in
add
testb
jb
adc
mov
cli
pop
jp
test
push
adc
and
sarb
mov
sub
jp
cmc
stos
cmpsl
into
fnsave
push
sub
sbb
scas
cmp
sbb
fscale
cmp
sahf
ljmp
idivl
and
jmp
cmpsl
mov
subb
std
out
pushf
hlt
jecxz
sub
fldl
push
scas
daa
pop
ds
inc
jno
xchg
sub
xchg
negl
jo
xchg
mov
xchg
push
sarb
adcl
pop
fisttps
fmul
or
shll
dec
cmp
sbbl
xchg
and
pop
dec
repnz
mov
out
sahf
leave
icebp
add
addb
xchg
sbb
sub
mov
push
xor
push
lret
fs
outsl
sub
clc
xor
fnstenv
or
shl
int
sbb
cltd
fcomps
sbb
out
insl
xor
jne
cmpsl
sbb
aad
fidivrl
pop
lds
sbb
test
jmp
in
mov
push
mov
or
cmp
add
dec
xchg
aam
inc
pop
xor
dec
fldcw
test
scas
incb
xor
adc
inc
jbe
xchg
in
imul
push
jmp
dec
arpl
adc
mov
mov
das
dec
dec
pop
sbb
in
dec
fsubrp
call
out
rorb
sar
and
mov
mov
inc
mov
shrb
push
fwait
pop
or
cwtl
mov
pop
sbb
iret
pop
andl
push
enter
pop
or
lock
or
cmp
or
mov
sub
xor
pop
mov
sub
out
adc
cli
and
push
xor
dec
fcomps
add
dec
stc
fiadds
jge
and
lock
scas
scas
sti
jo
mov
add
and
add
jne
insb
enter
xchg
mov
fmuls
mov
xchg
stc
loope
or
push
xchg
shrl
mov
xchg
mov
sbb
add
cli
inc
hlt
cmc
in
mov
jmp
mov
lods
mov
rorb
pop
and
pop
mov
xor
mov
mov
cmpsl
out
lcall
sub
les
mov
out
leave
sbb
xor
stos
shl
decl
rcrb
mov
adc
leave
dec
fadds
dec
mov
inc
ss
fwait
mov
inc
push
add
mov
pop
add
enter
adc
or
rorb
adc
les
push
push
subb
and
shlb
in
mov
mov
inc
in
mov
and
lcall
pmuludq
sub
xor
mov
mov
daa
adc
aas
out
cmp
jge
lods
lret
fisubs
inc
adc
cmp
rclb
jge
pop
jo
rorb
add
inc
lods
std
addr16
fwait
push
sub
test
mov
and
imul
cmpb
stos
outsb
cmp
stos
lahf
popf
mov
or
mov
xor
shlb
loope
inc
and
insl
cs
out
push
loop
ljmp
sub
pop
std
sub
cmp
sub
adc
xor
stos
not
not
movsl
aam
aad
dec
xor
or
lahf
shlb
scas
xchg
and
or
ja
adc
mov
ja
repz
jg
bound
sbb
xor
das
or
das
and
jl
cmpsl
cmp
insl
push
popf
jnp
movsb
pop
jbe
pop
mov
cmp
aaa
mov
push
bound
xchg
mov
cltd
in
pop
xor
testl
mov
packsswb
aam
stc
es
aas
mov
inc
dec
inc
lods
pusha
or
sbb
xor
loopne
pop
test
insb
in
icebp
push
jbe
aam
lcall
jne
mov
cmpsb
mov
lahf
xchg
outsl
flds
into
or
xlat
jp
mov
pop
adc
mov
inc
jo
dec
or
add
push
dec
xchg
xor
cmp
lcall
inc
push
aad
leave
mov
arpl
mov
jo
or
inc
ret
inc
push
iret
cmp
mov
inc
sahf
icebp
lret
ret
jb
dec
adc
xor
or
adc
mov
jmp
or
cmpsb
movsl
xor
push
xchg
push
fsubs
adc
mov
inc
mov
cmp
add
push
inc
jp
femms
movsl
mov
stos
dec
sbb
daa
je
test
pusha
fs
push
insw
adc
and
mov
or
mov
push
dec
inc
cmp
sbb
aas
inc
mov
push
add
out
arpl
stos
test
test
repz
pop
ss
sbb
pop
ja
dec
mov
adc
stos
shr
and
mov
fisttpll
stos
mov
jb
fstl
push
sbb
pusha
jecxz
int3
arpl
fistpll
fldl
adc
rcrb
out
adc
lods
out
sbb
mov
arpl
dec
mov
inc
lods
or
addl
jb
pop
mov
push
dec
add
mov
mov
ljmp
das
mov
mov
jg
mov
and
hlt
xchg
cwtl
das
push
sub
fmul
mov
lahf
idivb
mov
pop
jns
scas
pop
sub
add
imul
rorl
sarb
incb
ret
push
inc
outsb
inc
cmp
int3
jl
sub
mov
sbb
pop
dec
cmp
outsl
jl,pn
idivb
scas
imul
sahf
es
dec
mov
and
out
xchg
jo
arpl
and
int3
xchg
mov
mov
shl
idivb
add
xchg
jbe
insl
push
jg
mov
insb
dec
out
sarl
loope
pop
lcall
xor
sub
inc
enter
stos
push
mov
lods
fcompl
dec
mov
icebp
add
sbb
mov
lods
ljmp
scas
cmc
mov
sub
ss
and
xchg
push
fsubp
jb
rcr
out
xor
sbb
vsqrtsd
mov
test
xor
sub
xlat
loopne
rorb
movsl
mov
in
aam
shr
xchg
sub
mov
ljmp
pushf
inc
jbe
push
or
sbbb
adc
cmp
pop
dec
ljmp
sbb
push
lods
sub
inc
outsl
mov
dec
xchg
daa
mov
stos
repz
out
imul
insl
mov
and
loop
sbb
sahf
movsl
seto
jmp
rclb
aad
add
jne
inc
and
mov
push
rorb
insl
adc
pop
sub
jecxz
xor
out
das
inc
and
test
mov
xchg
xorb
jne
sub
adc
lock
sub
scas
cmp
sar
cli
push
lcall
pop
xchg
pop
jnp
inc
or
popf
push
add
stos
call
add
loop
push
inc
mov
ds
fisubl
les
dec
mov
negl
outsl
popa
inc
ljmp
add
imul
test
dec
sub
mov
addl
inc
push
push
ret
jg
sub
les
test
out
pop
test
mov
inc
adc
jno
fwait
jg
xchg
xor
iret
daa
insb
outsb
jle
and
icebp
es
in
ss
or
fucom
push
pop
cmpsl
scas
xor
sahf
mov
push
or
push
jne
sar
or
dec
adc
shll
pop
lahf
adc
scas
data16
xor
inc
mov
test
gs
dec
mov
sub
jb
dec
cli
sbb
sbb
jns
ficompl
push
leave
test
lret
mov
andb
xor
addl
mov
xor
loope
clc
xchg
mov
mov
xchg
mov
mov
adc
xchg
xchg
in
lods
mov
jg
sbb
jne
fists
mov
push
mulb
enter
jno
mov
adc
add
cmpsl
xchg
jg
jns
push
inc
pop
imul
xchg
out
shl
mov
mov
jmp
call
arpl
insb
fs
cmp
mov
cmp
call
outsl
sub
mov
pop
mov
pop
out
mov
cld
jo
popa
cwtl
push
stos
jge
and
cmp
sti
sub
and
loop
xchg
loop
ss
je
in
repnz
andb
mov
and
cmp
sbb
push
into
lods
sub
icebp
pop
xor
fdivr
test
arpl
pop
dec
lock
lret
jno
rcll
adcb
dec
and
sarl
jo
sub
jp
je
push
mov
int
cld
mov
pushf
xor
repz
cmp
repz
fnstsw
jno
cli
stos
dec
rcrl
je
ljmp
and
pop
pusha
shr
mov
int3
scas
jl
sbb
ja
out
int
sub
pop
jg
adc
xchg
rcll
addr16
xchg
add
mov
xor
adc
push
jnp
fs
cwtl
int3
stc
das
mov
repnz
dec
mov
mov
stc
jg
cmc
jo
scas
mov
dec
fisubl
std
fistpl
jns
adc
outsl
and
dec
or
sub
stos
mov
movsl
sbb
pushf
cltd
adc
xchg
shrl
lock
lods
stos
cs
int
in
push
inc
sbb
pop
movsl
and
xchg
xor
imul
sti
xchg
inc
pop
mov
frstor
roll
pop
sub
or
or
push
fcmovu
jp
and
movsb
jbe
pop
ja
leave
mov
xor
ja
lahf
mov
cmp
push
push
imul
stc
cmpsb
int3
pop
andl
aam
daa
int
scas
mov
insl
insl
mov
fdivrs
insl
les
pop
inc
adc
pop
xchg
sbb
jbe
imul
add
imul
inc
stc
xor
sbb
push
adc
xchg
mov
xchg
fs
add
movsb
push
mov
and
and
popf
and
push
and
mov
movsb
push
nop
std
sbb
into
mov
insb
and
imul
std
mov
mov
mov
push
sbb
dec
mov
dec
stos
dec
int
sbbl
inc
stos
pop
pop
sbb
lds
cli
and
repz
dec
sub
mov
xchg
and
in
adc
and
std
call
fsubs
adc
movsl
pop
lret
fldl
aam
lock
cwtl
xor
mov
sub
dec
hlt
fs
jecxz
pop
aam
sbb
push
mov
jl
pop
push
addb
cmp
or
mov
pop
es
adc
push
jbe
aas
bound
mov
pop
movsl
mov
mov
dec
or
dec
popl
mov
jb
outsb
pop
mov
mov
cltd
push
es
test
ficoml
or
and
mov
fidivl
mov
repz
mov
pop
sub
push
dec
fldcw
outsl
xorb
xor
out
int3
push
cwtl
lds
xchg
jae
ljmp
mov
mov
lods
inc
das
fisubl
sub
or
inc
pop
addr16
aaa
xor
cmpsl
jg
je
outsb
ss
mov
das
adcb
lods
add
pop
mov
outsb
out
fdivs
lods
jl
sbb
int
pop
mov
mov
adc
jo
push
iret
shrl
ficoml
jle
adc
fs
xchg
sbb
lcall
push
add
pop
sahf
push
jecxz
data16
fsubrl
and
and
and
dec
cmp
xchg
push
jecxz
add
ret
pop
add
test
pop
and
fcompl
sbb
cmc
xor
out
and
movl
mull
rcll
loop
mov
cmp
adc
iret
dec
cmpb
add
add
sbb
ret
add
sbb
lret
adc
clc
loopne
stos
mov
arpl
cmp
cmpsl
lcall
iret
cmpsb
push
push
in
out
sbb
lea
int
cmp
sbb
loopne
test
fbld
pop
pop
hlt
xchg
jmp
mov
clc
pop
cltd
mov
rcll
std
scas
mov
dec
xchg
add
aam
in
xor
sub
or
sub
xchg
fmuls
xor
sahf
and
scas
sub
adc
dec
rcrl
mov
clc
shrl
dec
subb
cmp
xorl
push
es
loope
xchg
pop
mov
movsb
mov
test
pusha
xor
fucomp
jno,pt
lods
pop
adc
popa
jae
xlat
sub
sar
in
push
xor
xor
bound
fwait
push
or
xor
fisubrs
or
cltd
ror
push
and
adc
sbb
ds
gs
out
xor
fmull
fimull
push
cld
clc
dec
outsl
inc
pop
push
mov
test
or
je
and
orl
or
push
les
lock
sbb
out
repnz
pop
aaa
push
iret
cld
insl
ljmp
movsl
cmp
shl
and
in
or
push
sub
fidivl
and
into
ljmp
mov
das
fs
xlat
pop
xchg
push
lret
loop
or
in
outsl
dec
loope
or
mov
in
ja
adc
ftst
sbb
aas
loope
fidivl
mov
fimull
sub
mov
mov
mov
xchg
xor
insb
mov
dec
sub
fildll
push
mov
rcr
jmp
les
and
into
xor
add
and
into
loop
xchg
and
push
sub
jo
push
idivl
stos
mov
xor
jo
sub
scas
fs
fdivrs
push
and
pop
dec
fldenv
or
das
xchg
aas
xchg
sbb
mov
add
ret
out
add
push
jne
js
adc
xor
pop
mov
pop
leave
dec
jecxz
and
mov
mov
or
rolb
cmpsb
lahf
fidivrl
shrb
and
fnstcw
out
mov
aad
cmp
sti
push
inc
mov
loope
test
sbb
jmp
cmp
je
pop
xlat
enter
push
loopne
cmp
sbb
dec
sub
test
dec
xchg
jns
mov
inc
adc
xor
sbbl
imul
ljmp
push
push
jl
loopne
mov
xchg
mov
in
in
ffree
call
movsb
and
inc
pop
xor
add
flds
and
std
cmp
and
ja
sub
iret
loop
lret
dec
ss
jle
inc
add
xor
std
and
inc
xchg
test
fcmovne
adc
scas
push
outsb
cli
cmpsl
movl
dec
lock
test
in
push
lds
adc
fwait
cld
sub
push
mov
jb
push
push
js
sbb
es
add
aaa
dec
xor
movl
push
movsb
clc
mov
adcb
imul
adc
pushf
or
addr16
and
dec
call
rcll
mov
rcr
cmp
sbb
or
mov
push
pushl
mov
hlt
jo
xor
in
aas
sub
adc
mov
repnz
xor
icebp
cltd
pop
imul
cmp
mov
nop
mov
cmp
sbbb
std
in
js
sbbb
lret
sbb
lock
cmp
lret
mov
mov
test
add
bound
lcall
mov
repz
fsubs
pop
jne
movsb
addb
ds
outsl
sub
add
add
push
cmc
push
xor
cmp
or
or
fstpl
pop
scas
adc
mov
inc
mov
or
mov
mov
movsl
insl
pop
neg
mov
mov
dec
jns
pop
xor
xor
or
sub
lea
pop
aam
aas
lds
xor
xor
push
and
sti
push
fs
cmp
lcall
cmp
je
jle
sar
dec
lock
jg
mov
pop
push
ss
inc
lock
mov
arpl
movsb
rolb
sahf
mov
sbb
sbb
std
or
das
mov
xchg
aaa
cmpsb
std
test
jmp
pop
inc
xchg
jno
inc
in
dec
sahf
loope
test
sbb
or
sub
mov
pushf
aad
or
hlt
in
clc
test
fbld
jno
gs
xor
mov
and
cs
cmpsb
sub
mov
sbb
insb
mov
cmc
jo
add
mov
adc
mov
pushf
inc
cld
or
cwtl
pushf
repnz
xchg
bound
test
jns
lock
mov
cmpsl
pop
mov
push
cmp
test
clc
clc
push
dec
push
sub
push
and
aam
add
clc
push
loop
mov
sub
inc
and
mov
dec
int3
sub
push
mov
push
stc
xchg
push
dec
xchg
fldenv
js
adc
xor
xor
jecxz
sub
les
adc
out
xor
dec
fsubrp
enter
das
cltd
push
inc
adc
cmp
xor
mov
pop
xchg
dec
mov
mov
xor
push
ds
test
adc
xor
cltd
popa
mov
cmp
popa
xor
push
insl
xchg
fcomps
push
subl
xor
loopne
jo
and
push
mov
shrb
inc
and
dec
inc
fcoms
dec
jnp
sbb
and
lea
fs
jg
jno
out
cmp
mov
mov
mov
xlat
or
mov
adc
divb
repz
pop
loope
push
or
cwtl
loope
fidivl
pop
jmp
mov
push
sub
pop
fidivl
stos
test
xor
in
ja
inc
das
xchg
lock
fsts
adc
lods
in
sub
or
lods
sbb
or
or
loop
ss
das
sub
cmp
ljmp
and
adc
loope
pop
loopne
mov
shll
dec
in
je
repz
insl
push
xchg
cmc
xor
push
ret
rcll
ja
out
add
aaa
xor
cmp
bound
jge
xor
repnz
ss
sti
add
and
movsb
mov
add
mov
xchg
mov
jl
or
fistpll
hlt
inc
dec
cmp
test
sub
pop
cwtl
ret
jle
push
pop
outsb
ljmp
pop
xorb
cld
dec
mov
lret
sbb
push
andb
push
xchg
fistl
jmp
sub
push
out
setne
mov
or
xor
jb
in
data16
lock
mov
nop
sbb
or
fisubrl
push
pop
les
loope
call
mov
scas
mov
lret
sbb
fidivl
fldenv
push
pop
xchg
shr
cmp
sub
lcall
push
into
dec
mov
arpl
xor
je
leave
ret
cli
decl
dec
aaa
mov
push
neg
rcrb
cli
lock
mov
adc
ja
push
popa
jp
js
mov
sbb
jb
outsb
jp
std
and
popa
sahf
data16
stc
daa
sub
cwtl
rorb
mov
sub
sbbb
xor
xlat
mov
xlat
loope
push
xchg
pop
imul
popw
inc
scas
out
xor
add
insb
fsubl
imul
push
test
sub
rcrl
je
push
sub
sti
push
rclb
ja
or
sbb
mov
mov
push
push
repnz
push
cmp
data16
cmp
arpl
add
and
dec
test
inc
push
je
rorl
mov
ucomiss
jl
jecxz
rcrb
mov
push
fists
cmp
mov
inc
notb
rcl
jnp
rcrl
mov
shrb
test
mov
mov
mov
enter
bound
jl
rcr
pop
gs
push
scas
fbstp
ljmp
mov
pusha
sbb
cmc
in
int3
jmp
xchg
out
jne
outsl
pushf
cmc
dec
cli
mov
xchg
mov
pusha
cwtl
addl
add
imul
in
or
int3
mov
js
pop
fldcw
imul
subb
sub
arpl
jns
int3
inc
clc
lea
mov
fs
adc
mov
scas
test
imul
movsb
jnp
xchg
xchg
fnstenv
cli
sbb
mov
iret
fcoml
shll
xor
sbb
addr16
fimull
push
mov
shrb
sub
aaa
mov
mov
pop
push
pusha
add
adc
adc
add
xchg
rol
cli
xchg
test
popf
mov
stos
or
cmp
mov
push
test
xor
push
emms
pop
fucomip
adc
js
mov
lret
scas
enter
fs
xchg
sbb
dec
jnp
movzbl
dec
xchg
mov
aas
dec
insl
lret
mov
scas
aam
ljmp
pop
fdivs
xor
mov
mov
enter
bound
pop
or
xchg
adc
ja
scas
sti
jecxz
pop
sub
imul
sub
ljmp
inc
lds
in
rdtsc
rorl
dec
xchg
sbb
jno
push
xchg
test
push
lcall
mov
imull
or
dec
inc
and
dec
rcr
inc
aaa
jae
inc
repz
cmp
mov
and
mov
loopne
test
add
test
push
imul
cmpsl
movhps
mov
jp
jp
push
lahf
xchg
inc
dec
jl
insb
xor
bound
lock
adc
and
ret
sub
movsb
jmp
aas
fucomip
pop
push
idivb
stc
test
push
fbld
jmp
fisubl
mov
adcb
lock
jb
insl
fs
xor
xchg
cs
and
dec
cmpl
add
dec
pop
imul
imul
movsl
push
decb
mov
sub
jge
adc
push
push
xor
push
cmp
mov
sub
cmp
fwait
inc
ja
push
or
shll
sarb
or
jo
imull
inc
decl
test
mov
popf
sub
out
jb
mov
cmpsl
push
adc
int
orb
sbb
popf
je,pn
mov
mov
das
jge
rcl
stc
xor
ret
popf
outsl
jb
cs
loope
test
xor
pop
pop
ret
loopne
mov
insl
dec
add
iret
inc
in
xor
push
rclb
bound
or
jno
in
cmpsb
aad
inc
push
int3
xor
data16
lods
mov
xchg
repnz
lds
sbb
xchg
aam
jns
int
in
xor
and
cs
cmp
cltd
fucomp
repnz
je
adc
popa
sub
stos
subl
pop
mov
push
push
rcrl
test
jb
sbb
push
push
mov
aaa
in
les
pusha
mov
push
inc
arpl
and
or
mov
mov
outsb
pop
mov
popf
enter
cmc
das
adc
mov
rclb
std
inc
cmp
cmp
adc
jnp
xchg
push
adc
test
add
imul
int3
mov
and
data16
scas
adc
cmp
outsb
lods
pushf
js
cwtl
ss
pop
sub
and
pop
mov
fwait
cmc
xchg
ficompl
enter
xlat
pop
sub
rclb
xchg
adc
jae
sub
shr
imul
outsb
hlt
and
aaa
fadd
add
push
lods
lods
stc
test
int3
dec
add
mov
gs
cli
les
push
ret
mov
hlt
test
jno
mov
adc
pop
lcall
aad
dec
fimull
cmp
aas
insb
and
jne
pop
imul
sub
push
lods
adcb
push
push
loop
sbbb
inc
imul
call
pop
and
dec
sub
ja
cmp
cmp
add
pop
sub
and
sbb
xchg
push
std
jge
xchg
lret
imul
int3
iret
lahf
or
mov
sbb
cmpsb
idiv
fbld
push
scas
inc
ss
push
add
subl
sbbl
sub
xchg
cwtl
les
lahf
leave
aam
fidivrs
dec
xor
xor
xor
lds
loope
inc
jnp
xor
call
adc
push
fs
daa
mov
bound
popf
ret
jae
sub
mov
ret
or
cmpsb
test
mov
jne
subb
xor
xchg
dec
frndint
les
xchg
xor
std
pop
sub
xchg
call
callw
jecxz
js
orb
dec
cmc
mov
pop
push
cmpsl
lcall
or
aaa
push
mov
and
xchg
das
push
fcompl
pop
or
mov
mov
mov
ficompl
and
mov
sub
mov
inc
mov
or
repnz
popf
dec
mov
movsl
js
in
jnp
sub
addl
std
xor
scas
pop
ja
dec
jp
out
ds
cmp
pop
pop
adc
and
push
and
dec
add
add
cli
out
pusha
xlat
mov
add
mov
shlb
mov
cmp
insb
std
mov
sbb
jb
dec
mov
sub
negb
add
mov
jb
xchg
pop
push
mov
pop
mov
pop
dec
movsb
push
je
mov
cmp
ljmp
mov
xor
cwtl
jae
faddl
scas
push
rorb
mov
movsl
mov
push
mov
pop
mov
mov
dec
cld
or
push
dec
enter
fisttpl
pop
push
insb
rcrl
ret
or
xchg
lret
into
enter
mov
push
stos
imul
sbb
ds
cmpsl
push
inc
in
sbb
dec
inc
out
dec
stc
pop
inc
mov
dec
jecxz
imul
inc
fiadds
push
cmpsb
sub
xchg
outsb
sbb
aas
xlat
dec
or
imul
jmp
dec
leave
cmpsb
in
jo
mov
jmp
mov
sub
sub
mov
sub
push
push
aam
xchg
jae
lret
inc
das
pop
mov
es
mov
xchg
repnz
pop
js
dec
lcall
pop
out
lcall
push
xor
or
std
rcrb
iret
lret
mov
in
clc
xchg
lret
xchg
clc
dec
dec
xchg
test
aad
aad
test
ret
jle
fdivs
test
bound
cmp
or
mov
sahf
mov
or
aas
adc
loop
push
mov
mov
push
dec
push
sbb
mov
sbb
stc
inc
outsl
aad
xchg
cmc
inc
pop
in
ficoml
test
xchg
lret
out
xchg
and
or
pop
cmc
dec
fsts
or
shrl
pop
fimuls
sbb
mov
jae
lods
ret
xchg
movsb
fmull
xchg
cmp
xor
out
je
cmp
cli
push
inc
dec
lret
hlt
adc
push
mov
cmp
lods
cmp
sar
xlat
rorb
dec
cli
mov
pop
fs
xchg
scas
mov
jbe
push
cmp
imul
pop
pop
lea
cmpsl
rcl
cmp
add
cmp
jg
hlt
xchg
cli
adc
xor
ret
cltd
sub
mov
sbb
pushf
jp
mov
add
inc
mov
mov
clc
sub
es
aas
mov
mov
mov
fstl
push
mov
jp
add
loop
out
pop
lods
mov
dec
xchg
ljmp
jl
stos
and
or
lret
dec
jg
mov
test
stos
mov
or
stos
mov
pop
jne
mov
or
or
movsl
xor
push
aaa
sbb
jb
pushf
mov
lret
data16
mov
ss
cmpsb
roll
inc
or
and
push
into
shll
push
nop
xor
fisttpl
lods
cmp
cmp
mov
enter
jecxz
cmp
fs
icebp
jle
mov
std
je
repnz
pop
cmp
mov
sbb
popf
mov
pop
negl
and
mov
pop
jo
jecxz
pop
out
pop
push
pop
sbb
ret
pop
cmc
adcl
sti
jnp
dec
mov
jg
adc
push
jg
in
jmp
cmp
push
sbb
mov
enter
sar
es
push
jae
sti
add
pusha
int
adc
and
repnz
pop
adc
dec
mov
xchg
fldcw
cmp
xchg
gs
inc
mov
lods
xchg
or
shll
test
ret
dec
push
push
xchg
dec
push
hlt
cmp
jb
test
fiaddl
shrd
into
push
sbb
lcall
test
sbb
dec
adcl
and
sub
push
loop
imul
cmc
fmulp
outsl
gs
jecxz
adc
out
jle
sub
ja
je
inc
sub
mov
ds
mov
jb
and
in
insb
pop
ja
test
pop
in
stos
and
loope
fsave
xchg
addb
divl
mov
and
divb
bound
cmpsb
dec
data16
jl
hlt
inc
std
loopne
cmp
jle
scas
out
dec
lods
rcrb
jae
sbb
push
lcall
add
jg
inc
sub
sti
mov
imul
cmp
fldt
outsb
push
xorl
jp
pop
bound
xchg
or
das
mov
cmpsl
xchg
jle
mov
outsl
leave
inc
mov
xor
sbb
loop
inc
ret
es
mov
xchg
sub
mov
pop
dec
cwtl
aaa
xor
in
imul
scas
and
mov
mov
sbb
jl
xchg
pop
xorl
jne
jno,pn
mov
and
xlat
pop
nop
into
sbb
add
divl
pushf
and
or
test
mov
pop
arpl
pop
dec
stc
inc
fsubr
stc
mov
sti
orb
cmpsb
push
imul
ret
xchg
mov
jecxz
push
adc
xchg
aad
xchg
xchg
inc
leave
sbb
dec
mov
pop
jge
ret
fcomip
jecxz
insl
test
pop
xor
mov
mov
fistl
fadd
push
int3
push
lahf
out
sbb
inc
ret
push
mov
and
stc
ds
jb
pop
adcb
push
inc
pop
iret
inc
or
dec
push
int3
mov
jle
dec
popl
imul
mov
mov
clc
rolb
xchg
loopne
cmp
inc
xchg
xor
inc
aas
movsl
sbb
xchg
nop
lret
mov
outsb
sbb
add
mov
movsb
cmp
pop
mov
sbb
mov
mov
inc
lahf
cs
jns
xlat
hlt
mov
xchg
jp
sbb
mov
mov
xchg
mov
loope
pusha
stc
pop
cmpsb
int
mov
lret
test
xor
mov
xchg
inc
add
sbb
cs
dec
mov
xchg
add
adc
and
xor
hlt
mov
leave
lahf
hlt
loope
sbb
xor
xor
mov
lods
aam
mov
dec
sbb
jmp
cmp
lret
pop
push
sub
add
imul
pop
jbe
fwait
cwtl
pop
cltd
stos
stos
mov
les
push
stos
adc
mov
sub
cmp
pop
dec
pop
data16
ljmp
push
xchg
xchg
pusha
inc
mov
lret
les
pop
fimuls
pop
or
inc
sub
movsb
int3
mov
sbb
xor
xor
mov
dec
cmp
dec
pop
dec
clc
dec
sub
xchg
mov
stos
cmpsl
jmp
add
pop
xlat
sub
clc
jnp
sub
and
push
test
loopne
jle
daa
sub
stos
out
test
roll
mov
dec
jns
int3
das
insl
or
fistpl
dec
sbb
lock
push
inc
jp
scas
repnz
and
lods
jl
dec
ficoms
fsubs
inc
mov
in
test
shrl
out
roll
in
aad
shlb
jb
cli
in
cltd
cwtl
xor
jbe
into
gs
loopne
cmpsl
cmpsl
inc
divl
dec
jbe
pop
adc
xor
mov
jb
sub
pop
mov
xchg
cmpb
lods
pop
sub
ss
repz
adc
stos
rolb
test
test
push
enter
mov
cmpsl
or
hlt
roll
inc
xor
shl
push
nop
js
popl
das
clc
out
mov
jge
xor
cmc
movsl
movsl
loop
adc
mov
sti
out
rclb
addr16
or
push
fisubrs
mov
pop
shrl
aaa
arpl
sub
xor
pop
sahf
les
add
cmpsl
sub
and
out
xchg
ds
aam
sub
fyl2xp1
dec
outsl
stos
test
inc
es
mov
dec
sbb
jl
fisubrl
into
test
mov
icebp
pop
sub
repz
inc
xlat
xchg
out
dec
std
cmp
cmpsl
rclb
fdivr
pop
mov
pop
and
mov
sbbl
mov
jp
jno
shrb
es
xchg
push
jb
mov
mov
inc
loopne
call
push
roll
mov
out
pop
mov
movlps
outsl
dec
fs
xchg
xor
add
lds
cld
sub
cmp
sbb
cmp
pop
aam
dec
cmpsl
cmp
jbe
mov
scas
insl
fistps
fistps
.byte
adc
mov
nop
add
add
popa
adc
adc
inc
lds
in
jge
dec
adcl
arpl
lods
int
mov
sbb
mov
push
insb
jns
cltd
scas
adc
sub
cmp
cmp
and
dec
insb
mov
xchg
clc
pop
cmc
jns
push
into
cmp
fmull
stos
add
push
arpl
popa
jne
imul
add
fwait
mov
std
lods
adc
gs
cld
cmp
mov
ret
push
xchg
fldcw
xor
dec
add
pop
and
or
and
stos
aam
xor
pop
inc
and
adc
adc
imul
mov
push
mov
mov
mov
pop
out
or
daa
cmp
outsl
mov
xchg
in
inc
jne
mov
inc
in
mov
mov
pop
push
xchg
xchg
loope
rcrb
push
sub
or
xor
cmpsl
imul
adc
mov
fnstsw
mov
mov
pop
xchg
pusha
mov
pop
fs
aas
mov
adcl
inc
mov
xlat
addb
out
cmp
or
xchg
push
sbb
mov
xlat
or
ss
int
mov
popf
cld
add
stos
and
xor
mov
fidivrl
sbb
fnstenv
mov
xorb
ds
mov
push
or
xor
sub
push
or
arpl
and
das
cltd
in
icebp
fwait
push
fs
xchg
stc
mov
mov
xor
mov
scas
xorb
out
cmp
push
stos
popa
mov
div
addr16
push
push
jecxz
mov
imul
repnz
jmp
ffree
.byte
add
add
fnstenv
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
fnstenv
add
add
add
add
mov
add
addb
add
fnstenv
add
add
add
add
add
add
enter
add
add
loopne
add
fnstenv
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
fnstenv
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
fnstenv
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
fnstenv
add
add
add
add
mov
add
addb
add
fnstenv
add
add
add
add
add
add
addb
add
add
fnstenv
add
add
add
add
add
add
cwtl
add
add
add
add
jb
add
add
add
add
add
add
test
add
add
add
fnstenv
add
add
add
add
add
add
mov
add
add
jb
add
add
add
add
add
add
enter
add
add
fnstenv
add
add
add
add
add
add
fadds
add
add
add
jb
add
add
add
add
add
add
call
add
add
jb
add
add
add
add
add
add
clc
add
add
add
add
jb
add
add
add
add
add
add
or
add
fnstenv
add
add
add
add
add
add
sbb
add
fnstenv
add
add
add
add
add
add
sub
add
fnstenv
add
add
add
add
add
add
cmp
add
fnstenv
add
add
add
add
add
add
dec
add
add
fnstenv
add
add
add
add
add
add
pop
add
add
fnstenv
add
add
add
add
add
add
push
add
add
jb
add
add
add
add
add
add
js
add
add
add
fnstenv
add
add
add
add
or
add
add
add
jb
add
add
add
add
or
add
add
add
jb
add
add
add
add
or
add
add
add
jb
add
add
add
add
or
add
add
add
jb
add
add
add
add
or
add
add
add
fnstenv
add
add
add
add
or
add
add
add
fnstenv
add
add
add
add
or
add
add
add
fnstenv
add
add
add
add
or
add
add
add
fnstenv
add
add
add
add
or
add
push
add
add
add
fnstenv
add
add
add
add
or
add
push
add
add
add
fnstenv
add
add
add
add
or
add
push
add
add
add
fnstenv
add
add
add
add
or
add
push
add
add
add
fnstenv
add
add
add
add
or
add
add
add
add
fnstenv
add
add
add
add
or
add
add
add
add
fnstenv
add
add
add
add
add
add
push
add
add
jb
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
push
and
in
add
add
add
pop
cmp
add
in
add
add
add
pop
cmp
add
in
add
add
add
cmpb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
test
add
add
add
add
add
add
add
in
add
add
add
sarb
add
add
add
add
add
cmp
add
in
add
add
add
enter
pop
add
add
add
add
add
add
cmp
add
in
add
add
add
and
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
xor
xor
es
mov
fidivs
dec
outsb
stos
xor
lods
js
inc
daa
add
sub
int
icebp
jae
mov
pop
inc
and
xor
mov
cmp
pop
push
adc
lahf
mov
push
and
out
mov
inc
movb
fimull
out
mov
loopne
pop
adc
ret
mov
lret
sub
out
push
mov
cs
movsb
dec
jle
outsl
pop
sti
add
aaa
mov
out
dec
shrl
push
jbe
inc
sbb
mov
and
je
jmp
insb
fwait
int3
mov
cmc
xor
std
sbb
shr
push
test
gs
rclb
cmpsb
mov
cmpsl
cmpsl
push
fdivrp
sub
shrl
insb
cmp
pop
or
push
mov
adc
pop
add
jle
mov
and
adc
or
dec
lods
push
insb
mov
addr16
in
jne
mov
ljmp
push
cmp
push
pusha
call
rcl
inc
jge
sbb
push
out
test
lahf
negl
bnd
mov
adc
mov
shrb
mov
movsl
aam
cmp
outsb
int3
fcmovu
xchg
jne
or
pop
jl
push
rorb
mov
fstpt
mov
fisttpll
test
out
fwait
push
or
lods
arpl
mov
shrl
jae
inc
push
mov
outsb
stc
push
xor
adcl
ss
out
scas
and
sub
jp
push
mov
js
pop
pop
je
test
cmp
pop
insl
das
cmp
int
aaa
add
faddl
lcall
xor
int3
cmp
test
or
aas
mov
push
cmp
ja
add
rclb
sbb
sarl
xor
fstpl
cmp
sbb
movsb
rcrb
push
lock
insb
xchg
aas
enter
xor
xlat
fwait
aad
push
fisubrs
fidivs
mov
sub
add
gs
mov
jmp
sbb
adc
mov
mov
outsb
aas
int
push
outsb
fwait
inc
fdivr
cmp
fbstp
mov
repz
inc
int
sub
lods
pop
js
mov
shll
jae
mov
pop
cmp
stos
jae
sub
push
pushf
fisubrl
imull
cmp
mov
mov
arpl
fcomip
inc
sbb
and
push
jb
negb
int
out
in
inc
test
mov
jmp
addr16
cmp
sbb
icebp
mov
mov
fisttpll
sbb
push
ljmp
adc
mov
jbe
popf
in
daa
mov
pop
push
mov
in
jecxz
fisubs
popf
in
mov
in
sahf
popa
cmp
jle
adc
int
or
mov
cmpl
or
fldl
or
cmp
sti
aam
faddl
aaa
pusha
out
mov
add
ljmp
call
sbb
imul
sahf
xor
and
or
das
sub
push
out
xor
enter
ljmp
iret
xor
pop
sub
sbb
out
sti
repz
mov
push
and
stos
sbb
jmp
mov
inc
loopne
jp
enter
jnp
aaa
mov
clc
push
mov
push
adc
stc
lods
ret
call
jo
aas
aaa
fmull
push
and
mov
sub
cmc
fstpl
push
sbb
out
repnz
imul
ja
dec
iret
movsb
mov
mov
les
push
mov
and
ret
xchg
aaa
fildll
xchg
dec
lods
fldenv
xor
outsb
xchg
jae
fbstp
mov
rorl
push
and
cwtl
cwtl
bound
push
push
jl
mov
cmp
dec
push
pusha
and
jns
dec
lcall
add
hlt
stc
push
addb
inc
std
arpl
fistl
xchg
scas
adc
or
stc
int3
int
shrl
lret
dec
add
push
mov
aad
in
push
lods
lret
test
pop
fbld
dec
xor
mov
popa
and
add
sub
add
and
fsubrp
stos
test
fidivrl
sub
pop
mov
psubw
jb
mov
cmp
lock
ret
shll
jo
jnp
sbb
adc
sbb
cli
cmp
sub
in
cmp
out
mov
mov
lods
jo
insb
in
push
iret
cmpsb
sbb
mov
stos
cmp
dec
sbb
adc
ficoml
mov
inc
cmc
out
into
test
inc
mov
fs
cli
sahf
aaa
add
cmp
das
push
xchg
add
cmp
adc
jg
movsb
xchg
pusha
dec
in
cmp
push
xor
cmp
sbb
cmp
xchg
pop
mov
or
imul
dec
ficoml
and
ds
inc
jae
scas
hlt
adc
call
add
mov
add
or
mov
adc
cmpsl
push
sub
xchg
clc
adc
cli
mov
lahf
inc
jecxz
ss
mov
or
roll
mov
mov
lods
jecxz
push
ds
cmpsb
mov
jmp
xchg
stc
sti
jo
loop
sti
xor
jecxz
push
jle
mov
iret
inc
daa
jg
imul
xchg
sbb
xorb
stos
sbb
daa
sub
clc
lahf
out
pushf
gs
aad
push
aas
and
adc
out
jno
lcall
imul
loopne
add
push
adc
push
jae
aas
fidivl
xchg
rorl
aam
cmp
mov
pusha
aam
or
sbb
adc
pop
and
idivl
sahf
fwait
sarl
int3
push
rolb
xchg
aaa
cwtl
sub
in
insb
xor
ret
gs
mov
lcall
andb
mov
mov
ret
out
imul
das
mov
and
test
ljmp
fmull
outsl
push
pop
jl
stos
mov
or
lds
test
add
in
popf
xor
push
and
test
and
pop
nop
les
int3
jb
addl
dec
fstpt
outsl
lret
mov
call
out
je
in
in
repz
jae
lock
clc
and
mov
cmp
in
inc
pop
std
stos
ds
or
jae
dec
fldl
add
int3
les
fbstp
mov
lds
add
lods
loop
sarb
inc
divb
dec
push
lcall
loop
inc
out
and
xor
cmp
add
nop/reserved
xchg
adc
mov
add
jge
cmp
mov
cmc
addr16
aaa
inc
fidivs
cmp
dec
int
xchg
mov
push
stos
testb
mov
pop
cmp
mov
push
adc
mov
fadds
and
sti
cmpsb
sarb
out
cmp
ret
out
dec
adc
daa
test
sbb
xlat
decb
insl
test
movsb
out
xchg
ss
rcll
insl
aas
cmp
sbb
loopne
mov
aam
das
icebp
or
subb
jp
imul
dec
add
inc
gs
cmpsl
or
pop
decb
xchg
mov
gs
xor
sbb
jge
xchg
add
incb
aas
das
addl
mov
push
sbb
rorb
lret
test
test
pushf
leave
fisttpl
ljmp
pop
js
icebp
lods
sub
sub
sbb
mov
into
or
lahf
inc
xorl
imul
fisubs
mov
mov
adc
push
push
ja
aad
add
test
cmp
popf
jp
push
mov
add
jno
repz
mov
add
push
jle
xor
pop
jbe
jmp
push
ret
scas
addr16
fsubp
jns
fistpll
and
adc
and
ljmp
aam
mov
ds
cmp
scas
mov
mov
jle
cmova
xor
and
dec
xchg
outsl
ds
ret
test
stc
adc
add
xchg
adc
jne
xor
cmpsl
ja
scas
ds
loopne
pop
pop
mov
in
test
test
xchg
orb
into
mov
pop
scas
lret
xlat
pop
jno
out
and
jno
repz
xchg
es
sbb
jp
jmp
and
pusha
iret
imul
and
and
enter
mov
mov
and
add
cmc
dec
mov
gs
sub
rorb
outsl
cmovnp
pop
push
mov
sub
loop
jnp
jmp
push
fwait
int
xor
inc
mov
rcrl
adcl
xchg
pop
and
or
das
sarb
daa
mov
loope
xchg
movsb
fstpt
jbe
or
ss
sbb
jge
add
rolb
push
adc
outsb
xor
cs
cmp
lahf
push
adc
les
push
movsb
sbb
cmpsb
cli
jecxz
push
jb
nop
fdivrl
aaa
je
stc
mov
lock
repz
add
pmuludq
add
je
dec
lea
int
cmc
mov
les
fwait
mov
cli
inc
add
sbb
adc
add
bound
mov
mov
pop
sub
dec
daa
fld
and
iret
lret
mov
dec
test
test
scas
mov
add
seto
fldcw
cmpsb
jns
nop
mov
add
inc
insl
xor
lret
push
cs
out
je
xchg
pop
jl
ljmp
fiadds
mov
imul
std
sub
xor
cmp
push
xchg
adc
aad
or
rclb
sbb
pop
jno
dec
rcr
sbb
dec
mov
scas
xor
mov
push
fwait
mov
into
testl
jge
mov
mov
xor
mov
sbb
inc
sahf
jno
mov
cltd
cmc
notl
ffree
mov
xor
les
mov
divb
cmc
notl
pop
cmp
aaa
xor
mov
imul
out
cmp
setle
ret
stos
jge
int
adc
add
shll
gs
fcmovnbe
jns
dec
mov
pop
push
cmpsb
jecxz
dec
push
popf
orl
lods
mov
sub
push
sbb
fadds
lret
enter
sub
stc
pushf
outsb
bswap
push
movsb
aas
xchg
pop
cmp
mov
dec
inc
push
pop
nop
cmp
jo
ficoml
mov
dec
add
xchg
inc
jl
push
jbe
aas
in
clc
push
scas
arpl
add
cwtl
int3
or
dec
xchg
xchg
int3
push
push
lock
stc
aaa
ret
pop
int3
arpl
cmp
sbbl
pop
mov
sarb
cmp
movsb
xlat
cmp
sbb
int
es
js
pop
mov
pop
pop
sub
dec
es
xchg
fnstcw
dec
fimuls
insl
in
mov
mov
sub
and
ror
test
dec
sub
imulb
cmc
jl
mov
sahf
adc
test
pop
shrb
add
sub
jbe
je
push
loopne
mov
fistpll
pop
push
lret
pop
or
jbe
ja
mov
sbb
xor
test
aas
lea
xchg
sbb
or
cmc
xchg
shlb
rep
in
sahf
std
movsb
pop
pusha
ret
xchg
movsl
push
ret
mov
adc
jmp
xor
and
repz
xchg
unpckhps
pop
mov
fsubs
xor
push
add
shll
jmp
push
movsb
lock
fdivrl
mov
mov
test
leave
test
das
xchg
pop
lcall
test
daa
leave
inc
adc
fcompl
mov
out
aaa
cmp
cmp
jns
int
sbbl
cmp
xchg
ljmp
pop
fld
lods
push
je
sbb
pop
xorl
imul
icebp
push
fisttpl
ss
inc
lahf
pop
push
mov
test
jp
inc
fimuls
sbb
xchg
inc
jbe
dec
add
sbb
mov
daa
jb
or
adc
mov
out
call
mov
mov
mov
push
mov
push
sti
in
sub
jle
pop
cltd
dec
mov
or
daa
jo
aad
fdiv
stos
imul
sub
and
call
inc
aas
sub
movsb
sub
fidivrl
ss
in
pop
and
lds
sti
jb
les
jmp
jg
pop
or
das
in
hlt
and
insb
outsb
or
push
fwait
jmp
xor
roll
inc
test
cmp
ljmp
je
clc
push
adcl
fimull
idiv
jp
sub
dec
add
int
jmp
push
ret
rol
inc
pusha
in
sub
ds
jnp
sub
into
into
inc
add
out
das
sbb
sbb
mov
rcrb
xor
ja
xlat
loop
mov
jmp
outsb
xor
shrb
sbb
lea
lret
jno,pt
mov
push
mov
call
add
cld
insl
outsl
sbb
test
test
lret
adc
cmp
lods
aas
mov
cmc
cmp
aad
fmull
mov
mov
cmovs
xor
in
push
and
push
mov
inc
xchg
xchg
movsl
shrl
in
popf
aam
sar
stos
push
sbb
mov
loopne
daa
push
fmulp
sbb
lret
outsl
cmp
add
loopne
pop
jle
push
mov
icebp
sub
scas
dec
fldcw
lods
lret
mov
aam
in
mov
cmp
movsb
js
or
rcrl
movsb
nop
mov
ficompl
mov
pop
imul
xor
fs
xor
pop
popa
or
or
data16
pop
sub
pusha
adc
and
jl
loopne
lods
in
xor
pop
push
out
sahf
arpl
inc
and
lret
push
std
loop
test
mov
jo
mov
movsb
aaa
stos
inc
cs
and
cmp
insb
push
insb
flds
hlt
out
sub
dec
or
addr16
pop
mov
or
xchg
mov
gs
adc
jge
stc
push
cmp
and
mov
scas
xorl
xor
in
int3
mov
int
pop
stos
mov
xchg
lret
pop
movsb
stc
stc
les
and
hlt
popa
and
cmc
jge
xor
out
sbbb
fisubrs
imulb
mov
shll
pop
xchg
inc
jmp
repnz
clc
cs
addr16
dec
fstpl
popa
pusha
xor
cmp
sub
xor
cmpsl
push
mov
push
stos
icebp
xchg
pop
ja
lea
divl
mov
iret
cmpsl
fmulp
sub
sub
inc
push
push
lcall
aas
imul
xor
inc
loope
sub
jmp
imulb
pop
dec
imul
nop
jo
sub
dec
adc
scas
fwait
jnp
push
xchg
push
mov
popf
jns
add
in
jae
xchg
xor
out
fucom
shl
icebp
mov
mov
inc
cld
push
xchg
xor
and
mov
psllw
mov
inc
sbb
lods
pop
dec
lret
mov
pop
mov
loope
mov
or
and
dec
je
mov
pop
lret
stos
or
pop
mov
dec
insl
xor
mov
lcall
int
adcb
sbb
sub
dec
pop
push
jg
cmp
out
or
push
sbb
and
add
sub
or
out
xchg
sub
and
movsl
jnp
xor
xor
fisttps
outsl
sbbb
pop
or
inc
inc
fildl
push
fs
test
and
dec
adc
js
adc
dec
fsubr
cmpsb
xor
mov
pop
in
bnd
pop
mov
dec
or
xchg
sarl
pop
push
jne
shr
mov
jne
int3
push
outsb
aam
xchg
pop
fs
jns
fisubl
mov
jge
fstpt
call
dec
call
fistl
sbb
pop
aam
xchg
sbb
or
psrad
or
mov
rorb
mov
sub
or
inc
and
xchg
rcrl
repz
pop
add
mov
sahf
push
xchg
movsl
aad
scas
mov
mov
in
sub
frstor
ljmp
xor
insb
addl
mov
push
sub
xchg
push
or
ja
mov
mov
or
mov
les
hlt
nop
ja
xchg
jg
icebp
mov
sub
mov
jecxz
add
sbb
jnp
sbb
out
cmpsl
adc
adc
sub
or
xorl
mov
lahf
xor
in
inc
lods
aaa
iret
outsl
mov
popf
imul
faddl
repz
pop
shlb
data16
mov
iret
les
iret
mov
js
mov
xchg
mov
nop
call
ds
fistpll
push
pop
pop
leave
hlt
mov
ret
aas
ret
pop
test
shr
sbb
and
and
mov
inc
push
testb
popf
out
lods
cli
je
mov
sub
repz
lcall
int3
jl
sbbb
mov
fidivl
imul
jg
int3
mov
and
fdiv
test
rcrl
mov
mov
mulb
subb
mov
pusha
in
mov
adc
push
inc
xor
pop
jmp
sub
ja
fsubrp
push
pop
sahf
mov
pop
arpl
fwait
dec
cmc
pop
sub
inc
cmpsl
rcl
lds
cld
fisubs
and
mov
mov
cs
ret
dec
sub
mov
xchg
je
and
cmpb
addr16
mov
or
pop
dec
push
xchg
inc
push
cmp
ret
fstps
xor
inc
lea
and
nop
jns
ss
out
and
xchg
aas
jne
xorb
loop
fldl
je
nop
cs
lret
mov
in
pop
mov
popa
int3
aad
push
inc
daa
cmp
xchg
mov
mov
push
xchg
into
and
fdivl
das
xchg
mov
xchg
inc
mov
call
xchg
insb
mov
ds
clc
jo
insb
sub
jmp
sarb
sub
fcmovnu
sahf
cmp
or
aas
jecxz
test
fmull
push
dec
xor
mov
sub
push
pop
imul
lahf
mov
ret
dec
les
scas
sti
inc
mov
add
mov
jns
arpl
mov
xchg
cmp
or
mov
fadds
sub
out
push
xor
mov
mov
jle
lods
clc
xchg
mov
add
cmp
das
xchg
js
push
jb
stos
push
cmp
ret
js
xor
or
push
xor
pop
mov
je
clc
or
pop
push
jne
mov
lahf
int3
test
jmp
mov
ss
pop
mov
mov
fmuls
xchg
ret
sbb
aam
xor
push
cwtl
loopne
inc
mov
adc
pop
and
das
insl
adc
xor
sub
cltd
aaa
leave
pop
in
movsb
inc
cmp
insb
sub
movsl
insl
xchg
cmpsl
adc
and
gs
stos
dec
ljmp
shrb
xchg
lds
sbb
sbb
into
fisttps
cmp
mov
xchg
pop
sahf
pop
mov
aas
mov
pop
dec
sbb
divl
mov
mov
cmp
jmp
xchg
leave
out
mov
popf
out
icebp
push
push
shrb
add
pop
clc
das
inc
inc
xor
sbb
daa
jb
jl
adc
imul
xchg
rolb
cli
shll
mov
dec
pop
and
inc
mov
jbe
and
test
xor
icebp
adc
push
cmp
fstp
into
cwtl
scas
repz
push
and
fbstp
xchg
push
add
pop
insb
stc
add
mov
mov
jno
mov
int
pop
xchg
test
xchg
fnstcw
cld
into
xchg
add
addr16
pop
icebp
sub
outsb
sub
insb
adc
mov
or
xchg
aas
adc
dec
aam
pop
pop
int
in
sub
dec
test
mov
mov
mov
pop
div
sub
ret
sub
add
add
dec
test
fcmovu
xor
daa
test
int
dec
popa
adc
data16
mov
rcll
inc
bound
dec
cmp
sub
push
xchg
lea
sub
push
xchg
decl
lahf
jl
js
icebp
cmp
popa
cmp
rclb
popa
mov
jne
push
mov
mov
rcrl
dec
mov
jl
js
inc
outsb
dec
hlt
add
lret
subb
mov
es
sub
pop
daa
push
add
aam
in
subps
push
pop
negl
sub
andb
lea
roll
add
or
pop
pop
loop
insb
aas
inc
sub
pop
push
pop
sub
pop
adc
ds
pop
mov
aaa
out
jnp
mov
xor
sub
mov
mov
cld
scas
in
pop
jno
mov
add
sbb
stos
clc
mov
test
pop
sbb
mov
pushf
jne
adc
rol
cmpsl
push
sub
push
sub
pop
jae
fidivrl
addr16
cwtl
lcall
cmp
sbb
nop
push
and
orb
test
dec
cmpb
stos
popf
dec
lods
in
jb
js
push
cmp
std
es
mov
dec
popa
add
inc
sbb
loope
and
xchg
add
adc
mov
push
icebp
in
rcrb
repnz
fisubl
popa
fsubl
push
ret
mov
movsb
push
or
inc
arpl
xor
push
mov
loope
adc
subl
fisttpl
stc
xchg
inc
out
sub
movsl
jns,pn
enter
xchg
pop
mov
scas
cmpsl
loopne
mov
push
push
fcoml
sub
fstpl
fs
cmp
jmp
frstor
push
shlb
mov
movsl
out
lret
sub
inc
sub
mov
rol
leave
push
sbb
ljmp
xor
nop
fdivrs
push
popf
jp
cwtl
mov
pop
aas
lock
mov
push
xor
arpl
fsubl
cmp
mov
xor
pushf
rcll
repnz
cmpsl
sbb
cmc
jge
popf
popa
cwtl
stos
lods
mov
lock
lds
pop
xorl
stos
pop
hlt
fdivr
and
in
pop
ja
fadds
lea
xchg
or
imul
cmp
push
es
enter
rcrb
ss
ret
jmp
flds
clc
adc
mov
js
mov
lret
popf
adc
inc
xchg
shl
andb
cmp
xor
push
xchg
into
and
repz
xchg
pop
xchg
inc
xchg
dec
sahf
cmpsb
inc
sub
aaa
out
popf
adc
out
fidivs
mov
mov
push
imul
sbb
ficoms
int3
arpl
mov
add
loop
mov
loope
jl
cmpsl
add
add
or
loope,pn
dec
inc
dec
or
push
int
and
pop
es
cli
inc
push
es
push
repnz
add
jmp
jb
or
popa
rol
pushf
aad
testl
mov
sbb
movsb
push
shl
popa
jp
enter
int
out
fs
fucomp
mov
aad
test
cli
decl
ret
sbb
dec
into
bound
int
and
mov
out
push
bound
loopne,pn
push
into
divb
sbb
and
in
add
dec
mov
out
xlat
imul
xor
push
jge
mov
outsl
cmpb
inc
lret
psubw
mov
push
mov
mov
push
xchg
adc
lock
pop
jno
jo
mov
sbb
xor
sbb
jnp
sahf
js
stc
xchg
mov
ja
out
flds
jb
in
sbb
jno
push
mov
cmpsb
cmovae
xor
cmpsl
dec
mov
sbb
leave
enter
xor
int3
xor
mov
ds
mov
lds
sarb
insb
jb
cwtl
rorl
arpl
and
mov
and
mov
add
and
pop
or
fbld
pushf
vpshab
pop
mov
or
popa
cmpl
aam
mov
jo
rol
shlb
pop
cmp
test
xor
push
std
loopne
fnstsw
das
cltd
ljmp
inc
test
mov
test
jmp
xchg
adc
lods
loop
add
cld
mov
or
test
jo
xor
xor
adc
fistl
scas
jno
rcll
fisubrl
ror
bound
popf
xchg
es
or
into
mov
add
lret
fidivs
mov
xchg
xchg
inc
in
inc
cld
gs
pop
sar
push
add
mov
repnz
das
pop
outsb
adc
ret
pop
push
jno
cmp
fisttpll
mov
movq
stc
sub
push
ss
jno
pop
adc
xor
iret
sbb
jecxz
mov
xchg
and
mov
loope
out
mov
sahf
iretw
in
es
sub
notl
cltd
pop
push
cli
jbe
fistpll
sbb
or
fbld
xchg
imull
lods
sbb
xchg
push
push
pushf
jnp
cmp
xchg
jne
lea
sbb
xchg
or
pop
mov
sbb
dec
cmpsb
in
iret
movsl
int3
addb
ret
or
ficoms
bound
in
out
or
lcall
push
and
data16
add
mov
mov
in
sub
arpl
push
lret
sbb
mov
mov
mull
xor
sbb
dec
iret
test
sti
xchg
leave
sub
pop
jb
or
push
jae
leave
popa
sti
xchg
int
insl
fsubl
cld
sti
cmp
mov
stos
mov
iret
lock
sbb
cltd
popa
mov
sbb
cmp
outsb
and
fdivs
dec
push
xchg
dec
mov
leave
loop
mov
in
ja
jg
xor
daa
and
dec
ja
or
mov
dec
add
cmp
into
popf
adc
adc
scas
xchg
dec
movsl
xchg
push
das
dec
popa
jne
push
push
cmp
popa
fs
xchg
push
jnp
ffreep
mov
xlat
adc
pushf
mov
fwait
out
adc
push
add
mov
push
push
mov
imul
in
mov
push
notl
and
leave
push
dec
sub
jne
dec
xchg
sub
ds
xlat
push
imul
push
int
mov
xor
mov
mov
adc
dec
ret
jae
cmc
or
ret
mov
xor
adc
sbb
in
xchg
sbb
out
mov
dec
push
sub
shlb
mov
setns
movsb
in
in
lock
inc
stc
cmp
add
jns
cld
je
punpcklbw
out
sub
mov
pop
mov
sub
test
mov
xor
or
cs
popf
scas
xchg
mov
inc
repnz
pop
gs
imul
fisttps
jns
adc
or
pop
insl
jge
adc
xchg
std
jae
ror
lcall
imul
cs
xchg
shl
fabs
inc
nop
out
js
xlat
fimuls
bnd
int
and
std
fistpll
pop
lcall
fcomi
cmp
mov
mov
adc
jb
aas
repnz
out
call
ret
test
pop
aad
sbb
mov
dec
insb
lea
xor
dec
push
insb
mov
dec
inc
ds
xor
adcb
cmc
and
and
xor
xchg
jnp
or
adc
and
hlt
mov
cmpsl
sub
outsb
xchg
in
ret
and
lock
pop
nop
int3
addl
movsl
sbb
ljmp
dec
xchg
pop
aam
jne
cmpl
imul
add
add
pop
xchg
jbe
mov
mov
into
adc
or
dec
test
scas
jecxz
jb
or
xchg
test
mov
inc
shl
push
int3
clc
push
inc
push
arpl
out
mov
cmp
lret
sub
add
popa
data16
pushl
jbe
jge
out
call
andb
es
gs
in
inc
mov
fdivrl
in
add
arpl
aas
sub
sahf
mov
adc
mov
push
fstpt
push
in
dec
sub
popa
int3
negb
push
in
arpl
aam
pop
xor
cs
rol
jno
push
mov
and
lret
test
inc
lcall
pop
out
jmp
sarb
test
cmpsl
insl
nop
cmp
shll
mov
subl
lock
mov
int
mov
jmp
es
jmp
lret
inc
and
repnz
and
push
mov
xor
mov
sub
addb
inc
outsb
mov
xchg
inc
test
mov
aas
fmuls
dec
mov
dec
add
loop
pusha
hlt
movsb
push
mov
je
xor
cld
test
loop
fisubs
xor
cmp
sbb
addl
mov
xchg
out
ret
inc
lret
add
fwait
or
sub
loop
out
in
adc
push
sbb
lock
mov
mov
cmpsb
push
mov
lea
in
cmpsb
xchg
cmp
fwait
loopne
fidivl
jmp
je
out
dec
inc
sub
xchg
shrl
sub
mov
dec
xor
cmp
mov
out
add
jecxz
sbb
addr16
lods
xchg
dec
outsl
adc
leave
xchg
jecxz
rcr
nop
fldlg2
test
jns
pop
and
cld
stos
inc
pop
adc
jb
mov
cmp
aaa
aam
sbb
addb
fidivrl
divb
add
xchg
in
pushf
aad
inc
mov
faddl
es
mov
or
and
in
push
sub
mov
cmc
or
and
cltd
out
xor
xchg
mov
mov
cwtl
inc
ret
cmp
xor
cmp
cmp
mov
xchg
ret
pop
jno
pop
std
out
fisubs
subb
test
insl
mov
repz
pop
loop
or
xchg
rcrl
or
ja
dec
test
dec
je
xor
stc
adc
adc
xlat
mov
ja
and
data16
mov
insl
dec
pop
testb
jae
insb
fnsave
arpl
adc
pushf
push
out
mov
pop
loope
push
or
mov
xor
cs
leave
popa
mov
aas
xchg
mov
outsl
adc
dec
movsl
jae
push
and
pop
fmuls
xor
dec
mov
movsb
jmp
setl
sbb
dec
and
lds
push
faddl
repnz
daa
int
je
scas
out
xor
sub
dec
push
addr16
cmp
xor
dec
fsubs
lods
lahf
in
icebp
stc
scas
cmp
loope
cmpsb
data16
stos
pop
mov
mov
sub
inc
xor
lret
cmc
mov
dec
cmp
or
lods
xor
lea
dec
mov
push
test
push
inc
mov
push
cmpsl
sub
sub
popa
incl
fs
push
xchg
stos
mov
ret
push
sbb
or
rcrl
xchg
jmp
iret
repnz
and
ljmp
jge
shlb
inc
mov
rcll
subl
cwtl
popa
scas
test
push
or
insb
jp
fsubrl
xor
mov
fdivrs
add
shrb
rclb
cmpsb
gs
out
test
sub
outsl
test
jae
vpsubusb
push
pusha
and
ret
outsl
dec
cmp
call
fldt
popa
sub
mov
std
push
sbb
xchg
sub
mov
insb
loop
fists
pop
mov
mov
jmp
sub
push
or
lods
mov
cmp
sub
push
aad
add
xor
fnsave
adc
xchg
push
cmp
leave
int
pop
add
scas
or
or
mov
sub
cld
and
sub
mov
rorl
push
pop
xchg
cld
lods
stc
cwtl
cmpsb
outsl
stos
out
mov
jb
jb,pn
mov
out
stos
or
push
mov
mov
es
into
shll
rcl
push
in
rep
fmul
testl
push
mov
adc
rcrl
mov
addr16
inc
stos
ss
xchg
push
iret
sbbb
push
js
sarl
dec
fiaddl
xorl
ficomps
gs
add
mov
jb
or
outsl
pop
testb
jl
mov
inc
jmp
stos
mov
pop
jnp
jecxz
ret
inc
and
mov
bound
icebp
out
jge
cmc
cmp
pop
scas
xadd
mov
je
in
adc
popf
and
sbb
in
cmp
jns
mov
xchg
aas
stos
ljmp
add
cltd
push
fwait
mov
js
sub
sahf
lods
mov
cmp
push
adc
or
lret
sub
sbb
in
pop
ss
fucomp
and
ja
inc
cmp
or
mov
inc
mov
jmp
arpl
aas
mov
lods
cmpsb
cmp
push
les
sub
push
fnstsw
mov
mov
out
sbb
cmp
and
inc
rcr
fsub
xor
mov
gs
aaa
shll
ds
xorl
xchg
and
in
out
dec
jp
and
aam
js
negb
push
dec
push
sbb
jbe
adc
mov
inc
mov
mov
cwtl
jbe
fnstenv
popl
cmp
pop
lret
jns
mov
mov
fidivrs
mov
in
lret
ljmp
loopne
push
or
insb
jns
test
sbb
adc
mov
mov
ret
stc
leave
mov
pop
pop
ja
sub
iret
xor
mov
inc
pop
jns
and
mov
aas
fs
dec
stos
cmp
add
mov
and
mov
movsb
or
mov
push
insb
sti
push
mov
adc
shlb
jmp
push
aaa
dec
cmp
adc
notb
mov
xchg
jg
pop
jbe
test
or
xchg
sbb
ret
xchg
add
sub
mov
mov
push
ds
in
out
dec
ficoml
mov
add
cltd
adc
scas
lds
sbb
and
mov
movsb
jns
mov
add
mov
out
in
inc
mov
xlat
subb
pop
loop
xchg
add
xchg
fdivrp
push
and
lds
xor
mov
aas
push
mov
cld
inc
cld
out
cmpsl
mov
repnz
jnp
xbegin
mov
bound
dec
mov
dec
lea
mov
mov
pop
aad
psrlw
and
cmp
push
xor
ficoms
ret
mov
fsubrp
push
mov
ret
pop
js
mov
cld
jmp
cltd
sbb
inc
cmp
fidivrl
test
or
inc
stc
pushf
int3
fs
cli
imul
scas
add
rclb
xor
cwtl
sub
mov
mov
fiadds
xlat
lret
pushf
dec
lahf
mov
aas
shl
xchg
dec
shlb
inc
gs
imul
sti
loope,pn
xchg
add
sbbl
mov
inc
es
pop
cld
adc
in
pop
or
loopne
hlt
pop
dec
pminsw
test
mov
pop
enter
std
cmc
imul
mov
dec
dec
mov
pop
add
push
xchg
lret
mov
pop
dec
sbb
pop
jno
lcall
adc
scas
push
inc
push
addr16
mov
les
adc
push
cwtl
mov
daa
orl
sbb
dec
add
in
push
xchg
mov
test
mov
ss
sti
aas
fistps
lahf
data16
cmp
insb
movups
lock
cmp
or
jns
and
imul
es
test
cmp
cmp
mov
sub
push
cwtl
pusha
cltd
add
cmp
mov
dec
push
push
add
repz
int
loope
outsb
or
cld
pop
popf
lret
push
pop
notl
out
fucomi
lea
xor
in
rorb
sarb
adc
mov
cmp
xor
outsl
push
sbb
sbb
scas
rolb
test
lahf
test
push
jne
pop
arpl
outsb
imulb
sti
inc
out
adc
scas
and
push
shrl
movsl
xor
pop
push
pop
mov
lcall
pop
and
fwait
imul
inc
jo
pop
out
outsb
sbbl
and
gs
jne
dec
sbb
inc
add
pop
push
pop
push
lret
andb
mov
add
add
cmc
mov
jge
push
xchg
sub
cmp
mov
and
addr16
cltd
lcall
aam
add
push
ret
test
outsl
out
push
dec
aad
adc
push
std
inc
mov
jne
lods
cmp
mov
xor
pushf
mov
push
test
inc
dec
out
or
jbe
and
scas
aaa
jb
pop
notl
pop
cmp
sbb
mov
add
ficoms
cmp
push
pusha
sbb
imul
sbb
ljmp
and
adc
daa
jmp
sub
test
adc
push
mov
mov
mov
push
lock
jg
clc
mov
mov
aas
rcl
inc
jle
shll
or
vpslld
in
cmp
int
xor
sbb
or
ds
adc
sub
arpl
jbe
cmp
rcll
pop
jge
fisubrs
fisubrs
fidivrl
or
iret
test
dec
sub
jecxz
fistl
mov
xor
in
sbb
and
repnz
in
jecxz
xchg
imul
mov
ret
stos
xchg
add
pop
and
clc
movsl
or
cmp
je
clc
xchg
fwait
inc
cmpsb
ficomps
xor
inc
or
add
xchg
insl
in
inc
pusha
js
scas
sbb
movsl
dec
repz
lds
inc
xchg
push
xchg
mov
sub
int
mov
test
sbb
lods
icebp
arpl
and
adc
inc
pop
leave
clc
daa
dec
enter
lea
mov
lds
jns
xor
sub
dec
jae
dec
out
lcall
push
lods
xor
jecxz
inc
mov
push
clc
sub
xor
ret
dec
mov
xchg
fmuls
addl
or
fmul
data16
adc
in
decb
out
sbb
test
iret
dec
aas
pop
inc
sti
sbb
xchg
xchg
fincstp
fwait
mov
insl
adc
inc
pop
nop
push
jg
je
nop
cwtl
pop
xbegin
iret
loopne,pt
pop
jmp
sbb
fidivs
jo
fcompl
ret
into
mov
fnstsw
aaa
cmp
jecxz
das
cmp
shll
daa
test
lea
pop
in
lds
adc
cltd
iret
jl
mov
call
pop
pop
enter
pop
mov
shll
test
add
dec
jbe
mov
inc
dec
mov
xchg
push
push
pusha
cmp
int
pusha
sub
data16
pop
jecxz
jbe
cltd
shr
jnp
sbb
dec
out
popf
cld
or
addr16
cmp
icebp
sub
adc
lea
mov
lret
sarl
in
inc
in
lret
cli
push
outsb
es
or
outsb
jl
loope
pop
mov
test
into
rclb
sbb
or
xchg
pop
mov
push
jle
sbb
jb
adc
xlat
into
bt
pop
shr
dec
fcmove
sbb
dec
adc
mov
int
and
cwtl
add
emms
pushf
aam
ja
cmp
and
xchg
stc
in
push
mov
add
xor
aam
and
scas
loop
out
xor
xor
notb
fistpl
bound
mov
bound
faddl
pop
jle
xchg
add
dec
sbb
lret
inc
or
cmp
lcall
push
mov
fwait
cmp
cmp
push
inc
mov
std
arpl
out
inc
and
xor
es
insb
ret
cli
stos
lods
and
mov
movsl
sub
addb
in
adc
ret
xchg
xchg
mov
pop
jle
mov
iret
pushf
push
xchg
imulb
add
scas
je
imul
iret
inc
daa
mov
popf
ss
icebp
jmp
pop
inc
and
cmp
arpl
enter
cld
adc
dec
mov
cwtl
xlat
mov
stos
decl
dec
add
test
mov
mov
push
sbb
or
xchg
outsl
fdivr
cli
popf
clc
inc
xchg
ja
xor
mov
addr16
mov
adc
inc
xor
sub
jg
outsb
lret
mov
in
and
mov
dec
xchg
jmp
int3
mov
lds
and
push
movsb
sbbl
pop
xchg
pop
inc
adc
mov
adc
lock
imul
xor
mov
movsb
mov
cmp
push
xor
inc
or
out
or
sbb
add
cmpsl
nop
push
cmc
xor
sbb
mov
pop
inc
lret
sbb
push
cmp
sbb
test
jns
movb
out
in
jnp
je
inc
add
pop
mov
orl
cmp
loope
adc
inc
cmp
push
pusha
xchg
test
arpl
mov
adc
pop
pop
sbb
inc
and
stos
cmp
call
add
pop
lahf
xor
jns
mov
test
mov
push
jb
cmp
addr16
jecxz
sbb
xor
out
es
sbb
out
sbb
sbb
and
cmp
repnz
jl
push
jb
xchg
movsl
sbb
mov
add
jnp
mov
mov
sahf
xor
push
mov
int
dec
inc
mov
outsb
or
jl
pop
ret
mov
fadds
push
sti
js
fistpll
jle
push
mov
cltd
ret
add
pop
fbld
lcall
mov
hlt
repz
mov
pop
ret
out
or
dec
jns
gs
pop
add
out
jl
cld
fists
sbb
sbb
aas
popf
aaa
inc
repnz
xchg
mov
repz
shl
fildll
push
jmp
add
push
adc
xchg
inc
mov
mov
jne
cwtl
cld
stos
add
mov
fcompl
insl
pop
jno
push
sbb
inc
mov
fdecstp
and
mov
lea
mov
or
push
sti
testb
lock
mov
mov
lret
adc
sarl
leave
std
arpl
mov
test
fadds
mov
mov
enter
jae
jl
ss
cli
shlb
pop
push
rep
lods
aad
cmc
mov
stos
pop
dec
negb
cmp
loope
xor
js
jmp
xchg
repz
mov
mov
lahf
mov
jmp
aaa
loop
jp
and
pop
and
jg
in
mov
inc
push
mov
outsl
int
mov
push
jne
mov
rcll
imul
and
ja
fstl
lret
push
out
test
mov
xor
fdivrs
cmc
push
mov
in
or
arpl
inc
xor
out
pop
add
fiaddl
ss
cmp
or
mov
or
sub
outsb
enter
mov
push
jnp
fucomip
jae
sub
into
sub
jne
xchg
test
mov
fwait
jnp
js
mov
mov
pop
sub
imul
cld
cmc
clc
push
scas
icebp
pop
add
scas
fisubrl
mov
rorl
jo
mov
outsl
sbb
aad
hlt
cmp
mov
out
ljmp
call
mov
xchg
cmp
dec
out
or
push
daa
aas
repz
lahf
xchg
push
dec
iret
adcb
push
lcall
aad
or
rcl
ds
sbb
dec
jge
jg
sub
sbb
xchg
cli
test
mov
aas
dec
inc
jbe
out
dec
out
jecxz
sub
mov
cli
bound
xchg
fcmovbe
xor
in
mov
sbb
pop
cmp
add
jl
xchg
or
cmp
testl
shrl
and
iret
mov
push
jle
mov
cld
inc
data16
push
mov
imul
fildll
push
pop
stos
sahf
sbb
cmpsb
es
jecxz
rol
mov
ljmp
push
dec
push
adc
add
or
stos
ds
inc
incb
and
adc
and
lea
pop
jns
push
sahf
xchg
out
adc
nop
ret
mov
inc
out
jp
adc
adc
fldenv
repz
mov
sbb
jp
inc
pop
push
jmp
shll
pushf
push
mull
push
cmpsb
or
bound
adc
push
jmp
xor
inc
add
mov
jnp
cmp
shll
cs
mov
pusha
add
adc
mov
fimull
mov
aam
cs
push
repnz
mov
xchg
fcmovne
inc
add
sub
cltd
imul
int
push
cwtl
icebp
dec
bound
jno
lret
jl
fldcw
inc
iret
xlat
jns
lds
xlat
jg
add
xchg
pop
scas
add
adc
add
sahf
sbb
mov
mov
in
popl
fcoml
jp
pop
addr16
int
out
neg
mov
ss
orb
fwait
in
push
cli
jmp
add
sub
dec
dec
jo
stos
dec
les
dec
pop
or
mov
or
jge
push
push
pop
cmp
jp
sbb
lahf
sub
leave
or
lods
addr16
or
or
adc
mov
nop
movsl
outsl
inc
push
sub
in
mov
dec
icebp
jns
or
cmp
xchg
pop
in
icebp
inc
test
outsb
std
adc
stc
push
ss
int3
cltd
cmp
xchg
xchg
adc
daa
loop
xchg
das
mov
mov
or
fists
pop
shld
cmpsb
inc
rcll
les
pop
mov
mov
mov
and
cmp
jle
icebp
jbe
cmp
rcr
aad
popa
mov
les
sub
mov
push
arpl
mov
mov
mov
dec
clc
jne
out
cmpb
mov
fstl
push
push
je
iret
repnz
or
push
xchg
movsb
fisttps
mov
std
cmp
rcrl
adc
add
lock
sahf
cltd
mov
add
jb
loopne
stc
gs
test
mov
xor
sub
mov
xor
pop
adc
jge
bound
gs
mov
jmp
jecxz
ret
mov
add
shlb
cltd
adc
and
gs
leave
jmp
mov
jb
icebp
out
ljmp
insl
or
xchg
jbe
outsb
jae
xor
cmp
shrl
mov
inc
lods
test
add
xorb
std
lods
mov
stos
adc
fstpt
dec
dec
repnz
add
dec
mov
dec
ret
enter
hlt
add
int
es
pop
sahf
dec
repnz
sbb
ror
and
push
test
repz
out
xchg
shll
mov
iret
mov
fld
fcoml
jmp
jbe
lcall
adc
enter
shrb
push
xchg
mov
cli
in
cmp
pop
mov
mov
out
and
in
or
push
add
sahf
outsb
mov
sub
mov
mov
rcrb
jns
icebp
or
lock
inc
sub
push
out
cld
fisubs
insl
lahf
and
or
push
adc
xor
push
sarl
daa
addr16
and
inc
loopne
cmp
cmc
or
mov
jge
or
cmp
sbbb
or
mov
dec
pop
fcompp
movsb
leave
and
cmp
leave
negb
sub
cli
scas
jne
mov
mov
xor
inc
ljmp
xlat
dec
push
mov
jmp
fdivr
jl
mov
inc
test
jne
loope
sub
pop
sarb
mov
ffree
aam
cmp
outsl
or
aaa
test
or
popa
mov
pushf
pop
push
mov
adc
and
sahf
mov
mov
and
cmp
gs
xor
imul
push
mov
pop
sub
sbb
loope
imulb
aam
pop
xor
rcl
notl
ljmp
sbb
aad
xor
sbb
addr16
jmp
addl
stos
push
aam
adc
enter
pop
fs
mov
fwait
lods
ljmp
mov
dec
gs
lahf
xor
scas
jo
dec
dec
or
iret
mov
sbb
outsb
repz
repnz
popf
mov
sub
mov
cmp
sbb
je
mov
jnp
mov
rorb
xchg
jne
sub
sub
stc
sub
aam
ret
cmpsb
dec
jle
pop
jp
xchg
mov
loope
out
repnz
pop
xchg
inc
in
push
loope
int
push
jo
inc
dec
popf
scas
pushfw
push
mov
pop
and
dec
ljmp
cmpsl
pop
data16
sarl
dec
addr16
int3
xor
and
mov
cmpsl
insb
pop
stos
je
xchg
cmc
or
mov
out
inc
fs
fistps
add
test
pusha
or
mov
xchg
and
adc
inc
es
mov
push
xor
dec
adc
pop
insb
mov
push
popf
mov
push
fistpl
lods
mov
fcompl
orl
inc
dec
xchg
jg
ljmp
mov
lret
cs
in
jg
add
pop
or
arpl
cmp
leave
adc
adc
pushf
jns
dec
call
jb
pop
push
sub
dec
jae
hlt
xor
xor
dec
mov
dec
out
push
mov
enter
arpl
fistpll
roll
jp
add
popf
in
nop
jb
test
insl
das
mov
subl
push
cmp
incb
xor
testb
mov
sbbl
test
out
xor
lock
je
xlat
or
pop
mov
addr16
pop
cmp
add
ja
cmp
rcrb
scas
mov
pop
shrb
movsl
pop
data16
repnz
pushf
sti
inc
fwait
test
fisubrl
or
data16
outsl
hlt
movsb
nop
lock
cltd
pop
adc
mov
xchg
pusha
sbb
jp
fstpl
mov
jle
sbb
pop
jecxz
fwait
sub
pop
cmpl
das
mov
or
jp
shr
sub
orl
mov
sahf
inc
in
inc
cmp
xor
or
lock
cmp
in
loope
insb
nop
shl
sbb
sbb
add
pop
and
jo
cwtl
shl
mov
mov
ret
add
leave
or
repz
ss
fdivs
ficompl
cwtl
xlat
jnp
xchg
mov
push
pop
outsl
jl
jns
mov
int3
add
sub
sbb
outsl
or
loopne
sahf
bound
test
adc
cs
xor
or
mov
push
mov
idiv
fimull
insb
fwait
fs
mov
mov
push
icebp
insl
shrb
inc
or
add
add
fldcw
mov
adc
push
push
jb
cmpsl
fs
inc
xor
in
xor
cmp
and
in
aas
movsl
sarl
xor
cltd
ja
ds
ljmp
testb
mov
add
je
int
jge
imul
adc
mov
cltd
push
cmpsl
popa
push
hlt
xlat
outsl
ja
std
fstpl
push
mov
mov
lods
ret
scas
pop
cmp
into
sbb
lds
dec
sbb
push
loope
in
dec
mov
bound
pop
adc
jae
xchg
in
shll
test
pop
test
fstpt
cmp
lock
inc
cld
xor
addr16
mov
stc
nop
mov
cs
and
xor
out
jmp
cmp
jge
xchg
pushf
or
pushf
sub
mov
mov
jnp
loop
lock
icebp
cmpsl
jno
jmp
cltd
xor
jno
sbb
jmp
outsl
out
cmp
mov
pop
sahf
lds
daa
xchg
xor
mov
aas
xchg
test
cmp
popf
stos
cmp
repz
jp
cmpsl
mov
int
loope
add
fimull
inc
into
mov
gs
or
mov
jmp
dec
nop
mov
call
ss
push
add
daa
outsb
sub
or
aad
outsb
pop
icebp
push
pop
cmpsb
pop
insb
fstps
mov
adc
jge
dec
push
aam
sub
loope
push
and
shll
push
cwtl
mov
fsub
sbb
and
sub
imul
push
add
push
fidivs
ret
adcl
cmpsl
pop
in
push
rol
jae
push
cmp
jo
ror
jno
roll
push
movb
jmp
dec
push
sbb
subl
enter
test
faddl
out
and
test
data16
mov
cmp
jle
push
shrb
xor
or
cmp
mov
xchg
xchg
xlat
mov
test
cmp
xor
sbb
xchg
repnz
dec
in
orl
cmpsl
fstl
adc
mov
out
pop
pop
mov
hlt
out
jo
xchg
or
cmp
mov
fsts
mov
push
pop
inc
out
inc
mov
adc
push
dec
cwtl
mov
and
inc
xchg
mov
loopne
dec
subl
xor
sbb
adc
mov
push
into
out
xchg
lock
or
push
mov
scas
out
sbb
aaa
scas
adc
xchg
jae
das
fs
jae
add
mov
nop
ss
xorb
out
lds
mov
popf
mov
cmp
or
adc
call
mov
dec
and
shlb
jnp
shr
repz
sti
out
cmp
jns
fsts
sbb
std
subl
fnstsw
aam
ds
sbb
sbb
clc
rcr
cmp
mov
and
inc
xchg
mov
imul
sub
lret
mov
sbb
mov
icebp
scas
jne
mov
and
lods
popa
bound
out
hlt
mov
mov
loop
rorl
push
push
leave
scas
mov
jge
loope
fildll
movsb
sbb
jbe
sub
out
push
inc
cli
and
cmp
xchg
xchg
and
bound
inc
pushf
sub
lret
push
repnz
jecxz
gs
xchg
inc
add
inc
jmp
inc
sti
inc
xor
js
fs
cli
push
aad
or
clc
sub
shll
mov
cmp
and
xchg
xorl
bound
pop
lods
aad
imul
push
test
push
inc
cld
loopne
lcall
or
rcrb
sbb
arpl
adc
scas
lret
xor
add
hlt
inc
jae
lcall
lcall
pusha
ficomps
jno
test
filds
xor
inc
aam
mov
loopne
mov
rolb
cltd
cmpsl
insb
cmpb
mov
and
cmp
sbb
or
in
adc
add
pop
push
scas
pop
xor
push
sbb
pop
testb
mov
dec
mov
xor
add
data16
insb
cmp
sbb
mov
or
cmp
popf
dec
xor
push
das
dec
pop
test
push
jmp
fstpt
cmp
aas
jb
pop
sti
popf
jg
lds
cmp
jbe
aad
mov
push
stos
cwtl
adc
fldcw
and
jo
mov
les
cmp
mov
das
movsl
std
test
fidivrs
push
enter
outsb
jl
js
pushf
add
or
lret
adc
cmp
add
add
xor
jmp
mov
loope
lock
sarl
cmpsl
dec
imul
xor
cmp
negb
jp
fisubl
or
xlat
pop
pop
jb
add
pop
in
jbe
push
inc
push
ret
movsb
pop
jmp
pop
or
add
pop
jb
sahf
sahf
ljmp
test
ljmp
and
addr16
inc
pop
cmpl
mov
mov
out
int
jno
jae
out
incl
mov
mov
pushf
dec
jl
sbb
lret
mov
mov
call
fldcw
enter
and
xor
lahf
movsb
std
ficoms
mov
aad
mov
stc
nop
sub
inc
dec
inc
jae
inc
add
and
gs
scas
addr16
push
mov
mov
sub
xchg
fnstsw
cmpsl
flds
mov
adc
aas
dec
jne
inc
in
inc
push
sbbl
push
sbb
cmp
cmp
insl
outsb
pop
cmc
mov
inc
mov
std
push
or
imul
loope
cld
or
or
mov
and
mov
cmp
cli
ss
data16
or
adc
sti
imul
hlt
pusha
jae
popa
lret
mov
cmpsb
imul
fcom
inc
lods
push
or
push
and
shr
sbb
data16
jle
xchg
inc
loopne
in
cs
xchg
sbb
sub
cmp
jne
mov
sahf
pop
cmp
push
out
sahf
inc
xchg
add
lret
adc
lock
sub
sti
lock
sbb
jl
in
es
add
lock
dec
fdivp
push
sahf
inc
pusha
mov
int3
or
cli
stc
pop
ret
loopne
sbb
je
and
pop
push
sbb
sahf
popf
sub
fimull
jmp
sarl
mov
mov
loopne
jno
xlat
out
dec
in
xor
pushf
push
mov
mov
cmp
sbb
pop
or
aad
or
sti
shrl
sub
and
mov
or
mov
and
movsl
int3
popf
movsl
pop
pop
mov
sub
shlb
dec
mov
int3
mov
fcomp
mov
push
push
ds
popf
jecxz
mov
rcll
ret
loop
aam
inc
xor
outsb
dec
es
pop
add
lret
mov
pop
gs
dec
mov
adc
lods
jmp
xchg
push
add
addr16
and
sti
fmuls
jb
fwait
push
dec
imul
mov
xlat
loopne
add
test
rol
aas
pushf
inc
iret
mov
add
cwtl
das
mov
xor
jbe
fucomip
popf
push
lgs
mov
int
ja
pop
fs
or
cmpsb
cmp
imul
fidivl
popf
dec
sub
mov
das
mov
xor
dec
pop
inc
or
aas
pop
out
mov
xor
jecxz
xorl
lds
mov
bound
fwait
jp
mov
cmpsl
xor
jo
pop
or
fbld
shrb
ss
jo
pop
sub
dec
push
inc
mov
popa
mov
mov
add
add
mov
pop
push
out
loopne
mov
test
xchg
in
jecxz
mov
cmpsl
dec
jo
mov
xchg
int3
popa
outsl
insl
mov
rol
inc
scas
sbb
mov
and
sbb
ds
fists
nop
lock
mov
xor
daa
popa
repz
sub
aas
movsl
mov
mov
cmc
es
ret
loope
xchg
fbstp
push
hlt
iret
cmpsl
imul
ljmp
push
fwait
leave
inc
jge
popf
push
add
inc
xor
repz
ja
xor
xchg
dec
pop
add
mov
aas
scas
pop
ret
pop
mov
clc
mov
cmp
cltd
sti
dec
cmovbe
dec
xor
outsb
vphaddbw
into
jae
jmp
add
lods
pop
stos
pop
xchg
cwtl
nop
mov
out
dec
aas
test
push
mov
adc
in
sub
out
ret
jnp
mov
xor
movsb
loopne
imul
sub
dec
inc
adc
add
jae
xchg
or
jmp
mov
dec
lahf
js
jae
ja
mov
and
inc
push
cmpb
out
push
arpl
outsl
dec
aas
sti
jne
cmp
arpl
and
ret
sub
imul
in
push
pop
fldcw
jle
jns
xchg
cmp
or
hlt
push
mov
and
sbb
dec
adc
dec
clc
gs
jnp
into
in
push
mov
pop
pop
dec
in
mov
mov
push
call
gs
rclw
cs
pop
push
addb
movsl
enter
add
push
or
jl
add
fdivs
subb
mov
fld
lret
cli
lods
insb
adc
xchg
addl
inc
cmp
cmpsb
imulb
xor
mov
adc
mov
pop
mov
pop
ljmp
mov
mov
pop
mov
cmp
sbb
pop
jp
out
mov
mov
into
cmp
xlat
outsb
movsb
pop
sbb
xchg
pop
cmp
pop
cmp
loopne
negl
std
hlt
xlat
push
aaa
cmp
mov
shrl
data16
inc
add
iret
jp
or
in
cmp
outsl
call
mov
inc
mulb
add
cltd
repnz
xchg
divb
xor
cmp
nop
pop
lret
mov
lahf
adc
sub
inc
mov
stc
pusha
xchg
call
jnp
and
into
jnp
mov
xlat
push
shld
jmp
loop
jl
lods
push
jns
mov
mov
jno
adc
push
dec
dec
cwtl
mov
hlt
push
data16
dec
call
in
add
loopne
fidivs
sub
int3
sbb
insb
pop
clc
jecxz
mov
shrb
pop
imul
jge
outsl
push
int3
jl
cmp
mov
add
dec
cmp
enter
leave
dec
mov
gs
mov
adc
add
adc
enter
loop
push
gs
cmp
imul
test
shlb
imul
sub
lret
adc
movsl
test
mov
iret
mov
dec
adc
cmp
mov
cmpb
mov
loop
into
xchg
xor
popa
ds
test
xor
fistps
lods
cmpsb
xlat
cmp
rorb
fcompl
leave
in
pop
fldt
je
sti
or
mov
arpl
punpckhdq
int
das
fs
test
sub
mov
cmp
fwait
mov
lea
fists
and
xor
and
pop
xor
jns
dec
inc
cmp
mov
mov
out
in
sbbb
daa
cmpsl
aas
jno
lahf
cmp
inc
jl
aaa
subl
sbb
fwait
xor
inc
into
aas
sti
push
das
popa
lds
sbb
or
xchg
hlt
or
fmulp
push
jb
jmp
addr16
and
push
adc
ror
stc
movsl
insl
mov
test
cli
xchg
rclb
xchg
std
es
std
lcall
jge
stos
fmull
lcall
je
mov
mov
xchg
or
insb
cld
pop
xor
jbe
dec
aas
shr
stc
test
lea
jmp
dec
jg
clc
and
push
lods
jle
in
or
jnp
cmp
inc
mov
mov
and
or
in
mov
data16
out
stc
test
sub
cs
sbb
sub
pop
adc
mov
or
mov
mov
mov
xor
pop
insl
int3
out
aaa
push
inc
adc
nop
fsubrl
pop
das
loop
adc
mov
push
jnp
aaa
lcall
inc
adc
clc
mov
mov
pop
pop
insl
aam
xor
mov
push
lcall
sbbb
push
repz
mov
mov
fs
jg
pop
out
out
iret
jl
xchg
jl
xchg
cmp
sbb
xor
stos
xor
mov
ret
hlt
nop
fnstenv
push
cmp
imul
sarl
les
sbb
or
lds
mov
fsubr
out
pop
push
int3
enter
rol
arpl
orl
lcall
xchg
iret
enter
data16
sub
lock
push
clc
jns
jp
sar
into
or
hlt
arpl
imul
sbb
iret
cmp
pop
ja
inc
push
cs
xchg
in
insb
xchg
add
cmpsl
and
dec
push
hlt
xchg
orb
xorb
in
js
adc
push
loop
sub
aas
lret
push
roll
sbb
int3
mov
mov
cwtl
pop
mov
mov
or
jecxz
scas
jecxz
int
inc
dec
cmpb
repnz
imul
jmp
leave
test
std
pop
xchg
adc
int3
rolb
adc
out
cs
mov
das
push
data16
pop
lret
xor
or
lds
inc
stc
fcmovnu
sub
push
ret
inc
sbb
push
sub
add
and
cmpsb
fists
jno
mov
outsb
int3
aas
mov
add
mov
aam
lock
add
enter
pusha
bound
aas
dec
fistl
sbb
out
fwait
and
icebp
gs
push
into
nop
testl
scas
push
and
sbb
call
repnz
in
popf
mov
or
push
mov
pusha
cmp
cltd
and
out
das
xor
or
aam
xchg
add
inc
and
or
mov
popl
aam
add
pop
adc
lcall
mov
pushf
movsl
loop
or
sub
sub
mov
in
jno
adc
into
inc
int3
ja
fistps
adc
push
and
out
sub
ffree
xchg
popa
es
cmp
gs
ss
cld
ror
aam
in
inc
and
call
shrl
jg
subb
movsl
jne
inc
xchg
movsb
mov
movsl
decb
jno
pusha
rcrl
jbe
sarl
jo
dec
gs
push
idivl
lret
and
ret
sar
dec
ret
fisubl
out
repz
adc
adc
xchg
in
sbb
stos
enter
jbe
sbbb
cli
push
dec
jb
jmp
sbbb
clc
or
xor
pop
imul
add
inc
popa
nop
xchg
mov
pusha
cwtl
inc
idivb
dec
lods
mov
mov
pop
subb
cmp
sahf
mov
icebp
mov
jmp
in
or
out
lret
and
inc
adc
inc
adcb
mov
push
repz
dec
xor
lds
pop
jb
sub
rcll
testb
and
fdivr
fimull
scas
push
rorl
mov
inc
fcoml
bound
adc
push
jmp
in
mov
jg
in
inc
jmp
push
pushf
hlt
push
cmc
or
std
fwait
push
test
push
mov
mov
add
mov
movsl
xchg
dec
push
add
cmp
lods
mov
lcall
push
pop
cmp
mov
cs
cmp
add
mov
adc
loop
filds
jl
push
stos
and
jo
psllq
cmp
js
imul
jo
fidivl
mov
int3
mov
ficoml
aad
sbb
cmp
cmp
loop
dec
cmp
sbb
adc
push
jns
mov
push
pop
daa
cmp
cmpb
movsl
test
sarb
adc
lahf
cmp
ja
or
imul
mull
xchg
add
jns
mov
ja
pop
cli
and
cmpsb
mov
lods
dec
out
dec
insl
and
ss
mov
test
nop
or
clc
addl
push
lret
sarb
fsubl
testb
mov
ret
sub
adc
adc
fisttpl
mov
pop
dec
mov
mov
bnd
in
stos
adc
bound
pop
ss
sbb
or
mov
xlat
popf
pop
pusha
icebp
inc
lret
sub
sub
and
xchg
fbld
mov
cld
sbb
sub
pop
sub
gs
shll
fadd
jmp
xor
xchg
sbbl
sbb
mov
cmpsl
mov
add
btr
pop
testl
test
xchg
and
cmp
adc
jmp
das
pop
mov
test
call
stos
fs
xor
lret
adc
mov
aad
jbe
leave
notb
inc
fdivl
fcomps
mov
adc
mov
xchg
int3
fs
sub
sub
jnp
dec
mov
sbb
mov
dec
sub
xchg
mov
push
push
fadd
mov
push
xor
or
mov
or
call
pop
xchg
loop
sbb
mov
adc
dec
mov
mov
in
inc
xlat
adc
inc
push
clc
hlt
xchg
aaa
lock
mov
cltd
push
push
sbb
or
xchg
sbb
outsb
jnp
pop
or
pop
pop
mov
arpl
cmp
ret
lcall
aad
sub
testl
iret
std
inc
cwtl
sbb
mov
cwtl
fcmovnu
inc
and
cmpsb
leave
dec
mov
int3
jns
lds
mov
push
mov
adc
mov
lea
les
shl
push
cs
loope
inc
lods
jmp
or
cwtl
lods
pusha
sti
sahf
adc
xchg
and
sub
pop
dec
inc
es
push
int3
dec
pop
rclb
iret
add
xchg
or
shr
mov
popl
int
sub
xor
adc
fs
mov
dec
pop
sbb
xchg
push
fisubrl
pusha
ret
lret
loope
outsb
cmpsl
inc
shrl
cltd
ss
xor
es
ja
mov
pusha
adc
mov
dec
loopne
pop
xchg
pop
and
mov
aaa
leave
je
xchg
jmp
cmp
rorb
imul
jae
dec
xchg
rcrb
gs
mov
xor
jo
sti
mov
add
std
aaa
inc
xor
movzwl
or
adc
rorb
inc
pop
sub
cmp
push
shll
aas
mov
inc
pop
cld
stos
std
aam
jne
dec
cmp
pusha
aas
sbb
dec
push
add
aaa
adc
cmp
imul
das
scas
ret
call
testb
fdiv
mov
ds
pop
adc
mov
out
mov
popl
rolb
sub
dec
ret
dec
push
mov
mov
sub
test
scas
jle
or
shlb
mov
jno
cld
daa
ficompl
add
push
pop
call
mov
push
pop
outsl
in
lcall
adc
push
xchg
lods
mov
repnz
je
test
stos
in
and
jne
test
mov
pop
lahf
pushf
cld
pop
sub
xchg
push
sar
daa
hlt
mov
mov
cmp
and
push
stos
mov
out
les
mov
addr16
out
mov
jmp
cld
hlt
add
jl
leave
loope
mov
xchg
pop
xchg
mov
jo
dec
fiadds
pop
inc
loop
inc
out
pop
push
mov
iret
push
inc
inc
jp
fisttpl
inc
leave
outsb
inc
push
xchg
sbb
add
dec
insb
xor
dec
sahf
xorb
cmp
add
ljmp
sbb
cmpb
push
sbb
sub
sidtl
mov
nop
push
je
cmp
and
jge
in
fwait
sub
cmp
inc
mov
lret
addr16
aas
pop
xchg
loope
dec
lds
adc
mov
jae
adc
imul
filds
sub
outsl
out
fadds
mov
dec
or
lods
movsb
push
mov
into
jg
xor
test
stos
mov
mov
pop
push
scas
mov
jne
out
in
dec
xor
pop
cmp
lcall
fnstenv
xchg
xor
pusha
or
sub
cmpsl
mov
dec
lret
loop
sbb
cs
xor
dec
imul
inc
jmp
pusha
fiaddl
dec
mov
cmp
fildll
dec
daa
fstpl
daa
sbb
test
sbb
cli
adc
push
sub
test
add
sbb
push
lock
int3
orb
fistpll
xchg
dec
je
fldt
inc
mov
orl
add
loopne
sarb
fcoml
out
push
stos
adc
add
aad
push
aam
dec
mov
dec
lcall
xchg
push
sbb
insl
enter
xor
loopne
outsl
xchg
xchg
int
shll
add
mov
xor
fdivrs
xchg
stos
dec
xor
sahf
mov
mov
mov
enter
dec
dec
inc
popf
adc
insl
pop
sbb
pop
fsubl
jbe
and
les
xchg
or
scas
cmpsl
dec
cltd
arpl
ja
xor
dec
imul
dec
mov
mov
dec
xchg
mov
fwait
cmpsb
push
xchg
xchg
mov
sbb
cmp
int3
dec
push
and
jb
fs
insl
test
pop
sub
adc
mov
mov
pusha
dec
mov
xor
sbb
lock
jne
inc
inc
push
rolb
ret
pop
jp
mov
add
mov
mov
ret
cmp
sahf
das
xchg
addr16
inc
stos
movsl
outsb
int
clc
or
test
dec
movsb
pop
ja
scas
xchg
xor
pushf
jmp
pop
jb
push
jb
inc
cs
add
add
sub
int
bound
inc
cwtl
mov
clc
lret
xor
fcompl
inc
jnp
mov
dec
loop
ljmp
xor
dec
inc
lcall
and
in
push
fnsave
nop
fildll
mov
stc
push
or
or
push
fildl
loopne
xor
daa
orb
inc
fwait
add
pop
xchg
lcall
insb
pop
sbbb
pusha
loopne
scas
pop
cmp
cmpsb
xchg
add
in
addr16
je
cmp
ret
xchg
jge
mov
push
divl
stos
dec
call
mov
jge
inc
push
scas
push
inc
mov
sub
cmp
aaa
cli
add
aaa
adc
loop
add
test
dec
shlb
push
jg
sub
mov
in
sbb
mov
into
lcall
dec
call
add
pop
sbb
sub
pop
movsl
jl
mov
hlt
jns
or
sbb
hlt
bound
notl
insl
test
ret
push
es
or
in
fisttpll
adc
mov
dec
xor
das
fisttpll
out
pop
mov
mov
loopne
fisttpll
mov
iret
xchg
fwait
push
jle
xchg
stos
jnp
pusha
push
int3
negb
push
sarb
inc
in
and
mov
mov
out
fstl
stos
jb
push
mov
dec
pop
aaa
cld
or
insb
shll
sbb
push
xchg
cs
or
inc
inc
in
arpl
dec
xchg
push
xor
inc
scas
push
sub
add
sub
inc
dec
ds
jnp
xchg
mov
sub
addr16
test
add
mov
rcrl
adc
insb
sbb
dec
lods
xor
sub
dec
imul
fnsave
dec
add
adc
jb
addl
cmc
test
in
mov
push
mov
sahf
cmp
jns
add
push
dec
cmp
mov
fimull
jl
mov
ljmp
pop
jae
and
pop
or
cmp
and
and
sahf
inc
shlb
jge
jmp
leave
popf
mov
mov
inc
jge
stos
ja
inc
outsb
pop
aad
jo
js
sbb
cmc
push
call
push
lret
xchg
cmp
jbe
sub
pop
dec
xchg
cmp
loop
cltd
pusha
or
adc
mov
js
paddsb
inc
dec
in
lahf
dec
adc
out
jl
mov
shrl
rcrb
dec
int
mov
aas
fiaddl
push
imull
xor
dec
push
mov
xchg
adc
jmp
jecxz
xor
ja
scas
int3
xchg
fildl
dec
insb
push
inc
pop
add
xchg
xchg
sarb
pop
mov
sbb
cmc
xchg
mov
adc
sub
into
jle
ss
fsubl
jo
sub
mov
cmp
push
push
and
das
lods
sub
adc
jge
mov
lcall
push
pop
xchg
xor
stc
cmp
sbb
mov
cli
andb
pop
mov
movsl
sub
mov
rolb
push
int
test
cmpsb
rol
cmc
xchg
mov
inc
cmp
push
lods
shlb
inc
jmp
js
adc
arpl
xorl
mov
inc
lahf
jne
idivl
add
xor
cwtl
sbb
mov
int
data16
sbb
out
pusha
xor
push
sub
adc
add
lods
mulb
fcomps
xchg
fwait
lea
sarb
lahf
rorl
xchg
std
das
add
int3
xchg
adc
into
push
or
test
xchg
lea
xchg
inc
pop
cmpl
xlat
inc
scas
jne
aaa
jnp
ficoms
and
inc
testl
loopne
add
lahf
push
jmp
data16
dec
rcrl
out
cmp
jns
push
maskmovq
imull
pop
sbb
and
adc
dec
insb
movsl
cmp
repnz
mov
and
push
orb
rol
mov
push
ds
scas
int3
add
and
setl
lret
pop
sti
or
or
lds
adc
clc
dec
dec
mov
stc
cmp
pusha
sub
mov
pop
imul
push
gs
lock
movsb
mov
subb
xchg
scas
test
into
insb
arpl
or
sub
pop
adc
lds
xchg
mov
ja
popa
roll
mov
cmpsl
mov
cmp
xchg
fwait
iret
sub
inc
dec
repnz
xor
je
xor
lret
xor
mov
dec
adc
inc
cmc
outsl
lret
xor
xor
out
outsb
rorb
cmp
data16
cmp
jo
jbe
lods
dec
frstor
pop
rorb
scas
addl
add
xchg
cmp
lahf
mov
push
cmp
jns
xchg
sahf
lret
pop
mov
push
jle
push
pop
dec
stc
fsubs
xchg
cmp
add
xor
xchg
movsb
dec
sub
or
lds
jbe
dec
push
adc
aad
mov
mov
arpl
mov
lcall
mov
sub
cwtl
add
xchg
push
add
pop
inc
jge
cltd
sub
cli
dec
cltd
sub
into
out
outsl
shrb
sub
pop
push
in
jg
outsb
mov
loopne
js
popa
mov
cmpsl
in
sti
xor
or
test
pop
mov
add
pop
sub
add
jmp
scas
cmp
push
cmpsb
lds
bound
sbb
push
stc
in
lahf
mov
das
jns
xchg
inc
fildl
pop
iret
fprem
push
in
push
push
push
cld
mov
mov
fwait
aam
loopne
imul
xchg
sahf
or
fs
fdivrl
insl
push
gs
pop
int
icebp
push
mov
and
xchg
cmp
mov
fistpll
loope
sbb
pop
xchg
lcall
push
out
cmp
call
fbld
mov
cli
pushf
inc
movsl
cmp
test
mov
push
sub
mov
xlat
repnz
xor
jmp
mov
lods
aam
jmp
and
fcoml
adc
and
cwtl
add
mov
sbb
xor
cmpsl
lret
push
and
mov
push
mov
jg
xchg
enter
push
imul
inc
push
adc
push
mov
push
mov
pop
lcall
mov
mov
add
fwait
test
or
or
push
xchg
jle
test
pushf
inc
xchg
aas
cmpsb
cmp
call
int3
aas
lds
cmp
ja
adc
cs
and
mov
pop
xor
and
mov
gs
iret
fbld
cmp
pop
mov
popa
dec
fisubrs
cmp
test
jo
test
movsb
movsb
stc
adc
cmpsb
cmp
fiaddl
cmp
cmc
pop
mov
dec
xchg
subb
dec
or
mov
pushf
xor
cli
push
ja
xchg
call
mov
test
xor
pop
fnsave
ss
pop
mov
pushf
push
xchg
std
leave
xlat
mov
inc
ret
sbb
cmp
dec
mov
pop
test
std
xor
es
lcall
sub
subl
xor
push
shrb
pushf
subb
fisttps
mov
or
repz
push
sbb
sbb
cs
mull
test
scas
dec
jbe
dec
fs
shlb
nop
dec
les
push
out
fstpt
mov
mov
int
jmp
mov
pop
clc
mov
adc
icebp
or
pop
test
inc
nop
movsb
mov
test
repnz
shlb
insb
sub
jbe
push
xchg
loop
xor
jne,pn
mov
adcl
and
pop
cltd
sub
mov
xor
adc
push
push
push
jno
pop
mov
fs
icebp
mov
repz
jmp
sbb
js
cmpsb
add
cs
pop
jno
jo
hlt
roll
shlb
nop
mov
cmc
fcompl
jb
and
add
push
xor
cmc
into
push
loopne
pop
dec
sub
sub
aam
pusha
jle
fldcw
or
aam
and
scas
in
xchg
ds
cmpsl
aad
icebp
add
imul
movsb
mov
movsl
lods
insl
xchg
div
xlat
jae
pop
mov
push
sub
stos
push
mov
pop
jg
popf
xchg
gs
sar
loope
sbb
and
cmp
iret
sahf
push
sbb
dec
in
rcrl
es
imul
jp
mov
xor
fwait
inc
call
pop
push
adc
mov
jb
insb
jnp
in
jnp
and
mov
sti
xchg
add
shlb
icebp
nop
adc
test
push
lahf
mov
jnp
xchg
out
xor
add
push
enter
mulb
xorb
ja
das
clc
cmp
xor
in
popf
call
movsb
sbb
arpl
call
or
aas
xlat
and
mov
std
xbegin
sbb
nop
jecxz
xchg
dec
insl
lds
inc
inc
lahf
pop
xchg
mov
pop
push
xchg
inc
cmp
iret
push
rolb
or
mov
orl
es
sbb
xchg
cmp
js
cmp
orl
pop
push
stos
or
daa
notl
inc
sub
test
jmp
pop
cmp
sub
xchg
jns
pop
pop
clc
push
xor
stos
lock
fdivl
mov
mov
or
lods
das
pop
cmp
adc
xor
cmp
clc
fisttpl
cmpsb
lahf
rcrl
sub
jne
xor
cmp
xchg
lret
xor
mov
sti
stos
lret
mov
fsubrl
mov
push
jbe
xor
xor
les
sbb
cmp
clc
sub
fwait
stc
arpl
jmp
aad
mov
arpl
pop
lock
add
or
jno
xchg
mov
mov
fildl
push
loopne
imul
jg
xlat
xchg
addb
rol
push
imulb
inc
imul
daa
pushf
mov
out
hlt
dec
cltd
xlat
sbb
push
out
push
cmpsb
jecxz
mov
addr16
mov
ret
dec
mulb
fxch
jne
push
cmpsl
adc
mov
jp
pusha
xor
fnstenv
mov
into
imul
mov
iret
xchg
sarl
ficompl
mov
sti
enter
mov
or
dec
cmpb
cmpsb
adc
and
popf
aas
xor
and
cmpsb
dec
adc
push
or
filds
out
xchg
inc
out
testl
or
sub
add
xchg
bswap
fadds
push
pop
mov
sbb
cmp
mov
inc
sbb
sbb
stos
mov
or
sub
or
popa
int
mov
sarb
js
loope
jbe
loopne
pop
xchg
push
xchg
jp
push
cwtl
jne
and
and
dec
das
xorl
fs
jg
data16
inc
sti
push
push
bound
or
lds
movsb
pop
push
dec
push
nop
xor
stc
pop
js
idivl
push
mov
loope
inc
sub
cmp
imul
ret
pop
mov
outsl
push
jge
cmp
into
data16
dec
test
int
cmpsl
push
jne
loopne
pop
cli
xchg
lea
pop
add
xchg
rcr
imul
inc
daa
push
mov
xchg
inc
cmp
add
mov
jmp
in
leave
sarl
and
pop
js
xchg
or
mov
inc
ljmp
subl
xlat
mov
mov
lahf
pop
ficomps
mov
push
out
jo
or
inc
lods
adc
mov
sub
aad
xor
outsb
adc
xchg
pop
loope
mov
fsubr
mov
xchg
push
dec
or
and
sbb
jge
xor
test
cmp
push
icebp
xor
aaa
std
dec
mov
sub
push
mov
fsts
roll
jb
into
jae
pop
addr16
adc
sub
dec
push
mov
inc
inc
roll
jno
sub
lahf
sbb
ret
or
enter
inc
je
push
dec
xchg
cmpsl
mov
sbb
inc
jae
add
lret
push
jge
and
push
in
dec
mov
in
ror
sti
inc
xor
jo
inc
clc
test
lret
ss
rdtsc
sbb
sbb
or
and
mov
loopne
test
cmpsb
enter
js
and
push
inc
mov
shll
xchg
ds
aas
xchg
ss
cmc
aas
jp
xchg
lcall
out
sbb
cmp
adc
pusha
cmp
add
ret
or
sahf
inc
mov
scas
aaa
loope
sub
ja
stos
xor
daa
mov
dec
mov
lea
das
es
pop
push
cmp
cwtl
mov
in
repnz
jns
or
jns
dec
jle
or
and
mov
addr16
sub
aas
adc
test
xchg
aad
cmpsl
adc
dec
fdivrl
add
pop
cmp
cmpsb
cmp
inc
aas
add
jnp
mov
jle
and
filds
xchg
test
jo
mov
arpl
and
test
imul
dec
cmp
leave
cmpsb
fimull
mov
repz
mov
call
fdivp
inc
jo
pop
movl
stos
pop
ret
call
fdivl
pop
sbb
test
stos
fadd
popf
fldenv
addr16
cmp
pushf
sbb
or
jne
rcrl
cmp
subb
ret
jb
insl
jecxz
out
scas
cwtl
push
cld
bound
add
adc
jo
adc
iret
xchg
daa
jp
test
cmp
mov
jle
ret
mov
clc
cs
or
gs
mov
add
fsubl
pushf
jp
xchg
divl
cmp
adc
int
push
jb
into
daa
inc
sbb
sub
std
test
fwait
xor
jno
jle
outsb
lret
aad
aas
jmp
mov
shlb
xchg
xchg
xor
out
fiadds
push
adc
out
movsb
gs
aas
fidivs
xorl
pop
or
jo
or
addr16
sub
lock
add
pop
outsb
daa
fldpi
and
mov
pop
xchg
adc
adc
repz
mov
dec
in
loop
xchg
fidivrs
rcrl
mov
cmpsl
cmp
mov
mov
mov
pop
sbb
pop
mov
ds
xchg
xor
in
adc
or
jl
cmp
pop
clc
or
mov
xchg
push
cmp
adc
sbb
mov
jns
push
mov
fcoms
nop
add
icebp
cmc
jbe
ror
pop
fcompl
sahf
adc
mov
cmp
inc
mov
jp
aas
loope
mov
xchg
push
vrcpss
jb
mov
mov
push
frndint
pop
jmp
orb
daa
mov
insb
or
repz
ss
mov
sbb
hlt
arpl
add
imul
les
std
add
pop
jge
pop
cmp
and
movsl
dec
mov
jl
cmp
ret
sahf
xchg
pop
inc
xlat
cmp
sub
lcall
pop
xor
sub
in
stc
xchg
add
fisttpl
insl
es
mov
aaa
xor
dec
test
mov
sub
or
dec
jle
aaa
push
aam
data16
in
aam
in
pop
pusha
adc
cltd
adc
sbb
aam
pop
or
xor
stos
xlat
pop
jns
mov
jno
insb
push
mov
jg
mov
mov
daa
inc
jo
xor
inc
sub
loope
lahf
cmp
mov
xor
and
call
std
push
iret
or
jns
push
add
pop
in
in
push
push
xchg
notl
cmp
jmp
loope
cwtl
push
push
mov
cld
jp
adc
jge
ja
xchg
xor
inc
sub
sbb
mov
lods
sbb
cmp
in
mov
test
cltd
int
push
and
mov
dec
mov
xchg
mov
aas
stc
fucompp
mov
outsl
pop
into
bound
cli
or
push
pop
add
ljmp
leave
cmp
jne
icebp
sbb
lret
xor
xlat
aad
sbb
leave
popa
iret
pop
xchg
push
or
mov
sbb
addr16
push
sbb
testl
repz
jecxz
subl
aaa
pop
clc
cmp
bound
mov
loopne
pop
setnp
pop
lret
lret
push
setle
cli
cwtl
push
dec
iret
add
cmp
popf
and
mov
imul
sar
and
and
mov
sbb
icebp
xchg
sbb
es
sub
inc
je
inc
xchg
sub
fnstsw
pop
jb
ss
iret
or
mov
stc
xchg
push
push
adc
lahf
fisttpl
mov
jmp
popa
popa
test
xchg
mov
jne
shrb
and
adc
shrb
dec
jae
insl
outsl
add
leave
nop
lret
fisubrs
xchg
mov
push
test
xchg
fmuls
fisubl
or
adc
loopne
add
imul
dec
sti
add
leave
cltd
xchg
push
cmp
xor
dec
sub
add
mov
insl
cltd
jb
cmp
mov
fildll
inc
sub
std
pop
insl
mov
cmpsb
push
mov
and
aas
jnp
and
pushf
sub
dec
add
cld
je
cmpl
push
aam
inc
jmp
adc
out
mov
or
xor
inc
add
scas
xor
mov
xor
addl
inc
xchg
xchg
aas
in
xor
or
sbb
cli
jno
ljmp
lret
inc
pop
popa
mov
stos
rep
lods
andl
jo
adc
leave
mov
xchg
dec
setle
or
push
stc
xor
jecxz
jno
add
jb
push
push
mov
out
call
sti
lcall
cli
add
adc
in
int
loop
or
rep
aaa
cwtl
ss
ja
cmp
scas
dec
add
xchg
xchg
sub
ds
fisubs
adc
mov
jb
sbb
xor
leave
lods
loopne
ret
inc
push
mov
push
jmp
sarl
ret
xor
imul
ds
jl
jle
pusha
xor
aad
lret
pushf
notb
mov
aam
mov
aas
add
mov
imul
les
or
imul
fs
pop
shll
shrb
leave
sti
cld
sbb
push
inc
in
imul
out
and
dec
mulb
cmp
push
lds
daa
shrl
mov
xchg
lret
push
fs
mov
adc
sbb
xor
adc
lods
or
mov
pop
bound
xchg
out
add
push
lds
pusha
xchg
jno
fidivrs
jns
xchg
sbb
cmpsb
push
lods
xor
inc
fidivrs
inc
jns
adc
subb
jl
cwtl
lods
jo
xor
stc
or
dec
out
mov
sar
and
sub
mov
daa
in
ret
lods
mov
inc
xor
adc
arpl
icebp
inc
sub
es
out
sub
int
fs
lea
ror
lock
test
lret
ret
mov
add
inc
jge
dec
in
test
stc
dec
push
ja
dec
or
das
xor
push
call
jnp
leave
jae
repnz
jl
insl
fisubl
mov
fdivrs
pushf
or
jmp
pusha
ret
dec
adc
jecxz
mov
lds
aad
lea
mov
es
cltd
pop
add
inc
cltd
cmp
and
mov
jae
lods
je
adc
jle
inc
cltd
cwtl
int
sbb
mov
and
leave
mov
jp
popf
mov
cmp
jns
and
repz
push
ds
sub
jle
les
mov
fwait
mov
dec
mov
jp
leave
xchg
adc
pushf
pop
lods
fwait
leave
mov
pop
pusha
cmpsl
push
imul
lcall
pop
ss
repz
jmp
dec
dec
pushf
loop
roll
incb
xor
sbb
bound
dec
call
sbb
lahf
mov
pop
out
mov
cmp
xor
int
push
xchg
ret
mov
mov
aas
scas
xlat
mov
push
push
daa
mov
jg
fmulp
xor
es
fstpt
in
and
insl
push
cltd
cwtl
sarb
mov
aaa
lods
pop
add
dec
jmp
fstl
pop
sbb
xchg
or
jae
stc
stc
mov
xchg
ds
lods
adc
add
push
out
and
outsl
int3
push
xchg
ljmp
and
movsl
jg
ficoml
push
jno
jae
sub
fisubrs
lds
mov
sarl
dec
test
xchg
in
fldenv
sbb
pushf
std
repnz
xchg
les
or
xchg
sti
ja
sub
mov
js
sarb
mov
sbb
mov
lock
mov
xchg
movsl
test
lea
jne
mov
es
movsb
jbe
mov
dec
xor
cmovs
ret
mov
or
das
mov
xchg
or
mov
mov
ss
sub
jne
shll
xor
and
into
sbb
fisttpll
jae
pop
push
xor
pop
cmp
mov
sarb
mov
and
fwait
jmp
cltd
ret
bound
jbe
cmp
out
je
lock
xchg
pop
nop
cli
sbb
push
addb
les
add
push
imull
jmp
loopne
mov
push
fsts
test
dec
ss
xor
sbb
pop
cmp
lahf
add
dec
jns
dec
inc
cmpsb
das
outsb
pop
xchg
rcll
mov
out
sub
mov
inc
push
rorb
mov
and
repz
or
pop
mov
ja
push
dec
stos
aaa
mov
xor
aad
aaa
bnd
mov
add
stos
data16
push
mov
shr
outsl
scas
jecxz
jns
aam
aaa
adcb
popf
inc
pop
sti
movsl
mov
add
lret
in
pop
fsubs
ret
mov
hlt
sub
fstps
inc
lcall
and
flds
loopne
or
xor
test
jb
xlat
bound
xor
mov
or
cmp
mov
pop
movsb
adc
loop
fstps
loope
sbb
push
push
inc
mov
cmp
jns
xchg
sub
push
pop
arpl
stos
out
cmp
imul
lahf
jno
je
repz
jg
cmpsl
xchg
dec
mov
hlt
jmp
mov
and
adc
lock
mov
sub
and
mov
jno
cmp
in
ljmp
add
daa
or
stc
fs
mov
popf
xor
mov
pop
xor
idivl
pop
add
pop
inc
inc
xchg
jb
jae
mov
cmc
lahf
add
cmp
shll
and
mov
mov
sub
stc
xrelease
push
and
push
cmc
pop
or
jo
pop
sub
jmp
lret
sbbl
outsb
stos
cwtl
cmp
or
shlb
daa
jmp
mov
loop
imul
cs
mov
xchg
into
inc
rcll
xor
sbb
in
cmp
mov
adc
stos
dec
scas
sbb
negl
sub
std
mov
roll
inc
mov
or
add
push
fs
mov
adc
and
sbb
cmp
pop
dec
int3
mov
push
fwait
push
push
push
out
out
out
push
jo,pt
cmp
shl
nop
and
pop
insl
xchg
lret
pop
adc
adc
sahf
mov
rcll
insb
stos
fwait
cmp
sub
inc
loopne
and
mov
adc
sahf
int3
sahf
sbb
stc
push
leave
jae
pop
or
cmpsb
pop
xor
xchg
fnstsw
push
adc
cld
into
movsb
stos
mov
lods
and
fists
add
add
dec
nop
jg
stc
dec
inc
loopne
or
xchg
imul
sub
jne
xorl
inc
and
adc
cmpsl
fcomip
xchg
and
subl
xchg
dec
outsb
fcoml
mov
scas
add
or
xchg
adc
sbb
out
xor
out
fsts
mov
mov
lea
arpl
sub
inc
sub
adc
cmp
lods
je
add
daa
adc
mov
mov
mov
std
xor
addr16
jmp
lods
mov
ds
stos
jle
add
xlat
in
shlb
jo
xor
adc
inc
mov
fs
sbbb
sbb
es
imul
sbb
mov
mov
roll
pop
jns
dec
aas
imul
cmp
inc
stc
mov
ret
test
jnp
dec
cmp
jb
or
ret
outsl
cli
adc
ja
cmp
cmp
add
xchg
cmp
lret
cltd
in
cs
imul
fbld
mov
ja
fcompl
mov
xorb
leave
sar
mov
cmp
dec
mov
xchg
jle
add
cli
jns
jge
cmp
lahf
fcomi
es
mov
sar
push
pop
fs
push
notb
add
add
out
cwtl
mov
cmc
ja
mov
or
sub
les
jge
sbb
add
sub
sbb
enter
xchg
adc
pop
inc
jge
inc
cs
arpl
out
cmpsb
mov
imul
test
and
or
roll
sti
out
sbb
aad
aam
addl
inc
loopne
mov
mov
ljmp
push
enter
leave
stos
ret
js
xchg
lods
dec
mov
mov
sub
sbb
push
outsb
cmp
jae
mov
pop
addl
xchg
rcrb
sar
outsl
andl
test
adc
cmp
pusha
pop
stos
fmull
mov
out
rolb
into
inc
push
out
xchg
pop
xorb
dec
sbb
lods
push
int3
daa
xor
andl
pop
mulps
cmp
sarl
jb
fdivrs
xchg
push
or
movl
jg
inc
mov
push
scas
xor
mov
adc
and
in
sbb
pusha
ss
call
xlat
push
fucomip
hlt
mov
loop
xchg
call
xor
mov
add
adc
add
xchg
fbstp
dec
aad
mov
mov
inc
mov
data16
scas
mov
aad
xchg
adc
cmp
push
push
lret
call
stc
mov
rol
sbb
sbb
scas
hlt
xchg
cwtl
pusha
mov
ss
push
xchg
repnz
inc
and
lds
or
pop
xor
adc
pushf
insl
sbb
jne
movaps
mov
clc
adc
bound
mov
add
add
ret
xorb
test
mov
daa
pusha
jle
sarb
cmp
cmp
cltd
jmp
test
mov
js
mov
cmp
addb
rcrl
pop
xchg
ret
mov
aas
xchg
xlat
movsb
imul
inc
add
aam
adc
clc
fsub
clc
mov
pop
out
push
rcll
pop
out
aad
adcb
sub
mov
ljmp
sbb
pop
leave
scas
out
into
sbb
jmp
fldcw
cltd
pop
imul
sbb
scas
add
sti
push
aas
test
loope
out
push
mov
inc
sbb
lret
add
cmpsb
mov
sarb
dec
aaa
sbb
fnstenv
sub
add
loop
add
jg
test
jns
or
cmc
mov
adc
xchg
pop
mov
mov
or
enter
mov
inc
push
sbb
addr16
adcb
push
push
push
sub
call
push
in
push
or
cmp
fwait
iret
stc
jns
mov
xor
jmp
add
jp
pop
and
popl
testb
mov
shr
mov
cli
add
sub
movsb
les
faddl
mov
adc
cwtl
lods
sbb
jecxz
jno
adc
push
jb
mov
lock
cld
insl
jmp
stos
or
xchg
xor
testb
jle
in
loop
xchg
mov
mov
shlb
pop
lds
dec
lret
bound
imul
pop
insl
fsubl
dec
test
ret
mov
rcrl
cmp
sub
inc
pop
int3
sbb
sbb
cmp
pop
jb
add
adc
sub
fwait
sub
pushf
dec
lret
dec
mov
sbbb
or
int
adc
nop
std
js
sbb
mov
in
movsb
fbstp
mov
cmpl
jae
leave
lret
jnp
inc
inc
xor
stos
xor
inc
lret
xchg
lods
test
and
outsl
sbb
and
test
notb
pop
inc
fadds
xchg
ds
adc
push
cmpsb
stos
cmp
add
lcall
jmp
fcmovnb
jb
shrl
xlat
out
mov
divb
or
adc
hlt
outsl
cwtl
push
in
or
add
adc
xor
or
ss
cmpsl
sub
cmpsl
bound
movsl
in
sbb
fwait
add
jns
scas
jne
loopne
repnz
or
xor
repz
ja
inc
loop
lret
sbb
leave
sub
jb
or
xchg
mov
sahf
jo
sar
mov
inc
test
pop
in
stos
insb
mov
out
sahf
fidivrs
push
push
in
push
lret
fcomip
cmp
mov
dec
push
mov
xor
xchg
mov
out
fwait
pop
mov
pop
cmc
pushf
xchg
jp
mov
das
dec
xchg
les
mov
out
into
mov
dec
call
rolb
jne
add
mov
aas
and
or
mov
xchg
adc
fsts
mov
sub
inc
fs
sub
in
stos
or
inc
mov
adc
sub
lock
test
lret
fdiv
and
cld
shrb
push
xchg
and
mov
ret
aaa
cmpsl
pop
into
fs
fcmovne
dec
daa
pop
fldl
insb
mov
cltd
mov
cs
mov
adc
mov
jecxz
and
xchg
inc
stc
fnstenv
fdivs
outsb
and
dec
and
lcall
add
aad
aaa
sub
out
enter
iret
jbe
push
cmp
aaa
xor
cmp
adc
rol
jbe
xchg
call
in
data16
jl
mov
jno
icebp
mov
sbb
pop
mov
loope
int
addr16
in
int3
ljmp
sarl
into
inc
ret
loopne
sub
sub
mov
addr16
jp
mov
adcb
mov
les
clc
xchg
inc
mov
inc
xchg
inc
daa
sbb
jg
outsb
ds
mov
and
shrd
xchg
xchg
pop
mov
xor
popf
mov
iret
rcll
cmp
inc
rep
lret
jmp
in
mov
cmc
gs
and
pop
aas
xchg
jbe
sti
mov
lea
xor
sbb
lock
dec
mov
mov
xor
cs
dec
and
mov
mov
cmp
lret
push
or
xor
jmp
cltd
lret
popf
shrl
pop
xor
repz
xchg
ret
repz
icebp
or
push
sbb
pop
sub
add
pop
push
fcmovu
adc
lds
in
add
or
shlb
jle
nop
ja
data16
aaa
repnz
push
fdiv
mov
mov
inc
inc
iret
cwtl
xchg
lock
jae
lret
andb
div
imul
dec
fs
div
lods
pop
jns
cld
mov
int3
dec
inc
ss
add
rolb
push
mov
mov
pop
lret
xor
insb
sbb
dec
fdivl
mov
adc
sbb
add
cmp
lods
ret
pop
lods
cld
push
lcall
or
push
adc
jae
xchg
and
lds
cmpsb
stc
aaa
jne
or
enterw
shl
out
pop
lahf
and
cmp
inc
lock
mov
pop
sbb
xor
mov
and
mov
inc
call
icebp
jecxz
xchg
sbb
daa
sahf
inc
cmp
cmp
rorl
rcrb
cmp
arpl
movsl
push
call
sub
push
je
xchg
inc
inc
addr16
pushfw
lods
sbb
dec
adc
pop
inc
out
mov
enter
jb
adc
inc
cmp
scas
pop
xor
stc
xchg
pop
popa
pushf
shll
adc
add
xor
dec
mov
dec
insl
andb
jae
and
aad
stc
and
pop
dec
lock
nop
in
std
mov
stos
loope
xchg
xchg
ja
xor
sbb
cmc
push
enter
inc
cld
mov
cli
pop
inc
int3
ljmp
sti
and
movsb
add
mov
dec
movsl
ret
orl
roll
and
icebp
xchg
sbb
jns
jno
jb
out
xchg
xchg
sbb
cvtdq2ps
lock
adc
pop
cld
inc
cmp
pop
push
fs
mov
movsb
inc
jl
push
scas
xchg
mov
mov
decl
jg
or
mov
es
scas
lret
pusha
out
lods
sub
das
ljmp
mov
and
mulb
orl
mov
mov
arpl
les
in
data16
dec
out
into
cmpsl
hlt
mov
fldcw
push
cmp
std
cmp
add
cmp
dec
xor
movsl
inc
popa
scas
arpl
cmp
out
stos
cmp
cwtl
mov
roll
dec
sbb
test
push
sub
in
aad
mov
js
insb
std
dec
cltd
jae
or
gs
mov
mov
cmp
lcall
jle
ja
movsl
sbb
insl
inc
imulb
inc
cs
scas
jbe
cmp
addr16
stos
push
add
imul
adc
dec
imul
xchg
push
jbe
cld
inc
mov
xchg
in
sahf
xor
mov
stos
fdivrs
or
sub
cmp
scas
mov
es
daa
xor
xchg
adcb
outsb
push
mov
popa
mov
push
mov
adc
xchg
fdivs
repz
daa
in
xor
aaa
adc
push
insb
cmp
dec
movsl
xor
or
stos
data16
push
add
call
sbb
push
ja
movsb
cmp
jecxz
fiadds
or
scas
test
fcomps
push
push
dec
popf
mov
xor
or
inc
rcrb
adc
sahf
mov
shll
adc
call
mov
or
inc
cwtl
xor
adc
es
push
push
mov
sub
sub
loopne
jmp
and
lods
in
nop
add
fwait
jb
cmp
adc
xchg
out
sub
lods
adc
pop
sarb
int
loop
sub
mov
not
push
mov
sti
lds
sub
repz
aas
inc
mov
daa
or
int3
iret
push
mov
cli
sub
js
adc
cmp
fsts
mov
mov
fptan
pop
inc
mov
sub
adc
mov
or
inc
test
inc
and
cld
loope
in
jge
mov
leave
inc
jne
adc
pop
std
iret
jmp
push
pop
subl
pop
ret
xchg
or
pop
sub
mov
aam
xchg
sbb
xchg
outsl
cmp
arpl
mov
sbb
add
outsl
lods
mov
testb
jno
dec
jl
mov
stos
sbb
aaa
xor
test
jbe
nop
aam
push
and
jne
pushf
xor
cmc
adc
push
or
lock
xor
pusha
rclb
popa
cs
mov
mov
xor
mov
cmp
pop
iret
push
cli
push
stos
cmp
pop
add
sbb
and
sbb
jns
in
xlat
lock
adc
push
sub
sbb
xchg
xlat
fsubs
sub
mull
test
inc
loopne
jne
cmp
lods
test
and
ret
mov
lcall
movsl
cwtl
jno
mov
ja
pop
jnp
push
scas
loope
xor
out
or
shlb
push
and
xchg
pushf
and
adc
adc
adc
push
xchg
sub
xchg
or
add
lcall
faddl
aaa
jnp
xor
lods
mov
inc
lock
cmpsl
int3
std
push
mov
mov
xor
cld
dec
pop
sarl
rcrl
sub
ja
iret
xor
fnstcw
jno
push
ljmp
loope
push
ficoms
std
xor
dec
insb
stc
daa
cmp
fidivrl
outsl
repnz
mov
mov
nop
xor
dec
inc
cld
or
cli
sub
cmp
repnz
or
add
stc
nop
loope
fdiv
es
lret
xchg
ret
cmovs
pop
inc
sbb
push
push
daa
lcall
in
mov
inc
jl
mov
stc
movsl
add
mov
aam
loope
jp
aam
add
pop
and
push
int
test
cwtl
aad
push
jmp
cmp
rorl
jns
jb
jae
sbb
dec
add
sub
int
movl
cmp
inc
add
movsb
les
icebp
fsubrl
out
aam
sbb
jp
clc
sahf
lret
out
push
insb
pop
sub
sbb
inc
jno
mov
ss
cmp
xchg
decl
ss
inc
sti
inc
mov
sub
pop
mov
jns
cmpsl
mov
hlt
call
daa
data16
test
jno
sbb
in
sub
sbb
mov
out
ror
cmpsl
int3
xor
inc
fisubrl
sbb
out
mov
inc
jl
fmull
sahf
xchg
cwtl
push
repnz
icebp
sti
iret
negl
nop
inc
rcr
je
inc
imul
pop
cmp
xchg
jmp
stc
push
test
ficoms
xchg
pushf
xor
push
push
dec
sbbb
js
add
xchg
jge
inc
into
jbe
rorb
outsb
out
jl
jecxz
fisubrs
push
lods
repz
iret
adc
adc
inc
dec
xchg
sub
adc
lret
shl
mov
loop
push
cs
or
jge
mov
cmp
cmp
pusha
push
add
test
inc
sub
push
push
loope
xchg
popf
jmp
out
shlb
mov
movsb
jnp
pusha
xor
data16
adc
scas
gs
loope
jmp
add
xchg
insb
addr16
push
xchg
mov
addb
sub
andl
xorl
sbb
mov
xchg
or
cmp
hlt
push
nop
mov
sub
out
xor
dec
sbb
mov
int3
daa
sub
sub
and
lret
xor
pop
push
add
fisttps
sbb
xchg
push
fmul
in
int3
ja
sub
je
lcall
subl
fcompl
jmp
mov
repnz
repnz
sbb
jb
addl
pop
mov
mov
jmp
int3
lods
adc
add
mov
repnz
jle
inc
jmp
ja
pop
insb
mov
test
xor
push
mov
and
mov
mov
jae
sbb
ret
pop
mov
mov
clc
js
mov
int
add
dec
dec
dec
dec
pushf
cmp
into
adc
loopne
fisubs
out
or
jecxz
and
xor
pop
mov
jbe
fnsave
inc
insb
sub
int3
or
cmpsl
int3
pushf
push
xchg
pop
pop
int3
aad
sbb
xchg
jo
sbb
cmp
ljmp
out
testl
aaa
test
ss
movsl
mov
cmc
sbb
cmp
iret
pop
mov
in
add
aas
inc
orl
notb
xor
arpl
xchg
push
inc
bound
mov
bound
aas
fmull
ljmp
hlt
nopl
xor
pop
and
fprem1
in
jg
enter
repnz
movsl
dec
pop
insb
dec
jo
rcr
enter
stos
push
movsb
sbb
insb
mov
pop
stos
add
inc
xchg
dec
shrb
inc
push
add
or
or
xor
test
cmp
push
cmp
adc
fwait
sub
lahf
xor
add
add
lret
xchg
push
lahf
inc
and
jns
mov
movsb
sub
fbld
ret
shll
and
push
insb
js
mov
mov
cmp
scas
fsubr
pop
cmpb
and
das
push
mov
xchg
call
xlat
ljmp
int3
scas
fiaddl
std
cmp
aad
jmp
lret
cmpsb
pushf
adcl
and
scas
pushf
hlt
pusha
mov
dec
ljmp
jp
mov
in
adc
mov
ds
outsb
sub
outsb
sub
jg
jmp
scas
loope
xchg
js
add
lret
outsb
sbb
mov
xchg
filds
sub
dec
stc
inc
std
in
dec
jb
add
inc
repz
ret
sbb
jmp
loope
sub
mov
sar
and
test
test
jle
mov
sti
ret
and
jne
cmp
mov
cmp
jle
je
shll
mov
int
sbb
cmp
cmp
push
mov
inc
out
xchg
push
adc
dec
lcall
test
cmp
push
movsl
ret
xor
lret
or
mov
jne
and
bound
cmp
adc
aam
mov
div
inc
inc
push
outsl
mov
in
push
sbb
inc
rorl
dec
pop
ja
jmp
imul
out
pusha
lods
es
out
pop
scas
nop
sub
scas
pusha
mov
pop
push
sub
mov
and
out
adc
addr16
fsubs
add
push
rol
fcoml
repnz
sbb
enter
jb
push
cld
movsl
addr16
scas
pop
cmp
movsb
divl
int3
lods
clc
or
rolb
nop
mov
repz
fld
push
jnp
icebp
xchg
ret
ja
lock
in
popf
jb
or
mov
jge
test
rclb
stos
iret
xchg
insb
xor
add
into
sub
fnstenv
idiv
cmp
icebp
cmp
jg
scas
rcrl
sti
pop
mov
cmpsb
cwtl
stos
dec
adcl
jno
popa
ffree
loope
push
push
mov
adc
pop
pop
lret
data16
loope
adc
mov
hlt
fisubs
pop
and
push
dec
cld
insl
adc
sbbl
lahf
lods
mov
clc
lds
cmp
xor
cs
pop
adc
js
cmp
subl
jmp
cmp
lea
enter
pusha
add
in
sbb
mov
movsb
mov
mov
mov
subb
ret
imul
push
push
inc
fs
push
outsb
aaa
or
adc
mov
imul
out
cwtl
push
lods
cmp
sbb
mov
mov
jecxz
pushf
sub
sbb
stc
push
movsb
mov
adc
scas
call
out
daa
jnp
push
fdivrl
scas
daa
cmp
mov
pop
xchg
jge
xchg
add
movsl
popf
adc
sbb
push
cmpsl
test
jnp
jae
mov
call
ror
xchg
mov
mov
pop
or
int3
out
ud0
gs
shlb
cltd
xor
fildl
pop
push
dec
cmp
mov
out
lret
push
bound
ds
pop
pop
ret
mov
cli
mov
mov
inc
push
jge
pop
mov
push
scas
test
ret
mov
orl
and
pop
xor
adc
or
sbb
aad
inc
pop
in
rcr
in
mov
cmpsb
jge
negb
sarl
cmc
jg
idivb
sbb
cmp
sarl
sbbl
xchg
mov
inc
pushf
xchg
mov
clc
mov
aam
mov
aas
dec
push
cld
movsb
mov
pop
insb
xor
lods
cmp
int
inc
scas
les
outsb
xchg
xor
pop
mov
aad
jmp
xor
movl
pop
inc
test
mov
xchg
adc
xlat
int3
mov
andl
pop
add
pop
jo
testl
loopne
icebp
xor
loop
or
xchg
fwait
pusha
movsb
pop
fcompl
sbb
xor
insb
lock
and
std
dec
enter
imul
lahf
ficompl
mov
out
push
insb
jb
push
or
add
sbbb
pop
loopne
xchg
mov
flds
clc
push
sti
and
leave
inc
fbld
out
pop
and
leave
pop
xchg
lea
push
xor
fsts
cmpsl
loope
sbb
fsubrp
lds
and
idivb
nop
cmc
push
jno
inc
rcr
cmp
pop
pop
push
or
pop
loopne
sub
cmc
jl
pop
cmp
repnz
pop
mov
mov
xor
movsb
xorl
test
adc
or
je
mov
fcomp
int3
jl
leave
scas
xor
mov
xchg
xchg
cltd
sbb
lahf
jnp
mov
mov
leave
add
mov
jge
dec
fisubs
pusha
or
and
incb
in
xor
sti
and
sub
out
cmpsl
cmp
dec
orb
sub
fsubrp
mov
add
cmp
rcll
out
adc
mov
xchg
jle
push
lcall
mov
jecxz
xchg
out
lea
inc
ffree
mov
cmp
insl
fildl
pop
sbbl
fcomps
mov
xchg
mov
mov
sahf
cmp
cltd
jmp
aas
sbb
sbb
jle
xchg
jmp
pop
das
cmpsb
iret
cmpsl
rcrl
mov
cmpsl
leave
push
icebp
xor
out
xchg
pop
cmp
mov
into
fisttps
push
xchg
lret
js
mov
in
or
nop
mov
out
push
insb
push
sti
mov
icebp
push
mov
dec
sbb
and
scas
roll
sbb
inc
xchg
sbb
ret
lods
out
test
sbb
int3
jmp
call
add
nop
or
mov
loope
cld
cmc
pop
pop
push
or
test
push
dec
insb
pop
call
sub
mulb
sub
dec
push
aam
and
inc
cwtl
cmp
cmp
mov
testb
call
out
in
sub
testb
icebp
popa
cmp
xchg
push
test
push
test
stc
xor
std
imul
pop
add
rcll
mov
mov
jo
test
sbb
pusha
or
fldt
mov
ja
or
mov
sar
pop
addr16
scas
and
int
dec
imul
xchg
jmp
icebp
popa
dec
inc
outsl
mov
mov
mov
push
pop
outsl
outsb
test
inc
cwtl
mov
push
fisttpl
xlat
pop
sahf
popa
inc
outsb
stc
jb
enter
pop
stos
mov
aas
dec
int
mov
mov
lods
jbe
push
ljmp
jmp
inc
scas
aad
clc
dec
pop
and
dec
sbb
jmp
push
adc
repz
aas
mov
cmpsl
stos
insl
test
jo
xchg
movsb
and
pusha
and
jecxz
push
mov
sbb
and
dec
sbb
out
jp
ja
xchg
sbb
pop
sub
or
or
fldt
loopne
jecxz
pop
pop
push
pop
push
pop
imul
xor
hlt
mov
cmp
push
stos
jnp
arpl
std
pop
mov
ljmp
cmp
rolb
loope
scas
sub
aam
mov
xchg
fcompl
sbb
pop
and
rcrl
mov
or
push
or
shl
ret
xchg
mov
dec
sahf
cmp
add
cmpsb
ja
adc
jno
and
sahf
jae
lret
popf
lea
ret
mov
adc
pop
ja
popf
pop
cmpsl
movsb
addb
ret
je
je
hlt
xchg
mov
nop
sti
lds
mov
clc
rol
lcall
pop
hlt
nop
nop
cmp
and
cmpsb
push
add
jae
sub
cmpsb
loop
pop
xor
and
lret
int
jmp
add
inc
outsw
out
stc
loopne
int3
and
enter
negl
loop
pop
mov
imul
add
mov
into
loopne
fsubrs
popa
iret
sub
dec
dec
ds
call
cmp
jmp
stos
leave
popf
js
outsb
lods
jno
adc
fildll
xchg
and
stc
les
das
cmc
loop
lret
out
add
push
ljmp
add
cwtl
sub
imulb
mov
enter
out
push
jno
push
pop
cli
sti
sub
fnop
inc
call
hlt
in
or
pop
in
loope
aad
xchg
or
or
testl
cltd
out
aas
movsb
add
dec
in
fmull
insb
scas
subl
xchg
lods
jmp
int
jg
pop
imul
fidivrs
sbbb
jbe
mov
xor
popa
enter
pop
inc
add
les
insb
push
out
xchg
xor
stos
and
and
scas
cmp
sbb
les
aaa
imul
dec
in
push
sbb
mov
push
sti
fildl
xchg
repnz
mov
adc
daa
and
lret
hlt
adc
movsl
repz
pop
fisubl
sbb
mov
cmpsb
shrl
jno
mov
inc
lods
movsl
inc
int3
scas
sbb
adc
mov
cmp
popa
je
ret
or
sarb
xchg
cmc
push
sub
out
hlt
mov
mov
out
pop
push
and
dec
ret
cmpsb
mov
xor
negl
ljmp
aaa
pop
adc
movsb
fstps
dec
fsubrs
sub
inc
jecxz
mov
lret
test
fstpl
inc
sub
sbb
dec
sbb
stos
sti
imul
insb
xor
mov
pop
jbe
or
cmp
pusha
stc
les
mov
fcmovb
cld
jne
lods
push
retw
sub
cli
scas
jno
jo
xchg
sub
mov
loope
mov
push
or
cld
scas
add
xchg
push
dec
test
pop
rclb
adc
lcall
mov
inc
fistpl
bound
sbb
vpunpcklqdq
in
cltd
pusha
pusha
mov
shrl
out
mov
dec
sub
mov
sbb
je
mov
xchg
popf
or
movl
sbb
mov
sarb
aaa
lea
sub
pop
lods
sbb
pop
cmpl
in
js
std
dec
push
lret
aaa
jmp
push
mov
pop
stos
inc
test
pop
push
push
sub
out
ljmp
arpl
loop
add
or
idivb
mov
nop
mov
or
loopne
fwait
jge
out
pop
imul
adc
lahf
rcrb
jle
in
enter
loopne
mov
push
cltd
inc
push
out
in
adc
mov
xchg
movsb
cltd
lcall
lahf
lods
jge
adc
or
shrl
fwait
mov
mov
adc
or
in
hlt
ret
dec
cmpsb
or
cld
mov
and
das
push
jl
test
jne
imul
and
ljmp
jo
push
push
fs
shl
xor
hlt
sahf
dec
pop
outsl
dec
pop
lret
push
mov
dec
cmpsb
pusha
lret
nop
push
lea
mov
ret
sub
add
jl
adc
inc
adc
fdivrs
adc
jl
je
adc
dec
aaa
mov
dec
adc
int3
fldt
xchg
add
pop
jno
xchg
mov
add
pop
outsl
insb
pop
mov
mov
sbb
imul
pop
arpl
scas
mov
ja
ds
or
je
mov
or
xchg
dec
dec
lret
pop
aam
cltd
mov
outsl
xchg
and
jo
shlb
mov
adc
decb
stos
lahf
add
jp
xchg
xchg
jnp
rcrb
fisubrs
pop
dec
lret
jle
call
test
mov
ficoms
jle
lahf
push
mov
mov
push
push
sarl
bound
loop
pop
mov
jmp
cmpsl
movsl
xchg
sub
cmpsl
cmp
rclb
dec
vsubpd
or
or
or
arpl
mov
fwait
lcall
cmp
cmc
mov
fmuls
add
out
lret
push
jg
repnz
sub
and
fldcw
imul
mov
or
rclb
out
push
loope
inc
push
jmp
shrl
mov
loope
pop
out
and
sbb
icebp
adc
push
and
repz
cld
add
movsl
sub
insl
xchg
or
hlt
addr16
sub
out
dec
je
clc
push
out
mov
fdivs
or
dec
push
fsub
sbb
xor
pop
adc
mov
or
push
dec
das
adc
aas
mov
adc
and
sub
popa
testb
sbb
sbb
in
and
dec
int
mov
decb
or
fstpl
pop
mov
popa
icebp
test
pop
out
dec
pusha
jp
andl
inc
addr16
cmp
dec
adc
sub
cmp
adc
test
mov
loop
inc
add
lcall
lahf
xor
and
push
pop
sub
pop
cmp
addr16
lods
mov
jo
and
sub
mov
inc
loop
push
dec
mov
sub
jno
pop
loop
addr16
int
push
aad
pop
cmpl
inc
mov
dec
cmp
dec
and
mov
push
and
lock
jnp
or
sub
mov
xchg
or
xor
xchg
add
push
add
cmpb
mov
add
pop
mov
iret
or
sbb
lcall
sub
dec
push
fdivs
or
lds
inc
add
cld
leave
push
push
fld
or
ljmp
rol
fdivrl
push
fsubrs
inc
pop
xchg
cmp
into
push
inc
mov
cmp
mov
daa
jl
xchg
inc
mov
inc
outsb
fld1
pop
xchg
mov
xor
add
dec
mov
mov
mov
mov
mov
mov
mov
loopne
cmpb
sbb
fstpt
jne
ret
shll
inc
push
push
inc
in
cmp
jnp
aad
rclb
mov
add
and
aaa
push
xchg
fwait
jle
gs
icebp
mov
int3
pop
adcl
filds
idivb
movsb
fnsave
push
lahf
ss
mov
inc
mov
dec
imul
dec
adc
popa
xchg
add
out
loop
out
push
mov
or
out
imul
push
fbstp
mov
stos
or
movsb
pusha
sbb
cmp
out
sub
push
scas
aam
popf
in
add
loopne
push
test
mov
fsubr
arpl
in
arpl
daa
cltd
cmp
fs
bound
mov
loopne
sbb
sbb
ljmp
aas
insb
movsl
hlt
push
and
and
jle
ffreep
in
cmp
jnp
out
loopne
ret
dec
ss
fbstp
and
sub
sbb
scas
dec
mov
mov
fiaddl
push
adc
xorl
aaa
es
push
dec
sub
mov
xchg
int3
push
mov
sbb
mov
shll
fisttps
pop
cmp
cmpsl
adc
xchg
loopne
mov
dec
mov
ret
and
sub
insb
or
mov
or
insl
out
mov
out
mov
lahf
iret
add
cmc
add
shrb
dec
adc
decb
repz
push
jne
mov
loope
cmpl
int3
hlt
xor
inc
lds
push
pushf
add
mov
loope,pn
dec
stos
out
mov
aas
mov
or
sub
insl
loope
push
xor
sahf
sub
data16
lret
in
or
popf
jae
adc
jg
rolb
std
or
xorl
hlt
test
les
pop
sub
push
shlb
jmp
sbbl
aam
mov
pop
and
jecxz
mov
pop
scas
dec
sbb
iret
maskmovq
testl
bndstx
mov
testl
in
xchg
xchg
rorl
push
jge
mov
mov
cli
sbb
lret
push
insb
clc
fsubrp
xchg
hlt
or
dec
xchg
icebp
sti
std
sbb
adc
ret
sahf
daa
addr16
sbb
stos
lock
or
pop
cli
xchg
ret
outsl
inc
or
outsb
cmp
or
inc
ss
scas
test
xchg
jo
cmp
inc
sub
jbe
push
mov
lret
mov
stc
pop
pop
ficomps
mov
cltd
pop
mov
outsl
call
xor
inc
adc
mov
fisubrs
pop
push
push
and
cmp
loopne
int
js
inc
jp
push
dec
fs
adc
aaa
xchg
mov
ss
cmp
shrl
inc
pop
jmp
xor
fcoms
js
addb
popa
jo
stos
or
lea
aam
xchg
inc
scas
arpl
dec
mov
mov
insl
call
fucom
insb
jmp
mov
stos
mov
xchg
mov
inc
dec
rcrb
xchg
sbb
mov
gs
add
scas
mov
adc
fisubrs
mov
and
dec
mov
pop
sbb
push
push
div
aas
lea
cld
popf
mov
jae
and
pop
add
std
mov
call
mov
dec
outsl
xlat
lret
dec
push
xlat
arpl
ret
cmp
les
xor
rcrl
push
adc
insb
je
xlat
dec
lcall
pop
mov
mov
pop
push
stos
add
repz
and
jmp
lds
enter
jg
jmp
and
pop
cltd
out
pop
sti
dec
rcrb
jl
lds
mov
and
sbb
adc
jp
add
lods
fwait
mov
xor
cli
or
notl
ror
loop
fstps
lock
pusha
shl
mov
mov
xchg
and
iret
push
push
sbb
icebp
rclb
cmp
push
in
sub
in
push
push
lods
jmp
pop
inc
das
out
sbb
cmp
std
mov
aam
sarb
inc
shrb
aas
push
sbb
push
push
insb
xchg
icebp
jo
adc
push
mov
pop
div
js
pop
cmp
sub
scas
popf
push
inc
sbb
loopne
ja
lea
or
xor
in
dec
dec
add
iret
mov
jno
popf
cmp
fcomps
cld
xchg
mov
xor
mov
fcmovnb
mov
cli
inc
xchg
add
xchg
pop
mov
mov
jp
je
jnp
jmp
scas
sbb
push
ja
popa
dec
sbb
mov
xor
jne
jge
mov
adc
adc
push
jae
shrl
jl
scas
jp
jle
stos
daa
add
mov
pop
xchg
or
out
insl
sbb
xchg
dec
mov
mov
ja
push
clc
in
add
out
push
inc
aas
pop
stos
add
arpl
sub
mov
std
lds
jecxz
adc
aas
mov
test
mov
xor
sbb
stos
loop
xchg
pop
dec
pushf
subb
lock
ret
jle
jecxz
addr16
push
mov
inc
mov
test
out
dec
sub
rorb
jl
or
sub
stc
jmp
add
mov
movsb
xor
adc
xchg
movsb
mov
xlat
sbb
jl
in
mov
adc
nop
shl
out
es
pop
jae
cwtl
icebp
xchg
test
push
je
sbb
push
sbb
jle
aad
fidivl
and
cmp
xchg
fidivrs
push
cmp
fisubrs
inc
sub
fcompl
push
pop
mov
mov
je
lock
cmp
rolb
dec
mov
adcb
jmp
add
pushf
daa
sar
sub
addr16
adc
xlat
sbb
mov
into
out
and
rorb
push
dec
or
push
pusha
je
xlat
ds
in
mov
ljmp
or
xlat
or
mov
inc
add
add
leave
insb
jo
dec
sub
push
lods
out
cltd
pop
xchg
mov
pop
xor
xor
test
xor
sub
cmpsb
push
inc
mov
add
cmp
xchg
movsl
incb
xor
jecxz
hlt
enter
shrb
lret
call
sub
sbb
jns
push
outsb
inc
ljmp
xor
lock
iret
sub
mov
push
cld
cmpsl
notb
in
mov
or
push
sahf
push
xlat
fimull
inc
mov
inc
dec
xchg
and
int3
dec
xchg
jle
loope
imul
ror
jp
addb
mov
pop
cmp
adc
pop
pop
ljmp
dec
inc
or
push
and
xchg
popf
mov
cmpsl
cmc
or
mov
xor
fbstp
mov
cmc
sahf
mov
xor
sub
in
dec
call
xor
push
lret
push
push
mov
xor
mov
add
cmpsb
mov
mov
lea
idivl
shl
mov
aad
mov
andl
mov
dec
notb
mov
xor
push
call
int
push
mov
pushf
jno
push
xor
mov
or
pop
sub
insb
jg
js
push
or
or
icebp
das
adc
xadd
test
frstor
inc
adc
dec
test
jnp
pop
sbb
in
push
xor
dec
imul
xchg
mov
fbld
cmp
das
mov
add
cmc
xor
sarb
call
outsl
mov
cli
xchg
lret
fisttps
and
add
cmp
fsubrs
jl
dec
push
js
xor
mov
bnd
ljmp
or
mov
xor
clc
sub
inc
outsl
and
cmp
jns
stos
add
ficoml
movsl
cmp
push
das
dec
je
rcrl
inc
add
cmpsl
inc
movsl
shl
sub
testl
outsb
inc
shlb
sub
cmpb
jne
xchg
mov
inc
jns
pop
push
sahf
mov
sti
test
loope
adc
mov
mov
mov
jns
sbb
mov
mov
out
bound
cmp
in
out
dec
gs
push
ljmp
fs
out
fnstenv
cli
mov
scas
add
rcll
popa
in
fwait
jbe
loop
lret
fsubrp
push
lcall
sub
push
les
in
jge
ljmp
cmp
cmc
jecxz
adc
adc
adc
push
dec
test
loope
xchg
jp
dec
stc
test
xchg
mov
cltd
sbb
xchg
or
fstpl
sbb
stos
jge
fsubrl
mov
je
lcall
into
fwait
addb
or
inc
lock
ficoms
mov
sub
cmpsl
mov
lods
jbe
aad
dec
jns
pop
cs
jp
add
cltd
mov
push
xchg
call
rcl
insb
inc
pop
push
popf
cmp
xor
in
push
xchg
xrelease
sbb
call
ds
aas
push
jl
and
pop
inc
stos
adc
outsl
adc
repz
ds
fisttps
ja
mov
cltd
hlt
jmp
idiv
loopne
rcrb
mov
mov
shll
cli
jae
sub
std
scas
sub
mov
ret
adc
adc
mov
jmp
xor
sbb
fwait
dec
loopne
pop
jle
inc
pop
loopne
dec
test
je
xor
divb
mov
das
fmul
add
pop
or
xlat
dec
pop
mov
cmp
lods
add
inc
dec
sub
ret
testl
aam
mov
mov
cli
jp
hlt
or
out
sub
sbb
scas
xchg
mov
cld
scas
mov
fisubs
insl
mov
jbe
cmp
shl
scas
xlat
mov
mov
popa
or
je
inc
js
mov
lret
mov
aad
inc
clc
lods
enter
ror
outsl
je
loope
mov
push
int3
jne
sub
push
adc
in
shl
outsl
adc
out
in
or
mov
les
push
and
js
das
dec
lea
in
inc
cli
lret
xchg
arpl
and
inc
pop
mov
mov
mov
dec
mov
fs
sub
and
stc
popf
pop
out
test
sub
and
cmp
dec
mov
pop
cwtl
push
jge
cmp
iret
and
int3
ficomps
stos
into
xchg
jge
mov
xchg
movsl
in
shll
arpl
xchg
jg
xor
cli
push
push
jge
stc
jp
test
dec
mov
dec
push
aad
rcll
insb
push
shll
mov
lret
mov
je
mov
and
arpl
es
scas
or
xlat
iret
rcrl
and
lods
sub
inc
cmpsb
cmc
in
sarl
test
scas
adc
cmp
adc
pop
dec
push
and
lods
daa
inc
lods
gs
mov
in
pop
lahf
ljmp
mov
std
mov
adcb
and
sbb
pop
mov
cltd
push
fisttpl
rcl
mov
addl
loope
xorl
cmp
cmc
cli
lret
dec
lods
test
jns
icebp
loopne
xchg
sub
pop
clc
inc
add
hlt
lahf
xor
push
adc
adcb
mov
lods
iret
lahf
mov
sub
int
ja
sub
sub
ss
pushf
cli
imul
sub
aas
or
rorl
and
xorb
in
lret
cli
gs
sbb
mov
xchg
popa
adc
loopne
out
cmpsb
fidivl
adc
dec
xchg
subl
mov
sar
cmpsl
cs
add
mov
mov
and
jno
clc
push
xor
repnz
mull
int3
jb
mov
add
jl
mov
addr16
jmp
push
sub
loop
and
fwait
rorb
repnz
push
mov
movsb
or
into
dec
xor
notb
clc
add
push
push
out
sbb
lods
pop
outsl
scas
mov
cmp
push
lahf
jne
xchg
nop
das
dec
arpl
out
cmp
aad
cmp
sbb
mov
lret
inc
xchg
movsb
jle
addb
pop
scas
sti
mov
repnz
icebp
movsb
mov
insb
push
push
xchg
lret
xor
int
xchg
scas
sti
push
or
jmp
jge
dec
lcall
popa
sbb
imul
dec
push
jecxz
jns
xchg
inc
outsb
mov
fldcw
mov
idiv
push
loopnew
cwtl
aam
inc
jg
ja
push
push
jl
jbe
lds
jp
or
int
jecxz
cmpsl
xorb
cmp
xchg
out
sub
out
xorl
cs
sbb
fs
in
xchg
pusha
loop
out
inc
inc
lods
addr16
push
and
lahf
mov
sbb
push
insb
push
or
inc
and
mov
pop
inc
pop
mov
jo
sub
jo
lcall
test
adc
dec
ds
xor
ret
xchg
js
scas
fcompl
inc
add
push
sbb
fbld
cmc
push
scas
leave
xchg
lods
mov
xchg
xor
push
mov
roll
outsb
and
fs
or
fwait
mov
dec
cmc
jl
insl
ljmp
mov
int
or
lods
ljmp
lds
and
jp
jmp
negb
outsb
adc
xchg
inc
dec
sbb
adc
ffree
cmp
fstpl
mov
ja
int
lock
and
push
je
int3
lock
scas
cwtl
mov
pushf
jo
imul
xchg
sub
jo
lret
adcb
lods
scas
push
neg
xchg
test
rcr
pop
sub
popa
nop
cmpsb
mov
out
mov
repz
js
aad
add
pop
mov
jnp
xor
gs
xchg
and
and
jo
sbb
push
and
mov
and
pop
ret
mov
daa
bound
xchg
scas
mov
cmp
mov
int3
lahf
dec
orb
cltd
imul
inc
movsl
push
mov
dec
push
add
push
mov
sbb
xchg
inc
repnz
lods
stos
rorl
sbb
dec
clc
shll
ret
ret
or
in
in
fidivrl
push
ret
aad
lock
jl
sub
xchg
imul
sbb
mov
bound
js
aas
xor
adc
hlt
into
fstps
push
icebp
pop
leave
xor
test
in
jmp
mov
ficoml
mov
push
mov
ror
aad
js
cwtl
enter
push
mov
jp
push
adc
outsb
push
pusha
fimuls
xor
test
loop
std
mov
lock
pusha
cld
push
ds
movsb
xchg
bnd
popf
loope
enter
int3
jo
pop
inc
je
push
sbb
lret
fiaddl
rcr
xchg
sbbb
adc
fdiv
pushf
and
popa
rorb
pop
repz
pop
jp
loop
sub
mov
inc
add
add
stc
add
xor
scas
enter
roll
hlt
es
mov
push
insl
test
cmp
push
sbb
and
movsb
push
fsubr
mov
adc
enter
mov
jae
insl
xor
pop
fadds
add
repz
fadds
or
fsubl
sbb
add
lret
pop
push
cmp
add
cli
push
dec
adc
adc
mov
movsb
xchg
aam
shll
jg
adc
cmpsl
shll
fstpl
sbb
mov
pop
push
mov
stos
jae
repz
mov
adc
clc
xchg
lcall
fwait
in
jbe
aas
mov
cmpsl
popa
mov
push
cmpsl
xchg
movsb
mull
cmp
push
mov
mov
roll
out
mov
pop
sub
pop
sbb
xchg
push
nop
sti
inc
sti
sub
push
adc
iret
inc
inc
cmpsb
dec
inc
lea
hlt
outsb
pusha
push
jle
ljmp
sbb
mov
jmp
fimuls
add
lock
aad
dec
dec
cmpsb
into
insl
sti
cmp
dec
push
dec
pop
pop
pop
lret
push
mov
repz
pop
imul
imul
js
inc
add
pop
in
lret
xchg
faddl
dec
sub
imul
test
pop
and
popf
adc
add
push
in
push
insl
pop
jle
sub
adc
clc
mov
and
mov
sbb
sbb
add
fnsave
test
sub
push
jnp
mov
movsb
cmpsb
pushf
cmpsb
repz
movsl
nop
mov
jbe
pop
add
testl
xchg
aad
pop
add
jne
ljmp
dec
mov
jno
bound
mov
ret
fidivs
aam
repz
mov
mov
ret
das
aaa
or
xchg
fs
or
mov
xchg
push
cmp
std
lahf
mov
xor
sub
jmp
loop
decl
push
xor
in
mov
inc
fsubl
loope
jle
outsb
push
fldcw
pop
cmp
push
mov
mov
pop
sbb
mov
mov
inc
and
pop
mov
push
ja
div
scas
fiaddl
sub
mov
fs
and
cwtl
iret
loop
mov
mov
jbe
cmp
push
shll
idivl
xor
inc
fldt
xchg
push
cmp
stc
xorb
test
sar
mov
or
scas
scas
pop
push
loop
jl
outsl
dec
jg
and
cmp
add
cmc
jg
pop
lods
jnp
int3
bndldx
push
rol
call
mov
jmp
dec
sub
lahf
dec
xchg
pop
cld
jnp
and
ss
lcall
loop
mov
sub
lcall
mov
inc
shll
std
lods
repz
pusha
xor
je
dec
pop
mov
or
and
xchg
sub
adc
pop
sub
jl
xor
sbb
ret
xchg
out
mov
jns
push
cmp
in
xchg
jmp
push
out
pushf
stc
jmp
adc
mov
xor
scas
dec
sub
xorl
out
push
in
push
pop
cmp
push
push
shll
jne
inc
add
aam
and
cli
adc
adc
sahf
jne
loop
pop
in
mov
mov
xchg
neg
xchg
push
mov
ret
shll
int
lods
out
daa
popf
nop
movsl
nop
mov
cld
xchg
cwtl
outsl
push
sbb
repz
push
push
xor
or
or
xchg
cmpl
in
ss
call
lods
cmpsb
cltd
out
jnp
jl
jbe
mov
je
jb
mov
arpl
or
in
inc
je
test
inc
sub
inc
rol
aam
cmp
nop
ds
mov
imul
xchg
xor
mov
lock
pop
push
test
ljmp
fmull
lock
repz
lret
cmpsb
cmp
xor
xor
mov
dec
sub
ja
daa
cs
jbe
and
clc
sbb
dec
ret
pop
push
aam
xor
fistps
icebp
push
fldcw
in
insl
insb
lods
call
push
jb
jns
inc
pop
and
andb
in
pop
mov
int
jecxz
cs
jns
xchg
scas
pop
mov
push
es
mov
mov
or
cli
arpl
mov
jp
repnz
mov
sbb
adc
int
xchg
fldl
xchg
sbb
sarl
sub
add
daa
shlb
jo
das
cwtl
mov
scas
call
inc
ret
js
lods
sbb
push
cli
push
call
rcrl
scas
lods
mov
push
xchg
inc
jae
or
and
cmp
and
aas
sti
aam
stc
pop
out
adcl
je
xchg
out
scas
xor
dec
mov
sub
mov
add
xchg
jae
sub
mov
push
push
stos
movsb
mov
cmc
jns
mov
stos
add
sbb
sub
gs
jno
xchg
lret
xchg
scas
iret
dec
xchg
and
cmc
dec
test
or
stos
mov
int3
jl
outsb
push
sbb
pop
pop
or
pop
jo
cmp
xor
xchg
mov
clc
mov
push
fcmovbe
mov
addr16
movsl
rolb
gs
jp
leave
outsb
mov
jae
paddw
xor
enter
cld
cwtl
test
jmp
ljmp
dec
int
add
shll
cli
xlat
mov
popa
sti
cmp
pop
cmp
or
xlat
jg
scas
call
test
aaa
xor
xchg
jo
jp
cmovae
cmp
test
ficoml
push
mov
cld
test
sub
popf
xchg
adcb
adc
mov
dec
pop
jbe
pop
hlt
movsl
pop
inc
push
rorb
cli
and
in
pop
test
lcall
pop
data16
mov
loop
xchg
inc
or
bound
mov
je
sbb
mov
fstpl
mov
push
jnp
clc
xchg
movsl
out
xor
lods
xchg
or
loop
push
pop
adc
js
out
or
sbb
or
mov
mov
sub
pop
jl
into
loope
aas
fistpll
fnsave
push
pop
mov
cltd
xchg
das
xchg
cli
cmp
push
lods
fldt
pusha
les
cmc
sub
sbb
shl
push
cli
xor
clc
pop
in
and
ja
lock
popa
sti
or
push
inc
enter
jge
mov
sbb
mov
sbb
xor
add
enter
dec
mov
add
scas
cmp
inc
push
lods
test
sub
or
movsb
xchg
or
push
mov
out
sahf
movsl
addr16
hlt
mov
sbb
or
adc
mov
sub
push
sbb
dec
fnstenv
shl
or
push
jge
hlt
jp
adc
movsl
adc
test
cmp
divb
mov
and
and
test
push
fnstcw
in
insl
lds
lahf
aaa
push
mov
mov
push
push
and
je
ret
xlat
cmpb
jecxz
stc
jle
pop
jnp
mov
dec
loop
cmpl
ljmp
imul
test
add
ds
pop
fmull
fcoms
or
mov
cmp
adc
inc
xor
lcall
mov
pop
lock
pop
fistl
pop
repz
ja
cmp
es
cmp
jns
add
pop
int
dec
fdiv
xorb
dec
jnp
xor
xor
pop
popf
rol
je
push
xlat
xor
dec
cld
popf
inc
test
insb
in
inc
loope
gs
pop
test
scas
mov
cmp
jno
enter
outsb
scas
and
out
bound
lcall
and
pop
setae
out
mov
cmp
jecxz
cmp
cmpsl
lret
jg
jp
mov
fimull
xor
cld
xor
xor
jo
push
push
push
popa
je
jns
dec
and
mov
repz
or
sbb
js
cmp
fs
sbb
jns
mov
mov
jmp
icebp
rorl
shlb
and
xor
xor
cld
sbb
pop
lock
adcl
shll
in
jbe
ficoml
adc
xchg
int3
pop
negl
xor
stos
or
sti
ret
jae
or
in
jae
fst
add
jb
inc
pop
mov
sti
dec
dec
cltd
int3
test
mov
fs
lods
xchg
leave
adc
push
sbb
mov
xchg
test
fsubrs
dec
or
call
repnz
xor
dec
xchg
iret
out
push
pop
mov
pusha
jbe
inc
and
insl
fisttpll
inc
mov
test
xor
shr
push
lods
pop
pop
push
in
dec
test
sbb
push
push
xchg
sbb
dec
arpl
ljmp
push
cltd
mov
rcrb
out
cwtl
and
adc
ret
call
sbbb
push
xchg
fs
dec
stc
aaa
popa
or
cmp
or
mov
test
jne,pt
mov
xchg
mov
xchg
lahf
dec
dec
cmp
mov
jge
and
xchg
push
and
pop
or
and
lcall
push
js
ja
adc
mov
lahf
pop
adc
push
sub
mov
cmp
sbb
or
sub
mov
nop
xchg
test
sub
in
pushf
scas
nop
pop
in
mov
lahf
sbb
mulb
repnz
outsl
lret
stos
pop
popa
test
fisubs
push
mov
cmp
rorl
push
pop
in
nop
lods
outsl
and
icebp
and
insl
nop
fisubrs
cmp
xchg
stos
mov
insl
int3
jl
sub
out
adc
and
push
in
pop
jle
lret
cld
sbb
or
rcr
sbb
test
cmp
xor
aad
jne
test
aam
ljmp
fisubrl
iret
fwait
aas
sub
jp
pop
leave
sub
fnstenv
shll
mov
cmpb
add
test
in
sub
int
imulb
cmp
arpl
push
sub
jno
in
adc
ffreep
mov
fwait
call
out
gs
mov
sub
addl
cmp
clc
cli
mov
pop
test
sbb
rorl
lds
test
arpl
pop
pop
dec
loopne
mov
mov
mov
or
mov
fs
xor
addr16
lods
push
cmc
ss
fcmovnb
outsl
mov
loope
inc
dec
rorl
pop
adcb
mov
insb
or
out
mov
and
inc
sub
mov
rol
mov
popa
lods
stc
lock
xchg
jo
ds
inc
movsl
mov
or
dec
xor
sahf
iret
cmp
jmp
inc
push
cmc
jno
jmp
mov
jmp
mov
aad
and
pop
movsl
cmp
mov
lret
sbb
popf
adc
cltd
cmp
mov
pushl
and
loop
mov
sub
arpl
gs
sub
inc
cmpsw
push
or
movsl
push
aas
mov
dec
pushf
mov
jge
and
nop
sbb
and
fwait
lret
mov
xor
out
ss
repz
cmp
out
and
ret
mov
and
dec
push
adc
push
aam
push
dec
mov
push
push
es
dec
scas
test
jp
and
bound
ret
and
enter
mov
nop
mov
cld
xlat
fs
js
cmp
imul
sbbl
fucomi
cmpsb
xor
pop
xor
add
mov
rcll
sbb
mov
or
in
fisubrs
jmp
sbb
mov
jnp
movsb
je
or
call
push
jmp
fs
sub
push
inc
mov
add
sub
fcomip
xor
mov
hlt
sbb
jnp
pushf
lock
jge
lahf
cs
and
add
scas
sti
lahf
and
mov
jmp
cli
hlt
leave
push
push
mov
movsl
sub
frstor
or
mov
fldcw
inc
cwtl
xor
jecxz
inc
iret
push
dec
lahf
dec
fnstcw
cmpsl
gs
movsl
out
or
and
dec
ss
pushf
dec
lret
inc
fidivl
mov
mov
mov
roll
daa
jl
or
ret
sub
icebp
mov
in
inc
mov
jg
iret
out
mov
repnz
jmp
xchg
sbb
xor
inc
mov
and
and
movsb
sahf
mov
cld
fs
mov
mov
mov
cmpsb
lret
push
xchg
sbb
sub
pop
cld
pop
pop
sbb
aas
sbbl
mov
sbb
jno
lea
push
push
inc
rcrb
and
or
jecxz
lret
or
rcr
test
lcall
test
out
icebp
cmp
scas
jno
dec
mov
add
adc
ret
sbb
cmp
pop
dec
pand
sbb
jae
test
ficompl
addr16
test
out
enter
push
xor
adc
in
arpl
xchg
xchg
dec
fcompl
clc
sahf
sbb
ret
insb
out
fidivrl
jnp
loopne
xchg
cmp
and
mov
js
outsb
fdivr
nop
mov
imul
or
test
jno
inc
jb
fistpl
aas
lods
or
int3
dec
repnz
add
mov
sbb
jne
cld
mov
aas
out
jmp
xor
push
mov
xchg
jne
pop
push
sbb
movsl
jbe
cmp
cltd
loopne
nop
inc
mov
mov
adc
inc
jno
fsubrs
push
arpl
aaa
cmpl
shlb
int3
jbe
cmp
xchg
sbb
xchg
jbe
dec
rclb
ss
sub
rcrl
dec
push
ret
out
rolb
sbb
in
add
mov
add
je
std
orl
sti
dec
icebp
les
cmp
fs
lock
aad
shrb
cmp
pop
ret
in
and
inc
fstl
pop
inc
repnz
fs
cli
lea
mov
pop
ret
pop
pop
outsb
stos
test
repz
rcl
xchg
ret
or
push
fsubl
in
push
adc
sarb
xor
test
or
aas
subl
addr16
pop
dec
or
mov
ds
jge
cld
mov
mov
int
fs
mov
mov
aam
jmp
orb
mov
popf
lock
fwait
jecxz
jno
mov
pop
dec
push
mov
inc
add
mov
push
dec
dec
orb
movsl
iret
xor
dec
adc
mov
xchg
sub
mov
pop
jbe
push
lock
sbb
and
scas
sbb
js
sub
xor
xchg
inc
jl
or
push
jne
push
and
daa
shll
or
clc
loope
pop
sbb
mov
mov
stos
loope
jne
add
loopne
repnz
cld
sti
mov
loope
in
inc
enter
mov
sub
mov
cld
popa
mov
movsl
mov
pop
mov
jb
add
add
ljmp
fistl
stc
repnz
push
test
nopl
mov
mov
xchg
lods
in
pop
add
push
mov
pop
xor
ja
and
jmp
mov
orb
movsl
test
scas
inc
das
dec
push
fst
xchg
push
inc
cmp
repnz
sub
jp
mov
mov
jp
mov
mov
pop
jle
mov
sbb
inc
cmpsl
xchg
loope
lods
jo
add
cmp
jo
mov
jmp
add
mov
xchg
mov
inc
arpl
loop
jle
aas
lahf
or
inc
push
inc
out
push
imul
pop
stc
inc
in
shll
mov
cmpl
ss
fsubs
push
cmp
ret
inc
fcoms
sbb
fnstcw
out
lcall
fwait
cmp
jb
insl
mov
ret
mov
in
popf
fcoml
or
sbb
dec
fidivs
mov
out
cltd
in
data16
je
pop
xchg
mov
jecxz
clc
pop
imul
xchg
popa
iret
push
dec
sub
mov
out
lret
pop
xorb
in
and
cli
rcll
outsb
and
sbb
adcb
mov
fdivr
sub
and
fisubrs
inc
xchg
cmp
nop
and
daa
dec
jno
jnp
adc
or
add
push
repz
cltd
and
movsb
dec
mov
jl
adc
leave
sbbb
push
lods
out
enter
stos
dec
sub
repnz
adc
test
pop
xchg
mov
push
add
xchg
mov
cld
fisubl
mov
mov
jns
sahf
and
cmp
sub
or
notl
or
jecxz
out
and
mov
aad
cld
shlb
sub
xchg
subl
pop
sub
xor
loop
adc
mov
ds
in
out
dec
pop
jle
xchg
out
cmp
out
add
push
xchg
inc
ftst
out
add
jmp
dec
sahf
scas
out
mov
popa
add
jnp
iret
popa
mov
imul
mov
jno
popf
xor
inc
jl
bound
push
and
pop
sub
movl
cmp
push
mov
popa
mov
adc
mov
loope
dec
pop
icebp
repz
stc
jp
pop
jo
xorb
push
jecxz
cmpsb
push
test
jnp
arpl
mov
incb
adc
xor
add
data16
outsl
insl
lea
pop
xor
or
arpl
pop
ss
pop
jle
cmp
lea
jo
mov
jo
dec
cmc
int
mov
std
xlat
sub
dec
dec
pop
cmp
dec
push
fsubrp
adc
in
and
test
je
insb
sbb
mov
in
dec
ficompl
mov
xchg
lret
inc
ffree
les
mov
mov
or
xor
nop
rol
jbe
adc
loopne
pusha
ss
and
fadd
mov
inc
push
cmp
mov
sub
rclb
jb
addb
rclb
jp
push
adc
leave
sub
mov
in
es
icebp
mov
das
add
pop
add
stos
outsl
nop
or
jp
or
ss
ja
loope
jecxz
jno
jne
lea
cwtl
andb
insb
cmp
mov
push
sti
sbb
cmpsb
mov
ret
xchg
fwait
or
and
js
outsl
aad
test
xchg
jge
ret
jno
mov
outsb
pop
aam
sbb
pop
add
jg
mov
xchg
fstps
jns
loop
add
sar
sub
pop
inc
add
int
fdiv
mov
dec
lret
xchg
sbb
jp
mov
test
repnz
mov
pop
mov
jge
pop
add
pusha
shr
jl
aas
xchg
data16
gs
add
stos
dec
cli
dec
adc
add
jl
and
loope
or
idivl
imul
stc
stos
test
in
sbb
push
outsb
adc
std
cmpsl
lods
in
jbe
imul
test
ds
sub
sbb
cwtl
popa
mulb
pushf
stos
into
loopne
gs
mov
das
mov
and
test
outsl
movsb
icebp
mov
jo
iret
sbb
lret
mov
push
cmp
mov
xchg
call
stos
adc
stos
mov
lods
cmpsb
push
sbb
out
sub
xchg
add
adc
test
push
cld
sarb
inc
insb
mov
and
mov
sub
inc
push
ret
pop
outsl
aas
push
out
pop
mov
mov
inc
insl
test
adc
xchg
imul
sub
fdivrs
adc
sub
int3
push
xchg
inc
jnp
in
dec
cmp
decl
fmuls
clc
pop
xchg
lret
cltd
xchg
mov
mov
push
jns
xor
in
xchg
xchg
pop
pop
push
jae
test
push
lcall
and
inc
cltd
jmp
cltd
sti
push
xor
stos
cli
daa
sbb
and
sbb
scas
outsb
sbbb
add
jno
test
fadd
cwtl
add
lods
test
or
lcall
mov
in
outsl
loopne
mov
das
xchg
mov
cmp
xchg
cld
test
cmpsw
outsb
popa
test
imul
in
cmp
ficoms
adc
jmp
pop
mov
outsb
leave
or
mov
lods
sbb
xor
enter
ss
in
jae
sbb
dec
out
dec
lods
insl
add
fnstcw
xor
inc
es
ljmp
xchg
in
adc
mov
int
pop
lds
cmp
out
sub
sahf
cli
mov
pusha
out
notb
fs
jne
lret
sbb
inc
push
inc
btr
inc
test
and
cmp
mov
jne
xor
std
cld
movsb
sbb
pop
dec
push
cmp
sbb
imul
mov
or
push
outsl
push
and
lods
jno
cmp
push
push
fcoml
dec
movsb
or
clc
notb
dec
dec
mov
mov
cs
aaa
call
adc
nop
push
js
mov
xlat
inc
pop
jge
divb
jno
ljmp
ss
fldcw
mov
sub
lock
inc
jg
xchg
jne
clc
jle
loope
insl
sub
iret
fwait
movsl
stc
fwait
rcrb
sbb
sub
pop
pop
aaa
lahf
cmp
jle
mov
mov
cltd
int
out
inc
and
repnz
pop
push
lds
movsb
ja
dec
insl
push
bound
sarb
jnp
bt
dec
push
or
cmp
jnp
leave
or
rorl
jmp
scas
data16
mov
push
add
das
mov
push
rcrl
add
fwait
ret
outsl
cmpsb
jg
dec
movsb
lret
and
cmp
and
dec
into
dec
ret
jae
sub
mov
sub
hlt
aas
icebp
push
push
in
iret
adc
and
loopne
dec
loop
aas
or
jecxz
rcr
fdivp
sbb
inc
mov
mov
xchg
loopne
xchg
jle
xor
decb
repnz
ret
cmp
loopne
sbb
jle
clc
xchg
mov
fldcw
popf
or
stos
jbe
lahf
pusha
mov
push
push
cmpsl
mov
scas
cmp
addb
div
loop
andl
pop
mov
fidivs
out
xor
popa
stos
mov
jle
xlat
fidivs
pop
orl
stos
xlat
and
and
sbb
fistpll
or
leave
outsb
sub
and
mov
loopew
push
jle
pop
enter
out
in
out
bound
std
push
push
push
aad
jl
jne
inc
out
mov
xorb
sub
outsb
or
imul
mov
movsl
mov
cltd
xor
insl
xor
je
rol
add
cmp
mov
jb
notb
gs
adc
out
mov
out
and
scas
fmulp
xor
rclb
inc
cmpsl
and
xor
adc
add
lods
scas
lods
test
push
popf
push
mov
ret
pop
cmp
in
aad
ds
cmp
xchg
ret
icebp
or
mov
in
test
roll
pop
push
dec
lcall
or
aam
jnp
push
add
cmp
loope
stos
pop
pusha
jns
fisubs
loope
sub
sbb
sbb
or
cmp
xchg
stos
pop
ljmp
outsb
cmp
out
pop
fs
mov
or
fbld
imul
mov
les
xchg
mov
jl
adc
add
insb
push
mov
ficoml
pop
pusha
das
insl
in
mov
sarb
ficomps
pusha
dec
mov
fstl
jle
mov
out
mov
lcall
fmul
cmp
out
mov
or
xorb
lds
mov
fists
cmp
subl
ja
jo
mul
pop
repnz
dec
dec
popf
adc
mov
aam
les
hlt
lods
in
or
xor
insl
jg
push
daa
jmp
fimull
dec
subl
add
push
cmp
lret
ret
aaa
test
mov
sti
pop
in
push
cmpsb
out
imul
es
mov
xchg
push
data16
mov
lea
mov
sub
ret
fsincos
ret
into
insl
cmp
popa
adc
lret
out
ja
and
xchg
inc
imulb
cmp
inc
lret
movsb
pop
pop
in
xor
ds
pinsrw
arpl
jge
jb
lds
jmp
or
into
mov
pop
xor
or
push
ret
sub
pop
jl
mov
mov
shl
cmp
sbb
ss
sbb
repnz
lea
adcl
mov
stos
push
jle
cli
pop
lds
inc
cmpsb
pop
insb
inc
jg
sar
pop
insb
mov
es
jl
and
call
fs
fcmove
sub
in
loope
notb
ss
sbb
inc
call
push
mov
in
mov
and
cmp
loope
inc
test
push
stc
popa
mov
xor
sbb
loop
mov
cmp
cwtl
xor
mov
sti
movsb
xorb
mov
fidivs
sbb
test
arpl
dec
ljmp
xor
sbb
mov
mov
fiaddl
shrl
leave
in
iret
clc
or
pop
icebp
cmp
mov
lret
ret
hlt
icebp
sbb
mov
add
pop
push
loope
adc
mov
out
add
push
sbb
enter
shrl
or
daa
push
jle
jecxz
xor
sti
fsts
jge
into
das
push
nop
pop
movsb
or
jne
pop
or
dec
add
xorl
imul
mov
shll
das
insb
mov
std
jno
pusha
stc
add
js
mov
outsl
adc
shrl
push
das
daa
les
in
int
fucom
addb
adc
push
xchg
jnp
lods
cmp
nop
add
mov
es
cmp
out
into
xor
inc
cmp
push
jnp
sbb
ljmp
inc
mov
adc
call
test
push
push
mov
movsl
jge
fldenv
fisubrl
xor
push
jns
dec
je
dec
mov
imul
sbb
dec
sub
inc
mov
inc
into
adc
or
jne
dec
add
std
cmc
and
mov
mov
jmp
push
xor
xchg
pop
bound
sbb
and
bound
sti
push
add
and
or
fbstp
fwait
data16
cltd
mov
ficompl
or
clc
pop
and
push
xchg
imul
add
xchg
cmp
jns
data16
pop
mov
push
roll
pop
pop
jle
jmp
sub
rcr
dec
mov
push
sub
dec
stc
sbb
shl
pop
xchg
adc
and
pusha
fs
jb
xchg
movsb
movsl
rcll
movsl
aaa
sub
das
cs
xchg
mov
add
outsl
adc
pop
pop
mov
clc
into
cmpsb
aad
pop
pop
xchg
and
mov
fs
rcrl
push
jl
repnz
pop
mov
jp
mov
fstpt
pop
hlt
mov
sub
xchg
fcmovnu
fwait
js
stc
sbbl
fbld
adc
hlt
leave
and
test
mov
pop
sbb
out
mov
cld
scas
out
mov
lods
mov
sbb
dec
loope
repz
lock
mov
into
rorb
xor
push
pop
cmp
push
les
jns
xchg
cmpsl
or
aaa
mov
add
sub
cvtpi2ps
pusha
add
pusha
gs
pushf
je
pushf
dec
pop
stos
push
inc
lods
daa
mov
pop
inc
dec
ds
jge
loopne
ret
fstpl
mov
xor
aaa
pop
jmp
int3
cmc
sub
push
dec
push
mov
leave
mov
jbe
sub
popf
pushf
dec
cmp
rorb
rorl
mov
sub
lret
pop
inc
jle
shrb
xor
pop
mov
adc
or
pushf
fnstsw
mov
jge
xor
add
sbb
outsl
fyl2xp1
mov
sti
lods
test
sarb
pop
das
cmp
xor
push
mov
jmp
jecxz
js
push
sub
ficoml
and
cld
lret
scas
call
push
and
cmpsb
push
cltd
scas
sti
fxsave
clc
sub
jae
in
mov
addr16
dec
ljmp
fstpl
and
sub
les
mov
pop
in
xchg
imul
pop
jns
jp
std
pop
outsl
addr16
mov
je
iret
jb
clc
lahf
mov
inc
shll
jl
inc
xchg
pop
ret
test
int3
cli
roll
cmp
mov
xor
bound
pop
scas
pop
dec
out
cmp
mov
ja
rcrl
inc
and
repnz
mov
sbb
int
test
sbb
aam
or
in
mov
pop
addr16
xchg
je
in
dec
push
sub
cmpsl
adc
mov
rcrb
cmp
xor
mov
sbb
mov
das
xchg
out
divl
mov
push
ja
decb
sbb
lret
arpl
pushl
adc
add
sub
dec
addr16
fstpt
pusha
push
pop
shlb
cmp
mov
es
scas
out
scas
cwtl
cmp
in
lods
add
cmpsl
mov
inc
inc
sarb
push
mov
sub
sbb
sarb
jp
cmc
rcrb
faddp
loopne
sahf
lods
inc
test
orb
mov
aaa
addr16
pop
fs
repz
pop
and
lcall
jmp
inc
mov
fsubs
sub
stos
vucomiss
sub
sbb
fldenv
xchg
cmp
xchg
mov
sti
push
sub
stos
es
dec
add
int
pushl
xor
js
mov
das
lcall
rorb
iret
in
xlat
lahf
mov
jmp
dec
add
adcl
mov
sub
push
call
cld
jg
xchg
push
jecxz
cmp
and
movsb
rol
push
push
mov
movsl
push
cmc
daa
xchg
adc
xor
test
data16
and
idivl
je
push
into
adc
lret
loope
aad
mov
adc
ljmp
pop
cmp
pop
ret
cmc
sbb
loopne
pop
dec
out
flds
dec
dec
cmp
dec
stos
repz
sbb
stc
cmc
or
xor
mov
movsl
mov
adc
sahf
aad
mov
xchg
lahf
push
pushf
jg
inc
inc
xchg
pushl
iret
pop
inc
js
push
mov
stc
popf
xchg
xchg
cmp
enter
sub
sbb
jl
dec
arpl
daa
pop
in
pop
cmp
xorl
cmp
sti
lahf
clc
ljmp
arpl
repnz
push
insl
mov
push
jb
mov
or
mov
mov
dec
or
dec
sarl
pop
adc
cmp
push
loope
mov
inc
add
sub
add
bound
mov
into
mov
push
clc
mov
or
mov
ret
dec
ficoml
inc
push
cmp
pop
pushf
idivb
dec
push
out
test
sub
cmc
ss
inc
sub
lret
lds
lods
and
mov
sbb
shlb
xor
dec
and
cmp
adc
pop
or
sbb
int
cs
jo
hlt
pop
xor
in
sub
lret
mov
ret
shll
repnz
in
jbe
in
testl
test
xchg
xor
sub
xor
out
mov
jle
mov
stc
loopne
icebp
dec
pop
lods
adc
fwait
mov
leave
lods
pop
inc
lahf
cmp
pop
jns
add
inc
lahf
fdivr
cmp
js
xor
xchg
scas
xor
jecxz
nop
lea
pushf
mov
cltd
scas
push
xor
sub
jnp
sub
clc
xor
push
cmpsl
jecxz
xor
xor
inc
jb
push
fdivrs
push
xchg
dec
mov
outsl
adc
adc
mov
add
fadds
and
push
mulb
ja
rorb
pop
pop
jbe
aaa
mov
popa
std
fidivl
sti
add
je
loopne
ror
mov
scas
cmp
sbb
xchg
insl
rol
sub
sub
mov
push
pushf
in
push
out
cmp
jmp
mov
into
mov
fistpll
push
and
cmpsb
gs
daa
addr16
xorl
and
sbb
cli
leave
xor
xchg
xor
out
jns
xchg
adc
icebp
movsl
and
xor
push
imul
aaa
rcrb
xchg
lahf
xchg
jns
ja
addr16
sub
push
jno
loopne
testl
mov
xor
arpl
sub
mov
xchg
mov
test
mov
push
cmp
push
lea
lock
ds
scas
adc
int3
dec
mov
push
shll
pop
mov
and
les
ret
or
shrl
imul
and
lcall
dec
pop
loopne
lds
mov
or
popf
xchg
shl
inc
lret
shlb
add
push
xchg
cmp
cmpsb
mov
mov
pop
add
mov
imul
add
mov
inc
icebp
int
les
iret
fcoml
repnz
out
lret
lea
mov
jo
pop
push
adc
into
stc
std
xor
dec
in
enter
xorb
jge
roll
or
scas
sarl
mov
and
jge
in
pop
pop
adc
adc
aam
aas
xlat
out
or
mov
push
mov
sbb
or
xchg
dec
push
xchg
fdivrp
orb
aad
cmpsl
ds
ror
loop
mov
repnz
jo
test
lcall
inc
jmp
inc
je
pushf
pop
add
int
daa
inc
cltd
rolb
add
mov
ret
stos
or
cwtd
inc
xchg
jb
add
pushf
loopne
mov
cmc
mov
cmc
bound
dec
and
add
adc
ljmp
sar
xchg
frstor
imul
xor
rcll
shlb
push
inc
sti
in
fidivrs
stc
sbb
clc
sbb
test
xchg
movl
fwait
cmp
notl
fs
add
test
andl
push
xor
call
aad
fildl
lret
loopne
adc
stos
int3
adc
inc
pop
lahf
mov
mov
jbe,pt
push
repnz
mov
mov
dec
mov
icebp
sbb
fbstp
sarb
jns
or
stos
push
lcall
mov
pop
fistl
add
ljmp
cwtl
dec
mov
nop
mov
xchg
stos
add
fnstenv
sub
push
jnp
sbb
dec
mov
aaa
dec
sbb
mov
xor
or
add
mov
popa
add
mov
clc
jp
jmp
and
sarb
mov
testl
mov
xor
sbb
cmp
les
test
sbbb
cmp
test
jns
lods
sub
dec
hlt
inc
xchg
aaa
stos
addr16
sbb
push
cli
xor
inc
std
push
fsubl
or
divb
sbb
fldt
les
fidivrl
mov
mov
or
add
cmp
outsb
cmpsl
xor
mov
clc
test
pop
enter
sub
gs
mov
subl
popf
imul
xchg
add
out
icebp
call
into
addb
xchg
pop
xrelease
fistpl
fwait
pushf
test
loope
add
adc
pop
pusha
aam
stos
cwtl
ljmp
inc
shrl
cmc
test
xchg
or
dec
stc
popl
jno
sub
inc
scas
pop
xchg
mov
ret
addl
nop
mov
adc
movsb
mov
mov
inc
push
add
or
pop
cmp
xchg
test
add
xchg
inc
lahf
xchg
pop
outsl
iret
xrelease
pushf
inc
push
and
sarl
insl
push
jae
into
jecxz
or
cmpsl
pop
jl
das
xlat
cmpsl
jecxz
out
mov
xor
push
dec
adc
xchg
aas
mov
pop
clc
fiadds
movsb
and
sub
jbe
faddl
ss
dec
sbb
pop
cltd
mov
ret
clc
fldcw
fdivr
and
emms
sbb
inc
mov
dec
mov
loope
ja
lcall
loop
jno
push
ja
stos
mov
pop
push
or
ja
pop
cmp
mov
mov
insb
mov
fsts
or
cwtl
jno
xor
jmp
dec
sub
ja
xchg
aas
xchg
inc
pop
sub
pop
addr16
mov
mov
sub
stos
push
arpl
pop
dec
add
and
scas
and
mov
and
out
inc
jns
loope
mov
push
push
int3
push
add
fsubl
lret
rdpmc
ja
fsts
dec
cmp
mov
testl
adc
lock
cmp
xlat
loop
int3
push
lea
das
push
xor
mov
or
dec
xor
out
subl
sub
leave
in
sarl
push
adc
sub
leave
cmc
es
lret
mov
imul
push
test
enter
or
pop
and
std
and
or
enter
enter
xor
mov
push
xchg
test
mov
ret
mov
stos
mov
cwtl
cmp
push
ficompl
jp
in
push
lea
outsl
or
pop
xor
or
cmp
sbb
js
pusha
jp
out
aaa
into
roll
push
ret
sahf
mov
ret
pop
xchg
ret
and
jae
andb
xchg
repnz
mov
mov
push
movsl
mov
sub
les
xor
push
int
sub
or
xor
add
inc
pop
xor
lods
jb
les
dec
jns
call
outsb
jl
push
outsl
adc
das
inc
lcall
push
xor
lods
call
push
xor
mov
and
cld
pop
jbe
ds
cld
ja
sub
pop
icebp
jmp
popf
add
popf
ret
xor
dec
lahf
shlb
xchg
pop
xor
out
mov
inc
cmp
lods
popa
subl
xor
xchg
test
adc
dec
pop
mov
pop
jae
mov
mov
adc
aas
sbb
fwait
jmp
je
push
mov
test
and
push
jge
dec
imul
loope
rorl
adc
mov
stos
mov
jmp
js
lods
cs
into
popa
or
shrl
sbb
adc
pop
mov
jns
jmp
push
or
sbb
test
pop
xor
scas
imul
mov
xchg
in
sbb
jno
mov
sub
pushf
and
jmp
sbb
fdivr
cmc
cwtl
sub
mov
lea
xor
in
jmp
orb
mov
push
mov
adc
lcall
lcall
fisttpll
xorb
xor
push
or
push
xchg
mov
inc
inc
in
adc
shlb
insl
aaa
test
mov
mov
pop
or
jne
pusha
sbb
jge
iret
stc
scas
fsts
lea
sar
jp
in
call
mov
or
cmp
jmp
jmp
movl
testb
sti
pop
in
mov
or
push
add
arpl
sub
mov
loop
mov
jbe
jae
mov
loope
mov
out
arpl
mov
jae
imul
out
cmp
cmpsb
dec
sub
adc
insb
jl
dec
pop
or
addb
cmp
lcall
fcmovne
push
pop
xor
fsts
mov
out
out
addr16
repnz
cmp
sbb
pusha
dec
and
push
cmpl
inc
cmp
and
das
outsb
into
fsts
pop
rorl
stc
sub
test
sbb
insb
or
jmp
sbbb
xlat
cmp
sbb
sub
ja
dec
call
in
leave
jl
pushl
es
xchg
movsb
loopne
int
popa
xor
insb
out
outsl
pop
fildll
or
sbb
bswap
xlat
js
test
sub
sbb
mov
pop
aam
mov
stc
cmp
inc
sarb
dec
out
cmpsl
aas
shrl
ljmp
daa
and
iret
cld
jo
adc
jp
cld
dec
pop
pop
add
add
cmp
xchg
push
das
or
fwait
jno
push
jge
jg
lea
jmp
inc
aaa
pop
nop
jo
sub
or
rcrb
push
jbe
lock
or
repz
out
es
or
jns
ret
mov
ja
rcr
mov
daa
mov
fistpll
cltd
aaa
adc
xor
xor
cmp
lahf
pusha
leave
add
mov
adcl
imul
or
out
lock
faddl
fs
arpl
fisubs
inc
or
mov
mov
lods
jg
mov
mov
jle
sub
pop
jo
clc
mov
mov
int3
gs
add
cmp
fwait
jo
js
cwtl
fidivl
mov
add
or
aaa
rolb
xchg
cmpsl
adc
sub
mov
call
mov
mov
cs
es
pop
sub
sbb
cwtl
jb
fmuls
call
or
mov
mov
and
cmpsl
dec
pop
test
mov
mov
cmp
int
test
mov
sub
and
cmp
std
jmp
fnstcw
or
lret
mov
dec
in
outsb
cmpsb
sub
xor
ret
push
mov
xchg
addr16
lret
cmp
mov
add
sti
cltd
pushf
xchg
adc
pop
loope
std
sbb
repnz
mov
xchg
mov
cmp
pushf
jg
jb
in
divl
sub
cltd
inc
adc
xchg
or
mov
addr16
rorl
pop
cmp
in
rcrb
imul
push
repnz
lods
lock
mov
or
inc
cltd
pusha
test
mov
xor
cmp
shll
add
push
dec
out
pop
jne
xchg
add
call
es
test
sub
es
ret
jbe
push
imul
xchg
test
addb
stos
mov
rcrl
sub
fldl
les
sbb
or
push
in
pusha
rolb
fnsave
ljmp
or
jp
or
ret
sahf
jecxz
sbb
or
add
push
inc
cmpsl
jae
add
cmp
test
sbbb
test
fmul
mov
out
lods
jae
push
insl
int
or
shll
adc
sahf
lahf
xchg
cmpsb
add
cli
out
xchg
xchg
jae
cmp
cmpsl
mov
cmc
mov
and
dec
or
or
pusha
clc
fwait
push
sub
push
int
push
mov
fbld
daa
push
das
es
and
imul
cmp
in
xchg
dec
ret
iret
lea
mov
lock
sub
popf
pop
clc
inc
iret
xchg
movsl
or
lds
lahf
sbb
stc
adc
jecxz
mov
inc
in
in
arpl
ss
sub
push
mov
sub
cmpsl
clc
or
nop
imull
icebp
add
loopne
sti
mov
cmp
bound
jg
mov
insb
and
inc
shlb
mov
iret
fnstenv
pop
dec
or
push
pop
lcall
or
or
nop
insl
inc
icebp
insl
jbe
add
mov
cli
mov
jno,pn
fimull
push
into
mov
or
hlt
jbe
aam
inc
cmp
loope
cmc
mov
hlt
cmpsb
in
or
push
cmpsb
addr16
adc
sahf
lods
ss
dec
stc
shll
adc
dec
std
stc
std
xchg
in
or
cmpsl
xor
lock
ret
push
nop
sbb
mov
mov
fs
dec
pop
push
adc
jmp
inc
inc
sub
hlt
fwait
inc
push
loopne
clc
into
jo
idiv
jecxz
pop
mov
out
testb
dec
mov
lods
repnz
imul
mov
jmp
test
mov
pop
push
cmp
js
pop
xlat
hlt
insb
jne
out
fdivl
lret
adcl
call
sub
stos
outsb
fwait
mov
fwait
popl
inc
into
jno
roll
or
inc
faddl
xor
xchg
rorl
stos
sub
scas
push
repnz
sub
mov
arpl
ret
jno
cmpl
cli
stos
lea
sbb
neg
xor
xchg
in
rcrl
movsl
sbb
and
lods
addr16
xchg
adc
mov
in
rolb
out
lea
lret
mov
cmp
pop
sub
xor
clc
and
dec
mov
scas
or
push
fldenv
aaa
cmp
jno
mov
mov
push
loopne
push
mov
imul
adc
mov
add
sahf
xorb
sub
popf
dec
inc
jo
ficomps
xor
or
ljmp
aaa
mov
push
movsb
inc
lea
add
popa
test
dec
jnp
and
ret
jl
and
aas
addr16
pop
sbb
out
mov
rclb
ljmp
in
adc
jb
push
mov
outsb
subl
das
scas
lods
loopne
inc
mov
rep
jp
fstp
test
mov
iret
inc
jne
movsb
ds
adc
std
cmp
roll
notl
or
inc
fistps
jo
mov
shlb
sub
cli
pop
mov
fstl
jl
mov
sbb
pop
jns
les
or
jmp
call
jecxz
pushf
lds
mov
xor
fbld
fwait
mov
sbb
pop
push
mov
dec
loopne
mov
dec
pop
stos
insl
xlat
lahf
adc
ljmp
insb
cld
mulb
sbb
lret
daa
mov
aas
nop
fnstenv
mov
enter
push
mov
andl
add
dec
add
lods
in
int3
stc
jo
mov
js
mov
popf
cmp
inc
lea
shrl
mov
mov
std
mov
pop
rcll
fisubrl
loope
sbb
subb
nop
jle
ret
add
cltd
jmp
adc
lods
adc
mov
pop
test
fisttps
int3
stos
inc
dec
xor
icebp
push
xchg
cwtl
mov
movsl
js
jb
lods
dec
xor
es
pop
push
call
jno
dec
and
mov
mov
xor
xchg
std
enter
mov
les
cmp
ljmp
adc
jns
jno
dec
scas
jno
lock
scas
sub
mov
mov
shrl
hlt
mov
das
pop
es
and
sbb
push
cltd
adc
ljmp
jg
mov
fld
cmp
jge
sub
in
xchg
fstl
mov
dec
mov
lds
sub
js
mov
jge
mov
aam
xchg
xor
push
gs
lahf
xchg
mov
dec
sub
cli
in
in
sbb
jnp
out
pop
xchg
hlt
les
push
stc
cmpsb
popa
push
int
add
fcmovu
inc
je
cli
mov
jp
jbe
and
movsb
imul
mov
jb
adc
data16
in
and
int3
and
fisubrl
test
push
and
into
sub
xchg
xor
adc
add
dec
xlat
ret
ret
push
add
pushl
je
jg
pop
pop
xchg
scas
inc
shlb
mov
add
push
xchg
sub
mov
call
xchg
inc
dec
call
scas
pushf
adc
or
ljmp
xchg
sbb
adc
sub
inc
dec
xchg
pop
repz
icebp
popa
cmp
jne
popf
shrb
icebp
sbb
psrlq
les
pop
pop
orl
cmp
xor
jle
movsl
imull
enter
cmp
sbb
jno
or
push
mov
jle
cmpsb
es
lds
enter
lods
cmp
inc
pusha
adc
mov
scas
outsl
dec
mov
shll
lret
mov
in
dec
xor
mov
bound
jbe
cwtl
subl
mov
iret
cmp
enter
push
imul
mov
loope
pop
push
lret
mov
and
sbb
pop
and
cld
daa
sbb
push
daa
and
sub
cmp
negb
and
mov
add
mov
pop
dec
popa
push
sbb
mov
mov
stc
or
push
sbb
push
push
mov
pusha
jle
adc
mov
aad
pop
loop
push
mov
out
cmp
adc
xor
jb
cmp
jp
movsl
lds
push
push
popa
mov
popf
sbb
aad
scas
popf
rcl
lcall
mov
das
pop
push
out
xor
pop
mov
pop
or
xlat
cmp
lock
jp
mov
jle
jns
cmpsl
ljmp
int3
add
shll
mov
sbb
pop
mov
cs
lock
add
dec
arpl
cmc
shlb
mov
push
xor
cmp
xchg
stos
dec
int
stc
fcmovnb
lcall
xchg
mov
sbb
cwtl
xchg
inc
mov
lret
mov
fisubs
sbb
jmp
test
sbb
adc
in
test
in
mov
out
ss
push
ret
popa
divl
xor
mov
and
cmp
push
mov
sub
lods
sub
rcl
mov
push
add
mov
loope
ljmp
out
ljmp
mov
subl
ljmp
lret
repz
jl
test
icebp
xor
mov
mov
jg
sbbb
call
gs
xchg
shl
into
pop
or
add
clc
pop
icebp
in
outsb
lahf
pusha
lock
daa
xchg
dec
xchg
mov
mov
stc
cmc
jo
sub
push
mov
jns
sahf
in
loope
nop
add
sarl
dec
bound
add
lea
and
or
sbb
mov
mov
xlat
jl
cmpsb
outsl
jg
xor
inc
lret
in
sbb
adc
xor
arpl
in
call
test
out
in
scas
fs
sbb
sub
test
subl
fcoms
adc
sub
dec
ss
mov
push
sahf
int3
loopne
lods
add
push
or
js
mov
das
push
pop
xchg
fs
ss
adc
lds
scas
fsub
inc
push
mov
push
pusha
jns
enter
movsb
arpl
cmp
ja
call
sub
clc
xchg
dec
je
xlat
in
aaa
out
or
pop
hlt
push
inc
pop
and
mov
aas
pop
adc
dec
ljmp
js
in
movsb
cli
jmp
push
outsl
out
pop
pop
cltd
gs
ret
mov
mov
mov
lret
icebp
sub
add
sahf
test
mov
add
fildl
sbb
mov
ret
jo
mov
das
les
nop
roll
insl
aad
outsb
int3
and
mul
mov
mov
xchg
stc
lcall
test
adc
xchg
ret
lret
orl
cwtl
idivb
sbb
mov
jns
pop
clc
es
lcall
int3
jae
imul
mov
mov
cmp
ja
dec
divb
das
adc
push
cs
mov
or
push
pop
or
add
imul
mov
adc
mov
push
and
je
rorb
inc
movl
xchg
inc
ja
mov
sbb
inc
adc
inc
adc
push
lret
inc
arpl
push
cmp
lods
jb
stos
cltd
and
jg
sub
lea
cmpsl
pop
enter
sub
aas
repnz
or
inc
int
pusha
ret
fildll
or
iret
mov
adc
out
fwait
pop
xchg
out
int
sbb
or
adc
inc
sbb
dec
out
cmp
fnstsw
mov
shlb
lret
popf
test
jmp
push
push
push
inc
loope
lahf
into
subb
sbb
test
jbe
jns
std
lahf
cmpb
dec
lret
in
mov
push
icebp
jg
mov
arpl
adc
cltd
int3
decb
int
mov
addr16
push
lret
jnp
notl
fwait
pushf
cmc
pop
test
xchg
mov
cmp
scas
ds
jne
in
pop
movsb
inc
cwtl
stc
mov
sbb
xchg
pop
clc
fcmovnbe
mov
jmp
mov
insl
nop
sub
jl
call
inc
lahf
leave
sub
jae
arpl
jp
outsl
scas
pusha
push
shlw
mov
xchg
dec
ss
push
sbb
loopne
jnp
out
pop
test
pusha
loope
cltd
int3
arpl
cmpsb
dec
or
repz
in
bound
and
add
mov
xor
jl
push
lret
nop
sub
pop
inc
rol
inc
mov
hlt
mov
or
adc
shlb
cli
into
fadd
inc
out
and
cltd
icebp
scas
adc
xor
mov
jmp
mov
jle
mov
stc
scas
shlb
mov
faddl
imul
xor
dec
mov
sti
mov
sbb
es
pop
ss
iret
sbb
sti
and
arpl
aad
test
inc
rolb
push
mull
dec
call
mov
mov
xor
cmpsb
in
sbb
ret
cmp
push
in
xchg
mov
insb
sbb
mov
rorl
rclb
scas
mov
push
loope
and
xor
mov
insl
xchg
repnz
rcl
and
push
aas
cmpb
sahf
and
dec
xchg
shll
ret
pop
insb
nop
pop
push
or
cmp
xor
mov
mov
std
loop
adc
loope
and
leave
sbb
ret
mov
stc
cmp
inc
pop
cmp
mov
lea
xchg
aam
sbb
jb
cmc
inc
loopne
sar
mov
jns
jnp
cwtl
stc
pop
push
repnz
ret
stc
mov
add
mov
dec
es
inc
mov
or
insb
test
mov
and
js
aaa
rcr
int
mov
pop
cli
cmpsb
cmpsl
fstpl
lcall
cmc
mov
push
push
orl
adc
cmp
mov
push
in
rclb
jae
pop
fcmovnbe
dec
mov
adc
icebp
test
xchg
xchg
jns
mov
cmp
in
out
mov
roll
lock
xchg
pop
cltd
sub
movl
dec
bound
mov
imul
fxam
cmc
add
pop
add
ret
xchg
pushf
ret
jae
in
push
enter
and
jle
sub
cmp
stos
clc
loopne
cmpsb
daa
push
int
or
int3
mov
test
repz
xchg
xor
inc
inc
jns
mov
test
mov
sbbl
push
and
pop
mov
xchg
mov
cltd
inc
xchg
adcb
rcr
stos
ja
xor
mov
iret
ror
ret
xor
xchg
stc
or
jno
xor
mov
out
add
loope
push
push
mov
add
jmp
ljmp
call
lahf
movsb
sub
bound
xor
or
dec
int
cmp
call
ficoml
mov
mov
movsb
mov
ret
mov
push
adc
outsb
mov
shrb
add
ljmp
mulps
enter
fisubrl
mov
fidivs
adc
pop
dec
xor
imul
paddusw
pop
sub
inc
sub
sub
movb
pop
je
call
insb
push
fadds
add
dec
or
cmpsb
decb
stos
loop
mov
add
inc
loope
and
and
les
or
or
mov
inc
inc
insl
push
xor
cmp
ficoms
cmpsl
das
mov
rcrb
aas
decb
out
fcmovu
mov
mov
jmp
popf
arpl
mov
dec
iret
inc
test
pop
mov
pop
jns
cmp
hlt
lods
cmpb
shlb
cmpsl
ljmp
aam
xchg
loop
xchg
mov
sbb
mov
dec
inc
and
lcall
add
fistps
pop
pop
shrb
or
mov
cmp
or
mov
cmp
sbb
sbb
loop
sub
scas
jmp
mov
inc
out
nop
push
mov
mov
adc
pop
jle
insb
jno
add
xor
xchg
xchg
add
pop
and
sbb
sub
lahf
jns
mov
pusha
mov
out
inc
push
popl
test
push
mov
std
push
jecxz
add
xor
or
xlat
jmp
dec
dec
mov
dec
pusha
dec
cs
push
inc
mov
mov
daa
fildl
adc
lods
jno
inc
lret
movsl
aam
mov
in
mov
inc
out
sub
xchg
sub
add
adc
pushf
jnp
xor
movsl
adc
xchg
xlat
aaa
imul
scas
sub
dec
scas
je
jmp
fs
stos
xchg
sbb
jecxz
lods
mov
adc
mov
mov
cmp
mov
fiaddl
pop
cmpl
dec
dec
jbe
jbe
sarb
push
jge
add
stos
fimuls
sub
inc
jecxz
dec
repz
aas
cltd
nop
pop
jnp
sub
adc
outsl
jnp
sub
decb
rcrl
ret
pop
inc
jl
ret
mov
mov
mov
sbb
imul
xor
je
cmp
imul
xor
mov
rolb
jnp
push
push
push
pop
jp
xchg
dec
mov
push
xchg
imul
ja
pop
jnp
push
xor
inc
sbb
dec
shlb
and
mov
xor
out
pop
nop
insb
bound
xor
insl
aam
and
test
push
popa
xor
or
cmc
pop
lahf
cli
dec
xlat
in
mov
rcr
xchg
in
jmp
enter
repz
outsb
iret
loopne
stc
jne
mov
test
lds
pop
push
lea
mov
xor
popa
pmullw
repz
addb
adc
imul
psadbw
adc
sub
nop
sbb
push
mov
dec
inc
inc
cmp
lahf
gs
mov
dec
outsl
lahf
dec
pop
aam
lock
mov
aaa
push
iret
out
out
pop
xchg
addr16
sub
push
int3
pop
push
aas
stc
ret
sub
leave
cmpsl
clc
fildll
jl
cmpl
loopne
les
dec
data16
ja
jne
test
jb
xchg
pop
insl
pop
xchg
xchg
lea
lea
cmc
fmulp
clc
inc
add
sub
test
aaa
mov
in
push
inc
mov
and
adc
adc
mov
mov
xchg
mov
jbe
cwtl
jl
fcompl
outsl
push
mov
inc
push
test
stc
push
cmp
outsb
add
pushf
adc
push
test
pop
sbb
pop
mov
mov
movsl
aad
or
dec
sti
xchg
mov
out
mov
adc
inc
add
test
mov
jnp
jae
jecxz
pop
mov
cmp
icebp
push
xorb
loope
cmc
fisubl
shrl
fnclex
adc
lret
cld
mov
lcall
and
mov
inc
in
mov
ret
push
in
jecxz
pop
rcrb
jmp
xchg
mov
xchg
pop
hlt
aam
rcrb
add
aad
push
mov
xlat
in
adc
push
and
push
add
jns
mov
jo
jne
test
loope
jne
adc
cmpsb
outsl
out
pop
cltd
xor
push
pop
imul
lods
repz
jbe
jno
fmull
inc
or
int
stos
out
into
mov
xor
push
in
je
push
dec
mov
or
sub
sbb
push
ss
popf
fisubl
addr16
pop
mov
mov
rcrl
test
push
xor
pop
rcr
xchg
sub
mov
jp
dec
sarl
mov
lds
je
sbb
cmp
cltd
xlat
cmpsb
mov
outsl
inc
bound
lods
inc
xchg
ret
stos
xchg
scas
rolb
lds
xchg
push
adc
mov
jnp
mov
dec
push
sbb
inc
fcmovnb
inc
in
jae
inc
or
pop
xor
and
inc
movsl
and
jbe
mov
xor
outsb
aas
lea
inc
mov
pop
xor
xor
mov
lcall
cmpsb
int
pushf
pop
mov
movsb
lret
test
xchg
imul
in
push
push
ret
cltd
mov
xor
out
push
mov
cmpsb
popl
fbstp
stc
call
dec
das
dec
iret
dec
cmc
jecxz
or
adc
in
adc
filds
pop
not
sbb
pop
push
pop
push
mov
dec
mov
out
push
lods
lods
ret
push
test
out
jmp
mov
push
push
mov
cmpsb
les
jae
insl
arpl
sub
xor
adc
pop
inc
dec
and
aas
les
dec
shrb
shlb
in
pop
cmp
ja
lds
and
jl
stc
sbb
cmpb
aam
in
into
addr16
push
add
inc
xor
sub
push
inc
in
insb
imul
in
pop
mov
cltd
clc
and
ss
insl
dec
stos
ret
cmp
xor
inc
es
add
stc
and
cmp
cltd
mov
repz
lock
and
pop
fwait
shrl
jmp
pop
jg
jne
aas
and
in
lock
mov
sbb
mov
fldt
mov
lea
dec
xor
sub
xor
inc
push
push
sub
jecxz
pop
loope
test
or
sbb
lods
fistps
xchg
movsb
lret
mov
inc
xor
fstpl
out
mov
xor
inc
les
adc
jbe
mov
out
jmp
call
js
repnz
popa
gs
insb
insl
push
imul
push
out
xor
insb
push
mov
out
stos
andl
jg
or
into
mov
sbb
stc
data16
add
popf
insb
test
or
shll
loopne
push
sub
lahf
sahf
and
xchg
xor
fldl
add
pop
cmp
add
loopne
cmp
mov
bound
iret
jnp
loopne
jb
mov
cmpsl
and
dec
andb
xor
ds
jbe
lds
mov
jg
cmp
xchg
into
jl
std
mov
dec
rcl
xchg
cld
lock
xchg
mov
fists
ret
fcomi
mov
jo
jle
push
loope
push
xor
lret
enter
xchg
adc
and
das
jge
and
sub
pop
sub
clc
jbe
adc
xchg
xchg
jl
imul
fmull
fmuls
adc
xchg
clc
xor
rolb
fcomps
imul
sub
inc
mulb
stc
and
pop
xchg
lret
rcr
movsl
inc
pop
mov
add
fdivrs
or
lods
lahf
dec
rclb
pop
cmpsl
jmp
ds
fidivrs
cld
scas
sub
inc
outsb
mov
adc
rorl
js
cmp
jnp
jbe
test
gs
imul
lods
add
inc
cwtl
xchg
push
add
inc
loope
fwait
lea
mov
orl
or
and
mov
mov
out
orl
mov
push
mov
or
jns
jne
int3
mov
adc
shrb
or
pop
mov
mov
cmp
or
out
sbb
jb
test
mov
shll
jmp
int
jmp
mov
lret
sbb
mov
jo
xor
push
loopne
jp
mov
adc
imul
and
enter
addr16
sbb
jecxz
push
add
inc
aad
pop
repz
das
sti
lahf
mov
into
push
icebp
testb
mov
pop
arpl
jno
je
xchg
fmuls
sar
int3
cmpsl
dec
adc
je
mov
inc
and
jp
jmp
lea
inc
iret
andps
iret
or
jnp
mov
jle
jge
ret
rcll
fs
pop
inc
nop
push
cmp
imul
rcrb
push
jns
cwtl
repz
ret
push
jo
cli
in
fwait
loope
popf
push
hlt
sti
xor
lea
jns
add
cmp
dec
ds
into
nop
rcrb
cmpsb
std
ljmp
sbb
dec
jl
ret
repz
mov
jg
push
call
pop
aad
lcall
shl
add
pop
rol
fcompl
fwait
test
add
es
mov
test
or
and
pop
jle
insl
jbe
xchg
xorb
daa
jecxz
dec
test
mov
out
andl
fs
sahf
xchg
mov
call
cmpsb
test
or
adc
sbb
pop
hlt
mov
ja
mov
out
movsbl
sbb
sbb
pushf
cmp
shlb
xor
mov
pop
bound
test
adc
or
mov
repz
adc
stc
lock
and
cltd
mov
imul
sbb
add
hlt
cmpsb
mov
dec
imul
push
shlb
cwtl
ljmp
loop
sub
and
jl
xor
mov
jmp
fimull
clc
inc
xorb
rcr
jno
jmp
iret
das
xchg
imul
mov
lea
pop
adc
sub
lods
test
push
std
add
or
xor
iret
cld
dec
movsb
test
add
js
mov
cmp
ret
jns
push
inc
adcl
dec
cmp
rcl
popa
xchg
inc
xchg
and
incb
push
pop
lods
mov
ret
ljmp
les
dec
lods
jae
or
push
mov
cmp
xor
call
inc
andb
and
adc
xlat
stos
loope
add
loopne
pop
fs
icebp
mov
inc
push
sar
ja
jecxz
js
in
fildll
jecxz
add
out
or
insb
fildll
xchg
out
jmp
push
inc
daa
hlt
jecxz
lahf
and
xor
loope
mov
scas
lret
xor
js
dec
lods
iret
jne
call
fdiv
stc
outsb
jne
orl
xchg
mov
pushw
pop
dec
subb
pop
mov
inc
cmp
repz
mov
mov
add
std
in
jp
jecxz
loop
outsb
orl
mov
add
mov
mov
stos
sub
add
and
bound
mov
xor
popf
sbb
pushf
in
mov
out
and
outsl
jne
mov
or
add
sbb
js
xor
xor
pop
aas
sub
fcmovnbe
stc
mov
xchg
movsb
pop
sbb
jns
outsb
dec
mov
outsl
lahf
je
mov
push
dec
sbb
push
imul
push
test
mov
jle
and
xchg
mov
inc
pop
popa
dec
jmp
movsb
call
push
sti
xlat
xchg
addl
outsb
aaa
addr16
sti
lahf
mov
mov
out
sub
mov
mov
push
fcmovu
lock
sbb
pop
mov
xchg
push
push
fstpt
outsb
pusha
mov
cmp
test
push
adc
mov
fwait
in
mov
in
xor
mov
mov
jp
sub
inc
dec
inc
fsubs
imul
das
addr16
mov
sarl
add
fnstcw
cmpsb
test
call
mov
inc
shlb
push
and
jmp
jne
iret
xchg
cmp
std
jmp
fimull
fmuls
mov
push
mov
jge
dec
inc
lods
xchg
xor
aad
inc
jno
adc
scas
jp
xchg
adc
loope
mov
mov
fildl
xor
lea
and
fmulp
rcll
aad
insl
add
int
sbb
mov
cmpsl
jne
push
mov
lods
mov
push
jno
adc
js
mov
push
cwtl
insl
fs
stos
xchg
mov
stos
xchg
popa
test
insl
and
mov
jle
adc
add
aad
in
ljmp
pop
cli
xchg
pop
into
das
int
lods
loop
mov
test
jae
xor
mov
inc
jecxz
add
fisttpl
in
mov
sbb
clc
jecxz
cwtl
xchg
jg
jae
mov
aas
and
stos
and
add
sar
mov
icebp
and
and
lahf
enter
lods
pop
mov
in
ret
xchg
pop
aas
xor
sub
xchg
sbb
test
mov
dec
leave
imulb
inc
clc
pusha
cmpsb
pop
fstl
pop
adc
xchg
in
mov
push
or
mov
adc
jl
sbb
push
dec
test
pavgb
lcall
and
push
and
lahf
xchg
lret
push
mov
fistpl
test
mov
imul
or
fs
int3
imul
jo
jg
mov
xlat
int
mov
and
add
or
leave
insb
lret
add
dec
cmpsl
daa
and
xchg
outsl
xor
or
js
adc
bound
mov
add
rolb
outsb
or
fimull
jmp
in
loopne
push
inc
popf
pop
dec
enter
lret
mov
pop
imul
jp
jle
mov
adc
es
xchg
pop
xchg
adc
push
cli
adc
fs
insb
mov
push
add
pop
jecxz
fcomp
into
adc
inc
fucomip
repnz
sar
xlat
shr
and
push
in
dec
or
add
mov
jns
inc
lock
xor
in
or
inc
cmpl
push
mov
jp
clc
sbb
fcomi
fisubrl
incl
gs
adcb
testl
lret
cmp
loop
add
sub
mov
sbb
mov
mov
and
lcall
add
mov
inc
nop
and
inc
mov
fcompp
jg
jae
xchg
cmp
inc
push
in
mov
pop
push
cmp
push
sub
cli
add
jne
mov
test
shrb
jo
jae
fabs
lret
inc
mov
mov
fs
out
pop
test
aas
adc
insl
mov
movsl
mov
nop
or
ret
push
in
add
lret
out
test
lods
mov
mov
out
jae
pop
testl
jbe
xchg
jne
push
lcall
stos
dec
lret
and
xchg
cmp
adc
mov
or
bound
sbbl
pop
cmc
jns
xchg
push
push
in
add
xchg
xchg
ret
lea
adc
inc
or
dec
lea
and
std
pop
mov
push
std
cmpsl
movsl
dec
subl
sbb
popf
nop
sub
cli
pop
ret
push
in
aam
adc
cmpsl
sbb
push
jl
add
xor
xchg
mov
push
push
push
ja
lock
inc
mov
scas
fldt
mov
call
sbb
mov
loop
jle
dec
dec
mov
stc
aaa
insb
dec
mov
pop
mov
in
in
mov
sbb
out
nop
push
fidivl
inc
xlat
popf
js
int3
and
loop
popf
mov
int3
fdivs
sbb
xchg
jmp
and
ja
push
push
in
push
push
sub
ss
sub
pop
mov
add
in
jle
in
popa
jecxz
insl
mov
xchg
test
and
cmp
idivb
push
jns
mov
mov
cmc
lds
stos
xor
cmp
lret
mov
xor
out
adc
call
add
jp
inc
pop
jnp
into
int
mov
out
frstor
ret
adc
cmc
sarl
lret
inc
pop
dec
inc
adc
jne
lds
mov
stc
mov
das
cmp
rorl
orl
or
xor
clc
or
sub
sbb
jbe
testb
inc
and
jns
pop
test
aas
insl
mov
xorl
xor
fimuls
cli
lods
je
pusha
fisttpl
ret
fisttpl
imul
in
or
pop
movsb
mov
in
inc
mov
repnz
mov
mov
add
mov
mov
and
pushf
out
ljmp
pop
loope
leave
xor
cmp
mov
and
in
mov
in
jmp
clc
push
adc
pushf
push
inc
push
cs
cmp
popf
sbb
shlb
pop
shrl
push
sub
leave
addr16
adc
int3
mov
leave
shrb
loopne
mov
mov
in
inc
adc
sub
sar
scas
fwait
adc
and
dec
jae
mov
inc
call
ds
gs
sahf
and
aaa
test
fs
and
and
adc
pop
ret
fs
jl
push
push
xchg
jnp
pop
sbb
sub
and
pop
jo
mov
sbb
and
pusha
rol
add
roll
lcall
mov
jle
inc
xor
dec
cmp
push
fidivrs
cmc
test
scas
dec
cmpb
inc
sahf
add
stos
sti
mov
dec
imul
clc
or
test
gs
fmulp
ret
push
pop
dec
and
jl
das
fsubrl
sub
push
nop
cltd
flds
xchg
ret
int3
cmpsb
cmpsl
andl
mov
negl
orl
jns
push
sbb
scas
lcall
andb
push
ret
lahf
imul
xchg
repz
xchg
dec
mov
cmpsl
filds
fsubrp
mov
arpl
mov
push
jo
xor
das
mov
mov
into
dec
in
loop
add
mov
cwtl
mov
inc
mov
pop
fcompl
outsb
cmp
lahf
inc
insl
aaa
pusha
sbbl
ljmp
xor
add
xchg
mov
hlt
mov
lahf
cmp
mov
add
cmp
ret
out
push
repnz
imul
fmulp
mov
fdecstp
mov
cmpsb
mov
push
mov
mov
pusha
mov
aas
js
lds
mov
jo
add
xchg
lds
sbbl
mov
stc
loopne
jnp
inc
hlt
out
xchg
push
int3
in
pop
inc
push
cmp
adc
in
pop
cmp
xor
jne
movsl
cmp
out
sub
fs
scas
pop
mov
or
cs
int3
cli
mov
pop
cld
mov
or
cmp
ja
jmp
add
lock
std
aaa
or
or
notb
mov
jl
pushf
test
loopne
call
push
comiss
inc
test
sub
push
loopne
imul
or
or
push
xor
jge
test
shl
adc
pop
out
shrl
sbb
inc
aam
ret
mov
dec
and
or
xorb
xor
add
loopne
dec
fisttps
fiadds
dec
adc
int
leave
inc
mov
ficomps
sahf
jnp
jp
xor
sbb
lods
or
xchg
sub
inc
sub
add
mov
jp
cmc
movsl
push
mov
shl
inc
insl
cld
jno
popf
nop
xor
je
repz
add
test
mov
testl
mov
and
imul
sub
lds
std
push
jecxz
cmc
into
jnp
mov
push
in
adc
xchg
mov
push
lea
xchg
add
mov
cwtl
mov
and
inc
and
out
lahf
pop
sbb
pop
nop
jp
sti
dec
loopne
ds
out
negb
lods
mov
call
sbb
jmp
stos
add
pop
shlb
out
adc
mov
hlt
test
in
in
jns
add
jns
out
test
jnp
enter
xlat
mov
movsb
jle
add
mov
adc
jp
push
shrl
outsb
pop
and
cli
jo
push
xchg
pop
mov
jge
dec
stos
inc
sub
jle
popf
inc
or
jb,pn
push
stos
mov
adc
and
xchg
sub
pop
leave
dec
inc
sub
pop
xchg
push
fldenv
ret
inc
sub
pop
or
push
mov
jno
xchg
stc
pop
dec
fcmovnbe
pop
stos
jae
xchg
sub
jbe
loopne
xor
popf
fdiv
mov
dec
mov
outsl
pop
push
loopne
pop
jmp
mov
pusha
mov
mov
lret
jne
in
imul
sti
rcrl
inc
movsb
xchg
scas
push
and
movb
cmc
in
cmp
adc
cli
pop
outsl
int
test
xor
sub
jl
mov
jecxz
insl
sub
cmp
xchg
mov
add
push
fistps
dec
dec
popl
in
sbb
test
sarl
rcll
in
push
leave
fwait
fs
mov
loope
in
mov
dec
xor
and
jno
mov
sbb
inc
mov
sti
fildll
push
cmp
push
sahf
rclb
pop
sbb
insl
cmp
sbb
test
mov
xchg
jbe
lods
arpl
adc
cmpsl
lret
sbb
int
cmpsb
xor
lods
int3
mov
insl
mov
cmp
sbb
jns
and
inc
lods
jecxz
cltd
adc
push
add
fstps
xchg
adc
cld
cmpl
aam
adc
adc
sub
push
psubd
mov
push
bound
imul
or
and
lds
scas
adc
rcrl
mov
incb
in
imul
lds
repnz
mov
imul
fistpl
flds
sub
sub
test
inc
jle
out
aas
mov
ljmp
mov
cmc
ss
cmp
decb
push
adc
fs
cmp
lahf
sub
ret
iret
and
jmp
leave
pop
cltd
es
or
push
icebp
mov
icebp
sbb
xchg
jo
idivl
popa
repz
fwait
cli
shlb
insb
mov
inc
sub
and
mov
test
sub
clc
sub
push
xor
rcrb
ds
movsl
rorl
adc
xchg
andb
cmp
icebp
sarl
push
mov
jns
and
or
sub
or
xchg
and
inc
pop
fists
sti
inc
xor
or
inc
cltd
hlt
fists
xchg
jns
test
clc
mov
xor
dec
pop
and
lret
cmc
sahf
das
test
sbb
pop
fidivrs
mov
jb
insl
sbb
push
std
xchg
sub
mov
adc
jae
cmp
popf
xor
cmp
sbb
mov
mov
adc
cmp
sbb
mov
mov
dec
fcoms
cmp
jge
push
out
mov
rclb
jecxz
je
mov
pop
and
mov
or
adc
inc
rclb
jmp
push
or
jno
cmpsl
lds
pop
add
inc
sub
inc
in
sbb
and
push
aad
outsl
pop
xchg
aas
mov
lea
sbb
call
dec
js
daa
jg
jo
adc
fs
insl
scas
idivl
push
inc
fstpl
outsl
push
je
nop
inc
mov
popa
jbe
sbb
scas
sub
add
stc
clc
cmp
pop
pop
push
cmc
xor
scas
aas
dec
jmp
xchg
cmp
andl
mov
push
ret
cmpsl
imul
or
inc
push
sahf
xor
cmpsb
test
aad
pslld
icebp
inc
mov
fdivrs
cmp
inc
gs
and
imul
sbb
and
les
cmp
in
fisubl
stos
daa
pop
jbe
mov
flds
mov
inc
jne
sbb
rcl
inc
cmp
fistl
test
insl
push
push
and
dec
mov
orb
clc
sbb
mov
shrl
mov
cli
test
lea
and
dec
jl
sub
jl
cld
div
jb
mov
pop
lret
push
repnz
xor
movsl
mov
leave
adc
push
mov
addr16
xor
lds
lods
sbb
call
and
jne,pn
xor
in
mov
divb
mov
xor
add
stos
push
stos
xchg
inc
mov
jae
shrl
out
test
fistpll
mov
xor
out
adc
mov
scas
inc
in
andl
mov
push
sbb
loop
pop
sbb
jne
cmpl
rcrl
jg
push
xchg
iret
push
lods
rcll
xor
mov
sub
dec
aas
cmp
mov
inc
lock
in
jp
aam
test
test
adc
stos
cld
and
data16
push
cmpsl
cs
sbb
das
push
adc
xchg
pop
hlt
add
rcl
add
xor
cmp
mov
fdivr
movsb
test
add
mov
pop
ficompl
incb
cmp
add
mov
div
xchg
adc
or
xchg
out
or
icebp
ficomps
xchg
iret
dec
mov
adc
mov
inc
sbb
cmp
add
leave
mov
std
das
outsb
fists
sub
pushf
cltd
stos
sub
pop
cmp
test
mov
mov
xor
mov
int
push
inc
lcall
jp
into
js
movsl
jnp
jg
mov
fcoml
iret
inc
push
inc
dec
and
xor
orl
loopne
hlt
jae
mov
sarb
mov
jmp
fildl
adc
xchg
xchg
dec
jo
pop
pop
loop
call
mov
xchg
aam
mov
pop
dec
push
lret
loope
mov
enter
jle
adc
shll
leave
jle
or
insl
movsl
jecxz
lcall
loope
aas
loop
andl
xchg
lods
jo
fs
xor
scas
mov
mov
and
rcl
mov
pop
insl
xor
mov
cmp
sbb
cmc
jbe
shl
jbe
lcall
jo
adc
cmpsb
adc
repnz
adc
aam
hlt
repnz
adc
cmc
insl
push
orl
ficompl
jbe
cltd
pushl
ret
movb
sahf
inc
aad
push
dec
jge
aad
mov
dec
icebp
sbb
jle
lret
shll
mov
or
dec
cmp
sbb
addr16
adc
nop
js
and
xlat
shll
in
pushf
mov
fistl
imul
xchg
and
pop
mov
test
and
push
dec
mov
stos
push
cld
mov
fidivrl
lock
cmp
inc
movsl
cmp
cli
mov
xor
and
and
pushf
adc
adc
push
push
out
push
cld
loop
pusha
aaa
or
sbb
sar
mov
sub
pop
aad
inc
and
pop
xor
bnd
popf
xor
mov
push
lret
int
leave
push
or
jnp
inc
ret
dec
pop
xor
adc
daa
adc
cmp
inc
cmp
hlt
sbb
mov
or
aam
jbe
jns
mov
scas
in
push
ret
test
popa
fnsave
imul
mov
push
aad
mov
jg
dec
enter
sti
fsts
adc
imul
pop
jl
sbb
shll
sbb
outsl
lea
sub
jmp
sbb
add
mov
xor
iret
jmp
mov
lret
pop
xor
sbbl
idivb
je
inc
pop
add
cmp
and
inc
adc
pop
mov
stc
test
push
outsl
xor
into
aad
fcmovu
test
lods
jl
mov
movhlps
inc
insl
add
int3
cmp
inc
jp
or
fnstsw
scas
mull
add
sbb
mov
rclb
sub
lret
adc
cmp
sbbl
repz
fimuls
cmpsl
or
fldenv
mov
mov
lret
inc
and
roll
push
jbe
mov
pop
xor
mov
cltd
xor
out
repz
mov
xchg
push
dec
add
cmp
push
xor
xor
mov
cmp
in
and
fmull
fnstsw
inc
or
sar
dec
cld
pop
or
in
out
in
outsb
mov
mulb
push
adc
dec
xor
lock
xchg
inc
insl
int3
dec
mov
jg
add
stc
fstl
incb
jmp
dec
jne
cmp
or
pop
in
outsb
stos
fxch
pop
sbb
mov
das
cld
in
dec
js
ret
dec
loope
ja
nop
movsl
xor
sar
stos
add
cmpsb
fs
pop
ja
lods
jns
jns
pop
dec
xchg
jmp
popf
cmp
addr16
push
insl
dec
imul
decl
push
ss
jl
lock
stc
push
stos
iret
xchg
lahf
insb
clc
xlat
lds
and
loopne
ss
roll
or
xlat
mov
mov
jl
or
pop
xor
mov
cs
add
cmp
pop
add
fisubrs
cmp
mov
mov
andl
pop
cwtl
push
mov
jo
sbb
jg
xchg
jo
cmp
pop
lcall
lea
rolb
add
daa
pop
mov
lcall
dec
xor
dec
dec
cmp
out
or
in
movsb
cmpsb
push
lods
lcall
les
and
jle
push
inc
or
and
popa
stc
jmp
leave
out
leave
jp
mov
and
loope
pusha
xchg
sbb
or
rclb
fsubs
xchg
rorl
cmpsb
shl
adc
leave
sub
ja
fs
mov
add
sbb
cld
add
outsl
cmc
fdivrp
loopne
mov
mov
and
mov
ret
pop
loop
inc
bound
fwait
in
sub
ret
and
mov
push
xor
fnstsw
jl
pop
aaa
fimull
push
jmp
pusha
call
mov
sub
jno
loope
loop,pt
push
and
mov
inc
xchg
aam
or
fistl
aaa
pop
lahf
cs
stos
cltd
mov
mov
sarb
sti
aaa
sar
jle
popa
cmp
adc
ljmp
daa
jno
imul
cs
cmp
xor
stos
dec
or
adc
enter
cmpsb
cli
mov
jl
bound
push
mov
mov
push
xchg
cld
into
hlt
xchg
xchg
arpl
aad
mov
push
add
flds
sbb
aad
call
fstpt
aad
std
mov
cmp
mov
lcall
scas
fimull
negl
daa
adc
mov
stos
daa
xor
mov
enter
movsl
ret
xchg
scas
imul
pop
xchg
and
movsb
les
fisubrs
and
push
inc
pop
mov
sub
out
insl
mov
ljmp
jecxz
imul
and
add
call
shlb
cmpsb
sub
adc
sub
mov
cs
test
push
fldcw
testl
xchg
ljmp
xlat
dec
test
notl
mov
xor
push
jle
lea
out
pushf
sbb
cltd
sahf
aas
inc
sbb
lcall
inc
pop
and
dec
pop
mov
push
jl
jns
dec
lcall
push
add
and
xchg
cwtl
jmp
jne
push
push
movsl
std
push
out
aam
pop
aad
fcomps
sbb
repz
hlt
fwait
jo
xchg
push
out
cmp
mov
jae
cmp
jl
ljmp
stc
pop
lods
std
pop
mov
inc
dec
cmp
pop
mov
movsl
in
arpl
aas
mov
loop
mov
imul
inc
cmc
jecxz
fwait
lods
lock
outsb
ret
sysret
mov
cmp
mov
dec
add
xchg
mov
leave
mov
xchg
jp
xchg
and
data16
fwait
pop
sub
mov
test
sbb
mov
mov
dec
add
call
mov
pop
push
fsubs
jle
fwait
adc
mov
xlat
or
push
xchg
inc
fstpl
cmp
jnp
mov
ds
test
scas
fisttpll
les
addr16
or
leave
xchg
das
mov
ds
mov
mov
inc
pop
xor
test
addb
dec
mov
icebp
lret
mov
lods
jno
ret
push
push
popf
sbbl
js
ret
pushf
enter
notl
cmpsl
add
mov
movsl
out
fisttps
int
notl
push
pushf
out
inc
cltd
data16
mov
fiadds
rcrb
mov
push
or
movsb
movsb
out
pop
pop
lods
sbb
hlt
andl
stos
mov
pop
in
outsl
jge
jge
fwait
mov
flds
jne
out
ficompl
repnz
mov
loop
cmpb
adc
and
shl
add
pop
imull
dec
cmc
mov
sbb
lcall
push
repnz
xor
or
xor
xchg
rcrb
sahf
in
ja
loopne
pop
cmp
ja
pusha
sahf
enter
aad
iret
xchg
pop
jno
jb
pop
inc
arpl
push
and
sub
ljmp
loop
stos
pop
add
cs
or
stos
mov
out
dec
adc
sub
dec
cli
and
mov
inc
scas
fidivrs
stc
push
fwait
adc
adc
sbb
or
icebp
dec
leave
ljmp
call
push
out
scas
or
loope
hlt
data16
inc
std
data16
loop
repnz
nop
fwait
not
jno
pop
divl
ja
test
pusha
pop
roll
push
cmp
pusha
inc
push
repz
pop
jp
pushf
jge
add
cmp
jle
int3
mov
xor
sbb
mov
pusha
push
inc
pop
es
sub
jg
repnz
fadd
faddl
jbe
mov
or
test
cmp
filds
repnz
test
stos
sbbl
xchg
sub
mov
jge
mov
mov
in
mov
frstor
aam
pop
push
outsb
pop
cld
mov
test
pop
sbb
loop
dec
sarl
cltd
mov
test
adc
pop
imul
fsubr
test
add
rcr
or
loopne
hlt
sub
stc
subl
fsubrl
pop
add
fimuls
pop
into
or
ret
jne
lds
out
mov
mov
mov
pop
pop
lcall
imul
xchg
insb
cmpb
add
xchg
cmp
in
sarl
mov
inc
out
jmp
arpl
mov
notb
pop
dec
out
insb
out
shrb
rcrl
inc
or
sarb
frstor
or
push
stc
push
fcmovnb
ret
xchg
int
decb
adc
rcrb
call
inc
movsb
cmp
jl
mov
push
into
push
cmc
imul
sbb
mov
push
fsub
inc
push
mov
push
ja
inc
mov
fists
mov
mov
mov
pop
sub
lret
add
xchg
lret
xor
fcmovnb
outsb
mov
sub
dec
push
xchg
or
xchg
xchg
call
sbb
mov
sub
test
arpl
mov
jns
ret
add
push
sub
pusha
mov
fsubl
mov
lods
jle
xor
sbb
mov
imul
xchg
cmp
mov
les
dec
and
jge
in
jle
inc
icebp
pop
pop
mov
loopne
push
push
addb
imul
addr16
leave
movsb
and
cmp
and
dec
pop
fldcw
sub
xor
dec
out
xchg
and
cmc
pop
or
lds
pop
jg
mov
push
aam
inc
in
xor
popf
jo
or
aaa
scas
mull
loopne
loop
outsb
icebp
jae
pop
push
dec
jmp
fwait
jp
rclb
mov
push
insl
fistpl
add
cmp
sbb
cmp
xchg
test
repnz
sub
rcrb
rolb
lods
and
lea
push
jo
nop
mov
int3
test
xchg
add
addb
mov
ds
fstpl
movsb
data16
cwtl
mov
ja
loopne
mov
jae
dec
insl
je
dec
jg
rcr
addr16
in
out
sbb
xchg
pop
adc
mov
outsl
es
cmpsb
or
clc
jg
mov
scas
aaa
sbb
add
shll
add
jg
icebp
enter
or
mov
cmp
and
xor
stos
xor
xchg
adc
mov
shll
pop
add
and
call
popf
orb
sbb
mov
gs
jle
xor
lock
jne
add
xchg
sub
rorl
or
pop
pop
pop
adc
dec
fisttpll
arpl
stos
and
push
mov
fwait
and
inc
fdivrs
mov
movsb
pop
repz
xchg
adc
sbb
adcb
xor
cmc
cld
mov
pop
mov
fxch
inc
cwtl
or
dec
and
xchg
or
mov
inc
mov
xor
add
pop
push
and
enter
xlat
addps
andb
insb
cmp
mov
push
stc
push
dec
call
jecxz
mov
pop
loope
mov
das
imul
inc
xchg
dec
into
hlt
push
pushf
mov
pop
addr16
mov
sbb
ffreep
sub
cld
gs
out
lret
pop
xor
movsb
xor
xor
loopne
jo
sbb
sbb
and
add
xorb
xchg
mov
inc
loope
sbb
jmp
imul
fisubrs
iret
or
dec
mov
psllw
ret
pop
lcall
push
push
clc
push
pop
pop
aaa
cmp
loope
and
jmp
or
inc
jge
mov
mov
cmp
mov
fisttpll
push
cltd
pop
mov
sbb
in
mov
insl
das
fisttpll
lock
out
adc
icebp
and
and
mov
pop
sahf
movsl
cmpl
sti
jle
push
ss
mov
test
cs
and
lock
pop
or
push
xor
imul
enter
sub
xchg
xchg
and
dec
push
shl
out
mov
xchg
iret
push
dec
cmp
push
or
dec
sbb
test
rcll
jmp
cmp
scas
xor
push
test
jg
in
pushf
pop
and
inc
add
out
movsl
push
aad
rcr
adcl
lret
dec
mov
divb
loop
jle
or
mov
inc
pop
pop
inc
jae
mov
bound
cmp
mov
imulb
icebp
xchg
scas
rcrl
pop
dec
mov
push
sarl
push
pop
inc
jge
loope
jbe
mov
add
enter
adc
shrl
popf
inc
xchg
or
and
fs
pop
lret
add
scas
insb
stos
insb
mov
push
ret
arpl
jnp
xchg
xor
inc
fcom
popa
gs
loope
cli
pop
mov
push
dec
jbe
and
pusha
dec
andb
test
aaa
push
orl
sub
std
dec
call
inc
rcrl
call
adc
mov
mov
xor
dec
test
mov
mov
dec
sbb
jl
jge
and
push
pop
out
add
add
cltd
lock
aas
jo
es
jg
cmpsl
pop
pop
pop
ret
mov
mov
cltd
enter
scas
mov
loop
mov
movsb
rcr
int
dec
jmp
cwtl
cmp
sub
and
rcrl
das
sub
iret
incl
inc
inc
jae
outsl
bound
mov
xor
pop
mov
xchg
fucompp
enterw
pop
data16
dec
mov
sbb
jo
or
and
mov
popf
mov
addr16
stos
insb
or
adc
sbb
xchg
mul
jo
and
xorl
sbb
fs
rolb
pop
push
pop
jae
inc
fisubs
and
inc
adc
mov
xchg
sub
mov
lods
popf
imul
lret
inc
mov
stos
faddl
lds
or
cli
jno
in
in
push
dec
jg
xor
aas
hlt
dec
adc
rolb
mov
test
xchg
push
fldcw
icebp
mov
les
xchg
mov
mov
cmp
mov
pop
mov
sahf
and
mov
push
dec
jnp
arpl
fistpll
repz
xchg
push
or
push
xlat
test
fs
xor
dec
or
xor
mov
jb
nop
repnz
xlat
pop
aaa
cmpb
out
ret
push
gs
subl
add
addr16
sahf
mov
mov
stos
aad
cmp
fld
fidivl
daa
aad
psrlq
pop
cmp
and
adc
int
pop
mov
pop
hlt
loope
xchg
jmp
xchg
inc
adc
adc
xor
mov
data16
mov
xchg
mov
cwtl
xchg
out
xor
lods
icebp
jg
jne
ret
mov
je
mov
push
mov
mov
mov
lcall
outsl
cmp
iret
mov
test
mov
inc
fldt
decb
mov
js
nop
mov
mov
or
xor
in
and
xor
adc
sbb
mov
sub
jb
movsl
call
pop
xchg
shll
lock
mov
jp
rclb
add
loopne
mov
xchg
stc
loope
sub
insl
sbb
loop
or
cs
ds
add
jle
xor
push
test
addr16
sub
stc
das
mov
repnz
mov
roll
insb
dec
adc
lret
lret
addr16
mov
stos
push
or
inc
pop
mov
pop
push
add
mov
or
adc
mov
cmpsb
daa
cmpsb
pop
mov
clc
aas
in
cmp
add
push
adc
xor
mov
add
pusha
pop
gs
inc
jle
and
imul
inc
mov
sub
mov
cmp
pushf
ret
and
hlt
lea
mov
out
cmp
mov
mov
ret
cmp
jle
xorb
fst
rcll
mov
push
or
mov
or
out
mov
clc
push
pop
rolb
and
push
xor
loope
ss
adc
aaa
fisubrl
mov
stc
sarb
mull
add
add
push
inc
stos
sbb
scas
push
pop
fs
or
inc
or
add
mov
lcall
hlt
push
pop
cwtl
repz
cmpsl
movsb
sbb
jnp
lds
mov
dec
jae
shrb
add
gs
scas
arpl
sub
iret
add
mov
mov
dec
adc
cli
pusha
mov
dec
push
push
sub
in
add
jmp
xchg
mov
mov
dec
jnp
fcomi
imull
shll
lds
shll
fisubrs
add
pop
xchg
repnz
xor
int
test
sub
loopne
mov
jno
add
jb
aaa
shrb
jno
cmp
std
inc
add
or
push
fstl
data16
movl
sbb
sub
ficoml
lcall
je
cmp
data16
jp
test
add
jecxz
loop
xchg
fldl
jle
mov
inc
mov
int
popa
jne
jne
les
dec
fistpl
outsl
xchg
stos
lahf
imul
push
outsb
and
push
dec
cmp
ficoms
xor
xor
push
adc
and
shl
in
pop
into
shl
cltd
adc
sub
lahf
in
lea
push
or
sbbb
ret
adc
jne
sahf
mov
mov
mov
jmp
shll
scas
jno
cmpsl
mov
rorl
xchg
push
adc
test
cmpsb
jae
or
mov
scas
or
xchg
aas
push
ret
ds
add
and
xchg
pop
dec
sub
hlt
mov
cmp
xchg
les
xchg
and
push
push
pop
push
xor
mov
pop
mov
xor
push
and
lcall
cmpsb
addr16
shlb
pop
std
jl
adc
into
xchg
sbb
imul
mov
mov
sub
inc
aaa
dec
movsl
ss
sub
out
add
ljmp
dec
ficoms
test
cmp
lods
aam
shr
stc
mov
pop
loopne
insl
rep
inc
or
ja
lret
test
mov
test
stos
mov
cmpl
nop
pop
es
mov
repz
adc
mov
aaa
daa
shll
outsl
mov
lock
shrl
dec
sbb
add
xor
dec
ja
cs
movsl
repz
xor
aad
lea
ss
fs
cmpsl
rcrb
mov
xchg
sub
sarb
addr16
js
push
scas
pop
push
les
dec
or
loopne
adc
xchg
repnz
xchg
inc
jo
xlat
cmc
jg
pop
jp
and
fcmovne
dec
fistpl
and
and
fwait
addr16
push
xchg
jns
inc
adc
bt
cmpsl
xchg
mov
adc
int
pop
rclb
dec
in
repz
dec
xlat
fisubl
pop
push
test
mov
gs
and
into
pop
dec
test
xor
test
and
jp
jo
jbe
push
test
xlat
popf
dec
jne
inc
outsl
or
xchg
stos
mov
sbb
fisubrs
lods
pop
cli
mov
movsl
test
jns
mov
add
dec
dec
xchg
pop
jae
push
sti
aam
cmpsb
sbb
pop
cmp
dec
dec
fpatan
mov
imul
dec
mov
xor
cmp
call
cmp
sub
or
cmp
mov
jo
dec
call
cmp
repz
jecxz
cmp
push
cltd
push
adc
andl
in
stc
adc
outsl
das
lcall
es
imul
inc
pop
pop
dec
outsl
adc
pop
stc
cmp
jne
jmp
xchg
add
mov
pop
outsb
dec
adc
leave
inc
mov
out
fldl
pop
sub
aaa
and
or
mov
les
dec
sub
mov
shrl
or
jb
ljmp
in
jb
xchg
push
lods
je
dec
test
mov
icebp
aaa
pop
jnp
cmpsl
mov
rcll
lret
notl
les
std
das
add
in
xlat
cltd
addr16
dec
dec
lods
es
out
js
popa
push
out
lret
jl
sbb
jecxz
and
movb
clc
cmp
andb
push
add
jle
mov
adc
jno
adc
mov
mov
dec
daa
pop
aad
jge
dec
out
in
test
popf
inc
add
stos
adc
cmp
mov
popf
push
dec
jne
addb
xlat
cli
and
add
out
ficoms
push
outsb
xor
xor
shl
cmc
adc
adc
jae
pop
loope
sti
andb
call
or
push
mov
in
add
pop
inc
xchg
ljmp
sbb
loop
cmc
insb
or
mov
cmp
aad
dec
pop
rep
push
sub
mov
pop
mov
xor
cltd
adc
adc
loope
cmp
mov
and
jmp
ljmp
mov
repz
push
and
shrl
xor
mov
xchg
and
add
jle
out
mov
and
mov
test
shlb
jns
xchg
jmp
push
sub
pop
mov
divb
shlb
push
sub
enter
mov
lcall
inc
movsl
add
cld
mov
data16
mov
mov
mov
leave
dec
or
ds
pop
sub
call
aas
fs
or
nop
lock
loopne
filds
or
sbb
hlt
sti
add
scas
and
pop
fcomi
ficomps
dec
jnp
cmp
mov
pushf
fsubl
test
rol
cmp
and
call
out
and
and
adc
rclb
sub
jecxz
push
add
adc
sub
cmp
repnz
stos
popa
fsubr
xchg
sti
out
xor
mov
mov
fistpll
xor
jo
sub
mov
ret
movsb
cmp
cltd
push
xor
lcall
mov
outsb
xor
insl
das
pop
aas
imul
cmpsb
fstpl
das
imul
shrl
repnz
xchg
xor
cltd
ret
aaa
dec
int3
sbb
sub
push
mov
dec
and
lahf
mov
out
fcoml
clc
jns
jp
or
cmp
add
pop
test
jle
sbb
sub
cmp
pop
addr16
xchg
lods
fmul
stos
out
cld
sbb
jp
lea
pop
fcomip
jmp
dec
adc
lret
cs
fidivrl
pop
xor
xchg
mov
push
cwtl
xlat
ret
push
sub
xchg
popa
scas
inc
mov
data16
test
shll
lret
mov
mov
pop
jae
sbb
mov
test
lea
lret
and
inc
jb
sbb
jbe
in
movsl
pop
pushf
negb
mov
lret
ja
mov
xchg
add
push
popf
inc
lea
sub
mov
mov
mov
das
xor
xchg
imul
and
popf
aaa
xlat
and
pop
push
or
lcall
aaa
fnstcw
sbb
and
mov
jae
add
test
enter
jg
mov
cmpsb
lret
pop
push
xchg
mov
dec
je
jne
mov
ret
jns
rolb
jmp
stc
push
mov
dec
into
add
xchg
or
and
test
adc
or
cmp
mov
es
mov
clc
cmc
xor
mov
lret
sub
inc
das
insb
pusha
pop
push
xor
sbb
push
jge
and
pushf
sub
push
or
mov
and
dec
ja
fisttps
ret
lcall
pop
fcmovu
sub
ret
mov
shrb
sub
aas
push
adcl
hlt
push
jns
sbb
xor
push
xor
pop
xor
pop
cmpsl
cltd
insb
pop
ror
dec
movsl
jge
loopne
mov
leave
push
xor
lea
inc
dec
or
fimuls
xchg
push
in
jp
lcall
mov
js
push
hlt
push
icebp
scas
aad
jno
or
addr16
in
pop
inc
adc
sub
pushf
cmp
pop
pop
mov
repnz
fiadds
cmp
jge
cld
dec
pushf
les
and
xor
or
es
sbb
or
dec
fucom
cmp
dec
xchg
inc
sub
dec
dec
pop
lods
sahf
push
mov
sarl
push
movsl
push
pop
jae
mov
jno
fndisi(8087
pushf
icebp
cmp
push
movsl
jae
pop
aam
push
pop
adc
enter
pop
jg
jle
sub
orl
jo
cmp
icebp
dec
inc
dec
sahf
mov
sbb
clc
stos
sbb
adcl
cmc
scas
add
fdivrl
jno
mov
pop
repnz
add
decb
shrb
sbb
push
or
sbb
add
popa
jmp
or
jg
sub
xor
cltd
add
popf
sti
rol
clc
push
call
loope
push
dec
dec
add
adc
std
sbb
scas
lret
pop
push
call
es
cwtl
in
pop
out
in
mov
hlt
clc
inc
rorb
and
dec
inc
lret
shll
fisttps
dec
cltd
das
inc
push
ret
imul
cmp
mulb
inc
cmp
push
rcr
push
lds
push
cld
jecxz
pop
inc
push
mov
or
outsb
mov
pop
imul
pop
iret
push
out
fidivs
sti
lods
ret
fs
xor
sbb
dec
sub
fwait
and
push
ret
mov
add
je
jg
fnstcw
enter
pop
xor
add
push
testl
adc
pop
popf
in
or
push
or
pop
cmpb
aam
inc
repnz
and
pop
std
lret
icebp
inc
mov
pop
mov
fs
fnstsw
xor
das
arpl
mov
fnsave
stos
in
fsub
fcompl
add
sub
sbb
jl
push
dec
and
stc
and
xchg
out
leave
imul
dec
mov
push
js
fwait
int
cmpsb
inc
and
mov
sub
xchg
mov
test
sub
adc
adc
pusha
mov
stc
mov
jns
adc
mov
add
nop
rcl
movsl
sub
les
push
adc
add
mov
imul
adc
mov
add
ljmp
xchg
leave
sbb
inc
lret
stos
ljmp
fcompl
xor
mov
dec
adc
mov
xchg
lcall
mov
push
arpl
dec
pop
inc
repz
aam
add
movsb
inc
loop
cmp
pop
and
test
push
sahf
jg
loopne
das
adc
push
ss
ja
ja
xor
xorb
les
testb
xor
jne
ret
sbb
sub
mov
lret
sbb
es
xorb
aam
mov
push
mov
and
cmp
or
insl
adc
xchg
dec
xchg
push
arpl
xchg
mov
mov
lds
jmp
lock
inc
cmpsl
pop
dec
fs
add
mov
in
dec
jge
adc
imull
dec
cmp
insl
jg
cmp
jge
js
xor
sahf
out
and
popa
into
pop
or
cmpb
fisttpl
adc
popf
ficomps
inc
push
xchg
jno
popa
xchg
ss
pop
mov
pop
or
xchg
or
jl
std
push
jb
xor
jbe
mov
sbb
and
inc
leave
stos
in
mov
popa
mov
loopne
frstor
sub
enter
into
mov
mov
cmp
es
mov
mov
push
push
adc
shrl
cmp
pop
cmp
lret
ret
xor
jbe
fimull
clc
mov
stos
loop
icebp
adc
xchg
jmp
mov
push
lret
sbb
jnp
and
add
xor
mov
iret
push
hlt
fiadds
popa
adc
inc
xchg
rolb
inc
ljmp
inc
cmpsb
push
lea
cmpsl
and
ljmp
lret
in
inc
sbb
mov
cwtl
sti
adc
mov
mov
jg,pt
jne
aaa
lea
in
or
stos
cmp
mov
movsl
sti
repnz
ret
cltd
cmc
jg
add
pop
jecxz
test
xchg
dec
inc
lods
bound
mov
insl
int
pusha
inc
xlat
xchg
mov
or
lcall
ja
lock
pop
xchg
cmc
xor
lahf
cmp
xor
jne
sub
test
in
pop
stos
aaa
hlt
push
int3
jno
popf
outsl
pop
cmp
xchg
cmpsl
push
and
sti
xor
cmpsb
int
jecxz
shrl
les
sub
mov
rol
inc
xchg
mov
inc
fucomi
or
subl
cmp
fisubs
or
ret
js
jecxz
cmpsb
addl
clc
imul
mov
xchg
xor
dec
clc
mov
jnp
pusha
int3
rorb
dec
cmp
and
test
sbb
xchg
pushf
aas
push
stos
ret
mov
sub
repz
pop
lcall
adc
xchg
jecxz
or
adc
dec
dec
lret
cmp
add
mov
mov
xchg
sub
bsf
sbb
jno
xchg
enter
push
or
in
lods
push
ret
adc
jo
imul
loope
rol
outsb
shrb
mov
aaa
sbb
jle
test
out
gs
out
jbe
scas
or
int3
push
pop
inc
dec
inc
pop
and
cmp
dec
add
mov
aas
pop
mov
inc
out
fwait
icebp
cmc
push
stos
int
out
into
bound
out
jbe
mov
dec
inc
mov
adc
push
cmp
ret
jo
hlt
dec
jo
lds
cmp
fidivrs
cmc
cmpsb
out
insb
pop
rcrb
mov
popa
imul
test
inc
push
jae
xchg
jno
sub
mov
pop
xchg
shll
xchg
shl
push
rclb
imul
pusha
out
arpl
test
into
mov
mov
add
imul
push
mulb
pusha
xor
inc
xor
dec
rcrb
ja
insb
mov
adcb
pop
sti
arpl
lcall
xchg
in
pop
jb
or
xor
xlat
scas
dec
mov
gs
jmp
aaa
sbb
fsubl
aaa
push
xor
js
xchg
fisttps
inc
mov
jmp
sbb
add
xor
push
adc
dec
ror
mov
sub
and
cmpsl
in
fldt
filds
pop
or
xor
les
mov
stos
pop
mov
stc
dec
arpl
imul
sbb
lcall
mov
or
xor
adc
fadds
or
jne
outsb
or
xchg
scas
lods
jne
xor
push
mov
ret
or
push
aas
mov
dec
sbb
lock
setnp
and
mov
shll
add
rep
cwtl
pop
dec
pop
sbb
jbe
shrl
push
xchg
jae
shll
filds
push
xchg
or
push
pop
xchg
jb
cmp
popa
mov
in
mov
and
xor
adc
pop
xchg
xchg
sarb
cmpsb
adc
cmp
popf
xlat
pop
lock
sbb
out
fwait
mov
mov
inc
in
xor
rcr
das
popa
cmp
leave
pop
or
pusha
stos
orb
and
mov
mov
out
loop
fadds
mov
pop
cmp
mov
jns
add
cmp
pop
xchg
ret
aaa
sahf
hlt
push
cmp
or
xor
dec
inc
bound
push
push
roll
mov
jbe
or
and
add
and
cld
mov
out
insb
push
imul
dec
andl
clc
test
sbb
je
lret
push
xorb
ljmp
mov
sub
adc
je
out
hlt
cld
rol
xor
movsl
mov
pop
rep
xor
and
xorl
inc
cmpsl
sbb
push
xor
jle
or
loopne
xchg
jae
je
cmc
or
rorb
imul
mov
mov
push
int3
xchg
xchg
orb
jle
and
rcl
xchg
sahf
and
push
mov
pop
dec
mov
repnz
popa
mov
jae
hlt
andl
outsb
or
pushf
movsl
xlat
mov
orl
stc
pop
call
fisubrl
pop
sbb
sub
cmp
mov
mov
test
adc
les
jns
xchg
xchg
xor
stos
daa
popa
ret
pop
addl
push
cmc
notb
mov
jno
pushf
mov
push
leave
mov
adc
mov
cld
int
lods
in
std
gs
sbb
stos
xor
or
pop
addr16
or
js
lcall
fwait
aam
or
pushf
nop
les
cmp
test
cld
das
cmp
mov
jo
into
scas
jp
adc
mov
jbe
inc
shlb
mov
lcall
jo,pn
js
in
dec
hlt
push
jno
sarb
mov
pop
in
ss
mov
xchg
or
fcmovnb
pop
jns
xchg
in
outsl
in
mov
hlt
popa
loopne
fs
dec
jge
data16
mov
imul
daa
gs
xchg
xchg
xchg
xchg
mov
dec
ljmp
loop
sahf
adc
iret
sub
mov
push
mov
cli
mov
mov
sahf
inc
jnp
jno
fucom
out
inc
sub
ror
jb
xchg
push
testl
dec
dec
iret
sbb
stos
adc
push
or
aam
insb
push
imul
pushf
inc
out
and
and
pop
mov
and
and
adc
in
into
jnp
add
adc
jmp
add
jg
shr
ljmp
xchg
aad
pop
mov
ja
loope
ret
mov
mov
jl
pop
addb
into
popa
push
cs
iret
mov
mov
in
jnp
in
add
mov
adc
push
insl
inc
mov
xorb
mov
xchg
imul
mov
cmp
in
dec
js
add
in
inc
aam
loope
aas
jae
mov
inc
xchg
sub
popa
stos
daa
push
and
shl
js
jmp
add
mov
sbb
jge
add
mov
scas
test
jl
shll
mov
adc
ret
scas
adc
je
out
adc
test
mov
nop
in
ret
outsb
shrb
dec
mov
cmpsl
jmp
mov
fldenv
rcrb
push
ljmp
mov
stos
pop
rclb
stos
in
push
js
mov
jno
hlt
fidivl
or
mov
ss
mov
cmp
aad
cmpl
scas
scas
stos
push
xchg
lret
lock
hlt
xchg
loopne
add
mov
lret
les
mov
je
jecxz
adc
xor
lds
lock
mov
in
sub
sbb
lcall
enter
in
pusha
and
and
es
mov
outsl
push
js
bound
movsl
adc
in
rorb
cmpsb
scas
sub
shrb
daa
push
mov
pusha
int3
cmp
mov
sarb
or
lret
into
jno
arpl
fisubrs
divb
sub
lahf
pop
push
mov
jle
jp
dec
test
mov
xor
mov
sbb
pop
mov
jmp
xchg
lock
lret
pop
inc
mov
scas
popa
das
jno
sub
xorl
jb
test
or
and
jno
cmp
adc
mov
inc
hlt
mov
scas
cmp
ljmp
imul
movsb
sahf
lahf
repz
rorb
outsb
rorl
adc
sub
pop
test
mov
ja
sbb
mov
jmp
ss
push
int3
inc
push
cli
mov
pop
push
or
ss
or
mov
and
inc
mov
and
das
push
push
insl
add
xor
icebp
pop
rcrl
inc
jle
sbb
in
sarb
push
push
cld
xchg
mov
dec
pop
xchg
sub
jno
jg
sbb
sbb
or
xor
out
mov
xor
sbb
cmp
and
sub
sti
popf
js
repz
xchg
sahf
xchg
lods
inc
xor
pushl
or
jno
inc
into
dec
jp
push
bound
inc
es
push
repz
subb
push
adc
and
sbb
adc
loop
pop
or
jmp
ror
nop
dec
and
pop
call
outsb
je
fs
cs
adc
ret
rcrl
rorb
and
push
jle
popf
or
lahf
addr16
push
or
jbe
push
mov
adc
push
sub
push
lods
sbb
inc
and
mov
pop
add
mov
lret
in
push
mov
bound
adc
and
stos
loope
dec
pop
lcall
repz
mov
sub
rcrb
fildl
mov
jg,pn
call
pushf
xor
add
and
sub
xor
dec
mov
leave
xor
jmp
fdivrl
pop
loopne
pop
lret
inc
add
jb
loop
movsl
je
adc
sub
xchg
flds
inc
fidivrl
movsl
jo
push
mov
xorb
inc
aas
and
or
dec
push
aas
fimull
xor
pop
xchg
lret
pop
fs
pop
jge
test
movsb
ljmp
andl
andb
add
ficompl
xor
adc
mov
xchg
pop
adc
setne
mov
add
in
xchg
es
jno
jae
inc
xor
ret
leave
xchg
add
inc
sub
adcb
mov
sub
enter
ret
sbb
dec
mov
lock
dec
lods
daa
sbb
dec
leave
outsb
into
arpl
aam
addb
xorl
mov
out
pop
mov
mov
test
add
mov
cld
stos
cwtl
xor
shrl
push
aam
cmp
pop
cmp
jmp
aam
cwtl
dec
sbb
fisubrl
jle
mov
fwait
add
add
pusha
in
sub
pusha
scas
xchg
imul
mov
cli
mov
cmpsb
sbb
int
into
ss
sti
out
cmp
adc
cld
lock
jg
mov
aad
inc
addr16
dec
jle
xchg
lret
rorb
cli
inc
and
jge
jo
jecxz
lret
jge
push
xchg
icebp
out
addb
ljmp
adc
xor
mov
loope
sub
xchg
orl
popf
xchg
sub
adc
loop
mov
movsl
movsl
hlt
xchg
cmc
or
fwait
dec
ds
repnz
mov
loop
shll
pop
sti
mov
arpl
jno
in
mov
and
icebp
lret
icebp
not
cmp
sbb
dec
les
movsb
xchg
ret
push
mov
adc
test
insb
mov
imul
loop
addl
cld
fadds
imul
in
and
mov
testl
mov
or
inc
xchg
jno
mov
daa
and
subl
sub
popa
fsubl
cmp
js
test
mov
aaa
mov
sbb
inc
adc
mov
and
dec
adc
xchg
pop
and
in
push
push
scas
push
mov
xor
sub
call
call
insl
sbbb
mov
xor
sub
out
movsb
sahf
into
xor
ss
leave
popf
pushf
adc
repz
sub
jns
or
and
je
xor
cmp
xchg
dec
je
cmp
stos
add
sti
jb
xchg
fisubl
aaa
jns
pop
out
outsl
mov
loope
stos
arpl
dec
outsb
jns
sbb
jo
stos
loop
ja
popf
cmpsb
mov
rol
mov
and
sub
and
and
pop
inc
mov
imul
jne
scas
data16
mov
daa
xor
enter
mov
hlt
leave
movsl
jns
out
cmp
arpl
xchg
ficoml
sbb
jae
repnz
in
int
mov
aam
and
sub
enter
xor
dec
out
test
mov
adc
fidivrl
rcr
mov
dec
mov
xor
mov
hlt
and
out
lods
inc
sub
cmp
inc
inc
test
xchg
sbb
or
mov
sahf
dec
outsl
push
mov
pop
adc
push
jb
loope
xor
mov
lods
push
insb
mov
fcmovnb
xchg
movq
mov
sti
fdivs
and
sub
push
inc
cmc
xor
jnp
inc
jno
cwtl
pop
lods
lcall
aad
xlat
sbb
fwait
in
adc
rclb
fisubl
sbb
sub
lahf
jns
fwait
pop
sub
cmpl
pop
idivb
call
dec
push
jo
pop
ja
sahf
lds
and
mov
cli
das
push
in
call
and
xchg
ljmp
sbb
dec
scas
jnp
imul
jns
mov
mov
sbb
std
push
adc
clc
rcrl
sub
sub
sbb
push
or
mov
mov
inc
and
mov
mov
xor
dec
lock
dec
jmp
outsl
outsl
les
repz
test
jb
push
out
adc
or
sar
addr16
or
fsubrs
mov
in
mov
pop
test
cmpl
lret
pop
les
mov
adc
pop
in
or
divl
imul
das
mov
out
fistpl
repz
xorl
and
inc
adc
ljmp
xor
cmp
sub
inc
push
mov
mov
test
ficomps
call
ret
cmp
nop
mov
sub
xor
cmpsb
cmp
or
push
and
pusha
mov
xchg
push
jns
popa
cmc
imul
mov
and
inc
mov
rorl
mov
negb
pop
pushf
in
mov
addr16
add
xchg
push
imul
jno
std
sbb
mov
xchg
sbb
aad
pusha
dec
leave
xchg
aas
roll
jne
les
imul
rolb
fisttps
cltd
jb
repz
sbb
pslld
fcompl
xor
sbb
aaa
pop
xor
cmp
pop
adc
push
push
ja
jns
cmp
cmp
and
cld
pop
mov
popl
loop
subb
xadd
or
psubw
js
xor
repz
adc
stc
xor
cmp
mov
sub
jmp
insb
stos
push
pop
sbb
jp
sub
fs
push
push
rcrb
and
add
mov
xchg
jbe
adc
movsl
mov
xchg
testl
push
mov
xchg
jl
xlat
popf
mov
jmp
out
dec
shrb
sub
sbb
jae
aad
xorb
mov
int
inc
or
sti
push
pop
push
mov
mov
cs
idiv
mov
mov
xchg
push
loop
adc
fstpt
ret
mov
test
movhps
mov
pusha
sahf
dec
imul
pushf
mov
cwtl
adc
outsl
mov
jl
mov
push
inc
add
pop
dec
inc
leave
iret
dec
paddb
xlat
in
movsl
out
jg
and
inc
pop
cmp
out
cmp
cwtl
fldl
xchg
rcrl
dec
adc
in
cli
inc
add
dec
push
mov
mov
push
movsb
jle
push
mov
unpcklps
pop
mov
sbb
inc
mov
test
jae
incl
xchg
shlb
mov
nop
adc
pop
fistpll
lfs
enter
push
add
pop
repnz
dec
or
fnstsw
inc
daa
into
imul
adc
gs
push
mov
cmp
pop
repz
loop
jbe
out
fs
and
push
xor
out
xor
sub
das
or
xor
mov
cmpsb
call
sbb
inc
and
dec
loop
out
loop
cmp
and
xchg
push
aaa
add
out
jb
ja
xchg
sahf
jp
pushf
cld
fcoms
bound
rolb
fwait
out
push
movsl
repz
in
dec
scas
inc
lock
jge
jno
nop
ds
mov
mov
or
in
sbb
sti
push
or
ret
mov
repnz
sub
inc
jno
sti
adc
mov
pushf
pop
ret
push
psubusw
mov
shlb
fisubs
jnp
repz
mov
mov
cwtl
xor
sub
cmc
ja
mov
push
sbb
sbb
mov
popf
xchg
add
out
or
xchg
aaa
clc
enter
fwait
pop
sti
mov
fists
inc
fidivs
movsl
es
pop
add
sbb
cmpsb
cmc
lock
cld
adc
or
push
xchg
jl
jp
add
je
stc
xchg
push
bound
dec
inc
or
mov
push
adc
stos
adc
ja
add
dec
jmp
jl
ja
std
repnz
int
pop
jp
jae
mov
pop
nop
int3
cltd
and
ja
cmp
js
mov
or
lcall
and
icebp
mov
dec
movsb
jne
aam
mov
cmpsb
mov
lock
mov
mov
imul
ficompl
jne
jge
bound
rclb
dec
lcall
add
push
mov
mov
ja
lret
daa
sub
lea
adc
lahf
xchg
add
mov
lahf
orb
in
test
xchg
sbb
enter
ds
mov
lods
stos
clc
scas
and
fdivl
pop
xchg
dec
sbb
cld
push
jp,pt
test
rcr
sbb
adcb
jl
ja
jecxz
mov
adc
mov
ret
adc
cld
inc
stc
mov
or
inc
mul
cli
and
mov
cmp
fdivp
dec
es
fiadds
push
daa
movsb
aas
xor
jle
mov
call
cmp
xor
shll
js
cltd
test
jns
sahf
in
pop
sbbl
sub
shlb
pop
scas
xor
xchg
rol
out
inc
jno
gs
and
mov
decl
fnsave
sub
jns
fistl
icebp
cs
nop
pop
or
sbb
xor
xor
out
sub
lock
jns
hlt
pushf
mov
or
or
xchg
dec
movsl
hlt
jae
pop
or
and
cwtl
sub
nop
cmp
lahf
into
cmpsl
popa
mov
jnp
daa
cmp
fldt
pop
cmc
push
movl
dec
xor
fidivl
push
push
daa
mov
in
aad
cmp
xchg
inc
out
xor
out
cmpsb
stc
ss
adc
jle
jmp
pop
dec
mov
xchg
out
cld
push
int3
cmpsl
loopnew
or
xchg
fldcw
adc
mov
push
dec
daa
dec
cmp
cmp
rol
pop
add
rcr
dec
mov
sbb
ljmp
pop
pop
hlt
xor
push
and
xor
fucomi
add
out
sub
out
in
xor
cli
xchg
rcl
push
jmp
repnz
dec
dec
dec
and
add
aad
lret
je
dec
or
fdivrp
nop
mov
fpatan
loopne
es
mov
iret
add
int
jmp
add
xor
aaa
data16
loope
push
pop
xchg
xor
cs
xchg
mov
push
sbb
rcrb
dec
adc
pop
lea
repz
push
std
pop
push
jle
les
push
lock
adc
xchg
sbb
mov
mov
push
popf
cmp
push
cmp
aad
leave
push
call
cmp
jg
out
xor
xchg
mov
mov
fisubl
mov
dec
mov
xor
mov
xchg
xchg
adc
mov
ret
dec
ja
mov
mov
ret
in
cmc
sub
scas
dec
mov
hlt
aaa
lods
mov
push
mov
stos
lcall
jmp
add
mov
push
jns
push
popa
add
mov
cmc
fimuls
jmp
sub
mov
pop
pop
add
dec
inc
outsl
loopne
int3
jno
adc
jns
or
sbb
test
insb
adc
push
jae
push
xlat
call
mov
ljmp
jp
mov
fisubrs
cltd
loop
lods
in
pop
mov
mov
mov
push
mov
cwtl
mov
movsl
ljmp
sub
mov
add
rorl
pop
and
sahf
popf
push
jbe
xchg
sahf
cmc
subl
lds
jb
cmp
jmp
push
cmp
mov
outsl
inc
xchg
xlat
divl
das
ficomps
mov
xchg
or
sarl
pop
mov
int3
cmpsb
fwait
push
pop
movsl
pop
int3
mov
hlt
pop
popf
out
stc
int
jmp
incl
mov
orb
fwait
xor
inc
pop
mov
pushf
stos
ja
imul
in
outsl
popa
cmp
xchg
stos
cmp
sub
or
inc
mov
outsl
mov
sbb
cmp
rolb
lahf
js
mov
jl
mov
scas
jmp
adc
dec
xor
fnstsw
hlt
sti
push
cmpsb
push
mov
in
fcompl
dec
aaa
out
and
test
pop
cmpsb
mov
pop
inc
into
outsb
mov
and
imul
xchg
mov
cmpl
es
rcrb
add
rol
cwtl
fidivrl
xchg
xchg
jbe
jo
andl
dec
js
movsb
dec
or
cmp
std
loop
ror
jecxz
stos
mov
mov
push
pop
scas
cmp
idivb
fidivs
add
mov
mov
push
into
pop
dec
push
cmpsl
lcall
rol
lds
mov
and
xor
sub
cmp
mov
ds
jl
scas
shrb
xchg
iret
add
push
xorl
fs
mov
push
jne
gs
test
jb
sub
rorl
jge
je
mov
jmp
add
outsl
clc
sbb
inc
sbb
aad
test
mov
dec
mov
inc
arpl
out
mov
mov
xchg
arpl
or
sbb
loopne
cltd
cmp
xchg
add
mov
cmc
add
lods
orb
shlb
or
lahf
push
sub
add
imul
arpl
enter
pop
ficoms
inc
sbb
xor
fsubrl
cmp
imul
push
aad
xchg
pushf
popf
dec
add
movsb
cmpl
jg
push
dec
test
outsl
sbb
dec
fcomp
or
lea
dec
fsub
aad
sbb
mov
jbe
repz
fistpl
int
mov
insb
or
andl
and
dec
add
jno
dec
mov
cmp
pusha
xor
xor
scas
mov
cmp
mov
xchg
xor
add
stos
add
out
outsl
pop
popa
in
add
push
in
adc
sub
mov
out
push
jne
xor
jmp
rcrl
mov
enter
in
dec
mov
icebp
ret
lret
adc
movsb
clc
xchg
hlt
mov
cmp
aad
ret
in
dec
test
jbe
cmp
push
fsubr
aaa
movsl
insl
inc
addb
jg
stc
movsb
fs
xor
mov
loop
xor
pop
adcb
cmp
mov
jnp
in
dec
xor
stos
enter
add
dec
notb
and
xor
xor
inc
push
pop
in
mov
and
or
insl
imul
scas
int
fwait
and
mov
out
push
cld
loop
mov
cld
repnz
cwtl
xor
not
mov
nop
mov
int3
inc
repz
lahf
adc
repz
pop
adc
gs
arpl
add
mov
xor
movsb
incl
mov
or
cmp
mov
test
ds
adc
or
ja
arpl
push
roll
cld
je
jp
mov
or
sbb
mov
dec
daa
lods
push
shrb
std
addr16
jnp
movsl
subb
add
pushf
loop
sub
aaa
jp
in
add
cmpsl
push
outsl
dec
xorl
rcr
mov
or
mov
test
sahf
push
repz
repnz
ret
lods
mov
movsl
nop
aas
mov
push
imul
hlt
mov
mov
call
out
xor
fwait
push
lock
xchg
out
sub
daa
push
mov
mov
shrb
fistps
and
insl
jns
push
fdivr
shlb
cmp
inc
rcll
pusha
or
lcall
pop
add
fidivrl
jb
jne
or
add
jbe
mov
cli
es
mov
aaa
aas
mov
adc
mov
xlat
arpl
mov
addb
xor
out
mov
test
clc
push
cmp
jo
jge
mov
adc
mov
push
mov
test
cmpsb
out
mov
lcall
mov
lods
jmp
scas
popa
into
ja
add
mov
pop
cmp
aas
pop
gs
pop
call
dec
xor
mov
dec
xchg
pop
mov
lret
sub
ljmp
loopne
or
stc
ja
pop
sbb
adc
fldln2
stc
rclb
into
add
fistpll
scas
aas
dec
sbb
jg
jne
adcl
jne
repnz
add
mov
mov
dec
sbb
xorl
xor
and
or
cmp
push
xchg
popa
adc
push
xchg
cltd
icebp
mov
in
and
jecxz
push
loope
hlt
lods
xlat
sub
sub
lret
cld
cli
addr16
outsl
pop
fcom
push
sub
xchg
and
das
sbb
int
stc
insl
stos
sbb
insb
shrb
mov
lahf
jg
loop
cmp
mov
xor
cltd
jbe
call
pop
orl
loopne
repnz
stc
fs
inc
jb
add
cwtl
in
out
je
mov
popa
sbb
sbb
setp
xchg
pop
mov
mov
mov
adc
fwait
jp
xor
push
push
sahf
mov
lret
sub
add
xor
sbb
jbe
repz
into
movsb
dec
pop
xor
lea
data16
lock
inc
jnp
push
idivl
bound
int3
inc
mov
sub
pop
cmp
lcall
ss
ja
mov
sbb
dec
xor
jecxz
mov
mov
xchg
sbb
jns
xor
xor
inc
test
inc
xchg
bound
jmp
les
xchg
shlb
into
or
cld
push
mov
mov
mulb
clc
pop
jns
js
or
ret
cli
push
ds
gs
adc
sbb
xor
add
shr
push
dec
mov
ret
push
js
push
mov
jge
adc
cmp
lea
mov
call
divb
movq
sbb
js
es
cmp
and
pop
push
dec
xchg
jnp
jbe
jbe
lcall
push
imull
mov
in
cmp
sti
cwtl
jle
fcomps
xchg
adc
out
movsl
add
xchg
sub
xor
shl
push
sub
jg
lcall
mov
outsb
lret
pop
and
sub
int
sbb
shrb
cmp
imul
mov
xchg
outsb
push
jae
das
xor
sub
ss
push
repz
xor
imul
cmp
add
imul
pop
out
stos
pushw
not
stc
enter
pop
std
mov
inc
pusha
push
mov
push
cmp
cmpsb
bound
add
mov
jecxz
repnz
cmp
fstpt
std
jbe
test
cmpsb
aad
fwait
or
push
sahf
leave
iret
lods
pop
popf
movsb
xchg
aad
aam
push
xor
imul
xchg
test
negl
add
and
arpl
push
mov
push
sbb
sub
int
and
sub
pop
xchg
out
fs
outsb
ds
mov
adc
dec
mov
insl
jp
sbbb
mov
rorb
ja
dec
and
out
scas
out
lea
fsubrl
sub
test
and
int3
mov
xchg
out
cli
daa
jo
adcl
or
sub
pop
fistpl
call
add
mov
mov
cmpsb
fists
sub
fists
and
mov
test
outsb
scas
sti
jecxz
xchg
jmp
aaa
push
imul
inc
inc
cwtl
scas
ret
dec
sub
xchg
inc
cwtl
leave
lahf
movsb
sub
cmp
cmp
push
or
xchg
out
sub
mov
jae
push
push
pop
pop
dec
stos
icebp
pop
jno
add
lahf
test
fildl
push
xor
cmp
repnz
lcall
xor
jbe
je
add
or
jbe
lods
ds
xchg
xchg
loopne
pushf
bound
call
int
out
or
sub
add
mov
inc
stc
sub
sbb
xorb
cld
sub
xchg
xor
mov
dec
or
fdiv
aas
lds
push
imul
xchg
cmp
push
int
mov
push
cmp
jno
in
pushf
push
outsl
mov
ret
scas
arpl
movsb
add
test
mov
ret
test
pop
push
cmpb
fistpl
mul
notl
jl
daa
icebp
cs
and
or
push
mov
inc
andb
rcr
mov
addr16
or
popa
jmp
out
or
pop
inc
mov
or
mov
mov
nop
mov
popf
cmp
mov
xchg
jmp
loope
push
xor
mov
sbb
adc
sbb
inc
lds
inc
js
or
out
or
fs
incw
repz
das
adc
cmpsl
push
loop
inc
mov
stc
ret
popf
into
inc
xchg
sbb
xchg
sbb
mov
aas
mov
je
and
push
dec
mov
lods
push
out
jecxz
sub
in
out
jmp
clc
inc
in
outsb
cs
xor
cmp
pushf
jecxz
jg
sarb
pop
xor
xor
outsb
int
arpl
and
mov
fimull
adc
cmp
pop
adc
insl
adc
repnz
add
mov
rcrb
sbb
js
dec
push
in
in
enter
nop
fs
pop
adc
xchg
push
mov
ss
push
inc
lret
inc
cmp
add
cmp
lock
mov
jmp
lods
add
jmp
push
mov
pop
or
ret
ret
sbb
sbb
cld
pusha
mov
mov
in
jno
clc
sub
xchg
ja
je
mov
in
add
cmovle
cmc
cmpsl
cmp
stos
jmp
mov
push
cmp
in
xchg
fnstenv
cmp
jne
push
jle
xchg
add
repz
ljmp
mov
shl
scas
push
jnp
int3
jae
lcall
cld
mov
pop
push
xchg
lret
cltd
lods
and
inc
pop
cli
in
call
sub
faddl
dec
jno
ljmp
ja
cmp
mov
test
push
mov
inc
call
push
xchg
rdmsr
sbb
in
jne
push
pop
or
mov
sub
pop
subl
jno
data16
loop
add
push
mul
mov
mov
ljmp
mov
pop
push
fnsave
cmpsb
push
ljmp
adc
int3
cmc
shrl
xchg
rclb
mov
es
cmp
int
lods
hlt
xchg
iret
gs
mov
cmp
xor
popl
adc
mov
and
dec
movsb
inc
sbb
addr16
push
outsb
sub
imul
pmovmskb
or
xchg
aam
jne
cmp
pushf
popf
loop
call
xor
inc
js
mov
jbe
rclb
pop
pop
mov
pushf
jo
lret
cmpsb
sbb
popf
into
icebp
adc
cmp
adc
subb
cwtl
mov
dec
rcll
dec
mov
and
dec
jns
jmp
pushf
add
push
scas
sbb
xor
loop
jns
lock
add
js
push
add
aas
popf
cmp
xchg
mov
call
pop
outsb
jno
adc
stc
jb
lcall
fxch
movsb
mov
mov
inc
out
lret
sub
xlat
ss
add
mov
and
lds
lea
sbb
sub
push
mov
cmp
mov
out
pop
dec
and
sbb
mov
inc
orb
push
or
out
lcall
and
cmp
jno
lods
pop
jl
or
pop
inc
mov
inc
shl
sar
sti
fwait
mov
andl
push
pop
shl
mov
lods
lock
faddp
jno
test
stos
pop
mov
mov
in
movsl
out
adc
rcrb
push
scas
push
lods
push
jns
fbstp
mov
ljmp
lock
cmp
xchg
cmpsb
cmp
in
shlb
mov
leave
and
movsl
or
popf
mov
ja
dec
push
pop
adc
dec
xchg
imul
push
scas
ret
jns
and
mov
sarb
xchg
add
jbe
xchg
mov
xor
pop
inc
jg
mov
js
loop
int
popa
pop
pop
or
aad
mov
scas
enter
lock
xlat
ds
add
add
loopne
lods
fists
mov
lret
xchg
or
cmp
stos
iret
xor
jns
mov
in
jecxz
rorb
xor
cmp
movsl
mov
addb
xor
lcall
negb
scas
push
mov
adc
and
mov
push
das
sub
ret
jae
cmp
ja
leave
nop
inc
cmc
stc
jno
enter
sbb
ror
push
or
xor
pop
in
mov
call
pop
or
es
clc
sub
push
jns
or
cmpsl
or
inc
push
push
add
dec
sbb
fistps
sbb
pop
adc
lods
inc
cli
out
fucom
push
add
mov
std
sbb
sub
push
enter
mov
loopne
cld
push
loop
insl
jne
xchg
into
repz
rdmsr
rcrb
xlat
js
or
xor
xchg
and
adc
in
out
jno
mov
mov
scas
shlb
sub
in
adc
cmc
mov
lea
fwait
test
and
and
add
sti
fcomps
out
ja
sbb
imul
popa
imul
es
jle
mov
fsts
inc
mov
jnp
popf
cmp
lret
sbb
dec
push
fistps
lahf
in
pop
sub
jmp
call
inc
mov
inc
push
pop
push
push
xchg
sbb
mov
jmp
lds
push
into
pop
xchg
rorl
mov
fsubp
lahf
in
and
popf
rcll
dec
sbb
scas
fs
ret
mov
leave
jl
in
fisubs
push
adc
jo
loopew
dec
cmpsb
out
and
push
pop
mov
nop
imul
lret
mov
cmp
mov
push
dec
dec
popa
dec
out
mov
dec
in
xchg
lods
adc
ljmp
adc
jp
xchg
je
or
sub
rcrb
aas
iret
mov
test
gs
dec
in
jp
cmp
jnp
inc
cmp
adc
popf
mov
sbb
js
es
fdivrl
mov
data16
inc
inc
sbb
addr16
lret
rclb
enter
xor
lds
shrb
das
fmulp
or
mov
adc
sub
push
pop
hlt
xchg
inc
leave
mov
cwtl
lods
xor
jmp
imul
xorl
inc
in
add
sub
push
aam
aam
and
mov
inc
dec
repz
pop
popf
xlat
and
push
insb
or
daa
cwtl
mov
dec
ja
push
fdivs
mov
add
pop
test
jecxz
cs
mov
scas
xchg
adc
mov
cli
in
dec
lea
out
enter
mov
adc
cmpsb
in
push
out
sub
stc
pop
adcl
xor
xor
daa
divl
jno
fisttpll
add
pop
sarl
xor
mov
add
pop
sub
and
pop
scas
pop
or
fcoms
js
je
xor
and
cli
sbb
popf
fbstp
push
push
jg
xor
pop
mov
andb
push
fs
and
ljmp
aam
data16
gs
or
mov
bound
iret
inc
pop
jbe
inc
and
repnz
add
out
mov
xchg
lahf
loopne
jecxz
cmp
inc
mov
or
jmp
imull
mov
push
pop
xchg
xchg
jecxz
xchg
lret
daa
cmp
ret
fistpl
and
sub
push
hlt
lds
ljmp
inc
add
jae
cmp
xchg
shrl
cli
call
jb
jge
movsl
cmp
lds
jp
adc
je
imul
cmp
pop
inc
inc
or
sbb
and
push
mov
mov
jnp
shll
lea
cs
fdivl
push
push
nop
mov
sbb
jbe
lcall
push
pop
daa
imul
aaa
jecxz
mov
out
pop
xlat
inc
cli
sub
arpl
mov
mov
fsubrs
sub
inc
mov
push
das
ret
repnz
pop
push
les
add
mov
sub
leave
out
into
aaa
imul
and
or
sub
ss
sub
roll
lock
les
dec
popf
and
sub
xor
int3
inc
xchg
movntps
dec
jae
push
pop
dec
dec
iret
js
std
iret
push
or
jmp
add
pop
sub
lods
mov
or
cmp
loop
shl
dec
inc
jge
push
xchg
dec
or
jge
movsb
adc
or
insl
and
enter
fmuls
cltd
xchg
add
mov
and
bound
pop
add
pop
xchg
cmc
xor
cs
adc
ds
cld
jnp
push
push
xchg
mov
cld
nop
bound
pop
pop
cmp
adc
push
mov
arpl
jbe
js
stc
inc
dec
shlb
fs
mov
andl
mov
add
enter
add
out
call
jns
xlat
aam
mov
xor
dec
divb
insl
inc
popa
call
xor
out
cmp
mov
pop
scas
adc
das
das
or
dec
sbb
push
aad
les
jg
dec
jle
xlat
mov
lret
cmp
push
icebp
adc
add
jmp
inc
call
pop
dec
adc
add
ds
xor
xor
imul
and
into
push
daa
push
ret
jns
lahf
jo
fldz
jb
dec
xor
cli
fimuls
pop
cmp
repz
ficomps
cmp
and
push
jg
pop
call
xchg
ficomps
jns
shrl
lods
scas
outsl
dec
data16
test
lret
imul
les
push
fcompl
xor
xor
in
jnp
dec
or
lock
test
movsl
add
sub
adc
jg
movsb
adc
aam
pop
dec
or
pop
fwait
sbb
sub
mov
cmc
cltd
pop
mov
lods
cmp
movsb
xchg
sub
or
pushf
sbb
pop
sub
test
subb
fidivs
jo
push
mov
mov
xchg
mov
sbb
in
cmp
fs
dec
out
movsb
int
cmp
ja
pop
ja
outsl
fld
lods
daa
jp
es
lret
loopne
leave
xor
xlat
cmc
xor
std
sbb
addr16
int
aas
or
mov
jo
cmp
adc
pop
xchg
imul
pop
cltd
add
pop
mov
dec
jbe
popa
mov
xor
fsubp
inc
and
xchg
test
jno
daa
in
andl
loop
ljmp
and
incb
movsb
aas
xchg
adc
leave
aaa
cltd
dec
repz
jmp
mov
out
cmpsb
sahf
dec
loop
add
cmp
add
subl
mov
sbb
cli
xor
jo
and
sub
mov
xor
push
push
scas
inc
jge
jbe
test
push
outsl
ffreep
mov
sahf
push
sbb
dec
gs
imul
mov
out
sub
aad
aaa
stos
cmp
push
sub
rcrb
push
adc
mov
ljmp
sub
push
and
mov
test
inc
stos
sub
ljmp
sbb
xchg
jno
repnz
mov
fsts
mov
nopl
mov
fcoml
pinsrw
int3
add
xlat
mov
in
pushf
loopne
test
cwtl
xchg
outsb
int
jl
test
aam
shrb
call
incb
gs
xor
or
mov
add
push
clc
mov
jne
mov
aas
out
xor
adc
outsl
xchg
inc
js
mov
test
and
insl
daa
shll
imul
shrb
mov
mov
jmp
loope
mov
sub
addr16
imul
mov
jg
inc
pop
mov
imul
dec
hlt
jb
pop
in
mov
mov
in
fs
je
jo
int
adc
outsb
out
mov
inc
adc
and
mov
push
mov
aas
mul
push
or
sbb
pop
je
fwait
je
xlat
pop
cmpsl
push
hlt
inc
fidivrs
stc
sub
out
cs
in
in
sub
xor
mov
decl
adc
push
and
sbb
sbb
test
xor
pop
push
xor
add
inc
in
out
mov
push
scas
hlt
fpatan
push
xchg
push
scas
cmp
mov
cmp
dec
inc
cmp
aam
mov
push
test
mov
xchg
jne
push
lret
jno
mov
adc
in
xchg
cmc
scas
jno
mov
pop
movsb
mov
inc
shll
sbb
and
rolb
add
out
cwtl
shlb
dec
clc
xchg
xchg
shll
fdivrl
inc
insb
lcall
xchg
pop
mov
repnz
mov
nop
jl
dec
xchg
sarl
jmp
add
fsubl
aaa
jmp
xchg
mov
add
aam
test
push
xlat
mov
mov
in
rorl
push
orl
jecxz
or
inc
js
jle
lcall
mov
xchg
and
or
or
out
xchg
imul
rcl
iret
pop
xchg
fsts
iret
xchg
imul
or
test
popa
cmp
fwait
sub
dec
pop
fisttpl
es
push
lea
mov
jg
push
lret
xchg
push
pop
call
ret
mov
add
push
or
jl
fdivp
out
sbb
test
aaa
clc
daa
xlat
or
test
jecxz
push
pop
pop
add
aam
mov
cmp
fsin
das
cld
fwait
xor
les
xchg
pop
sbb
jae
cld
testb
push
out
sub
mov
and
cmp
in
adc
sub
fiaddl
mov
add
jle
jg
mov
mov
and
and
rcrb
shr
test
jne
inc
jne
pusha
jo
stc
fmul
and
dec
mov
inc
jbe
xchg
ret
dec
xor
xchg
sbb
mov
dec
fs
scas
or
xchg
xchg
dec
fnstsw
cs
sbb
add
or
jne
jno
dec
loopne
pop
stos
nop
scas
call
pop
mov
je
iret
pop
xor
sub
pop
std
dec
adc
mov
les
roll
mov
ljmp
fdivs
xchg
out
insl
cld
dec
std
js
pop
aaa
packuswb
fsubrl
and
ja
dec
stc
iret
jmp
cmp
clc
inc
or
aaa
imul
fisttpl
fabs
xchg
push
aaa
loopne
neg
lcall
lods
jg
popa
push
pop
jne
fidivrl
fisttpl
xor
xchg
fidivl
lret
push
cld
outsl
rcrl
fimuls
adc
std
repnz
rcr
ss
arpl
imulb
or
dec
inc
testl
mov
dec
add
or
push
mov
leave
fisubl
cmpsl
push
shr
add
adc
fists
imul
cwtl
jle
inc
popf
ret
push
pop
xchg
mov
add
jecxz
out
mov
xor
push
int3
dec
xor
mov
pop
mov
xor
cmpsl
xchg
decl
jbe
mov
and
int
into
mov
je
push
mov
inc
fwait
movsb
sbb
out
shrl
xor
mov
subl
cmp
shr
ljmp
nop
adc
out
mov
inc
imull
sbb
push
lcall
out
out
mov
mov
stos
and
pop
push
int
or
xor
push
dec
popf
mov
icebp
jmp
adc
pop
popl
cmpps
sbb
and
jmp
jb
js
jb
mov
sbb
into
xchg
filds
mov
push
mov
inc
or
push
cmpb
mov
dec
pop
sarl
pop
clc
icebp
movsb
pop
mov
push
and
ror
xchg
add
repz
sub
dec
mov
clc
dec
popa
lcall
xchg
cmp
dec
dec
dec
int3
sub
xor
pusha
push
xchg
or
loop
addr16
pop
pop
or
mov
nop
rorl
outsb
lcall
idivl
push
mov
jge
and
xor
push
adc
das
mov
daa
fistps
adc
jne
cmc
xchg
aaa
push
flds
lea
movups
mov
jp
movsb
lcall
cltd
push
push
stos
jle
sbb
and
lret
aam
cmpsl
sbb
cli
clc
daa
mov
and
pop
adc
in
mov
mov
sub
popa
lods
movsb
adc
xchg
sbb
or
iret
gs
sahf
jl
sahf
aam
push
in
jge
cs
sub
jnp
cmp
sbb
pop
pop
daa
ds
inc
mov
test
cmpsl
mov
js
inc
push
jmp
jmp
aad
movsl
pop
std
shrb
nop
sbb
stc
or
add
fldt
sbbl
std
icebp
stos
xor
data16
inc
mov
add
jns
outsl
roll
push
insl
nop
and
test
loop
insb
xor
mov
cs
ret
add
bound
in
and
xchg
imulb
sbb
xchg
int
pushf
mov
fwait
xchg
ljmp
lock
popa
pop
sbb
call
insl
or
test
cmc
outsl
push
pop
cmp
call
das
lods
aaa
pop
and
cwtl
in
ror
mov
fcmovne
loope
sub
out
push
and
leave
add
mov
das
daa
fwait
aad
rcrl
adc
sbb
lea
fwait
sbbl
add
adc
jecxz
push
sar
xchg
add
cmp
sub
aam
notb
out
push
xor
pop
mov
adc
rolb
push
xchg
dec
loop
or
mov
in
lea
xchg
xchg
in
and
aad
imul
and
or
loopne
and
int
dec
cmp
aas
out
sbb
imull
mov
xor
mov
dec
sbb
insb
xchg
test
and
pop
sbb
scas
jg
pop
cmp
stos
add
ret
mov
mov
pop
jmp
stos
push
dec
fcoml
xor
lock
cmp
popf
iret
inc
mov
ret
mov
push
inc
loopne
xor
jp
sbb
sbb
inc
cmp
stos
test
dec
sbb
sub
push
pop
xor
xor
into
mov
movsl
xchg
in
leave
rorb
add
popf
dec
imul
or
mov
add
or
dec
fldt
mov
pop
das
rclb
add
test
add
fwait
cmp
out
mov
call
xor
mov
or
stos
jmp
xchg
mov
lret
cmpsl
lods
pop
mov
bound
cmp
mov
sti
repz
rol
loope
pop
mov
push
mov
jge
lret
lock
fisttpll
scas
push
data16
xor
pop
test
fs
cmp
mov
fsubs
sbb
mov
scas
adc
and
lcall
inc
pushf
subb
cmpsl
dec
and
inc
es
hlt
inc
inc
jl
push
jecxz
jp
pop
and
dec
and
inc
sbb
call
xchg
xchg
mov
popa
ljmp
stos
adc
add
aad
in
in
inc
jb
lret
jmp
pushf
jae
orb
inc
in
loop
out
loop
movsl
lods
enter
push
inc
lcall
jnp
push
popa
outsb
ror
add
sub
nop
out
ret
jnp
sbb
jbe
ss
sub
das
cmp
pop
inc
pop
xlat
out
push
cmpsb
push
cmp
lods
xchg
add
mov
sbb
iret
aad
loope
das
jecxz
adc
stos
cmp
inc
fcompl
inc
pop
dec
push
inc
adc
dec
push
add
orl
dec
ret
xchg
push
enter
bound
ret
mov
loop
sbb
push
pop
mov
lcall
pop
data16
dec
xor
pop
sbb
lea
in
xchg
int
aam
jle
je
add
inc
sbb
sbbl
inc
cwtl
mov
pop
push
mov
jle
lcall
cmp
cmp
scas
sarl
mov
cltd
decb
imul
jmp
leave
movsb
shr
pop
jmp
xorb
les
xchg
adc
data16
cltd
popf
jns
and
call
mov
jbe
cwtl
clc
jge
dec
xchg
stos
cmp
add
xor
inc
insb
in
fmull
test
and
roll
inc
mov
sbb
or
or
mov
je
cltd
dec
dec
dec
fdivs
popa
aas
nop
sti
adc
adc
pop
mov
adc
shrb
push
rcr
mov
mov
xor
outsl
inc
stos
push
cli
hlt
pusha
push
shrl
into
test
das
imul
scas
movsl
pusha
aad
mov
pop
add
fadd
data16
adc
sub
mov
adc
lock
sub
movsb
outsb
mov
fcmovnu
repz
scas
arpl
cwtl
fcoml
push
fistl
pop
adc
xchg
mov
in
push
dec
pusha
sub
imull
out
test
iret
test
xlat
pop
cwtl
mov
les
push
sti
jg
push
das
mov
jb
push
dec
ss
ss
popf
mov
mov
adc
test
mov
pusha
jle
sbb
push
shrb
add
out
inc
adc
sar
inc
outsl
popf
push
lret
sbb
jl
mov
xchg
test
mov
xchg
push
js
mov
lea
cmp
iret
add
je
inc
inc
sub
dec
pop
outsb
popf
push
or
mov
popf
aad
cmp
cmpsl
or
fsub
push
sbb
fsts
and
stos
mov
test
jnp
sub
jmp
or
dec
sbb
movsl
push
pop
pop
shrl
mov
xor
push
ret
push
les
cmp
mov
pop
mov
push
popa
sbb
out
xor
ljmp
loopne
daa
inc
filds
jp
sub
mov
adc
lds
lahf
rep
pop
sahf
xchg
mov
test
push
mov
cmpsb
arpl
add
pop
fistpll
lods
sti
and
cmp
aaa
iret
pop
sub
les
cli
cs
sbb
test
jnp
pop
in
and
or
lahf
sbbb
mov
idivl
movsb
and
cmp
popf
sub
adc
cmpsl
sbb
into
jg
test
scas
mov
pop
cmp
dec
dec
xchg
cmpsb
notb
idivl
pop
or
iret
xchg
inc
push
adc
adc
sbb
xchg
mov
insl
daa
xor
stc
gs
mov
jle
xchg
sbb
jb
loopne
sarl
push
jbe
dec
sbb
or
dec
fsubs
adc
mov
sub
xchg
pop
push
add
das
and
mov
cwtl
stos
adc
pusha
push
inc
pop
push
repnz
inc
mov
and
std
pop
mov
fstps
in
jle
in
ret
jecxz
cs
xor
xchg
fbstp
lds
mov
mov
repnz
jp
mov
fnsave
sbb
jnp
inc
xor
test
push
inc
inc
mov
cltd
mov
loope
xchg
push
push
adc
push
test
mov
sub
mov
jp
cmp
mov
mov
fs
pop
push
pushf
mov
and
outsl
into
mov
ds
xchg
dec
adc
inc
mov
mov
jae
insb
lods
xor
push
mov
inc
jge
mov
dec
stc
iret
jge
inc
dec
and
and
sbb
cld
inc
jbe
shll
mov
fnstenv
push
out
sbb
mov
sbb
test
lret
sbb
lea
sahf
mov
in
cs
scas
outsl
mov
mov
cwtl
inc
imul
pop
jle
pusha
dec
lea
add
dec
enter
sahf
test
inc
jae
and
jmp
pop
jg
mov
out
dec
test
mov
jns
xchg
mov
jae
popf
jno
or
das
ja
lcall
push
repz
mov
int3
push
or
sbbl
leave
cwtl
and
or
push
rcrb
bound
lahf
pop
std
repz
sbb
push
and
aas
loope
adc
in
cli
scas
pop
call
sbb
pop
push
xchg
sub
mov
jg
and
mov
inc
paddd
bound
xchg
mov
in
pop
movb
das
sahf
mov
repnz
push
xchg
adc
fidivl
mov
mov
arpl
andl
loope
fstpl
loopne
mov
dec
lahf
sub
xor
adc
mov
mov
ret
loope
or
sub
mov
mov
push
fstps
leave
pop
and
pop
cmp
rcrb
sbbb
jbe
add
into
and
adcl
add
add
in
testb
out
jo
xchg
in
sbb
call
aam
cmpsb
ja
fistl
popf
frstor
xor
mov
movsl
push
bnd
or
in
imul
or
out
cmc
fdivl
shrb
stos
jo
lock
fs
pop
insb
sar
add
mov
enter
cmp
movsl
mov
sub
call
xchg
and
mov
leave
test
ja
mov
inc
cmpsb
mov
add
mov
push
jbe
mov
mov
push
repnz
test
and
dec
test
dec
cmp
mov
push
jae
leave
jl
hlt
int
inc
into
ds
in
repnz
dec
adc
addr16
push
xchg
push
xlat
push
cmp
cmp
sub
lret
shlb
das
jmp
push
rcl
adc
sub
sub
enter
or
xchg
mov
scas
aas
lahf
lock
mov
movsb
or
test
pusha
in
mov
and
jbe
aas
mov
dec
xabort
push
pop
dec
push
push
xor
push
xchg
push
mov
or
xor
mov
shrl
aad
dec
call
add
pop
jp
pop
and
add
ds
ret
mov
clc
mov
pop
dec
xchg
push
cld
mov
loop
rclb
dec
or
add
jle
or
stos
outsb
sub
mov
gs
adc
xchg
push
imul
or
ret
sbb
jbe
cmp
fwait
rolb
out
dec
je
stos
movsl
xor
pop
cmp
jp
pushf
sti
iret
or
dec
inc
add
lock
enter
jmp
ficoms
mov
loopne
cmpxchg
sub
cli
lea
jne
mov
sbb
jne
mov
mov
lea
gs
push
xor
inc
lods
mov
dec
cmpsl
jg
shrl
jge
jge
push
mov
out
fwait
js
fdivr
sbb
movsl
jns
mov
repnz
or
repz
lcall
mov
push
stc
mov
cmp
sti
mov
mov
hlt
mov
cwtl
lcall
and
movsb
and
out
mov
lcall
xchg
mov
lahf
pop
aas
xchg
dec
cmp
inc
mov
sub
and
add
fwait
pop
into
pusha
add
mov
push
mov
aaa
pop
xchg
out
sub
cmp
fadds
jb
push
stos
adcl
xchg
stos
add
push
in
cmp
rcrl
push
fistpll
mov
mov
adc
inc
cmp
mov
lret
xchg
cmp
les
sub
inc
or
mul
adc
sub
insb
jbe
sub
xor
cmp
sbb
in
addr16
scas
adc
test
xchg
call
mov
dec
adc
and
mov
sub
cmp
les
dec
adcl
repnz
or
out
pop
push
data16
dec
int
and
rorl
loope
rorb
gs
adc
mov
inc
push
int
outsb
push
or
test
add
icebp
bound
jnp
ficomps
inc
cs
xor
sbb
fdivrs
push
or
mov
cli
ds
fsubs
divb
out
out
aas
lcall
adc
cmpsl
mov
lds
enter
sub
jmp
enter
das
push
jge
pop
xchg
mov
lods
out
add
popf
lds
pop
cli
inc
iret
fnstsw
dec
cmpsb
dec
push
sbb
fisttps
lahf
mov
addb
lods
fstl
dec
leave
mov
dec
lcall
push
jo
stos
out
xlat
push
lock
daa
mov
push
aad
out
int
sub
std
xor
cmp
stos
lds
fidivrl
mov
xchg
ret
arpl
in
fimuls
adc
jno
sahf
cmpsl
ret
cld
add
in
inc
jbe
xlat
mov
insl
sbb
fmuls
or
cmc
ret
int
xchg
sahf
cs
ja
pop
jnp
mov
jo
push
inc
call
mov
shlb
xor
inc
insl
sub
mov
ret
sub
lret
lret
xchg
imul
dec
loop
sbb
daa
adc
xchg
out
mov
pop
pop
sbb
int3
inc
mov
sub
pop
add
or
sub
mov
test
mov
or
jl
std
pop
push
inc
fnstenv
mov
arpl
mov
fcmovnbe
sub
aad
dec
push
xor
jl
add
dec
mov
xor
int
jg
mov
xchg
sub
and
mov
add
scas
movsl
pushf
mov
rclb
and
dec
int
call
outsl
inc
mov
sub
ret
jne
int3
dec
xor
mull
ja
mov
add
push
pop
mov
mov
dec
mov
mov
jp
xor
fadds
movsl
mov
push
or
xchg
mov
mov
mov
clc
adc
popf
imulb
in
jnp
adc
sub
lock
dec
fdivs
xchg
data16
push
mov
jno
outsb
stos
es
sbb
and
repz
adc
inc
sbbb
dec
pop
iret
mov
dec
daa
lock
adc
mov
dec
add
cmpb
xlat
jb
push
adc
push
gs
ret
jp
inc
in
add
mov
sub
xor
sub
adc
pop
mov
imul
mov
or
enter
lods
test
jp
and
pop
ljmp
or
jo
sbb
roll
jnp
bnd
loope
data16
je
cmp
lods
lea
test
test
sbb
mov
lahf
ds
sbbl
push
sahf
repnz
sub
adc
add
repnz
pop
mov
movsl
mov
mull
mov
or
movsb
test
and
in
or
dec
cs
int3
fwait
sub
adc
dec
stos
push
push
mov
push
adc
ss
add
mov
pusha
mov
call
jg
sub
repz
sub
in
cmpsb
inc
stc
cmpsl
outsb
mov
jle
jne
sbb
add
jno
aam
in
add
out
lahf
mov
pop
or
aas
cmp
ja
fs
jae
dec
jmp
loopne
cltd
leave
aaa
lods
xor
inc
or
sub
mov
mov
testb
fisubrl
xor
and
out
clc
pop
mov
cs
call
pop
ja
sbb
or
jb
cmp
mov
das
psraw
andb
insb
dec
jecxz
and
xor
jne
ret
sbb
pop
into
inc
pop
lret
lea
cmpl
arpl
enter
jns
loope
or
pop
sbb
lret
cwtl
inc
adcb
mov
repz
cld
mov
xor
dec
inc
sub
mov
push
xchg
fcmovu
and
mov
scas
adc
inc
mov
inc
out
mov
js
cmpsb
fbstp
mov
xor
ret
rcrb
cmpsl
dec
xchg
out
xorl
add
fnstcw
cmp
xchg
mov
mov
in
dec
pop
stc
popa
out
sbb
and
fnstenv
psubusw
sub
popf
inc
xor
jmp
mov
imul
dec
movsl
pop
mov
data16
xor
enterw
sub
sub
pop
inc
and
fdivs
or
push
pop
jp
pop
mov
imul
mov
push
and
sbb
in
jnp
mov
aam
dec
aad
sti
cld
rorl
aam
dec
and
xchg
scas
xorl
mov
xor
cmp
adc
sbb
pop
orl
sbb
jne
js
sub
out
inc
lock
pop
mov
add
and
sub
bswap
pop
sub
ljmp
sbb
test
mov
pop
jecxz
je
cmpsb
sub
xchg
jne
fisttpll
loopne
ret
cmp
xchg
push
loopne
lret
into
sbb
in
cmp
jp
sti
or
push
mov
dec
inc
shrl
jo
sbb
mov
js
ret
dec
out
cmp
pop
test
lea
movsb
fists
sub
cld
mov
sub
dec
xchg
xor
shll
sbb
xchg
je
push
in
jo
cltd
inc
fadd
into
addb
loop
dec
repz
popf
adc
clc
push
push
mov
out
hlt
sbb
sub
and
popa
add
daa
iret
loope
data16
mov
int
in
cmpsl
or
push
sub
imul
mov
sub
xchg
les
bound
lock
push
cli
in
adc
fdivl
xor
iret
fwait
dec
std
add
adc
mov
fld
and
fcom
out
sbb
iret
outsl
push
xchg
mov
jg
lahf
mov
and
or
lcall
aas
clc
lret
lea
push
sbb
test
adc
mov
ret
push
inc
fadd
and
jge
repz
jbe
popf
ds
cltd
fists
mov
push
xchg
or
mov
lods
push
scas
or
test
jno
xor
or
xchg
jbe
mov
mov
in
lods
add
in
inc
gs
sbb
leave
jl
shl
in
sbbl
jl
mov
sbb
mov
pop
mov
xchg
imull
stos
jb
cmp
or
repz
fimuls
daa
and
divb
div
cmp
pop
sub
jae
sbb
arpl
aad
xchg
icebp
test
jge
push
xchg
test
cmp
mov
xchg
add
in
inc
scas
cs
push
push
mov
push
mov
fcompl
dec
les
mov
sbb
fisttpll
sbb
or
mov
lahf
fstps
int3
in
and
ds
or
or
jmp
unpcklps
mov
xorl
pop
jo
and
lret
fdivl
js
pop
ret
cmpsl
aad
std
in
xor
jg
jmp
aaa
bound
jns
jmp
out
dec
mov
out
bound
push
add
mov
test
xchg
pop
cmp
pop
addr16
mov
cltd
add
testb
pop
stc
and
cmp
pop
fdivs
lods
sti
cmp
or
mov
adc
pop
cmc
mov
xchg
in
xchg
jp
xchg
inc
sub
inc
sub
mov
inc
cmpsb
lret
ljmp
inc
pop
dec
push
fisttpl
nop
cld
sub
fsubrs
imul
and
lret
sti
pop
in
mov
es
mov
das
shlb
jmp
pop
xor
xchg
adc
jmp
fstpt
inc
mov
pop
jp
inc
stc
push
add
lret
xlat
or
mov
cld
mov
ret
xor
lcall
dec
je
cltd
nop
lcall
add
testl
xchg
imul
mov
jg
inc
inc
call
cmp
nop
sarb
adc
pop
mov
inc
pusha
lods
popf
in
movsl
in
inc
lock
js
cmp
push
shr
adc
pop
ljmp
xor
mov
push
ds
inc
add
je
out
mov
test
iret
jg
mov
ds
stos
jmp
xor
ljmp
sti
jae
mov
test
popa
jns
nop
rcll
push
xchg
cltd
sarl
fstps
inc
sbb
pop
pop
inc
jecxz
mov
jb
pop
or
sahf
sub
movsb
inc
insl
and
sbb
push
test
jbe
adc
mov
push
cmpsb
dec
fcmovb
int
loope
js
and
inc
pop
mov
aaa
lret
jne
test
cmpsl
shrl
loop
movsb
cmp
add
int3
push
test
int3
jo
push
jo
or
nop
mov
mov
lahf
mov
ja
loopne
pop
test
ret
xchg
iret
mov
mov
pop
shlb
push
mov
mov
aas
or
cltd
pop
push
jb
outsl
pop
push
cld
in
int
mov
dec
dec
test
dec
mov
popf
add
lock
mov
sbb
sub
inc
add
pop
paddusb
jb
adc
cwtl
xchg
xor
ss
xchg
push
std
out
insl
mov
jno
inc
rorb
xchg
xor
cmp
imul
imul
mov
cltd
fildl
cltd
fsts
sbb
clc
pop
lahf
xchg
push
jecxz
jle
jnp
push
mov
loop
push
mov
rcr
stos
and
sub
xchg
cmp
push
xor
orb
lcall
inc
adc
hlt
aas
out
add
dec
push
mov
mov
xor
or
cmp
das
outsl
or
fs
jmp
mov
insl
push
dec
fdivrs
xor
out
xchg
addb
jg
insb
leave
aam
pop
test
int
add
lahf
mov
inc
sbb
clc
cmpsl
add
loope
into
fs
add
mov
lret
mov
cltd
cmp
jo
dec
addr16
clc
popf
mov
mov
inc
cltd
in
xor
mov
xchg
mov
lock
sub
pushf
and
sbb
out
push
test
cmpsb
icebp
or
enter
repz
push
repnz
jae
add
mov
mov
js
xor
pop
inc
sbb
bound
push
mov
dec
push
out
cmp
sbb
sub
adc
das
fisttps
mov
sub
cmp
repz
subb
mov
pop
jb
push
inc
pop
push
shll
aas
cmp
testb
mov
lahf
mov
data16
jbe
data16
hlt
and
and
int3
sar
dec
test
xchg
pop
xor
cmp
inc
jne
add
and
and
push
pop
xor
es
adc
test
data16
fistpl
ss
sub
fsubs
mov
bnd
loope
xlat
jns
pop
xchg
mov
cmpsb
es
cmc
push
sbb
es
mov
insb
adc
sbb
test
dec
dec
add
and
mov
das
jle
xor
in
pop
mov
xchg
mov
into
daa
cltd
xchg
mov
shrl
fisubrl
ret
je
lret
int
insl
outsl
loop
pop
pop
and
in
ss
pop
repnz
mov
into
xor
aam
lret
sbb
xchg
sub
scas
and
out
pop
inc
or
imul
xchg
out
pushf
in
aam
aad
fwait
xchg
pop
mov
std
pop
sbb
add
lock
pop
repz
pop
inc
je
adc
push
mov
xchg
jmp
jae
movsl
lret
mov
lods
cmc
ret
into
xor
enter
dec
sub
cltd
je
push
sub
test
arpl
dec
and
jp
roll
rcr
addr16
pop
rcll
popf
movsb
lds
in
ret
or
push
loope
cwtl
sub
mov
inc
inc
mov
lods
jmp
dec
in
movsb
xchg
loop
add
push
into
in
int3
cli
movsb
add
repnz
cmp
xchg
mov
int
adc
push
mov
cmp
jbe
jp
lret
cwtl
xor
inc
mov
inc
push
in
and
dec
inc
xchg
je
push
adc
inc
inc
mov
ret
add
mov
ret
bnd
cmp
pop
inc
add
mov
pop
or
sti
pop
fldcw
sbb
add
rclb
test
mov
add
mov
sbb
jl
sbb
mov
mov
xchg
sbb
leave
inc
jo
push
adc
sbb
sbb
imul
sub
sub
out
lcall
adc
mov
sub
lahf
dec
sbb
pop
inc
dec
jne
mov
inc
xchg
scas
add
loopne
mov
mov
xchg
sahf
sbbl
loope
je
cmpsl
and
or
mov
push
sbb
insb
outsb
leave
cli
leave
jl
lds
mov
popa
lds
push
mov
push
into
jecxz
cs
sbb
or
push
test
and
shrl
cwtl
mov
fidivl
mov
mov
ja
add
je
cmp
sub
or
je
jnp
inc
mov
adc
test
or
dec
xor
xchg
mov
in
pop
jb
pop
mov
sbb
outsb
pop
mov
push
adc
xchg
cs
or
sti
insl
out
mov
mov
mov
jl
sub
rorl
ljmp
mov
mov
inc
daa
jae
js
sbb
xor
call
push
and
andb
nop
sar
clc
addr16
arpl
jge
mov
inc
and
xor
xchg
insb
fsub
xor
xchg
pop
subb
out
sbb
mov
js
out
out
adc
fwait
cmp
test
push
mov
cmc
mov
insb
loope
pusha
mov
xor
cmc
xchg
push
pusha
cmp
jb
or
inc
popa
mov
arpl
fldt
push
mov
adc
std
shr
pop
push
mov
test
xchg
das
inc
add
fs
mov
sbb
outsl
gs
or
aad
rcrw
popa
xchg
adc
sbb
mov
rcrb
das
mov
cmp
and
rorl
icebp
sub
outsl
shll
andb
outsl
cmpsl
mov
in
cmp
testb
jnp
cmpl
push
rclb
cmp
cmp
push
pop
push
push
push
mov
sub
push
cmpsb
push
xchg
and
push
movsl
lods
je
out
cmp
inc
in
mov
adc
fidivrl
lds
fidivrl
movsb
scas
jno
jl
lret
jnp
cmp
sbb
dec
jbe
mov
xor
rorb
adc
cmp
cmp
incb
push
jbe
and
jnp
sahf
arpl
arpl
sub
lods
es
rcrb
mov
adc
push
cmp
adc
push
mov
ss
mov
lds
and
inc
rcrb
xchg
lods
sub
lret
push
mov
mov
loop
and
mov
sbb
lods
shlb
pop
pop
mov
loop
mov
aaa
cmp
push
mov
jge
jle
cltd
xchg
jae
repnz
inc
lods
mov
ret
filds
popa
inc
pop
xor
sub
inc
or
jno
push
das
lea
mov
fsubrl
mov
mov
lret
loopne
mov
sbb
fildl
jp
imul
push
jne
fistl
push
pop
inc
xor
jmp
add
mov
subl
jge
pop
jae
mov
inc
jmp
push
xchg
cmpsl
ret
bound
repnz
jbe
test
test
dec
movsb
out
imul
jmp
add
icebp
cmp
push
movsb
pop
add
xchg
push
mov
sub
jge
xchg
lea
fcoms
xchg
sbb
push
xchg
lcall
inc
cwtl
int
xchg
pop
sbb
jg
popf
sahf
rcl
jne
mov
or
popf
call
xchg
jb
or
sbb
scas
pusha
mov
frstor
ret
mov
dec
ret
add
cli
xchg
add
push
xor
mov
pusha
ret
xor
pop
nop
cmpsb
test
pop
jbe
cwtl
mov
xchg
scas
loope
fsubrp
andb
stc
pop
mov
dec
adc
addl
std
sub
cld
lahf
sti
adc
jle
xor
pop
sub
shlb
lds
mov
sbb
adc
pop
push
mov
add
hlt
xchg
fisubs
inc
inc
ss
insl
pushf
jp
and
push
push
cwtl
inc
adc
push
arpl
mov
rclb
enter
lods
stos
sbb
mov
cmp
ret
outsb
addb
or
or
fstl
xchg
fs
cld
dec
xorb
add
jne
popf
fs
or
lods
mov
repz
outsb
jge
rcrb
jae
fisubrs
inc
ret
mov
leave
addr16
in
out
mov
mov
call
mov
pop
dec
popa
sbb
sahf
enter
add
inc
push
xor
stos
fcmovnb
fisubl
xchg
jne
scas
shlb
lret
ret
cmp
rep
dec
gs
add
mov
test
insl
mov
lcall
cmp
push
aas
pop
mov
cli
mov
iret
xchg
xlat
cmpsl
ljmp
call
xchg
jnp
dec
mov
test
fdivs
sbb
mov
mov
stc
inc
cmpsb
rclb
int
mov
jno
sub
cmc
test
imul
push
fwait
stc
mov
pushw
enter
popf
cli
repz
jns
mov
mov
fs
push
in
fsts
std
cmp
adc
sti
pop
cltd
mov
cmp
mov
adc
addb
jge
add
mov
rcrl
das
inc
ljmp
mov
inc
decl
aaa
mov
sbb
cs
in
stos
lret
hlt
fistpll
imul
pop
mov
sbb
test
stos
imul
hlt
sub
or
enter
pop
into
dec
jb
xchg
xor
xor
mov
lock
shlb
ss
cmpsl
sbb
xchg
jg
std
addr16
pop
xor
mov
imul
lds
xor
cld
fdivrs
xlat
das
insl
insl
ja
addr16
pusha
fmul
fcomps
inc
and
mov
pushf
jmp
es
fidivrl
jns
adc
mov
mov
movsb
push
push
outsl
xlat
popa
arpl
pop
fwait
add
xor
in
fucomp
imul
xor
sbb
stc
jl
movsl
roll
add
xchg
pop
push
xchg
inc
bound
cltd
out
dec
bound
dec
ret
pop
mov
movsl
mov
sbb
ss
xchg
daa
test
sub
add
adc
movsb
adc
stc
inc
ret
push
and
cmp
jnp
out
movsb
push
mov
and
cwtl
inc
cmp
lods
imul
inc
xchg
xchg
aas
push
ret
cwtl
outsl
leave
lcall
mov
clc
frndint
or
clc
ljmp
hlt
lcall
movsb
xchg
rclb
sbb
das
sub
or
or
inc
adc
xchg
mov
xchg
dec
sub
sub
int3
mov
iret
test
filds
adc
icebp
jge
mov
mov
adc
sub
repz
loop
pop
xor
ljmp
subb
inc
in
es
sbb
push
jle
pop
lret
arpl
xor
add
cmp
mov
mov
lods
out
mov
and
data16
lahf
inc
aaa
movq
mov
aaa
scas
out
sub
movsl
aad
addr16
leave
and
int
or
pop
loopne
jmp
and
sbbb
fcmovnb
out
xchg
dec
loopne
xchg
pop
mov
push
jno
xchg
rcrb
loope
xchg
orb
enter
xor
gs
pop
dec
mov
cmp
push
mov
lretw
sbb
nop
es
imul
sub
sub
fistps
int
popa
mov
sahf
iret
ret
test
xchg
lods
lahf
add
cld
jmp
pop
or
add
ror
divb
cmp
add
or
pop
adc
arpl
pop
adc
inc
push
jle
subl
pop
rorb
jae
stos
inc
imul
jle
add
ret
ret
jmp
xor
test
lret
popf
mov
adc
jno
scas
nop
jns
mov
sbb
sub
inc
aas
movsl
push
inc
inc
nop
clc
mov
insl
rolb
bound
fsubrs
in
xchg
enter
loope
jo
jmp
dec
inc
enter
push
outsb
inc
fisttps
shrl
mov
pop
repnz
mov
pop
mov
jp
rep
nop
xchg
cwtl
aaa
stc
ljmp
cmpsb
dec
inc
dec
cs
sbb
sbb
loop
xchg
stc
sub
mov
imul
mov
divb
cmp
sub
pop
push
hlt
cmpsl
aam
push
fsubl
ss
push
fisubs
sbb
insl
mov
adc
idivb
and
dec
dec
jp
fmuls
sub
mov
xchg
out
test
outsb
stos
pop
adc
lock
xor
pop
fadds
push
sbb
in
stc
shrb
pop
inc
add
lods
jo
inc
cmp
sbb
scas
xor
xchg
adc
loopne
sti
filds
mov
daa
xchg
fucomip
pop
sbb
pop
cmpsl
push
aam
jnp
mov
lret
mov
arpl
out
sbb
pusha
push
push
in
xor
insb
inc
inc
lods
into
pop
mov
sbb
nop
jnp
jle
xlat
pop
inc
je
adc
push
cs
mov
imul
mov
adc
mov
xchg
jl
lahf
out
ret
xor
sbb
aaa
aad
inc
mov
and
shlb
or
inc
adc
cmp
xchg
sbb
xchg
into
lahf
add
mov
cmpsb
pusha
push
jns
int3
fimuls
add
dec
stos
sub
inc
pop
bound
movsl
ja
loope
mov
in
mov
idivl
iret
xor
lahf
pop
inc
in
sbb
and
sbb
add
out
cs
cmp
sub
and
mov
or
cwtl
popa
lcall
orl
jle
loop
div
or
lea
outsb
jbe
pop
adc
and
frstor
mov
lds
andb
aam
xor
arpl
push
cli
mov
outsl
fstl
int
pop
je
pop
stc
push
popa
xor
pop
dec
adc
or
subl
gs
cltd
inc
scas
test
mov
push
movsb
mov
push
es
xchg
shrb
adc
lds
iret
push
sbb
mov
nop
insb
cmpsb
jg
jg
or
call
stos
in
push
xchg
pop
pop
xor
idivl
dec
xchg
mov
fdivrs
imul
sub
stos
and
adc
rcrb
popa
pop
xchg
pop
pop
mov
jbe
and
jb
cmp
dec
loopne
daa
sbb
pop
fildll
out
movl
rcrb
sar
scas
jmp
popf
hlt
add
push
fsubs
mov
daa
mov
movsb
and
sahf
xchg
pop
sahf
xor
dec
aas
movb
jnp
or
xlat
jnp
inc
dec
jg
sbb
sbb
mov
lcall
ja
dec
mov
leave
test
jns
cmc
dec
fimull
mov
sbb
lock
lret
mov
mov
ret
mov
pop
aad
xor
sub
push
and
push
outsl
cmp
add
pop
mov
jl
test
pop
popa
push
int
shl
fnstcw
cli
jno
std
lea
ss
ret
js
fidivrl
fstpl
iret
mov
jle
jg
cli
imul
xlat
jne
pop
mov
pop
mov
daa
repz
cmpsb
lods
shr
adc
sbb
pop
and
icebp
movsl
iret
push
jne
push
pushl
sbb
sbb
jg
je
and
sbb
xlat
mov
add
out
mov
cmp
add
sahf
ljmp
les
insb
fs
and
cmc
mov
popf
mov
daa
shr
mov
dec
mov
mov
iret
add
inc
push
sbb
jae
or
pop
adc
cli
lahf
scas
daa
mov
xchg
xchg
test
jge
imul
mov
in
cli
add
popf
lods
mov
orl
adc
fs
or
fbld
dec
popa
mov
xor
jge
shlb
or
cs
add
fstl
cmp
movsb
pop
push
mov
inc
cmp
loopne
cmp
xor
push
inc
outsb
fnsave
xorl
dec
push
sarl
cmp
mov
jns
lds
outsb
jle
out
sub
mov
in
fldcw
nop
pop
rcrl
in
test
lahf
lcall
mov
dec
adc
mov
loop
fildll
mov
ljmp
in
mov
and
pop
ja
iret
mov
pop
es
push
push
js
mov
push
xchg
adc
xchg
inc
push
hlt
sbb
pop
cmpsl
xchg
addb
daa
icebp
jnp
xor
push
dec
fidivl
push
enter
add
jo
incb
xchg
push
aad
mov
cld
fadds
jle,pn
ljmp
out
addl
mov
pop
push
clc
insl
jecxz
ja
sub
dec
sbb
js
sarl
jge
xor
pop
xor
scas
es
out
push
test
cwtl
mov
jle
cmpsl
out
push
jmp
push
dec
fcmovnb
out
imul
leave
xchg
movsl
and
iret
mov
dec
outsl
scas
push
cmp
lock
ret
lcall
notl
adc
sub
and
jno
and
adc
andl
je
pop
mov
mov
ret
in
push
and
dec
cs
pop
cmpsl
jle
cltd
sbb
xor
fdivrs
jge
rorb
pusha
mov
lret
mov
adc
pop
mov
mov
lods
shrb
data16
mov
sbb
ret
and
or
stc
outsl
das
jb
jne
cmp
jmpw
aad
xor
jne
push
mov
mov
mov
imul
lods
hlt
mov
xor
adc
jne
negb
mov
movsl
push
lods
jp
addr16
push
popa
sbb
movups
push
cmc
jno
sub
cli
pop
or
pop
mov
stos
int3
insb
in
rcll
sub
xchg
pusha
pushf
test
adc
xchg
cmp
mov
clc
cltd
push
out
dec
sahf
adcl
push
cmpsl
mov
or
push
call
outsb
xor
inc
out
sbb
das
or
mov
add
cmp
xor
mov
pusha
lock
mov
in
out
cwtl
dec
loopne
out
ss
ret
sti
cmpsl
mov
mov
sub
and
sti
push
and
in
fdivs
iret
shlb
test
pop
int3
cs
ficomps
fcmove
ret
aas
adc
cmp
xor
subl
hlt
imull
loope
xchg
xchg
push
push
xchg
add
into
jo
adc
xor
adc
sub
aaa
add
arpl
daa
cltd
and
jge
mov
dec
push
xchg
sbb
stc
ss
xchg
mov
mov
mov
icebp
sub
gs
cmpsl
xchg
xor
push
stos
lcall
mov
sti
inc
mov
xchg
xor
dec
push
gs
inc
mov
dec
in
pop
in
ficomps
xor
xchg
push
mov
push
cltd
in
into
dec
je
aam
mov
mov
push
sub
imul
dec
cwtl
xlat
jmp
pop
pop
mov
out
cmp
adc
fildl
and
loopne
leave
add
int
lahf
out
cmpsb
and
bound
jb
call
mov
or
cmp
imul
xor
adcl
adc
cmp
push
jg
int
xchg
outsb
data16
imul
insb
or
insb
push
jmp
scas
test
bound
xor
xchg
mov
pop
pop
les
icebp
xchg
in
in
pusha
xor
insb
ret
inc
scas
sbb
inc
pop
stos
cli
lea
roll
and
cwtl
pop
nop
test
outsl
test
fimuls
pop
push
cli
mov
sbb
jb
je
pop
xor
or
test
adc
dec
mov
fucom
inc
mov
add
mov
and
push
out
push
rcrb
push
icebp
lret
add
lcall
lcall
test
dec
sbb
test
out
bound
sbb
cli
push
out
cmp
repnz
mov
leave
notl
inc
call
sti
in
jl
int3
sbb
aad
dec
pop
inc
or
into
mov
cmc
push
xor
fstp
out
pop
xchg
aam
or
push
std
daa
adc
xor
push
faddl
jne
xor
ficomps
push
faddl
repz
add
or
adc
je
sbb
aas
es
testb
inc
clc
mov
int
arpl
sbb
imul
in
xor
lods
fwait
sub
mov
incl
push
or
arpl
push
or
cwtl
lds
push
sbb
loope
push
cltd
or
lcall
mov
icebp
xchg
fsubp
mov
or
adc
in
or
cmp
ja
movsb
add
adc
push
btc
scas
je
push
xchg
cs
daa
shlb
les
pop
inc
cmp
lds
cmp
add
mov
lret
pop
mov
pop
mov
push
mov
add
fwait
mov
or
mov
int3
xorb
dec
sub
cmp
xor
push
sahf
lahf
xchg
pop
enter
adc
repz
imul
mov
mov
push
gs
sbb
lods
int
pushaw
dec
les
adc
ret
cmp
adc
xchg
add
roll
xor
cmp
mov
movsb
jge
pop
cltd
or
mov
dec
mov
cs
cmp
mov
js
shr
ficomps
lcall
fwait
xor
push
mov
pop
mov
sub
arpl
fidivrs
push
sbb
cs
arpl
and
jmp
lock
hlt
xor
arpl
ret
sbb
jno
ret
shr
dec
fisubrl
and
xchg
or
pop
and
sbb
adc
mov
rcrl
int
nop
xchg
xchg
push
js
rorl
add
adc
mov
mov
std
filds
aad
lea
push
icebp
dec
xor
lahf
xor
push
push
inc
icebp
rcrb
loope
add
test
or
lret
sbb
or
imull
int
adc
add
mov
mov
cwtl
adc
adc
jbe
xchg
sub
aaa
inc
popa
mov
mov
and
jecxz
movsl
imul
mov
add
test
jno
rcr
sub
mov
lock
ss
popa
push
ret
jne
sub
pop
testb
test
jae
or
inc
inc
call
jb
lret
es
dec
jg
lcall
cmp
pop
inc
inc
xchg
mov
sbb
das
fimuls
filds
subl
jo
pop
arpl
pop
pop
mov
mov
je
jp
push
xor
pop
mov
adc
fidivs
jne
aas
repnz
pop
aaa
ljmp
scas
pop
xchg
lret
aad
lahf
xchg
popa
lds
insl
xor
sbb
scas
jo
xchg
push
sahf
hlt
push
into
jp
xchg
pop
inc
lds
push
cmc
lods
mov
push
push
adc
sti
ljmp
mov
test
rcl
daa
into
push
test
cmp
in
and
cmp
aaa
mov
nop
aaa
sub
pop
mov
ret
xchg
push
scas
xor
pop
pusha
shr
or
jmp
sub
xor
jcxz
scas
mov
jle
pop
hlt
arpl
das
pop
and
fisubs
dec
ljmp
sub
or
xchg
ret
test
aas
addb
mov
pop
sbb
repnz
xchg
ja
aas
into
mov
sub
jp
call
mov
or
in
mov
push
push
lock
into
popf
fdivrp
test
and
mov
cmp
stos
mov
les
lcall
sbb
or
mov
popa
add
mov
jbe
outsl
lcall
testb
jl
stc
add
mov
out
outsw
xor
xor
jnp
jmp
adc
bound
and
icebp
stos
leave
push
mov
dec
pop
lods
jo
lea
repnz
out
mov
je
js
pop
dec
fmul
pop
push
dec
shll
or
iret
or
sub
dec
cmp
pop
mov
jl
and
stc
sar
int
jno
mov
sbb
cld
xor
test
and
push
jecxz
scas
pop
mov
and
xchg
mov
ds
ds
inc
inc
nop
daa
pop
in
outsl
sub
adc
fsubp
cmp
inc
es
pop
inc
sub
sub
lds
sub
ficoms
lock
mov
test
sub
push
imull
cld
jne
adc
lahf
popa
xchg
push
mov
loope
cmpsl
sub
pop
mov
jne
xchg
inc
fisttpll
mov
xchg
lcall
cmp
add
enter
lds
pop
pop
rcrb
shll
mov
popa
dec
sbb
incl
les
leave
fbld
int
mov
rcrl
jno
ljmp
mov
jne
int
into
sbb
dec
loop
inc
mov
popa
std
jg
xor
lea
jmp
push
cwtl
or
jecxz
cwtl
mov
mov
cs
push
sub
or
lcall
lods
test
scas
iret
add
jmp
lods
lret
jl
add
rcll
je
repnz
jb
adc
mov
xchg
lds
lea
xchg
dec
or
adc
mov
mov
sti
fiadds
aas
inc
mov
in
push
jae
cmp
jns,pt
insl
sbb
mov
cmpsl
repnz
aad
jl
xor
les
jecxz
inc
jp
loope
fs
shlb
nop
ret
inc
pop
in
sti
mov
fidivrl
mov
ljmp
push
fmull
call
cwtl
aam
xchg
push
lea
mov
mov
mov
orl
pop
daa
mov
mov
int3
xchg
cmp
imul
adc
hlt
xchg
mov
nop
ja
adc
mov
or
pop
filds
or
push
or
lret
cmp
mov
test
aaa
icebp
mov
loope
dec
add
push
pop
sub
add
icebp
or
aaa
cmc
mov
nop
mov
test
mov
mov
pop
jne
xor
xchg
add
fcoml
xchg
mov
jp
jecxz
push
mov
mov
outsl
aas
ret
or
push
in
xor
jl
fs
cs
push
pop
inc
xor
pop
cwtl
pushf
inc
dec
fmuls
mov
jbe
mov
loopne
jg
jp
sbb
lcall
mov
notb
movsl
cli
stos
or
es
sub
and
xchg
test
mov
inc
cwtl
pop
les
and
rcrb
inc
repz
adc
sbb
pop
or
rorl
mov
jmp
pop
rcrl
test
lods
hlt
in
push
or
or
jle
shlb
aam
and
xor
mov
sbb
std
push
dec
fs
sub
mov
mov
mul
outsl
loop
push
ret
jmp
dec
fcomps
inc
sbbb
fidivrs
test
dec
sbb
cli
xchg
add
mov
loope
sbb
in
inc
mov
js
pop
icebp
aam
cs
and
mov
mov
sbb
int3
push
les
mov
js
mov
inc
xchg
push
mov
pop
repz
and
mov
lods
sub
loopne
inc
sbbl
sub
and
ss
mov
pop
sbb
push
cmp
int
cmp
pop
hlt
scas
xor
ja
xlat
test
add
arpl
cltd
sub
inc
idivl
orl
mov
or
movsl
sub
daa
dec
xor
shlb
sbb
push
cmp
fisttpll
adc
cmp
scas
mov
lock
mov
mov
ss
jmp
test
inc
test
dec
in
je
sbb
fildll
jnp
ljmp
dec
shrb
cmp
pop
sbb
inc
sub
insb
test
or
pop
mov
cmp
je
sub
insl
or
ljmp
xlat
sub
cltd
mov
int
fdivrl
mov
fwait
and
mov
xchg
jno,pt
js
pop
inc
and
sahf
nopl
push
inc
lret
outsb
out
scas
inc
dec
mov
push
popa
jmp
das
jg
or
pop
lods
mov
pushf
pushf
cmp
push
push
sti
movsl
outsl
sarb
cwtl
fdivrl
ja
cmp
pop
fcoml
enter
pop
push
in
jge
add
fidivs
pop
mov
arpl
add
push
lahf
stc
addr16
xchg
sub
fiadds
xchg
scas
loopne
jg
mov
insl
loope
push
sbb
stos
pusha
addr16
mov
sbb
stos
es
out
push
adc
xor
inc
loopne
cmp
mov
xchg
xlat
leave
inc
addl
dec
jno
adc
adc
shll
fnstenv
aas
mov
dec
lret
data16
jl
out
out
pusha
sub
into
lods
cmpsl
xchg
mov
or
aad
push
inc
adcb
push
fdivrs
or
fisubl
ficomps
fnstenv
cmp
push
movsb
lret
mov
sarb
lods
mov
xchg
dec
inc
pop
pop
jns
int
sub
xor
jp
jae
aam
jae,pn
sbb
jmp
adc
test
mov
push
push
push
stc
inc
push
lahf
mov
or
jge
imul
fiaddl
leave
xor
jae
cmpsl
mov
add
loope
xchg
mov
lret
dec
push
fcoml
or
outsl
cld
test
jnp
mov
xchg
lds
jmp
or
lcall
or
dec
cmpsl
icebp
mov
insl
or
push
dec
and
xor
mov
and
lret
nop
movsl
cmp
loope
sub
sti
dec
mov
mov
cwtl
ficompl
cmc
repnz
fiaddl
adc
rcrl
mov
sbb
cmpsb
inc
or
insl
cwtl
out
lds
shll
xchg
faddl
cwtl
ret
pop
leave
hlt
xchg
ja
imul
cmp
andnps
jno
and
fcoms
xchg
or
mov
das
lret
repnz
pop
inc
pop
dec
pop
mov
mov
jecxz
push
cmc
mov
dec
repnz
mov
cmpsb
pusha
push
mov
sub
xchg
sbb
pop
adcb
cmp
ret
arpl
es
pop
adcl
push
cmp
pusha
jbe
lret
outsl
add
jns
pop
adc
pushf
inc
lret
cmc
addr16
dec
lret
mov
inc
jmp
pusha
pusha
inc
add
jecxz
xchg
mov
mov
fcomps
push
and
out
ds
mov
adc
fisttpll
mov
cld
pop
mov
shlb
jle
xor
mov
ret
ljmp
mov
mov
in
test
outsb
sbb
push
ud2
pop
jb
and
movsl
mov
stos
addr16
mov
pop
ds
xor
inc
jno
test
popl
mov
jge
mov
cwtl
push
xchg
aas
or
or
xor
cmp
push
shlb
jecxz
jae
pop
jnp
bound
push
adc
jp
fimull
jg
dec
testb
sub
jbe
jo
fdivrp
setbe
out
and
add
pop
pop
push
aas
outsl
outsb
dec
fbstp
jno
or
cmp
test
pusha
aad
adc
or
ds
xchg
jl
pop
addr16
and
mov
xchg
jbe
enter
aad
dec
sub
popa
inc
adc
les
cmp
mov
push
scas
int
bound
inc
sub
fmuls
and
push
mov
push
subl
andb
ds
gs
mov
pop
addr16
jecxz
lcall
pop
js
push
mov
pushf
mov
add
jo
fcmovb
pop
jns
jg
loop
ret
popf
adc
sar
add
inc
inc
fistps
dec
ret
rorb
dec
cs
dec
pop
adc
sub
or
int
inc
dec
aas
fisttps
sbb
jae
pop
mov
cmpsl
aad
mov
popa
pop
pop
or
inc
pushf
mov
in
testb
or
jnp
jnp
dec
imul
hlt
lds
test
xchg
js
cmp
je
fwait
shr
inc
push
push
icebp
adc
mov
xor
or
inc
dec
cmp
push
int3
inc
dec
repz
lods
and
test
add
daa
pop
jl
mov
xchg
and
outsb
dec
lods
inc
mov
xor
jecxz
or
jmp
inc
mov
into
notb
xor
out
into
fists
fs
hlt
fwait
jns
cmp
push
jns
es
push
cwtl
xor
xchg
cmp
daa
test
lds
mov
fsubrs
pop
int
mov
xchg
dec
pop
mov
add
jle
stc
xchg
movsb
mov
aam
subb
lock
jg
addr16
pop
call
outsb
call
sbb
cmc
ja
push
push
sub
cmp
push
dec
in
mov
push
dec
dec
adc
outsl
in
sahf
xchg
popf
push
in
std
add
xchg
sub
sub
xchg
repz
pop
jae
rclb
xor
fistl
sahf
adc
ljmp
mov
aas
in
rorl
xor
popf
les
jp
mov
push
cmp
inc
and
sbb
imul
dec
jae
ja
jg
enter
dec
test
mov
lahf
stos
add
adc
test
mov
add
mov
jl
push
icebp
xchg
popa
push
and
push
xchg
movsl
in
or
stos
bound
aad
pop
outsl
or
or
sahf
stos
push
icebp
lock
xchg
mov
into
rcll
mov
call
lds
or
push
adc
sbb
xchg
xor
out
sub
aam
xor
and
outsb
out
int3
into
pop
test
push
pushf
loope
mov
arpl
pop
dec
push
addb
adc
xchg
mov
inc
fildll
bt
mov
test
adc
inc
loop
lret
scas
pusha
sub
rolb
push
enter
mov
mov
jmp
dec
popf
pop
fwait
test
pop
mov
lret
mull
cwtl
stos
aam
popa
fnstsw
sub
mov
ds
sbb
ret
jl
fisubl
popf
pop
mov
inc
mov
xchg
mov
mov
dec
xor
and
repnz
aaa
xchg
or
roll
inc
xor
cmp
loope
mov
leave
roll
insb
push
ss
test
lcall
in
mov
sub
jns
push
shlb
sbb
and
imul
icebp
cmp
pop
into
push
bound
movsb
rorl
loop
jp
negl
add
add
and
jnp
lods
adc
dec
nop
popa
ljmp
icebp
rorb
roll
mov
sub
das
pop
jecxz
dec
rcl
div
popa
call
mov
in
jns
push
in
iret
jno
orb
mov
and
fmull
in
ret
or
sbb
sbb
popf
loope
pop
xchg
jne
and
mov
add
ret
and
lcall
fisubs
pop
daa
loopne
xor
jae
mov
loopne
mov
and
mov
shlb
mov
xor
mov
jnp
mov
or
in
xor
fs
cld
push
jmp
popa
sub
aas
iret
push
arpl
pop
aaa
cwtl
fs
push
mov
jae
stc
jmp
and
aam
push
daa
rcr
ficompl
mov
hlt
mov
negb
scas
dec
pop
pop
pop
hlt
sub
mov
pop
sbb
sbb
inc
popa
sub
push
incl
sbb
icebp
sti
and
popf
adc
and
repz
jbe
cmp
andl
fxch
lods
jmp
push
dec
lock
das
push
jmp
dec
mov
or
xchg
fidivrl
lahf
outsb
add
ss
lret
jb
jb
cmp
and
bnd
shll
in
xchg
sti
imul
xlat
xchg
mov
jp
xlat
jmp
fbstp
loop
inc
push
shll
or
call
movl
dec
in
mov
mov
sbb
outsb
imull
movsb
rcr
insb
fs
aam
inc
or
es
pop
in
mov
mov
xchg
mov
fcomps
cmc
lret
pop
lret
addr16
dec
inc
aad
dec
cmp
adcb
cltd
cmp
mov
test
add
cli
adc
dec
mov
lret
push
fisubs
and
or
divl
jmp
lds
imulb
dec
mov
imul
push
sti
int3
out
lahf
sub
cwtl
enter
mov
xorb
rcrl
pop
xor
sub
pusha
cmp
test
jns
movsb
loop
lcall
jl
scas
xchg
shll
popa
mov
insl
jg
push
xchg
mov
xor
pop
mov
mov
popf
pop
fs
aaa
rcr
mov
stos
sub
mov
cmp
mov
xchg
out
ret
outsl
cmc
dec
fisubl
test
xor
sti
or
mov
jns
sbb
sar
js
movsl
and
push
inc
or
cmp
inc
xchg
or
movups
xchg
hlt
xor
sbb
inc
add
fs
lcall
imul
ljmp
aad
lret
sbb
call
dec
inc
aad
pop
movsl
sbb
repz
mov
jb,pn
fptan
pop
dec
cmp
or
push
xor
repnz
in
cmpsl
sahf
enter
and
cwtl
sbb
cmp
aas
cmp
sbb
js
sahf
add
xchg
ljmp
jl
sub
pop
bnd
das
push
pop
lahf
aam
and
rcrl
cld
push
jns
movsl
push
xchg
sub
jp
lcall
ret
nop
out
mov
and
fwait
xchg
pop
enter
mov
sub
mulb
lcall
lock
mov
jb
fcoml
adc
mov
mov
jns
mov
mov
jnp
aaa
lret
sbb
or
fistl
fisttps
popf
sbb
mov
or
pushf
push
inc
int3
ret
shl
xlat
sub
pop
repz
add
popf
icebp
sbb
mov
pop
xchg
loop
push
dec
rorl
and
stc
iret
imul
test
jp
dec
inc
adc
add
aas
push
inc
or
test
test
loope
add
mov
fcmovb
jnp
xchg
and
in
cmp
pusha
daa
xor
xchg
xchg
out
cmpsl
adc
scas
jmp
insb
pop
sub
inc
movsl
fstps
pop
xchg
or
iret
out
inc
repz
adc
fnsave
mov
insb
mov
lcall
iret
nopl
inc
sarb
into
test
iret
movsl
ljmp
sti
mov
adc
sbb
cmp
int3
jae
dec
push
shr
adc
dec
pop
addr16
lods
adc
mov
mov
dec
and
or
iret
cmp
mov
sbb
jne
movsb
dec
clc
dec
cmp
std
fidivrs
fcomps
movsl
inc
or
push
add
and
dec
add
fldenv
add
sub
test
pushf
pop
loop
mov
out
int3
sbb
fs
cs
jo
pop
dec
push
xchg
mov
std
mov
pop
cwtl
test
in
jae
mov
movsb
inc
add
ds
sbb
xor
into
mov
dec
mov
or
cwtl
inc
out
xorl
sub
andb
xor
ficoml
dec
push
add
adc
xor
test
movsl
mov
adc
cmpsb
dec
mov
rolb
sbb
imul
jge
sub
jb
adc
loopne
outsl
cmp
mov
xor
aam
mov
cmc
mov
test
push
mov
add
fisttps
mov
lds
lret
clc
cmc
mov
fidivl
sub
loop
adc
in
bnd
out
xchg
push
ljmp
mov
xor
shll
cmpsb
jle
hlt
sbb
test
xor
arpl
enter
repnz
imul
pop
or
pop
dec
sahf
leave
mov
mov
lret
nop
int3
sub
sti
mov
fstp
inc
das
or
repnz
adc
dec
lahf
jle
mov
dec
dec
sbb
mov
adc
mov
push
fildll
dec
adc
mov
sti
mov
stos
test
inc
call
jno
xchg
hlt
mov
jae
and
or
sub
mov
imul
or
xchg
leave
int3
lods
add
ret
gs
es
pushf
jo
jns
xchg
push
fidivs
andb
mov
inc
nop
flds
fldcw
inc
lahf
jmp
shrb
fcoms
cld
insl
cmp
sub
pop
addr16
sbb
add
sbb
or
out
and
arpl
inc
jo
repnz
xlat
mov
fcmovne
dec
fcmovnbe
arpl
outsl
nop
cmp
jmp
int3
add
lahf
jle
or
int3
aad
mov
sahf
push
xchg
icebp
les
push
ljmp
xlat
fmulp
mov
jge
add
push
sub
inc
mov
out
addr16
pop
cmp
mov
push
dec
movsl
mov
xor
jb
repz
or
sbb
jns
out
xor
push
outsl
ljmp
pop
xlat
xchg
jbe
shll
jle
jp
jp
js
sahf
or
mov
sti
xchg
popa
or
dec
or
sbb
jmp
adc
fisubs
idivl
mov
push
call
jb
orl
push
inc
ss
add
jbe
js
out
push
hlt
lret
cmp
inc
pop
cmp
aaa
push
xchg
pop
les
mov
cmp
jle
rclb
jns
sub
ss
adc
mov
imul
xchg
stos
add
les
mov
cmp
lret
mov
imul
leave
pop
cmp
leave
or
icebp
cmpb
adc
rolb
push
int
shll
stos
sbb
sahf
cmp
imul
adc
mov
mov
inc
sbb
add
cwtl
and
mov
lahf
loop
xchg
stos
repnz
sti
movsl
std
dec
lds
repnz
aam
xor
lods
int
pop
test
add
xchg
xor
add
xchg
pop
sub
jns
test
fstpl
sub
stos
pop
ljmp
out
fs
leave
test
aaa
or
and
push
push
incb
int
nop
mov
int
fs
lds
outsl
sar
cmp
push
push
out
cmpsb
lods
jb
addr16
ret
sub
mov
iret
pop
push
adc
repz
test
negl
test
sbb
and
mov
inc
adc
mov
cmp
mov
fs
bound
imul
pop
scas
in
mov
fidivrl
jnp
jl
dec
popa
mov
dec
ret
push
mov
out
icebp
sahf
or
dec
loope
jne
xor
xchg
cld
ds
mov
pop
fs
mov
pop
cmp
fwait
add
stc
xor
in
pusha
add
xchg
xor
and
fildl
inc
push
aas
mov
out
mov
subb
sahf
pop
mov
add
and
in
jne
test
stc
mov
pop
shrb
outsl
or
push
stc
sub
rclb
sbb
sub
in
enter
ds
out
insl
adc
inc
adc
ret
push
pop
fsubrs
nop
cld
mov
mov
flds
sub
aad
hlt
push
inc
sar
std
loopne
and
cmp
jmp
test
dec
pop
aaa
aad
jge
incl
inc
add
es
ljmp
xchg
test
fisttpl
mov
aaa
inc
mov
push
mov
and
pop
lock
jne
subb
xchg
xor
push
xchg
leave
xchg
push
fcoml
xlat
out
fisttps
dec
sbb
dec
int3
negl
roll
out
cmp
mov
dec
xchg
jnp
jo
sbb
sub
jno
jp
adc
aas
sbbb
add
jae
pop
out
mov
ss
gs
cmp
mov
dec
hlt
and
jnp
jns
shr
sti
movsb
mov
adc
push
cmpsb
sti
add
jl
sub
in
loopne
jmp
lods
frstpm(287
lea
jnp
sbb
sub
sbb
scas
mov
push
pusha
aaa
jns
jb
sbb
jae
push
sub
jns
cmp
pop
inc
xor
jge
das
inc
stc
mov
sahf
dec
push
pop
outsl
mov
or
arpl
sub
int
dec
stc
mov
xcrypt-ecb
cmpsl
dec
sub
or
sarl
and
fiaddl
inc
bound
fwait
out
jl
or
cmp
loop
daa
jg
xchg
fnsave
sub
jno
shlb
push
jne
and
push
xor
loopne
xchg
dec
push
lahf
cld
dec
pop
dec
outsb
icebp
dec
jge
add
scas
orb
test
xor
loop
jno
hlt
pop
out
insl
push
aam
and
lret
mov
pop
ja
xor
lock
lcall
stos
lret
aaa
inc
aam
stos
xlat
mov
in
or
jl
in
into
rol
mov
insb
and
ret
test
fisttps
push
je
cmpl
and
sub
jg
repz
in
std
add
mov
mov
mov
dec
inc
fwait
pushf
mov
dec
pop
xchg
imul
nop
xor
adc
pushl
mov
dec
dec
xchg
addb
dec
sub
and
inc
pop
fisubs
icebp
inc
pushf
sub
stc
adcl
jns
mov
or
imul
cmp
popf
data16
icebp
push
sahf
xor
lcall
movb
mov
test
fsubl
insl
jl
popf
mov
push
add
add
cmp
xchg
lret
sub
sbb
inc
sub
das
in
out
add
pop
mov
stos
sub
pop
aad
jg
push
inc
mov
andb
jb
xor
popf
mov
lods
ret
stos
test
jns
pop
pop
pop
xorb
jp
cld
fcomps
rclb
mov
in
das
sub
jp
sub
or
and
xchg
jnp
dec
mov
xchg
push
cmpsl
ja
fmull
add
ffree
or
das
cmp
jo
lods
das
enter
sti
mov
stos
sbb
insl
mov
adc
loop
jo
jge
ret
bound
push
popa
fbld
add
cmp
sub
xchg
lret
push
sub
or
inc
adc
mov
mov
popa
inc
bound
pop
xor
mov
mov
xchg
lock
loop
pop
imul
xchg
daa
xlat
pushf
rorb
inc
pop
xor
xchg
and
shrb
mov
les
mov
jecxz
mov
lods
sbb
iret
lret
mov
shlb
loopne
addb
mov
pop
lret
ljmp
stos
or
repnz
mov
pop
scas
out
pop
rorl
rclb
adc
frstor
push
rcll
insl
jp
aam
imul
sbb
add
xchg
and
mov
cmp
mov
stos
cmpsb
pushf
mull
inc
lea
test
test
in
dec
repnz
add
add
addr16
stc
pop
jno
xor
pop
clc
je
ds
adc
daa
inc
aam
pop
xchg
jmp
push
pop
int
dec
sub
mov
xchg
inc
inc
test
icebp
cmp
dec
xchg
jo
jmp
jbe
mov
add
es
sti
cwtl
dec
insb
les
into
je
fsubrl
sarb
test
shlb
add
push
int
or
or
push
mov
sbb
cmpsl
dec
or
sahf
push
mov
int3
push
push
xor
insl
pop
mov
xor
orl
and
fstpt
pusha
cli
add
xchg
enter
int3
xor
and
fcmovnb
xchg
add
ljmp
xchg
in
sarl
lods
cld
cmpsl
fwait
shll
push
and
ds
pop
out
shll
pusha
fsubr
cld
mov
imul
jg
cmp
into
and
das
orb
xchg
xchg
and
jge
fnstenv
jne
xchg
aas
sbb
lods
and
mov
sbb
dec
fucomi
push
sbb
fistps
xor
sub
movl
enter
inc
das
pop
outsb
dec
repz
ficompl
jns
inc
push
in
pop
insb
loopne
rorb
ljmp
inc
mov
push
and
pop
inc
das
add
mov
mov
adc
mov
or
out
jmp
push
mov
mov
cmc
mov
jbe
mov
ljmp
inc
lea
leave
pop
jp
vpcmpgtb
mov
xor
test
xorl
jnp
add
add
popf
mov
mov
cmp
cmp
add
aaa
ret
imul
imul
stos
aaa
xor
jmp
mov
xor
jmp
mov
cld
iret
ficoms
cld
es
pop
inc
lret
fs
in
cmp
sub
lret
mov
adc
cld
jb
or
enter
cmp
dec
push
repz
lret
lods
mov
dec
dec
jmp
enter
push
dec
or
xchg
or
pop
insl
sbb
call
test
cmp
sub
mov
mov
or
pop
shlb
aaa
mov
aad
inc
aaa
push
inc
jmp
lock
test
das
iret
inc
push
popa
or
sbb
pop
dec
jle
mov
and
dec
out
les
inc
fbld
repz
mov
or
pop
in
mov
adc
daa
or
jl
ret
scas
test
sahf
sub
sbb
cmp
dec
pop
and
js
xor
loop
sbb
cmp
mov
stc
mov
adc
arpl
test
mov
add
mov
clc
outsb
jmp
pop
in
or
jae
mov
call
or
push
and
and
push
adc
push
gs
or
mov
push
pop
cmp
push
and
nop
mov
xchg
roll
add
andb
or
fistpll
add
or
test
xchg
movsb
out
adc
scas
jno
push
dec
mov
sub
repz
std
mov
dec
mov
aaa
add
enter
sub
fs
xchg
jnp
stos
mov
inc
jg
daa
cmp
dec
ja
cmpsb
test
jnp
mov
xchg
or
jecxz
jg
shrl
cs
mov
loop
mov
and
pushf
pop
mov
sub
pop
push
ret
lods
nop
mov
pushf
mov
jle
push
test
xchg
test
mul
fstpl
into
fucomip
cmp
sbbl
dec
pushf
dec
repnz
pop
ljmp
sbb
jge
xor
sbb
andl
mov
cmp
jp
fildll
xor
lea
pop
popa
mov
xchg
popl
dec
jge
pop
js
in
sub
xchg
sbb
ds
jg
pop
adc
sahf
lahf
imul
xor
jae
xchg
pusha
jns
jmp
adc
push
or
imul
or
shll
ljmp
mov
xlat
sub
xchg
jnp
ret
xchg
inc
cwtl
shll
push
cmp
lahf
sbb
mov
int
dec
addr16
mov
into
into
daa
pop
pop
enter
ja
jae
cmp
notb
sbb
dec
and
inc
sub
xchg
test
shll
dec
pop
sarb
xchg
jo
js
adc
adc
add
popf
push
aaa
inc
cmp
xor
mov
dec
pop
xchg
ja
or
sub
mov
movsb
xchg
xor
pop
ss
insb
and
push
push
lock
adc
jecxz
pop
mov
jbe
or
paddq
add
popf
mov
outsb
fldcw
xor
rcl
adc
or
dec
inc
pop
mov
adc
lret
jae
push
xor
loop
hlt
out
hlt
stos
xchg
insl
jmp
sbb
xchg
ljmp
push
ds
xchg
outsb
popf
or
add
add
inc
and
in
leave
lcall
test
stos
or
lea
adc
add
cwtl
insl
dec
js
out
popf
cmc
shll
andl
jl
aam
dec
lahf
movsl
outsl
out
in
add
pop
aaa
rorl
or
mov
bound
aas
push
jp
pusha
repz
push
xchg
cmp
jg
pusha
shlb
fcomp
jmp
mov
mov
in
shrb
ret
lock
push
loopne
xor
or
pop
inc
sbb
lret
cmp
xchg
jbe
es
jle
jbe
test
or
dec
out
scas
xchg
pop
mov
sbb
movsl
push
lods
sarb
pop
cld
sti
sbb
imul
sbb
mov
pop
mov
shll
inc
call
jo
inc
add
push
roll
sti
sbb
xchg
testl
cld
xchg
in
inc
inc
mov
cmp
loopne
iret
pop
pop
push
pop
and
add
das
loope
imul
cmp
jne
rcrl
dec
mov
pop
sub
jo
mov
and
mov
icebp
fwait
jg
stos
fidivrs
shl
dec
pop
or
insl
les
add
lds
idivb
stos
push
pop
jne
sbb
test
dec
aaa
sub
loop
sub
and
xor
scas
jle
int3
cwtl
mov
imul
out
jecxz
xor
in
xor
cwtl
add
ss
jl
lods
cmp
mov
inc
lock
dec
negb
sbb
das
stos
pop
sahf
lods
pushl
out
ds
and
cli
push
dec
daa
outsl
pop
jp
test
pop
inc
or
aaa
rol
pop
xor
dec
ret
mov
push
out
lods
ja
sub
push
int3
push
inc
add
fwait
aaa
add
mov
sub
aam
mov
sarb
inc
or
mov
inc
mov
es
jo
addl
xlat
fists
arpl
dec
inc
xchg
mov
mov
fsts
pop
pop
test
pushl
lcall
subl
sbb
add
icebp
test
push
inc
sbb
js
dec
test
push
xchg
xor
fisttpl
adcb
jns
icebp
out
test
arpl
or
push
pop
sbb
vucomiss
pop
cmpb
or
gs
dec
jmp
push
int3
pop
and
movsl
pop
push
andl
mov
or
xchg
or
mov
dec
icebp
das
pop
sbb
aaa
mov
push
mov
jbe
pop
cs
dec
xor
mov
addl
push
mov
cmc
jbe
cmpsb
int
std
or
push
rcrl
fcompl
push
outsb
ficoml
in
mov
add
push
mov
xor
test
adcl
je
fsubs
insb
int
push
mov
pop
sbb
rcrl
push
into
loop
lds
push
das
pop
loop,pt
lcall
sub
int3
pop
aad
sbb
mov
ss
cltd
jns
popa
add
jmp
out
leave
icebp
jmp
or
icebp
or
mov
add
sbb
aam
inc
mov
sub
dec
das
mov
inc
cld
dec
std
mov
mov
push
out
repz
outsl
adc
imul
sahf
movsb
icebp
add
mov
lock
pusha
mov
scas
cld
aaa
jl
inc
sub
stos
popa
js
sbb
mov
mov
jnp
and
xchg
jbe
loop
in
push
bnd
pop
cmp
movsl
xor
jnp
in
or
sbb
lea
push
fisubl
add
pop
lock
lret
inc
cltd
rcll
pop
fnstenv
loope
daa
stos
sbb
out
int
hlt
int
dec
jg
fsubr
mov
fidivrs
loop
add
dec
mov
cmc
pop
addb
xchg
movsb
mov
sbb
test
mov
push
push
adc
pop
push
cmp
mov
mov
mov
mov
inc
inc
jmp
mov
xor
dec
inc
add
loop
loope
hlt
aaa
shl
jb
sub
in
xchg
add
fcomip
or
jle
out
dec
xlat
rclb
int3
ret
data16
aaa
scas
nop
pusha
sbb
push
dec
pop
jecxz
inc
test
imulb
std
xor
xor
stc
insl
data16
test
ss
and
outsb
or
sbb
xor
pop
cs
dec
mov
fcompl
cmp
pop
in
mov
arpl
int3
lret
insb
shlb
lret
push
loope
or
dec
mov
or
mov
mov
adc
mov
mov
mov
xchg
push
sub
push
daa
xchg
aas
mov
nop
mov
add
ret
sbb
adc
imulb
in
call
sahf
out
add
add
int3
outsl
dec
jecxz
mov
out
push
hlt
mov
mov
inc
mov
das
and
xor
cs
xchg
rorl
jae
lret
inc
adc
jl
pop
sbb
pop
fdivrs
dec
adc
push
and
sub
push
pop
mov
in
cmpsb
mov
xchg
adc
xchg
mov
cmpsb
lods
test
push
pop
sub
mov
mov
aad
sarb
xor
andb
mov
lds
nop
jecxz
repz
addb
and
pop
mov
cmpsb
xor
movsl
mov
ja
pop
xor
mov
jge
dec
movb
loope
scas
push
ds
dec
jecxz
jnp
pop
or
mov
and
inc
int
imul
mov
bound
in
jecxz
jmp
push
jmp
pop
fstps
stos
pop
mov
cmovne
sti
mov
xchg
out
or
loope
add
mov
ss
out
stos
inc
dec
mov
stos
ds
push
add
pop
je
inc
rorl
popf
pop
xchg
movsl
add
in
enter
and
cmp
sub
ffree
add
cmp
mov
mov
mov
iret
push
pusha
shlb
arpl
add
push
jge
cmp
mov
cmp
pop
ret
adc
mov
cltd
dec
adc
dec
sahf
imul
inc
stos
lcall
ror
in
imul
scas
inc
testb
push
inc
pop
pusha
xchg
sub
sub
mov
or
add
stc
aam
in
scas
cmc
add
mov
xor
sbb
popa
inc
into
mov
inc
mov
rcrb
mov
add
mov
lds
fimull
dec
stos
lods
repz
loopne
cmpsl
add
les
mov
dec
add
scas
add
jle
int3
or
xchg
add
sub
add
mov
cwtl
push
pop
pop
or
push
icebp
arpl
and
jo
xchg
pop
lret
sbb
jge
out
mov
test
inc
or
pop
ret
sub
xor
xchg
and
pop
arpl
aam
arpl
lods
js
mov
xor
aad
lods
push
mov
mov
jmp
add
sbb
js
jle
mov
imul
nop
mov
dec
test
cltd
lock
or
push
fstps
fs
out
adc
in
bound
and
hlt
jmp
subl
dec
or
into
cmp
mov
test
add
inc
dec
sub
and
add
push
movsb
pop
pop
mov
out
push
repnz
mov
inc
mov
mov
push
push
aad
std
aad
ror
cmpsl
push
xor
fidivs
dec
lret
xor
jnp
les
pop
scas
mov
add
sbb
stc
and
xor
cmpsb
rcll
mov
sbb
and
ret
ror
or
adc
out
rorb
lahf
mov
jbe
xchg
xor
pop
push
inc
mov
xchg
cltd
jl
sbb
pop
ret
or
in
bound
iret
dec
pop
rol
stos
fcmovu
mov
xor
jp
push
mov
mov
jge
in
push
enter
or
push
mov
and
xor
stc
sti
adc
ljmp
or
jne
cmp
dec
aam
pop
hlt
movsl
xor
push
cmp
dec
push
mov
in
in
push
jae
jmp
pop
dec
loope
test
cmp
jecxz
jge
mov
sub
testb
pop
pop
mov
addl
cmp
jnp
popf
in
loope
mov
popf
popa
cwtl
mulb
imul
push
lods
out
pop
cmp
jle
xchg
out
shlb
xchg
add
sbb
xor
int
gs
rcll
aad
xchg
mov
jne
adc
std
pusha
arpl
mov
jmp
mov
or
call
xrelease
and
xchg
mov
add
mov
cld
rclb
je
cs
mov
inc
imul
out
out
fwait
lods
xor
pop
push
lods
mov
xor
xchg
insb
cmp
sbb
fs
outsl
sbb
mov
xchg
js
aaa
xor
jb
pop
and
out
or
sbb
out
es
ljmp
push
sub
lods
sbb
push
ret
pop
inc
ja
test
inc
mov
outsl
cmpsb
loopne
js
add
sti
mov
pop
out
or
test
cmpl
int3
push
or
lds
hlt
and
dec
ja
push
enter
jo
out
xor
mov
adc
pop
aad
sbb
xor
mov
fisubrs
adc
inc
nop
popa
fildl
inc
stos
daa
push
jmp
sub
imul
enter
movsl
das
negb
and
push
mov
insb
mov
lock
push
aaa
jecxz
fistpl
fcoms
cmp
ror
repz
add
mov
hlt
rorb
les
mov
pop
push
cmp
dec
or
repnz
out
stos
shlb
data16
mov
loopne
lds
inc
cli
loope
mov
fnsave
push
add
rolb
incl
pop
jge
dec
lds
inc
je
mov
orl
jb
dec
xchg
in
jne
gs
jmp
test
jae
adc
mov
pop
sti
cltd
mov
sbb
mull
jns
mov
mov
sub
std
jecxz
decb
clc
push
daa
add
pop
push
lods
mov
fldenv
jae
adc
jg
lret
outsl
insb
clc
inc
outsb
mov
scas
loope
jnp
xlat
nop
lods
push
fwait
pop
mov
xor
push
stos
enter
xor
repz
sbb
adc
rorl
mov
inc
adc
pop
imul
outsb
push
jno
mov
repz
jns
lock
jge
xor
jge
jne
add
in
cmp
out
sub
inc
js
dec
dec
dec
subl
lea
popa
movsl
test
mov
jne
xor
neg
mov
scas
stos
in
push
shll
or
sbbb
sahf
bound
or
fdivr
pop
cs
xchg
std
not
mov
mov
sub
sti
jnp
jge
push
stc
jnp
call
lret
ja
jp
fiaddl
dec
daa
cmp
aaa
in
xor
mov
insb
mulb
loope
add
std
jae
movsl
movsl
inc
xchg
jmp
inc
xor
or
dec
mov
xchg
stc
pop
mov
mov
or
sbb
mov
push
popa
mov
or
shl
ds
mov
add
cmpsl
or
xorl
jl
mov
sub
add
push
lcall
xor
jbe
cld
pop
out
repz
cltd
into
daa
push
icebp
adc
inc
rclb
xchg
pushl
outsb
daa
xchg
loope
cmp
pusha
xor
push
mov
rcl
loop
aam
inc
mov
cmp
fcomps
call
dec
fistl
cmp
push
std
xchg
ljmp
cmp
mov
dec
sbb
xor
icebp
xchg
inc
ja
push
sbb
push
add
inc
ss
sahf
jb
or
aam
mov
mov
fbstp
pop
je
andb
aam
push
push
push
stos
push
adc
orb
arpl
xchg
xor
mov
mov
clc
jg
jmp
je
xchg
int3
jp
cltd
xor
jecxz
or
sbb
mov
std
pusha
lahf
jl
movsb
cltd
jbe
jp
lock
testl
or
pop
out
jle
jae
jns
xor
mov
add
mov
and
je
or
add
or
or
mov
outsl
xor
and
xlat
stos
push
mov
jbe
out
dec
les
adc
jae
jl
lcall
cs
pop
push
xchg
sbb
push
into
push
mov
inc
sub
outsb
sti
push
dec
mov
xchg
fistpll
sarb
in
push
add
scas
sub
sarb
jl
xchg
mov
addl
out
mov
mov
and
pop
decl
in
or
lock
lcall
inc
ret
sbb
inc
pop
xchg
jnp
dec
out
cs
test
int3
xchg
cmp
into
ds
adc
mov
mov
xchg
and
mov
or
xor
loope
xchg
je
or
cmp
jge
ljmp
cmpsl
cmp
movsl
cmpsb
icebp
call
insl
inc
lret
shlb
hlt
push
lret
fsubl
bound
sbb
fnsave
mov
mov
and
cwtl
jnp
sub
add
adc
mov
outsl
dec
out
loope
jecxz
btc
push
aam
xor
addr16
xor
insl
xor
mov
or
imul
xchg
out
add
sarb
out
dec
js
cmp
push
mov
pop
mov
cli
outsl
inc
iret
push
or
sahf
fbstp
cwtl
push
push
gs
jae
mov
add
push
mov
inc
out
fwait
mov
cmp
mov
and
loopne
imul
sbb
mov
xorb
jl
fists
in
les
dec
mov
lods
dec
cmp
dec
inc
sub
adc
add
in
js
dec
and
fs
loope
orl
insl
sub
imul
pop
sbb
rorb
push
fildl
push
loope
js
sbb
addr16
pop
mov
xlat
or
dec
cmp
ret
shrl
hlt
xor
xor
jecxz
push
jle
out
roll
stos
lods
fwait
stc
arpl
mov
std
int3
cwtl
js
ss
pop
adc
lods
xchg
xor
xor
stos
jge
pop
cwtl
cmp
mov
pop
jae
pushf
gs
mov
je
mov
cmp
into
push
lea
mov
xor
lahf
jb
mov
adc
movsb
adc
sti
jno
les
ds
mov
stos
fisubl
aad
cmpsl
jg
movsb
dec
rcrb
out
inc
mov
jg
fimull
lret
mov
mov
dec
dec
int
mov
mov
addr16
mov
sbb
jg
and
testl
dec
mov
out
es
es
sbb
push
pop
cld
mov
loope
cmp
mov
and
push
inc
push
sub
push
stc
dec
jae
movsb
mov
movsl
mov
das
sub
out
mov
jp
dec
jo
pop
fsubl
sbb
das
cwtl
repnz
lret
aas
lods
nop
or
pop
inc
inc
adc
sbb
inc
lahf
push
sar
sub
mov
mov
dec
stos
pop
scas
ljmp
bnd
xchg
std
xor
pop
lods
fistps
xor
rcrl
imul
xchg
insl
and
loope
mov
sbb
sub
cmp
add
orb
push
sub
inc
outsl
dec
hlt
sub
imul
and
adc
xor
jmp
ret
ja
out
ljmp
or
jo,pn
push
cmc
push
inc
movsb
cmp
je
repz
xchg
lret
cltd
push
fisttpll
popl
mov
loope
push
addb
test
jecxz
andl
popf
mov
pusha
in
pcmpgtd
movsb
decb
cmpsb
cmpsl
mov
rorb
insl
mov
lods
popa
jnp
lds
out
xor
loop
push
and
clc
sbb
js
movsb
mov
fdivp
repz
cmpsl
addl
repnz
les
xchg
ret
lock
xor
mov
adcl
and
ss
mov
data16
inc
push
mov
lahf
in
xor
sbb
cmpsb
mov
cmc
shr
lret
pop
aaa
xchg
xchg
cwtl
jb
pop
fsubs
hlt
sahf
mov
adc
fucomi
cmp
loop
popf
adc
es
cmp
add
loopne
sbb
xor
push
dec
shlb
sbb
lret
xor
pop
adc
jae
rcrl
or
xor
mov
ffreep
inc
and
ss
scas
sub
push
test
xchg
adc
nop
int3
mov
ret
inc
nopl
iret
sti
in
mov
adc
loop
mov
fsubrl
pop
xor
adc
scas
cmp
aas
enter
shll
js
insb
gs
sbb
int3
mov
inc
stos
lods
mov
popaw
pop
add
mov
inc
mov
push
inc
sbb
fcmove
mov
mov
push
lods
mov
test
sti
jge
lcall
and
jbe
mov
jle
pusha
adc
or
rcr
jb
test
adc
xor
lea
mov
or
jle
fldl
arpl
push
pop
mov
or
dec
push
daa
and
insl
mov
adc
jecxz
icebp
mov
mov
and
xchg
xor
mov
loop
lahf
inc
cmc
nop
daa
pop
pop
xlat
repz
jnp
push
cltd
rol
xchg
rclb
pop
data16
subb
jg
push
or
mov
nop
cmp
xor
lcall
mov
jns
adc
rcr
mov
sub
mov
pop
adc
xchg
in
jns
int
loopne
scas
jno
fildl
test
outsl
fmuls
inc
xor
aad
ja
dec
lods
scas
cmpsl
pop
out
outsl
in
ret
lods
lahf
pop
test
xchg
cli
fcmovnb
mov
mov
push
negl
jnp
mov
js
negl
xchg
test
fcoms
cmpsb
dec
aad
push
ljmp
movl
mov
mov
xchg
cltd
sub
jecxz
shlb
add
test
mov
xchg
lock
xor
cmp
clc
adc
cmp
inc
xor
sti
adc
dec
ljmp
rorb
std
xor
mov
dec
jne
sub
or
outsb
sub
mov
adc
and
mov
cli
dec
sub
rcrb
or
add
into
pop
mov
push
mov
dec
lock
pop
stc
jmp
movb
adc
mov
scas
inc
sti
adc
push
jnp
addr16
dec
mov
gs
push
pusha
inc
daa
lods
lods
sbb
in
dec
xor
lret
jne
sarl
mov
sbb
dec
jae
mov
jno
or
jnp
mov
jns
or
aam
add
jp
std
inc
sub
dec
mov
sbb
in
inc
test
popa
mov
adc
mov
mov
xor
mov
push
mov
stos
push
imull
and
jae
test
outsb
jo
sbb
xlat
mov
fsubr
jb
mov
fmulp
mov
insb
rorb
sbb
xchg
or
push
add
je
push
mov
adc
jge
adc
mov
int3
cwtl
cwtl
pop
maxps
adc
adc
dec
sbb
jbe
sub
cwtl
cmp
mov
push
xchg
scas
out
mov
adcb
cmp
movsl
sub
in
jg
cmc
push
cld
adc
sbb
int
leave
mov
xlat
rorl
out
dec
and
popf
lods
insl
push
adc
ljmp
mov
hlt
mov
loopne
push
dec
sub
nop
sub
pushf
dec
scas
sti
ja
orl
addr16
adc
jmp
das
inc
xor
out
lea
and
bnd
adcl
adc
inc
adc
into
jmp
push
out
cmpsb
xor
lahf
sub
sbb
call
test
push
jns
out
shrb
ds
in
cwtl
and
pop
mov
xor
inc
jne
call
push
in
es
lcall
or
mov
daa
leave
out
cmovno
loopne
sub
dec
aaa
inc
sub
inc
ffreep
pop
mov
nop
fisubl
cltd
mov
add
cmp
jp
cmpb
push
nop
or
imul
dec
jo
and
test
jnp
fidivrl
cmp
clc
mov
adc
aam
jecxz
lret
or
sahf
mov
xor
add
into
cld
jae
std
push
xchg
jbe
jmp
adc
sbb
jnp
aam
xchg
fcomps
and
and
pop
popf
notl
fs
ja
bnd
aam
jg
push
out
cli
sub
jecxz
test
ja
cld
add
lret
std
mov
int
xchg
inc
loop
and
mov
mov
push
sbb
je
shlb
jge
mov
dec
jo
popf
std
jb
mov
and
cmc
insb
mov
xchg
cmc
xchg
in
and
add
mov
pop
jle
xlat
int3
mov
out
mov
int
test
push
and
sti
inc
mov
lcall
and
fsub
cltd
jae
pop
fstpt
sub
or
xchg
or
stos
adcl
xchg
mulb
pop
xchg
arpl
outsb
jo
jge
fs
push
mov
jecxz
mov
push
cmc
ret
cmp
xchg
data16
sbb
cmpsl
dec
aad
or
gs
pusha
adc
mov
test
sbb
push
bound
or
scas
dec
cmp
inc
daa
js
cmp
imul
push
push
shrl
or
jle
cmpsb
popf
push
or
lret
lds
enter
fs
and
mov
sti
dec
cmpsb
psllw
sbb
xor
cli
hlt
cld
add
ja
nop
add
or
scas
xor
xlat
push
es
fs
adc
inc
adc
clc
mov
call
fwait
dec
add
sti
mov
and
cmpl
pop
jbe
xorl
jecxz
insl
test
cmp
idiv
pop
or
xchg
mov
xlat
mov
mov
mov
adc
sahf
xchg
lods
aaa
jp
ljmp
into
cmp
lea
sbb
push
mov
inc
jmp
pop
jmp
dec
popf
adc
popf
jl
ret
and
jnp
mov
push
ret
jo
in
or
add
sahf
fadds
xchg
pop
int3
sbb
dec
cmp
mov
mov
js
fwait
mov
incb
push
mov
sub
jnp
mov
push
jecxz
in
repz
adc
push
dec
lea
cwtl
sub
out
jmp
xor
adc
out
es
or
xchg
arpl
dec
and
cltd
mov
cltd
mov
jo
and
ret
call
insl
repnz
dec
jmp
dec
test
xchg
xor
jg
lretw
push
ljmp
cmp
jle
mov
xchg
push
aaa
mov
mov
popl
push
or
mov
adc
sub
shll
fdivs
cmc
fstps
sbb
and
in
ret
mov
xchg
adc
imul
cmpsl
pushf
mov
pop
cmp
int
data16
mov
inc
lea
push
jg
mov
aas
divb
ja
jb
fwait
push
arpl
inc
sarb
test
lcall
repnz
mov
push
push
aad
ret
sbb
xlat
shufps
jg
mov
fsubl
xor
hlt
aaa
xchg
xlat
and
imul
mov
stc
inc
popa
inc
mov
sbbl
mov
sub
jo
sahf
xor
mov
cmpsl
fs
hlt
adc
xor
out
cld
out
call
sub
mov
xchg
lret
popa
jl
mov
dec
xor
stc
je
divl
sub
and
pushf
sub
xchg
aad
scas
ret
sub
divl
push
sub
jns
js
sbb
add
mov
pop
dec
and
adc
mov
pop
es
push
sub
scas
pop
jl
fdivs
faddl
xor
sahf
mov
mov
xor
add
fcmovu
test
int
fwait
pop
stos
bound
push
cmp
mov
aas
inc
jle
add
std
jb
cmc
and
add
pop
mov
jl
into
dec
gs
pop
push
cmpsb
xchg
mov
sahf
push
mov
or
les
push
notl
and
sub
pop
adc
aas
fcmovb
lock
pusha
lods
in
dec
mov
gs
pop
jp
push
and
pop
cs
and
mov
xchg
hlt
xor
lcall
stos
test
aam
xor
scas
add
lret
iret
sti
call
and
mov
mov
mov
shr
sar
or
mov
jbe
pusha
shlb
mov
xchg
ja
test
pop
cmc
mov
loopne
mov
jecxz
dec
mov
push
stos
mov
das
movmskps
xchg
rcrb
inc
add
loop
test
fnstsw
adc
inc
shlb
lahf
dec
mov
shl
clc
sbb
aad
ret
popa
mov
xor
jl
out
movb
fsincos
push
negl
out
and
pop
cwtl
pop
daa
sbb
mov
daa
pushf
int3
sub
mov
adc
ja
inc
adc
ret
jo
jno
push
cld
aad
sti
imul
lods
mov
push
shl
cmp
push
mov
cli
data16
jmp
inc
jne
repz
cmp
ja
xchg
ficoml
adc
fmul
out
cwtl
mov
out
ja
dec
cmpsl
test
icebp
sbb
bound
movl
aaa
xchg
lcall
sub
iret
sbb
cmp
pop
daa
pusha
out
lahf
mov
aad
xchg
xchg
popf
mov
mov
imul
and
fdivl
psubusw
sbb
arpl
xchg
lods
rcll
test
mov
mov
and
mov
shrl
mov
fisubs
mov
pop
cli
add
clc
dec
pop
inc
stos
rcr
mov
mulb
mov
jg
cld
cmp
pop
adc
xchg
mov
jo
fstps
in
je
icebp
xor
push
aas
cwtl
mov
loope
mov
sbb
mov
out
add
out
in
nop
mov
sbb
cmp
jp
cmp
outsb
lcall
dec
test
xchg
sub
xchg
xchg
cmp
cmp
loop
mov
ret
jno
loop
ret
push
clc
incb
adc
cmpsl
outsb
jp
fnstcw
insl
cmp
fwait
cmp
mov
mov
out
fildl
fmuls
xchg
cltd
aas
adc
mov
imul
push
hlt
ret
mov
mov
in
sub
pop
pop
xchg
jmp
pop
out
stc
lods
jg
and
stos
push
loope
pop
sbb
aaa
dec
push
loop
pop
mov
xchg
mov
ret
jp
add
pop
cmp
xor
adc
js
add
cmpsl
xor
aaa
mov
lea
ret
nop
add
dec
pop
sar
cmc
cs
shrb
mov
or
fmul
cld
lods
dec
call
dec
jmp
inc
lock
loop
std
fadds
outsb
push
push
xchg
pop
add
xlat
fdivl
jg
and
ret
pop
rol
fwait
xchg
dec
lods
sub
pop
int
inc
in
bound
jge
add
std
dec
jo
add
add
xorb
adc
inc
cmp
addl
and
pop
adc
xor
lds
xor
xlat
mov
inc
shr
loop
pop
mov
pop
sub
ds
push
jno
adc
inc
daa
push
les
out
aad
fwait
inc
loopne
xor
dec
inc
js
xchg
out
hlt
daa
mov
ret
xlat
lds
jbe
jmp
xor
xchg
ja
push
mov
lcall
mov
mov
loop
push
push
push
dec
dec
xchg
xor
xchg
test
out
jg
xorl
mov
rclb
xchg
test
lds
insb
pop
hlt
mov
daa
or
mov
clc
inc
divb
push
xchg
dec
fidivrl
adc
lahf
xchg
stc
xchg
and
adc
add
push
cli
in
inc
shrl
and
addr16
les
xchg
push
jmp
movsl
cmp
push
sub
pop
rorb
cld
pop
cmp
lock
push
arpl
or
dec
push
sub
inc
xchg
sarb
js
sbb
cmpsl
outsb
or
cltd
xor
repz
jb
loop
scas
aad
dec
xor
cmpsl
mov
loopne
dec
popf
xchg
xor
imul
rcl
enter
int
arpl
mov
mov
lret
sub
add
jae
popa
dec
pop
xlat
lcall
sub
and
leave
jns
int3
imul
push
nop
js
std
push
nop
mov
mov
cmp
fdivrs
dec
add
xchg
test
or
dec
out
or
jb
pop
repnz
xor
in
fistps
in
jmp
push
cmp
icebp
sarb
mov
jbe
xchg
mov
out
sbb
inc
inc
add
lock
test
aaa
pop
add
mov
mov
out
jecxz
shl
xor
std
fdivrs
insb
test
push
jb
loope
jl
mov
fbld
push
pop
jle
pushf
fadd
sti
mov
into
xchg
les
add
mov
sbb
or
mov
mov
mov
mov
push
lcall
pop
pop
hlt
aam
les
inc
cmp
ja
mov
in
dec
aad
icebp
push
nop
lea
fistpll
iret
lock
sbb
mov
in
push
jmp
lock
dec
insl
push
mov
mov
add
stos
test
data16
fwait
push
sbb
das
push
pop
adc
int
jo
movsl
mov
sbb
adc
sub
fisttpll
idivb
test
lock
shlb
int3
clc
outsl
pusha
xchg
popl
lods
lahf
in
int
sahf
pop
mov
aas
pop
mov
cmp
subl
cmp
loop,pn
sbb
and
shr
out
loopne
orl
lods
divb
gs
int3
adcl
mov
out
enter
mov
fstpt
mov
xchg
sbb
inc
push
jbe
inc
jg
pop
sbb
sub
lcall
push
arpl
es
or
mov
xchg
jl
int3
cmc
xor
imul
lcall
mov
and
fwait
and
xorb
fsts
mov
jecxz
imull
push
fwait
and
push
insb
sbb
pop
xchg
out
and
lods
aas
bound
dec
aad
cmp
je
xor
pop
mov
mov
repz
in
in
cld
push
pop
fs
rcr
adc
xor
stos
push
in
sbb
ds
mov
loope
jbe
sub
xchg
cmp
mov
add
push
mov
pop
inc
aas
insl
add
outsl
daa
lods
dec
repz
out
bound
sub
inc
data16
dec
and
jbe
push
mov
stos
aad
add
or
cld
mov
or
pop
mul
fiaddl
add
icebp
mov
in
ds
loopne
imul
xchg
in
add
jle
cmp
bound
jbe
lcall
fbstp
or
sub
rolb
or
fsub
rcr
adc
aaa
pop
push
ss
and
enter
mov
push
xor
inc
dec
xchg
mov
lock
and
outsl
push
lods
mov
icebp
cld
dec
in
pop
mov
fcom
mov
cmp
iret
out
ljmp
mov
das
sbb
shlb
and
sub
xlat
aad
test
test
sub
jmp
ljmp
pop
push
mov
pop
sub
xor
in
mov
jmp
das
or
or
push
movsl
les
adc
mov
adc
and
or
add
sbb
mov
into
xchg
sbb
xchg
fldcw
ljmp
mov
repnz
or
xorb
movsl
jecxz
or
and
cmp
push
loop
inc
das
add
or
cmp
shll
mov
pop
cmp
xchg
cmp
add
cwtl
scas
into
mov
dec
push
ja
lds
inc
bound
popa
test
inc
ret
fnstcw
xor
cmp
test
and
enter
mov
fs
pop
mov
int
or
mov
dec
add
and
pop
inc
cmp
push
stc
or
into
lret
movl
sub
enter
xor
in
push
pop
adc
xor
insb
loopne
push
xor
adc
fldl
pop
jbe
add
scas
ds
lods
in
or
test
fistl
mov
sbb
xor
push
mov
jno
add
in
out
pushw
scas
ss
ss
insb
cmpl
aaa
ja
outsl
mov
xlat
jo
repz
call
rcl
dec
dec
imull
in
scas
push
dec
mov
jmp
push
and
mov
and
dec
or
ja
mov
bound
or
popl
loope
cmp
or
xchg
sbb
rcll
mov
sbb
out
pop
popf
std
pop
add
mov
iret
adc
les
filds
in
xlat
loopne
jle
shrl
cld
rcr
cli
movsb
sahf
mov
cld
adc
iret
or
pop
addr16
out
in
in
jecxz
add
push
sti
inc
jbe
jne
and
in
das
cmp
bound
xor
push
push
je
out
adc
push
fwait
cmp
insb
push
or
or
or
mov
std
sarl
add
inc
fistpl
mov
jge
in
inc
push
mov
imul
imul
push
jnp
cld
push
sub
dec
dec
push
jle
jb
out
xchg
xor
fdivs
add
lcall
bound
in
enterw
xchg
inc
pop
movsl
jecxz
mov
inc
jl
xchg
mov
test
jb
xchg
cmpsl
fs
imul
enter
pop
sahf
lret
add
pop
xor
or
std
popl
xchg
or
sub
inc
popa
cmp
fldln2
out
ljmp
or
fistps
push
fsubs
jmp
xchg
jp
rep
mov
mov
mov
cmp
xlat
cmp
xor
mov
aas
in
xchg
mov
mov
test
cld
leave
push
fwait
outsb
ja
in
or
xor
sub
push
jg
int3
cmpsb
mov
pop
loope
int3
adc
loope
xor
stos
nop
cmp
loopne
and
adc
out
mov
ds
lcall
adc
mov
or
mov
mov
call
or
enter
dec
cmpsb
and
pop
popf
je
jae,pn
clc
in
sbb
pusha
mov
fildll
push
push
cmp
movsb
imul
popf
insb
xchg
inc
arpl
std
jno
cmp
arpl
inc
jne
bound
adc
rcrl
in
push
call
dec
sub
jb
xor
and
sbb
mov
pop
xor
xlat
fsubrl
arpl
and
dec
sarl
xchg
add
mov
jae
dec
ja
pop
bound
pop
movsb
je
xchg
das
les
or
xchg
in
xor
loop
sub
outsb
call
mov
dec
mov
sbb
sub
dec
repz
pop
pop
cmp
and
adc
adc
push
fdivl
sub
cli
jo
fwait
cwtl
insl
and
mov
cmp
mov
ret
inc
push
sub
push
push
adc
out
mul
out
jne
out
sbb
sbbb
lcall
push
inc
cmp
fidivs
insb
adc
ss
fadds
sub
imul
sbb
daa
outsb
mov
stos
popa
hlt
jp
addr16
adc
gs
jl
inc
or
push
aam
and
hlt
pop
or
mov
add
inc
xchg
xchg
movsb
pop
data16
daa
je
xor
pop
sub
rcll
xchg
out
loopne
repnz
fcmovu
inc
movsb
and
int3
aas
xchg
test
mov
sub
fnstenv
mov
xchg
sub
push
lret
jb
bound
addr16
leave
mov
mov
push
sbbb
lcall
stos
iret
clc
mov
cli
xor
xor
xchg
outsb
hlt
out
stos
pop
in
sub
shrb
xor
pop
sbb
jb
js
cs
jae
stos
adc
out
push
test
jg
inc
ds
test
addb
jne
sti
sub
mov
fidivrs
pop
jnp
inc
cmp
xor
out
jb
mov
inc
insb
xchg
xchg
push
pop
adc
xchg
xchg
std
stos
pop
jmp
mov
imul
testl
mov
mov
movsl
sbb
loope
adc
arpl
or
fwait
mov
jnp
mov
push
mov
xchg
mov
sbbl
dec
cmp
cmp
mov
push
and
mov
or
mov
addr16
mulps
ja
ret
sbb
jg
mov
aad
add
jge
stc
dec
cld
das
push
xor
sti
jecxz
mov
xor
push
ja
jge
and
mov
xor
popa
lahf
addr16
ljmp
adcb
mov
pop
dec
ret
daa
and
popa
mov
cmp
jl
lret
xchg
push
fwait
mov
push
jnp
rcrl
jno
inc
ds
mov
dec
aas
pop
cmp
mov
arpl
pusha
loope
jp
cmp
stc
fldt
mov
xor
mov
mov
lds
pop
xchg
inc
sbb
ds
fstl
enter
and
mov
into
sbb
das
test
inc
idiv
dec
add
jg
add
fiaddl
mov
cli
xor
insl
xor
jnp
out
ja
inc
int3
inc
rcll
push
insb
stc
jno
dec
js
cmp
ss
inc
add
pop
adc
pop
mov
cmp
mov
insl
pop
cmpsl
cmpsb
gs
mov
shrb
add
and
adc
outsb
negl
and
sub
dec
pop
fwait
jle
sbb
rolb
popa
mov
repnz
sbb
lcall
sub
mov
inc
sahf
fldenv
dec
test
sarl
lods
test
aad
sahf
sahf
pop
rorl
push
pushf
movsl
addl
pop
xchg
out
pop
loope
std
jo
ret
imul
mov
jmp
dec
aam
mov
je
loop
mov
xchg
mov
push
push
stos
aaa
pop
xor
mov
and
mov
inc
xor
imul
pop
out
aaa
and
arpl
daa
mov
pop
ret
dec
ficompl
pop
stos
in
mov
outsb
add
jl
ja
jl
pop
push
adc
sbb
push
out
sub
sti
in
push
push
or
mov
rcrl
ficoml
jmp
dec
imul
scas
and
mov
and
pop
xchg
pop
xchg
jo
iret
pop
add
insb
xor
cmp
and
xchg
adc
pop
and
push
jmp
sahf
cwtl
jp
pop
add
and
dec
and
ja
xchg
mov
outsl
pop
out
mov
mov
icebp
out
aad
sub
stc
cmp
gs
adc
pop
cmp
int3
loop
mov
mov
movsl
sub
mov
fstps
lret
dec
add
out
outsl
stos
mov
xchg
enter
roll
js
jo
mov
daa
or
fs
jge
into
imul
imul
lods
xlat
add
jge
add
cmp
scas
lods
stos
jo
jp
fcompl
std
mov
in
adc
jl
xor
xor
insl
negb
fistpl
mov
pop
and
fwait
arpl
xor
sub
push
stc
dec
inc
or
dec
and
sbb
imul
hlt
outsl
stos
xchg
xchg
jge
ljmp
dec
lcall
xchg
cmp
push
mov
jmp
pop
jbe
lods
inc
cld
push
repz
in
fwait
orb
lcall
mov
aam
jmp
cmp
xor
and
jnp
xchg
popa
sbb
int
pop
fsubrl
sbb
imul
test
cmp
mov
dec
jns
adc
lock
pop
push
pop
mov
loopne
xor
inc
fwait
nop
std
call
mov
or
cmp
rorl
pop
data16
push
adcl
add
pop
dec
xchg
rorl
dec
xorb
mov
js
lret
data16
es
adc
fwait
xchg
sub
mov
pushf
lcall
fistpl
or
loope
lcall
ficoms
inc
in
cmp
dec
adc
insb
scas
push
idivb
hlt
sbb
test
pop
leave
mov
loope
pushf
xor
in
fistl
in
inc
pop
pop
push
aad
pop
divl
xor
sbb
rcrb
cmpsl
cwtl
incl
test
cltd
fxch
jb
lret
xchg
mov
sbb
pop
xchg
loop
subb
push
mov
faddl
cmp
dec
cs
js
xchg
lock
adc
pop
in
jle
out
popf
mov
les
or
jg
push
cmp
or
cmp
sub
cltd
pop
xchg
xor
imul
bswap
sbb
inc
mov
jne
cs
mov
mov
addr16
jae
mov
fldcw
push
fwait
xor
adc
std
and
add
ret
insl
xor
dec
lahf
idiv
cli
lahf
hlt
xchg
cmp
xchg
pop
and
aas
inc
dec
ret
sbbb
jle
inc
push
mov
enter
mov
push
jp
pop
lahf
test
sbb
cmpb
or
xor
ja
inc
test
dec
cld
mov
mov
pop
fcoml
shl
sahf
mov
mov
jp
lcall
call
mov
iret
xchg
dec
mov
loopne
mov
xchg
inc
cmc
xchg
dec
arpl
test
lret
shl
inc
mov
ret
inc
jno
mov
js
es
ljmp
repnz
daa
pop
adc
loop
loopne
push
loopne
dec
xor
jg
hlt
sbb
sub
xchg
jns
jb
cld
add
push
jmp
sbb
adc
sbb
add
shlb
adc
sub
jl
jo
in
xchg
rolb
inc
hlt
cmpsl
inc
inc
lret
les
mov
sbb
dec
dec
lret
stc
emms
sub
mov
jecxz
leave
push
lock
outsb
ret
jmp
dec
mov
stos
scas
add
popa
push
xor
test
ss
rcr
and
and
mov
push
xchg
stc
ret
xchg
mov
addr16
inc
fsubrl
lea
sub
pop
das
ret
aad
lret
mov
iret
jmp
and
int
xlat
sbb
pop
imul
and
fsubs
ret
cmp
inc
adc
or
idivb
test
dec
push
adc
out
mov
adc
mov
jmp
test
xor
cmp
cmovo
ljmp
aad
pop
xor
out
int3
int
or
jle
test
aad
pop
in
test
pop
inc
pushf
sub
xchg
dec
xlat
out
xor
and
mov
std
fwait
decb
push
out
adc
in
pop
dec
ljmp
inc
into
in
in
jb
fildll
popa
jns
shlb
cmp
add
ja
pop
or
fiaddl
mov
pop
fs
scas
shrb
out
mov
shll
call
cmp
mov
adc
jecxz
cltd
sub
mov
je
mov
sbb
dec
aam
fadds
iret
cmp
mov
add
das
add
and
out
fstpl
mov
fstp
adc
bound
test
es
popa
mov
mov
mov
lcall
mov
leave
add
insb
adc
fadds
sub
xlat
and
insl
into
push
mov
mov
pop
jecxz
aaa
mov
cld
ljmp
push
ret
mov
xor
int
jge
out
test
std
outsb
pop
es
rcrb
dec
ja,pn
cmpsl
ja
cmp
adc
or
xlat
scas
cmp
aaa
sub
flds
and
mov
cmp
cmp
shrb
cld
push
je
call
lock
orb
pop
int
push
push
or
and
push
push
sbb
divb
add
mov
int3
adc
sbb
push
mov
mov
iret
cld
insl
into
dec
and
jge
mov
jle
pushf
cmpsb
sbb
ret
cld
push
dec
ficoms
in
std
sub
scas
xchg
push
dec
xchg
test
push
jl
inc
ljmp
out
xor
mov
xor
push
cld
arpl
idivl
std
pop
mov
mov
inc
js
enter
fcompl
mov
cmc
cmpb
push
sub
scas
push
bound
mov
or
cmpsl
in
xlat
lcall
fiaddl
ror
push
fwait
or
jg
cmp
ds
cmp
and
adc
sbb
xorb
sub
and
mov
dec
cmp
or
icebp
mov
jmp
dec
inc
es
or
in
in
jns
sbb
push
xchg
outsb
push
sbb
sahf
adc
shlb
jmp
fisttpl
and
dec
sub
mov
test
mov
out
sub
popf
repz
stos
and
xchg
js
ds
or
push
mov
push
sbb
push
ss
mov
xor
fidivs
cs
fdivs
pop
adc
insl
outsb
jecxz
imul
sti
xchg
in
mov
cld
fiaddl
sbb
xor
or
xchg
mov
inc
jle
dec
dec
pop
mov
sbb
mov
add
cli
aas
out
inc
inc
cltd
or
jbe
out
gs
arpl
fs
nop
xchg
lahf
adc
mov
add
push
sub
jmp
inc
loopne
or
push
adc
push
dec
repz
fpatan
dec
std
lods
mov
pop
inc
js
xor
add
fdivs
fcmovnbe
mov
movsb
jg
pop
pop
add
lahf
jl
sbb
ficoms
jne
xchg
dec
jp
xchg
aas
repz
sbb
lret
dec
or
insb
ret
cld
inc
xlat
dec
xlat
jns
je
pop
jo
cmp
mov
out
test
arpl
cwtl
dec
xor
jl
cld
mov
outsb
pop
mov
aas
mov
mov
into
jns
jno
clc
jo
mov
stc
push
jmp
nop
je
imul
xor
mov
cmpsl
adc
cmp
xor
dec
out
imul
repnz
les
fsubrs
test
popf
loop
ret
in
kmovb
enter
loopne
push
add
popa
stos
bswap
imul
fsubrs
xor
jbe
cs
cmp
insb
and
jnp
lea
push
lahf
mov
sbb
inc
inc
push
push
fisubs
and
xlat
clc
mov
nop
pop
mov
jno
pop
shrl
cmp
jle
xor
mov
imulb
cmpb
into
adc
outsl
pop
ss
call
push
int3
std
xchg
jns
test
add
xchg
std
or
mov
and
xchg
sti
das
xchg
mov
sbb
xor
adc
xlat
in
lret
push
add
ds
sahf
pop
xchg
dec
add
mov
mov
cmp
in
lock
jge
daa
mov
inc
std
mov
out
mov
fadds
inc
into
xchg
fwait
cmp
sahf
mov
or
mov
popf
xchg
xchg
roll
mov
aad
dec
dec
mov
or
in
enter
cmp
fdivs
cmp
add
pop
bswap
mov
pop
outsl
cmp
aad
adc
cmp
dec
movsb
mov
xor
jge
push
dec
loop
test
or
push
pop
bound
jmp
xor
mov
mov
scas
outsl
and
lea
or
testl
inc
pop
gs
adcl
dec
scas
mov
adc
scas
out
incb
pop
dec
adc
sbb
das
out
mov
adc
out
mov
inc
lods
sarb
jbe
out
adc
stc
adc
or
lret
sbb
push
mov
or
outsb
inc
xorb
mov
jnp
mov
xorb
cwtl
lods
inc
repnz
jne
xchg
fidivl
je
pop
push
aas
movsb
and
dec
addb
jne
mov
push
das
sahf
leave
xorb
xor
gs
cmp
lahf
cmpsl
out
fcmovne
mov
repnz
or
outsb
addb
jb
subl
int
mov
push
and
xor
sbb
mov
ss
daa
push
cmp
mov
add
aad
push
repz
outsb
mov
lahf
jns
sahf
test
xchg
cmpsl
jae
loopne
std
imul
jmp
daa
mov
loope
rorl
jge
mov
clc
xchg
inc
add
xor
pop
fadd
lea
jno
inc
mov
adcl
clc
cmp
inc
or
add
lock
push
fwait
outsb
aad
jl
incb
jle
xor
xorb
or
mov
or
stos
outsl
lods
xchg
jp
push
notb
add
les
xchg
pop
hlt
js
ret
scas
dec
inc
mov
jle
incl
inc
stos
xor
in
leave
mov
int
pop
popf
pop
cmp
out
cmp
imul
test
dec
roll
scas
sub
jbe
jnp
and
xchg
daa
aad
rcrb
scas
imull
cmp
add
ds
pusha
jmp
les
ljmp
mov
mov
xor
dec
and
inc
in
jne
jmp
or
inc
push
xor
jmp
out
push
or
mov
jl
mov
imul
pop
shrb
mov
stc
decl
fimuls
leave
cmp
push
aam
int
xchg
out
xchg
andl
movsl
arpl
xor
testb
aam
pusha
sub
imul
mov
in
movsl
and
out
cld
dec
cli
scas
mov
es
push
or
mov
sub
mov
int
jecxz
xchg
cwtl
push
loop
dec
out
test
xchg
andl
inc
das
cmpsb
push
shrb
outsl
mov
loop
jne
mov
xor
rep
xchg
aam
and
pop
xchg
push
and
int3
shrl
push
inc
js
lahf
out
outsl
mov
adc
mov
add
xor
adc
dec
into
xlat
jae
jns
xorl
xchg
xchg
fcompl
les
dec
adc
dec
call
cld
outsb
push
add
mov
enter
lahf
in
js
sbb
mov
and
jo
jo
mov
xchg
mov
aaa
pop
insb
mov
call
add
dec
mov
imul
ret
pop
clc
ja
in
inc
shrb
sbb
push
rcrl
orl
jl
mov
mov
adc
jae
mov
xchg
jo
scas
popa
xchg
mov
jg
imul
add
loop
push
mov
cmp
mov
and
out
mov
add
scas
mov
jecxz
mov
push
cwtl
test
std
mov
jge
stos
cmp
cwtl
lock
inc
fstps
mov
daa
sbb
pop
xor
push
fmulp
dec
imul
gs
dec
push
or
aad
cmp
lock
lods
lds
in
or
ja
push
xor
jmp
call
ficoms
push
mov
inc
mov
jmp
sbb
mov
inc
test
mov
arpl
inc
out
fists
xchg
sub
popa
jmp
mov
fidivrl
mov
jnp
pop
push
add
ror
icebp
imul
mov
mov
stos
sahf
push
xchg
dec
outsb
bound
push
into
mov
gs
bound
insl
push
pop
add
int3
test
add
lea
jae
insb
call
jo
mov
and
lcall
push
mov
mov
cmp
jo
and
aas
iret
faddl
test
cli
or
sub
inc
je
sti
std
mov
fcoml
daa
in
mull
sahf
mov
out
inc
idivl
scas
and
push
adc
or
daa
cmp
hlt
cmp
mov
repnz
xor
ja
add
lds
insl
lock
fstpt
xor
out
cmpl
stos
ret
xor
push
scas
push
xchg
leave
jne
and
push
and
sbb
popa
pop
mov
in
add
shr
and
pop
stos
int
cmp
sbb
and
push
pop
stos
or
sbb
test
out
sahf
lahf
push
popa
scas
push
movsb
fcomps
ljmp
push
stc
push
lret
stos
mov
ljmp
lods
and
int
popf
adc
pop
pop
movsb
push
inc
sub
add
pop
out
lahf
loopne
jge
dec
rorb
jl
push
fmull
jg
fwait
adc
incl
rcl
ljmp
ret
pop
subl
fs
imul
push
jnp
dec
mov
push
sbb
rcrl
adc
insb
insl
add
cmp
in
xchg
sbb
movsb
scas
shll
shll
sti
dec
or
and
push
out
push
js
lock
inc
aam
inc
nop
movsl
jne
test
and
mov
push
sub
xor
shl
xchg
inc
sbb
push
mov
ja
xchg
xor
pop
test
int
xchg
enter
mov
pop
ud0
mov
andb
jne
mov
scas
aad
xchg
addr16
sarb
mov
mov
xor
jne
fnstcw
fs
clc
loop
lds
addb
push
sub
jb
adc
xor
jno
aaa
lahf
shr
pop
pop
dec
lcall
mov
iret
popf
pop
arpl
pop
jl
ds
dec
repz
fucom
stos
test
jmp
pop
std
nop
inc
aas
or
cmc
mov
pop
dec
mov
push
xchg
fsubrl
and
xor
mov
ss
cmp
push
mov
aam
popa
push
inc
and
jne
and
jnp
les
rol
ret
ja
lds
jecxz
add
dec
in
sub
outsb
ret
sbb
dec
adc
mov
jecxz
and
mov
stos
nop
inc
mov
mov
ret
sbb
push
push
clc
cmp
adc
inc
dec
stos
inc
iret
test
mov
sbb
fnstenv
pushf
nop
sbb
mov
lahf
popa
bound
scas
xchg
stc
pop
sub
push
and
cmp
ss
fcomps
xor
stos
arpl
mov
push
jp
mov
mov
loope
push
cwtl
mov
xchg
dec
outsb
sub
addr16
add
sbb
xor
and
jno
jno
push
adc
jo
cmp
ss
out
sbb
pop
gs
fistps
jbe
inc
aaa
mov
jmp
pop
mov
xchg
repz
xchg
inc
mov
add
add
lea
sbb
js
ret
dec
repz
cmc
push
xchg
mov
aad
imul
jge
ds
scas
cmpl
leave
stos
and
dec
push
inc
adc
cmp
mov
das
sbb
scas
sti
fwait
mov
xchg
push
or
stc
and
leave
aas
ficoml
adcb
mov
push
es
mov
enter
xor
cmp
xor
into
ret
adc
test
push
lds
sub
sub
adc
mov
sub
out
inc
jno
pop
pop
mov
push
push
hlt
cmp
mov
pusha
inc
in
add
xchg
imull
aad
imul
mov
js
test
fs
jae
mov
and
leave
dec
mov
sbb
sbb
xchg
and
sbb
jl
jno
imul
xchg
mov
ss
pop
test
arpl
adc
sub
cmp
xchg
xor
out
jg
int3
jbe
mov
cwtl
jle
pusha
push
jns
int
lret
pop
movsl
xor
pop
pop
fnsave
nop
data16
lret
orb
sti
xor
call
mov
cmp
cli
add
shlb
fldenv
outsl
mov
mov
sbb
dec
loopne
mov
and
mov
xor
das
pop
jbe
xor
imul
loop
mov
and
jae
lds
les
roll
in
dec
popa
mov
sbb
xor
incl
sbb
fsubr
push
out
arpl
icebp
mov
lret
insl
push
adc
push
add
pop
test
sti
lods
sub
mov
loopne
sbb
pushf
cs
adc
lret
add
pop
iret
insb
rcr
xor
jnp
add
jns
sub
movl
push
add
rorl
adc
lahf
jl
scas
sub
ljmp
fisttpl
mov
insb
icebp
or
adc
inc
je
jle
std
mov
sub
aas
inc
insb
icebp
xor
mulb
adc
ja
xchg
jo
adc
jl
scas
stos
mov
xor
fstpt
jge
nop
and
lret
dec
test
cs
outsb
mov
sbb
mov
fcoml
bound
add
mov
fistpl
in
cmp
lret
jns
push
ficomps
xlat
orb
jnp
push
sahf
mov
psllq
push
mov
cmp
or
add
repz
push
jae
jno
imul
fs
jb
add
dec
ret
push
outsb
inc
outsb
sbb
jp
stc
test
test
push
xor
and
cmpsb
xchg
stc
rclb
mov
mov
adc
fwait
jno
lret
dec
lahf
mov
xor
cltd
fsubrl
mov
nop/reserved
dec
pop
and
sbb
rclb
sbb
pop
push
sbb
dec
sub
adc
mov
push
dec
sub
cmp
les
loop
or
dec
cmp
and
fistl
jnp
pop
push
insb
sbb
sub
xor
je
lock
lcall
int
nop
xorb
and
out
stos
lock
dec
xchg
clc
xor
neg
sbbb
inc
dec
jb
lea
fnsave
fiaddl
arpl
xchg
call
pop
mov
xchg
pop
adc
scas
mov
test
dec
mov
sbb
test
pop
imul
add
mov
jns
mov
gs
cld
xor
and
daa
mov
mov
inc
aas
sub
and
ss
aad
test
fisubs
xchg
clc
cmp
lcall
inc
or
scas
cmp
js
cmp
js
stc
sbb
jle
inc
push
andl
lds
mov
mov
ja
lods
pop
push
movsb
sub
jnp
icebp
lahf
lahf
mov
jns
adc
shrl
aam
xor
mov
stos
mov
inc
xchg
std
jno
pushf
fs
sbb
push
mov
and
nop
jmp
mov
popf
cli
sub
pop
mov
push
jae
enter
lea
cmp
push
int3
cli
mov
mov
notl
adcb
out
std
adc
arpl
mov
popa
cmpsl
mov
mov
and
xchg
ss
lock
int
call
sahf
inc
fmull
fcmovbe
mov
push
mov
lcall
lods
push
test
stos
or
sub
sbb
cmp
and
subb
add
dec
dec
enter
push
xchg
sbb
jne
fwait
aas
arpl
add
repz
dec
and
iret
mov
cltd
lods
add
xor
jmp
lret
push
fstpl
pop
data16
das
cmp
push
pop
mov
lock
adc
int3
cwtl
mov
or
out
jl
sub
pop
adc
adc
inc
fsubrl
pop
xchg
shr
rolb
or
mov
xchg
sbb
adc
outsb
jbe
je
push
mov
addr16
mov
add
dec
or
ret
mov
add
inc
and
xchg
fwait
repnz
sub
jae
push
or
xorl
fcmovu
dec
jae
ficoms
daa
aaa
xor
in
push
xchg
pop
aad
es
xor
inc
jge
inc
dec
icebp
out
cmp
ds
repnz
outsb
insb
sbb
hlt
ljmp
into
sub
or
fwait
and
cmp
sub
jbe
mov
in
mov
fildll
out
stos
cld
sbb
sbbl
test
outsl
lea
add
into
or
xchg
xor
cli
pushl
dec
rol
dec
jp
mov
mov
das
inc
cs
out
fsubl
push
outsl
call
ja
mov
adc
cli
ja
std
insb
movsl
scas
sub
sbb
sahf
pop
pop
xchg
cli
and
loop
cmp
xchg
or
push
cmpsl
cmp
mov
les
or
dec
and
arpl
mov
bound
imul
xchg
jl
dec
bound
mov
or
ds
mov
sub
push
adc
xor
stos
call
cmpsb
push
mov
ja
stos
or
pop
repz
xor
push
sbb
sub
loop
dec
jl
pop
dec
inc
stc
std
xor
sub
pop
in
outsb
cs
leave
dec
cmc
fstpl
test
sbb
arpl
int3
cltd
test
stos
pop
jl
and
fbstp
hlt
addr16
cli
pop
mov
push
imul
pop
lea
repz
jle
stos
pop
fstl
popa
jns
sbb
test
stos
inc
popa
cwtl
in
das
gs
mov
dec
xor
jl
neg
mov
enter
dec
cli
cltd
lahf
mov
aam
fs
sbb
cwtl
sub
or
in
out
push
loope
stos
sbb
stos
dec
push
mov
lock
popf
sahf
mov
mov
nop
imul
add
imul
cmp
xchg
out
mulb
jo
pop
jo
out
xor
dec
push
inc
xchg
fwait
adc
lahf
xchg
or
xor
and
push
std
data16
inc
mov
hlt
movsl
ljmp
push
mov
push
push
scas
addr16
xchg
cmp
add
loope
add
and
or
cwtl
mov
jmp
fdivs
movsl
inc
xchg
nop
and
jnp
fdiv
int3
ret
xchg
test
int3
or
xorl
rorb
jl
sub
mov
loopne
sub
pop
stos
iret
icebp
sbb
aad
xchg
cmp
pop
adc
clc
scas
roll
loop
outsb
loope
orb
sbb
dec
xchg
enter
mov
jmp
outsl
xchg
stc
int
xchg
test
enter
xchg
inc
sub
add
adc
pop
sbb
arpl
mov
scas
cwtl
pop
ficoml
inc
adcl
jg
lea
adc
aam
loopne
mov
enter
pop
out
movsl
jns
int
lods
push
iret
out
insl
fwait
clc
int3
mov
jp
add
mov
cmp
xchg
mov
popa
mov
jnp
loope
jp
scas
test
repnz
rolb
mov
xchg
mov
xchg
cmp
stc
es
xor
mov
out
cmp
and
pop
push
insb
cmp
push
xchg
aad
xchg
jmp
push
sbb
sar
icebp
imulb
inc
mov
inc
fsubrl
fsts
cltd
or
adc
cmp
sub
or
rorl
stc
inc
sbb
jle
cmp
dec
cmc
in
fs
xchg
mov
mov
sbb
add
jle
je
cltd
imul
inc
xor
adc
shrb
test
lcall
pop
xchg
xchg
push
dec
rolb
pushf
gs
jne
aaa
xchg
mov
sub
jns
mov
test
jns
fisubl
aad
xor
pusha
sahf
inc
enter
test
inc
add
and
push
cmpsl
data16
add
xorb
mov
sbb
lret
shlb
fucom
fisttpll
mov
xchg
pop
aaa
or
cs
inc
cmp
fbstp
outsb
incb
fwait
push
sbb
pop
mov
movsl
pop
dec
ja
mov
cmp
inc
loop
dec
pushw
pop
xor
lret
or
std
mov
cltd
mov
out
dec
idivl
shrb
or
outsb
shll
mov
push
rcr
les
lds
inc
call
jb
insl
and
push
push
and
pop
dec
xorb
pop
enter
dec
adc
daa
mov
add
sbb
pop
cs
leave
jb
push
fwait
xchg
nop
repnz
jmp
push
shlb
mov
jae
pop
call
add
and
loopne
mov
and
out
adc
cmp
and
xor
jae
cwtl
psrlq
cs
sbb
adc
mov
shll
jp
inc
outsb
sub
test
pop
orl
push
rcll
sbb
popf
dec
cmpsb
call
fstps
rclb
add
cmpsb
xchg
cli
stos
jge
xor
fldenv
outsl
mov
insl
cmp
and
es
mov
int3
push
cmp
call
cmp
push
cmp
hlt
push
dec
cmp
mov
add
cltd
cs
call
fldcw
cs
xchg
mov
icebp
cmp
or
ljmp
int3
pusha
xchg
cmp
fs
jmp
repz
lahf
mov
icebp
or
nop
push
mov
fistps
loopne
insl
lret
jns
xor
sbb
xlat
loop
jbe
ds
je
scas
mov
iret
int
dec
lret
cmc
lret
clc
push
sbb
in
inc
push
mov
inc
jecxz
int3
or
in
int
xchg
adc
mov
or
shrb
sub
aad
fisubrl
mov
xchg
and
fildll
sbb
pop
add
lret
mov
sub
lods
insl
jne,pn
dec
sub
xchg
out
jp
out
outsb
fwait
mov
stc
mov
cmp
adcl
sahf
scas
add
sahf
jns
mov
push
or
sub
fistpll
jge
mov
push
icebp
loope
sbbl
pop
aas
rclb
fnsave
xchg
popl
test
gs
or
xchg
repz
int3
test
push
push
stc
or
add
fdivl
loop
and
repz
cld
push
orb
in
cs
or
jmp
jbe
daa
xchg
jmp
pop
sbb
inc
in
jne
add
rorb
arpl
or
push
mov
dec
aam
test
loope
in
incb
sbb
adc
adc
stos
pop
cmp
lcall
fistps
push
xor
lods
das
cmp
dec
xlat
hlt
ret
test
test
das
xor
push
lods
jns
xchg
shrl
push
xchg
push
and
mov
inc
lret
enter
mov
pcmpgtb
push
test
out
add
or
push
leave
inc
mov
cs
scas
adc
scas
push
xor
insb
cmp
cmp
jns
adc
jnp
push
cmp
out
push
mov
call
jns
adc
dec
call
insl
fiadds
out
adc
jbe
pop
out
out
loop
xchg
xchg
push
cltd
mov
fsubs
push
repz
mov
mov
dec
in
xchg
mov
xchg
insb
in
add
mov
imul
pop
sub
test
pop
add
shrl
mov
jno
mov
cmp
dec
xchg
mov
lds
cld
clc
lods
mov
pop
inc
repz
xchg
mov
std
insb
movsl
insl
dec
jmp
out
lahf
into
ds
push
push
push
xor
test
mov
pop
xor
jne
mov
push
sbb
add
loop
dec
push
push
and
call
in
xor
xor
nop
xchg
inc
fisubl
lcall
repnz
mov
mov
push
cmp
or
ror
testb
cmp
or
mov
cs
xchg
adc
fistps
add
es
inc
and
test
jbe
neg
bound
lods
mov
add
negl
cs
xchg
icebp
cmp
xchg
push
out
push
pop
fs
inc
packuswb
das
roll
inc
imul
inc
xorb
test
cmp
push
enter
fldcw
fisubs
scas
sbb
fs
outsb
inc
loopne
inc
or
test
lods
xor
dec
pop
and
cwtl
inc
pop
popa
ret
dec
repnz
mov
push
clc
pop
push
adc
je
inc
and
sbb
push
mov
jge
loop
push
cs
cmp
xchg
push
jb
add
ret
lcall
add
fmul
mov
xlat
lods
sub
adc
sbb
shrb
test
sbb
xor
stos
jno
fnstsw
jns
fisttpll
rcl
lods
sti
and
push
jge
or
xchg
movsb
rclb
out
out
mov
adc
jg
call
insl
js
inc
arpl
push
jae
push
sub
icebp
xor
xchg
stc
xchg
cmpl
add
es
jmp
jecxz
inc
xor
jmp
in
daa
popa
leave
or
and
xchg
mov
sti
pushf
cmp
adc
mov
mov
out
rcr
fisttpll
ret
movb
push
test
es
addr16
adcb
dec
loope
pop
xor
inc
nop
pusha
sub
push
fldl
inc
push
repz
jo
cmpsb
lret
pop
sbb
dec
and
push
jo
jo
testb
ds
inc
outsb
and
hlt
aad
ds
mov
xor
sub
add
mov
xor
mov
mov
test
sbb
ror
in
mov
mov
js
mov
xlat
mov
pop
jecxz
dec
aam
js,pt
fcoms
es
arpl
push
xchg
das
and
or
add
mov
jno
sbb
pop
pop
jmp
imul
lea
mov
sbb
repnz
xor
cmpsl
and
pop
mov
cmpsl
andb
lcall
dec
filds
test
ret
and
pop
fistps
dec
in
mov
pop
xor
popf
mov
push
cwtl
or
xor
mov
fptan
jle
mov
mov
dec
mov
sub
sbb
mov
mov
pusha
jb
or
std
mov
sub
pop
div
mov
or
ret
or
inc
rcl
pop
mov
or
add
push
bound
sbb
push
ret
and
das
inc
cmc
pop
xchg
mov
sub
movsb
js
xor
call
aas
add
stc
js
mov
xorl
movsb
fucomp
imul
xchg
or
dec
movsl
in
cwtl
mov
adc
lret
aaa
adc
fidivrl
sbb
std
sbb
jp
cmp
adc
lock
cltd
cmp
test
cmp
mov
in
add
in
xchg
mov
mov
jo
test
out
outsb
add
pop
dec
sbb
icebp
sub
mov
sub
jl
jl
ret
sub
mov
mov
rcl
inc
add
ret
aad
cld
pushf
or
xor
xchg
lea
inc
andb
decb
jle
xchg
inc
ss
scas
out
js
lds
jne
movsl
das
outsl
pop
cs
or
fwait
mov
jg
cmp
sbb
les
cli
jo
hlt
shll
ficompl
ds
scas
adc
pop
xlat
cltd
vsubss
inc
lret
xchg
mov
stc
and
movsl
dec
push
out
mov
outsb
fstpl
adc
sub
mov
push
xorl
jbe
fidivs
xor
insb
sahf
hlt
mov
or
inc
and
hlt
fdivrs
ror
inc
cmp
sbbl
outsb
and
arpl
jmp
ds
iretw
jb
je
jmp
fistl
mov
mov
daa
pop
aam
xlat
cmp
cmp
arpl
cs
pop
push
arpl
imul
shll
clc
mov
cltd
sub
sub
and
cld
pop
jbe
dec
add
and
in
fisttpll
inc
aaa
xlat
add
nop
loopne
shrb
adc
add
inc
mov
ds
xlat
jp
pushf
add
das
mov
mov
pop
mov
std
and
jg
out
sbb
jo
hlt
mov
lret
xchg
int
into
mov
jo
mov
mov
aaa
addl
out
mov
outsl
nop
fistps
lret
dec
dec
inc
push
dec
jmp
out
sub
or
mov
ficompl
jae
rcrl
or
add
out
leave
es
mov
aam
and
sub
xor
cmp
aam
stos
movsb
movb
sbb
mov
cwtl
sub
xchg
loopne
mov
sbb
cmpsb
loope
out
aaa
mov
or
pusha
push
enter
push
xchg
push
mov
push
push
push
sub
and
jg
cmc
in
pop
jno
xchg
hlt
inc
pop
and
pop
sbb
lods
sbb
lds
mov
mov
jmp
xor
inc
xchg
repz
fldl
cltd
movsb
repz
jl
movsl
cmpsl
dec
ret
add
push
push
xor
aam
dec
jns
hlt
push
jne
xchg
ffreep
test
lods
xor
sbb
dec
adc
cld
mov
inc
out
sbb
lcall
loopne
ljmp
div
cwtl
insb
aad
add
xor
aad
scas
cmp
scas
dec
pusha
sub
imul
loop
lods
scas
push
imul
inc
leave
popa
jge
stos
mov
or
inc
pop
push
and
add
daa
sbbb
out
cltd
dec
ljmp
sahf
aaa
arpl
in
fisubl
arpl
add
out
out
insb
mov
mov
lret
test
jns
mov
add
fcmovnb
sti
fs
fwait
dec
adc
lock
sub
lods
add
lds
fsts
lcall
adc
ret
and
int
ret
and
addr16
notl
mov
test
ficomps
pop
cmp
cs
sahf
add
int
jno
push
sub
leave
jnp
iret
std
jl
lds
mov
loopne
adc
jnp
nop
xchg
lods
bound
sub
mov
and
dec
inc
loopne
jbe
repnz
inc
push
adc
mov
sbb
loope
push
mov
dec
lahf
fdivrs
xchg
pop
fdivp
xor
mov
jl
lea
out
fwait
int3
loopne
add
push
lock
lret
jecxz
stos
cmc
jle
sti
in
ljmp
mov
arpl
mov
jno
shrl
pop
sbb
xchg
inc
cld
popf
cmp
pusha
lcall
push
cmp
lods
jbe
add
imul
mov
int
mov
mov
lds
adc
push
out
jecxz
inc
pushf
or
jmp
sub
idivb
movl
cs
inc
push
jge
ss
lahf
shrl
insb
jle
int
dec
xchg
push
mov
cmp
cmpsl
sbb
jl
push
sbb
aam
mov
mov
popf
jne
cmpsb
lret
adc
and
sti
mov
mov
bound
ja
sbb
jp
cli
aaa
je
cwtl
mov
inc
dec
jno
mov
jmp
mull
in
adc
and
cmp
mov
push
test
adc
inc
add
mov
fistl
adc
mov
outsl
stos
cmp
andb
sub
in
iret
stc
aaa
les
mov
dec
scas
jo
inc
int3
jnp
and
pop
or
outsb
inc
pop
inc
ficoml
das
push
shr
mov
or
sbb
jle
jl
testl
jg
in
jmp
xchg
xor
bound
mov
lds
lret
mov
rcll
add
sbb
orl
call
pop
aas
inc
data16
in
mov
mov
in
icebp
ret
iret
popa
ljmp
or
mov
stos
fs
daa
scas
jnp
cmc
lds
or
popa
dec
or
aad
pop
or
sarb
popa
hlt
mov
cmp
xor
xlat
pop
scas
xor
push
jecxz
mov
aaa
je
mov
push
cli
arpl
mov
sbb
or
pop
jae
rorb
sub
xor
or
shrb
std
cld
rcrb
sbb
sbb
les
test
push
or
test
addr16
push
mov
ret
testl
lods
daa
popl
notl
xchg
pushf
or
shl
rorl
xor
mov
test
mov
dec
xchg
cli
lret
mov
mov
push
push
mov
bound
inc
adc
je
clc
mov
repnz
inc
xor
insb
imul
loope
lcall
sarl
pop
jge
loop
pop
cmpsl
dec
adc
nop
sbb
insl
mov
push
movsb
mov
in
cwtl
sti
adc
inc
fidivrs
cmpsl
pop
cwtl
xor
cmp
out
mov
inc
sub
stos
cwtl
jbe
lds
and
fldlg2
cmp
sub
shll
sub
mov
lahf
add
stos
je
orb
insl
add
mov
pop
lock
out
add
jecxz
ret
and
int3
je
xchg
mov
imul
mov
sbbl
cwtl
mov
sbb
frstor
lcall
push
insb
enter
jo
jp
or
in
mulb
jge
pop
inc
out
ds
add
sti
prefetchnta
mov
insl
sbb
mov
mov
push
ljmp
cld
push
or
cwtl
dec
sub
rcr
push
mov
clc
cwtl
movsl
aam
adc
mov
dec
mov
mov
pop
and
dec
sbb
fcom
add
lock
leave
xchg
rolw
insl
mov
sub
xor
mov
and
push
sbb
lcall
jl
and
ds
hlt
sub
icebp
outsb
daa
repz
fisttps
jns
adc
in
xchg
pop
insl
rclb
mov
inc
mov
and
inc
ljmp
idivl
jg
cmpsb
or
mov
xchg
cwtl
mov
push
int
mov
aaa
es
ret
loope
mov
ret
lret
movsl
push
xor
sub
and
xchg
cmp
test
or
push
or
add
in
inc
pop
out
and
fistpl
sahf
inc
xor
imul
pop
sbbl
sbb
popf
roll
sub
jecxz
xlat
xchg
or
pop
adc
ja
mov
lret
cmc
xor
sbb
xchg
lcall
and
push
push
jb
xchg
xchg
inc
and
fwait
pop
orb
test
mov
das
xchg
cmp
pop
cmp
inc
push
xchg
movsl
push
add
pop
inc
scas
lock
xchg
loope
mov
sbb
stos
xchg
sti
out
subl
fisubrl
jne
out
jb
fimuls
test
cmp
ret
xchg
or
sbb
dec
call
mov
mov
out
cmp
inc
pusha
sbb
adc
cld
jnp
push
xchg
cmp
mov
mov
cmpsl
cmp
gs
jmp
dec
je
xchg
pop
inc
scas
pop
rorl
stos
push
jp
rorb
into
dec
add
or
cmc
cmp
repnz
leave
and
jmp
lret
xchg
ret
push
add
cwtl
stos
lea
push
mov
lret
or
andb
add
push
jbe
add
outsb
adc
push
jl
jg
dec
dec
jo
movsb
movsl
pop
xchg
mov
sub
cltd
cld
lahf
push
sub
add
adc
mov
dec
add
sbb
sbb
sarb
push
rcll
add
out
out
ret
lcall
into
mov
mov
push
repz
aad
roll
and
insb
pop
cltd
lea
xlat
test
inc
subl
cmp
mov
test
push
in
xchg
pop
bound
cmpsb
ret
and
inc
mov
sub
lahf
and
cmp
mov
xor
dec
add
cs
pushf
pop
cmpsl
inc
sbb
jg
mov
add
sbb
push
ljmp
dec
test
cmp
call
sub
icebp
jecxz
cmpsl
or
sub
scas
je
push
repnz
loop
std
xor
mov
mov
into
sub
in
mov
pop
sahf
in
xor
call
mov
and
xchg
inc
andl
mov
rorb
pop
ljmp
sbb
loopne
adc
orb
fisubl
push
insb
stos
stos
xchg
shll
popf
cmpsb
mov
sub
push
inc
inc
insl
cmpsb
mov
pop
rcrb
push
repz
mov
lock
fbstp
aas
cmp
jnp
or
cmp
pop
iret
xor
xor
lret
mov
sbb
jmp
push
inc
sub
xchg
mov
or
add
mov
mov
or
rclb
je
sti
add
and
lods
fs
mov
push
adc
jo
cmpl
inc
sub
call
pusha
pop
add
ja
mov
jecxz
xor
mov
cmp
adc
cmc
adc
inc
movsl
xchg
idivl
inc
loope
dec
out
jb
test
imul
std
shl
cltd
orb
and
inc
pop
jl
jb
repnz
popa
jbe
loopne
push
sar
outsb
adc
sbb
daa
or
ret
push
mov
xor
adc
dec
xchg
jle
dec
lods
jg
jb
dec
int3
xchg
xchg
jecxz
orb
mov
fwait
mov
adc
sbb
lahf
gs
add
mov
adc
adc
fld
push
cmp
loop
jmp
fsubrl
test
mov
shr
aaa
imul
addr16
push
pop
shrb
add
mov
lods
lods
lods
cmp
xor
dec
mov
jmp
inc
sub
test
and
mov
xchg
push
cltd
setno
sub
jmp
cmp
out
inc
out
and
pop
add
push
lea
pop
and
ds
xor
jo
or
out
out
xchg
ret
jns
in
pop
enter
repnz
xor
sub
xchg
mov
push
sarb
mov
cmc
decb
lock
xor
mov
data16
fiaddl
or
fnsave
or
ss
mov
xchg
lret
jo
xor
xor
sbb
scas
mov
pop
jo
insb
xchg
pushf
popl
dec
xchg
in
outsb
pop
sarb
clc
hlt
xchg
cmp
xchg
push
cmpsl
ret
dec
cmp
int3
lret
mov
cmpb
xor
dec
pop
loope
aam
sahf
imul
inc
jl
and
push
loope
mov
mov
and
test
xor
bound
mov
pop
and
jmp
mov
les
mov
aaa
fistpll
xor
cmp
mov
sub
xor
mov
cli
sbb
andb
add
xlat
jle
inc
cli
hlt
xchg
loope
and
rcrl
jp
scas
ds
mov
xchg
push
std
sti
cmp
pop
inc
inc
adcl
sti
pushf
sbb
stc
call
ja
stos
jno
pop
stc
mov
into
jp
mov
rcr
addr16
and
dec
rclb
mov
adc
ljmp
fsubrs
pushl
sbb
stos
lcall
pop
orl
lcall
mov
fnsave
adc
pop
sbb
mov
int3
mov
xchg
jl
sti
add
rcl
notb
gs
push
xor
lods
popf
lret
out
mov
das
or
mov
aad
pop
mov
sub
jno
push
xor
pop
shll
daa
pushw
pop
mov
cmc
pop
int
mov
inc
pop
inc
mov
sbb
mov
or
outsb
sbb
sbb
hlt
icebp
dec
movsb
mov
addr16
sbbl
cmp
cmpsl
aaa
ficompl
aad
test
adc
in
pop
aas
or
into
leave
cmp
fwait
and
cs
jne
fwait
in
jecxz
pushl
nop
lret
outsl
cmp
roll
in
mov
das
jg
or
cli
into
xchg
or
sub
push
movsl
xrelease
jno
fdivrl
or
ret
mov
adc
mov
mov
jno
js
cs
push
sub
adc
push
dec
and
push
imul
popa
xor
loopne
icebp
pop
pop
jne
lret
inc
inc
out
rolb
ljmp
call
movsb
adc
cmp
mov
cld
mov
xor
and
fldt
aas
mov
mov
shl
push
cmovo
daa
sbb
jl
imul
push
mov
flds
mov
dec
adc
mov
lret
push
inc
cld
insl
xchg
adc
jle
inc
add
cltd
and
insl
push
pop
cwtl
les
xchg
pop
xor
sub
inc
dec
fimuls
sbb
aas
dec
hlt
jge
push
adcl
cs
hlt
nop
jae
movl
les
roll
ds
lahf
divb
push
lcall
xor
mov
mov
dec
xchg
mov
push
jne
dec
cmpsl
or
mov
int3
mov
or
testl
out
push
int3
xchg
push
rorl
hlt
adc
jo
sub
dec
cmp
dec
pop
dec
dec
mov
pop
push
push
push
aaa
cmpsl
cmp
inc
jno
aad
daa
jb
xor
dec
sahf
aaa
cld
xchg
test
ret
mov
cmp
push
xor
daa
orb
or
cmp
and
push
xchg
andl
loope
lea
sub
mov
xor
mov
int3
jl
popf
mov
sbb
mov
xor
mov
lods
push
xchg
xchg
xchg
sarl
je
jmp
icebp
out
sub
xor
ror
xchg
xor
jmp
out
add
cmc
aas
jno
lds
cmpsb
scas
mov
inc
stos
jge
mov
rolb
inc
out
or
inc
sub
sbb
cmp
jbe
mov
and
cmp
sbb
cmp
mov
push
and
repz
xchg
jns
xor
data16
xlat
ss
rorl
mov
xchg
xor
xchg
daa
jg
mov
in
repz
jnp
std
bound
cmp
loope
enter
in
cmp
lea
cwtl
add
xchg
lods
int3
mov
and
insb
pushf
fadd
pushf
inc
subl
repz
pop
loop
dec
gs
pop
aaa
stc
or
and
push
adc
jae
rorb
dec
std
lahf
ljmp
and
dec
jb
cmpsb
addl
stos
xchg
insb
jg
mov
movsl
das
cmpsb
in
movsl
imul
sub
mov
fldl
stos
cmp
or
lret
or
test
repz
mov
aaa
xor
mov
and
push
iret
insb
add
out
and
pop
aaa
int3
push
fisttps
sub
xchg
xor
xchg
push
out
jmp
test
sahf
lahf
xor
daa
mov
add
pop
sub
out
out
adc
js
push
mov
lahf
or
adc
jno
push
loopne
mov
jg
and
and
sahf
test
mov
and
push
dec
shlb
pushf
int
add
jne
loopne
nop
push
mov
bound
or
in
xchg
push
ds
je
addr16
loopne
pop
std
jne
ret
sbb
pop
cld
add
xor
jmp
repnz
dec
aad
and
loop,pt
js
iret
jp
mov
sbb
xchg
out
mov
into
lods
cld
loope
inc
dec
negb
fistps
push
push
mov
aaa
dec
push
mov
mov
mov
add
xor
push
inc
ja
and
stc
inc
inc
fsubrl
sarb
out
push
xor
lret
es
aas
icebp
adcl
sub
push
xor
mov
ds
js
repz
in
pop
cwtd
adc
rcll
dec
std
js
fiaddl
mov
call
call
out
xor
mov
sbb
movq
jp
mov
repz
cli
mov
xchg
ret
pop
jl
push
jmp
adc
loop
rcrb
out
sbb
scas
pop
push
les
xchg
mov
lret
xchg
in
pushf
jnp
and
cmpsl
fcmovbe
cs
mov
sbb
lds
mov
mov
fwait
outsb
inc
mov
inc
es
or
push
dec
cmp
pop
jbe
mov
mov
push
movsl
rclb
fdivrp
fcmovnu
lcall
ret
mov
hlt
std
mov
dec
sahf
xchg
inc
mulb
jae
js
jl
mov
sti
xchg
sub
jmp
mov
mov
into
in
rorb
loope
sub
movsl
sub
dec
mov
jno
outsl
and
adc
scas
or
fwait
bound
adc
mov
subl
adc
out
popa
push
adc
pop
push
mov
pop
cmpsl
mov
add
imul
xchg
push
inc
push
cwtl
sti
xlat
addr16
int3
xchg
fldenv
es
in
dec
iret
test
pop
mov
cld
stos
jne
sub
in
adc
fcoml
sarl
lcall
lock
pop
aas
shlb
push
cmpsb
add
lret
out
adcl
sub
repz
roll
repz
pop
lret
rcrl
and
icebp
pushf
xchg
ljmp
sbb
mov
dec
stos
xchg
xor
lret
insb
mov
loope
push
lods
lods
jge
fwait
cltd
push
jmp
pop
push
mov
dec
scas
mov
stos
push
bound
cmp
mov
imul
cs
push
mov
lds
jno
mov
pmuludq
jle
int
or
insl
mov
mov
inc
andb
fisubrl
inc
addl
fsubl
add
popa
push
jle
push
cmpsb
and
mov
int
xchg
inc
mov
add
lret
mov
negb
icebp
dec
mov
out
mov
and
xchg
pop
sbb
addr16
xchg
das
je
cwtl
jb
push
sub
mov
inc
xor
dec
int3
inc
movsl
jns
cli
cmp
xlat
adc
rcr
and
daa
rcll
jns
push
push
fcoml
popa
and
jne
sub
mov
mov
or
pop
cwtl
mov
ds
pop
pop
movsb
jns
add
icebp
rcll
int3
mov
jno
mov
ds
in
adc
nop
push
popf
jge
jnp
test
jns
movsl
or
loope
push
mov
dec
in
les
aas
enter
cmp
mov
xlat
scas
lock
out
mov
sub
in
repz
mov
jle
xor
in
mov
mov
stc
sti
lods
aad
and
mov
adc
inc
std
out
jo
xchg
mov
add
lock
lds
ss
in
or
in
adc
pop
pusha
add
mov
sub
cmpsl
aaa
mov
mov
xlat
daa
std
int
dec
enter
push
push
xchg
add
ret
stc
dec
push
aad
es
and
jo
shll
cmp
addps
mov
es
cltd
jecxz
ret
pop
mov
mov
pop
jae
es
pop
js
into
push
sub
scas
bound
test
push
xchg
pop
arpl
add
mov
mov
dec
lahf
pusha
pop
xchg
ds
jnp
cmp
push
xchg
xchg
mov
mov
sbb
xchg
jecxz
mov
fmulp
dec
or
add
insl
or
scas
pusha
jnp
mov
push
mov
pop
mov
jae
ficomps
inc
nop
sbb
push
sub
cmpsl
fcomps
arpl
fnstenv
stos
xor
test
sub
in
and
jae
cmpsl
xchg
in
xor
mov
rol
jge
jg
bound
cmpl
lahf
xor
movsl
push
insl
outsl
popf
jbe
imul
cmp
cmpsb
mov
push
stos
or
jno
es
cmp
test
icebp
push
sahf
sbb
jmp
scas
loopne
enter
movsl
xchg
or
inc
ret
push
push
hlt
push
add
nop
shlb
xchg
lock
cmp
xor
xchg
mov
lcall
lea
movb
adc
popf
jg
cmp
lods
lret
xchg
fs
cmpb
imul
sbb
xchg
mov
shr
inc
hlt
sub
lret
subb
in
mov
mov
lret
loopne
mov
adc
in
mov
fsubrs
std
movsl
dec
sahf
insl
jmp
enter
push
xor
test
testl
dec
add
inc
sub
cli
call
movsl
pop
xchg
add
movsl
cli
ja
mov
sub
push
sub
mov
loop
mov
lahf
loopne
hlt
add
inc
xchg
out
add
add
cmp
or
aaa
cmp
xchg
jl
mov
mov
mov
xchg
jge
mov
movl
idiv
mov
lock
cmp
sarb
loopne
jne
mov
aam
icebp
das
mov
je
mov
int3
jmp
sub
aaa
dec
ror
in
pop
xor
mov
lahf
fwait
lods
fimull
cmpsb
out
lcall
dec
and
and
test
outsl
imul
pusha
frstor
mov
lods
xor
test
cmp
pop
xorb
lret
cmpl
dec
adc
movsb
jmp
cmpsb
or
lods
and
rcr
in
or
loope
mov
stc
nop
adc
mov
dec
gs
push
in
lock
in
insb
mov
add
cmc
pushf
stc
xchg
mov
pusha
std
mov
and
gs
mov
add
xchg
mov
mov
sub
mov
dec
jge
lods
repnz
cmp
jb
jge
pop
js
or
inc
sub
dec
cmp
out
push
es
sub
fcomi
lret
sub
dec
adc
rcll
aaa
cmp
xchg
fwait
jbe
jle
jns
mov
test
cmpsb
inc
sub
lahf
cmp
out
jnp
pop
mov
fucomp
cs
popf
lock
out
jnp
cmc
inc
mov
dec
not
fdiv
sub
loope
xchg
cwtl
sbb
and
fistpll
cs
and
repnz
mov
fisubrs
out
pop
das
mov
pop
sbb
xchg
xchg
std
lcall
jp
test
mov
jae
sbb
pop
cmc
push
or
mov
pop
inc
cs
mov
ljmp
inc
xlat
pushf
mov
fs
dec
mov
repnz
pop
push
pop
scas
mov
xchg
pusha
jmp
ja
mov
sti
xor
pop
or
xchg
into
push
add
or
or
add
ljmp
pop
xchg
push
jbe
movsb
or
sub
sub
dec
cltd
lock
movd
dec
sarl
pop
cmpsl
out
dec
gs
xchg
dec
mov
push
inc
pop
dec
repz
les
gs
cmp
popf
jmp
jecxz
test
cmpb
ret
daa
pop
fcmovne
mov
and
lods
mulb
adc
sub
pop
xlat
and
mov
adc
jns
sti
les
push
sahf
cmp
ja
mov
leave
jne
in
jecxz
int
imul
sti
lcall
sbb
mov
lea
aam
sbb
sub
push
mov
or
push
mov
jnp
jb
out
dec
add
mov
cs
sub
movsb
xchg
or
mov
mov
pop
mov
xchg
mov
cmpsb
lret
repnz
in
inc
mull
pop
jbe
ffree
call
add
jo
mov
test
jge
cmpsb
sbb
arpl
in
sbb
call
jmp
bound
jo
cmp
ja
fisttps
mov
les
jns
mov
adc
sti
daa
xchg
nop
mov
data16
gs
inc
nop
loope
add
sbb
or
popa
mov
arpl
aad
js
jb
add
jmp
or
fnstsw
fsubl
rcl
dec
cs
rcrb
add
ret
mov
or
fwait
sahf
mov
cli
xchg
out
call
sbb
fwait
xchg
ficompl
scas
lea
push
jmp
xor
in
mov
in
jmp
imul
call
cmp
adc
cwtl
pop
sbb
fmuls
call
bound
xlat
rcr
js
jle
out
incl
dec
andb
lret
repnz
sub
push
repz
inc
fwait
aam
mov
cs
stos
or
movsb
loop
jmp
jecxz
lcall
sub
pop
pop
jg
add
cmp
sarb
fldl2e
adc
xchg
xchg
decb
push
mov
xchg
push
test
insb
repnz
lcall
aaa
pop
adc
out
gs
jnp
stc
pushf
fnstenv
jge
cs
jo
cmp
dec
cli
mov
test
loop
pushf
mov
pop
in
sub
xlat
stos
xchg
pop
mov
or
mov
into
mov
shl
and
or
pushf
add
add
insl
adc
mov
stos
pop
out
sub
push
aas
adc
jle
lret
ffree
ljmp
jmp
ret
cwtl
add
jmp
popf
out
cltd
rcll
xchg
lods
mov
and
outsl
int3
xor
and
aad
xchg
call
movsl
mov
mov
ss
stc
sar
push
and
pop
jno
arpl
lods
popf
pop
dec
cmpsb
and
dec
lret
jo
dec
popf
jns
sub
jbe
in
mov
mul
jp
adc
dec
and
mov
fwait
daa
and
pushf
into
jecxz
fs
xchg
dec
shr
into
mov
cmpsb
xchg
ljmp
das
adc
push
std
mov
pop
not
fwait
pop
outsl
pop
mov
and
stos
daa
xchg
push
test
mov
mov
jns
pushf
std
xchg
in
pop
mov
mov
popf
aaa
divb
jnp
sub
test
dec
mov
push
sub
jg
negl
xlat
push
adc
sub
cmp
faddl
pop
pop
scas
stc
inc
pop
ret
lock
movsl
or
rcrl
xor
xchg
jb
dec
das
out
and
adc
mov
ljmp
and
and
mov
popf
mov
xchg
enter
int3
fpatan
pop
rorl
pop
loope
sub
push
testl
inc
ret
shlb
xchg
dec
mov
dec
jl
ffreep
in
sahf
pop
test
mov
and
push
in
mov
popf
mov
inc
or
insl
std
imul
shr
popa
push
mov
mov
or
inc
rcr
sbb
scas
mov
in
inc
fwait
call
mov
and
dec
xchg
dec
test
out
sbb
loope
dec
repnz
scas
jns
xchg
sti
jmp
in
fsubr
das
lahf
andb
loop
push
push
int3
adc
xchg
jl
clc
inc
push
shlb
dec
and
mov
jns
push
lods
jne
sub
mov
mov
int3
push
sbb
sahf
xorb
push
sahf
movsl
inc
add
scas
mov
inc
dec
or
out
add
js
lods
adc
sarl
dec
cs
lahf
jge
cmpsl
and
push
dec
and
sub
ljmp
jmp
nop
xchg
mov
jne
mov
dec
clc
mov
add
shlb
iret
jns
dec
inc
xor
jge
lock
jle
and
ret
mov
mov
sub
lock
clc
dec
jns
inc
xchg
cltd
icebp
xor
xor
shll
sbb
mov
je
pusha
add
push
out
leave
mov
inc
lahf
scas
into
sbb
jp
mov
xchg
dec
popa
xlat
bound
iret
sub
stos
mov
inc
or
pop
insb
xor
fstpl
or
mov
jle
mov
or
ss
inc
sti
cmpsl
fwait
cwtl
into
and
cmp
lcall
or
pop
mov
shrl
dec
orl
dec
test
test
xchg
sub
sub
rcr
mov
gs
jecxz
sub
aaa
imul
dec
push
movhps
add
mov
inc
xchg
scas
lret
loopnew
shrl
cmp
xchg
mov
aam
mov
loopne
push
lcall
xlat
enter
adc
mov
xchg
mov
xor
mov
mov
int
adc
dec
jno
mov
scas
cwtl
nop
push
inc
cmpsl
jge
mov
lods
adcl
sbb
jbe
sub
sbb
ret
mov
fdivrl
sub
mov
pop
pop
shll
scas
push
adc
movb
repz
mov
adc
sbb
dec
dec
pop
jp
cli
xor
push
xchg
in
mov
inc
pop
in
out
or
test
lds
movsl
pop
mov
int3
cmpsl
mov
mov
cmp
sbb
cld
ret
xchg
aam
and
mov
xor
dec
jns
test
cmp
rcr
lret
mov
sub
xchg
push
pop
fs
mov
jge
leave
adc
pop
and
arpl
and
or
xor
cld
in
clc
dec
test
call
shl
in
ret
push
aad
dec
dec
push
pop
outsl
out
inc
push
adcb
test
lahf
daa
mov
and
pop
mov
aas
scas
pop
push
adc
shlb
or
fildl
pop
repz
insl
cli
pop
jne
mov
push
jno
xchg
in
adc
dec
lods
imul
lock
mov
fstps
imul
pop
push
mov
dec
add
push
imul
insl
popf
lret
lret
adc
push
and
push
xor
movl
sbb
loopne
int
scas
and
jo,pn
scas
push
mov
shr
es
setge
adcb
repnz
test
in
adc
std
mov
cltd
sbb
dec
outsl
inc
inc
adc
aas
sarl
sub
xchg
outsl
aas
xor
ret
mov
lret
push
pop
mov
ret
xchg
push
icebp
or
aas
aaa
mov
or
dec
scas
push
or
lds
daa
hlt
mov
and
or
push
imul
or
dec
dec
and
rcl
aaa
leave
int
xor
in
sahf
in
das
xchg
pop
add
adc
outsb
lods
xor
push
addr16
add
jecxz
movsl
jae
cmp
and
adc
mov
add
or
cwtl
aas
aas
test
into
fwait
xchg
fidivrl
pop
mov
add
lret
xor
test
jnp
sahf
out
pop
inc
icebp
pusha
cmp
andl
sahf
xor
je
sbb
cmpsl
fimuls
xor
int
cmpsb
fisttpll
inc
lahf
pop
cmp
int3
mov
inc
push
mov
scas
inc
cmc
add
jno
imul
rolb
icebp
in
xor
mov
inc
sbb
mov
mov
aad
hlt
scas
gs
add
fs
mov
cmpsl
and
inc
imul
pop
cltd
mov
xchg
dec
clc
nop
push
lahf
lahf
adc
mov
mov
mov
idivw
push
lods
push
push
test
stc
gs
popf
mov
xor
push
es
loop
movsl
mov
xchg
stc
sub
and
je
xchg
repz
jle
faddl
and
xchg
cmpsl
and
sub
jmp
aas
pusha
mov
cmp
lea
rorb
fstpl
inc
fs
jae
cs
mov
mov
daa
sahf
rolb
jmp
int3
call
fwait
jo
inc
pop
cli
inc
xor
lcall
push
loope
push
xchg
mov
adc
dec
rcrl
out
iret
sub
ret
pop
mov
rcrb
scas
inc
shrb
adc
mov
add
cmp
jle
jns
cld
cmp
xchg
sti
shll
or
loopne
out
aaa
insl
sbb
std
cmpsl
inc
dec
push
imul
mov
cmp
mov
mov
mov
popf
movsl
fstpl
push
shr
jbe
dec
or
and
adc
xor
hlt
xor
iret
xchg
xchg
xorl
mov
adc
rcrl
jle
adc
fwait
push
sahf
adc
mov
sbb
test
movsl
std
pop
ficomps
add
fadd
roll
push
les
dec
leave
cli
sub
jg
mov
test
adc
cli
roll
xor
adc
mov
clc
mov
or
imull
popf
bnd
popa
lock
cmp
out
dec
out
push
xor
mov
loopne
test
sub
mov
push
mov
sub
mov
mov
ret
xor
add
scas
push
mov
mov
sbb
into
mov
dec
xlat
fildll
and
inc
call
and
insl
stos
pushf
inc
mov
shl
je
stc
cmp
lds
mov
loope
inc
jae
out
adc
cmpsl
in
stc
shll
repnz
sbb
xor
mov
repz
pop
packuswb
cld
popa
mov
xchg
mov
fadd
shr
inc
mov
dec
dec
xor
sbb
hlt
xor
rorl
push
adc
push
repnz
inc
or
cmp
inc
xchg
adc
test
jp
out
mov
out
scas
jmp
cmp
lcall
jae
iret
xchg
sub
push
mov
gs
fadds
xchg
in
mov
dec
cli
imull
ljmp
or
nop
or
fisubrs
lcall
bnd
mov
mov
jp
lret
sti
lahf
inc
mov
ficomps
imul
iret
pop
push
fcomps
pop
enter
xor
adc
imul
ds
imull
pushf
jmp
fidivs
jl
test
mov
insb
mov
adc
mov
pop
dec
dec
inc
xor
mov
ja
lds
pop
xchg
sub
arpl
cmp
fidivs
lcall
sbb
mov
and
shll
jp
bound
lret
pop
gs
sti
cmp
xchg
cmpl
sbb
adc
adc
cmp
jg
and
mov
call
pusha
jl
cmp
and
stc
andb
test
mov
add
mov
ret
mov
add
call
sbb
jae
push
test
push
jge
inc
mov
xor
inc
cmp
and
out
fisttpl
xchg
aaa
and
popa
addl
fcomip
cli
nop
and
push
hlt
cmp
sub
mov
test
arpl
sbb
nop
jg
popf
sbb
shll
or
xchg
cld
inc
popf
add
lcall
mov
mov
cmp
xor
insl
lods
jae
push
pop
sub
fdivrs
cmp
dec
mov
stc
adc
adc
mov
or
mov
inc
ljmp
sar
sahf
std
mov
pop
and
mov
sbb
lods
negb
push
pop
repnz
xchg
mov
jge
pusha
setns
ret
rcr
mov
mov
pop
pop
adc
push
scas
lret
cmp
cmp
dec
push
aaa
jb
fldenv
and
mov
sub
inc
mov
lods
push
jae
mov
and
or
pop
mov
xchg
adc
sub
cmp
aam
jmp
stos
add
leave
mov
push
popa
mull
or
jge
add
and
xchg
pop
int
mov
int
ficoml
and
mov
pop
dec
mov
or
fldl
inc
test
inc
lcall
imul
jmp
in
mov
cmp
xlat
or
push
test
mov
mov
or
and
repz
addr16
jmp
scas
push
adc
mov
dec
cmpl
add
jmp
mov
fldl
jb
mov
adc
jb
sbb
test
cmc
out
xchg
sub
jns
and
daa
pop
popf
dec
mov
sahf
fistps
ljmp
pop
or
loope
loop
shll
sarl
mov
lods
sbb
jmp
mov
lds
and
cli
dec
testl
pop
ds
sub
sub
jl
mov
jne
mov
xor
xor
pop
loope
jb
xor
ret
add
loope
push
ljmp
dec
jnp
push
ror
and
dec
mov
ficoml
and
add
pand
mov
movsb
adc
jno
push
test
inc
and
mov
ja
sub
mov
scas
imul
or
call
psubusw
inc
dec
lock
jle
pusha
rorl
add
aas
vmwrite
add
orl
repz
dec
aaa
lret
movsl
mov
sub
push
ret
iret
ds
jecxz
mov
ret
lcall
mov
ja
mov
xchg
inc
dec
fisubs
xchg
mov
popa
outsl
pop
out
jnp
adc
orl
sbb
sbb
mov
imul
pop
or
cwtl
enter
pop
sbb
roll
hlt
xchg
xor
and
sub
filds
cmp
enter
rorl
stc
outsl
ja
jnp
test
mov
cmp
bswap
dec
lea
fwait
test
jl
ljmp
mov
jle
out
mov
mov
cwtl
mov
out
cmpsl
imul
imul
jno
movsb
scas
sub
cli
jecxz
aad
xor
sub
add
xchg
mov
lret
inc
fwait
mov
xor
lret
xor
pop
and
movsb
sbb
push
sub
push
aad
or
fsubr
test
int3
sub
push
loope
sti
out
mov
dec
jp
pop
bound
add
andb
xchg
mov
js
aaa
or
cmp
and
mov
sub
mov
stos
jmp
push
fbstp
out
rcll
inc
fcmovb
push
shlb
add
adc
ds
jno
push
sarl
shll
pop
lahf
es
clc
pop
les
vmptrld
add
adc
inc
inc
stos
push
rclb
xchg
sti
jnp
xchg
jge
sbb
adc
push
push
sub
inc
out
fcomps
aaa
cmp
push
xchg
cmp
sbb
cmp
lock
jl
adc
cmp
loope
add
out
cld
add
mov
dec
sbb
cmp
mov
dec
adc
stc
sub
cmpsb
mov
dec
adc
jp
xchg
cli
ja
fstp
mov
push
xlat
loopne
dec
fcoml
mov
inc
mov
jno
and
ret
mov
sub
icebp
dec
out
add
nop
rcl
fsubs
repnz
imul
jle
sahf
inc
mov
cwtl
stos
mov
sbb
jp
rcr
jecxz
and
lods
pusha
ds
or
mov
aam
scas
outsb
xchg
pusha
subl
cmp
push
dec
mov
xor
lock
push
shll
push
push
xor
je
push
mov
mov
and
pop
xchg
xchg
mov
mov
jl
xorb
gs
cld
dec
xor
sbb
jle
cwtl
rclw
cmpsl
cmp
xchg
and
mov
and
div
fisubl
cltd
xchg
cli
repz
push
and
add
mov
repz
pop
loopne
aas
test
and
movsl
jno
fbld
and
clc
cwtl
jl
dec
inc
lods
sub
ret
fwait
aam
jne
pop
mov
out
addr16
xor
and
or
dec
fisubs
test
sbb
movswl
cmc
mov
out
pop
pushf
xchg
mov
sub
psubusb
pop
pop
push
into
cmp
test
cld
popa
daa
inc
nop
xchg
test
inc
mov
ffree
pop
insl
add
ds
cmp
jle
inc
sbb
add
mov
mov
mov
popf
je
daa
sbb
lret
int
mov
pop
sbb
xchg
add
fdivr
mov
adc
sbb
mov
shll
pop
add
imul
mov
mov
out
cli
stc
xchg
insb
in
pop
sbb
mov
scas
mov
jl
push
mov
pop
push
popf
shll
jns
mov
out
fcoms
sub
in
and
jb
jg
aas
and
cmpsl
imul
sbb
fisttps
mov
push
in
faddl
inc
shrl
inc
push
xchg
mov
or
mov
orb
pop
push
mov
repz
inc
adc
mov
jmp
pop
js
mov
lahf
stos
sub
and
sub
rcrb
loop
ret
push
jb
mov
inc
mov
sub
fdivs
fisttpl
outsb
jmp
lock
outsl
pop
cmp
ds
mov
push
stos
xor
cmc
pop
or
sarw
nop
or
daa
inc
push
in
xchg
sub
adcl
lcall
xchg
or
xlat
mov
mov
adc
leave
xchg
fidivrs
aas
jbe
cmp
fsub
xor
es
push
into
mov
xchg
or
movups
popa
or
jmp
pop
adc
scas
sub
test
mov
sbb
cwtl
push
and
int3
cmp
pop
jmp
cmp
fisubrl
fisubl
fwait
sub
dec
xchg
push
inc
pusha
mov
push
add
cmp
loop
or
pop
sbb
out
cmp
xchg
lock
mov
gs
in
test
sbb
mov
int3
out
xor
dec
out
sub
jecxz
add
aas
imul
pushf
add
fdivl
xchg
pop
push
pushf
mov
pop
lods
pop
sub
mov
rolb
pop
ret
fsubrl
jmp
repz
fbstp
inc
pop
push
adc
inc
mov
shlb
rorl
xchg
sub
shl
ljmp
mov
bound
cmp
lods
pop
mov
mov
xor
or
jmp
cmpsl
data16
sbbl
iret
push
das
push
dec
inc
ret
lahf
mov
lods
aas
lds
decb
stc
sar
mov
js
jno
int3
in
dec
test
cld
inc
dec
dec
dec
hlt
and
push
inc
dec
out
cli
inc
inc
mov
xchg
add
xor
or
fidivrs
mov
jge
insl
inc
mov
negl
inc
add
dec
aad
lods
sub
cmpsb
lahf
mov
sti
out
int3
call
rcl
xchg
fwait
dec
addl
lock
mov
push
and
cwtl
nop
xchg
popl
sub
adcl
test
sbb
in
sbb
pop
jecxz
loopne
sub
gs
cmp
cmp
and
out
shrl
fsubp
ss
inc
ss
or
add
jle
cmpsl
sub
int3
sub
or
mov
adc
int3
out
cmp
push
jbe
das
push
mov
popf
cwtl
adc
repnz
add
loopne
icebp
xchg
jg
test
pop
jno
dec
mov
jecxz
sub
xchg
lock
mov
shrl
enter
push
pop
adc
pop
mov
mov
int
xchg
std
mov
jle
xchg
add
lret
jmp
fs
cwtl
icebp
adc
enter
cmp
std
push
int
cmp
gs
jmp
aaa
push
mov
and
xchg
repnz
xlat
scas
scas
sub
repz
dec
and
clc
push
lock
ja
inc
push
xchg
jmp
lock
imul
gs
shrb
orb
dec
cwtl
js
pop
fisttpll
cld
stc
aam
cmp
jno
icebp
xor
mov
cli
pushf
lea
inc
rcr
sub
push
sbb
mov
sub
push
sub
push
insb
or
shll
in
adc
adc
inc
xchg
mov
minps
mov
scas
sub
pushf
mov
jmp
or
je
into
inc
push
fiaddl
jge
outsb
adc
int
and
test
pop
adcb
imul
inc
ret
sbb
movsb
movsb
out
scas
fmulp
into
add
cwtl
sub
mov
sahf
sbb
jle
cwtl
mov
pop
std
mov
jp
fcmovnbe
daa
and
test
xchg
fwait
jnp
in
loopne
stos
lcall
or
in
pop
jbe
add
sti
mov
mov
ret
sub
pop
loope
lret
fmuls
adc
mov
sahf
dec
aad
mov
out
je
jp
cmp
cmc
mov
sbb
cwtl
sbb
sub
faddl
movsb
andl
cmc
mov
sti
pop
dec
enter
aaa
mov
popa
pop
fwait
sub
jo
cmp
jbe
std
jne
xorb
in
ficomps
es
in
daa
sub
sbb
jnp
lods
stos
xchg
dec
es
xlat
das
adc
lcall
ds
lret
out
xor
pop
pop
and
sti
mov
and
fistps
push
pop
fbld
stos
out
pop
fidivrl
and
dec
dec
xlat
js
fs
push
mov
sbb
xor
adc
xlat
pusha
ja
pop
rcr
dec
push
mov
sub
pop
or
add
sbb
aad
push
rcll
loopne
cmovne
add
into
xchg
mov
pop
imul
ds
cmc
in
mov
dec
test
add
arpl
rclb
clc
scas
sbb
sti
bound
adc
add
shrb
outsb
aad
mov
xchg
pop
mov
inc
cli
loop
es
or
add
aad
push
bound
push
adc
pop
outsl
in
inc
out
dec
push
leave
inc
mov
pop
arpl
fwait
push
add
into
mov
popf
xor
imul
xchg
cli
outsb
lds
loopne
jns
js
repnz
sbb
ffreep
rorl
sbb
mov
sbb
pop
pushf
sti
je
jne
in
lcall
call
outsl
call
jg
xor
clc
cli
dec
clc
pop
into
stos
addl
clc
xlat
xchg
inc
movsl
sbb
sbb
enter
xor
rep
movsl
pop
or
pop
scas
sub
xchg
inc
scas
arpl
cmp
xchg
push
or
mov
shrl
scas
and
mov
xlat
add
or
jecxz
stos
fsubrs
mov
inc
xchg
inc
shrb
and
lret
je
fsubrs
xchg
bnd
pop
adc
xlat
xor
aas
in
xchg
pop
movsb
and
cmp
test
inc
cltd
jecxz
dec
ret
pop
in
jno
imul
sub
dec
inc
in
fbld
outsb
lock
jb
push
js
in
insb
jle
cwtl
adc
orb
mov
icebp
imul
jp
aad
push
ret
xor
or
cmp
add
xor
decl
fistps
jae
pop
in
pop
inc
push
lcall
add
mov
test
inc
nop
pop
ljmp
arpl
int
sbb
fld
decb
cmpsl
sub
cmpsl
pop
sub
mov
call
int
inc
jp
pop
push
rep
push
mov
mov
mov
int
mov
test
inc
cmpsl
cmove
mov
sbb
xor
mov
fs
mov
xchg
cmp
lcall
enter
stc
sbb
sbb
repz
lea
cld
adc
arpl
out
mov
dec
insb
mov
jp
xchg
mov
cmp
inc
mov
mov
pop
adc
loope
sub
pop
leave
test
inc
lret
mov
fnstsw
mov
filds
rol
and
adc
pushf
mov
movsb
and
xor
sub
or
inc
movsl
mov
lcall
imul
lods
rcrb
shrb
in
adc
pop
ja
movsl
push
xchg
testl
int
inc
int
cmp
mov
iret
xchg
insl
ret
mov
fwait
out
push
push
outsb
pop
dec
stos
push
outsl
jg
xchg
add
adc
inc
pop
idiv
or
push
fisubrl
sbb
or
inc
adc
cmpsl
jbe
stos
add
ret
call
sarl
and
sahf
lods
test
pop
fidivrl
inc
cmp
stc
movsl
aaa
jbe
stc
aaa
dec
aam
push
imul
jo
add
fwait
xchg
insw
pusha
mov
xor
mov
sbb
rcrl
adc
lret
lret
jo
or
add
lds
lret
daa
movsl
pop
sbb
mov
insb
mov
lret
andb
fs
mov
pop
mov
jo
fnsave
loope
test
xchg
mov
popa
scas
cmp
dec
sarl
adc
xor
adc
scas
xor
loop
inc
push
pop
les
pop
into
loop
bound
popf
cmp
fstpl
push
roll
rorb
aad
pop
shrb
dec
xchg
out
enter
inc
push
mov
dec
jbe
mov
inc
xchg
es
inc
sbb
xchg
popa
ret
push
xchg
out
adc
outsb
movsb
add
loop
outsb
mov
xchg
sbb
xor
adc
inc
lret
bound
popa
ds
mov
cmp
jbe
inc
add
lods
ljmp
pop
daa
and
xlat
pop
outsl
int
xchg
xchg
pop
shrl
inc
in
mov
je
test
cmc
iret
adcl
jno
test
repnz
xchg
mov
sub
mov
xor
scas
scas
testb
jbe
cmp
or
ds
nop
repnz
insl
xchg
pop
mov
push
imul
mov
or
cli
xorb
lds
xchg
xor
adc
inc
mov
add
std
std
aam
add
std
xchg
pop
lret
push
enter
lcall
mov
scas
jae
dec
movsb
outsl
lret
or
js
mov
pop
jge
pop
addl
mov
stos
cmc
sub
mov
data16
in
push
data16
jb
jl
sub
sbb
xchg
and
add
and
fistpll
dec
push
adc
fimuls
ret
pop
jp
push
mov
jns
jmp
shlb
loope
pop
lods
add
arpl
flds
push
pop
xor
jl
xor
fmuls
jnp
mov
idivb
rcrl
push
ror
hlt
outsb
xor
sbb
dec
cmp
fdiv
mov
das
push
mov
jae
fmull
push
pushf
std
mov
iret
dec
cmp
mov
jl
aad
xor
push
jae
lret
loop
xor
jo
cmp
sub
or
fbld
fistpll
pop
push
notb
popf
sbb
shrb
in
or
inc
fadds
or
pop
negb
mov
mov
lcall
popa
arpl
outsb
xchg
xor
js
leave
adc
jnp
cwtl
mov
push
fldl
in
pop
or
or
push
inc
jne
mov
adc
and
jns
mov
cld
sti
fistpl
add
sti
cltd
mov
hlt
in
xchg
xorl
insb
shrb
fcmovu
pop
jae
aam
jno
data16
sub
jne,pn
mov
in
into
mov
hlt
xchg
pop
mov
mov
dec
pop
lock
mov
cmc
sub
dec
xlat
xchg
add
lcall
nop
sahf
pusha
subl
idivb
fdivrp
add
pop
clc
pop
xchg
iret
mov
fincstp
jo
sub
mov
iret
loope
jge
dec
inc
xor
ret
sbb
sahf
pop
outsl
sti
aad
bound
pushf
roll
dec
add
scas
pop
lret
mov
fcoml
fiadds
dec
cmp
mov
call
cli
push
push
lock
icebp
xchg
inc
pop
lods
mov
sbb
inc
inc
mov
fldenv
bound
jecxz
pop
cltd
in
cmpl
push
ret
movl
and
aas
lahf
fists
fwait
jae
outsb
imul
arpl
or
inc
xchg
xor
add
mov
stos
add
push
scas
sbb
iret
aaa
into
sub
adc
pusha
jmp
mov
mov
mov
or
sbb
pop
xchg
mov
cmpsb
jp
orb
loopne
mov
jp
stos
repnz
add
into
lret
push
mov
idivl
add
into
and
xchg
and
dec
add
test
jmp
cld
xchg
mov
jg
fcmovu
scas
mov
inc
pop
jbe
pop
jno
adc
xchg
mov
pop
pusha
loope
or
and
cld
sti
adc
loopne
push
test
push
or
insl
das
pop
or
hlt
pop
test
icebp
scas
outsl
outsb
loopne
loopne
outsb
movsl
and
or
inc
push
push
jae
inc
incl
and
mov
shrl
divb
sahf
ret
adc
mov
pushf
jle
or
call
pop
mov
das
popf
aam
pop
and
and
and
add
fstpl
pop
pushf
fwait
jg
loopne
push
sbb
cmp
fimull
ljmp
orl
cmp
sub
scas
xchg
jg
push
mov
shrl
xchg
sbb
clc
jg
or
sbb
test
rcrl
shlb
insl
sbb
mov
fisttpl
adc
or
sub
jae
imul
xor
sarl
mov
cmpsb
cmp
sub
outsb
jb
es
daa
hlt
mov
dec
cmp
add
popf
mov
fnsave
xchg
ss
out
test
or
leave
adc
fistps
and
fcmovnu
enter
scas
test
pusha
push
push
push
xchg
into
lds
inc
and
adc
push
xchg
or
imul
fildll
in
xor
bound
ds
ljmp
cltd
dec
jnp
cmp
hlt
fdivrs
aam
and
pop
push
mov
lods
push
push
pop
cmp
outsl
pop
clc
ficoms
push
ss
mov
push
cwtl
mov
and
adc
dec
or
inc
fmuls
cmp
sbb
lock
inc
cmpl
cltd
push
mov
cmp
sbb
movb
adc
pop
je
sub
jno
cmp
repnz
rol
adc
xchg
cmpsb
mov
inc
jne
cmp
out
mov
fistpl
xor
cltd
imul
cmpb
xchg
int
ss
xor
add
jbe
fisubrl
ror
fcom
or
and
lods
mov
fninit
mov
dec
rolb
xchg
ljmp
cmpsb
or
int
jge
fsubrs
in
out
mov
fstpt
mov
xchg
push
stc
aad
lods
push
add
mov
push
mov
fcompl
movsb
iret
lock
sbb
aaa
rcrl
loop
insl
cld
test
mov
scas
xchg
fidivrl
out
jle
jns
pusha
pop
push
test
sub
push
add
mov
adc
gs
mov
xchg
stc
mov
pop
jle
add
and
lods
cmp
jno
sbb
or
out
sbb
roll
jmp
in
xchg
and
xor
dec
out
pop
les
gs
push
pop
mov
jle
push
mov
jne
mov
or
add
out
inc
shll
jmp
aas
loope
in
fwait
aad
mov
dec
mov
inc
jle
rcrl
pop
sarl
mov
scas
daa
stos
add
sub
jmp
push
and
bound
pop
pop
adc
fwait
jmp
push
sarl
or
sbb
lock
scas
inc
xchg
xlat
imul
xor
faddl
mov
scas
add
std
mov
jo
inc
data16
insl
sbb
mov
push
mov
test
loope
jb
dec
sub
ror
mov
mov
fidivrl
ljmp
sub
bound
cli
int3
int
mov
jno
out
lods
stos
fs
js
lcall
sbbb
cmp
adc
insb
sahf
into
pop
ljmp
push
xor
pop
mov
mov
shrb
rorb
push
repz
inc
outsb
cmpb
fiadds
ljmp
sbb
adc
xchg
inc
js
mov
sub
sahf
dec
fucomi
pop
jb
fsubrs
pushf
mov
bnd
adc
cmc
dec
jo
mov
repz
mov
mov
test
popa
pop
push
sub
cmp
fwait
fs
lods
out
push
lcall
pop
test
add
dec
mov
cmpsl
mov
leave
or
jne
iret
xchg
jmp
lds
push
fisubs
adc
dec
dec
das
ret
xor
xor
lcall
jns
movsl
inc
and
push
or
loopne
in
scas
imul
mov
xchg
push
lret
cmp
fldenv
out
mov
mov
mov
hlt
mov
aad
mov
repz
sub
push
sahf
fsubs
lds
jo
xchg
ja
and
rorb
stos
adc
js
push
movsb
rorb
pop
fsubrs
push
xchg
lods
sub
mov
enter
xorl
test
mov
scas
hlt
lds
pop
movsl
xor
enter
lds
mov
dec
jno
mov
or
inc
call
push
pop
mov
test
hlt
movsl
pop
fstpl
xchg
mov
push
iret
clc
scas
or
sarl
add
and
movsl
sub
mov
dec
data16
add
mov
xchg
mull
bound
dec
xor
cwtl
mov
hlt
scas
aam
insb
out
pop
aas
shll
into
adc
push
inc
mov
insl
push
aaa
cs
dec
pop
insl
sbb
xchg
push
mov
popf
mov
pop
pop
mov
xor
mov
mov
lea
fcom
sahf
or
rcl
gs
cmp
xchg
pop
pop
cmp
push
test
sbbl
pushf
add
cmp
mov
mov
xor
shrl
movsb
js
int3
xor
lret
outsl
jne
popa
jae
scas
mov
cmp
loope
ss
loope
cmpsb
push
into
pop
cmp
fwait
cmp
inc
push
sbb
pop
adc
js
dec
mov
sti
xchg
lahf
in
scas
rcll
lret
adc
movsl
jns
cld
or
psrld
jp
lods
jns
push
pop
stc
push
push
fisttps
mov
les
lret
push
rclb
mov
shl
mov
dec
inc
jmp
and
adc
dec
cwtl
mov
or
add
sub
add
pop
lods
adc
fldl
dec
jl
mov
fldl2t
mov
nop
cltd
inc
orb
loop
mov
movsb
jbe
xor
movl
push
dec
pop
push
dec
test
ja
jl
mov
imul
sarb
mov
mov
fmul
mov
idiv
jp
lock
push
mov
movsl
cli
jge
int3
xchg
loop
inc
xchg
test
movsb
lods
imul
popf
repz
dec
clc
xor
adc
xchg
mov
mov
ss
test
mov
lods
bound
pop
out
mov
inc
mov
and
pop
cmp
inc
and
rolb
out
pushf
leave
sbb
sub
cmovns
call
jns
je
rcr
lods
pop
idivl
in
dec
fcmovnb
mov
xlat
jp
lcall
call
enter
lock
jg
mov
mov
push
pop
and
test
adc
repz
mov
mov
cmp
push
inc
mov
mov
cli
ja
fldl
rcr
add
aam
dec
dec
lret
push
in
add
insb
mov
dec
xchg
das
stos
xchg
cli
dec
push
rcrl
into
mov
xchg
iret
xor
es
enter
mov
aas
subb
and
mov
mov
push
inc
sub
mov
js
push
or
cmc
sbb
and
lcall
movsl
das
pushf
mov
mov
cmc
or
mov
cld
fwait
add
aas
lcall
and
adc
push
and
jg
push
jns
mov
cmp
add
cltd
push
dec
icebp
or
int
adc
mov
sub
incb
shlb
add
sbb
lret
mov
leave
sub
test
xchg
xor
stos
pop
imul
xchg
mov
dec
outsl
dec
jb
push
pusha
cmp
call
sub
push
xor
sti
fstl
xchg
add
add
movsb
dec
out
sbb
xor
rol
pop
xor
outsl
test
in
ds
adcl
pushf
cmp
insl
inc
pop
js
aas
jns
out
xorl
mov
xor
jns
inc
aam
push
push
push
mov
push
insl
or
inc
cmpsb
in
inc
jo
adc
mov
inc
mov
jecxz
mov
adc
xor
mov
add
movl
jno
dec
mov
fcoms
clc
adc
adc
xchg
imul
add
femms
int3
faddl
movsb
pop
adc
mov
ret
adc
iret
mov
mov
and
xor
fidivl
orb
and
insb
add
lahf
out
push
jmp
je
or
jae
xlat
imul
or
jae
cwtl
pop
or
sarl
and
aad
cltd
or
mov
jmp
sbb
ljmp
clc
dec
addl
fcomip
adc
andl
out
sbb
ja
into
mov
mov
and
sbb
movsb
sub
cmp
xchg
jb
xchg
aaa
push
dec
cmp
enter
mov
mov
sub
rclb
cmovae
pop
or
xchg
push
adc
push
mov
pop
aaa
and
repnz
aad
hlt
sbb
movsl
hlt
inc
imul
loop
mov
dec
leave
sub
sarb
sub
jno
xor
push
push
push
inc
aas
test
mov
rcrl
aaa
bound
in
repz
cmpsb
in
loopne
ja
cmp
out
in
dec
inc
invd
sub
iret
and
mov
cmp
mov
jg
xor
fcoms
push
sub
adcb
ss
mov
sbb
repnz
pop
imul
aas
fs
ret
and
and
das
xor
ss
stos
fisttpl
or
dec
pop
xor
outsb
repnz
push
jb
mov
dec
xor
push
jmp
rcl
add
sub
test
inc
cltd
pop
push
mov
push
lock
pop
cmp
xchg
stos
pushf
test
add
cmp
jo
shrb
adc
test
divl
cmp
dec
fbstp
movsl
cmp
test
es
adc
mov
lods
adc
and
test
mov
pushf
mov
mov
test
or
test
mov
scas
jl
imul
add
pop
lcall
outsl
mov
push
test
push
insl
jp
xchg
mov
lret
test
sbb
mov
inc
pop
shl
xchg
scas
push
sti
enter
aaa
xor
inc
dec
ret
inc
inc
jbe
cmp
mov
mov
push
add
mov
movsb
out
pushf
enter
push
dec
xchg
dec
cmc
insl
hlt
mov
cwtl
mov
jbe
das
add
testb
ret
mov
jnp
lds
push
sub
movb
pop
shlb
sbb
aaa
cmpsl
jg
popa
mov
int
outsb
xor
push
loopne
lea
stos
inc
sbb
dec
ret
sahf
shlb
push
cwtl
or
adc
in
enter
insb
add
push
sbb
sub
movsl
les
stc
imul
mov
inc
mov
roll
sbb
std
dec
cwtl
mov
test
je
jle
imul
gs
inc
stos
mov
pop
ret
dec
sub
pop
cmp
jo
ljmp
loop
into
add
dec
popf
nop
imull
jb
xchg
sbb
push
mov
scas
rclb
dec
loopne
push
push
sbb
xor
das
shrb
mov
movsl
call
xchg
or
inc
xor
fs
lret
fildl
mov
or
adc
scas
or
rcrb
lret
jle
fdivrl
int
cmpsl
mov
pushf
cmpsb
pop
lahf
xchg
outsl
push
adc
loope
nop
incb
push
cmpb
aam
repnz
add
cld
in
push
xor
xchg
sbb
stos
dec
add
mov
or
dec
mov
shll
inc
mov
dec
loope
jbe
cmp
inc
stos
loope
imul
xchg
in
push
xor
inc
enter
sbb
shl
ficomps
mov
icebp
je
movsl
xchg
dec
add
mov
pop
ja
mov
das
push
ds
fs
push
jg
jg
stos
sub
outsb
mov
jno
negl
dec
testl
jmp
loop
loopne
cmp
fxam
ja
xor
or
hlt
jle
loope
fwait
pop
pop
ret
out
fwait
or
mov
lock
and
xchg
in
stc
push
testl
ljmp
test
or
ljmp
fs
cmp
pop
and
cmp
nop
and
cmp
cli
jae
mov
jmp
mov
sbb
repz
xchg
cmp
lds
xchg
pop
jp
out
sub
test
and
movsl
add
sar
sahf
in
test
movsl
or
std
cmc
adc
test
sti
push
push
sub
out
push
mov
jno
jno
jle
in
testl
pop
mov
jo
mov
out
sub
adc
pop
pop
out
inc
das
push
add
or
jb
adc
inc
add
or
test
ja
dec
insb
jl
xchg
jmp
push
sub
push
adc
aad
mov
jmp
pop
imul
fs
scas
imul
xchg
iret
adc
in
fmuls
mov
outsl
cmp
push
lds
mov
xor
mov
dec
mov
adc
mov
push
pop
scas
repnz
push
push
xchg
dec
mov
mov
jno
pop
bound
push
add
int
call
pop
push
movsb
xchg
sub
add
mov
and
mov
lret
push
aam
test
cmp
je
mov
sti
std
pop
pushf
xchg
add
lcall
das
stos
addr16
movsb
rep
sbb
sub
adc
add
lret
mov
out
enter
rclb
cli
adcl
adcl
leave
int3
int3
test
lcall
xchg
add
sarl
xchg
negb
loopne
ja
gs
rcrb
add
inc
mov
out
pop
add
adc
les
mov
decl
sbb
imul
ret
or
and
notb
enter
insl
in
cmp
xor
repnz
mov
scas
icebp
mov
in
repnz
or
int3
fwait
popf
jmp
jo
inc
or
and
rcll
dec
cmp
aas
stos
das
scas
stc
insb
mov
adc
inc
add
ja
lods
arpl
subb
int
pop
test
sbb
lret
push
cmpsl
outsl
xchg
xchg
call
testb
mov
fcoms
adc
cmp
or
rcll
and
pop
jno
movb
jg
jne
inc
pushf
loopne
lock
cli
nop
insb
pushf
insb
jl
jge
add
jmp
pop
orl
loope
movsl
rcl
fwait
repz
push
pop
imul
cmpl
cmpl
sti
xor
sbb
lahf
lds
push
mov
dec
mov
test
add
jbe
es
dec
icebp
xchg
rorl
scas
pop
push
test
mov
adc
js
xchg
nop
aas
xchg
mov
sahf
nop
pop
mov
sub
xor
xchg
call
adc
lea
addr16
mov
sbb
inc
sbb
in
outsl
lret
dec
and
cmp
iret
aam
fmul
in
dec
das
ret
adc
mov
fnstcw
xchg
dec
sbbl
rolb
data16
les
xchg
jae
adc
clc
in
cmpl
pop
or
loopne
movsb
xor
jle
insl
mov
arpl
in
imul
lods
out
arpl
jo
push
dec
jnp
jp
and
ljmp
xor
mov
push
leave
fildll
shl
and
jl
in
rcl
xchg
mov
pop
or
mov
daa
scas
loope
inc
out
jmp
ja
lds
sbb
push
push
addr16
adc
lret
dec
rclb
movsb
mov
lods
push
rcrl
mov
enter
adc
xchg
mov
incb
dec
sbb
add
popf
in
inc
inc
mov
sbb
arpl
mov
out
out
push
int3
pop
sahf
cmpb
adc
push
or
leave
int
push
xor
sarb
iret
ja
sbbb
jg
jno
ss
xor
adc
lcall
xor
dec
inc
out
out
lret
push
rolb
in
xlat
sub
fwait
push
repz
inc
jb
push
sar
lahf
je
loope
pop
lea
sbb
ret
lods
xor
inc
xor
mov
xor
int3
push
arpl
cmpsb
aas
adc
cld
xor
rol
pop
cmp
insl
cmp
andb
js
sub
mov
xorl
mov
push
mov
xlat
pop
xchg
pop
popa
inc
call
add
outsl
mov
or
in
xchg
push
aaa
outsl
rolb
popa
xchg
adc
or
sbb
xor
jae
mov
std
jle
and
add
mov
mov
cmpsl
divl
cmp
adc
cmc
cmp
inc
daa
jb
nop
jg
or
rcr
mov
xchg
sahf
lahf
inc
cmc
cmp
test
fdivs
dec
dec
icebp
mov
icebp
dec
lcall
mov
jl
arpl
jno
popa
sarl
cwtl
lcall
mov
mov
mov
push
adc
fists
adc
rcrl
fmulp
mov
in
jg
in
sbb
inc
mov
repz
bound
xor
into
ret
xlat
jmp
push
fwait
sahf
sub
xchg
hlt
outsl
cmovae
cmp
adc
or
fnstenv
dec
inc
lods
adc
int3
mov
add
adcb
sti
aas
dec
mov
cwtl
out
pop
stc
cs
adc
in
cmpb
adc
fldt
pop
fucomi
pop
fs
push
lret
popa
dec
adc
cmp
rcl
sbb
test
fsubl
outsb
aaa
push
decl
push
mov
dec
mov
imul
sti
xlat
pop
ja
repz
or
sub
mov
pop
or
mov
add
mov
pusha
adc
mov
pushf
repnz
xlat
inc
fstps
sub
gs
pusha
jle
mov
int
mov
mov
pop
insb
fcompp
loope
testb
cli
mov
lahf
inc
pushf
and
ror
xor
aas
std
jle
mov
cwtl
bound
idivb
or
stos
xchg
lcall
sub
roll
js
mov
pop
xchg
inc
adc
mulb
xchg
insb
or
pop
pop
ret
loope
daa
fisubrl
rcl
xchg
lahf
and
loope
das
jo
outsl
gs
jne
shll
clc
stos
scas
xorb
call
push
sbb
fldenv
movl
push
lret
sbb
sbb
dec
enter
loopne
test
out
mov
sub
sarb
mov
xor
push
hlt
jne
stos
fcmovbe
inc
enter
dec
sub
push
pop
cwtl
and
insl
mov
or
mov
adc
xor
cwtl
inc
add
out
mov
ja
adc
jo
pop
cmpsb
push
lcall
lcall
sub
push
push
mov
mov
mov
pop
test
xchg
add
clc
xchg
pop
jbe
or
stc
insb
stc
mov
xchg
push
inc
addb
inc
xchg
daa
pop
fst
test
pop
ja
clc
ja
jne
cltd
setno
mov
testb
test
fsubrl
xchg
arpl
push
or
daa
imul
fwait
cli
cs
pop
mov
inc
mov
sub
cld
jmp
jno
cmp
lret
call
xor
ret
in
add
cmp
inc
incl
mov
insb
dec
js
stos
cs
gs
fisubs
mov
ds
jbe
fldt
stos
sbb
sub
sub
les
push
jo
mov
add
inc
cmp
cmp
les
rcll
and
insb
out
inc
jo
popa
outsl
dec
push
psrad
push
incl
stos
test
inc
icebp
test
and
and
jmp
popa
push
sub
pop
clc
or
sub
andl
sub
int3
das
icebp
fnsave
jbe
add
fisubl
fbstp
xchg
cmp
arpl
scas
icebp
ret
sbb
fdivs
outsl
jne
mov
outsl
mov
xchg
cmp
mov
test
xor
addb
push
mov
jl
jbe
iret
xchg
xchg
arpl
mov
arpl
xor
lods
jbe
inc
stos
pop
or
out
lret
cmc
in
popl
fsubs
pop
xchg
xorb
pop
push
pop
cmp
mov
roll
iret
mov
dec
pop
pusha
mov
fmull
sub
fadds
dec
mov
lds
dec
cwtl
imul
leave
xchg
adc
xor
ficomps
cwtl
xlat
jle
push
sub
out
cmpsl
pushf
add
mov
and
sbb
fisttps
shll
xchg
repz
insl
dec
pop
in
cmp
faddl
andb
addr16
fsubrl
pop
pop
mov
sub
cmp
push
shll
cmpsl
push
pop
jbe
cmp
out
js
pop
rcrb
add
inc
movsl
push
les
jnp
mov
loope
cmp
push
mov
and
bound
cmpsl
add
outsl
inc
ret
ret
xchg
iret
out
imul
dec
aad
bound
emms
stos
lea
xchg
repnz
out
and
inc
mov
jno
pop
xlat
push
shll
jae
lahf
lret
adcb
sub
icebp
divps
jecxz
sti
mov
dec
movsl
ds
flds
and
mov
jp
cli
bnd
mov
mov
jb
stos
outsb
daa
or
testb
and
ret
gs
jge
or
jmp
cmp
pop
clc
push
xchg
adc
mov
cmp
mov
insb
fists
hlt
mov
or
xchg
outsl
stc
aaa
and
dec
pop
cli
popf
pop
xchg
cmp
lret
aaa
adc
into
in
jmp
leave
sbb
push
nop
jne
mov
mov
xchg
mov
pop
adc
cs
or
mov
inc
pushf
dec
and
shr
dec
arpl
add
fstps
or
cli
mov
ret
sti
or
sub
push
in
fwait
pop
xlat
push
pop
dec
and
mov
sub
sbb
cmp
pushf
sub
jecxz
fnstcw
sub
inc
int3
stos
mov
pop
lahf
imul
push
mov
add
mov
mov
push
aaa
jne
pop
jl
in
push
push
mov
cmpb
mov
xchg
mov
test
andl
leave
add
aad
mov
push
leave
xlat
sahf
push
sub
nop
add
jl
push
sbb
add
ja
pop
fcompl
mov
ss
push
inc
mov
inc
pushf
ljmp
xor
add
cmp
daa
cld
mov
jmp
imul
xchg
pop
mov
outsb
push
test
lods
push
jno
lods
in
test
xchg
mov
lds
stos
push
or
les
xchg
or
cmpsl
aaa
mov
es
mov
jg
sub
fisttps
nop
inc
cmpsb
aaa
push
xchg
stos
sbb
fdiv
in
adc
adc
bound
sbb
je
cltd
sti
dec
std
sbb
and
test
jmp
mov
loopne
xor
mov
scas
mov
lret
fcoms
sbb
xor
fdivrl
std
loope
dec
fstpt
inc
movsl
xor
cmp
fimuls
push
cmpsl
inc
sub
mov
mov
push
leave
xchg
jg
into
inc
rcl
adc
mov
mov
and
ljmp
in
hlt
mov
cwtl
lock
push
pop
sub
sub
repnz
jmp
and
push
pop
mov
idivl
dec
mov
mov
nop
das
xor
sub
xor
int
jg
and
xchg
jge
jle
adc
xchg
xlat
test
addl
imul
push
dec
outsb
dec
fadds
xor
scas
loop
mov
pushf
adc
adc
insb
jae
or
negb
xor
xlat
and
inc
fwait
jle
xor
xchg
xchg
repz
xchg
sub
inc
leavew
nop
fisubrs
push
mov
xchg
sbb
push
xchg
repnz
or
lret
cmpsl
aas
or
push
mov
push
int3
sub
jle
loop
aas
lods
data16
fs
insb
imul
ljmp
add
cmp
test
sbb
pop
mov
int
xor
popf
out
std
sti
leave
push
jno
jle
and
out
out
or
push
mov
sti
add
sub
out
jmp
jecxz
stc
dec
int3
cmpsl
fwait
xor
jb
fnstcw
push
stc
pop
out
cmp
mov
sub
clc
jge
jno
xor
fninit
jl
xor
cmc
leave
inc
cmp
push
ljmp
add
lea
fwait
push
push
and
and
add
stc
lods
mov
sbb
in
and
mov
outsl
xchg
les
movsb
pop
in
ds
add
and
adc
xchg
inc
cmp
xchg
adc
mov
push
mov
and
popf
xorb
movsb
mov
mov
pop
sub
test
or
mov
clc
hlt
cmpb
dec
loop
fidivrs
push
out
dec
stc
enter
inc
inc
and
mov
sahf
pushf
rcrl
xlat
sar
scas
lods
cli
xor
adc
jns
mov
cmp
loope
or
dec
dec
shll
mov
dec
hlt
lods
icebp
ficoms
repnz
sub
call
or
jp
xchg
inc
out
lock
test
cmpsl
sub
cmp
jbe
adc
mov
scas
popf
mov
fimuls
pop
push
jae
mov
xchg
pop
push
movl
cli
ret
add
fimull
add
sub
sahf
pop
je
jae
cmp
jge
arpl
push
or
cmp
xchg
fidivrl
idiv
cmpsb
adc
in
pop
lea
inc
loop
sub
push
sti
xchg
fwait
sti
add
out
xor
dec
enter
hlt
fstpl
mov
lds
or
xchg
sbb
lcall
add
sub
pop
cmpsb
ror
mov
rclb
mov
imul
mov
popa
dec
jmp
sahf
nop
cmpsb
dec
or
mov
mov
mov
jne
lods
push
cmovl
test
stc
out
sbb
pushf
mov
hlt
and
test
push
cmc
add
push
mov
dec
ds
adc
imul
insb
pop
cmp
cmpsb
inc
rcrb
sub
repz
xor
in
and
flds
cmpsb
sub
and
sbb
cmp
sub
out
pop
mov
add
sbb
scas
bound
popf
pop
sbb
pusha
ss
ret
mov
rcl
inc
lahf
cltd
imul
add
or
fdivp
mov
test
ss
insl
pusha
cli
fisubrs
out
test
mov
int3
dec
jmp
test
pop
mulb
ljmp
xchg
cwtl
pop
mov
add
stos
stc
cmp
shll
stos
data16
pop
cmp
and
mov
ds
popf
enter
add
movsl
cli
fmuls
aas
insb
lds
push
sub
mov
and
adc
push
dec
sub
mov
fstpl
xchg
jl
adc
popa
cmp
xchg
loope
shlb
dec
or
inc
mov
fisubl
idivb
mov
inc
adcl
and
lds
add
out
dec
cmp
mov
dec
cmpl
psrlw
push
lods
ds
sti
and
shr
in
lock
mov
pop
call
test
bound
cmpsl
ret
fcoms
out
cltd
insl
or
mov
nop
inc
sub
mov
mov
popf
push
cmp
mov
jb
and
bound
pop
movsl
pop
xor
movsb
movsl
sub
jo
jne
das
cmc
dec
xor
push
mov
inc
pop
mov
adc
and
sbb
cmp
in
shl
lahf
imul
mov
fs
loopne
xchg
mov
es
mov
outsb
pop
fmuls
lds
xlat
in
mov
sbb
fs
inc
pop
pop
cmp
enterw
sti
cmp
inc
push
sub
test
mov
loopne
or
mov
ss
dec
sbb
jnp
add
mov
mov
sub
dec
cmp
pop
and
add
decl
cmc
int
cmp
dec
je
sarb
xor
mov
int3
mov
push
pushf
scas
cwtl
ror
adc
iret
adc
rorl
inc
mov
mov
xchg
sub
in
jns
add
sbb
sub
xor
int
mov
or
adc
mov
sahf
inc
cmc
hlt
lret
into
and
jp
pop
leave
pop
in
addr16
mov
jno
leave
sub
jae
push
mov
dec
cmp
das
xchg
aad
push
inc
jl
push
pop
repz
push
cmp
iret
sbb
cld
out
out
enter
mov
mov
jb
stos
ja
mov
mov
testl
dec
xorl
xchg
stos
fwait
js
pop
scas
push
movsb
inc
sub
sub
mov
mul
pop
loopne
out
ffree
cmp
lahf
test
add
ror
pushl
pop
xchg
inc
test
fildl
jle
inc
xchg
fs
mov
jne
xor
cmp
cmp
stc
adc
xorb
js
jb
jl
test
ret
cmpsl
insb
lods
and
mov
mov
lcall
aam
testl
faddl
jns
jp
inc
cmp
rcr
xchg
fwait
xor
jecxz
xchg
out
cmpsb
jnp
std
inc
test
or
es
xor
shl
outsl
imul
jae
pop
out
in
xlat
lds
inc
and
push
sub
push
js
in
push
add
inc
hlt
xchg
mov
clc
jp
cmp
ss
mov
mov
jle
cwtl
xor
pushf
xchg
test
js
add
lock
xchg
sti
notl
andb
push
pushf
scas
dec
sub
jmp
adc
jmp
jno
jge
cmp
cmc
arpl
popf
jne
sbb
addr16
ja
js
fadds
xchg
dec
vpshufd
ds
out
or
ret
data16
dec
rclb
les
decl
fsub
or
sub
xchg
rclb
push
mov
mov
pushf
cmp
inc
insl
popf
adc
out
and
pop
loop
jo
dec
mov
pop
adc
cli
inc
xchg
imul
hlt
popf
dec
mov
cmp
lahf
inc
pop
jne
xor
xchg
push
lret
icebp
jb
lea
aad
inc
push
test
iret
out
or
push
lds
xor
and
or
pop
mov
lret
mov
inc
cmp
fisubl
cmp
inc
iret
push
outsl
add
and
das
jae
leave
jmp
add
jecxz
test
pushf
pop
ds
loope
adc
sbb
outsb
rclb
adc
scas
mov
inc
inc
xchg
mov
ja
cmp
pop
fldcw
mov
data16
or
mov
push
out
add
push
ss
fsts
sub
repnz
mov
push
lds
clc
sti
fmuls
clc
cmc
test
pusha
jle
cmp
dec
je
cmpsb
leave
adc
cmp
outsb
xchg
sbb
xlat
sub
add
rcll
movsl
add
or
rcl
dec
hlt
scas
sub
cmp
xchg
es
roll
pop
xchg
ljmp
xchg
enter
cmc
mov
leave
jl
xchg
aaa
nop
and
out
bound
aaa
xchg
add
sbb
mov
lods
push
aaa
sub
in
je
out
pop
or
out
push
push
jb
test
iret
or
sar
cld
jns
outsb
mov
push
flds
push
xchg
in
push
cli
jne
xchg
pminsw
adcb
out
adc
je
push
jmp
fistpll
mov
pop
imul
loope
into
inc
xor
mov
cwtl
jo
jecxz
jno
dec
decl
or
loope
inc
in
lods
outsb
das
stos
popa
mov
mov
fdivrl
and
push
and
push
dec
cmp
outsl
aaa
mov
call
loopne
dec
stc
push
out
scas
jecxz
and
mov
jge
inc
mov
pusha
add
dec
mov
leave
cmp
or
decb
mov
loop
cmp
andl
add
inc
sub
push
lods
lret
divl
ret
inc
push
lret
and
cmp
adc
xchg
arpl
sbb
test
cmc
mov
add
xor
jne
in
and
mov
sub
outsb
mov
scas
mov
mov
mov
cmp
mov
xor
and
add
rorl
sbb
add
inc
mov
add
cli
dec
bound
lahf
iret
lea
scas
pop
in
pop
mov
fstp
xor
pushf
fs
hlt
xchg
daa
dec
imul
std
sarb
cmp
dec
add
mov
rcrl
les
aaa
jecxz
push
dec
in
pop
sbb
aaa
shrb
insb
and
mov
testl
push
mov
jp
fistps
into
sbb
xchg
loop
xchg
std
cmp
adc
pop
enter
aam
mov
int3
rcl
mov
jns
cmp
in
fs
pop
rcrl
mov
rcr
mov
movsb
test
inc
push
jecxz
scas
int3
dec
dec
in
xchg
dec
pop
sub
xchg
flds
mov
daa
adc
and
popa
int3
movsb
loop
add
cmp
or
mov
lock
ds
mov
out
insl
xchg
lds
test
ret
push
xor
ficoml
js
push
sub
or
xchg
cmc
fldl2e
sub
lods
pop
mov
stos
adc
es
sbb
dec
fisubrs
cmp
adc
xchg
cld
mov
sbb
pop
xor
xor
dec
inc
mov
sbb
icebp
pop
aam
lcall
daa
fistpll
popa
rorl
ret
sub
adc
and
pop
inc
ss
inc
aas
mov
mov
fnstsw
ljmp
xchg
arpl
cmc
sub
mov
repnz
rcrb
loope
bound
inc
stos
push
popa
cmp
int3
aam
jno
movl
lds
cmpb
aas
cmp
popf
add
add
jecxz
pusha
xchg
cli
les
sbb
sbb
lahf
movsb
inc
xor
add
push
sbb
xor
pusha
adc
dec
jmp
cmp
bound
mov
jg
add
fidivrl
inc
inc
add
push
aas
or
xor
sarl
cwtl
push
cmp
pop
in
add
sbb
pop
arpl
lock
ret
clc
mov
bound
dec
inc
repz
cltd
inc
inc
adc
pop
sub
aad
inc
test
sbb
lret
sbbl
jge
int3
jmp
fwait
jmp
jno
cmp
sub
cmp
push
push
loop
das
cmpl
xor
mov
or
sub
scas
push
inc
inc
push
pop
cwtl
sub
je
aam
dec
push
dec
repnz
hlt
xchg
inc
in
xchg
dec
in
sub
mov
xchg
pusha
inc
and
fmuls
ss
mov
in
test
pop
imul
inc
cmp
aas
fucom
push
xchg
clc
lods
mov
xchg
scas
inc
dec
fidivrs
jg
loop
sub
jle
movsb
outsl
dec
jno
lds
sub
insb
push
mov
cld
add
out
outsl
inc
or
lcall
aaa
xchg
fimull
nop
call
in
out
sbb
sub
dec
sbb
mov
clc
leave
sub
rolb
lret
mull
cmpsl
push
push
sub
push
pop
inc
sbb
push
mov
sub
sub
mov
adc
pop
cmp
shlb
cli
inc
std
inc
repnz
sbb
cld
cmp
sub
push
ficomps
repz
sub
dec
jge
xchg
and
pop
add
jno
xchg
xor
dec
loope
push
ss
jle
mov
push
xchg
mov
addr16
inc
push
pop
cmp
or
scas
pop
mov
pop
cmp
xchg
sbbl
xchg
and
stos
popa
push
cmpsb
sbb
sarb
test
insb
out
insb
cs
sahf
pop
int3
movsl
inc
popf
pop
cmpsb
dec
dec
dec
call
out
imul
sub
jb
ljmp
jecxz
gs
inc
inc
and
in
ret
decl
add
jl
shll
lods
les
push
mov
popf
xor
xor
jo
mov
enter
mov
rcll
leave
xchg
adc
adc
popf
xchg
je
jle
in
fistl
mov
bound
jnp
xchg
lods
dec
sub
or
lcall
mov
pcmpgtb
mov
outsb
jns
es
cmp
aaa
dec
sub
xchg
inc
sbb
mov
lods
jle
out
sti
cwtl
dec
shll
adc
and
cwtl
ror
or
push
pop
mov
inc
jmp
push
jno
push
cmpsb
push
lcall
data16
shrl
push
mov
pop
mov
jnp
sub
nop
dec
cwtl
lds
xchg
add
mov
in
mov
out
mov
cmp
int3
mov
lret
jl
cmp
pop
and
sbb
sub
xchg
dec
ret
in
outsl
enter
mov
fidivs
in
xchg
add
cmp
mov
aas
imul
mov
mov
fucomp
mov
inc
fldcw
ret
in
in
xchg
mov
in
sti
cmp
scas
lea
ljmp
lret
unpckhps
std
cmc
call
xchg
sub
jnp
repz
pop
idiv
sub
jne
pop
scas
fincstp
idivb
daa
sti
jo
push
dec
cmp
add
jo
xor
sbb
imul
stos
outsb
inc
stos
dec
or
fbstp
xlat
insl
adc
mov
das
and
mov
adc
cmpsl
arpl
add
xchg
push
inc
test
out
sub
push
ja
fists
inc
jmp
shl
add
jle
mov
add
dec
inc
ss
and
in
ss
scas
ret
mov
lcall
xchg
inc
sub
leave
fcoms
cmp
and
fstpt
stc
xchg
mov
or
test
xlat
jns
or
repz
roll
imul
lods
lock
outsl
sub
xchg
dec
push
callw
orb
mov
push
xchg
and
arpl
movsl
sbb
cmp
and
repz
cmp
mov
xchg
movsb
pop
sub
mov
mov
mov
rorb
add
je
scas
mov
xchg
mov
dec
push
cmp
adc
les
dec
inc
test
fsubrs
cmp
daa
fadd
int3
test
and
inc
loope
xchg
rclb
in
nop
xchg
lcall
add
mov
shrl
adc
jge
jo
mov
or
popa
leave
fistpl
sbb
imul
jl
pop
test
lods
cmp
mov
mov
dec
int3
xchg
sub
mov
clc
xor
bound
push
idivl
popa
push
gs
or
pop
xchg
ret
xchg
divb
cmc
cltd
inc
pop
bound
pusha
hlt
add
lcall
xchg
shll
iret
aas
adc
dec
mov
movsb
xchg
push
jmp
sub
icebp
int3
outsb
sbb
imul
aad
lds
push
repz
jne
out
xchg
add
sub
dec
pop
xchg
popa
push
adc
mov
das
outsb
cs
push
bound
xchg
sahf
int
pop
frstor
gs
in
sub
lock
pusha
adc
xlat
test
bound
lcall
jo
lea
cmp
loope
out
inc
fs
jb
hlt
add
rcr
lret
shr
movsb
xchg
rclb
or
pop
out
loopne
repz
push
adc
jb
gs
lds
mov
aaa
fcmovb
gs
push
mov
adc
adc
push
mov
ja
pop
shl
xchg
inc
cmp
repz
loope
cmp
jne
push
cmp
movsl
inc
faddl
in
inc
mov
icebp
sub
lea
inc
jbe
lahf
gs
push
inc
pusha
test
sbb
adc
jmp
push
nop
andl
add
xor
xchg
push
push
aad
ss
jns
xor
inc
cmp
mov
pop
cld
cmc
lcall
push
mov
xchg
cmp
add
ficoms
rcrb
and
mov
clc
clc
dec
or
out
dec
enter
std
dec
das
mov
shrb
fcomip
jno
push
mov
inc
mov
sub
add
sbb
mov
xchg
int
mov
gs
scas
mov
aaa
mov
and
cmpsl
xchg
mov
out
loopne
lret
adc
in
and
xchg
imul
test
es
inc
mov
std
sub
or
push
or
pop
lods
lock
cli
sub
in
xor
jl
outsl
aaa
popf
sbb
adc
in
ret
adc
imul
pusha
rclb
cltd
inc
inc
movsb
and
loop
ss
add
scas
jl
aad
fcos
je
jb
and
jns
sahf
mov
pop
sbb
in
xchg
loopne
leave
out
sbb
pop
rol
in
adc
pop
dec
hlt
sbb
loop
xchg
shrl
adcl
add
mov
sbb
loopne
stos
xchg
in
lods
sti
das
test
push
cwtl
xor
nop
das
shlb
subb
cmp
cld
popl
and
bound
in
daa
and
mov
xchg
push
ljmp
outsl
dec
lcall
mov
leave
andb
in
cld
cmc
mov
pop
jp
pop
mov
ljmp
mov
lds
sbb
pop
sbb
lds
mov
and
mov
add
outsl
mov
bound
loope
mov
mov
dec
mov
mull
repz
dec
dec
cmp
xchg
cs
inc
clc
push
rolb
popa
adc
jmp
mov
fxch
mov
lods
andps
aam
in
lcall
mov
aam
push
mov
or
and
xor
sarl
outsl
dec
xchg
lock
xchg
inc
sbb
jl
add
sbb
jae
adc
ret
mov
xchg
arpl
mov
jmp
je
sbb
decb
lods
inc
xchg
pusha
insl
dec
in
stc
stc
call
repz
mov
jle
out
cmp
pop
fnstenv
pop
xor
test
adcl
adc
mov
clc
push
movsb
faddp
fcmovu
inc
add
cmpsl
add
mov
mov
and
scas
push
scas
fs
mov
push
es
mov
repnz
scas
mov
mov
std
repz
bound
shrb
mov
add
cld
xchg
pushf
ret
ret
mov
sbb
test
inc
out
inc
stos
cld
movsb
add
push
mov
call
jle
loop
push
daa
mov
push
inc
inc
mov
dec
mov
fnstcw
test
outsb
push
fdivrs
mov
or
pop
rol
adc
cmp
jmp
fwait
shll
or
iret
das
inc
popa
orb
jno
les
inc
sub
xchg
sahf
aas
jbe
push
div
popa
push
xchg
mov
loop
lcall
adc
loopne
pop
mov
push
stos
shrb
addr16
sub
mov
add
clc
pop
fidivrl
jmp
and
push
in
xchg
scas
cltd
into
or
outsb
and
repnz
sahf
stos
arpl
testb
mov
mov
loope
sub
cmp
lds
pop
jnp
lret
call
cmpsb
and
cltd
lods
loope
int3
sbb
popa
mov
cmpsb
or
and
mov
jmp
push
outsl
cli
jbe
pop
push
lcall
and
xchg
sbb
dec
mov
xor
iret
push
cmp
outsb
fildll
enter
jg
push
mov
dec
push
or
stos
inc
rorl
mov
outsl
cmp
mov
orb
decl
fistl
push
push
and
push
aas
push
adc
nop
cmpsb
cmc
inc
and
xchg
inc
gs
sub
int3
push
insb
addb
fs
jb
lret
mov
sub
hlt
loope
pop
arpl
mov
mov
mov
incb
jmp
hlt
jmp
mov
and
add
cs
or
ja
addr16
jae
sub
jle
out
fdivrs
test
mov
movsb
cli
sti
daa
sub
int
arpl
dec
btr
jb
sbb
pop
add
push
test
xlat
movsb
ds
call
sub
icebp
mov
mov
xor
mov
hlt
jnp
lock
rclb
lahf
mov
inc
les
jle
cld
fisubrl
dec
inc
jle
aas
adc
pop
jecxz
pop
inc
aas
lods
scas
inc
xchg
outsb
inc
aaa
stc
int3
mov
push
or
aaa
cmc
push
jno
mov
push
add
inc
or
loop
sub
jmp
mov
add
sub
mov
mov
or
mov
pop
fldl
test
sub
mov
push
sbb
inc
cmp
stc
adc
push
pop
movsb
and
jg
and
cmpsb
pop
sbb
add
xor
ds
sub
sarl
fimuls
cld
or
rcll
cmp
inc
stc
inc
das
cmp
sub
sbb
sub
xor
jno
mov
neg
sub
popf
dec
mov
repz
roll
push
mov
mov
hlt
mov
xor
pop
mov
and
jne
pop
mov
sub
sub
cmpsb
push
inc
sub
lret
sbb
fldcw
or
jp
adc
inc
jge
popf
shll
dec
or
outsb
jmp
cwtl
mov
pushf
repnz
pop
xor
jl
fistpll
mov
lods
sbb
dec
imul
add
mov
outsb
and
inc
sub
data16
popf
inc
sbb
mov
or
adc
pushf
pop
negb
pop
maskmovq
fnsetpm(287
jmp
je
jge
add
testb
push
pslld
bnd
mov
test
fdivrl
mov
pop
out
xchg
jae
inc
bound
mov
ret
adc
inc
cmp
xor
mov
jp
test
mov
mov
inc
push
fildl
xchg
mov
cld
inc
jnp
jnp
ss
jmp
orb
fimuls
cmp
shll
loope
call
mov
sti
adcb
mov
popl
xchg
jg
into
cltd
leave
das
imul
les
es
pop
sbb
loope
enter
pop
mov
sti
or
jmp
mov
jle
out
jge
adc
add
rcll
and
out
push
add
std
les
cmp
in
cmpsl
jle
and
sub
push
sbb
movlps
mov
loop
jnp
dec
xor
dec
out
add
jne
jns
xlat
jl
divb
outsl
mov
insl
fbstp
adc
cmp
insb
jnp
les
mov
movb
dec
popf
aas
popf
dec
stos
jno
xlat
inc
cmp
test
jge
loope
out
mov
daa
fidivs
stos
int
rcll
repnz
add
cmc
and
mov
inc
push
inc
xor
jmp
push
inc
cli
cmp
lods
mov
fsubrl
cmpsl
pusha
adc
sub
pop
jle
je
mov
negb
dec
mov
sub
jnp
hlt
mov
sbb
test
xchg
dec
dec
add
out
insb
roll
mov
cs
scas
outsb
ss
inc
lea
lcall
int3
in
add
xchg
mov
push
jo
sbb
inc
pop
lock
mov
mov
or
push
cld
sbb
pushf
fcomi
gs
push
sub
mov
addr16
mov
mov
scas
into
pop
nop
and
fadds
pop
xchg
hlt
das
jnp
dec
std
ja
cmc
dec
je
data16
mov
xor
push
cmp
sub
dec
sub
jg
and
sub
divb
jno
ds
push
pop
fsubs
repz
ds
out
mov
mov
dec
mov
cltd
cs
ljmp
add
ss
shr
mov
aas
cs
push
popa
scas
mov
imul
or
outsb
pop
and
mov
pop
push
mov
xor
mov
pop
adc
jl
popf
sarl
in
stos
jl
jp
adc
cmp
repz
fstpl
inc
ja
add
shll
pusha
xor
xor
mov
cltd
jbe
mov
lods
fcoms
sti
jg
aam
loop
jns
aam
jo
jge
pusha
dec
insb
jge
dec
outsl
pop
inc
or
fwait
js
push
bound
mov
mov
jbe
add
jecxz
movsb
lock
repnz
lock
xor
stc
cmp
and
mov
fsub
and
mov
cmp
pop
mov
or
loope
insl
mov
fwait
sti
imul
ss
xchg
add
loope
xor
inc
cmp
aam
jno
mov
jb
fsubrs
jecxz
rolb
mov
push
lods
lock
dec
scas
nop
ret
cli
ja
sub
push
push
mov
fdivl
push
mov
mov
cli
inc
mov
pusha
xor
jnp
mov
sub
test
lret
mov
in
fwait
sbb
adc
test
out
int
aaa
add
pop
jp
repnz
xchg
adc
sbb
lret
jae
andl
pop
mov
popf
mov
sub
or
pop
popa
jle
sub
aas
jae
jbe
in
int3
ja
cmc
je
jecxz
jle
and
shlb
mov
loope
sub
sbb
in
adc
add
in
test
dec
jge
je
adc
dec
shl
pop
adc
or
sbb
mov
xchg
sub
test
jl
fstl
out
sbb
int
mov
jne
inc
fstpl
movsl
lods
add
ret
mov
mov
push
stos
sbb
sub
lcall
imul
push
in
pop
mov
lcall
jecxz
std
xchg
mov
ficoms
push
jbe
loop
scas
mov
mov
push
scas
int
inc
add
jmp
bound
lcall
xchg
into
pop
inc
jne
sbb
ret
dec
pop
xorb
mov
icebp
insl
fcmovne
mov
je
jl
lods
mov
dec
mov
lahf
lcall
pop
imul
adc
mov
movsl
fcmovu
lea
xchg
stos
sarb
aas
pop
jp
jg
mov
fidivl
sbb
mov
inc
int3
repnz
scas
or
fbstp
jb
cmc
sbb
lds
push
push
inc
jl
or
pop
cs
inc
inc
xchg
push
inc
xorb
sti
mov
inc
sub
pop
fdivs
lds
mov
cmp
out
mov
inc
les
outsb
push
cmp
stos
fcomps
dec
pop
gs
iret
sbb
dec
sti
dec
lea
jp
test
repnz
push
and
dec
faddl
orl
cli
pop
dec
fwait
jl
jo
ret
add
push
bound
pop
inc
or
loop
pushf
inc
in
mov
imul
or
js
test
cltd
bnd
sahf
xor
inc
rolb
das
fsubs
inc
std
fnstenv
cs
xchg
outsl
jb
pop
pop
cli
inc
adc
in
int3
mov
pusha
xor
sarl
cmp
adc
cmp
pushf
scas
push
and
dec
mov
xor
xor
mov
ss
insl
xchg
pushf
and
test
je
add
sub
lods
jl
pop
lret
inc
dec
ret
cmp
fisubrl
shrl
aam
xchg
stos
mov
test
inc
xchg
pushf
icebp
inc
xchg
xchg
test
stc
into
sbb
sti
sbb
cli
push
popf
lods
cmpl
and
shl
add
mov
cmpsl
test
or
test
xchg
inc
pop
roll
pop
push
mov
xchg
xlat
push
add
inc
pop
adc
add
lds
stos
ljmp
push
aad
add
mov
inc
push
cli
lock
int3
repnz
repz
and
push
sub
push
mov
mov
pop
test
jbe
sbb
ror
test
pop
cmc
std
sub
in
leave
mov
jge
fcomi
enter
rcll
add
imul
data16
push
pushf
xor
shrb
mov
test
subl
push
es
mov
xlat
in
cmp
push
das
mov
dec
addb
and
lods
xchg
push
xor
dec
xor
cltd
popf
imul
cmpsl
push
push
aad
xor
dec
sub
aam
stos
int3
clc
cmpsl
lock
stos
ss
push
xchg
adc
fldt
mov
mov
jo
andb
jb
lahf
rorb
addl
sahf
lcall
mov
imul
mov
hlt
shlb
sub
sbb
daa
imul
popa
movsl
gs
nop
loope
sbb
xchg
fsubrs
mov
inc
je
or
nop
jae
xor
aad
ret
and
adc
aaa
out
sub
fsubrs
adc
std
pop
add
insl
enter
and
ja
lahf
mov
je
fwait
push
inc
std
ds
mov
repz
imul
mov
fistps
and
fcomps
add
out
cmp
adc
xor
cs
lods
popa
sbb
call
dec
in
pop
dec
ss
outsb
jg
add
movsl
mov
mov
and
idivb
insl
repnz
insb
pop
ss
jnp
pop
add
and
or
or
mov
xor
push
add
xor
or
push
mov
lret
mov
mov
add
lods
outsl
sub
sub
clc
xor
xchg
mov
fwait
mov
in
fcompl
call
andb
inc
fld
xchg
loopne
js
out
dec
cmp
push
mov
fs
pop
mov
icebp
cmp
iret
adc
shrl
rcrb
mov
cmp
mov
cmp
and
andb
jns,pt
xor
icebp
pop
mov
and
and
mov
or
js
ret
cwtl
xchg
popf
push
stc
addb
int3
and
push
lcall
pop
pop
cmp
aas
dec
and
mov
enter
pop
jae
arpl
pop
shll
cmp
enter
aas
mov
inc
jecxz
jmp
xchg
mov
xchg
ds
bound
sub
cmp
jne
aam
jno
mov
ss
mov
ret
push
movsb
mov
es
add
out
addr16
mov
ja
cmp
xchg
negl
dec
or
shrl
dec
lcall
and
and
sbb
out
or
mov
lret
cmp
dec
and
ja
hlt
jp
lds
push
xchg
xor
into
pushl
or
sbb
iret
add
push
lds
and
stos
inc
test
jne
sbb
mov
push
jbe
ja
iret
loop
mov
repnz
loop
xor
push
inc
xchg
scas
xchg
shll
cmp
mov
mov
cmp
sub
pushf
cmp
leave
popf
lahf
ret
jae
out
push
inc
jnp
es
and
popa
movsl
sti
mov
adc
xor
js
fisubrl
pop
pop
mov
movsl
mov
out
jns
dec
dec
insb
hlt
cmp
dec
adc
jmp
lea
pop
faddl
movsl
jno
and
sbbb
sbb
into
testb
stos
xchg
int
das
call
mov
mov
dec
fs
mov
ret
lock
icebp
aam
xor
sub
fldcw
enter
cmp
insb
cs
inc
pop
test
into
lahf
addr16
add
xchg
xchg
adc
xor
stos
adc
addl
das
movsb
adc
xor
mov
adc
cmp
xor
sahf
outsl
cltd
mov
sti
jbe
inc
fists
jl
cld
xor
loop
xchg
in
outsl
mov
xchg
mov
adc
push
and
and
mov
xchg
jnp
cmpsl
pop
push
sub
clc
lods
lcall
xor
xchg
pop
or
add
repnz
enter
add
into
xor
aad
pop
daa
add
aas
scas
in
pop
bnd
lods
mov
sub
cmp
insb
andl
sar
cmpsb
pop
push
dec
jb
stc
jg
data16
insb
lahf
pop
xor
xchg
inc
mov
xor
xchg
ds
push
imulb
inc
outsl
aad
aas
addl
sub
dec
push
lods
mov
fldt
or
mov
add
xor
int
dec
test
or
in
jbe
decl
pop
mov
dec
iret
movsl
ljmp
push
pop
out
fadds
xor
mov
out
lods
and
addl
mov
lods
fldcw
jo
repnz
mov
outsb
das
stos
lea
dec
rol
mov
dec
mov
out
push
push
pop
push
xor
dec
std
dec
add
add
aad
pop
cmp
jb
lret
xchg
lods
or
jns
imul
rolb
in
test
mov
adc
in
cli
push
inc
aaa
lret
test
into
sub
outsl
outsl
shll
add
enter
movsb
out
in
mov
aad
in
jne
adc
fsts
mov
add
mov
sahf
inc
cmp
adc
cmpb
ja
dec
repnz
xor
jge
ljmp
push
pop
or
arpl
jp
xchg
dec
mov
cmp
pop
xchg
cmp
xchg
into
lds
jb
and
or
inc
loope
add
jge
push
stos
arpl
push
scas
push
adc
xchg
and
xchg
out
push
in
rorb
fst
push
stc
ds
dec
loop
iret
pop
dec
pop
nop
mov
int3
pop
cmp
lock
outsb
or
fs
cmp
lock
in
shl
adc
push
arpl
mov
out
mov
xchg
mov
push
pop
aaa
clc
sub
push
cmp
dec
out
push
iret
push
ds
mov
jnp
add
xor
mov
jno
fidivl
iret
aas
int
xchg
jecxz
mov
das
add
fstps
or
popa
lcall
lahf
lds
pop
scas
cs
or
mov
mov
fwait
lock
sub
and
inc
ljmp
push
inc
jmp
shrl
cld
dec
aaa
xor
bnd
jne
icebp
into
or
cmp
int3
stos
fwait
clc
sbb
loope
pop
int3
inc
xchg
push
cld
jbe
popa
arpl
sbb
fsubp
popf
outsb
es
in
std
adc
xor
push
push
add
ss
sbb
bound
jb
mov
ds
aaa
pop
or
or
dec
cld
leave
mov
mov
and
xlat
scas
aad
test
sub
pop
push
insl
iret
inc
xchg
cwtl
incb
push
ja
jl
push
dec
xchg
test
mov
mov
xchg
adc
je
cltd
loop
adcb
icebp
cmp
xor
push
scas
lcall
test
pop
in
in
sti
lock
repz
cltd
incl
icebp
pop
xorl
lcall
xor
push
lock
mov
jg
and
add
cmp
movsb
push
out
cmc
jb
dec
jg
xchg
push
add
pop
stos
vmulps
pushf
fsubs
inc
into
out
repz
inc
aad
into
data16
leave
lods
sti
or
sub
fbstp
stos
int3
add
push
repz
cmp
cmp
jns
in
or
ja
hlt
sub
fs
adc
addb
in
or
pop
inc
shll
adc
mov
xchg
dec
not
jmp
xchg
popa
fucomip
jae
pop
shlb
jns
loopne
jns
mov
insb
jl
repnz
cmp
mov
or
into
xchg
test
add
mov
jns
arpl
fmul
hlt
jl
into
mov
lret
cmc
arpl
shrl
dec
mov
sbb
jnp
add
lcall
mov
icebp
and
adc
cli
test
das
jp
leave
push
or
loopne
push
fs
mov
mov
and
loopne
adc
and
shlb
loopne
push
inc
xor
fidivs
push
push
pop
gs
dec
sbb
call
movsl
cmp
hlt
mov
xchg
lret
sub
mov
dec
jmp
cmp
push
push
das
add
xchg
cmc
cmpsl
inc
lods
jmp
daa
pop
dec
add
cld
in
in
mov
lods
jne
lahf
lret
clc
xchg
or
repz
cli
ret
mov
mov
aad
lods
and
cmpsb
pop
xchg
fidivs
out
push
add
test
adc
sbb
add
mov
cld
and
shll
pop
jecxz
inc
mov
or
aad
cmp
jp
mov
jne
imulb
fldcw
out
stc
call
or
ja
cmp
sub
or
or
int3
adc
push
sbb
jo
out
mov
inc
ds
js
inc
bound
loopne
cmp
enter
pop
inc
sub
andb
xchg
in
mov
dec
push
inc
sbb
and
scas
ds
jle
or
cmp
xchg
add
inc
jg
xlat
aaa
mov
leave
testb
imul
and
and
test
ljmp
jb
push
xor
jmp
dec
ja
gs
inc
ret
out
xchg
jnp
loopne
mov
xchg
xchg
std
cmc
mov
or
and
loope
jbe
leave
bound
and
sub
movsl
sbb
fbld
mov
ljmp
nop
out
xor
mov
inc
jno
and
mov
idivb
fwait
mov
stos
fisubrl
dec
xchg
cld
stos
lcall
int3
imul
dec
xor
and
pop
and
std
inc
mov
scas
jbe
mov
mov
mov
movsl
pusha
jle
push
arpl
fcmovne
mov
cmp
pop
cmp
fscale
lods
jge
or
xor
xor
xchg
jecxz
mov
sbb
cmp
rcrl
xchg
loope
jae
jo
mov
pop
mov
lods
pop
ror
loop
scas
add
sarl
jle
mov
pop
add
xor
mov
jg
pop
pop
out
das
sbb
imul
mov
cmp
add
icebp
add
pop
mov
out
pop
inc
fisubs
dec
push
adc
lds
sbbb
jle
or
add
pushf
jnp
add
and
mov
movsb
sub
push
dec
subb
movsl
add
fstp
cli
int3
movsb
push
addr16
mov
sub
outsl
out
pop
rcl
cs
in
add
rcll
rcrb
or
and
shlb
dec
lcall
inc
nop
roll
repz
ret
cmp
imul
lock
or
cmc
dec
and
cmc
or
icebp
pop
lret
pop
jmp
lret
sub
and
cltd
enter
sbb
rcll
lahf
xlat
adc
fprem
mov
pmaddwd
out
fnsave
jecxz
ficomps
fdivl
xchg
and
add
xchg
mov
push
inc
jae
fcoms
repnz
lea
mov
int
pop
and
mov
or
imul
lods
push
int3
pop
imul
popf
jo
jo
mov
scas
mov
mov
lock
scas
xchg
xchg
dec
ds
icebp
popa
insl
mov
outsl
mov
adc
add
push
mov
lcall
imul
xchg
insb
xchg
xchg
sbb
fidivl
in
xchg
jl
insb
cmp
xor
ficomps
fincstp
jae
sbb
xchg
lret
scas
mov
lret
xor
mov
push
fsubs
mov
stos
out
adc
lock
push
push
jno
sub
or
cmpsb
and
jae
stc
sti
sub
pop
and
movsl
inc
lds
rorl
loopne
inc
imul
iret
mov
xchg
int
and
dec
imul
subl
icebp
adc
sub
or
out
mov
push
repz
pop
inc
enter
jecxz
dec
imul
pop
ss
and
jmp
adc
or
adc
inc
pusha
lods
lret
add
test
jnp
fisttps
xchg
pushf
mov
jmp
and
ja
xchg
push
xor
add
mov
ret
add
fdivrl
xlat
pop
sbb
fbld
test
lock
jbe
mov
imul
aad
inc
push
pop
mov
mov
daa
jl
lret
stos
mov
jne
mov
scas
sbb
adc
mov
cltd
dec
jmp
cmc
mov
shrb
mov
int
lods
xor
xor
sbb
fsincos
cli
xchg
jp
sbb
adc
fcmovne
mov
jbe
test
inc
lods
gs
xorb
daa
subb
mov
jmp
mov
mov
jl
ss
jp
lea
mov
pop
xchg
cmp
fsubr
movsb
pop
fnstcw
scas
xchg
shl
mov
les
lock
dec
ret
mov
stc
lret
repnz
mov
stos
xor
rorb
inc
add
jmp
mov
divl
out
hlt
fisubl
inc
sbb
int3
movsb
sti
inc
fisubrl
fiaddl
mov
sti
mov
mov
lret
stos
lods
jne
cmp
cmp
or
adc
test
xchg
mov
adc
mov
mov
xor
shlb
enter
test
cmpsb
pushf
stos
popf
sbb
cli
xor
jns
ljmp
out
jle
ret
dec
ret
cmc
aas
mov
out
aad
jo
push
loope
sub
cmp
cmpsb
cmp
icebp
pusha
xchg
popl
cli
add
lret
xchg
jb
mov
dec
lret
xor
xchg
mov
adc
pop
push
mov
mov
or
xor
test
ret
pop
adc
lods
je
icebp
dec
jecxz
aaa
neg
jne
pop
std
push
popa
xorl
pop
pop
xchg
jp
push
in
pop
xchg
jno
fwait
add
cmpsb
adcl
adc
enter
pop
dec
pop
movsb
push
mov
inc
mov
push
in
sub
jns
mov
mov
mov
mov
daa
pop
rcrl
movsl
mov
jge
fmull
adcl
sub
xchg
jne
add
dec
lahf
clc
int3
sbb
add
cs
xor
sbb
jle
sbb
pop
adc
xor
push
fistps
in
cld
jb
sub
pop
push
jbe
mov
out
jl
adc
and
cmpsl
push
clc
sbbl
push
xor
inc
int
sbb
jnp
adc
add
mov
cli
lods
and
out
push
xchg
jae
sarl
or
cmpsb
in
or
sbb
adc
ret
std
dec
in
mov
testb
sbb
adc
clc
std
insb
std
in
dec
pop
or
stos
mov
or
js
mov
adcb
mov
lcall
les
cmp
stc
sti
jl
test
loop
xchg
test
movlps
call
in
popl
sarl
fs
mov
outsb
out
cltd
cmpsb
daa
dec
icebp
out
sahf
push
mov
dec
pop
ficompl
sahf
inc
add
pusha
pop
in
rolb
pop
cmc
testb
inc
ja
add
nop
orl
xchg
adc
insl
dec
push
cwtl
pop
push
push
loopne
loopne
cmpsl
sbb
or
out
sbb
push
mov
xor
in
cmp
pop
add
adc
and
jecxz
in
mov
stos
sub
sub
repnz
leave
dec
into
bound
xchg
imul
enter
sub
js
out
imul
pop
aas
sub
jle
repz
inc
in
jecxz
push
fbld
xchg
and
and
jge
aas
outsb
es
jl
xor
cmp
arpl
lods
push
xchg
mov
divb
mov
int
cmpsl
sbb
in
sahf
fisttpll
cmp
js
sbb
mov
lret
movsl
jo
pop
mov
pop
aaa
ja
in
cmpl
mov
jns
cli
js
cmc
dec
dec
imul
xchg
call
mov
sbb
pop
scas
xor
jmp
push
mov
test
fldcw
mov
sbb
aaa
jge
sbb
les
stos
cmpsl
fiaddl
shll
or
mov
mov
outsl
fcmovnbe
and
gs
dec
push
sti
mov
insb
dec
fs
xchg
bound
cld
lea
idivl
or
inc
xorl
out
push
dec
in
add
dec
cwtl
shlb
add
sti
xchg
inc
outsl
in
sbb
adc
enter
inc
jno
jne
pop
faddl
cwtl
jo
jbe
push
push
ds
outsb
adc
pop
mov
mov
add
in
jb
es
and
pushl
dec
sbb
sub
adc
lcall
scas
sub
js
push
addl
repz
mov
or
lcall
sbb
notl
fdivs
dec
mov
push
pop
ret
sahf
pop
sbb
sub
dec
mov
sahf
cmp
test
cmc
inc
mov
vpunpckldq
push
mov
pop
pop
pop
or
mov
mov
inc
or
outsb
xchg
lods
sbb
mov
cltd
mov
clc
inc
testb
jl
fwait
sbb
hlt
rep
fcmovnbe
enter
add
or
sbb
cmpsb
rolb
sub
popl
inc
cs
ret
mov
pop
dec
iret
and
mov
inc
mov
add
jne
data16
dec
rcll
pop
pop
sub
out
xchg
cmp
jae
mov
stos
and
jmp
sbb
jmp
pop
mov
pop
sub
loopne
std
popf
jge
fwait
mov
cmp
orl
push
loop
test
jecxz
mov
mov
mov
dec
pop
ds
add
pop
out
push
sub
sub
gs
popf
inc
push
sub
jle
or
mov
cmp
sahf
xor
adc
add
fwait
comiss
out
ljmp
mov
mov
bound
or
sub
mov
ja
pop
push
loope
out
call
sbb
fwait
inc
std
fs
push
or
mov
and
lcall
mov
adc
jnp
xchg
cmp
into
adc
xchg
jnp
lret
mov
testb
xlat
adc
movsb
mov
int3
dec
dec
mov
lock
negb
mov
mov
addr16
insl
ret
mov
xchg
hlt
jp
sub
xor
sbb
xchg
xor
stc
mov
push
aam
hlt
enter
mov
mov
xchg
pop
xor
mov
jp
lods
imul
xor
push
inc
in
les
ret
fmulp
std
push
roll
fidivs
or
or
dec
pop
or
rclb
push
jo
shr
out
mov
leave
popf
sub
mov
xlat
nop
ss
xor
aas
int3
dec
push
mov
lock
rcrl
mov
xchg
push
sub
xchg
adc
and
push
outsb
mov
stc
pop
cmp
lea
pop
cwtl
sub
pushf
push
dec
test
xchg
test
scas
movl
mov
push
sub
in
iret
and
pop
or
into
push
adc
and
enter
xchg
mov
dec
jmp
mov
in
sbb
mov
mov
pause
mov
loop
mov
cli
out
cmpsb
cmpsl
cmc
adc
jbe
adc
nop
inc
mov
ficoml
movsl
sub
shlb
lret
lea
insl
jle
lcall
sbb
aaa
sub
stos
jg
bound
mov
pop
adc
sub
das
ret
xor
stos
dec
or
push
iret
popa
dec
js
stc
dec
rcrb
push
movsl
loope
cld
pusha
add
adc
jle
push
popa
sub
push
xchg
int
loop
out
xchg
mov
cmp
xchg
xchg
aad
mov
test
ret
daa
add
shrb
sub
lcall
xchg
jnp
push
rcr
jb
sbb
shl
pop
pop
jecxz
arpl
or
or
ja
adc
repnz
fimuls
mov
push
cli
js
popf
lret
mov
loop
push
out
sub
in
movsl
stc
gs
sbb
dec
pushf
xchg
jge
cltd
xor
xor
sub
mov
mov
jmp
fldt
mov
mov
push
pop
std
into
inc
sbb
ret
dec
mov
scas
jno
bound
pop
jae
push
sbb
push
dec
inc
mov
xor
fstl
cld
pop
fs
sbb
jno
popa
js
xchg
ds
fistps
sub
stos
dec
lret
bound
loop
bound
mov
ret
xor
cmp
add
out
jnp
xor
movsb
mov
std
lea
imul
loop
dec
xor
and
sbb
movsl
jns
cmc
dec
hlt
fwait
xor
add
jb
lods
fnstsw
mov
xchg
or
addb
pop
mov
mov
js
add
in
sbb
nop
testb
mov
loop
sub
add
jge
lret
push
nop
popf
std
adc
cmc
and
pop
cli
mov
jge
adc
sti
jle
loop
enter
scas
das
shrl
test
movsl
insb
cmp
lock
xor
push
das
adc
xchg
not
cs
sbb
repnz
dec
stos
xlat
lret
in
out
dec
mov
jb
pop
mov
jne
cltd
add
aad
sub
jp
les
ror
xor
pop
and
mov
lods
sbb
push
aas
icebp
pushf
pushf
push
dec
out
push
jo
icebp
cwtl
fsubp
pop
mov
shll
mov
dec
push
orb
inc
push
fimull
xor
pushf
add
ret
mov
scas
les
mov
mov
imul
inc
sub
into
data16
add
sahf
pushf
xchg
adcb
push
cltd
ljmp
add
xchg
jmp
sub
mov
inc
adc
mov
lcall
mov
mov
cmp
sbb
ret
aad
xor
mov
fwait
dec
xchg
int
xchg
mov
sub
mov
push
and
fwait
push
inc
push
sbb
fstps
jne
inc
int3
dec
fs
sbb
imul
mov
jmp
mov
adc
ret
dec
push
xchg
aad
loopne
dec
insb
popa
pop
push
xor
xor
jl
xchg
nop
aad
jbe
push
outsb
push
mov
push
jle
stos
lea
xor
addr16
push
xchg
jnp
adc
sbb
dec
mov
aam
dec
sbb
push
sub
lcall
scas
pop
test
sbb
sbb
jae
xchg
lahf
inc
push
dec
sbb
cltd
fs
in
push
mov
xor
popf
mov
sub
test
jne
ljmp
xchg
js
js
mov
das
xchg
jle
sub
xchg
fisttpl
mov
dec
js
call
cmp
in
jno
xor
jle
loopne
adc
inc
pop
aad
pop
iret
jge
xor
out
fcoms
cli
jno
and
movsb
push
mov
mov
inc
cli
inc
mov
or
dec
pop
shr
jp
das
addr16
or
pop
inc
mov
pop
enter
mov
or
sub
mov
push
jb
test
out
inc
jle
adc
mov
inc
cltd
inc
lods
cmp
js
or
cmpsb
cmpl
inc
lock
jl
fdivrl
sti
fistpll
mov
leave
add
mov
jae
xchg
push
and
cmpsb
call
lret
cmc
sbb
cmp
dec
mov
lds
jbe
dec
mov
in
fsubl
hlt
mov
enter
lcall
sub
xor
xlat
adc
xchg
cmc
std
xor
xor
leave
dec
and
sbb
add
pop
xlat
lds
jg
fs
mov
cld
in
fcmovu
lcall
test
mov
loopne
fdivrp
pop
and
cmc
mov
pop
movsb
or
test
and
ret
jg
pop
mov
pop
out
jge
loop
mov
mov
aam
mov
ret
loope
test
cmp
stc
lods
pop
pop
out
imul
cmp
dec
ja
mov
mov
cmp
stos
or
lahf
push
mov
push
adc
sub
xor
mov
adc
pop
imul
test
pop
mov
jne
lock
mov
dec
cltd
or
mov
lds
sbb
mov
movsb
dec
sub
adc
pop
mov
jbe
xlat
das
test
imul
inc
sahf
mov
jp
jge
jne
in
cltd
mov
mov
xor
mov
loope
icebp
aaa
sub
stos
je
cmp
rcll
sbb
cmp
notb
lahf
repz
mov
or
test
xchg
cmp
aam
sti
push
inc
bound
xchg
jae
mov
in
testl
adc
cltd
sub
roll
jmp
add
scas
sbb
inc
fisubl
lods
xor
push
mov
out
imull
into
jnp
jb
test
fimuls
stos
or
sub
mov
lret
mov
dec
inc
shll
clc
les
shl
pusha
repz
pop
out
add
pop
mov
push
xchg
sahf
lock
insb
loop
or
movsl
mov
dec
dec
jno
xlat
xchg
or
das
outsb
mov
popa
hlt
sti
xchg
imul
aad
sub
lods
mov
sub
push
fidivrs
jne
xor
ss
iret
bound
insl
test
cmc
sbb
push
mov
loopne
shl
xlat
test
mov
lods
je
inc
mov
or
sbb
test
into
in
clc
adc
cmp
cmp
jns
mov
jp
stc
hlt
mov
push
fstl
sub
inc
mov
popf
iret
mov
push
in
xchg
push
shll
pop
mov
stc
cmp
adc
sbb
add
pop
mov
fstpl
aam
cld
scas
dec
subl
lret
pop
xor
adc
movsl
arpl
xor
adc
lods
inc
orb
rcr
push
test
fdivrp
push
cs
mov
ficoms
sbb
push
clc
andl
shlb
fcomip
stc
ud1
fcmovb
ret
pop
pop
adc
cmp
in
iret
adc
push
fidivrs
in
inc
mov
jecxz
mov
xor
rcl
xchg
inc
mov
mov
fs
mov
movb
insl
lods
cmp
nop
mov
xor
mov
adc
mov
ljmp
mov
mov
nop
ret
push
jnp
ss
mov
pop
dec
dec
ret
cmp
in
and
cmc
lods
leave
mov
in
xchg
jns
add
out
xchg
adcb
mov
pop
cltd
mov
cmc
jg
push
ja
ret
cli
jecxz
int3
fisubl
add
pop
dec
xor
sub
dec
bound
sub
jp
xchg
mov
mov
in
imul
enter
mov
or
sbb
push
movsl
cmp
in
outsb
xor
cmp
out
lcall
or
sub
loop
in
push
add
hlt
js
stos
mov
xchg
test
push
add
jecxz
cmpsl
jp
xor
flds
adc
fadds
jns
inc
pop
icebp
sub
push
loop
aaa
sbb
lret
popf
lods
xlat
cmp
mov
enter
imul
xor
mov
xor
pop
xchg
pushf
pop
iret
movsl
jae
push
or
and
daa
jmp
mov
movsb
xor
xor
inc
sub
cmpsl
sbb
mov
xchg
cmp
and
addr16
sub
mov
movsb
dec
clc
lcall
pop
inc
pushf
jg
sub
pushf
scas
mov
cwtl
in
cmc
aaa
dec
xor
popa
test
lea
enter
imul
fistpll
outsb
mov
xchg
cmpsl
cltd
and
add
inc
mov
cmp
xor
call
daa
jle
ljmp
mov
xchg
lret
or
arpl
cli
mov
pop
xchg
popa
dec
mov
push
mov
sub
jbe
add
xor
add
idiv
lods
mov
pop
in
psubb
jle
and
jg
mov
ja
jp
idivb
loope
scas
mov
cmp
fisttpll
inc
and
sar
bound
mov
dec
jne
pop
inc
aad
fldcw
xor
push
cwtl
mov
jb
fisubl
or
fs
inc
les
cmc
mov
push
loopne
test
mov
dec
lds
nop
movsb
shll
mov
pop
lods
xchg
movsl
mov
pushf
jg
and
cld
mov
out
shrb
dec
in
and
or
andl
jle
movsb
jg
sub
push
mov
mov
add
cmp
mov
sub
xchg
enter
pop
ljmp
sub
pusha
jbe
gs
stc
adc
int
shll
inc
cld
fstp
lret
ret
imul
addb
jne
lret
int
dec
in
add
pop
jbe
loopne
mov
mov
push
cmp
xchg
sbb
cmp
mov
jle
sub
jb
sub
push
adc
mov
test
dec
push
inc
leave
aas
inc
aam
mov
push
lock
push
loop
sub
inc
rorb
jnp
and
popf
inc
xor
add
out
or
aad
stos
test
jge
in
sub
xor
shrb
ja
adc
mov
int
scas
push
cli
fmuls
push
cs
add
ret
xchg
jge
push
jle
imul
add
add
mov
add
scas
xchg
mov
lods
push
pop
mov
clc
movsl
pop
mov
and
push
push
adc
cmp
iret
bound
sti
jbe
cmp
pop
mov
pop
cltd
mov
and
xchg
vandps
cld
imull
jl
cmp
push
stc
stc
enter
add
test
xchg
scas
adc
xlat
pushf
ss
mov
into
std
mov
cmc
test
pop
lcall
sub
sub
sbb
pop
fdivrs
xchg
inc
sbb
dec
leave
push
dec
and
mov
popf
mov
pop
popa
hlt
ud2
je
mov
cmp
scas
in
lods
pop
or
pop
cmp
jb
mov
push
incb
hlt
add
jnp
mov
inc
jmp
jnp
aam
pop
subb
rolb
pcmpgtd
push
cmpl
cwtl
insb
sbb
xor
push
xor
xor
je
xchg
sub
daa
add
sbb
and
icebp
lret
cmpsb
pop
xor
pushf
mov
mov
pop
nop
popa
mov
sub
xchg
aad
test
xchg
jge
add
ret
shll
cmp
xor
scas
jne
movsb
les
insl
gs
dec
cmp
rcr
cmp
fidivs
push
dec
lcall
scas
xchg
push
mov
inc
testl
mov
mov
cs
scas
mov
icebp
out
xorb
rol
add
fdivrs
add
mov
addr16
or
xor
movsb
jge
movb
sbb
sub
cmp
icebp
pop
pop
stos
cmp
mov
outsl
das
dec
cld
push
adc
les
sahf
inc
lret
lahf
jns
fnsave
outsb
in
add
addr16
pop
jno
imul
or
pop
hlt
pop
xchg
sub
mov
insl
adc
out
fsubl
cli
hlt
jl
fs
aam
jl
mov
es
daa
push
cwtl
dec
xchg
or
sub
fcmovu
inc
mov
mov
jae
test
push
pusha
popf
sbb
adc
lods
lcall
pop
push
int3
ss
nop
fnstcw
jle
das
shlb
mov
das
cwtl
xor
sub
ja
bound
jp
cmp
add
popa
sti
out
mov
jp
inc
fs
mov
aad
xor
aad
shl
and
fs
push
xor
ja
and
addr16
mov
mov
sbb
dec
adc
inc
dec
iret
ret
shlb
pusha
addr16
sbb
shll
jl
jge
and
hlt
jnp
lods
push
dec
push
add
insb
pop
imul
xor
pop
push
fdivrl
add
or
pop
push
not
lods
mov
mov
stos
les
js
pop
dec
jg
mov
mov
jb
es
xor
int3
fistps
shlb
dec
add
shlb
mov
add
aaa
rclb
lret
lret
xchg
inc
ja
fwait
es
pop
mov
rcl
mov
ja
mov
lods
push
adc
push
pusha
push
into
jnp
outsl
arpl
dec
pop
lds
out
or
sahf
pop
jo
pop
dec
or
ret
hlt
jbe
in
ret
ja
jle
lcall
fadd
int
pop
jmp
fidivs
mov
and
jnp
bound
shll
inc
dec
movsl
xor
std
or
call
loopne
push
cld
loop
call
push
dec
scas
sub
mov
cmp
adc
xor
nop
cltd
or
mov
or
out
out
test
jnp
add
ret
mul
mov
jo
fstpt
outsl
fcompl
inc
jnp
xor
ret
inc
outsb
scas
lods
mov
and
decb
mov
jle
imul
jo
jbe
fwait
mov
pop
push
pop
xchg
imul
out
in
fnstcw
fcomps
ss
out
mov
aad
mov
mov
outsb
jg
in
hlt
scas
mov
push
int
cld
movsl
cmpsl
fists
mov
mov
or
or
shll
push
mov
clc
cmp
mov
mov
sub
mov
adc
clc
loopne,pt
pop
mov
scas
stos
fdivrl
shl
adc
pop
imul
sbb
push
wrmsr
sbb
mov
stos
cli
cmp
icebp
jo
enter
sbb
cmp
push
push
orl
leave
mov
into
daa
inc
cmp
stc
aas
cld
xlat
mov
jg
sub
lret
or
cmp
jecxz
vmread
xor
pop
dec
icebp
xlat
jb
rcll
mov
rcrl
lahf
pusha
cmc
push
and
std
mov
push
subb
sub
addb
xchg
sbb
dec
pop
push
pop
cmp
mov
scas
gs
or
xor
in
lods
adc
push
in
cltd
pushf
xchg
cltd
xor
mov
push
ret
and
adcb
cltd
mov
and
mov
hlt
int
lds
adc
sub
filds
mov
inc
ljmp
arpl
lods
addr16
popa
adc
leave
and
pop
dec
and
dec
lret
in
daa
xchg
sub
push
pop
push
nop
push
aad
mov
mov
mov
aam
rorw
add
stc
insb
rorl
dec
add
sub
pop
fs
int
mov
xor
loop
sbbb
addr16
mov
mov
xchg
cltd
and
in
or
in
push
and
fmuls
fsubs
imulb
fimull
repnz
movsl
mov
into
sbb
lock
cmp
push
clc
or
jecxz
cmovbe
lock
loope
pusha
loope
sub
xchg
inc
out
inc
sahf
rol
dec
cltd
cmp
les
xchg
dec
movsl
mov
or
jnp
pop
inc
test
movsl
sti
ret
jmp
mov
mov
push
pop
pusha
jb
mov
or
shll
jge
mov
imul
xor
out
push
xor
mov
xor
xchg
inc
jl
pop
add
cmp
sbb
in
push
roll
pop
ds
pop
int
jl
imul
xor
and
sahf
push
cmpb
add
gs
jne
cmp
push
repnz
cmp
ja
add
pop
les
addl
ret
lret
push
arpl
inc
xchg
cld
mov
sbb
cmp
xor
mov
je
inc
cmp
cmc
push
push
rolb
jo
sbb
out
sbb
fcom
pop
rcrl
dec
mov
mov
mov
mov
imul
popa
addr16
or
push
fmull
jl
lcall
adc
lcall
cli
xchg
adc
popf
cmc
subl
in
or
sub
clc
push
sbb
test
adc
insl
jl
fcompl
insb
in
jb
or
imul
adc
cmp
mov
cld
ror
ljmp
sbb
es
xor
enter
mov
or
push
add
outsb
ret
rcrl
fwait
adc
neg
cmc
jp
jmp
test
pop
movq
subl
and
sub
sub
mov
push
cmc
in
mov
lock
out
addr16
and
lock
dec
test
xchg
fs
fcmovne
ret
pop
add
mov
popf
mov
dec
adc
stos
out
roll
js
sub
imul
mov
fmull
xor
loope
fistpl
lock
out
pop
inc
mov
leave
dec
mov
jmp
stos
sti
mov
push
pop
repz
jb
adc
add
cwtl
mov
and
outsl
xor
xchg
push
pop
lret
adc
or
cmp
xor
and
aad
sbb
movsl
and
add
adc
mov
sbb
mov
cmp
je
insl
pop
push
loopne
rcrb
icebp
mov
test
rcl
jno
shll
sti
das
dec
mov
sub
cmp
or
add
xlat
repz
jo
dec
mov
push
pop
aaa
inc
shlb
clc
pop
push
mov
scas
data16
addl
mov
xor
sub
inc
pusha
mov
fwait
inc
sbb
and
or
pop
xchg
int3
rclb
sti
adc
pop
push
in
ret
fldl
movsb
push
sub
pusha
pop
scas
sahf
cld
mov
cmp
jle
inc
push
icebp
pop
out
scas
adc
xchg
jge
popa
stos
inc
aaa
repz
lcall
shlb
adc
loop
sbb
push
mov
pushf
das
jno
adc
pusha
out
loope
inc
call
pop
ret
pop
ret
sti
inc
scas
scas
es
adc
cmp
scas
mov
mov
cmp
cmpl
outsb
mov
stc
das
ret
jmp
lahf
sahf
ds
mov
insb
mov
add
in
add
int3
cs
aas
pusha
xchg
jns
ss
pop
push
pop
adc
sub
xor
xor
fwait
push
int
mov
enter
jle
test
faddp
mov
lret
je
cmp
inc
cmpsl
pop
mov
ffree
into
js
xchg
inc
push
out
loope
cltd
icebp
and
jbe
or
pop
cltd
xchg
lea
pop
pop
mov
add
add
arpl
aam
xor
sarb
xchg
and
out
and
sbb
jne
push
roll
xor
mull
fsubrs
and
stos
mov
popf
jmp
aad
idiv
mov
roll
cmpsb
incl
pop
inc
push
out
out
loope
out
mov
out
adc
insl
mov
fwait
xchg
lea
popa
dec
push
pusha
fldenv
out
sub
and
leave
mov
lret
mov
inc
dec
movb
mov
jo
hlt
dec
lret
jmp
mov
stos
shl
out
sbb
jno
cmp
mov
sub
pop
mov
xchg
xchg
lret
je
jl
into
or
fidivrs
test
fwait
push
out
stos
and
movsl
pop
loopne
pop
jb
mov
scas
dec
mov
jb
inc
hlt
mov
repz
push
and
test
xchg
das
loope
and
mov
into
in
pop
push
xchg
call
ljmp
cmc
mov
jecxz
ficoms
lea
pop
loop
cmp
mov
push
pop
iret
test
adc
fs
and
adc
loop
add
xchg
test
gs
stos
aas
mov
xchg
leave
inc
imul
jmp
jmp
sbb
lods
adc
test
mov
lea
push
aaa
add
divb
lods
jae
push
cmpsl
sub
adc
adc
in
ret
fldenv
les
mov
jbe
mov
imul
cld
mov
xorb
cmp
mov
mov
outsl
add
xor
ds
adc
mov
out
loopne
cmpsb
in
pop
int
push
daa
xchg
xchg
adc
sub
enter
scas
xchg
notl
or
sti
out
imul
jae
push
xlat
repz
pop
in
inc
xchg
cmp
push
ret
mov
cmc
ret
mov
lret
sahf
sub
sbb
dec
rolb
sbbl
or
pop
xor
jno
mov
xchg
je
mov
ffreep
sti
int
cmp
push
nop
mov
in
jecxz
fs
pop
and
enter
jle
cmpsb
dec
fwait
lgs
dec
cltd
idivb
sub
subb
std
xacquire
jb
and
mov
push
or
sbb
cmp
push
cmp
cltd
iret
lcall
mov
pop
mov
out
data16
data16
sbb
stc
adc
add
inc
aad
lea
inc
loopne
xchg
inc
xor
lock
jne
and
addr16
pop
mov
pusha
mov
add
dec
adc
lds
jo
xchg
and
and
jnp
xchg
popa
pop
enter
fdiv
fwait
imul
inc
movsb
int
scas
movsb
pushf
jge
call
pop
jp
dec
lcall
lods
cli
adc
xchg
dec
sbb
pop
push
sbbb
adc
bound
pop
xchg
lock
jbe
jmp
std
mov
mov
xchg
dec
cmc
or
ss
in
call
mov
sbbb
ss
jecxz
ljmp
jmp
adc
xor
pop
adc
pusha
jp
imul
and
jl
ljmp
jmp
adc
mov
dec
outsl
das
fdivr
cmp
inc
je,pn
jmp
xlat
loope
aam
rcll
sar
jmp
sbb
mov
jg
sbb
sub
scas
jno
xorb
xchg
dec
fcomps
jne
jno
or
ss
sti
inc
adc
je
lcall
push
jae
fdivl
in
sub
into
adc
xchg
fbld
dec
push
xor
xchg
pushf
adc
mov
mov
adc
lcall
fwait
fwait
test
fsubl
xor
dec
data16
cli
mov
out
mov
enter
mov
shrb
mov
sub
rcr
mov
call
iret
mov
fwait
mov
stc
icebp
add
cltd
sub
sbb
int
mov
out
int3
or
in
push
push
push
sub
inc
pusha
jnp
repnz
jmp
es
jmp
xor
sub
inc
popa
sbb
mov
lret
mov
lahf
mov
mov
stos
xchg
inc
insb
jmp
adc
insl
cmpsl
mov
aam
add
hlt
mov
insb
lret
lret
cmp
psubsw
jl
inc
add
adc
pop
imul
pop
and
cmp
pop
xchg
inc
adc
dec
sbb
jg
adc
xor
add
mov
das
insl
or
and
push
jmp
cwtl
cmpsb
test
cmpsb
jg
xlat
shrl
movsb
enter
lea
mov
sub
negb
ljmp
add
cmpsb
and
insl
xor
mov
test
pop
ret
dec
sub
outsl
jmp
mov
outsl
nop
xchg
dec
clc
rcrl
sbb
pop
arpl
test
xor
push
aam
ljmp
sub
lods
jne
mov
jecxz
fstps
popa
aaa
fsubrs
ret
xor
test
adc
inc
hlt
jbe
stos
add
popf
callw
cmp
ds
or
pop
out
filds
mov
imul
aaa
loope
xor
outsl
sbb
and
jl
mov
adc
fidivl
inc
inc
xor
popa
sbb
adc
sub
push
and
adc
and
in
sbb
mov
inc
insl
push
adc
lahf
lea
xchg
fwait
idiv
ficoms
lods
inc
pop
jno
fs
mov
loop
push
xlat
sbb
pop
cltd
cld
cmp
pop
aaa
gs
mov
ret
cmpl
js
repnz
stos
xchg
fildll
cs
leave
add
ja
adc
or
pop
pop
fldenv
jle
cs
cli
cmp
or
push
jl
xor
test
sub
pcmpeqb
loop
cmpsl
test
jb
dec
xor
aad
and
fcomps
pop
xorl
mov
outsb
std
test
mov
mov
push
push
jle
dec
call
xor
call
mov
into
nop
mov
or
hlt
test
xor
sub
pop
mov
lcall
lret
insl
int
je
ret
in
xchg
data16
jnp
mov
es
jnp
mov
adc
pop
icebp
cwtl
xlat
dec
jp
in
xchg
enter
aad
dec
cs
lds
jns
sbb
mov
pop
cmpl
push
inc
xor
stc
pop
sub
test
outsb
sub
outsl
lret
push
nop
inc
scas
cltd
lods
mov
lret
sub
jo
movsl
mov
jne
fistl
ret
loop
dec
scas
push
pop
mov
lahf
ds
rcl
icebp
mov
repnz
cmpsl
stc
pusha
pop
mov
jns
iret
ljmp
inc
stc
mov
cli
jne
insb
mov
mov
clc
sti
pop
lcall
mov
cmpl
stos
sub
xchg
jg
push
out
push
movsl
loop
cmpsb
scas
ljmp
lock
lods
aad
je
adc
mov
icebp
pop
shlb
sbb
ret
sbb
xor
cmp
dec
enter
lock
mov
loopne
adc
cmp
repnz
inc
mov
sub
fimull
mov
jo
mov
dec
dec
mov
push
jns
inc
aam
xor
lock
mov
fldt
add
aad
mov
push
push
dec
sbbl
stos
pop
inc
frstor
int3
mov
mov
push
aas
int3
cmpsl
jl
arpl
add
add
mov
mov
fildl
neg
or
in
movsl
cmp
mov
xor
adc
rorb
inc
roll
cmpsb
lret
xchg
adc
xchg
shrb
dec
test
mov
cmc
push
roll
add
jp
jb
xchg
sbb
fisubs
movsl
rcrl
mov
mov
aad
jno
call
test
addr16
sbb
imul
addb
mov
andl
out
out
lds
ret
sbb
sub
mov
mov
add
les
shlb
cmp
je
push
neg
idivb
mov
test
push
setbe
stos
out
xor
int3
xchg
mov
into
jmp
mov
adc
shll
xor
mov
sub
clc
cmp
dec
fstpl
sub
jo
add
aas
xchg
cmp
jp
enter
not
mov
inc
das
out
push
dec
pop
adc
cwtl
mov
imulb
aad
enter
insl
clc
push
ljmp
or
scas
lds
push
out
icebp
clc
orl
cld
pop
xchg
int3
pop
sub
cmpsl
xor
std
in
test
jae
cmp
cmp
fiaddl
pop
mov
sub
inc
cmc
jl
loopne
lea
movsb
ljmp
and
cmp
scas
insl
pop
push
mov
push
rclb
dec
iret
cltd
push
pop
and
imul
repnz
sti
mov
jb
fbld
jge
movsl
je
out
inc
cmpsl
test
out
push
cld
xchg
cwtl
lcall
xchg
incb
dec
jge
adc
sub
pop
shl
sub
inc
insb
pushf
mov
jp
add
inc
sbb
rcrl
mov
sti
out
leave
or
inc
test
in
push
mov
stos
inc
adc
leave
mov
aad
fnstenv
lahf
pop
jbe
jo
das
aaa
push
push
mov
mov
xchg
es
subw
repnz
js
int
mov
es
or
cltd
cmp
or
push
fiadds
lods
lods
mov
jnp
cmc
or
icebp
into
iret
ljmp
test
nop
add
nop
call
ss
loopne
pop
mov
cltd
test
lret
mov
adc
stos
pop
mov
pusha
jbe
push
out
xor
stc
cvtdq2ps
and
jp
push
pop
int3
xchg
das
adc
scas
or
cltd
daa
out
dec
sub
adcl
sub
dec
lods
movsb
push
lret
dec
push
xchg
adc
inc
cmp
leave
push
jae
xchg
mov
add
inc
add
loopne
fildll
and
mov
mov
inc
in
sbb
push
loop
out
cmpb
sbb
inc
lret
rolb
xlat
jnp
in
xchg
xor
cmp
or
pusha
into
sub
out
in
dec
xchg
dec
or
divl
xchg
mov
inc
jg
pop
jmp
fs
adc
mov
adc
mov
pop
sbb
push
or
cmp
cmpsl
cmp
aas
adc
js
insb
mov
scas
add
iret
mov
mov
test
sti
stos
dec
cmp
pusha
xchg
ss
push
mov
aad
pusha
shll
pushl
mov
sarl
aam
sub
xor
out
pop
sbb
and
mov
fnsave
dec
pushf
aad
sbb
repnz
add
out
inc
jo
outsl
xchg
inc
xor
mov
xchg
repz
push
testl
call
arpl
add
jb
adc
outsb
mov
jno
push
rclb
cld
sbb
adc
test
mov
push
inc
cmpsb
sub
lods
lds
push
pop
sbb
inc
mov
xor
or
out
jae
push
dec
mov
xorb
push
mov
aad
xor
inc
outsl
scas
jae
cmp
outsl
jl
xchg
movsl
iret
adc
lods
lahf
mov
sbb
arpl
pop
out
xor
push
loope,pn
pop
jnp
divl
mov
mov
sbb
aad
xor
lret
inc
repnz
jo
and
pushf
fildll
fstpt
test
iret
andl
test
cwtl
pop
adc
sbb
mov
inc
sub
arpl
in
pop
add
push
pop
inc
in
push
adcl
idivl
xchg
enter
sub
fs
mov
sub
ret
cmp
or
fwait
in
cmpl
ret
pop
mov
in
stos
cmp
movsb
je
adc
jl
sbb
es
fs
pop
add
in
cwtl
push
mov
ret
jb
fisubrs
xchg
xchg
jb
cli
push
mov
sbb
or
sub
dec
mov
mov
cmp
imul
and
loop
mov
xor
js
mov
or
lods
in
xor
sti
jae
push
sub
jo
out
filds
mov
outsl
and
lock
icebp
es
xchg
sub
jmp
jmp
fiaddl
subl
mov
jecxz
cmp
pop
push
xorl
jnp
mov
dec
scas
popa
in
push
enter
fisttps
push
fs
push
mov
push
loope
sbbb
mov
sub
cwtl
adc
sbb
cli
jbe
fucomi
fimuls
push
mov
scas
pop
sub
inc
aas
cmp
test
imul
mov
push
cmpsl
cmp
jbe
xchg
out
mov
sbb
test
cmp
cwtl
in
popf
jnp
adcl
sub
pop
push
ds
jne
dec
pop
mov
pop
pop
dec
mov
out
call
js
push
clc
push
outsb
mov
add
cmp
js
xor
push
pop
cmp
icebp
mov
call
test
inc
sub
and
push
incb
sub
push
and
nop
or
mov
adc
lods
repz
dec
jp
test
jbe
inc
sbb
lock
out
sti
or
jmp
fcomip
push
fldl
xchg
imul
out
mov
mov
inc
out
mov
mov
je
aas
mov
in
lret
out
xor
mov
jecxz
arpl
lret
mov
ds
mov
dec
mov
ret
push
jne
sub
dec
fiaddl
daa
sub
test
sti
dec
pop
hlt
repz
jo
cmp
js
dec
push
out
dec
inc
lret
xor
cmp
push
fwait
and
cmp
add
cmp
inc
popa
push
pushf
xor
dec
incb
arpl
inc
fnstenv
test
fcomp
insb
sub
shl
stc
shll
test
rclb
in
add
scas
cmp
pop
xchg
rcl
rclb
xchg
out
fsubrs
push
aad
jae
xor
sbb
inc
sahf
dec
clc
sub
repz
decb
fcompl
inc
bound
sbb
jb
aaa
test
aaa
fistl
les
xlat
filds
push
mov
xor
mov
stos
imul
push
repz
mov
sbb
adc
sbb
cs
rcll
sbb
pusha
mov
pop
add
push
sbb
outsb
mov
cmp
insl
int
mov
pusha
mov
cmpsb
add
lds
inc
xchg
cs
dec
xor
xor
cmp
insl
xor
in
cmp
push
sbb
or
cmp
dec
popa
aad
jnp
xchg
or
push
mov
cli
mov
xchg
fnclex
int3
xchg
lods
sub
mov
icebp
inc
andl
rolb
cltd
xchg
loope
hlt
out
xor
mov
add
lret
adc
pop
or
xchg
sbbl
jmp
mov
ss
rep
cmc
pop
xor
dec
sbb
orb
fsub
lahf
jecxz,pn
out
push
gs
into
test
dec
jae
aaa
push
sbb
push
push
mov
xchg
pop
mov
mov
leave
or
xor
iret
andl
scas
dec
out
int
mov
test
repz
js
inc
push
pushf
xor
nop
in
sub
addr16
jb
fistpll
in
test
adc
adc
subl
loopne
pushl
loope
xchg
loopne
popf
pop
adc
das
pop
or
ljmp
cli
pusha
in
rorl
jns
xor
jge
dec
mov
sbb
sbb
outsl
lods
xchg
push
shlb
mov
pop
inc
das
fsts
dec
sbb
adc
outsb
and
jbe
or
sbb
and
or
daa
gs
jo
cs
popf
ja
or
add
mov
dec
sbb
repnz
jnp
lret
fwait
jg
inc
popa
ds
daa
xchg
sbb
fadd
imul
xchg
out
lcall
mov
movsl
fsts
aad
push
rcl
pop
mov
xchg
dec
imul
xchg
xor
test
inc
adc
sti
pop
fstl
fmuls
lock
mov
ja
xchg
gs
in
cltd
mov
loope
mov
aaa
sub
movsb
cld
jae
dec
insb
je
cmp
pop
loope
sarl
sub
sbb
idivb
fmulp
mov
dec
in
dec
or
stos
pop
pusha
add
inc
xchg
lods
adc
mov
inc
addr16
mov
fnstsw
jmp
scas
lcall
inc
mov
aas
and
jge
add
mov
jp
mov
and
arpl
mov
cmpsl
xor
xchg
cmp
cs
cs
mov
sub
jnp
outsb
cld
subl
push
fdivs
mov
jge
jno
int3
pop
xchg
or
loopne
jl
xchg
jo
cltd
cmpsb
cmp
lods
jo
jbe
sub
popf
sub
out
cltd
mov
fstl
adcl
or
pop
sbb
pop
and
push
popa
daa
nop
test
jne
push
aas
push
in
xchg
setnp
daa
inc
xlat
lahf
lret
pop
xchg
cmpsb
lods
in
mov
test
stc
inc
ljmp
xor
sbb
stos
repnz
add
mov
sub
jmp
popf
xchg
mov
out
mov
xchg
jg
jno
outsl
fmul
scas
sub
cmp
push
push
inc
out
pop
jbe
mov
sub
pop
sub
pop
data16
hlt
call
mov
xchg
cmpsb
cmp
jbe
iret
sub
fwait
inc
out
jb
jne
or
cmp
xor
inc
aaa
jbe
nop
loope
rclb
call
lret
jae
pusha
pop
inc
add
int3
popf
add
jo
sub
popa
push
xor
test
rorb
test
aad
lcall
dec
fwait
incb
and
repz
vcmppd
ja
mov
or
and
fldl
ljmp
push
mov
dec
and
jnp
xor
shll
test
sahf
inc
push
mov
inc
cmp
imul
ret
jnp
lahf
test
jo
insl
cmp
mov
push
pop
add
adc
jg
jge
jo
movsl
cli
dec
fbstp
xchg
das
pop
nop
jle
rcr
out
dec
and
adcl
dec
adc
ja
push
cmp
pop
pop
gs
ret
in
ret
jg
inc
pop
and
xchg
jae
jae
clc
sub
sahf
push
jno
aad
faddp
orb
pop
pop
rolb
pop
mov
inc
sbb
mov
ss
mov
jbe
cmp
adc
inc
sbb
les
in
and
push
mov
mov
xchg
push
adc
stc
cmp
dec
lret
jge
into
inc
pushf
icebp
jbe
jns
dec
mov
std
mov
pusha
sub
mov
fidivs
add
sub
pop
movsl
pop
cmp
xor
fdivrs
xchg
clc
add
enter
mov
mov
fstp
pop
push
test
sub
xor
rcrb
sbb
mov
cmpl
std
push
push
mov
dec
mov
imul
mov
je
cmpb
jno
jo
mov
in
dec
sbb
or
add
xor
lahf
in
aas
sub
movsb
inc
pop
xchg
xchg
aam
in
sub
ss
dec
xlat
push
rcl
cmp
or
jo
scas
mov
push
or
push
pop
jle
jo
out
sti
test
leave
cmp
cs
iret
jge
adc
fucomi
test
cmp
shl
outsb
std
adc
mov
sub
std
cmp
mov
mov
adc
jnp
in
inc
cmp
in
xchg
cmp
ds
inc
xor
push
xor
mov
pop
sbb
sub
cld
shll
enter
jecxz
pop
xlat
mov
cmp
push
or
int
icebp
es
aad
sbb
adcl
sub
mov
mov
scas
addr16
mov
leave
jne
adcb
lret
insl
mov
nop
mov
jle
fmull
fcmovbe
testl
inc
adc
jb
orl
push
xchg
fiadds
inc
sarb
and
inc
dec
clc
loop
cmp
push
out
mov
in
test
xchg
jg
add
rep
mov
xor
icebp
adc
mov
dec
xor
mov
jl
jle
cmp
cli
js
adc
ss
xchg
xchg
jb
xchg
fistps
xchg
test
sahf
adc
js
lret
mov
push
jbe
inc
sub
fisubs
dec
mov
popa
gs
call
pop
push
cmp
insb
aam
fstpl
inc
mov
mov
mov
adcb
incl
hlt
lea
out
xchg
leave
es
adc
dec
cmp
cmp
hlt
push
mov
pop
test
ret
test
xchg
pop
or
mov
xorl
sahf
pop
push
test
push
mov
push
jb
xor
popf
dec
outsb
xor
aad
mov
pop
rorb
lods
cwtl
pop
out
lret
cmpsl
orb
fimull
das
jecxz
dec
mov
adc
mov
lret
mov
scas
jae
push
out
xor
push
sbb
std
cli
stos
shl
push
add
and
icebp
cld
jae
push
pop
rcrb
jl
mov
inc
shl
mov
lret
pop
fldl
rorl
rolb
mov
mov
jmp
mov
and
xchg
out
sbb
dec
popa
dec
jns
mov
sbb
fs
sahf
or
push
jne
xacquire
mov
xor
ds
mov
inc
std
in
jg
push
sub
lcall
mov
jge
or
xlat
mov
and
pop
inc
mov
mov
push
xchg
daa
popf
fstps
rcr
add
lock
stos
nop
jp
inc
mov
bound
mov
mov
fstpt
inc
movb
rclb
inc
les
or
roll
mov
cmpsb
xor
add
cmp
notb
and
mov
xchg
test
pop
cmp
pushf
adc
mov
sub
dec
lods
push
cmp
fdivrl
jo
rorl
std
mov
out
inc
sub
push
pushf
pop
iret
pusha
nop
xchg
cmp
adc
les
out
adc
aaa
mov
test
jnp
and
and
xchg
sub
sbb
psrlq
mov
filds
xchg
sarb
mov
or
aad
xchg
jl
pop
mov
jmp
pop
bound
popa
sti
jmp
je
test
add
das
sub
enter
out
jle
lret
data16
lods
and
orl
negl
les
das
in
or
sbb
sbb
pop
lock
pop
pusha
lods
push
aad
or
xchg
mov
xor
lahf
cmp
stc
aas
or
aas
rsm
int3
dec
sbb
push
in
sub
inc
sub
iret
gs
data16
gs
outsb
testl
orl
insl
add
pop
jbe
pop
mov
pushl
adcb
push
xchg
pusha
pop
adc
jae
int3
test
mov
mov
mov
lahf
fsubl
xchg
aam
mov
xchg
inc
push
cmp
cmp
pop
dec
or
fdivrl
fistpll
jge
pop
ret
mov
sub
dec
mov
js
sbb
inc
xchg
lret
scas
hlt
mov
outsl
xor
sbb
and
xor
or
xor
and
outsb
scas
push
and
lds
mov
subb
clc
ds
enter
mov
das
das
filds
int3
repz
movsl
mov
mov
push
sub
dec
les
iret
push
enter
or
mov
or
jo
leave
adc
mov
push
xlat
xor
push
cmpb
mov
insl
mov
xchg
xchg
inc
push
std
and
cmp
jge
cmpsl
adc
pusha
cmpb
sti
lods
sbb
dec
sbb
pop
sti
sbb
addr16
test
fmuls
and
and
loopne
jno
roll
clc
mov
int3
loopne
and
dec
or
into
xor
xor
cmp
lock
punpckhdq
sahf
ja
push
dec
pushf
addb
cli
mov
addr16
dec
into
fnstcw
pop
adc
push
or
rcr
sbb
repnz
adc
push
xchg
aaa
outsl
add
jns
in
inc
outsb
push
xchg
and
repnz
test
cmp
push
outsb
clc
mov
push
movsl
test
es
iret
push
lret
dec
xchg
int3
movsl
fnstcw
mov
fsts
into
adc
in
sub
mov
dec
dec
sub
aaa
xor
push
dec
sahf
mov
cmp
fwait
mov
inc
inc
orb
rorb
cmpb
pop
inc
sbb
cwtl
push
fimuls
lock
adc
cmp
stc
mov
dec
jae
clc
and
into
testl
mov
movsb
pop
mov
cmpsl
and
inc
fldlg2
int3
inc
ja
xor
cli
sti
or
inc
mov
icebp
pop
sbb
push
rolb
vmovdqu
aas
arpl
nop
int3
and
dec
xor
xor
shrl
mov
test
adc
pop
xchg
popf
jmp
rorl
ds
inc
xor
sbb
test
mov
clc
mov
movntq
sub
push
scas
jg
icebp
add
xor
pop
jns
rcll
mov
push
push
push
inc
lods
dec
out
mov
ds
push
ret
cmp
dec
scas
out
xchg
cld
popf
lea
pop
pop
sbbb
arpl
xor
and
pop
push
iret
shr
popf
jecxz
ret
jge
scas
repz
cmp
push
insb
adc
pop
mov
fwait
sub
pop
mov
jge
sub
cmpsb
movsl
jl
enter
add
mov
mov
adc
mov
push
add
fldl
mov
mov
and
dec
or
sti
leave
mov
cmp
mov
adc
dec
in
fiadds
inc
outsl
mov
sbb
add
dec
gs
pop
bound
xlat
inc
sbb
les
push
mov
sub
loope
cltd
mov
outsb
pop
loope
push
mov
cmp
cmp
mov
inc
stc
mov
ljmp
adc
xchg
xchg
push
in
js
xor
into
cmp
xchg
mov
push
xor
jmp
or
push
or
cmp
mov
xchg
iret
adc
mov
dec
mov
mov
pop
dec
jge
movsl
inc
push
js
pop
aaa
js
stos
loope
mov
rcl
dec
pop
scas
cmpsb
dec
das
mov
jne
sub
insb
mov
sarb
shll
mov
fwait
andb
mov
sti
add
ds
sub
call
lret
cmpsl
lahf
mov
dec
imul
sub
jecxz
in
jge
ds
inc
mov
or
and
inc
xchg
mov
cmp
sahf
sahf
inc
cmc
nop
sub
dec
fnsave
cmc
and
loopne
cld
mov
xor
aam
mov
in
fs
jl
xchg
mov
add
or
cmp
xchg
nop
pop
mov
stos
mov
xlat
xor
sbb
xor
mov
add
es
aam
ds
mov
icebp
testb
in
stos
mov
das
js
cmp
mov
out
pop
dec
jl
test
clc
xor
xor
cli
cmp
ret
fdivrp
mov
adc
mov
mov
jp
ret
jno
xchg
mov
push
fisubl
fists
xor
mov
in
movsb
push
sub
push
shlb
faddp
adc
mov
pop
cmp
les
push
shrl
xchg
xor
and
jns
xchg
xchg
aam
fdivs
xchg
aam
sub
arpl
xchg
cs
inc
cmpsb
popa
pop
push
addr16
or
popa
sub
mov
mov
mov
arpl
lret
pop
leave
stc
lock
movsb
pusha
outsb
jo
mov
aad
icebp
cmp
adc
mov
repnz
ds
pop
daa
ss
push
push
push
cmpsb
push
jnp
in
lods
pop
sti
xchg
ficomps
sarb
mov
rorb
into
add
dec
and
mov
cmp
fcmovu
js
xchg
mov
add
jae
outsl
cmc
imul
push
mov
push
pop
mov
sbb
mov
dec
aaa
sarb
pop
fucom
cmp
and
add
sub
push
mov
and
mov
cmp
push
test
mov
je
scas
cmp
jnp
outsb
cmp
enter
xor
mov
fisubrl
pop
out
inc
movsb
dec
mov
cli
ljmp
sti
jae
mov
pop
cmp
aaa
inc
fisubrs
mov
and
in
or
fbld
mov
xor
push
jmp
mov
ficompl
xchg
in
pop
add
pop
clc
lahf
fwait
mov
popf
imul
stos
nop
testl
lods
add
sub
inc
lret
push
cmp
sub
pop
iret
or
out
cmpsl
mov
movsb
mov
repnz
aad
jns
sbb
bound
stos
mov
ds
cmpsb
ljmp
roll
idiv
scas
mov
sti
repz
push
jbe
dec
add
push
movsb
pop
test
nop
dec
adc
mov
fldt
add
cltd
ja
xchg
sbb
push
push
int3
js
mov
pop
xlat
jb
lcall
aas
xchg
out
stc
std
push
mov
pop
idivb
popa
or
xorl
xor
aaa
mov
rol
xor
sahf
pop
stos
adc
jns
xor
sti
xchg
adc
pop
mov
cmp
bound
rorb
or
lods
pop
aad
push
mov
or
mov
cmp
je
lods
lahf
hlt
cltd
xlat
outsl
xchg
mov
xchg
and
cld
pop
xchg
out
dec
push
insb
sbb
ret
mov
sub
add
lods
orl
iret
xchg
addr16
pop
scas
adc
bound
leave
jno
dec
push
test
jmp
dec
jecxz
out
pushf
movsb
outsb
out
and
test
cmpsl
add
ret
add
sahf
xor
pop
outsl
outsl
add
cld
out
mov
and
mov
pop
adc
int
xchg
pop
add
pop
push
std
out
mov
mov
cmp
movsb
cld
scas
testb
jle
sub
add
sbb
xor
shr
xor
movsb
adc
adc
push
mov
cli
xlat
lods
mov
loopne
iret
cwtl
cmp
in
pop
sbb
and
or
pop
sub
and
sbb
xchg
shlb
cmp
jo
cld
ficoms
mov
arpl
pusha
xchg
sbb
fidivrl
ljmp
ja
imul
jle
outsl
movsb
fadd
imul
or
out
arpl
xlat
add
movsb
jbe
cwtl
inc
rorb
imul
sub
outsb
pop
lds
fsubl
test
aad
stos
sub
mov
popf
in
inc
fstpt
mov
pop
jle
push
mov
dec
and
je
out
scas
cmp
xchg
loopne
xchg
mov
dec
push
shrl
fcompl
jmp
pop
dec
lds
xchg
xor
pop
push
push
xchg
push
ffree
mov
std
push
loopne
or
loope
pusha
aam
fsubrs
stos
clc
xor
or
scas
shll
ljmp
dec
push
mov
push
lahf
or
push
lahf
mov
dec
adc
xchg
sbb
sahf
in
outsb
jecxz
push
mov
add
outsb
mov
cmp
pop
xor
sub
stos
mov
data16
adc
push
ret
jne
pop
sub
sbb
push
add
and
shll
mov
xor
ljmp
test
scas
adc
xor
rorb
test
inc
dec
or
sub
sbb
adc
insb
mov
call
inc
sbb
sbb
cmp
add
adc
popf
mov
or
je
lcall
cmp
adc
xchg
mov
jle
stos
cmp
mov
mov
jnp
jmp
cmp
rclb
add
hlt
lfs
call
xlat
aaa
pusha
ret
jae
pop
aam
dec
mov
cld
jbe
add
push
inc
jecxz
jne
movsl
pop
loopne
sbb
jecxz
enter
out
sbb
scas
scas
mov
lea
xor
fbstp
mov
xchg
cmp
out
mov
mov
pop
je
mov
subb
imul
stos
repnz
rolb
xchg
dec
sbb
jbe
xorl
hlt
push
push
or
cmpsb
aam
push
aam
sub
sub
popa
out
out
aad
insl
jl
jecxz
dec
adc
mov
adc
shlb
push
outsb
lret
xchg
test
insb
enter
add
test
das
hlt
test
push
pusha
pop
mov
sbb
jo
aas
aad
fldenv
cmp
insl
push
jae
loop
iret
mov
clc
fisubrl
cmp
cmp
mov
ret
lods
fistps
and
in
and
dec
lcall
scas
insl
jecxz
leave
xchg
sbb
inc
pop
jnp
enter
bound
and
fstps
pusha
xchg
and
divb
mov
dec
sahf
inc
or
mov
stc
test
add
test
lea
inc
or
scas
mov
scas
sub
leave
pop
jo
mov
push
icebp
lea
pop
nop
pushf
push
or
mov
xor
ret
xor
mov
mov
sub
pusha
std
cmc
xchg
mov
leave
iret
and
orl
inc
pop
ficompl
push
add
jo
pushf
mov
popf
push
adc
jae
stc
testl
stos
mov
dec
mov
add
icebp
shr
jge
pop
push
adc
mov
and
popf
cltd
mov
jge
sahf
pop
aaa
les
in
dec
loop
sbb
loopne
mov
lock
adc
dec
sbb
jl
adc
push
jae
sbb
jmp
int
xchg
pop
mov
inc
insb
into
mov
test
dec
xlat
cmp
adc
aad
inc
xor
arpl
sub
or
repnz
inc
mov
imul
test
addl
pop
sbb
rcll
mov
mov
ret
pop
shlb
inc
or
and
lret
fnstenv
mov
icebp
cmpsb
lahf
add
out
in
push
imul
mov
or
in
xchg
and
add
mov
in
sbb
ljmp
movsb
add
lahf
cmp
adc
xchg
pop
test
mov
mov
fsubl
and
out
stos
xorb
dec
arpl
sub
dec
xchg
pop
fstpl
pop
jb
int3
cwtl
orb
lds
mulb
gs
jecxz
mov
pop
int
adc
test
cmp
test
or
sbb
lods
inc
xchg
sub
xor
int3
mov
test
jp
or
inc
insb
iret
test
enter
push
and
inc
pop
adc
cmp
jecxz
pop
pop
push
mov
lcall
mov
test
push
sub
or
pop
call
mov
neg
or
hlt
jae
and
xchg
aas
pop
repnz
sbb
scas
dec
jne
jle
or
gs
push
dec
mov
adc
repnz
sbbl
out
lret
or
jl
inc
or
mov
jge
xchg
movsb
loope
mov
sub
pop
mov
sub
adc
xchg
addr16
fidivl
decb
mov
lods
addr16
or
sub
mov
fsubl
mov
mov
adc
fstps
push
repz
jbe
fmulp
sub
cltd
sbb
mov
loopne
pop
out
dec
mov
xchg
imul
xchg
cli
sbbl
push
incb
jle
dec
cmp
fisubrl
lret
popf
insb
cmp
mov
xchg
leave
jb
outsl
es
mov
movsb
in
hlt
jno
dec
cmpsl
outsl
in
inc
in
xorl
xchg
aaa
jnp
and
fxam
sub
dec
lret
int
clc
cmp
stc
ja
mov
jo
aam
movsb
xchg
mov
inc
addr16
jnp
jmp
mov
xor
mov
insb
mov
push
loop
mov
into
cmpsl
jle
xchg
push
sbb
fisubs
mov
fdivrl
push
cwtl
adc
cmp
lods
fidivrl
mov
insl
mov
ss
jnp
cmp
xor
mov
mov
add
lea
adc
pop
pop
popf
or
out
pushf
dec
loopne
jge
das
movsb
inc
xchg
cmp
lret
and
xchg
stc
cmp
cwtl
iret
std
fstpt
daa
sub
cwtl
fwait
cmpl
insl
pop
arpl
cmp
push
or
and
sub
in
les
add
or
popf
pushf
imul
arpl
stos
ja
push
test
dec
movb
iret
dec
in
cmp
mov
adc
std
jbe
popf
xor
cmp
xchg
adc
pop
push
xlat
adc
push
ret
cli
jge
or
xor
xchg
out
mov
ret
shll
enter
in
jbe
out
aad
insb
xor
mov
adc
mov
in
cmp
imull
mov
aad
aas
inc
rorl
cmp
movsl
pop
cmp
mov
addr16
push
push
xor
mov
gs
cmp
adc
pop
xor
into
sbb
lcall
imul
push
sar
fsubrs
lods
subb
scas
add
cmc
int3
outsl
pop
addr16
fbstp
xor
dec
cmpsb
push
setge
aad
pop
xlat
into
xchg
push
cli
jge
jbe
add
scas
int
jg
mov
push
or
dec
enter
pushf
movl
inc
jp,pt
mov
pop
inc
das
hlt
mov
mov
pop
inc
xor
int3
fnstenv
sub
push
push
add
test
mov
test
push
inc
mov
mov
in
push
stc
jnp
xor
mov
sbb
sbb
dec
test
xchg
rorb
push
subl
push
lret
sbb
adc
lds
test
enter
xchg
adc
lea
sbb
xchg
and
mov
jo
pop
jne
hlt
lods
or
mov
orb
xor
lahf
fcos
adc
mov
xchg
sti
mov
std
xchg
inc
pop
jbe
xor
or
xlat
mov
and
sub
cmpsl
ret
dec
rolb
push
insb
adc
andb
pushw
insb
mov
adc
or
loop
add
int
rclb
mov
xorb
dec
inc
scas
adc
int
aas
sbb
jge
outsl
adc
add
scas
fistps
arpl
popa
not
pushf
jle
repz
jbe
push
xchg
mov
add
cmp
outsb
das
cmp
dec
and
or
cld
jb
out
pop
inc
shrl
data16
adc
xchg
pop
pop
cmc
scas
lea
jg
popf
movsb
mov
imul
jnp
loopne
xor
mov
pop
push
leave
push
out
jg
pop
pop
shl
jl
mov
into
push
sahf
mov
sbb
insb
push
addb
sbb
inc
sub
mov
out
and
sbb
push
cld
fstpl
push
xchg
dec
mov
les
xor
jns
xor
ljmp
pop
roll
ret
xchg
push
adc
pop
icebp
mov
xor
call
outsb
cmp
mov
inc
cwtl
mov
mov
aas
cmpsb
jp,pn
fdivl
pushf
fldcw
add
frstor
mov
mov
js
inc
add
in
mov
dec
xor
cmp
insb
pop
iret
or
es
jmp
std
and
dec
dec
cmp
scas
ret
roll
ds
mov
data16
sbb
push
or
jo
xchg
lahf
mov
jg
pop
cmp
rorb
int
int
hlt
loop
jmp
sub
out
adc
and
adc
mov
mov
dec
push
add
sub
mov
xchg
mov
mov
daa
adc
push
loop
or
dec
sub
fstps
das
cmp
cli
push
movsl
pusha
cs
into
or
jle
loop
ljmp
mov
bound
cmp
movsb
cwtl
ds
stos
push
jno
xor
inc
adc
test
sbb
xor
flds
adc
jo
fiaddl
or
xor
xchg
and
add
aam
or
add
pusha
push
xchg
inc
cmc
shlb
mov
flds
repz
dec
or
mov
xchg
insl
cltd
ret
flds
les
mov
popa
sub
pop
insb
loop
cmp
adc
repnz
dec
mov
sbb
xchg
imul
xor
std
dec
adc
daa
pop
push
cltd
jno
test
and
lock
std
pop
xchg
out
ljmp
in
jecxz
push
xor
shll
jle
mov
scas
jl
adc
test
lods
addr16
push
mov
sub
leave
adc
cmp
test
push
and
leave
jg
popf
or
pop
mov
mov
sub
cltd
inc
les
ret
addl
pop
aam
push
decl
pop
pusha
mov
ljmp
mov
lds
inc
dec
pop
call
or
pop
out
push
lret
imul
sbb
cld
popf
adc
fcompl
pushf
test
int3
pop
cwtl
xor
je
and
fwait
xor
or
add
scas
jmp
inc
int
cmc
inc
fidivrs
hlt
push
mov
in
test
pop
outsb
sbb
pop
jbe
pop
lcall
ja
fldcw
mov
insb
pop
insl
in
sti
les
call
aaa
add
push
loop
insl
out
sti
loope
add
cwtl
call
enter
mov
jge
xor
mov
shl
in
mov
loope
mov
push
mov
mov
jae
in
xchg
outsl
in
mov
pop
xor
fs
std
js
mov
stos
jge
and
push
test
lock
dec
into
push
xchg
inc
icebp
cmp
xor
mov
fcoml
nop
mov
ja
mov
fdivrl
into
call
clc
lcall
dec
pusha
adc
cmp
pop
movsb
cwtl
mov
mov
inc
pop
lret
mov
es
pop
push
cmp
sbb
pushf
jae
imul
sarl
mov
movsl
pushf
dec
loope
movsb
add
sti
cwtl
xchg
xor
xor
xchg
cli
sbb
pop
sbb
dec
into
mov
sbb
xor
jnp
jno
sbb
das
add
lock
sub
pop
jecxz
jg
xchg
and
mov
or
insl
imul
adc
in
imul
xchg
fmull
add
loop
and
and
je
fnstenv
es
fsts
jp
loop
es
mov
xchg
lock
cmc
add
mov
push
scas
lcall
mov
cmp
ljmp
adc
ja
lret
test
jp
fs
fwait
in
inc
cmpsl
xchg
or
imul
mov
cmp
clc
pop
in
fsts
dec
aaa
fldcw
dec
adc
ffree
dec
adc
mov
cmp
pop
or
jg
mov
movq
jle
mov
cmp
mov
xchg
cld
clc
xchg
xchg
adc
insl
loopw
ds
ficomps
jae
inc
push
push
test
test
pop
in
rorb
pop
lcall
sbb
xor
cwtl
ljmp
int3
popa
jecxz
inc
add
shll
pshufw
mov
into
out
in
jmp
and
xchg
adc
push
xor
shrb
cmp
pop
dec
and
dec
iret
xor
pop
test
push
mov
out
adc
ja
pushf
mov
jnp
pop
cmpsl
jp
mov
imul
cs
enter
jp
mov
jecxz
xchg
inc
sbb
add
ret
xor
or
shlb
sub
cld
xor
ret
inc
mov
and
icebp
jge
cmpb
xor
es
xor
mov
cmp
hlt
dec
push
ljmp
cli
cmp
inc
roll
mov
cmpsb
pop
in
aaa
outsb
dec
repnz
ficoms
movsl
popa
enter
xchg
dec
arpl
add
mov
jg
pop
jl
shl
or
or
xor
movsb
adc
in
dec
lods
push
outsb
enter
jno
xlat
push
pop
mulb
stc
rolb
jno
add
pop
adc
rolb
mov
jmp
mov
cmpsb
aaa
xchg
sub
outsb
loop
sarb
lea
fisubrl
push
negl
loope
insb
testb
cwtl
mov
pop
and
subl
and
daa
hlt
data16
jo
mov
lahf
cmp
out
movsl
cmp
repz
test
fidivs
mov
bound
adc
sbb
aad
inc
out
xchg
and
imul
pop
mov
or
imul
pop
adc
fwait
imul
mov
rol
push
mov
fwait
shll
or
int
xor
sbbb
pusha
fwait
mov
fidivrl
movsl
inc
out
ds
push
fnstcw
aas
push
mov
fs
outsl
in
mov
mov
rep
pop
ljmp
push
mov
mov
xor
add
clc
cltd
stc
mov
mov
mov
mov
loope
negl
xor
dec
test
xchg
pop
fwait
mov
pop
pop
scas
mov
in
or
incl
bound
cmpsb
pop
shr
pop
adc
jmp
fdivr
ret
xor
int3
shl
or
aas
xchg
leave
shll
call
jb
pusha
or
and
add
mov
mov
clc
sbb
ljmp
xchg
arpl
mov
adc
add
pop
shrl
push
lahf
push
sub
and
out
cmp
daa
ret
loop
repnz
xchg
mov
insl
cmc
and
cmp
jmp
aad
ds
cli
mov
les
pop
mov
push
inc
fsubrs
add
or
or
pushf
jno
mov
sub
repnz
dec
pmaxub
cmpsb
scas
lret
mov
fsubrs
jnp
and
xorl
in
inc
mov
mov
or
pop
std
fiaddl
stos
es
into
cmp
sbb
inc
sbb
fldt
add
push
inc
and
ds
jo
repz
pop
cmp
sbb
add
jae
bound
je
jbe
jl
iret
negb
adc
cmp
jbe
xchg
jae
inc
lret
loope
dec
add
xor
xor
jp
int
mov
adc
dec
xchg
inc
jne
addr16
insb
mov
scas
sub
and
sub
push
out
rcrb
push
iret
mov
mov
popf
pop
mov
xchg
xchg
cmp
insb
push
adc
and
xor
or
dec
lods
adcb
ss
lcall
mov
shrl
xchg
xor
jecxz
lret
dec
pop
cmpsb
inc
jns
add
cmp
push
xchg
cld
push
std
inc
adc
mov
ljmp
aas
xchg
sbb
cltd
jmp
pop
jp
and
enter
cmp
add
sbb
fistpl
outsl
jno
cs
jbe
ds
out
shrb
andl
cld
jae
jae
xchg
repnz
repnz
mov
out
mov
addb
aas
jecxz
negb
cmp
nop
push
pop
jg
pusha
and
cwtl
and
shrb
or
jo
push
cmpl
cwtl
push
xchg
popa
push
or
mov
aam
xorb
movsl
shll
sbb
int3
and
and
ljmp
cmpsb
mov
inc
cmp
ljmp
jnp
repz
or
mov
ja
js
lahf
mov
xlat
or
mov
add
subb
iret
sub
imul
inc
pushf
lcall
adc
jns
inc
pop
and
into
fsubs
mov
sub
sahf
iret
inc
inc
daa
mov
push
push
mov
mov
aam
std
leave
stos
pop
ds
push
jge
leave
add
xlat
mov
jl
sbb
pop
jae
js
jo
push
je
lahf
jo
pop
push
aam
or
pop
inc
repz
jne
fisubs
mov
mov
enter
pop
and
ret
bound
adc
pop
mov
xchg
outsb
hlt
stos
ret
xchg
xchg
xor
add
out
push
sbb
clc
sbb
imul
scas
cmp
fisubrl
repz
cmpsb
mov
add
pop
gs
adc
dec
or
imul
lcall
xor
jno
push
sub
or
in
mov
cmp
jbe
addb
dec
shll
dec
adcl
pop
mov
adc
pop
mov
insb
xor
ja
pop
inc
mov
popf
adc
mov
in
adc
jbe
or
and
jno
imul
cmc
mov
sub
inc
inc
jo
std
mov
icebp
lock
mov
pop
or
or
mov
adc
adc
sub
rcl
push
adc
mov
mov
scas
push
cmpsb
test
popf
mov
xor
js
imul
outsl
repnz
lea
int
andl
rcl
pop
inc
ljmp
icebp
adc
inc
inc
xchg
int
cld
movsb
dec
sbb
mov
push
add
jmp
jg
inc
jl
mov
lock
sbb
pop
sbb
sbbl
xchg
divb
add
jle
push
inc
inc
add
fsubp
jo
adc
lcall
mov
push
pushf
jns
dec
and
mov
inc
imull
stos
test
stos
fdiv
pop
sub
lret
xchg
stos
mov
cltd
pop
xchg
lret
sbb
jns
xchg
sbb
mov
sbb
gs
andb
fcmovb
jne
pop
xlat
pop
inc
add
adc
aas
jl
data16
mov
lcall
jg
lea
test
xchg
sti
cltd
and
sti
adc
mov
dec
mov
cmp
ljmp
and
insl
bound
push
mov
inc
push
jb
insb
out
sbb
cmpl
scas
lret
in
imul
jp
fldt
mov
es
sarl
push
xchg
sbb
and
lret
push
xchg
sub
gs
push
jo
in
and
pop
mov
stos
xor
enter
jge
or
pushf
mov
xchg
leave
stc
dec
clc
popf
adc
out
or
sbb
sub
and
adc
xchg
sti
jns
hlt
cltd
rcr
sub
fidivs
mov
jbe
inc
adc
mov
ss
dec
cltd
scas
ret
mov
negb
movsb
pop
pop
cwtl
fimull
xchg
les
pop
rcrl
sub
aaa
repz
in
clc
adc
pop
xor
adc
adc
inc
and
lahf
rcrb
test
sub
add
inc
imul
std
pushf
movsb
test
xor
je
adc
pop
add
sbb
je
push
iret
faddp
jmp
lods
icebp
sbbb
jecxz
mov
mov
dec
stos
pop
cmpsl
add
std
adc
cwtl
adc
add
add
stos
sbb
cmp
fisttps
mov
push
arpl
lods
mov
je
add
xchg
stc
shll
xor
cmpsl
inc
pop
in
shlb
xchg
inc
xor
dec
push
push
fiaddl
push
xor
inc
movsb
ja
pop
gs
xor
mov
adc
sahf
loop
out
inc
ds
aas
popf
xor
xchg
imul
xchg
add
mov
test
or
out
test
mov
fcmovne
mov
inc
shr
gs
iret
inc
or
fmuls
movsl
imul
fnstcw
sti
lret
push
sub
gs
add
call
mov
mov
sub
int
enter
in
add
mov
dec
mov
jle
test
push
pop
pop
sub
xor
ret
shll
movsl
jnp
in
ja
cmp
xchg
sarb
jno
sarb
jbe
push
fnsave
mov
ficompl
mov
mov
mov
mov
mov
or
hlt
repnz
andb
xchg
fdivl
dec
cmp
xor
vcvttss2si
rclb
sub
loop
data16
pop
push
jo
in
test
jg
outsl
pop
int3
pop
inc
mov
lods
insl
ret
or
cmp
sbb
jo
cmp
dec
adc
sahf
lds
mov
js
test
mov
std
push
into
mov
xchg
or
mov
into
iret
test
js
int
cmpsl
pop
addr16
aam
test
fildl
ljmp
jns
loopne
push
cmp
cs
fisttps
push
jb
adc
adc
mov
imull
dec
ss
ljmp
std
fstpl
sub
mov
inc
hlt
inc
mov
jb
mov
jecxz
mov
push
xorb
sub
iret
ret
in
pop
jnp
in
xchg
outsb
mov
xor
mov
ds
scas
lock
pop
jmp
xorl
popl
icebp
and
iret
cwtl
fiadds
sbb
stos
in
in
in
mov
jmp
mov
stos
fsubrs
fwait
cltd
movsl
xchg
ljmp
mov
xor
xchg
repz
jae
cmp
mov
aad
fisubrl
pop
scas
stos
sar
pop
ljmp
test
pushf
call
jmp
aad
je
xchg
pop
movsb
inc
push
dec
pusha
push
mov
lret
je
sub
pop
inc
mov
dec
adc
inc
pop
fbld
leave
cmpsl
ret
mov
dec
adc
or
sti
lods
inc
lds
jo
xchg
in
mov
fidivrl
and
mov
out
xlat
call
popf
call
cmp
sbb
push
cld
or
iret
ljmp
popf
push
cmovnp
test
ficomps
xchg
lahf
mov
dec
shlb
fdivrl
mov
aaa
adc
pop
push
into
sbb
pop
push
sarb
and
repnz
jl
push
repz
jne
repnz
dec
scas
test
test
mov
pmulhw
push
cmp
clc
inc
repz
pop
push
ficoms
inc
out
xchg
scas
lret
add
jge
jmp
movsb
inc
sub
pusha
aas
mov
xor
mov
es
xchg
jecxz
lods
aaa
iret
test
mov
call
shlb
stos
je
sbb
das
dec
xchg
call
mov
ja
xchg
jnp
sbb
xor
xchg
lock
outsb
jb
and
jnp
daa
mov
sbb
out
shlb
xchg
lahf
ds
xor
lods
add
pop
sti
sbb
stc
sbb
adc
push
pop
add
mov
inc
push
lahf
and
inc
mov
in
test
pop
ss
mov
push
je
pop
in
xor
outsb
push
adc
pop
pop
bound
sti
in
fs
ret
ljmp
push
inc
jae
imul
popa
jle
adc
inc
inc
shl
aad
cmp
aas
jb
or
pop
xor
mov
inc
imul
aaa
sub
in
pop
sbb
sbb
lret
jo
movsb
push
stos
stos
sbbb
stos
xor
sbb
xlat
in
add
push
mov
push
pop
mov
inc
and
mov
gs
in
sub
mov
sub
mov
cld
jle
mov
xor
cmp
sbb
int3
test
mov
push
mov
cmp
mov
add
outsb
out
mov
fnstcw
xor
push
jo
mov
icebp
pop
mov
shlb
mov
mov
rclb
sbb
imull
leave
pop
cmp
xchg
push
int
cmp
xlat
scas
rcll
adc
je,pn
dec
jne
adc
sbbb
mov
sub
hlt
add
les
xchg
fnstcw
mov
mov
jge
jmp
cltd
sub
fucom
and
adc
mov
in
and
sbb
hlt
imul
in
xchg
repnz
or
aaa
scas
sub
mov
fildll
mov
negl
pop
lods
ret
inc
bound
xor
ljmp
pop
lea
ret
outsb
inc
jo
adc
lcall
mov
lds
jo
pop
pop
test
cmp
lret
addr16
cwtl
out
add
and
push
inc
mov
lcall
outsb
mov
stos
push
cs
xchg
loopne
sbb
pop
and
out
or
test
pop
dec
cmc
js
xchg
loop
push
std
and
inc
push
and
mov
push
test
lea
out
inc
movsb
popa
cmp
sub
lods
mov
orl
andb
fdivrs
mov
rcll
pop
ds
mov
lret
mov
leave
mov
sub
lods
fdivrl
stc
call
mov
cld
subb
mov
aas
adc
stc
sbb
or
sbb
jecxz
cmp
sub
test
rorb
mov
pop
andb
and
or
xor
inc
mov
xchg
adc
jb
popa
insb
test
mov
das
repz
push
jns
cli
shll
scas
ds
push
and
mov
inc
inc
cli
nop
xchg
jns
out
test
sbbl
inc
sub
mov
xchg
add
cmpsl
fcomps
not
add
les
nop
ljmp
daa
in
push
test
test
insl
int
ljmp
nop
daa
repz
and
sahf
je
nop
sbb
add
lret
cmc
enter
movsb
cmpsb
and
out
shll
and
les
xor
pop
push
int3
and
cmpb
cs
stos
popf
inc
rol
ljmp
mov
fwait
test
in
psrlq
test
addr16
jp
aam
dec
mov
mov
or
cmc
cwtl
xchg
dec
stos
or
out
int3
inc
sbb
aad
insl
and
inc
inc
std
sahf
sbb
push
pop
mov
adc
sub
cmp
and
ret
ljmp
xor
std
xlat
or
xor
cs
xor
xchg
pop
lret
push
das
in
inc
fisubs
arpl
aas
repnz
not
adc
xlat
cmp
xlat
mov
in
pushf
pop
fistpl
dec
test
insl
lcall
dec
xchg
iret
scas
pusha
in
jns
pop
roll
jnp
test
in
mov
test
mov
mov
adc
test
inc
or
bound
popf
xchg
out
or
lea
dec
xchg
ror
out
push
or
push
scas
mov
dec
jle
shrl
and
adc
push
cwtl
or
xor
jae
xchg
roll
clc
ds
mov
aad
or
in
adc
ss
jge
dec
repz
scas
or
push
xorl
xor
push
xor
in
jecxz
mov
mov
xor
xor
orl
arpl
adc
xor
mov
clc
xchg
test
or
mov
push
loope
sbb
jecxz
sub
insl
sbb
lea
ds
mov
lret
pop
or
xor
dec
pop
das
and
sbb
outsb
add
rcrl
nop
js
stos
push
movsb
icebp
call
push
adc
dec
xor
ja
stos
lret
sub
cmpps
inc
int3
ficomps
sbb
pop
outsl
sbb
cmp
mov
ss
jle
gs
inc
testl
popf
outsb
mov
sbb
pop
rclb
jbe
imul
fstpl
cli
cli
push
loop
fmuls
jnp
ficompl
cld
adc
out
sarl
adc
test
std
xchg
xchg
mov
jo
or
and
mov
in
mov
mov
iret
sbb
mov
mov
ret
stos
dec
jle
or
jne
mov
les
fwait
sahf
and
dec
sbb
dec
pushf
or
sub
int3
adc
add
roll
je
pop
icebp
cld
add
mov
clc
jle
xor
mov
lea
push
fwait
dec
mov
rorl
pop
ss
pop
ss
dec
out
jp
cmp
scas
sbb
mov
and
add
stos
aad
mov
xor
xchg
int3
dec
scas
sarb
sbb
sub
jns
idiv
lods
je
sbb
adc
push
pop
mov
and
js
pop
ja,pt
xchg
rolb
movsb
adc
ljmp
pop
jg
inc
mov
aas
icebp
das
add
dec
push
cmpsb
push
cmp
int3
xchg
adc
imul
lods
cmp
test
push
ss
inc
in
movsl
and
jb
xchg
jecxz
scas
fdivrl
sbb
xchg
insb
mov
lea
mulb
lcall
lds
adc
int3
xor
aam
bound
imul
mov
mov
outsb
and
pop
dec
cmp
sbb
push
add
jl
insb
sbbl
in
fs
add
out
aam
mov
xor
dec
mov
mov
ret
std
int
push
rcrb
mov
ljmp
bound
test
sub
pop
mov
lea
incb
fstl
xor
mov
sbbl
aas
addl
in
mov
inc
cmpb
mov
push
push
fisubrl
cmpsb
pusha
mov
int
or
and
jne
mov
bound
out
call
add
fiadds
add
adc
addr16
or
mov
repnz
cmp
clc
add
subl
cs
mov
push
jno
outsb
sub
outsl
dec
mov
fsubl
hlt
sbb
repnz
scas
and
sbb
adc
xchg
jge
xchg
ret
add
ljmp
roll
inc
ret
mov
xchg
mov
rol
test
add
addr16
jo
sub
mov
xchg
cs
hlt
mov
xor
add
sub
xchg
or
mov
cmp
adc
inc
adc
push
dec
and
mov
mov
add
ljmp
pop
scas
push
dec
aas
test
loope
xchg
jp
mov
xchg
sub
xchg
mov
subl
stc
jp
pop
jno
push
js
lds
dec
sub
xor
xor
and
hlt
or
xchg
adc
push
aas
and
inc
scas
xlat
pop
xchg
sahf
pop
cmp
sub
xor
mov
or
out
or
ret
adc
xor
and
pop
loopne
ljmp
sub
mov
dec
add
mov
and
inc
ret
push
in
dec
scas
stos
fcomip
mov
jns
rorb
sub
rorb
fistpl
punpckhwd
push
movsl
out
xchg
insl
adc
rorl
ds
mov
mov
inc
mov
sbb
adc
cmp
mov
das
pop
pop
cmc
into
xchg
inc
adc
adc
fstl
jecxz
call
sub
cmp
mov
sbb
enter
mov
test
or
push
push
or
int3
mov
push
jbe
stos
out
mov
scas
outsb
jecxz
leave
repz
cmc
subl
push
mov
cmc
movsl
push
dec
cmc
inc
repz
mov
mov
dec
mov
loop
sbb
in
cltd
mov
mov
mov
mov
mov
cmp
lret
cmpsl
lcall
lcall
je
repz
pushf
loop
aam
test
xor
test
mov
incl
outsl
sbb
add
xor
xor
aam
or
mov
shrb
inc
out
arpl
xchg
adc
js,pt
inc
cli
test
icebp
stos
lods
jno
cmpsb
jo
mov
jl
inc
outsb
mov
mov
out
mov
out
aad
mov
xor
push
and
jbe
push
sub
addb
sbb
ficompl
js
sahf
cmc
add
and
cmpsb
xor
int
enter
cmp
fdivrp
push
and
fdivrs
lds
imul
mov
sbb
aas
iret
and
xchg
shlb
or
outsb
std
push
cmp
pop
pop
fs
fstps
mov
push
sbb
aas
adc
xchg
ja
jbe
push
adc
jp
jb
pop
add
in
insl
fwait
test
das
sbb
push
int3
decb
lock
jl
jnp
mov
outsl
mov
inc
xlat
shrb
arpl
ljmp
repnz
cmpb
sbb
jbe
arpl
ret
jo
xchg
dec
cwtl
mov
jmp
ret
or
aaa
outsl
mov
mov
ret
mov
movsl
xchg
mov
cld
insl
pop
xchg
push
pusha
ss
nop
addb
mov
mov
out
cmc
ss
popa
stc
in
jo
adc
cmp
sbb
adc
push
aad
sub
mov
cli
std
push
jbe
test
xchg
repz
das
pop
loop
das
enter
pop
fiaddl
int
xchg
or
fisubrl
aas
shll
scas
mov
sub
int3
fldl
xchg
gs
inc
or
dec
icebp
jp
lret
popa
in
push
mov
hlt
jns
leave
nop
in
fs
push
aad
cmp
adc
insl
sub
push
jb,pn
jg
and
or
cwtl
popf
loopne
aad
andb
into
clc
lock
or
add
stc
arpl
arpl
jo
or
popf
mulb
out
out
dec
mov
movsb
inc
rcrb
clc
or
sbb
cmp
mov
push
into
jae
or
fstl
mov
lcall
sub
out
sub
and
out
cmp
loopne
adc
loop
adc
xor
outsl
add
into
js
and
into
clc
mov
adc
and
dec
adc
cmp
push
outsb
je
jl
neg
mulb
bound
stc
jns,pn
enter
pop
add
iret
lret
mov
pushf
cmc
jns
xor
inc
cmp
daa
pusha
bound
in
loop
cmp
fildll
int3
adc
sbb
imul
push
xchg
and
sub
sub
inc
xchg
push
mov
les
xor
lahf
fcoml
fldcw
fs
aam
cmpsb
fbld
sub
add
lock
jb
femms
xor
dec
mov
pop
push
jmp
xor
or
pusha
out
xchg
gs
daa
cmp
mov
cmp
add
dec
jns
push
dec
pop
push
cld
jnp
add
imul
lahf
add
inc
in
push
dec
aaa
pop
add
sub
add
clc
mov
pop
enter
call
leave
repnz
and
jnp
mov
insl
insl
sbb
les
fistpl
insb
dec
or
dec
int
inc
std
jge
or
bound
pop
pop
cs
cmp
das
mov
mulb
outsb
mov
pop
and
cmp
out
cmp
or
add
mov
xchg
jg
jle
cmpsl
xchg
orps
fwait
sub
fistl
shlb
push
jmp
mov
and
pshufw
aas
pop
aas
lods
adc
and
sub
mov
pop
pop
push
mov
out
mov
cmc
mov
or
or
push
test
bound
dec
mov
lcall
lret
xor
push
jecxz
mov
ds
xchg
fdivr
js
add
sbb
jne
and
mov
notb
out
stos
test
mov
scas
or
inc
mov
cmp
incb
loope,pn
lcall
cmpsb
dec
mov
sbbl
and
or
xchg
inc
shrb
or
jbe
jb
cmp
xchg
inc
xlat
pop
scas
test
fimull
hlt
push
mov
das
shll
inc
into
lret
mov
outsl
cld
outsl
out
mov
fildl
mov
sub
jo
jle
lea
movb
loop
xchg
int3
adc
je
outsl
in
stos
in
aaa
roll
pop
push
push
or
iret
addb
jne
aaa
cmpsl
cli
stc
lds
push
push
insb
popa
sbb
sar
sbb
dec
jge
nop
push
in
mov
push
mov
or
aas
pop
jg
pop
add
in
insb
add
gs
lods
clc
dec
ds
jg
or
jae
popa
push
loopne
jns
jg
pop
adcb
inc
xchg
or
fisubl
test
add
sbb
pop
int3
cmpsb
mov
adc
pop
dec
push
cltd
xchg
xor
inc
fstps
sbb
mov
sbb
pusha
imul
out
stc
lret
ds
loope
jo
pop
loope
movsl
lds
orl
in
sbb
jbe
xchg
icebp
add
aam
inc
aam
push
or
jmp
loopne
push
shlb
popa
in
add
xchg
mov
call
sub
or
inc
dec
push
mov
jo
enter
push
loope
js
push
fcompl
sbb
sub
aas
call
pop
cs
das
xchg
jns
bound
subl
fs
push
sbb
pop
mov
loopne
scas
xor
popf
scas
jl
setnp
inc
es
push
mov
daa
lret
inc
mov
pop
cld
fsubl
mov
sbb
lods
cltd
add
inc
mov
inc
sub
sbb
xor
jl
mov
jmp
fs
adc
inc
adc
jb
sarl
aas
daa
cmp
loop
push
adc
sub
mov
iret
idivl
jl
daa
bnd
jne
mov
daa
pop
out
push
pop
and
in
out
or
pop
xor
mov
das
adc
add
push
loope
mov
or
fwait
mov
push
inc
sbb
ss
jecxz
mov
ds
pop
add
cmp
add
jae
mov
push
fisttps
mov
mov
cmpsl
push
loopne
push
cmp
jo
inc
jg
out
test
in
or
insb
push
xchg
popf
test
dec
mov
test
ret
outsl
movsl
pop
std
fisttps
pop
mov
add
cltd
insb
ficomps
test
fwait
cs
jmp
aad
adcl
mov
into
insl
mov
pushf
outsb
daa
mov
jl
add
out
sahf
add
ljmp
fisttps
int
or
stos
stos
xchg
mov
or
pop
decb
pop
pop
data16
add
decl
iret
xor
fsubrl
add
push
mov
mov
loope
lcall
pop
nop
std
test
add
mov
out
cmp
test
or
or
gs
xlat
mov
sbb
push
imul
shrb
mov
push
sub
hlt
sub
lods
ficompl
jecxz
insl
lea
in
pop
pop
mov
mov
fldenv
int
adc
pushf
jp
adc
push
stos
pop
pop
or
lea
cli
clc
jbe
les
insl
or
jbe
jecxz
lods
sti
pop
scas
clc
mov
inc
aad
push
inc
dec
repz
scas
xchg
cmc
fs
cwtl
inc
fs
sbb
repnz
subb
test
fwait
rolb
jl
adc
adc
jne
push
pop
mov
push
sbb
cmp
jns
sarl
fsubr
imul
out
jecxz
push
push
mov
mov
mov
adc
mov
pop
pusha
cmp
push
hlt
rclb
mov
cmp
inc
int3
pop
outsb
pusha
cmpsl
mov
mov
stos
mov
xchg
xchg
sahf
dec
xchg
stos
rorl
arpl
fsubl
jb
push
daa
daa
adc
and
shll
inc
movsl
mov
jne
add
sbb
push
fisttpll
add
cs
mov
xadd
cmp
adc
mov
out
jl
imul
add
mov
ds
popf
mov
jne
sub
inc
pop
scas
std
pusha
cmp
nop
aam
lock
scas
mov
xorl
sub
dec
idiv
jecxz
mov
jae
dec
xor
imul
inc
pop
ss
int3
inc
jp
push
in
bound
ljmp
inc
jmp
xchg
in
shlb
mov
lahf
setge
loop
pop
fistps
lods
imul
push
jmp
sbb
dec
in
sub
das
cmp
outsl
les
add
cmpsb
sarl
dec
mov
push
sub
cltd
leave
mov
xchg
loop
test
xor
lret
arpl
cmp
jo
insl
add
fnstenv
mov
sub
test
mov
loope
notb
rclb
popf
test
xchg
adcl
xor
jae
mov
or
push
dec
or
xchg
pop
lcall
stos
fs
stc
mov
stos
outsb
add
stc
js
jge
mov
jecxz
inc
aaa
fildl
push
or
addr16
dec
sbb
in
scas
pop
daa
in
mov
arpl
enter
cmpsl
add
jle
sbb
and
movsl
cmp
or
aad
mov
mov
iret
clc
cld
ds
jne
adc
and
sub
xor
inc
mulb
mov
imul
sti
mov
out
in
adc
push
call
push
mov
mov
stos
jecxz
add
or
mov
jmp
inc
stos
sbb
fsqrt
lock
out
and
cs
cmpsb
je
add
cwtl
push
add
daa
lds
mov
sahf
mov
sti
xor
rol
xchg
mov
mov
sub
mov
add
lock
rcrl
lods
xor
outsb
lea
jp
sub
push
xchg
mov
sub
pusha
jg
repnz
cs
dec
cmpsl
xchg
mov
jle
mov
fstl
pusha
movsb
sub
inc
inc
ret
imull
ret
xor
popl
xchg
jmp
jle
movsb
scas
icebp
je
sbb
aas
fs
and
mov
je
jo
shr
xor
pop
movsl
jae
in
add
cli
mov
mov
mov
mov
sti
test
pop
aaa
mov
in
mov
mov
mov
fbstp
push
bound
add
mov
adc
cmpsb
pop
add
cmp
pop
mov
shrb
rorl
jns,pn
push
add
nop
clc
cmc
or
sahf
arpl
adc
jg,pn
jmp
pop
or
xchg
jnp
jns
stos
daa
inc
aas
test
pop
pop
movsl
movsb
sbbl
pop
mov
lods
pop
loop
jno
push
out
mov
shlb
out
and
mov
push
inc
jl
cld
mov
les
mov
xor
test
mov
push
shrl
inc
je
das
inc
dec
mov
insl
pop
mov
mov
pop
jg
aad
mov
adc
in
into
int3
dec
mov
mov
shll
ret
dec
scas
sbb
adc
mov
call
sbb
test
cmpsb
add
aad
lcall
adc
out
ljmp
jp
inc
cmpsl
xor
test
es
ds
and
cmc
adc
lods
sub
xchg
sbb
clc
pop
in
jo
or
aad
sub
and
shll
add
loop
cmp
cmp
push
clc
in
mov
pop
ja
lds
daa
inc
mov
jle
mov
add
jle
addr16
fadd
pop
and
jns
fs
push
aad
and
fldcw
das
outsb
cwtl
dec
incl
test
dec
nop
push
inc
xchg
aad
hlt
or
xor
pop
lret
pop
sub
cmp
xchg
and
xchg
jnp
mov
int
js
or
test
xlat
sub
lcall
or
dec
int3
dec
sub
int
adc
mov
xchg
xor
gs
sub
mov
rorl
mov
test
adc
fs
xor
cmp
ds
aad
fsubs
roll
push
push
js
movsl
jmp
movsl
in
cmc
xor
adc
cmp
and
cmp
push
movsl
repnz
mov
dec
xchg
pop
int3
mov
xor
fdivr
mov
and
add
sti
push
inc
ficoml
pop
es
js
jbe
cmc
adc
mov
outsl
cmp
cmp
inc
cmp
adc
pop
cltd
xchg
fdivrl
daa
cmp
rcr
cld
cmp
xchg
fisttpl
pop
arpl
int
repnz
add
xor
test
mov
add
loop
fbstp
jbe
sub
shrl
mov
popa
adc
sbb
dec
pusha
or
inc
leave
sbb
clc
xor
fs
xor
es
iret
pop
sbb
sub
xor
xchg
dec
push
push
xchg
add
add
mov
cmp
cmpsb
cmp
cltd
xchg
jno
mov
cwtl
or
and
xor
push
aam
push
scas
jmp
cmp
xor
sbb
pop
mov
rorb
pop
inc
or
imul
decl
std
mov
adc
sahf
pop
mov
adc
push
pop
push
mov
insl
cmc
gs
and
xchg
or
xor
scas
inc
pop
dec
pushf
cmpsl
sahf
lods
and
xlat
into
test
mov
jmp
sbb
ret
adc
sti
xor
mov
dec
negb
xchg
fdivs
mov
xor
and
negl
pop
out
lret
lea
push
sarb
mov
fildl
lods
clc
fsubrl
loopne
cmp
lcall
test
insb
fwait
jno
cmp
fcom
jae
mov
ret
fs
in
xor
inc
mov
adc
push
jne
sbb
loopne
sbb
adc
sub
inc
lds
in
adc
sub
fwait
dec
inc
push
jge
and
xlat
ds
xor
in
inc
lock
jmp
mov
dec
addr16
sbb
cmp
fbld
sbb
aas
int
sub
and
xchg
dec
insl
aas
xchg
pop
inc
pop
out
xor
mov
out
je
mov
xchg
lock
sub
xchg
bound
sbb
adc
int
inc
adcb
pop
push
out
mov
aad
les
lock
inc
push
fcompl
mov
dec
xlat
ljmp
ret
xchg
xchg
xor
cltd
jnp
cmpl
cmp
mov
sbb
xchg
push
sub
dec
xor
outsl
ret
lock
jbe
jp
xlat
stos
fcom
enter
sbb
ret
fnstenv
addr16
mov
out
daa
popa
sahf
sti
dec
sub
rcl
mov
mov
dec
mov
lret
rolb
adc
sub
mov
xor
mov
sbb
movsl
jno
pop
mov
aad
cmc
lock
iret
xchg
inc
adc
out
js
mov
aam
sub
stc
das
mov
fcmovb
sbb
test
jg
adc
lods
ror
lds
aad
or
xor
cmp
sbb
popa
xor
fucom
mov
adc
sbb
inc
xor
out
sbb
stc
daa
push
xchg
mov
push
pop
xchg
popf
mov
pop
je
mov
cmp
fdivl
mulb
ss
pop
popa
imul
dec
stc
lds
mov
call
jno
in
pop
aas
lahf
lret
add
nop
test
adc
outsb
cmp
or
cmp
lret
cmpsb
cmp
jg
xchg
jecxz
push
fnstenv
mov
test
inc
addl
mov
push
jge
sahf
lret
filds
add
cs
shl
test
sahf
push
jbe
mov
or
cmp
sbb
and
jnp
pop
or
lea
fsts
ljmp
lahf
rorl
data16
arpl
and
aaa
inc
and
add
jl
jmp
jl
sub
movsb
inc
and
pop
orb
jge
data16
fcompl
xchg
mov
push
das
pop
mov
ret
in
or
test
lret
mov
sub
dec
ljmp
dec
sarb
xor
jno
dec
inc
jo
inc
mov
sub
jb
notb
mov
mov
cmp
in
push
ret
mov
sub
div
in
cmc
dec
imul
or
test
sbb
add
sbb
testb
or
out
addr16
and
aam
sub
jb
push
cli
jnp
lret
dec
test
inc
or
jl
movsl
int
mov
jno
jg
in
aaa
inc
mov
cmp
in
nop
and
imul
ja
js
test
mov
cli
scas
sbb
push
shrb
cs
xchg
insb
mov
cmp
jle
mov
xchg
adc
gs
je
mov
cld
push
or
movl
xchg
and
jo
mov
rorl
cmpsl
mov
jl
xor
inc
dec
xor
sbb
pop
nop
pop
in
jle
and
push
imul
cmp
loop
mov
dec
cmpsb
idivb
hlt
or
pop
stos
dec
or
mov
xchg
dec
ret
mov
clc
rcll
mov
sub
mov
in
in
movsl
sbb
xor
testb
or
mov
or
xchg
cmp
das
fs
mov
xchg
inc
call
lea
ds
ds
sub
and
dec
push
scas
dec
movsb
in
arpl
mov
cmc
mov
xor
push
mov
cwtl
iret
cmpsl
and
sbb
lret
and
push
adc
mov
jb
sub
jle
clc
mov
cmp
int
pop
ljmp
rclb
lcall
ss
mov
imul
cmc
adc
or
testl
dec
or
movsb
push
pop
dec
sbb
mov
mov
shrl
sbbl
push
outsl
das
mov
adc
out
pop
rcl
sub
das
stos
ljmp
fwait
cmp
pop
sub
je
pop
xor
adc
scas
or
les
sahf
sbb
add
mov
cs
lock
add
js
cmp
adc
in
cmp
loope
add
cmp
pop
fistl
and
push
mov
roll
lods
pop
int
dec
lock
xor
cmp
push
inc
pop
mov
mov
jne
adc
sub
in
or
pop
ret
clc
nop
outsb
pop
daa
ds
xor
jbe
sub
cmp
pop
aaa
fsubl
mov
testl
mov
add
cmp
adc
push
xchg
pop
repz
add
xor
outsb
push
jbe,pt
pop
add
es
mov
ss
jg
addr16
fstp
inc
lock
inc
jno
push
shll
fs
cmpsl
or
dec
aaa
mov
lds
inc
sub
pop
xor
lcall
adc
mov
outsl
repnz
in
bound
mov
fadds
arpl
push
xor
dec
add
mov
add
xor
inc
lret
sbb
xchg
sub
xchg
push
cwtl
or
clc
inc
push
scas
xor
test
dec
sbb
xchg
inc
pushf
push
enter
sbb
lret
ss
xor
imul
rcl
lcall
int
adc
jo
jle
cmp
sub
mov
adc
cmp
dec
popf
add
add
mov
gs
rcll
in
popa
nop
add
jp
mov
movsl
lahf
and
std
je
in
mov
xchg
push
repnz
xor
xchg
out
dec
jbe
cmp
lcall
pop
or
xor
outsl
lret
mov
pop
mov
mov
sahf
mov
les
xchg
jmp
jae
jmp
sti
leave
pop
or
pushw
test
call
nop
or
sti
out
mov
ljmp
sbb
cld
jl
outsl
test
cmp
repz
mov
push
push
adc
jecxz
push
push
push
pop
mov
pop
int
push
stc
mov
es
jmp
leave
inc
fdivr
test
pop
mov
xor
mov
cli
cmpsl
jno
dec
ds
inc
mov
pop
enter
dec
out
add
dec
out
mov
aas
xchg
pusha
lret
hlt
pop
mov
or
mov
inc
mov
cmpsb
cmp
adc
push
push
clc
jmp
movsl
xchg
inc
les
cmp
ficompl
or
in
adc
sbb
push
outsl
mov
rcrb
ljmp
push
fdiv
dec
push
mov
jmp
jb
fbld
rorl
js
and
cld
cmp
inc
lahf
lret
or
adc
or
cld
scas
sbb
lds
loope
nop
add
sbbl
or
or
lret
jo
in
ficoms
icebp
pop
mov
mov
mov
jne
aas
add
xlat
out
mov
add
xlat
je
clc
or
scas
lods
scas
scas
sub
in
jg
jp
sahf
mov
xor
dec
or
fisubrl
rcl
inc
inc
adc
pop
add
sbb
jp
jbe
dec
subb
xor
popf
in
xchg
call
adc
leave
mov
mov
pop
loop
cmp
push
mov
fstpl
aas
cmp
rcll
and
lcall
clc
stc
test
push
sarl
in
xchg
pavgw
fisttpl
lret
mov
mov
mull
cmpl
cmp
xor
les
sub
cmp
in
xchg
mov
inc
sbb
aad
jp
jge
pop
dec
mov
loop
repz
jp
push
fstpt
inc
into
pop
pop
sub
push
test
loop
sub
imul
in
or
repnz
sbb
ds
jbe
out
mov
jmp
cmpsl
test
pop
les
jo
ss
mov
in
cld
shrl
jne
popf
or
and
mov
cli
leave
test
dec
insl
push
mov
mov
xlat
mov
mov
dec
jmp
icebp
movzbl
pop
xchg
popf
aam
sbb
inc
adc
jne
jp
dec
or
xchg
jle
push
out
dec
pop
scas
adcb
imul
incl
imul
pop
dec
je
aam
mov
jbe
mov
in
bound
stos
sbbl
scas
ds
ja
dec
into
int
cmc
popa
inc
push
adc
orl
sbb
inc
dec
sbb
dec
je
sub
add
jae
sbb
add
icebp
in
ret
test
mov
mov
call
aad
adc
scas
cmc
pusha
bound
mov
add
fdivl
gs
nop
xchg
sub
xor
sarl
enter
push
ret
js
jne
sbb
push
and
pop
mov
xor
test
and
xorl
jmp
in
cmc
mov
mov
sub
mov
call
or
pusha
xchg
test
lods
mov
cs
scas
push
or
gs
push
push
jmp
push
pop
adcl
aam
cld
cmp
add
dec
out
jle
and
xor
pushf
repnz
int
int
test
push
mov
sub
imul
je
mov
jl
std
lcall
dec
cmc
push
pop
push
ret
sub
mov
adc
add
pop
and
pop
aam
ret
popf
sub
das
gs
js
mov
fs
xchg
lret
xchg
pop
inc
mov
jl
or
shl
in
shlb
shlb
aad
mov
lods
jno
in
xor
add
data16
pushf
xor
xor
aad
mov
enter
jecxz
sahf
mov
stc
imul
xor
push
in
or
pushf
outsb
mov
mov
test
aam
add
cmpsl
mov
ja
in
popf
out
movsl
mov
sbb
cmpsb
add
pop
xor
pop
and
pop
or
and
lods
pop
dec
add
pop
xor
scas
bound
and
jp
stos
pushf
cld
sbb
jns
faddp
inc
imul
xchg
sbb
je
mov
ret
int
in
rolb
inc
mov
lods
int3
adc
fldcw
aaa
pop
mov
push
fcmovu
test
shlb
sti
xchg
sahf
ror
xorb
lret
sub
in
outsb
cli
inc
dec
inc
ficoms
jp
sbb
mov
test
jnp
push
jo
adc
pusha
call
lds
rcrl
lds
ss
or
nop
mov
out
clc
cmp
adc
movsb
mov
out
add
or
or
clc
iret
xchg
ja
and
imul
dec
lea
jno
pop
js
sahf
push
scas
jmp
jp
mov
dec
rcr
add
shll
sarb
sbb
lea
cltd
cmp
stos
test
cwtl
jge
pop
jbe
pop
stos
push
or
and
mov
mov
inc
mov
daa
add
xchg
mov
cli
xor
dec
nop
mov
add
out
adc
xor
ret
push
mov
fsubrs
pop
mov
xor
ja
aaa
shlb
cmp
lock
imul
sahf
mov
loop
xchg
movl
pop
cld
push
test
cmp
mov
and
sbb
add
dec
scas
push
cmpsl
fs
or
inc
rclb
loope
dec
mov
jecxz
gs
ret
mov
cld
sbb
xchg
and
stos
arpl
mov
daa
cmp
mov
mov
ds
xor
push
imul
xchg
cmp
gs
pusha
xor
test
test
mov
or
pop
rcll
push
mov
ja
lret
xor
mov
lods
push
test
orl
out
jo
rcll
xchg
jns
pop
ds
cwtl
mov
mov
mov
xlat
mov
rol
pop
add
es
data16
or
inc
daa
mov
popa
pop
scas
pusha
sub
ss
and
mov
jmp
adc
sub
fmull
adc
loopne
xor
mov
ret
pop
fsubrs
jo
dec
or
or
out
jbe,pt
dec
or
shrd
mov
stos
xchg
loopne
pop
out
cs
mov
xchg
div
in
push
mov
call
lea
fisubrs
pop
std
in
xor
das
fisubrs
mov
fwait
sub
and
mov
dec
addl
cs
pop
pop
popa
loope
addr16
xchg
sahf
xor
les
xorb
and
push
sub
dec
enter
shll
pop
subl
push
fldenv
int3
jle
mov
inc
and
mov
scas
mov
sbb
push
shl
int
xchg
aas
adc
xor
pop
and
in
pop
js
and
push
fdivr
sub
mov
add
xlat
inc
xor
sbb
xchg
add
fdivrl
mov
inc
stos
xchg
add
sub
stc
das
stos
pop
inc
fwait
leave
inc
popa
push
arpl
movsl
cli
pop
xchg
inc
cwtl
fs
sub
mov
ljmp
or
int3
loop
shlb
mov
inc
jno
out
cwtl
sbb
pop
add
insl
cmp
movsl
out
out
fadd
pop
xor
jae
inc
outsb
mov
lahf
fisubrs
call
or
push
inc
or
in
jb
dec
xchg
mov
es
pop
in
je
inc
test
mov
in
jecxz
lods
cltd
fimull
mov
cmpsb
push
pusha
jle
add
xchg
insb
mov
inc
out
xchg
mov
mov
pop
ret
xchg
jno
cld
sub
js
inc
jle
mov
insl
in
mov
adc
sbbl
daa
aaa
aad
dec
mov
ret
or
pop
xchg
loop
jge
jbe
subb
push
adc
add
mov
jno
sbb
add
testl
xchg
in
mov
movsl
in
sti
sbb
adc
xor
mov
and
add
nop
pop
imul
sub
push
pop
pop
sub
insb
ljmp
sub
call
dec
adcb
inc
xorb
pop
repnz
xchg
roll
inc
cmp
add
xor
bound
insl
hlt
test
int
sahf
xor
inc
jne
pop
leave
mov
pop
fs
adc
negl
jg
xor
cs
int
pavgb
inc
jecxz
popa
je
mov
dec
data16
and
dec
and
leave
mov
clc
xor
cmpsl
mov
stc
stc
xor
pop
cmpsl
push
xor
mov
lea
mov
mov
cmpsb
dec
adc
rolb
xchg
cmp
pop
jbe
shl
push
in
mov
mov
adc
lods
notb
sbb
push
xor
movsl
pmulhuw
rolb
shll
rol
mov
ret
pop
mov
or
lds
jmp
in
xor
outsb
add
adc
sbb
lcall
pusha
aas
jno
pop
test
dec
dec
or
jge
sbb
mov
add
add
pusha
cmp
js
jno
cmp
adc
ss
and
outsb
jle
addr16
insl
ret
push
xchg
fidivs
jns
int
fcomip
sub
mov
cli
mov
pop
lahf
addl
or
xor
orl
imul
sub
aas
je
pop
out
out
jl
shll
insb
fimull
jo
cld
jo
mov
and
add
mov
fs
les
mov
movb
sub
fwait
xchg
leave
xor
sahf
xor
sbb
jg
iret
mov
jmp
push
pop
mov
test
clc
push
int3
jmp
dec
test
mov
cld
outsl
pusha
and
sub
mov
insl
call
sbb
jle
out
push
push
jecxz
push
adc
sti
call
mov
mov
popa
push
xor
jne
fcomps
jp
sbb
cli
jmp
rcrb
jl
jo
js
dec
jo
jbe
fldt
mov
mov
cli
mov
loop
jno
dec
pop
add
lret
cli
mov
inc
data16
mov
test
cmpb
aaa
mov
clc
mov
mov
jbe
adc
xlat
fsubrl
cltd
jb
dec
lds
mov
jecxz
jno
mov
lock
pop
push
js
imul
lods
filds
adc
fxam
ljmp
adc
mov
imul
pop
mov
cmp
ficomps
inc
xor
sbb
inc
shl
orl
ret
mov
and
in
lock
stos
lcall
mov
out
hlt
sub
cmp
insb
sub
lret
adc
fldenv
mov
xlat
iret
call
add
stos
mov
movsb
mov
stc
fisubrl
dec
push
sbbl
in
cmp
aam
xchg
fs
jae
mov
jl
lods
jp
sarl
mov
jae
fnstcw
das
push
cmp
xor
dec
sub
filds
mov
shl
dec
dec
jno
add
mov
paddusb
xlat
repz
mov
cmc
dec
adc
movl
push
sub
lahf
std
adc
and
nop
insb
pop
xor
pop
sarl
arpl
loope
pop
or
mov
xor
inc
xor
lahf
add
mov
or
adc
inc
push
mov
push
das
out
cmp
pop
pop
sub
sub
les
jns
xchg
test
int3
fs
mov
pop
stc
int3
leave
aaa
sar
mov
rcr
insl
lods
cmp
mov
insl
cltd
push
lahf
or
out
xor
dec
rorl
cwtl
movsl
pushf
mov
repnz
dec
fmul
outsl
pop
int3
out
mov
addb
xchg
sbb
pop
sub
mov
and
rcrl
popa
out
fs
pushf
insl
flds
stc
cmp
mov
cmp
call
cmp
shlb
and
lcall
nop
in
addr16
pop
jns
loop
ds
inc
inc
std
nop
hlt
and
mov
inc
cmp
outsl
mov
cwtl
cmp
jmp
or
pop
daa
je
outsb
mov
adc
xor
or
les
cmc
inc
sbb
ss
mov
xchg
das
scas
jae
in
sub
xchg
enter
test
dec
pop
jl
and
sub
test
push
mov
lods
out
dec
and
or
xchg
jmp
pop
dec
push
in
mov
ret
add
ja
insb
adc
jle
leave
push
jle
xor
cltd
xlat
mov
jnp
test
xor
icebp
addr16
xchg
or
push
hlt
and
fwait
jne
loop
sbb
cli
jns
mov
or
xor
test
test
lods
maxps
test
mov
xor
mov
xor
out
xchg
in
add
lods
movsl
std
mov
or
subl
into
stc
cmp
mov
inc
xchg
push
test
xlat
add
and
mov
xlat
std
adc
inc
movsb
icebp
push
add
les
out
xor
cli
mov
in
inc
gs
dec
jne
jnp
push
arpl
movsb
push
roll
add
jb
mov
es
push
mov
or
cmpsb
add
add
lahf
scas
dec
andb
sahf
scas
lock
cli
sarb
loopne
add
jecxz
subl
xchg
xor
mov
lahf
mov
mov
je
push
pop
fmull
pusha
jb
dec
dec
aad
inc
test
stos
mov
out
mov
pushw
scas
in
xchg
or
data16
inc
cli
xchg
dec
out
faddl
cmp
dec
mov
push
xor
stos
je
ret
addl
cmp
outsl
das
cmp
in
rclb
outsb
push
jmp
sbb
loopne
addr16
es
inc
adc
loope
sub
insl
jmp
push
hlt
pop
stos
mov
movsb
jnp
js
sarb
lea
test
fistpl
rcr
mov
outsb
in
sub
sub
fmuls
adcl
push
loope
call
xchg
push
sub
ret
std
out
inc
adc
dec
sbb
xchg
es
cmp
mov
xchg
in
andps
mov
sub
or
pop
shll
cmpsl
lods
ret
pushf
inc
push
and
dec
inc
pop
add
fidivl
ret
add
push
out
mov
lret
ljmp
jl
dec
shll
pop
push
adcl
push
dec
push
mov
xor
lcall
lea
fstl
cmp
or
or
or
dec
fs
or
mov
push
push
push
xchg
mov
jbe
addr16
xor
outsl
pop
cmpsl
mov
push
aas
mov
in
push
push
dec
mov
xchg
adc
sbb
sub
adc
push
insl
or
sbb
sub
xchg
stos
cmp
add
dec
imul
inc
dec
push
jo
mov
xchg
mov
mov
cmp
xor
jo
mov
loopne
popa
aas
aam
inc
pusha
ret
test
not
popf
pusha
lock
push
fsubl
xchg
mov
test
inc
icebp
xor
jns
pop
and
ret
add
add
outsl
cmp
and
cld
je
jbe
mov
aad
sub
mov
fsts
addr16
daa
mov
mov
add
out
or
lea
and
clc
filds
push
cwtl
mov
outsb
scas
imul
adc
xchg
jno
pop
stos
test
fisttpll
mov
push
jl
and
xchg
ret
add
add
push
mov
rcl
jae
push
arpl
popa
rcll
adcl
cwtl
xchg
out
outsb
mov
xor
stc
cmp
jno
mov
dec
mov
test
in
pop
fidivrs
punpckldq
in
jae
xchg
mov
inc
mov
imul
mov
cmpsl
sub
xor
mov
and
sahf
insl
mov
add
stc
mov
js
les
repnz
mov
aaa
pop
icebp
or
sbb
jecxz
clc
outsl
mov
jns
dec
pop
mov
test
pop
into
or
mov
inc
push
out
jp
jge
adcb
xor
pushf
push
push
out
add
test
inc
mov
movb
or
and
add
dec
test
push
repnz
mov
dec
imul
jnp
icebp
test
ror
fistpl
jb
imul
dec
fbstp
aad
fs
cmpsl
repnz
lea
push
ret
ror
insb
dec
nop
mov
adc
mov
scas
js
or
push
dec
jae
sahf
dec
cmp
and
mov
jne
out
adc
sbb
dec
iret
jns
repnz
push
and
shll
sti
mov
add
fisubl
lret
push
mov
in
popf
dec
inc
push
and
adc
sub
mov
inc
pusha
pop
add
divb
test
push
sub
xor
ss
mov
mov
out
cs
xchg
inc
lea
add
jae
xlat
push
jo
or
pushf
mov
test
cmp
dec
insl
sub
orl
adc
add
jnp
icebp
sub
mov
test
cmp
scas
bound
dec
mov
push
inc
sti
dec
ret
inc
cmpsl
bound
repnz
in
sahf
lods
xchg
sbb
push
fwait
xlat
dec
jle
push
les
or
push
jmp
xor
xor
ja
adc
cmp
mov
bound
inc
lahf
push
cmp
dec
or
je
je
mov
popa
push
lret
push
ret
nop
pushf
adcl
imul
stc
pop
dec
packsswb
gs
push
lds
jp
inc
xchg
xor
outsb
xor
test
xchg
lods
dec
mov
cltd
lcall
and
pop
pop
cmp
call
xor
mov
lahf
xor
dec
push
cmp
scas
inc
out
jbe
outsb
addb
pop
in
lret
xchg
push
and
sub
nop
add
pusha
pop
inc
fdivl
lock
lds
jnp
jecxz
cmp
orl
and
jno
mov
mov
cmp
fistpll
movsl
cmc
mov
rorl
push
iret
mov
es
push
scas
loop
fldl
sbb
push
pop
sub
mov
aas
idivb
dec
pop
mov
mov
loope
cmp
sbb
inc
outsl
xchg
in
sub
xchg
sahf
sub
ret
add
in
loop
lcall
divb
xor
mov
addl
and
mov
lds
adc
pop
cmp
adc
dec
out
mov
lock
push
pop
jge
rorb
call
addr16
lea
jne
add
mov
jmp
dec
jne
call
inc
fdivs
pop
aas
aaa
cmp
fcompl
mov
sahf
fistpll
xchg
cmpsb
into
les
jle
insl
mov
inc
clc
mov
dec
adc
lea
ljmp
jg
mov
push
in
adc
adc
jae
cli
adc
nop
cltd
xchg
inc
cli
addr16
into
test
sub
lahf
or
xchg
or
inc
icebp
sbb
inc
int3
or
inc
idivb
xor
and
aaa
std
aaa
cmc
xchg
outsl
mov
jb
sahf
xor
cmp
addr16
divl
mull
xor
inc
int3
mov
sbb
subl
dec
sbb
cwtl
enter
roll
xchg
or
cmpsb
clc
mov
sbb
pop
data16
fidivrl
idivb
pop
mov
lret
inc
in
push
adc
stc
add
subb
addr16
mov
mov
add
pop
xchg
or
sub
xor
xchg
mov
aaa
insb
pushf
insb
push
cltd
xchg
jle
sti
sub
das
call
icebp
int3
or
xor
and
jno
push
jge
loope
mov
in
arpl
adc
imul
loop
addl
jbe
mov
inc
aam
cmp
roll
and
aam
jge
fdivs
ret
inc
andb
cmp
nop
jmp
mov
pop
add
add
pop
loopne
cmp
mov
mov
xchg
aad
and
lods
nop
test
sbb
insl
fdiv
lods
push
and
pop
movsb
stos
lcall
movsb
jno
and
lds
stos
push
jmp
jb
xchg
xlat
ret
into
repz
outsb
mov
jg
mov
dec
ret
insb
ds
rcrl
ljmp
sub
mov
push
sub
sahf
mov
push
xlat
mov
loop
add
mov
fbstp
jo
push
gs
fwait
cmc
sti
adc
ffreep
mov
test
ljmp
lds
repz
data16
ficompl
jbe
mov
jae
mov
jge
sbb
cmp
in
cmp
jb
jecxz
mov
cmpsl
daa
sbb
add
inc
jnp
mov
rorb
repnz
cmp
jg
in
jno
inc
test
dec
gs
leave
std
int
jge
out
ja
adc
leave
pop
out
gs
fdivrl
mov
push
dec
fbld
outsb
adc
mul
fisubs
mov
mov
aam
fwait
or
cmp
jno
dec
xor
cmpsb
or
jmp
scas
notl
std
inc
shlb
adc
repz
sub
mov
out
aam
sub
mov
or
das
cwtl
or
push
and
cmp
jne
or
in
push
lret
stos
mov
repnz
data16
pushf
testl
jno
pusha
inc
inc
cmpsb
push
sub
sbb
cmpsb
push
and
pop
push
jp
roll
pushf
cli
mov
push
push
pop
sti
and
mov
hlt
jl
inc
lahf
movsl
push
loope
jnp
jl
dec
popa
xor
shrb
lret
andl
dec
nop
rcll
xor
mov
fs
pop
in
mov
mov
sti
mov
data16
leave
fbld
or
int
mov
pop
mov
cmp
lea
mov
mov
mov
xchg
insl
adc
pop
adcl
sub
add
jp
adc
sbb
pop
jmp
and
adc
lahf
in
clc
or
mov
cmp
out
movsl
out
scas
int3
xor
mov
add
je
lods
leave
cli
xor
enter
and
dec
repnz
xchg
push
sbb
leave
adc
ds
mov
xchg
pop
cmpl
inc
movsb
iret
int
add
mov
movsb
in
xchg
out
movsb
mov
mov
ret
cmp
loope
bound
jne
std
stc
das
pop
pop
or
mov
scas
mov
mov
or
xchg
mov
out
pop
jns
pusha
lcall
mov
loop,pt
rcrl
inc
lea
mov
test
push
inc
jl
mov
dec
sti
cmpsb
mov
inc
cmp
add
cmp
sbb
push
popf
pop
lret
roll
mov
or
insb
jmp
popa
fbstp
leave
rol
xchg
shrb
and
pusha
ja
mov
enter
jbe
dec
sub
insl
sub
shl
jmp
into
lds
dec
pop
jbe
pop
push
lea
or
push
shrl
dec
arpl
pushf
mov
sahf
pop
int
repnz
leave
or
rorb
lea
lods
lds
pusha
ljmp
std
push
gs
xchg
jge
sbbb
loope
jp
outsl
sahf
fsubs
mov
pop
mov
pop
rcrb
mov
inc
pop
xchg
icebp
je
inc
aad
mov
fdiv
jae
jle
mov
call
mov
add
fisttps
jmp
dec
ss
in
add
adc
dec
fmuls
aas
sub
lods
or
inc
insb
adc
pop
sub
pop
cmp
js
xchg
daa
incb
into
in
pop
clc
cmp
pop
les
cmp
jmp
les
data16
add
data16
and
pop
sub
les
out
xchg
pushf
adc
imul
rorb
xor
repz
in
mov
dec
bound
notl
pop
pop
imul
cmp
jg
mov
lods
push
sub
bound
mov
arpl
out
xor
push
jnp
mov
or
or
xchg
sbb
pusha
push
outsb
ret
dec
insb
push
nop
dec
lret
outsl
pop
jb
cli
fwait
mov
dec
addr16
out
loop
or
pushl
jo
inc
in
out
popa
push
push
test
imul
in
cmp
sub
cli
sahf
popa
lea
mov
fcmovu
mov
xchg
adc
movsl
mov
mov
scas
push
inc
popa
push
and
out
mov
test
outsb
xchg
adc
pop
pop
adc
mov
pop
add
mov
adc
push
jmp
lcall
adc
lret
in
jae
movsb
xor
aad
roll
mov
sub
pop
pop
aas
push
pop
cmpb
das
mov
jl
pop
int
in
xchg
or
aas
mov
lods
nop
std
dec
push
daa
mov
int
mov
fildll
adc
repnz
xchg
stos
jge
pop
jae
sbb
cmp
mov
mov
enter
in
mov
sub
in
jmp
push
sub
push
imul
gs
adc
inc
das
push
cmpsb
mov
es
mov
lahf
shll
inc
jle
loop,pn
add
pop
mov
data16
loop
mov
out
push
lahf
mov
sub
push
mov
mov
fnstcw
std
iret
cwtl
int3
add
cmc
push
movsb
cmpsl
adc
jmp
mov
mov
mov
sbb
xor
jo
daa
mov
lock
out
sbb
loopne
data16
fidivrl
iret
or
out
mov
add
pop
dec
mov
xchg
ret
mov
sbb
push
popa
inc
jmp
xchg
stc
ret
inc
cmp
xor
mov
pop
mov
sub
mov
adc
push
out
push
push
xchg
das
dec
clc
or
mov
mov
pop
jle
mov
pop
shrl
pop
scas
or
add
push
jl
add
sti
dec
push
outsl
stos
xchg
and
sahf
outsb
data16
js
push
mov
in
pop
movsb
pop
sbb
mov
dec
xchg
lcall
cmp
rcrb
and
mov
flds
cwtd
and
dec
cmp
jmp
or
iret
jo
cltd
hlt
inc
sub
push
stc
add
ret
jns
std
xchg
loop
ficomps
lea
and
fstpl
scas
mov
lock
and
jbe
and
fistpl
jae
pop
cld
lock
push
xchg
pop
inc
cmp
add
sahf
aaa
push
inc
imul
jmp
int
adc
sub
test
mov
test
adc
xchg
add
mov
out
or
mov
les
ljmp
pop
mov
in
pop
cld
lods
decb
out
inc
xor
aas
nop
pop
std
inc
sub
test
sbb
xor
js
inc
mov
inc
xor
push
repnz
cmp
xchg
sbb
test
subb
pop
sub
pop
or
fcmovu
int
xchg
xor
cmp
outsl
pop
dec
cwtl
cmpsl
out
ret
movq
mov
jle
add
add
lods
push
ja
push
into
xor
cmp
fldl
subl
das
jge
lods
xor
fdivrl
lds
jle
and
addr16
jecxz
mov
mov
mov
test
aad
lds
jb
mov
pop
pop
cmp
imul
adc
notb
insb
nop
xor
mov
sahf
es
pop
ret
mov
test
into
pushf
dec
fs
stos
sub
test
mov
mov
sarl
fsubl
mov
ss
jns
fwait
jge
ljmp
push
xchg
lock
in
scas
xchg
mov
push
aas
into
fbstp
cmp
int3
sub
pop
es
out
xlat
mov
mov
lock
fldt
ds
and
cmp
pop
popa
mov
fs
cmc
dec
pusha
idivb
dec
cwtl
repz
test
push
cwtl
xor
nop
scas
add
test
insl
rorl
fwait
sarb
cmpsb
dec
add
pop
add
neg
icebp
mov
add
mov
mov
insl
fisttpll
lahf
pop
inc
xchg
xor
cli
sbb
pop
mov
movsb
imul
or
cwtl
iret
xchg
in
fdivr
shr
adcl
jl
shl
inc
adc
icebp
das
lea
cmc
xchg
shll
out
or
stos
sahf
fnstenv
leave
sub
or
lock
cli
lret
pop
mov
cmp
in
sahf
movsb
cltd
nop
aaa
in
jmp
cmp
fwait
push
adc
cmp
mov
in
xchg
cmpl
jns
in
lds
pop
aam
arpl
jg
aas
mov
push
aam
rcrb
and
popa
cmc
mov
xor
pop
iret
aas
jnp
xor
push
scas
push
jge
flds
pop
xorl
mov
or
gs
sbb
iret
pushf
popf
lahf
in
roll
add
lds
ljmp
xor
stos
mov
or
nop
jle
sahf
mov
mov
addr16
cmp
lcall
lock
clc
cmc
dec
rorb
add
in
call
inc
add
sub
test
in
gs
sub
dec
xor
aaa
pop
imul
or
lock
inc
push
addr16
ror
lods
inc
inc
push
sub
aam
mov
lods
data16
mull
les
jmp
push
dec
aam
imulb
mov
mov
push
mov
psubb
ret
mov
sbb
fnstenv
jb
adc
mov
stos
or
popa
test
cmpsb
lods
cli
aad
stos
lods
adc
dec
lods
cmp
out
out
xor
divb
fs
fxch
sbb
hlt
cmp
inc
and
std
xchg
jmp
push
incb
cld
enter
dec
xor
loopne
daa
es
push
sar
jl
pusha
push
in
jmp
imul
fs
jle
scas
push
cmp
in
jle
shll
fwait
stos
stc
dec
add
sarb
jo
imul
sub
pop
add
stos
or
and
jmp
pusha
push
out
in
pushf
ret
ret
je
xchg
push
dec
and
lock
add
cwtl
lods
jmp
cmp
test
hlt
xor
test
xor
mov
jmp
stos
jp
push
int3
dec
sbb
sbb
pop
fdivrs
mov
lret
jmp
inc
in
cwtl
xor
push
shl
adc
lahf
ds
fmull
xchg
test
outsl
loopne
jmp
ret
sub
push
mov
jbe
inc
stos
idivl
sbb
fwait
push
test
sub
mov
add
roll
dec
mov
mov
mov
adc
out
push
dec
push
cltd
mov
mov
movsb
imul
sbb
push
adc
add
xchg
ja
daa
dec
arpl
cld
dec
xor
xorb
mov
inc
into
and
push
lods
sub
cltd
int
add
push
pop
sbb
ret
movsb
cmpsl
incb
ja
sbb
repnz
into
out
nop
push
mov
push
adc
pop
push
add
and
fistl
cmc
xor
mov
andl
jle
imul
repz
dec
repnz
cmpsl
cld
pop
mov
and
mov
jp
xor
btc
mov
sbb
mov
xchg
push
xor
or
lea
les
or
ja
out
test
pop
push
movl
mov
pop
push
mov
cmp
jl
lret
pop
xor
popa
bound
push
rcrb
bound
and
push
jge
push
jmp
pop
xchg
sub
xor
scas
dec
xchg
push
jbe
add
mov
mov
stos
pop
dec
inc
cwtl
xorb
cmp
ss
pop
xchg
pusha
out
jmp
cltd
in
fs
lahf
imul
or
sbb
mov
ss
sub
pop
cmp
lret
inc
fiaddl
dec
xchg
outsl
mov
push
arpl
lods
data16
or
inc
xchg
mov
pop
adc
scas
sbb
adc
arpl
negl
enter
pushw
mov
xchg
push
pop
sbb
lret
fcomps
xchg
insb
clc
sarb
lcall
inc
xchg
dec
testl
sbb
mov
sub
cwtl
pop
inc
fwait
mov
inc
jge
fiaddl
mov
or
mov
fsubr
mov
pusha
lahf
jbe
test
pop
xor
les
xor
hlt
pop
dec
mov
mov
sub
sbbb
in
push
mov
into
movsb
pop
add
insl
aas
pop
int
ret
or
cli
bound
cmp
xchg
out
rclb
mov
in
xchg
sbb
enter
jno
dec
imul
mulb
mov
decl
adc
cli
ljmp
push
imulb
test
enter
add
jno
rcrl
mov
sbbl
imul
xchg
icebp
subb
into
dec
movsb
inc
arpl
popf
sbb
cbtw
add
xlat
lds
mov
mov
sbb
rorl
pushf
mov
xchg
mov
jmp
fldt
add
adc
in
adc
scas
push
pop
inc
in
pop
cmp
pop
cmp
mov
les
rolb
jmp
daa
sbb
mov
sbb
pop
in
add
xor
push
fcoms
dec
jmp
clc
pop
sbb
pop
cltd
mov
sbb
insl
std
mov
sub
inc
leave
clc
lods
clc
std
xor
aaa
int
lods
test
ljmp
dec
sbb
sbb
into
inc
pop
hlt
or
int
ret
call
sbb
push
daa
outsl
in
and
dec
mov
pop
roll
and
loope
inc
xor
int
sbb
xor
in
xchg
ss
into
js
add
push
mov
lret
mov
inc
and
xchg
mov
jge
insb
and
in
in
sub
ja
cs
inc
negb
incl
sbb
les
inc
mov
jg
inc
adcb
xchg
dec
adc
shlb
inc
add
int
xchg
cmp
pop
scas
xor
pop
jp
sbb
orl
cs
sub
sub
xor
loope
and
sub
sub
cwtl
jb
sbb
add
popa
mov
sbb
mov
jecxz
mov
fnsave
mov
pusha
nop
mov
mull
or
das
call
mov
lret
cmp
or
dec
xchg
std
in
hlt
xchg
xchg
fucomp
ljmp
add
push
sbb
mov
jns
inc
cmp
insb
or
inc
push
add
pushf
xor
pop
jae
pop
mov
cmp
adc
int
inc
ds
psubd
xor
adc
iret
call
add
lahf
sbb
cmc
xorl
mov
add
or
xchg
cmpsb
nop
lret
out
xchg
outsl
xchg
cwtl
push
daa
fisttpll
sub
push
mov
cmp
mov
mov
test
fs
dec
or
lods
movsl
adc
bound
or
pushf
inc
gs
add
ret
mov
adc
idivb
adc
pop
xchg
lock
imul
dec
or
lahf
jge
pop
stc
out
push
and
sbb
xor
addr16
pop
sbbl
inc
xchg
jno
xor
aam
call
aad
sub
int3
pop
inc
cmc
leave
add
adc
bnd
sti
mov
mov
push
xchg
add
pushl
push
addr16
xchg
pop
cmp
or
repz
or
fwait
in
cmp
xchg
cli
sub
or
in
cmp
scas
mov
shlb
jmp
mov
mov
cmp
in
jae
mov
cld
lret
les
je
push
adc
push
fcom
cmp
insl
sub
icebp
mov
lock
iret
aas
std
es
shrl
sub
pop
add
repnz
xchg
inc
pop
sbb
jp
fildll
in
out
and
arpl
test
cmpsb
std
mov
in
or
pop
rcl
fldcw
mov
mov
inc
add
imul
into
loopne
popa
push
inc
push
in
dec
shlb
pop
test
jns
push
fidivrl
sahf
sub
out
movsb
mov
mov
notb
fisttpll
dec
and
jle
push
mov
mov
mov
inc
add
xchg
cld
lock
inc
xor
mov
cltd
addb
xchg
fbld
imul
int
jecxz
mov
lock
cwtl
cmp
mov
clc
test
jns
xchg
adc
pop
xchg
sub
dec
pop
data16
xchg
adc
pop
insb
test
mov
jne
sti
leave
mov
xchg
xchg
push
lcall
pop
test
orl
cmp
xlat
aas
inc
bound
dec
pop
mov
loopne
fs
inc
pop
jge
stc
xchg
lds
clc
xchg
jne
jnp
jnp,pt
sbbl
xchg
sub
sub
fmul
dec
sub
mov
fcmovnbe
fs
iret
ds
stos
and
xlat
stos
sub
xorw
mov
loop
ja
lods
push
xchg
sbb
xor
movsl
push
imul
add
dec
or
jmp
adc
inc
mov
clc
pusha
push
test
add
insb
ret
fwait
add
push
jns
loope
xor
pop
ret
lret
lea
dec
jl
adc
rclb
cmp
cmp
mov
nop
sub
scas
lods
and
mov
add
jle
clc
jb
pop
ficoml
inc
adc
aam
mov
fsubs
mov
mov
pop
in
lea
outsb
dec
in
cmp
sbb
mov
ja
mov
jb
jmp
iret
incl
in
out
fdivr
xchg
into
add
repnz
movsl
out
js
test
mov
xor
mov
adc
push
inc
and
movsb
cmp
mov
das
insb
je
mov
movb
lcall
adc
cmp
movsl
pop
stos
in
jecxz
pop
in
ret
pop
xor
cwtl
test
pop
add
mulb
or
fcmovnb
in
lret
ss
push
out
mov
test
cmp
cmp
mov
lds
pop
std
imul
sbb
jle
sub
adc
jno
fidivs
adc
movsb
loope
and
xchg
sub
cmp
gs
cli
or
push
loop
mov
out
sub
ljmp
mov
mov
js
lds
adc
out
rcl
mov
xchg
jle
enter
pusha
into
rcrb
jo
pop
ret
divl
or
cmpsl
add
sahf
call
mov
das
call
mov
aas
xchg
adc
idiv
mov
jl
jne
mov
sub
arpl
xor
dec
aam
imul
push
sbb
hlt
shll
xor
cld
rolb
mov
push
and
push
and
sbb
stc
xchg
jbe
repz
jns
inc
ret
pop
mov
mov
enter
data16
mov
int
popa
pop
or
or
aas
stos
jne
push
int3
inc
loopne
jp
xchg
push
xchg
sub
dec
mov
outsb
cmc
cmp
out
cli
and
clc
fnstsw
stos
and
stos
mov
loope
adc
popa
inc
aad
fs
js
inc
xchg
inc
sub
pop
nop
xlat
mov
jp
sbb
mov
scas
ss
fsubl
xlat
bound
mov
test
or
inc
cmp
push
mov
add
and
cmpsl
mov
pop
inc
pop
imul
por
shll
shrb
xor
sub
sub
jmp
mov
test
add
pop
mov
xchg
xor
dec
int
lahf
lahf
cld
mov
cmp
xlat
rolb
pop
lods
push
fs
test
addr16
xor
adc
mov
aam
lahf
pusha
loop
fidivl
out
test
rcr
outsl
adc
lret
xchg
jns
insl
pop
ljmp
sub
or
out
fucomi
xchg
xor
push
sub
mov
out
mov
out
sub
adc
or
loop
pop
jb
mov
rol
mov
inc
in
xor
pop
ret
dec
dec
fsub
sub
aas
add
leave
loop
mov
add
fsts
push
mov
mov
mov
mov
pushf
cmc
mov
in
inc
inc
lods
add
sub
pusha
add
and
jo
mov
mov
fildl
push
ss
dec
dec
repnz
sbb
andl
push
add
repz
cmp
mov
arpl
inc
pcmpgtb
shll
xchg
push
fisubs
and
mov
jge
mov
add
leave
aad
loope
jmp
or
clc
pop
jecxz
fldcw
inc
shlb
inc
pop
mov
cs
mov
pop
cwtl
movsl
shrl
pop
mov
rol
sti
call
movsb
out
inc
jle
jp
add
inc
cmpsl
int3
shll
pop
testl
ljmp
xor
aaa
aaa
cs
push
pop
jmp
cmp
call
int
lods
cmp
aaa
ljmp
sbb
lods
fsubrl
pop
adc
mov
fsubl
mov
call
ror
aaa
mov
fcomi
or
in
push
pop
pop
in
test
in
jg
jle
or
push
repnz
inc
cli
out
scas
loopne
adc
add
mov
call
loopne
fmuls
mov
popa
inc
pop
xchg
inc
mul
or
push
xor
negb
stc
ror
shll
lahf
aaa
js
sbb
inc
pop
inc
in
popa
mov
in
out
pusha
cmc
adc
fcomip
icebp
inc
or
dec
ret
push
pop
in
les
jo
push
push
clc
js
xor
xchg
scas
pop
test
inc
or
push
push
push
inc
ss
ja
orl
clc
push
xor
scas
pop
dec
mov
dec
int
scas
fsubs
int3
xchg
xor
scas
adc
pushf
negl
daa
and
dec
jno
mov
jns
sbb
cld
out
rcll
inc
loopne
test
data16
and
or
mov
sarl
sbb
inc
push
xlat
cli
mov
movsl
call
jecxz
stc
in
test
call
jge
xlat
cmp
pushf
test
sub
mov
stos
nop
es
xchg
fwait
into
cmpsb
xor
lock
sbb
repnz
sub
or
jmp
nop
push
clc
gs
or
add
sarl
dec
or
loopne
test
bound
xor
or
mov
lds
fsubp
mov
and
xchg
jns
cmp
loop
cwtl
and
ss
jno
jb
mov
inc
sbb
das
jns
gs
imul
aaa
or
pop
rcrl
xchg
sti
and
jecxz
inc
cmp
mov
xor
sbb
fsubl
ror
add
sbb
lods
pop
dec
sbb
jmp
test
hlt
jecxz
add
push
jno
movsb
push
sub
or
fs
mov
or
or
ret
rol
pushf
xor
mov
mov
jmp
pushf
shl
and
fimull
or
lds
cmp
mov
out
enter
aam
pop
adc
sbb
faddl
clc
pusha
add
int3
nop
cli
mov
xor
fs
mov
loope
fmuls
dec
lods
xlat
add
cld
loopne
push
jns
mov
and
push
cmp
jne
outsl
movsb
fneni(8087
push
out
mov
dec
out
xchg
leave
js
pop
push
cmpsb
pop
loopne
pusha
pusha
shlb
push
cmp
stos
jns
scas
rcrb
lcall
xchg
push
mov
xchg
pop
mov
or
or
inc
cmp
add
mov
aam
xchg
inc
mov
or
mov
push
jnp
shl
cmp
lcall
cmp
add
push
mov
xor
cmp
fs
lahf
popf
repnz
or
jnp
pusha
pop
sahf
and
ss
clc
adc
dec
pop
sub
shr
mov
mov
loopne
enter
inc
push
icebp
xchg
add
mov
arpl
xorb
sbb
daa
jge
daa
or
lret
mov
inc
pushf
cs
test
hlt
dec
push
xchg
andl
int3
pop
hlt
insb
push
fstps
xchg
cmp
mov
dec
js
and
gs
mov
movl
xorl
pop
bound
imul
dec
out
aas
ret
dec
cwtl
adc
sub
push
xchg
leave
aad
stos
mov
in
inc
xor
and
lret
out
stc
sub
cmpb
rcrb
xlat
popl
push
scas
mov
sbb
ret
adcb
pop
pushl
ja
jae
stc
mov
clc
stc
push
call
lahf
in
and
call
ret
shlb
stos
jge
dec
cmpsl
xor
jmp
notl
andb
adc
mov
int3
pop
or
mov
insb
push
cmc
add
xor
adc
imul
jb
push
pusha
add
in
adc
clc
or
iret
fidivl
mov
movsl
jmp
dec
cwtl
nop
mov
xor
sbb
xchg
add
or
ret
popf
call
fstl
jnp
pop
icebp
mov
jnp
test
test
fdivl
loop
or
jae
test
lahf
mull
mov
xor
out
jb
dec
mov
loop
test
inc
ret
xor
mov
enter
jge
test
xchg
adc
xor
jecxz
or
or
mov
and
xorl
pop
pop
das
leave
jmp
sub
mov
movl
push
dec
inc
mov
dec
mov
inc
mov
push
mov
rorl
mov
bound
test
test
iret
and
inc
data16
lret
mov
and
push
mov
faddl
and
xchg
fcomp
test
test
add
mov
mov
inc
push
and
fidivl
les
xor
loopne
jnp
xchg
loope
xchg
stc
in
iret
fnstenv
or
mov
mov
adc
lahf
add
fdivrl
int
mov
ljmp
imul
add
push
test
adc
orb
jle
in
jno
jb
and
aam
cmp
mov
or
and
gs
pop
gs
in
pusha
mov
and
jns
icebp
out
cli
pop
sub
sub
jnp
popa
or
sbb
test
mov
dec
add
sarb
movsl
into
lea
lcall
rcr
pop
jno
pop
dec
pop
movsb
repz
mov
imul
jb
repz
sbb
xchg
pop
push
ds
xchg
scas
outsb
outsb
mov
fistl
dec
test
mov
add
and
jns
out
mov
sub
stc
test
mov
xchg
xor
mov
mov
and
imul
cld
leave
mov
xor
jp
fsubrl
mov
ret
test
add
roll
jp
jg
lea
cli
mov
jno
xor
adc
and
lcall
sub
movsl
adc
out
loope
cmp
mov
mov
mov
cmpsl
inc
inc
dec
fisttps
dec
call
jecxz
mov
sbb
cwtl
cltd
stos
xor
cwtl
fsubl
jle
mov
and
add
lds
ljmp
aas
xor
cmp
mov
rcll
cmp
icebp
nop
in
jle
pop
je
imul
xor
pop
add
xchg
pop
in
jp
push
dec
cmp
xor
push
jbe
sub
popa
jbe
mov
jle
mov
fldl
xchg
dec
mov
and
mov
lods
mov
rcr
repz
cmp
add
jg
inc
imul
mov
fcoml
push
push
sbb
sbb
mov
in
insb
adc
call
mov
mov
mov
sbb
stos
insb
dec
out
addr16
inc
or
int3
dec
jecxz
dec
mov
aaa
in
pop
les
jle
mov
inc
inc
xor
sar
shlb
jge
add
mov
xchg
sub
push
mov
loopne
in
test
ss
test
rcr
pop
nop
dec
fstl
stc
jge
adc
iret
jo
icebp
int3
mov
xor
test
mov
adc
mov
ss
xchg
pop
sahf
xor
ja
bnd
sbb
mov
testb
call
cs
fcomps
xlat
and
fbstp
sub
jl
je
or
icebp
sub
imul
aaa
push
adc
push
push
xor
jmp
out
ds
and
loop
pop
mov
jae
sbb
fdivrs
ljmp
int3
push
mov
mov
add
divb
pushf
sbb
adc
mov
xchg
sub
push
cmpsb
mov
into
inc
je
sti
out
jo
int
lret
xchg
push
adc
into
insl
pop
add
xor
and
add
mov
dec
xchg
outsl
and
addr16
dec
addl
add
sbb
std
in
pop
cmp
outsb
adc
add
xor
xchg
ja
pop
cmp
cmp
jno
pop
scas
push
push
rcr
in
push
inc
cmc
in
adc
adc
arpl
mov
pop
mov
dec
enter
outsl
out
xchg
push
xchg
mov
movsl
stc
pop
stos
xchg
out
add
mov
addl
into
sub
arpl
lods
sahf
push
frndint
jno
mov
out
sub
sbb
je
scas
sbb
ret
call
imul
sub
adc
adc
mov
enter
pop
dec
imul
jmp
mov
dec
pop
push
pop
inc
add
add
cmp
push
inc
dec
dec
es
test
stos
push
andl
nop
lds
adc
data16
mov
fimull
aaa
aaa
xor
out
and
pusha
mov
mov
mov
mov
fistl
stos
fnsave
lret
js
add
add
punpckhdq
mov
jae
push
and
aad
jno
cmpl
sti
lcallw
cmp
lahf
cmc
xchg
lods
and
rcl
movsb
clc
xchg
ret
bound
xor
mov
outsb
sub
lds
sti
popa
xchg
hlt
cmp
and
sbbb
test
insb
xchg
or
mov
xor
push
mov
cmc
mov
xchg
push
fnstsw
xor
std
xor
xor
pusha
cli
rorb
ror
adc
shll
das
test
or
push
pop
xchg
or
xchg
jge
loope
nop
hlt
in
pop
in
pop
ss
pusha
daa
test
mov
mov
scas
lock
mov
pop
xor
or
jno
and
mov
lods
dec
fimull
jne
xchg
mov
insb
xor
in
mov
test
into
or
and
into
xchg
dec
std
push
bound
push
cmp
xor
ret
stos
and
xchg
jno
loope
repz
inc
out
add
mov
mov
outsl
cmp
les
mov
cmp
jmp
aas
jno
sbb
cld
sarl
mov
pop
inc
sbb
jne
sbb
mov
and
ret
ss
and
dec
and
insb
shlb
cmp
push
cs
stos
imul
xor
rep
adc
sarl
cmpsl
fldcw
jmp
mov
push
adc
and
mov
add
push
or
shrb
fwait
lcall
inc
ljmp
fcmovnbe
mov
fisubs
loope,pt
popa
outsl
jbe
add
faddl
cmp
jnp
test
stos
sahf
clc
mov
sub
lret
pop
or
sbb
imul
mov
sti
imul
rcrb
push
call
xor
sbb
sub
repnz
popf
bnd
mov
sub
loopne
bound
xor
pop
ds
adc
or
cmp
cmp
js
or
std
out
sub
int
push
mov
sub
inc
ja
adc
inc
fldl
stos
xor
es
or
push
cmp
or
repz
push
sbb
mov
imul
outsl
sub
mov
cs
fisubl
adc
inc
push
jb
movsl
loop
in
xchg
repz
add
bound
lret
xor
xor
pop
adc
in
mov
out
jne
addr16
fstl
and
pop
movsb
adc
xor
add
out
movsb
inc
cwtl
subl
cltd
and
pusha
scas
in
cmpsl
dec
dec
jb
sbb
leave
sub
jns
mov
std
jns
xor
xor
jl
loop
push
pushl
xchg
mov
cwtl
push
lcall
lods
cli
sbb
shlb
arpl
dec
mov
jl
test
jp
sbb
out
std
gs
mov
xor
nop
mov
sbb
int
xlat
xchg
test
push
xchg
movsl
push
dec
xchg
dec
stos
testl
mov
bound
pop
in
and
jecxz
xchg
fdivr
nop
xlat
std
or
cli
adc
in
pusha
sub
xchg
icebp
pop
mov
out
insb
enter
daa
lret
xlat
jge
xchg
and
jge
mov
xchg
mov
and
aam
fs
imul
adcl
pusha
xchg
lret
adc
sti
pop
xor
mov
in
mov
jg
in
hlt
xor
jl
push
inc
jae
test
mov
and
inc
push
int3
jnp
cmpsb
or
leave
pop
out
jecxz
repz
adc
je
iret
ret
lea
icebp
sub
mov
mov
jne
push
pusha
jo
out
repnz
mull
push
inc
stos
xor
out
jmp
xchg
lds
mov
shl
mov
or
sbb
scas
dec
negb
jns
mov
test
iret
inc
or
mov
sub
sub
aaa
or
and
lcall
mov
or
and
sbb
imul
inc
dec
xor
pop
test
sti
push
stos
clc
mov
pop
repz
inc
nop
stos
jo
or
dec
int
push
js
sub
dec
add
fwait
pop
or
xor
aaa
repz
mov
std
push
imull
xchg
xchg
dec
scas
jecxz
inc
sahf
nop
movb
ja
xor
bound
adc
add
jo
insb
sub
rcl
pop
jne
cli
call
cmp
ja
xchg
les
test
jl
mov
std
repnz
cltd
xor
enter
jne
xchg
test
mov
jb
insb
jle
dec
daa
pushf
xor
or
xchg
aad
scas
or
dec
clc
cli
cmp
add
jp
test
xchg
loop
sub
test
xorb
sbb
cmpsl
xor
mov
loopne
imul
or
fsub
adc
subb
mov
repz
movsb
aad
or
ds
add
adc
and
imul
in
iret
and
movsl
mov
aam
and
dec
pop
inc
mov
jl
adc
xchg
mov
pop
dec
popa
sbb
jae
or
or
cli
jmp
pop
jp
inc
into
and
stc
mov
inc
ficomps
mov
outsl
inc
outsl
adc
push
sbb
icebp
in
dec
fldl
dec
inc
lret
stos
push
lahf
pusha
cmp
sub
ffree
outsl
es
push
or
xor
jbe
vmovapd
push
jg
cld
push
dec
pop
mov
mov
pop
pusha
sbb
scas
jle
xchg
cmc
pop
aad
aaa
daa
lret
pop
push
icebp
repz
push
and
xor
xchg
gs
in
std
pop
mov
and
fwait
ja
add
aad
xor
dec
sub
adcl
mov
icebp
enter
add
add
lea
pop
push
mul
in
std
call
iret
pop
test
sub
and
cmp
sub
sbb
jp
icebp
popf
mov
fxch
imul
xor
xchg
adc
jg
xor
cmpsl
xor
enter
pop
sbb
adc
dec
aad
pushl
add
mov
ss
xor
iret
je
xlat
push
sub
into
into
rcrl
push
lods
jp
and
xchg
aaa
outsl
xlat
pop
cwtl
sbb
in
scas
push
push
ret
sub
hlt
insb
cs
lds
adc
or
dec
ljmp
outsb
xor
and
lock
mov
push
out
repnz
sbb
popa
cltd
push
test
dec
xor
mov
outsb
sub
sub
push
jae
and
jne
sbb
cmp
shlb
push
mov
lods
setne
jbe
lret
mov
out
pop
sti
mov
lods
aaa
inc
popa
rcll
sbb
mov
es
inc
push
data16
pop
adc
sub
push
arpl
shl
cmp
xchg
ss
nop
add
shl
stos
jmp
imul
in
and
lret
mov
cld
xchg
or
inc
lret
xorl
testl
les
jb
cmpsb
adc
jmp
cmp
subl
or
push
incl
std
dec
mov
pop
out
xor
int3
aas
xor
sbb
pop
ja
pop
xor
xchg
dec
js
movsb
mov
dec
inc
xor
or
dec
aad
jmp
or
jge
rolb
cmc
popf
and
aaa
out
lret
xchg
int
sub
push
jge,pn
mov
call
js
xlat
out
loope
dec
sbb
xchg
sbb
or
cs
incb
pop
mov
jae
in
into
mov
dec
ret
mov
fisubrs
push
dec
dec
pop
xor
test
push
push
adc
lods
lcall
sbb
mov
and
pop
dec
test
or
iret
add
das
fwait
xchg
cmpsl
movsl
rclb
pop
pop
lock
lods
scas
sbb
rorl
mov
gs
jb
push
jns
push
add
dec
insb
adc
inc
test
push
or
pop
xorl
sub
cmc
pop
int
sub
repz
xchg
ja
imul
iret
pop
cmc
xchg
fldenv
fwait
repz
sub
add
xchg
filds
stos
int
sbb
xchg
xchg
test
sbb
test
push
js
add
pusha
repz
dec
cltd
xchg
mov
dec
cwtl
sbb
ret
add
cmp
mov
je
outsb
lret
jno
add
loopne
hlt
repz
mov
rolb
xchg
nop
inc
xchg
mov
fists
and
cmc
inc
and
sahf
sti
or
add
sbb
test
mov
in
add
mov
jmp
add
repz
mov
cmp
xchg
push
mov
mov
xchg
jne
mov
outsl
pop
inc
pop
jl
dec
mov
ds
cmp
pop
call
mov
sbb
negl
pop
pop
das
push
push
inc
xchg
or
pop
cmp
xchg
ret
jnp
xchg
sub
mull
or
add
outsb
dec
dec
cs
dec
icebp
add
adc
aas
and
push
and
repz
hlt
mov
into
outsb
add
dec
sub
lret
dec
out
sub
nop
pusha
cmpsl
jnp
pop
mov
add
mov
or
inc
pusha
jnp
stos
insl
jge
push
out
jno
ljmp
xor
adc
inc
aaa
fwait
push
or
call
fisubs
pop
pushf
and
js
jecxz
rcl
or
outsl
aam
cld
ljmp
loope
cmpsb
sbb
and
arpl
fistpll
inc
mov
leave
mov
sub
pushf
adc
stos
aaa
test
icebp
int
aaa
ja
push
pop
divb
push
add
loop
dec
jns
or
xchg
xchg
dec
sbb
pop
fcompl
mov
aad
push
sbb
fwait
jnp
mov
movsl
dec
mov
into
stos
shlb
hlt
dec
inc
movl
fs
push
pop
clc
jne
mov
jns
xor
sub
outsl
pushf
insb
fnstsw
lock
and
jne
lret
cld
push
arpl
xor
nop
jbe
imul
ss
fidivrl
xchg
dec
loopne
pushf
xchg
jae
jmp
in
aam
mov
sbb
cmp
adc
xchg
dec
pop
adcb
jno
push
adc
cmc
je
xor
arpl
pop
and
test
xchg
test
fstpt
inc
imul
jge
out
leave
cld
jecxz
repz
bound
cli
push
xor
popa
iret
lahf
pop
add
fildl
push
push
data16
mov
cmp
dec
movsb
dec
shrl
cs
pop
dec
roll
push
sbb
add
test
adc
mov
pusha
xchg
cmpsb
out
push
push
push
je
adc
mov
out
mov
xor
adc
in
add
fistpl
or
lods
push
sbb
add
mov
icebp
mov
mov
stos
pop
out
and
mov
xchg
cmp
xchg
sbb
popa
lret
adc
xor
ret
repnz
outsb
push
int3
ss
and
arpl
pushf
jl
pusha
movsb
sub
inc
aad
clc
pop
and
imul
cwtl
cmp
movsb
pop
pushf
or
in
cmp
nop
adc
enter
repnz
push
mov
sub
add
sbb
lret
and
arpl
jae
fwait
loop
mov
cs
lds
rolb
movsl
cmpl
xchg
mov
mov
fadds
sbb
rol
pusha
sbb
jns
pop
jbe
xor
stos
mov
outsl
mov
sub
cltd
fcoml
mov
lretw
jecxz
lods
or
adc
pop
fs
sbb
sbb
adcl
cmp
mov
dec
jb
in
insl
inc
jne
je
out
fsts
in
clc
or
test
sarb
push
stc
les
cwtl
xchg
addr16
testl
sbb
jae
mov
icebp
jne
popa
jo
dec
ret
pop
pushf
aam
ds
mov
mov
and
dec
lret
aad
je
sarl
ret
push
int3
and
shrl
insl
adc
push
popa
push
push
sbb
mov
cli
push
ja
push
cltd
mov
inc
andb
scas
jne
adc
in
test
or
dec
iret
sbb
xor
jo
divl
gs
sub
or
pop
fwait
xchg
ret
xor
pop
hlt
popa
cmp
aad
sub
push
in
imul
add
mov
or
dec
add
subl
in
xchg
outsb
jle
xor
and
xchg
fdivl
imul
jbe
loopne
adc
inc
out
movsl
out
loop
sub
pop
push
jge
dec
outsb
mov
sub
call
test
and
ja
clc
into
pop
push
cmp
imul
loope
aad
adc
pop
add
xor
fnstenv
pop
hlt
lods
push
adc
cmc
sbb
mov
push
jno
mov
xlat
mov
dec
aaa
mov
sbb
jne
movsb
xlat
push
aad
daa
mov
pop
out
nop
dec
mov
adc
fsubrl
out
cwtl
jns
fprem1
mov
xchg
xchg
add
mov
call
arpl
pop
enter
mov
xor
test
sub
cmpsl
and
lods
dec
cmp
and
ljmp
test
mov
mov
movl
rorl
mov
into
fstpt
pop
dec
push
lds
adc
pop
mov
fcoml
mov
inc
add
pop
cld
adc
daa
insl
inc
jns
xor
cmp
mov
subl
pop
mov
push
movsl
xchg
xchg
mov
xchg
lret
dec
or
push
in
stc
pop
dec
mov
inc
mov
cmpsl
dec
push
inc
xor
test
jne
test
jo
shll
mov
mov
pop
cwtl
mov
mov
loope
xor
add
push
dec
loope
push
in
jne
push
jl
lds
sub
es
adc
mov
fcomip
int
lods
jp
mov
xchg
push
xchg
inc
sub
into
sub
xchg
adc
cmp
fdivrl
adc
test
mov
xor
sub
cwtl
mov
push
and
rorl
test
lea
dec
sbb
jp
lahf
cld
adc
push
sub
dec
jmp
sub
xchg
ret
push
pop
and
pop
inc
fcoml
loope
cmp
in
add
pop
mov
insl
fcomp
popf
mov
repz
ret
cmc
icebp
iret
aam
mov
int3
adc
out
mov
jo
aam
jnp
insb
jo
adc
into
pop
pusha
shlb
dec
stos
adc
loopne
push
jne
xor
popa
dec
scas
xor
popa
movsl
fsubrl
js,pt
mov
mov
test
sub
imul
dec
rorb
cmp
lods
add
addb
lock
xor
call
outsl
rolb
xchg
aam
test
popa
jecxz
bound
scas
mov
xor
cltd
cmp
aam
scas
xlat
jle
mov
and
dec
jle
and
jle
int3
sub
mov
popf
cmc
loopne
jnp
jp
or
adc
xchg
and
adc
loop
jecxz
ret
cwtl
inc
stc
movsb
int
cmpsl
mov
repz
adc
add
inc
inc
cmc
lods
jae
cs
test
push
xchg
test
mov
addl
pop
push
aaa
adc
inc
in
lock
repz
lret
pop
stc
loop
dec
push
dec
ljmp
and
push
leave
bound
sub
dec
xor
mov
repz
jge
and
and
xor
movsl
dec
icebp
mov
mov
je
into
rcrb
loopne
std
insb
push
insl
or
push
clc
pop
adc
jl
mov
pop
inc
xor
insb
js
jle
xchg
insb
xorl
add
or
or
popa
rorb
shrl
imul
xor
in
xor
cmpsl
stos
jae
testl
clc
roll
xor
hlt
andl
pop
jp
adc
ss
cmc
addr16
loop
sbb
jmp
popf
pop
mov
daa
sbb
mov
or
out
cmp
cmp
sbb
jns
negl
push
mov
jno
mov
shlb
insl
or
rcll
imul
dec
push
xchg
dec
or
mov
cld
or
push
in
movsl
xchg
fst
out
push
and
xlat
adc
sbb
add
sarb
pop
dec
sub
xor
dec
cmp
cmp
dec
jne
jbe
sbb
jno
gs
rclb
inc
outsb
sub
pop
adc
daa
add
dec
and
and
jecxz
ljmp
fcmovnu
jl
mov
ds
mov
inc
xchg
es
je
aaa
inc
roll
leave
push
mov
ret
xor
jle
sarl
jp
mov
push
out
xor
test
jnp
sbb
adc
dec
leave
in
pusha
bnd
dec
push
jo
xchg
add
dec
add
lods
sub
sub
cmp
adc
popa
and
fs
mov
lahf
outsl
jnp
push
fmul
sub
lods
push
aam
mov
mov
xchg
iret
jp
jne
iret
aam
js
or
xchg
inc
jmp
sbb
xor
mov
mov
pop
mov
sub
mov
test
mov
movsl
sub
mov
jae
push
imul
mov
push
rcrb
sbb
insb
shr
stos
fadds
int3
mov
or
loopne
mov
hlt
inc
cmc
mov
mov
in
pop
and
stos
div
dec
movsl
aaa
hlt
addl
fisttpl
jo
mov
and
jo
pop
lods
out
sbb
es
lods
or
sub
mov
es
jbe
fwait
and
jl
pop
inc
lods
mull
pop
xor
subl
xchg
mov
scas
jp
int3
push
push
aaa
mov
inc
and
mov
cli
fldt
scas
inc
clc
xchg
in
andb
pop
std
cwtl
dec
and
andb
cmpsb
inc
popa
jmp
inc
fmull
fcmovbe
push
push
ds
jne
sub
stos
jge
pop
pop
adc
ret
pop
addl
pop
out
inc
xor
mov
inc
lret
push
fmull
mov
jno
adc
sub
cmp
int
out
ds
adc
enter
sbb
sbb
je
rolb
pop
fstpt
add
mov
out
jb
cmpsb
xor
ja
and
test
in
adc
jle
dec
fidivrs
inc
out
lods
cmp
ffreep
or
inc
jecxz
pushf
shrb
test
in
in
rcll
and
xchg
mov
cmp
call
or
lods
xor
repz
hlt
ljmp
addl
xor
add
xor
add
xchg
mov
jmp
mov
clc
mov
pop
mov
inc
loop
mov
mov
jg
xor
lods
pusha
push
scas
mov
mov
adc
int3
test
jg
scas
jbe
mov
adc
xor
icebp
sub
lret
jne
insl
ds
daa
jns
push
lcall
mov
movsb
lock
js
mov
jge
cmpsl
cmp
hlt
cmp
pop
out
xor
stos
mov
int3
movsl
and
jp
mov
or
aaa
mov
inc
fs
lret
xor
loop
mov
inc
fs
xor
dec
ret
and
test
mov
ja
inc
add
pop
das
cli
jno
mov
and
dec
pop
fwait
pop
test
shll
outsb
sti
das
mov
fldenv
hlt
xorb
lock
sbb
inc
sbb
pop
test
jae
xchg
jnp
leave
jg
inc
mov
out
into
jge
out
mov
dec
cmp
jp
mov
inc
test
fs
sbb
sub
imul
mov
and
dec
dec
cli
cmc
or
rorl
lret
repz
jle
pusha
push
arpl
dec
xchg
jle
pop
fwait
xchg
fucomip
outsb
inc
cmp
stos
fs
icebp
cs
mov
push
and
sub
jns,pt
insb
jbe
sbb
lret
sbbb
cwtl
jnp
jl
es
jne
int3
shrl
jle
test
inc
mov
push
sub
lds
xor
adc
icebp
repnz
pop
jmp
jp
jbe
movsb
bound
cmp
test
push
stc
dec
mov
sub
loop
icebp
popa
lret
pop
das
cld
std
movsl
das
shll
add
mov
add
les
cltd
insl
jno
xor
pop
cmpsl
scas
xor
lea
xchg
xlat
dec
inc
push
mov
lock
adc
jl
mov
gs
iret
jl
xchg
addr16
sahf
xchg
dec
out
mov
cmp
mov
pop
push
das
or
jl
dec
stos
adc
jg
dec
add
das
ret
inc
fcomp
sarb
sub
ss
das
icebp
call
cmc
jb
notl
jbe
shll
rorb
inc
xchg
dec
cmc
popf
sbb
enter
movsl
js
lahf
mov
int
push
stos
in
movsl
leave
stc
lcall
pop
loop
pop
sub
jb
jecxz
les
sti
dec
mov
pushf
es
and
pop
or
pop
mov
out
pop
cmp
jbe
inc
push
inc
sub
cmpsb
jns
les
hlt
adcb
out
mov
in
addr16
aaa
xchg
and
ds
mov
jno
pop
pop
rep
fiaddl
in
jge
into
dec
movsl
mov
or
mov
pop
push
out
loope
das
inc
cs
dec
repnz
cwtl
fsubl
je,pt
push
xorb
mov
lea
stos
cwtl
mov
sbb
repz
in
rcrl
and
dec
das
jo
loopne
adc
mov
cmpsb
adc
cs
pop
sbb
adc
push
mov
sbb
adc
sub
push
cmp
cmc
ja
test
mov
adc
jns
sub
arpl
mov
icebp
xchg
out
movsb
lcall
jns
mov
push
faddl
sbb
jnp
mov
mov
xchg
sub
pop
jle
loopne
mov
jg
cld
in
xchg
idivl
loop
pop
sbb
and
sbb
lods
ja
cmp
out
imul
and
adc
ja
jno
cmpl
std
movsl
ss
dec
test
cmp
pop
nop
int
jge
pop
pusha
push
aas
inc
mov
dec
scas
out
iret
push
arpl
xchg
mov
test
stc
push
xlat
and
test
rorb
jg
mov
and
lock
pop
clc
sub
xchg
push
mov
lcall
shrb
loope
scas
nop
add
bound
jmp
adc
or
call
dec
xor
shl
sbb
pop
push
test
sahf
daa
jp
icebp
cmp
enter
adc
inc
or
mov
jge
pop
shlb
fsubs
je
test
imul
pop
ljmp
sar
movsl
es
js
dec
mov
jnp
ficompl
hlt
pop
add
push
push
xchg
rep
push
add
mov
mov
into
or
push
pop
rcr
mov
leave
addr16
ljmp
in
cld
leave
inc
pop
call
xchg
push
jno
rorb
or
jecxz
pop
call
xchg
or
std
sti
mov
and
orb
nop
or
push
dec
xor
or
mov
pop
mov
xchg
icebp
mov
xor
in
sti
xor
push
adc
jnp
mov
adc
push
int
mov
push
adc
adc
xchg
pop
adc
nop
and
cmpsl
mov
adc
movsl
jns
scas
mov
push
pop
pop
jne
xchg
sub
pushl
repnz
ror
pop
pop
stos
jno
aam
dec
lock
inc
dec
int3
mov
pmaxsw
repz
jl
lock
in
jge
jbe
lret
in
je
ret
mov
cmc
dec
mov
scas
jo
jo
ds
push
xor
mov
dec
sub
rcll
jmp
jno
and
fdivrl
push
lds
xor
rclb
std
lahf
bound
xor
xchg
jb
out
rorb
mov
inc
adc
jg
je
daa
xchg
xor
sarl
pushf
cld
and
ficoml
sahf
mov
sub
mov
mov
shlb
aam
movsl
icebp
addb
pop
repz
shl
lods
inc
inc
pushf
insb
aad
hlt
xchg
dec
add
dec
imul
iret
jne
inc
pop
pushf
dec
xor
lods
push
dec
adc
out
add
imulb
sub
fs
mov
mov
dec
jmp
fcmovu
cmp
stos
les
xor
fistpll
pop
pusha
mov
daa
arpl
mov
mov
js
cmc
jne
js
leave
mov
cmc
sub
sub
into
mov
notb
insb
xchg
sub
ljmp
sbb
lock
fsubrs
cwtl
jge
int
scas
div
popa
sub
dec
or
push
xor
xchg
sbb
xor
pushf
jo
pop
cs
mov
jb
je
int
adc
push
cli
or
addr16
imul
test
push
pop
push
or
movsb
mov
mov
subl
and
adc
movsl
loopne
cmp
sub
or
push
sbb
in
fisttps
or
inc
pop
int3
loopne
pushf
mov
addl
repz
fcompl
pop
xor
rclb
fadds
or
sbb
mov
movsl
sbb
rorb
lret
fildl
fwait
push
fcomi
cmp
sub
repnz
ret
mov
xchg
fistpl
cmpsl
xor
dec
jne
lret
sbb
test
fisubs
data16
outsl
aaa
mov
cmp
data16
mov
jno
jmp
xchg
add
xlat
cmovge
jle
pop
cmpsl
add
daa
leave
jg
dec
mov
and
nop
jbe
in
mov
lds
or
xor
adcb
pop
sbb
imul
pushf
ds
lahf
jp
push
rclb
or
sub
cmp
ss
push
jne
call
mov
sbb
fsubrs
xchg
das
dec
test
xlat
dec
rcr
jmp
jb
mov
rcrl
mov
lods
push
jl
xchg
loopne
mov
xchg
lahf
arpl
jmp
xor
jle
lods
dec
pop
adc
arpl
cmpsb
ja
or
and
and
or
adc
ds
mov
push
ss
or
stos
sbb
dec
xchg
sub
jle
pop
adc
notl
rcll
jne
push
cmpsl
stc
pop
outsl
pop
and
insl
push
scas
adc
inc
xlat
inc
xchg
fimull
adc
cwtl
sub
bnd
dec
insb
mov
xchg
mov
out
mov
mov
cwtl
insl
mov
and
xor
xor
jne
pop
jmp
divl
sbb
in
fwait
mov
lea
lahf
dec
js
and
aaa
cmp
fistl
mov
adcb
adc
into
outsl
sbb
rol
and
ret
xchg
sub
pop
pop
cmp
jne
aas
into
cli
cmpsl
popf
adc
sbb
ret
test
rol
lret
cmpsl
je
sbb
lret
push
mov
push
sbb
outsb
divb
les
fsubl
dec
jo
sbb
sbb
dec
pop
inc
rorl
pop
fiadds
sbb
mov
ficomps
out
cltd
cmc
dec
outsl
lcall
mov
xchg
push
and
mov
jmp
jge
or
cld
mov
dec
int3
jl
jnp
mov
jp
addr16
outsb
cmp
and
es
xchg
sub
imul
pop
xlat
sub
rcl
and
in
dec
push
mov
push
add
popf
and
cs
jmp
addr16
imul
call
into
push
jge
xchg
inc
lret
insb
dec
dec
push
xchg
sub
push
xchg
or
sahf
int3
pop
pop
mov
push
int
push
cmp
ror
xchg
jae
adc
xchg
push
cmpsb
lret
jge
mov
or
sub
cmp
ja
sbb
push
lods
fidivrs
xchg
repnz
cmp
and
sbb
test
subb
mov
or
scas
xchg
and
dec
lock
ja
sub
adc
mov
pushf
mov
sarb
pop
jae
lret
imul
es
scas
inc
je
xchg
orl
fsubrp
xchg
mov
aaa
daa
sbb
xchg
jl
fcmovnbe
jmp
divl
dec
mov
mov
ja
mov
scas
jbe
stos
and
out
adc
xchg
push
addr16
xchg
mov
inc
fnstsw
popl
jecxz
xor
les
mov
out
test
fdiv
cmpsb
inc
cmpsb
lods
gs
mov
mov
xlat
negb
inc
xor
adc
inc
dec
cli
nop
enter
pushf
and
test
gs
mov
sahf
sbb
lds
jne
lea
pop
enter
fsub
jb
mov
mov
jl
and
test
test
fidivl
xchg
cmc
add
test
out
mov
in
lods
in
pop
mov
cwtl
std
iret
out
out
test
sbbb
mov
push
sbb
loope
cmp
hlt
cmp
dec
or
pop
jb
push
sahf
insb
push
dec
test
push
mov
nop
jno
pusha
jae
sbb
dec
pop
mov
jmp
push
insl
dec
push
mov
sti
jle
mov
mov
jno
pusha
repz
lcall
ret
jmp
add
dec
push
dec
lcall
push
iret
dec
jmp
add
and
lock
fcoml
ds
fisttps
mov
sahf
loop
incb
jle
mov
xlat
daa
test
jnp
rcl
mov
sub
mov
xor
imul
xchg
sbbb
js
arpl
pop
jge
ljmp
jl
and
es
mov
mov
sub
iret
dec
dec
int3
outsl
mov
mov
jp
mov
out
divb
in
loop
adc
mov
test
shll
subl
cmp
or
jl
leave
mov
movl
adc
mull
xchg
dec
ret
movsb
xchg
and
scas
fs
mov
inc
mov
dec
cmp
add
xchg
jno
ret
adc
cmp
sub
jg
cltd
inc
aam
inc
pop
mov
pop
push
and
cmp
ficompl
jae
xlat
pop
and
scas
cli
mov
xchg
push
pop
dec
es
iret
jo
dec
mov
mov
div
mov
push
xchg
mov
dec
les
imull
mov
xlat
pop
cmpsb
and
dec
test
mov
mov
hlt
sti
ret
mov
lret
inc
fwait
mov
and
xchg
sub
jg
outsb
stos
mov
xor
orb
ja
shlb
or
xchg
sub
push
pop
mov
daa
jp
int
popf
pop
fcompl
insb
stos
outsl
int
dec
movsb
xchg
scas
lea
stc
clc
test
andb
adc
shr
ftst
xchg
aam
cmpsb
add
push
or
aas
cli
repnz
jno
pusha
mov
xorb
xor
rcl
pushf
into
lret
mov
leave
mov
xchg
fsubrl
int3
pop
ds
aad
xor
fcmovb
mov
cli
shrl
and
dec
loop
in
in
add
leave
popa
and
stos
adc
popa
xchg
imul
sub
stc
fwait
aaa
pop
mov
cmp
subl
mov
and
adc
cwtl
xor
lahf
into
xchg
and
jnp
call
cld
sub
push
jnp
or
sub
lds
inc
adc
outsb
dec
roll
xchg
push
sbb
mov
imul
dec
push
adc
xchg
xchg
notl
add
fsubr
dec
xor
jge
mov
aaa
in
in
mov
add
clc
fisttps
mov
sarb
daa
cmp
lret
addr16
adcb
push
cmpl
mov
inc
jns
addr16
icebp
jecxz
pop
lock
js
mov
repnz
outsl
out
jp
and
jb
xor
xchg
jmp
pop
fld
mov
jnp
ret
cmpsl
and
mov
push
sub
jne
and
subl
arpl
sbbb
cli
xlat
sahf
dec
dec
aas
mov
adc
mov
outsl
xchg
xor
dec
jb
or
les
sub
dec
repnz
xor
or
or
ret
fwait
gs
mov
xor
mov
sbb
jns
pop
daa
xor
cmp
fdivs
negl
ds
pop
jmp
pop
shrb
lds
jbe
mov
sbbl
inc
imul
mov
xchg
push
and
sub
lods
mov
outsl
xchg
imul
sbb
imul
test
movsl
xchg
rclb
stc
jbe
and
bound
in
js
sub
notl
pop
sub
push
cmp
mov
or
test
stos
in
sbb
sub
jb
inc
int
hlt
add
out
enter
add
push
push
call
lea
js
add
jbe
test
not
jnp
sub
sbbl
ljmp
sbb
mov
fbld
repnz
inc
loopne
pop
pop
ss
repz
xchg
and
cmp
xchg
xlat
adc
mov
clc
in
lret
sub
int3
lret
aaa
popl
mov
icebp
test
cmp
scas
xor
test
addr16
adc
aam
mov
dec
mov
or
jg
mov
lret
icebp
jl
fisubrs
sahf
xor
loop
dec
adc
subb
and
xchg
adc
push
xor
pop
stos
sub
and
test
jo
add
cmp
jbe
pop
call
bound
mov
fcomps
mov
lods
add
add
add
dec
pop
rorl
xchg
lea
xchg
out
ret
dec
arpl
mov
mov
xchg
je
push
jg
mov
mov
subb
repnz
xchg
fistpl
rorl
sub
sub
outsl
pop
test
je
lcall
aam
cwtl
leave
sub
pop
call
into
cmp
adc
inc
push
popf
dec
mov
dec
or
mov
cmp
scas
sbb
and
pop
test
sbb
in
inc
in
xor
mov
popa
sub
daa
das
adc
jge
ss
inc
fwait
cmp
xchg
push
xchg
fmul
cmpsb
scas
cmp
mov
sti
scas
bound
mov
aam
fisubrs
push
shrb
jecxz
jle
adc
pop
adc
leave
xchg
push
mov
lds
lahf
sub
outsb
gs
mov
dec
js
lahf
jnp
jno
test
adc
adcb
cmpsl
xor
sbb
jmp
mov
shr
push
int3
inc
and
pop
mov
fnstsw
push
mov
stos
lret
in
jnp
aad
mov
mov
inc
loop
xor
std
xchg
mov
pushf
ficompl
sub
xchg
xchg
inc
pusha
in
sbb
pushf
movsb
jns
fs
inc
inc
push
cmc
fistpll
cmp
outsl
test
mov
cmpsl
loope
inc
xchg
dec
add
jg
mov
movsb
push
sbb
pop
mov
jmp
xchg
sbb
sbb
dec
xchg
scas
in
lds
test
popa
mov
pop
mov
xchg
and
lock
adc
jno
fcmovbe
cmc
xor
fwait
mov
aaa
test
adc
in
std
cmp
xor
sbb
sbbb
push
paddsw
and
push
call
lock
mov
cmp
lock
sbb
pushf
jmp
enter
mov
sbb
mov
call
dec
mov
lret
xchg
cltd
mov
dec
pushf
test
rcrb
imul
mov
test
ja
and
aam
sbb
jns
mov
mov
push
xor
and
push
fiaddl
ds
pop
dec
mov
loopne
repz
jp
nop
out
jo
push
or
inc
idivb
mov
popa
cli
add
push
pop
clc
repnz
pop
in
mov
adc
xor
jno
cli
mov
movsb
or
jo
jb
pop
std
jne
out
xchg
dec
aad
mov
roll
jg
push
ret
cli
xor
ja
mov
sti
lds
cltd
lahf
adc
dec
mov
push
jmp
inc
or
cmp
imul
pop
call
jnp
pop
xchg
data16
adc
out
add
inc
sub
bound
stos
xchg
das
lods
hlt
pop
pop
jecxz
push
je
pusha
scas
and
push
add
call
test
fcmovnb
ret
pop
or
sbb
in
shll
or
fisubrl
enter
or
jecxz
inc
and
jge
mov
mov
lahf
mov
movsb
bts
xchg
sbb
les
lahf
popa
nop
data16
push
cmp
adcb
pusha
rclb
add
gs
js
lods
adc
bound
jae
mov
imul
popa
shll
inc
shll
stos
dec
stc
movsb
shl
inc
adcl
cmp
add
pop
es
sbb
dec
daa
decl
xchg
jge
inc
pop
clc
push
insb
mov
xchg
adc
js
insl
ret
sub
mov
mov
dec
lea
push
cmpl
jo
add
aad
out
arpl
adc
pop
ret
repnz
sub
and
ficomps
xor
stc
stc
lret
sbb
sti
inc
dec
inc
pop
mov
hlt
sub
roll
xchg
push
mov
adc
mov
or
stos
xor
lds
lock
repnz
mov
push
nop
mov
ja
into
adc
push
andb
jbe
xchg
xor
and
cmp
sub
jle
sub
cmc
dec
subb
dec
ljmp
out
adc
lret
in
mov
shlb
push
mov
or
arpl
je
dec
dec
sbbl
fdivs
mov
cmp
mov
mov
les
push
or
sbb
imul
mov
xor
sahf
pop
pop
ficoml
out
push
cs
add
rolb
xchg
push
in
cmp
scas
pmaxsw
lds
and
orl
movsb
xchg
lods
into
and
xchg
aam
leavew
ror
sbb
inc
jns
cmpsb
lcall
xor
in
loopne
mov
call
add
shll
js
fists
fistl
mov
xor
mov
or
clc
jo
divb
fadds
out
xchg
mov
loopne
lcall
ds
out
int
and
mov
mulb
add
xor
std
mulb
ret
cmp
aad
jmp
sub
jmp
orl
cmpsb
fsubrs
mov
xor
shlb
cwtl
sub
or
lods
mov
push
xchg
jp
jae
mov
pop
jo
leave
call
sbb
leave
and
add
lcall
lea
cltd
adc
in
lods
xchg
in
jo
push
jecxz
cld
push
push
push
inc
cs
hlt
loope
inc
test
inc
pushf
push
mov
pusha
aam
movsl
jo
and
mov
mov
ficoml
addl
fildl
loop
insl
dec
jnp
xchg
mov
and
ja
dec
sahf
popf
out
jno
inc
adc
lret
inc
inc
push
into
adc
dec
push
pop
sub
call
insl
repz
loope
jmp
and
pop
ret
test
dec
inc
aaa
lret
sbb
das
pop
sbb
cld
xor
cltd
cmp
orl
ljmp
xor
mov
and
sarl
push
jge
fdiv
jnp
jecxz
xlat
cmpl
adc
test
jp
add
insb
pop
out
stos
shll
movsl
sbb
ffreep
fsubs
ss
clts
addl
out
mov
stos
outsl
or
pop
aam
call
adc
ret
mov
cld
loopne
fmuls
cmp
pop
pop
loope
mov
mov
mov
xchg
imul
adc
sar
mov
outsb
sub
out
aas
jmp
cmpsl
pop
xchg
pop
mov
mov
arpl
movsl
mov
inc
mov
loope
cmpsl
xor
cld
loopne
ds
sub
and
js
jbe
xchg
negl
add
out
and
mov
jg
sahf
dec
mov
adc
arpl
push
scas
dec
xchg
cli
add
inc
cs
leave
std
mov
or
ret
mov
je
fwait
jmp
and
call
cld
cmpsb
orl
aaa
dec
cmp
xchg
mov
pop
jnp
jbe
adc
jo
xor
mov
mov
out
cmp
clc
stos
mov
and
fldenv
cmpsb
sahf
lret
lret
mov
mov
or
adc
incl
addr16
push
lods
fwait
inc
pop
movsb
mov
and
sub
addl
push
negl
sub
fisubrl
call
mov
and
loope
xor
addr16
mov
jecxz
pusha
pop
inc
loopne
pop
clc
loopne
add
mov
mov
xor
aas
pop
enter
in
mov
push
or
and
push
repz
js
adc
pop
ret
movsb
ffree
and
xchg
xlat
or
mov
xchg
dec
mov
lret
xlat
xchg
pushl
add
and
ret
outsl
fdivr
ret
push
inc
pop
cmp
mov
pop
fistpl
jae
mov
lret
mull
and
fistl
or
pusha
xchg
xor
es
aam
imul
jbe
sbb
push
and
gs
jne
mov
or
pop
jp
test
sbb
mov
adc
popf
inc
dec
fs
xchg
imul
pushf
push
add
cmpsl
mov
dec
push
lds
movsl
add
aad
hlt
xchg
push
test
sbb
bound
stos
shl
test
arpl
push
push
mov
in
fucomp
dec
loop
xchg
push
mov
add
std
xor
add
clc
sbb
jne
loop
jmp
aam
sub
cmpsl
stc
lahf
cmpsl
je
pop
push
stos
pop
dec
cmpb
xchg
enter
cmc
pop
push
push
fmul
gs
xor
lods
lret
add
xor
mov
imul
pop
dec
int3
ret
aam
jl
in
insb
inc
aas
out
sub
into
mov
pusha
push
andl
mov
stos
rcl
mov
mov
clc
nop
cli
test
xchg
out
jmp
lods
sbb
nop
or
out
xorb
inc
jge
xor
jecxz
cmp
mov
test
lcall
pop
mov
add
push
cmp
inc
cmpsb
lret
es
ja
xchg
xchg
lret
cwtl
jbe
cmp
xor
mov
mov
je
xor
pop
push
gs
aad
pop
rcrl
subb
pop
nop
push
imul
lds
aaa
shl
shll
pop
lea
test
shlb
and
mov
rcrl
sub
xor
mov
pop
sti
sbb
push
push
mov
outsl
outsb
mov
pop
pop
jb
rol
push
mov
cmp
or
pop
out
ret
mov
out
lahf
xchg
ljmp
cmpsb
push
in
inc
cmp
mov
push
pop
ja
out
inc
fwait
mov
jg,pt
leave
cmp
jg
jns
sub
lret
and
push
mov
cmp
push
fimuls
xor
int
jl
mov
es
adc
sahf
mov
cmp
aad
test
into
stc
inc
movsl
sub
jae
mov
in
cmp
cmp
jae
dec
shlb
test
jle
imul
rcrl
jmp
leave
das
xchg
dec
in
add
cli
push
mov
clc
inc
inc
mov
lock
add
mov
add
mov
lock
inc
and
inc
dec
jl
push
shlb
adc
loop
inc
in
or
cmp
out
aam
imul
sbb
jnp
add
in
nop
aaa
hlt
pop
jae
ja
push
scas
cmp
sbb
fldcw
cmp
push
into
mov
test
mov
adc
mov
cld
sub
jg
sub
sub
adc
mov
mov
std
cmp
mov
test
popa
xchg
lcall
js
mov
lahf
outsb
neg
jbe
mov
dec
scas
mov
xor
loopne
cltd
imul
in
cmc
mov
xorl
les
mov
cmc
and
dec
aaa
enter
push
dec
dec
add
mov
adc
cli
jbe
sub
mov
xor
xchg
adc
in
jne
adc
mov
mov
inc
sub
add
xchg
addr16
call
out
paddb
dec
fimuls
adc
loopne
in
mov
pop
mov
pop
mov
cli
scas
dec
pop
aam
add
stos
jno
popw
sbb
mov
lcall
and
movsl
mov
lds
sbb
push
loop
sahf
inc
lds
pop
adc
pop
dec
push
int
lods
in
jle
xchg
inc
or
dec
lock
sbb
lahf
inc
fstl
popa
pop
je
pusha
inc
inc
xlat
adc
jo
mov
shll
mov
into
sbb
or
loop
inc
fwait
enter
test
lret
icebp
lret
ds
shll
mov
stos
push
jne
cmp
das
mov
jo
jle
hlt
xlat
push
add
xor
aam
jbe
mov
imul
movb
cmp
imul
mov
sahf
mov
cmpl
pushf
in
add
mov
scas
les
jne
lods
cs
cmp
pushf
sbb
cmp
push
pop
daa
cmp
fs
lods
and
adc
jmp
or
enter
stc
adc
inc
add
push
cmc
mov
imul
fs
adc
or
xor
mov
sbb
sar
xor
sub
imul
dec
inc
cmp
int
arpl
mov
cmp
push
in
push
mov
ret
loop
inc
fdivp
sub
xchg
and
dec
testl
fs
sub
fwait
sbb
rcrl
mov
repz
mov
loopne
sub
cmp
cmc
notb
adc
or
icebp
push
xor
ljmp
xlat
pop
push
lods
lret
dec
hlt
mov
daa
add
and
mov
repnz
push
and
cmc
xchg
or
pop
jne
cs
out
sbb
imul
out
jmp
cmc
dec
mov
insb
test
sub
sahf
mov
out
fs
and
addr16
popl
push
mov
rclb
or
jmp
stc
lods
dec
push
pop
test
inc
leave
jne
xor
and
out
stos
dec
test
jg
test
nopl
xor
aad
adc
addr16
jmp
mov
add
aas
mov
sub
jo
repnz
ja
into
jmp
ret
movsl
lds
addr16
scas
mov
xor
mov
test
dec
jns
scas
adc
pop
sub
push
mov
rcrl
clc
adc
in
shl
mov
mov
mov
jb
ds
jno
divl
jecxz
push
aam
xlat
sub
icebp
and
movsb
in
popf
adc
mov
arpl
aaa
push
lret
pusha
mov
test
fcoms
push
data16
mov
jnp
repz
cmpsl
pushf
push
out
movsb
mov
jno
das
or
xchg
mov
mov
jo
mov
cmc
dec
insl
stos
iret
pusha
sub
repz
push
sub
cmp
outsl
pop
dec
xor
fistl
ljmp
cmp
add
jp
mov
pushf
gs
pop
fnsave
das
xchg
jmp
lds
push
shrb
xchg
mov
lret
mov
cmp
push
and
pop
jne
push
cld
aas
decl
ljmp
xchg
loopne
repz
mov
int
or
pop
xchg
aam
cmp
mov
cmpsl
cli
aam
imul
xor
loopne
inc
pop
dec
mov
cmp
or
jle
out
mov
mov
mov
loope
mov
iret
xchg
mov
cmp
cmpl
mov
dec
xchg
addr16
std
pop
push
add
loop
inc
dec
add
fiaddl
lret
popf
inc
push
pop
fucomp
jp
xor
in
sbb
xor
mov
xor
lods
call
add
mov
mov
int
push
fs
jb
lods
rcrl
and
lea
test
enter
adc
fimull
cmc
sub
fiaddl
adc
stc
mov
mov
cld
mov
test
mov
imul
imul
jnp
fwait
dec
das
and
data16
inc
leave
or
dec
fwait
sub
rorl
popf
mov
dec
cld
aaa
adc
ret
fmulp
lea
add
lret
push
jge
jge,pt
cmp
movsb
adc
rcll
loope
xchg
mov
jb
lahf
ret
pop
repz
mov
int3
ret
cmp
cwtl
push
inc
jp
je
mov
inc
faddl
add
fstpt
scas
add
mov
inc
je
aam
in
pop
mov
repnz
adc
dec
mov
mov
xchg
enter
arpl
out
aas
mov
add
and
cwtl
aaa
out
inc
adc
push
mov
gs
ljmp
stc
pop
lods
iret
mov
cmpb
dec
inc
sub
push
xchg
sbb
xor
repnz
mov
mov
push
lcall
cltd
repz
pop
mov
nop
std
adc
add
jp
cmpsb
or
xor
jb
in
cmp
mov
repz
mov
imul
pop
jnp,pn
jecxz
mov
ret
pop
rcll
mov
jmp
jmp
push
cwtl
andb
hlt
rorb
imul
std
xchg
sub
aas
mov
sbb
test
sub
adc
mov
les
icebp
xchg
xchg
enter
stos
adc
mov
inc
int3
pop
enter
or
jnp
rcrb
out
popa
pop
ljmp
popf
popa
adc
insb
pop
xchg
jns
leave
outsl
pop
or
cmp
mov
push
dec
dec
icebp
sbb
in
lret
adc
push
stos
repz
imul
adcb
loop
iret
mov
int3
fs
bnd
add
and
pusha
add
dec
add
cltd
fwait
std
mov
dec
jmp
ljmp
ljmp
add
and
xchg
mov
push
dec
or
dec
add
add
fdivr
xchg
and
repz
mov
push
lock
lret
sbb
push
pop
push
jge
xchg
stos
pop
loope
sbb
sbb
sarl
in
lods
stc
lds
mov
ret
dec
add
test
fstl
subb
cmp
js
push
lret
or
sbb
int3
and
sub
aam
aam
lret
inc
jg
outsb
mov
in
adc
insl
loop
mov
cmpsb
xor
mov
ljmp
cmp
sub
mov
push
inc
or
push
xchg
test
push
shll
fbld
push
mov
jmp
pop
and
ficoml
cwtl
sub
daa
mov
push
bound
aas
testb
add
lea
movsl
adcb
jno
xor
fists
sub
enter
xor
out
movsl
ror
or
mov
sbb
xchg
push
or
push
sub
and
repz
or
mov
test
or
loop
push
push
push
shrl
or
jle
incl
adc
jae
ret
xor
xor
enter
mov
xor
pop
pop
or
inc
js
mov
ljmp
cli
add
mov
lahf
mov
sbb
jne
nop
mov
push
es
ficomps
out
dec
dec
push
ss
divl
leave
pop
rolb
fcmovnu
xor
xor
fstpl
fwait
aad
xchg
cltd
int3
fs
or
push
xor
push
xor
fistps
adc
call
out
movsl
popf
cmp
fwait
and
mov
enter
mov
mov
xchg
rorb
fsub
add
sbb
pop
lahf
cmpsb
xchg
data16
cmp
or
test
adc
repnz
lods
xorl
lods
into
aas
fistpll
adc
push
in
mov
pop
sub
movsl
scas
xlat
outsb
mov
into
negb
cli
add
pop
mov
adc
sub
test
and
insl
in
pop
sub
mov
pusha
and
jl
and
jnp
imul
jl
xor
iret
negl
imul
sub
cs
push
dec
int
jl
jp
push
sub
cwtl
push
push
dec
mov
fs
xorl
loop
inc
sahf
data16
mov
inc
stos
insl
call
pop
xchg
push
pop
push
into
xchg
cld
and
pop
mov
mov
rorl
int
daa
cltd
mov
mov
pusha
pop
bound
insl
movsl
dec
pop
adc
pusha
pop
adc
mov
add
or
rorl
sbb
sub
inc
ret
sbb
jmp
push
in
dec
in
adc
ja
mov
inc
daa
leave
movsb
mov
pop
sub
xor
dec
cs
push
lahf
cmp
inc
pop
jo
cmp
imul
loop
push
or
andl
cmp
cmp
test
bound
jno
scas
aam
lret
xor
push
enter
addr16
mov
sub
lret
xor
scas
lahf
faddl
or
xor
leave
negb
icebp
jo
scas
push
jmp
sub
dec
sbb
scas
xchg
cmc
pop
or
jmp
sti
fnstenv
cld
sarl
test
shrd
scas
mov
out
test
leave
push
in
dec
inc
movq
jb
and
pop
push
lcall
into
xor
sbb
std
test
sbb
cmp
out
out
inc
mov
jge
pusha
mov
dec
cmpsb
clc
jg
shrl
ja
icebp
sti
ss
aam
pop
or
mov
les
push
rorl
cmp
xor
in
mov
mov
mov
outsb
mov
ljmp
pop
dec
test
adc
inc
aam
add
mov
xchg
dec
shl
sbb
pop
fcomps
jle
in
push
sub
push
mov
out
jbe
push
adc
inc
pop
xchg
outsb
popf
lock
xlat
cmp
lock
inc
roll
cltd
int
and
pop
xchg
jo
adc
xor
fwait
or
adc
fcoml
sub
mov
es
and
stos
mov
or
loope
dec
jl
faddl
repz
js
jns
mov
mov
in
jns
inc
fcoms
pop
sbb
and
fwait
xor
and
das
mov
jmp
icebp
pop
adc
push
daa
leave
ret
int
aad
jae
mov
cmp
rcrl
and
xchg
fidivs
fstps
adc
fwait
stc
cmp
mov
popa
lods
fdivr
jg
shlb
imul
xchg
sub
adc
dec
dec
pop
mov
in
push
lods
push
sub
dec
fdivrl
push
push
in
test
decl
rorl
hlt
xor
popf
adc
cmp
jb
movsl
addb
out
cmc
loope
je
inc
jecxz
roll
xchg
push
xchg
stc
mov
ret
sub
fs
mov
inc
dec
inc
stos
sbb
sbb
outsb
push
xchg
jno
jle
pop
sti
lock
fidivrs
cmp
fldl
test
das
xor
mov
jae
inc
ss
iret
xlat
pop
lea
daa
lahf
mov
xchg
mov
loop
int
dec
les
hlt
call
fwait
mov
xchg
mov
push
or
pop
push
subl
icebp
std
sbb
adc
pop
aad
outsb
clc
inc
out
shll
repz
ss
and
xchg
fs
cmpl
stos
mov
and
ret
mov
stos
cwtl
sub
xchg
popf
dec
mov
pop
add
lahf
cltd
mov
psubd
inc
out
aaa
test
repz
mov
xchg
insl
loopne
sti
fsubp
jg
fsts
jnp
mov
push
jmp
aam
adc
or
jae
loop
testl
xlat
mov
dec
and
mov
mov
int
insb
pop
sbb
mov
inc
and
inc
fldt
test
cli
addr16
rorb
test
xlat
mov
fistpl
test
test
jp
push
lds
movsb
fs
xchg
mov
cli
xchg
jns
adc
dec
psllq
scas
sub
mov
adc
ret
jp
jae
mov
push
arpl
or
jl
push
lar
test
jns
jmp
into
add
jg
jp
fnstenv
test
cmp
xchg
fistps
xor
in
lock
mov
jg
lds
pop
pop
addr16
outsl
dec
ss
repz
je
xor
leave
mov
mov
ds
adc
jge
hlt
stc
fcomi
cwtl
aaa
add
flds
mov
cmp
and
and
clc
or
std
mov
jb
shll
jns
out
and
jl
sarb
dec
inc
movsl
mov
dec
jle
stos
dec
and
cwtl
push
fldl
lret
imul
rcrl
outsb
nop
adc
cltd
repnz
gs
ret
cltd
sahf
into
jmp
stos
lock
mov
xor
push
data16
in
std
clc
dec
test
pop
cmp
rolb
bound
adc
cmc
flds
dec
mov
mov
lcall
data16
jnp
add
cli
popa
aas
fsub
jne
cmc
xchg
movsl
insl
dec
and
ret
pop
xchg
sbb
dec
or
mov
push
mov
mov
js
pop
shl
xchg
das
lds
jb
cld
and
dec
xorb
lret
bound
cli
scas
loop
xabort
outsb
outsl
push
mov
int
xchg
adc
lea
xchg
xor
in
xchg
mov
mov
popa
nop
out
fldl
xor
jle
cmp
xchg
inc
jo
push
mov
jecxz
cld
ret
xchg
insl
or
add
jle
ljmp
ficomps
aam
inc
int3
das
mov
dec
mov
sbb
stos
cld
outsl
jle
mov
call
cmc
or
ret
sbb
and
movsl
and
shlb
push
push
lods
xchg
pop
mov
push
out
mov
dec
mov
std
lret
xlat
imulb
aam
pop
pop
xchg
pop
mov
inc
jne
push
sbb
jno
les
push
out
int
mov
inc
and
or
jnp
pusha
jbe
aas
xlat
add
push
adc
or
mov
das
inc
pop
out
jle
adc
pop
bound
xor
pop
jne
test
mov
mov
sbb
dec
bound
divb
sbb
mov
pop
add
es
mov
pop
fsubrs
scas
or
int
push
and
scas
and
std
rcll
test
les
leave
scas
mov
stos
movsl
data16
push
push
cltd
sbb
mov
movsb
mov
icebp
and
sub
sbb
mov
in
push
lahf
mov
inc
stos
push
in
lock
mov
sti
dec
arpl
outsb
push
movb
out
mov
sbb
cli
mov
cmc
clc
mov
test
int3
xchg
mov
mov
rclb
loope
dec
in
dec
rorb
jge
test
push
or
in
sub
jo
mov
xchg
inc
clc
fsubrl
jb
bound
push
jbe
mov
ret
ror
cld
lret
loope
and
icebp
sbb
or
movsl
add
call
xor
call
push
sarb
shlb
or
lcall
push
inc
out
fcomps
dec
movsb
xor
adc
inc
imul
sbb
inc
mov
push
daa
dec
insl
loopne
mov
jae
sbb
aam
jbe
iret
jo
push
ud1
mov
loope
push
sub
fdivr
fwait
repnz
popa
sbb
dec
adc
push
push
or
adc
dec
xor
dec
std
ret
cmpsb
cmp
imul
jmp
in
into
xchg
adc
and
lret
sbb
hlt
sub
jne
aas
add
sbb
inc
add
andb
push
jp
adc
lock
je
enter
adc
xor
lcall
pop
jno
aam
movsb
and
lcall
inc
enter
lods
or
out
mov
out
int
pop
sbb
push
xchg
in
mov
add
imul
xor
shl
ja
rol
pop
outsb
xchg
fisttpll
mov
sub
rorl
inc
sub
cld
cmc
xchg
xchg
add
sbb
sub
pop
rcl
cmp
cmc
cmp
mov
xor
cmpb
pop
popa
fs
das
pcmpgtw
shlb
stc
or
shll
out
clc
leave
sbb
pushf
adcb
dec
stos
stos
mov
xor
push
int
lahf
stc
out
cwtl
jae,pt
fistpll
insl
decb
mov
fucom
mov
xor
cltd
adc
std
sub
sti
adcl
imul
inc
jmp
mov
outsb
out
xchg
jle
shll
pop
icebp
mov
xchg
push
cmp
add
into
jle
push
int3
dec
mov
mov
cld
mov
lds
push
and
fistl
sbb
sub
push
bound
pusha
scas
das
pop
mov
lods
mov
cwtl
cld
mov
pusha
adc
push
cs
sub
lock
call
into
fdivs
lea
dec
out
out
punpckhwd
fadds
inc
mov
inc
and
sti
out
pop
push
dec
loope
sahf
pushf
mov
rorb
xor
sub
mov
cmpsb
pop
fisttpll
dec
push
cmpsl
fmull
add
not
add
sbb
std
xchg
es
arpl
test
test
js
cmp
lods
aam
adc
pop
adcb
loopne
xchg
cmp
inc
inc
mov
xchg
sbb
mov
fsubr
out
cmp
add
cmp
mov
cmp
es
xchg
sbb
xor
lcall
jmp
pushf
je
jmp
cmp
inc
sbb
int3
popf
xor
cmp
xchg
and
and
mov
rcll
hlt
popa
ja
mov
rcll
cmp
dec
and
cld
jns
mov
scas
mov
inc
outsb
notl
adc
daa
int
jp
js
ljmp
lea
xchg
sar
mov
push
ret
bound
jne
xor
inc
xchg
push
mov
push
mov
inc
bound
sub
inc
les
mov
push
push
mov
xor
push
or
cs
or
xor
mov
and
and
popf
in
xlat
loopne
push
clc
fistl
pop
mov
aad
loop
mov
or
mov
push
cli
loop
inc
pop
rcrl
cmp
add
mov
rcrb
xor
enter
push
decb
jns
inc
loopne
stc
in
cmp
rclb
dec
fdivs
stos
leave
mov
push
dec
ror
scas
dec
xor
pop
enter
jmp
fldt
jp
fwait
imul
lcall
mov
lahf
cltd
fwait
popf
mov
repz
movsl
out
sbb
lret
sub
int3
push
aam
mov
inc
stos
pop
cmc
and
int3
stos
cmpsl
nop
mov
test
sbb
sub
or
lods
inc
ljmp
inc
pop
int
lea
adc
add
xchg
pop
pop
daa
mov
mov
loopne
imul
mov
gs
sbb
inc
mov
sub
enter
xchg
dec
cmp
or
pop
fstpl
and
xchg
cmpl
adc
fstl
dec
in
insb
fucomip
or
scas
mov
sub
int3
jle
dec
out
aam
or
push
and
ret
add
pop
dec
adc
xor
xchg
hlt
out
xchg
mov
aam
inc
lret
std
aam
jo
xor
pop
lea
mov
out
arpl
mov
pop
dec
jl
jnp
insl
test
inc
cmp
jb
xchg
pop
adc
pop
jne
outsl
mov
bound
call
call
jne
dec
pusha
sub
pop
inc
aad
mov
pop
fxch
mov
stos
cmp
cmp
lret
pusha
jle
dec
cmc
lcall
push
lret
imul
adc
ss
cmp
jle
fnstcw
and
mov
add
adc
popf
fildl
and
mov
int3
inc
insb
stc
movsb
das
test
mov
mov
in
imul
jmp
inc
aad
push
mov
push
push
fadd
adcl
popf
mov
xor
rorb
jnp
out
es
inc
andl
add
cltd
jecxz
adc
push
ret
scas
cmpsb
jmp
jl
test
xor
mov
sub
xchg
dec
aad
movsb
xchg
lahf
xchg
sbb
mov
jne
xchg
or
jno
fisubrl
cwtl
inc
icebp
cmp
fistpll
mov
out
push
push
dec
fisttpl
insl
push
xchg
repnz
inc
push
lock
in
or
popf
mov
xor
mov
dec
lock
pop
rclb
inc
dec
sti
ficomps
rorl
jp
test
pop
adc
movsb
stos
lds
lcall
and
outsb
jp
js
rcr
into
fsubrs
rclb
arpl
inc
xchg
sub
test
aam
xchg
call
dec
pop
xchg
push
imul
gs
adcb
lods
scas
jb
push
cmc
dec
pop
mov
dec
das
lock
out
arpl
pushf
in
xor
scas
cltd
arpl
cmp
repnz
inc
cs
into
adc
hlt
sub
mov
jbe
cmp
inc
and
repnz
je
sarl
es
add
or
mov
sahf
inc
pop
pop
out
dec
arpl
or
ret
pop
cmp
push
dec
cwtl
fnstenv
adc
cld
push
cmp
ret
inc
test
cmp
sub
sbb
and
call
daa
add
and
lret
imul
add
cmp
sub
hlt
push
xchg
test
ds
pop
cmp
movswl
lock
daa
aad
mov
rcrl
xchg
jb
cmpsb
fcomp
xchg
insl
add
lcall
mov
xor
pop
ljmp
dec
lret
push
or
sbb
xchg
sbb
dec
mov
cmp
out
mov
xlat
xchg
or
mov
mov
push
push
mov
jecxz
test
dec
mov
cld
push
push
jg
and
jmp
push
jmp
pop
enter
popf
push
jg
les
cmc
mov
adc
and
mov
and
xchg
repnz
jo
pop
push
scas
shll
fnstsw
leave
in
push
sbb
gs
pop
cmp
xor
jecxz
jnp
jmp
mov
loop
mov
xchg
ljmp
out
inc
push
in
ret
inc
hlt
sub
call
push
adc
dec
pop
push
inc
fs
repnz
sub
jle
xchg
sti
push
dec
push
std
cld
xor
mov
cld
sbb
out
rcrb
repnz
and
inc
xor
int3
and
aam
push
outsl
sub
aaa
pop
inc
mov
mov
xlat
stc
add
mov
stc
test
dec
scas
enter
dec
push
bound
in
rcl
stos
loope
mov
mov
jp
mov
xor
mov
sarb
adc
iret
jno
adc
out
xchg
mov
orl
sub
and
sbb
das
adc
into
adc
fisubs
out
adc
jmp
das
pop
sbb
sbb
das
addr16
lods
xor
and
repz
inc
push
repz
or
mov
push
pusha
ficoms
and
add
clc
xchg
shll
stc
lods
mov
sbb
rclb
jmp
fcoml
mov
ret
out
std
insl
out
add
dec
push
xchg
or
inc
mov
scas
or
and
stos
jnp
in
dec
fldl2t
pop
push
loopne
test
sbb
cmp
add
aad
outsb
xor
sahf
fmull
cmpsb
add
jp
cli
jne
sbb
fstps
jbe
jne
jno
jo
inc
cwtl
or
cmp
pop
sub
jae
mov
push
cmp
mov
mov
nop
dec
mov
dec
aam
pop
call
lret
sbb
lea
out
neg
cld
xor
mov
xor
aas
ret
sbb
cli
stos
lahf
ret
imul
pop
mov
jno
insl
jge
push
cld
or
in
xchg
loope
in
iret
in
notb
inc
jg
inc
ret
dec
sbb
dec
sbb
adc
ror
aam
sbb
lds
mov
shrb
cltd
movsb
test
movsb
and
les
push
fnstsw
out
dec
leave
push
idivl
cltd
insl
leave
dec
add
pop
jnp
jo
and
mov
das
imul
cli
ret
dec
xchg
jl
push
pop
adc
sbb
das
lret
add
out
cmc
aad
or
cmp
std
mov
out
icebp
fldl
fwait
sahf
push
inc
and
jg
xchg
jb
cwtl
add
into
scas
and
jge
mov
leave
add
and
lret
push
mov
data16
sub
add
rorl
out
arpl
in
mov
std
xchg
xor
xorb
imul
lds
loope
leave
inc
inc
sub
lret
or
iret
xor
fisubrl
jae
or
sti
mov
pop
xchg
rcrb
test
in
in
add
xor
jae
stos
cltd
sub
adc
inc
adc
and
lahf
outsl
std
cmp
popf
push
inc
ja
xchg
jle
in
scas
clc
mov
or
jbe
call
xor
xor
sub
sti
js
cmpsl
daa
push
lds
cmc
hlt
inc
mov
push
sbb
cli
or
push
mov
cltd
inc
mov
andl
adc
dec
ret
insb
push
push
push
mov
mov
cmpsl
test
cmp
or
xchg
xlat
jae
lahf
jae
repz
popf
flds
pop
loopne
shr
inc
xchg
addr16
popa
outsb
pop
aam
lods
popf
fidivs
leave
jno
push
aas
add
negb
xchg
outsl
pop
mov
or
cmc
insb
lods
in
add
test
pop
lods
pop
int
push
xor
repnz
andl
add
outsl
sub
push
mov
sbb
insl
pop
out
or
movsl
jmp
jg
lret
popf
sahf
mov
dec
out
adc
negb
pop
dec
out
jbe
inc
sbb
sub
movsl
or
js
fnstenv
cmp
cwtl
mov
adc
pop
cmpsl
icebp
xor
ret
dec
lcall
out
es
lods
and
sub
jge
test
sub
movsl
mov
andl
mul
cltd
fsubs
insl
into
aaa
pop
loop
mov
xchg
les
cmpsb
mov
adc
aaa
lods
lock
inc
js
rclb
mov
lods
sahf
or
bound
jg
aaa
jae
sbb
sbb
ss
fdivl
mov
xchg
push
sahf
xor
subl
out
pop
add
xchg
dec
call
xor
jg
mov
lock
push
push
or
stc
and
inc
xorl
and
cld
inc
mov
outsl
fwait
daa
cmp
fs
or
sbb
jp
repnz
push
lret
jg
and
repnz
xchg
lahf
stos
dec
stos
icebp
sti
jl
dec
lds
arpl
cmc
cmpsl
push
pop
sbb
mov
fistpll
push
mov
jbe
mov
negb
out
adc
pop
cld
mov
lret
jb
mov
in
sbb
cli
int
stos
lock
jns
aam
pop
cltd
mov
pop
popa
dec
adc
std
jmp
mov
imul
dec
adc
inc
idivl
ljmp
or
sub
jno
mov
cmpsl
or
pop
add
xor
ss
or
fcomip
pop
fldl
cmpsb
ret
stos
pop
cmp
insl
mov
cmpsl
adcl
or
mov
push
fidivs
push
or
std
mov
xchg
sub
js
dec
aad
push
sub
fs
aam
mov
add
pop
imull
sbb
fs
movsb
int
fwait
or
fisubl
sub
push
inc
xor
push
nop
mov
and
pushf
mov
dec
sbb
loopne
adc
int3
loope
jns
stos
cli
pushf
dec
pop
mov
mov
insb
xchg
loop
dec
adc
cli
les
mov
imul
mov
iret
sbb
inc
pop
nopl
mov
dec
xchg
cmp
rcll
xchg
dec
or
sub
or
jg
mov
mov
aam
sub
mov
sbb
clc
sbb
mov
loopne
int
xchg
out
hlt
sbb
insb
mov
ret
loopne
pop
xchg
mov
outsb
inc
mov
mov
stos
jmp
dec
cli
lcall
insl
dec
insb
je
loope
pop
jecxz
stos
and
repz
mov
movsl
ljmp
loope
xlat
int
pop
pop
ffree
insl
mov
mov
cmc
mov
cld
sub
fmuls
mov
push
mov
fildll
cmc
mov
push
arpl
inc
insl
mov
push
out
add
cmp
insb
hlt
daa
loop
cmp
test
and
adc
std
scas
pop
test
icebp
cmpsl
push
rclb
add
xchg
ds
xchg
xchg
pop
je
leave
andl
fildll
icebp
icebp
mov
mov
pop
mov
mov
or
mov
aad
mov
pop
sbb
lods
lods
sbb
fcomip
jne
aas
orl
mov
pop
push
stc
add
jae
inc
stos
js
xchg
inc
or
in
push
mov
or
add
fdivs
dec
push
xchg
adc
push
and
loop
pop
mov
dec
pop
jae
sbb
fcoms
aad
or
xchg
mov
cwtl
push
or
les
das
fldl
lcall
cwtl
xor
mov
daa
cmp
pop
lcall
rcl
pop
jp
outsb
pop
in
notb
icebp
jmp
sbb
inc
sahf
out
jae
fdivr
stos
nop
adc
insl
sub
ljmp
jae
shll
dec
mov
lock
push
cmp
adc
and
aaa
adc
inc
mov
aam
xlat
fs
mov
sbb
or
aad
loop
in
std
sub
xor
sar
das
outsl
mov
mov
cli
push
es
inc
and
sub
sbb
mov
xor
loope
jns
in
or
test
mov
mov
jae
fsubrl
fcompl
pop
scas
ss
adcl
lods
int3
sub
mov
fisttps
lret
into
jbe
mov
test
inc
inc
ret
mov
out
xor
loope
movsb
jnp
xchg
sbb
scas
int
sbb
in
add
adc
add
mov
mov
in
cltd
test
int
scas
addr16
jns
or
sub
adc
mov
xchg
inc
sbb
inc
adc
insb
cmpsb
pop
out
mov
push
fdivs
es
mov
xchg
cmpsb
and
outsb
pop
lret
repnz
inc
pop
and
faddl
insb
mov
fxch
mov
int
push
mov
add
iret
scas
in
xor
cltd
imul
dec
dec
movsb
scas
idiv
imul
lock
inc
adcl
push
in
loopne
jge
and
add
push
push
loopne
xchg
adcl
ret
and
mov
nop
cmp
aas
xor
fwait
clc
cmp
mov
dec
lea
push
or
les
rcll
sub
dec
movsb
leave
lods
sub
je
mov
sub
shlb
mov
dec
into
std
sbb
jae
xchg
scas
test
pop
or
and
inc
sbb
pop
popa
cmp
iret
les
or
clc
inc
pop
mov
jl
sti
cmp
lahf
mov
xchg
loope
iret
addb
popa
vxorps
loopne
cltd
stc
hlt
cmp
cli
adc
test
mov
mov
icebp
add
mov
sbbb
jns
aam
jle
dec
xlat
cmp
pop
lret
pop
jecxz
rcll
jle
xchg
inc
sbb
or
rorl
pop
jb
notb
leave
ds
loopne
jb
push
xor
inc
ficoml
clc
dec
mov
dec
push
push
inc
sarb
push
inc
shrl
adc
push
pop
jge
inc
popf
jle
in
movsl
sub
das
orb
ds
push
mov
push
add
and
xor
mov
addr16
pop
bound
mov
movsb
or
pop
repz
inc
lahf
dec
pop
sub
call
clc
xor
mov
and
and
cmp
and
jno
xchg
cmp
negl
dec
int
pop
sbb
out
or
imul
out
test
ds
pop
push
enter
jmp
adc
das
arpl
bswap
inc
les
fidivs
adc
lods
pop
pop
jp
mov
gs
cmp
inc
push
xchg
xor
or
dec
fs
cmp
mov
cmpsl
rolb
repz
jo
sub
sbb
ja
notb
add
sti
sbb
lea
mov
and
shrb
sub
aaa
adc
jnp
lcall
mov
fisubrs
or
cmp
inc
push
jl
fs
aaa
inc
mov
push
cmp
mov
xor
jo
fidivrs
ljmp
into
test
into
mov
std
mov
lods
mov
out
pop
in
xor
push
call
mov
and
fwait
std
dec
dec
mov
or
movsb
and
pushf
into
mov
shrl
sub
nopl
cmc
shll
mov
testl
push
cmp
orb
or
mov
sbb
push
or
int
sahf
incl
mov
pop
or
xchg
pop
mov
push
add
sub
lock
je
xor
popa
incb
jecxz
mov
sub
in
popf
rol
or
adc
iret
pcmpeqw
jne
sarb
arpl
mov
cmp
and
das
into
repnz
sbb
nop
and
inc
adc
in
mov
xchg
mov
mov
cmp
pop
jl
mov
loope
push
mov
scas
lds
push
repz
dec
les
shl
jo
and
xlat
xor
repz
loope
push
scas
idivl
mov
fwait
sbb
inc
and
mov
pop
mov
or
nop
mov
sahf
fsubrp
mov
repnz
inc
adc
sarb
aad
les
cs
sbb
test
cmpsl
enter
popa
xor
inc
aad
imul
nop
pop
fucomip
loope
add
jns
add
clc
adc
out
push
jg
push
adc
repz
out
ss
push
cmpsl
repz
jno
and
faddl
ljmp
mov
add
push
insb
je
fmuls
stos
stos
jecxz
jns
sbb
jnp
inc
loope
dec
cwtl
or
rol
cwtl
lods
popf
mov
fstpt
push
pop
pop
stos
mov
imulb
cld
out
out
stc
repnz
pop
rcrl
clc
fucomip
cs
fidivl
add
cmp
push
notb
fldcw
mov
loope
mov
cltd
stc
adc
and
sbb
arpl
and
xchg
daa
push
outsl
pop
lods
dec
std
cmp
push
push
adc
jne
test
jne
mov
jnp
mov
xor
sub
popf
xchg
fcompl
pop
jo
stos
fsubs
and
sub
mov
fbld
shlb
mov
mov
ret
insl
sbb
mov
mov
gs
loopne
in
and
jns
lcall
loope
out
cmp
xchg
mov
jge
pop
ljmp
fdivrp
adc
int
mov
rcll
mov
add
bound
and
push
xorb
mov
and
ljmp
roll
ja
pop
popf
push
int
mov
mov
xlat
repz
call
cmp
cmp
lock
mov
daa
mov
hlt
and
cmp
pop
aaa
jge
xor
mov
xor
aas
les
imul
loop
sbb
or
ljmp
mov
xor
adc
cmp
pop
loopne
mov
sbb
push
shlb
mov
cmpsl
sti
insl
subl
jge
rcrl
xchg
cmp
or
fiaddl
mov
jno
adc
adcb
or
xchg
test
bound
fisttpll
incl
js
and
mov
lds
pop
test
notb
shll
pop
notb
cs
addr16
in
add
mov
cmpsl
je
jp
ret
jge
loopne
and
mov
sbb
mov
dec
add
stos
rcr
test
cmp
sub
scas
outsb
mov
shlb
xchg
out
mov
adc
adc
es
addb
pop
int
inc
orl
outsl
cli
mov
sbb
lds
dec
xchg
and
push
jge
pop
jne
jne
jge
pop
sbbl
or
outsb
pop
push
cld
pop
mov
ret
sub
dec
arpl
xchg
mov
ret
inc
add
shl
in
push
mov
push
and
mov
inc
adc
mov
push
dec
jns
mov
jae
jno
mov
sub
inc
mov
mov
pop
imul
fsubrl
loope
pop
xlat
js
leave
out
xor
outsl
int
movhps
jns
xchg
sbb
or
jno
icebp
out
sbb
dec
movsl
js
and
popa
dec
arpl
jmp
mov
xchg
pop
mov
stos
scas
out
sub
and
and
lahf
int
jnp
push
cld
lcall
pushf
out
push
popf
pop
dec
inc
add
sbb
je
rorl
cmp
subl
lahf
cmp
sub
fstl
sub
cltd
leave
rcr
sub
cmpl
dec
or
mov
and
js
jg
cmpsb
scas
jae
movsb
cltd
lock
sbb
jne
inc
std
sub
add
mov
adc
xchg
out
call
xchg
push
push
push
cmpsl
mov
mov
jecxz
and
and
sbb
or
jle
sub
add
cli
pusha
enter
sub
cmp
fcmovu
cmp
sub
adc
loope
pop
cmp
out
xor
movsb
ja
addr16
insb
push
xchg
sub
fisttpll
imul
mov
cli
outsl
adc
sbb
xor
addr16
mov
push
lahf
jg
dec
pop
addr16
pusha
rolb
pop
inc
inc
add
into
iret
sub
sbb
jno
add
push
inc
fistl
or
or
push
sbb
test
movsl
cld
sub
pop
loop
pop
or
adc
or
roll
enter
xor
adc
idivb
arpl
out
enter
sbb
sub
out
aad
cmp
fiadds
jbe
cmp
xchg
stc
mov
call
pop
push
and
cmc
les
sub
jbe
rolb
push
inc
mov
adc
imul
repz
pop
mov
mov
push
inc
adc
add
and
jne
sbb
mov
sbb
xchg
xchg
lock
cld
fsubr
std
jns
js
jp
sbb
das
iret
movsb
call
sub
mov
test
in
pop
adc
sbbb
cmpsl
andb
dec
loope
mov
dec
jo
cmc
ret
pop
repz
inc
xor
inc
push
and
jne
add
rclb
shlb
cmp
mov
xor
mov
mov
xchg
lret
in
mov
pop
xor
inc
popf
jp
sub
sub
push
lock
int
or
xchg
push
jno
rclb
das
jecxz
inc
xlat
je
and
push
dec
jns
or
adc
push
jns
xlat
xor
mov
pop
enter
pop
dec
ja
pop
and
imulb
cwtl
sbb
call
enter
icebp
push
adc
sbb
faddl
loopne
lods
add
mov
cmp
out
and
dec
rcr
rorb
cs
lds
or
mov
incl
cmp
mov
mov
std
icebp
fstps
xor
clc
sbb
inc
dec
jecxz
mov
mov
xchg
push
dec
repz
in
pop
mov
movsl
mov
push
and
sbb
add
push
add
div
ss
aam
jg
mov
into
xor
and
rorb
dec
neg
mov
scas
mov
and
pop
jns
repz
jno
dec
dec
mov
sub
xchg
or
fwait
sub
lret
jne
pop
bound
mov
mov
or
and
sbb
sub
jmp
mov
fisubrl
sub
fbstp
add
pop
push
fcmovbe
cmpl
sbb
int3
mov
sub
inc
add
movsl
cltd
jnp
add
jl
mov
xor
push
jbe
sub
inc
xor
fdiv
xchg
addb
dec
adc
mov
sar
sbb
or
push
mov
jb
mov
test
xor
mov
mov
outsl
shll
xor
jmp
add
fidivl
xor
xchg
test
dec
imul
lock
xchg
inc
movsb
push
int
test
mov
lods
in
test
sbb
jnp
mov
std
scas
xor
cmc
jb
clc
daa
les
clc
inc
cld
insl
mov
lret
cld
adc
es
loop
adc
push
mov
pop
test
or
and
stos
dec
mov
addb
rcrb
mov
nop
rorl
and
or
cmp
fwait
and
cmp
pop
xchg
imul
cmp
push
ret
lcall
pop
sahf
ds
or
clc
push
scas
aam
in
mov
dec
fcomps
scas
dec
in
loope
xor
jo
cli
mov
mov
loopne
imul
mov
inc
int
mov
xlat
or
mov
jne
sbbb
int3
or
mov
dec
filds
push
ja
outsl
ja
cmpb
cmc
int
repnz
add
adc
jg
in
ficoml
mov
icebp
xlat
mov
and
icebp
pmaxsw
mov
leave
sbb
cltd
sbb
stc
aas
lods
pushf
ljmp
lods
nop
flds
es
icebp
sub
shrb
imul
adc
push
push
pop
lds
push
sub
mov
jbe
lahf
jne
addb
out
push
gs
repz
std
sti
pop
xchg
testl
cli
sbb
scas
dec
icebp
cwtl
ret
lret
dec
and
repnz
les
jb
test
mov
adc
pop
inc
jbe
adc
add
mov
cmp
loope
push
pusha
inc
sbb
std
dec
dec
inc
dec
in
adc
popf
inc
dec
pop
notl
dec
jno
mov
cs
pop
fwait
mov
ret
insb
lock
push
cs
push
xchg
in
dec
cmp
flds
dec
out
loopne
push
fcompl
stos
jp
inc
shll
fsubl
and
cltd
cli
aad
push
cli
mov
inc
lret
dec
push
pop
push
mov
dec
cmp
inc
jl
push
fwait
push
mov
jno
vpor
int3
add
mov
xchg
jno
inc
in
adcl
sbb
pop
fsubrs
mov
iret
iret
sti
push
ret
std
mov
into
fstp
inc
and
adc
jmp
subb
ds
adc
lret
push
or
adc
pushf
fcompl
nop
and
ds
testl
jl
stos
mov
adc
push
jp
inc
xchg
int3
rorb
adc
cmp
dec
jb
hlt
or
nop
xlat
cmp
bound
dec
insb
pop
mov
sub
jns
ret
cmp
push
sbb
mov
outsl
adc
mov
mov
push
xchg
insl
outsl
and
mov
add
arpl
rcll
jecxz
pop
xor
je
out
add
jl
jle
cmp
add
and
inc
or
or
js
insb
cmp
cmpsl
or
dec
cltd
inc
test
dec
xlat
adc
divl
dec
xor
lds
daa
cmp
fmulp
xchg
leave
xchg
adc
sub
pmaxub
test
nopl
and
mov
add
out
jmp
int3
hlt
rorb
pop
fcmovnu
lods
push
mov
icebp
insb
arpl
sbb
xor
mov
wrmsr
cmp
mov
iret
and
cltd
shll
add
inc
xor
scas
or
jb
pusha
das
cli
cmp
and
int
clc
jo
jp
pop
dec
mov
jp
cmpsb
xchg
ja
cmp
mov
lds
fdiv
addr16
call
out
cmp
jbe
sub
xchg
xchg
cld
mov
add
addb
sub
leave
inc
movsl
or
loopne
lret
cwtl
mov
xchg
cmpsb
negl
cmpsb
stos
mov
in
fmuls
ss
loope
cmp
add
mov
jle
cld
push
bswap
test
aas
imul
pop
xchg
mov
add
arpl
test
pop
stc
xlat
insl
xor
push
or
pop
daa
fwait
and
xchg
mov
sub
add
leave
push
popf
pop
subb
mov
xchg
sbb
mov
into
insl
shl
incl
jecxz
inc
mov
arpl
ficoml
sub
hlt
mov
mov
dec
into
cltd
lret
mov
daa
shrb
repnz
sahf
test
loop
sar
lret
mov
dec
jecxz
cld
push
int3
dec
fdivs
test
xchg
push
aad
dec
cmc
outsl
sbb
inc
data16
dec
ds
imulb
das
sbb
jae
pop
repz
adc
jmp
icebp
sub
fwait
jp
xor
mov
xor
scas
sahf
mov
push
rcr
push
rclb
xor
cmpsb
data16
sbbl
add
cmpsb
dec
stos
incl
xchg
insb
adc
or
pop
lds
xor
dec
into
ljmp
sub
mov
mov
jecxz
sbb
rol
push
add
in
pop
mov
adc
xor
lds
pop
lds
sub
ljmp
mov
mov
jmp
pop
push
pushf
jo
sbb
mov
dec
adc
pop
add
add
rcrb
clc
lds
fmuls
lcall
dec
hlt
jno
es
adc
cmp
and
paddq
idivb
mov
cmpsb
xlat
int
ret
loope
jae
xchg
push
add
rcr
cli
xchg
jmp
sbb
test
ja
cs
imul
nop
pop
cmp
or
pop
sbb
test
and
scas
mov
or
sahf
push
js
js
xchg
addr16
jb
sub
dec
les
or
test
adc
xchg
pop
and
aas
loop
stos
sub
out
nop
leave
xchg
xchg
icebp
les
pushf
push
fs
push
sbb
xchg
mov
je
adc
inc
cmpsl
repz
pop
push
mov
ret
cwtl
or
ds
pusha
loopne
mov
cwtl
popf
sub
daa
mov
xchg
ss
ficompl
dec
sub
into
mov
rorb
ss
jl
das
jb
imul
fisubs
sbb
loop
mov
lds
sbb
xchg
mov
pop
cmp
push
mov
stos
fstps
in
mov
mov
xor
sti
lret
popf
pop
xchg
xor
and
pop
xchg
push
out
mov
iret
js
mov
in
pop
pop
das
mov
in
add
imul
in
sbb
movsb
cli
addr16
js
out
cmpsb
xchg
jo
jns
or
lods
xchg
and
inc
jbe
pop
cltd
xchg
dec
lds
mov
stos
scas
in
mov
cmc
mov
leave
sub
leave
lahf
adc
stos
out
push
push
sub
pop
sub
sbb
push
movsl
inc
adc
leave
mov
pop
popf
jmp
movsb
shll
and
lock
insb
jno
xlat
loop
xor
mov
bound
mov
test
dec
das
xlat
les
fcomps
cmpsl
dec
jne
or
mov
or
ss
dec
sub
arpl
add
jmp
mov
mov
xor
mov
add
push
jecxz
dec
stc
roll
jb,pn
add
push
push
and
movsl
ss
push
mov
and
pop
cmp
add
pushl
mov
xor
jae
push
cmp
mov
cmp
imul
inc
fisttps
orb
dec
sbb
lret
pushf
cmp
mov
mov
push
mov
aas
push
push
adc
push
ret
fadd
jno
cmp
test
or
adc
mov
cmp
mov
push
out
imul
hlt
mov
out
inc
movsl
sbb
push
push
pushf
cmpsl
aad
mov
sub
push
cmc
xchg
imul
pop
mov
in
sbb
out
outsb
fdivs
mov
xchg
das
dec
ret
adc
sahf
fisubrl
gs
adc
pop
fwait
xor
ret
sahf
pop
rolb
cltd
pop
std
test
mov
xor
daa
xchg
into
divb
rdpmc
push
ficomps
cwtl
sarb
add
pop
mov
dec
mov
or
mov
xor
mov
negl
repz
and
movsl
sbb
mov
add
sbb
fs
fmull
stc
xchg
jb
dec
cmp
sub
xor
stos
cmp
fimuls
or
scas
stc
jmp
jl
rorl
negb
or
inc
mov
jo
inc
mov
mov
jbe
movsb
and
jne
loope
xchg
shlb
lds
sbb
lock
roll
push
not
and
xchg
lahf
jmp
out
sbb
or
pop
aam
lock
fmuls
mov
jnp
ss
outsl
sbb
dec
xor
mov
push
pop
adc
mov
inc
and
pop
decb
sub
mov
adc
push
inc
dec
cld
jns
lcall
clc
sub
addb
sub
fists
andl
cli
sbb
test
or
cli
nop
jno
push
fsubrl
iret
mov
jmp
paddq
pop
imull
push
jno
xchg
pop
mov
push
insb
aad
js
and
xor
and
xchg
xor
dec
and
dec
jae
push
mov
push
add
adcl
shl
sub
cmpsb
imulb
inc
in
cmc
dec
lods
cmp
out
xor
outsb
or
lret
or
sahf
jecxz
jo
enter
inc
pop
adcb
push
movsl
and
movsl
icebp
sub
xor
dec
pop
insl
push
rcrl
ja
cs
cmp
xchg
ret
in
out
dec
movsl
loopne
decb
cs
sub
mov
ja
clc
cmp
adc
mov
clc
fistpl
fstps
inc
mov
ret
mov
loopne
jnp
in
adc
int
push
hlt
call
mov
jo
jl
inc
cmpsb
fxch
movsb
fdivr
popa
in
or
loop
add
not
repnz
test
dec
arpl
cmp
movsl
adc
std
shll
scas
dec
addr16
aad
repz
iret
pusha
dec
jmp
stos
dec
lret
mov
inc
stc
out
mov
iret
sbb
rep
sti
mov
lcall
in
ss
aaa
sbb
mov
mov
ficomps
sbb
ret
jl
jmp
cli
pop
add
jl
or
xchg
add
dec
je
jns
cmp
inc
pop
xchg
cmp
lea
int
fdivr
sub
adc
mov
insl
jae
mov
je
dec
sbb
add
sub
xchg
test
stc
es
cmc
push
pop
ljmp
insl
sar
push
cmp
vpmadcswd
fnstsw
jns
jg
dec
stos
push
push
idivb
ret
and
pop
je
push
sbb
mov
ja
mov
cs
stos
clc
add
xor
int
adc
inc
xchg
ss
fcomi
adc
adc
icebp
cmp
loop
xchg
lahf
fisubl
lods
xor
and
and
add
lods
xchg
imul
mov
pop
mov
in
add
jne
xlat
pop
lret
sub
jmp
shlb
push
cmc
jnp
lods
xchg
dec
mov
pop
push
mov
incb
xchg
insb
lock
test
push
fs
loopne
add
and
sti
jmp
mov
sub
pushf
pop
fs
sahf
and
out
xchg
dec
push
add
stc
ds
lret
adc
in
test
sahf
dec
push
ret
xor
cmc
in
aaa
pop
mov
push
xor
add
fistl
in
mov
xchg
test
lock
sub
lret
inc
sbb
loope
cltd
sbb
repz
mov
fs
cmp
jbe
imul
addr16
push
mov
lods
dec
mov
int3
sahf
ljmp
outsb
loopne,pn
in
add
out
fxch
outsb
mov
adc
aad
rdtsc
jb
shll
fsubrl
sub
sti
mov
adc
aas
mov
popf
mov
jne
or
loope
ja
cmpl
push
outsb
lahf
and
sbb
inc
push
imul
in
adc
mov
in
in
adc
ficoms
adc
jmp
mov
insl
push
and
mov
mov
cmpsl
jge
sub
cld
aaa
nop
sub
cld
add
push
sahf
jle
hlt
mov
pop
in
jle
sub
xlat
push
xchg
out
mov
mov
aad
ds
sub
sub
data16
icebp
mov
inc
or
sub
cwtl
fcoms
fstps
jae
mov
jbe
fcomip
mov
mov
mov
imul
jl
insl
orps
loopne
pop
int3
rcrl
dec
mov
jg
push
mov
ds
add
sbb
insl
mov
inc
and
dec
mov
inc
cwtl
data16
int
and
arpl
add
ja
jns
mov
xchg
sbbb
iret
push
mov
push
and
movsb
or
or
cltd
mov
stos
push
jb
sbb
xchg
xchg
mov
cmpsl
sbbl
lcall
inc
lods
pop
jl
jae
stc
popa
pop
cmpb
mov
ljmp
inc
sar
cli
movsb
les
iret
dec
sbb
adc
push
mov
mov
mov
pop
mov
daa
mov
insl
repnz
into
push
cwtl
mov
stc
dec
xchg
imul
mov
stos
pop
push
mov
mov
repnz
sbbl
jb
xchg
testl
insl
shr
jno
mov
inc
add
popf
sbb
arpl
fisubs
aas
push
sub
loope
test
lret
int
mov
or
mov
test
ret
fwait
sub
xchg
or
pop
sub
and
or
and
inc
sti
sub
add
cs
dec
push
enter
or
cs
fwait
pop
mov
jle
xchg
jg
push
movups
adc
outsl
test
daa
hlt
sbb
or
lods
pop
xchg
sarl
sub
aas
xchg
in
insl
out
lods
lahf
jg
repnz
lret
push
xchg
repz
jmp
mov
pop
enter
add
lods
pop
daa
mov
filds
scas
aas
loope
imul
or
xchg
add
imul
dec
les
cmp
daa
lds
int3
mov
orb
call
loop
idiv
mov
test
mov
lods
xchg
lret
xor
or
pop
mov
lods
mov
and
pop
dec
mov
dec
push
movl
outsl
and
aam
mov
int3
dec
dec
sub
ret
movsb
sub
lods
cmpsb
pushf
cltd
loopne
out
xor
sti
cmc
fmuls
mov
aaa
push
aam
sub
jns
sbb
in
pop
xorb
scas
rcrl
loop
sbb
popf
adc
dec
lahf
cltd
mov
dec
jl
out
adc
neg
push
mov
add
repz
enter
and
mov
mov
bound
jne
loopne
inc
pop
sub
jnp
mov
ja
leave
cmpsb
cmp
and
inc
pop
les
sti
int
jecxz
cmp
cs
pop
call
dec
jne
jbe
and
stos
gs
fs
popl
sti
test
mov
jae
push
adcl
movsl
pop
cmp
movsb
lahf
fstps
jl
fcmovnu
scas
std
mov
dec
jecxz
outsb
add
jns
in
cmp
xchg
mov
int3
cmp
xor
sub
outsb
es
pop
push
and
push
inc
inc
push
stc
add
cld
and
sub
popa
adcl
arpl
push
std
jmp
dec
and
add
xor
dec
int3
inc
stc
ja
jns
cli
adc
rcll
arpl
fs
and
add
fwait
je
adc
in
xchg
out
movsb
or
bound
xchg
mov
inc
inc
jmp
je
jns
jp
rcrb
adc
cmp
ret
mov
mov
repnz
xor
dec
jp
dec
cwtl
and
sbb
int3
jo
push
ret
push
pop
ret
hlt
out
sbb
inc
lods
nop
push
pop
nop
sub
add
imull
mov
cmpsb
fs
insb
ds
push
xchg
mov
lock
lea
addl
xlat
test
xor
lods
push
nop
xor
fstpt
iret
aas
pop
dec
into
mov
jl
stc
sahf
mov
call
inc
xor
pop
nopl
arpl
pop
and
mov
stos
enter
aas
push
jo
loop
or
lahf
adc
or
insb
lret
cmp
cmovl
mov
es
dec
xchg
test
jge
pop
cli
jb
std
or
push
mov
push
fs
scas
dec
cmpsl
int
les
divl
shl
movsb
arpl
sub
jnp
sbb
fcoms
xchg
pop
jno
jb
hlt
test
lock
stos
mov
cmc
cmp
imul
inc
rep
cmp
xchg
push
les
xchg
push
int
sti
je
test
xor
sti
out
ljmp
and
and
mov
out
and
push
sub
push
push
sub
inc
sub
sbb
sti
cmpsl
jge
dec
cmp
cltd
mov
jo
add
dec
sti
push
in
mov
pop
je
mov
insb
mov
xchg
aas
cmp
lods
test
sbb
pop
cwtl
aas
ljmp
push
ss
popa
xor
ret
mov
jmp
pop
pop
mov
rcrl
inc
dec
vdivsd
xchg
and
cld
imul
sbb
loope
dec
or
adc
stc
iret
outsl
insl
jl
or
xchg
inc
pushl
dec
cmc
lret
pop
test
mov
adcl
sarb
mov
insb
jp
mov
adc
adc
pop
repz
pmaxub
shrl
push
jg
das
sbb
or
add
add
mov
test
inc
fwait
sbb
push
out
adc
mov
repz
adc
jb
imul
rol
xor
dec
mov
mov
sub
je
dec
fbld
les
fstpt
jecxz
inc
sbb
adc
add
cmp
push
roll
pop
pop
lock
push
pop
movsl
loop
inc
cmpsb
jbe
jp
inc
paddsb
cmp
sahf
jge
push
jp
sbb
idivl
mov
cmp
cmp
cmpsb
pop
aad
adc
cmp
fstpt
and
jb
and
push
jno
and
in
or
adc
xchg
mov
call
in
mov
in
dec
jae
xor
ret
jecxz
aad
fdivs
pslld
gs
inc
mov
popf
push
and
pop
mov
aas
test
out
sbb
jno
push
xchg
testl
mov
xchg
dec
inc
push
xchg
pop
test
daa
and
add
pop
xchg
adc
in
test
dec
inc
mov
adc
stos
cwtl
aas
adc
test
lahf
lea
xlat
cmp
les
call
pop
sub
jge
loope
lods
lret
ret
sub
push
sub
lods
clc
mov
or
decb
cmp
out
outsb
leave
je
mov
xchg
sbb
in
pop
push
cmp
je
xchg
mov
movsl
sub
push
testb
mov
jl
fwait
and
mov
xor
cmpsb
test
mov
negl
sti
mov
add
jle
adc
add
cmp
push
xor
mov
jmp
sar
add
stos
sbb
pop
cmp
cwtl
imul
add
cmpsl
fucomp
mov
or
not
aaa
mov
in
xchg
jmp
vmovd
ljmp
cmp
dec
xchg
fstpt
loope
mov
out
test
scas
mov
mov
pop
test
sbb
enter
fsubs
mov
in
mov
shll
mov
adc
pop
lea
in
mov
jp
bound
push
mov
dec
test
mov
rcr
iret
jp
data16
jl
fsubrl
in
scas
and
mov
inc
push
cmp
and
inc
dec
fs
jp
sbb
lods
sub
icebp
and
mov
jge
and
push
fiadds
xchg
test
enter
sbb
jb
test
xchg
lcall
xchg
scas
pop
mov
jecxz
shr
sub
imul
xchg
add
sti
sub
pop
ja
sti
add
inc
jge
jnp
cmpsl
mov
fmuls
sub
cmp
cs
fsub
push
rclb
clc
mov
movsb
out
mov
jns
cmp
ss
test
push
adc
pusha
mov
cwtl
adc
mov
push
push
test
lods
js
adc
inc
pusha
incl
mov
pop
fnsave
inc
and
mov
les
lea
xchg
sub
mov
iret
popf
shll
mov
or
dec
leave
sbb
mov
mov
or
adc
stos
and
xor
movsb
insb
adc
int3
mov
mov
and
adc
dec
dec
out
cs
pop
es
jne
dec
jns
insl
in
repnz
jmp
jmp
adc
push
xchg
push
xchg
ficoml
jecxz
mov
popf
inc
in
xchg
mov
dec
adc
movsl
inc
push
insl
je
and
pusha
hlt
int
inc
mov
leave
stos
std
jae
mov
mov
pop
jno
scas
mov
sahf
lcall
or
cli
mov
in
cmp
adc
nop
mov
negl
or
out
dec
test
in
and
not
xchg
push
cmp
outsb
js
fs
or
fbstp
pop
fcmovne
in
adc
mov
mov
stos
mov
xchg
cmp
jb
ds
push
call
mov
loope
add
call
jae
sub
pop
leave
adc
ss
mov
sbb
adc
push
sub
push
lods
lods
ret
cmpsl
mov
sahf
mov
outsl
imul
xchg
pop
mov
rorb
add
ret
loop
jns
fisubs
bound
scas
dec
add
pusha
in
ret
jmp
lcall
in
imul
das
aas
fidivrl
push
aam
lcall
inc
test
jno
or
jae
dec
sbb
add
inc
ljmp
subl
stos
cmp
rcr
lds
dec
cs
mov
shl
loopne
aaa
fsubs
xchg
in
add
int
in
daa
dec
inc
sub
xchg
add
adc
rcr
addb
popa
adc
push
lahf
sbb
ror
insb
shrl
out
xchg
arpl
mov
popl
inc
add
inc
mov
pop
test
adcl
lret
insb
or
movsb
xor
and
stos
xor
cmp
leave
fmull
adc
xchg
insb
push
xor
repz
xchg
pop
xor
sub
inc
cli
outsl
test
xchg
sbb
std
or
inc
cmp
inc
repz
pop
negl
dec
sub
push
add
or
mov
xor
or
mov
mov
sbb
lods
inc
and
cli
mov
aaa
sub
jno
cmp
sbb
mov
lea
in
xor
and
scas
pushf
popa
fs
lds
addr16
or
mov
cmpsl
adc
scas
test
jo
pop
mov
push
loopne
pusha
xor
ja
sti
and
out
dec
xchg
int3
mov
pop
outsl
push
jns
test
or
gs
jp
cmc
in
xchg
pusha
and
les
mov
in
in
mov
lock
mov
jmp
dec
mov
mov
xchg
test
adc
and
sti
movsb
jo
pusha
sbb
push
mov
push
in
lds
je
xchg
sahf
mov
mov
inc
inc
sub
loope
pop
dec
inc
mov
mov
clc
mov
inc
inc
pop
leave
pushf
and
es
cltd
mov
insl
fidivs
fnstcw
dec
inc
push
jecxz
aam
data16
sbb
lods
mov
data16
fcmovbe
cmp
pop
mov
mov
repz
in
and
arpl
mov
push
pop
in
mov
loope
pushf
fmul
xor
enter
or
cmp
adc
outsl
jge
cmp
and
test
mov
mov
or
push
mov
xchg
rcrl
sti
std
mov
lret
xchg
add
mov
inc
ds
jbe
aas
outsl
sub
inc
movsb
arpl
mov
mov
mov
inc
xchg
inc
fldenv
push
pusha
rclb
push
test
xor
adc
jne
out
xor
inc
jl
sarl
rclb
in
mov
xor
fwait
push
repz
add
insb
cmp
stos
push
aad
sbb
cwtl
fwait
insb
cltd
add
push
adc
test
dec
pop
cmp
add
out
cmpsl
enter
test
dec
jge
out
mov
int3
xlat
mov
xchg
cmpsb
fbld
mov
mov
push
call
dec
fwait
js
ljmp
jecxz
test
and
or
out
div
inc
stos
out
xchg
into
xchg
mov
clc
addr16
out
sub
inc
cld
lock
test
xchg
jmp
clc
sub
adc
xorl
fs
xlat
sbb
dec
negl
xchg
cli
pop
mov
insb
out
adcb
pop
and
enter
jbe
mov
fidivs
add
pop
insb
and
cmp
xchg
jbe
mov
out
cmp
lahf
xor
push
das
scas
mov
mov
cmc
mov
add
or
ficoms
jge
jne
xchg
cmc
push
or
xor
mov
xlat
cmpsb
mov
mov
into
cmp
movsb
push
adc
inc
mov
aas
add
adc
sbb
shl
popa
es
aam
mov
xor
fs
inc
subps
xchg
das
icebp
jg
ljmp
or
sti
and
movsb
inc
testb
data16
in
popa
xor
and
cmp
movsb
popf
xchg
cmpl
mov
jmp
adc
sbb
shrl
mov
cmp
ret
ja
rorl
push
mov
xchg
pop
and
lret
inc
popl
xlat
cmc
mov
rorl
pushf
clc
inc
inc
lea
sarb
movsb
cmp
inc
out
rcr
mov
pop
push
sbb
out
pop
out
sub
shr
mov
bound
mov
adc
adc
cmovns
icebp
nop
add
out
insb
dec
cli
sbb
mov
js
into
test
push
imul
lods
fs
rcl
in
mov
jecxz
repz
push
fs
shrb
movsl
cmpsl
pop
fwait
lock
xor
pushf
lods
cmpsl
mov
enter
ret
stos
pop
jmp
mov
sbb
dec
xchg
mov
ret
xchg
sub
je
cmp
aaa
enter
adc
jb
dec
iret
mov
push
stos
in
sbb
shll
stos
shr
std
xor
and
jo
shlb
mov
arpl
into
add
xchg
inc
inc
adc
xchg
dec
je
jmp
jns
sub
divb
lock
sbb
je
test
lods
or
mov
cmp
xchg
arpl
repz
jg
or
pop
daa
and
lret
cld
dec
mov
pop
imul
repz
add
shr
ret
xor
icebp
in
int
sub
mov
push
cs
pop
into
pusha
adc
xchg
mov
orb
xchg
int
imul
jl
movsb
loopne
sbb
xor
int
insb
lea
in
xlat
sbb
jg
cld
cmc
bound
arpl
push
subb
and
ss
test
iret
loopne
mov
int3
js
enter
mov
mov
pop
call
sub
stos
jb
cltd
sub
out
sbb
mov
push
push
xor
ret
mov
dec
leave
add
lock
jmp
xor
add
shlb
cmp
add
fcmove
xor
push
jnp
scas
adc
inc
faddl
add
jns
pop
jmp
int3
push
call
outsb
pop
sbb
xor
jae
cmp
pop
xor
icebp
fdivrs
mov
adc
ret
fcompl
xchg
add
into
sti
push
and
mov
mov
jmp
and
mov
and
mov
std
rcl
nop
pop
cld
or
dec
cmp
daa
jl
ret
out
pushf
jo
aaa
test
pop
mov
out
sar
jmp
xor
in
or
jg
into
or
jns
aas
adcl
shlb
xchg
insl
jl
xor
add
adc
shrl
rcrl
mov
or
jp
test
rclb
xlat
jp,pt
seto
lret
push
and
aam
xor
add
mov
das
sti
jo
push
in
inc
inc
lods
pop
cmp
cmp
test
mov
popa
cmp
je
dec
shll
cwtl
mov
mov
add
iret
pop
mov
mov
lods
add
je
lret
push
jns
sbb
lock
addr16
test
sbb
inc
pop
xor
adc
xor
ffreep
adc
inc
mov
test
lea
fbstp
mov
insb
and
in
dec
fistl
cmp
test
adc
data16
mov
mov
dec
mov
cmp
fwait
mov
jmp
lret
popf
xor
aam
std
xor
mov
je
sub
loop
xchg
cmpsl
mov
push
jnp
test
pushf
bound
mov
test
push
in
cmp
push
rclb
dec
pop
xor
rcrl
xchg
jle
fsubl
pshufw
ret
int3
and
cmp
fs
sbb
mov
xlat
or
sub
inc
popa
dec
push
sarb
ds
adc
and
cmpsb
sbb
imul
add
xchg
cmp
aam
out
and
fcompl
fldl
add
insl
cmp
aaa
fldt
scas
insb
cmc
pavgb
jnp
mov
mov
aam
arpl
add
sbbb
sbb
jmp
mov
push
fstpt
outsl
dec
testl
pop
xor
imul
or
ficompl
popa
add
or
lods
lret
and
in
jl
inc
mov
jmp
rclb
cmp
xchg
xrelease
iret
xchg
jbe
cld
icebp
test
xchg
gs
lds
xchg
daa
mov
sbb
add
mov
and
in
sub
sarl
fimuls
ltr
sahf
or
je
xchg
nop
cltd
pop
inc
repz
ss
xor
sbb
popf
sahf
mov
leave
and
and
outsb
cmp
jge
xor
mov
pop
xchg
or
stos
cmp
and
pop
sbb
outsb
push
xor
mov
jns
sarb
or
insb
mov
lods
xchg
pop
bound
sub
div
popf
daa
pop
cli
sbb
lret
lods
movsl
xor
xor
sti
sub
insl
out
sub
push
fs
scas
cmpsl
imul
xor
aad
sub
and
das
outsl
test
jg
push
loop
gs
mov
std
mov
pop
lcall
in
push
cld
pop
cmp
add
ret
cmp
sub
aad
orl
pop
out
addl
call
or
sub
gs
xor
cmpsl
fistpl
je
outsb
mov
fdiv
push
or
stos
js
sub
lds
mov
andl
xchg
data16
cli
cmp
add
jbe,pn
cmp
xchg
jge
lea
add
in
jle
scas
imul
mov
lock
dec
add
lcall
push
xorb
xor
xor
int3
or
sahf
and
bnd
lods
inc
pop
push
das
inc
push
negb
jbe
inc
test
dec
push
inc
pop
xor
shll
jp
negb
loopne
adc
inc
push
sub
mov
insb
jo
ss
lds
insb
push
leave
imul
cmp
and
sub
inc
cmp
add
add
and
out
and
lret
in
jmp
jge
add
jb
jbe
out
or
int
popf
inc
inc
mov
sub
mov
or
test
adc
fidivs
mov
pusha
pop
imul
jae
andl
jb
ret
clc
push
jo
sbb
inc
inc
movsb
jecxz
push
and
mov
outsb
mov
inc
test
pop
cli
dec
testb
ss
xor
push
xor
fildl
pop
lahf
mov
gs
outsl
cld
sbb
iret
jb
mov
push
pop
jae
dec
lret
sbb
jnp
cmc
add
jmp
cmp
jmp
or
scas
push
es
fadd
push
add
in
lret
jbe
and
xchg
pop
jg
insl
sub
pop
xor
insl
xor
idivb
sbb
sbb
cmpl
sub
cltd
mov
stc
or
add
push
pop
testl
xor
pop
push
aas
daa
or
inc
xlat
outsb
dec
mov
andb
or
push
out
insl
stos
imul
mov
in
ret
outsb
cld
jb
dec
or
mull
inc
loope
jno
out
adc
xchg
incb
mov
xor
mov
inc
mov
or
add
out
push
ljmp
and
out
mov
in
inc
out
jmp
cwtl
inc
ret
or
add
cmp
push
xchg
pop
bound
test
and
jge
jmp
loop
mov
cmp
xchg
test
add
sti
sub
mov
mov
pop
mov
int3
cli
in
add
jae
cmp
cmp
jmp
cmp
stos
ja
idivl
mov
jnp
nop
fcmovnbe
lock
pusha
loope
enter
repz
mov
js
mov
stos
pushf
dec
insb
stos
out
sub
testl
adc
xchg
cltd
outsb
lcall
adc
mov
shrl
and
sbb
mulb
or
inc
jb
orb
pop
shlb
mov
in
std
imul
insl
and
pop
lahf
leave
test
ret
std
sbb
fwait
jnp
xor
mov
js
adc
dec
popf
push
lods
aad
jbe
popf
jge
push
and
stc
fcoml
leave
push
fwait
xchg
rcr
jmp
sbb
xor
scas
xor
add
fadd
push
jg
adc
push
fnstcw
scas
in
add
push
hlt
je
scas
jp
cmpsl
pop
shrb
cli
lret
lahf
mov
inc
dec
gs
in
xchg
mov
imul
or
jno
out
or
adc
icebp
jne
jnp
lahf
push
and
add
out
gs
loope
pop
ljmp
inc
jmp
mov
rcrb
lret
jl
adc
and
ret
cs
test
insb
subb
sub
pop
or
popf
rcrl
xchg
and
aas
sub
test
add
sarb
xchg
fcoml
lock
xor
sub
ds
and
cmp
lcall
push
push
flds
push
sahf
mov
sti
sub
and
pop
mov
xor
fnstenv
fisubs
clc
daa
mov
xor
adc
xchg
jbe
cmc
cmpsl
lds
fprem
adc
nop
out
xchg
ficompl
push
jg
push
sbbb
mov
popf
pop
lods
andb
xor
or
dec
mov
movsl
cmp
push
subl
sahf
adc
adc
adc
es
push
fcomi
inc
sub
pop
dec
or
add
push
stos
mov
push
and
aad
adc
or
stc
mov
mov
mov
xor
mov
xor
cltd
adc
enter
mov
fsubl
cmp
in
xlat
dec
daa
mov
repnz
and
sbb
pushl
cmp
test
xchg
mov
inc
push
xchg
xchg
in
sbb
xlat
xor
movsb
sbb
pop
add
ret
jecxz
sub
rcl
add
xor
jl
pop
lock
xchg
mov
cmc
mov
ret
sub
addb
fldcw
xchg
movsb
ss
scas
cmpsl
nop
fcomip
andl
dec
cmpsb
cltd
in
and
jb
or
fiadds
mov
bound
rorb
pop
loopne
imul
mov
push
cs
jno
add
push
add
sub
je
pop
popf
xchg
call
sbb
clc
mov
popa
frstor
or
or
xor
pop
add
int3
loop
sbb
sub
aam
mov
mov
addr16
mov
ljmp
jns
push
lcall
dec
fldl
iret
leave
and
or
sbb
add
loop
push
mov
adc
movsl
jle
mov
lret
pusha
jmp
lods
add
sbb
mov
fisttpl
scas
loope
sbb
and
hlt
enter
es
movsb
push
in
jnp
ss
stos
add
xchg
popf
stos
and
mov
icebp
lds
out
aas
mov
pop
cld
repz
mov
out
ficoml
sbb
cmp
stos
fs
xor
pop
ss
adc
jle
xchg
add
xchg
cs
shlb
or
arpl
mov
mov
pushl
ret
addb
mov
pop
inc
cmp
fwait
xchg
pop
repnz
repnz
jecxz
cmpl
fidivrl
xchg
jb
pop
ds
mov
sub
or
mov
lods
xchg
imul
or
xchg
xchg
test
cs
xor
mov
add
push
adc
and
push
call
xor
insl
int
hlt
loop
xchg
mov
shrb
push
mov
add
jmp
gs
int3
jmp
cmp
xor
adc
popl
push
xor
xor
xlat
xor
inc
aad
cmp
push
xlat
aam
push
scas
out
dec
xchg
lahf
inc
stos
mov
and
mov
pop
jmp
rorb
xchg
dec
repz
xor
or
outsl
add
test
xor
loopne
jae
mov
pop
leave
inc
ror
mov
out
in
xchg
mov
loope
fwait
push
adc
jae
sub
adc
xchg
add
rcrl
lcall
pop
cmp
pop
shrl
xchg
test
xor
scas
addr16
mov
pop
pop
adc
inc
cli
scas
rolb
mov
mov
and
push
inc
and
xchg
and
into
dec
lahf
inc
fstpl
jmp
testb
bnd
gs
dec
outsb
cmp
adc
stos
jne
ficoms
cmp
mov
ja
lret
divb
mov
lahf
ret
pushw
scas
neg
push
js
js
adc
sbb
clc
imul
pop
sbb
aaa
in
mov
hlt
cmp
sar
push
jge
inc
aam
sbb
adc
xchg
mov
pushf
int3
imul
out
push
mov
sbb
pop
mov
sbb
jge
test
mov
leave
mov
dec
popf
inc
pop
leave
data16
lret
xchg
pop
mov
pop
outsb
and
sbb
mov
bnd
bound
push
and
sbbb
mov
add
push
out
test
adc
push
mov
and
jmp
and
mov
mov
scas
pop
or
xchg
mov
jmp
mov
test
inc
imul
sar
mov
and
xchg
adc
call
rclb
mov
mov
add
mov
sub
lahf
push
sub
imul
push
mov
in
inc
sbb
outsl
ds
fimull
repz
mov
es
aad
test
les
mov
sbb
adcl
and
sub
adc
sahf
stos
ror
and
pop
push
int3
in
inc
fcompl
mov
outsl
aas
or
scas
mov
test
adc
lret
jle
adc
xlat
jmp
or
mov
imul
sbb
lret
xchg
xchg
cwtl
rcll
jmp
outsb
dec
mov
bound
jp
push
adc
push
movsl
loope
sbb
fstps
pop
stos
adc
xor
sub
cmp
xchg
ret
shl
cmc
jae
notb
dec
test
out
adc
ret
cmp
int
scas
cld
popf
sti
jnp
addr16
push
data16
jecxz
xor
inc
add
mov
pop
cmp
icebp
ret
lock
shl
mov
and
pop
dec
jl
pop
je
in
pushf
lods
lahf
mov
sti
fucom
xchg
dec
iret
jp
jecxz
dec
mov
fdivrl
jl
mov
and
jbe
lods
mov
push
pusha
sbb
jb
popa
out
pop
xchg
pop
stc
int3
push
subb
mov
pop
loopne
mov
jns
into
or
cmp
mov
out
aaa
mov
add
pop
fcoml
mov
adc
test
xor
sub
dec
inc
fdivl
mov
dec
xchg
jbe
or
inc
in
push
and
add
mov
mov
outsb
bound
sub
mov
xor
add
push
aad
and
loopne
adc
mov
outsb
loopne
repnz
arpl
xchg
jg
jb
cmp
and
imul
cmpsl
rorb
fnstcw
aas
sbb
lea
xchg
pop
mov
mov
fs
xlat
pop
movsl
lds
jbe
fs
inc
hlt
inc
xchg
jb
or
ror
inc
adc
mov
rol
leave
jbe
dec
je
sub
jbe
push
xchg
pusha
mov
mov
loope
mov
jbe
mov
xor
push
ret
dec
jae
fincstp
mov
ss
or
sbb
pop
dec
fisubs
cmp
adc
add
bound
sahf
les
push
add
mov
test
jnp
sub
mov
xchg
mull
cwtl
in
cld
lods
or
pop
scas
fsubrp
cmp
sub
mov
lahf
gs
addl
fstps
sbb
cltd
xchg
lods
out
and
push
mov
rcrl
icebp
pop
push
in
negl
sbb
adc
xchg
pop
addr16
mov
xchg
gs
loope
inc
push
lods
dec
pop
in
ds
fiaddl
in
dec
idivl
xchg
pop
add
inc
in
mov
clc
push
push
xor
and
inc
rcrb
aam
popf
data16
aad
rclb
push
dec
pop
adc
pusha
sahf
mov
push
sbb
insb
cmp
jmp
and
mov
cli
stc
mov
mov
and
mov
inc
cmp
sub
leave
je
mov
adc
pop
cmp
fwait
lcall
shlb
sbb
mov
or
inc
mov
test
je
sub
ds
pop
jbe
inc
jmp
jmp
xchg
cs
lcall
lcall
not
mov
inc
lods
test
mov
mov
xchg
or
inc
sub
sti
shlb
add
sarl
and
mov
xor
aaa
dec
inc
and
scas
dec
adc
gs
aas
or
xchg
inc
pop
xlat
es
dec
and
lcall
lods
xor
repnz
push
and
in
mov
xchg
cld
or
push
sarb
and
hlt
xor
in
out
and
jo
mov
loope
das
sub
cld
shlb
cmp
lods
sbb
int
sti
inc
pop
sbb
movsl
adc
jb
jl
cli
jns
call
fidivs
pop
pop
xor
fidivl
adc
or
out
adc
add
js
dec
add
pop
mov
inc
fistps
shll
dec
inc
lret
jge
iret
inc
jg
mov
lods
push
sbb
into
jbe
jmp
push
lret
push
push
xor
xchg
xor
movsb
inc
push
mov
and
xchg
adc
bound
sbb
fsubrl
aaa
addl
cmp
dec
iret
loop
and
push
inc
into
cmpsb
mov
mov
mov
and
jl
jp
test
ja
lods
and
je
call
aaa
ss
mov
int3
cmp
int3
adc
ret
into
jecxz
jl
push
xchg
in
jle
into
imul
and
push
stos
jg
lahf
in
shl
push
movl
divb
jnp
outsb
popa
leave
sub
inc
dec
or
cli
int3
ds
jle
jbe
jbe
lods
xor
xor
arpl
call
pop
adc
jnp
inc
adc
in
push
add
movsb
jno
aam
cli
cmp
lahf
mov
mov
loop
repnz
loope
stos
das
jp
icebp
or
pop
fsub
inc
mov
cltd
xchg
pop
dec
bound
push
hlt
mov
dec
insl
jb
cld
rcr
pusha
test
shrl
xchg
sbbl
loope
mov
testl
jmp
jp
popf
jge
mulb
lahf
xor
icebp
and
and
fisubl
mov
add
and
adc
or
fcmovnu
test
sbb
cmp
decb
push
mov
mov
in
add
cmp
in
jg
add
or
mov
mov
mov
hlt
daa
out
in
xor
cmp
sub
adc
and
jge
inc
lods
sbb
and
sub
stc
dec
sbb
push
aam
cwtl
out
mov
fs
sbb
rcll
adc
cmc
inc
cld
cs
cmp
pop
andl
pminub
scas
ret
jge
inc
pop
inc
aaa
xchg
fnstsw
add
leave
fsubr
ret
rcr
lock
pop
pop
mov
out
aam
out
icebp
shrb
cmp
aad
jno
xor
ss
jg
and
cwtl
and
std
adc
jmp
movsl
jnp
add
pushf
mov
mov
inc
dec
idivl
inc
push
je
jmp
sarl
sub
xchg
loop
imull
or
hlt
jnp
push
addr16
rcrl
cmp
mov
int3
dec
mov
jb
jns
inc
fsubrl
xchg
scas
lock
or
out
add
sub
jno
fsts
xlat
xchg
mov
xchg
adc
xor
push
decb
jp
jl
in
jg
adc
shll
lcall
jle
cs
lahf
aaa
jecxz
xor
mov
sbb
pop
sub
js
dec
daa
pop
cmp
sti
lcall
in
ss
push
sbb
loope
cs
xchg
out
out
or
sbb
push
aad
mov
les
into
mov
pop
daa
dec
test
push
movsl
cltd
and
in
insl
cwtl
mov
adc
xchg
or
and
add
test
adc
jne
jecxz
repz
mov
test
orl
stc
xchg
cli
das
aad
mov
mov
xchg
incb
jle
xor
cmp
adc
mov
jl
jmp
cltd
mov
fcmovbe
faddl
and
mov
add
jp
loop
sub
adcl
add
imul
loop
stc
lret
mov
aaa
aad
out
mov
dec
cmpsb
cmp
mov
lds
rolb
xor
inc
nop
mov
dec
addl
or
into
imul
test
cmp
into
jmp
pop
rcll
movsl
xor
jmp
cli
into
mov
push
mov
or
pop
inc
jno
xchg
ret
test
lea
aam
pop
cmp
out
xor
mov
lret
jmp
jae
mov
mov
mov
mov
push
mov
push
into
fildl
cmpsb
lock
jae
xchg
mov
sbb
jne
clc
stos
xchg
sub
out
push
fidivrs
sbb
push
dec
ss
xor
sub
clc
in
jl
and
xor
or
inc
inc
les
sti
cmp
cltd
nop
inc
adc
adc
call
mov
and
lahf
or
mov
gs
xchg
push
lea
xor
jg
insl
shll
je
fisttpll
in
lcall
push
clc
fdiv
ret
mov
test
test
shl
gs
je
push
cmpsl
mov
lock
adc
lea
pop
jnp
jp
xorl
xor
mov
push
adc
testl
pop
xor
lret
jp
sub
orl
popa
sub
pop
mov
nop
data16
lods
sbb
push
push
mov
xor
and
leave
pop
cmc
out
mov
jae
cmpb
push
outsb
fisttpl
dec
subb
out
and
xchg
cmp
adc
push
dec
push
sbb
cmp
jmp
sahf
pop
sub
xor
pop
inc
js
aas
inc
lods
add
in
mov
insl
test
xchg
cld
aad
mov
arpl
call
int3
int3
push
sbb
xorb
mov
int
clc
fistps
inc
mov
ficoml
jnp
sub
cld
dec
adc
inc
shll
push
jg
mov
into
daa
jg
mov
or
cmpsb
repnz
ror
pop
and
pop
xchg
fsubs
push
test
xchg
cmp
icebp
stc
mov
jmp
add
xchg
adcl
push
xchg
sbb
add
sahf
popl
pop
imul
xchg
sbb
mov
mov
call
cmp
jmp
loop
xor
aam
sarl
ss
movsl
test
popa
xchg
sbb
dec
dec
test
add
popa
pusha
in
pop
pusha
in
mov
jne
pop
cmp
pop
push
outsl
push
xchg
inc
ret
push
mov
lret
addl
mov
mov
add
loope
neg
pop
inc
mov
data16
inc
pop
or
push
and
insl
pop
add
out
stos
mov
jmp
pop
fwait
loope
dec
adcl
repz
imul
iret
dec
cmp
pop
icebp
mov
scas
lods
sub
in
andl
or
stos
sbb
mov
sub
sub
adc
rol
cmp
dec
imulb
fcmovu
xchg
pop
scas
xor
out
jnp
inc
aad
pop
cmp
pop
push
pop
cmpsl
movsl
dec
fwait
pop
aaa
fistl
xor
add
mov
sbb
jmp
shr
lock
mov
pop
insb
sub
adc
or
cli
adc
xchg
loope
inc
xchg
stc
repnz
cmpsb
xor
pop
shrl
out
stc
lret
int3
pop
imul
jg,pt
sbb
mov
adc
nop
adc
inc
cwtl
sbb
xchg
mov
dec
or
bound
cmc
shll
mov
dec
mulb
jns
js
cltd
call
and
mov
fwait
or
inc
jg
cmpsl
sti
mov
xor
jns
rcrl
pop
adc
xor
cmp
and
popf
insb
out
lods
mov
pop
mov
sub
ror
outsl
fldt
shrl
xor
xchg
aas
inc
mov
cwtl
pusha
mov
nop
into
dec
int
push
xor
popa
aaa
push
or
cmp
rolb
cmp
loop
mov
push
dec
cli
sub
inc
lahf
sub
push
sub
scas
add
repz
push
lods
adc
test
push
in
add
dec
sbb
aas
push
clc
int
sarl
mov
adc
repz
sub
and
lods
pop
and
push
imul
arpl
jo
into
rcrb
fwait
pushf
inc
sbb
xchg
fists
fsubl
sub
mov
aaa
lock
push
ja
push
pop
xor
add
push
mov
inc
push
ret
xor
aaa
sub
mov
fidivl
iret
push
mov
cmp
je
jno
mov
data16
push
push
pop
or
mov
addl
movsl
jmp
out
add
stos
mov
jge
jle
es
popf
je
mov
fcompl
or
dec
stc
popa
pop
or
loopne
mov
jnp
out
cmp
and
ss
sbb
ljmp
shrl
pop
data16
fdivp
iret
mov
xchg
dec
lods
stc
cmp
mov
jb
adc
mov
pop
add
pusha
adc
add
jns
or
mov
jae
cmp
dec
jns
adc
nop
leave
and
icebp
sbb
lods
mov
mov
jno
pop
and
test
scas
imul
sbb
into
insl
pop
mov
pop
rcll
lds
negb
dec
shrb
iret
inc
or
and
or
es
jmp
addb
div
insb
test
inc
nop
cmpsb
jb
push
xchg
mov
rcrb
sub
loope
shr
ret
lahf
lods
pop
cwtl
xchg
negb
jl
xchg
decl
push
dec
and
ds
pop
push
cltd
aad
xchg
xchg
lock
mov
and
and
repnz
fnstsw
popf
enter
xchg
mov
xchg
imul
mov
xlat
inc
stos
jb
imul
cmpsb
test
ret
jmp
jns
testb
mov
inc
pop
outsb
adc
jae
jmp
mul
xor
rcrl
mov
sti
jbe
addr16
push
jge
roll
out
mov
shrb
lods
aad
jl
and
pop
and
adc
sub
fcoms
test
mov
mov
leave
jge
adc
adc
insb
leave
insb
cmp
shr
test
sub
out
imul
dec
sti
or
stos
out
mov
scas
push
js
iret
mov
imul
pop
cs
out
cmp
shlb
jbe
push
cmovge
scas
stos
adc
andl
dec
lahf
loope
andb
cwtl
pop
lret
adcb
mov
out
adcb
xor
imul
xchg
in
pop
std
or
xchg
mov
mov
lock
nop
dec
jmp
dec
test
sub
mov
push
inc
arpl
ret
sbb
jnp
adc
inc
jl
divb
lds
in
cli
es
testl
inc
xor
test
fisttpll
pushf
and
push
jns
vmulss
inc
xor
and
sbbb
cwtl
mov
lock
mov
xor
xchg
jnp
addb
es
inc
mov
jae
or
sbb
sub
int
stc
dec
sub
jbe
add
popf
into
mov
ret
stos
fildl
ss
je
out
adc
shrb
push
sbb
test
inc
and
das
arpl
std
and
mull
fmulp
xor
sub
sbb
push
inc
inc
push
stos
scas
lods
or
in
stos
lcall
jo
in
sub
fscale
add
sbb
xlat
jb
bnd
jmp
out
mov
jmp
cs
sub
add
in
xor
out
xor
and
cmc
push
outsb
mov
pop
inc
lcall
cs
jb
call
dec
dec
imul
fcompp
cld
mov
in
icebp
loope
aam
fstpl
mov
fcoml
xchg
xor
lahf
mov
push
mov
daa
stos
jno
cmp
andb
mov
xor
sbb
adc
out
add
repnz
jno
jl
pop
pop
pop
mov
das
shl
mov
inc
sbb
aas
cmp
ficompl
das
loop,pn
in
aam
pop
adc
pop
sbb
adc
fstpt
push
dec
dec
rcrb
in
inc
xchg
loope
ret
jl
movsl
cmp
testb
xor
pop
loopne
test
inc
mov
out
aas
jae
sbbb
cmp
cmpsb
mov
fnstsw
jns
mov
ret
enter
cmp
in
push
pop
mov
or
cli
cmc
arpl
les
jl
in
adc
cmp
mov
popl
lret
daa
mov
call
in
lret
sti
xchg
int
aas
xchg
xchg
dec
dec
test
inc
fsubrs
into
loopne
lahf
push
adc
adc
pop
ljmp
psraw
jnp
xchg
vsubps
out
out
mov
inc
arpl
or
pop
pop
mov
lahf
pop
call
inc
and
sti
loop
les
mov
aaa
in
add
cmp
test
fistpl
in
xchg
ja
test
and
sub
out
ret
xchg
ficomps
jmp
mov
adc
adc
xor
mov
mov
shrb
jbe
xchg
mov
test
mov
popf
and
xchg
fisttps
out
addb
sub
xchg
lret
jmp
lahf
lock
push
imulb
mov
cwtl
pushf
outsl
xchg
das
ret
cmpsl
lcall
popa
and
mov
sub
fnstcw
in
xchg
dec
daa
inc
xchg
jns
mov
adc
sub
inc
jae
lcall
or
insl
scas
inc
pop
outsb
xor
push
cs
cltd
jnp
clc
sub
jne
in
mov
xor
xchg
movsl
je
and
cmp
pop
cli
adc
add
xchg
mov
cwtl
decb
icebp
fnstsw
xchg
jge
imul
sub
xchg
jne
and
scas
test
and
push
scas
movsb
pmullw
dec
add
fstps
call
scas
aam
insl
xor
sbb
movsl
sti
lcall
ret
repnz
mov
sbb
mov
pop
dec
or
inc
xor
popf
mov
push
lret
dec
dec
stos
in
mov
in
out
sbb
cwtl
loope
faddp
mov
inc
adc
test
jns
jno
pop
test
pop
fs
jno
xchg
rep
xchg
fildll
call
jbe
mov
jmp
arpl
insl
sub
pop
inc
and
mov
shl
cmp
mov
mov
repz
pop
sbb
inc
and
and
mov
push
imul
xchg
subb
xchg
imul
out
scas
push
idiv
pushf
mov
push
fsub
arpl
nop
mov
subl
pop
mov
jge
sub
push
dec
push
pop
ret
and
addl
ljmp
inc
push
lahf
and
mov
push
push
out
in
hlt
iret
nop
mov
bound
pop
aaa
add
rorb
mov
and
out
dec
xor
cmpsb
or
sbb
push
movsl
cmp
aaa
add
add
loop
int
jmp
sti
in
mov
inc
icebp
jmp
je
add
mov
sbb
and
cmpsl
icebp
jp
into
pop
dec
fisttpll
ret
fsubr
aam
cmc
lret
dec
clc
std
sti
jp
sub
repnz
movsb
inc
dec
mov
push
idiv
pop
sbb
jecxz
mov
testl
add
xchg
scas
add
mov
outsl
jl
jo
jnp
and
lds
js
ret
unpckhps
xchg
data16
fst
adc
jmp
sbb
test
stos
mov
mov
jmp
test
cmp
xchg
js
in
mov
jae
add
push
jno
insb
call
push
xor
sub
mov
scas
outsl
call
movsb
mov
or
or
jl
ljmp
push
pop
jmp
push
mov
cs
mov
adc
push
outsb
hlt
mov
dec
inc
xor
dec
fwait
push
imul
push
rcr
test
popf
divl
mov
jnp
loope
arpl
pop
push
push
fmul
imul
mov
dec
jecxz
jb
mov
cltd
ss
fisubl
sub
xchg
scas
mov
pop
stos
or
outsl
inc
mov
or
cmp
in
and
sub
inc
adc
sub
and
mov
addr16
shrl
xchg
pop
mov
pop
test
addr16
push
aas
imul
mov
mov
into
insb
adc
test
push
mov
jnp
cs
repz
in
test
or
imul
lods
inc
xor
mov
sbb
pop
pop
xchg
xchg
shl
outsl
arpl
pop
scas
pop
sub
cwtl
xlat
outsb
nop
sbb
aad
jge
pushf
ss
xchg
cli
out
push
ficoml
mov
icebp
insl
xchg
data16
add
popa
aad
pop
jp
sbb
repz
mov
inc
int
add
mov
sub
testl
loope
push
sub
xor
stos
cwtl
div
cmp
jge
add
int
nop
cmp
jno
outsl
lock
push
into
in
neg
jg
or
lcall
mov
push
cmpb
int3
dec
andb
mov
mov
in
jae
dec
in
xchg
xor
push
in
fmuls
out
sub
cmpsb
filds
out
sub
pop
inc
inc
andb
lcall
aad
sti
push
inc
ja
mov
and
dec
fsts
inc
mov
lds
pop
adc
mull
hlt
inc
mov
rcrb
das
mov
and
es
in
test
sbb
xchg
pop
je
cmpsb
mov
sub
inc
xchg
mov
adc
pusha
adc
adc
pushf
cltd
lahf
imul
mov
sub
xor
in
and
lcall
adc
pop
dec
push
std
mov
dec
push
js
lret
in
lahf
pop
inc
ljmp
imul
nop
lods
mov
nop
mov
push
aaa
call
mov
pop
lock
fisttps
inc
inc
and
popa
addr16
cwtl
imul
loope
lret
in
popa
and
inc
cltd
leave
popa
lahf
dec
sub
and
mov
pop
add
adc
jg
sar
fdivrs
cmp
movsb
dec
sub
stos
lcall
stos
arpl
ja
dec
fdivr
sahf
mov
fisubrs
lea
fwait
push
or
sahf
mov
ret
add
mov
in
push
push
or
fucomi
or
pop
jg
dec
pushf
push
dec
and
aaa
jg
push
aaa
stos
test
dec
and
jbe
lret
je
test
xchg
mov
test
and
sbb
xor
cmp
fldenv
inc
lea
stos
aaa
mov
movsl
stc
mov
xor
jmp
mov
int
cmpsl
dec
sub
js
xor
push
inc
mov
sub
mov
dec
fstps
scas
out
std
xor
ret
adc
roll
and
xchg
popa
jge
jnp
mov
push
push
or
pushf
sub
sub
addb
scas
int3
sub
loopne
and
cmpsl
test
add
mov
xchg
lods
ljmp
jbe
xor
and
enter
fisttps
mov
in
jg
jns
lret
jmp
sbb
add
and
fidivs
sub
and
xchg
jmp
scas
mov
fidivrl
xchg
sahf
fimull
xchg
test
mov
sbb
xchg
pop
jl
movsl
orl
xor
adc
cld
mov
inc
push
jmp
in
jecxz
and
loopne
push
je
cld
cmp
xor
push
jge
push
mov
adc
pop
enter
nop
mov
adc
fbld
pushf
mov
pop
jo
xchg
sub
or
icebp
mov
jbe
fisttpl
cmc
shlb
cmp
sbb
je
scas
inc
cltd
lret
pusha
cltd
rcl
lods
je
xor
inc
pop
mov
shrb
fldenv
daa
or
aam
nop
push
jbe
cmp
cmp
xchg
in
inc
icebp
addr16
push
add
pop
or
dec
in
addb
sub
dec
xchg
icebp
add
pop
push
mov
stos
fldl
in
das
pop
shrl
pop
and
scas
ud0
xor
jle
fsubr
xchg
pop
scas
push
leave
cld
adc
out
fcmovb
lahf
add
adc
test
cmpsb
push
dec
and
repz
daa
pushl
lds
repz
loopne
fidivrl
lock
cwtl
daa
push
sub
cmpsb
cmp
mov
dec
xor
mov
in
xchg
scas
rorl
cld
inc
adc
leave
imul
icebp
jbe
adc
orl
sbb
movsl
pop
in
mov
xlat
daa
push
in
sub
jp
lret
insb
adc
mov
and
cmp
jp
rcl
fimull
sub
stos
add
dec
pop
cs
into
lock
in
push
aas
sub
mov
sbb
push
mov
mov
jle
stos
pop
test
daa
ja
test
mov
push
into
data16
ret
rol
imul
pushf
xchg
inc
and
and
std
insb
adc
insb
lea
jge
inc
push
dec
and
hlt
in
fidivrs
roll
xor
sbb
lahf
cmc
icebp
lods
cltd
cs
fistpll
fdivrl
mov
xchg
cmpsb
orb
pop
lret
mov
xor
imul
xlat
std
mov
ds
xor
adc
pop
xchg
js
lods
in
ret
test
and
cmp
les
jle
sub
outsl
je
inc
and
in
sbb
lock
stc
pusha
cs
lret
and
daa
in
aas
dec
repz
xchg
mov
dec
xorb
push
jge
jne
cmp
cmp
shl
add
jecxz
lahf
mov
iret
das
add
jne
xlat
mov
sbb
and
lods
orl
loop
xor
jmp
sbbl
pop
dec
mov
or
loopne
cli
pop
jp
adc
xor
dec
add
or
sbb
mov
jbe
xor
inc
sbb
sbbl
std
mov
lcall
jbe
aad
push
cmp
jmp
adc
xlat
jnp
cmp
add
xlat
mov
mov
cs
and
cltd
pop
xchg
hlt
aaa
jae
xor
scas
pop
out
jl
or
push
push
insb
sbb
or
rcll
shrl
mov
hlt
popf
ljmp
push
sbb
sub
dec
lahf
test
lock
scas
push
mov
in
dec
xorb
in
xor
mov
std
lret
cmp
ret
clc
pushf
sbb
sahf
and
cmp
in
jae
popf
sahf
jmp
cmp
repnz
mov
in
add
das
add
mov
or
or
pushf
xchg
cmpsb
jnp
test
mov
aas
daa
mov
push
inc
cli
test
daa
mov
mov
ffreep
pop
sbb
mov
lea
cmpl
xor
pushf
cs
adc
test
mov
mov
lahf
add
movsb
les
nop
xorb
sub
push
in
mov
loope
push
dec
cmc
test
in
mov
cs
pop
stc
lock
stos
sub
mov
adc
lea
mov
ret
adc
jns
and
mov
sbb
ret
sahf
xorb
dec
mov
pop
movsb
dec
fisubrs
repnz
lret
repz
lods
cmp
repz
adc
flds
jne
stos
pop
shrl
add
pavgw
insl
xor
cs
addr16
int
push
fsubrs
nop
into
mov
test
cmp
sar
mov
aaa
fiadds
fs
inc
adc
and
adcl
mov
cmp
push
dec
jecxz,pt
rorl
rcll
jne
cltd
jle
adc
test
psubsw
or
jns
cli
jb
xchg
or
mov
mov
adcb
lcall
imul
push
xor
jnp
xchg
add
or
dec
push
lock
loope
icebp
dec
add
sbb
xchg
movsl
bound
cs
cmp
and
test
lock
dec
inc
adc
mov
out
xor
inc
adc
jb
in
pop
mov
adc
loop
inc
mov
shlb
mov
lcall
mov
popa
lds
pop
pop
je
pop
pop
repnz
fcmovbe
push
test
sahf
inc
jg
arpl
hlt
in
xchg
push
sub
mov
mov
mov
jp
and
lret
in
es
jp
notb
sub
pusha
outsl
stc
fcom
mov
inc
pop
sbb
mov
xor
mov
cmpsl
push
loop
sbb
dec
adc
pop
movsl
fsubs
jp
ja
xor
and
shll
lahf
aam
cli
and
jbe
fildll
jae
testb
adc
mov
adc
lcall
or
xor
jmp
jnp
aam
add
vmulss
cli
addl
scas
imul
scas
nop
repnz
and
daa
xchg
std
mov
test
call
js
jb
mov
stos
jmp
cltd
nop
gs
aas
pop
scas
lock
adc
dec
pop
rclb
cmc
push
test
jle
xchg
pop
xchg
repnz
sahf
repnz
rcll
pusha
or
pop
sbb
jmp
pop
fcmovne
rcll
lcall
jl
xor
or
inc
add
xchg
test
sbb
les
xchg
test
imul
aam
dec
insl
stos
xchg
loope
sbb
sbb
pop
mov
sub
xorb
ds
sub
lds
and
adc
and
or
das
dec
lcall
cld
clc
cmp
ds
xchg
and
loopne
xor
loopne
in
lods
pusha
movsb
pop
out
sub
cmp
test
popa
pop
inc
in
and
fisubl
sti
scas
or
dec
icebp
notb
inc
adc
mov
cmpsb
xchg
push
test
or
mov
subb
sbb
in
sub
jge
mov
jb
jmp
jb
icebp
imul
icebp
cmpsl
inc
les
out
jecxz
jle
inc
dec
out
sub
imul
es
lret
and
mov
in
and
ss
fs
mov
jg
and
push
out
aad
cli
iret
inc
test
adc
fwait
movsl
jg
lods
mov
sub
mov
bound
shrw
pop
negl
add
outsl
mov
pop
flds
popf
jp
imul
mov
fs
pop
femms
das
add
adc
dec
push
call
jb
dec
dec
stc
in
pop
jno
or
mov
dec
hlt
je
ud0
xor
pop
add
push
in
ja
push
cmp
fisttps
xchg
test
add
pop
xchg
nop
add
andl
or
movsl
ja
addb
cmp
mov
mov
into
popa
ficomps
cmp
out
in
cmc
mov
cltd
mov
js
cmc
and
shrb
shll
sbb
pop
movsl
cltd
lahf
and
mov
adc
sbb
in
cmp
int
jge
xlat
fnsave
jae
mov
cltd
jno
sub
ja
mov
jmp
and
inc
imul
adc
dec
cmp
pop
sbb
test
test
out
loop
loop
sub
fildl
xor
sub
pop
lock
movsb
xor
outsb
std
mov
push
shll
xor
addr16
in
roll
mov
jmp
or
sbb
fsubrl
cmpsl
enter
ret
mov
jmp
cs
mov
or
repz
cltd
popf
adcb
clc
int
dec
mov
mov
fwait
sub
sarl
mov
mov
adc
ljmp
and
push
bound
imul
sahf
mov
mov
sbb
pushf
movsl
cmpsb
push
repnz
cwtl
pop
sub
ret
das
cmp
adc
push
mov
aaa
gs
imul
les
cmc
in
rcl
rcrl
sub
pop
sub
pop
insl
mov
lods
push
test
push
and
pop
cld
push
and
or
push
inc
fbstp
cmp
in
adc
xchg
aaa
add
jbe
ja
lds
test
xor
xor
xorb
es
jge
pop
push
leave
sbb
cmpsb
add
repz
and
push
push
lret
or
pushf
movsb
daa
jo
xor
xchg
mov
jmp
out
mov
and
ficomps
push
loope
jbe
lahf
jae
jg
das
mov
imul
fxch
fsubl
std
push
loope
into
jecxz
shr
movsl
lds
cmp
subb
add
jb
xchg
mov
scas
sti
sbb
xchg
test
ds
jo
out
push
add
andb
in
daa
mov
sub
xor
add
icebp
or
mov
mov
inc
in
int
stos
sahf
mov
xor
xor
inc
add
out
sysenter
cmp
sub
outsl
xor
shll
ljmp
add
ret
shrl
mov
cmpl
xor
sbb
repnz
stos
push
mulb
call
outsl
call
adcb
or
jno
inc
ljmp
dec
iret
or
in
add
test
jae
mov
fsubs
lea
xchg
icebp
xor
idivl
mov
imul
mov
in
ret
cmp
fldt
mov
pushf
pop
test
test
ficoml
pop
cmp
daa
mov
mov
sbbl
test
sahf
jo
jl
and
fldcw
xor
mov
adc
aas
cli
lock
mov
cmp
dec
mov
or
je
loope
sub
subl
imul
xchg
sbb
mov
xchg
mov
mov
sbb
lea
lret
movsb
lcall
aaa
pop
push
pop
sbb
xor
loopne
into
aas
sub
fadds
add
outsb
and
fistps
jb
sub
in
arpl
mov
cld
je
das
adc
data16
lods
ljmp
out
xor
iret
mov
mov
dec
cs
or
call
sub
or
pop
mov
mov
sub
scas
shl
push
xor
mov
mov
inc
lods
push
cmp
loope
hlt
and
insl
push
inc
cltd
jl
pop
mov
aaa
fisttps
xor
cmpsl
out
xor
arpl
sbbl
fstpl
stos
mov
lds
negb
hlt
cmp
es
shll
push
and
int
pop
jne
in
dec
aaa
test
jno
cwtl
push
xor
jle
mov
cwtl
stc
test
or
add
int3
mov
pop
dec
sub
jmp
xchg
cmp
and
add
mov
and
ror
ds
xchg
mov
mov
jae
aad
daa
pop
jmp
mov
cwtl
sti
mov
dec
push
fimull
out
addr16
cmpsb
mov
lret
sub
loop
daa
mov
push
lahf
std
adc
fxch
or
dec
inc
xor
aaa
adc
popa
xchg
mov
xchg
and
pop
jp
out
cmp
mov
or
cmp
fsubp
fisttpll
mov
stos
shrb
jae
push
insb
inc
ljmp
and
mov
mov
dec
insl
aad
and
mov
test
in
push
add
arpl
mov
sbb
inc
pop
adc
aas
sbb
xchg
mov
mov
pop
pop
and
shrb
scas
pop
push
xchg
mov
add
add
insb
rcrl
xor
loop
push
pop
lahf
ss
cmpsl
fbld
mov
andl
fmuls
lods
fbld
cmp
add
push
sub
pop
sbb
js
xor
mov
and
int3
mov
js
dec
aad
popa
test
sbb
cld
enterw
jle
les
adc
dec
push
repz
loope
push
cmpsl
stc
imull
pusha
gs
fadd
cmp
lods
icebp
xor
push
in
jge
pop
mov
inc
in
js
cmp
xor
iret
xchg
jg
and
lock
and
test
fimull
xchg
dec
js
loopne
rolb
or
insb
lret
pop
or
fsubl
mov
pop
xchg
push
sarl
mov
call
cli
fstpt
xor
fcoml
add
jb
mov
leave
or
push
pop
or
test
mov
daa
dec
add
jge
mov
push
aaa
ljmp
cmp
aaa
xor
push
jns
pop
xchg
xor
daa
or
test
stos
imul
sbb
adc
xchg
dec
fcompl
dec
fstpl
mov
xchg
push
sahf
fildll
in
push
imul
ret
sub
add
hlt
cwtl
pop
sbb
xor
pop
rolb
shrb
add
jae
jo
test
iret
pop
or
hlt
data16
push
fcomps
cmp
inc
stos
or
repnz
cmp
scas
sub
adc
sub
aas
fisubrs
outsb
jmp
cmp
adc
andl
xchg
lea
addb
in
push
pushf
cltd
cmp
repnz
sub
jns
outsl
pop
cli
add
xchg
insl
sub
pop
and
cmp
inc
jnp
dec
mov
dec
xchg
inc
mov
xor
xchg
adc
aam
mov
test
int
stos
lret
loopne
xchg
int3
cli
mov
push
dec
lea
pop
or
sbb
dec
adc
mov
jnp
jno
jmp
xchg
sbb
mov
movsl
cmpl
je
loop
cld
mulb
jne
mov
fmuls
dec
xor
cmpsb
add
movsb
jge
pop
clc
xor
test
sti
xchg
fs
sub
sti
stos
cltd
mov
lods
push
cwtl
adc
xor
pop
and
flds
pusha
loop
xor
insb
add
das
inc
fldt
mov
jns
xchg
jge
jnp
lock
aaa
loopne
push
xor
mov
insb
sbb
imul
cmp
orl
fidivs
add
inc
mov
sub
add
mov
stos
test
addb
popa
xor
sbb
xor
pop
call
push
mov
xchg
gs
xchg
lcall
in
dec
sbb
sub
out
cmp
rorb
cmp
push
in
and
call
lea
mov
pushl
inc
js
jns
int3
mov
cs
mov
sbb
inc
jl
sbbb
mov
jns
or
jb
add
push
pop
mulb
or
jmp
stc
pop
pop
lods
ss
orb
insl
cwtl
inc
icebp
data16
mov
xchg
pushf
outsl
pop
outsl
push
aaa
ds
lea
and
int3
lcall
bound
test
js
pushf
push
mov
mov
dec
xchg
push
mov
scas
adc
dec
and
xor
adc
sbb
add
rcrl
loop
popa
sub
call
push
lds
add
stc
push
pop
xor
sub
ds
or
xchg
inc
addr16
ss
je
sbb
xchg
and
pop
adc
cltd
aam
sbb
sbb
jp
mov
jo
or
popa
sarl
scas
clc
mov
mov
add
nop
mov
aad
pop
mov
xor
cmpsl
jg
sbb
ret
scas
and
adcb
cmp
sbb
or
je
add
out
add
popa
cmpsb
adc
pop
js
cmc
fistpl
push
jmp
xchg
js
inc
push
sbbb
jl
jne
orb
fidivrs
ljmp
fdivrl
mov
xchg
push
mov
or
mov
sbb
push
jl
push
jnp
mov
out
aaa
mov
out
or
js
mov
xchg
test
add
push
xchg
cmpsl
das
out
inc
dec
inc
lock
enter
inc
cmpsl
jnp
cmp
in
or
inc
adc
aas
jb
jns
pop
xor
ss
ss
popf
je
cmc
jnp
movsl
cmp
cli
jbe
daa
lret
pop
sahf
jmp
adc
stc
push
imul
aam
inc
fwait
movsb
sub
add
xchg
aas
out
push
mov
jge
add
out
adc
fadd
cmpsb
ret
or
adc
pop
sub
out
pushf
mov
cmp
or
mov
mov
bound
push
pusha
movsl
cld
mov
loope
add
in
clc
cmp
fs
sbb
aaa
bound
pop
cs
push
popa
add
push
xor
xchg
cltd
push
cmpsl
inc
ror
out
data16
cmpl
ret
xlat
mov
popa
insb
xchg
pop
xor
and
call
out
addr16
cmc
repz
pop
cltd
and
or
jmp
xor
cltd
pop
dec
xcrypt-ctr
cmpsl
pop
jno
fcoms
add
js
sarb
xchg
test
cwtl
xor
dec
orb
push
outsb
test
std
cmp
and
popf
jle
lds
inc
sub
shll
mov
mov
fcoms
jl
push
dec
mov
lret
sti
lret
mov
dec
pop
nop
and
jbe
or
dec
mov
cli
out
xlat
outsl
shlb
pop
push
leave
rol
arpl
dec
add
scas
hlt
cmp
add
mov
dec
dec
cmpb
or
outsl
xchg
push
pop
je
rcrl
mov
test
dec
push
cmpsl
sub
in
and
xchg
push
dec
pop
icebp
dec
or
push
sarl
pop
std
into
fnstsw
test
data16
cmp
stos
sub
cs
dec
es
jne
bound
movsb
mov
addr16
jo
xchg
sahf
mov
stos
mov
loop
out
inc
jecxz
adc
mov
add
xchg
cwtl
mov
and
push
adc
lret
or
cmp
inc
aam
mov
mov
fisubl
int
jne
jg
das
jle
inc
imul
xchg
in
dec
xor
pop
test
call
das
adc
xchg
mov
dec
popf
and
cmp
push
mov
sahf
xchg
mov
out
mov
jle
int3
jle
in
bound
out
ret
mov
orl
xchg
jns
adc
cmp
cmpsl
jbe
imul
and
loop
in
shl
clc
push
jnp
inc
fwait
rolb
mov
mov
lock
add
aad
movsl
adc
push
xor
inc
jl
push
jle
inc
xlat
std
leave
mov
sbbl
add
addr16
mov
mov
sbb
cld
jmp
add
daa
mov
cmp
test
pop
out
or
push
int3
cli
imul
inc
add
in
adc
pop
aad
jecxz
jecxz
ds
adcb
mov
mov
fsts
mov
xchg
sti
scas
lret
outsl
inc
mov
sub
cmp
xchg
ds
jns
int3
mov
pop
sub
fldl
lods
ja
iret
std
mov
pop
movsl
lretw
cmp
in
movsb
mov
stos
pop
mov
imul
cmp
imul
div
dec
add
movsb
cmp
imul
push
pop
mov
shlb
and
sub
roll
aaa
dec
lahf
xlat
ljmp
xchg
mov
dec
push
lahf
es
jbe
push
jmp
or
sti
cmp
cmpsb
mov
sub
mov
mov
mov
inc
addr16
xchg
dec
das
jge
push
xchg
cmc
sbb
fcompl
popf
mov
push
dec
sub
lea
cmc
adc
enter
out
adc
pushf
out
inc
sub
add
lock
imul
mov
test
jbe
jo
ja
jnp
pop
jne
and
inc
gs
xchg
cmp
pop
add
sahf
mov
out
jle
ds
add
cmp
aaa
addr16
sbb
push
pop
pop
push
scas
dec
adc
and
aas
test
stos
xorb
dec
aam
sub
movsb
stos
inc
pusha
call
and
test
sti
ret
mov
mov
dec
add
add
or
out
rep
out
mov
cmp
cwtl
mov
test
sub
push
loope
pop
lret
mov
cmp
movsl
into
lahf
mov
es
lahf
mov
ljmp
insl
outsb
sahf
repz
mov
mov
lret
pop
mov
inc
es
in
jmp
push
shll
mulb
inc
loopne
aaa
sub
test
or
movsb
xchg
push
fnstcw
fs
mov
shll
or
out
outsb
aam
outsb
adc
jp
ret
xor
movsb
mov
mov
jle
imul
test
xchg
and
jae
stc
arpl
pop
pop
test
jo
lret
cmp
nop
push
dec
out
push
add
sahf
push
fcoml
sub
mov
lret
ret
inc
outsl
add
call
lcall
outsb
dec
mov
add
in
pop
mov
pop
sbb
stos
mov
jbe
ja
inc
xchg
xchg
mov
nop
in
add
xchg
and
pop
mov
int
add
add
xchg
fnsave
jns
fsubl
ja
into
jecxz
inc
andl
xchg
lahf
ret
mov
popa
push
cs
mov
mov
outsl
and
pop
jns
out
int3
jb
mov
fstl
in
mov
test
mov
xchg
jl
cmp
das
mov
enter
aas
imul
add
out
mov
das
sbb
cmp
xchg
out
dec
sbb
adc
ficoms
push
jns
addl
fdivs
out
or
pushf
sub
sub
cmpb
mov
xchg
arpl
xchg
lods
xchg
dec
test
adc
mov
test
xchg
cmp
nop
push
sbb
mov
cmc
dec
sbb
sub
insl
sbb
ret
cmp
fdivs
mov
outsl
movsl
push
pusha
mov
cmpsb
or
mov
adc
fisttpl
mov
mov
insl
mov
or
lea
xor
cmp
pop
ja
cmp
xor
pop
mov
je
pop
jp
aaa
stc
rcll
mov
shrl
pop
outsl
daa
xor
repnz
js
fdivs
pop
push
jne
fs
and
scas
dec
adc
pop
xlat
mov
mov
sub
in
inc
orb
or
jnp
sar
out
lock
andb
xchg
sub
dec
movsb
into
daa
and
push
cld
jg
into
movb
out
cmp
imul
pop
inc
std
and
inc
jns
inc
xor
mov
pusha
sti
lahf
push
and
int
jb
dec
push
hlt
into
add
daa
sbb
mov
and
sti
mov
arpl
inc
pop
inc
mov
shlb
xchg
movb
stos
shr
jbe
std
sahf
mov
or
pop
and
aaa
sbb
jg
push
xchg
add
push
cld
fcmovb
cmpsb
xchg
in
fisttpll
add
test
sbb
jo
popf
nop
sti
mov
pop
nop
sub
add
data16
mov
stos
push
mov
xchg
bound
push
jecxz
fsubrl
cmp
add
mov
sub
fimull
jle
sbb
out
lahf
fmull
ja
dec
push
gs
inc
dec
cwtl
fucomp
jle
inc
lods
mov
cmp
mov
inc
mov
fistpll
mov
stos
xor
and
call
xor
sahf
movsl
out
test
inc
sbb
push
rolb
adc
test
xor
rorl
dec
mov
push
and
pusha
scas
cmc
or
xchg
xchg
stos
lcall
and
fsubr
in
test
movl
or
stos
inc
fcoms
in
and
and
stos
push
jns
divl
inc
and
inc
aad
hlt
pop
xchg
popf
dec
add
cwtl
sbb
loopne
push
enter
mov
js
lds
sub
cli
stos
or
scas
jg
iret
popf
aad
mov
mov
pop
lds
hlt
hlt
data16
lret
mov
sub
pop
lret
mov
sub
mov
pushf
mov
fisttpll
inc
rcrb
mov
fisubrl
sub
jmp
in
arpl
aad
pop
dec
icebp
out
mov
pop
stos
shrb
and
jge
repnz
insl
lea
je
mov
movsb
push
push
pop
add
mov
sbb
push
mov
leave
jmp
aam
fxch
arpl
add
xchg
stos
cld
out
push
push
fistps
push
int3
fiaddl
mov
hlt
cmp
pop
pop
jmp
pop
test
sub
mov
movl
xchg
xchg
inc
cmp
popf
mov
push
pop
scas
mov
or
gs
lods
imul
inc
movsb
ficompl
insl
xor
xchg
data16
cli
scas
rcll
and
or
cmpsl
cmpsb
add
ja
sbb
cld
addb
fidivs
pop
in
mov
cmpsb
mov
repz
pop
stos
enter
outsl
mov
jmp
push
jle
jg
cwtl
and
addr16
jb
dec
jne
fcomps
pop
adc
ret
pop
dec
add
in
xchg
hlt
das
sub
out
rorb
fwait
dec
out
lret
je
jns
jae
popa
je
lahf
rol
popf
xor
rcll
into
xchg
outsl
das
push
xchg
or
fldcw
inc
xor
inc
sbb
stc
cli
add
or
xor
mov
aad
cmp
fnstsw
push
inc
jmp
inc
inc
jno
xor
cli
leave
inc
lods
lock
cmp
xchg
mov
jb
xchg
jmp
in
mov
jne
aas
xchg
shll
adc
cmp
jae
gs
mov
xor
mov
jo
and
sub
call
mov
daa
xchg
xor
rolb
jmp
dec
push
cmpsb
mov
or
pop
sbb
and
mov
push
in
xchg
sub
xchg
sbb
je
dec
lock
stos
popa
fnstenv
mov
and
pop
rcll
sbb
shrl
aaa
xchg
jecxz
int3
pusha
lahf
in
mov
stc
mov
cmp
cmp
outsl
in
js
mov
testb
pop
ret
into
pusha
add
ss
xor
scas
test
mov
out
push
sub
dec
loop
xchg
popa
hlt
cltd
jae
repz
movsl
ret
test
sub
jg
insb
or
push
mov
and
arpl
jne
pop
loope
jae
arpl
jle
inc
xchg
or
addr16
jns
or
and
outsl
mov
movsb
iret
fbstp
call
xorl
adc
xchg
jae
outsb
je
in
loop
xchg
cld
dec
inc
rorb
jb
cmp
lods
popa
enter
mov
rcrl
cmp
dec
sti
adc
fisubrs
jb
in
test
std
out
adc
insl
movsl
mov
sbb
cmc
inc
mov
test
stc
inc
fnstcw
scas
mov
push
shrb
and
lods
push
arpl
and
movsb
xchg
lret
xlat
cmpsb
repz
cmp
and
cwtl
adc
inc
mov
repz
or
movsb
gs
outsl
loop
inc
mov
xor
dec
sbb
lahf
ror
roll
rcrb
pushf
add
mov
adc
les
add
sub
loop
lods
lcall
aad
loopne
mov
test
pop
out
lods
add
jno
push
dec
in
dec
in
mov
hlt
stos
pushf
out
inc
sub
cmp
inc
arpl
rcrl
xlat
mov
cli
pop
outsb
jb
ljmp
push
lahf
push
shl
imul
hlt
in
or
ret
push
xor
sub
loopne
lret
or
popa
in
push
testl
push
jnp
or
iret
arpl
sbb
mov
dec
lea
repnz
je
jle
sub
push
inc
jae
cmp
and
dec
jmp
sahf
lock
and
xchg
jmp
out
mov
lods
andl
jl
stc
xor
and
mov
adc
dec
cmpxchg
cmp
xlat
push
imul
xchg
add
ja
lds
mov
xchg
in
mov
ds
pop
cmp
xchg
push
out
xchg
adc
add
rcr
cltd
inc
stc
and
sbb
cmp
xor
cmp
int
jge
sti
pusha
mov
data16
fwait
push
jne
movsl
xchg
cwtl
cmp
out
enter
xchg
and
xchg
nop
add
lods
addl
sbb
loope
jl
mov
cmc
pushf
and
movsb
les
test
popa
scas
loope
aaa
mov
lods
cmc
lods
ret
add
add
dec
mov
inc
dec
sub
dec
or
je
lods
mov
push
repnz
sbb
xchg
xchg
jbe
cmp
add
pop
stos
test
insb
xchg
mov
test
roll
lea
sub
std
adc
ficoml
popf
je
push
or
in
or
push
es
jle
repnz
pop
test
sub
push
cltd
nop
adc
sahf
mov
cwtl
sbb
shll
inc
loope
xchg
dec
roll
add
sub
popa
bound
adc
mov
mov
outsb
jb
in
imul
lds
enter
aam
andl
addb
stos
in
jbe
jecxz
sbbb
pop
js
inc
adc
mov
and
adc
sbb
sahf
sub
scas
push
dec
arpl
push
fisttpll
cmpsl
mov
xchg
mov
outsb
aas
mov
test
cmp
aam
adc
mov
sbb
int3
jae
or
pop
or
mov
outsb
mov
pop
push
ljmp
fs
fiadds
add
insb
xchg
insl
sub
mov
into
xchg
dec
rcll
ficoms
repnz
shl
mov
or
cmp
mov
pop
inc
cld
leave
xor
xchg
pusha
mov
pop
test
dec
je
test
or
push
xlat
sti
in
fwait
ljmp
sbb
movsb
rcl
or
stc
adc
std
sub
es
in
jo
sbb
outsb
imul
dec
mov
icebp
outsl
push
push
sbb
dec
outsl
ss
aas
lods
push
mov
jne
lods
mov
idivl
pop
fucomip
sub
push
push
mov
cmp
loop
inc
or
pop
or
jbe
fsubrs
xchg
in
repz
jl
stos
sbb
pushf
into
out
adc
mov
mov
cli
xchg
adc
ret
daa
fstpl
mov
cs
jg
jmp
in
inc
jnp
scas
sub
cmp
cltd
in
repz
add
push
ss
rolb
outsb
sub
outsb
out
call
in
mov
mov
and
mov
xchg
jle
sub
fs
mov
jno
push
pop
dec
gs
or
test
or
mov
add
std
push
stos
push
jle
push
xchg
xchg
adc
xlat
mov
cmp
icebp
aas
scas
mov
pop
cmp
aaa
movl
cltd
imul
aas
sbb
mov
rorl
adc
outsl
cmpsb
jle,pt
or
push
adc
push
adc
pop
dec
push
das
or
xor
mov
scas
mov
mov
cmp
inc
sbb
test
fisttpll
push
sbb
xchg
cmpsb
repnz
loope
in
nop
lret
cli
cltd
cmp
xor
es
les
jns
imul
pop
ljmp
push
mov
ror
jnp
xchg
out
dec
or
mov
cltd
dec
cmpsb
jmp
xchg
cmc
inc
lahf
jmp
call
dec
adc
out
insb
leave
lods
mov
sub
cmp
icebp
cmc
outsb
movsl
dec
jg
imul
cli
mov
xor
push
jno
bound
jge
loopne
xchg
ss
shrb
mov
je
lods
xchg
add
sub
xchg
pop
mov
mov
mov
mov
jbe
jno
or
xchg
in
jne
test
push
ds
sahf
aad
insb
lods
push
filds
mov
jle
or
xlat
sarl
or
movsb
lods
sbb
xchg
shlb
push
sbb
shll
in
sub
call
out
movsl
daa
arpl
push
mov
push
jle
lods
jne
push
push
enter
pusha
dec
cld
out
mov
invd
shll
adc
cmp
ret
js
insl
in
pop
jle
inc
xor
test
push
lea
notl
push
loopne
and
adc
int3
mov
mov
cmpsb
imul
sub
or
mov
jbe
pop
cmp
loope
dec
cmp
cli
adc
dec
inc
clc
subl
mov
push
fiaddl
ret
fimuls
jb
cwtl
dec
mov
popf
test
insb
mov
pop
or
or
and
mov
stos
stc
popa
push
or
sbb
push
and
xor
xchg
in
mov
sub
lcall
lds
xor
aas
jae
xor
data16
pop
aas
inc
push
les
out
or
push
cmp
test
push
sbb
nop
fldenv
movsl
xor
orl
push
ficoms
jae
mov
daa
mov
loop
and
jmp
jge
push
bound
and
cli
incl
xchg
jne
inc
jae
jmp
push
pop
jb
shrb
fmull
push
adc
cld
add
repz
adc
adc
scas
fidivs
lret
rcl
cmp
in
imul
mov
mov
add
lods
push
shrl
das
in
das
adc
cmpsl
sub
in
aam
sbb
leave
adc
int
in
and
pop
call
arpl
mov
les
mov
enter
xor
jmp
mov
mov
rorl
jnp
adc
imul
or
test
xchg
inc
pop
xchg
cmpsl
add
add
inc
jle
hlt
rcr
ss
cmc
push
cmp
test
jae
adc
mov
rcr
mov
xor
aaa
or
xor
pop
imul
jge
xchg
inc
cltd
movsb
inc
clc
jl
int
pop
mov
mov
mov
and
mov
sbb
fcmovu
mov
and
rol
sub
or
shl
sub
jecxz
movsl
cli
fists
xor
scas
in
addr16
in
lret
push
daa
cmp
ds
cs
adc
adc
popf
jmp
aam
lds
dec
jmp
es
add
adc
adc
cld
xor
jne
loopne
pop
mov
rcll
mov
jecxz
inc
in
push
add
ffree
mov
inc
mov
sbb
inc
sbb
lods
faddp
adc
and
sbb
leave
add
stos
mov
inc
sub
rorb
insb
jnp
xchg
xor
sub
dec
nop
int
js
notl
push
out
push
mov
xor
sbb
pop
fwait
mov
fdivp
dec
popf
push
or
cmp
fnsave
push
cwtl
out
daa
jle
adc
jno
test
cmp
movsl
stos
movsl
je
sub
mov
pop
add
sarl
stos
mov
adc
sahf
inc
stc
test
xor
pushf
repnz
out
call
lahf
sarl
inc
or
lea
daa
pop
adc
pop
push
nop
and
out
sub
mov
pop
sub
je
movzbl
js
pop
mov
pop
movsl
xchg
mov
inc
addb
pop
xor
push
mov
lret
and
hlt
pshufw
icebp
push
push
or
and
push
jae
sbb
inc
lret
movsb
add
push
lahf
fistpl
js
push
mov
dec
push
mov
sub
icebp
shlb
loop
mov
bnd
dec
std
pop
aaa
stos
cmpsb
or
inc
test
push
pushf
test
mov
fdivrl
sbb
aam
and
rcl
sbb
add
dec
notb
out
inc
ljmp
xchg
pusha
shrl
fnstenv
add
lods
sbbb
insl
mov
aas
pushf
jae
imul
adc
mov
push
pop
mov
icebp
and
jae
xor
sbb
ljmp
mov
dec
cmp
enter
pop
out
xlat
jbe
cmp
sub
pop
mov
sahf
outsl
cltd
jne
aas
pushf
add
mov
enter
mov
loopne
xchg
shll
jle
mov
loopne
int
sub
bound
scas
jmp
jp
mov
push
repnz
mov
pop
jns
cmp
sub
jge
push
shrb
lods
sti
inc
xor
movsb
pop
push
sahf
ficomps
rolb
in
repnz
pop
sbb
les
in
jle
aam
scas
ficoms
sub
outsl
add
fbld
adc
push
loopne
xor
lret
ljmp
and
mov
cmp
cwtl
xor
mov
add
popa
std
es
push
mov
mov
dec
jbe
mov
test
dec
adc
lods
jmp
hlt
push
add
ljmp
xor
add
lock
outsb
xchg
inc
loope
rcl
inc
vhsubps
xchg
push
adc
test
out
jp
mov
js
push
push
into
pop
pop
or
xlat
movsl
outsl
js
cmp
sbb
xor
mov
ret
dec
mov
jo
cmc
xchg
or
push
push
add
pop
mov
aam
ja
dec
add
cli
adc
adc
cmpsl
lcall
sbb
mov
sub
stc
seto
push
jno
dec
scas
xchg
cli
jns
adc
loopne
mov
inc
aas
lret
shl
push
lcall
jno
fdiv
lea
push
mov
push
repnz
adc
mov
je
scas
pushf
push
mov
mov
mov
mov
shrl
jbe
addr16
xchg
js
cmc
pop
loope
jae
mov
cwtl
cmp
cmc
subb
dec
in
push
jbe
out
mov
mov
sbb
outsb
rorl
xor
negl
icebp
jmp
test
push
mov
xchg
cmc
outsl
xorl
popf
sti
jo
adc
pop
xchg
hlt
ljmp
icebp
and
lods
fistpll
cmp
xchg
imul
fmull
repnz
and
xor
rcr
dec
and
inc
dec
jp
cmc
popa
mov
dec
loop
stos
in
test
sub
inc
pop
stc
hlt
clc
sbb
jb
mov
out
mov
std
imulb
inc
add
std
dec
and
jae
out
sbb
jae
pop
xor
in
sbb
ljmp
push
pop
leave
push
nop
lret
dec
pop
dec
loopne
xor
idivl
test
add
sub
and
ret
mov
jle
xchg
int3
imul
lds
sti
inc
clc
add
or
sbb
mov
xchg
sbb
hlt
pop
sbb
jo
clc
pusha
das
xchg
aaa
addr16
inc
xor
imul
fwait
lcall
and
sbb
push
fsubl
mov
aaa
movsl
leave
sub
jmp
cmp
fwait
imul
cmp
lds
mov
or
mov
push
imul
cmpsl
cld
aas
cmp
outsb
addl
arpl
xor
call
push
loope
mov
and
pop
sub
jle
xchg
adc
or
fs
cmp
in
stc
test
dec
xor
pop
jge
rep
and
mov
cwtl
lahf
out
adc
out
cmp
test
add
xor
leave
jae
sahf
pop
movl
jnp
test
pop
fbld
xchg
inc
push
inc
xchg
rol
inc
jge
fdiv
dec
or
and
add
ss
xchg
in
hlt
jge
inc
pop
mov
fldenv
add
mov
sbb
lcall
and
adc
mov
ret
popf
push
lods
push
or
pusha
mov
lock
cmc
test
inc
js
adcb
mov
xor
xor
or
xor
int3
xchg
xor
cld
movsb
mov
test
mov
fisttpll
cwtl
test
adc
addr16
sar
sbb
imul
mov
dec
mov
leave
mov
xchg
pop
pop
mov
fcoml
adc
push
shll
cmp
sub
inc
insb
mov
gs
icebp
mov
sahf
cmp
jp
test
push
or
repz
mov
mov
dec
jmp
test
jmp
mov
sbb
sarb
insl
sti
pop
xlat
sbb
pop
mov
dec
xor
add
xchg
add
sub
adc
mov
pop
mov
mov
mov
inc
sbb
jp
lret
jae
or
add
or
out
pop
mov
jae
clc
jmp
ret
xchg
pop
repz
mov
test
pushf
jecxz
push
imul
repz
dec
xor
call
pop
xor
fnsave
cmp
cmp
mov
pop
movsb
lret
jo
insb
stos
dec
scas
hlt
cs
sub
cmc
imul
or
cmp
dec
inc
add
sahf
rep
push
xchg
mov
push
and
out
cmp
lcall
adc
into
scas
and
je
push
inc
add
jae
sbb
mov
inc
or
cld
js
aad
sar
mov
fimull
bound
in
and
sub
mov
sahf
lret
xor
popa
cmc
repnz
dec
pop
loopne
mov
push
xor
test
test
lret
loop
mov
push
ret
aaa
int3
insl
sti
mov
inc
pop
and
xchg
push
mov
pop
jbe
ss
xlat
jns
adc
or
mov
adc
dec
fwait
in
push
repz
and
cs
nop
mov
add
in
cmp
jo
add
lods
xchg
push
insl
jle
outsl
add
inc
inc
mov
mov
and
sub
data16
add
movsl
js
add
addr16
bound
pop
scas
dec
icebp
dec
xor
in
daa
pop
lods
test
jno
aad
out
and
inc
aas
inc
sub
pop
or
mov
sub
xchg
cmp
mov
sub
push
sub
adc
arpl
addr16
outsb
das
nop
pop
inc
jp
incl
movsb
int3
iret
sti
xchg
fs
ss
fbld
ficompl
sbb
pop
xlat
int3
jp
jae
stc
push
xchg
divl
shl
inc
popf
cmpsb
loop
orl
enter
sahf
pop
jle
add
data16
int
fcos
stc
std
jmp
push
and
jns
cmc
pop
mov
jle
jno
jge
fcmovnbe
test
and
arpl
fldt
add
pop
add
adc
iret
insl
xchg
cltd
cmp
enter
out
xchg
adc
leave
xchg
stos
sub
imul
fiadds
xlat
mov
sbb
test
imul
sub
push
mov
popa
push
and
aas
jne
scas
jecxz
mov
in
cs
sar
mov
or
xchg
pop
mov
or
fsubrl
mov
dec
adc
pop
dec
enter
pop
push
xor
jecxz
testl
or
scas
dec
add
fucomp
loopne
inc
mov
fs
cmpsl
jg
or
gs
push
mov
mov
jmp
mov
sahf
mov
add
pop
outsl
cmc
scas
fisttpl
sub
call
mov
cmp
jmp
inc
inc
aaa
jge
fdivr
dec
jbe
andl
and
xchg
cmp
fsubrl
cmp
bound
jge
jno
fldenv
repnz
out
push
cmp
mov
mov
out
jmp
jecxz
xchg
xchg
mov
std
lods
mov
xchg
mov
jecxz
pop
in
insb
or
and
jp
dec
xchg
mov
push
add
std
arpl
sarl
inc
xorl
shl
push
fucom
add
fsubrp
cs
inc
in
inc
mov
in
daa
mov
mov
icebp
lahf
icebp
inc
in
rol
push
adc
push
fsubrp
dec
dec
pop
insb
xor
lds
lods
mov
aaa
pop
std
scas
loop
mov
or
rolb
testl
lods
xchg
or
sbb
sbbl
dec
dec
pop
adc
and
push
xchg
lock
hlt
and
ret
add
das
repz
xchg
mov
jnp
bound
fnstcw
repnz
rcll
ret
rcrl
cmp
add
iret
stos
test
sbb
cld
mov
inc
in
mov
mov
cmpsl
inc
mov
test
mul
mov
mov
and
scas
daa
movb
inc
lods
push
div
cmpsl
js
cli
outsl
loope
cmp
push
fisttps
icebp
int3
es
cmc
cmp
cmp
dec
mov
aaa
cwtl
sbb
insl
je
aaa
dec
outsl
ss
mov
cmp
data16
repz
or
mov
push
add
adc
cmp
pop
mov
lea
cmp
pop
daa
lret
imul
cs
push
sub
dec
mov
int3
ficoml
enter
out
xchg
in
mov
xorb
fdivp
pop
push
lahf
fsubl
fsubp
mov
xchg
lods
ret
imul
pop
cli
cmp
xor
cmc
pop
cwtl
inc
lods
dec
imul
popa
insb
sub
sbb
loope
gs
int3
outsl
or
in
jp
cmp
or
or
and
lahf
lock
cmpsl
jmp
sub
leave
test
enter
push
or
cmp
jmp
test
in
out
push
adc
int3
fsubrs
jle
lret
inc
mov
push
and
in
call
xlat
mov
iret
fistpl
jns
gs
data16
in
pop
fsin
push
xchg
mov
add
mov
sahf
adc
pop
nop
sub
iret
int
aaa
dec
jp
mov
outsb
or
jle
stos
mov
xlat
popl
fwait
add
imul
jmp
push
stos
xchg
pop
add
arpl
movsl
daa
mov
inc
jo
ljmpw
mov
xchg
jo
push
negb
adc
add
xchg
cmp
sbb
sbb
adc
iret
push
stc
or
push
imul
or
mov
sbb
js
inc
jge
mov
imulb
mov
into
mov
xchg
inc
loope
mov
cmp
inc
push
add
dec
mov
in
iret
mov
lret
adc
mov
xor
in
push
repz
dec
inc
inc
push
push
sub
fimull
loop
js
sub
dec
jp
lock
scas
inc
scas
mov
int
je
stc
adc
fmulp
in
and
fbstp
xchg
cmp
dec
sbb
xor
fisubs
sub
scas
lret
cld
or
in
out
and
cld
clc
neg
add
jmp
cmp
jl
mov
aaa
adc
lret
fmulp
jns
test
jl
js
mov
fidivs
or
lock
rcrl
add
adc
and
daa
xor
push
repz
gs
pop
mov
ret
mov
lahf
and
push
lret
cmp
mov
loop
xor
mov
test
cmp
fcompl
movsl
adc
jo
popa
or
sbb
jl
push
mov
in
add
std
dec
dec
and
fistl
int
rcrl
inc
xchg
add
push
cmpsl
jno
xchg
and
test
inc
mov
xor
inc
test
mov
adc
add
pop
mov
lcall
je
pop
fidivs
cmpl
faddl
inc
jb
testb
cwtl
dec
or
icebp
adc
outsl
xchg
int3
add
cmp
mov
fs
stc
dec
pushf
push
out
jbe
orl
mov
test
inc
fnsave
aad
lahf
clc
pop
sbb
mov
jb
dec
pop
lahf
push
cmc
popf
sub
rcrb
outsl
je
xchg
stc
add
call
cmpsl
dec
cmc
jp
mov
inc
rclb
mov
iret
mov
and
or
iret
adc
lock
fs
scas
in
shlb
adc
mov
xchg
push
xlat
or
add
fnstcw
push
pop
mov
jmp
scas
adc
les
and
aad
cmpsb
and
sub
push
call
jp
adc
mov
mov
xchg
dec
imul
sti
sub
sbb
mov
out
mov
xor
push
movsb
xor
sbb
and
aad
jecxz
icebp
xchg
mov
xor
fiaddl
push
and
fsubl
scas
jns
mov
mov
xor
sbb
mov
xor
mov
xor
mov
pop
jae
test
xchg
mov
or
sbb
cltd
mov
rolb
iret
cltd
lea
js
movsl
xor
adc
call
pop
testb
push
mov
sahf
xor
loope
scas
clc
test
sarl
or
out
jl
cli
push
jmp
mov
cltd
jae
je
mov
fmul
hlt
mov
or
dec
push
fisubrl
aad
rcrb
and
xlat
xor
and
push
popf
cwtl
ss
sti
push
jge
sub
sbb
mov
flds
or
loopne
dec
fdivs
mov
jns
sub
ss
inc
fldenv
fcoms
test
xchg
fmul
dec
dec
icebp
mov
arpl
or
sbb
and
loope
xor
dec
xlat
adc
lcall
pop
nop
and
mov
les
in
push
add
xchg
adc
pop
je
mov
inc
xor
into
ja
push
hlt
out
mov
mov
add
out
jmp
scas
fdivrs
push
ja
adc
test
push
mov
fcomps
cs
jbe
mov
jmp
xor
jle
sub
cld
lcall
and
push
arpl
pop
lahf
fs
jo
xchg
dec
jg
push
jmp
scas
int3
sti
push
mov
pop
inc
xor
sub
add
dec
aas
adc
xor
in
pusha
icebp
lea
sbb
and
lds
mov
mov
mov
inc
and
cli
xchg
push
jmp
cmp
mov
mov
push
and
pop
out
ret
pop
sarl
enter
and
jno
sbb
addl
test
repz
bound
jns
test
xabort
int3
push
xchg
lock
add
es
xchg
fnstcw
jmp
sub
adc
adc
mov
in
push
push
sub
test
gs
xor
les
pushf
adc
mov
add
mov
inc
add
xchg
test
xchg
hlt
mov
xchg
jmp
lret
sbb
lds
inc
pop
fistps
fistpll
movsb
mov
jecxz,pn
adc
fstl
sub
int3
xlat
in
divl
sbb
roll
fwait
aas
mov
xchg
std
adc
loope
dec
in
xchg
add
lds
cmp
sub
pusha
das
clc
rorb
bswap
mov
pop
mov
nop
xor
pop
es
cmp
mov
inc
dec
sti
je
push
pop
mov
inc
adc
bound
leave
fsub
sbb
mov
xchg
faddl
je
fildll
add
cltd
stos
mov
pop
test
pop
push
cmp
lea
aaa
mov
xchg
in
push
cmpsl
pop
xor
dec
adc
mov
cwtd
lds
stc
out
xchg
sub
out
xor
fs
nop
mov
cwtl
jb
loopne
adc
sub
sub
hlt
add
loop
mov
movsl
int3
imul
and
push
sub
cltd
test
or
mov
nop
popf
mov
aad
mov
inc
mov
cmc
pop
cmp
and
fadds
ss
xor
scas
push
mov
mov
push
jmp
pop
dec
negl
xchg
testl
cltd
sbb
movsb
dec
test
sbb
jg
cmp
dec
subl
dec
xor
stos
into
scas
push
jle
insl
fs
push
xor
mov
pop
cmp
pop
xchg
icebp
xchg
stos
ljmp
jg
xor
lea
mov
lods
or
pop
lahf
mov
xchg
push
xchg
ret
sub
cmp
pusha
ss
push
test
ret
sub
nop
js
jne
outsl
jbe
imul
or
aam
xor
pusha
push
out
lret
ret
andb
dec
cmp
jne
dec
lods
push
into
nop
mov
mov
lcall
sbb
sub
xor
push
sbb
fistps
outsb
ja
adc
in
rol
xchg
fdivrs
faddl
add
xor
int
sub
lock
jbe
mov
call
data16
inc
adc
outsl
shlb
cmp
cmp
lret
insl
mov
shll
outsb
and
xchg
scas
jns
cli
aam
jl
shll
cli
push
xchg
and
jbe
inc
adc
pop
mov
xchg
shl
sbbb
in
sbb
xchg
rcrb
ljmp
or
mov
jecxz
push
mov
ja
das
outsl
cwtl
pop
push
xchg
xchg
pop
imul
push
add
enter
pushf
mov
scas
pop
out
adcl
xor
mov
outsl
pop
aaa
aas
sbb
in
mov
inc
sarl
repnz
loopne
arpl
ss
or
jg
or
ret
push
fdivrl
mov
cmpb
mov
je
adc
sbb
jp
adcl
push
cs
jae
loop
xor
or
pop
es
or
sbb
insb
pop
movsl
fisubrs
adc
or
cmpsl
imul
pop
adc
in
sub
xchg
and
shlb
jp
or
push
fstpt
daa
mov
cltd
push
pushf
add
adc
outsl
fildl
xor
mov
faddl
mov
xor
in
mov
mov
pop
rorb
or
std
jmp
inc
hlt
out
cmp
sub
and
sub
and
clc
sbb
xlat
adc
lods
pop
mov
xchg
adc
ret
call
outsl
sub
enter
jmp
xor
fdivr
cmpsb
inc
insb
sbb
lea
xlat
or
js
and
or
and
addl
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
ja
dec
add
push
dec
dec
outsl
jl
mov
pop
add
push
adc
pop
push
mov
pop
adc
pushl
push
push
mov
pop
pop
pop
sub
push
and
pop
xor
mov
sub
push
mov
pop
push
jmp
cmp
xchg
pop
add
and
pushf
movsl
popl
movzwl
mov
sub
push
pop
add
mov
cmp
jne
mov
jmp
test
or
add
addl
jle
sub
xor
jmp
les
cs
pop
gs
ret
dec
xor
rcrb
mov
and
ret
adc
inc
arpl
je
arpl
xorl
cmp
mov
insb
pop
xchg
pop
sub
sub
ficoml
and
push
add
scas
ret
pop
out
sub
in
push
bnd
ss
scas
sbb
cmp
mov
inc
arpl
sub
push
cmpsb
lret
xor
xchg
sub
addr16
sub
shrb
mov
insb
jb
pop
loopne
mov
outsl
sub
cmp
push
and
mov
aad
mov
scas
sbb
mov
mov
jmp
movsl
shlb
lahf
test
xchg
aad
xchg
pop
cmpsb
inc
push
pusha
aad
mov
pop
and
leave
dec
lahf
cli
nop
xchg
jge
mov
sub
add
or
pop
repnz
push
sub
push
cltd
add
push
jg
lret
loope
mov
data16
fs
mov
imul
aad
inc
adc
sbb
or
std
mov
jmp
leave
movsb
dec
push
dec
xchg
mov
mov
popa
inc
dec
jb
mov
mov
gs
jecxz
or
jl
out
jl
fs
push
addr16
dec
aam
pop
pop
call
jmp
inc
aas
pcmpgtw
imulb
out
js
out
pop
fs
inc
dec
xchg
fcomp
in
xchg
inc
or
aas
xor
arpl
mov
add
jnp
dec
xor
repz
sub
push
out
push
das
xor
in
cmp
mov
jb
mov
pop
ja
and
loope
xlat
or
pop
push
or
dec
aas
aaa
dec
jb
cmp
dec
gs
dec
les
inc
dec
jb
sub
dec
je
jg
jo
inc
repnz
out
lock
push
inc
popa
cmp
outsb
notb
sbb
icebp
int3
xchg
xchg
pop
f2xm1
stc
js
cmc
arpl
cmp
sub
int3
in
mov
sbb
or
mov
dec
int
xchg
das
sub
jnp,pn
push
cmp
outsb
clc
jle
mov
sahf
mov
orb
or
push
inc
stos
jbe
aad
sbb
cmp
andl
add
inc
mov
gs
jecxz
push
sub
xor
jg
jbe
out
jle
jmp
add
test
in
nop
and
sbb
stc
push
cmp
pop
or
jmp
outsb
dec
repz
dec
cmp
xchg
or
ret
sbb
cmp
iret
stos
movsb
adc
in
inc
jne
xchg
mov
insl
cmp
loope
xchg
mov
fstps
dec
mov
and
adc
popf
dec
and
mov
and
imul
lea
lret
xor
mov
mov
pop
loop
and
add
xchg
xadd
mov
push
add
and
push
movsl
add
rclb
ret
and
push
add
and
fsubrs
mov
lea
pop
xor
push
push
jne
pop
pop
pop
frstor
or
pop
jb
out
and
sub
loopne
icebp
imul
lret
mov
mov
or
inc
xor
and
xchg
and
in
and
mov
rclb
lcall
xchg
and
mov
jge
and
mov
movsl
push
and
int3
or
mov
cltd
enter
and
mov
xchg
xchg
and
mov
jb
push
loopne
and
ds
xchg
and
jle,pt
and
imul
notl
cmp
mov
cld
gs
lea
mov
lea
mov
insb
in
mov
int3
mov
std
mov
mov
in
jp
imul
fistpl
fbld
adc
sbb
dec
fiadds
ds
and
movsl
jno
and
adc
gs
imul
shrb
add
jo
adc
lea
pop
std
andb
sub
je
lea
cmpsl
xchg
and
aaa
icebp
frstor
mov
sub
lret
pop
lret
sbb
mov
in
mov
rcr
and
mov
lea
lea
cs
pop
add
cmp
leave
xchg
push
and
add
loopne
xchg
jae
and
push
mov
inc
and
xor
push
gs
xchg
jae
and
push
mov
sbb
jnp
les
lock
cwtl
xchg
mov
inc
push
hlt
push
cmpsl
cmp
stc
xchg
jecxz
xchg
sbb
and
push
adcl
fnstenv
sbb
test
jl
lea
mov
xchg
sbb
and
push
adcl
lds
mov
lea
mov
xchg
sbb
and
push
adcl
mov
adc
stos
sbbb
leave
das
pop
cli
cmp
or
imul
mov
inc
push
hlt
push
cmpsl
cmp
cmp
lock
dec
pushf
push
insb
dec
and
mov
lea
cmp
stos
sbbb
push
mov
fisubl
add
in
leave
lret
jecxz
mov
sbb
subb
repz
add
enter
sub
leave
push
imul
sbb
ret
and
mov
lcall
xor
add
mov
jo
cmp
mov
and
frstor
mov
lea
mov
jo
and
insb
mov
imul
or
push
jp
cmpsb
jge
and
sarb
pop
mov
lea
cmp
sub
inc
es
ret
inc
sbb
jecxz
arpl
aas
mov
cwtl
and
addr16
jg
jge
jg
xor
jmp
aaa
lcall
out
jno
jne
mov
mov
pop
outsl
adc
fcmove
scas
xor
shlb
jo
lea
aad
jno
mov
xor
lea
mov
lea
mov
lea
mov
lea
pop
inc
out
sbb
les
mov
lea
mov
lea
mov
insl
mov
imul
mov
lea
in
cltd
sub
lods
dec
data16
mov
imul
ja
loopne
sbb
lret
jno
dec
sbb
fldln2
lret
out
imul
add
scas
stos
mov
xchg
cwtl
jecxz
enter
movsl
inc
add
fwait
jns
sbbb
push
push
out
popa
inc
loopne
adc
pop
fisttpl
xchg
sub
xchg
sub
pusha
call
lock
sbb
xchg
loop
mov
inc
cld
fidivs
ficoms
lods
sub
add
inc
mov
mov
sbb
push
stos
xchg
imul
in
pop
sub
pop
pop
fnstcw
xor
in
ret
inc
fdivrs
cltd
push
fdivs
pop
inc
jae
xor
clc
test
jne
push
test
imul
psubq
je
and
loopne
dec
loope
or
mov
lea
mov
mov
push
fs
in
loope
xor
stos
and
ja
cmpsb
push
cs
fcoml
cmpsb
repz
xchg
xchg
in
rorb
stc
mov
sbb
xchg
pop
daa
or
or
xor
cs
xorl
sbb
and
emms
test
xchg
ljmp
lcall
icebp
dec
mov
data16
shl
in
idiv
outsb
arpl
adc
std
sbb
add
dec
subb
mov
lods
loope
mov
inc
pop
lret
daa
in
mov
sub
call
xchg
xchg
pop
pop
aaa
outsl
mov
stc
orb
mov
dec
lret
fcoml
pushf
sbb
aam
cmp
cmc
cmp
call
push
das
movsl
fldenv
in
int
jb
xchg
jecxz
rol
cmc
sbb
pop
add
out
and
mov
xorl
mov
test
je
fnstsw
lret
pop
push
addr16
ret
xchg
aam
cs
push
rcrb
stc
scas
dec
pop
popf
sub
fidivl
xor
xchg
js
pop
push
mov
jmp
into
inc
or
ret
ja
or
pushf
or
cmp
mov
clc
mov
cmp
lods
decl
mov
mov
js
sahf
cltd
adc
shll
or
ja
push
je
mov
lret
sbb
mov
out
test
add
push
mov
fwait
int3
xchg
mov
pop
mov
xchg
sbb
and
outsl
push
negl
pop
bound
daa
sub
enter
ret
aam
or
das
mov
inc
sub
push
in
add
hlt
xchg
jecxz
add
add
or
add
adc
pop
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
pop
add
add
pop
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
insb
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
jo
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
fsubrl
add
add
add
cmp
mov
test
jecxz
clc
lret
jg
mov
insb
xchg
cmpsl
popa
adc
mov
xlat
rep
add
cltd
out
enter
sub
pop
sbb
js
movsl
adc
stos
je
mov
nop
mov
sbb
adc
jbe
adc
mov
mov
push
and
das
dec
and
cltd
stc
and
push
jmp
jge
mov
jl
inc
aad
xchg
adc
loopne
push
lds
lock
sub
pop
mov
pop
sti
cmp
and
sub
notb
in
sub
in
stos
out
xor
mov
cmp
jle
cmp
stc
out
fistpl
sbb
dec
xor
sbb
lret
shll
arpl
sbb
adc
fiadds
ret
out
xchg
out
hlt
dec
out
lea
lahf
inc
mov
fmull
push
sub
jge
sahf
aad
mov
jp
xchg
mov
sub
jo
inc
xchg
xor
jp
cmp
faddl
jnp
mov
dec
lret
push
nop
inc
es
sub
pop
sub
outsl
orb
mov
leave
sbbb
js
nop
inc
push
jne
in
rolb
das
js
pop
jecxz
xchg
sbb
addr16
lcall
call
fiaddl
ret
or
lret
cld
adc
pop
mov
or
mov
cmp
leave
leave
jp
add
xchg
mov
mov
or
add
mov
lock
sub
lods
or
call
lret
and
cmpsb
xor
xchg
mov
and
sub
jmp
push
sbb
scas
sub
mov
push
cs
fistps
cltd
lock
les
jnp
cmp
jbe
add
mov
das
mov
and
gs
or
bound
cli
insb
sbb
mov
cmp
ss
inc
mov
push
cs
sub
clc
ds
cmp
cmp
mov
mov
inc
push
in
adc
mov
mov
push
iret
popa
mov
mov
adc
je
push
test
jg
adc
hlt
test
loopne
xor
jae
sub
pop
cwtl
adc
pop
out
lahf
pop
pop
and
shrl
adc
enter
leave
lods
jle
pop
push
loop
rcrb
fmul
adc
push
mov
jmp
push
out
pop
pop
jne
cmpsb
insb
xchg
fnstcw
ja
or
add
shll
xor
or
ret
fwait
das
sub
sub
pop
mov
xchg
mov
pusha
mov
inc
data16
sbb
lahf
add
andb
pop
into
lahf
nop
adc
cmp
cmp
imul
icebp
sub
mov
movsl
mov
fistpl
xchg
push
adc
jle
adc
movsl
dec
ret
jg
ljmp
pusha
lahf
daa
inc
sahf
dec
clc
or
shll
cmc
les
and
lock
cmp
jbe
sarl
mov
jae
into
push
mov
xor
push
inc
jns
and
push
in
repnz
inc
loop
ret
nop
push
pop
aad
dec
sti
scas
bound
jb
fincstp
mov
sti
dec
jge
notb
cmpsl
sub
popf
mov
les
cmp
stos
cmc
sbb
imulb
dec
push
cmp
jmp
mov
leave
mov
add
daa
cmpsl
popf
in
idivl
xlat
mov
cltd
mov
push
fwait
adc
xchg
in
fdivrp
adc
les
jmp
rcrb
cltd
mov
jge
getsec
das
out
dec
mov
into
push
xchg
movsb
and
jg
xchg
fwait
pop
mov
inc
xchg
add
mov
addr16
repnz
mov
add
mov
outsl
bound
jge
and
pusha
xor
jg
rol
icebp
sti
outsl
push
push
pop
add
je
lret
and
lret
aad
notl
ljmp
cs
js
xlat
inc
mov
jb
fldt
hlt
lods
int
or
jo
gs
mov
fsubr
xor
bound
leave
cltd
insl
lods
rorl
sub
and
jae
mov
sub
roll
sbb
mov
popl
insb
adc
into
rdtsc
ja
cli
cmovle
nop
hlt
ficomps
sub
sti
mov
lods
push
sub
pop
add
ss
inc
jmp
hlt
xchg
cmp
add
push
pushf
jnp
jae
in
dec
adc
insl
xlat
je
pop
inc
jno
pop
lahf
nop
mov
push
cmpsl
xor
mov
aad
out
shlb
repnz
or
sub
iret
cmp
xchg
lret
fimuls
lahf
fbstp
dec
insl
or
push
aas
xchg
sbb
pop
fisttpl
push
push
and
add
sub
movsl
test
ret
in
mov
sbb
cmp
jge
add
loopne
sbb
lret
mov
movsb
arpl
xor
imulb
out
icebp
xor
ds
pop
mov
test
sbb
fs
ljmp
dec
sub
xchg
mov
push
cmp
mov
and
jge
mov
subl
fs
cmp
shll
jmp
sbb
cmp
fninit
jbe
dec
mov
jbe
insb
lcall
movsl
jecxz
ret
and
stos
out
add
sbb
or
imul
sub
out
mov
repnz
enter
xchg
dec
repz
lret
pop
pop
jnp
push
push
iret
sbb
sbb
insl
jno
mov
push
nop
in
mov
mov
jnp
lcall
xor
sahf
push
bswap
inc
cmpsl
dec
cmpsb
sub
in
xor
mov
popf
inc
inc
jg
mov
cli
adc
test
jmp
mov
je
inc
mov
cmp
inc
in
mov
xchg
pushf
push
mov
lcall
dec
rorl
jmp
jge
popa
les
addb
and
aad
adc
and
pop
xchg
insl
or
sarl
out
pop
imul
sbb
push
jbe
cmp
jns
sti
mov
vpshufd
adc
lea
mov
inc
loop
ficoml
icebp
stos
ljmp
repnz
ret
add
mov
sahf
out
xchg
add
das
addr16
cs
movsl
jns
mov
sub
lds
adc
ljmp
push
mov
xor
std
xor
pop
cmp
mov
loop
test
fwait
adc
xchg
add
fs
push
cmp
and
inc
out
lds
jecxz
loop
sbb
or
bound
out
pop
iret
mov
pop
or
stos
scas
pusha
cmp
in
pop
sbb
inc
pop
inc
inc
mov
int3
sbb
mov
sub
sarl
sub
pop
cltd
aad
pop
je
push
push
fisubs
jnp
push
arpl
mov
mov
mov
inc
test
pop
jns
cmp
ret
jae
popf
adc
or
lcall
inc
mov
push
das
jbe
sbb
cmpsb
roll
into
into
lods
ljmp
call
pop
mov
iret
cld
out
cmpsl
hlt
mull
movsl
lea
in
lock
jne
rcll
pop
fcmovb
xchg
popa
fstl
or
mov
rep
jl
xchg
push
nop
stos
add
aas
out
xchg
and
lods
or
cltd
fcompl
and
inc
jg
push
sbb
pop
xor
ljmp
inc
fdivrl
mov
cmpsb
or
and
jae
stos
or
xor
popa
sbb
xor
insb
test
push
hlt
sub
inc
lds
test
add
jmp
push
jmp
xchg
jle
adc
cltd
shl
stos
out
out
add
mov
and
bound
mov
push
aas
mov
push
xor
stos
mov
dec
mov
cwtl
and
das
in
outsb
cmp
psllw
cmp
mull
mov
jae
jo
scas
push
push
imul
cwtl
and
outsl
dec
cmp
enter
dec
andl
loop
lds
add
inc
push
lcall
iret
mov
fisttpll
popa
shrb
mov
arpl
mov
fmul
adc
pop
or
enter
pusha
lea
xchg
es
pop
push
sbb
imul
iret
xor
inc
sbb
decl
cltd
pop
sbb
test
pop
rolb
add
dec
ja
cld
jne
ss
divl
push
xchg
stc
dec
ret
jno
jge
mov
mov
or
addr16
icebp
out
pusha
sub
pop
call
sbb
push
add
dec
enter
js
pop
push
xchg
repnz
xlat
sbb
gs
aad
mov
incb
and
add
inc
out
add
add
or
ja
dec
or
cli
test
loop
insl
inc
push
dec
jno
mov
orb
mov
push
popf
dec
rclb
shl
popf
xor
in
icebp
cmp
dec
dec
jp
and
filds
adc
ja
pop
push
lods
fildll
add
mov
mov
lahf
aas
pop
dec
aam
notl
xor
push
fndisi(8087
lods
adc
push
or
push
mov
xchg
jecxz
add
lret
ss
test
popf
cmc
dec
leave
hlt
in
stc
xor
lods
lret
jecxz
repz
jg
sbb
dec
addl
ljmp
sahf
fldenv
pusha
bound
dec
and
roll
fs
or
fldenv
dec
lea
bswap
lds
mov
scas
clc
xchg
inc
popf
adc
lods
in
cmp
jmp
push
mov
add
add
rcrb
mov
mov
scas
mov
xchg
test
add
mov
js
mulb
outsb
lods
fimuls
mov
sub
movsl
stos
push
out
rcl
fldcw
pop
lret
dec
fwait
or
inc
pop
repnz
cwtl
ss
xor
xchg
inc
in
popa
fs
nop
and
push
dec
mov
rorl
ficoml
dec
xlat
icebp
jmp
push
mov
ret
cmc
mov
jno
out
lcall
inc
lret
sub
adc
sub
es
xor
insl
movsl
loope
jmp
adc
xor
outsb
bound
and
aam
pop
lods
add
orb
ss
jp
jecxz
dec
push
shlb
mov
push
lret
lret
ficomps
subl
mov
pop
mov
jecxz
adc
fistpl
inc
aaa
mov
ret
std
inc
mov
and
mov
out
or
cld
jae
fldt
push
out
cmp
popa
rcrl
stos
mov
lahf
iret
inc
jae
nop
push
lcall
rolb
add
jp
shll
test
fbld
mov
pop
xlat
jmp
loopne
inc
pop
aam
test
cld
cmpsb
cmp
add
push
cmp
ret
test
aas
clc
int
aaa
nop
adc
xlat
std
ret
cmp
sbb
aad
js
shl
mov
mov
div
cmp
loope
sub
je
inc
data16
jecxz
out
jp
push
push
xor
cmp
inc
cmp
jne
mov
mov
xor
into
mov
mov
adc
bound
inc
call
mov
cwtl
pop
add
pop
out
sti
lea
mov
push
rcll
in
fistl
imul
js
loop
xchg
jbe
cmp
ja
sub
pop
fisubs
int3
mov
xlat
popa
decb
xchg
add
xor
add
sbb
ljmp
jmp
fs
inc
leave
cmp
sub
or
mov
icebp
ja
leave
ret
inc
sub
mov
roll
xchg
lahf
dec
cmp
scas
das
jno
enter
dec
mov
mov
xor
jge
das
xchg
sbb
mov
add
fmuls
mov
shlb
cmp
subl
xor
mov
dec
xchg
add
shrb
fimull
ffreep
push
je
and
les
push
movsb
fwait
cmp
jmp
mov
mov
or
insb
mov
inc
push
or
js
shl
mov
mov
leave
aam
sti
aaa
andl
scas
sbb
popf
add
js
xor
pop
mov
pop
sub
pop
inc
repnz
sub
push
mov
dec
push
ss
sahf
xchg
lods
adc
jns
mov
cli
ret
xor
add
lods
stc
icebp
mov
mov
icebp
daa
ss
ret
in
add
add
xchg
popa
push
vmovaps
in
or
mov
sbbb
call
mov
inc
lcall
dec
clc
push
dec
into
sub
jmp
adc
das
sbb
xchg
lcall
fidivl
xchg
cmpsl
xchg
out
test
mov
xchg
clc
mov
pop
scas
je
es
jne
mov
adc
jae
or
xchg
stos
fsubp
sysenter
lea
mov
sbbl
cmpsb
repnz
rol
fistps
jmp
xchg
mov
aad
jb
xlat
sub
loope
mov
xlat
cmp
jmp
mov
pop
push
in
mov
insl
stos
mul
pusha
lahf
fildll
jb
sbb
sbb
sbb
cmpsb
stos
xchg
and
sarl
cmpsb
and
sbb
xchg
cmp
ljmp
stos
leave
jns
sbb
outsb
mov
and
dec
xor
cwtl
repz
lods
inc
mulb
mov
jmp
xor
mov
or
lahf
mov
jo
dec
sbb
aas
mov
roll
mov
push
lcall
inc
filds
push
in
loopne
sbb
ljmp
ret
js
arpl
movsb
pop
cs
mov
mov
mov
xchg
pusha
in
nop
push
sbb
cmp
xor
cld
push
repz
add
popf
pop
push
jo
imul
imul
and
jle
mov
sbb
and
cmpsl
push
add
in
sub
rclb
pop
jmp
mov
push
sbb
dec
cmp
xchg
xor
std
mov
pop
lret
mov
test
inc
jbe
cmc
in
psubsb
enter
mov
jb
dec
or
cmpsl
xchg
mov
scas
vpcmpeqd
std
sti
push
fdivp
add
jecxz
push
or
adcb
dec
jbe
adc
mov
mov
inc
mov
push
mov
mov
mov
or
dec
mov
js
mov
sub
push
fsubs
push
clc
paddsb
mov
push
mov
mov
jns
fstpl
push
mov
xor
fistps
in
repz
adc
aad
scas
hlt
cmc
rorb
rcr
and
cmp
add
jle
sar
les
mov
cmp
mov
icebp
dec
jle
adc
push
lahf
cmp
xor
addr16
xor
push
push
roll
sbb
add
out
jo
fldt
out
mov
jp
scas
mov
aam
dec
xorb
jnp
fadd
fmuls
xchg
test
jge
xchg
mov
push
mov
dec
add
out
in
outsb
xchg
nop
xchg
or
test
add
es
mov
mov
test
push
stc
mov
sub
sbb
dec
push
jbe
aad
sti
push
pop
fwait
jo
insb
pop
add
inc
sub
in
jae
mov
inc
int
cmp
addr16
sub
imul
andl
adc
popa
in
int
hlt
lock
mov
daa
out
pop
jnp
outsl
add
pop
push
mov
jg
sub
pop
and
fsub
scas
in
test
shl
push
in
mov
into
ja
cmp
cmp
dec
loope
jle
adc
cmp
xchg
push
mov
mov
out
rcrl
xor
aam
js
cmp
jae
imul
and
xchg
cmp
mov
mov
fsubrp
dec
cld
sbb
sbb
leave
neg
push
fists
mov
mov
inc
mov
lea
sbb
mov
adc
in
loope
in
add
adc
sbb
xchg
lods
shll
adc
cmpsl
inc
dec
adc
dec
outsb
aad
sbb
mov
in
cmp
out
adc
clc
mov
or
and
mov
mov
or
popf
mov
push
call
inc
stos
das
jns
cmpsb
pop
dec
test
and
xchg
mov
push
fwait
stos
clc
sub
or
sub
adc
les
pextrw
cs
xor
daa
pop
les
mov
lods
mov
test
xor
stos
adc
sbb
sbb
js
inc
dec
xlat
inc
pusha
and
jmp
sti
loopne
fs
pusha
std
xchg
xor
mov
sbb
arpl
and
imul
sub
stos
nop
fstps
lock
lret
xor
aad
daa
imul
xor
xor
negl
mov
loope
jno
insl
test
inc
xor
out
jb
mov
sub
or
in
inc
jbe
mov
jae
adc
mov
insl
in
mov
jg
mov
sar
ret
jge
xchg
sbb
adc
data16
shl
fs
das
mov
mov
repz
sub
out
cmp
popa
mov
xchg
js
js
lahf
pop
ret
or
push
sub
xchg
aad
add
cmc
push
or
or
sbb
mov
add
push
mov
cmp
inc
mov
xchg
in
mov
lods
loopne
or
pop
sub
dec
cli
dec
push
mov
mov
pop
rol
pop
jmp
cmc
adc
mov
sub
fildll
dec
lret
js
imul
cmp
in
xchg
xor
loop
jbe
add
pop
sub
sbb
inc
iret
jns
gs
jecxz
jmp
test
cmpsb
push
sarl
int3
mov
and
jns
dec
push
push
cmpb
pop
xor
xorb
loop
push
and
xor
or
mov
rolb
cmpsl
adc
test
repnz
imul
push
sahf
js
lods
and
cmp
xchg
dec
jns
pusha
inc
aas
insb
adc
pusha
xor
imul
mov
enter
push
insl
or
out
or
xor
aas
popf
ret
push
sbb
mov
push
or
lock
mov
mov
dec
cmpsb
aas
xor
and
repz
add
xor
and
pop
imul
fwait
cli
andl
ss
stos
in
sbb
dec
scas
xchg
ficoml
push
mov
aaa
sbb
xchg
dec
cmp
mov
push
and
in
jne
out
sahf
bound
arpl
pop
cli
out
lods
mov
mov
and
xorb
push
push
das
aam
mov
mov
adc
les
dec
or
xchg
inc
jb
inc
adc
pop
jl
and
fsub
popa
mov
fisubs
inc
push
inc
sub
rcr
call
int3
sarl
mov
jp
add
aam
push
pop
dec
stc
pop
call
inc
cli
jle
pop
push
jmp
add
imul
cltd
es
mov
mov
mov
data16
jge
out
mov
jp
repz
shlb
mov
fisubs
mov
sahf
xlat
xorb
into
pusha
pop
mov
aas
adc
add
mov
lret
in
jns
xchg
jg
jle
lret
test
xor
outsb
lahf
jb
add
sahf
outsb
cmp
mov
cmp
rcll
pop
xchg
adc
inc
and
add
and
cmp
scas
adc
fsubp
adc
xor
loop
aam
cmp
sbb
mov
cmp
inc
fdivs
sub
push
loopne
add
mov
cwtl
push
cmp
sbb
xor
sub
push
lods
fldcw
adc
insb
xor
jmp
lahf
ret
sub
sub
mov
jns
in
push
clc
fistps
jle
jge
xlat
fs
adcb
mov
fistl
dec
xchg
inc
hlt
pop
into
das
rcrb
add
sbb
btr
push
imul
dec
or
or
sub
cmpb
push
pop
arpl
push
es
jecxz
xor
loope
and
lret
sbb
movsb
shrl
inc
popf
xchg
cmp
mov
jmp
sahf
lods
add
nop
add
cmp
outsl
or
xorb
mov
or
insb
mov
cmpsl
xchg
pop
in
and
cwtl
cltd
loope
jnp
and
pop
jns
push
mov
or
sti
mov
ja
and
faddl
fnstsw
les
push
aad
cld
out
mov
inc
push
xchg
push
and
mov
sbb
xchg
mov
sub
adc
clc
adc
pop
call
shrl
xor
ret
or
js
fs
push
cmp
iret
into
lods
push
xchg
ljmp
sahf
inc
and
inc
rcrl
sub
int
imul
test
jno
pop
hlt
in
adc
int3
subl
dec
ret
rcrl
out
adc
lret
loop
lods
sti
xor
mov
aad
lret
push
jno
fsubrl
xchg
xchg
mov
cmpsl
clc
pop
inc
and
test
std
dec
sbb
xor
cmpl
stc
add
adc
or
mov
cmpsl
sbb
mov
adc
popf
scas
mov
pop
add
inc
clc
int
push
jno
or
jno
xchg
lods
pop
cmpsb
rcl
cmpsb
fldenv
pop
or
repnz
xor
sub
outsl
sarl
pop
hlt
cmp
adc
mov
add
scas
dec
mul
mov
cmp
inc
rorl
testb
jnp
mov
sbb
imul
mov
or
pop
int3
mov
aas
das
xchg
popl
mov
sbb
jg
jmp
mov
in
cs
add
int3
pop
or
add
jp
pushf
cltd
xchg
std
ds
out
sbb
rcrb
mov
movsb
popf
js
jns
mov
xor
int3
xchg
dec
jbe
dec
sbb
sarb
jo
jns
jp
mov
jmp
cmpl
inc
jo
imul
int3
mov
mov
cld
sub
gs
loop
xor
jmp
lock
popa
std
mov
xor
movsl
aaa
loope
or
push
hlt
out
sub
ljmp
rorl
pop
xchg
cs
out
aas
ja
cmp
mov
or
lock
js
jo
fldl
inc
test
cmpsl
insl
ror
xchg
push
fisubrl
or
cmp
divl
imul
sub
jnp
leave
js
sbb
or
add
insl
sbb
movsb
cmp
or
es
adc
sarl
xor
cltd
movsl
jp
and
and
jae
push
jnp
shlb
loope
notl
mov
mov
xor
cwtl
rorl
mov
aas
jmp
adcb
stos
inc
addr16
jle
and
shlb
bound
hlt
es
loopne
call
cmp
xchg
jecxz
jecxz
les
repz
add
mov
std
leave
std
movsb
push
cmc
or
sbb
aad
xchg
sahf
sub
call
in
idivb
das
or
jae
mov
add
dec
je
aas
pop
cmp
sub
mov
jno
stos
loope
sbb
jmp
insb
mulb
pop
std
push
bound
imul
cmp
int3
sub
pop
in
rcrl
gs
jecxz
int3
dec
das
aaa
rcrl
push
pop
mov
mov
lcall
sahf
ficompl
add
out
cmc
add
mov
cmc
jbe
sbb
mov
mov
sub
icebp
outsl
loop
movsb
cmpsb
in
sbb
decb
jge
arpl
sub
jo
cmc
jl
pushf
out
into
je
enter
dec
mov
icebp
pusha
dec
mov
movsl
or
cmp
jb
pop
jecxz
dec
xor
push
testb
call
push
pop
jle
adc
cmp
aaa
fwait
imul
push
scas
popa
das
sahf
int
psrlq
mov
push
imul
push
and
pop
jo
mov
or
fidivrs
enter
popa
sti
cmpsb
fisttpl
repz
cmp
mov
out
lahf
sbb
jnp
pop
push
inc
rclb
add
or
sub
jmp
push
pop
std
mov
out
lods
movsl
inc
add
dec
cmp
dec
pop
mov
cmpsl
adc
jmp
inc
decb
ret
mov
dec
xor
push
add
out
inc
stos
add
sub
mov
xor
lahf
jmp
out
jp
pop
adc
or
repz
mov
lcall
add
je
sbb
xchg
cmp
dec
fs
fwait
pop
pop
push
push
mov
aam
mov
into
jno
inc
ja
sub
add
insl
setno
dec
fs
popa
popf
fdivr
cmp
jmp
sbb
scas
shlb
jmp
adc
push
cmp
jo
xchg
cmp
fwait
mov
cwtl
cmp
push
mov
ss
push
push
movsb
aad
loopne
mov
mov
sub
jne
out
cld
cld
pop
cmc
xor
or
hlt
push
push
push
adc
in
mov
clc
push
push
mov
push
adc
xchg
jecxz
cwtl
loop
lods
push
cmp
and
scas
jno
xchg
ret
fnstcw
mov
daa
sbb
cmp
stc
loop
in
jns
add
bswap
or
movsl
lods
jmp
jae
and
mov
jl
mov
mov
test
pushf
jae
mov
gs
in
push
and
xor
insl
mov
push
mov
das
pop
jp
addb
mov
popa
jp
push
xchg
add
inc
sqrtps
loopne
hlt
int3
mov
pop
mov
push
add
adc
jle
inc
xor
sub
outsl
cmp
adcl
mov
sbb
mov
pop
inc
inc
aam
lretw
lock
cmc
sbb
mov
aad
inc
mov
notb
ret
cmp
movsl
jb
xor
in
cmp
or
jmp
jp
and
and
test
fdivrl
fdivrl
sub
push
inc
cmpsl
fisttpll
adc
xchg
xor
adc
jge
cwtl
mov
inc
xor
dec
adc
out
pop
lods
inc
xor
push
push
fsubrs
ja
add
jecxz
jp
pop
iret
add
cmc
fsubrl
pop
inc
cmp
test
cmc
pusha
xchg
push
mov
idivb
sub
sub
out
inc
lods
ficoml
js
push
divb
aaa
insl
mov
xchg
pop
or
and
or
or
jnp
jle
fisttpl
xchg
cmp
xchg
jmp
lret
test
pop
cltd
sbb
in
xor
ret
pop
fwait
inc
shl
sub
mov
pop
mov
cmp
jl
xorb
add
mov
jle
push
inc
push
jmp
pop
pop
dec
push
xor
lds
lods
xor
cmp
rcrb
mov
leave
scas
lods
dec
jle
inc
subl
imull
nop
dec
jne
subl
out
dec
sbb
cmc
xchg
mov
ret
je
cmp
mov
pop
push
stc
insl
jl
lret
mov
test
aam
add
lcall
jmp
jno
loope
sti
sub
fisttps
xor
mov
rolb
jp
fwait
and
mov
jno
pop
sub
daa
leave
jecxz
jge
lcall
push
out
int
daa
cmp
xchg
inc
xlat
gs
xorl
and
push
or
test
jmp
dec
cmp
and
rol
pop
dec
lcall
jmp
aad
cmp
mov
jle
lahf
in
out
sbb
push
out
sub
daa
xchg
xor
into
mov
dec
push
fwait
test
lock
mov
mov
leave
jmp
add
inc
fwait
rorb
xor
lcall
sbb
ficoms
push
popf
add
dec
jmp
insl
and
or
pusha
das
dec
xchg
fidivrs
jns
push
add
in
iret
shlb
lods
outsb
mov
cmp
pusha
sub
jb
lods
xchg
mov
call
cmp
jns
aaa
icebp
and
test
adc
mov
pop
shrl
sbb
jne
gs
testl
rcrb
insb
jl
dec
faddl
subb
or
or
mov
dec
inc
add
cmpsl
out
mov
xchg
mov
mov
outsl
jns
inc
mov
popa
pop
movsb
adc
xor
xchg
je
movb
inc
push
pop
sbb
aad
xchg
aad
xlat
aas
test
lea
pusha
and
mov
rcll
ror
std
pop
in
stc
sub
dec
mov
jl
das
ljmp
inc
pusha
dec
rcll
mov
cmp
jle
test
dec
xchg
stos
aam
and
jnp
or
adc
xor
cmp
pop
fmuls
sub
add
mov
mov
data16
inc
das
daa
push
xchg
outsb
push
jne
inc
test
roll
mov
leave
mov
pop
push
dec
pop
insl
movsb
outsl
jns
push
cs
fnstenv
xchg
pop
xchg
sub
jl
stos
mov
mov
inc
sub
daa
out
jl
ljmp
nop
xor
jge
icebp
fstp
mov
inc
stos
pop
andb
sub
call
sbb
jge
dec
out
testb
push
popf
push
dec
cmp
pop
inc
cli
cltd
inc
xor
mov
push
fnstenv
push
test
loope
xor
add
scas
mov
enter
pop
push
or
cmp
pop
leave
jbe
int3
jge
mov
and
inc
lret
pusha
sarl
push
iret
mov
out
inc
mov
stos
repz
nop
push
popa
dec
add
nop
and
dec
mov
push
insl
je
js
stos
movsl
xchg
imul
push
mov
sbb
popa
jb
xor
jb
addl
push
mov
mov
ret
icebp
out
mov
inc
call
imul
and
mov
pop
neg
fists
mov
pop
insb
push
inc
fwait
cli
and
daa
push
repz
shll
xor
xchg
dec
fimull
mov
xor
int
mov
cmp
mov
outsb
repnz
jle
jge
and
imul
inc
dec
lock
cli
lahf
add
pop
pusha
mov
pop
ficoms
and
sbb
lock
mov
xchg
push
loopne
lret
push
mov
sbb
out
lahf
loope
repnz
mov
outsl
lret
test
or
pop
jnp
leave
mov
xchg
jae
adc
ja
outsb
pop
mov
popa
xor
mov
pop
jg
pusha
ss
sbb
sub
int
int3
je
jmp
mov
imul
push
mov
pop
pop
sar
inc
xchg
jp
enter
es
jge
mov
mov
adc
dec
push
mov
repz
jmp
cmpsl
lea
pushf
cli
dec
inc
jo
adc
gs
aad
mov
pop
sub
int
stos
pusha
call
nop
xor
inc
mov
scas
add
nop
jb
test
js
out
iret
mov
popa
mov
pop
mov
shl
dec
cwtl
xor
mov
clc
and
xor
repnz
pushf
pop
jnp,pt
or
or
fst
cmp
xchg
stc
jmp
ljmp
sbb
mov
mov
fs
shl
add
fnstsw
out
push
xchg
push
mov
aad
mov
xor
clc
pop
pushf
mov
xchg
adc
xchg
clc
mov
insb
push
ss
inc
loope
pop
mov
orb
cmp
je
cmpsl
push
test
mov
insb
sahf
rcl
sbb
fstps
pop
mov
or
jo
stc
mov
add
fldt
inc
mov
fmuls
or
cmp
popa
insb
lds
popa
leave
shl
scas
sub
mov
insb
mov
sbb
inc
frstor
mov
pop
out
insl
push
fs
mov
mov
imul
adc
sbb
add
push
mov
pop
add
sbb
jmp
xor
hlt
mov
pop
cmp
test
xor
add
pop
cmp
enter
out
sub
addr16
sbb
add
lds
sub
loop
jo
mov
into
jge
xlat
or
xchg
mov
das
mul
add
in
mov
jbe
or
xlat
jne
pop
shr
adc
aam
pop
jns
adc
clc
xchg
decw
lock
pop
mov
pusha
sbb
enter
aad
dec
fiadds
out
lock
jl
pop
xchg
push
adc
clc
cld
lret
aad
popa
hlt
repnz
push
jnp
test
push
hlt
pop
xor
rol
pop
jg
jp
mov
repnz
lock
pop
fisubrs
jne
stc
orb
cwtl
add
mov
push
outsl
int
sahf
inc
sub
ljmp
sub
jle
push
or
cmp
inc
mov
push
insb
pop
jg
cmpsl
jo
add
xor
rol
fcomp
jbe
xchg
cwtl
addl
int
popa
pop
xor
xor
jns
xlat
cmpl
lea
mov
mov
dec
jge
jne
repz
fmulp
inc
insl
pushf
fcomp
push
and
sbb
mov
push
lahf
push
xlat
push
cmp
repnz
sarl
shl
push
imul
add
xchg
daa
mov
je
iret
lcall
push
adc
scas
mov
adc
lahf
inc
aad
lahf
xor
fcoml
loop
mov
add
mov
mov
dec
inc
arpl
adc
dec
jns
or
stos
mov
in
adc
lret
pop
push
xor
xor
dec
xor
push
cmp
out
adcb
hlt
push
dec
out
or
and
xor
mov
ficoml
mov
pop
call
iret
sbb
push
pushf
lods
jle
test
in
adc
xchg
shlb
pop
clc
stc
call
dec
addr16
or
dec
call
jmp
stc
arpl
or
push
xchg
sub
pop
pop
das
insl
subb
cmc
rcll
out
int
out
cmpsb
leave
mov
lods
sub
out
pop
test
in
mov
pop
sub
add
mov
in
jno
movsb
xor
lock
ljmp
scas
inc
push
and
push
xor
les
pop
mov
fucomp
inc
imul
cld
sub
jmp
dec
cmp
enter
shll
lock
stc
adc
into
xchg
ficomps
cli
scas
jo
push
loop
push
xchg
jo
in
ret
scas
adc
fcoml
inc
divb
xchg
jmp
push
mov
inc
pusha
push
dec
insl
sarb
sbbb
ror
mov
loop
jmp
dec
jne
mov
push
pop
fs
xchg
pop
xchg
jmp
dec
mov
xor
jl
mov
int3
add
pop
and
bound
lds
jl
sub
jo
jecxz
pop
nop
xchg
push
jl
sub
jae
push
gs
pusha
addr16
adc
int
cmpb
adc
jmp
ja
jg
dec
or
in
test
and
mov
out
out
inc
add
push
lds
and
sbb
pusha
and
add
vpcmpeqd
test
out
ret
sub
add
shrb
clc
aad
mov
je
pop
sub
roll
mov
sub
cli
push
loop
imul
sarb
rcrl
push
inc
cli
cmp
jne
lods
or
cmc
test
xchg
inc
inc
xchg
cmp
fmul
daa
xor
or
bound
pusha
aam
ret
adc
subl
test
icebp
adc
or
cwtl
sub
repnz
adc
fsubrs
add
cli
inc
mov
cmpsb
cld
mov
das
rcrl
jnp
pop
inc
jg
xor
add
scas
mov
and
mov
jge
ret
test
js
pop
mov
push
dec
inc
les
imul
loop
push
xor
pop
adc
add
inc
loopne
mov
nop
movsl
mov
pop
flds
dec
push
dec
push
jl
xor
ljmp
pop
sbb
aas
out
cld
movsl
push
pop
mov
jb
sub
imul
jmp
fucomi
stc
roll
lret
mov
je
add
rorl
cmpsl
cmc
cli
int3
test
jo
repnz
or
or
push
jne
movsb
je
adc
add
inc
sbb
ss
mov
sub
jo
or
not
dec
xchg
enter
adc
aas
xor
scas
dec
jbe
xchg
insl
outsw
adc
adc
bound
jo
cmp
rcl
pop
incl
sbb
mov
mov
in
mov
mov
cmp
sub
sub
inc
fnclex
pusha
xor
mov
adc
in
inc
mov
test
fists
pop
aad
mov
xchg
add
xchg
outsb
ret
mov
out
xchg
push
cmpsb
add
jns
adc
in
and
mov
mov
data16
std
lock
fwait
aaa
fistpll
mov
push
add
fwait
js
jl
xchg
pop
imul
test
xchg
inc
stos
mov
call
jmp
pushl
pusha
pop
push
add
add
xchg
ljmp
test
aas
fdivrs
pop
scas
cmc
pop
cmp
repnz
push
mov
push
xor
clc
out
jle
or
lods
mov
lcall
xchg
xor
sub
fisubrl
xor
cmp
mov
test
popa
add
out
jg
lret
fwait
repnz
es
jae
mov
mov
inc
or
push
pop
nop
cmp
sub
push
sti
mov
mov
test
pop
push
mov
rol
imul
imul
aad
js
sbb
icebp
cmc
ret
addr16
int
mov
mov
jg
push
icebp
jbe
and
ja
shl
ljmp
pop
notb
xchg
adc
or
in
rcll
shl
arpl
insb
sub
jo
adc
ret
ss
out
test
mov
lahf
xor
and
adc
orl
sub
fucomp
in
and
and
cmp
popf
je
or
nop
mov
inc
inc
mov
shll
orb
daa
push
pop
shrb
push
add
cmp
int3
les
mov
inc
jmp
jle
or
xchg
gs
stos
loop
lds
xchg
daa
ficoms
push
sbb
or
dec
clc
and
adc
add
cli
dec
jmp
jecxz
xchg
in
scas
mov
or
jne
adc
popf
jmp
sbb
jo
scas
int
test
xlat
clc
inc
fs
ror
dec
scas
jb
rcrb
cmpsb
sbb
or
and
out
push
mov
mov
mov
pop
test
js
cmc
sub
and
insb
addl
and
and
fsubrs
or
les
es
or
push
jle
in
ficomps
fdivr
xor
mov
ror
or
jmp
js
and
cmp
xchg
roll
xor
out
jecxz
push
call
jp
test
aas
adc
adc
dec
inc
in
fmuls
inc
sbb
sub
cmp
mov
xchg
ret
adc
inc
xchg
jno
cmpsl
mul
push
cmp
and
sub
push
jae
mov
dec
inc
ss
mov
mov
cli
rcr
sbb
loopne
out
loope
mov
inc
das
leave
test
jg
jmp
sbb
insl
or
pop
fistpll
hlt
movsb
xchg
xchg
daa
xor
movsl
add
or
mov
das
and
jl
lret
mov
and
mov
sbb
push
mov
clc
mov
jl
or
imul
jmp
sbb
mov
push
imul
push
clc
mov
scas
xor
jmp
pop
xchg
mov
push
and
call
cli
cmp
or
loope
inc
inc
flds
movsl
ret
xor
or
jl
dec
cli
sub
and
test
pop
stos
add
cmpsl
jbe
dec
xchg
mov
and
aas
cmc
inc
mulb
cld
lahf
mov
ljmp
add
pop
sub
cs
inc
pop
cli
pop
push
mov
add
add
lret
clc
sbb
outsl
xchg
repz
fsubrs
loop
lea
and
clc
pop
adc
mov
clc
andl
fs
pop
addr16
lea
incb
push
push
xor
inc
mov
shll
lret
xchg
lods
int3
xchg
or
mov
pop
xchg
dec
ss
pop
adc
movsb
aad
test
jmp
stc
push
jle
cmc
jp
pop
ja
push
add
dec
repnz
dec
rorb
inc
cwtl
insb
fs
add
into
pop
mov
enter
xlat
popf
rcl
or
sub
ss
cs
add
mov
in
imul
in
jno
movsb
hlt
ret
xchg
cmp
int
test
popa
adc
ficoms
jecxz
or
sbb
aam
pop
jp
pushf
or
add
hlt
ds
pop
cmp
mov
push
repz
imul
pop
mov
cltd
movsb
ljmp
cmp
and
mov
fistpll
int3
mov
lret
das
repnz
mov
mov
inc
or
cmp
cmp
les
ja
and
sti
ja
outsl
mov
xor
adcb
fs
imul
fstps
ljmp
cwtl
rcll
push
mov
cltd
popa
dec
jmp
sbb
rorl
xor
push
aas
aad
outsl
in
cmp
loop
xchg
jmp
fwait
add
xchg
jmp
pop
aas
negl
mov
add
or
outsl
ljmp
int3
cld
pop
xchg
fisubl
stc
mov
jns
dec
and
xchg
enter
add
xor
push
fistpll
inc
push
in
add
cwtl
cmp
dec
xor
pop
arpl
jno
jge
xchg
rcrl
fcoml
dec
jmp
sbb
in
sbb
mov
push
outsb
adc
std
ret
pop
sbb
hlt
loopne
mov
loop
mov
push
je
andb
int
aad
cmp
xchg
cld
xchg
loopne
mov
sbb
fcompl
pusha
mov
lock
inc
loop
push
dec
push
and
mov
ficompl
or
fnstsw
ret
int3
in
xchg
xor
inc
push
mov
lods
clc
lahf
pusha
flds
popf
mov
push
xchg
cld
std
filds
dec
push
fdiv
lods
dec
stos
test
pop
enter
mov
hlt
mov
pop
xor
push
or
mov
inc
push
mov
cmc
popa
roll
cwtl
lret
dec
jno
out
orl
nop
into
cwtl
repnz
pop
dec
cmpsb
leave
sahf
pop
jbe
rorb
ds
lds
in
aas
pop
test
cs
xchg
pop
mov
in
mov
subl
sub
leave
aas
movq
rcrl
adc
clc
inc
test
inc
ljmp
xor
push
mov
xchg
inc
jg
xor
jge
jbe
stc
xchg
testb
movsb
xor
jle
mov
mov
dec
push
mov
lods
cli
fwait
add
clc
pusha
dec
lret
out
jmp
push
es
pop
xchg
or
stc
mov
push
push
jp
das
stos
or
and
push
xchg
aaa
push
lods
cltd
icebp
jo
int
aam
push
and
scas
sub
fstpt
sarb
inc
mov
adc
mov
add
inc
mov
xchg
aam
dec
xor
push
out
out
xchg
jmp
sbb
mov
leave
gs
sub
jmp
or
xor
sbb
jle
inc
or
mov
xchg
jbe
data16
xchg
and
gs
lock
jbe
movsl
cmp
lret
loop
lret
decb
mov
fnsave
addr16
jnp
ficoms
jle
mov
inc
repz
inc
xor
push
packsswb
sub
js
mov
mov
jg
dec
cli
jp
dec
and
xor
cmp
inc
ret
out
outsl
lock
mov
xor
mov
mov
inc
cld
out
std
fxch
pop
sbb
clc
subl
fstl
sbb
sbb
out
jae
and
and
scas
jmp
jg
ds
and
sub
stos
xchg
lcall
add
shlb
sbb
shrb
addr16
in
sbb
cmp
inc
loop
mov
popf
pop
inc
cli
and
xchg
gs
fildl
fimuls
and
xchg
pop
cld
pop
ficoml
clc
push
jmp
dec
cmpsl
push
adcl
loope
cmpsl
aam
or
cmp
sub
das
lret
enter
xor
repz
rclb
pushf
xchg
or
xlat
mov
xor
mov
out
je
aad
mov
pop
loop
cmp
cmpsl
jp
pushf
xchg
jbe
imul
cmc
sti
push
call
inc
cmpsl
xadd
sbb
aas
stc
mov
into
int3
xchg
les
mov
jecxz
inc
pop
ja
repz
dec
popl
mov
mov
mov
sbb
mov
std
aaa
xchg
inc
shrb
mov
cmpb
and
es
insb
fsubs
cmpsb
mov
cwtl
inc
out
cli
pop
scas
add
lret
adc
pop
mov
add
adc
push
mov
popf
jle
or
cltd
fists
dec
xchg
xor
inc
addb
dec
adc
push
lret
je
lock
hlt
shl
std
inc
aam
adc
fmuls
mov
inc
clc
and
bound
inc
pop
sbb
dec
push
pop
out
add
addb
mov
aaa
and
subb
jle
sbbb
xor
lods
push
test
cmc
int
fidivl
roll
out
paddusb
cmp
jl
sti
rol
sbb
shlb
ja
and
adc
or
jg
icebp
cmp
and
cmpsb
mov
pop
dec
mov
jecxz
mov
idivb
lods
sub
dec
popa
cmc
dec
faddl
xchg
pusha
xor
mov
je
sub
cmc
iret
ficomps
xchg
inc
fs
daa
mov
sub
or
push
mov
mov
dec
mov
push
pop
data16
stos
cmpsb
mov
mov
mov
dec
pop
xchg
enter
adc
test
aad
movsl
ret
test
xor
shll
mov
ds
add
cmp
pop
das
push
fcom
pushf
lar
fldt
cmpsb
ret
lret
sbb
sub
cmpsl
ficompl
or
xor
mov
inc
or
mov
fs
loop
sbb
push
push
enter
inc
and
sbb
divl
dec
mov
sub
mov
out
popf
inc
jg
xor
mov
jno
push
jle
pop
xor
inc
or
movsl
cld
pusha
cmpsb
jge
into
sub
mov
subb
sub
jp
out
jp
shll
ret
adcl
xchg
push
mov
rcrl
pop
or
imulb
pop
sub
push
jae
jb
push
imul
mov
shr
lds
xchg
sub
fwait
popa
inc
pop
in
rcrl
jae
jae
shlb
mov
sarb
and
mov
mov
jle
lods
das
dec
cmpsb
xchg
add
call
enter
mov
in
add
test
xchg
push
into
daa
cmp
dec
enter
and
jbe
ds
mov
lods
imul
daa
fcom
push
pop
mov
sbb
cmp
jnp
roll
stos
dec
sarl
sbb
movsl
mov
das
inc
in
stc
xchg
imul
inc
mov
shrb
xchg
fwait
adc
ja
lods
lcall
ljmp
js
mov
insl
sbb
mov
add
mov
call
mov
cmc
push
dec
cli
inc
lea
pusha
push
lahf
sub
xchg
aas
lock
or
pop
cli
and
cmp
sbb
vphaddubw
cmpl
and
push
cmp
insl
insb
repz
and
data16
sbb
and
mov
pop
rolb
and
inc
int3
sbb
push
notw
push
sub
xchg
mov
bound
lea
mov
imull
cmp
mov
addr16
std
inc
cmpl
cld
xchg
inc
or
mov
xor
mov
mov
push
adc
lcall
jb
adc
push
xchg
in
ret
shll
insl
inc
xor
add
inc
andb
xchg
mov
fwait
push
jp
pop
fldl
dec
stos
fcomps
stos
idivl
xchg
jecxz
add
add
pop
push
lock
push
dec
or
shlb
cmp
scas
scas
test
xor
fisttpl
outsb
xchg
insl
lds
mov
mov
xorl
inc
xor
sbb
xor
push
cli
pop
outsl
pop
mov
fwait
mov
mov
or
outsl
in
int3
cli
or
jbe
leave
movsb
sub
xor
daa
daa
popa
jg
jb
loop
pop
pushf
std
fsubrs
or
roll
les
bound
pop
cmpsl
sub
inc
sub
cld
sub
and
push
rolb
xlat
mov
add
stos
loopne
out
sub
pop
sub
pop
dec
push
mov
mov
js
fisubs
orl
mov
pop
add
jnp
fiaddl
ljmp
mov
push
or
mov
movsl
and
dec
inc
cmc
fists
jb
scas
lret
mov
push
xchg
scas
lods
es
js
rcll
push
cmp
lahf
xor
mov
stos
pop
and
pop
hlt
icebp
mov
push
and
iret
xchg
mov
mov
sahf
adc
loopne
pop
or
adc
inc
mov
add
aas
fxch
jmp
data16
push
or
rcr
mov
adc
inc
push
jo
mov
mov
pop
jae
jnp
inc
xchg
mov
mov
or
out
sub
jl
leave
xchg
sub
rcll
test
iret
pop
and
popf
add
fadds
rcll
adc
pop
pop
mov
mov
in
and
pop
pop
shlb
fildll
ljmp
fwait
add
repz
mov
ror
sbb
test
scas
jmp
sti
dec
fucomi
lahf
js
inc
or
cmp
dec
xchg
in
movsb
test
jns
cmc
and
ret
mov
mov
adc
mov
scas
out
mov
or
jmp
or
shlb
das
lcall
mov
add
scas
push
cmp
and
call
into
xor
or
mov
cmp
scas
xchg
push
cmc
adc
jb
dec
icebp
xchg
cltd
imul
test
sbb
inc
daa
mov
hlt
sbb
mov
mov
mov
movl
aad
test
cmpsl
pop
sbb
or
xor
iret
stc
rcr
mov
dec
jb
test
in
inc
add
pop
push
lods
jb
addb
push
addr16
clc
push
roll
fs
ss
cld
sub
fdivs
xchg
cld
scas
sub
add
test
push
mov
ficoms
mov
test
popa
and
dec
imul
xor
cmp
inc
xchg
cli
adc
cld
and
sub
dec
cmp
cld
fwait
cmpsb
sbb
outsl
pop
mov
cmpsb
sbb
je
jno
fsts
out
xchg
out
into
pop
fisttps
cmpsl
js
or
loope
add
adc
and
pop
jbe
mov
add
outsb
push
xchg
xor
or
push
xor
push
sub
lock
mov
fsts
and
outsb
mov
mov
and
lock
xchg
jb
or
cwtl
dec
dec
jl
fisttpll
sub
notb
mov
mov
jb
imul
dec
sbb
jae
out
or
dec
je
sub
mov
push
and
lret
mov
in
mov
lret
push
add
xor
xor
fsubrp
into
inc
ljmp
stos
sub
jl
mov
ds
lods
jae
mov
and
sub
jns
or
jne
ss
mov
movsl
outsb
loope
ror
push
push
mov
sahf
lret
mov
mov
jecxz
add
ret
jg
mov
xchg
ss
rcrb
pusha
mov
mov
addr16
mov
jl
test
add
jae
daa
adc
loopne
inc
fsubrl
stos
jp
cmp
int3
jg
jg
sub
push
push
fs
sub
dec
dec
add
mov
mov
xlat
mov
in
sbb
mov
pop
sub
std
fmuls
aad
sub
or
inc
or
mov
or
cmp
lods
je
lea
daa
or
xor
sahf
pop
mov
aam
fsts
outsb
rorl
jp
lcall
sub
push
stc
pop
repz
mov
and
add
xchg
in
jb
adc
pop
push
leave
cli
pop
cmp
hlt
std
dec
divb
mov
dec
mov
mov
int
mov
shlb
pop
sub
outsl
pushf
test
std
inc
test
fisttpll
lcall
nop
jp
bound
lahf
clc
mov
mov
aam
pop
pusha
sbb
jecxz
in
dec
jp
inc
inc
dec
push
sbb
mov
xchg
icebp
std
xchg
into
and
cmp
sub
in
adc
test
les
jnp
pop
lods
lods
in
fsubr
ficoml
dec
inc
mov
jo
xchg
lea
subl
fdivs
inc
insb
mov
cmp
add
cwtl
popa
shl
pop
fsts
stos
mov
or
xchg
cmp
pop
xchg
sarl
pop
sbb
push
loopne
shll
sbb
int
pop
imul
lock
dec
movsb
ds
push
stos
xchg
sub
sbb
fmuls
arpl
ss
cld
fwait
xchg
inc
ret
outsl
fstpl
or
cmp
dec
leave
test
push
inc
xchg
fnstsw
pushf
das
mov
add
adc
lock
jg
mov
das
inc
scas
shlb
add
pmovmskb
bound
adc
xchg
repz
js
sbb
lret
in
cwtl
arpl
lods
mov
pushf
push
sbbb
inc
jo
idivl
into
cld
sub
addr16
in
jmp
mov
imul
cli
xor
push
mov
pop
or
mov
test
mov
and
sub
jp
push
xlat
cli
xchg
je
mov
lcall
cmpsl
fsubp
dec
mov
sub
sbb
and
sub
add
hlt
add
inc
or
icebp
jg
sar
xchg
sub
outsl
adc
aam
lret
inc
fimull
cltd
out
push
jg
cmp
cs
sti
out
pop
add
stos
leave
inc
stc
xchg
test
cmpsb
loop
stc
inc
push
pop
mov
cwtl
stc
xchg
daa
es
mov
sbb
pushf
xor
int3
out
jle
and
fstpl
or
mov
sub
movsl
pop
mov
fildl
mov
push
dec
call
jp
mov
out
push
and
cmp
mov
mov
ret
push
test
dec
pop
icebp
sbb
in
push
jns
sbb
push
jno
jl
or
fistpl
sbb
xor
in
cmpsb
sbb
jns
ficoms
mov
inc
divl
sbb
adc
int3
pop
ret
mov
xor
jmp
lret
imul
outsb
sbb
xlat
test
pop
loop
das
cmpsl
sub
and
pop
push
push
in
xor
cwtl
out
and
xor
fsubp
adc
or
rcl
pop
mov
push
insl
and
mov
ret
clc
repnz
xchg
push
lods
fs
xchg
push
sub
stos
xchg
mov
call
pop
jg
mov
lcall
lcall
jp
mov
pop
orl
mov
bound
in
int3
idivb
lret
cmp
push
add
jo
xchg
outsl
cs
sti
pop
xor
adc
push
push
xor
and
or
xchg
sbb
dec
adc
loope,pn
mov
int3
pop
xchg
xor
fdivp
sbbl
push
pop
or
shr
clc
jmp
mov
add
mov
mov
xchg
lods
test
cmp
pop
or
dec
aaa
scas
lea
sbb
shrb
dec
repz
fmull
test
in
adc
xor
loope
jno
sar
inc
xchg
out
fsub
pop
add
cmp
cmp
jnp
dec
je
jl
xchg
xchg
xchg
sti
jg
in
sub
sbb
loop
fistpl
shrl
or
and
adc
jae
fisubl
cmp
mov
add
fistpl
in
adc
sbb
cli
cmp
jmp
pushf
add
dec
jg
sbb
mov
mov
gs
rcrb
jb
or
sub
sub
inc
pusha
jge
lret
sub
test
adc
cli
enter
mov
daa
xchg
out
aaa
dec
jne
mov
in
stos
xchg
sub
mov
lret
xchg
adc
stos
sbb
cld
fdivp
sub
push
xor
lret
mov
enter
dec
call
aam
pushf
fistps
je
dec
and
pop
fcmovnu
pop
fbld
xor
mov
je
mov
or
clc
je
cmp
in
and
xor
sbb
mov
lods
push
mov
cmpsl
aam
mov
and
add
xlat
xor
lods
insl
scas
jno
popf
sbb
mov
inc
out
cwtl
shlb
scas
add
pop
pop
xor
cli
push
or
dec
xor
xchg
fmull
cltd
sbb
ret
addl
xor
lock
pop
mov
sbb
jb
jae
ja
outsb
mov
sub
data16
xchg
jo
push
dec
popa
dec
mov
and
add
sbb
add
stos
mov
and
int
cmp
sarl
sub
fsubrl
ret
push
ja
hlt
mov
xor
pop
jae
pop
stos
push
add
mov
ja
cmp
nop
mov
sub
fisubrl
xchg
in
sub
clc
cmp
jne
fwait
pop
out
push
and
and
add
cltd
mov
es
orl
movsl
jg
pusha
repz
xrelease
es
out
inc
clc
nop
hlt
dec
adc
sbb
fidivrs
mov
push
sbb
sub
jl
adc
xor
xor
sub
cmp
cmpb
inc
negl
out
jecxz
test
das
push
or
stos
aas
out
pop
fsubrs
mov
jecxz
pop
paddq
ret
pushf
sahf
mov
push
arpl
repnz
mov
imul
pop
cmp
sbb
sbb
jg
or
adc
orl
cmp
lods
push
and
push
loopne
push
inc
inc
in
adc
pop
cwtl
mov
inc
je
lahf
xor
pop
mov
adc
pop
adc
aam
popa
mov
xchg
sub
dec
sub
jecxz
std
push
xchg
shrl
ret
aas
cmp
jl
shrb
fdivs
inc
dec
inc
cmp
stos
mov
lcall
inc
add
mov
sbb
and
ret
pop
cli
inc
dec
outsb
lea
mov
ljmp
inc
or
cmp
dec
mov
cmc
shl
addr16
xor
lods
jmp
mov
jecxz
sahf
aad
xor
inc
mov
movsl
mov
fnstsw
scas
add
ds
hlt
jnp
aaa
cli
xchg
dec
jp
nop
std
xor
int
out
mov
imul
lcall
inc
jecxz
sbb
arpl
pop
dec
mov
subps
push
sub
mov
lds
inc
push
fldcw
hlt
iret
lock
push
jb
adc
test
mov
fs
mov
cld
jl
pop
push
push
sub
jbe
ss
das
jl
stc
mulb
push
lods
and
inc
and
std
ja
mov
fsubr
lods
loopne
jno
insb
xchg
pop
stos
and
cmpb
cmc
xchg
addb
xchg
shrl
pop
aam
ret
pop
mov
cmpb
mov
cmp
loop
push
xchg
out
dec
mov
xchg
or
xchg
jne
fildll
out
movb
push
pop
jl
jmp
insl
cmpsb
mov
es
dec
imul
xlat
fwait
cmp
cmp
jg
ret
in
sub
adc
fiaddl
pop
ret
jmp
jnp
push
mov
in
outsb
pusha
fidivrl
jle
adc
sub
adcl
repz
lret
sub
cltd
cmp
add
lock
std
lret
xchg
fdivs
jg
cld
add
fstps
push
xlat
sahf
sub
jno
mov
inc
push
das
aad
xor
popa
mov
or
repz
xor
push
sti
inc
icebp
cltd
fwait
inc
lea
imul
mov
mov
pop
decb
xor
jg
dec
sbbb
nop
scas
addr16
fidivrl
cmp
adc
xor
inc
pushf
jne
mov
dec
mov
and
mov
sub
jo
push
cmpsl
xor
pusha
out
ret
scas
cmp
cmpsb
pop
jne
and
jnp
add
or
int
shlb
pop
shlb
jne
jge
test
cmp
xchg
xor
sbb
outsl
xor
cmpsl
or
jge
lea
cmp
out
ret
sbb
add
icebp
aad
jno
roll
xor
lock
pop
inc
aaa
mov
pop
dec
imul
or
push
or
lds
adc
add
xchg
pop
les
jmp
rep
mull
insb
sbb
push
and
decb
aaa
inc
stos
int3
sub
xchg
xchg
and
sub
xor
pusha
jle
cmp
std
pop
loop
test
mov
add
dec
dec
ficoms
fiaddl
bound
in
je
cmc
ret
cs
push
mov
jl
mov
add
nop
add
lods
sbb
fstl
cmp
jbe
mov
lock
fucomip
cmp
cmc
loopne
pop
dec
xchg
inc
movsb
test
mov
push
hlt
call
nop
mov
cmp
scas
insl
invd
and
inc
pop
lcall
add
pop
xor
sahf
sub
xor
mov
mov
outsl
mov
call
add
fistps
int3
test
jg
pushf
pop
fwait
in
rcrl
lods
rcrb
or
imul
jae
jbe
inc
mov
fstl
in
subb
in
mov
or
imul
addb
repz
mov
in
sub
ret
stc
movb
addl
lcall
icebp
adc
push
ss
push
cmp
dec
clc
sub
xchg
mov
cs
es
cmpl
or
cmp
dec
into
inc
sbb
xchg
imul
pop
jmp
mov
mov
sub
dec
data16
and
push
aam
and
mov
jle
mov
sub
mov
mov
fstpt
xchg
cmp
push
sub
loop
and
insl
rcrl
jmp
push
jae
jae
jl
xchg
in
sub
mov
je
mov
es
and
insb
jecxz
in
push
sub
in
xchg
inc
jg
cmpsb
enter
sbb
fucom
mov
pusha
jg
lret
xor
inc
aad
loopne
repz
aad
insl
xchg
adc
cwtl
jmp
or
push
pop
push
les
add
movl
mov
gs
jo
loopne
inc
pop
xchg
sub
fucomip
pop
mov
lds
pop
mov
je
data16
in
dec
or
shlb
std
call
jnp
hlt
dec
loopne
sub
int
cmpsl
icebp
add
or
lods
je
sbb
pushf
nop
cmp
sub
popa
jb
in
mov
inc
out
in
out
sahf
inc
adc
sbb
mov
mov
mov
aaa
ja
adc
imul
mov
push
mov
pop
mov
aad
xchg
mov
popa
lret
xor
jmp
out
inc
dec
rcrb
or
add
and
sub
mov
loope
aaa
sub
xchg
ret
push
mov
push
test
and
xor
mov
cmpsb
pop
dec
dec
adc
mov
adc
mov
lahf
push
into
popf
scas
dec
orl
mov
repnz
or
adc
fsubl
adc
sub
stos
jge
mov
pop
fdivl
push
clc
sub
mov
nop
test
aas
idivl
or
cld
and
or
sbb
push
je
xchg
mov
mov
jge
lods
or
bound
or
stos
add
and
fimull
jl
arpl
and
or
jae
push
cld
mov
rorl
mov
xchg
into
xor
lods
mov
mov
rcr
dec
pop
scas
popf
add
fnstsw
add
mov
dec
icebp
jle
xchg
imul
in
mov
imul
mov
loope
in
int3
sbb
stc
adc
mov
inc
inc
and
xchg
xchg
hlt
mov
dec
sbb
orb
lret
inc
push
dec
es
adc
or
int3
loopne
xchg
ljmp
sub
mov
jb
sub
lcall
lea
stc
fisubl
sti
out
aas
cwtl
mov
mov
mov
push
push
pop
xor
mov
pop
clc
xchg
loopne
or
ret
xor
inc
test
jno
dec
sub
sub
fdivr
test
pop
cmc
xchg
inc
es
cli
dec
stos
orl
ret
xor
aaa
xor
ret
xchg
mov
or
add
gs
gs
scas
xor
jg
enter
xlat
fs
add
add
push
cmc
sbb
hlt
and
cmp
nop
mov
sub
stos
or
dec
shrl
add
in
xchg
popf
ds
add
cltd
xor
loopne
loopne
aaa
mov
mov
andl
push
push
xor
dec
mov
shll
hlt
jns
and
cmp
add
jge
lock
arpl
cmp
shrl
in
daa
xchg
mov
scas
negl
test
stc
pop
cwtl
enter
add
inc
jle
mov
add
hlt
pusha
lods
xchg
push
lret
les
fisttpll
scas
rcr
aaa
jg
inc
shrl
mov
push
leave
int
cmp
pusha
scas
xchg
jns
cltd
cwtl
and
mov
lock
inc
nop
jl
jle
and
pop
mov
out
or
imul
push
in
loop
mov
lods
mov
aam
dec
mov
call
fstp
pop
std
mov
in
mov
lock
icebp
aas
shr
mov
sbb
sbb
js
mov
inc
ljmp
adc
mov
std
aas
and
mov
push
fs
jb
push
xchg
ror
mov
jle
test
and
pop
repz
icebp
xchg
repnz
test
add
fmuls
push
sbb
pop
pop
testl
popf
cmp
cmp
aam
cmp
push
or
testl
fxch
or
xor
inc
mov
ljmp
imul
push
xor
xchg
out
stos
je
ds
or
fmuls
or
dec
dec
xor
dec
mov
pushf
sbb
add
inc
fs
test
sbb
mov
mov
filds
dec
sub
daa
outsb
dec
adc
aas
subb
and
pushw
add
data16
imul
sbb
movsb
and
fstpl
cltd
and
sahf
cmp
ret
jecxz
xchg
mov
cmp
add
lret
mov
push
push
push
sbb
or
adc
sub
dec
inc
fwait
jb
jl
negb
loope
btr
jne
or
call
stos
xchg
mov
clc
enter
jae
pop
es
mov
push
jg
enter
xor
pop
popa
push
addr16
add
lods
sti
aas
push
aaa
or
pop
stos
pushf
cld
inc
dec
jecxz
mov
mov
in
adcb
pop
mov
shrb
xchg
adc
ja
insb
std
insl
cs
mov
push
dec
jnp
jnp
cmpb
push
add
jae
xchg
clc
sbbb
fs
notb
pop
out
js
adc
pushf
imulb
movsb
test
into
int3
jne
inc
xchg
sbb
fs
add
adc
push
sbb
inc
sub
adc
cmp
inc
xlat
ficomps
jp
push
fnstsw
incl
or
inc
lds
and
rcrl
xlat
bound
sub
xchg
push
leave
mov
movsl
fnsave
in
sbb
xlat
daa
push
ficompl
cld
jecxz
outsb
std
out
mov
adc
inc
sub
orl
xor
mov
int
addl
scas
mov
inc
inc
mov
push
rcl
imulb
jo
or
les
jno
mov
ror
adc
in
fwait
dec
arpl
pushl
imul
sahf
xchg
mov
cmp
mov
out
shlb
cmp
lea
push
inc
xchg
mov
or
and
lret
outsl
lods
fucompp
cld
push
mov
dec
mov
xchg
mov
aas
out
push
cmp
cs
lret
or
push
gs
or
mov
ja
mov
std
incb
std
pop
hlt
xchg
idiv
lcall
mov
xchg
dec
mov
ret
add
std
push
push
xchg
sub
cmp
iret
ret
sub
mov
push
push
adc
fldenv
mov
insb
and
push
adc
incl
xor
int
inc
add
and
addl
shrb
out
lret
jmp
cli
fs
repz
insl
cmp
lock
decl
in
testl
data16
leave
dec
mov
stc
ficoml
into
add
jno
icebp
dec
ja
lcall
jb
lahf
lret
pop
outsb
sbb
ret
movsb
fwait
dec
push
add
jg
jnp
or
fs
push
adc
inc
cmp
stos
inc
sbb
ficoml
negl
add
fisubs
pop
cmpsl
sub
jne
lds
int3
clc
scas
bound
push
into
mov
push
push
jl
jno
sub
daa
pop
mov
adc
push
mov
inc
mov
pop
ja
jecxz
das
inc
test
fucomip
or
push
or
fdivrs
lods
jne
lods
push
in
add
inc
out
insb
loopne
mov
inc
subb
sahf
pushl
lret
out
lea
test
inc
inc
push
das
inc
cwtl
mov
ljmp
arpl
out
lahf
cli
xor
in
aas
ds
mov
cli
inc
jp
mov
jle
mov
jo
loope
and
xor
mov
dec
sub
jg
jg
and
shl
xchg
pop
sahf
sbb
xchg
inc
imul
mov
out
sub
sbb
push
inc
sub
in
cli
pop
js
inc
jae
repnz
inc
mov
inc
stos
hlt
scas
insl
cld
leave
inc
jmp
nop
mov
adc
icebp
fiaddl
ljmp
aad
pop
mov
test
inc
rclb
mov
inc
cmp
stc
data16
sub
jbe
cld
adc
cmp
pop
les
js
cmp
inc
ds
and
mov
inc
gs
jmp
push
outsb
push
fs
movsl
push
mov
xchg
inc
inc
jmp
xchg
or
adc
fsubl
push
ss
xor
adc
adc
push
subl
sti
cld
and
fdivrs
les
mov
cld
and
sub
or
mul
mov
outsl
aad
insb
leave
stc
lret
mov
adc
rcll
xor
outsl
iret
fidivs
icebp
pop
sbb
push
mov
pop
cmp
mov
push
pop
out
sbb
push
push
mov
jecxz
adc
and
push
xchg
sub
jecxz
frstor
mov
outsb
lods
in
xchg
add
pop
push
push
mov
jmp
ret
outsl
loopne
jecxz
xor
sub
jnp
out
cmp
cld
inc
sahf
iret
adc
jo
mov
hlt
rorb
mov
addb
pop
or
jo
imul
and
shll
pop
mov
mov
xchg
sub
cs
rcll
enter
push
orl
lea
dec
or
pop
inc
in
push
cltd
imul
xor
add
inc
jnp
mov
mov
dec
lahf
mov
out
imul
push
push
in
pop
add
jge
cmc
in
cmpl
ljmp
xor
ficomps
fmull
iret
mov
imul
ss
jbe
or
add
ret
dec
pop
repnz
or
jns
std
out
mov
insl
loopne
lods
leave
push
in
push
xor
insb
xor
rcl
lea
ds
mov
cmpl
sbb
mov
cli
sti
lock
cltd
sbbl
mov
fcomps
repnz
lods
push
mov
loopne
push
jae
sub
jo
es
mov
sarl
ret
mov
xor
and
sub
mov
or
push
sbb
leave
cmp
mov
jecxz
mov
mov
popf
fldt
test
adc
shlb
pusha
loope
rcrb
sbb
cmp
cmpsb
push
mov
adc
xor
movsl
mov
add
sbb
push
int
mov
mov
popf
fistpll
lods
pop
pop
sub
fs
cmc
push
pop
adc
or
imul
daa
cmc
push
xlat
in
data16
enter
pop
add
sub
or
dec
push
sub
popa
push
es
ret
clc
mov
popf
pop
jbe
sub
subb
push
dec
sbb
add
add
das
cmp
inc
push
jp
add
or
push
or
aad
fwait
inc
test
xchg
int3
xlat
test
aas
cmp
insb
mov
xor
lock
dec
into
lahf
mov
cmpsb
mov
hlt
adc
cld
jle
mov
sbb
sub
sub
lods
outsl
out
push
cmp
push
lret
adc
mov
shll
and
fistps
fwait
movb
xchg
sarl
int
aaa
push
mov
inc
xor
js
outsl
sbb
adc
inc
aas
xchg
aam
mov
outsb
inc
aas
add
out
mov
psubusw
les
pusha
or
mov
pushf
pop
mov
cld
inc
into
testb
icebp
pop
xor
cmp
popf
sub
sub
adc
pushf
jge
pushf
imul
pushf
insl
adc
into
push
ds
nop
fimull
push
shl
dec
mov
lahf
xchg
mov
pop
sub
adc
dec
add
xlat
daa
xor
in
mov
push
mov
mov
xlat
add
mov
int3
jle
pop
dec
fstl
pop
dec
mov
addr16
mov
test
cmp
xchg
mov
jmp
mov
dec
mov
and
jge
pop
xchg
sahf
push
cmp
xchg
shlb
fists
and
pop
dec
cmpsl
and
stos
mov
sbb
iret
pop
cmp
mov
fwait
dec
mov
cmp
sarb
sahf
and
iret
in
dec
xor
pop
mov
sub
addr16
jbe
popa
lods
orb
mov
dec
jno
adc
stos
sub
push
mov
rorl
pusha
mov
aas
xor
push
jecxz
dec
roll
stos
mov
mov
mov
lret
sti
out
cwtl
popa
sbb
adc
cmp
mov
pop
sub
gs
jo
push
sbb
jecxz
lret
pop
push
sub
out
pop
and
cmpsl
scas
xchg
mov
das
stos
mov
jge
sbb
in
cwtl
mov
int3
jns
add
ficomps
mov
ja
mov
js
push
fstpt
insl
andl
mov
in
inc
shl
lods
inc
cmp
lods
stos
test
sub
les
lcall
jns
fs
mov
inc
stos
fnstsw
push
dec
mov
push
adc
mov
mov
out
dec
add
fcmovne
push
sbb
es
push
bound
cmp
lods
xchg
lret
sbb
push
andl
data16
push
push
sahf
push
push
xor
cmp
fdivl
jecxz
rcrb
ds
push
mov
jg
add
push
stos
mov
lods
lock
push
xor
loope
or
cmc
iret
cmp
cmpl
into
fnstenv
divl
pop
mov
mov
sub
jae
andl
nop
adc
cmp
xchg
mov
mov
iret
jns
cs
jg
xchg
clc
and
xchg
fiaddl
repnz
dec
ljmp
pop
dec
xor
test
mov
pop
mov
push
repz
push
push
test
cmc
inc
jnp
pop
imul
mov
cmp
scas
dec
addr16
add
pop
push
or
jmp
inc
ffree
ret
mov
mov
imul
xchg
sub
inc
mov
cmp
jle
adc
rcrb
ret
ja
outsb
mov
outsl
adc
inc
movb
fs
cwtl
and
cltd
fistl
icebp
aam
lahf
add
call
sub
dec
in
or
js
out
pop
mov
mov
inc
xchg
jg
orl
mov
xchg
lods
or
lret
cli
jmp
fidivrs
jns
gs
inc
loop
lcall
or
out
cltd
mov
loope
fdivrl
xchg
sahf
inc
push
mov
jb,pt
not
stos
mov
fstl
sub
or
ret
out
push
or
pop
loop
push
lods
outsb
jmp
pop
xor
xor
shrb
mov
imul
icebp
pop
ror
and
push
scas
cmc
movsb
adc
out
out
jp
jp
hlt
jp
fldl
xchg
jg
repz
push
xchg
movsl
mov
dec
sahf
xor
sub
adc
jo
xor
xchg
mov
ret
mov
sub
push
outsl
clc
mov
xor
add
shr
adc
jmp
daa
xchg
xchg
sub
call
dec
cld
jle
push
stc
mov
and
and
inc
in
nop
jge
pop
pop
test
xor
xchg
int
out
movsb
orb
add
dec
addr16
shll
pusha
jle
push
xchg
iret
lods
lahf
testl
stos
jns
push
fistl
scas
jmp
inc
jo
xchg
jb
popf
jmp
sbbb
push
jbe
inc
out
fadds
mov
mov
inc
lcall
sbb
jo
mov
xor
or
mov
mov
push
stos
fisubrs
push
repz
push
nop
mov
or
inc
push
pop
push
pop
mov
jbe
insl
lea
and
lods
sti
mov
jne
movsl
sbb
int3
xchg
or
aad
js
in
mov
mov
xchg
xchg
inc
sub
movsl
xchg
mov
js
cmp
sub
inc
sbb
and
mov
insb
in
fwait
xor
jge
cltd
pop
pushf
push
or
lcall
ficoms
enter
ljmp
cmp
iret
xchg
push
sub
pushf
inc
sbb
or
mov
cmpsl
scas
loopne
mov
idiv
fidivl
icebp
jns
jecxz
dec
std
xchg
mov
mov
in
shl
cmp
dec
int3
repnz
inc
add
bound
ja
out
cwtl
cwtl
sub
pop
cli
in
push
roll
mov
sbb
sub
repnz
inc
fs
sub
mov
or
rcrb
push
lds
lds
and
stos
aas
mulb
mov
pop
lcall
cmc
popl
xchg
jmp
push
iret
das
sub
pop
fs
cli
out
xchg
fxch
loop
and
loopne
test
cmp
push
lods
xchg
loop
cmp
sbb
ret
xchg
dec
push
jo
andb
repnz
sub
cmp
je
lods
pop
xor
mov
pop
addr16
lcall
fisubrs
jecxz
fcoml
fwait
xor
jl
data16
xlat
mov
ss
push
lahf
sbb
fs
repz
outsb
push
cmpsl
sub
lahf
xchg
lds
sbb
mov
arpl
jg
les
cmp
xor
sbb
lcall
or
mov
add
sbb
mov
push
xchg
popf
leave
andl
sub
mov
push
pop
push
lock
outsl
sbb
repz
stc
loopne
daa
repnz
sti
in
mov
mov
loope
pop
xchg
mov
xor
lods
xchg
mov
jno
xchg
std
push
pop
jmp
std
mov
pop
and
fmul
rorl
mov
call
mov
sbb
adc
cmp
xor
jnp
cltd
adcb
scas
push
lock
mov
mov
adc
jns
rolb
dec
les
pop
ds
mov
mov
andl
xchg
bound
sbb
sbb
add
fildl
jns
push
js
and
addr16
cmp
in
adcl
outsl
in
out
scas
roll
add
inc
int3
pop
push
stos
pop
rcr
and
sub
je
dec
push
adc
pop
inc
mov
pinsrw
call
iret
in
inc
fnstenv
inc
cmp
jno
mov
jnp
mov
frstor
xor
fwait
pop
movsb
js
arpl
mov
mov
add
sbb
fnstenv
gs
xchg
adc
pop
or
loope
popf
xor
push
inc
stc
push
in
lds
jo
mov
lock
dec
sbb
loop
clc
bound
addr16
fimull
leave
js
sbb
pop
fcoml
push
xor
call
lods
fldt
jno
hlt
pop
xlat
insl
dec
add
aaa
mov
shll
in
lahf
push
mov
xchg
je
dec
push
add
push
mov
dec
ja
fnstsw
fcmovbe
adc
xor
and
dec
js
mov
cld
addr16
cli
sbb
ljmp
inc
es
shll
ja,pn
popl
sub
fsts
pop
and
xor
push
adc
fucomip
in
xor
jne
mov
and
push
cmp
cltd
xor
inc
jl
sahf
loope
orl
out
scas
adc
jl
out
push
clc
sbbb
jl
stos
dec
call
sbb
inc
mov
je
mov
fcmovb
bound
and
es
add
ret
mov
leave
out
fwait
rcr
icebp
aad
iret
ret
cmpsl
add
int3
arpl
dec
in
lret
jb
scas
dec
rolb
clc
ja
je
fincstp
or
add
pop
sub
enter
mov
fstp
mov
mov
in
lea
add
push
lret
outsl
andl
mov
xchg
push
dec
sbb
sub
imul
adc
scas
cmp
dec
cmp
out
push
push
lcall
push
pop
popf
inc
loop
stos
mov
icebp
push
fs
xchg
fwait
inc
push
mov
mov
cld
stos
and
or
stos
sbb
xchg
sub
adc
sahf
into
cmpsb
js
cmpsl
fsubs
mov
jnp
ret
sbb
mov
stos
cli
test
adc
sub
dec
gs
shlb
aam
cwtl
fisttpl
jge
mov
jecxz
push
cwtl
jecxz
or
xchg
mov
negl
popa
fildl
pop
inc
sub
fbld
fistpll
sti
sub
cli
cmpsl
jge
jecxz
int
hlt
inc
fs
dec
xchg
outsl
cmpsl
cmp
mov
movsl
xlat
iret
enter
cli
test
test
lcall
jae
rcll
rcrb
push
fnstcw
bound
sbb
in
pushl
movsl
stc
add
imul
xchg
bound
stos
into
jno
fcomps
mov
ret
add
pop
iret
stc
hlt
lods
sarl
cs
pop
clc
inc
and
leave
pop
sub
cltd
ljmp
cmp
sub
pushf
xor
les
maxps
repnz
std
jnp
outsl
pop
push
into
insl
sbb
sbb
xor
jmp
outsl
test
loope
jp
mov
xchg
mov
adc
loop
icebp
dec
adc
push
mov
aas
lods
nop
push
dec
push
dec
sti
and
adc
pop
arpl
popa
loopne
jle
aaa
loop
add
sub
xchg
scas
xchg
push
pop
fmull
loope
or
das
inc
mov
xchg
ljmp
adc
sub
add
add
out
dec
mov
jns
or
xor
jle
pop
fsubrs
imul
jp
out
xor
xchg
mov
inc
ja
and
xchg
clc
fldl
ret
xchg
in
pushf
sbb
popf
in
jmp
and
pop
aam
dec
cmp
sbb
cmp
inc
insb
stos
rcll
xor
add
lret
fs
ja
mov
cmp
rcrb
jae
push
mov
jge
clc
iret
loop
inc
out
xor
jno
or
adc
stos
repz
jle
inc
shrb
fwait
aad
dec
je
xor
loopne
cmp
pop
movsb
out
mov
mov
adc
inc
stos
ds
mov
pop
adc
jecxz
cld
roll
stos
or
andb
les
scas
andb
jge
push
or
stos
cmpsl
into
or
mov
cmc
push
bound
aas
pop
mov
test
iret
jns
xor
mov
ljmp
ja
fsubl
loop
test
xchg
inc
xchg
repz
rcr
nop
cli
jge
fistl
dec
rorb
icebp
cmp
insb
add
adc
test
stos
mov
mov
push
mov
push
fidivs
jle
jo
stos
int
xchg
mov
sbb
enter
sbb
stos
cld
push
sub
sub
push
dec
or
jmp
mov
hlt
jle
es
gs
cmp
sbb
scas
mov
xchg
std
shll
es
jmp
sbb
test
test
out
nop
xchg
in
movsl
jb
test
orb
insb
lods
aaa
inc
dec
sti
mov
insl
fimuls
push
mov
or
push
cmp
aad
xchg
out
push
xchg
jo
fbstp
lret
pop
push
jno
push
aam
jecxz
ds
xacquire
out
xchg
outsl
rolb
call
mov
movsl
loope
xchg
xchg
dec
sbb
cwtl
in
repnz
add
lea
add
mov
daa
sahf
and
out
xlat
or
nop
ja
adc
pop
lea
mov
punpcklbw
daa
test
pop
cli
imul
pop
shl
movsb
mov
xor
adc
pop
nop
mov
sub
das
add
xor
mov
sarl
les
adc
dec
add
mov
xchg
imul
xor
shlb
pop
xchg
neg
popa
xchg
outsl
insb
mov
into
in
int3
dec
mov
cld
in
dec
adc
jp
inc
negl
mov
lret
roll
ret
sti
push
jl
jbe
sar
in
divb
ret
or
mov
divb
jecxz
xchg
cmp
cmp
pop
fimull
out
pop
xchg
jp
lock
sub
adc
icebp
or
adcl
aaa
jg
out
inc
inc
adc
gs
mov
or
cli
sub
mov
fiaddl
negb
inc
sub
loop
xchg
add
and
inc
or
jp
cmpsl
cmpl
adc
xchg
lahf
clc
lahf
dec
mov
pop
jecxz
mov
mov
loope
push
in
pop
inc
mov
push
push
cs
bound
sbb
inc
dec
out
scas
faddl
insb
push
inc
repnz
inc
sub
jl
mov
adc
sbbb
mov
sbb
inc
lret
and
nop
adc
fwait
les
inc
aaa
or
std
pop
outsb
aas
mov
rcrb
xchg
sub
fists
xchg
movsb
mov
popa
test
jp
das
fcompl
je
dec
loope
xor
or
mov
fstl
arpl
sub
aad
push
mov
ds
sbb
std
inc
es
subl
add
and
das
adc
lcall
inc
out
dec
cli
subb
inc
push
sub
clc
jae
add
add
cmp
or
icebp
dec
xor
push
es
lods
jns
test
push
xchg
lods
jecxz
mov
mov
dec
xor
mov
imul
or
mov
pop
pop
lahf
mov
and
rorb
fnstsw
into
cmp
jecxz
jno
or
lds
and
sub
xchg
mov
mov
inc
sbbb
add
adc
adc
cli
sarb
push
add
cmpsb
cmp
iret
out
test
push
hlt
cmp
push
imul
into
push
inc
mov
xchg
ss
lret
mov
sub
push
push
add
cmp
cmp
pop
repz
stos
jg
shl
adcl
pop
aam
sti
xor
jecxz
scas
jo
dec
push
adc
test
stos
loop
jle
lcall
push
icebp
das
lods
mull
xchg
leave
repnz
fsubrs
sub
xor
pop
icebp
push
jecxz
add
rep
imul
xchg
imul
adc
add
push
sbb
push
xor
push
dec
push
mov
mov
cmp
mov
sub
ljmp
out
push
jo
in
outsl
pop
adc
shl
xor
in
add
sti
sbb
dec
and
and
dec
iret
iret
out
int
lods
shl
adc
mov
flds
sub
xchg
ljmp
pop
push
sub
lock
push
adc
push
push
sarb
ja
mull
cmp
push
push
xor
call
leave
jns
repnz
and
mov
add
jle
stos
mov
or
or
jno
mov
repz
imul
pop
out
inc
in
shr
cmp
adc
test
sbb
xchg
cmp
test
popf
mov
push
fmull
or
in
loope
in
gs
enter
sbb
call
or
pop
mov
in
movsb
push
aaa
fiadds
ljmp
xchg
xor
rcll
mov
aam
stos
and
sub
mov
sti
or
lret
mov
bound
or
dec
addl
insl
or
andb
jns
sub
jbe
stos
inc
sub
inc
push
test
jae
negb
jns,pt
mov
dec
aam
adcb
dec
shrl
mov
inc
stos
jg
je
pop
xchg
adc
dec
addr16
xchg
adc
shlb
jmp
mov
repz
lods
movb
fisubs
roll
pop
mov
adc
jl
xlat
cmpl
adc
sbb
data16
mov
mov
sub
sbb
out
adc
push
inc
dec
ja
popf
lods
fcompl
inc
loop
out
cmc
dec
mov
and
loopne
and
daa
out
outsb
inc
pop
xchg
pop
les
lahf
jmp
cltd
fimuls
jge
ret
cmpsl
dec
and
sub
loopne
xor
push
dec
out
mov
pusha
inc
mov
push
dec
cmp
and
fldl
or
mov
sub
xlat
mov
fidivs
or
jge
cli
lds
xor
adc
add
mov
jp
int
sub
test
flds
xchg
sbb
xor
popa
push
add
push
dec
pop
cmp
scas
addr16
das
loope
dec
adc
in
enter
inc
xchg
int
sbb
stos
data16
mov
mov
jg
out
pushf
pusha
scas
outsb
mov
sub
test
sbb
add
inc
mov
xchg
or
outsl
and
inc
cmp
loope
movl
movsb
adc
mov
aad
mov
pop
pusha
in
repz
mov
adc
xor
push
icebp
mov
mov
push
fidivl
pop
rep
out
push
dec
xchg
sub
dec
add
lret
dec
fsub
popf
ds
shl
dec
loop,pn
into
mov
cltd
adc
and
mov
idivb
ds
push
xor
xchg
inc
fwait
adc
daa
adc
pop
mov
jno
push
popf
mov
lret
dec
mov
std
xchg
dec
jno
incl
clc
repz
push
xchg
pop
call
mov
lods
inc
insb
lcall
scas
sub
adc
mov
jo
xchg
movsb
sub
xchg
daa
jae
ret
ljmp
and
dec
fcomi
loopne
sbb
cmpsb
sbb
cmp
pusha
xor
cmp
jns
or
pop
push
mov
inc
adcl
sahf
adc
repz
fsts
je
lea
lods
fbstp
jns
sub
movsb
xchg
xchg
adc
jo
push
cmpsl
mov
mov
out
xor
jecxz
sti
lahf
fcmovnbe
xchg
push
mov
and
popf
les
insb
lea
fwait
jns
add
insl
sbb
or
xor
add
arpl
sbb
xor
sub
outsb
cs
add
inc
orl
sbb
sbb
push
and
fistpl
insb
arpl
jo
out
inc
pusha
lret
xchg
and
pushf
pop
adc
jecxz
mov
data16
fisubs
mov
jne
aad
stc
xchg
and
jns
lods
subl
call
push
xchg
movsl
cmp
loopne
jle
push
lret
mov
bound
adc
loopne
sbb
pop
sbb
pop
and
sahf
jno
sub
sub
add
jbe
mov
jge
xchg
and
outsb
push
sbb
add
xor
rcl
lock
xor
sub
mov
push
call
or
popl
cltd
in
sub
into
cmp
addb
sub
leave
out
sub
cmc
mov
cmc
pop
out
je
pusha
je
pop
sbbb
mov
mov
push
mov
mov
push
ljmp
adcb
cmp
dec
in
cmp
out
gs
or
xor
adcb
pop
cltd
das
xor
push
fisttpl
xchg
and
jae
mov
xchg
movsb
adc
push
aam
sub
enter
ds
dec
jl
sbb
jb
sbb
shll
add
cmp
filds
loopne
push
sbb
in
sbb
ret
sbb
cmp
jmp
test
addb
cltd
push
rcrl
jns
sub
sub
mov
pop
das
out
mov
pop
jne
inc
xor
mov
lret
dec
lods
inc
stos
pusha
or
in
cmp
and
divl
mov
inc
mov
mov
or
adc
out
outsb
inc
and
add
push
xchg
ja
cli
xor
xchg
stos
dec
lcall
dec
ljmp
sbb
xchg
call
pushf
jge
mov
cmc
mov
mov
and
mov
stc
mov
test
xlat
dec
ljmp
sbb
and
mov
add
test
mov
or
or
sti
mov
movsl
bound
mov
mov
mov
test
mov
inc
adcb
rorl
das
push
mov
cmp
xor
adc
xchg
pop
or
inc
and
popl
cmpb
ficomps
cmpsl
pop
into
out
cmc
dec
mull
pop
iret
add
sbb
jnp
daa
pop
flds
xchg
sub
jae
seta
dec
inc
std
in
in
out
xchg
lds
int
push
or
lock
push
mov
ljmp
jns
xor
andl
mov
cmp
bound
jnp
sub
xor
mov
nop
or
int
jb
sbb
xchg
add
push
xor
mov
sub
stos
inc
adcb
or
cmp
gs
inc
pushf
or
iret
addr16
mov
data16
xor
xchg
cmp
mov
push
test
xchg
imull
xchg
mov
jne
mov
int3
lods
dec
mov
jg
sarb
test
aad
test
jb
cmp
mov
lods
cmp
mov
leave
mov
loopne
pop
sti
rorl
jb
inc
lret
cs
and
aad
jp
rorb
mov
mov
fiaddl
cmp
sbb
cmpsb
data16
popa
or
insb
jecxz
sub
xor
mov
test
into
sbb
adc
jno
sub
jmp
push
stos
cltd
pop
into
sub
xorl
test
push
cmp
cmp
inc
inc
jmp
gs
shlb
nop
inc
xchg
out
test
push
adc
out
xchg
cmp
or
cmp
repz
test
sbb
popa
ficomps
xor
jp
lods
inc
add
sub
add
add
xchg
aas
repnz
popf
jmp
sub
stos
jbe,pt
repnz
adc
cmp
pop
push
jg
sub
mov
lds
xchg
adc
lahf
dec
mov
mov
cli
and
rcl
mov
xlat
mov
and
pop
rsm
ret
lret
sti
das
ret
ja
stos
pop
push
aad
cmp
repz
mov
push
in
aad
jb
scas
xchg
mov
fs
lea
and
mov
std
push
andl
jbe
and
mov
or
popf
outsl
xchg
ds
lea
cmp
icebp
jmp
das
mov
mov
xchg
movsb
sbb
out
jge
mov
cmp
mov
call
testb
pushf
xchg
aam
fcmovb
out
test
insl
xor
bound
in
or
xor
xchg
dec
lret
fdivs
pop
je
pop
and
inc
push
ds
dec
addr16
xchg
lcall
xor
jmp
xor
div
and
int3
and
fbld
xchg
jno
dec
sub
fldenv
mov
out
nopl
pop
mov
sbb
mov
insb
outsl
mov
adc
arpl
inc
cmp
and
pushf
pop
rcrb
mov
test
int
cmp
mov
add
pushw
pop
jb
fs
pop
sbb
enter
mov
mov
mov
shlb
or
outsl
inc
or
dec
cmp
and
lcall
mov
pop
or
test
notb
add
xchg
inc
testl
xchg
mov
fisttpll
nop
push
es
cltd
aas
sbb
add
lds
divb
push
rorl
filds
xchg
jmp
or
sub
clc
lret
in
out
pop
jbe
mov
mov
pop
sbb
outsl
cmp
sub
adc
mov
pop
pushf
mov
dec
scas
repz
adc
push
shll
notb
pop
aas
sbb
push
aaa
ja
ss
jns
xchg
and
jbe
popf
fisubs
push
fadds
imul
jb
rorb
push
js
fs
push
lods
rolb
mov
jae
cli
mov
xor
inc
and
push
ljmp
add
rolb
xchg
mov
adc
jo
jae
clc
outsb
push
cwtl
and
pop
out
inc
dec
cwtl
xchg
arpl
fs
xchg
pop
mov
pop
push
dec
and
mull
out
out
out
jbe
pop
mov
adc
repz
mov
xchg
adc
movsb
sbb
xchg
pop
or
fadds
and
nop
int3
icebp
ret
aaa
sub
fcom
dec
loope
pushf
divl
dec
subb
xchg
call
imul
add
lock
fwait
add
les
and
sahf
ljmp
pop
icebp
mov
mulb
loopne
lret
lds
addr16
jne
dec
aaa
push
ret
mov
adc
pop
mov
rorb
mov
jo
jecxz
cmc
pop
inc
sahf
aam
lahf
xchg
mov
cli
sbb
adc
adc
out
lea
and
push
adc
daa
mov
xchg
mov
jo
push
mov
test
xor
in
push
insb
add
jle
add
pusha
pop
in
xchg
cmp
mov
es
and
dec
hlt
aam
outsb
push
into
cmpsl
mov
xchg
js
mul
ret
sbb
add
sbb
xor
loope
rcr
xchg
push
cltd
imul
cmp
mov
jl
pushf
jnp
fs
add
add
add
in
pop
xchg
xor
cmp
xchg
sarb
rcll
push
shll
shrl
cmpsl
dec
jnp
aam
cmp
lds
pop
mov
vaddsubps
fnstcw
xchg
ljmp
jecxz
fisttpll
out
cmp
mov
and
dec
or
sub
loop
mov
aaa
ljmp
adc
cmp
fs
push
dec
movsl
scas
xor
aad
cwtl
cmpl
inc
fidivs
sbb
andl
lds
adc
rorl
mov
movsb
cs
xchg
sub
lret
lods
dec
loopne
ljmp
pop
pop
dec
xor
out
pop
push
adc
stc
mov
pop
pop
mov
mov
or
sub
sbb
jb
xchg
or
je
sub
jecxz
cmp
es
xor
and
rorb
dec
rcrl
pop
call
lods
inc
cmpsl
prefetch
or
inc
xchg
test
pop
adc
lods
mov
pushf
xor
stos
cli
sub
lock
lret
test
scas
or
mov
and
adc
lds
or
pop
stos
push
leave
daa
sub
ret
inc
pop
movb
push
dec
xor
xor
cwtl
mov
cmp
scas
push
mov
inc
mov
mov
xchg
xchg
fwait
or
in
mov
dec
sbb
add
aaa
hlt
mov
ljmp
xchg
leave
dec
mov
and
adc
imul
pop
lcall
push
push
stc
jnp
dec
push
cmp
repz
jecxz
popf
int
cmp
out
hlt
sub
insl
jno
cmpsl
es
mov
mov
imul
jnp
mov
push
push
xchg
xlat
aad
xchg
popf
loopne
dec
add
dec
and
adc
ficoms
dec
xlat
test
and
inc
movsl
lods
cmp
les
jno
push
push
dec
arpl
adc
mov
js
xor
fdivrl
mov
or
mov
int
divb
and
lock
js
push
dec
ds
or
ret
add
lea
push
push
sti
sbb
sti
push
mov
pop
mov
es
fnstsw
mov
pop
loop
add
fdivrs
fcomps
fwait
adc
and
jle
xor
frstor
mov
xchg
push
mov
mov
mov
js
add
mov
cmc
int
enter
bound
repnz
push
or
out
pop
adc
test
into
ja
popa
lods
call
pop
lods
roll
pop
mov
lock
popa
dec
jmp
inc
xor
mov
cli
das
out
cmc
pop
dec
repz
sbb
cmp
pop
lret
repnz
int3
mov
insb
aaa
insl
sub
loopne
ret
stos
test
dec
push
jp
jnp
add
sbb
adc
fcoml
mov
shlb
pop
sbb
shl
push
inc
cmp
dec
fcmovnu
mov
xchg
inc
xchg
jns
iret
and
inc
loopne
or
rorb
dec
adc
inc
test
xchg
popf
rcrb
lret
ret
sub
fidivrl
xor
mov
xchg
mov
mov
cmc
jmp
xchg
shrb
dec
add
hlt
frstor
mov
lods
sub
mov
and
mov
out
inc
js
ja
sbb
inc
xor
cmp
fistl
xchg
cmp
or
bswap
int
inc
mov
xor
sarb
mov
sahf
sbb
leave
ljmp
lods
xorb
orb
and
mov
es
mov
arpl
jne
cli
cmp
cwtl
out
pop
sbb
and
and
jge
jle
nop
xor
adc
mov
xor
fldt
sbb
pushf
mov
xchg
pop
cwtl
mov
fiaddl
insl
rcll
xorl
loop
loop
bnd
cwtl
add
cmc
cmp
aam
push
je
inc
ret
fwait
sub
in
xchg
sbb
or
lea
ljmp
lods
pop
call
cli
jmp
jg
pop
mov
cmp
out
pop
sbb
mov
test
and
xchg
insl
push
cmp
pop
orl
push
jns
aam
lods
xor
dec
lret
mov
movsl
lea
pushf
xor
adcl
mov
xor
jb
cmp
lods
inc
mov
test
dec
mov
insb
xchg
mov
push
or
fdiv
lods
cmpsl
aaa
sahf
adc
sahf
mov
fldlg2
pop
dec
in
nop
je
pop
cmpsl
dec
cmp
adc
arpl
insl
into
adc
lret
push
push
aaa
fidivrs
xorb
xchg
imul
jnp
sub
faddp
mov
shll
or
loopne
inc
sub
std
mov
shlb
inc
out
lods
pop
jecxz
and
fpatan
and
mull
jge
and
cmpsl
out
fdivs
outsl
lret
in
rcr
outsb
mov
xchg
mov
pushf
inc
jmp
jb
jo
dec
xchg
jp
mov
dec
xchg
rclb
scas
sbbl
std
bound
cld
stc
mov
mov
inc
fcompl
shrl
sbb
dec
xor
mov
sub
pop
adc
inc
das
dec
jecxz
jle
pushf
lret
stc
fstl
and
dec
cs
ret
out
jno
push
mov
mov
xchg
in
and
stos
or
push
cli
xlat
aam
stc
push
push
jne
inc
psraw
mull
daa
addr16
cld
jl
jbe
and
jo
iret
insl
subb
addl
mov
and
ret
fcomps
outsb
cmpsl
popf
cmp
and
imul
aad
xor
rcl
inc
ja
arpl
mov
inc
leave
sbb
mov
fidivrs
js
push
cmc
inc
mov
addl
gs
dec
data16
andl
std
xchg
nop
enter
xchg
loop
loope
jg
jp
stos
or
xlat
sbb
ja
scas
aas
scas
out
jmp
sub
push
fisubrl
repz
push
inc
pop
shlb
push
rep
adc
lock
jp
push
add
test
push
xchg
inc
push
scas
popf
mov
jns
ljmp
push
shll
rcr
pop
jp
push
stos
idiv
inc
mov
out
pop
push
fadd
cmp
pop
pop
jne
push
ljmp
rol
pop
mov
cmp
or
mov
mov
xchg
aad
sub
inc
xchg
lea
rcrl
sar
sahf
jne
movsl
flds
ds
test
sub
push
xor
mov
sar
or
and
orb
arpl
cmc
ret
adc
mov
push
divl
sbbl
int3
pop
pop
fisttpll
mov
bound
push
mov
mov
movsl
cmp
orb
dec
insb
lea
fsubl
insl
iret
cmp
out
xor
adc
xor
push
int
and
push
jbe
lock
ud0
fst
loopne
inc
adc
clc
jle
jmp
mov
lods
xchg
xchg
inc
jmp
mov
jbe
fwait
adc
fldenv
jne
xlat
and
inc
in
movsb
sub
testb
add
js
pop
movsb
push
fists
imul
movsb
inc
add
jo
xor
push
divl
out
pop
pop
add
or
adc
leave
aad
fldcw
mov
jge
pusha
cli
add
leave
xchg
xor
cmp
mov
out
add
cmp
inc
fs
rcpps
or
dec
mulb
jp
xor
lcall
mov
mov
push
fcomps
xchg
rclb
clc
mov
xchg
push
push
stos
xchg
jl
out
jl
cmp
mull
dec
test
data16
cltd
aas
out
push
fidivrl
jg
sub
inc
jp
fsts
xor
pushf
fcomi
inc
popf
push
jge
and
dec
push
ja
push
add
hlt
mov
fstpl
loop
repnz
mov
mov
imul
mov
xchg
imul
fcomp
inc
lods
dec
jae
daa
mov
ret
popf
adc
or
imul
jbe
dec
scas
andps
push
hlt
inc
xchg
inc
inc
xchg
or
test
fists
out
sub
bound
sbb
inc
dec
fwait
jmp
push
jp
and
fisubl
out
and
aad
es
and
fdivp
jecxz
out
ret
lds
mov
or
push
lahf
pop
adc
ret
push
cmp
cs
xor
out
mov
mov
aad
cmc
movsb
jg
sub
fcomps
mov
mov
scas
xchg
out
add
pop
mov
cli
stos
xchg
test
stos
mov
push
mov
dec
lahf
mov
add
xchg
fildl
add
fiaddl
push
inc
test
push
add
fs
or
fstpl
lahf
xor
add
insb
sbb
daa
push
arpl
sbb
mov
mov
push
lods
shll
add
lods
aaa
imulb
sbb
mov
jle
adc
das
inc
imul
lahf
pop
mov
mov
mov
insb
aas
sub
ret
addr16
inc
xlat
xor
dec
sbb
jae
pushf
inc
pop
mov
sbb
xor
sbb
mov
dec
sub
pop
scas
bound
cmp
sub
ljmp
xor
je
adc
xorb
sub
test
lds
or
movsb
movb
fadd
jp
and
dec
push
scas
lods
cli
fidivrl
sub
insb
inc
addr16
xor
jecxz
mov
push
sub
das
bound
and
xor
adc
push
or
sarb
push
jecxz
test
adc
loope
outsl
fwait
xor
push
scas
push
test
adc
push
and
sub
mov
jmp
adc
stos
in
aam
or
mov
cmpsl
in
push
mov
jne
ret
push
jl
pop
ja
mov
aaa
insl
sbb
push
std
cwtl
adc
pop
sarl
and
in
mov
jl
sub
inc
out
or
lods
mov
gs
insb
mov
add
jbe
pop
and
gs
jne
mov
dec
xchg
adc
and
dec
or
in
or
dec
mov
sarl
fmulp
push
in
jno
mov
aad
push
cmp
aaa
xchg
mov
or
add
fldcw
jecxz
dec
out
cli
mov
mov
fxch
mov
inc
pop
cmpsb
fisubrl
mov
movsb
movsl
mov
fisttps
lds
int3
jno
jnp
jg
in
inc
mov
pop
or
int3
cli
mov
mov
push
outsb
pop
mov
les
or
xchg
fidivs
cs
lret
xor
jnp
or
xchg
movsl
gs
es
xor
lods
lret
roll
popl
ret
nop
add
jg
mov
xchg
lods
jecxz
xor
test
mov
jle
sbb
adcb
add
and
rcr
mov
jnp
rclb
xchg
push
fs
xor
xor
ret
pop
subl
in
leave
sub
mov
ficoms
xor
dec
ret
and
push
addr16
mov
repnz
arpl
dec
loopne
adc
pop
je
rolb
dec
or
loop
pusha
cmovae
shrb
cmpsl
sub
cmp
fiaddl
mov
mov
vaddsubps
jle
test
les
das
mov
push
dec
stos
shl
mov
fdivl
out
sarb
ror
mov
sbb
out
jnp
out
aas
mov
lds
stos
stos
dec
mov
pop
aas
mov
test
add
bound
and
xor
xlat
in
cld
mov
xchg
or
fsubrs
aam
xchg
lcall
xchg
popf
lods
fcmove
popa
add
popf
cmp
cltd
jne
pop
stos
jl
pop
push
icebp
jmp
int
pop
repz
fsubrl
mov
pop
inc
mov
mov
ret
cmpsb
push
dec
mov
xchg
lea
jno
iret
xor
add
cmpsb
adc
adc
cmp
xchg
loopne
push
fwait
out
push
push
cli
mov
sub
sbb
repz
cmp
rorl
xor
or
rolb
xor
jno
dec
push
or
loop
aaa
jmp
mov
or
fmull
repnz
add
insb
or
adcl
in
jmp
inc
out
mov
int3
lret
jl
pop
dec
sub
subl
fwait
push
sub
push
mov
jmp
ficompl
pop
jge
lods
adc
jae
adc
push
dec
and
dec
push
adc
sbb
ds
cli
pmaddwd
loop
xchg
push
cwtl
test
inc
jno
test
mov
mov
push
mov
imul
sti
lock
jno
mov
sbb
ds
adc
cmpsb
xchg
js
add
and
aas
mov
and
fyl2x
jmp
mov
mov
dec
pop
faddl
stos
sbb
and
xor
popa
imul
or
cs
imul
mov
outsb
leave
int
mov
jb
mov
js
jl
out
mov
pop
pop
xor
fcmovb
lret
int3
sahf
xchg
inc
in
scas
subb
sbb
inc
fcmovnbe
dec
cwtl
pop
sbb
add
add
mov
test
pop
js
cmp
aam
mov
mov
jle
ljmp
int
push
xchg
loopne
push
cltd
mov
mov
ja
mov
or
mov
adc
cltd
sub
popf
mov
sbb
pop
dec
popa
inc
push
mov
push
jne
add
stc
xchg
out
mov
loopne
mov
mov
mov
dec
jle
sar
inc
in
mov
and
jns
popa
xchg
jbe
add
cli
inc
jmp
stos
inc
xlat
pop
incl
stos
mov
cmpsl
xor
and
nop
push
mov
xor
inc
xchg
xchg
mov
mov
mov
sarl
cmp
int
mov
inc
int
daa
lods
lea
into
out
je
adcb
dec
mov
push
das
sbb
pop
imul
clts
cmp
popa
sbb
int
xor
adc
ret
movsb
das
scas
xchg
in
xchg
pop
push
cli
sbb
jns
xor
scas
insb
or
clc
out
int3
in
cwtl
out
aad
jnp
or
cmc
xchg
arpl
push
fdiv
pop
shlb
adc
shrb
or
sub
pop
shll
xchg
inc
mov
lds
dec
dec
dec
push
mov
cmp
jmp
and
push
in
inc
in
movb
fldcw
enter
andl
repz
les
jnp
mov
and
leave
int
xchg
sub
sub
push
cmp
cmp
push
inc
adc
iret
ret
sub
and
es
pop
xor
aam
inc
inc
mov
stos
mov
cmc
andb
add
enter
mov
fdivrs
adc
out
fcoml
or
xchg
push
idiv
cmc
cltd
lret
test
mov
and
incl
mov
sahf
or
sub
push
lea
gs
sub
jne
lods
iret
add
aad
and
andl
jno
inc
sbb
ret
push
fsub
pusha
arpl
mov
inc
cmc
xor
loopne
inc
push
data16
data16
aad
pushf
jle
js
scas
mov
test
cmp
inc
adc
push
sar
sub
jae
xchg
mov
mov
add
inc
lahf
push
adc
jge
test
cwtl
jmp
sbb
pop
arpl
add
adc
dec
adc
adc
ds
test
lret
hlt
cmp
mov
cmpsl
mov
or
repnz
mov
das
inc
jb
cmp
add
test
pop
lods
int3
pop
movsl
scas
dec
and
dec
push
pop
push
call
test
or
fnstcw
or
xor
iret
mov
fs
fidivl
xor
subl
mov
lcall
lods
mov
jo
push
ds
rcr
sbb
jge
push
pop
cmpsb
sti
mov
notb
ds
rcrb
jne
push
mov
mov
je
mov
mov
pop
mov
add
mov
rcrb
clc
push
hlt
sbbb
push
push
js
push
xor
mov
ret
sbb
add
lret
iret
inc
cld
ja
scas
lahf
call
dec
xor
insl
repnz
popa
cmp
mov
inc
sub
and
sbb
pusha
xchg
xchg
adc
scas
xchg
test
mov
inc
sbb
cmpsl
dec
push
jmp
jns
ss
and
lret
mov
add
icebp
enter
out
out
cmp
push
ret
in
sbb
pop
jecxz
aas
lock
add
or
mov
cmp
adc
mov
je
inc
aas
mov
mov
mov
push
lret
imul
jmp
je
cli
scas
fwait
jecxz
inc
loopne
js
aad
ret
or
int3
xorb
imul
addb
push
loop
test
loopne
data16
mov
pushf
jne
loopne
addb
xlat
and
lds
pop
mov
ret
cmpl
xor
mov
adc
aas
stc
cld
push
sti
ret
inc
inc
xchg
out
testl
push
sbb
xor
je
lds
lahf
mov
shll
push
sbb
cmp
aam
data16
pop
imul
gs
cwtl
dec
cmpsb
fsubs
xor
out
xorl
fs
sub
cltd
addl
mov
pop
mov
pop
out
sub
mov
shr
sahf
rcrl
cmc
jmp
lret
repnz
test
xchg
or
pop
lret
stos
jo
repnz
mov
push
adc
cltd
adc
mov
jg
and
add
sub
rol
stos
and
cmp
mov
in
dec
add
dec
push
arpl
icebp
pop
xor
inc
mov
test
xchg
arpl
popf
mov
rorb
lahf
add
adc
mov
loop
das
aad
cli
mov
xchg
jp
cmp
insb
bound
jb
xchg
xchg
ds
jbe
xchg
cmp
nop
bound
mov
lods
mov
shr
out
dec
mov
dec
popa
pop
mov
in
out
fwait
and
xlat
push
dec
mov
popf
es
sbb
mov
outsl
test
movsb
sub
dec
iret
mov
pop
mov
mov
sub
or
dec
push
divl
pop
daa
mov
mov
mov
scas
pusha
add
push
ja
pop
mov
and
jmp
cmpsb
loope
nop
xchg
imul
mov
sbb
mov
xor
shr
cmpsl
pop
in
inc
insb
sub
call
jl
push
fnsave
sbb
cmp
lods
xchg
ljmp
xchg
pop
es
fcomps
lahf
pop
jmp
lods
and
je
inc
jns
aad
inc
mov
cmp
adc
mov
cmp
imul
sub
shlb
jno
lock
lods
repz
xor
sub
imul
movsb
in
add
mov
push
pop
or
gs
call
jecxz
dec
test
jp
mov
cwtl
xchg
jp
inc
add
andb
cmp
lods
pop
mov
xor
cmp
cmp
test
repz
sahf
pop
adc
mov
scas
push
lock
xor
xor
mov
push
jne
inc
into
jb
lahf
ljmp
jae
and
in
sti
cld
fimuls
fidivl
int3
fisttps
or
jmp
jle
ja
xchg
jnp
sbb
lcall
or
addl
cmp
xchg
rclb
sbb
jae
cmp
mov
mov
pop
xchg
in
pop
cmpsb
fcmovu
out
dec
mov
jmp
xchg
xchg
xchg
lock
cmp
shrl
xchg
fsubrl
cmp
mov
mov
les
jae
cs
lods
in
push
or
sbb
cltd
mov
mov
dec
xor
pusha
cwtl
aad
cmp
jnp
je
cmp
xchg
xchg
shl
shll
sahf
mov
and
push
sub
sbb
mov
push
sahf
jae
pushf
and
xchg
leave
push
idivb
mov
jmp
movsb
shrb
cmp
dec
pop
dec
faddp
fs
or
sub
int3
mov
add
mov
aas
add
negb
jge
repz
mov
push
inc
in
push
pusha
daa
sbb
inc
dec
dec
and
outsb
or
daa
inc
cmpsb
xchg
inc
stc
and
lcall
in
jbe
jne
pop
and
fimuls
and
xchg
cmp
fwait
jnp
fnstenv
sbb
xor
dec
ret
mov
movsl
mov
cmc
arpl
xchg
stc
dec
push
sub
insb
out
pop
mov
fsubl
jle
push
mov
sbb
cmpsl
jnp
mov
and
nop
iret
xlat
mov
jge
rcll
scas
cmp
pusha
xchg
inc
mov
mov
jne
cli
pusha
out
add
mov
xor
jns
and
sub
sbb
pop
dec
dec
bound
push
adc
dec
test
arpl
imul
dec
incl
les
shrl
mov
adc
and
or
cmp
mov
rclb
stos
pop
mov
gs
push
mov
fisubrs
push
and
sahf
mov
pop
add
jb
out
push
lret
pop
sbbb
push
xor
jne
mov
cmp
test
fdiv
push
sbb
dec
shr
xor
mov
pop
push
inc
leave
lcall
pop
adc
scas
add
cmp
fsubrp
adc
mov
shr
nop
int3
or
sahf
xor
in
xor
sbb
daa
insl
fidivl
cs
cli
pop
lret
mov
bound
sar
aas
xchg
mov
mov
test
adc
out
rcl
loopne
test
sti
dec
xchg
cld
lahf
or
adc
pcmpeqb
ret
jg
pop
stos
jbe
push
mov
mov
mov
sbb
aad
ja
adc
imul
xchg
push
jecxz
sbb
pop
mov
inc
cwtl
push
rcrb
subl
outsl
cmp
inc
fwait
dec
movsl
xor
data16
pop
xchg
mov
fsubrs
push
cmp
aaa
ja
inc
pop
add
cmp
mov
pusha
lock
push
push
cld
cli
dec
icebp
inc
mov
xchg
loope
data16
and
test
lock
insb
dec
orb
fs
or
add
sbb
lcall
jae
mov
movsb
outsb
jl
push
inc
iret
repz
test
mov
pop
add
add
fisubrs
scas
cmp
jl
mov
daa
es
ljmp
das
mov
mov
push
je
xchg
and
int3
push
dec
fdivrs
std
jmp
mov
inc
ja
sbb
cmp
test
push
loop
push
and
popa
xor
pop
enter
inc
adc
dec
pusha
add
outsl
push
divl
pop
in
and
movsb
in
add
lret
bound
dec
sub
push
inc
or
xor
pop
push
gs
push
or
jnp
enter
fwait
mov
or
push
cmp
sbb
add
pop
mov
sub
cli
imul
xchg
test
int3
inc
mov
orl
lods
inc
adc
mov
mov
shrb
rcl
adc
js
insl
dec
jne
cmp
push
mov
lods
je
aad
xor
bound
out
or
dec
ret
pop
mov
mov
mov
fldpi
rcrb
fsts
hlt
stos
mov
cli
or
loop
pop
mov
and
cmp
rcl
sbb
dec
divb
aam
pop
rcrl
lret
cmp
sbb
leave
push
push
lcall
xor
jne
push
rcl
sub
xchg
add
repnz
mov
cmp
or
lea
or
shlb
loopne
mov
cmp
xor
fstpt
jns
loop
mov
and
mov
push
test
sbb
mov
inc
pop
jecxz
pop
ljmp
aam
and
lods
or
push
test
and
repz
inc
out
shlb
ficoml
ds
xchg
cmp
bound
xchg
popf
aad
mov
sub
push
pusha
cli
xor
sbb
in
xchg
mov
mov
in
lock
xor
pusha
or
sarb
int3
test
cmpb
pop
popa
dec
and
sahf
and
cmpsb
js
test
rol
adc
and
pushf
cmp
addr16
pop
movsl
xchg
pop
cld
lods
push
mov
jnp
push
mov
jmp
mov
push
sbb
push
repnz
mov
xlat
rorl
scas
jne
dec
pop
in
stos
ljmp
jo
lock
subl
fdivr
jecxz
pusha
sub
mov
add
and
clc
or
repnz
rclb
jp
mov
jae
inc
xchg
leave
jb
jns
and
and
adc
mov
dec
xchg
cmp
aas
jecxz
icebp
xchg
fdivl
rcl
pop
cld
and
dec
popa
and
imull
push
addb
jns
aam
and
insl
out
outsl
xlat
pushf
pop
push
inc
dec
pop
sub
add
push
cwtl
mov
cltd
std
test
out
shlb
mov
xor
notb
ficoms
and
aas
scas
jmp
add
addr16
divl
and
push
mov
pop
cld
pop
fnstcw
jecxz
sub
lods
scas
sbb
scas
jbe
fmull
dec
lods
lret
mov
test
xor
out
jle
pop
pushf
lds
arpl
jo
filds
jecxz
cld
sbb
mov
bound
and
repz
stos
jle
test
mov
mov
mov
movsb
push
xchg
push
stos
orb
pop
mov
es
aam
xchg
push
outsb
xor
adc
xchg
push
xchg
mov
outsb
sub
icebp
pop
sub
pop
xchg
adc
jl
fsubs
xchg
lcall
iret
mov
cmp
addr16
cmp
test
inc
fdivr
adc
les
or
wrmsr
mov
jl
repnz
pop
mov
pop
aam
and
xchg
or
aam
and
pop
inc
jb
cmp
mov
loopne
xlat
adc
imul
push
aad
pop
pop
xor
fimull
leave
shrb
jg
cmp
add
cmp
jne
mov
mov
mov
jecxz
sub
sarl
fwait
sub
in
icebp
dec
int3
mov
loopne
hlt
call
lods
in
and
jecxz
fcomp
or
add
lret
ret
dec
mov
mov
in
or
js
jl
insb
sbb
scas
test
xor
adc
cmp
out
test
pop
in
and
testb
in
pop
mov
fwait
xchg
cwtl
pop
filds
mov
mov
adc
push
adc
or
mov
out
lods
shlb
xchg
pop
fidivl
mov
daa
shlb
mov
cmp
sarl
xor
jle
mov
jle
imul
pop
jnp
cmp
push
or
call
leave
mov
mov
pop
test
mov
sub
lret
xchg
push
jl
pop
test
lret
xchg
add
es
negl
push
adc
inc
jmp
add
sti
sbb
jecxz
int
lcall
cmpsl
mov
add
cli
xchg
out
xchg
mov
xor
cld
iret
or
sbb
fsubl
xor
inc
push
xor
clc
out
in
movsb
aaa
adc
cmp
or
or
mov
adc
adc
addb
xor
xchg
adc
or
add
scas
jecxz
xor
mov
jge
stos
in
negl
xchg
test
bnd
inc
mov
push
cmp
push
dec
mov
sub
inc
push
push
jbe
xlat
push
loopne
xchg
push
outsl
out
fwait
cmp
inc
in
or
mov
shlb
pop
xor
popf
and
jne
xlat
dec
inc
cmp
and
sub
adc
jmp
mov
int3
cwtl
ja
inc
and
xchg
jae
xchg
jno
mov
sbbb
push
stos
sahf
dec
sub
hlt
mov
cmp
lcall
pop
addl
mov
iret
pop
adc
rcll
xchg
lds
add
mov
call
movsb
jg
lock
and
lahf
addb
dec
popf
in
push
sub
je
pop
scas
and
cltd
mov
dec
pop
insl
addr16
jae
call
dec
mov
scas
notb
push
iret
pusha
xchg
jmp
pop
les
pop
push
jb
mov
js
lock
sbbl
mov
es
dec
sar
hlt
mov
cmp
jmp
cmc
testl
jp
je
hlt
or
sub
movsl
scas
scas
std
mov
or
sbb
stos
adc
fnstcw
pop
mov
dec
enter
cmp
lcall
sbb
in
mov
ret
addl
sarb
mov
push
sub
inc
mov
decl
xchg
ss
mov
sub
mov
aad
or
push
add
push
mov
movsl
sbbb
xlat
and
ret
xchg
loope
cmp
sbb
jle
out
pop
movsb
mov
push
xor
hlt
add
insl
cmc
ret
push
dec
outsl
mov
push
sti
cmpsl
mov
ja
insl
cmpsb
lea
dec
jecxz
repnz
sbb
or
pop
icebp
in
xor
push
xlat
and
adc
jbe
jmp
and
cmp
out
mov
xor
push
int3
lret
stc
and
add
xor
lock
icebp
push
lea
leave
ret
push
jb
in
or
xchg
jo
mov
or
out
js
fnstcw
lods
dec
call
fnstenv
lret
fmulp
mov
lods
xchg
rorb
xor
and
lcall
imul
pop
insl
add
je
loop
cmp
jmp
out
lods
fs
loopne
out
stos
loope
in
sahf
sub
xchg
lods
negl
pop
das
fildl
into
inc
or
in
push
or
ror
xor
stc
rcrl
push
and
mov
fstpt
pop
add
jb
mov
sub
push
jo
xchg
ja
push
adc
or
aam
aam
out
arpl
or
jg
nop
inc
mov
mov
jae,pt
leave
mov
stc
add
mov
daa
cmp
sub
stos
sbb
mov
shrb
or
imul
inc
sahf
jbe
mov
daa
mov
or
mov
iret
cmc
test
and
hlt
mov
sar
sub
jg
mov
cli
sub
pop
xlat
dec
lods
adc
sbb
mov
lods
adc
lds
into
push
adc
mov
dec
pop
add
inc
sub
repz
andb
inc
stc
mov
jmp
outsl
mov
lahf
test
or
data16
aaa
daa
adc
subb
xchg
jmp
xchg
mov
out
xlat
xor
icebp
xlat
outsl
inc
cmc
sbb
aaa
mov
xchg
arpl
test
jae
enter
ja
jle
cmp
adc
enter
xchg
imull
and
aaa
cmp
inc
subb
fnstcw
inc
sub
xor
rorl
imul
or
out
xchg
insl
xchg
imul
mov
dec
xchg
pop
push
add
shlb
and
jmp
sub
les
sbb
pop
mov
mov
or
aam
cs
insl
xchg
enter
test
dec
cld
inc
jae
adc
xchg
dec
sbb
lret
andb
sub
cmp
push
imul
mov
xor
scas
shrl
inc
jecxz
add
dec
movsb
inc
jp
mov
xor
cmp
push
in
jmp
or
cmpsb
inc
mov
addr16
pop
mov
push
mov
cmp
aad
fwait
ja
loop
adc
insl
out
pusha
std
jecxz
sbb
ja
js
push
js
stc
ja
inc
std
mov
imul
pop
lret
rcll
mov
fldl
lret
roll
sbb
sbb
out
std
mov
ret
mov
pop
adc
xor
fwait
push
mov
and
and
prefetcht2
dec
xor
adc
inc
scas
cmpsb
aaa
xchg
adc
loop
addr16
or
repz
mov
jle
xchg
sub
pop
imul
ja
lds
aaa
int3
js
shll
in
arpl
mov
std
sbb
jb
test
jl
pop
sahf
jb
mov
pop
hlt
push
and
call
inc
rcr
and
cmp
jp
pop
jb
push
idivl
mov
xchg
push
ljmp
xor
jo
mov
sbb
mov
fwait
movsl
mov
hlt
dec
inc
lock
clc
cltd
mov
cmpsb
jle
test
mov
cmp
lret
gs
mov
lods
jmp
push
inc
or
pop
data16
and
movsl
test
call
dec
add
sub
or
adc
das
mov
je
sbb
push
mov
insb
clc
add
xor
mov
cmp
dec
fsubr
inc
xor
mov
jno
lods
repnz
test
loope
jae
inc
sbbb
repnz
pop
jnp
into
popl
mov
fmuls
out
stos
xor
popa
shl
repz
out
sub
mov
mov
jle
inc
adcl
cmp
jnp
dec
daa
cwtl
pushf
dec
arpl
xor
daa
or
je
mov
mov
mov
ret
outsb
std
inc
pop
adc
lds
lock
fstpl
push
std
add
mov
mov
or
cltd
arpl
jnp
outsl
cmpsl
pushf
xor
jno
loop
xchg
out
dec
xchg
mov
out
xchg
add
outsl
daa
mov
les
mov
ffreep
aad
cmp
aas
sub
adc
dec
icebp
inc
pusha
jmp
cmp
sbb
and
sub
adc
andl
outsl
sbb
mov
mov
jp
pop
mov
repz
negb
scas
mov
lea
inc
insl
sub
outsl
jnp
lret
subb
jl
mov
xor
sub
push
aas
cli
aam
jbe
jmp
aad
lret
xchg
xor
ret
xor
adc
rcl
aad
add
sar
adc
rcl
pusha
out
data16
push
dec
mov
adc
sub
setb
sub
imul
stc
xor
dec
mov
lods
pushf
fstp
xchg
mov
xlat
cmpsl
das
sub
arpl
mov
xchg
sahf
int
sub
mov
pop
mov
cwtl
jmp
enter
jo
mov
lods
push
xchg
imul
xchg
lea
add
test
add
mov
shlb
icebp
arpl
test
or
add
mov
mov
loope
adc
xor
xchg
enter
iret
sub
or
inc
in
push
loopne
adc
mov
mov
add
mov
cmpsb
or
icebp
loop
pop
stos
shl
dec
inc
cmp
pop
pop
dec
int
in
jge
sti
scas
or
cmp
mov
sub
push
sub
aam
xchg
inc
ljmp
push
xlat
fisubl
les
mov
inc
push
pop
sub
ljmp
hlt
idivb
push
loop
gs
push
push
dec
and
sub
scas
push
pop
jle
mov
imul
mov
dec
es
lcallw
push
lret
push
dec
test
mov
sbb
lea
cmp
add
fstps
sar
fildll
mov
dec
adc
fcompl
fstp
mov
data16
mov
cmpsb
addl
hlt
pop
push
mov
inc
mov
gs
mov
imul
into
out
push
decb
enter
mov
pop
jl
mov
inc
pop
jmp
dec
mov
add
stos
lret
mov
test
jl
and
stos
adc
in
int
mov
call
xchg
hlt
mov
push
sar
fwait
scas
out
shrl
and
adc
mov
and
hlt
fiadds
jmp
fsubrl
mov
mov
fcoms
lcall
stos
lret
xlat
popf
imul
push
jl
arpl
jns
lahf
xor
cmp
iret
test
mov
and
jmp
das
insl
imul
ret
jae
aad
sub
mov
or
and
inc
lods
mov
sbb
popa
movsl
ljmp
add
mov
inc
sarl
sbb
sbb
out
fcmovu
les
inc
roll
mov
sub
in
or
into
add
stc
ret
push
xchg
mov
inc
cmp
jecxz
int3
shrl
lods
xchg
mov
insl
mov
fs
out
cld
mov
push
and
or
cmp
mov
xorl
call
jp
mov
invd
ficoml
mov
mov
and
in
aam
icebp
mov
cmp
lock
lock
pusha
pop
mov
inc
jp
add
cmpsb
mov
stc
dec
out
icebp
imul
mov
jp
cmp
mov
xchg
mov
add
mov
pop
push
out
push
inc
cmp
sbb
sub
hlt
or
or
cmp
mov
xor
lock
std
pop
xchg
jno
out
pop
cli
ret
loop
scas
xchg
dec
fdivl
stc
mov
sub
cld
lock
pop
daa
inc
popa
pushf
jo
fidivrs
jg
adc
xor
leave
sub
iret
pop
lds
cld
ficompl
addr16
icebp
push
and
add
enter
loopne
jb
mov
or
xor
insl
rcrl
mov
and
imul
movsb
push
leave
cmp
or
sti
sub
cmpsl
xchg
mov
iret
and
in
mov
pop
loop
and
adc
out
seto
out
xor
shrl
sbb
cmp
fcom
push
inc
xchg
sub
in
push
outsb
shl
aam
shlb
orb
jno
cmp
imul
stc
cmp
sbbb
lcall
shll
in
jge
ljmp
in
out
stc
mov
lret
insb
inc
dec
pop
mov
jo
pop
addr16
cmp
cmpsl
fsubs
push
mov
clc
cli
adc
and
mov
jmp
cmpsl
cmp
xchg
arpl
inc
pop
sub
push
ret
adc
pop
inc
sbb
movsl
push
int
sub
pop
mov
cmp
ss
fwait
adc
out
lds
jecxz
adc
repnz
push
xor
imul
lods
lods
movsb
std
outsl
xor
xchg
push
cmp
repnz
jnp
add
stc
xchg
mov
insl
and
or
outsb
jnp
mov
mov
inc
sub
std
rclb
push
cmc
push
and
lock
push
mov
ss
jb
xorb
sub
clc
lcall
jnp
xchg
insb
inc
dec
adc
xor
push
popa
sti
cltd
adc
hlt
pop
inc
dec
xchg
orl
adc
add
adc
sti
mov
mov
call
aam
lods
lcall
out
lock
mov
pop
cmp
sbb
mov
cs
maskmovq
idivl
ss
dec
fwait
mov
mov
es
xor
sbb
es
xor
fcoms
sub
and
insb
nop
xor
hlt
adc
jge
loop
cmpsb
iret
ret
pop
fnsave
cs
call
xchg
xor
out
fwait
ds
test
mov
jle
inc
sbb
push
pusha
pop
ja
adc
cmpsb
jmp
movsl
js
ss
imul
xchg
mov
addr16
insl
xor
xchg
dec
in
or
stos
jb
test
cmc
inc
divl
daa
inc
mov
gs
rclb
xchg
fs
enter
mov
jg
int
pop
push
sub
mov
sbb
insb
mov
loopne
loope
cmp
and
ds
test
xchg
lock
addl
pop
mov
gs
shl
mov
ljmp
and
test
push
int3
pop
jp
and
les
stc
test
xchg
ficomps
lea
fdivl
cltd
jmp
pop
aaa
add
cmp
fnstsw
jl
mov
add
and
insl
xor
in
or
shl
or
mov
gs
jg
push
sarl
std
fstp
shlb
shll
push
mov
xor
add
add
pop
pop
mov
movsl
xor
cvtps2pd
add
add
jo
out
lds
out
lcall
sub
and
sahf
xor
rolb
icebp
lds
sbb
shlb
rcl
arpl
imul
xchg
inc
hlt
jae
inc
jae
sub
sub
dec
fwait
xchg
or
shlb
scas
movsl
ljmp
call
push
pop
mov
pop
jns
repz
sbb
cmpsb
push
fists
inc
add
test
xchg
lret
out
mov
fsubl
push
cmpsl
dec
mov
into
je
sub
call
or
in
jmp
rolb
addb
inc
mov
aad
sbb
ljmp
xchg
inc
loop
cmp
scas
repnz
or
aad
jo
sbb
lret
sti
mov
mov
inc
push
arpl
inc
ret
mov
xchg
dec
js
into
sub
ss
clc
mov
bound
jno
mov
or
rorl
cli
xor
mov
or
insl
rcrb
and
out
mov
out
flds
sub
push
xchg
and
lret
int3
jnp
aas
jb
pop
xor
pop
xchg
jge
popa
fstl
les
aas
popf
add
std
enterw
add
in
sub
dec
jg
inc
xchg
les
cmp
or
cvtps2pd
popa
and
and
aam
mov
cmp
test
call
cmpb
jecxz
jle
lcall
mov
ja
jb
adc
lock
clc
faddl
sbb
lret
cmpsb
or
xor
jge
push
loope
orb
shlb
test
mov
ret
insb
xchg
cs
sbb
inc
sldt
ljmp
call
cltd
pushf
xor
adc
mov
cmpsb
dec
test
sti
repz
psubw
or
mov
adc
std
push
sbb
out
incl
cpuid
iret
push
sub
push
jne
and
in
fidivl
adc
arpl
popf
aam
sti
xor
adc
nop
shll
pop
cmp
cli
sbb
ds
mov
dec
mov
add
pop
xor
pop
mov
or
xchg
mov
cmp
lods
mov
adc
dec
repz
mov
dec
cltd
pusha
fwait
mov
cmp
mov
dec
and
jns
cmc
ret
dec
mov
lahf
mov
adc
sbb
lea
test
fsubs
cmpsl
xor
int3
jmp
push
lret
add
popf
push
pop
or
jge
cmp
xor
dec
jp
cmp
mov
add
popa
and
das
xchg
test
push
lea
mov
mov
fwait
inc
aaa
das
cld
jns
cmp
lock
xorl
test
jge
ds
jo
ret
shl
aam
cld
ret
pusha
cmp
repnz
mov
mov
aaa
sub
stos
cltd
cmp
mov
mov
scas
sbb
daa
xchg
ja
mov
mov
into
sbbb
jl
jecxz
insl
pop
imul
pusha
icebp
mov
shlb
mov
dec
dec
xchg
jle
clc
test
push
pusha
lds
cmp
inc
int3
or
cmp
mov
jecxz
clc
mov
ljmp
fs
pop
sbb
xchg
pop
lods
jnp
lret
fcoms
push
jne
pop
xor
push
dec
leave
testl
cwtl
shrb
and
jnp
loop
cmp
push
iret
jecxz
cld
add
stc
lahf
ss
sahf
ss
ljmp
pop
or
mov
scas
idiv
jbe
dec
cld
lahf
iret
fs
jne
pop
ret
seta
push
jno
inc
ret
test
roll
mov
jo
dec
ja
addr16
std
cmp
je
xchg
mov
jl
xor
movsl
push
mov
lcall
jl
add
jmp
xor
icebp
fistpl
insl
int
int
inc
xor
mulb
in
imul
ds
call
lret
dec
add
in
xchg
xchg
sub
test
inc
mov
mov
loope
xchg
mov
repnz
movsb
rolb
xchg
clc
sbb
imul
jbe
cli
sbbl
arpl
nop
jp
ja
in
lods
adc
inc
sbb
ret
rorl
test
cmpsb
test
mov
pop
dec
popf
int3
or
std
mov
lahf
ss
sbb
int3
fldt
or
call
adc
cltd
call
push
lds
pushf
xchg
aas
daa
ficomps
sbb
lods
mov
cltd
jl
and
pop
and
jnp
hlt
dec
repz
mov
push
mov
jg
pushf
aaa
pop
jnp
lds
cmp
pop
xchg
aas
cs
jo
lahf
cmp
xchg
pop
lods
pop
sti
loopne
int
cmc
outsl
cmp
cli
ror
xor
and
leave
imul
jno
gs
inc
mov
xchg
inc
dec
mov
xchg
jecxz
lods
fisttps
sti
mov
adc
out
loop
pop
insl
mull
pusha
dec
mov
xor
lret
sub
inc
sbbl
or
bound
stos
and
arpl
jno
shl
stos
inc
push
es
je
sti
in
push
jmp
jnp
jnp
and
repnz
cwtl
insb
call
xlat
in
xchg
sub
push
mov
xchg
push
fsubrl
jae
out
and
nop
into
out
lahf
xorl
sub
or
sbb
lcall
and
dec
mov
push
mull
xor
dec
iret
mov
sub
mov
jp
and
xor
test
jmp
xchg
mov
sbb
jnp
sbb
add
add
adc
sub
mov
mov
dec
adc
data16
fldl
rcr
mov
iret
jne
dec
faddl
adc
and
clc
cli
popf
mov
fdivrl
andb
sub
in
xor
inc
xor
push
sahf
cld
jo
pushf
rorb
push
jle
lret
icebp
orl
mov
sub
sub
mov
jno
popf
mov
loop
jae
les
add
mov
cmp
ljmp
jbe
dec
xchg
stc
out
jne
out
ljmp
fnstcw
or
mov
aad
adc
imul
lcall
cs
or
xor
xchg
xchg
in
cwtl
jle
sub
jne
fxam
mov
outsb
or
xchg
mov
adc
jmp
mov
in
jbe
mov
xor
ljmp
hlt
dec
loope
fistpl
pop
or
or
hlt
movsb
add
sub
mov
repnz
icebp
pop
adc
mov
lods
add
call
lods
xchg
loope
shlb
lcall
add
mov
and
repnz
cmpsb
pop
dec
nop
mov
and
movsb
imul
dec
into
mov
js
mov
dec
orl
jne
lcall
cmp
enter
adc
xacquire
pushf
jno
dec
ljmp
aad
pop
mov
je
in
or
jne
clc
bswap
ret
sbb
push
pop
lret
xor
inc
aas
or
push
xlat
pop
sbb
inc
xchg
lret
popf
sti
and
jp
ret
add
insb
fldt
lock
in
inc
xchg
sub
fidivs
test
cmp
and
jns
loop
popa
gs
das
aaa
cmc
ja
in
push
cwtl
or
jns
inc
mov
sti
pop
popf
cmc
mov
sbb
ret
mov
sbb
ja
push
pop
jle
push
inc
sub
and
adc
mov
xchg
movsb
rol
add
pushf
jno
popa
sub
cmpsb
pop
sbb
xlat
loop
fwait
popf
push
popf
add
repz
fisttpl
inc
lea
movnti
sbb
pop
mov
push
stc
shlb
pushf
or
in
pop
mov
test
or
inc
xor
les
cmp
mov
pop
push
shlb
jb
jb
pop
imulb
aas
data16
xchg
and
test
std
pop
shr
adc
in
jne
repz
cmp
sub
sbb
add
adc
enter
mov
loope
sub
or
mov
cmp
cmc
and
dec
mov
ja
jl
inc
cmp
pusha
xchg
div
dec
cmp
mov
stos
enter
push
roll
xchg
pop
in
xchg
add
sahf
push
shlb
outsl
mov
hlt
xchg
fs
mov
push
lds
popa
jge
test
jne
xchg
pop
sub
daa
jns
mov
cmc
or
scas
std
gs
aaa
jle
push
imul
fwait
sbb
mov
push
xchg
mov
gs
jg
stos
in
ficoml
sub
pop
pop
fwait
sub
inc
sub
dec
sub
rclb
sub
xchg
cmp
and
sbb
xor
sub
pop
fmuls
sahf
insl
movsl
shl
xchg
int3
pusha
sub
loop
ds
ja
sarb
mov
push
insl
push
imul
xlat
cmp
xlat
adc
andb
mov
fsubl
lret
pop
cmp
sub
gs
sub
dec
in
lds
iret
xchg
mov
cmpsl
mov
popf
mov
sub
shll
insl
in
stc
js
xor
mov
imul
es
xchg
sti
outsl
adc
movsb
mov
call
ja
xchg
mov
enter
js
clc
xor
or
shlb
test
shl
or
and
mov
xor
pop
iret
imul
aaa
imul
add
sub
inc
add
imul
or
jge
mov
sub
insb
fnstenv
roll
fidivrl
dec
pushf
inc
pop
mov
mov
cmp
gs
testb
mov
jl
xchg
pop
test
sbb
int3
incb
repnz
inc
jecxz
es
cmpsl
into
not
lds
arpl
jne
cmp
mov
add
dec
and
jle
scas
icebp
push
mov
jae
xchg
enter
pop
sbb
dec
lea
jns
push
nop
add
negb
daa
or
fildll
in
out
in
insb
js
mov
cmpsb
mull
fdivrl
xor
insl
and
add
arpl
js,pn
in
push
mov
mov
shrb
popf
loop
ja
repnz
push
mov
push
pop
movsl
inc
and
and
xor
push
push
rorl
enter
sbb
shrb
sbb
add
push
loopne
mov
pop
in
inc
jl
add
hlt
cli
add
cmp
jbe
or
push
mov
sbbb
dec
movsb
mov
shl
mov
push
dec
sub
lock
imul
xchg
push
cmp
add
hlt
xchg
mov
sub
sub
xchg
push
lret
ljmp
sub
cld
add
pop
push
pop
scas
dec
lock
inc
sub
adc
xor
ret
rcrl
mov
add
adc
push
stos
cld
and
jl
mov
leave
add
mov
imulb
movsl
jle
cmpsl
xor
stc
dec
repnz
push
andl
and
test
cltd
pop
cmpsb
mov
lea
push
psubq
push
js
psraw
sbb
add
xor
scas
pop
pop
lahf
rcll
outsb
inc
aam
lods
adc
into
pop
sbb
cmp
and
adc
rcr
dec
addl
or
mov
adc
push
push
sarb
sub
ret
push
rorb
cmpsb
in
or
insb
movsl
mov
fistps
mov
push
bound
jb
jl
xchg
jp
iret
sub
mov
shlb
pop
lea
out
int
mov
in
pushl
mov
ret
mov
xorb
xor
add
icebp
cltd
sahf
lds
mov
mov
movsl
out
sbb
rolb
cmpsl
push
jb
js
dec
je
jne
cmp
cmp
dec
pop
popf
dec
in
cmp
mov
and
jg
orb
jmp
pusha
push
push
out
mov
jle
arpl
cmp
rorb
mov
out
sub
xor
mov
out
xchg
cmp
add
adcl
mov
not
push
sbb
sub
shr
int3
sbb
call
fs
movsl
inc
jb
sbb
dec
cmpsl
outsl
lods
xor
dec
pop
push
rolb
sarl
lcall
notb
loopne
int
ss
sbb
hlt
mov
arpl
pop
popf
inc
int
ja
mov
and
cmp
xchg
dec
pop
cltd
push
insl
cltd
mov
mov
sub
out
outsb
jo
addr16
and
jp
inc
lahf
leave
mov
sbb
dec
inc
jo
les
shrl
pop
xchg
pop
mov
lahf
jmp
mov
add
std
inc
sbb
clc
jmp
fisttps
pop
push
pop
sub
or
mov
inc
jl
fdivl
out
xorb
pop
cmp
loopne
adc
push
sahf
enter
jp
ljmp
mov
xlat
ja
pop
pop
sbb
mov
xchg
lods
mov
pop
das
inc
call
mov
add
mov
mov
mov
cs
dec
outsb
jae
jle
in
int3
or
mov
mov
aas
sub
or
repnz
outsb
gs
daa
push
pop
idivl
out
lods
dec
xchg
mov
dec
mov
sti
or
and
hlt
xor
imul
pusha
jb
cwtl
inc
js
mov
sbbl
add
mov
mov
or
pop
in
ror
cld
mov
lods
ret
xlat
inc
mulb
pop
enter
jbe
out
mov
leave
adc
sub
add
rorl
pop
subl
adc
mov
ss
xabort
jb
push
pop
cmp
aaa
lea
cmc
mov
xchg
sbb
inc
push
ss
adcl
into
xor
jp
pop
jo
xchg
xor
cmp
lods
mov
cmp
dec
shlb
push
in
stos
inc
je
test
mov
sbb
outsb
mov
or
rolb
cmp
cmpsl
mov
adc
lahf
xchg
push
or
jge
daa
frstor
xor
gs
add
push
aas
xchg
out
lods
push
mov
mov
cld
ja
mov
push
jb
mov
adc
dec
sub
sahf
sahf
dec
pop
push
subb
out
lods
in
rcrb
shll
pop
sub
push
push
or
jbe
aam
add
add
adc
shrl
sub
sbb
out
push
xchg
xorb
mov
ja
xor
sbb
mov
adc
dec
jns
add
cmp
add
inc
or
loopne
adc
scas
sub
jl
out
and
neg
std
loope
arpl
daa
outsb
mov
jle
add
hlt
pop
mov
pop
adcl
cmpsb
xor
pop
pop
mov
sbb
pop
mov
inc
add
mov
leave
into
add
pop
gs
xor
jmp
or
enter
lret
jg
xchg
xchg
dec
jbe
xor
lcall
jge
lret
xchg
jmp
xchg
ret
es
mov
jns
push
adc
andb
inc
idivb
fdiv
insl
out
sbb
adc
popf
je
pop
mov
lcall
int
scas
inc
adc
push
cltd
xor
mov
incb
lcall
adc
and
mov
jbe
fadds
imul
mov
fmull
mov
inc
mov
or
adc
sbb
sbbl
xchg
pop
lods
sbb
jne
adc
sahf
int3
popf
aas
sub
fdivs
inc
rolb
into
fnsave
mov
mov
jecxz
jg
pop
pop
pop
test
lock
sbb
sbb
cwtl
andb
pop
dec
bound
push
imul
jmp
adc
mov
ja
lds
xor
jns
mov
test
pop
add
cmp
mov
shll
add
adc
cmp
cmp
div
inc
fwait
add
adc
mov
mov
movl
sbb
not
add
outsb
stc
push
pop
add
pop
adc
mov
jae
add
xchg
aaa
ror
pop
sahf
inc
and
pushf
or
xchg
mov
jae
lcall
imul
lock
push
mov
cmp
das
shlb
icebp
mov
jnp
out
add
lods
cmpsb
orl
cmpsb
fwait
stos
leave
bound
dec
movsb
inc
inc
and
stc
arpl
lret
xchg
sahf
and
push
enter
in
mov
bound
je
or
out
sbb
pop
fistpll
pop
adc
mov
mov
rcrl
pop
sarl
jl
cwtl
mov
int3
lock
mov
push
xchg
mov
movsb
fildl
or
mov
jmp
push
sub
adc
std
daa
fdiv
cs
test
jo
ficoml
mov
js
sbb
cld
sbbb
cmp
enter
xor
fdiv
mov
dec
pop
cmp
out
xor
sub
insl
repnz
mov
pusha
push
jl
sub
shl
xchg
sbb
mov
addl
movl
fs
cmpl
scas
fnsave
mov
mov
fbld
xchg
leave
ss
aad
outsl
mov
lock
pusha
cld
idivl
xchg
push
clc
and
mov
repz
std
jge
roll
jge
push
or
jae
adc
lea
pop
rclb
xor
out
and
les
pop
test
inc
clc
pop
jle
arpl
das
cltd
imul
inc
jae
fdivl
leave
and
or
sbb
ljmp
fldt
jl
and
clc
mov
xchg
rcr
mov
cwtl
hlt
sub
cld
push
fs
pusha
pushl
push
imul
add
sub
mov
sub
filds
push
xchg
jae
test
xor
cwtl
mov
nop
outsl
je
lahf
sub
mov
rolb
loope
jnp
push
sub
mov
stos
loopne
xor
inc
push
add
int3
mov
jo
or
ss
pop
xchg
stos
in
mov
cmp
or
pop
mov
enter
iret
out
or
cld
or
cmp
and
ret
mov
or
aas
int
inc
pop
shlb
jns
loope
movsl
out
popf
test
jg
lcall
xor
ss
inc
push
stc
jae
loop
pop
test
mov
adc
sbb
inc
les
add
pop
cmp
jp
mov
mov
sbb
int
out
shll
filds
shr
lret
sub
mov
jb
js
xchg
fucomi
test
dec
or
adc
imul
sahf
xor
pusha
dec
dec
daa
sbb
add
pop
fwait
jg
push
xor
pop
sbb
dec
loope
test
fsubl
in
std
dec
xlat
mov
mov
jmp
dec
xor
pop
in
aam
jecxz
fs
ja
push
sub
push
dec
xor
pusha
adcl
iret
xor
jno
loope
das
dec
sub
cmp
sub
imul
mov
mov
addl
jle
add
cli
ljmp
negl
dec
jbe
lahf
sub
jg
out
fiadds
aas
pop
mov
sbb
cmpsb
lds
leave
sbb
and
je
mov
add
xor
outsb
fnstenv
sbb
subb
out
adcb
andb
aad
mov
push
push
lret
adc
adc
jg
enter
xchg
loope
jecxz
mov
cmc
test
subl
imul
xor
enter
enter
scas
in
sub
cmpsl
dec
test
lods
jns
push
push
mov
in
rol
shll
mov
mov
jmp
xor
out
cmp
not
mov
xchg
cmp
and
ja
jnp
mov
rol
es
xchg
adc
popf
xchg
jb
push
push
or
add
add
out
xor
mov
jmp
fdiv
ret
std
jns
mov
jmp
push
lret
pop
les
popa
push
vmovdqu
ss
xorl
fidivrl
mov
add
shrb
jge
mov
pop
mov
nop
add
push
xor
fcmovnbe
rclb
stos
sub
inc
pop
lock
cmpb
repz
repnz
jne
mov
jmp
scas
and
xchg
mov
or
sbb
daa
xor
cmp
pop
push
xchg
add
or
out
lcall
mov
scas
int
jns
cmp
rcrb
xor
sub
les
lahf
aas
adc
mov
push
sub
addr16
dec
and
mov
mov
xchg
sub
sbb
test
push
mov
jnp
sbb
xchg
int
dec
and
ss
mov
mov
scas
shlb
iret
mov
push
dec
mov
dec
in
pop
or
and
xlat
lcall
jnp
cmp
in
stos
inc
cmp
mov
inc
test
cmp
pop
shll
xor
dec
and
dec
je
pop
inc
lds
pop
cs
mov
leave
ss
movl
test
or
dec
mov
call
adc
cmp
and
xor
fistpl
inc
pop
jmp
mov
arpl
sub
pop
cmpl
push
cmpb
pusha
sub
ficompl
push
ja
fwait
add
mov
mov
inc
jae
hlt
enter
je
outsl
sbb
push
pushf
cmp
pop
out
ret
data16
pusha
gs
push
fimuls
test
pusha
push
ljmp
jb
jp
mov
and
xchg
dec
and
fistps
or
xor
jmp
repnz
sbb
ret
push
andb
sbb
stos
imul
push
jmp
out
and
xor
adc
loopne
movsl
and
sub
mov
dec
aam
mov
xchg
add
nop
cltd
test
dec
stc
ds
dec
push
jg
sbb
sbb
addb
adc
ja
js
cmpsl
ljmp
rcll
xchg
mov
cmpsb
pop
fucomip
ljmp
test
pop
subb
repz
jbe
mul
jno
mov
nop
movsb
out
mov
cmc
add
fucomi
rorl
sub
into
out
lea
sbb
push
in
shll
ficoms
daa
fimull
inc
sbb
or
push
cmp
xchg
jmp
icebp
inc
mov
movsl
mov
pusha
sub
dec
sub
jl
dec
shll
cld
pop
aam
into
pushf
mov
out
push
inc
loop
mov
jae
mov
das
icebp
pop
adc
mov
out
mov
dec
mov
adc
cmp
jb
push
loope
sub
cmpsl
in
mov
aad
xor
push
in
aas
inc
jo
dec
inc
inc
push
sub
and
mov
ss
xor
add
mov
les
movsb
es
adc
add
mov
jo
fistpl
testb
mov
xchg
sbb
add
sarl
aaa
stos
pop
fwait
add
cmp
pxor
mov
and
xor
add
sub
xor
dec
out
in
fldcw
pushf
lds
push
push
mov
pusha
int
ss
pop
or
gs
jl
stc
insl
mov
and
dec
sbb
enter
pop
mov
mov
stc
mov
outsb
mov
subps
in
lods
add
and
aas
das
insb
sub
cmp
inc
cmp
add
daa
jge
cmpsl
es
adc
fisttps
inc
mov
sub
lds
pop
out
cmpsb
mov
jo
lods
and
xor
movsl
cld
sub
shll
aas
jno
fnstenv
inc
inc
pop
jp
mov
push
push
push
dec
aam
inc
cmc
fs
arpl
and
mov
or
lds
xchg
inc
mov
sarl
loop
dec
dec
or
cld
sbb
sub
mov
in
mov
dec
sbb
nop
jge,pn
imul
cltd
dec
dec
and
jl
add
sbb
cld
fimull
lahf
push
push
lock
adc
inc
sbb
sub
xor
xchg
outsb
lret
pushf
add
xor
data16
imul
jl,pn
jge
and
aad
sbbb
adc
mov
ja
cmp
push
daa
movsb
test
xchg
xor
mov
xor
xor
jle
mov
push
dec
cli
inc
dec
mov
addr16
stc
loopne
push
pusha
jno
loop
or
jl
xchg
pop
jp
inc
rcr
hlt
clc
inc
js
cli
mov
jl
lea
jecxz
mov
call
xor
xorl
push
cld
cmp
in
mov
fnstsw
mov
insl
mov
cmp
xchg
pop
or
xchg
jl
cmp
into
push
out
adc
idivl
loop
fdivl
pop
and
jne
ret
inc
push
mov
shll
lods
gs
test
arpl
mov
jmp
pop
mov
xor
xchg
and
popf
dec
push
push
xchg
cld
out
int3
loop
dec
add
and
in
fiaddl
push
cmp
filds
pop
mov
leave
stc
repnz
push
mov
arpl
ss
push
leave
and
mov
mov
cmpsb
inc
jp
mov
mov
cmp
lods
fiaddl
repz
pop
orl
test
lods
jge
mov
stc
test
jecxz
xor
mov
int3
aad
jb
mov
scas
jp
xchg
scas
and
aad
adc
rorl
mov
mov
das
pusha
xor
leave
and
scas
andl
and
into
pop
push
or
adc
mov
jo
sarl
aad
or
aad
out
int
xchg
ret
xchg
test
jg
dec
mov
mov
into
testb
in
sbb
movsb
push
add
fwait
pop
mov
add
and
jg
hlt
xchg
sub
ds
mov
sub
jp
or
inc
out
cli
mov
inc
cmpsl
gs
lock
rcrb
xor
push
sub
dec
mov
xlat
push
adc
in
sbb
out
xor
mov
cmp
lret
push
sub
push
sub
lods
mov
ja
or
arpl
xchg
into
movsb
dec
ljmp
sbb
xor
sub
push
cli
sbb
lea
fdivp
fstpl
in
add
dec
outsb
sub
enter
xchg
cmp
jl
jp
xchg
inc
pop
jmp
jno
jge
pop
add
jle
test
ds
or
inc
xor
mov
lahf
out
push
in
aaa
stos
xor
mov
sbb
out
xchg
sub
cli
mov
fcmovnu
jecxz
inc
arpl
mov
xchg
jns
int
and
shrb
lahf
mov
xchg
pop
inc
cs
push
in
mov
hlt
mov
fmul
mov
loopne
pop
add
inc
pop
arpl
xchg
shl
mov
dec
cli
pop
mov
repnz
sub
jns
fsubrl
jno
jno
xor
jecxz
inc
cmp
sub
out
into
cmp
cld
mov
mov
sar
repnz
dec
movsb
clc
mov
mov
lret
arpl
repz
and
mov
pop
pop
push
aam
nop
nop
xor
jo
xchg
jne
imul
out
ja
jmp
jecxz
dec
roll
or
pushw
mov
xor
movsl
pusha
sbb
pusha
add
imul
cmp
xor
stos
scas
sti
int3
mov
mov
mov
adc
test
or
pop
cmp
scas
xor
aaa
xor
sti
mov
popa
xchg
dec
aaa
ficomps
ja
cmc
dec
adc
mov
and
mov
arpl
shll
xchg
lock
cpuid
inc
sbbb
and
push
pop
lods
das
jns
sub
mov
jne
loopne
lds
push
or
jg
mov
push
addr16
andb
bound
jecxz
outsb
jae
repnz
jmp
loopne
stc
adcl
and
jp
insb
sbb
ss
out
xchg
push
jae
push
test
js
inc
loop
and
dec
cmpsl
mov
cmp
arpl
loope
std
jmp
insl
jb
sbb
cld
xor
adc
mov
js
pop
divl
popf
and
testl
insb
roll
jle
pop
sub
lea
and
mov
or
dec
push
adc
and
mov
in
aaa
aam
sahf
xchg
mov
outsb
cmp
or
jle
cwtl
dec
and
outsb
or
pop
aas
repz
rcrb
iret
and
mov
cmc
out
je
stos
push
ficompl
mov
push
insl
xchg
pop
xchg
outsl
jno
lret
mov
lods
pop
outsl
adc
mov
xor
mov
mov
flds
inc
imul
fcompp
or
popf
mov
aam
xchg
sbb
cmpsl
out
sahf
movsl
addr16
data16
jle
js
ljmp
fmuls
mov
xlat
lods
adcb
adc
aam
sub
stc
daa
gs
sub
adc
adc
test
aam
mov
sahf
cmc
xor
movsl
aas
cwtl
xor
xchg
xchg
lret
pop
leave
scas
xchg
sbb
sub
jne
lods
xchg
push
test
jg
orl
jbe
enter
adc
inc
mov
xor
xchg
sub
scas
test
int
adc
pop
cmpsb
cmp
in
mov
mov
ret
out
aam
inc
pop
and
or
pop
mov
jmp
lret
fidivrs
push
adc
imul
gs
insb
fwait
test
mov
ficompl
sahf
mov
pusha
nop
stos
fucomip
mov
push
insb
in
inc
mov
jbe
cltd
movsb
xchg
push
xor
dec
inc
out
jae
ja
cmp
out
xor
cmp
int
jge
ret
bound
out
mov
jle
leave
cmp
xchg
and
or
ds
inc
outsl
orb
testl
push
hlt
test
jnp
xchg
cmp
jbe
inc
cltd
lahf
sbb
mov
mov
jbe
jno
pushl
or
fwait
xchg
jecxz,pn
js
jno
add
sbb
sub
outsl
xchg
gs
ss
xor
aam
ds
jle
fisttpll
cld
dec
loop
jae
jb
test
cwtl
pop
outsl
inc
push
xor
or
pop
push
xlat
push
or
addr16
js
sub
mov
inc
mov
xchg
cmp
add
inc
jo
jmp
add
and
mov
shll
push
adc
bound
pop
xchg
cmpsb
mov
orl
addb
xchg
test
mov
inc
xchg
into
insb
movsb
cmp
repz
fisubs
inc
xchg
mov
adc
mov
ljmp
push
lea
adc
mov
or
jmp
aaa
shl
jnp
cld
inc
pop
jbe
mov
mov
or
imul
repnz
xorb
cmc
xchg
inc
popa
mov
les
lods
mov
add
btc
pop
test
mov
push
cli
mov
cmp
jae
lcall
add
jecxz
push
cmp
or
loopne
inc
out
call
adc
adcl
xor
add
call
sbb
jns
mov
mov
add
iret
mov
add
jle,pt
loopne
mov
movl
fidivl
pop
push
xchg
je
std
mov
shll
lret
vcvtps2pd
mov
aam
es
popa
sbb
icebp
sbb
sub
outsl
inc
ret
push
dec
movups
gs
lcall
mov
ja
cmp
popf
outsb
and
mov
add
jge
imull
repz
adc
mov
pusha
or
insb
add
jb
add
dec
push
fstpt
mov
into
in
xor
fstpl
xchg
sbb
jbe
movsl
popl
pop
jp
aam
jno
pop
lcall
fs
mov
pop
fwait
adc
lds
stc
xchg
movsl
fwait
mov
dec
jle
pop
pushf
ret
imul
pop
in
fwait
mov
lea
lods
inc
dec
add
mov
mov
sbbb
icebp
sbb
mov
movsl
testl
mov
inc
jl
or
lock
test
lds
xchg
or
adc
cmp
movsl
push
addb
cltd
stc
les
pop
sub
mov
or
scas
fsts
push
mov
mov
and
xor
xchg
add
out
push
pop
rolb
subb
and
xchg
test
xchg
lret
jo
mov
out
iret
add
lds
mov
outsl
cmp
adc
es
or
xor
nop
adcb
or
or
popl
lea
jg
mov
inc
pop
daa
stos
push
sbb
idiv
sahf
jge
repnz
iret
mov
andl
inc
pop
testb
dec
mov
xor
pop
data16
lcall
lock
inc
pop
inc
sub
xor
sarb
xlat
test
cmpsb
xlat
cli
dec
pusha
movsl
sbb
and
shll
mov
movsb
popf
or
in
pop
cwtl
nop
and
mov
imul
std
add
roll
mov
add
push
inc
adc
ss
mov
xchg
mov
aaa
lcall
sbb
into
xchg
das
jo
call
sub
outsl
shl
dec
sub
rorb
ret
ljmp
stos
cmc
add
dec
leave
fidivl
aad
push
mov
push
adc
sbb
mov
and
outsb
push
dec
pushf
sbb
int3
xor
insl
pop
lds
xchg
sbb
clc
ja
shlb
add
jne
lcall
inc
push
ss
andl
push
fildl
mov
or
test
mov
mov
sub
cltd
rcl
scas
lea
testb
sub
outsl
sub
mov
sub
fmull
push
jmp
mov
mov
cmp
push
add
test
or
cs
lock
cmp
sub
or
ss
add
sti
filds
push
ret
fcmovnb
dec
pop
xor
cli
cltd
lea
imul
test
mov
std
cmp
icebp
cmpsl
fmul
adc
mov
ljmp
adc
rorl
out
and
testb
popf
ret
stos
int3
ret
and
mov
jmp
int
push
jno
xchg
mov
movl
sub
test
mov
pop
mov
loop
popa
cltd
ds
aam
movsb
fistpll
mov
mov
cmpsl
cld
xor
mov
mov
xchg
std
dec
or
pop
fildl
xor
sbb
cmp
fadds
sbb
lret
cmc
lcall
jne
dec
jae
inc
mov
add
pop
jle
outsb
and
push
cli
stos
cmp
inc
cmp
push
cmpsb
mov
xchg
xchg
sub
data16
in
loop
movsb
push
jp
outsb
fwait
lock
clc
push
sbb
sub
or
jbe
outsl
xor
adc
dec
cmpsl
dec
pop
mov
sbb
lahf
jo
mov
sub
add
push
and
sub
sbb
inc
adc
pop
adc
bsf
push
mov
pop
dec
in
push
fst
loope
push
xorl
or
push
repnz
lods
je
mov
insl
or
stos
or
push
lds
or
jo
aaa
mov
push
dec
pop
xchg
jns
sub
hlt
call
pop
imul
add
mov
xor
pop
imulb
cwtl
nop
cld
cmp
orl
push
xchg
out
xchg
xlat
arpl
mov
negl
mov
sub
or
jns
xor
scas
lds
or
ret
mov
fldenv
add
cmp
mov
sub
xchg
shlb
mov
fists
jnp
cmp
out
add
aas
or
jecxz
jno
enter
cmpsb
and
cmp
icebp
xchg
push
fdivrs
pusha
cmp
test
mov
je
adc
outsl
sarl
push
movsl
aad
xor
jnp
mov
pop
in
sub
jp
jecxz
dec
rolb
sti
push
roll
movsb
pop
mov
das
sbb
jns
and
addr16
faddl
inc
or
out
jnp
dec
lods
push
outsl
adc
aaa
add
mov
es
and
roll
pop
inc
pop
inc
mov
pop
adc
or
cs
mov
in
repnz
fs
leave
cmp
jnp
or
repz
cmpsl
cmpsb
mov
lea
pop
bound
add
pop
es
push
sub
shrl
inc
pop
enter
or
cltd
enter
push
adc
in
cmpl
add
ja
jmp
es
mov
in
sbb
dec
adc
rcr
daa
mov
xor
and
or
push
in
xor
arpl
loopne
outsb
pop
clc
popa
arpl
cltd
mov
pop
mov
fadds
push
add
sbb
jb
movsl
push
icebp
popf
dec
sub
mov
and
add
inc
inc
sahf
lds
lds
xchg
loopne
push
test
mov
mov
inc
loop
sbb
add
int3
rclb
cmp
inc
call
jnp
mov
hlt
sub
lock
cs
jp
sub
rclb
outsb
and
nop
ja
dec
hlt
mov
mov
add
push
xor
add
jae
mov
sbb
or
sub
jbe
mov
mov
stos
cltd
push
dec
jnp
in
scas
mov
jmp
rcl
and
mov
test
dec
cmp
mov
nop
in
lea
xor
push
dec
clc
call
f2xm1
jne
and
dec
xor
add
pop
pop
ja
jmp
cmc
test
inc
es
ret
xor
ljmp
xorl
add
iret
and
daa
mov
mov
loopne
mov
xor
mov
pusha
sub
dec
mov
mov
push
push
out
mov
mov
bound
out
mov
callw
fldt
xor
xchg
hlt
mov
lds
fwait
mov
xchg
shll
stos
xchg
cmp
cmp
or
sarl
push
movsl
sbb
leave
jnp
addr16
push
mov
sub
shll
sub
bound
je
cmp
mov
jb
dec
sub
and
pop
arpl
test
out
movsb
jno
jnp
negl
push
ret
fsubrs
ficoms
jns
aad
sub
cmp
call
ret
or
sub
mov
enter
mov
jo
scas
sbb
orl
mov
or
push
inc
jae
mov
cmp
bnd
mov
mov
xchg
cmpsl
es
push
mov
popf
in
cmpsl
bound
jb
xor
push
jmp
mov
adc
or
pop
mov
dec
cmp
je
add
scas
jno
sbb
inc
mov
mov
xchg
jo
mov
xchg
pop
adc
push
jo
mov
xchg
dec
fidivrs
loop
lcall
mov
adc
dec
push
fidivrl
xchg
mov
mov
or
call
mov
sub
mov
addb
fsubs
aaa
addb
sarb
adc
pusha
dec
scas
test
popf
jle
out
cld
push
mov
clc
movsb
cmp
push
int
xchg
ret
out
rorl
fstps
int3
fisubrl
fcomps
inc
push
jbe
js
fstpt
push
lea
jmp
push
inc
dec
sbb
fists
add
or
inc
and
pushf
sub
dec
jl
xlat
mov
pop
ficomps
xchg
decb
aaa
into
call
ds
icebp
add
xlat
mov
jge
out
xlat
xor
subl
adc
jne
repz
jne
shrb
loopne
add
outsb
shl
sub
popa
sub
sti
mov
data16
in
js
jl
jecxz
mov
test
scas
loopne
sbb
cmp
out
lock
cmp
mov
cmp
cmp
out
in
lret
lahf
daa
shlb
lea
in
mov
cmpsl
int
les
test
add
jb
push
data16
fwait
or
scas
sub
xor
inc
cld
dec
xor
rorb
dec
push
jns
test
repz
xor
dec
pop
les
jns
hlt
int3
xlat
div
adc
and
mov
jnp
sub
cld
xor
and
mov
and
into
sbb
data16
loop
jge
scas
and
push
call
test
and
pop
int3
mov
cmp
mov
and
add
subl
mov
xchg
pop
and
xor
pop
pop
dec
repz
or
clc
fwait
jns
or
movsb
mov
sub
mov
add
addr16
notb
sarl
std
lahf
pop
jecxz
mov
add
inc
push
daa
test
lds
jecxz
out
cli
adc
bound
jl
pop
in
fwait
adc
out
xchg
lods
xor
push
xchg
repnz
jle
xchg
icebp
jecxz
addr16
fimuls
bswap
cmp
or
jl
out
orl
push
test
push
gs
ss
pop
mov
cmp
push
arpl
cmc
and
and
pop
rcll
iret
adc
sbb
adcb
adc
mov
mov
jnp
cmpl
cmp
test
pop
pop
lods
pop
outsb
xchg
jle
imul
sub
fisubrl
cmp
adc
sub
mov
or
push
iret
cmpsb
jecxz
lahf
sbb
cmp
gs
scas
sbb
fstpl
iret
mov
xchg
inc
mov
push
push
push
inc
outsb
xor
lret
fwait
cs
hlt
js
push
popf
jecxz
cld
imul
jl
mov
sbb
mov
or
pusha
sbb
cmp
pop
pop
mov
push
xor
pop
mov
push
scas
in
pop
nop
fiadds
fsts
inc
ret
pusha
imul
sti
negl
pop
jns
push
jnp
js
sahf
dec
ljmp
push
add
in
jbe
inc
fs
mov
mov
dec
scas
test
sub
mov
gs
dec
rcrb
xchg
fldenv
mov
sbb
dec
xchg
test
cmovle
adc
adc
fisubrl
mov
inc
xchg
fisttpl
push
xor
push
mov
xchg
push
push
push
adc
rol
loope
sbb
sub
rcrb
mov
gs
std
aas
jns
jmp
lods
pop
mov
mov
add
idivb
jno
mov
sbb
or
xchg
pop
ds
xorb
dec
sbb
jl
in
test
xor
lret
pop
rcrb
jbe
repnz
pop
outsb
mov
jnp
aam
mov
adc
repnz
cli
mov
push
pop
jge
mov
push
add
mul
je
in
ficoms
add
rcrl
into
mov
sub
in
or
les
sub
testb
lods
xchg
jne
inc
movsl
dec
lcall
inc
sbb
and
dec
dec
js
fucom
rcll
inc
divl
fwait
cwtl
aam
and
push
cmp
je
ret
mov
clc
cmp
xor
paddb
ret
fisttpll
fiadds
xor
std
push
ret
cwtl
cli
xor
cltd
test
fwait
aad
sbb
add
fimuls
mov
sbb
xor
stos
inc
mov
in
sub
lods
push
mov
xchg
gs
sbb
decb
mov
out
rclb
xchg
adc
stc
adc
mov
mov
xchg
fildl
push
mov
mov
insb
sub
imul
push
fcomp
stos
add
hlt
jmp
sti
sub
popf
sbb
inc
mov
mov
dec
in
mov
jmp
sub
repnz
push
sub
xlat
mov
jle
fnstenv
cltd
pop
lods
fildll
jp
xchg
xor
je
or
pop
xchg
and
add
xchg
mov
movsl
xlat
and
sub
cwtl
movsb
addr16
cmc
lea
ss
xchg
mov
pop
out
ja
sbb
cmp
inc
test
aam
jb
xlat
lahf
loope
mov
sbb
cld
repz
clc
mov
mov
pop
adc
xchg
adc
mov
mov
or
cmp
outsb
js
test
pusha
imul
fwait
imul
test
ss
mov
sub
ret
repz
adc
adc
inc
jle
sub
mov
loopne
in
xchg
movsl
adc
ja
jp
mov
inc
ret
repz
or
addb
sub
jmp
les
fstpl
push
add
mov
or
aas
leave
sti
mov
pop
pop
mov
aam
fnstenv
adc
nop
leave
fisttpll
mov
stc
ljmp
sub
sub
xorps
ret
hlt
stos
dec
jmp
adc
pop
adc
ret
jno
xchg
mov
mov
cmp
enter
jl
lock
xchg
mov
int3
jg
sbb
dec
mov
adc
sub
sti
dec
cmpsl
iret
mov
movsl
lcall
les
cmc
int
dec
dec
adc
xchg
jns
mov
idivb
lahf
lret
sbb
add
xor
test
push
test
sbb
jae
mov
das
xchg
cmp
rcl
cld
sahf
cmp
pop
lock
fucomp
xchg
xor
adc
sar
sub
sahf
dec
lods
mov
rolb
enter
imul
inc
and
or
jbe
lods
mov
int
push
shll
inc
cmpsl
test
sub
int
subl
mov
shlb
aam
sbb
out
pushf
jle
mov
cmpsl
ret
sub
lea
push
les
sbb
pcmpgtw
mov
adc
or
subl
cmpsb
lahf
fists
mov
stos
mov
mov
adc
out
push
ljmp
js
and
cmp
int
or
mov
das
rcrb
xchg
pop
mov
jo
sar
lods
xor
rol
test
fldl
hlt
mov
jo
or
scas
idiv
ret
push
cmp
push
clc
js
mov
in
adc
dec
xchg
inc
cltd
add
sub
es
sub
gs
out
mov
ja
lcall
pushf
add
repnz
mov
pop
jg
ljmp
sbb
hlt
jbe
int
mov
adc
jge
rclb
pop
pusha
xchg
iret
dec
sub
fwait
imul
outsb
std
add
dec
xorb
in
push
loop
out
xchg
insb
mov
dec
inc
dec
pop
imull
stos
ja
cmpsb
xlat
aam
xlat
mov
push
xor
sbb
xchg
imul
insb
xchg
and
jns
inc
add
subl
sbb
loop
xor
sub
jb
mov
push
cmpsl
fnstcw
sub
in
in
push
adc
lea
mov
ljmp
mov
lcall
out
add
and
push
jnp
les
pop
enter
cmp
xchg
mov
mov
faddl
mov
sbb
rdpmc
jo
push
pop
fdivs
xor
dec
dec
jl
jle
movsb
stc
pop
pop
push
push
iret
cmpsb
xchg
rorb
xchg
xorb
leave
popa
fisttps
mov
or
lods
jmp
xchg
fstpl
lods
sbb
dec
bound
fstpl
test
cltd
aas
fwait
insb
lods
sbb
jns
xchg
add
jge
mov
les
inc
cwtl
pop
sbb
movsl
fldl
loope
and
je
lds
cmp
mov
or
push
mov
sahf
loopne
push
out
xchg
fucom
sbb
mov
pop
popa
pop
inc
and
iret
aas
into
and
ja
out
ss
rorb
push
xchg
outsb
xor
sub
mov
pop
and
js
xchg
ljmp
push
mov
fsubrl
jnp
adc
jp
jns
pop
into
shrl
leave
popa
pop
xorl
out
cmp
dec
push
sub
aam
fcomip
mov
lret
imul
out
mov
movsl
mov
and
xchg
cs
pop
imul
and
out
cmp
shlb
cs
adc
jge
es
arpl
adc
sbb
movsl
xchg
lock
sub
cmp
imul
int3
cwtl
sub
mov
subb
adc
rcrl
jns
aad
in
pusha
out
or
loop
sub
cmp
pop
dec
fadds
fldlg2
addl
inc
shl
insl
mov
data16
mov
push
sub
jecxz
enter
lret
pushf
iret
or
jne
iret
adc
add
out
cwtl
es
push
pushf
pop
enter
sub
xchg
xlat
cmc
mov
popa
xlat
mov
xor
cs
xor
fistps
std
add
mov
mov
sti
mov
jne
mov
hlt
scas
aad
aad
call
cmp
and
ds
cmc
sbb
cld
sub
in
std
jnp
in
jg
idivb
insb
arpl
push
shrb
sbbb
adc
push
ret
dec
daa
cmp
mov
int3
aad
mov
ss
adc
and
lea
dec
adc
or
and
rcll
sub
pop
js
cmp
sbb
cmp
xchg
push
mov
push
ret
in
jne
test
cmp
xlat
in
cmpsb
pop
lret
xor
adc
sbbb
aaa
or
mov
pop
insl
sub
dec
and
cmp
inc
cmp
cltd
cmc
mov
mov
xchg
jo,pn
mov
xor
paddsb
push
js
mov
enter
cs
sarl
in
dec
xor
cmp
mov
imul
sbb
adc
add
mov
push
cmp
in
xchg
mov
pop
ficomps
xor
xor
popf
mov
in
rcrb
sub
cmp
fnstcw
popl
jmp
sub
rolb
test
sub
cmpsl
incb
sbb
lret
cmp
push
out
push
pop
ja
push
mov
inc
pop
leave
add
or
sub
mov
test
jnp
outsl
cmp
imul
stos
popf
or
sarl
inc
add
pop
ficompl
inc
testl
clc
jnp
mov
pop
lods
push
cmp
lahf
push
popf
and
in
repz
jne
and
leave
scas
loop
outsb
cmp
xor
sbb
out
cltd
insl
cmpsb
stc
inc
mov
clc
lret
sbb
imul
movsl
sbb
push
jge
inc
mov
cmpsl
xor
mov
xchg
mov
sbb
ret
insl
ja
insb
lods
push
jbe
mov
shll
ret
xor
jg
push
sub
pushf
int
aad
dec
pop
loope
pop
stos
lock
cmp
or
fnsave
sub
xchg
cmp
std
lret
out
rorl
jl
test
jmp
inc
push
and
xor
xchg
out
mov
test
insb
adc
mov
dec
mov
mov
mov
adc
loop
es
test
sub
adc
mov
inc
mov
insl
xor
mov
adc
sahf
and
add
aad
push
aad
inc
push
push
notb
and
out
lods
jge
xor
orl
sti
fndisi(8087
jp
bound
call
test
jmp
mov
les
dec
negb
jno
xor
jg
sbb
inc
cltd
pop
cmc
pop
rcr
aad
add
push
sub
out
inc
jg
sub
pop
cld
xorl
sub
pop
push
add
sahf
cmpsb
sti
not
decb
jecxz
lock
pop
incb
lock
pop
or
sar
ja
pop
stos
cmpsl
sbb
lods
loope
fsubs
leave
jb
cmp
jg
movsl
mov
les
test
inc
gs
or
mov
inc
sbb
push
cmp
adc
dec
int3
lods
inc
and
arpl
in
fistl
push
aam
lcall
jno
dec
or
or
lcall
loope
es
mov
cmp
mov
mov
in
mov
or
cli
cmpsb
aas
dec
mov
aas
frstor
nop
sbb
xchg
cmp
bound
loopne
sbb
adc
scas
sbb
call
in
pop
arpl
cmpb
dec
js
lds
xchg
mov
pop
pop
out
stc
out
mov
popf
pop
movsl
aaa
mov
sub
and
mov
pop
or
das
mov
pushf
sbb
stos
push
ljmp
xor
inc
and
into
or
in
into
pop
add
jmp
movsl
or
mov
popa
xor
data16
sahf
jge
pusha
mov
push
mov
xor
repnz
les
push
jo
in
cmp
push
mov
mov
in
ds
sub
adc
dec
pop
mov
jae
cmp
mov
adc
std
or
shl
out
cli
daa
and
stos
jl
pop
adc
jne
ror
ljmp
out
es
cltd
sbb
cmp
and
jns
push
cmp
sub
pop
xor
dec
or
xlat
sub
inc
addr16
inc
jmp
mov
loopne
fisubrl
int3
add
push
icebp
xchg
xchg
jmp
lock
loop
mov
push
push
adc
mov
fdivl
jmp
insb
ljmp
sub
notl
repz
int3
cmp
push
xchg
or
xor
xchg
cmpsl
or
test
test
cmp
jns
stos
ss
sbb
dec
sbb
pushf
cmp
frstor
xor
scas
xchg
mov
push
and
xor
or
push
cmc
mov
lds
add
xor
leave
hlt
dec
add
xchg
imul
imulb
into
mov
inc
mov
mov
int
stc
hlt
out
jmp
shl
out
gs
mov
pop
decb
and
mov
call
scas
cmp
or
mov
mov
and
pop
push
out
pop
xor
mov
jo
adc
sbb
test
movsl
lret
inc
outsl
stc
testb
pop
fstpt
data16
rcrl
ss
jbe
sub
mov
test
pop
sbb
mov
mov
mov
pop
fsubp
sar
leave
jecxz
repnz
sub
xlat
arpl
test
repnz
inc
ret
inc
call
mov
sub
xor
sbb
test
into
out
and
push
sub
lods
stos
xor
xorl
sbb
iret
std
out
xor
imul
or
fdivrl
test
jne
lds
inc
mov
inc
mov
xchg
addr16
push
xchg
ljmp
xchg
leave
mov
jg
xchg
sub
inc
leave
pop
xchg
sub
movb
mov
in
dec
inc
dec
repnz
inc
cmpsl
mov
xchg
push
lock
ror
mov
sub
jp
roll
pop
xchg
and
mov
dec
add
cmp
add
je
xchg
push
mov
popl
shlb
push
xchg
and
into
ja
fwait
cltd
mov
add
ret
lretw
xchg
rorb
aas
jmp
dec
push
mov
flds
push
xchg
fisttps
out
sub
push
aad
arpl
outsl
lcall
xorb
adc
jnp
lret
loop
popf
sbb
daa
das
push
shr
clc
fstps
cmpsl
push
imul
dec
push
and
scas
in
stos
insl
nop
cmc
sub
mov
mov
movsl
inc
push
out
out
lods
fdivrs
test
cmpsb
cmp
push
cmp
xchg
jbe
repnz
mov
js
aam
ljmp
cmp
jmp
pop
mov
sbb
adc
lret
lods
cmpsl
jns
imull
out
imul
jg
loopne
loopne
mov
add
aad
shll
iret
mov
in
lea
enter
sub
subl
scas
movsb
pop
rcrb
ja
mov
mov
jg
mov
aas
inc
inc
outsb
lea
fmul
inc
cmpsb
aam
cmp
rorl
aaa
xlat
out
inc
cmpb
pop
cmp
scas
inc
cmp
sbb
repnz
fldcw
mov
ret
cwtl
pop
imull
add
movsb
sub
adc
daa
mov
out
fdivl
sub
cmpsb
push
xchg
inc
dec
xor
sub
mov
clc
aas
xchg
dec
or
pop
gs
jg
xchg
adc
inc
xchg
push
adc
sub
das
addb
xchg
sub
cli
out
jno
push
xor
sahf
stos
push
bound
pop
dec
pop
daa
add
imulb
push
jg
or
stos
mov
out
aaa
or
movsb
das
daa
push
ret
pop
mov
loop
test
lahf
stc
ret
fnstcw
mov
js
test
xor
and
mov
mov
xchg
inc
gs
into
jo
lahf
arpl
inc
xor
sbb
mov
push
or
lret
jns,pn
xor
xor
mov
loopne
add
xchg
cld
call
shll
in
imul
outsb
es
push
iret
cmp
dec
nop
mov
ss
adc
or
mov
pusha
mov
aas
test
lds
adc
je
lret
in
js
call
lret
mov
lods
jbe
mov
adc
sbb
cmpsb
mov
jmp
wbinvd
inc
shll
lds
ret
call
shufps
xor
add
add
popa
pop
insl
dec
or
jno
cmpsb
xchg
into
adc
lea
push
pop
add
std
xchg
and
nop
mov
jo
stc
int
fildll
popf
cmp
push
icebp
stos
sub
cltd
adc
stos
jecxz
adc
sub
loopne
xchg
xor
sub
mov
out
jecxz
dec
mov
out
jns
jns
xorb
dec
xchg
cs
sbb
mov
fnstsw
scas
adc
xchg
pop
mov
sbb
out
jne
clc
sub
pop
adc
loopne
in
sti
rep
mov
add
shll
test
and
cmp
arpl
or
mov
dec
cltd
in
jb
mov
cmp
mov
push
cld
jle
mov
lock
test
loop
mov
ds
or
scas
jbe
push
enter
or
add
addr16
pop
jle
inc
and
inc
mov
mov
jge
enter
outsl
pop
push
sahf
mov
mov
inc
xchg
mov
test
pop
in
fldz
push
push
pusha
sbb
sbb
pop
clc
in
shr
bound
aad
push
sub
mov
sbb
or
mov
pusha
push
bswap
mov
mov
or
shr
aam
mov
push
fs
mov
fwait
pop
push
clc
mov
and
sub
or
leave
xchg
aam
add
enter
jae
xor
xor
pop
jno
push
xchg
adc
and
outsl
daa
les
jp
fists
mov
xchg
daa
jecxz
push
test
mov
sbb
hlt
inc
lea
cmpl
dec
ss
pop
gs
std
add
je
sbb
sbb
or
push
ret
call
shlb
hlt
cmpsb
inc
lret
mov
sbb
int3
mov
je
jl
dec
test
popa
mov
or
fsubs
aad
in
or
in
sbb
jno
roll
shl
cmp
aaa
dec
push
inc
push
negl
fnstsw
xchg
jae
clc
cwtl
xchg
sub
les
push
mov
pop
xchg
mov
data16
push
insl
clc
data16
jb
out
repnz
int3
repnz
lret
push
cmp
jmp
mov
aas
xchg
aas
aas
sbb
pop
dec
data16
outsb
lods
pop
push
add
adc
pop
jo
jno
fs
mov
sbb
insl
adc
and
sbb
xor
or
xchg
cmp
pop
loop
or
jo
jle
fwait
sub
out
rcr
push
and
mov
xor
sti
in
xor
hlt
add
lods
or
pop
mov
xlat
das
xor
repz
sbb
push
fs
fisubl
fildl
sahf
jmp
dec
dec
or
jno
negb
dec
cmp
imul
push
roll
push
mov
xchg
adc
adc
fstpl
rclb
jecxz
add
gs
pop
shlb
dec
jne
cmp
and
aaa
filds
mov
xor
inc
ds
cmp
dec
sarl
sbb
pop
clc
cmc
lods
cmp
in
lea
dec
sub
pop
scas
pop
test
pop
push
sbb
xor
fisttpll
inc
imul
paddd
pop
enter
pop
cld
and
and
and
je
cmp
outsb
push
and
pop
xor
push
loope
and
stc
push
fbstp
and
out
mov
stos
or
xchg
push
sbb
adc
mov
push
inc
or
sub
mov
xchg
xchg
jno
and
push
movsb
adc
pop
jbe
xchg
lds
cltd
ss
mov
scas
push
ror
push
stos
mov
ljmp
pusha
push
addr16
mov
jne
rcrb
test
pop
inc
sbb
mov
cmp
fld
xchg
dec
movl
mov
cmc
jmp
jmp
movsl
scas
sahf
lahf
mov
les
in
push
jg
pop
cwtl
dec
fcomps
js
jmp
add
lods
inc
jg
repnz
mov
movsl
fcoml
jge
ljmp
xor
jae
shrl
repz
into
mov
push
shrb
xlat
movsb
xchg
in
lahf
pop
sbb
cmp
call
or
add
inc
cwtl
fnstsw
outsl
adc
add
sbb
pop
inc
fcoms
pusha
or
mov
idivl
mov
in
mov
mov
mov
mov
sub
int
xchg
movsb
pop
adc
dec
les
cmp
cmp
mov
xchg
inc
ret
jmp
mov
add
popa
addr16
roll
inc
mov
sbb
mov
add
stos
rcl
jno
or
xchg
mov
mov
mov
les
imul
adc
mov
psubusb
lcall
pop
or
int
cmp
push
repz
jb
add
pop
repnz
loop
mov
dec
mov
rcrl
sbb
dec
pop
inc
sbb
sti
sub
inc
testl
outsl
jns
xchg
ljmp
cld
inc
xchg
add
jecxz
and
out
cld
in
lds
jl
xorl
ss
adc
cwtl
iret
cmpsb
pushf
or
fadd
or
push
xchg
arpl
enter
fdivr
ds
push
sti
adc
xor
jns
fimull
sbb
test
fdivrs
mov
xchg
out
je
shl
fldl
inc
mov
loop
adc
or
push
adc
jge
enter
pop
push
mov
sub
add
sub
sbb
lret
lods
or
xlat
cmpsl
popl
cld
fnsave
push
push
icebp
xchg
je
or
iret
push
dec
lahf
decl
test
pop
pop
scas
sbb
scas
sbb
movsl
lret
rolb
xchg
je
jo
rorb
imul
push
pushf
lret
std
jl
movsb
sub
sahf
jmp
loopne
push
xchg
subb
or
xor
mov
jae
cli
aas
jecxz
xchg
push
push
mov
mov
jl
sub
pop
ljmp
xlat
stos
sub
adc
mov
add
stc
mov
sub
stos
jnp
data16
and
rorb
in
add
lods
les
dec
jp
fxch
push
add
hlt
ljmp
xchg
int
mov
jae
movsb
adc
outsl
movsb
pop
in
shlb
push
sbb
aad
sub
xor
test
cld
mov
icebp
xor
jne
movsb
pop
push
pop
shll
lods
xor
inc
divl
daa
mov
pusha
mov
adc
in
popa
fisubl
leave
jl
std
and
fistpl
mov
ret
push
lret
sbb
fstpl
xlat
push
nop
test
or
std
dec
pop
add
shlb
ds
jg
ret
data16
jmp
push
add
in
aam
movsb
sahf
push
push
fidivl
lods
dec
sti
aas
mov
or
cmpsl
rcrb
lret
and
jns
xchg
sar
push
int3
cmpsb
out
movsb
mov
or
push
or
mov
inc
xchg
shlb
cmpsb
dec
add
fbstp
jmp
add
dec
aam
mov
add
dec
leave
jl
jle
shrl
mov
xchg
fldcw
sbb
aas
mov
arpl
sbb
fsubrl
ss
sahf
std
shrb
push
add
out
pop
add
push
jp
fs
pop
outsl
stos
sub
mov
xchg
bound
inc
daa
jle
or
add
fildl
lahf
pop
cmc
push
sbbb
iret
hlt
sbb
dec
cmpsb
popf
pop
jle
sub
sti
pop
mov
imul
loopne
xchg
push
insb
mov
out
ds
hlt
pop
jecxz
outsl
fidivs
sub
in
pop
inc
mov
in
push
cwtl
xchg
sarl
repz
cmc
outsb
dec
fucomp
sbbl
cmp
outsb
test
je
stos
fsubs
and
cmp
mov
imulb
es
jnp
xor
xchg
flds
iret
jae
das
and
and
add
mov
xor
push
cmpsl
test
push
fs
repz
pop
or
mov
imul
aas
lret
test
pushf
pop
pop
jae
xor
dec
dec
add
dec
xor
jno
adc
notl
fadds
adc
sbb
cmp
leave
dec
fcmovb
cltd
xor
not
sbb
testl
xor
jg
sub
mov
pusha
jnp
out
sub
jne
in
push
in
insl
movsl
xchg
adc
push
jle
loopne
les
inc
sub
xchg
mov
dec
xor
and
mov
mov
es
rcl
dec
aad
inc
cmp
pop
sub
mov
iret
push
xor
push
push
cmc
sub
xchg
jmp
gs
jge
sub
ret
inc
dec
scas
sbb
cmp
mov
fldl
pop
lret
scas
icebp
xor
movsl
jns
shll
fnstsw
and
std
dec
inc
xor
cwtl
pop
sbb
pop
and
xor
les
gs
lods
mov
popa
jns
add
xor
addr16
fnstcw
add
inc
leave
xor
fcomi
cld
addr16
test
mov
je
fadd
push
mov
cmc
imul
mov
cmp
inc
test
sti
dec
out
negb
inc
fcomps
mov
adc
mov
call
xor
adc
iret
mov
dec
cmpsl
nop
or
and
sbb
and
add
aaa
inc
fadds
movsb
insl
ja
fstpt
aas
shrb
dec
add
mov
fwait
xchg
push
test
scas
aam
lds
ret
pop
std
cltd
pop
repz
fdivrl
xorb
jle
pop
cmp
cmp
lret
sbb
adc
and
jno
data16
mov
into
inc
pop
jno
call
jbe
mov
in
or
jecxz
or
pop
inc
mov
imul
fisubs
pop
loope
fisubl
or
jne
loope
popf
inc
push
adc
clc
add
jb
dec
data16
mov
pop
xor
push
xor
xchg
mov
out
aaa
or
mov
leave
enter
xor
lock
jg
lret
in
inc
cmp
test
mov
mov
xor
push
daa
and
xorb
outsl
push
sahf
pop
es
jno
pop
inc
stos
mov
ds
push
xor
add
int
movsl
sarb
xchg
mov
or
cmp
sti
scas
xlat
mov
testl
rclb
es
mov
jmp
out
dec
or
cmpsb
cs
sbb
mov
jp
mov
jg
imul
mov
cwtl
in
adc
jge
stos
sbbl
push
daa
push
xchg
test
and
lret
shrb
int
and
je
mov
inc
arpl
mov
inc
adc
fbld
sbb
loope
loop
lahf
imul
sbb
stos
jns
rorl
outsl
pop
psubsb
popa
push
cli
cmpsb
mov
pushf
pop
pop
push
dec
es
and
std
imul
daa
dec
cmc
cmp
fbld
pop
repnz
popa
xchg
add
lahf
das
jbe
inc
xchg
jmp
pop
or
movsb
dec
jnp
outsl
movsb
mov
xor
jecxz
add
daa
sti
push
loope
int
ret
sub
push
jno
aam
js
dec
repz
cltd
push
outsb
insl
cltd
or
adc
xlat
das
insl
loopne
xchg
inc
pushf
mov
adc
adc
aas
movsb
sbb
jno
jnp
xchg
stc
ficoml
leave
negb
das
lods
pop
aas
movsb
popf
lods
dec
inc
mov
cwtl
xchg
call
shlb
xchg
inc
loope
fdivr
stos
cmp
cs
xchg
pop
ljmp
xor
adc
jnp
fs
mov
je
int3
mov
or
mov
lcall
inc
jmp
mov
lock
push
iret
out
dec
xchg
mov
sub
rcll
and
in
adc
icebp
push
mov
sbb
cmp
mov
pop
std
mov
xchg
out
or
xchg
mov
pop
pop
leave
jp
leave
lds
and
aam
cmp
js
adc
loop
stc
xchg
xchg
or
call
pop
call
lds
sub
sbb
mov
lcall
pushf
sbb
and
leave
mov
jbe
ja
in
std
mov
pop
push
and
ja
test
mov
cmp
push
jo
hlt
mulb
in
stc
aam
add
dec
xchg
fsubs
jge
enter
imul
adc
and
mov
cmpsl
leave
pop
jae
repz
cmc
and
jae
or
test
inc
enter
in
pop
push
or
repnz
shlb
mov
inc
enter
cmp
gs
lcall
mov
xchg
sub
rol
rorb
mov
jge
or
in
fs
mov
sub
clc
jge
dec
shr
adc
pushf
jl
xchg
add
aas
cwtl
mov
in
arpl
mov
jp
lock
mov
add
outsb
mov
adc
es
cmp
push
iret
cmp
notb
stos
add
pop
jnp
mov
mov
sub
push
popf
xor
arpl
movsl
lds
orb
ret
scas
pop
outsl
jb
ret
jns
mov
mov
fwait
cltd
cmpsl
loop
fadds
and
mov
jmp
rcrl
push
xchg
outsl
push
data16
push
push
sub
inc
cmp
sub
dec
in
adc
faddl
sahf
or
ja
into
arpl
popa
fistl
ja
pop
xchg
fiaddl
cld
test
pop
cltd
mov
test
xchg
jns
or
mov
push
add
addr16
and
pop
pop
lea
test
push
dec
sbb
fucomi
sub
sub
scas
dec
aas
std
ficompl
cmp
sbb
cltd
inc
mov
addb
ror
push
mov
cmp
add
loop
subb
dec
sub
aad
aad
fstpl
jge
cmp
and
jmp
gs
cmpb
lahf
sub
mov
jecxz
dec
cmp
xor
icebp
sti
push
ja
pop
ds
cli
out
mov
mov
inc
outsl
idivl
jno
aam
push
xchg
test
loope
rorl
adc
out
dec
sub
sahf
sti
mov
das
rol
pop
sub
lahf
notb
xchg
mov
loopne
mov
sbb
or
jge
sahf
cmp
popl
fstpl
aam
daa
mov
xor
jo
scas
add
aaa
jae
cmc
into
and
js
pop
adcb
daa
mov
adc
sbb
pop
ja
int
in
adc
cltd
dec
insb
repnz
data16
adc
add
xor
sbb
shrb
pop
xchg
mov
xchg
outsb
jns
sub
in
mov
or
inc
aas
mov
es
dec
test
js
mov
sub
loopne
jae
aad
and
mov
adc
arpl
push
test
ficoml
xor
call
cmpsl
or
pop
xchg
sbb
jg
je
iret
jno
test
or
mov
in
loop
clc
xlat
jmp
or
dec
lock
mov
inc
divb
test
jbe
shll
ret
movsb
mov
mov
insl
add
sbb
or
mov
sbb
mov
sub
cltd
call
push
repnz
cmp
jo
and
addl
push
inc
adc
scas
popa
das
cmpsl
jg
xor
outsb
mov
add
insb
cmpb
push
xchg
bound
arpl
subl
xchg
inc
inc
sbb
and
aas
push
dec
in
cmp
push
mov
ds
in
je
es
and
jne
or
jb
in
xchg
and
pop
and
dec
out
ret
xchg
in
cs
xor
sarb
or
je
adc
daa
es
test
dec
dec
jp
and
push
mov
fwait
pop
sub
hlt
sarl
pop
and
sub
or
pop
repnz
lock
stos
bound
bound
orb
imul
sbb
and
in
xchg
in
in
push
fs
push
xchg
or
lret
mov
or
les
add
push
fiadds
ss
movsl
sti
mov
cmpsl
mov
push
inc
test
xchg
sbb
out
pop
leave
es
stc
out
lods
aad
xor
mov
es
lahf
cmp
sbb
dec
in
add
test
push
add
les
mov
stos
pop
jns
sbb
test
add
nop
clc
lret
jle
int
or
inc
bound
push
sub
inc
xor
adc
sub
cmp
pop
jnp
adc
rep
pop
dec
push
push
outsl
dec
jnp
and
outsl
hlt
mov
mov
iret
jno
int
xor
mov
test
ret
fstl
das
pop
adc
call
inc
mov
lock
subl
test
popf
scas
dec
lods
cmp
loope
and
out
xchg
and
notl
push
test
push
mov
pop
hlt
push
push
push
push
nop
push
ret
in
jne
int
out
adc
in
orl
sub
das
or
aad
stos
push
rclb
ret
rol
mov
inc
sub
inc
mov
lods
in
rcrl
pop
add
insl
inc
les
test
das
xor
mov
inc
mov
inc
inc
in
add
dec
in
xchg
sar
mov
popf
hlt
repz
lret
cmp
sti
and
dec
das
mov
dec
xor
push
gs
push
mov
bound
in
push
xor
repz
mov
sub
sub
mov
jecxz
pop
inc
mov
push
loop
adc
leave
loop
rcrb
sub
and
mov
add
jecxz
xor
rclb
inc
mov
testb
mov
xchg
stos
lods
dec
test
jns
mov
sti
sbb
mov
push
pop
jbe
repz
push
xchg
push
aad
or
rorb
test
xor
mov
popa
scas
push
lods
inc
loop
mov
adc
in
cwtl
out
sub
repz
pop
or
sbb
xchg
sbb
add
out
scas
push
filds
jb
dec
das
sbb
inc
mov
arpl
stc
and
xor
in
adc
ret
and
mov
cmc
cli
sub
movsb
arpl
test
inc
lock
lock
push
enter
mov
mov
scas
sbb
xchg
jne
enter
nop
insb
mov
and
xchg
jno
call
xor
bnd
sub
std
pusha
test
sub
sub
mov
jno
pushf
inc
mov
pop
nop
dec
fcomp
outsb
out
add
lock
push
daa
cmp
cld
fwait
mov
fwait
add
dec
adc
mov
and
popa
dec
mov
test
or
ja
int
or
orl
call
andl
out
and
sub
xor
or
loope
adc
enter
mov
jecxz
xor
stos
dec
ss
or
jnp
sub
add
repz
mov
sti
mov
push
fwait
popa
test
mov
cmp
inc
mov
jns
jnp
sub
fcompl
call
xor
and
sbbl
dec
mov
pop
or
xor
cmp
fnstsw
fndisi(8087
es
pop
call
or
shlb
bound
xlat
adc
ds
pop
add
and
pop
xor
sbbb
scas
dec
xor
addr16
push
sub
fcomps
notl
cmc
mov
or
jp
enter
daa
xor
int
clc
add
xchg
pop
mov
mov
and
daa
pusha
clc
sbb
cmp
push
push
aaa
sbb
bound
movsb
mov
jge
imul
aam
scas
add
stos
mov
imul
add
sti
data16
pop
les
xchg
mov
mov
inc
dec
call
jnp
and
arpl
mov
adc
xor
sbb
jbe
push
shr
out
push
movsb
mov
es
test
out
mov
pop
adc
shr
push
rcrl
mov
sub
sbb
scas
mov
jo
lods
shl
cmp
jne
xor
pushf
jg
outsl
mov
insl
shll
mov
xchg
mov
xor
addl
dec
xor
pop
and
pop
xchg
xchg
sbb
leave
jg
sub
lret
es
fisubl
in
enter
mov
popa
sti
les
mov
ss
test
idivb
rcrl
int
jns
cs
push
cwtl
pop
mov
sarl
mov
aad
xchg
divb
push
push
rorl
rolb
add
pop
daa
dec
cmc
xchg
imul
call
sti
and
nop
addl
adc
outsb
or
add
subb
andl
xor
cmp
add
jmp
add
jg
aaa
insl
jecxz
lcall
cwtl
test
ret
repz
rolb
cli
inc
dec
xchg
aam
iret
lret
add
cmpsb
dec
push
sarb
fs
loope
xchg
mov
popf
and
in
jmp
shl
lock
push
jne
add
adc
into
insl
lds
sub
fcomi
mov
shr
and
sbb
cwtl
push
jecxz
push
scas
mov
sbb
shrl
and
iret
lock
out
mov
lods
test
jns
jge
inc
cmc
test
sbb
dec
push
dec
scas
mov
lret
mov
sub
dec
cli
pop
mov
fdivl
push
inc
and
sahf
loopne
popf
sbb
ret
mov
leave
jmp
pop
adc
xorl
xor
push
arpl
cmp
les
adc
lock
inc
rorb
int3
cmpsb
out
roll
xchg
adc
push
insb
test
dec
stos
popa
cmp
aas
pop
cwtl
out
leave
jns
xor
inc
lret
iret
sub
xor
xlat
stc
in
xor
mov
lret
jge
insb
out
lds
dec
lahf
scas
lods
sbb
add
and
rorb
sub
and
mov
xor
inc
add
test
subl
ja
lahf
mov
pop
and
mov
add
sub
push
jmp
xchg
mov
popaw
sub
cmp
pop
push
cmp
pop
call
int3
popf
dec
out
jecxz
in
pop
js
push
mov
pop
call
add
mov
movsl
push
cltd
lret
nop
cli
lret
arpl
inc
sub
mov
dec
inc
lock
in
and
int3
cmpsb
or
push
adc
in
xor
iret
cmpsl
add
rep
inc
xlat
cld
fwait
loop
sbb
sbb
ds
jno
dec
mov
pushl
jns
lahf
and
mov
add
std
in
xor
daa
aam
cmc
sbb
pop
pop
movl
aad
test
hlt
push
push
in
lds
movsb
ds
adc
add
mov
add
test
jmp
mov
inc
aad
inc
xchg
enter
push
shll
scas
add
mov
rolb
int3
and
stos
mov
jecxz
out
mov
pop
mov
push
out
mov
std
mov
sbb
mov
mov
jb
mov
iret
inc
popa
add
mov
scas
xchg
inc
rolb
mov
rclb
xchg
or
or
jne
adc
out
mov
mov
lahf
add
cmp
mov
jns
fsubrl
cltd
push
gs
lret
mov
fbstp
mov
jecxz
push
loope
out
dec
xchg
inc
jne
stos
and
pop
cli
mov
pop
push
sub
in
nop
shll
mov
aas
adc
mov
inc
dec
std
ds
stos
sbb
xor
mov
mov
dec
es
mov
and
mov
push
pusha
cmpsb
mov
pop
cs
fs
cmp
sbb
ja
push
repz
push
mov
jge
jmp
lahf
clc
mov
mov
add
push
mov
fwait
mov
add
aam
xchg
loop
add
and
and
cwtl
push
add
ja
test
jo
rolb
sub
push
jp
andnps
rorb
and
mov
imul
pop
xorl
adc
int3
std
scas
aam
push
sub
ret
and
sbb
pop
sarb
jns
shrb
sbb
fisttpll
in
lods
cld
push
mov
std
enter
cmp
xor
pop
or
cmp
movsb
loope
push
out
lock
dec
adc
sbb
cmc
js
pop
fcoms
mov
das
in
and
add
test
ljmp
and
xor
mov
sub
fwait
iret
pop
mov
cs
sahf
xor
push
fimuls
xchg
pop
mov
sti
sbb
mov
fisubl
daa
gs
movl
scas
jno
aam
pop
nop
jg
in
mov
int
push
push
sub
cmpsl
test
les
xor
xchg
push
ljmp
push
adc
jmp
sti
xchg
popf
pop
aas
push
scas
mov
lret
jae
aas
lret
scas
das
mov
fidivs
daa
psubsw
xchg
adc
je
lcall
pop
loopne
mov
adc
adc
xchg
add
cmc
jle
mov
es
stc
mov
cmp
arpl
push
call
roll
xchg
push
dec
addb
jno
jl
push
dec
push
rolb
push
push
ljmp
xor
sub
cli
int3
in
add
xchg
clc
pop
mov
push
lock
repz
popf
xor
outsb
cli
sbb
es
mov
sti
test
in
icebp
xor
nop
sbb
pusha
test
imul
inc
mov
adc
vmwrite
push
and
push
mov
out
imul
test
or
jnp
sbb
xlat
mov
daa
adc
cs
pop
cmp
gs
imul
pop
int3
lret
stos
adc
rorl
loopne
push
pop
push
push
xor
in
lods
jo
andl
in
cmp
add
mov
jp
hlt
call
out
ss
testb
std
cwtl
push
inc
clc
cmp
inc
push
mov
pop
xor
adc
dec
ss
in
scas
pop
decl
stos
lret
jnp
jne
mov
or
pop
ljmp
mov
dec
push
lods
adc
mov
nop
repnz
mov
test
cld
stos
jg
dec
js
dec
mov
mov
stc
stos
mov
lods
xor
add
das
sbb
shlb
push
sub
inc
stc
std
lret
push
cmpsb
in
faddl
setl
push
mov
stos
dec
ret
mov
add
rorl
inc
or
adc
mov
dec
mov
loope
mulb
mov
jle
mov
sbb
cmp
lds
je
mov
or
lods
bound
or
push
mov
cmp
mov
and
xchg
or
inc
ds
js
sbb
repz
add
adc
lahf
cwtl
leave
cmp
stc
andb
sbb
sbb
test
popf
stc
aaa
in
outsb
cli
ja
call
scas
clc
adc
xchg
mov
mov
in
jne
mov
scas
lds
mov
jne
mov
dec
cs
leave
fdivrl
adc
adc
mov
adc
test
lods
lds
aad
inc
aaa
stos
or
pushf
or
stc
push
or
push
mov
scas
inc
icebp
jmp
aaa
ror
mov
xchg
insb
push
es
js
lea
mov
fildll
fbstp
ret
outsl
lock
and
push
jb
imul
in
scas
jb
pop
in
xor
adc
cs
jns
imul
dec
sarb
loop
and
js
cmp
leave
pop
add
js
cltd
mov
push
shlb
clc
movsb
mov
cli
es
in
push
test
xchg
jl
lea
lea
inc
rcl
lret
idivl
adc
ss
sti
je
push
loopne
jnp
mov
xor
mov
jl
sbb
mov
xchg
cmpsb
push
xor
xlat
add
stos
jecxz
test
dec
out
inc
push
mov
push
or
mov
roll
mov
fsubp
test
mov
test
pop
loope
xchg
cmp
subb
pop
fs
int3
adc
add
outsb
mov
jo
add
loop
shl
ficompl
mov
stos
or
dec
in
in
mov
stc
dec
or
xchg
pop
cmp
jmp
dec
add
das
mov
sarb
and
pop
pushf
test
dec
jle
int3
xor
mov
fimull
ljmp
mov
jbe
mov
and
xor
dec
dec
repnz
iret
and
mov
dec
sti
and
mov
push
sahf
mov
adc
lahf
inc
arpl
movl
add
pop
cmp
in
mov
cld
pop
outsl
mov
adc
sub
test
in
out
outsl
pop
test
xchg
dec
stos
pop
dec
mov
imul
and
mov
nop
lds
sbb
jmp
inc
sbb
dec
into
bnd
push
cmpsb
mov
in
jne
mov
in
mov
cmp
and
mov
mov
loop
and
cltd
jmp
push
mov
add
cli
lods
jnp
rcrl
or
inc
dec
mov
mov
xchg
insb
pop
repz
mov
adc
repnz
mov
subb
stos
loope
dec
inc
xchg
out
jno
fdivrl
sahf
hlt
fiaddl
sahf
or
shlb
outsb
and
scas
mov
and
pop
in
cli
inc
gs
mov
subl
rclb
dec
outsl
shl
cltd
push
push
neg
imul
aad
jne
inc
pop
add
iret
push
cli
nop
sti
mov
or
into
jno
fldcw
cmp
pushf
lods
movsl
pop
sbb
das
cmp
sbb
orl
sbb
pop
push
ret
pop
mov
cmp
aad
cmp
scas
push
fwait
cmp
or
fwait
jp
pop
sahf
mov
and
test
loop
andb
sbb
rcrb
add
xor
push
mov
into
repnz
ljmp
cltd
cmc
out
push
jo
mov
mov
xor
movsb
add
cld
sahf
push
fsts
loope
sub
inc
dec
xlat
mov
push
push
popa
ja
sti
mov
push
scas
mov
jae
icebp
bound
add
jecxz
test
jnp
hlt
pop
sbb
add
lock
cld
popa
mov
repz
lcall
push
fucomip
popa
push
sub
push
xor
lods
pop
sub
mov
les
jmp
cmc
push
adc
cmpsb
cld
add
or
mov
lods
stos
and
call
mov
into
adc
xchg
sbb
jecxz
mov
xchg
fsubrs
jp
shrl
shrl
xor
sub
sti
sub
inc
stc
jmp
lret
pop
hlt
sub
push
adc
fisubrl
or
xchg
js
fists
stos
arpl
imul
lcall
or
xchg
cmovs
jbe
sbb
adc
fimuls
adc
movsl
and
cmp
jmp
xchg
or
xor
in
pop
pop
daa
stos
dec
xor
push
insl
lcall
dec
and
arpl
sahf
mov
mov
xchg
xchg
and
or
test
les
xor
in
lods
or
add
xchg
cmpsl
lods
cltd
mov
pop
out
clc
lret
pop
addr16
es
mov
cld
scas
fstp
jp
adcb
xchg
shlb
js
data16
mov
add
inc
nop
outsl
jg
push
lea
mov
inc
pop
pop
jb
lea
pop
push
jno
xchg
sti
cs
xchg
les
std
gs
cmp
lret
shlb
push
pop
push
loope
imul
xor
mov
cmp
sub
sbb
and
mov
xor
mov
loope
sahf
cmp
cmp
pusha
test
mov
sbb
loope
leave
jnp
jnp
cmp
test
fcompl
add
adc
test
mov
jecxz
and
fsubs
pop
xlat
cmp
mov
call
insl
jl
ja
ljmp
or
or
dec
je
stos
test
fdivr
mov
cmc
or
mov
jle
lock
pop
jl
adc
mov
addr16
hlt
add
stos
mov
dec
sbb
pop
repz
mov
pop
pop
sbb
out
or
clc
jae
mov
ds
imul
stos
pusha
arpl
scas
inc
xor
fsubrl
pusha
dec
adc
in
pop
aaa
dec
xchg
sahf
push
lret
mov
iret
xchg
mov
inc
push
pop
inc
xorb
mov
fdivrs
mov
mov
xor
pop
add
data16
sub
cltd
xchg
jo
and
insb
jbe
jne
sub
add
stos
aaa
out
push
cmp
repnz
cmpsl
pop
mov
cld
mov
xor
and
inc
mov
ficompl
into
mov
loopne
pop
push
pushf
insb
xchg
cmp
dec
jno
addl
mov
sahf
mov
shlb
sahf
mov
push
js
and
out
loopne
leave
pop
notl
mov
mov
mov
and
stos
cmp
insl
int3
fcmovne
div
xor
addr16
gs
icebp
xlat
test
shrb
dec
movsb
mov
inc
xchg
mov
repnz
daa
dec
loop
hlt
mov
out
jmp
out
xor
pop
cwtl
sub
xchg
xchg
stc
stos
mov
clc
jle
or
mov
push
and
sti
push
adc
test
out
mov
mov
int
outsl
outsb
push
push
addb
add
and
or
xchg
inc
mov
add
addr16
icebp
sub
lret
push
or
xchg
in
dec
adc
jns
jge
inc
pop
dec
dec
xlat
xchg
sahf
scas
and
in
mov
gs
xor
clc
andb
mov
or
cmpsl
jbe
xorl
rol
ret
pop
test
sbb
std
mov
les
xchg
add
popf
in
arpl
add
in
aad
fmuls
add
push
fs
in
imul
sub
jmp
adc
and
push
inc
sahf
add
rcll
xchg
and
pop
pushf
lret
xlat
push
xor
andb
shlb
pop
stos
outsb
adc
jne
testb
inc
push
inc
push
call
dec
pop
call
pop
lcall
push
int
or
insb
fdivrs
cmp
push
jbe
xchg
mov
sysret
js
mov
xlat
in
jmp
lods
fbld
fidivrs
push
lods
or
cmp
inc
ds
mov
lods
add
test
insl
mov
lahf
ss
fbstp
ja
aaa
test
xchg
ret
adc
xor
test
mov
aaa
sahf
lods
push
stc
lea
int3
inc
mov
or
in
xchg
jge
mov
sahf
ja
mov
jns
icebp
mov
loopne
into
arpl
add
xorl
dec
rcrl
clc
mov
out
adc
xor
push
xchg
movzwl
fisubs
test
nop
out
sub
shl
sub
aam
jle
movsb
fimuls
push
ds
lea
js
mov
inc
rclb
in
fwait
push
sbb
out
pop
lods
fnstenv
hlt
mov
adc
or
movsl
push
in
add
cmc
or
sbbl
add
push
dec
bswap
push
js
or
xor
cmovle
jno
push
sbbb
add
leave
xor
pop
adc
mov
add
push
or
stc
cmp
adc
and
or
ds
and
insb
lods
insb
fidivl
cwtl
ljmp
mov
dec
lahf
xchg
aad
push
out
push
push
aam
jb
in
mov
mov
inc
jecxz
push
mov
popa
jl
inc
or
ds
push
lock
pop
adc
aaa
xchg
lcall
repnz
mov
nop
dec
or
mov
cmp
outsl
pop
adc
push
cmpsb
dec
in
push
mov
divb
sbb
push
dec
add
pop
adc
xchg
xchg
inc
ja
fs
xchg
addr16
pop
lahf
mov
push
insl
jne
popf
jbe
insb
xor
dec
lock
push
mul
add
jecxz
adc
repz
dec
je
inc
mov
sahf
inc
pop
mov
push
cwtl
das
call
cmp
pop
es
push
aam
adc
jge
test
mov
cltd
add
iret
test
daa
cld
out
mov
mov
xchg
or
cmp
inc
enter
lods
aam
test
fstl
sbb
imul
ret
idiv
rcl
enter
sbb
mov
add
fs
pop
sbb
dec
mov
insl
scas
cmp
fnstsw
fldt
mov
push
nop
icebp
imul
movsl
gs
adc
movl
dec
pop
mov
outsl
enter
inc
out
add
stc
ds
mov
mov
cmpsl
outsb
add
sbb
or
adc
add
mov
push
jge
in
aam
sbb
and
orb
mov
in
loope
pop
xor
inc
pushl
xchg
in
nop
rcrl
fcomp
push
mov
pusha
fldl
pop
jl
jns,pt
clc
and
xchg
adc
insb
stc
nop
inc
lds
dec
aas
cmp
push
lods
filds
icebp
es
inc
aas
add
cld
xorb
pop
mov
mov
and
iret
cmc
adc
xchg
mov
mov
leave
test
adc
push
jnp
adc
mov
lahf
fistl
shll
mov
jo
das
inc
push
sub
inc
jne
xlat
in
cmpl
push
mov
out
push
mov
jmp
dec
add
sbb
sar
xor
add
iret
test
and
ljmp
lret
dec
sub
and
adc
jl
cmp
fadds
mov
jp
test
or
xor
test
popf
and
mov
push
or
dec
cmp
add
les
mov
sub
stc
and
add
sbb
xchg
sub
sub
outsb
adc
scas
jo
xor
push
pop
fdivl
leave
add
jnp
jne
sbb
fimuls
insl
xchg
mov
and
dec
scas
pop
push
es
cmp
xor
sub
inc
push
lock
daa
xchg
pop
mov
sub
cwtl
adc
cwtl
push
aas
roll
mov
sub
fcoms
mov
sti
ss
mov
repnz
clc
or
lcall
jg
sbb
call
inc
or
clc
jns
cmpsb
outsl
dec
jge
lea
jno
cli
ss
xchg
out
sub
andb
test
testb
pop
punpckhbw
mov
nop
ds
call
mov
inc
sbbb
adc
cs
notl
dec
popa
aas
push
xchg
add
iret
cld
xchg
and
insl
out
sub
lret
inc
and
rclb
dec
outsl
pop
mov
lahf
movsb
dec
sub
add
sub
mov
adc
sub
pushf
mov
mov
jae
sbb
aaa
clc
fiaddl
or
outsl
pop
mov
sbb
enter
mov
aaa
das
in
jp
push
pop
cs
cmp
rcll
push
sti
mov
int3
fisttpl
and
mov
mov
lods
iret
bound
push
lcall
int3
inc
in
sarl
cmpsl
mov
add
ja
sub
dec
negl
mov
cmp
data16
push
sub
jl
adc
sub
clc
sub
add
mov
je
imul
jb
xor
cmp
dec
jl
out
xor
xchg
movsb
inc
clc
sub
push
xor
jo
add
movsl
lret
scas
xor
fiadds
dec
mov
xchg
xchg
stc
std
adc
add
out
aad
sub
ljmp
nop
xor
jge
push
push
sub
les
lahf
test
cmp
in
aam
sub
out
xchg
mov
mov
js
or
or
out
inc
pop
imul
fdivrl
push
shr
xchg
idivl
fists
ljmp
repnz
jg
insl
pop
xor
mov
mov
mov
adc
es
jge
inc
mov
insl
inc
iret
pushl
inc
test
loope
sbb
jo
lahf
in
push
aaa
adcb
add
rol
pusha
lock
mov
dec
fldl
lea
cmp
mov
add
mov
out
rcrl
test
lahf
out
add
adc
cwtl
bound
push
cld
addr16
scas
cld
and
mov
cmp
mov
shl
xor
inc
inc
or
lds
js
mov
in
aad
in
xor
push
mov
jne
mov
jg
cmp
leave
fnstsw
insb
lea
ljmp
mov
push
insb
add
cmp
jle
ja
push
xor
sub
sbb
insb
jnp
adc
sub
and
lds
jecxz
xor
scas
cld
and
dec
sbb
inc
push
stos
cltd
ljmp
adc
mov
push
mov
sub
push
pop
mov
xor
push
inc
mov
test
cli
or
dec
or
out
int
sbb
shr
popf
xchg
clc
jecxz
addr16
mov
sbb
push
insl
cmp
js
in
fchs
add
gs
push
xchg
mov
outsl
scas
fists
lret
ss
push
pop
movsb
sbb
sbb
mov
stos
hlt
pop
std
dec
cmp
mov
push
jae
xchg
cmpsb
jae
mov
leave
fnstenv
pop
xor
cwtl
mov
add
das
mov
test
int
mov
call
xlat
fisubrl
mov
cmp
push
xchg
xor
sbb
test
dec
xchg
add
cmp
add
or
js
fwait
adc
lahf
leave
gs
mov
cmc
out
aas
pop
pushf
out
loop
pusha
xchg
cwtl
rorl
push
int
pop
fnstenv
aam
jns
mov
fbstp
ret
pop
jnp
xlat
mov
cwtl
add
xor
add
or
enter
mov
pop
ds
sub
pop
fs
xor
xchg
subl
mov
jle
mov
js
xchg
jmp
hlt
ret
out
adc
dec
test
cmp
mov
aad
filds
aam
je
imul
xchg
mov
adcl
lahf
js
push
pop
insb
and
xchg
outsb
push
mov
push
clc
push
dec
add
push
mov
mov
jge
std
or
js
push
mov
les
and
mov
jmp
mov
test
jp
pop
movsb
out
iret
pop
test
add
xchg
sbb
ss
cmpsl
sub
push
cli
rcll
pusha
inc
dec
xor
fstps
rolb
arpl
inc
xor
lahf
sahf
sbb
arpl
repnz
xchg
jbe
out
arpl
push
adc
insl
insb
mov
push
arpl
fimull
sbb
xchg
movsl
aam
xchg
mov
xor
ret
pop
pop
lea
nop
xchg
dec
nop
cmp
lret
je
shll
push
or
leave
dec
test
lcall
mov
jnp
pop
adc
or
jl
pop
add
xchg
ja
pusha
pop
jp
lods
add
ret
pop
daa
mov
jg
pop
nop
cmp
jge
or
js
add
fistpll
lahf
pop
popa
imul
sbb
shlb
jae
jp
sbb
adc
inc
das
insl
pushf
mov
jmp
fisttpll
mov
das
xchg
add
stc
in
or
mov
adc
fwait
aad
icebp
stc
adc
push
call
clc
or
jmp
in
loop
cmp
push
test
xlat
lcall
push
push
inc
or
popf
jbe
orl
sub
add
dec
aad
cmp
aam
or
inc
xchg
sti
mov
jge
cmp
push
adc
test
jb
pop
and
les
dec
add
pop
cmp
cmp
add
into
out
shrb
or
push
mov
push
mov
shl
mov
mov
lock
and
push
mov
adc
mov
push
sbb
mov
or
test
pop
add
in
idivb
push
pop
jnp
aaa
ret
xorl
sub
test
stos
or
push
mov
xchg
xor
lret
adc
cmpsl
mov
add
cmp
push
pop
fs
lock
ficoms
jl
stos
push
jo
movsb
sbb
sbb
int3
jne
shll
adc
mov
iret
iret
or
sbb
xor
fwait
pop
dec
inc
js
xchg
loop
inc
xchg
jb
divl
test
xor
push
pop
stos
lcall
pop
xchg
clc
popa
add
shll
seto
jmp
push
stos
adc
lods
add
dec
icebp
sahf
cmp
or
test
fsubrs
xor
inc
cmp
sub
lock
dec
cltd
out
aad
or
fisubrl
pop
sbbb
movsb
clc
dec
call
jp
out
outsl
jmp
fldcw
not
xorb
and
cmp
data16
imul
and
push
ljmp
repz
orl
mov
inc
push
xlat
ret
inc
lea
out
lea
pop
loop
fcmovb
xor
jl
mov
adc
adc
int
test
cmpsb
xchg
lods
and
ret
jo
pop
stos
mov
loope
in
jnp
pop
mov
and
xor
sub
dec
xchg
and
out
cmp
mov
fisubs
out
push
aam
scas
out
mov
sbb
test
int
dec
mov
mov
dec
xor
push
enter
adcl
push
mov
or
jns
into
or
loopne
ret
cmpsl
sub
rorl
fadds
pop
and
mov
arpl
or
js
cli
enter
or
jo
jmp
adc
push
cmc
inc
leave
push
xor
lahf
sbb
and
xchg
gs
bound
popa
mov
or
enter
movsl
fstpl
pop
iret
mov
repnz
or
add
pop
xchg
testl
pop
fwait
xchg
mov
outsl
mov
faddl
pop
pop
cmpsl
jno
test
iret
jl
sbb
pushf
mov
jns
mov
inc
clc
jp
xchg
in
lret
sub
jbe
imulb
std
in
inc
ja
jecxz
int
out
aad
out
lds
cld
push
in
je
mov
loop
push
xor
repz
gs
mov
jbe
insl
jne
cltd
fidivrs
pop
dec
push
xchg
mov
mov
xchg
and
insl
enter
jne
gs
fs
pop
xchg
rcrl
ds
out
cld
je
add
int
xor
xlat
scas
jae
jmp
inc
push
add
in
imul
jae
sub
and
and
mov
cmp
in
in
clc
lret
add
aam
hlt
pop
sti
mov
hlt
mov
out
jp
mov
jle
adc
push
stc
cwtl
push
leave
adc
aaa
lea
jae
popf
fists
out
cmc
faddl
in
mov
cmp
lock
insb
mov
addb
mov
and
xor
scas
pop
pop
pop
add
shl
xchg
aas
lea
xchg
cmpsb
pusha
lcall
js
and
jae
xchg
mov
rcl
cmpsl
pop
xor
sbb
ror
div
xchg
cmpl
lock
pop
in
mov
or
in
pushf
jle
xchg
cmp
movsb
sbb
sbb
mov
data16
cs
sbb
cmp
mov
negl
push
jge
mov
gs
xorl
push
sbb
pushf
fsubr
mov
mov
or
popf
insb
mov
mov
imul
add
scas
adc
jae
repnz
sbb
and
mov
out
and
cmovno
sbb
lcall
xchg
cwtl
rclb
or
cld
mov
and
popl
adcl
mov
cmp
inc
or
insl
shrl
mov
mov
cld
jmp
fidivl
je
cmpb
sub
sub
movsl
fsubl
pop
roll
test
fwait
sub
int3
mov
daa
dec
xchg
fs
add
pop
lret
mov
aad
cmp
and
mov
xacquire
push
jl
insb
incl
mov
pop
sbb
xor
xlat
jp
sti
jae
arpl
ja
mov
inc
mov
das
jno
roll
mov
cli
outsb
and
test
ja
push
push
ret
add
fsub
xor
jns
cltd
ret
mov
lea
mov
scas
pop
and
xchg
sub
lahf
rorb
lods
bswap
insl
fadds
add
pushf
add
outsl
shlb
mov
pop
dec
cmpsb
enter
add
enter
and
test
add
fisttpl
es
mov
add
aaa
mov
sub
pushf
jg
ss
push
fnstenv
push
dec
cmpsb
or
push
and
mov
cld
arpl
sti
movsb
push
dec
sub
sbb
stos
rclb
adc
insb
ffree
aad
xchg
xchg
daa
faddl
mov
outsl
jge
mov
enter
mov
inc
pushf
call
dec
enter
push
xlat
mov
sub
mov
movsl
pop
in
sub
fwait
xchg
pop
push
jg
iret
add
dec
sti
xchg
cmpsl
lahf
pop
insl
push
popa
ss
push
xchg
gs
cwtl
add
and
adc
cs
inc
shlb
std
scas
push
xor
and
fiaddl
fs
xchg
popa
and
inc
lea
lds
pop
add
and
jg
call
push
jmp
jg
mov
mov
imul
lret
mov
shlb
dec
inc
pushf
dec
xchg
xchg
adc
pop
aad
out
add
jg
sub
cmc
arpl
ljmp
and
shll
dec
adc
test
ljmp
cmp
add
lods
stc
or
insl
lods
pop
lods
jae
shrl
and
dec
cmpsb
insl
cmp
jl
loope
push
jmp
mov
cmp
lods
mov
bound
psrld
adc
popf
or
or
xchg
inc
outsl
or
lds
gs
pop
mov
or
push
lods
mulb
sub
push
popf
lret
stc
stc
addr16
or
cld
shll
lods
mov
int
sbb
inc
aas
or
fadds
sarb
inc
push
cs
push
ret
outsb
jecxz
pop
cmpsb
int
sbb
jae
mov
jne
mov
test
mov
xchg
notb
sub
lret
imul
sahf
in
aaa
mov
stc
sub
mov
into
outsb
xor
es
sub
mov
and
dec
dec
es
push
jp
sub
imul
sub
lock
or
jns
inc
fcmovnbe
jmp
sub
adc
rorl
scas
mov
frstor
dec
mov
mov
xchg
dec
cs
sbb
or
shrl
inc
std
mov
add
adc
fnstsw
mov
xchg
pop
call
pop
and
and
cmpsb
fs
ror
mov
pusha
ret
test
mov
out
xchg
loop
mov
fxch
inc
lcall
outsb
fnsave
cmp
xchg
push
push
faddl
imul
mov
pushf
leave
and
ds
ljmp
ds
push
lods
fwait
mov
push
outsl
ret
imul
fld
arpl
pop
dec
push
sub
decb
adc
or
adc
push
and
inc
fstpt
add
sub
mov
lcall
jnp
lret
addr16
aad
push
push
arpl
jecxz
or
jmp
cmp
mov
in
out
fwait
xchg
or
iret
das
jo
mov
mov
stos
popl
adc
and
aas
inc
fwait
and
jmp
cmp
movsb
mov
iretw
imul
push
push
loope
dec
sub
leave
xchg
sub
mov
pop
or
mov
out
adc
xor
sbb
sarl
mov
or
xchg
jg
mov
iret
jmp
jns
mov
mov
rcr
call
xchg
dec
or
mov
lods
mov
adc
push
mov
cmc
mov
and
orb
fisubrl
sub
push
adcb
jecxz
cmp
jmp
das
mov
xchg
shr
mov
pop
sub
out
jae
xor
jb
aas
add
test
cmp
imul
data16
fstps
int
leave
dec
test
stos
das
adc
out
aam
inc
lods
cmpsl
mov
je
or
mov
sbb
stc
mov
dec
test
mov
jp
int3
jecxz
mov
cwtl
push
mov
int
jecxz
xchg
pop
aad
lahf
mov
add
adc
mov
mov
or
arpl
pusha
push
test
inc
cmpsw
mov
imul
and
sbb
or
mov
aam
loop
dec
dec
jno
push
loop
dec
pop
cltd
int3
xchg
sub
data16
aam
in
aam
adc
aas
ljmp
pop
jns
je
xchg
adc
push
in
stos
aam
jmp
pop
or
fucomip
mov
in
aas
cmp
mov
cmp
popl
test
xchg
cmc
mull
push
call
adc
repz
ljmp
rorb
out
pop
ss
aad
pop
out
xlat
mov
pop
into
mov
orb
jl
iret
scas
mov
sub
movsb
sub
cmpsb
pop
inc
sub
icebp
xor
cmp
dec
or
jbe
lds
enter
mov
or
and
ljmp
dec
sub
push
xchg
icebp
add
enter
ficompl
stos
arpl
mov
adc
gs
xchg
mov
movsb
lret
lea
out
lahf
nop
mov
push
loopne
and
inc
sbb
adc
lret
mov
out
sbb
lret
pushf
in
aaa
into
iret
xchg
mov
jbe
jecxz
inc
cs
or
popf
in
cs
es
test
negl
call
ljmp
int
fisubrs
xchg
insb
test
pusha
jbe
fwait
push
dec
inc
and
rol
jge
pushf
inc
rorb
inc
cltd
repnz
xor
aaa
gs
clc
cmp
call
add
lea
shrl
dec
std
xor
sbb
add
xchg
adc
add
ficoms
cltd
adc
dec
or
sbb
sub
xor
push
movsl
fdivrl
mov
and
ficompl
roll
jae
mov
call
push
and
inc
test
mov
shll
data16
push
es
push
gs
xchg
cld
and
lds
ret
and
lea
cld
cli
mov
jmp
ret
lret
xchg
in
jo
inc
scas
adc
push
fsubs
inc
ret
mov
jno
mov
xor
xor
or
inc
outsl
jo
inc
lcall
inc
adc
xchg
loope
mov
inc
or
add
es
sub
cwtl
inc
mov
pop
testl
inc
sbb
add
inc
das
cwtl
pushw
lret
sbb
mov
ja
stos
leave
call
push
xor
ds
div
sahf
aas
sbb
dec
mov
inc
lea
leave
adc
push
push
xlat
insl
test
rorb
cmp
sbb
outsb
inc
in
pop
fdivrp
das
ret
clc
xchg
mov
push
lock
fldenv
push
jbe
scas
dec
insl
roll
mov
cltd
inc
ss
and
out
xchg
mov
xor
test
lcall
test
scas
inc
loopne
push
mov
xchg
xorl
int3
ss
js
dec
popf
jb
out
scas
mov
push
iret
cltd
data16
jns
fcoml
nop
ret
mov
jno
and
sbb
mov
cmpb
cmp
lret
mov
sti
daa
outsl
imul
mov
imul
fidivl
adc
enter
mov
test
imul
xchg
or
test
sub
test
lea
fsubl
std
test
adc
or
cmp
jmp
cld
jo
push
and
test
push
xor
hlt
aam
loop
mov
mov
test
lahf
pop
cmpsb
cmp
test
pop
dec
aas
add
repz
mov
xchg
aas
push
roll
pop
sbb
not
lahf
cltd
xor
cmp
subb
mov
pop
cmp
stc
jae
sahf
mov
pop
dec
cmpsb
xchg
jns
cs
div
aad
rcll
add
lods
jo
mov
enter
es
repnz
les
mov
push
push
inc
jb
push
sub
push
cmp
test
mov
xor
xchg
aas
mov
push
inc
xor
pusha
and
inc
enter
add
xor
mov
mov
shlb
cmp
dec
and
stos
adc
jns
aas
mov
mov
inc
jmp
adc
nop
incb
pop
hlt
dec
sbb
jne
xchg
xchg
cmp
mov
inc
stos
mov
pop
pusha
push
bound
out
push
sarl
or
aam
jno
sbb
add
jb
test
xchg
sarb
ror
pop
xchg
inc
ret
fnstcw
fmuls
imul
inc
fcomps
and
stos
sub
dec
repz
xor
dec
push
xchg
mov
ja
adc
mov
stos
loopne
adc
lods
xchg
loopne
dec
movsl
sbb
fldl
mov
cmpsl
cs
and
loop
pushf
lret
test
lret
xchg
push
xor
jbe
std
testl
pop
pop
jnp
xchg
mov
xchg
loop
mov
push
cmp
loopne
push
out
scas
xor
push
and
cmpsl
push
scas
inc
icebp
test
and
pop
test
jle
lea
js
add
sub
mov
push
sbb
es
cltd
out
sub
out
fwait
adc
call
mov
movsb
mov
movsl
sbb
xchg
dec
push
sbb
inc
lock
jb
dec
push
dec
imul
xorb
push
adcl
jge
mov
jb
in
add
pushl
xor
mov
cmp
push
and
adc
fmul
mov
aad
fadd
push
int
nop
scas
enter
cmp
out
mov
lods
hlt
clc
andl
cmc
push
mov
cmp
jle
jnp
pop
pusha
aaa
fistpll
adc
fadd
and
movsl
push
jns
loope
fistl
andb
cmp
test
adc
adc
testl
and
cmp
pushf
fs
scas
cmc
ficoml
jbe
pop
insb
mov
test
fstps
add
mov
sbb
pop
jne
jecxz
popa
cmp
fwait
push
inc
popf
lds
pop
repz
mov
mov
bnd
out
stc
rcrl
xor
cmp
dec
cmpb
ljmp
fmuls
int
sub
add
adc
dec
dec
sub
pop
add
pushf
fidivl
pop
xchg
or
lods
lea
lcall
rclb
lods
cltd
mov
adc
dec
jle
xor
popf
push
jb
into
std
mov
into
mov
dec
sarl
int3
pop
push
std
push
xchg
scas
scas
sti
ret
add
mov
inc
pop
sbb
jg
jg
imul
push
lea
loopne
sub
js
xor
mov
jmp
int
pop
aad
dec
lea
int
push
call
cmp
mov
les
shl
or
and
or
mov
das
or
sahf
ret
bound
js
push
push
jmp
dec
dec
fnstcw
jns
or
pop
sbb
pop
or
dec
gs
ret
xor
mov
in
stc
adc
out
scas
nop
cld
enter
lea
push
js
pop
or
imul
scas
jo
push
and
and
call
jb
jns
cmp
jo
inc
or
mov
jmp
xor
pop
movsb
xor
and
dec
dec
out
push
and
push
aam
jne
adc
push
std
mov
lock
pop
ss
ss
pop
fisubs
xchg
popa
in
pop
mov
jbe
add
mov
mov
daa
sahf
adc
sar
mov
popf
notl
jae
aad
icebp
add
xor
rolb
dec
mov
inc
ficoml
test
mov
aas
scas
leave
sbb
pop
popf
ss
mov
ljmp
movsb
xor
fidivl
mov
mov
jecxz
mov
mov
fisttpll
xor
outsl
ret
adc
gs
cmp
and
mov
mov
clc
je
das
leave
cmp
cmpl
add
shrl
jl
in
pusha
das
aas
scas
mov
push
loope
leave
mov
cmc
call
sbb
xchg
mov
je
jno
scas
call
loope
adc
inc
popf
cld
sub
inc
jnp
sub
mov
lea
jmp
rclb
mov
add
mov
dec
popa
test
mov
movsl
push
pushf
bound
sahf
lret
xchg
mov
mov
mov
daa
stc
fistl
sbb
push
aam
das
mov
and
push
or
pusha
xchg
sbb
mov
scas
cmpsb
jae
cmpb
call
cmp
fcompl
jmp
push
add
cmp
mov
inc
xchg
into
in
bound
jg
arpl
jae
mov
mov
bound
xchg
inc
adc
jmp
cltd
lret
jns
lds
scas
and
sarb
jae
cmpsb
ljmp
cltd
lock
pop
pop
ret
js
adcb
lret
aad
add
xchg
fiadds
mov
dec
int3
popa
sbb
in
and
cmp
xchg
dec
sub
sub
jno
add
dec
jecxz
popf
test
xchg
aaa
imul
push
xor
test
jge
shl
jl
push
inc
jnp
mov
clc
mov
ret
sub
pop
jl
sbb
into
dec
sub
sub
mov
popa
cltd
add
jb
imul
push
mov
dec
mov
repz
and
cld
outsb
in
sahf
sbb
cmpsl
adc
jns
daa
pop
jle
mov
xchg
push
testl
xchg
jnp
out
enter
sub
mov
and
sbb
fsub
pop
out
xchg
pop
mov
sub
test
sub
and
mov
lret
ret
mov
cmp
push
icebp
inc
fbstp
fisubrl
add
pop
xchg
test
pop
mov
cmp
and
mov
inc
stos
shlb
sbb
popf
xchg
xor
adc
pop
cmc
sub
dec
fadd
cltd
rorb
lea
iret
mov
mov
enter
sbb
push
in
pushf
lods
out
jmp
inc
cmp
loop
or
cmp
and
sub
pop
or
stos
pop
mov
in
mov
mov
subb
pop
sbb
inc
enter
mov
lds
and
cwtl
popaw
dec
js
pop
cmpb
jb
push
fadd
or
add
dec
sarb
and
sbb
jle
fwait
nop
cmp
lret
sahf
icebp
mov
xchg
xlat
nop
pop
mov
in
mov
outsl
lds
clc
mov
pop
dec
push
ret
aad
jno
add
adc
das
inc
pop
jns
ss
int
jle
sub
jnp
mov
sub
in
outsl
aas
lcall
loope
iret
and
or
imul
dec
cmc
mov
negb
xor
nop
xor
xchg
adc
ficoml
mov
out
jno
jae
cmp
mov
cld
inc
enter
es
and
test
mov
cmp
mov
jae
aad
jmp
arpl
fldenv
xor
fcmovbe
jmp
xorb
je
out
outsb
pop
mov
mov
fstl
jl
orl
dec
rcll
cmp
stos
jbe
imul
arpl
xchg
sbb
lock
dec
mov
jb
sub
movl
sub
cmp
mov
rcl
xchg
push
pusha
dec
add
in
pop
cmp
push
pop
out
jno
add
mov
fiadds
es
repnz
push
pop
lret
filds
pop
addl
stos
decl
cmpsb
push
out
jecxz
js
push
data16
jp
in
stos
xchg
push
sub
repnz
xlat
mov
xchg
sub
jb
inc
test
ffreep
fldt
sbb
clc
sub
mov
adcb
and
aad
ret
xor
sub
aas
ffreep
pop
inc
push
movsl
sbb
xchg
mov
lock
mov
xchg
xchg
push
jecxz
mov
mov
jge
mov
lret
in
xor
mov
mov
mov
lcall
adc
and
push
lahf
jp
adc
mov
push
or
fs
das
imull
mov
xor
push
xlat
out
xor
sbb
and
pop
or
push
mov
lcall
pop
lret
push
fwait
repz
inc
imul
clc
leave
incl
sbb
aaa
sbb
arpl
xor
mov
adc
or
inc
xchg
roll
pop
mov
and
scas
icebp
stos
test
mov
cltd
adc
push
sbb
xchg
cmp
jnp
cli
sub
push
or
shl
push
outsb
sbb
jne
shrl
dec
pop
mov
iret
xchg
jge
add
mov
xchg
ljmp
sahf
push
rcl
or
xorl
push
adc
rorl
int
jae
divb
sbb
mov
insb
fs
pushf
or
aad
ret
movsb
lods
push
mov
sub
ss
fisttps
mov
add
adc
in
sahf
stos
sub
in
cmp
out
mov
or
jg
inc
xor
lahf
xchg
aas
jp
inc
lods
jnp
cmc
sub
jno
outsl
dec
cmp
xchg
inc
xchg
or
js
xchg
enter
in
jecxz
aas
inc
dec
jns
in
pop
hlt
sbb
dec
mov
pop
mov
ljmp
xchg
sbb
gs
daa
mov
mov
mov
stos
out
inc
subl
mov
dec
aam
sti
mov
xchg
sub
outsb
out
out
popa
ss
pop
xor
popf
out
adc
sbb
daa
sbb
mov
hlt
imul
xlat
int3
rolb
call
or
cltd
out
adc
fstps
push
subl
dec
cs
daa
jmp
inc
add
mov
jns
shrl
or
lock
jnp
es
mov
jns
cld
push
inc
sub
add
and
stos
mov
xchg
or
roll
das
xchg
call
mov
stc
jnp
and
les
ffree
add
imul
int
xchg
push
icebp
push
sahf
popf
daa
mov
xchg
lods
out
add
xchg
iret
dec
push
cmp
xchg
bound
shl
xchg
pushf
jae
outsb
iret
lods
sbb
loopne
lods
xchg
jp
xchg
mov
jae
pop
insb
sti
out
and
mov
inc
dec
jns
add
in
pop
sub
lock
add
pop
push
push
sub
mov
xor
nop
push
andb
sbb
push
push
rolb
add
js
sub
sti
shlb
test
sub
das
and
inc
jae
inc
add
and
mov
ret
frstor
in
jge
cmp
add
lcall
filds
movsb
xchg
ds
stos
sub
mov
or
mov
inc
push
inc
jle
int3
and
jp
jge
test
lret
push
fdivrl
push
cmpsb
xlat
inc
xchg
cmpsb
xchg
sbb
arpl
add
dec
xchg
or
jnp
ret
xor
ret
into
inc
shll
mov
cmp
inc
fs
mov
inc
push
xor
lea
adc
adc
inc
push
mov
sbbl
adc
shll
mov
je
fiadds
sub
pusha
rcrb
in
mov
fidivrl
push
je
jg
jmp
ja
out
cltd
cmp
mov
arpl
mov
sbb
les
jno
ljmp
xor
xchg
insb
xchg
xor
in
testb
aam
xlat
inc
bswap
rol
mov
in
cmp
adc
mov
sub
ret
cwtl
jmp
mov
add
cld
add
sub
sub
test
imul
ss
dec
push
xchg
cs
push
xor
iret
push
mov
push
cmpsb
ljmp
dec
mov
das
xlat
adcb
cmp
jne
mov
test
jne
jae
cmpsb
aad
mov
and
icebp
aaa
push
adc
mov
sub
gs
mov
add
popf
xchg
pop
popa
dec
fidivs
mov
jbe
fnsave
jecxz
ja
mov
test
rol
cmc
out
pop
and
ret
add
shll
add
out
pop
aam
imul
jp
sbb
das
fwait
xchg
aas
scas
shrb
fcomp
ja
mov
adc
or
push
dec
or
xorb
inc
pop
repz
inc
imul
fbld
stos
sub
fwait
add
aaa
mov
xor
cwtl
cmp
xchg
daa
ffreep
push
lock
pop
in
cwtl
mov
loopne
dec
xchg
sbb
xchg
xchg
cli
cmp
or
test
mov
lret
push
dec
dec
jb
cwtl
repz
jecxz
out
sbb
inc
push
cmpsb
jne
adc
test
ret
xchg
cmp
ljmp
ss
out
inc
insb
daa
lock
int
push
sub
push
cmpb
sub
push
jo
fsubr
mov
dec
pop
push
pop
add
gs
pop
sarb
mov
jbe
fidivrl
aad
sub
daa
dec
sub
xchg
cmp
inc
push
lahf
insb
rcrl
xchg
cs
push
jg
es
gs
fisttpll
xchg
cmp
jbe
push
scas
out
stc
mov
stos
in
lds
call
pop
jae
push
fs
dec
mov
push
lcall
xlat
in
add
push
sahf
push
lods
roll
dec
add
push
mov
mov
bound
jbe
pop
scas
out
stc
jecxz
dec
divb
shl
adc
ret
and
push
mov
imul
cltd
sub
in
adc
cmp
faddl
out
imul
repz
aas
sbb
js
stos
or
jmp
ss
and
jb
sahf
and
fistps
push
add
push
adc
push
fnstsw
or
mov
stc
cmc
inc
jle
pop
pop
add
dec
mov
sbb
or
jno
test
mov
das
pcmpgtw
jbe
idivb
adc
push
adc
test
xor
sbbb
movlps
sbb
add
or
ret
imul
adc
sbb
fdiv
les
xor
mov
pop
rol
sbb
cmp
pop
cmp
stos
dec
add
daa
inc
pop
inc
mov
or
pop
out
xchg
pop
stos
dec
push
adc
jns
in
loopne
lsl
sti
cltd
and
and
mov
xlat
mov
das
std
cltd
ret
sbb
and
push
sar
mov
call
mov
jnp
adc
add
das
pop
and
sbb
and
loopne
repnz
popa
es
lret
xchg
xchg
dec
in
fmull
adc
pop
jb
je
jmp
inc
mov
mov
mov
mov
fstps
xor
and
aam
inc
jg
outsl
shll
ficompl
xchg
sub
das
adc
push
std
and
dec
mov
add
mov
xchg
jnp
pop
mov
sub
mov
call
inc
stc
mov
mov
mov
loopne
jno
fcmovu
cld
jo
in
pop
push
cmp
insl
ds
arpl
fisubs
int3
cltd
sbb
fwait
imul
adc
pop
add
hlt
test
imul
imul
xchg
cmc
lock
jg
and
jmp
add
inc
ds
xchg
clc
or
jge
jle
xchg
adcl
addr16
movsb
lret
or
xor
add
das
push
adc
test
data16
inc
xchg
ds
sub
lcall
pushl
lcall
inc
repz
insb
pop
nop
and
jp
shrb
sub
iret
lods
imul
adc
sbb
mov
or
dec
lea
inc
dec
mov
cmp
ret
and
nop
imul
inc
xchg
daa
sbbb
ror
fisttpll
ret
adc
xchg
push
lret
neg
xchg
dec
data16
daa
pop
out
daa
aaa
dec
sbb
pop
stos
fisubs
sbb
aad
adcb
outsl
xchg
adc
pop
add
pop
fmul
xchg
cmp
lcall
and
cs
fistps
js
cmc
test
push
sub
sahf
pushf
in
and
adc
inc
aas
mov
jno
xor
or
mov
and
pop
add
sub
test
push
rcrb
ret
push
loop
xchg
fs
jmp
popa
push
xchg
lea
sbb
mov
mov
sbb
pop
or
jnp
mov
add
inc
insl
add
adc
pop
pop
jecxz
call
jo
enter
fwait
cli
jmp
sub
fisttpl
test
in
std
jmp
sbb
hlt
push
shr
test
popf
pop
cwtl
test
mov
fcomp
in
mov
jle
imul
push
int3
cmp
inc
xor
f2xm1
push
out
sub
ljmp
push
adc
cltd
cmp
int3
pop
mov
sbb
lahf
fwait
jl
mov
inc
mov
popf
cmpsb
xchg
and
sub
in
cmpsl
jg
dec
mov
dec
cmpsl
jl
cmp
push
mov
ljmp
mov
jg
inc
lds
inc
adc
rorl
inc
ss
pushf
mov
dec
scas
sbb
mov
dec
cmp
js
mov
sub
push
ja
adc
sub
pop
or
cmpsl
mov
or
and
push
mov
fcomps
insl
jne
mov
mov
clc
xchg
mov
sub
mov
push
xchg
lcall
outsb
and
mov
popf
adc
js
xchg
push
push
mov
xor
arpl
pusha
jl,pn
mov
pop
rcl
xchg
xchg
out
mov
pop
mov
imul
and
fdivs
mov
push
imul
lahf
in
mov
adc
sbb
mov
adcb
sub
cmp
lods
in
cmp
shlb
mov
les
out
sbb
mov
pusha
fildl
fcomps
sbb
pop
loopne
xchg
fidivl
pop
aad
xchg
xor
xor
cmp
mov
mov
aad
jecxz
in
adc
test
sti
inc
imul
fsubr
add
out
adc
scas
int3
aas
and
mov
jbe
out
push
cltd
adc
popa
inc
inc
movsl
movntq
or
cmc
clc
mov
xchg
cmpl
push
push
mov
cli
mov
sub
loop
aam
lcall
fsubl
insb
jg
sti
sub
cmpsl
sub
pop
adc
data16
shll
dec
adc
gs
sub
or
push
mov
rcll
pop
ja
add
or
sti
aaa
es
shll
inc
js
mov
xor
xchg
mov
icebp
frstor
lods
cmp
lret
pushf
rolb
adc
mov
push
mov
movsl
pop
int3
sbb
int3
shrl
xor
int3
loop
les
ficomps
inc
mov
push
jns
in
xor
xorl
mov
and
cmc
fists
hlt
icebp
xorb
adc
push
cli
mov
xchg
mov
jo
mov
loop
nop
mov
ljmp
jnp
and
aas
push
pop
jecxz
adc
icebp
mov
repnz
aaa
arpl
pop
fcomi
xlat
daa
mov
and
popf
pop
aam
pushf
fstl
notl
gs
xor
ffreep
sarl
xchg
das
lea
repz
xor
dec
aaa
mov
in
sub
push
popf
mov
xchg
int3
in
fisttps
fs
aas
loopne
pop
pop
sahf
lods
nop
cmp
xlat
ljmp
addr16
aaa
xchg
jl
out
add
add
add
stc
inc
sti
xchg
out
sahf
jb
aas
or
testb
jno
jo
mov
fistl
icebp
mov
test
repz
rcll
repnz
xor
cmc
mov
mov
mov
mov
sub
xchg
xchg
sbb
xchg
test
jne
out
mov
outsb
pop
push
nop
fsubrs
cmp
outsl
adc
mov
mov
ret
mov
ret
fidivrl
mov
dec
lock
repz
ret
pop
shll
lcall
sarl
add
mov
pop
jmp
outsl
and
pop
cmpsl
inc
les
pop
ret
scas
dec
xor
sub
in
fdivs
fwait
cmp
pop
push
cmpsb
xor
sub
jb
lock
jge
cli
hlt
sbb
fs
incb
in
add
scas
fdivl
sarb
scas
xchg
cmc
pop
jae
sub
sahf
mov
pop
loope
rcll
jl
ret
and
mov
xchg
sysenter
push
and
xchg
cmp
jle
push
je
pop
mov
rcrl
mov
inc
in
sub
cmp
and
and
sub
xchg
mov
mov
mov
fsubrl
xorl
test
mov
ss
cmp
add
fldenv
and
mov
repz
test
out
sarl
mov
push
adc
and
mov
add
xchg
mov
jns
js
arpl
mov
lahf
jle
lods
sub
xchg
ds
or
and
add
call
pop
cwtl
rorb
js
jl
inc
int3
sti
or
mov
movsb
mov
cmp
movsl
mov
loop
shlb
mov
imulb
hlt
ret
adc
dec
lret
sbb
adc
xor
adc
fnstcw
cmpsl
mov
out
inc
adc
push
jno
insl
movsb
dec
lods
jp
mov
cmp
xor
sbb
fcompl
jo
fnstsw
push
dec
jb
jl
movsl
push
lds
jecxz
mov
sbb
pop
sahf
int
test
cltd
push
add
out
pop
movsb
rolb
mov
push
pop
or
arpl
rcr
adc
aam
dec
sbb
xor
cli
imulb
xchg
mov
and
leave
loope
lahf
cmpsb
dec
test
mov
mov
stos
xlat
fcmove
fldenv
and
mov
aas
mov
daa
push
andl
and
mov
xlat
fisubl
ss
xchg
mov
dec
push
in
fdiv
jo
mov
popf
pop
test
dec
push
mov
sahf
sbb
pop
dec
push
sti
xchg
lahf
pop
xchg
loopne
mov
imul
test
test
xor
xchg
cld
sti
fidivrl
lahf
fwait
pop
xchg
cmp
sub
shlb
sub
sbb
adc
jmp
cmp
sbb
enter
pop
jg
xchg
add
push
push
inc
add
lret
sbb
xor
mov
movsb
nop
insl
sub
lea
into
push
cs
shll
sbb
push
push
popa
loope
aas
mov
mov
fidivrl
jbe
xor
int3
jle
pop
adc
or
jns
sti
mov
notl
push
and
push
adc
mov
xchg
int
imul
push
add
subl
mov
jne
andl
jecxz
stc
bound
mov
mov
pop
adc
and
fwait
jg
mov
stos
mov
insl
out
pop
mov
sbb
jle
popf
jecxz
out
push
fstpl
cli
cmp
sti
mov
sub
loope
mul
insb
pushf
shl
ja
nop
add
or
cmp
inc
jno
dec
fwait
iret
dec
xor
push
daa
sti
pop
mov
add
pop
shlb
mov
jmp
inc
out
incl
addr16
mov
stos
jnp
ja
dec
push
sbb
loopne
push
sbb
lea
mov
or
pop
fs
and
dec
mov
and
stc
and
sti
and
mov
push
inc
pop
lcall
inc
sbb
mov
mov
adc
movsb
xchg
cmp
jg
and
mov
xchg
mov
push
xor
sbb
movsb
sub
rcl
test
jno
shrb
mov
mov
push
mov
jne
mov
fcomip
scas
push
rolb
cli
mov
imul
ljmp
divb
xchg
push
mov
mov
xchg
into
test
rclb
mov
mov
or
cli
rol
jmp
mov
cmc
adc
int3
mov
mov
push
inc
dec
test
hlt
cmpsb
push
dec
jns
inc
push
rolb
cs
sub
stc
into
xchg
test
int
push
or
push
fs
lods
mov
mov
std
pop
loop
fildl
cltd
into
mov
xchg
mov
stos
sub
imul
stos
inc
push
je
push
add
jno
push
push
pop
dec
sbb
dec
add
mov
sub
mov
rorb
incl
push
mov
or
pop
jno
push
push
rcrb
fs
icebp
xor
mov
mov
sahf
and
mov
mov
shrl
sbb
dec
je
leave
in
pop
subb
mov
pop
sub
sub
sbb
pushf
shll
xchg
int
or
out
lahf
aas
in
adc
scas
lret
jne
clc
cltd
jb
mov
adc
shrl
xchg
pop
push
dec
xor
mov
jg
xor
add
imul
mov
adc
es
jns
mov
sahf
sbb
pop
aam
fadds
fcom
or
ret
mov
cmpsl
lcall
pop
arpl
rcrl
push
or
pop
loop
xchg
cmp
mov
adc
das
popf
je
vmulsd
das
sub
ucomiss
fs
imul
inc
sub
sbb
jmp
dec
insb
cli
outsl
test
add
arpl
imul
mov
push
sub
hlt
xor
insb
xor
mov
scas
stc
adc
jo
cmp
xchg
sbb
mov
popa
or
cmpsb
xchg
je
add
mov
add
push
mov
dec
cmc
repz
pop
stos
jbe
je
lret
add
pop
popf
push
ljmp
adc
xchg
cmc
adc
push
xchg
adc
imul
lret
sahf
mov
outsl
cld
cli
in
lods
clc
popf
sbb
andl
je
repnz
ljmp
loop
jmp
mov
pop
and
sbb
push
lods
xchg
es
hlt
fcoml
ja
xchg
pop
or
push
jb
lods
push
mov
push
addr16
ret
adc
stc
loopne
and
mov
and
les
sbb
inc
ds
mov
xorb
or
int3
xchg
loop
int
xchg
movsl
mov
lret
push
cmp
inc
fs
aam
lahf
add
sbb
jo
test
dec
push
mov
and
sbb
sbb
mov
jmp
mulb
pop
dec
mov
rol
cmpsb
mov
or
std
jmp
add
sbb
mulb
and
adc
pop
jae
fdivs
adc
mov
bts
clc
xchg
dec
cltd
xchg
xor
sub
testb
and
and
push
out
or
rclb
sub
pop
xchg
daa
push
shrb
int3
inc
cld
in
cld
lret
jne
cwtl
push
or
dec
shr
insb
out
mov
adc
xor
jmp
inc
je
mov
outsb
mov
push
or
js
xadd
idivl
in
pop
xchg
push
cli
jo
and
lods
cli
xchg
ss
in
sbb
hlt
add
pop
mov
mov
sbb
int
pop
sub
pop
lea
repnz
xchg
movsl
arpl
dec
mov
idivb
jnp
hlt
mov
sbb
fbld
fldt
mov
mov
mov
sbb
and
push
sbb
leave
icebp
mov
mov
or
ficoml
test
sarl
add
add
jmp
cli
outsb
inc
sti
add
sbb
lods
jmp
pop
xor
push
lea
cwtl
out
cmp
pop
inc
dec
mov
hlt
andl
mov
push
cmp
into
mov
in
in
ret
cwtl
xchg
repz
enter
inc
in
loope
push
in
cmp
cmp
mov
hlt
enter
ficoms
pop
mov
test
mov
vpaddusw
cmpsb
pusha
jp
scas
pop
testl
sbb
je
add
pusha
cmp
pop
pop
pusha
adc
pop
loop
sbb
loope
xchg
or
dec
push
ja
repz
jae
scas
cwtl
enter
sub
pop
inc
in
pop
outsb
sub
imul
and
scas
push
adcl
mov
mov
jecxz
mov
fldpi
and
enter
scas
rorl
jb
dec
out
add
mov
push
ret
inc
jmp
push
adc
sub
cmc
mov
negb
adc
leave
aam
sarb
dec
aad
lods
repz
clc
bound
pusha
sbb
add
inc
inc
add
mov
add
int3
cmp
rcrb
mov
lods
dec
jle
dec
decb
cs
negb
dec
dec
out
sbb
inc
xchg
and
inc
xchg
or
or
call
pusha
ljmp
cmpl
cs
shr
aaa
cmp
repnz
xlat
cmp
aas
mov
into
les
sahf
jne
mov
mov
xor
push
mov
in
push
or
stc
mov
dec
dec
loop
out
pop
add
call
cmpsl
inc
mov
pusha
aad
js
jmp
arpl
mov
dec
aas
mov
push
gs
je
imul
insl
jp
repz
jns
push
mov
dec
sub
fimuls
faddp
jb
idivb
repz
mov
push
pop
jo
push
or
adc
mov
cmp
sbb
push
movsl
fstpl
or
imul
xlat
or
cmc
leave
setne
cltd
in
cwtl
test
xchg
sahf
xlat
mov
imul
mov
idivl
sbb
pop
sub
negb
scas
mov
xchg
sub
addr16
int3
mov
cmpsb
aaa
sbb
bndldx
dec
test
jbe
fwait
xor
lahf
sbb
push
mov
pop
pop
daa
aam
cltd
clc
cwtl
in
lahf
mov
inc
mov
inc
dec
push
mov
add
xor
movsb
push
cmp
inc
jno
aad
popf
pop
fisubrl
sub
sti
mov
rorl
xorl
int3
fsubs
inc
test
mov
aas
int3
outsb
test
dec
loope
call
cmp
mov
enter
fst
data16
jno
push
jne
hlt
lods
jno
fdivrl
lds
xor
and
lds
test
add
lods
add
nop
push
cwtl
mov
out
test
sbb
mov
adc
adc
stc
fwait
imul
add
ror
lea
js
dec
cltd
imul
push
jg
outsb
cs
fildl
aam
nop
and
leave
add
orb
add
or
clc
adc
dec
mov
stc
jne
cltd
clc
subb
push
call
cli
jge
adc
jb
xor
les
push
xchg
std
xchg
stos
sbb
mov
popa
scas
jl
mov
testl
inc
xchg
push
pop
push
test
push
mov
in
pop
jp
lds
jp
xchg
cwtl
or
inc
scas
gs
mov
std
into
arpl
inc
xor
mov
mov
jge
mov
jnp
mov
cld
sbb
or
push
lcall
dec
jmp
mov
pop
mov
in
adc
push
aam
fsub
xor
into
xchg
mulb
les
out
fcomp
mov
addr16
mov
testb
pop
cmp
mov
aad
ret
mov
loopne
ss
sar
in
daa
cmp
lcall
repz
mov
outsb
mov
movsb
call
mov
mov
les
je
cmc
or
jns
jl
and
sbb
pop
aam
and
addr16
pop
scas
mov
outsb
push
xchg
inc
push
ss
mov
cld
jecxz
cmp
out
xor
lret
icebp
jbe
jnp
sarb
repnz
inc
pop
je
inc
xor
das
adc
fcompl
cmp
jae
popf
cmp
xchg
jmp
lods
fistpll
pusha
sub
sahf
mov
faddp
jno
imul
push
xchg
aam
fbstp
dec
outsb
outsb
or
sub
push
loope
fcmovne
mov
movsl
mov
test
les
sbb
inc
sahf
push
dec
cmpb
ljmp
cmp
mov
dec
idiv
gs
dec
aas
arpl
fstl
pusha
fdivp
fdivs
lods
loop
push
bswap
fwait
xchg
adc
and
push
cmp
subl
mov
mov
xlat
sub
decb
stos
ja
lea
ja
mov
in
add
xor
sub
out
lea
push
inc
scas
xchg
dec
mov
les
and
jmp
pop
aad
inc
pop
test
rolb
std
ret
sbb
in
xchg
call
int
shr
xchg
xchg
mov
pop
mov
pusha
pop
repz
loope
out
int3
fucomip
iret
aas
mov
gs
or
mov
test
aam
mov
and
cmp
xor
jo
adc
pusha
push
les
pop
js
push
lock
push
adc
or
lock
dec
fmul
push
addr16
and
out
ret
adc
add
pop
mov
shrb
and
pop
sub
dec
adc
dec
xchg
fisubrl
insl
fisubrl
inc
push
lea
xchg
fidivs
mov
repz
cmc
push
int3
jmp
dec
push
fldt
aam
popf
push
jno
jl
int
push
mov
fs
int
fiadds
sub
jno
push
mov
pusha
mov
inc
popa
shrb
mov
mov
imulb
repz
insb
xor
imul
ja
js
fcmovnb
fmul
add
inc
xor
shr
add
cli
nop
mov
cmpsb
das
cmp
cli
or
cmpsb
fiadds
mov
push
scas
in
adcl
in
xchg
pop
push
xor
insb
add
sub
xor
lds
je,pn
lahf
jno
mov
cmc
jne
mov
xchg
cmp
mov
shlb
iret
xor
mov
xchg
pmovmskb
ljmp
add
popf
je
sbb
mov
mov
xchg
cli
in
add
sub
xor
cmpsb
leave
mov
jge
cwtl
decl
sti
cmp
mov
leave
mov
pop
stc
push
daa
lods
prefetchw
mov
inc
addr16
or
pop
xchg
in
xchg
ja
shrb
dec
xchg
movsb
adc
sbb
xchg
out
mov
leave
xchg
mov
ss
test
in
icebp
adcl
push
xchg
mov
ljmp
cmp
push
icebp
js
fstl
mov
push
aas
fcoms
xor
push
inc
scas
lcall
clc
push
ja
mul
dec
add
sbb
in
ficomps
inc
cmp
imulb
movsl
jb
xchg
and
cmp
in
clc
adc
xchg
xor
out
dec
insl
cli
jne
add
cltd
outsl
pushf
mov
dec
mov
sbb
lea
push
stos
mov
adc
sub
sbb
push
nop
and
ret
mov
pop
icebp
mov
mov
cli
xor
cmp
stc
jmp
sahf
mov
adc
loop
add
sub
lods
in
add
pop
xchg
lods
mov
or
rorl
lahf
hlt
mov
je
repnz
jl
cmp
or
sti
push
ja
and
pop
xor
jns
jns
testb
shll
dec
in
fs
je
ljmp
out
addl
push
jnp
subl
not
push
inc
or
cmpsl
xor
mov
fs
std
and
sub
in
mov
ja
in
movsb
push
ret
or
xor
daa
loop
sub
scas
jmp
dec
pop
dec
dec
and
rolb
mov
clc
push
inc
clc
aas
dec
adc
out
ficompl
mov
cmp
test
inc
cltd
ljmp
repnz
aas
outsl
xchg
lret
les
xchg
and
mov
mov
and
aam
pop
bound
aaa
repnz
xor
test
aam
dec
mov
sarb
fucomip
gs
sahf
pop
mov
sbb
out
mov
push
xor
xor
loope
sub
lcall
xchg
inc
cmp
xor
jno
fimull
enter
push
out
sub
cltd
pusha
enter
movsl
js
into
inc
out
sbbl
add
mov
mov
dec
fnsave
push
push
pop
maskmovq
jbe
fistps
pushf
inc
icebp
adc
mov
sub
fimull
push
int
in
or
andb
ljmp
rclb
inc
stc
inc
rcrl
in
jle
xchg
lds
and
ss
pop
adc
in
imull
jle
xrelease
jbe
push
enter
lds
dec
mov
mov
aas
push
push
cmp
xchg
fsubs
mov
rorb
and
enter
rcrb
jge
aam
pop
and
loope
mov
fstl
mov
test
test
sub
sbb
or
popf
inc
xlat
mov
push
xor
push
mov
or
inc
inc
clc
push
push
cld
pop
movsl
bswap
or
fnstenv
sbb
lods
dec
mov
xor
push
imul
popa
jnp
cld
aam
pop
js
xchg
loopne
ljmp
pop
mov
aam
mov
sub
test
iret
loope
jo
inc
and
jbe
ja
idivb
jne
addb
xchg
and
scas
push
insl
jnp
in
dec
add
inc
outsb
xchg
gs
pop
adc
xchg
and
xchg
pop
aaa
or
test
aam
mov
jge
or
push
outsb
rcll
mov
cmp
fwait
xchg
adc
movsb
mov
xrelease
add
insb
ds
fisubrl
jb
repnz
dec
mov
lods
popf
mov
mov
lret
adc
xchg
or
aam
push
das
xchg
mov
gs
iret
push
and
inc
xor
sbb
orl
cld
and
push
adc
subb
inc
dec
mov
push
cmovo
out
out
inc
int
jl
mov
les
fstps
inc
movsb
loopne
in
mov
rcl
push
pusha
stos
flds
cmp
fidivrs
rcr
fs
loope
lods
sar
push
add
add
ja
mov
or
inc
daa
daa
in
mov
sbb
and
inc
jns
jo
push
je
psubsw
xor
mov
mov
aaa
lcall
cmp
push
test
mov
imul
and
adc
mov
pop
push
scas
je
mov
mov
mov
mov
test
cmc
call
popf
dec
sarb
sbbb
movsl
inc
add
ror
lcall
xor
inc
sub
stos
stc
pop
adc
hlt
dec
je
mov
sub
out
nop
push
xor
sub
mov
xor
shll
jge
push
inc
fsubrs
dec
jl
add
dec
mov
pop
ja
jge
jo
inc
and
and
or
cmp
adc
sti
out
mov
shll
push
adc
xchg
aam
outsl
push
dec
stc
add
cltd
mov
mov
outsl
addr16
push
popa
loop
inc
aas
xchg
loopne
xchg
adcb
ffreep
sub
xchg
xlat
sbb
sub
push
pop
add
ljmp
xor
aam
sub
jg
incl
enter
in
insb
push
fsubrs
ds
adc
fst
push
push
js
jg
scas
hlt
jl
cmp
loopne
sub
xchg
cmp
cmp
das
fldcw
stos
loope
subl
das
movsl
fidivs
stos
lods
adc
push
push
jp
pop
test
cmp
call
mov
cltd
lds
nop
subb
int
cmp
xlat
add
sub
pop
pusha
add
inc
mov
aam
out
and
in
ds
sbb
dec
push
iret
sar
shlb
mov
stos
arpl
imul
sub
lahf
add
push
imul
sarb
scas
es
imul
sbb
shll
xchg
add
mov
dec
push
push
aas
and
jge
roll
xor
push
xchg
pusha
repnz
jne
push
push
sbb
push
xchg
inc
or
and
ds
inc
jge
add
lcall
sub
sub
jg
loop
movsb
cmp
mov
out
fs
jne
loope
jle
test
ror
dec
push
mov
dec
test
rcr
ficoms
sub
add
popa
andl
js
call
mov
jo
dec
mov
cmp
sarb
mov
pop
js
sbb
inc
dec
jecxz
mov
outsl
les
insl
push
ffree
push
sarl
mov
icebp
mov
dec
outsl
or
arpl
and
and
idivb
jbe
add
daa
or
sbb
scas
pusha
mov
push
mov
loopne
fld1
fs
push
xchg
rep
xchg
bnd
lds
out
popf
xlat
sbb
xchg
push
sarl
outsb
stos
dec
lea
shlb
dec
dec
or
ret
jae
pop
cmpsl
adc
xorb
xchg
pushf
repz
jne
ret
xchg
iret
mov
inc
nop
add
lret
xor
mov
push
outsb
jae
inc
sub
cli
aad
pushf
dec
lods
and
lret
jns
cs
push
out
push
jnp
push
mov
inc
inc
int3
outsb
bound
stos
cmp
imul
pop
push
nop
jne
fsubr
inc
rorb
mov
repnz
nop
push
jg
cmp
sbb
jmp
out
stos
push
sbb
js
jns
gs
in
imull
adc
hlt
mov
inc
std
push
add
repnz
leave
cmp
aad
pop
dec
push
outsl
push
test
xchg
xor
adc
pop
sbb
adc
shrl
ja
jb
and
test
ljmp
call
add
xor
adc
inc
cwtl
imul
xchg
scas
pusha
cmp
out
jb
out
and
mov
sub
ljmp
mov
fldt
test
rcr
cmpsb
mov
inc
rcll
cmpl
inc
xor
movsl
adc
int3
xchg
adcl
testl
repnz
pop
stc
imull
and
int3
sbb
outsb
jle
mov
xchg
add
repz
mov
jbe
mov
dec
push
sti
sahf
fwait
leave
sub
jle
psadbw
arpl
into
sbb
dec
mov
jb
adc
cld
nop
xchg
lcall
xchg
jno
stos
xorl
popa
sbb
or
fmuls
mov
adc
repz
sti
jo
pop
js
or
popf
scas
in
mov
push
icebp
jbe
inc
adc
push
sarb
bound
mov
clc
sti
lock
xor
rclb
scas
stos
repz
lret
push
in
in
cmc
jmp
xor
cs
mov
mov
xchg
inc
mov
dec
push
out
or
pop
and
cmpsb
outsl
add
cmc
jmp
push
jge
jp
bound
inc
movups
jmp
mov
leave
fldt
outsl
fwait
cmp
pushf
push
outsb
mul
sbb
lret
inc
xor
dec
push
adc
fs
mov
outsl
sbb
or
pop
push
sub
adc
xchg
mov
dec
outsb
ja
test
movsl
js
daa
mov
addr16
aad
mov
mov
in
dec
test
lret
inc
sbb
pop
jle
mov
push
xor
mov
push
lret
xlat
xchg
testl
icebp
adc
sub
fidivs
lret
xor
push
sbb
dec
mov
jle
lret
out
fdivr
and
shll
sub
ror
mov
imul
adc
lahf
lock
hlt
adc
sbb
imul
push
inc
jnp
xchg
or
and
adc
inc
xor
jmp
imul
cltd
lret
int
sarl
sub
inc
sbb
lcall
mov
rclb
jb
adc
in
icebp
adc
mov
and
ds
jl
enter
mov
or
or
push
dec
sub
cmp
dec
xchg
imul
mov
push
cmpsl
in
mov
xchg
test
std
movsl
cmp
rcrl
fwait
mov
and
pop
and
lods
mov
cmp
sub
int3
dec
or
lea
lods
leave
daa
js
xchg
leave
jge
jo
cmp
and
dec
fs
mov
sub
adc
add
or
loope
ficoml
fwait
xor
pop
sar
fbld
scas
div
pop
punpckhwd
out
mov
hlt
enter
add
imul
iret
sub
pushl
loope
pop
sbb
in
and
jge
movsb
xchg
scas
or
ret
mov
jecxz
pop
idivb
in
in
ja
xchg
xchg
popf
adc
jmp
inc
imul
imul
movsl
imull
test
jl
mov
pop
cld
fstpt
int3
mov
loope
adc
dec
filds
jb
dec
pop
ljmp
mov
hlt
lds
fidivrs
int
sbb
int3
mov
jg
popf
lods
cli
int
pop
daa
ret
cvtps2pi
mov
cltd
mov
iret
flds
mov
lods
and
daa
lret
cmp
int3
pop
push
call
in
fmull
mov
mov
packuswb
or
mov
mov
and
xlat
adc
push
stos
dec
and
ds
or
adc
shlb
mov
push
pinsrw
pop
sub
loop
xor
or
push
jnp
inc
loop
jmp
mov
test
jecxz
and
es
popf
xor
add
gs
test
and
dec
outsb
call
pop
mov
ret
or
mov
jle
xchg
fninit
jp
mov
lea
fiaddl
ret
mov
or
add
popf
pop
imul
hlt
add
sub
jns
and
cmc
xchg
jns
push
push
dec
mov
fcompl
jmp
insl
clc
ds
xchg
fwait
lods
mov
fsubl
inc
push
filds
dec
fs
nop
cmp
sub
push
mov
aad
in
int3
fdivs
jp
sti
and
fsts
cmp
jecxz
adc
je
jbe
sub
jb
ret
xchg
imul
mull
shrb
sahf
adc
pop
sbbl
ss
push
and
push
xor
xchg
and
iret
add
sbb
pop
inc
nop
jnp
xchg
cmc
adc
shll
ficoms
mov
ret
neg
ljmp
inc
pop
sbb
and
loop
mov
add
cmp
jp
loopne
pop
rclb
out
inc
xorb
lret
lods
sbbb
pop
ret
movsl
xor
and
ljmp
shrl
xchg
xor
jecxz
cli
xlat
cmc
aaa
dec
decl
test
movsb
mov
adc
mov
push
test
jp
mov
mov
push
push
stc
stos
xor
ret
jmp
mov
jnp
cmp
sarl
inc
mov
test
sub
dec
adc
pop
negb
cmpb
mov
lret
push
mov
in
jnp
inc
lea
hlt
rolb
mov
xor
mov
inc
imul
mov
dec
and
xchg
mov
scas
push
sbb
idivb
inc
cwtl
ja
cmp
xor
mov
inc
les
ss
dec
push
add
es
jmp
xor
mov
jp
loopne
inc
sbb
cmpl
adc
clc
int3
imull
jg
lods
ret
and
pop
lcall
jl
push
sbb
xor
jmp
dec
mov
rolb
lods
bound
cmp
sahf
dec
mov
movsb
test
inc
jb
jecxz
clc
mov
shrl
in
xor
dec
pop
cld
pusha
xor
dec
or
and
inc
out
dec
in
pop
loope
cmpsb
lods
adc
xchg
das
outsb
mov
jge
push
sbb
or
sub
data16
in
ja
inc
cld
pop
cmpsl
enter
sub
ja
push
and
stos
push
inc
xchg
jo
push
ss
into
mov
pop
add
xchg
pop
ficomps
sti
out
outsb
jno
mov
mov
xchg
xchg
adc
cld
sbb
sbb
das
mov
sub
sub
aas
push
mov
xlat
inc
dec
push
sbb
cmp
mov
sbb
out
xor
movsb
mov
loope
ja
adc
pop
repz
or
out
adc
add
mov
ja
mov
test
xchg
loop
inc
bound
sub
push
xor
xchg
out
jecxz
xchg
aad
xor
inc
daa
je
lret
xchg
in
inc
nop
pop
jl
shlb
mov
xor
xchg
in
gs
and
fsub
push
push
cmp
pop
or
inc
mov
add
sbb
daa
lahf
in
cld
call
and
ret
pop
into
lods
or
jecxz
es
push
add
movsl
mov
jl
cmp
pop
jle
call
test
xlat
sub
cmp
outsl
mov
scas
cmpsl
mov
sbb
repz
in
mov
dec
fs
cmc
push
fwait
cmp
in
clc
pop
fwait
xchg
outsb
adc
cs
decb
lock
add
pop
jg
das
mov
lret
lock
cld
rcrb
enter
sti
repz
sbb
lods
push
pusha
cmp
test
inc
nop
popa
and
sbb
sbb
mov
adcl
or
test
pop
sub
mov
cmpsl
movsb
out
mov
int3
mov
add
push
and
jbe
jge
int3
int
in
cmp
pop
mov
imul
in
pop
pop
fnstsw
int3
aad
jle
mov
mov
mov
int
in
pop
lods
in
push
sti
test
jns
loopne
inc
pop
or
rorb
sub
xchg
mov
push
sub
mov
push
xor
push
hlt
mov
mov
xor
scas
inc
ds
dec
add
xor
std
mov
outsb
test
adc
sbb
test
push
movsl
cmp
ret
addr16
test
aam
sbb
mov
lahf
inc
jns
ret
mov
adc
push
popf
sub
cmp
mov
addr16
mov
mov
fidivs
pop
movsb
cmpsl
in
push
je
or
mov
in
jmp
mov
out
mov
in
cmpsl
push
push
push
mov
cmp
xlat
cld
adc
movsl
and
xchg
push
sbb
les
int3
pusha
addb
sahf
cmpsl
push
sti
cmp
out
sub
jno
inc
inc
fcmovnb
int3
mov
pop
or
lahf
out
roll
push
loop
mov
sub
das
and
mov
bound
jge
stc
sbb
or
mov
pop
in
xor
push
sub
pop
adc
shrl
lock
push
mov
rorl
mov
pop
jmp
or
dec
mov
imull
aad
pusha
cmp
mov
push
jnp
lods
mov
push
jo
jle
test
add
add
movl
mov
push
ret
in
shlb
test
fidivrs
jle
inc
je
sahf
pusha
add
or
mov
aam
or
jb
mov
popa
insb
mov
lcall
lret
mov
mov
jnp
pop
imul
push
bound
sahf
ret
and
xor
rcr
mov
out
inc
mov
stos
int
into
fdiv
mov
addr16
and
mov
pop
sbb
and
cmp
addr16
jae
push
jmp
aas
sub
mov
xchg
mov
lods
inc
push
je
dec
xchg
xchg
subb
and
pushf
dec
jne
mov
das
jno
jmp
notb
pop
dec
pop
mov
imul
inc
dec
lods
std
and
push
sbb
push
cmc
js
je
and
int3
sub
add
push
into
add
pop
cmpsb
sahf
imulb
xchg
adc
pop
sub
sub
shlb
mov
cmp
jne
dec
pop
xlat
test
sub
icebp
fwait
mov
sti
mov
sub
add
loopne
push
adc
mov
xchg
mov
xchg
cmpsb
dec
mov
push
add
enter
shrl
fnstsw
fisubs
sbb
push
insb
pop
jbe
sbb
xor
and
sti
cmp
inc
pop
mov
dec
push
pusha
push
adc
xchg
cld
inc
test
mov
inc
jno
lahf
mov
leave
push
xchg
xor
sub
pusha
add
push
xchg
outsl
gs
addr16
rcr
xor
mov
dec
pop
in
xor
dec
add
xchg
jo
outsl
push
cmp
js
orb
fwait
arpl
pop
push
es
pusha
js
mov
sbb
rcrl
dec
lea
sti
mov
clc
jo
in
movsb
lahf
scas
fmuls
data16
incb
out
gs
mov
mov
sub
push
jg
mov
repz
cmp
mov
pop
aam
cmp
outsl
pop
rcll
mov
pop
ret
loopne
imul
add
add
add
sbb
or
dec
imul
sub
pop
pop
sbb
adc
pusha
dec
sub
lock
enter
jle
mul
push
pushf
xorl
lods
ljmp
mov
sub
fisubs
jno
push
hlt
mov
movsb
addr16
stos
lcall
daa
insb
lcall
popf
ljmp
aam
sbb
jg
imul
jl
fimuls
or
mov
lods
dec
inc
cmp
push
arpl
jne
cmpsb
movsl
loop
push
cmc
popf
mov
sub
adc
cmpb
xchg
test
mov
inc
pop
lcall
repz
dec
xchg
cmpsb
dec
rcrl
inc
int
in
frstpm(287
mov
pop
inc
inc
cmp
pop
push
pop
mov
mov
and
sbb
mov
out
stos
pop
mov
outsl
push
gs
xchg
inc
xor
pop
test
xchg
mov
ljmp
jg
xchg
push
sub
or
mov
add
cwtl
loop
ror
dec
jecxz
jnp
les
cmc
and
mov
dec
out
stc
mov
loopne
sar
scas
cmp
sti
cli
movb
shlb
pushf
scas
leave
mov
lods
cmc
int3
sub
in
sbb
fcmovnb
data16
and
add
sbb
xor
push
fildll
movsl
sbb
mov
add
dec
pop
popa
pop
pop
push
and
jo
cmp
outsb
xchg
pop
jp
lcall
and
push
sti
xchg
ja
test
dec
loopne
int3
out
das
cwtl
mov
adc
cmp
adc
pop
push
jno
sub
fwait
sti
jecxz
ja
test
das
pop
lret
pusha
or
js
xchg
testl
xchg
mov
mov
test
iret
or
sbb
sbb
push
aam
pop
pushf
stc
push
lahf
lds
add
movsl
nop
pop
test
lods
mov
int3
mov
adc
mov
cld
add
pushf
aas
add
dec
jne
mov
lret
xlat
jmp
sub
adc
push
xor
ret
add
pop
fisubs
popf
and
cmc
adc
clc
ss
cwtl
scas
mov
divb
inc
popa
pop
mov
cmp
dec
addr16
and
add
mov
sbb
xchg
sub
cmp
sub
lods
pop
data16
pop
sbbb
out
cld
mov
shrb
mov
jnp
mov
inc
and
les
pushf
inc
xchg
add
dec
and
enter
rol
adc
push
into
imul
push
lret
hlt
pop
inc
fiadds
fmuls
int
dec
scas
add
jb
sbbb
popa
xor
rolb
movsl
cmpb
mull
decb
jbe
mov
sti
popa
mov
enter
or
in
adc
and
inc
mov
lahf
popf
jno
aam
stos
repz
or
dec
xchg
cmpsb
mov
daa
js
or
in
mov
aam
and
pushf
gs
and
rcl
fwait
cmp
jne
push
jo
sub
ret
insl
dec
aad
ret
cmp
mov
xchg
clc
mov
cwtl
dec
ds
lret
out
xchg
sbb
mov
clc
adc
pop
add
out
inc
cltd
mov
mov
cmp
repz
dec
in
jl,pt
sub
push
cld
jecxz
adc
push
daa
sbb
sbb
iret
xchg
mov
lahf
xchg
sub
cmc
adc
pop
dec
or
push
lock
in
xchg
or
fcomp
arpl
insl
add
shll
stos
jno
lcall
loop
xorb
mov
xchg
adc
sar
movsb
js
xlat
mov
ret
mov
or
imul
add
sub
std
lods
add
in
imul
dec
xor
sbb
lret
addr16
insb
mov
push
mov
xchg
jle
loop
popf
pop
test
test
cmp
aas
fldl2e
loop
cwtl
mov
call
lea
movsl
jg
xchg
frstor
xor
sbb
sahf
imul
xchg
mov
cmc
xchg
stos
cmpsb
ljmp
popf
rep
and
sbb
je
xchg
insl
jg
rcrb
adc
mov
mov
dec
push
ret
loopne
cld
cmpsb
cmp
sti
jbe
mov
mov
mov
or
repnz
inc
or
adc
mov
jae
icebp
or
push
test
pop
mov
test
insl
cmpsl
xchg
iret
xchg
dec
cs
repnz
outsb
push
out
rcl
icebp
icebp
lock
or
addr16
ss
stos
std
mov
jnp
mov
popf
and
test
cmp
scas
movsb
in
pop
inc
push
test
push
lock
imul
cmp
mov
or
fdivs
mov
jbe
and
pop
jnp
and
fmuls
sbb
inc
xor
pop
mov
stc
lret
mov
fadd
jmp
daa
leave
push
daa
insb
out
bound
push
loopne
adc
mov
addr16
push
xchg
mov
add
mov
add
xchg
and
stc
and
push
mov
cmpsl
fwait
test
adc
pop
cmp
loope
stos
daa
xchg
std
push
fidivrs
ss
push
xor
rorb
repz
and
push
add
xlat
fs
mov
inc
dec
jle
sahf
shlb
push
push
js
inc
rolb
scas
rolb
push
xchg
jp
ret
ss
xor
push
xlat
les
xlat
cmp
roll
inc
sahf
mov
lds
mov
mov
and
repnz
jmp
clc
pop
lock
mov
cmpsb
movsb
aaa
sbb
sti
fcomps
cli
sub
mov
xor
push
das
mov
out
mov
cmp
int
rorl
pop
lret
pop
mov
sbb
in
fcoms
mov
jl
sbb
cwtl
cwtl
and
pop
sub
add
and
add
adc
ljmp
fimull
jo
scas
cmp
jle
push
mov
stos
stos
sbb
jge
or
fcompl
mov
jnp
sbb
xchg
push
xchg
push
mov
lock
loop
xchg
sbb
iret
xor
fmull
mov
sbbl
mov
push
cs
nop
push
dec
int
jne
jnp
or
addl
lods
ljmp
pushf
out
add
loop
dec
adc
mov
or
sub
cli
shrl
sbb
adc
movl
sbb
imul
push
icebp
mov
xlat
and
hlt
cld
orb
jecxz
adcl
xchg
fcoms
push
packsswb
jge
mov
sub
lds
in
iret
and
repnz
jno
fcoms
inc
or
pop
push
jmp
js
sub
scas
nop
cld
insl
call
lret
mov
ret
insb
repz
mov
data16
rorb
int3
fmul
arpl
loope
leave
negb
ljmp
stc
stos
ljmp
leave
jo
cltd
jg
sub
dec
cltd
pop
sbb
outsl
and
dec
aam
mov
and
mov
mov
jne
fs
inc
or
push
xor
xor
lret
push
fnstsw
loope
add
push
adc
mov
and
lret
icebp
pusha
sub
enter
test
xchg
cld
ja
jg
inc
adc
lods
mov
jne
and
lcall
dec
inc
push
xlat
ficomps
cld
bound
scas
jp
adc
lock
xchg
pmaddwd
push
outsb
xchg
mov
in
mov
sbb
punpcklbw
adc
roll
sarl
push
jno
hlt
pop
in
data16
jne
pop
scas
xchg
daa
dec
pop
xchg
and
xor
fmulp
imul
iret
icebp
repz
cmc
lods
cwtl
mov
mov
and
mov
fnstcw
mov
and
jg
sub
cmp
jb
in
pushf
in
mov
aad
mov
sbb
dec
or
cmc
push
xchg
scas
fildl
jnp
and
int3
ss
push
and
pop
inc
divb
pop
pop
notb
and
ret
xor
orl
repnz
push
nop
mov
xchg
ret
pop
test
andl
out
inc
lea
iret
pusha
sbb
lds
orb
outsl
push
bound
iret
andb
pop
mov
mov
adc
xor
lds
aaa
mul
and
jbe
shr
mov
mov
inc
xor
inc
std
ja
cmp
xchg
lock
add
insb
mov
mov
imul
in
cs
xchg
fsubrl
push
adc
testl
xor
jne
or
xchg
das
in
inc
adc
mov
shl
xlat
mov
push
jae
xor
iret
ud0
push
push
outsl
or
popf
mov
mov
xchg
repz
cli
cmc
and
jl
out
daa
mov
mull
dec
xor
sahf
cmc
jecxz
popa
popa
ja
add
mov
cmc
sti
dec
sub
pop
or
and
and
rorb
push
dec
inc
scas
inc
pop
lret
jo
push
ficompl
mov
cmp
mov
cltd
xorps
leave
lea
cld
addr16
mov
push
xchg
ja
xchg
vrsqrtss
and
or
cmp
sbb
dec
dec
rol
xchg
call
addb
jno
or
jle
into
js
cmp
stos
fimuls
mov
sbb
in
sarl
inc
push
dec
repz
fldl
inc
loopne
cmp
and
push
cli
pop
jge
fsub
push
cmpsb
cmp
xchg
lds
lret
cmpsl
and
xor
sbb
stos
dec
test
add
rcrl
out
cltd
mov
and
stos
xor
mov
mov
pop
fdivrl
and
jnp
pushf
cmpsb
inc
push
jecxz
rolb
mov
ss
xor
jo
lods
and
cmpsb
add
sbb
fdivrl
jmp
xlat
push
xchg
mov
and
mov
adc
sub
pop
xchg
ds
pop
mov
or
int3
and
cmpsb
in
out
addr16
std
cltd
xor
or
mov
mov
es
daa
add
in
push
inc
lods
cmpsl
call
cwtl
push
jbe
adc
push
movsb
mov
lahf
sti
mov
js
pop
popa
lret
jg
leave
psubusw
outsb
pop
push
mov
add
addr16
int3
or
data16
cmp
push
xlat
sub
or
mov
jl
jg
cwtl
dec
hlt
cmp
xchg
ljmp
shrb
stos
pusha
mov
rolb
fcmovbe
sbb
mov
les
outsb
in
lea
pop
xor
or
scas
bound
sbb
mov
out
pop
ret
sub
jecxz
scas
inc
nop
xor
jecxz
pop
or
mov
jp
xor
inc
push
pop
inc
sbb
scas
jp
fdivr
test
sahf
pop
adc
xchg
pushf
jg
cmp
mov
mov
inc
sbb
cmp
ret
movsl
adc
inc
sbb
mov
pop
mov
jle
dec
dec
aam
jbe
mov
cmp
push
and
aas
sbbb
xor
iret
imul
jae
xchg
inc
imulb
pop
mov
xchg
pop
fwait
cmp
and
sbb
stc
adc
inc
xlat
dec
mov
mul
aad
and
and
imul
dec
xlat
mov
rol
xchg
jno
outsb
jns
jns
adc
cmp
pushl
push
or
leave
aam
mov
gs
adc
mov
mov
push
test
or
arpl
dec
imul
pop
lret
dec
jg
sahf
fucom
aas
outsl
adc
pop
repz
loop
push
push
into
cwtl
lahf
in
cmp
jmp
ret
cvtps2pd
sbb
cs
cmpsb
repz
pop
std
scas
mov
or
lret
in
lret
loopne
push
lods
sub
je
rolb
cmp
mov
cmpsl
and
xchg
aam
loop
inc
lods
mov
test
daa
stc
mov
cmp
icebp
adc
push
and
push
mov
and
pop
push
and
idivl
adc
mov
sbb
xor
mov
mov
movsl
mov
sahf
lcall
and
push
lea
iret
daa
mov
jnp
movsl
jg
pop
int
fdivs
and
addr16
inc
ret
add
mov
pop
mov
cmp
cltd
mov
loopne
jp
scas
loop
mov
mov
push
jle
pop
push
xor
les
pushl
pop
jb
insb
jbe
insb
mov
mov
lcall
adc
repnz
leave
jp
pop
dec
nop
mov
scas
pop
xchg
mov
or
fcmovnb
stos
fisubrl
jmp
sarl
js
dec
push
aaa
lods
sub
sbb
xchg
add
stc
cmpsb
push
popf
and
mov
and
cmp
lods
pop
xchg
cmp
cmpl
add
pop
roll
push
jg
mov
jp
movsb
jnp
test
xchg
xor
sbb
sbb
xchg
cmp
decb
mov
ja
add
pop
mov
out
xor
cmp
ret
ret
cmp
test
movsb
ret
lea
pusha
xchg
repz
out
mov
in
sub
push
pop
inc
daa
test
push
adc
mov
and
cltd
inc
sub
or
jle
pop
push
scas
push
push
lds
push
inc
mov
stc
cltd
adc
push
mov
mov
imul
sahf
fidivs
mull
sbb
and
xor
int3
xor
hlt
leave
in
cltd
std
out
jl
imul
jcxz
aad
mov
adc
jmp
jmp
inc
xchg
in
scas
ljmp
int
clc
push
xchg
notl
xlat
mov
cltd
jb
shl
push
jbe
mov
sbb
push
xchg
or
test
outsb
or
in
pop
mov
addr16
mov
mov
jecxz
push
fimull
xchg
push
test
jp
cs
inc
mov
sub
inc
outsb
mov
fwait
inc
nop
aam
insl
and
shlb
pop
pop
ljmp
cmpsb
data16
or
mov
sbb
pop
iret
sub
int
push
push
ret
stos
xor
xchg
add
jmp
gs
adc
loope
stos
popa
jle
lds
ret
push
cmp
mov
js
cld
repnz
fmulp
xchg
jle
out
mov
push
dec
aad
sbb
mov
fldcw
push
ret
cwtl
fstps
int3
cmp
cmpsb
cmp
cmp
shlb
xchg
pop
leave
imul
cmp
push
add
add
pop
and
jb
into
adc
xor
out
sub
lcall
inc
push
cmpsl
push
rol
orb
aaa
out
aaa
cwtl
inc
cmp
cmp
leave
das
out
push
inc
mov
dec
xchg
test
stc
push
loope
jp
ficomps
outsb
dec
outsb
negb
adc
sbb
lods
xor
daa
or
pop
mov
inc
push
push
scas
out
in
pop
jne
jno
repnz
inc
stos
push
pop
scas
jo
push
stos
aaa
mov
imul
fldt
in
js
cmp
sub
and
or
cmp
xrelease
jmp
xchg
ja
pop
dec
xor
adc
or
pop
cmpsl
outsl
cld
xchg
repnz
mov
hlt
in
in
loop
lret
inc
cmc
push
pop
push
jp
mov
mov
pop
and
mov
outsl
stc
loope
lea
aaa
fucomi
xor
dec
and
inc
adc
cli
sahf
mov
ret
lods
add
and
xchg
mov
adc
xchg
push
dec
xchg
lock
adc
adc
int3
imul
shrb
std
adc
dec
xchg
xchg
push
in
dec
jnp
mov
push
subl
stos
push
fisubl
frstpm(287
in
sbb
mov
ss
mov
daa
stos
sub
xchg
jle
enter
popa
or
pop
ljmp
mov
scas
lcall
call
std
sbb
sub
lea
and
sub
mov
jno
pop
or
ja
dec
push
or
stos
outsl
in
fadds
sahf
jo
mov
out
adc
inc
pop
push
ss
mov
mov
fwait
xor
scas
adc
dec
jbe
jae
mov
or
xchg
mov
cmp
into
shrb
rcrl
lahf
int3
fsubl
roll
mov
push
sbb
fs
dec
repnz
das
xchg
mov
push
push
out
jmp
ja
hlt
jnp
cmpl
movmskps
lods
dec
xchg
loope
xor
flds
cmp
cmpsb
pusha
movsb
pop
push
rorl
push
adc
mov
xor
mov
shlb
pop
fisubrs
xchg
nop
xor
sbb
fsts
jo
mov
pop
add
add
iret
add
dec
inc
jmp
xchg
test
je
mov
mov
cmp
sub
outsb
and
mov
mov
hlt
jmp
outsb
jecxz
mov
cmpsl
idivb
shrb
add
call
fsub
cli
xchg
fldcw
xor
xchg
and
jg
scas
jge
loope
sub
cli
packssdw
cmp
fs
mull
pop
jp
dec
inc
pusha
testb
jae
mov
xchg
mov
test
mov
lods
aas
std
adc
shr
jg
add
push
andb
aas
jo
push
cmp
xor
pop
mov
loopne
ds
outsb
cmp
sub
into
stos
adcb
xor
stos
add
mov
inc
push
xor
sbb
pop
orl
cmp
lock
gs
add
jmp
pop
lock
mov
mov
xor
imul
fadds
pop
jge
dec
and
mov
ret
dec
cmp
shll
aas
jmp
xchg
popf
xor
cld
push
jp
jecxz
incb
cmp
loopne
adc
push
inc
stos
xchg
mov
and
xchg
xor
int
xchg
mov
cmp
js
gs
outsb
push
xor
mov
sub
movlps
pop
mov
or
pmullw
jo
adc
sbb
rcr
ja
jo
int3
push
cmp
sbb
incl
mov
orb
out
pop
add
xchg
repz
or
push
xchg
pushf
push
es
mov
jne
push
inc
fnsave
and
adcl
mov
or
repz
mov
jmp
psubsw
fdivr
enter
pop
scas
out
or
pop
sbb
lret
movsb
cltd
jo
or
pop
push
mov
add
mov
cli
sub
pop
outsb
push
loopne
pop
push
std
lds
aad
mov
fs
mov
sub
imul
jp
pushf
ljmp
bound
push
inc
xor
mov
pop
jbe
inc
je
lahf
in
aam
ret
cmp
int
insb
sbb
aas
jbe
rcl
test
subl
inc
dec
mov
adc
out
movsb
sub
mov
inc
sti
mov
push
in
lcall
hlt
and
adc
int
and
sub
mov
cmp
cld
sbb
cmpsb
or
jge
je
jae
imul
cwtl
add
js
loope
cmp
cmp
mov
pop
jle
adc
in
adc
xchg
sbb
int3
adc
fcmovnb
ja
pop
sarl
xchg
and
pop
sbb
fisubs
dec
sbb
fsubrs
rol
ss
stc
lea
data16
pop
es
sub
pushf
inc
imul
jb
hlt
lcall
jg
adc
pop
adc
pop
pushf
inc
mov
pop
mov
ja
in
sti
adc
xchg
cld
out
and
dec
insb
es
sbb
pop
inc
rolb
rorb
xor
inc
scas
stc
xor
ljmp
scas
cmp
push
jmp
mov
or
ret
xor
int
fldl
xchg
push
jg
or
or
mov
loopne
loopne
bound
jmp
push
sbb
push
mov
loope
sarb
and
push
mov
mov
aad
mov
andl
fcmovnu
add
sub
sahf
and
lcall
mov
out
popf
sbb
cmp
dec
arpl
jecxz
out
outsb
xchg
sub
sub
add
jnp
mov
popa
lea
sti
orl
lahf
xlat
orb
aad
stos
int
cwtl
mov
xchg
jo
addr16
outsb
ret
xlat
push
sbb
cmp
ficoms
je
jo
mov
movsb
hlt
pop
aad
js
cmp
cmpsb
lods
dec
stos
mov
sub
in
bound
shll
add
roll
push
lea
cld
pop
rorl
adc
cld
jbe
and
xorl
cmpsb
and
aaa
sahf
pop
push
mov
mov
adcb
inc
ja
aas
pusha
adc
mov
mov
test
cs
adc
xlat
rcrb
out
das
mov
bound
lret
roll
imul
arpl
ja
scas
xlat
xchg
add
sub
lret
nop
ret
ss
and
xor
out
lret
ljmp
push
jp
imul
xchg
mov
and
cmpsb
xor
das
adc
jns
fiaddl
insl
std
mov
lret
lds
sub
dec
shrl
xchg
test
inc
dec
add
lahf
mov
stc
dec
gs
inc
cmpsl
pushf
lock
mov
lea
fistpl
sub
xor
lret
pop
aaa
mov
adc
mov
cmp
and
aas
cwtl
mov
insl
in
inc
and
popf
xor
sub
out
rsm
repnz
jno
cmc
xlat
and
adc
add
sti
pop
mov
in
cld
jp
sbb
lret
shll
call
imull
jecxz
rol
and
mov
xchg
push
call
jle
movsb
testl
into
mov
sbb
mov
divps
add
add
push
cmp
dec
mov
jecxz
enter
sub
mov
sahf
sub
addr16
out
arpl
fwait
mov
jae
ficompl
and
dec
cmp
ret
jnp
mov
shll
out
out
fwait
out
sub
aam
jl
inc
inc
lea
mov
lahf
jecxz
sbb
mov
adc
popl
xor
sub
mov
add
es
pusha
dec
clc
cmp
adc
add
inc
imul
and
dec
outsb
sub
iret
bound
mov
cs
addl
pushf
add
jmp
scas
and
loope
rorl
psubusw
cmp
cmc
cwtl
clc
and
mov
icebp
or
out
imul
cmp
testb
outsl
mov
or
mov
lds
jmp
push
xor
lods
jmp
movsl
shll
dec
or
xor
sub
in
push
cltd
insl
daa
and
je
cwtl
sub
lahf
imulb
loope
pop
mov
sub
dec
popf
adc
jl
xchg
mov
daa
ss
movsl
rclb
sar
rcrl
or
ljmp
test
sbb
popf
jmp
stos
outsl
cmpsl
stos
sub
cmp
mov
push
or
stc
push
test
sub
mov
dec
xchg
mov
push
iret
cmp
push
js
mov
add
push
sbb
push
enter
dec
pop
inc
inc
aad
jl
sbb
mov
ja
mov
fadd
stos
outsl
mov
xchg
mov
fcoml
pop
sbb
jp
inc
popf
movsb
pushf
xchg
mov
mov
push
or
and
sbb
jns
daa
sarl
loopne
jno
jp
mov
push
icebp
mov
or
dec
sub
dec
add
imul
fildl
das
lods
mov
in
test
gs
ficompl
jb
daa
jae
mov
arpl
mov
dec
test
scas
or
mov
in
rcrb
jmp
jecxz
loope
clc
cwtl
fcompl
movb
adc
sbb
lods
pop
lea
sub
mov
or
mov
shl
push
rcrb
aas
loope
xchg
mov
test
icebp
mov
dec
cmpsb
shr
sbb
daa
and
xchg
add
andb
xchg
sti
loopne
std
stos
cmp
and
or
stc
ds
mov
clc
and
hlt
pop
and
nop
movsl
and
arpl
adc
in
and
xchg
popf
call
xchg
xor
call
clc
push
cmp
call
push
pop
add
adc
aad
pop
pop
ss
lret
push
loop
ja
add
cwtl
sub
lahf
rolb
cvtpi2ps
xor
push
jge
and
mov
push
mov
add
ret
dec
or
pop
sub
and
pop
pop
jno
pushf
addb
mov
and
jle
sub
std
mov
insb
mov
add
repz
pop
aaa
xlat
inc
rorb
jl
arpl
outsb
mov
testb
push
sbb
jae
test
sub
push
icebp
xchg
lods
pop
rorb
mov
push
pop
mov
mov
mov
and
mov
pop
adc
jmp
ja
adc
mov
cltd
mov
add
std
repz
aaa
in
sub
lds
sub
scas
jg
xchg
dec
andl
leave
mov
or
jl
mov
pcmpeqw
and
adc
or
rclb
add
mov
scas
test
and
push
test
in
and
movsb
or
scas
scas
xor
mov
jns
les
test
subl
or
stc
jne
jmp
mulb
rolb
imul
or
inc
cmc
pop
rdmsr
xor
pop
outsb
jmp
adc
cmc
and
movsb
mov
fs
or
fcoml
and
and
and
mov
ja
mov
scas
xchg
jmp
mov
fisubs
shl
mov
cmp
and
mov
push
iret
iret
ret
push
sub
ret
dec
add
or
sub
out
mov
test
cltd
cwtl
add
mov
popa
mov
outsb
adc
iret
out
push
mov
cmp
xor
cmp
cmp
mov
iret
testb
ficompl
daa
and
xor
inc
sarl
popf
xlat
test
push
aaa
sub
mov
jge
jae
xchg
in
pop
pop
mov
mov
fisttpl
sbb
dec
or
add
mov
imul
push
loopne
enter
push
lret
pop
adcl
sub
ret
jle
jb
adc
jo
mov
xchg
lret
xchg
lods
jns
inc
dec
mov
sub
mov
call
mov
jp
roll
enter
mov
push
loop
or
sub
mov
sub
stc
iret
mov
push
out
in
cwtl
inc
mov
xor
add
cld
ss
fistpl
mov
jg
adc
test
mul
lret
push
sub
xor
dec
enter
ret
stos
xchg
dec
rcrb
and
xorl
jl
dec
stos
scas
xchg
aam
stos
sub
loop
xchg
pop
sbb
push
in
sub
outsb
movsl
testb
in
rolb
imul
xchg
mov
xor
xchg
or
sbb
dec
lods
loop
sbb
inc
test
lahf
push
movzbl
outsb
mov
aaa
popa
mov
sbb
addr16
lock
pop
push
xor
sbb
and
inc
test
xchg
cmp
mov
arpl
xor
sub
pop
add
mov
push
inc
jnp
fnstenv
das
jae
stc
jns
lods
xchg
mov
sub
pop
shlb
pop
or
test
pop
lahf
mov
pop
mov
jge
jno
add
xchg
dec
mov
bound
mov
test
inc
data16
xlat
popa
sbb
mov
jnp
mov
orl
es
xchg
popf
aaa
adc
int
imul
jns
outsb
inc
out
lret
push
clc
ljmp
cmp
test
les
lock
decb
enter
jno
jne
jns
rorb
enter
nop
test
repnz
dec
inc
sub
lret
add
sarl
xchg
mov
xchg
xchg
push
dec
daa
cltd
imull
movsl
push
mov
into
inc
pop
fwait
hlt
fucomp
mov
bound
ror
xor
sub
sti
cmp
jp
cmp
gs
mov
ret
cmp
sub
filds
int
insl
stos
push
mov
cmp
add
js
fsubrl
out
sahf
mov
gs
xchg
push
adc
ljmp
jl
mov
cmpl
cli
fwait
dec
pop
outsb
inc
xchg
sub
adc
fcoms
mov
mov
fdivrs
es
repnz
dec
repnz
lock
sbb
scas
mov
push
hlt
fwait
mov
movsb
lods
cmp
xchg
xchg
mov
adc
iret
iret
addr16
xchg
test
shrl
pop
push
xchg
shrb
push
roll
jecxz
dec
and
lcall
test
ret
sbb
mov
stc
aad
jecxz
push
sub
push
clc
imul
mov
jbe
fcoml
pop
aas
sbb
test
jno
fstps
dec
jnp
mov
je
push
xchg
outsb
xchg
adc
xchg
insl
nop
xor
xchg
adcb
jae
rclb
mov
push
dec
roll
mov
sub
sbb
rcr
xchg
mov
mov
jb
and
out
out
xor
aaa
and
imul
aas
idivl
idivb
jo
xchg
and
pop
jno
push
push
jae
pop
mov
lds
pop
mov
pop
fs
fmull
mov
lods
xchg
xchg
sub
js
in
js
xchg
xchg
cmpsb
jne
xchg
jecxz
dec
and
ss
and
inc
pop
push
push
xlat
loopne
xor
ss
ret
into
dec
dec
inc
inc
lods
pop
sub
fcomp
lret
cmp
xchg
ss
adc
pop
dec
outsl
xor
mov
sbb
cmpsl
stc
nop
into
inc
xor
repnz
movsl
int3
test
ja
mov
mov
arpl
lds
test
dec
bound
xor
test
sub
les
imul
pop
jne
xor
xchg
sub
aaa
sbb
stc
cmp
mov
jle
call
cmp
push
lods
xchg
push
xorb
xor
syscall
clc
xorw
inc
imul
int
repz
not
adc
sbb
addr16
stos
stos
push
cmp
data16
dec
imul
or
icebp
fcoms
loope
stos
and
aad
fdivs
subb
sbb
mov
xchg
and
cmpsl
mov
mov
fsts
nop
outsl
in
jmp
lahf
pusha
or
or
dec
add
cmp
pop
xchg
testb
imul
mov
pushf
or
clc
jbe
aad
mov
xchg
sub
mov
hlt
out
add
jecxz
or
pushf
pop
punpckhwd
enter
push
ret
test
cmpsb
add
xchg
xor
shlb
mov
mov
lds
sub
sbb
in
or
xor
fwait
sbb
pop
adc
push
pop
gs
popf
inc
lock
test
into
fst
pop
fisubl
add
int
cmc
inc
bound
mov
cmp
pop
sbb
xchg
hlt
sahf
add
testb
aad
pushf
mov
testb
fwait
outsb
pop
or
push
sbb
dec
sti
push
jns
aas
out
insl
cmp
sub
mov
out
neg
shrl
pop
mov
das
mov
mov
pusha
dec
push
or
shrl
jle
or
int
sub
ret
jle
jns
mov
inc
mov
shlb
iret
add
fcoms
xor
fsubl
push
pop
pop
clc
je
push
ficomps
push
in
jnp
xchg
test
pushf
aas
or
imul
insl
sbb
imul
popf
movsl
ss
cmpsb
pop
xor
mov
push
dec
pop
lods
xchg
adc
or
adc
stos
jmp
fildl
mov
add
fwait
inc
fwait
xor
in
sub
insb
es
fiadds
cmp
sub
mov
adc
push
push
into
in
add
sub
roll
fs
push
sbbb
mov
push
das
data16
sbb
mov
lret
inc
adc
lret
adcl
dec
cmpsb
inc
lods
jae
push
jle
clc
fcmovnbe
fists
cmpsb
rorl
addl
ret
push
lds
ljmp
jp
fnstsw
shl
xchg
and
cmp
cmp
sbb
ds
inc
jp
adcb
cwtl
or
lret
ret
clc
fs
push
dec
fcomp
cmp
xor
sbb
sub
out
xchg
jp
ja
cmp
fstpt
inc
je
aaa
adc
mov
movsl
imul
test
lret
xchg
je
inc
scas
cltd
imull
mov
push
cmp
pop
jge
xorb
in
mov
xchg
and
imul
movsb
roll
fsubr
sahf
sub
and
mov
xor
jae
aaa
lahf
inc
andl
aad
popa
pop
nop
imulb
mov
loop
cltd
adc
inc
subb
mov
daa
and
arpl
jl
out
push
cmp
push
shrl
sub
add
push
cmpsl
fisttpll
fisubs
lea
add
xchg
not
pop
call
push
outsl
push
outsb
cwtl
lods
xchg
fwait
test
add
enter
push
pop
fwait
mov
popf
and
stos
mov
cmp
fiaddl
xchg
cmpsb
pop
fadds
test
sbb
mov
and
gs
and
out
mov
xorl
clc
and
mov
loope
shlb
pop
aaa
mov
dec
xor
out
fbld
test
mov
pop
cmc
clc
jle
pop
mov
mov
loopne
adc
fdivp
popf
sub
mov
stos
loopne
mov
xchg
fwait
hlt
mov
push
jne
or
outsl
xchg
mov
dec
push
rcl
xchg
inc
inc
inc
pop
std
mov
pushf
inc
mov
jbe
sub
push
add
pop
add
lret
push
mull
sahf
in
jo
jne
or
xor
cli
gs
mov
pusha
outsb
adc
mov
arpl
pop
cli
lret
into
sbb
outsl
fmuls
xor
push
int3
pop
sub
flds
inc
mov
xor
pushl
out
sub
dec
jmp
xlat
add
pop
mov
push
push
add
mov
lahf
cmpsb
cmc
lock
enter
scas
lea
jo
cmc
es
in
mov
pop
movsb
inc
xor
pop
fdivrs
push
sub
fcomps
xchg
cltd
mov
aam
cmp
ja
inc
popf
mov
adc
cmpsl
popa
cmp
es
in
mov
push
or
loopne
push
andl
cmp
adc
data16
inc
bnd
icebp
add
gs
jo
pop
inc
push
xor
mov
scas
xor
xchg
lret
mov
sbb
test
ss
lret
sub
inc
or
insl
xor
ret
fwait
sbb
dec
mov
xor
lret
pop
or
or
enter
sub
jecxz
mov
push
inc
and
adcl
rcl
shr
imul
mov
js
sbb
xchg
test
xor
and
adc
scas
decl
es
out
jb
pop
sub
clc
and
cmp
sub
lret
cs
sub
mov
pop
es
jb
xchg
es
sbb
mov
movsb
cltd
cwtl
bound
dec
cli
clc
sub
push
test
and
pop
sbb
xorb
insl
jae
xor
xor
xchg
aaa
xor
jb
jmp
mov
outsl
xor
add
call
es
mov
lcall
lcall
cmp
inc
adc
or
dec
and
fimuls
add
mov
adc
aas
push
icebp
pop
xchg
arpl
fprem
xchg
push
mov
or
inc
cmp
inc
xchg
push
xorl
fmull
call
mov
mov
xor
cmc
arpl
loopne
jmp
aas
fstl
movsb
pop
decl
insb
cmc
adc
fmul
pop
push
jno
sbb
fimuls
cmpsb
movsb
mov
adc
aas
sahf
fidivrl
push
push
dec
mov
or
pop
int
inc
or
push
jge
nop
pop
pop
shlb
flds
fwait
rorb
mov
lods
inc
cmc
xchg
ja
sub
push
out
mov
xchg
dec
cmpsb
add
jp
jbe
loopne
inc
and
repz
shrl
push
imull
mov
popa
scas
push
sbb
add
pop
in
and
test
outsl
in
xchg
iret
nop
out
sbb
xchg
dec
push
decl
jecxz
cmp
mov
xchg
sti
and
ljmp
js
fwait
lcall
rcrl
sbb
push
scas
lds
mov
sub
or
xchg
xor
sbb
pop
fs
nop
xor
addr16
cltd
idivl
xor
adc
test
mov
orb
sbb
insl
stos
dec
cmpsb
in
loop
mov
mov
out
idivl
or
sbb
test
fstpl
cmp
ds
imul
fsub
cmp
mov
pop
dec
rcrb
mov
inc
cmp
int
mov
insb
mov
mov
push
jno
pushl
rol
insl
pop
int
movsl
jg
xchg
rclb
mov
and
sub
xchg
push
jbe
push
fsubrs
cmp
sbb
or
cmp
adc
dec
mov
xchg
hlt
ret
ja
rcrb
mov
into
push
fildll
call
adc
and
mov
mov
out
sub
add
fcompl
shl
mov
jl
insb
jl
test
or
rcl
lds
sbb
pop
insl
and
shlb
fdivrs
rcrl
jae
dec
fdiv
fs
in
dec
sbb
mov
sub
and
test
in
movsl
xchg
xor
xor
movsb
xchg
adcb
fdivrl
dec
jp
leave
xchg
dec
insb
jecxz
adc
push
adcb
mov
stos
cmpsl
xor
xlat
adc
in
adc
xchg
sti
xchg
outsb
push
push
inc
sub
test
adc
rcrl
xorl
out
push
cmp
mov
mov
mov
xlat
sbb
stc
scas
aad
lds
daa
in
sub
jbe
mov
pop
jno
jmp
das
or
cmp
repnz
aad
clc
stc
xor
das
mov
test
mov
fsubp
mov
sub
inc
cmp
scas
adc
push
or
bound
aam
mov
fwait
push
or
inc
iret
cmp
mov
in
lahf
push
fsubp
dec
dec
add
gs
aam
mov
xor
pop
add
outsb
into
dec
std
mov
popa
out
sub
stos
dec
imul
stos
push
push
inc
or
int
pop
or
sbb
jae
fisubrs
push
or
inc
je
sti
cmc
pop
adc
add
sbb
cmp
les
lahf
and
ret
adc
lcall
jmp
lea
mov
decl
mov
test
dec
loop
mov
out
aam
push
inc
xchg
fisttpll
fbld
test
cmp
les
pop
nop
pop
stos
xchg
aad
or
push
dec
incl
pop
or
fs
mov
or
xorb
sbb
mov
mov
push
nop
pop
mov
mov
cld
mov
push
cli
testl
ret
xchg
cmp
loope
mov
pop
add
jne
xor
pusha
enter
sub
pop
xchg
pop
addr16
loop
int
inc
mov
sbb
movsl
inc
mov
xchg
ffree
dec
mov
pop
popa
das
stos
cmp
out
inc
mov
shlb
ja
jns
sahf
test
mov
push
or
daa
pushf
mov
data16
push
mov
adc
xor
popf
and
jnp
push
loop
scas
cmp
xor
and
push
out
lret
neg
xchg
movsb
cmpsl
xor
cmc
xor
insl
inc
mov
cmp
lea
adc
mov
jmp
imul
jnp
les
cmc
call
jmp
jmp
xchg
push
test
daa
xchg
push
dec
loop
loope
cmp
in
push
push
mov
push
lret
adc
cwtl
dec
insb
inc
mov
ret
jnp
lds
mov
cmp
pop
and
inc
das
ds
int
cmpsb
popa
pop
call
jle
sarl
jmp
jne
inc
mov
mov
iret
es
add
lahf
push
testb
inc
add
fildl
sub
sub
pop
push
pop
add
sub
bound
mov
jl
jg
or
mov
shr
sahf
jb
leave
popf
add
or
pop
sub
cmpsb
enter
fwait
pop
fbstp
pop
xor
popa
cwtl
jmp
repz
repnz
inc
imul
repnz
xor
aam
cmp
shrl
inc
add
sbb
repz
ja
ds
arpl
testl
xchg
mov
popf
cmp
sub
and
pop
imul
lea
fcomps
inc
aaa
mov
push
das
aad
fisubl
push
fwait
jb
mov
jns
inc
dec
mov
dec
loope
push
push
inc
lahf
fdivrp
dec
lds
push
loop
push
pop
push
sub
outsb
insb
std
sub
jl
loop
push
jmp
mov
inc
xchg
in
xor
aas
stc
test
addb
or
dec
inc
or
sti
imul
in
fidivrs
cmc
inc
imul
mov
cltd
shrl
mov
fdivrl
add
sub
mov
test
fwait
std
cli
and
push
inc
lods
fldz
adc
push
inc
repz
jns
clc
sbbw
jo
das
movsb
sub
int3
aad
pusha
xor
out
ljmp
adc
pushl
and
xchg
jge
cli
imul
sbb
xor
inc
inc
jp
sbb
clc
pop
sbbl
mov
stos
popf
pusha
adc
sbb
stos
or
shl
inc
xor
in
pop
repz
jmp
sub
ret
adc
mov
lods
cli
test
iret
jb
and
cli
sbb
sarl
add
jne
addr16
test
cs
repz
inc
mov
push
dec
mov
shll
add
and
decl
int3
int
pop
sahf
les
ja
mov
in
aaa
pushw
sub
negl
or
popf
lock
dec
loopne
ret
inc
push
mov
inc
xchg
stos
xor
stc
ret
repnz
lds
add
lret
xor
push
lret
stc
or
xchg
iret
xchg
add
fxch
sbb
xchg
push
jge
subl
lahf
inc
push
outsb
test
cmp
inc
sbb
popa
mov
sbb
iret
mov
jl
fisttps
mov
mov
mov
or
stos
das
and
or
and
pusha
outsl
ss
repz
mov
jmp
daa
call
arpl
xor
je
add
outsb
and
xchg
repnz
mov
pop
movb
cli
shrl
negb
jge
leave
mov
dec
pop
xchg
mov
pop
sbbb
inc
push
sbb
sub
or
inc
lods
pcmpeqb
je
jne
cmc
jge
cltd
pop
dec
xor
and
adc
and
aaa
out
mov
add
into
fists
mov
sbb
and
and
mov
ficomps
out
mov
cmp
xchg
add
inc
fnstenv
lds
jmp
sbb
sbb
mov
enter
adc
add
in
inc
xchg
orl
sbb
bound
and
fwait
imul
rcrb
dec
or
imul
sbb
std
or
inc
aaa
inc
or
aam
dec
pop
mov
aas
xchg
andl
clc
inc
jne
jns
cmp
dec
bnd
mov
pushf
mov
jnp
dec
mov
nop
xchg
jb
stos
dec
nop
dec
push
dec
test
in
ljmp
lret
fists
push
mov
test
into
cmp
loop
std
sbb
cmpl
push
je
jo
imul
shrb
out
imul
orl
fcomi
jns
pusha
pop
push
xor
mov
inc
xor
rcll
pusha
repz
xchg
mov
mov
sahf
add
xchg
idivl
jns
cmp
lock
push
inc
cmp
or
aam
push
movsl
push
mov
sbb
adc
repnz
or
xor
cwtl
lea
test
inc
fcmovnu
or
adc
pop
mov
adc
iret
push
in
test
shrb
jb
add
lock
push
jge
inc
mov
dec
pop
data16
lds
sbb
scas
ljmp
cwtl
sbb
pop
pusha
lret
mov
mov
mov
inc
xchg
inc
mov
cmpsl
imul
cmp
lret
sahf
pop
shlb
fstpl
pop
xchg
sub
mov
hlt
sbb
test
sbb
mov
xor
dec
pop
insb
movsb
std
aam
fmul
xchg
jo
sub
fildl
insl
jo
shlb
adc
jno
out
jne
mov
xchg
call
push
jl
push
jno
clc
mov
push
incb
add
sbb
leave
mov
in
mov
scas
fs
test
add
mov
out
adc
xor
ljmp
cld
mov
push
addb
sbb
dec
adc
push
sti
xor
push
mov
int3
aad
lret
addl
insb
lahf
adc
pop
movsb
dec
lds
movb
push
loope
push
or
call
mov
pop
out
cli
mov
je
pop
imul
roll
mov
push
and
dec
and
cmp
inc
out
inc
pop
int
sbbb
pop
ja
sbb
jo
sbb
push
orb
arpl
cmc
rcr
scas
cld
xchg
mov
mov
push
lds
xor
jne
push
mov
adc
movsb
xchg
dec
fldt
cmp
pop
push
es
clc
cmp
and
mov
jecxz
inc
fidivrl
sbb
aaa
idivl
cmpb
popa
movsb
sub
jnp
loop
xchg
std
outsl
test
add
pop
nop
fwait
sahf
push
mov
mov
sbb
into
cli
pop
scas
call
inc
pop
adc
ret
xchg
push
mov
movl
insb
xor
insl
das
dec
nop
cld
cmp
test
lea
or
mov
ljmp
push
pop
jge
les
mov
and
std
pop
jl
adc
lcall
mov
cmc
cmpl
inc
in
push
sbb
mov
xor
jle
inc
sub
in
or
repnz
enter
mov
pop
ffree
pop
mov
out
dec
mov
xor
icebp
pop
mov
add
cmc
adc
icebp
xchg
cs
pop
int3
popa
pushf
cmp
int3
ret
lods
push
xchg
cld
test
repz
sub
cld
test
jae
fincstp
fisubl
add
jae
push
lods
je
add
sbb
daa
sub
mov
inc
adc
pop
outsl
mov
pop
rcll
or
sbb
fwait
push
shll
js
add
ja
adc
les
fcomp
jo
xor
leave
xor
xchg
jp
push
xor
mov
pop
jmp
push
dec
test
pop
stc
add
lahf
adc
out
out
mov
inc
cmovne
pop
jns
mov
push
cmc
add
popa
les
cwtl
out
in
test
dec
dec
mov
ret
adc
pop
jg
sub
popf
adc
stc
sub
jmp
dec
mov
mov
iret
stos
pusha
sub
ret
loope
inc
insw
xchg
cmp
add
loop
add
mov
cmp
jle
jp
sti
fwait
jmp
lret
mov
sub
or
mov
cmpsb
iret
jecxz
pop
dec
add
dec
pop
inc
cmc
adcb
sbb
negb
rcr
lods
fs
jp
in
inc
sbb
cmpsl
add
pop
sub
dec
into
pop
out
dec
mov
addl
std
call
cltd
sub
push
xchg
dec
es
mov
dec
mov
adc
outsl
imul
cmp
xchg
push
pushf
jl
push
pop
sbb
cmpsl
imul
push
inc
dec
sub
pusha
dec
outsl
sub
mov
movsl
test
and
sub
pop
inc
mov
scas
sbb
or
in
push
scas
pop
shrb
mov
mov
stos
mov
sahf
mov
sbb
jbe
ja
inc
or
jmp
pop
mov
mov
sub
adc
mov
test
pop
mov
mov
fbstp
aam
std
cwtl
data16
aad
xor
lods
fbstp
push
push
push
push
sub
mov
mov
lea
lods
inc
lods
add
jb
bnd
jecxz
inc
pushf
inc
or
dec
pop
jno
aam
rep
orb
xor
add
cmp
mov
outsb
mov
leave
fimuls
xor
cmpsl
repz
add
add
or
pusha
popa
inc
repnz
jge
imul
add
bswap
in
jp
dec
adcl
pop
xchg
inc
nop
push
mov
xchg
out
decl
push
xor
jecxz
shl
insl
cmp
jg
insb
pop
jecxz,pn
push
jecxz
pop
pop
iret
fbld
sbb
push
xchg
jmp
sbb
addr16
inc
shrb
dec
fbstp
test
clc
sub
inc
mov
imul
call
dec
sub
into
mov
scas
mov
sbb
push
aas
ret
xchg
std
push
out
and
mov
sbb
sub
aaa
inc
dec
stos
xor
addr16
mov
cmp
loop
jg
adcb
lods
push
ret
leave
ret
loop
and
dec
cs
fwait
int3
or
lret
incl
mov
in
adc
aad
jmp
push
ret
insl
pop
cld
in
movsb
jo
imul
cwtl
ss
sti
iret
jmp
ja
ss
mov
sbb
int
fmull
test
add
sahf
dec
pop
pop
and
ljmp
shlb
mov
ljmp
out
mov
fsts
xchg
into
stos
mov
gs
lret
inc
stos
repnz
push
mov
outsb
mov
mov
mov
gs
enter
out
jecxz
jne
loop
xchg
add
pop
leave
push
out
inc
mov
fcoms
shr
jge
aad
mov
jecxz
enter
xchg
push
sarb
test
jl
je
cmp
add
dec
ja
xchg
mov
jae
mov
out
test
push
xor
scas
bound
mul
insb
lcall
xchg
cmpl
test
pop
pop
jge
mov
jnp
ds
ss
lds
xor
jg
adc
neg
jno
xchg
scas
xlat
xor
out
jg
xchg
movsb
xlat
xchg
movsl
inc
jmp
mulb
mov
repnz
repz
repnz
mov
mov
add
jne
pop
add
aaa
orl
xchg
jb
out
push
push
dec
test
stc
add
mov
out
push
and
ret
push
xor
data16
ror
test
mov
add
mov
aaa
sub
inc
add
ret
pop
addr16
or
sahf
mov
or
xchg
mov
jae
and
mov
lahf
sbb
or
lret
xchg
lret
inc
adc
inc
adc
pushf
hlt
xor
xchg
lret
dec
fdivs
sbb
adc
std
sub
ja
cmp
push
call
je
in
loopne
es
pop
or
push
fidivrl
mov
push
lds
sub
shlb
lcall
repnz
ficompl
inc
jnp
mov
flds
inc
sarl
sbb
cld
mov
fwait
mov
test
jo
call
push
push
je
mov
loope
into
dec
jns
call
sbb
dec
jno
sub
dec
rorb
push
mov
mov
pop
stos
cmpsb
gs
sbb
mov
or
mov
in
push
shr
cld
dec
mov
out
sbb
imul
fcompl
fwait
pop
adc
pop
fcoml
xchg
fwait
inc
add
and
lds
xor
sbb
jne
out
sub
and
mov
call
inc
sub
stos
or
mov
jne
add
or
nop
mov
shrl
mov
xchg
test
mov
addr16
dec
idivl
xor
jbe
stc
pusha
mov
in
xchg
out
je
gs
xchg
push
mov
jmp
imul
fwait
mov
mov
sbb
inc
outsb
cmpsb
and
rorb
int
test
pop
xchg
sub
int
imul
pop
sub
dec
push
xchg
and
cld
lock
testb
push
outsb
mov
cmp
cmp
cmc
leave
incl
js
sti
out
cli
add
outsb
adc
and
sbb
popf
sbb
inc
jbe
test
sub
mov
scas
add
or
cs
add
mov
pop
adc
cmc
mov
rorb
mov
fsubs
fisttps
lock
rcrl
sub
dec
lds
arpl
and
xor
outsl
lock
sub
cmp
stos
std
mov
sub
adc
popf
test
sub
cwtl
xchg
mov
fsubl
push
mov
dec
pop
sub
jecxz
jle
ds
fidivs
arpl
inc
fldl
addb
roll
mov
dec
pusha
sub
das
dec
and
pop
jbe
mov
sarl
or
out
rclb
sub
dec
stos
enter
cltd
or
mov
js
mov
shrl
shrb
mov
dec
push
sbb
add
call
xchg
push
jns
push
mov
scas
shlb
jge
mov
shll
insb
js
cmc
pop
inc
ds
push
push
andl
gs
lea
andl
int3
nop
or
mov
mov
mov
ret
jo
pusha
fmull
out
fstl
out
sub
inc
mov
adcb
pop
xorb
call
or
addb
iret
movl
frndint
xchg
inc
out
scas
sahf
and
lcall
ret
cmp
sti
dec
ja
out
lock
and
or
cmp
rcr
mov
push
lea
lret
mov
sbb
hlt
loopne
bound
jp
mov
ficompl
mov
ret
inc
jb
out
out
dec
scas
push
aaa
push
inc
test
sub
push
sti
push
jmp
pushl
subb
fildl
bound
xchg
adc
imul
ljmp
pop
lds
test
in
mov
fldt
adc
inc
sbb
add
push
mov
ret
xchg
adc
out
fldl
int
dec
adc
cmpsb
inc
xor
inc
stc
loop
addr16
or
or
lea
cmp
push
sbbb
hlt
jo
pop
push
insl
or
out
loop
or
dec
push
popa
std
aas
iret
jo
fs
int
sahf
rolb
mov
test
ja
insb
xchg
mov
cld
inc
lods
mov
mov
add
test
scas
lret
or
shr
in
insl
dec
lods
pop
xor
sub
push
faddl
mov
cmp
pop
sbb
fmuls
cltd
xchg
or
imul
js
sbb
xchg
pop
js
jno
aam
aad
inc
adc
std
xor
insl
mov
in
stos
pop
aas
mov
sub
mov
xorl
push
scas
std
cltd
das
cmpsl
daa
lcall
stos
xlat
mov
sti
push
sbb
xchg
mov
adc
sbb
faddl
push
js
into
movsl
adc
in
lret
push
pusha
mov
xor
adc
cmp
in
sub
pop
dec
xchg
repnz
pusha
jmp
jnp
and
cmp
stos
inc
inc
jae
mov
sbb
mov
mov
sahf
outsb
bound
push
pushf
push
incb
sti
ret
xchg
testl
sub
xchg
repnz
sub
out
pop
cmp
call
in
mov
imul
dec
adcb
sbb
fnsave
fwait
jb
or
xchg
shrb
cmp
imul
inc
movsb
cmc
rcrl
or
sbb
add
ljmp
dec
lods
popf
test
dec
xor
movsl
out
hlt
lock
outsb
mov
fmuls
rcrl
pushf
stc
xchg
cld
lea
dec
rolb
jle
push
sbb
bound
movsb
rol
mov
sbb
xor
ja
sbb
push
push
subl
or
cli
mov
stos
sub
jmp
rcl
sub
mov
insl
cmpsl
sub
subl
pushf
pop
push
cwtl
loope
xchg
xor
sbb
pushf
or
test
cmc
xor
out
add
xor
sub
sbb
inc
mov
pop
cmp
loop
and
mov
std
sub
or
jo
loope
mov
iret
cltd
outsl
or
mov
repnz
inc
sub
mull
mov
adcb
and
scas
sbb
mov
in
adc
sarl
pop
dec
xor
push
adc
adc
rorl
push
popl
xchg
ja
cmpsb
cmp
movb
jo
inc
mov
test
lcall
jge
add
pop
xchg
cwtl
dec
mov
lahf
insl
lea
xchg
dec
and
data16
add
stos
cwtl
cmp
inc
enter
ja
mov
mov
dec
in
and
not
test
xchg
jmp
add
sub
das
jl
and
pop
ja
dec
rcll
add
dec
fldenv
lahf
insb
aaa
cld
lea
loop
ret
lods
or
frstpm(287
xchg
adc
scas
dec
cs
imull
lock
mov
cmp
inc
xor
jp
pop
push
mov
xorb
and
push
or
dec
out
out
mov
icebp
dec
jg
cli
pop
aam
push
imul
aad
inc
lahf
xchg
rcr
div
or
and
sbb
jge
xchg
pop
sub
or
xchg
push
cltd
js
fs
push
dec
add
pusha
pop
ret
pop
inc
pushf
pop
cmc
test
stc
push
xchg
or
aad
repz
fstpl
xchg
lea
push
lock
add
jmp
mov
adc
inc
addr16
mov
out
lret
pushf
adc
int
flds
mov
push
enter
lret
mov
mov
cmp
fsubp
push
lret
leave
shll
pop
out
inc
pop
xchg
add
jo
popf
out
insl
xchg
mov
jg
lds
lds
mov
push
xor
xchg
jecxz
mov
cli
cmp
and
jae
mov
push
cmp
xchg
mov
pop
jno
add
cmp
insb
push
jl
cld
adc
push
icebp
imul
stos
shl
xchg
adc
jecxz
sub
dec
fwait
xchg
addl
out
roll
push
lret
pusha
sbb
add
sub
addb
sbb
in
mov
xor
test
loope
stos
cltd
dec
fdivrs
fsin
pop
dec
outsb
cmp
icebp
mov
jp
outsl
or
fldcw
outsb
lods
push
pop
jecxz
sbb
cmpsl
cmp
repz
cmpsb
push
into
and
add
iret
lahf
loope
mov
dec
loope
repnz
out
jae
cs
cs
cmc
adc
cmp
loopne
lods
subb
test
xor
mov
pushl
jp
cmpsl
int3
lahf
mov
jb
xchg
out
imul
sbb
sub
pop
mov
scas
xor
push
add
adc
rcr
fs
jbe
sbb
imulb
push
mov
sbb
bnd
in
inc
add
inc
xor
inc
loop
das
mov
and
adc
jns
stos
ja
xchg
int
fists
stos
mov
fbstp
sub
lds
dec
mov
and
testb
dec
xor
cmp
cld
loop
daa
in
insl
out
xchg
sti
aas
fdivl
jb
mov
xor
push
mov
mov
fdivs
or
test
and
fcmovb
in
pop
int
and
inc
sahf
leave
ljmp
lret
cmp
inc
sbb
adc
into
adc
sbb
jmp
dec
icebp
loop
mov
std
mov
and
add
sub
cwtl
pop
adc
adcb
cmp
pusha
insb
test
scas
repz
lahf
and
xchg
movsl
jo
mov
cli
sbb
jge
push
es
mov
cmp
arpl
fdivs
cli
inc
inc
insb
push
mov
xchg
les
stc
clc
jae
mov
test
mov
call
jg
jge
mov
add
xchg
andb
lret
or
pusha
mov
sbb
push
mov
repz
out
inc
push
mov
push
xchg
repnz
arpl
data16
jmp
jbe
pop
scas
aaa
jns
xor
pop
add
add
shrl
jnp
jmp
add
clc
dec
jp
mov
adc
stc
push
fmul
pop
insl
xor
jecxz
mov
mov
fsubr
dec
pop
dec
dec
xchg
mov
and
jge
test
fildl
jae
adc
inc
test
sbb
or
hlt
inc
cmpb
cmpb
daa
in
add
sti
inc
cli
popf
movsb
jae
dec
jae
mov
jg
adc
lds
ret
imul
cmp
call
cmpb
lret
mov
or
in
and
adc
mov
push
sub
sti
jno
fwait
roll
dec
fwait
push
adc
mov
shlb
fiaddl
sti
lods
and
xchg
mov
fimull
pop
ljmp
jmp
repnz
repnz
jmp
fcomps
popa
ret
stc
mov
ret
insb
shrl
xchg
cmpsb
pushf
mov
jecxz
dec
adc
mov
jg
jns
cltd
jb
outsb
imul
addl
inc
and
mov
outsb
xchg
test
xor
test
add
push
cltd
xchg
inc
lcall
or
mov
inc
test
cmc
inc
or
aam
fmuls
jmp
sub
dec
mov
fdivr
jbe
jmp
cmpl
mov
mov
pop
in
adc
mov
sbb
xchg
imul
mov
mov
je
jecxz
divb
nop
xchg
xchg
xor
in
xor
inc
jno
lret
pop
mov
mov
jne
or
ja
scas
movsb
sub
dec
jmp
jl
xor
xchg
pop
adc
in
iret
jecxz
gs
or
int3
fsts
pop
xchg
nop
mov
out
mov
sahf
xor
cwtl
ljmp
pop
or
or
addr16
pop
lcall
data16
push
dec
jne
enter
popa
mov
shlb
rcrb
push
xchg
xchg
push
pop
mov
lods
cmp
roll
xor
adc
cmp
call
popf
jp
in
lcall
jecxz
mov
jns
ljmp
dec
adc
push
out
push
sub
pop
xchg
das
mov
loopne
shll
mov
add
mov
cmp
or
adc
inc
scas
mov
out
call
xchg
mov
push
or
lret
cli
xor
dec
push
loopne
das
icebp
jmp
mov
nop
mov
mov
pop
sbb
out
cmp
cld
lds
outsb
xor
pop
insl
adc
out
fadd
repz
xchg
mull
xchg
lds
push
xor
outsl
dec
sarb
pusha
jg
dec
xor
adc
pop
pusha
call
jle
xchg
add
gs
sub
cmpsl
test
popa
jb
sub
pop
push
add
insb
fmuls
fwait
sbb
or
popa
clc
mov
divl
in
inc
mov
cmp
cmpsb
lahf
ret
mov
ljmp
mov
lock
adc
mov
arpl
movsb
mov
push
enter
sbb
imull
in
imul
adc
inc
xchg
jns
jg
lahf
xor
fsubrs
shrb
aad
xor
bsf
jl
xchg
or
movsl
lret
mov
and
shrb
cmc
jmp
cmp
sarl
mov
roll
mov
aam
fidivs
dec
mov
jg
mov
stc
mov
out
push
add
testb
repnz
test
or
or
addr16
notl
shl
xchg
jge
ljmp
movsb
xlat
fiaddl
adc
fcoms
or
cmp
outsl
stos
mov
je
bound
adc
add
inc
je
xor
out
cli
outsb
shll
in
push
repnz
stos
lahf
dec
sub
and
mov
insb
mov
pushf
sub
pop
xor
sub
adc
cmpsb
cli
les
mov
sbb
pop
xor
xor
mov
mov
dec
mov
scas
mov
leave
push
fstpt
push
mov
mov
cmp
jno
xor
lcall
sbb
out
jmp
cmp
mov
push
cmp
aaa
xor
dec
fsubs
arpl
out
xlat
add
sub
das
mov
sub
mov
or
adc
in
and
inc
xor
cmp
mov
xchg
movb
cmp
fistpl
out
fcomip
jbe
or
dec
stc
sub
stos
push
test
jle
pop
loope
jbe
adc
mov
lret
or
or
popa
xor
mov
jb
add
xor
cmp
leave
or
and
sbb
xor
out
std
pop
clc
lock
out
mov
cmp
mov
dec
push
add
daa
rorl
stos
mov
sbb
mov
inc
jge
inc
jg
gs
test
lret
dec
cwtl
push
pop
aad
test
xor
mov
mov
loopne
xor
in
mov
inc
push
out
cmp
adc
aas
fwait
in
ret
adc
jl
dec
ja
ds
ja
test
addr16
std
push
jl
aam
dec
loope
lcall
pushf
dec
mov
lcall
les
test
out
xor
popf
imul
pshufw
jp
sbb
lds
iret
ds
rclb
sbb
insl
mov
fxch
cmp
aam
sarl
pop
ss
xchg
inc
lahf
add
jmp
fdivs
xchg
sub
stc
lock
jle
clc
loope
dec
into
mov
stos
fidivrs
int3
shlb
mov
sbb
pop
pop
push
sub
repz
cmp
aad
addb
dec
xchg
into
adc
or
ds
je
lods
jbe
movswl
stc
sbb
int
push
in
arpl
loopne
sub
push
dec
lea
loope
int
movsl
lret
push
in
jno
sbbl
sahf
repnz
fs
xor
xor
jo
popf
imul
out
in
mov
push
sub
rcrl
es
mov
sbb
add
or
sub
jnp
pop
mov
ljmp
in
rcrb
popa
mov
xchg
stc
in
mov
int
sub
inc
and
leave
cs
test
shrb
sbb
adc
scas
or
jns
stc
or
or
fndisi(8087
enter
add
sub
xchg
mov
xchg
popa
inc
call
imul
int
daa
push
clc
popa
pop
jb
push
stc
pop
cs
std
xor
dec
test
mov
jle
divl
int
dec
outsl
adc
in
ljmp
sbb
push
daa
dec
out
lock
inc
jmp
xchg
insl
dec
adc
insb
jmp
daa
sahf
or
jo
xchg
out
push
adc
daa
addr16
icebp
jmp
mov
xchg
xor
fnstcw
mov
cmc
les
adc
pop
mov
mov
dec
repnz
cmp
and
test
pop
mov
mov
mov
filds
or
mov
shr
popf
dec
out
and
mov
mov
dec
leave
insl
xor
push
stos
call
push
cs
bound
cld
cwtl
fwait
mov
int3
adc
insl
pusha
xor
sbb
lcall
or
xor
outsb
adc
pop
ja
iret
out
ja
sub
pop
xchg
push
inc
jge
mov
lods
int3
fistl
dec
dec
movsl
lods
cmp
mov
jnp
mov
and
pop
out
mov
movsl
cmp
hlt
aas
repz
out
in
dec
pop
ljmp
xor
je
cld
xlat
dec
xchg
pop
ds
jno
mov
adc
test
sbb
aaa
inc
mov
push
std
fldt
aad
ds
sub
outsl
imul
sbb
adc
es
push
push
iret
fdivrs
sahf
popf
sub
xor
mov
adc
stos
std
mov
popa
cmpsl
xor
mov
xor
mov
hlt
mov
decb
mov
iret
and
jmp
popa
cmp
cmpsl
addr16
ds
stc
sti
imul
and
adc
cltd
fisubl
sbb
push
sbb
or
int3
imul
sub
lret
mov
and
leave
gs
or
test
and
inc
lods
in
aaa
stc
adc
adc
pop
bound
jno
mov
insb
leave
push
xchg
test
sti
xchg
call
fidivrl
sbb
cmp
lret
add
mov
pop
ja
subl
imul
das
push
hlt
push
outsl
or
mov
sbb
dec
or
pop
sbb
dec
lds
adc
loopne
nop
ss
inc
jl
cltd
pushl
jl
pushf
or
push
xor
sbb
scas
jb
aas
jl
lock
es
mov
xchg
pop
push
xchg
adc
sub
add
dec
fstpt
jg
std
cltd
mov
aad
sbbl
stos
fs
mov
js
push
in
xchg
je
add
cld
addr16
jg
or
fs
mov
mov
mov
dec
inc
jae
iret
adc
test
sbb
push
sub
mov
cmc
xorl
xchg
jno
out
xor
pop
xchg
sub
dec
jae
sbb
jae
xlat
mov
jo
jno
dec
inc
clc
push
pusha
xor
scas
and
dec
adcb
mov
push
adc
push
roll
push
sahf
out
cmp
jnp
push
cli
std
inc
jle
scas
ret
cltd
out
insb
push
out
lret
push
adc
sbbb
outsl
add
sbb
jae
sub
xchg
push
xchg
sbb
push
lret
pop
push
cmpsl
ficoml
in
or
negl
aaa
cmc
ljmp
sbb
loopne
lods
fldl
pop
or
and
frstor
insl
lcall
sbb
sub
andb
cltd
mov
repnz
push
mov
and
dec
cmp
clc
pop
mov
fdivrl
in
lcall
xchg
les
cmp
gs
mov
xchg
outsl
push
pop
cmp
dec
adc
aad
out
rcll
fimuls
repz
ss
js
test
push
popf
inc
add
popa
mov
mov
call
push
mov
in
sbb
addr16
lock
jg
push
sub
jl
add
pop
cwtl
mov
cmc
jbe
gs
sub
fildl
fcoml
xchg
test
test
ljmp
call
add
jge
pop
cld
cltd
xchg
test
sub
sub
fists
push
mov
out
fwait
dec
ficompl
cwtl
adc
icebp
lods
repnz
jle
mov
mov
test
mov
push
add
xorl
push
lahf
lret
hlt
fimull
lret
xchg
push
sub
jne
mov
and
cmpl
and
and
dec
fstp
shll
sbb
aaa
mov
arpl
or
icebp
sbb
notl
cmovno
das
xchg
dec
stc
pop
and
ds
faddl
xor
cmp
push
into
aaa
aad
push
mov
xchg
sub
test
xor
mov
lods
push
xchg
xchg
xchg
cmpsl
ret
es
mov
and
mov
jb
shl
outsb
cmp
out
stos
mov
cmp
scas
cmp
xchg
clc
scas
dec
stos
mov
iret
subb
sub
push
xchg
adc
fisubrs
aad
testb
lret
adc
push
aam
push
arpl
sub
int
subps
jmp
fildl
idiv
inc
push
xchg
pop
leave
fsubl
repnz
fucomi
sbb
adc
je
ja
hlt
pop
pushf
mov
and
pop
lock
dec
pop
mov
lds
mov
loop
enter
shlb
jle
xor
int3
cmp
outsl
lahf
xor
outsl
add
pop
pop
jbe
ret
adc
sahf
js
cltd
and
mov
lahf
adc
or
mov
or
adc
leave
jno
enter
pushl
pop
out
aad
dec
aad
lret
adc
xchg
fiaddl
mov
stos
std
push
adc
int3
lods
fadd
dec
adc
nop
daa
cmpsl
push
dec
pop
icebp
inc
pop
cmp
sub
nop
add
fxch
je
dec
jmp
int
pop
pop
lods
test
adcl
scas
push
xor
adc
test
jbe,pn
or
push
adc
xlat
notb
std
outsl
jns
lds
dec
and
dec
popf
push
jae
xor
add
fwait
cs
push
inc
cltd
add
lock
cmp
xchg
push
sbb
pop
add
cli
in
xlat
fsts
into
lret
xlat
lods
sbb
addl
dec
jne
push
rcll
sub
cld
cmp
and
jmp
xchg
lret
insb
and
test
les
jb
adc
sub
dec
mov
sahf
jle
movsb
sub
xchg
sarl
add
pop
call
mov
stos
inc
shrb
mov
push
test
int3
inc
mov
add
jle
nop
sbb
pop
movsl
pop
jae
mov
sub
out
push
xchg
mov
fisttpll
cltd
mov
int3
pop
xor
imul
lahf
lret
test
subl
push
loopne
les
mov
adc
ss
fisttps
test
push
inc
cmp
inc
mov
dec
dec
out
adc
or
shrl
ficompl
iret
xchg
mov
xchg
push
pop
rcrb
sbb
mov
xchg
add
cmp
jne
lock
fwait
cli
or
es
sahf
push
repnz
sbb
mov
cs
pop
sbb
je
dec
rorl
outsb
adc
jge
lods
and
outsl
add
cwtl
enter
cmc
je
cmpsl
test
sub
shrl
push
pop
sub
pop
cltd
adc
fs
cld
and
jne
or
aad
inc
fisubrs
jmp
and
dec
push
xchg
insb
adc
inc
cmc
pop
jge
add
cmc
and
outsb
cmp
insl
jb
add
lock
subl
ljmp
test
inc
loope
test
aas
pushf
cmpsb
mov
es
fcomi
add
outsl
xchg
jns
icebp
pop
inc
shrl
insb
jnp
loopne
ret
adc
mov
inc
push
adc
es
xlat
adc
cmpsb
fidivl
aaa
mov
lret
ds
adc
sbb
mul
jl
cltd
loopne
jne
lods
inc
into
je
outsl
sub
repz
xor
ljmp
cs
mov
push
lods
pop
loope
jp
iret
push
fisttpll
push
mov
pop
lret
lcall
cmc
mov
jae
test
cmp
flds
fisubl
mov
jge
sbb
jbe
xchg
mov
aas
sub
shlb
cmc
scas
in
rcrb
in
es
push
scas
jo
mov
loopne
andb
push
inc
enter
push
jge
iret
xchg
icebp
add
fstpl
lcall
sub
das
fnstenv
jbe
roll
jmp
xchg
adc
dec
int
lahf
scas
pop
adc
jns
add
shl
mov
dec
jp
sub
xchg
fcomps
push
and
mov
cmp
push
inc
es
mov
inc
pop
pop
mov
or
mov
sbb
pushl
out
scas
pop
dec
mov
sti
scas
aam
adc
aas
dec
adc
bound
add
xchg
adc
repnz
push
pushf
xchg
jp
cmpsl
in
in
mov
cmp
in
push
xchg
dec
adc
sub
xchg
rcrb
pop
or
sub
in
lret
movsl
sub
je
or
in
jecxz
in
jmp
cmpsl
stos
or
ficoms
jp
push
cmc
cmp
imul
lahf
inc
push
adc
adc
iret
jl
pop
std
xchg
xchg
xchg
adc
xchg
dec
mov
xor
adc
xchg
lock
stc
test
lods
adc
and
xchg
imul
filds
mov
or
sbb
mov
mov
test
xchg
or
scas
popa
mov
sub
dec
push
out
push
popf
inc
cld
xchg
adc
and
scas
test
lcall
mov
dec
and
mov
cwtl
iret
leave
repnz
sbb
lock
subb
add
fdivrs
cmp
addr16
sbb
int
dec
test
cmp
xchg
cltd
dec
in
and
popf
cmpl
lcall
dec
aaa
popf
cli
xor
fstps
mov
cmpsl
popa
dec
lods
jnp
rcr
loop
or
xchg
cmp
mov
sub
xor
lret
idivl
cmp
btr
adc
jmp
outsb
cmc
gs
xchg
test
cmp
add
das
std
out
inc
lods
loopne
add
sub
out
xchg
pusha
stc
fidivrl
outsb
popf
loopne
dec
dec
mov
pop
mov
xchg
mov
mov
cmp
lahf
and
xchg
mov
mov
dec
xchg
inc
insl
xor
cmp
aam
fadds
es
icebp
fstpt
cmp
mov
mov
push
add
and
lods
xorb
add
inc
loop
cli
cli
aad
jl
dec
xchg
popa
lcall
loop
jge
sbbb
adc
inc
jns
je
mov
mov
mov
mov
jns
xchg
pop
int3
pop
sbb
shrb
jno
dec
cmp
std
mov
jmp
aaa
flds
imul
and
pop
fdiv
fcom
iret
lock
sbb
aaa
mov
shrl
mov
mov
aas
scas
jmp
sbbb
loope
sub
and
or
dec
test
pop
or
pop
sub
jle
cmpsb
shll
jp
int3
inc
test
sbb
aas
rcrl
loopne
mov
and
pushf
xor
or
dec
dec
mov
xor
pop
mov
subb
lods
pop
ret
addl
outsb
cmp
mov
lods
mov
lahf
out
add
mov
xchg
addb
xchg
fsubs
xchg
cmp
xor
aam
mov
xchg
outsl
repnz
out
pop
es
xor
sub
imulb
cwtl
mov
adc
or
clc
adc
and
adc
les
shll
test
jmp
push
in
sar
or
in
xor
scas
scas
leave
sub
daa
insl
mov
rcr
sarl
and
jns
xchg
jo
xchg
add
imul
mov
and
mov
mov
add
pop
ret
cmp
mov
inc
pop
mov
ja
mov
popa
pop
sub
sti
repnz
inc
std
fcomip
inc
pop
or
inc
pop
call
repnz
test
dec
jecxz
jns
add
ja
inc
mov
xor
jne
jl
mov
cmc
jmp
jae
fists
das
mov
jmp
loope
or
lar
fldcw
cmpsb
mov
cld
cmp
shlb
test
fildll
jl
jbe
and
and
jg
int
in
popf
sbb
dec
out
or
movsb
mov
xor
sti
and
fstpt
dec
rorl
cltd
jg
ljmp
dec
dec
jne
stos
jae
add
pop
fisttps
in
pop
push
cld
in
cmp
pop
cmpsb
push
push
xchg
lret
popa
push
jecxz
cs
sbb
lock
jo
arpl
stos
xor
push
xor
mov
push
and
les
jo
cwtl
hlt
insl
xchg
sbb
fdivp
dec
mov
out
je
mov
push
xchg
cmpsl
jne,pn
out
cmp
jne
mov
dec
rclb
adc
sysexit
adc
ljmp
mov
mov
mov
shll
popa
int3
and
dec
jne
jae
bound
xor
imul
adc
aam
pop
sbb
les
jg
push
mov
sbb
shll
ja
sub
jnp
sbb
call
sbb
movsl
js
xrstor
int
fisttpll
test
enter
fldl
mov
scas
xor
mov
xor
rorl
mov
cmp
fwait
inc
insl
jle
push
jbe
rcr
xor
daa
add
pop
lret
and
adcb
push
and
or
lcall
inc
or
shl
jbe
aad
and
push
outsb
jg
aad
lods
cmp
jge
out
push
ss
pop
ror
jmp
imul
hlt
inc
popa
andl
cmp
mov
sub
or
iret
inc
andl
inc
ret
mov
ret
nop
dec
mov
bound
lret
mov
leave
add
pop
test
jo
outsb
xchg
andb
jg
sub
js
iret
adc
call
push
sub
ret
cmc
mov
sbb
repz
lds
ret
ficomps
cwtl
push
or
ret
roll
jmp
and
inc
scas
xchg
inc
dec
mov
fs
sbb
pop
data16
fs
fidivrl
adc
dec
fmulp
dec
mov
out
lods
stos
fildll
loopne
cpuid
add
out
xchg
push
xchg
mov
xchg
mov
test
push
int3
cmp
push
popa
std
int
inc
decl
pop
jmp
insl
push
xchg
push
fsub
and
fistps
cmpsb
sub
lods
loope
test
popa
mov
pop
add
jg
sub
mov
cmp
fldl
into
jb
rclb
cmp
dec
minps
mov
cmp
inc
sbb
inc
and
cmp
push
mov
ret
je
xchg
mov
sarb
xor
cmp
lods
and
jle
cmp
and
movb
sub
ret
int3
adc
adc
jne
clc
mov
ss
push
jg
dec
lods
loope
stos
push
jbe
rcl
fnstenv
aam
fidivl
jo
loopne
lds
push
in
bound
xchg
fdivrl
lcall
mov
xchg
in
mov
fbstp
repnz
cs
inc
mov
add
outsb
sbbl
jmp
and
and
inc
push
in
sbb
xor
xor
xor
pop
aas
push
jg
jg
sti
cmpl
xchg
dec
shll
mov
iret
mov
gs
lret
xchg
pop
dec
clc
bound
pop
loopne
dec
mov
mov
push
jl
adc
inc
mov
cmpsb
jno
movsb
lret
addr16
push
mov
pop
icebp
push
ffree
pop
imul
pop
js
push
lcall
jle
and
mov
sbb
rclb
xchg
pop
inc
ret
into
es
outsb
jno
and
out
cmp
mov
jge
daa
test
push
and
lahf
jg
out
pop
shlb
sbb
and
adcl
mov
imull
bound
daa
cwtl
jbe
ljmp
test
or
in
xchg
outsb
push
mov
frstor
xchg
sub
outsl
pop
and
test
mov
jp
lock
repnz
jge
cmc
xchg
mov
fistl
out
sub
out
cmp
mov
sbb
or
ds
push
xlat
and
inc
mov
out
mov
mov
ljmp
popf
mov
push
out
imul
sbb
pusha
lcall
jmp
mov
pop
flds
inc
outsl
sub
fs
leave
xchg
add
jp
cmp
fcomp
xchg
les
adc
mov
lock
rcll
mov
push
shl
aad
mov
popf
cmpsl
push
lods
jnp
mov
inc
xorl
xchg
movsb
fisubl
mov
loop
ret
mov
mov
sub
jo
mov
lcall
movsb
stc
inc
popf
jge
mov
mov
call
xor
sub
mov
mov
je
push
and
cmp
stc
cmp
push
pop
push
jbe
push
aad
inc
cmp
push
cmp
pop
pushf
fmuls
cld
stos
add
gs
pop
or
jge
bnd
pop
lock
and
cltd
popf
mov
aad
out
pop
or
fwait
aam
inc
cmc
adc
or
scas
ja
scas
push
daa
scas
xchg
nop
clc
idivl
pop
xchg
pushf
pop
fdivl
test
xor
cmp
xor
pop
push
std
roll
mov
xchg
add
lods
dec
xchg
bound
lods
sbb
ljmp
lds
pop
ret
xchg
je
add
fistps
push
addr16
dec
inc
cmp
jg
mov
pop
mov
andb
out
xchg
sub
pop
xor
sahf
or
je
lods
out
adc
cli
addr16
push
jmp
cmp
dec
xchg
sub
fwait
jnp
jl
outsl
je
xrelease
adc
mov
shlb
xchg
mov
pop
inc
sbb
stc
xchg
pop
dec
jns
xchg
jne
cmc
call
push
mov
cmpsb
cmp
movsb
stos
fistl
out
mov
std
cwtl
lcall
shrl
shll
mov
cwtl
pop
ret
mov
loope
ffreep
in
cmc
call
nop
push
aam
adc
sbb
jnp
dec
mov
ja
call
cltd
mov
fdivs
cmp
js
lret
out
xor
out
repz
fstpt
psrlw
xchg
ds
lahf
stos
xchg
mov
add
push
std
xor
das
or
ds
repnz
mov
xchg
push
out
and
ds
inc
cmpsb
sti
mov
mov
jg
add
test
addr16
xchg
mov
mov
seta
jbe
sti
ret
iret
call
push
fcom
cmpsl
sub
sbb
pop
xchg
add
dec
cmp
xchg
shlb
int3
mov
aas
lret
dec
loop
push
jb
mov
add
addr16
inc
orl
lret
xchg
jmp
sti
mov
sub
out
gs
iret
fldcw
hlt
insb
xor
jecxz
es
dec
xchg
insb
jb
in
mov
mov
jge
xchg
lods
pop
hlt
inc
out
xchg
push
inc
inc
pop
push
and
dec
cmp
push
mov
mov
loopne
jmp
mov
pop
push
mov
xchg
mov
sub
adc
sbb
jl
push
mov
push
leave
fisubrl
in
mov
inc
repz
stc
test
push
dec
lea
ljmp
cs
scas
arpl
in
sbb
push
xor
stos
xchg
push
mov
jno
cmp
push
xchg
es
lods
fistpl
into
sbb
xorb
jo
sbb
mov
cmp
popf
clc
fidivrl
outsl
ss
add
filds
outsb
pushf
lock
jbe
mov
mov
bound
pushf
xor
xchg
or
mov
cmp
and
cmpb
sahf
ja
mov
jne
addr16
cltd
xorl
mov
imul
xchg
imul
enter
jae
and
xorb
cmp
clc
or
sub
and
jle
push
das
mov
pop
push
cltd
data16
or
mov
and
test
lcall
lock
aaa
and
pusha
repnz
inc
cli
sti
fcom
and
and
jns
js
mov
push
mov
adc
fisubrl
pop
shl
sahf
enterw
cmpl
push
xor
xchg
dec
inc
inc
scas
inc
jno
mov
lock
mov
cmp
fwait
mov
sbb
push
mov
hlt
into
cmp
add
xor
neg
int3
aas
out
shufps
push
sub
xor
fs
icebp
imul
cmp
lods
adc
and
jge
cli
xchg
pop
lods
sbb
scas
or
outsl
or
mov
cmpsl
push
ror
inc
xor
mov
out
imul
femms
xchg
std
dec
adc
fistpl
mov
mov
lcall
shrb
mov
jmp
shrb
push
jmp
test
ret
sarb
xor
in
pop
and
adc
jbe
jg
dec
pop
mov
cli
aad
mov
scas
gs
ret
lahf
outsb
mov
pop
xorl
push
push
sahf
ret
enter
add
icebp
adc
inc
ss
jb
loope
mov
stc
test
xchg
xchg
mov
sub
decb
adc
js
xchg
push
fiadds
repz
sbb
pop
scas
mov
mov
mov
dec
inc
cwtl
jle
out
jp
pop
out
int3
shll
sbb
or
or
movsl
imul
push
cltd
fistps
pop
into
daa
imul
jbe
cmc
mov
fnsave
sbb
cld
mov
push
adc
in
inc
lds
mull
into
inc
push
mov
mov
hlt
fsts
xchg
sub
pop
xlat
xchg
xor
sbb
mov
xchg
sub
dec
psubd
lcall
pushf
adc
aad
xor
cmp
sbb
rcll
mov
inc
ja
fs
loopne
lret
and
jo
test
hlt
jnp
test
mov
add
or
pusha
mov
add
movb
fisttpll
add
call
xor
or
push
shll
pop
inc
mov
jecxz
pop
popf
jmp
push
sub
aaa
pop
mov
jp
xor
pop
rcrl
dec
push
xor
add
lahf
cmp
sbb
push
sub
xorl
xor
sbb
cmp
cmp
mov
or
fbld
je
push
sarl
add
cmp
mov
dec
gs
cmp
fisubs
subl
pop
sbbb
je
pusha
lods
mov
outsl
mov
inc
cwtl
inc
sub
adc
sbb
aaa
ss
cmp
mov
out
sub
stos
xchg
xchg
xchg
cmp
sbb
cmp
cmp
cmpsl
pop
rep
and
mov
cmp
rorl
and
cmp
insl
or
sub
mov
lods
push
lock
dec
push
mov
sub
aam
clc
jae
cmc
lods
aad
out
mov
insb
jo
or
rcrl
xor
pop
pop
cltd
xchg
dec
lds
movsl
out
push
adc
icebp
int3
lret
and
aad
enter
jns
mov
sub
add
les
outsl
les
jmp
adc
and
cmp
addr16
dec
and
jecxz
adc
int
outsb
jns
push
cmpsb
jecxz
outsl
lret
ja
dec
push
cmc
cmovl
popa
cs
hlt
in
call
sub
adc
jmp
popa
sub
add
outsl
insl
mov
into
mov
mov
push
cmp
cmp
mov
pusha
mov
sarl
xchg
cmp
mov
inc
or
into
xchg
push
xor
repz
xchg
pop
rcll
icebp
arpl
dec
xchg
in
imul
mov
loopne
aaa
push
fsubr
sub
in
jl
jbe
xor
inc
sbb
movsl
enter
dec
jb
mov
add
loopne
push
ds
pop
xchg
gs
cmp
cmpsb
sbb
pop
loope
popf
movsb
xlat
int3
jle
pop
loop
jae
sub
cli
aaa
adc
cmpsb
orl
mov
fdivs
std
sbb
xchg
add
xor
je
xchg
jae
int3
or
mov
stos
inc
xchg
push
les
mov
clc
push
movsl
ret
push
enter
imul
inc
andl
movsb
testb
jne
xor
into
leave
out
dec
adc
cld
outsb
aad
xchg
ret
cmp
jp
loope
ret
out
and
add
insl
lcall
imul
call
nop
mov
fwait
mov
lret
jmp
push
cwtl
andl
mov
or
jecxz
xchg
jnp
stc
fsts
xchg
popf
sub
or
cltd
std
scas
push
pop
aad
add
mov
popa
sahf
int3
and
clc
shrb
cmpsl
outsl
xchg
mov
sub
aam
les
push
pop
mov
jecxz
or
rcrb
push
jp
cltd
stos
jmp
or
push
pop
popf
mov
dec
sbb
xchg
add
xchg
adc
dec
ret
mov
pushf
fwait
nop
sarl
push
sub
nop
add
and
enter
jo
and
jbe
les
dec
add
test
mov
and
inc
xchg
and
and
lods
pop
test
dec
movb
sub
fldl
push
mov
enter
sub
mov
aaa
xor
pop
out
adc
push
es
dec
fstpl
jo
push
pop
fsubrs
jns
push
fisubl
in
xchg
mov
inc
pop
inc
mov
mov
jae
scas
cmpsb
dec
adc
aaa
or
ret
pop
in
shr
testl
test
in
insl
sub
faddp
pop
mov
cmp
and
imul
dec
lcall
and
inc
sti
mov
in
jp
mov
add
cs
and
inc
xor
cwtl
push
or
mov
xor
lcall
fnstsw
push
cmp
leave
mov
cmp
sub
pop
dec
mov
inc
ljmp
orb
imul
out
sbb
out
hlt
out
jo
sub
cmp
stos
icebp
pop
sub
xor
sti
cmp
xchg
mov
out
xor
fs
mov
in
ljmp
or
out
pop
subl
lcall
les
dec
fsubr
pushw
jbe
dec
jg
mov
movsl
rcl
push
xchg
jnp,pn
lock
call
sub
ja
sub
arpl
pop
sarb
popa
sti
xchg
js
cmp
fimuls
cli
adc
clc
cmc
pusha
ret
adcb
dec
push
test
icebp
mov
mov
lock
inc
push
cmpsb
lcall
mov
push
push
sbb
out
adc
leave
sbb
adc
sub
sbb
xchg
adc
cs
and
lahf
test
push
push
jo
jnp
mov
popf
test
das
loop
mov
mov
jnp
jmp
sti
xrelease
daa
dec
test
and
pop
out
daa
push
into
pop
or
jp
xchg
add
fidivrl
scas
dec
repz
cmp
xor
mov
ljmp
jne
push
rcl
movsl
adc
mov
jns
cmc
xor
iret
mov
lock
fbld
ss
rcl
test
pusha
in
fcomps
mov
clc
scas
mov
or
or
out
mov
js
sbb
jp
dec
inc
cltd
jmp
stc
shr
hlt
adc
cmpsl
dec
mov
sub
subb
aaa
fs
adc
or
jg
repnz
ret
pop
lods
sub
dec
xor
adc
cmp
add
inc
push
xchg
in
jg
mov
or
es
mov
push
inc
in
add
mov
pusha
adc
mov
inc
mov
pop
dec
push
stos
jp
es
les
dec
push
out
pop
das
iret
enter
dec
test
or
xchg
xchg
call
in
sub
or
out
dec
jl
sahf
sbb
xor
dec
inc
mov
out
loopne
fcomip
movsb
inc
movsl
daa
lcall
sahf
cld
ja
jbe
data16
sub
mov
jge
mov
push
cld
leave
push
mov
add
jae
lock
push
jae
call
fs
call
stos
push
andl
sahf
mov
sub
inc
pop
ljmp
cli
mov
mov
pop
dec
sub
sub
sub
test
imul
xor
fcmovb
inc
cmp
mov
and
mov
das
or
and
js
ret
jp
int
insb
test
xchg
mov
sub
jecxz
negb
cmpsb
int
push
imul
cwtl
pusha
mov
pop
lcall
rcrb
dec
adc
or
sbb
scas
jecxz
push
insl
cs
inc
xchg
mov
into
lret
mov
fs
jecxz
addr16
xor
aad
cs
test
nop
sbb
fidivrs
cmpsb
aam
insb
or
hlt
add
lock
clc
and
inc
jnp
sub
mov
or
push
mov
lcall
rorb
mov
daa
cmp
adc
and
aas
push
leave
xchg
xor
insb
mov
bound
jb
rcrb
mov
iret
mov
filds
outsb
mov
dec
push
int3
mov
add
dec
cmpxchg
jnp
outsb
and
enter
in
data16
xchg
sub
push
mov
xchg
outsl
mov
daa
cs
xchg
lahf
in
push
xchg
insb
bound
and
das
ret
mov
push
sbb
movsb
mov
push
xor
insb
test
popf
loope
lret
xchg
flds
sti
arpl
scas
or
xchg
repz
cmp
cwtl
orb
in
fcmovnbe
fstps
pop
in
nop
jo
mov
jg
xchg
bsf
jle
movsb
dec
js
dec
mov
sbb
adc
out
xchg
test
nop
scas
sub
mov
mov
xor
out
xor
push
or
sub
cli
imul
popa
fs
add
test
jns
mov
imul
imul
testb
test
sbb
sub
jnp
das
push
push
pop
mov
pushf
insb
mov
in
rcl
hlt
icebp
jb
ret
repnz
push
cmp
pop
test
outsb
das
pushf
xor
lahf
dec
ja
loop
jns
repnz
popf
in
jmp
inc
dec
dec
in
fisubrl
or
jge
stos
fisubrl
test
ss
pop
sahf
mov
add
xor
adc
out
jbe
repnz
mov
pop
lret
rorb
inc
lods
xchg
rcl
lods
mov
fs
or
mov
xor
cli
sub
lret
xchg
sub
test
or
and
sahf
in
pop
pusha
out
imul
jp
lahf
jae
push
inc
shlb
rcrl
dec
jns
sub
lahf
lcall
shlb
fwait
cmp
pop
jnp
cmp
add
std
outsl
xchg
dec
mov
orl
push
jmp
sub
and
stos
jp
inc
mov
data16
mov
addr16
lea
loopne
int
mov
adc
and
inc
mov
dec
xchg
and
shrl
add
jb
xchg
cmpsl
xchg
aaa
pushf
pop
jnp
in
and
inc
ret
gs
inc
xor
test
imul
rol
xchg
dec
loopne
repz
add
and
popf
xchg
mov
jae
fcmovnb
loope
daa
cmp
punpckhdq
cmc
dec
movsl
or
cld
adc
cmp
push
pop
or
push
iret
sbb
inc
jb
mov
jae
cmp
push
rcrl
inc
sub
mov
in
icebp
mov
dec
add
pop
fldenv
loope
push
mov
or
mov
or
cmpsb
xor
push
sbb
xchg
lock
jb
movsb
jge
mov
in
add
push
xchg
fsubrs
or
cwtl
cwtl
pop
scas
and
clc
je
dec
ret
jae
mov
or
iret
jp
repnz
stos
push
ja
in
adc
bound
lcall
jp
stos
mov
js
push
adc
inc
jmp
cli
iret
lea
test
sbb
sub
stos
cmp
arpl
lock
push
mov
dec
test
das
mov
mov
mov
movsl
mov
jo
ss
push
xchg
sub
jmp
add
inc
cmc
stos
ja
lea
sahf
test
dec
xchg
mov
iret
and
aam
add
jne
incb
add
mov
es
and
mov
jle
loop
inc
inc
mov
psubq
shlb
cmp
push
inc
sub
mov
and
in
call
js
mov
sub
dec
lret
vandnps
ss
ret
push
sub
mov
add
push
test
mov
xor
les
mov
nop
lcall
imul
cli
cmp
sti
mov
add
out
insl
addr16
or
or
and
test
shll
xor
cld
lcall
xor
cmp
jl
push
addl
in
pop
insb
jmp
roll
push
xor
andb
mov
xor
mov
sub
jg
add
cmp
dec
loope
mov
xchg
inc
insb
sbb
out
dec
shr
sbb
nop
mov
stos
pop
ds
push
ret
jbe,pt
in
sub
xchg
jae
or
fcom
clc
cld
push
lods
push
and
inc
addl
pop
movsb
sbb
fwait
icebp
cltd
jmp
cmc
sbb
push
add
inc
mov
aas
jmp
mov
scas
mov
fcomps
aas
xchg
jbe
cmpsb
sub
xor
into
xlat
aad
inc
enter
decl
bound
sbb
int
xchg
jp
adc
mov
inc
lahf
subl
mov
dec
push
prefetchw
or
sbb
push
dec
pop
cmp
int
push
push
lds
sahf
mov
iret
push
int3
es
adc
sub
rcrl
repz
lcall
rcll
push
out
add
test
push
clc
loopne
imull
test
scas
inc
pop
rorl
test
dec
push
xchg
push
push
mov
push
scas
mov
cs
mulb
push
mov
mov
fistps
mov
inc
xor
pop
jno
xor
in
pop
pmaddwd
sbb
icebp
jecxz
mov
outsb
xchg
or
insb
aas
add
shrb
lret
ret
jle
pop
ret
adc
out
pushf
push
or
test
repz
popa
pop
push
leave
cmpsb
pop
jae
push
mov
and
xlat
jbe
add
repz
outsl
test
cld
mov
aad
frstor
ficoml
adc
out
outsb
xchg
mov
inc
hlt
stc
add
popa
or
hlt
test
xchg
or
in
lcall
push
loope
cmp
jmp
jb
jns
xor
add
mov
pop
lock
clc
fldenv
pop
inc
push
popl
mov
jmp
push
jne
inc
add
mov
jnp
roll
dec
xor
sbb
push
sub
pushf
cld
mov
rol
cld
js
nop
mov
mov
aam
mov
mov
lods
xor
lods
out
cmp
sub
sbb
outsl
inc
jno
lret
jmp
adc
sbb
test
cmpsb
sbbb
das
ljmp
jmp
fwait
out
jb
pushf
and
mov
sbb
leave
mov
mov
pop
outsb
jne
test
fsubl
jnp
scas
test
sbb
mov
or
jp
cmp
xor
pop
imul
repnz
outsb
arpl
or
cmp
adc
pop
movsb
das
sti
xchg
pop
dec
pusha
js
pop
add
push
adc
call
inc
movsl
testl
push
fiaddl
xor
lret
sahf
or
pushf
sti
daa
nop
aaa
jns
test
push
into
sbb
add
cmp
sbb
mov
std
or
shl
mov
pusha
mov
in
test
xchg
xchg
stos
and
std
lret
hlt
push
mov
sar
xor
fistpl
jmp
xlat
sbb
mov
popf
and
sbb
test
xor
lahf
push
mov
xchg
jle
mov
push
shrb
and
daa
add
push
jmp
stos
data16
dec
lret
outsl
mov
loope
inc
sub
dec
cmp
test
int3
arpl
pop
cmp
fmull
sbb
cmpsb
jecxz
jle
mov
dec
pop
nop
mov
inc
lea
addr16
fcomps
adc
mov
mov
xchg
pop
xlat
call
mov
shl
mov
mov
jnp
push
add
rcrl
jae
or
nop
inc
mov
out
and
xor
push
ss
clc
mov
cld
cmp
ss
mov
iret
test
push
fisttpl
dec
jmp
outsb
pop
or
ficoml
mulb
mov
jno
nop
aam
push
mov
push
cwtl
fcompl
orl
es
icebp
pushf
mov
daa
jae
lahf
pop
stc
adc
fidivrs
out
and
adc
cmp
movsb
xchg
xchg
adc
cmp
aad
icebp
push
dec
pop
cli
xchg
cld
mov
mov
mov
cltd
int3
xor
xchg
pop
mov
cvtps2pi
bound
push
lock
fstps
fstps
fcmovnb
into
jo
cltd
xchg
je
sbb
jnp
pop
dec
stos
sub
insb
cmp
ja
inc
dec
out
jmp
lret
icebp
loopne
aam
push
mov
jmp
popf
xor
movb
push
inc
or
dec
aaa
xor
pop
mov
inc
je
cmp
jne
pop
outsb
mov
test
cmp
wrmsr
stos
movsb
pop
aam
or
addl
adc
ds
jmp
ret
xchg
int
add
or
xchg
sbb
popa
cwtl
sahf
out
loope
inc
and
xor
in
push
jno
in
jns
sahf
cli
ja
xor
bound
push
adc
push
pusha
repz
xchg
cli
popf
cmp
rcrb
mov
rclb
enter
jg
adc
hlt
pop
mov
stos
xor
dec
sbb
push
test
jbe
xor
push
xchg
push
in
incl
sbb
or
imul
fisttps
movsl
outsb
add
jmp
stc
pop
test
in
lods
bound
mov
cmpsb
stos
xor
push
xor
xchg
cmpsb
jl
pop
mov
mov
lods
cmp
push
in
fdivrl
add
xchg
or
mov
pop
lods
dec
out
scas
in
inc
lret
or
enter
mov
push
sbb
mov
mov
inc
in
sub
push
pop
push
inc
mov
inc
testl
cmp
mov
sub
sbb
aaa
jmp
rclb
cwtl
jo
push
clc
cli
mov
sub
data16
stos
mov
jecxz
mov
aas
in
insl
lret
sbb
vmovntps
divl
mull
push
sbb
pusha
cmc
repnz
mov
pusha
xor
fsub
rorl
into
shlb
iret
ja
idivb
mov
pop
push
ja
adc
dec
lods
xchg
pop
bound
out
add
sarl
aaa
cs
shl
cltd
gs
cli
lds
and
arpl
mov
push
inc
xor
pop
test
add
jbe
sbb
sub
lcall
or
arpl
ljmp
inc
cmp
shll
cmovnp
pop
rcr
xor
popa
xor
es
and
pop
dec
arpl
mov
out
mov
sub
inc
mul
test
pop
lock
testl
inc
ret
push
clc
test
mov
loope
ds
lock
mov
repz
dec
pop
or
pop
into
xchg
push
dec
cs
or
bound
mov
loopne
xchg
cli
sub
sub
push
pusha
add
adc
loop
sub
xor
add
dec
sbb
mov
fsts
jbe
xor
out
pop
ficoml
xor
in
mov
mov
ss
outsb
aad
cmpsb
lods
add
aam
pusha
out
add
cmp
popa
pusha
in
mov
push
add
sbb
cmp
aas
mov
adcb
ja
push
in
xchg
sub
pop
or
push
ds
push
push
ret
jnp
lods
movb
jle
xchg
test
xchg
pop
out
rorl
je
fimull
test
ret
dec
cmc
push
mov
push
pop
into
sbb
in
xchg
jnp
sbb
in
test
and
iret
test
push
lds
frstor
sub
push
jmp
mov
cmp
and
sbb
jle
add
int3
push
out
shr
mov
add
cwtl
aad
sub
ret
jg
jp
into
pusha
out
fsubl
pop
fwait
dec
aas
mov
aad
or
pusha
test
out
push
addl
mov
inc
pop
data16
jl
pop
jnp
out
scas
lret
jg
cmp
lods
stos
hlt
pop
add
aas
pop
xchg
dec
mov
testl
das
and
mov
insl
ljmp
cmpsl
in
jg
xchg
inc
inc
stos
and
pusha
cwtl
jp
mov
lock
cli
nop
add
mov
mov
pop
push
pop
jge
sub
or
fsubl
mov
insl
sbb
add
xchg
sbb
fnstsw
dec
mov
xlat
aam
push
push
cs
es
xchg
sahf
pop
mov
aaa
movsb
cmp
cmp
pop
push
mov
popa
mov
icebp
sub
cld
sbb
dec
out
inc
xor
and
jecxz
cmp
sbb
fs
dec
fucomip
clc
or
and
mov
pop
loope
pushl
cmpsl
sbb
pop
je
fidivs
push
push
pop
out
mov
andl
mul
sbb
inc
mov
sub
add
and
xor
lret
or
in
aad
xchg
std
sub
les
jbe
push
jb
sbb
in
cmp
inc
outsl
inc
add
add
inc
mov
pop
push
jo
sub
fstps
cwtl
jne
jl
fs
mov
pop
sbb
lret
inc
arpl
mov
outsb
dec
bound
sbb
sti
test
xlat
xchg
fs
mov
loope
test
push
clc
add
adc
iret
jle
sub
es
cmp
lahf
sub
lea
jb
jge
xor
cmp
pop
ret
fs
push
add
adc
dec
add
add
pusha
push
lea
mov
js
cs
popf
cmp
loopne
cmp
in
or
mov
cmpl
mov
jae
cmp
outsb
xchg
imul
cmp
add
jb
ja
rclb
mov
dec
cltd
push
addr16
lds
repnz
jo
jne
add
mov
lods
hlt
sahf
push
movsl
jmp
bound
pop
mulb
test
stos
jnp
lods
mov
lret
int
push
ret
pushw
mov
int
inc
push
mov
shlb
mov
cmpsb
push
mov
mov
icebp
aaa
inc
xor
jmp
cmp
and
inc
xchg
dec
and
jbe
sbb
adc
in
mov
ret
test
xor
jne
mov
lret
mov
sbb
aad
mov
or
jae
mov
mov
inc
mov
xor
pop
aad
lds
xor
scas
cs
cmc
xor
push
hlt
out
and
scas
and
inc
in
jl
jg
sbb
call
or
iret
fwait
bound
push
lods
hlt
std
rclb
rorb
out
inc
mov
ja
mov
xchg
icebp
adc
imul
mov
inc
add
inc
inc
lret
imul
inc
sbb
push
int3
repz
pop
dec
mov
pop
xorl
xor
mov
and
stc
xor
inc
and
xchg
cwtl
sbb
cmpl
pop
fisubs
iret
lds
push
jl
cwtl
sbb
ds
sbb
imul
lret
cmpsb
mov
pop
or
xchg
inc
jecxz
mov
inc
fldcw
aam
sbb
push
enter
imul
mov
fisubrl
icebp
mov
inc
sbb
or
bsr
xchg
adc
test
mov
cli
pop
mov
xchg
loopne
push
loope
or
into
inc
or
pop
ds
jecxz
adc
mov
push
add
and
mov
gs
repnz
pushf
xchg
sbb
and
sub
das
test
lret
sahf
or
call
sub
pusha
xor
lahf
push
shll
icebp
mov
test
mov
pop
adc
testb
test
movsb
jecxz
mov
push
loope
icebp
sub
jo
test
rcr
rcrb
lods
xlat
mov
cmp
xor
inc
sbb
pop
cmp
jl
add
sbb
ljmp
leave
or
and
mov
lret
sahf
loopne
mov
or
inc
add
xchg
sbb
incb
ficoml
jbe
sub
add
inc
adc
add
xchg
jmp
inc
imul
xchg
das
push
xchg
sub
jns
out
sbb
adc
je
dec
push
sahf
mov
test
xorl
jmp
pop
jecxz
xor
test
jp
andl
mov
test
mov
push
add
mov
inc
sub
scas
mov
pop
daa
icebp
cwtl
rcrl
or
mov
jmp
aad
sub
stc
dec
xchg
frstor
test
out
sarb
repnz
mov
ret
movsb
jge
cmpsl
xor
mov
fimull
push
xchg
das
add
cmp
push
mov
xlat
ja
jp
sub
or
mov
scas
push
pop
xor
popf
xchg
lret
dec
sarl
call
xor
jg
fs
xlat
mov
cmpsl
and
dec
cmpsl
xlat
sub
sbb
bound
pop
ja
dec
pop
push
ljmp
jl
dec
and
xor
mov
movsb
sbb
add
jns
jle
lret
rcr
in
leave
leave
jne
add
mov
lock
push
arpl
mov
testb
mov
lock
daa
xlat
fsubrl
mov
out
lds
fsubrs
lea
ret
sub
cs
ret
mov
adc
cltd
cli
mov
xchg
pop
xor
rcll
cmp
enter
mov
std
pop
mov
and
xor
out
jae
int
je
rorl
mov
cmp
jmp
and
xchg
xor
in
testl
movsb
ljmp
mov
testb
xchg
xchg
or
mov
test
cmc
inc
outsl
lret
sub
rcrb
lock
ljmp
rcrl
jmp
lret
scas
dec
xchg
push
cmp
cmp
insb
sub
gs
inc
out
push
insl
push
mov
hlt
out
subb
divl
add
jns
xor
out
add
test
push
mov
pop
push
lea
xchg
xlat
in
lods
jle
jns
movsl
loopne
xchg
pop
jb
mov
push
ljmp
xor
int3
xchg
or
iret
daa
fnstenv
inc
inc
mov
push
mov
leave
jecxz
loopne
fwait
out
or
pop
mov
mov
xor
fs
in
je
incl
cltd
or
jle
lcall
fiaddl
lea
inc
inc
push
sub
mov
ret
sti
aam
jae
sub
cmc
icebp
and
and
inc
add
adc
fbstp
addr16
add
insl
outsb
mov
bswap
push
sahf
push
mov
inc
xchg
pushf
cmp
dec
fmuls
test
frstor
dec
adc
test
clc
xor
sbb
in
xchg
je
je
lods
rorl
lret
cmp
dec
jle
cmp
mov
fs
outsl
popf
repnz
pop
xor
loopne
push
jl
inc
mull
int
push
in
jp
xchg
stos
xchg
adc
nop
cmp
loop
mov
in
in
sub
aad
in
push
mov
repnz
or
insl
sbb
outsl
mov
push
sub
or
mov
jnp
stc
or
jbe
and
repnz
cmpsb
std
rcrb
xlat
inc
mov
inc
call
repnz
fisubs
popa
imul
sbb
out
nop
pop
fldenv
cli
shrl
and
mov
mov
pop
push
dec
pusha
and
inc
push
cmp
pusha
shr
sbb
sub
jl
and
jge
mov
adcb
pop
ja
dec
mov
je
pop
mov
inc
adc
les
inc
dec
mov
cmp
pop
push
sub
loopne
testb
jns
iret
or
divl
sahf
sub
cmc
fwait
ret
cld
iret
jo
pop
insl
mov
dec
xchg
ror
cmp
sub
mov
scas
and
adc
das
fsubrs
xlat
jnp
add
push
sub
sub
je
jns
fistps
xchg
test
mov
mov
push
jns
ret
xchg
dec
mov
add
cmp
xor
lret
sbb
das
fmuls
push
jge
push
push
in
push
lahf
stos
cld
adc
es
dec
jns
aas
push
xchg
xor
fistl
xchg
adc
xor
xor
xlat
subb
dec
inc
jp
adc
aaa
jbe
fadd
jl
aaa
enter
dec
mov
inc
cli
shrl
out
je
cmp
xchg
push
popl
xchg
fsubr
shlb
inc
adc
jg
or
sub
add
xchg
adcb
rclb
lods
in
es
imul
xchg
mov
lret
ja
ss
roll
cmpsb
ret
ficoml
or
ret
mov
adc
pop
push
push
add
inc
push
dec
jg
in
stc
jmp
inc
mov
xor
sub
sbb
jle
mov
mov
jno
std
adc
mov
sub
test
adc
sti
pop
push
mov
rorb
ret
or
lcall
pop
dec
mov
rcrb
push
add
pop
test
int3
jne,pn
pop
jno
mov
jmp
cmpsb
shll
jno
sub
shrl
mov
jle
fadd
push
bswap
fstpt
fld
fs
and
enter
aas
push
pushf
adc
ss
mov
fistpll
frstor
iret
xor
push
mov
mov
arpl
imul
aaa
dec
icebp
cmc
and
insb
mov
adc
dec
fmull
scas
adc
sub
cmp
mov
mov
xchg
test
shl
sub
dec
out
leave
inc
nop
inc
fwait
mov
adc
out
jb
jle
jb
rclb
add
fs
lret
jle
jle
and
xchg
outsb
xor
lcall
clc
into
insl
je
mov
test
xchg
cmp
jb
and
loopne
leave
fldcw
xor
and
sahf
cmp
adc
out
lret
in
movsl
add
fcom
pusha
cmp
cmc
fldcw
dec
jo
mov
sbb
add
dec
int3
mov
add
push
and
ret
pushf
mov
mov
jecxz
test
cmp
cmpsl
push
rclb
out
lock
xor
dec
dec
mull
add
xor
adc
cld
inc
dec
xchg
aaa
hlt
rcrl
pushf
mov
sbb
int3
andb
divl
dec
sahf
mov
in
xor
mov
roll
pop
or
jb
sub
xor
push
jns
or
ljmp
xor
or
fmuls
mov
cltd
cmp
mov
bound
push
pop
fnstsw
les
hlt
loopne
mov
xorl
push
xor
xor
orl
loope
push
sbb
push
pop
movsl
hlt
jecxz
jne
add
cmpsb
loope
int
lret
loopne
sbb
inc
hlt
ljmp
pop
sub
jne
cld
inc
cli
inc
sti
push
add
cmpb
dec
dec
jmp
ret
adc
into
xchg
push
bswap
xchg
stos
dec
clc
push
inc
dec
push
lret
add
fists
and
std
mov
add
push
xlat
out
xchg
sub
out
leave
or
xor
xchg
js
jns
or
jae
mov
mov
or
jb
pop
and
pop
imul
cmpsl
int3
dec
subb
scas
mov
xchg
ljmp
and
fwait
lods
fsubrs
xchg
mov
push
and
or
idivb
cmp
sbb
jmp
or
je
sub
ja
mov
cmp
jne
dec
out
push
xchg
add
xor
int
push
loope
mov
scas
lret
jmp
sbb
push
stos
fistpll
jle
sbb
cmpsb
clc
lods
fildl
es
ret
jb
testl
fs
rcll
jne
dec
jne
sbb
data16
inc
dec
ja
fwait
pop
out
push
jge
fwait
xchg
xchg
imul
cmp
xchg
std
and
clc
jmp
pop
sbb
cmc
cmp
fnop
and
cmc
div
in
cmp
pop
icebp
dec
testb
in
pop
jmp
and
pop
std
ret
xor
scas
aam
in
cmpsl
mov
inc
or
test
push
sarb
subl
sub
sbb
push
inc
adc
das
inc
and
adc
iret
sub
push
sub
inc
fs
das
and
sub
cmpsl
and
rcl
std
xor
movsl
or
lds
popf
adc
out
nop
outsb
gs
jg
out
sub
sub
sbb
lods
mov
dec
shll
or
into
push
cld
fcmovnbe
cmp
xchg
fdivrp
mov
mov
cwtl
loopne
jg
movsb
xlat
pop
mov
mov
insl
dec
je
inc
cwtl
or
and
jp
adc
pop
jle
push
data16
push
sbb
xchg
sbb
fcmovnbe
mov
mov
push
add
push
fdivp
cmp
fs
inc
mov
jle
inc
pop
js
out
adc
ja
mov
and
pop
aaa
shr
stos
sub
sti
outsl
dec
inc
mov
sti
ror
xchg
pop
push
pop
cmp
dec
data16
icebp
cmp
ret
add
mov
roll
stc
xor
icebp
shrl
mov
cmpsb
jns
add
rorl
mov
pop
xchg
inc
mov
xlat
mov
shrb
js
cli
cli
mov
cmp
xchg
or
inc
xor
out
jno
xchg
adcl
lahf
fbstp
or
cld
dec
outsb
mov
mov
and
adc
push
pop
aas
and
stos
insb
pmullw
lcall
iret
lea
out
inc
inc
in
push
pop
shll
adc
cmp
mov
push
stos
or
aaa
pop
inc
cmp
inc
ja
out
inc
adc
mov
mov
dec
insb
cmp
mov
push
adc
dec
lea
jnp
mov
fwait
add
lock
std
mov
dec
push
fdivrl
jge
enter
sub
jo
js
sbb
xor
sub
icebp
mov
hlt
lahf
test
subb
loope
sbbl
mov
int3
mov
insl
xlat
ljmp
pop
pop
roll
out
dec
push
jg
testl
rcr
mov
psrld
imul
xchg
inc
push
stc
mov
mov
mov
sub
fcmovbe
cmp
cmp
xorb
jne
negb
and
mov
ror
movaps
fsubrs
adc
in
push
iret
nop
push
pop
pop
loope
jb
cmp
or
jae
jns
cmp
out
setns
xchg
mov
or
xchg
ret
xchg
lret
das
push
je
add
das
fcmove
das
or
dec
insl
xchg
dec
mov
int
out
pop
shl
bound
or
into
arpl
stos
pop
sub
dec
mov
or
mov
xor
mov
sbb
inc
add
dec
jne
cmp
push
mov
cmp
jae
popf
mov
and
mov
sbb
mov
inc
push
mov
scas
sbbb
xchg
inc
cmpsb
sbb
xchg
jbe
cwtl
loope
lock
dec
cltd
sub
sub
mov
xchg
xchg
shll
lock
popf
fisttps
mov
cmpsb
shrl
mov
add
push
das
push
or
push
and
and
jle
lret
pop
cs
jbe
jecxz
fnstsw
mov
mov
mov
dec
pop
je
xchg
ss
sti
out
mov
sbb
rorl
xor
aam
pop
adc
jp
mov
repz
fwait
and
xchg
stos
enter
mov
lea
je
add
fs
cmp
mov
dec
cmp
mov
in
mov
dec
sbb
mov
lret
pop
inc
cmp
or
sub
loop
movsb
jp
pop
jnp
int3
jmp
out
and
add
inc
jle
jb
sub
movsl
mov
xor
jmp
insb
push
iret
or
jae
xchg
jo
daa
adc
insl
sahf
push
sbb
add
mov
mov
fmuls
push
mov
xlat
sub
imul
jle
inc
inc
add
jne
sub
mov
pusha
push
xlat
pop
inc
shll
add
ficompl
arpl
incl
icebp
imul
pop
or
mov
xchg
sub
outsl
int3
push
add
idiv
mov
pushf
jbe
add
fwait
push
pop
cmp
pop
notl
mov
push
movb
mov
imul
scas
cmpsl
test
mov
rcrb
push
push
mov
mov
cmp
cmc
sbbl
xchg
and
inc
sbb
push
pop
in
enter
imul
and
xor
jmp
insl
inc
fwait
ljmp
mov
jg
add
in
and
out
mov
repnz
mov
pop
sbb
pop
sbb
enter
into
ljmp
sbb
xchg
and
decl
test
mov
cmp
mov
maxps
push
aaa
mov
fldt
loopne
push
pop
loope
lret
xchg
inc
pusha
adc
jp
fabs
rcrl
and
jle
sbb
lret
lret
clc
cmpsl
icebp
outsb
xlat
inc
or
nop
stos
dec
mov
mov
fsub
inc
lds
pop
js
loop
es
loope
cwtl
mov
mov
jnp
jae
arpl
outsl
cwtl
or
movsb
dec
sbb
outsb
pop
aaa
fucomip
imull
dec
inc
cmp
inc
push
rolb
pop
loop
out
lcall
je
cltd
mov
icebp
movsb
xor
xchg
pop
cmp
jg
test
aam
xchg
jge
jne,pt
fidivrs
push
shlb
pop
mov
ficoml
nop
lods
push
sbb
sub
stc
fcomp
mov
movsb
fcoml
in
rclb
jge
cmp
dec
jb
int
and
push
push
pop
jns
cmp
and
enter
push
test
in
jle
scas
movsb
mov
ja
mov
mov
add
adc
imul
movsl
fildl
inc
push
ficomps
cli
insl
sbb
mov
mov
enter
mov
imul
push
mov
jae
dec
ret
adc
pushf
pause
shll
inc
inc
daa
mov
popf
rorl
push
arpl
outsl
xorl
push
jnp
aas
pop
sub
sbb
or
and
pop
fistpl
js
inc
cmp
je
push
add
xlat
xchg
mov
repnz
dec
imul
arpl
divb
loop
mov
shll
ror
sub
cmpsl
or
xor
cmpsl
movsb
xor
insl
inc
in
rorl
add
mov
scas
mov
dec
faddp
sbb
out
das
add
cmpsl
imul
add
test
es
pusha
cmp
inc
into
daa
test
out
xchg
mov
cmp
add
mov
xchg
jge
or
scas
add
es
clc
data16
daa
daa
ds
das
jbe
mov
ret
pop
std
repz
mov
in
sbb
mov
xlat
ret
ret
or
add
inc
fcompl
or
jns
popa
ror
sbb
fcmovnu
adc
add
ret
xchg
push
inc
out
sbb
mov
lock
or
and
lahf
xorl
xor
xor
and
mov
scas
sbb
in
cmc
jno
stos
cmp
dec
stos
sar
sbb
out
mov
je
popf
mov
fidivrl
jecxz
pushf
dec
mov
inc
adc
add
mov
fwait
hlt
push
inc
mov
in
fisubl
jo
test
int
les
bound
lds
inc
xchg
sti
test
pop
fdivs
xchg
and
sbb
bound
test
sar
adc
or
push
or
lahf
inc
lahf
into
add
and
cmp
jbe
or
sbb
test
jno
scas
dec
jnp
push
push
out
jo
inc
mov
or
jp
mov
cli
rclb
mov
popa
imulb
mov
es
enter
push
cmp
fcoms
loop
in
mov
into
push
inc
xchg
add
inc
fistpll
xchg
xor
call
pusha
adc
movsb
clc
mov
lock
leave
ss
xchg
dec
inc
pop
popf
adc
aam
or
jecxz
loope
rorl
push
and
push
push
outsb
cld
cmp
lds
addb
stc
mov
fnstenv
fsubrl
inc
aaa
xor
mov
dec
push
dec
clc
and
shll
lahf
xchg
cmp
les
insl
sbb
gs
shr
pop
sbbb
lock
mov
bound
lcall
sbbl
test
inc
xchg
int3
xor
xor
adc
mov
pop
xchg
test
mov
mov
in
or
dec
aad
es
or
stos
add
xor
sbb
pop
pusha
outsb
iret
mov
xchg
adc
and
pop
das
mov
lods
xchg
sbb
popf
addr16
movsl
inc
in
jae
xchg
scas
lcall
inc
ljmp
mov
push
cmpsb
inc
in
mov
movsl
iret
popf
scas
add
sbbb
or
pop
jge
outsb
add
add
dec
rcl
add
mov
testb
cmp
in
adc
xor
or
or
daa
mov
cld
outsb
shll
add
aaa
rcll
mov
jbe
jb
xchg
in
ret
pop
jo
jb
stos
int3
push
insb
loopne
and
stos
scas
mov
push
into
dec
ret
leave
jno
pop
pop
xor
test
mov
lcall
xor
cmc
dec
shrb
xchg
xchg
xlat
cmc
fldl
mov
or
jb
loopne
jo
stc
test
mov
mov
hlt
and
inc
cmc
subb
add
loope
mov
fnstenv
movsl
test
sbb
pop
xchg
daa
or
inc
lds
adc
add
push
scas
pushf
cwtl
inc
mov
sahf
negb
cmp
pop
pop
mov
cmp
cld
cmp
das
popf
push
push
mov
jno
fisubs
jae
sarb
xchg
pusha
test
fildll
xchg
js
arpl
out
jno
aad
xchg
inc
mov
movsl
pop
adc
or
xor
data16
mov
cltd
loope
fiadds
in
out
push
adc
outsl
insb
xchg
xchg
js
ficomps
and
les
aaa
ja
sub
pop
push
stos
or
cmp
add
pop
push
jo
dec
stos
cmp
push
rorb
cmpb
inc
movsb
jge
xlat
out
iret
xor
fwait
sbb
sbb
hlt
push
int
dec
leave
adc
mov
iret
adc
pusha
jmp
jnp
add
jecxz
in
jl
cmpsl
test
mov
gs
xlat
add
mov
mov
add
out
ja
pop
mov
or
ja
jne
and
xor
dec
push
sub
nop
movsl
cltd
inc
jl
inc
sbb
call
in
or
test
movsl
inc
adc
lock
dec
dec
push
jnp
mov
jecxz
sub
idivb
inc
fcomps
lret
mov
popf
sub
mull
outsb
enter
lock
mov
xchg
mov
lret
fcoms
inc
stc
sbb
dec
jno
in
ds
or
xchg
cld
push
pop
stc
push
dec
arpl
test
nop
mulb
add
add
fnstenv
lea
add
inc
cmp
sub
ja
stc
sbb
dec
pushf
dec
out
repnz
xchg
sub
or
gs
pop
inc
mov
call
fcmovbe
mov
add
pushf
stos
push
or
pushf
mov
xchg
dec
push
add
xor
cmp
xor
xchg
pop
nop
out
pushf
lahf
test
mov
jmp
testl
loope
int3
mov
inc
mov
sbb
ds
sub
ljmp
arpl
cmp
sbb
jle
pop
jbe
xor
jmp
push
add
loop
cmc
ja
divl
pusha
cmpsb
sbb
aad
xchg
hlt
arpl
inc
cltd
inc
ficoms
pop
push
jmp
adc
cld
inc
pop
lods
lret
sbb
push
sbb
ret
inc
loop
mov
xor
xchg
lahf
imul
cmpb
xchg
sbb
mov
xor
addb
push
ret
testb
adc
rcll
mov
push
in
push
gs
cmpsb
mov
scas
andl
addr16
inc
sbb
sub
xchg
sub
xor
cmp
push
test
xor
xchg
dec
movsb
mov
rolb
push
clc
fsubrs
pop
stos
push
inc
xlat
add
rorl
xor
dec
pop
cld
imul
push
push
enter
jne
mov
lods
pop
xchg
outsl
mulb
inc
xchg
sbb
notl
scas
mov
dec
fdivrl
xchg
inc
xchg
iret
or
sbb
xor
sbb
push
push
and
lret
fdivs
pop
mov
cli
adc
int3
arpl
adc
and
test
aad
mov
cmp
adc
cmp
int3
and
adc
and
out
and
aas
jns
cmc
sbb
popa
stc
ss
mov
out
mov
sti
lahf
bound
add
int3
movsl
icebp
imul
jo
fists
daa
sar
jb
jge
std
ja
pop
mov
nop
xor
cmpsb
inc
inc
mov
add
fisubrl
mov
sbb
xchg
pop
clc
scas
pop
arpl
mov
jp
inc
mov
push
mov
ja
lock
xor
gs
xor
iret
pop
sbb
jo
aad
push
lret
push
and
insl
shl
sub
and
adc
lcall
out
push
cwtl
scas
stos
cmpsl
nopl
pushf
jmp
aas
icebp
or
arpl
popf
mov
mov
orl
push
xor
mov
xor
cld
pop
push
xor
je
cli
stc
jge
jmp
int3
repz
push
pop
cmp
aaa
or
cld
push
lods
imul
inc
push
sti
inc
fcom
aam
out
dec
inc
xchg
insb
mov
push
test
movsl
inc
ffreep
mov
shll
dec
fwait
ljmp
push
add
jl
repz
int3
into
and
sub
push
leave
mov
movsl
add
nopl
and
gs
push
in
imul
mov
rcl
pop
sbb
rorb
push
cwtl
inc
stos
popf
clc
dec
add
in
loop
int
lret
lret
stos
dec
shll
dec
daa
xor
or
pop
roll
pop
popa
addr16
and
sbb
in
and
loope
or
pop
popa
sub
out
xchg
fisubrs
pop
adc
in
jbe
jmp
mov
mov
mov
arpl
mov
sbb
jae
pop
pop
xchg
out
mov
cmpsl
cmp
sub
jno
int3
sub
ret
dec
adc
ret
insb
pop
sbb
repz
dec
pop
pop
jl
test
sbb
dec
cld
dec
test
sub
ss
dec
mov
in
add
lret
cmpsl
mov
daa
push
mov
mov
mov
addr16
sub
mov
push
pop
sub
cmp
ficoml
pop
sub
mov
fbstp
inc
pushf
out
fadd
fcmove
inc
cmp
xchg
push
fcmovbe
cs
mov
lea
stos
insb
loop
sbb
push
pop
push
loopne
sahf
clc
push
sarb
inc
mov
mov
mov
call
and
movsb
in
dec
add
dec
ds
out
push
push
iret
aas
rol
insb
sub
adc
xchg
repz
inc
out
test
ljmp
cmp
or
jo
mov
lock
clc
inc
movsb
sub
adcb
inc
enter
fstpl
mov
in
mov
fstl
repz
pop
jle
jg
imul
cs
dec
add
mov
cmp
adc
push
xchg
pop
push
insb
js
fs
inc
ljmp
std
adc
repz
test
jbe
xor
imul
sbb
push
fldenv
test
aam
push
and
add
mov
push
mov
push
pop
mov
outsb
bt
in
mov
stos
cmc
push
mov
nop
aas
and
loop
repz
xchg
or
lea
mov
aad
fprem
mov
sub
fwait
sbb
mov
sub
sub
add
dec
push
fcompl
cwtl
scas
xor
out
jae
inc
scas
stos
out
xor
sbb
sbb
xorb
and
popa
js
ss
xchg
sti
in
test
out
fistl
roll
cmp
cs
fisubrs
sub
push
mov
xor
jbe
test
xchg
test
orl
out
fcomi
stos
mov
fwait
push
pop
mov
scas
cmc
sbb
pushf
mov
adcl
jp
mov
push
hlt
shlb
mov
inc
insb
inc
fcmovnb
int
jbe
sub
into
jo
test
movsl
movb
scas
push
dec
aaa
aas
pop
daa
push
mov
jb
addr16
mov
cltd
adc
sub
popa
in
in
add
adc
adc
imul
xchg
sub
mov
testb
dec
inc
lcall
add
push
adc
in
xor
pop
jbe
rcrb
sahf
inc
push
pop
adc
sbb
or
loop
call
sub
sub
adc
enter
int
xor
sub
mov
ja
dec
inc
mov
mov
xchg
dec
xchg
inc
adc
jle
pop
cmpsb
mov
push
jno
pop
xor
jp
cmp
mov
mov
or
ja
pushf
jns
packsswb
push
iret
dec
aaa
mov
or
or
mov
cmc
xorl
mov
mov
ja
push
fwait
loope
sarl
push
je
and
arpl
outsb
adc
out
lock
int3
leave
test
adc
js
int3
out
scas
mov
pop
sbb
call
fmuls
xor
rcrl
arpl
or
ficoml
jne
jnp
in
cld
dec
sahf
cs
sbb
lock
mov
sbb
lods
xchg
test
fcmovu
mov
fs
sbb
cmp
mov
or
aad
imul
inc
fs
in
inc
sarb
push
data16
mov
cmp
push
jae
fs
dec
jo
dec
cmp
aad
xchg
test
jnp
stos
dec
enter
rcl
js
push
gs
mov
inc
jae
pusha
imull
movsl
dec
fs
push
inc
mov
insl
sbb
dec
arpl
das
rcrb
pop
add
ds
push
aad
aam
loopne
add
rolb
cmpsb
inc
pop
popf
dec
clc
xchg
stc
mov
xorb
xchg
add
repz
push
push
out
or
xor
cmp
and
adc
fistl
inc
lock
sub
ljmp
imul
dec
jge,pn
cmp
testl
cli
int3
je
out
add
test
push
pushf
sti
xor
ljmp
sar
adc
shl
stos
out
js
lcall
mov
outsl
rcrl
mov
stos
sub
outsw
les
cltd
lea
push
scas
in
mov
clc
or
dec
stc
fidivl
xchg
mov
out
out
sahf
stos
pushf
repz
idivb
jb
cmpsl
cwtl
sti
ds
cmpsl
iret
sahf
ficompl
xchg
adc
mov
mov
scas
sbb
and
sbb
aaa
xchg
mov
sub
inc
lcall
sti
dec
nop
dec
jg
add
xor
iret
cmc
and
jmp
shl
cmp
push
fwait
cmp
sub
dec
ret
xchg
push
inc
dec
jle
push
lcall
push
mov
or
out
inc
mulb
mov
mov
xor
popa
icebp
or
pop
mov
sub
inc
push
xchg
and
push
xorb
roll
jl
sub
xor
in
aad
test
fs
sub
xor
jge
outsl
adcl
or
mov
mov
sbb
mulb
call
cmpsl
mov
mov
test
bndldx
pop
and
aaa
fisttpl
or
ja
xchg
pop
jmp
loopne
xchg
inc
xchg
dec
push
inc
test
fstps
loop
sub
jae
jge
pop
or
lahf
add
pop
ror
fcmovb
xchg
jmp
std
test
lcall
bound
lahf
sbb
test
daa
ret
mov
nop
lods
inc
stos
xchg
adc
popf
test
aam
cli
pushf
ja
jge
xor
lods
adc
add
lods
push
push
inc
fnsave
in
pop
sbb
cmp
cmpsb
test
jb
lds
fdivrl
dec
mov
dec
add
inc
mov
cmp
es
iret
sub
or
xlat
adc
pop
push
xchg
adc
imul
insl
outsb
or
sub
push
push
addb
movsl
cmc
call
mov
mov
pop
sub
xchg
push
fistps
dec
sub
notl
or
int
mov
test
mov
stc
pop
cwtl
cwtl
adc
push
sbb
out
add
ljmp
fcmovbe
lds
xchg
divb
cmp
out
mov
fsubrs
sti
hlt
cs
or
xor
pop
bound
cmp
jecxz
stos
rclb
jp
pusha
lea
pop
mov
fldcw
push
in
xchg
rclb
push
xchg
dec
mov
mov
subb
mov
out
dec
inc
jp
adc
xlat
stos
fucomp
mov
arpl
inc
nop
pop
add
mov
in
sarl
pop
stos
iret
cwtl
xchg
daa
jbe
dec
sti
test
mov
lret
xlat
shl
mov
inc
lods
loop
push
cli
dec
pop
xchg
xor
jo
sub
push
xor
test
popa
call
mov
cmpsb
cs
rclb
les
dec
cmp
imul
mov
sbbb
fwait
mov
mov
sub
push
fs
push
lods
test
std
add
scas
add
in
scas
jno
inc
mov
xorb
pop
movl
mov
les
xchg
ret
or
jmp
in
push
mov
ds
aas
clc
popa
mov
mov
cmpb
jmp
and
push
pop
icebp
arpl
pop
cmp
jg
pop
push
mov
add
sbb
sbb
cld
add
mov
pop
insl
dec
arpl
or
sbb
jmp
adc
outsb
sbb
inc
and
and
pop
gs
sub
xchg
mov
fs
imul
daa
clc
pop
cld
daa
mov
jge
sbb
push
cltd
jo
clc
jnp
test
jo
clc
cmp
sbb
cmp
push
or
popl
or
dec
mov
cltd
mov
mov
sub
xchg
ficompl
movl
push
mov
sub
inc
add
sub
arpl
push
loope
pop
cwtl
push
xchg
mov
push
and
sbb
daa
ds
out
xor
jmp
mov
repz
dec
push
loopew
shl
mov
lea
adc
sti
aaa
sub
push
imul
testb
fstpt
inc
les
xor
cmp
mov
cmp
adc
mov
fwait
or
mov
dec
adc
cwtl
in
jne
out
aaa
adc
ja
and
mov
lods
ret
inc
je
jno
jne
sub
ja
data16
stos
mov
ss
loopne
adc
loop
mov
mov
and
push
adc
fwait
orb
push
ret
pop
fwait
cli
std
sub
add
push
cmp
pushf
mov
daa
or
xor
aaa
sbbb
in
int3
push
inc
test
cli
movsl
cmp
inc
mov
mov
cmp
mov
mov
lret
add
rolb
adc
cmp
int3
ror
repz
popa
fwait
int
int
jns
rol
push
dec
repz
and
jne
cmpsl
dec
loopne
repnz
mov
jg
out
xor
lret
sbb
movsl
xchg
shrl
mov
inc
adc
and
xchg
xor
lock
into
ljmp
cmp
mov
pop
mov
iret
jg
mov
mov
addr16
arpl
stc
sub
imul
iret
ret
push
sahf
faddl
and
cmpsb
call
pop
pop
mov
adc
movl
pushf
push
lahf
jmp
imul
pop
popa
sbb
out
pop
sub
bnd
adcb
xchg
lds
mov
lods
add
adc
mov
or
shrl
xor
sbb
popf
call
pop
shrl
lret
in
fistps
cmp
dec
jle
xor
lods
adc
lcall
sub
jl
imull
ja
cwtl
popf
repnz
mov
push
or
cmc
es
pop
pop
xor
pop
popf
in
or
movsl
jae
mov
mov
cld
xchg
repnz
fnstenv
or
mov
or
and
pop
and
leave
pop
sbb
shrb
mov
notb
mov
js
sbbl
notb
sti
pop
stc
pop
adc
inc
andb
lret
mov
stc
mov
xchg
xlat
leave
sbb
rol
sub
jle
stc
push
or
out
cmp
mov
scas
push
imul
push
rcl
pop
lods
test
addb
pop
mov
sbb
xchg
into
rcl
adc
data16
or
ficompl
jge
aam
add
or
and
jb
cltd
xor
sbb
fidivrs
mov
rorb
rclb
aas
imul
xchg
mov
xor
ljmp
test
rcrb
fwait
jns
shrb
add
arpl
lods
jmp
sahf
push
mov
mov
inc
add
sub
cltd
in
add
dec
test
fdivs
int3
pop
repnz
lcall
idivl
loope
jmp
sarb
sbb
outsl
out
lea
test
adc
out
push
dec
push
ret
xchg
dec
enter
push
or
lods
jge
leave
jne
adc
mov
mov
mov
add
mov
aaa
lods
push
gs
push
push
and
push
insb
movsb
mov
jg
lods
insl
loopne
sbb
adc
xchg
mov
out
dec
test
sti
or
ljmp
mov
jecxz
cmp
test
adc
sbb
mov
pop
push
leave
mov
sub
aam
movsb
out
mov
mov
je
or
and
mov
insb
xchg
jp
sbb
jb
inc
es
pop
test
mov
pop
mov
cmp
pop
clc
cmp
jp
imul
loop
outsb
retw
pop
lcall
ds
cli
xor
mov
cmpsb
cwtl
imul
sarl
cmp
xorb
pop
stc
fsubs
add
pop
jnp
push
jg
mov
pop
loop
mov
daa
dec
or
rep
icebp
jge
inc
cld
or
into
cwtl
mov
mov
out
in
mov
call
dec
push
test
dec
xor
mov
mov
cmp
ljmp
inc
pop
arpl
adc
jecxz
sub
sbb
leave
adc
inc
movsb
movsl
xchg
test
scas
cmp
cmpsb
cmp
xchg
in
dec
stos
or
rclb
fsubrs
dec
add
mov
add
xor
lods
lret
xor
int
lcall
bound
sbb
outsl
fiadds
pop
add
xchg
daa
repnz
push
dec
roll
mov
fisubs
sub
sub
into
or
arpl
fisubrl
popl
scas
test
mov
out
mov
mov
sbbb
shlb
pop
mov
jmp
js
mov
or
aad
jbe
dec
or
loop
stos
stc
inc
cmp
jl
bound
pop
imul
mov
xchg
shl
add
hlt
scas
jle
mov
dec
mov
sbb
pop
jecxz
mov
int
nop
jo
mov
imul
aaa
mov
sbb
outsl
movb
cmp
adc
or
enter
push
push
lret
lret
in
shll
sub
stos
out
sarl
in
jecxz
cs
clc
fadds
sbb
xchg
xor
cld
jbe
jae
mov
xlat
or
orl
cmp
lret
sbb
bound
push
and
out
mov
xor
rcll
rolb
repz
ret
arpl
mov
push
adc
inc
test
push
das
adc
push
shr
sbb
outsb
mov
outsb
dec
adc
inc
fiadds
test
jle
jbe
outsl
add
and
inc
xchg
pop
rcrb
pop
or
jnp
sub
aam
cmp
stos
xor
xchg
fcoml
mov
push
sub
dec
and
mov
and
sbbb
xchg
movsl
ds
jbe
inc
gs
mov
jbe
lock
loope
int
lret
or
xchg
lea
jnp
xor
arpl
outsb
ficoml
add
sbb
xchg
stc
and
mov
fnstsw
bound
mov
dec
lock
pusha
aaa
stos
cmc
adc
mov
adc
adc
inc
repz
inc
and
fucomi
imul
push
cmp
cltd
mov
repnz
jne
xchg
shrl
ret
xchg
mov
inc
popa
inc
scas
xchg
and
sbbb
mov
out
jne
jmp
sbb
outsl
jle
and
popf
xor
xor
or
sbb
add
adc
fbld
out
enter
clc
inc
fstps
repnz
enter
rorb
push
fs
repz
nop
inc
mov
mov
mov
lods
mov
sbb
mov
push
addr16
dec
cmpb
mov
outsb
arpl
pusha
mov
xchg
dec
dec
arpl
gs
mov
add
xor
int3
int3
ret
js
ffree
outsb
dec
jnp
aas
and
dec
mov
mov
inc
out
inc
stos
jns
add
push
inc
gs
fldl2t
aas
jo
shlb
pop
add
xor
mov
aad
pop
cmp
leave
jg
mov
fcomi
rclb
dec
in
inc
cli
mov
loope
andb
in
stos
out
mov
pop
je
fcomps
ja
xorl
fildl
loop
aad
cmp
inc
out
pushf
xor
mov
pop
push
les
dec
div
subl
jno
or
inc
xchg
pop
pop
pop
or
add
lock
aaa
aam
ds
and
xor
push
lods
stos
movsb
xchg
mov
pop
pop
fs
in
or
fsubp
in
das
aaa
insl
aaa
pop
xchg
cmp
adcb
nop
pop
mov
out
or
mov
pop
rcll
or
mov
pop
jg
pop
das
pop
dec
fs
or
and
ja
icebp
arpl
stos
loop
ja
add
adc
jle
scas
and
jge
mov
cmp
cmpsl
or
xchg
adcl
outsb
jle
rorl
jp
int3
dec
test
cs
pop
adc
les
test
outsl
cli
aas
inc
and
jp
push
loop
mov
pop
dec
push
dec
ds
into
jmp
cmp
sbb
or
jecxz
mov
test
inc
loope
shlb
cmpsl
mov
cmp
xor
mov
out
jmp
dec
aaa
es
sub
push
scas
test
push
mov
push
cmp
sub
pop
push
cmp
cmp
inc
test
scas
xor
adc
rorl
loope
add
mov
out
in
icebp
fwait
mov
iret
fwait
fwait
xrelease
add
sahf
iret
jb
daa
add
mov
dec
mov
test
sar
cmp
lret
js
mov
xchg
scas
and
jns
cld
aaa
insl
pop
sarl
jecxz
fisubs
out
cmp
lret
pop
mov
cli
cmp
in
mov
daa
addl
push
mov
cltd
mov
sub
sbb
push
in
jmp
add
mov
xchg
push
mov
ror
pushf
xchg
mov
bound
inc
addr16
loopne
and
jp
cmpsb
bound
jbe
lds
lock
mov
pop
cmp
rclb
mov
cmp
loope
fs
movsl
lds
les
leave
jl
jg
stc
inc
lcall
cld
push
inc
jecxz
sub
lret
aas
push
sbb
pop
outsl
jno
xchg
inc
dec
pushf
cmp
mov
lret
cmp
or
nop
or
imul
sbb
std
sti
mov
jae
ds
ss
idivl
lods
sub
lret
inc
lret
gs
dec
sbbb
sub
mov
xchg
cmp
mov
sbb
dec
push
lods
idivl
dec
aaa
je
popf
mov
mov
mov
ret
popa
mov
sbbb
cltd
stos
sarl
aaa
popf
hlt
mov
insl
or
push
push
inc
iret
scas
xchg
aad
out
decb
pop
pop
push
jae
jmp
aam
pop
cmp
into
fwait
in
mov
sbb
fcoms
adc
or
addr16
pop
arpl
adc
test
lods
pushf
dec
xlat
add
push
add
mov
testb
mov
loope
sarl
pop
pop
sub
aam
les
bound
rcrl
lret
jns
push
and
jbe
test
shrb
xor
and
lfs
cmp
mov
inc
cmp
xchg
pushl
ss
rcl
inc
adc
cmpb
out
cmp
es
mov
pop
addr16
movsb
leave
gs
outsb
ja
xlat
xchg
aas
arpl
mov
subl
push
fninit
xor
ret
fwait
sbb
pop
dec
rorb
sub
das
add
in
adc
fwait
push
jae
sbb
xor
pop
dec
jle
lods
lcall
jmp
scas
mov
fdivl
push
movsl
sub
mov
into
call
xchg
pop
stc
stc
cmp
mov
outsb
dec
adc
inc
xchg
push
ds
mov
out
inc
fdiv
inc
aam
xor
andl
sahf
xor
and
inc
xchg
and
sub
hlt
nop
pop
scas
jbe
rorb
pop
adc
xchg
xchg
sbb
or
dec
mov
mov
in
xchg
iret
mov
dec
sbb
cs
or
or
add
pop
popa
inc
into
fistpll
ret
jp
loope
jnp
outsl
cld
fdivr
push
xchg
add
les
sbb
testl
mov
lret
cltd
ljmp
hlt
dec
pop
sub
sbb
xchg
mov
and
test
inc
xchg
mov
jmp
pop
add
mov
imulb
and
rcrb
fists
ret
xor
dec
dec
sbb
or
or
enter
sbb
fcomip
dec
push
add
inc
pop
mov
stc
cld
inc
mov
cmpsb
push
nop
pop
imul
insl
stos
pusha
lahf
xchg
sub
flds
dec
faddl
mov
xchg
dec
cmc
mov
adc
jbe
add
fs
dec
mov
xor
lock
or
xlat
mov
mov
adc
cmp
in
jmp
mov
xchg
call
sub
sub
inc
pop
pushf
sahf
aam
sub
cmp
not
cmp
pop
xor
lahf
and
xchg
push
jns
xor
test
in
out
pusha
dec
pop
pushf
outsl
fst
std
sub
xchg
jno,pn
mov
cmp
int3
ss
std
mov
inc
pop
xchg
adc
mov
mov
cmpl
pop
les
push
out
xchg
cltd
test
std
dec
xor
push
or
push
fisttps
fstpl
inc
fcoml
inc
dec
cltd
jl
sbb
mov
add
sub
repnz
cmp
ss
jmp
pushf
popa
je
sbb
aam
xchg
movsb
pop
pop
lock
lock
xor
sbb
sahf
push
out
pop
sub
sub
sub
popa
inc
test
dec
or
mov
test
test
dec
sub
lahf
pop
mov
stc
adc
je
xchg
cld
add
mov
arpl
imul
or
xor
in
or
mov
leave
push
push
hlt
subl
cld
fiadds
and
fcompl
cs
cmc
sahf
push
or
negl
push
lret
arpl
orl
lods
es
mov
adc
dec
add
sarl
mov
mov
jns
pop
sbb
lea
ljmp
out
cmp
fsubs
mov
std
mov
and
pop
test
or
in
sbb
lea
mov
lods
fidivl
scas
cmp
inc
jp
ja
imul
mov
loopne
pop
jp
inc
mov
lods
add
iret
mulb
xchg
or
mov
int
push
lds
scas
sti
mov
jecxz
out
bswap
sub
imul
and
push
rol
out
into
dec
or
imul
in
ret
ficoml
out
cmp
outsl
imul
dec
mov
loope
jge
mov
cmp
or
xchg
mov
mov
stos
sbb
mov
jge
lahf
fidivs
mov
jp
jnp
dec
sub
aaa
mov
call
pop
xor
lods
shlb
push
xchg
inc
insl
mov
lock
and
test
rcll
test
pusha
test
dec
cmc
ja
adc
je
mov
or
sbb
jmp
mov
mov
adc
mov
repz
test
xor
inc
xor
rcl
adc
out
outsb
jae
in
negb
test
call
mov
pop
mov
pop
add
add
add
cmp
ja
sub
out
jle
pop
stc
cmp
sub
enter
dec
lods
cwtl
insl
mov
cld
stos
pop
fsubrs
push
fmul
sti
push
or
pop
pop
push
inc
repz
outsb
and
push
cmpxchg
ss
test
setnp
lcall
or
int
test
lret
lahf
pop
mov
je
xor
aaa
nop
dec
out
mov
popl
pop
dec
pop
jle
xor
js
xor
hlt
sub
jae
adc
cmpsl
jecxz
andb
mov
xor
push
enter
es
pop
dec
int
mov
mov
mov
sub
sbb
ljmp
cli
dec
loope
outsl
mov
add
mov
movsb
or
cmp
out
xor
mov
and
cmp
mov
push
pop
xchg
mov
popf
cmp
lods
lods
push
outsb
mov
pop
xchg
mov
add
leave
jl
rcll
xchg
in
and
addr16
sub
pop
pop
lods
dec
fdivr
mov
sbb
push
add
jae
ret
sub
mov
rclb
sbb
mov
mov
sub
in
data16
insl
ret
cli
push
xchg
addr16
mov
pop
push
mov
inc
inc
cs
xorb
adc
jne,pt
adc
mov
pop
and
insb
or
sahf
hlt
and
cmp
and
jae
in
inc
pop
xchg
dec
mov
pop
pop
push
or
and
addr16
jnp
sbb
fidivs
xchg
cli
and
push
and
daa
adc
pop
test
ja
stos
js
out
inc
rcrb
in
aas
and
mov
dec
pop
cmp
mov
hlt
dec
fbstp
aam
out
sub
in
loopne
test
fstps
ror
add
inc
adc
in
imul
movsb
loope
xor
ds
jle
fldl
sub
sbb
fidivrl
imul
lea
xor
out
stos
movsl
pusha
fidivrl
movsb
sub
jns
xchg
fldenv
popa
xchg
or
xchg
ret
xchg
inc
negb
xchg
out
test
addr16
fstps
mov
cmpsb
push
and
aas
popa
cli
dec
or
test
inc
clc
inc
adc
rcl
jnp
jbe
mov
stos
scas
jbe
repnz
daa
aaa
or
add
or
mov
mov
or
aad
jo
pushf
shll
mov
pop
jbe
and
iret
sbb
cmp
xor
aad
add
mov
cmpsb
add
cmp
mov
cmp
js
lret
mov
xor
push
mov
insb
cmpsl
daa
push
in
cli
pop
mov
inc
das
mov
pushf
ljmp
sbb
and
xchg
mov
dec
push
arpl
ds
xchg
daa
shlb
dec
pop
clc
xor
sbb
fisubrs
push
push
push
imul
pop
pop
and
mov
sbb
add
loopne
inc
jo
dec
jl
pop
inc
jecxz
out
ret
scas
mov
fisubrs
xlat
mov
int3
add
mov
cli
push
insl
xor
call
dec
sub
addb
imull
jle
rcr
cmpsl
ret
cmp
enter
dec
clc
push
pop
mov
cmpsb
dec
and
lret
iret
mov
ret
xlat
movb
mov
popf
mov
inc
add
sbbl
test
fidivl
sub
and
cltd
insl
mov
stos
fistps
mov
add
push
sub
test
add
out
iret
lock
inc
fbld
add
insb
jb
and
push
test
jmp
mov
lret
lahf
movsl
or
push
pop
out
movsl
sub
push
dec
lock
cmp
adc
ss
das
inc
and
imull
lds
dec
outsb
fwait
lds
rolb
pop
pop
nop
popa
aas
inc
xchg
push
add
out
pop
es
pop
adc
scas
mov
mov
or
aam
dec
dec
popf
cmpsb
jne
cmp
cmp
mov
xor
xor
xchg
mov
cmp
cmp
adc
push
push
xchg
push
mov
or
outsl
dec
push
xor
dec
pop
mov
ja
sbb
xor
push
jns
mov
mov
sbbl
outsl
lret
xchg
mov
hlt
jae
sub
out
addr16
dec
shrb
sub
jbe
push
mov
in
lcall
adc
int
iret
out
mov
mov
jae
pop
stos
es
xchg
dec
outsl
push
lods
pop
std
inc
out
mov
or
aad
push
cs
lcall
adcb
mov
das
fs
iret
xor
jl
stos
sahf
xor
inc
inc
dec
jg
or
je
movsl
stc
xchg
jo
lods
mov
cmpl
and
clc
or
push
push
rclb
enter
xchg
mov
out
mov
adc
das
loop
inc
cmp
add
insl
push
sbb
mov
cmp
test
add
dec
scas
aam
pop
sbb
cld
stc
push
lcall
popa
or
stc
pop
fstps
testl
or
in
lcall
sub
addr16
push
xor
xchg
xchg
jne
pop
icebp
or
cli
mov
sbb
cli
test
fdivs
mov
xlat
pop
ljmp
stos
popa
and
xchg
stos
mov
cld
jecxz
push
stos
popf
inc
hlt
jb
jnp
int
dec
push
dec
repz
mov
sbb
bound
jbe
and
adc
jno
push
mov
sbb
loop
push
lea
into
popf
mov
xchg
push
adc
mov
pop
sub
push
pop
mov
sbb
cmpsb
pop
cmpsb
jnp
movsb
out
xchg
imul
jl
sub
push
out
ds
mov
lret
mov
adc
cmp
movb
movsl
and
hlt
adc
bound
xor
repz
mov
call
inc
ds
sbb
mov
and
and
cmpsb
cmp
lock
xor
adc
ret
dec
push
add
in
lock
cmp
lods
add
pop
aas
add
xor
cmp
dec
sbb
repnz
scas
cmc
out
adc
ja
jge
inc
cmp
jne
push
sub
sbb
inc
pushf
test
mov
ds
inc
imul
aas
or
pushf
outsb
bound
jmp
lret
fs
cmpsl
mov
xchg
aam
xchg
mov
add
xchg
mov
push
cmp
lea
mov
outsl
jge
dec
dec
mov
lea
sahf
daa
fistpl
xlat
ss
aad
push
sbb
cwtl
fbstp
sbb
cmp
roll
jae
sbb
cli
sub
mov
jle
es
les
test
adc
pop
jmp
dec
fcoml
sahf
jne
push
call
es
imul
pop
in
dec
fwait
sub
fists
mov
movsb
mov
sbb
std
vmovddup
xor
dec
pop
mov
ret
sbb
add
jge,pn
fs
mov
rcl
xchg
fsubl
in
xchg
jge
outsb
jle
inc
cmp
mov
xor
add
in
jbe
lock
push
mov
fsubl
nop
sbb
mov
sub
lock
cmp
test
scas
lods
cmp
repz
mov
cmp
cmp
into
cmp
dec
lahf
loop
xor
jmp
xor
loope
fsubl
and
dec
or
hlt
into
cld
and
pop
int3
jecxz
loopne
sbb
hlt
mov
mov
lahf
sbb
xchg
push
mov
and
call
pusha
pop
fdivp
mov
lods
sarl
inc
cmp
pusha
cmpsb
mov
jle
cmc
test
jb
and
cs
js
jnp
pusha
xor
pusha
inc
mov
xchg
lods
mov
jecxz
jb
fdivs
leave
cltd
mov
dec
in
fwait
cmp
mov
popf
cmp
sub
mov
and
imul
jno
pop
orl
popa
add
cmp
cs
dec
lds
insb
ja
xchg
sub
cld
cmp
xor
lds
fsub
daa
pop
jge
or
shlb
xchg
mov
shrb
jge
adc
out
lock
pop
js
or
popf
lock
sub
pop
xchg
cmpsb
cmp
pop
clc
fdivrs
jae
cmp
push
pushf
xchg
sarl
scas
adc
adc
or
lcall
sub
jnp
sbb
cmp
jecxz
add
mov
push
ret
cmpsb
pop
sahf
jl
xor
add
adc
sub
or
les
pop
pushf
rol
add
cmp
scas
xchg
daa
mov
mov
or
jg
mov
cld
jnp
subl
pusha
testb
xor
lret
call
xchg
std
jmp
orb
cmc
shrl
mov
adcb
lods
sbb
push
test
aam
jo
out
add
int3
sub
lea
mov
imul
in
xchg
scas
mov
or
int3
dec
rclb
cmp
insb
int
inc
or
das
ret
cmpb
andb
dec
fsubrs
cmp
mov
pop
scas
mov
jge
pop
idiv
and
add
mov
adc
out
dec
xlat
inc
or
push
push
fdivrl
sahf
mov
adc
aam
test
bound
mov
cs
inc
lds
movsl
mov
add
mov
test
mov
subb
lahf
or
sahf
stc
lods
divb
jns
sbb
jmp
or
dec
sar
ljmp
sbb
xor
jp
out
fiadds
dec
fistpll
int
addr16
fsubl
jmp
fsub
rol
fisubrs
out
mov
add
movsl
mov
sub
ret
push
je
jae
push
sub
inc
pop
scas
and
xchg
jb
leave
mov
fs
add
imul
test
icebp
jl
fnstcw
in
fcoml
lods
cld
repnz
movsb
push
and
pop
movsl
psubb
hlt
cmp
jns
mov
inc
inc
mov
or
xor
cwtl
pop
fwait
stos
jbe
inc
jbe
xor
dec
xchg
nop
test
sbb
mov
outsl
jo
pop
push
push
rep
shll
mov
bound
mov
loope
mov
push
pop
or
jmp
xchg
pusha
xchg
cwtl
or
lcall
or
cmpsl
das
std
shl
push
je
inc
cmpsl
sub
loope
adcl
adc
push
shrl
and
loopne
les
out
xchg
pop
ret
aaa
cltd
bswap
rcrl
fisubl
imul
es
adc
cmp
mov
mov
aas
mov
jg
mov
fnstenv
jg
dec
out
mov
adc
orl
mov
and
in
orb
gs
je
es
pop
push
enter
out
aas
jne
fistps
iret
sub
jle
lahf
pop
mov
push
sbb
idivl
add
ret
mov
adc
pop
popa
aas
jnp
add
push
sub
js
test
daa
les
dec
int
enter
aas
jg
xor
jbe
psubsw
bound
mov
or
add
fs
xchg
insb
lea
inc
clc
mov
or
and
cmp
or
and
mov
add
and
mov
cwtl
adc
roll
fadd
cmpsb
ficomps
lret
mov
adcb
in
aam
popa
sub
sarb
dec
fidivs
mov
shll
sub
insb
shrd
dec
jecxz
into
adc
mov
pop
add
xor
or
or
mov
sbb
pushf
jle
and
push
dec
and
mov
insb
mov
pop
mov
and
sub
lods
jae
fimull
adc
xchg
ds
push
sub
xchg
stos
mov
stos
or
aaa
dec
pusha
adc
rclb
jno
or
xchg
push
loope
ret
jmp
les
fdivrl
xchg
xchg
pop
mov
out
push
fwait
dec
scas
aad
cmp
xor
stos
adc
inc
cmpsl
xchg
and
outsl
loopne
popf
shl
das
call
out
cmp
insb
xchg
pop
mov
xor
jno
setp
sbb
cli
jge
push
inc
int3
mov
xlat
aas
cmp
jno
jb
and
sbb
dec
ss
fistl
negl
mov
pop
fnstsw
jnp
ret
adc
rorb
mov
aad
add
inc
dec
cmp
ficomps
mov
adc
and
pushf
sub
dec
pop
mov
xorl
nop
psadbw
jno
ljmp
pop
ljmp
add
mov
cltd
es
push
es
cwtl
mov
jp
orb
pop
ret
dec
pushf
or
imul
lcall
lods
pop
xchg
mov
gs
jp
pop
jmp
jnp
leave
gs
pusha
aas
dec
outsl
adc
inc
jns
lahf
lret
shll
adc
stos
ljmp
pop
jmp
cld
mov
sbb
es
cmpl
add
repz
mov
addr16
mov
and
outsb
cltd
test
jecxz
sbb
lret
lods
add
or
movl
leave
xor
dec
dec
rcr
xor
ds
popa
xchg
dec
push
pop
xchg
jo
cmpsb
push
aaa
sti
cmp
pushf
loop
shlb
into
dec
cmp
inc
mov
outsb
dec
sti
aad
jp
cmpsl
sbb
jbe
jg
shr
sub
iret
inc
mov
dec
popf
inc
das
faddl
xchg
mov
jae
popf
fcomps
outsb
movsl
mov
xchg
xor
mov
repnz
xchg
imul
or
jmp
inc
xchg
movsb
mov
inc
sbb
cmp
movsb
or
jg
mov
add
mov
scas
pop
int
cltd
mov
adc
mov
xchg
ficoms
out
fldt
sbbb
jo
and
lahf
rorl
xor
imul
lds
bound
mov
jno
inc
cmc
mov
pop
shl
push
jg
push
ret
ds
mov
sahf
mov
xor
jp
push
insb
pop
aam
filds
inc
inc
ret
add
repnz
push
inc
lahf
push
mov
push
aaa
mov
insl
jnp
rcll
ss
movsb
jnp
mov
sti
arpl
jl
in
jne
cmp
aas
ret
mov
imul
mov
testl
fcomp
jmp
xor
fbstp
adc
ljmp
sbb
ljmp
pop
pop
pop
lcall
mov
jg
sub
sbb
arpl
scas
xchg
pusha
fnsave
rclb
cmpsb
int3
ret
cmp
fwait
add
sbb
xchg
jo
jle
fstps
cmp
jp
inc
mov
push
cmp
bnd
dec
push
scas
xor
notb
packssdw
jb
test
faddl
inc
xor
loope
loop
or
out
arpl
cli
or
push
test
test
sub
add
xchg
sbb
outsl
xchg
das
pop
outsl
add
pop
sub
mov
push
cmp
ja
pop
ret
xchg
aas
loop
sbbl
xor
cmp
movsb
cs
nop
test
push
mov
xor
add
aad
shld
jl
pop
ljmp
dec
jp
adc
push
mov
xchg
sub
mov
dec
fs
or
sbbb
mov
in
push
repnz
rorb
inc
push
aad
adc
adc
sub
mov
jle
rolb
push
mov
xchg
inc
jecxz
xchg
push
inc
lods
clc
incb
andl
in
lods
les
jbe
mov
movsl
adc
or
rcrl
mov
and
fstl
sub
shlb
sub
es
movsb
pushf
push
insb
xchg
into
push
arpl
adc
movl
mov
fstpl
insb
lds
int
popf
xchg
js
and
fcmovne
mov
pop
sbb
popf
enter
mov
scas
pop
outsb
mov
or
fwait
jae
repz
jno
add
and
add
test
and
push
inc
or
insb
call
fs
fmull
mov
mov
pop
mov
enter
cwtl
push
in
pop
mov
mov
jp
pop
into
pop
push
xchg
call
dec
rorb
jg
sbb
or
fisubs
ret
mov
cmp
sub
jno
aad
jae
sub
xchg
mov
insl
pop
xor
fwait
das
out
les
xor
mov
adc
out
inc
mov
mov
stc
ret
fcmovnbe
icebp
aam
lock
adc
pop
adc
or
cmp
push
pop
pop
push
ss
mov
sub
lea
in
mov
push
out
mov
inc
push
jmp
mov
xchg
shlb
push
add
pop
mov
inc
mov
push
sbb
pop
in
test
mov
mov
and
scas
arpl
mov
pop
stc
ss
enter
aas
dec
enter
cmp
push
pusha
daa
add
push
cmpsb
sub
idivl
mov
imul
inc
mov
or
cmp
xchg
mov
aas
push
inc
sub
xorb
mov
xor
mov
pushf
inc
pop
in
jle
stos
add
cltd
into
movsl
jmp
ret
rcrb
jle
xchg
out
pop
sub
sbb
xorl
ret
dec
lea
mov
cli
sub
adc
imul
cmpsb
cmp
loop
mov
inc
nop
sbb
xlat
cwtl
mov
mov
addr16
jle
jmp
or
stos
sub
and
adcl
adc
push
adc
xor
cs
sahf
jmp
cmp
or
lods
cmpsl
js
push
arpl
or
and
inc
push
imul
push
mov
dec
xor
push
cmp
mov
sbb
fldl
aas
mul
mov
push
frstor
sub
frstor
out
pop
inc
imul
xchg
das
sub
xor
bound
sub
test
inc
mov
push
int
sarb
adc
adc
cmp
add
test
inc
and
dec
mov
inc
pop
mov
mov
lahf
aad
sbb
xchg
pop
es
add
mov
jp
pop
out
scas
call
jge
int3
cmpsb
xchg
orl
mov
mov
mov
sub
out
dec
xchg
mov
adc
mov
out
shll
xor
jmp
adc
mov
aas
dec
sub
mov
nop
dec
das
inc
add
cs
mov
sub
repnz
xchg
repnz
pop
xchg
mov
ljmp
push
cmp
jl
int3
mov
inc
arpl
in
cmp
lock
xor
jmp
mov
push
jge
aaa
insb
xor
dec
dec
inc
loopne
add
in
jb
mov
bound
cltd
jnp
mov
add
cmpsb
ret
add
mov
mov
in
lea
push
mov
outsb
js
lahf
xchg
fdivs
xchg
repz
cmovns
shlb
jmp
xor
xchg
or
das
and
data16
in
aam
out
mov
out
sub
out
repnz
lret
and
xor
push
jmp
cld
sub
test
push
out
jge
cmp
pop
outsb
push
dec
mov
scas
fs
mov
int3
orb
cwtl
stos
outsb
sbb
jge
aaa
movsl
roll
mov
push
cmp
adc
in
test
inc
xchg
nop
bound
fwait
popf
sbb
in
cmp
stc
test
mov
and
sub
inc
sub
fnstsw
movsl
jmp
mov
jae
clc
push
xchg
out
mov
mov
push
push
fxch
lea
push
adc
jle
inc
shrl
aas
and
std
stos
lock
ss
orb
sbb
mov
out
jmp
cmp
out
fdivs
movsb
pusha
cmovb
or
dec
xor
jge
sbb
cwtl
dec
mov
loop
daa
out
adc
adc
int3
jmp
mov
inc
or
aam
sub
pop
jne
in
test
inc
enter
enter
mov
shlb
insl
sub
pop
arpl
mov
mov
fwait
aam
ret
mov
xchg
xor
xlat
pop
in
jmp
test
push
mov
pop
push
not
leave
or
pop
add
aad
lds
rcll
and
loope
pop
aad
adc
ror
sbb
xchg
jmp
mov
stos
add
dec
into
inc
ret
or
push
das
dec
out
mov
or
sbb
pusha
movsl
in
jbe
jo
in
xor
outsl
mov
pusha
or
mov
push
or
repz
dec
ja
push
les
dec
lcall
sahf
lds
push
inc
lds
dec
add
fbld
subl
jg
cs
jno
mov
sub
into
outsb
das
ja
testl
pop
popf
shrl
mov
mov
dec
movsl
andb
fisubrl
pop
mov
incl
js
and
adc
lcall
cmp
sub
adc
stos
push
outsl
lods
push
sub
int
fs
nop
mov
xchg
movsl
or
xor
cmp
addr16
jp
mov
es
pop
adc
or
cmc
sub
jo
pop
stos
inc
cmp
or
enter
sub
cmp
push
rep
sbb
cmp
sbb
push
or
xor
xchg
rclb
into
test
jns
jbe
test
fsts
shl
idivl
and
stos
push
pop
push
test
xor
lret
filds
ss
pop
fimull
jecxz
das
mov
xor
push
cltd
stc
push
popf
enter
fisttpll
cs
cmp
jg
outsb
cmc
sar
xchg
inc
inc
lret
pop
cmp
aas
cmp
out
xchg
daa
sub
cwtl
mov
shl
ljmp
adc
pushf
jmp
lret
push
dec
mov
push
and
fisubrs
cmc
cmp
imul
xchg
movsl
mov
push
pop
mov
cltd
ficoms
or
xchg
data16
mov
xchg
outsb
add
aad
add
cwtl
inc
mov
sar
stc
test
dec
pop
fs
fsub
mov
mov
lock
pop
pushf
cmp
sub
and
adc
lcall
std
sub
jg
xchg
movaps
push
dec
ds
imul
jb
sahf
jge
dec
mov
jecxz
or
ret
outsl
repz
testl
rorl
mov
cmp
mov
jo
add
testb
adc
pop
aas
stos
jle
andb
and
or
imul
je
inc
pop
hlt
adc
pop
xor
pop
mov
or
lock
mov
movsl
add
cli
push
mov
sti
das
mov
sbb
stos
push
dec
fcomps
in
jnp
mov
ds
pop
pop
aad
mul
iret
ret
pop
ss
lods
cmovl
xchg
or
cmpsl
mov
test
and
sbb
mov
imul
lock
out
inc
xor
test
pop
mov
int
in
sbb
and
mov
sub
jge
ja
mov
mov
dec
adc
js
inc
je
sub
sbb
adc
or
punpcklwd
dec
mov
jae
pop
cmp
xor
xchg
stos
negb
and
insb
lds
or
xchg
fucomp
sub
jo
scas
jmp
cs
jno
cmp
loop
out
ljmp
mov
pop
pop
fstpl
cmp
outsl
shrb
add
mov
mov
movsb
lahf
mov
test
sbb
cld
cmp
push
pop
xchg
movl
or
mov
push
jns
adc
sub
lea
fs
ds
out
pop
addl
in
lcall
push
sbb
imul
mov
add
fcomps
cwtl
cmp
dec
out
pop
xchg
ror
stos
les
mov
or
mov
lods
mov
movsl
sbb
outsl
flds
roll
std
nop
sub
cmp
in
push
out
cmpb
xor
cmp
and
scas
mov
xor
ds
fabs
test
mov
push
js
pushf
sti
js
test
adc
stc
ror
jle
cmp
lret
hlt
sahf
and
push
bound
or
in
lds
shl
dec
std
outsl
ljmp
orb
repz
bound
xor
in
sbb
cwtl
roll
mov
rcrb
fistps
xchg
push
rorl
stos
ja
shll
rcr
sub
outsb
sbb
pop
sub
cmpsl
cltd
ss
sbb
icebp
sub
repnz
lahf
fstpt
dec
mov
push
mov
loopne
jmp
repnz
inc
or
mov
mov
inc
and
adc
adc
push
call
mov
mov
cmpsb
cmp
arpl
xorb
push
lock
jecxz
and
int3
add
jb
mov
jecxz
cltd
popl
xchg
pop
dec
out
inc
ret
push
in
xor
xchg
dec
inc
mov
outsb
addb
sarl
inc
jmp
mov
and
in
or
in
push
mov
sahf
flds
movsb
jbe
addr16
mov
jo
sahf
jge
data16
dec
out
add
or
in
sbb
or
dec
dec
je
out
insl
mov
lods
cmp
mov
js
aaa
sub
aam
add
mov
stc
mov
pop
inc
repz
dec
jg
addr16
ffree
pop
movsl
xchg
insb
rorl
lret
lock
jae
jecxz
xchg
cld
cmp
lret
hlt
imul
lds
sub
jmp
inc
pop
in
push
cs
cmp
lret
or
lods
rcrl
adc
mov
stos
test
xchg
out
les
js
stos
add
inc
enter
sbbb
out
mov
lret
adc
dec
repz
pop
jae
add
int
popa
out
xchg
clc
popa
dec
cmpl
push
fistpll
adc
nop
lods
inc
xchg
rcl
mov
jo
sbb
popf
scas
xor
int
xchg
xchg
jbe
adc
ljmp
push
jno
xor
or
in
dec
cmpsb
xchg
sub
loop
pop
jl
xlat
xor
cld
iret
sbb
pop
or
adc
jne
fwait
es
gs
mov
add
mov
jo
mov
mov
mov
and
cld
add
lcall
insl
add
pop
flds
adc
loopne
push
adc
ja
push
lcall
pop
jg
ja
imul
mov
and
dec
push
in
sub
idivb
ror
cmpsl
cmp
clc
insl
pop
inc
pop
jno
leave
or
lods
rcrb
lods
dec
dec
and
sbb
and
sar
cmp
outsl
xchg
sbb
retw
inc
push
sub
sub
adc
popa
mov
jmp
cmp
cmp
cmpsl
pop
lahf
movsl
jecxz
movsl
mov
jge
popa
ret
iret
sahf
cwtl
loop
arpl
ret
iret
addl
pop
jle
mov
nop
mov
sub
xchg
aas
les
jl
inc
jg
and
add
mov
movsl
push
andb
das
sti
aas
sub
lahf
test
inc
lahf
lods
xor
cmp
test
add
and
scas
pop
stos
xor
repz
jae
xchg
inc
and
leave
xchg
ror
pop
enter
xor
ss
lea
pop
pop
es
movsb
jne
lahf
xor
lock
jb
jae
xchg
mov
loope
mov
inc
std
mov
pop
dec
scas
shlb
jbe
mov
fucomi
inc
notb
push
push
fs
mov
sub
test
test
aad
js
dec
push
mov
xchg
mov
cli
or
xchg
mov
das
xchg
js
jg
iret
int
xchg
loop
pushf
ret
std
fcompl
and
lods
lcall
rcrl
jle
dec
inc
in
xchg
sub
lock
adc
adc
shrb
data16
out
ficoms
ss
xor
dec
xchg
xchg
jnp
mov
cmp
cmpsb
jp
xlat
int3
mov
cmc
flds
subb
andl
je
add
lahf
ja
mov
inc
add
mov
push
and
loope
dec
sbb
mov
jp
rcrl
sbb
xor
pop
adc
shll
inc
xchg
adc
xchg
jae
ficoml
pusha
pop
or
and
xchg
aad
jae
inc
call
xor
enter
mov
aaa
cli
jecxz
rcll
pop
mov
jb
push
rorb
or
dec
xchg
push
or
aad
mov
and
lcall
cmc
cltd
adc
fdivr
into
stos
add
in
lret
hlt
mov
cld
lret
push
and
sar
mov
dec
lods
ljmp
scas
inc
and
ret
js
ss
mov
mov
sahf
imul
add
mov
out
repz
push
mov
inc
lods
cmc
fwait
adc
into
pop
insl
jno
and
xor
push
movsl
sbb
push
aas
dec
fwait
mov
xor
das
enter
jns
iret
movsb
repnz
or
outsl
into
daa
sub
aaa
loopne
dec
push
dec
subb
adcb
in
push
pushl
pop
jmp
inc
xchg
jmp
sbb
aad
sub
push
mov
std
xchg
and
leave
insl
push
pop
xchg
inc
outsl
icebp
lods
ficoml
pushw
adc
stos
popf
and
xor
ficoml
mov
mov
jno
cmp
test
sub
into
xchg
lea
inc
loop
mov
out
push
sahf
aas
xchg
push
pop
inc
sarl
dec
out
ljmp
scas
fsubl
fisubrl
fsubr
shrl
jg
repz
xchg
cltd
stos
xor
mov
mov
decb
mov
jg
sub
out
mov
packssdw
fwait
ljmp
cs
shll
or
outsl
hlt
push
cmpsb
ffreep
lods
mov
sub
out
xor
pop
fs
inc
adc
pop
imul
or
ljmp
cs
xor
xor
xor
pop
das
xchg
add
lea
jb
xchg
xchg
mov
xor
int
jns
addr16
loop
outsl
xlat
in
xchg
mov
push
jmp
adc
sar
fdiv
lret
dec
lea
ss
jecxz
sub
orb
cwtl
add
mov
jl
sbb
adc
mov
pop
cmp
popf
jno
popf
cmp
ljmp
mov
insl
fs
movsl
xor
jp
sub
ljmp
push
xchg
mov
adc
mov
aam
inc
pop
ja
stc
add
jecxz
scas
adc
and
jbe
or
add
cmpsl
adc
jge
lock
test
jg
negl
stc
repnz
and
stc
out
xor
cltd
mov
mov
mov
mov
jnp
xchg
adc
adc
mov
and
sbbl
iret
adc
mov
fstpt
lea
mov
cmp
sbb
add
and
fwait
lret
jne
mov
repnz
xchg
or
addr16
pop
mov
bound
shll
or
and
xor
iretw
xlat
xchg
test
lret
push
cli
cwtl
incb
mov
stos
mov
ljmp
pushf
xchg
repz
repnz
inc
inc
mov
cvttps2pi
mov
inc
adc
inc
repz
push
push
pop
loop
jo
ljmp
xor
stos
or
sbb
insl
in
sub
pop
xchg
dec
push
push
and
sbbb
mov
cmp
push
mov
mov
xchg
repz
ret
dec
cmp
fnstenv
sbb
mov
adc
sbb
pop
sbb
in
mov
xchg
mov
mov
adc
das
iret
ret
jg
arpl
fldpi
sub
and
out
pop
mov
repnz
fidivrs
shrl
mov
inc
jecxz
dec
outsb
std
adc
add
xchg
in
adc
jne
mov
mov
gs
idivb
sbb
leave
jbe
jge
dec
ja
sub
mov
mov
adc
mov
xchg
inc
add
mov
xor
in
inc
clc
in
dec
add
push
jns
test
xchg
icebp
mov
xchg
mov
and
mov
pop
inc
xor
imull
lret
in
orl
fcomps
stc
lods
lods
mov
testb
xor
lret
inc
sub
in
pushf
call
addb
push
cwtl
insl
add
pop
or
pop
add
sub
jg
mov
adcb
sbb
inc
dec
pushf
into
and
jmp
lock
mov
jb
lahf
aas
es
out
cs
mov
nop
imul
jmp
xchg
ja
movl
sub
aam
xchg
ja
cs
subb
pop
add
insb
sub
sahf
and
fs
cmp
je
adc
inc
jno
test
sub
mov
cmp
or
sbb
cld
adcl
out
pop
mov
jl
cmp
cltd
xchg
pop
pop
push
nop
xor
and
enter
dec
xor
dec
movsl
lea
jg
fs
nop
subl
push
xchg
xor
mov
xor
test
fidivrs
pop
lea
stc
push
mov
adcl
cmpsl
repnz
popa
jecxz
pop
je
add
push
cld
out
mov
jno
add
les
inc
mov
or
in
test
sbb
iret
sbb
mov
adc
mov
sub
push
js
xchg
xchg
sbb
mov
rorl
push
imul
push
pop
cmp
or
add
fidivrl
ljmp
mov
push
inc
mov
lock
movsb
mov
mov
aam
enter
xchg
icebp
fidivl
adc
pop
je
jb
out
popf
call
adc
movsb
xor
sbb
ret
clc
ja
mov
jnp
subb
add
imul
lds
xlat
and
and
jae
push
inc
pop
loopne
gs
dec
jae
xor
mov
fdivl
pop
push
pop
fdivr
movsb
sub
in
push
repnz
push
test
xchg
pop
je
mov
push
testb
xchg
sarl
fdiv
push
adc
aad
in
xor
cs
nop
fs
or
movsb
add
mov
sub
xchg
and
cmp
lods
inc
mov
aas
and
pop
out
dec
arpl
mov
mov
pushf
jl
fistpll
mov
ja,pt
dec
mov
sub
test
sbb
inc
aad
mov
inc
in
mov
dec
andb
stos
dec
cs
xchg
cmc
mov
dec
xchg
mov
xchg
pop
ja
out
popa
insb
cmp
push
jno
or
sub
and
addr16
rcll
inc
lret
mov
aas
fimull
in
cmp
push
sbb
stos
xchg
push
loopne
clc
in
push
cmp
mov
test
mov
jg
pushw
imul
mov
xchg
bound
js
ja
jne
decl
cwtl
js
adcb
cs
cmpb
jne
imul
xor
mov
xor
add
lret
mov
jne
push
add
dec
outsl
pop
vmovaps
bound
lcall
jmp
mov
popa
jno
sub
dec
pop
shll
push
testb
andl
in
mov
into
ss
inc
push
xchg
cltd
adc
mov
cli
adc
pop
dec
dec
push
arpl
lcall
dec
js,pt
scas
test
stos
inc
icebp
sbb
mov
and
in
and
jno
add
mov
mov
inc
int
inc
mov
arpl
mov
or
das
xchg
sbb
or
fcomip
push
pop
out
xchg
xchg
imul
dec
adc
xchg
in
xlat
xlat
mov
sbb
xchg
out
adc
cmpsl
loopne
leave
push
jae
pusha
stc
or
int
xlat
leave
loop
add
push
ret
nop
sbb
push
imul
and
xchg
std
arpl
dec
nop
xchg
inc
daa
and
fistl
int3
std
sbb
cmp
cld
xlat
dec
mov
xchg
inc
xor
lret
pop
stc
mov
sub
je
mov
aam
cltd
shll
iret
das
fimuls
bound
xor
pop
and
cli
add
lret
rcll
mov
faddl
enter
adc
or
or
icebp
dec
or
jp
cld
fnstenv
inc
stc
inc
orb
push
in
cmp
xlat
movmskps
ljmp
mov
mov
fisubl
and
movsl
push
jl
xchg
std
in
fwait
cmp
in
sbb
rol
or
inc
lcall
pop
aad
or
mov
jmp
test
mov
cmc
repnz
lea
daa
cmc
jne
jmp
jmp
std
push
cld
loope
movsb
add
mov
in
test
out
pushf
sub
movsb
push
xor
fcmovnb
cmp
xor
xchg
adc
icebp
pop
insl
add
leave
leave
xlat
mov
jo
push
xchg
mov
mov
addr16
xor
shl
xor
fisubs
mov
fsubs
pop
cmp
lods
popa
rcl
mov
xchg
subl
mov
sub
mov
sbb
pop
fcomip
call
mov
lcall
scas
out
fcmovu
sbb
pop
outsb
roll
je
fiaddl
sub
mov
dec
mov
fucom
xorl
ss
in
stc
adc
out
or
hlt
pushf
xchg
mov
jne
dec
mov
les
fwait
in
push
iret
jo
cmp
mov
lahf
std
xlat
mov
cwtl
mov
rcll
mov
push
inc
lahf
jbe
push
jecxz
sbb
jmp
mov
xor
or
and
test
adcb
ret
and
enter
jle
enter
jp
xchg
test
lods
pushf
dec
inc
pop
pop
scas
and
sbb
gs
add
mov
and
ret
js
pop
outsl
cmpsb
mov
mov
scas
pop
sbb
xor
pop
das
jns
or
inc
repz
ret
aad
aas
inc
xchg
xor
xchg
add
icebp
test
fldenv
inc
mov
mov
mov
xor
sbb
fdivrs
es
int
popa
repz
out
pop
lods
jp
mov
call
lahf
in
out
and
add
pop
mov
xor
and
in
push
ja
mov
inc
mov
je
test
and
inc
es
mov
add
jp
adc
cli
cltd
and
jns
mov
jbe
sbb
cmp
out
test
mov
jae
pop
into
sahf
pop
xchg
and
jo
cld
add
jle
cmpsl
xchg
xor
push
mov
adc
ss
ds
jle
aam
pop
sub
cltd
push
dec
jg
addr16
ss
xlat
jae
int
adc
and
or
lods
jmp
push
aam
mov
sub
pop
or
dec
inc
sbb
ret
ret
fldenv
pop
jne
jle
xchg
or
lret
xor
nop
cs
push
je
push
pop
xchg
xor
dec
in
lret
sbb
shl
and
ds
inc
xchg
mov
and
xchg
jg
test
imul
dec
cmp
scas
scas
or
daa
mov
dec
push
push
dec
add
mov
add
inc
ja
sub
adc
movsl
sub
scas
jne
clc
inc
movsb
mov
sub
xorb
xor
mov
popa
cltd
inc
sub
pop
hlt
mov
insl
add
ret
mov
adc
out
add
add
add
testb
dec
or
hlt
lock
dec
add
sti
or
mov
sbb
icebp
push
xrelease
jle
inc
les
int
jmp
add
mov
call
dec
xchg
cli
lock
push
idivl
test
data16
xchg
rorl
xor
inc
mov
mov
mov
cmp
add
adc
xchg
aad
in
mov
fbld
imul
loopne
js
inc
jl
mov
fdiv
cmp
sbb
jl
lock
mov
inc
jne
adc
in
aas
stos
ds
mov
sti
pusha
cmp
pop
push
icebp
ss
cmp
add
out
fsubl
and
push
movl
push
adc
das
fs
jmp
cs
mov
popa
das
jae
inc
jge
cltd
pop
mov
mov
call
pop
inc
fimull
std
xor
cwtl
push
pop
inc
sbb
sbb
add
push
jp
out
movsl
mov
jns
insl
scas
mulb
stc
inc
lods
add
leave
loope
enter
push
pusha
pusha
sub
movb
mov
xchg
or
popw
xchg
imul
mov
in
call
push
icebp
movsb
xlat
aas
cmp
pop
pop
lea
push
add
repz
xor
daa
lock
add
in
xchg
jnp
in
lcall
test
inc
adc
jl
or
je
mov
cmp
mov
mov
popa
cmp
lods
mov
mov
push
imul
cmp
stos
stc
es
out
inc
sub
flds
adc
outsb
xor
jecxz
xchg
sbb
add
mov
sbb
inc
icebp
jl
mov
jns
or
mov
push
lret
cmpsl
fcmovu
or
std
rolb
arpl
rorl
stos
xorb
xchg
sti
inc
test
scas
cmc
push
xchg
mov
movb
pop
mov
mov
mov
push
imul
fstps
xor
xchg
int3
or
lcall
add
add
cltd
je
cmp
add
pop
test
xor
and
xor
xor
sub
cmp
mov
push
sub
add
add
inc
rclb
jl
shl
movsl
stos
jbe
ja
loopne
mov
ja
icebp
adcl
sub
jp
dec
mov
or
xchg
push
add
frstor
hlt
adc
ss
sub
out
test
xchg
popa
ret
mov
mov
add
leave
sahf
insb
popa
lldt
or
loopne
pop
xchg
push
lcall
cwtl
jb
pop
sub
movsl
mov
test
gs
mov
rclb
hlt
icebp
pop
nop
das
sarb
or
push
movsl
nop
push
or
sbb
pusha
mov
inc
addl
pusha
xchg
mov
xchg
adc
cmp
scas
in
aad
mov
push
cwtl
and
inc
push
inc
inc
seto
xchg
push
cmp
lods
jno
mov
mov
cmp
fst
mov
in
stc
cmpsb
outsl
mov
pop
stos
outsl
inc
mov
ficompl
ficompl
cmp
cld
js
cwtl
rolb
dec
add
punpckhwd
mov
movsl
mov
pop
mov
xor
adc
lods
dec
imul
int3
mov
push
xchg
push
addr16
jns
js
xchg
dec
jp
lcall
push
mov
cmpsl
pushf
insb
xor
loope
pusha
mov
lods
adc
adc
jbe
dec
jbe
outsl
sub
mov
lock
xchg
jns
lret
ss
lock
arpl
pop
clc
popa
mov
add
lock
add
or
into
pop
push
hlt
pop
cmp
in
dec
push
pop
xchg
insb
loop
sub
in
jae
push
push
test
lods
inc
mov
xor
sbb
mov
cld
aaa
fsubrs
loope
pop
lds
dec
clc
sub
pop
push
sub
sbb
lods
movsl
dec
sub
jns
std
jne
mov
mov
adc
xor
fsubrl
ds
lret
imul
xchg
mov
cmc
dec
pop
add
mov
hlt
aad
mov
out
aad
jno
in
inc
jle
push
aad
dec
xor
inc
repnz
cmp
or
cs
gs
out
scas
fsts
loop
add
lods
pop
xor
mov
mov
insb
cmpsb
fsubr
aas
push
fs
aam
or
les
inc
dec
fs
outsl
xor
adc
lret
loop
out
cmp
mov
bound
lret
mov
fs
xor
add
inc
jo
cmpl
out
subl
call
sub
xchg
fs
or
or
cli
out
mov
mov
pop
aad
sbbb
mov
sbb
data16
xor
inc
xlat
sbb
mov
jle
jg
sub
or
sbb
xor
gs
popf
rcl
cmp
mov
mov
push
sbb
mov
push
mov
sub
in
push
cli
xchg
jnp
add
jne
jl
inc
adc
lea
xor
push
xchg
lret
jg
sub
jae
xor
fldl
rolb
test
pop
adc
xor
repnz
out
push
test
dec
out
push
xchg
in
insl
pop
jnp
mov
xchg
stos
aaa
dec
roll
aas
adc
or
cs
subl
jge
gs
fistpl
cmp
sub
addr16
gs
bound
lret
mulb
bound
inc
sbb
rep
ja
cli
cmpb
lret
lods
and
inc
cmc
jnp
xor
sbb
push
cmp
push
xchg
or
sub
stos
lcall
push
out
mov
mov
iret
jne
scas
jns
pop
adc
ss
cmpsl
out
inc
lret
cwtl
pusha
and
fadd
pop
aam
push
sahf
push
jmp
push
push
aas
jg
aad
mov
or
cli
ret
pop
xchg
sub
dec
mov
lahf
push
mov
or
popf
pusha
xor
dec
je
jnp
dec
testb
lret
cmp
push
lock
mov
cs
dec
or
add
push
inc
cmp
aam
dec
std
cmc
inc
lret
xor
les
sarb
cld
mov
sti
sti
cwtl
adc
lock
nop
mov
pushf
lahf
in
shll
fsts
cmpsl
movsl
clc
movsb
std
out
mov
adc
std
addr16
in
lds
test
xchg
fisubrs
orl
add
push
jle
push
push
call
xchg
sub
das
pop
loopne
push
addl
mov
and
push
loope
sbbl
jge
xchg
scas
sti
push
push
push
imul
ret
and
sbb
pushf
mov
xchg
cmc
pop
insb
scas
push
mov
mov
stc
pop
jae
les
in
out
or
add
out
push
call
xchg
lret
mov
dec
insl
lret
inc
mov
jecxz
push
ss
dec
loop
push
pop
inc
inc
rcl
nop
fisttpl
sti
out
stc
mov
orb
repz
sub
nop
outsb
addr16
mov
loope
ret
fimuls
adc
nop
and
jb
and
test
lods
cmp
pop
mov
cmp
bound
jnp
cmp
pop
jle
push
fisttps
push
fucomp
push
jo
mov
add
stc
arpl
sarb
insb
mov
mov
hlt
test
lods
out
fs
push
int
mov
cs
imul
jne
jns
mov
jno
xchg
das
dec
fcmovbe
int3
dec
jo
notl
cmp
orb
stos
add
mov
loop
cmpsl
cmpsl
stos
sub
xchg
dec
xor
xlat
fdivs
je
stos
fsubs
add
iret
test
dec
fildll
jp
iret
loopne
in
xor
push
insl
push
gs
cmpsl
push
scas
test
lcall
int3
popf
pushf
jnp
fwait
mov
lcall
inc
rolb
xchg
xchg
push
fistpl
mov
push
push
inc
sub
movsl
fildl
je
daa
mov
arpl
add
inc
repz
dec
pop
add
popa
cmpsl
fcomp
out
or
cmc
stos
imul
fidivs
call
jb
cld
bnd
stos
xor
ret
out
insb
add
jo
xor
test
fdivp
jg
cmp
ljmp
adc
stos
mov
cmp
adc
jns
incl
outsl
loop
lods
mov
cmp
in
mov
lret
jg
jg
jne
rol
jnp
sbb
xor
push
pusha
repz
jl
rcl
inc
pop
daa
or
jno
inc
imul
roll
jns
int3
mov
lods
mov
cmp
loop
mov
icebp
movsl
call
jle
popf
jl
lcall
scas
ljmp
jge
sbb
das
cmp
pop
in
nop
add
push
icebp
pop
cmp
out
insl
mov
ja
ljmp
les
fcmovu
mov
std
cmp
xlat
or
fstl
jg
lods
push
adc
imul
mov
mov
pusha
push
imul
push
or
push
pushf
in
iret
cmpsb
sub
pusha
add
mov
mov
sub
negl
int3
adc
lock
pushf
lock
push
test
dec
mov
xor
and
imul
xorb
mov
mov
inc
int
sar
xchg
sbb
in
jbe
popf
popf
jae
andl
mov
pop
test
es
fstl
cmp
mov
push
xchg
and
pusha
clc
je
lret
push
out
jnp
les
js
fdivs
push
inc
mov
into
shr
outsl
mov
push
fwait
lods
xchg
pop
push
jge
xchg
mov
sub
adc
inc
call
div
fmul
popa
je
sub
leave
lock
xor
std
cltd
sbb
xor
mov
dec
repnz
leave
dec
fadds
adc
cmp
and
int
clc
les
pushf
sbb
jno
sub
jmp
and
lock
pop
aaa
jle
push
dec
jp
mov
mov
pusha
push
mov
stos
shll
mov
std
xlat
mov
lcall
inc
test
cmp
mov
mov
sub
ret
push
mov
lret
repz
xor
icebp
leave
add
rorb
pop
sub
es
into
mov
and
xchg
in
and
pop
rcrb
inc
mov
lods
push
cltd
xchg
rclb
inc
mov
dec
jmp
sbb
loop
test
sbbl
mov
mov
stos
stos
mov
ds
outsl
scas
lds
ljmp
adc
fiadds
dec
adc
mov
ja
jge
popa
add
clc
in
inc
fidivrl
pop
or
xor
aad
mov
xor
xorb
aad
or
mov
test
mov
mov
xor
lods
std
and
sbb
int3
sbb
cs
in
fisubrl
mov
aas
jb
inc
loopne
xor
in
mov
mulb
adc
jge
cmp
int3
clc
jge
push
jae
lods
je
or
enter
stos
fsubr
sti
xchg
pop
dec
lods
mov
cmpsb
xorl
pop
xchg
mov
jecxz
mov
xchg
mov
pop
mov
fsubl
sbb
fisubl
mov
imul
jno
gs
andb
jp
fwait
clc
subl
pop
andb
call
dec
and
pop
popa
mul
inc
nop
dec
mov
pop
inc
cmpsl
loop
mov
daa
faddl
shll
stos
rolb
push
dec
xchg
cltd
repnz
cmp
xchg
inc
inc
cmp
cmp
stos
xor
dec
mov
std
and
add
test
inc
sub
roll
nop
and
test
stc
hlt
dec
mov
outsb
mov
int3
pop
shlb
xor
push
pop
push
sbb
xchg
das
arpl
sub
dec
add
jmp
repnz
aaa
movsb
into
push
inc
mov
adc
jae,pt
dec
xlat
ret
pop
ds
mov
popa
sbb
in
sbb
adc
xchg
loopne
lds
cmpsl
aad
sub
lahf
rol
add
outsb
les
lahf
and
mov
sbb
and
inc
cli
lds
xchg
lods
cmc
inc
dec
cmpl
out
ret
cli
loopne
fsubp
shll
repnz
mov
out
movsb
lods
jge
repnz
fs
shrl
cmp
nop
stos
cld
int3
bound
fistps
sahf
pop
xor
adc
rolb
mov
push
xchg
xor
jb
rclb
xchg
jno
in
dec
fsubr
es
or
push
add
addr16
dec
jmp
push
inc
add
fs
lcall
cmp
xchg
inc
mov
push
xor
inc
and
shrl
jecxz
sub
pop
cmpsb
and
pop
add
popa
mov
fsubrl
add
jle
mov
inc
or
int3
sub
pushl
je
dec
ljmp
push
fsubs
out
sub
dec
inc
xchg
in
pop
sub
lock
push
clc
xlat
pop
mov
push
lds
pusha
sub
ljmp
fisubl
int3
mov
dec
mov
xor
mov
ja
clc
clc
test
aad
das
insb
add
in
xor
mov
pop
shrl
jg
test
iret
out
mov
xor
or
sub
insb
mov
adc
popa
pop
or
inc
fildl
shrl
outsl
rcr
dec
cmp
jmp
into
xchg
cld
icebp
sub
dec
add
lods
cmp
xchg
lods
push
cmp
jne
mov
jmp
sbb
jnp
clc
mov
pop
test
pusha
scas
jmp
push
mov
push
aam
jmp
jl
jg
xor
aam
test
lock
jg
push
push
xchg
dec
mov
test
pop
xlat
je
xchg
in
iret
call
hlt
movsb
cmovl
fmull
out
mov
cld
pusha
fcoms
mov
bnd
aas
xchg
xchg
jns
stc
push
adc
sbbl
lock
adc
sub
push
mov
dec
mov
mov
jbe
aam
push
dec
loopne
cli
adc
loop
ds
out
div
jnp,pn
aad
add
sub
inc
jnp
filds
repz
lea
pop
dec
scas
or
pop
lock
sub
das
lods
jp
cmovl
jo
cmpsl
cltd
int
jae
lods
je
mov
pop
push
or
orl
sub
mov
mov
add
sbbl
dec
sub
jmp
adc
dec
fimull
push
dec
pop
dec
sub
xchg
aaa
mov
daa
loop
rcll
pushf
cmpsb
cmc
or
jl
and
jg
mov
shll
or
xchg
loopne
out
cmp
aam
inc
mov
cwtl
pop
pusha
js
insl
dec
adc
adc
insb
scas
xor
int
dec
shlb
fdivrs
rorl
inc
repnz
add
pop
jne
inc
out
mov
jecxz
add
lock
outsl
int
test
dec
xchg
cmp
in
xor
xor
stc
dec
inc
sub
mov
jp
lods
add
imul
xchg
adc
jle
popa
inc
xor
pop
test
inc
ss
jmp
jmp
jg
pop
mov
mov
push
cli
fdivs
call
call
mov
and
jae
mov
push
das
lret
xchg
pop
mov
lret
cmp
pop
rcll
faddl
push
popa
xor
or
rcr
out
mov
les
dec
fnstcw
mov
lods
in
xchg
sub
push
imul
sbbb
cmp
pop
inc
loope,pn
iret
pop
ljmp
fstpl
push
fmull
imul
ja
arpl
insl
insl
fsubr
inc
imul
fcoms
in
nop
inc
loope
adc
add
jecxz
or
js
aad
lret
jl
fsubp
and
adc
jo
loope
mov
cmp
and
lods
xchg
mov
or
adc
stos
ss
stos
out
clc
fwait
mov
sbb
test
ljmp
mov
jnp
push
cmp
insb
ljmp
ret
cmp
loope
arpl
lods
lds
in
add
stos
loop
inc
mov
mov
jns
cmpsl
fmuls
mov
movsb
cmp
int3
sbb
fdivrs
push
pop
fcmovnu
xorb
or
or
xor
hlt
mov
scas
lret
push
ss
pop
outsl
aas
es
lods
or
mov
mov
push
int3
add
mov
adc
mov
jecxz
in
add
inc
push
or
arpl
sub
outsl
inc
mov
mov
stos
push
outsb
cmpsl
jp
xchg
cmovne
push
loope
inc
jno
jb
out
xchg
push
xlat
pop
stos
adc
cld
pop
test
push
aaa
jmp
sub
lock
ret
mov
subb
out
pop
pop
xorb
and
cmp
test
sub
pop
dec
shll
xchg
jecxz
negl
sbbb
dec
test
fsubl
xchg
jo
push
push
cli
mov
sbb
and
sbb
sahf
cmp
jns
jge
xchg
fiadds
test
pop
aad
loope
cld
mov
fisttpll
and
stos
push
ds
xchg
sub
je
push
inc
sub
popf
fsubrl
cmc
sub
inc
iret
imul
iret
or
int
pop
cmp
pop
or
gs
ss
cmpsb
data16
mov
xorl
insb
daa
adc
pushw
stos
insb
rorl
cmp
xchg
add
aaa
bound
xchg
test
mov
cli
mov
mov
pushf
adc
out
xchg
cmp
loop
mov
push
push
jmp
rcrb
push
mov
insl
cmp
cwtl
rclb
icebp
cmp
stc
mov
test
clc
aad
add
and
xchg
cwtl
inc
xor
sub
xor
aaa
cmp
cmpsb
cld
and
inc
add
ss
xchg
add
inc
dec
movb
inc
push
loope
mov
adc
stos
adc
xchg
mov
test
xchg
add
pop
cltd
and
jle
dec
sub
sarl
mov
pop
sub
xor
lret
mov
sub
dec
and
mov
outsl
push
nop
and
popa
sahf
das
jmp
je
addb
rcrl
xchg
sarl
xor
sub
mov
mov
test
out
mov
add
cmp
fdivrs
pusha
pop
xchg
cvtdq2ps
mov
mov
and
sbb
sub
mov
push
push
arpl
fdivrl
add
adc
adc
or
jns
pop
jns
lods
ficomps
mov
cmpsl
push
in
sub
shll
leave
push
push
mov
lret
cmc
sub
mov
xchg
int
xlat
add
adc
fistps
fdivl
adc
out
sub
je
sub
lret
xlat
jb
dec
sahf
lahf
mov
pop
xor
mov
movsb
mov
xchg
push
int3
aas
dec
and
mov
imul
inc
mov
les
not
shrl
lret
pop
outsl
mov
and
add
xor
test
pop
and
xchg
push
call
ds
or
cmp
insl
aaa
stos
or
jge
ljmp
jl
xchg
pop
aaa
sysret
mov
pop
aaa
test
stc
orb
cmc
or
roll
mov
sub
daa
xchg
movsl
pop
xor
bound
mov
dec
mov
or
fsts
cmc
and
push
pusha
dec
sub
aaa
pop
inc
jl
out
dec
mov
mov
das
jns
rcr
cld
lods
arpl
and
fistl
stos
inc
sub
stos
jmp
pop
mov
pop
insl
xchg
shlb
mov
jmp
or
loop
push
and
test
fcompl
push
fcmovnu
ljmp
push
add
jno
rcrb
pop
pop
xor
or
fcmove
adc
incl
inc
and
mov
push
xor
mov
add
mov
xchg
push
and
inc
sarl
in
shl
jnp
push
add
add
dec
mov
adc
mov
push
mov
enter
sbb
mov
cltd
loopne
cmpsl
sbb
mov
add
mov
scas
pop
pop
inc
or
add
fistl
mov
inc
arpl
xchg
push
sub
fisubrs
cwtl
jo
jmp
js
mov
inc
ja
or
or
or
popa
push
jmp
out
mov
sti
inc
add
jb
pop
arpl
lods
js
add
sbb
int3
arpl
into
jns
les
mov
repnz
adc
roll
outsl
pop
daa
ror
jmp
rcrl
movsb
gs
mov
xchg
or
mov
pop
and
xchg
push
add
jb
repz
jl
cld
jmp
xchg
inc
or
or
pop
daa
int
repz
pop
cmp
es
lcall
imul
mov
sub
cmp
das
loopne
dec
sbb
lods
ljmp
fidivrl
das
std
xchg
test
out
cmp
dec
xchg
add
dec
inc
out
iret
sub
jecxz
imul
iret
scas
pop
cli
and
adc
in
ret
out
dec
sti
mov
enter
divb
decb
insb
jns
or
and
adc
xor
ljmp
int3
out
sahf
pop
sahf
out
xchg
or
cmp
and
loope
lret
fnsave
push
mov
ja
aas
mov
xchg
mov
repnz
push
xor
push
or
jmp
dec
sub
push
sub
ficoml
pop
arpl
mov
jbe
pop
fcoms
out
push
push
out
mov
xchg
xor
xchg
xchg
mov
and
insb
repz
xchg
cmp
pop
xor
divl
cmp
pop
xchg
dec
adc
push
add
push
es
gs
mov
jae
inc
jp
loopne
and
inc
inc
shlb
lahf
mov
insl
fdivrs
sbb
das
or
cmc
sbb
mov
cmp
jns
les
dec
imul
xor
addr16
dec
cwtl
aam
insl
add
pop
cmpb
pusha
sbb
sbb
fildll
aaa
movsl
test
add
mov
outsl
sbb
nop
add
pusha
fwait
adc
push
hlt
loope
in
mov
inc
pop
mov
sbb
xor
fisubrs
adc
in
cmc
dec
push
in
xchg
shlb
cs
sahf
jg
in
inc
pop
int
mov
push
cmp
xchg
aam
addb
inc
pop
and
adc
mov
fwait
lds
inc
sbb
adc
fdivs
pushf
jbe
mov
fldl2t
int3
sbb
sbb
or
push
test
nop
imul
jecxz
mov
mov
xchg
cmpl
sahf
std
push
adc
out
mov
xchg
jge
jl
mov
xor
add
mov
adc
out
mov
sbb
movsl
lret
in
icebp
in
cs
sbb
in
out
iret
cmp
fstps
test
js
or
in
xor
scas
inc
std
adcb
sbb
sti
jp
pusha
ret
xchg
pushl
andb
arpl
inc
jnp
lret
and
inc
stc
xchg
test
shrb
pushf
enter
push
pop
negl
iret
fcoml
lahf
sub
pop
lea
lret
fwait
mov
adcb
cmp
cmpb
outsl
mov
cwtl
mov
adc
lret
mov
cld
xlat
popa
mov
cmp
inc
push
fstpl
sub
cwtl
stos
incb
data16
xchg
lods
js
and
jo
push
hlt
dec
cmp
and
pop
stc
cmpsl
jno
cmc
loopne
pop
jae
or
adc
push
iret
mov
jmp
cmp
inc
rcll
lret
add
cmpsl
or
enter
mov
inc
test
xor
iret
into
cmp
adc
rcrb
xor
xorl
xchg
clc
sarb
push
pop
jae
int3
cmp
add
push
inc
mov
into
outsl
mov
lret
inc
mov
mov
mov
cmp
lret
mov
std
adc
xchg
add
cmpsb
adc
sub
es
test
cmp
fists
rcll
shl
ds
push
and
cmpsl
jae
arpl
testb
scas
pop
inc
mov
fisttpll
fstpl
and
pop
ss
push
in
repz
dec
sbb
lahf
shrb
lret
push
gs
shrl
mov
arpl
cmc
aas
xchg
in
or
ret
js
push
repnz
mov
mov
lcall
cmp
cld
dec
popa
lea
mov
jg
cmp
loope
mov
add
xchg
mov
pop
inc
ja
aas
dec
sub
cmp
jbe
inc
mov
jle
cmp
and
fs
pop
in
pop
sub
and
repnz
mov
shll
jle
repz
loope
addb
mov
loopw
add
in
pop
pop
pop
jae
leave
mov
jge
aas
mov
test
les
dec
mov
cmp
mov
loope
movsl
movzbl
jo
push
aas
mov
cmp
cmp
stos
pop
lods
jb
push
sub
fwait
push
jne
inc
test
sbbl
icebp
addr16
mov
jns
test
jno
adc
adc
lds
pusha
sub
sub
in
rol
push
add
push
pusha
cli
out
mov
mov
mov
push
mov
cmp
dec
sbb
dec
jge
mov
or
cmp
loop
sub
int3
push
sbb
int3
mov
pop
lret
pop
push
add
shlb
pop
pop
ret
repnz
out
sbb
push
inc
ds
mov
xor
pop
xor
inc
mov
sub
cmc
ss
cmp
popf
or
cmp
cmp
push
icebp
jp
lock
stos
pop
enter
xor
mov
mov
mov
testb
mov
or
dec
repnz
scas
add
aaa
mov
cmc
jo
lods
mov
push
or
mov
cmp
les
inc
mov
outsb
pushf
or
sub
ljmp
and
sbb
loop
mov
ret
cli
push
lret
int
fdiv
push
ds
add
sub
sbb
sbb
cmp
push
fnsave
dec
mov
int
mov
iret
fcmovne
sub
push
pop
in
mov
mov
xor
hlt
fwait
sub
add
xchg
adc
lea
xchg
xchg
inc
dec
xchg
xor
cmpsl
mov
roll
mov
mov
xchg
cmpsl
stc
mov
adc
js
sub
sahf
test
test
nop
jae
imul
dec
loopne
inc
dec
mov
sub
sub
subl
adcb
imul
int
jg
les
add
mov
or
mov
std
inc
mov
rcrl
andb
pop
add
cmp
dec
jns
pop
adc
push
dec
lret
jo
lods
inc
mov
xchg
or
arpl
push
push
xchg
adc
push
inc
pop
popa
lcall
xlat
imul
xchg
pop
xchg
cmp
flds
stos
xor
and
insl
jae
test
cmp
jns
roll
sub
insl
push
cmp
xchg
fistps
cmp
fucomip
jne
sub
es
cmc
pop
mov
bound
mov
or
fwait
gs
cld
xchg
sbb
add
mov
xchg
shll
ret
mov
and
clc
push
or
sub
mov
dec
push
dec
aam
imul
sbb
and
fists
in
pop
push
addr16
insl
adc
imul
and
gs
es
fstp
inc
das
jns
pop
das
rorb
sbb
int
xchg
xor
jg
push
imull
xor
cmpsb
aad
pop
xlat
test
movsb
addr16
mov
into
fcoms
mov
icebp
lahf
pop
jnp
dec
in
sub
xor
pop
jne
mov
sbb
shll
jne,pn
dec
decl
jge
sarl
mov
lret
push
jp
arpl
jbe
scas
lea
mov
movsl
fs
mov
mov
jae
in
or
mov
add
mov
jnp
push
lds
xchg
ret
icebp
xor
popa
mov
lods
mov
ja
pop
shll
out
or
in
push
test
std
imull
pop
sub
inc
movsl
iret
cmc
movsl
jnp
add
xchg
loopne
push
mov
jno
pop
call
js
mov
mov
mov
lret
faddl
jne
sarb
arpl
sbb
icebp
dec
mov
xor
repnz
in
ja
mov
dec
cmp
sbb
xchg
lcall
imul
push
dec
mov
mov
mov
cmp
aam
jbe
jae
mov
movsb
cltd
out
dec
or
pop
mov
hlt
mov
dec
sbb
pop
cmpsb
or
lds
fdivr
fcoms
daa
mov
push
push
les
push
xor
jg
subb
cmc
jbe
lods
jge
pop
test
test
pop
fcmovne
scas
and
inc
jmp
clc
adc
lods
jae
sahf
xchg
dec
ret
mov
sub
aas
or
xchg
test
lds
jmp
lcall
ja
pop
out
add
fs
cmp
push
push
pop
data16
mov
adc
adc
xchg
cmp
adc
mov
lahf
and
pop
in
mov
push
jne
enter
xor
imul
mov
and
insl
inc
stos
mov
adc
shrl
and
cwtl
or
addr16
aad
dec
inc
jmp
sbb
cmp
push
in
mov
pop
cmc
jle
loope
outsl
cmp
arpl
out
mov
in
push
outsb
jmp
pop
inc
rcll
jge
pop
cmc
xchg
jae
into
or
mov
rclb
xchg
fisttpll
jnp
fdivs
daa
jnp,pt
push
cld
jne
inc
and
pop
mov
lret
fldt
fs
xchg
cld
fdivrl
movsb
enter
mov
sbb
jns
fadds
push
mov
movsb
faddp
rcrl
cmp
adcb
imul
lret
adc
sbb
add
iret
sub
pop
pushf
ds
insb
and
mov
fldcw
xchg
inc
xor
add
xchg
sbb
dec
sbb
sbb
aaa
jo
adc
ret
pusha
in
add
jge
push
push
data16
in
aaa
xor
xchg
jae
lcall
adcl
jb
mov
addr16
pop
push
loopne,pt
mov
lahf
cs
dec
inc
enter
adc
xchg
insb
mov
ss
enter
push
xor
push
adc
jecxz
mov
push
sti
xchg
sbb
pop
movsl
outsb
cmp
push
call
inc
dec
or
jmp
add
fwait
icebp
or
adc
jmp
xchg
bound
cltd
mov
mov
sub
ret
cmp
scas
jb
push
mov
arpl
adc
out
ss
pop
sti
fmuls
pop
ljmp
mov
xchg
loop
faddl
pop
int3
fsubl
daa
mov
xchg
adc
fsubs
mov
xor
sbb
jg
pop
xchg
xor
in
testb
mov
sub
movsl
lcall
or
ds
sub
xchg
sub
xor
jo
and
xor
inc
sti
loopne
mov
cltd
fnstenv
pop
ds
les
rorl
rolb
rolb
jne
or
subl
lods
test
inc
popa
cmp
xchg
push
dec
sahf
inc
adc
test
dec
call
inc
mov
js
fists
push
lret
sbb
adc
mov
xor
mov
out
stos
pop
cld
sbb
in
fmull
sbb
mov
out
pop
push
cmp
stc
loopne
jno
mov
pop
pop
pop
dec
shl
insl
dec
xor
mov
movsb
xor
mov
fldt
jae
scas
test
xchg
push
pop
cld
daa
xchg
iret
mov
or
dec
loop
xor
iret
lret
fisubrl
loop
jp
mov
ss
mov
pop
mov
imul
mov
mov
insl
jno
subb
jecxz
in
ret
mov
fs
mov
sbb
and
push
jne
lds
add
pop
dec
sbb
addr16
push
cmp
nop
adc
jb
fstps
ja
push
add
sub
or
jns
int3
inc
inc
scas
xor
aam
add
aaa
mov
std
cmp
stos
pop
cmp
xchg
mov
pop
cmc
repnz
jne
ret
sub
sub
loope
icebp
out
sub
dec
test
xor
mov
insl
push
test
and
dec
cmpsl
sub
mov
out
mov
out
loopne
xor
xchg
jp
xor
push
or
adc
mov
mov
loope
sahf
jb
dec
cs
dec
jbe
sbb
pop
mov
mov
test
inc
gs
out
loope
mov
pop
jge
cli
aas
mov
sub
jp
sbb
jmp
dec
cli
sti
and
pop
ret
jmp
data16
test
test
jecxz
jle
les
pop
stc
insl
addr16
jbe
mov
and
inc
ret
out
cld
ret
dec
xchg
pop
je
in
mov
jnp
adc
out
frstor
fsubl
ds
xchg
adc
mov
ret
test
data16
xlat
popf
sub
inc
jo
mov
mov
mov
bound
clc
fs
xor
push
pop
addr16
test
aas
bound
sbb
push
push
mov
mov
roll
cs
cmp
rolb
adc
sti
leave
stc
mov
cmpsb
jno
popa
sub
xchg
into
stos
dec
add
mov
leave
int
or
xchg
cs
push
push
push
insb
xchg
mov
stos
pusha
cmc
mov
mov
imul
cmc
arpl
sub
push
or
adc
aaa
lcall
in
xchg
and
inc
and
outsl
pushf
adc
int
sbb
xchg
ret
xor
adcb
push
dec
mov
leave
mov
cmp
mov
mov
ljmp
movsb
inc
rcll
ljmp
pushl
lret
mov
mov
and
adc
cmp
sub
imulb
pop
ljmp
sti
imul
pop
add
push
lret
adc
mov
aam
xor
sub
nop
pop
or
pop
and
sub
pop
adc
mov
push
pop
cs
shrb
test
in
ss
xchg
jle
jb
lods
iret
pop
jg
loopne
jl
movsl
gs
xor
rcll
sub
xchg
mov
mov
push
sub
adc
out
inc
lret
cmp
scas
mov
nop
adc
clc
and
pop
test
mov
ja
dec
sar
mov
mov
jmp
sub
fidivs
add
leave
lods
je
lcall
insl
mov
iret
repnz
js
sbb
faddl
popl
push
orb
and
sbb
lahf
push
jns
addl
pop
mov
inc
sub
push
cmc
jb
js
popf
dec
adc
xchg
xchg
sbb
shr
popa
stc
mov
jg
push
ds
mov
fimull
shl
adc
inc
repz
stos
out
xchg
mov
xchg
jl
jbe
notl
add
push
and
xchg
add
xorb
std
stos
xlat
cmc
fcoms
or
fwait
xlat
push
lds
jbe
sbb
jne
inc
fcoml
notl
jmp
inc
mov
mov
nop
or
xchg
push
fildll
cmpsb
iret
push
push
cltd
push
and
adc
jecxz
mov
cmp
pop
sbb
in
sub
push
xchg
jg
xor
ror
adc
dec
pop
bound
dec
shrl
push
mov
lea
push
sub
and
shl
or
inc
jl
add
mov
stc
insb
jge
cmc
push
and
sub
and
push
add
test
xor
mov
push
sbb
popf
add
inc
mov
push
mov
les
jg
cli
je
inc
scas
int3
daa
sbb
adc
or
leave
sarb
ret
mulb
js
insb
cltd
add
ret
cld
inc
daa
pop
lcall
inc
cmpsb
mov
lret
loope
jb
mov
add
rep
mov
dec
xlat
dec
mov
movsb
xor
xor
sbb
inc
mov
cmp
ror
inc
cs
dec
dec
test
test
or
push
push
or
dec
jae
dec
jno
movsb
sub
fisttpl
data16
or
xchg
fsub
lcall
cmp
mov
and
sbb
jbe
insb
ja
sbb
xchg
std
push
outsl
xor
out
or
or
lret
sub
call
stc
mov
inc
cli
test
insl
dec
mov
sbb
sahf
jmp
mov
xchg
das
loopne
fistl
inc
pop
mov
pushf
jp
inc
addl
fwait
dec
sahf
sti
adc
inc
jle
fstpl
mov
scas
cmp
xor
and
inc
imull
push
sbb
popf
movsb
lret
cltd
aad
gs
push
mov
xchg
and
cmp
mov
fisttpll
fisubrs
nop
xchg
shrb
or
and
fists
xlat
xchg
fcompl
mov
loopne
add
xor
mov
or
jge
add
lcall
push
fisttpll
dec
sarb
out
xor
push
pop
adc
in
xchg
lds
or
inc
pop
into
add
dec
icebp
sbb
cmpsb
lock
pop
pusha
jmp
xor
or
inc
imul
push
inc
mov
shrb
les
inc
mov
and
ds
xor
inc
cli
sti
sbb
add
dec
jecxz
push
and
inc
cmp
cmp
jp
loopne
divl
es
aam
xchg
daa
gs
xor
pop
outsl
push
pop
xlat
xchg
xchg
cli
dec
loope
push
js
push
jmp
bound
sub
ss
addl
pop
push
or
lcall
out
push
jnp
xor
or
fimull
and
fiaddl
jb
repnz
inc
push
mov
sbb
fadds
in
xchg
clc
dec
sti
adc
mov
jae
dec
ljmp
adc
and
mov
jno
cmp
leave
cmc
push
push
mov
outsb
dec
int
cld
jl
xchg
std
mov
ret
jp
or
fwait
iret
cs
inc
gs
inc
mov
pusha
lock
jg
cmp
lret
and
xchg
mov
adc
pop
push
cltd
push
movsb
inc
in
jge
lea
pop
mov
mov
jbe
into
mov
inc
hlt
add
adc
subb
fs
sbb
dec
dec
dec
ret
mov
and
dec
adc
pop
rolb
lods
jle
insb
sbb
inc
outsl
pop
lcall
fs
jnp
mov
xor
xor
pop
test
xchg
rcrl
xlat
cwtl
cmpsb
imul
imul
stos
in
mov
push
int
pop
xor
and
dec
jl
cmp
sbb
mov
mov
cmp
jle
orb
pmaxsw
mov
lahf
or
inc
xchg
test
sub
cmp
xchg
idivl
pop
adc
xchg
lret
test
daa
push
dec
xchg
out
sbb
out
addl
xor
inc
bound
push
lret
cmpl
call
add
mov
sub
xchg
or
and
shlb
iret
imul
popa
push
ret
mov
incl
mov
sbb
mov
leave
xchg
shr
jb
pusha
fldenv
jb
jne
aam
push
lea
mov
pop
add
mov
xor
clc
inc
scas
inc
push
jp
and
sbb
cmp
xor
and
jb
roll
int3
movsl
out
sub
sub
jp
repnz
xor
cltd
add
repz
ret
leave
mov
mov
pop
sahf
pop
leave
mov
pop
dec
sub
shrb
pop
leave
ds
xor
or
mov
test
and
push
mov
std
adc
push
sti
sti
push
lods
inc
outsb
inc
cmp
sub
cmp
cmpsl
adc
stos
ds
xchg
push
lock
mov
jg
in
fistpl
sub
xor
sub
mov
mov
or
mov
lret
inc
fldt
xor
jne
mov
xchg
sub
cmp
mov
xchg
fcomip
out
mov
dec
and
jge
scas
cltd
es
or
orl
jg
and
and
movsb
call
xor
pop
sbb
mov
and
pop
jno
loopne
xlat
cmp
int
and
adc
popf
ret
mov
push
push
ret
or
fisubrl
inc
or
shll
jge
mov
je
stc
outsb
testb
cmpsb
push
lods
dec
fwait
es
xchg
inc
cltd
fcoms
sahf
loopne
and
xchg
popf
shlb
ret
test
mov
movb
aas
xor
incl
pop
outsb
push
lods
and
cwtl
pushf
mov
inc
insl
mov
mov
mov
dec
xchg
ficoms
mov
push
sti
daa
movsl
push
iret
fadd
inc
iret
pop
jge
mov
outsb
xchg
pop
andb
cmp
mov
and
jecxz
fcmovnu
pop
jp
jae
mov
adc
sub
and
xor
cs
mov
idivl
in
iret
hlt
shll
imul
pop
mov
cmpl
sbb
cmpb
and
mov
and
sub
out
adc
stc
in
dec
fiaddl
and
into
push
mov
movsl
and
jo
fmuls
add
cmc
jns
loopne
xor
cld
divl
cli
fistpll
and
and
fimuls
nop
ss
cmp
call
data16
push
inc
les
jmp
jnp
mov
pop
xchg
pop
repnz
sbb
xor
scas
out
pop
into
ja,pn
adc
cmc
xchg
imul
rcr
fildl
sbb
std
inc
stc
mov
clc
sub
sti
flds
mov
mov
jnp
push
movl
push
notl
xor
push
enter
ss
xor
aaa
aad
fcom
scas
jg
cmpsl
lcall
outsb
cmc
decb
cmp
nop
dec
mov
adc
pop
std
mov
lret
mov
fnstcw
adc
iret
ljmp
push
out
xchg
lea
sarb
push
xor
iret
mov
sub
mov
icebp
pop
dec
dec
jo
or
negl
xchg
sub
cmp
cmp
adc
scas
pop
xchg
cmp
in
aas
sbb
sbb
xchg
insb
test
sub
mov
das
sbb
or
jb
enter
iret
jb
and
mov
pop
daa
movsl
aam
mov
push
das
cmp
inc
push
mov
jge
adc
scas
insl
cmp
mov
or
insl
or
fdivrp
dec
sahf
xor
ror
fidivrl
xchg
fadd
xor
and
jb
fsubs
mov
mov
fadds
push
sub
sahf
nop
fidivs
mov
pop
rclb
add
adc
icebp
mov
out
inc
cmp
sbb
push
sbb
sub
out
mov
lods
scas
adc
dec
xor
out
and
or
push
mov
and
push
jbe
and
xlat
and
fsubl
fwait
pop
push
mov
pop
sbb
cmp
adc
lea
mov
push
int3
in
jno
shr
addr16
les
sbb
add
xor
push
xchg
cmp
xor
inc
cmp
pop
jl
xor
add
adcb
sbb
push
add
insl
pop
push
pop
out
jmp
hlt
aaa
mov
cld
mov
add
or
mov
sahf
and
bswap
xchg
sbb
dec
imul
icebp
loop
dec
leave
imul
push
xor
mov
fnsave
js
xchg
andl
mov
sbb
lret
and
add
ret
out
js
dec
mov
mov
jns
or
add
jbe
xchg
jmp
push
adcb
pop
sbb
inc
lcall
sub
outsb
cmp
push
inc
or
xor
nop
push
data16
in
ds
std
xor
out
pop
sahf
xor
adc
mov
adc
or
mov
pop
inc
and
inc
mov
add
cmc
scas
fcmovnb
je
cmp
xor
test
imul
aaa
sub
adc
add
mov
insl
fcompp
aad
shrl
into
gs
jle
jne
push
in
insl
push
or
fimuls
in
sbb
jo
push
je
pop
sub
xlat
daa
adc
mov
mov
fisubs
adc
rolb
mov
mov
mov
je
cli
lret
std
mov
out
mov
lock
adc
inc
sbbb
pop
int
loop
lret
ljmp
sbb
insl
icebp
xchg
mov
sarl
jl
int
in
ret
xchg
cmp
pushf
mov
mov
lea
mov
dec
xor
les
dec
xor
mov
mov
inc
insb
int3
mov
add
add
neg
xor
push
ljmp
cmc
pop
lahf
xchg
mov
ss
mov
fdivrs
out
dec
push
jle
out
call
adc
ss
les
push
loopne
subl
sbb
xor
jb
xchg
mov
dec
add
cmp
cmp
sub
ficoms
cli
lds
nop
or
jno
push
xlat
orb
nop
cs
jecxz
outsb
xlat
cltd
jns
jp
or
fdivrl
or
add
mov
and
outsl
cwtl
popf
shrl
sahf
jbe
fcmovne
adc
and
fisubs
sub
push
sub
aam
int3
insl
mov
push
mov
in
jl
cmp
or
xchg
js
loop
adc
mov
jno
clc
std
aaa
fdivs
mov
lcall
jp
aaa
out
xorb
cs
xlat
sub
nop
mov
aaa
adcl
xchg
mov
dec
inc
and
jne
xchg
and
xor
push
cs
cmp
or
cmp
dec
insb
inc
dec
cld
push
les
movsb
dec
mov
insw
or
cwtl
aas
mov
mov
int
arpl
popf
addr16
aas
pusha
fidivs
sub
cmp
fcompl
repz
mov
and
aam
pop
mov
rcl
les
adc
mov
cmp
jge
cmp
or
sub
add
pop
and
ds
insb
pop
adcl
sbb
mov
stos
gs
cmp
and
jecxz
pop
lret
lret
ret
pop
inc
adc
cmpsl
xchg
xchg
lcall
dec
leave
out
pop
pop
fiaddl
cld
scas
cs
lahf
mov
loopne
std
adc
and
lods
stc
test
xchg
enter
sbb
in
jle
or
cltd
push
insb
push
rcr
inc
cwtl
sti
outsb
pop
movsb
repz
dec
xor
test
jecxz
mov
lret
add
fdivrs
rcrl
lea
adc
dec
fistpll
scas
and
mov
inc
mov
pop
dec
sahf
pop
xchg
mov
mov
scas
ds
mov
stos
dec
out
mov
imul
test
lea
imul
jg
push
pop
mov
lea
nop
or
sub
adcb
ds
pusha
inc
inc
ss
fmuls
mov
fldt
pop
push
outsl
mov
cmp
popa
lods
mov
adc
std
fsubrl
cmp
clc
test
or
nop
iret
mov
pop
mov
repnz
push
mov
mov
addl
jl
fs
mov
insb
lahf
and
xorb
pop
mov
loope
sub
xor
aas
add
dec
push
xchg
imull
xor
out
mov
das
pop
daa
jle
les
push
mov
data16
and
or
adc
mov
sbb
outsb
mov
mov
outsl
jg
je
mov
fadds
scas
sbb
adc
push
ror
fdivrs
jns
fcomps
fld
rorl
daa
dec
hlt
mov
pop
mov
aad
xor
mov
shll
rorl
jno
add
mov
sub
in
negl
mov
pop
and
push
out
cmp
rolb
or
in
ror
out
jae
out
or
jb
dec
mov
rorb
out
dec
or
insl
sbb
cmp
adc
popa
out
inc
clc
shrb
lahf
cmp
push
sbb
cmp
scas
mov
jnp
jle
mov
push
push
test
mov
jno
add
mov
push
push
fwait
mov
ds
enter
addr16
mov
clc
test
scas
les
mov
rcll
int
sahf
ss
pop
out
mov
and
pop
dec
inc
int
sbb
fwait
pop
sbb
in
push
lea
or
repnz
xor
shlb
and
xchg
ja
outsb
cmp
and
shlb
xorl
push
mov
cld
inc
paddusw
xor
jne
sarl
mov
jg
jo
cs
or
ljmp
cmpsl
sarb
sub
ret
sahf
fs
sbb
dec
mov
lds
lahf
jp
rcrl
bound
andl
add
sbb
mov
cmp
ja
fisttpl
hlt
pop
dec
mov
rorb
mov
popf
in
sbb
and
das
je
push
cltd
xchg
xor
clc
out
adc
call
xor
dec
dec
ret
sub
aad
inc
sub
xchg
xor
fimull
mov
inc
shrb
mov
dec
jno
fsubrl
out
call
jle
sub
out
mov
movsb
jge
aas
std
popa
and
nop
sbb
push
cmp
push
pop
and
sbb
lock
lods
xorl
pop
aad
cmpsb
xorb
push
mov
pop
mov
outsb
std
mov
xor
int3
mov
cmp
jbe
jbe
cmp
rorl
fwait
sub
test
lds
subb
mov
dec
push
push
mov
ret
addr16
mov
inc
fnsave
es
push
nop
popa
cmpsl
push
addr16
out
or
into
shll
jns
pandn
pop
or
inc
push
mov
cmp
mov
repz
push
cli
mov
or
dec
movsb
in
mov
mov
xor
in
imul
jb
std
aad
sub
adc
push
xor
adcb
cmpsb
sbb
popf
or
repnz
test
into
add
paddsb
pop
and
mov
mov
out
ret
enter
mov
js
out
fsubs
push
mov
xor
mov
xchg
cmp
mov
push
mov
dec
pop
nop
inc
popf
or
mov
pop
scas
add
js
filds
cli
jmp
imul
jle
in
add
jne
cmp
lds
mov
add
mov
pop
adc
dec
xchg
aam
repz
jle
lds
loope
sbb
sbb
mov
lcall
add
repz
movsb
xor
inc
aas
push
dec
imul
test
sahf
cmp
jp
mov
mov
or
xchg
or
das
or
setb
push
add
subl
inc
jne
cmp
mov
sub
mov
pop
sub
aad
rcrb
jo
lods
add
fs
sbb
inc
sbb
adc
movsl
adc
or
or
add
dec
je
imul
jg
testl
adc
or
xorb
inc
cmp
mov
or
bound
mov
or
push
adc
movsl
push
mov
fcmovnu
xchg
adc
fs
into
call
push
dec
mov
insb
xchg
push
sbb
cs
ds
push
rcll
push
adc
arpl
jae
xor
sub
lock
lods
int
inc
and
mov
or
hlt
inc
adc
mov
jnp
pop
pop
std
in
cmp
inc
jg
mov
shrl
test
aaa
push
stc
and
xlat
sbb
ret
add
xlat
leave
mov
mov
ficoms
lret
ret
mov
lods
incl
pop
inc
cwtd
mov
xlat
xchg
cld
flds
mov
lret
cltd
repnz
and
enter
push
hlt
cmp
imul
inc
and
repz
clc
in
inc
mov
dec
inc
mov
adc
daa
push
cli
push
xchg
iret
jne
cwtl
push
out
push
mov
lret
pop
in
xchg
push
js
push
or
cmpsl
inc
sbb
lcall
xlat
stos
add
xor
mov
mov
mov
xor
push
xlat
mov
ret
jg
mov
shlb
push
movsl
aaa
mov
imul
xlat
sbb
add
sbb
mov
fdivrl
mov
fcoms
jl
inc
out
loop
xchg
es
push
mov
sbb
in
add
mov
and
cmp
imull
jge
das
push
clc
mov
jae
or
data16
out
popf
hlt
aad
shll
out
sub
sub
lret
jecxz
into
inc
cld
sub
scas
call
push
cmp
addr16
mov
pop
xchg
sahf
and
and
inc
jo
and
in
insb
cmpsl
inc
jmp
outsl
in
push
ja
stos
jge
int
mov
push
jle
fs
and
push
in
in
add
cmp
std
inc
mov
jbe
pop
add
mov
mov
pop
push
insl
je
insl
add
les
mov
lods
cmp
push
xor
push
fwait
loop
ss
cs
aaa
mov
dec
out
out
data16
andl
mov
aaa
push
sub
les
mov
or
inc
repnz
movb
pop
movsl
aad
fs
jns
shll
xchg
aam
mov
fsubl
ficompl
jno
sbb
lods
push
ds
in
lcall
sbb
jo
fcmovnb
imul
mov
sahf
fsts
lds
fld
pop
dec
push
hlt
push
aas
das
loopne
xchg
jns
dec
dec
dec
sti
fs
sti
lods
test
loope
fisttpll
mov
out
mov
mov
xor
ret
icebp
jmp
xor
jp
int
mov
fsub
or
mov
sbb
xchg
mov
cmp
or
and
cld
jp
mov
mov
jp
inc
stos
jns
mov
cltd
mov
xchg
mov
jmp
in
scas
shlb
popf
sbb
scas
sti
test
and
lods
pop
je
ret
pop
xor
lods
je
mov
stc
pop
les
and
mov
pop
dec
out
mov
aaa
mov
repnz
sbb
pushf
lds
jne
xor
xor
pushl
lods
mov
movl
sarl
in
push
cmp
aad
pop
shlb
xor
pop
cs
xor
in
push
repz
fs
rclb
mov
add
inc
enter
or
and
aaa
xor
mov
loop
js
or
loop
ret
fiadds
pop
out
testb
cmpsb
dec
xor
iret
outsl
xchg
ss
sahf
fbstp
mov
xchg
adc
push
out
cs
addr16
pop
cmp
ret
pop
scas
scas
mov
mov
and
pop
incb
rcll
jge
add
sub
pop
outsl
dec
inc
or
xor
pop
or
pushf
push
mov
inc
int3
push
adc
mov
fisubrl
mov
sbb
and
rclb
in
mov
movzbl
cmp
enter
int
loope
hlt
gs
add
insl
insb
xor
nop
mov
test
insb
in
jge
adc
stos
adc
jne
iret
sti
ss
pop
mov
cli
loopne
shlb
cli
insl
bound
rcrb
leave
call
xchg
clc
jmp
and
adc
add
push
pop
arpl
dec
xchg
xchg
test
or
pop
outsl
xchg
sub
orl
xchg
les
jg
push
xchg
arpl
cmpsl
out
mov
bnd
in
xor
mov
xchg
push
ret
xor
pop
sbb
mov
aaa
sbbb
jp
pop
ljmp
cli
pop
push
mov
shr
sbb
sahf
imul
cmp
ret
mov
dec
mov
xchg
push
xchg
pop
jp
sub
cmp
jno
orb
nop
sbb
test
push
es
int3
jnp
push
mov
jle
aad
dec
mov
iret
push
mov
or
in
pop
clc
adc
and
sbb
xchg
push
push
dec
adc
hlt
dec
jae
outsl
test
out
ret
insl
sbb
push
shl
ret
pop
push
sub
jnp
lods
nop
pushf
mov
ds
call
loopne
mov
popa
jge
sbb
jl
mov
jecxz
iret
cmpsb
insb
pop
idivl
in
std
rcrl
pop
fcomps
jl
ret
pop
or
sbb
inc
jmp
int3
outsl
cmp
int
sub
cmpl
xchg
call
add
pushf
jmp
rorb
idivl
ljmp
dec
add
movsb
jecxz
xchg
xchg
xchg
xor
sbb
add
rcrl
cltd
inc
mov
ljmp
hlt
shlb
mov
out
mov
dec
jmp
je
push
jae
lahf
jp
dec
add
dec
ret
hlt
outsl
xor
ja
cli
fcom
cmpb
out
lret
jge
pusha
cmp
mov
outsb
xchg
fs
push
inc
bound
sbb
lret
ret
iret
sahf
mov
mov
arpl
jae
dec
add
subb
add
sub
sub
xchg
add
ja
push
mov
sub
inc
insl
adc
sub
adc
lds
cli
inc
imul
xchg
cli
adc
mov
cld
pusha
test
cltd
cmp
cmc
push
insb
test
jb
jnp
sbb
stos
jae
fucomp
fnstcw
sbb
into
add
jnp
jl
dec
add
stos
into
pop
loopne
adc
mov
or
addb
outsb
add
fldenv
push
adc
in
and
divb
mov
mov
sub
fidivl
loope
jge
out
das
stc
fwait
cwtl
cmp
iret
negb
add
out
sub
and
repz
lods
dec
fs
inc
movsb
sub
xchg
test
lret
jb
xor
in
arpl
cmp
push
inc
adc
pop
enter
dec
sub
or
xchg
int3
lods
mov
mov
mov
cwtl
je
fwait
jbe
das
daa
ficomps
inc
ds
mov
popf
mov
cmc
push
das
jmp
jbe
mov
sbb
xor
sub
sbbl
cmpsb
gs
mov
adc
add
xchg
cld
mov
shll
in
bound
out
pop
pop
inc
aas
test
xor
add
pusha
inc
int
int3
sbb
adc
xchg
cmp
clc
pop
ja
kunpckwd
jno
and
incb
loop
jne
mov
jno
and
push
mov
sahf
push
add
xchg
sub
xor
repz
mov
and
daa
fmuls
pop
push
dec
mov
insl
imul
adc
lahf
lea
xchg
jb
pushf
push
cwtl
push
shlb
sbb
dec
xchg
js
jo
call
es
clc
push
sbb
jb
aam
hlt
cmp
mov
fwait
jno
mov
jo
icebp
and
or
jns
push
mov
hlt
adcb
cmpl
les
xor
dec
xorb
lds
gs
imul
and
sbbb
inc
pop
ds
repnz
inc
inc
test
cld
test
mov
jle
or
push
push
and
lret
add
repnz
inc
in
cmp
sub
mov
call
fwait
jns
mov
mov
inc
and
pop
add
sbb
and
mov
insb
lods
dec
inc
sbb
stos
or
fistps
add
xchg
out
popa
call
into
orl
jns
sar
rcll
push
jo
out
mov
loope
aaa
jge
inc
and
test
push
xor
scas
mov
mov
and
xchg
push
xchg
xor
mov
adc
inc
mov
jbe
mov
add
jno
mov
test
int3
cld
sbb
dec
popf
adc
dec
or
mov
push
dec
scas
sbb
jp
push
das
repz
addr16
push
and
call
add
add
xor
addl
insl
and
and
cmp
inc
or
mov
movsb
movsb
add
shl
decb
and
movsl
fs
sub
and
push
cmpsl
mov
sub
push
mov
mov
xlat
xor
icebp
shll
sbb
mov
and
cmp
adc
cmp
inc
jecxz
addr16
mov
aaa
add
push
mov
aaa
adc
push
inc
dec
ficoml
fwait
mov
iret
xor
mov
push
adc
sub
mov
inc
gs
cmpsl
sub
and
dec
je
jo
orb
mov
cld
and
daa
ljmp
nop
mov
ss
lret
pushl
sub
lcall
xor
fimull
imul
pop
adc
rcrb
fidivs
fs
jno
cmp
shl
mov
mov
test
and
pop
dec
ror
dec
fstpl
mov
inc
mov
mov
ret
dec
jb
aam
subl
xor
call
xorb
mov
lahf
mov
mov
cld
pop
mov
out
in
loop
out
loop
rcr
lods
or
outsl
pop
pop
out
jl
inc
push
lcall
fcomps
xor
sbb
aaa
inc
fbstp
or
lret
mov
add
in
mov
popf
in
jo
xchg
and
jb
jg
nop
movsl
mul
jo
shll
outsb
pop
push
in
je
cwtl
out
stos
mov
out
xchg
rcrl
and
lods
cmp
push
in
mov
call
or
pop
sub
in
jp
test
jp
add
loop
mov
mov
cmp
jp
cs
jp
jae
dec
out
mov
push
test
xchg
mov
out
xchg
lods
cmp
sbb
outsl
and
or
sub
call
push
clc
test
pop
cltd
outsb
test
enter
cmpsb
enter
mov
aas
mov
adc
sahf
scas
cmp
lea
gs
jmp
add
mov
and
add
pop
inc
test
ja
cmc
add
adc
jbe
push
loopne
leave
test
int
ss
paddw
adcl
jecxz
lods
xchg
js
loope
mov
adc
outsl
dec
mov
cmp
ja
es
xchg
dec
pop
shrl
mov
add
pop
inc
xchg
mov
sub
inc
xchg
mov
mov
add
pop
filds
mov
sub
divl
sbb
mov
xchg
push
insb
pop
cmp
pop
xor
mov
mov
pop
add
test
adc
xchg
xor
inc
mov
and
inc
enter
cmp
inc
addb
lahf
mov
dec
mov
xchg
imul
test
mov
in
sbb
cmp
cmp
mov
mov
adc
mov
jae
dec
adc
sbb
mov
pop
and
outsl
xchg
inc
add
inc
jmp
sbb
imull
js
test
data16
jnp
test
jmp
loope
xchg
or
xchg
das
aaa
jle
sub
std
dec
pusha
dec
movsl
in
sar
lods
sbb
add
add
aam
insb
dec
rcrl
or
mov
bound
add
sahf
push
je
fdiv
jge
aam
dec
notb
inc
test
fadds
jl
stos
xor
adc
ret
nop
jb
mov
inc
xchg
aaa
sub
and
lock
mov
sahf
lods
icebp
dec
hlt
ret
sti
fists
xchg
xor
cmp
and
dec
xor
dec
scas
mov
dec
or
aam
sbbl
sub
lock
mov
out
or
mov
mov
lds
leave
cld
adc
xor
sbb
shll
jp
cmp
pusha
ljmp
mov
test
pop
ljmp
push
xlat
movsl
xchg
or
pop
fcoml
adc
pop
aad
shrb
pop
stc
sbb
adc
mov
pop
xchg
xchg
fnop
sub
sbb
or
pusha
scas
xor
mov
pop
arpl
jno
dec
push
sub
push
push
mov
push
pop
pushf
lea
aaa
xchg
cmp
sbb
fcoml
pushf
addr16
repz
imul
mov
aad
mov
call
ds
addr16
icebp
enter
cmp
cmp
popf
cltd
scas
cmpsb
adc
aas
inc
fld
xlat
es
adc
xorb
ljmp
adc
cmp
mov
ja
ret
or
out
jo
mov
popl
xchg
sbb
xchg
mov
dec
sbb
add
pop
sahf
nop
test
fnstenv
vpsrld
sti
dec
cmp
loop
fs
push
in
bnd
push
fldcw
or
pop
sub
cltd
stc
sbb
lahf
inc
sbb
jno
xchg
fistl
popa
test
dec
loop
addb
subl
push
leave
dec
lods
xchg
mov
adc
pop
mov
xchg
rcrl
dec
sbb
outsl
outsb
loope
pop
lock
xchg
les
fsubp
movsl
and
pop
les
scas
pop
daa
js
add
js
lods
sbb
jmp
out
jp
push
idivb
bound
dec
sbb
sub
sahf
add
fidivrs
add
dec
adc
sbb
xlat
fs
insb
xchg
sub
adc
loop
in
mov
pushf
call
or
je
pop
jne
mov
filds
mov
pop
sub
jp
inc
xchg
fistl
lods
or
cmp
cmp
push
xor
xchg
das
push
mov
frstor
xchg
gs
ret
cli
cltd
lea
jae
daa
mov
sub
add
mov
cld
pop
scas
sub
int
in
fmulp
cs
xchg
xchg
fdivrs
popa
mov
in
daa
push
jge
xor
aas
movsl
lds
mov
jmp
imul
out
mov
xor
adc
pop
dec
add
and
popa
add
bound
and
std
jmp
hlt
scas
adc
inc
inc
mov
jo
lret
pop
inc
rcrl
jbe
div
filds
dec
push
dec
fdivl
jmp
push
jmp
mov
xor
imulb
pushl
js
dec
mov
xchg
jne
shrb
repz
pop
push
xor
sbb
pop
fcompl
outsb
pop
jle
test
mov
lea
inc
jge
insb
inc
stc
out
out
push
shrl
and
cmp
mov
xchg
cmc
add
mov
scas
sbb
mov
sub
lock
ret
jmp
out
adc
adc
dec
push
jmp
jnp
loope
shl
xchg
push
push
adc
xchg
xchg
orb
jnp
test
mov
in
push
ja
dec
cmp
into
push
mov
in
test
jo
jnp
xor
dec
xor
push
lock
xchg
sub
and
jp
imul
movsb
cmp
push
sbb
pop
jl
js
mov
mov
repnz
loopne
push
sti
fnstcw
lahf
pushw
cltd
mov
jb
pop
push
pusha
xor
push
ficoml
sbb
mov
cmpsl
je
and
adc
addr16
inc
test
xchg
xor
jb
or
sbb
stc
inc
inc
out
or
rcl
sub
dec
out
idivb
xor
lock
sub
cld
dec
mov
xchg
imul
inc
cmp
cli
movsb
dec
movsl
push
fsub
std
aas
dec
cmpsl
scas
dec
add
std
test
dec
fildl
mov
movsb
and
ljmp
sub
imul
out
push
dec
enter
or
sbb
inc
adc
ret
adc
push
jns
cld
mov
int
lods
and
adc
mov
push
sti
xor
pop
mov
adc
and
jo
xor
xor
mov
rorb
mov
jo
mov
sbb
mov
divb
mov
es
in
sub
inc
repz
ja
aas
stos
clc
mov
cmc
movsl
jne
lods
sbb
ret
xchg
xchg
repz
icebp
jo
xor
nop
and
or
in
push
inc
dec
scas
ret
xchg
or
arpl
and
inc
add
movsb
or
test
lret
pushf
aad
test
lods
lahf
mov
adc
sub
ret
add
mov
arpl
or
sbb
or
pop
test
xchg
leave
adc
icebp
lahf
subb
mov
mov
int3
movsl
test
and
xor
dec
iret
inc
ret
test
aas
addl
shrb
movsl
xchg
push
and
addr16
mov
push
nop
inc
cmp
pop
stc
cmp
fildl
int
pushf
xlat
xchg
fmuls
cmpsb
repz
jnp
insl
pushw
adc
lcall
mov
sub
je
inc
pusha
lds
push
add
lods
cld
pop
and
push
jp
pop
mov
adc
cmp
mov
pop
out
jmp
pop
push
scas
aad
inc
xchg
xchg
movsb
push
add
fdivrp
ds
adc
and
xor
rep
and
mov
or
out
push
jne
xor
fcomi
out
mov
lods
nop
fsubr
push
scas
pop
or
clc
inc
imull
sub
mov
xchg
xchg
inc
lods
mov
imul
mov
mov
sub
mov
dec
lcall
and
insb
jnp
cltd
mov
fsubr
and
lahf
mov
insb
mov
test
arpl
mov
or
lea
rclb
aam
mov
sar
shlb
fsubs
xchg
xchg
into
ret
js
dec
push
imul
nop
or
into
add
lcall
out
jo
out
cli
xor
jge
mov
imul
add
pop
and
idivl
shrb
cli
mov
push
cmpsb
lahf
pop
pop
icebp
nop
adc
lods
movsl
dec
es
dec
and
push
out
dec
test
insl
add
mov
es
ret
add
leave
mov
fs
add
mov
add
xchg
sub
test
pop
sbb
dec
lods
imul
fs
mov
rorb
out
jae
ret
cld
fcompl
iret
sbb
mov
xchg
fnstsw
sbb
jle
cmpsl
ds
daa
adc
mov
or
pop
pop
cmpb
in
push
shr
cmp
jns
lea
out
jo
xor
mov
pop
subb
pop
addb
cmc
in
pop
xchg
into
stos
lahf
mov
aas
aas
imull
rclb
fdivrs
fnstenv
nop
cs
lock
out
sub
inc
test
or
xchg
mov
xor
cmp
xlat
out
and
lahf
xchg
cmp
movsl
xchg
test
jae
imulb
out
ret
fsts
scas
cmc
mov
out
or
out
sub
pop
mov
fistps
inc
mov
ss
adc
aaa
fldt
adc
imul
loop
mov
out
pop
xlat
inc
orl
xchg
xor
mov
rclb
and
dec
add
les
fadds
lret
sub
jp
js
or
fsub
or
add
fcoms
pop
das
jnp
add
into
lret
adc
adc
xchg
pop
pop
cs
push
dec
push
jae
leave
push
add
lods
or
sti
aas
jbe
icebp
inc
mov
arpl
cmc
rolb
lds
test
inc
fmuls
scas
addr16
adc
pusha
xor
pop
negb
shl
inc
inc
mov
sub
push
into
xchg
in
xor
mov
test
call
mov
ss
pop
cmp
adc
or
insb
ss
sbb
pop
and
xchg
push
adc
outsl
jnp
test
imul
xchg
mov
push
cltd
loop
jp
cs
add
pop
mov
sbb
or
ljmp
pop
mov
mov
sbb
jmp
xlat
ret
arpl
mov
mov
mov
cmp
sbb
xchg
cmp
jl
cmp
push
bound
push
ljmp
xchg
and
loopne
jb
add
xor
loope
pop
movsb
fwait
push
xchg
cli
rcll
es
sub
jmp
iret
mov
cmpsl
aas
mov
cmp
popw
cld
call
roll
int3
xchg
inc
dec
jne
arpl
fsubrl
test
xlat
fcomip
popl
insl
mov
mov
shl
dec
mov
pop
mov
mov
xchg
shll
pop
loopne
jl
lret
nop
adcb
mov
inc
pop
aaa
outsl
inc
ret
shll
mov
sbb
nop
mov
es
pop
adc
insb
into
lea
arpl
push
out
cmc
cmp
sub
out
inc
insl
shl
pop
aas
mov
das
ss
xchg
or
lods
or
fidivs
leave
sbbl
negb
out
cmp
test
scas
cli
add
mov
out
inc
jo
jge
cmp
sbb
icebp
movsb
js
inc
leave
adc
push
sbb
gs
out
gs
sub
inc
push
mov
sahf
hlt
xor
sbb
repz
pop
add
daa
clc
in
outsl
jnp
daa
adc
mov
sar
push
inc
in
std
mov
fwait
xchg
push
nop
xor
scas
loop
mov
inc
ljmp
call
lahf
xor
pop
xlat
icebp
push
pop
outsl
pushf
in
xchg
push
call
lods
sbb
pop
fcompl
mov
clc
fadds
leavew
jecxz
mov
outsb
push
lea
std
pop
mov
hlt
mov
add
add
fbstp
aas
push
lret
aam
stos
std
mulb
add
aaa
xchg
mov
dec
mov
cld
lea
dec
cmpsb
sub
cmpsl
push
call
test
sahf
push
les
xor
cmpsb
notb
pushf
repnz
push
repz
sbb
aam
adcb
iret
pop
hlt
gs
push
or
push
inc
out
dec
out
lea
rclb
nop
movsb
sbb
insb
cmp
xchg
push
bound
or
or
xchg
mov
mov
data16
push
sub
cld
inc
in
movsl
sbb
pop
pop
inc
sahf
sbb
insl
lea
dec
fstpt
or
aam
and
out
enter
loopne
lret
sbb
xor
fs
rorb
outsb
jle
bound
aam
dec
loopne
movsb
adcb
fidivl
add
arpl
inc
cwtl
sub
push
rolb
out
mov
xchg
pop
loopne
dec
mov
int
pop
dec
mov
popa
fs
out
add
lcall
shl
jbe
testb
iret
mov
push
add
mov
adc
jns
and
adc
sbb
dec
jle
bound
push
pushf
lcall
xchg
gs
flds
in
cmc
sub
xor
adc
out
ljmp
or
lods
cltd
lods
or
pop
xchg
and
pop
push
stc
ljmp
adc
fisttpl
mov
dec
ljmp
pop
push
pop
ret
pop
cmpsl
sub
ss
mov
mov
inc
mov
xor
insb
jp
daa
incl
sub
repz
negl
adc
xor
sub
inc
loope
xchg
or
jno
lods
or
and
cmc
or
fs
lret
xchg
test
aas
jbe
mov
mov
outsl
xor
sti
sahf
je
loope
adc
icebp
test
test
rcrb
std
add
jo
mov
adc
dec
or
dec
sub
or
sbb
loope
jno
pop
cmp
and
mov
push
popa
gs
insl
clc
in
mov
sbb
lods
std
ficoml
jmp
jb
xchg
jns
cmp
cmpsl
mov
mov
inc
mul
dec
mov
pop
cs
fwait
mov
and
sbb
out
es
hlt
push
sbb
jo
pop
xor
pop
mov
or
fiaddl
dec
invd
push
push
aam
dec
mov
dec
mov
jecxz
xchg
push
adc
flds
leave
addr16
mov
or
mov
push
or
test
jg
cmpsl
mov
sbb
flds
fdivl
out
sub
sti
movsb
int3
mov
cltd
jle
or
testb
mov
xchg
sub
or
inc
cmp
jmp
fimuls
xchg
nop
add
sahf
jl
or
sub
test
xor
loope
cli
or
out
adc
push
ja
inc
lods
in
mov
in
cmp
mov
adc
call
dec
rorl
test
ret
cwtl
in
xor
pop
insb
or
movsb
mov
mov
cwtl
jbe
jae
cmp
stc
lods
jg
jae
push
xchg
pushf
xor
add
incb
lcall
xor
sti
or
divl
inc
push
pusha
lock
rolb
outsb
shrl
push
mov
cmp
dec
xor
sub
jns
xchg
hlt
shlb
orb
fwait
jg
pushf
test
rclb
out
rorb
push
test
sti
and
dec
mov
test
insb
out
pushf
insl
xchg
pop
cmc
stos
js
movsl
cmpsb
sbb
inc
mov
or
ss
and
push
popf
int3
dec
fs
sbb
test
cmp
lds
popf
ljmp
repnz
stc
jno
xchg
mov
dec
arpl
xor
insb
pop
stos
xchg
or
xor
jns
popa
imul
movsl
push
mov
jbe
push
out
mov
call
popf
xlat
test
pop
idiv
jno
loopne
or
push
adc
cmp
mov
inc
stc
dec
ret
enter
dec
scas
imul
test
jbe
jmp
stc
and
lods
repnz
sub
adc
das
xchg
mov
add
xor
dec
push
scas
and
lock
iret
add
lods
mov
sbb
add
cmp
dec
imul
and
adc
adc
int3
inc
mov
stos
sbb
cmc
clc
mov
bound
ljmp
inc
xchg
mov
iret
mov
jb
insb
mov
xor
push
jbe
cmp
pop
adc
cmpsb
mov
inc
mov
loope
xchg
mov
dec
sub
jae
sbbl
adc
mov
sti
jecxz
sub
fmuls
notl
call
leave
fsubs
mov
dec
xorb
or
jne
xor
cmp
sub
mov
lds
std
mov
jl
loopne
imul
leave
insl
mov
sub
leave
test
mov
stos
sahf
and
mov
or
and
ret
icebp
sub
xchg
push
lds
mov
daa
ljmp
sti
repz
xor
dec
inc
xor
cmpsl
in
aad
jmp
outsl
push
jnp
lock
mov
jns
ljmp
sbb
outsb
fisttps
pop
es
or
xchg
repnz
pop
lods
push
addb
mov
cmp
and
push
in
sub
push
and
jae
sub
cmc
pop
mul
outsb
sbb
dec
std
outsb
lret
repnz
pop
test
mov
dec
cmp
dec
mov
adc
jo
mov
jae
adc
add
test
xchg
push
push
and
fidivrl
ficoms
inc
jecxz
or
sbb
inc
mov
mov
incb
std
jae
shll
out
mov
test
daa
add
mov
stos
adc
jecxz
lods
xlat
pushf
cmp
jae
dec
push
fdivrp
mov
inc
or
inc
mov
fidivrl
dec
mov
push
lret
ljmp
jo
out
lods
orb
jo
inc
mov
push
sub
icebp
and
js
push
das
xchg
inc
stos
fsub
push
or
or
mov
jmp
ss
mov
in
les
ss
xchg
mov
cmp
pop
lock
repz
in
mov
and
push
ljmp
push
jmp
and
stc
jne
inc
pop
jl
sub
sbb
jmp
or
adc
jl
xchg
or
or
inc
xor
jo
adc
inc
lods
int
lock
jns
dec
xor
cmp
fildl
mov
cli
aad
xor
ds
or
jmp
sbb
dec
xchg
adc
stos
out
jecxz
inc
and
cmc
or
rolb
addl
out
test
or
mov
adc
and
cmp
ja
lds
imul
sbb
stos
push
shlb
int
push
push
sbb
sub
sbb
pop
mov
dec
jne
jne
pmullw
in
das
div
movsb
dec
fdiv
dec
push
cwtl
push
adc
fcmovnu
loope
cmpl
pop
cli
int
mov
loopne
std
fsubs
ss
mov
popf
rclb
fnstcw
pop
mov
add
sti
bnd
push
lds
insb
mov
push
jl
cmc
sub
mov
out
sub
fisubrs
dec
mov
fidivs
repz
movsb
jmp
rolb
mov
xor
mov
or
dec
adc
loop
movsb
gs
jmp
addb
jne
mov
sti
mov
cmp
in
dec
cmp
xor
shr
jno
mov
pusha
mov
xchg
sbb
pop
pop
fdivrs
sbb
mov
sub
aaa
and
js
insl
movsb
out
xchg
popa
mov
pop
and
in
mov
pop
add
negb
daa
movsl
mov
fistps
sahf
ret
stos
cmp
ss
scas
xor
imul
adc
push
bound
inc
dec
nop
mov
cmc
xchg
xchg
xlat
pushf
stc
and
clc
xlat
adcb
push
das
cmpsb
and
sbb
into
jle
push
push
iret
adc
ret
inc
push
xor
push
sbb
stc
ficomps
pop
add
ret
insl
mov
subl
cli
dec
push
cwtl
scas
xchg
fsubrl
fs
push
dec
daa
stc
enter
jge
pop
mov
jo
mov
push
out
fisttpl
roll
pusha
dec
leave
out
or
mov
aas
adc
pushf
fucom
shlb
dec
add
decb
jb
lds
jecxz
pop
adc
test
jnp
gs
mov
stc
popf
jb
push
int3
out
insb
xor
mov
mov
xchg
mov
shll
jns
adc
out
fidivrl
mov
and
adc
stos
jns
jns
and
sub
and
dec
xchg
iret
loope
or
aad
clc
mov
jecxz
mov
in
fsubrl
test
mov
outsb
bound
repz
fwait
jae
out
lods
xchg
stos
lock
setns
xlat
in
in
mov
fistpl
or
xor
ljmp
inc
mov
lods
push
inc
mov
and
pusha
inc
adc
sahf
imul
movsl
pusha
lret
divl
std
std
idivb
pop
mov
mov
and
mov
jp
cmpsb
jmp
mov
or
popf
xchg
inc
ja
sbb
jae
add
sub
out
push
xor
cmp
dec
lock
jo
cli
inc
out
mov
jmp
pushl
mov
test
sub
out
divb
lret
cmp
and
data16
imull
jmp
push
mov
outsl
loope
adc
je
mov
inc
int
sahf
and
adc
ljmp
pop
add
or
lcall
mov
mov
add
xchg
or
outsl
xor
aam
sub
sbb
cs
sub
mov
adc
lcall
inc
add
xlat
inc
jns
lock
mov
sub
add
data16
aas
cs
sub
rcll
dec
sub
fxch
testb
lcall
stos
jle
jp
lcall
hlt
inc
push
imul
adc
fs
ja
adc
lahf
scas
mov
loop
stc
jns
fiadds
adc
push
imul
ljmp
rep
aaa
pop
lcall
push
sub
popf
xor
mov
inc
mov
mov
bound
dec
jae
subl
fidivrs
pop
jecxz
mov
ret
test
inc
in
mov
imulb
xor
and
in
push
sub
rcrb
xchg
cmp
insb
ljmp
das
mov
fadd
mov
lods
and
pop
test
mov
imul
fwait
mov
popf
jl
jo
pop
std
mov
cmpb
sahf
fwait
testl
stos
push
inc
dec
and
pop
pop
mov
and
fwait
push
jecxz
pop
outsb
fbld
jnp
and
ret
lds
add
mov
cmp
nop
mov
testb
loopne
push
leave
or
push
sbb
fimuls
fldenv
xor
cmp
xor
aas
mov
adc
jmp
fs
xchg
jnp
mov
adc
cmp
cwtl
adc
js
nop
fidivl
int3
add
sarl
dec
icebp
xchg
popa
out
pusha
mov
adc
lret
push
push
in
movsb
jecxz
lods
loope
dec
cmp
mov
xor
popf
ficomps
mov
add
mov
sbb
adc
repnz
imul
dec
xchg
xchg
xlat
mov
scas
mov
cmp
cmp
inc
mov
jge
enter
pop
in
nop
ret
insb
in
je
jno
ss
testb
out
fst
pop
xchg
cmp
stos
andb
sub
rcr
leave
or
fdivs
ret
pop
mov
or
add
in
mov
dec
xor
jp
mov
std
sbbb
stos
jg
or
push
xlat
push
push
jecxz
xchg
xchg
lds
fldl
and
std
or
mov
into
inc
int3
cmp
in
psubb
adc
add
add
aad
imul
jno
xchg
push
icebp
jbe
nop
inc
imul
and
pop
cli
fwait
movsb
fcoml
movsl
mov
cmp
shrb
rcrl
cmp
pop
rclb
sbb
dec
xchg
call
cltd
push
addr16
aas
xchg
test
aas
and
lea
jecxz
out
sub
sbb
popa
mov
aam
fidivl
inc
call
mov
nop
test
call
inc
loop
mov
push
mov
xlat
xchg
and
or
sti
iret
xchg
pop
je
int
pop
dec
push
mov
sub
mov
shl
outsl
mov
insl
mov
aam
insl
fdivrs
mov
fists
popf
push
ret
sbb
cld
movsb
push
clc
popf
decl
js
xchg
jns
pop
int3
out
lret
insb
sub
ljmp
inc
push
repnz
pop
jo
xchg
mov
xchg
xchg
loope
loopne
xchg
mov
ss
ja
fucomp
mov
outsb
fldt
jmp
sub
in
iret
add
int3
out
mov
in
fcmovu
push
cld
ljmp
andb
sub
pushl
rclb
sbb
int
fistpll
cli
mov
pop
or
adc
out
mov
mov
jmp
dec
nop
cmpsl
clc
fmul
jmp
jb
sub
adc
sarb
mov
push
scas
cmp
movsb
enter
fmul
cli
cmp
sbb
sub
push
mov
adc
and
adc
pusha
and
int
jbe
ljmp
jne
cmc
ljmp
pop
sub
in
cwtl
icebp
xor
add
adc
adc
xchg
jge
mov
or
cli
jecxz
ljmp
out
sbb
xor
xchg
jmp
inc
pusha
idivl
fcmovne
cmc
shlb
aaa
out
push
cltd
movsl
test
jmp
xchg
push
mov
push
pop
dec
pop
mov
xchg
mov
push
lods
lea
arpl
sbb
cmp
dec
mov
mov
xchg
lods
or
test
dec
pop
mov
das
mov
adcl
mov
adcb
sbb
in
pop
pop
or
scas
pop
sbb
pop
mov
and
subl
imulb
inc
pop
add
ret
mov
ret
cld
jl
les
or
xchg
lret
dec
cli
sbbb
mov
hlt
fwait
ja
movsl
fistl
push
mov
xchg
aad
mov
into
shr
in
aad
pop
sub
dec
popf
and
cmp
jo
jae
cmp
adc
stos
pop
daa
arpl
add
jecxz
adc
sub
and
add
hlt
xchg
jnp
cmp
rcrb
add
arpl
cmovo
jecxz
mov
rcrl
fsub
out
and
jmp
pop
or
aas
fisubrl
lock
sbb
sbb
test
lods
pop
sarl
cs
or
add
nop
test
push
adc
sbb
gs
cwtl
push
popf
nop
xor
leave
push
movb
lret
push
gs
leave
pop
add
pop
xor
adc
cltd
hlt
clc
sar
leave
daa
imul
stos
gs
out
icebp
sbbl
jb
cmp
and
lods
nop
nop
xchg
xchg
mov
aad
dec
stos
inc
sbb
mov
cmp
arpl
push
out
arpl
mov
enter
fwait
sub
mov
lret
and
jmp
ret
lds
popa
fbld
pop
mov
orb
or
fsub
jae
jmp
test
cmp
ror
stc
dec
ret
push
inc
inc
push
jo
or
push
mov
inc
repnz
cmpsb
stos
xchg
push
jg
test
push
loopne
outsl
mov
adc
outsl
repnz
push
jge
aam
jno
mov
daa
out
mov
inc
out
jne
adcb
mov
mov
lret
cmp
sub
mov
aam
cltd
and
push
mov
mov
add
cmp
or
pop
mov
mov
mov
ficomps
push
jge
and
push
in
addb
sub
int3
dec
pop
cld
test
cmp
mov
jne
je
pop
xchg
jecxz
push
rorl
push
xchg
dec
lods
dec
test
inc
loopne
test
cmpb
or
std
pop
aad
pop
mov
xlat
cmp
sub
je
arpl
dec
cmp
inc
cwtl
dec
je
and
das
adc
adc
cmpsl
mov
inc
adc
loopne
adc
jae
xchg
stos
and
lcall
pop
fldl
in
out
pop
add
jne
sarb
in
es
shrl
fimull
inc
data16
mov
push
xlat
lds
roll
ds
in
add
sub
adc
scas
inc
call
jae
mov
subb
mov
mov
mov
mov
push
mov
inc
pop
cld
xchg
cmc
add
repnz
fsubr
push
je
push
fs
adc
and
mov
pop
mov
sub
lcall
in
inc
stc
sbb
in
jmp
sarb
in
stos
push
xlat
ret
push
fcomip
insl
inc
xchg
leave
cli
mov
mov
shrl
outsb
inc
inc
push
aam
add
mov
push
mov
and
stos
mov
ss
push
adc
inc
lds
mov
sbb
es
lods
mov
xchg
lcall
pop
pop
popf
cs
pop
sub
pushf
inc
push
insl
sbb
js
adc
mov
dec
push
or
inc
sub
out
cmp
push
cmc
pop
add
or
cmpsl
int
sahf
pop
jecxz
mov
push
in
hlt
push
loop
int3
out
fs
jae
mov
and
and
adc
test
mov
cmp
push
mov
inc
lods
xor
aaa
int3
pop
es
mov
mov
xchg
scas
jecxz
mov
mov
push
gs
fwait
pop
sub
push
adc
leave
jo
or
xchg
dec
mov
fdivs
in
test
leave
fdiv
arpl
into
cmp
fdivrs
jae
dec
mov
cld
repnz
les
imul
jp
ret
into
repz
pop
inc
xchg
lea
jp
ficoms
mov
add
aad
stos
jecxz
fsts
adc
mov
or
jge
cmp
push
cli
cmp
push
inc
test
mov
arpl
mov
f2xm1
jnp
loop
mov
add
repz
out
xor
sub
add
sti
dec
mov
push
fwait
in
divl
in
test
mov
pop
popfw
push
adc
je
inc
xchg
in
hlt
aaa
pop
ds
ret
pusha
sub
xorb
cltd
xchg
dec
push
and
test
sbb
dec
pop
pop
lods
aad
insb
sbb
sbb
sbb
jl
mov
push
outsl
test
mov
and
lahf
mov
mov
push
test
xor
jle
push
add
pop
dec
mov
aam
pop
jg
push
addr16
mov
cwtl
xchg
dec
dec
and
push
iret
xchg
test
xchg
xchg
and
and
jbe
and
fsts
and
ja
es
xchg
sti
xchg
ss
add
mov
mov
xor
frstor
mov
lret
jge
add
and
mov
js
mov
inc
inc
andl
push
mov
jnp
pop
jbe
inc
sarl
dec
in
cwtl
jl
scas
ds
test
mov
or
sahf
pushf
push
and
xchg
sub
sbb
cli
inc
stc
sahf
xchg
inc
int
or
data16
cld
push
sub
inc
mov
xor
jl
je
es
xchg
push
lcall
or
pop
hlt
mov
out
mov
fldl
jb
cmp
push
pop
push
fiaddl
cltd
adc
xor
es
xlat
xor
xor
inc
call
out
xchg
jbe
cmp
push
and
lods
sub
xor
add
stc
or
icebp
das
jb
xor
xchg
cwtl
pop
cli
notb
sub
lods
call
jae
outsl
dec
xchg
and
and
pop
xchg
imul
loop
jmp
out
cmp
mov
mov
sbb
push
add
shrl
das
daa
mov
xchg
test
sbb
jae
fiadds
mov
cmpsb
out
or
inc
push
xor
lret
sarl
in
inc
jb
daa
popa
mov
aam
call
loope
or
add
push
mov
jb
pop
fmulp
dec
sub
mov
or
pop
aad
pop
mov
adc
mov
test
hlt
in
xchg
orl
pop
loope
cld
out
and
dec
or
push
mov
add
push
or
ficomps
adc
adc
mov
imul
or
orl
aad
xchg
xchg
ret
popa
dec
pop
iret
add
sarl
xor
cs
enter
test
int
insb
sbb
push
xlat
test
adc
mov
bound
hlt
lock
mov
ja
mov
cmpsl
aam
stos
fstpl
sub
enter
enter
lods
aaa
adc
repz
and
sbb
sbb
pop
movsl
mov
sub
clc
out
cs
aas
cmp
stc
aas
mov
fidivrs
cli
xchg
in
loopne
movsb
jmp
lods
imul
jp
jmp
pop
cmp
lahf
dec
inc
sub
jle
pop
mov
jmp
lds
jle
das
ja
or
push
fdivl
mov
inc
mov
addb
dec
loope
out
push
mov
lret
jle
pop
fwait
test
mov
out
and
push
popl
lret
mov
loope
push
dec
outsb
xchg
es
mov
mov
add
ja
orl
lret
xchg
xchg
mov
push
mov
jb
clc
testl
ja
mov
les
or
arpl
adc
popf
sbb
ss
iret
xor
sbb
xchg
cmc
mov
shll
push
lods
xchg
fsubs
out
push
insl
dec
mov
sub
cltd
push
mull
mov
jb
insl
cli
push
jp
rcll
shl
cli
mov
mov
xor
mov
mov
push
add
loopne
fwait
mov
out
push
inc
es
cmpsl
xchg
lods
mov
lock
cmpl
jg
jp
push
mov
jne
jl
and
and
xlat
cmp
aam
arpl
