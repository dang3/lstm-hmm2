push
call
ret
ret
jne
xchg
lods
loope
inc
xor
push
mov
dec
test
push
loop
insb
call
loope
xchg
fdivr
sub
mov
and
dec
dec
mov
inc
inc
mov
push
sbb
inc
mov
stc
jnp
mov
je
lret
cli
sbb
mov
out
loope
movsb
or
add
xlat
aaa
rcrb
lods
rol
daa
inc
clc
lea
fistl
mov
xlat
out
mov
cmpsl
cli
stc
mov
in
sub
cld
lcall
and
push
jge
inc
xor
and
or
into
jno
testb
aas
pop
fs
dec
movsb
pop
sub
jle
imul
mov
sub
xchg
aas
jns
mov
add
out
jne
hlt
enter
addr16
jle
push
mov
sub
dec
rcrl
lret
sbb
jl
hlt
shlb
mov
repz
cmp
icebp
jmp
movsb
add
int
xor
mov
push
or
inc
adc
sub
jnp
out
jno
divb
cld
lcall
lods
addr16
mov
add
mov
shlb
cmp
adc
subb
mov
out
data16
cld
push
lret
add
lds
dec
xorl
sbb
fs
mov
add
adc
mov
lcall
jp
add
divl
xchg
jbe
dec
sar
sbb
ret
jae
jle
js
jecxz
xchg
notl
outsl
dec
jae
cmp
mov
mov
push
jle
lret
mov
adc
jge
clc
cmp
lret
dec
jle
sub
inc
mov
pop
addb
xor
aas
dec
inc
insl
leave
mov
popf
sahf
mulb
mov
dec
pop
xchg
sub
xlat
sbb
sub
enter
adc
pop
in
add
cmp
push
add
xchg
mov
js
xchg
aad
sbb
sti
out
ret
subl
in
xchg
jne
mov
inc
xor
mov
mov
pop
insb
mov
push
jnp
pop
push
rorb
inc
pusha
push
fdivs
mov
divl
popa
cmp
sbb
ret
xchg
fsts
or
mov
xchg
xchg
xchg
and
lock
and
fdivs
dec
ret
aad
and
sahf
sub
jne
jne
mov
xchg
mov
pusha
int3
outsl
adc
fnstsw
mov
nop
xchg
push
ja
fndisi(8087
sbb
mov
cmpsb
inc
mov
rcll
add
sub
ljmp
int3
mov
sub
xchg
dec
xchg
addl
mov
loop
lahf
push
fwait
lret
loope
or
enter
inc
cltd
push
addl
xor
and
es
jmp
dec
add
loope
insl
sbbl
xchg
push
stos
sbb
in
lcall
rcll
inc
inc
sub
out
xchg
or
dec
mov
test
xor
leave
aas
jo
xchg
icebp
scas
mov
leave
lahf
push
mov
in
xchg
js
lock
shlb
sarl
shrb
lret
push
inc
jno
pop
fcmovnb
jecxz
add
push
xchg
mov
adc
mov
popf
outsb
hlt
add
mov
mov
stos
ds
scas
int3
jmp
mov
or
pop
roll
push
insl
dec
lock
fnsave
icebp
mov
insl
jmp
outsb
xchg
sub
lret
xchg
rclb
push
out
jo
rcl
inc
pop
shr
jmp
sub
lcall
jecxz
xor
stos
adc
subl
and
mov
xchg
mov
sbb
and
sub
popa
into
xchg
inc
and
mov
jg
cmpsb
inc
xchg
loope
shll
jge
add
inc
pop
mov
push
dec
in
xchg
jnp
fisttps
out
pushl
addb
lret
ss
xor
jg
out
mov
mov
or
inc
insl
cmovb
cmpb
out
mulb
jmp
lds
inc
and
xor
add
jne
stc
into
lcall
mov
and
push
ror
lods
xchg
mov
add
ficomps
inc
int
aad
dec
xchg
sbb
jmp
lahf
mov
movsl
push
or
mov
insl
fldcw
jmp
mov
out
or
mov
daa
cmp
test
cltd
mov
jmp
js
leave
xor
inc
xor
insb
sbb
loopne
rcrb
sti
mov
dec
cmp
and
push
das
mov
pop
mov
in
xor
je
call
cmp
testb
cld
lds
scas
sbb
insb
sbbb
stc
fnstsw
jo
xchg
inc
lock
and
rorb
pop
push
rolb
sub
fucomp
sub
push
jne,pn
into
pop
and
dec
decb
fiaddl
push
and
mov
dec
adc
lea
pop
scas
jb
cld
mov
mov
sbb
fyl2x
jl
mov
mov
out
ficompl
test
inc
jl
mov
push
add
mov
jae
lahf
enter
dec
pop
push
out
jecxz
cli
adc
pop
xchg
mov
pop
outsb
mov
pop
das
xor
sub
xchg
xchg
xchg
and
cwtl
pop
ds
mov
mov
xchg
mov
jg
movsl
mov
and
leave
ret
xchg
pop
mov
imul
adc
sub
pop
ror
mov
cmp
cmp
add
xor
ljmp
mov
and
lods
imul
lcall
pop
jae
cmp
insl
outsb
pop
daa
mov
sub
fstpt
fadds
clc
and
insb
or
push
lods
jg
ficoms
test
push
repnz
pusha
addr16
das
fxtract
jae
into
cmpsb
jle
push
lock
adc
stc
gs
divl
push
mov
leave
adc
mov
addl
out
and
inc
jne
and
aas
xor
testb
rol
sbb
cmp
cmp
sti
xorb
push
insb
shrb
sti
or
inc
jl
aaa
pop
add
xor
into
scas
rcrb
ret
mov
stos
mov
push
sti
fstps
test
inc
push
jae
hlt
neg
aad
push
pop
jo
push
add
pop
push
sub
lock
jge
sarb
or
jg
test
fcmovu
inc
or
and
cmp
cmp
dec
cmpsl
js
adc
xchg
xchg
icebp
repnz
inc
cmp
popf
mov
pop
stc
jl
dec
sbb
mov
fsub
ds
jg
inc
jae
inc
push
sbb
jmp
mov
dec
lret
dec
pop
in
jp
bound
test
cltd
fldl
lret
rcll
lcall
popf
or
xor
shll
mov
int3
mov
xorl
repz
sbb
push
dec
cmpb
pop
xor
dec
mov
mov
adc
xor
cmp
arpl
insl
jnp
mov
mov
push
or
jge
repz
cmp
sub
cmp
repz
mov
dec
sub
and
pushf
cmp
adc
inc
mov
inc
aad
cwtl
cmp
paddusb
sub
adc
push
pusha
pop
xchg
mov
jno
xor
jne
mov
test
adc
cmp
xlat
dec
add
lret
fidivrl
pop
xchg
mov
jno
mov
jge
mov
mov
fildll
cs
shrb
mov
negb
imull
int3
call
jg
mov
mov
into
fstl
movl
imul
hlt
imull
add
in
or
jb
mov
or
lods
movl
into
in
ja
ljmp
xor
jmp
mov
jae
enter
sar
test
pop
rcll
scas
mov
rorl
movsl
pop
sub
ja
xchg
xorb
push
bound
pop
push
in
and
mov
cmp
dec
cmp
jnp
filds
mov
pop
jge
sbb
out
lret
movsb
cwtl
jp
bound
sbb
xchg
cmp
mov
adc
adc
scas
incl
int
in
or
dec
outsb
dec
adc
push
push
or
mov
loope
shl
scas
sub
shll
mov
test
mov
add
push
ss
sub
mov
mov
cmp
test
aad
out
adc
repz
adc
inc
lds
inc
mov
in
repnz
enter
and
jecxz
lahf
and
repnz
mov
mov
lock
and
push
ficoml
hlt
mov
dec
inc
insl
test
lcall
out
shll
sub
call
in
test
cmp
xor
scas
cmc
xor
dec
dec
push
mov
sahf
bound
sarl
ja
sbb
gs
sahf
dec
jge
pop
cltd
scas
imul
pusha
mov
scas
test
int
sbb
add
test
jle
ds
xchg
xor
cmp
mov
dec
mov
test
loope
call
sub
leave
xchg
fstl
xor
sbb
sub
xor
fldt
push
sti
loop
mov
cmp
jno
sbb
lcall
cltd
mov
mov
push
mov
ret
in
sbb
cmp
add
push
push
js
mov
jle
ret
sbb
mov
in
ss
jb
sub
sbb
in
pop
ljmp
push
sarb
mov
mov
push
mov
sbb
pusha
fsubr
inc
xor
jge
in
jmp
mov
mov
out
dec
jmp
enter
data16
in
mov
popa
pop
sbb
lea
popa
dec
lea
pusha
inc
sbb
repz
cmpsl
sub
fsubl
pop
ficoms
cmpsb
mov
push
mov
mov
cli
dec
jle
xor
or
in
out
daa
dec
jecxz
xchg
data16
or
push
xchg
mov
and
push
xor
mov
jl
xchg
call
insl
dec
pop
jl
cmc
pop
dec
cmp
xchg
cmpsb
adc
jle
cmp
hlt
stos
xchg
push
pop
iret
int
imul
bound
test
jne
xchg
mov
stos
push
mov
pop
je
pusha
das
stc
inc
xor
imul
push
mov
xchg
inc
jbe
xchg
dec
outsl
movsb
shrl
xchg
inc
cmp
push
mov
sahf
xchg
jbe
adc
cmp
icebp
adc
mov
sbbl
mov
movsl
jnp
loopne
inc
mov
mov
add
icebp
es
fscale
hlt
ja
adc
fdivr
add
rclb
mov
vmptrld
fcmove
scas
sarb
fcmovnbe
or
iret
mov
mov
inc
jns
je
cmp
and
xchg
mov
xchg
fcom
sbb
iret
ret
sbb
mov
les
push
fwait
clc
into
dec
jg
xchg
pop
or
adc
push
es
sub
outsb
pop
jne
cmp
fmull
xor
lods
add
popf
mulb
or
leave
outsl
xchg
cmp
popa
dec
out
leave
inc
mov
adc
fmulp
mov
push
xchg
jle
testb
xor
fs
mov
rcll
mov
and
in
add
xchg
or
mov
mov
push
cwtl
xchg
xchg
mov
inc
cmp
pop
dec
or
in
xchg
cmp
sti
loopne
cmp
dec
mov
mov
shlb
jge
iret
and
pop
inc
fs
fdiv
je
and
shlb
xchg
push
mov
inc
shrb
fisubl
out
inc
icebp
movb
sub
sbb
xor
or
std
sbb
inc
ja
xor
sbb
cltd
inc
std
pop
xchg
stos
lahf
movsb
add
mov
jg
leave
jnp
push
add
and
inc
fisttps
pop
sarb
cmp
push
aaa
jecxz
mov
adc
ljmp
int3
insl
inc
adc
inc
sbb
jp
jns
dec
sbb
dec
add
loope
dec
popa
cmp
daa
mov
sub
push
push
fisttpll
int
jg
aaa
mov
sub
fnsave
fwait
or
inc
mov
out
dec
popf
push
dec
add
lea
rorb
daa
push
xchg
adc
pushf
iret
mov
adc
jecxz
mov
xor
cld
or
push
xchg
or
loope
les
loopne,pn
mov
fstps
sbb
jo
ja
mov
hlt
cs
pop
mov
sub
out
xor
pop
add
adc
jno
pop
or
ljmp
in
ret
push
jbe
mov
popa
stos
insl
out
je
and
dec
mov
int3
adc
xchg
sbb
jnp
repnz
repnz
shll
adc
fildll
inc
loop
pop
push
jae
jle
fs
sub
sub
outsb
add
xchg
mov
lahf
jl
cli
cmp
in
mov
mov
icebp
xchg
in
sub
sub
or
sahf
fistps
or
jmp
shrb
mov
imul
ds
xchg
ror
popa
mov
sbb
test
xchg
dec
outsb
push
fidivrl
pop
out
cmp
fdivl
je
fimuls
into
sub
insb
bound
lods
mov
xchg
std
push
pop
sbb
dec
loopne
adc
mov
cmp
mov
fnstenv
test
dec
mov
pop
or
mov
push
or
lcall
push
push
jp
jl
jb
lods
pop
sub
ljmp
xchg
dec
ja
xchg
xor
in
add
adc
sub
or
leave
sbb
push
mov
out
ljmp
jecxz
fistps
cmpsl
pop
icebp
inc
das
sbb
out
xrelease
or
add
pushl
xchg
bound
xchg
rcl
popa
popa
mov
fs
sbb
cli
lock
jae
and
pop
sbb
mov
sbb
cli
lret
leave
fcoml
or
mov
or
and
hlt
adcl
clc
pop
mov
mov
sub
mov
popf
cmc
push
mov
pop
jl
jne
test
jae
sbb
mov
out
fildl
mov
out
aam
mov
outsl
jne
mov
aam
sub
mov
lods
mov
loop
and
divb
jl
lret
insb
loope
sub
test
dec
xor
int
orb
mov
jbe
sub
stos
outsb
adc
inc
or
aaa
stc
push
mov
sub
cmpsl
mov
xor
add
push
mov
pop
ret
jecxz
icebp
mov
jecxz
cltd
xchg
das
rcl
xor
xchg
je
sub
sbb
cld
inc
xchg
aam
dec
ljmp
test
adc
bound
jl
outsb
ror
cmp
lods
sub
or
ds
repz
or
in
movsl
sbb
rolb
iret
push
je
fistl
push
std
fsubs
jmp
lock
cs
sub
hlt
test
setns
clc
adc
push
or
je
fdivl
outsl
push
cmp
mov
loopne
xchg
lret
jns
pop
loopne
sbb
mov
push
out
lea
loopne
movsl
mov
jp
pop
enter
mov
lcall
mov
mov
aaa
and
cmpsb
mov
or
jno
int3
xor
int3
adc
adc
push
lahf
daa
subl
xchg
jp
mov
bound
out
out
cli
jecxz
mov
stos
clc
adc
dec
fwait
daa
iret
adc
pop
in
mov
outsl
aas
hlt
cltd
mov
fisubs
mov
push
dec
mov
xchg
fadds
pop
jns
les
outsl
fadd
andb
aad
xor
pusha
scas
inc
pop
popa
adc
push
cmp
inc
movsb
je
jecxz
orb
in
addb
lock
pop
bound
lock
pop
inc
or
aad
mov
scas
dec
popa
pop
dec
mov
pusha
test
fcompl
push
pop
xor
icebp
dec
mov
xor
sbb
mov
pop
mov
adc
xorl
jns
stc
xchg
mov
aaa
test
mov
xchg
mov
icebp
cmc
xchg
rcl
out
rcll
pop
mov
subb
push
popa
cmpsl
xchg
xchg
addr16
scas
sub
mov
cli
mov
pop
dec
dec
mov
fnsave
xchg
xor
sbbl
lods
insb
lret
pop
shll
andl
mov
push
je
in
in
fwait
push
leave
clc
xchg
and
jbe
push
jge
pop
sub
out
outsb
cmp
lret
in
or
or
xchg
rcrl
xor
sbb
or
addr16
inc
insb
mov
sub
pop
das
fs
jg
movsl
xchg
cld
jne
jg
ss
lret
jle
mov
jno
add
inc
lret
insb
or
and
cwtl
jl
mov
btr
aad
inc
mov
pop
adc
aam
fisubrl
insl
pop
clc
lret
mov
xchg
lcall
mov
push
mov
fmuls
dec
mov
xor
das
adc
xchg
insb
lcall
fs
out
rolb
lods
sti
rcrl
jp
aam
data16
shll
add
gs
fisttps
fcomip
xchg
in
xchg
andb
dec
adc
repz
mov
push
aas
and
sub
pop
into
sbb
push
icebp
gs
mov
popf
jo
sbb
out
sub
mov
cmpsb
sbb
mov
add
push
inc
jnp
out
sbb
mov
sbb
mov
push
push
test
xor
mov
jecxz
add
jbe
scas
push
insb
dec
imul
push
pop
ljmp
icebp
sbb
cmp
push
std
jge
jb
jle
out
jnp
inc
ja
cli
pusha
jae
and
test
mov
cmp
lcall
insb
xor
dec
cmp
add
aad
ss
loope
in
jo
pusha
cld
popf
js
cmc
push
pop
incl
inc
std
jne
xchg
push
push
mov
inc
dec
or
push
sub
test
arpl
cmc
jno
mov
dec
aad
jecxz
cmp
test
pop
mov
dec
je
test
in
das
jle
int
push
pop
fiadds
push
jmp
pop
je
out
scas
cmp
jecxz
mov
pop
notb
addr16
jmp
mov
mov
push
ficomps
add
ja
idiv
mov
ficompl
loope
and
cmc
lock
data16
dec
test
shl
dec
aaa
lock
sub
cld
out
cli
pop
xlat
insb
lcall
mov
pop
dec
xor
jbe
fwait
movsb
or
fnstsw
jns
outsb
fcmovbe
and
shr
push
push
jle
push
sub
je
xlat
push
push
add
in
inc
je
in
push
shl
xchg
sub
sbb
popa
jl,pt
sti
aam
xor
push
lods
pusha
stos
xchg
ss
movsb
mov
and
mov
mov
inc
push
pop
ja
aaa
push
xchg
dec
popa
add
pusha
mov
xor
test
sbb
push
push
pop
roll
adc
mov
jg
adc
push
xorl
push
push
fstps
imul
pop
mov
ljmp
sbb
call
loopne
jl
sbb
pop
push
dec
lods
in
xchg
in
mov
cs
mov
push
adc
mov
pop
pusha
inc
push
sub
int
xchg
repnz
ljmp
in
shlb
dec
dec
adc
mov
cld
in
fstpl
and
mov
cmp
mov
gs
adc
dec
lret
popf
cmp
adcb
cmp
adc
out
xor
or
cmp
pop
adc
fisubrs
and
push
push
leave
jae
fwait
push
popf
mov
sub
pop
mov
gs
jp
xor
in
push
fcoml
inc
inc
inc
inc
stos
xchg
repnz
jg
pop
pop
test
adc
add
scas
mov
in
inc
fdivs
mov
jg
test
loope
jns
pop
sbb
jmp
and
sbb
fucom
ffreep
sub
dec
xchg
mov
jbe
dec
add
xchg
inc
and
or
jns
les
mov
clc
cmpsl
inc
pop
clc
xor
js
das
andb
push
cmpsb
movsl
roll
repz
and
xorl
push
or
xchg
pop
or
or
rcrl
dec
in
in
stos
test
and
test
xchg
mov
lcall
test
repnz
or
insl
pop
fnsave
test
dec
jge
pop
jnp
imul
loopne
xchg
mov
movsb
lahf
or
mov
nop
xor
clc
enter
decl
iret
ret
outsb
mov
dec
pop
jo
mov
xchg
cltd
sahf
pop
or
push
add
push
sub
mov
xor
in
scas
shl
xor
jbe
pushf
fwait
sarl
stos
pop
int3
mov
mov
xor
pop
and
je
imul
js
shll
bswap
rcl
daa
imul
sbb
lock
jle
mov
dec
cld
scas
sub
sti
lods
outsl
test
jnp
bound
and
ret
loopne
push
add
and
mov
dec
jbe
nop
dec
int
jge
mov
xchg
adc
jbe
icebp
lds
mov
adc
insl
inc
int
mov
mov
jno
filds
cld
jle
icebp
aam
or
es
incb
jmp
jne
add
mov
cmc
into
sbb
lods
jae
cmp
rcll
push
lret
insb
cmp
dec
imull
lret
fwait
cltd
pop
mov
outsb
cltd
aad
mov
test
xchg
stos
clc
decb
xchg
repnz
std
test
cmp
repnz
addr16
add
popf
stos
stos
push
add
or
addr16
push
mov
jle
outsl
pop
insl
out
sahf
test
adcb
jnp
shlb
xchg
test
fmull
sub
inc
subb
in
ss
nop
enter
ss
enter
or
xor
cmpsb
add
inc
popf
lret
mov
ljmp
out
cmc
out
cltd
or
fistpll
rcrl
mov
jbe
test
mov
adc
pusha
adc
pop
xchg
mov
mov
lds
push
cli
test
call
adc
imul
out
push
fisubrl
repnz
popa
in
mov
popf
jecxz
dec
ljmp
int3
jb
sub
ret
adc
jae
adc
push
pop
cmp
inc
pop
pop
data16
jmp
cwtl
pusha
ffreep
ret
bsr
xchg
movsb
dec
xchg
push
ljmp
jmp
add
int3
mov
sbb
lcall
js
jge
mov
inc
inc
in
jnp
movsb
mov
and
or
add
jl
dec
or
movlps
mov
add
mov
ret
inc
test
jae
mov
adc
movsl
mov
mov
xorl
mov
sarl
push
mov
sub
mov
xlat
push
xor
lret
inc
je
int3
dec
pop
lahf
xchg
jg,pt
sbb
inc
push
lret
lods
and
cwtl
mov
lods
lret
push
xchg
jns
test
pop
std
popa
out
popf
loopne
ret
fs
sub
jns
into
or
inc
mov
leave
lcall
and
popf
mov
sub
cwtl
xor
mov
pop
or
in
lahf
repnz
aam
adc
in
push
loope
call
movsb
mov
stos
cli
scas
jae
push
adc
xor
ret
pop
mov
lahf
daa
mov
ds
call
push
mov
or
xor
cwtl
test
mov
jmp
or
jae
pop
mov
sub
clc
lods
xchg
frstor
mov
add
mov
mov
xchg
mov
fldenv
daa
rorl
dec
dec
shll
lret
pushf
ret
or
push
mov
sbb
lret
inc
mov
jo
sbbb
dec
push
mov
fs
outsb
pop
fisubrl
mov
outsb
gs
or
ss
in
shr
push
push
cwtl
and
push
cltd
push
mov
loope
pop
sahf
lahf
es
pop
imull
in
xchg
mov
xor
jmp
sub
mov
mov
sub
jb
rclb
mov
push
dec
sbb
ret
inc
dec
jbe
fisubl
xor
scas
fs
fcoms
sub
xor
mov
enter
test
scas
out
fcoml
jg
or
sti
adc
mov
xchg
pop
jle
push
cmpsl
inc
xchg
mov
and
loopne
loope
sar
push
stos
fmuls
or
cmc
mov
jno
mov
add
and
add
rcll
ret
inc
or
test
dec
mov
dec
xor
mov
es
mov
iret
lock
aad
gs
push
cld
xchg
mov
imul
imul
fildll
loope
in
std
xor
cmc
shr
adcl
repnz
xor
aad
mov
pushf
pop
xlat
sbb
or
lcall
das
sbb
xor
hlt
loopne
js
mov
mov
sti
les
adc
mov
pop
xchg
inc
jl
adc
sahf
lcall
int3
dec
jle
sub
into
gs
jmp
dec
jle
inc
into
push
jg
mov
mov
into
rorb
popa
sub
push
shl
fdivl
in
fiadds
dec
fildll
pop
jl
adc
and
pop
inc
lcall
pop
push
lret
popa
rcr
shl
stos
sub
pop
aam
jg
mov
andl
popa
insl
adc
enter
mov
push
icebp
inc
insb
fstl
push
pop
push
lds
fistpl
lds
push
jb
pop
xchg
cmp
xchg
ret
jmp
scas
pushf
push
and
fdivs
ds
imul
push
xchg
insb
lea
inc
add
arpl
loop
pop
mov
sbb
cwtl
xchg
aam
adc
xor
inc
mov
push
cmp
xor
jo
mov
lcall
imul
jno
push
js
push
or
mov
movsl
and
sub
xchg
fcmovu
addb
call
sbb
out
cmp
ds
cmc
cmpl
sub
sub
cltd
push
push
jno
push
idivb
jle
loopne
jo
ret
add
pusha
adc
les
inc
pop
xchg
dec
push
sbbb
scas
push
pusha
pop
sti
fnstcw
mov
pusha
mov
mov
call
andl
pushf
cmc
nop
xor
repz
stos
cmp
dec
pop
pop
jbe
orb
imul
mov
xchg
jo
ds
pop
jbe
in
mov
mov
adc
mov
in
fidivl
jmp
cmpsl
popa
pop
dec
fldl
dec
inc
lock
stc
fcomp
dec
xchg
sbbl
jne
ror
pop
mov
sub
jns
pushf
mov
cmpb
jne
add
xlat
pop
mov
test
xchg
adc
lods
pop
mov
iret
arpl
loop
aam
test
mov
inc
fmuls
nop
jns
arpl
nop
xchg
and
pop
push
pusha
and
jecxz
add
or
mov
popa
and
dec
leave
mov
add
je
jecxz
lock
jbe
fidivl
push
cmp
pop
hlt
pop
push
gs
std
sub
testb
sub
jnp
push
xchg
push
subl
sbbb
fcmovnb
sub
xor
test
test
inc
add
jno
nop
sbb
inc
push
fdivs
mov
imul
movsb
inc
orl
xchg
lock
std
bound
sub
jo
and
ret
mov
xor
nop
rcrl
lcall
sub
leave
rol
xlat
push
shrl
les
into
stc
out
popfw
mov
shrb
adc
mov
mov
mov
inc
lods
lcall
addr16
push
lds
rolb
cmp
jp
mov
call
xorl
test
lahf
std
ljmp
dec
and
pop
lds
subl
fs
inc
dec
jp
les
inc
leave
pop
inc
inc
push
mov
sub
cli
jp
push
fcmovnb
cmp
lcall
dec
aam
mov
test
ja
adc
jno
push
push
ljmp
xor
sub
mov
aad
jb
outsl
and
pusha
jns
add
add
xchg
stc
fdivrs
sub
cli
sarl
add
fmull
clc
imul
lret
mov
ret
sub
test
popa
push
mov
rolb
loope
popa
add
cld
pop
or
inc
dec
fwait
add
pop
testl
adc
loop
xchg
mov
sub
cmp
clc
sub
xor
lret
pop
push
int
mov
shrb
push
mov
mov
pop
lock
daa
outsl
in
mov
jmp
inc
jno
mov
cli
stos
add
jae
xchg
cwtl
sub
testb
jp
adc
cmp
popa
incl
lds
dec
sti
test
fistpll
test
call
adc
iret
inc
shll
into
mov
test
jno
pop
xor
out
pop
mov
pop
push
or
sbb
cwtl
pop
xchg
jae
pop
pop
xorl
sbb
jns
mov
fbstp
add
inc
out
mov
rcrb
lods
mov
xchg
add
ds
sar
sbb
aam
int3
lret
dec
cmp
mov
std
iret
mov
adc
inc
or
xorb
xchg
fsub
out
orl
or
pop
testl
lahf
outsl
inc
outsb
adc
popa
pop
cmp
dec
jge
pop
dec
iret
outsb
mov
bound
gs
xchg
repz
jl
pop
fbstp
test
jae
mov
pop
shl
and
add
jmp
xchg
out
adc
fsubl
addr16
push
mov
cmc
in
sbb
pop
push
in
in
pop
push
clc
sbb
ret
lret
xor
adc
lea
stos
and
test
cmp
xchg
aam
push
call
shll
sub
int3
pusha
adc
add
sbb
rolb
scas
push
adc
lret
pop
fcomip
xchg
mov
dec
mov
adc
mov
sub
leave
sbb
pop
icebp
lods
or
add
mov
lock
adcb
jl
sbb
mov
dec
clc
out
mov
pop
sti
loopne
sub
fistl
minps
arpl
jge
adc
or
jg
and
push
jmp
add
push
xor
ss
adc
das
popf
test
pop
jbe
xchg
sbbl
jp
inc
add
add
inc
icebp
xor
adc
jo
fimuls
inc
jle
xor
aas
inc
or
out
leave
mov
jo
icebp
lock
push
mov
sub
fdivr
xchg
scas
leave
lahf
adc
mov
dec
adc
sahf
nop
dec
or
sarb
fcompl
xchg
lock
clc
inc
cmpsl
fcomip
adc
mov
or
xchg
movb
inc
lea
stos
dec
clc
cmp
jb
test
mov
mov
inc
mov
mov
hlt
mov
out
cmpl
cmpsb
xor
pop
adc
xor
jmp
mov
mov
jg
or
sbb
divb
and
pop
and
mov
add
push
pop
cmc
mov
arpl
out
xor
popf
enter
cmc
push
popa
mov
sbb
pop
mov
test
cmp
ret
jns
jmp
fstl
mov
in
insb
lock
xlat
add
jg
adcl
cwtl
push
test
stos
xchg
adc
or
add
loope
stos
mov
mov
push
mov
cs
jb
leave
sub
mov
mov
pop
jge
mov
mov
jle
or
pop
clc
shll
test
dec
in
rorb
mov
jp
pushf
mov
clc
mov
xor
mov
movsb
popf
jl
in
neg
sub
popa
push
mov
call
movsb
imul
pusha
add
sbb
push
cld
pop
fcoms
push
outsl
scas
mov
inc
xchg
lcall
cmp
test
loope
les
push
push
xchg
sbb
dec
cmpsl
mov
and
dec
push
test
pop
ret
jbe
or
push
fidivrl
jg
pop
popa
mov
scas
pop
data16
mov
mov
pop
sub
jae
xor
test
mov
cmpb
and
add
or
shr
adcl
fistpl
jecxz
stc
outsb
loope
pop
jecxz
fwait
mov
jnp
jo
push
ret
pusha
inc
ja
test
mov
xor
aam
repnz
cld
mov
cli
push
and
out
mov
aas
jp
mov
pop
and
ret
xchg
adc
add
mov
mov
mov
cmpb
cmp
out
add
mov
popa
ljmp
incl
jne
imul
push
js
addl
xchg
ss
cld
jg
xlat
aam
rcrb
fld
xchg
jae
inc
jg
repnz
std
push
adc
fs
mov
aas
cltd
mov
pop
imul
lock
sbb
push
xchg
sbb
js
aas
aam
fdivs
xchg
iret
aaa
cmp
loop
xchg
cmpsl
neg
aam
xchg
or
out
pop
outsl
adc
xor
cmc
imulb
push
xchg
adc
cmovp
add
cld
mov
out
or
fwait
and
cwtl
ja
sub
or
adc
cli
adc
pop
push
jl
arpl
fwait
dec
cmp
sbbb
outsb
bound
inc
or
or
cld
mov
pushf
mov
xchg
xorl
xchg
mov
ljmp
mov
icebp
xchg
pusha
xor
movsb
xor
mov
arpl
adc
cmp
inc
xchg
test
sbb
movb
fwait
rclb
cmp
pop
cli
loop
xor
mov
sti
inc
lods
add
ljmp
push
rorl
add
jmp
mov
adc
push
adc
lret
clc
stc
xchg
sub
pop
imul
or
xchg
jg
push
jbe
sarl
hlt
sub
jne
mov
mov
mov
or
xchg
or
push
jb
pop
roll
aas
cmpsb
sbb
or
ja
jl
mov
jb
sub
fisubl
and
jb
out
cmpsl
ljmp
mov
jle
xchg
push
dec
adc
add
mov
mov
in
mov
lret
push
jnp
cmp
mov
clc
fldl
out
push
jnp
add
xor
popa
sub
xor
xchg
or
lret
mov
and
cmc
rcrl
pop
xchg
jb
pop
inc
rclb
push
pop
popa
mov
inc
dec
test
fs
mov
cmpsl
xchg
call
mov
lods
xor
shl
in
lods
imul
out
stos
les
mov
cmp
mov
jae
xchg
cld
fdivs
std
loop
push
incl
popf
fisubrl
imul
testl
mov
jno
lods
lret
jne
push
and
xor
mov
pop
outsl
push
scas
mov
jne
fistpll
add
movsb
out
pop
repnz
rolb
dec
or
movsb
dec
push
inc
mov
fidivrl
and
adc
jno
fnstenv
pop
push
lods
loope
sbb
adc
jns
enter
adc
sub
push
repz
popf
xchg
in
jmp
pop
and
fwait
inc
and
lea
lret
dec
xor
inc
in
out
adc
in
ja
dec
cmc
call
and
mov
outsb
mov
xchg
dec
loope
insb
mov
jle
dec
negl
xchg
loop
and
cld
inc
imul
pop
add
push
pop
xchg
add
into
clc
inc
pop
push
mov
adc
lods
mov
xor
xlat
push
mov
dec
lods
lock
test
fildll
mov
test
ja
mov
dec
out
push
cli
sahf
jge
stos
mov
adc
inc
cmc
iret
bound
mov
fldl
cli
insl
sub
test
imull
add
sahf
add
dec
ss
jge
jge
sub
fcmovnu
cld
pop
inc
cmpsb
jle
in
pop
pop
arpl
cmp
repnz
pusha
mov
sbb
jo
jae
test
scas
push
test
in
push
inc
sbb
testl
stos
repz
sbb
fstpl
lcall
sbb
or
ja
inc
test
inc
cmp
add
jnp
fldcw
sarl
movsb
adc
int
in
xchg
xchg
shll
dec
push
sti
pop
sbb
insl
push
xchg
push
pop
shll
inc
jnp
fisubl
std
cmp
add
jbe
jl
jmp
arpl
and
lock
mov
out
je
lahf
inc
popf
push
pop
or
fs
in
or
test
sub
mov
push
xor
addr16
or
adc
or
lock
add
mov
sahf
das
in
lcall
sbb
push
cltd
repnz
pop
push
lret
add
stos
dec
inc
xorb
adcl
jg
nop
shll
mov
xchg
out
mov
pop
xchg
jmp
cmc
fstpl
pop
inc
mov
scas
cmc
mov
leave
aaa
jns
fmuls
pop
fmull
cmp
push
add
sub
rcll
sbb
xchg
rcrb
mov
inc
mov
loopne
push
movsb
inc
sub
dec
jnp
loopne
and
jp
or
cmpsb
mov
cmp
dec
pop
inc
mov
add
inc
xor
cmp
inc
push
loope
mov
lret
enter
sbb
mov
scas
popf
push
sahf
cmpsl
jbe
xchg
int
and
sbb
sti
sbb
pop
ficompl
jmp
test
repz
dec
push
xchg
les
cwtl
es
mov
and
push
or
out
sub
cmc
sub
in
pushf
testl
push
mov
imul
ss
dec
les
push
cmp
sub
dec
mov
imul
popf
add
mov
enter
add
aad
pop
push
and
pusha
sub
cs
push
in
daa
inc
xor
clc
insb
loop
mov
jge,pn
dec
cld
sarl
lcall
xchg
int3
adc
in
dec
mov
aas
sub
and
or
repz
xor
fmuls
sub
leave
sti
dec
cmpb
add
push
test
lahf
int
xchg
sub
push
xchg
inc
pop
pushf
call
fwait
sbb
or
rcrl
dec
mov
and
mov
lret
aam
aaa
rclb
pop
sbb
push
mov
mov
mov
mov
push
pop
repz
movsl
call
pop
pop
push
lock
mov
xor
and
ljmp
adc
jecxz
fcoms
repz
jbe
jbe
cmpsb
xchg
lahf
pop
xchg
pushf
cwtl
scas
cmp
push
fcomp
cmc
push
add
cwtl
mov
jp
aaa
add
pop
push
xchg
adc
or
lods
cmp
mov
fnstcw
ret
add
pop
imul
in
inc
jecxz
js
in
pop
dec
lock
or
out
mull
andl
sahf
sub
outsb
int
xchg
rolb
jns
mov
scas
cmp
stos
psrlw
inc
call
stc
int3
in
rcrb
add
mov
test
loope
pop
mov
fmuls
cld
sub
std
rcll
lea
test
movsb
inc
jbe
pop
cmpsl
mov
xchg
ret
mov
sbb
rolb
testl
push
dec
hlt
in
sub
loopne
add
mov
inc
adc
xchg
push
cmpb
mov
dec
jl
data16
sarl
fisubs
pop
aaa
loopne
lret
jg
insl
dec
subl
fdiv
jno
test
je
adc
repz
fs
cmc
mov
dec
jg
nop
fsubl
pop
shll
sub
pop
cmp
frstor
pop
mov
and
pop
movsl
stos
leave
push
sbb
imul
mov
xchg
in
insb
ja
fs
sahf
mov
test
push
push
adc
fldenv
fcompl
and
or
sub
popa
lcall
out
mov
and
mov
stc
rorb
ret
sub
xor
fisubs
jmp
adc
stos
mov
inc
clc
scas
in
lcall
mov
sub
adcl
mov
mov
pop
into
mov
mov
xor
push
fnsave
adc
cmp
xchg
leave
popf
cmp
ror
sbb
push
stc
xor
cmp
std
int
jb
scas
xor
xchg
and
insl
repz
je
daa
sbb
pop
loopne
jbe
loop
lea
mov
mov
hlt
nop
leave
cs
roll
xor
lods
out
mov
cmc
pop
and
sarb
sub
lcall
cmpsl
sub
inc
push
fs
xor
scas
lods
jmp
pop
add
popa
mov
xchg
dec
insl
lods
mov
fnstsw
gs
loope
aam
and
icebp
loop
out
loopne
loop
jle
xor
sub
mov
or
mov
mov
or
popa
pop
mov
adc
or
lea
pop
push
mov
rolb
pop
push
and
pop
inc
dec
repnz
ret
std
push
push
mov
imul
dec
inc
or
xchg
pushf
fucom
mov
jbe
xor
stos
clc
push
push
mov
or
sti
dec
fwait
cs
jmp
lcall
mov
pop
mov
into
adc
imul
mov
aam
ja
adc
lock
ror
inc
sbb
adc
adc
sub
or
jle
jl
shrb
lret
je
subb
jg
aam
lds
out
iret
test
int
clc
ds
cmp
sub
pop
inc
xor
in
xchg
jl
and
mov
mov
in
testl
or
xchg
push
jbe
data16
imul
cs
cmpsl
mov
mov
imul
add
lea
rorb
cltd
xchg
push
mov
and
or
xchg
lods
imul
addb
idiv
iret
lahf
sub
out
stos
lcall
in
into
dec
loope
popfw
leave
in
cmp
stc
cmp
push
out
pop
xlat
push
mov
daa
cmp
ds
push
jmp
dec
aas
cmp
dec
xor
xor
jns
subb
shrb
aas
mov
js
loopne
out
or
cs
xor
xor
insb
dec
mov
cld
pop
aaa
adc
or
mov
mulb
add
lds
push
test
jecxz
push
xor
icebp
call
movsl
fidivl
xor
leave
mov
pop
fcoml
inc
sbb
mov
jle
push
icebp
mov
out
sub
push
push
rcrb
popa
mov
into
mov
adc
or
xor
inc
movsl
sar
les
iret
xor
jae
out
dec
leave
aam
xchg
and
mov
fs
xor
inc
cmp
pop
lds
pop
xchg
mov
lds
pop
sarb
lock
fsts
and
std
xor
mov
icebp
xchg
cs
aas
add
ss
xchg
scas
and
mov
test
jp
scas
insl
dec
xchg
lock
xchg
movb
ja
or
cmc
jae
lea
xor
out
pop
mov
daa
les
pop
and
cltd
xchg
dec
dec
pop
pop
add
cmpsl
cmp
push
divl
dec
lods
jb
add
cmpsl
mov
std
nop
loopne
in
push
stc
out
movsl
adcl
push
scas
call
xchg
nop
int3
adc
fldcw
mov
sub
int3
and
push
push
jbe
cld
push
das
xchg
push
pop
fcomps
mov
mov
fidivrs
xor
cmpsl
mov
add
fiadds
cmp
outsl
stos
jbe
in
xchg
sbb
fidivrl
inc
lahf
xlat
dec
cmpsl
inc
mov
inc
bound
cmpsl
outsl
push
add
push
or
fcmovu
pop
and
or
lcall
ret
sbb
xorl
fisubs
cmp
or
push
jns
int3
fsubr
push
fmul
mov
or
in
mov
push
mov
inc
sti
dec
insb
xor
and
sbb
push
inc
jne
push
imul
je
jno
mov
mov
outsl
pop
outsl
or
bnd
fcompl
adc
xchg
and
scas
mov
lret
ds
and
movsl
cmp
mov
test
out
leave
inc
bnd
pop
push
lock
imul
icebp
frstor
rorb
aad
sti
xor
cmc
cmp
out
lret
ljmp
cmp
push
dec
lret
sbbb
sbb
in
jg
outsl
clc
rcl
mov
jnp
out
pushf
add
lods
cs
jmpw
ret
adc
jo
sbb
push
sub
lret
sub
jno
and
mov
pop
add
cs
adcb
stos
outsl
mov
mov
ja
jo
lods
cltd
xchg
push
pop
mov
adc
test
mov
int
scas
leave
ljmp
and
fsubl
ljmp
cmp
xor
ja
mov
and
sbb
inc
js
xchg
in
jge
inc
icebp
push
inc
mov
mov
fwait
mov
inc
rcll
or
sbb
jbe
and
jge
pop
jno
xor
gs
les
mov
fnsave
jecxz
xchg
xchg
pop
add
xchg
shrb
enter
or
mov
fisttps
shlb
mov
scas
scas
fadd
sub
mov
or
mov
mov
scas
sub
mov
mov
lods
pop
cltd
mov
fnsave
xor
adc
push
push
push
mov
pop
out
inc
mov
jecxz
cmp
mov
test
add
rcrb
aad
xor
adc
leave
cmp
call
jp
scas
mov
xor
jl
frstor
xor
pushf
xor
xor
cmpsb
adc
mov
mov
mov
sti
mov
sub
fs
xor
test
lods
and
mov
mov
sbb
sub
out
push
outsb
fwait
insb
sub
sbbb
test
repz
fnstsw
in
cli
fwait
addb
es
xchg
mov
dec
scas
push
test
jmp
jmp
inc
push
cmc
push
xchg
xor
daa
pop
cmp
data16
ret
testb
xchg
mov
out
pop
fwait
mov
in
cmpl
push
movsb
xor
hlt
pop
and
adc
cmp
out
sub
mov
pop
sbb
insb
pop
into
ljmp
rcrl
roll
ljmp
in
inc
outsb
cmpsb
cmp
mov
insl
jmp
xchg
pop
imul
mov
dec
icebp
jnp
lcall
lcall
mov
inc
or
sbb
adc
jb
mov
pop
sub
jns
jae
xor
and
jnp
mov
mov
and
les
mov
into
rorb
rorl
xor
cmpsw
idivb
jns
das
dec
dec
mov
dec
loop
add
xlat
mov
xor
jmp
xchg
dec
gs
fists
call
jmp
arpl
jbe
iret
dec
repnz
xor
bound
push
adc
icebp
mov
sbb
test
push
das
inc
dec
push
cmp
pop
sbb
add
stos
or
ja
jp
sub
mov
jg
stos
sarb
cltd
push
into
icebp
xor
jno
add
movsb
stc
lods
sbb
out
mov
sub
fdivs
sub
adc
xor
into
je
mov
into
dec
push
dec
iret
nop
jbe
sub
lock
dec
xlat
out
insb
push
lods
push
pusha
jp
out
jo
mov
jnp
ret
std
push
xor
cwtl
mov
shlb
adc
jno
sbb
fcmovnu
outsb
arpl
xorl
insl
ret
scas
xchg
push
jecxz
sbb
test
popf
mov
sar
pushf
ds
push
pop
mov
push
fsubs
xchg
push
icebp
aaa
push
int
insb
out
mov
mov
mov
cltd
and
jb
daa
jb
or
imul
es
je
dec
lods
out
pop
shll
iret
mov
adc
or
and
push
les
adc
mov
inc
test
xchg
pop
sbb
cli
hlt
ds
lods
outsb
xor
mov
add
xchg
shl
imul
push
push
in
sbb
ret
cwtl
add
shrb
add
mov
movl
lret
adc
scas
enter
push
adcl
add
xlat
mov
mov
pop
inc
mov
pop
pushf
rolb
xchg
lahf
sbb
movsb
int
jo
add
cmp
and
mov
or
fbld
rcll
cmp
pop
insl
popa
jae
jb
jp
jo
cmp
and
dec
fistpl
fdivl
outsl
inc
mov
sti
dec
fbstp
ljmp
aad
les
ja
push
addr16
or
sbb
aad
inc
xchg
into
insb
xor
sub
cmp
and
jno
ret
rcl
cmp
mov
rcrl
aas
shrb
outsl
mov
nop
xchg
fwait
dec
mov
sub
test
inc
jne
mov
cmp
jne
jp
into
test
xchg
pop
insl
cwtl
xchg
lds
aas
imul
cmp
add
xor
cmpl
or
in
mov
xor
in
jmp
fwait
arpl
fbstp
test
mov
sbb
cltd
cwtl
push
add
aaa
adc
jge
gs
sub
push
mov
daa
addb
xor
rorl
or
pop
dec
imul
mov
mov
xchg
mov
stos
dec
outsl
push
sahf
int
lret
pop
dec
ss
rolb
aad
fadd
xchg
loopne,pt
popa
xchg
enter
xchg
sub
icebp
or
jnp
push
lock
ss
adc
jmp
or
xor
pop
push
inc
loopne
push
sub
and
mov
xchg
loope
or
pop
sbb
dec
pop
pushf
je
cmc
mov
fstpl
jmp
xchg
icebp
mov
xor
mulb
adc
xchg
xchg
inc
mov
sbb
push
notl
xchg
mov
sub
in
mov
cmp
xchg
sbb
bound
sub
or
add
mov
arpl
lock
xor
mov
fldenv
xor
xchg
loope
push
pop
pop
push
inc
in
popa
dec
out
arpl
xchg
pop
cmpsb
pop
test
ss
lock
fwait
pop
lret
dec
fldcw
in
imul
adc
and
mov
xchg
pusha
out
decb
or
add
push
sarb
push
or
jmp
fldt
jae
adc
scas
inc
sub
push
dec
dec
out
mov
pop
mov
sub
aad
test
jbe
mov
test
mov
cmp
pop
lock
push
adc
mov
sbb
mov
mov
test
rcll
and
sbb
or
roll
dec
flds
movzbl
xor
push
test
add
jo
jge
mov
ret
bound
add
pop
jbe
mov
inc
push
iret
sub
std
dec
out
das
in
cld
jg
mov
dec
mov
stos
add
add
adc
sub
insl
or
sub
nop
movsb
cs
adc
pop
test
inc
mov
cmp
enter
push
push
mov
xor
xlat
lea
data16
push
mov
push
gs
fcmovnu
mov
add
add
orl
xchg
out
or
cwtl
push
xor
and
aas
inc
insb
dec
adc
and
loop
dec
xchg
xchg
or
jnp
mov
adc
and
push
cmp
mov
pop
leave
pop
cmp
dec
roll
ljmp
sahf
inc
pop
xor
sbbl
inc
out
cmp
lret
cmpsb
mov
imull
jp
imul
push
sbb
jg
sub
cmp
cltd
fs
std
or
push
cmp
cs
divl
ljmp
add
daa
hlt
sbb
mov
inc
pop
inc
sbb
cmp
inc
mov
xchg
push
fadds
xor
loope
xor
into
bound
jl
and
cmc
mov
adc
in
push
fwait
shl
and
xchg
and
fbld
out
dec
add
mov
lock
les
insb
xchg
xor
push
aad
pusha
into
xor
icebp
cs
loopne
add
jle
jbe
je
cmp
and
imulb
hlt
pusha
data16
inc
andl
sahf
mov
int
sbbl
test
push
inc
mov
adc
sbb
xor
test
fs
pop
cs
cmpsb
add
and
sbb
push
jno
movsl
sbbl
popa
lea
insb
xlat
mov
and
insb
aad
adc
outsl
jge
jmp
enter
pop
sbb
adc
pop
daa
test
outsb
psubd
xor
popf
dec
mov
xor
mov
fstps
aam
xor
or
rorl
xor
or
xchg
dec
lock
in
lea
xor
es
lcall
push
out
and
in
xchg
insl
fistpll
sub
jl
add
mov
scas
daa
adc
addr16
fdivs
push
push
in
rcr
pop
jge
fs
dec
imul
inc
cwtl
data16
dec
jne
loope
unpcklps
and
shlb
pop
test
jg
mov
das
mov
cli
jns
rcr
push
mov
or
std
repz
pop
pop
jno
jns
mov
add
jnp
mov
cmpsb
xor
inc
les
mov
push
adc
in
in
mov
xorl
cmpb
adc
shll
ja
cmc
aad
imul
push
popf
jnp
or
cs
push
xor
test
inc
mov
loopne
loopne
or
xchg
fisttps
inc
or
fnstcw
dec
ljmp
cld
sbb
test
push
fsts
dec
xchg
adc
sti
mov
lret
sbb
mov
out
fcoms
icebp
rcrl
pop
movsb
mov
dec
and
repz
push
add
jle
sti
jnp
mov
adc
cmp
mov
loopne
cmpsl
mov
push
xchg
dec
mov
inc
ds
outsb
arpl
mov
mov
imul
int3
push
or
fisubrs
pushf
fs
int
leave
shl
or
sbb
mov
cmovp
mov
and
or
ljmp
mulb
stos
test
xchg
pop
test
mov
add
rol
cs
loop
incb
jmp
jae
shll
sub
push
hlt
rcrb
lahf
imulb
into
xchg
push
jp
jns
cmp
sub
pop
test
cmp
test
sbb
ret
add
frstor
pushf
mov
and
cmp
xchg
push
add
add
cs
jl
out
jp
daa
sti
cmpsl
jg
and
arpl
hlt
mov
mov
sbb
stos
xor
cmpsb
lods
pop
push
imul
hlt
inc
xchg
nop
out
push
leave
or
test
sub
aas
pop
push
adc
lcall
rcrl
out
cmp
mov
jne
pop
pop
or
out
dec
enter
in
negl
cmp
xchg
xlat
jns
lcall
int
icebp
and
mov
push
adc
scas
and
gs
mov
xchg
insl
lret
js
ja
notl
into
mov
dec
or
fmull
xchg
jnp
inc
push
std
fcmovne
mov
jmp
and
and
mov
ret
ret
pop
cld
jmp
mov
jl
mov
std
mov
jbe
loopne
or
add
and
mov
arpl
add
jbe
addb
inc
mov
sub
lods
int3
enter
mov
hlt
cmp
mov
inc
inc
fwait
add
lods
inc
in
mov
lsl
push
xchg
inc
pop
xor
sub
xor
arpl
sbbb
xchg
add
and
pop
fistps
jne
xchg
sbb
pop
test
outsb
gs
loopne
aas
jl
jge
or
push
adc
fidivs
xchg
icebp
in
cmp
andl
rcrl
addr16
mov
dec
sbb
jnp
mov
add
lock
lcall
push
out
loop
push
pop
mov
iret
lea
cmp
orb
out
stc
xchg
jno
sti
jecxz
mov
jne
inc
popa
pop
popf
xchg
xchg
paddd
mov
leave
lock
xchg
lods
je
rcl
dec
dec
addr16
pop
dec
add
adc
ss
sbb
sbb
pusha
xchg
xchg
insb
xchg
xorl
cltd
or
cmp
ret
pushf
cld
or
fisttpl
pop
lods
roll
cmp
in
cwtl
das
imul
sub
inc
dec
push
add
mov
xorl
mov
push
mov
push
mov
jecxz
mov
xor
sbb
ja
bound
pop
cmp
sbb
dec
daa
xor
inc
sbb
aad
das
pop
add
xchg
ljmp
xlat
inc
neg
mov
adc
sub
orl
sub
pusha
addl
data16
pop
repz
jp
decb
lcall
insl
pop
loop
fstp
mov
add
data16
cld
fwait
jnp
das
in
push
jo
repz
xchg
mov
mov
sbb
adc
cwtl
leave
fwait
lods
cs
and
cwtl
insl
sbb
cmpsl
add
ds
or
push
es
xchg
movsl
in
daa
mov
fildll
jg
jge
ss
sbb
clc
sbb
call
xlat
jl
jge
out
or
jg
mov
pop
enter
adc
stos
sbb
sbb
sbb
js
push
fucomi
repz
adc
jge
ret
push
mov
cmc
sub
or
mov
mov
or
xchg
mov
inc
xchg
mov
sbb
idivb
mov
scas
pop
leave
icebp
or
dec
pushf
xchg
dec
les
pop
mov
adc
hlt
movsb
inc
sub
push
mov
icebp
sbb
call
jno
sarb
adc
repnz
rcll
inc
cmp
out
cs
arpl
inc
test
jo
cld
leave
inc
sbb
add
mov
pop
leave
mov
cmpb
xchg
cmp
lahf
scas
dec
cmp
imul
and
test
xchg
jb
pop
mov
push
xor
cmp
push
and
mov
xchg
out
cmp
shrl
cmpsb
fistpl
adc
mov
or
cmp
xchg
mov
hlt
adc
push
push
xchg
dec
fdiv
ljmp
dec
stos
les
leave
push
xchg
and
mov
rcl
aaa
sarb
fdivrl
cmp
or
popa
je
dec
ja
or
adc
push
rol
cmp
lea
pop
data16
sub
mov
cmpsl
icebp
mov
gs
lock
jge
mov
into
pop
ljmp
cmpsl
jo
mov
test
mov
loope
add
andl
push
lret
mov
arpl
mov
faddl
mov
mov
sbb
pushf
insb
fwait
cmpb
sbb
cld
shrb
dec
lock
jmp
dec
xchg
inc
sub
push
inc
enter
cmp
mov
shl
push
inc
pop
lock
popf
ret
mov
cmp
mov
mov
xchg
cmp
inc
ret
xchg
sarl
push
fmull
notb
je
xchg
adc
inc
lea
sbb
mov
pop
push
gs
scas
pop
je
lock
cmc
cli
dec
lock
mov
add
push
negl
pop
pavgb
imul
mov
shll
sub
or
in
mov
jl
mov
inc
jb
insl
fisttpll
lret
leave
ret
fsub
test
stos
push
jmp
mov
fisubrs
call
js
xlat
aam
lret
rclb
adc
or
push
add
loope
or
imul
dec
inc
out
sahf
aad
addr16
movsl
dec
sbb
push
sbb
jmp
jbe
std
add
in
stos
mov
daa
out
out
repz
loopne
faddl
add
gs
rcrl
lcall
stos
leave
mov
xchg
xchg
inc
fsubrs
bound
push
inc
push
xor
bound
pushf
push
add
add
ljmp
mov
data16
xchg
push
dec
push
test
or
divl
cmpsb
faddl
sbb
mov
xchg
pop
test
bound
mov
mov
sub
sub
inc
lock
fcoml
push
ret
adc
push
imul
sub
pop
xchg
adc
inc
or
bound
pop
mov
icebp
notb
jae
in
fucomi
mov
fldl
dec
push
cmp
movsl
push
inc
aam
ret
jae
mov
mov
jb
mov
rcr
inc
in
mov
sub
fimuls
loope
lcall
mov
mov
mov
not
mov
or
cmpsl
pop
jmp
jnp
jge
pop
or
lret
sar
loop
int3
stos
jge
addr16
mov
xor
sub
lock
and
mov
mov
add
dec
xor
xchg
loopne
mov
ds
dec
pop
inc
ds
in
sub
adc
lods
add
mov
sub
xor
pop
pop
sahf
push
cmpsb
and
sbb
push
sbbb
imul
jle
or
in
movsb
mov
add
pop
pop
pop
cwtl
mov
inc
cmpsb
push
hlt
or
pop
cmp
pusha
sbb
repnz
jmp
nop
into
ljmp
repz
adc
mov
xorb
fbld
mov
sbb
pop
or
pop
hlt
or
cmp
inc
fs
adc
pop
ja
arpl
xorl
sub
scas
inc
pop
adc
or
and
nop
mov
adc
lahf
mov
aaa
sbb
jmp
imul
lds
jmp
dec
shll
loop
ss
cmp
into
es
xchg
movsl
adc
iret
mov
jge
sub
loope
out
xchg
xlat
sub
inc
fnstsw
jb
jnp
mov
xor
xor
in
dec
cmp
dec
or
pusha
jmp
rcrb
cwtl
fisubrl
jmp
mov
cmp
xchg
mov
jle
adc
adcl
popa
mov
fwait
jge
inc
adc
into
inc
rolb
add
add
dec
out
cmpsl
mov
push
popf
sbb
std
pop
adc
aas
mov
arpl
cmp
push
inc
es
and
adc
xchg
loope
mov
push
and
add
xchg
xor
xor
pop
or
ds
and
jne
aaa
push
jecxz
addl
sbbb
lahf
or
xchg
dec
test
add
in
or
xchg
xchg
pop
test
mov
out
or
xchg
cmp
lea
lcall
pop
jb
fmull
fsts
pop
imul
cld
out
mov
or
and
mov
cmp
outsl
and
pop
dec
fbld
cli
aaa
or
xor
stc
adc
subb
mov
mov
jg
stos
cmpsb
xchg
fldenv
sub
push
repnz
dec
dec
jns
lods
lea
rorb
ret
jl
cmpsb
aas
ss
dec
mov
lock
pop
cltd
push
adc
push
movsb
sbb
ds
inc
push
loope
fnsave
pop
inc
in
cmpsb
xchg
out
push
and
stc
mov
fmull
dec
dec
je
add
jle
js
les
pop
jmp
add
shll
xchg
xor
push
fwait
sbb
nop
mov
js
testl
mov
ds
inc
add
sbb
mov
divl
inc
in
movsb
lods
cld
push
cmpsl
out
cmp
lods
sarl
ja
jbe
fwait
jg
aad
mov
push
repnz
aad
or
xor
pushf
out
jno
inc
pop
adc
push
dec
dec
xchg
pop
mov
mov
sub
jb
dec
loope
cmpsb
lods
imul
jp
fnstcw
and
add
xor
adcl
dec
xchg
push
mov
cmp
cmp
sbb
jno
stc
jns
lahf
std
and
xchg
faddl
sbb
mov
push
ja
push
cmp
jno
mov
test
repz
xchg
push
mov
pop
loopne
jl
pop
xor
and
js
mov
adc
je
xchg
call
aaa
or
adc
and
jle
leave
inc
or
pop
mov
or
leave
stos
push
xor
or
dec
stos
jae
or
je
sbb
mov
int3
xlat
ljmp
jmp
movsl
xor
sbb
mov
mov
jns
mov
or
pushf
mov
fimull
daa
lock
aas
sbb
mov
or
adc
or
movsl
jle
mov
lods
jmp
mov
cld
or
lcall
movsl
vfrczpd
punpcklbw
and
xchg
adc
jnp
leave
ds
jle
pmullw
adc
icebp
hlt
xor
scas
jno
sbb
jae
jno
sbb
es
mov
dec
ret
lea
dec
dec
hlt
cs
dec
or
lcall
dec
cmc
sub
cmp
dec
mov
icebp
or
data16
and
ja
cvtps2pi
or
mov
and
push
insl
sti
sbb
inc
pop
inc
mov
sbb
repz
mov
andnps
fsubrl
int
aam
jp
or
cmp
push
mov
adc
jne
out
xchg
jp
xchg
cmpl
fsubrs
and
or
int
fdivl
int3
push
xchg
je
roll
cs
add
idiv
adc
sub
adc
jbe
pop
dec
scas
out
jp
cmc
leave
jno
shll
jns
sub
inc
nop
xor
push
in
lcall
adc
popa
mov
aas
psraw
mov
sarl
jno
clc
cwtl
out
out
mul
rol
inc
out
or
pop
pop
aaa
fistps
jo
inc
insb
shrl
and
cli
push
jno
clc
inc
lahf
jnp
inc
xchg
or
test
icebp
cmpsb
xor
xlat
addr16
lcall
xor
sahf
cmp
adc
loope
mov
pop
jmp
xor
inc
mov
test
cmp
lahf
xlat
jp
iret
mov
cmpsb
daa
mov
inc
ret
mov
mov
jae
mov
xor
mov
dec
lds
jnp
aas
jge
hlt
and
mov
sub
ss
ss
out
rcrb
imul
pop
lods
js
lcall
cmp
cmpsl
mov
daa
je
jmp
sub
mov
shl
packssdw
pusha
xor
or
pop
sub
xchg
ja
jecxz
shl
fsubrl
fwait
cmp
data16
mov
jnp
or
addb
xchg
sub
pushf
ljmp
add
call
and
stc
lea
add
mov
dec
jg
shlb
dec
pop
loopne
pop
cs
mov
out
lods
insl
pushf
stos
es
mov
inc
popa
daa
sub
jle
or
into
test
push
or
cmpsl
out
loop
imul
jmp
or
xor
insb
adc
push
pop
sbb
jno
call
dec
cmp
cs
dec
cltd
inc
shrb
pop
pushf
faddl
fsts
stos
ret
pop
cld
aad
or
sbb
aad
dec
in
pop
mov
test
lret
pop
scas
movsb
cmc
fcmovu
or
pop
pop
mov
mov
jnp
repz
fs
pop
rcl
daa
pop
dec
loope
test
and
repz
push
and
pop
mov
or
std
pusha
jb
sbb
aam
mov
and
pop
push
stos
pop
push
shlb
sub
xchg
sarb
sti
or
outsl
xchg
loopne
sub
or
rsm
push
cmc
cwtl
or
enter
bnd
aad
lods
and
mov
jmp
ds
repnz
stos
cltd
push
ret
out
and
push
mov
arpl
daa
jle
dec
jmp
xor
jmp
cwtl
insb
js
movsl
arpl
xor
cwtl
xchg
roll
xlat
mov
jg
dec
inc
dec
cmpsl
adc
fmul
mov
out
repnz
testb
icebp
test
js
xchg
pusha
enter
sahf
add
outsb
sub
lods
fnstcw
imul
lock
push
sbb
sbb
adcl
mov
nop
test
push
mov
lahf
mov
fwait
dec
xor
inc
pop
inc
inc
pop
mov
fcomps
xlat
cmc
pusha
mov
cpuid
out
aas
mov
popa
add
xchg
sarl
les
cld
push
and
movsb
aad
xor
cmp
and
ljmp
jecxz
or
dec
in
jge
inc
loop
mov
ss
jmp
scas
push
pop
fsts
adc
jnp
mov
icebp
sub
or
sahf
sub
ror
sbb
je
test
jae
addr16
push
push
xchg
or
xor
mov
dec
fsubl
jmp
movsb
adc
daa
and
in
js
in
pop
adc
sub
lahf
or
lcall
lcall
rol
test
ja
jmp
mov
fnstsw
xor
adc
push
testl
fucomip
mov
cld
int3
cmp
ds
in
push
cmp
inc
push
fimuls
add
xchg
test
pop
push
outsl
es
int
cmpsb
lret
call
je
jno
mov
in
sbb
stc
fisubl
push
icebp
mov
push
seto
ds
cmp
dec
xor
and
jmp
mov
mov
push
and
popa
dec
cmpsl
mov
ds
or
xor
push
sbbl
mov
rcr
and
push
xchg
push
into
jp
gs
adc
push
jl
fimuls
dec
popf
mov
pop
test
fcompl
bts
mov
fs
imul
sahf
hlt
sar
popl
push
fiadds
in
cmpsb
jp
ret
inc
lock
idivl
leave
push
xchg
sbb
or
in
movsl
cmp
mov
lahf
mov
mov
scas
add
jmp
push
push
int3
push
mov
into
hlt
jns
mov
add
xor
and
shlb
dec
adc
inc
pushf
ss
cli
divb
out
inc
inc
dec
clc
dec
mov
in
sub
inc
jmp
mov
pop
jbe
inc
inc
push
pop
dec
sbb
pop
cwtl
mov
lret
xor
dec
arpl
sarl
add
pop
mov
lcall
mov
xchg
mov
xchg
scas
mov
daa
xlat
mov
xchg
mov
sti
pop
sbb
and
jae
jl
and
mov
adc
in
nop
jge
mov
imul
movl
mov
test
inc
and
push
cmp
gs
daa
push
je
or
sub
cmp
add
enter
xchg
cmp
bound
shrb
clc
bound
xchg
jge
xor
lret
test
xchg
inc
leave
loop
nop
or
mov
add
or
hlt
into
and
sub
mov
or
cmp
pop
je
fistps
cmp
inc
or
and
and
cmp
rcl
dec
mov
jno
and
shrb
pop
jl
pop
das
repnz
lds
push
popa
pop
lahf
test
incl
scas
push
movsl
fidivl
xchg
fcoml
dec
int3
jns
enter
loope
pop
nop
rcrb
pop
push
outsl
and
insl
inc
cs
rcrl
test
add
scas
mov
ret
mov
andl
mov
stos
jns
movsl
addr16
data16
mov
sbb
jecxz
es
pop
dec
data16
sbbl
inc
mov
data16
add
jo
stos
sti
lea
imul
aas
lds
int3
jns
inc
add
shrb
lods
xchg
stc
shrb
xor
repnz
dec
adc
iret
pushf
fsts
into
jge
mov
lock
lret
lds
les
bnd
test
subb
xchg
mov
xor
push
lahf
push
add
xchg
lods
into
inc
imul
popa
int
mov
sbb
insl
mov
push
sbb
adc
push
adcb
loop
int3
in
dec
arpl
mov
popf
push
loopne
cmp
xchg
pop
outsb
pop
in
clc
mov
sub
ret
xchg
in
cltd
test
mov
cld
movsl
inc
cmp
bound
push
ds
fs
adc
mov
addr16
cmp
test
inc
ret
sub
insl
mov
mov
inc
pop
cmp
sub
inc
and
mov
mov
add
cli
lock
mov
mov
mov
inc
pushf
mov
cli
mov
or
sub
leave
sbb
test
lcall
enter
out
sarl
jnp
and
push
fisubs
imul
call
aam
pusha
cmp
subl
jle
insb
lods
sub
pop
xor
inc
xchg
in
jae
push
push
cmp
fdivrl
loope
dec
test
dec
xchg
sub
ja
aas
mov
call
add
pop
sarl
and
mov
adc
sbb
dec
jb
cli
stc
add
orb
pop
test
pop
mov
rclb
inc
cli
cltd
mov
lods
mov
aad
xchg
in
mov
stos
cmp
int3
not
dec
ljmp
mov
fdiv
in
in
push
leave
stos
adc
in
ja
dec
int
dec
stos
pop
mov
movzwl
enter
out
repz
jmp
gs
enter
jnp
add
ja
ss
mov
ret
jp
add
daa
jb
xlat
add
xor
mov
sarl
adc
and
dec
pop
jae
int
push
xchg
inc
movsl
scas
sti
mov
sti
outsb
scas
mov
sub
push
enter
mov
test
mov
push
xor
fstpl
sub
sub
mov
fcompl
and
push
mov
mov
sub
xor
sub
cld
ljmp
adc
js
pop
iret
jmp
sbb
mov
enter
mov
in
imul
add
push
mov
dec
mov
add
push
ljmp
adc
mov
cmpsb
ret
in
xchg
ficompl
add
xchg
lods
jbe
add
fldcw
lahf
mov
insl
and
pop
movsb
cmp
xor
adc
cmp
push
pop
imul
fildl
and
cmp
mov
int3
pop
out
mov
popa
xor
pop
aaa
filds
xor
jg
or
jl
cmc
xor
xchg
sbb
jb
xchg
mov
pop
ret
sbb
xchg
or
aas
adc
in
dec
in
cwtl
in
in
scas
pop
push
ret
clc
mov
das
mov
fs
mov
and
data16
pop
in
xchg
pop
fs
enter
invd
or
loopne
cs
out
mov
pop
and
xchg
xchg
dec
fldcw
xor
insl
ret
mov
xchg
dec
lds
sub
shrl
mov
xor
mov
fucomi
jmp
push
ljmp
inc
jno
mov
mov
test
jnp
jg
sbb
xchg
test
xchg
stos
dec
push
aaa
cmp
push
test
inc
call
dec
sub
pop
test
pop
jp
out
test
lods
and
jb
jle
inc
sbb
mov
cmp
mov
mov
imul
movsl
dec
xchg
out
xchg
rol
nop
dec
mov
jmp
cli
push
nop
fistpll
imul
out
sub
lods
add
cmp
inc
js
add
sbb
sti
push
mov
imul
cs
shlb
hlt
mov
clc
push
dec
adc
xchg
shrl
ja
pop
popa
test
or
pusha
mov
push
inc
dec
ret
inc
daa
and
int
mov
adc
or
out
xchg
push
loopne
pop
pop
daa
xchg
xor
sbb
movsb
or
int3
notb
jns
lods
fcmovnu
ja
mulb
mov
popa
fidivrl
mov
push
dec
movsb
aam
sti
add
dec
mov
mov
shll
sbb
or
mov
lods
mov
aas
pop
cmp
adc
mov
cmp
jmp
stos
sub
jg
mov
jno
fcomps
lock
mov
lock
lahf
gs
pop
inc
xor
xor
sbb
movsl
mov
sti
push
sub
jg
jno
jo
nop
sub
shll
ret
jmp
je
xorl
or
push
stos
jo
cmp
push
stos
inc
test
sub
fadd
in
adc
nop
pop
out
push
push
xor
orl
popf
mov
addr16
out
dec
into
xor
sbb
scas
xchg
sbb
ja
mov
arpl
jne
dec
mov
xor
sub
imul
inc
push
mov
in
lods
fisubrs
and
mov
xlat
xchg
cmp
cmpsl
shl
jecxz
sbb
out
es
lods
ja
into
mov
fs
sbb
enter
negb
icebp
cmp
aam
lcall
leave
mov
sub
pop
cmpsl
lret
xchg
cld
mov
inc
in
adc
mov
addl
leave
push
dec
pop
adc
inc
push
pop
and
pop
cmc
iret
fisubrl
jns
cmpsl
test
rol
sub
outsl
add
lock
adc
mov
mov
mov
and
inc
inc
fsubrl
lods
lcall
mov
adc
bound
and
rcr
push
into
daa
repz
dec
icebp
insl
inc
popf
xor
sub
aaa
fs
inc
sub
jl
out
shlb
lcall
out
clc
pop
xchg
test
sbb
push
fists
xchg
pop
cmp
jge
outsb
and
mov
and
add
gs
cmp
mov
adc
and
stc
ds
push
sub
aad
fildll
push
out
push
div
hlt
xchg
push
out
xor
enter
jo
pop
pop
push
imul
cmp
je
in
add
cmp
clc
push
aaa
mov
push
xor
iret
mov
push
xor
call
pop
call
test
mov
xchg
pop
xchg
lret
jns
call
mov
dec
cmp
dec
xor
in
loopne
dec
cmpsb
mov
lds
mov
ficomps
add
sbb
mov
and
sub
arpl
lods
jo
out
xchg
adc
dec
jne
inc
pop
test
gs
dec
out
push
fidivs
in
flds
mov
mov
arpl
test
lods
lods
movsl
popf
je
outsb
movb
scas
cmpsb
mov
cmp
imul
adc
cwtl
loop
adc
xorb
jp
lcall
jecxz
mov
add
les
mov
mov
dec
add
dec
cmp
pop
sbb
lea
mov
mov
decb
mov
es
sbb
mov
xor
dec
ss
xor
mov
sbb
pop
sbb
pop
inc
sbb
add
movb
xor
ja
ror
aas
adc
xor
sbb
out
fwait
push
lods
negl
out
adc
xchg
mov
ret
fisttpl
gs
sbb
leave
jns
mov
mov
xor
mov
and
int3
jbe
sti
cmc
shlb
or
push
add
and
pop
lds
jle
inc
lds
in
fsubs
pop
arpl
test
pop
mov
and
imul
add
je
mov
mov
push
xchg
in
add
inc
mov
dec
sahf
out
mov
lret
iret
shl
mov
dec
sub
pushf
sbb
fldenv
test
lahf
push
insb
or
repz
cwtl
xor
push
add
out
lahf
push
cmp
cmpsl
nop
jecxz
add
jle
rclb
mov
mov
arpl
loopne
push
cmp
gs
stos
shrb
outsb
xor
or
adc
mov
pop
push
inc
sbb
mov
mov
in
or
mov
les
push
mov
xchg
movsb
lods
je
pop
mov
pop
or
shl
outsb
es
cli
sub
push
adc
and
inc
adc
fstpl
cli
pop
push
push
lahf
and
les
dec
jns
xlat
lds
lods
out
test
aaa
sahf
pushf
je
cli
sar
xchg
sbbb
xchg
lods
fistps
adc
pop
xchg
mov
lidtl
imulb
sbb
push
fucomp
lock
jecxz
outsb
pop
in
rcl
xchg
xchg
mov
jnp
pop
mov
faddl
mov
dec
pop
adc
lods
pop
dec
call
arpl
into
pop
and
popa
fucomp
or
add
pop
dec
mov
sub
cmc
insl
pop
dec
and
fsubr
xchg
mov
cmp
das
ret
and
sub
fst
jge
pop
in
aad
out
scas
fsub
cvtps2pd
cld
lret
inc
imul
int3
jbe
popa
dec
in
inc
dec
ret
rcrl
insl
add
adc
in
jge
mov
cld
mov
sbb
mov
cmpsl
mov
pop
jp
mov
xor
and
inc
out
jns
add
sbb
jge
mov
test
in
subl
dec
pop
dec
push
mov
repnz
call
mov
rclb
cli
sti
lods
int
in
inc
lahf
and
mov
gs
dec
lods
es
and
jle
rolb
adc
mov
fs
int3
test
roll
out
clc
xor
cli
adc
inc
and
adc
dec
into
adcb
movl
jecxz
stc
mov
adc
xor
mov
adc
sahf
test
lea
xorl
arpl
test
mov
dec
mov
push
stos
push
sub
push
lret
std
jge
fwait
ja
push
jnp
cmpsb
into
hlt
adc
add
xchg
xchg
add
push
sub
jecxz
mov
jl
mov
or
adc
or
daa
xor
ret
iret
and
jo
cmpsl
insl
dec
mov
icebp
jg
and
mov
jle
add
cmp
popa
jo
loope
dec
pop
aas
or
push
sarl
pop
xchg
fdivrp
xchg
daa
scas
lcall
jo
mov
sub
aam
and
add
mov
dec
sbb
pop
icebp
cmp
lds
sub
adc
insl
lods
inc
mov
mov
pop
cmp
hlt
add
outsb
inc
sub
or
jl
add
xor
jae
jg
add
int
jae
fisttpll
loop
hlt
call
iret
xor
imul
roll
push
int3
mov
mov
int
mov
daa
mov
jmp
cmp
mov
in
adc
std
ja
rorb
loop
mov
xor
fdiv
test
mov
mov
inc
cld
mov
mov
lds
outsb
mov
sbb
mov
repnz
cmpsb
mov
movsl
push
mov
movsb
shrb
lea
pop
shlb
mov
stos
ja
jo
cmp
adc
lock
ljmp
aad
inc
testl
xchg
ret
shlb
daa
sub
pop
push
les
mov
mov
mov
add
data16
bound
and
mov
lds
icebp
repnz
mov
inc
xchg
ja
lret
dec
ds
cmp
inc
sbbl
mov
hlt
cmpsl
mov
inc
sbb
mov
mov
mov
ljmp
fisttpl
dec
jb
dec
les
loopne
add
push
ret
pop
mov
xchg
mov
cmp
pop
cmpsl
adc
aaa
ja
cmp
push
insl
out
mov
shlb
sbb
arpl
adc
xlat
pop
test
int3
mov
and
cmc
sbb
sub
movsb
jae
add
mov
ljmp
add
orb
cld
mov
xor
xchg
ss
nop
pop
mov
or
aaa
repnz
sbb
or
cmp
test
sbb
xchg
aad
pop
iret
in
fcompl
data16
inc
insb
lds
aam
or
jno
sub
jecxz
or
pop
sub
movsb
inc
mov
pop
pop
mov
mov
cmp
int3
ret
pop
cmp
scas
adc
xchg
sarb
mov
mov
test
adc
jle
mov
add
push
cmp
stc
addb
sub
pop
call
les
sub
into
popa
adc
dec
fists
in
sub
dec
imul
adc
lods
fldenv
mov
push
inc
add
or
imul
sar
jb
loopne
inc
or
jno
cltd
dec
or
movsb
lret
sarl
xchg
mov
loopne
mov
xchg
testl
push
fildll
ss
jnp
xchg
mov
jecxz
push
push
push
sbb
and
jb
leave
jg
mov
push
mov
xchg
pushf
xor
dec
cltd
scas
mov
stos
scas
repz
xor
repnz
pop
rorb
push
shrl
arpl
andl
xchg
mov
out
sbb
out
xchg
inc
adc
enter
scas
in
ficompl
cmp
mov
rol
and
cmp
sbb
imul
adc
iret
pusha
inc
push
jae
pop
pushf
sub
jg
mov
aaa
cli
dec
mov
inc
int
push
xchg
mov
lahf
fucomp
fsubl
mov
nop
es
mov
fwait
cmpsb
mulb
xchg
cmp
test
push
fstpt
fcompl
jp
pop
jmp
out
lea
xor
sbb
aam
js
in
dec
pop
repz
in
out
add
dec
lds
jno
ss
mov
mov
xchg
imul
and
mov
and
loopne
xchg
mov
daa
xchg
mov
sub
or
jo
mov
push
cmp
xchg
sub
gs
inc
iret
mov
popf
test
xor
lds
lcall
mov
xor
jo
jle
push
hlt
mov
cld
or
insl
pop
int3
ljmp
iret
cmp
xor
and
std
cmp
aaa
and
jo
jl
rcrl
add
jno
mov
inc
dec
cltd
push
sbb
adc
push
int3
push
in
lcall
jne
inc
std
or
push
mov
cwtl
sub
mov
loopne
pop
pop
and
mov
pop
jecxz
inc
gs
adc
adc
push
xchg
sub
in
dec
pop
repnz
add
mov
push
sub
push
cmp
xchg
nopl
leave
mov
adc
ret
ss
jge
insl
lret
sbb
push
sub
frstor
leave
mov
enter
push
or
add
gs
imul
into
js
adc
into
lods
daa
pop
notl
xchg
cld
stc
rolb
test
ljmp
lahf
pop
cmp
jbe
int
sbb
ret
imul
loop
shld
add
dec
bnd
dec
aam
cmp
push
sbb
std
dec
les
lahf
repnz
adc
jno
sbb
into
mov
in
mov
xor
add
fwait
mov
call
fstpl
mov
in
sbbl
push
insb
stos
add
push
fnstcw
jmp
outsb
sub
xlat
push
mov
cmp
lds
sbb
mov
mov
es
mov
xor
cmpsl
xchg
sub
or
pop
and
lret
cmp
sarl
insl
cmc
pop
cmp
push
je
xchg
sbbb
shlb
mov
outsb
adcb
sub
mov
dec
ss
filds
push
jne
sub
sub
popa
or
rcr
ss
push
ljmp
lods
add
add
adc
fmull
ret
cmp
mov
in
rcl
inc
push
and
jbe
mov
lcall
pop
enter
jae
xor
push
idivl
loop
outsb
imul
mov
and
add
cld
loope
jo
mov
out
or
cmp
rolb
je
in
and
xor
push
xchg
push
mov
mov
sbb
sub
or
or
addb
xlat
pop
xor
sbb
and
lcall
sbb
xor
pop
pop
xor
ficoml
fcmovnu
sub
les
push
xchg
xchg
push
pop
inc
mov
inc
and
inc
cmpsl
mov
mov
jg
jl
fs
mov
adc
adc
andb
jo
repnz
sub
fbld
xor
push
js
movsl
rolb
lcall
jmp
and
dec
aad
mov
aas
mov
in
loope
sub
cmc
pop
cli
repnz
sub
repnz
iret
push
xor
mov
sub
std
addl
cmpsl
rcll
outsl
mov
pop
test
lods
imul
into
adc
mov
xchg
add
sahf
jge
fstpt
hlt
sbb
cs
inc
cmp
addr16
cltd
mov
sahf
sbb
inc
bound
loopne
aaa
movsl
xor
inc
add
jmp
mov
pusha
dec
and
cwtl
test
pop
lret
xchg
gs
or
cs
and
pop
test
dec
repz
mov
adc
daa
fcom
bound
negb
sarl
or
in
fsubr
leave
pop
push
out
je
mov
xor
xor
shlb
in
lcall
mov
and
shlb
xchg
aas
fadds
jl
push
add
cmp
inc
ss
in
imul
xor
test
into
popf
cltd
roll
mull
mov
loopne
adc
test
andb
imul
mov
repnz
popa
jne
and
ss
push
aam
jp
push
sbb
xor
xor
cmc
sahf
mov
mov
jecxz
mov
cmc
fdivrs
inc
pop
mov
andb
cld
mov
jl
cs
arpl
or
push
mov
mov
xchg
mov
push
aam
push
add
push
pop
jmp
add
fwait
clc
cld
testl
enter
and
xchg
jmp
in
mov
and
movsb
fsubrp
push
pop
rorb
addr16
ss
sbb
or
mov
inc
add
pop
test
iret
jno
pop
lcall
pop
mov
cmp
push
fiadds
xor
lcall
aad
dec
lods
lds
xchg
ss
fsubl
sbb
pop
cmpsl
ljmp
pop
sub
cs
or
mov
and
xchg
sbbl
lds
cmp
sub
lods
sbb
test
in
and
insl
jle
movsl
fcmovne
loopne
loop
out
adc
test
push
jmp
clc
lea
lock
loopne
mov
adc
rolb
rcrb
imul
dec
fwait
rcrl
jmp
mov
adc
das
out
sbb
adc
fisttpll
dec
mov
mov
shlb
shll
mov
ds
cmp
negb
je
mov
lahf
dec
cmp
int
outsb
sbb
adc
mov
push
aad
lods
push
inc
or
push
testb
xchg
inc
ret
inc
shlb
fdivr
xor
and
dec
cmc
dec
arpl
pop
scas
in
ja
jge
sbbl
xchg
xchg
xchg
ret
pop
push
add
idivl
ljmp
vprotd
push
mov
and
dec
inc
je
cmp
and
xacquire
pop
inc
inc
push
mov
add
mov
icebp
loopne
mov
and
or
fs
mov
sub
pop
mov
orb
or
addl
inc
cld
in
jle
dec
insb
or
aaa
add
pop
cmp
and
xor
pop
imul
ficoms
sbb
sbb
push
out
mov
rcll
push
jb
adc
je
repnz
jns
push
xchg
mov
add
das
or
mov
iret
adc
push
cmp
sub
pop
dec
stos
inc
sub
loopne
mov
sbb
out
in
pop
pushf
cmpsl
sbb
ror
push
lret
sbb
bound
addr16
imul
jo
ret
adc
xchg
insb
pop
push
dec
and
xchg
dec
mov
push
push
lods
and
sbb
inc
out
les
adc
push
dec
sbb
in
popa
and
fisttpl
xchg
rolb
arpl
fcom
pop
pop
out
fcoms
mov
gs
fsub
enter
pop
pusha
adc
pop
std
xchg
imul
inc
lds
lret
cmpsb
xor
mov
jecxz
jae
cmp
mov
xor
mov
cmp
dec
sbb
xorl
bound
loope
inc
aaa
roll
aad
xor
rcll
push
ret
or
mov
xor
pop
mov
js
jl
fidivs
cmpsl
pushf
loopne
mov
lea
xor
push
sbb
sub
popa
and
cmpsl
mov
icebp
roll
bound
or
lret
cmpsb
clc
fidivrl
aam
into
pop
inc
push
ficompl
stos
cmp
mov
insl
cmp
sub
pop
movsl
push
cld
test
loopne
push
mov
nop
pop
repz
xor
push
cmp
fstps
insl
sbb
xchg
sarb
xor
loopne
sbb
addb
cltd
std
add
fsts
out
and
xor
lcall
xchg
cs
jp
leave
sub
and
ja
mov
orl
mov
movsl
inc
xchg
sub
push
insl
add
fistl
aad
movntq
sbb
loop
fstps
xchg
push
inc
nop
add
mov
shl
mov
mov
pop
or
addb
mov
jge
lods
fistl
dec
and
loope
sahf
fcompl
jo
dec
call
adc
daa
mov
into
xchg
push
iret
lcall
xchg
mov
and
or
push
jo
add
cmpsl
rclb
clc
and
pop
lcall
push
call
push
cmpsl
xchg
sbb
in
ffreep
es
dec
insb
sbb
mov
mov
cli
and
out
scas
stc
hlt
clc
xchg
scas
xchg
cmpsb
or
cmp
aad
fcmovu
xor
and
adc
mov
mov
cs
pop
jnp
push
push
popf
jp
shlb
test
pop
je
or
and
mov
and
xor
mov
inc
in
sbb
push
test
fidivrl
gs
cmp
inc
mov
xor
push
xchg
inc
ret
inc
movsl
mov
cmp
jmp
mov
in
push
stos
or
lret
daa
dec
sbb
xchg
stos
or
mov
mov
sti
adc
mov
js
jae
lea
mov
xor
ror
sub
int
pop
lcall
push
mov
or
fsubrs
pop
dec
out
ds
sbb
push
adc
incb
mov
jb
inc
xchg
pop
imul
std
out
and
mov
xor
dec
mov
jge
and
mov
push
addr16
sbb
aam
in
out
dec
adc
out
test
inc
mov
cmp
imul
dec
loope
mov
jo
mov
nop
das
stc
lahf
or
or
sarl
xor
sahf
je
aam
add
lock
shlb
cmp
lds
jmp
aad
adc
pop
inc
jo
sbb
rcrl
pushf
and
out
int
cmp
stos
movsb
fcom
pop
out
lods
andl
add
movsb
sub
lret
and
dec
and
mov
or
fcomps
mov
enter
out
arpl
daa
es
js
xor
lods
xor
xchg
jge
repz
orl
outsl
lds
mov
mov
mov
iret
pminsw
bound
cmp
push
xchg
fdivs
into
scas
shll
leave
in
inc
add
mov
cmp
in
je
pop
leave
push
inc
mov
jmp
out
mov
dec
in
cmp
mov
faddl
icebp
ret
lahf
add
ret
movntps
lret
sbb
adcb
pop
push
push
cmp
inc
pop
xchg
pop
pop
outsl
cwtl
and
and
mov
add
pusha
rcrl
call
outsl
sbb
mov
aaa
paddusw
cmp
stc
push
repnz
scas
cmp
sbb
int3
add
cli
imul
xchg
es
fs
mov
jg
in
xchg
cmp
test
out
pop
mov
loope
scas
xchg
xor
mov
lods
cmp
hlt
addl
cmp
aam
js
cmp
std
clc
and
sub
aas
sub
push
push
in
pop
in
gs
cld
pushf
sbbb
sbb
les
or
adc
mov
inc
icebp
mov
mov
mov
rcr
icebp
xor
mov
xchg
movsb
mov
mov
cs
and
shlb
imul
dec
dec
or
imul
aad
pop
lods
mov
or
or
jmp
jns
mov
outsb
test
or
bound
pop
jno
loope
sahf
cli
lock
and
mov
xchg
adc
lret
sbb
mov
push
adc
insl
cld
cmc
mov
rcll
cld
sbb
jle
movsb
aam
popf
out
mov
mov
data16
fnstenv
xchg
jp
xor
xorb
dec
xor
out
movups
xor
lods
pop
lds
dec
loopne
xor
fsub
pop
pop
pop
test
inc
or
loopne
mov
jb
sub
es
mov
xor
jno
dec
pop
push
add
cltd
cltd
popf
adc
les
lret
hlt
xchg
mov
push
adc
xlat
sbb
nop
aam
or
sbb
int3
add
xchg
cmc
es
sub
inc
clc
cli
into
sub
jmp
fisubs
sub
cltd
jp
dec
push
sbb
cmp
mov
mov
cmc
push
or
cmp
and
cmc
lods
arpl
xchg
mov
and
inc
in
ja
js
push
clc
pop
loopne
addb
add
xchg
bound
aaa
xsaveopt
out
cmpsb
sahf
mov
pop
or
sub
add
fwait
movsl
rorl
in
repnz
stos
jo
lock
adc
in
in
mov
enter
jmp
ficompl
sti
inc
push
loopne
mov
enter
aaa
jno
mov
mov
or
push
mov
rcll
lods
or
cltd
add
iret
lret
ljmp
pop
je
movsl
or
sub
jne
scas
test
adc
pop
push
sub
mov
adc
stc
dec
out
inc
pop
dec
push
rcll
inc
jae
std
add
cmp
mov
mov
popl
fwait
jmp
dec
add
pop
imulb
lods
dec
xor
lcall
test
fistps
mov
and
cmp
icebp
imul
js
repnz
sar
xchg
inc
push
pop
mov
mov
cli
or
or
pushf
sbbl
sbb
imul
cli
dec
cs
loope
das
jno
dec
jg
ds
std
lret
dec
or
fdivp
cmp
fnstenv
loopne
push
daa
or
movsb
sub
or
fwait
inc
lahf
mov
cld
dec
test
dec
mov
int
sti
lret
shrb
and
mov
add
push
loop
push
rcll
vmovaps
mov
lret
rcl
pop
xchg
aad
daa
mov
cmpsl
nop
add
bound
and
inc
sbbl
push
mov
clc
jno
add
lds
pop
and
inc
fildll
mov
repnz
sbb
es
mov
pop
insb
movsl
mov
arpl
popa
xchg
sub
push
in
ds
and
mov
pop
int3
into
neg
jecxz
stc
sbb
push
mov
test
fwait
pop
mov
fs
push
mov
mov
shr
enter
xor
dec
js
add
push
in
test
jno
adc
and
ljmp
das
cmp
push
outsl
lahf
rorl
fcoms
in
in
lahf
mov
jg
shrb
jmp
adc
fdivrp
in
ja
sbb
adc
cmc
jl
lds
cli
sarl
jbe
push
cmpsl
mov
xchg
pop
movsb
push
jb
dec
lahf
add
xor
cli
or
shr
ja
outsl
and
bound
into
dec
jae
mov
aad
neg
icebp
mov
clc
repz
pop
mov
stos
pop
push
sub
das
mov
mov
mov
pop
push
in
cmp
fcoms
pcmpgtw
nop
dec
jge
or
cmp
xchg
hlt
push
mov
ret
pop
iret
sbbb
mov
xor
xor
test
jb
and
xchg
push
and
std
add
or
out
and
sbb
int3
jns
test
push
mov
xchg
fwait
sub
dec
add
fdivp
mov
loope
xchg
pop
loope
movsb
pop
loopne
repz
inc
fnsave
push
pop
addr16
add
iret
sub
pop
add
or
cltd
setnp
sbb
movsl
shl
sbb
fisttps
jg
sbb
aad
popf
sub
stos
rorl
rorl
push
int3
pop
sbb
xchg
sub
jg
pop
pushf
jae
fs
mov
adc
push
pop
imulb
adc
jmp
sbb
pushf
lods
and
cmpsl
sbb
pop
lret
outsl
lods
or
cli
in
xchg
test
outsb
aad
sbb
jbe
mov
adc
cmp
xchg
dec
stos
adc
and
xchg
xor
test
orl
sarl
push
xchg
adcl
sub
push
jb
mov
jne
jns
pop
pop
mov
lods
xchg
cmp
shrb
jge
aas
add
jns
scas
mov
clc
or
inc
mov
mov
and
or
sub
out
into
cmp
pop
fimull
into
icebp
or
mov
mov
sbb
sbbl
out
stos
repnz
xchg
neg
out
adc
mov
leave
jns
or
or
mov
in
mov
pop
cmp
test
adcl
sbb
mov
shrb
cmp
sub
jge
mov
push
ret
arpl
mov
mov
jne
jmp
or
outsl
dec
jp
imull
shr
mov
xchg
mov
iret
xchg
aas
std
push
repz
dec
ds
pop
push
mov
cmpsl
add
shld
mov
or
xor
or
or
fistps
xchg
imull
jae
mov
jo
mov
mov
or
and
dec
inc
sub
je
fdiv
les
dec
aad
fnstsw
cmc
xor
in
xlat
fidivrl
loop
cli
pop
insl
test
jl
shlb
inc
sub
inc
xorb
push
push
jb
mov
push
imulb
cli
outsl
inc
inc
ret
adc
cs
es
sub
stos
and
arpl
movsl
cmp
loope
loop
lds
sub
pushl
cmpsl
adc
xchg
xchg
outsl
pop
ret
inc
push
mov
bound
lock
lret
sbb
cmp
fcoml
lods
icebp
and
das
cs
push
lds
mov
ds
mov
lret
insb
xchg
insl
mov
scas
in
dec
dec
push
and
in
rol
ret
popa
aaa
cld
jne
orb
sbb
addr16
mov
cmpsb
push
dec
xchg
sbb
inc
mov
outsb
scas
inc
pushf
cmp
sub
lea
xchg
mov
hlt
or
pop
mov
jbe
inc
ret
add
mov
xlat
sub
jge
pusha
loopne
dec
add
les
repnz
pop
inc
outsl
and
push
nop
sub
xchg
stc
fidivl
into
adc
sub
pop
out
lock
les
call
cmp
mov
dec
pop
stc
dec
fidivrl
xor
dec
dec
cmp
int
imul
pop
movsb
mov
scas
sbb
ljmp
pop
mov
or
pop
cwtl
das
lret
fcmove
icebp
inc
jle
pop
mov
xchg
xchg
xorw
xor
xor
sti
outsb
cmpsl
sbb
out
pop
mov
fadds
add
fimull
rcrl
mov
xchg
mov
pop
icebp
std
data16
jge
sub
pop
xchg
push
std
mov
jecxz
cld
lret
jbe
in
xchg
sbb
jl
mov
popa
fs
out
lock
add
pusha
dec
orb
loope
insl
pop
mov
test
or
cmc
fiadds
movaps
outsb
cmpsl
mov
mov
daa
cmc
rorb
cmp
or
jnp
mov
jl
dec
mov
jecxz
sbb
and
imul
dec
imul
push
pusha
icebp
mov
pop
stos
jo
cmp
test
pop
inc
or
aad
sub
dec
lds
mov
ffree
sbb
scas
xor
in
outsl
pop
std
pop
push
stc
pop
imul
inc
push
adc
scas
sbb
xchg
scas
out
test
jp
sbb
adc
aaa
into
pop
fisubrl
ret
lret
insb
jae
xchg
adc
and
lock
pop
scas
inc
xor
pushf
andl
pushw
insb
dec
aaa
dec
gs
out
xor
loopne
and
cmp
sbb
mov
cld
add
movsb
fwait
or
or
lds
cwtl
dec
jbe
or
xchg
pop
sub
mov
pop
add
add
mov
in
adcb
push
mov
imul
mulb
inc
sub
push
mov
jns
stos
fnsave
rorl
xchg
arpl
sti
into
lret
imul
add
in
incb
mov
rcrl
adc
sbb
xchg
js
adc
xchg
sbb
loope
fwait
cld
shlb
pop
pushf
inc
sub
or
push
sbb
push
xchg
adc
fmuls
aaa
push
movsb
int3
add
bswap
sti
stos
push
adc
cli
clts
ret
fsts
outsl
and
fstl
jbe
insl
call
mov
and
push
into
inc
in
or
mov
jne
leave
push
xor
sarl
mov
sbb
sbb
in
lahf
xor
insl
adc
pop
sub
push
ja
ret
pushf
insl
fisttps
stos
in
iret
jae
sub
cmp
or
ret
inc
push
inc
popf
mov
push
mov
mov
sarl
test
dec
andb
rcrb
lods
fsubp
xor
nop
adc
cmpl
add
xor
pusha
lock
inc
sub
dec
inc
push
mov
adc
cmpsl
inc
sahf
and
pop
out
push
leave
rol
fmuls
int
sbb
xlat
pinsrw
and
aam
jecxz
adc
sahf
ret
xchg
pop
push
mov
fcompl
orb
sub
adc
enter
popa
sub
out
and
ja
in
popa
and
mov
call
pop
mov
xor
fwait
test
push
pop
push
fnsave
subl
insl
pop
cmp
adc
xor
sbb
add
jp
scas
fimuls
pushf
jae
fldcw
dec
scas
movsb
outsl
pop
push
push
lcall
movl
out
js
nop
loope
xlat
sbb
dec
mov
sub
lds
push
movl
push
hlt
push
getsec
dec
imul
mov
sub
leave
cmpsb
jmp
pop
imul
inc
add
jmp
sbbb
mov
mov
enter
mov
cmp
inc
xchg
jecxz
adc
imul
mov
push
out
aaa
aaa
or
and
stos
mov
dec
cmpsb
sub
add
xor
pop
xchg
cmpsb
stos
push
pminsw
adc
out
cmp
mov
add
ljmp
imul
sub
adc
in
dec
fidivl
mov
xor
cltd
push
jmp
mov
pop
pop
iret
or
stos
dec
cmpl
cwtl
mov
mov
adc
shrl
and
out
pop
in
dec
sub
jno
jmp
arpl
movsl
pop
ss
stos
pop
leave
lods
xor
dec
inc
mov
test
sbb
xor
in
jmp
sub
push
sarl
mov
stos
aaa
data16
clc
add
sub
repnz
aam
repz
mov
cmp
lahf
or
sub
iret
out
mulb
out
jge
shlb
cmpsl
out
add
pop
push
ret
leave
and
mov
jp
jge
in
jae
addl
idiv
mov
xchg
fs
mov
push
push
in
lock
ja
stos
dec
mov
mov
negl
mov
xchg
xorb
dec
dec
and
mov
or
push
movsb
lret
cmp
icebp
daa
js
cmp
mov
dec
add
fwait
aam
pop
punpcklwd
sahf
and
je
mov
and
shrl
add
adc
cmc
push
scas
mov
mov
rep
leave
in
daa
fimull
fiadds
popa
mov
lcall
mov
fwait
test
pop
and
dec
ret
mov
imul
pop
jp
sbb
data16
mov
add
pop
jg
idivl
mov
in
out
in
test
sbb
dec
sub
outsb
cmpsl
cld
fadd
cmp
and
into
js
mov
inc
popf
fwait
outsl
xor
or
sub
inc
pushl
jo
inc
and
movsl
and
pop
lock
jmp
add
push
mov
or
cwtl
sub
je
mov
mov
and
mov
out
aas
jno
mov
cmpb
pop
dec
sub
addr16
or
dec
pusha
cmpsb
add
push
leave
sub
leave
adc
lea
jnp
imull
into
out
xchg
subl
adc
and
jb
hlt
lret
inc
popl
cltd
adc
jle
dec
jno
and
inc
and
xchg
dec
push
mov
mov
fisubrs
mov
push
jo
xor
and
imul
popa
rcll
insl
fiaddl
dec
lock
daa
pop
fcoml
dec
lret
inc
cltd
sbb
fs
nop
add
sahf
and
mov
jno
sbb
jl
insl
sbb
movsl
mov
aad
test
jge
shr
sub
cwtl
loopne
adc
test
xchg
aam
cmp
inc
and
fstl
je
or
pop
cmp
jecxz
loope
fs
mov
and
test
lret
add
and
sub
cmp
in
and
sub
imul
rcll
pushf
mov
adc
lcall
xor
dec
inc
out
orl
dec
and
or
test
decl
mov
imul
push
jp
loop
ret
js
sbb
fisttps
daa
addr16
cmp
jo
jo
icebp
mov
idivl
int
jae
xchg
add
mov
xchg
or
repnz
in
fstpt
arpl
push
xchg
xor
imul
shll
ds
push
dec
sbb
movsl
subb
negb
mov
dec
xchg
xor
and
inc
inc
dec
stos
and
inc
bswap
in
fxch
mov
mov
inc
loopne
xor
and
push
call
loopne
ds
mov
imul
into
jne
test
mov
aam
and
jno
cmpsl
add
fmuls
xchg
pop
xchg
sbb
push
lahf
in
mov
cld
sub
cmp
ret
lock
out
inc
repnz
mov
sbb
jmp
mov
cmpsl
mov
test
xor
mov
js
ror
addr16
pushf
stc
adc
push
fdivrs
ss
sub
daa
push
in
mov
pop
movl
subl
out
mov
ret
shll
arpl
aad
hlt
dec
dec
sub
imulb
repnz
cltd
jns
loope
mov
hlt
stos
sub
fcompl
movsb
or
pusha
shll
cli
push
xchg
push
add
pop
loope
into
roll
sbb
jmp
cltd
int
out
push
or
push
out
pusha
notl
add
inc
inc
mov
jne
push
scas
je
out
xchg
lret
sbb
int3
fs
xchg
and
cmpsb
or
and
cmc
fstpl
stos
ljmp
inc
int
lods
bound
pushf
fstpt
divb
aad
out
fildll
cmp
js
sbb
call
mov
cmc
aaa
dec
popf
mov
xchg
fstpt
xlat
cmc
scas
cltd
sub
xor
xor
arpl
mov
les
scas
test
adc
dec
jle
xchg
insl
sbb
pop
lods
cld
push
sbb
jg
fisttps
popa
jnp
pop
pop
lock
cmpsl
les
inc
dec
inc
ljmp
out
stos
jp
add
xchg
mov
add
mov
shrb
dec
xor
mov
jecxz
push
pushf
addr16
jmp
mov
fists
mov
add
in
aam
pop
enter
mov
sub
lahf
mov
movsl
cmp
in
and
ja
fcoms
dec
mov
bndstx
or
fprem1
nop
test
sbb
dec
dec
xchg
or
xchg
std
pop
jmp
push
lods
movsb
pand
add
cmp
xchg
jmp
aaa
cmp
and
jns
ficoms
mov
imul
aaa
and
mov
shrb
lods
pop
insl
scas
jno
adc
rcl
aam
out
aam
jmp
leave
int3
out
pusha
xor
icebp
add
adc
cld
xor
or
lret
daa
lcall
adc
stc
ret
and
das
icebp
jnp
mov
cmp
hlt
adc
jecxz
mov
or
pop
fs
mov
jns
pop
pushf
std
test
sbb
mov
pop
adc
ljmp
test
mov
xor
loopne
in
push
mov
pop
decl
aad
adc
mov
fs
sub
popf
xchg
cltd
movsl
stc
out
xchg
pop
pop
jge
mov
sbb
pop
out
mov
xor
mov
pop
rclb
lret
xchg
sar
xchg
lods
or
cltd
sbb
jecxz
shrl
out
mov
lcall
add
nop
inc
sub
jmp
xchg
clc
das
or
mov
ret
les
movsl
outsl
fnstsw
add
out
ret
mov
idivb
or
pop
pop
cli
popa
adc
les
jmp
iret
and
cwtl
push
push
lds
or
shll
xchg
outsl
cmp
jns
xchg
test
push
push
imul
jp
cmp
push
push
daa
pop
dec
scas
mov
sbb
jecxz
data16
jmp
ficompl
filds
leave
cwtl
into
pop
sbb
xchg
fcoml
adc
mov
aas
leave
andl
xchg
cs
out
test
add
push
fstpl
pop
mov
movl
cwtl
loopne
pop
dec
test
scas
pop
sub
ud2
push
lods
popf
jbe
xchg
imul
shrl
rorl
movsl
out
cmp
jmp
pusha
insl
mov
push
nop
sub
mov
out
insl
movsl
cli
test
push
inc
ds
dec
mov
push
in
js
jle
popf
inc
mov
mulb
push
xchg
data16
xor
xor
pop
xor
and
or
push
lds
fisttpl
push
xchg
rcll
frstor
inc
fucomp
xchg
mov
mov
jne
shrl
dec
jo
std
out
bound
or
xchg
stc
jecxz
loop
xor
mov
xchg
lret
or
icebp
xchg
adc
jmp
orl
fadd
bound
popf
lods
iret
out
inc
es
cmp
scas
lods
xchg
jge
jno
test
pop
out
mov
call
cmp
mov
mov
adc
in
push
stos
das
fsubrl
in
push
loope
fwait
je
inc
jae
cmpsl
arpl
mov
ret
xchg
ret
push
ficomps
cmp
lods
movsb
cmc
mov
aaa
push
hlt
mov
jb
mull
insb
stos
cmpsl
inc
adcb
inc
jb
es
aam
out
test
sub
add
icebp
popa
adc
adcl
dec
mov
pop
push
bound
ja
in
adc
mov
leave
sub
cs
repnz
cmp
jbe
inc
sbb
sub
pushf
in
mov
xor
outsb
in
and
cs
push
xchg
xor
jns
adc
sbb
pop
mov
mov
push
mov
repnz
mov
leave
xor
sbb
pop
js
fadds
test
mov
pop
and
cmp
pushf
sbb
outsb
js
mov
xchg
testl
addr16
mov
push
stc
xchg
mov
cmp
pushf
sti
sub
push
subb
test
jg
sbb
cmp
mov
in
pop
or
add
add
xor
out
std
nop
stos
arpl
out
jb
sub
or
lds
fwait
jg
movsl
mov
ficoms
pusha
sti
or
ret
xor
push
mov
add
xor
cmp
xchg
sub
and
out
repz
cltd
cld
lds
xchg
lds
jge
sub
push
inc
inc
push
xchg
pop
aam
mov
dec
daa
js
mov
mov
movsl
dec
add
sbb
vpand
jl
dec
mov
xchg
or
inc
orl
out
fcoml
into
int3
dec
mov
xchg
pop
gs
and
mov
lcall
das
mov
xchg
popf
fwait
push
sbb
dec
push
jl
mov
js
add
sub
and
test
jmp
in
mov
or
scas
or
addb
aaa
stc
push
sbb
imul
add
out
bound
jl
sti
push
xchg
cs
dec
pop
rcrl
outsl
push
xor
inc
inc
jecxz
cmpsb
fdivs
xor
mov
xchg
mov
out
add
sar
movsl
mov
add
es
int3
and
out
mov
lcall
xchg
pop
add
jns
jmp
push
sahf
inc
jno
mov
shlb
mov
stos
sti
enter
loopne
std
in
jb
in
rcll
add
xchg
adc
pushf
and
mov
addr16
sub
xor
mov
pop
test
xor
xchg
lock
imulb
cmp
push
and
ds
mov
xchg
int
nop
jns
data16
fcomps
aad
jp
add
sbb
mov
fs
mov
pop
pop
inc
mov
cli
stos
jns
and
mov
divl
cmpsl
cmp
xorl
inc
and
jo
xor
and
shrb
ficompl
out
fs
mov
imul
inc
mov
or
jmp
lods
mov
pop
mov
pop
wrmsr
enter
fisttpl
frstor
sbb
movsb
push
mov
icebp
inc
cmp
addb
adc
xchg
cmpsl
adc
xchg
aaa
lea
adc
test
mov
add
int3
andb
push
int
pop
mov
cmp
cmp
scas
adc
sar
jecxz
aam
es
lds
rcl
addl
loope
shll
xchg
enter
fisubs
outsl
mov
test
sbb
push
in
jmp
sub
ds
ds
cwtl
push
daa
mov
jbe
jp
or
sbb
into
mov
imul
movsl
jo
out
fstpl
in
into
xchg
enter
xchg
loope
mov
repz
mov
dec
nop
or
mov
mov
aas
repnz
jb
imul
mov
addr16
outsb
or
jnp
addr16
and
adc
adc
lcall
mov
test
jle
sub
lahf
cmpsb
out
xchg
xchg
mov
call
inc
out
sbb
ds
shrb
cwtl
repnz
loopne
mov
test
test
xor
stos
cltd
dec
lds
dec
inc
xchg
je
sub
fwait
rcr
mov
aad
scas
ds
mov
lcall
call
lea
and
loopne
out
out
clc
or
push
xchg
fs
pop
xor
sbb
fwait
add
dec
loopne
or
xor
loopne
pop
mov
lret
das
sbb
outsb
jle
ficoms
jge
fdivs
lods
inc
pop
push
dec
mov
outsl
xor
push
jle
or
adc
fisttps
imul
xor
cwtl
int
dec
jp
xchg
lods
fs
adc
mov
pop
ljmp
xchg
sub
push
movsl
les
and
mov
ret
push
adcb
movb
arpl
in
aam
call
mov
and
lods
push
mov
hlt
out
inc
sbb
xor
insl
loopne
add
or
dec
jns
test
fidivrs
movsb
mov
mov
push
xor
xchg
cmp
dec
imul
insb
dec
sub
jae
sbb
mov
add
or
adc
lret
je
loop
push
int3
sti
xchg
and
jbe
mov
mov
adc
pop
into
mov
dec
pop
jmp
out
dec
mov
or
pushf
aaa
in
movsl
jb
jg
mov
aad
sahf
and
outsb
cmpb
roll
aad
popa
ss
mov
adc
icebp
movsl
fisttpl
ds
adc
pop
test
loopne
pop
and
fisubrs
add
pop
xor
push
cwtl
mov
jle
fwait
mov
push
sarb
insb
mov
lret
mov
cli
jp
jecxz
jge
mov
enter
ret
dec
sti
cld
pop
shrb
pop
cmp
add
cwtl
subb
scas
aas
adc
mov
push
icebp
cs
lods
mov
cmc
cmp
cmp
sti
stc
push
dec
scas
dec
out
pop
pop
out
jg
inc
scas
sbb
pop
xchg
movsb
icebp
adc
hlt
pop
pop
lcall
mov
mov
jae
out
push
push
push
stc
lea
dec
fistpll
pop
sub
or
sbb
jne
push
stos
cwtl
lret
js
icebp
xor
pop
cwtl
xor
sbb
bound
lea
aam
and
adc
push
mov
xor
sub
add
outsb
cmpsl
push
cmp
cmpb
add
adc
dec
sbb
inc
or
popa
mov
aam
pop
setb
or
and
sub
daa
push
cmp
fwait
dec
push
xor
or
xchg
loop
lahf
into
sbb
inc
xchg
scas
sti
adc
ja
add
push
mov
pop
adc
adcl
push
sub
sub
fninit
test
xor
into
sub
lock
and
mov
lock
inc
cs
test
or
xor
cmp
sbb
add
cmp
add
cltd
aam
out
fwait
ret
cmp
int
jnp
adc
dec
orl
stos
fsubs
push
loope
jno
insb
pop
clc
aaa
or
cmp
adc
pop
test
lock
jbe
pop
rorl
mov
insl
or
in
js
jnp
fstpl
inc
movsl
jno
sub
les
jo
aas
loope
cmp
mov
mov
in
or
xor
inc
inc
scas
shl
xorb
subl
push
mov
lds
jne
in
fimull
fs
cs
aaa
add
sub
mov
into
sbb
in
loopne
outsb
push
insb
mov
sub
stos
test
jnp
aaa
fstps
repz
iret
jnp
mov
pop
mov
icebp
pop
mov
in
pusha
bound
cmp
mov
sbb
lret
loope
notb
sbb
daa
or
insb
sbb
pop
push
fisubs
sbb
sbb
pop
inc
and
ljmp
int
adc
ret
push
lahf
adc
mov
mov
push
mov
sbbb
ficomps
into
push
insb
in
nop
sbb
outsl
or
stc
inc
cmp
mov
call
test
je
jbe
mov
repz
fstl
sbb
push
test
pop
cmpb
fdivl
sti
jmp
mov
mov
inc
sub
nop
dec
mov
inc
aaa
or
sub
mov
mov
jle
push
ljmp
lods
mov
add
movsl
sub
mov
push
adc
loopne
mov
cld
mov
pop
clc
fmul
ss
sub
movsw
sbb
mov
and
ficoml
dec
lea
outsl
jb
mov
movsb
arpl
test
out
cmp
push
cwtl
cmc
outsl
cmp
movsb
data16
in
inc
lret
push
xor
cld
pushf
xchg
cmp
stos
imul
inc
xor
insb
arpl
stc
xor
out
jl
pop
dec
push
loopne
sub
sub
sbb
adc
sub
push
imul
outsb
mov
cmp
movsb
imul
inc
mov
xchg
mov
cmp
mov
rcll
adc
jo
pop
sub
jge
xor
sub
jnp
or
push
lahf
lock
and
aad
xchg
fidivrl
mov
test
pop
and
or
jno
jmp
ret
xchg
dec
jo
and
lods
repnz
push
pop
dec
stos
in
jmp
in
cld
icebp
xchg
pop
mov
ljmp
je
shll
or
js
ja
outsl
push
mov
mov
or
rcrl
jb
push
mov
adc
jle
sbb
sub
sbb
addb
mov
lods
rolb
or
jne
inc
mov
aas
lcall
je
push
sbb
xchg
andb
out
mov
push
scas
pop
addr16
pop
mov
cld
and
pop
ljmp
jp
inc
mov
cmc
lods
sahf
add
ret
mov
xchg
lcall
jae
push
push
dec
push
mov
mov
aad
mov
aam
inc
cmp
dec
jne
testl
mov
dec
outsb
mov
pop
mov
mov
dec
fldt
sbb
lea
popa
or
jp
andl
scas
xor
leave
pusha
int3
mov
test
insb
je
ret
or
cmp
jb
es
fisttpll
and
add
jecxz
jbe
or
cld
adc
incb
sbb
or
jno
call
fwait
sbbl
dec
mov
add
fdecstp
xchg
cmp
add
mov
pop
jno
add
xlat
fisttpll
mov
int3
pusha
int3
xchg
xor
dec
jecxz
xchg
in
fisubrl
add
js
or
inc
mov
ret
or
mov
push
loop
fs
mov
pop
and
fisttpl
mov
ss
xor
lcall
test
test
lret
sub
push
sahf
arpl
pop
int3
jp
int
inc
add
call
dec
mov
dec
jge
jle
jbe
packuswb
inc
or
aaa
pop
xchg
sti
iret
cmovns
rcrb
popa
xchg
nop
push
loope
shll
mov
aas
ror
pushf
adc
jecxz
out
push
xorb
xchg
sti
push
jecxz
roll
pop
call
dec
mov
pop
lret
pop
mov
into
les
fidivrs
mov
bound
pop
pushf
mov
in
dec
dec
sbb
aas
jle
mov
inc
jbe
or
cmp
inc
roll
push
push
call
xor
cmpsl
jne
mov
jne
movsb
in
pop
pop
jmp
je
aad
sbb
fistpl
je
mov
add
ljmp
and
fsubrl
push
imul
pop
ss
fstpl
jmp
sbb
and
clc
lahf
jge
icebp
ljmp
adc
sbb
outsl
jle
lock
vmulss
fistpl
adc
mov
xor
negl
fisttps
fcomp
addr16
jb
out
addr16
popa
xchg
inc
lock
sub
mov
gs
mov
inc
pop
sbb
out
push
cmp
sbb
add
mov
xor
lods
out
xchg
call
aas
pop
repz
mov
outsl
es
mov
sbb
lds
dec
xor
cwtl
mov
fwait
lret
lret
sub
cwtl
repz
inc
cmp
jg
sbb
push
test
pushl
dec
inc
adcb
insl
inc
ja
and
mov
and
popf
jecxz
sbb
cwtl
cmp
adcb
into
cmpsb
jmp
mov
xchg
dec
jo
push
lock
arpl
push
fistps
inc
push
aas
inc
xchg
add
fidivrs
pop
cmc
adc
into
aaa
pop
lcall
lea
aad
xchg
push
out
add
or
xchg
sub
add
mov
jb
int3
push
std
push
ficoml
fmulp
clc
pop
out
mov
lods
ds
nop
and
inc
inc
aas
add
mov
call
sub
xor
sub
ds
mov
xor
pop
cs
mov
movsl
enter
or
mov
shl
lret
push
inc
cli
jmp
cmpsl
test
fwait
or
add
xor
cld
sub
mov
fsubs
sub
pushl
dec
std
inc
out
jp
push
sbb
inc
jo
jae
inc
push
push
stos
and
scas
cmp
je
sub
xchg
subb
cmp
gs
repnz
mov
adc
xchg
cltd
mov
loop
std
push
or
mov
mov
pop
cld
or
xchg
and
in
out
ds
mov
rcll
xchg
scas
popf
mov
push
ret
xor
jne
inc
jge
push
lahf
mov
lock
lock
mov
iret
jae
shlb
xchg
aas
or
add
out
xor
dec
or
shl
subb
pop
divb
adc
push
dec
mov
xlat
sub
add
lods
sbb
mov
mov
lahf
inc
dec
jmp
jg
out
add
lahf
mov
pop
test
cmc
aam
jle
fistl
bound
sub
outsl
jne
lahf
adc
pop
ja
loope
adc
mov
sbb
xlat
sub
enter
cmp
shrl
xor
aad
lahf
xchg
fwait
outsb
jns
and
sub
or
pop
inc
sub
ds
mov
cmpsl
sbb
or
mov
stos
lahf
jae
movsb
add
pop
pushl
xchg
push
lret
pop
inc
iret
pusha
stos
add
out
movb
sub
inc
adc
sub
pop
daa
inc
push
mov
mov
ss
insl
pusha
sbb
scas
inc
xchg
jmp
jecxz
lret
push
mov
cmpb
mov
rcr
mov
roll
fwait
inc
call
movsb
fcomps
mov
lods
xor
push
iret
popa
fwait
or
jne
outsb
and
sbb
mov
mov
dec
cs
xchg
sahf
dec
ret
fcoml
push
sub
test
movsl
and
pushf
and
xor
js
jbe
mov
shll
clc
jmp
aam
cmpsl
sar
xchg
mov
jnp
mov
xor
fiadds
xlat
arpl
sbb
test
dec
mov
test
dec
mov
mov
fcmovb
ja
pushf
push
or
test
xchg
pop
sbb
movsb
cmpl
jne
cmp
icebp
dec
cs
std
andl
scas
fists
dec
ret
cmp
cwtl
xchg
scas
js
bound
mov
or
or
mov
xchg
cmp
push
pop
cmc
sbb
or
adc
shlb
js
cmp
mov
lahf
out
mov
std
and
stc
ret
js
inc
jbe
std
test
mov
fsubs
shlb
mov
ret
cmovl
jg
mov
pusha
xchg
mov
add
inc
xor
dec
je
jae
sbb
inc
inc
ss
fstpt
xchg
sub
popa
andl
cmp
shlb
test
and
sbb
lods
aam
sub
std
dec
je
xor
dec
int
movups
arpl
scas
and
xchg
dec
in
bound
xor
push
and
call
push
cmp
scas
mov
lahf
pop
mov
iret
inc
push
lcall
xchg
je
xchg
fwait
xchg
cmpsb
push
je
pop
xchg
lds
adc
lock
pop
ds
cwtl
mov
mov
add
cwtl
insb
mov
out
mov
mov
or
orb
push
cltd
inc
stos
les
sar
and
pop
out
xor
cmp
xor
xchg
in
dec
popa
loop
and
dec
rcrl
ret
push
mov
adc
xchg
push
cmp
xor
jmp
adc
inc
sbb
adc
or
insl
std
mov
fisubs
pop
pop
das
push
mul
sbbl
inc
jecxz
or
aad
add
rclb
loop
mov
data16
out
mov
sbb
jge
stos
ret
into
lods
in
mov
pop
push
inc
ss
scas
inc
jg
nop
jge
cwtl
push
nop
pop
cmpsl
call
sub
jle
bswap
fndisi(8087
jl
sbb
jb
mov
push
sahf
adc
pop
jbe
mov
mov
es
faddl
jge
cmpsl
ret
pusha
stos
mov
out
push
mov
adc
out
aaa
dec
icebp
pop
jbe
mov
pop
fbstp
je
ljmp
pop
cmpb
int
mov
mov
sahf
hlt
mov
add
fdivrl
xchg
cmpl
mov
push
in
dec
stos
testb
pop
xchg
add
lcall
jg
gs
mov
stos
mov
fadds
add
pop
lods
pop
mov
fwait
and
mov
pop
push
loop
dec
inc
or
xor
stos
lret
dec
lods
and
std
into
insb
sub
stc
mov
int3
mov
mov
mov
cmp
lea
iret
popa
adcb
clc
sti
sub
adc
sbb
mov
add
in
iret
movsb
gs
aad
push
mov
mov
inc
push
sub
xchg
mov
mov
mov
.byte
add
add
add
or
cwtl
push
add
add
add
addb
addb
add
cwtl
add
addb
add
enter
add
add
and
add
inc
add
addb
add
nop
add
orb
add
add
add
add
adcb
add
sub
add
inc
add
addb
add
add
add
add
add
add
add
lods
push
add
add
add
add
add
sub
add
jo
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
add
add
add
add
addb
add
add
add
add
add
add
sub
add
add
call
add
add
add
addb
add
sbb
addb
add
add
addb
add
pusha
add
addb
add
js
add
nop
add
orb
add
test
add
rolb
or
add
fadds
orb
add
add
orb
add
and
add
cmp
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
loopne
add
clc
add
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
mov
add
mov
add
add
add
add
push
add
call
add
add
pop
add
sbb
add
xor
add
dec
pop
add
pusha
pop
add
js
add
nop
pop
add
test
add
add
add
add
add
add
add
mov
add
rolb
adcb
add
add
add
add
add
add
or
add
add
pop
add
or
add
and
add
cmp
add
push
or
sbbb
add
orb
subb
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
popl
add
enter
add
add
add
or
addb
add
or
adcb
add
adc
add
sub
add
inc
or
adcb
add
jo
add
mov
add
mov
add
add
add
add
or
addb
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
data16
add
or
addb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fmuls
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fmuls
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
or
add
add
add
add
add
add
sbb
add
add
add
add
add
add
sub
add
add
add
add
add
add
cmp
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fmuls
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fmuls
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
push
add
add
add
add
add
add
add
pop
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
sarb
add
in
add
add
add
fdivrl
add
xor
add
in
add
add
add
adc
add
add
add
add
pushf
inc
add
mov
add
in
add
add
add
push
inc
add
test
add
in
add
add
add
clc
inc
add
and
add
in
add
add
add
pop
xor
add
in
add
add
add
hlt
das
or
push
add
add
add
add
add
in
add
add
add
movsb
sub
add
add
add
add
add
add
add
and
add
push
add
in
add
add
add
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
or
add
in
add
add
add
sbb
or
test
add
in
add
add
add
mov
pop
add
add
in
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
rolb
push
add
add
add
add
add
in
add
add
add
in
mov
add
add
add
add
add
add
in
add
add
add
sbb
pop
add
add
in
add
add
add
je
pop
add
add
add
add
add
pop
add
add
in
add
add
add
movsb
xchg
pop
add
add
in
add
add
add
cld
test
add
add
add
add
add
add
in
add
add
add
sub
pop
add
add
in
add
add
add
test
add
add
add
add
add
dec
pop
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
in
add
add
add
jl
pop
add
add
add
add
add
add
add
das
pop
add
add
add
add
add
pop
add
add
add
add
add
add
push
add
in
add
add
add
cld
sbb
add
add
in
add
add
add
push
cmc
push
add
add
add
add
add
add
in
add
add
add
and
push
add
add
add
add
add
add
in
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
in
add
add
add
cmp
add
add
add
add
add
add
add
add
add
in
add
add
add
enter
push
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
aam
add
push
add
add
add
add
add
add
dec
add
sahf
add
add
add
add
add
add
dec
add
js
add
in
add
add
add
inc
dec
add
scas
add
add
add
add
add
add
dec
add
mov
add
in
add
add
add
movsb
dec
add
adc
add
in
add
add
add
insb
inc
push
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
inc
push
add
add
add
add
add
add
add
add
in
add
add
add
cwtl
inc
push
add
add
in
add
add
add
call
add
add
add
add
add
add
inc
push
add
add
in
add
add
add
rolb
adc
add
in
add
add
add
lods
inc
push
add
add
in
add
add
add
cwtl
inc
push
add
add
in
add
add
add
mov
add
add
add
add
add
add
push
add
inc
add
add
add
add
add
add
add
dec
add
dec
add
inc
add
dec
add
adc
inc
add
push
add
pop
add
add
inc
add
inc
add
push
add
dec
add
add
and
xor
cltd
mov
loopne
mov
sub
add
in
repz
jbe
sbb
shr
adc
cmp
jo
les
xchg
mov
inc
cmovp
inc
xor
popf
or
mov
jbe
test
mov
lahf
mov
nop
jmp
push
stos
fmuls
stos
popl
nop
cmp
call
and
mov
push
jmp
aas
sbb
mov
mov
aad
and
dec
cmc
sub
push
lock
leave
rorl
sub
mov
add
and
mov
xorl
movsl
jle
xor
adc
in
pop
jmp
adc
out
and
inc
push
jno
out
mov
dec
xchg
call
add
arpl
pop
jns
xor
sbb
sub
or
inc
pusha
pop
es
jge
and
jg
outsl
inc
jne
loope
xorl
xlat
mov
jge
sahf
jl
pop
jb
adc
and
shlb
jnp
and
sbb
mov
dec
mov
push
mov
std
add
jge
jae
ret
mov
push
aad
dec
mov
fnstsw
push
cmp
dec
test
and
lahf
cltd
push
mov
popa
pop
loopne
fstps
mull
call
cltd
xor
loopne
test
jne
adc
das
jb
lods
lods
and
leave
aam
pop
stos
insb
dec
lcall
js
aad
sub
push
mov
push
and
xchg
and
mov
pusha
adc
jae
loopne
loope
sbb
inc
fidivs
jbe
jbe
and
aam
lds
mov
outsb
fnsave
cmp
jge
fldl
js
xchg
movsb
jle
pop
inc
mov
pusha
mov
cmp
xchg
popa
push
mov
pop
add
sbb
out
sbb
xchg
test
hlt
push
adc
mov
sub
push
lcall
lea
mov
add
xor
repnz
cmp
pop
dec
mov
popf
out
mov
inc
rolb
data16
jp
inc
test
jne
push
ret
repz
mov
loopne
negl
ja
mov
cwtl
shrb
repz
popf
cmc
rcll
dec
cmp
lea
and
lcall
jmp
lret
xchg
xchg
mov
movl
push
jb
and
push
dec
insb
inc
sti
xchg
xchg
cmp
insl
rcrb
insl
loop
xor
mov
add
push
out
sti
cmp
mov
ja
mov
iret
lcall
fs
sub
sbb
add
jne,pn
in
clc
lods
mov
enter
into
inc
fnsave
rcll
scas
sub
mov
xchg
mov
mov
ljmp
cmp
ja
push
fistpll
nop
daa
sub
insl
rcll
mov
add
insb
imul
outsb
mov
jae
or
fdivl
sbb
es
dec
jb
pop
xor
mov
movsb
in
je
outsl
idivl
sbb
mov
jo
pushf
jno
mov
imul
push
or
jns
lods
insb
lea
push
mov
sub
mov
cmpsl
push
into
xchg
fprem1
lods
xor
aaa
push
and
sbb
ret
sub
pop
dec
xor
mov
out
jns
in
sbb
inc
inc
xchg
dec
adc
mov
rcrb
je
arpl
adc
sbb
sbb
inc
movb
xchg
mov
je
fildll
or
adc
inc
dec
shlb
test
mov
mov
popa
bound
addr16
pushf
lods
lahf
mov
js
fs
inc
push
dec
sub
repz
or
shrl
xor
ds
mov
xchg
and
jns
push
outsl
and
das
push
cmpsl
add
and
add
sub
loopne
and
or
mov
sbb
or
xor
ret
cmp
dec
mov
push
rcl
cltd
xchg
jle
xchg
imul
mov
mov
adc
popa
pop
and
mov
es
in
outsl
jge
lock
sbb
jge
mov
call
xchg
shlb
in
add
stos
mov
sbb
mov
mov
cmp
lret
jmp
xor
cmp
pop
lock
hlt
push
mov
addr16
mov
mov
scas
lods
xor
int3
pop
mov
call
mov
in
xchg
lret
xor
lahf
xor
xchg
and
lods
insb
daa
xchg
xor
pop
xchg
cmp
fldenv
negl
inc
movsl
fisttpll
movsb
sub
cmp
cmp
sub
shlb
psubw
shll
mov
pop
cmpsl
loop
test
and
mov
insl
cmpl
mov
fs
les
repnz
pusha
push
faddl
rcrl
inc
and
ret
pop
adc
hlt
or
pushf
subl
lret
xchg
imul
out
aad
push
and
pextrw
in
mov
fmuls
subb
jg
pusha
jbe
mov
pop
xchg
xchg
std
mov
jg
js
cltd
fsubs
pop
not
je
arpl
sahf
imul
pop
and
mov
insl
idivl
cmpsb
push
xchg
stos
fwait
mov
iret
paddsw
int
inc
adc
push
or
mov
add
fldcw
mov
or
add
mov
dec
cmp
inc
mov
arpl
int
lret
aaa
and
imul
in
sbb
test
xchg
movsl
or
orl
inc
or
cmp
daa
imull
push
call
jecxz
mov
out
xchg
je
cmpsb
jne
lret
pop
jne
jg
jne
loopne
fnstcw
dec
lret
add
xor
fsubrs
lea
mov
popa
test
out
add
cmpsb
ds
sbb
pop
mov
pusha
aas
jge
rorl
dec
aam
ljmp
push
jo
mov
hlt
insb
pushf
fistl
shlb
jno
addb
scas
cmp
pushf
mov
cwtl
jae
dec
pop
aas
push
dec
mov
xchg
inc
mov
mov
jp
xor
stos
insb
mov
inc
push
fstps
repnz
inc
dec
outsb
mov
inc
lods
inc
cmpsb
xchg
mov
inc
cmp
xor
dec
inc
cmpsl
mov
mov
or
sbb
outsb
inc
test
or
imul
dec
sub
shrb
int
rcrl
call
stc
xor
dec
icebp
aam
jb
imul
pop
cmc
mov
adc
roll
sub
lahf
jecxz
jmp
push
jae
add
push
push
sbb
psrlw
jnp
cmp
xacquire
add
adc
mov
lods
adc
xchg
test
push
js
adc
test
iret
xchg
xor
std
cmp
lret
push
popa
cmpsl
aaa
add
fldl
mov
out
stos
xor
add
inc
mov
and
scas
mov
lods
pop
pop
mov
call
aas
push
sub
repz
adc
xlat
out
xor
xchg
stos
adc
mov
out
lahf
push
decl
shll
stos
popa
dec
lock
cwtl
dec
stos
fs
and
xchg
fistps
ss
stos
lock
adc
adc
and
push
scas
loop
lea
sub
lahf
mov
sub
andb
daa
inc
test
mov
cmc
mov
add
in
mull
test
add
cmp
hlt
test
rclb
jg
xchg
add
and
in
mov
inc
stos
mov
out
andb
sbb
push
pop
cmp
mov
sbb
es
inc
shr
popa
mov
xchg
lock
jecxz
push
dec
clc
cmp
jp
add
jmp
and
scas
sbb
pop
and
pop
push
mov
jl
xor
pop
and
xor
popa
nop
nop
fcmove
mov
inc
lcall
adc
nop
sbb
xor
jl
cmp
fbstp
or
sbb
fadds
negl
inc
pop
mov
fistl
add
popl
and
jae
cs
rcll
ljmp
int
int
pushf
sub
scas
jg
sbb
negl
cmp
je
pop
inc
xchg
out
inc
mov
mov
and
aaa
test
or
or
mov
leave
fs
jns
mov
aaa
xor
jb
xchg
sub
lret
inc
sub
and
mov
frstor
es
out
dec
and
add
push
push
in
fcoml
rcll
dec
aad
out
lock
dec
push
and
mov
cmpsl
scas
adc
cmp
sbb
hlt
pop
rorb
sub
ret
insl
cmp
cld
dec
stos
adc
adc
ret
or
xchg
jbe
jle
add
or
sbb
and
cld
fwait
mov
and
fcoms
lret
adc
mov
fldcw
jnp
jg
sub
cli
imul
xchg
pop
fs
cmp
repnz
add
xchg
inc
in
test
push
movsl
cmp
xlat
pop
iret
push
jae
ja
leave
lods
jl
lock
mov
dec
pushf
cmp
iret
jmp
jb
xchg
bound
ret
push
pop
fnstcw
aas
lea
test
adc
out
mov
cmp
mov
inc
mov
scas
sbb
enter
dec
rcrb
loopne
pusha
arpl
mov
lcall
shl
or
and
outsb
mov
rolb
lcall
out
add
cld
movsl
dec
daa
inc
and
stos
test
xchg
jbe
pop
pop
adc
aas
iret
pop
fnstcw
jbe
cmp
fldl
enter
add
enter
movl
repz
in
jp
in
xor
pusha
pop
divb
lcall
adc
stos
inc
mov
sarb
gs
stos
xchg
adc
jbe
icebp
lea
jle
mov
rcrl
aaa
pop
xor
test
xor
mov
jne
push
pop
decb
negb
pushf
push
cmc
push
mov
mov
sbb
mov
dec
in
lds
cmp
pop
pop
in
aad
cld
or
jp
xchg
and
aam
push
lret
mov
mov
push
xor
xor
leave
leave
cmp
pop
inc
mov
push
sbb
or
add
cli
ja
push
xchg
pop
clc
mov
outsl
jl
ret
and
sbb
pop
jge
or
jae
xor
or
mov
sub
lret
jle
insl
mov
sub
inc
into
pop
mov
add
lcall
mov
int3
repz
mov
stc
gs
xor
es
pop
leave
cmpsl
push
mov
movsb
cmc
hlt
jno
lods
test
arpl
loop
cmpsl
jg
mov
andl
int3
outsb
test
inc
bound
cmpsl
push
out
aam
adc
mov
adc
ja
and
xor
arpl
out
fs
add
jae
push
add
lds
shlb
jmp
not
es
scas
nop
mov
jl
in
or
mov
pop
sub
adc
mull
push
xor
out
call
sub
std
outsb
js
mov
jnp
insl
inc
push
xor
push
and
sahf
mov
add
int3
lods
daa
push
std
jnp
je
fidivrs
xlat
sub
xor
adc
sbb
fnstsw
mov
imul
das
mov
rcll
cwtl
addr16
dec
dec
pushf
pop
jae
cmp
mov
xor
jo
push
loopne
mov
jg
jbe
or
adc
aad
roll
idivl
jge
pop
push
subl
push
push
sbb
mov
into
sbb
cltd
test
jle
scas
sub
int
cli
test
out
jbe
push
pop
sbb
jmp
mov
ffreep
lods
xor
inc
test
mov
cmp
scas
pop
pop
mov
sbb
adc
sub
mov
out
push
mov
es
pushf
stos
cmpsb
cwtl
arpl
ljmp
inc
xor
dec
jecxz
fucomip
scas
outsl
dec
dec
pop
dec
test
out
popa
repnz
arpl
dec
sbb
inc
popf
jno
repz
and
enter
fpatan
push
mov
jmp
jno
scas
adc
lahf
jmp
pop
push
inc
push
mov
fidivrl
cmp
rcl
cmp
jg
sbb
lahf
xchg
idivb
push
cmp
xchg
sub
dec
sub
sti
xor
jns
jnp
mov
adc
jle
push
adc
mov
mov
lds
and
cld
cmp
out
adc
cli
mov
outsl
es
cmpsl
mov
stos
cmp
mov
and
es
sbb
js
or
pop
ss
mov
cmp
mov
cwtl
push
jecxz
pop
xor
fwait
lahf
jae
inc
fwait
loope
stc
push
pop
sub
and
test
or
pop
sbb
mov
inc
mov
sahf
pop
out
fstpl
push
pop
push
mov
dec
aad
mov
inc
and
imul
movhps
arpl
stos
push
js
push
xchg
ja
or
ja
lahf
or
mov
out
jbe
scas
mov
jle
push
js
sub
lds
filds
cmpsl
jp
shrb
or
fmul
xchg
cmp
push
sbb
pusha
adc
ret
mov
ss
das
pop
iret
jmp
sbb
cmp
sbb
jg
nop
test
xchg
sar
cmpsb
push
mov
mov
inc
xchg
ret
das
out
lods
mov
dec
dec
and
std
out
clc
addr16
push
in
int
cmp
test
addr16
jle
mov
xor
ljmp
mov
or
stos
popf
adcl
mov
scas
leave
xor
pop
push
mov
inc
cmp
out
cmp
jae
sbb
leave
dec
lods
fsubr
pop
mov
cld
mov
jne
pop
icebp
push
xor
in
test
cmpsl
push
lahf
aaa
push
or
in
aas
or
clc
pusha
in
mov
xchg
push
movsb
in
dec
int
fldcw
mov
push
insl
outsl
incl
push
scas
xchg
jg
cld
mov
add
xor
les
jmp
imul
movsb
imul
lret
inc
fucomi
sbb
pop
push
adc
jns
nop
cmp
sub
pop
sbb
daa
je
xchg
dec
push
push
outsb
sahf
push
inc
aad
fwait
repz
lea
jl
mov
fisttpll
push
jae
mov
scas
std
xchg
jno
jnp
mov
mov
dec
fisttpll
jg
inc
je
cmp
fndisi(8087
aaa
sarl
jle
into
aad
dec
xchg
sbb
rorl
jae
mov
pop
imul
fstl
cs
scas
sub
mov
add
in
repnz
add
rcrl
sarl
mov
loop
fcoml
xchg
test
in
ja
mov
sarb
jbe
xor
aad
push
and
jp
jg
or
adc
add
jge
mov
imul
sbb
popa
adc
push
push
mov
sub
rol
lods
add
mov
fcompl
test
push
popa
adc
rorb
roll
pushf
in
xor
clc
mov
sbb
test
out
pushf
in
push
and
loopne
loopne
pop
mov
add
xor
pop
es
mov
lods
sbb
ja
and
xchg
cmp
inc
jb
repnz
cld
clc
jb
xor
cmp
sbb
mov
popa
fstps
daa
xor
aas
sbb
mov
or
cmp
jb
or
mov
xor
sbb
mov
ret
aaa
pop
mov
popf
das
mov
cltd
and
inc
push
push
mov
jo
fdivl
dec
jmp
pop
outsb
cmp
push
subl
sahf
pop
xchg
xlat
repnz
into
std
mov
and
push
ljmp
stos
xchg
cmpsl
dec
xor
lcall
and
sub
in
xchg
xor
adc
popf
scas
xchg
dec
dec
les
push
mov
outsl
sbb
cli
mov
into
movsb
add
inc
dec
mov
scas
mov
or
push
cmc
push
jno
push
leave
int
andl
stos
xchg
inc
fcomps
je
push
sbb
cmpsb
fcoml
mov
and
mov
jge
bound
push
cmp
mov
loope
sbb
stos
xchg
int3
rolb
lret
jb
adcb
stc
into
lock
pop
and
lods
mov
stos
dec
ds
je
dec
dec
pop
mov
ja
dec
dec
rolb
mov
jle
andb
push
imul
adc
mov
and
adc
and
aam
inc
lods
leave
mov
clc
into
rcl
pop
shr
lret
xor
cmp
pop
ror
cmp
int3
cmpsb
pop
nop
int3
dec
sub
dec
push
addr16
je
cltd
cmp
push
xchg
jb
xchg
aas
fimuls
sbb
ret
hlt
test
enter
dec
and
imul
out
fcoms
shlb
in
push
test
ja
mov
lcall
jbe
out
add
adc
jmp
rcr
bound
push
mov
test
mov
push
addl
repz
pop
pushf
mov
and
rolb
cmc
mov
arpl
gs
repz
cmp
xor
and
and
pop
std
ret
daa
lret
inc
popf
xchg
fwait
and
cmp
fsin
roll
mov
scas
data16
mov
xchg
push
xchg
pop
sbb
push
repz
inc
les
scas
subl
lods
xchg
lahf
inc
repnz
repz
mov
fs
inc
in
mov
fldt
lods
push
stos
shll
aaa
jl
in
jbe
loop
lret
mov
clc
dec
dec
dec
inc
iret
jae
movsl
mov
mov
jp
dec
ficoml
xchg
cmpsl
mov
jecxz
add
nop
and
mov
jmp
pop
mov
sti
jp
mov
push
sub
dec
outsl
push
call
jnp
add
outsl
dec
and
cltd
ret
idivl
xchg
sbb
fwait
dec
dec
sarb
mov
jb
dec
int
js
popf
ret
sbb
ds
inc
push
outsb
mov
imul
stos
outsb
inc
in
leave
mov
xchg
jae
js
add
fidivl
dec
test
sti
sahf
fnstsw
jns
jo
enterw
fwait
lods
mov
sar
jne
jno
adc
mov
lds
cs
mov
repnz
fcom
cmc
push
and
mov
daa
pop
icebp
cwtl
mov
shlb
test
pop
inc
jo
adc
cli
ljmp
call
dec
or
pop
dec
pop
lea
test
inc
push
fcomi
iret
xchg
push
repz
jge
and
sbb
xor
sub
gs
shrb
cmpsb
mov
gs
jmp
jle
aaa
mov
mov
and
cmp
sub
sahf
arpl
xchg
mov
mov
or
push
mov
enter
ja
jecxz
jne
roll
popa
hlt
in
xchg
sub
mov
jecxz
mov
pop
jle
outsl
ds
ljmp
das
data16
adc
out
push
pop
inc
dec
mov
mov
cmc
std
in
hlt
xor
xchg
test
xchg
std
cltd
js
sbb
into
mov
out
dec
mov
pop
fs
mov
lods
xor
pop
mov
add
jp
mov
xchg
pusha
outsb
pop
scas
mov
sbb
dec
adc
test
arpl
aaa
adc
mov
mov
pusha
aas
sbb
popw
testl
adc
ret
or
jmp
inc
and
and
outsb
xchg
cmpl
inc
mov
mov
sub
fdivrs
xchg
mov
pop
pop
adc
inc
pop
rcr
add
jl
push
out
xchg
cli
mov
jnp
es
ret
xchg
daa
mov
mov
jns
scas
cmp
pop
in
inc
ror
test
xor
sub
lret
mov
lcall
test
jnp
add
dec
xchg
je
jl
xchg
dec
lahf
in
push
dec
add
in
clc
outsb
fdivrs
xchg
sub
pop
xchg
insb
je
test
sub
mov
rcll
or
or
mov
cmp
out
push
cmc
mov
mov
aad
out
leave
repz
push
dec
dec
loope
fstp
mov
sbb
test
mov
push
enter
loop
add
nop
xor
outsl
out
fs
mov
mov
and
xor
nop
add
or
fcmovu
pop
insb
iret
xor
inc
mov
pop
adc
add
and
out
and
mov
enter
ljmp
cwtl
imul
and
cmc
lds
call
insb
sbb
or
or
out
adc
pop
push
push
mov
rcl
pop
aad
jmp
xor
xchg
push
jl
dec
mov
add
jnp
sbb
jmp
lcall
dec
addr16
add
sar
sarl
das
xchg
jl
pop
jg
adc
pop
arpl
lret
rorb
xor
out
movsl
aas
cmp
popf
sbb
int
sbb
cmp
dec
mov
mov
enter
or
cmpsb
or
rcll
jle
jp
push
add
mov
fidivrs
cmp
andb
outsb
fnstenv
push
and
adc
push
lcall
ljmp
adc
in
jge
popa
ss
lods
xor
xor
int3
mov
and
xor
jmp
inc
add
fcoml
or
popa
sub
or
out
mov
sbb
mov
jp
mov
or
xor
xor
lds
mov
jge
inc
inc
cltd
testb
loopne
fistpl
push
cmpsl
mov
loop
push
rclb
or
push
or
pop
sbb
sub
mov
and
inc
pusha
jmp
adc
mov
dec
int3
in
andb
pop
std
mov
pop
int3
push
xchg
pop
or
cwtl
das
stc
outsl
insb
jmp
xchg
outsb
or
pop
in
mov
dec
adc
addb
and
mov
jmp
cwtl
cmpb
pop
jno
xchg
push
pushf
aam
xchg
mov
loope
or
mov
mov
out
cs
addr16
cmp
cmp
test
jae
insb
cs
cltd
add
push
and
jb
and
xchg
xchg
xchg
into
std
data16
xchg
push
ficoms
xlat
je
and
cmp
or
adc
inc
dec
stos
movsl
and
xor
inc
gs
xor
and
push
sub
pop
aaa
add
iret
jl
lds
and
movsw
repz
cmpsl
mov
sbb
cmp
jmp
fs
push
push
adc
vlddqu
movsl
mov
mov
leave
jmp
inc
and
into
mov
repz
push
mov
imul
push
test
dec
fnstenv
and
xchg
ret
leave
loopne
push
daa
aam
in
adc
or
mov
ds
push
sbb
xor
xchg
lret
pop
xor
mov
dec
mov
mov
in
fistl
jae
aam
test
cwtl
out
mov
jge
ror
xor
cs
lahf
xchg
mov
push
jg
sub
push
fisubs
push
loop
pop
cmp
jnp,pn
ret
jnp
push
inc
pop
cltd
add
aad
cmp
jns
outsl
push
inc
mov
bswap
push
into
ja
push
dec
loop
xor
cltd
lds
add
in
stos
add
jno
sbb
dec
jecxz
out
or
add
jno
mov
cli
stos
push
in
pushf
or
iret
push
or
cmc
repz
inc
or
lods
pop
cld
and
push
mov
shrb
loope
xor
cmp
fildl
and
cmp
cmp
cld
mov
inc
fs
jmp
and
test
mov
xchg
pop
ja
jmp
push
cmp
pusha
dec
sub
xor
xchg
loope
mov
js
xchg
cmp
shll
fildl
jnp
cmp
add
dec
cmpsl
in
pushf
shl
stos
fisubl
or
mov
push
push
mov
push
sub
dec
inc
std
push
dec
xchg
sbb
inc
ja
pop
mov
shr
inc
jp
es
mov
pop
mov
mov
pop
pop
jns
ret
leave
clc
mov
dec
sbb
cmp
jl
sbb
dec
mov
jne
out
subl
nop
xchg
scas
mov
enter
or
jne
and
push
int3
jne
loopne
push
sub
mov
jl
add
pusha
call
add
mov
xchg
loop
mov
and
aas
add
jbe
xchg
mov
xchg
and
int3
xor
bound
xchg
mov
jmp
roll
frstor
movsl
mov
mov
push
ret
xchg
imul
push
jae
push
mov
sub
jmp
inc
adc
xor
mov
out
mov
cmc
stos
sub
into
pop
xchg
enter
test
in
aas
push
fstl
push
fisubs
dec
sbb
push
outsb
sbb
dec
out
or
push
call
pop
add
dec
addr16
out
lock
iret
fucomip
rcrb
xor
cli
inc
and
pop
out
pop
mov
or
dec
adcl
mov
pop
adc
pusha
mov
dec
sbb
mov
cmp
jae
data16
xor
inc
push
jle
cmpsl
scas
mov
or
leave
mov
xor
push
add
xchg
repnz
add
daa
das
into
pop
repz
sub
call
add
lods
pop
xor
lods
std
or
xor
fs
fnstsw
rol
sbb
fstpt
cwtl
cmp
gs
sub
cltd
add
ret
inc
cmpb
pop
jns
mov
jmp
lcall
push
mov
sbb
cmp
mov
sbb
rcll
imul
push
stc
jo
mov
hlt
push
hlt
clc
imulb
xor
dec
out
lcall
rcll
sbb
jae
xchg
cmp
fmull
xchg
lds
nop
mov
add
xchg
inc
mov
xchg
pop
and
push
mov
insl
lret
sub
mov
dec
nop
testl
cltd
pop
insl
dec
ret
test
mov
dec
or
cld
mov
stc
mov
outsl
sbb
call
push
push
jle
mov
push
cmp
xor
and
push
ljmp
testl
cmp
mov
push
xor
ficoms
mov
incb
adc
pop
dec
cltd
jecxz
cmp
mov
mov
imul
ljmp
jg
mov
aad
ret
out
rcrb
ljmp
push
insl
xchg
xchg
ljmp
xchg
repnz
cwtl
daa
outsb
int3
fwait
fs
loop
in
mov
add
pop
adc
xlat
stos
aaa
mov
mov
in
stos
push
mov
mov
ret
inc
mov
ficoml
and
cli
jno
int
cmp
mov
dec
pop
fs
out
ds
js,pt
push
jbe
mov
nop
mov
sub
shlb
xchg
out
ret
jbe
cmp
mov
xchg
insb
inc
addl
sub
sub
mov
mov
adc
ja
shll
mov
iret
cmp
inc
pusha
sti
movsl
lods
pop
add
lahf
add
pop
dec
jnp
loopne
imul
cmp
cmp
pop
jg
loop
aas
lcall
lock
jne
xchg
aam
pop
inc
mov
mov
movsb
cwtl
loope
movsl
cmp
addr16
int
sub
test
sbb
xor
insl
mov
push
pop
sbb
icebp
in
bound
sbb
test
popa
jnp
mov
fistpll
sub
ret
dec
mov
inc
popf
popa
psubd
dec
and
loopne
fwait
xor
mov
loopne
dec
das
leave
sub
sbb
xchg
and
xchg
or
loopne
js
mov
xorl
and
mov
and
stc
out
xchg
popf
xor
mov
pop
dec
jb
ja
sub
mov
js
inc
call
cmpb
push
lea
in
or
jecxz
xchg
ret
daa
sahf
cmp
mov
int3
dec
scas
or
cmp
jle
pop
push
mov
decb
mov
and
xor
lods
jecxz
cmp
adc
sbb
mov
mov
adc
jb
pop
nop
movsb
inc
cmp
das
insl
inc
in
icebp
pop
sub
es
jb
fmulp
out
out
add
or
xchg
mov
inc
data16
loopne
rcl
dec
sbb
and
sub
sub
and
popa
mov
sbb
jo
cmp
push
shlb
xchg
xchg
or
aas
testb
test
aaa
push
xor
mov
mov
out
dec
scas
add
or
dec
aad
movsb
js
adc
mov
cmpl
aad
xor
inc
shl
sub
mov
adc
repnz
roll
mov
pop
pop
sbbb
pop
arpl
mov
lods
cmp
sti
popa
ret
pop
sub
sbb
xor
cld
je
out
incb
jle
mov
xor
xlat
dec
and
sub
xlat
popa
ds
lods
dec
jmp
sarb
push
jmp
xlat
pop
popa
mov
cmp
push
ret
add
orl
xor
mov
nop
xor
jp
mov
cmp
xchg
outsl
clc
inc
ss
bound
cmpsb
out
dec
cwtl
icebp
inc
xchg
ret
mov
mov
call
mov
mov
jae
popa
cmc
je
push
bound
inc
or
stc
je
or
pushf
inc
hlt
fdivrs
pop
mov
pusha
imul
call
jns
jb
cld
enter
or
jl
cmpl
enter
daa
stos
add
mov
sub
ds
adc
lock
int
dec
mov
add
push
and
mov
repnz
cld
jnp
shll
frstor
add
sub
mov
xlat
gs
push
shlb
mov
inc
and
nop
stos
push
addr16
mov
sbb
jecxz
add
mov
dec
mov
adc
ret
ror
pop
xor
sub
icebp
cmp
fisubrs
or
xor
jno
ss
cmpsb
fnsave
cmp
test
lock
rcrl
jmp
pushf
add
and
ret
cmp
inc
adc
xchg
jmp
call
test
push
mov
cli
arpl
and
jne
jns
std
rcl
scas
insb
addl
and
cmpsb
rcr
xchg
adc
cmp
dec
mov
inc
or
icebp
inc
mulb
aam
cmc
lcall
cltd
iret
cmpsl
das
dec
outsb
leave
add
notb
icebp
data16
jno
xchg
pop
pop
rclb
stos
bound
lods
popf
lahf
inc
in
insl
jmp
shll
ja
arpl
or
push
pop
push
sbb
loopne
cmp
js
ss
cmpl
or
test
xchg
pop
mov
jle
les
mov
jle
xor
in
repz
outsl
jg
xchg
and
aas
cmpsb
xchg
ja
adc
push
add
bound
add
pop
mov
bnd
ljmp
mov
mov
add
pop
dec
push
jae
sbb
mov
xor
ret
sub
xchg
sub
popf
cmp
insl
mov
sbb
sbb
inc
inc
stos
sarb
ja
fldt
mov
sub
jne
mov
pop
inc
xchg
clc
mulb
push
mov
xchg
xchg
mov
es
jp
or
push
dec
gs
push
xor
outsb
xlat
jmp
leave
insb
sbb
push
fs
mov
pop
and
mov
nop
in
sub
fwait
testl
outsl
jo
sarl
addl
xlat
pop
ds
cltd
fs
push
ss
int
aam
xor
mov
inc
aad
loope
ljmp
or
or
inc
test
mov
or
sbb
inc
dec
xor
xor
mov
add
das
adc
loop
orl
cmp
hlt
cmc
imul
push
fwait
cmp
mov
xchg
into
sbb
je
sub
pop
je
test
xor
mov
test
adc
dec
lea
mov
dec
imul
push
insl
pop
and
dec
dec
or
insl
mov
in
inc
push
xchg
adc
mov
push
jl
movsb
daa
mov
push
arpl
std
jne
xchg
rclb
mov
jmp
jbe
insb
or
inc
xor
mov
jge
jmp
pop
mov
xchg
sbb
push
fnstenv
arpl
imul
jp
or
into
outsl
shl
out
cmp
xchg
jecxz
pop
sub
scas
out
mov
push
int3
push
mov
loopne
aaa
rol
cltd
int
xor
in
or
push
sti
add
xchg
push
out
loopne
arpl
repz
lret
lcall
push
mov
jg
ret
add
out
cmp
pusha
inc
dec
fs
push
cmp
jb
jl
movsb
mov
in
sbb
jp
adc
xchg
fadds
inc
cli
jb
adc
mov
sti
jne
inc
xchg
push
cmp
lcall
or
test
test
pushf
add
int3
adc
pushf
mov
ret
popf
push
mov
xchg
fisubl
popa
inc
stc
cmpsb
ja
mov
incl
popf
fldt
push
fwait
je
mov
jp
cmp
out
push
push
and
mov
adc
shl
mov
dec
xchg
push
sbb
xchg
scas
nop
push
ljmp
pop
incb
pushf
xchg
pusha
fistpll
nop
mov
outsl
ljmp
dec
inc
lock
movswl
std
leave
xor
jne
xchg
jo
and
adc
add
adc
add
cmp
xor
or
aaa
mov
jne
mov
cltd
popf
sbb
jge
fnstcw
pop
movsb
into
xchg
cwtl
in
sarl
lock
outsw
add
and
out
cmp
xchg
and
or
rcll
jmp
jae
test
sbb
dec
xor
mov
xor
jns
mov
test
scas
pop
sub
mov
mov
cmp
mov
imul
dec
ja
leave
popf
mov
incl
push
sbb
fidivrl
lret
push
xlat
mov
and
iret
and
lret
push
or
dec
lret
mov
add
fwait
inc
inc
test
xchg
mov
xchg
out
push
cmp
mov
test
push
outsb
add
sub
xchg
int
mov
clts
pop
and
mov
andb
jae
push
lea
lods
fisttpll
in
movsb
mov
lcall
adcl
icebp
outsl
and
dec
jno
add
loope
or
xor
cmpsb
sbb
shrb
cwtl
adc
rorw
cs
lcall
cld
and
nop
das
sbb
inc
scas
cs
into
or
jae
or
push
loopne
dec
jp
mov
fistpl
lods
ret
add
imul
mov
and
push
outsl
xchg
test
inc
test
sahf
dec
inc
or
adc
add
xchg
pop
dec
out
stos
subb
pop
pushf
dec
push
hlt
cmp
push
popa
push
andl
mov
loope
cs
cltd
adc
add
jmp
adc
andb
je
imul
in
sbb
mov
aas
xor
mov
or
and
loopne
js
mov
stos
cmp
and
cmp
into
jge
shr
xchg
sbb
pop
pop
jne
sub
mov
adc
loope
insl
jbe
pop
jp
or
daa
imul
adcl
outsb
pop
stc
add
addb
notb
fsubr
repz
lcall
mov
xchg
lcall
adc
mov
aaa
jb
ljmp
in
push
dec
push
orb
adc
scas
push
pop
and
movsl
into
addr16
aaa
das
orb
cld
sahf
aaa
scas
sbb
lcall
adc
push
andb
jo
xchg
push
mov
jp
ficomps
pop
in
sete
mov
adc
jo
sti
inc
sbbb
insl
test
sbb
fstpt
push
lret
pop
xchg
xchg
mov
xor
pop
cli
pop
push
mov
xchg
in
push
inc
jns
rolb
or
hlt
shl
imul
sbb
xchg
or
aad
rclb
fidivrs
pop
and
ja
push
lahf
cmp
scas
iret
lea
add
loope
iret
test
mov
stos
hlt
inc
les
je
jle
dec
lahf
pop
xchg
dec
or
add
push
push
xchg
mov
out
pop
mov
stc
mov
xchg
mov
das
arpl
aad
cli
fisttpll
popf
dec
xor
ds
pop
nop
movnti
sub
mov
js
mov
or
adc
cmp
movsb
jns
add
push
adc
inc
ljmp
sbb
jecxz
out
sahf
popf
insb
and
cwtl
popf
pop
stos
add
movsl
or
gs
inc
xor
inc
call
fstl
pushw
mov
stos
xchg
mov
sub
jae
sbb
jo
ds
jns
dec
wbinvd
xlat
inc
sub
inc
mov
jp
je
aad
popa
sub
shll
push
push
lahf
mov
rcll
mov
jbe
xchg
xchg
notb
push
and
lahf
adc
sbb
fsubrl
jge
movsb
sbb
movsb
fwait
movsl
rcrl
das
stos
fucomp
jns
sub
test
lods
int
fsubs
pop
pop
in
call
jl
cmpsl
mov
fsincos
mov
sbb
pushf
jno
popf
jne
inc
in
stc
fadds
mov
push
outsb
cmpsb
xchg
in
mov
lahf
test
sub
add
repnz
sbb
shll
insb
push
mov
mov
dec
sbb
cli
test
ficompl
jns
inc
xor
insb
std
mov
adc
cs
aas
das
dec
adc
xchg
outsb
dec
xchg
aas
and
jbe
mov
icebp
in
xor
fstpt
imul
movq
adc
inc
ret
lcall
sub
ret
and
mov
sub
xchg
loop
and
mov
lret
cltd
pusha
addr16
push
gs
lcall
scas
daa
icebp
movsb
jl
xor
bnd
mov
push
out
push
inc
inc
or
es
or
test
sbb
mov
push
mull
shrb
adc
rcr
lret
cld
jg
fildll
cmpsb
hlt
pop
bound
sub
jge
mov
test
ficomps
or
ljmp
adcb
ss
add
mulb
movsl
pop
adc
xor
sbb
xchg
xor
cmc
push
inc
lahf
xchg
into
jnp
jl
fnstenv
inc
adc
xchg
mov
aam
inc
push
xor
and
jb
outsb
insl
pop
or
add
movsl
pop
pop
xchg
mov
push
mov
addl
add
dec
js
jle
or
pop
scas
pop
es
mov
mov
aam
mov
int
jge
jmp
test
lret
add
lret
bound
repnz
roll
cmpl
shll
pop
and
jns
movsb
xchg
sub
stc
xlat
push
add
xchg
mov
xor
insl
call
ror
mov
lds
jg
lds
shll
push
sbb
mov
fldt
daa
push
and
or
mov
jmp
dec
enter
or
jno
or
addb
mov
mov
ret
pop
psubb
lods
add
pop
and
or
incl
push
add
cmc
rol
push
lcall
jne
lds
test
inc
push
pop
mov
enter
or
in
push
push
jmp
arpl
pop
popa
aas
mov
data16
fwait
fwait
pop
enter
shlb
cmp
pop
int
jno
aaa
pop
ljmp
push
jecxz
push
cmp
xchg
or
jge
xchg
les
and
jae
or
xchg
or
cmp
movsl
jecxz
jo
insl
out
push
cmp
shrl
loop
cwtl
out
popf
mov
pop
mov
push
add
xor
call
sbb
and
pop
aam
lret
dec
jmp
mov
add
push
sub
push
and
aaa
outsl
ja
popa
test
repnz
cmp
ficompl
mov
in
xchg
icebp
jmp
mov
xchg
inc
xchg
in
jb
fldt
sbb
pushf
cmp
das
repnz
rol
and
addb
bound
add
mov
or
push
and
mov
jg
testb
xchg
sahf
rcr
mov
jmp
cmp
ret
jl
cmp
gs
sahf
stos
cmp
ret
fs
cmp
cwtl
inc
mov
repnz
pop
pop
jge
int
sti
xor
inc
jmp
jne
xchg
fstpt
cmp
pop
repnz
add
ljmp
roll
pusha
aam
movsb
mov
call
jo
jbe
in
daa
fisttpl
out
daa
test
cmp
orl
rol
sbb
outsb
aad
jmp
cmpsb
bound
jne
inc
insb
outsl
punpckhwd
loop
mov
push
sub
or
push
scas
jge
sbb
xchg
imul
fimull
subl
or
jge
mov
sti
push
or
sarl
mov
icebp
std
sbb
popf
push
loope
popfw
mov
xor
dec
dec
fs
or
dec
lds
icebp
or
jbe
mov
jae
sti
sub
cmpsl
xor
insb
lea
out
out
xor
adc
fs
or
sbb
call
ljmp
rcll
test
jp
pop
and
xor
mov
jns
loop
or
pop
rolb
fbstp
in
or
sbb
jns
cmp
dec
jne
mov
or
ja
shrl
push
push
clc
pop
ds
cwtl
xor
or
push
mov
and
or
jl
out
pop
stos
shlb
add
mov
lods
ljmp
push
shll
dec
inc
leave
in
jle
dec
test
mov
in
scas
nop
out
outsl
mov
or
sbb
push
xchg
push
decb
int3
mov
add
sub
and
push
mov
into
dec
fs
test
inc
cmpl
push
push
mov
inc
iret
stc
shrb
push
dec
xchg
scas
mov
push
dec
clc
in
cltd
and
imul
loop
js
jne
mov
push
cld
out
and
mov
xchg
mov
loop
lock
test
pop
xchg
cltd
rep
cmpsb
sbb
ror
dec
scas
jne
stos
mov
ret
ficompl
lods
mov
mull
xchg
mov
and
iret
pop
jmp
sbb
inc
stc
xchg
xor
cmpsb
sahf
cmp
push
out
xchg
ja
insb
dec
arpl
inc
nop
test
int3
inc
sbb
cmp
dec
sbb
xchg
setno
int
push
and
ficoms
pop
and
sbb
sub
repz
stos
cmp
push
jle
enter
scas
cmp
mov
sub
gs
xlat
jmp
xor
iret
jg
outsb
ja
mov
clc
add
cmc
jmp
enter
and
in
push
xor
xchg
das
pop
lods
daa
jge
je
adc
sub
mov
xchg
je
push
or
test
adc
lgs
mov
and
jne
out
popa
in
sbb
test
xor
dec
mov
loopne
mov
mov
fdivr
mov
int
adc
idivl
add
stos
movsb
cmpsb
ret
sub
or
daa
inc
fwait
sub
mov
lea
jb
clc
std
aaa
jmp
aam
repz
mov
cld
pop
jno
pop
icebp
push
popf
loope
pushf
sbb
insl
xchg
pop
inc
orl
or
lea
xchg
inc
test
xchg
cmpsb
bswap
fisubl
mov
jle
jg
lea
adc
lods
sub
aas
mov
ret
in
sub
das
aad
scas
pop
bound
dec
inc
ror
mov
adc
jae
lcall
icebp
xorl
pop
pushf
inc
jge
mov
std
dec
push
leave
and
fsub
dec
lods
fimuls
in
out
jns
ret
cmc
mov
push
out
push
in
mov
push
stc
addr16
mov
and
xor
lods
sbb
push
mov
shll
rorl
gs
pushf
test
adc
cmpsb
xlat
daa
inc
rorl
in
jo,pn
jb
nop
sub
jp
test
leave
mov
mov
dec
aam
incb
fidivl
xor
lds
jbe
add
lcall
outsl
addr16
mov
mul
lret
jae
divb
adc
inc
jo
fnstsw
stos
insl
or
add
xor
xor
pop
sbbb
and
pop
call
sub
popa
cs
out
mov
fndisi(8087
sub
push
std
test
jmp
inc
xlat
movsl
cmp
mov
sbb
or
jne
outsb
mov
pop
mov
cmpsl
and
or
mov
je
arpl
push
mov
mov
mov
std
jnp
cmpsb
jl
mov
repz
add
or
imul
sbbb
mov
mov
jns
testb
mov
push
lret
sub
mov
out
shl
sarl
xchg
test
ret
mov
jecxz
loopne
push
or
mov
mov
adc
pop
sahf
mov
mov
cld
fldcw
xor
rol
pusha
mov
sarb
ret
out
mov
pop
push
cmpb
xor
adc
dec
push
loop
mov
pop
inc
xor
fucomip
inc
addl
int
pushl
test
jbe
add
jno
mov
adcl
sub
imul
push
lea
stos
mov
sub
loop
sarl
ss
mov
in
mov
mov
jnp
outsl
data16
and
xor
mov
add
push
outsb
pop
stos
movsl
inc
and
call
push
mov
ljmp
cmp
stc
dec
fdivs
fcomps
lds
cmc
adc
es
js
in
xchg
xor
jno
fwait
cmp
ja
into
bound
inc
int3
lret
mov
mov
cmp
lcall
insl
xchg
xchg
inc
or
xchg
lret
xchg
std
adc
jnp
jns
call
addr16
std
pop
jecxz
icebp
cmp
add
je
hlt
pusha
or
addr16
outsb
xor
or
mov
sub
loopne
adc
xchg
jmp
adc
mov
pop
mov
push
cli
cmp
xor
gs
lock
icebp
jne
les
fwait
aaa
enter
mov
adc
mov
loopne
mov
xchg
aas
and
loope
mov
sub
ds
or
cmp
push
mov
xorl
sbb
adc
pop
aam
aaa
cmp
cmp
mov
imul
das
std
hlt
mov
sub
mov
mov
jo
jmp
scas
adc
out
cmp
and
add
xor
xchg
xchg
sub
lods
push
es
popf
stc
mov
sub
addr16
cld
push
push
xor
mov
mov
fnstcw
cwtl
jbe
xchg
fcomps
or
xor
mov
test
int
js
lcall
or
mov
jecxz
cmp
or
lock
pop
xchg
shlb
xlat
mov
add
mov
add
adc
jns
stc
sub
sbb
xchg
aam
data16
cmpsb
xchg
fdivr
dec
or
aam
inc
or
inc
adc
xchg
int3
out
sti
cmp
in
popf
test
std
push
add
mov
clc
loopne
rol
inc
fstps
hlt
ljmp
rolb
pop
pop
xor
andb
or
dec
mov
xor
jmp
dec
out
mov
dec
xor
add
mov
ret
outsl
pop
fiadds
scas
cmpsl
iret
mov
add
add
cwtl
sub
push
mov
imul
lcall
sbb
jns
popa
pushf
rsm
and
pop
sahf
jmp
jp
lock
cmpsb
mov
mov
inc
sub
popa
xor
lods
pusha
ljmp
lea
push
pop
int
sub
lret
jbe
or
fsubrs
inc
push
cmp
leave
jae
iret
add
cmp
lcall
mov
out
in
dec
ja
outsl
cmpsl
inc
rcrb
jb
inc
pop
push
lcall
push
adcb
aas
adc
pop
jle
jnp
lret
push
in
fisubrs
lds
sbbl
pop
xchg
shlb
inc
nop
pop
movsl
sub
scas
pop
xorl
popa
ss
dec
mov
mov
adc
call
jb
add
loope
rcll
cs
sbb
pop
push
lods
cmpsb
adc
lds
std
mov
mov
stos
bswap
dec
inc
xchg
insb
in
cli
iret
cmpsl
fbld
mov
fcmovbe
mov
xor
add
andl
mov
mov
inc
aaa
loopne
cmc
adc
shlb
enter
repz
cmp
into
ss
pop
outsl
popa
jno
cmpsl
ficomps
aas
sti
jo
cmp
cmc
jae
jg
jo
sub
mov
mov
push
mov
or
sbbl
leave
popf
push
mov
sub
xchg
jo
stos
xchg
imul
out
xor
fisubl
xchg
loope
jbe
in
fwait
out
or
roll
sub
push
lea
into
or
xchg
imul
push
orb
jns
push
ja
mov
cs
fiadds
wrmsr
mov
mov
add
cs
cmp
sbb
cltd
je
loop
sub
pop
inc
loop
xchg
and
enter
imul
mov
jo
xchg
ss
inc
adc
pop
nop
cld
inc
je
push
ja
int
xor
flds
sbb
dec
jne
pop
iret
ja
sbb
jo
xchg
sbb
stos
cmpsl
pushl
iret
sbb
push
cld
call
or
pop
xchg
jecxz
test
mov
mov
jecxz
out
jnp
add
pop
orl
inc
das
lods
ss
sub
ffree
fadds
pop
pushl
pop
mov
ret
loope
ljmp
and
xchg
icebp
roll
pop
ss
fldcw
sahf
push
fwait
ss
popa
andl
sarl
sbb
add
movsb
pushf
icebp
mov
cmp
push
fidivl
hlt
loop
push
sarb
sbb
nop
lods
addl
and
lods
or
cwtl
das
out
push
xchg
stos
add
dec
mov
dec
aam
lods
sbb
loopne
iret
mov
das
lahf
push
add
jge
inc
movsl
adc
rorb
test
rcl
jmp
das
xor
sbb
push
mov
in
and
lock
dec
mov
cmp
aam
dec
enter
in
imul
mov
mov
cld
mov
xorl
std
add
popf
sar
mov
cmp
jae
adc
mov
lods
mov
fsts
xor
xor
xor
mov
clc
addl
out
in
adc
cmp
test
mov
mov
repnz
lret
les
xor
js
pusha
and
or
push
and
mov
popa
mov
cs
and
fdivl
push
jne
xor
cmp
ja
jmp
cli
add
ds
addr16
fstl
icebp
add
xchg
test
and
lahf
mov
mov
out
add
ja
mov
push
fmuls
out
xor
and
or
mov
and
sub
roll
pop
adc
out
roll
lods
pop
test
sub
sub
or
cmp
fsubrl
xchg
inc
pushf
sbb
dec
xchg
add
push
adc
xchg
mov
mov
vpshufhw
jecxz
or
jge
fadds
out
idiv
pop
sub
and
dec
mov
push
in
xchg
sbb
pop
pop
daa
aam
fwait
sub
jb
and
aad
or
push
call
pop
cmpb
add
xor
loop
mov
sti
inc
js
pushf
jne,pt
and
jecxz
and
pop
add
or
pop
cmp
test
inc
fisttpll
mov
sub
call
jge
xchg
fadd
mov
in
push
sbb
out
lret
pop
push
movsl
and
cs
enter
fs
in
sbb
mov
pop
inc
adc
mov
stos
add
push
cmp
pop
mov
inc
stc
sub
or
lea
or
mov
ret
fbld
inc
cmp
push
xor
incl
inc
loop
jae
scas
call
cli
sbb
jp
divl
nop
inc
lods
and
ret
push
ret
add
test
pop
inc
pop
jb
imul
out
lret
sahf
outsl
jmp
dec
outsl
mov
popa
jae
aam
add
call
xchg
popa
mov
fisttps
mov
xchg
jae
add
add
dec
iret
data16
scas
cwtl
xchg
imul
mov
xchg
dec
roll
xor
inc
and
or
sar
pop
cmp
testb
cmp
dec
insb
or
sub
pop
adc
movsb
aad
outsl
xchg
mov
jno
mov
loope
push
arpl
test
dec
xlat
inc
adc
and
jns
loop
imul
sti
adc
mov
lret
jo
pop
mov
pop
xchg
mov
dec
pusha
push
lret
push
aad
pop
adc
xchg
and
jl
fwait
out
add
sub
test
or
pop
xchg
fstpt
cmp
ja
das
xchg
add
std
shll
push
incb
lret
pop
pop
jno
mov
inc
inc
arpl
mov
push
jbe
mov
lea
cmp
sub
sub
mov
lds
fwait
cmp
pop
xor
mov
fstl
int
jmp
popa
fists
xchg
push
inc
inc
xorb
ds
sub
outsl
pop
push
sub
push
aas
cld
cltd
adc
jo
xchg
jle
mov
cmpb
jmp
mov
jnp
adc
jmp
push
hlt
xchg
arpl
mov
jb
movsb
lahf
inc
mov
mov
inc
push
shl
idivb
jno
xchg
repnz
add
cmp
sahf
sbb
mov
xor
js
fs
cmp
mov
stc
and
xchg
js
insb
shl
pop
push
cs
ss
fst
out
sub
insl
dec
sub
mov
cs
xorb
mov
daa
mov
dec
popf
fistps
repnz
xor
clc
sub
repz
adc
xchg
adc
dec
mov
ja
mov
sbbb
movsl
cmp
int
popa
rolb
pushf
inc
in
dec
mov
jle
jo,pt
in
roll
and
push
int3
in
orl
dec
shrl
scas
fisubs
push
js
sti
xlat
lahf
add
pop
mov
mov
jb
push
lahf
and
pop
add
jmp
mov
inc
push
cmp
dec
aad
std
sub
xchg
daa
and
push
inc
in
pop
imul
xchg
fcmovb
cltd
adc
into
sbb
xchg
mov
mov
and
repnz
jecxz
in
out
xor
movsb
sbb
cmp
mov
fmulp
xor
testl
adc
std
add
sbb
outsl
stos
stos
movsb
mov
mov
mov
data16
bound
stos
sub
xchg
arpl
mov
pop
push
call
lret
je
xchg
repz
xor
mov
lds
or
mov
fldl
bound
ret
pop
inc
add
add
int
mov
call
jge
dec
jne
fs
lret
mov
leave
dec
push
or
xchg
sub
mov
test
cmc
shrl
lahf
dec
sahf
fildll
xlat
cltd
cwtl
jg
rorb
adc
pop
xor
mov
pop
fstpt
test
cmp
mov
ss
in
add
mov
adc
sbb
fisubrl
dec
loop
loop
and
or
call
shlb
dec
pop
pop
push
sbbb
loopne
xchg
fldl
or
sbb
inc
lret
scas
daa
and
cmp
pop
ljmp
jnp
mov
or
repnz
sub
sarb
fists
jnp
fwait
lods
pusha
cmpsl
addl
cmp
sahf
ret
ja
or
pop
mov
cld
test
test
pop
sbb
shl
mull
mov
cmp
sbb
mov
insl
mov
or
lods
pop
mov
das
jl
jle
cmpsl
pushf
pop
push
dec
stc
dec
sbb
pop
in
adcl
leave
sbb
mov
or
add
movsb
xchg
clc
test
dec
inc
dec
pop
sub
fiaddl
clc
inc
scas
flds
dec
mov
lds
pop
push
lahf
in
mov
pop
adc
xchg
aaa
mov
adc
pop
repz
dec
inc
outsl
arpl
imul
cwtl
ljmp
cltd
out
pop
adc
add
adc
loop
sbb
into
mov
iret
in
bound
dec
arpl
mov
outsb
mov
xlat
fildll
aam
pop
mov
push
ja
fucomp
xor
and
sbb
lock
sarb
cmpb
push
and
cmp
icebp
mov
arpl
or
into
pop
sbb
ficomps
mov
or
cmp
out
mov
adc
faddl
nop
addr16
jbe
add
pusha
nop
pop
enter
xor
repz
jg
in
mov
test
neg
jnp
aas
and
push
jb
shlb
jl
bnd
lret
and
sub
xlat
das
xchg
xchg
movb
jo
mov
pop
cltd
mov
mov
std
ds
and
jmp
cmp
mov
ss
stos
pop
movsb
cmp
cmpsl
outsl
dec
cmp
mov
cmpsl
mov
push
adcb
scas
out
xchg
jecxz
xor
push
xchg
xlat
sbb
pop
xor
add
repnz
outsb
inc
push
adc
ds
xchg
test
mov
iret
aas
push
and
sahf
test
sbb
push
call
in
push
aam
andl
jae
dec
jecxz
sub
jl
pop
jo
xor
inc
lea
inc
cld
ret
dec
les
imul
stc
or
push
bnd
fstps
jns
fistpl
cmpsb
xor
fld
shrb
or
ss
cmp
ds
dec
inc
out
and
push
cmp
call
minps
sub
dec
fld
adc
cmp
iret
mov
test
mov
push
xor
fstp
xchg
mov
jmp
and
xchg
and
push
into
push
pop
and
and
lds
xchg
adc
push
test
lds
mov
jnp
lcall
icebp
mov
adc
gs
call
js
sbb
mov
andb
dec
int
dec
mov
cmp
lds
out
push
xchg
push
or
xor
sub
mov
scas
jp
pop
cli
mov
push
inc
push
fucomip
xchg
push
or
xor
sbb
jae
test
std
out
sbb
leave
ljmp
mov
sbb
mov
gs
pop
mov
lock
out
shl
adc
mov
mov
xor
data16
scas
shrb
fistpl
stos
lcall
pop
iret
pop
out
and
lret
push
xchg
mov
sbb
cs
fcoms
mov
lods
pop
mov
scas
or
out
je
mov
sti
js
xchg
inc
ja,pn
ljmp
lods
pop
bound
leave
add
xor
les
mov
jbe
popf
sbb
mov
call
or
push
xor
fwait
dec
flds
sbb
adc
mov
jb
les
xchg
fnstsw
cmp
xchg
add
sub
pop
mov
imul
cmp
mov
pushf
pop
daa
stos
cwtl
out
loope
rol
mov
adc
inc
sub
mov
ret
cmp
sti
sub
dec
mov
ss
in
fbld
cmp
std
imul
jg
pop
mov
je
adc
lods
lcall
in
in
lods
sbb
adc
ljmp
orl
push
dec
adc
mov
pop
push
fwait
cmpb
add
int
jns
ret
mov
cmp
mov
inc
out
inc
lret
lahf
pop
movsb
leave
fildll
stc
lock
lcallw
loope
mov
or
or
jns
jl
les
mov
push
and
repz
sar
cmp
out
rolb
movsl
lds
inc
xor
xchg
int
push
das
cmpsl
lahf
pop
push
arpl
inc
adc
cwtl
shrl
loop
mov
pop
dec
pop
in
and
leave
dec
hlt
inc
loope
aad
push
testb
rcl
xchg
movsb
add
in
xchg
dec
fbld
dec
xor
js
push
push
xchg
mov
xchg
orb
jl
pop
aaa
loop
addr16
mov
pop
xlat
adc
push
push
dec
fcomip
popf
lock
clc
fwait
cmp
aaa
sub
imulb
lcall
mov
xchg
mov
cmpsl
dec
arpl
inc
push
jno
sub
movsl
sahf
enter
movsb
sbb
test
xor
cld
addr16
rorl
ja
or
repz
adcl
mov
pop
aas
or
jmp
std
xor
fisubrl
in
fsubrs
sub
stos
adc
mov
xchg
xlat
push
and
negl
scas
outsl
int
xchg
sbb
xor
and
test
lods
stc
xor
sbb
outsl
sti
lods
and
pop
int3
lret
mov
mov
cmpl
repnz
push
psubw
inc
dec
dec
cwtl
pop
aam
jo,pt
insb
stos
inc
xchg
nopl
daa
mov
and
je
adc
sub
out
test
mov
mov
negl
cmc
fldl
mov
mov
sbb
or
sub
iret
lcall
jae
or
jbe
or
xor
pop
xor
and
cmp
pusha
icebp
xchg
fidivs
lds
and
xchg
test
lahf
dec
fwait
or
jmp
dec
je
leave
mov
outsl
bound
shrb
dec
dec
push
adc
xor
ds
fstpl
jne
cmp
mov
aas
xor
or
jno
lcall
push
mov
outsl
mov
cli
adc
dec
icebp
test
leave
aas
mov
aam
or
outsb
pop
mov
mov
jno
sti
icebp
mov
xchg
push
push
dec
xchg
jmp
xchg
and
pop
pop
mov
cmp
decl
aam
xchg
inc
sub
push
lods
mov
fstps
cmpsb
test
xor
dec
outsb
xchg
pop
roll
insl
adc
lds
rcrl
pop
rolb
out
sahf
lret
jnp
in
ja
subb
cmc
mov
jl
push
cmp
cs
sub
mov
or
or
pop
mov
xchg
inc
and
std
ja
or
xor
gs
arpl
jmp
jae
jae
out
jnp,pt
push
clc
push
add
xchg
in
xor
push
shll
test
mov
inc
and
movsb
aad
xchg
xchg
xor
mov
shrl
inc
hlt
aam
mov
jnp
and
xor
jl
repz
mov
pop
jmp
add
es
bound
nop
not
pop
inc
xchg
sbb
in
sahf
push
jl
loope
dec
xor
and
mov
inc
outsb
push
adc
mov
push
sub
dec
mov
mov
dec
xlat
or
fwait
inc
mov
sub
lods
pop
pop
xchg
inc
inc
jo
dec
dec
sbb
cmp
out
jmp
icebp
mov
outsl
xor
lds
pop
std
inc
mov
popa
scas
shll
std
ficomps
fisubl
sbb
add
pop
push
mov
mov
mov
into
or
and
mov
mov
shlb
push
add
cmpsb
filds
arpl
mov
inc
cmc
jmp
jb
xchg
and
int
xchg
adc
aad
inc
mov
fiaddl
shlb
cld
test
test
rorl
pop
mov
jecxz
nop
fidivl
push
mov
jae
call
xchg
pushf
mov
sbb
add
call
mov
cs
call
pop
es
dec
inc
sub
pop
in
imul
mov
out
into
jle
or
cltd
pop
subb
pop
cwtl
mov
mov
mov
cmp
or
movsb
add
sbb
push
pop
and
add
pop
lret
stos
stc
lahf
int3
iret
je
int
xchg
mov
jp
xorl
dec
popf
pop
test
dec
and
das
xchg
imul
cmp
movsl
push
xor
jns
int3
dec
mov
cltd
adc
pop
and
sub
add
sarl
jge
push
mov
jns
lret
mov
push
fbstp
idivb
xchg
push
ficoml
mov
js
test
pop
add
adc
add
pop
inc
lods
or
mov
sbb
xor
push
push
pop
mov
push
fmuls
out
out
fwait
push
bound
popa
movsl
fldt
push
mov
cli
ret
bound
pop
pushf
mov
cld
orl
sub
xchg
rclb
jmp
fs
inc
outsl
mov
dec
sbb
movsl
icebp
out
and
mov
jns
push
mov
stc
pop
xor
push
shll
pop
ficoms
stos
cmpsb
out
aaa
adc
sahf
pushf
test
inc
sbb
popa
dec
popf
jnp
sub
and
mov
and
inc
xlat
inc
mov
add
and
mov
leave
movsb
pusha
sbb
or
sti
and
repz
xchg
cmp
jne
mov
int
mov
mov
mov
icebp
sbbb
dec
sbb
inc
jge
adc
aas
scas
push
in
mov
aas
jbe
mov
push
enter
mov
aaa
cltd
cmpl
or
test
sub
and
outsb
or
inc
in
cmpsl
sahf
test
shlb
sti
and
add
mov
pop
mov
pop
adc
in
xor
dec
and
or
out
scas
std
cld
mov
adc
add
mov
jns
jp
mov
pop
xor
xor
xchg
jno
mov
adc
fwait
subb
mov
xor
dec
or
or
xchg
dec
and
shlb
pop
pop
cmp
add
push
push
jmp
push
mov
pop
in
hlt
ficomps
mov
mov
mov
sub
test
adc
or
dec
int3
fiadds
je
repnz
int
imul
pushf
arpl
loope
jge
mov
add
inc
push
mov
cmp
mov
jns
in
cmpsb
dec
adcl
insl
cwtl
mov
fildll
add
or
out
movsl
cmp
cmp
imul
dec
test
cwtl
xor
lcall
aad
adc
sahf
imul
test
jno
test
incl
ja
data16
lcall
popa
aaa
push
repnz
cmp
add
fcmovne
mov
je
cmp
in
cmp
mov
popf
jge
imul
out
into
shrl
adc
in
mov
cmp
or
mov
daa
int3
xor
fwait
adc
fs
fwait
in
mov
mov
xlat
movsl
inc
arpl
inc
xorb
mov
stc
cmp
mov
add
jae
pushf
push
cmpb
fdivs
jbe
mov
adc
fcompl
rcrl
mov
fmuls
adc
cs
jo
mov
mov
mov
mov
push
test
cmp
lcall
pop
les
mov
xor
and
rolb
jmp
cld
dec
jo
and
jp
aam
test
mov
stos
lods
lahf
inc
jecxz
xchg
iret
shll
dec
cs
clc
sub
outsl
and
sub
mov
xchg
bound
insb
es
or
repz
lods
sbb
mov
and
cmc
fstl
test
mov
test
flds
mov
pop
mov
stc
push
mov
sbb
clc
push
ss
xlat
xchg
push
lds
popa
vpaddd
xchg
ds
push
popa
sbb
sbb
or
sub
adc
jne
outsl
jp
daa
push
jo
inc
ja
cmpsb
iret
pop
pop
mov
aas
mov
cmp
mov
cmpsl
pop
imul
frstor
incb
ja
sbb
and
in
das
rcrl
int3
shrl
subb
lret
mov
sub
mov
fstpl
ret
repnz
inc
je
nop
inc
pop
pop
inc
lahf
aaa
mov
add
jnp
sbb
enter
jl
pop
loop
xor
mov
mov
and
and
dec
push
pushf
pop
lods
arpl
ja
fisubrl
dec
xor
je
rolb
scas
and
icebp
mov
cmc
inc
xor
repnz
sub
cmp
stos
and
lea
cmpl
sti
xorb
jns
add
add
xor
sub
jae
lds
inc
out
or
sub
repnz
leave
lcall
push
xor
lahf
and
dec
faddl
adc
and
mov
ljmp
ficoml
cwtl
push
cli
loop
aam
mov
popa
jo
sbb
add
mov
jno
les
xchg
repnz
add
in
lods
jo
loop
lds
push
pushf
pop
sub
movsl
jge
sbb
sbb
stos
aad
out
repnz
xchg
pop
je
pop
jecxz
test
adc
cmpsb
push
popf
jnp
popa
jb
pop
pop
in
pop
cld
sub
sub
ds
sub
cmp
fldln2
cmp
and
and
inc
in
mov
cmpsb
insl
out
pushf
sub
out
pop
mov
ds
xor
jmp
out
paddb
es
cmp
push
enter
push
adc
cld
rclb
or
loop
mov
add
pop
pop
notl
inc
dec
mov
push
sbb
jb
pop
xor
out
call
jb
dec
jle
jo
adc
push
jbe
sarl
test
es
inc
shll
adc
arpl
in
mov
pop
jp
movsb
fistpl
pop
or
mov
mov
fildll
pop
inc
in
dec
movsb
and
push
push
mov
and
flds
jmp
xchg
mov
aas
sbb
int
xor
lcall
je
cmp
dec
subb
lock
in
mov
ret
cli
cmp
pop
dec
cmp
out
mov
dec
into
cmpsl
int3
test
jecxz
in
xor
add
xchg
sbb
repnz
jo
push
clc
xor
mov
repz
mov
scas
rcrb
and
addr16
xor
and
push
fidivrs
jg
aam
jbe
mov
push
jge
sbb
enter
outsb
subl
sub
jge
movsl
add
sbbl
shl
je
stc
jne
jle
imul
jmp
jne
cmpsb
outsb
hlt
xor
shll
adc
pop
cmpsl
addl
mov
and
sub
cmpb
in
pusha
add
test
out
xor
mov
add
pop
cmp
loopne
mov
jle
jns
cmp
lds
clc
lret
mov
out
shrb
mov
adc
mov
xchg
push
sbb
loopne
sbbl
mov
cmc
mov
in
insl
sbb
mov
js
mov
pop
jge
push
jmp
push
andb
push
lds
or
xchg
mov
std
dec
jmp
sub
inc
mov
notl
cmp
or
andb
scas
fldl
cmp
pop
or
mov
test
cmp
sub
lock
mull
or
mov
into
rcll
call
adc
out
jge
mov
push
or
arpl
movsbl
imul
iret
mov
push
ss
xchg
sub
cmp
sahf
pop
rclb
xchg
aad
mov
xchg
mov
in
insl
inc
ds
push
xchg
jbe
test
and
test
xor
cmpsb
xchg
and
sbb
cwtl
movsl
test
sbbb
fwait
xchg
in
dec
jae
pop
mov
test
pop
pop
je
dec
jg
rep
mov
scas
mov
push
cmc
xor
test
sub
aas
frstor
mov
cmp
stos
xlat
mov
add
test
pop
fiadds
mov
jo
leave
cmp
dec
lahf
push
int
and
out
test
mov
push
js
jns
fimull
imul
sbb
xchg
je
lret
xchg
cmp
lret
add
dec
jl
add
pop
sbb
and
or
pop
rcl
add
sub
cmp
and
clc
lods
out
cmp
and
popf
pop
dec
mov
inc
add
mov
out
popa
lret
dec
jno
mov
mov
imul
xchg
sbbl
jmp
cmp
push
sbb
je
pusha
fidivs
push
add
dec
xchg
stos
cli
cld
add
sahf
aaa
mov
inc
jmp
enter
mov
push
dec
stos
push
adc
inc
leave
cs
mov
fs
aaa
adc
add
les
std
sahf
cmc
loope
stos
and
ret
mov
into
stos
jo
xchg
clc
xchg
sarb
pushf
inc
lret
sbb
scas
cmc
aas
or
xchg
inc
xchg
call
in
or
mov
cmpb
imul
xorl
cmpxchg
xor
cld
cmp
inc
vmovss
dec
pop
ljmp
push
ficoml
pop
push
adc
lcall
test
and
push
sbb
or
aad
cmp
inc
popa
loop
jmp
xor
aaa
test
pop
mov
fsubr
in
imul
roll
les
daa
repnz
daa
imul
inc
in
dec
pusha
sbb
adc
or
push
push
or
sub
mov
add
mov
bound
mov
or
lds
gs
xchg
out
imul
xchg
xor
sbb
mov
shlb
shrb
or
loopne
ja
jl
pusha
mov
das
and
cmp
push
int3
into
or
adc
cmp
dec
je
pop
popf
dec
rolb
lcall
das
xor
mov
adc
arpl
movsb
push
test
sbb
inc
adc
in
jmp
mov
mov
fcomp
int3
push
rolb
loope
jne
div
in
cmp
scas
jae
pop
sbb
bnd
mov
sbb
push
push
rcrb
pop
xor
scas
cmp
or
pop
out
arpl
sub
dec
cli
xor
jnp
out
mov
test
or
insb
sub
inc
clc
mov
mov
mov
adc
dec
das
loope
fistps
in
pop
dec
fidivrl
cld
sub
outsb
dec
mov
xchg
dec
and
cmp
das
cmpb
or
sbb
lret
aad
fiaddl
mov
imul
jg
jecxz
pcmpgtd
sub
mov
stc
mov
ficomps
ret
lock
adc
mov
push
addl
add
sahf
jmp
xchg
and
cmp
std
or
add
cld
adc
loope
sbb
fstl
cld
or
sbb
aas
lcall
jl
adc
mov
push
and
es
dec
or
and
or
mov
xor
nop
push
mov
loopne
cwtl
jb
fwait
add
add
and
arpl
lods
incb
dec
cmpsb
mov
in
adc
sbb
orb
aas
nop
ljmp
cmpsl
mov
into
jno
sub
cs
loop
dec
aaa
sti
dec
popa
cwtl
fadds
jo
cmp
lds
mov
xchg
add
test
pop
pop
inc
xchg
adc
dec
mov
push
je
add
pop
xlat
adc
rcll
nop
add
bound
loope
mov
ljmp
rol
fs
rol
repnz
dec
and
xchg
out
jnp
pop
repz
and
jb
movsb
add
hlt
sbb
inc
addl
push
mov
lret
dec
mov
and
pop
repz
dec
loop
shll
daa
mov
gs
repz
lods
or
int3
sbb
lcall
jnp
incl
adc
xor
jns
and
sub
popa
fldcw
or
mov
mov
cmp
pushf
aam
jge
clc
mov
sub
mov
movsl
pop
lock
loopne
ret
cltd
movsb
sub
rclb
push
add
add
stos
or
lods
dec
hlt
inc
cmp
out
mov
xlat
nop
jmp
xchg
inc
in
test
jne
enter
lcall
jno
aaa
dec
mov
pushf
into
mov
out
inc
jecxz
dec
and
icebp
xchg
jne
and
test
test
mov
nop
sbb
xchg
repnz
mov
jns
mov
xchg
xor
xor
mov
sub
xchg
sub
xchg
fs
sub
sbb
xchg
rorb
sti
mov
mov
jno
mov
xor
sub
dec
mov
inc
adc
add
outsb
icebp
shll
sub
push
icebp
inc
inc
ja
lea
inc
push
pusha
xchg
lahf
std
lods
and
loope
push
jmp
scas
sarl
pop
jp
mov
nop
int3
mov
sbbl
cs
movsb
insl
cmp
pop
xor
and
jecxz
xlat
add
hlt
sbb
inc
dec
js
in
scas
jl
pop
cmp
cmp
stos
test
int
out
addr16
lods
mov
addb
sub
imull
mov
mov
das
adc
mov
lea
cltd
test
sti
or
add
fdivl
fimuls
dec
out
cltd
out
psllq
in
clc
ss
add
inc
popa
and
push
mov
popf
sub
ja
or
xchg
cmpsl
insb
mov
shrl
push
andl
ret
xor
repnz
pop
jmp
loop
inc
pop
je
insb
sbb
push
movsb
jne
sbb
push
divl
sarl
imul
mov
mov
inc
ljmp
mov
les
mov
cmp
call
sbb
mov
inc
arpl
stos
cmp
stc
je,pt
sahf
mov
cmpsl
ret
sub
or
sub
adcb
mov
cmp
in
sti
pop
out
test
popa
mov
mov
cmc
lret
das
dec
sarb
jp
insl
sbb
fldl2t
scas
addb
fldcw
fildll
inc
sub
in
adc
mov
xor
fnstenv
stos
mov
repz
cmp
push
jge
cltd
out
repnz
dec
or
push
sbb
in
xchg
pop
inc
sar
stc
sub
xor
lea
in
dec
cmp
mov
repnz
movsl
mov
scas
repnz
outsl
xchg
push
dec
daa
test
mov
mov
xor
or
test
gs
jo
adc
out
rolb
mov
mov
and
mov
loope
sub
orb
ret
dec
push
pop
mov
sbb
sub
push
in
mov
adc
insl
xor
sbb
mulb
aam
mov
std
jp
push
add
gs
mov
adc
push
test
cmp
pusha
sub
pop
jl
into
aas
push
call
out
pop
adc
dec
sbb
mov
shll
or
add
pop
mov
add
mov
push
hlt
adc
wrmsr
scas
mov
popa
pop
mov
and
mov
std
mov
aad
rcll
insl
mov
test
cmp
cltd
xchg
jno
mov
in
filds
and
mov
jo
mov
jl
xor
stc
inc
jp
aaa
ret
adc
sub
jo
dec
cmp
or
test
xorb
cmp
or
xchg
adc
or
push
pop
mov
mov
dec
inc
cltd
and
mov
push
xchg
sub
ret
jl
mov
pusha
mov
and
les
push
leave
inc
xchg
mov
in
jle
jb
cwtl
sub
jo
xchg
lcall
xor
enter
pop
jp
repnz
fdivr
mov
mov
or
jnp
pop
jmp
add
fdivs
lods
cltd
neg
ffree
nop
and
movsb
adcb
test
mov
stos
mov
push
into
and
stc
pop
stos
loopne
xchg
sarl
or
into
inc
cwtd
das
outsl
lock
cmp
push
jne
mov
or
fcoml
fsts
es
dec
jge
jmp
cmp
cmp
data16
dec
mov
add
ret
arpl
sub
push
adc
adc
adc
loope
fcmove
cmp
sahf
and
xor
pusha
jno
imul
stc
dec
adc
aad
cmc
adc
sub
xchg
popa
sub
cmp
jb
jae
sbb
jb
pop
idivw
rclb
dec
out
push
aas
cmp
stos
mov
sub
cli
jmp
push
push
push
rcrb
stc
sub
dec
adc
sbb
and
push
cmpsb
mov
test
clc
adc
lcall
lods
ficompl
pop
push
and
test
js
pop
or
mov
xchg
aam
add
mov
xor
pop
je
jno
mov
or
out
jle
mov
ljmp
push
pop
xchg
hlt
push
icebp
mov
ja
popf
cld
xor
jns
xlat
jae
fildl
or
subb
addr16
mov
mov
ljmp
lcall
and
inc
inc
loop
xchg
mov
imul
in
dec
je
in
xchg
les
das
ficomps
into
pusha
jae
int3
js
jmp
or
idivl
sahf
lret
jo
in
mov
push
pop
in
lock
imul
and
xchg
inc
es
mov
sub
fdivr
bound
outsl
adc
adc
push
insl
stos
cwtl
pop
int3
pop
test
cmpsb
mov
or
or
lods
sti
add
xchg
xchg
adc
push
fisttpll
jg
adc
imul
mov
lods
and
scas
aaa
movsl
popa
pop
mov
out
cli
scas
ja
inc
push
sub
adc
jns
jmp
pop
out
incl
sub
pop
scas
addb
xchg
imul
das
pop
aaa
add
sahf
sub
mov
mov
jo
pop
dec
inc
and
jnp
or
xor
mov
dec
cmc
xchg
xor
imul
outsl
ret
jne
int3
xchg
add
push
and
jmp
mov
inc
mov
or
cmp
jl
pop
sbb
or
cmp
adc
inc
mov
jecxz
dec
push
fs
in
adc
imul
idiv
sbb
adc
je
mov
ret
fcoms
scas
jg
sub
test
and
out
popf
jl
sub
mov
loopne
or
aaa
ljmp
mov
mov
fdivs
and
and
rcrb
ja
cmp
cmpsl
jae
xlat
sub
insl
jg
jno
adc
cmp
jne
pop
shrb
sbb
mov
or
and
cmp
in
lret
sbb
leave
jno
sbb
push
mov
dec
ficoms
mov
js
imul
cmpsb
stos
clc
push
pop
imul
mov
mov
mov
sbb
js
jl
es
push
sub
cmp
add
rorb
into
int
daa
xor
dec
out
sbb
push
xor
xlat
ret
jge
nop
or
imul
aaa
xlat
loop
pop
ljmp
xchg
lea
idivl
dec
push
inc
jnp
jecxz
dec
jo
push
or
pop
push
or
pop
pop
in
pop
push
cmpsb
aam
sahf
sub
jl
loope
iret
push
jno
xor
sahf
pop
sti
mov
push
mov
sub
movsl
mov
push
jns
mov
in
outsl
outsl
jb
stc
cmp
mov
pop
stc
or
movsl
lds
mov
lea
shrb
xchg
push
push
inc
mov
fwait
mov
loope
imul
sub
out
das
std
stos
jl
push
push
xchg
xchg
icebp
repnz
outsl
jecxz
mov
and
inc
hlt
jns
stos
push
inc
pushf
xchg
rclb
add
inc
and
cmp
aad
mov
shl
xchg
push
mov
push
lahf
sbb
jne
shrl
ds
fbld
adc
xchg
stc
cmp
mov
or
dec
or
push
xchg
loop
push
add
frstor
mov
pusha
dec
jge
pop
push
sub
xchg
jae
out
xchg
lods
lods
lea
dec
leave
loope
dec
stos
mov
fdivp
nop
sbb
pop
test
into
cmc
mov
ja
or
pop
int
cmpsl
xorb
cmp
stos
xlat
cmp
popf
and
jle
jbe
int3
pop
adc
pop
rcl
out
inc
in
stos
cmp
mov
ja
add
lret
push
push
mov
add
stos
sub
xor
pop
or
sub
mov
lds
cmp
lods
pop
sarb
sub
inc
in
fst
aam
clc
mov
jge
adc
jle
ss
bound
mov
add
stc
xor
bound
inc
pop
ljmp
out
std
out
loop
cmp
jbe
pop
xor
inc
xchg
iret
aad
dec
sub
test
mov
sub
jns
imul
push
outsb
pop
loop
mov
ficoml
adc
push
push
cmpl
fwait
push
pop
mov
dec
fsubl
adc
testl
pop
int3
sbb
adc
sti
cmc
addr16
inc
or
cmp
scas
push
ss
pusha
loope
mov
xor
lret
clc
and
jl
jns
push
pop
pop
dec
ret
call
pop
addr16
or
imul
jecxz
or
push
in
lret
push
loope
movsb
out
js
adc
shrl
repz
hlt
sar
ss
loope
ficompl
sbb
mov
fidivs
add
clc
push
sub
lea
fldenv
mov
inc
sbb
shl
mov
xchg
dec
scas
and
in
bound
mov
pop
iret
mov
pop
lods
and
lahf
cmp
ret
dec
je
mov
sbb
rorl
movsb
mov
mov
or
xor
push
cmp
cmpsb
iret
adc
pop
and
sbb
or
lret
inc
outsb
pop
add
test
cmc
testl
in
sahf
dec
push
shlb
shll
aas
shl
fimuls
loop
testl
or
mov
ss
imul
mov
out
fistps
test
add
bound
push
aad
lds
add
jmp
and
mov
mov
inc
add
push
fwait
mov
pop
fwait
inc
mov
dec
stos
push
push
pusha
test
dec
loope
inc
dec
sarb
out
mov
push
lret
lods
jg
stos
aad
xchg
push
push
push
jmp
xor
cmpsb
lea
pusha
inc
ret
pop
push
cwtl
mov
stc
into
inc
pushf
jge
push
jmp
add
lret
lcall
test
cli
in
fimull
xlat
shl
mov
lret
call
mov
add
lcall
cmc
call
insb
push
int
jecxz
add
mov
addr16
inc
stc
fistl
call
into
in
fst
sub
adc
dec
sub
cld
fisubrl
sub
ret
cmp
jmp
hlt
int
test
in
sbb
inc
xchg
std
xchg
mov
dec
and
xor
push
lcall
ficomps
stos
test
stos
dec
dec
insb
hlt
xor
loopne,pt
xor
mov
cmp
mov
aaa
xchg
imul
push
add
rolb
xchg
push
cmpsl
mov
stos
outsb
ret
lcall
out
mov
jp
pop
jae
jae
jmp
pop
add
popf
sbb
mov
push
stos
add
pop
sti
cmp
addl
int3
mov
pop
pop
js
pop
mov
xchg
movsl
call
loopne
add
call
adc
iret
je
dec
rcrl
sahf
mov
lds
insb
jo
aas
out
std
xor
mov
icebp
and
and
call
nop
cli
push
dec
sbb
mov
xor
fucom
outsl
xor
adc
sbb
cld
iret
push
add
xor
fiadds
mov
pop
jno
andl
inc
inc
cwtl
mov
and
lret
leave
das
push
xchg
mov
decb
test
ja
add
pop
adc
sub
loopne
mov
pop
xor
cmc
dec
mov
cmp
inc
push
pop
shrl
push
and
inc
addr16
push
and
ror
mov
mov
xor
or
mov
in
rol
inc
jbe
mov
add
jnp
int
inc
insb
dec
xchg
pusha
test
sub
lret
fidivl
loope
aaa
into
mov
sbb
sti
outsb
mov
inc
push
cltd
cmpsl
adc
push
icebp
pushf
lcall
nop
jg
stos
cmc
push
mov
pushf
call
push
repz
mov
cltd
sbb
int3
adc
in
push
ja
or
repz
jle
inc
mov
roll
xchg
or
jae
rcrl
inc
jae
lahf
mov
cmp
andb
cmp
fistl
popa
sbb
adc
bsf
lahf
jo
in
jmp
out
xchg
mov
jmp
mov
push
lret
nop
hlt
imul
adc
sbb
stos
in
lcall
mov
xchg
xchg
fxch
xlat
fiaddl
sub
ljmp
int3
popf
les
and
jg
xor
or
xor
lret
arpl
jb
outsl
cmp
cmp
cmc
xorb
mov
mov
ret
mov
cmpb
stos
negb
insl
xchg
fimuls
dec
les
xchg
pop
push
adc
lods
adc
mov
aam
mov
jecxz
dec
je
std
and
and
adc
xchg
fcoms
jbe
cmp
test
adc
inc
mov
cmp
and
jg
cmp
pop
push
xchg
mov
lock
sub
stc
mov
add
sbb
test
js
sub
lds
scas
lea
or
inc
aaa
push
and
sbb
dec
mov
xchg
sbb
xor
mov
jle
movsl
cmp
cmp
fbld
int
push
out
es
pop
jecxz
jnp
mov
mov
dec
cmp
xchg
jge
fldenv
jge
inc
inc
out
mov
int
jp
inc
xorb
mov
xor
ss
jbe
push
mov
mov
jo
movsl
in
shll
cld
cmp
dec
mov
pop
mov
repz
sbb
jp
int
cmpsb
sub
adc
or
ss
scas
mov
in
rclb
lret
xchg
push
mov
nop
testb
addr16
cmp
es
mov
into
inc
in
add
cltd
sub
cmpb
cmpsb
loop
ret
lods
lock
andl
mov
popa
push
adc
jl
aad
inc
insb
imul
or
xor
in
push
dec
sbb
push
cmp
negb
jae
movsb
push
fmulp
inc
lahf
mov
jno
daa
jns
adc
xlat
mov
mov
or
cmc
adc
cmp
lahf
sahf
lret
lods
pop
lcall
jns
aad
and
or
shll
not
ret
push
popa
lods
adc
outsb
add
pop
out
mov
xchg
repnz
insl
mov
fisubs
nop
pop
mov
adc
insl
jbe
je
cmpb
aam
jne
js
sbb
add
or
fsts
out
jne
faddl
mov
test
in
dec
je
pushf
dec
add
stos
stos
icebp
aaa
mov
xchg
add
pop
aad
out
stc
sbb
lret
jno
in
seta
mov
push
out
sbb
sub
add
imul
cmpsl
push
sti
mov
add
pop
shl
inc
mov
pop
aas
mov
cld
pop
or
ljmp
xor
ds
fistpll
lret
cmp
gs
sub
mov
outsl
fsubl
out
stos
iret
popa
mov
jne
sub
test
fistl
or
dec
sbb
int
cli
fadd
sub
es
add
jne
pop
inc
outsb
sbb
mov
pop
xor
popa
pop
inc
outsb
out
leave
lcall
sbb
in
outsl
enter
cmc
xchg
inc
pop
out
movsl
mov
sarb
daa
out
add
lds
sub
addr16
pop
test
out
in
add
xchg
mov
stos
fildll
mov
mov
jno
lock
ficoms
xchg
or
sub
pop
aad
inc
sti
addr16
leave
xor
out
cmpsl
sub
repz
ljmp
mov
sub
cmc
outsl
adc
or
gs
add
insl
cltd
sbb
cmp
loopne
repnz
mov
mov
jmp
mov
xchg
sub
fisttpl
sahf
stos
mov
dec
sub
cmpsl
mov
cld
rcll
les
cwtl
cld
jl
jmp
nop
lods
add
insl
test
incl
cmc
push
jmp
push
rol
or
sbb
mov
fldl
sbb
jle
out
xor
fcomps
push
fcomp
ss
mov
lcall
adc
mov
test
leave
inc
jbe
and
repnz
mov
ret
rclb
jo
jne
pop
mov
sbb
insb
loope
xor
or
xchg
dec
cmp
inc
aaa
rcrb
mov
shll
jno
sbb
push
pop
push
fs
ja
scas
sbb
inc
pop
cmpsb
adc
imul
dec
and
je
mov
xchg
xchg
and
cltd
das
mov
sub
jg
add
mov
fsubs
mov
pop
cltd
test
test
pop
jns
push
loop
in
inc
push
test
imul
sarl
ss
dec
push
je
std
sahf
or
ficoml
dec
icebp
stos
and
add
inc
mov
xor
push
add
arpl
jnp
or
mov
cltd
daa
repnz
mov
std
mov
cmp
sbb
enter
popf
sbb
or
in
mov
mov
dec
jl
mov
sub
mov
lret
fdivrs
pushf
adc
dec
cltd
cli
fisttps
sub
or
fistpl
ficoms
cmc
cld
fcmovnb
jne,pt
popf
xchg
push
cld
shrl
mov
xchg
mov
dec
and
inc
sbb
mov
pop
icebp
jmp
in
add
or
out
xchg
push
adc
out
insl
xchg
pop
adc
xor
clc
stos
mov
adc
xchg
and
and
ret
inc
iret
push
or
mov
fdivl
rcl
cmp
insb
orb
inc
push
pushf
rolb
mov
inc
and
lds
xchg
adc
fs
pop
jbe
rorl
fidivrs
sbb
pop
mov
enter
push
mov
rorl
add
jne
dec
lds
dec
pop
jb
test
adc
mov
inc
pop
push
xor
sub
or
pop
shl
jl
add
int3
scas
out
mov
fists
lds
das
nop
and
iret
cmpsb
or
sub
ds
incb
mov
pop
mov
mov
out
and
pop
push
pop
jecxz
mov
cld
cld
cmp
mov
push
int3
lret
enter
rorb
sub
pusha
fadd
movq
push
jl
pop
fstpt
shlb
inc
pop
xchg
adc
adc
andnps
testb
rsqrtps
cltd
sub
mov
fcomi
scas
cmc
jo
sub
jmp
push
xchg
lret
shl
negl
cmp
push
pop
pusha
sbb
testb
push
cld
sbb
lods
sarl
fsubrl
pop
xchg
dec
pop
adc
jmp
aas
outsb
fisubl
int
jp
gs
aam
insl
inc
or
sub
icebp
mov
popa
lret
faddl
popf
sub
add
pop
pop
mov
push
and
sub
push
ds
sahf
cwtl
dec
jg
in
push
clc
sub
pop
mov
and
aam
ret
mov
sahf
lods
sub
mov
lods
movsb
rorl
xor
fidivs
jp
in
roll
add
dec
ljmp
xchg
xchg
or
shl
subb
jg
ret
mov
popf
lock
xlat
lods
imul
inc
js
inc
mov
and
in
add
pop
add
and
nop
xor
repnz
sbb
movl
cmc
or
push
push
adcl
mov
sbb
mov
pop
sbb
xlat
cli
in
mov
cmp
popf
inc
xchg
push
dec
adc
fstl
jno
sub
inc
stc
cwtl
sub
mov
sub
sbb
fstl
mov
cltd
imul
ss
xor
jo
enter
fsubrl
add
mov
mov
cmp
in
pop
cmp
mov
imul
sub
movl
sbbl
data16
pop
mov
ret
xor
fwait
pop
cmp
jns
mov
in
jmp
stc
mov
inc
mov
in
xchg
mov
scas
mov
xchg
test
imul
ss
sub
mov
icebp
and
or
leave
decl
in
or
sub
sbb
loopne
jecxz
subl
cmp
cltd
pop
fwait
push
xchg
lods
cmpsl
pop
ret
insl
jg
sbb
pop
jp
jb
clc
sub
add
jae
pop
mov
jge
add
sbb
out
dec
test
xchg
inc
mov
mov
sub
jecxz
pop
jnp
jbe
sti
add
dec
imul
gs
push
pop
and
mov
sbb
xchg
bound
jb
push
outsl
test
bound
test
xor
xchg
mov
imul
rclb
shrb
popf
mov
fldenv
mov
inc
outsl
sbb
dec
data16
mov
repnz
dec
fiaddl
mov
pop
inc
ss
and
fld
and
cld
xor
pop
leave
push
mov
pop
pop
pop
mov
push
clc
cmc
pusha
or
jne
mov
mov
and
fwait
hlt
ja
jbe
ret
jle
jmp
rcll
jl
dec
xor
pop
jmp
loope
or
out
notl
movsl
xlat
notb
xor
sub
ret
push
scas
in
and
and
or
xlat
mov
mov
jecxz
sub
inc
sbb
cmpl
dec
rol
inc
loop
push
adc
call
push
and
jg
pop
pop
leave
mov
xchg
andl
pushf
lret
xchg
pop
inc
cmp
push
mul
and
fwait
into
cltd
push
iret
jbe
lds
movsl
dec
sub
adc
pop
jae
test
ja
mov
add
xchg
sbb
popa
adc
fdivs
js
insl
test
mov
shl
jl
in
aam
sahf
mov
add
xor
push
ds
pop
stos
xlat
in
jne
cmc
inc
insb
cmpsl
outsb
inc
jne
mov
sub
jb
dec
mov
cmpsb
js
dec
mov
lcall
add
jo
push
ja
pop
fsubs
in
xor
mov
fsubr
mov
in
movsl
rolb
cmc
lret
aad
sbb
lods
jno
ljmp
push
mov
sbb
ja
lock
lds
mov
into
xchg
bound
xchg
jge
and
add
clc
std
xor
lret
in
iret
shr
pop
jae
ret
filds
dec
lock
and
std
cwtl
or
ret
jae
leave
stc
in
xchg
loop,pt
outsl
fldcw
add
fisttpll
xchg
psllw
imul
push
mov
inc
sbb
or
xor
sarl
push
jg
push
mov
add
popf
cld
mov
xchg
xor
int3
out
mov
push
ss
mov
or
int3
xlat
test
fldcw
jmp
xor
pop
mov
mov
je
mov
repnz
push
jmp
in
add
rolb
test
stos
lock
xchg
pushl
push
xchg
push
dec
ja
popf
in
das
dec
test
cmp
pop
outsl
into
repz
mov
lcall
pop
xor
push
dec
push
cli
inc
les
les
dec
push
adc
cld
pop
push
dec
cmp
cld
test
xchg
jge
call
xchg
lret
gs
dec
inc
call
int
enter
inc
xchg
cmp
push
push
movsl
xlat
icebp
cld
pop
mov
loope
adc
or
test
dec
xchg
jg
icebp
pop
pop
cmc
sbb
cltd
scas
aad
js
inc
jbe
xor
fwait
pop
ja
xchg
ljmp
pop
cmp
push
frstor
pop
cmp
dec
das
fs
mov
lcall
lahf
mov
and
cmp
daa
or
push
leave
adc
test
sub
lahf
ljmp
loopne
pop
loop
decl
mov
aaa
mov
xor
add
hlt
pushf
repnz
cmp
inc
dec
push
push
mov
adc
sbb
dec
xchg
jb
adc
inc
pop
les
scas
or
sub
add
loopne
push
fldcw
xchg
dec
sub
cli
mov
scas
cmp
mov
bound
cmp
push
frstor
inc
jge
jge
pop
dec
xor
mov
inc
mov
or
in
sub
push
jle
scas
std
mov
mov
adc
xor
lods
pop
pushf
or
into
mov
insl
mov
push
xchg
xlat
pop
and
shrb
rorb
call
push
sub
sub
mov
inc
repnz
popf
lcall
and
lds
mov
lods
mov
mov
das
adc
ret
std
mov
jg
mov
cmp
cmp
out
les
aad
push
fbld
int
sub
mov
dec
push
outsb
jl
mov
mov
xchg
sub
push
leave
or
push
mov
push
adc
test
pop
out
inc
aaa
imulb
push
mov
shr
mov
cmpsl
and
jb
sahf
lret
mov
cmc
inc
out
mov
xlat
inc
rcr
xchg
lods
ss
mov
incl
push
dec
in
cmp
in
pop
imul
and
adc
fwait
mov
mov
jbe
test
hlt
push
filds
loopne
mov
mov
test
stc
cmp
sbb
call
or
mov
mov
inc
mov
pop
nop
jp
imul
stc
xor
fwait
jge
popa
in
cmpsb
mov
xchg
mov
pop
test
orb
call
mov
xchg
imul
inc
or
push
sbb
add
pop
xlat
adc
add
enter
dec
aam
lret
ljmp
lret
stc
out
std
sbb
sti
mov
sub
gs
push
call
mov
lea
dec
add
xchg
mov
xchg
jg
xlat
sub
imul
daa
cmp
cmp
mov
fldl
xchg
stos
mov
push
scas
mov
push
out
add
in
add
.byte
push
in
.byte
adc
sbb
add
add
fcmovnbe
test
fildll
mov
cs
xchg
push
lret
sub
jno
mov
sbb
icebp
jp
and
lret
cwtl
daa
fnstsw
pop
jmp
xorb
aad
lods
pop
push
ret
jb
push
stc
mov
xchg
dec
push
jl
pop
dec
adc
xchg
cmp
cmp
inc
mov
insb
gs
sti
rcll
add
push
adc
fnsave
out
dec
sbb
clc
sub
les
int
lods
jb
lds
adc
ret
mov
xlat
adc
movsb
xchg
leave
das
repz
pop
neg
dec
push
add
movl
dec
and
not
jg
sahf
lret
pop
xchg
stc
test
sub
sbb
sbb
pop
sub
negb
inc
rolb
jo
sub
or
popa
lock
cltd
dec
pop
mov
xchg
add
cli
daa
sbb
jae
cltd
fldenv
xchg
add
and
test
jecxz
ss
test
xor
jo
pop
pop
inc
add
mov
xor
psrld
jecxz
inc
xchg
xchg
das
xchg
sbb
xlat
cmp
aam
sbb
dec
pop
fstpl
cmpsb
pop
pop
inc
lret
test
mov
add
adc
repnz
adcb
fcoms
ficomps
sbb
cld
and
xchg
fisttpl
mov
mov
jmp
lods
push
subb
fisttpl
mov
jl
fs
loop
mov
dec
dec
mov
and
mov
add
push
push
mov
mov
push
sbb
mov
fs
or
push
add
cs
and
push
leave
push
mov
xor
cli
fld1
push
pop
mov
sbb
and
inc
mov
and
ds
lea
mov
lock
lcall
cmp
fnstsw
push
sti
xchg
testl
sbb
test
and
sub
mov
stos
mov
pop
std
sub
jo
stos
insb
dec
push
roll
jmp
test
pop
faddl
fildll
aad
xor
xchg
sub
gs
xchg
sar
pop
adc
lods
jp
lock
out
addr16
scas
push
pop
pop
pop
repz
xor
es
jmp
clc
insb
mov
subl
in
jne
or
cmp
adc
outsb
push
mov
rolb
movsl
xor
aad
ud1
outsb
sub
cmp
xchg
outsb
dec
cmpsb
push
pushf
lods
cmp
mov
rcrb
push
mov
gs
adc
scas
mov
xlat
jge
pop
xchg
idiv
add
in
add
ficoms
testl
scas
dec
leave
sbb
movl
js
repnz
test
jl
dec
add
pop
push
pop
xchg
and
pop
fcoml
mov
clc
cmp
repz
fs
mov
mov
fildl
jge
inc
sub
stc
dec
mov
add
mov
xchg
sub
cld
jno
and
addr16
test
in
aas
pop
lahf
enter
subl
lea
hlt
out
sahf
and
addl
scas
pop
jae
jmp
mov
lret
mov
sub
fcomip
rcrl
dec
fs
fcmovnu
sbbl
in
fdivs
sbb
cmp
or
dec
cli
enter
sbb
loope
adc
xor
inc
ljmp
lahf
xorl
mov
ljmp
sub
lahf
sub
mov
mov
rcrl
xchg
adc
dec
or
inc
sbb
clc
test
sbb
mov
xchg
xchg
loopne
negl
das
movsb
outsl
xlat
lcall
lock
adc
push
int
inc
js
mov
in
aaa
sub
enter
mov
lock
cmc
cmp
xchg
push
imul
rorl
cltd
adc
xchg
adc
int
push
insb
and
aaa
call
ret
popa
push
movd
pop
loope
pop
sti
jecxz
fidivl
lcall
shlb
adc
lods
add
jns
decb
inc
fld
cmpsl
mov
add
xor
pop
mov
inc
fwait
xor
pop
or
pop
pop
pop
dec
lret
mov
mov
pop
pop
dec
out
dec
push
push
nop
dec
xchg
jb
mov
push
je
les
in
push
lahf
test
out
aad
add
test
mov
mov
lret
jg
xchg
les
pop
add
out
mov
clc
mov
lret
addb
jns
scas
sbb
jle
xlat
jecxz
fistps
std
and
sub
mov
test
jo
xor
clc
pop
mov
imul
in
ficoms
dec
insb
pop
call
pop
lods
add
mov
push
xor
pop
mov
cltd
sti
mov
js
mov
loopne
rolb
daa
iret
sub
dec
jne
in
xchg
flds
jl
mov
clc
shrl
ljmp
xchg
sbb
fcmovu
adc
add
repnz
in
inc
in
jns
xor
arpl
jmp
xchg
sahf
ljmp
adc
push
adc
popa
cli
sbb
pop
aam
pop
mov
mov
out
push
xchg
xlat
fists
inc
dec
fcoms
jbe
push
loopne
movsl
sub
xor
hlt
in
inc
outsl
sbb
popa
and
ret
js
mov
nop
sarl
movsb
cltd
xchg
lret
gs
or
inc
cs
sbb
lret
hlt
push
dec
pop
mov
sbb
cmp
iret
aas
sbb
popf
mov
aaa
sub
xchg
es
add
repnz
out
or
mov
push
das
jnp
cmpsb
xchg
inc
dec
push
gs
jg
iret
fcoml
loop
lods
ret
fldenv
jae
insb
aas
mov
fwait
movsl
mov
cld
and
or
inc
xchg
sbb
test
clc
adc
inc
mov
mov
fisubl
cmp
mov
mov
xchg
addb
sub
int3
adc
push
fnstenv
add
inc
out
popf
or
call
pop
mov
ja
dec
in
inc
pop
xchg
test
mov
xchg
cmp
push
jb
mov
arpl
push
xor
lods
fistpll
inc
lock
loope
lcall
popl
and
xor
dec
push
jns
or
sahf
cmp
or
cmp
ret
inc
iret
cmpsb
je
pop
daa
and
cmp
cltd
test
mov
int
push
xchg
cwtl
popf
adc
push
and
call
movsb
in
xorb
insl
mov
push
mov
pop
xor
mov
sub
loopne
xor
pop
jg
push
jae
mov
lods
jecxz
xchg
icebp
fldl
jo
test
pop
call
jne
mov
xchg
jns
rclb
test
jp
pop
cmp
ljmp
ss
push
test
mov
xor
dec
jl
cmp
mov
ficompl
sbb
xchg
mov
cmpb
aam
xchg
jg
jle
inc
mov
fimull
xor
or
mov
mov
test
sub
lock
mov
fistps
mov
dec
mov
fwait
incl
out
add
lea
leave
mov
dec
or
xchg
dec
push
popa
jp
jnp
movsb
pop
ret
mov
mov
push
pop
add
xchg
or
pusha
das
cmp
iret
adc
mov
xchg
aaa
dec
clc
mov
jmp
jmp
test
rclb
jmp
int3
sbb
mov
ds
call
int
adc
jle
and
xlat
dec
jne
pop
inc
inc
ljmp
sub
dec
adc
in
xorb
popf
mov
jp
or
or
dec
push
xchg
inc
std
ficoms
nop
mov
xor
repnz
cmp
lcall
push
lcall
xor
jle
scas
xchg
mov
xchg
pop
in
xor
enter
xor
sub
fs
or
pop
addb
mov
cmp
mov
pushf
mov
mov
pop
xor
clc
cli
mov
mov
ss
or
and
jg
bnd
bound
xchg
fwait
cmpsl
push
or
pusha
push
imul
into
pop
and
push
xor
adc
sti
xor
push
clc
loope
dec
pop
leave
pushw
mov
adc
jecxz
adc
idiv
ss
ljmp
insl
inc
insl
repz
jle
mov
sbb
mov
daa
xor
sbb
inc
and
adc
movsb
adc
push
mov
stos
inc
push
mov
cmp
subl
sahf
mov
add
pop
jecxz
in
adc
mov
mov
add
imul
mov
mov
cld
shlb
test
leave
addr16
in
push
addr16
sbb
fmul
push
adc
adc
je
aad
or
sahf
cwtl
scas
ss
and
loope
enter
lcall
cmpsl
xchg
pusha
xchg
les
or
test
dec
mov
jb
in
mov
xor
mov
sbb
push
int3
sbb
movsl
mov
sub
inc
shl
cltd
dec
repnz
xor
sub
stos
jnp
cmp
pop
inc
je
fisubl
adc
push
loope
in
ja
je
pop
mov
mov
dec
inc
int
xchg
push
ss
enter
or
lret
adc
adc
idivb
lea
jno
xor
push
rol
clc
test
mov
sub
lds
aas
push
dec
setl
nop
cmc
xor
insb
fldenv
icebp
sub
lret
enter
rcr
jmp
cmpsb
add
in
add
xlat
out
dec
mov
outsl
subl
bound
in
xor
ljmp
fs
mov
sqrtps
repz
cmp
insl
loop
in
mov
out
dec
pop
shl
insl
and
int
inc
nop
xor
jp
push
adc
mov
pop
push
test
sub
pop
js
aaa
and
arpl
testb
cwtl
mov
and
push
pop
xor
mov
insb
rorb
out
pop
sub
arpl
sbbl
cli
adc
inc
sar
inc
data16
push
and
mov
aaa
hlt
mov
shl
dec
push
mov
xorb
aam
cmp
mov
cwtl
xorl
push
inc
or
iret
shll
imul
cmpsl
ss
sub
adc
cs
pop
movsl
lods
roll
sub
adc
xchg
xchg
into
push
fwait
xor
jle
bound
shr
add
push
push
push
lcall
pop
cmp
pop
mov
fbstp
cs
xchg
push
jb
cltd
outsb
jmp
xor
push
xor
popf
or
das
sbb
or
or
push
std
daa
aas
dec
xchg
pop
dec
data16
cmpsl
mov
jne
ljmp
aaa
xor
lock
pop
xor
hlt
test
jne
sbb
mov
test
cld
adc
inc
jns
outsb
lret
sbb
dec
dec
int3
pushf
scas
loope
sub
in
adc
or
iret
lock
push
js
cld
in
out
jae
xlat
pop
jns,pn
fisubs
in
dec
das
aas
xchg
inc
les
psubsb
out
mov
out
sahf
jo
jge
lret
inc
iret
pop
pop
mov
test
arpl
sub
idivl
call
or
xchg
outsl
movsb
or
stc
es
int3
or
inc
dec
dec
mov
mov
or
aaa
loope
mov
sub
mov
int
jb
jge
aaa
movsl
push
and
sbb
inc
mov
xor
les
cs
push
dec
mov
inc
roll
xchg
outsb
add
cmp
lahf
push
cwtl
notl
sbb
inc
subb
pop
shlb
adc
lcall
push
subb
in
out
push
stos
les
push
sbb
push
jge
push
sbb
ret
sub
and
or
sarl
and
xor
cmp
mov
and
ljmp
or
je
add
and
es
mov
xchg
cs
lods
cltd
mov
icebp
repz
dec
mov
push
mov
inc
fdivs
faddp
imul
in
sbb
cmpsb
stc
sub
push
push
scas
sub
test
rcrl
ja
mov
sub
pop
mov
stc
rolb
negl
xor
stc
and
movl
xor
push
int
cs
hlt
xchg
std
dec
sbb
cmp
lcall
xchg
xchg
xor
loope
pop
adc
loope
add
mov
icebp
stc
out
inc
adc
mov
push
pusha
into
test
pop
dec
jecxz
decb
push
hlt
stc
push
xlat
sub
repnz
stc
mov
xor
je
addr16
inc
in
and
cmp
add
dec
mov
adc
sbb
sbb
scas
loopne
test
push
ljmp
imul
sub
je
mov
ljmp
aaa
out
and
rcl
mov
mov
mov
sub
out
cli
mov
mov
xchg
push
das
das
xchg
repz
clc
je
cmc
loop
mov
pop
ja
ffree
jnp
mov
les
cmp
xchg
call
clc
adcb
dec
pushf
hlt
test
popf
rolb
push
jmp
ficoms
ror
daa
inc
in
js
mov
jno
add
bound
sub
adc
ret
aaa
adc
rorb
iret
cli
outsl
fisttpl
mov
push
fdivl
enter
ret
pop
cmp
in
ja
addr16
or
mov
shll
sub
data16
dec
cmp
sbbl
sti
test
cltd
popa
xchg
jae
mov
inc
or
in
sahf
cmp
orb
imul
out
mov
mov
shufps
stc
lahf
enter
sahf
jnp
jmp
mull
cltd
mov
mov
lcall
inc
leave
iret
fsubrs
loope
push
je
inc
mov
stc
into
icebp
cmp
bound
push
ret
inc
sub
lea
adc
jmp
int
mov
fcoms
popf
into
cmp
pop
jb
and
mov
cmpsl
inc
pop
xor
xor
scas
pop
cmpl
cmp
pushl
sbb
enter
imul
outsl
or
pushl
jp
xlat
cld
jae
je
rol
lcall
imul
shrb
push
fisttps
iret
add
repnz
adc
outsl
fimull
call
xor
es
in
jbe
scas
test
add
dec
jns
jecxz
std
pop
dec
mov
pop
stos
addr16
mov
cmp
stos
pop
cmpl
mov
test
inc
and
jle
test
lretw
or
stos
push
sarl
mov
sub
lods
sub
jo
inc
test
mov
sub
hlt
aas
adc
pop
fcom
je
in
mov
in
cld
jp
fiadds
sti
adcb
add
mov
and
enter
jbe
sahf
dec
pop
stos
xchg
inc
push
hlt
fsub
lahf
clc
sub
jecxz
mov
outsl
adc
dec
sub
xchg
pop
mov
mov
add
cmp
or
iret
orl
sbbb
addr16
xchg
ds
xor
cmpsb
push
sbb
xor
lahf
out
sti
mov
popa
or
jecxz
insl
pop
mov
xchg
jne
xor
outsb
sbb
pop
arpl
jmp
cltd
dec
imul
xchg
jbe
mov
or
jmp
push
fdivp
lock
adc
arpl
mov
mov
enter
jge
jb
lock
push
sub
mov
inc
cmpl
xchg
test
ficoms
add
icebp
dec
popa
test
cmp
and
aad
insl
mov
test
xor
push
xchg
ja
iret
jbe
and
rclb
insb
xchg
cltd
hlt
jle
test
push
inc
adc
fidivs
pop
sarb
jns
mov
push
mov
pop
lret
jle
es
hlt
mov
imul
push
bswap
push
aas
cmp
xchg
mov
push
fs
fildll
xchg
shlb
dec
mov
rep
sarl
dec
nop
pusha
pop
push
pop
cmpsb
cmp
gs
mov
bound
jb
xchg
nop
das
push
xor
or
out
dec
mov
cmpsb
enter
iret
popa
int3
mov
incb
loopne
nop
test
or
jae
cs
movsb
cmp
nop
mov
sub
scas
or
sbb
xor
pop
and
fdivrp
add
mov
sbb
adc
in
sbb
mov
cmp
fstl
dec
hlt
arpl
mov
sbb
cmpsb
inc
imul
mov
hlt
jnp
sti
or
outsl
push
adc
cmp
test
incl
pop
and
or
push
cmp
or
dec
add
imul
repz
mov
arpl
decl
add
pop
lods
ja
cmpsl
cmp
je
jmp
insb
stos
fisubl
cmp
mov
mov
sti
shll
dec
mov
jmp
pop
stc
push
pushf
mov
push
cmp
pop
cltd
loope
imul
push
jns
adc
mov
sahf
repnz
aas
shl
ja
push
rcrl
mov
imul
adc
and
nop
out
xchg
idivb
fcom
pop
gs
xlat
mov
adc
inc
adc
fildll
enter
and
and
mov
adc
mov
stc
push
xor
jnp
dec
jle
xor
mov
movsb
fcomp
or
pop
xchg
dec
mov
inc
sti
xchg
or
iret
enter
mov
ss
mov
cwtl
mov
ljmp
mov
stos
or
dec
jmp
cwtl
inc
sahf
mov
inc
and
outsb
cs
aaa
cmpsb
xlat
test
aad
add
push
lods
mov
ret
pusha
nopl
jb
fldl
adc
xor
imul
xor
repz
pop
loope
lea
leave
lcall
push
fmuls
mov
mov
addr16
cli
dec
cli
inc
iret
push
push
and
nopl
push
and
inc
push
sbb
aas
aad
jbe
xchg
adc
cld
pop
es
or
add
mov
sahf
xchg
fmull
repz
loop
push
data16
loopne
decb
out
jnp
vmptrst
dec
mov
addr16
shl
pop
arpl
cmpsb
mov
sbb
jecxz
in
mov
roll
les
cmp
jae
cs
call
sbb
sarl
adc
dec
xor
stos
or
sbb
pop
cmp
push
and
pop
adcl
pop
out
push
lahf
adc
mov
cwtl
xchg
stc
inc
xorl
shl
push
pop
in
dec
push
push
aaa
xchg
addr16
je
sbb
sub
test
adc
je
push
jg
in
insb
dec
cld
negl
xchg
adc
push
test
mov
adc
stc
les
push
movsl
in
mov
lahf
lret
pop
cmp
fldln2
xchg
mov
xchg
and
inc
jecxz
xor
mov
add
nop
call
int3
out
incb
dec
test
mov
je
lahf
out
push
cmp
cmp
jecxz
xchg
sarb
xchg
adcb
mov
jmp
push
movsl
jmp
jge
lret
or
pop
popf
mov
cmc
mov
jmp
pop
cmp
in
fsubl
jb
scas
jo
pop
jle
jbe,pt
stc
dec
int3
cmp
icebp
inc
enter
push
repz
cmp
pop
inc
add
mov
push
jb
leave
mov
sbb
push
adc
lahf
std
es
testb
xchg
outsb
enter
leave
repz
dec
lods
xorl
movsb
ds
lret
stc
push
not
add
lret
aam
mov
pop
inc
pop
inc
mov
sbb
sub
jp
aas
lret
mov
pop
xor
nop
subb
adc
sub
cmp
stc
movsl
lahf
push
dec
pop
and
mov
cmpb
push
mov
cmp
bound
ret
shrb
inc
fistl
andl
hlt
int3
jb
jl
fs
fcmovb
mov
fsts
std
push
outsl
jae
aas
adc
sub
pop
mov
into
add
outsb
adc
into
vmread
movsl
insl
mov
rclb
in
xchg
push
les
jmp
stos
mov
fsubrs
mov
orb
bound
loope
fs
aad
jmp
xor
push
call
das
testb
cld
lcall
lret
lods
xchg
mov
int3
jb
sbb
mov
sub
mov
jle
das
mov
mov
sahf
shrl
movsb
cmpl
jnp
aad
inc
or
mov
jg
mov
pop
or
xchg
int
xlat
lahf
push
and
fisubrl
jns
pop
or
fwait
push
push
dec
mov
popfw
scas
imul
addr16
add
xchg
scas
outsl
cld
xor
repnz
int3
mov
push
adc
movsl
sbb
cmpsb
xchg
adc
push
cmp
jae
mov
mov
xor
insb
loop
je
cltd
out
sub
mov
inc
push
mov
xchg
mov
lahf
push
mov
pop
jnp
clc
dec
ljmp
ja
cwtl
rol
and
clc
jl
mov
popf
mov
nop
adc
pop
xlat
in
lock
jp
cwtl
pushf
sub
mov
out
cmp
adc
sbb
stos
cld
jle
fwait
imul
xchg
and
dec
lret
xchg
ret
out
inc
pop
add
sbb
dec
push
insl
xlat
gs
and
outsl
add
test
xlat
fsubrs
push
sahf
imul
jns
mov
jge
sbb
test
iret
das
shlb
adc
pop
loopne
cld
lds
je
sarl
dec
mov
jp
test
cmpsl
in
jge
and
mov
lret
aaa
jnp
dec
das
xchg
pop
sub
mov
and
mov
or
sub
push
loop
pop
jecxz
sub
repz
pop
jmp
cs
jmp
mov
xlat
insb
dec
and
pop
mov
lods
mov
cs
cmovb
fcmovnu
mov
in
push
pop
addr16
dec
and
mov
pop
add
xor
loope
shr
mov
fwait
pop
subb
pop
cwtl
jnp
movsb
insl
sbb
inc
sti
divb
pop
je
pop
ds
test
push
inc
in
push
cmpsb
leave
dec
mov
ret
mov
ret
jl
addb
xchg
outsb
cmp
rorl
lock
inc
aas
mov
pushf
pusha
adc
mov
ljmp
or
mov
cmpsl
pop
xor
pop
push
and
mov
adc
cs
dec
xlat
add
sti
idivl
in
daa
in
jl
mov
push
or
sbb
loop
pusha
add
pop
loope
adc
sub
fwait
loope
mov
pop
jo
inc
test
sbb
mov
add
cmp
insb
and
and
ret
push
adcb
mov
dec
testl
les
pusha
mov
adc
xor
xchg
mov
ret
lods
mov
fcoml
sti
lds
mov
pop
nop
cs
lcall
cld
sub
dec
fsubrl
xor
stos
sbb
jae
xchg
xchg
xchg
jecxz
sbb
rorb
lods
scas
xchg
or
stos
mov
push
pop
dec
push
jecxz
push
cmpsl
pop
cmc
pop
mov
fbstp
mov
scas
mov
fldl
mov
or
test
daa
cld
pop
dec
bound
js
jae
inc
pop
int3
pop
dec
adc
adc
iret
dec
iret
push
call
leave
div
jmp
adc
ds
mov
les
into
int3
and
adc
fidivrl
fistpll
insl
out
cmp
aad
fcomps
lods
roll
in
and
mov
in
jns
xor
lods
cmovbe
xor
scas
or
std
pushf
pop
xorb
ret
add
jmp
xchg
stos
mov
shlb
push
lds
cs
imul
jne,pt
jge
aam
shlb
jp
sar
add
push
jae
mov
test
xchg
test
jnp
dec
dec
add
std
repnz
cli
cmp
xchg
lods
mov
jl
inc
xlat
inc
jl
aaa
scas
hlt
xchg
aad
out
xchg
movsb
push
xchg
push
lods
movsl
jbe
data16
lcall
clc
and
mov
fbld
xlat
lret
cmp
ds
xor
roll
mov
test
or
sbb
jle
fldl
mov
adc
daa
jecxz
mov
mov
lret
pop
mov
lods
jp
loope
test
jns
cmc
mov
add
scas
lret
cmpl
cwtl
inc
jbe
and
mov
jno
dec
ds
cmpsb
iret
into
sub
enter
bound
int
mov
jae
ret
push
pop
jae
sub
xlat
testb
jne
cld
outsb
aaa
adc
pop
ds
xchg
test
xor
xor
fisttps
ds
sub
mov
lret
leave
pushf
decl
jmp
fistpll
fisttps
push
or
fistl
lods
adc
dec
pop
dec
mov
mov
or
dec
xor
clc
inc
or
lea
test
dec
mov
push
inc
adc
imul
daa
divl
cmpsl
mov
and
pop
sbb
inc
and
movb
xchg
lods
movsb
mov
mov
pop
aam
mov
jbe
or
or
test
mov
icebp
mov
push
dec
add
mov
sbb
orl
push
add
push
mov
insb
aas
negl
mov
mov
lds
out
xchg
and
mov
daa
imul
add
jmp
push
rorb
in
push
push
push
out
xchg
and
xor
lds
mov
push
push
cmp
cmp
fldln2
pop
sbb
add
repnz
xchg
or
sahf
jp
and
push
dec
sbb
inc
lods
insl
inc
fisubrl
stos
push
xor
mov
inc
lds
test
xchg
push
jmp
push
int3
jbe
fcomps
dec
mov
sti
jecxz
inc
repnz
out
adc
pop
fsubrs
or
int3
and
mov
sub
dec
jle
sub
inc
fidivrl
sbb
jae
push
jbe
aam
push
adc
mov
ud0
dec
jb
mov
xor
and
cli
movsb
mov
xchg
dec
xchg
jle
out
pop
sbb
fnstenv
lods
mov
fxch
sahf
push
fmull
in
out
outsb
inc
or
lcall
mov
xchg
jle
das
sbb
pusha
out
jno
int3
ja
pop
cs
sbb
inc
pop
dec
xor
mov
cld
mov
push
in
mov
xlat
pop
mov
insb
sahf
jb
cs
mov
adc
xchg
stos
xor
int3
arpl
outsl
push
lock
fs
adcb
cltd
call
ss
mov
sbb
mov
or
sub
lret
xchg
aaa
adc
push
sub
loope
push
or
pop
insl
clc
xor
adc
push
repnz
das
cld
adc
into
daa
in
data16
mov
cli
in
inc
sbb
pop
jmp
out
push
out
or
into
loop
inc
aam
or
push
pop
mull
mov
or
cltd
js
out
loopne
movsl
shll
push
jl
mov
test
ja
mov
dec
xchg
js
jne
mov
lret
out
or
dec
mov
popa
push
bound
dec
sub
lret
in
xchg
xor
fadds
shll
mov
mov
cmp
sbb
pusha
arpl
inc
add
mov
repz
popa
add
out
jbe
aam
sub
scas
gs
shl
push
loop,pn
stc
mov
or
mov
stos
jno
lea
nop
sarl
std
in
cltd
in
hlt
push
mov
xchg
data16
cmp
cld
add
repz
les
inc
or
sbb
jl
je
jnp
enter
mov
rcrb
lret
insl
add
mov
inc
mov
jnp
xor
movsb
sbb
ljmp
jne
cwtl
sbb
loop
mov
xor
add
sub
sub
pusha
pop
lcall
xchg
dec
lahf
std
arpl
dec
mov
push
testb
ret
jnp
jle
insl
and
jno
xchg
xchg
out
in
bound
and
pusha
repnz
mov
or
data16
sbb
mov
scas
out
cmp
int3
sub
movsl
xchg
rcrl
arpl
lods
out
jne
clc
pop
adc
scas
dec
jb
inc
adc
in
in
ret
inc
insb
mov
xchg
sbb
mov
shll
xor
imul
das
add
mov
sbb
mov
imul
cs
jg
iret
das
cmpsl
loope
xchg
pop
push
in
shll
cmc
ljmp
loope
mov
mov
push
popf
subl
rcrb
adc
mov
adc
adc
fmuls
iret
mov
and
mov
cmp
hlt
push
int
aam
fmulp
leave
push
sub
pop
xor
mov
adc
xchg
add
into
push
lds
aad
std
pop
mov
stc
mov
jbe
jb
mov
data16
mov
loopne
mov
popf
iret
mov
jge
lahf
mov
push
jbe
ret
add
das
sbb
test
movsl
cmp
push
insb
xchg
sub
push
mov
push
jmp
pushf
les
jne
mov
jmp
fxtract
push
xor
data16
sub
test
je
ja
cmpsb
test
add
dec
push
mov
dec
loopne
xchg
jae
stc
pop
mov
push
lods
daa
movsl
pop
icebp
loope
sbb
imul
adc
ret
addr16
scas
or
xchg
inc
test
int
in
es
inc
sbb
xor
and
dec
cmpsl
xchg
push
sub
jge
adc
imul
out
jl
fnstcw
lcall
cmp
in
mov
nop
fnstsw
dec
sti
into
aam
and
test
scas
btr
jle
cwtl
jle
andb
sbb
lods
insl
mov
fwait
in
scas
ret
and
test
and
fimull
cmpb
js
mov
ret
ret
dec
test
es
jp
jne
xor
jecxz
jmp
jo
rol
xor
aaa
cmp
jmp
xor
cmpsb
inc
outsl
mov
push
outsl
enter
adc
cli
jl
rolb
mov
in
dec
pushf
pushf
cmpsb
adc
lahf
push
jecxz
test
push
inc
les
push
clc
xor
stc
in
fsts
xlat
adc
popl
dec
xlat
cld
or
mov
push
pop
ss
stos
sub
add
in
hlt
or
add
xchg
scas
fwait
popa
cmpsb
inc
push
and
jge
push
pop
pop
sahf
mov
and
sbb
outsb
xor
mov
movsb
cmc
pop
aam
push
getsec
xchg
jne
scas
scas
cmovl
cwtl
arpl
add
or
add
outsb
gs
sahf
nop
fimull
popf
sbb
insb
ret
add
mov
jecxz
sbb
ret
xlat
les
sub
cmp
mov
adc
sbb
not
sub
xor
sti
mov
and
adcb
fdivl
jl
mov
dec
sub
insl
orb
test
roll
hlt
or
fisubrl
push
mov
mov
cmp
repz
or
lods
out
inc
add
jle
mov
loopne
mov
rolb
ljmp
ret
lcall
mov
sub
or
sbb
dec
pop
push
mov
add
shll
sbb
lret
ret
jno
push
mov
dec
ret
dec
sub
in
adc
in
ret
cmp
decl
lahf
xor
cmpsb
and
and
les
and
dec
in
sbb
sbb
or
xor
rcrb
pop
cmp
mov
stos
shll
adc
imul
sbb
dec
ja
jmp
xchg
adc
dec
push
ja
xlat
bound
push
jl
mov
stos
out
dec
shrb
xchg
je
push
outsl
mov
mov
jns
je
mov
mov
popf
mov
fadd
add
fidivl
jne
add
scas
cld
lret
mov
in
adc
mov
inc
and
mov
call
pop
cmp
cld
jbe
xchg
fnstsw
in
or
xchg
xor
addr16
lea
fdiv
sbb
jbe
mov
int
jmp
mov
enter
dec
dec
arpl
ficoms
imull
call
sub
es
push
add
push
push
addl
adc
push
sbb
xchg
jnp
lret
push
sub
mov
arpl
push
adc
aas
ljmp
in
jecxz
xchg
push
imul
push
or
dec
mov
add
push
adc
and
cmpsl
popf
lret
sub
jmp
fmull
pop
in
dec
clc
test
loop
lock
js
ss
call
in
ficomps
inc
stc
lret
mov
cmp
out
or
cli
sub
pop
fisubs
js
dec
cmp
jne
testl
sti
xchg
sbb
lods
ret
shlb
xor
repnz
sahf
mov
xchg
out
mov
aad
add
dec
movsb
pop
and
popf
outsl
sub
loopne
rcll
add
ja
push
ret
pop
sbb
sub
add
popa
std
jnp
cmpsl
outsl
jmp
jp
cmp
ret
ja
mov
jg
mov
incl
std
pusha
mov
cmp
mov
dec
in
dec
repz
shlb
or
fcoml
pop
das
je
dec
les
jne
ja
xchg
sub
push
lea
pop
lods
lahf
movsl
xchg
lcall
movb
popa
and
es
cmp
fisubl
int
cld
jg
mov
sarl
adc
dec
popf
push
mov
cli
ljmp
nop
sbb
insl
inc
and
fsubs
jg
outsl
inc
hlt
dec
fldenv
inc
outsb
jmp
fbstp
sbb
lret
decb
das
sbb
test
mov
pusha
lods
rcll
mov
xor
xor
out
xor
popa
aam
push
dec
data16
and
call
cmpl
movsb
or
repz
cwtl
mov
loope
popa
hlt
pop
bnd
in
mov
pop
mov
jmp
insl
into
rcl
jmp
mov
mov
ja
lods
test
cmp
or
das
xlat
mov
mov
sbb
push
sub
cltd
jp
push
dec
xchg
sub
insl
and
or
push
testl
inc
mov
or
xchg
xchg
lods
pop
out
xor
pop
icebp
jmp
lret
pop
push
xchg
inc
inc
mov
cmp
mov
mov
push
mov
aad
inc
loopne
mov
stos
rcl
add
mov
cmc
mov
fdivrs
mov
outsb
sti
in
out
cld
mov
sahf
pushf
mov
shll
repz
iret
xchg
into
xchg
hlt
push
sub
mov
dec
jno
cmp
or
add
jb
leave
dec
pop
xchg
mov
cmp
adc
and
push
cmpl
mov
std
in
push
inc
cmp
arpl
fldl
stos
push
or
ss
vpcmpgtb
shll
repnz
repz
xchg
inc
inc
sbb
lcallw
xchg
test
jno
in
mov
cmp
inc
in
or
ds
aas
inc
out
es
mov
ja
adcl
pop
jecxz
sub
fcompl
mov
and
or
mov
out
lods
add
cmp
out
xchg
sbbl
shlb
push
data16
or
or
iret
data16
push
sbb
mov
xchg
aam
add
jnp
mov
lret
insl
or
xorb
les
push
out
and
stc
dec
xchg
push
jp
pop
mov
cmpsl
imul
inc
mov
pop
sbb
arpl
fadds
sub
mov
cmp
popa
popf
push
movsb
sbb
fdivr
cmpsb
cmp
ret
xchg
sbb
cmp
jae
imul
adc
addb
js
divb
neg
pop
xor
into
mov
pop
scas
iret
jge
cwtl
outsl
ret
pop
mov
pop
sbb
inc
xor
in
ljmp
je
out
in
xor
add
mov
pop
jle
xlat
mov
or
dec
jnp
cmc
test
sub
mov
nop
fwait
add
mov
stos
je
dec
sub
pop
jecxz
jg
mov
dec
push
xchg
cli
push
mov
adc
cmpsl
test
aam
mov
and
ss
clc
cli
insl
jnp
push
test
mov
inc
mov
repz
outsl
cmp
mov
shr
push
pop
fildll
das
ret
mov
jb
sahf
adc
ficompl
stos
mov
cs
pop
push
sub
and
inc
notl
cmp
leave
mov
mov
repz
js
xchg
pop
lea
pop
jmp
and
addr16
fsubrl
bound
mov
outsb
pop
mov
jmp
push
or
pminub
sub
add
sbb
mov
in
icebp
mov
leave
mov
lret
into
sub
push
or
arpl
rcrb
add
xchg
cltd
ja
movsl
jge
cld
out
adc
call
pop
jns
xchg
mov
sbb
dec
movsl
ret
notl
push
in
dec
pop
fistpl
jb
xor
imul
push
test
test
movlps
mov
inc
jmp
and
sbb
inc
add
data16
add
sti
sbb
push
fistpll
push
mov
loope
adc
in
jae
inc
clc
push
clc
mov
lcall
mov
sbb
push
sub
pusha
rolb
sbb
ret
jnp
shr
pop
push
mov
leave
popa
ss
jl
arpl
stos
ret
push
fmuls
loope
sti
das
lea
popf
pop
js
sub
pop
fcmovu
sub
add
insb
icebp
push
push
mov
xlat
nop
push
in
push
sbb
fwait
adc
ror
lods
cli
and
mov
mov
lret
lahf
add
sbb
xor
cltd
in
add
adc
mov
xchg
cmp
or
push
jno
icebp
std
cmpsb
mov
ret
outsb
cmp
jmp
cld
pop
push
pop
jp
scas
mov
and
cmpsl
jnp
out
xor
xchg
pop
push
fldl
mov
pop
cmpsb
inc
sub
lds
int
ja
scas
dec
inc
icebp
test
adc
in
cwtl
ret
dec
in
inc
sub
mov
in
fsubs
dec
dec
int3
andb
or
xchg
xlat
addr16
pop
les
fldt
repnz
test
push
mov
cld
and
leave
jmp
bound
inc
cmp
cltd
push
pop
cli
js
pushf
enter
pop
adcl
xchg
sbb
or
not
test
jp
dec
outsb
aas
adc
outsb
mov
enter
sub
xor
mov
pop
into
adc
bound
mov
inc
inc
add
aaa
jmp
int3
add
insl
sub
or
enter
imul
ret
xor
or
ljmp
jb,pn
jne
jns
shrl
bound
push
test
mov
jmp
and
inc
mov
stos
mov
lret
clc
das
cmc
sub
dec
jmp
es
add
add
mov
jmp
xor
inc
cmp
popa
mov
add
xlat
cmpsb
fnstenv
lds
push
movsb
mov
pop
adcl
loopne
scas
std
out
pop
xchg
fidivrl
push
mov
sahf
jno
movsb
adc
ret
adc
pusha
inc
loop
out
ret
add
pop
push
jp
xchg
sahf
fldcw
mov
fidivrs
inc
cli
push
sti
out
xor
xor
sbb
call
pusha
mov
in
ret
scas
out
addr16
ficoml
push
xor
cmp
add
fucomip
outsb
sub
in
mov
jo
sub
mov
outsb
mov
mov
cmp
mov
adc
jp
add
imul
jo
push
xlat
fldenv
lods
xor
push
icebp
in
pop
cld
insb
xlat
xor
pop
mov
pushf
mov
pusha
sbbl
fstl
iret
call
les
sbb
pop
repnz
cmp
mov
cmpsb
push
out
js
jns
jp
test
push
push
and
or
add
dec
jmp
fidivs
pop
inc
addr16
mov
push
test
mov
das
lcall
mov
arpl
into
das
stos
mov
imul
inc
sarl
sub
pop
push
dec
push
mov
sbbb
push
sbb
sub
xor
fs
std
sub
es
bound
mov
or
imul
mov
shrb
fdivs
adc
inc
push
sahf
fidivs
xchg
adc
addl
mov
dec
stos
lret
add
dec
in
ror
xor
iret
pop
lcall
fadd
mov
test
inc
imul
mov
push
xchg
cmp
negl
mov
lahf
in
loopne
or
fldt
ja
std
inc
addb
add
popf
movsl
mov
and
mov
hlt
iret
int3
mulb
xor
push
pop
clc
or
xlat
stc
sbb
adc
or
xchg
xchg
test
mov
sub
xor
lret
mov
ja
dec
or
inc
add
clc
mov
mov
sahf
adc
sahf
shll
pop
sub
inc
sarl
ror
dec
negb
jg
cmpsb
push
mov
sub
call
add
mov
add
sbb
jae
insl
je
fidivs
pop
push
andb
subb
int3
mov
push
xor
dec
pop
push
xchg
jns
jmp
incb
scas
ret
movlpd
jnp
test
lods
dec
or
into
lea
xchg
jge
pop
mov
int
cmpsb
inc
xchg
insl
sub
dec
push
pop
pop
dec
add
out
pop
decl
mov
rorl
clc
xchg
sub
mov
adc
xchg
dec
pop
cmp
sbbb
leave
push
rep
pop
aam
xchg
push
mov
push
jmp
jge
in
cmc
sub
mov
lcall
imul
call
rcrb
es
loopne
lock
fidivs
push
iret
dec
xor
cmpsl
movsl
xchg
cmp
lret
mov
into
les
push
mov
jnp
pop
mov
repnz
sub
jmp
or
inc
call
ja
dec
adcb
rcll
lods
sub
orb
xchg
lods
aam
bound
mov
ja
lods
pop
out
into
sbb
sub
push
cmp
push
jno
fcoms
hlt
shll
out
sub
stos
insl
jp
sbb
sbb
aas
sbb
jnp
repz
std
jle
cmp
add
xor
add
mov
push
cltd
je
adc
mov
outsl
in
pop
movsb
xchg
xchg
adc
push
out
xchg
push
push
imul
sub
enter
cmpsb
inc
sbb
xor
mov
sub
bound
arpl
mov
sarl
lock
xchg
adc
jp
jp
cmp
pop
inc
jle
dec
stc
and
push
mov
stc
pop
jp
gs
cmp
adc
aas
xchg
xchg
in
hlt
and
push
rcrb
pop
push
push
adc
in
push
pop
stos
dec
push
cwtl
bound
sti
dec
cmp
push
cwtl
pop
or
inc
loopne
cli
push
addb
ds
pop
inc
les
cwtl
mov
sbb
out
pushf
cltd
inc
xchg
dec
icebp
jmp
add
stc
xchg
lret
mov
mov
pop
insb
sarb
cmp
pop
inc
int
dec
data16
scas
push
cmp
aas
cmpsl
ret
xchg
mov
xchg
or
std
aad
mov
mov
enter
lock
adc
notb
push
cmc
mov
in
sbb
test
or
jbe,pn
push
shll
movb
cmp
sbb
xchg
loope
push
push
rol
pop
pusha
test
adc
mov
lock
dec
shrb
adc
sub
push
aam
mov
xchg
sub
cli
sbb
fsts
adc
push
xchg
and
mov
in
dec
xor
jecxz
push
imul
insb
int
xchg
xor
mov
std
jp
mov
ficomps
lock
or
mov
jg
icebp
add
ja
xor
ljmp
push
ja
shrl
adc
andl
or
lahf
rolb
rep
dec
adc
or
mov
mov
and
mov
and
mov
lahf
rcl
imul
add
push
lods
bound
ret
test
cltd
mov
mov
loop
inc
and
inc
rcl
jno
mov
jae
mov
push
repnz
jae
adc
mov
daa
jae
mov
cltd
nop
es
and
test
fisttps
xor
fists
iret
and
movsb
popa
jnp
push
out
sbb
ss
push
and
jp
lods
pop
jns
push
test
or
or
inc
cmp
mov
mov
mov
mov
mov
cmp
nop
cmpsl
push
in
test
sbb
fsubl
sbb
gs
push
mov
stos
and
inc
adc
pop
add
rolb
testl
cld
or
jb
mov
loope
loop
push
sub
pop
mov
nop
lds
sbb
test
subl
or
pop
loope
push
mov
dec
lock
sbb
adc
mov
cmpl
cmp
fwait
jmp
arpl
mov
push
dec
cmp
fcompp
mov
cmp
or
popf
test
jle
jne
mov
inc
add
xor
mov
jmp
data16
or
out
cmp
fstpl
lret
xchg
das
and
mov
xchg
popa
push
add
pusha
push
es
sbb
inc
das
or
js
mov
sbb
ret
shll
inc
mov
aas
jge
cld
push
out
add
and
cmpsb
or
fs
add
mov
mov
das
sbb
scas
sub
pop
iret
roll
das
pop
stc
shll
dec
mov
push
pop
lea
mov
mov
out
mov
subl
lods
and
cmp
dec
xor
xchg
cmp
mov
dec
add
test
daa
or
pop
mov
or
add
mov
je
push
shrb
mov
fisttpl
cmp
inc
and
rolb
push
adc
int3
sbb
mov
add
ljmp
das
sub
mov
stos
xchg
out
adc
add
push
loop
jecxz
jmp
repz
xlat
mov
xchg
xor
cs
bound
ss
aaa
dec
movsb
push
cwtl
pop
and
mov
push
xchg
or
adc
lock
loope
jle
mov
mov
ret
jne
cmc
cmp
repnz
mov
add
test
lods
or
inc
push
subb
dec
cmp
iret
or
or
sbb
adc
loop
cld
push
mov
fistps
fs
std
or
cmp
aaa
jo
or
mov
shlb
pop
dec
pop
fmull
rcr
add
jnp
mov
or
or
enter
clc
mov
mov
les
adc
cmp
mov
mov
push
mov
mov
lods
inc
pop
lds
int
lcall
outsl
rol
xor
cmp
xor
pop
or
fisubl
push
fdivs
push
loope
cld
add
popa
fcomps
lret
jo
jae
pop
stc
out
xchg
add
jne
cmpsl
aad
stos
out
das
pop
xchg
pop
movl
and
dec
pop
mov
loopne
fists
mov
mov
sbbb
inc
xchg
adc
in
in
mov
jb
mull
pop
mov
pusha
adc
dec
cmp
fisubrs
fs
add
dec
and
mov
sbb
cmp
xor
std
loop
mov
iret
inc
es
mov
pusha
jmp
jp
pusha
mov
mov
popa
jl
fwait
aas
cmpsl
sbb
and
fdivr
out
xchg
rcrb
dec
inc
cmp
inc
mov
test
adc
sti
js
call
rolb
mov
xchg
mov
rol
aam
add
cmp
gs
arpl
call
das
add
in
das
jnp
pop
inc
scas
stc
scas
ret
push
sub
pop
jns
jo
inc
or
repnz
lahf
cmp
lock
sbb
sti
pop
enter
mov
dec
xchg
test
mov
repz
subb
jnp
pop
adc
mov
sbb
test
ret
outsb
inc
jae,pt
scas
xchg
sbb
mov
and
xchg
jg
or
fldenv
in
adc
mov
push
les
mov
adc
or
lods
xchg
inc
outsb
fildl
mov
or
or
jp
aas
mov
ror
jmp
cwtl
or
push
lret
adc
mov
repz
lcall
sub
lahf
sbb
xor
in
push
cmc
sub
cmp
lea
out
jno
data16
insb
cmp
push
xor
jp
dec
xor
cmp
cld
inc
divb
xor
sbb
mov
pop
or
adc
or
dec
push
pushf
mov
subl
mov
mov
pop
subl
push
and
mov
mov
jns
and
inc
adc
mov
mov
pushf
in
into
or
and
ret
int3
fwait
push
fwait
pop
dec
dec
jecxz
xchg
push
inc
push
or
into
inc
data16
mov
push
repz
mov
xchg
cmp
adc
xchg
mov
pop
lret
mov
movsb
jbe
inc
and
cmp
or
rcr
dec
sub
sbb
fistpl
test
push
cltd
push
unpckhps
cld
pop
incb
dec
cmc
inc
pop
inc
jecxz
aad
push
jno
jl
jecxz
dec
mov
test
stc
loop
add
add
cmp
scas
pop
lcall
lcall
subl
lods
daa
mov
out
je
push
hlt
or
and
popf
lock
repz
adc
cmpsl
jp
inc
js
dec
add
dec
arpl
sub
xlat
loop
repnz
jp
jno
mov
aas
stc
jle
mov
or
cwtl
addl
fildl
stos
mov
adc
sbb
cwtl
pop
divb
and
mov
mov
cmp
test
inc
xchg
int
gs
lahf
cld
out
adcl
test
rclb
clc
inc
cmc
addr16
call
fisttpll
je
leave
and
push
inc
push
filds
push
jno
push
adc
js
loope
je
mov
movsl
in
outsb
push
push
sbb
mov
adc
jmp
repz
jl
bound
cwtl
hlt
dec
lret
dec
and
inc
cmp
dec
sbb
rcrb
fdivrl
cmp
fwait
in
fildll
cmp
mov
and
cmpsb
dec
iret
inc
mov
imul
mov
xchg
sbb
or
hlt
add
jle
mov
xchg
imul
push
sbbb
fsubr
xchg
pop
jno
adc
aas
pop
fidivs
pop
xchg
dec
xor
inc
negb
repz
sbb
cmpsb
cmpl
sbb
insl
adc
aaa
push
popa
mov
jmp
sub
jg
mov
mov
or
out
popa
push
cmp
add
das
cmp
push
sbb
icebp
and
addr16
ja
lcall
repz
inc
notl
imul
jge
mov
sbb
ud0
add
push
xor
dec
movsb
js
sbb
lahf
nop
adc
pop
pop
scas
cld
dec
leave
cmc
bound
lods
sub
fucomip
pusha
movsl
dec
pop
adc
xchg
mov
dec
jmp
arpl
or
aam
adc
jg
adc
add
push
and
loope
ret
addr16
int
mov
aad
xor
jl
cmp
mov
subb
pop
sti
mov
jp
pop
pop
adc
jmp
cmpsl
lcallw
sbb
mov
mov
push
mov
xchg
scas
jecxz
call
mov
jne
adc
rol
sub
pop
push
sbb
int3
push
jmp
imul
push
fimuls
dec
xchg
mov
icebp
jns
xchg
and
sub
in
pop
sbb
mov
mov
les
jns
scas
test
cltd
mov
aaa
stos
lret
inc
out
cwtl
outsb
mov
clc
push
fwait
pop
in
loopne
in
pop
or
add
adc
mov
nop
cmpsl
jno
fiadds
orb
std
cs
icebp
mov
dec
dec
stos
dec
mov
lahf
xchg
repnz
mov
call
and
sbb
adc
sahf
out
lahf
bound
pop
jecxz
sbbb
xchg
cltd
fildl
shll
and
bound
lahf
jae
xchg
scas
ja
cltd
sahf
in
push
stos
cmpsl
decb
fwait
mov
dec
movsl
ret
add
lock
sbb
lret
pop
fldt
mov
cmp
or
lcall
mov
push
xchg
repz
mov
fsubrs
jmp
cs
adc
xor
daa
mov
cmp
sub
jbe
push
jae
cmp
adc
popf
sub
adc
sub
xor
pushf
pusha
lods
cmp
das
test
out
es
shlb
xor
inc
shll
xchg
or
mov
nop
dec
add
mov
sub
ss
pop
rclb
aam
lcall
repz
xlat
jge
jne
dec
mov
stc
pop
dec
andl
inc
sbbl
iret
inc
jnp
cmp
sbb
mov
test
stos
mov
scas
mov
jmp
xor
mov
sarb
sbb
stos
xchg
fistpl
int3
dec
sbb
jle
jno
mov
shll
jae
repz
movsl
aam
test
jb
enter
popf
xchg
dec
shll
jmp
ret
lds
in
aaa
hlt
cmp
push
in
dec
out
iret
test
adc
cmp
dec
jmp
jbe
mov
dec
clc
es
inc
sub
inc
sub
cmp
adc
iret
and
mov
cmp
adc
xchg
sub
push
ja
loope
movsb
xchg
ss
mov
mov
pop
mov
loope
cmp
cli
add
and
xor
leave
xor
pusha
aad
stos
imul
add
leave
je
nop
mov
imul
int
into
xor
jo
fwait
and
lahf
scas
pop
push
mov
in
outsl
adc
pusha
sbb
out
pop
lcall
insl
out
loopne
sub
shlb
xchg
ror
push
test
ffree
cmp
cmpsb
mov
mov
sbb
push
ret
cmp
sti
pop
in
jge
dec
cmp
dec
inc
test
hlt
dec
push
jbe
lret
adc
outsb
pop
xchg
daa
pop
dec
mov
into
sub
sahf
jno
stos
addb
mov
pop
aam
pop
stos
jne
sub
inc
jnp
sub
jle
xlat
xchg
jl
sbb
xchg
or
pop
dec
xchg
aaa
push
flds
inc
imul
push
fdivrs
xchg
dec
mov
scas
mov
push
cmp
out
pop
in
and
mov
adc
adc
mov
vmovss
pop
gs
and
inc
cmpsl
fdiv
repz
negl
xor
adc
fstpl
stos
es
pop
ficomps
test
out
mov
scas
arpl
lods
pop
in
jnp
in
movsl
pop
cltd
pop
or
xchg
cmp
push
jo
pop
cmp
out
fs
mov
mov
fldcw
xchg
dec
xchg
sub
mov
sub
mov
lcall
cltd
pusha
push
mov
mov
sbb
sub
mov
test
and
popa
or
sbb
push
into
jl
cmp
jge,pt
pushf
sbbb
cmpsl
pop
ret
cmp
test
out
jno
in
jnp
iret
cmp
mov
jl
test
stos
insb
loopne
imul
loopne
inc
sub
mov
das
and
clc
mov
sti
dec
test
push
imul
inc
pop
out
or
pop
cmp
int
mov
cmpsb
outsb
cmp
test
enter
mov
add
sbb
xchg
push
ret
negb
ret
xor
movsl
pop
cvtpi2ps
adc
fwait
xchg
ret
js
pop
mov
cwtl
out
addr16
sbb
cs
mov
inc
xchg
cmp
sbb
sub
scas
xor
adc
mov
das
lods
seto
stos
jne
pushf
push
mov
mov
sbb
inc
shr
or
push
push
mov
out
cmp
mov
xor
sub
push
insl
sbb
sub
jne
lret
popa
lcall
stos
sub
and
cltd
add
adc
xchg
push
mov
mov
and
jmp
orb
xchg
inc
mov
sbb
aaa
and
clc
cmp
psllq
imul
shlb
mov
and
repnz
lock
add
or
or
sar
insl
lds
xor
cltd
pop
adc
mov
jmp
adc
andl
push
insb
sbb
jmp
test
insb
int
xchg
imul
addr16
or
scas
jl
mov
xchg
xchg
mov
dec
dec
push
jl
jp
sbb
mov
sub
xchg
push
inc
test
push
aam
push
adcl
int
and
lcall
cs
and
enter
inc
or
lret
push
sbb
les
xchg
mov
pusha
push
xor
es
call
mov
stos
add
lret
imul
out
inc
push
sbb
lret
sub
xchg
fidivs
jge
jno
lds
aas
mov
data16
hlt
or
or
imul
aaa
inc
sahf
sub
ret
ficomps
dec
cmp
cmp
test
lds
jns
and
lahf
mov
js
or
xchg
mov
xor
sbb
cmpsl
mov
dec
dec
pop
lret
sbb
ss
and
test
adc
inc
shrl
psraw
or
sarb
aaa
aas
mov
adc
fists
rcll
cmp
inc
mov
jp
ficoml
xor
push
int
xor
adc
cli
adc
cli
test
pop
in
pop
mulb
mov
enter
popf
sub
negl
pop
hlt
add
pop
shlb
sbb
cmp
sub
sub
pop
cmc
jge
test
test
or
std
lock
jmp
sub
sbb
cld
in
mov
scas
scas
adc
sahf
xchg
pushl
xor
insb
leave
stos
dec
mov
les
test
scas
mov
mov
xor
lahf
mov
loop
push
es
and
lea
inc
roll
out
jp
add
cmp
dec
cmovne
ret
test
dec
fstpt
pop
adc
mov
cmpsl
aam
jne
pop
push
mov
nop
sub
dec
aas
inc
sub
mov
push
neg
cmpsl
jb
push
mov
mov
mov
pop
shlb
or
outsb
mov
mov
jno
fmuls
adc
in
jne
mov
test
aad
jecxz
xchg
push
int3
or
imul
and
cs
outsb
cmp
mull
or
mov
out
mov
xor
test
jg
cwtl
jnp
pop
cs
mov
out
jecxz
daa
sbb
fimuls
push
mov
fadd
bound
movsl
fidivs
sbb
cmp
aad
and
lret
jbe
add
or
ss
andl
scas
sahf
add
out
popl
sub
cld
add
outsl
fldl
stos
jno
lods
pop
cmp
leave
push
adcl
pavgb
push
pop
add
int
les
mov
orb
rclb
jne
or
iret
push
inc
sbb
sbb
xor
sbb
jns
shlb
pop
test
push
dec
es
push
out
jmp
dec
inc
insl
xorb
sahf
push
jp
jne
aas
xor
out
xchg
dec
outsl
pop
push
adc
or
push
mov
mov
and
and
cmpl
lahf
in
hlt
outsb
add
mov
push
xor
mov
cwtl
xor
push
pop
or
cltd
loope
jge
imul
push
push
in
daa
pop
in
adc
inc
sbbb
push
ret
imul
xor
daa
lods
xor
lahf
mov
mov
pop
outsl
call
fwait
add
sbb
sub
mov
push
test
pop
outsb
dec
or
out
hlt
jne
xlat
outsl
pop
scas
imul
sub
shl
dec
outsl
jno
aam
sahf
and
loope
inc
cli
or
lock
rorb
dec
jg
mov
push
fs
adc
jl
das
fstp
mov
outsb
cwtl
lock
loop
and
loop
sub
or
mov
and
and
jne
movsb
int
adc
xchg
adc
repnz
lcall
xchg
rcll
fwait
mov
cmpsl
sbb
and
jp
fsubrs
rcrb
sbb
and
lret
das
mov
out
loope
mov
xchg
into
es
popa
insb
ss
nop
cmpb
add
cs
ret
or
sbb
sub
adc
movsb
outsb
fistps
dec
dec
daa
or
test
jno
dec
mov
jne
push
inc
sbb
sahf
and
push
lock
mov
dec
jge
in
sbb
cmp
mov
cld
and
xor
pop
pop
test
mov
push
dec
cmpsl
test
xchg
out
pop
shl
or
sub
data16
mov
pusha
sahf
test
shll
push
xchg
cmpsb
notb
jge
mov
stc
sbb
and
add
aas
mov
jo
outsb
or
jp
or
sub
jne
cs
cmp
into
mov
xor
stc
dec
and
cli
cmp
int
or
aad
lock
cmp
hlt
mov
dec
and
add
movsl
sbb
cmp
aam
cmp
mov
out
repz
ds
inc
popaw
push
and
movsl
jg
or
sub
sbb
addr16
push
js
pushf
lods
cltd
pop
stos
jge
mov
add
in
pusha
daa
and
push
and
push
imul
ss
into
dec
inc
sbb
in
add
arpl
sbb
sbb
pop
sbb
jge
jecxz
xorl
jo
ss
mov
inc
nop
lahf
enter
scas
es
xchg
mov
test
and
dec
add
push
add
xchg
fildl
or
sub
repnz
dec
movsl
mov
and
push
pop
mov
mov
add
lods
scas
adc
out
cmp
push
cmp
adc
arpl
push
push
mov
aad
mov
data16
js
jns
jmp
inc
in
pop
js
arpl
fistpl
mov
jnp
mov
clc
int3
inc
and
push
rolb
or
and
rcrl
push
pushf
sub
iret
es
xchg
cmpsl
dec
les
pop
xchg
xor
insl
sub
push
jl
xchg
ljmp
jp
call
mov
or
fs
xchg
add
test
push
test
iret
das
stos
pop
dec
inc
aam
je
xchg
push
fadds
jg
imul
aad
ret
mov
movsl
int3
sub
lods
pop
mov
jb
pop
xor
inc
loopne
outsl
mov
out
dec
and
idivl
stc
ret
mov
popa
push
rcrb
cs
pop
push
mov
popf
cmp
sub
testb
in
int3
sbb
or
jmp
inc
sub
test
stos
sub
mov
xorb
sbb
pop
iret
push
mov
aaa
imul
mov
pop
mov
pop
std
push
mov
mov
test
mov
xchg
leave
int3
jno
cmp
sbb
movsb
in
std
js
xor
inc
jae
mov
ret
daa
mov
popf
cmp
andl
test
mov
fs
jmp
scas
in
leave
bound
or
xchg
and
pop
out
out
lea
mov
push
mov
rcrb
mov
adc
gs
xchg
adc
imul
mov
inc
sarl
dec
repz
mov
mov
pushl
das
js
mov
and
cmp
ret
sub
and
addr16
nop
popf
push
sti
mov
pop
movsb
outsl
cld
pop
test
lea
insb
or
mov
adc
pop
icebp
nop
clc
xchg
sahf
aaa
mov
xor
mov
adc
div
cwtl
mov
push
lret
jge
ja
mov
daa
pop
xor
or
enter
cmp
rolb
cmp
and
or
xor
pop
mov
cmp
sbb
jo
sbb
inc
movsl
in
pop
lcall
adc
lods
jl
jo
push
sbb
jle
fucomp
shlb
pop
dec
pop
int3
xchg
je
call
addr16
mov
fisubrs
xchg
xchg
mov
arpl
fldt
mov
aad
inc
movsl
xor
pop
fildl
push
icebp
adc
sub
imul
fs
or
loopne
out
adc
fdivrs
and
rep
repnz
rcr
int3
fildll
xor
xchg
call
fiaddl
dec
daa
rcl
js
cmpsb
dec
jge
out
xor
add
xchg
push
mov
xchg
scas
ja
testb
sbb
mov
fidivrl
mov
nop
loop
or
inc
mov
and
jo
test
loop
sub
dec
jp
bound
es
jnp
gs
jo
xchg
sub
aaa
mov
add
repz
es
mov
sti
and
movsb
arpl
inc
jno
mov
dec
push
rorl
repnz
push
jno
mov
dec
arpl
inc
ficoml
mov
scas
add
mov
mov
jo
nop
int3
into
popf
mov
in
cmp
fisubrl
sub
sbb
mov
sub
ret
pop
pop
mov
pusha
or
xor
popf
mov
jae
jl
mov
filds
mov
pop
bound
xor
arpl
sbb
or
pop
mov
loopne
lds
icebp
pusha
out
dec
mov
dec
pusha
cmpsb
ja
push
or
repnz
mov
mov
mov
enter
inc
cld
dec
es
mov
jb
dec
jle
and
in
mov
mov
mov
adc
mov
loope
adc
sbb
jge
dec
jecxz
and
mov
mov
imul
lcall
xor
ss
sub
iret
mov
dec
mov
cmp
or
aad
push
js
mov
mov
jne
cmpl
jae
add
loope
fbstp
lods
add
jbe
cld
jne
les
insl
int
pop
inc
xor
pusha
int3
adc
xor
adc
pop
cmp
test
xchg
push
iret
test
aam
inc
pop
xor
lock
or
add
pop
stos
xor
jg
dec
lods
push
cwtl
stos
mov
jle
adc
js
push
mov
push
ret
inc
jle
or
mov
adc
mov
into
mov
sbb
lret
int
pop
mov
sbb
into
sbb
mov
jno
push
jmp
mov
jo
mov
ret
je
mov
test
inc
jbe,pn
cmp
mov
out
mov
call
xor
neg
out
xor
in
push
es
jnp
shrl
mov
jle
add
adc
dec
dec
leave
add
scas
aad
mov
lock
fisttpl
pop
lcall
adc
xchg
xlat
xchg
iret
mov
jle
add
pop
adc
les
jae
or
sbb
lock
lahf
mov
pop
cmp
xchg
aam
lds
sahf
mov
sahf
scas
loop,pn
and
pop
jmp
lret
inc
push
jmp
imul
popf
lahf
jge
or
or
sub
std
idivb
xchg
pushf
mov
leave
aad
mov
mov
or
jbe
movl
xchg
ss
stc
inc
mull
mov
lock
test
xchg
test
sub
push
or
addr16
jns
dec
lret
filds
jmp
mov
into
orl
test
lds
pop
dec
rcl
add
divb
movsl
div
rclb
std
push
mov
test
inc
shll
adc
jno
cmp
cmpsb
popa
pop
dec
out
pushf
add
adc
push
rcrl
xor
in
cld
enter
adc
dec
insb
mov
pop
mov
or
jno
rcr
mov
aad
cmp
jae
aaa
je
das
test
outsb
inc
mov
mov
aas
insl
mov
scas
movsb
dec
hlt
imul
shrb
loop
jo
iret
adc
xor
out
test
pop
in
loope
dec
and
or
pop
bound
push
es
out
lods
bound
arpl
pop
mov
lods
and
idivl
ja
ljmp
shr
leave
int
xor
js
add
add
rol
divl
cmp
lret
mov
data16
mov
mov
cmc
fs
loopne
leave
inc
test
leave
cwtl
cmp
imul
pop
inc
scas
enter
idivb
cmc
mov
pop
pop
repz
pushf
jne
aaa
rcl
arpl
jl
sbb
sbb
dec
test
stc
or
xor
xchg
fcmove
cmp
mov
std
add
test
sbb
jecxz
mov
ja
inc
inc
int3
lods
push
ret
mov
ss
dec
orl
scas
jne
xchg
jecxz
push
nop
into
lods
xor
fidivrl
mov
or
mov
sbb
push
jb
jnp
push
lods
jne
frstor
mov
gs
jae
scas
rcll
adcb
push
outsb
xchg
dec
bound
fs
pop
cmp
mov
aad
inc
inc
int3
sahf
loopne
lods
inc
mov
sub
jl
popa
imul
inc
into
xchg
mov
jmp
and
sub
mov
mov
aam
lahf
mov
adc
xchg
out
push
mov
mov
dec
iret
out
sub
xor
xor
pop
cmp
mov
loopne
sarl
jne
movsl
inc
dec
int3
dec
xchg
lock
jno
sbb
cltd
gs
insl
inc
stos
mov
into
mov
cwtl
mov
or
nop
and
pushf
xor
pop
mov
xor
fcoml
pop
adc
pop
mov
push
repz
jne
push
fidivrs
jp
and
out
inc
jl
stos
movsl
mov
subl
pop
push
mov
jg
movsb
loope
mov
jl
jns
push
ja
aaa
or
push
add
lret
repnz
loop
push
cli
loop
clc
fs
or
insl
inc
aaa
mov
mul
and
into
push
sti
lcall
mov
push
and
mov
adc
lea
and
out
aam
js
mov
xchg
dec
pop
dec
jl
es
adc
mov
arpl
fldl
jl
inc
cmp
pop
cmpsl
cmp
xor
sbb
faddp
push
in
cmovne
mov
sub
iret
adc
adc
xchg
mov
push
xchg
add
cs
negl
pop
sbb
xchg
cmp
mov
shll
xchg
mov
out
sub
nop
or
and
pop
int3
or
inc
ret
push
fstpt
cmp
lahf
dec
outsl
sbb
mov
lcall
dec
loope
jns
pop
mov
cmpsl
add
pop
and
ret
inc
dec
imul
hlt
mov
xchg
xchg
or
push
shlb
pop
jge
push
mov
fisubrl
pop
and
dec
lret
aam
lret
hlt
in
outsb
stos
pop
faddl
mov
in
orb
pushf
rorl
leave
sbb
mov
pop
push
mov
or
pop
frstor
sub
dec
mov
mov
push
sub
push
push
test
pop
sub
mov
or
out
gs
sbb
sbbl
inc
stos
mov
jno
xchg
leave
mov
cmp
sub
sti
sbb
ret
push
int
fcomip
aas
stc
cmp
push
lods
je
mov
xchg
scas
jg
in
sub
dec
dec
fwait
cwtl
dec
sti
xor
xchg
mov
jns,pt
mov
and
adc
leave
loope
sbb
sfence
icebp
xchg
adc
and
cltd
xchg
jbe
ret
pushf
and
movl
push
fistl
mov
daa
adc
pop
xchg
sbb
mov
adc
into
push
cmpsb
xchg
jbe
dec
lods
xchg
sub
mov
dec
vmwrite
fmul
arpl
mov
and
sub
mov
aaa
jge
cmp
test
mov
cmp
push
fstpt
enter
imul
xor
or
add
jle
jb
jns
inc
sbb
dec
pop
in
sbb
dec
cli
daa
pop
sub
fisttpl
pop
je
inc
fsubr
lock
dec
add
outsl
jecxz
mov
xlat
insb
bound
aas
xor
rcrb
mov
and
xor
push
in
mov
jo
push
shll
mov
pop
dec
mov
jo
pushf
adc
mov
out
sti
in
in
push
ja
sbbb
mov
vmovdqu
xchg
mov
popf
sub
lret
pop
adc
out
lret
lea
mov
lret
cmpsb
in
ret
xchg
xchg
adc
adc
in
cltd
leave
ret
mov
pushf
shlb
sub
rcrb
sbb
push
fstpt
jbe
push
cmp
shlb
mull
dec
adc
and
out
fdivrl
sbb
stos
sahf
out
int
mov
movsb
mov
fxch
mov
jbe
mov
std
pusha
xor
jl
mov
pushf
fmull
cmp
and
scas
imul
jae
out
sub
add
pop
nop
mov
jp
push
fldt
adc
adc
repz
add
es
jp
inc
into
sub
cltd
clc
xchg
jl
dec
lock
out
ret
fimuls
rolb
lcall
add
pop
mov
out
pop
sarl
inc
fldt
pop
aam
or
shll
dec
ret
testl
in
or
int3
jb
stos
pop
inc
cmp
mov
sub
or
sbb
mov
cmc
iret
dec
jne
xor
add
push
pop
mov
sub
mov
inc
cs
pop
push
pop
movsb
and
je
arpl
mov
insb
shr
mov
fcmovnu
mov
out
cld
adc
xor
aad
mov
adc
push
scas
sub
fidivl
mov
xor
xor
push
mov
mov
std
lret
sarl
je
insb
mov
xchg
fdiv
adc
aad
mov
popa
sbb
pop
bound
sbb
leave
and
shlb
adc
sbbb
jecxz
and
push
popf
ja
loop
inc
lret
sub
cli
faddl
sbb
xchg
imul
cmp
dec
gs
mov
int3
mov
push
cmc
sahf
push
adc
adc
xorb
test
fcoml
push
xchg
outsb
insl
and
dec
push
sahf
dec
ds
xor
xor
mov
cld
push
lea
mov
cmc
fs
idivb
mov
test
lcall
fidivrs
es
int
mov
cs
jl
xlat
inc
pop
sti
mov
pop
cmpsl
pusha
scas
push
cs
out
sbb
out
stos
pop
pop
mov
mov
jle
and
or
mov
je
lea
aas
lock
dec
pop
popa
lret
in
lods
mov
dec
das
scas
or
pop
sub
fs
out
cmp
icebp
mov
inc
fcompl
ret
inc
xchg
jle
jmp
sub
xchg
jge
call
decb
popf
aad
das
lret
xlat
arpl
mov
sub
loop
mov
sarb
addr16
popa
inc
xchg
fsubr
cltd
lret
sbb
cwtl
sub
cmp
adc
and
pop
lcall
push
insl
sub
jp
test
sub
mov
in
mov
loopne
push
mov
jmp
stos
jg
das
loopne
add
lret
cmpsb
adc
jae
fdivrl
imul
aad
or
ret
and
jle
outsb
dec
mov
repz
lods
add
xchg
scas
mov
hlt
ljmp
shll
xor
jmp
jge
cmpsb
bound
fcomps
xor
sbb
loope
sbb
add
mov
inc
shlb
out
imul
adc
add
fisttpll
popa
inc
xor
adc
scas
mov
stos
mulb
jno
inc
mov
adc
and
arpl
notb
push
int3
fstpt
test
stos
repnz
icebp
sub
fnstcw
movsl
pop
inc
mov
adc
je
gs
mov
xchg
aad
loop
les
int3
stc
push
in
dec
movsl
cmp
mov
mov
sbb
sub
movsl
sahf
loop
add
xor
jp
shrl
sub
addr16
roll
or
popa
sub
inc
mov
mov
popf
mov
rcrb
dec
mov
sbbb
dec
mov
or
aas
ja
add
cmp
pop
icebp
and
push
js
jle
push
mov
pop
int
add
dec
cmc
xlat
mov
pop
dec
pop
mov
jae
repz
cmpsl
jo
xchg
mov
fwait
add
mov
ja
hlt
jg
jnp
sbb
clc
xlat
jbe
scas
sbb
arpl
cmp
cmpsl
xchg
cli
rcll
jne
pop
mov
sub
or
dec
mov
jg
pop
test
add
push
add
xchg
push
in
data16
and
xor
pop
dec
outsl
mov
cmp
ljmp
lcall
cmp
push
daa
lret
sub
cmp
xchg
mov
mov
cmpsb
or
mov
icebp
or
dec
sbb
push
shrb
push
ffreep
sub
adc
adc
mov
cmp
dec
xchg
fs
test
or
sbb
jno
mov
xor
addr16
call
pop
lcall
cmc
push
mov
mov
pop
mov
cmp
pop
lcall
inc
mov
mov
pop
ja
or
rcrl
cmpsb
popa
xor
add
adc
add
test
mov
lcall
cmp
mov
aad
dec
mov
push
mov
cmpsb
fidivs
popa
add
jg
popa
pop
std
lds
test
xor
cmpsl
stos
pop
subl
fdivrl
in
xor
mov
les
and
pop
pop
in
and
mov
ss
movsl
lret
xlat
pop
xor
mov
sub
add
mov
cmp
loopne
add
shrb
or
sbb
mov
sbb
stc
sahf
adc
outsl
or
mov
mov
not
fs
sar
sti
jo
add
mov
test
cmp
fstps
mov
mov
cmp
cmp
mov
cmp
stos
adc
subl
xor
push
sbb
jb
lret
insb
in
out
pop
jecxz
mov
sbb
push
pop
rorb
ficoms
xor
push
cmp
sbb
or
xor
cmc
and
out
ss
stos
mov
stc
mov
jp
insb
movl
inc
fcoml
adc
cmp
dec
mov
fisubl
jo
out
shll
sbb
in
adc
adc
jb
repnz
push
test
and
addl
push
mov
sahf
push
int
sub
jg
sub
mov
dec
movsl
cpuid
mov
or
in
popf
sub
mov
jp
push
ficomps
mov
pop
cmp
in
mov
sbb
movsb
or
loope
call
loop
jnp
push
std
xor
shlb
inc
cld
cmpsb
mov
mov
cmp
inc
xlat
lahf
lret
and
test
mov
pop
fimull
lahf
std
call
add
arpl
out
dec
test
inc
mov
bound
xchg
jnp
pop
or
scas
pop
mov
dec
icebp
cmp
shll
xchg
int3
scas
mov
push
fcompl
aaa
add
add
outsl
jns
and
jnp
jp
test
ljmp
xor
test
in
mov
ret
sub
stc
jb
addl
adc
out
icebp
pop
add
jnp
adc
std
dec
in
fnsave
sub
dec
test
dec
int3
insl
imul
adc
and
ja
lcall
xchg
fldl
inc
dec
ja
testl
mov
mov
cmp
sarb
popf
std
imulb
cmp
icebp
and
push
fmull
sbb
jno
adc
in
pop
pusha
bound
mov
push
jbe
xor
or
ret
mov
and
or
mov
outsb
cmp
xor
add
pop
shlb
sbb
in
out
movsl
mov
filds
sbb
or
pop
cld
inc
mov
xor
sub
popa
mov
lock
lcall
hlt
jp
stos
jnp
fsubrl
insl
inc
and
dec
mov
adc
xor
sti
scas
int3
or
les
mov
pop
out
shr
sbb
mov
ret
icebp
mov
cwtl
add
mov
dec
outsb
sbb
test
mov
decb
xor
test
std
lods
mov
repz
add
mov
or
rorb
cmp
and
shrl
sbb
pushf
add
adc
adc
mov
xchg
xor
out
mov
pop
lahf
add
frstor
adc
pop
adc
das
icebp
in
mov
add
test
xlat
add
mov
ds
dec
mov
aam
or
or
add
sub
out
stos
xchg
into
test
lds
pop
test
pop
inc
daa
imul
loope
shlb
sub
jecxz
ret
pop
xchg
and
jl
ss
sbb
pop
stc
testb
or
dec
out
je
inc
movl
aam
mov
add
and
pop
lcall
sub
mov
mov
and
movsl
lcall
add
or
sbb
in
xchg
cmp
clc
pop
or
shrb
jl
sarb
and
sub
inc
repz
cmc
xor
mov
cmc
pushf
xor
adc
pop
jns
nop
xor
divb
sbb
in
pop
xor
or
inc
cltd
adc
cli
pop
fcompl
mov
test
out
std
lret
insl
shll
popa
das
jbe
lret
addr16
xchg
lods
adc
repz
lods
sub
lods
xor
sbbb
push
ror
inc
and
test
das
inc
xchg
rcrb
test
lods
lds
jns
or
pop
pop
push
outsl
xchg
push
nop
aam
jg
sub
jbe
or
dec
push
mov
dec
aad
sbb
insb
and
rol
mov
rcl
mov
sbb
xor
sub
adc
mov
mov
pop
push
int3
and
insl
aaa
inc
push
inc
frstor
and
sti
add
xor
adc
cld
in
xor
pop
int3
movsl
in
and
sarl
sti
fimuls
pmullw
fiadds
push
cli
dec
cs
insl
xor
push
cltd
mov
xchg
fcoml
test
mov
aam
adcl
lcall
cmp
enter
cmpsl
aas
or
cmp
xor
or
int3
subl
push
inc
adc
or
mov
xchg
inc
je
pushaw
adcl
sub
aam
stos
aas
lea
lret
in
out
roll
add
nop
jp
jp
xchg
pop
out
sahf
dec
ljmp
cld
test
push
mov
testb
add
imul
mov
jg
pop
outsb
fldcw
ljmp
jp
sub
sbb
loopne
pop
inc
ficomps
mov
push
icebp
out
addr16
mov
mov
icebp
add
test
cld
clc
cmp
and
leave
bound
push
jne
ret
mov
jge
mov
push
inc
push
aad
adc
cmp
cmp
xchg
mov
loope
or
adc
xchg
adc
cmp
mov
pop
imulb
and
mov
fisubrl
das
cld
jp
mov
or
mov
rolb
jle
push
popl
xchg
mov
ds
push
jnp
push
push
cwtl
xor
jge
cmp
inc
sbb
ljmp
push
or
adc
fmull
je
xor
aad
adc
xchg
cli
out
push
rorl
popf
dec
fst
bound
in
inc
sub
jmp
xchg
es
leave
je
lods
loopne
cmpsb
mov
neg
int
fstpt
dec
shlb
rcl
or
inc
std
adc
push
xchg
mov
hlt
xchg
out
jl
mov
jl
lcall
jb
sub
outsb
aam
inc
lret
inc
add
jg
cwtl
jno
daa
and
pop
xchg
mov
scas
jae
lds
sbb
rcl
daa
aam
adc
jp
aas
out
lods
scas
jbe
in
enter
jle
ret
sub
mov
xor
inc
js
fisttpl
dec
adc
inc
int
ss
out
push
push
insl
addr16
sub
inc
xchg
out
or
sahf
icebp
cli
jp
test
mov
dec
sub
inc
adc
xor
xchg
jp
xor
mov
mov
sub
sahf
xor
aas
jp
movsl
aam
lret
add
push
fstl
dec
lret
pop
jge
fwait
and
movsl
or
fadd
test
loope
cld
fstps
pop
sbb
pop
or
sub
sar
mov
int3
sti
ret
xor
pop
pop
jne
and
mov
test
inc
jb
rorb
imul
inc
xlat
lcall
push
out
ret
push
mov
mov
std
or
outsl
xor
aaa
dec
clc
in
push
out
pop
lret
inc
and
fwait
ds
js
and
xor
insl
in
and
leave
inc
pusha
sub
dec
mov
int3
mov
popf
cmp
pop
stc
xchg
dec
call
add
sub
cli
push
add
fldt
cmc
outsb
jl
xor
mov
sub
cltd
arpl
out
repz
xor
nop
inc
aad
out
pop
mov
mov
loopne
addr16
aaa
fistpl
pop
mov
mov
es
outsl
sbbl
cmp
cltd
mov
icebp
icebp
xlat
sbbb
dec
adc
ja
cmp
out
call
pop
push
ret
mov
or
callw
je
divl
testb
movsl
cmp
push
pop
rclb
mov
fnsave
jb
mov
mov
lret
daa
sti
jle
add
or
lock
add
mov
aad
out
jne
sbb
xchg
das
jmp
rcr
jb
add
mov
dec
test
jb
js
aam
mov
mov
imul
jp
gs
hlt
aas
mov
and
cltd
mov
fwait
andb
jne
bnd
add
inc
lods
adc
xchg
scas
sub
add
ljmp
xchg
xchg
popf
push
arpl
lahf
arpl
shrb
cs
or
lea
xchg
out
mov
movsb
push
dec
les
add
mov
jmp
sbb
adc
outsl
fcompl
dec
aaa
adc
and
sbb
hlt
jl
cmc
xor
cmc
mov
gs
fs
jne
inc
cmp
mov
std
les
lret
fdivl
inc
idiv
add
mov
mov
sub
sbb
and
mov
jmp
ret
scas
adc
inc
add
loopne
xor
mov
data16
xchg
inc
and
push
out
jmp
fidivs
ja
and
adc
mov
ljmp
dec
call
ja
clc
push
shlb
sbb
sahf
out
in
mov
mov
ja
adc
push
sub
lods
outsb
add
xchg
xor
lds
insb
addl
push
insb
call
ja
int
xorb
pop
adc
lret
enter
or
fsubrp
sti
push
outsl
hlt
pop
les
pusha
testl
sbb
pop
mov
xchg
test
pcmpeqd
mov
inc
jg
aad
mov
stc
pop
adc
xor
inc
xlat
cmp
lcall
mov
mov
jae
rclb
bound
dec
dec
arpl
popa
add
stos
pop
push
cmp
lcall
hlt
mov
push
cmp
sbb
mov
and
or
xor
sbb
sahf
fildll
stc
inc
sub
insl
lea
and
pop
cs
pop
push
rorl
and
pop
jle
js
xchg
push
mov
and
push
mov
push
jl
lods
adc
xchg
jle
jl
lahf
xchg
jae
cmp
xchg
inc
inc
fisttps
mov
aad
mov
xchg
push
xchg
push
mov
aaa
fldenv
push
jg
addr16
es
rorb
and
lds
cwtl
xor
out
mov
xor
dec
sahf
jae
enter
out
xchg
add
in
mov
int
lods
insl
outsb
xchg
fimuls
jns
sbbb
idivb
idivl
lock
inc
int3
sub
inc
fidivl
and
popa
pop
js
rorl
and
out
sub
aam
pop
dec
xchg
adc
jg
lods
sbb
dec
inc
insb
push
dec
xchg
stc
adc
iret
push
inc
xor
insl
xor
xchg
insb
pop
loop
mov
int3
push
clc
inc
pusha
lods
push
or
mov
in
aad
push
mov
add
pushf
test
arpl
add
mov
aaa
nop
je
pop
aad
js
pushf
mov
pop
push
leave
xchg
out
insb
insl
imul
jo
push
and
xor
or
lods
mov
pushf
dec
ljmp
fs
pop
inc
xchg
jle
and
or
dec
and
pusha
arpl
xchg
dec
adc
hlt
lea
bswap
mov
ret
mov
mov
mov
cs
add
es
dec
jmp
ficomps
push
icebp
mov
call
xchg
or
xor
push
bswap
push
aad
ja
ret
mov
or
mov
push
or
push
stos
and
mull
push
repz
cmpsb
in
xchg
fsubr
add
cmc
and
cmp
sbb
test
pop
inc
pop
rorl
push
adc
xchg
test
dec
int3
sbb
jno
pop
sub
sub
aam
icebp
xchg
push
cmc
ds
jo
in
inc
addr16
mov
pusha
adcl
sub
loope
out
or
push
imul
insb
outsl
push
jmp
pop
rorl
push
mov
in
fistpll
idivl
pop
dec
out
insb
mov
add
cmpsl
xor
lods
xor
aam
sub
in
out
mov
into
imul
addr16
and
cmpsl
mov
or
xchg
mov
push
fcomps
out
repz
roll
mov
loope
ljmp
mov
mov
rcll
dec
inc
ds
xchg
and
mov
call
shrb
jmp
jbe
push
pop
xchg
inc
rcrl
push
inc
add
pop
mov
in
test
or
pop
push
xchg
sti
pop
sbb
and
loopne
xor
out
xchg
adc
jno
addr16
insb
dec
aas
jae
adc
cs
mov
jmp
and
nop
jb
loop
out
push
es
jge
sbb
jae
in
out
sub
popf
lea
insb
ficoms
xchg
std
sbb
movsl
dec
xor
adc
clc
imul
std
add
hlt
leave
ds
repz
adc
popa
xchg
push
sub
or
fimuls
mov
cmpsl
jp
cmp
testl
jae
push
ja
popa
pop
xor
dec
and
out
sub
pop
sub
repz
or
or
pushf
jp
mov
mov
leave
imul
mov
shlb
stos
call
pusha
mov
cmpsl
xchg
addr16
xchg
mov
mov
pop
outsl
outsl
lahf
push
add
and
testb
or
enter
and
jnp
mov
pop
fsubr
xchg
shl
xlat
sub
les
xor
lds
into
cmp
or
mov
push
movsl
fisubs
cmp
xchg
mov
adc
pop
and
lods
pop
cwtl
and
js
pusha
dec
xchg
push
push
clc
add
cltd
add
xchg
xchg
push
in
loope
int3
push
repnz
push
leave
bound
std
pop
cwtl
scas
push
loope
aad
stc
insl
mov
push
mov
push
mov
and
pop
aam
shlb
jl
bound
sbbb
mov
push
xor
arpl
addr16
xor
dec
jge
push
lret
incb
xchg
popf
mov
jo
decb
xchg
push
sbbb
mov
adc
filds
mov
pop
fcmove
addr16
roll
xchg
lret
push
into
mov
pusha
add
add
lret
aas
stc
rorb
push
xchg
leave
data16
mov
xor
mov
loop
add
sub
fsub
cmp
push
push
or
stos
pop
bound
mov
adc
js
sbb
imul
leave
popf
outsl
jle
cld
dec
loopne
mov
jle
xchg
mov
lea
sub
and
jmp
add
out
data16
adc
pusha
in
inc
or
popa
mov
aam
popa
icebp
enter
into
pop
lea
dec
xchg
mov
imul
and
mov
fnstenv
fwait
or
sbb
frstor
movsb
jp
lods
cmp
push
sub
or
pop
cmp
arpl
insb
mov
jecxz
dec
pop
and
in
lcall
cmp
pop
xor
flds
pop
jno
arpl
aas
rcrl
outsl
push
cmc
dec
mov
out
xorb
test
mov
ja
insb
push
cmp
out
popa
sbb
fldt
adc
gs
lock
lods
and
mov
outsl
jbe
movsb
aam
dec
ljmp
stc
adc
andl
pop
push
sub
sub
dec
add
enter
movsb
rclb
ljmp
fistps
sti
inc
lahf
xlat
stos
lret
ret
sbb
xchg
out
mov
shll
iret
mov
inc
in
inc
mov
scas
fsubrs
mov
adc
jge
popa
test
dec
fbstp
addr16
push
xchg
mov
movsb
jle
or
jmp
int
ficompl
decb
push
loopne
inc
insl
iret
xchg
test
cmp
sbb
sbb
inc
outsb
or
mov
xor
push
fcoml
js
ds
rorb
jge
inc
inc
arpl
stc
xlat
icebp
inc
add
andl
mov
cmp
dec
lock
adc
adcl
inc
xchg
jl
xchg
addr16
call
push
dec
pop
lcall
mov
cmp
cmc
mov
jecxz
pop
xor
mov
cwtl
push
rorl
push
push
rorb
aaa
into
rcrb
call
and
fs
jb
inc
test
add
ss
cmp
stos
xchg
fbld
sbb
and
inc
mov
sbb
fisttpl
fwait
insl
dec
pop
fstl
fnsave
addr16
and
lret
sub
ret
mov
stos
scas
inc
fs
shrb
mov
mov
push
jne
int3
and
xchg
insb
adc
test
fcom
add
mov
adc
sbb
mov
outsl
cmpsb
ret
ljmp
mov
aas
dec
and
xchg
sbbb
roll
gs
call
sbb
push
inc
mov
fxch
fucomi
ljmp
xlat
inc
lcall
add
mov
lds
jb
pop
ret
inc
call
add
dec
iret
ljmp
sbb
das
das
cmpsb
mov
sub
jo
xchg
outsl
and
push
gs
fsubrs
dec
in
cwtl
rcrb
jne
add
cmpsb
int3
cwtl
xor
faddl
ret
xchg
pop
mov
xchg
enter
xlat
movsl
push
xor
pop
scas
fildll
int3
push
adc
mov
daa
insb
xor
xor
test
mov
icebp
mov
test
repz
leave
mov
mov
mov
adc
push
ret
jl
cwtl
sub
mov
inc
push
xchg
pop
lods
ss
je
xchg
cmc
dec
divb
push
sub
fstpt
push
xor
push
divb
xchg
sti
and
push
imul
roll
mov
sub
leave
rol
jae
fisttpl
scas
mov
or
push
pop
sarl
jae
mov
pop
xchg
sub
iret
or
mov
mov
push
sti
repnz
imull
cmp
inc
cli
jns
bound
and
out
jge
and
sub
push
leave
jmp
mov
push
pop
dec
push
xor
inc
stos
jle
push
inc
dec
jecxz
lods
js
lods
mov
aas
or
cld
inc
mov
xchg
sbb
ror
inc
adc
mov
jo
push
hlt
and
dec
in
push
insl
sub
pop
in
inc
loopne
inc
push
fmull
les
sbb
and
pop
mov
jnp
ja
rcrl
fistpll
test
cmp
xchg
cmp
push
mov
cld
in
insb
in
out
cmp
inc
imul
push
xchg
out
or
sub
rcll
test
dec
lret
pop
sub
inc
and
lock
jl
xor
cmp
xchg
jnp
push
and
movsl
push
stc
mov
mov
push
pusha
jne
push
pop
ljmp
and
pop
dec
add
cmpsl
outsl
add
adc
clc
cmpsb
xorl
jbe
sbbl
ffreep
mov
adc
aaa
xchg
and
xor
jae
jno,pt
sbb
pop
pop
out
push
bound
mov
mov
xchg
and
sbb
cwtl
or
ficomps
mov
jp
sti
mov
icebp
push
bound
mov
test
mov
mov
es
cmp
and
xchg
mov
gs
dec
inc
pusha
addl
adc
and
and
and
mov
loope
dec
rorl
rorl
rcll
xor
orb
and
sti
dec
push
and
cmp
pop
pusha
lcall
mov
fisttpll
js
and
stc
outsb
sub
push
xchg
imul
jo
adc
lret
es
mov
mov
pop
sub
out
ja
push
js
xor
iret
out
imul
mov
sti
stos
movsb
xor
cmp
pop
fstps
jo
jns
jae
jecxz
sub
scas
aam
outsl
add
lret
shr
and
shll
pop
push
in
push
in
dec
mov
call
jne
jnp
xchg
jecxz
stos
sbb
ds
push
xchg
adcb
outsl
pop
pop
in
imul
jecxz
and
notb
dec
dec
js
sbb
mov
sbb
sub
lock
xor
mov
mov
sub
inc
lea
mov
pop
mov
cmp
call
sbb
mov
add
sub
sbbb
add
daa
rclb
push
gs
jp
xchg
mov
movsb
and
cmp
pop
in
pop
xor
jbe
dec
orb
aaa
or
fbstp
jne
gs
mov
sbb
movb
cli
mov
push
add
sbb
xor
orl
add
clc
in
lods
inc
xchg
pusha
test
mov
adc
and
out
mov
jle
push
sub
cmp
or
mov
mov
iret
into
insb
jns
sub
shr
ret
fildll
popf
dec
aam
or
testb
fldt
insl
mov
or
jle
js
push
push
movsb
adc
dec
xor
lret
andl
sbb
js
test
cmpsl
loopne
cmp
and
adc
add
clc
jle
push
ficomps
loope
sti
repnz
and
notb
sbb
inc
ret
mov
inc
mov
ret
dec
outsl
mov
xchg
mov
pop
inc
fstp
adc
sbbl
dec
cmc
inc
popf
sub
adc
fs
fnstsw
mov
sbb
inc
add
test
fsts
xor
mov
cmpsl
mov
mov
hlt
jb
pop
xchg
xchg
aad
add
dec
mov
push
inc
std
adc
fimull
mov
dec
call
lcallw
xor
int3
push
pushf
loopne
cltd
cli
pop
lahf
xlat
repz
data16
inc
adc
inc
xchg
jg
lahf
sti
xor
jmp
imul
pop
lahf
ja
xchg
into
xchg
out
shl
pushf
pop
fcmovu
mov
cli
jmp
ror
xlat
cmpsl
add
leave
cli
iret
aam
push
add
mov
shlb
pop
mov
lea
adc
and
mov
dec
push
mov
push
jp
xchg
xor
sbb
cwtl
lahf
jp
mov
and
adc
push
mov
div
idivb
aam
hlt
sub
and
inc
outsb
inc
adc
shl
clc
adc
mov
push
call
adc
xor
sub
pop
js
daa
push
dec
adc
lret
and
add
std
icebp
fiaddl
mov
lea
jb
out
imul
outsb
xor
dec
repz
int
lret
mov
mov
jp
movsl
push
not
ret
pop
add
test
jl
mov
sub
add
test
xchg
xchg
movsl
lods
test
inc
mov
adc
aam
mov
xchg
jns
lret
dec
mov
mov
es
stos
jge
fdivrs
cmp
fdivrs
das
mov
or
or
sub
add
pop
xchg
cwtl
scas
jge
pop
add
or
enter
cwtl
jns
sub
mov
xchg
repnz
into
pop
aas
sbb
push
push
mov
push
cmp
sub
sub
scas
xchg
loop
aad
in
hlt
or
aam
mov
jg
pushf
int
imul
sarl
pop
imul
lea
stos
cld
gs
ss
in
sbb
test
fdivrl
and
imul
lock
sbb
ror
jo
dec
sysexit
roll
xchg
mov
cmp
pop
dec
pushl
ficomps
push
aad
mov
ja
in
xor
xlat
xchg
ret
xchg
push
ljmp
stos
scas
mov
inc
loopne
fidivrl
sub
in
inc
xor
push
xor
movsl
std
test
ds
mov
out
pop
sbb
into
pop
and
push
inc
sub
scas
push
adc
xchg
dec
mov
xor
push
mov
ret
xchg
pusha
test
xlat
adc
repz
fs
out
and
ret
aam
sub
aam
imul
cmpsl
mov
stos
push
inc
das
xchg
repz
mov
mov
jnp
jnp
and
mov
jbe
xchg
je
sub
or
aas
pop
pop
andb
rorb
sub
fsubrl
and
fstpl
xor
outsb
in
imul
mov
arpl
pop
mov
jb
mov
mov
movsl
inc
pop
imul
ffreep
leave
pop
addr16
cmp
sub
es
mov
and
jmp
cmp
xchg
xchg
xchg
repnz
and
dec
push
xchg
add
fmulp
adcl
cmp
stc
add
jle
mov
aad
pop
xchg
and
adc
addr16
popf
roll
jnp
and
and
or
jns
aam
into
push
inc
sbb
jecxz
xacquire
mov
pop
arpl
adc
inc
insb
cld
mov
sbb
out
fimull
adc
mov
xor
cmp
stos
jno
pop
or
out
loopne
xchg
inc
add
sarl
test
rcr
mov
mov
cmovp
xor
sbb
in
xor
ljmp
sti
jo
loope
mov
dec
sarb
daa
push
pushf
test
loopne
push
jno
mov
sub
push
xor
sub
pop
push
and
mov
imulb
mov
or
add
push
dec
xchg
stc
pop
mov
arpl
push
fadds
fs
mov
les
ja
dec
fcmovnu
das
cmc
pop
stc
jo
es
roll
mov
loopne
std
sub
aad
cmp
dec
js
xchg
mov
fidivl
stos
inc
mov
scas
hlt
inc
getsec
or
into
xor
mov
mov
jbe
sbb
add
icebp
mov
jmp
sub
add
add
mov
xor
icebp
add
mov
lahf
shrb
sbb
ss
fnstenv
pop
cmpsl
pop
popf
add
stos
stos
das
sub
cmp
pop
je
ss
sbb
bound
mov
cmp
imul
insl
mov
push
cmp
inc
jno
mov
enter
dec
ret
xchg
stc
and
add
es
shll
adc
int
and
xchg
push
addr16
sub
xor
mov
xor
scas
shll
and
mov
in
jl
xor
xor
test
push
inc
fcmovnu
mov
mov
pop
sub
or
call
xor
into
pop
out
add
out
mov
and
mov
sahf
mov
add
mov
js
inc
in
cs
and
stos
js,pt
ficompl
into
pop
push
pop
fbld
jmp
and
popl
ficoms
mov
cmp
adc
and
jnp
lea
in
mov
xor
js
loopne
dec
imulb
enter
cwtl
push
sbbl
lret
ss
cmp
in
push
out
xchg
push
cmp
fsubrs
and
fmuls
mov
test
sbb
jg
pop
or
xor
jl
cmp
popa
cld
test
addr16
and
and
js
gs
mov
cmpsb
add
xchg
pop
adc
push
and
lret
pop
inc
fadds
stc
adc
jae
lea
lcall
push
arpl
imul
mov
sub
les
jmp
jmp
lds
or
add
xlat
xor
add
cmp
dec
inc
movsl
sub
repnz
std
es
loope
jo
imul
ficomps
std
lock
xor
bts
push
push
dec
or
xchg
pop
sub
out
cltd
xor
in
sbb
push
movsl
jmp
jecxz
repnz
nopl
push
pop
rolb
nop
in
mov
loop
out
inc
cs
push
push
mov
mov
adc
test
jecxz
int3
xor
ss
jecxz
jae
adc
push
mov
xchg
jp
mov
call
fstl
mov
mov
add
push
mov
sub
gs
inc
jle
jo
in
stos
movsl
pop
inc
xor
jg
ret
shrb
lea
jbe
paddd
push
xor
test
add
push
mov
ret
dec
sub
pop
in
aaa
cli
push
sub
add
adc
push
inc
sbb
test
lret
out
mov
dec
jp
pop
and
push
cmpsb
xchg
imul
pop
dec
aad
pop
sbb
cld
addr16
test
and
pusha
cmp
setne
sbbb
cmc
aas
sub
xchg
mov
push
sbb
mov
push
sahf
ljmp
fisttpl
in
adc
cs
movsl
movsl
lret
push
ljmp
mov
sbb
dec
xchg
xor
arpl
lret
loope
inc
push
stos
push
cwtl
fisubl
cs
decb
ffree
roll
mov
inc
sti
cld
or
push
jle
lret
pushf
cmp
mov
mov
lcall
sbb
adc
mov
or
movsb
dec
and
lock
sbb
pop
jns
fucomi
sti
inc
in
outsl
pushf
fdivl
andb
inc
cmp
mov
xor
repz
pop
adc
bound
addl
aaa
xchg
rclb
iret
sbb
sub
es
push
cmpsb
shlb
icebp
xor
sub
push
das
out
mov
or
dec
push
push
mov
sub
mov
pop
shll
dec
inc
mov
int
xor
jno
adc
mov
mov
or
mov
push
clc
std
inc
sub
or
fsubl
inc
dec
add
xchg
mov
and
lea
out
jbe
push
mov
mov
int3
outsb
inc
cli
in
cmpsb
cwtl
pop
cs
inc
jne
fldcw
sub
sbb
xor
je
orb
mov
pop
or
push
dec
and
rolb
das
cmpsb
pop
filds
bound
cvtps2pd
flds
mov
movsb
stos
test
stos
mov
int3
jb
fisubrl
jmp
jnp
test
push
rorl
test
rclb
mov
jne
fldt
imul
int3
fldenv
jno
or
in
js
dec
faddl
xchg
icebp
jb
jb
push
sahf
enter
cmp
sub
sub
out
scas
int3
inc
aaa
lret
cmpsl
popf
in
loop
sarb
sahf
mov
test
stos
aaa
arpl
call
cmc
imul
cmpsb
lods
lcall
pushf
mov
xchg
rorl
jns
roll
shll
mov
fstps
das
popa
xchg
pop
and
adc
fcoml
add
jle
lods
fcom
push
push
push
mov
inc
dec
xor
jb
cmc
dec
nop
std
sub
sub
dec
mov
loop
xor
imul
nop
outsl
adc
xor
nop
aam
xchg
adc
scas
imull
es
inc
sub
adc
push
push
movsl
mov
scas
dec
pop
jb
xor
jp
inc
pop
fistpll
leave
iret
ja
lods
loope
sti
push
das
dec
icebp
lods
in
inc
and
xor
mov
aaa
sti
push
cltd
sbb
arpl
xlat
jo
add
inc
movsb
daa
fs
in
add
into
fcoml
mov
mov
mov
fistps
stos
cmp
xchg
cwtl
sbb
jecxz
scas
cs
into
cmpsl
sbb
dec
js
stos
in
sbb
dec
pop
pop
stc
add
adc
push
movsb
pop
cld
add
add
inc
mov
aas
add
fwait
cld
fisttpll
out
shr
fucom
push
mov
dec
fisubrl
mov
sbbl
mov
test
scas
test
sahf
movsl
mov
andl
adc
push
adc
xor
pop
orb
add
lea
imul
mov
xchg
mov
inc
mov
into
call
xchg
xchg
add
pushf
or
fbld
mov
adc
adc
sub
mov
lea
stos
or
sub
mov
jae
xchg
je
or
aad
cmpsl
dec
xchg
jno
leave
sub
dec
jns
cmp
daa
mov
sbb
xor
push
sbb
pusha
sub
add
mov
xchg
in
dec
loop
mov
cmp
mov
mov
and
mov
mov
sub
test
add
repnz
jle
outsl
cmp
inc
push
pop
pop
test
jne
mov
xchg
add
mov
sbb
seta
xchg
inc
insl
sub
push
aas
pop
or
pop
jnp
push
push
or
and
adc
jg
sub
sub
jmp
int
cmp
push
and
pushf
and
std
or
xchg
add
enter
push
xor
push
rcr
adc
mul
les
and
std
add
fimull
mov
das
mov
mov
mov
adc
cmp
mov
sub
add
dec
imul
dec
push
dec
mov
cmp
test
add
enter
orl
popa
popa
bound
inc
jmp
xchg
rcrl
out
test
in
xchg
mov
fwait
movsl
add
icebp
loop
push
xor
push
fstl
ret
insb
bound
add
jecxz
arpl
pusha
je
sub
dec
pop
aam
nop
addl
xchg
cmp
add
pop
push
fnstsw
dec
scas
cmpsl
test
sub
andb
xchg
lcall
call
pmaddwd
pop
mov
lcall
cmp
lcall
and
cmpsl
mov
cmp
add
sbb
repz
mov
add
cmpb
aaa
in
add
lea
push
iret
pop
notb
jno
popa
icebp
push
out
dec
inc
mov
push
mov
sub
loopne
mov
jno
fmull
insl
clc
clc
add
leave
add
je
jge
jg
movsl
sub
leave
test
lods
cmc
popa
pop
sub
dec
mov
testl
stc
pusha
inc
pop
rcrb
mov
push
pop
aam
jge
push
jb
decl
and
cmp
popa
push
and
pop
sub
sbb
jmp
ja
es
iret
pop
cmpsb
lds
loope
or
adc
mov
scas
mov
insl
loop
aam
pop
in
cmp
xchg
inc
pop
subl
jnp
test
mov
mov
cmp
xor
and
or
icebp
or
icebp
xor
xchg
cli
adc
leave
pop
sbb
cmpsb
jnp
lahf
mov
negb
sub
push
or
rep
mov
rclb
adc
inc
notl
sbb
icebp
mov
mov
cmpsb
and
sub
loope
mov
mov
in
mov
test
sahf
lds
sub
pop
add
cmc
push
mov
cmp
push
inc
lods
xchg
sub
test
cs
idivb
xor
adc
and
jae
test
or
aam
pusha
les
outsb
imul
fistpl
es
push
add
ret
push
sub
push
pusha
mov
imul
rcll
inc
movsb
rolb
or
mov
dec
fimull
sbb
cmp
test
push
xor
mulb
or
shll
dec
jecxz
mov
pop
xlat
dec
aas
xor
ja
pop
stos
pop
in
repnz
mov
sbb
shrb
test
data16
addr16
int3
fidivrs
lds
out
inc
pushf
fcoms
push
mov
andl
les
push
fstpt
stos
push
int
ret
push
lcall
int3
leave
je
cltd
xor
sub
dec
cli
pop
repz
addr16
jne
cmc
inc
push
shll
add
out
inc
sbb
add
xor
mov
push
lds
sub
add
and
jns
test
mov
lea
push
hlt
xor
jae
pop
jb
xchg
insb
insb
fwait
xor
mov
jmp
fmull
adc
shll
mov
cmpsl
cwtl
xchg
push
in
fisttps
popf
enter
fcompl
aad
fs
dec
or
add
sub
fisttpl
jecxz
adc
sbb
cmp
mov
or
mov
lahf
pop
std
dec
cltd
adc
hlt
mov
bound
mov
sub
pop
and
xchg
mov
dec
scas
cmp
cwtl
ret
inc
xchg
add
pusha
jg
cmpsl
ljmp
divl
daa
mov
or
xchg
jl
mov
mov
outsl
and
loop
cmc
cwtl
dec
imul
js
jb
adc
fidivrs
fs
inc
sub
pop
fnstenv
cmp
pop
negb
add
xchg
push
icebp
push
inc
in
or
shrb
sbb
pushf
lods
push
iret
pop
imul
mov
fs
cwtl
out
stc
out
daa
or
cmc
enter
xor
xchg
xor
xor
mov
push
out
out
mov
pop
mull
ja
clc
cmp
aad
lds
sahf
mov
jle
stc
sbb
mov
lret
fiadds
scas
adc
ss
fmull
aam
lret
jnp
cmc
das
setp
divb
cltd
cmp
cmp
and
scas
xor
jbe
mov
out
daa
xchg
inc
lea
jmp
mov
inc
xchg
repz
xlat
adc
and
call
or
inc
push
mov
mov
and
gs
aad
cmc
sub
xor
fimull
lds
push
shrl
test
ds
mov
pop
adc
jmp
das
mov
jb
cmp
lock
sub
cmpsb
pushf
loop
nop
mov
dec
arpl
push
mov
push
in
jmp
pop
pop
mov
clc
out
movl
pop
fbstp
push
int
out
insb
push
fiadds
or
and
pop
jp
sti
repnz
insl
mov
inc
cli
cmp
cmp
je
sahf
add
jnp
fcoms
xchg
ror
push
pop
xchg
adc
lret
push
adc
adc
mov
or
addb
icebp
mov
xor
inc
mov
inc
movsl
adc
jbe
test
add
mov
ljmp
mov
ja
add
add
rclb
push
and
cltd
inc
or
aad
and
lret
mov
subb
pop
pusha
in
sub
mov
lods
jb
push
nop
mov
inc
test
test
sti
loop
mov
je
xor
xlat
std
jmp
jmp
les
mov
loopne
insb
hlt
lret
jns
and
sub
aad
fdivrl
mov
xlat
fnstenv
jmp
mov
push
cli
out
test
push
jne
fistpl
cmp
lcall
movsl
xor
add
les
sub
and
js
xor
cld
xchg
cmp
xlat
cmp
sbb
and
out
lods
xchg
inc
popa
cmp
sub
shlb
movnti
ret
mov
inc
ja
pop
push
push
lcall
pop
sub
jo
data16
add
jns
sbb
or
test
cmpsl
and
mov
mov
hlt
pop
sti
loopne
les
jecxz
adc
shr
push
or
mov
mov
lret
mov
mov
pop
mov
or
ret
cli
fstp
sti
test
lods
dec
imul
sbb
xorl
lahf
mov
xchg
int3
xor
loopne
fidivl
lret
or
fists
jne
pop
imul
ds
xchg
push
dec
cmc
inc
lret
scas
scas
int
sbb
inc
cmp
ss
jno
loope
add
mov
mov
push
cmp
aam
sbb
push
inc
push
xor
sub
xchg
xor
mov
int
cmpsb
fadds
pop
mov
pop
push
cmp
stos
xor
xchg
int
mov
mov
jge
jnp
lods
push
pop
jp
sub
or
stos
or
mov
jnp
mov
popf
fidivl
rorb
inc
adc
pop
rcll
mov
xor
ja
pushf
ret
dec
add
stos
pop
add
cmp
ret
fsubs
add
cmp
jb
push
or
shrl
data16
and
pop
adc
xchg
sub
mov
sub
push
call
mov
adc
inc
jle
push
pop
pusha
insl
and
and
push
push
out
gs
fsubl
arpl
cmp
dec
aad
ret
les
jno
xchg
or
nop
inc
daa
fsubl
out
add
mov
xor
push
mov
jnp
jb
mov
or
movsl
inc
sahf
into
add
sbb
push
and
adc
push
xlat
enter
in
mov
dec
bound
addr16
in
adc
mov
push
xor
test
into
push
add
sub
fwait
out
je
fldl
mov
fwait
out
xchg
js
sub
aam
pusha
push
adc
ret
push
sbb
mov
fsubrs
fs
shlb
jo
mov
mov
adc
leave
and
jge
mov
lcall
pop
sbb
arpl
iret
and
sub
fmul
loope
sbb
imul
daa
nop
int3
cmpsb
sub
lret
addr16
xor
and
add
das
enter
cmovle
push
std
adc
dec
sbb
inc
jle
jl
xlat
sti
loop
jge
push
call
push
add
push
pop
je
imul
dec
in
and
outsb
or
fsubrs
lahf
into
into
rorl
add
imul
xlat
xor
sub
mov
xor
stc
pushf
jp
in
and
js
pcmpgtd
out
js
jecxz
lods
sahf
icebp
mov
inc
je
sub
mov
aaa
push
jmp
imulb
int3
es
jns
pop
int
mov
xor
mov
mov
sbb
loope
fwait
sub
pop
cmp
negl
xchg
stos
ljmp
je
xchg
mov
ret
insb
fbstp
cmp
dec
outsl
or
repz
push
aas
pop
aaa
iret
jmp
pop
adc
mov
pop
shr
and
sti
add
je
cld
add
push
jl
pushf
movsl
sub
outsl
lds
dec
rcrb
and
pop
jnp
pop
aaa
mov
dec
fldt
arpl
cmc
movsl
fistl
xor
lock
mov
fs
sbb
mov
and
cld
xchg
ror
test
call
scas
cs
fsub
inc
jmp
and
out
dec
sub
int3
jno
adc
aas
lret
xor
pop
je
xor
and
push
lcall
or
or
sbb
xchg
push
fiadds
and
sub
sub
stos
jno
dec
dec
push
fdivs
jg
push
jge
cs
cmp
std
cmp
sub
repnz
push
add
daa
or
xchg
hlt
xchg
test
inc
adc
lods
dec
loopne
jne
inc
inc
or
test
sbb
sbb
cli
stos
pop
lahf
outsl
sub
pop
xor
push
dec
jb
sbb
mov
sub
lods
xor
jo
pop
nop
inc
rcrb
icebp
fwait
ret
pushl
les
xor
sbb
sub
in
jge
gs
fwait
aam
push
adc
xchg
xlat
in
adc
test
inc
inc
pop
jns
out
lret
pop
push
mov
clc
insl
push
cmpsb
pop
gs
xchg
adc
fnstcw
hlt
hlt
popl
into
pop
mov
mov
icebp
mov
cmp
hlt
dec
aad
mov
pop
mov
hlt
or
jb
xorl
push
call
aas
or
jl
dec
mov
xchg
aad
adc
movsb
and
cmp
adc
sbb
and
jbe
jg
arpl
clc
mov
jae
insb
lcall
lahf
inc
ds
scas
or
popa
ds
imul
xchg
jg
les
pop
jmp
mov
test
jno
jae
cwtl
mov
sub
lret
and
fdivr
insl
add
push
or
jnp
sbb
outsb
in
gs
les
cmp
cmc
or
sbb
add
fcmovnbe
mov
add
loop
sbb
sahf
cmp
jge
aas
pop
cmpsl
rorl
sarb
sbb
fildl
dec
icebp
push
test
arpl
sarl
addr16
in
stc
push
push
cwtl
jp
sahf
sbb
icebp
push
cmp
xor
stc
lahf
and
jnp
shll
je
call
fstpt
jp
lret
cmp
in
outsb
pop
repnz
sbb
push
mov
popf
loop
hlt
out
fmul
loopne
lcall
jmp
adc
and
sahf
mov
push
mov
pop
jnp
push
mov
arpl
mov
or
mov
addr16
sbbl
scas
and
sarb
inc
jge
push
and
push
or
pop
iret
dec
fdivrp
sbb
add
mov
movsb
inc
divb
mov
stc
jo
popf
roll
xor
in
shrb
and
dec
movsl
enter
in
and
mov
sub
xor
enter
sbb
rorl
dec
jb
xorl
clc
out
pop
rorl
test
rorl
cmpb
imul
outsl
adc
stos
or
mov
cmp
repz
push
xor
ljmp
fstpl
imul
movsl
jns
stos
add
sbb
rolb
jp
inc
leave
repz
adc
mov
mov
mov
mov
dec
xchg
shll
xchg
rcr
negb
out
inc
pop
pop
mov
adc
cmp
cmp
jg
xchg
adc
lcall
xor
jg
fcmovbe
or
cmp
gs
adc
mov
imul
dec
push
fisttps
pop
call
add
pop
out
stos
mov
cmp
jmp
lret
adc
lds
pop
imul
push
lret
adc
ret
and
test
mov
xlat
push
lea
sbb
negl
mov
cmp
nop
xlat
push
push
push
nop
aad
add
xor
jge
xchg
cmp
jmp
dec
jp
je
and
gs
mov
inc
cmpsl
xlat
inc
push
pop
jo
int3
andb
sub
inc
lods
pop
mov
sub
mov
hlt
test
mov
sub
cmp
jb
out
jl
xchg
aaa
int
sarl
pop
sbb
daa
or
test
xor
lea
xchg
out
push
ss
in
push
shlb
dec
push
sub
ficoml
mov
ret
rorl
cld
sbb
push
sbb
ret
jg
aad
mov
lcall
rol
add
ret
add
dec
mov
orl
jle
inc
mov
jne
mov
jmp
add
inc
lods
xchg
pop
stc
mov
mov
or
mov
out
push
cmpsb
mov
cmp
clc
push
pop
xor
dec
sbb
xlat
and
inc
adc
and
xchg
ret
xor
cmp
scas
mov
sbb
adc
hlt
push
ljmp
repz
inc
or
mov
sbbb
sbb
clc
sti
mov
rolb
in
xchg
subl
jbe
add
ds
mov
adc
into
jae
lds
movsl
push
mov
mov
dec
scas
sbb
cli
sti
out
sub
dec
xchg
adc
leave
notb
sub
or
xor
movsb
inc
aam
fsub
push
pusha
push
push
cmp
les
popf
aad
scas
dec
and
das
mov
sahf
lahf
mov
les
loop
sub
fwait
sahf
ret
cmpsl
divb
lock
sub
mov
adc
mov
mov
push
loopne
jb
ret
cmp
push
xor
cli
addb
dec
sbb
push
jb
lahf
pop
cmpsl
jecxz
stos
xchg
inc
loope
fcomps
stos
je
loope
ret
ljmp
inc
jb
imul
test
jnp
imul
cmp
xchg
scas
hlt
mov
or
and
lods
dec
pop
and
popl
inc
dec
adc
adc
xchg
movsl
cmp
gs
jnp
mov
xchg
pop
orb
jmp
lea
fildll
add
push
inc
movsb
sbb
push
jo
pushf
xor
enter
xorb
insb
loop
sub
or
shll
ja
js
das
add
shl
xchg
sub
sub
xor
add
jo
sahf
inc
lods
mov
clc
daa
addr16
decl
popf
div
les
outsl
out
jns
xor
jne
add
xchg
orl
xor
in
call
fistpll
jge
clc
imulb
nop
flds
test
stos
popl
ss
pop
mov
cs
add
inc
andl
and
xchg
fimuls
push
rcrl
rcrb
sarl
movsb
push
adc
or
clc
pop
cmp
xchg
mov
test
arpl
test
mov
push
repz
pop
cli
and
xor
push
decl
mov
xor
es
roll
sahf
sahf
nop
pusha
add
xor
jge
clc
mov
sbb
pop
lock
je
add
es
cwtl
scas
insl
jmp
inc
inc
pop
mov
pop
stos
adc
pusha
call
fwait
mov
pop
cli
iret
mov
out
fcoms
mov
mov
pop
adc
js
mov
addb
mov
test
rcrl
dec
fcompl
dec
jg
add
lock
jmp
pop
push
loopne
inc
jbe
pop
sti
jo
jnp
ljmp
lods
push
mov
test
aaa
add
lahf
xchg
and
and
lock
data16
ljmp
dec
es
sub
and
pop
pop
mov
jns
mov
imul
stc
ret
sbb
jnp
test
sbb
rcll
pop
mov
ljmp
sub
rcrl
repz
pop
imul
out
jmp
fwait
push
xlat
inc
mov
lock
xchg
adc
das
movsb
xchg
mov
fldenv
sub
jl
stos
mov
push
mov
ds
add
pusha
xor
pop
icebp
dec
out
insb
ret
pop
scas
and
push
sub
xor
outsl
decb
popf
mov
cltd
fdivl
popa
rolb
xlat
movsl
mov
dec
or
and
push
adc
cmpsb
test
inc
adc
mov
jnp
cmpl
jle
into
lret
fs
mov
add
cmpl
mov
outsl
cld
aam
xchg
imul
ret
into
lods
jns
das
pop
fimull
movsb
mov
cli
adc
sub
mov
stos
mov
ljmp
pop
sbb
sti
mov
adc
jns
adc
aas
push
insb
mov
imul
inc
push
jmp
mov
sub
xchg
dec
cli
adc
aam
shlb
and
mov
test
lahf
ja
sub
pop
jle
xchg
adc
stos
adcl
mov
pop
insl
jg
and
mov
arpl
sbb
inc
pop
ja
pop
sbb
add
mov
mov
addr16
sub
add
in
outsl
lods
xchg
fwait
in
mov
lods
lahf
and
xchg
add
lods
xchg
jecxz
jmp
shlb
push
leave
mov
jns
mov
sub
push
or
and
rcrb
cld
sub
pop
pusha
cmc
cmp
xchg
mov
pop
push
sub
jecxz
pop
divl
jmp
out
inc
push
dec
mov
sub
push
and
decb
or
shlb
and
xor
sbb
cmp
popf
cmp
mov
es
test
pop
clc
mov
add
ljmp
jns
addr16
dec
test
xor
lcall
mov
push
cmpl
cwtl
and
ljmp
clc
adc
jns
pop
xor
fcmovnbe
pop
cld
popf
das
pop
imul
clc
sub
pop
cmpsl
dec
out
xchg
rorl
pushf
subl
or
test
out
ljmp
prefetch
mov
arpl
cwtl
in
ds
fstl
lods
cs
cld
mov
daa
jns
in
repz
pop
dec
sysexit
mov
or
inc
jge
ret
es
and
push
pop
movsl
cmp
mov
pop
push
div
push
mov
es
test
and
outsb
idiv
jbe
into
mov
hlt
inc
insb
mov
mov
sub
push
push
add
push
mov
test
fs
mov
aaa
mov
mov
gs
pop
imul
inc
jmp
xchg
push
std
cs
sarb
xor
dec
sub
imul
and
or
ljmp
cmc
lcall
lret
lods
jae
mov
or
lcall
inc
add
jl
bound
fistl
push
mov
scas
add
jae
xchg
cld
mov
ljmp
push
sub
mov
add
lcall
pop
filds
mov
or
pop
mov
imul
mov
dec
xor
adc
sbb
jnp
cmp
cwtl
jmp
test
sub
lret
in
xor
jmp
pop
flds
enter
sub
leave
out
sbb
mov
jb
ds
and
cmp
mov
jg
pop
call
iret
and
dec
mov
in
jnp
xchg
ret
or
fsubs
sub
sbb
mov
int
push
xlat
add
out
mov
imul
insb
mov
mov
mov
fists
xor
aam
js
repz
scas
aaa
mov
xor
xor
jae
adc
mov
inc
cmpsb
mov
pop
fwait
sarl
mov
lods
or
mov
mov
jge
dec
lea
outsb
jge
or
aas
icebp
rorl
shr
cltd
adc
mov
fs
dec
ret
ljmp
jl
es
jp
mov
jmp
sbb
popa
cld
push
test
ret
pop
fdivrl
xchg
xchg
pusha
dec
aam
fcmovbe
das
sbb
divl
frstor
inc
mov
mov
inc
dec
jmp
dec
lds
mov
data16
lock
and
rcrb
fs
dec
jns
inc
imul
cmpsl
leave
hlt
enter
out
push
test
shll
mov
cli
lret
and
popa
jmp
ljmp
xor
push
jg
std
lods
test
gs
ss
pop
je
mov
out
mov
mov
jo
aas
imul
cld
pop
push
imul
popf
pop
mov
in
add
sub
clc
jmp
popf
fisubl
out
xchg
ljmp
cs
xchg
lretw
scas
xor
roll
mov
xor
das
xor
xor
mov
fs
or
push
faddl
jle
mov
adc
pop
xchg
jnp
jns
leave
inc
jle
sub
clc
ret
jmp
push
aad
sbb
pop
into
pusha
mov
mov
fiadds
sub
xchg
fs
xor
push
cmpsl
vaddsubpd
xchg
mov
addb
sbb
adc
fisubrl
in
add
lcall
cwtl
adc
test
movsb
out
mov
push
jns
daa
cmp
add
push
imul
data16
push
adc
cmp
out
shrw
inc
lret
gs
clc
mov
pop
mov
dec
cld
mov
cmpsl
push
test
loopne
out
push
mov
jb
bound
pop
bound
shl
sahf
sub
push
pusha
mov
aam
lcall
pop
loop
xor
jnp
packsswb
in
xor
cmp
mov
rcll
repnz
fnstenv
in
fwait
in
jb
jmpw
daa
enter
or
subl
ficompl
jg
adc
inc
cmc
jne
push
mov
int
sbb
sbb
sub
lahf
mov
pop
in
xchg
fxtract
mov
xchg
mov
push
jbe
inc
sub
mov
inc
mov
cltd
inc
xor
int3
jae
and
imul
addr16
xchg
push
or
push
jns
push
cmc
jp
mov
inc
xor
fs
mov
xchg
push
and
ja
lahf
mov
xchg
jnp
jge
outsb
and
enter
mov
inc
rcr
dec
sub
adc
ja
jge
sbb
addr16
xchg
mov
test
push
movsb
jmp
jmp
xchg
dec
shl
in
es
lret
lcall
push
dec
sub
sbb
pop
dec
popf
sub
pop
negb
sbb
mov
js
lahf
mov
push
fimuls
adc
fmuls
out
js
jae
je
xor
jbe
icebp
pushf
pop
repnz
pop
daa
dec
xchg
push
fimuls
xchg
lcall
pop
pop
daa
xchg
and
push
sbb
cmp
fadd
ss
xchg
mov
jl
call
or
jno
iret
lcall
pop
ss
mov
loope
aam
jg
mov
daa
imul
sub
sti
jnp
out
inc
mov
push
xchg
mov
sub
xor
cli
out
xor
fwait
sbb
lcall
or
loope
adc
xor
mov
ljmp
cmp
pop
mov
addl
push
pop
cmp
sub
fs
adc
ret
rcll
test
sub
shrl
popa
lods
pop
jg
loop
dec
call
stc
pop
jne
push
icebp
pop
adc
sarl
andb
cmp
and
adc
enter
pop
xor
pop
and
in
push
dec
and
inc
sahf
pop
inc
or
jecxz
push
in
jne
jno
jle
jae
call
aam
adc
popa
xor
lds
jmp
xlat
sub
movsb
cwtl
mov
mov
sub
enter
mov
movsb
xor
cmp
adc
jo
xchg
xchg
stc
mov
mov
jb,pn
pop
sbb
xor
push
fcoml
cmp
cli
test
test
push
loop
aad
jns
mov
ret
movsb
icebp
jp
data16
sbb
data16
adc
mov
add
lret
orl
mov
dec
dec
ret
adc
xchg
xchg
sbb
ret
dec
mov
std
movsb
stc
dec
pop
aas
popf
pop
dec
mov
cld
sub
repz
fldenv
mov
dec
mov
sub
adc
adcl
mull
dec
add
sub
aas
ljmp
adc
js
lds
push
add
jae
les
icebp
leave
lds
pop
add
xchg
fprem
or
fdivrs
stos
sahf
lret
xor
mov
adc
pop
mov
jge
roll
push
sub
pop
js
addr16
jmp
repz
add
jp
loopne
xchg
sub
jno
cmp
cmpb
popl
cmp
xchg
cli
xchg
mov
jns
loopne
cmp
xchg
mov
bound
dec
cmp
pop
jmp
outsl
lock
shlb
dec
es
mov
fiadds
lret
dec
adc
orl
sbb
add
out
xchg
loope
mov
mov
aam
cmpsb
repnz
push
sarb
shlb
push
loopne
ffree
call
sbb
mov
test
mov
stc
lcall
sub
ret
ret
pushf
cmp
mov
mov
and
jge
je
in
faddl
ret
jns
sub
cli
dec
cmpsb
fistpl
mov
cmp
mov
pop
add
jns
sub
mov
cltd
inc
repnz
movsb
movb
test
xchg
dec
rol
inc
or
pusha
int
sbb
cmpsl
insl
sub
enter
lcall
cmp
pop
jmp
pop
xor
mov
mov
cltd
out
subl
out
loop
call
iret
jb
adc
sbb
aam
pop
loopne
addl
je
push
adcl
jmp
test
dec
mov
lret
lods
bound
xorb
push
mov
jp
cmpb
push
or
jb
or
lea
sub
into
sahf
xor
test
xchg
in
test
daa
mov
les
cmp
fdivrl
push
fidivs
jmp
test
imul
lock
jb
mov
cmp
ret
cld
xchg
mov
xchg
xor
or
testl
jl
loop
insl
clc
sbb
lret
aas
fisubl
clc
sbbl
or
dec
mov
daa
out
jnp
ret
add
mov
push
inc
xor
push
dec
sahf
sub
cmp
loopne
jl
sarl
xchg
cmp
je
inc
add
mov
ret
push
mov
fwait
stc
sbb
mov
in
stc
sbb
shrl
sarb
xor
xor
filds
mov
cmp
xor
cmc
add
mov
pop
fstpt
cmp
inc
xchg
add
ret
call
in
test
xchg
insl
clc
or
clc
sarb
je
xorb
repz
or
rol
or
mov
sti
lods
enter
adc
fstl
mov
push
push
sub
icebp
add
sub
mov
cmp
or
addr16
popa
xorb
or
cmp
xchg
add
outsl
mov
bound
punpckldq
cmp
addr16
popf
jnp
jg
cmp
jg
jecxz
pop
mov
push
sti
mov
cmc
sbb
outsl
ljmp
mov
cs
add
int3
shrl
push
cmpb
mov
cmp
dec
mov
pusha
repnz
or
mov
push
jecxz
insl
dec
or
into
mov
mov
jo
sub
or
outsl
add
int3
cmpsl
ljmp
inc
mov
and
xchg
push
aaa
loopne
lea
addl
jge
mov
lret
or
pop
fmul
stos
adc
jb
sbb
push
movl
popa
popf
or
js
lock
fs
xor
or
icebp
aam
ljmp
jp
xor
jo
js
cli
mov
icebp
jno
xchg
xchg
fisttpl
mov
lock
or
rorl
mov
test
push
cmp
out
pop
pop
jmp
fiaddl
mov
adc
add
icebp
inc
pop
lahf
mov
and
pop
sub
pop
pop
or
push
cmp
or
mov
ret
adc
hlt
xor
xchg
stos
adc
and
addr16
push
icebp
dec
enter
shr
ss
jg
std
jge
xlat
fdivs
add
jle
scas
sub
or
xor
ljmp
mov
fdivs
push
mov
or
dec
xor
cmp
inc
mov
lret
sarb
test
inc
sub
sti
std
aaa
jo
xor
push
push
pop
jmp
inc
mov
stos
ret
push
xchg
bnd
outsb
xor
mov
xor
cmp
pop
iret
frstor
rcrb
loop
lret
call
sub
push
mov
jns
jg
outsl
or
adc
inc
je
clc
inc
call
push
xor
jns
lret
xor
jp,pt
mov
pop
lret
xor
repnz
aam
pop
out
pop
sbb
psllq
pusha
or
cmp
xchg
cmp
push
sbbl
inc
push
mov
xchg
in
mov
adc
sbb
jmp
pusha
and
mul
scas
add
mov
popa
pop
xchg
add
shlb
mov
add
pusha
jecxz
inc
movsb
test
and
xor
mov
or
loop
adcl
or
out
jle
test
setl
into
add
out
roll
jae
push
sub
mov
push
inc
int3
sub
scas
pop
insl
les
rcll
pop
sbb
mov
adc
pop
mov
cmp
adc
xchg
xchg
mov
testb
mov
js,pn
jg
jp
loop
ja
lcall
loope
push
fs
mov
xchg
das
mov
and
push
xchg
pop
dec
insb
dec
xchg
mov
and
rcll
pop
add
xchg
lret
out
es
leave
scas
mov
xchg
loop
xor
jne
push
in
ret
xchg
ds
sub
xchg
std
cwtl
sbb
arpl
jecxz
xchg
jnp
xor
dec
xchg
sbb
or
pop
mov
jo
jb
sar
lret
mov
xchg
inc
es
xor
jno
xor
fstl
xchg
jns
cvtpi2ps
jno
inc
add
and
cmp
mov
sub
sbbl
xor
adc
jo
push
lret
ds
xchg
std
inc
stos
inc
out
iret
or
xchg
push
jo
test
scas
mov
mov
aam
mov
movsl
outsl
mov
enter
xchg
dec
and
and
mov
fstpl
add
sub
push
hlt
cli
and
mov
mov
movsl
jl
outsl
mov
xor
test
xchg
loop
lock
mov
icebp
fcoml
ficompl
xor
fsts
mov
aas
mov
xor
jmp
fwait
loopne
xor
mov
sub
fwait
jecxz
push
arpl
cli
jl
iret
ds
push
in
out
push
outsl
in
and
xchg
or
outsb
je
cmp
pop
add
imul
stos
lahf
jbe
adc
pop
push
jmp
adc
and
pop
daa
pop
sbb
add
cmpsb
push
iret
cmp
push
int3
or
jmp
pop
cmp
jge
enter
shll
and
and
and
xchg
aam
pop
xchg
pusha
jl
or
icebp
jge
in
cmp
sub
lods
ret
in
cmpsb
movsl
ret
jb
sub
cwtl
jge
cld
rcrl
stos
in
and
in
lods
lea
sbb
inc
jns
dec
test
sbb
stc
lcall
pop
mov
ret
imull
cs
loope
push
or
and
xchg
loop
mov
pop
cs
test
push
mov
dec
or
stc
mov
sbb
ds
xchg
out
nop
jb
adc
push
stos
ja
and
mov
sub
les
jb
mov
movsl
mov
repz
ret
or
mov
mov
stc
mov
jae
xor
mov
jmp
mov
dec
scas
dec
movsl
jno
adc
mov
nop
jns
push
push
repz
and
mov
jmp
dec
cmpsl
scas
stc
pusha
jbe
aaa
repz
shlb
sbb
iret
pop
insl
fucomi
in
add
aad
fsubrl
fisttpl
lret
and
jns
cmp
pop
addl
lods
insl
dec
mov
mov
mov
popf
fmul
outsl
cwtl
pop
fs
call
and
cmpsb
lods
into
test
mov
stos
mov
lods
jmp
arpl
pop
cmc
and
jne
xchg
movsl
mov
cwtl
push
ljmp
xchg
sub
std
cli
jge
out
loop
fadd
ret
mov
lret
or
test
iret
mov
pop
cli
test
pop
adc
jp
push
lods
or
mov
icebp
in
inc
lahf
push
mov
je
mov
xor
fists
push
data16
repnz
or
mov
pushl
or
les
add
call
xchg
jg
cli
stos
shr
fwait
mov
lahf
jnp
cmpsb
mov
stc
jo
or
cmp
and
popf
pop
cli
inc
and
fisubl
andl
clc
jl
mov
mov
xor
fcompl
or
xlat
iret
rcrb
inc
imull
stos
jp
sbb
loop
rcrb
arpl
mov
jne
xchg
cmpsl
adc
into
fisubl
xor
les
bound
lock
jecxz
jnp
loop
xor
or
test
push
pop
frstor
rcrb
outsb
test
fistpl
icebp
inc
inc
jmp
inc
sbb
nop
loopne
mov
leave
xchg
ja
adc
push
jo
ss
dec
fwait
cmp
pushf
arpl
xor
fisttps
lods
xor
mov
popf
int3
call
sub
daa
fwait
imul
repnz
inc
lcall
cmp
xchg
bound
lahf
ror
out
mov
aam
xchg
mov
jne
push
jp
je
insb
fiadds
lret
mov
sub
in
jnp
lods
lahf
push
out
pop
sub
pop
es
ja
adc
jne
rolb
das
pop
leave
pop
mov
jbe
lds
decb
pop
adc
sbb
mov
fildl
cmpsl
pop
inc
pop
jo
jl
adc
in
in
sbb
xchg
das
call
mov
imul
push
mov
or
aad
mov
push
in
jno
fists
shlb
add
int
aam
mov
clc
pop
std
xchg
scas
pusha
in
sbb
xchg
dec
das
pop
and
cwtl
orb
or
lods
inc
loopne
popa
daa
fwait
int3
mov
xchg
testb
fidivl
pop
push
dec
and
sub
dec
cli
jmp
in
sti
pop
scas
lods
xor
repz
push
jb
nop
mov
out
imul
fldt
push
add
adc
push
or
sub
cmp
mov
fdivr
jp
push
lcall
in
addr16
cmp
into
out
arpl
je
dec
into
ljmp
lret
and
js
outsl
mov
fildl
decl
push
mov
sarl
xchg
dec
sub
das
idivl
jecxz
orb
mov
or
mov
or
cmpsb
rorb
jmp
mov
call
ja
lock
cltd
pop
mov
mov
add
xchg
mov
cmpsl
test
mov
ljmp
jg
lcall
pusha
movsl
in
test
outsb
push
jo
xchg
insb
into
popf
sub
orl
fbstp
ret
jbe
mov
jnp
lahf
sbb
test
push
mov
cs
sbb
int3
repnz
test
bound
leave
in
jb
pop
push
add
xor
cwtl
cmp
daa
jge
mov
dec
addb
loope
ret
or
xchg
and
jno
sarl
dec
hlt
pop
and
cs
inc
and
push
stc
jg
or
arpl
mov
bound
mov
jp
in
xor
loop
lret
rol
add
rcl
mov
stos
pop
pop
sub
xchg
mov
mov
nop
xor
test
add
adcb
jmp
loope
das
out
arpl
or
fmull
jb
xchg
dec
out
insb
mov
xchg
mov
pminsw
addl
fcoml
inc
adc
xchg
inc
xor
movsb
dec
hlt
xchg
imul
push
aas
or
mov
arpl
insl
fimull
std
aaa
loopne
xor
aas
xor
jge
test
add
mov
sub
and
inc
shr
outsl
mov
sub
mov
mov
push
or
addr16
mov
stos
xchg
fcmovbe
ljmp
pop
in
mov
pop
mov
pop
mov
fists
pop
enter
xor
fdivl
mov
les
fisubl
insb
xchg
xorb
rorl
or
xor
fs
jmp
or
negl
xchg
inc
adc
fstl
ror
add
or
adc
or
iret
enter
jae
insl
mov
xor
sub
cltd
sub
sbb
dec
int
adc
je
mov
or
and
inc
es
or
addb
hlt
pushf
jge
test
or
scas
adc
aas
xor
movb
push
push
rorl
or
fcmove
movsb
xchg
flds
push
jnp
xchg
fwait
sub
cmpsb
inc
icebp
scas
push
into
xor
rsqrtps
cmp
mov
cltd
or
leave
xlat
mov
adc
mov
insb
xchg
xchg
and
cli
loope
addr16
outsl
lret
mov
lgs
lahf
sub
stc
or
mov
cmc
fadd
std
addr16
pop
inc
add
pop
les
aad
xor
xor
into
out
mov
data16
ror
xchg
sub
xchg
adc
jno
nop
inc
cmp
push
in
pop
mov
fstl
inc
xchg
loopne
test
fstl
insb
lods
jmp
ds
sbb
popa
nop
call
shl
jne
stc
jle
or
mov
cmp
outsl
pop
pop
leave
insl
lds
inc
xchg
dec
xor
lea
iret
andb
add
lret
mov
icebp
xor
jecxz
dec
pop
stos
cltd
sbb
outsb
into
dec
cmpsb
icebp
pop
sbb
adc
loopne
mov
daa
test
leave
inc
mov
push
sti
jb
testb
jge
mov
pop
scas
in
sahf
cltd
daa
bound
into
lock
pop
mov
sarb
in
lahf
mov
arpl
sub
jecxz
ror
sbb
adc
in
inc
push
ficoms
out
xor
and
jbe
mov
fsubl
mov
cmpl
pop
neg
inc
rorb
fs
das
js
adc
push
push
mov
pusha
scas
mov
or
icebp
ret
dec
mov
pop
dec
and
sbbb
and
ret
testb
sbb
aam
add
gs
dec
dec
xchg
jne
mov
in
mov
dec
inc
mov
mov
lods
test
mov
and
or
data16
jns
dec
mov
jb
mov
push
pop
enter
xor
cmc
ss
cli
push
cmp
xor
ds
loopne
shl
sub
xor
sahf
outsl
inc
je
mov
push
cld
dec
or
test
xchg
add
or
pop
fcomip
add
or
fsts
das
gs
rcrl
pusha
xchg
push
inc
xlat
les
jl
cmp
shl
push
in
in
popf
sub
dec
cmp
push
scas
das
lret
fcompl
jecxz
cmp
.byte
sbb
xor
sbb
je
insb
cmp
sub
xlat
fnstsw
add
lods
ja
mov
pop
mov
push
inc
fcoms
cmp
sub
mov
pop
sti
test
dec
jb
cli
adc
push
pop
imul
adc
cs
xor
mov
aam
call
mov
out
insb
xor
rorl
lea
xor
decb
arpl
in
or
shrl
fwait
cmp
xchg
lds
xchg
xchg
lret
pop
in
xor
stc
push
jg
aaa
or
xchg
sbb
in
aaa
mov
pop
adc
lds
or
fisttpll
lods
inc
mov
jmp
mov
das
xchg
push
test
lret
jae
aas
adc
mov
mov
decb
rcr
xor
pop
ficoml
jg
mov
or
call
push
lods
mov
fldl
repnz
pop
mov
mov
inc
lahf
mov
lret
push
ss
fsubp
pop
mov
sbb
xor
cmc
mov
jg
cmp
shlb
adc
cs
pop
xor
rol
cld
push
or
test
pop
ljmp
cmp
cmp
mov
pop
insb
fwait
out
notl
outsl
lret
jb
push
mov
mov
ja
enter
cld
cmc
das
cmpsb
sbb
dec
in
mov
bound
pop
dec
aam
push
je
imul
pop
or
rol
cld
aam
add
fs
xor
lret
jp
xchg
push
mov
je
repz
push
xchg
lock
js
gs
sub
lret
cmp
and
nop
cmpsb
mov
fs
stos
repnz
xor
in
outsb
pop
or
insl
adc
aad
cmp
popf
scas
aam
lds
push
add
inc
hlt
ds
call
jg
orl
fildll
mov
dec
mov
and
mov
cmp
incb
xor
jmp
daa
or
mov
push
lcall
or
pop
test
sub
and
adc
test
ljmp
aam
cltd
aaa
jae
cmp
clc
arpl
imul
pop
add
mov
inc
out
mov
xchg
sbb
jp
sbb
es
popa
les
inc
xchg
aam
pop
xor
xchg
jns
popa
les
cltd
mov
imul
or
dec
jp
cli
dec
inc
stos
or
leave
es
movsl
fimuls
test
sub
ss
aam
xchg
into
mov
xor
add
xchg
mov
jae
pop
mov
pop
inc
ficompl
cmp
scas
xor
fs
inc
pop
jne
leave
jmp
dec
cmp
jle
push
loop
aaa
mov
push
rcll
outsl
sbb
lahf
mov
fistpll
mov
xchg
pusha
ret
ret
sarl
int3
out
je
rcrb
xor
fisttpl
jb
adc
into
or
xor
out
das
and
mov
call
in
aas
sbb
popa
cmpsb
and
add
dec
aam
pop
jmp
push
icebp
repnz
test
lahf
jns
stc
push
ret
orb
xchg
inc
cmp
sub
and
xorb
negl
mov
push
and
pusha
push
rcrl
cwtl
test
cmp
cmp
xlat
pop
sub
leave
fildl
push
xchg
sbb
testb
stos
mov
mov
cmp
out
sahf
sub
push
out
add
mov
jle
in
in
jb
dec
stos
bound
cmp
loop
mov
push
mov
inc
jns
call
jg
cmpsb
dec
pop
ja
sbb
ror
sub
test
mov
adc
cmp
sarl
inc
lret
inc
pop
adc
jp
mov
jp
inc
push
loop
mov
mov
pop
lods
es
xlat
and
icebp
hlt
hlt
or
movsb
loop
mov
inc
xchg
iret
ret
mov
stos
or
jne
push
pop
mov
test
popa
mov
pop
mov
pushf
scas
jns
addl
cmpsl
jbe
fcmovbe
sbb
push
je
clc
push
movsb
lock
jbe
inc
xor
lods
orl
call
jbe
jl
pop
mov
in
imul
xor
pop
lret
gs
roll
pop
andl
aad
mov
ror
fstpl
repz
jmp
cltd
in
cmc
popa
add
insb
repnz
push
js
std
test
pop
pop
das
mov
jge
imul
pop
add
mov
or
shll
mov
subl
jns
xchg
xor
pop
lahf
mov
ja
mov
sbb
lahf
mov
adc
push
cmp
adc
notl
push
push
cld
int3
dec
add
xchg
xor
mov
xor
out
jne
bound
std
jb
pushf
inc
out
imul
jnp
filds
scas
xchg
test
jbe
or
push
inc
sbbb
repnz
inc
aaa
or
fcmovb
out
imul
rcll
xchg
xor
repz
jne
dec
adc
jne
xor
and
fcompl
cmpsb
cmp
pop
hlt
mov
inc
ja
inc
xchg
loopne
fmuls
sbbb
xor
jnp
xor
dec
fcompl
addb
mov
ja
fcomi
enter
mov
test
hlt
mov
adc
fnstsw
stos
mov
add
lea
xchg
into
stos
cs
jl
pop
imul
cmp
in
pop
scas
pop
adc
fwait
jp
test
fstl
or
arpl
aad
sub
nop
xchg
xchg
mov
sbb
mov
mov
jae
cmpsl
lahf
fiaddl
xlat
mov
insl
popf
lahf
lock
jecxz
insb
lret
push
mov
cmp
cmp
cmc
and
xchg
je
mov
dec
gs
call
jnp
data16
adc
sbb
or
jl
cmp
gs
cmc
jne
ljmp
subb
sub
loope
dec
inc
in
mov
add
jno
cmp
push
dec
js
and
push
mov
loop
xchg
xchg
cmp
or
sub
xor
mov
xchg
jmp
fnstsw
pop
pusha
xchg
mov
rcl
subb
popf
ljmp
lcall
jg
xchg
sar
xor
in
sub
dec
pop
mov
lods
loope
mov
repnz
shrl
aaa
mov
jns
pop
andl
xchg
lcall
into
sub
stos
enter
out
jmp
pushf
cld
les
or
dec
and
outsb
adc
sbb
add
in
clc
loop
adc
add
rcrl
jne
jg,pn
nop
jl
fcmovu
aaa
sahf
int3
stc
aaa
mov
addr16
das
cltd
insl
mov
push
fldenv
ss
divl
sbb
xchg
xchg
shl
rcrb
jb
lock
mov
mov
inc
cmc
dec
lret
shlb
out
nop
push
pop
dec
out
divb
push
fcmovnu
mov
push
in
cmp
dec
es
and
ss
cs
cmp
push
add
sub
cltd
rorl
cmp
sub
inc
test
xor
repnz
cltd
cmc
inc
or
add
add
jbe
cmpsl
dec
or
push
mov
jo
out
mov
xchg
cmc
shl
push
mov
fdivrs
call
push
gs
mov
inc
filds
fidivrs
fs
pop
push
mov
inc
jp
mov
sub
jmp
xor
jmp
cmpsl
or
cmpsl
fldt
or
jae
negb
pop
mov
jge
push
pop
cmp
leave
pop
scas
add
and
mov
insb
fisubrl
and
pop
jl
xchg
push
out
out
pop
ficoml
pop
mov
mov
xlat
divb
mov
ficoml
in
mov
ja
insl
popa
push
rorb
pop
cmp
add
sub
es
jbe
popa
jg,pn
cmp
stos
sub
jne
inc
mov
mov
inc
lods
dec
aas
pop
sub
ljmp
in
pop
sub
popf
cmp
and
push
jecxz
jbe
push
stc
int
.byte
pop
.byte
add
mov
sbb
mov
adc
fstl
test
pusha
xor
ljmp
dec
lcall
test
frstor
data16
flds
data16
mov
jp
push
inc
aad
in
ret
add
or
or
ja
lcall
pop
sbb
bound
or
pop
mov
test
and
jp
in
push
fidivs
mov
ljmp
push
stc
daa
xchg
or
jo
pop
xchg
scas
cli
add
in
mov
pop
repz
pop
movsl
out
xor
int3
frstor
pop
popf
repz
lods
out
lea
mov
outsb
mov
xlat
mov
ds
gs
shll
push
ret
cmp
fstps
in
call
adc
testb
aad
repz
adc
jge
jns
filds
and
mov
and
push
mov
xchg
and
add
ljmp
lahf
inc
ficompl
or
sbb
push
jg
in
mov
inc
pop
add
push
mov
mov
pop
add
shll
or
add
dec
xor
jl
cmp
mov
jnp
repz
popa
mov
imul
imul
imul
ret
pslld
pop
iret
cwtl
push
adc
xchg
fiadds
jbe
mov
mov
lret
and
xor
mov
push
sahf
pop
leave
xor
inc
dec
dec
cmp
jo
mov
and
push
dec
cld
jnp
adc
dec
fxch
push
fcomps
xchg
test
push
inc
pop
stos
sub
repz
sub
add
pop
scas
andl
addr16
testl
adc
mov
ret
pusha
nop
out
and
jno
mov
xorl
xchg
cmp
sbb
out
and
adc
cmpsb
cli
push
dec
push
jns
inc
in
jle
and
mov
into
push
or
lea
clc
jecxz
push
or
sbb
fistl
loope
sbb
jl
ss
lds
inc
push
insb
pop
ret
lock
test
outsl
inc
xchg
das
adc
dec
lcall
add
shl
adc
movsl
sbb
pop
push
mov
adc
add
xchg
les
fdivrl
jmp
cmp
push
mov
das
es
sub
cwtl
lahf
xchg
mov
inc
popa
push
xor
mov
mov
sub
hlt
shl
sbb
pop
arpl
dec
pop
call
mov
sbb
sub
ljmp
pop
mov
lret
mov
mov
and
push
dec
negl
jno
dec
xchg
mov
nop
pop
xor
cmp
lods
adc
popf
mov
lods
outsb
test
in
sahf
loopne
cmc
lret
insb
ja
pop
xchg
ljmp
mov
mov
mov
lret
iret
iret
mov
cmp
lret
orl
add
inc
jl
pushf
data16
cmp
adc
add
add
adc
or
cmc
gs
test
jne
mov
movsl
dec
mov
fisubrl
pop
sbb
mov
fisttpll
popf
lock
push
jmp
clc
test
or
les
std
push
jmp
inc
jns
adc
xchg
or
das
pop
in
push
loopne
adcb
das
push
sbb
test
xor
xlat
movsb
jmp
jae
fmulp
out
mov
xchg
cmc
sub
adc
dec
jl
in
rorl
pop
and
pop
mov
mov
jo
cmpsl
bound
mov
or
sbb
ljmp
lock
arpl
jbe
stos
nop
das
xchg
stos
xor
fildll
rorb
sub
add
mov
enter
xor
push
in
int3
adc
adc
jge
xchg
mov
cmpsl
cmc
push
or
aas
adc
ds
loop
mov
mov
fcoml
push
or
xlat
mov
fistps
cmp
sub
les
pushf
pop
or
sbb
call
cmp
jnp
sbb
adc
fdivrl
nop
shlb
fidivrl
fiadds
mov
add
pop
or
outsl
xchg
xor
cmpsl
cmp
mov
mov
jle
inc
jmp
mov
xor
xor
int3
or
push
aaa
es
mov
fldl
mov
repnz
daa
into
cmpsl
adc
sbb
stos
cmc
sbb
mov
repz
iret
scas
fistpl
inc
adc
in
stos
rolb
ret
push
mov
mov
xchg
out
lea
rcrl
add
sbb
xchg
test
nop
xchg
push
icebp
dec
in
sub
pop
push
hlt
ffreep
pop
xchg
insb
dec
or
hlt
sbb
push
mov
or
mov
fs
rclb
dec
and
mov
out
adcb
enter
fdivl
mov
push
loopne
xor
popf
sub
out
or
je
ret
aam
in
cmp
mov
sub
push
mov
jae
push
or
jecxz
jecxz
xchg
dec
inc
jecxz
rolb
fildll
pop
lds
xor
fisubl
cmp
dec
xchg
sub
loop
sub
in
das
cmpsl
sbb
pop
repnz
sbb
loopne
pop
cmp
push
gs
adc
fisubl
inc
push
dec
stos
mov
inc
pusha
pushf
arpl
sbb
outsb
popa
jmp
hlt
push
xlat
insb
int
insb
cli
mov
sbb
jecxz
mov
in
adc
xchg
push
mov
das
mov
or
xchg
iret
lods
mov
ficomps
xor
mov
loop
addr16
dec
mov
lea
das
out
mov
push
cwtl
jnp
jnp
xor
int3
pop
adc
adcl
movsb
dec
lods
shrl
push
lock
test
mov
movsb
mov
jmp
mov
stc
push
inc
pop
pop
mov
loope
int
cmpsl
xchg
mov
das
scas
push
test
add
jno
loope
jmp
adc
pusha
add
ret
add
sti
push
cld
lock
mov
ret
sbb
jnp
mov
sbb
addr16
sub
movsb
mov
int
fs
lret
not
xchg
ret
in
push
mov
fnstcw
notl
in
jae
mov
cmpsb
xchg
call
pop
jne
movsl
ror
mov
or
loopne
or
iret
fdiv
dec
bnd
imul
stos
sub
sbb
dec
lea
jne
mov
cmpps
sub
cs
mov
dec
lret
sbb
push
jnp
clc
enter
pop
in
ret
enter
je
inc
and
or
das
jns
clc
and
dec
push
outsl
lahf
into
into
push
call
and
movsb
sbb
xor
sbb
xchg
adc
push
rcrl
adc
xchg
adcb
pop
stos
std
std
inc
or
push
in
cmpl
push
cmc
in
cmpsl
in
or
std
aaa
hlt
adcl
in
cwtl
mov
rclb
sub
xor
xor
push
das
cs
fmull
mov
sub
movsb
mov
inc
out
push
test
arpl
inc
mov
cmp
mov
sar
in
inc
add
add
ss
les
jecxz
xor
rcr
aam
push
jle
in
bound
push
and
movd
popa
and
ss
mov
cmp
gs
mov
loope
push
jnp
pop
imull
mov
cmp
dec
sbb
icebp
push
jns
pop
mov
aas
fsubl
xchg
movsb
shll
test
jbe
jnp
lods
mov
and
mov
shl
cmp
pushf
pop
mov
adc
sbb
xchg
sbb
mov
sub
xchg
adc
xchg
ror
test
ss
or
call
mov
clc
xor
adc
inc
dec
orb
insb
push
cmc
pop
sahf
add
push
cli
idiv
mov
mov
cmpsl
or
cld
jo
dec
test
sbb
or
imul
xchg
loopne
sbb
xor
into
cmpb
xor
outsb
cmpsb
sti
movsl
sub
mov
cmp
mov
pop
icebp
into
mov
data16
mov
jb
dec
push
shrl
mov
inc
loopne
mov
cmpsl
leave
fidivrl
mov
add
cmp
cmp
ds
iret
adc
popa
adcb
add
nop
and
pop
loop
outsl
jns
fldl
imul
cmpsl
dec
pop
inc
sbbb
or
mov
and
or
cmp
in
ret
inc
mov
stos
add
cmp
push
sub
jae
test
mov
and
push
fcomp
push
sbbb
cmpsl
lea
je
in
jbe
cmp
add
or
mov
sti
pusha
jbe
xchg
adc
mov
adc
mov
dec
jecxz
ds
inc
into
js
dec
pop
pop
repnz
mov
adc
sub
pop
das
cld
hlt
jecxz
popa
dec
or
xchg
push
imul
fsubl
je
pop
mov
cltd
mov
dec
adc
inc
inc
adc
xchg
fdivl
test
cmpsl
add
mov
dec
mov
imul
dec
dec
mov
jecxz
subl
mov
nop
adc
and
pop
clc
jae
loop
pusha
addr16
daa
loop
xchg
stc
cmp
loop
inc
addb
xor
loope
jmp
mov
inc
and
and
dec
jmp
and
xor
in
scas
sub
jns
andb
adc
push
add
cli
cmpsl
insb
xor
rclb
add
aad
out
xchg
sahf
int
scas
int3
divb
sbb
fcmovbe
bound
mov
sub
hlt
aas
cmp
decb
aas
jmp
daa
outsb
cmp
mov
pop
pop
nop
jne
add
mov
jnp,pt
sbb
xchg
pop
lds
testl
lods
pusha
mov
sbb
adc
dec
pop
pop
and
inc
cli
inc
pop
scas
jg
sub
xchg
pop
mov
enter
lods
mov
imul
leave
leave
shll
aaa
imul
inc
mov
mov
loopne
ja
les
divl
clc
int
dec
scas
xchg
push
add
int3
xor
push
sbb
scas
inc
scas
pop
xchg
out
mov
nop
or
mov
aad
bound
pop
mov
test
jne
fwait
sub
sub
mov
cmpsb
pusha
mov
pop
xchg
mov
je
das
jp
frstor
pop
xor
sbb
je
mov
sbb
rcrb
sahf
scas
dec
sub
loope
push
push
test
jge
test
je
fwait
out
jne
clc
lahf
push
hlt
jae
xchg
xor
or
rol
aaa
mov
movl
mov
sbb
loop
aam
and
mov
dec
add
lods
mov
aad
nop
movsb
fnstsw
jp
mov
dec
outsb
out
int
pop
inc
dec
lea
pop
stc
ret
in
xor
pop
inc
hlt
mov
push
mov
arpl
push
stc
sub
pop
aas
push
inc
ret
mov
jb
ds
lds
or
mov
stos
cmp
or
mov
inc
or
xor
lahf
lret
lds
stos
mov
ja
lea
cmp
jnp
lcall
mov
negb
shr
adc
cld
jo
iret
add
mov
rcll
repz
mov
rcrb
xor
jns
xlat
stos
ficompl
icebp
add
sbb
push
outsl
inc
leave
ss
mov
inc
divb
sahf
std
fs
mov
xor
popf
fcmovb
int3
decb
sahf
fsubs
test
jecxz
mov
xlat
jge
xor
inc
dec
and
or
jns
sub
dec
mov
test
mov
aaa
ds
mov
cmp
adc
into
outsl
cmp
loop
pop
sub
in
test
loop
jl
push
add
xorl
dec
cmp
dec
and
enter
pop
in
daa
shlb
data16
fisubs
dec
divl
jg
jl
and
add
scas
leave
and
test
les
inc
inc
aam
lret
pop
mov
xchg
xchg
inc
ja
push
mov
jg
sub
call
enter
jg
mov
frstor
dec
sbb
subl
mov
out
inc
mov
out
cmpsl
cmc
inc
popa
repnz
xchg
int3
fisubl
test
xchg
mov
push
test
or
out
dec
daa
aas
pop
cmp
mov
out
out
nop
outsb
mov
decb
xchg
clc
dec
mov
lret
inc
bnd
jmp
ss
or
sbb
pushf
rorb
and
sub
shl
out
push
cmp
lret
popf
lea
jp
pop
test
lea
add
mov
hlt
jb
pop
test
js
je
sub
rol
or
inc
sbb
push
mov
inc
mov
mov
add
outsb
mov
scas
pop
mov
inc
push
stos
in
frstor
fld
push
rcrl
jbe
arpl
repnz
adc
cmp
dec
mov
add
jle
sets
jmp
adc
sbb
sti
xor
adc
inc
mov
cltd
pop
xlat
lret
ja
or
outsb
dec
and
mov
xchg
lods
js
xchg
cmp
or
aam
mov
xlat
cmp
jl
lea
scas
add
adc
adc
rclb
aaa
adc
xor
jb
pop
jge
sub
mov
jne
lahf
mov
dec
aas
jno
cli
lret
loop
and
cltd
stos
push
cmp
ret
add
xor
inc
xor
outsb
jbe
jmp
aas
dec
mov
mov
sbb
aaa
jg
data16
add
mov
cmc
jmp
repz
test
pushf
pop
push
lock
push
and
nop
jo
xchg
enter
xor
int3
pop
mov
call
pusha
movsl
xor
push
clc
pusha
fsubl
or
dec
add
cmpsl
xchg
dec
mov
mov
push
pop
or
xchg
cs
push
call
dec
dec
jg
into
rorl
pop
outsw
lods
ret
or
add
lds
pop
aas
loope,pn
cltd
xor
mov
push
out
pop
jl
fidivrs
pop
or
pusha
aaa
test
loopne
loop
ret
into
add
xchg
add
mov
xor
adc
pop
push
test
test
or
push
dec
pop
mov
out
cli
add
mov
add
addb
inc
rep
pop
cmp
adc
dec
fidivrl
cs
mov
idiv
mov
xchg
ss
sub
xor
test
pop
add
adc
add
mov
in
jle
lds
imul
mov
or
inc
xor
orps
mov
jmp
cmpsl
test
les
mov
dec
xor
cmp
dec
pusha
outsb
push
mov
xchg
into
repz
fistps
aam
sahf
imulb
mov
cltd
xor
arpl
sbb
dec
and
out
xor
mov
ror
leave
rorl
aad
mov
dec
pop
mov
stos
idiv
lret
mov
cmp
add
adc
mov
jno
fsubrl
call
mov
pop
inc
out
sbb
dec
jge
cmpsb
push
sbb
fcomps
mov
arpl
jmp
add
mov
imul
ret
dec
leave
aad
test
mov
push
imul
push
stc
or
in
mov
xor
and
in
dec
and
cli
add
test
mov
or
cld
ss
dec
int3
jle
xchg
mov
jo
mov
sbb
and
adc
dec
lods
push
adc
or
ret
mov
dec
pusha
in
mov
adc
fcoms
jmp
aas
and
rcrl
mov
push
push
cmc
or
pop
in
mov
data16
aaa
dec
push
fildl
jp
mov
sub
dec
jmp
aaa
pop
xchg
dec
sbbl
pop
adc
cld
and
add
add
mov
gs
mov
jle
insb
lock
dec
icebp
adc
dec
cli
cmp
sti
or
push
aad
fidivl
xchg
sbb
std
cwtl
add
out
insl
inc
cwtl
in
push
push
das
fstps
sar
leave
jmp
pop
insb
jecxz
jne
icebp
ss
xchg
in
add
in
inc
pop
cld
test
clc
jg
dec
push
cli
sbb
lock
mov
mov
mov
push
add
jecxz
div
adc
cmc
js
int3
inc
mov
mov
aas
out
xor
inc
push
ja,pt
das
xchg
push
xchg
mov
loope
xor
adc
mov
xchg
fs
mov
mov
add
testb
addr16
data16
mov
ja
cmp
push
imul
mov
test
jne
aaa
xchg
push
movsb
jp
lahf
frstor
daa
ljmp
xchg
xchg
sbb
jmp
xchg
push
out
pop
adc
cmp
fcmovnb
dec
mov
inc
sti
jp
test
aaa
jo
inc
lret
in
outsb
and
xchg
cmpb
or
mov
das
fwait
gs
cmp
jge
adc
jl
imul
pushf
fiadds
lea
js
shll
sub
sub
pusha
sahf
sbb
jnp
push
ss
jo
stos
jp
push
add
adc
jecxz
insl
cli
mov
insb
das
sub
push
cld
jle
cmp
sti
fwait
leave
push
cwtl
sbbb
sti
adc
push
leave
xor
lods
pop
shl
sti
dec
mov
inc
pop
adc
ds
fsub
sub
inc
mov
and
inc
jmp
mov
lods
leave
jnp
loopne
shlb
mov
mov
push
jo
pop
or
or
frstor
or
xchg
mov
pop
mov
cmc
mov
outsb
fwait
popf
push
out
sub
imul
xor
enter
jae
jmp
mov
cmp
cmpsb
sbb
add
jns
es
roll
in
sub
inc
cs
ljmp
std
sbb
xchg
je
sbb
jmp
push
daa
dec
mov
sbb
lahf
hlt
sbb
pushf
flds
es
fdiv
mov
mov
jmp
or
mov
cwtl
repnz
leave
decb
xchg
push
or
hlt
fcmovnbe
pop
mov
aam
add
or
jp
lods
enter
push
lods
pop
fistl
cmp
pop
xorb
psubsb
adc
cmp
subb
bswap
mov
sbb
sbb
jns
std
ljmp
pop
adc
repnz
xorb
aaa
mov
hlt
int
xchg
ret
push
sbb
add
daa
xchg
mov
inc
fistl
jns
lds
jb
sti
inc
push
push
notb
jb
xchg
loopne
scas
push
push
je
mov
inc
add
adc
ret
pop
pop
data16
mov
xor
xchg
aaa
daa
xchg
js
jle
mov
xchg
dec
mov
inc
sub
cmp
enter
ljmp
fmul
push
dec
test
cmp
iret
out
lahf
lcall
jo
loop
aaa
adc
xchg
mov
pop
mov
add
call
xchg
loope
jb
dec
imul
roll
icebp
mov
jg
dec
cmp
mov
pop
adc
popf
mov
pop
mov
inc
loop
adc
divb
rcl
clc
out
lcall
jge
insl
rclb
mov
jge
jge
inc
inc
sub
sti
lock
repnz
mov
rclb
hlt
fs
das
cwtl
daa
jle
arpl
nop
pop
out
or
test
test
add
pop
cmc
cmp
pop
jge
sti
and
in
mov
pusha
push
pop
mov
push
jge
fsubrs
hlt
pop
mov
fstpt
in
rorb
lret
cs
xchg
cmp
xor
dec
bound
add
sub
push
fidivrs
test
and
cmpsl
add
sbb
or
sub
fmulp
xchg
mov
or
jbe
sbb
cmpb
inc
add
fcomp
add
xor
repnz
add
insl
aam
pop
dec
movsb
fsubs
dec
mov
and
sti
outsl
or
inc
daa
cmp
int3
mov
sub
inc
bound
sbb
add
dec
dec
cmp
cmp
cmp
or
idiv
jnp
add
jae
xor
stos
adc
outsb
inc
push
mov
pop
mov
push
movsl
and
or
dec
mov
nop
sub
pop
fstl
inc
sub
push
sbb
mov
in
dec
push
fdivrl
lahf
mov
jno
into
in
adc
sub
sub
and
subb
sub
add
stos
xor
sbb
ja
dec
jns
xor
push
int3
mov
sbb
lods
mov
push
sub
getsec
or
mov
mov
jae
ret
adc
leave
lret
mov
push
push
mov
mov
add
add
inc
jnp
sbb
mov
cmp
pop
pop
rorb
loopne
imul
enter
daa
xchg
pop
ja
loopne
cli
mov
push
cmpl
ss
fwait
aaa
bound
or
mov
pop
fs
add
cmpsb
cmp
xor
lcall
inc
cwtl
xor
jecxz
xor
xchg
push
cmp
dec
or
mov
inc
sbb
mov
or
dec
outsl
decb
cmp
mov
cli
push
rol
pop
loope
mov
push
or
orb
rcr
jp
fistl
das
mov
mov
dec
pop
xor
lahf
mov
xor
out
adc
inc
in
add
jne
sbb
insb
xor
or
or
push
ljmp
addr16
pop
inc
aam
les
xor
loope
jo
and
test
xchg
mov
push
lods
pushf
jo
dec
cmp
mov
xor
adc
mov
push
lea
ret
mov
and
cmp
push
das
lret
fidivs
stc
and
adc
lods
test
pop
and
mov
test
dec
ds
inc
ja
lcall
xlat
fldenv
leave
mov
fwait
shl
ret
lods
iret
je
sub
cli
in
in
inc
and
sbb
xor
sahf
idivl
mov
cmp
lahf
mov
neg
cmp
inc
js
dec
outsb
call
dec
mov
or
je
adc
mov
and
mov
jns
inc
xchg
ss
mov
dec
std
std
loop
addr16
idiv
lcall
fildll
pop
xchg
xchg
jmp
cmpsb
pop
mov
push
dec
xor
push
dec
mov
icebp
loope
xor
shrb
add
mov
loope
mov
sub
fisttps
mov
out
sub
lds
repz
sub
ljmp
aam
andl
cs
and
nop
lds
sub
sahf
loopne
adc
dec
test
jo
imul
xor
xchg
repnz
xchg
mov
push
mov
pop
in
mov
mov
out
cltd
mov
aaa
mov
push
fadds
and
aaa
sub
pusha
jns
or
add
push
jecxz
mov
xchg
push
jae
mov
jp
inc
push
push
xchg
leave
fiadds
fists
mov
cmp
jp
push
enter
lret
mov
scas
fst
add
or
ss
inc
pop
xchg
into
push
pop
gs
jbe
and
pop
rorb
jg
out
mov
lret
lcall
enter
or
mov
ss
sbb
lcall
inc
mov
adcl
or
daa
je
or
lahf
lahf
sub
jne
popf
add
jne
pop
fmull
inc
leave
mov
sub
jb
mov
ljmp
call
repz
pop
test
sbb
or
cld
inc
jb
push
mov
adc
fmuls
add
or
bound
decb
aaa
popa
bound
inc
out
ret
adc
sub
or
repz
push
sub
dec
dec
fsub
dec
cmp
mov
subl
sub
iret
or
mov
in
das
in
pushf
or
fwait
jecxz
jmp
add
mov
mov
jge
rorl
cmp
pop
mov
jb
loope
into
sub
fmuls
xchg
loopne
jo
pop
icebp
adcb
int
push
cmp
and
test
dec
and
lea
mov
pop
leave
ja
push
xchg
pop
int3
loop
jg
xor
add
push
lea
sub
cwtl
pop
test
pop
pusha
mov
outsb
mov
jb
div
mov
cltd
dec
insb
test
inc
fwait
dec
pusha
cs
jle
add
lcall
cmp
xor
ret
popf
push
xor
daa
inc
jg
popa
xchg
pop
enter
and
jae
mov
insb
cli
mov
mov
imul
popf
dec
into
jecxz
iret
sbb
lock
aad
out
lods
and
pop
cmp
xchg
jge
push
jnp
jge
in
dec
pusha
xchg
xchg
pop
in
jae
push
sbbb
mov
inc
imul
add
notb
mov
adc
dec
fstps
in
test
cmp
fists
popf
cmp
xchg
loopne
push
cld
jae
stos
sti
sub
jne
stos
jne
mov
pop
dec
jl
shll
je
xchg
maxps
inc
jecxz
std
sub
lcall
xchg
popf
mov
jmp
sub
ret
mov
pop
mov
mov
enter
push
cs
into
sub
shl
test
or
pop
pop
scas
mov
mov
cmpsb
lds
sub
sub
sub
or
mov
aad
fwait
stos
xchg
pop
dec
jp
mov
xor
addb
inc
xchg
dec
dec
lret
dec
aaa
or
mov
les
out
mov
fcompl
xlat
out
adc
pop
mov
dec
sahf
add
jns
add
rcll
mull
cmp
dec
or
nop
xchg
cli
cmpsb
int
lock
sti
cs
xor
ss
test
fldt
inc
jnp
add
lcall
and
push
hlt
clc
loope,pn
push
pushf
jb
cs
xor
mov
out
mov
loope
ss
jmp
sbb
or
cmp
or
imul
and
cmpsl
cmpb
add
les
push
cmp
lds
daa
add
in
sub
mov
jns
arpl
test
test
cmp
imul
xchg
bound
and
pop
inc
push
cmp
add
or
popa
mov
sbb
lcall
pushf
or
push
push
test
mov
fs
dec
pop
cwtl
mov
test
push
addr16
lret
or
sbb
push
ret
pop
scas
loopne
pop
pop
outsb
enter
xchg
cmpsb
mov
adc
subl
popf
mov
imul
push
lahf
jae
in
shrb
das
scas
inc
fwait
repz
cltd
mov
out
ja
mov
adc
xor
adc
and
iret
pop
mov
adc
mov
dec
dec
lock
movsl
fmuls
shl
sbb
outsb
out
lret
pop
cld
movsb
imul
dec
mov
loop
bound
aas
ret
stos
jecxz
test
push
sub
push
flds
xchg
adc
jno
adc
adc
or
stc
jecxz
add
test
test
jg
mov
jg
adc
add
xchg
pop
jns
stos
pushf
or
enter
out
pop
out
jle
cmp
push
pop
fucomip
push
xor
mov
cld
les
dec
or
pop
int3
pop
outsl
push
mov
mov
add
and
pusha
movsl
call
lea
out
out
or
push
inc
lahf
jp
movsb
ret
pop
fwait
xchg
mull
sub
imul
lods
in
in
push
cmp
pop
shrl
inc
addr16
add
lret
clc
add
movsb
mov
ret
pop
into
dec
push
jge
shrb
pop
cmp
dec
fstpl
lods
cwtl
ret
jmp
movsl
mov
adc
in
cmp
push
pop
cwtl
call
notl
les
mov
fcmovbe
and
xlat
mov
push
aad
js
mov
sarb
sbb
js
jmp
jecxz
jns
jg
lret
mov
sbb
mov
xlat
mov
pop
js
js
insb
std
xlat
sbb
xchg
jp
inc
pop
mov
push
shlb
popf
mov
and
sub
subb
jge
fnsave
jae
aam
mov
dec
or
nop
sub
lcall
and
pop
mov
sbb
and
cmp
in
mov
aad
add
xor
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
ret
or
das
cmp
sbb
inc
out
aam
jb
movzwl
pop
add
sub
sub
jnp
mov
mov
push
add
pop
sub
push
mov
pop
xor
mov
add
jmp
cmpsb
out
cmp
sbb
ret
movswl
sub
call
xor
cmp
push
jmp
xchg
arpl
fidivrs
js
mov
and
inc
push
pop
pop
dec
call
lcall
std
repnz
movzwl
pop
cmp
jne
mov
jge
inc
mov
repnz
mov
dec
or
aad
jmp
sub
and
xor
lods
in
lret
enter
jnp
ficoms
push
add
mov
dec
or
jmp
jg
dec
incb
movsb
mov
in
push
in
repz
lea
dec
sub
std
pusha
or
das
xchg
pop
sti
into
sbb
adc
dec
pop
fidivrl
xor
dec
lock
mov
pop
sahf
fimuls
pop
xor
mov
dec
or
mov
fpatan
xchg
scas
stos
in
fwait
pop
dec
or
fimuls
fstpt
push
scas
lcall
mov
and
fnstenv
jg
lods
cmp
add
and
sub
test
fnstenv
cli
and
mov
mov
pop
ficoms
xchg
cmp
leave
jmp
push
pop
pop
out
decb
sbb
cmpsb
adc
lea
popa
mov
aas
fcomps
push
jo
lock
ret
pop
mov
sbb
stos
and
mov
push
sbb
pop
or
icebp
aad
jo
sub
arpl
inc
xor
imul
mov
mov
mov
iret
test
test
and
das
sahf
and
xor
je
mov
jae
xchg
ret
jbe
clc
cmp
inc
sbbb
xchg
xchg
cmpsl
incl
inc
pop
mov
imul
inc
push
gs
cmp
aaa
jbe
jmp
enter
add
cmp
cmp
xor
xchg
test
loop
mov
dec
stos
fidivs
mov
dec
xor
filds
xchg
and
in
fisubl
xor
mov
fcmovbe
rcll
mov
fmulp
sub
repz
dec
loopne
jle
xor
mov
leave
stos
mov
sub
test
xor
push
sbb
rcr
add
mov
mov
jecxz
neg
add
sbbl
and
xchg
sub
and
cli
or
in
test
adc
cs
in
out
add
jb
xchg
pop
lcall
cli
adc
or
gs
xchg
mov
int
repz
mov
and
cmp
mov
rol
cmp
imul
sarb
aad
jae
jo
and
fld
je
fildll
int3
lcall
in
jo
and
fsincos
test
out
cmp
xor
nop
xchg
jmp
cltd
lcall
or
mov
xchg
out
cmpsb
in
out
pop
inc
cwtl
xchg
int3
xchg
cmpb
lahf
mov
jae
ret
adc
mov
sbb
test
and
lahf
and
clc
sbb
cmp
adc
jecxz
lahf
cmp
and
lahf
and
pop
outsb
in
lahf
lcall
or
fistpll
ret
rcl
fcmovnb
mov
in
lahf
push
dec
sub
in
add
and
loop
xchg
in
xchg
add
sbb
addr16
lcall
jl
lahf
lcall
lahf
adc
in
xchg
adc
in
push
fcmovnb
sbb
lcall
lahf
sub
sbb
pop
pushf
sbb
lcall
lahf
mov
xor
lahf
mov
in
in
push
cmpsl
les
lahf
inc
sahf
imul
in
jp
sub
jmp
push
rdmsr
sbb
and
pop
std
nop
stos
adc
mov
pop
lock
xchg
jae
inc
movsl
movsb
in
push
les
lahf
sbb
sti
lcall
out
cltd
jl
mov
lcall
mov
in
pop
xchg
add
xchg
push
fcmovnb
sbb
movsb
in
jmp
sbb
xchg
sbb
xchg
mov
sbb
cmp
cmc
sbb
cwtl
pop
movsb
in
jp
sub
stos
or
xor
pop
mov
or
xchg
or
lock
lahf
lcall
lahf
lcall
cld
sbb
add
leave
or
in
xchg
ss
xchg
mov
sbb
out
enter
sbb
xor
adc
ficompl
insl
out
enter
mov
lcall
cmpsl
pusha
sub
sbb
je
leave
pop
mov
aas
inc
mov
mov
sbb
out
enter
xchg
xchg
pop
fldenv
jp
aaa
xchg
cwtl
int
jp
movsb
in
lahf
movsb
jae
xchg
sbb
inc
mov
mov
sbb
out
enter
cltd
push
mov
in
lahf
movsb
jae
xchg
sbb
inc
mov
mov
sbb
out
enter
xor
ret
xchg
add
cmpsb
add
out
xor
inc
add
out
xchg
push
dec
les
lahf
lcall
in
je
leave
mov
jae
xchg
sbb
inc
mov
lcall
mov
pop
movsl
xor
ret
xchg
add
cmpsb
rcll
xchg
in
add
std
sbb
lock
push
push
sub
lahf
sbb
inc
rorl
mov
xchg
fisttpl
sbb
lock
push
push
sub
lahf
dec
stc
sub
adc
sbb
out
sbb
sahf
lcall
lahf
lcall
cli
xchg
sarl
and
sbb
in
pop
in
mov
xchg
lcall
fs
mov
sbb
lcall
in
lcall
ds
sbb
fcoml
jecxz
sbb
rolb
das
add
dec
inc
sbb
xor
fdivl
pop
rcrb
mov
pop
add
jmp
cmp
iret
jp
loop
jo
shr
clc
loop
loopne
adcl
mov
cmpsl
and
xchg
pop
mov
xchg
jb
or
nop
mov
int3
ss
aam
into
cld
gs
aam
xchg
scas
nop
or
lcall
lahf
lcall
lahf
lcall
lahf
lcall
arpl
cmp
sbb
lcall
mov
lcall
lahf
loop
pop
lahf
lcall
lahf
lcall
lahf
xor
test
mov
inc
add
xchg
sub
mov
int
jmp
fbld
pushf
test
mov
add
xor
loopne
fldt
mov
loop
sbb
aad
pop
je
cmp
rorb
xchg
leavew
subl
sub
sar
outsl
push
add
aaa
mov
mov
push
jo
xchg
cmpsl
dec
loopne
dec
add
or
stos
addr16
and
mov
ds
aad
and
loopne
cmp
mov
sub
cmp
sub
scas
pusha
ja
mov
xchg
nop
scas
xor
and
test
adc
dec
leave
inc
mov
mov
xchg
and
dec
inc
inc
imul
xchg
jp
lock
movsb
xor
call
jnp
jle
in
adc
outsb
pop
into
push
das
ss
mov
mov
incl
push
jle
mov
stos
ja
cmp
sti
aaa
stos
int
je
shlb
or
pop
jl
aad
jp
iret
mov
aad
std
in
call
lahf
fs
insl
or
mov
sub
xlat
cmc
je
or
sahf
addr16
sbb
jl
test
data16
repnz
add
shll
movsb
inc
sub
dec
mov
cs
xor
mov
pop
ret
call
xor
sub
push
jbe
xchg
pshufw
int3
js
pop
adc
movq
fwait
pop
xchg
ds
jo
sarb
mov
int
mov
movsb
negl
leave
imul
test
mov
mov
adc
mov
mov
cmp
cltd
cmc
out
and
adc
aaa
or
or
inc
int
and
stc
out
mov
nop
out
sub
sub
jne
lahf
sub
outsb
scas
cmp
jl
jmp
cmp
cmp
lahf
in
mov
or
inc
loope
fs
shlb
pop
enter
pop
push
push
pop
mov
cmc
push
jne
push
push
push
inc
xchg
sahf
movsb
xor
inc
sbb
gs
mov
mov
mov
and
shlb
xchg
jg
adc
insl
ret
ljmp
pop
pop
cwtl
ret
push
adc
enter
jmp
test
mov
les
cmpsb
in
movsl
loope
dec
cltd
neg
rclb
jle
addr16
cld
aad
adc
push
js
sub
jbe
in
pop
lea
adc
mov
mov
call
cmp
push
push
loopne
xchg
in
fcomp
out
outsb
mov
xchg
repnz
and
inc
add
int3
out
aad
and
scas
push
jle
add
and
add
add
add
cmp
add
cmp
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cmp
add
cmp
add
cmp
add
cmp
add
repz
add
cmp
add
add
push
add
cmp
push
add
cmp
push
add
push
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
push
add
add
add
push
add
add
add
add
add
add
addb
add
xchg
cmp
add
cmpsl
cmp
add
add
inc
gs
imul
outsl
arpl
add
push
gs
jb
popa
je
dec
gs
add
add
popa
fs
insb
popa
jae
push
je
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
sbb
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
addb
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jae
jns
and
push
add
add
outsl
add
add
add
add
push
add
and
inc
add
outsb
add
add
je
add
and
dec
add
inc
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
pop
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
jns
and
push
add
add
outsl
add
add
add
add
push
add
and
inc
add
outsb
add
add
je
add
add
cmp
or
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
push
add
add
popa
add
dec
insb
push
push
dec
jb
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
and
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jae
jns
and
push
add
add
outsl
add
add
add
add
push
add
and
inc
add
outsb
add
add
je
add
add
pop
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
jo
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jae
jns
and
push
add
add
outsl
add
add
add
add
push
add
and
inc
add
outsb
add
add
je
add
and
inc
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
xor
add
add
and
test
add
sub
add
add
add
xor
add
add
and
test
add
sub
add
add
add
xor
add
add
and
test
add
daa
add
add
add
add
xor
add
add
add
add
add
add
xor
adc
add
add
push
add
and
add
add
call
add
sbb
add
add
call
add
adc
add
add
sub
add
sbb
add
add
add
add
and
add
add
add
add
sbb
add
add
add
push
add
and
adc
add
add
or
push
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
adc
add
add
add
add
and
add
add
add
xor
add
add
add
add
add
add
add
adc
add
add
add
add
push
add
adc
add
add
add
add
pop
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
adc
adc
add
add
sbb
push
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
adc
adc
add
add
sbb
push
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
or
add
add
add
add
push
add
and
add
add
add
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
adc
add
add
add
add
add
sbb
adc
add
add
call
add
sbb
add
add
add
push
add
add
add
add
add
add
and
add
add
call
add
and
add
add
add
add
and
add
add
add
add
xor
add
add
push
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
pusha
pusha
push
popa
popa
bound
popa
popa
popa
push
popa
popa
popa
adc
bound
popa
popa
bound
popa
popa
bound
pusha
pusha
pusha
push
xchg
xchg
xchg
add
add
add
dec
dec
pop
or
or
add
add
add
inc
or
add
add
insl
syscall
add
add
add
add
je
add
add
add
add
inc
add
add
or
pop
dec
dec
dec
pop
movsl
movsl
movsl
add
add
add
add
add
push
add
add
sbb
add
push
sub
lahf
mov
lret
lods
push
sub
ret
push
repz
sti
fadds
pop
call
jle
std
lret
clc
mov
dec
and
jb
sbb
aaa
sbb
add
add
add
push
add
add
add
insl
insl
add
add
adc
add
adc
jnp
ficoms
jmp
lods
in
enter
enter
lret
in
lret
in
leave
mov
in
mov
jmp
mov
pusha
inc
push
testl
add
imul
add
adc
jae
sbb
sbb
push
add
xor
sbb
fisttpl
cltd
ljmp
std
in
lret
mov
in
int3
mov
out
int3
mov
std
out
int3
mov
in
lret
mov
in
leave
mov
jmp
mov
jmp
mov
dec
cld
xchg
dec
and
cs
add
add
sub
add
add
or
push
inc
pop
push
imul
jmpw
mov
ljmp
std
in
enter
leave
mov
in
leave
mov
in
leave
mov
in
enter
mov
in
mov
in
mov
in
mov
in
enter
enter
leave
mov
in
leave
mov
in
leave
mov
in
mov
jmp
mov
ljmp
dec
jae
sti
jge
sbb
push
add
addb
add
push
or
push
mov
stos
aad
dec
jecxz
xchg
jmp
ret
scas
jmp
mov
jmp
mov
jmp
mov
jmp
mov
lahf
jmp
lods
xchg
jecxz
mov
loope
mov
loope
mov
loop
mov
jecxz
jmp
mov
call
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ljmp
ficoms
xor
xor
or
add
add
mov
add
push
or
sub
mov
mov
jmp
shrb
jmp
mov
xchg
ljmp
pop
cmp
xchg
notl
insl
dec
aam
andb
mov
into
mov
into
sbbb
dec
out
ja
not
mov
loope
mov
out
mov
ljmp
std
jmp
mov
xchg
leave
outsb
aas
clc
dec
and
mov
add
arpl
add
sbb
adc
pop
sub
jmp
mov
call
mov
movsl
out
mov
roll
daa
std
sbb
sbb
adc
sub
mov
scas
mov
ret
adc
enter
ret
adc
lods
rcrl
push
fcom
jae
fstpl
lahf
call
mov
cmpsb
std
out
mov
shlb
std
push
daa
adc
add
add
sbb
adc
mov
xchg
outsl
jmp
mov
std
out
lahf
jmp
mov
sahf
jmp
mov
out
insb
mov
and
aad
std
test
mov
push
je
xor
mov
sub
dec
inc
inc
mov
mov
mov
adc
mov
enter
test
iret
shlb
cld
loopne
cmp
mov
jmp
mov
jmp
mov
std
out
popf
jmp
stos
nop
call
je
std
dec
and
mov
add
pop
push
push
or
add
dec
and
jecxz
xchg
jmp
mov
std
in
cltd
jmp
mov
jmp
cmpsb
mov
iret
je
cld
mov
scas
scas
mov
shll
mov
nop
std
mov
xchg
decl
fmuls
pushl
roll
sahf
sbb
sub
xlat
push
dec
dec
mov
mov
cmpsl
mov
mov
lds
vmovdqu
vmovdqa
test
inc
in
fimull
xchg
jmp
mov
std
in
cltd
jmp
mov
jmp
mov
cmp
mov
sbb
add
add
adc
loope
mov
jecxz
xchg
jmp
scas
xchg
std
jecxz
xchg
ficomps
cmp
scas
xorl
mov
mov
jl
test
xchg
std
mov
xchg
decl
ficoml
incl
iret
jno
sub
sbb
sub
dec
dec
mov
jp
popf
mov
ret
fadd
jg
mov
aad
mov
fcom
sbbl
stos
mov
jecxz
xchg
jmp
scas
xchg
jmp
lods
nop
std
fstpl
cs
push
add
addb
add
jbe
jae
sub
cmp
fstpl
mov
loop
mov
loope
mov
ficomps
cmp
cmpsl
test
rol
roll
mov
xor
jp
cmp
xlat
mov
sbb
std
sbb
std
sbb
incb
xlat
mov
jg
xchg
jnp
cmp
int
and
xchg
sbb
cs
das
rcll
mov
jl
pushf
mov
ret
vmovd
ret
les
aam
push
jmp
movsl
xchg
loop
mov
loop
mov
loopne
xchg
flds
sbb
add
add
lods
push
daa
mov
mov
fbld
test
loopne
test
fstpl
sti
mov
mov
les
vmovdqu
mov
jl
jp
cmp
test
jl
test
jl
test
jl
test
jl
test
jnp
cmp
aad
pushl
cmp
sarl
push
leave
pop
jmp
mov
push
out
xor
xor
pop
push
push
mov
addb
aam
ret
adc
les
xlat
xchg
fbld
xchg
loopne
test
ficomps
ds
cs
or
insl
insl
insl
add
add
add
sbb
shll
fcompl
jle
ficomps
jp
sarl
lcall
mov
xchg
vmovdqa
les
lds
mov
xor
insb
shlb
jae
jl
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
jae
jl
jb
jnp
outsl
sarl
imul
push
pop
mov
adc
dec
xor
scas
xchg
mov
test
mov
inc
in
fimull
jge
fistps
jge
and
imul
add
add
add
add
push
and
fcoml
js
fcompl
pop
pushl
lcall
xlat
aad
ret
jle
vmovdqu
mov
outsb
ljmp
je
push
jne
push
jne
push
jne
push
jne
push
jne
push
jne
push
jne
push
jne
imul
std
imul
ljmp
jae
push
into
insb
incl
dec
call
andb
cmp
lret
pusha
push
pop
scas
cwtl
mov
iret
outsl
ds
fistl
ja
fstpl
jno
iret
jo
cld
cs
or
movsl
movsl
movsl
add
add
add
add
add
push
and
fsts
jo
fistl
dec
imul
outsl
gs
mov
lds
aad
ret
jle
vmovdqu
mov
jmp
insl
std
fs
insb
jmp
jmp
insb
std
fs
insb
jmp
jmp
insb
std
fs
insb
jmp
jmp
insb
std
fs
insb
jmp
insl
jmp
insl
std
popa
int
lcall
imul
cmp
inc
adc
and
ds
cmp
pop
pop
lods
mov
jge
fistl
jno
ficoml
push
incl
add
push
dec
dec
dec
pop
xchg
je
js
push
push
movsl
pop
cmp
mov
vmovdqa
ret
ret
jle
ret
ret
jle
les
lds
mov
sub
push
leave
pusha
std
pop
lret
gs
pop
lret
pop
lret
pop
lret
pop
lret
pop
lret
pop
lret
pop
lret
pop
lret
pop
lret
pop
lret
pop
lret
pop
lret
pop
lret
data16
pop
lret
gs
pop
lret
fs
push
leave
decb
pop
xor
aas
decb
scas
sbb
in
inc
ss
mov
std
mov
mov
popa
inc
fs
add
add
or
pop
mov
daa
ret
aam
push
fmuls
arpl
xlat
mov
into
insl
cmp
andb
les
lds
xlat
aad
ret
jle
vmovdqu
mov
pop
call
pop
std
push
leave
pop
call
pop
call
pop
std
push
leave
pop
call
pop
call
pop
std
push
leave
pop
call
pop
call
pop
std
push
leave
pop
call
pop
call
pop
std
push
leave
pop
call
pop
call
pop
call
pop
std
push
enter
pop
decl
push
sub
push
sti
sub
push
cli
fs
sub
nop
pop
inc
mov
test
aad
inc
cmp
sub
add
add
xor
aad
push
test
test
aam
push
mov
xor
test
mov
xlat
xlat
xlat
aad
ret
jle
vmovdqu
mov
incl
push
decl
push
std
dec
push
decl
push
decl
push
std
dec
push
decl
push
decl
push
std
dec
push
decl
push
decl
push
std
dec
push
decl
push
decl
push
std
dec
push
decl
push
decl
push
decl
push
std
dec
push
decl
push
decl
push
std
inc
lds
ds
and
pushl
insb
and
imul
xchg
pop
aas
mov
cmp
movl
xchg
xchg
add
cmp
aam
push
aad
push
std
aam
push
std
shlb
xchg
pop
cmp
pushf
xchg
xchg
xchg
les
ret
ret
jle
ret
ret
jle
ret
ret
jle
les
lds
mov
and
aas
ret
inc
ret
dec
incb
dec
std
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
inc
ret
dec
std
inc
ret
dec
std
ds
xor
mov
sbb
cmp
pop
std
jo
sub
insl
xor
jecxz
add
pop
arpl
pop
fistpl
notrack
jnp
std
sarb
sarl
call
outsl
aas
jle
inc
int3
mov
cmpsb
mov
vmovd
xlat
xlat
aad
ret
jle
vmovdqu
mov
pushl
rolb
roll
roll
roll
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
roll
roll
roll
roll
roll
roll
roll
roll
roll
rolb
rolb
cmp
call
ds
add
add
fstpl
notrack
ja
std
sarb
call
ja
call
imul
addr16
dec
mov
les
xlat
xlat
aad
ret
jle
vmovdqu
mov
ljmp
mov
aas
std
xor
inc
pushl
inc
std
cmp
inc
incl
dec
decl
push
std
dec
push
decl
push
decl
push
std
inc
lds
aas
ret
cmp
inc
std
xor
aas
pushl
mov
aas
std
xor
inc
pushl
mov
inc
pushl
mov
inc
std
xor
aas
pushl
mov
cmp
and
sbb
add
push
lret
add
mov
cmp
dec
je
std
shlb
std
shrb
lcall
dec
mov
mov
xchg
les
ret
ret
jle
ret
ret
jle
ret
ret
jle
les
lds
mov
sbb
sub
incb
dec
std
dec
push
std
dec
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
pop
std
inc
lds
cmp
dec
std
das
mov
aaa
std
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
std
pop
mov
push
repnz
je
mov
cmp
iret
jo
std
iret
jo
dec
outsl
inc
dec
push
dec
mov
mov
xchg
les
xlat
xlat
aad
ret
jle
vmovdqu
mov
pop
call
pop
std
push
leave
pop
call
pop
call
pop
std
push
leave
pop
call
pop
call
pop
std
push
leave
pop
call
pop
call
pop
std
push
leave
pop
call
pop
call
pop
std
push
leave
pop
call
pop
call
pop
call
pop
std
dec
push
rorl
mov
xor
jmp
mov
xor
and
xor
and
xor
and
das
decb
mov
sti
add
add
mov
aaa
dec
insl
cmp
into
insl
cmp
into
insb
cmp
iret
addr16
pop
push
dec
mov
les
xlat
xlat
aad
ret
jle
vmovdqu
mov
popa
call
std
push
lret
push
lret
push
enter
lret
push
lret
push
enter
lret
push
lret
push
enter
lret
push
lret
push
enter
lret
push
lret
push
lret
push
enter
lret
push
lret
push
leave
popa
std
push
enter
lds
cmp
mov
aas
ljmp
cmp
sub
cmp
sub
mov
pop
out
add
add
orl
int3
push
xor
lcall
inc
mov
xlat
vmovd
ret
ret
jle
ret
ret
jle
ret
ret
jle
les
lds
mov
xor
pop
lret
gs
pop
lret
arpl
pop
lret
pop
lret
pop
lret
arpl
pop
lret
pop
lret
pop
lret
arpl
pop
lret
pop
lret
pop
lret
arpl
pop
lret
pop
lret
pop
lret
arpl
pop
lret
pop
lret
pop
lret
pop
lret
arpl
pop
lret
pop
lret
pop
lret
arpl
pop
lret
fs
pop
lret
fs
pop
lret
fs
pop
lret
fs
pop
lret
gs
pop
lret
gs
pop
lret
data16
push
lret
sbb
or
ficomps
dec
fmuls
jno
ficomps
push
arpl
int
xchg
xchg
xchg
les
xlat
xlat
aad
ret
jle
vmovdqu
mov
push
pop
int
std
pop
int
lcall
push
pop
int
std
pop
int
lcall
push
pop
int
std
pop
int
lcall
push
pop
int
std
pop
int
lcall
push
pop
int
std
pop
int
lcall
push
pop
int
lcall
push
pop
int
lcall
push
pop
int
std
pop
int
lcall
push
pop
int
std
pop
int
jmp
imul
int3
push
lcall
test
and
pop
bound
push
fstpl
pop
jmp
test
std
loope
mov
loope
mov
fimull
xor
xorb
rol
roll
xlat
aad
ret
jle
vmovdqu
mov
jo
fs
std
fs
outsb
jmp
jmp
std
fs
outsb
jmp
jmp
std
fs
outsb
jmp
jmp
std
fs
outsb
jmp
jmp
std
fs
outsb
jmp
jmp
jmp
std
fs
outsb
jmp
jmp
std
fs
outsb
jmp
jmp
jo
arpl
outsb
aas
les
sbb
and
mov
push
sub
add
add
xchg
xchg
add
int
and
loop
nop
loope
mov
loop
mov
loope
cmp
popa
pop
pop
scas
mov
test
les
ret
ret
jle
ret
ret
jle
les
lds
mov
aaa
ljmp
ja
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insb
shll
insl
shll
outsb
sarl
jno
jp
dec
push
push
mov
std
push
mov
std
mov
cs
arpl
std
into
addr16
mov
add
add
add
add
in
add
loop
in
xchg
jmp
scas
xchg
jmp
scas
xchg
dec
insb
ds
push
inc
inc
ret
movsb
xchg
xchg
xchg
fadd
lds
xlat
aad
ret
jle
vmovdqu
mov
cmp
ja
jg
ja
jg
jne
jg
ja
jg
ja
jg
jne
jg
ja
jg
ja
jg
jne
jg
ja
jg
ja
jg
jne
jg
ja
jg
ja
jg
ja
jg
jne
jg
ja
jg
js
cmp
aam
push
leave
pop
call
mov
sti
inc
xchg
and
dec
arpl
dec
fs
int3
xor
iret
addr16
push
sub
pop
sarl
pushf
ficomps
jmp
mov
jmp
mov
std
fimull
fnsave
imul
vmovdqa
aad
ret
jle
vmovdqu
mov
mov
jg
xchg
jle
xchg
jle
xchg
jg
xchg
jle
xchg
jle
xchg
jg
xchg
jle
xchg
jle
xchg
jg
xchg
jle
xchg
jle
xchg
jg
xchg
jle
xchg
jle
xchg
jle
xchg
adc
std
jg
xchg
pusha
into
push
and
inc
cltd
stos
mov
int3
fs
int3
xor
lret
std
int3
xor
shrb
lcall
dec
pop
in
xchg
inc
aad
push
jmp
mov
jmp
mov
jmp
mov
std
in
xchg
pushl
inc
inc
mov
xlat
les
aad
ret
jle
vmovdqu
rolb
ficoml
std
mov
nop
decl
ficoml
decl
ficoml
decl
ficoml
decl
ficoml
decl
fistl
and
xor
sub
mov
pushf
aam
les
jp
lret
arpl
dec
gs
lret
gs
lret
std
int3
gs
mov
sub
add
add
movsl
movsl
movsl
add
add
add
add
add
lock
lret
aad
mov
out
mov
out
movsb
std
fisttpl
fbld
pop
stos
ret
xchg
vmovdqa
les
lds
mov
inc
call
fistl
std
nop
fistl
nop
fistl
std
nop
fistl
std
nop
fistl
nop
fistl
std
xchg
fcompl
jne
jle
sub
cmp
sub
xor
xchg
mov
lahf
xlat
mov
jg
scas
stos
lds
lock
gs
shlb
std
aad
pop
std
fcompl
push
call
adc
add
add
mov
fsts
test
out
movsl
std
jmp
mov
aas
cld
dec
aas
cmp
cmpb
int
mov
jle
vmovdqu
ret
sahf
fbld
std
fbld
lcall
fbld
lcall
fbld
lcall
fbld
incl
rolb
scas
xor
lea
rolb
vmovdqa
mov
pop
into
fmuls
lcall
mov
sahf
mov
add
insb
add
add
add
or
xor
out
mov
std
ljmp
jmp
test
das
lock
inc
inc
mov
rol
rolb
mov
dec
jmp
loop
std
mov
loop
jmp
loop
jmp
loop
std
mov
loop
jmp
fstpl
lcall
scas
sub
subb
sbb
jg
les
vmovdqa
rol
scas
xorl
jp
cld
jmp
mov
test
ficoms
sbb
ficoml
pusha
ljmp
std
jmp
scas
std
jmp
mov
loopne
jp
lcall
mov
into
mov
cmpsb
lea
ret
scas
in
std
stos
jecxz
stos
jecxz
std
stos
jecxz
std
stos
jecxz
stos
jecxz
std
stos
jecxz
std
stos
in
scas
in
std
lcall
lcall
lods
daa
ljmp
mov
jg
les
les
vmovdqa
mov
js
into
jno
cld
jmp
ret
ljmp
std
out
sahf
mov
loope,pn
add
xor
add
add
out
add
outsl
aas
mov
stos
mov
in
enter
mov
in
mov
jmp
mov
ficomps
xor
dec
inc
inc
mov
mov
cmpsb
mov
mov
mov
std
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lret
pusha
jmp
mov
out
insb
scas
push
leave
mov
jg
les
xlat
vmovdqa
les
mov
xchg
outsl
inc
clc
call
mov
in
mov
jmp
mov
jmp
mov
xlat
adcb
pop
push
imul
sbb
ljmp
in
ret
in
lret
in
lret
in
lret
in
lret
loop
cmp
push
das
lock
ds
push
arpl
scas
in
mov
jmp
mov
std
mov
iret
outsl
call
mov
clc
data16
gs
fld
jle
vmovdqa
les
vmovdqa
mov
fwait
popf
push
dec
sti
jmp
leave
mov
in
leave
mov
in
int3
mov
decl
or
push
loope
test
shlb
stc
in
enter
int
out
int
std
out
int
std
out
iret
mov
dec
outsl
inc
cld
jp
xor
sub
fisttpll
pop
mov
in
leave
lods
out
imul
es
pop
scas
pop
rol
mov
fcmovb
jle
vmovd
vmovd
les
rol
les
nop
mov
mov
pop
cmp
fmull
mov
out
int3
mov
out
int3
mov
std
jecxz
mov
mov
add
sbb
sarl
pop
aam
push
imul
lret
mov
out
rol
out
rol
out
rol
std
in
leave
mov
ficoms
aaa
testl
cs
sub
movsb
sub
aas
popl
sahf
pushf
xchg
xchg
shrb
xchg
mov
xchg
movsl
cmpsb
mov
ja
andb
movsb
pop
cmp
into
js
cld
out
cltd
out
rol
std
out
iret
mov
out
iret
mov
jmp
scas
xchg
pushl
or
sub
add
add
jle
pop
shll
stc
in
lret
lock
push
rol
push
rol
std
lock
push
aam
std
in
mov
loope
jl
shll
pop
sub
jg
xor
gs
cmp
mov
pop
push
dec
mov
push
dec
mov
push
dec
mov
cwtl
push
ss
popa
xor
out
fwait
out
rol
push
rol
out
rol
std
lock
push
rol
push
rol
in
mov
mov
rclb
add
add
movsb
test
int3
push
in
mov
push
xlat
leave
icebp
aad
icebp
aam
std
icebp
aad
icebp
aad
std
icebp
leave
std
icebp
xlat
leave
in
mov
in
fstl
pop
fiaddl
pop
flds
arpl
loopne
jp
call
rol
lock
lret
enter
std
out
aad
std
lock
lock
leave
std
out
rol
fmull
and
ljmp
mov
int
icebp
fcmove
push
fmul
std
repnz
push
fmul
push
lret
xlat
lret
fmul
push
fxch
std
icebp
fxch
push
fxch
push
fxch
std
icebp
fxch
push
fxch
push
fmul
std
icebp
fmul
push
xlat
lret
xlat
lret
xlat
lret
xlat
lret
fmul
push
xlat
lret
mov
call
jne
lock
adc
sbb
add
add
out
add
xchg
imul
ss
lahf
cmp
rol
repnz
push
fcmovne
push
fcmove
std
icebp
fcmove
push
fcmove
push
fcmove
std
repnz
push
fmul
push
fmul
std
repnz
push
fmul
push
fmul
std
repnz
push
fxch
push
fxch
std
repnz
push
ljmp
lods
push
es
or
add
repz
or
mov
leave
bound
call
enter
aam
repz
std
repz
repz
std
repz
std
repz
repz
std
repz
std
repz
repz
repz
out
int
jmp
test
call
js
hlt
cmpsl
dec
and
stc
out
jmp
in
xchg
inc
sarb
pushf
into
outsb
ds
sbbl
lahf
jg
in
fwait
ljmp
out
int
in
mov
call
lods
xchg
fistl
dec
out
mov
sub
xchg
je
fs
and
mul
faddl
fstpl
jle
fstpl
jge
fstpl
jge
fcompl
jge
stos
test
mov
add
add
jmp
pop
incl
add
incb
add
add
clc
add
pop
incl
add
lock
pop
incl
add
rolb
add
add
incl
add
incl
add
add
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
pop
add
lock
add
sldt
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
loopne
add
add
add
lock
add
pop
add
clc
add
add
aas
add
cld
add
add
jg
add
add
add
incl
add
add
add
incl
add
addb
add
add
inc
add
ud0
add
lock
aas
incl
add
cld
add
jg
add
incl
add
add
add
add
add
add
add
and
add
add
andb
add
add
pop
add
bound
add
bound
bound
add
bound
bound
add
bound
bound
add
bound
bound
add
bound
fs
push
push
push
adc
or
add
add
add
add
add
dec
add
add
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
inc
add
add
add
dec
add
add
add
add
dec
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
or
dec
dec
dec
ret
pop
push
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jns
adc
mov
sub
lcall
inc
mov
dec
dec
mov
push
push
mov
push
push
push
mov
dec
dec
dec
mov
cmp
sub
xchg
add
add
add
add
add
bound
add
dec
add
add
add
add
add
add
jle
jle
push
push
push
outsl
test
mov
xchg
call
xchg
xchg
decl
and
test
add
popa
add
add
add
add
add
add
add
inc
or
or
cs
sarb
fldenv
mov
call
rcl
fcomp
fcos
fstp
loop
loope
in
in
out
out
out
out
in
in
loope
loope
fstp
fcomp
fdivr
rcl
sar
mov
cli
stos
stos
lods
out
test
pop
enter
mov
push
push
xchg
add
add
add
pusha
add
add
add
add
add
add
pop
pop
pop
and
jmp
lock
call
aam
std
xchg
nop
std
xchg
xchg
xchg
lcall
xchg
xchg
add
add
add
cmp
sub
lea
push
cwtl
xchg
xchg
rep
stos
test
pushl
mov
ret
lret
rcl
sar
aad
std
loopne
loopne
in
in
out
out
out
out
jecxz
jecxz
fcmovu
aad
aam
int
into
std
enter
ret
mov
mov
pushl
popf
popf
cmc
je
jae
xor
xor
add
add
add
add
cmp
cmp
lods
lods
lods
data16
cld
cld
fstp
fdivr
aam
aam
sti
sti
sti
mov
cwtl
xchg
std
popf
fwait
pushf
mov
pusha
pusha
into
add
bound
cltd
cwtl
xchg
cld
lahf
sahf
popf
movsb
mov
test
scas
scas
scas
mov
mov
mov
ret
lret
std
rcl
sar
xlat
fcom
fdivr
loopne
loopne
in
in
out
out
out
in
jecxz
in
fcmovu
aad
iret
iret
into
inc
enter
sar
mov
mov
scas
scas
lods
test
mov
sahf
ja
je
push
push
push
mov
cmp
cmp
add
add
rol
jmp
fwait
lcall
cmpsl
cmpsl
icebp
icebp
icebp
std
cmpsb
cmpsb
movsl
mov
movsb
mov
stc
dec
dec
dec
lock
insl
insb
xchg
xchg
xchg
lcall
mov
cmpsb
ljmp
mov
mov
iret
int
fstp
fdivrp
in
in
out
call
std
ljmp
call
out
fnstsw
loopne
xlat
aad
into
into
int
leave
leave
leave
mov
mov
std
mov
mov
lods
lods
stos
jmp
mov
fwait
lcall
test
cmp
cmp
aam
aam
mov
sahf
jmp
test
call
rcl
std
movsl
movsl
movsb
std
stos
stos
stos
ljmp
jge
call
push
std
mov
cwtl
std
movsl
movsb
mov
std
int
into
fcmovu
fdivr
xlat
lret
sarl
int3
lods
mov
std
int3
test
std
lret
std
lret
dec
lahf
dec
popf
mov
lret
lahf
mov
int3
movsb
xchg
dec
stos
popf
dec
scas
movsb
aad
mov
fcmovu
fdivr
into
into
into
cld
mov
cmpsl
movsl
sahf
pushf
fwait
std
cltd
cwtl
xchg
call
xchg
xchg
lcall
push
pop
cwtl
cmp
cmp
ljmp
int3
mov
cmpsl
cmpsb
std
movsl
movsl
movsb
incb
mov
loopne
mov
mov
mov
scas
std
mov
mov
scas
lods
lods
std
dec
dec
inc
decb
ljmp
std
mov
addr16
std
cmpsb
arpl
test
inc
mov
dec
std
mov
xchg
lret
xchg
jg
rcrb
xchg
aad
xchg
std
shll
mov
lret
xchg
jg
les
pop
std
mov
inc
stos
pop
cmp
movsb
gs
std
stos
outsl
pop
mov
mov
fstp
fdivrp
mov
mov
xchg
xchg
xchg
xchg
lcall
push
push
xchg
cmp
cmp
out
out
out
add
into
mov
mov
lods
lods
stos
ljmp
xchg
mov
mov
rcl
sar
mov
mov
mov
mov
xchg
mov
xchg
cmp
dec
sub
ljmp
push
xor
mov
cmp
mov
jp
dec
mov
rcrb
fdivl
stos
std
loopne
scas
fistpll
std
xlat
stos
xchg
call
pushf
test
enter
mov
imul
pop
cmp
stos
push
das
std
cmpsl
dec
daa
lcall
insl
pop
std
lret
movsb
xchg
push
in
call
std
movsl
movsb
mov
xchg
cmp
cmp
icebp
icebp
icebp
add
fcmovnu
into
mov
mov
mov
mov
mov
mov
test
test
lea
mov
mov
sar
stos
stos
std
push
inc
and
mov
xor
mov
cmp
mov
cmp
mov
ja
std
lds
jge
test
std
fnsave
mov
in
mov
jmp
mov
std
fdivl
xchg
dec
xchg
jl
les
mov
arpl
std
mov
cmp
mov
ljmp
dec
es
mov
clc
idiv
in
in
in
daa
daa
daa
mov
cmp
adc
add
add
add
add
out
out
add
lret
mov
pushl
xchg
incl
lret
lret
mov
std
gs
sub
mov
jo
inc
je
std
lds
std
jge
std
lret
rclb
xchg
fdivl
lods
jmp
mov
std
out
sar
int3
mov
std
fistpll
std
aad
test
into
jb
lret
inc
jge
std
lds
inc
je
std
shrl
mov
pop
ljmp
mov
stc
sti
sti
ljmp
cs
cmp
cmp
add
add
fcmovnu
mov
mov
mov
mov
test
test
cwtl
xchg
cwtl
lret
std
into
int
std
rcl
sar
mov
std
jg
sub
mov
jne
std
lds
inc
jp
std
lret
sbbb
mov
stos
xchg
imul
lods
mov
mov
int
std
aam
mov
std
ljmp
mov
mov
std
cmpsl
movsb
js
xlat
cltd
jnp
rorb
std
leave
jge
inc
jp
std
ret
jbe
std
shrb
mov
pop
cmp
xlat
mov
test
or
add
add
fcmovu
lcall
ret
vpaddb
xchg
incl
fcmovu
rcl
iret
std
rcl
sar
aad
aad
scas
cmpsl
mov
std
lds
dec
jge
inc
jns
inc
jnp
dec
sbbb
xchg
pop
movsl
dec
incl
leave
mov
lods
aam
mov
shll
dec
sarb
std
stos
rcrl
jnp
imul
xchg
pop
std
rorl
pop
dec
jl
std
jp
dec
jge
dec
sbbl
mov
pop
inc
xchg
or
add
xchg
lret
inc
mov
lret
lret
lret
xchg
xchg
xchg
cli
test
test
addb
cld
fcom
xlat
fcom
std
fsin
iret
int3
lret
std
pusha
xor
jmp
popa
cmp
sarb
rolb
rorl
inc
je
pop
decb
lret
scas
aam
mov
shll
mov
fwait
leave
mov
xchg
dec
inc
mov
rorl
popa
rolb
in
lret
jno
ffree
pop
xor
mov
cmp
je
add
add
in
in
data16
sar
lret
lret
rcl
sar
movsb
movsb
movsb
sti
addl
test
mov
std
fcmovnu
fdivrp
fnstsw
loopne
outsl
dec
aas
in
fwait
dec
and
lret
xor
into
insb
cmp
test
lahf
cmp
jb
pop
cmc
xchg
jae
popf
lret
mov
mov
mov
std
cld
repnz
lret
cli
leave
sarb
std
lods
aam
cld
lcall
cli
imul
out
sarb
xlat
int3
push
lret
addr16
lret
xor
les
lret
and
popf
dec
daa
jne
add
add
lock
rcl
dec
int
call
aad
pushl
cmp
xchg
std
mov
jmp
fnstsw
jmp
loop
std
jecxz
in
mov
xacquire
sbb
leave
gs
int3
xor
dec
jns
out
xchg
xor
mov
repnz
mov
fwait
divb
mov
repz
leave
ljmp
test
mov
fwait
repnz
movsb
addr16
xchg
inc
out
inc
mov
mov
push
xor
leave
arpl
rol
sub
mov
ja
jne
add
add
cld
cld
adc
fcomp
in
into
into
into
std
lret
jg
jg
test
test
addb
std
loope
loope
in
in
in
out
stos
mov
pop
xlat
ret
bound
ror
xor
mov
xor
push
jb
in
mov
outsb
xchg
dec
in
aad
jg
loope
fsub
lds
out
aam
jmp
icebp
aam
call
in
ret
mov
jmp
sahf
jno
pop
mov
sub
fcmove
push
xor
lret
mov
les
lret
and
leave
jne
jne
add
add
fstp
ret
ror
iret
call
xlat
fcmovnu
addb
test
cmp
loop
loop
loop
loop
loop
jecxz
iret
int3
lret
cld
pusha
sub
fdivrl
addr16
jbe
and
inc
sahf
sub
pop
test
dec
lock
lahf
jp
fdivl
loope
iret
mov
call
icebp
aad
ljmp
scas
loope
mov
fbstp
repnz
push
in
push
test
and
shrl
ror
xor
leave
arpl
rol
sub
mov
jne
jne
add
add
in
rcl
sar
aad
aad
nop
xchg
nop
incl
test
test
loopne
fdivrp
popa
xor
loopne
pop
sub
shlb
mov
dec
mov
cmp
insl
mov
in
jns
repnz
mov
in
in
lds
out
aad
jmp
icebp
aad
ljmp
mov
popf
mov
lock
imul
mov
in
pop
test
ljmp
aaa
ror
xor
leave
arpl
rol
sub
mov
jne
jne
add
add
jmp
pop
rcl
sar
aam
sar
fdivr
test
test
incb
popf
std
fsin
fcmovu
fcmovu
jno
cmp
movsb
push
daa
enter
mov
inc
popf
sub
pop
test
ljmp
push
loopne
lds
out
aad
jmp
out
aam
call
lret
shlb
cmpl
cmp
jae
sub
iret
push
xor
lret
mov
les
lret
and
leave
jne
jne
add
add
repz
rcl
sar
fcomp
mov
addl
test
xchg
std
aam
aad
aad
sar
aad
xlat
jg
push
in
cltd
dec
and
int
xor
fwait
push
into
xor
cmp
popa
lods
dec
lock
mov
sahf
fucomi
lds
out
aad
jmp
icebp
aad
ljmp
popf
lock
xor
mov
push
in
dec
xchg
xor
lds
int
ss
xor
leave
arpl
rol
sub
mov
jne
jne
add
add
fcmovu
out
into
into
into
call
rcl
dec
iret
into
cld
mov
test
test
mov
xlat
xlat
xlat
cld
int
int3
dec
iret
iret
call
iret
sar
mov
lock
inc
and
lret
xor
test
das
lret
lahf
jb
shlb
mov
mov
call
lock
mov
jmp
icebp
aad
jmp
in
ret
mov
leave
mov
jecxz
test
dec
lock
shll
ret
ss
xor
leave
arpl
rol
sub
mov
jne
jne
add
add
fcmovnu
mov
int
dec
into
into
rcl
sar
xchg
xchg
xchg
cli
test
test
xchg
aad
mov
enter
leave
xchg
cmpb
inc
pop
iret
leave
gs
into
imul
ret
push
cmpsl
mov
jle
lock
enter
cltd
cmc
in
into
mov
call
xlat
sarb
mov
mov
call
xchg
mov
int3
jnp
enter
ret
ss
xor
lret
mov
les
lret
and
leave
jne
jne
add
add
out
gs
sar
mov
int3
scas
scas
scas
std
addb
incl
inc
rol
ret
ret
ret
ret
cwtl
mov
enter
int
cmp
shlb
ret
cmp
icebp
test
outsb
out
lcall
cmc
int3
scas
repz
call
mov
fldt
cmc
lea
jl
fimull
push
into
jo
ret
ss
xor
leave
arpl
rol
sub
mov
jne
jne
add
add
in
pop
fcmovnu
fucomi
ret
inc
sarl
cld
test
test
aad
aad
mov
mov
mov
cmc
xchg
ror
gs
int
cmp
shlb
ret
push
enter
out
test
mov
scas
aad
cmc
mov
lods
neg
sarb
out
mov
fldt
cmc
xchg
enter
mov
lretw
sarb
into
jo
ret
ss
xor
leave
arpl
rol
sub
mov
jne
jne
add
add
fcmovu
mov
mov
rol
xchg
xchg
xchg
sti
test
test
xlat
xlat
xlat
mov
mov
mov
mov
mov
mov
xchg
mov
leave
gs
int
cmp
into
jno
ret
push
stos
mov
jns
imul
scas
aad
cmc
mov
aam
test
mov
ret
idivl
aam
hlt
mov
pop
repnz
mov
sarl
into
jo
ret
ss
xor
lret
mov
les
lret
and
leave
jne
jne
add
add
loopne
dec
xlat
cld
mov
mov
mov
lods
lods
cld
addb
fcmovnu
scas
lods
lods
cld
scas
scas
lods
pushl
cmpb
and
lret
ror
cmp
shlb
ret
push
fstl
push
xchg
lret
scas
aam
cmc
mov
lods
clc
rcl
test
mov
idivb
rcrb
jmp
iret
mov
sarl
into
jo
ret
ss
xor
leave
arpl
rol
sub
mov
jne
jne
add
add
in
adc
loope
fidivrl
mov
pushl
mov
mov
in
stos
stos
test
ljmp
jns
repnz
mov
shlb
ret
push
fimull
jg
test
ret
popf
repnz
aam
stc
rcr
stc
mov
shrb
repnz
cltd
mov
gs
sarb
into
jo
ret
ss
xor
leave
arpl
rol
sub
mov
jne
jne
add
add
jno
ljmp
lods
mov
xchg
xchg
in
in
in
mov
mov
mov
in
stos
push
sub
int3
addr16
int
cmp
into
jno
ret
push
adc
mov
fucomi
les
out
rol
jmp
out
rol
jmp
in
ret
mov
in
lcall
mov
sarl
iret
jno
ret
ss
xor
lret
mov
les
lret
and
leave
jne
jne
add
add
in
or
in
int3
int3
jmp
mov
sar
ljmp
popf
pushf
fwait
lcall
inc
jecxz
pop
das
ret
xor
into
push
ror
inc
ret
sarl
enter
into
xlat
lcall
fnsave
mov
ffreep
mov
ffreep
mov
ljmp
mov
fst
xchg
jns
roll
dec
enter
ret
int
aaa
ror
xor
int3
xor
les
lret
and
leave
jne
jne
add
add
rcl
pop
repz
xlat
inc
ret
div
idiv
rcl
sar
xchg
xchg
xchg
std
cwtl
xchg
xchg
call
push
sub
ret
mov
push
sub
popf
push
sub
pusha
dec
out
push
in
mov
icebp
mov
repnz
cmc
mov
testb
insb
hlt
xchg
icebp
test
in
sbbb
push
cmp
test
fisttpl
dec
daa
into
lods
push
sub
mov
pusha
cs
les
lret
mov
jbe
jne
add
add
div
add
fcomp
lahf
std
std
std
pushl
xchg
xchg
call
insb
push
jmp
jle
sbb
jae
sub
jl
dec
in
lea
repz
xchg
mov
mov
cmpsb
sti
mov
ror
iret
fsin
loopne
loopne
jecxz
in
loop
jecxz
fstp
aad
aam
int3
lret
sarl
sti
mov
jge
cmc
jns
dec
out
push
sub
imul
fiadds
inc
and
mov
pop
fbstp
add
add
out
out
or
iret
iret
xchg
in
in
in
fsub
loope
test
dec
xor
fs
cmp
out
inc
cs
subl
cld
lods
lods
lods
mov
mov
mov
rol
mov
dec
int3
int3
rcl
sar
fcomp
xlat
std
fstp
fdivr
loopne
loope
in
in
jecxz
jecxz
loopne
loopne
xlat
xlat
rcl
sar
lret
int3
int3
inc
mov
rol
mov
mov
mov
jae
imull
ss
sub
out
bound
xor
add
add
stc
stc
add
cli
cli
pop
es
bound
xchg
xchg
mov
movsl
movsb
ljmp
mov
mov
sarb
int3
int3
int3
call
rcl
std
xlat
xlat
xlat
fdivr
loopne
loopne
loop
loop
loop
loop
fcmovnu
xlat
call
rcl
dec
lret
lret
mov
mov
std
mov
mov
stos
stos
test
popf
popf
pushf
decb
sub
mov
gs
add
add
push
push
xchg
xchg
lcall
popf
sahf
jmp
test
pushl
mov
mov
mov
enter
leave
leave
inc
leave
enter
lret
leave
leave
dec
enter
lret
mov
inc
ret
mov
mov
mov
mov
mov
mov
scas
ljmp
mov
pushf
lcall
mov
popa
pop
pop
pop
add
gs
mov
xchg
xchg
xchg
std
xchg
xchg
xchg
pushf
fwait
lcall
mov
inc
enter
ret
idivb
lods
mov
iret
mov
xchg
add
mov
mov
mov
cltd
xchg
shll
fdivrs
ret
shl
mov
mov
scas
scas
mov
lcall
xchg
xchg
xchg
ljmp
sub
pop
pop
pop
fs
mov
mov
loope
xlat
sti
mov
mov
mov
imul
data16
xor
int3
xor
xor
arpl
jge
xor
xor
arpl
jge
xor
fs
jle
xor
ss
cmp
fwait
mov
stos
mov
stc
loope
loop
sarb
call
sub
pop
pop
push
bound
sub
out
push
lock
xchg
xchg
mov
mov
push
sub
les
or
xor
xor
data16
xor
xor
xor
xor
data16
xor
xor
ret
pusha
das
cmpb
mov
sub
loopne
out
out
out
out
ljmp
es
pop
pop
or
add
add
outsb
ds
in
in
std
scas
scas
scas
cltd
cwtl
xchg
sti
xchg
out
jo
push
frstor
cmp
pop
ss
pop
xor
mov
xor
mov
cmpl
and
xchg
dec
and
nop
inc
and
jg
sbb
jo
sbb
cmp
imul
jne
push
xlat
mov
sahf
cli
stos
test
sti
std
div
cmc
incl
inc
mov
pop
or
add
add
jnp
in
in
pushl
popf
pushf
jmp
lods
lods
mov
mov
mov
scas
cli
scas
lods
stos
clc
mov
xchg
jmp
lea
loope
jbe
faddl
insb
subb
mov
ficoml
nop
mov
mov
mov
mov
mov
mov
mov
scas
scas
scas
jmp
scas
lods
cld
cld
cld
push
lock
inc
arpl
add
add
add
fcmovnu
sti
repz
mov
mov
cmpsb
std
scas
scas
scas
pushl
mov
ret
enter
into
into
rcl
aam
xlat
fcomp
fcmovu
fdivr
fstp
fdivrp
fdivrp
fcmovnu
fdivr
fcos
aam
aad
ror
sar
lret
inc
mov
mov
ljmp
mov
out
out
out
jmp
ja
xchg
cmp
cmp
fcmovu
fldt
mov
rcl
ljmp
mov
pushl
mov
mov
rol
leave
enter
int
std
rcl
sar
aam
sar
aad
std
aad
aad
aam
rcl
sar
iret
iret
into
std
lret
std
mov
mov
mov
mov
ret
ret
ret
fcmovnu
fcomp
fsubr
xchg
xchg
xchg
scas
push
add
add
mov
add
jmp
jmp
int3
lret
lret
dec
mov
mov
mov
mov
mov
sar
rol
rol
inc
rol
rol
inc
rol
ret
inc
rol
ret
inc
ret
ret
mov
vpmuludq
rol
mov
scas
shll
push
mov
fcmovnu
add
add
add
into
rolb
add
add
int
add
add
add
in
or
rol
cmp
mov
lret
addr16
int3
int3
jae
int3
int3
ja
lret
lret
jns
lret
lret
jns
lret
lret
jns
lret
lret
js
int3
int3
je
leave
leave
push
les
rol
mov
out
adc
add
add
jg
add
add
loopne
addb
incl
add
or
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
rolb
add
pop
add
rolb
add
pop
add
rolb
add
pop
add
rolb
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
incb
add
add
add
pushl
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
clc
add
add
add
cli
add
add
add
std
loopne
ud0
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
andb
or
add
and
add
sbb
add
or
add
add
add
add
add
add
adc
xor
adc
add
add
add
dec
add
add
add
add
add
add
push
sbb
dec
xchg
xor
jmp
cmp
std
jnp
es
pop
push
sbb
mov
add
add
add
dec
add
add
add
add
add
add
add
add
jge
dec
ljmp
insb
cmp
leave
gs
mov
dec
xor
mov
xor
popa
push
push
fnstcw
adc
mov
or
xchg
add
add
add
push
add
add
add
add
add
adc
add
push
insb
and
mov
dec
inc
dec
insb
ds
into
insb
cmp
dec
imul
int3
imul
mov
dec
xor
lahf
cmp
sub
and
fiaddl
adc
sbb
pop
xchg
push
add
je
add
push
add
add
add
add
add
or
add
add
add
add
cltd
shrb
mov
gs
std
iret
outsb
ds
iret
insl
ds
insl
cmp
std
int
cmp
int
cmp
int3
imul
mov
dec
xor
cmpsb
inc
xor
mov
sub
imul
adc
cltd
add
add
add
pop
add
add
add
add
add
pop
add
add
insl
and
movsl
les
dec
jl
pushl
jo
call
insl
aas
dec
outsb
cmp
dec
insb
ds
insl
cmp
int
cmp
dec
imul
imul
int
cmp
int3
imul
pushl
inc
xor
fwait
cmp
std
jno
and
dec
pop
pop
lds
or
mov
add
add
add
add
sub
add
pop
add
add
add
add
insb
and
mov
ja
inc
std
shll
call
outsl
ds
insl
aas
std
shrb
call
outsb
cmp
dec
insl
cmp
iret
insl
cmp
std
iret
insb
cmp
into
insb
cmp
into
insb
cmp
into
imul
imul
into
imul
int
cmp
leave
cmp
lds
mov
inc
xor
xchg
aaa
sub
out
sbb
sub
add
add
pusha
add
add
add
sub
add
add
add
add
jne
and
fists
push
dec
imul
into
outsb
aas
std
into
insl
ds
insl
ds
into
insl
ds
into
insb
cmp
dec
insb
cmp
iret
insl
cmp
iret
imul
into
insb
cmp
int
cmp
into
insb
cmp
into
insb
cmp
into
insb
cmp
into
imul
push
std
int
cmp
int3
imul
mov
dec
xor
pushf
cmp
sti
je
and
pop
sbb
pop
add
jg
add
pop
add
add
add
add
xchg
das
sub
jmp
lcall
mov
jns
call
ja
std
shlb
call
jno
dec
outsl
inc
dec
insl
ds
shrb
dec
insb
cmp
dec
insl
cmp
int
cmp
dec
insl
cmp
std
iret
insl
cmp
dec
insb
cmp
iret
insb
cmp
into
insb
cmp
into
imul
push
dec
push
std
int
cmp
lret
mov
dec
xor
movsb
aas
xor
subl
lahf
add
add
add
add
xchg
xor
rcl
xchg
loopne
cmp
pushf
jg
lods
push
inc
call
test
aam
pop
std
aad
push
call
jle
call
jl
call
jns
std
shll
call
jb
std
iret
outsb
aas
dec
insb
cmp
std
iret
insl
cmp
iret
insl
cmp
std
iret
insl
cmp
dec
imul
iret
insl
cmp
dec
insb
cmp
iret
insb
cmp
iret
insb
cmp
into
insb
cmp
into
imul
imul
int
cmp
int
cmp
leave
gs
inc
pop
xor
mov
or
add
add
add
xchg
ss
rorb
jmp
movsl
mov
mov
dec
call
test
fmuls
pop
call
sbbl
pop
call
adcl
aam
push
std
aam
push
call
ja
call
jno
std
into
insb
cmp
dec
imul
iret
insl
cmp
dec
imul
iret
insl
cmp
dec
imul
iret
insl
cmp
dec
imul
iret
insl
cmp
dec
insb
cmp
into
imul
pop
xor
mov
cs
daa
and
add
add
pushf
cmp
in
nop
js
jecxz
mov
out
mov
les
std
enter
ficoml
push
std
xlat
mov
xchg
xlat
xchg
aad
pop
sbbb
adcb
jle
aam
dec
std
shlb
std
into
insb
cmp
std
int
cmp
into
insb
cmp
lret
std
lret
std
into
insb
cmp
int
cmp
int
cmp
into
insb
cmp
int
cmp
int
cmp
int
cmp
into
insb
cmp
lret
push
xor
mov
aas
sub
lret
sub
add
add
add
lahf
inc
cmp
xchg
jle
in
jmp
stos
mov
fcoms
ficomps
jb
ficoml
imul
lea
arpl
fadds
pop
call
sbbl
sbbl
adcl
iret
jo
dec
insb
cmp
mov
push
sub
inc
addr16
into
insb
cmp
iret
insl
cmp
std
iret
insl
cmp
dec
insl
cmp
std
lret
push
xor
mov
pop
das
shlb
add
add
inc
ds
fcomps
xchg
std
out
xchg
out
std
scas
pop
dec
std
fstpl
jnp
ficomps
jne
fistl
outsl
std
fistl
push
fimull
xlat
mov
fadds
pop
xlat
test
outsl
inc
std
lods
pop
xor
mov
pop
das
std
mov
das
inc
addr16
into
insb
cmp
into
insb
cmp
int
cmp
int
cmp
int
cmp
into
insb
cmp
lret
push
xor
mov
gs
lcall
or
add
add
add
sbb
sahf
mov
call
mov
std
jmp
jb
call
lea
loope
xchg
fbld
cmp
fstpl
std
fstl
jae
ficoml
insl
fimull
push
mov
mov
jnp
mov
pop
das
std
mov
xor
addr16
into
insb
cmp
iret
insl
cmp
dec
insl
cmp
std
lret
push
xor
mov
sub
int
push
cs
cmpsl
pop
pop
pusha
sub
or
test
mov
fwait
call
mov
call
xchg
jle
mov
scas
xchg
jmp
stos
mov
loope
mov
loopne
xchg
loope
test
fbld
cmp
popf
jge
ficomps
ja
fcoml
push
roll
dec
xchg
jb
rclb
gs
jno
std
test
pop
xor
addr16
into
insb
cmp
iret
insl
cmp
dec
insb
cmp
lret
push
xor
mov
sub
int
xor
xchg
xor
repnz
push
cmp
dec
fbld
lahf
std
jmp
mov
std
in
xchg
std
mov
dec
call
mov
std
in
xchg
std
in
xchg
loop
nop
std
jecxz
loop
mov
loope
xchg
fbld
cmp
lea
rcrl
jnp
fcomps
jnp
rcll
jno
ret
jl
std
stos
pop
xor
mov
cs
addr16
into
insb
cmp
int
cmp
into
insb
cmp
lret
push
xor
mov
sub
int
data16
lods
inc
sub
mov
je
cmp
push
jmp
lods
cwtl
jmp
movsb
in
mov
lahf
in
mov
pushl
lods
xchg
call
mov
pushf
std
out
fwait
jmp
mov
std
jecxz
xchg
jmp
lods
xchg
jmp
stos
std
mov
cmp
mov
xchg
fildll
nop
std
loop
fstps
jnp
rcll
jno
mov
dec
std
mov
xor
dec
imul
into
insb
cmp
lret
push
xor
mov
sub
int
xor
pusha
xor
lcall
add
pop
jmp
mov
in
mov
cmpsb
std
in
mov
mov
std
int3
mov
in
ret
scas
ljmp
std
out
movsl
call
mov
jmp
mov
fldt
fsubrs
xchg
std
loop
cltd
jmp
mov
jmp
mov
std
in
xchg
jmp
scas
xchg
fisubl
call
lcall
roll
dec
jne
dec
insl
aas
std
lret
inc
pop
xor
mov
fs
int3
xor
int3
data16
mov
movsb
movsb
add
add
cmp
push
jmp
mov
std
in
ret
out
mov
cmpsb
std
in
mov
fwait
mov
pop
std
out
lret
mov
std
in
lds
std
jmp
mov
mov
fdivl
popf
std
in
mov
std
call
mov
out
popf
std
out
pushf
std
in
lcall
mov
test
rcrb
jb
lret
jb
xlat
xchg
jb
aad
arpl
enter
mov
bound
int
arpl
lret
xor
rcrb
xchg
cmp
jns
add
add
or
addr16
mov
mov
out
les
in
mov
test
jmp
shrb
out
int3
mov
in
enter
shrb
loopne
stos
std
fistpll
scas
jmp
mov
jmp
lods
ljmp
std
jmp
mov
mov
fsubrl
std
aad
mov
rcrl
jp
into
xchg
jp
xlat
cwtl
jp
aad
ja
rclb
insl
fcmovbe
jg
ror
outsb
ds
int3
data16
fwait
xor
call
add
add
jnp
jmp
enter
mov
out
lds
out
shrl
mov
pop
jmp
mov
enter
int
std
loopne
mov
in
mov
jecxz
mov
ljmp
in
lret
mov
jmp
mov
in
mov
ljmp
jmp
mov
mov
std
fsubrs
xchg
call
movsb
dec
lcall
aam
jle
aam
sub
mov
test
ficomps
ja
mov
pop
pop
pop
dec
adc
jge
test
jmp
mov
icebp
int3
mov
lock
mov
out
ret
out
ret
lods
std
fisubs
pop
std
mov
xorb
xchg
mov
mov
repz
leave
std
icebp
aam
std
icebp
rol
out
iret
sar
into
mov
in
leave
mov
std
in
mov
jmp
mov
std
popf
std
fldcw
cwtl
std
aad
xchg
dec
mov
xchg
xlat
movsb
mov
loope
nop
loope
stos
mov
loop
mov
loope
mov
loopne
test
nop
sub
lods
cmc
out
in
add
add
add
sbb
in
mov
repz
mov
std
lock
icebp
leave
mov
lock
mov
out
ret
scas
out
ret
lods
push
lds
std
xor
sbb
std
imul
jmp
jns
std
mov
xchg
xchg
fsubrs
scas
push
rol
push
rol
std
lock
out
rol
in
int3
mov
fistpll
stos
std
loope
lods
jmp
mov
mov
std
fdivs
xchg
aam
xchg
mul
mov
call
jecxz
xchg
loop
scas
xchg
loope
scas
xchg
loopne
fs
xlat
mov
add
add
push
cltd
int3
xchg
xchg
out
lret
mov
push
sarl
push
int3
mov
std
lock
mov
out
lds
ljmp
and
std
xor
incl
std
inc
inc
inc
inc
sarb
repnz
jmp
mov
std
popl
push
aad
std
repnz
lret
aam
jmp
lret
jecxz
mov
ljmp
in
int3
mov
fnstsw
cmpsb
fidivl
fwait
fidivl
mov
jecxz
mov
in
mov
jecxz
mov
cmp
jns
and
out
into
mov
std
hlt
aam
repz
std
repnz
icebp
leave
mov
out
mov
repz
mov
xchg
jnp
adc
cmp
aas
aas
aas
std
inc
inc
inc
std
ror
push
in
std
cld
icebp
jmp
push
out
std
mul
std
jmp
iret
ret
out
sar
rol
std
icebp
aad
icebp
aam
std
lock
std
out
rol
std
in
mov
fistpll
lods
std
fdivrl
mov
cmc
out
stos
ljmp
cmpsl
out
mov
inc
int
scas
scas
and
add
add
and
icebp
rol
push
fxch
push
xlat
std
repz
push
rol
push
sarb
push
int3
mov
push
int
std
lcall
std
xor
xor
xor
xor
xor
xor
into
lret
push
ljmp
lock
push
in
inc
cltd
xchg
std
mov
outsl
in
fcmove
in
fcmovbe
std
icebp
fst
push
push
fst
std
repz
push
fxch
push
xlat
lret
aad
std
out
mov
jmp
ret
mov
ffreep
mov
fstpt
imul
ret
mov
jmp
mov
in
les
loope
inc
cmp
add
and
fsubrs
push
fcmovne
push
fmul
std
cmc
xlat
push
aad
push
rol
std
repz
push
lret
mov
std
hlt
lret
mov
pushf
xorl
sub
sub
sub
sub
xor
das
inc
sarb
push
call
incl
inc
std
push
sub
decl
jg
shll
lods
ljmp
push
fcmovne
push
loopne
push
std
hlt
fst
jmp
jmp
int3
mov
jmp
mov
jecxz
mov
ljmp
ljmp
aaa
lret
fldl
jg
es
mov
push
fxch
std
neg
iret
std
neg
int
neg
leave
std
hlt
fadd
std
cmc
hlt
aam
std
repnz
std
repz
icebp
lret
mov
xchg
jnp
std
or
std
and
and
and
and
sub
sub
sarl
std
ds
std
and
and
push
pop
and
lods
mov
lret
mov
lcall
jge
std
mov
jo
std
lds
xchg
std
fldcw
test
std
jmp
enter
in
sar
into
sar
rol
out
icebp
aam
in
lret
fbstp
add
add
sub
loopne
lods
cmc
fmul
clc
loopne
push
std
neg
into
push
fcmovne
push
fxch
std
cmc
xlat
aad
push
rol
push
iret
mov
push
int3
mov
lcall
or
sbb
sbb
sbb
sbb
sbb
pop
std
push
push
push
lcall
sbb
lcall
sbb
std
mov
cmpsb
push
ljmp
lock
std
lock
std
icebp
out
repnz
repnz
cli
in
loope
out
aad
std
fdivs
xor
dec
pop
sbb
ljmp
sub
dec
inc
std
mov
jl
dec
lcall
loopne
pushf
out
pop
pop
mov
add
add
mov
sar
stc
jecxz
clc
loopne
std
neg
sar
neg
iret
push
fmul
std
neg
lret
fadd
push
rol
std
repz
push
iret
mov
push
into
mov
std
add
adc
call
adc
adc
adc
or
cmpl
stc
lock
sti
lock
cld
bnd
sti
repz
cld
repz
sti
repz
sti
repnz
in
jecxz
pop
push
push
decl
push
call
sbb
std
jns
jno
pop
pop
push
call
push
paddw
adc
ljmp
adc
pushl
push
push
sti
dec
push
adc
popf
xchg
jo
and
add
add
mov
push
fst
stc
in
stc
in
std
mul
aam
clc
push
std
neg
int
neg
leave
push
fxch
push
aad
std
repz
push
rol
std
repz
clc
sarl
incl
add
decl
or
std
daa
daa
daa
call
push
dec
mov
std
hlt
in
sti
repnz
std
std
hlt
in
std
hlt
in
sti
bnd
std
hlt
in
std
hlt
in
std
imul
call
pop
pop
ljmp
mov
std
clc
jmp
push
call
std
add
or
decl
or
incb
add
repnz
add
fwait
fwait
add
add
add
add
add
and
repnz
std
stc
out
std
clc
in
stc
in
std
mul
sar
clc
loope
neg
iret
std
neg
into
std
cmc
fcmove
std
neg
leave
cmc
xlat
std
repz
hlt
rol
std
repz
mov
cmc
int3
mov
std
and
and
jne
jne
outsb
outsb
outsb
std
imul
xlat
sar
push
out
std
sti
repnz
sti
repnz
std
sti
repnz
std
sti
repnz
std
hlt
in
std
clc
icebp
ljmp
imul
fcom
sar
clc
lock
sti
in
jecxz
sti
in
push
out
addr16
pop
std
add
add
pop
pop
pop
incb
add
clc
add
add
mov
add
ds
fs
in
rol
clc
in
cli
out
std
cli
out
clc
in
stc
jecxz
std
stc
loopne
clc
loopne
push
fmulp
push
fmul
std
neg
leave
push
fmul
std
hlt
aad
push
int3
mov
std
aam
call
nop
cmp
pop
push
cmp
cmp
jbe
jbe
jae
jae
je
je
fcmovbe
sar
push
lock
std
repz
std
hlt
out
std
hlt
out
std
stc
icebp
jmp
fwait
cwtl
xchg
ljmp
jo
jne
je
xlat
aam
clc
repnz
sti
repz
std
std
hlt
in
sti
icebp
jmp
std
std
out
in
imul
std
add
add
add
add
add
add
add
add
add
add
add
add
loope
mov
hlt
cli
jmp
cli
out
cli
in
std
clc
in
stc
loope
clc
loope
push
std
neg
into
push
fcmove
std
icebp
rol
call
xorl
and
lret
pop
mov
and
pop
sbb
incl
jns
jl
jnp
aad
push
icebp
cmc
out
std
imul
std
sahf
fwait
cltd
pushl
jbe
js
ja
fcmovu
aam
push
icebp
std
cmc
out
sti
repz
std
std
cmc
out
std
cmc
out
sti
hlt
out
std
cld
icebp
jmp
call
dec
std
add
add
add
add
pop
pop
pop
incl
add
fildl
add
sub
add
add
add
add
sbb
ja
jmp
std
mul
clc
out
std
stc
out
std
stc
out
stc
in
std
stc
in
std
stc
jecxz
std
clc
loope
neg
sar
repz
call
cmpl
add
add
add
add
cmp
xchg
addb
xlat
std
lock
out
mov
jge
std
addb
std
clc
repnz
std
hlt
out
std
cld
hlt
out
std
std
cmc
out
cld
hlt
out
std
cld
hlt
out
std
std
cmc
out
cld
cmc
out
std
stc
hlt
std
jb
jae
addl
add
adc
cmp
xchg
jecxz
mov
jmp
ret
rol
out
aad
std
icebp
fmul
push
fcmove
push
fmul
push
fmul
std
repnz
leave
ljmp
jg
sub
or
add
add
add
inc
inc
std
lea
mov
mov
mov
xchg
mov
fcmovbe
aam
stc
repz
cld
cmc
out
std
div
div
cld
div
std
div
div
cld
imul
std
push
repnz
in
jmp
call
mov
add
add
push
sbb
xor
inc
inc
sti
stos
pop
push
pushl
jne
leave
nop
mov
aam
fwait
jmp
mov
mov
fistpll
mov
mov
sub
xor
add
pusha
dec
dec
dec
cld
xchg
xchg
xchg
nop
nop
nop
call
lea
cli
cmc
div
cld
cmc
icebp
std
div
div
cld
cmc
icebp
std
div
div
clc
repz
in
jmp
lcall
xchg
xchg
fs
add
lods
dec
dec
dec
or
add
add
push
adc
or
adc
and
jnp
push
sbb
jns
and
sahf
inc
cmp
lret
add
pop
inc
inc
inc
clc
sahf
sahf
sahf
cwtl
cwtl
cwtl
std
xchg
xchg
xchg
fdivr
stc
hlt
std
cld
div
std
std
div
cld
div
std
cld
div
std
std
div
cld
div
std
clc
repz
jmp
in
popf
pushf
popf
std
pushf
pushf
pushf
push
add
movsb
dec
dec
dec
pop
and
sbb
sbb
add
add
pop
pop
pop
dec
dec
dec
cld
mov
sahf
sahf
std
mov
loop
stc
hlt
cld
div
std
clc
repz
clc
repz
cld
div
std
stc
hlt
out
jmp
jmp
mov
incl
add
cmpsb
push
push
push
or
add
add
cmp
pusha
dec
dec
dec
cld
lods
lods
lods
movsb
movsb
movsb
jmp
out
stc
cmc
std
div
div
stc
cmc
std
lock
ljmp
test
ja
add
add
push
push
push
pop
dec
dec
dec
stc
mov
mov
stos
stos
stos
std
stos
stos
stos
std
ljmp
std
cli
idiv
icebp
out
in
mov
mov
mov
mov
ja
ja
add
add
pop
pop
pop
pop
push
push
push
cld
mov
mov
mov
mov
mov
mov
call
jmp
pushl
mov
jl
jl
add
add
cmp
cmp
push
push
cld
mov
mov
std
mov
mov
mov
mov
mov
addb
dec
dec
dec
or
add
add
ss
push
push
push
cli
mov
ret
ret
incb
add
movsl
dec
dec
dec
or
add
add
push
pop
pop
pop
pop
std
leave
leave
leave
decl
add
cmpsb
push
push
push
or
add
add
imul
daa
fadds
add
xchg
push
push
push
pop
loopne
incl
add
ud0
incl
add
add
incl
add
add
incl
add
add
jg
incl
add
add
pop
incl
add
add
add
add
rolb
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jg
add
jg
add
jg
add
aas
add
addb
add
aas
add
addb
add
pop
add
addb
add
pop
add
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
cld
add
addb
add
push
inc
add
add
jmp
add
add
push
add
add
clc
add
add
cld
add
add
incb
incl
add
incl
incl
add
incl
add
add
add
add
add
add
and
add
add
andb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
inc
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
lret
add
jmp
add
xlat
add
add
enter
mov
add
cwtl
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
jns
lret
fcomip
stc
jmp
cmc
decl
repnz
repnz
scas
adc
incl
jnp
out
add
fiadds
ds
les
unpcklps
add
jl
add
bound
add
inc
add
add
add
add
add
add
add
add
add
add
add
mov
add
into
ds
push
ljmp
sar
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
cld
call
repnz
cmpsl
fcos
add
sbb
sub
xchg
add
add
add
pop
add
add
add
add
add
add
add
dec
sub
or
sar
adc
in
ljmp
aad
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
decl
ljmp
mov
incl
mov
add
popl
add
push
add
aas
add
add
add
pop
add
add
add
lcall
movsl
fdivr
sbb
fdivr
fdivr
jmp
fdivr
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
ljmp
cld
decl
in
decl
mov
mov
add
and
add
add
add
add
add
add
add
add
or
push
test
lcall
test
cmp
jmp
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
ljmp
pushl
pushl
pushl
pushl
pushl
pushl
lcall
repnz
mov
and
push
adc
add
inc
add
add
add
add
add
add
sahf
sar
and
lods
and
mov
mov
out
js
js
js
js
js
js
js
js
pushl
jmp
cli
jmp
cli
ljmp
pushl
js
js
js
js
js
incl
decl
mov
rolb
add
add
add
or
loop
sub
loop
sub
loop
aaa
mov
call
loope
jnp
jnp
jnp
jnp
jnp
jnp
jnp
js
lcall
incl
xlat
decl
jmp
insb
sar
jnp
jnp
jnp
jnp
jnp
jnp
ljmp
call
cmpsl
incl
cmp
add
add
add
daa
or
mov
pushl
mov
pushl
mov
pushl
call
in
incl
in
incl
in
incl
in
incl
in
lcall
incl
into
incl
insl
aam
incl
in
incl
in
incl
in
incl
shl
incl
cltd
int3
incl
add
popl
add
das
push
sar
cmp
jmp
pushl
mov
decl
jmp
incl
jmp
incl
jmp
incl
mov
incl
sar
je
cmc
incl
jmp
incl
jmp
incl
aad
incl
cltd
int3
incl
add
popl
add
das
adc
in
incl
in
incl
in
incl
loopne
shl
jmp
jmp
incl
jmp
incl
jmp
incl
jmp
incl
fsubr
incl
mov
cmp
mov
aas
cwtl
pushl
incl
jmp
incl
jmp
incl
jmp
incl
xlat
repnz
cltd
int3
incl
add
popl
add
das
adc
lock
lock
lock
loope
jmp
out
decl
out
decl
out
decl
out
decl
lods
sar
andb
cmp
mov
pop
mov
decl
out
decl
out
decl
out
decl
fptan
incl
cltd
int3
incl
add
popl
add
das
adc
decl
hlt
decl
hlt
decl
hlt
incl
loop
lret
cmc
cld
ljmp
decl
decl
decl
call
mov
incl
pushf
cmp
lods
cmp
mov
xchg
idiv
decl
decl
decl
ljmp
repnz
cltd
int3
incl
add
popl
add
das
adc
ret
idiv
push
ret
idiv
push
ret
idiv
dec
mov
cld
ljmp
idiv
decl
idiv
decl
idiv
decl
idiv
call
out
call
incl
pushf
cmp
lods
decl
idiv
decl
idiv
decl
idiv
decl
fcomip
incl
cltd
int3
incl
add
popl
add
das
pop
movsl
fdivr
pop
cli
lcall
cli
lcall
cli
decl
in
aad
cld
pushl
call
stc
call
stc
call
stc
call
clc
pushl
mov
incl
pushf
lcall
decl
stc
call
stc
call
stc
call
loope
incl
cltd
int3
incl
add
popl
add
das
sbb
jmp
jmp
call
in
cld
pushl
cld
call
cld
call
cld
call
cld
call
clc
js
sar
jl
call
xchg
js
out
xchg
stc
call
cld
call
cld
call
cld
pushl
repnz
cltd
int3
incl
add
popl
add
das
sbb
jmp
jmp
call
in
std
mov
lcall
lcall
lcall
lcall
stc
js
mov
lcall
mov
jp
in
cltd
lcall
lcall
lcall
pushl
repnz
cltd
int3
incl
add
popl
add
das
sbb
ljmp
ljmp
call
in
out
std
inc
cld
lcall
lcall
lcall
lcall
call
ret
fdivr
jno
fwait
ljmp
cmp
pushf
lcall
lcall
lcall
pushl
repnz
cltd
int3
incl
add
popl
add
das
sbb
fcos
pushl
pushl
lcall
in
in
sti
dec
std
jmp
jmp
jmp
jmp
lcall
call
ljmp
jl
jmp
jmp
jmp
jmp
out
incl
cltd
int3
incl
add
popl
add
das
push
stos
fcos
ja
pushl
pushl
lcall
in
icebp
cld
jmp
out
sti
out
sti
in
sti
ljmp
call
cld
dec
std
mov
pushl
stc
lcall
pushl
pushl
pushl
incl
cltd
int3
incl
add
popl
add
das
and
incl
fdivr
incl
mov
fsubr
jp
in
mov
call
pushl
sti
out
sti
in
sti
jmp
jmp
cli
std
fsincos
call
std
inc
mov
mov
mov
mov
out
incl
cltd
int3
incl
add
popl
add
das
and
call
in
lcall
test
in
xor
cwtl
sar
xchg
incl
decl
icebp
ljmp
mov
jmp
stos
inc
mov
lcall
xchg
call
out
sti
in
sti
in
sti
ljmp
call
std
dec
inc
inc
inc
inc
call
int3
incl
add
popl
add
das
and
cmp
cld
cmp
jb
call
jge
call
jge
jmp
jno
call
fs
call
idiv
dec
mov
out
ljmp
test
lcall
cmpsl
xlat
decl
incl
out
clc
out
sti
out
sti
in
sti
jmp
cld
call
dec
dec
lcall
cltd
int3
incl
add
popl
add
das
add
cltd
lcall
je
incl
lcall
add
into
incl
xchg
enter
cmpsl
ljmp
jmp
lcall
sti
decl
repz
icebp
ds
in
sub
movsb
xlat
decl
sahf
sar
pop
cmpsb
sar
mov
call
out
sti
out
sti
jmp
std
jmp
cltd
int3
incl
add
popl
add
das
add
loop
cltd
lcall
ret
sar
add
mov
sar
add
into
incl
pushl
ljmp
jmp
jmp
call
idiv
dec
mov
out
pushl
mov
jmp
popf
iret
call
xchg
fwait
into
lcall
call
icebp
clc
push
std
push
cld
pushl
cltd
int3
incl
add
popl
add
das
add
fcos
xchg
stc
lcall
popf
sar
sbb
test
incl
pushf
iret
decl
call
pushl
ljmp
jmp
lcall
sti
decl
repz
icebp
cmp
mov
lcall
outsb
lcall
mov
ljmp
loop
out
sti
mov
cltd
int3
incl
add
popl
add
das
add
loope
int3
out
or
loopne
daa
lods
loopne
or
decl
in
jg
pushl
ljmp
jmp
jmp
call
idiv
cmp
sahf
incl
into
decl
lahf
sar
add
mov
incl
fwait
into
jmp
cmpsb
sar
shr
incl
cltd
int3
incl
add
jge
add
add
add
add
sar
xor
in
or
sar
cltd
lcall
stc
decl
out
jp
pushl
ljmp
jmp
decl
fcos
adc
call
movsb
xlat
lcall
cmpsl
or
movsl
fdivr
or
int3
incl
cltd
int3
incl
add
push
add
add
pop
aam
ds
jmp
jmp
in
decl
call
hlt
incl
jecxz
pushl
ljmp
jmp
jmp
sahf
iret
pushl
lods
ljmp
scas
loop
sub
sar
test
jmp
stos
sbb
sar
add
lcall
add
adc
lock
lock
mov
xchg
fadds
xchg
enter
fdivr
push
shr
jl
cmc
call
lock
incl
pushl
pushl
lods
pushl
mov
call
mov
call
jmp
stos
add
add
add
push
push
movsb
xlat
call
idiv
push
ret
idiv
adc
add
xchg
add
add
add
mov
cltd
int3
jmp
shl
dec
pop
shl
ljmp
xor
ds
decl
repnz
mov
incl
xchg
leave
cmc
add
pop
add
add
add
add
sbb
cld
lcall
cld
lcall
movsl
fdivr
add
add
add
or
xchg
movb
ret
xchg
rcll
xchg
out
lods
decl
lock
lock
cltd
int3
incl
mov
les
pop
jne
add
add
add
add
pop
fwait
int
data16
jmp
ljmp
xor
add
add
add
add
add
mov
call
clc
call
clc
incl
jl
in
add
add
add
and
xchg
mov
iret
stc
pushl
decl
incl
bound
mov
add
cmp
add
pop
add
jmp
std
lcall
cld
incl
jl
in
add
add
add
and
xchg
lds
jmp
jns
decl
lcall
add
add
add
and
add
add
mov
jmp
jmp
incl
jl
in
add
add
add
add
sar
sub
incl
leave
in
incl
popa
and
add
xchg
add
add
add
sbb
add
add
add
add
subl
jae
pushl
incl
jge
ljmp
add
add
in
decl
jmp
scas
fcos
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
jge
jmp
cmc
incl
outsb
xchg
fldl
add
pop
add
add
add
into
lock
stc
cld
call
idiv
lcall
movsl
int3
sti
add
inc
enter
xchg
add
add
add
add
add
add
jg
mov
decl
in
call
in
incl
popa
or
add
inc
add
add
add
fdivr
cltd
lcall
stc
cld
lcall
pop
jbe
add
adc
add
add
or
stc
call
clc
ljmp
xor
mov
add
and
add
add
xchg
enter
cltd
lcall
jmp
in
jmp
mov
decl
nop
mov
sti
cmp
stc
lcall
jl
cmc
incl
subb
add
add
add
fdivr
stc
cld
lcall
lcall
lcall
lcall
decl
cmpsl
into
clc
add
jo
add
sbb
add
add
xchg
lds
lahf
into
lock
fldlg2
lcall
lcall
lcall
pushl
bnd
mov
add
add
add
nop
rclb
xchg
movl
dec
int3
out
push
shr
decl
out
sbb
mov
dec
add
add
jg
in
jg
in
jg
in
jg
in
add
inc
add
add
add
add
incl
add
lock
incl
add
loopne
pop
incl
add
addb
incl
add
add
add
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
addb
add
add
inc
add
add
add
push
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
push
add
incl
add
clc
pop
loopne
incl
add
clc
pop
loopne
incl
add
clc
add
aas
incl
add
clc
add
aas
incl
add
cld
add
aas
incl
add
cld
add
aas
incl
add
incb
add
incl
add
incl
add
add
incl
add
inc
add
incl
add
jmp
add
incl
add
cld
pop
incl
add
incl
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
dec
jl
int
repnz
push
jecxz
push
jecxz
push
loop
push
loope
inc
mov
in
adc
adc
add
add
add
push
add
add
mov
jecxz
clc
cli
sti
jmp
loop
dec
mov
call
stos
xchg
ffree
mov
push
repz
loope
ljmp
into
add
add
add
push
add
add
sarb
loop
hlt
dec
lcall
mov
scas
lcall
push
and
aad
lahf
push
push
loop
call
inc
enter
mov
add
and
loope
clc
inc
jge
mov
dec
adc
ret
fsts
ud0
lcall
repnz
incl
add
test
add
data16
fxch
loope
cli
stc
fsubrs
or
dec
pusha
sub
lret
imul
fmuls
sub
int3
bound
mov
leave
mov
call
add
popf
repz
clc
cli
sti
inc
bound
dec
pop
es
addr16
lret
pop
and
lret
push
out
call
imul
lret
dec
gs
ret
push
sbb
js
clc
cld
std
jmp
int
clc
add
add
repnz
inc
push
push
dec
data16
int3
gs
int3
pop
and
ret
call
dec
ud0
bound
inc
pop
sub
repz
push
loopne
incb
add
mov
loope
push
fmul
dec
pop
and
iret
data16
int3
fs
dec
pusha
sub
les
dec
mov
jmp
pushf
jp
push
sbb
int
sub
pop
sub
cmc
icebp
in
push
incb
add
lods
icebp
loopne
sti
in
out
fldt
call
push
sub
leave
pop
and
leave
push
sbb
rorl
loop
call
jo
dec
pop
and
into
push
cld
sti
sti
out
incb
add
xchg
icebp
push
cwtl
push
loop
sub
enter
lock
mov
pushf
jle
fimull
jmp
lcall
fld
mov
push
lock
shl
out
ljmp
fiadds
cld
std
jmp
mov
push
stc
jmp
jb
jmp
jo
push
out
push
out
incl
add
pop
add
add
icebp
jmp
jo
in
scas
xchg
in
loop
jmp
hlt
push
in
push
movsb
js
decb
std
push
fst
incl
add
add
add
add
add
lock
pop
lock
sti
push
dec
xchg
call
test
cld
push
call
inc
dec
add
add
icebp
fcmovnbe
pop
icebp
push
call
std
cld
sti
std
push
out
push
fst
incl
add
add
add
add
fcmove
mov
out
fcmovnbe
out
fcmovnbe
out
push
fcmovnbe
jmp
int
sahf
add
add
loopne
xor
rolb
incl
add
add
idiv
add
cld
incl
add
add
dec
add
jecxz
add
incl
add
incl
add
inc
add
push
rdpmc
ljmp
add
add
add
add
add
add
add
add
add
push
add
add
or
pop
arpl
or
jns
or
test
or
xchg
add
jle
add
push
add
add
add
add
add
add
or
dec
push
push
cmpsb
mov
xchg
fcmovu
int3
mul
fcmovbe
std
out
aad
in
iret
std
int
mov
popl
cs
add
add
add
sub
add
add
add
add
outsl
arpl
ror
icebp
cld
clc
push
sti
std
push
cli
std
push
cld
push
sti
cli
cld
std
clc
out
call
jmp
add
add
add
add
and
sbb
mov
fwait
sti
cli
std
out
cmc
clc
fdivr
lret
mov
dec
cmpsb
xchg
call
stos
xchg
fidivrl
lret
ljmp
out
in
std
pusha
push
dec
into
add
add
add
add
and
pop
pop
fmul
rcl
push
stc
cld
call
mov
inc
mov
imul
jnp
mov
bound
fcmovnb
mov
in
icebp
repnz
stc
std
cmc
lock
push
rolb
add
mov
add
xor
or
push
or
push
clc
sti
jmp
iret
jbe
mov
pop
sub
mov
mov
stc
cli
cli
frstor
sub
mov
pop
sub
ljmp
clc
out
ljmp
add
jae
add
sbb
add
add
add
add
pop
push
std
push
cld
jmp
iret
vcmpsd
rcrl
fs
lret
bound
call
fcmovu
jmp
leave
mov
dec
arpl
inc
pusha
das
mov
xchg
jae
in
out
out
fxch
ret
or
movsl
add
add
add
add
out
fst
fdivrp
in
out
inc
ja
inc
pop
sub
leave
data16
int3
addr16
int
xor
xor
cmpsl
nop
ljmp
dec
arpl
dec
data16
lret
inc
popa
xor
mov
stos
xchg
push
clc
cli
std
pushl
aad
add
jno
add
push
not
ret
pop
std
cmc
repnz
clc
fisubrl
sub
leave
data16
int
xor
dec
xor
int3
gs
into
imul
shlb
dec
xor
int3
xor
int3
data16
int3
data16
lret
inc
pop
sub
call
call
mov
xchg
add
add
xlat
leave
mov
repz
in
dec
js
inc
popa
cs
push
xor
dec
fs
push
fld
mov
stc
jmp
fcoml
sub
int3
xor
int3
addr16
int3
addr16
leave
gs
rcrb
fsubrs
cli
out
out
ds
add
mul
fcom
jmp
enter
xor
dec
imul
dec
xor
int
xor
les
call
ror
jmp
mov
dec
pop
and
int3
gs
int3
xor
int
xor
int3
addr16
dec
mov
hlt
cmc
idiv
cld
pushl
pop
int3
add
add
jmp
in
jmp
shrl
iret
imul
iret
imul
dec
xor
int3
data16
leave
arpl
inc
mov
cld
repnz
fmuls
sub
int3
xor
int
xor
int
ss
arpl
dec
jp
push
out
out
jnp
push
add
add
in
out
ljmp
call
outsb
cmp
iret
push
dec
xor
int3
xor
int3
xor
int
xor
ret
imul
sti
cli
icebp
in
fmuls
sub
int
xor
into
push
dec
gs
into
jns
push
out
in
jl
imul
add
inc
cli
ljmp
icebp
lret
mov
call
jb
call
insb
cmp
int3
xor
int3
gs
int3
fs
int3
xor
int
sub
fadd
mov
stc
in
call
dec
fs
shrl
dec
push
push
cli
div
jnp
imul
clc
loop
sar
sti
out
jmp
jg
fidivrs
call
jo
dec
push
xor
int3
data16
lret
fs
int3
xor
int3
pusha
sub
enter
lock
ljmp
scas
xchg
dec
bound
call
push
jbe
cld
ljmp
push
mov
add
and
fmul
lcall
std
push
mov
dec
fbstp
dec
js
call
mov
out
fmul
ficomps
and
dec
xor
jmp
imul
out
mov
sti
out
call
addl
add
repnz
mov
std
stc
nop
pop
push
mov
fdivrs
ror
lret
stc
ljmp
int3
addr16
fldenv
clc
cli
fildll
cmp
jmp
mov
std
cmc
icebp
dec
mov
add
add
add
lret
mov
into
inc
mov
push
nop
pop
call
sahf
cmp
in
lock
clc
cmc
push
out
jmp
in
in
data16
jmp
dec
ljmp
cld
jmp
push
lcall
add
add
add
out
int
dec
cld
repz
clc
call
test
sti
cmpsl
je
jecxz
pushf
jmp
jmp
in
icebp
jmp
out
out
loope
push
scas
mov
cli
xchg
pop
sti
xchg
popa
cld
int3
mov
call
les
xor
add
add
fcmove
xchg
sti
cli
in
int3
fisubrs
stc
ret
out
mov
fwait
push
mov
test
ljmp
mov
jmp
sar
push
call
sub
add
aam
add
jecxz
movsl
cli
clc
push
cld
loopne
push
int3
in
mov
fisubrs
jmp
cmc
cli
lock
pop
dec
inc
data16
add
neg
int
neg
iret
cld
repnz
std
in
loopne
loope
cmp
add
repz
inc
clc
jecxz
cld
repnz
sti
cli
clc
cmc
push
call
xchg
xor
and
add
add
aam
add
aad
inc
neg
iret
mov
loope
sti
jmp
out
in
in
cli
out
fmul
stos
cmc
aad
imul
int
cld
add
clc
add
push
add
jmp
add
inc
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
inc
add
jmp
add
clc
add
cld
add
ljmp
add
add
add
add
add
add
sbb
add
add
orb
add
add
mov
aad
lock
lock
lock
lock
lock
out
fcmovnbe
loopne
sarb
add
mov
jmp
int3
repnz
hlt
call
hlt
hlt
repz
hlt
lock
repnz
repnz
icebp
hlt
in
jmp
fcmovnbe
int
scas
aas
cmp
add
prefetchw
lret
mov
lock
repnz
cmc
lock
out
in
loop
call
icebp
in
out
icebp
in
lock
lock
repnz
hlt
jmp
xchg
cmpb
add
gs
push
ljmp
cmc
cmc
lock
repnz
icebp
repnz
fcmovne
scas
mov
jl
ret
jge
int3
jno
stos
xchg
jmp
repnz
repnz
hlt
repnz
mov
pop
push
out
fcmove
div
out
repz
hlt
lock
cmc
ljmp
jno
mov
daa
shlb
sbbl
and
xor
xchg
mov
lock
hlt
div
hlt
out
shrb
add
add
cmp
lret
div
in
hlt
cmc
cmc
lock
cmc
in
ror
sbbb
sub
das
ret
lds
cmc
in
jmp
pop
sub
pop
sub
pusha
xor
mov
out
icebp
icebp
cmc
div
repz
xchg
xchg
fadd
mov
div
repnz
loop
rol
inc
mov
xor
arpl
lret
mov
stc
ljmp
arpl
les
rcrb
pop
sub
nop
jno
ljmp
div
fst
pop
push
dec
add
add
sar
stc
cli
hlt
div
call
inc
rcrb
xor
fs
xor
fs
outsl
inc
mov
push
cld
fldcw
lret
enter
arpl
ret
mov
jl
out
lock
imul
ljmp
in
imul
jmp
icebp
lock
mov
pop
sub
fs
gs
addr16
addr16
xor
fs
test
enter
lret
push
int3
data16
data16
gs
arpl
ret
mov
test
cmc
div
div
repnz
push
add
add
add
add
aad
out
fcmovnbe
stc
cli
stc
idiv
sti
loope
mov
pop
das
arpl
lret
int3
addr16
addr16
xor
data16
bound
pusha
sub
pop
sub
arpl
int3
xor
xor
data16
data16
gs
fs
pop
sub
out
repz
cmc
imul
call
lock
leave
hlt
in
stc
cli
sti
hlt
hlt
hlt
rorb
lret
int
ss
xor
xor
gs
addr16
shrb
lret
bound
int3
xor
xor
addr16
addr16
gs
arpl
mov
mov
div
out
fcmove
sub
add
add
add
icebp
fcmove
clc
out
jmp
ss
push
int
xor
xor
gs
addr16
mov
ficoml
int3
xor
xor
addr16
addr16
data16
gs
pop
sub
mov
icebp
icebp
idiv
cli
repnz
jg
add
add
add
icebp
cld
clc
cmc
cld
jmp
mov
int3
imul
push
int3
xor
xor
data16
gs
scas
movsl
cld
jmp
stos
lret
int3
xor
xor
xor
addr16
push
lds
jae
in
in
idiv
sti
cmc
out
mov
add
add
lock
std
std
fildll
iret
imul
imul
push
int3
xor
xor
xor
arpl
mov
in
cli
icebp
in
xor
xor
addr16
push
enter
imul
cli
cld
cmc
jmp
add
add
add
lock
fbld
shrb
shrl
imul
xor
xor
xor
gs
push
icebp
idiv
cli
icebp
in
fmuls
int3
xor
addr16
imul
data16
imul
cld
imul
in
mov
add
add
add
lock
std
jmp
cmpsl
mov
insb
cmp
jno
shrl
iret
imul
xor
xor
xor
xor
fs
lds
les
sti
icebp
in
xlat
xchg
bound
imul
push
out
fcmovnbe
cld
push
in
in
mov
add
add
add
icebp
sti
sti
in
mov
fidivl
jno
shrb
int
xor
xor
xor
xor
xor
xor
fs
sarl
push
loopne
into
insl
cmp
gs
imul
insl
cmp
push
into
jno
hlt
in
push
ljmp
add
add
icebp
cld
div
cli
fcmovne
fistpll
loopne
dec
shrl
into
push
lret
popa
sub
pusha
sub
fs
xor
xor
arpl
out
fcoml
insl
cmp
jo
iret
imul
cmc
repz
push
in
mov
xchg
add
add
add
icebp
fxch
clc
in
out
cli
imul
xchg
arpl
orb
dec
fdivs
iret
outsl
aas
iret
nop
jno
cmpsb
out
mov
bound
xor
arpl
loope
ret
jmp
mov
shlb
jb
fdivs
imul
stos
mov
lock
ja
bound
add
add
add
hlt
loop
sti
leave
scas
icebp
xchg
mov
jl
shlb
leave
ret
idiv
jmp
scas
lret
lret
arpl
lret
pusha
sub
jo
in
loop
stc
cld
std
fbld
fdivl
fdivrl
fdivs
clc
std
cli
stc
out
fxch
add
add
add
add
add
aam
lock
std
cli
clc
push
lock
mov
hlt
pop
in
inc
lahf
mov
cmc
idiv
std
cld
out
cltd
shlb
sarl
in
mov
in
in
in
fmull
jecxz
dec
loopne
inc
jmp
mov
push
jmp
call
loopne
jmp
sar
mov
cli
xchg
popa
loopne
pop
int
ret
cli
std
cld
cmc
icebp
sti
clc
idiv
push
sti
std
jecxz
mov
xchg
orl
data16
cmc
out
cld
cld
out
fcmovnbe
dec
inc
add
add
xorl
sar
cli
stc
jmp
ret
pushl
jmp
xlat
into
lret
out
repz
cmc
stc
sti
idiv
std
idiv
cld
idiv
cld
icebp
idiv
jmp
jae
xchg
pop
cli
xchg
pusha
notb
push
jmp
add
faddp
mov
jmp
call
pushf
dec
xchg
mov
jmp
mov
mov
shrl
jo
movsb
outsl
ljmp
cld
div
in
fmul
cmp
das
add
aam
imul
loopne
cld
in
out
jmp
call
fwait
inc
xchg
mov
mov
mov
call
scas
cld
clc
std
std
icebp
fst
jge
imul
add
in
xlat
int3
mul
loopne
in
std
in
sti
sar
test
out
mov
in
jmp
mov
jmp
push
call
std
stc
clc
icebp
fst
xchg
xchg
ljmp
div
std
std
cld
cld
std
clc
out
call
test
add
ffree
mov
out
cld
clc
hlt
cld
sti
cli
icebp
in
repnz
loop
sarl
add
dec
call
iret
repz
imul
loope
repnz
std
cli
stc
cld
sti
cld
sti
cld
div
stc
out
jmp
fcmovnbe
out
test
add
add
enter
icebp
fcmove
icebp
icebp
fst
icebp
fst
icebp
fst
icebp
fst
icebp
fcmovne
icebp
xlat
lret
leave
cld
add
aas
clc
add
pop
lock
pavgb
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
incl
add
xor
add
pusha
add
add
add
add
add
add
add
or
add
adc
add
pop
add
add
add
add
add
dec
add
add
add
arpl
add
imul
add
add
jae
add
jb
add
insl
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
and
add
cmp
add
push
add
add
add
js
add
test
add
mov
add
xchg
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
dec
inc
mov
ret
stos
sahf
in
int
clc
out
aad
sti
repz
cmc
fst
cmc
fmul
out
xlat
leave
cld
out
sar
mov
jns
push
inc
rolb
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
ret
test
cli
cmc
fst
mul
fcos
imul
in
div
in
push
icebp
out
push
repz
repz
repz
repnz
push
out
in
push
in
out
mul
cmc
fst
in
rol
sti
mov
add
lods
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
mov
sar
mul
fdivr
div
out
push
hlt
repz
hlt
hlt
push
repz
repnz
icebp
icebp
push
icebp
icebp
push
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
hlt
hlt
push
hlt
repz
icebp
out
push
out
push
fst
sarl
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
xchg
mov
clc
jmp
push
cmc
hlt
push
cmc
cmc
push
repz
icebp
icebp
push
lock
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
out
out
out
out
out
out
push
lock
repnz
hlt
hlt
push
hlt
repz
clc
in
out
cmc
fmul
mov
mov
add
add
add
lea
add
imul
add
add
and
add
or
add
add
add
add
add
or
add
push
push
or
inc
in
mov
clc
cmc
repz
cmc
cmc
push
repnz
lock
out
out
out
jmp
jmp
in
in
fcmovnu
rcl
sar
aam
aam
fdivr
call
ljmp
ljmp
jmp
jmp
in
in
in
out
out
out
push
icebp
icebp
push
hlt
hlt
push
cmc
repz
in
jmp
leave
mov
mov
add
cmpsb
add
add
add
add
add
and
add
or
add
add
add
add
add
pop
add
add
outsb
pop
push
pusha
repnz
cli
clc
out
ljmp
hlt
hlt
push
icebp
icebp
out
out
out
in
in
in
ljmp
dec
ret
mov
inc
mov
roll
inc
jge
inc
jg
dec
mov
rcrl
test
call
jmp
jmp
in
in
in
push
lock
repz
div
clc
lock
push
fxch
std
push
inc
inc
lds
add
test
add
xchg
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
movsb
mov
cmc
fmul
std
stc
hlt
repnz
div
push
repz
lock
out
out
out
jmp
jmp
out
fnstcw
imul
mov
pop
das
mov
pop
das
mov
pop
das
mov
pop
das
mov
addr16
lret
fnstcw
fdivrp
ljmp
out
out
out
push
repnz
cmc
cmc
clc
hlt
repnz
fcmovne
pop
dec
inc
movb
add
add
add
add
cmp
add
push
add
add
add
add
add
add
subl
cmc
fmul
std
cli
div
push
div
push
repz
lock
out
out
out
in
in
in
faddp
mov
mov
pop
das
mov
pusha
xor
shlb
shll
lret
call
mov
outsl
inc
pusha
xor
shlb
mov
pop
das
mov
pop
das
dec
xchg
mov
ljmp
out
out
push
icebp
icebp
push
cmc
cmc
clc
div
push
fcmove
push
dec
inc
lds
add
cmpsb
add
add
add
add
add
add
add
add
add
add
add
add
add
repnz
idiv
hlt
icebp
push
div
push
hlt
hlt
push
lock
out
out
out
jmp
jmp
inc
push
das
mov
pusha
xor
ret
inc
bound
inc
push
inc
cmpsl
cwtl
call
xlat
xlat
push
div
push
repz
fbstp
xor
ret
popa
xor
shll
shlb
mov
pop
das
mov
pushf
cmp
in
in
in
out
out
out
push
icebp
icebp
push
cmc
cmc
clc
hlt
repnz
fxch
std
push
add
add
add
add
add
and
add
or
add
add
add
add
add
adc
iret
rcr
out
call
push
cmc
cmc
push
icebp
icebp
out
out
out
call
jo
mov
pusha
xor
shll
ret
popa
xor
les
inc
arpl
inc
fs
mov
mov
in
clc
clc
clc
cli
cli
cli
stc
div
call
nop
insl
inc
arpl
inc
arpl
inc
bound
inc
popa
xor
shlb
mov
pop
das
dec
test
in
sar
in
in
in
out
out
out
push
repnz
div
clc
lock
ffreep
mov
stos
add
add
add
add
add
add
add
add
add
add
add
or
mov
mul
fdivr
cli
cli
stc
push
div
push
repnz
lock
call
sbbl
pusha
xor
shll
ret
inc
bound
inc
arpl
dec
fs
leave
gs
lret
pushl
mov
out
cld
cld
cld
std
std
std
std
std
std
fisubrs
xor
enter
fs
lds
inc
bound
inc
popa
xor
mov
pop
das
inc
sbbb
sar
in
in
in
push
lock
repz
div
push
loop
jmp
add
add
add
add
and
add
add
add
add
cmc
fcmovne
stc
cli
div
clc
clc
clc
push
hlt
hlt
push
icebp
icebp
in
ljmp
shlb
shll
les
inc
arpl
dec
fs
leave
gs
lret
dec
data16
lret
data16
mov
imul
lock
std
std
std
push
cmc
cmc
ljmp
dec
xor
lret
xor
lret
dec
gs
fs
lds
inc
popa
xor
shlb
mov
test
call
out
out
push
icebp
icebp
push
cmc
cmc
stc
div
push
fcmovne
decb
or
mov
add
pushf
add
add
add
cmp
add
adc
add
add
add
add
add
add
lds
cli
cli
cli
push
div
push
repz
out
out
call
movsl
mov
shlb
ret
inc
arpl
inc
fs
enter
lret
dec
data16
int3
data16
int3
data16
int3
data16
outsb
inc
mov
out
out
cld
cld
cld
out
in
in
fnstenv
xor
dec
xor
lret
xor
lret
dec
gs
fs
lds
inc
popa
xor
shlb
mov
fwait
jg
in
jmp
out
out
out
push
repz
div
stc
in
in
lret
in
add
add
add
add
add
pop
add
add
cmc
fmul
cld
sti
clc
idiv
stc
stc
stc
push
cmc
cmc
push
repnz
into
ret
push
xor
les
inc
fs
leave
gs
lret
data16
int3
addr16
int3
addr16
int3
addr16
int3
xor
int3
xor
int3
xor
leave
jo
fsubl
pushf
fcoms
ss
xor
int3
xor
int3
xor
int3
data16
int3
data16
lret
data16
lret
dec
fs
lds
inc
popa
xor
shlb
shlb
mov
out
push
icebp
icebp
push
cmc
cmc
stc
div
push
fst
sbb
adc
add
add
add
add
add
add
add
add
iret
mov
sti
sti
sti
push
div
push
hlt
hlt
push
in
ljmp
bound
inc
arpl
inc
gs
leave
data16
lret
addr16
dec
addr16
int3
addr16
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
data16
int3
data16
lret
data16
lret
dec
fs
lds
inc
popa
xor
shlb
lret
jmp
loop
lock
repz
div
push
out
pushl
add
add
add
add
adc
add
add
fxch
out
hlt
lock
cli
cli
cli
push
div
push
hlt
hlt
jmp
lret
les
les
inc
gs
leave
data16
lret
addr16
dec
addr16
dec
xor
int3
xor
int3
xor
int3
xor
int3
addr16
lret
insb
cmp
call
je
call
jne
dec
outsl
aas
dec
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
data16
int3
addr16
lret
data16
lret
inc
fs
les
inc
popa
xor
mov
mov
out
push
repnz
div
stc
repz
jmp
add
cmpsb
add
add
add
add
out
leave
mov
neg
sar
cld
cli
stc
cli
cli
cli
push
div
push
repz
lcall
gs
leave
xor
addr16
dec
push
xor
int3
addr16
int3
xor
int3
xor
int3
xor
int3
xor
enter
ret
mov
lret
fcmove
push
jmp
mov
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
addr16
int3
addr16
lret
data16
leave
gs
fs
ret
bound
inc
popa
xor
int3
xchg
in
in
push
repnz
cmc
cmc
stc
div
push
fst
decb
cmp
add
add
add
and
into
mov
std
std
cld
cli
cli
cli
push
div
push
out
dec
jno
inc
gs
enter
lret
push
ss
push
xor
dec
xor
int3
xor
int3
xor
int3
xor
int3
xor
jo
mov
cmc
cmc
std
std
std
push
xlat
lret
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
addr16
int3
addr16
int3
addr16
lret
data16
enter
lds
inc
bound
inc
addr16
call
icebp
icebp
push
cmc
cmc
stc
stc
stc
clc
in
call
add
xchg
add
add
add
repnz
movsb
cli
jmp
std
std
std
cli
cli
cli
push
div
jmp
mov
dec
xor
push
aaa
dec
imul
dec
addr16
dec
xor
int3
xor
int3
xor
int3
xor
int3
xor
lds
mov
repz
push
fst
dec
insl
cmp
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int
xor
int
xor
dec
data16
gs
les
inc
bound
fnsave
push
hlt
hlt
clc
clc
clc
cli
in
out
scas
mov
fwait
add
add
add
cs
xlat
enter
in
sti
sti
sti
clc
clc
clc
fisubrs
ss
push
cmp
into
push
dec
push
dec
push
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
insb
pushl
in
in
std
std
std
cli
out
ljmp
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int
xor
int
xor
dec
addr16
inc
fs
ret
bound
call
fwait
jg
repnz
hlt
hlt
clc
clc
clc
sti
repz
jmp
int3
sar
add
lahf
add
add
add
xor
fcmovne
out
std
div
cld
cld
cld
cli
cli
cli
fstps
aaa
dec
push
dec
imul
iret
imul
iret
push
dec
push
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
lret
addr16
call
xlat
xlat
sti
sti
sti
push
rol
call
jne
dec
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
addr16
int
xor
dec
push
xor
inc
fs
iret
xchg
repz
cmc
cmc
clc
clc
clc
sti
div
push
fmul
cld
add
add
add
add
neg
sar
cli
clc
std
std
std
sti
cli
cli
call
mov
int3
push
dec
insb
cmp
shrb
shrl
shrb
dec
push
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
mov
scas
lods
in
in
in
std
std
std
out
iret
mov
dec
xor
int3
xor
int3
xor
int3
xor
int3
addr16
int
xor
dec
imul
dec
xor
gs
iret
sbbb
out
out
push
div
stc
stc
stc
cld
stc
clc
push
fcmove
incb
add
lahf
add
add
add
xor
fst
cli
cli
clc
cld
div
call
xchg
iret
insl
cmp
shrl
call
outsb
cmp
shrb
call
imul
into
imul
dec
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
mov
mov
push
icebp
icebp
std
std
std
out
int
call
jbe
dec
xor
int3
xor
int3
xor
int3
addr16
int
xor
dec
imul
dec
push
xor
push
in
ljmp
cli
cli
std
sti
cli
push
fst
incl
add
popf
add
add
add
xor
cli
cli
clc
std
sti
fimull
notrack
jo
call
jo
call
outsb
cmp
shrl
iret
imul
dec
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
mov
mov
repz
std
std
std
out
int
call
jne
dec
xor
int3
xor
int
xor
into
push
aaa
dec
push
dec
push
dec
imul
call
test
lock
stc
stc
stc
cld
cld
cld
cld
sti
push
fst
incb
add
cltd
add
add
add
sub
std
stc
idiv
fists
call
jae
call
jae
call
jo
call
insl
cmp
iret
push
dec
addr16
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
mov
leave
enter
idiv
in
lds
dec
xor
int
xor
into
push
cmp
shrb
shrb
int
cmp
lret
imul
clc
cmc
hlt
cli
cli
cli
std
std
std
cli
stc
push
fcmove
std
add
add
add
add
neg
int3
out
cmc
icebp
jmp
jbe
fidivl
fidivl
fdivs
call
outsl
cmp
shrb
dec
push
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
mov
fcom
sti
sti
sti
std
std
ficomps
xor
int
xor
iret
imul
call
insl
cmp
shrl
dec
insb
cmp
int3
push
fcoms
sti
cld
cld
cld
std
clc
cmc
out
aad
sti
add
add
add
and
xlat
enter
jmp
push
lds
fidivrs
fidivrs
call
jno
call
insb
cmp
iret
imul
dec
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
lret
addr16
push
icebp
icebp
std
std
std
push
rol
dec
insb
cmp
into
push
cmp
shrb
call
outsl
cmp
shrl
call
outsb
cmp
into
insb
cmp
loope
std
std
std
cld
repz
jmp
lds
addl
add
sbb
rol
fwait
cli
ljmp
ljmp
jecxz
dec
jmp
jg
jmp
jnp
fidivl
call
outsl
cmp
shrb
dec
push
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
int3
xor
enter
loope
sar
cld
cld
cld
stc
out
call
dec
imul
call
outsl
cmp
call
jno
call
outsl
notrack
outsb
cmp
cli
in
in
mov
add
jae
add
aaa
add
add
icebp
int
stc
jecxz
std
out
pushf
jb
call
test
in
dec
fistpll
fdivs
call
insl
cmp
into
jbe
call
xchg
jne
sahf
cmp
mov
ljmp
dec
addr16
dec
xor
int3
xor
int3
xor
int3
xor
lret
push
fcmovb
mov
cld
cld
cld
std
clc
idiv
fsts
cmp
aam
cmp
xlat
jb
fdivs
xlat
jae
call
jno
call
jg
cmc
icebp
clc
jecxz
decl
add
pusha
add
add
add
add
out
leave
mov
clc
cli
cli
stc
call
mov
out
mov
in
mov
out
dec
fidivrs
call
jno
dec
mov
int
int
fdivrp
hlt
hlt
hlt
stc
in
in
shll
dec
xor
int3
xor
int3
xor
int3
xor
int3
xor
lret
outsl
inc
jmp
ror
sti
sti
sti
cli
cli
cli
push
icebp
out
cmp
xlat
jb
fidivl
fnstenv
call
je
call
cld
cli
push
fst
xor
daa
nop
add
add
add
sbb
add
push
add
add
neg
lret
repnz
push
pushf
outsb
push
xchg
pop
push
nop
pop
out
mov
out
dec
fidivrs
dec
jle
inc
mov
jmp
stc
stc
stc
std
jmp
mov
dec
xor
int3
xor
int3
xor
int3
xor
int3
xor
rcll
in
std
std
std
clc
clc
clc
ljmp
fdivs
fdivl
fidivrs
fidivrs
fdivrl
fidivrl
cld
loop
cld
hlt
lock
lret
add
add
add
xor
add
sldt
add
add
add
icebp
int
dec
clc
jecxz
ffree
cld
cwtl
data16
std
cwtl
data16
stc
xchg
arpl
repnz
call
jp
inc
mov
in
cld
div
jmp
mov
call
ja
dec
push
inc
call
xchg
jbe
in
loopne
cli
cli
cli
std
std
std
push
icebp
icebp
jmp
int3
sar
jns
fidivrs
jmp
jge
jmp
jg
jmp
jle
fistpll
out
mov
clc
in
call
add
dec
add
add
add
add
clc
repz
clc
cmc
pushl
outsl
jmp
push
jmp
push
call
mov
sarb
push
in
out
rol
in
fxch
push
hlt
repnz
cld
cld
cld
cli
cli
cli
jmp
in
jmp
lods
xchg
jmp
jl
jmp
orl
call
adcb
xchg
data16
stc
icebp
cli
idiv
repz
cld
add
add
add
xor
add
sldt
add
out
int3
mov
ljmp
jp
ljmp
jo
std
cwtl
gs
mov
iret
movsb
mov
lret
lret
lret
stc
stc
stc
jmp
ror
jmp
mov
in
xchg
mov
lock
out
mov
jmp
pop
jmp
sar
stc
call
xchg
add
add
add
add
add
add
clc
fcmovne
jecxz
hlt
lock
jmp
mov
cmp
scas
jnp
jmp
imul
mov
dec
into
into
in
in
in
sti
sti
sti
cli
cli
cli
jmp
out
jmp
mov
pop
clc
xchg
popa
stc
xchg
arpl
notl
pop
dec
mov
std
div
out
aad
testl
add
add
add
add
add
add
add
enter
loopne
std
std
cld
in
inc
xchg
inc
xchg
inc
xchg
mov
jg
jmp
cwtl
fmul
call
aam
call
aad
call
rcl
call
rcl
call
aam
call
fcmovu
loope
fdivrp
in
lret
mov
lcall
insl
jmp
insl
lcall
mov
std
clc
loope
xchg
jge
xchg
add
add
add
add
add
add
add
add
add
add
rol
nop
cli
jmp
fldt
call
mov
inc
xchg
mov
mov
clc
mov
scas
jmp
les
jmp
ret
mov
in
mov
out
shrb
ljmp
jns
ljmp
jl
ljmp
in
aad
cli
in
in
lret
mov
lret
add
add
add
add
add
push
add
add
neg
lret
lock
stc
sar
jmp
mov
jmp
mov
jmp
mov
fldt
dec
cwtl
inc
nop
mov
xchg
pushl
test
mov
mov
mov
mov
mov
dec
mov
cld
repz
call
add
cmp
add
pop
add
add
add
add
neg
into
repz
call
push
cmc
ret
icebp
mov
jmp
mov
fildll
fsubs
call
mov
call
lahf
dec
fwait
call
test
std
div
push
fxch
testl
add
pop
add
add
add
add
clc
loope
out
jmp
cli
jmp
call
dec
stc
push
ret
lock
jmp
out
push
sar
stc
cld
icebp
in
push
fcmove
cmc
push
inc
inc
inc
add
add
add
push
add
add
neg
lret
call
cli
std
cld
cli
jmp
ljmp
and
add
sldt
add
hlt
rol
mov
loope
sti
cld
repnz
cld
cmc
lock
loopne
ffreep
mov
add
add
add
add
add
add
add
add
add
add
leave
mov
neg
into
in
cld
hlt
out
std
cld
std
cld
std
cmc
icebp
stc
in
repz
jmp
add
add
add
add
add
add
out
int
pop
clc
loop
loop
std
cli
in
in
std
div
cld
sti
std
cld
std
div
cli
in
in
clc
loop
std
hlt
fcmovne
ljmp
add
add
push
add
add
add
add
lock
mov
test
loope
jmp
loop
cld
stc
out
sti
out
out
cld
hlt
out
std
div
std
div
std
div
cld
hlt
lock
sti
out
jmp
clc
jecxz
cld
clc
loopne
lock
xlat
stos
icebp
int
inc
icebp
int
inc
repz
jns
fcmove
mov
clc
loopne
in
clc
loope
jmp
loopne
in
clc
jecxz
fcmove
ret
repz
jl
into
mov
or
add
add
lock
pop
incl
add
rolb
add
add
incl
add
incl
add
add
add
cld
add
add
pop
add
cld
add
add
pop
add
clc
add
add
sldt
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
clc
add
add
sldt
cld
add
add
pop
add
incb
add
add
add
incl
add
add
add
addb
add
add
inc
add
add
add
push
add
pop
incl
add
cld
add
incl
add
incl
add
add
add
add
add
add
add
add
add
incl
add
add
sti
incl
div
testl
push
testl
mul
out
push
testl
out
out
add
xlat
add
inc
inc
add
lret
movb
xlat
add
fcmovnbe
add
jecxz
add
jmp
add
ror
add
xlat
into
add
add
lret
movb
mov
add
mov
movb
xlat
into
add
add
out
add
repz
add
jmp
add
xchg
mov
test
mov
fiadds
out
add
imul
add
jno
add
jno
add
insl
inc
add
jns
add
jne
add
lcall
out
stos
mov
sahf
test
out
xchg
add
stos
xchg
add
mov
mov
rol
add
fcmovne
add
jecxz
add
xor
popa
xor
insl
cmp
into
imul
add
jne
add
jge
add
jno
add
xchg
out
push
add
mov
out
mov
call
arpl
negl
push
add
mov
pop
add
mov
jmp
imul
xchg
out
mov
imul
lcall
mov
jnp
fidivs
lods
add
sarl
add
out
out
mov
imul
add
jno
add
insl
cmp
fidivrs
add
jne
add
orb
xchg
pop
add
adcb
lcall
out
sahf
jae
into
mov
into
mov
mov
xchg
jae
pushl
jnp
xchg
jnp
cmpsb
mov
test
mov
fidivrs
mov
out
iret
mov
add
mov
jmp
jnp
ljmp
test
into
cmpsb
mov
out
fcmovne
add
jecxz
add
jmp
add
mov
add
mov
test
ffreep
add
xchg
add
imul
add
sti
testl
call
lods
add
rcrl
fildll
add
jmp
add
xrelease
sti
add
sti
movb
jmp
add
out
add
add
xlat
add
iret
into
add
div
add
out
out
add
out
add
incl
add
add
add
push
push
push
push
push
add
add
add
add
push
and
and
jle
push
push
add
add
add
jo
add
add
add
pop
push
pop
pop
xor
orb
add
and
inc
pop
pop
insb
xchg
add
cmp
pop
pop
or
push
orb
pop
cmp
daa
pop
cmp
pop
push
sbbb
add
pop
pop
cmp
push
adcb
xor
push
and
sbbb
cmp
sbb
daa
cmp
add
push
gs
insb
add
dec
add
inc
inc
cwtl
add
add
push
add
addb
jp
and
or
aaa
add
addb
mov
addb
add
add
addb
pop
addb
add
add
add
add
addb
add
add
pop
pop
imul
add
addb
cmp
add
cmp
add
sub
add
pop
cmp
add
cmp
add
sbb
add
sub
loopne
jb
clc
aas
cmp
sub
add
sbb
add
xor
add
add
or
incl
add
add
sti
incl
div
testl
push
testl
mul
out
push
testl
out
out
add
xlat
add
inc
inc
add
lret
movb
xlat
add
fcmovnbe
add
jecxz
add
jmp
add
ror
add
xlat
into
add
add
lret
movb
mov
add
mov
movb
xlat
into
add
add
out
add
repz
add
jmp
add
xchg
mov
test
mov
fiadds
out
add
imul
add
jno
add
jno
add
insl
inc
add
jns
add
jne
add
lcall
out
stos
mov
sahf
test
out
xchg
add
stos
xchg
add
mov
mov
rol
add
fcmovne
add
jecxz
add
xor
popa
xor
insl
cmp
into
imul
add
jne
add
jge
add
jno
add
xchg
out
push
add
mov
out
mov
call
arpl
negl
push
add
mov
pop
add
mov
jmp
imul
xchg
out
mov
imul
lcall
mov
jnp
fidivs
lods
add
sarl
add
out
out
mov
imul
add
jno
add
insl
cmp
fidivrs
add
jne
add
orb
xchg
pop
add
adcb
lcall
out
sahf
jae
into
mov
into
mov
mov
xchg
jae
pushl
jnp
xchg
jnp
cmpsb
mov
test
mov
fidivrs
mov
out
iret
mov
add
mov
jmp
jnp
ljmp
test
into
cmpsb
mov
out
fcmovne
add
jecxz
add
jmp
add
mov
add
mov
test
ffreep
add
xchg
add
imul
add
sti
testl
call
lods
add
rcrl
fildll
add
jmp
add
xrelease
sti
add
sti
movb
jmp
add
out
add
add
xlat
add
iret
into
add
div
add
out
out
add
out
add
incl
add
add
add
add
push
push
push
push
push
push
push
add
add
add
add
add
add
add
push
push
xor
adc
or
add
add
add
add
add
add
add
add
add
push
push
add
add
add
add
push
add
add
sbb
push
add
add
add
xor
jo
pop
sub
push
jae
add
and
add
add
add
pop
pop
inc
addb
pop
pop
pop
push
add
add
add
add
sbb
pop
pop
cmp
add
cmp
pop
pop
push
add
push
add
add
add
inc
cmp
cmp
pop
jo
cmp
cmp
pop
jo
add
add
pop
or
xor
cmp
cmp
cmp
pop
sub
pop
add
sub
cmp
jae
dec
cmp
cmp
cmp
pop
push
add
add
pop
pop
cmp
cmp
xchg
add
cmp
cmp
pop
imul
pop
cmp
cmp
and
cmp
sub
pop
add
cmp
cmp
cmp
sub
add
dec
cmp
cmp
pop
add
sub
cmp
cmp
addb
sub
or
push
add
add
inc
aas
pop
pop
cmp
cmp
cmp
add
cmp
insb
add
push
add
add
push
inc
sub
cmp
sbb
daa
xor
pop
push
add
cwtl
add
adc
xor
add
pop
aas
dec
or
orb
add
add
jno
xor
add
dec
arpl
add
or
mov
add
cltd
cltd
cltd
and
fs
jb
add
or
pop
add
add
sbb
jns
cmp
add
cmp
add
add
add
add
add
mov
pop
add
add
add
add
pop
pop
add
add
add
add
add
add
pop
add
add
add
add
add
pop
pop
pop
add
add
add
xchg
pop
add
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
sbb
add
lock
cmp
add
pop
rolb
jle
add
cmp
add
add
add
aaa
add
add
add
cmp
add
cmp
add
add
add
pop
add
add
add
add
add
add
addb
pop
addb
sbb
add
cmp
add
add
add
aas
clc
add
incb
incl
sub
add
and
add
inc
add
add
add
add
incl
add
add
sti
incl
div
testl
push
testl
mul
out
push
testl
out
out
add
xlat
add
inc
inc
add
lret
movb
xlat
add
fcmovnbe
add
jecxz
add
jmp
add
ror
add
xlat
into
add
add
lret
movb
mov
add
mov
movb
xlat
into
add
add
out
add
repz
add
jmp
add
xchg
mov
test
mov
fiadds
out
add
imul
add
jno
add
jno
add
insl
inc
add
jns
add
jne
add
lcall
out
stos
mov
sahf
test
out
xchg
add
stos
xchg
add
mov
mov
rol
add
fcmovne
add
jecxz
add
xor
popa
xor
insl
cmp
into
imul
add
jne
add
jge
add
jno
add
xchg
out
push
add
mov
out
mov
call
arpl
negl
push
add
mov
pop
add
mov
jmp
imul
xchg
out
mov
imul
lcall
mov
jnp
fidivs
lods
add
sarl
add
out
out
mov
imul
add
jno
add
insl
cmp
fidivrs
add
jne
add
orb
xchg
pop
add
adcb
lcall
out
sahf
jae
into
mov
into
mov
mov
xchg
jae
pushl
jnp
xchg
jnp
cmpsb
mov
test
mov
fidivrs
mov
out
iret
mov
add
mov
jmp
jnp
ljmp
test
into
cmpsb
mov
out
fcmovne
add
jecxz
add
jmp
add
mov
add
mov
test
ffreep
add
xchg
add
imul
add
sti
testl
call
lods
add
rcrl
fildll
add
jmp
add
xrelease
sti
add
sti
movb
jmp
add
out
add
add
xlat
add
iret
into
add
div
add
out
out
add
out
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
add
add
add
add
add
add
add
add
add
add
add
adcb
orb
add
add
add
add
add
add
add
add
add
or
cwtl
cwtl
add
add
or
push
push
add
add
add
add
add
add
add
or
add
xchg
xchg
add
add
and
add
add
add
add
add
add
cmp
dec
push
sbb
xor
add
add
add
or
or
pop
pop
es
inc
pop
pop
pop
push
addb
jbe
push
add
add
add
add
adc
pop
pop
pop
sub
cltd
or
pop
pop
es
add
jbe
add
add
add
add
cwtl
cwtl
sbb
pop
cmp
cmp
add
jne
cmp
pop
pop
push
add
sbb
add
add
cwtl
adc
cmp
cmp
cmp
xchg
add
jo
cmp
cmp
pop
push
cltd
add
push
add
add
add
cwtl
add
cmp
cmp
cmp
push
xor
cmp
cmp
cmp
cmp
cwtl
sbb
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cwtl
or
add
add
add
pop
cmp
cmp
push
pop
pop
sub
cmp
cmp
cwtl
and
pop
add
cmp
pop
cmp
cmp
cmp
add
cmp
cmp
cmp
pop
push
add
sbb
xchg
sbb
pop
daa
pop
cmp
cmp
cmp
add
xor
cmp
cmp
pop
cmp
inc
and
jbe
add
jae
add
cmp
cmp
cmp
add
dec
cmp
cmp
pop
pop
cmp
and
add
add
pop
cmp
pop
cmp
cmp
cmp
xor
cmp
cmp
cmp
add
jae
add
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
pop
cmp
add
jae
add
pop
aas
pop
daa
cmp
cmp
cmp
cmp
add
jle
cmp
cmp
sub
and
add
jae
add
popa
inc
aas
cmp
cmp
cmp
cmp
cmp
add
dec
cmp
pop
dec
or
jbe
add
jae
add
dec
inc
inc
pop
pusha
push
xor
sub
sbb
add
daa
pop
aas
pop
xor
add
sbb
inc
inc
sub
cmp
cmp
add
jo
popa
popa
aas
push
add
jge
add
add
add
dec
inc
fs
and
gs
add
cltd
dec
aas
inc
aas
xor
add
push
add
add
jae
add
cmp
inc
dec
xchg
add
add
xchg
add
dec
xchg
add
add
add
add
add
jnp
js
adc
cwtl
adc
inc
inc
cmp
add
cmp
add
add
add
add
add
pop
pop
adcb
pop
jns
js
lea
add
cmp
add
add
add
jae
add
add
test
orb
cmp
add
add
add
add
jae
add
add
xchg
xchg
nop
mov
add
add
sbb
add
add
add
add
jae
or
add
add
add
add
add
add
add
jae
add
add
add
add
add
add
add
jbe
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
jle
pop
add
add
pop
jbe
jae
add
add
add
add
add
add
add
add
add
add
jae
jae
jae
jae
jae
add
add
add
add
add
add
inc
pop
incl
pop
incb
add
clc
add
jg
add
aas
loopne
add
loopne
add
rolb
xadd
add
addb
pop
addb
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
pop
addb
pop
rolb
xadd
add
loopne
add
lock
aas
clc
add
jg
add
incl
pop
inc
pop
ljmp
add
add
add
add
add
add
or
incl
add
add
sti
incl
div
testl
push
testl
mul
out
push
testl
out
out
add
xlat
add
inc
inc
add
lret
movb
xlat
add
fcmovnbe
add
jecxz
add
jmp
add
ror
add
xlat
into
add
add
lret
movb
mov
add
mov
movb
xlat
into
add
add
out
add
repz
add
jmp
add
xchg
mov
test
mov
fiadds
out
add
imul
add
jno
add
jno
add
insl
inc
add
jns
add
jne
add
lcall
out
stos
mov
sahf
test
out
xchg
add
stos
xchg
add
mov
mov
rol
add
fcmovne
add
jecxz
add
xor
popa
xor
insl
cmp
into
imul
add
jne
add
jge
add
jno
add
xchg
out
push
add
mov
out
mov
call
arpl
negl
push
add
mov
pop
add
mov
jmp
imul
xchg
out
mov
imul
lcall
mov
jnp
fidivs
lods
add
sarl
add
out
out
mov
imul
add
jno
add
insl
cmp
fidivrs
add
jne
add
orb
xchg
pop
add
adcb
lcall
out
sahf
jae
into
mov
into
mov
mov
xchg
jae
pushl
jnp
xchg
jnp
cmpsb
mov
test
mov
fidivrs
mov
out
iret
mov
add
mov
jmp
jnp
ljmp
test
into
cmpsb
mov
out
fcmovne
add
jecxz
add
jmp
add
mov
add
mov
test
ffreep
add
xchg
add
imul
add
sti
testl
call
lods
add
rcrl
fildll
add
jmp
add
xrelease
sti
add
sti
movb
jmp
add
out
add
add
xlat
add
iret
into
add
div
add
out
out
add
out
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
push
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
aaa
aaa
adc
mov
mov
adc
aaa
aaa
aaa
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
cwtl
add
add
add
add
add
cwtl
mov
and
aaa
push
push
add
add
add
add
add
add
add
add
add
add
add
or
add
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
cwtl
cwtl
and
aaa
aaa
push
add
add
add
add
add
add
add
add
add
add
or
add
cltd
lcall
add
cltd
cltd
add
or
aaa
push
add
add
add
add
add
add
add
add
add
or
cltd
cltd
add
imul
xor
adc
add
cwtl
mov
aaa
push
add
add
add
add
add
add
add
add
or
cltd
cltd
and
and
pop
pop
pop
pop
pop
pop
pop
sub
and
cltd
cltd
add
or
aaa
push
add
add
add
add
add
add
add
or
cltd
cltd
je
pop
pop
pop
cmp
sub
push
cmp
pop
push
jae
cltd
cltd
add
or
and
add
add
add
add
add
add
or
cltd
add
cmp
cmp
and
cmp
cmp
push
and
cltd
add
or
or
add
add
add
add
cltd
and
pop
cmp
cmp
cmp
xchg
lcall
cmp
cmp
and
mov
or
add
add
add
or
and
cmp
cmp
cmp
cmp
push
xchg
cltd
add
add
cmp
pop
cmp
cmp
pop
dec
and
jle
push
add
add
add
add
or
add
cmp
cmp
cmp
push
cmp
cwtl
add
cmp
cmp
pop
push
and
add
or
add
add
adc
cltd
jo
cmp
pop
cmp
cmp
cmp
sub
cmp
cmp
cmp
pop
cmp
cmp
cltd
add
pop
aaa
push
add
add
add
adc
sbb
cmp
pop
cmp
cmp
cmp
cmp
sub
das
pop
cmp
cmp
cmp
cmp
cmp
cmp
cltd
add
or
or
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
or
cwtl
push
aaa
push
add
add
or
add
pop
cmp
cmp
cmp
cmp
cmp
bound
cmp
cmp
cmp
cmp
cmp
cmp
jae
add
push
aaa
push
add
add
or
add
cmp
pop
pop
cmp
cmp
cmp
sub
sbb
sbb
cmp
cmp
cmp
cmp
cmp
add
or
or
jle
add
pop
pop
pop
pop
cmp
cmp
cmp
sub
cwtl
add
adc
cmp
cmp
cmp
cmp
cmp
and
or
adc
add
pop
pop
pop
pop
cmp
cmp
cmp
sub
add
add
cmp
cmp
pop
cmp
cmp
cmp
cwtl
add
aaa
push
add
or
add
add
cmp
cmp
cmp
cmp
cmp
cltd
add
pop
cmp
cmp
cmp
cmp
cmp
pop
cmp
cwtl
add
or
add
add
pop
cmp
cmp
cmp
cmp
cmp
and
bound
cmp
cmp
cmp
pop
cmp
push
add
add
adc
add
add
dec
cmp
pop
cmp
cmp
cmp
cmp
dec
cmp
inc
cmp
cmp
cmp
pop
pop
cmp
or
add
adc
add
or
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
add
add
jne
cmp
cmp
pop
pop
pop
pop
pop
cmp
cwtl
add
adc
add
adc
add
add
pop
pop
cmp
pop
cmp
cmp
cmp
cmp
cmp
imul
bound
cmp
pop
pop
cmp
mov
add
aaa
push
add
or
add
add
sub
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
add
add
cmp
cmp
add
adc
or
add
xor
aas
aas
sub
pop
cmp
cmp
cmp
cmp
cmp
cmp
add
add
outsb
cmp
pop
cmp
cmp
cmp
xchg
push
add
or
add
add
sub
aas
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
add
add
ss
pop
daa
cmp
cmp
pusha
xor
add
pop
or
adc
add
jg
inc
inc
sub
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
add
add
gs
cmp
pop
pop
cmp
jne
add
pop
or
jle
add
add
inc
arpl
cmp
insb
xor
outsb
cmp
cmp
cmp
cmp
xchg
cmp
sub
pop
or
add
adc
add
add
adc
add
add
inc
inc
arpl
imul
cmp
sub
add
mov
sub
aas
aas
bound
add
add
aaa
push
add
add
or
add
add
dec
fs
arpl
xchg
cltd
add
add
cmp
cmp
cmp
add
and
popa
popa
sub
add
add
or
add
jle
add
add
popa
and
sbb
add
add
sub
inc
inc
inc
sub
add
add
adc
add
add
add
or
add
add
insl
js
cs
dec
xchg
cwtl
add
add
jbe
jge
add
add
lcall
dec
or
add
add
add
add
or
add
add
cmpl
xchg
add
add
add
add
add
add
inc
inc
inc
cmp
add
add
push
add
add
add
add
or
add
add
xchg
addl
xchg
cltd
add
add
add
add
add
inc
inc
fs
add
add
or
add
add
add
or
add
add
xchg
test
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jne
js,pn
js
jb
add
add
push
push
add
add
add
add
add
or
add
add
add
mov
insl
push
pop
je
je
pop
insl
jp
jns
jns
lea
add
add
pop
or
add
add
add
add
or
add
add
add
nop
mov
test
addb
add
add
add
or
add
add
add
add
add
or
add
add
add
add
mov
mov
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
mov
add
add
add
pop
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
or
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
pop
xchg
or
or
jbe
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
or
add
add
add
add
add
add
add
add
add
add
incl
add
inc
pop
incl
add
incb
add
incl
add
clc
add
aas
incl
add
loopne
add
incl
add
rolb
pop
incl
add
addb
add
add
incl
add
add
add
incb
add
add
add
cld
add
add
jg
add
add
add
aas
add
lock
add
pop
add
lock
add
pop
add
loopne
add
add
add
rolb
add
sldt
rolb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
addb
add
pop
add
addb
add
pop
add
rolb
add
sldt
rolb
add
sldt
loopne
add
add
add
loopne
add
add
add
lock
add
aas
add
lock
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
addb
ud0
add
loopne
add
incl
add
clc
add
incl
add
incb
add
incl
add
jmp
ud0
add
sub
add
adc
add
and
add
add
add
add
addb
add
add
addb
addb
add
add
add
add
add
incl
incl
add
incl
incl
incl
add
incl
adc
pop
ja
jno
adc
pop
js
incl
incl
xchg
pop
popl
inc
clc
jno
hlt
dec
je
dec
jno
hlt
int3
dec
dec
xchg
dec
jg
idivl
int3
jg
int3
idivl
int3
enter
idivl
int3
int3
jl
idivl
jg
jl
xchg
cld
jg
dec
dec
jno
int3
push
clc
jno
js
int3
int3
incl
incl
pop
ja
jno
adc
pop
pushl
pop
int3
dec
rolb
int3
addb
jno
add
int3
add
jl
add
jno
add
int3
add
testl
add
add
addb
jno
add
pop
enter
notl
sub
add
sbb
add
xor
add
add
add
add
addb
add
add
addb
addb
add
add
add
add
add
incl
incl
add
incl
incl
incl
add
incl
adc
adc
ja
ja
adc
adc
adc
adc
clc
xchg
adc
adc
ja
incl
pop
incl
adc
adc
hlt
dec
ja
inc
clc
jno
adc
dec
inc
push
dec
dec
pushl
pop
popl
incl
dec
dec
mov
js
inc
int3
int3
int3
int3
les
jno
hlt
int3
les
pushl
hlt
int3
mov
dec
inc
pushl
hlt
int3
dec
int3
test
jg
int3
int3
int3
enter
pushl
hlt
int3
int3
int3
int3
test
clc
dec
int3
int3
int3
jg
int3
dec
clc
jno
clc
dec
movl
popl
les
adc
jg
inc
push
inc
pushl
adc
test
incl
jno
adc
incl
adc
adc
ja
incl
adc
ja
incl
adc
adc
ja
ja
adc
adc
adc
adc
adc
adc
adc
adc
incl
dec
cld
add
lock
int3
loopne
rolb
int3
rolb
int3
addb
int3
addb
adc
add
int3
add
add
add
add
add
add
add
add
add
add
int3
addb
adc
add
inc
add
int3
loopne
movups
add
test
add
incl
inc
call
sub
add
and
add
inc
add
add
add
add
addb
add
add
addb
addb
add
add
add
add
add
incl
incl
add
incl
incl
incl
add
incl
adc
adc
adc
ja
ja
adc
adc
adc
adc
adc
pop
ja
clc
xchg
adc
adc
adc
adc
js
decl
adc
adc
js
decl
adc
pop
decl
incl
adc
clc
inc
ja
les
clc
jno
adc
pop
clc
inc
dec
js
jl
inc
dec
pushl
adc
js
test
les
je
push
jno
adc
dec
dec
dec
js
jl
dec
dec
dec
clc
jno
pop
testl
les
ja
pop
incl
dec
int3
dec
dec
inc
popl
int3
int3
enter
les
dec
int3
enter
dec
int3
dec
dec
divl
clc
dec
int3
int3
int3
enter
int3
dec
int3
dec
clc
jno
clc
dec
int3
int3
int3
enter
int3
int3
int3
dec
clc
jno
clc
dec
int3
int3
int3
int3
jg
dec
int3
int3
int3
dec
clc
jno
clc
dec
int3
int3
int3
int3
push
int3
int3
int3
dec
clc
jno
clc
dec
int3
int3
int3
int3
int3
jg
dec
int3
int3
dec
clc
jno
clc
dec
int3
int3
int3
int3
int3
jg
jl
int3
dec
clc
jno
incl
js
jl
les
test
decl
les
clc
dec
clc
ja
decl
incl
dec
int3
jg
clc
int3
int3
dec
clc
jno
adc
test
pushl
clc
jno
adc
incl
ja
int3
les
xchg
adc
adc
mov
int3
les
pushl
adc
adc
decl
incl
adc
js
clc
jno
adc
adc
adc
js
clc
ja
adc
adc
adc
adc
ja
clc
xchg
adc
adc
adc
adc
adc
ja
ja
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
pop
incl
add
cld
add
jg
add
aas
lock
pop
loopne
add
rolb
pop
rolb
pop
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rolb
pop
loopne
add
lock
pop
clc
add
aas
cld
add
jg
add
incl
pop
ljmp
add
add
add
add
add
add
add
add
addb
add
add
addb
addb
add
add
add
add
add
incl
incl
add
incl
incl
incl
add
incl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
adc
adc
adc
adc
adc
adc
adc
add
clc
addb
adc
adc
adc
adc
adc
adc
mov
clc
addb
adc
adc
adc
adc
adc
mov
clc
adcb
adc
adc
adc
adc
js
clc
inc
inc
inc
inc
dec
clc
add
adc
adc
adc
adc
incl
inc
inc
incl
adc
adc
js
clc
inc
les
les
clc
add
adc
adc
adc
clc
inc
dec
dec
inc
decl
inc
dec
incl
adc
js
incl
push
les
adc
adc
clc
dec
dec
dec
dec
jg
push
dec
dec
dec
dec
dec
incl
pop
incl
push
push
adc
adc
js
clc
dec
dec
dec
dec
dec
inc
jl
dec
dec
dec
dec
dec
clc
add
adc
jg
mov
les
les
incl
adc
pop
incl
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
incl
clc
inc
int3
int3
int3
dec
movl
les
adcb
pop
clc
dec
dec
int3
dec
dec
int3
decl
int3
dec
dec
dec
dec
push
adc
pop
decl
decl
dec
les
lock
js
test
int3
int3
dec
int3
dec
push
int3
int3
int3
dec
int3
int3
clc
add
js
test
int3
int3
int3
inc
push
int3
dec
int3
dec
dec
inc
clc
add
jg
test
int3
int3
dec
dec
int3
int3
jg
decl
int3
int3
int3
les
incl
int3
int3
jg
push
int3
int3
int3
les
incl
int3
int3
decl
int3
int3
les
incl
int3
int3
int3
jg
push
int3
int3
int3
int3
les
incl
int3
int3
int3
decl
int3
les
incl
int3
int3
int3
int3
jg
decl
int3
les
incl
int3
int3
int3
int3
push
int3
int3
int3
les
decl
int3
int3
int3
int3
int3
push
int3
int3
int3
dec
push
adc
pop
clc
dec
int3
int3
ja
jl
int3
push
int3
int3
int3
dec
push
adc
pop
clc
dec
int3
int3
push
int3
int3
push
int3
int3
int3
dec
incl
clc
test
int3
clc
int3
int3
push
int3
int3
les
adc
mov
pushl
jg
push
int3
int3
dec
incl
adc
adc
mov
jg
push
int3
int3
dec
clc
add
adc
pop
clc
test
int3
jg
decl
mov
lock
adc
pop
decl
push
int3
int3
dec
incl
adc
clc
test
int3
push
dec
int3
les
adc
adc
pop
decl
ja
ja
int3
int3
dec
incl
adc
adc
decl
int3
int3
int3
int3
inc
clc
jno
adc
adc
adc
pop
incl
les
incl
adc
adc
adc
clc
mov
inc
dec
pushl
adc
adc
adc
adc
pop
incl
adc
adc
adc
adc
incl
adc
adc
adc
adc
adc
clc
xchg
adc
adc
adc
adc
adc
adc
adc
mov
jno
adc
adc
adc
adc
adc
adc
adc
adc
ja
ja
jno
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
incl
add
incl
add
inc
pop
incl
add
cld
add
incl
add
lock
jg
add
inc
add
pop
incl
add
addb
ud0
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
jg
add
add
add
aas
add
loopne
add
add
add
rolb
add
pop
add
rolb
add
pop
add
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
rolb
add
pop
add
rolb
add
pop
add
loopne
add
add
add
loopne
add
add
add
lock
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
addb
ud0
add
rolb
pop
incl
add
lock
jg
add
cld
add
incl
add
inc
pop
incl
add
incl
add
add
add
add
add
add
add
and
add
add
andb
or
add
and
add
xor
add
das
add
add
add
add
add
add
add
and
add
xor
add
das
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
and
add
add
add
add
add
cmp
add
or
add
or
sbb
sbb
sub
sub
adc
adc
aas
aas
aas
incl
add
popf
add
add
add
or
add
add
xor
xor
adc
adc
sub
sub
sbb
sbb
add
add
add
add
add
add
adc
adc
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
add
add
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
dec
sub
sub
cmp
cmp
cmp
cmp
cmp
cmp
adc
adc
add
add
add
add
add
add
adc
adc
pusha
pusha
pusha
jle
jle
xor
xor
adc
adc
aas
aas
aas
incl
add
mov
add
add
add
add
add
add
add
add
sbb
sbb
adc
adc
inc
inc
inc
decl
inc
inc
call
adc
call
adc
incl
add
xchg
add
add
add
add
add
add
out
out
out
jmp
and
incl
add
jns
jns
sahf
sahf
sahf
jmp
mov
mov
jmp
mov
mov
incl
add
call
push
incl
add
incl
add
incl
add
xchg
add
add
inc
inc
inc
call
push
call
cmpsb
cmpsb
call
xor
add
add
lock
in
in
out
jmp
jmp
out
out
in
in
loop
loop
fdivrp
fcmovu
fcomp
fdivr
mov
sub
jmp
pusha
decl
cmpsb
lcall
add
add
add
add
add
add
add
inc
decl
aas
cmp
cmp
pusha
pusha
pusha
decl
adc
data16
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
lcallw
pop
jmp
and
decl
dec
dec
ljmp
sub
call
push
decl
sbb
add
add
add
cmp
cmp
cltd
cltd
cltd
inc
rol
rol
inc
rol
rol
ljmp
push
lods
lods
lods
ljmp
lods
lods
ljmp
lods
lods
ljmp
lods
lods
ljmp
lods
lods
ljmp
aas
aas
inc
rol
rol
inc
rol
rol
pushl
lcall
pop
incl
add
aas
add
add
cmp
cmp
mov
mov
loop
loop
mov
dec
dec
decl
addb
ret
ret
ret
call
aad
call
aad
call
aad
call
aad
call
aad
aas
aas
aas
decl
mov
pushl
loop
pushl
push
push
incl
add
inc
add
add
pusha
pusha
pusha
lcall
pop
pushl
xor
ljmp
mov
dec
inc
add
add
add
add
scas
scas
scas
decl
dec
dec
enter
fwait
fwait
ljmp
push
pop
pop
pop
ljmp
sub
incl
add
dec
add
add
add
add
rol
mov
data16
cmp
incl
add
jae
add
inc
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
dec
dec
ljmp
push
decl
dec
incl
add
mov
add
add
add
add
add
or
add
or
pushl
je
call
add
mov
add
add
add
add
add
add
add
add
add
add
mov
fdivr
cld
cld
cld
incl
add
mov
add
add
add
add
add
es
lret
lret
call
mov
dec
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
lret
into
into
into
call
rcl
call
rcl
fcmovu
add
add
rcl
sar
addb
lcall
outsb
outsb
pushl
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
xchg
mov
mov
pushl
add
xchg
add
add
enter
mov
sar
rol
pushl
mov
ljmp
test
jmp
mov
sahf
lcall
cltd
lcall
xchg
xchg
call
mov
decl
mov
decl
je
call
add
add
add
mov
aam
rcl
sar
into
into
into
dec
lret
lret
inc
inc
rol
mov
mov
mov
mov
mov
scas
scas
scas
ljmp
movsb
movsb
jmp
sahf
sahf
lcall
xchg
xchg
call
xchg
call
jl
mov
add
add
add
mov
fcomp
fdivr
into
into
into
dec
int
dec
int3
int3
dec
lret
lret
dec
lret
leave
leave
leave
dec
enter
mov
inc
inc
ret
ret
inc
ret
rol
inc
rol
mov
mov
mov
decl
ja
incl
add
mov
add
add
add
add
mov
ret
int3
int3
decl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushf
movsb
scas
jmp
mov
pushl
mov
pushl
lods
lods
pushl
lods
lods
mov
mov
add
add
add
add
add
add
outsb
outsb
outsb
fdivrp
rol
pushl
lret
dec
lret
lret
call
push
hlt
hlt
inc
in
in
mov
idiv
rcl
sar
cld
cld
cld
dec
enter
out
out
out
in
in
in
fdivrp
enter
mov
xchg
xchg
jmp
data16
mov
add
xchg
add
add
rcl
sar
mov
jmp
pushf
pushf
pushf
call
mov
lret
dec
leave
leave
inc
mov
dec
lret
lret
inc
dec
lret
lret
inc
ret
ret
inc
mov
dec
leave
leave
inc
ret
ret
ret
inc
ret
ret
inc
lret
lcall
xchg
xchg
pushl
lcall
add
xchg
add
add
enter
xchg
xchg
xchg
out
out
out
incl
mov
inc
ret
ret
inc
mov
call
rcl
jmp
jmp
fdivrp
jmp
jmp
int
int
lock
aad
aad
out
out
loop
loop
fcomp
fdivr
lcall
cltd
cltd
jle
jle
mov
add
add
add
lods
lods
push
icebp
icebp
jl
jl
scas
scas
scas
call
rcl
jmp
in
jmp
in
jmp
loop
jmp
loop
jmp
in
jmp
loop
jmp
in
jmp
loop
jmp
in
jmp
loop
jmp
in
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
in
jmp
fwait
fwait
decl
jl
incl
add
xchg
add
add
cltd
cltd
cltd
inc
rol
cmc
cmc
cmc
ljmp
push
sahf
sahf
sahf
pushl
rol
rol
inc
ret
lret
inc
rol
inc
rol
lret
inc
rol
int3
int3
int3
inc
rol
ret
ret
ret
dec
enter
enter
inc
rol
xchg
popf
test
sahf
sahf
sahf
call
jno
incl
add
mov
add
add
mov
aad
div
idiv
insw
jne
mov
mov
sar
rol
dec
int
inc
rol
enter
rol
dec
into
into
inc
ret
ret
call
rcl
inc
rol
dec
int3
int3
dec
lret
inc
rol
cmpsb
mov
jmp
sahf
sahf
jmp
incw
add
mov
add
add
add
add
outsb
outsb
outsb
push
hlt
hlt
sti
sti
sti
jmp
pushl
aad
out
out
call
call
out
call
out
call
out
jmp
out
jmp
out
call
call
out
out
out
out
out
call
aad
ljmp
mov
jno
cmpsb
cmpsb
cmpsb
incl
add
xchg
add
add
add
add
data16
decl
mov
cmpsb
cmpsb
cmpsb
ljmp
mov
pushl
mov
sar
mov
mov
mov
mov
aam
aam
mov
fcomp
pushl
sar
rcl
dec
int3
int3
inc
ret
mov
mov
mov
mov
cmpsb
pushl
lcall
add
xchg
add
add
enter
xchg
xchg
xchg
decl
mov
mov
decl
mov
incl
test
addb
incl
addb
jle
jle
jl
jl
jl
jl
jl
jl
jp
jp
ret
ljmp
mov
incl
add
xchg
add
add
stos
stos
stos
pushl
sti
sti
sti
push
div
push
icebp
icebp
out
out
out
jmp
jmp
call
loop
fdivrp
fdivr
fcomp
fdivr
rcl
sar
into
into
into
dec
lret
lret
dec
enter
rol
mov
mov
mov
mov
mov
scas
scas
scas
lcall
ja
incl
add
xchg
add
add
xchg
xchg
xchg
inc
mov
std
std
std
stc
stc
stc
clc
clc
clc
push
div
push
cmc
cmc
push
icebp
icebp
push
lock
out
out
out
in
in
out
jmp
call
out
in
in
loop
loop
loopne
loopne
fdivrp
fdivrp
fcmovu
fcomp
fdivr
jmp
incw
add
outsl
add
add
add
add
add
and
add
xor
add
xor
fcmovu
in
in
in
decl
mov
xchg
xchg
xchg
decl
mov
mov
decl
mov
mov
decl
mov
mov
decl
mov
mov
decl
mov
mov
incl
add
add
add
add
add
add
add
add
xchg
add
add
mov
add
jle
add
sub
add
es
jl
jns
jns
jl
jl
mov
cmc
jl
jl
add
add
add
add
mov
pushf
pushf
pushl
pushf
pushf
ljmp
push
mov
add
daa
add
add
jno
jno
ljmp
in
in
in
call
xchg
incl
add
jle
add
sub
add
add
push
scas
scas
scas
pushl
mov
jmp
fwait
fwait
incl
add
dec
add
add
xchg
xchg
xchg
jmp
out
call
rcl
jmp
out
call
add
add
daa
jns
jns
mov
call
add
add
add
incl
add
incl
add
incl
add
incl
add
cld
paddb
incl
add
clc
paddb
incl
add
lock
clc
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
clc
add
pop
incl
add
cld
add
ud0
add
clc
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
jmp
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
pop
incl
add
pop
incl
add
ud0
incl
add
ud0
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
sbb
add
add
orb
add
mov
and
and
and
add
jnp
out
inc
fisubrs
fisubrs
mov
and
inc
out
inc
out
inc
out
inc
fisubrs
fisubrs
mov
and
add
mov
mov
jnp
out
inc
fisubrs
fisubrs
pop
cmp
pop
and
add
add
mov
mov
mov
jnp
out
inc
fisubrs
fisubrs
pop
cmp
pop
and
and
add
push
negl
mov
mov
jnp
out
inc
fisubrs
fisubrs
pop
cmp
pop
xor
dec
xor
dec
and
add
add
push
negl
mov
jnp
out
inc
fisubrs
fisubrs
pop
cmp
pop
xor
dec
xor
dec
and
and
add
test
movb
negl
mov
jnp
out
inc
fisubrs
fisubrs
pop
cmp
pop
xor
dec
xor
dec
sub
and
add
add
test
push
negl
mov
mov
jnp
out
inc
fisubrs
fisubrs
pop
cmp
pop
xor
dec
xor
dec
sub
and
and
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
inc
out
inc
out
inc
fisubrs
fisubrs
pop
cmp
pop
add
push
call
push
call
inc
fisubrs
fisubrs
pop
cmp
pop
add
push
call
push
call
inc
fisubrs
fisubrs
pop
cmp
pop
add
add
jg
cld
aas
clc
pop
push
ud0
loopne
inc
add
incl
add
incb
add
add
aas
clc
add
pop
lock
pavgb
add
push
ud0
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
inc
out
inc
fisubrs
mov
dec
out
mov
jnp
fisubrs
pop
and
add
add
pushf
dec
out
mov
jnp
fisubrs
pop
xor
dec
and
add
dec
out
mov
jnp
fisubrs
pop
xor
dec
sub
add
inc
out
inc
fisubrs
pop
add
add
jnp
fisubrs
pop
add
add
jnp
fisubrs
pop
add
add
jnp
fisubrs
pop
add
add
jnp
fisubrs
pop
add
add
jnp
fisubrs
pop
add
add
inc
fisubrs
pop
add
incl
add
incl
add
jg
add
aas
add
lock
add
loopne
add
rolb
add
aas
add
clc
aas
add
clc
aas
add
clc
aas
add
clc
aas
add
clc
aas
add
clc
aas
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
push
call
add
imul
pop
add
jnp
test
movb
negl
xor
dec
add
mov
sbb
incl
add
add
add
add
or
add
add
add
add
add
push
pop
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
jg
add
aas
add
lock
add
loopne
add
rolb
add
aas
add
clc
aas
add
clc
aas
add
clc
aas
add
clc
aas
add
clc
aas
add
clc
aas
add
incl
add
add
add
add
add
add
add
sbb
add
add
orb
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
call
push
call
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
call
push
call
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
add
mov
and
sub
xor
dec
xor
dec
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
dec
out
mov
mov
pushf
push
negl
movb
add
add
mov
and
sub
xor
dec
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
dec
out
mov
mov
pushf
push
negl
movb
add
add
mov
and
xor
dec
xor
dec
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
dec
out
mov
mov
pushf
push
negl
add
mov
and
xor
dec
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
dec
out
mov
mov
pushf
push
negl
and
and
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
dec
out
mov
mov
mov
add
and
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
dec
out
mov
mov
and
and
inc
fisubrs
out
inc
out
inc
out
add
add
mov
and
inc
fisubrs
out
inc
out
add
mov
and
and
and
add
push
ud0
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
pop
lock
psubb
add
cld
add
aas
incb
add
add
incl
add
jmp
pop
push
ud0
clc
pop
cld
aas
jg
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
pop
inc
fisubrs
call
add
add
pop
inc
fisubrs
out
add
add
pop
inc
fisubrs
out
add
add
pop
inc
fisubrs
out
add
add
pop
inc
fisubrs
out
add
add
pop
inc
fisubrs
out
add
add
pop
inc
fisubrs
out
add
and
xor
dec
cmp
pop
inc
fisubrs
out
dec
out
mov
pushf
test
movb
add
and
cmp
pop
inc
fisubrs
out
dec
out
mov
pushf
add
and
inc
fisubrs
out
dec
out
mov
add
add
mov
inc
fisubrs
out
add
and
add
incl
add
pop
add
cld
pop
add
cld
pop
add
cld
pop
add
cld
pop
add
cld
pop
add
cld
pop
add
rolb
add
add
add
pop
add
clc
sldt
cld
pop
add
aas
add
jg
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
call
add
imul
pop
add
jnp
test
movb
negl
xor
dec
add
mov
sbb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
add
or
add
add
push
add
or
add
or
add
add
add
add
incl
add
pop
add
cld
pop
add
cld
pop
add
cld
pop
add
cld
pop
add
cld
pop
add
cld
pop
add
rolb
add
add
add
pop
add
clc
sldt
cld
pop
add
aas
add
jg
add
incl
add
add
add
add
add
add
add
sbb
add
add
orb
add
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
add
incl
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
dec
out
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
pushf
push
negl
pushf
push
negl
pushf
push
negl
pushf
push
negl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
call
add
imul
pop
add
jnp
test
movb
negl
xor
dec
add
mov
sbb
incl
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
sbb
add
add
orb
add
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
cmp
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
inc
fisubrs
fisubrs
add
add
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
add
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
incl
add
add
add
add
add
add
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
clc
pop
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
jnp
fisubrs
add
jnp
fisubrs
add
jnp
fisubrs
add
jnp
fisubrs
add
jnp
fisubrs
add
dec
out
mov
mov
mov
mov
mov
jnp
fisubrs
out
mov
mov
mov
mov
mov
add
add
pushf
push
negl
pushf
push
negl
imul
push
negl
pushf
push
negl
add
inc
out
inc
fisubrs
add
jnp
fisubrs
add
jnp
fisubrs
add
jnp
fisubrs
add
jnp
fisubrs
incl
add
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
addb
add
add
add
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
call
add
imul
pop
add
jnp
test
movb
negl
xor
dec
add
mov
sbb
incl
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
add
add
push
push
push
push
push
add
push
push
push
push
push
add
add
add
add
add
add
add
add
add
add
add
incl
add
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
addb
add
add
add
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
cld
aas
add
incl
add
add
add
add
add
add
add
and
add
add
andb
add
xorb
jle
xchg
mov
mov
xchg
popl
mov
xchg
popl
mov
xchg
popl
mov
xchg
popl
mov
xchg
popl
mov
xchg
popl
mov
xchg
popl
mov
xchg
popl
mov
xchg
popl
mov
xchg
popl
mov
xchg
popl
mov
xchg
popl
mov
xchg
popl
mov
xchg
mov
mov
outsl
and
lods
cwtl
stos
int
mov
ror
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
call
into
mov
std
int3
lds
shlb
out
fdivr
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jecxz
aam
aad
ret
jmp
loopne
jmp
jecxz
jmp
jecxz
jmp
iret
jmp
jmp
jecxz
jmp
jecxz
jmp
loop
jmp
jmp
jmp
jecxz
jmp
jecxz
jmp
loop
fcmovnbe
inc
mov
stos
jmp
in
jmp
in
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
call
aam
mov
mov
int3
in
ljmp
iret
iret
mov
dec
iret
mov
in
jmp
int
lds
loope
sar
out
jmp
in
jmp
iret
inc
mov
lods
jmp
in
ljmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
dec
enter
mov
ljmp
ret
in
jmp
into
mov
scas
mov
mov
fmul
jmp
iret
mov
pushl
sarb
in
jmp
sar
mov
lods
jmp
in
ljmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
call
aad
inc
ret
stos
inc
ret
stos
sar
in
ljmp
enter
mov
fwait
dec
enter
loope
ljmp
pushl
mov
out
jmp
in
jmp
sar
mov
lods
jmp
in
ljmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
jmp
jecxz
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
fcmovu
leave
call
iret
mov
fcmovnu
lret
sar
fstp
into
call
sarb
call
sarb
iret
call
aam
inc
mov
lret
jmp
fst
out
jmp
in
jmp
sar
mov
lods
jmp
in
ljmp
aad
ret
rol
jmp
loop
in
ljmp
out
jmp
call
aam
dec
ret
iret
rcrl
iret
rcrb
into
mov
fwait
dec
mov
cltd
dec
mov
xchg
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
dec
mov
sar
jmp
sar
mov
lods
jmp
in
ljmp
mov
cwtl
pushl
aad
ljmp
call
mov
inc
test
jnp
loop
jp
loop
js
loop
jbe
loope
je
loope
jno
loope
jo
loopne
outsb
fbstp
call
lahf
dec
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
call
fwait
inc
dec
cltd
dec
ljmp
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
into
inc
scas
jge
fildll
jbe
inc
je
inc
jno
mov
insl
mov
push
mov
pusha
pushl
cmp
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
jmp
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
inc
stos
ja
fildll
insl
mov
imul
mov
popa
pushl
pop
pushl
pop
pushl
cmp
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
and
lcall
sub
cmpsl
xchg
push
in
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
inc
test
push
mov
arpl
mov
pop
pushl
pop
pushl
push
pushl
dec
ljmp
inc
lcall
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
sbb
cmpsl
nop
push
in
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
inc
test
fbld
mov
mov
mov
mov
mov
scas
push
lods
dec
lods
dec
stos
inc
test
inc
mov
or
decb
push
decb
push
decb
push
decb
push
decb
push
decb
push
decb
push
decb
push
call
mov
in
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
inc
cmpsb
jo
frstor
cld
mov
cld
mov
cld
scas
pop
cld
lods
push
cld
lods
push
sti
stos
push
sti
test
dec
sti
cmpsb
dec
sti
movsl
inc
sti
mov
inc
cli
xchg
and
cli
xchg
cli
test
cli
test
cli
test
cli
test
cli
test
cli
test
cli
test
cli
test
cli
test
cli
test
cli
test
cli
test
cli
test
cli
test
cli
test
cli
test
jmp
orb
in
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
inc
movsb
jno
fistpl
data16
stc
lods
arpl
stc
lods
pusha
stc
stos
pop
clc
test
push
clc
cmpsb
push
clc
movsl
push
clc
mov
dec
clc
mov
inc
clc
sahf
inc
clc
fwait
ds
xchg
push
jl
push
jl
push
jl
push
jl
push
jl
push
jl
push
jl
push
jl
push
jl
push
jl
push
jl
push
jl
push
jl
push
jl
push
jl
jmp
jnp
jmp
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
inc
mov
push
push
lods
imul
imulb
pusha
push
cmpsb
pop
push
movsb
pop
push
mov
push
push
mov
dec
push
pushf
dec
push
fwait
dec
push
cltd
inc
push
xchg
inc
push
xchg
cmp
icebp
jns
push
je
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
fidivs
movsb
mov
in
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
mov
xchg
pop
push
test
imul
repz
popa
push
mov
pop
push
popf
pop
push
fwait
push
push
lcall
icebp
xchg
dec
push
xchg
dec
push
xchg
inc
push
xchg
inc
out
subb
in
outsl
or
in
imul
in
imul
in
imul
in
imul
in
imul
in
imul
in
imul
in
imul
in
imul
in
imul
in
imul
in
imul
in
imul
in
imul
fisubrl
jmp
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
mov
xchg
pop
push
cmpsb
jo
icebp
movsb
insl
push
mov
addr16
lahf
fs
popf
popa
out
pushf
pop
out
lcall
out
xchg
push
out
xchg
push
out
xchg
push
out
nop
dec
out
mov
in
lea
in
mov
ljmp
jmp
bound
jmp
bound
jmp
bound
jmp
bound
jmp
bound
jmp
bound
jmp
bound
jmp
bound
jmp
bound
jmp
bound
jmp
bound
jmp
bound
jmp
bound
call
gs
in
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
mov
xchg
pop
push
movsb
jne
out
mov
outsb
out
sahf
push
out
pushf
push
in
cwtl
in
xchg
pop
in
xchg
pop
in
xchg
pop
in
nop
push
in
mov
in
lea
in
mov
jmp
dec
jmp
dec
ljmp
jmp
pop
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
rcrb
jmp
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
mov
nop
pusha
out
mov
jne
in
popf
jb
in
fwait
outsb
in
cltd
imul
xchg
push
jmp
ljmp
ljmp
jmp
mov
call
orl
dec
jmp
jae
jmp
pop
push
fists
fists
fists
fists
fists
fists
fists
fists
fists
fists
fists
fists
dec
pop
or
in
jmp
sar
mov
lods
jmp
call
aad
pushl
mov
jmp
mov
mov
fcmovnu
lret
mov
fs
jmp
jge
jmp
jns
ljmp
jmp
xchg
insb
call
nop
data16
call
mov
out
pop
jmp
mov
out
push
jmp
test
adcb
orb
jge
jmp
jp
fisubs
fisttpl
fimull
fimull
fimull
fimull
fimull
fimull
fimull
fimull
fimull
fimull
fimull
dec
push
adc
lahf
adcb
jmp
sar
mov
lods
jmp
mov
fisubrl
mov
pushl
aam
mov
loopne
fcmovnu
lret
mov
mov
jl
jmp
xchg
jbe
out
jae
out
outsl
jmp
nop
insb
jmp
lea
out
jmpw
mov
in
pusha
jmp
xchg
in
pop
jmp
sbbl
loop
push
jmp
jp
jmp
js
jmp
jno
fsts
call
inc
add
call
inc
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
dec
adc
sahf
adcl
loop
sar
mov
lods
jmp
mov
out
gs
mov
sti
pop
pushl
rclb
fcmovnu
lret
mov
outsb
jmp
lcall
out
jp
out
ja
in
je
in
jo
in
insl
jmp
mov
jecxz
jmpw
test
andb
sbbb
jle
jmp
jnp
jmp
jns
fbstp
fbstp
fidivs
call
inc
adc
sarb
add
sarb
add
sarb
add
sarb
add
sarb
add
sarb
add
sarb
add
sarb
add
sarb
add
sarl
add
lcall
jmp
sar
mov
lods
jmp
pushl
fldcw
mov
pushl
shll
mov
fcmovnu
lret
mov
nop
jae
out
mov
out
cmp
xchg
cmp
in
jp
jecxz
ja
jecxz
je
loop
jno
loop
insl
jmp
test
loopne
addr16
jg
fistpll
fistpll
fidivrs
fnsave
fnsave
fdivl
fldt
fldt
call
push
sub
dec
das
add
int3
das
add
int3
das
add
int3
das
add
int3
das
add
int3
das
add
int3
das
add
int3
das
add
int
push
inc
inc
sbb
sahf
adcl
loop
sar
mov
lods
jmp
call
fld
pushl
mov
js
mov
call
mov
fcmovnu
lret
mov
xchg
js
out
jmp
cltd
xchg
in
test
jecxz
cmp
loop
jnp
loope
js
loopne
jne
loopne
jno
filds
imul
jge
fnstsw
fdivrl
fidivl
fldcw
fldcw
fsubrs
call
bound
iret
inc
and
leave
sub
dec
daa
add
enter
enter
enter
enter
enter
enter
leave
sub
mov
sbbl
loop
sar
mov
lods
jmp
ljmp
ljmp
scas
xchg
lret
jmp
jecxz
in
ljmp
mov
xchg
jle
out
xchg
jmp
cltd
mov
loop
mov
loop
test
loope
cmp
lea
loopne
jnp
filds
jne
fiadds
outsl
fdivrl
fstpt
fidivl
fidivl
fnstenv
fsubrs
fsubrs
call
push
call
push
push
call
push
inc
dec
xor
inc
and
les
add
les
add
les
add
les
add
les
add
les
add
lds
and
in
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
mov
cwtl
test
out
lcall
cwtl
mov
loop
mov
loope
test
loope
cmp
mov
fisttps
jns
fldl
jae
fdivrl
fstpt
fidivrl
fidivl
fnstenv
fdivs
fsubrs
call
imul
imul
aam
push
dec
dec
aaa
inc
sub
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
and
mov
test
in
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
mov
popf
mov
out
lahf
jmp
lahf
xchg
jmp
fwait
nop
jmp
cwtl
jmp
xchg
mov
loope
xchg
loope
cmp
mov
fiadds
ja
fldl
jo
fstpt
fidivrl
fnstenv
fnstenv
fdivs
call
outsb
pop
call
imul
push
push
call
pop
dec
dec
inc
sub
les
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
and
xor
sahf
xchg
in
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
mov
mov
movsb
jmp
mov
xchg
jmp
pushf
xchg
jmp
cltd
jmp
xchg
mov
loop
xchg
loope
cmp
lea
fiadds
ja
fldl
jo
fstpt
fidivrl
fidivl
fnstenv
fdivs
fsubrs
call
insb
pop
call
imul
rcrb
dec
aaa
and
ret
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
es
push
cmp
lahf
mov
jmp
sar
mov
lods
jmp
in
ljmp
mov
xchg
ljmp
mov
out
jmp
fcmovnu
lret
mov
test
ljmp
jmp
mov
xchg
jmp
pushf
xchg
jmp
cltd
mov
loop
mov
loop
xchg
loope
test
loopne
cmp
fisttps
js
fldl
jno
fstpt
fstpt
fidivl
fnstenv
fdivs
fsubrs
call
insb
pop
call
imul
rclb
inc
das
sbb
ret
inc
sbb
inc
sbb
inc
sbb
inc
sub
inc
pop
inc
jmp
jmp
sar
mov
lods
jmp
in
ljmp
mov
mov
jmp
loopne
out
jmp
sar
mov
cmpsl
xchg
in
mov
stos
jmp
scas
movsb
call
test
popf
jmp
movsb
lcall
mov
xchg
jmp
pushf
xchg
jmp
lcall
loop
mov
loop
xchg
loope
test
loope
cmp
lea
fisttps
jp
fiadds
jbe
fdivrl
call
addr16
dec
dec
cmp
into
dec
ss
dec
ss
dec
ss
push
inc
dec
jne
jmp
jmp
sar
mov
lods
jmp
in
ljmp
aad
call
aam
jmp
jecxz
in
ljmp
call
mov
pushl
mov
mov
ret
mov
mov
ret
lahf
mov
ret
sahf
xchg
ret
inc
pushf
test
ret
inc
fwait
cmp
lcall
rcrl
inc
xchg
jg
rcll
inc
xchg
jge
rclb
mov
xchg
jns
mov
xchg
js
mov
mov
mov
jl
mov
jl
mov
mov
mov
mov
in
jmp
sar
mov
lods
jmp
in
ljmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
call
aam
mov
stos
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
lods
xchg
mov
in
jmp
sar
lds
cmpsb
repz
into
ljmp
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
loope
in
jmp
fdivrp
int3
std
mov
lods
cwtl
movsb
into
mov
fcmovbe
leave
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fstp
int3
fcmovbe
enter
mov
mov
cwtl
movsb
jle
push
cwtl
mov
mov
xchg
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
insl
xchg
jle
push
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
ret
add
sub
add
cmp
add
sub
leave
xor
add
aaa
and
mov
dec
xor
aad
add
fimull
add
dec
or
into
pop
or
add
pop
or
add
inc
adc
lret
add
push
sbb
jecxz
add
loopne
push
add
gs
add
je
add
bound
add
gs
add
imul
in
outsl
or
loop
or
add
jl
add
jns
add
adc
ljmp
add
push
sub
add
push
cmp
rclb
add
bound
add
jae
add
pop
inc
add
pop
inc
add
dec
add
jb
add
push
add
jne
add
jno
add
jp
add
jp
add
jnp
add
jl
add
jne
add
ja
add
jle
add
jg
add
orb
cli
test
add
lea
add
nop
or
add
nop
sbb
call
sub
jmp
xchg
and
lcall
ds
popf
ss
xchg
cmp
clc
fwait
ds
movsb
xor
jmp
push
add
test
movsl
mov
cmpsl
xchg
push
add
xchg
mov
andb
xchg
insl
add
nop
ja
mov
xchg
jns
mov
jle
mov
cmpsl
jg
mov
mov
add
js
test
jp
enter
fwait
inc
add
lahf
dec
add
fwait
push
add
xchg
pop
add
mov
in
dec
add
test
in
mov
out
nop
dec
add
xchg
inc
add
cltd
inc
add
sahf
inc
add
xchg
dec
add
pushf
dec
add
test
mov
jecxz
pop
add
mov
mov
out
xchg
push
add
xchg
pop
add
lcall
repnz
pop
add
mov
pop
add
mov
inc
add
mov
dec
add
mov
add
mov
push
add
stos
push
add
mov
pop
add
mov
add
mov
add
fs
imul
subl
test
les
add
mov
mov
loope
imul
mov
ljmp
add
xchg
insl
add
xchg
push
in
fwait
push
lock
bound
loope
ja
out
je
call
fwait
jae
in
jl
out
jge
jmp
test
bound
fbstp
jo
ret
test
jge
out
mov
arpl
imulb
arpl
icebp
movsb
push
cmc
stos
imul
mov
add
mov
add
mov
imul
mov
jp
lock
jb
loope
jb
loop
jns
mov
shll
scas
aam
add
jecxz
add
pop
add
shll
popf
addl
lods
scas
mov
mov
mov
add
mov
lahf
add
mov
add
mov
add
mov
mov
add
mov
add
fwait
test
loopne
addl
in
xchg
add
mov
test
iret
movsl
xchg
add
test
add
mov
add
mov
pushf
add
mov
addl
out
cltd
add
mov
mov
add
mov
popl
mov
nop
add
int3
fwait
add
rcrb
lret
ret
ret
add
mov
enter
leave
mov
into
mov
add
int
add
sarb
add
movb
fld
add
aad
add
fmul
add
add
fcmovne
add
fst
add
loopne
add
jecxz
add
out
add
ljmp
add
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
rolb
lock
repnz
repnz
repnz
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
div
cld
std
std
cld
sti
cld
std
std
std
cld
cld
std
std
std
mul
loopne
push
iret
iret
clc
std
repnz
cld
sti
loopne
cld
out
enter
sti
iret
ror
push
enter
cld
loopne
cld
push
in
in
stc
std
in
iret
out
std
std
hlt
leave
iret
cmc
cld
loopne
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
div
hlt
clc
clc
clc
hlt
in
repnz
cld
hlt
in
out
std
cld
loopne
cld
std
div
clc
loopne
jmp
jmp
cld
loopne
cld
push
leave
enter
fldenv
mov
mov
movsb
mov
fs
fs
cld
loopne
cld
push
enter
stc
mov
mov
mov
mov
test
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
cld
loopne
cld
push
enter
clc
cmpsb
mov
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
cld
loopne
cld
push
enter
clc
cmpsb
jl
mov
mov
addb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
cld
loopne
cld
push
enter
stc
cmpsb
jl
mov
addb
aas
ds
ds
ds
std
cld
loopne
cld
push
enter
clc
cmpsb
data16
mov
addb
cmp
cmp
cmp
cmp
loopne
cld
push
enter
clc
cmpsb
data16
stos
stos
xchg
jno
jle
dec
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
loopne
push
enter
clc
pop
lods
stos
stos
xchg
jno
jno
outsb
dec
and
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
cli
loopne
cld
push
enter
clc
pop
lods
lods
xchg
jns
jns
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
dec
cld
loopne
cld
push
enter
stc
pop
addr16
test
test
insb
insb
insb
insb
imul
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
dec
cld
loopne
cld
push
enter
clc
pop
addr16
cltd
cltd
cltd
xchg
xchg
js
js
jbe
imul
and
adc
adc
adc
adc
adc
adc
dec
cld
loopne
cld
push
enter
stc
pop
lea
cwtl
xchg
xchg
xchg
jbe
jbe
jb
push
sub
push
push
push
push
push
push
push
push
or
loopne
hlt
lds
negl
mov
xchg
xchg
xchg
xchg
xchg
jne
jb
imul
or
or
or
or
or
adc
cli
loopne
cld
out
mov
clc
pop
mov
mov
cwtl
xchg
xchg
xchg
nop
jne
je
xor
adc
or
or
or
or
or
adc
cld
loopne
cld
out
mov
mov
mov
shll
xchg
xchg
nop
nop
nop
ss
das
xor
sub
add
add
add
add
add
adc
cld
loopne
cld
in
mov
clc
pop
fst
mov
fwait
xchg
xchg
xchg
cmp
xor
xor
xor
and
add
add
add
add
add
dec
cld
loopne
cld
mul
bound
repnz
clc
mov
lahf
rcrb
cmp
cmp
cmp
xor
xor
and
add
add
add
add
or
cld
loopne
cld
std
out
enter
clc
mov
rcl
rcrb
cmp
cmp
cmp
xor
xor
daa
push
add
add
add
add
or
cld
loopne
cld
push
enter
clc
ret
aam
rcl
rcl
sarb
mov
cmp
cmp
cmp
xor
xor
cs
add
add
or
cld
loopne
cld
push
enter
clc
ret
aam
aam
rcl
rcl
mov
cmp
cmp
cmp
xor
and
add
add
add
or
cli
loopne
cld
push
leave
ret
repz
clc
ret
aam
rcl
rcl
mov
cmp
cmp
xor
xor
sub
add
add
loopne
cld
push
enter
clc
xlat
loop
aam
aam
rcl
rorb
cmp
cmp
cmp
xor
daa
push
add
add
add
loopne
cld
clc
leave
leave
idiv
stc
xlat
jecxz
loop
aam
aam
rcl
rcl
rorb
cmp
and
aaa
push
cli
loopne
cld
cmc
cmc
std
fstpt
aad
aad
rcl
rcl
rcl
rorl
pop
pop
pop
pop
pop
push
push
sub
sub
cli
loopne
cld
push
fcmovnb
mov
mov
mov
mov
mov
mov
sti
loopne
cli
std
clc
loopne
repnz
clc
clc
clc
clc
clc
clc
clc
clc
idiv
idiv
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
cli
cli
idiv
div
idiv
div
idiv
div
lock
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
mov
mov
mov
int
rolb
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
clc
decl
decl
decl
clc
decl
clc
clc
clc
decl
mov
mov
clc
decl
clc
clc
clc
call
mov
decl
clc
clc
decl
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
jle
mov
ja
enter
jg
mov
mov
call
out
jle
in
out
into
out
enter
clc
out
jle
mov
out
out
out
mov
jg
vpmacssdqh
mov
into
enter
into
into
into
out
outsl
mov
mov
enter
mov
in
in
into
into
jg
mov
out
mov
mov
out
into
into
into
into
outsb
into
jle
insb
jg
mov
mov
out
ja
enter
in
in
in
in
in
out
mov
call
in
mov
in
insb
in
jl
insb
in
into
js
vpmacssdqh
mov
into
jle
into
in
in
in
outsb
jg
mov
xchg
mov
mov
into
mov
js
mov
xchg
mov
enter
insb
insb
insb
outsb
into
jg
mov
call
mov
mov
out
xchg
insb
insb
js
mov
mov
mov
mov
int3
insb
insb
mov
ja
jl
mov
jl
insb
insb
insb
mov
mov
in
mov
enter
jl
mov
into
jg
mov
mov
enter
mov
jg
clc
xchg
mov
enter
int3
js
mov
call
mov
enter
int3
insb
insb
jg
mov
js
clc
call
xchg
jl
dec
dec
inc
js
mov
xchg
mov
ja
enter
int3
jg
mov
call
ja
ja
enter
mov
jbe
mov
mov
out
js
enter
mov
mov
mov
mov
js
js
call
mov
mov
out
enter
ja
xchg
enter
ja
mov
clc
decl
mov
mov
mov
mov
clc
clc
clc
clc
clc
mov
clc
clc
mov
decl
clc
decl
mov
mov
mov
mov
mov
mov
mov
js
xchg
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
sbb
add
add
orb
xchg
mov
lcall
xchg
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
cmpsl
mov
mov
jle
mov
jecxz
shl
jecxz
shl
jecxz
shl
jecxz
shl
jecxz
shl
jecxz
shl
jecxz
shl
jecxz
shl
jecxz
shl
xlat
aam
int
loope
rcr
fxch
loop
shl
loope
shl
fmul
jecxz
shl
fcmovne
mov
ljmp
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
fcmovnu
lret
mov
mov
sarl
ljmp
lret
out
ljmp
leave
mov
jmp
in
ljmp
jecxz
jmp
in
ljmp
jecxz
jmp
in
ljmp
jecxz
jmp
in
ljmp
jecxz
jmp
fcmovnu
lret
mov
jmp
mov
xchg
fcmovnu
lret
out
fidivrl
mov
out
ror
mov
out
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
fcmovu
fmul
fcmovu
leave
fcmovu
lret
leave
fcmovu
lret
leave
fcmovu
lret
leave
fcmovu
lret
leave
fcmovu
lret
ror
mov
fmul
aam
ror
mov
leave
int3
lret
mov
iret
mov
out
ror
mov
out
rcl
mov
fcmovne
in
ljmp
outsl
fstpt
fidivl
fnstenv
shll
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
int
dec
lret
cltd
dec
mov
js
out
ror
mov
out
enter
scas
mov
in
aad
shlb
mov
mov
mov
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
dec
ljmp
leave
mov
leave
mov
scas
mov
vpminsw
rol
rcrb
mov
mov
pushl
mov
lods
inc
lcall
call
call
call
call
call
call
ljmp
leave
mov
leave
mov
scas
mov
in
rol
rcrl
mov
mov
scas
push
lods
dec
std
stos
dec
std
test
std
popf
sub
lea
std
mov
mov
mov
mov
mov
mov
out
ror
mov
out
enter
scas
mov
vpminsw
rol
iret
xchg
dec
cli
mov
cli
scas
pop
stc
lods
pop
stc
test
stc
movsl
dec
stc
mov
stc
popf
ds
mov
jg
idivl
idivl
idivl
idivl
idivl
idivl
idivl
idivl
idivl
idivl
mov
aaa
ljmp
leave
mov
leave
mov
scas
mov
in
rol
lret
xchg
dec
imulb
cmc
cmpsb
popa
hlt
movsb
pop
cmc
mov
hlt
pushf
dec
repz
aas
icebp
jns
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
mov
aaa
ljmp
leave
mov
leave
mov
scas
mov
vpminsw
rol
enter
cmpsl
outsb
repnz
imul
popa
lock
pop
lock
dec
out
xchg
dec
out
popl
xorb
imul
gs
gs
gs
gs
gs
gs
gs
add
enter
mov
leave
mov
scas
mov
in
rol
lds
out
lahf
jo
popf
imul
data16
xchg
in
xchg
pop
in
xchg
pop
jmp
push
jmp
push
ljmp
jno
loop
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
leave
mov
fst
mov
xchg
movsl
mov
rol
call
rol
pop
in
mov
ljmp
xchg
addr16
pop
out
pop
out
push
out
push
out
dec
in
inc
ficomps
fisttpl
fisttpl
fisttpl
fisttpl
fisttpl
fisttpl
fisttpl
fisttpl
jno
ljmp
leave
mov
loop
mov
jb
fadd
rol
roll
lcall
jno
insl
in
push
test
sbbb
push
loop
push
loope
dec
fisubrs
inc
or
ds
ds
ds
ds
ds
inc
push
cmpsb
outsb
cmp
out
ror
mov
into
cmpsl
mov
mov
mov
outsl
aad
ret
rol
rolb
xchg
and
jl
nop
ja
mov
mov
test
andl
fidivs
fnsave
fsubrl
push
xor
ss
int
add
xor
int
add
xor
int
add
aaa
or
ror
mov
mov
xchg
cmpsb
mov
rol
out
fcmovnbe
rol
mov
mov
xchg
xchg
xchg
and
jl
mov
xchg
subb
push
jns
fldcw
fldcw
xlat
gs
into
inc
and
and
and
and
mov
leave
mov
out
enter
scas
mov
vpminsw
rol
rorb
cwtl
mov
xchg
xchg
popl
xchg
xorb
fstpt
fidivl
fnstenv
fsubrs
xlat
push
aad
push
rcrl
sub
ret
ret
ret
ret
sub
mov
enter
mov
leave
mov
scas
mov
in
rol
ret
out
popf
in
xchg
jecxz
loop
xchg
popl
xchg
xorl
jo
jns
fidivl
fnstenv
fsubrs
xlat
push
push
iret
dec
cmp
and
ret
ret
ret
cs
movsb
jae
ljmp
leave
mov
leave
mov
scas
mov
vpminsw
rol
les
out
cwtl
in
xchg
jecxz
mov
xchg
mov
xchg
test
mov
mov
xorl
jno
jp
fidivl
fnstenv
fsubrs
xlat
imul
push
int
xor
sbb
rcrl
enter
jns
ljmp
leave
mov
aam
mov
shr
jmp
fstp
lret
rcrl
mov
ljmp
stos
mov
movsl
fwait
out
cwtl
in
xchg
in
xchg
jecxz
mov
xchg
mov
xchg
mov
xchg
test
popl
xchg
pusha
dec
rcrb
rcrb
xlat
imul
leave
mov
out
in
ljmp
jecxz
ljmp
xchg
lods
popf
jle
lahf
subb
scas
sahf
subb
scas
sahf
jg
sahf
jg
sahf
jg
sahf
jg
sahf
jg
sahf
jg
sahf
jg
sahf
jg
popf
jg
popf
jg
pushf
jge
pushf
jge
pushf
jge
sahf
jg
ret
out
iret
enter
scas
out
xlat
jmp
loopne
call
jmp
loopne
call
jmp
loopne
call
jmp
loopne
call
jmp
loopne
call
jmp
loopne
call
jmp
loopne
call
jmp
loopne
call
jmp
loopne
call
jmp
loop
mov
mov
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
mov
jle
add
add
incl
add
add
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
add
and
or
leave
das
or
add
aaa
or
aam
add
sub
enter
cmpsb
outsb
cmp
lods
jp
add
je
add
inc
push
add
dec
add
fisttpl
inc
or
add
push
add
loop
add
add
imul
add
jg
add
jns
add
inc
and
int
xor
iret
dec
cmp
push
xor
fisubrs
out
sub
mov
outsb
dec
add
push
add
pop
inc
add
pop
dec
add
bound
fsubrl
add
push
add
imul
pop
add
outsb
pop
add
je
add
jb
add
jp
add
jp
add
js
add
jnp
add
jle
add
jae
add
jnp
add
jnp
add
jle
add
mov
add
mov
add
mov
xchg
pop
add
lcall
in
xorb
repz
aas
add
popf
ds
mov
dec
add
mov
lods
popf
jle
mov
outsl
add
mov
add
xchg
dec
add
xchg
dec
add
cltd
dec
add
lcall
rcrb
push
add
lea
ret
xchg
roll
add
popl
out
dec
add
mov
out
xchg
dec
add
xchg
inc
add
xchg
dec
add
lcall
out
push
add
xchg
jmp
push
add
mov
jecxz
pop
add
mov
call
xchg
pop
add
xchg
pop
add
xchg
push
add
lahf
push
add
lcall
shlb
add
mov
inc
add
test
inc
add
mov
dec
add
stos
dec
add
lods
dec
add
cmpsl
push
add
scas
push
add
test
pop
add
movsb
pop
add
lods
pop
add
scas
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
gs
subb
mov
fldl
jns
fimuls
jle
in
pusha
add
andl
arpl
loope
push
add
mov
out
insl
add
xchg
bound
jmp
lcall
out
popf
imul
lahf
popa
add
xchg
jecxz
jb
loopne
jl
out
jno
in
ja
call
cltd
jo
out
lahf
jo
jmp
jne
in
jl
call
mov
add
mov
add
mov
add
mov
add
mov
add
mov
popa
add
mov
fs
movsb
imul
imulb
pusha
add
mov
add
mov
data16
mov
insl
add
mov
jnp
mov
outsl
add
in
add
in
bound
mov
imul
scas
sahf
addb
scas
mov
lods
scas
mov
mov
xchg
add
mov
popf
add
movsl
add
mov
test
loope
addb
xchg
test
out
xchg
ljmp
add
cltd
lea
in
xchg
add
mov
lcall
lods
mov
add
mov
xchg
add
mov
add
into
cmpsl
add
les
add
shrb
add
leave
mov
lret
add
lret
mov
iret
enter
into
mov
add
iret
mov
add
rol
add
aad
add
aad
add
aad
add
fadd
add
xlat
leave
add
fmul
add
fxch
add
fcmove
add
add
fst
add
fcmovne
add
fmul
add
fst
add
loope
add
loop
add
in
add
out
add
call
loopne
in
jmp
in
add
enter
enter
enter
enter
enter
enter
enter
movl
div
div
div
div
div
div
div
div
ljmp
div
div
loopne
cli
lock
in
call
loop
cli
in
cli
lock
call
stc
leave
stc
cli
out
cli
stc
lock
ljmp
out
in
cli
cli
out
cli
call
dec
test
movsb
outsb
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
dec
cli
out
cli
loop
ljmp
mov
mov
jo
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cli
out
cli
loope
in
ljmp
cmpb
aas
ds
ds
ds
out
cli
loop
ljmp
js
jne
jo
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cli
loope
in
call
jns
je
outsl
inc
cmp
sbb
sbb
sbb
sbb
cli
out
cli
loop
ljmp
jnp
push
pop
pop
inc
sbb
sbb
sbb
sbb
sbb
sbb
cli
out
cli
loope
in
call
cwtl
insb
insb
pop
pop
pop
pop
inc
pop
push
push
push
push
push
push
push
push
push
or
out
cli
loop
ljmp
xchg
xchg
push
push
and
adc
adc
or
lds
out
mov
xchg
xchg
xchg
data16
popa
pop
xor
adc
adc
adc
adc
or
mov
push
iret
mov
mov
pop
adc
pop
pop
pop
pop
pop
cli
out
fdivrl
test
mov
test
sub
push
push
push
add
cli
out
lock
ljmp
lcall
sub
sbb
add
add
add
cli
out
sti
loop
ljmp
int3
int3
mov
sub
sub
or
add
add
and
out
cli
loope
ljmp
ror
mov
xor
sub
sbb
or
cli
out
cli
loop
in
ljmp
ror
mov
sub
sub
add
or
out
cli
ljmp
xlat
xlat
xlat
aad
rcl
rcl
rcl
ror
int3
mov
and
out
cli
cld
ret
rol
rol
rol
rol
rol
rol
rol
out
stc
cli
cli
cli
cld
cli
cld
cld
cld
cld
cld
cld
cli
cld
cld
cld
cli
cli
cli
cli
cld
cli
loopne
enter
enter
enter
enter
enter
enter
enter
enter
add
incl
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
mov
mov
mov
mov
mov
clc
mov
mov
clc
clc
clc
clc
clc
clc
clc
clc
mov
call
mov
mov
mov
out
out
out
out
mov
mov
mov
jle
out
vpmacssdd
jle
in
in
clc
popl
mov
into
into
in
in
in
in
out
mov
mov
in
outsb
xabort
mov
mov
int3
out
popl
call
in
insb
in
insb
clc
mov
mov
mov
popl
call
insb
in
insb
out
mov
call
out
jl
int3
insb
xabort
call
mov
insb
mov
mov
js
enter
mov
clc
mov
mov
dec
mov
mov
jle
jl
xbegin
mov
mov
mov
xchg
jle
clc
clc
mul
enter
jle
xchg
clc
clc
clc
clc
decl
clc
clc
or
js
mov
mov
incl
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
mov
lods
popf
fnsave
lahf
fnsave
lahf
fnsave
lahf
fnsave
lahf
fnsave
lahf
fnsave
lahf
fnsave
lahf
fnsave
lahf
fnsave
lahf
fnsave
lahf
fnsave
fwait
mov
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
dec
lret
in
xlat
jmp
fst
call
rol
call
fxch
lret
ljmp
cld
aad
sar
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
in
ljmp
mov
loopne
rcl
mov
in
fdivr
ret
inc
lds
aad
sar
into
sar
jmp
sar
jmp
loopne
out
jmp
lret
iret
mov
call
into
mov
into
mov
aad
mov
ror
lods
call
enter
enter
stos
dec
ret
rol
stos
dec
lds
ror
lods
dec
shll
out
aad
sar
into
sar
pushl
jmp
scas
jns
lock
je
out
mov
insb
in
mov
ljmp
ljmp
ljmp
ljmp
ljmp
loop
cmp
call
into
sar
into
sar
fst
scas
mov
fstp
int
in
xlat
shrl
imul
mov
mov
mov
lods
dec
fwait
pop
cltd
sbb
cltd
sbb
cltd
sbb
cltd
sbb
cltd
sbb
cltd
sbb
cltd
sbb
cltd
sbb
notb
cltd
aad
sar
into
sar
fst
ljmp
fcmovne
jmp
loop
call
movsl
popa
std
mov
std
mov
std
scas
push
std
lods
dec
std
test
inc
cld
lcall
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
xrelease
dec
mov
sar
into
sar
fst
ljmp
fcmovne
jmp
loop
dec
lahf
arpl
clc
lods
data16
clc
stos
pusha
push
cmpsl
pop
mull
push
sahf
dec
push
lcall
hlt
js
push
js
hlt
js
push
js
push
js
hlt
js
push
js
jmp
pop
inc
mov
sar
into
sar
fst
ljmp
fcmovne
jmp
loop
dec
fwait
data16
repz
insl
push
mov
popa
icebp
popf
pop
push
cltd
push
push
xchg
push
push
xchg
dec
out
mov
jmp
or
ljmp
ljmp
ljmp
loop
pop
inc
mov
call
into
sar
into
sar
fst
scas
mov
fstp
int
in
xlat
inc
xchg
push
out
mov
outsb
in
cltd
push
jmp
pop
ljmp
jmp
jbe
loope
push
loope
add
loope
add
loopne
add
loope
add
loopne
add
ficompl
inc
mov
aad
sar
into
sar
int3
xchg
ljmp
xchg
jmp
inc
xchg
outsl
ljmp
call
nop
imul
out
pop
jmp
sbbl
jg
jmp
jnp
fstpl
fadds
fadds
fadds
fadds
fadds
rorb
inc
mov
call
into
sar
into
sar
aad
mov
aad
fstp
int
ret
xchg
jbe
out
test
out
jge
in
ja
jecxz
jno
loop
push
loope
fs
jle
fistpll
fidivs
fsubrl
rolb
dec
xor
dec
xor
dec
xor
dec
xor
dec
ds
inc
mov
call
into
sar
into
sar
sarl
dec
shll
inc
cwtl
jle
in
mov
jecxz
test
loope
jle
loopne
js
filds
imul
js
fidivl
fldcw
fsubrs
rcrl
dec
sub
inc
and
inc
and
inc
and
inc
xor
inc
mov
aad
sar
into
sar
fst
ljmp
fcmovne
jmp
loop
inc
sahf
xchg
out
xchg
jmp
cwtl
mov
loope
xchg
loopne
cmp
xchg
fldl
insb
fidivl
fdivs
call
imul
gs
dec
inc
xor
ret
inc
sbb
inc
sbb
inc
xor
sahf
call
into
sar
into
sar
fst
ljmp
fcmovne
jmp
loop
inc
cmpsl
nop
call
lahf
xchg
jmp
cltd
mov
loop
xchg
loopne
cmp
fldl
outsb
fidivl
fdivs
xlat
insb
pop
call
fs
dec
ss
ret
inc
sbb
inc
cmp
mov
aad
sar
in
inc
scas
in
fdivr
jmp
test
fsubrs
movsb
xchg
aad
xchg
aad
mov
aam
mov
rcrl
test
rcll
jge
rorb
js
int3
subb
fs
inc
bound
lds
lret
aad
sar
int3
mov
in
ljmp
in
ljmp
ror
mov
ror
mov
ror
mov
call
leave
mov
ror
mov
call
leave
mov
call
leave
mov
ror
mov
ror
mov
call
lret
mov
xchg
mov
movsl
fnstsw
mov
fnstsw
mov
fnstsw
mov
fnstsw
mov
fnstsw
mov
fnstsw
mov
fnstsw
mov
fnstsw
mov
fnstsw
mov
fnstsw
mov
fnsave
pushf
mov
incl
incl
incl
incl
incl
incl
sub
add
sbb
add
xor
add
add
or
add
add
inc
add
add
add
add
add
add
add
add
sbb
add
sbb
add
push
add
add
sub
add
xor
add
ds
add
xor
add
xor
and
les
add
rorb
add
pop
pop
add
inc
adc
loopne
add
loope
push
add
add
loop
pop
add
insb
or
jmp
pop
add
js
add
js
add
pop
and
int
xor
out
xor
rcrl
add
bound
lds
fsubrl
aad
push
add
gs
add
push
add
imul
insb
pop
add
outsl
pop
add
je
add
je
add
jns
add
jnp
add
jg
add
jle
add
jo
add
je
add
jne
add
js
add
jle
add
jnp
add
jl
add
mov
xrelease
add
adcl
notb
sbb
cld
lcall
loop
cmp
add
xchg
negb
dec
add
sahf
dec
add
mov
ljmp
add
mov
jmp
pop
add
xchg
push
add
cltd
push
add
popf
pop
add
movsl
inc
add
cmpsl
inc
add
mov
dec
add
lods
dec
add
lods
dec
add
movsb
push
add
scas
push
add
cmpsl
pop
add
mov
add
mov
add
mov
add
mov
add
subb
lahf
arpl
lret
add
xchg
push
les
js
fiadds
je
fiadds
jnp
ret
xchg
jbe
ret
add
nop
jge
loope
fs
mov
loop
push
in
xchg
bound
out
imul
in
cltd
push
add
mov
loopne
js
loope
jle
in
ja
jmp
xchg
jge
ljmp
add
stos
push
add
mov
addr16
stos
pusha
add
lods
data16
cmpsl
insl
add
mov
add
mov
add
mov
pusha
add
mov
imul
lock
js
lods
lret
mov
out
bound
test
mov
add
mov
stos
add
sahf
xchg
rcll
test
rcrl
mov
aad
mov
loopne
addb
xchg
xchg
jecxz
test
out
test
jecxz
lea
in
mov
in
xchg
add
cmpsl
nop
add
test
add
mov
xchg
add
test
add
lods
popf
add
mov
add
mov
add
mov
xchg
add
mov
add
mov
add
mov
add
mov
xchg
add
mov
mov
sarl
add
xchg
add
shlb
lret
ret
ret
add
lds
add
ret
rol
stos
add
enter
lret
enter
leave
les
add
int
add
leave
mov
add
iret
mov
add
int3
mov
add
sarl
add
into
rolb
rol
add
enter
lret
fcmove
add
fcmovne
add
fmul
add
fst
add
add
loopne
add
loop
add
loop
add
in
add
in
add
out
add
call
loop
out
jmp
add
mov
mov
mov
mov
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
lret
leave
ret
iret
mov
rcl
rcl
rcl
rcl
rcl
les
scas
scas
rol
rcl
rcl
les
mov
mov
lods
mov
lods
mov
mov
sarl
cmpb
js
cmp
cmp
cmp
cmp
cmp
lods
rol
test
int
jge
push
push
push
dec
ss
xchg
int
jnp
dec
dec
dec
dec
aaa
xor
xor
xor
xor
xor
int
jbe
dec
dec
dec
dec
cmp
pop
pop
pop
pop
pop
pop
pop
adc
test
int
ja
je
inc
cmp
adc
adc
adc
popf
rol
xchg
lret
push
aas
cmp
adc
adc
adc
push
popf
rol
subl
inc
sub
sbb
or
or
popf
rol
addl
imul
clts
push
push
push
pop
mov
mov
imul
cs
and
add
mov
int
movsb
xchg
nop
pop
pop
das
sub
and
sbb
add
or
int
test
xchg
nop
pop
pop
xor
add
or
int
xchg
fwait
lcall
mov
pop
push
sbb
and
rcl
rol
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
mov
add
add
incl
incl
incl
incl
incl
incl
sub
add
sbb
add
xor
add
add
add
add
add
and
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
vpmacssdqh
mov
mov
mov
in
out
in
out
mov
ja
jle
into
jl
js
mov
out
mov
jl
into
into
into
int3
mov
call
in
mov
mov
mov
mov
in
jl
insb
mov
enter
mov
mov
mov
int3
insb
mov
mov
mov
mov
enter
mov
js
xchg
mov
mov
mov
mov
add
add
incl
incl
incl
incl
incl
incl
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
mov
mov
lds
mov
lds
mov
lds
mov
les
lods
call
ret
mov
mov
les
mov
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
jmp
loop
inc
lds
dec
lret
rcl
sar
aad
fst
lret
fst
lret
fcom
jmp
aad
fcmovb
mov
fld
sahf
call
mov
mov
sarl
test
sarb
cmp
mov
dec
mov
lret
fst
lret
mov
loopne
call
mov
imul
mov
pop
pushl
and
lcall
and
lcall
and
ficoml
lret
fst
lret
mov
loopne
call
mov
cld
mov
sti
lods
push
sti
test
inc
sti
xchg
and
cli
test
cli
test
cli
test
cli
test
cli
test
xlat
test
fst
lret
fst
lret
mov
loopne
call
mov
push
cmpsl
imul
repnz
pop
push
cwtl
dec
push
xchg
inc
out
jne
in
imul
in
imul
in
imul
in
imul
into
je
fst
lret
fcmovbe
enter
xchg
fcmovnu
lret
dec
lods
mov
in
mov
imul
xchg
jmp
xchg
out
inc
fists
ficoms
ficoms
ficoms
inc
bound
fst
lret
dec
int3
mov
mov
xlat
lcall
fwait
cmp
in
insl
jmp
test
jle
fbstp
ficompl
call
cmp
sarl
add
sarl
add
mov
xlat
lret
fcmovbe
pushl
leave
dec
scas
cltd
jmp
fwait
jmp
nop
cmp
mov
fldl
gs
fnstenv
call
push
and
les
add
les
add
mov
sub
fst
lret
fst
lret
mov
loopne
dec
mov
jmp
movsl
fwait
jmp
cltd
jmp
nop
cmp
xchg
fdivrl
fidivl
fsubrs
call
popa
push
inc
sub
inc
sbb
pushl
xlat
lret
fst
lret
enter
fdivrp
rol
mov
int
xchg
dec
cmpsl
xchg
dec
movsb
nop
dec
mov
mov
enter
enter
xchg
cmp
mov
sarb
mov
xlat
lret
mov
lds
call
lret
call
lret
call
lret
call
lret
call
lret
call
leave
lds
enter
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
cmp
add
cmp
lds
adc
int3
cmp
add
push
and
mov
ss
push
add
fists
add
bound
add
je
add
imul
out
jne
add
pop
xor
aam
push
add
push
pop
add
ja
add
jo
add
jl
add
jle
add
jp
add
jbe
add
jle
add
test
add
test
ficoml
and
lcall
jnp
icebp
xchg
inc
add
cwtl
dec
add
xchg
jmp
popf
pop
add
movsl
inc
add
test
dec
add
lods
push
add
mov
add
subb
mov
fiadds
js
loop
fs
mov
ljmp
add
xchg
ja
repz
imul
mov
imul
mov
add
xchg
add
xchg
addb
cwtl
addl
fwait
xchg
leave
sahf
mov
loope
addb
fwait
addl
in
lea
lret
add
lods
mov
iret
mov
add
mov
add
mov
add
mov
mov
aam
mov
aad
popl
lret
movsb
nop
add
cmpsl
xchg
add
lods
xchg
add
stos
xchg
add
scas
cltd
add
mov
fwait
add
mov
add
les
add
lds
add
shll
int3
mov
lret
add
ret
mov
add
ret
int
rolb
rol
add
aad
add
aad
add
movl
lret
add
fcmove
add
fcmovne
add
loopne
add
loop
add
out
add
jmp
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pop
pusha
pop
pusha
pusha
pop
push
outsb
outsb
outsb
outsb
insb
pop
push
arpl
push
pop
push
dec
dec
dec
dec
dec
dec
dec
push
push
cmp
sub
pop
pop
pop
pop
pop
pop
sbb
dec
sub
es
sbb
sbb
sbb
push
xor
femms
push
push
push
or
inc
cmp
xor
push
or
or
or
pop
cmp
inc
xor
das
pop
adc
add
add
push
inc
inc
sub
adc
pop
push
push
inc
inc
sub
add
insw
popa
push
push
push
inc
inc
inc
inc
ds
and
bound
bound
bound
bound
bound
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
clc
mov
out
mov
mov
decb
call
out
in
js
mov
into
into
iret
mov
insb
outsl
mov
iret
mov
insb
js
clc
mov
decb
mov
mov
incl
add
incl
add
incl
add
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
das
je
push
adc
add
add
add
hlt
cmp
add
icebp
xchg
dec
push
and
ja
add
push
mov
jle
pop
add
xchg
and
xchg
jp
mov
loope
shll
xchg
std
adc
mov
pop
je
sbb
sti
sub
scas
lods
inc
mov
inc
mov
jb
push
outsb
inc
hlt
dec
fcomp
enter
shll
inc
mov
pusha
pop
dec
mov
mov
lds
call
mov
pop
lret
push
rcll
jmp
xor
adc
xlat
cmc
ljmp
pop
mov
xchg
push
or
or
pop
inc
ret
or
dec
xor
stos
pop
pop
das
js
loopne
mov
shll
out
dec
adc
jge
or
aam
in
stos
add
cmpsb
pop
xchg
push
test
pop
add
jno
adc
jmp
repz
sbb
aad
scas
add
outsl
lret
mov
icebp
fldl
and
outsb
cmpsl
mov
je
iret
sbb
cmp
xchg
stc
pop
divb
and
or
xor
push
sbb
cld
les
sahf
sarb
mov
dec
pop
adc
inc
cmpsl
lahf
fnstcw
rcr
test
mov
jmp
push
mov
insb
push
xchg
or
and
test
scas
xchg
jg
sbb
fmuls
rolb
push
sub
cmc
es
and
push
jl
insl
std
js
xchg
and
fadd
mov
movsb
push
jl
icebp
or
sbb
leave
repnz
icebp
ja
shrl
movsl
or
mov
sti
jbe
in
out
cmpsl
adc
sub
and
ljmp
ret
shlb
sub
cmc
jl
shll
mov
rorb
push
lahf
adc
mov
pop
mov
in
xchg
sbb
mov
test
scas
imulb
aad
mov
roll
shlb
leave
mov
lret
jg
jnp
fidivrl
sub
adc
aad
mov
jmp
orb
adc
popa
lahf
sbb
adc
jp
arpl
dec
inc
ficompl
flds
lock
into
pop
jns
mov
cld
pop
mov
sub
sbb
sub
mov
mov
pop
pop
jge
cwtl
cld
jbe
jg
test
mov
dec
mov
fisttpl
dec
inc
xlat
subl
pop
adc
add
lea
jne
roll
xchg
fwait
out
inc
test
xchg
jl
js
shrb
xor
push
push
fstpt
outsb
mov
cmpsl
addl
add
xchg
decl
push
jbe
dec
fidivl
out
mov
sbb
out
adc
mov
jle
pushf
xchg
cltd
jb
in
lods
and
xor
fistps
mov
loop
loope
loopne
mov
ds
jne
pop
addl
cmpsl
sub
jbe
push
arpl
cmc
mov
icebp
fsubs
push
outsb
test
cmp
xchg
pushf
into
jmp
jb
jmp
repnz
sbb
fimull
aam
jg
repz
aaa
pop
stc
sbb
arpl
arpl
jnp
inc
scas
test
push
xchg
adc
xchg
and
in
pusha
mov
mov
jge
insl
outsl
xchg
adc
mov
sbb
mov
loope
fwait
out
fstpt
out
mov
jnp
out
lret
ljmp
filds
ljmp
jmp
cld
cmc
mov
out
imul
fisubrs
ds
xor
push
pop
stos
cmp
xchg
shrl
scas
idivb
sbb
xor
pop
xchg
adc
adc
mov
push
fnstcw
add
cmc
in
sub
test
jge
outsl
mov
push
inc
movsb
scas
iret
mov
lea
outsb
and
lret
imul
roll
fs
daa
repnz
repz
xchg
dec
shl
mov
sbb
stc
cmpb
add
add
mov
and
pop
xor
xor
cmpb
and
es
inc
ficoml
idiv
and
xor
sahf
dec
adc
jbe
adcb
stc
mov
mov
sbb
xlat
push
jno
loope
xchg
popf
les
ja
scas
std
add
gs
cmpsl
sbb
fstpl
mov
cmp
cmp
daa
aaa
jns
loopne
imul
xchg
cmp
ror
inc
add
fistpl
outsl
addl
enter
cmp
lock
mov
mov
cmp
sbb
adc
cmpb
or
std
xchg
dec
push
loopne
xchg
mov
jle
sub
iret
xchg
into
das
dec
push
pop
rcrb
testl
dec
movb
bound
loop
in
inc
pop
ds
test
sbb
cmpl
repnz
arpl
xorb
lds
movsl
inc
or
xchg
xchg
nop
sub
xor
cmp
cmp
andb
adc
push
sub
rorb
movsb
push
mov
out
testb
push
ficomps
sbb
aad
xchg
cltd
inc
inc
loopne
decl
stos
call
js
out
mov
xchg
or
pop
xlat
sub
inc
xor
sbb
jg
repz
inc
dec
daa
cmpsb
push
je
lds
xlat
out
jne
pop
dec
push
adc
mov
mov
push
clc
inc
ret
mov
cmpsb
mov
jp
in
ja
int3
scas
popf
mov
push
stc
scas
mov
xchg
push
jbe
inc
imul
jge
jecxz
mov
leave
pop
aad
enter
nop
popa
or
mov
lds
xchg
and
xor
fs
popf
jp
icebp
movsl
lea
pushf
mov
pushf
mov
in
sbb
inc
jo
push
ret
add
sbb
mov
ret
push
jmp
push
push
stos
inc
mov
jno
xchg
jecxz
adc
xchg
or
loop
outsb
pop
pop
and
cmpsb
mov
sti
jg
cmp
insb
inc
ficoml
push
dec
fldl
ret
stc
lret
lods
dec
mov
filds
mov
popf
and
fcoml
pop
dec
sub
xor
daa
mov
jle
lcall
mov
xlat
jp
repz
and
jb
xchg
dec
loopne
inc
fwait
call
mov
xchg
sbb
or
or
jae
cltd
mov
pop
mov
and
cs
in
lds
mov
sub
xorl
pop
push
sbb
jb
popf
out
fs
lods
neg
clc
lret
lds
sub
pop
inc
adc
push
call
call
mov
push
add
std
nop
in
xor
or
repnz
add
mov
cwtl
out
mov
add
cmp
pop
mov
ljmp
orb
lods
dec
push
cmp
xor
test
arpl
sub
pusha
cmp
push
mov
jne
dec
mov
add
mov
mov
call
mov
dec
mov
scas
cmc
xor
std
jmp
popf
inc
or
loop
scas
addb
add
jl
sbb
dec
fucomip
inc
mov
cli
mov
sti
enter
ss
or
js
inc
test
xor
out
test
push
xchg
adcl
pop
test
fiaddl
ss
and
aam
jp
int
aam
lods
sbb
in
and
xor
in
add
xchg
ja
cli
repz
imul
push
jb
and
cmc
xchg
mov
inc
test
dec
jo
movsb
repnz
fmull
pusha
push
inc
test
cmp
shrb
mov
imul
jne
movsl
and
ret
repz
in
and
rcrb
pop
jecxz
repz
fxtract
and
cmp
data16
ss
mov
and
pop
add
das
push
adc
es
xor
repz
or
adc
movsl
adc
pop
dec
enter
jp
stc
js
push
movsl
sub
or
mov
int
loope
add
push
inc
mov
lcall
dec
mov
jecxz
aas
or
xchg
mov
in
xchg
cmp
mov
xchg
mov
sbb
mov
scas
pop
adcb
ja
js
je
mov
cmp
orl
fdivl
std
xchg
push
push
jb
fcomps
sub
je
repnz
sbb
jecxz
jp
sbb
mov
xchg
scas
addl
jb
xor
cltd
call
addb
sub
jbe
mov
sar
in
mov
outsb
out
in
push
pop
mov
test
in
int
es
xchg
sub
pop
sti
in
mov
mov
mov
lods
out
sahf
cs
dec
fsubrp
adc
mov
jno
test
push
shll
aam
sbb
xor
jns
sbb
mov
test
inc
jp
jl
ja
in
sub
aad
xor
hlt
dec
push
or
jg
gs
dec
xchg
or
notb
inc
mov
leave
sti
add
call
addr16
push
pop
mov
out
dec
push
cltd
lret
adc
fnsave
add
mov
sti
gs
xor
mov
xchg
and
loope
popf
test
stos
sub
xor
test
into
push
mov
loop
and
push
push
adc
sbb
lock
sub
jne
jecxz
push
out
mov
mov
fisubs
jp
loop
cmp
sahf
jb
fnstenv
or
sub
adc
mov
bound
dec
int3
push
and
adc
or
pop
xchg
xorl
sbb
hlt
mov
sbb
add
xchg
sahf
and
xor
int
xchg
xchg
hlt
pop
call
insb
out
test
das
mov
xchg
lock
pop
cmp
test
or
stos
lock
and
and
cmp
into
adc
out
js
pushf
les
pop
mov
insl
or
sti
sbb
or
mov
xlat
mov
xor
enter
sub
xchg
sarb
mov
lea
xchg
add
add
mov
enter
push
imul
add
mov
sahf
repz
int3
inc
pop
int
mov
aad
push
out
test
popa
or
rorb
imul
xor
sti
xor
xchg
jne
dec
test
mov
lahf
lret
xchg
fucomip
cmp
mov
or
iret
fstpl
into
pop
cmp
jns
jg
repz
repz
cmp
sub
xchg
idivl
lods
cmp
fisubrs
lods
sbb
aad
pop
movsb
idivb
arpl
and
ret
shrb
ja
jno
aas
in
jo
mov
or
sub
mov
push
mov
or
in
enter
adc
in
sbb
repnz
imul
repz
int3
cmpsl
xchg
pop
or
in
xor
dec
sub
mov
pop
lods
pop
add
out
or
aaa
or
mov
sbb
cmp
fldcw
stc
fildl
es
aaa
adc
cli
sub
data16
ds
pop
int
into
push
mov
mov
sub
adc
sahf
call
add
mov
in
mov
es
and
or
xchg
sahf
and
mov
dec
and
inc
test
xor
lcall
push
cmc
inc
test
inc
sub
cltd
lcall
icebp
lahf
or
test
pop
insl
inc
inc
jnp
pushf
push
rcrl
xor
pop
in
xchg
xor
gs
bound
in
fildl
rdmsr
jle
or
daa
call
aaa
xchg
sti
sub
adc
cmp
add
pop
cmpsl
fcmovnb
and
mov
fistl
dec
repz
pop
mov
xchg
xchg
nop
xchg
scas
mov
scas
pmulhw
pop
std
or
test
pushf
shrl
mov
push
push
sub
movsb
ds
cli
xor
or
inc
inc
push
ret
or
fsubl
fs
js
sub
loopne
cwtl
stos
xor
and
bound
or
out
out
or
jno
outsl
popa
mov
sub
jl
mov
cmp
add
imul
inc
popf
jmp
sub
mov
push
pop
ret
gs
insb
add
ret
ret
xorl
inc
repz
xor
jle
xchg
mov
and
popf
in
hlt
adcb
add
es
mov
pop
mov
das
inc
pusha
cmc
cs
notl
pop
cli
inc
xor
ds
xchg
jge
fucomp
std
inc
mov
popa
inc
fidivs
push
jge
in
adc
shrb
mov
or
addb
push
cmc
incl
stos
adc
add
lock
inc
mov
jecxz
pushf
es
dec
imul
or
xchg
je
jns
cmp
clc
jns
lea
mov
inc
xchg
or
xchg
fs
fimuls
or
jmp
enter
stc
fstpl
into
outsl
ret
jmp
mov
stc
add
xor
mov
lret
dec
sub
iret
aaa
add
sbb
xor
push
and
out
sbb
or
ror
nop
sbb
pop
pop
and
mov
movsb
clc
test
scas
add
outsb
sarl
mov
jg
cltd
xchg
fnsave
xchg
dec
dec
or
mov
rorb
rolb
daa
fs
out
mov
jmp
pop
lods
sub
popf
xchg
jg
pop
mov
psllq
lss
xor
setns
jb
mov
add
xor
ret
outsb
gs
jbe
mov
mov
dec
sbb
fcmovnb
inc
mov
or
push
add
inc
xchg
adc
sbb
adc
addr16
pop
mov
xor
test
jp
push
stos
or
nop
ret
addr16
outsb
mov
jae
adc
push
dec
cmp
cmp
mov
push
add
jp
xor
sub
adc
push
mov
repnz
loope
pusha
jae
in
push
iret
aas
sbb
arpl
sti
push
aad
dec
or
ljmp
adc
xor
inc
xchg
dec
test
outsl
out
jns
outsb
jb
and
add
repz
mov
add
rdtsc
out
sub
mov
jae
mov
sarl
sbb
and
imul
fnclex
dec
fs
sbb
sbb
hlt
adc
jge
xchg
pop
into
js
lods
xor
pop
jle
hlt
sbb
jae
jmp
repz
iret
dec
mov
cld
gs
cwtl
mov
add
in
pushf
dec
mov
mov
jecxz
inc
cwtl
pop
xor
jbe
lock
xor
xor
pop
jb
xor
ss
adc
mov
ss
fsubs
dec
add
and
in
sub
sahf
iret
jle
or
pop
adc
jne
sbb
and
mov
sbb
pop
fwait
pop
cmc
xchg
fcomps
shrb
jge
nop
pop
mov
dec
xchg
pop
es
in
xchg
imul
test
scas
cmp
test
dec
push
mov
jge
out
pop
loopne
adcb
incb
sub
jne
and
add
lcall
insl
push
or
jge
jo
mov
mov
lcall
dec
inc
push
fstps
xchg
mov
add
jle
ds
and
xor
nop
outsl
mov
ja
sti
sbb
aas
sbb
push
mov
jno
cmp
aaa
xchg
mov
xchg
push
in
and
stos
outsb
js
lret
lret
popf
pop
jl
faddp
fnstsw
mov
jns
int3
test
jmp
lods
stos
xor
loopne
cmpsb
test
cmp
add
daa
pop
not
push
repnz
stos
sub
adc
sti
sbbb
orb
repz
mov
loopne
pop
push
insb
pop
mov
mov
test
pop
sbb
adc
mov
lods
sbb
les
jae
jge
mov
jg
jno
jbe
call
jne
loop
int3
pop
push
mov
clc
pop
mov
adc
orb
pop
mov
lret
sbb
enter
jg
addr16
ljmp
ret
pop
push
imul
mov
das
adc
cmpsb
and
pop
jb
push
inc
mov
sbb
push
pop
mov
shll
iret
push
jle
mov
xor
jecxz
pop
test
xor
loop,pt
push
lock
repz
leave
cmc
adc
jmp
fldenv
jecxz
cmp
pop
xchg
ljmp
fidivrs
sub
cwtl
subl
dec
cmp
ret
adc
mov
push
sbb
cmp
push
shl
sub
cld
data16
cld
mov
div
xchg
pop
jns
in
mov
in
cld
cltd
mull
pop
pop
jl
scas
mov
xor
sbb
and
outsb
fcomps
sub
in
outsl
arpl
lcall
aas
je,pn
clc
mov
aam
iret
add
out
dec
inc
and
lea
negb
das
loope
xchg
jns
aam
clc
and
pop
jp
dec
xor
lea
sbb
rcll
inc
shll
mov
sbb
sti
pop
test
and
jo
addr16
add
xchg
add
and
add
push
daa
fwait
aad
or
int
sub
out
fld
aas
int3
xchg
aad
cmp
cmp
cmp
jne
mov
fistpll
mov
out
and
and
cmp
mov
movsb
dec
mov
add
mov
xchg
loopne
sbb
xchg
inc
int3
ss
mov
pushf
cs
loope
fnstsw
mov
mov
in
jp
or
mov
push
dec
test
jo
js
sbb
xor
aam
xor
insb
fdivr
sub
sub
jle
pop
adc
push
ljmp
pop
jmp
dec
popa
in
sarl
jns
in
orl
and
pop
stos
ds
cmpsl
and
out
xor
xchg
cmp
sub
xchg
shll
pop
adc
js
shrb
dec
cli
sbb
shr
mov
xchg
mov
jne
xor
lods
add
mov
mov
std
pop
mov
jne
rcll
mov
cmpsb
pop
lods
aaa
xlat
icebp
out
dec
repz
xor
mov
inc
ret
adc
sbb
mov
xor
das
test
ret
dec
cmc
cmp
cmp
pusha
xchg
xchg
in
in
mov
cmp
jnp
jae
iret
mov
repnz
xchg
repz
inc
inc
mov
sbb
mov
mov
das
mov
jo
xchg
mov
outsb
mul
fbstp
adc
pop
ja
pop
divb
ret
pop
pop
or
sub
fildl
cmp
repz
pop
jge
repz
repz
sbbb
pop
cmpsl
cmp
sub
loope
pusha
dec
dec
scas
mov
push
adcl
pop
loopne
scas
popa
mov
fwait
push
aaa
movsl
add
or
add
nop
jns
xchg
cli
test
lds
imul
mov
mov
mov
mov
pop
sbb
cmp
add
cmpsl
int3
ds
out
cmpsb
fs
fidivs
mov
mov
mov
cmp
mov
xor
xchg
sub
push
dec
loope
fstpl
repnz
daa
fwait
xchg
mov
loope
xor
jp
js
shld
sbb
cmp
xchg
in
inc
in
rol
addb
loope
lods
add
mov
icebp
sub
sbb
push
insl
jnp
mov
jo
out
mov
clc
dec
sbb
jns
test
ret
mov
pop
dec
lahf
daa
loop
add
stc
mov
xor
popf
repnz
cmp
decl
jo
insb
mov
mulb
aas
hlt
and
leave
mov
and
fbld
inc
pusha
pop
push
mov
lock
push
and
test
jne
sbb
xchg
arpl
or
mov
repnz
inc
lds
cmovno
aas
stc
ja
out
fwait
push
jns
jnp
pop
jno
in
cwtl
sar
loopne
sbb
dec
or
fs
movb
mov
push
xor
adc
pop
lods
dec
pop
adc
mov
stos
dec
xchg
icebp
fldcw
and
cld
and
ss
hlt
aam
lret
mov
nop
jp
ror
add
mov
cli
jg
scas
int
xchg
jne
imul
xchg
arpl
push
out
add
int
addr16
sti
dec
adc
cld
mov
xchg
not
rorb
ljmp
daa
cmpsb
add
add
sub
nop
dec
pop
lahf
push
pop
mov
push
mov
ljmp
dec
shll
out
insb
pop
pop
in
lret
adc
lahf
pop
dec
cli
lret
mov
mov
mov
jns
sarl
mov
jge
out
adc
mov
cmp
sub
in
cmpsb
xor
fdivp
dec
mov
mov
scas
mov
cs
xchg
stos
mov
sarl
jo
testl
cmpsl
mov
jae
jno
cmp
inc
andl
cmp
fldt
and
adc
leave
mov
nop
inc
in
push
pusha
push
sub
cli
ja
shr
mov
pop
jbe
jne
cmp
inc
pop
jg
xchg
orl
xor
cmpsl
mov
adc
push
loope
pop
fwait
sub
jmp
mov
in
push
cltd
cld
mov
ss
sbb
mov
or
vcvtps2pd
mov
cmp
hlt
dec
or
dec
mov
adc
fsubrs
adc
jg
imul
mov
cmovo
loop
and
out
cmp
out
out
jmp
push
and
mov
mov
pop
xlat
mov
or
popa
ss
aas
vpaddusb
scas
arpl
ds
mov
cmpb
pop
sbb
mov
mov
dec
and
push
xchg
or
inc
sub
mov
hlt
inc
movsb
lret
pop
cmp
repz
mov
or
inc
hlt
add
push
test
mov
lock
mov
cmp
test
mov
adc
cmp
cmpsb
adcl
inc
add
test
xor
jl
ja
dec
jp
sbb
scas
ja
fwait
in
dec
les
cwtl
mov
xchg
imul
pusha
int
fucomp
mov
or
xchg
cmc
mov
test
pop
or
sub
aaa
ds
xchg
in
in
inc
push
les
jb
xorb
xlat
in
in
jo
iret
dec
ret
push
in
cmpsb
nop
cmpb
lods
fwait
mov
pusha
or
aam
cld
pandn
stos
arpl
arpl
push
pushf
sahf
cs
out
mov
clc
push
mov
outsl
and
inc
mov
jno
imul
xor
insl
fidivl
xor
and
push
popa
xchg
test
rcl
arpl
sub
xchg
sub
fistl
lcall
shr
inc
ret
dec
sbb
fisttpll
push
push
scas
push
jno
mov
lcall
outsb
in
bound
jae
std
int3
jp
call
fimull
mov
test
adc
pop
shrl
cld
les
or
insl
in
enter
or
addr16
mov
inc
inc
bswap
enter
je
push
jl
popa
mov
movsb
mov
adc
insl
sbb
lds
je
cld
dec
mov
mov
sbb
fmull
dec
jle
loopne
sti
xchg
jbe
sbb
sti
push
sbb
pop
adc
popa
inc
iret
imul
inc
ret
sub
std
out
nop
mov
in
into
pop
cmc
jg
pushf
out
push
push
push
pop
mov
test
cmp
std
iret
dec
add
repnz
jp
or
outsl
mul
mov
pop
test
test
mov
push
mov
int
std
int3
cmpsl
lock
dec
pop
ret
fninit
pop
jmp
ret
outsl
es
cmp
mov
xchg
add
ljmp
sbb
fcoml
imul
sub
aam
or
sbbl
pusha
mov
lea
shrl
dec
and
jmp
add
sbb
sbb
push
imul
xchg
fcompl
adc
out
jmp
lret
mov
rorb
jmp
xor
sbb
pop
adc
dec
xor
insb
push
in
dec
lods
xchg
pushf
xchg
in
in
stos
jno
pop
ret
data16
cli
lret
test
imul
or
sbb
push
fsubs
xor
sub
pop
push
js
pop
jae
icebp
lret
movsl
rolb
or
add
adc
imul
cmpsb
jns
jb
sbb
ljmp
mov
loope
hlt
mov
pop
xchg
sbb
decb
ja
dec
inc
mov
pop
inc
test
aas
out
std
lret
or
adc
adc
rcll
loop
sti
jno
int
jns
mov
fdiv
fs
jne
mov
mov
xchg
dec
push
shrl
wbinvd
shlb
xchg
jns
lods
xchg
pop
cmp
orl
mov
pop
dec
xchg
lcall
mov
xor
and
pushf
lcall
dec
lret
mov
sub
imul
cmp
cmp
or
inc
and
ss
test
rcrl
sub
pop
inc
pushf
or
iret
fcompl
mov
jne
xchg
inc
out
pop
shll
lods
clc
sub
nop
jne
dec
mov
data16
lret
scas
scas
lcall
cwtl
ja
jl
enter
mov
adc
mov
cmpsl
mov
mov
lret
fbstp
sbb
xchg
jbe
push
bound
in
or
pop
inc
xor
dec
rcrb
or
addb
cmp
push
pop
lea
nop
cmp
or
inc
adc
sub
rcrb
inc
sub
lea
in
loop
lods
repnz
movsb
pop
or
mov
push
icebp
daa
ja
adc
adc
jle
lea
xorl
xchg
jb
push
dec
repz
inc
das
sarb
out
jns
std
adc
loopne
pop
stos
cmp
insb
cltd
daa
adc
xchg
sbb
adc
fcompl
loop
addr16
or
cmp
sahf
test
inc
jg
in
xor
jecxz
pop
mov
rcrb
movsb
cmp
lods
push
movsl
call
jl
sub
clc
in
lahf
stc
push
and
mov
and
iret
dec
pop
shlb
lcall
xchg
inc
jmp
in
and
notb
cwtl
mov
jnp
lods
icebp
out
push
jo
bound
and
mov
sub
fsubrl
or
adc
loop
cmp
sub
push
cmpsb
cmp
dec
and
lahf
test
dec
div
pop
call
sub
into
xchg
jg
lea
adc
pop
lcall
cltd
cltd
sti
mov
push
rcrb
pop
or
jge
jge
add
lret
mov
sub
xchg
jns
jnp
jmp
stc
xor
pop
pop
call
xor
xor
roll
int
mov
mov
and
lcall
mov
pusha
mov
add
adc
xchg
push
cld
and
jg
adc
outsl
test
push
pop
push
sti
aad
add
mov
test
xlat
ret
lahf
mov
in
fadds
popa
push
and
mov
pop
ja
lds
test
push
shlb
mov
gs
fwait
call
push
xchg
sti
int
mov
or
aaa
or
popa
aaa
out
add
in
dec
fwait
push
xchg
lds
loopne
inc
ds
call
int
xor
imul
out
jae
sub
mov
push
push
iret
xor
call
lods
lret
outsb
fmulp
or
mov
fldcw
sub
arpl
arpl
xchg
add
xchg
jns
lcall
push
jge
arpl
insl
mov
push
arpl
ret
pushl
sbb
in
xor
outsb
stc
lock
push
clc
add
daa
jo
in
cmp
xchg
ret
inc
sub
aam
aaa
inc
lahf
leave
add
lcall
jnp
cmpsb
dec
stc
xchg
stos
mov
aam
outsl
xchg
jo
xor
movsb
test
mov
dec
mov
jp
mov
aaa
xchg
dec
cs
ss
cmp
xchg
clc
sub
loop
movsb
shlb
mov
dec
mov
adc
pusha
jnp
or
cmp
pop
push
xchg
cmp
fdivl
mov
sarb
test
and
fsubs
adc
sbb
dec
ljmp
push
int3
sbbb
sub
push
cltd
hlt
or
jo
jecxz
push
push
jle
pop
aaa
stos
nopl
mov
and
stos
xchg
cli
xchg
in
dec
fmull
jp
int3
mov
mov
xchg
jle
sti
mov
mov
pusha
sbb
mov
lea
shll
push
inc
ret
mov
jmp
mov
and
xchg
adc
cmp
movsl
movsb
insl
push
mov
fimuls
daa
and
sub
sbb
pop
into
mov
test
xchg
movsl
aad
cmpb
cld
test
iret
daa
cs
push
ret
xor
mov
jnp
leave
push
call
cltd
xchg
xchg
pop
scas
shll
repnz
or
jb
fstl
push
jge
shll
cmp
xor
pop
movsb
push
xor
je
fisttpl
imull
xchg
jmp
shl
lds
mov
cltd
movsl
push
jne
clc
into
pop
pop
or
jl
sti
stc
pop
out
mov
hlt
test
fldcw
stos
cmp
pop
mov
std
add
xchg
or
pop
mov
push
adc
test
es
cmp
fidivl
shll
gs
cs
aas
inc
cmp
mov
addr16
test
inc
push
push
sub
pop
pop
ljmp
ror
lahf
jp
lcall
ret
sbb
out
lahf
ljmp
adc
xor
aam
xchg
xchg
nop
loop
mov
les
fwait
scas
mov
mov
cmpsb
lret
movsb
dec
rcrl
cmpb
clc
shrl
or
mov
lds
call
or
and
out
in
sbb
iret
lods
sahf
insb
jle
mov
pop
in
push
inc
addr16
mov
cwtl
cmp
cmp
adc
push
pusha
outsl
add
enter
xor
arpl
nop
inc
cmp
into
lods
pop
or
bound
pop
scas
loopne
push
cmp
mov
lds
inc
mov
push
mov
or
cs
push
pop
jmp
mov
ds
loop
lods
cmp
jns
push
adc
nop
or
movsb
icebp
popf
adc
or
enter
xor
pop
pusha
call
decb
movsb
lret
or
aam
testb
push
inc
popa
test
scas
pop
stos
lcall
inc
int3
loopne
mov
aam
addr16
aad
shrb
push
add
repz
inc
jge
sbb
sbb
and
adc
popa
scas
xchg
ljmp
xchg
and
jmp
xchg
xchg
add
add
dec
stos
dec
jne
ss
push
and
sarb
push
push
push
popa
aas
inc
imul
cmpsl
lds
cmpsl
jno
adcb
daa
add
pop
out
mov
int
rcr
test
cld
or
or
sbb
cmp
jnp
sub
mov
stos
je
es
jo
fidivrl
cwtl
shl
insb
ret
cli
cmp
cmp
mov
push
inc
into
add
outsb
fsubp
sub
fwait
push
call
lcall
mov
and
out
and
popf
out
in
outsl
pushf
ret
pop
mov
adc
stc
rol
mov
or
or
dec
mov
cmpsb
fsub
xor
pop
mov
add
ljmp
lret
mov
mov
ss
cmp
xchg
and
ja
mov
icebp
sub
xchg
rol
loope
shl
fs
shll
ss
inc
ret
addr16
jp
gs
sub
jnp
out
xorb
jbe
xor
lods
jle
inc
dec
repnz
popa
dec
sarl
loopne
test
and
pop
aas
fdivrl
dec
mov
mov
cmc
andb
inc
push
and
jl
enter
mov
mov
orl
in
repnz
xchg
adc
cmp
mov
repz
or
add
aam
sub
adc
or
in
mov
push
cmp
sub
iret
pop
xor
push
inc
inc
push
lock
leave
roll
aas
cmp
pop
in
or
inc
push
cmp
inc
push
mov
fisttpll
in
sub
rcll
rol
test
cmp
imul
push
dec
cmpsl
aam
jmp
ds
mov
sbbb
pop
xor
lahf
fcmovne
fsub
jns
cmp
xchg
loop
data16
nop
and
add
in
add
popa
or
ret
xlat
int3
jnp
gs
cmp
push
cmpb
jae
add
sti
sub
cli
ret
xlat
les
andb
mov
rcll
pop
sbb
mov
dec
lcall
jl
xor
dec
xlat
aad
mov
adc
xchg
xchg
subl
repz
sbb
into
adc
fs
mov
bound
lds
mov
ret
inc
mov
adc
jae
xchg
sahf
pop
inc
loope
xor
sub
out
in
push
mov
rorb
sub
jnp
mov
icebp
pop
enter
popf
fs
push
adc
clc
pop
out
push
pop
les
dec
inc
adc
jno
and
je
push
ss
loopne
mov
dec
xchg
out
inc
jne
cmp
in
adc
popa
sar
inc
cmp
adc
sub
in
popl
mov
mov
cld
dec
sbb
jmp
mov
mov
mov
adc
jb
or
pop
cmp
cmpsl
pusha
mov
or
sahf
movsb
aam
andl
push
incb
pusha
movsl
or
scas
adcb
into
jmp
mov
mov
sub
lret
add
xchg
les
ds
popf
outsl
js
cmp
mov
cltd
icebp
inc
push
insb
cltd
adcl
sbbl
xor
fwait
pop
dec
inc
cltd
stos
addl
insb
repnz
fdivr
loop
into
sub
push
xchg
push
mov
xor
leave
idiv
outsl
int3
mov
bound
xchg
mov
or
inc
clc
roll
jnp
scas
popa
loope
pop
cmp
jecxz
in
push
aaa
xor
inc
cli
imul
jo
dec
jne
rcrl
inc
add
jp
out
enter
sub
insb
inc
inc
cmp
decl
roll
mov
out
sub
add
fstps
push
fistpll
push
lock
out
mov
push
outsl
out
mov
cmpsb
pop
pop
and
lret
imul
dec
or
push
sbb
push
pushf
sub
pop
or
outsb
sbb
inc
sarl
mov
push
mov
inc
lret
mov
popa
shrl
fs
repz
pop
es
cmp
in
loopne
loope
loope
xlat
jl
call
jnp
push
adc
xchg
loopne
xor
arpl
xchg
or
jle
dec
dec
pop
nop
xchg
push
xor
pop
js
in
test
cli
mov
sbb
mov
enter
mov
sbb
pop
mov
jno
xor
push
es
lock
vaddsd
movsb
loop
movsb
mov
push
or
mov
mov
push
mov
mov
aad
sbb
jae
add
imul
sbb
sti
and
add
out
repz
lahf
mov
and
inc
les
popf
cmp
testl
nop
xor
pop
sub
sub
inc
and
aam
icebp
push
jmp
xchg
inc
addr16
add
pop
mov
aas
dec
sti
push
push
flds
imul
enter
icebp
add
push
sub
mov
fwait
cmp
inc
cwtl
sbb
sub
cltd
jmp
es
ret
dec
cmp
xor
mov
and
out
adc
inc
dec
fmuls
pop
and
mov
mov
or
lret
push
sub
lahf
mull
out
into
enter
xchg
in
xlat
out
xchg
movsb
xchg
xor
lret
pop
mov
sbb
mov
mov
jnp
add
int3
loope
cli
jae
out
push
in
aaa
enter
push
xor
add
inc
test
push
out
or
lcall
dec
div
iret
out
stos
daa
fdivrl
xor
push
adc
stc
jecxz
or
test
xchg
cmpsl
pop
in
and
leave
mov
or
or
mov
push
xlat
push
add
mov
pop
mov
pushf
cmpsb
pushf
mov
cmpsb
cli
filds
cmp
popf
jmp
pop
cwtl
incl
xor
shlb
js
or
sbbb
push
rcrb
test
icebp
push
sbb
mov
leave
clc
mov
scas
sarb
add
stos
adc
mov
pop
je
adc
test
fildl
inc
lods
and
pop
jge
lret
lret
daa
mov
pusha
mov
cld
outsb
lods
fwait
mov
sub
lcall
sti
call
jg
test
pop
inc
aaa
lds
mov
sub
jmp
in
and
gs
sbb
mov
lods
test
jle
in
dec
adc
movsl
adc
xchg
lods
cmpsb
lret
sub
pop
mov
testw
rcrl
enter
cmp
cmpsb
popf
notl
or
pop
jle
jno
test
mov
out
pop
and
cmp
adc
push
sbb
sbbb
dec
into
add
cwtl
movsl
cmp
pop
push
push
inc
fs
pop
jne
add
sub
out
fidivl
test
and
outsl
scas
adc
or
push
xchg
faddl
cmp
cs
mov
shlb
sahf
pop
clc
movsl
sbb
fcmovu
mov
dec
in
push
xlat
ja
sbb
sub
fwait
jne
pop
pop
pop
and
movsb
dec
lods
lahf
stc
push
sbb
rorl
dec
jl
sub
adc
push
cmpsb
adc
rcll
out
lock
xchg
aad
and
mov
das
pop
dec
inc
push
sbb
lret
iret
push
mov
sti
insl
ss
adc
dec
lock
push
fsubr
jmp
and
inc
popa
outsb
adc
shlb
shl
push
ds
push
loopne
sub
inc
add
sarb
pop
adc
pop
sub
jl
dec
mov
enter
or
rol
sbb
mov
push
scas
inc
adcb
jl
enter
sbb
repnz
dec
rorl
pop
iret
cmc
sahf
or
je
out
test
mov
add
inc
out
rcl
loop
pushf
pop
notl
shr
mov
movsb
dec
in
push
pushf
or
fs
test
call
aam
inc
stc
shlb
das
or
fwait
incb
dec
ret
push
pop
inc
sbb
mov
pop
sub
loop
sub
xor
xchg
or
test
outsb
push
push
lea
mov
sbb
inc
popf
or
sub
xor
xchg
cmp
outsb
shlb
loopne
mov
insb
xor
pop
mov
mov
push
push
add
inc
sub
test
pop
imul
mov
loop
rol
aas
xchg
pushf
and
test
push
fs
int
or
adc
dec
scas
push
notl
lret
push
cmp
stc
call
aam
into
aam
jp
push
cmp
mov
cmc
sbb
jns
test
inc
pop
fistps
popf
mov
pop
aaa
aam
dec
popf
jecxz
add
outsb
fucomp
aam
inc
push
stos
push
mov
cmp
jl
xchg
inc
add
push
jb
adcl
daa
std
in
pop
xchg
mov
push
jae
and
sti
cmp
movsb
mov
clc
pop
imul
fisttpl
pop
ds
out
leave
rolb
xchg
sbb
repnz
js
adc
aad
fwait
sbb
and
hlt
push
mov
mov
popf
hlt
loope
ja
and
mov
repz
int3
jmp
cmp
hlt
mov
mov
insl
clc
push
out
rcrl
or
js
ljmp
adc
pop
add
std
fwait
sub
fmuls
pop
dec
subb
push
inc
push
inc
bswap
lea
cmp
xchg
xchg
jg
popa
or
jnp
jnp
cmpsl
insb
andl
sub
xchg
dec
leave
lcall
jmp
mov
mov
mov
in
aad
stos
add
enterw
lds
or
aad
loope
jmp
mov
pop
and
xor
pop
lret
mov
imul
sub
inc
lahf
pop
pop
mov
lods
mov
xchg
push
lds
and
cmp
sti
mov
push
mulb
mov
lcall
insl
lcall
rcrb
hlt
push
btr
clc
and
leave
sbb
mov
lret
or
cmc
inc
repz
mov
cmpsl
jbe
test
or
sub
push
add
or
cmp
rclb
cmc
imul
sbbb
sbb
mov
stos
mov
xor
fists
pop
das
ror
push
mov
leave
xchg
push
inc
adc
cmpsb
fucomi
loope
dec
push
repz
icebp
call
sub
fwait
inc
mov
xchg
push
cs
rolb
and
es
rclb
xchg
xchg
push
and
mov
out
sbb
mov
loopne
and
daa
scas
jecxz
sbb
add
popf
xchg
mov
test
lret
fbld
in
sub
test
test
fisttpll
aam
divl
xlat
stc
pop
repz
out
inc
pop
je
out
mov
in
subl
add
mov
leave
mov
jle
je
sbb
push
aaa
lcall
es
adc
ljmp
stc
cwtl
xchg
repz
adc
out
mov
push
das
mov
mov
mov
hlt
dec
test
xchg
and
addr16
lods
jl
lret
sarb
xor
mov
push
xchg
pushf
or
mov
pop
enter
xor
add
sbb
xchg
aaa
shl
into
subl
add
sub
pop
aam
sbb
das
aas
xchg
mov
fucom
insl
and
cmc
lds
ret
or
shrl
lds
mov
repz
popf
mov
xchg
lods
dec
in
push
push
ljmp
cwtl
mov
push
mov
cmp
fdivrs
filds
xchg
sbb
jb
clc
andb
ss
ds
adc
dec
mov
xchg
push
stos
xchg
push
sbb
jne
jb
push
lcall
sbbb
xchg
adc
pop
cltd
js
repz
leave
pop
xlat
outsb
mov
inc
loop
cld
das
cwtl
movsb
or
fadds
mov
cmp
jmp
cmp
in
mov
xchg
loopne
mov
xchg
jecxz
sub
nop
mov
cs
add
inc
repnz
lock
or
xchg
xlat
leave
ds
decl
or
cwtl
mov
jl
dec
aad
mov
addr16
cwtl
loopne
add
stc
mov
adc
xchg
out
and
add
les
mov
fmuls
pop
xchg
aad
rorl
shrd
clc
repnz
lret
add
fiaddl
cmpsb
int3
sbb
jbe
jns
and
adc
xchg
cmp
ret
ss
shll
cmp
or
xor
jmp
movsl
divl
fwait
cmp
sub
fsts
adc
dec
adc
mov
sub
inc
push
jmp
push
out
cltd
fstpl
sbb
in
pop
inc
sbb
jne
popa
aas
nop
lahf
xor
mov
ss
pop
call
ss
ja
in
pop
dec
cmp
xchg
fadds
jb
sbb
push
repnz
add
ret
mov
js
test
es
cld
jge
pop
mov
shrl
mov
aam
cmp
pop
mov
iret
sub
pop
stos
mov
mov
std
subb
imul
aam
mov
xor
push
push
pop
jl
pop
loop
fisttpl
fbld
scas
bound
lret
stos
test
push
and
dec
add
inc
dec
lea
pop
aam
lcall
popf
pushf
fwait
mov
out
or
mov
and
xchg
or
addr16
xor
inc
mov
aaa
mov
pop
adc
add
push
stos
xchg
fucomp
idivl
js
inc
int3
mov
inc
das
stos
mov
cwtl
cmc
push
pop
insl
mov
push
nop
scas
mov
dec
jns
mov
inc
inc
lret
out
or
adcb
lods
xor
or
pop
movsl
mov
or
jo
jne
mov
add
in
jnp
inc
cmp
jge
push
dec
idivb
stos
push
pop
nop
out
or
cmp
xlat
lcall
or
fwait
mov
push
notb
cmc
and
push
das
add
faddp
lock
out
loop
sub
lret
fcompl
scas
or
jl
pop
dec
inc
mov
stos
mov
add
inc
cmp
ret
mov
addr16
ret
xchg
add
test
jmp
mov
jnp
scas
mov
sbb
mov
testl
xor
push
fisubs
stos
jns
popa
xchg
add
push
faddl
arpl
rorl
sub
xlat
outsl
repz
and
out
sbb
int3
xor
mov
jmp
jne
push
push
jmp
mov
sub
ret
fnstenv
mov
jbe
ljmp
into
aaa
push
sti
dec
inc
cltd
push
push
pop
xchg
fidivl
ret
xchg
mov
lea
pop
sub
dec
nop
sub
mull
dec
sbbb
mov
push
ja
aam
lods
inc
mov
inc
movsb
xchg
cmp
adc
push
dec
das
push
jl
ror
imul
rclb
test
mov
fnsave
mov
jge
outsb
sar
sbb
push
or
dec
stos
test
sahf
pop
mov
dec
ja
adc
sub
inc
lods
add
sarl
or
loopne
in
adc
fcoms
in
pop
add
shlb
in
jle
add
shll
icebp
pop
aad
repz
arpl
out
sub
push
mov
sbb
sub
xor
jmp
hlt
das
mov
push
xor
push
sbbb
push
divb
pop
mov
sub
fwait
mov
sarb
das
add
in
jae
sub
ja
or
jo
nop
repnz
add
loop
mov
xorb
mov
pop
jo
mov
std
pop
dec
pop
mov
repnz
mov
sub
sahf
xchg
ja
adc
fcoml
xor
loop
orb
add
sub
fisttpl
out
test
add
dec
out
cmp
cltd
ud1
push
sbb
sar
incb
cltd
jne
js
dec
lahf
adc
xchg
adc
mov
push
mov
ljmp
jne
ja
xor
stc
ss
fs
dec
pushf
notb
stos
outsl
or
sub
mov
mov
cmc
mov
or
loopne
call
lret
cmp
xchg
ds
fwait
mov
pop
sbbl
sub
lea
inc
jns
cmp
mov
scas
push
lods
std
rorl
pop
stos
in
mov
push
xchg
jmp
push
fldenv
push
movsl
push
push
push
push
pushw
scas
jae
add
mov
orl
andl
out
int3
push
and
pop
sti
dec
shr
lret
leave
cmp
insb
add
cmp
sahf
ret
ret
jmp
pop
cmp
cmp
ljmp
cmpsl
xchg
das
sbbb
push
push
fcoms
dec
push
push
cmp
lahf
cmc
data16
cmp
outsb
jo
movswl
xor
std
adc
imul
inc
inc
leave
loope
ja
in
or
sbb
fstpt
icebp
add
push
adc
jbe
fdivs
and
sbb
mov
add
jae
dec
add
push
imul
cmp
pop
or
cmp
or
pop
ljmp
cs
data16
inc
inc
popf
sbb
mov
movsb
lea
or
xor
dec
add
mov
mov
add
in
mov
lret
ret
or
add
add
pop
sbb
xchg
outsb
out
dec
sub
sub
xor
jmp
iret
ljmp
sub
das
xchg
mov
cld
jge
pop
ja
xor
aad
jbe
fildl
push
pop
jne
cmp
adc
cmp
xchg
jno
pop
mov
mov
or
xchg
pop
push
sarl
inc
insb
push
sbb
cmp
adc
mov
aaa
sti
rol
lods
stos
mov
jecxz
mov
outsl
in
aam
mov
mov
sub
aam
icebp
lods
test
xchg
fdivrl
es
icebp
test
in
mov
mov
dec
scas
mov
jnp
test
push
lret
cmp
jle
orb
sti
arpl
rcll
rcll
scas
and
push
mov
lcall
cltd
add
jne
push
dec
int3
cmp
ficoms
and
subb
mov
cmp
cwtl
xor
mov
stos
mov
ds
addb
adc
xchg
inc
call
aaa
xchg
add
sub
das
pop
pop
fdivp
inc
cld
jecxz
xchg
xor
data16
adc
lea
iret
out
fsubrs
lret
mov
xchg
ss
cmp
lret
pcmpgtb
or
rclb
sbb
xor
cmpsl
js
pop
xor
sahf
clc
lods
call
cmpsb
andb
iret
mov
mov
xchg
and
fcomps
loopnew
fs
movsb
mov
std
cwtl
aaa
and
adcl
jo
lahf
cmp
daa
test
lahf
ds
adc
jmp
fists
pop
dec
jb
cltd
das
out
dec
mov
ja
dec
hlt
sub
adc
cmp
xchg
je
into
push
scas
inc
iret
std
mov
cmpsl
repnz
out
or
je
mov
mov
ja
rcrl
dec
xor
fdivl
mov
mov
movsb
sub
lods
lock
ret
aaa
mov
push
call
and
gs
or
or
push
into
ds
lcall
push
arpl
mov
pop
mov
in
movsl
fsubs
popf
fcomi
pop
mov
mov
and
xchg
fsubrs
rcl
call
movsb
jbe
or
xchg
stos
imul
mov
sbb
mov
xchg
dec
adc
mov
addl
push
pop
aas
lahf
xchg
nop
push
xchg
mov
or
xor
daa
dec
out
stc
dec
add
xchg
pop
mov
shrb
fs
adc
cmc
sub
mov
arpl
les
dec
je
and
xchg
clc
sub
mov
sub
rcr
cmp
es
adc
xchg
test
dec
out
xchg
outsl
aas
repz
daa
nop
es
lock
ja
cli
dec
out
cmp
xchg
mov
push
xchg
and
dec
push
clc
mov
leave
fucomip
jmp
mov
outsb
cmp
fucom
cmp
insl
sarb
dec
out
outsl
shlb
jno
loope
push
iret
pop
or
mov
mov
xor
fbld
out
sahf
nop
loop
sbbl
sar
mov
mov
insb
movsb
mov
repz
ljmp
or
lock
loop
in
or
nop
dec
dec
lea
add
cmp
leave
jle
cld
adc
xchg
cmpsl
insb
pop
nop
fcoms
mov
cmpsl
icebp
loope
popf
rclb
cmpsb
cltd
fidivrs
adc
inc
pop
cmp
cmp
push
aaa
test
cmp
fidivrl
or
mov
loop
or
fcmovne
cmpb
cmc
daa
insb
cli
xchg
xchg
push
mov
repz
dec
sub
inc
pop
in
sti
mov
jo
fisttpl
pop
lret
lret
cld
xchg
lea
xchg
jns
incb
and
fidivs
fdivl
xlat
mov
push
mov
push
into
mov
xor
xor
sti
sarl
adc
sub
mov
out
mov
push
int
addb
jo
bound
add
inc
adc
lock
push
or
ds
pop
jp
mov
int
std
and
ljmp
and
add
fbld
and
shrb
pop
out
aad
jno
and
mov
lret
sbb
push
fiaddl
xor
mov
push
inc
fmull
xor
sbb
jae
sahf
mov
adc
jno
sub
xchg
insb
dec
mov
sbb
scas
dec
in
add
out
out
pop
ret
sub
dec
fucom
mov
ja
jecxz
mov
xor
adc
or
xchg
push
repz
aad
mov
xchg
lcall
int3
or
sub
test
aas
shlb
xchg
inc
aaa
jb
and
sub
cmpsl
sbb
arpl
fildll
push
cmpb
in
or
aaa
pop
ljmp
xchg
sub
mov
jg
dec
mov
mov
outsl
fidivl
aam
xchg
push
push
and
cmpsl
mov
bound
subl
in
push
fwait
ss
sbb
cmp
data16
sub
xor
repz
mov
dec
clc
mov
shrl
jo
test
dec
jecxz
outsl
cmp
popa
or
adcb
jno
xchg
in
addr16
adc
lcall
pushf
aaa
ss
xlat
rolb
nop
ret
inc
adc
push
adc
or
mov
outsl
rol
mov
jo
pop
adc
mov
pusha
movsb
or
or
iret
bound
or
insb
loop
sub
or
jmp
pop
loop
xchg
pop
xchg
sub
xchg
push
mov
stos
shl
repnz
mov
push
stc
inc
dec
xor
mov
mov
add
xchg
cmp
rorl
cli
mov
sub
shl
mov
lds
repz
in
in
xor
mov
push
mov
jecxz
mov
out
pop
jg
std
mov
mov
sbb
pusha
xchg
cmpsb
in
xor
rcll
sbb
mov
aaa
mov
stos
xchg
sarb
movsl
sub
insb
rcrl
and
inc
mov
fcoml
or
sbb
dec
pop
and
lcall
bound
jmp
lods
jmp
inc
xchg
push
xorl
ljmp
cmp
popf
ror
pop
xlat
xchg
jnp
cmpsl
imul
inc
das
xchg
mov
mov
lods
cld
mov
or
xchg
div
mov
mov
stos
lcall
mov
pop
rclb
sub
cmpsl
mov
fildl
cwtl
ret
mov
out
call
push
nop
push
sub
out
scas
pop
sub
dec
insl
cmp
mov
xor
into
mov
pop
int
add
mov
jle
and
xlat
subl
mov
fisttpl
mov
jge
pop
dec
sti
xchg
movsb
insl
mov
outsl
test
xor
jmp
xchg
pushf
popf
ds
notl
incl
mov
popa
mov
adc
push
roll
pop
and
jmp
mov
inc
dec
mov
rorb
lcall
cmc
loopne
aas
xorl
add
loope
jge
sub
rol
test
cmp
xor
jb
das
and
dec
out
pop
out
or
push
xchg
mov
dec
mov
pop
popa
ja
test
movsb
lods
xchg
sub
cmp
xchg
dec
pop
push
jne
and
push
fidivl
mov
jnp
push
fs
lods
aad
pop
icebp
push
cmp
lret
mov
loope
jle
pop
int3
lcall
inc
inc
popf
es
sbb
mov
mov
adc
mov
or
lret
cmp
pop
repz
sub
rolb
ljmp
inc
pop
ljmp
cs
pop
jnp
fcmovne
sub
mov
ljmp
push
and
add
jge
clc
aaa
xchg
mov
scas
xchg
push
cmpb
inc
pop
std
fwait
mov
sub
mov
add
popa
aad
ret
mov
outsb
mov
mov
push
add
xchg
lea
sahf
mov
xor
mov
adc
aad
in
sbb
shll
outsb
mov
dec
leave
lea
add
push
inc
dec
mov
mov
lcall
in
mov
arpl
addb
or
es
cmp
xchg
cmp
cmp
bound
cltd
cmpsl
sbb
cli
or
sar
inc
lds
inc
sbb
ds
jnp
push
movsl
scas
inc
pop
insb
insb
push
cli
call
stc
and
mov
int
arpl
sarl
add
and
and
or
les
lea
dec
mov
jge
push
jge
leave
and
mov
and
dec
xchg
gs
mov
pop
cltd
aas
mov
addr16
out
inc
nop
andl
in
stos
inc
cmp
cmp
jo
add
icebp
adc
mov
flds
test
cld
dec
fsubs
out
lock
and
push
pop
inc
push
pop
mov
xlat
adc
imulb
bnd
dec
std
cmp
or
dec
ja
pop
mov
fwait
subl
sbb
mov
stos
aad
rcrl
push
lea
mov
and
jno
mov
lods
dec
div
xchg
sub
jl
xor
sub
push
pop
decb
cmp
push
pop
fisttpl
out
push
ja
aaa
fsubr
je
negl
pusha
lret
add
out
jmp
stos
sub
pushf
jb
dec
add
arpl
cmpsb
pop
scas
jge
cltd
sub
std
mov
rol
fisubs
pop
out
dec
dec
nop
hlt
pop
jmp
popf
xchg
mov
aas
test
jb
mov
add
push
and
push
push
loope
out
inc
fldenv
xor
stc
mov
dec
mov
dec
call
pop
test
inc
leave
adc
mov
fnstsw
enter
pop
sbb
ljmp
push
shl
mov
iret
cld
or
mov
xchg
hlt
daa
outsb
push
test
mov
jno
pop
cld
dec
ja
push
jns
mov
mov
jno
out
pop
out
jns
cwtl
js
jno
xchg
test
aaa
rclb
insb
inc
mov
mov
sub
je
hlt
pop
and
lods
lret
xor
ret
addl
push
mov
movsb
mov
jecxz
jno
pop
in
jg
stos
fcomi
ja
mov
pop
loop
fwait
shlb
mov
insb
testb
test
or
inc
xchg
test
jns
push
pop
or
cs
dec
jle
lret
fsubl
test
ja
push
rcrl
out
xor
mov
adc
pop
sbb
movsl
xchg
mov
in
jl
cmp
cmp
add
or
push
jns
inc
call
push
data16
call
xchg
dec
sub
outsb
aas
lods
pop
or
mov
int3
pop
sub
ret
arpl
inc
lods
dec
insl
xchg
cmc
inc
outsl
jae
pop
push
jp
test
int3
loope
cs
dec
add
inc
in
aas
cmp
ja
stc
dec
xchg
push
push
jo
mov
sub
shl
jp
test
ret
inc
and
jb
mov
pop
loop
push
sub
fwait
mov
cs
jb
jne
pushf
mov
pop
fcomps
push
mov
movsl
jp
pusha
jle
mov
je
sub
lret
inc
data16
and
arpl
pushf
adc
mov
pop
scas
dec
enter
in
call
setb
leave
pop
jecxz
iret
pop
fstpl
fadds
pop
push
vcvtpd2udq
push
mov
cmpsb
adc
icebp
ss
dec
int
jb
add
inc
push
pop
popa
sub
mov
das
add
data16
cmc
jmp
les
jo
stc
jno
dec
aad
jnp
xchg
aaa
lret
pop
sbbl
or
adc
hlt
ds
outsl
fists
push
adc
in
lock
gs
out
aaa
mov
and
adc
cmpsl
fistpll
mov
andl
mov
mov
mov
lods
push
lods
sbb
gs
add
lahf
sbb
in
pop
mov
jae
scas
not
pop
inc
or
out
sub
cmp
lea
add
jno
imull
mov
push
mov
pop
jno
test
sbb
les
inc
jne
imul
push
sbb
jmp
xchg
stos
jbe
je
in
xlat
sbb
pusha
jb
jne
add
mov
fisubl
push
imul
lods
mov
pop
repnz
lea
mov
push
cmp
pop
dec
lahf
xchg
xchg
jmp
inc
or
outsb
dec
inc
inc
notl
push
mov
fstl
js
inc
inc
daa
sbb
push
mov
mov
cmpsl
out
jmp
dec
mov
cmpsb
mov
or
mov
and
adc
shrb
out
repnz
sub
int3
out
sbb
out
mov
int3
in
lahf
fwait
into
or
sbbb
popa
out
cmpsb
mov
inc
adc
and
test
jge
aaa
int
scas
and
fldt
cwtl
or
testl
repnz
clc
in
push
in
in
ds
leave
fisubrl
insb
inc
xchg
dec
xchg
ds
mov
add
nop
fdivl
test
sbb
punpckhbw
sbb
jge
mov
inc
add
imul
fsubl
addr16
icebp
stos
imull
icebp
xor
xchg
mulb
or
mov
scas
add
stos
imul
inc
js
fsub
or
adc
mov
jno
sub
sarb
rcrb
push
xor
mov
mov
inc
xor
push
inc
outsb
mov
xor
decl
xor
lahf
fisubs
jae
inc
cld
mov
cltd
shl
inc
inc
fs
arpl
pop
and
ja
jnp
scas
es
outsb
mov
stos
dec
sbb
out
mov
xchg
int3
aam
test
adc
lea
nop
andl
push
in
jno
in
in
and
jne
lds
jg
notb
in
cmp
call
dec
and
aaa
adc
inc
mov
adc
fwait
sub
mov
mov
xchg
push
pop
xor
icebp
cld
hlt
mov
pop
pop
insl
add
xbegin
sbb
ss
and
push
dec
jnp
sub
ja
push
popa
jo
adc
jo
pop
dec
icebp
gs
and
mov
adc
jmp
js
call
fdivp
push
jnp
cmpsb
jp
or
enter
jp
push
lea
inc
outsl
cs
fwait
mov
sbb
dec
jge
adc
int
xchg
xchg
dec
sub
cmp
ds
cs
mov
rorl
cltd
int3
pop
ret
aas
cmc
mov
les
mov
lods
xor
mov
lods
mov
adc
shrl
adc
cmp
add
jmp
push
mov
mov
push
dec
fs
notb
movsb
imul
pop
popa
out
popl
jne
cmp
jl
sahf
push
mov
push
pop
and
jge
cmp
add
pop
mov
sbb
and
push
and
add
sbb
cmp
sub
sahf
cmpl
das
cwtl
insl
in
mov
aas
sub
cmp
push
aam
pusha
pop
and
jp
and
popf
cld
mov
cmp
scas
xchg
mov
and
shlb
jb
add
jp
cmp
pushf
loopne
jmp
push
adc
fisttpl
pop
popa
scas
xor
out
sti
pop
jns
dec
jle
dec
pushf
cwtl
inc
sub
repz
leave
loopne
fwait
or
pusha
dec
movsl
and
inc
inc
fst
jae
dec
shlb
fsubs
ja
xchg
add
movl
cmp
and
push
or
cmp
pop
cmp
out
push
es
leave
mov
cmpsl
jbe
loopne
scas
xor
pushf
pop
leave
ja
aad
sub
out
js
lods
inc
cmpsl
xchg
xlat
or
adc
nop
mov
jmp
pusha
sbb
lea
enter
cmpsl
xlat
out
pop
outsl
sbb
jecxz
test
test
inc
rcrb
add
mov
imul
rclb
inc
sub
fsubrs
mov
popa
jo
js
fidivrl
push
or
sub
ret
hlt
pop
int
jb
mov
jb
cmp
xchg
mov
xchg
or
lods
testl
sub
roll
and
mov
jge
aaa
lods
mov
in
pop
cmp
scas
test
lods
das
cmpb
pop
and
dec
sub
cmp
cmp
mov
daa
jl
sar
sahf
inc
sbb
out
jns
shlb
test
lahf
popf
or
aas
in
add
inc
lods
mov
stos
jae
pop
fisubs
xchg
sub
cmp
xor
pop
jns
push
orb
addr16
jo
or
leave
mov
and
pop
mov
or
push
cmp
cmc
lods
sub
dec
push
add
pop
inc
mov
into
gs
inc
jo
ret
ds
sub
cmpsl
mov
pop
pushf
push
xchg
inc
and
dec
mov
push
nop
mov
push
and
js
mov
sbb
daa
mov
pop
stos
dec
adc
cmp
and
xchg
push
xchg
jmp
lret
cmp
lock
xchg
fcom
sub
push
xor
cmpsl
inc
mov
sarl
add
daa
mov
test
jg
lret
jae
mov
xchg
dec
jl
lcall
mov
lret
or
loop
popf
mov
add
jge
or
mov
das
lahf
push
dec
std
ja
insb
jno
or
mov
push
pop
out
inc
sbb
mov
cmpsl
cli
pop
mov
aaa
scas
xchg
xchg
out
idivl
sub
mov
ja
sub
mov
sbb
sub
insl
imul
ret
cwtl
push
xor
inc
jmp
mov
test
pop
hlt
test
mov
fucomp
ret
aad
sbb
jno
pop
lods
ja
inc
add
aaa
cwtl
inc
pop
mov
out
xor
jle
test
push
aaa
mov
push
mov
push
ret
in
or
sbb
cmc
pop
mov
test
rorb
push
gs
mov
jae
and
inc
push
out
int3
jl
sub
pop
xchg
js
xor
lcall
mov
sub
jge
dec
aas
mov
mov
cld
push
call
mov
jmp
ret
es
xchg
cwtl
pop
push
adc
inc
xor
loopne
in
cld
push
mov
out
mov
out
adc
xor
and
add
push
mov
hlt
ret
lods
and
aaa
vmptrld
lds
or
rorl
movsl
xchg
fprem
bound
dec
add
aas
add
sbb
inc
in
pop
pop
or
lods
jmp
mov
nop
sahf
or
mov
push
fstpt
pop
pusha
test
cmpsl
je
repz
xorl
mov
sbb
cld
mov
pop
mov
test
cli
inc
xor
inc
xlat
lods
or
cmc
and
xchg
in
es
mov
cs
jp
addr16
and
and
and
loopne
push
xlat
enter
inc
outsl
inc
adc
shrl
sti
inc
imul
jb
ret
mov
add
jns
in
pop
inc
test
push
xlat
nop
jecxz
std
cmpsb
testb
int3
xchg
pop
test
mov
rcl
mov
xchg
mov
les
push
icebp
mov
fs
sbb
insl
loop
or
mov
imul
mov
mov
nop
jae
out
xor
roll
int3
mov
lcall
cmp
push
loopne
jno
inc
pop
push
in
out
jecxz
xchg
xchg
ds
imul
xlat
jo
fildll
fcmovnbe
sub
cmpsl
out
or
and
arpl
fidivs
xchg
inc
leave
lret
pushf
dec
sbb
jne
jb
pop
stos
xor
icebp
stos
jbe
xor
push
cli
xchg
cld
cld
icebp
pusha
fildll
popf
scas
push
fimuls
andl
push
mov
sahf
std
test
mov
cmpsb
aam
cmpsl
mov
jns
push
sti
test
inc
sbb
data16
and
jge
and
rclb
sbb
call
shrl
and
mov
push
inc
fnsave
sbb
insl
sub
enter
lcall
enter
stos
lods
xor
scas
shlb
pop
push
adc
adc
stc
and
sbb
in
dec
add
inc
cmpsl
inc
lea
sub
cmp
hlt
cwtl
enter
xor
dec
jle
cmp
repnz
mov
pop
push
sbb
fdiv
mov
addl
sub
mov
and
sbb
push
jl
daa
scas
mov
stos
sbb
mov
ljmp
nop
mov
pop
mov
outsl
push
les
lahf
or
jp
dec
mov
inc
pop
jns
sbb
cmp
int
jb
int
icebp
and
mov
pusha
adcl
xchg
jge
data16
and
outsb
cs
cld
push
addl
jg
add
xor
fbstp
int
inc
inc
or
xchg
inc
dec
push
jp
sbb
rcr
or
repz
lds
sub
mov
fildll
test
inc
stos
lods
push
icebp
and
lock
or
movsb
cmp
add
xor
out
push
subl
inc
dec
add
das
pop
shrb
lret
mov
call
push
js
cmp
loope
dec
add
inc
mov
xchg
and
loopne
data16
ss
or
push
outsl
jmp
cmp
jb
fisubs
ja
dec
das
push
data16
pop
sar
inc
cmpsl
mov
nop
stc
pop
or
inc
sub
scas
jns
ds
push
jb
mov
mov
popf
je
in
lret
dec
rol
ror
cmp
sbb
cmpsb
mov
adc
pop
test
mov
xchg
xchg
loop
push
xor
jl
fdivl
add
jbe
ret
inc
xchg
xor
mov
fcoms
popa
xchg
or
jns
xor
jecxz
mov
lds
dec
fisttpl
test
pushf
in
mov
loopne
ss
fsubrs
inc
inc
mov
loop
sbb
pop
push
push
mov
cmpsl
xor
cmp
fbstp
sbbb
xor
dec
push
flds
adc
inc
fidivs
mov
in
sbb
daa
js
push
cwtl
sub
pop
adc
jne
jae
fs
xor
sub
sarl
jle
mov
sbb
sub
and
pusha
gs
pop
aas
sti
sti
lods
iret
cwtl
out
cmc
js
pushf
pop
gs
popf
jne
mov
popa
movsl
xor
inc
push
cmp
sbb
sub
outsl
imull
aas
mov
xchg
movsb
mov
inc
out
addr16
sbb
into
jno
fs
fnstsw
inc
clc
cmp
xor
dec
sub
arpl
sahf
push
data16
pop
int3
or
test
cmp
mov
fidivs
movsl
dec
push
shll
push
scas
mov
and
adc
dec
mov
mov
out
fnsave
or
lahf
lds
pop
stos
dec
adc
push
xor
jl
leave
pop
inc
mov
ds
sub
fsubrl
ds
push
js
insb
fnstsw
dec
push
or
sbb
aad
mulb
mov
inc
clc
adc
xor
pop
and
mov
add
and
imull
and
lock
popa
push
test
test
mov
push
pushf
arpl
ja
andl
cltd
data16
and
add
jl
xchg
rcl
mov
xchg
insb
push
sbb
aad
lcall
icebp
mov
aam
jb
fldcw
cmc
jmp
xadd
ljmp
das
add
pop
and
add
sti
int3
xor
in
and
cmp
adc
jl
dec
ret
cmp
pop
or
fidivrl
movsl
into
sbb
mov
cmp
inc
fildl
in
aas
sbb
push
and
jbe
in
cmpsl
ds
pop
test
add
call
pushf
jp
outsl
jmp
mov
fnstenv
out
dec
aas
imul
leave
into
outsb
jno
xor
dec
adc
inc
cmp
xchg
pop
scas
movsl
mov
shrl
push
or
jne
dec
inc
push
sub
fst
ds
hlt
jbe
out
lock
cmp
sub
dec
mov
adcb
loop
pop
jns
movsb
xchg
popf
shlb
clc
push
cmp
sub
xor
in
sbb
adc
fs
push
negl
jl
les
sub
or
jp
mov
ljmp
imul
mov
push
sub
mov
mov
inc
mov
cmp
and
jl
out
pop
mov
sub
imul
and
daa
insb
mov
stos
mulb
into
mov
add
aam
dec
scas
inc
push
nop
std
adc
ds
jl
adcb
out
cltd
cmp
cmp
pop
sub
cmpsb
in
test
mov
out
xchg
jg
mov
imul
or
idivb
out
xchg
and
lret
roll
loope
adc
andl
or
je
mov
xor
pop
into
xor
or
mov
xor
dec
adc
cmpsb
call
jne
ret
mov
xchg
popa
jae
and
ljmp
pop
cltd
incl
push
push
dec
aam
les
in
and
add
or
adc
mov
or
shrl
shr
mov
cmp
rcrl
cmp
and
ficoml
mov
pop
sbb
stos
rcll
pop
sub
dec
xor
sub
push
pop
push
test
sahf
cmc
inc
inc
sub
ficomps
or
jle
rorb
inc
pop
dec
mov
ds
pop
cmp
ficoml
jmp
in
stc
and
push
mov
test
cld
add
mov
dec
fldt
push
ljmp
or
cmpsb
fs
lahf
testb
xchg
or
push
aad
ds
sbb
mov
and
push
cmpsl
mov
scas
fcomi
mov
imul
loop
pop
xchg
pop
cmpsb
pop
test
push
mov
ds
ret
or
scas
andb
int3
lret
jne
roll
es
cld
push
arpl
or
jo
add
fstpt
je
ja
cmp
clc
and
test
jg
or
insb
lods
xchg
icebp
fldl
push
mov
jae
cmp
push
sbb
test
cltd
cmp
add
push
mov
ljmp
fdivrs
or
xlat
movsl
xor
and
xchg
dec
pmaxsw
inc
xor
mov
jo
adc
mov
fwait
cs
mov
adc
push
push
jmp
dec
es
jmp
mov
movsb
mov
out
sub
adc
mov
lret
mov
push
outsb
mov
mov
push
adc
icebp
popf
xchg
push
adc
fdivrl
jg
sub
testl
shl
xor
mov
ds
or
subb
and
stos
mov
inc
ja
jo
aas
xlat
mov
lods
push
xor
sbb
stos
subb
xchg
sti
mov
jmp
lret
mov
add
and
push
xchg
mov
pop
dec
mov
xchg
jnp
mov
cmp
insl
xlat
sbb
repnz
int3
into
jmp
negb
pop
push
adc
pop
scas
sbbb
inc
xchg
jno
xchg
ffreep
push
sub
jae
dec
adc
in
repz
cmpsb
gs
mov
scas
inc
leave
add
sub
sbb
orb
fwait
pop
inc
or
sbb
in
pop
popa
popf
pop
cmp
addr16
xor
jl,pt
lock
stos
arpl
roll
popa
out
out
enter
jnp
jae
pop
mov
ret
andw
sub
mov
and
mov
fiadds
stos
inc
leave
mov
inc
insb
aaa
push
icebp
jecxz
mov
jo
lods
imul
adc
lods
sub
push
or
add
std
test
inc
je
cmp
int
mov
sub
scas
in
or
push
insl
pop
xor
roll
adcl
int3
ret
ret
xor
push
pop
imul
fwait
sbb
xchg
push
test
sbb
push
shlb
mov
cmc
pusha
xor
lret
adc
movsl
xor
cmpsb
sbb
ror
pop
push
and
and
push
sbb
aad
mov
xchg
sbb
insb
fs
arpl
or
mov
xor
xchg
out
xchg
mov
mov
adc
mov
fstpl
mov
push
cmpsl
fxch
cmpsl
mov
jge
pop
jno
roll
pusha
push
inc
sarl
push
insb
shr
out
gs
adc
mov
mov
push
mov
cwtd
jmp
movsb
fnsave
lock
cmp
cwtl
xchg
popa
add
fldenv
and
xchg
enter
inc
ljmp
test
sub
cld
orb
jp
test
push
adc
mov
or
sbb
push
sti
loopne
dec
in
adc
lds
cwtl
ljmp
sub
adc
repnz
pop
aam
cmpsb
cmp
jnp
or
xor
pusha
mov
leave
ficoml
or
lods
mov
inc
nop
sarl
mov
lret
push
je
adc
mov
xchg
fcomps
sahf
loopne
xchg
xchg
aas
in
rcl
push
jg
inc
mov
rorl
test
in
call
fiaddl
xchg
add
imul
or
dec
bound
push
sti
xor
in
pop
or
cmp
aam
add
stos
stc
cld
and
lock
mov
dec
shll
mov
push
rcrl
mov
sbb
roll
jge
jns
dec
int
movsb
inc
inc
mov
sar
mov
and
mov
mov
arpl
sub
in
push
iret
sbb
stc
jg
inc
pushf
add
adc
aam
in
les
adcb
dec
test
and
lods
addr16
je
aas
cwtl
xlat
cmp
in
popf
add
aam
dec
jo
mov
mov
pop
pop
xor
mov
jo
xchg
and
test
xchg
inc
imul
hlt
insl
fnsave
add
lret
adc
out
jmp
movsl
sbb
fbstp
inc
fucomi
mov
stc
insl
adc
dec
into
arpl
jnp
enter
push
addr16
inc
inc
pop
jl
cmp
cmp
add
push
xchg
addr16
jno
sub
lcall
sbb
cmp
or
dec
test
outsb
outsl
data16
cwtl
or
mov
xchg
adc
inc
movb
sub
cmp
jp
jle
cmp
lods
stos
mov
pop
add
sbb
dec
jp
adc
pop
sub
outsb
xor
popf
sub
fldenv
mov
mov
push
stos
adc
insl
xchg
clc
scas
test
adc
jbe
adcb
xlat
pop
pop
cmp
int
nop
fnsave
mov
jge
insl
sub
fistpll
sti
jne
cmc
xchg
cmp
ret
dec
sahf
mov
gs
cmpsb
lcall
in
clc
mov
inc
add
fadds
mov
push
das
sbb
add
cmp
imul
push
enter
hlt
out
mov
in
pop
xor
mov
jge
stos
nop
push
nop
push
and
mov
jnp
mov
fwait
out
push
popf
pop
sahf
std
push
sti
sub
mov
data16
pop
jnp
je
rorl
leave
pop
add
mov
mov
ret
es
adc
xor
xchg
cli
adcl
loop
add
jle
shrl
je
jmp
dec
or
jecxz
pop
in
outsb
mov
pop
cmp
mov
push
or
ss
add
dec
mov
push
push
int3
sbb
mov
outsl
pop
js
in
dec
rorb
in
or
mov
pushf
mov
std
sbb
push
jl
or
int
out
add
xchg
inc
stos
dec
cmpsb
repnz
sbb
ss
arpl
pop
push
cmp
ret
lds
cmc
mov
out
imul
inc
inc
jmp
in
or
aam
cmc
push
sbb
repnz
sub
lods
mov
shlb
hlt
dec
push
inc
in
mov
cmp
call
aas
mov
cmp
push
dec
cmpsb
xchg
xchg
jno
add
std
into
cli
je
mov
sub
push
and
sub
xchg
inc
lret
in
pop
sahf
and
in
dec
aas
rep
jb
pop
sub
pop
pusha
cmp
loop
inc
push
mov
cmp
pop
loope
inc
jne
xlat
mov
out
cwtl
push
ret
sub
mov
inc
imul
mov
sarb
shlb
or
xchg
test
or
psubsw
test
scas
mov
fnstenv
ljmp
icebp
jo
cmpsl
push
jmp
dec
int
jp
push
xchg
mov
adc
std
fwait
cmp
mov
cs
mov
pop
and
ljmp
shlb
loope
mov
pop
sti
dec
out
mov
xchg
cmp
gs
mov
cmpsl
rcrb
dec
fistl
arpl
aad
mov
in
mov
mov
test
xchg
or
push
jge
cmp
jp
inc
fidivl
add
sub
leave
xor
pop
jle,pn
inc
sub
cmpsl
mov
data16
cmp
jbe
sub
sub
pop
jmp
push
add
inc
xor
rcr
scas
adc
sub
imul
xchg
mov
pop
cmp
pop
push
sbb
loope
rcrb
sub
mov
in
fnstenv
stos
ret
push
dec
sub
pop
stos
cmpsb
sbb
inc
ret
adc
popf
ret
xor
and
sbb
hlt
nop
inc
pop
fidivrl
cmpsl
lahf
movsl
stc
repnz
aam
lds
jae
sub
inc
jg
arpl
xor
pop
jmp
insl
insl
dec
cmp
sti
aas
leave
cltd
popf
test
in
push
push
or
adc
es
orb
mov
stc
int3
add
push
aaa
mov
add
lds
lret
inc
pushf
inc
mov
movsl
mov
dec
data16
inc
mov
add
dec
out
in
and
fcoml
or
lcall
lcall
pop
mov
jae
into
cmpsb
adc
adc
loop
fmull
cltd
adc
cli
test
shl
inc
add
cmp
loopne
mov
outsl
aad
add
mov
bound
insl
sub
xchg
inc
mov
sub
psubsw
xor
fmull
and
inc
sahf
test
cld
mov
pusha
stc
cwtl
pop
or
xchg
in
xchg
loop
arpl
int
mov
icebp
dec
repz
adc
xor
out
mov
mov
sbbb
popf
jge
bound
je
xchg
rcrl
movsl
pushl
mov
out
add
dec
mov
lods
rclb
push
jne
push
ja
push
stos
iret
push
mov
stos
pop
shr
xchg
ficomps
mov
notl
cld
out
int3
mov
sti
mov
jge
pop
mov
shrb
je
adc
adc
pop
push
jo
push
cld
hlt
test
jae
sbb
mov
add
inc
and
push
test
inc
jb
lahf
shll
pop
cld
rolb
adc
dec
aaa
rdtsc
xchg
dec
into
push
xor
cmp
das
inc
cmpsl
sub
fwait
jbe
cli
xchg
push
jle
hlt
out
dec
test
pop
lods
xor
mov
mov
pop
ss
dec
ret
dec
push
push
mov
jae
mov
lret
ret
add
es
mov
jne
cmp
lods
jp
sbb
loope
and
sahf
push
push
push
adc
cmp
jp
pop
push
enter
push
push
lods
xor
mov
pop
and
jmp
adc
popa
jae
push
xchg
aam
sub
and
adc
pop
mov
dec
push
cmp
fcom
sub
pop
flds
nop
inc
adc
testb
xchg
mov
ret
add
outsl
pop
jb
or
xor
and
add
push
in
repz
dec
jge
mov
push
push
xchg
loope
aas
or
inc
test
test
les
pop
shrl
jge
shll
cmp
les
mov
cltd
mov
mov
stos
mov
insl
xor
mov
pop
push
adc
stc
pop
xchg
pop
add
mov
and
mov
test
ret
in
call
xor
pop
outsl
or
int3
and
or
cltd
jb
mov
mov
sbb
pop
mov
xchg
sbb
cli
xchg
sbb
mov
test
mov
loopne
or
sbb
xlat
shl
mov
cltd
push
and
sub
pushf
mov
xchg
in
mov
add
int3
in
int3
hlt
push
cli
mov
push
mov
fwait
xor
add
mov
jmp
jnp
cmp
jmp
mov
mov
clc
push
sbb
cmpsb
mov
mov
imull
jne
mov
in
sub
inc
sub
mov
dec
fwait
and
mov
push
in
leave
cld
jne
jp
xor
sbb
decb
ljmp
popf
inc
movsl
xor
dec
push
repnz
insb
jno
lahf
push
jmp
testl
sub
in
mov
in
into
jge
std
jnp
pop
xchg
shll
sub
daa
or
movsl
mov
mov
cmp
es
iret
ljmp
outsb
orb
push
nop
out
shrb
sub
adc
xor
les
pusha
cld
adc
mov
aas
aaa
xor
add
scas
popf
ss
mov
popa
pop
inc
add
sub
daa
lods
push
xchg
or
ret
jo
dec
pushf
jno
xor
stos
and
sub
mov
jne
mov
xchg
push
lock
dec
xchg
stos
mov
dec
les
test
cmp
push
cmp
das
mov
mov
mov
pop
mov
lods
es
scas
hlt
jne
ja
inc
roll
lods
fistpl
jmp
jns
push
jno
push
ficompl
inc
add
dec
mov
jae
push
mov
daa
mov
mov
scas
hlt
aad
dec
sub
or
jecxz
mov
repnz
je
dec
mov
adc
jecxz
loop
mov
divb
jo
and
add
xchg
enter
cltd
jp
jmp
jle
addr16
test
inc
lahf
lret
dec
pop
pusha
dec
push
xlat
incl
ret
or
inc
icebp
add
xchg
int
sub
pinsrw
pop
lret
aad
in
add
es
ljmp
inc
or
mov
add
in
cmc
mov
xor
out
cltd
xchg
mov
mov
sbb
daa
xlat
fsubl
cmp
inc
pop
pop
mov
movzwl
add
pushf
cmp
js
flds
aaa
dec
mov
mov
or
enter
pop
mov
cmp
jmp
sarb
mov
sub
mov
or
stos
push
int
cltd
sahf
repz
out
dec
loopne
in
pop
mov
loope
dec
repnz
xchg
into
andb
pop
and
jne
mov
or
cmpsl
push
add
mov
ficomps
enter
xor
mov
insl
fcoms
push
xor
push
test
pop
push
jmp
and
mov
fsubrs
enter
sub
loop
loop,pn
mov
push
mov
loopne
cmp
mov
dec
nop
ljmp
jns
fwait
lods
aaa
mov
pop
jecxz
and
lahf
addl
imul
cmc
stc
ja
fs
push
movsl
mov
sbb
loopne
and
icebp
dec
fcomi
loop
mov
rcll
mov
aad
fbld
std
inc
nop
ret
enter
mov
dec
mov
iret
push
push
popa
mov
inc
iret
mov
push
push
push
mov
xor
fistpll
cli
bnd
sbb
pop
jp
sbb
or
popa
mov
loopne
mov
shl
mov
ficoml
frstor
stos
cmpsl
movsl
and
idiv
jne
dec
xor
push
add
dec
mov
in
inc
mov
test
or
mov
dec
adcb
ret
mov
xchg
inc
lods
sub
out
mov
in
adc
out
jne
mov
cmpl
aam
push
mov
add
or
xchg
adc
std
xchg
fistl
xchg
xor
scas
mov
xchg
ret
mov
push
sbb
incb
cmpsb
push
fsubs
outsl
dec
ret
data16
repnz
add
ret
pop
xlat
adc
lcall
lock
int
out
sti
xchg
out
cmpsl
lock
push
sbb
mov
fcomp
jnp
lods
imul
imul
dec
add
bound
fldlg2
sbb
xchg
mov
cmp
ret
adc
pop
ja
jb
fsubrl
xor
cmp
cld
lret
inc
leave
lret
int3
inc
test
xor
das
mov
pop
cmp
cmp
adc
mov
mov
sbbb
fnstcw
pop
nop
stos
xor
test
bound
fisttps
push
mov
lahf
add
adc
jp
sbb
cmp
aad
adc
inc
adc
cmpsl
call
mov
out
mov
cltd
xor
cmp
adc
ljmp
sub
shrl
cli
cmp
pop
inc
mov
add
mov
sti
lods
ja
mov
ffree
mov
shll
inc
mov
adc
jecxz
repz
lret
push
xor
mov
lcall
xchg
fs
xor
sub
popf
mov
out
pop
or
add
insl
sub
in
loop
addr16
push
enter
pop
out
dec
cmp
lods
xor
mov
mov
enter
fstps
divb
shlb
xor
jg
fcoms
jne
xchg
lds
pop
adc
jbe
lea
or
movsl
loopne
cld
dec
sub
add
adc
cmp
mov
mov
ss
rcrl
or
pop
mov
mov
adcb
ret
pop
popa
imul
mov
ds
push
pmulhw
aas
lahf
std
mov
out
call
and
pop
or
aad
lahf
xchg
pop
pop
int3
scas
sbb
movsl
mov
aaa
mov
outsl
fnstenv
push
ljmp
inc
addr16
cmpsl
mov
push
xchg
lahf
mov
in
adc
push
or
xor
xlat
sub
jp
push
aam
sub
mov
jo
aad
pusha
repz
roll
fdivrl
sbb
outsl
mov
sbb
jg
cmp
sub
xor
xor
lods
out
jge
push
lret
pop
pushf
jl
daa
push
jl
shl
scas
fmulp
mov
dec
dec
jbe
lahf
data16
add
outsl
fs
loop
fldt
push
mov
insl
maskmovq
notl
mov
push
out
test
fidivl
mov
fld
pushf
enter
mov
mov
sbb
mov
imul
ret
xchg
addl
pushf
icebp
insl
mov
inc
pop
mov
dec
jne
dec
ret
insb
out
add
adc
xchg
call
stos
out
mov
ficompl
roll
mov
mov
pop
bound
inc
repz
cmpsb
repnz
ret
sarl
daa
in
std
movl
mov
ja
mov
mov
test
data16
jb
sahf
pop
cmp
pushf
jecxz
inc
xor
test
sub
mov
mov
pop
or
or
sahf
mov
mov
sbb
test
xor
sbb
test
in
and
cmpsl
cmp
push
pop
movsb
adc
test
icebp
jno
iret
dec
stc
fdivrl
lds
movsb
inc
dec
xchg
mov
and
cmp
push
jmp
jno
aas
fxtract
lods
cmp
in
pop
aaa
imul
push
and
sbb
push
setno
notl
sahf
pop
xchg
pop
mov
cld
lcall
lods
pop
lret
fs
or
sbbb
repz
vpmacssdqh
sti
pop
out
movsl
bound
adc
sub
cs
bound
mov
adc
pop
sub
sbb
loop
and
dec
jae
jmp
cvtps2pi
jne
iret
mov
arpl
push
push
sub
mov
push
adc
ffree
lds
ss
lahf
fisttpll
push
xorb
push
mov
dec
dec
std
sub
mov
and
fmul
in
mov
popf
inc
lahf
shlb
loopne
call
addr16
inc
fwait
cmp
inc
pushf
daa
fucomp
mov
clc
cmp
das
xchg
dec
xchg
call
adc
sbbb
out
jae
pop
in
jae
stos
shl
iret
sub
cltd
stos
rcrb
aad
cli
mov
pushf
jmp
or
ljmp
ss
adc
push
push
dec
call
call
das
jge
fs
jae
shll
cmpl
and
adc
mov
push
icebp
in
cmpb
jp
les
sbb
jae
frstor
jnp
inc
dec
and
jo
or
xchg
mov
divb
pushf
add
int3
inc
nop
xchg
in
jl
xchg
mov
jp
push
pushf
mov
dec
mov
std
sahf
lds
push
jbe
cmpb
xbegin
ljmp
insb
adc
roll
push
mov
and
push
mov
shll
jg
push
hlt
add
inc
imul
and
sahf
enter
faddl
xchg
mov
addl
shrb
enter
in
movsl
outsl
pop
pop
lea
jp
popf
test
in
mov
jge
sti
xchg
jno
jno
inc
stos
xchg
pusha
and
pushl
fadd
dec
popa
sub
fldcw
stos
test
dec
sbb
sahf
lods
sbb
xchg
loopne
int3
xchg
loopne
aad
dec
and
mov
jp
and
cmp
jns
cmp
jmp
sub
movsl
xor
out
dec
jle
xlat
rcll
out
pop
dec
push
xchg
aas
mov
out
cwtl
jmp
cwtl
jmp
imul
andb
std
mov
in
sahf
xor
in
iret
iret
sarl
test
inc
jl
je
cmp
push
sub
jne
pop
and
push
cmp
push
mov
jo
sub
xchg
ljmp
or
lods
ss
rorl
xor
out
shll
enter
in
and
jecxz
stos
xor
mov
hlt
cmp
dec
pop
cli
test
cmc
das
adc
ret
fwait
adc
jae
repz
aad
stc
jnp
arpl
sbb
rorb
lea
or
int
cltd
rorb
xor
xor
divb
xchg
out
shll
movsl
les
out
rolb
stos
test
mov
pushf
cmc
and
mov
ret
add
aad
pop
sbb
jae
add
or
or
push
cli
mov
imul
int3
adc
repnz
sub
out
clc
outsb
pushf
idivl
mov
cmp
dec
adc
out
movsb
insb
cmp
push
ret
mov
add
cmp
sbb
mov
sti
add
rcrb
fcoms
stos
fmul
adc
cmp
push
popa
test
sbb
std
sbb
mov
iret
jae
mov
sub
fldcw
cmp
rcrl
push
mov
fsub
aam
fnsave
inc
std
negb
or
cmpsl
stc
mov
fdivrl
gs
mov
dec
mov
cmp
or
and
cmp
mov
call
sbb
push
shl
or
stos
sub
dec
repnz
sbb
lods
push
cmp
fwait
adc
xchg
out
int
push
xchg
sbb
clc
cli
loope
inc
sbb
mov
inc
inc
mov
jle
add
je
jae
test
out
aaa
jmp
sbb
push
mov
xchg
add
loop
cli
ja
inc
ret
push
in
out
out
imul
in
mov
and
call
add
mov
sub
inc
sbb
or
addr16
repnz
shlb
ficomps
jno
or
aad
popa
pop
sarl
lds
scas
jno
sbbl
mov
inc
repnz
lock
push
ficompl
cmp
and
ljmp
xor
add
out
loope
sbb
sub
std
jg
adc
fstps
or
push
cmp
sbb
fsubrs
shlb
scas
lcall
inc
cmp
hlt
popf
popf
nop
imul
shll
mov
movsb
xchg
daa
not
adc
pop
ds
mov
jns
test
sbb
inc
xchg
shl
xchg
ret
sahf
push
outsl
mov
pop
or
mov
pop
lock
loopne
outsb
int3
ss
mov
lds
add
test
and
lcall
or
xchg
cmp
jp
push
mov
fcoms
cmp
std
call
in
xchg
adc
xlat
lock
arpl
mov
adc
dec
mov
out
adc
add
fldenv
mov
push
mov
add
cmp
hlt
fwait
bound
fsubs
mov
test
pop
sahf
stos
inc
jns
or
cmp
pop
inc
mov
rorb
or
pop
inc
lahf
xchg
push
lock
imul
repnz
insb
and
cmp
mov
das
cli
fwait
sub
jnp
fmull
mov
int3
adc
sbb
adc
scas
inc
dec
mov
pop
das
shll
repz
jo
incb
sub
sub
jnp
add
or
jmp
inc
div
jno
hlt
push
cmpsb
push
xchg
fdivrl
sbb
test
decl
mov
in
pop
fwait
inc
dec
leave
lea
in
test
loopne
push
xchg
mov
xchg
mov
frstor
mov
mov
outsb
xlat
dec
adc
cwtl
push
jbe
sbb
or
mov
es
adc
cli
mov
mov
jp
dec
shlb
repz
lods
popf
bound
or
lcall
dec
aaa
xchg
sub
pop
or
fsts
mov
mov
mull
inc
mov
sbb
mov
out
push
xor
cmpsb
imul
inc
and
adc
mov
jo
sub
cld
nop
pop
cmp
xor
or
test
mov
and
inc
push
mov
repz
adc
push
popa
scas
xor
pop
and
aad
aaa
push
inc
pushf
mov
mov
filds
leave
mov
leave
mov
cmc
ljmp
sub
aad
cmp
fnsave
lret
lock
sbb
xor
repnz
or
mov
out
inc
and
mov
xchg
dec
mov
mov
inc
dec
mov
hlt
or
aas
mov
jbe
popa
pop
mov
pop
push
arpl
and
rol
cmp
mov
cmpsb
nop
mov
rcl
dec
dec
repnz
cs
lahf
into
mov
push
or
mov
xchg
loopne
fwait
push
scas
add
mov
cmp
jbe
cmp
xchg
aad
andl
jmp
add
mov
add
std
ret
xor
mov
test
scas
push
in
or
or
aam
pop
xor
dec
add
dec
sahf
xlat
repz
hlt
lret
mov
mov
fdivrl
das
daa
adc
arpl
fwait
and
mov
sub
cld
lea
pusha
cmp
orl
movsb
bnd
lea
sub
jg
scas
sub
pop
xchg
call
loopne
dec
ret
cmp
ljmp
int
ljmp
divl
cli
mov
pop
aad
inc
or
loope
repnz
sti
push
sub
xchg
or
push
push
xchg
add
jp
add
adc
mov
mov
mov
outsl
sbb
sbb
and
sbb
test
jbe,pn
mov
cmp
or
dec
femms
lods
add
sti
dec
push
outsb
jo
cli
sbb
mov
mov
jno
test
pop
xchg
dec
xor
mov
syscall
pop
pop
xor
jnp
mov
das
mov
cli
stos
mov
xorb
push
shrb
dec
lret
and
ds
dec
fcompl
aaa
xor
movsb
std
int3
aad
mov
js
data16
loop
test
call
push
out
cmp
fcmovb
mov
out
add
push
add
ljmp
imul
out
add
cmpsl
pop
inc
mov
loope
xchg
lods
pop
fistpl
addl
nop
sarl
and
inc
cmp
aas
mov
vmovups
cmp
push
mov
sub
stos
xor
scas
fstpt
outsb
xor
or
mov
mov
in
adc
insl
pop
sbbb
int3
stos
jo
xor
adc
push
sahf
cmp
rolb
stos
and
push
jo
xor
push
adc
sub
add
sub
jbe
insl
popf
pop
xchg
dec
cmp
jp
lods
roll
mulb
insb
jbe
scas
mov
out
call
aas
and
jnp
xlat
loope
push
mov
xlat
inc
iret
or
movsl
ds
popl
jge
and
notl
adc
test
ret
push
les
and
aas
sub
ret
rcll
adc
add
insl
or
out
mov
mov
jg
bound
bound
add
mov
dec
rcl
nop
jne
xlat
add
sub
xchg
fadds
jge
inc
push
jge
mov
jmp
mov
push
cwtl
jmp
mov
icebp
and
outsb
mov
call
pop
jge
mov
cmp
add
jns
faddl
sub
iret
pop
sub
hlt
mov
jl
cltd
cs
scas
pop
lea
inc
xchg
pop
inc
in
inc
mov
mov
into
cli
movsl
cmp
fimull
mov
mov
adc
cwtl
jno
imul
int
add
sbb
test
or
dec
push
inc
xor
mov
lods
jo
dec
pop
jo
hlt
push
adc
inc
inc
push
lahf
mov
insb
mov
pushf
mov
loopne
test
icebp
cmp
inc
sbb
loopne
xor
and
mov
into
mov
mov
in
daa
repz
or
push
iret
pushf
add
nop
xchg
sbb
mov
enter
or
addl
lcall
pop
mov
xchg
add
mov
iret
adc
fcoml
into
jne
jns
and
xor
adc
in
cmp
orl
out
decl
xor
ja,pt
xchg
scas
adc
jnp
in
nop
xchg
mov
and
hlt
dec
cmp
popf
mov
add
adc
fidivs
push
sbb
inc
pop
into
lahf
or
mov
lea
std
push
push
sub
dec
adcb
xor
dec
leave
mov
inc
es
jp
sub
mov
push
mov
jmp
xchg
xor
movsb
ret
scas
xor
incl
ret
or
push
jae
dec
sub
in
aaa
inc
or
mov
push
sbb
xchg
mov
adc
pop
int3
sbb
cmp
dec
loop
lods
xchg
jle
sub
jecxz
mov
add
insb
or
daa
xor
dec
jnp
insb
mov
pushl
cmp
addb
cmpb
jmp
addr16
orb
add
adcl
jnp
loopne
xor
leave
xchg
decl
add
shlb
iret
xor
jnp
push
test
xchg
mov
ds
mov
and
popf
imull
dec
xchg
dec
mov
cmpxchg
loope
push
cltd
loopne
push
ffree
mov
push
xlat
inc
xchg
adc
cli
dec
sbb
fisttpll
test
out
xor
push
ljmp
sti
mov
add
cmc
pop
dec
push
pop
js
pop
inc
or
ja
ret
mov
clts
test
sahf
mov
mov
sahf
jmp
cmovg
jg
fnclex
and
mov
sbb
sub
jmp
cmpsb
pop
or
add
imul
in
rorb
lods
daa
mov
adc
and
jno
ret
inc
sub
dec
sbbb
addr16
sbb
xor
mov
inc
hlt
mov
aaa
jno
pushf
mov
inc
lret
jb
cmpsl
push
pop
xor
bound
jl
add
push
and
iret
outsl
mov
jb
mov
cwtl
out
hlt
scas
pop
movsb
push
mov
xchg
mov
mov
fstp
inc
jecxz
test
dec
fs
cmp
out
xlat
sub
jmp
movsb
sub
loop
sub
sbb
les
enter
fwait
pop
push
or
push
lahf
test
and
mov
lea
sarb
das
daa
xchg
push
mov
lahf
cmp
mov
aam
xor
mov
adc
push
lds
in
int3
pop
js
jne
add
mov
sahf
fsubrs
pop
das
nop
mov
mov
shrl
mov
out
and
ljmp
mul
out
sub
idivb
imul
dec
inc
out
push
mov
pushl
xor
cltd
sbb
push
pop
aas
jl
and
xor
sahf
jno
mov
clc
pop
mov
rcr
cmp
ljmp
into
filds
and
lcall
cld
icebp
mov
xchg
adc
lock
pop
inc
aad
lcall
push
push
xchg
add
xchg
mov
lahf
int3
mov
adc
lock
push
sub
dec
orl
ja
popl
mov
psubb
in
pop
out
cld
pop
push
jno
or
hlt
pop
daa
and
pop
inc
add
test
xchg
les
sti
add
push
out
push
ret
addr16
popf
loopne
mov
mov
mov
iret
call
or
inc
add
cmp
gs
loope
stc
add
mov
daa
psrad
les
mul
outsl
cmp
jg
icebp
icebp
icebp
imul
cmpsb
aaa
std
pusha
mov
sbb
inc
ljmp
pop
xchg
stos
movsl
mov
xchg
mov
push
inc
sbb
arpl
test
fwait
mov
pop
push
mov
pop
adc
mov
rcrb
pop
mov
cld
ljmp
add
jl
jnp
and
mov
mov
gs
push
sub
ds
mov
sub
jl
mov
jnp
dec
adc
xor
aas
jb
sub
sub
scas
insb
jmp
js
add
jnp
xor
in
push
mov
pushf
popf
cmp
mov
mov
out
insl
shlb
ja
and
jmp
mov
mov
orb
add
daa
scas
mov
pop
sbb
or
cs
insb
sbb
pushf
lret
pushf
or
push
mov
cmp
fwait
dec
or
bound
sbb
mov
decb
out
lahf
push
inc
add
sbb
add
hlt
xchg
lods
xchg
jl
rorb
mov
pop
jge
loope
out
adc
push
inc
aad
out
cmp
clc
push
and
int3
xchg
setp
mov
push
push
ret
jbe
out
mov
push
jno
xchg
adc
lcall
mov
pop
movntps
and
xchg
dec
mov
mov
mov
dec
mov
xchg
fcoms
aam
jl
pushw
xchg
jnp
mov
mov
fs
jne
insb
sbb
jecxz
mov
rorl
inc
lock
into
test
adc
and
cmp
js
jmp
inc
cmpsl
pop
in
test
insl
pushf
jb
int3
test
aam
sub
insl
and
push
cs
in
jg
cmpsb
aad
or
add
jo
mov
dec
hlt
lods
ds
jp
push
xor
roll
scas
add
lea
sahf
jns
or
ja
movsl
iret
int
inc
rcrb
jmp
cltd
je
xor
jno
outsl
cmp
push
dec
push
sub
jge
loop
fwait
cld
jl
sub
ja
sbbb
iret
sub
mov
das
out
mov
xchg
jae
cmp
sbb
dec
or
mov
addr16
out
orb
xchg
dec
jns
icebp
movsb
jg
xchg
ror
fnstcw
push
sbb
ud2
sbb
mov
xchg
xchg
insl
push
mov
aad
jl
insb
fists
cmp
insl
jo
inc
rcr
mov
test
mov
mov
lahf
mov
xchg
push
enter
cmp
sub
jl
in
aad
mov
loopne
in
rolb
movsl
subl
stos
jb
iret
xchg
adc
nop
pushf
sbb
mov
lret
push
sub
hlt
dec
sar
je
lods
adc
int3
cmp
add
mov
xchg
pop
mov
repz
mov
ret
in
pop
jno
inc
stc
and
or
or
inc
jns
lds
scas
inc
lock
lods
fcmovu
stc
int3
pop
fisubs
subl
cmp
enter
mov
xorb
xor
jns
xchg
leave
jl
test
ficoml
jecxz
jno
ss
dec
dec
iret
jge
sub
mov
bnd
sahf
cs
mov
stc
out
ret
mov
gs
jae
xor
jl
add
mov
xor
inc
mov
xchg
mov
and
push
sub
pop
stos
mov
sbb
fisubrs
fisttpl
cs
dec
dec
mov
insb
jle
mov
push
les
loope
mov
jns
inc
stos
dec
in
xchg
aam
imul
xchg
cmp
mov
xor
outsl
imul
mov
mov
cmp
jae
jb
testb
imul
ret
mov
sbb
nop
cs
sarb
pop
arpl
jo
mov
pop
pop
lret
jo
test
in
lret
insb
adc
outsb
fadds
mov
lods
jmp
fs
leave
xchg
int
jg
cs
in
in
jg
mov
fstpl
sub
lahf
rorb
cltd
mov
xor
push
push
jmp
cmc
mov
mov
cmpsb
push
adc
sbb
int
popa
push
push
test
out
int
lds
shrl
xor
jle
pop
loopne
pop
movsl
jmp
push
leave
lahf
or
jo
push
sbb
cmp
sbb
adc
pusha
popf
in
adc
push
scas
pop
sti
push
lret
loope
mov
jmp
inc
aas
mov
cs
lret
sahf
and
lods
jae
inc
cmpsb
mov
cmp
adc
sbb
js
loop
stos
mov
jmp
push
xchg
xor
sahf
sbb
mov
cmp
mov
pop
mov
pop
scas
icebp
scas
jp
xchg
pop
ja
dec
int3
pop
inc
adc
and
scas
sub
cld
dec
add
adc
lcall
xchg
rolb
cltd
xchg
push
cmpb
lods
mov
mov
das
xchg
xor
outsb
lods
and
xlat
jge
lahf
dec
xchg
lret
fcmovnu
pusha
iret
inc
ds
stos
cmpsb
and
push
and
pop
mov
push
mov
rclb
mov
jbe
pop
cltd
jg
rcl
imul
out
loope
adc
pop
pop
adc
sub
fisttpl
lahf
mov
mov
adc
cmp
ffreep
push
jg
cmp
xor
jp
addr16
sbb
data16
xchg
gs
or
aam
lea
xor
dec
mov
mov
out
jl
es
fildll
lret
and
push
push
jns
jae
inc
xor
mov
adc
pop
inc
cmp
cmp
mov
jmp
jge
in
sbb
fs
mov
out
push
sub
repz
or
xchg
scas
fs
decl
pushf
pusha
mov
push
add
leave
sbb
div
lods
clc
and
aaa
jo
and
je
hlt
stc
cmpsl
pop
mov
add
cs
fs
int3
mov
loopne
jge
sbb
test
push
dec
cmp
popa
xchg
xor
popf
push
mov
xor
stc
in
xor
add
dec
sbb
ss
int3
outsb
xlat
cmp
jno
mov
cmpl
sbb
jmp
lahf
push
fistl
js
jbe
add
into
rclb
fimull
mov
push
mov
lcall
test
inc
es
dec
shlb
mov
notl
adc
dec
cmp
adc
jae
push
das
or
imul
addr16
jge
test
aas
lcall
dec
imul
push
add
ds
push
fistpll
fs
jmp
jns
lret
jnp
pushf
jl
sbb
notb
and
add
mov
popa
xchg
xor
sti
xor
xchg
mov
out
js
xlat
lea
orb
xor
insl
adc
xor
xchg
addl
inc
int3
bound
sub
jae
mov
insb
pop
pop
xor
lret
int3
stos
es
push
dec
in
ja
ja
and
sbb
fnsave
arpl
push
mov
sub
mov
jns
cmc
cmp
popw
add
inc
lea
jge
dec
add
aam
cli
aas
pop
lods
ficompl
out
inc
dec
mov
mov
movsl
and
sahf
xchg
sbb
and
icebp
mov
sub
insb
push
arpl
dec
ss
adc
mov
cmp
shlb
adcb
bound
cmpsl
icebp
sub
jge
xchg
or
fiaddl
ret
dec
xor
mul
in
mov
icebp
or
outsl
mov
sbb
cs
jecxz
sub
mov
repz
frstor
pushf
inc
loopne
pop
gs
pop
outsb
push
in
cmp
xchg
adc
xor
jnp
sbbl
aad
lods
ret
sub
das
cmpsl
and
jl
ss
movq
arpl
jl
xlat
fcomp
mov
sub
xor
dec
test
and
inc
imul
outsl
and
sbb
jno
push
add
jle
mov
fcmovnb
mov
cwtl
adc
add
ljmp
mov
push
and
mov
call
adc
and
dec
sar
adc
add
push
inc
scas
sbb
repz
xlat
mov
movsl
arpl
mov
cmp
push
jbe
hlt
pop
addr16
test
call
call
fdivs
roll
jbe
inc
sub
fwait
imul
mov
leave
pop
js
test
dec
adc
in
push
dec
jns
push
pop
mov
push
xor
pop
mov
jae
in
push
fcompl
int
jns
and
and
or
arpl
push
xchg
or
aas
xchg
mov
sub
in
push
inc
or
cmp
rorl
icebp
sub
pop
mov
mov
jl
jb
sub
push
xchg
push
and
inc
rcrl
cs
in
test
fimull
rcll
mov
dec
mov
inc
icebp
outsb
push
inc
push
fwait
mov
mov
push
sub
xchg
mov
pop
testl
outsb
or
mov
fstl
mov
into
cmpsb
xchg
lock
arpl
sub
outsl
rclb
enter
dec
xor
mov
lcall
mov
xor
incl
mov
fisttpll
and
push
ljmp
sub
inc
icebp
out
dec
sub
stos
push
pop
cmpsl
fwait
loopne
push
pusha
ds
mov
lahf
mov
cld
icebp
hlt
adc
mov
rclb
sub
cs
dec
sub
test
push
rcr
xor
popf
sub
xor
inc
hlt
lea
inc
and
xchg
dec
adc
sub
movsl
repnz
and
sahf
imul
push
add
mov
popa
call
js
fcoms
test
xor
pop
mov
std
jae
ja
fnsave
into
inc
dec
int3
dec
repz
int3
push
es
mov
mov
adc
adc
stc
aas
sub
in
mov
push
aaa
mov
fdivrs
repnz
inc
jb
into
fnstcw
lret
adc
jg
movsb
iret
rcll
fimull
sub
mov
mov
pop
scas
sub
fstp
popa
or
movsl
mov
xor
jl
fstpl
and
adc
xchg
test
and
jae
sub
outsl
test
push
cwtl
ljmp
sbb
jle
imul
mov
adc
in
pop
lcall
mov
xchg
pop
andl
and
pop
mov
pop
fs
je
test
and
mov
sbb
or
orb
outsb
popf
hlt
ret
add
inc
mov
stos
imul
cmp
add
sub
stc
pop
sarl
fimull
mov
call
add
xchg
push
jmp
or
repz
std
rorb
sbb
popa
mov
xchg
mov
testb
in
pop
ja
jle
clc
lahf
pop
adc
push
int3
mov
fwait
adc
pushf
or
ds
divl
ja
fiaddl
push
jle
popf
outsl
or
lret
cltd
ja
call
and
xlat
nop
pushl
imul
lea
mov
ret
jnp
dec
movsb
xchg
icebp
sbb
shrl
cli
mov
push
test
dec
inc
jno
add
push
push
ret
lods
pop
sbb
xchg
jl
dec
xor
fildl
sbb
ja
pop
lock
inc
cltd
cmp
lods
cs
adc
lret
xlat
loop
test
jno
inc
or
nop
outsb
mov
pop
add
push
iret
xchg
out
mov
xchg
insl
gs
lock
test
ljmp
cmp
mov
sub
mov
mov
or
and
push
and
xor
xchg
loope
lret
scas
lahf
xchg
fistpll
repnz
in
xorb
call
or
mov
add
mov
mov
mov
lahf
out
test
ja
mov
mov
ss
ret
xor
xorl
insl
sti
cmp
lahf
clc
ds
pop
mov
xor
ja
push
sub
ss
jns
mov
ss
aaa
lea
int
loopne
sbb
rorl
sti
stc
inc
fwait
es
shll
jl
xor
jecxz
sbb
mov
lret
cmp
xor
mov
jo
mov
adc
cmpxchg
jns
jne
pop
shlb
mov
lret
mov
and
das
ret
sahf
lahf
mov
movsb
outsl
jo
mov
in
ljmp
push
mov
dec
add
sbb
je
jmp
xchg
fadds
fisttpll
xor
in
inc
ret
and
movsb
mov
shll
inc
or
mov
pop
int3
cmc
fdivp
push
pop
addr16
fstpl
imul
call
std
movaps
arpl
test
and
sbb
insl
je
dec
dec
and
and
lods
sbb
jl
daa
pushf
dec
mov
fdivrs
imull
roll
mov
cltd
push
xchg
cmp
test
jg
mulb
xchg
cmc
or
jne
loope
inc
sbb
leave
push
pop
ljmp
dec
cmpsb
mov
es
in
popf
fldcw
inc
push
push
aas
ror
cmp
test
fldl
mov
adc
andb
mov
frstor
fwait
scas
inc
enter
addr16
and
cmp
push
adc
mov
jne
pop
xor
scas
loop
movl
sbb
hlt
int
jl
jecxz
fcomip
pop
pushf
loope
lret
scas
jp
jecxz
fnstsw
or
repz
es
fs
inc
fs
or
pop
pop
push
mov
fildl
cmp
jae
push
stos
and
scas
xchg
out
inc
dec
adc
mov
outsb
jo
nop
mov
add
xchg
xchg
or
nop
cmp
insb
lods
cmpsl
idivb
shrl
sub
push
pusha
or
pop
xchg
insb
in
mov
ljmp
inc
dec
cs
or
adc
adc
add
pop
mov
ljmp
sub
jbe
adc
adc
cli
call
mov
jb
jo
cmpsb
cmp
clc
mov
std
pop
xor
insl
fcmove
jo
push
inc
pop
cwtl
jo
ficompl
clc
lods
push
hlt
pop
inc
hlt
mov
outsb
roll
cmp
xor
pop
dec
and
push
jge
lods
cmp
xchg
test
push
lods
xchg
rorl
or
enter
lret
ficoms
and
inc
notb
add
int3
sub
fcom
es
sbb
xchg
mov
cmpsl
lcall
rorb
addb
lret
cmp
and
out
outsb
mov
jnp
inc
xchg
int
jnp
push
in
in
adc
outsb
xchg
pusha
rcll
xchg
mov
mov
adc
dec
mov
gs
out
loop
add
scas
mov
addr16
arpl
push
adc
lahf
insb
loop
pop
je
hlt
push
scas
push
pop
in
pop
xor
and
icebp
push
test
test
cmovo
cmpsb
and
scas
nop
sbbl
cmp
mov
cmp
rcll
stos
mov
dec
lcall
push
pop
in
arpl
cmp
mov
pop
insl
cmp
mov
jo
jne
shll
mov
pusha
inc
mov
mov
subb
int
and
jmp
ss
lahf
pop
inc
outsb
into
pop
push
mov
hlt
mov
bnd
sub
out
push
push
push
nop
xorb
fldt
out
decl
subl
and
mov
loope
dec
jp
mov
and
ja
outsl
sub
adcb
push
inc
out
adc
gs
rcll
pop
add
mov
frstor
jno
mov
rorl
lea
popf
sti
push
imul
pop
lret
sub
bound
push
lret
mov
ss
mov
xchg
push
sub
add
cmpsb
outsb
data16
int3
fs
mov
sub
xor
jle
dec
cmovs
stos
lds
pop
movsl
mov
jnp
xchg
sbb
mov
mov
or
cmpb
mov
daa
jge
mov
inc
stos
jge
sub
iret
push
and
xor
push
cld
pop
mov
fcomi
push
test
push
outsb
mov
lods
cwtl
shrb
jecxz
mov
dec
xchg
push
stos
mov
jecxz
in
xor
xchg
mov
lret
mov
outsb
fsubrs
push
pop
inc
insb
in
mov
adc
push
std
imulb
jge
mov
pop
jmp
aas
in
mov
cmp
outsl
in
add
lock
mov
mov
stc
jae
xor
out
aam
and
mov
pop
into
inc
enter
ss
xchg
lods
jp
mov
dec
shl
sbb
lcall
pop
or
pop
shrl
clc
mov
mov
push
daa
xlat
cmp
fcomp
push
add
fnstenv
cmp
popf
adc
sub
sub
rcrb
adc
scas
out
or
mov
add
push
push
and
cmpsb
clc
xor
inc
fidivrs
add
jecxz
sbb
add
mov
xchg
imul
mov
aaa
xlat
popf
jmp
jmp
test
add
fistpll
mov
rcrl
shrl
mov
xchg
fwait
adc
fcomps
int
test
shlb
xchg
and
pop
inc
int3
sub
xor
iret
repz
outsl
xor
cli
aad
dec
repz
mov
pop
push
xchg
xchg
cmpl
sti
std
adc
in
or
pop
cli
mov
in
mov
outsb
xchg
jmp
psubsw
mov
ret
sbb
mov
add
ret
lret
push
push
add
scas
dec
and
aaa
jne
int
and
popf
movsl
dec
cmp
sbb
lcall
repnz
pop
dec
test
pop
sbb
push
cli
imul
pop
lret
sub
int
sub
fists
fstpl
insl
inc
test
out
xchg
cli
test
sbb
jo
push
stos
and
lods
cmpsl
daa
and
xchg
icebp
cltd
les
fcoms
sub
jns
cmp
lret
js
std
mov
xor
movsb
fiadds
lds
cmpsl
insl
cmp
inc
mov
je
leave
sbb
jmp
mov
data16
jnp
mov
in
sub
lcall
inc
shll
scas
sbb
movsl
out
jl
andl
test
cmp
lcall
fmuls
mov
sub
std
or
in
inc
aaa
lods
jmp
ret
dec
mov
xor
imul
rol
cli
sti
pop
push
inc
shll
fidivrs
dec
xchg
vorps
inc
mov
sub
fnstsw
idivb
in
xchg
lret
cs
mov
call
mov
mov
das
pop
jb
aas
push
test
inc
repnz
and
lret
es
cmp
movsl
into
inc
loope
les
jge
xor
sahf
push
mov
jl
lock
cs
lahf
mov
inc
dec
int
lcall
enter
int
ficomps
fdivl
jne
adc
loopne
sub
loope
rcrb
in
js
cli
xchg
mov
sub
std
fdivrs
out
hlt
into
out
push
movsl
sub
add
fwait
ss
loopne
jmp
jle
push
nop
push
inc
pmulhw
ss
std
cmp
inc
dec
pop
dec
xchg
dec
push
ss
pop
dec
push
or
jns
sar
xorb
test
je
inc
enter
or
sahf
es
int
jo
es
jbe
leave
mov
testb
add
iret
and
and
inc
bound
and
jle
mov
xlat
mov
pop
mov
fucomi
sbb
adc
inc
push
mov
insl
test
scas
cmp
xchg
mov
mov
jns
or
movsl
mov
rcll
sub
stos
jge,pn
mov
cmpsl
sahf
xor
xchg
mov
sahf
sbb
sbb
idivl
and
add
mov
mov
iret
cmc
jo
ret
add
cmp
sub
and
sub
jg
add
addr16
ss
pusha
in
adc
insb
and
mov
sbb
pop
lret
mov
ljmp
loope
pop
push
pop
mov
mov
mov
ja
xchg
lret
mov
lcall
add
test
scas
rclb
movl
out
push
ret
jg
or
lods
jnp
xor
iret
pop
scas
mov
les
in
aad
pop
push
cmpsb
mov
mov
dec
cmp
push
inc
out
cltd
push
cmp
imul
xchg
rcll
ja
js
jno
jp
sub
pop
movsb
testb
jge
arpl
pop
mov
inc
inc
cs
sbb
xchg
lcall
xchg
mov
shlb
mov
shlb
dec
mov
inc
in
in
test
sbb
lock
jne
pop
movsl
mov
and
add
je
loop
in
and
stos
mov
ficomps
fistps
cmpl
ss
jnp
add
mov
repnz
jl
add
mov
mov
mov
lea
fisttpl
cmp
in
pop
lock
push
mov
out
adc
push
pop
enter
cld
pop
or
out
lret
imul
lods
ja
stos
outsl
cltd
pop
jbe
pop
cwtl
adcb
test
push
sbb
inc
or
xchg
lock
pop
inc
rolb
lods
les
dec
adc
lret
lret
mov
pop
xchg
mov
stc
mov
sub
aam
push
adc
push
inc
das
cmp
loop
or
xor
sarl
cmp
pop
dec
inc
or
dec
xlat
out
add
mov
fldenv
mov
out
and
imul
fstl
xchg
mov
ljmp
sbb
inc
push
movsb
inc
ror
bound
jl
aad
outsb
push
jmp
call
pop
or
xor
aaa
mov
inc
mov
jl
insb
mov
pop
repnz
xchg
cmp
rorl
ret
or
and
inc
add
fisubs
bound
cli
dec
enter
stc
push
insb
enter
iret
pop
test
or
test
or
push
in
shrl
daa
push
cmp
aad
data16
push
mov
pushf
mov
ja
pop
mov
faddl
and
cs
dec
and
test
adc
into
mov
adc
int3
cmpsb
or
pop
lcall
inc
les
in
sbb
mov
lea
adc
cltd
and
push
loopne
jg
aad
movl
ds
testl
add
push
add
shrb
push
cbtw
mov
or
jno
orb
cmc
lods
je
pusha
xchg
cmp
fisttps
pop
add
int
mov
cltd
arpl
mov
ret
cmp
jge
nop
xchg
divb
push
sub
dec
icebp
or
leave
push
xor
fmull
popa
jb
xchg
mov
lea
imul
lds
in
inc
adc
mov
inc
mov
adc
jle
lcall
test
pop
sbb
pop
mov
lock
mov
lea
dec
cmpsl
lret
in
repnz
repz
loop
sub
push
pop
repnz
popa
cmpsb
push
rol
pop
fadd
and
cli
dec
aaa
lret
call
mov
sbb
jbe
inc
and
pusha
sbb
lds
popf
jb
sti
stc
pop
cmp
cmp
add
mov
add
cmp
pop
out
lds
rcll
sub
pop
xchg
xchg
sbb
out
fdivrs
xchg
jnp
leave
arpl
push
gs
movb
movsl
xor
push
mov
bound
inc
notl
andl
cmp
pop
xchg
sub
inc
mov
mov
xor
jae
and
incb
push
push
pop
push
je
sbb
fsubrl
add
jmp
jb
add
test
cmp
sbb
imul
bound
and
lods
inc
adc
cmp
jle
push
push
je
hlt
ss
mov
cmpsl
mov
push
adc
adc
pop
add
out
sbb
sub
jl
mov
iret
cs
popf
inc
mov
adc
icebp
out
cli
call
data16
je
xor
clc
dec
dec
lock
insl
mov
nop
xor
ja
push
or
cwtl
popa
jne
add
jnp
cmp
xchg
bound
sub
mov
into
sbb
push
jno
loop
xchg
push
mov
hlt
jbe,pn
out
test
cmpb
lea
mov
int3
rclb
cmpsl
fbstp
aaa
lods
loope
ret
jns
adc
int
adc
cmp
mov
popf
push
in
ds
mov
addb
inc
inc
add
sub
cmp
cs
and
fsubrl
mov
in
insb
mov
xorl
test
adc
out
sub
mov
mov
fsubrl
fsubrs
int
mov
lods
inc
mov
popl
xchg
mov
jne
mov
mov
jg
popa
lret
push
rol
lahf
call
clc
pop
add
shll
sub
mov
push
push
mov
outsb
xor
inc
mov
frstor
mov
xor
sbb
cmp
push
inc
pop
in
mov
mov
adc
fadds
mov
insl
inc
fisubs
mov
mov
mov
ljmp
push
test
push
mov
jo
nop
jbe
cmc
mov
in
cltd
xor
sub
pop
mov
jl
stos
sbb
fidivs
movsl
insl
jge
sbb
jg
loope
shl
test
jbe
fs
outsl
je
jae
inc
inc
pusha
jnp
aas
fs
inc
pop
jbe
popa
fdivl
dec
cltd
stc
hlt
adc
xchg
sbb
mov
outsl
insb
xor
lahf
rcl
addr16
push
sbbl
adc
jbe
leave
sub
cmc
in
mov
push
cmp
xchg
enter
fcmovu
adc
lcall
test
mov
lcall
scas
aaa
jg
lea
sub
das
inc
test
test
xor
dec
pop
lcall
test
add
addr16
and
stc
mov
mov
sub
mov
insb
out
pop
pusha
and
test
mov
lret
cmp
aad
clc
rol
dec
imul
hlt
push
push
jb
adc
adc
sub
insb
push
dec
jmp
adc
pop
iret
adc
sbb
push
out
fisubrs
sub
pop
outsb
divb
fwait
jo
fdivs
arpl
out
out
xchg
mov
cmp
push
es
ss
test
in
jnp
stos
loope
int
aas
repnz
into
icebp
cmp
pop
xor
lret
dec
in
hlt
push
je
jg
call
cmc
mov
pop
cld
test
or
add
xor
push
out
test
pop
jb
loop
adc
in
mov
cmp
inc
std
sub
insl
or
add
daa
add
test
xchg
add
or
stos
inc
jle
mov
int3
sti
sub
push
mov
pop
push
pusha
mov
popf
dec
mov
or
cmc
gs
popa
insl
push
or
cmp
add
cmp
sub
int
leave
pop
neg
fsubrl
adc
inc
ss
lahf
dec
divb
std
dec
sbb
cmc
dec
xorl
dec
xchg
hlt
cltd
lea
std
pop
shll
mov
xchg
es
mov
xor
adcl
add
pop
or
jne
push
mov
sbb
jle
movl
test
dec
add
je
xchg
sti
pop
push
xor
shr
add
mov
inc
and
pushf
cs
xchg
sbb
inc
adc
aas
push
jae
imull
fisttpl
call
lods
les
arpl
xor
ret
lods
rcrl
adc
inc
cmp
or
out
inc
mov
shll
roll
or
dec
adc
mov
fadd
in
xchg
mov
sbb
xchg
jbe
stc
shlb
push
cmp
dec
xor
aas
pop
jne
dec
add
icebp
add
pop
xchg
lret
add
mov
dec
movsl
jle
ljmp
jg
pop
jnp
push
enter
sbb
insl
lods
call
mov
shll
mov
je
cmpl
scas
aam
out
jmp
mov
out
incl
imul
sbb
push
cmp
call
mov
sahf
cmp
mov
testb
inc
ret
sub
mov
add
or
inc
mov
int
cld
aas
or
clc
mov
es
jmp
xchg
dec
xchg
pusha
or
in
push
sub
inc
lret
fucom
int3
imul
aad
rcrl
aas
rcll
mov
jnp
mov
xchg
pop
mov
mov
mov
mov
pop
prefetcht0
xor
inc
mov
jl
into
pop
sbb
push
gs
or
imull
inc
mov
xchg
add
out
push
dec
adc
ret
or
aam
cs
xor
ret
in
repz
fmull
jo
iret
add
mov
cmp
loop
lcall
cmpsb
lods
xchg
pop
lds
stos
gs
out
push
add
cmpsl
adc
test
movsl
subl
push
dec
faddp
dec
out
mov
xor
ficompl
inc
adc
pusha
add
sbb
scas
gs
ret
sbb
pop
sbb
sub
and
xchg
ds
mov
aaa
test
push
xchg
pop
push
add
and
test
push
inc
and
inc
lods
cmp
sahf
or
dec
iret
sahf
imul
lcall
aam
repnz
dec
pop
push
or
cwtl
cwtl
jmp
cld
pop
cmp
fwait
mov
xor
test
xchg
mov
adc
mov
clc
inc
fs
mov
xor
pop
sarl
cli
jmp
jb
mov
loope
or
or
clc
xorl
jmp
jno
test
push
cmp
imul
movsb
je
add
lea
fsubrl
mov
jge
mov
or
lret
imul
inc
or
and
mov
or
adc
subb
cltd
adc
test
sti
pop
push
mov
push
lods
int
daa
test
pop
cmp
sbb
and
pop
out
sbb
mov
testb
dec
lock
movq
stc
mov
add
and
icebp
jae
mov
icebp
idivl
xlat
andb
and
cld
jns
lock
movsl
jl
mov
push
in
mov
aam
sbb
out
es
es
jmp
lahf
sub
bound
fidivrl
xchg
call
frstor
inc
test
clc
int
sbb
es
mov
in
mov
cmp
push
mov
lret
xchg
imul
loope
rcrb
ret
scas
mov
xchg
sub
and
mov
mov
pop
adc
test
hlt
pop
testl
add
mov
aad
or
cmp
dec
stos
pop
in
and
ficoml
lret
push
cltd
jle
push
mov
repz
xor
sub
and
jmp
jge
inc
mov
test
adc
movsl
loope
pop
test
xchg
mov
scas
push
lahf
lock
mov
mov
adc
or
jecxz
cmp
std
in
ss
dec
loop
inc
xchg
loope
inc
lds
mov
cmc
cs
sbb
nop
pop
lcall
das
ja
roll
in
lods
mov
test
and
clc
push
and
fwait
cmp
out
xchg
inc
inc
xchg
add
and
jb
imull
outsl
into
adc
mov
popa
xchg
cltd
pop
movhps
and
sub
not
idivl
scas
add
dec
loope
lcall
fnclex
cltd
mull
xchg
fwait
cmpl
add
shr
adc
adc
xchg
and
fsincos
in
out
rclb
jl
bound
lahf
mov
js
insb
call
adc
inc
daa
jbe
mov
mov
cmp
cmp
movsb
int
test
inc
cmpsb
repnz
sti
or
cmp
test
jno
push
arpl
mov
mov
decl
add
ds
imul
out
mov
cmc
jecxz
push
cli
rcr
inc
les
repnz
lds
lock
frstor
sub
in
and
pop
imul
mov
xor
push
les
mov
cli
aam
xchg
jnp
cmpsl
pop
xor
push
xchg
std
or
movsl
sbb
push
inc
cs
or
ja
xchg
bound
adc
sbb
notb
sub
mov
jno
sbb
ljmp
add
pop
mov
mov
add
sub
cmpsb
dec
movsl
add
test
xchg
ret
pop
insb
mov
divl
aam
rclb
push
stos
jp
scas
das
push
addr16
pop
adc
xorl
cwtl
adc
mov
imul
or
loope
lock
mov
lcall
jnp
pop
push
aaa
jae
dec
xlat
sub
lock
shrb
jmp
sbb
cld
sbb
jae
mov
out
cmpsl
jmp
add
inc
mulb
cli
fidivl
leave
fistl
lock
leave
dec
sahf
cli
mov
push
rorl
push
jecxz
push
jns
mov
sub
aad
and
sub
aam
fidivrs
popf
popa
lods
jg
and
mov
lahf
cld
mov
adc
mov
test
mov
inc
bound
imull
lcall
push
jb
jbe
pop
cmp
push
sub
dec
loopne
dec
push
sti
sub
mov
xor
jge
mov
xor
pop
jle
test
sub
push
add
mov
or
xor
jecxz
in
data16
xchg
or
test
btcl
inc
pop
sbb
fs
push
add
popf
clc
cmpsl
mov
or
jnp
fsubrs
add
and
push
lret
sbb
jbe
xor
push
jmp
ja
enter
jl
and
jp
aam
mov
sub
and
movsb
dec
jg
dec
call
or
shll
cmp
jl
arpl
push
loope
jmp
imul
add
mov
imul
jne
add
insb
pop
adc
or
push
lret
sahf
xchg
lods
popf
scas
shlb
ds
and
test
movsb
sub
jl
sarl
push
fmul
das
and
imul
pusha
cwtl
repnz
stc
inc
pop
dec
mov
push
jecxz
rclb
out
test
out
xchg
dec
inc
inc
push
aaa
mov
rcl
jle
fdivs
add
jnp
movsb
out
sbb
cs
lret
pop
lahf
clc
hlt
xchg
pop
inc
cmp
jg
in
stc
pop
xor
xchg
lods
add
push
xchg
pop
sarb
arpl
cld
xchg
callw
test
mov
in
inc
xor
test
ljmp
pop
push
inc
mov
jg
jle
ja
push
sar
cltd
stos
nop
jae
ljmp
nop
inc
mov
push
push
stc
adc
pop
xlat
push
xchg
aaa
fistl
pop
or
clc
cmpsb
pusha
in
mov
dec
fs
or
pushf
xchg
and
jle
push
xor
lret
cmp
jns
in
sub
jge
xchg
mov
jo
push
int
orb
cltd
inc
in
pop
cwtl
cld
jne
sub
iret
push
push
sub
clc
xchg
mov
fs
outsb
jecxz
xchg
push
jp
call
fdivl
ja
jecxz
neg
and
sub
mov
jbe
push
scas
negl
pop
loope
mov
mov
cs
mul
stos
pop
and
fisubl
enter
pushf
leave
into
pop
and
outsb
fistpll
jnp
movl
push
mov
xor
push
js
mov
adc
mov
int3
adc
shll
aam
mov
pop
xor
aad
cmp
dec
add
mov
loopne
js
out
push
and
adc
push
fimuls
pop
xchg
or
pop
push
aas
inc
dec
xlat
mov
int3
outsl
leave
ss
addr16
sbb
mov
ljmp
adc
xlat
dec
int
adc
push
outsl
popa
jmp
dec
popf
out
clc
and
imul
jl
add
outsb
mov
and
push
aad
repnz
jnp
shll
lock
mov
sub
or
jmp
movsl
sbb
or
movsl
add
pop
lea
xchg
pop
lds
cmp
int
push
pop
push
dec
lods
pusha
push
adc
and
inc
out
test
dec
dec
push
inc
pop
call
dec
out
jmp
pop
pop
sub
sub
ffree
lea
in
mov
dec
adc
pusha
aas
clc
movsl
fwait
loopne
test
fwait
sbb
dec
pop
mov
dec
testl
jle
iret
ffree
shrl
adc
lahf
cs
xor
adc
fmull
or
out
dec
sub
adc
mov
icebp
mov
xor
hlt
addr16
inc
pop
hlt
je
fmul
lock
xor
xor
shll
cmp
mov
test
push
or
and
iret
dec
cmc
pop
lock
insb
aaa
shlb
dec
aaa
ljmp
dec
mov
and
mov
mov
xchg
sbb
ss
nop
into
xchg
pop
int
pop
or
push
mov
pop
sub
xchg
xchg
push
fwait
loope
xchg
js
jl
sarb
dec
pusha
sbb
inc
push
cs
nop
rorl
jmp
int3
xor
inc
je
sbb
xorl
leave
daa
pop
add
mov
shl
adc
cmc
addl
mov
test
testl
jge
mov
aam
leave
push
mov
sbb
mov
mov
push
adc
dec
and
inc
icebp
lcall
pop
movsl
sub
js
add
jnp
mov
in
int3
push
negl
push
adc
aaa
mov
aam
sbb
in
pop
cmp
dec
shrb
loop
pop
in
in
xor
out
pop
add
mov
push
or
or
xchg
cmp
movsl
or
inc
xor
sbb
fcoms
jg
mov
imul
jnp
arpl
loopne
mov
and
call
inc
cs
xor
bound
popf
push
icebp
sbb
xchg
sbb
aas
sbb
sti
out
mov
dec
imul
pop
pop
das
xor
mov
or
sti
movsb
pop
sub
cs
popf
mov
test
xchg
pop
iret
rcll
jg
gs
mov
inc
sub
pop
dec
lret
mov
mov
or
fstpl
mov
aaa
mov
xor
push
fs
cmpsl
sar
leave
inc
dec
jecxz
sub
call
add
cmp
test
ja
out
sti
ljmp
inc
xchg
xchg
outsl
pop
pushl
leave
orb
mov
cmp
push
xor
in
cmpsl
dec
push
mov
jmp
sarl
mov
xchg
pushf
testl
clc
mov
jg
or
lods
and
mov
icebp
adc
xor
aam
nop
divb
aam
cmp
fnstenv
shll
imull
mov
adc
test
jp
scas
add
cmp
push
pop
js
imul
xor
mov
scas
rcrl
repnz
xor
jmp
loope
fldcw
lods
outsb
add
movsl
mov
movsl
pop
test
sub
fisttpll
loop
addb
test
mov
jmp
and
insl
fmuls
ss
or
imul
mov
js
inc
lods
mov
pop
cmc
add
mov
into
icebp
test
and
mov
push
sub
loope
inc
mov
aad
xchg
inc
pop
push
popf
into
out
and
imul
mov
mov
mov
bound
dec
cltd
adc
push
repz
sti
rcr
adc
mov
jg
jns
movsb
xor
sbbl
push
jne
xlat
add
fisubrs
dec
adc
dec
sarl
adc
in
or
sbbb
lcall
adc
push
push
jp
cmc
mov
cli
push
mov
sbb
xchg
cwtl
mov
imul
ljmp
and
or
fisttpl
jl
sbb
aam
stc
in
cli
dec
lds
in
xchg
cli
lods
js
xlat
nop
ss
mov
and
push
xor
xor
mov
fmuls
pop
mov
jno
xchg
xchg
sub
out
not
cltd
mov
jno
inc
sub
into
rcll
inc
icebp
inc
push
xchg
rcrb
inc
add
and
or
int3
sbb
nop
jl
sub
or
sub
ss
lcall
sub
js
lret
lods
rolb
push
pop
push
jle
pushf
cmpsl
or
xor
loop
lods
inc
dec
orb
stos
sub
jmp
xchg
jae
mov
or
dec
pop
lea
div
cmpsb
gs
mov
push
sub
jmp
fiaddl
cli
xchg
xor
imulb
cs
daa
data16
je
pop
add
test
dec
mov
ja
xor
ss
mov
inc
mov
sub
and
fs
aaa
cmp
sahf
mov
and
xchg
clc
sub
mov
and
rcr
lret
xchg
stc
stos
stos
cmc
testb
mov
jecxz
or
sbb
test
add
jg
sbb
pusha
aad
lock
cmp
pop
in
cmp
add
add
roll
jmp
pop
daa
xchg
ds
inc
in
jp
lret
testb
pop
push
sub
jns
mov
mov
out
arpl
subb
jno
fidivrs
mov
ficoml
sbb
inc
push
mov
adc
inc
test
sub
test
addb
jp
out
cld
scas
lret
roll
push
sahf
test
mov
mov
ljmp
xor
pop
repnz
push
pop
enter
xchg
stos
dec
mov
jmp
es
sub
xchg
jo
cmp
ss
jle
dec
mov
fcoml
nop
pop
test
aaa
mov
cmp
xchg
sbb
call
sbb
mov
jnp
mov
jmp
dec
loop
mov
aad
fdiv
aaa
aam
dec
ror
pop
xchg
mov
push
xchg
push
jg
mov
or
loope
int
loope
pop
into
push
xchg
pop
fildll
and
iret
cmp
lret
mov
data16
fsubrp
mov
cmpsb
jno
das
shlb
xchg
pop
faddl
jg
test
scas
pop
inc
ficoms
add
aaa
fdivs
std
ss
xorb
mov
ret
sbb
mov
or
int3
fsin
sub
scas
repnz
ja
ljmp
sub
into
adc
adc
add
pop
jb
adc
movsb
jno
data16
call
xchg
shl
ret
fstps
dec
test
cld
or
iret
inc
xor
xchg
xor
inc
rol
movsb
scas
je
jmp
pop
scas
cwtl
popf
or
test
out
and
movsb
int3
pop
in
inc
push
inc
jo
cmpsl
test
in
dec
adc
cmpl
loopne
ja
js
imul
dec
es
ljmp
sub
adc
lahf
inc
out
sbb
pop
ret
loopne
xchg
sbb
mov
movsb
jbe
fimull
push
aad
das
and
mov
or
adc
sarb
ss
pop
stos
ss
rcrb
xchg
inc
fs
add
cmp
mov
aas
push
cli
inc
outsl
mov
fstl
daa
in
shll
inc
cwtl
jb
mov
lods
stos
mov
mov
jmp
andb
dec
and
adc
xchg
cmp
sti
sub
xchg
mov
jmp
jle
adc
mov
shrl
push
xchg
add
xor
in
dec
add
push
stos
push
and
ja
stos
xor
test
addl
movsb
xchg
daa
mov
out
pop
jb
test
aam
sub
orb
fwait
mov
scas
adc
scas
sbb
xchg
cmp
pop
loopne
call
mov
push
hlt
ss
int3
mov
sub
in
cld
kmovb
or
enter
adc
xor
mov
int
and
fs
dec
push
lods
push
pop
sarl
lahf
mov
mov
mov
dec
pop
push
pop
or
pop
loope
mov
stos
insl
add
movsl
imul
cmp
cs
sbb
fbstp
dec
mov
inc
into
gs
aas
jge
les
jae
xor
adc
loop
jns
pop
lods
push
sub
dec
mov
movsb
clc
xchg
sub
cmp
test
clc
cmpl
mov
dec
xchg
in
loop
xor
ja
mov
sar
adc
lea
pushf
sbb
adc
mov
cld
les
cmp
jl
jb
dec
push
push
dec
dec
shll
cmp
dec
push
test
mov
rol
add
add
push
js
sbb
mov
in
push
cmp
in
out
loop
cli
sbb
lock
mov
fstpt
dec
sbb
pop
divl
pop
jmp
pop
iret
sti
xchg
rolb
arpl
fcomp
jb
adc
out
push
sub
mov
cmp
mov
and
push
insl
push
dec
test
add
scas
jmp
pop
inc
in
ja
fidivrs
mov
mov
lods
scas
xchg
pop
dec
movsb
notb
xchg
enter
in
cli
or
cmpsl
inc
cwtl
inc
ja
mov
and
pushf
xchg
stc
mov
push
sub
inc
mov
cli
mov
fistpll
and
lds
loopne
ljmp
cld
pop
dec
xchg
dec
jo
xor
jp
popa
pop
and
mov
sub
ljmp
push
xor
mov
in
pop
fsub
dec
xor
pmulhw
inc
mov
lcall
mov
int3
push
mov
negl
jbe
mov
mov
push
mov
mov
cmp
push
aas
xor
xor
sti
add
push
dec
mov
inc
addr16
mov
arpl
cld
add
mov
mov
out
lods
inc
cmp
aaa
out
nop
mov
cmp
stc
push
dec
cmp
inc
xor
pop
lahf
mov
xchg
popa
pop
leave
xchg
mov
dec
in
aaa
ljmp
xor
adc
jp
adc
cltd
test
push
xchg
loopne
idiv
adc
ret
sub
push
jl
and
sbb
fldl
pop
push
mov
add
push
shrl
fwait
add
popa
rcrl
incl
push
shlb
or
std
mov
incl
mov
adc
test
xchg
xor
out
cmp
aas
push
sti
pop
loope
repnz
adc
dec
test
sbbb
adc
int
loope
jl
sbb
cmc
adcb
add
sbb
jg
xor
xor
ror
jl
into
and
out
call
inc
je
scas
jge
push
fwait
pushf
xchg
jl
pop
sbb
mov
mov
in
es
xor
call
jl
cmp
cmp
jns
adc
shrb
push
rol
xchg
aaa
pop
lret
sub
in
fisubrl
xchg
fbstp
lret
loopne
mov
inc
add
pop
fistl
xchg
andb
clc
fs
test
outsl
fisubl
ret
add
nop
mov
rorl
scas
shl
push
pop
xlat
jg
lret
cmp
pop
pusha
stc
mov
pop
and
xor
push
data16
arpl
dec
movsl
ret
xchg
scas
mov
in
add
movsl
push
stos
mov
ja
sbb
dec
pop
xchg
sub
lret
mov
dec
sub
into
ja
mov
clc
mov
xchg
imul
xchg
push
mov
jg
inc
push
in
std
divb
insl
mov
test
fldcw
fucomp
test
push
clc
movsl
out
lock
sub
outsb
test
xor
xlat
adc
inc
xchg
mov
lock
pop
add
repnz
mov
xchg
jbe
sbb
inc
popf
pop
mov
fcoml
inc
mov
mov
jp
push
lcall
add
test
inc
mov
jb
dec
push
pop
jle
mov
xor
lcall
loope
sbb
repz
push
testb
cmc
adc
adc
insl
jbe
hlt
shrb
pushf
pop
inc
jle
inc
jb
adc
hlt
icebp
daa
adcb
pop
cmpl
fldenv
pop
push
jmp
stc
ds
xlat
ss
hlt
sbb
rcll
pop
std
popf
dec
sar
call
les
loopne
scas
out
inc
pop
pushf
mov
mov
testl
pop
pop
xor
or
mov
popa
push
outsb
xchg
jecxz
xor
jge
ret
inc
adc
push
push
hlt
mov
or
in
xor
mov
outsw
inc
clc
adc
popf
or
pushf
push
std
xchg
xchg
pop
pop
negb
ja
inc
or
mov
mov
push
jmp
and
addb
pushf
add
test
sub
sub
mov
or
mov
std
and
rorb
pop
sbb
inc
cmc
fwait
jns
movsb
jge
add
mov
pushf
push
fcoms
mov
mov
sub
push
mov
outsl
mov
pop
jbe
testb
iret
testl
aad
shll
push
lcall
data16
std
pop
jns
stos
sbb
or
jb
mov
into
not
sbb
mov
fcomip
test
or
in
jno
imul
dec
mov
ret
mov
imulb
inc
cmp
ficoml
inc
repnz
adc
stos
repnz
stos
mov
std
test
lods
push
mov
hlt
icebp
adc
aaa
outsl
je
loop
insb
jbe
in
pop
add
jae
lods
mov
test
xchg
cwtl
mov
and
shlb
fimuls
negl
cld
filds
aaa
cmp
js
sub
pop
jge,pn
mov
cmpb
xor
loopne
out
push
add
mov
jbe
jl
cmc
inc
add
loope
and
inc
inc
pop
std
xchg
test
or
mov
mov
push
sbb
pop
movsb
arpl
lock
outsl
test
inc
push
inc
sbb
dec
leave
mov
push
sub
aaa
loopne
cmp
idivb
stc
or
jmp
mov
pop
xorl
sbb
cmp
xchg
in
inc
or
mov
mov
adcb
bound
mov
xchg
aas
add
mov
sbb
inc
es
jp
xor
pop
cld
jae
or
push
in
xor
and
fwait
mov
imul
ficompl
push
add
push
loop
fsubrl
in
je
aam
pushl
xlat
jns
jge
and
cld
sbbl
xlat
pop
out
les
sbb
adc
jg
cli
fists
gs
orb
es
mov
xchg
jle
sbb
pop
inc
jae
arpl
in
xchg
jp
lods
xchg
mov
push
loop
nop
mov
xchg
cld
adc
push
xor
mov
pop
imul
mov
push
loopne
nop
pop
jo
cld
scas
scas
jg
stos
add
js
inc
pop
inc
ss
out
aad
mov
jecxz
shll
sbb
inc
push
shr
aaa
xchg
daa
cmp
aad
xor
push
das
inc
add
pusha
fwait
adc
sub
data16
sarl
insb
std
aas
jecxz
push
roll
mov
sbbb
cmp
sbb
aas
test
add
dec
mov
mov
dec
mov
mov
xor
push
stos
test
cmpsl
jp
jne
or
es
out
inc
nop
iret
add
loope
mov
cmpsb
inc
lea
jne
pushf
xor
push
jle
mov
int3
fnsave
push
jmp
xlat
pop
cmp
in
mov
inc
jge
mov
std
or
test
imul
cmp
nop
popa
in
mov
aam
xchg
imulb
fldcw
outsb
add
xlat
pop
mov
je
and
inc
popf
ja
inc
repnz
loop
dec
dec
fmul
jp
fnsave
or
ret
jo
lods
adc
daa
shll
into
mov
and
pop
xchg
sahf
movsl
inc
movsl
lea
xor
mov
xor
test
and
mov
sahf
push
cld
sahf
mov
andl
jae
bound
iret
and
push
xchg
or
jge
and
pop
sub
mov
shrb
js
sbb
pop
xor
sub
pop
push
or
pushf
stos
lcall
sbb
fmul
mov
leave
adc
and
rolb
dec
adc
test
add
stc
movq
lcall
and
adc
aad
and
cmpsl
out
addl
dec
or
fs
mov
lret
out
mov
int3
jnp
cmp
out
mov
daa
and
mov
lret
adcl
leave
jns
add
cmp
dec
cli
mov
mov
add
fimull
loop
mov
and
fwait
lret
xchg
js
subb
cmp
imul
mov
ss
fdivrl
mov
pop
out
mull
sub
mov
scas
mov
and
sub
rolb
push
sbb
xchg
cmp
mov
data16
xor
adc
mov
ss
int
insl
lock
push
imulb
lcall
cltd
clc
dec
inc
xchg
test
loopne
daa
mov
pop
add
and
lods
mov
xchg
mov
je
sti
mov
mov
adc
jne
dec
cmp
dec
arpl
incb
push
mov
fimull
int
hlt
movsb
in
in
inc
cmpsb
xchg
jne
mov
movsl
jge
xchg
call
mov
xor
ljmp
xor
push
movsb
ja
xor
sbb
leave
mov
mov
pop
cld
xor
ret
add
aam
imull
out
jmp
sub
stc
fdivl
mov
mov
daa
leave
mov
cmp
scas
mov
add
aad
or
notl
loop
and
data16
mov
xor
mov
pop
xchg
mov
cmp
and
cmp
jmp
test
rcll
cld
cmp
sahf
jg
rcrl
push
rorb
mov
icebp
gs
cwtl
mov
lret
sub
cmp
xor
mov
addr16
popf
insb
gs
cmpsl
mov
lret
cld
jmp
mov
pushf
xchg
stos
into
dec
xchg
xor
xor
lahf
jmp
out
add
pop
in
dec
adc
lret
divl
sbb
dec
dec
aas
dec
loopne
and
pushf
outsl
sub
pop
add
push
andb
pmaxsw
popl
movsl
fildll
xor
jbe
and
cmp
insb
sahf
test
mov
xor
cmpsl
push
lods
mov
adc
adc
lods
add
mull
test
xor
mov
rsm
lock
lahf
jecxz
ss
mov
sub
cwtl
and
mov
mov
xor
adc
mov
push
dec
negl
jg
pop
scas
les
test
aas
inc
movntps
cmp
sti
inc
movl
aas
pop
push
jl
int3
lahf
jo
ret
mov
icebp
loopne
sub
sub
gs
pop
lcall
adc
cmp
xchg
enter
cmp
sbb
mov
mov
ss
loopne
aas
xchg
push
fisubrl
arpl
cld
imul
test
cmpsb
xor
fwait
dec
les
push
repnz
cwtl
idiv
xor
popa
and
leave
add
xor
bound
mov
dec
mov
popf
cmpsb
sbb
jb
rolb
xchg
ja
fwait
adc
orb
push
sub
pop
or
dec
repz
loope
fiaddl
jp
inc
cwtl
sti
enter
jb
dec
xor
jmp
add
ja
push
out
nop
es
out
repnz
xchg
pop
cmp
pop
fsubl
xchg
sbb
sub
sub
inc
jb
int3
add
pop
sub
jmp
je
in
xchg
mov
repnz
fldl2t
and
or
xchg
les
dec
in
imul
ljmp
inc
hlt
sub
shl
scas
dec
loope
xor
ja
dec
mov
fdivrl
inc
push
pushf
sbb
jae
adc
neg
push
sub
loope
out
fmulp
imul
and
movsb
shrb
pop
pop
and
jmpw
mov
aad
xor
nop
sbb
add
pop
ss
add
cmp
jns
push
xchg
or
xchg
pop
faddl
out
push
bound
aad
adc
mov
das
aas
jno
push
aaa
add
jecxz
sbb
pop
add
notl
add
push
mov
cmp
and
bound
je
cwtl
lds
push
sbb
inc
ja
divb
shrb
push
pop
mov
aas
mov
je
cwtl
xchg
mov
inc
leave
sbb
cli
stos
xor
popa
int3
inc
inc
mov
movsb
fucom
ds
cmp
lds
cli
mov
popa
out
lret
mov
int
iret
mov
xchg
xor
mov
xchg
popf
cs
xor
mov
mov
lahf
stc
add
test
cmp
xchg
mov
mov
sub
mov
or
hlt
mov
test
mov
xchg
lods
sbb
inc
jnp
out
daa
inc
xor
pop
mov
push
pusha
rolb
clc
fstpl
sbb
add
inc
ret
push
pop
in
ficomps
insb
icebp
pop
jge
xchg
sarl
ss
jb
push
ss
dec
sub
push
pop
hlt
and
popf
in
fst
ljmp
in
cltd
and
cmc
sbb
je
int
aaa
filds
out
ja
dec
jb
adc
push
sti
int
pushf
lock
pop
xchg
imul
insl
rcll
pop
hlt
imul
fsin
mov
pop
push
lahf
jns
adc
pop
mov
jne
cs
xor
insl
movsl
or
pop
push
mov
lods
mov
stc
pop
pop
xor
dec
cmp
sbb
xor
sub
pop
test
adc
inc
divl
out
stc
mov
sub
cmp
and
mov
mov
xor
out
inc
sarb
mov
mov
test
outsl
dec
mov
outsl
rclb
arpl
push
dec
dec
mov
or
inc
jns
aaa
add
jmp
xor
mov
xrelease
xor
in
bound
insb
mov
lods
sbbb
push
mov
les
test
gs
mov
mov
push
mov
call
mov
push
pop
iret
push
movsb
dec
cmp
ljmp
or
add
fs
adc
sub
push
mov
jmp
aad
add
xchg
and
fstl
mov
jmp
bswap
sbb
or
insb
outsl
push
retw
pop
mov
inc
adc
mov
cmp
mov
inc
out
fnsaves
iret
push
icebp
out
addb
xor
add
ljmp
lods
inc
mov
push
dec
dec
sub
sub
lcall
hlt
inc
inc
xor
mov
testl
aam
orb
mov
or
sub
es
adc
ds
cwtl
ja
add
hlt
inc
popw
and
test
je
inc
es
cmp
pop
xchg
mov
aad
pop
movsb
cs
daa
add
addss
jge
dec
mov
add
mov
mov
cmp
daa
add
mov
mov
ss
sbb
out
push
cmp
clc
or
lcall
in
inc
in
mov
test
in
xchg
inc
loop
ss
pusha
mov
add
loopne
cmpb
dec
aam
pop
sbb
add
out
jle
movsb
orl
in
je
add
mov
pop
insb
ret
sub
xchg
sub
inc
ja
fimull
dec
xchg
movsb
or
gs
lods
adc
sahf
inc
arpl
je
mov
push
mov
mov
in
xchg
in
bound
mov
push
lock
sub
pop
sub
cmp
sbb
ja
pop
out
dec
push
jge
aam
bound
cmpsb
int
lret
call
das
insl
jo
push
sub
fst
fwait
shr
aad
sub
repnz
dec
cmp
sahf
in
fcomi
lods
fsubrl
sub
les
clc
mov
sub
jle
xor
mov
pop
inc
shr
js
imul
out
mov
mov
jnp
repnz
bound
push
out
mov
and
pop
xor
sub
test
or
xor
inc
pop
outsl
xor
imul
push
ret
xchg
cltd
pop
push
data16
add
xor
inc
mov
xchg
aad
lock
outsb
add
fdivrl
adc
jb
jns
popl
loopne
jmp
push
jle
mov
in
clc
fstpt
jle
mov
cmp
jne
mov
mov
adc
push
negl
ret
cmp
roll
dec
xorl
loop
adc
inc
jle
cmpsb
and
fwait
cs
xor
leave
or
dec
loop
sub
push
xchg
xchg
lahf
xchg
adc
pop
lcall
mul
cltd
or
push
fisttpll
stos
cmpsl
mov
pop
negb
or
scas
sub
adc
dec
aam
movsb
xlat
dec
dec
pop
mov
ror
shrb
subb
inc
dec
or
sbb
cmp
cmp
pop
mov
pushf
shrl
lds
cli
out
pop
add
js
stos
inc
lods
fdivrs
into
xchg
testb
adcb
jle
xor
andb
psrad
xor
sub
dec
out
jl
push
shrl
pop
repz
shrb
xchg
das
fcompl
pop
and
xor
adc
fdivrl
push
cmp
icebp
xchg
int
and
pop
insb
loope
int3
adc
cwtl
loop
xor
sahf
push
sub
addr16
dec
loope
xor
push
jo
mov
test
fucomp
incb
xchg
lds
out
add
xor
add
in
xlat
mov
lods
adc
push
clc
dec
cwtl
mov
push
hlt
ja
insl
jecxz
sbb
mov
es
xchg
outsl
xchg
daa
xchg
outsl
adc
mov
adc
dec
or
jecxz
jo
add
ja
adc
dec
jmp
out
xor
add
mov
inc
xchg
clc
stc
cmp
mov
sbb
lock
into
movsw
xbegin
sbb
loope
mov
in
jmp
out
sub
repnz
mov
pop
mov
inc
ds
mov
jg
pushf
incl
insb
pusha
ss
movsl
lret
movb
cwtl
and
mov
mov
adc
popa
movsb
mov
mov
mov
pop
cmpsb
mov
xchg
xor
cs
int
mov
ffree
xchg
sub
inc
hlt
inc
cwtl
push
cmp
rcr
lds
add
movsl
dec
shl
sub
dec
aam
leave
nop
xchg
adc
pop
dec
pushf
push
cli
pop
scas
add
mov
inc
fwait
cld
shll
sub
sub
mov
cs
add
movl
data16
ljmp
adc
pop
pop
loop
mov
mov
mov
jne
mov
xchg
fsub
jmp
insb
jmp
mov
push
loopne
jle
sbb
daa
sub
mov
sahf
xchg
or
pop
std
cmpsb
pop
push
fnstcw
outsl
or
mov
das
jo
fs
sub
push
mov
lret
inc
xchg
cmp
stos
cld
inc
mov
ret
mov
xchg
push
add
pop
dec
imul
inc
enter
daa
dec
add
or
inc
mov
mov
or
out
mov
ljmp
das
out
inc
mov
std
out
fmull
fdivs
push
mov
jmp
in
lods
fisubs
test
cmp
pop
sbb
mov
out
popf
cmp
lcall
lods
mov
mov
add
leave
decl
add
adc
shrb
shrl
mov
mov
test
or
cli
xorb
xchg
cld
insl
sbb
push
mov
iret
xor
push
mov
sub
in
mov
inc
adc
dec
inc
inc
cmp
push
lods
sbb
xor
fucom
sub
cmpsb
test
fists
adc
fs
test
rorb
call
testl
lock
enter
sub
mov
sbb
iret
add
or
insb
sbb
dec
push
test
add
or
xor
or
lret
xchg
xchg
inc
bound
data16
pop
arpl
in
mov
fcmovb
out
xlat
jb
rolb
xchg
xchg
jnp
in
fisttpll
add
xchg
ljmp
cltd
or
shlb
stc
nop
lret
nop
sbb
mov
push
jae
pop
shlb
mov
iret
pop
js
push
icebp
outsb
mov
in
sti
inc
add
and
push
scas
mov
fs
in
imul
pop
xchg
xchg
or
movsb
int
adc
mov
aad
inc
sub
and
movsb
jge
repnz
jae
std
repz
dec
and
lods
or
loop
lea
or
shr
or
mov
push
out
out
inc
add
enter
jg
repnz
lock
adc
fdivs
ret
add
push
iret
xchg
scas
lahf
jnp
inc
cmpl
sub
orb
test
inc
xchg
ljmp
xor
imull
sub
xor
pop
jno
insb
dec
jmp
es
adc
arpl
call
in
pop
int
sbb
cltd
inc
and
pushf
adc
pop
and
inc
mov
js
mov
and
push
dec
xor
sbb
adc
dec
lea
mov
cli
xlat
push
jbe
fimuls
pop
sub
js
lret
dec
mov
test
rcrb
gs
aas
push
arpl
dec
jo
push
pop
xlat
jo
loopne
mov
push
cmc
movsl
xor
adc
lahf
cmpsl
bound
popf
scas
cmp
adc
out
aaa
arpl
das
sub
or
iret
sub
and
les
xor
js
pop
xor
push
mov
sahf
sbb
pop
ret
cmpb
cmp
incl
pop
aam
jl
aas
or
jns
jg
adc
ljmp
ja
pop
fwait
imul
std
lret
mov
insb
das
jecxz
pop
push
cmp
popa
orb
add
lods
in
les
test
in
push
std
mov
repz
fidivl
xchg
movsl
or
sbb
aas
mov
mov
adc
inc
xchg
cwtl
or
push
add
dec
pop
xor
shl
mov
pop
je
xor
inc
shl
cmc
push
or
add
in
mov
inc
dec
in
cmc
das
stos
aaa
sub
sbb
push
enter
dec
sahf
mov
pop
xor
call
mov
add
cs
fildl
jo
sbb
cld
in
xchg
sbb
mov
and
add
sbb
and
jg
inc
adc
mov
nop
jl
cmp
push
out
stc
lods
imul
push
decb
push
xchg
les
dec
enter
xchg
push
sbb
or
fisubrs
push
into
mov
filds
cmp
and
push
adc
push
cmp
cmp
scas
xchg
cmpsb
dec
pop
push
cmp
nop
add
pop
xor
fwait
jb
pusha
lods
shrb
fldenv
push
xchg
mov
push
jmpw
loopne
pop
scas
adc
clc
loopne
jbe
mov
pusha
jb
jne
xlat
pop
outsb
ficoml
cmpsl
and
popf
insb
adc
mov
insl
lea
push
inc
sti
in
leave
xor
not
mov
les
adc
hlt
pop
pmaxsw
dec
lods
movsl
sahf
xchg
test
add
jns
mov
xchg
mov
sub
mov
pop
push
mov
in
jge
pop
or
das
je
daa
repnz
outsb
loopne
sub
sar
cli
add
fnstcw
dec
daa
enter
mov
sbb
adc
and
jmp
test
or
outsl
dec
fidivl
xor
cmpsl
cltd
test
pop
cmpsb
leave
fucomi
mov
aad
jg
cmpsl
or
cwtl
or
aam
lock
mov
cwtl
xor
jmp
xchg
sbb
js
add
test
outsl
dec
out
nop
test
test
fmulp
pop
enter
icebp
xchg
xchg
mov
xchg
pop
arpl
cmp
pop
adc
imul
je
pusha
sub
out
inc
cmp
loopne
data16
ds
xchg
sti
pop
in
loop
add
dec
out
je
push
sub
leave
pop
pop
mov
orb
push
mov
popf
cltd
fldenv
adc
test
pop
scas
mov
outsb
popf
js,pt
adc
mov
jg
getsec
stos
inc
js
jge
add
pop
lock
sbb
jo
outsb
inc
cltd
fwait
cmp
lcall
icebp
daa
inc
cwtl
push
test
lds
mov
out
aaa
mov
test
aas
sub
clc
ss
and
pop
dec
sti
lock
mov
xor
push
fnsave
xchg
cs
sub
int
jae
push
sar
adc
sub
dec
int
pop
iret
ja
mov
shlb
push
ss
in
imul
adc
add
arpl
inc
sbb
pop
dec
push
fcmovne
jl
sahf
mov
adc
dec
pop
fstpt
or
xchg
into
ja
sti
fdiv
adc
cmc
mov
push
les
lar
mov
pusha
push
adc
popf
adcb
jb
mov
lock
enter
sbb
iret
push
cmp
shl
stos
add
lods
jp
xlat
hlt
xor
inc
cmp
inc
andb
or
inc
je
jmp
and
adc
cwtl
addr16
fcomps
dec
dec
push
imul
call
iret
bound
mov
mov
lea
mov
add
test
rorl
test
jecxz
pop
ret
adc
pop
sub
mov
repnz
iret
cmp
outsl
lret
sbbl
daa
mov
jnp
inc
dec
loopne
inc
pop
adc
shlb
mov
adc
push
xchg
cltd
cmp
incb
leave
xchg
movsb
fnstenv
pop
lods
sub
mov
xor
xchg
stos
jg
add
dec
lcall
lods
cmpsb
pop
mov
mov
mov
lds
stos
inc
in
jecxz
jmp
mov
lods
lods
dec
push
push
xchg
sub
push
jge
push
cmpl
loop
fiaddl
shll
push
jg
mov
push
out
insl
push
lods
fs
inc
mov
lcall
iret
in
xor
pop
enter
push
mov
cmp
add
cs
scas
xchg
sbb
adc
out
add
sbb
xchg
rcll
and
scas
push
pop
mov
outsb
aaa
adc
or
js
jmp
addr16
jbe
dec
push
inc
push
aas
sbbl
fs
add
call
data16
push
fdivrl
push
movsb
mov
inc
lock
stc
mov
jecxz
sarl
aam
xor
fdivl
cmp
inc
std
hlt
mov
pop
mov
adc
test
xor
xchg
inc
int
mov
loop
rorl
sub
pop
test
xchg
xchg
push
mov
int
push
lods
shrl
sub
cmpsl
dec
xchg
add
lahf
aam
push
addr16
and
ja
sbb
repnz
ja
jbe
ret
mov
nop
popa
xchg
enter
dec
push
jns
or
xor
mov
outsl
or
jno
sub
or
stos
mov
xor
add
stos
adcl
sbb
push
dec
mov
fbld
dec
cli
pop
xor
into
js
lea
test
jle
fisubrl
and
adc
mov
pop
loope
bound
clc
daa
enter
sub
adcl
jbe
cwtl
push
cmpsb
sub
or
imul
mov
xchg
dec
push
xlat
cwtl
dec
mov
mov
aam
enter
ret
inc
hlt
fstl
jle
jae
insl
xchg
lahf
jae
adc
ds
jbe
push
testb
and
xlat
inc
fistpl
xorb
lea
testl
ljmp
sbb
popa
loop
mov
mov
mov
shll
add
pushf
fldl
add
sub
test
pop
popf
sbb
repz
jmp
roll
adc
fdivr
sarl
in
or
and
add
push
adc
lea
outsl
push
push
cmp
cmp
xchg
ret
inc
jp
cmpsb
mov
mov
xor
or
pop
xchg
scas
popf
mov
push
add
cmp
andl
xchg
xchg
cwtl
scas
loope
jle
jl
insb
adc
mov
or
dec
test
add
lock
jecxz
mov
pop
xchg
dec
sbb
mov
sub
dec
rcrl
js
pop
iret
mov
jnp
js
scas
call
add
xchg
push
daa
pop
cmp
xchg
xor
movl
sbb
pop
sub
cmp
or
add
enter
cld
mov
pop
pop
pop
cmp
and
repz
adc
les
inc
xchg
or
sarl
or
push
mov
mov
in
mov
mov
push
sti
arpl
sbb
and
dec
fcomp
xlat
xor
loop
mov
dec
dec
or
aam
lret
shr
movups
loopne
pop
pusha
das
in
shl
in
mov
sti
mov
data16
loopne
stos
ds
jp
mov
dec
push
daa
add
pop
out
popf
jl
mov
mov
sahf
mov
cwtl
mov
lahf
and
pushf
fiaddl
xchg
aad
xchg
es
xchg
aad
xor
sub
jecxz
pop
pop
mov
sub
ss
bound
jno
sbb
add
pop
mov
in
adc
or
ljmp
xlat
loope
arpl
leave
push
cs
jbe
inc
add
stc
outsb
sbb
fidivrl
pop
scas
repz
inc
insb
sub
jae
out
add
mov
mov
lret
mull
pop
pop
xchg
popl
rcll
aas
mov
repnz
es
xor
nop
ss
mov
mov
les
int
or
inc
mov
pop
sarl
test
push
mov
popf
pusha
repz
xor
in
push
sti
xchg
imul
loope
and
and
mov
xor
mov
cmp
push
lcall
leave
jnp
sbb
or
imul
iret
imul
jp
dec
push
jbe
xchg
mov
stc
outsl
aad
jle
jg
mov
sbb
mov
mov
ds
jns
testb
mov
pop
mov
fadd
cmp
jno
sub
inc
ja
dec
push
push
mov
pop
int
test
xor
cmp
rclb
mov
rcll
ficomps
mov
sarl
int
push
lret
stos
mov
loopne
scas
push
xlat
push
pop
dec
sahf
sub
cli
mov
aaa
out
xchg
in
leave
cmp
aam
in
dec
pop
add
nop
fldcw
pop
decb
fistpll
shlb
adc
cmp
mov
in
sbb
cli
xchg
adc
inc
jmp
push
sub
push
xchg
push
lock
sbb
pop
adc
adc
scas
adc
subb
cmpb
rcrl
mov
es
lds
mov
pop
dec
out
cld
bound
insb
cmp
cmp
addr16
pop
fstp
cmp
in
jo
jecxz
mov
cmp
icebp
push
ret
dec
inc
aaa
jo
mov
mov
fstpt
pop
sti
popa
pushf
loop
lret
fistpl
out
inc
imul
jl
mov
push
push
mov
fcomps
ds
and
mov
addr16
or
neg
add
mov
pop
jecxz
insb
inc
xchg
adc
ss
xor
pop
mov
xchg
je
sub
aas
cmc
sbb
sub
andl
xchg
test
pop
sbb
cmp
cli
sbbb
mov
mov
mov
loope
or
push
or
loopne
add
lds
jl
adc
lahf
cld
and
icebp
sub
jns
rcll
mov
cltd
push
fcmove
add
je
jl
dec
mov
outsb
add
repnz
sahf
or
sub
jg
mov
mov
mov
enter
mov
stc
das
xchg
xchg
push
scas
out
adc
add
jns
mov
jp
jnp
push
inc
leave
cs
sbb
loopne
data16
push
or
xor
out
lahf
dec
pop
notl
or
mov
hlt
push
push
out
int
cld
test
clc
cmc
fsubr
dec
pop
roll
jbe
mov
outsl
sub
mov
or
cli
add
stos
jns
jae
dec
mov
shrd
stc
sub
sbb
outsb
push
fdivs
mov
loope
cs
push
add
add
ljmp
enter
in
cmpb
scas
jg
roll
mov
push
mov
insb
js
jl
lcall
loopne
hlt
mov
aaa
inc
jmp
xor
and
cmp
jb
ficoms
dec
jmp
popa
mov
push
in
repnz
push
mov
mov
xchg
xor
xchg
inc
jns
data16
inc
push
cmpsl
enter
ds
pop
cs
inc
jg
stos
sbb
pop
stc
mov
dec
add
dec
mov
sub
push
dec
lods
pop
mov
or
mov
in
xchg
pop
lea
mov
and
fadd
sub
mov
jno
mov
sbb
aad
fbstp
add
inc
call
xor
repnz
dec
inc
cmp
mov
jns
imul
idivl
pop
cmp
int
loop
in
or
pop
lods
inc
pop
lret
mov
xchg
aam
mov
shll
test
outsl
inc
inc
loopne
mov
and
inc
hlt
cltd
aad
out
adc
mov
cmp
inc
hlt
loop
add
loopne
push
seta
addr16
dec
jnp
sub
xor
outsl
jle
adc
dec
add
loop
loop
int3
sub
scas
int
pop
cmp
bound
repnz
sub
sub
ljmp
outsl
jb
inc
ret
and
mov
sbb
fnstenv
leave
mov
fwait
pop
add
test
xchg
inc
add
icebp
or
fsubrs
sbb
or
outsb
fdivrp
sub
fdivrs
in
and
loope
outsl
sub
std
mov
int
pop
in
mov
xchg
mov
in
mov
jno
stc
fistps
outsl
xchg
xor
addr16
rclb
adcb
push
xorl
mov
int
cmc
in
lods
mov
int
fisubl
push
mov
scas
cld
ret
fidivrs
les
fimull
and
aam
inc
vmovsd
adc
aaa
push
loopne
lahf
ss
xor
mov
jl
mov
mov
popa
jge
xchg
or
in
dec
cmp
push
pop
add
ffree
cmp
call
imull
xor
and
ja
mov
jbe
lahf
imul
push
lahf
sbb
and
out
jecxz
lret
adc
leave
sarb
inc
lret
imul
sbb
jbe
mov
pop
sbb
xchg
mov
aad
test
xchg
ja
dec
in
ret
pop
inc
test
adc
imul
and
lock
push
pop
mov
sbb
in
lea
xor
and
pop
loop
adc
out
cmp
in
add
jb
frstor
sbb
mov
adc
subb
sub
pop
add
add
es
jno
or
aam
mov
adc
mov
roll
dec
jo
push
arpl
ja
adc
pop
mov
in
and
adc
aam
in
push
shll
movsb
in
roll
mov
mov
sub
sarl
sub
lahf
jo
arpl
sub
xor
jecxz
cmc
dec
scas
in
ss
mov
sbb
xchg
jle
dec
int
and
enter
and
outsl
mov
js
pop
pusha
push
pusha
and
sbb
into
push
decl
cmpsb
mov
ljmp
xlat
push
or
shll
mov
pop
test
stos
jecxz
mov
sbb
sbb
jbe
es
not
mov
lcall
sub
jnp
scas
pop
repz
mov
pop
je
jp
mov
jecxz
xor
inc
jo
xorb
jmp
push
cld
cld
jb
xchg
scas
cmp
cmp
cmp
jmp
mov
xor
xchg
js
insl
ficomps
lea
jae
aad
repnz
jbe
insb
cld
inc
nop
jg
mov
lret
push
lret
jp
jg
cmp
cmc
mov
sub
or
mov
fsub
les
sub
xor
pop
lds
xchg
inc
imul
loope
sarb
cmp
pop
js
std
jg
mov
sbb
icebp
or
mov
jp
or
cmp
dec
mov
leave
in
jecxz
mov
fistpll
rcrb
mov
insl
mov
movsl
adc
sbb
mov
clc
pop
or
inc
add
lcall
sub
addr16
push
fistl
cmp
dec
pop
test
cld
jns
mov
adc
and
scas
fdivrl
sarb
incl
sahf
enter
inc
stos
cmp
and
out
daa
inc
pop
test
testl
push
fildll
jno
mov
push
sub
clc
call
aas
aas
test
dec
push
or
sub
dec
sbb
xor
push
outsl
out
dec
mov
add
sahf
push
dec
pop
mov
add
call
or
scas
scas
and
je
lods
sahf
divl
je
mov
push
inc
jae
pop
popf
popf
test
cli
sub
push
sti
movsl
xchg
mov
push
ret
mov
andl
and
mov
aam
scas
push
pop
mov
pop
jmp
iret
cmp
jns
pushf
mov
mov
add
loopne
xchg
add
jns
mov
int
add
add
mov
and
mov
int3
shlb
push
jge
adc
in
sbb
jge
add
jg
jl
adc
gs
out
add
loopne
fisttps
jle
loopne
cmp
in
push
gs
fisubs
mov
mov
dec
in
ret
xchg
pop
rcrl
movsb
mov
ret
push
mov
pop
loope
push
jge
cmpsl
pop
pop
add
inc
iret
repnz
adc
xor
push
jne
or
sub
xor
hlt
mov
and
mov
jnp
or
or
cmp
dec
cltd
mov
test
pop
lds
icebp
lret
jmp
mov
pop
cmp
in
push
sbb
add
sbb
loop
dec
mov
xchg
sar
fildl
and
adc
mov
inc
lock
lods
scas
sbb
fcoms
push
stc
mov
push
or
aam
pusha
repz
xchg
shrl
out
out
lea
rcll
jbe
mov
andb
adc
add
xchg
mov
cmpsl
adc
repz
and
cmp
inc
sbb
mov
fs
xlat
cmp
mov
test
sbb
pusha
jo
sbb
mov
push
mov
lods
xor
pop
divb
adc
lcall
mov
shlb
xchg
nop
push
sub
and
jno
mov
lock
sti
mov
inc
lea
adc
cmp
sti
cwtl
hlt
mov
out
dec
jo
es
push
lds
mov
push
insl
mov
outsl
rcrb
pushf
xchg
sub
sub
ret
lcall
imul
les
sub
int3
je
lods
jo
les
and
in
adc
cmp
movsl
aad
je
cmp
bound
jl
dec
jb
iret
inc
jge
jnp
mov
fwait
sbb
stos
ljmp
inc
inc
cmp
push
dec
popa
imul
pop
mov
mov
xchg
bound
int
lea
jb
push
out
adc
add
mov
mov
addr16
dec
insb
inc
mov
mov
test
dec
jg
xor
data16
xlat
lret
sbb
adc
dec
jg
cmp
ss
fstp
inc
jo
push
pop
sub
cmp
int3
add
cbtw
mov
xor
popf
xlat
popf
shrl
xlat
jge
mov
lret
jecxz
aas
jle
mov
adcl
cld
fs
inc
sbb
add
and
test
mulb
icebp
jle
pushl
push
loop
cmc
mov
clc
out
jae
mov
jno
mov
mov
jge
xorb
lahf
fstp
xchg
mov
dec
add
shlb
int
or
sbb
ljmp
xor
jb
divl
insl
int
or
movsl
aad
mov
scas
sahf
enter
pop
mov
xchg
pop
xchg
pop
xor
je
mov
inc
mov
pop
fs
adc
xchg
jno
outsb
std
out
add
pop
sub
fsubp
leave
jg
mov
inc
jo
add
mov
lea
adc
clc
sub
frstor
jns
push
scas
cmpl
xchg
mov
mov
subb
dec
add
mov
mov
mov
xor
aaa
jg
loopne
imul
out
hlt
outsb
cmp
and
lcall
iret
sahf
pop
out
jnp
xor
jg
rol
les
mov
leave
cmp
imul
and
ret
sub
mov
and
movsb
xchg
jnp
pop
scas
pop
fistl
js
jns
mov
pop
das
dec
movsl
aam
pop
push
push
arpl
xor
lods
sub
adc
sub
sub
mov
sbb
es
cs
add
loope
lcall
call
push
in
fmuls
mov
sbbl
jecxz
xchg
scas
jge
jns
sub
ror
inc
jl
loop
out
ret
mov
das
add
cmpb
lahf
sbb
data16
je
shl
adc
sti
mov
stos
jbe
add
fstps
lods
pop
lret
add
mov
push
in
cld
fisubl
pop
enter
mov
xor
pop
repz
dec
and
add
dec
cmc
out
ret
cmp
jbe
mov
sbb
rorl
xor
push
mov
add
aad
sahf
psubsb
ds
lret
inc
dec
dec
sub
leave
fadds
in
xchg
popf
jbe
inc
mov
rcrl
data16
dec
iret
and
pop
mov
dec
cmpsl
mov
add
dec
aam
xchg
or
xchg
out
mov
cmp
mov
jl
aam
or
lods
mov
pop
mov
dec
mov
jns
outsl
cltd
push
sub
dec
test
cmpps
inc
incb
adc
inc
arpl
pop
leave
xor
mov
inc
inc
sub
add
ss
fmull
lea
fldt
addl
jbe
les
push
cmpsl
cli
cmpb
ret
imul
inc
scas
movsb
mov
sbb
add
dec
fsubr
xchg
cltd
adc
testb
pop
fsts
insl
push
add
xchg
shrb
int
inc
mov
sbb
jle
inc
jno
gs
jnp
xor
cld
jae
dec
out
fcmovu
int3
icebp
mov
mov
fs
mov
and
xlat
fcomps
mov
sub
push
dec
inc
cmp
pop
in
lods
cwtl
stc
pop
nop
test
push
mov
pop
jae
lret
mov
pop
and
jmp
jg
adc
repz
mov
add
mov
pop
or
xchg
outsb
cld
xchg
in
leave
out
dec
jo
in
cld
sti
test
mov
pop
hlt
insb
lret
push
sti
or
jbe
pushf
daa
lock
out
mov
in
inc
test
cs
je
repz
jl
pop
xor
lahf
mov
and
aam
int3
push
pop
pop
shl
adc
ret
xchg
push
add
jnp
adc
inc
nop
lock
push
rcll
addr16
mov
push
push
mov
outsb
movsl
lea
push
push
cmp
in
shlb
fsubl
std
rorl
jl
push
push
and
cmp
stos
push
int3
inc
and
jg
stos
popa
add
mov
fs
call
lods
pop
jmp
xor
bound
dec
into
xor
mov
mov
lcall
lret
cli
in
les
loop
cmp
movsb
lcall
mov
and
out
jle
push
test
push
mov
in
or
cmp
adc
jge
insb
and
adc
mov
and
cmp
imull
shr
or
in
dec
inc
rclb
mov
cltd
cmp
addl
imulb
sbb
popa
adc
inc
shlb
or
lret
stos
insb
xchg
inc
rol
mov
pop
and
sub
jbe
or
jge
fisttpl
lea
add
or
jp
xchg
jo
and
pusha
pop
fidivl
xchg
jmp
push
sub
sar
inc
sub
gs
lahf
idiv
cmp
push
jns
fwait
cmc
fsubl
fsubl
dec
push
inc
popa
in
lods
notl
fwait
pop
ret
stos
sti
adc
insb
ja
jl
out
mov
xchg
aad
push
clc
jl
and
inc
cmpb
pop
fwait
xor
inc
shl
sub
scas
pop
jl
fistpl
addr16
push
jne
fwait
pop
add
push
push
addl
inc
sahf
adc
rcrl
mov
inc
outsl
in
push
aad
cmp
stc
and
sahf
jae
popa
add
cmp
add
push
sub
or
fwait
cld
mov
mov
lcall
jge
cmp
fbstp
jo
loope
scas
xor
lods
or
outsl
enter
mov
xor
cmp
add
out
inc
mov
nop
mov
int3
fwait
xchg
jecxz
or
movsb
or
bound
movsb
mov
add
cmpsl
lcall
push
aam
sbb
fs
aas
out
pop
pop
mov
loop
test
jle
popa
out
fstp
cmpl
out
xchg
jb
mov
mulb
clc
push
cltd
ja
int3
inc
xor
cmp
in
rorl
sbb
push
sbb
gs
cs
adcb
xchg
out
push
out
pop
mov
mov
jbe
xchg
push
push
xor
cld
int3
push
cmp
shll
ja
mov
xchg
cmp
or
lcall
roll
mov
xchg
shll
dec
adc
and
add
mov
pop
sbb
bound
in
sub
mov
cld
mov
test
in
add
andb
lea
repz
dec
loop
daa
iret
mov
pop
nop
loop
pop
stos
sahf
mov
jge
cmpsl
pop
and
out
xlat
jno
lods
dec
jp
mov
fyl2xp1
jmp
inc
cmp
or
mov
jne
mov
push
sbb
mov
push
pop
or
sarl
add
daa
sahf
mov
adc
mov
cltd
cld
pop
mulb
push
test
dec
je
xor
adc
sarb
fs
cmc
mov
cmp
sbbb
add
sub
gs
hlt
sub
stos
sub
mov
and
js
arpl
aaa
sub
mov
fildll
cli
movsl
xor
cld
push
sub
pop
sub
xor
pop
sbb
mov
fs
push
push
adc
iret
pop
lods
fisttps
repz
mov
repz
sti
jp
test
mov
mov
inc
idivl
push
mov
notb
xor
dec
push
adc
lods
insb
rcr
and
push
les
xlat
movsb
sbb
movsl
xor
icebp
out
das
sub
nop
mov
fldenv
hlt
imul
mov
sbbb
in
pop
fwait
hlt
stos
cli
dec
sbb
push
inc
mov
fwait
stc
xor
push
xor
push
jg
imul
outsl
cs
jg
pop
xchg
out
mov
mov
pop
or
out
test
ficompl
and
movb
inc
mov
pop
lds
mov
add
mov
adc
sub
stos
mov
fcomip
cmpb
push
repnz
rcrb
push
loop
mov
cld
cmp
jno
lock
xor
sbb
orb
fdivrl
pcmpgtw
sub
and
add
lds
ret
aas
enter
rolb
adc
jl
inc
sbb
aaa
sub
enter
cmp
xor
xor
mov
jo
cld
xchg
mov
stos
out
jae
add
das
cmp
dec
outsl
xchg
or
lcall
aam
ljmp
pop
je
xor
subl
xchg
mov
daa
fildll
mov
nop
mov
mov
leave
cmp
pop
cli
mov
lahf
xchg
mov
and
into
mov
test
clc
inc
xchg
shl
movsl
mov
cmc
lret
popf
addr16
dec
jge
test
sub
dec
sub
in
lcall
lock
ljmp
out
cmp
outsb
mov
imul
cwtl
leave
jmp
adc
sbb
dec
pop
jb
dec
rcll
rclb
add
push
rcrl
mov
mov
in
movsb
sub
pusha
jmp
push
adc
jl
fs
in
fwait
mov
sbb
movsb
mov
arpl
pop
int
mov
dec
into
aaa
pop
sub
adc
mov
add
iret
test
out
sbb
mov
aam
outsl
cmp
cmpsl
cmc
mov
lahf
mov
xchg
insb
cmp
add
mov
jmp
out
pusha
jmp
rcll
mov
inc
mov
inc
ljmp
sbb
mov
mov
hlt
popf
aad
lret
inc
dec
int3
repnz
sub
jns
add
roll
xchg
push
adc
sub
sub
mov
out
push
pushaw
mov
insb
push
iret
mov
sahf
adc
and
cld
icebp
push
pop
lahf
emms
ljmp
fsubr
into
add
out
mov
daa
leave
push
fwait
hlt
mov
rclb
mov
ret
jo
pop
shr
xchg
std
out
xchg
lret
test
and
std
iret
insb
aaa
mov
add
inc
dec
out
test
or
fwait
and
cmp
mov
mov
and
out
fadds
jmp
pop
dec
xor
mov
iret
outsb
mov
addb
test
and
jmp
shll
ficoml
ret
cmpsl
mov
sbb
nop
mov
mov
xlat
sub
pop
fwait
cmp
es
je
int
test
mov
out
sbb
negb
imul
pop
pop
inc
jbe
in
je
popf
push
mov
adc
ficomps
shlb
xlat
data16
adc
cs
push
sbb
or
xchg
roll
imul
dec
in
sub
cmpsl
data16
and
dec
lock
xor
outsb
popl
dec
inc
and
repnz
sti
std
pusha
stos
pop
fsts
mov
dec
mov
mov
icebp
scas
mov
sub
outsb
cltd
repnz
dec
jmp
mov
cmpsl
outsl
insl
fstps
movsb
aaa
pop
fsubp
outsb
sub
jle
ret
mov
xor
mov
adc
int3
dec
mov
scas
in
mov
add
sbb
arpl
xchg
bt
scas
mov
pop
mov
into
mov
pop
sub
test
pop
pop
std
in
xchg
lea
aaa
push
adc
js
pop
dec
sub
mov
and
hlt
inc
adc
call
outsl
clc
mov
lahf
add
shrl
push
push
hlt
call
idivb
adc
and
repnz
fsubrs
dec
lcall
mov
fucom
mov
dec
insb
mov
gs
mov
fdivl
sbb
sub
jnp
fstpl
aam
adc
fstl
sub
mov
pop
inc
xor
mov
fists
mov
rcrb
sahf
jb
xchg
fbld
mov
loope
shlb
pushf
movsb
fwait
stos
ds
call
bound
xchg
addl
push
jns
rol
cs
mov
or
cmc
jmp
dec
inc
add
push
repz
shlb
push
imulb
and
push
out
push
loop
in
das
xchg
ljmp
fcoms
mov
stos
sub
jmp
dec
adc
sbb
mov
sub
inc
xor
xor
adc
cwtl
lods
mov
jecxz
add
lds
and
dec
aas
addr16
enter
add
pusha
xor
mov
in
fldenv
dec
xorl
out
clc
xchg
loop
xchg
push
mov
pop
lea
call
out
fs
les
out
mov
ljmp
xchg
push
repz
push
xchg
lahf
inc
mov
mov
loopne
mov
es
in
cwtl
inc
xor
mov
cmpsl
loop
es
jae
push
xchg
sbb
sbb
adc
xlat
cmpsl
data16
nop
incb
or
shrl
adc
sub
mov
push
jle
fdivrs
xlat
xchg
leave
imul
std
popa
cmpsl
xchg
xlat
pop
mov
fstpt
ror
pop
hlt
je
mov
xor
iret
repz
jecxz
pop
imul
push
aad
in
in
jmp
sbb
jb
inc
jae
fxch
mov
ds
arpl
dec
sub
or
adc
inc
enter
bound
adc
paddsw
fwait
inc
xchg
cmpsb
pop
mov
dec
cmpsl
sbb
iret
jb
out
pop
lahf
dec
out
pop
pop
cmp
arpl
dec
xchg
hlt
lods
movsl
js
sbb
add
mov
iret
mov
push
jmp
sub
dec
inc
out
or
xchg
pop
dec
fwait
cmp
mov
cmp
sbb
test
out
adc
lahf
out
jp
push
movsb
inc
jns
imull
push
mov
daa
pop
loop
jns
xor
out
nop
dec
cmpl
push
lahf
dec
ficompl
hlt
cmp
jle
and
adc
pop
mov
jmp
subb
std
pop
dec
arpl
test
xor
inc
fsts
push
cwtl
out
enter
pop
pop
add
push
ljmp
jmp
fcomps
and
dec
mov
imul
pop
mov
shlw
sysenter
or
stos
in
jnp
bound
arpl
pop
adc
test
and
call
pusha
les
fcompl
sub
sub
or
dec
and
adc
pop
in
xchg
rcll
arpl
arpl
xchg
fs
mov
mov
add
sbb
ja
call
ret
leave
test
lret
adc
outsl
test
push
xchg
sbb
inc
mov
sub
jbe
mov
fcom
mov
fistl
mov
mov
and
push
daa
fdivrl
ja
pop
push
mov
fcoml
push
pusha
xor
lock
les
pop
stc
and
add
test
lahf
and
mov
jne
test
mov
icebp
mov
sub
sbb
jmp
mov
dec
mov
mov
and
jmp
ja
mov
cwtl
adc
sub
adc
movsl
popf
add
in
mov
mov
fidivrs
pop
dec
cmpsl
xchg
daa
pushf
hlt
ja
jns
push
cmp
jg
nop
popf
lcall
sbb
scas
ja
aad
push
xchg
jg
mov
add
lods
sbb
lods
ret
mov
test
jmp
and
mov
into
ljmp
push
mov
in
scas
pop
xchg
in
jl
xor
mov
gs
add
cmp
mov
mov
pop
pop
test
test
add
mov
cli
outsb
ret
mov
adc
sbb
sbb
jp
mov
pop
mov
icebp
mov
pop
movl
push
popa
jnp
jecxz
addr16
cmp
mov
mov
mov
sbb
shr
iret
fidivs
lock
mov
test
scas
lret
js
mov
hlt
cltd
lods
scas
sti
enter
cltd
xchg
or
cmp
cmc
xchg
movsb
adc
addr16
push
sub
jo
xor
arpl
cmc
jg
inc
inc
jno
int3
imulb
dec
std
mov
test
sub
jo
lods
repnz
ret
dec
repz
in
or
mov
pop
adc
xor
lods
xchg
jle
jge
push
cmp
enter
inc
sahf
pop
mov
inc
sbb
lret
or
iret
nop
outsb
or
and
sub
sub
xor
incb
and
out
in
sbb
sarb
xor
mov
rcll
rorb
mov
std
mov
add
bound
inc
fwait
lock
push
xlat
lret
movsb
imul
mov
pop
jp
xchg
mov
mov
sub
xor
orl
and
jl
je
add
pop
or
int3
test
repnz
mov
add
in
push
xchg
and
jnp
push
sbb
jbe
repnz
sub
adcb
insl
shr
mulw
test
icebp
sub
fisubl
mov
mov
add
stc
sbb
or
sahf
dec
iret
push
inc
pop
cmp
jo
mov
dec
add
cmpsl
notb
imul
outsl
data16
dec
test
pavgb
jp
lahf
out
fsubs
ds
int3
xchg
dec
je
jae
mov
mov
sbb
xchg
inc
mov
fisubrl
gs
lret
pushl
mov
fimull
xchg
lds
xchg
sbb
xchg
cmp
sbb
hlt
adc
insl
mov
in
inc
pusha
fldl
jge
sbb
ljmp
push
mov
loop
sub
cmp
sti
xchg
mov
stos
int
xchg
in
in
pop
cmp
sbb
nop
and
mov
mov
push
jge
inc
or
xor
jo
mov
ret
mul
push
lcall
shll
cmp
pusha
cmp
in
inc
fldcw
je
sub
popf
ljmp
adc
sbb
mov
xor
faddp
mov
jb
divl
loop
cwtl
notl
sti
aas
stc
jl
les
push
ja
shrb
outsb
in
outsb
pushf
jge
adcl
popf
sbb
inc
sub
mov
call
shll
mov
lods
in
jae
mov
jne
mov
cmpsb
mov
aad
push
test
js
add
xchg
cmc
cltd
ja
inc
imul
jbe
shlb
scas
mov
or
adc
mov
pop
dec
jno
scas
mov
sub
out
leave
pop
inc
sahf
enter
arpl
xchg
sub
jg
inc
and
daa
stos
xor
push
xchg
ret
jmp
shrl
push
iret
insb
xchg
dec
loop
and
push
iret
dec
push
jmp
sbb
leave
enter
jo
adc
sbb
lahf
add
rcrl
adc
jns
out
cmp
jge
pop
aaa
jge
sbb
push
aad
push
loop
js
je
sbb
jo
lret
mov
add
rorb
or
shrl
lea
jo
cmp
imul
dec
fldt
aaa
arpl
adc
fdivl
mov
pop
addr16
jge,pn
int
andl
dec
test
stos
xchg
cld
push
inc
fnstsw
cltd
outsb
xchg
xor
inc
add
push
pop
fiaddl
or
cmp
push
cwtl
dec
fidivrl
das
fs
lret
lods
sbb
sub
lock
push
mov
jbe
in
adc
test
iret
rcr
ret
scas
mov
lret
movsb
lret
push
pop
xor
call
cmp
testb
es
adc
mov
popf
cld
mov
rclb
loop
xchg
jo
xchg
jl
xchg
roll
adc
xchg
pop
loope
push
jns
out
lds
xchg
pop
pop
adc
loop
int3
xor
fwait
in
sub
aad
cmp
outsb
stos
mov
push
cltd
out
aad
loop
cmpsb
mov
push
mov
inc
jg
sbb
push
xchg
pop
arpl
lds
lea
hlt
xchg
xor
mov
push
jbe
in
pop
pop
imul
shl
mov
data16
or
xlat
xor
dec
cmpl
adc
lea
in
fstps
xorb
repz
xor
xchg
mov
test
mov
mov
push
gs
pushw
or
mov
push
add
gs
push
enter
in
sahf
mov
lds
pop
add
dec
mov
sbb
mov
cmpsb
lret
cld
mov
mov
sbb
push
stc
and
xor
sub
imul
sub
fisubrs
cmpsb
or
pusha
jae
xchg
mov
jbe
pop
fcmovu
lcall
push
pop
cmp
outsb
fs
test
jecxz
xchg
jnp
push
pop
pop
scas
add
add
outsl
inc
and
inc
mov
sbb
or
pop
sbbl
sarl
sbb
add
xchg
inc
cmp
jnp
cmp
test
rcll
jnp
pusha
xor
push
push
and
or
test
dec
arpl
jp
repnz
sub
cli
int
push
inc
scas
inc
pop
int3
fnsave
arpl
bnd
ss
jne,pt
cld
adc
push
fisubs
inc
jl
daa
mov
mov
mov
sarb
jle
stos
data16
negb
push
mov
lret
adc
pop
xchg
inc
xlat
pushf
int3
sti
stos
xor
fldl
add
mov
icebp
out
leave
and
pop
xor
test
out
fs
lcall
xorb
inc
rcll
insl
jb
and
in
daa
xchg
or
push
leavew
sbb
daa
insb
sub
pushl
mov
dec
sub
fcmovb
loop
popa
lods
push
fabs
jo
mov
in
cmp
bound
pop
sbb
fcoms
popf
hlt
xorl
add
jae
push
lea
mov
mov
jne
xor
push
push
dec
rolb
scas
fstpl
push
adc
daa
dec
jne
pushf
dec
inc
add
ljmp
pop
xchg
jmp
lds
mov
push
outsl
mov
je
jno
insl
ficomps
cwtl
and
int3
inc
fxch
adc
stc
and
cmc
mov
sub
dec
or
dec
sbb
inc
test
fwait
rcll
cmpsl
fwait
pushf
xchg
idivb
stos
lahf
lcall
cltd
mov
sarb
shll
mov
outsl
insl
in
push
pop
sahf
in
push
clc
sub
clc
fisttpll
sbb
ret
cld
mov
and
mov
lcall
cmpsl
imul
cmp
mov
cmp
xlat
push
xlat
pusha
cmpsl
mov
sub
in
cmp
lods
loopne
mov
xchg
mov
jle
mov
mov
gs
repnz
aad
movsb
jmp
arpl
addb
fldenv
xchg
mov
int
push
dec
cmpsb
es
outsb
sbb
rcrl
movsl
outsl
cld
sub
lds
sbb
inc
xchg
stos
mov
test
ja
fistl
mov
xchg
in
cltd
les
addb
pop
pop
mov
push
mov
aam
inc
dec
fldt
sub
add
inc
rol
xchg
pop
pop
incb
cmpsl
cli
adc
jl
pop
sbb
push
ret
subl
pop
sahf
add
inc
jo
es
and
cmp
jp
jno
dec
insl
jnp
fs
add
jbe
xchg
out
adc
imul
js
out
shll
lds
cmp
or
sti
inc
xorl
pop
mov
mov
pop
dec
mov
dec
ds
out
inc
or
sub
cltd
cmc
test
adc
setl
pop
pop
sbb
cmp
add
fsubl
ret
xchg
add
cltd
leave
push
pop
scas
lret
rcr
aad
das
test
xchg
rol
pop
pop
sbb
or
fiaddl
sahf
and
pop
frstor
inc
shll
jbe
out
pop
orb
pop
adc
inc
popa
rol
std
insb
mov
add
jb
ds
std
sub
pop
jl
xchg
push
pop
fists
mov
cmpl
ds
add
mov
push
pusha
push
xor
sub
sbb
xchg
adc
ret
dec
add
cs
stos
sub
ss
push
fistpll
mov
cmp
stos
fisubl
je
adc
inc
lret
popa
push
sti
cmp
or
andl
aas
into
add
stos
xor
outsl
sbb
xor
cmp
jmp
outsb
js
dec
inc
ja
mov
iret
test
add
nop
jno
add
aam
inc
mov
cs
pusha
imul
stc
jb
insl
sub
es
aas
mov
int
dec
xchg
sbb
pop
mov
mov
inc
cltd
das
lods
stc
push
mov
and
mov
outsl
punpckhbw
dec
mov
sahf
cmp
mov
lcall
call
leave
in
aas
push
ret
add
mov
nop
iret
sbb
push
push
aad
xor
faddp
sub
jbe
xor
adc
lods
pop
mov
push
ret
and
cwtl
adc
daa
push
lods
add
int3
cs
cmp
jbe
xorb
ljmp
out
out
aas
adc
xchg
mov
shl
push
cltd
addr16
xlat
push
repz
push
imul
and
cmp
fstp
cmp
into
xchg
fidivrs
fmul
test
pop
daa
fnstcw
daa
mov
jae
rcrb
mov
stos
push
xchg
ja
jp
fsts
ds
sti
aas
xchg
imul
lods
shrb
xchg
and
xchg
pop
xabort
and
imul
fidivs
cmpsl
into
and
test
push
mov
scas
in
hlt
push
repnz
pop
ret
mov
stc
cmp
imul
add
aas
arpl
adc
and
repnz
inc
pop
jo
std
xchg
rcl
out
arpl
das
xchg
push
lea
sub
push
daa
in
jg
rorb
mov
and
aaa
fbld
cld
cmpsl
pusha
inc
mov
ds
add
mov
out
mov
lahf
sbb
jle
push
jb
dec
jge
jg
jl
sbb
xchg
in
push
int
inc
mov
jnp
cmp
mov
jecxz
dec
pop
std
mov
dec
pop
and
fidivrs
and
call
lcall
dec
lahf
push
lret
push
pop
jno
bound
dec
sbb
js
mov
jge
adc
movsl
or
retw
enter
cld
cwtl
es
movsl
jne
jmp
push
bound
pop
cmp
adcb
mov
inc
je
push
aas
inc
enter
xor
mov
popf
xlat
out
add
mov
push
lods
sbb
scas
sbb
cmp
dec
jmp
and
add
imul
aad
ljmp
popf
shrl
lods
push
adcl
or
push
mov
cmpsl
pop
and
mov
mov
iret
arpl
sub
mov
sub
inc
or
stc
das
fstpt
outsl
xor
jl
and
test
pop
ljmp
fisubrs
mov
lea
pop
and
insl
or
inc
fisubl
adc
jp
cs
sbb
jg
mov
inc
jns
pusha
xor
cmp
or
mov
mov
std
cmp
fidivrs
mov
jmp
push
mov
and
dec
sbb
sbb
xlat
jbe
mov
sbb
xchg
test
inc
jp
push
mov
insb
cli
push
sub
inc
jecxz
mov
push
dec
mov
fwait
scas
shll
mov
xchg
loope
hlt
aam
hlt
push
shll
mov
adcb
adc
lea
in
cmp
std
ret
sub
sub
sbb
and
in
jp
cmpsb
xchg
popf
cli
ret
jno
dec
xor
imul
or
lcall
cs
icebp
pushf
push
outsl
or
mov
fwait
les
adc
xchg
mov
mov
shll
push
outsl
idivb
lock
gs
lret
jp
pop
divb
sub
mov
jp
mov
jle
fidivs
push
aam
and
aad
out
push
mov
sub
pop
call
popf
xor
add
mov
inc
and
xchg
inc
xlat
push
mov
push
pusha
xchg
sbb
sub
cmp
data16
sbb
aaa
fnstenv
sub
xor
subb
xchg
pop
loopne
les
sub
and
imul
or
out
inc
and
xchg
add
rcll
cmp
hlt
sbb
xor
lods
xor
cmp
subb
out
cmpsl
test
sub
outsb
stc
outsb
mov
dec
pop
lcall
int3
jge
scas
test
sbb
pusha
inc
adc
sbb
adc
leave
je
test
shr
data16
mov
or
lods
shlb
mov
jnp
inc
push
nop
jp
adc
nop
popa
jp
adc
out
ljmp
xlat
mov
mov
aam
imul
push
dec
loope
aam
insl
out
movb
and
movsl
sahf
push
push
fadds
out
dec
test
mov
movsl
jmp
jno,pt
daa
push
xchg
cld
cmp
lret
inc
or
jne
jns
hlt
icebp
dec
loop
es
jmp
xchg
xchg
bound
add
pop
cmovb
scas
sub
loope
mov
sahf
mov
mov
or
add
add
pop
and
lds
imul
fdivrs
dec
cmp
test
adc
jp
push
sarb
push
jb
popf
inc
cmp
push
mov
sub
mov
fisubl
add
loope
cwtl
stos
fwait
test
lods
and
push
xor
pop
mov
ret
dec
stos
lret
pmulhuw
loopne
lods
gs
mov
xchg
es
and
mov
fstpl
mov
je
ficoml
pop
std
fbld
push
rol
and
push
cmpsl
or
push
push
divl
ret
mov
fwait
xchg
daa
outsl
xchg
scas
push
nop
in
jo
sbb
add
jno
push
mov
push
pop
js
data16
xchg
ds
inc
jecxz
in
push
inc
fbstp
aas
push
dec
push
stos
add
jg
add
popa
and
mov
jns
test
inc
adc
xchg
fucomip
rclb
add
call
add
jb
xor
fildl
and
mov
sub
mov
push
divl
xchg
xchg
jmp
jb
lret
out
xor
mov
fsubrs
xchg
jle
mov
xor
aas
mov
dec
inc
loope
popa
mov
adc
pop
pop
mov
out
jmp
pop
jnp
orl
pop
jns
imul
mov
mov
xchg
notb
test
js
jl
loope
clc
push
fstpl
mov
leave
negb
push
pop
lods
jnp
push
xchg
jae
push
imul
outsb
aaa
and
jmp
scas
adc
repnz
push
fs
mov
mov
pop
add
mov
fwait
popa
push
inc
xor
call
scas
mov
dec
aas
lea
and
or
clc
mov
xchg
adc
adc
xor
clc
imul
out
push
subl
jge
jmp
dec
ljmp
js
mov
iret
mov
in
mov
and
ja
les
sbb
xchg
cltd
sub
push
mov
ret
testl
loopne
inc
cmp
mov
push
mov
mov
dec
xlat
add
outsl
pop
jnp
sbb
clc
cmpsb
es
sub
jge
add
lock
xchg
sahf
xor
mov
or
lret
leave
lcall
cmpb
mov
cltd
out
faddp
imul
push
popf
pop
sbb
pop
push
aad
or
mov
outsl
sbb
add
mov
stos
inc
popf
jp
leave
fmull
add
pop
or
push
inc
add
inc
mov
mov
fs
sarb
pushl
clc
stc
inc
inc
addr16
lods
mov
adc
aam
jns
adcb
rcrl
inc
xor
xor
lret
pop
pop
push
mov
int
aam
add
loope
fsubrs
ljmp
rolb
nop
imul
outsb
xlat
neg
ror
bound
inc
pop
mov
cmp
pop
pop
pop
shll
cmp
jae
xchg
shlb
add
lds
pop
cmpsl
dec
lds
andb
cmp
and
inc
lret
jl
adc
xchg
sub
pop
lea
stos
mov
xor
jmp
popf
in
out
out
cmp
out
lods
inc
mov
mov
mov
mov
mov
jnp
je
mov
and
mov
add
les
cmp
fcomip
inc
jge
push
jne
aas
les
adc
mov
inc
int
test
sub
cmp
xchg
rorl
scas
push
xor
mov
imul
jmp
cmp
jno
inc
push
mov
xor
mov
and
mov
mov
mov
cmp
push
xor
shll
repnz
ffree
daa
push
add
clc
mov
xor
imul
int3
out
sahf
sub
or
sbb
inc
js
repz
mov
inc
stc
pop
sub
call
cli
shlb
or
ret
mov
js
inc
imul
aam
fistl
mov
shll
or
adc
mov
testl
mov
ljmp
jne
push
pop
jnp
cwtl
xchg
sahf
outsl
in
loope
pop
lods
mov
cli
add
sahf
sub
lods
aaa
stos
inc
pop
xor
imul
cli
mov
hlt
inc
sbb
push
orb
xor
jle
mov
add
sahf
jo
mov
add
es
cmp
int3
mov
hlt
fisttps
movsl
xchg
mov
mov
jnp
int3
aam
insl
js
jmp
sub
jne
lcall
jl
test
or
and
jmp
das
sarl
or
loopne
dec
lahf
dec
cld
pop
cld
pusha
xchg
mov
pop
cmp
mov
insb
mov
lret
data16
in
cli
das
sbb
mov
jp
sub
mov
hlt
inc
sbb
sub
xchg
add
in
movsb
movsl
push
arpl
mov
insb
or
jae
push
sub
dec
xchg
adc
push
adc
push
mov
add
scas
xchg
sbb
mov
mov
mov
insl
sub
aas
andl
out
jge
outsb
push
mov
and
push
bound
add
cltd
les
scas
mov
out
aaa
mov
and
jle
scas
fisubl
jl
nop
xlat
lahf
scas
push
out
mov
nop
mov
cmp
push
sbb
push
incl
mov
jo
js
push
and
shll
push
cmp
fistpll
lock
dec
movsl
push
mov
out
add
mov
je
scas
jecxz
pop
or
dec
adc
mov
das
lahf
and
movsl
inc
xchg
lret
sbb
aam
push
sbb
sub
push
push
aam
mov
jns
aad
cmpsb
dec
add
dec
jmp
scas
mov
jno
stos
repnz
insb
ss
xor
mov
sub
insb
test
add
or
cs
and
cmp
mov
sub
cld
cmp
aad
bound
sbb
push
rcr
test
or
mov
push
gs
data16
dec
push
lret
imul
cmpb
adc
and
push
xor
and
cmp
push
adc
and
mov
xchg
ret
mov
xor
cli
and
fsubrs
pop
icebp
orl
mov
nop
jge
cmp
out
cmpsb
sahf
jl
loop
push
xchg
repnz
js
sbb
lods
inc
sbb
das
push
movsb
adc
pop
push
fidivrs
push
enter
int
sub
push
xor
dec
push
mov
push
dec
test
stc
aas
xchg
nop
sbb
addr16
out
fwait
mov
xchg
les
lret
push
fsub
add
rcrb
loop
bound
sub
xor
into
iret
jo
dec
ror
or
or
and
adc
out
xor
xchg
lahf
xchg
stos
push
and
sbb
les
push
pushf
xchg
lods
rcll
shlb
nop
sbb
push
mov
cmp
popl
mov
out
stc
jge
mov
fs
les
xchg
or
mov
and
mov
sbb
fisubs
push
or
iret
enter
lods
push
test
je
pop
xchg
ud1
out
fdivrp
pushf
iret
mov
and
dec
ljmp
xchg
or
lret
inc
les
fsubs
or
jmp
pop
stc
aam
test
jno,pt
xor
mov
scas
mov
fs
sti
popf
push
movsb
lahf
js
or
movsb
dec
xchg
dec
je
hlt
ret
xor
or
adc
movsl
xor
clc
xor
mov
jb
jns
fisttpll
inc
pop
xor
add
or
sti
mov
mov
dec
addr16
cmp
iret
mov
cmp
nop
pop
dec
add
xchg
orl
mov
mov
push
mov
js
fistpl
push
stos
sbb
leave
xorl
pop
mov
pop
pop
dec
xchg
cwtl
and
xorl
xchg
mov
mov
repnz
xor
inc
jg
popf
cwtl
and
mov
pusha
sub
or
test
sub
negl
adc
int
push
adc
lods
fadds
push
jle
imul
repnz
jbe
mov
pop
in
imul
out
pop
stos
sbb
ret
lods
sahf
imul
in
lods
pop
mov
loop
and
hlt
ljmp
dec
movsl
sahf
sti
and
inc
mov
push
mov
in
imul
scas
sub
stc
sub
adc
mov
jae
mov
sti
jno
push
in
adc
in
shlb
xor
push
mov
pusha
inc
test
loope
jge
ds
out
xor
pop
xchg
jnp
jne
dec
pop
lahf
sub
and
outsb
or
inc
aas
inc
in
subb
inc
xchg
jp
aaa
lods
add
fsts
or
xchg
lret
sti
inc
push
test
jb
lahf
loop
std
addb
imull
mov
pop
divl
mov
dec
test
mov
sbb
ja
push
stos
ret
popa
fwait
mov
inc
orb
mul
add
jne
es
lds
mov
jno
sti
xorb
mov
enter
jge
inc
das
push
sbb
sub
out
cmc
sbbl
mov
xlat
or
aas
mov
stc
or
in
push
roll
or
mov
sub
inc
adc
out
fwait
or
xchg
out
push
ficoms
nop
insb
test
shlb
pusha
jne
call
add
lods
sbb
or
lds
fwait
or
jmp
xchg
arpl
stc
pushf
sub
and
add
pop
cmp
and
dec
in
test
fwait
mov
cmp
adc
sbb
pushf
xchg
dec
lahf
xor
lea
mov
stc
mov
cmpsb
add
cmp
xchg
aaa
pop
jge
pop
jnp
outsl
dec
leave
jp
sbb
push
jle,pn
lods
add
inc
and
push
jl
sarl
sarl
mov
out
dec
fldenv
and
nop
or
inc
mov
xchg
ja
sbb
out
gs
lret
addl
sti
or
adc
xor
jno
cmp
bound
mov
fs
imul
mov
sub
hlt
mov
jne
repz
das
push
in
loopne
and
cmp
fwait
dec
mov
icebp
jbe
test
pop
je
mov
pop
fcmovnu
or
addr16
popf
mov
cmp
cltd
jg
mov
xor
es
out
mov
sbb
iret
mov
push
sbb
ja
add
test
repnz
xchg
adc
dec
lea
sub
das
shlb
sub
push
loope
hlt
sahf
adc
scas
inc
inc
in
xchg
cmpsb
sbb
daa
jbe
cmp
or
repz
pushf
inc
stos
fisubs
clc
and
ja
inc
cwtl
xchg
cmp
vxorps
mov
inc
aaa
xchg
push
push
inc
dec
jmp
mov
loopne
dec
xchg
test
jp
in
or
xlat
scas
subl
xchg
movsl
push
jbe
sbb
mov
add
jae
ret
enter
iret
in
xor
jno
adc
je
je
adc
shrb
ds
orb
add
loop
or
and
fmuls
decb
inc
insb
insb
out
test
ds
mov
push
mov
stos
add
nop
inc
into
mov
pop
cmp
cs
sbb
sbb
mov
repnz
pop
jp
inc
jns
js,pn
fidivrl
gs
mov
push
cld
pop
jae
push
and
aam
and
pop
xchg
pop
mov
sub
xor
pushl
xchg
in
pop
push
cmpsb
outsl
scas
gs
mov
jecxz
mov
push
mov
hlt
int
popf
cmp
fdivrl
jg
jge
out
jl
jo
push
mov
xor
mov
outsb
adc
nop
push
pop
mov
and
icebp
xchg
jne
push
mov
lods
test
fsubl
sbb
add
jg
decl
scas
loop
test
in
xor
fwait
es
rclb
fwait
test
test
dec
xchg
jae
mov
fsubrs
sub
hlt
std
or
sbb
sahf
icebp
adc
pushf
ret
or
dec
hlt
mov
loop
inc
fists
push
push
or
or
ljmp
insl
divb
gs
int
xor
adc
xchg
scas
adc
pop
fwait
or
cmpsb
pop
ds
test
adc
sahf
fcomps
mov
and
jl
pop
addr16
sti
xchg
jmp
xchg
shll
jecxz
pusha
imul
pop
xchg
lahf
pop
push
or
sbb
int
or
enter
sbb
add
mov
cmp
ja
xchg
orb
movsb
rol
pop
inc
inc
xchg
data16
ret
jb
sbb
push
jl
cmpsb
push
or
nop
mov
adc
in
adc
shll
adc
mov
push
ss
out
aam
mov
push
cmpsb
das
mov
mov
gs
mov
push
repnz
push
sbb
icebp
jecxz
outsb
fdivr
mov
cli
call
xor
rolb
mov
clc
dec
repz
gs
cmp
mov
pop
sahf
in
lahf
cmp
jecxz
mov
mov
mov
scas
xchg
adc
imul
popf
push
lret
xchg
ret
addr16
daa
hlt
sbbl
aaa
inc
mov
xchg
xchg
pusha
lcall
jbe
lahf
inc
ljmp
sub
mov
fs
in
push
ds
mov
mov
cmc
ss
mov
mov
xchg
or
addr16
jae
lock
stos
inc
xchg
push
push
pop
xchg
push
rcll
enter
push
ret
mov
inc
int
fs
mov
xchg
imul
ja
cmc
lds
add
xchg
movsl
lcall
jb
push
insb
push
jmp
jno
xor
pcmpeqd
xor
adc
dec
pop
nop
movsb
dec
sbb
jb
adc
or
add
mov
popa
mov
jno
insl
jae
fbld
loopne
jg
mov
sti
and
dec
xchg
outsl
sub
jae
pop
ja
xchg
ret
pop
fwait
mov
dec
mov
mov
xor
push
mov
jg
dec
out
arpl
pop
lock
and
mov
ror
ret
mov
xor
add
test
mov
xchg
dec
lock
out
std
dec
test
mov
loopne
arpl
inc
in
pop
outsl
or
and
adc
inc
adcl
out
into
clc
cmpsb
lods
imul
aas
jmp
cmp
js
call
or
pop
mov
xor
ja
adc
cmp
rorl
xchg
ret
mov
mov
jb
scas
stos
mov
incb
mov
fdivr
fdivl
push
out
dec
loopne
inc
pop
out
sub
aas
sub
outsl
leave
scas
mov
cli
cmpsb
pushf
in
test
test
jno
jge
cmp
cmpsb
sti
push
ja
or
test
pop
lea
movsl
enter
jne
jne
call
mov
lods
ja
aad
sbb
dec
add
mov
in
jecxz
push
mov
push
push
ljmp
pop
int3
je
xlat
flds
insb
inc
xchg
cmpl
inc
mov
cltd
jno
bound
lods
lret
sbb
mov
scas
stos
sub
mov
icebp
fnstenv
cmp
push
scas
pop
lret
sbb
leave
cli
icebp
mov
test
sub
loope
dec
cmc
or
shr
int3
or
xchg
sub
pop
pop
repz
cmp
jmp
mov
arpl
push
pop
mov
pushf
fdivrp
pop
xchg
arpl
push
rcll
mov
push
into
xchg
push
fnstcw
mov
popa
or
pop
loope
loop
or
ret
call
scas
push
int3
sub
jge
popw
mov
cltd
adc
das
sub
std
jl
sti
lock
xchg
jno
dec
js
push
fs
xchg
fisubs
mov
lds
adc
shlb
push
adc
push
push
cmpsl
add
dec
hlt
pop
pop
xchg
and
xchg
cmp
sbbb
das
les
cmp
adc
mov
in
ljmp
inc
inc
mov
rolb
in
or
daa
fsts
xchg
nop
cmpsw
loop
fwait
mov
sub
dec
je
pop
xchg
imul
or
in
aad
push
testb
aam
xchg
add
cmp
test
pop
adc
cmp
in
xor
je
mov
and
jmp
arpl
test
cmp
outsb
mov
mov
fsts
cld
decl
mov
or
xchg
sub
mov
mov
adc
and
jge
cs
in
fimuls
fiadds
pop
das
mov
add
inc
loopne
and
stos
xchg
lds
mov
out
stc
adc
push
sbb
js
popa
add
jmp
jbe
aas
das
pop
and
call
cmp
sbb
sbb
aas
jb
mov
notb
sub
sub
jnp
push
call
lock
pop
mov
in
test
and
hlt
arpl
mov
jmp
popa
or
dec
inc
mov
std
jl
popa
ret
cmp
jp
mov
cmp
stos
inc
mov
into
sbb
out
add
dec
and
add
jmp
shl
push
fwait
push
inc
insl
pop
into
inc
sbb
mull
or
call
repnz
inc
push
stos
cltd
mov
test
mov
pop
pop
and
jo
adc
cltd
and
insl
xor
cmpb
ret
xchg
or
fnop
movsb
mov
mov
aad
es
or
or
movsl
xchg
xor
aam
int3
hlt
mov
or
fisttpl
inc
mov
test
xor
icebp
rcr
xor
scas
jmp
adc
lahf
repz
aam
push
aas
sub
sub
dec
push
aad
mov
lock
or
sbb
add
stos
mov
sub
xor
cmpb
sub
sbb
add
push
or
inc
add
adc
mov
jmp
xor
xchg
and
add
out
rcl
mov
dec
ss
mov
lds
aas
sub
ret
dec
pop
sub
je
dec
int
push
xchg
out
mov
sbb
jno
aaa
adc
rorb
xchg
mov
adc
xchg
loop
mov
and
inc
outsl
jg
int
not
js
cmp
sub
divl
lods
loope
add
fisttpl
or
insb
xchg
cmc
dec
xchg
or
mov
int3
fsub
sub
aas
aaa
add
in
add
les
roll
mov
sbb
lcall
sti
dec
mov
enter
mov
pop
push
mov
ret
aaa
hlt
xor
ja
mov
fpatan
cmp
aas
push
jle
fsts
sub
mov
test
imul
fnstsw
or
das
add
sub
add
xor
je
repz
jmp
outsb
xor
in
lds
cld
int
adc
aas
jge
test
jb
adc
insl
mov
xor
sub
mov
stos
push
pop
icebp
das
pop
rcr
sbb
dec
pop
scas
in
sub
jle
divl
lock
or
xor
xchg
cmp
sub
test
aas
lret
add
cmp
xlat
clc
int
lods
pop
fs
pop
ljmp
dec
sub
cmp
test
notb
dec
xchg
push
pop
pop
in
jns
scas
popa
xchg
push
mov
jge
iret
clc
or
adc
push
sbb
cmp
lcall
cmp
test
out
mov
xchg
js
push
or
pushf
shlb
out
lds
add
push
cmp
aaa
inc
jmp
lret
push
mov
cmpb
lods
xor
xor
movsl
add
scas
outsl
sbb
pop
xchg
cmp
pushf
pop
xor
fs
sarb
test
fdivs
pop
cs
ljmp
sub
jecxz
jmp
jp
mov
loopne
pop
cmp
shll
cld
addb
cmp
test
dec
dec
lock
mov
xor
clc
lea
cmp
xlat
pop
mov
xor
fnsave
xchg
scas
cmpsb
sbb
les
repnz
mov
aam
test
push
mov
jbe
push
mov
outsb
out
xchg
mov
jae
addr16
sti
xorl
and
push
scas
push
mov
pusha
xor
ret
lcall
adc
xchg
push
aas
fstl
xchg
lea
push
xchg
test
movsb
push
loopne
xchg
aas
jb
pop
cltd
pop
adc
add
mov
lahf
pop
pop
sub
xchg
cltd
gs
pop
outsl
loop
xor
or
add
insl
mov
push
lahf
idiv
in
fldl
cmp
std
mov
jecxz
xchg
imul
add
push
jno
xchg
mov
jbe
pop
stos
cwtl
in
pop
les
test
push
enter
out
mov
dec
ret
fadd
subb
enter
sub
test
fwait
add
scas
cmc
stc
test
push
shlb
loopne
pop
iret
add
pop
sub
aaa
test
bound
sahf
fs
clc
lods
sbb
cmp
jns
inc
dec
xchg
lds
mov
repnz
lcall
xchg
imul
mul
in
gs
inc
pop
jecxz
out
mov
inc
imul
mov
mov
inc
xor
rcll
jno
stos
dec
rorl
jo
pop
mov
adc
enter
cld
aad
adc
and
fcomps
mov
outsb
mov
jmp
jp
movsl
add
or
sub
loop
jo
das
sbb
and
sub
xlat
movsb
mov
xor
popf
lods
ss
pop
sbb
xchg
dec
cmp
adc
loop
pusha
adc
sbb
js
pushf
pop
cli
es
add
js
and
mov
and
mov
mov
in
es
lcall
stos
inc
cmp
inc
push
into
sub
sahf
adc
out
jnp
cmpsb
fwait
insb
sub
or
jo
test
jae
mov
jns
sub
sbb
mov
fwait
lods
inc
cmp
jbe
or
mov
lock
mov
pop
movsl
jmp
daa
adc
dec
rcl
pop
and
cmpsl
inc
cld
mov
loopne
scas
jl
sbb
mov
mov
mov
mov
out
rorb
or
cli
movsb
scas
jp
testl
lds
push
push
or
xor
out
cs
repnz
push
lods
aaa
iret
mov
xor
out
mov
pop
mov
int
test
jo
pop
popa
add
out
push
jg
int3
mov
setbe
bound
jo
adc
out
insb
sbb
mov
out
mov
fnsave
inc
es
mov
jb
cmp
shr
stos
fistl
outsb
mov
and
mov
push
jge
and
ja
jbe
add
imul
test
sbb
icebp
pop
scas
inc
mov
sbb
rcl
ja
push
clc
aas
push
add
xchg
gs
add
imul
cwtl
outsl
pop
pushf
in
in
je
push
and
or
push
lock
mov
adc
lret
idivb
call
sti
mov
in
push
lcall
push
movsb
jae
and
or
push
or
mov
aad
aam
cmp
das
fwait
or
rcll
pop
add
andl
mov
add
xchg
xor
pop
and
adc
frstor
gs
iret
jl
notl
jo
and
lret
arpl
adc
stos
push
addr16
jl
cmc
ds
and
add
cmp
fadd
call
ljmp
push
out
pop
xor
loopne
lds
and
mov
mov
mov
pop
xchg
sarb
or
pop
les
leave
mov
push
push
cmp
dec
xchg
xchg
insl
outsl
inc
sub
jge
pop
jge
fidivrs
and
daa
sub
shll
pop
inc
mov
cmc
mov
dec
cmp
mov
jp
mov
ljmp
adc
fistpll
push
add
shrl
pop
xor
or
repnz
cld
pop
outsl
mov
push
inc
jmp
push
sbb
cld
test
jns
xchg
jbe
xchg
mov
roll
mov
jno
int3
std
pop
adc
jge
outsb
fldt
inc
pop
xchg
fistpl
lret
push
cmp
cmp
dec
sub
inc
bound
sbb
je
push
mov
dec
xor
sbb
filds
push
fbstp
pop
push
cmp
les
push
test
add
in
xchg
in
daa
sbb
adc
aad
pop
dec
mov
mov
mov
gs
int3
cmp
mov
and
xchg
xchg
insl
mov
stc
fs
xchg
and
out
sti
sbb
add
lahf
data16
cmp
pop
mov
ret
ja
mov
in
enter
dec
push
mov
mov
int3
test
xchg
lcall
scas
test
push
jnp
addb
sub
jae
add
into
xchg
mov
decb
lea
scas
dec
add
mov
or
pop
xchg
xor
and
inc
cltd
sub
jnp
and
nop
rorb
adc
jl
loopne
test
xlat
jo
jno
adc
mov
cmp
arpl
addr16
arpl
aam
repnz
fists
inc
jg
out
jp
in
sub
enter
rcrl
std
repnz
movsl
sub
clc
fnsave
roll
pushl
fwait
stc
imul
enter
data16
jno
dec
jp
mov
popf
and
jb
inc
xchg
pushf
mov
addr16
xorb
push
idivb
mov
fimull
and
xor
lahf
cmp
xor
cwtl
jmp
sarb
dec
and
outsl
rolb
xsha1
cmpsb
push
rcll
mov
popa
mov
or
pop
out
xchg
sub
mov
dec
mov
jae
jnp
sbb
notb
cli
dec
xlat
mov
insl
pop
push
and
jne
mov
xor
mov
and
cmp
xor
sbb
fs
jne
or
aaa
inc
test
and
insb
lds
mov
ficoml
sub
lea
and
cli
loope
fadd
mov
hlt
pop
lcall
pop
jle
stc
aad
pop
and
push
sbb
in
add
lods
add
sbb
addb
notb
lock
idivb
aad
lcall
les
jbe
xor
decb
cld
mov
push
lock
inc
add
ljmp
or
call
outsl
dec
lret
adc
xor
push
mov
ss
inc
ljmp
mov
addr16
mov
add
ljmp
std
mov
mov
jnp
lods
pop
subb
cmp
andb
or
int
imul
mov
test
sub
js
jae
push
cli
push
sbb
jmp
jl
insb
sub
data16
fildl
into
popf
inc
inc
jno
cld
pop
mov
hlt
ficomps
into
add
daa
negb
imul
pop
popf
mov
jbe
sub
adc
jbe
ficompl
jb
sub
mov
pushf
mov
add
jl
stos
or
push
or
pop
inc
fnstcw
das
dec
test
movsb
dec
sub
movsb
out
cmp
mov
xchg
and
mov
lods
cltd
jl
jmp
cmp
test
jb
xor
addr16
inc
test
faddl
push
cmp
fs
call
addl
add
jle
aad
jecxz
cmpsb
sbb
roll
js
aad
mov
lahf
xlat
test
lods
jnp
adc
sbb
lds
sub
insl
mov
mov
rcrl
xchg
mov
das
test
std
lock
push
fcompl
inc
fisubl
gs
push
mov
sub
xchg
xor
mov
pop
xchg
and
das
lret
sbb
cmc
frstor
mov
andl
xor
or
popf
adc
aad
pop
insb
dec
mov
or
jne
mov
sub
xchg
inc
xchg
mov
jae
xor
push
daa
mov
push
lods
outsb
mov
pop
cmpb
repnz
mov
sub
push
jae
dec
xchg
ret
scas
shrl
jns
cmp
pop
cmpsb
bt
lret
push
insb
hlt
sar
push
fs
nop
inc
pop
fdivl
mov
mov
ljmp
negb
and
rcrb
faddl
or
out
dec
sub
sub
mov
hlt
sub
sti
inc
add
cmpl
lods
aaa
pop
mov
push
jmp
push
aas
jge
xchg
pop
inc
repnz
pop
cmp
lds
cmp
jmp
mov
add
or
les
pushl
or
imul
adc
dec
jbe
or
xchg
cmp
aas
ja
sbb
fildll
dec
rcrb
dec
sbb
mov
aas
jbe
pop
lods
arpl
rclb
mov
mov
push
xor
lcall
addr16
pop
cli
inc
aaa
ret
out
insl
pusha
std
sbb
loope
mov
mov
or
adc
add
adc
test
sbb
mov
out
out
jmp
xchg
bound
inc
inc
fsub
sub
pop
sub
xchg
lock
lret
dec
and
dec
jae
pushf
dec
add
jo
leave
mov
dec
inc
subl
test
cmp
mov
roll
outsl
frstor
js
dec
clc
inc
scas
mull
int
enter
decl
push
rcr
cld
adc
test
ljmp
cli
cwtl
jbe
pop
cmpsb
cltd
push
mov
adc
mov
dec
aad
sub
arpl
ljmp
nop
jbe
mov
dec
push
arpl
and
mov
fs
and
push
adc
mov
adc
jecxz
cmc
fidivl
outsb
fstl
push
lock
sub
cltd
loope
mov
jmp
push
int
xor
push
ss
pavgw
dec
adc
loop
jl
cmp
ljmp
jmp
xchg
pop
and
bound
dec
aam
mov
pop
lret
adcb
nop
xchg
mov
xor
mov
mov
push
jge
sub
sbb
sub
leave
gs
shr
add
iret
js
pop
sub
adc
xor
add
pusha
xchg
rcr
and
jmp
dec
fistps
dec
sti
pop
xchg
aam
add
inc
std
lret
mov
pop
dec
mov
shlb
sbb
push
or
and
das
scas
jmp
inc
data16
pop
clc
dec
les
sahf
movsl
fidivrs
xor
cld
int3
clc
and
test
or
xor
mov
mov
adc
fwait
nop
test
jnp
mov
andb
outsl
in
sti
aaa
mov
sbb
ljmp
imul
pusha
popl
in
jl
mull
clc
jecxz
stos
out
push
iret
jg
or
adc
vmovups
pushf
cld
pop
sbb
fcmovnu
pop
test
int
xchg
sub
nop
sbb
push
and
sbb
push
or
mov
jle
pop
inc
xchg
testl
or
lret
test
andb
mov
stos
mov
mov
fsub
addr16
mov
loope
jno
iret
mov
mov
or
xorb
gs
mov
lcall
add
shlb
add
ja
cmp
aad
cmovl
jmp
pusha
orb
lahf
ret
xchg
scas
aas
pushf
aaa
ret
movsb
aaa
cmp
scas
scas
push
sub
pop
inc
call
cld
mov
fwait
cmp
insl
icebp
sub
dec
add
jecxz
sbb
and
nop
stos
nop
inc
nop
cmp
test
pop
dec
inc
clc
out
int
testl
xchg
addr16
xor
repnz
shrb
das
stc
jns
in
clc
push
or
sub
fidivrl
push
ljmp
insl
jg
xor
push
js
pop
sahf
jmp
shlb
xor
movsl
xor
sbb
add
jl
jo
mov
fildl
push
cmp
pushf
push
adc
out
xor
int3
mov
clc
dec
and
ja
imul
mov
add
jbe
xchg
xlat
dec
insb
dec
sub
icebp
fldenv
mov
shll
in
fdiv
cld
ljmp
mov
mov
ffreep
mov
jns
and
mov
clc
cmpsl
mov
test
sub
insb
fcoms
je
and
es
pop
add
add
adc
sbb
or
xchg
xchg
mov
popf
jbe
out
add
in
push
cltd
dec
out
test
cltd
dec
and
adcb
mov
pop
push
lret
call
xchg
lahf
mov
push
js
pop
pop
inc
xor
pslld
sub
dec
xor
ror
sub
push
cmp
stos
aad
jmp
xchg
rclb
mov
add
bnd
sbb
es
add
sbb
movsl
je
mov
add
and
insb
add
lahf
subb
roll
push
ret
popf
sahf
lods
fnstcw
loop
mov
loop
lds
jne
cmp
daa
inc
fisttpl
xchg
sbb
lret
out
and
push
mov
sub
mov
mov
fsubr
sbb
pop
add
clc
fstp
add
mov
fadd
pop
mov
jo
and
cmp
sub
inc
xchg
addr16
xchg
lds
mov
jnp
inc
sub
out
push
mov
jecxz
adc
fisubrs
out
or
cli
cmc
movsl
add
std
cmp
cmp
adc
xchg
ds
xlat
xor
test
jne
and
sub
mov
add
popa
fcoms
cmp
stc
orb
std
jns
std
cmpsb
inc
or
dec
fs
lret
inc
faddp
cmpsl
lcall
mov
lods
pop
and
lods
inc
mov
jb
imul
loopne,pn
adc
push
xor
daa
testb
push
rcrl
sti
jo
push
ds
adc
cld
jle
add
scas
mov
jne
cmc
out
inc
push
cmp
pusha
sub
sti
fstps
fbstp
dec
in
sub
les
mov
fists
in
inc
mov
ja
jmp
push
adc
mov
mov
test
aam
ss
out
push
in
xor
or
cmp
or
insb
ret
push
test
dec
lds
call
shrb
lock
cli
push
aad
dec
mov
int3
aas
filds
std
cmp
jmp
insl
in
rolb
pop
xchg
cmpsl
or
fbstp
mov
push
repz
push
movsb
rol
cmpsb
sbb
imul
cld
sbb
xchg
arpl
cltd
int3
stos
std
nop
aas
inc
lret
ror
lock
sbb
ds
sar
popw
add
push
pop
add
and
add
cli
adc
je
xor
pushf
dec
push
dec
rcll
mov
cmp
pusha
push
inc
push
lods
xor
popf
xchg
or
adc
push
adc
repz
mov
pop
or
inc
sub
sbb
add
push
mov
push
loop
out
inc
das
outsb
test
lods
aad
inc
sbb
pop
inc
inc
iret
repnz
or
lret
enter
lods
repnz
jmp
enter
aam
loope
pop
test
jae
pop
arpl
xorl
scas
jbe
mov
fcoms
in
je
mov
adc
mov
sbb
push
out
cwtl
pop
scas
push
stos
push
jns
push
mov
testb
es
std
lds
mov
mov
mov
addb
cmp
inc
push
test
out
ss
ljmp
roll
inc
lahf
add
aas
icebp
adc
ficoml
and
daa
loope
rcrb
out
push
xchg
inc
jge
add
mov
lret
xor
adcb
dec
sub
pop
jp
fcmovu
dec
and
fwait
insl
lcall
test
test
push
mov
into
inc
cmp
aam
ja
cltd
test
fcoms
mov
xchg
add
mov
add
adc
jg
in
dec
imul
sti
ret
push
jno
jbe
cld
repnz
enter
clc
cmp
xor
lcall
mov
inc
lock
ret
mov
iret
test
shlb
lods
subb
sti
in
mov
outsb
push
std
add
ret
stos
ja
lahf
fidivl
fcoms
iret
cld
leave
jecxz
dec
and
add
in
repnz
cmpsb
add
jnp
arpl
or
icebp
mov
push
in
in
jae
xchg
cmp
inc
orl
ja
dec
mov
and
add
dec
nop
sbb
jb
push
popf
xor
pop
cmp
addr16
or
push
xchg
sbb
push
pop
jl
imul
pop
push
jp
lahf
or
sub
add
mov
sbb
movsb
dec
sbb
fucomi
insl
xchg
and
fcoms
sahf
and
inc
xor
and
pusha
mov
sub
icebp
dec
ret
enter
mov
mov
xchg
cld
stos
nop
frstor
push
push
outsl
mov
or
push
push
out
add
pop
adcb
loop
outsb
lcall
lcall
aaa
scas
fs
mov
or
pop
loop
sub
xor
movl
mov
es
xor
mov
jl
pop
cltd
adc
sub
mov
call
mov
int
xor
xchg
mov
inc
int
jle
int3
pop
adc
addb
in
nop
loopne
xor
rclb
into
ret
mov
and
ljmp
hlt
addr16
mov
js
pop
xchg
jae
adc
jge
ror
dec
insl
adc
icebp
out
xchg
lcall
jl
cmp
xchg
popa
jns
inc
lds
push
mov
dec
push
cwtl
bound
fwait
mov
mov
ret
sub
push
cmp
mov
rorb
jl
fisttpll
pusha
sub
cmpsl
pusha
cli
jb
lcall
int3
sub
int3
enter
into
mov
mov
mov
jbe
mov
mov
arpl
inc
daa
sub
dec
sbb
cmp
mov
pop
xchg
lds
fdivrs
in
cs
lea
lret
out
outsl
xor
in
out
add
cmp
or
and
push
repz
xor
dec
cmp
add
js
faddp
jp
imul
sub
jne
stc
cmp
dec
pushf
cltd
mov
pop
fdivl
cli
dec
pushf
push
mov
adc
jae
push
in
lods
jno
sti
daa
cmpsl
mov
dec
jnp
or
fcompl
xchg
lretw
cld
add
cmp
outsb
sbb
mov
push
sbb
inc
cli
clc
mov
fimuls
dec
adc
pop
out
mov
inc
incb
int3
and
push
loop
push
frstor
lods
in
out
jae
cmpsb
lods
add
stos
xchg
adc
fcmovnu
pusha
out
sbb
sahf
insb
testb
lods
leave
stc
loop
addb
sbb
sub
jle
jp
hlt
fmul
cmpsb
xor
mov
iret
sbb
lea
sbb
push
orb
aas
cmp
inc
out
in
push
lods
shl
add
jle
sbb
aaa
jl
push
xor
das
mov
stos
scas
jnp
cmc
in
test
int
mov
call
jge
jne
andl
xor
xchg
jmp
or
scas
mov
jb
pop
or
into
lret
in
hlt
push
insl
push
lahf
inc
test
je
repnz
mov
shrb
dec
push
jb
lahf
fwait
dec
mov
cmp
pusha
jle
mov
or
shl
pop
cmp
es
int3
sar
icebp
call
cltd
adc
call
in
mov
cmp
stos
mov
adc
pop
and
add
mov
pushf
or
push
or
pop
pop
std
popl
cmp
adc
sbb
insb
cmp
adc
jp
out
rcll
jb
outsb
jb
adc
notb
mov
loopne
mov
jge
mov
and
flds
jae
inc
pop
xchg
ud0
insl
andl
mov
arpl
fwait
outsl
cltd
xchg
mov
mov
jns
xor
sub
jle
movsb
incb
mov
sub
std
inc
mov
inc
adc
sbb
jnp
xchg
mov
mov
aam
mov
cs
in
sti
repz
mov
add
ret
pop
sbb
imul
test
cmpsl
aam
xor
or
rcrl
dec
ljmp
nop
dec
mov
add
dec
mov
mov
mov
lods
test
outsb
fucomip
hlt
xchg
push
iret
lods
lods
enter
fcoml
push
aaa
stos
decl
rolb
lret
imul
sahf
cmpsb
cmp
xchg
test
jmp
arpl
call
mov
pop
jmp
cmp
data16
pop
repnz
fwait
pushf
pushf
fsub
mov
jae
cltd
mov
stos
pop
mov
push
adc
imul
test
adc
out
mov
cmp
pop
pop
add
dec
ficompl
xorb
sahf
fmull
mov
dec
ret
lcall
sub
sbb
cltd
fimuls
cltd
cmp
push
cld
fmul
mov
lock
cld
aad
or
jb
arpl
bound
sbb
sub
call
xchg
xor
sbb
or
std
xor
call
dec
cmp
inc
les
lcall
and
cmp
add
add
lock
push
adc
xor
out
adc
rolb
cmp
out
scas
imul
pop
add
xor
test
lods
push
adc
inc
data16
arpl
cmp
lods
xchg
fs
mov
pushf
data16
fldcw
push
mov
add
fs
addr16
ss
mov
out
in
fdivrs
xchg
and
mov
pop
sub
jns
je
pop
dec
or
stos
jg
xchg
cli
and
cld
ljmp
xor
sbb
lcall
sub
dec
pop
notb
pop
jmp
inc
mov
or
aad
in
repnz
add
adc
xor
mov
enter
push
cmp
popa
iret
push
stos
inc
cli
dec
lret
pop
int
adc
or
push
fcoml
inc
int3
sub
cmp
aad
fistpl
pop
cmc
scas
sbb
shlb
imul
mov
cltd
lods
mov
je
sbb
cmp
popf
dec
rcrl
mov
mov
decl
lea
mov
adc
sbb
loope
vaddsubpd
fs
and
fsubrp
aaa
xchg
psubsb
or
jmp
mov
aam
scas
xor
xchg
and
add
shrl
dec
pushf
push
lret
inc
inc
psllq
test
pop
stc
mov
mov
roll
pop
out
push
scas
lret
mov
or
fdivl
cld
ja
or
mov
cmpsb
aam
icebp
lahf
aas
pop
lock
and
out
xor
shrb
dec
loop
push
fdivs
dec
stc
and
aam
push
int3
mov
and
push
cwtl
js
outsl
gs
in
push
outsb
mov
ffreep
dec
dec
push
mov
xor
mov
or
dec
and
clc
hlt
sbb
push
aad
repz
xchg
divps
sarb
inc
sub
fstl
out
jns
je
dec
into
jle
in
arpl
push
xor
mov
xchg
int3
or
mov
int
ss
mov
sub
scas
cltd
or
mov
fisubrl
mov
outsl
cmp
add
mov
mov
xchg
mov
insl
xchg
jg
jge
jmp
xchg
mov
jmp
into
pushf
test
cmp
sub
mov
inc
cltd
cmp
mov
pop
aaa
jmp
aad
jg
dec
fldcw
add
data16
adc
addr16
scas
subl
fs
xchg
shrl
xor
jb
out
shll
test
cmp
and
outsl
call
mov
push
push
inc
adc
cltd
sub
push
xchg
jle
mov
arpl
imulb
or
inc
rcll
call
in
inc
test
cmp
fdivrs
pop
sar
int3
xchg
jbe
and
std
or
gs
cmp
leave
leave
mov
jns
pop
xchg
xchg
dec
jne
in
pusha
fildl
in
cld
in
xorl
std
inc
mov
add
insb
adc
lds
test
and
sub
cmp
addb
fadd
push
mov
cmp
or
insl
popaw
jg
push
ja
test
mov
inc
out
inc
push
xchg
int3
lods
mov
mov
cld
fnstsw
popl
cmc
test
rcl
insl
mov
pop
ret
mov
jb
aam
dec
mov
mov
cmp
pushf
mov
xchg
shrb
cltd
jbe
pop
shll
and
cmp
outsl
pop
fbstp
addr16
outsb
or
mov
aam
sbb
out
cmp
push
in
pusha
xor
bound
dec
sti
sub
outsl
jae
cmp
mov
loope
mov
sub
out
out
dec
sub
mov
dec
lods
inc
inc
loopne
in
or
inc
cmp
cwtl
cmp
mov
ret
push
mov
inc
and
rcr
xor
gs
cmp
daa
add
sub
mov
popf
mov
xchg
rcr
push
push
scas
stc
dec
inc
jnp
adc
in
jnp
pusha
sub
imul
and
sbb
push
jnp
dec
mov
int
int3
sbb
fldcw
pop
aas
dec
mov
dec
sub
cld
cmp
sti
out
sbbb
xor
sbbb
aam
adc
int3
fnstcw
adc
mov
inc
in
lret
pusha
adc
rcll
inc
mov
clc
xchg
dec
fwait
scas
mov
adc
cltd
xchg
iret
loopne
ds
imul
ficoms
sub
dec
sahf
loope
jo
inc
xchg
andl
adc
and
cli
xor
xchg
enter
pop
push
pushf
hlt
pop
mov
lahf
ja
jb
jo
cltd
lahf
outsb
dec
jb
lods
xchg
rcl
jno
out
daa
xchg
out
cli
in
pushf
fistps
pop
lock
sub
test
loope
iret
out
mulb
sbbl
push
xchg
fs
repnz
popa
into
adcb
jbe
hlt
or
test
icebp
fwait
lods
mov
pop
push
rclb
push
mov
cltd
jmp
mul
cmp
rcpps
dec
adc
sbb
fwait
adc
rcrb
mov
aaa
pop
cwtl
scas
push
fimull
or
xor
add
pop
js
ret
cmp
xchg
push
sub
int
sbb
cmp
jne
xchg
adc
cmc
call
cmpsb
mov
push
sub
inc
dec
mov
stos
iret
xor
outsb
mov
mov
andl
xor
std
hlt
pop
jno
add
cmp
outsl
jo
and
or
pop
and
pop
imul
pushf
jmp
push
iret
add
pusha
dec
sub
or
pop
mov
jb
push
lahf
out
push
inc
or
xor
sub
inc
push
addr16
mov
pop
and
jp,pt
mov
outsb
mov
mov
jnp
push
movsb
cwtl
or
mov
jp
xchg
and
decb
das
xchg
rcrb
xchg
push
jg
int
test
pushf
ds
inc
out
lods
push
push
push
cld
add
mov
stos
lods
sahf
jg
lcall
xchg
sub
scas
jb
shr
sub
mov
movsl
cmp
les
ja
daa
adc
std
test
gs
in
xor
sbb
jns
adc
cmpsb
aaa
dec
or
xchg
jle
jmp
lods
jle
add
xchg
and
loopne
cmp
sbb
cmp
add
xor
jge
jne
popl
mov
xor
sbb
lods
mov
call
int3
dec
mov
pop
jbe
add
and
and
jp
or
cmpsb
push
stos
movsl
dec
out
ljmp
mov
scas
adc
lcallw
mov
cmp
jns
mov
inc
dec
sti
pop
cli
sub
lods
in
push
test
jecxz
push
in
rcr
inc
pop
adc
jb
imul
je
loope
pop
push
andb
xchg
pop
push
test
xor
mov
mov
ja
or
xor
ja
jmp
lea
xchg
push
mov
ljmp
mov
push
cld
push
or
and
push
in
pushl
ds
or
cmp
call
ss
shlb
mov
mov
shll
inc
fists
ss
mov
add
out
push
ss
stos
mov
sub
popa
fstps
xchg
rol
adc
movsl
pop
in
xor
cmpsb
sbb
sbb
lea
mov
push
popa
mov
lcall
adc
punpckldq
sub
dec
ds
ljmp
xchg
push
xchg
pop
mov
out
out
pop
push
mov
mov
push
push
lods
cmp
pop
lds
sub
sbb
cmp
pop
loope
dec
cmp
mov
lret
hlt
loopne
jnp
xor
aas
adc
ret
pop
arpl
aad
ret
adc
scas
jbe
push
inc
dec
in
and
sub
fnstsw
popa
testl
das
shrl
stc
aam
fiadds
xor
add
and
pop
mov
rclb
scas
nop
cmp
and
adc
add
mov
dec
iret
out
mov
inc
inc
sub
xor
xchg
inc
mov
mov
push
xchg
ja
ja
imul
ja
arpl
pop
dec
loop
xchg
push
xchg
fistl
or
bnd
jnp
in
inc
xchg
pop
andl
dec
icebp
push
fldt
scas
lcall
je
sti
nop
jle
inc
popf
repz
sub
cli
test
push
rcrl
ret
test
xor
enter
test
imul
pop
nop
cld
stos
jne
pop
scas
lahf
pop
cli
dec
imul
shld
mov
sbb
add
sub
mov
sub
cmp
sbb
popa
negb
lods
and
test
mov
stc
xchg
push
into
jb
lods
and
or
push
insb
jne
or
inc
push
out
sub
jbe
iret
jbe
mov
hlt
outsl
dec
jecxz,pt
jnp
bound
int
ljmp
call
xchg
cltd
push
stos
ja
stos
and
dec
stos
fistps
nop
fdivrp
xchg
or
or
mov
das
pop
pop
inc
sub
es
scas
mov
imul
fiadds
rolb
and
dec
or
test
mov
repnz
xchg
sub
hlt
andl
clc
cli
mov
fidivrl
pop
jmp
pushf
repz
push
xchg
adc
gs
or
xchg
xchg
xchg
jb
dec
test
mov
add
and
frstor
sbb
pop
aam
lret
mov
lods
fucomi
inc
in
xchg
fsubs
mov
cltd
sbb
stc
mov
mov
addr16
mov
xor
shl
mov
or
into
aas
ljmp
mov
sbb
lods
mov
jbe,pt
jge
sti
add
lret
and
cmpsb
es
jbe
fcoms
add
les
imul
jl
inc
aam
pop
mov
mov
sub
xchg
out
cs
dec
cld
cs
push
repnz
jecxz
or
mov
xchg
rol
lock
jecxz
sub
mov
bound
out
fcmove
mov
mov
sub
pop
movsb
jle
push
cmp
leave
inc
rcl
loop
inc
cli
shlb
iret
sbb
pop
lret
cmp
fyl2x
and
dec
xchg
nop
scas
add
adc
and
idivb
xchg
add
pop
mov
cmc
cmovs
into
popf
and
loopne
imul
and
addr16
sbb
dec
sbb
bound
mov
mov
lahf
int3
hlt
jge
add
test
mov
pop
mov
and
subl
push
push
inc
jns
fdivrl
xchg
loopne
cmp
test
test
cltd
inc
das
dec
mov
adcb
cmp
cmp
push
mov
jp
mov
scas
daa
xchg
add
mov
hlt
fildl
sar
or
inc
add
lea
dec
lods
and
mov
pop
rcll
iret
and
repnz
adc
mov
push
mov
bnd
cld
mov
mov
jmp
cs
xchg
pushf
les
dec
xchg
xchg
int3
in
jne
add
push
sarl
imul
outsb
fcoml
call
cwtl
push
jg
lret
cmp
test
daa
ljmp
dec
and
icebp
lods
outsl
mov
cmp
int3
test
lds
jge
popl
fwait
ret
push
jns
addr16
and
imul
mov
pop
and
sbb
cmpsb
sbbb
adc
into
lods
push
cli
jecxz
push
lcall
insb
cmpsl
sub
pop
sbb
in
mov
scas
in
xchg
pop
aam
in
out
lods
jne
xchg
popw
xchg
push
or
fcmovnb
test
cmp
pop
jge
push
movsl
outsl
adc
jnp
jb
and
push
add
stos
sub
outsb
lock
dec
test
inc
cmpsb
push
test
pop
adc
clc
push
out
pop
cld
frstor
mov
pushf
out
sbb
sub
fimull
sub
xor
and
movsb
mov
test
xor
pop
in
push
add
call
rcr
popl
inc
mov
fs
xchg
cmpsb
mov
mov
cmp
xor
or
aam
pop
mov
cs
outsb
xor
cmp
mov
dec
aad
out
repnz
push
les
popf
push
repnz
and
outsl
int3
daa
negl
repnz
xor
repz
adc
dec
jle
ljmp
sahf
testl
out
pop
sahf
movb
in
out
call
pop
jge
or
incl
add
dec
mov
mov
mov
frstor
fwait
adc
fldl
sub
arpl
test
ds
push
or
mov
push
cli
and
mov
mov
dec
mul
ja
pop
jo,pt
rcll
xor
xchg
mov
push
pop
fs
imul
fmul
clc
mov
shll
popf
adc
xchg
hlt
inc
pusha
test
sub
clc
pop
addl
notb
pop
stc
adc
sbb
fs
mov
mov
sbb
pop
push
fcoml
jecxz
xlat
mov
sahf
mov
push
add
jb
dec
setnp
add
or
int
iret
aas
mov
jle
test
push
xchg
jmp
push
pop
aad
sbb
cmp
ss
fcom
pop
push
sbb
fsubrp
push
mov
mov
sbb
mov
push
xor
sti
outsb
cwtl
lcall
mov
fistpl
loopne,pn
insb
mov
cmp
add
pushf
mov
push
push
sub
out
inc
js
fsubrs
xchg
pop
leave
das
mov
lret
pop
sahf
movsb
mov
call
inc
xor
lret
int3
sahf
ja
hlt
hlt
sbb
cmp
ss
inc
mov
int3
adc
xor
lret
test
iret
data16
shrb
loop
repnz
and
push
xlat
pop
pop
das
add
inc
xchg
cltd
outsl
pop
xor
ja
call
out
into
cmp
pop
into
mov
stos
leave
cmp
mov
rcl
adc
scas
mov
cltd
es
mov
loope
and
repz
mov
jne
icebp
jg
mov
add
cmp
pushf
pop
xchg
sub
sbb
setns
int
push
div
outsl
or
int3
movsl
mov
sbb
lret
outsl
adcb
insb
jno
loope
cld
adc
xor
adc
in
add
pop
push
xor
pop
or
sub
mov
popa
out
stos
sbb
int
push
mov
inc
xchg
or
xlat
dec
mov
pop
das
lods
cs
mov
dec
mul
dec
popf
andl
ja
add
adc
jmp
cmpsb
inc
daa
sahf
popf
mov
scas
jge
into
mov
scas
and
xchg
add
dec
dec
add
fidivrl
adc
fdivrs
push
imul
js
xor
jmp
scas
mov
mov
pop
rcr
repnz
ja
cmp
and
or
or
in
or
into
idivb
shl
mov
sub
cmpsb
mov
test
jge
pushf
adc
stc
cmp
pop
or
push
sbb
xchg
xchg
jne
and
cmp
scas
test
imul
and
sbb
iret
inc
ret
cmpsb
sub
movsl
push
jbe
sub
dec
rcll
addr16
cmpl
filds
fs
fisttpl
jb
stos
push
scas
mov
in
and
push
iret
clc
lahf
cltd
sbb
mov
mov
dec
jo
sbb
shll
imul
out
inc
pop
adc
inc
lret
xchg
push
les
sub
std
jmp
sub
mov
cwtl
mov
leave
push
mov
aad
inc
lahf
insl
popf
in
fnstcw
cmp
and
sbb
mov
or
ja
sbb
jns
shll
add
sub
jle
mov
cmpsb
inc
aas
sub
or
aaa
lea
jmp
popa
sbb
push
sub
xchg
sub
dec
and
mov
mov
rolb
and
inc
fnsave
push
imul
pop
out
jbe
push
arpl
sbb
nop
loop
dec
popf
add
shl
ffreep
aaa
jmp
inc
push
jne
or
inc
cli
dec
std
stos
repz
pop
cmpsl
xlat
les
cli
aad
cmp
int
ja
ja
mov
loop
adc
add
xchg
test
jae
xchg
cmpsl
dec
insl
push
stos
fimull
fcomps
mov
je
fwait
sbb
pop
xchg
sub
int3
enter
dec
sub
popa
or
das
cmpsl
mov
push
jge
xchg
dec
ffreep
iret
add
clc
and
mov
aad
sub
into
rorl
movsb
inc
fdiv
cld
add
xchg
filds
mov
mov
adc
sub
mov
lea
and
mov
sbb
jb
dec
and
add
add
in
lcall
pop
jne
jnp,pt
shll
test
dec
insb
pop
sub
mov
lds
shlb
xor
pop
and
sbb
push
sbb
imul
mov
lcall
aam
mov
int
cmp
mov
shr
lret
clc
aaa
aas
inc
xor
xchg
out
adc
mov
xor
adc
cmpsb
sbbb
mov
add
loopne
mov
push
push
pushf
hlt
and
xchg
or
shlb
jb
sbb
arpl
xor
loop
xchg
and
mov
cmp
xlat
cmp
bnd
lds
dec
scas
adc
sti
mull
push
out
cwtl
rclb
jne
xchg
sbb
scas
ret
in
out
dec
sub
cmp
daa
push
pop
fistl
hlt
dec
xor
xor
out
test
lret
out
jb
and
movsb
dec
movsb
outsb
xlat
repnz
add
rcll
js
dec
mov
arpl
mov
mov
inc
xchg
test
add
stos
add
stos
arpl
mov
dec
pop
ljmp
jne
push
iret
xor
or
pop
loope
sti
or
inc
out
leave
jp
sub
xchg
popa
push
mov
ffree
jle
and
mov
imul
mulb
sub
mov
jno
fisubs
in
lods
lret
mov
fpatan
push
push
call
int
jb
clc
aaa
enter
in
cmpsb
pop
pop
in
mov
sbb
enter
jnp
jae
push
stos
stos
mov
enter
push
adc
fisttpl
cli
filds
in
lea
out
sbb
sbbb
in
jae
add
pushf
mov
mov
jmp
push
das
xchg
and
je
dec
out
jg
jne
fwait
jne
add
out
xchg
imul
cmp
inc
out
adc
xchg
sub
loope
adcb
pop
cmpsb
and
pop
add
sbb
add
dec
loope
sub
jno
pop
adc
imul
sub
sub
repnz
mov
push
adc
mov
pop
xchg
push
sub
push
mov
xchg
movsb
loop
jecxz
inc
xchg
sahf
in
jg
xor
dec
ljmp
or
lret
test
xchg
jp
lahf
or
movsl
popa
ror
adc
mov
icebp
lock
stos
mov
loop
mov
add
pushf
or
movsb
xchg
lret
test
sahf
adc
dec
adc
cld
xor
js
int
mov
jns
bound
int
movsl
jge
aas
cmp
dec
out
cmp
aam
sub
push
in
fmull
ret
mov
outsl
stc
dec
mov
adc
jmp
rol
into
idivl
or
xchg
push
sub
inc
mov
stc
andl
push
fisubl
imul
test
sarb
xor
sub
or
mov
sbbl
mov
add
pop
xchg
fsubl
pop
repz
mov
cmpsl
dec
shr
xor
xor
aam
or
pop
das
jns
lds
stos
shrl
jno
mov
cltd
in
mov
mov
das
push
inc
popl
in
dec
sbb
adc
scas
xchg
pop
pusha
pushl
jl
xorb
scas
push
sub
test
lcall
orb
je
mov
adc
stc
cmpb
pushf
inc
icebp
subb
les
sbb
mov
sbb
idivl
xor
cltd
push
fldt
leave
push
icebp
stc
rcl
out
cltd
clc
mov
or
push
xor
loope,pn
cmpsb
fs
xchg
cli
xchg
pop
insb
xchg
mov
mov
daa
and
and
clc
inc
ret
rorl
ds
les
test
iret
ret
mov
pop
pop
jmp
mov
into
push
test
mov
push
shll
clc
sbb
mov
adc
sahf
dec
fbld
aaa
out
sub
pop
jp
adc
pop
ret
out
sub
aam
mov
aas
mov
sbb
jmp
sub
cmpl
jne
push
mov
lds
add
negl
fiadds
scas
ljmp
repz
popf
add
sbb
xor
ret
aad
mov
std
xor
lock
pop
inc
ljmp
loop
jb,pt
inc
xor
mov
dec
dec
icebp
cmpsl
imul
add
sbb
xor
pop
rcrl
push
clc
mov
ficomps
and
popa
out
cmc
add
ds
scas
shrl
mov
push
les
jbe
pop
bound
test
jecxz
and
jecxz
dec
icebp
in
or
js
fstl
out
mov
mov
int3
inc
std
inc
dec
xchg
jp
pop
xchg
dec
mov
pop
je
xor
push
jnp
loope
push
xchg
in
shlb
add
subl
xchg
shrl
fs
test
jg
iret
test
xchg
sub
xor
xor
std
dec
add
stos
test
movsb
mov
addb
lahf
add
call
popa
sub
fisubrl
call
xchg
cmpl
es
lret
cli
int
je
lods
leave
and
dec
insb
mov
cmp
xor
xor
and
lret
gs
adc
dec
das
out
push
lahf
arpl
cmp
inc
cmp
out
pop
rcrl
and
iret
jae
movsb
jb
cld
lret
jns
pop
or
mov
in
gs
inc
test
loop
stc
fmull
jae
test
pop
add
imul
jns
sub
fdivr
xchg
cmp
and
mov
into
stos
lods
jge
jmp
sbb
pop
add
xor
outsl
pop
sub
cmp
loop
lahf
in
fmull
enter
jne
fdivr
push
or
aam
xchg
push
xchg
dec
cmp
out
push
push
movsl
xchg
fs
test
lds
dec
popf
mov
flds
cmc
jge
gs
jge
pop
jecxz
pop
dec
xchg
cmp
sub
cmp
add
dec
test
jns
inc
outsl
shl
or
or
mov
mov
mov
inc
pushf
mov
inc
fs
loop
mov
jbe
dec
clc
sti
fiaddl
es
lret
or
mov
cmpsl
mov
test
mov
mov
and
scas
pop
xor
sub
lcall
sar
mov
and
adc
push
mov
mov
fld
rclb
add
ljmp
mov
pmulhuw
inc
adc
cmp
test
cmp
iret
and
and
inc
shr
jnp
pop
xchg
sub
dec
test
xor
loope
pop
sbb
jge
and
lods
mov
call
lods
dec
and
and
mov
aaa
pop
js
cmp
mov
aam
inc
pop
sti
push
rcrl
jecxz
mov
roll
mov
pop
scas
dec
mov
lods
ljmp
inc
fimull
jl,pt
clc
hlt
jmp
mov
dec
stos
xor
mov
sub
enter
mov
daa
mov
adc
test
push
rcll
stos
stos
mov
inc
xchg
stos
es
mov
cmpsl
scas
rcll
and
rcr
stos
xor
inc
cltd
add
cmp
in
out
shrl
xor
lock
mov
gs
js
pop
sbb
je
cmp
aaa
jmp
mov
shl
shrl
mov
orl
dec
out
lods
lret
fnstsw
nop
dec
insb
popa
mov
and
inc
aam
aas
out
pusha
jno
push
idivb
inc
outsl
add
mov
pusha
pusha
xor
pop
pop
cmc
inc
test
mov
jae
push
add
dec
inc
cmp
mov
adc
stos
adc
das
cld
mov
mov
insb
sbb
add
sub
iret
add
or
pop
outsl
lods
insb
and
test
xor
pop
jg
mov
aad
inc
iret
hlt
clc
pop
sub
stos
add
loopne
sbbl
stos
cmp
rorl
mov
js
add
adc
pop
sub
mov
fldenv
xchg
mov
and
mov
lret
dec
test
stc
int3
adc
sub
or
mov
dec
rcrl
adcb
stos
data16
adc
inc
dec
jae
cld
imul
mov
scas
push
insb
cs
stc
pop
adc
in
push
pop
loope
push
imul
lret
mov
add
sbb
jo
std
jae
ret
xchg
loopne
mov
jae
mov
dec
fxch
scas
fidivs
loopne
lds
or
loopne
inc
lahf
push
xor
sbb
pop
jns
ljmp
das
ss
enter
xor
arpl
sbb
je
push
es
clts
sbb
rorb
imul
mov
popf
xor
lcall
aas
das
popf
inc
mov
jg
test
xor
jns
jecxz
cld
pop
jne
test
push
inc
cmp
adcl
data16
cmp
pop
jmp
inc
call
insl
fs
cmp
out
inc
and
dec
decb
push
dec
sub
cmp
push
lcall
out
mov
int
push
ljmp
je
lret
cld
xorl
das
cmc
mov
mov
push
ftst
xchg
test
adc
es
lods
adc
scas
cmp
inc
out
andb
in
dec
adc
add
in
sbb
inc
xlat
cmp
push
jmp
mov
dec
push
dec
rol
out
inc
pop
jl
cltd
out
sub
add
scas
js
cmp
cmp
fcomps
xchg
stos
cltd
test
jae
push
cmp
rol
sbb
lret
xchg
cmp
jecxz
sbb
sbb
mov
pop
pop
mov
cmpsb
jecxz
cltd
ljmp
mov
std
pop
adc
shl
xchg
out
jo
jno
xchg
dec
sbb
cli
dec
or
ljmp
inc
mov
add
pop
push
lfs
mov
xor
and
fcoml
sti
sbb
jmp
fisubl
mov
repz
sub
mov
sarl
dec
jnp
and
cmpsb
subb
insl
push
sub
jbe
div
cld
mov
fs
mov
push
mov
movsb
add
addb
add
out
into
insb
xchg
sub
call
sub
sub
jnp
pop
fsubrs
inc
push
scas
xor
sti
roll
addl
test
stos
xchg
jb
rcll
lods
push
jb
jmp
push
fldenv
add
cltd
cmp
mov
pusha
add
loop
daa
ljmp
or
push
sahf
pop
mov
jnp
and
fucomi
mov
lahf
inc
mov
xchg
or
test
jno
push
xchg
pusha
pop
out
sub
addr16
loope
je
shlb
cwtl
push
in
fnstsw
mov
push
mov
ds
pushfw
cmc
dec
xor
negl
fisubs
mov
mov
pop
push
cli
pop
ficomps
xor
das
inc
add
push
mov
std
or
dec
in
xlat
imul
and
adc
clc
xor
or
dec
sbb
loopne
push
aas
xorl
lea
sbb
in
in
out
push
cmpl
jbe
xchg
fdivs
pop
lock
adc
test
or
xor
pusha
xor
aad
aam
insb
fstpt
pop
shlb
icebp
stos
mov
sub
arpl
add
sbb
push
pop
addl
adcb
arpl
js
movsb
loopne
mov
pop
lock
xor
jmp
and
ficoms
jns
cmp
iret
pop
or
sub
enter
or
daa
xor
xchg
pop
mov
movsl
stos
test
ret
jmp
stos
pop
mov
out
adc
sbb
sbb
push
inc
js
dec
call
sbb
push
lea
xchg
leave
xchg
and
dec
sarb
lcall
or
outsl
mov
out
test
insl
callw
je
inc
add
repnz
outsl
jae
mov
movsl
fs
and
leave
jb
mov
jle
in
outsl
cmc
xor
je
sarb
inc
sti
rorl
jg
add
push
mov
enter
push
or
iret
fsts
shr
rcrb
das
and
jp
es
out
inc
subl
adc
fidivs
xor
cmp
mov
sahf
inc
mov
adc
ds
nop
mov
fdivrl
push
xchg
ret
sti
ds
jmp
loop
int
bound
fisttps
gs
xchg
push
pop
aad
xor
mov
mov
adc
lods
or
add
jne
in
inc
mov
cmp
daa
or
ds
xchg
in
subb
shll
xchg
jo
push
test
rorl
stos
mov
push
loop
pop
or
jae
xor
es
mov
mov
adcb
sub
dec
es
sub
fimull
testl
mov
inc
mov
and
and
jne
push
push
loop
lods
movsl
ljmp
das
lods
std
inc
arpl
repz
adc
sub
scas
adc
jp
pop
into
test
sub
mov
loope
loop
mov
or
lahf
mov
aas
test
mov
js
adc
pop
dec
sbb
outsl
iret
fiaddl
mov
lock
outsl
or
cltd
mov
inc
mov
mov
stc
aad
notl
or
cmp
cmc
mov
sbb
int
test
jb
sub
popa
xchg
push
ss
add
push
or
fwait
pop
push
pop
push
sbb
push
aaa
pushf
pop
and
xor
cwtl
addb
dec
insl
cmc
xor
movsb
mov
cld
xchg
clc
dec
sbb
cld
pop
cs
fmull
sub
sbbl
jmp
out
daa
mov
and
xor
insb
mov
mov
mov
into
test
and
push
push
insl
fdivs
testl
std
or
inc
sarl
sbb
inc
dec
push
adc
push
xchg
mov
xchg
mov
not
popa
pop
cmp
pop
mov
add
mov
push
xor
mov
clc
mov
mov
aam
dec
jae
rolb
rcrb
xchg
les
imul
sub
subb
out
xchg
pop
sbb
mov
cmpsl
call
imul
jno
imul
ds
call
ljmp
outsl
sbbb
cld
stc
sar
lret
pusha
cmp
mov
xor
int
dec
mov
loopne
and
inc
lahf
push
xchg
sub
jle
dec
mov
mov
push
lock
and
dec
sub
jne
int
sub
xchg
test
mull
fildl
cs
pop
lret
jb
or
andl
adc
daa
mov
and
addl
push
push
cmpsl
call
stos
push
fs
rol
mov
cmc
jnp
or
mov
mov
adc
stos
out
cmpsl
and
leave
push
fstpl
stc
mov
pop
scas
je
push
or
imul
lods
xor
cmpsl
inc
and
cld
fmull
jns
icebp
adc
test
add
sub
sbb
lahf
popa
cmc
in
data16
test
xor
add
sbb
loope
push
test
inc
pop
push
mov
aaa
or
dec
adc
jb
repz
out
jmp
das
test
push
sbb
jns
sub
sbb
inc
jg
out
shrl
xchg
popa
jmp
sti
rcr
pop
pop
xchg
and
rol
pop
sub
pusha
xchg
leave
adc
sub
cmpsl
in
add
mov
add
icebp
xchg
stc
out
adc
ljmp
adc
inc
loope
xor
dec
aam
lds
in
jmp
rcr
pop
sub
and
lock
fcoms
add
dec
lea
ret
push
dec
inc
inc
imull
in
pop
mov
mov
pop
cmp
inc
mov
ss
inc
cli
outsb
lock
mov
add
xchg
push
aam
in
or
jmp
dec
lods
call
and
inc
into
cmp
cmp
ror
sbb
push
or
out
rolb
adc
mov
adc
popf
imul
adc
jmp
insl
mov
shrl
mov
xchg
cmp
jp
inc
add
stos
xor
dec
pop
adc
adc
mov
cmp
aaa
mov
push
or
test
sub
fcoms
fsubs
jle
std
push
jnp
inc
mov
dec
cmc
in
lret
je
jmp
div
insb
push
xor
adc
and
mov
ret
xchg
nop
sbb
push
sub
dec
lcall
scas
jbe
lea
and
xorb
push
pop
cltd
stos
mov
xchg
in
movsb
or
pop
push
inc
pop
repnz
cmp
jne
sub
test
lods
mov
mov
dec
test
adcl
push
cld
xchg
mov
mov
mov
sub
sub
xchg
mov
pop
lahf
outsb
mov
xchg
xlat
or
adc
pcmpeqw
xchg
outsl
cmp
outsl
dec
push
insb
test
out
push
sbbb
repz
les
push
xor
out
lock
pusha
jl
mov
jecxz
scas
pop
xlat
dec
mov
dec
sub
mov
cli
sub
push
rorb
sbb
ret
stc
rcll
mov
mov
lret
int3
push
adc
lret
push
sub
and
mov
jp
push
mov
add
mov
jmp
fdivrl
mov
clc
pop
mov
js
popf
jp
push
inc
fdivrs
dec
mov
pusha
push
or
fistps
xchg
es
sbb
cmp
and
pop
fsubrs
mov
fdivrs
cmc
outsb
leave
mov
adc
fs
ficomps
add
movsl
insl
xor
add
pop
jge
ret
pop
stos
mov
xor
data16
lahf
inc
mov
enter
mov
mov
jnp
mov
push
and
xchg
stos
mov
cld
insl
jae
sub
add
add
insb
fldt
pop
repz
mov
pop
divb
sbb
adc
mov
or
add
jns
sbb
fwait
inc
je
iret
sbb
movsb
sahf
lods
fdivrp
int3
push
pop
or
sub
xlat
divb
fimull
mov
adc
repnz
sub
mov
or
fucom
sbb
xor
pusha
sbb
daa
cli
pop
dec
jnp
pop
xchg
jo
pop
push
push
fcomps
or
pop
lods
mov
stos
xchg
xor
ljmp
rolb
ret
xor
dec
cld
pop
mov
xchg
sahf
adc
sbb
jne
popf
mov
scas
nop
pop
xor
outsb
outsl
cmc
jmp
mov
cmpsl
cmc
or
mov
enter
push
xchg
cs
lahf
enter
das
mov
adc
push
rcll
and
jno
pop
call
shlb
inc
sbb
add
test
push
rcr
add
in
shrl
mov
outsl
push
or
add
mov
push
push
sub
jmp
inc
add
mov
testl
push
dec
pop
andb
mov
cwtl
mov
cld
push
add
mov
lock
dec
pop
stos
stc
sbb
push
test
repnz
mov
insb
decb
dec
inc
inc
inc
lods
jbe
fs
mov
aaa
jecxz
cld
fs
lret
xor
mov
sub
adc
lahf
sti
mov
xor
rorb
loopne
mov
push
or
ja
xchg
push
leave
cmpsl
mov
jp
mov
jns
sti
pop
cmp
adc
out
inc
cmpsl
orb
stc
ljmp
cmp
clc
xlat
xor
inc
ljmp
push
push
pop
jae
cmp
ds
enter
mov
arpl
xor
xor
nop
in
jno
dec
mov
pushf
test
aas
push
dec
les
xchg
test
xchg
jns
fsubl
sbb
sub
add
cmp
neg
jnp
aad
hlt
add
insb
shl
andl
sub
rolb
out
cmp
aas
pop
or
push
lock
aaa
inc
test
cli
filds
inc
mov
pop
push
dec
cltd
pop
mov
inc
push
gs
jne
enter
loope
push
aam
sub
xor
pop
dec
or
mov
and
in
jg
push
inc
loope
iret
xchg
push
push
jge
cs
xchg
jg
enter
jae
test
xchg
pop
std
cmp
daa
cli
jb
aas
xor
imul
bnd
sahf
daa
dec
jb
aam
out
pop
ffree
inc
addr16
movlps
pushf
push
push
lds
xor
push
mov
dec
pop
pop
fidivl
xchg
inc
xchg
call
jge
test
pop
cmpsb
inc
push
bound
stos
mov
sahf
xchg
lea
lock
add
stc
daa
or
outsb
pop
sahf
jmp
push
mov
push
xor
movsb
stc
xchg
sbb
fdivrs
mov
out
lahf
ret
inc
test
jnp
mov
pop
sbb
lcall
add
popa
lods
jp
lock
jnp
jb
fistpl
test
cmp
xchg
xchg
xchg
or
fnstenv
lock
mov
iret
mov
inc
jle
mov
lods
mov
call
xor
mov
mov
aam
jl
add
xchg
xchg
mov
cmp
add
sub
orl
push
ja
pop
cmp
popf
xor
mov
pop
mov
jbe
mov
stos
push
inc
sbb
cmp
sbbl
pushf
ret
or
data16
mov
dec
out
ds
push
cmp
jp
fldenv
xor
mov
inc
scas
xchg
add
jge
fnstcw
jl
cmpl
adc
in
cmp
shll
cwtl
dec
dec
xchg
cs
cmp
mov
gs
mov
push
ss
push
cltd
mov
fsubrs
push
xchg
and
jb
sub
imul
orl
push
inc
fs
push
dec
push
cvtpi2ps
lock
iret
sub
in
mov
shll
xor
decb
fcoml
pop
or
sub
les
cmc
arpl
movsl
out
lcall
rcrl
sbb
mov
cmp
int3
stos
jb
adc
and
add
fiadds
clc
insb
xchg
data16
sub
dec
lcall
enter
pop
loop
pop
pavgb
lock
rcll
icebp
mov
inc
adc
mov
test
or
outsb
and
dec
rcll
cmp
sbb
add
mov
and
or
je
pushf
loop
mov
pop
xchg
jne
mov
add
sti
jg
insl
cmp
enter
cli
dec
xchg
int
into
sub
push
push
in
jo
insb
and
mov
movsl
and
jbe
mov
shlb
mov
push
enter
imul
xlat
inc
lods
mov
mov
pop
dec
and
sub
jb
enter
ss
in
mov
cmc
bound
repz
sub
adc
xchg
fbstp
lea
andb
gs
mov
mov
jno
sarl
add
inc
mov
inc
sbb
data16
inc
and
jb
dec
push
bound
cld
in
mov
insb
inc
sub
cmp
cmp
repnz
sub
mov
lcall
test
outsl
push
push
and
lret
aad
in
sbb
add
imul
aaa
leave
jp
sub
xor
rcrb
and
jmp
outsl
mov
sahf
mov
clc
mov
inc
adc
or
mov
add
mov
jb
sbb
sbb
outsb
or
mov
sub
loope
sub
cwtl
mov
pop
insl
ret
enter
mov
mov
cltd
push
ljmp
cmp
shr
leave
aaa
cmpsl
int
outsl
rcrb
daa
rorl
clc
sbb
xchg
orb
sbb
fwait
into
xchg
mov
inc
and
ljmp
repz
cwtl
adc
pop
mov
adc
adc
or
jge
mov
jmp
mov
stos
xor
incl
loop
push
add
pop
or
pop
push
ss
ficompl
sub
into
push
mov
jae
test
stos
in
inc
pop
shr
dec
pushf
clc
mov
jl
mov
aam
xor
jbe
push
hlt
imulb
jge
xor
and
popf
fstps
inc
and
or
into
call
fwait
es
dec
fwait
dec
insb
mov
xchg
mov
gs
les
inc
adc
mov
push
mov
adc
shll
imul
lahf
push
push
rol
jg
xor
mov
in
in
push
cmp
jns
xor
mov
inc
pop
das
pop
pop
and
cmp
test
dec
or
xchg
sub
xor
sub
inc
dec
in
adc
xor
lahf
mov
scas
scas
cmpsb
in
mov
pop
negl
les
adc
push
dec
rol
pop
adc
test
cmp
inc
ret
loopne
cmpl
sub
sarl
test
popa
add
shll
or
jl
pusha
repz
mov
incb
sub
fsubl
dec
or
pop
mov
les
mov
out
and
cli
or
dec
int
dec
test
and
and
dec
and
hlt
std
mov
clc
sbb
ret
and
call
sub
lods
and
sub
xlat
push
rclb
jo
push
ja
inc
add
mov
pop
inc
imul
lcall
xorl
lahf
jle
movsb
or
inc
adc
mov
pop
sub
xchg
ss
push
into
jns
inc
mov
mov
xchg
adc
add
jl
rcll
fisttpl
cmp
pusha
and
dec
dec
sahf
loop
roll
pop
xchg
pop
add
dec
lock
loope
sbb
xor
int
add
js
push
lea
test
shll
jne
inc
ljmp
mov
icebp
outsb
imul
adcl
aad
sub
sub
xlat
xchg
pop
push
and
inc
mull
iret
jno
shll
negb
mov
cwtl
sarl
cld
or
lret
adc
fmuls
dec
in
push
inc
fucom
sbb
dec
test
in
xor
imul
test
adc
mov
mov
lea
dec
and
jmp
xchg
leave
cmp
mov
mov
ljmp
xchg
sbb
adc
bound
je
mov
scas
dec
mov
sbb
orb
pop
sbb
mov
gs
iret
mov
fmull
pop
in
push
cmp
dec
insl
hlt
push
int3
cld
lds
push
js
inc
cmpsb
pop
shll
sub
inc
insb
dec
fsub
test
dec
jl
in
mov
or
mov
sbbb
sarb
add
or
add
lds
rcl
mov
add
leave
jmp
mov
out
and
push
cmp
daa
test
jo
call
pop
mov
rclb
sti
adc
or
xlat
lret
test
lcall
add
dec
mov
sti
out
adc
scas
jmp
or
lock
cmp
je
call
aaa
mov
cld
pop
jb
insb
fiadds
je
pop
mov
xor
mov
mov
roll
mov
inc
shll
mov
push
rolb
adc
icebp
jbe
rclb
je
xchg
xor
loopne
cli
adc
mov
rcr
jo
xchg
call
sub
ficoms
cmp
inc
add
push
xchg
cltd
jp
xor
repz
push
jnp
mov
mov
sbb
clc
xlat
addb
daa
adc
pusha
lcall
adcb
neg
lods
sub
pop
mov
cvtpi2ps
cmpsb
push
cmp
dec
and
xor
sub
test
subb
cmpsb
and
inc
mov
test
gs
jl
sarl
inc
cmp
sub
push
adc
decb
cmp
adc
jp
dec
and
jp
repz
mov
push
mov
fnstcw
push
or
sub
into
mov
mov
add
pop
fisubrs
pop
lea
mov
lds
add
cmp
dec
mov
cld
lahf
push
cmc
xchg
and
addr16
jp
je
xchg
xchg
nop
jbe
ds
out
and
push
pop
mov
push
xor
sub
add
dec
clc
mov
jno
cmp
and
xchg
push
out
clc
cmp
jnp
gs
js
xchg
pop
jp
add
in
int3
mov
scas
fstpt
fcmovu
jg
xchg
pop
mov
push
mov
hlt
push
out
cmp
popa
pop
ljmp
jmp
sbb
jecxz
push
and
push
and
dec
insl
in
xchg
mov
scas
lods
pop
xchg
pop
popa
mov
movd
js
cltd
scas
sbb
dec
scas
pop
lcall
js
mov
inc
xchg
shrb
cmp
nop
xchg
add
in
push
mov
push
xlat
push
int3
xchg
sbb
stc
jno
mov
ljmp
lret
add
sub
fildl
jo
outsl
jecxz
stos
cmc
jl
sbb
or
xlat
xchg
xor
test
mov
add
mov
cmc
insl
cmpsb
scas
jno,pn
mov
mov
mov
mov
push
and
jo
sbb
xor
sub
push
sbb
adcl
sub
mov
xor
push
sahf
push
inc
lret
mov
sti
inc
inc
fimuls
sub
jle
cltd
ficoms
cltd
cwtl
test
andl
out
icebp
push
mov
xchg
mov
xorl
rorl
dec
cltd
jne
push
dec
jecxz
cmpsb
sti
xchg
xchg
mov
sbb
scas
iret
dec
push
sar
dec
mov
in
inc
ss
cltd
fmuls
sbb
lds
cwtl
xchg
cmpl
jae
inc
jbe
lcall
movsb
icebp
inc
ret
xor
pop
xor
rolb
outsl
xchg
add
fisubl
xchg
jnp
notb
scas
fsubl
jo
leave
stc
stos
loopne
push
mov
enter
cmp
adc
push
jp
cwtl
decb
sub
adc
jp
push
push
sub
inc
adc
push
jbe
ljmp
pop
int
cmpsl
enter
xor
js
subb
aaa
mov
mov
lea
out
and
xchg
hlt
jmp
pop
or
lods
loop
ret
sbb
lret
sbb
jno,pt
jecxz
dec
test
xlat
call
or
popf
nop
outsb
or
jecxz
add
inc
ja
stos
fldcw
movsb
les
insb
lcall
ja
cmpsb
mov
in
js
data16
fdivp
mov
aam
xor
outsl
pop
aaa
pop
sarl
test
icebp
cli
xor
push
mov
stc
iret
add
pop
insb
aam
dec
lret
arpl
repnz
lods
push
xchg
sbb
jge
outsl
test
ret
sbb
jl
xchg
mov
cltd
xlat
pop
outsl
or
lods
push
pushf
and
fistpll
repz
lock
mov
mov
and
dec
into
jge
test
mov
jecxz
xchg
fwait
push
bound
mov
push
jmp
movsb
xor
cmpsb
mov
jmp
inc
ja
jo
jmp
or
outsb
out
lahf
lahf
xor
test
fisubrl
rcrb
cmp
in
aaa
sbb
in
ja
pusha
je
das
dec
cmp
jmp
mov
aam
and
push
pop
mov
pop
adc
mov
mov
aaa
pop
je
repnz
dec
cmp
stos
mov
xlat
insl
popa
mov
xchg
stos
sub
and
xor
inc
lahf
addr16
js
xchg
pushf
shrb
xor
push
xor
push
sub
lods
xor
inc
ret
inc
dec
jno
mov
sbb
cltd
jle
jecxz
lret
pop
xlat
add
push
sub
inc
aam
xchg
cmp
scas
rcrb
stos
dec
rclb
jb
push
scas
pop
xor
int3
fsts
xchg
add
lock
enter
jge
jge
aad
cmpsl
lret
notb
inc
stc
insb
add
mov
push
add
pop
mov
sub
pop
sbb
pusha
int3
data16
push
jo
dec
dec
stos
movl
das
add
mov
mov
dec
out
sbb
jle
jns
mov
xlat
in
mov
pushf
shrl
pop
ja
rcll
popa
mov
sub
fsts
jne
stc
outsb
cmp
out
add
sbb
mov
mov
jno
arpl
and
sub
aas
lret
adc
lods
or
push
fistps
int
and
das
loop
xor
mov
push
ja
mov
adc
js
decb
xor
imul
and
pop
loop
sub
mov
push
pusha
test
xchg
flds
push
and
imul
xchg
cmp
mov
pushf
js
shll
aam
pop
xchg
lret
subb
ja
popf
inc
fsubrs
jnp
push
and
jp
pop
mov
sbb
jp
mov
into
mov
data16
movsl
aam
loope
push
inc
ss
bnd
fdivs
je
iret
push
aam
jg
movsb
mov
sbb
jbe
inc
fwait
mov
push
jo
pop
pop
std
jno
ds
inc
push
add
inc
xchg
in
mov
int
sbb
fimuls
sub
andb
leave
mov
movsl
jns
stos
mov
repz
mov
jmp
stos
mov
push
cmp
mov
hlt
clc
outsb
fstps
loope
gs
or
push
out
mov
xor
ljmp
cmpsb
push
inc
or
xor
arpl
repnz
aad
jno
cmp
sti
imul
fidivl
jb
aam
pusha
das
out
push
adc
cmp
mov
xchg
ljmp
repz
rorw
or
ret
scas
icebp
mov
aad
jo,pn
imul
lcall
inc
inc
cmp
push
mov
sbb
mov
adc
jge
cmp
rdtsc
arpl
add
cmc
mov
adc
es
popa
fiadds
icebp
pop
hlt
sahf
lds
imul
jmp
add
loop
sbb
cmp
in
sbb
xor
out
xor
mov
push
in
imul
pop
or
xchg
inc
bound
jo
sbb
lea
mov
fiadds
inc
xor
jmp
pop
jae
imul
div
adc
mov
ficomps
popa
in
add
push
insb
leave
shrl
dec
mov
sbb
arpl
das
sbb
and
pop
loop
or
ss
adc
imul
scas
shlw
sub
enter
jl
out
movsl
dec
pop
bound
cmc
inc
lods
nop
sub
gs
addr16
into
inc
mov
test
pop
jl
push
add
loop
xchg
in
or
dec
nop
push
inc
mov
sbb
outsl
das
std
dec
or
pop
inc
outsb
or
pop
sub
fsubrl
loope
fsubs
in
fidivrs
push
cmpsb
outsl
push
std
cmpsb
sub
sbb
leave
inc
subb
push
adc
lods
imul
fistpll
mov
push
inc
inc
movsb
inc
addr16
fdivr
imul
mov
mov
out
jge
pop
stc
or
in
icebp
sub
sti
mov
sub
mov
pop
mov
mov
sar
sti
loopne
xchg
inc
jnp
lahf
lahf
xchg
sbb
notl
mov
pop
xor
sub
cld
pop
jp
popa
je
mov
mov
xor
add
scas
orl
lahf
cwtl
rol
gs
mov
mov
rolb
sub
mov
js
xchg
mov
mov
mov
int
xor
lods
jp
or
insb
sbb
xor
push
and
andl
fldt
push
scas
sbb
push
inc
loop
mov
and
inc
pushf
dec
pusha
faddl
jne
push
in
call
jmp
inc
and
dec
inc
xchg
sbb
mov
or
xchg
cmp
test
in
lret
cmp
xor
jns
jns
add
clc
stc
jno
out
mov
pushf
xchg
mov
push
add
std
push
add
push
movsl
cld
repnz
lods
mov
repnz
jecxz
scas
sbb
in
in
xor
xlat
mov
xchg
ss
dec
dec
out
dec
adc
lret
lods
or
into
aad
xchg
dec
imul
push
mov
jns
icebp
sub
mov
iret
out
shll
sti
mov
out
test
shlb
fnstsw
outsb
xor
mov
ret
adc
mov
push
mov
jno
scas
frstor
jno
sti
cmp
xor
daa
loope
dec
mov
jmp
stos
mov
pop
rol
popf
xor
inc
shlb
pop
mov
cmp
popa
out
push
in
dec
xchg
or
lret
div
push
leave
push
je
pop
in
adc
mov
repnz
int
cs
push
push
popa
fisubrs
mov
aad
sbb
rcrb
dec
add
mov
jbe
adc
imul
popa
movsb
push
sub
pop
mov
dec
out
push
push
gs
inc
stc
push
cli
sbb
insl
pushl
test
repnz
or
push
adc
adc
mov
xchg
or
shll
test
insl
fnsave
fwait
lods
mov
dec
lds
subl
cmp
push
aam
mov
movsl
xor
fwait
cld
jae
cmp
and
aaa
push
xor
lods
sbb
dec
cmp
mov
sahf
pusha
std
xlat
adc
loop
imulb
addr16
lods
ret
mov
push
jge
mov
and
pop
and
scas
mov
mov
mov
je
mov
imul
out
adcl
push
xchg
notl
fnstsw
or
imul
clc
popa
int
add
pop
or
imul
leave
jnp
push
sbb
cmpsl
jl
xor
xchg
repz
pop
inc
outsl
in
jo
jmp
xchg
lods
arpl
push
jmp
fcmovb
aad
mov
cmp
lcall
hlt
stc
adc
fisubs
or
lret
jne
xchg
ffreep
dec
aam
es
mov
adc
push
lret
shlb
xchg
scas
scas
xor
hlt
aam
pop
ds
cltd
push
bound
jbe
pop
test
or
or
adc
notl
adc
jno
aad
out
jo
adc
cmpsl
cmp
push
adc
sbb
mov
les
fstl
fsts
clc
xor
imul
xchg
lods
fistpl
movsb
jmp
rorl
into
sbb
es
jecxz
mov
fs
adc
arpl
add
cwtl
xor
mov
push
xchg
mov
jge
jnp
insb
xchg
cmp
lods
mov
pushf
out
xor
cld
int3
stc
lahf
aas
leave
or
xorb
jmp
or
arpl
fmuls
push
testb
fidivl
mov
add
or
mov
ret
js
cmpsl
push
js
inc
mov
lcall
inc
movsb
mov
xor
adc
sub
cmp
int
pop
mov
inc
sbb
imul
loopne
cltd
ja
xor
add
inc
sub
orl
sbb
inc
or
dec
push
mov
push
dec
dec
les
pop
jmp
dec
outsb
cmp
imul
or
jmp
adc
ret
imul
cmc
lds
outsb
cmp
cltd
inc
icebp
xor
jl
ljmp
gs
jge
mov
ljmp
pop
jmp
inc
jae
hlt
jbe
jo
dec
xchg
push
pop
xchg
stc
fstpl
mov
pop
movsl
push
out
mov
mov
mov
clc
cwtl
xor
and
pop
mov
sbb
loopne
lahf
ret
minps
hlt
lods
sbb
out
xor
push
addl
push
cmpsl
or
cld
mov
adc
pop
popf
sbb
call
lret
bound
int3
mov
xchg
mov
stos
mov
popa
hlt
or
mov
icebp
dec
push
sarl
popf
rcll
lds
imul
lret
lds
adc
test
leave
jg
int
rcl
or
dec
adc
and
cli
out
mov
aaa
sahf
stos
data16
hlt
std
les
jo
add
in
ret
jp
sub
outsl
out
or
ss
aaa
push
test
jg
je
popa
dec
cli
imul
sub
fdivrl
inc
xchg
outsl
mov
xlat
or
inc
lods
int
xor
cmp
ret
fcompp
fwait
push
rcr
add
mov
inc
push
mov
cld
push
xor
xchg
sub
pushf
clc
lock
xchg
cmp
mov
mov
jbe
xchg
jp
gs
call
test
pop
pop
movb
sti
les
dec
rolb
and
mov
lea
cmpsb
mov
int
xor
xchg
imul
pusha
scas
or
sub
cmp
mov
mov
xchg
xor
es
lcall
sahf
xor
and
sahf
fcmovb
xchg
stc
movsl
cmc
cmp
jnp
test
hlt
jp
popf
cmp
or
or
pop
out
add
push
jbe
add
fwait
mov
clc
push
outsl
pop
sub
adc
pop
dec
out
add
out
cmpsb
imul
lcall
push
fs
jbe
pop
jno
dec
mov
pop
or
dec
fstl
and
stos
pop
daa
icebp
push
es
push
pop
out
xchg
fs
mov
adc
rcr
xor
jae
push
je
shr
mov
add
sub
pop
out
cmpsb
sbb
mov
cld
int3
out
fists
shlb
mov
xor
arpl
rcl
push
shlb
out
sbb
pop
arpl
shl
inc
mov
int
xor
incb
insb
test
test
pop
xchg
bnd
jns
mov
bound
xor
inc
and
in
test
jns
scas
mov
push
sub
daa
xor
jno
lret
lret
and
outsl
shr
pop
xor
push
mov
imul
cmp
lret
inc
in
lods
mov
lcall
push
shrb
jnp
dec
xchg
xor
lods
cmp
into
cmpsb
push
add
test
lea
jp
mov
test
xor
or
sbb
inc
fwait
jg
xor
insb
outsl
inc
mov
dec
lods
or
jl
sbb
testl
pop
iret
loope
mov
mov
pop
cltd
mov
jae
enter
sub
movsl
mov
outsb
les
nop
jecxz
dec
lds
std
cli
call
int3
lahf
test
pop
andb
push
xchg
sub
and
xchg
push
mov
xchg
ljmp
fs
lock
aad
mov
and
add
cs
aaa
push
pop
stos
mov
loopne
hlt
sub
ds
dec
imul
imul
les
and
dec
mov
ret
int3
pop
adc
xlat
adc
popf
cmp
and
or
dec
out
push
dec
testb
jb
lods
and
push
mov
jae
fisubrl
shlb
or
aam
mov
mov
or
test
adc
and
mov
push
test
sub
pop
pop
lret
cmp
in
dec
mov
enter
imul
sub
fidivrs
mov
and
pop
pop
leave
sub
jnp
fdivrl
out
push
aam
inc
inc
xchg
sbb
xchg
loope
int3
es
jno
sbb
repnz
inc
adc
mov
mov
cmp
jecxz
pop
hlt
mov
in
insb
mov
jno
imul
sbb
pop
fistpl
pop
or
xor
push
es
pop
mov
adc
jo
fisubrs
ret
cmpsl
mov
lahf
hlt
pop
sbb
pop
aad
fdivr
mov
and
in
mov
insl
nop
sub
jb
mov
and
out
test
xor
aaa
testl
mov
jae
cs
rcr
dec
ficoms
adc
mov
shl
jmp
and
ret
adcb
stc
cli
and
pushf
sub
sub
mov
dec
xor
leave
inc
test
inc
test
mov
repz
fadd
push
fnstenv
dec
rcll
rclb
sub
lock
adc
and
loopne
and
popf
mov
in
sbb
mov
out
jo
add
push
jnp
sbb
cwtl
jmp
sbb
enter
in
sub
push
repnz
mov
mov
scas
rclb
cmpsb
or
aad
in
repnz
mov
add
test
or
js
mov
xor
test
jmp
jns
add
pop
jbe
mov
cmp
int
sbb
je
out
mov
or
aad
mov
pop
iret
and
cmp
or
adc
xchg
push
xor
pop
adc
lods
mov
jle
or
lods
dec
clc
fsubl
rcrl
inc
shrl
inc
fs
fdivr
pop
dec
pop
mov
mov
pop
test
jge
pop
jecxz
rcrl
sub
dec
push
mov
rorb
push
sub
sti
cmp
xchg
mov
mov
push
pop
stc
loop
sub
jno
mov
sub
aad
loope
lea
test
mov
cmpsl
xchg
shrl
and
shll
fsubs
jle
sbb
adc
cld
sub
jl
int3
pcmpeqw
adcb
imul
fcmove
mov
filds
out
dec
xchg
icebp
cmp
lock
movsb
cld
xor
mov
pop
sti
xor
push
scas
or
pushl
lods
or
outsl
add
inc
xchg
out
xlat
pop
jnp
out
adc
push
jp
pop
cmpsl
stos
jb
into
shlb
and
and
cmp
test
dec
xlat
mov
movsb
or
cli
pop
pop
mov
lahf
xchg
inc
pop
xor
xor
jl
add
cmp
ja
aas
dec
inc
xchg
mov
lret
ds
xor
sti
rclb
sbbl
test
ja
dec
bswap
push
lret
nop
popa
and
push
repz
inc
mov
shll
jno
push
in
out
jp
or
add
adc
sub
dec
adc
cmpsl
repz
add
enter
pop
inc
push
icebp
inc
inc
rcrb
cmp
pop
and
or
xlat
lods
push
fwait
addr16
loopne
push
cld
movsb
jmp
imul
ret
mov
pop
push
popa
pop
lods
push
mov
int3
lret
stos
in
push
icebp
pop
push
sub
dec
bound
mov
or
and
xor
dec
add
dec
xor
pop
mov
call
pop
jne
dec
mov
and
mov
mov
mov
aas
xchg
in
or
es
xor
dec
xchg
ljmp
imul
mov
push
mov
mov
in
dec
dec
andl
lds
xor
in
push
pop
push
sub
or
js
dec
test
xchg
insb
in
clc
stos
lods
adc
es
mov
and
pop
pop
mov
out
push
mov
push
and
popa
cmc
pop
shll
mov
les
bound
jecxz
inc
jge
push
inc
sbb
stc
push
inc
bound
push
and
sbb
fcmove
lret
cltd
fwait
sbb
ljmp
popf
roll
mov
dec
popf
dec
xor
repnz
pushf
and
mov
add
or
pop
loop
lcall
outsb
sbb
xor
ja
cmp
leave
shll
push
lahf
inc
cmpsb
mov
add
mov
leave
cmp
scas
lds
and
ljmp
lods
dec
xchg
xchg
fwait
push
inc
mov
mov
add
pusha
mov
cmp
push
xchg
test
or
mov
psubusb
clc
out
and
clc
jno
or
leave
test
fld
clc
dec
sub
jne
icebp
ljmp
inc
hlt
mov
mov
push
rcl
int3
cmp
add
add
fsub
pop
test
pop
add
lds
or
bound
cltd
daa
add
adcl
adc
popa
call
jp
cmc
rorb
das
mov
aam
sbb
nop
or
sbb
je
push
sbb
cmp
or
inc
lods
ss
aaa
aaa
test
adc
cs
in
into
inc
in
jne
fcoms
rcll
cltd
cwtl
add
ret
stos
femms
test
sarl
cmpsl
jb
fistpl
repz
adc
lahf
dec
mov
dec
fwait
adc
push
push
fxch
mov
ja
jbe
into
xor
push
lods
test
dec
push
out
inc
cltd
or
or
jb
or
daa
dec
jmp
mov
rcll
ljmp
movsb
jle
std
imul
pop
insb
insl
xchg
ja
mov
push
jae
out
mov
es
int
mov
orl
sub
inc
mov
lods
fldcw
push
lea
or
loop
cmc
mov
dec
jg
out
push
nop
fsubl
sub
jge
scas
inc
jl
stos
or
mov
outsb
pushf
clc
xchg
stc
iret
aam
daa
or
cltd
sti
mov
je
int3
out
dec
repnz
jp
pop
aas
xlat
fneni(8087
test
into
mov
xlat
popf
or
test
lods
cmpsl
cmpsl
adc
decb
sbb
and
and
dec
das
or
sub
dec
repnz
cwtl
fcmovne
dec
pop
push
sub
jp
scas
push
insb
jecxz
add
mov
jg
dec
mov
xor
jbe
in
ret
xchg
adc
aad
push
push
push
sub
test
sub
fisubrs
cmpsb
pushf
rcl
inc
dec
dec
das
lahf
int3
push
enter
jb
xor
xor
stos
pop
sbb
insl
mov
es
in
cltd
movb
bound
in
xchg
pop
jae
sbbl
stos
shrb
repz
aas
xchg
mov
and
movb
addr16
cmp
jne
sbb
and
cmp
lcall
call
pop
push
cli
adc
mov
xor
mov
mov
and
mov
add
sub
es
ja
and
jns
xchg
into
cmc
stc
add
mov
lahf
lret
gs
push
add
arpl
mov
add
fcomp
or
ja
roll
and
enter
push
icebp
fildll
lods
or
scas
push
inc
popa
or
ja
stos
xchg
xchg
lea
rcrb
jge
test
xchg
mov
leave
popf
mov
loopne
mov
mov
jp
rol
pop
adc
xchg
mov
cmp
adc
mov
mov
stos
mov
lds
xchg
mov
scas
xlat
adc
inc
sub
faddl
jo
cmp
sbbb
sti
decl
pusha
cmp
fildll
int3
aam
or
shrl
out
push
dec
cmp
and
mov
mov
xchg
sub
clc
pop
adc
bound
mov
xor
sbb
jne
shr
dec
loopne
les
or
cmpsl
dec
aam
push
add
fs
pusha
pop
bt
fsubrs
insb
nop
dec
cmpsb
ds
push
scas
popf
jne
mov
clc
sbb
in
xor
inc
mov
in
or
lret
sbb
stos
test
arpl
rclb
cmp
jle
fldenv
add
icebp
loop
das
push
clc
outsl
shlb
jb
dec
cmp
adc
xchg
mov
mov
xchg
sub
into
or
xor
xchg
das
adc
mov
loop
nop
out
add
out
out
pop
push
ficoms
popf
fs
sbb
fsubs
or
mov
idivb
sbb
mov
xchg
aaa
mov
xchg
imul
test
mov
jl
bound
in
and
or
out
int3
mov
idivl
jge
sbb
repz
leave
sub
pop
and
mov
pop
fs
and
inc
push
outsl
lds
bound
pop
stc
loope
loopne
sbb
inc
sbb
test
std
out
cmpl
out
loop
mov
lcall
xchg
movsl
sub
rol
cmpsb
push
loopne
or
fcomps
lahf
loop
insb
pushf
and
jl
popa
or
in
ja
xchg
popa
je
xor
leave
ret
pop
inc
jp
popw
std
xor
jae
pop
int
sti
inc
mov
lahf
and
aas
jb
lcall
dec
subps
cmc
mov
outsb
push
lahf
in
add
mov
xor
cmpsb
in
shlb
aam
or
test
stc
std
push
inc
and
imul
push
and
out
sti
out
jo
clc
push
cmp
xor
mov
add
jge
lcall
roll
jae
push
mov
xchg
pop
in
inc
jl
mov
add
in
xchg
stos
aaa
mov
pop
iret
xor
mov
jne
andb
jno
adc
lret
je
lock
imul
fs
and
rolb
test
and
cmp
out
add
shr
xchg
sti
sbb
leave
out
push
jno
xchg
xchg
stc
sahf
xchg
imul
push
pushf
xchg
cmp
mov
sub
sub
das
popa
push
cmc
and
stos
mov
sti
jnp
dec
shrl
and
jg
mov
mov
test
inc
testb
ret
sub
cmp
mov
aad
stos
mov
test
imul
cli
add
and
cmp
fwait
adc
clc
cmp
mov
push
mov
std
in
shll
in
dec
rcll
jp
push
aad
xchg
pop
push
arpl
sbb
push
sub
insb
imul
je
add
pop
push
or
and
adc
stos
in
push
es
insb
out
cmp
int3
adc
enter
jp
mov
dec
cmp
mov
jne
inc
dec
xor
jg
test
push
inc
inc
lea
adc
or
inc
lds
ljmp
xlat
in
and
lea
ds
loope
movsb
call
cmc
inc
popa
sub
jno
hlt
mov
add
jno
sub
xchg
ret
pop
ja
jge
push
addr16
xor
adc
and
lea
pop
jne
or
push
pop
fstpl
sti
fwait
inc
es
sub
dec
cmp
jb
pusha
int
popf
out
dec
and
cmp
push
and
cwtl
dec
loopne
mov
xor
js
mov
xor
imul
cmpsb
hlt
ds
sub
cmp
stos
mov
jmp
mov
imulb
push
mov
stos
inc
sub
js
js
das
fistpl
cmp
roll
adc
or
mov
cmp
adc
mov
imul
jle
add
pusha
cmp
std
lock
fistl
lea
sbb
add
mov
dec
dec
cmp
or
xchg
pop
sub
push
adc
pop
or
xchg
dec
pop
sub
pop
jmp
push
xchg
enter
pop
loope
mov
and
pop
std
mov
mov
stc
es
and
bound
or
push
push
add
xor
xchg
mov
ljmp
stos
mov
insl
cld
mov
push
imul
inc
dec
sub
sahf
jnp
jle
adc
mov
cmp
inc
std
xor
fimuls
jb
mov
pop
rol
jmp
sub
jge
mov
xlat
push
sarl
xchg
enter
fidivrl
cmp
mov
jns
subl
jnp
in
bound
push
mov
jp
ja
push
or
jmp
cmp
jmp
xchg
ret
pusha
loopne
fcomip
push
push
mov
jno
insb
pop
mov
lcall
pop
cld
shll
mov
test
test
dec
jle
pop
mov
int3
shl
jno
adc
mov
jae
je
pusha
shl
aas
xor
xchg
subl
push
inc
fwait
pop
cmp
cmp
in
insb
lret
jns
cwtl
jp
or
or
mov
ss
dec
cld
pop
enter
popa
dec
adc
imul
mov
xchg
repz
fmuls
aas
mov
dec
loope
mov
aaa
test
xchg
out
pop
jb
dec
dec
in
pop
popf
push
push
fs
jae
aad
xchg
out
sbb
jbe
test
leave
and
and
insl
push
lahf
fs
xchg
or
mov
jo
dec
mov
inc
pop
dec
hlt
jns
shrb
dec
sub
icebp
sub
nop
jg
lods
shlb
je
movsl
push
jge
jge
out
xchg
mov
push
and
jge
stos
in
xchg
xor
cmp
mov
movsb
in
sbbl
addl
add
dec
jnp
out
xor
jle
push
xchg
gs
pusha
and
xlat
pop
add
popa
sub
repz
ss
push
sub
hlt
ret
xchg
mov
imul
or
das
jg
inc
enter
stos
ja
mov
xchg
pop
adc
dec
dec
dec
xchg
das
sbbl
dec
xchg
shrl
ret
ljmp
lahf
jno
outsl
push
jns
arpl
push
in
sbb
mulb
xchg
dec
dec
sub
or
push
cmc
loopne
mov
xchg
mov
ret
xchg
stos
inc
repz
sahf
mov
sub
inc
stos
fldl
pop
cli
aam
adc
push
push
adc
xor
mov
sbb
iret
arpl
sbb
cli
dec
cmp
leave
lds
cltd
popa
mov
addl
sbb
mov
dec
push
push
inc
push
inc
push
mov
xchg
xchg
pop
jle
or
movsb
mov
aam
jbe
testl
mov
pop
scas
data16
cmpsl
mov
addr16
ds
xchg
loop
lock
fs
adc
push
push
fildl
mov
xor
jne
jmp
sbb
decb
xchg
in
xor
add
ret
xlat
xor
cmp
shrb
fbld
fnstenv
cmpsb
int
in
fiaddl
movsb
dec
sbb
lock
ffreep
inc
lahf
push
fcomi
mov
xor
subl
jno
outsb
test
mov
sbbb
push
js
psrlw
cmc
hlt
cmpb
and
pop
icebp
icebp
insl
mov
test
or
test
adc
fwait
gs
pop
xor
lret
pop
pop
jae
pusha
pop
scas
lahf
sub
push
jns
mov
je
dec
nop
mov
incl
xchg
jmp
pop
xchg
and
test
leave
push
inc
pop
add
mov
leave
mov
add
xor
sub
das
je
mul
rorb
fdivl
adc
mov
inc
pushf
bnd
pop
mov
push
lods
mov
xor
mov
ret
pop
cmc
enter
dec
adc
es
or
sbb
scas
ja
adc
mov
imul
mov
rorl
mov
adc
lea
adc
mov
mov
ret
repnz
fidivrl
mov
dec
mov
inc
mov
and
inc
loop
bound
movsb
insb
or
xorb
test
std
pop
or
nop
les
sbb
insl
xchg
cmc
inc
lods
jl
test
rcrl
bound
sahf
lea
mov
es
iret
fdivl
xor
sahf
fldenv
stc
xor
outsl
cmpsw
push
rcl
pop
mov
dec
enter
movsl
pop
aam
dec
gs
insb
jnp
and
ss
in
inc
cmp
out
push
arpl
pop
idiv
fildll
mov
test
and
mov
push
xchg
push
add
add
or
add
push
xchg
fisttpll
jl
jno
jecxz
stos
xor
cwtl
mov
jl
das
stos
loopne
jge
mov
fwait
push
pop
scas
fnstsw
in
xchg
frstor
inc
mov
mov
add
les
mov
jge
xchg
xor
mull
and
cwtl
xor
mov
push
imul
pop
inc
roll
or
mov
jmp
mov
into
aad
pop
mov
enter
adc
lret
orl
jb
pushf
xor
pop
fsts
or
push
add
cli
cmp
iret
inc
xchg
fdiv
and
pop
clc
fstl
orl
jl
inc
jge,pn
mov
outsl
or
sub
je
xor
sbb
ss
lds
fidivl
hlt
cmp
jl
mov
rolb
jne
xor
mov
in
add
out
std
and
xchg
aas
xor
xor
add
fisttpl
cmp
mov
sub
pop
cmpsl
popa
loopne
popa
jl
ja
lret
cmp
cs
cld
daa
mov
sub
mov
xor
sub
or
ret
mov
fldenv
in
je
cmp
mov
shlb
je
aaa
mov
add
push
add
and
rcr
shrb
pop
dec
mov
into
orl
mov
addb
push
mov
cmc
aaa
cltd
and
xor
push
sbb
popf
rclb
fmuls
popf
popa
and
sahf
mov
adc
or
and
adc
mov
or
mov
fstpt
or
dec
iret
addr16
popa
shll
xchg
xor
div
cld
jnp
fisubrs
add
cmp
xor
movsl
arpl
mov
cmp
jbe
or
popf
xor
subb
pop
or
fwait
lcall
jp
or
sbbb
mov
xchg
dec
sbb
push
icebp
clc
sahf
add
or
adc
sub
inc
clc
std
mov
or
add
insb
je
jb
cmp
sub
movsl
ljmp
mov
sar
xchg
mov
in
push
mov
and
es
lock
cmp
adc
data16
lock
xchg
lock
and
push
cld
cltd
negl
mov
cmpsl
out
dec
shlb
fdiv
sbb
orl
mov
or
arpl
push
mov
imul
imul
mov
pop
into
pop
push
subb
adc
leave
xchg
in
repz
inc
xchg
mov
jo
add
mov
mov
sti
push
ret
out
orb
and
mov
pop
mov
rorb
je
mov
xchg
sub
inc
adc
out
cmp
push
xchg
mov
xchg
insb
cld
mov
mov
in
inc
lods
mov
or
add
clc
fcmovnbe
cmp
inc
mov
out
push
jno
pushf
pop
lret
addr16
push
sub
pop
inc
cmpsb
mov
sbb
fisttpll
adc
sarb
lret
out
das
cld
lods
sbb
sub
push
ret
call
and
ret
mov
xor
push
stos
dec
mov
jb
dec
pop
push
outsl
sti
add
push
fcos
xchg
add
xor
call
and
sub
add
mov
leave
std
xchg
xchg
sbb
mov
cmpb
xor
xchg
xor
mov
test
jmp
fs
xchg
inc
lock
jns
lret
sub
daa
xor
das
jg
insb
xor
mov
std
jne
push
jnp
add
mov
rcrb
sbb
xor
cmp
scas
push
movsb
fs
dec
pop
or
js
mov
and
test
mov
inc
and
mov
cmp
insl
mov
inc
mov
lahf
cli
in
mov
jge
std
insb
sbb
out
lcall
nop
xor
scas
scas
mov
or
lock
ret
bound
jge
cmp
xchg
push
clc
jl
mov
xor
shl
dec
test
addr16
aam
ljmp
mov
xor
imul
xchg
or
insb
mov
pop
fistps
mov
subb
inc
mov
adc
xchg
mov
cmp
pop
movsl
cld
mov
xchg
cld
cwtl
movsl
xchg
hlt
popa
xchg
sahf
testl
mov
xchg
test
fcomp
inc
lret
outsl
xchg
imul
sbb
jns
les
out
fs
xchg
jae
mov
mov
iret
es
sbb
fistpll
sub
mov
sbb
xchg
cmp
and
insl
push
xchg
idivl
cwtl
out
aaa
dec
and
pop
adc
dec
sti
mov
sbb
hlt
mov
mov
xor
xor
pop
call
jnp
add
sbb
pop
pop
ud1
stos
sub
out
jb
xchg
test
mov
outsb
inc
or
or
lods
roll
sbb
cmp
add
popf
xchg
mov
and
sahf
or
dec
mov
fcmovu
add
xchg
lcall
pop
sub
or
mov
adc
decb
cwtl
jmp
nop
shl
lods
imul
imul
out
push
xchg
fwait
cmp
pop
add
cmp
aad
or
mov
ja
ss
imul
enter
in
out
mov
pop
mov
cmp
push
call
mov
jne
push
jno
insb
jno
and
inc
jecxz
jmp
push
arpl
ret
loope
out
test
add
ret
add
cld
cmp
jmp
jle
cltd
arpl
lcall
test
clc
ret
push
cwtl
add
scas
pop
jnp
outsl
test
movsl
add
xchg
mov
lock
pop
das
in
mulb
pushf
mov
nop
xor
leave
das
mov
mov
or
adc
addr16
mov
mov
inc
stos
xchg
mov
mov
leave
pop
and
hlt
mov
test
or
push
xor
mov
mov
clc
lods
cmp
add
fimuls
lcallw
test
fs
rcr
fcoms
mov
pop
pop
fstpl
stos
imul
cltd
jl
xchg
in
cmp
xor
jnp
insl
dec
sub
cmp
popa
dec
fldenv
outsb
cwtl
mov
lods
repnz
add
icebp
cmc
movsb
lods
cmp
jno
stos
pop
pop
mov
inc
loopne
jle
cmpsb
sbb
fiaddl
mov
ss
fisttps
orl
stos
dec
shlb
inc
cmp
cltd
scas
adc
inc
push
outsl
loopne
inc
push
jp
inc
or
out
push
mov
leave
rorl
pop
mov
push
cmp
jbe
jb
jnp
data16
in
mov
inc
mov
jae
arpl
scas
arpl
ds
jg
jg
cmovs
mov
sub
imul
cld
mov
loope
mov
dec
or
jge
sub
int3
jg
push
push
clc
sahf
xor
mov
js
insb
lret
inc
in
aas
add
pop
testb
and
cli
aas
mov
adc
insl
cli
insb
mov
mov
rorb
cltd
and
int
out
pop
jp
jmp
add
push
pop
pop
mov
icebp
movsb
mov
mov
or
pop
rorb
add
lret
cs
xor
test
call
pop
pop
shlb
xor
mov
in
int
sbb
fs
adc
das
push
das
cwtl
lods
dec
mov
push
cli
sti
rorl
pop
and
icebp
or
and
loopne
data16
arpl
test
cmp
cmp
addr16
sub
jle
loope
les
push
add
leave
shrl
pop
xchg
sub
imul
pop
movsb
pusha
mov
aad
xchg
jecxz
cmp
lcall
xor
movsl
xchg
mov
mov
test
lock
fwait
cs
cltd
xchg
inc
fildll
mov
mov
sbb
int
out
and
adc
inc
jp
xchg
or
cmp
inc
into
jno
jg
adc
daa
cltd
pop
sub
std
lea
insl
in
clc
aaa
sub
les
icebp
imul
pusha
cli
or
adc
gs
xchg
adc
pop
pop
repnz
xor
adc
popa
sub
cld
jmp
inc
repz
inc
or
in
jmp
xchg
lea
pushf
mov
inc
mulps
and
add
outsl
mov
je
or
mov
into
cmp
sbb
dec
test
push
xchg
lods
cmpsl
mov
rcr
cmpsl
es
inc
addr16
lods
xor
sub
mov
xorb
fbstp
xor
xor
daa
xchg
in
push
fdivrl
add
inc
add
inc
push
jge
mov
pusha
xor
cli
arpl
mov
enter
fcmovu
test
mov
sub
sti
xchg
mov
jl
mov
push
cmp
stc
and
jecxz
cmp
daa
nop
cmp
cmpsb
dec
in
insb
jp
pop
sahf
jmp
jbe
pop
jne
andl
addr16
sub
xor
cmp
dec
xchg
cmpsb
lock
push
pcmpeqw
call
pop
lods
xchg
add
sbb
xchg
cmp
push
dec
andb
add
outsb
jo
aas
jbe
shll
aaa
test
and
pop
int3
and
mov
cs
and
sbb
mov
scas
bound
mov
insb
xchg
enter
xor
sub
loopne
jnp
mov
and
sbb
xchg
lods
cmpsl
lods
int
jge
inc
test
push
inc
xchg
mov
add
mov
into
mov
mov
push
and
mov
rol
outsl
insl
lea
mov
cmp
insb
cmp
dec
ret
test
cmpl
dec
pop
jns
jne,pn
push
bsr
mov
mov
xchg
pop
jg
jge
add
mov
xchg
pop
lds
stc
mov
or
inc
insb
add
es
scas
mov
or
pop
or
jns
bound
xlat
pop
sub
adc
xchg
push
sbb
cmc
fs
popf
add
in
movsb
pop
push
mov
fcomip
int
sahf
repnz
inc
stos
cmp
sbb
pop
movsb
mov
fsubrl
enter
imul
add
jge
push
jl
pop
cmc
cltd
call
jecxz
fiaddl
leave
push
inc
sarb
dec
add
push
cmp
dec
lods
roll
sub
xchg
xchg
jge
in
js
test
lret
cld
or
repnz
iret
dec
sahf
sti
out
js
jne
fmuls
fidivs
mov
jle
stc
arpl
cwtl
stc
fcoms
cmp
aam
movsb
dec
je
lret
sub
jge
fldcw
push
es
cmp
and
daa
jecxz,pn
add
or
mov
and
xor
andl
cmpsb
dec
add
mov
imul
push
jbe
icebp
sbb
xor
fisubl
rcl
pop
push
lds
jne
addb
fs
push
jae
test
call
sbb
inc
dec
xor
nop
cmpsl
xchg
jl
xchg
adc
jl
stos
pop
idiv
jl
mov
xchg
adc
pop
fs
sub
sahf
jl
xchg
mov
pop
je
mov
ja
push
test
cmp
pop
jl
fstl
jle
push
push
and
cmpsl
insl
idiv
cmp
insl
xchg
ficompl
mov
jl
sub
mov
mov
adc
rcll
test
stos
mov
mov
ss
ds
jp
repnz
cmp
stos
inc
shlb
xchg
pop
cmp
pop
iret
addr16
cs
test
cmpps
push
mov
mov
sbb
and
pop
mov
xchg
aaa
sub
inc
stos
ret
stc
andl
cmp
xor
popf
fists
rorl
call
ds
lock
sti
mov
push
dec
inc
mov
daa
sti
xchg
or
loop
dec
mov
mov
fildl
mov
mov
push
sbb
jo
hlt
mov
mov
dec
popa
test
sub
outsl
imul
add
mov
push
rcl
jns
push
sub
fnstcw
mov
fstps
call
xchg
lret
pusha
jge
mov
mov
shrl
jl
xor
xor
sbb
daa
mov
jecxz
fstl
jo
outsl
cmp
mov
shll
mov
jecxz
repz
popf
in
pop
mov
mov
xlat
rcr
mov
imul
ja
test
mov
mov
jge
dec
dec
lods
call
mov
sbb
aad
mov
leave
xchg
add
add
jno
xchg
test
xchg
lcall
push
lods
cltd
rcrb
mov
loope
in
cli
bound
fstp
mov
mov
pushf
lahf
out
jp
movsb
sub
push
mov
xor
into
cmp
std
jns
in
ret
jb
andl
test
xor
jbe
add
jp
xchg
push
icebp
aam
cmpl
sub
fcmovbe
xor
stc
inc
sbb
inc
xchg
fldcw
add
movsl
pop
stc
gs
nop
dec
cmp
lahf
pop
movsl
jle
aas
mov
mov
add
jno
inc
push
loopne
call
fcmovnb
nop
push
jmp
shl
xor
aaa
in
clc
in
push
mov
adc
pop
inc
mov
aaa
xchg
mov
jg
int3
mov
aas
scas
xor
sub
lret
add
jmp
lods
sub
jmp
std
xchg
arpl
and
mov
mov
dec
icebp
push
stc
into
or
jle
dec
sbb
lcall
out
leave
xchg
lods
push
lret
cmc
pusha
mov
cli
mov
push
imul
inc
pop
add
jno
push
std
jne
add
inc
stos
inc
push
sbb
out
int3
pop
add
sbb
cmpsl
not
sbb
xorb
inc
or
cs
and
add
dec
pop
mov
ficomps
insl
faddl
insb
es
xchg
mov
mov
jecxz
call
sbb
mov
add
inc
test
mov
ret
ss
dec
scas
pop
aas
xchg
jb
mov
and
hlt
sbb
lds
push
pop
adc
sub
dec
jo
lcall
es
push
pop
mov
adc
xchg
cmc
mov
enter
push
lock
xchg
fsub
cmpsl
cltd
jmp
bound
rolb
mov
in
inc
loopne
outsl
add
lea
andl
sub
into
fisubs
mov
xor
aaa
shrl
pop
sbb
mov
shrb
cmp
xor
ljmp
xchg
push
lea
or
stos
push
mov
cmpsl
bound
sahf
add
push
cmpsb
ret
jle
inc
pop
repnz
lret
inc
repnz
xchg
pop
cmpsl
or
fstl
mov
xchg
and
das
and
in
add
jae
rolb
mov
fldl
dec
sbb
inc
push
into
pop
testl
out
idivl
adc
movsb
call
loop
push
test
mov
mov
adc
push
jne
pop
mov
and
jns
cmc
cmp
addr16
adc
repz
insl
jp
xchg
icebp
lods
xchg
in
call
or
lock
sub
adc
popa
mov
add
mov
iret
mov
sbb
insl
mov
je
cmpsl
add
xchg
loopne
hlt
adc
shll
ret
cmpsl
lods
movsb
add
imul
and
pop
adc
inc
lods
push
fwait
sti
cmp
mov
gs
loopne
dec
orl
shr
xchg
adc
dec
ds
jmp
inc
stos
repz
or
and
pop
jo
std
dec
sub
stos
push
nop
loopne
in
nop
addr16
push
in
jge
lods
mov
mov
sbb
inc
dec
jl
dec
bound
pop
nop
je
cmp
stos
xor
ds
dec
push
pop
mov
jo,pt
dec
dec
sub
out
push
loopne
push
aam
out
lds
arpl
movl
fsubs
in
daa
loope
jno
enter
fdivrl
xor
jmp
fstps
inc
scas
or
std
arpl
cwtl
adc
inc
jg
ja
sbb
ret
mov
xchg
cwtl
enter
dec
add
daa
xchg
push
adc
cmp
xchg
mov
dec
pop
push
push
loop
out
cli
inc
aad
rorl
lcall
xchg
xchg
xor
xchg
iret
jg
ret
pop
outsl
aaa
push
flds
sti
out
sub
fimull
and
sub
mov
mov
and
andb
adc
push
iret
lret
add
jnp
xchg
mov
aad
cli
repnz
sub
push
or
fstpt
lods
stos
sub
inc
aam
push
les
cmp
cmp
data16
push
dec
fcmovb
cs
ret
mov
cmp
loope
rclb
cltd
mov
in
dec
mov
cmpsb
aas
mov
inc
ret
xchg
lcall
dec
mov
xchg
scas
sub
sub
push
fldt
mov
pop
divl
hlt
rorb
push
pop
pop
rcrb
dec
mov
mov
jl
enter
out
pop
je
mov
jo
aaa
cmp
push
vmptrld
leave
popa
add
mov
lcall
push
ja
inc
outsl
leave
jo
dec
inc
lea
daa
into
push
call
or
push
jecxz
ss
mov
push
divl
cld
aad
fiaddl
lds
in
lret
dec
jne
jb
sbb
jae
cmp
mov
sub
aaa
out
inc
fcmovnb
sbb
jl
movsb
dec
andb
fsubrl
lret
imul
inc
subl
and
xor
mov
dec
loope
dec
stos
inc
pop
and
ficoml
lea
mov
xchg
sbb
jo
or
adc
sub
adc
mov
js
jmp
push
sahf
aaa
inc
push
sbb
ja
xor
dec
cmc
pop
lahf
sbb
out
cmpsb
add
or
in
or
mov
jae
fists
test
call
cmp
xchg
inc
dec
std
lods
ljmp
sarb
jecxz
fisubrl
idiv
cmp
sbb
add
cmp
cmpsl
sub
pop
ret
dec
sarl
imul
ds
cwtl
adc
cmp
movsb
filds
push
dec
pop
fs
rorl
cmc
pop
pop
jl
das
cmpsl
jle
jle
js
inc
jo
sbb
xchg
nop
repz
xchg
cmc
xchg
cwtl
ds
add
and
or
fbstp
mov
mov
in
movsb
jecxz
sub
xchg
aas
jmp
lea
xchg
scas
sti
mov
lea
addr16
cmp
ljmp
dec
xchg
jns
mov
mov
popa
imul
daa
test
int3
imul
and
jg
ret
imul
aam
rcrl
lods
add
rorl
enter
sub
adc
sahf
popa
sahf
in
jp
cmp
inc
xchg
mov
sbb
out
sbb
insb
sbb
fnstenv
cmp
pusha
sub
cmp
ja
sbb
sbb
lcall
and
out
into
or
pop
inc
icebp
shl
add
xchg
inc
call
xchg
mov
leave
dec
push
pop
mov
je
cli
inc
and
xchg
out
iret
inc
dec
movd
jbe
mov
add
aam
add
sbbl
or
loop
cmpsb
push
sub
pop
das
cli
push
fcoml
mov
pop
out
push
xchg
in
arpl
scas
cmc
sub
pop
add
jmp
fsub
cmp
jb
mov
adc
mov
test
fwait
in
enter
push
movsl
scas
xor
sbb
adc
loop
mov
xlat
fidivrl
cmp
inc
adc
cmp
and
test
dec
int
mov
rep
enter
cs
dec
movsl
enter
dec
adc
inc
adc
test
mov
aas
or
jle
mov
mov
xchg
and
jnp
scas
ret
lods
scas
stc
push
push
mov
xchg
loopne
sub
test
and
aad
jl
mov
jo
mov
and
cwtl
jo
cld
cmp
adc
push
jg
loope
jno
jb
inc
shll
aaa
insl
mov
clc
fistl
fistpll
sbb
mov
shlb
dec
push
idivl
les
xor
pop
je
jp
in
cmp
imulb
out
or
push
mov
cmp
enter
xchg
inc
mov
or
repz
ljmp
gs
add
rcrl
fstp
ret
mov
lods
test
mov
test
mov
sbb
fcmovne
add
push
imull
cmpl
or
out
std
cli
cltd
xchg
jmp
arpl
test
adc
jae
mov
dec
mov
xchg
xlat
mov
and
xchg
nop
js
jbe
push
scas
sbb
icebp
fisttps
subb
repz
sub
sbb
mov
xorl
or
rcrl
add
dec
popf
jge
test
sub
jno
std
push
sub
stos
dec
mov
idivb
mov
addr16
rolb
lret
les
mov
mov
and
test
lds
inc
or
cmp
aam
lret
push
mov
cwtl
adc
xor
lods
fistpl
int3
xchg
cmp
sub
pop
pop
int3
cltd
lret
cmpsb
inc
sbbl
aam
jo
adc
jp
cmp
ljmp
icebp
push
lret
gs
lds
fists
ds
or
jmp
xor
aad
and
addr16
es
lods
lds
push
int
push
imul
push
cmc
stos
jl
mov
adc
add
push
fldt
test
jnp
into
mov
mov
stos
ds
mov
cltd
mov
mov
ljmp
shlb
idivb
pop
lahf
out
lock
std
jmp
out
add
sti
hlt
aaa
and
loopne
std
pop
push
movsb
jp
fstpl
cmc
inc
sbb
outsb
into
adc
adc
xchg
xchg
mov
add
adc
test
sub
leave
jg
mov
jo
mov
pop
xchg
leave
outsl
leave
lock
sarl
inc
dec
xchg
repz
fstl
push
jmp
decb
xchg
cmpsb
cmpsb
cli
pop
mov
xor
inc
jle
pop
adc
jns
lea
inc
xchg
fs
enter
decb
and
jne
add
inc
repnz
mov
pop
adc
hlt
or
arpl
xchg
pop
sbb
fucom
into
mov
sbb
insl
xchg
pop
mov
dec
repnz
or
call
lds
aad
cmp
imul
lret
fbstp
pop
jb
pop
in
jl
les
js
push
lods
mov
mov
dec
nop
out
insb
jae
data16
pop
push
cmp
xorl
aas
mov
sub
mov
sbb
cli
jns
sub
ss
xchg
or
imul
or
rorl
dec
and
cmpsb
mov
ljmp
movsl
inc
scas
insl
xchg
push
cmp
xor
and
sahf
push
mov
inc
lret
jmp
into
or
and
cmpsb
xchg
or
mov
xchg
decb
pop
icebp
arpl
stos
push
call
adc
test
faddp
dec
sub
sub
ficompl
js
in
push
inc
dec
jl
in
in
and
rcll
fcmove
loopne
push
inc
sbb
test
cmp
jo
dec
or
out
or
pusha
addl
or
int3
insl
push
mov
sub
push
add
pop
push
pop
adc
jns
and
xor
int
iret
shrl
je
aas
fstpl
xchg
and
cli
push
popa
stos
es
sub
daa
ss
dec
dec
jp
inc
js
xchg
pusha
flds
das
insb
cld
sub
sub
fidivl
jecxz
jge
xchg
jp
fistps
cltd
mov
pop
rcr
jb
xor
cmp
xchg
add
mov
jbe
sbb
cmpsl
sbb
ret
gs
test
and
sbbl
inc
xchg
xor
xchg
mov
add
fwait
aad
test
cmp
sti
out
ljmp
cld
scas
push
movsb
leave
jge
xchg
mov
sub
pop
jns
mov
push
dec
push
sti
lahf
mov
lock
pushf
mov
push
cmp
shr
adc
pop
pop
je
aas
mov
or
ret
push
pop
xchg
dec
push
mov
xchg
jnp
adc
shll
pop
jbe
sarl
add
or
xchg
into
pop
jae
scas
cmp
inc
enter
mov
inc
test
inc
or
rolb
sub
dec
dec
or
and
mov
pop
cs
ret
mov
lret
pop
test
mov
adc
cmp
data16
das
out
lds
push
aad
xchg
mull
jne
gs
and
rolb
fcompl
sti
outsb
ret
rorl
in
sbb
shlb
repnz
test
and
xor
push
sbb
push
dec
pop
xchg
xchg
pop
stc
sub
insb
insb
imul
test
dec
push
sbb
jecxz
das
xchg
or
ret
in
lock
inc
enter
test
xor
push
call
int3
mov
add
push
pop
inc
js
neg
jbe
and
pop
jno
mov
lret
mov
aam
or
icebp
sub
push
and
pop
mov
xor
inc
pop
jnp
test
dec
push
call
outsb
xchg
push
inc
gs
xchg
pop
add
jno
out
push
insb
and
push
je
ss
push
divb
popa
ficoms
cmp
lret
sub
popa
pop
shll
inc
jmp
in
or
add
lcall
lahf
lret
pop
jp
push
lea
clc
orl
ljmp
aas
rcll
add
rcll
pop
mov
test
aaa
xchg
cmp
mov
pslld
lahf
daa
or
ret
or
jne
cmpl
into
fisubrs
or
mov
and
lfs
xchg
arpl
push
add
pop
repz
add
or
add
and
cmpsl
mov
mov
rorl
ret
dec
outsl
mov
lods
jb
pop
loope
mov
mov
mov
dec
pop
inc
jmp
pop
fildl
xor
cltd
mov
jecxz
lret
mov
hlt
jecxz
inc
jae
cltd
ret
xor
mov
mov
cmpl
fiadds
lret
cmp
xor
mov
mov
int3
jnp
in
jb
fiaddl
adc
mov
xchg
add
fcompl
cmp
movzbl
pusha
mov
in
and
ds
inc
sub
xchg
lcall
push
adc
mov
push
inc
es
add
dec
call
pop
hlt
dec
leave
adcb
mov
dec
xchg
xchg
sbb
insb
sbb
mov
aaa
cmpsb
dec
xor
int
arpl
push
out
sub
xchg
jo
pop
jae
inc
inc
outsl
mov
push
push
das
popa
adc
cs
arpl
movsb
dec
fs
inc
or
inc
cli
imul
pop
add
or
in
lret
pushf
mov
in
pop
cmp
lahf
daa
insl
mov
fwait
sub
mov
popa
stos
sbb
shrl
divl
call
sub
add
es
cmp
jb
dec
and
in
subl
rorl
aaa
cltd
push
xchg
idiv
pop
imul
and
in
clc
test
and
pop
int3
call
xchg
jno
sbb
test
jl
mov
imul
cmpb
mov
push
lahf
pop
mov
faddl
sahf
je
fidivs
pop
insb
push
or
ret
or
mov
sbb
pop
repz
xchg
stos
cmp
xor
jno
mov
mov
jne
cmp
pop
mov
or
xchg
jge
ficompl
scas
xor
sbb
mov
daa
bound
fcomps
stos
cmp
pop
ret
fldenv
inc
mov
dec
sbb
ret
push
outsb
push
sbb
imul
shr
mov
ds
addr16
dec
cld
negb
data16
arpl
adcl
aad
clc
inc
cmpsb
cs
popa
rol
fwait
lret
je
popf
xor
and
jno
scas
adc
daa
imul
cs
cmpsl
sahf
pop
sub
fildll
fcmovnu
push
outsl
sub
or
mov
push
adc
loop
clc
subl
pop
imul
test
dec
mov
bound
sti
iret
push
mov
sbb
push
mov
cmp
mov
xor
jno
stos
dec
out
adc
loope
cltd
jg
push
jno
inc
cli
movsb
gs
gs
lcall
xchg
nop
lds
cli
bound
out
cmp
and
mull
lret
ret
cld
pop
in
out
mov
cs
pusha
imul
inc
sbb
cmp
nop
notl
out
xchg
ret
sub
xor
loop
add
test
inc
sbb
jns
mov
test
cmp
aas
idivb
adc
or
inc
inc
in
mov
adc
xor
aad
dec
enter
pop
cmp
push
pop
jge
jg
rcrl
out
sub
inc
add
shll
push
add
lcall
cmp
popf
scas
repnz
pop
pusha
lods
in
popa
push
mov
add
orl
addr16
sub
dec
ss
bnd
mov
mov
jmp
sub
fmull
push
fisubs
in
pushl
pop
outsb
lods
and
inc
and
lods
divb
decl
inc
mov
xchg
or
mov
inc
shlb
imul
popf
cmp
xchg
mov
orl
cmpsb
mov
mov
out
dec
and
rol
aaa
xor
sub
mov
imul
sub
or
mov
mov
adc
adc
jecxz
add
push
push
mov
push
sub
scas
mov
fwait
pop
lea
sub
fistps
fidivs
ja
cmp
cmp
cld
sahf
loopne
inc
lahf
cmpsl
xor
roll
inc
mov
fyl2xp1
mov
test
inc
sti
aad
mov
inc
stc
mov
add
not
test
xchg
enter
cmpsb
mov
sub
cmp
mov
xor
in
aaa
lret
fcmovu
cmpsb
cmp
movsl
lock
dec
cld
int
adc
xchg
fcomip
movsb
outsb
add
daa
dec
dec
mov
pop
fstps
push
inc
and
mov
fcoms
and
imul
or
pusha
adc
pop
adc
jne
daa
and
xlat
dec
mov
push
daa
jbe
push
cmp
js
pop
cmpsb
sub
lods
inc
lods
pop
inc
ss
xchg
xchg
adc
inc
lods
mov
cmc
and
pop
push
dec
adc
das
test
or
dec
mov
roll
sbb
sub
sbbb
jge
pop
gs
rorl
outsb
sbb
push
pop
arpl
sub
jns
sahf
scas
cmp
mov
mov
jae
xor
xchg
adc
xor
mov
pop
call
imul
cs
jbe
cwtl
sarb
mov
es
mov
ret
fiadds
iret
jecxz
mov
xchg
sbb
out
lds
insl
xor
scas
xchg
mov
movl
sahf
lret
add
hlt
es
popa
mov
call
loopne
cs
xchg
es
dec
and
cmpsl
pop
or
lods
sarl
nop
stos
mov
jecxz
out
pop
stos
pop
pop
inc
sub
call
cmp
test
push
pop
test
dec
aad
ss
xlat
mov
leave
sbb
movsb
js
mov
shlb
cltd
out
arpl
pop
test
xchg
jo
in
je
test
dec
jmp
dec
ja
sar
popf
xor
dec
aad
pop
or
jle
push
push
ficoms
mov
lcall
sbb
xchg
ljmp
repz
mov
fmull
repz
mov
and
arpl
and
push
sbb
and
sbb
lret
clc
pop
and
cmp
push
sbb
incb
sbb
cmp
rcll
lods
mov
repz
mov
or
std
xor
mov
jp
xor
shrl
and
add
std
sbb
pop
es
fs
mov
push
rcll
in
jg
lahf
lea
inc
xchg
ljmp
data16
stos
cmp
cmp
subb
cmp
pop
cmp
push
inc
clc
inc
mov
inc
inc
test
sbb
or
clc
sbb
int3
xchg
hlt
loope
xchg
rorb
out
adc
push
popa
inc
xlat
leave
xchg
test
sbb
or
xor
or
stos
jge
out
cmc
fsubl
cmp
imul
test
cs
cs
mov
fcmovb
mov
jmp
sbb
lahf
sub
jle
cmp
jae
mov
repz
sbb
or
repnz
aam
insb
xchg
out
sbbb
mov
std
out
lock
jg
inc
je
pop
popa
push
imul
sub
cmp
cwtl
jnp
and
filds
push
pop
pop
pop
ror
ja
jg
iret
push
nop
ja
fcmovb
aam
cmp
rorb
test
cmp
mov
dec
and
and
inc
call
out
shlb
rorl
sbb
or
in
mov
inc
mov
dec
rcr
push
out
lods
jns
das
mov
sbb
mov
jb
pop
lock
sub
movsb
dec
daa
cmc
push
out
sbb
sub
xor
es
dec
jb
sbb
out
fcoml
push
or
mov
ja
xchg
and
push
mov
fisttpll
ljmp
out
out
xchg
test
or
pop
jne
sub
out
cmp
aam
cmpsb
in
fcmovnu
loope
es
push
movsl
push
ja
rcr
dec
imul
cltd
mov
icebp
jb
sbb
sbb
sbb
fxch
sbb
pop
test
sbb
pop
scas
dec
xor
movsl
test
scas
pop
jle
mov
inc
jnp
xor
insl
ret
sub
and
icebp
mov
lock
pop
push
push
jp
jb
mov
hlt
mov
out
mov
adc
xchg
roll
out
sub
ficoms
jg
cltd
adc
dec
mov
mov
cltd
and
dec
jmp
scas
lods
sub
aam
in
repnz
shlb
mov
mov
repnz
xchg
dec
pop
cs
or
scas
mov
push
or
ja
cld
xchg
jnp
arpl
fcoms
or
cmp
mov
mov
aad
in
scas
and
pop
cli
jne
jl
adcl
jmp
add
or
fwait
or
das
inc
xchg
xchg
xorb
fists
sub
popl
cmp
adc
mull
adcb
cmpsl
stc
mov
outsb
cmp
xchg
fstpl
cmp
and
imul
rorl
int3
inc
lea
sub
movsl
cmc
push
inc
aam
pop
fildl
inc
dec
pop
lahf
xor
jbe
xchg
pop
ja
iret
loopne
jbe
mov
mov
mov
mov
insb
outsb
jge
mov
out
jmp
sub
fistl
mov
rcr
lock
std
inc
adc
test
push
jae
sti
ja
push
pop
gs
jae
sub
pop
aaa
mov
xor
lods
sub
jge
sub
xor
mov
incl
pop
adc
lahf
jb
int
pusha
aam
push
mov
out
ds
imul
std
out
push
pop
xchg
pop
dec
sbb
subl
sbb
sbb
mov
jmp
push
int
sub
mov
adc
dec
pusha
jp
mov
jg
out
push
insl
mov
cltd
and
fimuls
cmp
mov
or
hlt
test
mov
push
int
lea
daa
xlat
sub
arpl
std
imul
push
pop
xchg
xchg
add
pop
mov
mov
or
mov
inc
stos
rclb
xchg
es
stc
mov
hlt
mov
adc
out
je
decl
out
into
or
std
fcomi
subb
ret
dec
add
mov
repz
je
jnp
sub
xor
arpl
cmp
mov
adc
and
cmpsl
sbb
adc
cmp
imul
popa
test
out
lods
xchg
enter
es
adc
mov
adc
aam
push
sbb
mov
add
adc
gs
cltd
lcall
sarb
pop
cmc
das
cmpsb
inc
dec
inc
push
cwtl
cmp
insl
pop
popa
aad
imul
rcll
mov
std
lcall
dec
aad
mov
cwtl
fidivl
sub
jns
or
jb
inc
xor
adc
xchg
push
push
cwtl
inc
sbb
jle
add
pop
movsb
stos
cmp
cwtl
inc
pop
xor
daa
pop
dec
arpl
push
lcall
xorl
push
sbb
dec
ds
sbb
xorl
mov
das
in
sbb
lret
sbb
ffreep
push
inc
cmp
icebp
out
mov
cmpl
inc
inc
push
lea
lahf
jb
jne
ss
and
push
cli
mov
loopne
or
jns
or
arpl
cmpsl
push
or
cwtl
dec
mov
stos
and
cli
xchg
xor
dec
mov
xchg
jp
sub
mov
cmp
adc
xor
cmp
or
sub
rorb
jno
sbb
pop
push
add
mov
xor
cmp
or
inc
enter
out
aad
mov
les
mov
inc
jg
cmc
sub
stos
jne
movsl
inc
dec
popa
inc
gs
or
in
cmp
das
pushf
add
repz
std
jge
loopne
or
js
mov
cmpsb
jmp
or
sub
sub
pushl
push
movsl
mov
mov
scas
repnz
ja
xchg
pusha
call
loop
les
sub
sub
lods
jnp
enter
shll
mov
ljmp
movsb
mov
mov
inc
mov
cmp
cmc
fisubs
dec
jo
jb
arpl
dec
scas
cmpsb
lds
rorb
xchg
dec
push
shr
mov
inc
stos
jo
mov
add
outsl
adc
push
mov
xor
out
stos
pop
sub
adc
jp
pop
sti
imul
into
into
jle
push
mov
xchg
pop
das
xor
push
jbe
aas
fs
ljmp
xor
mov
xchg
jg
xchg
adc
push
cli
push
add
mov
sbb
mov
and
mov
enter
jecxz
jle
adc
xchg
aaa
in
insl
push
out
dec
clc
mov
test
xchg
orl
and
add
aad
add
dec
add
jns
jl
cmp
cmp
stos
data16
lods
dec
clc
jbe
out
je
mov
aaa
xor
xor
push
push
inc
sbb
mov
pop
add
dec
push
pop
mov
mov
jnp
loopne
jmp
pop
xlat
xlat
sti
jne
dec
cmp
nop
lock
mov
jo
stos
push
dec
xchg
fisttpl
daa
in
cld
enter
loopne
loope
lds
inc
sub
lcall
int3
xchg
shrb
add
test
movsb
sbb
cmp
jns
decb
and
fbstp
sbb
lret
and
imul
pop
out
adc
pusha
mov
xor
mov
pop
and
cmp
insb
iret
outsl
sub
sbb
dec
push
inc
xchg
popf
rcrb
aaa
movsl
adc
mov
cmp
cmpsb
sarl
add
push
or
call
pop
add
push
popf
cmpsb
lret
jp
pushf
adc
andl
ds
mov
js
xchg
ss
loopne
jb
jno
sub
sar
xlat
adc
aam
dec
loope
in
dec
cmpsb
imull
xchg
outsb
add
or
cmp
inc
pusha
fucomi
dec
mov
and
stos
popa
dec
loope
cmc
jno
xor
mov
out
bound
mov
dec
mov
adc
mov
push
inc
jno
xchg
cmpsb
add
fs
movb
lea
mov
mov
dec
fstpl
loope
test
pop
cmovle
in
movsb
fidivs
push
or
sub
int3
push
clc
gs
fs
insb
sub
xchg
jae
aad
mov
adc
les
mov
into
sbb
jno
mov
cmp
jb
xchg
out
iret
or
fdivrs
flds
sub
sti
pusha
xchg
out
movsl
xchg
cmpsl
push
ljmp
xor
ret
out
jnp
ds
add
push
andl
movsl
add
jae
mov
xor
inc
les
jne
jnp
test
pop
xchg
aas
enter
cmp
add
jno
test
js
call
pop
sub
sub
mov
ja
enter
in
stc
or
inc
mov
hlt
aas
iret
inc
cmp
xchg
xorb
lods
fwait
jmp
popf
int
lahf
aad
sbb
dec
icebp
lcall
negb
dec
xor
call
mov
bound
pusha
insb
push
aad
cwtl
das
pop
iret
rcrb
sbb
inc
inc
stos
mov
push
int3
stc
jns
xchg
outsb
jnp
out
dec
fcoms
fistpll
sti
mov
push
call
lcall
jo
aam
dec
ror
pop
jbe
xchg
mov
in
into
or
ret
jmp
out
jge
pop
dec
inc
gs
aad
jne
sbb
jbe
test
push
pop
inc
cmpsl
xchg
xor
mov
fsubrl
add
mov
push
add
movsb
mov
inc
add
lock
movsb
lahf
in
andb
icebp
sub
ljmp
mov
cmc
jbe
adc
or
enter
add
inc
mov
stos
ret
inc
lea
sub
into
push
xor
jb
or
mov
test
push
mov
sub
sbb
sub
cs
pop
xchg
sbb
inc
test
loopne
mov
adcl
jmp
cmp
pop
loopne
cmp
fstpl
sti
fbld
xchg
dec
or
cmp
ja
or
js
mov
test
rolb
xchg
imul
mov
push
neg
xchg
mov
push
mov
sub
loope
pop
mov
pusha
dec
cmp
push
mov
mov
fisubs
xor
push
cmp
loope
clc
or
mov
cmp
adc
jecxz
xchg
mov
lods
sbb
ljmp
loop
sbb
out
aam
mov
icebp
ljmp
and
sbb
int3
or
dec
test
add
pop
sbb
dec
lcall
loopne
scas
push
and
adc
ljmp
rcrb
adc
mov
add
sahf
cld
push
mov
mov
xor
xchg
mov
fcomps
jecxz
mov
sbb
lahf
leave
mov
popa
xchg
dec
hlt
xor
push
xor
dec
or
repnz
enter
fucomip
out
dec
sarb
popf
or
add
std
xor
mov
xchg
lea
lock
dec
inc
nop
sub
sbb
stc
jg
imul
in
je
dec
mov
aaa
movsl
ret
je
cmp
hlt
mov
out
adc
fisubrl
adc
mov
aam
in
out
mov
loop
mov
mov
pop
scas
rcrb
pop
jl
pop
dec
mov
sbb
das
in
push
scas
les
add
inc
jge
xor
ss
adc
sbb
or
cmp
popa
leave
mov
in
clc
sbb
mov
and
xor
push
js
pop
mov
stos
stc
mov
in
dec
cmp
mov
lods
push
movsl
mov
cmp
cmp
pop
fld
xor
mov
inc
cmpsl
mov
popf
sub
sbb
adc
out
inc
or
repz
dec
repz
pop
call
mov
cmp
jp
sarl
clc
mov
sahf
xor
lcall
bound
mov
subb
mov
sbb
test
iret
mov
add
xchg
cld
mov
xor
je
cmpsb
aam
and
xor
xchg
cmp
out
adc
inc
pop
adc
mov
xor
lret
cltd
mov
xchg
fldt
xor
sbb
add
testl
pop
and
mov
xchg
lods
xchg
inc
xchg
add
sub
pushf
call
mov
int
xor
std
ss
test
rcr
test
and
popa
mov
pop
push
rorl
pop
push
repnz
fwait
ja
xlat
pop
enter
sub
ret
in
scas
pop
cmp
adc
lcall
je
lds
sete
mov
imul
adc
mov
add
stos
adc
pop
movsl
rorl
jl
dec
or
clc
mov
xor
mov
add
popf
pop
mull
add
int
les
jb
notl
dec
xor
and
call
in
or
mov
ret
lret
jo
jecxz
pop
sbb
adc
adc
pop
push
and
inc
add
mov
imull
leave
unpckhps
lods
or
cli
repnz
dec
xor
imul
push
cmp
call
arpl
jno
mov
mov
cwtl
sub
xor
out
lret
pushf
mov
pop
repz
xchg
jp
jae
je
mov
cld
mov
cmp
imul
jmp
cmp
xor
mov
mov
lea
jno
test
lea
js
or
les
repz
sbb
jae
stos
xchg
fstl
mov
lock
js
daa
or
lock
arpl
xor
xor
pop
sbb
jmp
mov
jns
mov
cmp
aas
sahf
add
and
shlb
or
inc
dec
adc
adc
add
cmp
dec
mov
mov
jne
jp
sub
push
and
jg
jle
dec
out
sbb
push
scas
clc
and
push
lret
jmp
mov
dec
imul
push
into
jg
jnp
aam
ret
cmp
inc
xchg
or
notb
out
sahf
loop
mov
and
pop
orb
push
and
jg
jg
cmp
jle
push
mov
sti
popa
xlat
icebp
sbb
cmp
test
push
inc
mov
jae
aaa
cmpsb
imul
cmp
jg
icebp
cwtl
shrb
add
mov
dec
or
and
jge
push
cmp
add
push
enter
js
pop
mov
hlt
mov
mov
pop
subb
sub
sbb
ds
add
fstpl
int3
cwtl
pop
imul
sahf
in
iret
or
mov
bound
sbb
mov
daa
dec
ficoml
cwtl
or
jmp
xchg
nop
push
fnstsw
cmp
stos
add
insl
sub
xchg
fwait
fwait
fs
xor
fucomp
push
push
jge
jl
icebp
mov
sbb
cmp
ss
loop
push
cmpb
jns
dec
push
mov
stos
jmp
cmpsb
add
and
mov
dec
popa
sar
jno
pop
lods
jne
decl
jns
lea
outsb
mov
out
sbb
cmpsl
sbb
insb
lods
sbb
je
add
frstor
add
cmpsl
test
insl
aam
enter
enter
xchg
fisttpll
call
push
icebp
mov
cmp
in
arpl
push
cmpsb
stos
mov
mov
jecxz
push
sub
lahf
mov
and
sbb
add
jmp
fistps
push
lock
movsb
loope
jge
rcl
add
pop
jb
mov
xchg
sub
dec
sbb
rsqrtps
repz
dec
mov
sbb
or
daa
xchg
adc
test
iret
jl
adc
ljmp
fsubl
jns
jb
out
jmp
popf
jmp
sbb
push
movsl
sahf
pop
imul
aaa
bound
aas
dec
popf
rol
lcall
add
bound
daa
pop
jmp
addr16
ja
sub
leave
add
jmp
ja
out
mov
inc
rcrb
xchg
test
lods
lret
dec
fcmovnb
dec
jecxz
ds
pop
ret
mov
popf
fs
mov
inc
addb
addr16
xchg
out
mov
es
imul
xor
dec
sbb
mov
xchg
cwtl
cs
jg
mov
add
loopne
mov
and
aaa
stos
into
push
cmp
sar
pcmpgtw
xchg
enter
push
fimull
pop
jg
adc
and
and
push
mov
mov
bound
jg
mov
add
dec
xchg
and
and
insl
lcall
dec
frstor
adc
xchg
ret
mov
sub
sub
cs
test
jg
jg
mov
vdivps
add
xor
enter
jb
out
jge
mov
addr16
jo
arpl
mov
xor
add
setns
xchg
pop
test
sub
daa
jl
sbb
sbb
dec
mov
cmp
pop
mov
push
mov
mull
dec
popf
xchg
pop
xorb
jae
cmp
cmp
xchg
push
dec
cmp
dec
pop
mov
in
mov
xor
ret
dec
in
jge
lock
cmpb
xchg
dec
xor
aad
arpl
lds
leave
or
fsub
clc
lds
mov
xchg
js
mov
push
enter
sbb
test
daa
pop
je
in
and
sub
jl
in
addr16
jo
lret
int
mov
enter
inc
xor
mov
adc
inc
cwtl
mov
fcmovnu
mov
lods
push
sbb
dec
push
sbb
int
cmp
cmp
popa
xchg
lahf
mov
cmp
xchg
test
lahf
and
test
fstpl
outsl
mov
xchg
out
add
pop
test
js
add
sbb
xlat
lret
sbb
dec
mov
jnp
and
cli
dec
movsl
ds
loope
rcrb
shlb
jae
pop
fucompp
dec
call
pusha
jae
cld
sub
pop
stos
popa
aad
inc
cmc
popf
fdivrs
pop
xor
inc
popf
xchg
fdivrp
dec
dec
aaa
negl
jecxz
and
dec
cmp
movsb
outsb
inc
lretw
xchg
mov
mov
pop
aad
ljmp
inc
or
push
dec
jbe
mov
adc
sbb
jae
rclb
inc
jp
xchg
pop
inc
pop
insb
inc
movups
dec
icebp
clc
addr16
sarl
inc
ss
or
es
sbb
cmc
mov
xor
jb
mov
imul
popa
fnstsw
neg
jo
les
adc
scas
es
lret
setb
xchg
push
shlb
aaa
aad
repz
xchg
icebp
push
cmp
push
fcmovnbe
in
insl
pop
cltd
out
roll
xchg
fwait
cmp
push
mov
mov
sub
jp
xchg
aas
push
mov
outsb
dec
insl
insl
push
xchg
ret
les
sbbl
pop
enter
sub
xor
fcomps
inc
lret
and
inc
repnz
jmp
in
sarb
push
pop
in
pushf
hlt
shll
incb
push
xor
das
add
jecxz
in
mov
and
pop
cmp
pushf
lcall
mov
dec
push
xchg
cmpsl
icebp
cld
and
stc
cmpsl
mov
icebp
in
mov
dec
test
and
cwtl
jge
inc
sbb
mov
sbb
stc
jge
cli
mov
popf
jmp
push
stc
ret
cmpb
xchg
pusha
cltd
lock
stc
jnp
popa
add
imul
inc
cmp
pop
sbb
cltd
imul
jg
in
roll
push
jb
lods
mov
stos
and
roll
push
or
mov
and
jae
pop
cli
mov
pusha
adc
inc
in
rorb
outsb
or
fcoml
sub
push
inc
mov
aaa
mov
aaa
and
push
and
sahf
mov
add
sarb
push
xchg
movsl
leave
adc
inc
or
xchg
cmp
call
lds
jge
test
movsb
jae
imul
push
and
mov
mov
inc
cmpsl
lods
addr16
dec
jno
sbb
nop
dec
fidivs
sbb
adcb
fistps
jp
hlt
inc
mov
cmp
and
cmpsb
mov
pop
jg,pt
sti
stos
sbb
stos
mov
movsb
pusha
dec
rcll
and
or
cmpsb
mov
inc
lds
sahf
cmp
add
mov
js
std
sbb
jae
push
mov
lahf
out
les
sahf
sbb
cmp
xchg
loop
lods
lods
sbb
and
into
rorb
mov
stos
push
movsl
mov
cli
push
stc
mov
pop
outsl
icebp
mov
sub
imul
mov
jbe
lods
xor
pop
arpl
jg
mov
jb
mov
push
std
insb
fdivrl
outsl
and
movhps
sbb
and
mov
inc
jns
stc
adc
pop
data16
repnz
test
mov
pop
push
push
call
add
inc
outsl
sar
xchg
fisubs
fidivs
cmp
mov
int3
xchg
out
adc
nop
pop
cli
lods
lret
cmp
insl
icebp
negl
jle
movl
add
mov
push
xor
jnp
sahf
pop
cmp
ret
mov
decb
and
xchg
inc
popa
sbb
cmp
mov
sbb
sbb
sbb
aam
outsb
push
or
lret
cli
rcrl
aam
out
dec
xor
leave
sub
lahf
div
cmc
cmp
dec
loope
std
xor
sbb
jg
sub
mov
icebp
sbb
vphaddbd
divl
xchg
out
add
pop
sbb
mov
fisubs
mov
mov
mov
les
push
sub
add
mov
dec
je
test
rclb
lea
and
das
xchg
inc
das
notb
sub
dec
imul
mov
mov
fidivrl
inc
test
lods
mov
ds
test
cmp
movsl
nop
sub
jmp
js
imul
or
arpl
xchg
mov
jle
in
fs
xorl
int3
shl
rcll
adc
adc
cli
test
pop
sub
xchg
mov
inc
jo
setg
dec
shrb
mov
rol
pop
in
js
pop
mov
push
cmp
repnz
mov
das
xchg
bnd
adc
hlt
cs
stos
pop
dec
push
cmc
jbe
inc
setge
jno
sub
add
cli
sub
inc
mov
xor
xor
mov
dec
dec
popf
and
adc
dec
inc
inc
lock
pop
cmp
jns
subb
imul
mov
sbb
aas
jmp
pushw
cli
loop
outsb
xor
mov
cmc
imul
jecxz
fildll
in
lea
xor
cld
es
jge
jne
push
sub
ja
enter
mov
mov
dec
xchg
xchg
in
shll
popf
notl
mov
adc
push
mov
fnstcw
xchg
lock
ret
loope
pop
sbb
push
and
stc
test
pop
lahf
cmpsb
test
stos
das
stos
sub
push
je
fs
dec
pop
stos
push
mov
aas
mov
push
cmp
bound
cmc
mov
das
das
lods
or
sbb
imul
hlt
cmpsl
test
ficomps
pop
clc
add
mov
add
pop
cmp
cmp
pop
mov
pop
xor
push
fwait
pop
mov
mov
loopne
dec
mov
jns
aaa
push
add
or
mov
jne
lods
nop
lret
sbb
fimuls
mov
or
bound
out
jns
sbbl
fsubs
mov
or
and
inc
pop
repnz
push
mov
mov
lcall
mov
leave
inc
dec
jbe
jnp
test
dec
divl
rcrl
leave
push
cmp
sub
rorb
mov
mov
out
ljmp
jbe
adc
imul
xchg
les
push
push
mov
sub
adc
fwait
cmpsl
movsb
lret
sbb
out
push
ja
and
adc
lahf
in
loope
mov
mov
mov
rorb
mov
mov
xchg
sahf
push
mov
add
pusha
movsb
or
xchg
mov
xchg
mov
test
jl
in
pusha
adc
hlt
loope
adc
fadd
repz
and
inc
sub
in
xchg
mulb
push
rcll
ret
ljmp
cld
adc
clc
cmp
and
xchg
cmpsb
lret
pop
inc
jno
fnsave
pop
or
push
add
mov
xchg
adc
ja
ret
addr16
ficoms
sub
add
jns
pop
and
data16
incl
std
in
pop
mov
out
in
loope
aas
imul
cltd
stc
je
shrl
and
xchg
icebp
xlat
pop
hlt
lahf
dec
imul
mov
pop
dec
jae
pop
mov
jmp
cmp
inc
cs
in
dec
fs
push
aaa
lods
xor
xorl
add
addr16
loop
loop
lods
or
sbb
jle
sbb
movsb
in
loop
xchg
ja
popf
or
into
jmp
sbb
daa
add
cmp
dec
cmp
mov
push
mov
fdivl
out
adc
nop
sahf
mov
xchg
or
inc
push
arpl
dec
sbb
in
dec
int3
clc
cmp
adc
aaa
dec
inc
sar
jg
jp
push
dec
insb
loope
push
push
sbb
inc
ss
mov
pop
nop
pusha
jge
ss
and
pop
mov
push
mov
mov
cmp
add
scas
pop
and
cmp
insl
arpl
out
lds
cmp
addr16
pop
push
push
jg
mov
jle
popf
fwait
popf
xabort
adc
mov
out
mov
movsb
stos
incb
add
and
in
mov
les
xor
inc
movsb
jno
push
fsubrl
mov
test
xchg
loop
pop
adc
in
inc
fisubrl
sahf
pop
cmp
loope
sub
pop
cmpsl
pop
out
dec
cmp
fsubp
cld
add
xchg
cmc
jmp
fbstp
pop
outsb
cs
jns
in
pop
nop
ret
adc
pop
xchg
rolb
add
psraw
jmp
notb
dec
test
xchg
push
fisttpll
and
mov
in
lock
leave
dec
mov
and
sbb
scas
adc
popa
jmp
mov
inc
xchg
fisubs
sbb
adc
pop
xchg
mov
push
into
test
sub
cmp
mov
xchg
lock
test
jle
push
sbb
cmpsl
int
orb
loope
fs
mov
and
cmp
insb
dec
testl
jecxz
fs
enter
mov
sbb
jne
adc
mov
dec
jo
sub
or
sub
inc
mov
movsl
mov
mov
hlt
out
shll
jnp
pop
or
lods
aad
mov
rcll
lret
xchg
fisttps
xor
test
ret
sbb
push
push
daa
mov
sbb
inc
leave
shll
fcmovb
sti
push
adcl
lret
lds
add
imul
push
dec
into
sbb
inc
xor
fistps
add
and
movsl
dec
cltd
mov
add
sbb
enter
jle
and
loop
inc
mov
insl
or
sti
mov
push
mov
popa
cmc
pop
and
xor
daa
mov
insl
iret
rcr
movsb
mov
jb
ja
bound
in
mov
icebp
fs
aaa
fsts
jl
inc
jnp
inc
imul
fsts
movsb
jb
mov
lods
dec
add
xchg
fcmovb
sub
mov
into
mov
fs
pusha
lods
push
add
jae
add
inc
rorl
jle
aaa
mov
mov
mov
sub
sbb
js
lahf
hlt
push
cmpsl
aas
xchg
test
and
mov
sbb
ficomps
in
push
in
push
fisttpl
and
loope
jns
movsb
sub
mov
call
dec
je
icebp
or
outsl
lock
push
dec
dec
add
mov
ficomps
mov
add
lea
xor
mov
adc
rclb
in
push
ss
dec
cmpsb
mov
frstor
cmp
mov
sub
push
xchg
movsb
adc
cmp
lock
and
xchg
pop
jmp
aam
dec
shld
mov
sub
push
mov
fisubl
and
mov
lods
mov
imul
shll
pop
hlt
jbe
lahf
mov
shr
lea
in
sub
pop
adc
std
and
push
mov
rorb
mov
cld
jae
int
repz
out
scas
xchg
roll
fiadds
aas
sbb
mov
aam
icebp
push
mov
cmp
mov
mov
lret
in
or
lock
aas
sub
push
fiadds
sub
pop
xchg
push
dec
testl
rolb
fnstcw
rorl
jg
inc
je
cltd
int
lret
add
sbb
sarl
lods
nop
out
lret
popa
inc
aaa
push
pop
arpl
push
or
jl
add
in
ljmp
or
cltd
sbb
in
je
add
push
fnstenv
xchg
fwait
out
idivl
or
out
clc
dec
test
jle
sub
div
sbbb
aas
xor
inc
test
shrb
call
ljmp
lods
pusha
add
test
pop
xor
inc
jnp
add
sbb
cmpb
filds
ret
sbb
dec
sarl
mov
loope
cwtl
nop
jb
push
pop
mov
add
lods
mov
test
inc
iret
adc
je
in
inc
scas
jb
cmpsb
stos
movsl
cs
jg
dec
scas
push
sbb
dec
jns
sub
mov
cmp
dec
pcmpeqw
jge
pop
les
xor
inc
cmpsb
and
test
test
loop
imul
xchg
and
out
shrb
pop
mov
lock
loope
jmp
inc
xchg
inc
iret
mov
dec
mov
jp
pop
push
cmpsl
push
cmpsb
ret
cmp
in
out
jbe
call
cmp
fbstp
sahf
sahf
jns
xor
inc
js
test
dec
leave
fiaddl
into
mov
rolb
or
mov
int3
push
mov
outsb
push
mov
jecxz
cmpsl
loope
inc
sti
call
test
shl
push
jl
jge
pop
adc
xchg
pop
push
cmp
dec
jae
aas
push
testl
mov
adc
dec
xlat
pushf
insl
dec
mov
lahf
dec
mov
loop
push
jns
inc
out
or
mov
mov
xor
aad
leave
out
cmp
jge
jmp
sbb
in
ja
xchg
mov
movsb
and
jmp
push
sbb
popa
fwait
lods
repnz
out
dec
inc
xor
sbb
mov
ret
nop
adc
xlat
mov
in
ja
xchg
ja
rorb
aad
fisubrl
cmp
das
push
jne
imulb
movsl
scas
and
js
cltd
mov
xchg
xor
sbb
sbb
daa
int
adc
jmp
mov
adc
mov
shll
mov
jmp
push
jmp
pop
xor
filds
jg
ret
pop
lret
jg
pop
adc
insb
push
pusha
fcompl
cmp
pop
stos
jnp
mov
std
nop
cli
pop
imul
leave
mov
push
or
pop
cltd
adc
mov
pop
mov
pop
in
lret
sahf
jnp
ficoms
out
repnz
outsl
xchg
icebp
push
cmp
mov
bound
xchg
jo
pop
leavew
inc
enter
sahf
push
sub
subl
cmp
pop
fiaddl
lods
cli
scas
adc
add
push
dec
jae
dec
or
mov
dec
mov
lods
jne
jns
xchg
adc
pusha
pop
gs
add
lret
les
jno
push
xchg
lods
jo
mov
adc
stc
pop
icebp
in
xor
add
in
das
xor
pop
mov
pop
movsb
push
pop
mov
dec
xor
add
sbb
jo
adc
pushf
sbb
hlt
and
sub
pop
xchg
pop
xchg
mov
pop
or
int3
movl
adc
adc
add
js
rolb
int3
aas
mov
pop
pusha
iret
or
add
sub
push
mulb
or
xchg
popf
fisubs
xor
add
cmpl
add
or
ret
repz
mov
pop
mov
mov
cltd
arpl
xor
add
or
and
call
nop
aas
xchg
jg
incl
rorb
shlb
pause
sbb
orb
movsb
mov
mov
out
test
pusha
ja
mov
xchg
pop
aad
adc
scas
lds
lds
dec
push
jecxz
xchg
dec
call
inc
bnd
mov
pop
and
mov
add
xor
adc
in
push
add
lods
inc
fsubp
push
int3
add
mov
push
mov
lea
scas
push
test
mov
pop
push
out
xchg
in
leave
movsl
push
es
jns
and
lret
jbe
lcall
or
bnd
cmpsl
fs
or
mov
hlt
sbb
fcmovnbe
sub
aam
adc
sub
add
cmp
cwtl
sti
jb
sahf
xchg
inc
jo
scas
add
push
mov
out
ljmp
es
enter
adcl
add
inc
mull
fadds
cwtl
xchg
movsl
call
call
mov
jecxz
out
push
iret
subl
gs
nop
and
imul
rcrl
gs
scas
push
mov
or
lret
lea
adc
cmp
sub
dec
adc
repz
xchg
ficoms
insb
sti
ds
dec
popa
int3
mov
jge
and
jno
xor
xchg
add
add
adc
lods
mov
sahf
gs
sub
inc
mov
adc
mov
xlat
and
jns
gs
dec
add
dec
popa
cld
inc
js
jp
in
out
dec
pop
cmpsb
or
sarl
sub
insb
lods
aad
xor
call
shrb
lock
lret
ljmp
xor
dec
sbb
adc
ret
fsubrp
outsl
push
call
cmc
push
mov
dec
cmp
inc
add
daa
nop
cli
movsb
insb
sahf
pop
into
mov
test
out
rcl
push
push
ss
jnp
fisttpl
repnz
xchg
stos
sub
add
jb
sbb
sub
pop
mov
lcall
push
push
mov
lods
int
rcrb
subb
aam
jecxz
dec
jle
xchg
cmp
push
inc
xchg
repnz
repnz
cs
ds
sahf
mov
sub
mov
stos
ret
push
xor
fcomp
xchg
out
mov
add
rorl
cmc
pop
pusha
mov
decb
imulb
shll
and
dec
push
and
gs
mov
shll
loopne
add
gs
add
inc
into
and
lock
inc
pop
adc
inc
mov
out
and
pop
adc
adc
aas
mov
pusha
in
dec
adc
xor
and
cmp
dec
push
xchg
sbb
ss
aam
pop
shl
jp
xchg
dec
js
repnz
xchg
pop
xor
montmul
cmpsb
inc
pop
mov
stc
inc
lahf
fbstp
les
js
popa
scas
dec
inc
or
add
xor
loope
jge
push
cmpsl
push
loopne
and
arpl
sbb
repz
movsl
sti
jo
aam
pop
mov
dec
sub
and
pop
dec
repz
xor
ja
mov
in
dec
mov
pop
add
or
leave
or
cltd
lods
fdivr
xchg
pop
jecxz
mov
popf
loope
dec
in
test
adc
push
ss
adc
add
and
scas
scas
sbb
xchg
cmp
xchg
adc
das
dec
mov
fldcw
std
mov
cmpsb
push
sbb
sarl
imul
aam
and
push
xlat
or
cwtl
movsb
es
cmc
add
in
jbe
fistpl
clc
mov
inc
sahf
call
dec
repz
xlat
push
xchg
inc
loop
xchg
lret
mov
cmp
jne
mov
jns
mov
cmp
inc
xor
ret
pop
push
repnz
add
cltd
sub
lea
push
inc
pop
out
inc
fwait
sahf
aam
pop
out
xor
gs
stos
xchg
or
scas
mov
cmpsb
shr
stc
and
aas
bound
push
or
les
enter
add
movsl
call
loop
xor
insb
jg
add
scas
aas
fwait
inc
jl
xchg
fcmovnb
in
repnz
push
push
xor
sahf
test
shlb
xchg
dec
test
sub
ja
inc
dec
jo
mov
mov
aam
xor
clc
lea
ds
es
cmp
push
int
mov
dec
mov
push
inc
adc
dec
add
mov
mov
xchg
xor
out
xor
push
aaa
test
adc
movl
je
adc
lret
mov
adc
mov
sbb
lods
lods
loop
push
dec
inc
inc
xchg
mov
jl
xchg
out
mov
popa
lods
xchg
hlt
mov
test
je
les
mov
pop
movsb
cld
pop
inc
xor
outsl
pop
mov
jns
cmp
mov
loop
lea
invd
lret
dec
incl
out
loope
cmp
or
dec
push
add
xchg
xorb
mov
push
mov
jno
cmp
cmp
push
out
sbb
sbb
mov
out
jge
std
lods
pusha
outsb
pop
mov
rcrl
in
lahf
sbbb
mov
dec
pop
mov
push
and
jp
lea
in
sbb
add
mov
inc
int3
test
xchg
push
mov
jge
or
pop
in
sti
pop
mov
xchg
mov
pop
mov
push
jo
pop
icebp
mov
andb
xor
jb
pop
kmovw
fwait
mov
or
fcmovnbe
stos
ss
aaa
or
mov
lods
gs
adc
cmc
mov
std
cmp
out
jp
dec
inc
dec
sub
es
std
scas
xchg
dec
dec
dec
repz
or
xlat
fnstsw
inc
xchg
call
ss
jnp
jo
cwtl
push
pushf
mov
jno
nop
imul
push
mov
add
add
push
push
clc
inc
leave
adc
jge
fidivl
pushf
lret
mov
add
xchg
dec
sahf
pop
cmp
mov
cmp
sub
std
mov
sub
popf
pop
jg
mov
test
and
enter
cmpsb
roll
cmpsb
femms
in
or
mov
fs
pushf
enter
aas
mov
cmpsl
rol
sub
ja
sub
mov
lret
or
jp
adc
insl
rolb
mov
loopne
adc
fldcw
pop
hlt
mov
add
fistpll
push
mov
test
pop
lods
cmp
call
inc
gs
add
mov
stc
xchg
stos
daa
faddp
insl
cmpsb
jl
ret
add
scas
loop
xor
pusha
aas
int
es
sbb
add
mov
jno
sar
and
jmp
inc
dec
ds
mov
adc
jp
sub
outsl
loopne
loop
sub
sub
mov
cmp
addl
jbe
dec
test
or
stos
inc
jo
jl
mov
fbstp
push
cltd
sub
fistl
in
jae
lea
in
cwtl
mov
cmovs
jne
adc
xor
pop
dec
dec
xchg
add
sbb
lahf
sub
out
mov
add
sub
cld
inc
repz
shrb
es
mov
xchg
mov
or
mov
adc
pop
pusha
or
es
jne
in
mov
movsb
inc
push
xor
push
mov
test
adc
sbb
mov
adc
sub
lea
mov
mov
ret
mov
jge
mov
sub
mov
sbb
mov
xchg
addr16
dec
push
pop
sbb
sbb
inc
aas
mov
and
xchg
xchg
mov
lods
xadd
cmp
push
fucomp
jp
adc
mov
fcomps
fwait
cmp
test
xchg
cmpl
pop
lds
pop
repz
inc
push
mov
mov
dec
in
or
imul
mov
cmp
sub
pop
add
out
mov
smsw
das
xchg
aad
jmp
stc
shlb
lds
xor
outsl
add
mov
jne
xchg
and
and
dec
addr16
je
out
cwtl
xchg
ss
rolb
lds
ret
xlat
lcall
js
xchg
xor
xchg
push
mov
cmp
xchg
dec
in
into
rcrb
mov
gs
enter
xchg
mov
shlb
clc
or
sbb
bound
push
xor
push
inc
xor
xor
or
aad
shl
aam
mov
test
leave
frndint
cmp
xor
popa
xchg
and
aam
cmp
insb
xchg
icebp
add
loopne
jecxz
push
cmp
push
test
pop
mov
aas
loopne
out
cltd
insb
xor
sbb
pop
inc
or
int
inc
jae
cmp
add
mov
mov
mov
push
cmp
inc
push
jnp
cmp
mov
mov
imul
movsl
gs
dec
cs
dec
mov
mov
aaa
xchg
inc
rolb
push
mov
js
cmp
cli
xlat
mov
sub
pop
sbb
test
ret
lahf
sub
ss
jmp
xlat
scas
inc
mov
push
rolb
shl
dec
gs
mov
or
push
fadds
insb
dec
push
pushf
and
jmp
or
mov
mov
pushf
or
and
mov
ss
mov
scas
shl
std
insb
fwait
and
mov
test
fnstcw
adc
mov
push
ljmp
push
negb
sti
xchg
xchg
sti
jmp
sub
out
add
outsl
jbe
xchg
push
add
push
xor
lods
clc
pop
stos
ret
sahf
cld
sbb
inc
pusha
push
les
outsl
lret
movsb
dec
push
mov
mov
and
jnp
jmp
es
test
cmp
mov
dec
dec
cld
sahf
out
pop
add
test
xchg
loopne
inc
xor
in
insl
mov
mov
dec
pop
dec
push
mov
mov
stos
je
push
aad
xchg
sub
daa
aam
jle
ret
cmc
mov
and
into
mov
push
stc
ja
mov
loope
jnp
add
rcrl
add
lret
sahf
fiaddl
outsb
outsb
popf
cltd
ret
hlt
xorl
andl
pushf
xor
xchg
outsb
pop
dec
mov
fldl
fnstcw
loope
out
test
jne
sub
push
xlat
xchg
mov
mov
inc
push
loop
insb
testl
jl
in
push
xchg
call
test
stos
insl
leave
bound
xor
jecxz
cld
movsb
scas
xor
dec
imul
rcl
xor
xor
pop
in
in
call
cwtl
pop
push
sub
mov
out
pop
sbb
loopne
mov
mov
mov
flds
and
sub
mov
daa
jge
pusha
leave
dec
jecxz
vpaddb
dec
jecxz
mov
insl
mov
sbb
dec
int
or
mov
xor
push
fwait
cwtl
mov
push
push
sbb
lock
xor
jb
mov
pop
dec
fldl
cmp
test
ja
mov
dec
xor
repz
push
lahf
cltd
inc
inc
jns
dec
jo
sbb
fcoms
fistpl
loopne
jns
cwtl
repnz
add
lds
or
je
pop
jne
test
jle
stos
stc
lcall
rcrl
pusha
jl
inc
loopne
add
cmp
dec
test
and
iret
mov
loopne
push
lods
inc
cld
dec
loopne
fiadds
dec
mov
push
ret
inc
and
push
int3
rcr
nop
mov
push
mov
xchg
sub
test
js
stos
add
cwtl
or
cltd
js
inc
lock
into
xchg
ret
sar
pop
lods
std
adc
mov
cmpsb
and
mov
int3
test
ja
sbb
inc
inc
insl
push
icebp
push
or
int
sbb
mov
sti
lcall
push
fistps
add
shl
dec
scas
loopew,pt
pop
mov
mov
and
pop
mov
stos
xchg
jmp
popf
pop
cmp
dec
and
lcall
clc
jmp
inc
or
mov
movsb
lods
les
adc
push
fsts
mov
pusha
cmpsb
or
aam
cmp
rcll
jns
mov
lcall
xchg
xor
rcrb
push
mov
aaa
in
shrl
aaa
or
lret
mov
push
bound
or
pop
add
mov
jb
sbb
sti
push
cmp
xchg
add
push
scas
pusha
lea
jne
adc
or
rolb
iret
or
and
add
cwtl
jle
pusha
jbe
test
push
out
int3
jbe
int3
jo
push
pop
sub
aam
or
pusha
and
imul
scas
out
fiadds
cmp
xor
and
je
dec
mov
sbb
xchg
lahf
icebp
test
rorl
and
or
out
orb
mov
adc
mov
inc
aad
xor
sub
xor
jmp
insb
lret
and
stc
mov
mov
out
xor
mov
mov
sub
es
or
ret
ja
jecxz
das
xor
cmp
push
mov
jecxz
fstpt
and
pop
or
incb
cmp
nop
xor
std
mov
mov
jae
ss
adc
mov
outsl
jns
adc
repnz
in
push
sub
gs
aaa
adc
aad
fwait
sbb
jmp
inc
cmp
lret
daa
sahf
mov
adcb
mov
xchg
jo
and
jns
icebp
or
push
inc
inc
insb
mov
out
imul
jg
mov
arpl
add
xor
xlat
sub
add
push
inc
aam
insb
xor
dec
lcall
cmp
repz
fwait
xchg
mov
pop
inc
and
add
mov
jns
hlt
mov
std
loope
mov
inc
add
mov
mov
ret
ljmp
pop
outsl
je
cmp
fsubrl
stos
ret
or
xor
stc
ss
inc
pop
dec
mov
jmp
jbe
test
mov
xor
into
pop
sub
fcmovnb
xorl
jge
inc
pop
out
or
push
xor
fmuls
pusha
fscale
cs
rorb
jno
subl
pop
out
in
push
mov
inc
sub
xor
imul
inc
cmpsb
imul
mov
mov
or
lea
inc
cmpl
pusha
clc
andl
mov
les
pop
mov
jl
mov
fildll
sar
cmp
cmp
stos
cmp
pop
fstl
mov
jb
jno
inc
xor
xor
xchg
or
mov
ret
xchg
mov
mov
lods
and
mov
jmp
push
popa
jb
mov
or
ret
cli
pop
shrl
and
cmpsb
pop
pop
roll
imul
dec
fcmovne
andl
cmp
js
aas
out
addr16
repz
cs
xor
and
data16
cli
stos
push
test
test
idivl
ret
dec
and
das
mov
xlat
daa
xchg
mov
adc
movsb
shrl
arpl
push
or
lcall
divl
popf
cmc
xor
xor
mov
js
add
add
fistl
in
repnz
inc
cmpsl
pop
into
popf
ljmp
inc
dec
add
add
outsb
test
dec
in
in
lods
cmp
add
fnstenv
dec
push
ret
adc
pop
add
inc
stc
mov
popa
adc
or
rcr
in
repz
sub
ja
adc
jae
icebp
ficompl
push
movswl
leave
vpaddq
pop
pop
clc
xchg
int
pop
mov
inc
pop
jmp
int3
cmp
pop
xchg
xchg
sbb
loope
sub
mov
adc
or
and
cltd
rorb
sub
pop
test
outsl
xchg
sarb
pop
rol
popa
sbb
out
in
pushf
fadd
or
xor
mov
xchg
jp
addl
imul
sub
mov
pop
in
test
cltd
sarl
or
dec
jae
cmp
loop
test
adc
add
push
test
call
out
sahf
dec
push
cmp
loope
pop
sub
stc
ret
lcall
add
inc
mov
and
dec
lods
pop
pushf
push
aad
and
mov
xor
mov
xor
mov
clc
and
sbb
imul
dec
sub
dec
pop
mov
sti
inc
jp
and
xchg
cmp
jns
into
mov
pop
mov
call
and
clc
push
cs
jne
mov
stos
adc
scas
mov
ds
xor
out
cmp
mov
mov
xchg
sub
dec
pop
rolb
sub
in
mov
into
push
lea
insb
lock
aas
jge
jo
insb
hlt
inc
and
insl
sbb
cld
cmp
push
cmp
mov
popl
shl
vorps
pop
mov
add
ljmp
pop
ljmp
pop
mov
pusha
cmp
fdivrs
jno
icebp
lea
mov
push
adc
cs
mov
pop
shufps
push
xchg
mov
push
jne
xchg
jb
lahf
add
xor
mov
rorb
popa
cmpsb
js
pop
ljmp
inc
add
mov
pop
loope
mov
loop
push
sbb
jne
xchg
adc
int
sub
int
or
call
mov
mov
popa
lea
cld
pop
repnz
mov
jmp
jg
lea
jbe
jo
add
pop
pop
ds
in
je
shlb
adc
sub
jbe
sbb
lock
adc
je
lds
iret
xchg
jmp
sbb
aad
or
fwait
in
and
push
ficomps
jbe
outsl
aad
dec
mov
cmc
outsl
push
shll
mov
andb
daa
in
jo
dec
cwtl
jns
push
aad
and
add
fs
ffree
cmp
lods
dec
add
push
inc
xchg
sub
cli
push
mov
push
mov
les
sahf
jno
idiv
mov
pop
imul
jne
int
fdivrl
mov
cs
cltd
adc
sbb
pop
xchg
es
cwtl
sbb
sahf
mov
jnp
incl
dec
inc
ret
es
sti
push
mov
mov
shrb
add
int
mov
test
sahf
outsl
pop
mov
mov
ja
ret
pop
add
xor
subb
fisubrl
movsl
xchg
xor
cmpb
stos
insb
insl
or
shrl
movsl
fistpll
mov
je
leave
jle
icebp
mov
and
xor
ss
push
mov
push
or
jne
xor
jnp
es
xchg
lea
add
xchg
cmpsb
test
xchg
add
sub
add
jns
pop
in
mov
pop
xchg
jb
mov
mov
jl
iret
push
mov
je
fimull
out
test
fiadds
jle
imul
out
cli
mov
hlt
inc
pop
jmp
hlt
fwait
mov
xchg
jb
mov
fsubs
and
pop
jmp
mov
dec
mov
jne
dec
mov
call
mov
lods
jne,pn
push
es
adc
xchg
out
sbb
mov
mov
cmpb
pop
fisubl
out
push
pusha
mov
scas
inc
mov
jmp
roll
or
cmp
xchg
mov
shrb
out
dec
dec
push
rcl
ret
jbe
inc
sar
and
inc
in
popl
mov
aad
sub
hlt
add
add
cs
repz
scas
jno
andl
mov
cmp
mull
mov
mov
push
adc
enter
stc
mov
rorl
aad
push
clc
sbb
add
mov
mov
dec
bound
lods
lds
mov
pop
add
inc
out
roll
add
rol
fnstenv
push
jecxz
inc
idiv
push
sub
mov
push
ret
addr16
lea
call
cmp
arpl
sahf
pusha
andb
std
loope
jno
call
mov
dec
into
rcrb
xchg
fistps
pop
xor
mov
sbb
cli
push
inc
scas
call
mov
lds
xchg
add
out
push
fldcw
xlat
adc
mov
push
jnp
ljmp
cmp
sbb
imulb
fs
in
stc
sub
xor
shl
push
pushf
dec
and
jo
in
fs
sbb
inc
pop
adc
jecxz
push
sbb
ret
fwait
xor
mov
decl
xlat
int3
adc
dec
sti
fdivl
fwait
pop
out
pop
xchg
xor
or
adc
sahf
jne
inc
push
xchg
lea
je
or
fistl
cmp
or
jmp
cld
call
inc
adc
cmpsb
aas
jb
inc
out
aaa
sbb
arpl
mov
xchg
add
mov
test
lods
mov
cwtl
xchg
mov
cmpsb
xor
lea
add
mov
mov
test
mov
cs
dec
and
and
das
xor
in
test
ds
mov
je
nop
pusha
mov
jne
inc
sbb
aam
aam
or
push
loop
push
popa
stos
xlat
mov
mov
popf
xchg
sbb
push
adc
cli
jns
push
jbe
inc
sub
jne
pop
mov
adc
adc
jne
xchg
mov
ret
and
xor
clc
mov
inc
ds
out
in
jg
push
lret
dec
or
in
fnop
dec
sbb
cwtl
orl
push
mov
stc
sti
and
loop
jmp
adc
pop
cmp
nop
or
dec
loop
lds
mov
dec
sub
enter
mov
and
popa
mov
vpsubsb
mov
leave
cld
lret
ss
outsl
in
dec
jae
mov
je
cmpsl
lret
xor
in
mov
inc
pushl
mov
mov
jmp
fistl
popf
rclb
rcll
jne
imul
adc
lcall
addr16
pop
xchg
and
aaa
xchg
pop
rorl
mov
push
leave
je
lock
insl
hlt
adc
lret
sbb
jecxz
adc
sbb
in
xchg
adc
sbb
dec
push
cli
je
scas
lcall
jmp
cmp
jp
mov
pop
mov
leave
aaa
xchg
repnz
shrl
dec
iret
popa
imul
enter
xchg
clc
add
cltd
push
in
push
arpl
std
cltd
jns
pop
stc
stos
jnp
nop
incb
repz
lock
les
cmp
cld
and
lods
mov
pop
xor
sub
push
inc
and
dec
mov
push
sub
sbb
and
jp
sub
cli
insl
loopne
in
push
repnz
dec
push
dec
aas
loop
xlat
hlt
loopne
sahf
and
mov
cltd
sti
mov
sub
push
mov
sub
aam
movsb
movsb
push
addr16
andl
lret
dec
lds
imul
jo
or
mov
push
dec
add
fstl
fcmovb
adc
dec
or
fsts
ja
movsl
sub
fsubrp
int
and
outsb
push
shrl
movsl
mov
or
xchg
bnd
int3
push
daa
imul
mov
push
repz
adc
inc
sbb
fcompl
in
push
lahf
jge
xor
into
arpl
mov
cmp
mov
lret
cli
dec
mov
xchg
seto
popa
xor
mov
cwtl
leave
pushf
hlt
loop
imul
inc
hlt
xchg
push
lret
mov
ljmp
mull
xchg
fwait
lods
sbb
xor
and
mov
cmp
repnz
push
fcmove
mov
iret
adc
xchg
repnz
enter
movsl
mov
sti
out
mov
shlb
mov
pop
mov
fwait
pusha
or
adc
pop
scas
cmp
stos
inc
adc
lock
data16
push
and
test
and
stos
je
lods
mov
push
adc
inc
fscale
aam
sbbb
gs
dec
in
loop
adc
in
mov
test
mov
jp
mov
in
iret
fdivrl
mov
inc
mov
cmpsl
lea
dec
out
and
jg
loopne
xchg
dec
popf
in
cwtl
sbb
imul
call
push
inc
mov
mov
inc
xchg
sbb
dec
in
xor
inc
cmp
or
dec
inc
dec
mov
xchg
fisttpl
or
movsl
aaa
pop
mov
or
mov
in
ss
lods
popf
push
outsl
ljmp
mov
jge,pt
jne
fdivs
mov
mov
or
sub
mov
es
andl
nop
aaa
insb
sahf
pusha
pop
inc
nop
les
and
fidivrl
fstl
dec
pushf
xchg
aam
xchg
adc
stos
dec
pop
inc
loop
add
inc
add
dec
lds
leave
mov
stos
xchg
or
out
mov
mov
inc
test
add
or
xchg
cmp
inc
cmc
adc
jno
inc
mov
std
sbb
arpl
imul
loope
inc
in
fistl
push
xchg
jo
cvtps2pd
add
mov
mov
mov
ret
cmp
imul
push
repz
jne
sub
xor
pop
mov
mov
xor
mov
je
pushf
dec
std
inc
mov
or
mov
stos
pusha
loop
rcll
xor
sub
icebp
mov
or
in
cmc
lods
or
xchg
pop
stos
sbbb
or
ljmp
in
scas
cmp
mov
shlb
sbb
pop
dec
jne
push
stos
stc
inc
add
cld
inc
dec
xchg
and
push
and
pop
push
les
pop
cmpsb
xor
push
ret
gs
mov
add
cmp
and
sub
test
scas
xchg
push
stc
sbb
in
addr16
jbe
les
adc
sbb
loop
in
pop
es
ljmp
inc
mov
mov
repz
sbb
data16
lds
lods
jae
les
je
sub
ljmp
shrb
imulb
ds
daa
stc
subb
std
es
push
jae
sbb
and
or
xchg
cld
sbb
bnd
lds
pusha
rcrl
and
xchg
movsb
insb
fsubs
cmpsb
mov
dec
mov
mov
shll
push
outsl
dec
ret
sahf
pushf
nop
ret
lcall
enter
jne
add
rep
add
cmp
dec
xchg
sarl
xchg
les
inc
lcall
jmp
stos
adc
push
rcr
cwtl
push
push
gs
int3
jns
shrb
imul
xchg
mov
mov
ljmp
dec
mov
fcomps
lret
jl
sbb
jbe
adc
mov
push
xchg
and
repz
adc
sti
out
out
add
fildll
inc
dec
outsb
addr16
loopne
mov
xchg
int
mov
inc
lcall
push
push
cmp
cmpsl
mov
cmp
push
push
push
lret
inc
roll
pop
std
push
pop
iret
loop
mov
imul
cltd
push
fmull
mov
sub
sahf
inc
scas
fs
sbb
shlb
or
add
xor
or
mov
rcr
mov
punpckhwd
push
xor
pop
repnz
jne
and
test
or
xchg
or
mov
jne
jmp
sub
jge
or
leave
push
mov
push
or
and
into
add
imul
cmp
xchg
dec
jge
xor
insb
pop
test
or
sbb
cmp
shll
push
jnp
dec
int3
lahf
xchg
push
roll
in
pusha
xchg
pushw
mov
dec
jb
and
test
pushf
dec
jp
aaa
pop
cmp
lea
in
rcrl
aad
add
and
movb
sub
in
inc
dec
aam
xor
out
jg
fcmovnu
testl
mov
rcl
mull
jmp
adc
lods
aaa
fcoml
and
bound
dec
push
out
mov
push
jb
into
mov
fwait
loop
js
dec
jmp
xchg
xor
xor
rolb
inc
push
std
in
fcompl
shll
aaa
sbb
add
push
mov
mov
sub
shlb
push
jbe
xchg
xor
mov
add
inc
leave
push
insl
in
insb
test
jmp
add
inc
test
pop
sbb
es
scas
cmp
mov
push
pop
xor
push
in
cmp
pop
mov
jp
enter
jb
push
or
mov
sahf
addl
call
mov
int3
in
stos
jbe
ljmp
loop
mov
mov
cld
mov
mov
mov
xor
jl
add
cmp
aad
pop
out
fmull
cmc
push
out
adc
dec
mull
jp
in
mov
xchg
mov
add
adc
sbb
add
mov
das
pop
mov
pushf
imul
es
push
add
iret
mov
add
or
popa
xchg
out
aad
das
pop
lret
stos
mov
inc
int3
popa
xlat
cmp
mov
leave
lock
mov
add
cmp
push
or
cltd
xchg
cmp
jmp
incl
leave
sar
leave
sbb
mov
scas
lahf
dec
or
and
dec
pop
rcrb
mov
push
sub
lds
or
fldcw
scas
ds
lds
and
mov
cmpsl
jne
shrl
lea
or
arpl
mov
dec
stc
mov
call
add
xchg
test
push
mov
inc
aaa
and
add
ret
insl
arpl
jne
pop
mov
in
cmp
cmp
or
shrb
mov
pop
dec
inc
cli
arpl
and
addr16
cmpb
pop
and
sarl
and
fcomps
add
or
adc
lret
cmp
push
jg
das
or
out
fwait
xchg
sbb
fwait
push
xor
aam
and
mov
adc
idiv
call
outsl
cmpb
xchg
fisubrs
subl
jnp
test
imull
push
cmp
lahf
jb
pop
std
pop
and
mov
or
jb
adc
or
jbe
adc
push
insb
cmp
push
xor
je
test
cmp
xchg
and
sbb
jmp
sub
in
dec
adc
cwtl
push
adc
cmp
sbb
imul
fnstsw
xor
inc
jnp
mov
aaa
jne
adc
ss
stos
adc
dec
cmpsb
sbb
push
jbe
xchg
dec
push
iret
or
in
fwait
mov
daa
es
mov
inc
test
stc
out
iret
cltd
sub
sub
xor
dec
push
and
mov
cmc
mov
or
mov
int
and
jg
xor
jp
xchg
and
push
dec
shll
cmc
xchg
call
shr
xor
mov
sbbl
adc
insb
out
xchg
int3
hlt
xlat
aam
clc
mov
mov
mov
das
std
ss
outsl
cmpl
fiaddl
mov
mov
shr
aad
mov
add
movb
xchg
in
ds
lods
lock
in
mov
or
pop
lds
mov
shrb
hlt
mov
into
inc
mov
mov
add
cmpsb
fs
repz
das
cmp
sbb
jb
bound
aas
or
shll
mov
inc
mov
lea
insl
add
sbb
inc
pushf
jle
scas
inc
dec
push
cmp
insl
js
aam
cmc
lock
mov
sbb
xchg
dec
mov
and
fldl
cmpsb
insl
add
cli
fistpl
and
mov
cli
ret
xor
push
jmp
add
es
inc
dec
outsl
mov
ss
nop
jle
mov
xor
mov
or
or
insb
lahf
cwtl
xchg
mov
sub
cmp
mov
popa
orl
fiadds
es
lret
cmpl
jne
pop
pusha
stc
icebp
inc
jl
fs
mov
cltd
int
inc
pop
mov
addr16
jnp
sti
sub
mov
stos
js
or
das
sbb
rorl
add
sub
sbb
mov
sub
sub
sub
cmp
mov
xor
mov
leave
orl
pand
xor
lock
push
loop
js
mov
push
cld
lods
in
loopne,pn
add
xor
sti
test
out
xchg
cld
jecxz
movsw
mov
pusha
sbb
xchg
inc
stos
push
imul
ja
pop
mov
cmp
push
jmp
sbb
add
cwtl
arpl
orl
mov
xchg
xchg
cli
icebp
xlat
stos
sbb
shlb
cmp
cltd
ss
xchg
jp
ljmp
in
push
inc
or
sub
adcl
lret
andb
scas
fdivrl
jmp
and
lods
dec
fwait
mov
xor
push
js
hlt
cli
mov
cwtl
das
cmc
sbb
mov
push
jne
aaa
test
sbb
and
and
inc
testb
inc
jg
mov
mov
stos
push
xor
and
bound
xchg
popa
aaa
aas
outsl
leave
inc
jno
pop
sub
popa
mov
pop
outsl
sahf
mov
pop
sbb
mov
sti
cli
mov
into
mov
cmp
hlt
dec
mov
jp
clc
cmp
imul
decl
fistl
into
imul
sub
out
mov
aaa
sub
adc
popa
movsb
fs
sbb
out
push
fisttps
es
les
popa
fstpt
out
mov
std
insb
xchg
sbbl
or
jnp
pop
push
xchg
das
push
mov
cmp
int3
into
inc
xchg
subb
lds
and
scas
inc
je
stos
inc
arpl
in
frstor
lods
addr16
std
repnz
repz
cwtl
out
iret
sbb
mov
cmc
dec
add
int
shll
push
int
jno
dec
test
cmc
ret
add
mov
or
xor
jg
iret
mov
in
sarl
cmp
icebp
sbb
or
pusha
push
lock
arpl
inc
les
adc
mov
pushl
outsb
adc
out
jecxz
sub
movsb
xor
inc
sub
outsb
xor
pop
push
mul
dec
test
inc
decb
mov
nop
enter
lods
mov
xor
xor
and
ds
xor
fisubl
repz
xchg
xor
adc
popa
repz
stos
insl
stos
dec
fwait
int3
movsb
sub
sbb
and
ret
and
cmp
sub
testb
sbb
fldenv
mov
mov
call
arpl
hlt
outsl
dec
sahf
xlat
ret
aaa
push
ljmp
stc
sbb
push
push
push
sub
inc
mov
ret
and
ret
aad
bound
pop
sbb
jmp
adc
mov
adc
fcomi
push
daa
sahf
mov
ja
sbb
arpl
testb
nop
ds
inc
push
cmp
hlt
in
sub
and
popa
psadbw
cld
lret
push
in
pop
add
sbb
cli
jp
mov
xchg
scas
xchg
sub
xchg
jecxz
js
jb
mov
push
pop
cmp
mov
mov
add
and
rcrl
dec
jbe
sub
fimuls
sub
cmp
mov
das
stc
xor
mov
inc
mov
gs
les
je
aad
mov
cmp
jno
pop
sbb
jns
stos
mov
dec
aad
sub
push
pop
cld
repnz
ret
xor
bound
mov
cwtl
cmp
stos
xor
push
xchg
jae
adc
cmp
test
repz
mov
int
sub
push
ret
push
xchg
xor
das
mov
xchg
pop
mul
pop
in
insl
daa
push
pop
push
and
inc
sbbl
out
or
add
sub
insb
shlb
sbb
ds
push
sbb
in
jnp
lret
popa
mov
mov
addl
gs
enter
sub
dec
mov
add
mov
in
xchg
jno
dec
lods
cwtl
cmp
stos
test
outsl
cli
xchg
lods
movb
inc
or
pcmpeqd
mov
pop
sub
vphaddbw
or
andb
dec
rclb
enter
stc
adc
mov
aam
das
dec
cmp
ret
push
idivb
mov
adc
xor
mov
cmp
pop
inc
pop
repz
jp,pt
lcall
adc
dec
call
std
adc
cltd
cmp
push
dec
push
fstpl
mov
pushf
stc
xchg
jae
xchg
pop
das
mov
push
cmp
sti
xor
push
mov
pop
jge
popf
scas
out
cwtl
ror
test
or
ficomps
pop
cwtl
or
call
xor
pop
insl
jae
mov
mov
and
add
mov
jae
jae
addr16
and
mov
cmp
mov
iret
xor
pop
bound
mov
sub
add
add
mov
pusha
mov
aaa
push
scas
adc
fstl
test
scas
mov
mov
jecxz
mov
and
pop
std
je
and
mov
mov
pusha
push
hlt
add
mov
in
lahf
cmpsl
inc
jb
data16
in
pop
in
jp
sub
out
int
cmp
out
mov
cmpsl
lahf
dec
ljmp
lret
and
jl
mov
xchg
imul
movsb
cmp
les
mov
and
cltd
in
mov
cmp
int3
gs
bound
dec
sbb
iret
clc
jae
push
stc
out
pushf
add
mov
push
xor
xor
dec
sub
sbb
jmp
lea
jge
das
mov
xchg
test
cmp
out
js
inc
bound
mov
dec
xchg
cli
jle
outsl
push
cmp
sbb
lods
and
jmp
mov
pop
fs
clc
daa
bound
repz
cli
addr16
pop
scas
andb
test
or
rclb
mov
inc
bound
sbb
xchg
gs
je
sbb
pop
xor
cwtl
dec
dec
dec
arpl
mov
push
andb
sub
les
in
add
add
add
xor
in
mov
xchg
or
insb
shrb
xchg
xor
stos
push
push
in
movsl
mov
xor
sub
mov
lock
sub
insl
cli
in
adcl
and
sti
enter
movb
ret
xorl
dec
dec
repnz
sti
rclb
shll
dec
out
adc
popa
adc
mov
sub
mov
jbe
sarb
sbb
and
jecxz
jle
ret
or
stc
add
test
test
lock
jp
add
loope
in
cli
adc
or
xor
jge
in
push
mov
xlat
and
shr
adc
adc
aaa
leave
std
repz
shr
pop
push
out
mov
pop
cld
jae
nop
jmp
pop
fiadds
cli
pop
es
lret
sub
cwtl
cmpsb
push
cs
mov
cmp
loopne
sarb
jge
testb
dec
pop
pop
popa
adc
push
orb
jno
sub
fsubrl
mov
mov
ja
dec
data16
stos
fmull
mov
or
adc
insl
dec
arpl
xchg
daa
jnp
jge
pusha
inc
mov
jno
fwait
sbb
xor
xlat
dec
scas
mov
mov
fwait
in
jnp
out
and
int3
outsl
outsb
or
xchg
lods
cmp
xchg
shr
movsl
push
and
push
jnp
pop
bound
les
xor
mov
dec
loopne
xchg
popa
jno
sub
subb
jne
push
outsl
add
fwait
mov
fsubrl
pop
clc
clc
scas
sbb
icebp
cmpsl
enter
mov
les
push
movsl
sub
or
jnp
lock
push
push
incb
stos
fstpl
or
sub
push
das
lcall
jnp
rcll
dec
push
add
xchg
lret
add
mov
and
or
and
pop
rcrb
pop
cmc
out
jg
ja
or
lods
pop
dec
xchg
xor
in
in
push
daa
lcall
add
jle
or
lock
call
cmc
cld
sub
enter
cmc
inc
cs
rorl
sti
push
jbe
jnp
sbb
sbbb
subl
xor
sub
mov
test
cmp
xor
cmpsl
lods
pop
pop
jnp
push
or
rcrl
lret
mov
pop
les
mov
sbb
jo
mov
push
hlt
ds
pop
in
rorl
sbb
mov
hlt
jg
cmc
insb
in
mov
mov
jecxz
loope
popf
outsb
ds
pop
mov
jge
mov
int3
cltd
sbb
xchg
lahf
sahf
sub
jno
push
or
cli
ret
pop
in
adc
cltd
dec
cwtl
xchg
jle
rclb
sub
sub
es
inc
jb
xchg
rcrb
cmp
push
cmp
fbld
repz
xlat
sbb
add
cli
dec
scas
and
adc
pop
shlb
xchg
xor
mov
lahf
flds
lds
mov
inc
fcompl
sub
outsl
stc
sub
jne
hlt
outsb
loope
insl
in
inc
fwait
ljmp
mov
xchg
pop
repz
scas
xchg
sub
add
rorl
repnz
mov
mov
xchg
jae
jbe
adcl
inc
push
sub
or
jo
adc
dec
adc
and
inc
movb
pop
pop
push
or
dec
shll
jae
mov
pop
lds
cli
jae
pop
push
adc
jb
mov
ret
popf
jae
push
push
lock
sbb
lahf
jg
xor
dec
adc
call
mov
sub
lret
inc
fidivl
insl
sub
or
testl
ret
out
xlat
das
fildl
pop
mov
mov
inc
daa
insl
enter
int
insb
cmp
enter
mov
lods
jecxz
dec
cmpsl
jo
push
cmp
mov
lret
cli
call
test
jmp
insb
lret
lret
push
mov
push
pop
leave
xor
sub
mov
data16
iret
dec
cmp
push
inc
add
clc
mov
push
sub
and
fwait
stos
fildl
add
std
or
push
xlat
inc
xlat
xchg
cmp
scas
out
dec
lret
in
sbb
clc
cwtl
jbe
jge
incl
add
in
jge
cli
bound
std
arpl
pop
sub
call
ja
jge
mov
testb
jmp
test
aad
rcll
rcll
xchg
fwait
leave
nop
cwtl
mov
inc
jbe
mov
mov
outsl
imul
pop
cmpsl
das
inc
shl
pop
mov
add
jo
in
nop
add
stos
push
adc
pop
jp
je
fisubl
repz
add
leave
mov
xor
xor
or
push
out
popf
jecxz
iretw
outsb
push
cltd
push
call
xchg
or
jmp
xchg
push
push
and
xorl
adc
das
lahf
inc
mov
sbb
mov
cmp
sbb
sbb
inc
ret
inc
test
mov
add
aad
dec
repz
aad
push
outsb
mov
xor
out
push
int
in
fcos
cli
sub
mov
pop
aas
pop
ljmp
mov
jae
ds
cmp
add
shr
scas
out
cld
sbb
mov
roll
outsl
xchg
sbb
rorb
jns
fstl
adc
or
jne
es
or
sub
or
in
gs
cmc
pop
mov
pop
inc
mov
xlat
mov
mov
shll
jl
jecxz
test
into
lahf
jno
rcrb
jge
loopne
mov
mov
inc
ss
sti
xor
sub
aad
movsl
sarb
outsl
inc
inc
add
mov
test
fildll
mov
movsb
push
add
mov
mov
xor
stos
adc
mov
mov
dec
inc
loope
xor
jae
sbb
mov
out
xor
xchg
insl
test
inc
gs
xor
xchg
sbb
adc
fwait
aam
lea
divl
fsubrs
jnp
les
dec
loopne
jne
out
sti
fisttps
out
lahf
adcl
or
push
cmp
inc
and
aam
test
lock
mov
sbb
xchg
dec
fiaddl
setp
addr16
or
cmp
and
cmp
push
mov
push
stos
negl
insb
gs
xchg
mov
fdivrl
xor
jmp
rcrl
in
mov
outsl
rorb
ret
out
ja
mov
cmp
cli
sub
adc
cmp
pop
mov
xor
mov
adc
mov
xchg
push
shrb
xchg
xchg
sbb
xchg
insl
add
popa
cmpsb
cld
mov
push
mov
ret
lock
addb
pop
mov
dec
add
and
xor
pop
pop
decl
das
movsb
push
xor
lds
mov
mov
out
dec
call
ja
xor
fcmovnbe
aam
cwtl
lds
fs
dec
xchg
pusha
mov
dec
push
mov
lds
sbb
inc
pop
lea
inc
mov
test
xor
sbb
xorb
dec
scas
fcomi
push
add
outsl
ds
cmp
sub
std
xor
ret
rcll
or
jns
mov
outsl
pop
xor
les
mov
ja
ret
xchg
repz
hlt
jge
pop
pop
cmp
push
out
mov
in
mov
add
bound
jnp
mov
and
es
data16
lods
or
push
xor
fbstp
stos
ret
cmp
cmpsb
aad
mov
pop
dec
movsb
out
cld
inc
cli
push
xchg
lret
lock
pop
xchg
bound
mov
leave
pop
xchg
aad
jnp
cmpsl
cmp
mov
or
sub
sub
or
dec
mov
repnz
jge
lods
mov
add
push
dec
daa
in
sbb
iret
rorl
add
xor
addl
jne
and
xchg
pop
push
push
xlat
int
insl
mov
push
fldcw
push
cmp
cmp
xchg
xor
jp
ljmp
or
clc
stos
popf
xchg
add
andb
adc
push
rcll
clc
imul
popa
out
jo
ja
and
jmp
jmp
jp
pop
je
mov
loop
mov
mov
imul
fmuls
inc
pop
mov
inc
sub
mov
and
lcall
int3
ja
cltd
daa
leave
aad
imul
or
pop
pop
out
iret
add
imul
pushl
or
movsl
lahf
fisubrs
pop
dec
mov
xor
push
add
out
lock
aaa
pop
lods
add
loopne
shll
adc
rcll
add
fcomi
movsl
ss
cmpl
mov
in
inc
inc
xor
mov
ss
imul
cmp
xorb
pop
jmp
insl
cmc
mov
pop
sbb
sahf
jecxz
jno
out
jmp
shr
add
out
inc
and
adc
aas
add
cld
sub
lods
pop
ljmp
ret
shl
es
adc
repnz
popa
cmp
shlb
xchg
xchg
mov
sbb
jge
mov
pop
mov
sub
sbb
sahf
xchg
jge
test
push
push
sbb
imul
push
dec
inc
nop
jmp
fwait
mov
push
adc
stos
lret
fdivl
jg,pt
cltd
cltd
nop
nop
mov
mov
jnp
mov
out
xchg
or
ljmp
aaa
aam
sbb
movsl
lods
cltd
pop
mov
pop
adc
loop
repnz
push
and
lods
mov
repnz
and
les
ss
es
xor
jmp
xor
dec
fiaddl
cmc
subb
sbb
mov
jecxz
fwait
stos
cmp
add
push
lret
push
mov
rclb
inc
les
or
mov
es
shrb
aad
idivb
mov
jg
jns
scas
rcl
or
icebp
inc
jno
xlat
jmp
xlat
lods
popa
aam
push
push
or
mov
mov
in
jb,pt
sbb
aam
lcall
scas
inc
inc
rorl
push
sub
addr16
enter
ss
push
movsl
faddl
mov
push
daa
inc
and
xchg
cli
dec
dec
add
jge
icebp
mov
test
jae
test
xchg
xchg
sbb
jg
rcrb
insb
mov
lcall
popf
pusha
dec
stos
out
lock
cmp
daa
mov
xor
pop
testb
sub
jne
movl
fcom
jg
dec
mov
popf
ljmp
adc
jne
jb
stos
mov
xchg
mov
in
push
sbb
jge
mov
mov
or
cli
jecxz
adc
xchg
int
out
lods
jno
jge
imul
xchg
sbb
mov
xchg
shll
or
lds
pop
leave
je
sbb
pop
mov
stc
mov
inc
jl
int3
adc
mov
xor
cmp
mov
and
mov
aad
push
sbb
cli
cmc
mov
stos
add
add
xchg
jge
dec
add
sbb
adc
mov
jg
adc
and
call
test
dec
adc
cwtl
lret
push
add
xor
call
or
xor
xchg
loop
pop
fs
stc
je
or
dec
leave
out
int3
imul
repnz
in
into
jle
test
mov
cwtl
cs
add
mov
ss
cwtl
cmp
and
dec
xchg
sub
jae
dec
mov
pop
mov
and
jno
imul
add
push
xor
pop
das
fwait
add
sbb
cmc
cmp
scas
test
and
hlt
jmp
or
mov
sbb
dec
pop
jp
xchg
mov
stos
or
dec
cmp
xor
sub
imul
adc
scas
xor
dec
jo
call
icebp
cmp
xlat
addl
repz
inc
mov
std
fstpt
sub
adc
xorb
fadd
pop
es
jle
ja
push
mov
inc
arpl
dec
insb
aas
stos
into
jno
and
test
inc
sbb
in
xchg
subb
and
cmp
pop
push
jae
pop
or
mov
scas
add
mov
lods
imul
and
dec
mov
dec
pop
sub
sub
movsl
mov
push
and
das
pop
pushf
lods
cmpsl
lret
sti
scas
shll
jle
andl
out
outsb
and
pop
imul
in
pop
daa
mov
loopne
lods
xor
add
test
mov
cmp
ja
ljmp
mov
pop
hlt
sbb
loope
int3
add
jno,pn
lahf
or
xchg
addr16
sbb
pop
push
jns
or
mov
lock
fbld
pop
xchg
leave
rcrl
rcl
dec
inc
cmpsb
fsub
loop
and
mov
aam
shll
and
jl
cmp
ja
xor
cld
push
cmp
mov
xor
or
jbe
cmpsl
pop
clc
sub
shrb
mov
push
cld
pushf
pushf
aam
add
ja
and
push
shll
mov
loope
mov
lcall
inc
nop
jl
mov
mov
mov
jo
incb
push
pop
adc
xlat
icebp
dec
in
enter
daa
mov
int
mov
jge
jno
xor
imul
rcrl
mov
xchg
out
stos
jmp
cwtl
scas
mov
jmp
dec
mov
popf
sbb
repz
fsubrl
stos
mov
mov
pop
push
leave
rorl
sbb
dec
xlat
sub
pop
pop
aam
bound
sub
aaa
pop
add
add
insl
out
stos
and
shrb
mov
pop
and
fsts
cmp
xor
lea
subl
xchg
lods
mov
mov
mov
mov
cmp
fucompp
pop
mov
push
push
adc
mov
jbe
fbstp
lcall
mov
jge
inc
jno
or
jne
lahf
mov
push
mov
xchg
rol
stc
xchg
adc
repz
dec
popf
sti
ds
or
cwtl
inc
and
fidivrl
or
add
lods
dec
scas
mov
and
dec
hlt
std
jb
xlat
popa
jae
inc
popf
cld
dec
loop
sub
rcrb
cmpl
movsb
aad
fcmovb
arpl
lock
adc
jae
js
dec
int3
ret
fidivrl
adc
jbe
ret
add
scas
xchg
sub
lret
scas
out
xchg
iret
fwait
xor
sub
fs
fiaddl
shll
adc
add
clc
js
and
decl
addr16
cmpsb
cmp
call
roll
bnd
xor
fs
sub
cmpsb
and
cmp
or
dec
adc
lahf
stos
mov
mov
int3
jnp
xor
andl
les
mov
fnstenv
aad
push
jne
lcall
push
stos
test
fbld
adc
pop
mov
mov
shlb
icebp
mov
icebp
popa
fcmovnbe
xor
inc
outsb
mov
out
fwait
call
inc
out
rol
inc
cmp
std
cmp
xor
inc
iret
fidivs
dec
xchg
aaa
mov
push
sbb
cmp
repz
xchg
je
sbb
adc
aaa
clc
loopne
push
and
push
mov
mov
nop
mov
add
fisubs
stos
lods
test
popa
mov
add
in
push
aad
adc
cmp
xor
mov
or
mov
pop
jno
jne
xor
add
mov
inc
push
mov
movsb
aaa
fisubl
aam
mov
pcmpeqd
int3
sbb
mov
pop
xor
xor
mov
dec
hlt
mov
xchg
jns
mov
loop
and
in
fsts
ret
je
lret
sub
xor
push
push
xor
cmpsb
les
xchg
and
lret
cs
nop
lcall
test
imul
das
lahf
ret
les
fs
mov
insb
cmpsb
dec
loopne
and
pop
mov
adc
push
add
jl
mov
ret
push
sbb
subl
jecxz
xchg
xor
jle
cmp
xchg
cmp
jo
rclb
add
jp
jbe
mov
fisubrl
pop
xchg
adc
jl
fs
or
mov
vpunpckhdq
mov
push
xor
adc
cld
cmp
jo
shrb
xchg
data16
aas
jecxz
inc
movsb
pop
or
aam
xor
rclb
in
xchg
xchg
in
mov
pop
add
lods
adc
divl
jae
inc
fistpl
repz
gs
push
inc
inc
or
ret
jmp
in
lock
xchg
pop
and
adc
out
lahf
mov
pop
jl
bound
and
lods
or
aad
fld1
fs
jnp
xor
xchg
sub
dec
pop
test
pusha
in
adc
loope
cmp
into
shll
popl
lret
sti
xchg
insl
push
pmaddwd
jae
rol
xor
bound
sbb
mov
inc
mov
mov
inc
daa
jge
in
ds
add
test
xor
jmp
lock
adcl
test
or
push
inc
movsl
sub
push
sub
je
inc
cmpsb
fiadds
sti
xchg
push
mov
ret
push
mov
imul
xchg
pop
icebp
add
mov
loopw
js
int3
cs
shr
mov
add
cmp
and
xchg
lcall
inc
push
inc
pop
std
pop
mov
dec
xchg
scas
bound
and
stc
sbb
mov
aam
and
scas
movsl
xchg
pop
scas
xchg
stos
pop
pop
push
cmp
lahf
mov
sub
iret
mov
movsl
and
out
js
jg
inc
mov
xor
dec
push
fidivs
addb
aad
lock
sbb
add
aam
dec
mov
inc
ja
jle
mov
cmpsl
xor
jle
mov
imul
mov
movsb
and
pusha
push
repz
and
movsb
jo
cli
cs
inc
data16
fldl
and
sbb
sbb
jne
pop
and
mov
int
sub
outsl
pop
xor
stos
pushf
cmpsb
jle
test
push
push
xchg
pop
mov
out
xchg
jno
in
dec
xlat
fwait
popa
int
mov
fistl
loop
leave
movb
cld
bnd
xchg
mov
push
hlt
adc
in
adc
sahf
in
xor
std
mov
dec
scas
or
pop
cltd
adcb
loop
scas
loopne
mov
jg
daa
aam
cmp
xchg
jbe
scas
fcmove
push
mov
cmpsl
mov
mov
dec
movsl
xor
mov
fdiv
jl
dec
das
inc
push
js
pop
adc
cvtdq2ps
lret
xchg
push
leave
shll
mov
in
dec
adc
or
mov
push
sar
mov
cmp
or
call
sub
mov
iret
call
cltd
adc
es
xlat
sbb
out
adc
pop
and
mov
xchg
jo
xchg
mov
fiaddl
sahf
sbb
lret
pushl
adc
pusha
adc
mov
adc
mov
ljmp
jo
sub
xchg
fs
jne
in
lret
sub
mov
mov
pop
and
push
mov
mov
notl
and
pop
xchg
out
sahf
std
out
and
ds
mov
int3
add
adc
xor
adc
pop
and
lock
sub
mov
fildl
in
mov
cld
orb
lock
mov
cmc
inc
test
adc
or
sahf
or
sbb
add
lcall
lds
pop
dec
add
test
popa
ljmp
fcomip
pop
addr16
push
sbb
jae
aad
add
mov
mov
pop
mov
out
dec
sbb
lds
in
dec
gs
jmp
lods
sub
movsb
js
fsts
jp
call
xchg
xchg
cli
mov
push
nop
xlat
jecxz
repnz
pusha
lret
lock
and
or
mov
andb
xor
sbb
mov
repz
out
nop
call
push
mov
std
ret
mov
inc
fcoms
mov
imull
ror
pop
hlt
add
mov
inc
mov
inc
mov
dec
and
lds
mov
and
xor
cwtl
inc
adc
sub
pop
fistpll
adc
mov
rcrl
loopne
cmpsb
jno
pop
sub
test
jb
arpl
pop
mull
adc
test
jg
mov
nop
imul
mov
jg
push
clc
xchg
add
cmpl
jp
lods
jle
pushf
xchg
or
pop
push
pop
jl
test
jl
lods
ja
pop
dec
cmp
inc
mov
push
mov
push
mov
lcall
xchg
jnp
pop
sti
inc
inc
jge
fstps
sbb
jecxz
fcoms
clc
lods
loope
je
lods
mov
push
mov
xchg
orb
jae
fildl
js
pop
cmc
push
inc
aas
mov
into
push
inc
ja
lds
mov
ret
out
sbb
stc
test
inc
xor
mov
jae
mov
adc
cli
bound
addr16
push
mov
add
fisubrl
mov
dec
popa
mov
inc
pusha
xchg
pop
sub
mov
out
add
rcrl
imul
aas
fcomp
fimull
pop
je
ds
mov
mov
mov
in
fisubs
pop
daa
fldt
sbb
in
data16
push
das
push
stc
jmp
test
cmp
add
jb
fsts
jg
fwait
lret
xor
loop
std
sarb
arpl
dec
mov
push
inc
add
inc
out
fnstsw
cmpb
test
add
adc
mov
mov
cmc
jno
mov
inc
arpl
sub
pop
bound
add
out
jne
int3
or
jae
mov
xchg
xchg
mov
cmp
mov
lret
jl
cmc
mov
sbb
xor
push
xor
stos
sbb
bound
mov
mov
adc
loopne
lcall
push
jno
add
and
shr
jno
jnp
scas
jo
roll
mov
cmpsl
mov
test
push
loop
movsl
dec
add
lret
mov
mov
push
xor
mov
xor
xchg
push
cmp
jae
adc
stos
aaa
or
xor
in
xchg
mov
cli
push
hlt
mov
mov
push
cli
lahf
aas
stc
cli
jo
and
jne
add
cli
or
pop
mov
push
cmp
cmp
std
sub
pop
add
outsb
popf
hlt
xchg
ret
movsb
out
dec
dec
inc
addr16
in
adc
sahf
inc
lret
pop
or
out
inc
gs
aas
cmp
push
and
ss
jmp
orl
jecxz
fldl
mov
or
lods
mov
dec
dec
adc
cmp
pop
sbb
pop
sbb
imul
xor
sbb
and
push
and
int
roll
ja
and
gs
mov
xor
mov
inc
movsw
fcmovnbe
mov
xchg
mov
mov
push
scas
std
imul
add
jo
je
or
in
popl
ja
insl
xor
ret
aad
sub
popa
shl
jg
lods
push
movaps
fiadds
push
pop
lds
shll
jge
scas
sbb
mov
jle
stos
mov
test
mov
or
xlat
jl
popa
adc
lret
cltd
repz
jp
or
mov
imul
mov
cmpb
hlt
call
aad
xor
xchg
cmp
subl
mov
sub
clc
cwtl
fnstcw
cmpsb
in
jge
daa
lods
sti
cmp
sbbl
sub
orb
outsl
movsb
push
leave
mov
mov
cmpb
loope
aad
pusha
cmp
push
add
add
fnstenv
push
jo
mov
fldcw
inc
add
push
sub
jmp
popa
mov
pop
adc
cmpsl
sbbb
mov
xor
push
insb
out
cs
das
xchg
stos
cmpsb
xor
dec
sub
add
sub
std
pop
gs
dec
test
inc
cmp
mov
pop
push
mov
lahf
mov
addl
subb
or
dec
mov
loop
sub
push
and
enter
mov
jecxz
xchg
ljmp
inc
outsl
sub
repz
in
bound
test
jge
lds
mov
dec
push
loopne
pop
fstpl
jl
dec
aad
pop
repz
mov
sbb
fwait
adc
test
lds
dec
cli
arpl
push
pop
test
nop
mov
decl
outsl
ljmp
push
jle
and
out
push
dec
rorb
pop
shll
add
mov
mov
sti
mov
jno
pop
jl
pushf
icebp
mov
fisubl
bound
int3
pop
ficoml
xor
or
add
pop
test
sarl
ror
inc
stc
pop
jo
dec
ret
div
out
sbb
mov
mov
mov
test
ja
sub
cld
xor
jp
insl
out
jmp
and
insl
push
dec
shll
fisubrl
xlat
xchg
mov
lcall
dec
je
or
push
pop
jmp
fnstsw
and
and
sbb
xor
into
xchg
mov
or
aad
addr16
andl
addr16
in
subl
mov
pop
movsb
xor
sbb
sub
inc
add
xlat
bound
es
or
cltd
movsl
push
test
outsl
sub
add
notb
inc
adc
push
jbe
sub
mov
fisttpl
inc
cmp
imul
add
das
cmpsb
pop
ret
lods
ficompl
es
adc
divb
xor
adc
je
loope
in
test
xor
shl
fcompl
cld
ljmp
mov
jecxz
xchg
pop
dec
xchg
int3
dec
dec
sub
insl
stos
push
adc
xchg
mov
mov
or
xchg
pop
mov
stc
dec
in
mov
push
xchg
mulb
pop
sbb
xchg
rorb
jb
sub
cmpsb
rcrl
ljmp
getsec
xchg
les
xor
and
sbb
aaa
fstpl
fiadds
aad
lret
inc
xchg
in
pop
mov
sub
pop
into
pop
mov
jg
mov
mov
in
add
xor
xchg
ss
and
mov
jo
stos
mov
mov
push
popf
mov
inc
xchg
sti
jge
push
xchg
cld
pop
mov
fs
sti
xchg
mov
and
xchg
jp
addr16
and
iret
add
aas
mov
cmp
adc
es
mov
pop
adc
add
aam
aaa
shrl
aaa
sbb
mov
bound
lods
ss
fisubs
xchg
push
repnz
jo
adc
scas
shlb
ret
popa
push
push
cltd
push
test
push
dec
mov
test
mov
mov
cld
mov
cmp
or
push
cmp
pop
mov
xchg
pop
jae
popf
lret
iret
in
mov
repz
pop
shlb
movsl
inc
add
cmp
and
pop
dec
cmp
out
and
mov
sub
xor
daa
orl
jo
enter
pop
mov
jnp
clc
and
cltd
sub
add
fmul
stos
insb
mov
pusha
add
pop
in
xor
mov
ljmp
hlt
stc
into
push
xor
in
sbb
es
insb
inc
pop
fstpl
es
xchg
mov
cmp
xor
filds
xor
sbbb
push
loopne
push
out
add
test
popa
test
test
sbb
test
add
rorl
or
and
jl
pop
fbld
clc
aad
mov
ss
cmp
les
outsl
hlt
lock
add
jl
lcall
fwait
scas
icebp
cmp
pop
add
xchg
sti
popf
insl
pushf
push
and
mov
loop
mov
mov
fsubl
gs
sub
sub
mov
cwtl
push
pop
fistps
bound
push
rcrl
mov
sub
in
pop
pop
pop
insl
push
mov
movsl
rclb
daa
or
jge
inc
in
adc
ret
push
mov
pusha
rcr
ret
lret
arpl
daa
cmp
repnz
mov
je
or
call
std
cmp
pop
xchg
adc
inc
inc
dec
mov
fiadds
sub
lahf
fldz
xchg
push
dec
push
insb
dec
fdivl
ja
add
aaa
push
aas
inc
ss
pop
cmp
pop
rcrl
popf
ret
dec
mov
jnp
shll
stos
mov
out
aam
pop
push
sbb
jle
xor
xor
jg
popf
movb
jns
push
mov
push
mov
adc
jb
xchg
pusha
pop
lods
mov
sub
hlt
aas
xchg
ja
adc
add
stos
rolb
fwait
into
mov
cmp
sbb
mov
xchg
xor
adc
and
cli
aas
in
out
sub
jnp
inc
lock
out
inc
xor
sbb
dec
pusha
addr16
mov
repz
shl
lds
mov
lds
insb
jg
insb
jp
cmp
xchg
xchg
pop
frstor
xchg
pop
and
and
mov
shll
sub
xchg
sbbb
aaa
mov
and
add
xor
pusha
dec
sub
cli
mov
sbbb
dec
add
add
add
test
loop
jbe
shll
pop
sbb
xor
add
data16
pop
mov
dec
nop
cmc
xor
push
lret
pop
push
dec
mov
lret
out
into
aas
test
or
dec
rol
jnp
adc
inc
mov
in
loopne
out
pop
pop
jns
dec
idivl
es
hlt
faddl
sub
es
add
and
add
jg
and
bnd
leave
leave
sub
bound
imul
insl
leave
jg
pop
frstor
or
sbb
or
lcall
out
gs
xchg
out
or
or
xchg
movsl
pop
lds
sbb
movsl
add
bnd
mov
pop
int
dec
fcompl
mov
jne
mov
repnz
lds
roll
xchg
rolb
push
dec
sub
inc
mov
sbb
add
les
out
cmp
inc
cld
divb
imul
mov
stos
outsl
repnz
roll
fs
add
sub
orl
sahf
das
cmc
loopne
out
xor
adc
mov
fsubrl
and
cli
jno
insb
or
mov
shrl
push
ja
jp
iret
and
and
xchg
mov
aas
sub
dec
pop
adc
imul
sub
inc
mov
jecxz
out
popf
mov
in
push
imul
out
mov
loope
pop
push
mov
inc
mov
mov
dec
js
xor
sti
adc
push
cmp
and
scas
fldcw
cmc
jmp
das
xchg
daa
push
fwait
das
and
jge
mov
stos
sbb
adc
sbb
mov
mov
je
mov
mov
inc
jle
movsl
adc
out
les
pop
inc
jno
jl
sub
stc
loopne
xor
and
fcompl
jg
jnp
inc
cmp
aad
cmc
out
sarb
sbb
cli
adc
add
ljmp
mov
int3
add
int
push
xchg
call
push
nop
push
mov
xor
fisubrs
loope
cld
and
cmp
mov
pop
ds
or
xlat
jg
dec
aaa
mov
fdivr
ret
lds
sub
cmp
xchg
mov
jo
add
lret
xlat
mov
hlt
pop
adc
push
jo
and
enter
pop
push
sub
dec
cmp
sahf
lahf
int3
rcl
xor
jecxz
pop
popf
fnstenv
rcrl
inc
xchg
and
or
and
ficompl
mov
add
push
mov
cmp
je
stos
les
bound
les
jbe
adc
pop
xchg
or
cmp
lea
bound
pop
jge
into
mov
push
data16
jecxz
or
inc
mov
mov
loope
xlat
in
insl
push
roll
or
mov
cmp
jnp
push
jb
sahf
cltd
movsl
jns
mov
test
sbb
out
lret
subl
mov
bound
xor
pop
ja
jp
or
inc
call
stos
mov
dec
push
ds
cmp
push
cwtl
push
fstpl
out
xchg
or
loop
repnz
fcoms
xchg
das
cmp
fdivrs
repnz
mov
lock
es
sarb
inc
sbb
lret
cld
outsb
mov
or
nopl
mov
into
xchg
pusha
push
lahf
sbb
sub
mov
repnz
outsb
dec
nop
js,pn
push
and
push
add
pop
mov
xchg
xor
test
imul
int3
xlat
pop
gs
add
fs
xchg
imul
mov
sbb
dec
push
loop
xor
mov
fcoml
jp
lcall
nop
add
jl
xchg
mov
dec
fisubrl
imul
fsubr
data16
in
lcall
adc
loopne
imul
insb
add
or
add
sarl
test
cmpsb
insl
gs
jp
inc
mov
mov
xor
mov
pushf
rcrb
cmc
dec
cwtl
mov
inc
dec
push
lret
lock
fistps
cmp
scas
mov
mov
orb
jp
pop
mov
rcl
mov
stos
sbb
and
orl
xor
loop
adc
clc
in
push
out
jle
jbe
mov
mov
mov
movsl
dec
mov
outsb
shrl
loopne
std
sbb
pop
dec
daa
shll
ss
or
cmp
lret
fs
leave
xchg
test
or
or
dec
mov
fstpl
enter
jae
insl
add
cli
cmp
mov
repnz
pop
out
push
add
or
xchg
pop
sub
adc
inc
lret
cmpxchg
sub
icebp
into
dec
xchg
push
jb
stos
dec
imul
test
push
jg
jb
mov
pop
jne
insb
pop
xor
xchg
mov
lret
sahf
je
inc
mov
push
adc
shlb
xchg
sbb
mov
jg
mov
push
pop
xor
into
loop
pop
negb
sbb
push
dec
pop
imul
test
mov
sar
pop
shl
daa
and
and
and
adc
add
addr16
mov
pushf
arpl
out
loop
cld
jmp
in
loop
and
fs
push
jle
sbb
bound
lds
outsl
mov
cmc
push
adcl
pop
imull
lret
inc
mov
sub
movsb
jnp
sub
fldcw
xor
fstpl
ds
gs
cmp
call
lahf
movsb
frstor
aas
push
pop
clc
push
xor
imul
sbb
adc
es
pop
push
push
xchg
shrl
inc
jo
xchg
push
leave
push
fldenv
adc
loopne
cmovge
push
aaa
cmp
imul
jnp
cmp
arpl
repnz
ret
mov
and
ljmp
jp
mov
test
jl
shll
mov
or
mov
mov
mov
jne
sti
jg
cltd
rorb
pushf
fists
sub
jle
jbe
aaa
or
ror
jae
es
aam
dec
shll
sbb
mov
inc
jnp
and
imull
dec
cmp
mov
and
cmp
dec
mov
das
mov
and
jno
das
cmpsl
jb,pt
icebp
cmpb
and
lret
addb
ficoms
cmp
out
cmovb
push
xchg
add
loopne
adc
movsl
incl
cltd
into
lret
cmp
mov
insl
js
mov
in
es
jl
mov
and
popf
imul
pop
jge
sub
in
shll
sub
stos
ret
adc
fstpl
adc
adcl
lods
das
das
pop
mov
jns
push
cld
mov
and
pusha
mov
cmc
popa
flds
mov
jb
mov
cs
mov
mov
inc
jo
clc
pushf
xor
or
mov
pop
loope
push
push
es
pop
dec
jno
pop
das
cmp
mov
and
inc
sub
and
dec
cmp
rcrl
pop
icebp
sbb
jo
cmpsl
jne
mov
jbe
stos
jle
cmp
xor
ja
push
jnp
pushf
shl
xlat
cltd
sbb
and
std
into
gs
fdivrp
cmpl
and
in
insl
jmp
push
imul
cmp
jbe
loope
pop
cmp
add
xchg
jmp
ljmp
data16
cld
adc
bound
jl
jle
mov
sbb
push
jbe
jg
pop
sub
cmp
xchg
add
xchg
push
and
cwtl
loope
cmp
jle
fsubs
jp
imul
mov
dec
imul
sub
push
adc
dec
scas
stos
inc
mov
outsl
adc
cli
ss
inc
push
pop
pop
sub
fidivl
lcall
mov
mov
jnp
lods
and
push
push
ss
pushf
int3
jnp
lock
push
pop
setge
pusha
sbb
int3
or
jns
fidivl
xor
and
jecxz
jne
cld
mov
test
sti
int
mov
ss
in
pop
jecxz
filds
dec
ret
adc
xchg
mov
mov
xor
sub
dec
jo
into
popa
sub
add
fs
sbb
loop
movsb
add
mov
das
jno
movsb
fimull
pop
out
cmpl
aaa
dec
jecxz,pt
jg
int
popa
jp
dec
sahf
mov
data16
lods
push
jmp
movsb
dec
push
jb
pop
jle
sub
inc
push
test
jne
cmpb
insb
iret
or
movsl
add
es
jp
xchg
in
mov
sbb
mov
test
mov
and
aas
lods
sti
addb
push
mov
sbb
fists
pushfw
and
push
mov
add
das
loope
mov
fdivrl
scas
jno
xor
rcll
cmp
dec
pop
pop
insb
xchg
mov
xor
insl
not
lods
sbb
cmp
jo
fiaddl
in
lcall
int3
lods
and
dec
mov
cwtl
jl
jno
imul
aad
clc
iret
cmp
mov
stos
and
fs
pop
pop
in
scas
das
movsl
fisubl
mov
dec
fists
mov
aas
es
fnstenv
mov
pop
loope
lods
pushf
adc
sbb
mov
pop
xor
ficoms
sahf
push
or
push
xchg
pop
push
or
inc
inc
push
in
lock
daa
add
cltd
xchg
or
xor
mov
shll
lock
bound
rcll
adcb
adc
mov
push
mov
jbe
loopne
adc
scas
add
push
ret
imul
push
sub
and
adc
mov
jbe
jge
or
add
inc
dec
mov
pop
jno
push
jns
arpl
push
xchg
jecxz
pop
mov
insl
jp
stc
push
sub
imul
xor
sub
addr16
mov
jae
xor
pop
xor
adc
scas
jo
in
jb
mov
mov
and
cltd
sbbl
push
insb
inc
stos
xor
lods
dec
das
dec
jae
mov
scas
in
jmp
push
pop
push
ljmp
aaa
and
shr
and
jl
aad
cmc
mov
pop
adc
clc
pop
imul
in
mov
xor
lahf
iret
xchg
mov
push
imul
ret
lods
notl
xor
cmpsb
std
shlb
mulb
push
jmp
dec
add
or
xchg
fdivr
cld
inc
and
mov
inc
pop
jns
mov
adc
pop
stos
or
or
jne
movsl
inc
pushf
jp
fcmovne
pop
div
mov
xorl
call
int
and
cld
pop
cli
aam
arpl
pushf
and
dec
daa
ja
lock
cwtl
jns
mov
das
stos
test
aas
dec
sub
das
outsl
mov
pop
and
int3
inc
in
add
push
fndisi(8087
jnp
push
adc
mov
ds
mov
pop
dec
stos
bound
orb
dec
xor
or
adc
xchg
mov
mov
lock
adc
lret
movb
mov
or
push
add
lahf
and
push
test
adc
ja
adc
outsl
sbb
pop
mov
cmp
into
or
cmp
out
cltd
sub
mov
outsb
int3
push
lods
in
pushl
pop
dec
sub
out
adc
das
sub
dec
jo
hlt
dec
push
aam
cwtl
shrl
lahf
lock
add
adc
es
sbb
nop
scas
sbb
lods
stos
fsubr
cmpxchg8b
cmc
imul
sti
sahf
loop
cli
sahf
dec
jb
repz
mov
mov
inc
ljmp
mov
pushf
sub
pop
iret
cmp
jb
fnstenv
add
testb
xor
xchg
loop
or
frstor
xor
out
lods
mov
and
push
ret
cmp
xor
push
adc
dec
in
call
loopne
repnz
mov
sbb
aad
ss
and
jae
cmp
mov
mov
xor
xor
adc
or
inc
add
xor
jb
push
dec
pop
cli
icebp
xor
adc
cmpsl
mov
ret
mov
mov
lods
pushf
cmp
test
inc
cli
movsb
mov
scas
das
mov
cmc
push
jno
roll
jmp
and
inc
sbb
xor
fldcw
sarl
mov
lods
test
xor
mov
pop
add
aaa
push
jmp
sub
inc
jbe
inc
test
and
sbb
push
pusha
jno
cmp
add
mov
mov
jl
or
pusha
push
xor
std
fisttps
popf
leave
dec
movsl
xchg
mov
sbb
cmp
es
loope
inc
addr16
lea
sub
subb
ja
testb
mov
jg
roll
sub
mov
lds
xor
sub
cli
hlt
and
mov
cmp
xchg
ret
lea
pusha
or
data16
imul
stos
cmc
sahf
jne
sub
test
mov
fldenv
int
xor
xchg
popf
ljmp
ja
rcll
dec
dec
push
idivl
cmpsb
push
mov
xchg
pop
and
scas
adc
or
addb
sub
inc
sarl
into
stc
mov
push
xor
mov
and
insb
cs
out
dec
or
mov
xor
push
pop
in
fisubs
lcall
in
push
dec
or
sub
adc
push
sub
cmp
mov
xlat
adc
fst
sarl
movsl
movb
mov
ja
ja
out
mov
cltd
xor
push
xorb
int3
mov
xchg
fbld
test
push
push
or
dec
cmp
cltd
loop
add
test
ret
xor
imul
inc
nop
adc
icebp
and
ret
in
xchg
xor
loop
rcrb
mov
fnstcw
push
cmpsl
cmpl
mov
push
push
rcll
and
add
inc
pop
mov
cmp
dec
jns
out
subl
fnsave
ds
aaa
cld
rcll
leave
out
test
pop
sbb
push
out
mov
stos
mov
add
lcall
cmp
or
xchg
lret
push
fs
cmpsb
js
pop
ret
roll
or
jl
repnz
cmpsl
pop
xor
iret
xorl
mov
aad
cmpl
shr
dec
or
jb
pop
mov
mov
adc
loopne
push
xchg
xchg
outsb
jg
filds
hlt
mov
inc
push
xor
shl
call
sub
and
mov
mov
pop
jmp
jno
jmp
das
push
fnstcw
sbb
int
sti
mov
push
jo
xorb
add
sbb
xchg
inc
xor
lcall
cmp
dec
xchg
jge
adc
lea
insl
xorb
pop
nop
push
push
sti
adc
dec
push
mov
adc
inc
xor
inc
fdivs
stos
ret
jns
iret
pop
xor
mov
add
sbb
push
jns
sub
imul
test
lods
xchg
jns
sub
cwtl
dec
ret
xchg
pop
add
xor
into
gs
jge
pop
ljmp
push
cmp
adc
hlt
cld
mov
jae
dec
cli
jnp
sub
fadd
dec
cmp
fbld
mov
sbb
lods
mov
push
cmc
xor
inc
push
inc
mov
jle
stos
arpl
jae
fcmovnu
clc
repnz
ss
adcl
mov
loopne
sub
sbb
mov
lahf
xchg
jns
test
popa
cld
repnz
lcall
hlt
rcrl
addb
push
dec
ret
fldcw
adc
jnp
jae
mov
jg
xchg
xchg
cmpb
or
aam
ljmp
pop
push
std
repz
inc
or
jmp
subl
xchg
mov
cmp
jg
dec
xchg
aas
insl
cmp
and
sbb
les
fucomi
mov
and
push
sar
mov
or
mov
fstl
imul
or
lds
xchg
stos
mov
lock
ds
xor
xchg
push
or
mov
sbb
aam
pushl
call
sbb
add
xchg
loop
inc
push
jp
xor
mov
es
loope
add
or
inc
lock
test
jns
lds
mov
jl
inc
ss
dec
rorb
scas
aaa
popa
rolb
movsb
ja
std
pop
mov
inc
xchg
and
out
cmp
jge
cmp
in
inc
xorb
inc
je
roll
ds
cmp
sbb
xchg
cmp
xchg
and
jne
insb
shrl
mov
movsl
sbb
push
push
cmpsl
cmp
jge
push
mov
sbb
call
pop
jge
ret
cmp
bound
push
jbe
cmpsb
mov
add
pop
in
xchg
xor
mov
pop
imul
push
push
pushf
xor
int
fldt
ss
and
and
aas
or
fwait
cwtl
fimuls
sub
in
sub
insb
mov
lahf
pushf
and
pop
test
adc
push
sub
insb
xorl
xor
sbb
sub
jns
jb
pop
rcll
push
sub
and
movsl
mov
and
push
loopne
fbld
ds
sub
or
bound
adc
xchg
jle
or
push
dec
push
data16
inc
sbb
and
rclb
scas
mov
call
out
popf
add
pushl
push
sub
mov
xchg
cmp
lret
jne
push
loopne
and
je
dec
das
pop
movsl
sbb
addr16
jle
xchg
sub
insb
arpl
outsb
pushf
cli
repnz
mov
push
shrb
imul
repnz
cld
insb
push
hlt
in
push
repz
ret
je
xchg
fs
ja
lahf
fdivrs
or
push
jb
flds
lret
ja
in
jnp
into
cmpsb
and
fsubr
fdivrs
test
mov
jl
stos
jnp
mov
push
mov
jmp
scas
mov
lods
and
jecxz
test
push
ficompl
adc
out
jle
jge
rorb
rcrb
or
sbbb
cwtl
testb
push
popf
pop
or
imul
adcl
out
ficompl
pop
sub
lock
pop
stos
pop
pusha
xchg
pop
pop
je
sbb
in
cmpsl
test
ljmp
ss
sub
mov
cmp
lods
into
iret
test
pop
adc
mov
jbe
push
xchg
push
jae
pop
jge
data16
dec
push
pop
sub
inc
cmp
lcall
ret
loope
xchg
dec
out
dec
jne
or
fs
lcall
cmpsb
cltd
mov
sbb
test
mov
jns
fdivp
or
jmp
or
in
sbb
out
push
mov
push
out
mov
fsubrp
sbb
fwait
lock
js
movb
xor
lret
dec
pop
cmp
popa
in
jmp
subl
or
mov
inc
add
push
cmp
jl
test
es
mov
sub
test
push
data16
or
inc
test
and
cltd
pop
fisubrs
fstpl
cld
adc
iret
mov
divb
xor
stc
pop
xor
xlat
notl
ficoms
cmp
add
inc
inc
sti
pop
dec
add
mov
rcll
add
popf
sub
or
xchg
dec
xchg
dec
push
xchg
push
cmpsl
scas
and
or
cmpsb
out
pop
fsubrp
inc
jmp
scas
outsb
push
std
mov
ljmp
nop
cwtl
testb
pushf
xchg
outsb
xorl
or
lret
jge
lock
sbb
sti
cmp
cmp
fidivs
jmp
inc
mov
out
push
sbb
add
mulb
jmp
scas
cmp
fdiv
push
enter
fidivrs
out
fadds
sub
loopne
insl
jns
arpl
xchg
mov
pop
fnstenv
cmp
out
push
add
inc
push
lea
stos
mov
cmp
mov
in
ss
xchg
push
jl
in
sbb
test
fstpt
in
or
nop
xor
pop
hlt
popa
lods
xchg
subl
mov
mov
movsb
cmp
aam
fdivrl
add
or
adc
fmulp
sbb
xor
xor
addr16
call
xchg
inc
xchg
push
cs
xchg
xor
test
popf
aas
and
sbb
mov
inc
or
jae
movsl
mov
push
nop
xor
sbb
adc
or
rorb
fcmovbe
pop
ficoml
cltd
mov
into
xchg
xor
jb
cli
ds
cmp
xor
sbb
dec
stc
mov
out
and
nop
lods
dec
mov
leave
pop
pop
xor
jg
cmpsb
xchg
shl
outsl
roll
push
mov
and
mov
or
inc
cmpsb
sub
fcoms
dec
test
lcall
scas
pop
fisttpll
nop
or
sti
lds
sarb
jne
js
je
push
popf
loopne
jae
nop
or
shrb
add
inc
jp
mov
pop
mov
hlt
push
cwtl
jecxz
sub
mov
jp
push
lods
push
mov
add
xor
lcall
orb
jge
pushf
fadds
mov
outsb
out
mov
les
loopne
and
push
sbbb
dec
shrb
xchg
jp
fsubrl
sbb
adc
into
push
xlat
push
popf
inc
and
xor
xchg
rcr
movsl
jae
sbb
mov
and
push
popf
xchg
dec
sub
ja
dec
mov
call
jae
jns
and
dec
lcall
dec
sub
negl
dec
mov
xchg
cwtl
lods
xor
ljmp
repz
mov
xchg
stos
push
jo
stos
js
sbb
repnz
jbe
das
push
sti
xchg
push
or
hlt
push
jns
push
add
pusha
sub
push
lret
movsl
and
and
gs
movsb
pushf
sbb
js
pop
test
dec
ljmp
or
add
or
loopne
pop
lods
mov
dec
es
inc
sub
cli
xchg
clc
jg
popf
inc
stc
cltd
ss
loop
cltd
push
pop
inc
sub
jle
js
pop
dec
xchg
dec
jle
and
inc
add
mov
xor
mov
sbb
and
xor
xchg
add
cmp
dec
divb
jae
inc
loopne
jle
dec
adc
lds
mov
jnp
push
sub
jnp
in
cmpsb
gs
decl
mov
push
test
divl
imul
pop
test
cli
jne
cmp
sbb
ljmp
addb
fnclex
mov
aas
scas
pop
xchg
gs
mov
rorl
pusha
sub
gs
jp
sbb
jecxz
std
cmp
lcall
aad
ds
xor
sbbb
out
mov
ss
dec
jg
ljmp
pminub
mov
lcall
mov
out
arpl
push
adc
sarb
xlat
cmp
push
sbb
or
xor
sbb
or
xchg
mov
scas
nop
xor
clc
mov
add
add
mov
cmp
mov
fsubp
dec
adc
je
add
push
push
or
pop
xlat
in
dec
and
mov
mov
loop
std
dec
nop
outsb
lret
sarb
sub
xchg
mov
and
lods
leave
popf
js
insl
mov
test
rcr
dec
outsb
cmp
mov
stc
ja
inc
bound
dec
lret
mov
fucomip
loope
mov
xchg
mov
xchg
jns
xchg
mov
rcll
das
outsl
scas
sbb
aad
or
popa
mov
std
test
into
lds
pushl
cs
push
cmc
pop
std
mov
fs
jo
cltd
xor
jbe
mov
aad
lret
jle
test
das
imul
in
sahf
push
out
out
mov
data16
in
add
dec
out
out
les
shlb
mov
sub
out
gs
stos
dec
cmpsl
cltd
mov
mov
subl
lods
icebp
ja
xor
ss
into
lret
cmp
fdivl
cmp
test
ret
pushl
sbb
push
sub
test
or
je
mov
cmpsb
and
push
mov
sub
or
stos
lcall
es
nop
jne
das
xchg
xchg
in
xor
ror
cmp
cmpsb
test
xor
out
inc
inc
adc
or
dec
pop
and
in
jle
add
mov
push
sub
ja
out
int3
push
adc
fdivrl
add
mov
mov
xor
lret
rcrb
jno
pop
sub
js
leave
pop
loop
outsl
fstpt
mov
push
ss
dec
bound
or
dec
push
shrb
in
inc
lods
jne
or
jo
mov
incb
leave
push
bound
mov
in
mov
enter
jb
inc
ja
rorl
fldt
hlt
adc
out
mov
and
jecxz
cmpsl
cmp
imulb
sbb
dec
sub
stos
pop
pop
adc
sub
xchg
out
lods
in
mov
xchg
jnp
cltd
nop
ss
push
push
lds
outsb
cmovo
popa
ja
lret
push
xorl
cmc
aas
lds
stos
outsb
std
lods
inc
or
sbb
icebp
pop
jo
jne
add
pop
mov
imul
decb
mov
xor
or
mov
loop
xchg
jmp
imul
sbb
dec
enter
mov
push
les
fwait
imul
inc
sub
mov
inc
out
cwtl
xchg
xor
or
ss
lret
xor
mov
mov
or
xchg
leave
sub
adc
dec
cmpsb
fmul
push
mov
jle
gs
stos
xchg
test
jns
fwait
inc
popf
lret
cmp
sub
scas
cmp
test
in
cmp
or
pop
test
jne
adc
add
test
shlb
sbb
shlb
adc
xchg
pop
rcrb
lock
xsaveopt
add
sub
xor
out
adc
rcrb
test
mov
dec
mov
mov
ja
bound
lock
xchg
pop
in
lods
mov
test
repz
cmp
popf
loope
pop
cmp
mov
lret
inc
les
push
sub
ret
movsb
test
mov
pop
jae
cmp
shrb
mov
cmpl
push
shrl
out
in
mov
loop
mov
mov
cld
mov
outsb
xchg
fists
rorb
lods
fucomip
sbb
cwtl
pusha
mov
dec
idivl
add
inc
xchg
xchg
mov
loope
loopne
push
xlat
xchg
mov
pop
insl
ficoml
daa
mov
pusha
cmpsb
pop
push
out
adcb
dec
cmp
sarb
ret
frstor
pop
adc
pop
pop
sub
jg
adc
fldenv
dec
sarb
loop
pop
hlt
cmpl
mov
stc
rcll
daa
scas
mov
sbb
out
xchg
fptan
in
or
cmpsl
idivb
and
cmp
adc
into
sub
lcall
xchg
xor
lods
and
popf
popf
call
xchg
movsb
addl
push
xor
fsub
rclb
hlt
mov
push
xchg
jnp
mov
es
inc
lahf
sahf
cwtl
daa
fsubrs
test
test
or
add
inc
mov
mov
sbb
repnz
cld
lahf
pop
aas
and
out
into
mov
jecxz
nop
or
mov
lods
pop
adc
adcl
push
inc
cld
xor
fsubr
xchg
mov
mov
mov
and
dec
loopne
and
mov
es
pop
jae
je
xor
inc
jae
stc
inc
or
push
outsb
aas
and
aad
cs
mov
mov
push
movsl
jl
lcall
adc
out
int3
arpl
push
popa
nop
mov
enter
data16
lock
repz
es
jne
mov
jne
sarl
mov
pop
mov
cmc
outsb
inc
aam
add
xchg
pop
pop
pop
add
cmp
mov
jbe
fs
and
cmp
and
pop
loopne
cwtl
pop
mov
aam
daa
enter
mov
popa
fs
lcall
stc
dec
dec
popa
out
test
inc
pushf
pop
and
inc
cmc
sbb
push
xor
out
or
jle
int3
fildll
inc
pop
jg
sub
hlt
add
or
xor
xchg
cwtl
and
xchg
mov
test
mov
in
out
nop
shrl
pop
adc
pop
outsl
push
stc
inc
mov
push
ds
pop
push
pop
sbb
push
jmp
jno
cltd
push
mov
add
push
repz
mov
into
mov
cmc
jnp
std
shr
inc
and
add
inc
or
into
mov
dec
or
clc
loope
imul
int3
mov
outsb
add
jo
test
pop
dec
cli
sub
fmuls
xlat
sub
xchg
push
setle
fistpl
xor
mov
mov
in
jne
mov
dec
mov
push
in
or
mov
sbb
xchg
js
fs
dec
fdivr
mov
xchg
arpl
fucomp
shrl
lds
fimull
out
mov
cmp
flds
call
outsb
jne
ja
shll
shll
out
fsts
jge
outsb
xchg
mov
stos
add
stos
in
adc
pop
sar
inc
dec
subb
gs
sub
int3
clc
add
outsl
fbld
pop
xchg
fimuls
push
pushf
aaa
sbb
aas
mov
push
ret
scas
jp,pt
sub
xchg
orb
movsb
into
stc
or
mov
jno
push
mov
cmc
aas
ljmp
div
inc
sub
xor
mov
xchg
cmp
jns
mov
loop
mov
add
rcll
scas
mov
call
clc
mov
mov
mov
dec
mov
cmpsl
pop
mov
lret
sub
outsl
jb
adc
inc
inc
and
xor
inc
xor
inc
mov
ljmp
mov
pop
shrb
loopne
ss
fisubrl
inc
aad
and
clc
test
stc
fstpt
sbb
cmp
pop
sub
mov
cmp
add
dec
adc
adc
jne
cltd
rcl
mov
cli
lods
jg
xchg
mov
xlat
loope
pop
mov
lret
add
movb
movsb
fs
sub
xchg
ret
xlat
adc
out
je
test
repz
xor
add
in
es
mov
mov
mov
cmc
popf
pop
scas
jecxz
in
test
sub
xor
cmp
dec
popa
ss
or
pop
ds
dec
ret
mov
add
mov
cli
add
test
add
or
jecxz
into
das
cmpsl
mov
dec
jb
sbbb
mov
shlb
cmp
xchg
jecxz
dec
lods
psubq
jge
pop
rolb
inc
xchg
in
stos
sbb
shll
stc
aad
mov
xchg
sarb
lret
stc
mov
ret
jmp
jo
ds
or
movsl
or
lcall
jae
mov
lea
decb
sbb
aad
ficoms
out
lret
dec
lcall
xor
inc
lods
or
lods
push
pushf
pop
loop
xchg
fbstp
aad
loopne
nop
or
adc
cmp
out
ficoms
and
push
sub
xchg
sub
int3
xlat
ljmp
add
gs
ficoms
adc
xchg
and
jne
push
dec
and
loope
les
push
nop
pop
repnz
xchg
mov
cltd
mov
add
sub
roll
out
or
pusha
sub
sub
cmpsb
pop
pop
dec
mov
or
inc
mov
add
sbb
jb
and
pop
dec
leave
dec
imul
sub
or
mov
push
cmp
mov
sbb
push
dec
cmp
push
inc
fidivs
fstl
out
shrl
pop
fmuls
adc
jp
inc
arpl
mov
fldenv
outsb
pop
fildl
shrb
adc
inc
inc
and
add
jge
pop
stos
push
or
call
inc
sahf
cmp
shll
dec
mov
jb
in
add
ljmp
inc
dec
cmp
test
mov
test
imul
sub
sub
sbb
cli
sbb
daa
cmp
xor
pushl
cmp
adc
xchg
shll
insb
in
fwait
mov
pop
xor
aaa
mov
lods
clc
mov
bound
or
or
xchg
mov
adc
sbb
shlb
mov
in
sub
idivl
test
outsl
shll
out
sbb
negl
outsl
mov
sub
ficoms
aad
xchg
test
inc
inc
je
sarb
das
ret
jne
xor
rcll
lock
cld
cli
jp
lock
loope
cs
adc
ffree
cwtl
lods
aam
leave
imul
ds
pusha
lods
cmp
sub
in
mov
adc
mov
fmull
nop
sbbb
cmpb
dec
add
lods
popf
adc
add
popw
mov
add
sbbb
fwait
push
js
or
sahf
ljmp
ficompl
ret
cmpsb
mov
cmp
fldl
imulb
pop
push
mov
mov
push
inc
lods
ss
jo
jg
inc
test
or
xchg
lods
pop
das
xor
mov
dec
jo
stos
cltd
in
sub
xor
pop
and
out
mov
add
out
aad
or
je
xchg
pop
fcmovnb
jnp
mov
and
mov
movsl
mov
cmc
mov
sub
jb
or
enter
loop
mov
sbb
push
nop
mov
repz
push
mov
inc
xchg
ss
cmpsl
mov
rclb
cmp
mov
mov
sbb
pop
cmp
repz
mov
sbb
shll
xchg
mov
pushf
in
sub
adc
sub
or
pushf
mov
arpl
mov
pop
outsl
imul
add
dec
jno
cmp
ret
mov
cli
das
xorb
aad
lock
std
sbb
xchg
je
xchg
inc
test
jno
or
xchg
cld
popf
mov
xchg
pop
pop
jecxz
adcl
dec
cmp
bound
movsl
and
call
and
inc
mov
inc
jnp
jge
cmp
icebp
arpl
mov
cli
xor
and
in
mov
aad
out
cmpsb
dec
aaa
loop
xor
mov
je
jmp
jmp
repnz
xor
aaa
lret
stos
mov
or
out
jmp
dec
nop
inc
lods
or
push
lret
sub
fnsave
outsb
in
mov
push
dec
mov
mov
inc
popa
push
mov
inc
mov
jg
fldl
popa
rcr
sti
test
pushf
pop
cmp
xor
sbb
into
sub
loop
xor
lods
jp
call
add
lock
xlat
insl
repnz
push
stos
enter
mov
jae
jge
out
imul
mov
je
jle
push
fstpt
pop
inc
inc
jl
aas
jnp
mov
mov
add
jno
pop
out
inc
enter
sahf
in
cmp
scas
push
inc
cwtl
icebp
adc
mov
sub
outsl
sub
loopne
fcmove
dec
movsl
ret
and
shlb
cwtl
dec
scas
daa
je
jecxz
and
mov
stc
stos
aaa
jne
lret
mov
orl
stc
psrlq
mov
call
mov
mov
dec
lods
push
dec
cs
das
xchg
pop
data16
lret
jbe
pop
pop
aaa
push
pop
outsb
icebp
cltd
fcmove
xchg
jno
mov
adc
cwtl
stos
or
fmuls
leave
mov
mov
push
addr16
jge
lret
inc
push
subl
dec
cwtl
and
repz
int
xchg
xchg
push
pop
aam
xchg
popa
outsl
xchg
pop
bound
loope
filds
lock
fisubrl
pop
mov
je
rolb
xchg
lods
popf
fsubl
adc
cmpsb
or
fsubs
daa
adc
aam
jo
jne
dec
mov
pop
inc
sbb
daa
lock
xchg
xchg
jl
jno
pop
and
mov
inc
ds
orb
sub
imul
lea
arpl
jb
std
enter
lret
andb
scas
pop
roll
jecxz
dec
bound
xor
push
mov
int3
cmp
xchg
inc
mov
mov
and
std
xchg
sti
or
imul
data16
ret
mov
icebp
out
pop
bound
mov
test
aas
add
fists
jle
mov
shl
ja
mov
ss
addr16
mov
test
lret
or
inc
pop
inc
xor
aas
mov
cltd
or
sbb
das
insl
adc
lret
fs
clc
mov
stos
dec
imul
in
mov
scas
std
pop
add
push
xorb
xor
mov
test
mov
mov
dec
xchg
fsubrl
cmp
push
popf
mov
push
int
movsb
cmp
jge
push
outsb
movsb
push
aaa
gs
mov
jno
mov
push
mov
pop
mov
aas
and
sarb
lock
sub
mov
imul
int3
bound
mov
out
xchg
cltd
fstl
pop
sub
rcll
inc
mov
pop
dec
jo
cmp
ja
loope
ja
mov
xchg
insl
lods
sbb
sub
xor
adcb
dec
aam
in
sbb
jg
ja
into
adc
fsubrl
je
sbb
push
clc
or
mov
adc
hlt
aad
inc
movsb
in
inc
or
add
scas
xlat
test
lahf
setp
mov
jle
aaa
adc
and
es
pop
push
stc
mov
sbb
add
sahf
or
sti
enter
push
cmc
adc
les
loop
jo
inc
lds
cmpsl
add
ds
inc
clc
sahf
call
mov
mov
pop
popa
ds
fsub
adc
frstor
cmp
pop
repz
cmpsl
jg
stc
aas
cmp
xchg
imul
jmp
stos
mov
clc
cmp
cmp
jge
jge
inc
xor
inc
jne
stc
loopne
fldt
popf
ss
xchg
add
jb
movsb
lea
dec
pushf
dec
or
push
inc
jns
cmp
aas
inc
leave
xchg
imul
lea
outsb
repnz
arpl
add
mov
out
dec
lds
mov
push
adc
notl
push
test
sub
cmp
push
pusha
cmp
popf
add
insl
loop
cmp
and
mov
pop
in
gs
test
icebp
push
mul
sbb
xor
rclb
xlat
inc
aad
cmp
or
bound
mov
call
push
jl
fs
fnstsw
inc
scas
ja
pushf
jg
into
test
sbb
fldz
lahf
cmp
or
mov
ret
hlt
adc
std
js
dec
scas
adc
pop
push
insl
pop
jnp
mov
gs
cmc
xor
shl
add
push
dec
xchg
cmp
aas
call
xchg
lods
push
repz
les
or
xor
push
mov
or
xchg
mov
fdivrl
sbb
pop
ss
inc
jecxz
cmp
xor
adc
sbb
sbb
inc
ficompl
and
mov
mov
sarb
lret
mov
fisubrs
jl
in
sub
dec
or
mov
insl
pop
pop
fsub
ret
cmpsb
js
test
dec
pop
cli
cmp
jb
cwtl
xchg
push
xchg
outsl
mov
sbb
mov
ss
mov
xchg
sti
mov
mov
das
outsl
sbb
pop
rcrb
rep
pop
xchg
sub
mov
xor
dec
dec
test
insl
pop
inc
ret
cmpsb
je
outsb
mov
pop
leave
adc
ret
sbb
sahf
mov
sub
pop
jbe
jl
mov
test
push
gs
push
inc
out
inc
xor
mov
jno
stc
xor
fbstp
jbe
in
jecxz
push
add
or
pop
cmp
jmp
iret
stos
xor
xchg
jecxz
test
dec
sbbl
dec
fiaddl
arpl
fmul
loope
sahf
imul
mov
mov
xchg
out
and
mov
push
dec
sbb
pop
sbb
sub
mov
imul
sub
je
rcrb
and
pusha
jg
or
and
lahf
mov
add
sbb
stos
out
or
je
push
dec
inc
test
inc
mov
push
ljmp
push
push
mov
aad
adc
dec
adcl
icebp
aaa
lret
jg
test
mov
pushf
ljmp
push
xchg
in
sub
jbe
flds
sahf
hlt
adc
ret
jmp
imul
mov
movsl
in
push
insb
adc
icebp
sbb
loop
sarb
add
push
clc
movsl
jp
test
xchg
cmp
fstps
add
daa
inc
test
imul
orb
insb
rclb
stc
lret
push
je
push
push
mov
in
sub
jbe
pop
sarl
mov
xchg
mov
scas
fwait
clc
xchg
stos
das
cwtl
fs
inc
or
mov
jne
loop
popf
push
test
xor
sub
pop
andnps
orb
lcall
movsb
insb
push
cmpsl
jl
lret
xchg
ret
mov
mov
sub
add
xchg
xchg
inc
jecxz
mov
loope
add
push
xor
fisttpl
lret
jae
inc
rcrl
cmp
push
push
nop
std
gs
jne
mov
insl
inc
lcall
add
xchg
cmpsb
xor
mov
add
pop
repnz
or
mov
xor
xchg
mov
ljmp
ret
pop
and
outsb
pusha
xchg
pop
pop
fucom
inc
fldt
mov
ret
cmp
sbb
xchg
push
push
jp
push
mov
ss
jp
xchg
aam
xlat
mov
dec
insb
sbb
test
iret
fmul
fcompl
dec
and
push
pushw
pop
jae
or
xchg
cmpsl
loope
xchg
int3
pop
mov
push
jne
ljmp
repnz
xlat
mov
push
mov
push
adc
sub
fistps
mov
mov
pusha
in
call
add
insl
scas
sbb
lods
fmull
test
and
add
test
mov
inc
cmp
cmovns
mov
clc
inc
mov
adc
adc
loop
mov
test
jno
fistps
adc
mov
lea
repz
mov
adc
ja
adc
inc
mov
in
bound
repz
mov
push
ret
jnp
ror
stos
push
insb
fbstp
adc
jbe
sub
xchg
xor
xchg
adc
cmpsb
mov
fldcw
call
lods
aad
inc
adcl
loope
push
adc
push
dec
mov
or
repnz
cwtl
js
or
pop
push
cmp
pop
movsb
test
xchg
mov
enter
jnp
mov
and
popf
popf
mov
xchg
mov
stc
arpl
fbstp
pop
jmp
cwtl
and
cmp
call
lods
negb
mov
mov
inc
add
sbb
xor
in
stos
lret
addr16
cmpsb
ret
outsl
push
fimull
push
and
fstps
rorb
pop
push
sub
std
mov
push
push
imul
mov
in
sbb
lahf
and
xlat
shr
jno
adc
js
fsubs
adc
arpl
hlt
insl
insb
dec
adc
insl
or
dec
fwait
orb
ds
iret
lods
je
das
add
sub
xchg
push
outsb
dec
in
push
aaa
mov
ret
mov
xor
jbe
pushf
dec
adcl
dec
jb
inc
dec
mov
push
mov
cmp
push
push
shll
in
ja
inc
pop
loopne
dec
add
out
ret
das
js
mov
lods
xchg
mov
lods
aam
andb
xlat
jno
add
pop
jecxz
adc
out
sub
insb
outsb
xor
mov
stc
jecxz
dec
mov
rcr
popa
and
push
mov
lret
inc
or
dec
ljmp
adc
and
jae
pop
mov
mov
mov
dec
dec
xor
or
xchg
scas
jno
nop
adc
repz
into
insl
mov
fs
outsb
push
lods
in
cmc
int
mov
mov
lods
mov
popa
int3
adc
add
sub
in
add
sub
add
and
sbb
cmpsl
out
dec
xchg
or
dec
mov
pop
push
pop
mov
cmp
hlt
dec
ja
xchg
test
aad
loop
jnp
ja
lds
int
push
xor
and
mov
aaa
sub
adc
movsb
lods
je
clc
xchg
push
sahf
cmp
cwtl
sbb
add
add
loope
cmp
out
stc
mov
push
sar
imul
rcrb
leave
xlat
jmp
mov
cli
mov
adc
in
mov
add
stc
xor
push
adc
mov
pop
ja
adc
push
push
jnp
mov
outsl
add
sbb
out
loope
xor
ret
pop
aad
stos
cld
sti
popf
fdivrl
out
cmp
mov
fwait
lock
leave
cmpsl
cmp
dec
pop
push
or
rolb
fidivrl
adc
mov
dec
push
int3
test
cmp
fdecstp
out
push
jnp
sub
jne
hlt
addb
adc
loope
dec
stos
push
imul
jae
mov
les
pushw
pop
addr16
add
inc
jne
outsb
out
out
cmpl
loop
mov
insb
and
dec
xor
es
pop
or
xchg
inc
stos
add
mov
xchg
cmp
and
out
jo
daa
mov
xchg
rolb
add
je
sub
jecxz
nop
aaa
pop
jbe
xor
pop
xchg
jae
pop
adc
mov
mov
inc
insl
mov
repnz
mov
icebp
insb
add
jl
mov
icebp
cmp
mov
lds
push
push
jb
xchg
lahf
xchg
int3
cmp
daa
or
fidivl
lods
mov
lret
jae
mov
ret
fidivs
dec
jb
mov
mov
mov
xrelease
out
pop
arpl
out
push
xchg
add
add
mov
xor
pushf
loop
mov
adc
adc
pop
js
and
in
fcmovnbe
jne
std
bswap
inc
test
int
icebp
subb
inc
lods
inc
jae
add
pop
mov
int3
push
insl
xor
push
inc
movl
icebp
out
push
xorb
lahf
jmp
mov
cmp
inc
mov
xor
add
and
add
push
in
aad
in
jge
sbb
les
loope
pop
jl
sbb
fwait
imul
mov
lret
mov
push
or
int
test
imul
xor
xor
fsubl
or
xchg
dec
and
lret
jg
outsl
push
pop
mov
adc
mov
mov
inc
out
adc
jecxz
shlb
xor
mov
in
cmp
sbb
pop
fnstenv
lret
dec
jle
clc
push
je
mov
xchg
decb
outsl
mov
idivb
popf
adc
and
repz
outsl
test
pop
push
or
pushf
faddl
out
push
dec
sub
loop
mov
xor
or
mov
lret
mov
notl
cli
lock
dec
stos
movsl
sbb
negb
leave
out
int
ret
clc
int
inc
inc
adc
lds
je
push
ret
out
jmp
pop
pop
dec
adc
fs
mov
xor
adc
sub
outsb
adc
rorb
aas
push
cmpsb
or
sub
scas
cmpsl
pop
dec
ja
in
leave
xchg
lea
and
mov
mov
add
mov
pop
sbb
dec
repz
aas
jl
mov
and
adc
inc
jle
cmp
add
stc
xchg
add
insb
popa
pop
push
pop
cmp
xor
dec
or
hlt
add
stc
lahf
loopne
hlt
mov
fbld
mov
outsb
hlt
sarl
je
test
jnp
pop
push
in
mov
fcompl
mov
or
out
icebp
jmp
sahf
dec
adcb
xor
scas
leave
loopne
lock
daa
adc
adc
jmp
and
mov
jno
add
inc
cmp
mov
mov
cmpsb
push
aad
pop
sbb
push
leave
xor
test
lcall
inc
adc
lcall
paddsb
or
in
icebp
cmpsl
add
mov
lods
pop
cli
rcrl
adc
mov
enter
mov
out
out
xchg
pushf
cld
mov
push
or
xor
jecxz
pop
lahf
xchg
sub
cwtl
dec
in
aas
jo
mov
fidivl
dec
cltd
mov
mov
cltd
sbb
sub
sbb
dec
scas
pop
decb
jp
xlat
inc
jmp
scas
sti
movsb
rcr
dec
xchg
jb
mov
sub
pop
pop
stc
pop
in
add
mov
sti
sbb
mov
pop
mov
jo
adc
pop
jmp
nop
dec
adc
xchg
fsubr
xchg
mov
or
mov
cmp
push
push
ret
in
bound
sbb
sti
leave
and
sub
lret
outsb
sub
and
out
mov
jns
push
sbb
lock
mov
and
je
test
mov
pop
add
int3
fstl
cs
add
mov
mov
in
enter
cmp
ds
into
dec
lret
adc
aam
cltd
sbb
cmpsb
and
and
jmp
outsl
les
cmp
loopne
sub
push
gs
lahf
inc
push
imul
andb
das
sbb
dec
dec
xor
dec
jge
pop
mov
mov
imul
mov
je
and
leave
push
mov
cmp
fst
loope
test
testb
enter
or
aaa
test
out
cmc
xor
cmp
sbb
mov
shll
enter
pop
mov
repz
push
pop
mov
imul
insl
loope
pop
icebp
push
pushf
adc
aaa
jecxz
lods
mov
adc
xchg
mov
pushl
xchg
jge,pn
push
addr16
pop
xor
push
xlat
scas
dec
iret
push
test
out
iret
lds
rorl
push
xchg
mov
or
aad
and
int
mov
xchg
ja
frstor
out
in
int
je
and
cwtl
inc
add
in
cmp
xchg
dec
sbb
mov
pop
je
mov
repz
inc
add
pop
sub
xchg
aam
in
or
dec
mov
insb
push
adc
std
push
jmp
sub
js
pop
dec
xchg
mov
and
aad
jecxz
sbb
int3
or
shlb
jb
es
jns
mov
pop
je
int
enter
jle
cmp
sahf
inc
aad
mov
and
or
adc
test
jb
pop
mov
jo
dec
xor
add
sub
into
out
add
mov
imul
fcmove
inc
jge
xchg
push
mov
das
or
mov
loop
xchg
push
aas
hlt
inc
cmpsl
cmp
and
out
insb
or
and
ret
mov
enter
imul
jle
mov
xlat
rcl
daa
cs
shlb
adc
clc
outsl
push
pushf
cs
aas
dec
adc
push
aad
es
fisttpl
lahf
dec
imul
sbb
pop
pusha
addr16
sub
mov
ret
lea
mov
mov
loope
xlat
lock
dec
arpl
jl
mov
and
rclb
mov
scas
std
fsts
jbe
test
mov
aad
mov
rcll
push
paddusb
mov
enter
sbb
lds
pop
lods
lret
push
xchg
mov
into
shrl
xlat
jno
insb
ljmp
ja
in
out
dec
lret
mov
adc
or
lds
sbb
mov
mov
inc
ret
pusha
mov
sbb
fdivrl
push
nop
stos
sbb
cmp
insl
xchg
pushf
pop
mov
jle
fldt
jae
inc
jp
jo
out
push
pop
sbb
push
fmul
fdivl
or
and
std
icebp
pop
ret
sti
test
lods
std
push
cmp
clc
movl
and
insb
jecxz
loopne
push
pop
bound
insb
cmpsb
or
xchg
push
ss
ficompl
cmp
pop
cld
mov
or
dec
js
movsb
mov
mov
movsl
push
dec
out
mov
pop
addr16
gs
mov
push
or
pusha
inc
pop
pop
cli
fldcw
pop
mov
adc
jne
jae
rcr
bound
push
mov
in
addr16
sahf
push
movsl
sbb
push
add
rolb
and
jbe
das
fldcw
scas
push
jg
dec
cli
pop
bound
shl
push
mov
outsb
xor
fstps
inc
add
mov
xor
loop
push
outsb
push
js
inc
xor
mov
sbb
add
pop
test
mov
mov
std
lahf
jge
test
fmuls
jmp
bound
mov
and
ja
mov
test
sbb
mov
pop
mov
fimull
mov
push
inc
push
outsb
repnz
push
pop
into
push
xor
sbb
idivb
xor
outsb
xchg
sub
inc
testb
jbe
icebp
les
xchg
push
mov
jo
cltd
mov
mov
and
mov
movsb
dec
dec
lcall
cwtl
jnp
sbb
fsubrs
mov
and
in
xor
and
or
jmp
push
adc
int3
jae
jp
rclb
fistps
fisttps
aaa
stos
push
outsb
jge
pop
mov
fistpll
xchg
sti
ja
scas
out
aas
jg
xchg
adc
mov
push
dec
jl
mov
xchg
jle
adc
int
jp
lret
pop
and
lea
push
dec
and
or
push
out
sbb
and
jge
push
sbb
test
imul
mov
mov
int3
movsl
in
xor
sti
sub
sub
add
or
cwtl
push
jp
and
out
mov
dec
mov
adc
sbb
lret
inc
or
cmp
mov
sbb
stos
and
adc
and
ror
pop
inc
movsl
and
insb
xchg
addr16
in
insb
ret
fsub
lods
mov
xchg
fistps
js
sbb
or
loopne
icebp
iret
cmp
jmp
lahf
int3
dec
sbb
xor
push
mov
lgs
dec
xor
or
in
cmp
lds
jne
ja
aad
adc
dec
push
loope
fldln2
xchg
mov
cs
fstpl
rcrl
gs
add
jno
and
leave
in
sbb
mov
inc
imul
mov
and
outsl
lea
repz
sub
xor
lds
popa
xchg
insl
push
fstl
inc
mov
rol
std
pop
std
adc
out
rolb
pop
loop
cmp
cltd
or
fld1
loop
push
iret
push
mov
in
arpl
stos
or
out
and
pop
hlt
dec
sub
dec
and
ds
gs
lcall
enter
mov
push
rclb
xor
sbb
inc
add
inc
push
jnp
out
in
sub
jp
sbb
adc
or
dec
add
pop
push
popf
push
movsl
or
xchg
and
sbb
sbb
js
std
adc
fisubl
mov
xchg
cmc
push
push
xor
cmp
add
lock
adc
dec
dec
mov
ljmp
pop
orb
in
hlt
xchg
xlat
addl
cmp
adc
ret
cltd
fnstcw
ja
push
xor
mov
aad
call
sub
mov
test
adc
mov
adc
out
flds
fidivl
add
cmp
mov
push
aad
mov
xchg
xor
js
push
fisttpll
test
sub
es
scas
enter
stc
pop
pusha
fs
out
out
cmp
test
testl
ss
push
pop
in
ret
andps
out
jecxz
xchg
aas
clc
dec
dec
das
push
mov
shrl
inc
xchg
sbb
mov
cmc
loop
xchg
stc
repnz
mov
push
jno,pt
jnp
push
fldcw
aaa
jp
lcall
mov
orb
mov
scas
cmp
aam
cmpsl
daa
inc
jnp
mov
inc
sub
inc
pop
fmuls
dec
xchg
jge
outsb
lock
sti
dec
or
test
cmpsl
and
sbb
mov
push
jp
cwtl
es
jb
imul
cmp
leave
push
and
and
sbb
insb
pop
fsubrs
data16
outsb
aaa
cmpb
inc
flds
stos
jo
jne
adc
aam
jno
xchg
lock
add
fcompl
faddp
cmp
pop
aas
mov
test
jns
lods
and
ljmp
mov
rorb
aam
ror
imul
jbe
dec
insb
pop
leave
inc
jg
imul
push
aad
stos
xchg
xor
in
daa
xor
mov
mov
add
xor
arpl
test
mov
scas
jle
inc
loope
dec
out
js
and
fs
aas
stc
leave
movsl
or
in
das
add
fwait
mov
mull
sbb
mov
jg
mov
xlat
dec
mov
dec
js
adc
jp
xchg
add
push
xchg
stc
and
xchg
inc
add
xchg
xor
cmpsl
mov
int
and
jae
cmp
les
pushf
mov
jnp
pop
js
aam
out
or
jmp
outsb
aaa
add
js
bound
out
cli
mov
add
push
adc
popf
bound
xor
data16
repnz
sub
out
push
and
dec
cli
fimull
dec
push
test
mov
or
dec
and
push
adc
add
ficompl
std
les
subl
pushf
shrl
sub
daa
cltd
sarl
push
push
add
mov
pop
inc
ss
xlat
cmp
imul
pop
pop
js
cmp
lock
test
cmp
sub
fs
and
aas
int
and
add
mov
xor
subl
stos
xchg
mov
test
int3
add
sbb
sbb
cmp
pop
scas
hlt
mov
cmc
idivl
leave
cmpsb
ret
mov
adc
nopl
shl
inc
out
je
push
sub
cmp
mov
pop
xchg
xchg
fldl2e
and
adc
pop
in
adc
faddl
loope
repz
jecxz
or
ret
mov
insl
xchg
cmp
and
dec
sbb
iret
ja
or
insb
push
cmp
imul
inc
scas
xchg
cmp
inc
pop
dec
loope
and
pushf
sbb
std
loopne
les
pop
fwait
or
loope
inc
sbb
pop
ret
xor
arpl
and
orb
or
jmp
mov
scas
pop
or
or
xor
jg
pop
inc
xor
out
inc
xchg
outsl
push
repz
cmp
aas
test
jl
xor
mov
jno
cmc
scas
ret
loop
xchg
sbb
rorb
mov
mov
xor
ret
sbb
xlat
push
nop
cltd
inc
cld
mov
push
pop
movsb
rcrl
and
xlat
cmp
add
mov
jbe
xchg
sti
jne
or
xor
cmpsl
das
push
icebp
lret
mov
loopew
inc
ret
and
cmp
or
xlat
in
or
out
ret
mov
xor
mov
shrb
and
mov
jo
shrb
or
add
movsl
push
xor
loopne
add
fldl
add
pop
sbb
dec
test
imul
mov
jno
aad
push
aaa
fdivrp
inc
repnz
sub
pop
popa
mov
hlt
mov
dec
pusha
out
lods
dec
out
adc
daa
adc
pop
mov
outsb
cmp
in
adc
cmp
jbe
lcall
xlat
mov
push
mov
or
stc
pusha
fldl
test
mov
pop
jmp
fidivs
scas
jne
sbb
push
pop
xor
sbbb
pop
popa
iret
cmp
inc
ljmp
outsl
mov
mov
orl
jnp
daa
je
rcll
int
jno
iret
mov
rcll
pop
sbb
sti
sbb
adcl
mov
mov
jo
mov
iret
lcall
xlat
or
cmp
je
jae
mull
mov
ret
fcmovbe
int
and
adc
mov
in
sub
inc
std
dec
ljmp
dec
add
jp
inc
push
cs
and
cmp
sahf
mov
mov
sub
imul
jge
jge
or
cmp
sti
inc
out
pop
aas
movl
fnstenv
iret
jns
repnz
insl
sub
fnsave
sbb
leave
pop
adc
jbe
jp
xchg
test
and
mov
dec
outsl
leave
xlat
xchg
and
sbb
push
in
pop
inc
mov
pop
out
sbb
adc
aad
add
add
lcall
mov
push
or
pop
mov
dec
dec
shr
stos
cmp
add
inc
out
jecxz
cmpsb
pop
cwtl
mov
xor
dec
scas
pusha
nop
pop
xor
mov
ljmp
jae
xor
iret
mov
pop
jmp
nop
and
xor
jecxz
fwait
pop
add
roll
cmp
js
sub
arpl
or
ja
inc
sub
xchg
jmp
inc
jl
daa
mulb
cmpsl
xchg
out
cli
into
ljmp
test
push
mov
adc
test
pop
stc
ds
daa
xchg
imul
outsl
jae
adc
jno
aas
cmp
int
das
inc
pushl
jnp
movsl
or
mov
inc
imul
fwait
ds
mov
out
stos
mov
ror
xor
fcompl
adc
adc
aaa
out
mov
or
xorb
xchg
or
push
inc
xor
dec
xor
dec
ret
push
adc
xor
cli
rorb
testb
movsl
and
pop
shl
lcall
mov
ret
mov
or
rorb
pop
add
sets
ss
fxch
insl
cli
in
cmp
mov
dec
fwait
cmpsb
and
push
xchg
push
pop
shrb
mov
mov
push
and
cmpsl
xchg
ret
fcompl
insl
out
fucomi
and
leave
fdecstp
push
or
or
daa
ljmp
divl
xlat
loop
leave
testb
es
mov
jo
nop
mov
in
test
test
mov
addr16
ljmp
out
icebp
sbb
adc
jne
xchg
sub
inc
pop
mov
lcall
sahf
or
loopne
in
cmc
stos
push
add
dec
aaa
xchg
leave
push
mov
cli
lea
and
xchg
xor
cmp
out
xor
jno
or
dec
xlat
int
push
stc
ret
scas
nop
sub
ret
push
in
mov
and
sub
mov
cmp
sbb
sub
xchg
aas
xchg
sub
xchg
movsl
ljmp
sbb
dec
mov
mov
xlat
or
inc
andl
jge
aad
dec
aam
fmull
aam
test
and
outsl
ja
xlat
jno
into
jge
test
jo
push
out
mov
rclb
rcrl
or
push
scas
xchg
ds
push
xchg
adc
or
xor
or
hlt
test
adc
mov
and
add
add
stc
subl
jp
sub
cld
add
icebp
in
lock
pop
jb
or
inc
or
fucom
pop
push
ret
mov
inc
popf
lcall
xchg
sti
not
loopne
cli
sub
cs
in
jo
cwtl
ret
or
mov
push
add
dec
xor
push
dec
cs
push
lea
fistpl
out
shrl
loope
aam
popa
pop
or
xor
push
pop
jge
xchg
loopne
fnstsw
pop
sub
je
jp
cmpsl
int3
xchg
sti
sahf
roll
insl
mov
jo
sahf
cwtl
adc
test
cmp
fwait
iret
mov
mov
cmp
outsl
stc
or
or
js
xor
std
stos
mov
out
cmp
pop
and
inc
and
add
mov
sub
dec
mov
xor
aad
mov
inc
jmp
xor
jns
push
lcall
popf
xor
mov
sub
inc
jp
stos
inc
loope
arpl
mov
das
inc
add
arpl
pop
sub
js
pop
cmp
iret
jo
or
leave
enter
sbb
fisttpl
sub
adc
loope
in
xchg
sbb
ret
loope
hlt
and
scas
repnz
sub
in
mov
icebp
dec
repnz
adc
repz
jns
pop
jl
rorl
cs
sbb
ret
or
cwtl
div
jbe
and
sub
shlb
stos
push
inc
xlat
ss
push
mov
jmp
mov
es
rcl
or
das
xchg
and
cmpsb
push
pushf
in
ret
lds
mov
xchg
fsubs
xchg
mov
xorl
sti
outsl
insl
rcrb
shll
mov
dec
mov
and
dec
pop
cmpsb
mov
push
sbb
xchg
scas
jp
out
cmp
dec
lret
popf
imul
xchg
push
or
sbb
cmc
js
dec
dec
out
pop
out
jns
push
adc
hlt
aam
in
test
jb
repz
jle
cltd
imul
jbe
cmp
or
push
daa
int
insl
ljmp
dec
inc
xor
mov
adc
pop
test
jno
adc
mov
mov
int
imul
fisttps
and
jge
js
mov
xchg
aad
push
scas
out
les
adcl
and
movsb
push
mov
jbe
dec
cmpsl
je
mov
insl
cltd
inc
invd
adc
cwtl
push
adc
adc
pop
das
loope
jge
loop
icebp
xor
daa
in
subb
xchg
das
je
xchg
jl
mov
cmp
mov
iret
mov
mov
mov
arpl
scas
hlt
les
adc
imul
mov
inc
lahf
pushf
jmp
fistps
loope
cmpsl
mov
in
cmp
int3
mov
xchg
jne
add
ds
call
test
lret
mov
and
outsl
mov
sub
cltd
add
sbb
and
adc
scas
je
sbb
jmp
or
cltd
outsl
xlat
push
cmp
stos
in
rorb
mov
inc
fsubr
sub
adcb
mov
pop
add
inc
int
jmp
pop
mov
mov
ss
mov
es
push
mov
pop
mov
jle
lock
push
sti
mov
jp
loop
fnsave
pop
xor
push
in
cld
shl
cmp
imul
jbe
mov
mov
and
xor
cld
les
or
adc
rcrl
sub
push
fimull
dec
sahf
dec
mov
decl
inc
add
dec
insb
fs
push
fisubl
pusha
mull
mov
add
aad
pmaddwd
jns
push
mov
add
rclb
mov
push
mov
movsl
sub
sbb
in
pushf
test
leave
rorl
adc
sbb
push
xor
pop
pushf
jge
add
or
lret
or
inc
sub
cmpl
lcall
mov
xchg
mov
cmp
sub
mov
pop
push
fcoml
jle
in
test
jge
add
stos
repnz
mov
cmpsl
call
lea
inc
call
cmpl
jmp
aad
clc
push
inc
hlt
test
jnp
jle
jle
jge
jnp
ret
int
pushw
mov
pop
fwait
repz
loop
inc
xor
add
adc
hlt
mov
inc
mov
fcompl
outsl
movsl
or
cmp
or
xor
cwtl
or
push
rcr
gs
cld
jle
out
mov
inc
adc
sub
inc
mov
sbb
mov
aaa
in
lret
and
mul
inc
push
cmp
fldcw
pop
push
enter
iret
add
icebp
notl
ja
mov
lods
dec
inc
xchg
and
cmpsl
ret
push
lret
pop
push
dec
cs
xchg
and
loope
jne
push
hlt
ja
inc
repnz
jo
jge
imul
mov
test
cwtl
cli
xor
scas
leave
icebp
and
iret
cld
add
jo
lock
and
lods
adc
cmpsl
mov
dec
daa
outsl
pop
lea
call
xchg
pop
mov
fidivl
mov
jne
test
lea
out
mov
test
outsb
in
mov
ljmp
push
loop
inc
xor
inc
ja
jecxz
ja
mov
ljmp
xor
imul
sub
push
mov
mov
xchg
and
cmpsb
loope
pop
in
jg
and
pop
add
xchg
out
jbe
push
and
inc
push
fiaddl
repnz
and
bound
out
add
rcrb
or
cmpsl
mov
pushf
movsl
inc
scas
cmp
dec
negl
fcoml
mov
test
lock
add
and
dec
push
lret
adc
sub
jp
mov
pop
push
sub
fld
dec
jmp
push
cmp
mov
sbb
iret
dec
adc
mov
sti
ja
inc
push
jl
call
push
mov
xor
pop
adc
fdiv
loop
imul
lret
add
fbstp
mov
xor
push
pop
mov
shrl
fmull
and
push
push
inc
into
adc
fucomp
hlt
lret
aad
hlt
std
xchg
jnp
adc
mov
sub
add
add
add
aaa
and
sbb
xchg
adc
pop
inc
jl
xchg
popa
or
aam
add
ljmp
icebp
push
lock
iret
sbb
sbb
repnz
cmpsl
pop
xchg
ror
dec
sbb
testb
stos
out
lods
add
rcrl
daa
lret
pop
movsl
jl
push
cmp
push
sbb
stos
sbb
xchg
jg
sub
push
call
pop
andl
les
lcall
aam
mov
loopne
adc
stos
stc
lods
lea
push
pop
data16
xor
imull
out
and
test
push
dec
xchg
push
push
mov
test
inc
aad
xchg
test
add
cs
cmpsl
inc
jbe
aad
mov
or
stc
mov
loop
fildll
push
mov
lret
pop
shrl
cli
outsb
jge
sar
pop
dec
testl
mov
mov
xor
int
jp
or
fwait
lds
subl
std
rcll
jno
mov
and
test
insl
sbb
inc
mov
sarb
xchg
adc
imul
jp
std
popf
sar
je
loope
rorb
insb
lahf
cmp
xchg
into
jg
mov
push
bound
sbb
and
sub
ret
mov
mov
ljmp
fucom
dec
cmpsb
fsubs
scas
je
sub
xor
sub
lcall
cmp
les
out
sbb
pop
fcmove
add
in
scas
inc
sbb
idivb
pop
cmpsl
mov
pop
sub
iret
dec
add
stos
lcall
enter
and
test
out
xlat
rcrl
aaa
mov
mov
stos
fwait
dec
mov
push
jb
pushf
lea
outsl
sti
mov
sub
push
inc
lock
scas
mov
mov
or
lods
push
scas
arpl
push
cwtl
xchg
imul
jmp
push
lret
ds
imul
cmpxchg
mov
daa
andb
pop
scas
add
and
popa
jge
call
dec
dec
daa
test
fnsave
aaa
mov
push
int3
orb
stos
in
mov
push
out
in
dec
jo
sub
shlb
adc
jmp
dec
rorb
ror
in
adc
dec
inc
aad
int3
jae
adc
adc
in
ljmp
add
inc
aad
in
js
push
div
push
sbb
mov
jbe
pop
sbbb
inc
add
jmp
dec
int
inc
pop
test
jne
aaa
rcrb
les
insl
mov
cs
f2xm1
xchg
or
in
fs
in
in
int
xchg
cwtl
fsts
je
aaa
gs
fisubrs
mov
mov
jae
clc
insb
or
push
movsb
js
stos
dec
shlb
and
inc
fwait
sarb
lcall
addb
jmp
adc
mov
out
cs
xor
cwtl
into
push
adc
pop
stos
and
sbb
nop
in
dec
icebp
cmp
shrl
dec
in
jns
int
pop
or
push
aad
clc
push
push
mov
cmp
stc
cs
iret
imulb
faddl
std
aad
stos
shrb
jp
idivb
cltd
xchg
dec
add
lea
ss
mov
xor
aam
jg
ror
add
imul
rcl
or
fcoml
cli
das
inc
mov
loopne
sbb
call
xlat
sbb
outsl
pop
lock
insl
cmp
pop
daa
stos
or
and
or
sub
xchg
push
mov
cs
pop
icebp
push
repz
movsl
xchg
movsb
cmp
fnstcw
aam
hlt
mov
mov
xor
ss
adc
mov
mov
aam
enter
jb
nop
mov
or
dec
lock
sbb
xchg
xchg
call
pop
imul
scas
pop
mov
ss
jg
jnp
or
and
mov
loop
icebp
cltd
ret
leave
inc
jmp
xchg
mov
stos
es
shll
fdivl
sysexit
sti
pop
push
popa
add
bound
outsb
ds
call
add
xchg
outsb
push
adc
hlt
sbb
in
arpl
fadds
mov
ret
arpl
mov
add
jae
subl
and
cli
push
cmp
pushf
scas
cmp
rorb
push
into
add
xor
adc
ja
adc
push
outsb
out
cli
icebp
inc
cmp
xor
imul
cs
leave
out
js
dec
sub
sub
lods
push
ja
dec
nop
xor
mov
sub
xorl
insl
push
fsubr
xchg
call
cmpsl
or
mov
int
ret
mov
bound
xchg
flds
in
test
add
push
aas
mov
insb
sbb
xor
lret
out
call
pop
adc
mov
scas
jle
sbb
xor
pop
fistps
push
or
shrl
cs
mulw
push
xchg
lods
in
into
pusha
pop
lea
insb
lahf
inc
xchg
movsl
mov
push
mov
aaa
or
dec
xchg
fildl
test
gs
adc
aas
adc
sarb
lcall
test
sub
fiadds
mov
add
les
loopne
pop
repnz
sbb
cwtl
loope
movb
jecxz
xchg
scas
add
cld
rorb
push
jne
cwtl
ss
sub
xchg
cmp
add
imul
test
jp
sbb
push
fnstsw
call
or
into
ja
inc
jne
push
lods
mov
int
sti
rorl
dec
cmp
sub
adcb
enter
push
mov
jno
je
push
pop
jbe
sub
cmc
jecxz
jb
dec
inc
sub
jne
shl
imul
sbb
pop
repz
sbb
imul
ret
shll
push
and
inc
mov
sbb
push
data16
and
fcmovne
into
cmpsl
loopne
std
pushf
or
loop
cmc
inc
xor
xchg
xor
outsb
dec
mov
scas
mov
in
xor
test
outsl
cmp
fsubl
ss
pop
sbb
jns
lcall
rclb
inc
mov
mov
xchg
cli
mov
jp
sbb
in
add
mov
aad
xor
dec
mov
rorb
ret
and
xchg
jnp
scas
xchg
ret
adc
shl
push
dec
jmp
idivl
cmc
rorl
pop
xor
inc
leave
and
and
sbb
js
outsl
sub
xchg
jge
or
repz
out
xchg
std
sti
jnp
aas
adc
sbb
test
push
mov
sub
outsl
dec
out
inc
es
or
xchg
inc
mov
sbb
lahf
shr
inc
push
imul
mov
xchg
ret
xchg
inc
testl
sub
sbb
lods
inc
xor
adc
pop
adc
cmp
cltd
and
gs
lret
dec
test
mov
dec
adc
incb
int
in
and
cmp
mov
rcrl
fidivrl
outsb
or
lods
push
test
add
pusha
sub
pop
nop
jne
out
lret
xorl
ljmp
add
data16
inc
mov
outsl
cmp
add
je
xchg
jae
rolb
xchg
mov
outsb
jno
cmp
or
stos
sub
push
sbb
and
repz
aas
and
ss
and
inc
mov
call
xchg
lahf
sub
icebp
shr
popw
add
adc
ret
mov
gs
aad
xchg
push
xor
outsl
loop
aaa
loop
inc
shll
in
adc
xchg
fmulp
dec
mov
addr16
push
test
cmp
shrl
inc
ss
lods
push
loopne
rorl
xchg
jo
pushf
addl
pop
mov
data16
sub
xchg
add
into
xlat
mov
pop
decb
sub
mov
insb
add
and
out
ss
xchg
stc
push
divl
mov
test
testb
out
test
sbb
jns
jb
dec
push
xchg
mov
cld
xor
pop
lods
sbb
xchg
and
mov
in
mov
popf
sub
cmp
push
ret
pop
lock
inc
xchg
js
in
ljmp
add
mov
pop
mov
adc
mov
imul
pop
scas
and
inc
sub
sbb
std
iret
inc
aam
icebp
dec
xor
jle
movsb
fstpl
and
ss
and
mov
lods
mov
or
xchg
sahf
jmp
cmc
inc
insl
mov
sub
fs
and
xor
cmp
mov
pop
sti
mov
fldt
sub
testb
lods
push
push
xchg
insb
sbb
jae
pop
sbbl
inc
popf
lret
insb
lds
xorb
adc
repz
lea
mov
lret
adc
mov
xor
add
dec
jb
add
inc
jne
lret
mov
scas
rcrb
dec
sti
scas
sbb
xor
sbbb
lret
idivb
cmp
push
pop
shll
arpl
inc
gs
and
xor
jo
inc
aad
and
and
dec
pop
stc
xchg
inc
xor
jno
cmp
pop
aam
and
loop
pop
jbe
jnp
loope,pn
push
cmp
call
in
inc
jns
sbb
cmpsl
jmp
dec
ja
mov
test
in
outsb
inc
push
mov
enter
or
fs
call
shrb
lcall
arpl
ss
xchg
inc
lock
push
xor
cmp
bound
in
loopne
adc
adc
es
fidivrs
adc
loopnew
sbb
jae
jmp
pop
push
add
insb
mov
jge
rorb
adc
lds
imul
popl
push
repz
pop
jmp
imul
push
enter
out
cmp
add
arpl
lods
add
add
pop
inc
sbb
xchg
push
pop
fdivs
mov
outsb
hlt
push
mov
adc
insl
arpl
push
mov
out
lcall
xchg
inc
mov
mov
push
lcall
cmpsl
bound
mov
cwtl
pusha
out
xor
aaa
sub
negb
cmp
dec
cmp
repnz
jl
sub
adc
sarb
call
repnz
leave
test
add
jns
lds
dec
cmp
xchg
jmp
mov
xchg
popa
ja
pushl
push
arpl
adc
repz
dec
xor
out
jp
and
jp
cld
cmp
push
fnstsw
fsubr
fisttps
xor
sub
sahf
jns
mov
jge
pop
lds
ja
scas
mov
inc
std
pop
out
push
cmpsb
jecxz
cltd
mov
mov
ljmp
ror
jae
pop
mov
and
push
sub
stc
mov
aam
or
and
ret
dec
lea
out
dec
repnz
in
int3
ret
stos
and
pop
add
xchg
je
ret
push
push
dec
mov
jns
jge
gs
mov
and
hlt
cmp
test
shlb
iret
sub
lds
xor
xchg
ljmp
and
jae
arpl
inc
jns
in
outsb
lods
outsb
out
pop
loop
xor
adc
leave
lods
xorl
fisubs
inc
call
lret
jns
push
ds
ja
popf
add
cwtl
add
or
xchg
ds
out
sti
cs
mov
mov
loope
cmp
mov
mov
fsubrs
stc
adc
insl
push
addr16
cmp
sub
test
adc
pop
repnz
cmpsb
push
sahf
xor
sub
inc
mov
inc
into
pop
sub
jmp
inc
xor
mov
sub
dec
loopne
leave
adc
jbe
call
mov
aas
mov
aad
jmp
hlt
pop
fcoms
clc
aas
and
fimuls
pop
orb
repnz
test
imul
add
jns
sbb
push
and
and
orb
add
scas
incb
sbb
adc
outsb
or
notb
decl
imull
cmp
jne
mov
xchg
incl
inc
into
pop
pop
xchg
mov
dec
fidivl
mov
fcmovnbe
dec
gs
testl
push
sbb
scas
cmpsl
cmc
push
mov
test
ret
lret
fdivrs
inc
in
sarb
ret
mov
adc
dec
lods
sahf
mov
push
xchg
pop
out
jnp
dec
mov
mov
mov
sahf
and
mov
cmp
fsubp
imul
jge
add
subl
das
stos
fistl
mov
lods
sub
mov
cmp
outsl
or
dec
loopne
andl
repnz
sahf
mov
sbb
inc
fisttpl
sti
out
lods
sub
mov
or
fcompl
out
dec
sbb
sub
and
cmp
addr16
mov
lds
in
nop
scas
or
cmp
add
in
test
cmp
jmp
sbb
push
cmp
or
sub
loope
mov
push
repnz
push
ds
add
sbb
int3
lock
mov
add
addr16
nop
pop
mov
dec
popf
aas
xchg
xor
xchg
xor
xor
and
ds
cltd
and
dec
andl
sbb
dec
add
and
mov
bound
inc
sub
shlb
in
cmp
mov
addr16
das
in
enter
js
in
subl
out
mov
and
push
shl
arpl
shll
mov
xlat
mov
arpl
out
js
mov
push
add
push
cwtl
mov
inc
xor
mov
mov
xor
idivl
or
mov
xorb
push
addr16
data16
cmp
in
mov
cmp
add
daa
loop
sbb
pop
cli
in
jmp
stos
fnstsw
cs
out
repnz
out
inc
xchg
xor
dec
xor
jne
jns
dec
dec
mov
dec
mov
je
dec
push
pop
js
jbe
fistl
xlat
inc
add
cmp
cmpsl
adc
mov
mov
mov
daa
and
sarb
loop
adc
pmaddwd
out
jno
inc
and
mov
and
add
andb
and
cmp
sbb
adc
cmp
fiaddl
add
mov
and
dec
cltd
pop
add
jno
or
jp
ss
pop
lahf
jg
and
sbb
aad
aas
stos
and
shl
fs
push
push
dec
loop
fisubs
jecxz
shlb
mov
sarb
test
mov
mov
or
sbb
mov
push
cmc
or
dec
popa
cmpsb
cmp
or
hlt
xor
sbb
rcrb
loopne
int
clc
adc
push
cmp
jmp
nopl
popf
cltd
addl
add
in
mov
add
nop
js
mov
leave
xor
ret
inc
sarl
and
mov
int
cmc
gs
sub
or
cltd
pushf
pop
sub
jne
lret
fnsave
add
jl
add
imul
push
xchg
xchg
push
neg
in
scas
push
jg
out
or
jle
or
insb
push
cmp
xor
xorb
xchg
movsl
fwait
mov
cmp
mov
inc
bnd
int
outsl
sbb
jno
adc
inc
push
outsl
aas
add
sbb
ss
push
add
fildl
stos
mov
jl
cmpsb
inc
push
ljmp
fnstsw
cmpsb
sub
clc
testb
sti
mov
sti
fimull
cs
out
out
xor
outsb
jno
mov
push
dec
test
iret
aaa
cmp
lahf
or
bound
les
pop
mov
cs
add
jmp
adc
pop
inc
jne
adc
ja
mov
daa
and
ficomps
xorb
mov
xorps
jo
test
adc
add
lods
jge
fwait
push
lods
ret
fwait
into
cwtl
xorl
in
sbbl
xchg
sbb
xor
sbb
mov
fbld
mov
mov
mov
cli
shr
rol
mov
out
or
lds
fmull
dec
mov
mov
or
insb
repnz
test
jo
call
fadds
out
ret
pushf
jno
test
arpl
imulb
in
pop
cmp
cmovb
add
dec
data16
inc
pop
arpl
mov
adc
add
sbb
rcr
xchg
inc
daa
push
xchg
sbb
sbb
inc
sar
sub
cmp
xlat
cmpsl
aaa
mov
arpl
ds
flds
fwait
rolb
test
imul
mov
push
jmp
fsubp
sarb
xor
lods
xlat
test
mov
fsubrl
mov
pop
.byte
