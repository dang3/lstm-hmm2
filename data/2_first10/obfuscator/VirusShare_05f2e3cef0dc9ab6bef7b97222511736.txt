idiv
push
mov
sub
push
call
in
ret
adc
fsubs
leave
or
sbb
testl
inc
inc
and
inc
in
das
pop
cmp
jne
push
push
sub
stos
mov
ffree
add
dec
adc
inc
lea
push
push
add
push
out
mov
jbe
sbb
sbb
fs
fldl
push
cmp
imul
mov
and
lret
add
add
sbb
insl
push
imul
xchg
hlt
push
push
jae
in
out
push
adc
leave
subl
dec
clc
push
add
adc
shrb
pop
add
fnstenv
and
dec
push
clc
push
push
adc
xchg
or
push
sbb
push
cs
cmp
and
or
xor
jne
cs
fucom
and
jmp
rclb
push
sbb
xchg
in
push
xor
jae
xchg
or
xchg
adc
xchg
dec
or
or
aad
pop
in
push
mov
loopne
push
add
push
cmpsl
sbb
or
jnp
lret
and
dec
or
push
add
in
mov
in
pop
cwtl
xchg
add
xlat
fidivrs
daa
adc
subl
shlb
ret
leave
add
imul
outsb
adcb
lea
in
jb
insb
test
push
jle
push
xchg
or
clc
test
clc
lahf
pop
sbb
mov
add
in
js
jb
daa
add
mov
inc
or
or
jno
sub
jae
add
sub
outsb
in
fs
push
mov
inc
call
push
add
adc
add
adc
sbb
pop
sbb
sbb
or
nop
fisttpll
dec
jle
nop
out
sti
sub
push
push
popa
in
cmp
in
sti
pop
notb
push
push
push
idiv
sbb
jno
inc
aam
xchg
xor
push
out
or
pop
btc
mov
nop
or
push
lcall
and
and
add
adcl
lock
hlt
push
sbb
ja
inc
pop
out
lret
clc
xchg
xchg
aaa
mov
adc
cmp
mov
lret
mov
pop
mov
clc
pop
test
push
das
jmp
jne
add
xadd
inc
mov
push
pop
push
cmp
and
aam
add
push
pop
or
loope
xchg
inc
jns
sti
in
neg
outsl
scas
cld
add
push
pusha
pop
gs
xchg
cmp
or
push
mov
in
mov
aaa
xchg
es
das
insb
and
sbb
call
fwait
dec
and
jbe
add
inc
adc
shl
rclb
lds
dec
aas
push
cmc
adc
mov
aaa
inc
add
xor
add
push
and
adc
ds
xchg
cld
or
xchg
dec
mov
inc
jmp
add
loope
xor
fs
arpl
jnp
xor
mov
push
add
mov
dec
outsl
push
add
cmp
push
push
fsubl
fld
and
repz
lock
outsl
outsl
push
pop
xchg
or
xor
jns
adc
and
inc
bound
cs
dec
scas
jno
add
push
ja
xchg
fcomps
adc
or
fs
jo
cwtl
sub
ret
push
ja
pop
push
xchg
addr16
cmp
add
andl
pop
clc
jle
movsb
or
imul
inc
mov
xor
dec
inc
and
test
cmp
inc
andl
ss
inc
outsl
xor
fiadds
mov
adc
out
or
lods
add
jecxz
and
sbb
call
mov
jae
mov
push
in
sbb
cmp
adc
sbb
pop
aaa
pop
xchg
insb
mov
push
pushf
inc
jp
subl
fstl
roll
cmp
or
mov
jae
mov
out
adc
fs
outsl
xchg
in
bound
jae
or
and
jns
ds
scas
daa
jns
dec
jns
inc
or
fxch
mov
dec
mov
enter
sbb
lea
jle
and
add
mov
and
mov
inc
mov
insb
push
shlb
adc
ss
les
or
push
inc
add
or
mov
setb
mov
or
out
push
xor
int3
cmpsb
fs
jle
add
lock
cli
movb
arpl
ljmp
xor
rcrl
push
jl
test
shrl
push
fwait
cmp
out
add
testl
les
pop
lods
xor
les
push
clc
push
fdivl
imul
push
lock
test
sbbb
aas
push
inc
xor
dec
jl
enter
pop
das
and
and
shrl
sti
fcmovb
and
or
jmp
pop
dec
push
and
addr16
jecxz
inc
mov
je
xor
push
pop
push
fbld
fnop
sbb
sbb
lods
jle
jns
iret
add
lahf
or
add
cmp
add
and
adc
inc
imul
sbb
icebp
arpl
sub
push
leave
push
add
inc
out
bound
sub
lods
sbb
hlt
test
pop
push
data16
sbb
popa
sbb
rorl
testl
fimull
push
add
or
retw
ret
cmp
dec
xchg
pop
adc
add
je
cs
ret
inc
jne
jb
push
imul
mov
sbbl
and
aam
in
adc
ss
sbb
lock
push
xlat
push
inc
sbb
cmp
test
in
adc
sub
or
pop
inc
adc
xchg
nop
lds
mov
sbb
or
xchg
les
and
dec
add
imul
jns
mov
lock
lret
push
push
inc
popa
inc
lret
inc
cmp
mov
xchg
std
in
das
adc
or
mov
add
xor
add
sbb
push
sbb
loope
inc
insl
pop
mov
pop
xor
shlb
xor
addl
idivl
out
testl
push
stc
sub
xor
mov
dec
push
dec
add
mov
imul
outsl
and
hlt
inc
sbb
ja
movsl
clts
mov
inc
loop
sbb
cmp
insb
test
loop
test
or
addl
pop
xor
fs
or
in
ljmp
add
sbb
pop
sub
push
pop
leave
push
das
fwait
jb
dec
jl
inc
add
xor
cmp
mov
or
push
inc
ja
sarb
mov
cmpsl
push
fsubrs
js
bound
cli
push
jbe
add
cld
cwtl
dec
add
fildll
pop
fbstp
add
or
test
pop
hlt
in
or
push
notb
push
dec
pop
sti
ret
mov
mov
cmp
mov
inc
push
sub
mov
lock
data16
jmp
shrl
adc
and
not
or
inc
mov
fldl
repz
shll
out
cld
push
stc
adc
testl
cmpsl
icebp
inc
push
je
pop
cmpsb
jg
xchg
push
mov
jae
adc
jle
sbb
xchg
clc
lds
mov
push
in
js
xlat
test
aaa
ret
jecxz
inc
lcall
sti
adc
filds
sbb
push
aaa
or
add
push
js
nop
sbb
xor
test
das
xor
imul
popa
ret
inc
jbe
xchg
cltd
or
xchg
xor
loopne
fwait
inc
stc
sahf
and
pop
scas
or
leave
scas
inc
and
shll
cmp
or
icebp
scas
push
clc
pusha
jnp
dec
xchg
cmp
cmpsl
push
jg
popa
shll
jge
mov
and
repz
inc
push
push
ffreep
lock
into
sub
loope
dec
push
mov
rclb
mov
mov
fnop
xchg
rorb
movsb
addl
add
dec
sub
imul
test
icebp
rol
test
in
jo
mov
dec
je
xor
imul
mov
mov
addl
jns
jg
shll
imul
pop
je
push
cmp
xchg
hlt
popf
nop
outsl
sbb
insl
sbb
cs
adc
add
out
dec
addb
cmc
adc
xchg
test
incl
mov
nop
loop
sbb
sbb
dec
lock
inc
rorb
add
pop
jb
clc
jne
add
push
adc
add
fildl
pushf
dec
cs
pop
cmpsl
pop
inc
mov
fildll
fisubrs
add
repnz
mov
mov
inc
adc
jecxz
pop
clc
cmpsl
push
sbb
pop
ficompl
jae
xchg
push
psllw
inc
add
aas
sahf
int
or
sub
sbb
xchg
mov
push
repnz
and
sub
push
xor
hlt
inc
ljmp
int3
adc
loopne
outsb
dec
dec
das
or
fs
mov
outsb
dec
leave
mov
push
and
sbb
leave
adc
hlt
adc
punpckhbw
and
dec
push
dec
dec
jbe
je
fldenv
sbb
nop
push
outsb
push
inc
sub
inc
inc
xchg
inc
adc
sahf
das
cmp
jnp
sarb
push
pop
call
mov
int
sub
jp
inc
add
xor
pop
push
dec
outsl
pop
orb
jmp
cmp
xor
enter
test
in
fs
mov
mov
pop
cld
out
iret
mov
cmp
je
ret
jmp
fdivl
enter
mov
push
push
fs
inc
dec
loop
arpl
jmp
mov
lock
clc
add
xor
push
mov
movl
es
inc
aaa
xor
sbb
pop
adc
push
pop
push
push
pcmpeqd
dec
inc
dec
push
dec
or
pop
cmp
lock
jmp
in
ret
and
or
sub
jo
mov
jge
mov
xchg
into
xorb
aam
and
sbb
sbb
es
mov
pop
cmpsb
in
nop
push
iret
repz
imul
push
mov
call
add
add
sti
aas
and
xchg
fs
push
fnop
inc
dec
enter
movb
loop
push
mov
xor
pop
pusha
push
repz
push
jmp
hlt
lahf
xor
filds
or
and
in
inc
popf
and
call
mov
loopne
sbb
mov
cld
add
leave
mov
std
add
mov
add
stos
push
shlb
sub
fneni(8087
test
shll
fists
das
push
xlat
add
pusha
mov
mov
mov
jp
adc
adc
xchg
dec
std
push
sbb
cli
dec
push
jo
push
jl
xchg
xor
xbegin
dec
push
jle
push
mov
hlt
and
pop
sub
push
add
in
and
in
xorl
pop
popf
adc
adc
cmp
addb
mov
loopne
testb
add
jge
gs
std
dec
adc
stos
sbb
jle
roll
xor
clc
jp
fistl
mov
dec
dec
ss
jp
imul
mov
and
loopne
fs
mov
or
arpl
push
inc
jno
in
mov
mov
cmpsb
jne
pop
push
inc
cmp
gs
sbb
ljmp
mov
ds
sub
enter
cld
adc
stc
icebp
pop
imul
shl
clc
push
mov
or
and
arpl
dec
repz
sbb
in
inc
xor
test
or
and
adc
add
mov
adc
jp
lahf
shll
bound
xor
or
cmp
jo
or
mov
sbb
push
dec
decw
adc
loope
jl
push
and
dec
sbb
add
lds
push
xor
loop
mov
cmp
xor
jmp
mov
jno
sbb
les
notl
adc
jne
push
shlb
in
or
xchg
hlt
clc
gs
mov
ss
push
sbb
out
pushf
dec
xor
pusha
and
div
imul
hlt
pop
mov
adcb
pop
popa
test
mov
loope
pop
out
aaa
add
sbb
lods
dec
or
in
jae
sub
push
push
mov
out
aaa
pop
xlat
arpl
js
xor
and
lret
xor
and
add
sbb
bound
cmpsb
inc
push
wbinvd
das
and
xlat
pop
inc
jo
test
test
dec
sub
unpckhps
pushf
cmp
adc
xor
roll
jbe
inc
ss
push
sbb
pusha
ror
push
add
push
push
in
mov
push
fwait
inc
mov
sbb
and
sbb
inc
inc
inc
inc
adc
sub
sub
push
data16
mov
jbe
inc
push
add
jns
jns
js
dec
insl
add
jbe
push
inc
inc
inc
dec
inc
inc
pop
gs
jo
inc
jo
jbe
fs
jmp
push
dec
bound
jns
push
data16
push
jno
jae
dec
dec
add
inc
dec
dec
inc
insb
push
add
jg
push
push
dec
pop
push
js
fs
dec
dec
dec
ja
push
imul
mov
pop
inc
sub
imul
fs
fs
jbe
dec
dec
arpl
pushl
dec
inc
dec
inc
dec
push
dec
push
push
push
push
add
inc
jne
dec
push
push
dec
add
arpl
add
mov
jge
xor
xor
xor
xor
push
outsl
jg
incl
inc
pop
pop
inc
inc
inc
add
imul
jb
jns
outsl
mov
gs
add
aaa
xor
pushl
xor
xor
push
dec
inc
push
dec
pop
push
inc
push
push
add
inc
inc
dec
dec
add
outsl
in
bound
popa
ja
add
jno
fisubl
jns
add
dec
push
pop
pop
mov
dec
sub
aaa
xor
cmp
jae
jb
jae
push
push
dec
bound
jne
mov
jb
jno
jbe
jle
inc
addr16
js
pop
movsl
xor
test
mov
sti
inc
push
dec
dec
dec
int
sub
je
imul
xchg
mov
push
dec
adcl
in
ret
xor
aaa
inc
push
dec
dec
pop
inc
imul
outsl
mov
insl
xor
jae
inc
inc
jns
cmp
outsl
xor
inc
insb
fistpll
inc
outsl
pop
jno
push
scas
jns
jb
dec
add
jns
jne
fisttpll
pushl
arpl
bound
sbb
jo
cmp
je
jae
mov
imulb
outsb
pop
js
je
jae
insl
arpl
mov
jno
outsl
bound
jo
jo
xor
mov
sti
test
dec
jne
sub
xor
push
push
jo
outsb
ljmp
add
sbb
popa
aaa
jns
popa
jb
jg
add
pushl
je
gs
outsl
gs
add
push
popa
outsb
js
imul
xor
xor
data16
imul
insb
xchg
call
pop
js
xor
outsl
xor
xor
push
jb
add
jle
lods
mov
jecxz
pop
add
jmp
jo
jbe
ret
ss
ret
dec
dec
js
dec
dec
fucomi
jbe
inc
pop
add
add
push
jb
and
pop
outsl
insb
push
inc
dec
add
jae
outsl
push
push
push
outsb
push
push
or
je
imul
and
and
jne
or
fs
add
ja
jle
out
and
dec
inc
add
xor
xor
xorb
arpl
jo
jns
pop
inc
inc
pushl
push
inc
js
insb
push
js
push
dec
push
dec
dec
inc
push
xchg
pop
dec
or
xlat
fsub
xor
inc
iret
push
xor
mov
lods
xchg
or
pop
dec
dec
push
inc
insl
outsb
lods
inc
push
mov
arpl
outsb
inc
xchg
ret
cld
push
ja
jne
sti
imul
shl
outsl
call
ss
push
pop
insb
stos
addr16
xor
push
dec
dec
jbe
fisubrl
mov
mov
dec
dec
dec
inc
push
push
xchg
dec
push
dec
push
outsl
inc
test
mov
sti
inc
popa
je
push
inc
dec
dec
push
jns
insb
adc
out
bound
aas
pop
scas
adc
sbb
stc
xchg
fs
mov
dec
test
xor
jne
xor
push
insb
lods
insl
das
pop
inc
inc
fs
addr16
jmp
mov
jg
inc
dec
push
add
push
xor
outsl
push
adc
fdivrl
andw
jno
push
xchg
outsb
sub
imul
inc
xor
ret
js
push
imul
push
lahf
inc
ja
sbb
sub
dec
xor
gs
xor
sbb
popaw
xor
xor
xor
mov
outsl
push
push
aaa
push
pop
adc
sbb
notb
fildll
insb
push
pushw
add
scas
pop
insl
ja
mov
in
outsl
in
jp
push
push
push
cmp
arpl
insl
jecxz
or
jo
dec
addr16
outsl
movsb
je
jno
push
push
dec
jne
mov
fsubrl
cli
inc
push
adc
gs
test
fst
push
inc
push
inc
dec
push
dec
xchg
dec
not
pop
push
ss
ja
and
inc
xor
shlb
mov
pop
loope
ret
push
push
push
xor
and
jb
lock
xor
xor
mov
lahf
int
or
and
xor
jle
notl
ret
in
insl
jae
jmp
popl
add
cli
add
mov
add
adc
lea
bound
fmull
sbb
add
cld
repnz
sbb
ficoml
xor
add
notl
pusha
cmp
sub
sbb
push
aad
add
inc
push
jo
insb
add
add
dec
adc
jb
in
mov
out
ss
pop
mov
add
cmp
inc
adc
sbb
subl
jns
roll
or
cwtl
insl
stc
lahf
xchg
mov
xchg
add
add
ja
mulb
or
leave
leave
ret
cmp
stc
insb
push
int
aad
mov
dec
adc
gs
mov
add
jno
and
add
or
dec
js
fadds
xor
add
bnd
movsb
pop
loopne
or
add
fadds
push
xor
inc
out
adc
xor
ss
roll
xchg
xorl
cmpl
inc
cmp
lahf
mov
push
shll
adc
sub
inc
xchg
icebp
add
bnd
or
add
in
nop
in
dec
sbb
and
push
fs
es
dec
mov
cmp
roll
mov
push
jnp
loope
clc
ss
mov
rcrl
xor
sbb
stos
aaa
hlt
fmuls
arpl
aam
or
pop
sub
xchg
adc
ds
into
mov
out
test
cmp
leave
sub
inc
mov
leave
xchg
call
ss
and
mov
loop
add
and
lret
add
push
mov
adc
cld
dec
cld
sbb
scas
out
movb
std
mov
xchg
add
cld
jle
mov
dec
pop
jnp
dec
aaa
sbb
outsb
into
mov
leave
scas
in
add
in
addr16
fimull
xor
pop
jmp
rcr
pusha
xchg
aaa
push
jl
pop
arpl
popa
daa
arpl
and
mov
cmp
jmp
pop
and
add
cld
je
rclb
jecxz
sbb
inc
pop
scas
je
sbb
shlb
mov
shrb
sbb
mov
in
xchg
scas
into
icebp
outsl
test
dec
andb
sti
push
push
inc
fnstsw
scas
pop
xchg
icebp
movsb
xor
sahf
pusha
pop
dec
push
cmpsl
popa
mov
xchg
sti
icebp
ret
inc
push
nop
dec
or
cmp
iret
mov
sub
add
idivl
dec
jl,pt
mov
out
mov
sub
push
ds
cli
add
sbb
xchg
pushf
arpl
fisttps
dec
das
lods
adc
sbb
pop
xor
shlb
jno
fs
les
cltd
jbe
cmp
add
mov
addr16
mov
lds
lahf
cmp
mov
lods
add
jbe
adc
or
cld
pop
pop
ret
adc
sbb
fdivs
icebp
test
test
mov
xchg
popa
add
jb
cmp
cld
xchg
cmp
arpl
movntq
call
xor
pusha
ret
sbb
int
jecxz
loope
adc
ja
add
push
xor
leave
push
jb
push
xchg
mov
and
pop
xchg
mov
xor
and
add
shr
leave
aad
add
repnz
push
sub
mov
ss
repz
and
cmp
add
push
es
lret
jno
push
std
pop
cmpsl
dec
add
mov
mov
hlt
xor
shlb
popf
data16
loop
popf
mov
adc
xchg
jecxz
sbb
push
mov
add
repnz
and
jp
push
loope
pop
jge
je
lahf
inc
stc
and
jmp
in
fldcw
pop
xlat
rclb
ja
movsb
xchg
mov
dec
iret
add
outsb
in
sbb
sbb
jae
out
and
mov
mov
shll
add
xchg
lea
add
lea
and
test
xor
daa
mov
xchg
cmpsb
cmp
std
sbb
out
sub
mov
and
ret
nop
add
shll
jnp
hlt
push
xchg
inc
lret
pop
movsb
cmp
in
pop
in
adc
aas
mov
inc
roll
adc
ljmp
data16
jle
enter
pop
fistl
inc
xchg
jbe
xchg
sbb
mov
cltd
and
add
pop
pushf
rcl
mov
call
xor
repz
lods
push
lahf
add
addr16
sbb
imull
orl
insb
mov
out
fwait
inc
inc
cmp
hlt
xchg
bound
cmp
xchg
push
in
mov
int
xchg
jl
xor
or
mov
push
adc
negb
xchg
es
mov
int
and
mov
push
out
insb
and
push
sbb
cmp
loopne
cwtl
je
mov
xchg
xchg
cmp
jnp
sub
mov
lods
test
add
popa
xor
and
mov
scas
les
imul
cmp
xchg
sbb
add
scas
sub
mov
xchg
add
dec
or
test
cmp
xchg
inc
push
cmp
je
outsb
pop
or
out
and
push
jp
fwait
aad
cmp
jae
jo
jecxz
mov
sbb
mov
fnstcw
jb
arpl
xor
jbe
or
or
lods
rorl
orl
pushf
insl
jbe
rclb
push
jae
out
mov
fmul
in
jbe
dec
mov
push
push
add
gs
xor
lahf
dec
xor
out
dec
inc
cs
xorb
sbb
lods
mov
jb
jl
inc
push
js
and
sub
push
xchg
add
cmpl
push
and
cmp
xlat
dec
dec
ljmp
xor
arpl
call
add
sbb
adc
sbb
mov
inc
add
in
stc
mov
ret
sbb
mov
scas
scas
cmp
cwtl
cmp
icebp
daa
xchg
dec
jl
and
jo
pcmpeqd
fxch
shll
mov
ret
mov
mov
bndstx
in
xorb
cmp
jmp
int
and
clc
inc
adc
mov
stc
dec
xor
subb
sub
loop
jle
dec
mov
out
fs
int3
out
cmp
aas
test
cmpsb
push
or
stos
push
push
imul
jbe
jl
nop
icebp
sbb
add
enter
adc
pop
xor
jae
sbb
or
dec
ret
sbb
jns
arpl
jo
je
cltd
xchg
rolb
mov
inc
cli
es
insl
cmp
sub
inc
jno
add
and
ror
pop
ret
inc
add
and
stos
push
or
aam
pusha
dec
xor
xor
adc
andl
pop
idivb
or
adc
loope
jmp
mov
jo
jp
add
insb
lret
subl
nop
or
stos
jge
mov
ljmp
sbb
sub
repnz
test
push
fsts
neg
mov
insb
jb
out
and
nop
inc
xchg
bound
dec
fsubrs
mov
ret
adc
dec
xor
pop
rcll
rclb
mov
orl
aam
dec
fs
xorl
jno
xor
cmpsb
cmc
pop
cs
and
les
mov
pop
int3
pusha
idiv
jb
mov
mov
cmp
icebp
stc
inc
dec
push
insl
call
fisubl
xor
popa
or
lods
pushf
xor
cwtl
push
mov
and
cmp
jno
xor
dec
pop
cmp
enter
lds
mov
insb
sbb
shrb
inc
jbe
repnz
shrb
std
mov
jl
repnz
or
mov
jle
bound
dec
xor
xlat
fwait
mov
mov
or
inc
outsl
inc
add
or
ret
data16
test
dec
out
fisubrs
push
stc
jbe
dec
push
jl
sbb
jle
xchg
adc
push
mov
dec
ds
sbb
cmpb
jb
xor
mov
push
sbb
jl
bound
filds
adc
out
or
jb
and
adc
ss
add
add
pushf
cmp
sbb
push
mov
mov
xchg
and
xchg
rcrb
jp
aas
mov
loopne
cmp
mov
les
mov
pop
push
xor
and
dec
sub
xchg
dec
cld
adc
outsl
dec
mov
push
xchg
mov
rol
jo
ss
js
out
and
cmp
in
orl
cmp
mov
adc
xchg
mov
addb
add
mov
es
aad
in
mov
ds
push
mov
xchg
cs
jnp
sbb
lea
cmp
mov
popa
or
and
adc
cmp
inc
mov
mov
test
jg
fldenv
fwait
movsl
sahf
idivb
aas
es
mov
ds
popa
or
and
push
push
sbb
je
jae
xlat
ret
jmp
adc
adc
xchg
xchg
pop
adc
pusha
ror
sbb
imul
or
pop
jmp
inc
adc
icebp
sbb
andl
xor
dec
roll
cli
movsb
std
lock
fs
cmp
mov
jecxz
mov
inc
cmp
clc
xorb
leave
sub
and
cmp
cltd
mov
je
xchg
stos
jno
lds
inc
in
xchg
mov
pop
cmp
pushf
test
incb
enter
fcompl
sub
mov
inc
movsb
aam
shrl
and
inc
lcall
seta
pop
mov
push
push
stos
adc
cmp
jne
mov
mov
in
in
aad
mov
mov
add
mov
bound
jbe
xor
call
imul
bnd
xchg
ror
xlat
subb
into
mov
adc
xchg
adc
jl
sahf
movsb
xor
push
jecxz
cld
lcall
adc
daa
shll
inc
jnp
out
sbbl
push
jb
out
repz
insb
ljmp
enter
out
gs
push
jecxz
sbb
ss
in
divb
xor
lock
je
mov
cmp
mov
jne
rclb
and
xchg
rcr
jg
dec
add
jge
jmp
std
vunpckhps
movsb
loope
loopne
loope
ret
stos
call
xor
cmp
and
lahf
inc
jno
std
addb
sbb
sbb
adc
mov
out
inc
movsb
ss
dec
fs
push
add
cmp
pop
out
cli
add
xchg
lret
mov
add
ljmp
adc
enter
test
icebp
lock
xchg
pop
ficompl
leave
scas
dec
pop
aad
inc
inc
xor
mov
imul
popa
xchg
pusha
xor
dec
cmp
sbb
test
lea
fisttps
nop
mov
sbb
insl
and
dec
out
xchg
in
dec
fdivs
jg
sub
fmuls
dec
aaa
mov
pop
mov
cmp
adc
ret
leave
popa
fcoml
adc
xor
add
xchg
addb
cmp
mov
inc
cwtl
jbe
add
or
pop
fistpl
mov
cmpsl
pusha
sub
pop
js
push
mov
cmp
dec
sub
mov
sbb
push
cmpsb
jae
out
and
enter
insl
or
add
xchg
and
sub
aad
add
fistpl
dec
hlt
push
ret
int
add
sub
jo
filds
aam
cmp
je
test
lods
cmp
mov
pop
lods
and
mov
sbb
inc
ret
ret
lret
addb
enter
add
pop
jne
in
and
add
sbb
insl
mov
mov
jmp
sbb
gs
shll
add
inc
lcall
ds
jge
insb
ja
loop
iret
icebp
cwtl
insb
andb
call
or
fnstenv
les
leave
js
sbbl
dec
dec
mov
inc
fidivs
int
sub
addb
jno
add
push
movsb
js
inc
sbb
fs
mov
jne
sti
imulb
sarb
xor
push
lret
lea
addl
mov
and
ja
into
inc
push
inc
mov
shrb
xor
ret
push
add
icebp
pop
push
clc
je
cmp
xchg
cmp
jecxz
add
cli
sbb
add
loope
in
nop
cmpsb
lcall
fsts
add
xor
test
lcall
movsb
inc
ss
dec
and
sub
mov
mov
stos
add
ja
pusha
shrl
mov
push
jp
cltd
addl
lcall
mov
push
lods
in
pop
xchg
fstl
mov
js
mov
push
add
dec
test
imull
mov
daa
dec
inc
das
mov
and
mov
and
adc
shll
cmc
setp
movsb
fldcw
inc
ds
sub
cmp
inc
jge
or
aam
sti
xchg
xchg
aad
jo
cmp
xchg
scas
sahf
les
fs
xchg
pop
decl
xor
mov
xchg
pop
cmp
lock
sbb
aas
stos
xlat
es
add
or
out
pushf
icebp
sbb
adc
mov
sbb
fs
push
ret
decl
rcrl
test
pop
mov
imul
xchg
lds
stos
mulps
lcall
xor
xor
mov
ljmp
sarb
jecxz
mov
xor
push
loope
lret
fmulp
mov
fstpt
xchg
pop
hlt
dec
and
test
pop
lods
sub
xchg
jne
pop
and
pop
dec
dec
or
sbbl
push
jno
inc
repnz
aaa
pop
or
aaa
cmp
jle
les
sbb
stos
lods
cmp
cmp
popa
xor
stos
or
sub
cmpsl
xor
aam
cmp
mov
cmp
cli
lret
pop
jno
out
adc
loopne
dec
mov
aam
mov
inc
dec
flds
adc
pop
mov
sbb
loope
cmp
cmp
insb
nop
test
xor
mov
push
xchg
pop
fildl
loop
xor
mov
mov
cld
sbb
aaa
push
cltd
ret
xor
mov
xor
hlt
subl
mov
in
out
pop
cmp
xchg
shl
mov
dec
js
sbbl
es
movsl
in
roll
pusha
ja
push
push
rcrl
dec
push
mov
adc
nop
xchg
xor
fcmovnbe
fs
pusha
movsl
pushf
mov
jecxz
pop
das
and
pop
movsl
jecxz
jecxz
jne
pop
flds
mov
mov
push
es
mov
out
popa
mov
sbb
push
xchg
scas
insb
mov
addr16
movsb
nop
shrl
cmp
cmc
popa
shrb
dec
jb
leave
lods
fwait
sbb
or
orl
and
dec
inc
sbb
rorl
sub
pop
iret
gs
pop
in
test
jp
lock
fistps
popf
cmpsb
xchg
shl
inc
adc
test
fldt
add
ljmp
aaa
inc
adc
orl
mov
xchg
icebp
dec
sbb
test
cmp
orl
ss
enter
sahf
rol
lahf
inc
sub
pop
pop
or
and
and
jl
fs
add
fsubl
cmp
sub
shll
dec
nop
loope
test
sub
lea
sbb
or
les
mov
and
and
sbb
mov
or
shrd
nop
dec
sbb
bound
roll
jl
adc
daa
arpl
sub
fcomp
sub
adc
jl
mov
inc
push
in
sub
iret
out
nop
roll
data16
pop
pop
xor
lods
pop
push
push
or
inc
call
mov
adc
loopne
jmp
test
push
or
inc
or
add
mov
mov
repnz
nop
sbb
dec
xchg
imul
and
lock
loope
pop
add
shll
pop
and
je
and
push
adc
xor
add
aad
test
or
and
gs
aam
or
test
cmpsl
mov
mov
mov
jle
xchg
mov
cmp
fimuls
mov
push
dec
fimull
and
stos
out
jae
jg
daa
clc
adc
subb
imul
jb
mov
and
dec
push
popf
cmc
xor
xor
cmp
dec
test
mov
enter
sbb
sbb
shl
call
inc
cld
xorb
aas
push
pop
shll
dec
adc
movsl
mov
repnz
xchg
es
cltd
in
xchg
jo
test
dec
pop
push
push
pop
repnz
mov
inc
inc
repz
dec
inc
fwait
lock
xchg
cs
or
pop
lds
or
aad
les
fsubl
cmp
mov
push
xor
pusha
push
cltd
fs
pop
test
imul
shrl
pop
enter
test
mov
adc
or
jmp
test
push
or
repnz
ljmp
orl
shrd
mov
adc
pop
push
xchg
int3
fdivs
cwtl
shrl
and
cmpsb
insl
nop
bound
hlt
xor
out
arpl
push
inc
xor
jmp
popa
or
popf
lds
inc
xor
and
mov
adc
lcall
xor
bound
hlt
shl
dec
movsb
insl
sbb
adc
mov
push
mov
inc
loop
mov
push
adcl
loope
shll
add
in
mov
pop
adc
clc
adc
xchg
cmp
jmp
testb
adc
ftst
ror
dec
adcl
ret
xcrypt-cbc
cmpsl
rcrl
nop
inc
cwtl
pop
flds
and
xchg
les
xlat
mull
popa
movsb
int3
clc
push
and
js
cmp
test
leave
or
mov
in
push
adc
pop
jbe
adc
jl
pop
xor
call
ds
sbb
xchg
inc
sub
popl
rol
shll
jmp
pop
cmc
rclb
fnstenv
lea
sbb
xor
xlat
daa
xor
test
ss
jecxz
and
or
xor
xchg
add
mov
cmp
pop
and
xchg
sbb
call
sbb
popf
xchg
js
inc
pop
mov
das
adc
mov
test
inc
aam
adcl
loope
adc
jne
cli
mov
inc
sub
shl
loop
jge
push
xchg
add
icebp
subb
mov
cld
sahf
insb
xchg
int3
imul
sbb
add
add
pop
mov
mov
movsb
mov
loopne
arpl
int3
mov
adc
add
add
movb
adc
sbb
sub
sbb
push
add
xchg
clc
popf
and
sub
push
jo
dec
sbb
or
addr16
pop
insb
ret
andl
aaa
movsl
and
dec
mov
adc
push
and
adc
cmp
movsb
js
push
aam
pop
insb
xchg
push
or
shlb
pusha
and
mov
xchg
out
call
mov
addr16
sub
rclb
mov
movsb
push
push
push
xchg
rolb
lods
in
es
test
out
mov
and
xor
xchg
jns
mov
xor
rcll
mov
sbb
in
xor
aam
das
dec
ret
adc
int3
xor
in
ret
mov
loope
ja
adc
dec
cmp
mov
addb
or
mov
pusha
and
icebp
jns
dec
ret
sub
enter
andl
cld
sub
popa
adc
pop
mov
rcl
and
sbb
jnp
jp
mov
xchg
les
lock
test
inc
les
jle
in
lds
wrmsr
pop
jecxz
popa
scas
roll
sahf
bound
mov
push
add
adc
jmp
jno
or
test
gs
add
dec
push
mov
rorb
shrb
adc
and
push
push
mov
inc
jg
js
leave
sub
repz
jecxz
inc
jp
xlat
das
jns
jne
loope
mov
mov
mov
cs
cmc
adcl
in
inc
negb
cmc
xchg
mul
xor
mov
test
jmp
arpl
gs
movsb
jmp
inc
push
hlt
xchg
push
lds
and
dec
add
push
or
inc
lds
pop
mov
sbb
jno
xchg
jp
jle
adc
xchg
cmovge
jbe
adc
xchg
sbb
movsb
bound
mov
cmp
mov
arpl
or
nop
lret
ds
push
sbb
movsb
mov
sbb
outsl
pop
mov
sbb
rcl
or
jb
out
loop
jne,pn
mov
pop
push
cmp
icebp
or
adc
inc
and
into
jp
jge
lcall
pop
outsl
add
sbb
into
mov
stos
sbb
or
cmova
test
push
mov
push
adc
pinsrw
sub
push
mov
aaa
jae
xchg
pop
dec
mov
mov
lds
sub
scas
jmp
shlb
pop
je
sbb
enter
adc
cmp
jl
les
inc
iret
add
xchg
or
push
pop
xchg
cmp
add
sub
adc
cmp
cmp
adc
add
xlat
mov
cltd
aam
jl
ret
mov
sub
out
push
insb
mov
and
dec
movsl
icebp
add
or
shlb
cmpsl
xchg
ljmp
xchg
into
js
jg
loopne
sub
jmp
rorb
mov
mov
lea
xchg
call
pop
and
sbb
lret
jg
les
adc
and
add
les
stos
sbb
aad
xchg
leave
sub
addr16
into
movb
enter
mov
push
pop
adc
jmp
xor
jno
shl
imul
pusha
add
push
aam
je
sahf
lock
jge
push
addr16
adc
ret
push
test
adc
pop
or
popa
xchg
dec
in
out
mov
inc
test
mov
adc
mov
pop
or
dec
push
popf
stos
daa
xchg
jg
addr16
mov
xor
add
notl
inc
push
cmp
in
adc
sahf
jle
or
sti
dec
xchg
cmp
pushf
out
test
and
push
adc
jae
sbbl
inc
pushf
jns
push
add
fwait
test
jbe
add
xor
or
addr16
mov
xchg
fnsave
dec
out
int3
push
jle
mov
sub
popf
vpsubusw
pop
std
int3
arpl
jno
arpl
mov
jge
adc
shll
lret
dec
adc
dec
xor
jecxz
jle
mov
pop
or
adc
mov
and
sahf
xchg
das
jbe
test
cltd
adcb
dec
sbb
aas
xchg
push
aaa
sbb
push
inc
in
stc
rol
sub
adc
je
orb
xor
enter
adc
test
lret
adc
orb
call
pop
es
data16
inc
or
sbb
add
xchg
ja
stos
inc
jb
sbb
mov
hlt
cmpsl
mov
or
and
pop
jmp
pop
xor
loopne
add
aas
mov
negb
sub
xchg
hlt
sbb
push
sub
add
mov
andl
fstpt
in
jnp
inc
inc
inc
call
sbb
je
sarb
mov
sub
test
rcrl
sbb
or
jle
into
mov
sbb
xchg
rcll
add
sub
push
fdivs
pop
jbe
xchg
outsb
and
xlat
or
xor
or
lea
cmp
hlt
adc
mov
and
or
mov
mov
icebp
filds
mov
addr16
jmp
test
push
ficoml
out
lock
xor
shlb
gs
pop
loopne
dec
dec
xchg
pop
popf
fs
dec
jbe
push
push
jmp
inc
arpl
sbb
add
dec
adc
and
rorl
jp
pop
jmp
or
cld
push
out
mov
aaa
enter
inc
lcall
je
in
add
rolb
cmc
dec
or
xchg
dec
jns
fsubr
data16
mov
ja
mov
or
pop
xor
pop
push
dec
loop
cmp
mov
daa
nop
xor
push
cmp
xchg
insb
sub
adc
shll
sub
test
outsb
sahf
cmp
and
pushf
in
xor
test
cld
xchg
mov
jbe
jno
xchg
xor
iret
push
and
push
mov
in
or
inc
push
sub
es
mov
inc
popa
push
lds
mov
hlt
add
pop
outsl
cld
bound
aas
pslld
fwait
or
or
shrl
push
cmp
cmc
add
sbb
adc
jl
or
test
and
xor
inc
cmp
lods
adcb
rorb
push
mov
jl
or
testl
dec
cmp
and
mov
dec
lock
dec
call
int
bound
or
cli
aaa
out
adc
jmp
lcall
dec
rcrb
sbb
or
ds
inc
dec
cmp
aaa
lods
addr16
adcb
subl
mov
testl
lods
inc
pop
sbb
xchg
ret
and
sahf
mov
loopne
and
shlb
hlt
jg
ja
bound
jp
leave
mov
add
mov
or
cmp
or
and
pop
rorb
xor
dec
fs
adc
push
push
repnz
xor
sbb
lea
sbb
sub
inc
test
cmp
int3
pop
mov
xor
mov
sbb
xor
mov
mov
dec
cmovl
sarl
xchg
dec
and
rcr
cmp
and
push
cmp
cmp
sub
sub
movswl
jp
test
xchg
and
gs
xchg
add
adc
inc
ret
jp
adc
or
clc
or
lret
cmp
jmp
std
nop
leave
jb
test
lock
ret
popf
xchg
sub
test
xor
jo
xor
push
inc
sub
mov
pop
popa
inc
and
or
popa
sbb
repnz
aaa
cmp
lock
add
movb
cmp
or
push
stos
and
mov
adc
jb
mov
lds
inc
and
xchg
lcall
leave
pcmpeqb
cmp
test
pop
dec
fldenv
loopne
and
clc
mov
mov
push
xor
addr16
inc
out
inc
jle
les
add
mov
int
xchg
andb
add
loopne
add
js
jmp
xchg
mov
cmp
pop
jae
data16
cs
inc
or
push
sub
popa
je
push
faddl
mov
cmp
jl
mov
pop
or
jnp
add
stos
pushf
stos
lret
jno
fsubrs
cwtl
inc
pop
popf
jae
and
rolb
xchg
cli
xor
mov
clc
lret
ret
mov
enter
or
and
xchg
test
dec
rorl
cmpsl
out
mov
sub
add
jmp
outsb
inc
xchg
nop
add
add
pop
pop
add
cli
mov
stc
addb
xchg
jp
fwait
mov
xorb
mov
lret
pop
jl
inc
xlat
mov
cmp
mov
jmp
pop
mov
call
or
enter
sbb
clc
js
sub
mov
jae
jl
mov
cmp
sbb
push
mov
add
sbb
adc
add
xchg
cmp
mov
ljmp
xchg
inc
js
paddsb
call
lods
loop
in
add
aad
es
fmull
std
cwtl
movsl
cwtl
mov
popa
inc
mov
fstps
cmp
cmp
sbb
pop
cmp
cmp
lock
cwtl
or
ds
je
add
mov
inc
push
or
clc
loopne
push
xchg
lahf
nop
adc
sbb
mov
xchg
aaa
sub
cmp
cs
jo
jns
or
in
test
xor
mov
outsl
or
sbb
lods
xchg
bound
pop
ror
sbb
aaa
sbb
inc
jnp
pop
and
add
fwait
cwtl
jne
sub
daa
nop
addb
dec
popf
mov
aad
xor
pop
pushf
lods
cmp
imul
iret
inc
movzbl
test
xchg
andb
xchg
aam
roll
inc
in
mov
jl
mov
dec
mov
aas
mov
mov
sarb
or
jae
fwait
jge
dec
je
mov
add
or
sbb
or
add
and
or
sbb
add
push
push
xchg
push
adc
dec
movsb
pop
roll
test
andb
stos
xchg
pop
leave
call
rcrl
fsubs
jae
add
cmc
add
pop
hlt
dec
jecxz
fimuls
bound
inc
bound
and
sbb
scas
rcr
push
pop
mov
imul
mov
pop
add
sbbl
xor
lahf
push
movsb
sub
stos
into
ds
inc
test
xchg
adc
int
inc
cmpsl
shll
ficomps
cmc
loope
aam
pop
rorb
mov
std
shll
xor
jmp
sbb
jns
mov
xor
and
movsb
cs
mov
add
imul
mov
dec
push
jge
jg
cltd
xor
push
andl
xor
and
add
pop
lds
lock
pop
sbb
js
push
ds
pushf
xchg
add
ret
test
dec
jne
mov
sbb
data16
into
pop
sbb
or
jp
or
mov
ds
sbb
stos
or
push
mov
mov
shrb
xor
mov
daa
cmp
subl
or
adc
lods
lret
fisubs
loope
sbb
xchg
test
lea
cvtps2pi
sbb
andb
test
push
cmp
inc
call
iret
add
mov
push
inc
adc
xchg
cmp
test
das
fwait
mov
jmp
iret
xlat
push
fdivl
popl
notb
inc
cmp
sti
addb
push
pushf
fidivl
fwait
mov
add
jp
adc
mov
mov
fstp
insb
jae
cmp
xor
adc
dec
xchg
stos
dec
xor
sbb
or
jo
xor
ljmp
jl
add
pusha
pushf
lds
call
enter
inc
push
movb
mov
pop
push
ss
pop
add
dec
push
orl
inc
enter
clc
loopne
cmp
out
ss
std
push
cmp
sbbb
mov
testl
add
lods
push
popa
mul
jl
adc
std
aaa
xchg
inc
int
mov
push
xor
ja
jno
inc
push
loop
pop
push
adc
jecxz
addr16
add
xchg
mov
mov
pop
mov
sub
jl
loopne
push
in
or
mov
cld
insb
mov
or
push
inc
xchg
add
mov
push
daa
push
or
inc
stos
add
sub
adc
push
and
test
ljmp
inc
sbb
hlt
mov
and
push
xchg
in
loopne
push
or
roll
je
add
pushf
jo
dec
sbb
pop
mov
jae
add
adc
mov
mov
sub
rolb
dec
enter
pop
frstor
dec
arpl
das
popf
cltd
cld
fstl
mov
test
adc
adc
sbb
xchg
add
sbb
test
jl
nopl
test
mov
sub
nop
jle
push
mov
js
int
ss
and
xchg
jg
push
hlt
int
xchg
test
repnz
dec
jp
or
push
mov
orl
fnstcw
cmp
mov
fcmovnu
mov
inc
imul
xor
inc
mov
inc
xor
fs
mov
add
add
enter
jl
pusha
pusha
jecxz
pusha
xor
repnz
dec
xchg
mov
loopne
or
es
aam
adc
mov
mov
lahf
jp
and
sub
adc
insb
flds
and
jbe
int3
and
xchg
jo
mov
and
jns
add
popf
sub
enter
out
xchg
arpl
repnz
mov
popl
ja
shlb
in
mov
mov
jmp
andl
xchg
repz
scas
and
adcb
sbb
imul
mov
mov
mov
lahf
data16
mov
push
and
mov
inc
notl
mov
jnp
or
pusha
or
add
adc
nop
add
add
adc
clc
xchg
pop
lret
in
lcall
test
xor
lds
negb
mov
movsl
int3
pop
movl
inc
shlb
ror
lret
push
sub
inc
ror
lcall
lcall
xchg
test
mov
jg
ss
mov
xchg
cwtl
cmpl
or
dec
adc
fwait
cmp
inc
adc
mov
repnz
sub
jo
hlt
sub
sbb
cmp
shl
rcrb
sti
lods
outsl
stos
or
push
mov
sub
sbb
and
mov
push
cld
fildl
rolb
pop
inc
sbb
and
add
leave
mov
mov
sbbb
mov
ffreep
cld
lds
and
pop
rorb
outsb
outsl
andb
dec
adc
movsl
add
mov
xor
popa
into
or
jne
leave
inc
pop
or
xorl
mov
mov
hlt
pushf
pop
inc
cmp
add
lret
push
pop
inc
push
je
ljmp
jmp
data16
stc
push
inc
mov
fs
push
sbb
pop
leave
addl
fs
sub
les
das
add
pusha
mov
ljmp
lcall
jp
mov
pop
imul
test
hlt
sbb
and
test
or
push
dec
sub
sub
sub
cmp
adc
push
dec
mov
dec
mov
ds
repnz
lcall
jle
sbb
fs
pushf
xchg
mov
out
mov
jo
xor
inc
cmp
js
movsb
jbe
adc
and
ds
dec
jp
fisubl
in
ds
rcl
xchg
add
xorl
inc
cli
and
xor
cmp
or
push
lret
addr16
int
cmp
cmpsb
xchg
fdivs
or
and
lods
rclb
and
pop
mov
dec
daa
stc
pusha
dec
std
scas
sub
inc
ds
add
cmp
aas
or
jl
xor
lods
stos
lods
inc
adc
pop
insb
adc
cmp
inc
loop
aaa
sub
xchg
icebp
into
cs
xchg
mov
ret
jmp
movsb
ds
or
mov
in
cmp
sub
xor
or
loope
dec
outsb
lret
adc
mov
rorl
cmpl
mov
xchg
cmpsb
adc
xor
clc
adc
enter
enter
mov
out
std
jle
push
or
and
int3
test
in
flds
test
mov
mov
fs
cld
ljmp
mov
jns
dec
pop
repnz
adc
cmc
jne
add
mov
jp
sub
dec
adc
sbb
dec
bound
in
es
pop
push
or
push
and
mov
ret
and
dec
sub
cmp
hlt
jle
inc
stos
cs
in
arpl
adc
test
sahf
inc
iret
push
lods
data16
cmp
out
and
insl
push
sbb
in
loop
xchg
addl
test
orb
push
or
sub
inc
stos
cli
clc
sub
in
addr16
push
xor
fld1
jo
shrb
mov
pop
daa
cmp
sub
mov
mov
pop
popa
mov
inc
loopne
and
scas
add
jno
pushf
or
adc
inc
adc
push
push
out
jne
xor
push
imulb
mov
pushf
xor
cmp
sbb
xlat
popa
xor
les
movsl
or
dec
lret
rclb
scas
leave
dec
jg
nop
ljmp
or
mov
lret
cmp
sub
shll
xchg
inc
std
cvttps2pi
pop
bnd
into
pop
shll
sub
add
push
ja
push
jbe
push
fildl
rorb
mov
ret
dec
ds
int
push
pop
cld
sub
loope
dec
addr16
xchg
es
adc
out
inc
lods
or
loop
push
pushw
xchg
sub
sahf
test
sbb
cmp
push
adc
and
test
aaa
ror
shll
add
pop
fnstenv
icebp
mov
lret
jb
or
inc
jne
push
loopne
popf
mov
sub
in
lret
sub
xchg
push
and
adc
test
lahf
push
xchg
mov
loop
aad
jne
hlt
sbb
sub
mov
xlat
adc
rorb
mov
sbb
sbb
adc
mov
rcll
or
xchg
jno
adc
lods
inc
popa
mov
adc
sbb
jp
stos
ds
loop
xor
push
adc
lock
adc
scas
sub
xor
or
add
jp
push
jecxz
mov
inc
jb
shl
cld
jbe
imul
push
cltd
mov
insb
or
lds
cmp
repz
mov
xchg
adc
sbb
jl
shll
nop
movsl
push
sbb
mov
fmull
xor
pushf
lds
iret
daa
push
cwtl
xor
dec
mov
inc
mov
add
jmp
cld
add
xor
addr16
shl
or
adc
xor
imul
insb
mov
fcmovnb
scas
xchg
and
aad
nop
or
dec
mov
movsb
and
bound
or
add
int
dec
lcall
xchg
cmp
mov
pop
push
or
addr16
adc
mov
dec
mov
cwtl
stc
dec
add
cld
cli
loop
inc
sub
dec
sub
push
movsb
popa
nopl
mov
cmp
cmp
mov
cmp
sbb
sbb
jle
inc
clc
cmp
xor
mov
dec
and
mov
or
pop
xlat
cli
mov
repz
mov
jecxz
adc
or
adc
sub
xchg
inc
push
fistpl
jp
pop
jmp
or
dec
loop
xlat
dec
cli
adcl
pop
push
shl
jb
cmp
fwait
lods
loopne
call
sbb
faddp
and
mov
push
mov
clc
cmc
fistl
out
cli
jp
je
inc
mov
pop
xchg
sar
add
dec
jle
sub
out
mov
icebp
insb
pop
xchg
nop
cmpsl
sbb
adc
lcall
cmp
adcb
es
inc
nop
jae
repnz
add
ja
ret
rorb
das
jmp
in
mov
stc
rcrl
test
movb
mov
movsl
inc
rolb
sub
loop
das
sbb
sarb
mov
xchg
mov
fisubs
arpl
jo
mov
or
mov
jnp
adc
loopne
sub
je
push
scas
test
jmp
mov
cmp
lret
or
leave
xchg
movsl
push
pushf
filds
mov
aam
xor
mov
mov
xor
xchg
movsb
dec
jbe
dec
push
sbb
pop
or
or
pop
push
ror
hlt
pop
inc
or
xchg
insb
lock
rorb
dec
call
cmp
lock
cmc
xor
sub
pop
aad
adc
cmp
pop
and
dec
lcall
add
mov
addr16
jle
jmp
es
ret
mov
fimuls
pop
scas
pop
push
cwtl
shll
jl
nop
and
push
push
aad
jecxz
cmpb
pop
xchg
bound
in
in
lock
jl
daa
or
sub
std
fnstcw
popa
sbb
mov
pop
mov
mov
mov
arpl
cmp
xchg
push
ds
mov
push
mov
int
mov
sub
sub
adc
jmp
push
push
cmp
xchg
je
adc
inc
cmp
sub
pop
mov
iret
fmuls
insl
leave
ss
and
mov
enter
dec
add
nop
sbb
out
adc
and
mov
dec
mov
shlb
test
loope
sbb
leave
add
adc
mov
xchg
test
inc
or
jl
jb
icebp
mov
mov
cli
inc
stos
loopne
jbe
push
inc
addr16
or
fldl
sub
xor
adc
xor
xchg
inc
inc
sbbb
mov
jecxz
push
xchg
icebp
or
call
dec
mov
inc
pop
xor
sbb
xchg
jbe
push
mov
sub
sub
and
sbb
jecxz
ljmp
loope
jl
push
or
xlat
jecxz
stc
mov
fs
stc
nop
dec
in
jecxz
cmp
jae,pn
xor
cmp
mov
xchg
cld
call
popf
out
fwait
icebp
popf
mov
mov
fsubl
jl
test
dec
mov
hlt
push
les
mov
sbb
and
and
pushf
loop
sahf
push
popa
iret
dec
mov
and
mov
ss
mov
add
or
sti
out
jo
movsb
sbb
push
sub
daa
aaa
bound
adc
xor
jb
in
dec
stos
pop
sub
push
mov
call
es
je
bound
orb
xor
xchg
mov
and
and
xorl
addr16
cmp
nop
inc
sbb
push
mov
add
ja
cmp
in
fbld
pop
adc
lods
inc
jge
leave
mov
test
mov
dec
cmp
nop
movsb
pusha
inc
fcoml
pop
mov
sub
lods
sti
leave
adc
and
push
subb
ljmp
or
add
repz
mov
xor
cmp
hlt
push
sbb
dec
repnz
ret
and
add
dec
aaa
rcrl
jae
add
push
decb
add
out
addl
mov
mov
xchg
jecxz
dec
xchg
mov
rcll
dec
sbb
mov
dec
mov
imul
mov
pop
jns
lret
mov
add
sarb
and
pusha
adc
rol
add
push
aaa
sbb
xchg
jecxz
dec
orb
insb
xchg
or
pusha
pop
add
lahf
mov
out
adcl
mov
ret
inc
pop
fstps
leave
mov
adc
add
jnp
pop
stos
jp
repnz
sbbb
xchg
stc
pusha
push
and
xor
adc
movsl
lods
dec
sbb
pushf
dec
ret
xor
xchg
pop
addr16
call
push
mov
js
xchg
adc
sub
and
mov
sti
in
sbbb
pop
push
lock
xchg
push
mov
sub
adc
pop
daa
mov
dec
pop
rolb
insl
pop
pop
inc
xor
nop
sbb
push
test
push
jmp
fimuls
add
push
out
push
scas
xchg
jnp
mov
mov
outsl
mov
gs
mov
shrb
cmpsb
xchg
jae
mov
andl
add
pop
loopne
sub
je
bound
jmp
and
cli
sbb
jbe
cmc
pop
lods
dec
and
imul
add
rcrb
add
and
mov
inc
push
add
sub
jl
movsb
and
xor
pop
rcrb
add
inc
inc
ret
dec
imul
je
dec
mov
mov
outsb
pop
sbb
aam
push
cmp
mov
dec
and
jmp
pop
icebp
sbb
pop
imul
add
pushf
bound
inc
pop
and
andb
xchg
imul
push
in
cmp
add
fnstcw
mov
mov
push
pop
push
xor
xchg
adc
sti
push
pop
sbb
les
mov
add
dec
mov
pop
cmp
cmpsl
clc
mov
push
es
mov
inc
mov
sti
lds
push
jp
xchg
iret
mov
scas
or
xchg
je
mov
pop
adc
sti
or
xchg
sub
movsl
inc
mov
cld
mov
xchg
sub
xor
jb
popf
push
sbb
add
pop
inc
jns
rolb
xor
mov
fwait
xchg
subl
lahf
and
mov
adc
cmp
or
mov
sti
mov
scas
nop
out
mov
insb
mov
cmp
jnp
test
xor
out
jb
or
pusha
movl
ljmp
pop
mov
addb
mov
test
repnz
sahf
mov
sahf
push
clc
mov
shr
inc
xor
imul
repz
xchg
xchg
mov
andl
repnz
and
dec
rolb
inc
jge
inc
loopne
and
stc
lret
mov
mov
outsb
jge
out
test
sbb
je
mov
xchg
xor
jne
dec
stos
pusha
dec
xchg
test
cwtl
xor
ljmp
andl
pop
popf
cld
gs
cli
data16
push
ret
inc
sbbb
add
xchg
push
in
inc
js
mov
fs
aam
mov
push
push
add
je
or
push
mov
iret
sahf
rclb
lret
lahf
sub
inc
addl
adcl
xchg
add
sbb
add
stc
bound
or
mov
jnp
or
and
inc
es
cwtl
insl
shlb
dec
aas
pop
push
dec
push
sub
push
daa
add
xor
sub
stos
mov
lock
test
mov
xor
fimuls
add
mov
cmp
in
sbb
sub
add
movsb
sbb
mov
or
fistpll
clc
xorb
ja
add
addr16
and
sbb
icebp
sti
jne
fwait
in
mov
mov
xchg
add
adc
add
push
jge
add
jo
mov
leave
dec
inc
pop
mov
rorl
and
fs
arpl
dec
fldl
loopne
mov
jecxz
daa
dec
lock
jno
and
jecxz
pop
sbb
stos
inc
fsubr
mov
bound
sub
mov
scas
push
sbb
sti
sarb
shlb
add
adcb
dec
push
mov
rorb
and
add
lea
int3
loope
push
xchg
sbb
jecxz
insl
mov
fcomps
dec
pop
jns
sbb
push
dec
shlb
popf
pushf
call
std
mov
xchg
clc
pop
je
xorb
adc
mov
clc
ret
shrb
jmp
addr16
test
aad
sub
popf
lret
cltd
or
sub
cmp
xchg
mov
jle
push
fmull
es
cmpsb
movsb
mov
inc
mov
lods
out
dec
jae
or
and
scas
or
mov
sub
mov
adc
mov
das
push
ret
test
mov
notl
mov
push
pop
mov
mov
cmp
dec
or
faddl
pop
xor
jbe
pop
sub
jmp
push
andb
mov
shl
push
stos
rcrb
adc
dec
sub
popf
loopne
push
nop
fldt
jl
jnp
std
lds
popl
push
inc
mov
enter
mov
xor
adc
and
xchg
int3
or
jo
gs
cmpsb
pop
ucomiss
fsubs
mov
mov
flds
push
and
aam
cmp
and
cmp
jae
shrb
xor
mov
mov
cmp
sub
clc
mov
stc
aam
rcll
rcll
mov
jno
imul
mov
out
xchg
ret
out
insb
jbe
popa
or
inc
push
test
cmpsl
andb
dec
push
das
sub
fbld
dec
lea
fsubs
aam
push
leave
xchg
push
pop
les
call
imul
or
pop
lds
sahf
cmp
pop
popf
adc
cmpsb
fmulp
shll
fmulp
fisubl
sbb
ja
dec
jl
xchg
ret
sub
and
pop
sub
pop
stos
and
dec
sbb
pop
cmpl
and
sbbl
bound
inc
add
cmc
gs
lahf
stos
jp
adc
push
cmpsl
vandnps
pop
jb
add
add
xor
hlt
fwait
jno
in
adc
icebp
sbb
lods
xchg
cmp
popa
loope
xor
loope,pt
pop
xchg
test
decb
add
jl
dec
sahf
add
aam
push
and
mov
mov
xchg
push
pop
adc
sbb
in
or
imul
xor
jae
mov
test
pop
mov
pop
xchg
in
popa
push
adc
push
add
add
lcall
outsl
ret
mov
sbb
jb
pmaxsw
pop
xor
aam
scas
mov
or
or
mov
pusha
mov
les
insb
in
in
xor
xchg
aad
movsbl
clc
in
mov
mov
mov
sbb
xchg
xchg
push
xchg
out
outsl
xor
jp
pusha
push
xor
pushf
bound
jae
push
adc
dec
mov
mov
fmuls
dec
inc
xchg
xorb
lock
into
sub
in
pop
in
sub
xchg
inc
jno
inc
orl
aam
in
pop
daa
jl
or
dec
xchg
inc
addr16
shrb
clc
mov
push
jle
lahf
adc
inc
movl
and
sbb
mov
push
mov
add
cmc
nop
jge
mov
mov
lret
jno
and
mov
or
jbe
dec
mov
test
shlb
mov
or
in
sub
pop
push
or
sub
or
jbe
sbb
sbbb
push
dec
les
pop
icebp
and
adc
inc
xchg
xor
dec
jb
nop
andl
out
mov
pop
ret
loope
sub
scas
mov
flds
inc
push
xchg
andb
and
stc
shll
les
out
daa
or
daa
mov
mov
test
imull
in
adc
mov
inc
pusha
icebp
pop
cmpb
imul
test
dec
inc
je
ror
xor
rcrl
stos
push
cmp
mov
in
sub
cmpl
clc
sub
jne
enter
es
insl
inc
adc
popa
inc
pop
scas
inc
pop
lock
inc
cmpsb
mov
in
movsb
call
jmp
popl
lret
inc
inc
xor
pop
imul
movsb
and
stc
push
xchg
mov
mov
push
out
stos
jp
lock
xor
aad
cmc
roll
and
es
sti
pop
pop
stos
lock
and
stos
popa
lds
sbb
xor
mov
sub
psubusb
je
sarb
cmp
xor
inc
ror
jmp
mov
clc
adc
andb
test
imul
inc
psubw
sahf
roll
popf
xor
cli
aas
mov
mov
and
jns
leave
jge
iret
test
sbb
xchg
xlat
and
pmaddwd
add
aad
aad
dec
cmp
adc
sub
pop
xchg
test
movsb
and
or
fwait
into
enter
and
xor
daa
dec
mov
popl
in
mov
out
gs
lret
pop
jmp
pop
icebp
push
dec
inc
jno
add
das
xor
dec
icebp
icebp
nop
cmp
xor
mov
jne
es
ja
popf
aam
test
mov
out
push
enter
mov
ds
push
aaa
incb
lods
inc
and
popf
mov
mov
fimull
jnp
cmp
out
sbb
mov
and
sbb
hlt
mov
add
lods
and
add
adc
outsl
sbb
push
cmpsl
fcoms
icebp
or
push
jmp
push
fwait
out
or
cmp
sbb
sbb
push
lods
xchg
sub
in
enter
add
ror
out
xchg
jne
repnz
jne
xchg
and
sub
rcrb
arpl
mov
mov
xorb
ja
cmc
cmp
cmp
data16
cmp
test
xchg
pop
push
xor
cs
jno
mov
sarb
pop
shlb
stos
push
mov
add
jle
ss
push
jmp
out
pop
pop
adc
pop
dec
pop
rcr
add
outsl
out
xchg
out
mov
test
test
jnp
gs
sbbb
daa
les
call
insb
repnz
es
jp
addr16
xchg
xor
pop
push
jbe
stc
sub
lret
jb
jp
xchg
xor
mov
pop
dec
mov
pop
and
and
inc
cmp
arpl
in
cmpb
or
mov
rorb
hlt
sub
or
and
sbb
or
xor
jle
pop
xor
arpl
cmp
adc
pop
icebp
adcl
jmp
xchg
cltd
xorb
mov
scas
mov
sub
fbld
mov
or
les
xor
mov
loopne
div
stos
push
push
es
push
mov
jnp
cmp
mov
leave
dec
and
xor
or
mov
test
dec
cmpsb
cmp
sbb
jns
xor
lahf
mov
shll
loop
mov
jno
or
enter
xor
lods
adc
inc
addl
cs
lcall
cmpsl
sbb
je
mov
pop
ret
mov
ret
repnz
adc
aam
test
nop
clc
test
call
and
xchg
repz
xor
aad
xor
lcall
mov
and
mov
lea
push
pop
mov
and
mov
jecxz
push
mov
pop
mov
pop
sub
sti
cmp
add
cmc
daa
and
and
cwtl
xchg
inc
scas
pop
mov
pop
je
mov
dec
inc
push
or
xor
xchg
cmp
mov
roll
push
adc
mov
jecxz
sub
sbb
xor
mov
pop
xchg
add
xchg
mov
mov
cli
mov
add
and
andl
push
xchg
inc
jne
mov
stc
mov
cmpsb
push
pop
xor
sbb
test
and
inc
fmull
cmp
out
mov
jns
test
mov
pop
sbb
fdivp
xchg
mov
mov
mov
ret
lahf
repz
les
enter
push
fbld
fwait
pop
or
popf
movsb
xor
dec
and
xlat
lret
mov
faddp
sbb
xchg
mov
shlb
insl
sahf
push
xchg
jmp
xor
and
loop
and
fdivrs
mov
cs
mov
mov
push
fld
inc
mov
and
mov
or
scas
push
xorl
xchg
sub
or
cli
fwait
lock
hlt
jmp
add
xchg
push
stos
xchg
inc
ss
ja
push
pop
or
sbb
mov
sbb
xchg
stc
shlb
scas
mov
loopne
test
cmp
and
mov
sub
jbe
jnp
inc
lret
imul
inc
adc
lret
das
sub
movsl
ret
adc
mov
shll
xchg
push
cmpsl
jno
lea
jnp
ljmp
test
inc
das
cmc
orl
dec
shlb
aaa
cmpsl
add
adc
cs
jno
inc
cmp
or
and
sbb
dec
repnz
outsl
call
cmp
mov
addr16
push
test
adc
out
adc
bound
mov
lret
pop
add
sub
add
mov
test
lret
int3
xor
add
sbbl
mov
daa
mov
pop
stos
ds
mov
mov
xor
dec
mov
stos
inc
inc
repnz
test
mov
sbb
or
es
mov
or
xor
mov
xor
dec
imull
add
mov
bnd
sbbl
or
adc
push
xchg
lock
add
mov
pusha
pop
jo
ret
jl
lea
push
lock
sbb
xchg
loopne
cmp
loopne
ds
mov
and
stos
add
pop
fmull
mov
mov
lea
xchg
dec
fdivrp
nop
and
push
pushf
push
test
sbb
jle
jne
ret
cmpsl
mov
xchg
sub
jns
enter
je
add
popf
clc
ret
lods
mov
nop
popa
imul
lock
cltd
repz
js
je
cmp
pop
out
sub
in
add
pop
inc
stos
sbb
mov
outsl
add
es
xor
adc
iret
lret
stc
bound
xor
into
cmp
aad
push
xchg
pusha
cmp
daa
or
inc
imul
jmp
xor
sbb
sbb
sub
lds
xor
fcmovbe
shll
out
jb
insl
xchg
cmp
popa
sub
aam
fadds
addl
nop
mov
mov
std
lret
adc
dec
lret
push
enter
jp
xchg
fwait
pop
sbb
data16
and
or
scas
imul
xchg
mov
or
outsb
cltd
pop
cltd
and
cmp
aad
jl
rorb
cmp
add
jb
mov
rorb
adc
add
jl
inc
mov
mov
sbb
pop
inc
sub
push
cmp
ss
xor
jb
js
mov
pop
nop
push
imull
loop
sahf
sarl
and
mov
xchg
cmpsl
xacquire
pop
es
push
pop
inc
fisttps
push
xchg
pop
jns
outsb
mov
xor
bound
mov
int
mov
pop
push
scas
inc
aad
and
std
sbb
js
iret
dec
pop
test
ja
adc
cltd
loopne
pop
aas
mov
xchg
pusha
clc
fsubp
sub
or
xchg
icebp
loopne
loopne
outsl
lds
daa
jno
sub
aam
jmp
pop
mov
mov
leave
fisttpl
scas
xor
nop
and
mov
js
and
cmp
cmp
insb
and
sub
pop
push
adc
dec
add
repz
adc
mov
sbb
push
dec
imul
ds
jne
mov
push
cmp
lret
into
xchg
icebp
sub
add
popa
xor
cmp
mov
push
mov
jle
pop
or
out
mov
adcb
cmp
and
mov
cmp
jne
mov
dec
xchg
out
xor
mov
xchg
jmp
nop
inc
lea
lods
cwtl
add
and
lea
jecxz
leave
ret
jg
in
mov
and
mov
dec
push
shll
orb
es
iret
xchg
bnd
adc
icebp
cmp
mov
cmp
sbb
leave
dec
cmc
in
mov
inc
insb
dec
inc
xor
shrb
pop
mov
mov
xchg
pop
call
and
aaa
iret
adc
pop
inc
into
arpl
sbb
jp
test
adc
dec
mov
data16
ret
xchg
stos
cli
stos
gs
dec
xor
idivb
lock
shlb
inc
btc
lret
repz
mov
loope
nop
inc
dec
xor
addr16
mov
pop
inc
mov
and
adc
movsl
ss
divl
push
pop
hlt
inc
addr16
and
rcrb
and
adc
mov
mov
sub
ja
push
clc
jg
xor
sbb
nop
jl
and
push
pop
je
fildl
xor
shll
int
setb
aam
rcll
cltd
xor
sbb
stc
ljmp
push
mov
sahf
sub
mov
sbb
cwtl
in
popa
loope
mov
and
pop
gs
push
inc
add
rol
mov
dec
test
in
pusha
je
aaa
push
jmp
ficoml
daa
adc
leave
dec
fldl
and
addl
mov
or
mov
sub
pop
xchg
xchg
rcr
insl
int3
aas
out
xchg
and
and
jge
push
fs
xor
jne,pt
mov
lea
test
dec
adcb
fcompl
xchg
xchg
repnz
or
ret
add
mov
subl
xchg
js
mov
push
sysret
adcl
sarl
cltd
sbb
out
inc
loop
add
sbb
mov
xchg
pop
mov
or
faddl
int3
xchg
dec
je
inc
push
sub
imul
frstor
mov
cli
addb
rcll
popf
js
sbb
xchg
out
pop
cli
sub
jns
pop
sbb
jl
pop
pusha
enter
xor
lret
mov
sti
cli
or
sbb
mov
pusha
icebp
push
mov
jnp
daa
shlb
inc
jecxz
les
xchg
pop
and
test
aaa
xchg
or
add
add
test
mov
xor
mov
or
fwait
jl
syscall
mov
sarl
sbb
dec
aad
test
out
xor
dec
cli
rol
sbb
sbbl
fcom
adc
ds
dec
dec
or
sbb
jge
repnz
and
dec
add
arpl
mov
sbb
loopne
mov
push
das
flds
js
in
fmulp
adc
mov
add
cli
roll
inc
hlt
movsb
subl
adc
add
lock
mov
hlt
pop
repnz
dec
push
add
push
ret
sub
add
cli
rol
inc
cli
mov
mov
sahf
cmp
cmp
or
hlt
daa
out
sbb
mov
jb
popf
xchg
xchg
cmp
es
call
push
adc
mov
insb
dec
je
out
lds
mov
lea
jne
pop
xchg
scas
and
pop
loop
adc
out
mov
movsl
fs
loopne
mov
xchg
jnp
icebp
ds
mov
xor
rolb
out
and
lods
into
and
adc
sub
inc
sbb
andl
mov
or
mov
pushf
or
xchg
call
or
lahf
int3
inc
subl
mov
push
leave
pop
fsubrp
and
adc
push
mov
xor
xor
lcall
sbb
push
mov
loopne
jl
faddp
aaa
inc
gs
cmp
lcall
jle
jne
mov
sbb
jecxz
cli
std
pushf
mov
or
shll
add
rolb
xchg
push
bound
adc
dec
inc
dec
data16
mov
cwtl
test
inc
icebp
push
int
push
das
rorl
adc
xchg
xorb
daa
cmp
arpl
out
add
jnp
pop
lea
xchg
push
cltd
int
fisubl
ds
out
xchg
stos
cmp
sbb
insb
dec
inc
xor
popf
leave
jo
inc
outsb
mov
dec
shlb
mov
enter
out
fcom
xlat
divl
xchg
shlb
repz
sbb
dec
fildll
cwtl
pop
xor
adc
mov
push
dec
cmp
inc
mov
mov
pop
mov
daa
scas
int
daa
call
test
lods
pop
shlb
mov
in
push
pop
mov
movsb
rorl
mov
pop
sbb
push
loope
dec
out
mov
sbb
scas
push
mov
in
mov
cmp
adc
dec
xlat
pushl
stos
pop
mov
mov
cmpsb
push
add
xchg
hlt
sub
and
xchg
aad
cmp
outsl
mov
int3
test
cld
cld
les
aad
sub
in
jl
sbb
cmp
add
aad
xchg
stc
jl
les
in
or
inc
add
adc
addr16
mov
enter
dec
shll
push
cmp
call
and
or
push
daa
push
mov
xchg
movsb
popa
subl
xchg
sti
adc
jge
dec
pop
ljmp
popa
push
add
fistpll
pop
enter
sarb
mov
lods
jmp
data16
push
jle
or
cmp
mov
xchg
xor
push
orb
enter
xchg
cmp
mov
adc
add
cltd
sbbl
icebp
popa
mov
xor
fst
hlt
lods
dec
scas
dec
je
adc
dec
cwtl
xchg
inc
mov
ljmp
xchg
mov
pop
fimuls
jbe
dec
sub
popf
mov
add
iret
shl
in
pop
das
sub
in
insb
mov
and
fiaddl
fidivl
mov
addr16
jne
jl
ret
fsubs
sbb
loop
or
out
sub
das
insl
inc
jmp
loop
push
pop
movsl
out
mov
or
mov
xchg
push
adcb
jb
mov
inc
stos
loop
es
call
push
cwtl
pop
imul
xchg
pop
fmull
push
fwait
test
aas
pop
shll
xchg
jmp
sbb
adc
or
pop
out
dec
jle
icebp
loope
cmp
test
insb
xor
mov
scas
loop
divps
popf
cs
mov
stos
xor
jne
fstl
add
sbb
xor
sub
push
in
ret
xchg
pop
cmp
pushf
insl
outsb
outsb
fucomi
outsb
bound
mov
add
or
fcomi
insl
arpl
out
lahf
sbb
adc
dec
shlb
add
and
in
enter
aas
shll
sahf
push
test
ljmp
mov
test
sub
dec
cmp
adc
jmp
mov
or
mov
and
or
movsb
arpl
add
stos
xor
pop
xor
popa
inc
lds
sub
add
shl
cmp
xor
hlt
cli
add
cmp
stos
and
in
shrb
push
cmp
adcb
xor
test
test
arpl
cmc
xor
mov
cmp
and
push
mov
sub
ret
enter
sbb
mov
cmp
jp
stc
das
in
and
xchg
pop
pop
fldcw
pop
or
jl
popf
lret
fwait
jb
inc
rcll
adc
sbb
push
sahf
inc
sbb
scas
enter
call
rcrl
movsb
add
sti
adc
lret
or
dec
jg
divl
xchg
xorb
repnz
shlb
in
pop
mov
rorb
cmp
cmc
fbld
push
xchg
out
adc
cwtl
mov
inc
adc
outsb
cmp
test
add
lods
mov
iret
enter
test
dec
cmp
enter
movsb
loop
lods
mov
push
das
rcl
jl
arpl
sub
lds
push
test
xorl
adc
dec
das
mov
mov
cmc
scas
insl
or
lret
mov
dec
xor
add
push
jae
mov
pop
inc
fadds
mov
ret
or
cs
and
mov
adc
mov
dec
cld
ds
dec
xlat
imul
push
mov
shrb
inc
xchg
xor
jo
jp
icebp
add
fisubl
push
dec
mov
imull
mov
sbbb
add
shl
jg
push
in
insb
inc
repz
add
mov
mov
inc
loopne
fdivs
xadd
pop
or
stc
push
sub
loop
jne
iret
dec
add
movsb
xchg
outsl
xchg
insb
fcoml
sbb
inc
push
mulb
sub
inc
jns
imul
push
pop
lcall
adc
or
push
dec
movsl
data16
dec
jno
lods
repnz
popf
lea
push
pop
and
cmp
or
leave
repz
push
into
jae
jnp
insb
lods
or
outsl
or
adc
testb
push
notl
rorl
ret
mov
xchg
das
dec
push
or
xor
fcompl
movsb
rcll
mov
or
test
add
cmpsb
xor
mov
sarl
lret
and
or
xor
xor
push
dec
inc
out
dec
leave
mov
xorl
or
sub
imul
je
dec
adc
push
loopne
push
mov
pop
leave
iret
les
test
cmp
pushf
push
out
mov
dec
push
sbb
clc
jb
lds
sbb
cmpsb
test
mov
jecxz
pop
icebp
stos
hlt
sub
push
insb
mov
dec
je
adc
loopne
jb
dec
xor
push
sbb
jg
rolb
test
loope
and
inc
lret
inc
jmp
loope
cwtl
rcr
hlt
test
mov
jle
rclb
jno
int3
lcall
mov
or
fistl
test
or
cli
push
out
scas
movsb
testl
mov
int
push
sbb
and
shrb
sub
rcl
fildll
or
add
adc
push
pop
and
pop
std
cmp
mov
sbb
sub
cmp
dec
sbb
xchg
inc
ret
test
pop
jp
test
inc
movsl
jp
jo
popf
xchg
inc
shll
rclb
mov
pop
arpl
icebp
into
sarl
push
arpl
lock
mov
add
jno
jbe
scas
enter
mov
jbe
icebp
sub
fsubs
or
ror
mov
adc
and
movsb
and
mov
shlb
jg
jbe
adc
movsb
inc
lcall
pop
dec
lock
int3
das
push
clc
stos
test
mov
mov
mov
adc
js
add
ja,pn
xlat
cltd
mov
pop
sub
rcrl
push
ret
movaps
inc
rorl
xorl
mov
jp
aam
repz
addr16
insl
cmp
dec
push
sub
sahf
js
inc
lcall
mov
dec
mov
dec
mov
out
pop
int3
stos
stc
xor
pop
or
inc
inc
cmp
data16
inc
push
pop
jecxz
add
loop
daa
xor
mov
push
jno
and
cld
and
mov
and
mov
xchg
adc
mov
ret
mov
pop
ss
lahf
mov
cmp
loope
loopne
lods
sbb
daa
add
testb
sub
enter
sbb
test
jno
xor
mov
adc
mov
imul
jmp
repnz
xor
sub
ja
aam
fwait
shll
inc
inc
test
xor
inc
js
push
out
call
jno
xchg
ljmp
mov
mov
push
inc
sbb
sub
sti
fwait
mov
mov
pop
ja
add
arpl
scas
icebp
test
lods
and
xor
pop
clc
xchg
outsb
push
out
test
cmp
dec
test
loopne
adc
add
cmp
push
loop
test
ja
mov
lea
subl
lock
sub
arpl
mov
dec
xor
dec
dec
xchg
lock
rcrb
lret
jns
mov
loope
inc
pop
lcall
jae
arpl
and
inc
shrb
or
shlb
mov
or
jl
xor
or
push
insb
push
rolw
out
or
jl
sbb
into
xor
insb
cmp
test
jmp
mov
mov
pop
iret
cmovle
cmp
test
loopne
sub
scas
ror
fucomi
enter
repnz
daa
andb
aas
xchg
mov
inc
pop
sahf
push
dec
push
or
lahf
sub
scas
hlt
pop
insl
test
pop
jb
les
push
sti
pop
mov
jecxz
xchg
cmp
int
jecxz
jbe
inc
push
aam
rclb
popf
icebp
cmp
sbb
and
jmp
andb
cld
push
cmc
cmp
push
and
and
pop
pop
jno
jge
in
push
dec
dec
jl
dec
pop
fldenv
testl
test
push
adc
sub
fbld
stos
inc
mov
mov
mov
cli
pop
cwtl
xchg
mov
mov
or
sbb
cs
add
and
add
sbb
push
inc
shlb
fisubs
popf
cmp
arpl
movsb
pop
add
mov
out
or
mov
into
push
mov
or
test
int3
out
insb
xchg
in
inc
sub
adc
inc
sbb
dec
cmp
xchg
add
or
mov
fistpll
roll
mov
fmuls
sbb
addr16
push
pop
mov
nop
loopne
mov
dec
jo
dec
jno
push
pop
mov
ljmp
push
pusha
std
dec
and
add
xchg
scas
xchg
insl
fsubrs
ffreep
mov
pop
lods
daa
rorb
mov
xchg
and
push
push
or
xor
cmpsb
xor
rorl
out
lahf
int3
xor
es
jbe
mov
push
cmp
ret
ret
and
inc
sahf
das
jnp
inc
adc
stos
int3
or
adc
dec
add
idivl
xchg
hlt
and
mov
adc
lock
xlat
and
xor
icebp
test
jb
mov
js
lds
fcoml
lahf
or
movsb
stc
mov
sub
popf
xor
cmp
ror
push
pop
divl
loop
push
pop
and
nopl
add
push
aad
add
sub
daa
and
sbb
push
orb
xchg
jl
test
xlat
mov
jae
push
or
add
sti
movsb
popf
insb
aam
stos
imulb
sbb
xchg
test
push
jno
enter
add
xor
sbb
mov
dec
test
jge
mov
leave
add
pusha
jno
xor
pop
pop
ja
dec
dec
jmp
pusha
nop
es
mov
xor
sbb
sub
cli
or
sbb
mov
cmpsb
mov
push
inc
hlt
mov
sahf
cmp
jae
xor
pushl
filds
mov
mov
test
clc
add
or
aam
mov
aad
imul
mov
and
in
sbb
stos
cmp
or
loope
in
push
jnp
dec
sub
xor
or
ljmp
pop
dec
dec
mov
or
jge
cmc
jecxz
dec
lcall
nop
mov
xchg
mov
les
nop
aaa
adcl
jns
xchg
adc
sub
or
mov
aam
xchg
sbb
xchg
adc
add
push
into
clc
fcmovb
pop
sbb
adc
cmp
loope,pt
lds
hlt
mov
mov
pop
mov
jns
and
nop
xchg
cltd
mov
and
jo
sub
cmp
ja
in
cmp
loopne
icebp
dec
daa
dec
scas
xor
jno
pushf
jl
mov
pop
add
pop
mov
jne
imul
or
sbb
mov
mov
data16
fsubrp
cwtl
jl
pop
push
ret
jnp
xchg
sbb
sahf
sub
sbb
sti
fwait
sbb
test
mov
push
cmp
or
loop
xor
stos
jecxz
xor
aas
aad
lea
xchg
mov
shll
sbb
pushf
call
and
ret
pop
roll
fs
aad
stos
clc
push
lea
and
xchg
cmpsl
fstps
cmpsl
es
lea
arpl
js
enter
sbb
loope
lcall
push
leave
push
mov
rcr
lock
pop
jle
sbb
cmp
push
xchg
add
push
sysexit
mov
in
jno
pop
popa
nop
aad
imul
push
lock
rolb
mov
cmpsb
repz
je
pop
mov
in
pop
loop
jae
ret
stc
push
sub
outsl
inc
pop
and
ds
pop
push
jno
add
and
inc
in
sub
inc
in
mov
imul
cmpsb
push
and
orb
lret
aas
push
jl
pop
dec
dec
mov
push
fldcw
mov
pop
adc
add
dec
out
lds
add
xor
lahf
xchg
sahf
cmp
mov
lods
jge
sbb
lods
dec
sub
pop
test
inc
xchg
out
sub
bound
jo
mov
push
jge
pop
pop
sbb
or
scas
push
lods
rorl
add
mov
into
loope
lcall
pop
cmp
sub
cmc
lea
test
insl
stc
mov
shlb
inc
add
xchg
aam
cmpsl
sbb
aas
inc
xor
jl
arpl
or
clc
or
sbb
popa
cmp
icebp
xchg
icebp
add
bound
adc
mov
xchg
push
mov
outsl
test
fnstcw
jno
sub
adc
out
and
into
scas
fsubs
or
adc
xor
jb
int3
popf
dec
inc
adc
iret
or
dec
iret
sbb
add
push
paddsw
bound
lahf
daa
dec
or
jmp
cwtl
fcomps
rcr
and
cltd
dec
cltd
insl
mov
iret
push
sahf
lock
push
sahf
xchg
int3
enter
popf
and
jecxz
lea
test
div
push
call
inc
shll
cli
or
insb
iret
outsb
loope
gs
jp
cli
gs
xchg
sub
rolb
mov
jo
out
push
add
pop
ds
pop
push
lcall
pop
stos
or
and
pusha
jo
xchg
inc
cmpsb
and
push
push
mov
fadds
sbb
mov
nop
add
push
add
mov
mov
into
fimull
nop
or
sub
push
aas
lcall
xchg
jae
fldcw
ret
enter
xor
inc
mov
push
loope
push
rcll
sahf
xor
and
insb
xor
jnp
mov
mov
pusha
sbb
rolb
and
push
or
sahf
push
out
lret
mov
ret
xchg
push
xor
cmp
and
mov
ret
dec
push
xor
in
test
mov
inc
insl
rolb
je
push
and
dec
out
loop
mov
les
test
sub
pop
jne
push
dec
imul
mov
sbb
lods
insb
push
ss
ret
icebp
dec
sub
xor
add
pop
ljmp
shr
addr16
fs
pop
dec
sahf
xchg
inc
adc
push
mov
jmp
aad
mov
insb
adc
push
mov
ljmp
inc
int
mov
ret
jecxz
std
sub
adc
add
push
sub
xchg
out
or
mov
fs
dec
icebp
push
mov
xchg
pop
adc
push
and
inc
adc
and
dec
xor
adc
mov
pop
mov
hlt
cmp
inc
or
hlt
sbb
imul
mov
and
stos
loopne
cmp
xchg
mov
push
loope
mov
shlb
pop
mov
lock
pop
jecxz
sbb
sbb
xchg
lock
cmp
mov
push
aaa
mov
jp
mov
ja
mov
das
mov
cs
xchg
dec
outsl
test
jbe
cmc
mov
pop
icebp
jecxz
push
fwait
sbb
lcall
lahf
pop
stos
pop
dec
mov
lret
mov
adc
pop
or
lret
push
push
mov
add
fs
xchg
popa
adc
sar
xchg
sub
in
dec
xor
lods
sbb
scas
cmp
fmuls
or
push
pop
shr
jmp
adc
xlat
out
jo
mov
push
out
lea
xor
add
loop
and
outsb
testb
iret
inc
insl
add
xor
pop
inc
inc
jg
mov
pushf
xchg
cmp
dec
dec
mov
push
stos
push
mov
jecxz
mov
cli
adcl
stos
pop
adc
dec
addr16
addr16
sti
lret
sbb
or
jo
jbe
test
xor
xor
jb
xchg
cmp
loopne
and
or
sub
rol
hlt
inc
add
dec
push
inc
fstpt
mov
cmpl
jge
mov
mov
scas
and
pushf
test
movsb
xchg
xchg
xor
sbb
add
pop
mov
push
mov
scas
fcomps
rorb
repnz
rcrl
ljmp
movsl
pop
push
and
jb
repz
or
addb
mov
or
cmp
je
jne
pop
or
add
ss
stos
stos
shl
inc
inc
out
or
je
hlt
ss
sub
pop
or
adc
or
dec
icebp
test
pop
mov
cmp
test
loope
push
fdivl
shrl
sbb
dec
aad
bound
subl
daa
pop
xchg
mov
pusha
mov
roll
les
testl
inc
dec
repz
out
mov
jae
adc
xor
pop
std
out
jl
scas
pusha
push
jl
sbb
xlat
cmpsl
xchg
out
lock
adc
dec
loop
or
and
dec
shrb
xchg
pop
fadds
mov
push
xchg
adc
out
sub
test
js
inc
xchg
sbb
fists
nop
subb
xlat
push
push
aam
loope
ret
aam
and
test
les
stos
inc
insl
adc
addb
jge
popf
sub
insl
shl
pop
lcall
push
pop
add
mov
lock
pop
xchg
xor
pop
push
fsts
sbb
or
ss
cmpsb
add
loopne
cltd
pop
dec
pop
flds
mov
cld
cmc
cmp
add
lods
repz
or
cmp
lods
fldl
adc
adc
arpl
cmpsl
bound
ficoms
out
xor
ss
xor
mov
sub
mov
loopne
or
and
inc
outsb
sarl
mov
daa
or
flds
push
shlb
add
and
and
inc
shll
mov
dec
stc
ljmp
xor
push
cmp
pop
fists
mov
out
xchg
loopne
arpl
jno
pop
mov
inc
cmp
mov
dec
jns
sbb
clc
jp
pop
or
inc
ret
inc
mov
jp
dec
hlt
xor
lahf
lret
loope
dec
and
adc
mov
pop
add
or
je
and
jecxz
jb
inc
cmp
out
mov
or
test
daa
dec
mov
xchg
test
mov
mov
and
in
je
mov
cmpsl
dec
out
fimuls
addr16
jecxz
or
scas
das
push
mov
shrl
cmpsb
sub
or
inc
push
mov
push
ret
outsl
add
pop
pop
or
mov
movsb
js
push
outsl
clc
int
xchg
push
adc
add
int
cmp
jecxz
pop
push
shll
js
sbb
pop
cmc
repnz
mov
orb
adc
or
ret
adc
and
lds
sub
mov
sbb
daa
loop
ret
push
fisttpll
fwait
mov
push
sub
inc
cmp
icebp
add
stos
push
js
ljmp
or
nop
dec
jb
mov
xor
or
mov
adc
repz
xor
hlt
cmp
and
out
push
hlt
xor
jecxz
jnp
push
ljmp
dec
pop
addr16
pusha
sbb
lods
lcall
loop
and
mov
dec
mov
icebp
or
call
je
inc
add
in
jnp
insb
sub
rcl
xchg
pop
arpl
mov
clc
movsb
ja,pt
xchg
xlat
cmp
in
adc
xchg
pop
jecxz
fdivl
andb
mov
movsb
ljmp
inc
dec
insl
push
push
lods
xor
xor
adc
mov
es
popf
repz
stc
push
mov
or
adc
fcoml
out
inc
dec
es
sbb
popa
or
xor
mov
push
or
sub
popf
xor
lock
add
push
and
cmp
fs
mov
cmp
cmpsl
fdivr
pop
jo
pop
inc
repnz
jecxz
or
inc
test
xchg
push
pop
jg
jbe
pushf
orl
aad
sbb
mov
int3
push
pop
jae
lds
nopl
sub
and
xchg
adc
push
adc
cmp
mov
out
xor
lahf
rcll
sarl
ljmp
inc
adc
lods
inc
mov
int
setl
out
and
test
ret
jne
and
nop
sbb
lret
test
mov
bound
mov
lret
add
lret
in
inc
fnstenv
jp
scas
incl
lea
mov
aam
or
ret
adc
mov
cmpsb
outsl
and
inc
clc
mov
popf
adc
test
mov
mov
sbb
hlt
lea
ss
and
fwait
mov
lock
loope
sbb
sti
es
sbb
pushf
mov
pop
inc
sahf
cwtl
xor
jnp
inc
nop
lea
lea
out
movsl
push
stc
sbb
and
arpl
jg
xchg
dec
das
pusha
nop
js
sbb
cs
testb
into
mov
cmp
xchg
push
lds
arpl
adc
cwtl
arpl
sahf
sbb
cltd
add
cmp
dec
mov
xchg
scas
jle
in
and
inc
addr16
add
jbe
fnsave
and
push
movsl
in
lods
fcmovb
and
xlat
dec
loopne
icebp
sarl
in
call
adc
sbb
lods
cmp
jne
push
lods
hlt
lock
lock
fsubrl
mov
lock
lahf
jg
push
sbb
xchg
mov
negb
popf
shl
jge
fadds
rorb
int
ret
shrb
add
test
jne
pop
inc
add
or
ja
adc
int3
jns
cwtl
jo
xchg
ds
in
ficompl
ds
xchg
dec
xlat
in
hlt
mov
pop
out
ljmp
pop
mov
adc
jo
outsb
mov
movsb
xor
lret
mov
sbb
mov
cmp
jne
or
dec
jecxz
mov
mov
arpl
movsb
inc
ror
inc
rol
into
filds
jl
ss
pop
cli
and
lods
fdivs
jno
rorl
lods
jle
mov
popa
mov
dec
sub
sbb
and
bound
mov
adc
jns
icebp
cmc
test
mov
idivl
xchg
divps
cltd
dec
icebp
out
cmp
fisubl
xchg
test
xor
nop
outsb
mov
je
es
cs
adc
mov
popf
push
xchg
xchg
jnp
mov
inc
and
fisubrl
fs
cwtl
iret
sub
jns
mov
cmp
cmc
jne
in
xchg
leave
and
lods
push
jne
push
sbbl
or
sbb
xor
jl
lea
test
loopne
xor
xchg
ds
dec
addr16
cs
or
mov
shlb
jp
xchg
mov
pop
push
je
test
add
inc
add
sbb
jge
lods
cmp
inc
lcall
pushf
sbb
in
sahf
jmp
sub
stos
adc
dec
cli
cli
jno
adc
sbb
and
xchg
insb
les
aam
enter
lds
cmc
sbb
fcmovbe
push
adc
push
lds
jge
xor
mov
cli
adc
cmp
or
loope
adc
inc
xor
xor
push
loop
mov
cmp
imul
mov
cmp
push
pop
rclb
or
icebp
mov
divl
mov
inc
or
lret
pop
aaa
pushf
jno
popf
mov
xchg
or
add
inc
daa
aad
ret
in
inc
cmp
test
rorb
insl
pop
jo
mov
sub
pop
jp
jnp
aam
cmp
mov
sub
adc
or
push
cmc
mov
or
arpl
xchg
mov
jmp
insl
mov
inc
daa
mov
push
adc
shll
xchg
or
lea
add
data16
sbb
jle
gs
or
sbb
xor
pop
mov
icebp
loope
add
mov
xor
or
push
fucom
dec
mov
push
adc
cmp
loopne
fnstcw
and
adc
sbb
loope
sbb
shrl
lcall
cmp
sbb
jbe
scas
repz
fs
test
bswap
xor
and
push
in
push
or
mov
out
js
xchg
inc
xor
ret
leave
push
xchg
imul
call
jno
sti
add
and
pop
xorb
adc
add
in
popa
nop
push
jo
pop
addl
fidivrl
scas
cmp
in
jge
mov
mov
and
ficomps
mov
lds
lret
mov
leave
sub
jb
xchg
xor
xor
inc
pop
sbb
mov
test
xor
adc
jno
pop
mov
or
sbb
push
cli
sub
aam
movsb
hlt
in
mov
loope
leave
pushl
lahf
lea
js
jb
mov
data16
xor
pop
lods
sbb
gs
imul
push
rorb
dec
push
out
pop
and
std
dec
test
adc
lds
adc
dec
mov
ljmp
or
adc
adc
iret
loopne
out
sub
outsb
enter
imulb
mov
sbb
arpl
movl
jmp
jbe
cmp
inc
jo
add
es
push
es
jecxz
cmp
dec
adc
enter
fidivl
dec
and
and
bound
cmp
dec
mov
jne
fisttps
push
fwait
pop
daa
pop
jp
push
pop
mov
lcall
inc
cmp
and
mov
cltd
and
mov
mov
mov
mov
cs
lock
mov
xor
adc
adc
xor
adcb
adc
or
idivb
mov
or
movsl
test
ret
sbb
mov
fs
xor
sbb
pop
or
inc
mov
mov
rclb
int3
add
mov
in
lahf
stc
lods
push
mov
ret
jns
and
mov
inc
lds
pop
sbb
ficoml
ljmp
or
repnz
dec
sahf
stos
lcall
lock
push
and
mov
dec
lock
sbb
mov
pop
inc
or
mov
pusha
orb
xchg
lret
sbb
outsb
xor
jne
data16
hlt
cmp
subl
ja
sbb
lahf
leave
outsl
cmpsb
mov
jp
arpl
aad
cs
dec
rclb
mov
xchg
dec
cmp
add
aaa
andl
ljmp
imul
sbb
adc
jne
sahf
xchg
add
dec
xor
addr16
cmp
shlb
and
ljmp
cmp
lahf
insl
mov
dec
clc
je
and
cltd
nop
push
lahf
add
loope
mov
and
idivl
push
or
iret
clc
dec
mov
lea
add
xor
jg
and
inc
cmp
xchg
jl
fbstp
loopne
pop
mov
repz
test
pusha
jl
xor
fildl
sub
outsb
lods
fisttpl
inc
pop
dec
add
ljmp
pushf
and
rolb
in
mov
negb
cmpsl
enter
pop
or
ja
inc
lret
loop
mov
xchg
jb
cli
loopne
mov
aas
mov
xchg
pop
push
inc
out
xor
adc
and
aam
lret
jl
pop
fdivrs
and
xor
aad
fadd
je
aaa
jmp
adc
fwait
sbb
and
out
jae
and
pop
mov
mov
sub
dec
inc
or
in
jo
shlb
pusha
mov
sub
mov
and
hlt
loope
dec
jb
and
sahf
popa
rorb
bound
adc
movsb
push
adc
dec
arpl
lret
loopne
xchg
stc
sbb
pusha
push
sbbl
rclb
insb
inc
fldl
jp
imul
aaa
cmp
mov
fxch
cmp
jge
adc
sahf
fnsave
adc
popl
pop
mov
mov
sarl
test
cmp
dec
dec
mov
add
shlb
orl
shll
gs
repz
fidivs
into
insb
in
add
je
mov
leave
or
lock
mov
es
lret
push
rcrl
sbb
and
loopne
add
shr
xchg
xchg
shrl
lret
les
push
das
mov
dec
into
or
and
lcall
in
add
mov
jmp
outsb
test
int3
adc
push
adc
pop
inc
paddw
pop
je
in
add
pop
adc
nop
jmp
xchg
into
in
jnp
mov
mov
sub
rolb
xor
clc
inc
xchg
dec
testl
xor
and
pop
int
add
push
iret
outsl
addr16
insb
adc
adcl
test
into
mov
ja
sbb
pushf
inc
insb
jne
inc
mov
ds
das
fdivr
sub
jbe
dec
pop
jmp
sbb
dec
lock
add
dec
push
xor
cmp
mov
mov
inc
push
sti
iret
jl
jo
clc
insb
push
sahf
loop
addr16
loopne
cmp
and
cmp
out
in
add
or
loope
jp
dec
pop
adc
jo
pop
fcomip
inc
mov
cmp
clc
daa
fwait
jae
dec
or
jno
inc
ss
mov
xchg
add
lods
aam
mov
fadd
xor
data16
movsb
out
aad
push
out
scas
in
insb
int3
inc
ds
outsl
adc
adc
sbbb
sahf
adc
cmp
sbb
enter
test
jb
adcl
inc
mov
mov
in
mov
fistpll
push
icebp
adc
test
shlb
je
outsl
mov
cmp
push
pop
popf
or
js
cltd
and
mov
xor
sub
jle
daa
xor
push
add
loope
sbb
inc
ds
fs
xor
mov
loop
cmp
xchg
data16
test
mov
pop
mov
roll
cmp
push
and
jnp
loopne
dec
scas
es
stos
inc
outsb
mov
add
clc
push
daa
setbe
xor
inc
sahf
mov
or
sbb
or
int3
shll
arpl
inc
sbb
inc
push
and
pop
sbb
mov
cli
xor
icebp
stos
imul
push
xor
cmp
gs
les
mov
orl
add
add
inc
jb
aas
jp
and
adc
test
inc
addb
sbb
ds
push
pop
mov
adc
and
sar
adc
shll
or
sbb
inc
addl
mov
dec
insb
test
in
insb
pop
jle
xor
pushf
inc
mov
mov
cmp
pushf
ds
outsb
xlat
rolb
jnp
shlb
lods
sbb
mov
fbld
pop
loopne
sub
aas
inc
add
dec
pop
out
add
ds
jmp
inc
in
ja
int3
lods
mov
or
push
stos
push
dec
cwtl
xchg
jp
adc
bound
pusha
sbb
sbb
imul
out
lock
lahf
sbb
in
cmc
stos
push
faddl
inc
mov
ljmp
je
std
cmp
inc
fsubrl
clc
mov
aad
loopne
sbb
xchg
pop
cmpl
xchg
in
nop
sub
pop
mov
cli
ret
sub
and
mov
ljmp
sbb
jle
negb
add
dec
fildll
hlt
popf
sub
add
sub
mov
repz
sub
mov
or
pop
jo
icebp
addr16
int
das
push
aas
arpl
mov
push
repz
jmp
pop
push
cmp
sbb
out
adc
mov
inc
jecxz
and
and
or
lret
add
outsl
cmp
test
stos
or
xor
movl
or
pop
mov
mov
lret
orb
stos
and
cmp
pop
or
mov
sahf
fcompl
loope
lods
sub
xchg
cmpsb
jl
push
add
mov
pop
mov
scas
popl
sbbl
and
cmp
out
add
pop
jl
movb
cwtl
popf
xlat
loopne
add
jmp
jmp
adc
repz
jl
and
cmp
stc
iret
mov
js
and
loop
inc
les
sbb
jo
add
testl
cwtl
adc
mov
dec
in
mov
xor
daa
push
aam
push
shrb
inc
dec
add
movsb
or
in
mov
xchg
ljmp
mov
sub
or
and
sbb
inc
xor
adc
adc
js
mov
jnp
insb
dec
or
xchg
push
call
dec
or
lds
les
sub
jge
movsl
cltd
add
bound
and
mov
push
push
or
insl
fcomp
in
pop
fnstsw
cmp
aaa
sbb
cmp
cmp
sbb
aad
inc
stos
sarb
adc
out
and
push
popa
sbb
test
mov
ss
insb
jae
movsl
mov
pop
fadds
flds
add
jo
movsb
or
fistps
inc
inc
xchg
cmpsl
xchg
mov
mov
hlt
dec
mov
hlt
mov
or
sbb
lea
and
inc
add
iret
js
cmp
es
push
or
shrb
push
pusha
lock
jbe
xchg
lretw
andb
insb
bound
dec
dec
push
out
inc
pusha
and
push
into
mov
and
fcoml
sub
les
stc
push
lds
mov
sarl
jmp
jmp
xchg
lds
out
add
mov
jbe
cmp
arpl
ret
sub
jnp
cld
jb
dec
shl
adc
icebp
test
stos
push
xchg
fucomp
sbb
add
lock
xchg
inc
cmp
loop
jle
xor
pop
push
mov
out
jae
lret
or
pop
sti
shrb
xchg
ficoml
daa
pop
adc
cmp
or
pop
push
inc
cwtl
aaa
or
xchg
adc
outsl
test
sbbb
pop
leave
in
sub
out
xchg
jne
push
jns
cltd
jb
daa
xor
in
mov
andl
test
push
aad
cmpl
xlat
out
loope
sbb
dec
outsl
adcb
call
mov
pushf
push
lahf
popl
add
jb
jbe
inc
push
xor
sahf
fs
push
lds
addr16
xor
les
arpl
inc
lock
stc
jmp
shll
jb
add
imul
arpl
pop
add
lds
arpl
in
jmp
or
sub
adc
sbb
in
xor
cmc
jae
sbb
or
loop
cs
mov
lahf
fildl
jne
ja
jno
mov
jmp
into
cmp
mov
push
add
cmp
mov
je
add
out
scas
push
jb
jmp
adc
xor
cwtl
ja
lcall
mov
sub
cwtl
xchg
and
xor
cmp
pop
push
jo
cmp
or
stos
aaa
pop
out
iret
sbb
or
add
cld
and
hlt
push
stc
adc
jns
sbb
sbb
daa
loopne
mov
add
add
daa
mov
fdivp
push
subl
dec
add
xor
iret
lods
popfw
rcrl
clc
inc
lcall
xchg
cmp
mov
popf
inc
or
inc
jmp
aas
fstp
aam
or
and
push
inc
xor
aaa
je
adc
and
mov
jnp
mov
pop
shll
pop
push
xlat
loope
pop
mov
dec
and
lods
nop
jmp
push
dec
and
popa
inc
cmp
adc
stos
les
mulb
add
sbb
pop
cmp
test
arpl
int
and
icebp
push
jecxz
ds
push
adc
inc
push
mov
sbb
shll
sbb
mov
push
inc
sbb
mov
xor
pop
int3
insl
rcll
sub
and
inc
test
push
jns
pop
ror
repz
xor
mov
and
jmp
sub
scas
repnz
add
mov
xchg
xchg
sub
je
std
test
mov
jnp
jecxz
mov
xchg
in
cld
pop
and
xchg
xor
mov
repnz
pop
push
cmp
stc
pop
clc
or
inc
dec
divl
rcl
pop
aaa
inc
arpl
loopne
push
in
je
adc
mov
in
in
ljmp
or
push
add
movsl
mov
aam
or
loopne
cmpsl
lods
dec
mov
out
sub
push
iret
push
add
cmpsl
dec
rorb
fildl
rclb
cmpsl
mov
or
sub
dec
je
adc
mov
dec
aam
loop
lods
mov
insb
fdivr
lods
mov
das
mov
scas
insl
sub
shrl
add
je
es
and
add
fstpl
or
out
pop
imul
xor
pop
push
mov
std
es
jno
and
mov
cld
cmp
push
les
and
insb
jmp
movsl
sbb
lcall
pushf
fidivrs
xchg
ja
jbe
xchg
sbb
enter
paddusb
adc
mov
sbb
or
and
dec
jl
cmpl
cmpsb
cmpsb
push
loope
ret
in
insb
rorb
loope
movsl
inc
jnp
loope
and
push
stos
cmpsl
ljmp
inc
add
adc
shrl
subb
mov
cmp
pop
fcmovnb
rcrl
lea
es
in
xlat
lret
daa
punpckhwd
rcll
movsb
inc
in
jp
test
sub
popf
repz
loope
jae
add
stc
dec
pop
enter
invd
mov
stc
clc
cwtl
jne
mov
jge
pop
outsl
in
pop
mov
xchg
divb
and
hlt
dec
jl
insl
or
gs
lret
cli
js
stos
dec
xchg
or
mov
stos
xchg
shlb
jmp
shlb
jno
shll
and
test
mov
inc
ret
hlt
add
xor
hlt
ja
ljmp
negb
andb
outsl
test
subb
mov
cld
and
call
aaa
rcrl
mov
lods
jnp
mov
xor
xchg
leave
push
add
sahf
dec
in
pop
jb
push
fidivs
mov
sbb
pop
bound
push
mov
pop
pop
push
xorl
les
or
test
dec
mov
nop
test
pop
dec
fucompp
adc
ss
cltd
push
call
pushf
jp
jb
das
insb
popa
ss
add
lods
push
cmp
cmp
xchg
movsl
loop
and
imul
push
add
mov
loope
or
jge
mov
push
jmp
pushf
and
xor
jnp
gs
and
lds
dec
insb
cmpsb
mov
cmpsb
jl
adc
jae
jo
jle
hlt
rcrb
clc
outsb
stos
orb
or
add
cmp
inc
ja
mov
ljmp
xchg
or
cmc
jge
test
arpl
jl
ss
add
cmc
dec
daa
inc
inc
dec
rolb
shlb
jb
sahf
in
cmp
loope
pop
mov
inc
nop
jb
push
inc
sbb
xchg
inc
test
ret
push
adc
pop
inc
cmp
sbb
ljmp
pop
aas
leave
wrmsr
sbb
adc
loope
fincstp
mov
xchg
xor
sub
add
push
cld
jo
clc
mov
mov
dec
jl
lahf
cmp
cmpsb
rorb
packssdw
mov
repz
or
xor
mov
test
inc
push
inc
push
scas
ret
stos
sbb
mov
xor
push
mov
mov
dec
mov
xlat
sub
testb
sub
xorb
cld
hlt
rcll
and
fsubrs
jmp
mov
mov
xchg
test
cmp
insb
fisttpl
repnz
outsb
mov
lea
int
add
popa
cmp
pop
adc
dec
xchg
push
mov
nopl
sarb
push
icebp
push
fsubrl
dec
adc
xchg
outsl
push
inc
pop
je
daa
and
stos
out
jne
or
mov
and
cwtl
std
dec
aam
and
icebp
mov
cwtl
sbb
mov
addb
enter
mov
lods
loopne
fstp
lock
xchg
dec
pop
dec
sub
daa
movb
int
mov
mov
addb
jno
mov
sub
cltd
add
inc
ja
pop
inc
jmp
add
bnd
inc
clc
xor
bound
inc
cmp
and
icebp
adc
arpl
js
lds
push
addr16
xlat
push
les
subl
pop
cmp
scas
and
xchg
jl
stos
cmp
roll
orb
sbb
xor
and
pop
mov
adc
fsubl
inc
lret
cmp
jl
data16
mov
inc
and
stos
clc
clc
adc
xchg
nop
xor
and
mov
arpl
movsb
dec
pusha
rcr
adc
icebp
leave
sub
mov
sub
popf
sahf
adc
loop
inc
mov
xor
sbb
sbb
mov
in
adc
fcompl
dec
jge
jo
shlb
std
fmull
mov
sar
movsb
add
mov
out
sahf
dec
out
dec
stc
mov
inc
xor
or
sub
add
add
xor
push
sbb
mov
mov
or
xchg
call
push
sahf
out
xchg
fdivrs
pop
mov
add
push
inc
and
xchg
aaa
adc
rcrl
int3
sbb
or
sub
jecxz
sbb
and
cmp
sbb
adc
xchg
hlt
repnz
test
loopne
push
mov
and
hlt
sbb
cmp
clc
xor
adc
adc
pop
ljmp
xor
add
sub
inc
dec
pusha
outsb
ror
push
mov
adc
or
jns
sub
aaa
jecxz
adc
sbbb
add
popa
push
cld
push
cwtl
inc
test
mov
cmp
testl
xchg
adc
dec
jp
pop
cmp
adc
xor
jns
cmc
push
xor
das
push
neg
sbb
pusha
test
push
imul
pop
mov
enter
ret
dec
xchg
mov
inc
cmc
lods
scas
push
jae
jne
and
testl
out
cmp
ds
push
cwtl
fimull
loope
leave
mov
loopne
mov
daa
cvttps2pi
shrl
mov
fildl
test
ret
fwait
xchg
lea
jge
movb
mov
adc
fstpl
out
adc
jp
sbb
add
add
icebp
aad
pop
xchg
cmp
std
pop
mov
dec
sub
fmull
stos
jnp
sbb
mov
cld
filds
loopne
xlat
push
push
ds
ljmp
push
lds
sub
rol
lods
jecxz
test
add
mov
inc
mov
or
lock
push
out
mov
je
jp
sub
dec
mov
cmp
jp
and
imul
bsf
adc
adc
jl
pushf
mov
lods
xorl
lret
mov
and
jne
mov
cmp
xchg
cmp
xor
call
loopne
dec
dec
std
cmp
push
rol
sbb
xor
ds
popf
shrb
in
js
popa
cmp
and
dec
inc
lods
sub
sub
in
and
loopne
dec
inc
mov
xchg
popa
dec
nop
out
dec
fdivl
scas
lcall
jp
add
dec
mov
je
int3
jbe
xchg
dec
lahf
cmp
in
inc
test
sub
xchg
or
aad
pop
test
mov
mov
or
xor
push
xchg
mov
mov
mov
sub
movl
ds
inc
fdivs
je
les
mov
loope
out
cmc
or
out
add
cmp
iret
xchg
inc
stos
mov
inc
pop
mov
dec
adc
and
or
test
mov
lods
cli
shrb
jge
push
inc
add
dec
cmp
cmp
push
ror
sbb
dec
add
lds
mov
jne
cmc
mov
or
push
add
ret
in
arpl
shr
shlb
dec
xor
dec
jle
mov
aad
arpl
je
mov
pop
out
mov
push
arpl
pop
insl
sbb
inc
loopne
xchg
dec
mov
ds
add
les
sbb
and
gs
xlat
cmp
fiadds
movsl
xchg
inc
js
or
jmp
sbb
popf
aad
fiadds
je
jb
mov
push
sahf
nop
pop
repnz
mov
arpl
jge
pop
cmp
sub
ja
sahf
outsl
jo
stos
sti
xchg
das
outsl
lock
subl
cmp
pop
lret
pusha
and
inc
fwait
bts
fisubrs
xchg
pop
xor
and
inc
add
push
arpl
leave
cmpsb
push
cmp
out
js
imulb
lods
icebp
stos
cmp
dec
mov
jne
stc
lds
xor
adc
cli
push
add
cmp
sbb
sbb
ret
and
cmp
ret
scas
xchg
pop
aad
sbb
pushl
pop
cmp
fs
ljmp
and
dec
faddl
mov
arpl
jp
inc
dec
test
jne
jl
mov
xchg
push
pop
lds
test
mov
pop
popf
pusha
sub
repz
in
stos
pop
adc
sub
inc
ds
lcall
adc
and
jl
or
xor
and
pop
xor
daa
rorb
or
sar
cmp
adc
andb
sbb
roll
outsb
inc
outsb
ja
and
cmpsl
loopne
jle
mov
das
pop
adc
add
cmp
loope
lea
scas
iret
test
ret
jl
outsb
dec
mov
sbb
addb
sbb
jmp
mov
hlt
hlt
dec
sahf
lock
lcall
and
ficompl
mov
sub
pop
daa
pop
mov
test
jae
pop
lods
addb
sub
adc
cmp
cmp
je
daa
or
jns
mov
cmp
and
stos
add
xchg
sub
jns
mov
or
jle
popa
mov
mov
sbb
mov
inc
add
sbb
dec
call
test
jno
pop
iret
call
movsb
push
dec
add
xor
fsubl
jl
insb
ficomps
cltd
adc
mov
out
or
xor
daa
sbb
fmull
push
mov
adc
out
adc
inc
xchg
repz
sub
dec
stos
cmp
mov
fs
addr16
out
mov
int
or
mov
and
popl
ficompl
mov
insl
jmp
lret
sbb
clc
push
shll
icebp
scas
mov
imul
ret
js
daa
arpl
cmpsl
or
and
testl
test
push
shrb
ret
mov
jp
inc
pop
and
sbb
push
adc
ret
add
and
push
xchg
lret
js
pushf
add
inc
xchg
sbb
mov
cmp
movsb
sub
push
movsb
loopne
jno
push
cld
es
dec
or
xchg
dec
add
adc
jmp
cmpsb
popa
in
data16
mov
add
and
gs
pop
lahf
aas
fwait
add
aaa
xor
inc
notb
jp
jp
repz
jge
pusha
xor
fcmovnbe
mov
sub
lret
sbb
mov
sub
pop
or
mov
add
movsb
je
jmp
out
je
inc
arpl
jo
dec
test
fistpll
jp
xchg
dec
cmpb
pop
adc
pusha
inc
add
xchg
int
mov
adc
cmp
mov
es
mov
mov
out
clc
orb
in
addr16
cltd
insb
add
sarl
rcrl
ror
rclb
push
sahf
mov
add
cmc
xor
sub
xor
mov
into
scas
sbb
push
pop
iret
cwtl
test
data16
and
xchg
and
push
mov
stc
loopne
rorl
or
mov
rclb
lock
adc
stos
fwait
add
repnz
jmp
das
mov
iret
fisubl
arpl
cmp
pop
sub
and
adc
mov
mov
sub
sbb
arpl
add
pusha
dec
mov
in
inc
pop
inc
movsl
aam
mov
cmc
adc
inc
xlat
enter
dec
lea
ficomps
fmul
sub
adc
and
rclb
xor
and
ja,pt
daa
shld
inc
add
adc
fisubrs
pop
jne
xor
xor
xchg
mov
adc
nop
inc
xlat
jge
or
pop
push
mov
add
jae
mov
xor
push
push
je
loopne
pop
out
push
fbstp
gs
sti
inc
divb
sbb
in
std
sbb
mov
xor
inc
fmul
aaa
push
pop
push
inc
sub
pop
jnp
mov
andl
sbb
sub
xchg
pand
push
dec
push
pop
dec
jnp
loop
daa
add
inc
pop
sub
push
xor
ret
mov
rcll
lret
fdivrs
sbb
and
push
stos
cmp
sti
or
sbb
repnz
inc
jge
iret
sub
dec
es
rcr
out
inc
je
sub
insb
push
dec
lock
cmp
add
mov
mov
addl
jne
push
jecxz
jmp
push
loopne
adc
jb
int3
sbb
mov
imul
popa
and
pop
dec
pop
adc
xchg
ljmp
jns
add
js
or
test
loope
xor
cmp
icebp
pop
dec
pop
ret
pusha
pusha
add
arpl
nop
xchg
es
xbegin
push
xor
inc
mov
mov
jecxz
cltd
jge
sbb
daa
repz
and
lahf
push
adcb
mov
adc
xor
cli
mov
inc
pop
add
test
roll
jns
push
or
loopne
repnz
push
push
popf
cs
rcr
insl
xchg
or
jo
pop
or
sbb
scas
mov
cld
inc
pop
es
in
inc
fisubrs
in
test
push
popf
jbe
clc
pop
mov
dec
loopne
mov
mov
xchg
push
or
aad
std
pop
insb
inc
inc
or
pushf
out
cmp
jmp
jg
pushf
icebp
es
ds
mov
mov
loope
xchg
mull
pop
mov
jp
testb
adc
btc
sti
cmp
ret
jno
jo
dec
ljmp
sarb
dec
stos
insb
into
jmp
jge
jne
add
ret
sbb
pop
pop
mov
nop
stos
cwtl
int3
dec
shlb
jmp
clc
mov
popw
mov
adc
xchg
xor
xlat
and
xor
xorb
stos
and
int3
inc
sbb
jae
pop
push
arpl
iret
inc
sub
pop
aas
mov
test
lods
pop
lret
test
xorl
arpl
and
push
fsub
ret
pop
cli
incb
cmpsb
out
addb
outsl
cmpsl
outsl
sbb
movsl
add
repnz
push
jns
inc
add
mov
mov
jle
in
xchg
cmp
repnz
sub
ds
push
xor
sub
nop
or
je
or
and
sub
inc
mov
sbb
mov
data16
or
into
subb
inc
inc
movsl
sti
xchg
inc
bswap
cmp
xor
adc
inc
jb
rolb
aas
or
mov
cmp
adc
mov
test
push
inc
pushf
adc
mov
out
mov
pop
push
imulb
mov
jle
cmp
adcl
push
jg
roll
jne
adc
or
sbb
xchg
psadbw
mov
rcr
mov
and
dec
xchg
push
mov
shll
aas
mov
lods
cmpsl
mov
lock
xchg
mov
insl
lahf
xrelease
ret
sbb
sahf
inc
sahf
or
pop
cmp
shl
mov
hlt
cmp
int
mov
pop
je
sbb
mov
push
mov
xchg
and
inc
pushf
and
or
insl
mov
mov
shrl
lods
lds
mov
xchg
shlb
add
or
test
rolb
pop
pop
les
push
orl
add
mov
inc
popa
xchg
xor
nop
test
mov
dec
inc
push
leave
adc
adc
jp
jnp
fwait
pop
arpl
sub
ss
jae
insb
xor
jp
testl
dec
addps
adc
sbb
aam
clc
jmp
or
xchg
inc
lcall
and
adc
mov
cmp
jge
sbb
jl
or
mov
pop
xchg
cmpsl
ss
jge
imul
jae
cmpsb
popl
add
mov
push
push
rcll
aas
adc
cltd
adcb
addr16
or
inc
sti
repz
subl
call
adc
jae
sarl
mov
test
jae
or
data16
inc
addr16
mov
daa
rolb
repz
sbb
mov
rcrb
mov
cli
loop
shll
popa
xor
mov
pushf
adc
shrl
daa
dec
push
cli
inc
daa
dec
xor
xchg
adc
jmp
inc
test
stos
in
inc
call
cmp
pop
pop
lahf
sbb
and
xchg
call
sub
inc
adc
rcrl
insl
fndisi(8087
jle
cmp
sub
push
xchg
add
sarb
push
sbb
mulb
dec
push
push
lcall
pop
std
mov
adc
jnp
pop
outsl
inc
stos
inc
loopne
lods
cmp
lods
test
repnz
dec
je
scas
orb
jno
jp
or
xor
int
mov
das
fs
adc
arpl
arpl
lock
leave
xor
jl
das
jge
mov
daa
mov
or
roll
lret
add
in
inc
andl
push
sub
cmp
shll
jecxz
int
add
jecxz
mov
jp
cmp
sahf
nop
push
jnp
mov
push
nop
in
mov
fwait
mov
adc
stos
dec
mov
in
lods
push
sbb
orb
scas
jmp
adc
inc
repz
mov
cmp
add
mov
xchg
dec
mov
mov
xchg
ds
push
adc
clc
add
mov
mov
lcall
out
add
es
orl
bound
pop
push
inc
mov
loop
cmp
dec
dec
jo
add
sbb
mov
lock
enter
fcmove
add
adc
sbb
push
mov
iret
xchg
cmp
subb
xor
fadds
ljmp
cli
cwtl
mov
js
jne
adc
and
decb
ds
inc
inc
pop
jecxz
adc
xchg
mov
stos
mov
push
add
jmp
xchg
xor
and
sub
popa
popa
cmpb
mov
push
jl
icebp
mov
xchg
sahf
xchg
jmp
rol
or
mov
sahf
push
mov
and
ss
dec
xor
push
int
in
ljmp
in
xchg
imul
inc
jecxz
add
nop
push
out
cmp
push
into
out
pop
rorl
dec
dec
add
loope
xchg
mov
mov
cmc
and
bound
cli
and
add
lds
imul
cwtl
nop
pushf
lds
pop
cld
jecxz
cmp
and
pop
sub
aam
dec
sub
cmp
stc
and
jnp
mov
sub
inc
add
sbb
pop
ljmp
call
dec
rclb
inc
shl
jge
jp
mov
pop
es
cli
popf
addb
pop
movsb
fs
jnp
fiadds
outsl
xor
arpl
mov
cmpsl
and
dec
push
dec
shlb
xchg
and
push
add
jecxz
js
adc
lods
addr16
daa
les
imul
lret
sbb
rol
mov
es
mov
add
add
pop
daa
inc
roll
out
or
mov
pusha
xchg
scas
leave
and
rcrl
fwait
push
cwtl
mov
mov
popf
push
mov
mov
test
sbb
ss
or
or
and
pop
imul
push
push
pop
adc
pop
movsl
icebp
inc
pop
adc
cmc
pushf
jnp
loop
cli
xor
mov
stos
lahf
adc
adc
lea
jo
and
fiadds
jno
adc
call
cli
jmp
es
imul
push
pusha
iret
test
mov
sub
inc
andb
and
insb
fcomps
xchg
nop
xor
cmp
adc
loop
subl
sahf
inc
adc
sbb
mov
cmc
sub
imul
and
inc
js
aaa
ret
pushf
rcrb
mov
or
jl
jmp
subl
lds
xor
rclb
call
push
dec
cmp
push
aaa
xor
mov
cs
fstpl
pop
stc
mov
xor
mov
es
mov
popa
pop
inc
push
adc
add
mov
cvtps2pi
add
lock
cmpsl
addl
aad
fadds
or
ljmp
mov
mov
inc
add
loope
pop
scas
ja
inc
sbb
sahf
in
lahf
andl
nop
sub
cs
xchg
inc
icebp
dec
rcrl
cmp
pop
and
xor
cmp
lea
jne
lcall
sbb
pop
mov
je
ljmp
ja
icebp
push
in
imul
xchg
cmp
pop
and
inc
push
or
ja
cli
mov
and
push
lds
push
leave
lret
mov
lcall
movsb
mov
adc
add
xchg
inc
and
jp
sbb
jnp
test
pop
dec
in
lahf
outsb
sub
sub
and
pusha
fldl
in
adc
ljmp
test
mov
mov
stos
ja
adc
jecxz
push
popf
xor
pop
dec
cli
out
xor
fadds
fadds
mov
int3
fdivrl
dec
add
push
ss
inc
dec
pop
mov
push
mov
ljmp
aad
daa
adc
ret
jb
lret
or
cld
xchg
out
cmc
addr16
ds
ficoml
inc
and
push
aas
push
push
adc
loop
or
xchg
push
ret
test
popf
push
je
add
xor
inc
xor
fiadds
and
or
aaa
mov
jmp
pop
sbb
ja
call
xchg
lret
mov
mov
inc
in
pop
pushf
sbb
pusha
add
mov
xchg
lea
jle
xchg
mov
mov
test
shll
pop
cs
mov
test
andb
cwtl
daa
xchg
popa
mov
pop
sbb
jmp
mov
or
clc
cmp
sub
loop
popa
arpl
pop
dec
mov
dec
cli
pop
add
lcall
aam
addr16
stos
xor
add
push
sbb
jmp
xchg
cmpsb
push
ljmp
dec
repnz
mov
mov
std
movb
cmp
sub
rcl
push
jmp
xor
hlt
les
jbe
adc
add
mov
sub
cmp
xor
add
dec
mov
insb
loopne
cltd
xchg
sti
xor
daa
je
pop
push
std
addr16
outsl
outsb
cmp
and
push
inc
jmp
push
ror
iret
insb
in
add
adc
sbb
in
mov
xchg
clc
cwtl
mov
test
icebp
jl
inc
stc
inc
jg
fwait
pop
xor
scas
xor
sub
pop
imul
fcmovu
cmp
test
or
daa
je
lock
into
test
dec
mov
sbb
mov
aaa
and
shll
or
xchg
jg
orb
mulb
loop
add
sbb
xchg
clc
sbbb
inc
in
or
int
jnp
sbb
outsl
fs
cmp
in
jmp
mov
xorl
andb
pop
lret
pop
iret
and
nop
pop
add
je
imull
pop
inc
xor
andl
hlt
in
lock
dec
cmc
arpl
push
jns
sub
pop
in
sub
daa
add
sub
xchg
push
jle
cmp
jle
iret
stc
inc
push
jp
sbb
shlb
repz
cmpl
xchg
mov
enter
enter
stc
call
cmp
xor
pop
push
loop
sub
mov
popf
mov
into
test
jb
xchg
hlt
mov
adc
in
test
sbb
test
mov
pop
or
push
hlt
mov
call
in
cmpl
imul
pop
cmp
inc
sbb
push
sbb
mov
enter
pop
inc
add
pop
insl
fwait
adc
movsb
cwtl
mov
sahf
jo
and
cmp
cld
xor
stos
or
sbb
push
pop
in
cld
push
cmp
push
jo
sbb
cmpsl
adc
jl
pop
sbb
cmp
ja
adc
cmp
push
jg
nop
adc
sti
add
test
and
call
jne
add
mov
mov
loope
orl
push
iret
pushf
imul
test
jmp
cmpsl
enter
jmp
ljmp
add
pop
out
jl
sbb
add
or
in
mov
and
mov
dec
add
inc
repz
dec
popf
cmp
cmpsb
cli
adc
jne
adc
stos
daa
rcr
into
dec
test
addr16
sbb
mov
and
mov
pop
inc
dec
and
mov
jmp
xacquire
mov
inc
xchg
adc
jmp
jo
jo
pop
cmp
push
test
add
pop
shl
push
mov
adc
shl
sbb
jns
inc
and
mov
shll
lods
sub
fidivrs
loopne
push
and
inc
mov
lahf
pop
inc
loopne
pop
add
xchg
rolb
loope
sti
mov
test
or
jp
imulb
fs
jmp
dec
cmpsl
rol
mov
imulb
ret
push
fcmovbe
sarl
movl
mov
mulb
shlb
shll
dec
push
cmp
xchg
in
xor
sbb
imul
push
or
insl
mov
ds
js
ficomps
jnp
sbb
lret
mov
xor
dec
fnsave
dec
push
lods
dec
adc
dec
mov
lock
push
mov
inc
xchg
dec
mov
cmp
ja
push
arpl
add
sbb
shrl
jge
jno
scas
push
push
cmpsl
sbbl
sbb
flds
push
xor
idivl
outsl
sbb
popa
inc
test
xor
mov
popf
pop
mov
xchg
dec
test
pop
mov
or
xor
loop
and
adc
xchg
rcrl
aas
mov
insb
outsl
scas
int3
fcomps
jl
imul
leave
jp
test
mov
dec
mov
cs
push
jo
aad
jne
imull
lret
pop
ja
hlt
mov
jecxz
fsubrp
adc
aad
mov
mov
shl
sbb
sbb
pop
xor
xor
cmpsl
out
jb
sbb
push
adcb
adc
cmp
push
xchg
les
ja
pop
sbb
xchg
fwait
inc
jmp
call
mov
push
push
xor
push
mov
sbb
pop
movq
dec
xchg
in
addb
daa
xor
shrl
or
pop
add
sbb
and
xchg
js
xchg
cmpsb
fisubs
dec
imul
rcrl
inc
sbb
shlb
dec
and
sub
push
mov
pop
or
pop
aad
popf
sti
je
test
add
pop
push
and
mov
movsl
nop
loop
push
daa
push
jbe
pop
jnp
lods
xor
sbb
setg
mov
jecxz
push
xor
loopne
stc
xor
cwtl
lahf
mov
xor
lahf
or
cwtl
push
cmc
movsb
or
shr
mov
mov
ficoms
push
adc
inc
xorl
xchg
shll
shlb
movsl
out
inc
or
vmovdqu
hlt
jecxz
orb
push
mov
and
push
lea
mov
fimuls
pop
or
add
rol
enter
jecxz
scas
mov
inc
xchg
inc
ret
push
and
clc
push
pop
mov
or
jp
pop
stos
cli
sbb
inc
loopne
mov
ficoms
inc
mov
ss
inc
adc
cmp
or
mov
inc
loopne
rcrl
mov
cwtl
shll
cmpsl
popf
and
outsb
jecxz
inc
aad
push
cmp
fistpl
pop
xor
fimuls
popf
cmp
in
jb
js
push
daa
sub
pop
mov
push
push
mov
sbb
adc
jle
xor
dec
adc
add
movl
dec
dec
mov
adc
pause
mov
cmp
in
adc
pop
mov
mov
or
adc
je
xchg
mov
rcrb
movl
jmp
pop
dec
mov
fwait
mov
lock
xchg
mov
outsl
mov
icebp
xchg
scas
jbe
nop
fstps
les
int3
push
movsb
ljmp
out
bound
pusha
outsb
xor
mov
or
xchg
shrb
adcb
dec
pop
arpl
adc
outsb
mov
add
inc
jne
jb
or
inc
pushf
push
stos
mov
xchg
fmull
incb
orl
sub
and
mov
jae
jb
loope
push
jo
pushf
jo
mov
xchg
mov
cmp
dec
mov
pop
xchg
xchg
pusha
jmp
jp
rcll
mov
sbb
test
mov
fldcw
add
push
inc
and
aam
pop
push
sub
rcrl
push
pop
add
out
cli
xorl
push
popf
and
les
in
loopne
pop
sbb
xchg
dec
ret
lret
pop
rcrb
fdivrs
sub
sbb
jl
inc
pop
ret
xchg
mov
rol
cwtl
sub
and
pusha
pop
cmp
jmp
jge
add
add
into
or
adc
and
jbe
sahf
push
mov
sbb
cmpl
aad
fisubl
and
push
mov
mov
cmp
movsl
pop
sbb
popf
ds
pop
popf
adc
addb
sahf
lcall
xor
fstl
xchg
cmp
push
push
repz
mov
push
lods
stos
mov
jle
leave
outsb
inc
mov
lods
bound
xor
fdivrl
stos
dec
jl
dec
cmp
add
ret
cmp
cmpsb
pushf
daa
fs
mov
xor
mov
push
mov
das
negl
cmp
icebp
icebp
out
adc
push
adc
or
in
xchg
fsubl
sahf
adc
scas
icebp
lcall
insb
or
pop
pop
js
les
add
push
mov
ljmp
mov
mul
adc
adc
stos
mov
mov
mov
push
push
lds
bound
cmpsb
out
xor
xchg
test
dec
outsb
aad
mov
in
and
imul
sbb
in
fistpl
rcr
test
sbb
mov
pop
pop
mov
sub
nop
cmp
xlat
inc
outsb
fistl
push
es
clc
cltd
push
out
jo
bound
pop
add
inc
lds
push
or
pop
pop
ffreep
stos
jl
shll
dec
movsl
mov
fistpl
sbbl
xor
aad
in
cmp
pusha
dec
insl
xchg
sbb
mov
repnz
sbb
pushf
lods
sub
sub
cmp
mov
dec
adc
adcb
mov
dec
push
fwait
aaa
or
inc
xor
mov
lret
test
xor
imul
cli
xlat
push
jne
aam
cwtl
cmp
loopne
sbb
pop
lea
xchg
test
aad
data16
push
dec
mov
mov
inc
fdivs
sub
dec
jb
jae
xorl
or
jmp
push
xchg
clc
cmp
dec
xchg
sbbl
mov
cltd
test
sbb
clc
jo
mov
push
and
imul
xchg
push
pop
arpl
push
decb
sbb
fcmovb
xchg
test
jns
sub
xchg
sub
js
mov
je
dec
shrb
sub
subb
out
sbb
rcrl
stos
repz
mov
sbb
pusha
shlb
mov
mov
cmp
sbb
add
and
rcrl
mov
stc
cmpsl
push
imul
dec
pop
dec
fs
or
cmpsl
daa
lock
push
test
cli
sbb
push
cs
in
jmp
imul
dec
xor
xor
testl
sbbb
xor
test
mov
leave
in
mov
pop
inc
fmul
mov
adc
jne
inc
addb
pop
gs
add
repz
fstl
ljmp
push
jbe
adc
mov
mov
es
sbb
mov
imul
ds
scas
inc
push
pop
andb
inc
xchg
popf
mov
xor
xor
mov
ss
loop
xchg
shlb
push
cmp
mov
jae
mov
xchg
xchg
jnp
adc
cwtl
and
xor
enter
les
popf
dec
mov
cmpsb
push
mov
loop
clc
aam
sbb
xchg
xchg
lds
pushf
movb
icebp
push
imull
inc
mov
enter
pop
mov
jmp
ds
rorl
loope
movsl
mov
lea
push
add
orb
negl
pop
and
adc
dec
dec
in
add
sti
xchg
mov
hlt
test
mov
push
pop
pop
jge
mov
cs
lret
and
dec
mov
add
dec
enter
in
inc
and
gs
push
test
mov
loope
js
xlat
in
lret
leave
lcall
jmp
inc
pusha
add
add
inc
xchg
shrl
outsl
add
roll
mov
out
je
je
mov
inc
jmp
ret
fidivrs
rorl
pop
sbb
divl
mov
pop
sub
mov
xchg
loop
sub
mov
ss
sub
add
sub
dec
inc
push
je
imul
test
mov
inc
dec
push
addr16
cmpsl
out
sbb
sub
sbb
inc
shll
adc
dec
mov
test
imul
movsl
addr16
insb
jnp
adc
stos
enter
std
pusha
jl
movsl
stos
jge
ret
pop
push
adc
add
jge
push
test
push
dec
dec
mov
xorl
or
xchg
cmp
add
sahf
loope
in
js
jle
leave
xchg
enter
jecxz
pop
dec
fimull
xlat
imul
test
cmp
test
outsl
jns
cmc
sbb
xor
out
pop
stos
or
imulb
and
pop
testl
test
aad
jmp
and
aad
fwait
arpl
pop
ret
jmp
add
out
daa
mov
int3
test
and
cmc
jge
sti
mov
mov
mov
fdivl
push
cmpsb
lahf
push
and
ret
lahf
imul
in
mov
adc
mov
and
outsb
test
lret
mov
cmpb
sub
imul
inc
mov
xlat
mov
in
sbb
and
inc
xor
xor
xchg
bound
pmuludq
dec
push
in
adc
push
cmp
jg
aas
adc
xor
addr16
adcl
mov
or
in
aam
aad
lret
xor
je
popf
loop
mov
in
sbb
mov
add
roll
xor
sub
pop
dec
add
jp
cmp
jecxz
cmc
je
nop
aad
pop
nop
adc
fistpll
xor
or
loopne
sbbl
adc
jl
lret
pop
or
andl
dec
gs
mov
movsb
faddl
inc
mov
int
push
popa
cltd
subb
mov
clc
mov
adc
inc
jnp
or
jg
sub
outsb
and
mov
fidivs
test
xor
jno
outsb
inc
fdivr
xchg
dec
xchg
pop
push
mov
into
sub
jmp
mov
pop
and
popa
inc
dec
stc
out
fmuls
pop
lcall
sbb
stos
js
addr16
out
sbb
mov
adc
mov
adc
test
out
xchg
cmp
push
cmp
dec
add
jno
cmp
lods
fs
imul
or
stos
cld
int
add
xchg
stos
mov
lods
movl
sahf
adc
inc
outsl
push
sbb
mov
hlt
mov
adc
and
sbb
je
out
xchg
int
ret
xor
aam
dec
mov
fildll
mov
adc
and
push
movsb
sahf
dec
mov
mov
push
and
xchg
stos
ds
sub
jnp
cmpsb
fadds
ds
mov
fcomps
mov
in
divl
loope
lods
adc
cmp
cmc
or
sub
cld
popa
sub
mov
pop
jo
cmp
sbb
xor
jmp
jle
lds
xorb
dec
pop
call
enter
mov
into
add
xchg
test
loopne
add
stos
icebp
movsb
inc
ds
imul
loopne
js
lahf
data16
mov
inc
mov
arpl
outsl
sub
cmp
jo
leave
inc
mov
push
mov
inc
mov
fidivs
cwtl
in
xor
mov
insl
inc
fcomps
fistpll
dec
cmpsl
inc
sbb
fcompl
xor
fwait
arpl
jmp
das
or
ljmp
xchg
rcrl
cmpsl
addr16
xor
mov
popa
popa
or
sbb
cltd
mov
aam
sub
outsb
xor
clc
and
inc
add
testl
push
pop
aam
or
inc
ja
aas
and
xor
push
lock
dec
movsb
inc
xchg
out
inc
popf
fisttps
xor
dec
mov
cmp
jnp
xchg
sub
pop
mov
scas
fwait
loope
gs
in
jl
xchg
sarb
pop
adc
mov
sub
sub
mov
sbb
imul
cli
pop
dec
push
mov
add
or
inc
lock
mov
pop
sarb
or
test
jg
lock
mov
xor
pushf
jg
orl
das
mov
push
xor
jge
cltd
movsl
jno
push
sbb
nop
out
inc
clc
sub
out
dec
adc
fmuls
cmp
daa
adc
pop
push
add
mov
dec
ljmp
aas
ret
push
aas
cmp
push
inc
jl
cmpsb
xchg
sbb
lea
lods
movsb
stos
pop
add
inc
loop
sbb
lds
mov
andl
dec
hlt
in
pop
mov
std
lock
aad
add
or
inc
cmp
xor
sbb
loope
add
jnp
outsb
dec
adc
push
pop
add
popa
add
adc
loope
loopne
stos
sti
adc
seta
sub
gs
leave
mov
push
nop
push
add
sbb
adc
or
jmp
es
jg
xchg
mov
xchg
xchg
xchg
mov
mov
mov
pop
push
loope
dec
jmp
lods
loopne
sahf
scas
divl
ljmp
push
cmpl
fs
adc
sahf
insl
push
cmp
enter
dec
push
jp
cs
lock
push
adc
dec
jle
popf
fwait
roll
scas
inc
movsl
arpl
dec
sub
push
inc
and
mov
stos
mov
sbb
lret
pop
pop
pop
movsb
add
adc
popa
mov
mov
xor
xor
dec
cltd
push
mov
and
pop
or
pop
or
sub
mov
cmpb
inc
daa
push
xor
cs
hlt
imul
sahf
cmp
pop
push
shll
lods
ds
mov
mov
dec
adc
lcall
lret
stc
jmp
and
pusha
arpl
fcoms
outsl
inc
xor
cmp
mov
loopne
out
rcll
lea
outsb
or
lcall
xchg
jo
cmp
stos
inc
jne
sahf
ss
push
mov
pop
xor
mov
insl
fdivs
pop
push
lods
cmc
dec
clc
dec
cmp
mov
call
dec
popa
jbe
add
sbb
pop
xchg
pop
ror
inc
sub
mov
pusha
adc
mov
loop
jge
dec
or
pop
and
lds
mov
and
push
rep
ds
dec
rcrl
mov
or
adc
es
aaa
icebp
shll
mov
inc
xchg
or
adc
repnz
mov
std
pusha
lods
cmpsl
add
into
mov
add
mov
dec
mov
xorb
adc
clc
popf
add
lret
push
movl
dec
pop
andl
mov
jnp
outsb
mov
mov
push
add
call
ret
int
push
dec
mull
cmp
adcl
ljmp
pop
hlt
or
ljmp
mov
aas
loopne
or
jb
sbb
clc
dec
in
mov
sub
jb
pop
in
lods
add
insb
mov
bound
push
loopne
mov
push
pop
bound
icebp
add
jo
test
cmp
hlt
orb
test
cmp
addb
jp
data16
mov
and
mov
mov
mov
lahf
pop
out
ja
dec
mov
fmull
mov
mov
setp
adc
or
and
shlb
divb
push
mov
aad
adc
mov
mov
test
fcompl
sti
mov
pop
mov
aad
out
push
cmp
sbb
mov
ja
add
jne
lcall
jp
aas
fsincos
jne
stos
ret
add
cmp
hlt
push
or
sbb
push
add
pusha
test
cmp
sahf
gs
add
rcll
inc
fidivl
aad
xlat
xchg
xor
cmp
sbb
lods
in
loope
add
out
call
fs
inc
adc
ja
les
push
pushf
aad
daa
aam
jle
jmp
pop
pop
pop
jmp
addl
mov
inc
adcb
jo
or
cmpsb
mov
xor
fscale
loopne
loopne
test
iret
loopne
aaa
lds
push
in
push
sbb
test
rcrb
and
fmuls
je
lds
inc
adcb
xor
jl
sub
jns
push
pop
adc
movsb
mov
sbb
scas
xchg
aad
sbb
inc
jae
dec
and
sub
cmp
xlat
sbb
dec
daa
jg
shlb
push
push
pusha
xchg
xor
push
loopne
clc
sahf
test
xor
mov
or
inc
cmpb
shll
push
sarl
loope
outsb
xlat
hlt
sar
popf
inc
leave
test
negl
fdivrs
xor
push
sahf
pushf
icebp
add
cmp
sarb
leave
inc
adc
sbb
cmc
push
shrl
int3
inc
aas
pop
dec
xchg
jno
mov
and
jp
and
daa
inc
mov
adc
fs
mov
dec
xchg
jb
lcall
lret
daa
cltd
cld
and
enter
inc
jne
aas
xor
sub
popa
or
or
popa
fistpll
js
sbb
sub
ja
lock
addr16
xchg
cld
mov
pop
call
mov
arpl
pop
xchg
jbe
xor
in
gs
jge
jge
mov
aad
push
pop
fs
fxch
shl
daa
jnp
mov
xchg
cwtl
or
mov
pop
pop
sub
adc
mov
xchg
test
xor
sbb
xor
sbb
fs
bound
mov
xchg
or
inc
dec
pop
int
dec
jge
dec
pushf
outsb
add
pop
das
adc
jl
jnp
dec
sub
add
dec
lods
addb
sbb
aas
xor
test
sub
adc
pop
inc
fbstp
cmp
loopne
stos
jnp
jg
and
aas
mov
dec
add
fs
outsl
mov
inc
out
scas
test
test
repnz
je
daa
jo
cmp
imul
inc
inc
pop
test
test
jp
fisttpll
adc
mov
ret
addb
or
shl
mov
jnp
imul
into
int3
bound
enter
mov
cmp
inc
cmp
mov
pop
lods
dec
push
movsl
xor
adc
dec
test
jp
mov
outsl
inc
ja
cld
xor
scas
inc
mov
testb
and
cmp
clc
loopne
jbe
ja
or
or
mov
addr16
jae
mov
inc
push
add
inc
arpl
cwtl
ret
mov
and
ss
out
xor
test
sub
xor
into
fsubl
stos
fsubrs
mov
jo,pt
into
xlat
imul
addb
lcall
dec
dec
insl
mov
int3
pop
outsb
loope
test
je
mov
pop
filds
push
dec
or
cmp
add
mov
rcll
inc
ret
push
jmp
not
aad
mov
xchg
iret
push
hlt
je
movsl
cmpsb
xor
lods
push
mov
mov
fdivrl
mov
js
mov
jl
and
xor
fnsave
pop
pop
mov
subl
lock
roll
adc
cld
sbbl
xlat
sbb
clc
shlb
hlt
int
jl
bound
jns
dec
inc
icebp
push
addl
test
add
stos
xor
jbe
pop
mov
cmp
mov
fistl
push
sti
stos
nop
mov
sbbb
fwait
cmp
out
inc
repnz
lods
jmp
pop
sbb
add
cmp
xor
adc
cwtl
lea
inc
idivl
ss
nop
inc
outsb
pop
sarl
mov
adc
mov
dec
xor
test
ja
fcmovnb
jmp
push
movsl
adc
jge
stos
sahf
pop
and
pop
mov
jns
ljmp
fisubrs
and
xor
pop
jns
pop
test
in
xchg
nop
adc
jmp
or
jl
dec
pop
cmp
fstpt
out
fisttpll
ret
ss
add
xchg
xchg
mov
xor
jmp
dec
cmp
js
xchg
and
jbe
inc
cld
into
iret
xchg
lcall
sbb
clc
cwtl
insb
loopne
xor
ficompl
add
cmp
aam
les
xchg
mov
aad
add
push
mov
xlat
mov
cwtl
cmp
mov
xor
int
popa
insb
test
pop
cli
pop
pop
imul
and
pop
cltd
out
dec
cltd
jne
jl
in
pop
cmp
xchg
lds
mov
movsl
cmpsl
fildl
je
push
ljmp
xor
inc
xchg
fldcw
loope
shr
mov
sahf
lods
call
popa
cmp
jae
push
sub
test
xchg
popf
xchg
mov
dec
dec
mov
pop
or
and
xor
loopne
in
out
sti
sbb
arpl
in
loopne
sbb
mov
mov
into
scas
nop
inc
mov
fcmovb
fcom
int
sbbb
lcall
mov
dec
fcoml
addr16
add
enter
add
or
rorb
call
mov
das
jp
test
lods
sbb
push
adc
cmp
push
xor
dec
mov
testl
in
lods
adc
cmp
mov
popa
test
push
jl
push
push
jp
aad
push
inc
lock
push
insl
xchg
idiv
nop
mov
and
dec
outsb
rcrb
test
sbb
loopne
add
mov
aam
sbb
cmpsl
int3
mov
incl
mov
inc
xor
lcall
sbb
jl
inc
out
and
in
lock
mov
xchg
dec
and
inc
cmp
in
les
pop
pop
xor
add
jo
xor
mov
pop
jns
inc
xchg
cmpsb
or
dec
bound
clc
xor
fsts
decl
sahf
je
fildll
jp
add
test
add
cld
insb
ss
jmp
mov
test
cmp
shlb
cltd
xrelease
int
nopl
repnz
addr16
outsb
cmc
inc
or
outsl
adc
rorb
cmp
in
popa
loope
insb
clc
or
enter
mov
cmpsl
jns
test
dec
adc
or
insb
int
inc
jle
aam
out
or
daa
les
rcrb
in
jo
pop
sahf
int
mov
mov
ljmp
mov
repz
adc
inc
xchg
ds
xor
jle
adc
mov
sti
push
mov
cmp
les
jecxz
dec
pop
xchg
cmp
jl
cmc
dec
mov
sub
out
aaa
testb
mov
test
jo
sahf
pop
or
mov
or
rclb
mov
cmp
or
lock
mov
lcall
dec
jne
arpl
imul
add
and
xor
and
sahf
je
mov
loopne
adc
lock
js
je
xchg
push
push
shlb
jno
imul
adc
inc
sbb
add
adc
xchg
je
mov
ss
lods
int3
movl
jg
sbb
jmp
sbb
ret
pushf
cmp
mov
mov
and
jne
idivl
stos
es
dec
test
out
sub
out
arpl
enter
adc
lods
insl
pop
fsubp
aad
popa
ds
and
jae
adcb
pop
dec
mov
and
and
and
mov
js
ficoml
add
sbb
add
or
adc
add
or
adc
lahf
jns
mov
les
stc
and
std
dec
stos
faddl
mov
and
pop
fstpl
inc
or
dec
lea
push
lods
pop
inc
cmc
push
jmp
adc
jmp
adc
fnstenv
ja
adc
cmp
mov
mov
xor
out
ds
cs
xchg
inc
sub
in
sbb
lds
jl
xor
xchg
jne
jnp
sbb
icebp
xchg
lret
cmpsl
sbb
mov
ljmp
mov
orb
jo
insb
jb
sbb
cmp
aaa
shrl
push
cwtl
push
inc
arpl
jne
cmp
fwait
scas
xor
arpl
mov
arpl
mov
dec
sbb
xchg
pop
fwait
loop
pusha
lods
test
or
adcl
hlt
out
xor
pop
pop
ja
fwait
and
cmp
mov
cli
out
subl
inc
push
xchg
cli
sarb
push
fdivp
xor
sub
enter
lcall
mov
andb
sbb
cs
out
adc
mov
jp
mov
mov
mov
add
fnstsw
push
mov
mov
lds
lea
hlt
xor
rcrb
sahf
pop
jmp
and
and
cmp
pop
mov
lds
aam
imul
jl
sbb
jp
sub
or
push
sti
movl
sahf
adc
icebp
lods
pusha
inc
cmpsl
loope
or
test
dec
mov
xchg
and
aas
xor
test
imul
sbb
xchg
mov
dec
push
inc
rorb
pop
inc
fldenv
adc
and
xor
ss
and
daa
lea
fcoms
xchg
mov
std
dec
mov
xchg
add
sti
loop
xlat
icebp
jb
sbb
adc
leave
push
or
cmp
pop
lahf
push
inc
in
aad
xlat
cmp
add
mov
addb
fistpll
loopne
xchg
add
cmpsb
mov
mov
ds
push
cmp
fstpt
lea
xchg
jae
aas
cmp
or
sbb
mov
in
sbb
arpl
sub
add
sub
sbb
adc
mov
data16
jno
mov
xor
cmp
push
pop
dec
jecxz
repz
xchg
xor
sub
or
aas
loopne
clc
jnp
dec
mov
or
icebp
arpl
imul
int3
repz
int
lea
xor
insb
ficomps
push
andl
pushf
daa
cmp
aam
mov
add
pop
ret
movsb
sahf
or
pop
jmp
mov
clc
inc
or
lock
fidivl
mov
ds
adc
icebp
mov
add
aam
jbe
jle
dec
fwait
rcll
mov
cmp
inc
inc
lahf
lcall
je
lods
ds
orb
mov
aaa
add
adc
sub
and
inc
push
filds
jne
and
out
dec
fisttpl
jmp
or
push
loopne
mov
and
mov
mov
inc
aaa
adc
dec
mov
test
pop
fwait
jl
stc
add
popa
shl
in
inc
sbb
xlat
sbb
pusha
mov
dec
inc
jmp
cli
rcl
aad
not
les
aas
fdiv
fwait
pop
cmpsl
dec
aad
lcall
cmp
fchs
sbb
or
subl
mov
scas
incb
call
loope
sbb
jb
fstpt
arpl
pushf
lret
cli
daa
lret
mov
rclb
dec
pop
stos
insl
loopne
add
jnp
xor
imul
cld
sub
lods
lret
loope
pop
call
dec
rcrl
cmp
andb
inc
add
pop
push
js
ds
sbb
lea
lret
mov
nop
lret
xor
lods
ret
fcomps
es
pushf
lock
call
ret
xlat
pop
sbb
loope
insb
mov
lock
es
rcl
stos
stos
movsb
fsts
daa
roll
mov
sub
les
rcll
dec
cmp
arpl
or
fwait
stc
inc
loopne
inc
inc
xchg
scas
stc
addb
xor
hlt
mov
outsb
mov
add
cmp
sub
out
mov
inc
das
sub
clc
cmp
sbb
mov
dec
lahf
adc
mov
sar
jl
movsl
ds
inc
mov
pop
sub
mov
daa
fcomps
scas
adc
into
fisubrl
mov
out
int3
adc
ja
adc
sub
fsubs
mov
push
loopne
fsubs
in
lcall
outsl
psubusw
dec
sub
pop
cmc
inc
pop
les
jecxz
enter
push
fidivs
shlb
cld
push
jmp
je
pop
stos
mov
sahf
mov
fsubr
shr
inc
jno
and
mov
fcompl
insb
or
sbb
mov
shlb
xor
xor
aaa
fstpl
pop
and
sub
movswl
inc
inc
inc
in
and
add
mov
inc
out
and
dec
push
sar
inc
pop
mov
lds
lcall
push
mov
in
mov
inc
xor
sbb
xchg
adc
aas
mov
and
sbb
adc
mov
and
ja
mov
dec
xor
dec
rol
adc
and
mov
stc
clc
push
pop
pop
dec
andb
das
cmp
mov
adc
xor
mov
out
ret
in
dec
hlt
into
jle
out
ffreep
gs
call
shrl
stos
stos
inc
xor
rorl
and
and
js
addl
cmp
sub
jno
mov
ja
ss
into
aaa
dec
push
inc
push
xor
pop
sahf
std
scas
xor
and
cmpsl
adc
push
insb
push
jae
iret
xchg
xchg
sbbb
aaa
inc
movsl
fsqrt
enter
loope
insl
push
sub
mov
xlat
jle
loop
cmp
or
push
fcoms
mov
jmp
add
jl
or
cmp
into
or
loope
mov
imul
ja
pop
cwtl
mov
add
js
jae
test
push
gs
jmp
sub
test
clc
inc
sbb
and
shlb
out
int3
data16
adc
leave
add
test
pop
es
pop
lds
bound
je,pt
cmpsl
push
or
or
data16
scas
sub
and
pop
jae
in
or
push
and
enter
dec
jg
pop
or
push
dec
push
lds
lock
cmp
mov
xor
in
inc
pop
sbb
mov
lods
imul
rorb
jnp
nop
outsl
lret
jbe
daa
jne
popf
add
jmp
add
and
inc
data16
ljmp
jo
adc
leave
jg
aaa
mov
push
jbe
daa
ret
xchg
lock
sbbl
pop
add
sahf
sbb
jne
sub
jo
add
loope
arpl
out
andb
das
loop
mov
cltd
jbe
rclb
in
pop
pop
mov
and
add
push
jne
sbb
hlt
lds
cld
fdivl
in
inc
or
shll
xor
data16
mov
mov
mov
mov
shll
mov
and
push
movsb
loop
pop
ljmp
fprem1
mov
sbb
ds
pop
adc
sbb
or
movsl
pop
push
mov
cmp
rorb
xor
and
add
out
pop
mov
movaps
pop
jbe
push
andb
pop
or
jbe
les
sbb
jns
mov
shl
mov
push
cltd
int
sbb
dec
sub
std
mov
lea
or
enter
scas
push
push
mov
mov
rcr
aaa
and
icebp
loopne
jl
pop
cld
inc
push
movzbl
mov
xchg
or
push
shrb
push
in
shlb
test
rorl
out
mov
in
sbb
or
int3
icebp
mov
jo
mov
mov
inc
pop
cmp
mov
dec
cmp
fidivl
adc
pop
iret
lock
cmp
roll
push
daa
adc
daa
addr16
in
je
imul
flds
mov
mov
jp
call
cmp
cmp
test
push
pop
in
pop
and
dec
push
js
jg
ljmp
mov
ret
adc
cmpsb
popf
xor
hlt
fisubrs
xchg
adc
jl
lret
mov
setbe
imul
sub
cmc
aas
jnp
dec
daa
inc
insb
aaa
aaa
jb
pop
mov
iret
repnz
cltd
sahf
inc
test
sbb
xlat
hlt
push
fstps
aam
jecxz
pushf
inc
test
dec
push
sub
testl
xor
es
movsb
cltd
sub
dec
inc
inc
and
sub
pop
sbb
out
jne
dec
jecxz
and
and
mov
inc
nop
inc
mov
subb
xor
aas
sub
jmp
mov
inc
lea
xchg
lcall
je
sub
aam
leave
clc
cmp
ljmp
addl
sti
mov
pop
rcl
js
pop
lods
mov
xor
loopne
dec
adc
sahf
mov
iret
cmp
xor
push
mov
cmp
dec
aad
aas
xor
mov
mov
aas
loop
inc
je
fsubrs
addl
mov
pushw
push
and
sbb
lahf
pusha
lret
adc
ja
les
xor
rolb
adc
enter
and
cmp
sbbb
inc
xor
test
mov
xchg
or
xor
mov
es
mov
sbb
mov
mov
mov
jo
test
sub
mov
xor
xor
push
orb
adcb
ret
into
outsb
mov
cmp
aaa
jg
sub
loope
mov
push
push
dec
or
icebp
les
loopne
in
xor
xchg
test
jb
stos
xor
xchg
bound
sbb
dec
mov
jmp
push
fists
push
and
xlat
pop
out
or
mov
xchg
cs
mov
outsb
mov
mov
sbb
mov
mov
pop
mov
aad
test
dec
sbb
xchg
jecxz
addr16
popa
mov
jnp
mov
sbb
psrlq
and
sarl
add
jbe
pop
fimuls
les
jp
sti
out
cmp
pop
jae
pop
add
xchg
mov
popf
shrl
pop
cmp
pop
mov
sub
dec
loope
jo
adc
pop
adc
call
push
dec
mov
cmpsl
shll
lret
xor
rcrl
mov
and
lods
nop
mov
mov
xor
pop
add
cld
sahf
and
out
jl
adc
jbe
sahf
movsl
dec
sub
jg
mov
addb
jne
mov
fs
mov
popa
jl
adc
lea
mov
es
cwtl
fcoml
inc
addl
movl
sbb
sti
rcll
outsb
xchg
push
mov
sub
pop
fldcw
push
add
je
mov
les
arpl
out
js
iret
imul
adc
inc
mov
dec
xchg
arpl
adc
repz
stos
push
stos
mov
or
std
call
dec
pop
push
sbb
cmp
pusha
mov
xchg
mov
jge
gs
mov
rcrb
xchg
inc
mov
loope
sti
cmp
jne
jns
loop
out
add
xor
or
cmpsl
test
mov
adc
ja
mov
ret
mov
push
mov
mov
mov
in
dec
push
addr16
push
lea
xor
call
jnp
xchg
test
cmp
sbb
test
fcoml
cmp
dec
mov
popa
mov
dec
adc
sti
aaa
xor
mov
and
call
fsubs
mov
loopne
xorl
ds
dec
popa
adcb
stos
mov
es
inc
jle
xor
adc
sbb
xchg
push
shll
pop
sub
rcr
stos
fadds
outsb
cmpsb
fisubl
stos
sbb
mov
repz
dec
and
repnz
jge
cmpsl
cmp
daa
sbb
dec
sahf
out
jo
sbbl
test
push
fidivrl
push
cld
loopne
xchg
fsubs
test
lret
roll
in
lret
xor
repz
adc
and
addl
imul
sbb
jl
nop
imul
je
insb
mov
out
jae
xchg
in
or
push
add
mov
les
mov
mov
jae
sbb
popa
add
add
or
insl
popa
movsb
inc
test
or
rcrb
sbb
push
popa
es
ja
shlb
lods
fcompl
vpunpckhqdq
mov
jmp
push
pop
and
jne
loop
push
mov
repnz
fistpll
clc
mov
stos
repz
mov
scas
xor
mov
mov
and
xor
mov
lods
in
mov
lods
loop
in
sbb
movsb
out
aaa
roll
cwtl
ret
add
or
add
setl
fadds
or
inc
jo
jmp
rorb
add
fisubs
inc
adcb
leave
shrb
adc
bound
stos
orl
mov
mov
push
nopl
aam
lds
cmp
cli
mov
cltd
cmpsl
sub
cmp
adc
pop
daa
inc
hlt
dec
mov
hlt
pop
bnd
and
mov
cmpsl
rclb
pop
mov
adc
dec
xor
inc
loop
arpl
aad
divl
sbb
push
mov
popa
add
lds
icebp
ds
or
pop
mov
dec
xchg
subl
int
mov
sbb
stc
adc
neg
nop
enter
add
sahf
mov
adc
mov
sbb
push
imul
fnstcw
dec
sar
jecxz
and
sarl
std
or
jmp
lcall
pop
cmp
jmp
out
lret
fwait
sbb
test
pop
push
loope
lret
sbb
mov
jb
idivb
pop
inc
jbe
pop
pop
pushf
xchg
jne
lock
stos
jb
es
insb
cmpl
or
inc
push
mov
clc
xlat
inc
iret
push
xor
adc
scas
into
pusha
loop
mov
xor
mov
adc
jp
loopne
add
rolb
fwait
or
and
mov
stos
rep
popf
xchg
and
hlt
arpl
xchg
dec
dec
adc
mov
or
mov
popa
xor
adc
inc
sbb
cwtl
xor
sub
cmp
jl
mov
pop
into
sbbb
das
xlat
ss
push
jno
xor
add
adc
jne
push
mov
cs
adc
cmc
jnp
pop
pop
or
fsubrl
mov
mov
out
ret
stos
loope
out
shr
sub
js
push
mov
rcll
xchg
pop
dec
add
adc
arpl
mov
jmp
mov
mov
sbbl
sub
mov
movsb
shll
cwtl
dec
cmp
xchg
xchg
testl
cs
inc
mov
sub
dec
cmp
adc
outsb
fidivrs
sbb
cmp
inc
push
scas
xor
stos
loop
out
or
push
jnp
mov
outsb
pop
in
jp
adc
mov
dec
xchg
loopne
pop
xor
xor
mov
iret
push
or
inc
push
sbb
clc
mov
lds
imul
into
cmc
mov
mov
mov
mov
dec
mov
push
push
js
pusha
cmp
jb
jp
out
call
adc
inc
jns
cmp
inc
mov
dec
pop
jl
popa
shlb
xchg
clc
sbbb
mov
mov
imul
xor
loop
daa
les
jmp
sub
out
fmull
ljmp
adc
flds
and
mov
mov
inc
mov
jns
or
pushf
xor
inc
dec
and
outsb
ret
pushaw
nop
incl
es
sbb
or
inc
adc
xor
nop
movsb
test
fdivrs
and
stos
mov
mov
xchg
and
decl
outsb
lock
lea
cmp
adc
pop
inc
cmp
mov
lea
sti
popf
out
jb
mov
mov
dec
mov
add
jbe
and
bsr
icebp
je
adc
repz
testl
adc
mov
xor
adc
mov
mov
and
out
out
add
cmp
xchg
mov
cmp
iret
xchg
fwait
test
adc
insl
dec
daa
jo
mov
mov
je
rorl
inc
mov
dec
and
jp
push
stos
repz
dec
aad
daa
shlb
les
mov
insl
lods
cwtl
movsl
pop
aaa
subl
and
mov
in
aaa
stos
push
fdivrs
jg
in
es
negl
sbb
in
cmpsl
and
movsb
jmp
xchg
or
mov
mov
daa
icebp
cld
mov
andl
push
and
pop
mov
dec
pop
jle
xchg
or
stos
gs
push
mov
xor
pop
pop
add
icebp
xchg
pop
sub
cmp
hlt
insl
leave
rcll
call
add
adcb
pop
mov
xorb
cli
lds
sub
or
testl
cmp
pop
cmp
sub
jl
push
jb
xchg
fnstcw
int
mov
or
es
pusha
fcomi
mov
test
sbb
ds
in
clc
cmpsb
movsl
bound
je
xchg
pop
xchg
call
push
push
dec
xchg
testb
xchg
imul
fsubr
icebp
movsb
call
push
cmp
arpl
fwait
and
std
jp
mov
mov
daa
test
rclb
shrb
gs
ljmp
push
mov
lods
movsb
mov
pop
xchg
push
pop
lcall
in
jbe
xchg
call
pop
cmpl
push
mov
mov
aas
in
dec
iret
sub
pop
mov
or
xor
addb
fcmovnu
mov
pop
and
jmp
sub
cmp
jecxz
mov
ljmp
jmp
lea
and
xchg
sbb
pop
mov
fst
xchg
mov
xor
mov
xor
jge
into
xchg
addb
push
push
add
les
xchg
scas
adc
hlt
pop
and
mov
dec
ret
mov
adc
mov
stos
dec
repz
cmpsl
int3
addr16
pop
jge
sub
add
lahf
cli
mov
cvtps2pi
nop
je
mov
push
lds
test
or
js
xchg
in
cli
scas
ret
dec
push
push
mov
dec
jp
jp
fidivl
inc
pop
cmp
mov
xchg
mov
or
jae
fwait
adc
push
adc
push
stc
jge
pop
call
mov
or
outsb
mov
jge
icebp
gs
bound
pop
rclb
popl
mov
add
xchg
rcrl
loopne
sahf
sbb
add
sbb
in
shl
das
adc
xchg
xchg
icebp
std
push
je
xlat
mov
movsb
xchg
arpl
jge
inc
daa
cmc
pop
gs
iret
mov
ror
in
push
mov
jl
jle
fstps
cmpsl
lea
add
inc
push
xor
jge
xor
pop
insb
in
push
and
ja
mov
mov
sarb
sbb
out
mov
cmp
call
mov
in
loopne
lock
imul
cld
and
push
into
aad
add
outsb
pushf
scas
ds
cmp
or
jnp
repnz
sub
sub
inc
add
int3
scas
jecxz
pop
stos
lds
add
rorb
or
jecxz
and
jo
or
out
dec
lds
fistpl
xor
push
pop
insl
adc
ljmp
fdivr
cmp
gs
mov
xor
je
pop
sbb
xchg
shll
sbb
cmp
mov
mov
ja
sahf
rolb
xor
jmp
jae
cmpsl
add
pop
test
push
push
push
mov
adc
test
sbb
adcb
jecxz
dec
int
lock
ret
ret
and
mov
mov
ja
cld
imul
popa
loope
ret
mov
rol
test
mov
cmp
outsb
and
or
sbb
mov
call
pop
imul
mov
dec
or
push
inc
incl
cmp
int
je
orb
push
ret
fmull
push
cmpsb
out
jb
sub
mov
and
out
mov
mov
lcall
cli
insb
sub
mov
cmpsb
sub
ds
ljmp
dec
out
mov
xor
lock
push
adc
enter
dec
sub
dec
movsl
arpl
inc
call
or
mulb
pop
shl
nop
les
imul
fsubl
push
xor
insl
push
aad
shlb
sti
orb
and
mov
les
sub
dec
sub
daa
xor
cmp
fucomi
repnz
iret
test
loope
adc
push
jo
jae
movsl
sbb
aam
mov
fyl2x
inc
xlat
cmp
lea
dec
loope
xor
sub
cli
add
shll
sar
arpl
push
jne
call
or
sbb
sbb
sbb
aad
pop
mov
jmp
orl
leave
adc
cmp
inc
icebp
insb
mov
add
add
push
daa
pop
jb
lahf
scas
ljmp
aam
push
adc
dec
xchg
frstor
fsubrs
test
push
add
cmp
dec
cmp
int
jle
test
add
fdivs
mov
xchg
pushf
mov
fs
idivb
mov
add
insl
jge
push
mov
cltd
dec
pop
ja
xchg
pop
test
hlt
jns
scas
ja
sub
and
pop
pop
mov
xchg
hlt
mov
aam
pop
xchg
jmp
jg
pop
xchg
lea
es
push
pop
hlt
imul
jecxz
int
sub
andb
adc
repz
mov
fs
ss
insb
cmp
ljmp
mov
push
pop
mov
cmp
and
outsl
daa
dec
cmp
and
xor
inc
pop
push
scas
xor
fsub
push
insl
outsb
lret
ljmp
adc
and
ret
je
lock
cmp
addr16
jp
mov
sub
idiv
mov
push
hlt
and
mov
mov
out
add
aam
sbb
add
and
mov
loopne
scas
pop
lcall
add
jle
lock
into
imul
aaa
push
and
add
pop
lahf
mov
push
xchg
fnsave
jge
xchg
int3
int
xchg
out
mov
add
test
fwait
xchg
sarb
outsl
lret
dec
inc
stos
dec
sbb
mov
call
nopl
dec
loope
imul
outsb
es
cmc
cmpsb
scas
jne
sarl
cmc
xor
sbb
pop
inc
fistps
add
ficompl
sub
mov
cmp
scas
cmp
icebp
sbb
xlat
mov
lcall
xor
xchg
mov
add
fsub
jmp
push
pop
test
icebp
mov
test
imul
cmp
sbb
movb
rcll
sbb
in
mov
and
ss
push
push
sarb
jmp
mov
fisubs
add
arpl
cmpsl
mov
mov
test
mov
test
test
adc
jb
insl
das
test
push
js
int
jl
mov
xor
ja
ss
inc
mov
cli
jno
addr16
nop
call
xor
into
jle
icebp
xor
inc
add
sarb
push
adc
call
inc
pop
rorl
lahf
sbb
pop
lahf
jo
cmp
cltd
jb
in
jle
dec
addr16
dec
mov
mov
jp
add
jo
scas
inc
xchg
or
bound
mov
push
imul
out
mov
jnp
jmp
or
icebp
pop
pop
pusha
movsb
call
or
pop
filds
pop
addb
cwtl
lock
pcmpeqb
mov
mov
fisubrs
jecxz
repnz
test
popa
cltd
fidivrs
mov
mov
dec
arpl
aam
or
pop
inc
dec
push
aas
test
sbb
enter
jo
jae
mov
repnz
mov
aad
outsb
jno
mov
ja
mov
aaa
into
int
out
pop
iret
test
inc
pushf
adc
popf
ljmp
dec
test
mov
std
add
mov
orl
xchg
jo
pop
sbb
lock
mov
in
jbe
adc
push
xor
xchg
shrl
push
mov
or
xor
cmp
fwait
xchg
insl
adc
mov
shlb
daa
mov
xlat
sbbb
adc
rcrl
lea
movsb
je
inc
mov
ficomps
fwait
push
cmp
js
incb
iret
std
xchg
frstor
xchg
lds
pop
and
or
test
dec
dec
push
dec
outsb
ror
clc
push
or
inc
aad
insb
adc
je
jp
or
scas
sahf
xor
xchg
inc
mov
push
lods
mov
sub
and
scas
ljmp
dec
loopne
cmp
sub
jne
jne
mov
in
repnz
enter
test
fistpll
hlt
into
push
loopne
pop
test
push
in
ja
jge
pop
aam
push
xchg
pop
imul
push
dec
mov
sbb
out
lds
sub
mov
leave
mov
and
mov
test
test
out
xchg
cs
je
ss
xor
inc
movsl
xor
xchg
loopne
push
loopne
cmp
popf
sbb
hlt
clc
hlt
nop
lret
xchg
adc
mov
push
add
pop
sbb
jp
imul
rcl
inc
cmp
in
out
ds
mov
repnz
jo
andb
cmp
mov
into
dec
cwtl
pop
stos
mov
int3
push
or
inc
mov
cltd
movsl
lock
das
cs
mov
test
outsl
push
xlat
xor
int3
pop
rcl
xor
adc
mov
mov
je
ffree
arpl
xchg
sub
xchg
dec
pextrw
and
scas
mov
and
add
and
cli
cmpsl
or
out
jae
push
pop
loope
mov
and
sbb
jl
jnp
popa
push
je
fbstp
lods
jmp
ja
pop
or
inc
mov
jmp
sbb
jo
mov
sbb
stc
int
xor
jae
dec
xchg
xchg
into
and
push
jo
xor
fmuls
xchg
nop
shrl
fldl
xor
adc
pop
push
pop
jge
pop
push
jmp
mov
push
xor
fiaddl
inc
mov
dec
or
mov
imul
adc
pop
andl
inc
scas
mov
ret
pop
hlt
adcl
jg
mov
sub
push
sub
pusha
sbb
inc
jae
add
xor
mov
inc
into
sti
mov
push
lods
loop
lock
sbb
in
aas
out
push
and
insb
in
mov
sarb
and
inc
out
and
mov
mov
outsl
xchg
in
xor
iret
inc
pop
fwait
rclb
bound
jns
mov
xchg
subb
andl
aam
jb
movsb
sahf
popf
sub
mov
das
cmpsb
ja
lods
mov
or
cld
fistl
adc
sub
loopne
fstp
inc
cvtpi2ps
fdivl
fisubrl
mov
and
movsb
jecxz
inc
and
clc
push
in
xacquire
sub
adc
mov
stos
and
lods
or
pop
xor
repnz
mov
push
popl
jbe
lcall
inc
leave
dec
sub
and
xor
jge
pop
pop
shlb
mov
arpl
push
and
pop
stos
mov
sbb
lea
adc
add
js
add
cli
test
adc
sti
fcomps
scas
jecxz
push
fidivs
jo
loopne
repz
scas
daa
les
adc
mov
outsl
jge
loop
or
es
outsb
jnp
inc
adc
dec
cmp
xorb
xor
xchg
inc
cs
jle
call
test
add
test
dec
push
sbb
xor
dec
xorl
push
popa
push
dec
sub
mov
ljmp
or
mov
push
lods
rcrl
jnp
jne
push
in
jg
sbb
aas
jo
mov
cmpsb
out
jp
clc
adc
or
jecxz
and
inc
mov
aas
cmp
xchg
daa
gs
cmpsb
sbb
jne
ret
popf
filds
push
cmp
out
les
testl
cmova
sar
addb
or
inc
mov
sbb
ds
test
cmp
nop
or
and
testb
mov
pop
jl
xchg
rcl
popf
je
xchg
cmp
and
imul
xlat
xchg
in
cmp
movl
cmpsl
mov
sbb
xor
test
call
stos
mov
clc
in
popa
das
add
jp
mov
sbb
or
inc
inc
push
jmp
add
andb
push
adc
jecxz
adc
gs
sub
jno
jp
mov
cmc
sbb
inc
bnd
xor
jmp
add
push
sarl
adc
stos
jmp
popa
push
repnz
push
xlat
cmp
cmp
push
mov
mov
cmpsb
call
lods
sahf
adc
insb
sbbb
aad
in
mov
sub
and
rorl
rclb
mov
jae
adc
inc
sub
cltd
adc
mov
scas
push
sub
aam
daa
inc
mov
pop
inc
aaa
mov
dec
adc
cli
rcll
sbbl
xchg
mov
xor
inc
xor
xchg
inc
call
or
daa
pop
or
jnp
add
aam
cmpl
aad
jecxz
lods
mov
jbe
mov
negl
fnstcw
cltd
je
mov
aam
jns
ljmp
clc
xchg
jge
mulb
incb
sbbb
inc
fs
or
push
mov
fwait
jmp
gs
push
pop
mov
mov
scas
clc
aad
jo
imul
push
aas
bound
mov
rclb
sub
cmp
sti
lret
pop
movsb
out
xchg
in
push
popa
enter
fisubrs
mov
addl
dec
adc
arpl
push
sbb
mov
iret
jo
and
shlb
addr16
je
aam
inc
xor
loop
stos
outsl
push
sbb
cs
cmp
push
xchg
pop
sbb
clc
sub
fmull
and
mov
adc
popa
push
pop
mov
into
outsl
pop
rcll
fnstenv
jg
mov
ret
jo
xor
cli
pop
fwait
adc
add
repz
push
sbb
mov
clts
add
in
mov
dec
pop
add
mov
xlat
out
packssdw
add
sbb
in
xchg
aad
mov
fdivr
std
mov
jl
dec
outsb
je
mov
inc
pop
rcrb
mov
push
mov
sbbl
fistl
scas
or
ficoms
inc
sbb
arpl
clc
mov
outsl
cmp
rorb
inc
mov
jmp
ficoms
xchg
les
inc
fdivrs
shr
sbbb
inc
das
sahf
lods
jg
jbe
movsb
loope
stc
inc
xor
xchg
adc
jae
sub
sbb
xor
setae
movsl
aas
test
pminub
std
test
int
dec
arpl
ficoml
xchg
push
jae
lret
mov
push
popf
push
xlat
lods
out
sbb
inc
add
shl
enter
pxor
or
mov
cmp
sbb
es
je
inc
mov
imul
cli
inc
or
sbb
mov
xchg
mov
lcall
fidivrl
sbb
insb
pop
aas
sub
sub
sub
pusha
pop
push
filds
inc
sub
cmp
sbb
sbb
sbb
xor
xor
idivb
pop
mov
push
push
xchg
inc
mov
into
pop
cmp
cmc
ljmp
outsb
jle
out
add
aaa
ljmp
xor
mov
pop
adc
mov
popa
test
iret
cli
hlt
pop
dec
repz
and
mov
ret
andl
nop
loope
ds
sti
sbb
pushf
xchg
push
fwait
sbb
pop
jle
loop
jp
cmpsb
sarl
add
mov
inc
push
jmp
sbbl
mov
roll
dec
or
push
inc
adc
fmuls
add
xchg
or
adc
mov
push
call
dec
cmpsl
push
inc
or
inc
test
add
inc
js
mov
ret
mov
jnp
xchg
xlat
imul
inc
cmc
lods
jo
jge
addr16
mov
push
xor
in
and
movsl
outsb
and
cwtl
push
cli
dec
jns
mov
je,pn
fmull
movsl
jns
fst
pop
ja
jge
jl
jg
fs
pop
push
push
dec
pop
add
mov
lock
mov
sbb
or
sub
outsb
rclb
xor
fld
sub
lcall
loop
cmpsl
addr16
das
loope
or
pop
shlb
cmp
cmp
jb
add
scas
mov
mov
fbstp
mov
jnp
jno
xchg
push
push
adc
pop
repnz
test
pop
cld
push
mov
jb
inc
adc
or
mov
inc
mov
je
loop
xchg
rclb
jae
xor
adc
dec
addr16
mov
sbb
ja
jle
mov
scas
mov
into
in
adc
pushf
test
push
push
push
fsubrl
xlat
push
pop
ret
jecxz
push
xor
in
and
dec
add
and
std
cmpsb
js
sarl
stc
cmp
imul
loopne
mov
cmp
or
gs
pusha
jmp
test
in
add
pop
xchg
pop
jge
jge
pop
dec
pusha
mov
mov
mov
xchg
adc
in
pop
xchg
roll
aaa
sub
cld
mov
les
mov
jno
clc
xchg
jo
pusha
dec
mov
and
mov
cmp
loop
jne
ss
out
mov
in
jmp
mov
outsb
cmp
cwtl
adc
test
fnsave
pop
mov
movq
addr16
push
shlb
or
xchg
cmp
mov
xor
xchg
dec
movl
cmp
out
test
mov
fnstsw
jl
add
xorl
mov
mov
inc
shrb
aad
or
sbb
jb
inc
jo
pop
popf
adc
out
jle
xchg
pop
popl
mov
cmp
test
les
stos
cmc
mov
iret
xor
inc
lods
xor
mov
xor
adc
xlat
pop
daa
adc
out
pop
sub
call
inc
or
fwait
mov
ja
int
cmp
daa
rcrb
cmp
adc
mov
imul
adcb
lcall
add
fnstenv
sbb
inc
inc
jnp
mov
std
adc
jae
shrl
pop
into
mov
rorl
cli
orl
inc
xor
negl
shl
rclb
pop
and
nop
clc
icebp
ret
sub
and
xchg
xchg
stc
jb
shll
and
xchg
testb
sti
scas
xchg
xor
cltd
clc
fmuls
jmp
pop
icebp
test
setno
jecxz
jno
add
stos
outsl
orb
jecxz
sub
test
addl
arpl
jge
ja
daa
aad
and
loopne
loop
aaa
shlb
pusha
out
lahf
dec
fnstsw
bswap
push
movsb
nop
andb
frstor
insb
inc
das
sbb
ljmp
sbb
repz
cmp
cltd
and
aam
pop
filds
dec
call
test
testb
lcall
push
fs
push
sbb
test
mov
pushf
les
cli
in
push
sub
mov
mov
jp
and
pop
inc
cmp
jo
les
pop
shll
cmc
icebp
dec
fsubrs
mov
jo
adc
sbb
shll
mov
jmp
arpl
rcl
clc
into
into
les
mov
in
xor
or
or
js
pop
mov
es
fwait
or
and
pop
addr16
leave
or
sti
bound
subb
inc
movsb
popf
das
xchg
daa
aam
ss
aad
push
popa
rcrl
sbb
xor
xchg
pop
xor
mov
mov
sar
xor
mov
add
adc
sub
inc
lea
lock
cmp
xor
push
insb
push
mov
mov
dec
ret
xor
cmp
cmc
fprem
mov
loop
adc
xor
and
mov
push
fsubrs
stos
loopne
xchg
cmp
sbb
rolb
push
mov
jns
pop
adc
pop
sbb
jg
fadd
mov
shr
and
rol
sbb
add
sbb
sti
fwait
dec
mov
hlt
or
repnz
mov
mov
mov
mov
outsb
inc
test
jae
clc
cmp
dec
in
fnstenv
pop
push
mov
and
leave
add
or
sub
mov
or
cmp
pop
xor
mov
iret
cwtl
xchg
xchg
mov
sahf
int3
inc
mov
imul
pop
cmp
push
push
gs
add
cmp
loopne
rorb
push
mov
jecxz
stos
lahf
push
roll
das
mov
or
adc
fistps
roll
jp
iret
inc
mov
stc
mov
sahf
lods
mov
shrb
fcomps
lock
ficomps
jmp
sub
sbb
enter
popa
arpl
pop
push
orl
aas
and
push
lret
mov
icebp
push
test
data16
pxor
xlat
mov
mov
clc
notb
mov
loop
enter
xor
mov
hlt
xor
insl
ret
fwait
lock
ja
or
jne
inc
mov
rcll
cmpsl
lods
lock
rclb
scas
xchg
pop
test
add
adc
lret
ret
lock
rcr
fdivs
mov
sbb
xor
inc
adcl
sub
xor
pop
out
sbbl
lret
fidivs
inc
sbb
add
jge
loope
mov
int3
and
sbb
lret
and
lock
cmp
cwtl
ljmp
push
pushw
inc
and
mov
ret
dec
int3
xchg
les
sahf
aam
xrelease
sub
test
das
mov
addr16
sbb
mov
js
rcrb
mov
jae
jns
dec
ds
mov
lock
sub
add
insl
xchg
ss
or
xlat
cmp
and
mov
add
sahf
mov
dec
lret
hlt
test
fldenv
mov
fdivs
in
in
pop
aam
sbb
movsl
mov
mov
xchg
mov
mov
scas
addr16
sub
xor
cmp
popa
ret
push
lds
mov
fwait
mov
clc
mov
push
fdivrl
ret
xchg
and
push
mov
cmp
mov
aad
add
inc
punpckhbw
xchg
daa
xor
add
dec
and
imull
shlb
jns
in
jns
das
mov
ja
int3
shrb
xor
add
hlt
idivb
cmpsl
push
xor
inc
sbb
mov
je
xchg
xchg
inc
adc
sub
mov
adc
clc
shlb
xchg
cmp
add
insb
rcl
xchg
add
mov
add
pop
mov
ss
mov
cwtl
jp
jle
mov
out
sub
mov
scas
jl
sbb
lock
push
jae
xchg
gs
xor
lcall
lcall
jmp
clc
add
popa
loop
mov
sub
pop
js
cli
push
mov
roll
push
mov
pop
push
sub
mov
sub
iret
pop
add
or
xchg
jp
jns
cmp
dec
adc
xchg
sub
and
pop
rclb
sbb
call
mov
cmp
sub
cmp
adc
mov
fsubr
iret
xor
jecxz
xor
xor
out
inc
icebp
outsl
test
in
mov
lcall
adc
add
mov
jecxz
loopne
pop
xor
outsb
sbb
pushf
data16
rorb
dec
out
test
sbb
testb
and
push
mull
cld
les
mov
sub
jmp
xor
loopne
fdivrs
jl
inc
mov
xor
insl
mov
cld
jno
cmp
mov
ss
adc
rclb
test
cmpl
sbb
xchg
cld
fisttpll
dec
hlt
push
sbb
mov
jae
fcoms
fistpl
rcr
add
xchg
mov
xor
pop
add
pop
ds
or
xchg
push
int
dec
aad
imulb
cmp
iret
mov
fisttpll
mov
cmp
dec
enter
loope
cwtl
dec
popf
hlt
fxch
idivl
sbb
fdivr
dec
test
mov
cli
jg
notl
cs
cmp
and
mov
jb
repnz
iret
push
mov
mov
push
pop
mov
sbb
dec
dec
adc
jnp
jns
lea
mov
out
test
and
enter
sub
mov
test
or
mov
xlat
sbb
mov
das
pop
sbb
lods
push
dec
add
dec
jmp
add
shufps
jb
and
jo
icebp
mov
nop
sub
mov
inc
mov
xchg
xor
fbld
jp
imull
inc
test
sub
jbe
in
adc
outsb
ret
gs
in
loope
add
subb
outsl
push
push
pop
and
mov
sbb
jl
mov
pop
push
and
popa
aas
cmpl
cmp
dec
in
in
daa
jle
mov
fstpl
dec
jbe
cmp
push
inc
add
ljmp
scas
ljmp
ds
sub
ret
cltd
fwait
outsb
mov
mov
push
sub
fwait
pop
mov
inc
add
arpl
inc
stc
dec
lret
push
sbb
mov
push
xor
and
mov
in
aaa
pop
add
mov
dec
in
push
jle
mov
aaa
pavgb
insb
sbb
fdivrs
add
mov
shrl
inc
jb
movsl
xchg
xchg
mov
pop
cmp
sbb
pushf
mov
fwait
push
lods
xchg
into
mov
push
mov
cmp
sbb
adc
or
int
xor
xor
fcomp
pop
xlat
adc
sub
push
lods
dec
xor
je
push
sbb
call
std
inc
mov
mov
cli
push
cmp
mov
sarl
mov
add
mov
mov
mov
mov
mov
inc
push
frstor
ffreep
pop
les
data16
add
jns
addl
xor
xchg
cmpsb
mov
pop
je
in
pop
rolb
dec
sbb
sahf
fstl
jge
adc
or
jno
test
aad
test
or
and
ljmp
xchg
push
adc
shll
outsl
loop
push
xor
loop
fnstcw
mov
shll
push
test
xorl
pusha
sub
fcomip
sbb
fstpt
add
add
inc
xor
notl
xor
add
cmp
dec
xor
mov
sub
ja
lea
cmp
bound
fmull
adc
xchg
xchg
sub
pop
add
insb
sahf
push
in
and
xor
xor
push
scas
test
stos
test
cld
lock
sbb
mov
cmc
addr16
shl
jecxz
or
mov
pop
sbb
pusha
jg
inc
cmp
icebp
push
addl
inc
fiaddl
cmc
cmc
fcoms
aaa
imul
andl
push
and
repz
cmp
sbb
js
jnp
adc
pop
lcall
insb
shrl
xor
adc
stc
sub
and
jl
negl
jo
push
or
mov
mov
xor
test
cwtl
in
push
arpl
outsl
cwtl
or
test
pop
cwtl
iret
cwtl
pushl
stos
call
mov
movsb
push
push
xchg
add
rcll
sbb
das
ficoms
dec
test
fcoml
icebp
dec
pop
mov
inc
mov
xor
shrl
cmp
adc
jle
decl
sub
sbb
fildl
lods
test
cmpsb
inc
push
push
ja
mov
aaa
fisttpll
fdivl
pop
aad
call
mov
cmpsb
in
pop
sbb
aam
in
cwtl
mov
notl
xchg
sbb
xchg
cs
mov
pop
add
loope
hlt
into
pop
mov
cmp
dec
outsl
inc
dec
xor
push
stos
mov
adc
rcl
sub
xchg
jge
xorb
cmpsl
jl
adc
dec
icebp
pop
sbb
clc
adc
pop
mov
mov
xor
mov
fcompl
movsl
stos
shll
mov
rorl
inc
ret
std
into
or
xchg
hlt
xchg
pop
mov
xlat
cmp
mov
mov
sub
ljmp
or
push
xchg
pop
cli
dec
clc
call
cmpsl
xor
sub
loope
add
loopne
dec
sbb
fcmovnb
sbb
and
pop
or
ss
mov
mov
rcll
loop
xlat
xlat
jbe
mov
enter
jmp
jno
push
sahf
aas
mov
and
mov
sbb
and
stc
mov
arpl
mov
sub
xchg
inc
fildll
cmpsl
lods
addl
jo
sbb
int3
scas
cmp
lea
ljmp
aam
shrb
iret
jb
pop
mov
js
xor
cmp
aad
andb
lock
mov
mov
and
sub
fisubrl
stos
stos
aas
jbe
push
add
movsl
addb
cs
adc
pop
push
inc
jp
aas
fistpll
subl
shrl
sub
pop
xlat
xor
lock
scas
mov
lahf
xor
clc
ja
adc
cli
add
sbb
in
popa
inc
mov
mov
bound
cmp
jo
pushl
pusha
sub
xchg
aas
inc
xor
fistps
jl
push
xchg
in
ret
inc
mov
stos
insl
dec
adc
or
test
xchg
movsb
ss
inc
insl
call
repz
xchg
imul
push
pop
mov
mov
mov
push
shl
adc
mov
cli
sti
in
or
jno
shll
or
sbb
jo
push
push
js
push
dec
xchg
fildll
and
pop
dec
cmp
fldl
xchg
cld
pop
inc
add
enter
push
ret
add
das
xor
sbb
mov
scas
and
xchg
iret
or
mov
nop
sub
les
pop
mov
and
mov
sbb
cltd
push
test
lar
in
lea
inc
adc
inc
shll
int
pop
cmpsl
dec
mov
pop
jbe
adc
pop
jle
mov
cs
pusha
out
cmp
inc
sub
adc
clc
aad
xor
sti
shr
and
xor
push
dec
aas
fwait
dec
loopne
mov
xchg
mov
push
outsb
sub
js
dec
shl
stc
or
insl
ret
mov
repz
data16
dec
and
hlt
inc
scas
gs
mov
movsl
arpl
or
mov
insl
movsb
mov
icebp
sub
cmpsb
inc
mov
fdivs
adc
scas
jg
or
repz
ljmp
and
mov
pop
inc
outsl
sub
jbe
cmp
loop
lds
enter
lock
ds
cmc
xchg
xchg
xchg
adc
push
in
notb
out
mov
je
ljmp
loopne
jns
inc
push
dec
xchg
je
jne
arpl
lock
mov
cs
adc
daa
jne
or
add
jb
adc
xchg
ds
lret
mov
fwait
jo
leave
stos
addl
jb
sub
add
les
sbb
sahf
sbb
lods
jb
xor
xor
aad
cmc
xor
xor
scas
jbe
add
out
cli
mov
stos
fisttps
dec
push
cld
mov
add
mov
mov
inc
je
mov
xchg
add
ds
fists
push
insl
sub
cltd
jbe
sub
aad
or
lock
mulb
sbb
mov
or
adc
jmp
popf
pop
repz
rcll
mov
pop
lods
jnp
lods
or
imul
push
dec
add
clc
mov
jle
fimull
adc
loop
sbb
mov
sub
cwtl
inc
xchg
cmp
mov
push
push
lret
cld
cmpsl
cmp
pop
leave
mov
xchg
es
fistl
fcoml
adc
sti
push
sbb
or
bound
insl
mov
mov
mov
sbb
clc
sub
fimuls
lret
jle
mov
daa
rcrb
jno
adc
adcb
lods
out
inc
cld
xor
ja
icebp
jge
lea
iret
out
lahf
mov
mov
sub
xchg
mov
popa
add
sbb
subb
bound
mov
sbb
test
gs
int
adcl
add
nop
push
sub
dec
ret
push
je
sbb
mov
lea
int3
jbe
or
arpl
push
lock
mov
pop
cmp
lcall
push
push
mov
ljmp
outsb
arpl
pop
out
js
icebp
fcoml
daa
das
jge
cmpsb
xchg
cwtl
dec
call
sbbl
jl
or
clc
shll
push
inc
cmp
push
jl
aad
popf
sbb
lock
out
into
xor
xor
inc
frstor
dec
jb
call
xor
inc
lds
repz
call
shrb
wbinvd
mov
psubd
mov
incb
add
imul
mov
cmp
test
fwait
cmp
cmp
ljmp
inc
in
jno
mov
pop
inc
pusha
fs
jge
push
jae
pop
adc
mov
pop
dec
xor
loopne
pushf
adc
sub
int
outsb
hlt
icebp
shll
rclb
fdivrs
or
cmpsb
or
movsl
inc
push
add
sub
das
das
inc
hlt
stos
cmp
ds
add
push
stos
pop
jge
stos
stos
pop
adc
jmp
inc
popf
push
dec
orb
cli
adc
in
dec
dec
or
xlat
movsl
fistps
xchg
mov
arpl
xchg
popa
pushf
pop
pop
pop
pop
insb
xor
lea
cmp
lahf
mov
adc
fwait
sbb
in
push
xor
mov
or
in
mov
addb
push
sbb
xor
or
loop
push
out
push
mov
pop
jno
loope
xor
dec
or
pop
jb
sbb
inc
std
mov
jnp
ret
sahf
jge
movsl
push
scas
and
xor
rol
add
mov
lcall
test
inc
sarb
subb
jae
jge
xor
mov
jo
mov
icebp
xor
fnstsw
jle
mov
iret
jmp
mov
adcb
add
fsubrs
inc
cli
aad
xlat
dec
sub
lahf
popf
mov
sub
push
call
inc
js
lret
xorl
adc
data16
ret
dec
adc
mov
push
adc
push
push
enter
mov
xor
stos
jnp
lahf
call
nop
adc
sub
call
mov
stos
bswap
sub
xor
ds
sbb
or
inc
in
push
decl
sub
out
subb
jo
adc
sub
lret
pop
cmp
lds
ss
adc
jbe
movsb
dec
imul
lods
xchg
orb
dec
popa
fs
and
jp
jle
sbb
and
mov
dec
scas
icebp
std
push
push
es
mwaitx
movsl
push
test
js
arpl
mov
mov
pushf
and
test
test
inc
xchg
pop
push
inc
pop
xor
in
arpl
inc
dec
movd
mov
sbb
insl
mov
aaa
bound
iret
ret
cmp
dec
mov
insb
ljmp
sarb
add
add
push
pextrw
lods
push
xor
xor
or
xchg
add
icebp
sbb
fadd
add
out
mov
mov
adc
lcall
jb
fsubrp
mov
fildl
jmp
lock
adc
addr16
daa
mov
push
jno
xchg
test
adc
sbb
test
scas
sbb
and
lret
inc
jge
mov
sub
and
test
xlat
in
lret
into
mov
push
mov
jno
mov
test
iret
std
mov
sbb
out
jns
xchg
icebp
icebp
dec
pop
andl
divl
fscale
lret
xchg
fwait
gs
js
jl
mov
mov
mov
xchg
sbb
push
imul
sbbl
adc
cmp
cmp
cmp
cmpsl
adc
fists
adc
adc
or
ret
pop
or
sbb
add
xchg
fimuls
sub
fimuls
cs
fwait
js
jno
fnstcw
ret
mov
stc
jns
lret
mov
lods
mov
and
das
mov
in
pop
mov
adc
dec
mov
inc
mov
fwait
push
out
jae
cmp
jp
add
mov
ss
inc
es
dec
icebp
add
cli
jno
push
es
pop
jmp
mov
pop
loopne
jo
loope
daa
mov
sti
insb
ficoms
sub
lock
out
mov
call
stos
popf
aad
adc
cmp
jno
dec
sbb
xchg
add
jecxz
cmp
cltd
or
popf
dec
imul
mov
adc
leave
inc
cmp
or
jnp
mov
fbld
test
jmp
xchg
les
dec
loopne
outsb
or
je
xchg
push
or
push
or
sub
insb
das
icebp
js
push
adc
data16
out
push
mov
sti
cmc
nop
cmpsl
dec
add
stos
out
test
mov
popa
xchg
minps
pop
cmpsl
dec
rclb
xchg
inc
inc
scas
frstor
sub
cmp
dec
sbb
pop
mov
lcall
pusha
ja
popf
dec
out
rcr
lock
or
aaa
stos
movsl
sbb
mov
push
testl
in
inc
ret
subb
xchg
negl
mov
fsubs
daa
xchg
lods
cmpsb
outsb
clc
pusha
popa
cmc
icebp
jle
or
leave
mov
xchg
sti
icebp
push
mov
ljmp
push
dec
push
fildl
loop
inc
mov
div
roll
sbb
xchg
mov
mov
push
cmp
fdivl
pop
mov
mov
inc
int3
push
imul
sbb
mov
pop
bound
mov
jg
mov
rclb
cmp
jnp
int
stc
push
mov
out
and
call
int
sbb
pop
xchg
jbe,pn
mov
testb
mov
sbb
fisubl
cltd
xchg
movsl
dec
or
fucom
cwtl
xchg
clc
pop
mov
cltd
mov
pop
sarb
mov
xchg
insb
xor
ds
jo
cmp
xchg
mov
inc
jl
jge
xchg
and
mov
enter
faddl
ss
shll
loop
add
je
add
xor
loope
jle
pop
xchg
push
jmp
gs
jle
or
mov
decb
or
and
shrb
call
stc
lods
cmc
or
aam
xchg
push
les
mov
std
mov
mov
cmp
call
jns
test
das
jbe
imul
loope
js
cmp
dec
inc
and
or
dec
in
lods
sub
mov
movsl
in
add
shr
mov
xchg
or
pop
pop
cmp
mov
push
adc
jl
mov
das
es
call
in
nop
push
pop
roll
push
jle
add
mov
push
jecxz
xchg
sbb
dec
js
cld
sarb
sub
rep
mov
fbstp
sbb
lahf
iret
lahf
mov
je
mov
mov
pop
dec
movsb
xor
mov
dec
and
addr16
aam
push
pop
push
jge
sbb
bound
push
inc
scas
jl
fisubl
subl
jae
popa
or
jmp
imull
jbe
hlt
adc
iret
inc
movsl
int
and
xor
mov
jbe
adc
xor
out
push
mov
jle
inc
je
jb
add
add
or
dec
insl
cmp
outsl
add
aad
test
push
daa
lds
push
mov
ss
sbb
mov
jno
outsl
inc
rcll
adc
jo
je
fwait
gs
leave
push
push
sahf
mov
outsl
leave
in
cmp
push
cld
cmp
or
pop
pop
pop
cs
mov
push
lahf
es
adc
ds
out
mov
or
mov
arpl
and
pop
or
inc
pop
js
call
dec
xchg
mov
cmp
lods
ja
fcomps
lfs
mov
incl
mov
fidivs
repnz
orb
fildll
cmpsl
pop
and
imul
xor
out
pusha
andl
jo
lock
xchg
insb
sbb
sbb
jns
lcall
loop
add
jg
pop
test
jne
test
into
and
jp
call
mov
cmp
dec
lahf
dec
inc
stc
lahf
inc
and
shlb
popf
xlat
add
inc
dec
sahf
enter
xchg
call
jl
arpl
jle
out
loopne
dec
pop
push
lahf
movl
mov
loop
fdivs
sub
push
loopne
vmaxpd
push
into
das
ljmp
mov
mov
sbb
add
in
cmpsl
jle
stc
loop
sbb
jge
or
inc
push
addr16
ret
inc
pop
cwtl
cmp
push
dec
cli
add
inc
test
cmc
pop
fsubrs
xchg
inc
mov
mov
in
outsl
jno
mov
pop
sub
lock
fistpl
lret
clc
sahf
push
mov
sbb
cmp
clc
xchg
sbb
dec
outsb
bound
and
insl
inc
lock
push
out
inc
aam
ficoms
and
jbe
mov
jno
idivl
jne
into
or
inc
or
iret
clc
cmpsb
dec
jno
sub
leave
call
xor
lcall
jp
inc
mov
fldt
mov
inc
adc
jl
rorl
mov
xchg
xor
hlt
push
xsaves
dec
int
ret
jbe
xchg
sahf
and
add
mov
jne
sub
cs
inc
mov
sub
jne
cltd
pop
frstor
pop
inc
cltd
icebp
add
pop
pop
pop
out
sub
xor
insl
push
ja
test
jge
xchg
sahf
cs
movsl
cmp
mov
push
sarl
pop
das
add
mov
cmp
cmpsl
leave
xor
add
fwait
push
loop
pop
js
add
call
sub
pop
lock
cmc
add
stos
sbb
fstl
cmp
test
sbb
imul
aaa
xchg
push
subl
das
jb
sbb
sti
jmp
mov
pop
cmp
inc
pop
or
iret
jl
lret
hlt
cmp
pop
aad
mov
shlb
add
divb
pop
adc
cmpl
out
test
in
sub
js
and
xchg
in
js
lret
inc
adc
test
pop
fidivrl
cmp
and
dec
cld
fimull
mov
popa
out
push
xchg
clc
insb
mov
sbb
sbb
fidivl
into
ja
lods
popl
or
xchg
sub
aam
dec
cmpxchg8b
loopne
fs
fwait
dec
jg
aas
sbb
test
das
mov
xchg
add
cmpsl
and
insb
inc
cmp
ret
movsb
out
ret
in
and
test
lods
cwtl
jne
clc
jb
xor
bound
adc
int3
dec
mov
dec
push
inc
test
ss
enter
bound
in
sbbl
iret
jmp
sti
pop
xlat
dec
pop
jg
mov
mov
jl
je
mov
push
xor
or
add
rcll
andb
push
adc
jb
dec
xor
ss
pop
scas
orb
and
je
mov
insl
push
mov
sub
and
fisttpl
call
movsb
xor
jbe
push
mov
int3
dec
mov
sbb
shll
cmp
in
lret
loopne
fsubl
inc
and
sbb
call
lahf
mov
mov
out
roll
pop
xchg
ret
repz
dec
mov
movsl
lock
mov
aam
notb
ds
pop
movsb
adc
shl
cmp
lret
push
inc
into
loopne
hlt
scas
subl
sub
push
pop
sbb
mov
mov
or
pop
fcmovb
jmp
stos
push
mov
mov
lds
popf
adc
cmp
or
loop
adc
rcrl
push
mov
arpl
sub
push
and
cli
shrb
dec
pop
jo
inc
xor
adc
inc
aam
mov
pop
fstps
outsl
xchg
loop
fisubrl
pop
mov
sti
push
shlb
test
add
adc
shll
imulb
sbb
jo
cs
mov
loop
jp
xlat
sub
jmp
mov
mov
js
fmull
inc
mov
fwait
pop
xchg
ret
aam
mov
in
shrl
mov
shl
lock
add
rcrl
je
cmc
movsb
loopne
and
sbb
sahf
cli
mov
push
pop
adc
or
lods
pop
shlb
test
mov
loope
call
fs
sbb
cld
sbb
jmp
mov
add
out
rorb
adc
xorl
adc
stos
or
lock
cld
push
and
or
add
cmpl
call
dec
cmpsb
add
inc
repz
pushf
test
xchg
pop
insb
and
xchg
pop
hlt
int
sbb
pop
ficomps
data16
call
shlb
inc
mov
pop
cli
cmp
ss
outsb
jg
stos
push
fnsave
loopne
call
je
or
ret
lcall
fdivrp
lcall
dec
cmpsl
je
outsb
sub
dec
cmp
push
sbb
test
sub
aas
call
jo
fidivs
ret
clc
andb
cmp
shr
jmp
shlb
adc
mov
mov
je
sarb
cmp
mov
add
rolb
arpl
mov
mov
clc
mov
movl
outsb
int
dec
mov
lahf
inc
xchg
aam
shll
js
mov
sti
ficoms
jbe
nop
jno
pop
mov
shr
icebp
mov
adc
enter
pop
aaa
inc
in
lret
test
loop
add
dec
ret
dec
sbb
leave
loope
mov
mov
iret
imul
xlat
jb
cs
push
mov
xor
mov
addr16
das
insl
aas
out
fildll
adc
mov
repz
lods
jl
ffree
cmp
popl
gs
aaa
pop
fbld
movsb
sub
cwtl
movsb
cmc
jl
psubb
inc
cmpsl
mov
in
mov
jmp
loope
xor
test
mov
xorl
inc
add
mov
pushf
test
push
pop
loop
push
mov
stc
cwtl
nop
sbb
lds
xor
test
cmc
sahf
add
pop
xchg
fwait
push
cs
cwtl
and
jae
hlt
inc
mov
or
addb
adc
mov
sub
lock
loop
inc
aam
outsl
pushf
push
push
jns
adc
js
pusha
xchg
or
sub
stos
push
lock
xchg
loop
cli
clc
testb
push
js,pt
sti
mov
xor
stos
fiaddl
and
inc
shlb
hlt
push
jne
subb
push
dec
call
adc
xchg
xor
lea
mov
push
fwait
jmp
repz
lea
push
mov
in
add
add
outsl
push
pop
cmp
je
pand
call
out
push
dec
iret
fsubrl
pop
push
pusha
xchg
fucomp
sbbl
adc
test
test
add
inc
ljmp
les
cmpsl
cmpsl
ret
aas
cmp
jmp
cmpsl
lahf
test
cmpsl
sub
sbb
cmpsl
stos
bound
jle
adc
mov
jae
shrl
js
push
inc
test
xor
icebp
mov
xchg
popf
adcl
fsubl
sub
cmp
test
dec
hlt
pop
mov
pop
imul
sti
xlat
xchg
sbb
xchg
aas
rorl
mov
jp
out
repnz
push
jns
call
xorb
dec
popa
cmp
insb
pusha
push
sti
xchg
or
les
roll
mov
ds
int3
pop
jbe
fcoms
mov
xchg
dec
iret
adc
and
sbbl
fwait
pop
nop
mov
rcr
push
mov
cmpsl
stos
addr16
gs
or
mov
sub
scas
cmp
aaa
outsb
insb
in
jnp
fcoml
xor
inc
imul
jne
inc
sbb
pop
mov
inc
repz
hlt
stc
out
jecxz
pop
pop
mov
adc
fsubrs
mov
in
adc
mov
inc
pop
insb
les
subb
sbb
mov
shll
addr16
push
loope
sbb
cwtl
mov
movsb
xlat
jg
jne
cld
xchg
mov
dec
push
mov
mov
pop
fs
lods
ja
shll
ja
lock
hlt
arpl
fucomip
sbbb
xor
mov
pop
aaa
int
or
inc
xlat
sbb
lahf
bound
ds
sbb
bound
xadd
call
cmp
pop
setae
pop
mov
scas
mov
loopne
lahf
in
jp
and
test
push
xor
std
xchg
push
loopne
add
push
arpl
mov
inc
jl
cli
clc
mov
aam
lock
push
ret
das
iret
sub
hlt
pop
mov
add
lret
js
outsb
mov
add
push
insb
dec
shlb
loop
lds
je
pop
scas
push
scas
pop
out
addr16
inc
mov
test
jmp
inc
and
cwtl
push
push
or
inc
aam
cmp
sbb
inc
xchg
push
pop
mov
roll
je
mull
ljmp
sbb
xchg
js
mov
call
push
test
clc
pop
xchg
lcall
mov
js
adc
add
sahf
cld
cmpsb
adc
jbe
push
nop
mov
stos
mov
ljmp
enter
lods
insb
iret
daa
inc
dec
jmp
pop
inc
imul
or
mov
mov
fdivrl
imul
sarl
cmp
nop
xchg
ret
fmull
dec
pop
hlt
cmc
fwait
int3
mov
in
mov
push
adc
aaa
outsb
pushf
inc
xor
inc
repnz
stc
ret
dec
xchg
ss
mov
sub
push
cmp
sub
lea
in
notb
mov
adc
or
or
in
js
xor
or
loop
jle
push
push
das
push
roll
xor
inc
mov
fcmovnb
mov
lahf
subb
mov
jne
loope
imul
pushf
cmpsl
xchg
xor
or
stos
pusha
int3
push
mov
pop
clc
push
dec
addb
lcall
xor
push
xor
sub
inc
cmc
inc
test
adc
adc
mov
push
mov
or
lods
cmp
jbe
jmp
mov
cltd
add
idivb
dec
sti
lret
xchg
xchg
in
loop
xlat
lods
mov
sub
cmp
in
push
lds
push
xor
dec
pand
inc
cwtl
inc
push
xor
sub
outsb
nop
ret
and
mov
adc
xor
fwait
cli
test
xchg
or
ljmp
mov
xor
or
ret
pop
rclb
jp
mov
aaa
push
inc
or
icebp
test
mov
loope
push
pop
cmp
jne
call
xor
shl
loopne
inc
shr
cltd
pop
jo
push
mov
pop
xchg
mov
xor
mov
push
inc
xor
and
xchg
push
mov
pop
icebp
jno
daa
ss
sub
aaa
std
pmuludq
pop
add
iret
add
or
push
lock
pop
sahf
ret
sub
pop
cltd
mov
push
adc
mov
pop
rorl
pop
test
fbld
loop
inc
arpl
jge
jb
loope
out
adc
mov
pop
std
les
pop
mov
cmp
push
mov
into
cmpsb
dec
lcall
fisttpll
xchg
dec
insb
outsl
xchg
add
mov
inc
dec
push
mov
inc
loopne
push
cmp
xor
scas
test
loope
fcomi
push
pop
data16
inc
mov
lea
push
and
mov
xchg
add
cmp
sub
aad
xlat
jge
jle
push
xchg
nop
mov
push
dec
sbb
ret
and
cmp
imul
cmp
pop
aam
mov
lret
adc
or
or
xor
cmp
pusha
jecxz
mov
inc
or
add
out
mov
imul
push
xor
sbb
loop
loope
cmp
or
pop
shr
adc
xor
xchg
jp
sbb
hlt
adc
andb
mov
icebp
or
scas
sub
ja
sbb
divl
fiaddl
adc
scas
or
les
push
mov
or
jmp
jo
fdivp
sahf
cmp
pop
add
mov
jbe
ja
pusha
push
pop
mov
mov
call
cltd
in
lea
push
repnz
mov
clc
lock
lahf
jl
lds
ret
sub
cmp
pusha
xchg
aas
add
cmp
leave
sub
sbb
scas
movsb
popa
and
clc
cli
adc
sti
imul
lahf
mov
cld
inc
ret
pop
add
sbb
scas
test
ret
jae
mov
xor
repnz
je
sbb
aam
std
push
sub
ds
jb
sbb
fiaddl
pop
push
sub
movsl
test
mov
xor
movsl
dec
jne
enter
imul
js
nop
add
push
ficoml
push
clc
push
inc
clc
xor
loope
dec
popf
test
sbb
lret
mov
dec
rorb
add
lahf
outsl
fwait
jp
test
pop
inc
mov
cld
dec
fisttpll
clc
xor
int
stc
int
mov
xlat
cmp
jp
and
sub
push
mov
stos
inc
insb
pop
and
lods
arpl
dec
mov
add
iret
xchg
int
fistpl
push
je
loop
sbbb
shll
mov
daa
outsb
lock
mov
out
pop
sbb
add
ss
pop
push
inc
mov
movl
adc
push
loop
xor
jmp
push
xchg
inc
scas
and
cmp
int
inc
push
push
stos
jp
mov
inc
push
xor
sbb
xor
dec
fnstenv
push
add
or
xchg
fistl
aaa
je
jecxz
dec
sbb
loop
mov
cltd
or
dec
cmp
popa
inc
clc
mov
jb
sbb
stos
jbe
mov
push
push
insb
pop
roll
mov
fisubrs
hlt
adc
mov
mov
icebp
test
and
fdivrl
inc
jne
mov
call
sbb
or
jp
push
sub
out
mov
sarb
xor
fwait
cmp
mov
mov
jae
scas
mov
cltd
ss
sti
add
mov
out
jmp
ds
shlb
cli
mov
fucomi
adc
out
add
fcomps
scas
lret
js
test
dec
jl
mov
andl
gs
fnsave
inc
loope
adc
nop
gs
adc
cmpsl
mov
or
inc
inc
test
jl
roll
xlat
xchg
mov
repnz
jmp
mov
std
dec
sub
and
fidivrl
jo
xlat
pop
jns
sar
mov
test
outsb
cmp
test
push
in
in
mov
mov
in
fcom
xor
shr
jl
pop
imul
ficoms
mov
nop
rorl
fcmovnbe
mov
inc
insl
push
call
popa
add
adc
ljmp
lret
insl
js
inc
mov
adcl
jb
xor
mov
sbb
mov
inc
test
sbb
fadd
pop
mov
push
xor
js
in
bts
xchg
wbinvd
ja
dec
shlb
cmp
test
insl
call
in
cli
loop
repnz
pop
adc
lcall
or
jg
and
shl
inc
test
faddl
push
sarb
pop
fldl
les
inc
jnp,pn
aad
sbb
jne
add
sbb
imul
mov
loop
jbe
mov
mov
or
sbb
mov
inc
sbb
pop
cwtl
stc
mov
fisubs
push
fildl
dec
and
cmpsb
and
and
mov
ja
lret
jmp
shrb
jbe
sub
cmovb
iret
cmp
mov
adc
and
icebp
call
jg
push
inc
insb
add
out
jg
in
push
xchg
mov
adc
push
aaa
ljmp
dec
pop
mov
inc
in
add
add
mov
add
pop
ficoml
arpl
inc
jae
nop
cmpsl
and
inc
dec
test
push
xor
push
js
xchg
pop
call
sti
aas
imul
or
sbb
addb
dec
pop
sub
cs
dec
iret
in
icebp
cmp
ja
mov
or
jle
sub
mov
and
add
leave
ljmp
dec
js
add
mov
icebp
fdivl
pop
ret
mov
aam
sub
sbb
xor
aas
stos
mov
ja
xor
adc
xchg
outsl
adc
pop
lock
add
and
mov
scas
sbbb
pop
sbb
mov
mov
test
push
lods
out
addb
lods
push
aas
cmpl
orb
nop
aam
je
out
mov
insl
insb
mov
adc
add
mov
arpl
test
sbb
pop
call
xor
lds
xchg
mov
or
xchg
aad
cmp
xor
adc
sarb
cltd
popa
enter
sub
cmpsl
push
loopne
or
push
andb
or
or
adc
and
jl
aas
mov
test
sar
mov
xchg
xor
nop
test
cmp
inc
call
ret
out
push
mov
dec
dec
mov
sbb
xchg
clc
mov
outsb
jnp
adc
sub
pop
mov
push
lea
lret
push
push
shlb
inc
add
mov
call
add
mov
sbb
dec
add
xchg
shr
pop
clc
stc
xor
dec
push
dec
jb
clc
inc
adc
mov
cmp
aaa
push
imul
inc
xchg
mov
es
ljmp
xorl
jg
sbb
mov
push
push
mov
cld
adc
jle
mov
sbb
jge
repz
cmp
mov
fisubrl
dec
dec
ds
cmp
jecxz
mov
add
fwait
add
mov
adc
stos
mov
push
lock
push
jns
fucom
ret
xor
jo
pop
pusha
jne
sti
hlt
inc
push
fcoml
in
sub
loop
std
xchg
xlat
stc
test
and
dec
lea
lret
inc
popf
jmp
pop
stos
in
cld
roll
pop
stos
setbe
jns
sub
test
in
adc
adc
pop
mov
push
xchg
rcll
xchg
pop
nop
lock
pusha
add
jmp
insb
inc
aad
repnz
popf
loopne
push
mov
ljmp
es
ror
loopne
daa
adc
sahf
mov
or
sub
mov
ret
sub
push
cmp
inc
and
ss
lods
sub
push
or
inc
into
out
clc
in
pop
or
lods
dec
dec
jmp
sub
jae
mov
push
imul
dec
bound
ss
sub
fidivs
sub
hlt
loopne
cmpsb
push
lahf
lcall
test
or
popa
das
fwait
test
xchg
aas
sbbl
aad
inc
std
aam
xor
mov
or
test
je
mov
mov
sbb
mov
ja
popf
mov
fcomp
fcomip
lea
frstor
pop
pop
mov
adc
cmp
inc
and
daa
mov
ja
add
rcrl
imul
mov
dec
inc
outsl
pop
mov
jae
push
je
fdivs
loop
jmp
and
rorl
add
fcmovne
js
je
cmc
inc
sbb
sub
pop
pop
mov
dec
mov
jb
sahf
aaa
in
mov
std
xchg
mov
and
inc
popf
mov
cmp
int
mov
hlt
dec
push
loope
jmp
in
pop
or
repnz
cmc
cs
dec
mov
sub
or
lock
or
mov
lods
or
ret
ljmp
mov
and
jno
out
js
arpl
cmp
fildl
hlt
arpl
cmp
or
mov
cltd
aam
jbe
icebp
ds
inc
cmp
sbb
lahf
insb
cmpsb
xor
cmc
dec
lods
inc
inc
or
inc
inc
mov
inc
outsl
mov
test
xchg
rclb
cmp
bound
les
mov
sti
or
dec
aas
lea
cmp
push
jo
movsb
mov
daa
add
fs
in
or
addb
xlat
add
dec
mov
add
push
inc
jge
add
sbb
pop
lods
mov
sti
movsb
mov
in
mov
sub
push
out
pusha
arpl
adc
cmpsb
cmp
and
popf
mov
in
sbb
jo
adc
pop
dec
fs
js
mov
adc
sbb
adc
jmp
das
jecxz
dec
xor
leave
rorl
xor
outsb
nop
xor
ja
out
mov
dec
fdiv
mov
test
inc
sub
shrl
mov
stc
add
push
stos
sar
popl
inc
lock
cs
jae
sbb
sub
cmp
inc
mov
ficoms
or
addr16
test
dec
fidivs
adc
movsb
ss
mov
sbb
iret
inc
mov
imull
inc
scas
sbbl
lock
jmp
xorb
jne
jmp
and
imul
inc
xor
cmp
push
jae
or
xor
inc
pop
ja
dec
push
hlt
hlt
aad
push
movsb
loopne
push
stos
int3
sbb
mov
daa
adc
lret
and
dec
repz
out
dec
mov
mov
flds
dec
lods
mov
testl
je
inc
mov
stos
or
inc
jne
notb
insb
shll
jmp
mov
mov
movhps
inc
jno
cs
add
sarl
mov
arpl
fwait
cmp
mov
faddl
clc
ss
fidivrs
mov
inc
leave
fmul
insl
xlat
jb
test
mov
enter
xchg
jno
mov
push
iret
pop
ss
loopne
popa
in
mov
in
fstl
js
nopl
cmc
fwait
add
adc
push
cmp
int3
mov
orl
cmp
push
pop
or
loop
adc
mov
insl
mov
ds
and
adc
notl
and
js
in
xor
and
pop
adc
int
mov
aas
das
rol
jo
out
adc
clc
mov
out
mov
rcll
mov
outsb
fwait
test
lds
test
ret
add
test
push
ljmp
and
pop
sbb
std
and
cli
mov
stc
mov
mov
jge
aad
mov
scas
imul
mov
or
mov
sub
and
xchg
rolb
push
mov
iret
fsub
lods
sbb
push
mov
mov
fwait
pop
arpl
xchg
inc
call
aaa
test
in
lcall
push
leave
sbb
jge
mov
xor
or
arpl
push
das
repz
sub
loopne
push
lock
xchg
popl
push
mov
adc
cmc
dec
rcl
scas
scas
pop
je
mov
jp
test
jbe
clc
divl
shl
test
and
popa
pusha
inc
ss
cmp
push
push
dec
push
pop
or
xchg
xchg
sub
add
stos
cltd
xchg
push
stos
cmc
mov
cli
xor
fadds
inc
arpl
cwtl
jge
or
loope
jge
jp
test
push
sub
out
add
hlt
cmp
pushf
shlb
ftst
mov
sub
gs
xor
insb
dec
cmp
incb
daa
dec
les
mov
pop
and
sahf
sbb
inc
pop
dec
insb
mov
ljmp
push
in
dec
aad
inc
mov
icebp
clc
aas
inc
mov
adc
and
in
xchg
js
or
dec
insl
pop
dec
aas
mov
sahf
add
inc
add
xor
jp
or
lds
jecxz
mov
mov
sbb
add
jne
or
inc
xor
movsb
inc
insb
jno
je
inc
lea
inc
xchg
inc
das
add
fstpt
xchg
inc
mov
jge
sub
icebp
scas
aam
xor
insb
je
testb
iret
ds
cmp
loop
ret
or
mov
bound
fwait
ds
out
ds
inc
enter
subb
sub
arpl
mov
dec
jmp
ret
jg
das
ret
popa
or
sub
andb
and
inc
clc
call
int3
adc
jmp
inc
cwtl
pop
add
aam
cwtl
arpl
lgs
in
rorl
dec
mov
rcrl
les
in
add
or
iret
mov
inc
dec
jb
jne
adc
jbe
push
shll
aad
inc
sub
jge
ss
ljmp
test
stos
pop
add
push
sbb
mov
cmp
pop
faddp
cmp
push
xor
jmp
in
cmp
push
push
push
leave
sub
add
inc
pmulhuw
jae
fdivrp
fldpi
es
mov
or
lods
pop
inc
sbb
dec
addr16
jmp
notl
cmp
or
mov
xchg
jbe
adc
adc
cmp
shr
sub
mov
ljmp
pop
pop
bound
dec
pop
shlb
movsl
outsl
fiadds
fisubl
cmp
ret
into
push
out
push
test
testb
sub
lds
popa
clc
lds
arpl
std
push
fdivrs
fisttps
sub
add
mov
arpl
enter
push
dec
and
cmpsb
mov
push
adc
adcl
dec
hlt
repz
iret
mov
sub
sub
dec
push
xor
push
pop
je
out
add
mov
test
jae
xlat
sahf
pop
sbb
xchg
xchg
lds
push
shll
subb
mov
js
pop
adc
push
shll
std
imul
pcmpeqb
sti
in
inc
xchg
dec
lods
mov
mov
stos
pop
in
xchg
dec
jl
pop
or
and
rolb
mov
jg
repnz
sbb
lret
and
xchg
pop
add
pop
shl
jl
mov
scas
enter
ret
mov
stos
pop
fidivl
shrl
lcall
fs
jno
inc
outsb
ret
outsb
loope
testb
push
ja
mov
mov
mov
pop
outsl
outsb
nop
pop
or
add
jle
cmpsl
fisubrs
push
pop
and
xrelease
aaa
lds
adc
xchg
cmpsl
push
and
fcmovbe
mov
mov
fistps
fs
popf
fdivs
fwait
in
inc
lock
and
xchg
mov
fldl
and
jge
inc
or
xchg
addr16
inc
xchg
sub
insb
cmp
lods
adc
xchg
lock
sub
stos
push
popf
out
pop
fwait
push
jnp
pushf
push
cmp
pop
aas
dec
adc
lods
adc
scas
push
mov
jno
pop
add
movsl
notb
bswap
lcall
dec
mov
out
icebp
sbb
loopne
xor
adc
out
ficoms
lret
dec
inc
cmp
sbb
scas
push
mov
pushf
in
adc
adc
rclb
andb
lods
test
dec
jl
addl
xchg
aaa
cltd
inc
roll
pop
jmp
fcomp
mov
sbb
mov
sbb
dec
jno
insb
loope
jbe
test
or
jge
mov
or
sub
je
mov
lds
cmp
arpl
fldenv
add
loope
xlat
inc
orl
pop
ljmp
loopne
adc
cmp
dec
repnz
sar
std
ljmp
xchg
push
dec
inc
jg
or
mov
add
push
mov
dec
cld
add
aam
xchg
adc
in
adc
adc
shr
ljmp
mov
sub
ljmp
invd
lcall
pop
fdivrl
dec
adc
xchg
sbb
pop
dec
mov
rorb
fadd
mov
bound
filds
xchg
js
dec
inc
mov
push
pop
dec
js
stos
clc
and
insb
inc
adc
add
aaa
dec
lds
addb
call
shrl
test
adc
xchg
rorb
leave
ss
cmp
push
jge
jg
fstl
push
popf
clc
sbb
ja
sbb
notb
inc
xchg
sub
test
sub
sti
xor
cmpsl
push
mov
stos
loop
mov
fimull
rcrl
out
rcrl
mov
pop
push
and
inc
fsubs
fdivs
inc
gs
pop
in
test
in
sub
mov
imul
aam
cmp
outsb
in
push
adc
sub
push
fcoms
mov
mov
mov
add
xchg
push
adc
cmp
push
out
mov
dec
or
sbb
inc
mov
lahf
xchg
cmp
inc
jb
mov
ret
cmp
mov
int
cmp
aam
rcrb
into
mov
loop
sub
ja
and
aam
imul
lds
push
xor
ss
xor
xor
aas
cmp
jge
mov
roll
mov
dec
xor
arpl
mov
roll
bound
add
insl
sub
and
inc
inc
cwtl
mov
mov
jl
xor
arpl
jbe
loop
popf
jecxz
jbe
push
fsts
jecxz
pop
ss
push
sbb
xchg
and
jecxz
push
cmc
xor
out
jp
sub
pop
imul
or
push
dec
push
lcall
inc
jnp
fwait
sarl
cltd
fimuls
add
sub
test
and
mov
cmc
sub
adc
mov
pop
ret
mov
sti
iret
outsb
xchg
adc
out
jl
cmp
sbbb
divl
inc
iret
or
push
sbb
jne
adc
mov
add
ficoms
ljmp
int3
and
pop
add
dec
test
xchg
xlat
shrb
mov
inc
scas
jo
pop
adc
nop
sub
mov
test
pop
add
bound
pop
movsb
dec
rclb
mov
cli
mov
sub
fadd
repnz
jge
aaa
inc
jge
daa
sub
out
call
jmp
loopne
stos
shrl
mov
in
mov
cltd
jmp
mov
std
or
test
cmpb
jb
add
test
xchg
dec
dec
je
xlat
stos
loop
dec
loopne
mov
bound
into
cmp
lret
jne
leave
cmp
jmp
ret
add
jle
inc
inc
inc
mov
jmp
inc
fdiv
mov
movsl
xor
push
xor
ret
push
sub
daa
push
sbb
xchg
xchg
push
xor
dec
sbb
lahf
ds
add
cmp
xchg
add
inc
adc
jns
xor
adc
dec
test
nop
setp
xorl
add
sub
pop
add
cmpsl
jns
lret
ficompl
shr
lea
mov
das
mov
mov
mov
repz
fdivrp
clc
fisubrl
rcl
mov
xchg
add
icebp
xor
xlat
push
mov
outsl
dec
ljmp
pop
xchg
push
cmp
ljmp
push
add
sub
push
scas
adc
test
sbb
or
roll
xor
pop
iret
jae
xchg
and
inc
js
roll
xchg
dec
fwait
aam
es
cmpsl
scas
in
and
push
bound
push
aad
xor
lds
pop
jp
mov
xor
fcompl
outsb
in
sbb
nop
pusha
lock
mov
fidivs
sub
fwait
jl
ja
or
mov
xchg
pushf
xor
dec
sbb
xchg
add
pop
adc
jo
mov
dec
jo
lock
dec
xchg
dec
add
lea
cmp
mov
in
fdivs
std
lds
jo
test
xchg
xor
sub
xchg
sbb
mov
into
lahf
insl
mov
mov
test
adc
subb
dec
popa
jecxz
out
fldenv
pop
adc
mov
ds
adc
or
xor
out
mov
out
push
or
cmp
cli
dec
push
fld
jecxz
es
lds
add
xorb
jns
xor
rolb
adc
clc
test
mov
jae
clc
icebp
shrl
mov
jl
xchg
mov
stos
xchg
orb
jno
outsb
popa
ret
cmp
push
enter
inc
add
arpl
xchg
cli
andl
call
pop
decl
dec
jne
add
enter
xor
shl
push
sbb
mov
mov
adc
jbe
mov
and
cmpsl
repz
in
push
push
jmp
in
scas
orl
pop
mov
aam
test
mov
inc
dec
cmp
inc
ret
cli
arpl
dec
fmuls
loope
loope
fcmovnbe
lcall
ss
pop
shl
pop
push
pop
negl
or
mov
xchg
inc
ss
jo
jmp
or
sub
xor
cmpsb
clc
js
adc
insb
mov
shlb
dec
or
lea
mov
lds
stos
imul
pop
add
or
lock
movsb
add
ds
dec
cmp
jns
mov
leave
scas
xor
popa
loop
sbb
out
cmp
cmc
xor
sub
pop
call
sbb
and
insl
ss
out
jb
lods
std
mov
loopne
sbbb
mov
jnp
aaa
cmp
adc
lcall
sbb
in
cmpsb
mov
pop
mov
movsl
pop
cmp
mov
je
outsl
iret
mov
cltd
call
fcomip
jg
push
mov
mov
pop
int
adc
sti
or
xchg
loope
fisubs
jns
xor
aam
xchg
push
orl
mov
movsb
and
ret
or
mov
sahf
lds
mov
dec
and
jmp
xor
adc
clc
rcll
jl
scas
sub
xor
inc
xor
mov
cmp
dec
pop
xor
mov
push
jl
push
imul
sbb
add
cmc
mov
xor
ljmp
aas
mov
push
xor
scas
pop
pop
cli
ljmp
in
shr
ret
in
jl
adc
push
adc
cmpsb
jecxz
inc
divl
push
insl
insb
mov
add
sub
loopne
js
cmp
insb
xchg
fsubrs
sbb
or
fs
imul
ljmp
test
sarb
ss
fucomi
pop
bswap
sub
cltd
mov
adc
imull
jne
jmp
xchg
ret
pop
or
rcrl
sbb
lds
fstpl
pop
icebp
aam
mov
arpl
loope
cwtd
aaa
insb
add
mov
add
jno
add
xor
adc
clc
push
enter
jns
and
xor
les
shlb
push
mov
notb
std
inc
dec
adc
pop
adc
inc
movsl
pop
cli
jo
aad
sti
xorl
inc
push
inc
or
pusha
inc
and
xor
ret
mov
out
sbb
icebp
inc
ja
dec
sub
adc
or
ljmp
outsl
sub
cmp
das
xchg
xchg
enter
dec
cld
lods
lea
cs
pop
ljmp
shl
pop
ficompl
aaa
cmp
sbbl
sbb
xor
cwtl
xor
rolb
push
testl
push
cmp
adc
addl
jbe
push
sarb
scas
mov
mov
js
sbb
andb
push
mov
cmp
test
cmp
mov
icebp
nop
push
nop
sti
or
mov
jmp
repnz
cmp
mov
iret
or
jo
sub
jmp
add
fs
sbb
sbb
cmp
push
push
jmp
sub
inc
cmpb
jmp
addl
or
das
rolb
es
adc
shl
or
call
pop
loope
ds
vcomiss
cmp
lods
lret
or
out
jmp
jnp
nop
imul
mov
inc
adc
xlat
scas
xchg
push
jl
pusha
ret
out
shr
inc
cmp
fsubl
call
inc
mov
pusha
add
icebp
data16
nop
add
adc
cmp
and
mov
xor
xlat
add
scas
cs
mov
jns
aaa
push
loopne
mov
push
mov
in
pop
popf
sarl
test
cmp
jbe
mov
inc
dec
lock
or
fdivrs
mov
mov
push
sbb
dec
adc
xchg
aas
add
jp
icebp
inc
inc
in
rorl
mov
shl
int
aaa
mov
movsb
lret
push
jge
popf
jbe
jp
sbb
jbe
jo
cmc
cmp
in
mov
pop
shll
sub
add
cmpsl
pusha
inc
or
and
jno
xchg
jmp
in
adc
into
dec
insl
ret
cli
pop
inc
mov
adc
aaa
xchg
push
or
dec
inc
push
inc
mov
add
out
aaa
out
mov
inc
lock
idiv
lcall
insl
pop
inc
sub
or
xchg
scas
insb
rclb
es
mov
insl
mov
faddp
dec
push
cmc
jmp
sbb
dec
inc
dec
push
enter
xor
pop
mov
mov
pop
adc
mov
mov
mov
or
xchg
sbb
mov
pop
cmp
bswap
sub
aaa
cmp
mov
cs
fsubrl
dec
cs
cli
call
rcrb
mov
pop
cli
mov
call
aam
sbb
push
sub
adc
flds
fldcw
mov
push
scas
jo
cmp
pop
jl
dec
add
push
into
sub
and
add
lahf
aam
mov
movsl
test
sahf
mov
ret
push
push
mov
fists
push
or
cld
aaa
call
inc
xlat
push
shl
and
rcrl
xchg
stos
cld
icebp
shlb
or
push
jge
cmp
test
sbb
xchg
push
mov
lret
push
and
hlt
aad
into
jle
les
mov
inc
roll
hlt
dec
adc
imul
in
mov
in
and
cmp
add
jle
pop
and
movsl
inc
mov
add
or
ficoml
mov
dec
icebp
test
cmpsl
cltd
clc
into
or
xchg
xchg
loope
jbe
xor
jl
aad
loope
xchg
xor
push
lods
fcom
int3
pushf
sbb
dec
push
clc
sub
pop
ljmp
push
addb
mov
sbb
pop
sbb
mov
cltd
and
sub
jb
pop
mov
shrb
mov
pop
les
push
lret
ret
dec
lods
sti
subl
and
inc
lds
adc
testl
or
call
gs
cmp
inc
mov
xchg
mov
fstps
fistps
mov
scas
stc
add
in
shlb
mov
ja
or
mov
inc
and
add
inc
add
add
mov
push
inc
mov
push
jno
inc
pop
fdivp
imul
sti
aad
cmpsb
pusha
out
fidivrs
sbb
push
dec
push
sarb
pop
dec
push
test
imul
inc
hlt
pop
dec
inc
xchg
clc
inc
sub
std
mov
and
xchg
lret
jno
xchg
or
jbe
cmp
mov
out
pop
addr16
in
lahf
and
scas
or
pop
pop
push
inc
out
sbb
loope
inc
cmp
jl
and
fisttpll
imul
xlat
mov
or
repz
lock
sub
sbb
cmc
dec
cmpsl
into
jecxz
mov
jmp
bound
js
incb
xchg
test
push
nop
mov
mov
pop
test
inc
inc
sbb
icebp
adcl
pop
cld
inc
sub
cmp
repnz
mulb
xor
pop
jns
xor
in
imul
test
popf
mov
adc
jl
xchg
shlb
cltd
inc
mov
mov
je
and
xor
pop
loop
push
dec
push
aas
movd
xorb
xor
daa
movsl
int3
jno
mov
add
sbb
in
pop
clc
lods
lock
imul
or
mov
dec
mov
add
jg
mov
or
fsubs
loopne
cmp
or
cmp
mov
ret
test
and
dec
cwtl
cltd
adc
or
adc
push
insl
out
clc
jae
pop
adc
cmp
repz
pusha
mov
addb
enter
insl
or
testb
outsl
cs
xchg
in
repz
popf
xor
stos
jb
lock
jmp
lods
dec
dec
test
jo
mov
inc
mov
mov
mov
sub
clc
sub
ss
push
loop
inc
das
stc
ds
sahf
jl
pop
shlb
sbb
orl
outsl
fidivl
bound
mov
adc
loopne
jmp
mov
and
int3
sarl
cmp
jmp
push
add
insl
add
inc
rcrb
pop
and
push
push
mov
fsub
std
push
mov
xor
mov
cld
sub
insb
dec
sub
sbb
cs
ror
aam
jge
call
stos
test
sub
pop
sub
rcr
adcl
mov
clc
outsb
and
mov
pop
test
loop
push
mov
pop
mov
loopne
fs
out
push
aam
arpl
loope
inc
xchg
enter
addr16
jbe
adc
jg
loope
or
dec
lcall
push
fsubl
pusha
lock
mov
insb
iret
je
xor
lea
imul
int3
mov
mov
sbb
repz
cmp
pop
mov
into
cmp
mov
shrl
dec
je
mov
fcomp
pop
and
out
sbb
es
testl
sbb
xor
jg
stos
sub
sub
cld
mov
cmp
mov
frstor
aam
push
scas
mov
xor
outsb
dec
push
jno
outsb
daa
add
jne
movl
sbb
push
xor
sti
add
xor
push
mov
aaa
mov
test
add
test
cmp
mov
mov
test
adc
push
aas
call
fcoml
mov
lea
test
xchg
call
ror
jb
mov
lock
add
imul
sub
xor
cmp
or
ret
enter
nop
mov
and
insl
lahf
loop
xchg
xor
and
and
dec
pop
mov
subb
sti
stos
fcoms
lret
add
and
cltd
pop
xorl
icebp
fcmovnu
add
sub
in
dec
stos
dec
jg
cmp
and
out
outsb
cld
out
xchg
push
pushf
cmc
lret
in
addr16
fsts
les
in
or
xchg
nop
add
jno
mov
jbe
rorb
out
sub
push
sub
lods
popa
mov
sbb
inc
fidivl
xchg
pop
adc
insb
imul
pop
sub
addr16
fsubs
iret
fsqrt
xor
sub
xor
andb
rcrb
inc
add
ficompl
push
mov
popl
inc
jg
or
aam
xor
dec
popa
je
xchg
push
jb
call
dec
fsts
imul
arpl
jne
sbb
push
dec
mov
loopne
or
pop
fcmovnbe
and
cmp
xor
test
mov
dec
pop
fs
pop
sbb
lahf
xchg
fildl
sub
and
mov
lcall
push
fwait
das
add
dec
pop
hlt
cmp
jl
mov
jns
and
push
and
enter
mov
test
xchg
test
shll
mov
orb
pusha
mov
fcmove
scas
mov
mov
fiadds
cltd
jle
lock
add
cmpl
pop
lds
inc
scas
pop
jmp
sbb
push
ja
stos
pop
paddb
in
das
into
adc
fs
push
mov
cmp
lds
jg
push
adc
add
sbb
and
pop
outsl
mov
mov
cltd
sbbb
out
fcmovnbe
pop
fiadds
cmp
sti
push
xchg
aam
pushf
xchg
mov
mov
inc
inc
cmp
sub
jecxz
cmp
ljmp
add
sub
insb
pop
test
into
lea
fwait
adc
jmp
hlt
inc
inc
add
lods
xchg
jmp
sub
out
cmc
jno
sub
push
fcom
sbb
jecxz
cmpsl
xlat
pushf
iret
mov
lret
xor
or
push
pop
pusha
xchg
mov
les
daa
adc
fidivrs
adcl
sub
popa
adc
pop
jnp
add
mov
and
mov
mov
cwtl
xor
cmpb
mov
jb
sbb
push
setno
jae
xor
cmp
mov
cli
int
or
adc
addr16
cmp
sahf
divl
pop
fisubrl
mov
mov
mov
jae
stc
mov
bound
repz
push
adc
mov
xchg
dec
daa
arpl
js
mov
orl
mov
and
test
call
outsl
mov
enter
movd
adc
std
fwait
mov
insb
push
shlb
sbb
mov
jb
pop
subb
push
xor
add
inc
arpl
and
rclb
pop
pop
dec
jno
insl
pop
jno
xchg
jb
mov
pushf
mov
fiadds
dec
xchg
sti
test
dec
mov
std
aam
out
add
mov
out
mov
daa
cld
dec
mov
outsb
add
adc
repnz
scas
aam
shrb
dec
add
adc
inc
rolb
lret
sbb
pop
cmp
daa
pop
jbe
sub
cwtl
lds
and
pop
cmp
insl
pop
and
xchg
cmpb
jb
nop
and
jl
adc
or
pop
lret
movsb
sub
jbe
mov
fisubrs
pusha
test
jg
sub
add
mov
push
in
and
cmpsb
dec
adc
mov
mov
xchg
out
dec
rcrl
adc
xchg
pop
xor
cwtl
les
and
dec
xchg
sub
add
and
jl
test
mov
ljmp
xor
imul
repz
push
subb
in
xchg
movsl
negb
lret
out
push
xchg
adc
mov
inc
inc
test
incl
aas
jle
rcrb
cli
mov
xchg
repz
and
and
adc
inc
sbb
in
mov
mov
outsb
lret
fbstp
imul
or
or
add
dec
test
dec
in
inc
ds
cmpsl
nop
pop
cmp
jbe
push
fs
add
jp
mov
and
mov
std
movsb
mov
push
loopne
arpl
loope
and
mov
js
rcrl
insb
pop
hlt
push
sti
push
cmpb
mov
mov
arpl
ror
or
leave
sub
lock
ror
inc
fwait
mov
scas
sub
mov
rolb
jnp
insb
mov
test
fdivp
jnp
fmuls
jbe
pop
sahf
and
sahf
mov
lret
adc
scas
mov
and
stos
ficomps
jle,pt
cmpsl
jno
xor
into
loop
sbb
cwtl
pop
out
lods
push
bound
jp
iret
xchg
inc
adc
inc
ja
out
ljmp
stos
mov
cld
mov
push
jo
inc
xchg
adc
mov
mov
jl
inc
and
pop
dec
call
ljmp
je
rorl
je
in
mov
imul
adc
repnz
or
or
mov
push
outsb
movsl
mov
pop
orb
jne
lahf
or
imul
adc
jns
js
shll
fxch
mov
mov
iret
ror
xchg
pushl
in
clc
jne
lea
add
and
mov
std
orl
xor
iret
lret
insl
pop
adc
pop
iret
repz
adc
icebp
lret
rcll
or
lret
pop
repnz
inc
in
or
mov
imul
adc
pop
outsl
mov
pop
pop
cwtl
fcmovnu
jge
cmp
mov
loopne
dec
sbb
sbb
jmp
dec
fadd
sarb
shlb
add
cltd
scas
arpl
call
jnp
inc
inc
sbb
ljmp
mov
or
lock
jl
ret
sub
icebp
dec
ljmp
push
orl
push
xchg
std
lahf
push
lret
pop
mov
add
hlt
ret
push
ds
xor
push
mov
icebp
mov
jb
sti
xorb
dec
cli
adc
push
and
mov
inc
xchg
dec
xor
adc
out
fwait
dec
mov
add
jle
jecxz
xor
dec
push
and
adc
imull
pop
mov
mov
aas
mov
movsb
jns
add
rsqrtps
push
push
ds
mov
mov
pushf
je
arpl
push
jge
jg
jmp
std
mov
mov
push
mov
or
jno
test
fsubrs
loope
ljmp
dec
inc
mov
add
btc
adc
xor
insl
jmp
adc
jge
pop
das
inc
add
xchg
mov
out
or
push
int3
out
inc
push
mov
insl
out
test
test
jne
outsl
cmp
clc
out
pop
movsb
fistps
loop
sbb
mov
or
bound
test
cmpsl
add
mov
cld
adc
mov
sub
jmp
push
int3
pop
add
shll
push
cmpsl
test
cs
cmp
xlat
mov
jae
xchg
aam
push
mov
in
or
iret
insl
loopne
xchg
mov
add
cltd
adc
aam
add
fildll
xchg
clc
ljmp
dec
aaa
cmp
jnp
std
mov
mov
gs
mov
inc
push
scas
and
or
imul
xor
mov
xchg
aas
in
cld
sti
call
or
sahf
leave
gs
popf
insb
add
jo
sbb
ficomps
cmp
inc
cmpsl
pop
mov
pushf
loop
iret
lods
in
cmp
rorl
outsb
and
cmpb
xlat
pusha
mov
ljmp
cmpsl
not
popf
adc
and
sub
jp
pop
cli
jo
popf
adc
mov
ficoml
fistl
stos
adc
xlat
inc
xchg
orl
xchg
clc
jmp
loope
loope
ret
roll
push
sbb
sbb
mov
aaa
int3
jno
vmwrite
push
xchg
push
test
pop
xchg
pop
mov
shrl
sub
pop
fs
and
dec
mov
fdivl
shrb
push
mov
repz
cmp
or
adc
in
pusha
add
ja
mov
and
inc
aaa
shlb
add
mov
mov
xchg
shrb
dec
popf
clc
mov
xchg
adc
pop
sbb
iret
push
push
mov
dec
pusha
lods
xchg
shll
int3
xor
add
add
mov
divl
pop
push
push
mov
adc
mov
and
sub
jb
sbb
aas
pop
cmp
sub
test
ljmp
xchg
loopne
test
push
sbb
mov
loope
imul
pop
inc
sub
xor
inc
pop
aas
adc
ret
mov
in
pop
data16
push
mov
in
dec
ror
test
jp
pushf
or
dec
pop
imul
inc
into
mov
jmp
or
fsubrs
jo
rolb
test
jge
je
movsl
daa
jbe
pop
xor
loop
and
stos
pusha
inc
popf
movsb
xchg
sbb
pop
jbe
mov
mov
dec
mov
and
insl
xor
lahf
js
outsl
inc
xor
mull
inc
or
cmpl
orb
add
arpl
movsl
mov
add
inc
aam
push
fidivl
test
fistl
jecxz
out
subl
outsl
mov
popf
sbb
sub
popa
pmullw
aaa
aam
xchg
or
lahf
sub
push
fdiv
jp
push
pop
pop
sbb
out
jbe
cmpsl
fiadds
gs
push
ljmp
test
out
jge
pop
call
mov
mov
push
aas
pusha
shl
xor
bound
mov
mov
sbb
out
jne
cltd
icebp
pusha
mov
mov
or
inc
push
mov
inc
js
movsb
test
pop
shlb
arpl
clc
sbb
shll
add
loopne
push
pop
lret
mov
mov
dec
pop
xor
hlt
push
pop
cmp
cmp
add
cli
push
mov
mov
cltd
inc
jo
mov
pop
pop
push
popf
das
add
bound
iret
cmp
mov
sahf
cmp
or
dec
mov
call
xor
loop
js
cwtl
xor
js
out
hlt
mov
push
enter
inc
and
cmp
test
fs
inc
pop
cmp
test
xchg
fbld
aas
jp
pusha
push
jno
add
push
insl
loopne
into
add
push
loopne
or
sti
xor
mov
gs
pop
xchg
adc
lret
pop
push
shll
xchg
add
push
ficomps
mov
push
scas
jae
iret
test
jl
fwait
insb
hlt
mov
cli
mov
dec
mov
call
mov
adcl
mov
lock
sub
addr16
cmp
cmpb
pop
push
and
sbb
ljmp
jbe
bound
ds
push
adc
lahf
xchg
pop
loop
fs
repz
sbb
mov
movsb
jo
jnp
dec
sahf
and
into
lods
lods
inc
and
lea
sbb
push
xchg
xchg
mov
mov
scas
and
and
fsubrs
jecxz
and
xchg
sbb
fildl
cmp
dec
dec
jg
loope
arpl
movsl
lret
ds
fmuls
mov
insl
mov
sub
mov
adc
sbb
scas
dec
insb
add
cmpl
or
stc
add
nop
les
test
test
outsb
jmp
pop
outsl
pop
icebp
test
out
leave
xchg
lret
or
sub
mov
sub
imul
repz
in
negb
and
sub
mov
pushf
cmp
xchg
dec
sub
inc
sbb
js
inc
in
mov
or
jne
lahf
popf
ljmp
pop
shlb
movsb
popf
xor
mov
dec
xor
inc
ljmp
leave
add
dec
mov
call
pop
pop
xor
lea
outsb
mov
push
mov
push
xchg
es
push
call
arpl
dec
loop
fstpt
mov
pop
fiaddl
xor
lcall
in
pop
or
push
lock
sbb
mov
call
mov
xchg
or
ret
dec
dec
icebp
jns
mov
jle
in
movsb
stos
clc
lods
push
cltd
aas
loope
movl
dec
xchg
inc
jmp
dec
jge
fildl
int
rcl
std
jecxz
adc
push
mov
add
rorb
pushf
adc
icebp
adc
out
stc
aaa
inc
fisttpll
fisubrl
jl
sbb
mov
aam
insl
xor
aad
addr16
ret
pop
jp
testb
pusha
push
push
stos
jb
and
nopl
cmpsb
sub
clc
stos
and
pop
cmp
arpl
sub
sub
mov
mov
mov
rorl
pop
movsl
roll
push
push
push
imul
sbb
enter
pop
mov
jg
xor
add
adc
jp
mov
dec
je
movsl
xchg
mov
movsb
je
jns
sbb
push
xchg
sub
cli
jp
mov
add
in
outsb
add
or
inc
add
and
gs
dec
mov
jo
in
cmp
mov
jle
xchg
hlt
push
sub
stos
mov
adc
stos
ficoml
or
mov
popa
rorb
loope
jg
push
outsb
sbb
ds
lret
push
jge
mov
call
mov
bound
jecxz
insl
lea
xchg
mov
push
add
leave
adcl
mov
adc
ds
outsl
inc
mov
mov
mov
iret
divl
jge
mov
sbb
repnz
icebp
pop
pop
out
into
pop
pop
repnz
leave
mov
aam
test
jge
or
or
xchg
adc
mov
xor
jg
rcll
pushf
inc
imulb
cmp
out
mov
push
sbbl
push
mov
cmpsb
in
push
fstp
mov
popa
sbb
or
mov
inc
orl
jo
cld
and
add
test
mov
mov
mov
daa
push
push
push
add
mov
xchg
jo
mov
or
shl
xchg
push
cli
mov
and
nopl
sarb
jbe
push
add
test
cld
test
addr16
xor
and
pop
mov
mov
jno
cs
sahf
and
jmp
sbb
dec
jle
dec
icebp
dec
sbb
inc
movsb
mov
add
adc
inc
or
cli
nop
sub
xchg
test
xlat
arpl
je
ds
aam
inc
in
test
mov
jge
testl
mov
inc
mov
mov
sub
push
jg
test
mov
xor
sbb
loopne
shlb
xor
clc
int3
dec
into
mov
clc
jnp
stos
in
dec
or
movsb
out
cli
xorb
or
and
rcll
inc
sub
cli
popf
push
and
inc
pop
inc
and
jp
popa
xlat
push
xchg
ds
je
out
roll
imul
or
jo
pop
adc
or
int
jle
loopne
and
scas
ljmp
outsb
or
push
es
jns
push
outsb
mov
iret
clc
push
iret
jg
rol
push
mov
dec
mov
leave
and
push
loop
mov
and
mov
ja
rclb
inc
out
test
shl
and
jmp
loopne
jbe
jbe
sbb
jecxz
adc
xor
fnstenv
psubb
xor
dec
fisubrl
mov
fildl
jg
out
in
dec
jne
in
add
pop
out
fiaddl
pop
jle
lret
test
inc
mov
xor
push
mov
loopne
inc
scas
cmpsl
icebp
mov
clc
push
orb
es
push
add
add
xor
bound
cmc
sahf
inc
roll
inc
into
clc
push
or
pop
dec
sub
leave
stos
fisttpll
mov
mov
shlb
jl
lock
sbb
sti
xor
nopl
xchg
dec
cmp
add
fsubp
pop
je
stc
sub
idiv
sub
adc
cli
pop
sub
clc
clc
icebp
or
ror
fcmove
xchg
lea
std
add
xlat
pop
add
mov
mov
mov
js
jae
mov
aad
or
sbb
pop
fimuls
mov
sbb
aas
arpl
jnp
fists
add
lret
sahf
sbb
jl
loop
enter
adc
lods
dec
test
xchg
sbb
insl
jne
out
enter
cltd
mov
lock
clc
sbbb
sbb
or
je
cltd
adc
cli
jle
jl
xor
scas
lds
mov
mov
and
push
add
outsb
sbb
lds
adc
les
xor
xchg
jge
inc
insl
mov
fldz
ljmp
sbb
sub
push
sbb
sti
aam
div
mov
and
xor
fbstp
mov
sbb
cmp
clc
mov
fidivrl
jle
repnz
jne
dec
dec
sbb
mov
inc
dec
jbe
inc
adc
pop
enter
pop
lds
call
negb
aam
push
and
jbe
inc
or
inc
imul
inc
daa
lods
push
sbb
mov
pop
push
ret
mov
lahf
hlt
test
inc
push
jl
out
call
je
fs
sbb
je
pushf
jmp
int3
pop
xor
xor
mov
xor
xor
shlb
mov
xor
outsb
lds
add
hlt
inc
outsb
loope
sub
sbb
call
test
repnz
pop
and
pop
cmp
scas
in
dec
in
orl
dec
mov
pusha
aas
cmp
aas
movaps
sbb
pop
jp
cmpsl
jne
lcall
adc
pop
lock
push
in
fistpl
jecxz
push
fnstsw
sbb
mov
push
push
int
loope
pop
sbb
mov
add
mov
pop
out
pop
inc
sbb
or
sub
sahf
sbbb
and
insl
pusha
pop
stos
adc
sub
or
mov
cmp
cmc
rclb
fsubrl
addl
jae
push
int
mov
inc
in
xlat
xchg
jl
mov
pusha
push
and
fisubrs
mov
inc
or
rorl
or
js
fnstenv
cmp
pop
daa
sbb
jecxz
jle
cmpsl
push
sbb
test
idiv
jb
mov
in
cmp
and
push
and
xor
and
lahf
shlb
push
je
xchg
dec
add
sub
or
xor
cli
xchg
bt
xchg
gs
mov
add
outsb
mov
mov
push
jne
ss
imulb
stc
lds
push
sub
xor
lods
push
and
jns
dec
mov
sbb
dec
cltd
xchg
inc
mov
add
adc
add
nop
dec
dec
fs
cmpsl
inc
movsl
popf
or
sbb
jp
xchg
mov
lahf
sbb
repnz
or
addb
pop
mov
loope
test
stos
inc
cmpsl
arpl
loop
out
pop
add
adc
in
test
rorl
and
xor
pushf
aaa
jbe
xor
sahf
cwtl
fstp
sbb
mov
jp
xchg
inc
or
outsb
pop
push
loope
js
add
mulb
mov
adc
push
jmp
repz
imul
stc
sti
jg
loopne
push
push
adc
adc
in
sbb
adc
pushf
nop
ds
hlt
cmp
dec
xchg
imul
movsb
lods
adc
xor
jbe
mov
jp
fiadds
ret
jnp,pt
pusha
mov
sbb
cwtl
jo
shrl
sub
mov
aam
cli
clc
fbstp
movsl
clc
test
push
cmc
or
mov
shrl
sbb
pop
lods
or
add
test
jns
pop
adc
maxps
clc
into
pop
das
mov
data16
das
stc
add
loopne
fsubrs
stc
and
andb
scas
jp
addb
fwait
mov
loope
dec
xor
or
out
mov
imul
imul
or
aas
arpl
jl
test
data16
push
roll
jb
jle
dec
lock
bound
popf
sahf
cmpl
lock
sub
adc
xor
sub
clc
and
adc
cmp
push
push
jns
loop
jns
push
dec
cmp
cmp
insl
clc
lcall
movsb
inc
push
inc
int
mulb
jno
pusha
xchg
inc
stos
or
out
cmpsb
mov
orb
xchg
jmp
popf
les
mov
push
mov
pop
nop
jecxz
dec
inc
mov
mov
push
icebp
add
inc
testl
rcrl
mov
dec
xor
xchg
sbb
call
lods
mov
push
xor
sub
enter
cmpsb
sub
pop
jge
in
cmpsb
xchg
sbb
sub
sub
pop
outsb
mov
sub
je
fxch
out
repnz
xor
inc
outsb
je
jle
xor
dec
pop
fcoms
xchg
or
outsl
fisttps
jecxz
jae
push
mov
xchg
and
add
int
xlat
cmpsb
inc
and
clc
imul
int3
dec
fimull
insl
das
data16
mov
test
sbb
sbb
stos
inc
ss
or
mov
pop
inc
or
idiv
aam
das
xlat
cmp
repnz
inc
mov
or
lcall
loope
jl
push
loope
sbb
ret
rcr
shll
lret
inc
movsl
or
stos
sbb
add
push
syscall
xor
imul
pop
pop
ret
or
shll
fildl
out
jmp
fsubrl
sbb
mov
pop
fcmovb
inc
hlt
add
mov
shlb
xchg
jbe
xchg
stos
ret
call
shl
xor
popf
xor
cwtl
arpl
inc
mov
jecxz
in
inc
movl
sbb
cli
adc
xchg
fsubrs
ja
push
cmp
adc
pop
push
or
mov
scas
mov
outsb
pop
cmp
add
std
inc
inc
mov
je
lock
or
bound
fucom
or
mov
xor
adc
inc
jns
iret
or
or
dec
xchg
mov
xchg
mov
pop
enter
movsb
or
push
lahf
mov
push
cmp
stc
js
loope
into
out
cmp
mov
stos
aaa
pop
jb
insl
out
or
test
xchg
pop
ss
jle
call
fildl
sbb
cmpsl
cmc
inc
fbld
fistps
imul
fdivrs
sbb
xchg
filds
cmp
idivb
aaa
mov
fs
fstps
adc
inc
fistpl
dec
xchg
add
cmpsb
pop
xor
mov
dec
mov
xor
aam
jg
cli
imul
dec
jo
out
shlb
pop
jle
js
scas
adc
aaa
or
mov
shrb
shl
push
mov
or
xor
jecxz,pt
push
adc
mov
stos
pop
pusha
lahf
jmp
inc
mov
repz
ret
out
adc
mov
xchg
mov
xchg
scas
jmp
add
je
push
in
movl
jo
insl
dec
lods
repz
mov
pop
aaa
fdivs
mov
mov
loope
add
pop
xor
enter
sti
jne
fstpl
popa
push
adc
mov
push
cwtl
ror
pop
imul
scas
mov
repz
iret
jmp
shll
mov
gs
dec
je
push
add
cmp
push
sahf
jnp
xchg
or
roll
xor
and
jb
xor
mov
scas
aad
push
adc
xor
dec
out
inc
mov
add
sub
inc
pusha
lahf
sbb
mov
lcall
popf
mov
movsl
fists
inc
call
fs
nop
insl
mov
cmp
test
xchg
arpl
lds
data16
es
jnp
faddp
out
xor
xchg
out
sbb
aad
jne
and
mov
std
bound
or
cli
out
mov
or
mov
dec
sbb
popa
push
pusha
sbb
mov
jb
mov
fisttpl
inc
push
jnp
pop
in
test
or
and
loop
jge
ss
push
je
pop
inc
arpl
jecxz
rolb
out
mov
mov
cli
cmp
cmp
stos
leave
lea
xor
subb
fistps
shlb
sub
add
cld
arpl
test
aam
pop
mov
push
cmpsb
leave
jo
pop
cli
cs
xchg
ja
lea
cmp
and
jg
jns
fidivrl
rcl
dec
mov
ror
movsl
sti
mov
and
jmp
dec
in
xchg
sbb
fwait
movsb
test
push
icebp
mov
mov
and
add
sbb
sbb
mov
outsb
jo
cmc
shlb
mov
imul
mov
add
and
iret
mov
sbb
fistpl
frstor
test
or
sbb
fdivs
arpl
mov
mov
push
popa
lahf
fstps
stos
mov
enter
addb
fcmove
mov
xchg
and
rolb
leave
shlb
xor
in
add
mov
ja
and
and
sub
or
xor
sarl
ds
xchg
fwait
popa
push
adcb
lods
mov
lods
or
push
inc
inc
and
xchg
xchg
js
mov
scas
mov
and
mov
push
cli
or
fwait
add
icebp
add
xchg
cmp
pop
popl
mov
in
fcomps
popa
ss
test
jbe
inc
and
xlat
fwait
insl
pop
repnz
push
jmp
add
xchg
jp
xor
add
mov
movsl
test
icebp
scas
call
stc
jnp
or
repz
mov
push
add
aam
add
add
fwait
add
mov
cmpsb
in
mov
pushf
mov
in
mov
je
pop
push
rcrb
sub
dec
jge
or
adc
addl
and
std
push
sub
dec
data16
fisttps
push
fcoml
xor
mov
mov
add
mov
mov
sti
les
push
pop
push
lock
or
out
mov
cltd
insb
xchg
adc
cmpsl
mov
imul
mov
mov
mov
scas
daa
imul
or
addl
jo
sbb
dec
insl
jp
xor
push
xchg
add
mov
add
lods
and
stos
andb
fisttpll
fst
sub
inc
adcl
in
popa
xor
dec
icebp
scas
inc
lcall
bound
aaa
mov
ja
aam
lahf
adc
movsl
push
and
fucomp
mov
xchg
shll
xchg
sub
es
mov
jo
ss
jle
cmp
test
or
mov
jne
xor
imul
mov
add
inc
rcrl
sbb
jl
loopne
ret
xchg
popl
add
sbb
push
incb
popf
inc
push
adc
sub
aam
lock
enter
sbb
inc
or
mov
pop
mov
lock
xor
stc
shrl
adc
hlt
sbb
std
mov
lea
or
clc
add
outsb
imul
shll
and
and
aas
and
aad
popf
jns
sbb
cmp
pop
pusha
std
fwait
cmpsb
mov
xorl
lods
hlt
aas
pop
iret
fwait
sbbl
inc
adc
dec
lock
or
inc
inc
stos
jp
ds
jecxz
arpl
sbb
ljmp
mov
xchg
adc
dec
pop
pusha
sar
dec
cmpsb
ret
adc
xor
fdivrp
jno
pop
dec
pop
mov
rorl
subb
outsl
testl
scas
mov
mov
aad
mov
jl
mov
notl
cld
in
or
leave
imul
cmpb
pop
rcrl
and
loope
je
frstor
icebp
mov
jne,pt
mov
mov
push
jge
cmp
and
inc
jbe
test
cmp
aaa
xor
and
call
pop
mov
dec
es
int3
mov
pop
je
aam
adc
into
ret
addl
std
loope
pushf
xchg
aaa
fmull
stc
xor
jno
int3
shlb
ds
mov
pop
xchg
push
je
sub
rcll
cmpsb
lods
stos
mov
ret
testl
adc
fistl
pop
call
test
sub
add
imul
les
inc
shll
test
push
push
cmpsl
dec
adc
pop
cmp
ja
adc
sbbb
inc
call
xor
jbe
sub
aam
pop
add
das
mov
out
fildl
mov
mov
aaa
jno
inc
push
xor
in
add
jge
loopne
mov
xor
je
addl
in
dec
and
rorb
pusha
movsl
sti
imul
or
fs
faddp
sub
pop
mov
xor
add
stc
repz
dec
push
ret
push
mov
push
and
sbb
std
imul
jge
sbb
bound
xlat
jmp
pushf
icebp
push
sub
mov
adc
lret
rorb
cmp
out
test
imul
pop
call
adc
fwait
xchg
or
shrl
xchg
or
movsb
sahf
pop
leave
loopne
or
mov
dec
jmp
jno
std
hlt
adc
and
pushf
hlt
insl
mov
sbb
push
stc
outsb
lock
in
add
lret
scas
les
pushf
xchg
movsb
ss
stos
cmp
call
sub
fsts
add
mov
fcmovb
pop
jbe
or
cmp
xlat
fsts
fidivs
or
outsl
adc
popa
jl
aad
jle
fsubrp
mov
xor
ror
ret
jns
push
adc
out
xchg
pop
pop
pop
cli
pop
pusha
insl
sub
les
add
push
fisubrs
jnp
pop
loopne
and
faddp
pop
pushf
jge
mov
in
inc
lcall
movsl
je
sub
inc
xorb
in
testl
lret
cmp
sub
sar
cmp
push
idivl
int3
xor
clc
sti
xchg
adc
push
adc
imul
pop
mov
lcall
stos
sbb
cmp
frstor
push
icebp
xchg
mov
aam
xchg
je
stc
lock
mov
or
outsl
mov
inc
inc
mov
mov
int
incl
mov
pop
jge
pop
mov
xor
push
std
test
js
call
int3
jbe
jmp
adc
clc
ja
loop
sbb
sub
arpl
inc
add
clc
mov
and
xchg
cmp
or
insl
xchg
dec
outsb
inc
pop
int3
mov
jecxz
testb
sbb
lods
xchg
adcb
out
cs
jecxz
mov
fwait
dec
aas
xor
xlat
xor
push
mov
xor
pop
mov
adc
ss
fsubrl
mov
jecxz,pt
or
mov
ret
jno
stos
mov
cmp
sub
cmpsl
test
fistl
mov
push
mov
sub
inc
mov
out
cmp
push
inc
add
inc
mov
mov
pop
xchg
cmp
jb
int3
pusha
movl
sarl
stos
and
add
iret
jge
mov
xor
cwtl
mov
fs
sti
ret
fcmovnu
cwtl
mov
inc
add
mov
dec
and
in
aad
mov
adc
push
movsb
mov
cli
inc
sub
in
int
loopne
mov
std
mov
xlat
in
pop
and
mov
sub
hlt
or
dec
add
scas
xor
xor
mov
mov
ja
cltd
mov
pop
push
jmp
and
inc
test
daa
add
rorb
pop
xorb
outsb
adc
ljmp
insb
cmp
lock
mov
fnstsw
cs
int
shll
loopne
pop
out
stc
adc
in
jle
testl
adc
push
adc
ja
or
xor
loope
orb
sbb
push
xchg
mov
repnz
popf
loopne
flds
pusha
sarl
jle
mov
mov
mov
mov
jo
mov
fstl
insb
adc
insl
jl
fs
cmc
stc
leave
sub
fiadds
and
inc
xor
sub
mov
inc
sub
in
add
fmuls
and
cmp
or
sbb
cli
cmc
jge
fs
js
sub
clc
add
jae
hlt
sub
push
rcrl
aas
imul
inc
inc
mov
mov
loop
mov
dec
insl
aaa
ficomps
inc
enter
dec
test
mov
pushf
cwtl
xchg
sbb
fdiv
or
rorl
sbb
sub
jb
clc
xchg
je
xlat
add
js
add
and
fdivs
pop
sub
scas
jb
cmp
lcall
enter
push
push
addl
cmpl
push
inc
int3
pop
xchg
dec
cli
in
mov
rcrb
ds
dec
rcrl
mov
call
pop
fdivs
fwait
ror
push
inc
sbb
jnp
or
push
cmc
xchg
ss
push
les
nop
pop
inc
mov
dec
mov
icebp
stos
inc
jge
incb
test
stos
lahf
lret
loop
cmc
mov
jbe
mov
fstps
cli
rclb
sub
sub
js,pt
lock
push
sub
xor
aad
jmp
inc
fisttpll
xor
test
loope
lods
daa
jno
dec
sbb
stc
or
mov
pop
xor
dec
loopne
clc
aaa
test
negb
test
nop
push
or
andb
sub
xchg
in
dec
fwait
mov
and
aam
fmul
dec
rolb
or
add
movsl
repnz
push
sbb
mov
add
sbb
push
xor
pushf
andb
outsl
jb
adcb
clc
xchg
jns
xlat
fbstp
jmp
mov
pop
mov
loope
inc
fs
inc
mov
cli
mov
lahf
sbb
incl
adc
lock
in
jnp
xlat
or
pmuludq
xor
fwait
pop
pop
add
scas
ret
mov
push
lock
cmp
jo
lahf
mov
mov
push
jmp
fs
aad
in
xchg
pop
mov
neg
stos
stc
push
mov
rolb
mov
sub
in
dec
jl
inc
je
jb
aas
enter
jle
and
jo
cmp
xor
xor
fbld
cwtl
inc
std
dec
adc
mov
adc
enter
push
rcrl
mov
test
lds
jle
fdivs
int
jno
clc
jg
lea
call
adc
add
add
push
dec
fcoml
fistl
push
outsb
fidivrl
adc
aas
mov
or
add
div
mov
mov
sbb
push
test
call
mov
imul
ds
or
std
outsl
xchg
sub
inc
adcl
out
enter
test
adc
mov
dec
icebp
lahf
int
xchg
enter
mov
pop
sub
pop
lcall
xor
add
int
sti
sahf
add
lahf
cld
mov
pushf
adc
or
enter
dec
frstor
jnp
mov
pop
imul
cmc
stos
dec
adc
mov
movsb
cmp
fwait
or
dec
inc
les
mov
jnp
leave
iret
rsm
sbb
inc
jnp
gs
addl
push
and
mov
ret
mov
adc
adc
outsb
aam
in
in
mov
push
hlt
jnp
in
js
in
lret
hlt
inc
iret
xchg
das
sub
push
push
sbb
outsb
lret
xchg
loop
and
cld
sbb
rcl
nop
inc
lods
scas
xchg
adc
js
push
cmp
jg
inc
add
mov
lods
mov
mov
jmp
mov
iret
outsb
mov
or
dec
xchg
out
mov
in
and
xor
dec
mov
addl
pop
call
sahf
daa
add
pop
mov
loope
mov
or
arpl
pop
pop
mov
or
jne
lock
roll
pop
dec
xor
adc
arpl
or
cmp
mov
out
je
jl
or
add
xchg
inc
jle
lods
jl
lock
ss
xchg
mov
fidivl
mov
dec
mov
xlat
out
cltd
add
imul
fistl
cltd
pop
jmp
hlt
sub
or
ds
cli
inc
cmp
cld
push
es
push
inc
addl
cmp
rcll
ljmp
mov
sub
jo
sbb
daa
inc
inc
push
out
cmp
pop
and
mov
pop
add
jno
push
and
jno
and
subb
int3
stos
test
mov
sti
and
cmp
sbb
hlt
cmp
pop
adc
xor
mov
outsb
loopne
ds
adc
inc
ds
mov
out
pop
adc
shll
push
and
and
lds
lods
lock
in
je
test
push
sbb
dec
pop
inc
mov
adc
fwait
cmp
pop
mov
push
imul
or
sbb
test
sbb
pushf
and
out
xchg
sti
fsubs
mov
add
mov
pop
mov
xor
leave
xchg
dec
arpl
filds
cmp
pop
fadd
cli
pop
xor
je
ret
adc
add
addb
outsb
mov
push
sbb
sahf
imull
mov
bound
jne
out
ljmp
pop
mov
adcl
mov
ret
sub
jbe
ja
mov
sbb
sbb
jecxz
aaa
add
bound
pop
jl
sti
mov
pusha
pop
add
andb
ja
pop
shl
mov
or
and
jg
xor
mov
xor
ds
mov
sub
repz
mov
jecxz
subl
scas
mov
es
jg
inc
lods
pop
sbb
inc
int3
std
enter
loope
cmpsb
sub
ds
mov
and
inc
xor
dec
sub
ficoms
pop
or
test
ljmp
add
ss
xchg
fisttps
into
mov
test
shr
subl
pop
je
mov
adc
jle
in
rcl
inc
xor
daa
dec
loope
ret
scas
cltd
roll
fcmovnu
cmp
push
test
push
in
es
adc
push
into
sbb
jb
mov
sub
test
cs
lods
lret
and
xor
outsb
pop
shl
push
jno
dec
icebp
add
mov
insb
jge
lods
inc
jae
js,pn
inc
fisttpl
jl
cmp
addl
mov
sbb
pop
or
ljmp
inc
loopne
pop
cmp
xchg
movl
mov
aaa
mov
mov
cmc
popf
sub
inc
mov
xor
and
insl
mov
push
scas
xchg
lods
mov
outsl
and
sbb
and
fisubrs
fsubr
sub
xor
xchg
pop
push
jo
int
xchg
dec
and
movsl
lods
mov
pop
andb
mov
push
ret
adc
pop
clc
adc
push
mov
push
call
ds
aad
pusha
cmp
adc
int
xchg
scas
lods
mov
shrb
icebp
mov
pop
push
popf
or
mov
in
mov
es
mov
stos
call
mov
mov
dec
inc
setae
add
sahf
std
sub
daa
add
imulb
and
push
or
jge
and
mov
ds
inc
xor
cmp
xchg
mov
fiadds
popf
pop
adc
in
adc
ljmp
xchg
stc
and
push
push
scas
bound
mov
fs
test
dec
lock
mov
sbbb
xchg
ja
js
fwait
xchg
xchg
and
arpl
mov
divb
push
test
push
icebp
loopne
xor
ja
jle
sbbb
inc
inc
aam
and
jmp
and
roll
inc
inc
cmp
outsb
mov
hlt
add
add
adc
xchg
add
mov
pop
sub
jmp
dec
jbe
clc
jmp
sbb
adc
pop
sub
inc
pop
mov
fists
into
mov
mov
popf
in
mov
cmp
add
decl
cmp
dec
jo
test
xchg
lahf
cmp
mov
ljmp
fildll
ljmp
mov
dec
test
fistl
inc
stos
sbb
dec
mov
inc
das
or
ljmp
shlb
add
rclb
mov
mov
pop
lock
adc
jmp
adc
cmp
xlat
addr16
rcrl
adc
xor
scas
xchg
mov
leave
sar
pusha
pop
push
xor
cmp
rcrl
nop
andb
lret
ljmp
dec
pop
jecxz
adc
mov
jo
mov
adc
add
mov
jge
mov
pmaxub
aas
inc
xchg
jnp
iret
inc
les
jecxz
mov
mov
jbe
lds
sbb
std
mov
sub
lock
pop
nop
sbb
ss
jecxz
sti
jp
gs
sub
pop
inc
mov
mov
js
imul
add
aam
push
ret
and
mov
lret
xor
es
push
jecxz
mov
in
or
push
adc
out
push
sahf
jnp
add
dec
and
mov
jmp
mov
enter
inc
cmc
pop
cmp
and
inc
jnp
xor
add
sbb
jo
rcrl
popf
ja
mov
push
mov
jno
andb
jno
jbe
lea
xor
std
pop
dec
pop
cmp
jne
xchg
inc
sub
out
xor
jae
mov
push
mov
cmp
sbb
mov
ficompl
mov
pop
jne
mov
or
push
scas
iret
mov
xor
inc
mov
and
ja
sub
or
cmp
outsb
mov
sub
adc
popf
test
pop
lock
add
adc
push
add
xchg
jmp
and
push
ja
add
inc
es
pusha
test
or
loopne
jno
or
add
and
xchg
and
xchg
mov
addr16
mov
movsl
xchg
or
sub
xchg
movb
cmc
rclb
cwtl
shlb
insb
in
repnz
out
and
jae
shll
mov
aad
push
scas
lods
cmpsb
pop
add
dec
into
jnp
pop
jnp
inc
stos
mulb
push
movsb
adc
adc
fistps
cs
inc
call
out
or
jne
xchg
or
enter
xchg
inc
rol
test
inc
inc
hlt
mov
mulb
fidivrs
clc
sbb
xchg
hlt
movsb
dec
adc
dec
loop
push
aam
fisubl
sub
inc
adc
mov
cs
test
or
sbb
mov
push
dec
pop
in
fwait
sbb
and
rorb
aas
sbb
inc
pop
outsb
dec
jge
sub
pop
adc
jl
sub
cwtl
iret
adc
xor
push
push
push
push
push
jo
mov
faddl
jb
pop
mov
ret
in
mov
jg
xchg
cmpsl
mov
pop
xor
pop
xchg
jl
sbbb
adc
dec
mov
and
add
sbb
ljmp
xchg
push
xor
jb
sub
bound
push
push
fbld
xchg
dec
icebp
scas
int3
mov
enter
dec
lock
leave
xchg
inc
mov
mov
cmp
and
xchg
test
adc
mov
adc
fisttpl
add
sub
sti
ljmp
adc
dec
scas
aas
sub
sub
pop
ror
movsl
push
jmp
pop
push
fdivs
sub
pop
testl
and
cmp
cmp
clc
push
jecxz
stc
int
cmc
mov
dec
adc
jmp
loop
aaa
dec
inc
loopne
add
fldenv
xor
xor
push
icebp
arpl
adc
jne
and
mov
mov
sub
cmp
fidivl
fs
xchg
lret
ret
push
fstl
jmp
test
inc
je
sbb
arpl
dec
inc
sbb
mov
mov
and
jb
add
insb
or
insl
cli
scas
adc
outsl
jp
bound
fdivrl
lods
sub
int
push
mov
push
ds
ss
fisttpl
sub
push
jmp
sub
je
push
adc
xchg
inc
add
mov
repz
inc
clc
arpl
aad
mov
js
lods
insb
push
cmp
sbb
dec
out
outsb
mov
stc
xlat
xor
or
jne
push
add
xchg
and
mov
aad
pop
subb
mov
fnstenv
xchg
add
mov
cmp
dec
lea
sub
sub
sti
xorl
rorl
fsts
push
stc
jle
pop
mov
movsl
repnz
ss
movsb
rorl
aas
push
cld
loop
clc
div
out
mov
inc
adc
inc
add
movl
mov
dec
outsl
inc
ret
into
xchg
scas
prefetcht0
pop
into
hlt
call
imul
imulb
jl
ficompl
adc
mov
mov
aas
lcall
les
xchg
jl
mov
or
mov
fcoml
out
lock
mov
inc
dec
out
dec
xlat
daa
push
hlt
pop
cli
jmp
push
mov
pop
cmpb
lods
cmp
jmp
add
add
in
stc
test
hlt
mov
push
pop
cmpsb
aas
jle
cmpsl
stos
inc
subb
je
outsl
inc
daa
sbb
aad
add
lret
cmpsl
mov
xchg
test
stc
aad
add
cmp
icebp
mov
les
ret
sbb
jl
fisttpll
sarb
out
pop
es
mov
in
nop
mov
cmpsb
ljmp
or
mov
arpl
in
mov
and
dec
cltd
mov
inc
int3
rorb
xlat
lea
enter
jmp
ja
popa
push
cld
mov
inc
lahf
jp
incl
dec
imul
fildl
mov
stos
mov
sbbb
cli
cmp
pop
xlat
adcb
cli
sbb
stc
mov
out
divb
mov
add
subl
adc
clc
stc
sub
ret
push
lret
call
xchg
jo
outsb
fisttps
loope
aas
fisubs
xchg
js
gs
mov
das
imul
daa
jl
aad
call
add
jl
xor
and
hlt
lret
inc
dec
pusha
sbb
mov
cli
mov
pop
in
pop
dec
jmp
adcb
lret
into
add
mov
adc
xor
outsb
insl
test
add
daa
or
add
cs
cmp
jae
arpl
in
or
addr16
and
and
adc
sub
sub
xchg
jb
iret
pop
push
mov
enter
or
or
js
loopne
mov
or
push
lock
sbb
pop
dec
comiss
divb
dec
push
or
sub
jmp
adcl
icebp
inc
nop
andl
cmp
lret
push
shrb
in
xchg
div
cmpsb
cmpsl
fsubr
les
lods
aaa
pop
data16
test
inc
mov
sahf
sbb
test
leave
inc
pop
loope
or
dec
cltd
dec
or
xchg
aam
pop
loope
inc
call
adc
in
fcmovnb
dec
lock
movsb
inc
call
and
les
fiaddl
xor
out
inc
icebp
test
xor
insl
xor
sarl
rdtsc
sbb
test
and
inc
in
adc
fidivl
jle
stos
outsb
out
cmc
adc
xor
pop
dec
or
adc
xor
and
xor
mov
lret
xlat
std
jbe
inc
testl
pop
add
and
cli
mov
loope
jl
outsl
jmp
movsl
xor
mov
and
mov
jmp
inc
sub
shlb
dec
push
cmp
ss
jo
sbb
imul
sti
std
fistl
dec
add
mov
sbb
adc
hlt
adc
or
sti
xchg
push
inc
adc
movsb
ljmp
adc
jmp
stc
jl
jmp
inc
mov
jnp
stos
xchg
insl
fisttpll
sbb
mov
pop
sbb
cmc
or
push
add
push
cmp
pop
and
ds
adc
sub
push
ljmp
in
pop
adc
movsl
or
pop
jp
add
jno
mov
add
fsub
data16
lcall
cmp
or
adc
mov
sar
rcrl
mov
enter
mov
mov
shlb
mov
outsl
and
pop
mov
or
rcll
inc
push
subb
cmp
sbb
cli
jl
rolb
repnz
sub
neg
and
clc
and
sbb
mov
or
or
out
sbb
movsb
enter
mov
psadbw
ficomps
jb
je
add
jb
mov
dec
arpl
dec
leave
xor
jb
fisttpl
std
cmpsl
mov
dec
outsl
and
xor
push
dec
cmpsb
punpckhbw
sbb
jo
pop
je
int3
fildll
stos
jmp
insl
add
out
sbb
shll
fistpll
add
push
test
jne
and
call
lahf
shl
out
mov
xor
je
or
addb
or
cmp
orl
scas
rorl
jge
testb
fsubp
movsb
js
push
push
inc
cmp
cmpsb
sarb
dec
into
cmpsb
sub
das
mov
fildl
insl
lret
inc
jle
or
mov
mov
sbb
aad
scas
gs
add
sub
es
scas
clc
cli
and
mov
push
or
adc
mov
test
or
sar
divb
scas
xchg
dec
sahf
sarb
add
btr
lcall
xchg
fdivs
mov
adc
lahf
sub
and
or
mov
out
xor
pop
subb
clc
mov
xchg
dec
repnz
lcall
add
adcl
test
arpl
mov
lret
cmp
js
lock
lea
insl
orl
sbb
cmp
jmp
test
dec
rorl
mov
call
xchg
clc
push
push
push
sub
js
cmpsl
push
scas
sbb
cli
xor
mov
mov
inc
rorb
aam
mov
mov
dec
sub
push
sbb
hlt
inc
push
sub
or
fiaddl
imul
push
pop
shr
icebp
sbb
fsubr
test
push
das
cmp
aam
push
sub
sbb
xchg
iret
inc
stos
inc
add
or
push
mov
cmp
rolb
and
ds
sbb
fcomps
xor
clc
mov
sub
cmp
push
pop
or
jle
sbb
rolb
and
cmp
testb
mov
inc
nop
push
jae
adc
aas
jp
fnstenv
test
and
rorl
stos
ficoms
lret
mov
mov
xchg
sub
xchg
mov
cmp
testb
icebp
lods
inc
push
mov
insb
ljmp
scas
push
mov
adc
xchg
movsl
shlb
xchg
pop
pop
divb
cmp
clc
and
inc
adc
ss
insl
aam
mov
inc
xchg
aad
inc
rorl
fdivl
cli
hlt
and
imul
push
add
imul
push
and
notb
fiaddl
fwait
cli
cltd
or
adc
testl
movsl
inc
push
mov
adc
inc
mov
fisttpll
or
aam
inc
cmp
unpcklps
das
repz
cmp
mov
sub
add
push
dec
dec
das
outsl
or
or
jae
pop
add
push
jp
nop
pop
pop
mov
push
cwtl
dec
call
sub
push
cmpsl
push
or
lea
into
popa
shlb
pop
xchg
fwait
dec
or
call
leave
push
data16
and
shl
mov
push
lret
sub
xchg
add
cmp
add
jg
je
push
sgdtl
cmp
fists
push
push
push
xchg
push
jmp
jne
push
inc
adc
int
and
jg
cmpsb
in
aam
icebp
jge
push
cli
push
or
jge
dec
xor
rcl
xor
clc
push
mov
jl
jle
or
lahf
dec
cmp
imulb
aas
sti
fwait
cmp
nop
jo
je
jp
enter
repnz
scas
ja
mov
inc
mov
lock
jp
push
push
popa
add
fidivs
int3
cmp
divb
push
mov
lock
in
sbb
mov
jle
pop
jecxz
test
xchg
es
mov
jle
in
push
add
push
outsl
jge
mov
xchg
pushf
or
inc
dec
adc
int3
xchg
mov
scas
pop
mov
lock
add
sbb
pop
mov
insb
sub
add
mov
outsb
pop
push
jge
scas
xor
scas
test
lods
mov
or
push
pop
inc
mov
aas
lock
roll
sbb
dec
xchg
mov
ret
in
mov
out
sub
pop
push
test
xor
push
lock
jg
jo
shlb
push
std
std
dec
pop
lds
and
iret
mov
push
mov
movsb
dec
test
jno
add
adc
jbe
push
pop
ret
adc
in
aam
or
mov
xchg
jb
mov
lock
mov
test
and
out
xorl
stc
test
xlat
out
dec
stc
pop
mov
shrl
pop
call
adc
pushf
test
mov
jnp
pop
adc
daa
rcrl
je
std
and
mov
xchg
push
dec
xchg
dec
shlb
xchg
decl
cmp
inc
pop
fidivrs
push
pop
pcmpeqw
das
pop
jae
jecxz
inc
sbb
mov
sbb
neg
cmp
shlb
je
outsb
and
scas
test
pop
jns
inc
xor
sbb
xor
ret
push
cmp
movb
mov
test
pop
add
push
insl
or
mov
add
sub
ss
mov
sbb
and
cmc
mov
cmpsb
pop
mov
xlat
mov
jbe
test
dec
gs
sbb
inc
push
lock
sub
adc
pop
loope
mov
and
inc
fcomip
sarb
es
mov
jnp
sbb
or
fildll
call
ss
loop
cli
rcrb
shll
xchg
mov
pop
dec
pushf
push
push
outsl
and
cwtl
je
push
mov
lds
mov
std
cmp
mov
ja
cmp
mov
push
lret
adc
or
or
stc
mov
dec
mov
add
scas
fdivrs
cmp
lcall
sub
aas
push
adc
push
fnstcw
stc
or
shrl
loope
pushf
loope
and
outsl
test
in
pusha
push
shll
lock
stos
sbbl
call
aaa
int
push
scas
sub
leave
jmp
aam
jle
jle
in
push
nop
pop
sbb
pop
sub
pop
xchg
lods
punpcklwd
lock
insb
push
cmpb
cs
jne
push
pop
sub
cmp
push
push
push
xchg
lods
push
mov
and
inc
fcmovnu
pop
gs
jmp
int
adc
cmpsb
clc
xchg
hlt
sbb
fstp
pop
roll
jecxz
es
insl
mov
decb
jb
jbe
fildl
add
or
push
cmp
add
pop
xor
loopne
test
mov
pop
adc
xchg
lahf
ss
cmpsb
daa
mov
imul
mov
pop
jl
movsl
je
ret
loopne
shr
mov
ja
xchg
pop
leave
enter
lds
dec
and
jno
cmp
jp
sub
sub
std
mov
in
nop
mov
inc
hlt
push
sbb
add
icebp
stos
shrb
add
jno
pop
jno
test
movsl
popf
xchg
fisttps
and
hlt
jbe
xchg
pop
test
mov
pusha
xor
sub
ds
push
arpl
orl
mov
test
hlt
neg
adc
lcall
in
pop
addb
and
xor
xchg
xchg
xchg
fiadds
adc
mov
lock
xchg
test
aas
shll
xor
cs
dec
subl
add
jecxz
push
and
add
daa
aaa
and
incl
js
add
shll
es
push
mov
and
ljmp
push
mov
sti
cmpb
cmp
or
bnd
negb
outsl
bound
lock
sbb
xor
push
jnp
loopne
repz
add
popf
lods
pop
in
xor
addb
xchg
stc
mov
adc
xlat
pop
push
incl
or
test
or
push
mov
sbb
mov
push
int
and
jno
sub
or
inc
stos
js
aam
ds
fwait
dec
or
add
xchg
faddl
in
cwtl
cmpsl
aad
or
jecxz
sub
sbb
inc
mov
fsub
jnp
push
addr16
add
fldcw
dec
out
fisubs
int
jbe
sub
push
in
int3
pop
jmp
test
rclb
lods
jp
dec
xchg
test
xchg
je
xchg
mov
push
les
xor
stc
das
in
mov
cmp
push
fcmovnb
stc
ret
xlat
flds
sub
jmp
sti
and
mov
xor
mov
enter
adc
dec
shll
fcmove
imul
iret
xchg
fbstp
shlb
pop
add
out
rcrb
jbe
mull
in
cmpsb
clc
push
and
push
sub
and
clc
lahf
pop
les
cmpsl
inc
loop
pop
jle
xchg
insl
outsb
dec
jae
add
and
int
daa
mov
inc
fwait
or
outsl
pop
add
sub
inc
jmp
stc
test
inc
std
xor
dec
adc
jnp
cmp
inc
jp
in
movsb
sarb
clc
js
jmp
aaa
shrl
mov
repnz
lods
xchg
cld
xor
andb
data16
add
dec
fwait
cwtl
and
cmp
lea
repz
leave
test
mov
stc
loope,pt
lea
push
addr16
fcoms
les
mov
loope
pop
aaa
shlb
pop
movsb
out
push
jl
jmp
mov
orb
or
dec
sbb
pushl
cli
aaa
push
mov
shrl
push
out
lock
ljmp
das
adc
popa
or
push
push
fldcw
jge
dec
or
sti
adc
fs
inc
out
adc
pop
pushf
negb
lods
into
outsl
imul
inc
or
mov
pop
mov
js
mov
imul
imul
loopne
jae
jge
add
jo
test
dec
pop
test
out
xchg
push
test
push
cmp
sub
cmpsl
lds
add
call
je
repz
test
cmp
pop
cmpsb
xchg
js
mov
fstpt
fimuls
jl
icebp
or
pop
fdivr
cmp
jl
test
cwtl
das
testb
add
fs
jbe
les
push
scas
pop
adc
pop
mov
insl
scas
sbb
jno
xorl
sbbl
inc
pop
les
pop
ljmp
in
pusha
mov
std
sub
xchg
test
xor
sbb
sub
aas
xchg
dec
sub
sbb
es
cmp
add
fs
adc
scas
lock
lcall
push
dec
add
xchg
jns
add
adc
mov
pop
jle
notl
sub
cmpsl
int3
jg
in
testb
dec
into
inc
jl
and
lock
lds
xor
enter
sarl
and
pop
cs
vmulss
and
shrb
push
mov
sub
aaa
and
mov
jne
adc
xor
sub
shll
mov
popf
insl
popf
and
mov
out
je
js
cltd
test
pop
fs
jg
sub
push
mov
arpl
repz
gs
and
mov
sub
repz
dec
lods
andb
jo
jae
cwtl
xchg
xor
iret
mov
aaa
insl
addl
push
addb
fidivrs
loop
stc
lds
leave
stos
xor
dec
mov
inc
adc
mov
and
cmp
nop
or
jo
mov
jbe
mov
push
mov
xor
xchg
mov
cmp
inc
push
add
data16
stos
xchg
mov
scas
push
pusha
or
sub
cld
ja
xor
adc
xor
test
insl
mov
test
jge
jp
adc
or
pushf
mov
push
insb
xlat
jecxz
sbb
jle
inc
dec
or
sbb
xchg
imul
xchg
mov
aaa
in
out
rcrl
xchg
xor
test
je
pusha
leave
addr16
mov
imulb
ror
xchg
jg
jmp
pop
cmc
mov
pop
clc
ret
repz
and
or
lock
ret
push
sub
mov
jl
lret
addr16
hlt
mov
cmc
int
cmp
ficoml
loop
aas
adc
add
or
inc
stos
xchg
cli
inc
pushf
pushf
popl
cmp
sub
int
lds
jnp
cli
dec
cmc
stos
fildll
cmp
cmpsb
lds
jge
mov
insl
in
stos
xlat
adc
mov
insl
sarb
inc
jne
pusha
adc
inc
in
mov
rcl
fisttps
lcall
push
test
or
jp
add
cli
cli
shll
push
cmp
cmpsb
xchg
push
cmpsl
leave
rorb
push
jmp
and
jns
mov
adc
mov
dec
insl
and
adc
push
mov
outsb
jnp
ds
cwtl
scas
push
fisttpll
hlt
icebp
mov
xchg
aad
out
sbb
fnstsw
sub
shrl
out
add
mov
mov
cmp
or
pushf
dec
cli
fisttpl
cmp
ja
loopne
xor
je
sti
jbe
aam
dec
test
ret
xchg
pop
dec
out
and
mov
rcl
mov
insl
in
cmpl
stos
cmpsb
test
mov
mov
mov
xor
push
aas
push
push
arpl
aas
lcall
fcmovnbe
inc
rolb
loope
in
sbb
push
mov
inc
add
dec
mov
and
insb
loopne
hlt
lock
cmc
xlat
inc
push
clc
mov
adc
mov
mov
or
add
addr16
jp
pop
push
pop
xchg
push
push
aad
xor
adc
push
insb
insb
dec
jb
inc
xor
jl
lea
pop
ret
mov
xor
mov
das
xchg
std
sub
shrl
sahf
dec
adc
or
xchg
cmp
neg
and
and
add
push
jmp
fs
inc
je
in
jbe
inc
sbb
out
mov
das
mov
pop
loop
aas
fldenv
mov
cmpsb
push
sbb
xor
lods
mov
ljmp
jl
mov
inc
shr
add
bound
lods
mov
xor
sahf
in
loope
test
subb
inc
or
pop
clc
xor
or
mov
and
xchg
add
outsb
or
sbb
sub
aam
mov
add
pop
popa
enter
sarb
mov
je
mov
xchg
and
test
repz
dec
push
ds
clc
enter
mov
insl
cmc
or
enter
pushf
test
ret
sub
add
and
mov
jge
mov
cmp
bound
pop
dec
mov
push
mov
or
lds
jmp
test
pop
sbb
push
cmpsb
jo
fiaddl
jnp
leave
add
stos
or
stos
icebp
mov
lds
int3
push
pop
lock
jl
fldt
dec
cmp
bound
dec
mov
lods
loopne
ja
sub
and
icebp
adc
xor
int3
xchg
cmp
mov
cmpb
add
ljmp
test
add
fs
loope
push
mov
add
outsl
jp
out
sbb
jo
pop
push
mov
cmp
or
or
shlb
cwtl
jg
cmp
mov
fistps
ja
pushf
xchg
lds
or
add
xchg
mov
insl
aad
and
or
addr16
pushf
jecxz
xchg
hlt
mov
lret
mov
cmp
pop
movsl
loop
mov
rcrb
arpl
addr16
fs
push
js
fldt
mulb
popa
fwait
arpl
add
pusha
ret
xor
mov
cmp
fcmovnb
mov
out
xor
rcll
sub
das
outsb
xchg
adc
pop
mov
movsl
jbe
pop
aam
jmp
movsl
adc
cli
xor
mov
jp
adc
pop
sub
and
xchg
sub
subb
xor
out
mov
fdivrl
add
pop
mov
lds
ljmp
lods
daa
ss
imul
mov
mov
pop
push
pop
repnz
aaa
popa
jge
in
out
pop
pop
dec
jge
hlt
rol
jo
mov
dec
call
lret
mov
xchg
test
loop
mov
pusha
xchg
adc
imul
sahf
dec
push
enter
pop
sub
sub
add
fwait
mov
xor
jge
leave
cwtl
lahf
imul
mov
sub
add
cmp
fildl
jg
sub
sbb
movsl
adc
insb
sbbl
cmp
pop
rorb
jl
cmp
adc
lahf
jne
clc
call
or
or
jbe
call
outsb
adc
push
fsts
rcrb
and
pop
push
dec
xchg
mov
and
test
je
enter
mov
cli
cmp
jl
mov
mov
popa
add
jle
jb,pn
sahf
jl
jb
imul
jl
loope
mov
cmc
in
mov
mov
add
xchg
or
pop
or
mov
aas
je
outsb
insb
enter
fimull
lahf
jo
pusha
and
scas
adc
test
push
decb
push
sbb
mov
lahf
sbb
ret
mov
push
aaa
mov
inc
jl
rorl
js
inc
rclb
imul
fbstp
fdiv
push
sbb
xorl
mov
mov
inc
ret
aam
sub
jp
in
cli
popa
rep
jne
inc
testl
clc
or
out
adc
adc
jge
fisttpll
cmpsb
xchg
stc
mov
cmp
sbb
mov
sarb
cmp
cld
mov
data16
pmuludq
hlt
xlat
ja
in
inc
arpl
pop
mov
shl
dec
or
scas
adc
sbb
outsl
lea
inc
dec
aas
dec
test
iret
loopne
or
jb
andl
adc
sbbb
inc
lret
ljmp
filds
mov
inc
les
inc
imul
xorb
dec
or
mov
fs
leave
arpl
cmpsl
paddb
mov
aas
in
aas
fsubl
add
mov
sbb
lods
flds
mov
cmp
mov
mov
jo
mov
cmpsl
fldcw
jne
ss
xor
cmpsb
dec
and
clc
or
andb
lock
jne
xchg
xchg
pop
jb
iret
pop
cmp
js
lea
pop
pop
mov
jg
or
push
or
cmp
xor
fsubs
mov
and
inc
mov
jle
cmpsl
push
add
and
mov
rorl
loopne
sahf
nop
push
mov
xor
test
shlb
jno
mov
dec
or
adc
inc
inc
cmp
xchg
jne
lods
insb
or
into
mov
pop
mov
jge
xchg
je
add
adc
or
sub
stos
lahf
xor
or
xchg
mov
jle
aam
push
mov
sbb
and
js
lahf
fdivrs
lock
loop
mov
sbb
mov
mov
jg
adc
lods
inc
and
mov
or
fidivrl
sar
sbb
sbb
and
mov
xchg
mov
sbb
mov
xor
jp
xor
test
xorl
inc
jbe
mov
fs
enter
addl
das
call
out
jno
scas
fwait
jo
and
sbb
das
std
jnp
pop
lods
add
shlb
and
not
test
and
sahf
and
les
lahf
and
jmp
loope
mov
arpl
mov
mov
sar
pop
mov
jmp
sbb
cmpb
cmp
fdivs
es
fbld
insl
adc
xchg
add
mov
adc
jb
xchg
int
ret
adcl
cmpsl
sub
clc
enter
and
jbe
xchg
fsubs
adc
inc
pop
push
cld
lahf
sahf
nop
jo
or
test
adc
pop
lds
xchg
nop
cmpsb
mov
mov
and
push
inc
test
or
sub
pop
popf
outsl
cmp
mov
rol
pop
lcall
scas
pop
push
into
xor
inc
insb
movsl
add
movsb
mov
leave
imul
into
repnz
rcll
movsb
test
popa
imul
push
and
jnp
cmp
nop
iret
lcall
jp
mov
movsb
xchg
cmc
out
pop
clc
or
lods
fnstcw
mov
call
xchg
push
pop
sbb
mov
jle
lock
movsl
stos
inc
aaa
push
sub
mov
daa
enter
ljmp
lret
sbb
cmp
loop
mov
inc
icebp
popa
sbb
add
mov
mov
addb
out
jg
adc
test
dec
push
pop
push
adcl
imull
mov
aam
jmp
rcrl
pop
notb
push
dec
notl
movsl
or
imul
mov
jae
lcall
sub
mov
and
fs
cmp
std
andb
xchg
sub
rol
pop
sbbb
or
xchg
xchg
hlt
jge
mov
mov
popf
dec
out
stc
jl
and
sub
popf
sahf
and
fs
sbbb
lcall
sbb
jle
xlat
je
or
jne
jecxz
daa
jbe
rcrl
out
mov
jns
mov
mov
or
adc
hlt
and
cmp
inc
sarl
loope
xor
jne
outsb
sub
ds
out
push
sar
ret
or
cmp
fnstsw
outsb
loop
cmc
divl
shlb
lock
lahf
and
stos
fld1
push
les
cmp
mov
scas
insl
divl
in
ljmp
inc
in
pop
mov
loope
dec
push
outsl
xorl
xchg
xor
loope
stos
sub
call
mov
lds
ljmp
sbb
movsb
ljmp
ja
pop
daa
aam
xor
std
imul
jl
leave
inc
pop
mov
imul
stos
xchg
aaa
mov
jp
fldenv
push
sbb
sti
or
lock
movsl
pop
push
adc
add
jns
out
rcll
addr16
mov
roll
pop
mov
insb
ret
xchg
xor
stos
xor
push
push
popa
aaa
ja
lea
leave
mov
push
sahf
push
arpl
mov
mov
popf
push
sub
jp
or
lahf
push
xchg
xlat
lret
or
cmp
fmull
xor
lock
cmp
movsl
cli
sub
loopne
adc
and
enter
movsl
das
mov
xchg
pusha
mulb
divb
roll
mov
fwait
lods
or
push
jle
adc
sub
cmpl
mov
adc
scas
mov
lods
xchg
scas
rorb
pop
and
xchg
sbbl
aam
xchg
dec
std
lret
in
ret
push
stos
ds
movsl
fs
stc
orb
imul
sbb
cmpsb
xchg
mov
testb
ja
test
movsl
into
jns
jno
sbb
pop
test
pop
pushf
xor
ja
dec
into
sub
ds
pop
out
fstl
mov
sbb
popa
call
int3
cmpsl
add
pusha
loope
mov
out
inc
or
sub
popf
xchg
data16
jo
xlat
scas
in
repnz
pop
ja
pop
sbb
loop
lock
jmp
daa
pop
xor
ret
mov
call
push
pusha
fdivrs
jno,pt
mov
test
test
sarb
orl
popa
pop
mov
mov
lds
mov
push
add
xor
int
lsl
lods
and
adc
jle
out
pop
xchg
leave
enter
inc
sbb
cmc
movsb
loop
lods
dec
dec
mov
pop
das
pop
xchg
mov
inc
out
xor
fwait
loopne
stc
popa
loop
scas
aas
xchg
push
add
adc
cmp
mov
cmpl
jnp
jmp
nop
out
fwait
scas
cmp
mov
or
and
jecxz
stos
incl
adc
lea
cmp
out
cmp
pop
dec
cwtl
aaa
sub
cmp
xor
lcall
mov
mov
pop
data16
lods
and
mov
movsb
xchg
insl
cmp
shlb
aad
imul
repnz
punpcklbw
aam
xor
sbb
dec
mov
xchg
outsb
push
or
sahf
js
cs
pop
mov
sahf
sbb
mov
adc
inc
jmp
xor
mov
adc
mov
push
cltd
mov
jbe
ja
test
mov
in
iret
mov
adc
sbb
popf
lock
jg
shlb
sub
daa
cmpl
mov
mov
lcall
mov
push
push
movsl
sbb
mov
movl
or
xor
cs
faddl
cmpsb
fadd
cmp
ja
pop
adc
sbb
int3
add
loopne
add
fdivp
sbb
mov
mov
push
dec
xor
nop
fimuls
sahf
jp
insl
sub
sbb
sbb
push
rcr
out
mov
sti
in
mov
clc
nop
ljmp
dec
mov
hlt
cmpsl
gs
mov
mov
sbb
and
addb
pop
fsqrt
or
xchg
add
or
cvtss2si
or
scas
or
test
sbb
mov
pop
mov
shrl
jbe
adc
dec
mov
pop
nop
insl
ljmp
fstpl
push
aas
mov
fadds
inc
clc
fucomi
pop
sub
jnp
xor
jmp
rcll
int3
xchg
xchg
xor
jmp
push
insl
test
jno
daa
mov
jne
xchg
mov
add
aad
add
adc
dec
repz
jmp
xlat
dec
mov
cmpb
mov
subb
shr
adc
mov
orl
inc
popf
sti
add
xchg
hlt
pop
addb
movsl
sub
adc
pop
mov
sbb
shr
push
movsl
cmpsb
mov
insl
ds
inc
bound
fst
mov
mov
sub
adc
cld
dec
adc
or
jae
mov
and
unpcklps
cmp
sbb
adc
stos
pop
mov
pop
jbe
adc
lock
out
out
dec
sub
or
push
and
jo
xchg
popa
cld
test
sbb
stc
test
idivl
push
ret
fwait
sbb
adc
xor
das
in
cmp
movsb
stos
or
inc
dec
mov
sub
adc
in
in
inc
add
imul
dec
enter
fdivl
mov
fmul
sbb
cmp
mov
inc
in
fbstp
push
push
push
jno
push
pop
push
ret
xor
pop
xor
mov
rorl
in
andl
ja
jnp
add
or
sbb
out
or
fldl
and
out
inc
rorl
jo
sbb
rorb
adc
cmp
cld
push
mov
notb
cmpl
mov
lock
pusha
mov
aam
xchg
push
jecxz
outsl
cwtl
out
movsl
lcall
scas
cmc
inc
lds
push
mov
cmpb
into
fdivs
push
popa
rcr
mov
je
sub
clc
ret
xor
out
pop
nop
aam
push
iret
adc
sti
enter
pushf
cmpsb
ja
adc
shl
insl
and
pop
mov
push
mov
or
bound
daa
aam
mov
ret
fsubrl
add
inc
dec
test
fadds
xchg
arpl
push
fdivrl
pop
and
flds
shlb
test
dec
jl
data16
jle
push
mov
sbb
mov
or
dec
rcrb
aam
addr16
sub
xlat
std
push
cmp
es
dec
adc
xchg
sbb
cltd
out
sbb
lods
or
mov
xor
int
aaa
int
dec
push
sti
in
test
inc
inc
xchg
mov
adc
push
or
bound
cmp
shll
insl
jmp
xchg
jbe
pusha
add
rolb
add
or
lcall
push
xchg
data16
aam
sub
loopne
aad
or
outsb
popf
xor
jno
add
stos
mov
mov
pop
ret
adcb
sbb
inc
mov
sbbl
mov
mov
movsb
xchg
mov
inc
ljmp
jo
adcl
adc
aam
sub
xor
imul
dec
pop
addb
adc
outsl
ja
popa
or
fisubs
dec
fnstcw
js
xchg
fistpl
fidivrs
mov
pushf
mov
in
sbbb
push
cmp
sbb
jmp
lea
imul
rorb
mov
xor
add
aam
rolb
subl
mov
movsb
inc
lods
call
in
stos
insl
pop
insb
xor
popf
or
rol
push
cwtl
dec
pop
jle
mov
inc
mov
cltd
sbb
repz
std
loopne
inc
mov
add
jns
nop
push
mov
push
ja
cmpsl
pop
push
out
addr16
jecxz
arpl
cmp
mov
enter
push
addr16
push
push
lcall
sub
jns
push
mov
mov
jns
push
adc
out
les
inc
cmp
and
jb
test
test
xor
push
aam
test
es
lcall
pop
push
loop
testb
xchg
sbb
add
andb
adc
inc
jge
shll
or
stos
jmp
xchg
mov
jne
push
add
clc
es
mov
pop
sarb
enter
pop
rcrl
mov
or
bound
push
inc
adc
lret
addb
mov
or
test
iret
mov
xchg
push
fcomps
mov
scas
inc
mov
mov
ret
adc
cwtl
adc
mov
mull
lahf
inc
pop
scas
and
push
dec
lock
inc
inc
cmp
push
out
mov
dec
jmp
sbbb
sbbl
mov
jae
jno
push
push
xchg
xchg
adc
and
imul
lret
mov
jne
mov
bound
in
xor
ret
imul
sub
sub
ret
inc
cltd
xchg
jg
inc
insb
ja
repnz
jl
arpl
mov
je
rorb
mov
loop
and
add
lock
push
pop
seto
imul
add
in
jnp
sbb
movsl
jno
dec
ret
cmp
pop
popa
sti
and
stc
adc
icebp
mov
rcll
popa
dec
cmp
add
insl
movsl
adc
sarl
push
lahf
je
and
mov
leave
cmp
cmc
mov
inc
packuswb
mov
cld
les
inc
pop
sub
xor
add
pop
fimuls
icebp
shl
xor
shll
inc
lcall
jmp
icebp
movsb
sub
decb
mull
push
pop
into
cmp
or
mov
push
jmp
xor
aam
std
mov
adc
jne
push
pop
adc
cld
push
jle
jne
popa
ds
rcr
ljmp
imul
and
sub
popf
in
mov
xor
imul
sbb
loope
adc
sub
mov
cmp
mov
mov
mov
testl
test
dec
mov
gs
test
sub
pop
push
xor
dec
pop
inc
outsb
pop
in
ja
das
daa
jbe
sbb
cmc
inc
sub
mov
loop
and
addb
into
lods
mov
sub
push
and
dec
xchg
xchg
out
inc
int
push
insb
pop
lret
pcmpgtd
je
push
push
lret
lods
push
adc
xchg
add
es
fs
pop
push
cmp
mov
sbb
shrb
jae
out
sbb
clc
or
out
fisubs
and
and
lahf
lcall
addr16
cmp
xchg
iret
and
icebp
popf
ss
fadds
cs
adc
out
push
fstpl
cmp
push
or
pop
sahf
fwait
inc
sbb
nop
movsb
or
call
xchg
push
lds
out
lds
pop
lret
mov
mov
push
dec
in
lret
loopne
add
pop
sbb
rcll
mov
jp
xor
std
sub
adc
jb
jp
jl
in
imulb
ja
mov
loop
mov
shl
mov
mov
add
pop
ficoml
jne
sbb
imull
rclb
je
stc
xchg
jns
scas
mov
jnp
adc
negl
test
sti
out
shrl
imul
cmp
or
push
std
dec
xorl
test
push
rcr
xchg
nop
js
out
shl
pop
mov
push
mov
jecxz
jg
or
es
ljmp
sbb
lea
jbe
sbb
dec
add
out
jno
add
mov
cmp
iret
icebp
jg
adc
nop
push
ja
inc
pop
pusha
sbb
loop
or
out
dec
das
hlt
push
scas
insl
mov
insl
push
aas
xchg
push
push
mov
pop
mov
push
lcall
js
fsubrl
out
js
mov
add
or
test
or
cld
xchg
sub
sahf
test
shrl
cmp
and
sarl
pusha
xchg
mov
inc
rorl
adc
xchg
jge
adc
add
div
cmp
push
push
mov
pop
inc
mov
loop
pop
push
push
mov
insl
xor
mov
jg
hlt
mov
in
inc
dec
jecxz
sbb
push
stos
push
pop
xor
test
sbb
outsl
xor
popa
cli
pop
push
in
mov
int
std
stc
mov
cs
xchg
cmp
pop
jp,pt
fsubr
mov
int
adc
sbb
push
data16
add
dec
mov
fwait
js
rep
repz
inc
mov
pop
addr16
and
sub
pusha
jnp
psllw
aaa
mulb
xor
cmp
mov
and
loopne
js
andb
arpl
cmp
cmp
inc
mov
inc
imul
lret
pop
and
call
lock
insb
fucomi
lock
repz
add
clc
orb
sub
das
sub
mov
loope
subb
std
xchg
jo
mov
mov
js
and
ret
sti
lods
orl
or
or
arpl
jle
jecxz
lahf
xor
ss
je
xor
xchg
mov
repnz
out
xchg
mov
inc
pop
inc
inc
std
cmpsl
and
lahf
dec
popa
fmull
mov
pop
and
in
mov
cmpsl
sub
push
mov
mov
insl
fcom
and
push
roll
jmp
cwtl
aaa
cmp
movsl
cmpsb
xchg
fildl
and
leave
loopne,pn
je
movl
or
cmp
and
cld
cmp
cmpsl
mov
sbb
and
inc
fcmovu
mov
and
movsb
lods
cmp
or
fwait
jl
lods
sbb
mov
nop
cld
xchg
icebp
mov
punpckhbw
inc
dec
cli
dec
mov
push
and
cltd
inc
fucomp
mov
push
add
sbb
inc
out
add
jno
dec
shlb
mov
in
and
movsb
cmc
int
rolb
mov
repnz
sahf
and
pop
fisttpll
pop
outsb
jl
movsb
pop
jmp
cmp
add
and
adc
mov
subl
rcll
out
or
adc
hlt
cmp
scas
mov
mov
filds
ja
mov
add
repz
add
pop
add
shlb
iret
pop
cmovae
mov
mov
mov
fsub
bound
sub
loope
add
lea
mov
pop
xor
stos
push
int3
push
fmull
cmp
dec
cwtl
dec
pop
xor
frstpm(287
shl
cs
push
jo
addr16
aam
enter
xor
push
sbb
shrl
lcall
iret
in
mov
sub
in
mov
jp
push
mov
mov
in
xchg
xor
div
xchg
aas
inc
and
dec
mov
imul
shll
incb
push
shlb
loopne
push
dec
pusha
dec
push
into
cmpsl
sarb
dec
std
mov
pop
rclb
ret
ljmp
ficompl
xchg
pop
jge
rcll
dec
je,pn
je
mov
mov
js
mov
mov
mov
mov
mov
add
pop
push
ja
cld
les
adc
cmpsl
inc
inc
cwtl
mov
std
jecxz
add
pop
sub
mov
push
xchg
je
cmpsl
inc
inc
sub
or
pop
cmc
popa
adc
cmp
fdivrp
and
push
lods
mov
fwait
jle
out
push
xorl
or
ret
mov
jmp
lahf
ss
push
cs
xor
sarl
mov
jmp
divb
dec
mov
sub
enter
loop
push
sahf
jb
sub
lock
jae
gs
cld
mov
loop
push
cmpsl
hlt
test
sarl
and
stos
enter
rcrl
lods
test
or
mov
adc
test
lahf
subl
cmpl
inc
mov
sub
pop
jecxz
sbb
mov
ds
or
xor
pop
mov
ds
mov
add
fcmovbe
je
je
inc
inc
dec
sti
sub
lahf
out
mov
jns
out
add
popf
rolb
sbb
sbb
lock
test
push
es
or
and
cmc
inc
push
mov
mov
push
cmpsb
jmp
in
jb
in
fwait
lods
orl
scas
add
push
test
data16
push
rcr
inc
int
cmp
hlt
and
sar
add
fidivrs
lods
test
rolb
pop
push
push
add
jmp
adc
cmp
mov
es
inc
cmp
mov
mov
add
mov
push
dec
mov
push
addb
insb
sahf
jp
push
lahf
lock
nop
test
movsb
inc
pop
sub
mov
in
xor
scas
mov
pop
mov
nop
mov
lcall
in
icebp
push
sbb
mov
dec
xor
pop
cli
or
push
int3
imul
cmp
jne
sub
jp
jl
sbb
enter
mov
stos
hlt
ret
lds
sbb
movsb
mov
mov
fadd
cmp
sbb
adc
insl
popa
leave
in
arpl
test
pop
mov
mov
jae
rol
cmp
lcall
das
iret
xor
call
inc
daa
jl
add
jne
das
inc
pop
xlat
popf
cmp
fdivrl
aam
mov
mov
scas
or
jne
sbb
or
xchg
movsl
jnp
push
and
fdivrp
rclb
jp
mov
gs
fsts
shrb
loopne
ret
inc
fwait
or
jmp
insb
sub
iret
shll
adc
sub
mov
bound
mov
cmpsl
add
pop
addr16
ficoms
adc
cmp
inc
pshufw
push
repnz
fwait
jbe
scas
sbb
cmp
xchg
cld
aaa
imul
mov
dec
mov
sahf
or
bnd
rcl
xor
inc
or
inc
cmp
pushf
andl
or
mov
add
gs
popf
dec
sub
jmp
iret
adc
and
dec
add
xor
mov
xchg
jb
pop
nop
cmp
fcmovnu
pop
push
or
loope,pt
fsubl
insl
push
jne
in
mov
popfw
sbb
shll
imul
imul
or
push
sub
test
les
aas
adc
inc
mov
cmp
test
and
inc
pusha
cmp
inc
in
mov
in
xor
test
fbld
push
rolb
mov
shll
mov
call
ficomps
and
loopne
daa
cmp
cmpsb
nop
mov
mov
test
outsl
push
pop
xchg
inc
or
stc
aad
call
lahf
cmp
ret
xor
pop
add
xor
shl
fsubrl
sahf
adc
nop
shrl
xor
dec
out
dec
push
pop
enter
xor
adc
sub
stos
xchg
sub
or
mov
jne
add
add
adc
mov
outsl
loopne
and
adc
cmpsb
aad
pop
clc
cmp
test
inc
pusha
imul
lods
adcb
push
leave
xchg
fstpt
jbe
jnp
adc
sub
sbb
add
adc
sahf
mov
call
push
mov
movsl
mov
fbstp
adc
adc
jnp
in
fisubl
arpl
mov
pop
and
stos
cwtl
jne
mov
inc
xor
test
loope
fdivrl
mov
test
lcall
cmp
ss
in
out
dec
xchg
ds
ljmp
pop
cli
icebp
mov
fdivr
xchg
sbbl
jp
add
or
int
xchg
pop
jbe
jmp
arpl
das
xchg
sbb
das
pop
cmp
shll
int3
cmp
addl
je
inc
adc
bound
out
jmp
sbb
mov
repnz
testb
mov
mov
mov
fdivr
fstps
xchg
ret
mov
lret
popf
mov
sbb
jmp
int3
lcall
rcl
shrb
add
xor
and
test
adc
jb
adc
cli
dec
jae
adc
outsb
enter
jbe
mov
into
insb
push
adc
pop
outsl
fisubl
push
mov
xor
bnd
mov
sub
into
rcll
xchg
cmc
or
adc
popa
inc
mov
and
out
in
nop
mov
pop
mov
cmpsb
pop
xchg
sahf
aam
inc
mov
mov
aad
cmc
pop
adc
add
es
add
mov
imul
mov
mov
or
mov
and
popf
mov
mov
or
cmpsl
cmpsl
or
fisttpll
loop
in
add
jno
sahf
or
push
and
mov
cmpsl
mov
test
xchg
arpl
pusha
pop
int3
mov
xchg
adc
pop
push
xor
cmp
xchg
fwait
daa
push
shrb
icebp
adc
mov
adc
mov
ffreep
push
scas
punpcklwd
xchg
sub
dec
pop
jo
jo
fsub
inc
push
xor
bound
loopne
add
push
outsl
inc
sbb
jp
cmp
sub
stos
inc
cmc
xor
rcrl
or
ljmp
xor
jle
xchg
push
gs
xor
mov
sub
fstpt
stc
cmp
push
ja
rclb
arpl
lret
pop
inc
jle
inc
xchg
fsubs
dec
or
ret
xor
mov
add
xor
faddp
xlat
in
int3
gs
stc
imul
stc
aas
mov
aad
mov
into
adcl
lock
sub
es
scas
mov
mov
rorl
pop
sbb
ret
out
repnz
mov
or
sar
mov
movsl
xchg
mov
js
cmp
cmc
adc
jns
xor
add
ljmp
push
sahf
sbb
pop
mov
mov
ret
or
inc
arpl
add
dec
aad
popf
sub
ret
test
mov
sbb
out
mov
mov
test
adc
cmpsb
test
repnz
cmp
sub
add
jnp,pn
je
xchg
jb
loope
sub
repz
xchg
outsb
sbb
sub
lcall
adc
icebp
mov
add
sub
fcomp
mov
jl
inc
dec
lods
mov
les
add
daa
mov
add
incb
leave
push
cmpsl
or
pushl
inc
jg
inc
or
lahf
std
or
les
orb
xchg
dec
pushf
cmp
jge
fwait
nop
and
fidivl
test
repnz
insb
fisubrl
cli
insl
lock
out
clc
loopne
inc
xchg
fs
xor
lahf
cmp
push
fsubl
sub
iret
mov
scas
icebp
daa
adc
and
sti
rcl
dec
inc
fistps
inc
xorl
and
xchg
sbb
pop
inc
push
sbb
push
loope
fidivrs
xchg
adc
and
loopne
loope
lahf
ja
fwait
in
pop
outsl
jge
push
pop
pop
fs
cmp
lods
mov
leave
and
inc
pop
mov
imul
sbb
push
movsl
push
les
xchg
outsl
or
sar
dec
or
ret
sbb
sti
int3
aas
testl
mov
rcl
mov
add
das
and
insl
and
pop
dec
push
sub
lods
movsl
lods
mov
in
adc
jb
arpl
in
add
fdivrs
jmp
push
leave
adc
dec
movsl
adc
int3
insl
insl
lds
cmp
push
add
xchg
and
sbb
stc
sub
mov
insl
cli
test
jne
mov
decl
cmp
cmp
out
cmp
mov
lock
add
lret
mov
test
adc
mov
add
inc
xor
push
divl
adc
mov
xchg
fnstcw
les
jge
xor
into
xchg
cli
icebp
jmp
pop
inc
jecxz
push
mov
clc
nop
ret
or
repnz
lret
sbb
das
adc
mov
dec
mov
js
inc
lds
and
bound
popf
cwtl
aad
hlt
add
add
pop
and
popa
add
inc
in
daa
jnp
in
jne
sbb
push
or
sbb
rolb
cwtl
out
shl
pop
idivl
loope
and
push
and
sbb
pop
subb
in
jne
into
stos
mov
loope
pop
movsb
repnz
repnz
lret
test
mov
xchg
push
sbbl
ljmp
mov
and
mov
sbb
cs
mov
loope
xor
mov
mov
xor
sbb
and
mov
sbb
lcall
mov
or
add
js
push
iret
pop
hlt
mov
sub
cmp
leave
dec
mov
pop
mov
iret
fiaddl
mov
mov
loop
push
ret
out
adc
and
inc
adc
insl
pop
ss
ret
in
mov
add
clc
mov
push
addb
pusha
mov
mov
test
bound
xor
and
movsb
repz
in
ret
das
das
mov
ljmp
shrl
cs
pop
mov
mov
pop
shlb
popf
pop
pop
xchg
mov
jle
xor
xchg
insb
add
loop
test
jno
es
sarb
mov
xor
mov
sbb
xor
repz
cltd
in
adc
mov
lods
negl
add
pushf
xchg
mov
jl
or
jns
lea
mov
inc
mov
cmp
sbb
divl
sbb
pop
into
mov
lock
add
ja
js
cmp
dec
or
or
mov
in
xor
cmp
mov
mov
sahf
sbb
outsl
pop
jp
push
sbb
std
das
add
enter
cmp
lods
add
into
jge
or
push
add
adc
rolb
leave
adcl
ror
cmpsb
adc
aas
into
rcr
test
pop
std
and
lea
push
leave
sub
add
inc
push
adc
std
add
and
xchg
add
adc
icebp
cmp
push
test
flds
call
pop
fmul
adc
std
mov
in
movb
xor
aad
jnp
dec
arpl
es
jl
cli
loope
dec
jae
push
enter
mov
ret
inc
ja
cmp
mov
mov
adc
jge
pop
push
testb
popf
xchg
inc
inc
fisubrs
clc
jne
push
jb
out
test
jns
es
inc
cmp
aas
and
or
add
pop
std
inc
clc
test
sub
aad
data16
sbb
push
ret
cmp
xchg
fwait
or
icebp
lods
xchg
sti
mov
xor
xchg
es
rorb
je
ret
mov
movsl
jbe
adc
sbb
jnp
shlb
jmp
clc
push
push
std
push
out
sahf
sar
rcl
jno
cmp
or
aas
push
lock
push
sub
cwtl
ss
data16
jp
mov
adc
add
pop
inc
jne
jnp
adc
out
jae
inc
mov
mov
xchg
and
push
or
mov
out
nop
add
or
ror
mov
xchg
das
outsb
bndstx
or
push
xchg
inc
mov
inc
mov
adc
test
sbb
es
std
xchg
xor
pop
aam
loope
daa
and
push
mov
mov
fwait
leave
sbb
mov
popf
mov
ret
popa
mov
dec
xchg
into
mov
mov
lds
lea
ret
out
push
shrl
ret
lods
pop
aas
ret
adc
fnsave
jecxz
fwait
sub
mov
sub
xor
outsl
mov
rorl
aaa
in
arpl
das
xchg
lret
or
repz
sub
sub
std
adc
xchg
lods
pop
das
mov
or
icebp
sbb
and
sbb
add
js
lea
dec
cmp
aad
js
xchg
loopne
inc
sbb
mov
fmuls
bswap
call
test
mov
inc
shrb
mov
mov
jno
sbb
jmp
aaa
pminsw
repz
adc
call
cmp
jmp
movsb
shr
cmp
rcrl
loope
rolb
or
data16
jno
test
cwtl
jnp
mov
or
jge
dec
push
lods
jbe
ja
gs
jae
jbe
xchg
vsubps
mov
cmp
cltd
cli
cmp
lahf
into
ja
xchg
mov
mov
jp
sbb
jl
xor
hlt
stc
aaa
inc
and
mov
scas
in
adc
mov
and
shrl
inc
pusha
jne
jae
mov
frstor
stc
scas
add
pop
push
jecxz
popa
inc
into
mov
adc
sbb
rcrl
xlat
or
or
dec
mov
mov
push
loop
xchg
sbb
enter
ficompl
push
lds
or
movsl
jmp
imul
mov
loop
ficoms
xor
bound
adc
js
es
lods
cmc
ss
sbb
pop
add
xor
je
sar
push
or
push
xor
sbb
jge
jns
std
inc
cs
ret
cmp
jl
xchg
into
movsb
leave
rolb
dec
std
ljmp
dec
adc
inc
ljmp
lods
push
xchg
mov
dec
jmp
jae
sbb
test
out
xor
ret
mov
lcall
jp
movsb
popf
jecxz
sbb
cmp
pop
mov
mov
scas
popa
dec
add
mov
divl
inc
ret
add
das
je
fs
je
add
test
out
xlat
pop
inc
mov
mov
pop
sbb
in
mov
fisttpll
cwtl
add
mov
mov
jl
mov
es
inc
mov
inc
insb
adcl
loop
fildll
jo
adc
push
scas
jae
test
and
push
std
mov
addl
loopne
addr16
in
cmp
aas
sahf
jp
jns
sti
cli
pushf
sbb
jne
lea
mov
adc
incb
mov
rclb
sub
pop
mov
sbb
push
sub
ja
loop
or
fdiv
and
fdivr
or
mov
call
incl
cli
jg
add
insl
call
mov
mov
ret
rorl
loopne
jp
xchg
xchg
dec
shlb
insb
or
jl
cmc
cmp
shufps
or
xchg
add
inc
cmp
rclb
aas
xlat
popa
adc
add
push
push
push
pop
arpl
mov
add
jnp
and
mov
and
out
rcrl
icebp
sub
sbb
movsl
scas
xor
cmpsl
inc
xlat
mov
and
dec
xor
jmp
in
or
sbb
je
aas
outsl
add
mov
mov
test
or
push
outsl
negb
jmp
fwait
xor
into
lds
dec
cmp
or
lea
lcall
mov
test
inc
test
cs
jnp
iret
fwait
dec
loopne
mov
dec
jmp
adc
mov
shlb
rcl
xor
mov
insl
repz
ds
xor
cli
inc
adc
enter
rcrl
cmp
and
mov
ret
loopne
ret
sub
cmp
in
test
imul
js
insl
scas
add
sub
cmpl
xchg
cmpsb
xchg
and
out
sti
jg
mov
or
repnz
xchg
out
fcompl
cmp
mov
pop
mov
xchg
xchg
xor
andl
dec
inc
inc
stos
stos
imul
movsl
aas
flds
mov
pushfw
pop
mov
in
outsb
popf
mov
sbb
push
cmpl
in
sbb
mov
imul
push
aas
mov
inc
mov
mov
scas
lods
ljmp
push
ret
pop
or
sbb
mov
loope
xchg
std
cmpsb
fs
add
insb
jbe
pop
pop
scas
jnp
inc
xchg
push
or
les
and
mov
jmp
mov
sbb
pop
daa
and
lahf
push
push
lcall
jp
mov
dec
lcall
lods
xor
loope
push
ret
cmp
add
fs
jl
inc
pop
rol
bound
or
lahf
mov
testb
push
call
jns
mov
cmp
jb
cmpsb
hlt
cmp
sti
imul
mov
rcr
rcrb
gs
stos
adcl
sbb
mov
arpl
das
xor
sub
in
test
cli
lods
push
out
mov
xor
sahf
int
es
fldt
lods
out
outsb
mov
leave
or
lods
mov
push
popa
pop
mov
mov
xchg
movsl
jg
sahf
pop
jne
pushf
sub
setbe
movsb
sbbl
inc
sbb
mov
add
add
push
adc
std
inc
add
test
mov
data16
adc
mov
dec
inc
dec
add
mov
jae
in
popf
movsl
cli
xchg
xor
out
mov
addr16
sub
xchg
jnp
ficoml
in
mov
add
pop
jmp
xor
bound
add
adc
bound
out
and
xlat
mov
or
fsubl
push
or
sbb
push
jb
xorb
push
cmp
mov
insl
and
or
fwait
push
ret
mov
inc
pop
fcomip
shlb
fsts
cwtl
pop
inc
loope
pop
icebp
mov
add
pusha
out
sbb
or
inc
dec
mov
fildl
notl
cmp
pop
jb
ret
sub
inc
mov
outsb
pop
push
lahf
fs
mov
cmc
pop
push
cwtl
je
shlb
and
sub
in
add
push
out
and
push
sub
pop
filds
lods
xchg
leave
hlt
dec
cmc
add
orl
mov
ret
sub
dec
addb
cmp
addr16
fninit
fdivrl
mov
shll
cmp
jg
adc
out
in
inc
cmpsb
mov
sbb
add
and
out
inc
mov
aad
add
test
ss
dec
or
imul
popa
xor
dec
shlb
pop
inc
xchg
and
in
xor
add
xor
sarb
repnz
add
nop
pop
jle
xchg
adc
cmp
jge
stos
hlt
leave
xchg
cwtl
lahf
fcoms
mov
cs
push
mov
ret
mov
cmpsb
mov
adc
leave
mov
je
aam
jg
es
xchg
mov
dec
xor
cmp
scas
xor
shlb
lret
sbb
lock
xchg
ljmp
pop
decl
stc
pusha
or
xor
add
dec
je
shr
fwait
sarb
xlat
xor
mov
fisubrl
insb
cmovbe
jmp
popa
lds
mov
call
push
sti
mov
pusha
adc
cld
dec
in
cmp
ret
sahf
and
in
inc
push
out
hlt
shrb
inc
xchg
ret
sbb
mov
clc
inc
aas
mov
push
jle
mov
test
nop
mov
pop
clc
rcll
add
or
pop
mov
mov
jns
xor
cld
std
xor
test
add
test
mov
jl
and
cmp
rcrl
jbe
fsubrs
pop
data16
mov
leave
mov
sub
mov
out
xchg
push
cmc
add
dec
jne
inc
push
inc
insl
stos
shl
repz
into
vpsadbw
inc
mov
mov
fldt
popa
add
fsubrs
subb
les
es
mov
and
mov
iret
cmp
bound
mov
mov
inc
xchg
dec
add
inc
and
dec
add
call
inc
dec
cmp
jbe
mov
andb
push
pop
or
lcall
pop
mov
mov
pop
push
dec
jns
stos
mov
loop
mov
pop
mov
push
xchg
loope
or
loope
test
push
push
or
mov
inc
and
das
outsb
inc
adc
cs
sbb
mov
repnz
mov
adc
dec
sbb
mov
jecxz
loope
pusha
movsl
loope
aaa
pop
pop
pop
idivl
test
mov
add
dec
aam
rcr
icebp
dec
xor
inc
pop
rol
jle
adc
mov
std
xchg
inc
mov
in
shrb
scas
xor
jmp
lret
pusha
les
add
inc
movsb
incl
cmp
mull
xlat
leave
lods
jle
fidivl
add
pushf
les
xlat
ficomps
push
clc
inc
push
cmc
mov
mov
pop
fadd
shl
sti
push
jb
shll
repz
xchg
jne
add
push
adcb
push
lds
js
cmc
adc
mov
push
pushf
cmp
inc
cmpsl
mov
xchg
adc
pop
inc
inc
pop
cmp
dec
adc
jb
dec
test
mov
pop
and
repz
ss
insb
cli
inc
test
popa
jmp
daa
cwtl
aaa
adc
jl
test
ret
mov
xchg
enter
xchg
shr
leave
imul
test
and
xchg
inc
ffree
pop
add
icebp
push
push
mov
jo
popa
push
repz
lods
ja
shlb
adc
punpckhdq
xlat
enter
xor
mov
repnz
pop
data16
gs
add
mov
dec
or
pop
fs
rorb
inc
bswap
push
addr16
mov
outsb
add
rolb
push
in
or
andl
cld
pop
sbb
sub
push
mov
mov
adc
dec
pop
cli
adc
jns
push
pop
mov
aad
and
cmp
inc
jl
add
lret
hlt
sbb
rcrb
loopne
sbb
cld
xorl
pop
outsl
pop
mov
inc
jae
lock
aam
int
mov
insl
mov
or
cmpsl
daa
fnstcw
mov
pop
add
xchg
cmc
aaa
ja
dec
loope
mov
insl
test
mov
adc
outsl
add
push
inc
popf
ds
inc
jo
inc
add
jg
fbstp
add
cmpsb
jb
das
mov
pop
or
arpl
addl
cmpsl
and
loopnew
dec
or
popf
push
push
or
dec
scas
push
sub
js
ficomps
sbb
mov
test
xor
pushf
pop
mov
push
mov
push
or
ja
push
insl
and
ret
xchg
xorb
and
mov
lds
fwait
das
stos
aas
enter
or
jp
js
int
ss
incl
ss
xor
mov
pop
aad
outsb
mov
aad
pop
je
imul
scas
mov
xchg
sub
xchg
sahf
dec
push
int
push
adc
sub
in
ja
and
jno
stos
or
lahf
inc
out
outsb
and
rcrl
lea
jbe
inc
mov
push
mov
jno
or
xor
and
je
movsb
add
loop
imul
or
sub
mov
test
movsb
rcll
cld
sti
std
xor
subl
push
add
jmp
stos
movl
in
addr16
inc
xor
cmc
mov
aad
push
sbb
mov
cmpsl
mov
nop
aaa
dec
mov
sbb
sub
les
mov
idiv
jae
pop
mov
xchg
adc
aaa
mov
mov
arpl
int3
pushf
hlt
cmc
cmp
xchg
mov
mov
jbe
xchg
inc
lea
sub
jecxz
jmp
push
mov
mov
sahf
sbb
adc
nop
xchg
mov
ret
mov
pop
push
aad
xorl
nop
mov
fnstsw
je
sahf
inc
push
arpl
test
sub
cs
adc
xchg
filds
push
insl
sbb
fidivl
mov
dec
mov
mov
fs
mov
or
imul
je,pn
ss
popa
lds
mov
repnz
push
insb
sbb
xchg
pop
das
pop
ret
pop
add
je
out
cmp
insb
ret
cmpsl
ljmp
addl
cmpsb
add
xor
aam
les
cmp
in
in
push
xor
adc
mov
and
or
cmc
or
jno
shrb
pop
push
sbb
mov
dec
cs
mov
mov
sbb
mov
out
shlb
faddl
pop
std
cltd
in
insl
dec
xor
xor
outsl
dec
dec
mov
xchg
jmp
adc
clc
jp
mov
nop
jns
mov
add
js
lds
and
cltd
cmp
pop
out
test
xchg
insl
mov
mov
cmpsb
push
dec
cmp
iret
loope
hlt
fimuls
cmp
dec
mov
mov
and
fdivrl
dec
pop
inc
icebp
or
adc
dec
inc
repz
jae
rcrb
jmp
ljmp
loope
and
aaa
divb
iret
idivb
lahf
mov
adc
sbb
loop
into
xlat
bound
js
mov
rol
lahf
into
dec
xchg
negb
inc
mov
repnz
sub
mov
xor
cmp
mov
or
inc
jb
and
inc
sub
aas
test
push
lds
jmp
or
jno
test
popa
lock
das
dec
inc
das
mov
pop
sbb
jg
jmp
test
mov
adc
ficoms
rorb
sbbb
add
sbb
out
insb
or
xor
adc
aam
daa
mov
dec
cmp
mov
mov
push
cmc
fdivs
aaa
mov
mov
adc
mov
or
lods
mov
hlt
cs
mov
sbb
les
mov
arpl
cli
ret
and
adc
sub
xor
mov
dec
sbb
and
pop
cmc
stos
sbb
mov
jb
inc
xchg
clts
cld
push
jne
hlt
xchg
lret
or
loop
or
mov
fldenv
data16
xor
cmp
js
pop
and
push
fnstsw
cmpb
or
or
sbb
sbb
mov
int3
or
into
ret
and
call
push
xchg
and
test
sub
xor
xchg
pushf
jecxz
push
clc
bound
xor
daa
sbb
iret
adc
jo
das
roll
xchg
or
test
testl
inc
cli
push
or
mov
xchg
pop
lods
jmp
repnz
loopne
or
icebp
xchg
push
jecxz
pop
jnp
in
in
xchg
lret
imul
push
jne
pop
lods
add
add
or
and
insl
jmp
pop
push
dec
mov
stos
sub
out
cli
frndint
mov
adc
out
mov
xchg
les
inc
ljmp
pushf
push
xchg
xchg
cmpsb
stos
mov
imul
mov
push
aaa
mov
lret
adc
cmpsl
pop
imul
cmp
es
orb
jp
movsl
addr16
push
pop
movsl
xorb
inc
les
fadd
jmp
mov
inc
dec
dec
pop
fnstenv
cmp
sbb
lods
mov
lock
pop
lcall
jecxz
clc
cmp
sbb
add
push
cld
sarb
mov
out
fs
adc
aaa
popf
in
pop
test
mov
mov
mov
jne
add
jg
cmp
lds
mov
addl
icebp
xchg
xchg
fisubrl
test
ffree
add
ds
mov
loope
inc
xor
lock
or
and
pop
das
jl
inc
dec
mov
fisubrl
lods
loopne
lahf
into
or
or
or
and
mov
cmpsl
out
pop
out
inc
push
add
add
fadd
pop
and
ljmp
popa
inc
adc
add
push
pop
sbb
cmpsb
rcrb
sbb
pop
loope
inc
ret
adc
xor
ds
sbb
jge
add
subb
stos
push
out
dec
jno
pop
cltd
rorl
xor
dec
aas
push
out
aaa
stos
mov
lds
xchg
mov
xor
scas
jle
xor
xor
mov
mov
ret
sub
je
mov
mov
xlat
pop
in
scas
mov
mov
movsb
mov
imul
mov
shll
push
enter
pop
inc
jmp
cmc
or
mov
clc
loop
cmova
scas
or
adc
mov
xorb
ret
cmpsl
test
sahf
shrl
mov
push
cmp
fcom
mov
aaa
or
and
cmp
jmp
fmul
dec
loop
add
sti
sub
enter
add
mov
adc
mov
or
and
out
popf
sbb
inc
ret
and
test
es
sahf
cmpsl
test
xchg
cmp
mov
push
or
icebp
mov
orl
ss
inc
out
jg
mov
movsl
sbb
ret
ss
jae
adc
adc
pop
insb
pop
insl
push
fnstcw
mov
jecxz
stos
mov
lods
cmp
jge
pop
jbe
mov
jle
and
pop
lret
rorb
or
or
dec
jmp
cmp
dec
je
xchg
xor
dec
mov
clc
cli
xor
ret
xlat
in
in
jl
andl
push
push
loope
dec
add
enter
and
stos
add
inc
out
out
and
and
inc
out
cmp
sahf
loope
aad
add
hlt
jbe
mov
pusha
adc
mov
lcall
pop
or
out
int
cmp
or
mov
outsl
or
pop
andl
pop
push
xchg
fwait
or
mov
arpl
inc
sbb
mov
dec
arpl
mov
sbb
dec
test
shrb
sub
xor
lock
pop
push
cld
mov
shrl
sbb
inc
js
fiaddl
mov
and
loop
fadd
pop
hlt
mov
mov
mov
out
imul
xchg
mov
sbb
cltd
cmp
dec
xchg
cmp
roll
lock
inc
and
mov
mov
pop
arpl
mov
cld
stc
sub
scas
pop
push
and
cmpsb
imul
pop
out
jle
xchg
mov
cltd
or
setbe
cs
mov
lahf
mov
outsb
xchg
and
mov
cmpsb
addl
cmp
repz
cmp
pusha
cmp
mov
pop
loop
adc
pop
inc
clc
mov
inc
push
loopne
pop
mov
cltd
mov
cmp
mov
sub
outsl
shll
sbb
loope
lahf
dec
inc
sub
ja
pop
jo
es
aas
fidivrl
push
mov
mov
fnstenv
shrb
ret
sahf
fdivrl
pop
mov
mov
iret
sbb
push
push
push
sbb
daa
mov
lcall
jo
mov
loope
add
add
loope
frstor
imul
aaa
xchg
jp
cmp
add
pop
or
scas
push
mov
das
jl
push
push
mov
test
mov
int
and
bound
xchg
xchg
jns
ss
adc
in
popa
push
lods
jo
jne
nop
outsl
mov
xor
shll
jne
and
je
or
shrl
mov
roll
cmc
testb
cmp
dec
or
shlb
xchg
jb
outsl
pop
cmp
xchg
add
xchg
sub
push
push
xor
push
cld
sub
pop
in
inc
lods
out
lods
push
push
mov
or
enter
jge
xchg
fsubrl
fwait
mov
repnz
mov
xlat
adc
jnp
js
mov
mov
push
cmp
js
std
aam
sbb
xchg
ds
push
in
add
fsubs
jl
test
sbb
pop
or
cwtl
inc
cli
add
ljmp
fisttps
in
sbb
cmpsb
xlat
xor
rcll
and
repz
ljmp
and
mov
mov
fnsave
sti
imul
orb
inc
sahf
jns
xor
add
dec
outsb
jp,pn
jmp
fiaddl
test
notl
aaa
orl
je
inc
jl
ret
mov
hlt
pop
bound
dec
pop
jno
mov
mov
hlt
or
jl
cs
shl
test
cmp
dec
cli
shll
inc
add
push
in
lcall
or
lods
xchg
sbb
push
inc
dec
inc
mov
mov
jns
das
fsubrs
add
sbb
pop
pusha
ljmp
and
ret
inc
pop
xor
sub
aaa
mov
inc
xor
dec
test
jmp
inc
mov
or
bound
xor
dec
jmp
outsb
stc
out
bound
sahf
pop
out
inc
pop
pusha
xlat
nop
std
mov
dec
cwtl
addl
mov
inc
icebp
fisubrl
xor
xchg
in
cmpsl
mov
pop
sbb
xchg
aas
mov
dec
sub
pop
lret
adc
or
and
dec
mov
add
push
xor
repz
aaa
jg
int3
inc
mov
or
dec
cmp
xchg
out
mov
inc
mov
cmc
ja
aas
mov
cs
lock
and
js
xor
cld
xchg
fwait
adcb
lods
cmpsl
push
clc
xor
and
das
mov
fwait
adc
pop
jne
mov
jmp
adc
daa
lock
xor
mov
or
shlb
jo
in
xor
add
jne
pop
les
aam
or
clc
xchg
stc
movsb
cmp
or
push
mov
mov
mov
iret
cmp
lret
int
sbb
or
nop
mov
mov
sbb
jbe
xor
xchg
or
and
subb
or
js
les
lods
out
paddsw
push
lock
xor
aam
movsb
out
jno
popa
fists
test
cmp
dec
shr
adcl
in
andb
adc
jp
sbb
dec
mov
inc
or
xchg
xchg
andb
ret
test
push
addr16
xchg
pop
xchg
and
pop
pop
inc
xchg
divps
mov
dec
or
lods
push
or
push
mov
outsl
dec
testb
enter
shlb
bound
lds
or
sub
leave
or
jmp
inc
je
jge
pop
bswap
pop
or
cmp
sub
mov
icebp
xor
xor
push
adc
push
cmp
pop
inc
enter
sbb
sbb
bound
mov
andb
shlb
xchg
iret
mov
push
pop
xchg
cmc
out
shl
es
jecxz
xor
mov
mov
rcr
loopne
xchg
fbstp
sub
sarl
fadd
iret
and
pop
add
dec
pushf
inc
lods
dec
ss
js
outsb
cmpsl
data16
lea
idivl
out
cmpsb
pop
mov
shlb
adc
sub
nop
lret
aaa
adc
mov
inc
clc
sbb
adc
xchg
test
mov
push
xchg
scas
out
xor
jmp
fisttps
or
scas
cmp
js
adc
inc
add
pop
lea
jge
cmp
rorl
mov
popf
flds
sbb
imul
enter
in
aas
and
inc
mov
jb
sti
test
popf
scas
mov
iret
mov
pop
je
ror
cmpsl
xchg
pop
shll
sbb
out
or
pop
shl
inc
addl
bound
outsb
popa
hlt
cmc
cs
ret
shll
mov
pop
push
xchg
mov
mov
ss
xor
inc
inc
test
jge
cwtl
sub
test
je
mov
int3
xlat
in
dec
add
mov
mov
movsb
add
js
add
ret
ljmp
mov
fsubrl
jg
test
test
pop
pop
fs
push
mov
shll
movsb
out
test
mov
push
aad
push
mov
fs
neg
out
sbb
mov
mov
mov
rol
dec
call
dec
cmp
mov
mov
addr16
and
or
jp
insl
push
mov
inc
imul
ss
or
mov
push
inc
enter
stc
mov
and
xor
leave
cmpsl
lret
mov
add
or
sti
push
sti
loopne
call
inc
call
outsb
mov
mov
push
push
push
cmpsb
je
repz
lret
scas
scas
cli
inc
xchg
push
xor
nop
aad
sbb
stos
pop
test
mov
loope
aaa
cli
neg
test
mov
cmp
xor
add
add
das
add
or
add
out
jmp
lock
pop
int
aad
leave
mov
lods
addr16
call
or
arpl
push
add
push
mov
addl
jae
sub
add
aad
sub
les
pop
sbbb
mov
inc
adc
inc
popf
movsb
mov
and
out
push
sub
std
adc
or
lock
imul
and
pop
movsl
sbb
adc
jno
and
cli
bound
cmpsl
repnz
sbb
jmp
adc
fimuls
sub
adc
fadds
jae
jae
mov
pop
jge
xor
addl
or
ds
or
jae
bound
or
jb
inc
push
insb
jge
jo
in
dec
inc
lcall
imul
sti
arpl
shlb
fldenv
sbb
mov
add
xchg
fildl
push
or
daa
add
loop
xor
lahf
gs
cmpsl
sbb
fnsave
mov
xor
and
jge
inc
or
dec
mov
mov
lret
pop
sub
ret
add
mov
mov
daa
loop
call
push
mov
push
inc
sahf
outsl
test
test
inc
imul
es
cmp
mov
notb
shll
xor
sbb
test
inc
dec
sub
xchg
pop
add
int
mov
mov
int3
scas
stos
mov
pop
xor
imul
xchg
stc
mov
das
push
adc
push
addr16
dec
incb
lret
orl
jbe
sti
in
rcl
or
push
mov
sbb
add
lds
mov
mov
push
pop
sub
push
add
lods
scas
out
js
pop
rol
jo
mov
mov
jecxz
push
in
mov
pop
mov
scas
push
dec
clc
dec
in
dec
test
mov
and
push
mov
aas
dec
leave
push
jbe
daa
lcall
jmp
jmp
push
sbb
icebp
lods
adc
add
nop
scas
push
and
adc
fdivrs
or
lock
dec
cmp
stos
test
pop
dec
lcall
sbb
test
mov
adc
sub
outsb
jp
loopne
cmc
xchg
jecxz
or
shl
dec
or
or
xor
test
cld
xor
xor
pop
and
jp
pusha
adc
daa
xchg
outsl
xchg
sub
push
pminsw
add
sti
mov
inc
int
cmc
dec
or
push
cmp
jo
leave
notl
sbb
movsl
adc
rcrl
ds
lea
mov
call
xor
loop
loope
ldmxcsr
inc
test
or
outsb
dec
frstpm(287
jns
mov
push
bound
nop
adc
mov
popa
in
rcr
jae
dec
orl
and
push
out
icebp
inc
mov
bound
loop
mov
jns
cmpsb
movsl
scas
jb
pop
insl
or
shlb
pop
mov
sub
add
aad
movb
add
mov
xchg
mov
shll
hlt
pop
mov
nop
sar
mov
adc
or
imul
xor
lds
adc
push
or
push
clc
dec
cmp
outsl
xchg
push
mov
xor
std
fdivrs
lods
addr16
xlat
call
add
int
dec
and
push
mov
inc
sub
int3
roll
pop
test
test
cmp
mov
cmpb
jecxz
js
inc
adc
inc
and
xor
pop
jl
fs
cmp
push
les
add
pop
pop
sbb
fdivrl
mov
popa
push
fisttps
out
sbbb
push
inc
xchg
mov
mov
nop
cmp
aad
push
inc
sbb
repnz
xor
cmc
inc
je
jns
jbe
xchg
daa
shl
hlt
jo
mov
lods
jmp
mov
lds
int
xorl
jns
jg
aam
pop
fstl
cmpsb
mov
into
call
fists
pop
dec
mov
sbb
pop
mull
mov
add
sahf
adc
xlat
jecxz
cmp
pop
cmp
mov
sbb
ret
or
inc
ljmp
mov
repnz
bound
mov
push
and
pop
fnstsw
add
xchg
inc
push
xor
mov
sbb
add
and
mov
jle
loopne
loopne
mov
daa
jl
loop
insl
xlat
adc
cmp
or
cs
fwait
xor
mov
nop
cmp
inc
mov
pusha
lret
int
aad
scas
ja
pop
or
add
stc
mov
or
pop
cmc
fildl
xor
cmp
test
fldl
loop
in
push
test
mov
into
sub
out
sub
push
adcl
in
push
push
pop
lock
orb
mov
inc
cld
push
pop
add
pop
sahf
shrb
movsl
popa
inc
xor
and
xchg
roll
adc
outsb
mov
sbb
dec
mov
mov
es
das
xlat
mov
xlat
ficomps
push
mov
inc
pop
fnstenv
lret
mul
movsl
mov
das
mov
push
and
cmp
pop
push
sbb
subl
or
lcall
mov
fiaddl
pop
or
fmull
fists
clc
push
rcrl
xchg
pop
or
push
loopne
cmpsb
ja
or
lcall
jbe
testb
or
mov
push
ja
jne
mov
and
fistpl
add
or
movsl
cs
jb
and
jo
and
iret
jne
insb
dec
xchg
fisttpl
inc
pop
in
in
aam
ljmp
push
pop
push
lea
daa
adc
fcompl
nop
sub
mov
sbb
decl
out
add
xor
or
dec
ja
testl
sbb
inc
andb
cmpsl
in
ss
mov
jle
add
xor
inc
sub
push
aaa
sar
add
sbb
jmp
sub
sti
ljmp
neg
in
cmp
scas
mov
push
iret
push
jbe
rcrl
inc
aad
dec
ficompl
shlb
jp
sub
inc
mov
daa
pop
popa
in
inc
push
inc
aam
das
dec
insl
or
mov
mov
pop
mov
ror
imul
dec
jns
negb
dec
or
fwait
cmp
ss
xor
lret
mov
xor
mov
nop
xchg
mov
in
sbb
mov
or
jg
icebp
das
jo
pop
dec
mov
loop
cmc
cmpsb
nop
add
mov
and
out
adc
ret
xchg
je
pop
jle
test
push
ds
ljmp
lods
adc
push
and
sub
daa
ds
mov
xchg
add
xorl
mov
mov
and
addb
jo
outsb
mov
xlat
xor
popf
scas
mov
and
jmp
scas
fistpll
test
mov
movsl
pop
in
jle
mov
scas
push
adc
mov
xor
adc
cmp
pop
shll
add
sub
into
test
or
xor
pop
cli
outsl
lea
orb
leave
int3
sbb
mov
je
lock
mov
dec
repnz
cmp
fidivrs
ds
test
mov
cmc
pop
fst
cli
lock
je
cltd
in
outsb
loope
dec
rorl
or
insl
pop
scas
rorb
xor
xchg
mov
mov
sbb
shrl
inc
xchg
xchg
jb
mov
out
das
jecxz
fiaddl
xor
jne
dec
aad
add
daa
xor
in
enter
dec
mov
and
sub
outsl
in
dec
leave
or
scas
pop
adc
push
mov
or
fsubl
fcmovb
pushf
mov
leave
sub
and
xor
lods
add
pop
adc
test
hlt
jecxz
inc
push
mov
fdivrp
add
pop
loope
daa
test
or
xchg
orb
jl
mov
adc
dec
and
je
outsb
mov
lret
sti
mov
xor
pop
push
cld
pusha
mov
jp
add
add
pop
jge
stc
pop
fsubrl
push
dec
push
aas
loopne
mov
rol
pop
inc
ljmp
push
je
pushf
xchg
lahf
fnstenv
ror
adc
cld
loop
add
out
es
cwtl
xor
aas
aam
pushf
adcb
inc
pusha
mov
js
iret
sbb
or
push
pop
lret
mov
sub
xchg
aaa
mov
fdivl
arpl
es
popf
xchg
push
mov
sbb
add
cmp
and
xchg
enter
mov
in
jae
cmc
jnp
pop
fwait
bound
push
loope
push
or
inc
lcall
aas
sbb
mov
jbe
jbe
loopne
mov
mov
leave
sbb
push
movaps
icebp
lcall
xchg
fiaddl
xor
and
gs
enter
mov
mov
mov
negb
aas
fs
imul
add
pop
aas
xor
pusha
cmpsl
adc
mov
pop
outsl
je
arpl
mov
cmp
fiaddl
sub
icebp
test
fmuls
xchg
cmp
arpl
or
test
sub
fildl
unpckhps
clc
and
loopne
inc
aaa
and
cmp
mov
daa
xlat
adc
jne
dec
loopne
adc
mov
pop
into
into
dec
lahf
into
sbb
sbb
sub
or
push
insl
lea
mov
jg
into
dec
cmpsl
ss
push
mov
sbb
les
xor
bound
and
jmp
ds
xchg
mov
jb
inc
mov
xor
jmp
lcall
jg
xchg
sahf
add
pop
loop
cli
rorl
nop
push
pop
inc
pop
push
test
sbb
cmp
clc
sahf
adc
sub
pushf
mov
add
and
push
mov
fisttpll
push
pop
mov
mov
fdivl
xchg
mov
das
cld
lea
adc
mov
jge
mov
adc
daa
add
add
mov
test
xchg
mov
and
push
inc
jae
cmp
scas
in
xchg
addr16
sbb
add
out
data16
call
icebp
add
mov
and
ret
cmpb
sbb
xor
pusha
and
or
cmp
jnp
ljmp
lock
mov
pop
filds
sbb
jmp
jno
cmp
fwait
mov
sub
mov
lahf
aaa
lcall
xchg
and
sub
adc
iret
sub
inc
shufps
mov
sbb
add
or
pop
xchg
out
jmp
inc
push
dec
jae
cmp
and
adc
adc
repnz
ds
jg
ljmp
test
cltd
repnz
int3
pop
sbbl
cmp
mov
out
dec
out
in
repz
in
add
out
rclb
rcl
mov
movhps
push
int
insb
pop
push
dec
adc
inc
mov
pop
lea
es
lods
mov
mov
sbb
scas
cs
fiadds
mov
cmpb
or
lret
xchg
test
lret
sbb
popf
or
ds
adc
mov
in
mov
cmpsb
cs
sbb
inc
je
and
into
shl
dec
push
test
iret
jge
jmp
mov
iret
loop
jne
sub
cmp
mov
dec
inc
add
inc
lock
fs
iret
nop
inc
xchg
fcomps
test
adc
push
lds
cmc
insb
and
mov
and
in
stos
jne
sub
push
mov
arpl
push
pusha
pop
call
xor
and
std
jge
imul
rcr
ret
pop
faddl
int
inc
test
test
sbb
inc
js
mov
out
cmpsl
mov
xlat
mov
or
cmp
scas
ret
cwtl
icebp
dec
pop
push
jg
sub
repnz
or
repz
popf
test
push
stc
insb
gs
lahf
clc
xchg
imul
pop
or
or
orb
lret
sbb
loop
and
xchg
es
xor
mov
fidivrl
test
dec
pop
std
loopne
test
jns
je
inc
out
mov
js
mov
sbb
sbb
in
addr16
mov
push
add
xchg
ljmp
aad
xchg
mov
cmp
sub
or
fstpt
jl
inc
sub
fldt
icebp
sarl
call
xchg
popa
ja
push
cmp
push
cld
out
movsb
stos
jg
or
mov
call
shll
jmp
push
cmp
fcomps
ret
adc
push
jge
dec
xorb
nop
sahf
vmread
dec
subl
push
mov
xor
aad
push
insb
bound
inc
mov
xchg
adc
fbld
sub
test
int3
popf
test
mov
imul
sbb
ret
out
loopne
aaa
add
orb
sub
jne
cmp
lods
fstl
inc
sbb
dec
sbb
add
cmc
mov
push
adc
and
add
jge
ret
leave
mov
movsb
inc
mov
adc
xchg
jo
shll
pop
imull
xchg
or
pop
mov
pop
aas
jo
jbe
mov
pop
frstor
stc
cli
bound
lret
lcall
loope
mov
fisubrs
push
mov
mov
mov
mov
inc
das
icebp
and
ss
mov
out
fidivl
mov
mov
mov
push
mov
cmpsl
aam
xchg
lock
pushf
jg
hlt
aam
xchg
lock
push
loop
dec
test
bound
xor
mov
push
jge
jo
jle
push
xor
pop
mov
pop
rorl
ja
lret
in
andb
push
sbb
jns
sbb
test
cwtl
sahf
outsb
inc
insl
sbb
lret
loopne
sbb
mov
pushf
adc
push
jp
addr16
and
and
mov
jl
in
ret
mov
inc
cmpsl
pop
or
push
mov
mov
mov
jbe
mov
arpl
pop
xchg
or
mov
inc
or
jo
rcrl
adc
call
bound
lock
pop
add
mov
loopne
sbb
pop
and
aad
aas
test
out
pop
lahf
mov
push
xlat
or
cltd
fbstp
ficompl
ficoms
adc
cmp
mov
dec
shlb
adc
cmp
mov
push
sbb
cmp
adc
mov
gs
and
adc
outsl
jns
dec
cmp
sub
or
out
inc
in
int3
dec
add
sub
sbb
es
push
cmp
xchg
ret
cli
pop
mov
sbb
movsl
call
cmp
cmp
outsl
add
push
adc
xchg
push
sbb
mov
rcr
pop
inc
les
inc
loop
fldcw
add
scas
xor
vpaddsb
cmp
cmp
or
pop
dec
adc
push
cmc
push
lock
adc
test
lcall
xor
cmp
jo
mov
xor
aas
push
mov
adc
sub
fs
rep
emms
dec
mov
addb
and
negb
outsb
xchg
add
sbb
jle
in
push
and
add
imul
xor
fsts
adc
adc
cltd
loopne
xor
pusha
jmp
add
pop
ret
xchg
push
sub
fidivl
stos
cmp
mov
push
sub
or
push
sbb
cmp
dec
aaa
rorl
lods
loopne
test
mov
xor
call
jle
fcoml
popa
scas
push
ficompl
loop
insb
xor
mov
push
mov
daa
cmc
and
mov
mov
mov
cmp
rcrl
roll
loop
lea
xor
jae
adc
add
aad
pop
ret
mov
cmp
mov
loopew
fistpl
pop
xchg
inc
ret
or
inc
ret
daa
hlt
movsb
and
push
add
mov
and
enter
dec
mov
or
cmp
shrb
in
out
mov
mov
call
popf
jne
sbb
jbe
les
or
rcl
aam
andb
int
dec
jl
xor
aaa
push
inc
ffreep
dec
xor
mov
sbb
movsb
jo
loop
push
lret
stos
cmp
or
dec
xor
mov
enter
gs
pop
orl
repz
scas
mov
lock
pop
loope
xchg
jnp
push
push
or
aam
add
pop
mov
xchg
push
inc
jmp
inc
fwait
orl
jb
mov
js
mov
xor
popf
pop
in
jg
and
dec
xor
int3
cld
fwait
pop
cmc
leave
inc
in
push
sub
add
adc
push
inc
adc
and
shll
inc
xor
mov
test
fs
loopne
xlat
sbb
test
cmp
or
aam
jb
stos
inc
mov
mov
clc
add
repnz
sbb
rol
outsl
test
repz
call
xchg
add
shlb
in
cmpsl
mov
mov
lock
fldl
pop
cmp
es
push
xchg
xor
sbb
stos
bound
iret
and
lcall
bound
loop
push
pop
cmc
cmc
inc
mov
push
sbb
rcll
mov
xchg
push
gs
or
sbb
mov
cmp
fistl
fs
stos
push
xor
cs
inc
dec
lret
push
cmpsl
inc
mov
add
mov
xchg
pop
lahf
gs
adc
lock
mov
inc
addr16
mov
mov
jge
inc
pop
fwait
cld
aaa
or
xorb
and
shlb
inc
aad
test
push
pop
mov
jns
in
or
repz
push
shlb
pushf
xor
sahf
cli
aas
or
xchg
jl
dec
shl
inc
ds
or
lods
mov
orb
sbb
cmpsl
in
inc
ss
andl
mov
out
add
out
out
xchg
or
cmp
insl
or
subb
xor
sub
sti
addl
mov
call
mov
popf
aas
iret
xchg
rcll
xchg
movsb
dec
lods
leave
mov
int
ss
cmp
sbb
sub
lcall
lcall
lods
cli
daa
out
xor
sub
lahf
push
rcr
pop
pop
js
fs
pop
or
ret
adc
addb
mov
insb
lds
subb
jecxz
pop
add
hlt
jecxz
push
push
andb
or
and
pop
addb
push
negl
mov
or
movsl
cli
jl
icebp
sub
cmp
test
ret
inc
lea
cmc
ficoml
test
cmp
inc
xchg
sahf
xchg
imul
push
leave
and
pushf
dec
ds
dec
pusha
out
and
ljmp
daa
push
add
lea
jmp
xchg
pop
ljmp
rorl
loop
cmp
test
xor
or
sbb
stos
imul
mov
std
popa
cmpl
mov
add
ja
fidivrl
cmp
or
aas
cs
jp
fldenv
sub
into
jmp
xor
sbbb
sbb
out
mov
imul
xchg
pop
fwait
lock
push
mov
mov
pushf
cmpsb
fcmovnb
mov
pusha
es
cmc
lret
icebp
loope
scas
adc
inc
repnz
js
mov
lods
xchg
pop
je
xchg
out
ret
filds
inc
cmp
repz
call
dec
xor
mov
je
lahf
sbb
jo
inc
inc
pop
insl
dec
xchg
add
adc
mov
and
dec
subb
imul
out
pop
add
sub
inc
or
xchg
xchg
push
imul
mov
xchg
mov
pop
sarl
dec
popa
xor
loopne
clc
mov
fistps
xlat
push
cmpsb
cmc
out
repz
dec
inc
cmp
cwtl
push
mov
mov
mov
pop
xchg
ret
scas
subl
lds
jo
xchg
pop
push
je
leave
sahf
xchg
popl
inc
stos
mov
or
imul
jne
loope
or
aaa
shrb
xor
lds
dec
loop
xor
xor
loopne
stos
call
sahf
cmp
roll
std
shlb
jae
push
push
push
sbb
sub
push
sub
sbb
sub
mov
jp
inc
mov
mov
idivl
cmp
mov
jb
cmp
scas
or
int3
mov
nop
mov
xchg
dec
movl
fdivrl
inc
daa
das
mov
or
and
mov
mov
nop
jl
and
inc
inc
ret
push
push
cmpsb
iret
mov
inc
jecxz
xchg
dec
adc
lock
or
lret
mov
cmp
and
adc
dec
sbb
ficoms
out
ret
nop
stos
jp
xchg
rorb
lods
pop
push
shlb
push
ds
lea
push
cld
in
lock
cmc
pusha
orl
aaa
xchg
shlb
cli
shlb
push
lcall
mov
out
lea
jno
lods
push
loope
adc
mov
sbb
stos
hlt
xor
mov
xor
shrl
repz
mov
ret
test
sub
insl
ret
out
push
push
cmp
int
mov
hlt
ljmp
les
mov
add
or
lods
mov
in
lods
and
std
sub
xchg
push
int
fstpt
mov
cmc
es
ret
imul
ret
xor
pop
popf
loop
jo
loopne
add
inc
sbb
pushf
sub
push
mov
shlb
pop
fbld
fwait
jg
cmp
fisttpl
sub
lea
xor
out
jp
dec
daa
xorb
mov
xchg
or
jns
scas
cmp
test
adc
movsl
mov
aas
dec
dec
mov
sbb
pusha
scas
sbb
adc
lods
dec
repnz
and
push
cmp
aam
or
xor
inc
mov
cwtl
lock
mull
insb
mov
dec
data16
push
pushf
pop
outsl
lahf
xchg
jns
test
sub
adc
fisubs
lds
inc
jecxz
xchg
cmp
inc
xor
and
push
jnp
adc
ror
add
icebp
push
xchg
xorb
mov
rol
cmp
add
push
push
dec
iret
add
mov
inc
inc
aas
movsl
stos
ja
std
inc
xor
lea
addr16
test
imul
das
jbe
inc
fcoml
mov
fucomip
xlat
mov
mov
in
mov
ds
add
xchg
pop
mov
push
cmp
inc
and
add
sbb
movd
cmp
pop
fists
dec
push
push
icebp
push
imul
push
xor
mov
clc
and
pop
repz
outsl
cld
mov
sub
mov
pop
int
and
out
ret
adc
cmp
dec
repnz
pop
mov
push
pop
inc
mov
sbb
push
mov
fwait
mov
test
cmc
loope
div
pop
xor
xchg
mov
in
cmpsb
out
loope
rorl
ljmp
xchg
xor
stc
test
or
xor
sbb
mov
iret
loopne
lcall
jns
sbb
mov
inc
nop
cmp
cli
jae
xor
les
cmp
inc
adc
test
adc
popa
adc
into
or
ret
push
and
dec
and
sbb
inc
xor
sub
pushf
int3
leave
test
daa
push
pushf
dec
test
and
icebp
out
sbb
jo
fdiv
fisubs
mov
adc
or
sbb
sbbb
cmovp
add
mov
adc
mov
adc
pop
add
pop
cmp
and
test
popf
je
mov
inc
fwait
mov
push
orl
imul
insl
mov
lods
or
es
orl
iret
dec
push
or
jg
inc
pop
or
mov
fisttps
mov
sub
loopne
rol
mov
das
pop
cmp
lcall
mov
mov
and
mov
stos
cltd
push
fdivs
push
mov
fisubrs
fdivrl
adcb
jecxz
mov
mov
sahf
dec
arpl
cmp
repnz
mov
and
test
sbb
xchg
das
add
mov
mov
or
pop
xor
mov
jp
cmp
daa
lret
inc
cmp
mov
sarb
sahf
adc
add
sti
mov
out
mov
lds
out
shl
outsb
or
ja
js
push
mull
addr16
loopne
cmp
jnp
xlat
decl
insb
call
lods
ljmp
adc
jle
inc
icebp
sbb
add
cwtl
inc
adc
xchg
mov
or
mov
sub
push
mov
and
pop
rol
lret
lret
xchg
test
push
xor
xchg
or
fisttpll
mov
cmpb
call
iret
jmp
lds
es
nop
imul
or
mov
orl
inc
std
iret
cltd
add
out
popf
or
insb
sbb
pmaxub
mov
jmp
dec
js
add
adc
ja
cmp
gs
clc
jge
cmpsb
les
mov
jno
mov
out
orb
imul
pushf
lds
lea
in
mull
push
xor
jbe
sbb
or
pop
lea
int3
mov
xor
add
pop
mul
mov
scas
inc
subl
popf
std
mov
push
mov
and
dec
push
mov
or
subl
shll
pop
mov
cmp
adcb
mov
jmp
dec
dec
sub
in
dec
scas
movq
aam
inc
push
nop
icebp
loope
pop
mov
inc
aas
daa
or
xchg
mov
mov
adc
test
xchg
sub
push
aad
shrb
add
or
push
sbb
ret
std
or
shlb
ret
xchg
lock
dec
jge
sbb
lret
es
aad
je
adc
dec
test
sub
in
fildll
leave
pop
les
xor
fwait
dec
pusha
lahf
cmp
shll
mov
add
push
mov
push
loope
aam
nop
add
mov
cmp
add
add
or
xor
lock
inc
dec
mov
pop
xor
mov
push
sbb
loopne
std
dec
fisubrs
or
aas
inc
fcoms
mov
ljmp
xor
mov
cli
xorb
mov
jecxz
pusha
cmpb
or
aaa
cmp
es
mov
mov
xor
int3
repz
or
mov
mov
sahf
sti
jl
int
lods
adc
mov
sbb
out
cmpsb
pusha
inc
lods
push
adc
mov
mov
loopne
xchg
dec
stos
es
push
sub
pop
into
ficoml
in
inc
mov
in
out
mov
inc
cmp
or
out
call
mov
pop
push
jmp
mov
pop
imul
pushl
les
mov
sbbl
insl
inc
sbb
add
xor
pop
fmuls
test
nop
shrb
jo
jns
push
fsts
cmpl
cmp
or
dec
fwait
loope
call
add
jmp
xchg
rcll
push
jo
es
cmpsb
pop
cld
pushf
mov
mov
lds
cmp
test
inc
pop
sub
push
mov
pandn
push
not
ss
test
inc
aam
sub
dec
mov
xchg
add
rorl
cmp
and
rcrl
nop
stos
jle
sbb
mov
lds
ss
pop
cmp
ss
cli
adc
mov
icebp
sbb
add
mov
test
dec
or
jne
inc
pop
mov
fcompl
add
and
loopne
xchg
mov
into
mov
cmpsl
lea
jecxz
inc
sahf
test
sbb
loop,pn
idiv
push
mov
sub
push
call
in
ret
adc
fsubs
leave
or
sbb
testl
inc
inc
and
inc
in
das
pop
cmp
jne
push
push
sub
stos
mov
ffree
add
dec
adc
inc
lea
push
push
add
push
out
mov
jbe
sbb
sbb
fs
fldl
push
cmp
imul
mov
and
lret
add
add
sbb
insl
push
imul
xchg
hlt
push
push
jae
in
out
push
adc
leave
subl
dec
clc
push
add
adc
shrb
pop
add
fnstenv
and
dec
push
clc
push
push
adc
xchg
or
push
sbb
push
cs
cmp
and
or
xor
jne
cs
fucom
and
jmp
rclb
push
sbb
xchg
in
push
xor
jae
xchg
or
xchg
adc
xchg
dec
or
or
aad
pop
in
push
mov
loopne
push
add
push
cmpsl
sbb
or
jnp
lret
and
dec
or
push
add
in
mov
in
pop
cwtl
xchg
add
xlat
fidivrs
daa
adc
subl
shlb
ret
leave
add
imul
outsb
adcb
lea
in
jb
insb
test
push
jle
push
xchg
or
clc
test
clc
lahf
pop
sbb
mov
add
in
js
jb
daa
add
mov
inc
or
or
jno
sub
jae
add
sub
outsb
in
fs
push
mov
inc
call
push
add
adc
add
adc
sbb
pop
sbb
sbb
or
nop
fisttpll
dec
jle
nop
out
sti
sub
push
push
popa
in
cmp
in
sti
pop
notb
push
push
push
idiv
sbb
jno
inc
aam
xchg
xor
push
out
or
pop
btc
mov
nop
or
push
lcall
and
and
add
adcl
lock
hlt
push
sbb
ja
inc
pop
out
lret
clc
xchg
xchg
aaa
mov
adc
cmp
mov
lret
mov
pop
mov
clc
pop
test
push
das
jmp
jne
add
xadd
inc
mov
push
pop
push
cmp
and
aam
add
push
pop
or
loope
xchg
inc
jns
sti
in
neg
outsl
scas
cld
add
push
pusha
pop
gs
xchg
cmp
or
push
mov
in
mov
aaa
xchg
es
das
insb
and
sbb
call
fwait
dec
and
jbe
add
inc
adc
shl
rclb
lds
dec
aas
push
cmc
adc
mov
aaa
inc
add
xor
add
push
and
adc
ds
xchg
cld
or
xchg
dec
mov
inc
jmp
add
loope
xor
fs
arpl
jnp
xor
mov
push
add
mov
dec
outsl
push
add
cmp
push
push
fsubl
fld
and
repz
lock
outsl
outsl
push
pop
xchg
or
xor
jns
adc
and
inc
bound
cs
dec
scas
jno
add
push
ja
xchg
fcomps
adc
or
fs
jo
cwtl
sub
ret
push
ja
pop
push
xchg
addr16
cmp
add
andl
pop
clc
jle
movsb
or
imul
inc
mov
xor
dec
inc
and
test
cmp
inc
andl
ss
inc
outsl
xor
fiadds
mov
adc
out
or
lods
add
jecxz
and
sbb
call
mov
jae
mov
push
in
sbb
cmp
adc
sbb
pop
aaa
pop
xchg
insb
mov
push
pushf
inc
jp
subl
fstl
roll
cmp
or
mov
jae
mov
out
adc
fs
outsl
xchg
in
bound
jae
or
and
jns
ds
scas
daa
jns
dec
jns
inc
or
fxch
mov
dec
mov
enter
sbb
lea
jle
and
add
mov
and
mov
inc
mov
insb
push
shlb
adc
ss
les
or
push
inc
add
or
mov
setb
mov
or
out
push
xor
int3
cmpsb
fs
jle
add
lock
cli
movb
arpl
ljmp
xor
rcrl
push
jl
test
shrl
push
fwait
cmp
out
add
testl
les
pop
lods
xor
les
push
clc
push
fdivl
imul
push
lock
test
sbbb
aas
push
inc
xor
dec
jl
enter
pop
das
and
and
shrl
sti
fcmovb
and
or
jmp
pop
dec
push
and
addr16
jecxz
inc
mov
je
xor
push
pop
push
fbld
fnop
sbb
sbb
lods
jle
jns
iret
add
lahf
or
add
cmp
add
and
adc
inc
imul
sbb
icebp
arpl
sub
push
leave
push
add
inc
out
bound
sub
lods
sbb
hlt
test
pop
push
data16
sbb
popa
sbb
rorl
testl
fimull
push
add
or
retw
ret
cmp
dec
xchg
pop
adc
add
je
cs
ret
inc
jne
jb
push
imul
mov
sbbl
and
aam
in
adc
ss
sbb
lock
push
xlat
push
inc
sbb
cmp
test
in
adc
sub
or
pop
inc
adc
xchg
nop
lds
mov
sbb
or
xchg
les
and
dec
add
imul
jns
mov
lock
lret
push
push
inc
popa
inc
lret
inc
cmp
mov
xchg
std
in
das
adc
or
mov
add
xor
add
sbb
push
sbb
loope
inc
insl
pop
mov
pop
xor
shlb
xor
addl
idivl
out
testl
push
stc
sub
xor
mov
dec
push
dec
add
mov
imul
outsl
and
hlt
inc
sbb
ja
movsl
clts
mov
inc
loop
sbb
cmp
insb
test
loop
test
or
addl
pop
xor
fs
or
in
ljmp
add
sbb
pop
sub
push
pop
leave
push
das
fwait
jb
dec
jl
inc
add
xor
cmp
mov
or
push
inc
ja
sarb
mov
cmpsl
push
fsubrs
js
bound
cli
push
jbe
add
cld
cwtl
dec
add
fildll
pop
fbstp
add
or
test
pop
hlt
in
or
push
notb
push
dec
pop
sti
ret
mov
mov
cmp
mov
inc
push
sub
mov
lock
data16
jmp
shrl
adc
and
not
or
inc
mov
fldl
repz
shll
out
cld
push
stc
adc
testl
cmpsl
icebp
inc
push
je
pop
cmpsb
jg
xchg
push
mov
jae
adc
jle
sbb
xchg
clc
lds
mov
push
in
js
xlat
test
aaa
ret
jecxz
inc
lcall
sti
adc
filds
sbb
push
aaa
or
add
push
js
nop
sbb
xor
test
das
xor
imul
popa
ret
inc
jbe
xchg
cltd
or
xchg
xor
loopne
fwait
inc
stc
sahf
and
pop
scas
or
leave
scas
inc
and
shll
cmp
or
icebp
scas
push
clc
pusha
jnp
dec
xchg
cmp
cmpsl
push
jg
popa
shll
jge
mov
and
repz
inc
push
push
ffreep
lock
into
sub
loope
dec
push
mov
rclb
mov
mov
fnop
xchg
rorb
movsb
addl
add
dec
sub
imul
test
icebp
rol
test
in
jo
mov
dec
je
xor
imul
mov
mov
addl
jns
jg
shll
imul
pop
je
push
cmp
xchg
hlt
popf
nop
outsl
sbb
insl
sbb
cs
adc
add
out
dec
addb
cmc
adc
xchg
test
incl
mov
nop
loop
sbb
sbb
dec
lock
inc
rorb
add
pop
jb
clc
jne
add
push
adc
add
fildl
pushf
dec
cs
pop
cmpsl
pop
inc
mov
fildll
fisubrs
add
repnz
mov
mov
inc
adc
jecxz
pop
clc
cmpsl
push
sbb
pop
ficompl
jae
xchg
push
psllw
inc
add
aas
sahf
int
or
sub
sbb
xchg
mov
push
repnz
and
sub
push
xor
hlt
inc
ljmp
int3
adc
loopne
outsb
dec
dec
das
or
fs
mov
outsb
dec
leave
mov
push
and
sbb
leave
adc
hlt
adc
punpckhbw
and
dec
push
dec
dec
jbe
je
fldenv
sbb
nop
push
outsb
push
inc
sub
inc
inc
xchg
inc
adc
sahf
das
cmp
jnp
sarb
push
pop
call
mov
int
sub
jp
inc
add
xor
pop
push
dec
outsl
pop
orb
jmp
cmp
xor
enter
test
in
fs
mov
mov
pop
cld
out
iret
mov
cmp
je
ret
jmp
fdivl
enter
mov
push
push
fs
inc
dec
loop
arpl
jmp
mov
lock
clc
add
xor
push
mov
movl
es
inc
aaa
xor
sbb
pop
adc
push
pop
push
push
pcmpeqd
dec
inc
dec
push
dec
or
pop
cmp
lock
jmp
in
ret
and
or
sub
jo
mov
jge
mov
xchg
into
xorb
aam
and
sbb
sbb
es
mov
pop
cmpsb
in
nop
push
iret
repz
imul
push
mov
call
add
add
sti
aas
and
xchg
fs
push
fnop
inc
dec
enter
movb
loop
push
mov
xor
pop
pusha
push
repz
push
jmp
hlt
lahf
xor
filds
or
and
in
inc
popf
and
call
mov
loopne
sbb
mov
cld
add
leave
mov
std
add
mov
add
stos
push
shlb
sub
fneni(8087
test
shll
fists
das
push
xlat
add
pusha
mov
mov
mov
jp
adc
adc
xchg
dec
std
push
sbb
cli
dec
push
jo
push
jl
xchg
xor
xbegin
dec
push
jle
push
mov
hlt
and
pop
sub
push
add
in
and
in
xorl
pop
popf
adc
adc
cmp
addb
mov
loopne
testb
add
jge
gs
std
dec
adc
stos
sbb
jle
roll
xor
clc
jp
fistl
mov
dec
dec
ss
jp
imul
mov
and
loopne
fs
mov
or
arpl
push
inc
jno
in
mov
mov
cmpsb
jne
pop
push
inc
cmp
gs
sbb
ljmp
mov
ds
sub
enter
cld
adc
stc
icebp
pop
imul
shl
clc
push
mov
or
and
arpl
dec
repz
sbb
in
inc
xor
test
or
and
adc
add
mov
adc
jp
lahf
shll
bound
xor
or
cmp
jo
or
mov
sbb
push
dec
decw
adc
loope
jl
push
and
dec
sbb
add
lds
push
xor
loop
mov
cmp
xor
jmp
mov
jno
sbb
les
notl
adc
jne
push
shlb
in
or
xchg
hlt
clc
gs
mov
ss
push
sbb
out
pushf
dec
xor
pusha
and
div
imul
hlt
pop
mov
adcb
pop
popa
test
mov
loope
pop
out
aaa
add
sbb
lods
dec
or
in
jae
sub
push
push
mov
out
aaa
pop
xlat
arpl
js
xor
and
lret
xor
and
add
sbb
bound
cmpsb
inc
push
wbinvd
das
and
xlat
pop
inc
jo
test
test
dec
sub
unpckhps
pushf
cmp
adc
xor
roll
jbe
inc
ss
push
sbb
pusha
ror
push
add
push
push
in
mov
push
fwait
inc
mov
sbb
and
sbb
inc
inc
inc
inc
adc
sub
sub
push
data16
mov
jbe
inc
push
add
jns
jns
js
dec
insl
add
jbe
push
inc
inc
inc
dec
inc
inc
pop
gs
jo
inc
jo
jbe
fs
jmp
push
dec
bound
jns
push
data16
push
jno
jae
dec
dec
add
inc
dec
dec
inc
insb
push
add
jg
push
push
dec
pop
push
js
fs
dec
dec
dec
ja
push
imul
mov
pop
inc
sub
imul
fs
fs
jbe
dec
dec
arpl
pushl
dec
inc
dec
inc
dec
push
dec
push
push
push
push
add
inc
jne
dec
push
push
dec
add
arpl
add
mov
jge
xor
xor
xor
xor
push
outsl
jg
incl
inc
pop
pop
inc
inc
inc
add
imul
jb
jns
outsl
mov
gs
add
aaa
xor
pushl
xor
xor
push
dec
inc
push
dec
pop
push
inc
push
push
add
inc
inc
dec
dec
add
outsl
in
bound
popa
ja
add
jno
fisubl
jns
add
dec
push
pop
pop
mov
dec
sub
aaa
xor
cmp
jae
jb
jae
push
push
dec
bound
jne
mov
jb
jno
jbe
jle
inc
addr16
js
pop
movsl
xor
test
mov
sti
inc
push
dec
dec
dec
int
sub
je
imul
xchg
mov
push
dec
adcl
in
ret
xor
aaa
inc
push
dec
dec
pop
inc
imul
outsl
mov
insl
xor
jae
inc
inc
jns
cmp
outsl
xor
inc
insb
fistpll
inc
outsl
pop
jno
push
scas
jns
jb
dec
add
jns
jne
fisttpll
pushl
arpl
bound
sbb
jo
cmp
je
jae
mov
imulb
outsb
pop
js
je
jae
insl
arpl
mov
jno
outsl
bound
jo
jo
xor
mov
sti
test
dec
jne
sub
xor
push
push
jo
outsb
ljmp
add
sbb
popa
aaa
jns
popa
jb
jg
add
pushl
je
gs
outsl
gs
add
push
popa
outsb
js
imul
xor
xor
data16
imul
insb
xchg
call
pop
js
xor
outsl
xor
xor
push
jb
add
jle
lods
mov
jecxz
pop
add
jmp
jo
jbe
ret
ss
ret
dec
dec
js
dec
dec
fucomi
jbe
inc
pop
add
add
push
jb
and
pop
outsl
insb
push
inc
dec
add
jae
outsl
push
push
push
outsb
push
push
or
je
imul
and
and
jne
or
fs
add
ja
jle
out
and
dec
inc
add
xor
xor
xorb
arpl
jo
jns
pop
inc
inc
pushl
push
inc
js
insb
push
js
push
dec
push
dec
dec
inc
push
xchg
pop
dec
or
xlat
fsub
xor
inc
iret
push
xor
mov
lods
xchg
or
pop
dec
dec
push
inc
insl
outsb
lods
inc
push
mov
arpl
outsb
inc
xchg
ret
cld
push
ja
jne
sti
imul
shl
outsl
call
ss
push
pop
insb
stos
addr16
xor
push
dec
dec
jbe
fisubrl
mov
mov
dec
dec
dec
inc
push
push
xchg
dec
push
dec
push
outsl
inc
test
mov
sti
inc
popa
je
push
inc
dec
dec
push
jns
insb
adc
out
bound
aas
pop
scas
adc
sbb
stc
xchg
fs
mov
dec
test
xor
jne
xor
push
insb
lods
insl
das
pop
inc
inc
fs
addr16
jmp
mov
jg
inc
dec
push
add
push
xor
outsl
push
adc
fdivrl
andw
jno
push
xchg
outsb
sub
imul
inc
xor
ret
js
push
imul
push
lahf
inc
ja
sbb
sub
dec
xor
gs
xor
sbb
popaw
xor
xor
xor
mov
outsl
push
push
aaa
push
pop
adc
sbb
notb
fildll
insb
push
pushw
add
scas
pop
insl
ja
mov
in
outsl
in
jp
push
push
push
cmp
arpl
insl
jecxz
or
jo
dec
addr16
outsl
movsb
je
jno
push
push
dec
jne
mov
fsubrl
cli
inc
push
adc
gs
test
fst
push
inc
push
inc
dec
push
dec
xchg
dec
not
pop
push
ss
ja
and
inc
xor
shlb
mov
pop
loope
ret
push
push
push
xor
and
jb
lock
xor
xor
mov
lahf
int
or
and
xor
jle
notl
ret
in
insl
jae
jmp
popl
add
cli
add
mov
add
adc
lea
bound
fmull
sbb
add
cld
repnz
sbb
ficoml
xor
add
notl
pusha
cmp
sub
sbb
push
aad
add
inc
push
jo
insb
add
add
dec
adc
jb
in
mov
out
ss
pop
mov
add
cmp
inc
adc
sbb
subl
jns
roll
or
cwtl
insl
stc
lahf
xchg
mov
xchg
add
add
ja
mulb
or
leave
leave
ret
cmp
stc
insb
push
int
aad
mov
dec
adc
gs
mov
add
jno
and
add
or
dec
js
fadds
xor
add
bnd
movsb
pop
loopne
or
add
fadds
push
xor
inc
out
adc
xor
ss
roll
xchg
xorl
cmpl
inc
cmp
lahf
mov
push
shll
adc
sub
inc
xchg
icebp
add
bnd
or
add
in
nop
in
dec
sbb
and
push
fs
es
dec
mov
cmp
roll
mov
push
jnp
loope
clc
ss
mov
rcrl
xor
sbb
stos
aaa
hlt
fmuls
arpl
aam
or
pop
sub
xchg
adc
ds
into
mov
out
test
cmp
leave
sub
inc
mov
leave
xchg
call
ss
and
mov
loop
add
and
lret
add
push
mov
adc
cld
dec
cld
sbb
scas
out
movb
std
mov
xchg
add
cld
jle
mov
dec
pop
jnp
dec
aaa
sbb
outsb
into
mov
leave
scas
in
add
in
addr16
fimull
xor
pop
jmp
rcr
pusha
xchg
aaa
push
jl
pop
arpl
popa
daa
arpl
and
mov
cmp
jmp
pop
and
add
cld
je
rclb
jecxz
sbb
inc
pop
scas
je
sbb
shlb
mov
shrb
sbb
mov
in
xchg
scas
into
icebp
outsl
test
dec
andb
sti
push
push
inc
fnstsw
scas
pop
xchg
icebp
movsb
xor
sahf
pusha
pop
dec
push
cmpsl
popa
mov
xchg
sti
icebp
ret
inc
push
nop
dec
or
cmp
iret
mov
sub
add
idivl
dec
jl,pt
mov
out
mov
sub
push
ds
cli
add
sbb
xchg
pushf
arpl
fisttps
dec
das
lods
adc
sbb
pop
xor
shlb
jno
fs
les
cltd
jbe
cmp
add
mov
addr16
mov
lds
lahf
cmp
mov
lods
add
jbe
adc
or
cld
pop
pop
ret
adc
sbb
fdivs
icebp
test
test
mov
xchg
popa
add
jb
cmp
cld
xchg
cmp
arpl
movntq
call
xor
pusha
ret
sbb
int
jecxz
loope
adc
ja
add
push
xor
leave
push
jb
push
xchg
mov
and
pop
xchg
mov
xor
and
add
shr
leave
aad
add
repnz
push
sub
mov
ss
repz
and
cmp
add
push
es
lret
jno
push
std
pop
cmpsl
dec
add
mov
mov
hlt
xor
shlb
popf
data16
loop
popf
mov
adc
xchg
jecxz
sbb
push
mov
add
repnz
and
jp
push
loope
pop
jge
je
lahf
inc
stc
and
jmp
in
fldcw
pop
xlat
rclb
ja
movsb
xchg
mov
dec
iret
add
outsb
in
sbb
sbb
jae
out
and
mov
mov
shll
add
xchg
lea
add
lea
and
test
xor
daa
mov
xchg
cmpsb
cmp
std
sbb
out
sub
mov
and
ret
nop
add
shll
jnp
hlt
push
xchg
inc
lret
pop
movsb
cmp
in
pop
in
adc
aas
mov
inc
roll
adc
ljmp
data16
jle
enter
pop
fistl
inc
xchg
jbe
xchg
sbb
mov
cltd
and
add
pop
pushf
rcl
mov
call
xor
repz
lods
push
lahf
add
addr16
sbb
imull
orl
insb
mov
out
fwait
inc
inc
cmp
hlt
xchg
bound
cmp
xchg
push
in
mov
int
xchg
jl
xor
or
mov
push
adc
negb
xchg
es
mov
int
and
mov
push
out
insb
and
push
sbb
cmp
loopne
cwtl
je
mov
xchg
xchg
cmp
jnp
sub
mov
lods
test
add
popa
xor
and
mov
scas
les
imul
cmp
xchg
sbb
add
scas
sub
mov
xchg
add
dec
or
test
cmp
xchg
inc
push
cmp
je
outsb
pop
or
out
and
push
jp
fwait
aad
cmp
jae
jo
jecxz
mov
sbb
mov
fnstcw
jb
arpl
xor
jbe
or
or
lods
rorl
orl
pushf
insl
jbe
rclb
push
jae
out
mov
fmul
in
jbe
dec
mov
push
push
add
gs
xor
lahf
dec
xor
out
dec
inc
cs
xorb
sbb
lods
mov
jb
jl
inc
push
js
and
sub
push
xchg
add
cmpl
push
and
cmp
xlat
dec
dec
ljmp
xor
arpl
call
add
sbb
adc
sbb
mov
inc
add
in
stc
mov
ret
sbb
mov
scas
scas
cmp
cwtl
cmp
icebp
daa
xchg
dec
jl
and
jo
pcmpeqd
fxch
shll
mov
ret
mov
mov
bndstx
in
xorb
cmp
jmp
int
and
clc
inc
adc
mov
stc
dec
xor
subb
sub
loop
jle
dec
mov
out
fs
int3
out
cmp
aas
test
cmpsb
push
or
stos
push
push
imul
jbe
jl
nop
icebp
sbb
add
enter
adc
pop
xor
jae
sbb
or
dec
ret
sbb
jns
arpl
jo
je
cltd
xchg
rolb
mov
inc
cli
es
insl
cmp
sub
inc
jno
add
and
ror
pop
ret
inc
add
and
stos
push
or
aam
pusha
dec
xor
xor
adc
andl
pop
idivb
or
adc
loope
jmp
mov
jo
jp
add
insb
lret
subl
nop
or
stos
jge
mov
ljmp
sbb
sub
repnz
test
push
fsts
neg
mov
insb
jb
out
and
nop
inc
xchg
bound
dec
fsubrs
mov
ret
adc
dec
xor
pop
rcll
rclb
mov
orl
aam
dec
fs
xorl
jno
xor
cmpsb
cmc
pop
cs
and
les
mov
pop
int3
pusha
idiv
jb
mov
mov
cmp
icebp
stc
inc
dec
push
insl
call
fisubl
xor
popa
or
lods
pushf
xor
cwtl
push
mov
and
cmp
jno
xor
dec
pop
cmp
enter
lds
mov
insb
sbb
shrb
inc
jbe
repnz
shrb
std
mov
jl
repnz
or
mov
jle
bound
dec
xor
xlat
fwait
mov
mov
or
inc
outsl
inc
add
or
ret
data16
test
dec
out
fisubrs
push
stc
jbe
dec
push
jl
sbb
jle
xchg
adc
push
mov
dec
ds
sbb
cmpb
jb
xor
mov
push
sbb
jl
bound
filds
adc
out
or
jb
and
adc
ss
add
add
pushf
cmp
sbb
push
mov
mov
xchg
and
xchg
rcrb
jp
aas
mov
loopne
cmp
mov
les
mov
pop
push
xor
and
dec
sub
xchg
dec
cld
adc
outsl
dec
mov
push
xchg
mov
rol
jo
ss
js
out
and
cmp
in
orl
cmp
mov
adc
xchg
mov
addb
add
mov
es
aad
in
mov
ds
push
mov
xchg
cs
jnp
sbb
lea
cmp
mov
popa
or
and
adc
cmp
inc
mov
mov
test
jg
fldenv
fwait
movsl
sahf
idivb
aas
es
mov
ds
popa
or
and
push
push
sbb
je
jae
xlat
ret
jmp
adc
adc
xchg
xchg
pop
adc
pusha
ror
sbb
imul
or
pop
jmp
inc
adc
icebp
sbb
andl
xor
dec
roll
cli
movsb
std
lock
fs
cmp
mov
jecxz
mov
inc
cmp
clc
xorb
leave
sub
and
cmp
cltd
mov
je
xchg
stos
jno
lds
inc
in
xchg
mov
pop
cmp
pushf
test
incb
enter
fcompl
sub
mov
inc
movsb
aam
shrl
and
inc
lcall
seta
pop
mov
push
push
stos
adc
cmp
jne
mov
mov
in
in
aad
mov
mov
add
mov
bound
jbe
xor
call
imul
bnd
xchg
ror
xlat
subb
into
mov
adc
xchg
adc
jl
sahf
movsb
xor
push
jecxz
cld
lcall
adc
daa
shll
inc
jnp
out
sbbl
push
jb
out
repz
insb
ljmp
enter
out
gs
push
jecxz
sbb
ss
in
divb
xor
lock
je
mov
cmp
mov
jne
rclb
and
xchg
rcr
jg
dec
add
jge
jmp
std
vunpckhps
movsb
loope
loopne
loope
ret
stos
call
xor
cmp
and
lahf
inc
jno
std
addb
sbb
sbb
adc
mov
out
inc
movsb
ss
dec
fs
push
add
cmp
pop
out
cli
add
xchg
lret
mov
add
ljmp
adc
enter
test
icebp
lock
xchg
pop
ficompl
leave
scas
dec
pop
aad
inc
inc
xor
mov
imul
popa
xchg
pusha
xor
dec
cmp
sbb
test
lea
fisttps
nop
mov
sbb
insl
and
dec
out
xchg
in
dec
fdivs
jg
sub
fmuls
dec
aaa
mov
pop
mov
cmp
adc
ret
leave
popa
fcoml
adc
xor
add
xchg
addb
cmp
mov
inc
cwtl
jbe
add
or
pop
fistpl
mov
cmpsl
pusha
sub
pop
js
push
mov
cmp
dec
sub
mov
sbb
push
cmpsb
jae
out
and
enter
insl
or
add
xchg
and
sub
aad
add
fistpl
dec
hlt
push
ret
int
add
sub
jo
filds
aam
cmp
je
test
lods
cmp
mov
pop
lods
and
mov
sbb
inc
ret
ret
lret
addb
enter
add
pop
jne
in
and
add
sbb
insl
mov
mov
jmp
sbb
gs
shll
add
inc
lcall
ds
jge
insb
ja
loop
iret
icebp
cwtl
insb
andb
call
or
fnstenv
les
leave
js
sbbl
dec
dec
mov
inc
fidivs
int
sub
addb
jno
add
push
movsb
js
inc
sbb
fs
mov
jne
sti
imulb
sarb
xor
push
lret
lea
addl
mov
and
ja
into
inc
push
inc
mov
shrb
xor
ret
push
add
icebp
pop
push
clc
je
cmp
xchg
cmp
jecxz
add
cli
sbb
add
loope
in
nop
cmpsb
lcall
fsts
add
xor
test
lcall
movsb
inc
ss
dec
and
sub
mov
mov
stos
add
ja
pusha
shrl
mov
push
jp
cltd
addl
lcall
mov
push
lods
in
pop
xchg
fstl
mov
js
mov
push
add
dec
test
imull
mov
daa
dec
inc
das
mov
and
mov
and
adc
shll
cmc
setp
movsb
fldcw
inc
ds
sub
cmp
inc
jge
or
aam
sti
xchg
xchg
aad
jo
cmp
xchg
scas
sahf
les
fs
xchg
pop
decl
xor
mov
xchg
pop
cmp
lock
sbb
aas
stos
xlat
es
add
or
out
pushf
icebp
sbb
adc
mov
sbb
fs
push
ret
decl
rcrl
test
pop
mov
imul
xchg
lds
stos
mulps
lcall
xor
xor
mov
ljmp
sarb
jecxz
mov
xor
push
loope
lret
fmulp
mov
fstpt
xchg
pop
hlt
dec
and
test
pop
lods
sub
xchg
jne
pop
and
pop
dec
dec
or
sbbl
push
jno
inc
repnz
aaa
pop
or
aaa
cmp
jle
les
sbb
stos
lods
cmp
cmp
popa
xor
stos
or
sub
cmpsl
xor
aam
cmp
mov
cmp
cli
lret
pop
jno
out
adc
loopne
dec
mov
aam
mov
inc
dec
flds
adc
pop
mov
sbb
loope
cmp
cmp
insb
nop
test
xor
mov
push
xchg
pop
fildl
loop
xor
mov
mov
cld
sbb
aaa
push
cltd
ret
xor
mov
xor
hlt
subl
mov
in
out
pop
cmp
xchg
shl
mov
dec
js
sbbl
es
movsl
in
roll
pusha
ja
push
push
rcrl
dec
push
mov
adc
nop
xchg
xor
fcmovnbe
fs
pusha
movsl
pushf
mov
jecxz
pop
das
and
pop
movsl
jecxz
jecxz
jne
pop
flds
mov
mov
push
es
mov
out
popa
mov
sbb
push
xchg
scas
insb
mov
addr16
movsb
nop
shrl
cmp
cmc
popa
shrb
dec
jb
leave
lods
fwait
sbb
or
orl
and
dec
inc
sbb
rorl
sub
pop
iret
gs
pop
in
test
jp
lock
fistps
popf
cmpsb
xchg
shl
inc
adc
test
fldt
add
ljmp
aaa
inc
adc
orl
mov
xchg
icebp
dec
sbb
test
cmp
orl
ss
enter
sahf
rol
lahf
inc
sub
pop
pop
or
and
and
jl
fs
add
fsubl
cmp
sub
shll
dec
nop
loope
test
sub
lea
sbb
or
les
mov
and
and
sbb
mov
or
shrd
nop
dec
sbb
bound
roll
jl
adc
daa
arpl
sub
fcomp
sub
adc
jl
mov
inc
push
in
sub
iret
out
nop
roll
data16
pop
pop
xor
lods
pop
push
push
or
inc
call
mov
adc
loopne
jmp
test
push
or
inc
or
add
mov
mov
repnz
nop
sbb
dec
xchg
imul
and
lock
loope
pop
add
shll
pop
and
je
and
push
adc
xor
add
aad
test
or
and
gs
aam
or
test
cmpsl
mov
mov
mov
jle
xchg
mov
cmp
fimuls
mov
push
dec
fimull
and
stos
out
jae
jg
daa
clc
adc
subb
imul
jb
mov
and
dec
push
popf
cmc
xor
xor
cmp
dec
test
mov
enter
sbb
sbb
shl
call
inc
cld
xorb
aas
push
pop
shll
dec
adc
movsl
mov
repnz
xchg
es
cltd
in
xchg
jo
test
dec
pop
push
push
pop
repnz
mov
inc
inc
repz
dec
inc
fwait
lock
xchg
cs
or
pop
lds
or
aad
les
fsubl
cmp
mov
push
xor
pusha
push
cltd
fs
pop
test
imul
shrl
pop
enter
test
mov
adc
or
jmp
test
push
or
repnz
ljmp
orl
shrd
mov
adc
pop
push
xchg
int3
fdivs
cwtl
shrl
and
cmpsb
insl
nop
bound
hlt
xor
out
arpl
push
inc
xor
jmp
popa
or
popf
lds
inc
xor
and
mov
adc
lcall
xor
bound
hlt
shl
dec
movsb
insl
sbb
adc
mov
push
mov
inc
loop
mov
push
adcl
loope
shll
add
in
mov
pop
adc
clc
adc
xchg
cmp
jmp
testb
adc
ftst
ror
dec
adcl
ret
xcrypt-cbc
cmpsl
rcrl
nop
inc
cwtl
pop
flds
and
xchg
les
xlat
mull
popa
movsb
int3
clc
push
and
js
cmp
test
leave
or
mov
in
push
adc
pop
jbe
adc
jl
pop
xor
call
ds
sbb
xchg
inc
sub
popl
rol
shll
jmp
pop
cmc
rclb
fnstenv
lea
sbb
xor
xlat
daa
xor
test
ss
jecxz
and
or
xor
xchg
add
mov
cmp
pop
and
xchg
sbb
call
sbb
popf
xchg
js
inc
pop
mov
das
adc
mov
test
inc
aam
adcl
loope
adc
jne
cli
mov
inc
sub
shl
loop
jge
push
xchg
add
icebp
subb
mov
cld
sahf
insb
xchg
int3
imul
sbb
add
add
pop
mov
mov
movsb
mov
loopne
arpl
int3
mov
adc
add
add
movb
adc
sbb
sub
sbb
push
add
xchg
clc
popf
and
sub
push
jo
dec
sbb
or
addr16
pop
insb
ret
andl
aaa
movsl
and
dec
mov
adc
push
and
adc
cmp
movsb
js
push
aam
pop
insb
xchg
push
or
shlb
pusha
and
mov
xchg
out
call
mov
addr16
sub
rclb
mov
movsb
push
push
push
xchg
rolb
lods
in
es
test
out
mov
and
xor
xchg
jns
mov
xor
rcll
mov
sbb
in
xor
aam
das
dec
ret
adc
int3
xor
in
ret
mov
loope
ja
adc
dec
cmp
mov
addb
or
mov
pusha
and
icebp
jns
dec
ret
sub
enter
andl
cld
sub
popa
adc
pop
mov
rcl
and
sbb
jnp
jp
mov
xchg
les
lock
test
inc
les
jle
in
lds
wrmsr
pop
jecxz
popa
scas
roll
sahf
bound
mov
push
add
adc
jmp
jno
or
test
gs
add
dec
push
mov
rorb
shrb
adc
and
push
push
mov
inc
jg
js
leave
sub
repz
jecxz
inc
jp
xlat
das
jns
jne
loope
mov
mov
mov
cs
cmc
adcl
in
inc
negb
cmc
xchg
mul
xor
mov
test
jmp
arpl
gs
movsb
jmp
inc
push
hlt
xchg
push
lds
and
dec
add
push
or
inc
lds
pop
mov
sbb
jno
xchg
jp
jle
adc
xchg
cmovge
jbe
adc
xchg
sbb
movsb
bound
mov
cmp
mov
arpl
or
nop
lret
ds
push
sbb
movsb
mov
sbb
outsl
pop
mov
sbb
rcl
or
jb
out
loop
jne,pn
mov
pop
push
cmp
icebp
or
adc
inc
and
into
jp
jge
lcall
pop
outsl
add
sbb
into
mov
stos
sbb
or
cmova
test
push
mov
push
adc
pinsrw
sub
push
mov
aaa
jae
xchg
pop
dec
mov
mov
lds
sub
scas
jmp
shlb
pop
je
sbb
enter
adc
cmp
jl
les
inc
iret
add
xchg
or
push
pop
xchg
cmp
add
sub
adc
cmp
cmp
adc
add
xlat
mov
cltd
aam
jl
ret
mov
sub
out
push
insb
mov
and
dec
movsl
icebp
add
or
shlb
cmpsl
xchg
ljmp
xchg
into
js
jg
loopne
sub
jmp
rorb
mov
mov
lea
xchg
call
pop
and
sbb
lret
jg
les
adc
and
add
les
stos
sbb
aad
xchg
leave
sub
addr16
into
movb
enter
mov
push
pop
adc
jmp
xor
jno
shl
imul
pusha
add
push
aam
je
sahf
lock
jge
push
addr16
adc
ret
push
test
adc
pop
or
popa
xchg
dec
in
out
mov
inc
test
mov
adc
mov
pop
or
dec
push
popf
stos
daa
xchg
jg
addr16
mov
xor
add
notl
inc
push
cmp
in
adc
sahf
jle
or
sti
dec
xchg
cmp
pushf
out
test
and
push
adc
jae
sbbl
inc
pushf
jns
push
add
fwait
test
jbe
add
xor
or
addr16
mov
xchg
fnsave
dec
out
int3
push
jle
mov
sub
popf
vpsubusw
pop
std
int3
arpl
jno
arpl
mov
jge
adc
shll
lret
dec
adc
dec
xor
jecxz
jle
mov
pop
or
adc
mov
and
sahf
xchg
das
jbe
test
cltd
adcb
dec
sbb
aas
xchg
push
aaa
sbb
push
inc
in
stc
rol
sub
adc
je
orb
xor
enter
adc
test
lret
adc
orb
call
pop
es
data16
inc
or
sbb
add
xchg
ja
stos
inc
jb
sbb
mov
hlt
cmpsl
mov
or
and
pop
jmp
pop
xor
loopne
add
aas
mov
negb
sub
xchg
hlt
sbb
push
sub
add
mov
andl
fstpt
in
jnp
inc
inc
inc
call
sbb
je
sarb
mov
sub
test
rcrl
sbb
or
jle
into
mov
sbb
xchg
rcll
add
sub
push
fdivs
pop
jbe
xchg
outsb
and
xlat
or
xor
or
lea
cmp
hlt
adc
mov
and
or
mov
mov
icebp
filds
mov
addr16
jmp
test
push
ficoml
out
lock
xor
shlb
gs
pop
loopne
dec
dec
xchg
pop
popf
fs
dec
jbe
push
push
jmp
inc
arpl
sbb
add
dec
adc
and
rorl
jp
pop
jmp
or
cld
push
out
mov
aaa
enter
inc
lcall
je
in
add
rolb
cmc
dec
or
xchg
dec
jns
fsubr
data16
mov
ja
mov
or
pop
xor
pop
push
dec
loop
cmp
mov
daa
nop
xor
push
cmp
xchg
insb
sub
adc
shll
sub
test
outsb
sahf
cmp
and
pushf
in
xor
test
cld
xchg
mov
jbe
jno
xchg
xor
iret
push
and
push
mov
in
or
inc
push
sub
es
mov
inc
popa
push
lds
mov
hlt
add
pop
outsl
cld
bound
aas
pslld
fwait
or
or
shrl
push
cmp
cmc
add
sbb
adc
jl
or
test
and
xor
inc
cmp
lods
adcb
rorb
push
mov
jl
or
testl
dec
cmp
and
mov
dec
lock
dec
call
int
bound
or
cli
aaa
out
adc
jmp
lcall
dec
rcrb
sbb
or
ds
inc
dec
cmp
aaa
lods
addr16
adcb
subl
mov
testl
lods
inc
pop
sbb
xchg
ret
and
sahf
mov
loopne
and
shlb
hlt
jg
ja
bound
jp
leave
mov
add
mov
or
cmp
or
and
pop
rorb
xor
dec
fs
adc
push
push
repnz
xor
sbb
lea
sbb
sub
inc
test
cmp
int3
pop
mov
xor
mov
sbb
xor
mov
mov
dec
cmovl
sarl
xchg
dec
and
rcr
cmp
and
push
cmp
cmp
sub
sub
movswl
jp
test
xchg
and
gs
xchg
add
adc
inc
ret
jp
adc
or
clc
or
lret
cmp
jmp
std
nop
leave
jb
test
lock
ret
popf
xchg
sub
test
xor
jo
xor
push
inc
sub
mov
pop
popa
inc
and
or
popa
sbb
repnz
aaa
cmp
lock
add
movb
cmp
or
push
stos
and
mov
adc
jb
mov
lds
inc
and
xchg
lcall
leave
pcmpeqb
cmp
test
pop
dec
fldenv
loopne
and
clc
mov
mov
push
xor
addr16
inc
out
inc
jle
les
add
mov
int
xchg
andb
add
loopne
add
js
jmp
xchg
mov
cmp
pop
jae
data16
cs
inc
or
push
sub
popa
je
push
faddl
mov
cmp
jl
mov
pop
or
jnp
add
stos
pushf
stos
lret
jno
fsubrs
cwtl
inc
pop
popf
jae
and
rolb
xchg
cli
xor
mov
clc
lret
ret
mov
enter
or
and
xchg
test
dec
rorl
cmpsl
out
mov
sub
add
jmp
outsb
inc
xchg
nop
add
add
pop
pop
add
cli
mov
stc
addb
xchg
jp
fwait
mov
xorb
mov
lret
pop
jl
inc
xlat
mov
cmp
mov
jmp
pop
mov
call
or
enter
sbb
clc
js
sub
mov
jae
jl
mov
cmp
sbb
push
mov
add
sbb
adc
add
xchg
cmp
mov
ljmp
xchg
inc
js
paddsb
call
lods
loop
in
add
aad
es
fmull
std
cwtl
movsl
cwtl
mov
popa
inc
mov
fstps
cmp
cmp
sbb
pop
cmp
cmp
lock
cwtl
or
ds
je
add
mov
inc
push
or
clc
loopne
push
xchg
lahf
nop
adc
sbb
mov
xchg
aaa
sub
cmp
cs
jo
jns
or
in
test
xor
mov
outsl
or
sbb
lods
xchg
bound
pop
ror
sbb
aaa
sbb
inc
jnp
pop
and
add
fwait
cwtl
jne
sub
daa
nop
addb
dec
popf
mov
aad
xor
pop
pushf
lods
cmp
imul
iret
inc
movzbl
test
xchg
andb
xchg
aam
roll
inc
in
mov
jl
mov
dec
mov
aas
mov
mov
sarb
or
jae
fwait
jge
dec
je
mov
add
or
sbb
or
add
and
or
sbb
add
push
push
xchg
push
adc
dec
movsb
pop
roll
test
andb
stos
xchg
pop
leave
call
rcrl
fsubs
jae
add
cmc
add
pop
hlt
dec
jecxz
fimuls
bound
inc
bound
and
sbb
scas
rcr
push
pop
mov
imul
mov
pop
add
sbbl
xor
lahf
push
movsb
sub
stos
into
ds
inc
test
xchg
adc
int
inc
cmpsl
shll
ficomps
cmc
loope
aam
pop
rorb
mov
std
shll
xor
jmp
sbb
jns
mov
xor
and
movsb
cs
mov
add
imul
mov
dec
push
jge
jg
cltd
xor
push
andl
xor
and
add
pop
lds
lock
pop
sbb
js
push
ds
pushf
xchg
add
ret
test
dec
jne
mov
sbb
data16
into
pop
sbb
or
jp
or
mov
ds
sbb
stos
or
push
mov
mov
shrb
xor
mov
daa
cmp
subl
or
adc
lods
lret
fisubs
loope
sbb
xchg
test
lea
cvtps2pi
sbb
andb
test
push
cmp
inc
call
iret
add
mov
push
inc
adc
xchg
cmp
test
das
fwait
mov
jmp
iret
xlat
push
fdivl
popl
notb
inc
cmp
sti
addb
push
pushf
fidivl
fwait
mov
add
jp
adc
mov
mov
fstp
insb
jae
cmp
xor
adc
dec
xchg
stos
dec
xor
sbb
or
jo
xor
ljmp
jl
add
pusha
pushf
lds
call
enter
inc
push
movb
mov
pop
push
ss
pop
add
dec
push
orl
inc
enter
clc
loopne
cmp
out
ss
std
push
cmp
sbbb
mov
testl
add
lods
push
popa
mul
jl
adc
std
aaa
xchg
inc
int
mov
push
xor
ja
jno
inc
push
loop
pop
push
adc
jecxz
addr16
add
xchg
mov
mov
pop
mov
sub
jl
loopne
push
in
or
mov
cld
insb
mov
or
push
inc
xchg
add
mov
push
daa
push
or
inc
stos
add
sub
adc
push
and
test
ljmp
inc
sbb
hlt
mov
and
push
xchg
in
loopne
push
or
roll
je
add
pushf
jo
dec
sbb
pop
mov
jae
add
adc
mov
mov
sub
rolb
dec
enter
pop
frstor
dec
arpl
das
popf
cltd
cld
fstl
mov
test
adc
adc
sbb
xchg
add
sbb
test
jl
nopl
test
mov
sub
nop
jle
push
mov
js
int
ss
and
xchg
jg
push
hlt
int
xchg
test
repnz
dec
jp
or
push
mov
orl
fnstcw
cmp
mov
fcmovnu
mov
inc
imul
xor
inc
mov
inc
xor
fs
mov
add
add
enter
jl
pusha
pusha
jecxz
pusha
xor
repnz
dec
xchg
mov
loopne
or
es
aam
adc
mov
mov
lahf
jp
and
sub
adc
insb
flds
and
jbe
int3
and
xchg
jo
mov
and
jns
add
popf
sub
enter
out
xchg
arpl
repnz
mov
popl
ja
shlb
in
mov
mov
jmp
andl
xchg
repz
scas
and
adcb
sbb
imul
mov
mov
mov
lahf
data16
mov
push
and
mov
inc
notl
mov
jnp
or
pusha
or
add
adc
nop
add
add
adc
clc
xchg
pop
lret
in
lcall
test
xor
lds
negb
mov
movsl
int3
pop
movl
inc
shlb
ror
lret
push
sub
inc
ror
lcall
lcall
xchg
test
mov
jg
ss
mov
xchg
cwtl
cmpl
or
dec
adc
fwait
cmp
inc
adc
mov
repnz
sub
jo
hlt
sub
sbb
cmp
shl
rcrb
sti
lods
outsl
stos
or
push
mov
sub
sbb
and
mov
push
cld
fildl
rolb
pop
inc
sbb
and
add
leave
mov
mov
sbbb
mov
ffreep
cld
lds
and
pop
rorb
outsb
outsl
andb
dec
adc
movsl
add
mov
xor
popa
into
or
jne
leave
inc
pop
or
xorl
mov
mov
hlt
pushf
pop
inc
cmp
add
lret
push
pop
inc
push
je
ljmp
jmp
data16
stc
push
inc
mov
fs
push
sbb
pop
leave
addl
fs
sub
les
das
add
pusha
mov
ljmp
lcall
jp
mov
pop
imul
test
hlt
sbb
and
test
or
push
dec
sub
sub
sub
cmp
adc
push
dec
mov
dec
mov
ds
repnz
lcall
jle
sbb
fs
pushf
xchg
mov
out
mov
jo
xor
inc
cmp
js
movsb
jbe
adc
and
ds
dec
jp
fisubl
in
ds
rcl
xchg
add
xorl
inc
cli
and
xor
cmp
or
push
lret
addr16
int
cmp
cmpsb
xchg
fdivs
or
and
lods
rclb
and
pop
mov
dec
daa
stc
pusha
dec
std
scas
sub
inc
ds
add
cmp
aas
or
jl
xor
lods
stos
lods
inc
adc
pop
insb
adc
cmp
inc
loop
aaa
sub
xchg
icebp
into
cs
xchg
mov
ret
jmp
movsb
ds
or
mov
in
cmp
sub
xor
or
loope
dec
outsb
lret
adc
mov
rorl
cmpl
mov
xchg
cmpsb
adc
xor
clc
adc
enter
enter
mov
out
std
jle
push
or
and
int3
test
in
flds
test
mov
mov
fs
cld
ljmp
mov
jns
dec
pop
repnz
adc
cmc
jne
add
mov
jp
sub
dec
adc
sbb
dec
bound
in
es
pop
push
or
push
and
mov
ret
and
dec
sub
cmp
hlt
jle
inc
stos
cs
in
arpl
adc
test
sahf
inc
iret
push
lods
data16
cmp
out
and
insl
push
sbb
in
loop
xchg
addl
test
orb
push
or
sub
inc
stos
cli
clc
sub
in
addr16
push
xor
fld1
jo
shrb
mov
pop
daa
cmp
sub
mov
mov
pop
popa
mov
inc
loopne
and
scas
add
jno
pushf
or
adc
inc
adc
push
push
out
jne
xor
push
imulb
mov
pushf
xor
cmp
sbb
xlat
popa
xor
les
movsl
or
dec
lret
rclb
scas
leave
dec
jg
nop
ljmp
or
mov
lret
cmp
sub
shll
xchg
inc
std
cvttps2pi
pop
bnd
into
pop
shll
sub
add
push
ja
push
jbe
push
fildl
rorb
mov
ret
dec
ds
int
push
pop
cld
sub
loope
dec
addr16
xchg
es
adc
out
inc
lods
or
loop
push
pushw
xchg
sub
sahf
test
sbb
cmp
push
adc
and
test
aaa
ror
shll
add
pop
fnstenv
icebp
mov
lret
jb
or
inc
jne
push
loopne
popf
mov
sub
in
lret
sub
xchg
push
and
adc
test
lahf
push
xchg
mov
loop
aad
jne
hlt
sbb
sub
mov
xlat
adc
rorb
mov
sbb
sbb
adc
mov
rcll
or
xchg
jno
adc
lods
inc
popa
mov
adc
sbb
jp
stos
ds
loop
xor
push
adc
lock
adc
scas
sub
xor
or
add
jp
push
jecxz
mov
inc
jb
shl
cld
jbe
imul
push
cltd
mov
insb
or
lds
cmp
repz
mov
xchg
adc
sbb
jl
shll
nop
movsl
push
sbb
mov
fmull
xor
pushf
lds
iret
daa
push
cwtl
xor
dec
mov
inc
mov
add
jmp
cld
add
xor
addr16
shl
or
adc
xor
imul
insb
mov
fcmovnb
scas
xchg
and
aad
nop
or
dec
mov
movsb
and
bound
or
add
int
dec
lcall
xchg
cmp
mov
pop
push
or
addr16
adc
mov
dec
mov
cwtl
stc
dec
add
cld
cli
loop
inc
sub
dec
sub
push
movsb
popa
nopl
mov
cmp
cmp
mov
cmp
sbb
sbb
jle
inc
clc
cmp
xor
mov
dec
and
mov
or
pop
xlat
cli
mov
repz
mov
jecxz
adc
or
adc
sub
xchg
inc
push
fistpl
jp
pop
jmp
or
dec
loop
xlat
dec
cli
adcl
pop
push
shl
jb
cmp
fwait
lods
loopne
call
sbb
faddp
and
mov
push
mov
clc
cmc
fistl
out
cli
jp
je
inc
mov
pop
xchg
sar
add
dec
jle
sub
out
mov
icebp
insb
pop
xchg
nop
cmpsl
sbb
adc
lcall
cmp
adcb
es
inc
nop
jae
repnz
add
ja
ret
rorb
das
jmp
in
mov
stc
rcrl
test
movb
mov
movsl
inc
rolb
sub
loop
das
sbb
sarb
mov
xchg
mov
fisubs
arpl
jo
mov
or
mov
jnp
adc
loopne
sub
je
push
scas
test
jmp
mov
cmp
lret
or
leave
xchg
movsl
push
pushf
filds
mov
aam
xor
mov
mov
xor
xchg
movsb
dec
jbe
dec
push
sbb
pop
or
or
pop
push
ror
hlt
pop
inc
or
xchg
insb
lock
rorb
dec
call
cmp
lock
cmc
xor
sub
pop
aad
adc
cmp
pop
and
dec
lcall
add
mov
addr16
jle
jmp
es
ret
mov
fimuls
pop
scas
pop
push
cwtl
shll
jl
nop
and
push
push
aad
jecxz
cmpb
pop
xchg
bound
in
in
lock
jl
daa
or
sub
std
fnstcw
popa
sbb
mov
pop
mov
mov
mov
arpl
cmp
xchg
push
ds
mov
push
mov
int
mov
sub
sub
adc
jmp
push
push
cmp
xchg
je
adc
inc
cmp
sub
pop
mov
iret
fmuls
insl
leave
ss
and
mov
enter
dec
add
nop
sbb
out
adc
and
mov
dec
mov
shlb
test
loope
sbb
leave
add
adc
mov
xchg
test
inc
or
jl
jb
icebp
mov
mov
cli
inc
stos
loopne
jbe
push
inc
addr16
or
fldl
sub
xor
adc
xor
xchg
inc
inc
sbbb
mov
jecxz
push
xchg
icebp
or
call
dec
mov
inc
pop
xor
sbb
xchg
jbe
push
mov
sub
sub
and
sbb
jecxz
ljmp
loope
jl
push
or
xlat
jecxz
stc
mov
fs
stc
nop
dec
in
jecxz
cmp
jae,pn
xor
cmp
mov
xchg
cld
call
popf
out
fwait
icebp
popf
mov
mov
fsubl
jl
test
dec
mov
hlt
push
les
mov
sbb
and
and
pushf
loop
sahf
push
popa
iret
dec
mov
and
mov
ss
mov
add
or
sti
out
jo
movsb
sbb
push
sub
daa
aaa
bound
adc
xor
jb
in
dec
stos
pop
sub
push
mov
call
es
je
bound
orb
xor
xchg
mov
and
and
xorl
addr16
cmp
nop
inc
sbb
push
mov
add
ja
cmp
in
fbld
pop
adc
lods
inc
jge
leave
mov
test
mov
dec
cmp
nop
movsb
pusha
inc
fcoml
pop
mov
sub
lods
sti
leave
adc
and
push
subb
ljmp
or
add
repz
mov
xor
cmp
hlt
push
sbb
dec
repnz
ret
and
add
dec
aaa
rcrl
jae
add
push
decb
add
out
addl
mov
mov
xchg
jecxz
dec
xchg
mov
rcll
dec
sbb
mov
dec
mov
imul
mov
pop
jns
lret
mov
add
sarb
and
pusha
adc
rol
add
push
aaa
sbb
xchg
jecxz
dec
orb
insb
xchg
or
pusha
pop
add
lahf
mov
out
adcl
mov
ret
inc
pop
fstps
leave
mov
adc
add
jnp
pop
stos
jp
repnz
sbbb
xchg
stc
pusha
push
and
xor
adc
movsl
lods
dec
sbb
pushf
dec
ret
xor
xchg
pop
addr16
call
push
mov
js
xchg
adc
sub
and
mov
sti
in
sbbb
pop
push
lock
xchg
push
mov
sub
adc
pop
daa
mov
dec
pop
rolb
insl
pop
pop
inc
xor
nop
sbb
push
test
push
jmp
fimuls
add
push
out
push
scas
xchg
jnp
mov
mov
outsl
mov
gs
mov
shrb
cmpsb
xchg
jae
mov
andl
add
pop
loopne
sub
je
bound
jmp
and
cli
sbb
jbe
cmc
pop
lods
dec
and
imul
add
rcrb
add
and
mov
inc
push
add
sub
jl
movsb
and
xor
pop
rcrb
add
inc
inc
ret
dec
imul
je
dec
mov
mov
outsb
pop
sbb
aam
push
cmp
mov
dec
and
jmp
pop
icebp
sbb
pop
imul
add
pushf
bound
inc
pop
and
andb
xchg
imul
push
in
cmp
add
fnstcw
mov
mov
push
pop
push
xor
xchg
adc
sti
push
pop
sbb
les
mov
add
dec
mov
pop
cmp
cmpsl
clc
mov
push
es
mov
inc
mov
sti
lds
push
jp
xchg
iret
mov
scas
or
xchg
je
mov
pop
adc
sti
or
xchg
sub
movsl
inc
mov
cld
mov
xchg
sub
xor
jb
popf
push
sbb
add
pop
inc
jns
rolb
xor
mov
fwait
xchg
subl
lahf
and
mov
adc
cmp
or
mov
sti
mov
scas
nop
out
mov
insb
mov
cmp
jnp
test
xor
out
jb
or
pusha
movl
ljmp
pop
mov
addb
mov
test
repnz
sahf
mov
sahf
push
clc
mov
shr
inc
xor
imul
repz
xchg
xchg
mov
andl
repnz
and
dec
rolb
inc
jge
inc
loopne
and
stc
lret
mov
mov
outsb
jge
out
test
sbb
je
mov
xchg
xor
jne
dec
stos
pusha
dec
xchg
test
cwtl
xor
ljmp
andl
pop
popf
cld
gs
cli
data16
push
ret
inc
sbbb
add
xchg
push
in
inc
js
mov
fs
aam
mov
push
push
add
je
or
push
mov
iret
sahf
rclb
lret
lahf
sub
inc
addl
adcl
xchg
add
sbb
add
stc
bound
or
mov
jnp
or
and
inc
es
cwtl
insl
shlb
dec
aas
pop
push
dec
push
sub
push
daa
add
xor
sub
stos
mov
lock
test
mov
xor
fimuls
add
mov
cmp
in
sbb
sub
add
movsb
sbb
mov
or
fistpll
clc
xorb
ja
add
addr16
and
sbb
icebp
sti
jne
fwait
in
mov
mov
xchg
add
adc
add
push
jge
add
jo
mov
leave
dec
inc
pop
mov
rorl
and
fs
arpl
dec
fldl
loopne
mov
jecxz
daa
dec
lock
jno
and
jecxz
pop
sbb
stos
inc
fsubr
mov
bound
sub
mov
scas
push
sbb
sti
sarb
shlb
add
adcb
dec
push
mov
rorb
and
add
lea
int3
loope
push
xchg
sbb
jecxz
insl
mov
fcomps
dec
pop
jns
sbb
push
dec
shlb
popf
pushf
call
std
mov
xchg
clc
pop
je
xorb
adc
mov
clc
ret
shrb
jmp
addr16
test
aad
sub
popf
lret
cltd
or
sub
cmp
xchg
mov
jle
push
fmull
es
cmpsb
movsb
mov
inc
mov
lods
out
dec
jae
or
and
scas
or
mov
sub
mov
adc
mov
das
push
ret
test
mov
notl
mov
push
pop
mov
mov
cmp
dec
or
faddl
pop
xor
jbe
pop
sub
jmp
push
andb
mov
shl
push
stos
rcrb
adc
dec
sub
popf
loopne
push
nop
fldt
jl
jnp
std
lds
popl
push
inc
mov
enter
mov
xor
adc
and
xchg
int3
or
jo
gs
cmpsb
pop
ucomiss
fsubs
mov
mov
flds
push
and
aam
cmp
and
cmp
jae
shrb
xor
mov
mov
cmp
sub
clc
mov
stc
aam
rcll
rcll
mov
jno
imul
mov
out
xchg
ret
out
insb
jbe
popa
or
inc
push
test
cmpsl
andb
dec
push
das
sub
fbld
dec
lea
fsubs
aam
push
leave
xchg
push
pop
les
call
imul
or
pop
lds
sahf
cmp
pop
popf
adc
cmpsb
fmulp
shll
fmulp
fisubl
sbb
ja
dec
jl
xchg
ret
sub
and
pop
sub
pop
stos
and
dec
sbb
pop
cmpl
and
sbbl
bound
inc
add
cmc
gs
lahf
stos
jp
adc
push
cmpsl
vandnps
pop
jb
add
add
xor
hlt
fwait
jno
in
adc
icebp
sbb
lods
xchg
cmp
popa
loope
xor
loope,pt
pop
xchg
test
decb
add
jl
dec
sahf
add
aam
push
and
mov
mov
xchg
push
pop
adc
sbb
in
or
imul
xor
jae
mov
test
pop
mov
pop
xchg
in
popa
push
adc
push
add
add
lcall
outsl
ret
mov
sbb
jb
pmaxsw
pop
xor
aam
scas
mov
or
or
mov
pusha
mov
les
insb
in
in
xor
xchg
aad
movsbl
clc
in
mov
mov
mov
sbb
xchg
xchg
push
xchg
out
outsl
xor
jp
pusha
push
xor
pushf
bound
jae
push
adc
dec
mov
mov
fmuls
dec
inc
xchg
xorb
lock
into
sub
in
pop
in
sub
xchg
inc
jno
inc
orl
aam
in
pop
daa
jl
or
dec
xchg
inc
addr16
shrb
clc
mov
push
jle
lahf
adc
inc
movl
and
sbb
mov
push
mov
add
cmc
nop
jge
mov
mov
lret
jno
and
mov
or
jbe
dec
mov
test
shlb
mov
or
in
sub
pop
push
or
sub
or
jbe
sbb
sbbb
push
dec
les
pop
icebp
and
adc
inc
xchg
xor
dec
jb
nop
andl
out
mov
pop
ret
loope
sub
scas
mov
flds
inc
push
xchg
andb
and
stc
shll
les
out
daa
or
daa
mov
mov
test
imull
in
adc
mov
inc
pusha
icebp
pop
cmpb
imul
test
dec
inc
je
ror
xor
rcrl
stos
push
cmp
mov
in
sub
cmpl
clc
sub
jne
enter
es
insl
inc
adc
popa
inc
pop
scas
inc
pop
lock
inc
cmpsb
mov
in
movsb
call
jmp
popl
lret
inc
inc
xor
pop
imul
movsb
and
stc
push
xchg
mov
mov
push
out
stos
jp
lock
xor
aad
cmc
roll
and
es
sti
pop
pop
stos
lock
and
stos
popa
lds
sbb
xor
mov
sub
psubusb
je
sarb
cmp
xor
inc
ror
jmp
mov
clc
adc
andb
test
imul
inc
psubw
sahf
roll
popf
xor
cli
aas
mov
mov
and
jns
leave
jge
iret
test
sbb
xchg
xlat
and
pmaddwd
add
aad
aad
dec
cmp
adc
sub
pop
xchg
test
movsb
and
or
fwait
into
enter
and
xor
daa
dec
mov
popl
in
mov
out
gs
lret
pop
jmp
pop
icebp
push
dec
inc
jno
add
das
xor
dec
icebp
icebp
nop
cmp
xor
mov
jne
es
ja
popf
aam
test
mov
out
push
enter
mov
ds
push
aaa
incb
lods
inc
and
popf
mov
mov
fimull
jnp
cmp
out
sbb
mov
and
sbb
hlt
mov
add
lods
and
add
adc
outsl
sbb
push
cmpsl
fcoms
icebp
or
push
jmp
push
fwait
out
or
cmp
sbb
sbb
push
lods
xchg
sub
in
enter
add
ror
out
xchg
jne
repnz
jne
xchg
and
sub
rcrb
arpl
mov
mov
xorb
ja
cmc
cmp
cmp
data16
cmp
test
xchg
pop
push
xor
cs
jno
mov
sarb
pop
shlb
stos
push
mov
add
jle
ss
push
jmp
out
pop
pop
adc
pop
dec
pop
rcr
add
outsl
out
xchg
out
mov
test
test
jnp
gs
sbbb
daa
les
call
insb
repnz
es
jp
addr16
xchg
xor
pop
push
jbe
stc
sub
lret
jb
jp
xchg
xor
mov
pop
dec
mov
pop
and
and
inc
cmp
arpl
in
cmpb
or
mov
rorb
hlt
sub
or
and
sbb
or
xor
jle
pop
xor
arpl
cmp
adc
pop
icebp
adcl
jmp
xchg
cltd
xorb
mov
scas
mov
sub
fbld
mov
or
les
xor
mov
loopne
div
stos
push
push
es
push
mov
jnp
cmp
mov
leave
dec
and
xor
or
mov
test
dec
cmpsb
cmp
sbb
jns
xor
lahf
mov
shll
loop
mov
jno
or
enter
xor
lods
adc
inc
addl
cs
lcall
cmpsl
sbb
je
mov
pop
ret
mov
ret
repnz
adc
aam
test
nop
clc
test
call
and
xchg
repz
xor
aad
xor
lcall
mov
and
mov
lea
push
pop
mov
and
mov
jecxz
push
mov
pop
mov
pop
sub
sti
cmp
add
cmc
daa
and
and
cwtl
xchg
inc
scas
pop
mov
pop
je
mov
dec
inc
push
or
xor
xchg
cmp
mov
roll
push
adc
mov
jecxz
sub
sbb
xor
mov
pop
xchg
add
xchg
mov
mov
cli
mov
add
and
andl
push
xchg
inc
jne
mov
stc
mov
cmpsb
push
pop
xor
sbb
test
and
inc
fmull
cmp
out
mov
jns
test
mov
pop
sbb
fdivp
xchg
mov
mov
mov
ret
lahf
repz
les
enter
push
fbld
fwait
pop
or
popf
movsb
xor
dec
and
xlat
lret
mov
faddp
sbb
xchg
mov
shlb
insl
sahf
push
xchg
jmp
xor
and
loop
and
fdivrs
mov
cs
mov
mov
push
fld
inc
mov
and
mov
or
scas
push
xorl
xchg
sub
or
cli
fwait
lock
hlt
jmp
add
xchg
push
stos
xchg
inc
ss
ja
push
pop
or
sbb
mov
sbb
xchg
stc
shlb
scas
mov
loopne
test
cmp
and
mov
sub
jbe
jnp
inc
lret
imul
inc
adc
lret
das
sub
movsl
ret
adc
mov
shll
xchg
push
cmpsl
jno
lea
jnp
ljmp
test
inc
das
cmc
orl
dec
shlb
aaa
cmpsl
add
adc
cs
jno
inc
cmp
or
and
sbb
dec
repnz
outsl
call
cmp
mov
addr16
push
test
adc
out
adc
bound
mov
lret
pop
add
sub
add
mov
test
lret
int3
xor
add
sbbl
mov
daa
mov
pop
stos
ds
mov
mov
xor
dec
mov
stos
inc
inc
repnz
test
mov
sbb
or
es
mov
or
xor
mov
xor
dec
imull
add
mov
bnd
sbbl
or
adc
push
xchg
lock
add
mov
pusha
pop
jo
ret
jl
lea
push
lock
sbb
xchg
loopne
cmp
loopne
ds
mov
and
stos
add
pop
fmull
mov
mov
lea
xchg
dec
fdivrp
nop
and
push
pushf
push
test
sbb
jle
jne
ret
cmpsl
mov
xchg
sub
jns
enter
je
add
popf
clc
ret
lods
mov
nop
popa
imul
lock
cltd
repz
js
je
cmp
pop
out
sub
in
add
pop
inc
stos
sbb
mov
outsl
add
es
xor
adc
iret
lret
stc
bound
xor
into
cmp
aad
push
xchg
pusha
cmp
daa
or
inc
imul
jmp
xor
sbb
sbb
sub
lds
xor
fcmovbe
shll
out
jb
insl
xchg
cmp
popa
sub
aam
fadds
addl
nop
mov
mov
std
lret
adc
dec
lret
push
enter
jp
xchg
fwait
pop
sbb
data16
and
or
scas
imul
xchg
mov
or
outsb
cltd
pop
cltd
and
cmp
aad
jl
rorb
cmp
add
jb
mov
rorb
adc
add
jl
inc
mov
mov
sbb
pop
inc
sub
push
cmp
ss
xor
jb
js
mov
pop
nop
push
imull
loop
sahf
sarl
and
mov
xchg
cmpsl
xacquire
pop
es
push
pop
inc
fisttps
push
xchg
pop
jns
outsb
mov
xor
bound
mov
int
mov
pop
push
scas
inc
aad
and
std
sbb
js
iret
dec
pop
test
ja
adc
cltd
loopne
pop
aas
mov
xchg
pusha
clc
fsubp
sub
or
xchg
icebp
loopne
loopne
outsl
lds
daa
jno
sub
aam
jmp
pop
mov
mov
leave
fisttpl
scas
xor
nop
and
mov
js
and
cmp
cmp
insb
and
sub
pop
push
adc
dec
add
repz
adc
mov
sbb
push
dec
imul
ds
jne
mov
push
cmp
lret
into
xchg
icebp
sub
add
popa
xor
cmp
mov
push
mov
jle
pop
or
out
mov
adcb
cmp
and
mov
cmp
jne
mov
dec
xchg
out
xor
mov
xchg
jmp
nop
inc
lea
lods
cwtl
add
and
lea
jecxz
leave
ret
jg
in
mov
and
mov
dec
push
shll
orb
es
iret
xchg
bnd
adc
icebp
cmp
mov
cmp
sbb
leave
dec
cmc
in
mov
inc
insb
dec
inc
xor
shrb
pop
mov
mov
xchg
pop
call
and
aaa
iret
adc
pop
inc
into
arpl
sbb
jp
test
adc
dec
mov
data16
ret
xchg
stos
cli
stos
gs
dec
xor
idivb
lock
shlb
inc
btc
lret
repz
mov
loope
nop
inc
dec
xor
addr16
mov
pop
inc
mov
and
adc
movsl
ss
divl
push
pop
hlt
inc
addr16
and
rcrb
and
adc
mov
mov
sub
ja
push
clc
jg
xor
sbb
nop
jl
and
push
pop
je
fildl
xor
shll
int
setb
aam
rcll
cltd
xor
sbb
stc
ljmp
push
mov
sahf
sub
mov
sbb
cwtl
in
popa
loope
mov
and
pop
gs
push
inc
add
rol
mov
dec
test
in
pusha
je
aaa
push
jmp
ficoml
daa
adc
leave
dec
fldl
and
addl
mov
or
mov
sub
pop
xchg
xchg
rcr
insl
int3
aas
out
xchg
and
and
jge
push
fs
xor
jne,pt
mov
lea
test
dec
adcb
fcompl
xchg
xchg
repnz
or
ret
add
mov
subl
xchg
js
mov
push
sysret
adcl
sarl
cltd
sbb
out
inc
loop
add
sbb
mov
xchg
pop
mov
or
faddl
int3
xchg
dec
je
inc
push
sub
imul
frstor
mov
cli
addb
rcll
popf
js
sbb
xchg
out
pop
cli
sub
jns
pop
sbb
jl
pop
pusha
enter
xor
lret
mov
sti
cli
or
sbb
mov
pusha
icebp
push
mov
jnp
daa
shlb
inc
jecxz
les
xchg
pop
and
test
aaa
xchg
or
add
add
test
mov
xor
mov
or
fwait
jl
syscall
mov
sarl
sbb
dec
aad
test
out
xor
dec
cli
rol
sbb
sbbl
fcom
adc
ds
dec
dec
or
sbb
jge
repnz
and
dec
add
arpl
mov
sbb
loopne
mov
push
das
flds
js
in
fmulp
adc
mov
add
cli
roll
inc
hlt
movsb
subl
adc
add
lock
mov
hlt
pop
repnz
dec
push
add
push
ret
sub
add
cli
rol
inc
cli
mov
mov
sahf
cmp
cmp
or
hlt
daa
out
sbb
mov
jb
popf
xchg
xchg
cmp
es
call
push
adc
mov
insb
dec
je
out
lds
mov
lea
jne
pop
xchg
scas
and
pop
loop
adc
out
mov
movsl
fs
loopne
mov
xchg
jnp
icebp
ds
mov
xor
rolb
out
and
lods
into
and
adc
sub
inc
sbb
andl
mov
or
mov
pushf
or
xchg
call
or
lahf
int3
inc
subl
mov
push
leave
pop
fsubrp
and
adc
push
mov
xor
xor
lcall
sbb
push
mov
loopne
jl
faddp
aaa
inc
gs
cmp
lcall
jle
jne
mov
sbb
jecxz
cli
std
pushf
mov
or
shll
add
rolb
xchg
push
bound
adc
dec
inc
dec
data16
mov
cwtl
test
inc
icebp
push
int
push
das
rorl
adc
xchg
xorb
daa
cmp
arpl
out
add
jnp
pop
lea
xchg
push
cltd
int
fisubl
ds
out
xchg
stos
cmp
sbb
insb
dec
inc
xor
popf
leave
jo
inc
outsb
mov
dec
shlb
mov
enter
out
fcom
xlat
divl
xchg
shlb
repz
sbb
dec
fildll
cwtl
pop
xor
adc
mov
push
dec
cmp
inc
mov
mov
pop
mov
daa
scas
int
daa
call
test
lods
pop
shlb
mov
in
push
pop
mov
movsb
rorl
mov
pop
sbb
push
loope
dec
out
mov
sbb
scas
push
mov
in
mov
cmp
adc
dec
xlat
pushl
stos
pop
mov
mov
cmpsb
push
add
xchg
hlt
sub
and
xchg
aad
cmp
outsl
mov
int3
test
cld
cld
les
aad
sub
in
jl
sbb
cmp
add
aad
xchg
stc
jl
les
in
or
inc
add
adc
addr16
mov
enter
dec
shll
push
cmp
call
and
or
push
daa
push
mov
xchg
movsb
popa
subl
xchg
sti
adc
jge
dec
pop
ljmp
popa
push
add
fistpll
pop
enter
sarb
mov
lods
jmp
data16
push
jle
or
cmp
mov
xchg
xor
push
orb
enter
xchg
cmp
mov
adc
add
cltd
sbbl
icebp
popa
mov
xor
fst
hlt
lods
dec
scas
dec
je
adc
dec
cwtl
xchg
inc
mov
ljmp
xchg
mov
pop
fimuls
jbe
dec
sub
popf
mov
add
iret
shl
in
pop
das
sub
in
insb
mov
and
fiaddl
fidivl
mov
addr16
jne
jl
ret
fsubs
sbb
loop
or
out
sub
das
insl
inc
jmp
loop
push
pop
movsl
out
mov
or
mov
xchg
push
adcb
jb
mov
inc
stos
loop
es
call
push
cwtl
pop
imul
xchg
pop
fmull
push
fwait
test
aas
pop
shll
xchg
jmp
sbb
adc
or
pop
out
dec
jle
icebp
loope
cmp
test
insb
xor
mov
scas
loop
divps
popf
cs
mov
stos
xor
jne
fstl
add
sbb
xor
sub
push
in
ret
xchg
pop
cmp
pushf
insl
outsb
outsb
fucomi
outsb
bound
mov
add
or
fcomi
insl
arpl
out
lahf
sbb
adc
dec
shlb
add
and
in
enter
aas
shll
sahf
push
test
ljmp
mov
test
sub
dec
cmp
adc
jmp
mov
or
mov
and
or
movsb
arpl
add
stos
xor
pop
xor
popa
inc
lds
sub
add
shl
cmp
xor
hlt
cli
add
cmp
stos
and
in
shrb
push
cmp
adcb
xor
test
test
arpl
cmc
xor
mov
cmp
and
push
mov
sub
ret
enter
sbb
mov
cmp
jp
stc
das
in
and
xchg
pop
pop
fldcw
pop
or
jl
popf
lret
fwait
jb
inc
rcll
adc
sbb
push
sahf
inc
sbb
scas
enter
call
rcrl
movsb
add
sti
adc
lret
or
dec
jg
divl
xchg
xorb
repnz
shlb
in
pop
mov
rorb
cmp
cmc
fbld
push
xchg
out
adc
cwtl
mov
inc
adc
outsb
cmp
test
add
lods
mov
iret
enter
test
dec
cmp
enter
movsb
loop
lods
mov
push
das
rcl
jl
arpl
sub
lds
push
test
xorl
adc
dec
das
mov
mov
cmc
scas
insl
or
lret
mov
dec
xor
add
push
jae
mov
pop
inc
fadds
mov
ret
or
cs
and
mov
adc
mov
dec
cld
ds
dec
xlat
imul
push
mov
shrb
inc
xchg
xor
jo
jp
icebp
add
fisubl
push
dec
mov
imull
mov
sbbb
add
shl
jg
push
in
insb
inc
repz
add
mov
mov
inc
loopne
fdivs
xadd
pop
or
stc
push
sub
loop
jne
iret
dec
add
movsb
xchg
outsl
xchg
insb
fcoml
sbb
inc
push
mulb
sub
inc
jns
imul
push
pop
lcall
adc
or
push
dec
movsl
data16
dec
jno
lods
repnz
popf
lea
push
pop
and
cmp
or
leave
repz
push
into
jae
jnp
insb
lods
or
outsl
or
adc
testb
push
notl
rorl
ret
mov
xchg
das
dec
push
or
xor
fcompl
movsb
rcll
mov
or
test
add
cmpsb
xor
mov
sarl
lret
and
or
xor
xor
push
dec
inc
out
dec
leave
mov
xorl
or
sub
imul
je
dec
adc
push
loopne
push
mov
pop
leave
iret
les
test
cmp
pushf
push
out
mov
dec
push
sbb
clc
jb
lds
sbb
cmpsb
test
mov
jecxz
pop
icebp
stos
hlt
sub
push
insb
mov
dec
je
adc
loopne
jb
dec
xor
push
sbb
jg
rolb
test
loope
and
inc
lret
inc
jmp
loope
cwtl
rcr
hlt
test
mov
jle
rclb
jno
int3
lcall
mov
or
fistl
test
or
cli
push
out
scas
movsb
testl
mov
int
push
sbb
and
shrb
sub
rcl
fildll
or
add
adc
push
pop
and
pop
std
cmp
mov
sbb
sub
cmp
dec
sbb
xchg
inc
ret
test
pop
jp
test
inc
movsl
jp
jo
popf
xchg
inc
shll
rclb
mov
pop
arpl
icebp
into
sarl
push
arpl
lock
mov
add
jno
jbe
scas
enter
mov
jbe
icebp
sub
fsubs
or
ror
mov
adc
and
movsb
and
mov
shlb
jg
jbe
adc
movsb
inc
lcall
pop
dec
lock
int3
das
push
clc
stos
test
mov
mov
mov
adc
js
add
ja,pn
xlat
cltd
mov
pop
sub
rcrl
push
ret
movaps
inc
rorl
xorl
mov
jp
aam
repz
addr16
insl
cmp
dec
push
sub
sahf
js
inc
lcall
mov
dec
mov
dec
mov
out
pop
int3
stos
stc
xor
pop
or
inc
inc
cmp
data16
inc
push
pop
jecxz
add
loop
daa
xor
mov
push
jno
and
cld
and
mov
and
mov
xchg
adc
mov
ret
mov
pop
ss
lahf
mov
cmp
loope
loopne
lods
sbb
daa
add
testb
sub
enter
sbb
test
jno
xor
mov
adc
mov
imul
jmp
repnz
xor
sub
ja
aam
fwait
shll
inc
inc
test
xor
inc
js
push
out
call
jno
xchg
ljmp
mov
mov
push
inc
sbb
sub
sti
fwait
mov
mov
pop
ja
add
arpl
scas
icebp
test
lods
and
xor
pop
clc
xchg
outsb
push
out
test
cmp
dec
test
loopne
adc
add
cmp
push
loop
test
ja
mov
lea
subl
lock
sub
arpl
mov
dec
xor
dec
dec
xchg
lock
rcrb
lret
jns
mov
loope
inc
pop
lcall
jae
arpl
and
inc
shrb
or
shlb
mov
or
jl
xor
or
push
insb
push
rolw
out
or
jl
sbb
into
xor
insb
cmp
test
jmp
mov
mov
pop
iret
cmovle
cmp
test
loopne
sub
scas
ror
fucomi
enter
repnz
daa
andb
aas
xchg
mov
inc
pop
sahf
push
dec
push
or
lahf
sub
scas
hlt
pop
insl
test
pop
jb
les
push
sti
pop
mov
jecxz
xchg
cmp
int
jecxz
jbe
inc
push
aam
rclb
popf
icebp
cmp
sbb
and
jmp
andb
cld
push
cmc
cmp
push
and
and
pop
pop
jno
jge
in
push
dec
dec
jl
dec
pop
fldenv
testl
test
push
adc
sub
fbld
stos
inc
mov
mov
mov
cli
pop
cwtl
xchg
mov
mov
or
sbb
cs
add
and
add
sbb
push
inc
shlb
fisubs
popf
cmp
arpl
movsb
pop
add
mov
out
or
mov
into
push
mov
or
test
int3
out
insb
xchg
in
inc
sub
adc
inc
sbb
dec
cmp
xchg
add
or
mov
fistpll
roll
mov
fmuls
sbb
addr16
push
pop
mov
nop
loopne
mov
dec
jo
dec
jno
push
pop
mov
ljmp
push
pusha
std
dec
and
add
xchg
scas
xchg
insl
fsubrs
ffreep
mov
pop
lods
daa
rorb
mov
xchg
and
push
push
or
xor
cmpsb
xor
rorl
out
lahf
int3
xor
es
jbe
mov
push
cmp
ret
ret
and
inc
sahf
das
jnp
inc
adc
stos
int3
or
adc
dec
add
idivl
xchg
hlt
and
mov
adc
lock
xlat
and
xor
icebp
test
jb
mov
js
lds
fcoml
lahf
or
movsb
stc
mov
sub
popf
xor
cmp
ror
push
pop
divl
loop
push
pop
and
nopl
add
push
aad
add
sub
daa
and
sbb
push
orb
xchg
jl
test
xlat
mov
jae
push
or
add
sti
movsb
popf
insb
aam
stos
imulb
sbb
xchg
test
push
jno
enter
add
xor
sbb
mov
dec
test
jge
mov
leave
add
pusha
jno
xor
pop
pop
ja
dec
dec
jmp
pusha
nop
es
mov
xor
sbb
sub
cli
or
sbb
mov
cmpsb
mov
push
inc
hlt
mov
sahf
cmp
jae
xor
pushl
filds
mov
mov
test
clc
add
or
aam
mov
aad
imul
mov
and
in
sbb
stos
cmp
or
loope
in
push
jnp
dec
sub
xor
or
ljmp
pop
dec
dec
mov
or
jge
cmc
jecxz
dec
lcall
nop
mov
xchg
mov
les
nop
aaa
adcl
jns
xchg
adc
sub
or
mov
aam
xchg
sbb
xchg
adc
add
push
into
clc
fcmovb
pop
sbb
adc
cmp
loope,pt
lds
hlt
mov
mov
pop
mov
jns
and
nop
xchg
cltd
mov
and
jo
sub
cmp
ja
in
cmp
loopne
icebp
dec
daa
dec
scas
xor
jno
pushf
jl
mov
pop
add
pop
mov
jne
imul
or
sbb
mov
mov
data16
fsubrp
cwtl
jl
pop
push
ret
jnp
xchg
sbb
sahf
sub
sbb
sti
fwait
sbb
test
mov
push
cmp
or
loop
xor
stos
jecxz
xor
aas
aad
lea
xchg
mov
shll
sbb
pushf
call
and
ret
pop
roll
fs
aad
stos
clc
push
lea
and
xchg
cmpsl
fstps
cmpsl
es
lea
arpl
js
enter
sbb
loope
lcall
push
leave
push
mov
rcr
lock
pop
jle
sbb
cmp
push
xchg
add
push
sysexit
mov
in
jno
pop
popa
nop
aad
imul
push
lock
rolb
mov
cmpsb
repz
je
pop
mov
in
pop
loop
jae
ret
stc
push
sub
outsl
inc
pop
and
ds
pop
push
jno
add
and
inc
in
sub
inc
in
mov
imul
cmpsb
push
and
orb
lret
aas
push
jl
pop
dec
dec
mov
push
fldcw
mov
pop
adc
add
dec
out
lds
add
xor
lahf
xchg
sahf
cmp
mov
lods
jge
sbb
lods
dec
sub
pop
test
inc
xchg
out
sub
bound
jo
mov
push
jge
pop
pop
sbb
or
scas
push
lods
rorl
add
mov
into
loope
lcall
pop
cmp
sub
cmc
lea
test
insl
stc
mov
shlb
inc
add
xchg
aam
cmpsl
sbb
aas
inc
xor
jl
arpl
or
clc
or
sbb
popa
cmp
icebp
xchg
icebp
add
bound
adc
mov
xchg
push
mov
outsl
test
fnstcw
jno
sub
adc
out
and
into
scas
fsubs
or
adc
xor
jb
int3
popf
dec
inc
adc
iret
or
dec
iret
sbb
add
push
paddsw
bound
lahf
daa
dec
or
jmp
cwtl
fcomps
rcr
and
cltd
dec
cltd
insl
mov
iret
push
sahf
lock
push
sahf
xchg
int3
enter
popf
and
jecxz
lea
test
div
push
call
inc
shll
cli
or
insb
iret
outsb
loope
gs
jp
cli
gs
xchg
sub
rolb
mov
jo
out
push
add
pop
ds
pop
push
lcall
pop
stos
or
and
pusha
jo
xchg
inc
cmpsb
and
push
push
mov
fadds
sbb
mov
nop
add
push
add
mov
mov
into
fimull
nop
or
sub
push
aas
lcall
xchg
jae
fldcw
ret
enter
xor
inc
mov
push
loope
push
rcll
sahf
xor
and
insb
xor
jnp
mov
mov
pusha
sbb
rolb
and
push
or
sahf
push
out
lret
mov
ret
xchg
push
xor
cmp
and
mov
ret
dec
push
xor
in
test
mov
inc
insl
rolb
je
push
and
dec
out
loop
mov
les
test
sub
pop
jne
push
dec
imul
mov
sbb
lods
insb
push
ss
ret
icebp
dec
sub
xor
add
pop
ljmp
shr
addr16
fs
pop
dec
sahf
xchg
inc
adc
push
mov
jmp
aad
mov
insb
adc
push
mov
ljmp
inc
int
mov
ret
jecxz
std
sub
adc
add
push
sub
xchg
out
or
mov
fs
dec
icebp
push
mov
xchg
pop
adc
push
and
inc
adc
and
dec
xor
adc
mov
pop
mov
hlt
cmp
inc
or
hlt
sbb
imul
mov
and
stos
loopne
cmp
xchg
mov
push
loope
mov
shlb
pop
mov
lock
pop
jecxz
sbb
sbb
xchg
lock
cmp
mov
push
aaa
mov
jp
mov
ja
mov
das
mov
cs
xchg
dec
outsl
test
jbe
cmc
mov
pop
icebp
jecxz
push
fwait
sbb
lcall
lahf
pop
stos
pop
dec
mov
lret
mov
adc
pop
or
lret
push
push
mov
add
fs
xchg
popa
adc
sar
xchg
sub
in
dec
xor
lods
sbb
scas
cmp
fmuls
or
push
pop
shr
jmp
adc
xlat
out
jo
mov
push
out
lea
xor
add
loop
and
outsb
testb
iret
inc
insl
add
xor
pop
inc
inc
jg
mov
pushf
xchg
cmp
dec
dec
mov
push
stos
push
mov
jecxz
mov
cli
adcl
stos
pop
adc
dec
addr16
addr16
sti
lret
sbb
or
jo
jbe
test
xor
xor
jb
xchg
cmp
loopne
and
or
sub
rol
hlt
inc
add
dec
push
inc
fstpt
mov
cmpl
jge
mov
mov
scas
and
pushf
test
movsb
xchg
xchg
xor
sbb
add
pop
mov
push
mov
scas
fcomps
rorb
repnz
rcrl
ljmp
movsl
pop
push
and
jb
repz
or
addb
mov
or
cmp
je
jne
pop
or
add
ss
stos
stos
shl
inc
inc
out
or
je
hlt
ss
sub
pop
or
adc
or
dec
icebp
test
pop
mov
cmp
test
loope
push
fdivl
shrl
sbb
dec
aad
bound
subl
daa
pop
xchg
mov
pusha
mov
roll
les
testl
inc
dec
repz
out
mov
jae
adc
xor
pop
std
out
jl
scas
pusha
push
jl
sbb
xlat
cmpsl
xchg
out
lock
adc
dec
loop
or
and
dec
shrb
xchg
pop
fadds
mov
push
xchg
adc
out
sub
test
js
inc
xchg
sbb
fists
nop
subb
xlat
push
push
aam
loope
ret
aam
and
test
les
stos
inc
insl
adc
addb
jge
popf
sub
insl
shl
pop
lcall
push
pop
add
mov
lock
pop
xchg
xor
pop
push
fsts
sbb
or
ss
cmpsb
add
loopne
cltd
pop
dec
pop
flds
mov
cld
cmc
cmp
add
lods
repz
or
cmp
lods
fldl
adc
adc
arpl
cmpsl
bound
ficoms
out
xor
ss
xor
mov
sub
mov
loopne
or
and
inc
outsb
sarl
mov
daa
or
flds
push
shlb
add
and
and
inc
shll
mov
dec
stc
ljmp
xor
push
cmp
pop
fists
mov
out
xchg
loopne
arpl
jno
pop
mov
inc
cmp
mov
dec
jns
sbb
clc
jp
pop
or
inc
ret
inc
mov
jp
dec
hlt
xor
lahf
lret
loope
dec
and
adc
mov
pop
add
or
je
and
jecxz
jb
inc
cmp
out
mov
or
test
daa
dec
mov
xchg
test
mov
mov
and
in
je
mov
cmpsl
dec
out
fimuls
addr16
jecxz
or
scas
das
push
mov
shrl
cmpsb
sub
or
inc
push
mov
push
ret
outsl
add
pop
pop
or
mov
movsb
js
push
outsl
clc
int
xchg
push
adc
add
int
cmp
jecxz
pop
push
shll
js
sbb
pop
cmc
repnz
mov
orb
adc
or
ret
adc
and
lds
sub
mov
sbb
daa
loop
ret
push
fisttpll
fwait
mov
push
sub
inc
cmp
icebp
add
stos
push
js
ljmp
or
nop
dec
jb
mov
xor
or
mov
adc
repz
xor
hlt
cmp
and
out
push
hlt
xor
jecxz
jnp
push
ljmp
dec
pop
addr16
pusha
sbb
lods
lcall
loop
and
mov
dec
mov
icebp
or
call
je
inc
add
in
jnp
insb
sub
rcl
xchg
pop
arpl
mov
clc
movsb
ja,pt
xchg
xlat
cmp
in
adc
xchg
pop
jecxz
fdivl
andb
mov
movsb
ljmp
inc
dec
insl
push
push
lods
xor
xor
adc
mov
es
popf
repz
stc
push
mov
or
adc
fcoml
out
inc
dec
es
sbb
popa
or
xor
mov
push
or
sub
popf
xor
lock
add
push
and
cmp
fs
mov
cmp
cmpsl
fdivr
pop
jo
pop
inc
repnz
jecxz
or
inc
test
xchg
push
pop
jg
jbe
pushf
orl
aad
sbb
mov
int3
push
pop
jae
lds
nopl
sub
and
xchg
adc
push
adc
cmp
mov
out
xor
lahf
rcll
sarl
ljmp
inc
adc
lods
inc
mov
int
setl
out
and
test
ret
jne
and
nop
sbb
lret
test
mov
bound
mov
lret
add
lret
in
inc
fnstenv
jp
scas
incl
lea
mov
aam
or
ret
adc
mov
cmpsb
outsl
and
inc
clc
mov
popf
adc
test
mov
mov
sbb
hlt
lea
ss
and
fwait
mov
lock
loope
sbb
sti
es
sbb
pushf
mov
pop
inc
sahf
cwtl
xor
jnp
inc
nop
lea
lea
out
movsl
push
stc
sbb
and
arpl
jg
xchg
dec
das
pusha
nop
js
sbb
cs
testb
into
mov
cmp
xchg
push
lds
arpl
adc
cwtl
arpl
sahf
sbb
cltd
add
cmp
dec
mov
xchg
scas
jle
in
and
inc
addr16
add
jbe
fnsave
and
push
movsl
in
lods
fcmovb
and
xlat
dec
loopne
icebp
sarl
in
call
adc
sbb
lods
cmp
jne
push
lods
hlt
lock
lock
fsubrl
mov
lock
lahf
jg
push
sbb
xchg
mov
negb
popf
shl
jge
fadds
rorb
int
ret
shrb
add
test
jne
pop
inc
add
or
ja
adc
int3
jns
cwtl
jo
xchg
ds
in
ficompl
ds
xchg
dec
xlat
in
hlt
mov
pop
out
ljmp
pop
mov
adc
jo
outsb
mov
movsb
xor
lret
mov
sbb
mov
cmp
jne
or
dec
jecxz
mov
mov
arpl
movsb
inc
ror
inc
rol
into
filds
jl
ss
pop
cli
and
lods
fdivs
jno
rorl
lods
jle
mov
popa
mov
dec
sub
sbb
and
bound
mov
adc
jns
icebp
cmc
test
mov
idivl
xchg
divps
cltd
dec
icebp
out
cmp
fisubl
xchg
test
xor
nop
outsb
mov
je
es
cs
adc
mov
popf
push
xchg
xchg
jnp
mov
inc
and
fisubrl
fs
cwtl
iret
sub
jns
mov
cmp
cmc
jne
in
xchg
leave
and
lods
push
jne
push
sbbl
or
sbb
xor
jl
lea
test
loopne
xor
xchg
ds
dec
addr16
cs
or
mov
shlb
jp
xchg
mov
pop
push
je
test
add
inc
add
sbb
jge
lods
cmp
inc
lcall
pushf
sbb
in
sahf
jmp
sub
stos
adc
dec
cli
cli
jno
adc
sbb
and
xchg
insb
les
aam
enter
lds
cmc
sbb
fcmovbe
push
adc
push
lds
jge
xor
mov
cli
adc
cmp
or
loope
adc
inc
xor
xor
push
loop
mov
cmp
imul
mov
cmp
push
pop
rclb
or
icebp
mov
divl
mov
inc
or
lret
pop
aaa
pushf
jno
popf
mov
xchg
or
add
inc
daa
aad
ret
in
inc
cmp
test
rorb
insl
pop
jo
mov
sub
pop
jp
jnp
aam
cmp
mov
sub
adc
or
push
cmc
mov
or
arpl
xchg
mov
jmp
insl
mov
inc
daa
mov
push
adc
shll
xchg
or
lea
add
data16
sbb
jle
gs
or
sbb
xor
pop
mov
icebp
loope
add
mov
xor
or
push
fucom
dec
mov
push
adc
cmp
loopne
fnstcw
and
adc
sbb
loope
sbb
shrl
lcall
cmp
sbb
jbe
scas
repz
fs
test
bswap
xor
and
push
in
push
or
mov
out
js
xchg
inc
xor
ret
leave
push
xchg
imul
call
jno
sti
add
and
pop
xorb
adc
add
in
popa
nop
push
jo
pop
addl
fidivrl
scas
cmp
in
jge
mov
mov
and
ficomps
mov
lds
lret
mov
leave
sub
jb
xchg
xor
xor
inc
pop
sbb
mov
test
xor
adc
jno
pop
mov
or
sbb
push
cli
sub
aam
movsb
hlt
in
mov
loope
leave
pushl
lahf
lea
js
jb
mov
data16
xor
pop
lods
sbb
gs
imul
push
rorb
dec
push
out
pop
and
std
dec
test
adc
lds
adc
dec
mov
ljmp
or
adc
adc
iret
loopne
out
sub
outsb
enter
imulb
mov
sbb
arpl
movl
jmp
jbe
cmp
inc
jo
add
es
push
es
jecxz
cmp
dec
adc
enter
fidivl
dec
and
and
bound
cmp
dec
mov
jne
fisttps
push
fwait
pop
daa
pop
jp
push
pop
mov
lcall
inc
cmp
and
mov
cltd
and
mov
mov
mov
mov
cs
lock
mov
xor
adc
adc
xor
adcb
adc
or
idivb
mov
or
movsl
test
ret
sbb
mov
fs
xor
sbb
pop
or
inc
mov
mov
rclb
int3
add
mov
in
lahf
stc
lods
push
mov
ret
jns
and
mov
inc
lds
pop
sbb
ficoml
ljmp
or
repnz
dec
sahf
stos
lcall
lock
push
and
mov
dec
lock
sbb
mov
pop
inc
or
mov
pusha
orb
xchg
lret
sbb
outsb
xor
jne
data16
hlt
cmp
subl
ja
sbb
lahf
leave
outsl
cmpsb
mov
jp
arpl
aad
cs
dec
rclb
mov
xchg
dec
cmp
add
aaa
andl
ljmp
imul
sbb
adc
jne
sahf
xchg
add
dec
xor
addr16
cmp
shlb
and
ljmp
cmp
lahf
insl
mov
dec
clc
je
and
cltd
nop
push
lahf
add
loope
mov
and
idivl
push
or
iret
clc
dec
mov
lea
add
xor
jg
and
inc
cmp
xchg
jl
fbstp
loopne
pop
mov
repz
test
pusha
jl
xor
fildl
sub
outsb
lods
fisttpl
inc
pop
dec
add
ljmp
pushf
and
rolb
in
mov
negb
cmpsl
enter
pop
or
ja
inc
lret
loop
mov
xchg
jb
cli
loopne
mov
aas
mov
xchg
pop
push
inc
out
xor
adc
and
aam
lret
jl
pop
fdivrs
and
xor
aad
fadd
je
aaa
jmp
adc
fwait
sbb
and
out
jae
and
pop
mov
mov
sub
dec
inc
or
in
jo
shlb
pusha
mov
sub
mov
and
hlt
loope
dec
jb
and
sahf
popa
rorb
bound
adc
movsb
push
adc
dec
arpl
lret
loopne
xchg
stc
sbb
pusha
push
sbbl
rclb
insb
inc
fldl
jp
imul
aaa
cmp
mov
fxch
cmp
jge
adc
sahf
fnsave
adc
popl
pop
mov
mov
sarl
test
cmp
dec
dec
mov
add
shlb
orl
shll
gs
repz
fidivs
into
insb
in
add
je
mov
leave
or
lock
mov
es
lret
push
rcrl
sbb
and
loopne
add
shr
xchg
xchg
shrl
lret
les
push
das
mov
dec
into
or
and
lcall
in
add
mov
jmp
outsb
test
int3
adc
push
adc
pop
inc
paddw
pop
je
in
add
pop
adc
nop
jmp
xchg
into
in
jnp
mov
mov
sub
rolb
xor
clc
inc
xchg
dec
testl
xor
and
pop
int
add
push
iret
outsl
addr16
insb
adc
adcl
test
into
mov
ja
sbb
pushf
inc
insb
jne
inc
mov
ds
das
fdivr
sub
jbe
dec
pop
jmp
sbb
dec
lock
add
dec
push
xor
cmp
mov
mov
inc
push
sti
iret
jl
jo
clc
insb
push
sahf
loop
addr16
loopne
cmp
and
cmp
out
in
add
or
loope
jp
dec
pop
adc
jo
pop
fcomip
inc
mov
cmp
clc
daa
fwait
jae
dec
or
jno
inc
ss
mov
xchg
add
lods
aam
mov
fadd
xor
data16
movsb
out
aad
push
out
scas
in
insb
int3
inc
ds
outsl
adc
adc
sbbb
sahf
adc
cmp
sbb
enter
test
jb
adcl
inc
mov
mov
in
mov
fistpll
push
icebp
adc
test
shlb
je
outsl
mov
cmp
push
pop
popf
or
js
cltd
and
mov
xor
sub
jle
daa
xor
push
add
loope
sbb
inc
ds
fs
xor
mov
loop
cmp
xchg
data16
test
mov
pop
mov
roll
cmp
push
and
jnp
loopne
dec
scas
es
stos
inc
outsb
mov
add
clc
push
daa
setbe
xor
inc
sahf
mov
or
sbb
or
int3
shll
arpl
inc
sbb
inc
push
and
pop
sbb
mov
cli
xor
icebp
stos
imul
push
xor
cmp
gs
les
mov
orl
add
add
inc
jb
aas
jp
and
adc
test
inc
addb
sbb
ds
push
pop
mov
adc
and
sar
adc
shll
or
sbb
inc
addl
mov
dec
insb
test
in
insb
pop
jle
xor
pushf
inc
mov
mov
cmp
pushf
ds
outsb
xlat
rolb
jnp
shlb
lods
sbb
mov
fbld
pop
loopne
sub
aas
inc
add
dec
pop
out
add
ds
jmp
inc
in
ja
int3
lods
mov
or
push
stos
push
dec
cwtl
xchg
jp
adc
bound
pusha
sbb
sbb
imul
out
lock
lahf
sbb
in
cmc
stos
push
faddl
inc
mov
ljmp
je
std
cmp
inc
fsubrl
clc
mov
aad
loopne
sbb
xchg
pop
cmpl
xchg
in
nop
sub
pop
mov
cli
ret
sub
and
mov
ljmp
sbb
jle
negb
add
dec
fildll
hlt
popf
sub
add
sub
mov
repz
sub
mov
or
pop
jo
icebp
addr16
int
das
push
aas
arpl
mov
push
repz
jmp
pop
push
cmp
sbb
out
adc
mov
inc
jecxz
and
and
or
lret
add
outsl
cmp
test
stos
or
xor
movl
or
pop
mov
mov
lret
orb
stos
and
cmp
pop
or
mov
sahf
fcompl
loope
lods
sub
xchg
cmpsb
jl
push
add
mov
pop
mov
scas
popl
sbbl
and
cmp
out
add
pop
jl
movb
cwtl
popf
xlat
loopne
add
jmp
jmp
adc
repz
jl
and
cmp
stc
iret
mov
js
and
loop
inc
les
sbb
jo
add
testl
cwtl
adc
mov
dec
in
mov
xor
daa
push
aam
push
shrb
inc
dec
add
movsb
or
in
mov
xchg
ljmp
mov
sub
or
and
sbb
inc
xor
adc
adc
js
mov
jnp
insb
dec
or
xchg
push
call
dec
or
lds
les
sub
jge
movsl
cltd
add
bound
and
mov
push
push
or
insl
fcomp
in
pop
fnstsw
cmp
aaa
sbb
cmp
cmp
sbb
aad
inc
stos
sarb
adc
out
and
push
popa
sbb
test
mov
ss
insb
jae
movsl
mov
pop
fadds
flds
add
jo
movsb
or
fistps
inc
inc
xchg
cmpsl
xchg
mov
mov
hlt
dec
mov
hlt
mov
or
sbb
lea
and
inc
add
iret
js
cmp
es
push
or
shrb
push
pusha
lock
jbe
xchg
lretw
andb
insb
bound
dec
dec
push
out
inc
pusha
and
push
into
mov
and
fcoml
sub
les
stc
push
lds
mov
sarl
jmp
jmp
xchg
lds
out
add
mov
jbe
cmp
arpl
ret
sub
jnp
cld
jb
dec
shl
adc
icebp
test
stos
push
xchg
fucomp
sbb
add
lock
xchg
inc
cmp
loop
jle
xor
pop
push
mov
out
jae
lret
or
pop
sti
shrb
xchg
ficoml
daa
pop
adc
cmp
or
pop
push
inc
cwtl
aaa
or
xchg
adc
outsl
test
sbbb
pop
leave
in
sub
out
xchg
jne
push
jns
cltd
jb
daa
xor
in
mov
andl
test
push
aad
cmpl
xlat
out
loope
sbb
dec
outsl
adcb
call
mov
pushf
push
lahf
popl
add
jb
jbe
inc
push
xor
sahf
fs
push
lds
addr16
xor
les
arpl
inc
lock
stc
jmp
shll
jb
add
imul
arpl
pop
add
lds
arpl
in
jmp
or
sub
adc
sbb
in
xor
cmc
jae
sbb
or
loop
cs
mov
lahf
fildl
jne
ja
jno
mov
jmp
into
cmp
mov
push
add
cmp
mov
je
add
out
scas
push
jb
jmp
adc
xor
cwtl
ja
lcall
mov
sub
cwtl
xchg
and
xor
cmp
pop
push
jo
cmp
or
stos
aaa
pop
out
iret
sbb
or
add
cld
and
hlt
push
stc
adc
jns
sbb
sbb
daa
loopne
mov
add
add
daa
mov
fdivp
push
subl
dec
add
xor
iret
lods
popfw
rcrl
clc
inc
lcall
xchg
cmp
mov
popf
inc
or
inc
jmp
aas
fstp
aam
or
and
push
inc
xor
aaa
je
adc
and
mov
jnp
mov
pop
shll
pop
push
xlat
loope
pop
mov
dec
and
lods
nop
jmp
push
dec
and
popa
inc
cmp
adc
stos
les
mulb
add
sbb
pop
cmp
test
arpl
int
and
icebp
push
jecxz
ds
push
adc
inc
push
mov
sbb
shll
sbb
mov
push
inc
sbb
mov
xor
pop
int3
insl
rcll
sub
and
inc
test
push
jns
pop
ror
repz
xor
mov
and
jmp
sub
scas
repnz
add
mov
xchg
xchg
sub
je
std
test
mov
jnp
jecxz
mov
xchg
in
cld
pop
and
xchg
xor
mov
repnz
pop
push
cmp
stc
pop
clc
or
inc
dec
divl
rcl
pop
aaa
inc
arpl
loopne
push
in
je
adc
mov
in
in
ljmp
or
push
add
movsl
mov
aam
or
loopne
cmpsl
lods
dec
mov
out
sub
push
iret
push
add
cmpsl
dec
rorb
fildl
rclb
cmpsl
mov
or
sub
dec
je
adc
mov
dec
aam
loop
lods
mov
insb
fdivr
lods
mov
das
mov
scas
insl
sub
shrl
add
je
es
and
add
fstpl
or
out
pop
imul
xor
pop
push
mov
std
es
jno
and
mov
cld
cmp
push
les
and
insb
jmp
movsl
sbb
lcall
pushf
fidivrs
xchg
ja
jbe
xchg
sbb
enter
paddusb
adc
mov
sbb
or
and
dec
jl
cmpl
cmpsb
cmpsb
push
loope
ret
in
insb
rorb
loope
movsl
inc
jnp
loope
and
push
stos
cmpsl
ljmp
inc
add
adc
shrl
subb
mov
cmp
pop
fcmovnb
rcrl
lea
es
in
xlat
lret
daa
punpckhwd
rcll
movsb
inc
in
jp
test
sub
popf
repz
loope
jae
add
stc
dec
pop
enter
invd
mov
stc
clc
cwtl
jne
mov
jge
pop
outsl
in
pop
mov
xchg
divb
and
hlt
dec
jl
insl
or
gs
lret
cli
js
stos
dec
xchg
or
mov
stos
xchg
shlb
jmp
shlb
jno
shll
and
test
mov
inc
ret
hlt
add
xor
hlt
ja
ljmp
negb
andb
outsl
test
subb
mov
cld
and
call
aaa
rcrl
mov
lods
jnp
mov
xor
xchg
leave
push
add
sahf
dec
in
pop
jb
push
fidivs
mov
sbb
pop
bound
push
mov
pop
pop
push
xorl
les
or
test
dec
mov
nop
test
pop
dec
fucompp
adc
ss
cltd
push
call
pushf
jp
jb
das
insb
popa
ss
add
lods
push
cmp
cmp
xchg
movsl
loop
and
imul
push
add
mov
loope
or
jge
mov
push
jmp
pushf
and
xor
jnp
gs
and
lds
dec
insb
cmpsb
mov
cmpsb
jl
adc
jae
jo
jle
hlt
rcrb
clc
outsb
stos
orb
or
add
cmp
inc
ja
mov
ljmp
xchg
or
cmc
jge
test
arpl
jl
ss
add
cmc
dec
daa
inc
inc
dec
rolb
shlb
jb
sahf
in
cmp
loope
pop
mov
inc
nop
jb
push
inc
sbb
xchg
inc
test
ret
push
adc
pop
inc
cmp
sbb
ljmp
pop
aas
leave
wrmsr
sbb
adc
loope
fincstp
mov
xchg
xor
sub
add
push
cld
jo
clc
mov
mov
dec
jl
lahf
cmp
cmpsb
rorb
packssdw
mov
repz
or
xor
mov
test
inc
push
inc
push
scas
ret
stos
sbb
mov
xor
push
mov
mov
dec
mov
xlat
sub
testb
sub
xorb
cld
hlt
rcll
and
fsubrs
jmp
mov
mov
xchg
test
cmp
insb
fisttpl
repnz
outsb
mov
lea
int
add
popa
cmp
pop
adc
dec
xchg
push
mov
nopl
sarb
push
icebp
push
fsubrl
dec
adc
xchg
outsl
push
inc
pop
je
daa
and
stos
out
jne
or
mov
and
cwtl
std
dec
aam
and
icebp
mov
cwtl
sbb
mov
addb
enter
mov
lods
loopne
fstp
lock
xchg
dec
pop
dec
sub
daa
movb
int
mov
mov
addb
jno
mov
sub
cltd
add
inc
ja
pop
inc
jmp
add
bnd
inc
clc
xor
bound
inc
cmp
and
icebp
adc
arpl
js
lds
push
addr16
xlat
push
les
subl
pop
cmp
scas
and
xchg
jl
stos
cmp
roll
orb
sbb
xor
and
pop
mov
adc
fsubl
inc
lret
cmp
jl
data16
mov
inc
and
stos
clc
clc
adc
xchg
nop
xor
and
mov
arpl
movsb
dec
pusha
rcr
adc
icebp
leave
sub
mov
sub
popf
sahf
adc
loop
inc
mov
xor
sbb
sbb
mov
in
adc
fcompl
dec
jge
jo
shlb
std
fmull
mov
sar
movsb
add
mov
out
sahf
dec
out
dec
stc
mov
inc
xor
or
sub
add
add
xor
push
sbb
mov
mov
or
xchg
call
push
sahf
out
xchg
fdivrs
pop
mov
add
push
inc
and
xchg
aaa
adc
rcrl
int3
sbb
or
sub
jecxz
sbb
and
cmp
sbb
adc
xchg
hlt
repnz
test
loopne
push
mov
and
hlt
sbb
cmp
clc
xor
adc
adc
pop
ljmp
xor
add
sub
inc
dec
pusha
outsb
ror
push
mov
adc
or
jns
sub
aaa
jecxz
adc
sbbb
add
popa
push
cld
push
cwtl
inc
test
mov
cmp
testl
xchg
adc
dec
jp
pop
cmp
adc
xor
jns
cmc
push
xor
das
push
neg
sbb
pusha
test
push
imul
pop
mov
enter
ret
dec
xchg
mov
inc
cmc
lods
scas
push
jae
jne
and
testl
out
cmp
ds
push
cwtl
fimull
loope
leave
mov
loopne
mov
daa
cvttps2pi
shrl
mov
fildl
test
ret
fwait
xchg
lea
jge
movb
mov
adc
fstpl
out
adc
jp
sbb
add
add
icebp
aad
pop
xchg
cmp
std
pop
mov
dec
sub
fmull
stos
jnp
sbb
mov
cld
filds
loopne
xlat
push
push
ds
ljmp
push
lds
sub
rol
lods
jecxz
test
add
mov
inc
mov
or
lock
push
out
mov
je
jp
sub
dec
mov
cmp
jp
and
imul
bsf
adc
adc
jl
pushf
mov
lods
xorl
lret
mov
and
jne
mov
cmp
xchg
cmp
xor
call
loopne
dec
dec
std
cmp
push
rol
sbb
xor
ds
popf
shrb
in
js
popa
cmp
and
dec
inc
lods
sub
sub
in
and
loopne
dec
inc
mov
xchg
popa
dec
nop
out
dec
fdivl
scas
lcall
jp
add
dec
mov
je
int3
jbe
xchg
dec
lahf
cmp
in
inc
test
sub
xchg
or
aad
pop
test
mov
mov
or
xor
push
xchg
mov
mov
mov
sub
movl
ds
inc
fdivs
je
les
mov
loope
out
cmc
or
out
add
cmp
iret
xchg
inc
stos
mov
inc
pop
mov
dec
adc
and
or
test
mov
lods
cli
shrb
jge
push
inc
add
dec
cmp
cmp
push
ror
sbb
dec
add
lds
mov
jne
cmc
mov
or
push
add
ret
in
arpl
shr
shlb
dec
xor
dec
jle
mov
aad
arpl
je
mov
pop
out
mov
push
arpl
pop
insl
sbb
inc
loopne
xchg
dec
mov
ds
add
les
sbb
and
gs
xlat
cmp
fiadds
movsl
xchg
inc
js
or
jmp
sbb
popf
aad
fiadds
je
jb
mov
push
sahf
nop
pop
repnz
mov
arpl
jge
pop
cmp
sub
ja
sahf
outsl
jo
stos
sti
xchg
das
outsl
lock
subl
cmp
pop
lret
pusha
and
inc
fwait
bts
fisubrs
xchg
pop
xor
and
inc
add
push
arpl
leave
cmpsb
push
cmp
out
js
imulb
lods
icebp
stos
cmp
dec
mov
jne
stc
lds
xor
adc
cli
push
add
cmp
sbb
sbb
ret
and
cmp
ret
scas
xchg
pop
aad
sbb
pushl
pop
cmp
fs
ljmp
and
dec
faddl
mov
arpl
jp
inc
dec
test
jne
jl
mov
xchg
push
pop
lds
test
mov
pop
popf
pusha
sub
repz
in
stos
pop
adc
sub
inc
ds
lcall
adc
and
jl
or
xor
and
pop
xor
daa
rorb
or
sar
cmp
adc
andb
sbb
roll
outsb
inc
outsb
ja
and
cmpsl
loopne
jle
mov
das
pop
adc
add
cmp
loope
lea
scas
iret
test
ret
jl
outsb
dec
mov
sbb
addb
sbb
jmp
mov
hlt
hlt
dec
sahf
lock
lcall
and
ficompl
mov
sub
pop
daa
pop
mov
test
jae
pop
lods
addb
sub
adc
cmp
cmp
je
daa
or
jns
mov
cmp
and
stos
add
xchg
sub
jns
mov
or
jle
popa
mov
mov
sbb
mov
inc
add
sbb
dec
call
test
jno
pop
iret
call
movsb
push
dec
add
xor
fsubl
jl
insb
ficomps
cltd
adc
mov
out
or
xor
daa
sbb
fmull
push
mov
adc
out
adc
inc
xchg
repz
sub
dec
stos
cmp
mov
fs
addr16
out
mov
int
or
mov
and
popl
ficompl
mov
insl
jmp
lret
sbb
clc
push
shll
icebp
scas
mov
imul
ret
js
daa
arpl
cmpsl
or
and
testl
test
push
shrb
ret
mov
jp
inc
pop
and
sbb
push
adc
ret
add
and
push
xchg
lret
js
pushf
add
inc
xchg
sbb
mov
cmp
movsb
sub
push
movsb
loopne
jno
push
cld
es
dec
or
xchg
dec
add
adc
jmp
cmpsb
popa
in
data16
mov
add
and
gs
pop
lahf
aas
fwait
add
aaa
xor
inc
notb
jp
jp
repz
jge
pusha
xor
fcmovnbe
mov
sub
lret
sbb
mov
sub
pop
or
mov
add
movsb
je
jmp
out
je
inc
arpl
jo
dec
test
fistpll
jp
xchg
dec
cmpb
pop
adc
pusha
inc
add
xchg
int
mov
adc
cmp
mov
es
mov
mov
out
clc
orb
in
addr16
cltd
insb
add
sarl
rcrl
ror
rclb
push
sahf
mov
add
cmc
xor
sub
xor
mov
into
scas
sbb
push
pop
iret
cwtl
test
data16
and
xchg
and
push
mov
stc
loopne
rorl
or
mov
rclb
lock
adc
stos
fwait
add
repnz
jmp
das
mov
iret
fisubl
arpl
cmp
pop
sub
and
adc
mov
mov
sub
sbb
arpl
add
pusha
dec
mov
in
inc
pop
inc
movsl
aam
mov
cmc
adc
inc
xlat
enter
dec
lea
ficomps
fmul
sub
adc
and
rclb
xor
and
ja,pt
daa
shld
inc
add
adc
fisubrs
pop
jne
xor
xor
xchg
mov
adc
nop
inc
xlat
jge
or
pop
push
mov
add
jae
mov
xor
push
push
je
loopne
pop
out
push
fbstp
gs
sti
inc
divb
sbb
in
std
sbb
mov
xor
inc
fmul
aaa
push
pop
push
inc
sub
pop
jnp
mov
andl
sbb
sub
xchg
pand
push
dec
push
pop
dec
jnp
loop
daa
add
inc
pop
sub
push
xor
ret
mov
rcll
lret
fdivrs
sbb
and
push
stos
cmp
sti
or
sbb
repnz
inc
jge
iret
sub
dec
es
rcr
out
inc
je
sub
insb
push
dec
lock
cmp
add
mov
mov
addl
jne
push
jecxz
jmp
push
loopne
adc
jb
int3
sbb
mov
imul
popa
and
pop
dec
pop
adc
xchg
ljmp
jns
add
js
or
test
loope
xor
cmp
icebp
pop
dec
pop
ret
pusha
pusha
add
arpl
nop
xchg
es
xbegin
push
xor
inc
mov
mov
jecxz
cltd
jge
sbb
daa
repz
and
lahf
push
adcb
mov
adc
xor
cli
mov
inc
pop
add
test
roll
jns
push
or
loopne
repnz
push
push
popf
cs
rcr
insl
xchg
or
jo
pop
or
sbb
scas
mov
cld
inc
pop
es
in
inc
fisubrs
in
test
push
popf
jbe
clc
pop
mov
dec
loopne
mov
mov
xchg
push
or
aad
std
pop
insb
inc
inc
or
pushf
out
cmp
jmp
jg
pushf
icebp
es
ds
mov
mov
loope
xchg
mull
pop
mov
jp
testb
adc
btc
sti
cmp
ret
jno
jo
dec
ljmp
sarb
dec
stos
insb
into
jmp
jge
jne
add
ret
sbb
pop
pop
mov
nop
stos
cwtl
int3
dec
shlb
jmp
clc
mov
popw
mov
adc
xchg
xor
xlat
and
xor
xorb
stos
and
int3
inc
sbb
jae
pop
push
arpl
iret
inc
sub
pop
aas
mov
test
lods
pop
lret
test
xorl
arpl
and
push
fsub
ret
pop
cli
incb
cmpsb
out
addb
outsl
cmpsl
outsl
sbb
movsl
add
repnz
push
jns
inc
add
mov
mov
jle
in
xchg
cmp
repnz
sub
ds
push
xor
sub
nop
or
je
or
and
sub
inc
mov
sbb
mov
data16
or
into
subb
inc
inc
movsl
sti
xchg
inc
bswap
cmp
xor
adc
inc
jb
rolb
aas
or
mov
cmp
adc
mov
test
push
inc
pushf
adc
mov
out
mov
pop
push
imulb
mov
jle
cmp
adcl
push
jg
roll
jne
adc
or
sbb
xchg
psadbw
mov
rcr
mov
and
dec
xchg
push
mov
shll
aas
mov
lods
cmpsl
mov
lock
xchg
mov
insl
lahf
xrelease
ret
sbb
sahf
inc
sahf
or
pop
cmp
shl
mov
hlt
cmp
int
mov
pop
je
sbb
mov
push
mov
xchg
and
inc
pushf
and
or
insl
mov
mov
shrl
lods
lds
mov
xchg
shlb
add
or
test
rolb
pop
pop
les
push
orl
add
mov
inc
popa
xchg
xor
nop
test
mov
dec
inc
push
leave
adc
adc
jp
jnp
fwait
pop
arpl
sub
ss
jae
insb
xor
jp
testl
dec
addps
adc
sbb
aam
clc
jmp
or
xchg
inc
lcall
and
adc
mov
cmp
jge
sbb
jl
or
mov
pop
xchg
cmpsl
ss
jge
imul
jae
cmpsb
popl
add
mov
push
push
rcll
aas
adc
cltd
adcb
addr16
or
inc
sti
repz
subl
call
adc
jae
sarl
mov
test
jae
or
data16
inc
addr16
mov
daa
rolb
repz
sbb
mov
rcrb
mov
cli
loop
shll
popa
xor
mov
pushf
adc
shrl
daa
dec
push
cli
inc
daa
dec
xor
xchg
adc
jmp
inc
test
stos
in
inc
call
cmp
pop
pop
lahf
sbb
and
xchg
call
sub
inc
adc
rcrl
insl
fndisi(8087
jle
cmp
sub
push
xchg
add
sarb
push
sbb
mulb
dec
push
push
lcall
pop
std
mov
adc
jnp
pop
outsl
inc
stos
inc
loopne
lods
cmp
lods
test
repnz
dec
je
scas
orb
jno
jp
or
xor
int
mov
das
fs
adc
arpl
arpl
lock
leave
xor
jl
das
jge
mov
daa
mov
or
roll
lret
add
in
inc
andl
push
sub
cmp
shll
jecxz
int
add
jecxz
mov
jp
cmp
sahf
nop
push
jnp
mov
push
nop
in
mov
fwait
mov
adc
stos
dec
mov
in
lods
push
sbb
orb
scas
jmp
adc
inc
repz
mov
cmp
add
mov
xchg
dec
mov
mov
xchg
ds
push
adc
clc
add
mov
mov
lcall
out
add
es
orl
bound
pop
push
inc
mov
loop
cmp
dec
dec
jo
add
sbb
mov
lock
enter
fcmove
add
adc
sbb
push
mov
iret
xchg
cmp
subb
xor
fadds
ljmp
cli
cwtl
mov
js
jne
adc
and
decb
ds
inc
inc
pop
jecxz
adc
xchg
mov
stos
mov
push
add
jmp
xchg
xor
and
sub
popa
popa
cmpb
mov
push
jl
icebp
mov
xchg
sahf
xchg
jmp
rol
or
mov
sahf
push
mov
and
ss
dec
xor
push
int
in
ljmp
in
xchg
imul
inc
jecxz
add
nop
push
out
cmp
push
into
out
pop
rorl
dec
dec
add
loope
xchg
mov
mov
cmc
and
bound
cli
and
add
lds
imul
cwtl
nop
pushf
lds
pop
cld
jecxz
cmp
and
pop
sub
aam
dec
sub
cmp
stc
and
jnp
mov
sub
inc
add
sbb
pop
ljmp
call
dec
rclb
inc
shl
jge
jp
mov
pop
es
cli
popf
addb
pop
movsb
fs
jnp
fiadds
outsl
xor
arpl
mov
cmpsl
and
dec
push
dec
shlb
xchg
and
push
add
jecxz
js
adc
lods
addr16
daa
les
imul
lret
sbb
rol
mov
es
mov
add
add
pop
daa
inc
roll
out
or
mov
pusha
xchg
scas
leave
and
rcrl
fwait
push
cwtl
mov
mov
popf
push
mov
mov
test
sbb
ss
or
or
and
pop
imul
push
push
pop
adc
pop
movsl
icebp
inc
pop
adc
cmc
pushf
jnp
loop
cli
xor
mov
stos
lahf
adc
adc
lea
jo
and
fiadds
jno
adc
call
cli
jmp
es
imul
push
pusha
iret
test
mov
sub
inc
andb
and
insb
fcomps
xchg
nop
xor
cmp
adc
loop
subl
sahf
inc
adc
sbb
mov
cmc
sub
imul
and
inc
js
aaa
ret
pushf
rcrb
mov
or
jl
jmp
subl
lds
xor
rclb
call
push
dec
cmp
push
aaa
xor
mov
cs
fstpl
pop
stc
mov
xor
mov
es
mov
popa
pop
inc
push
adc
add
mov
cvtps2pi
add
lock
cmpsl
addl
aad
fadds
or
ljmp
mov
mov
inc
add
loope
pop
scas
ja
inc
sbb
sahf
in
lahf
andl
nop
sub
cs
xchg
inc
icebp
dec
rcrl
cmp
pop
and
xor
cmp
lea
jne
lcall
sbb
pop
mov
je
ljmp
ja
icebp
push
in
imul
xchg
cmp
pop
and
inc
push
or
ja
cli
mov
and
push
lds
push
leave
lret
mov
lcall
movsb
mov
adc
add
xchg
inc
and
jp
sbb
jnp
test
pop
dec
in
lahf
outsb
sub
sub
and
pusha
fldl
in
adc
ljmp
test
mov
mov
stos
ja
adc
jecxz
push
popf
xor
pop
dec
cli
out
xor
fadds
fadds
mov
int3
fdivrl
dec
add
push
ss
inc
dec
pop
mov
push
mov
ljmp
aad
daa
adc
ret
jb
lret
or
cld
xchg
out
cmc
addr16
ds
ficoml
inc
and
push
aas
push
push
adc
loop
or
xchg
push
ret
test
popf
push
je
add
xor
inc
xor
fiadds
and
or
aaa
mov
jmp
pop
sbb
ja
call
xchg
lret
mov
mov
inc
in
pop
pushf
sbb
pusha
add
mov
xchg
lea
jle
xchg
mov
mov
test
shll
pop
cs
mov
test
andb
cwtl
daa
xchg
popa
mov
pop
sbb
jmp
mov
or
clc
cmp
sub
loop
popa
arpl
pop
dec
mov
dec
cli
pop
add
lcall
aam
addr16
stos
xor
add
push
sbb
jmp
xchg
cmpsb
push
ljmp
dec
repnz
mov
mov
std
movb
cmp
sub
rcl
push
jmp
xor
hlt
les
jbe
adc
add
mov
sub
cmp
xor
add
dec
mov
insb
loopne
cltd
xchg
sti
xor
daa
je
pop
push
std
addr16
outsl
outsb
cmp
and
push
inc
jmp
push
ror
iret
insb
in
add
adc
sbb
in
mov
xchg
clc
cwtl
mov
test
icebp
jl
inc
stc
inc
jg
fwait
pop
xor
scas
xor
sub
pop
imul
fcmovu
cmp
test
or
daa
je
lock
into
test
dec
mov
sbb
mov
aaa
and
shll
or
xchg
jg
orb
mulb
loop
add
sbb
xchg
clc
sbbb
inc
in
or
int
jnp
sbb
outsl
fs
cmp
in
jmp
mov
xorl
andb
pop
lret
pop
iret
and
nop
pop
add
je
imull
pop
inc
xor
andl
hlt
in
lock
dec
cmc
arpl
push
jns
sub
pop
in
sub
daa
add
sub
xchg
push
jle
cmp
jle
iret
stc
inc
push
jp
sbb
shlb
repz
cmpl
xchg
mov
enter
enter
stc
call
cmp
xor
pop
push
loop
sub
mov
popf
mov
into
test
jb
xchg
hlt
mov
adc
in
test
sbb
test
mov
pop
or
push
hlt
mov
call
in
cmpl
imul
pop
cmp
inc
sbb
push
sbb
mov
enter
pop
inc
add
pop
insl
fwait
adc
movsb
cwtl
mov
sahf
jo
and
cmp
cld
xor
stos
or
sbb
push
pop
in
cld
push
cmp
push
jo
sbb
cmpsl
adc
jl
pop
sbb
cmp
ja
adc
cmp
push
jg
nop
adc
sti
add
test
and
call
jne
add
mov
mov
loope
orl
push
iret
pushf
imul
test
jmp
cmpsl
enter
jmp
ljmp
add
pop
out
jl
sbb
add
or
in
mov
and
mov
dec
add
inc
repz
dec
popf
cmp
cmpsb
cli
adc
jne
adc
stos
daa
rcr
into
dec
test
addr16
sbb
mov
and
mov
pop
inc
dec
and
mov
jmp
xacquire
mov
inc
xchg
adc
jmp
jo
jo
pop
cmp
push
test
add
pop
shl
push
mov
adc
shl
sbb
jns
inc
and
mov
shll
lods
sub
fidivrs
loopne
push
and
inc
mov
lahf
pop
inc
loopne
pop
add
xchg
rolb
loope
sti
mov
test
or
jp
imulb
fs
jmp
dec
cmpsl
rol
mov
imulb
ret
push
fcmovbe
sarl
movl
mov
mulb
shlb
shll
dec
push
cmp
xchg
in
xor
sbb
imul
push
or
insl
mov
ds
js
ficomps
jnp
sbb
lret
mov
xor
dec
fnsave
dec
push
lods
dec
adc
dec
mov
lock
push
mov
inc
xchg
dec
mov
cmp
ja
push
arpl
add
sbb
shrl
jge
jno
scas
push
push
cmpsl
sbbl
sbb
flds
push
xor
idivl
outsl
sbb
popa
inc
test
xor
mov
popf
pop
mov
xchg
dec
test
pop
mov
or
xor
loop
and
adc
xchg
rcrl
aas
mov
insb
outsl
scas
int3
fcomps
jl
imul
leave
jp
test
mov
dec
mov
cs
push
jo
aad
jne
imull
lret
pop
ja
hlt
mov
jecxz
fsubrp
adc
aad
mov
mov
shl
sbb
sbb
pop
xor
xor
cmpsl
out
jb
sbb
push
adcb
adc
cmp
push
xchg
les
ja
pop
sbb
xchg
fwait
inc
jmp
call
mov
push
push
xor
push
mov
sbb
pop
movq
dec
xchg
in
addb
daa
xor
shrl
or
pop
add
sbb
and
xchg
js
xchg
cmpsb
fisubs
dec
imul
rcrl
inc
sbb
shlb
dec
and
sub
push
mov
pop
or
pop
aad
popf
sti
je
test
add
pop
push
and
mov
movsl
nop
loop
push
daa
push
jbe
pop
jnp
lods
xor
sbb
setg
mov
jecxz
push
xor
loopne
stc
xor
cwtl
lahf
mov
xor
lahf
or
cwtl
push
cmc
movsb
or
shr
mov
mov
ficoms
push
adc
inc
xorl
xchg
shll
shlb
movsl
out
inc
or
vmovdqu
hlt
jecxz
orb
push
mov
and
push
lea
mov
fimuls
pop
or
add
rol
enter
jecxz
scas
mov
inc
xchg
inc
ret
push
and
clc
push
pop
mov
or
jp
pop
stos
cli
sbb
inc
loopne
mov
ficoms
inc
mov
ss
inc
adc
cmp
or
mov
inc
loopne
rcrl
mov
cwtl
shll
cmpsl
popf
and
outsb
jecxz
inc
aad
push
cmp
fistpl
pop
xor
fimuls
popf
cmp
in
jb
js
push
daa
sub
pop
mov
push
push
mov
sbb
adc
jle
xor
dec
adc
add
movl
dec
dec
mov
adc
pause
mov
cmp
in
adc
pop
mov
mov
or
adc
je
xchg
mov
rcrb
movl
jmp
pop
dec
mov
fwait
mov
lock
xchg
mov
outsl
mov
icebp
xchg
scas
jbe
nop
fstps
les
int3
push
movsb
ljmp
out
bound
pusha
outsb
xor
mov
or
xchg
shrb
adcb
dec
pop
arpl
adc
outsb
mov
add
inc
jne
jb
or
inc
pushf
push
stos
mov
xchg
fmull
incb
orl
sub
and
mov
jae
jb
loope
push
jo
pushf
jo
mov
xchg
mov
cmp
dec
mov
pop
xchg
xchg
pusha
jmp
jp
rcll
mov
sbb
test
mov
fldcw
add
push
inc
and
aam
pop
push
sub
rcrl
push
pop
add
out
cli
xorl
push
popf
and
les
in
loopne
pop
sbb
xchg
dec
ret
lret
pop
rcrb
fdivrs
sub
sbb
jl
inc
pop
ret
xchg
mov
rol
cwtl
sub
and
pusha
pop
cmp
jmp
jge
add
add
into
or
adc
and
jbe
sahf
push
mov
sbb
cmpl
aad
fisubl
and
push
mov
mov
cmp
movsl
pop
sbb
popf
ds
pop
popf
adc
addb
sahf
lcall
xor
fstl
xchg
cmp
push
push
repz
mov
push
lods
stos
mov
jle
leave
outsb
inc
mov
lods
bound
xor
fdivrl
stos
dec
jl
dec
cmp
add
ret
cmp
cmpsb
pushf
daa
fs
mov
xor
mov
push
mov
das
negl
cmp
icebp
icebp
out
adc
push
adc
or
in
xchg
fsubl
sahf
adc
scas
icebp
lcall
insb
or
pop
pop
js
les
add
push
mov
ljmp
mov
mul
adc
adc
stos
mov
mov
mov
push
push
lds
bound
cmpsb
out
xor
xchg
test
dec
outsb
aad
mov
in
and
imul
sbb
in
fistpl
rcr
test
sbb
mov
pop
pop
mov
sub
nop
cmp
xlat
inc
outsb
fistl
push
es
clc
cltd
push
out
jo
bound
pop
add
inc
lds
push
or
pop
pop
ffreep
stos
jl
shll
dec
movsl
mov
fistpl
sbbl
xor
aad
in
cmp
pusha
dec
insl
xchg
sbb
mov
repnz
sbb
pushf
lods
sub
sub
cmp
mov
dec
adc
adcb
mov
dec
push
fwait
aaa
or
inc
xor
mov
lret
test
xor
imul
cli
xlat
push
jne
aam
cwtl
cmp
loopne
sbb
pop
lea
xchg
test
aad
data16
push
dec
mov
mov
inc
fdivs
sub
dec
jb
jae
xorl
or
jmp
push
xchg
clc
cmp
dec
xchg
sbbl
mov
cltd
test
sbb
clc
jo
mov
push
and
imul
xchg
push
pop
arpl
push
decb
sbb
fcmovb
xchg
test
jns
sub
xchg
sub
js
mov
je
dec
shrb
sub
subb
out
sbb
rcrl
stos
repz
mov
sbb
pusha
shlb
mov
mov
cmp
sbb
add
and
rcrl
mov
stc
cmpsl
push
imul
dec
pop
dec
fs
or
cmpsl
daa
lock
push
test
cli
sbb
push
cs
in
jmp
imul
dec
xor
xor
testl
sbbb
xor
test
mov
leave
in
mov
pop
inc
fmul
mov
adc
jne
inc
addb
pop
gs
add
repz
fstl
ljmp
push
jbe
adc
mov
mov
es
sbb
mov
imul
ds
scas
inc
push
pop
andb
inc
xchg
popf
mov
xor
xor
mov
ss
loop
xchg
shlb
push
cmp
mov
jae
mov
xchg
xchg
jnp
adc
cwtl
and
xor
enter
les
popf
dec
mov
cmpsb
push
mov
loop
clc
aam
sbb
xchg
xchg
lds
pushf
movb
icebp
push
imull
inc
mov
enter
pop
mov
jmp
ds
rorl
loope
movsl
mov
lea
push
add
orb
negl
pop
and
adc
dec
dec
in
add
sti
xchg
mov
hlt
test
mov
push
pop
pop
jge
mov
cs
lret
and
dec
mov
add
dec
enter
in
inc
and
gs
push
test
mov
loope
js
xlat
in
lret
leave
lcall
jmp
inc
pusha
add
add
inc
xchg
shrl
outsl
add
roll
mov
out
je
je
mov
inc
jmp
ret
fidivrs
rorl
pop
sbb
divl
mov
pop
sub
mov
xchg
loop
sub
mov
ss
sub
add
sub
dec
inc
push
je
imul
test
mov
inc
dec
push
addr16
cmpsl
out
sbb
sub
sbb
inc
shll
adc
dec
mov
test
imul
movsl
addr16
insb
jnp
adc
stos
enter
std
pusha
jl
movsl
stos
jge
ret
pop
push
adc
add
jge
push
test
push
dec
dec
mov
xorl
or
xchg
cmp
add
sahf
loope
in
js
jle
leave
xchg
enter
jecxz
pop
dec
fimull
xlat
imul
test
cmp
test
outsl
jns
cmc
sbb
xor
out
pop
stos
or
imulb
and
pop
testl
test
aad
jmp
and
aad
fwait
arpl
pop
ret
jmp
add
out
daa
mov
int3
test
and
cmc
jge
sti
mov
mov
mov
fdivl
push
cmpsb
lahf
push
and
ret
lahf
imul
in
mov
adc
mov
and
outsb
test
lret
mov
cmpb
sub
imul
inc
mov
xlat
mov
in
sbb
and
inc
xor
xor
xchg
bound
pmuludq
dec
push
in
adc
push
cmp
jg
aas
adc
xor
addr16
adcl
mov
or
in
aam
aad
lret
xor
je
popf
loop
mov
in
sbb
mov
add
roll
xor
sub
pop
dec
add
jp
cmp
jecxz
cmc
je
nop
aad
pop
nop
adc
fistpll
xor
or
loopne
sbbl
adc
jl
lret
pop
or
andl
dec
gs
mov
movsb
faddl
inc
mov
int
push
popa
cltd
subb
mov
clc
mov
adc
inc
jnp
or
jg
sub
outsb
and
mov
fidivs
test
xor
jno
outsb
inc
fdivr
xchg
dec
xchg
pop
push
mov
into
sub
jmp
mov
pop
and
popa
inc
dec
stc
out
fmuls
pop
lcall
sbb
stos
js
addr16
out
sbb
mov
adc
mov
adc
test
out
xchg
cmp
push
cmp
dec
add
jno
cmp
lods
fs
imul
or
stos
cld
int
add
xchg
stos
mov
lods
movl
sahf
adc
inc
outsl
push
sbb
mov
hlt
mov
adc
and
sbb
je
out
xchg
int
ret
xor
aam
dec
mov
fildll
mov
adc
and
push
movsb
sahf
dec
mov
mov
push
and
xchg
stos
ds
sub
jnp
cmpsb
fadds
ds
mov
fcomps
mov
in
divl
loope
lods
adc
cmp
cmc
or
sub
cld
popa
sub
mov
pop
jo
cmp
sbb
xor
jmp
jle
lds
xorb
dec
pop
call
enter
mov
into
add
xchg
test
loopne
add
stos
icebp
movsb
inc
ds
imul
loopne
js
lahf
data16
mov
inc
mov
arpl
outsl
sub
cmp
jo
leave
inc
mov
push
mov
inc
mov
fidivs
cwtl
in
xor
mov
insl
inc
fcomps
fistpll
dec
cmpsl
inc
sbb
fcompl
xor
fwait
arpl
jmp
das
or
ljmp
xchg
rcrl
cmpsl
addr16
xor
mov
popa
popa
or
sbb
cltd
mov
aam
sub
outsb
xor
clc
and
inc
add
testl
push
pop
aam
or
inc
ja
aas
and
xor
push
lock
dec
movsb
inc
xchg
out
inc
popf
fisttps
xor
dec
mov
cmp
jnp
xchg
sub
pop
mov
scas
fwait
loope
gs
in
jl
xchg
sarb
pop
adc
mov
sub
sub
mov
sbb
imul
cli
pop
dec
push
mov
add
or
inc
lock
mov
pop
sarb
or
test
jg
lock
mov
xor
pushf
jg
orl
das
mov
push
xor
jge
cltd
movsl
jno
push
sbb
nop
out
inc
clc
sub
out
dec
adc
fmuls
cmp
daa
adc
pop
push
add
mov
dec
ljmp
aas
ret
push
aas
cmp
push
inc
jl
cmpsb
xchg
sbb
lea
lods
movsb
stos
pop
add
inc
loop
sbb
lds
mov
andl
dec
hlt
in
pop
mov
std
lock
aad
add
or
inc
cmp
xor
sbb
loope
add
jnp
outsb
dec
adc
push
pop
add
popa
add
adc
loope
loopne
stos
sti
adc
seta
sub
gs
leave
mov
push
nop
push
add
sbb
adc
or
jmp
es
jg
xchg
mov
xchg
xchg
xchg
mov
mov
mov
pop
push
loope
dec
jmp
lods
loopne
sahf
scas
divl
ljmp
push
cmpl
fs
adc
sahf
insl
push
cmp
enter
dec
push
jp
cs
lock
push
adc
dec
jle
popf
fwait
roll
scas
inc
movsl
arpl
dec
sub
push
inc
and
mov
stos
mov
sbb
lret
pop
pop
pop
movsb
add
adc
popa
mov
mov
xor
xor
dec
cltd
push
mov
and
pop
or
pop
or
sub
mov
cmpb
inc
daa
push
xor
cs
hlt
imul
sahf
cmp
pop
push
shll
lods
ds
mov
mov
dec
adc
lcall
lret
stc
jmp
and
pusha
arpl
fcoms
outsl
inc
xor
cmp
mov
loopne
out
rcll
lea
outsb
or
lcall
xchg
jo
cmp
stos
inc
jne
sahf
ss
push
mov
pop
xor
mov
insl
fdivs
pop
push
lods
cmc
dec
clc
dec
cmp
mov
call
dec
popa
jbe
add
sbb
pop
xchg
pop
ror
inc
sub
mov
pusha
adc
mov
loop
jge
dec
or
pop
and
lds
mov
and
push
rep
ds
dec
rcrl
mov
or
adc
es
aaa
icebp
shll
mov
inc
xchg
or
adc
repnz
mov
std
pusha
lods
cmpsl
add
into
mov
add
mov
dec
mov
xorb
adc
clc
popf
add
lret
push
movl
dec
pop
andl
mov
jnp
outsb
mov
mov
push
add
call
ret
int
push
dec
mull
cmp
adcl
ljmp
pop
hlt
or
ljmp
mov
aas
loopne
or
jb
sbb
clc
dec
in
mov
sub
jb
pop
in
lods
add
insb
mov
bound
push
loopne
mov
push
pop
bound
icebp
add
jo
test
cmp
hlt
orb
test
cmp
addb
jp
data16
mov
and
mov
mov
mov
lahf
pop
out
ja
dec
mov
fmull
mov
mov
setp
adc
or
and
shlb
divb
push
mov
aad
adc
mov
mov
test
fcompl
sti
mov
pop
mov
aad
out
push
cmp
sbb
mov
ja
add
jne
lcall
jp
aas
fsincos
jne
stos
ret
add
cmp
hlt
push
or
sbb
push
add
pusha
test
cmp
sahf
gs
add
rcll
inc
fidivl
aad
xlat
xchg
xor
cmp
sbb
lods
in
loope
add
out
call
fs
inc
adc
ja
les
push
pushf
aad
daa
aam
jle
jmp
pop
pop
pop
jmp
addl
mov
inc
adcb
jo
or
cmpsb
mov
xor
fscale
loopne
loopne
test
iret
loopne
aaa
lds
push
in
push
sbb
test
rcrb
and
fmuls
je
lds
inc
adcb
xor
jl
sub
jns
push
pop
adc
movsb
mov
sbb
scas
xchg
aad
sbb
inc
jae
dec
and
sub
cmp
xlat
sbb
dec
daa
jg
shlb
push
push
pusha
xchg
xor
push
loopne
clc
sahf
test
xor
mov
or
inc
cmpb
shll
push
sarl
loope
outsb
xlat
hlt
sar
popf
inc
leave
test
negl
fdivrs
xor
push
sahf
pushf
icebp
add
cmp
sarb
leave
inc
adc
sbb
cmc
push
shrl
int3
inc
aas
pop
dec
xchg
jno
mov
and
jp
and
daa
inc
mov
adc
fs
mov
dec
xchg
jb
lcall
lret
daa
cltd
cld
and
enter
inc
jne
aas
xor
sub
popa
or
or
popa
fistpll
js
sbb
sub
ja
lock
addr16
xchg
cld
mov
pop
call
mov
arpl
pop
xchg
jbe
xor
in
gs
jge
jge
mov
aad
push
pop
fs
fxch
shl
daa
jnp
mov
xchg
cwtl
or
mov
pop
pop
sub
adc
mov
xchg
test
xor
sbb
xor
sbb
fs
bound
mov
xchg
or
inc
dec
pop
int
dec
jge
dec
pushf
outsb
add
pop
das
adc
jl
jnp
dec
sub
add
dec
lods
addb
sbb
aas
xor
test
sub
adc
pop
inc
fbstp
cmp
loopne
stos
jnp
jg
and
aas
mov
dec
add
fs
outsl
mov
inc
out
scas
test
test
repnz
je
daa
jo
cmp
imul
inc
inc
pop
test
test
jp
fisttpll
adc
mov
ret
addb
or
shl
mov
jnp
imul
into
int3
bound
enter
mov
cmp
inc
cmp
mov
pop
lods
dec
push
movsl
xor
adc
dec
test
jp
mov
outsl
inc
ja
cld
xor
scas
inc
mov
testb
and
cmp
clc
loopne
jbe
ja
or
or
mov
addr16
jae
mov
inc
push
add
inc
arpl
cwtl
ret
mov
and
ss
out
xor
test
sub
xor
into
fsubl
stos
fsubrs
mov
jo,pt
into
xlat
imul
addb
lcall
dec
dec
insl
mov
int3
pop
outsb
loope
test
je
mov
pop
filds
push
dec
or
cmp
add
mov
rcll
inc
ret
push
jmp
not
aad
mov
xchg
iret
push
hlt
je
movsl
cmpsb
xor
lods
push
mov
mov
fdivrl
mov
js
mov
jl
and
xor
fnsave
pop
pop
mov
subl
lock
roll
adc
cld
sbbl
xlat
sbb
clc
shlb
hlt
int
jl
bound
jns
dec
inc
icebp
push
addl
test
add
stos
xor
jbe
pop
mov
cmp
mov
fistl
push
sti
stos
nop
mov
sbbb
fwait
cmp
out
inc
repnz
lods
jmp
pop
sbb
add
cmp
xor
adc
cwtl
lea
inc
idivl
ss
nop
inc
outsb
pop
sarl
mov
adc
mov
dec
xor
test
ja
fcmovnb
jmp
push
movsl
adc
jge
stos
sahf
pop
and
pop
mov
jns
ljmp
fisubrs
and
xor
pop
jns
pop
test
in
xchg
nop
adc
jmp
or
jl
dec
pop
cmp
fstpt
out
fisttpll
ret
ss
add
xchg
xchg
mov
xor
jmp
dec
cmp
js
xchg
and
jbe
inc
cld
into
iret
xchg
lcall
sbb
clc
cwtl
insb
loopne
xor
ficompl
add
cmp
aam
les
xchg
mov
aad
add
push
mov
xlat
mov
cwtl
cmp
mov
xor
int
popa
insb
test
pop
cli
pop
pop
imul
and
pop
cltd
out
dec
cltd
jne
jl
in
pop
cmp
xchg
lds
mov
movsl
cmpsl
fildl
je
push
ljmp
xor
inc
xchg
fldcw
loope
shr
mov
sahf
lods
call
popa
cmp
jae
push
sub
test
xchg
popf
xchg
mov
dec
dec
mov
pop
or
and
xor
loopne
in
out
sti
sbb
arpl
in
loopne
sbb
mov
mov
into
scas
nop
inc
mov
fcmovb
fcom
int
sbbb
lcall
mov
dec
fcoml
addr16
add
enter
add
or
rorb
call
mov
das
jp
test
lods
sbb
push
adc
cmp
push
xor
dec
mov
testl
in
lods
adc
cmp
mov
popa
test
push
jl
push
push
jp
aad
push
inc
lock
push
insl
xchg
idiv
nop
mov
and
dec
outsb
rcrb
test
sbb
loopne
add
mov
aam
sbb
cmpsl
int3
mov
incl
mov
inc
xor
lcall
sbb
jl
inc
out
and
in
lock
mov
xchg
dec
and
inc
cmp
in
les
pop
pop
xor
add
jo
xor
mov
pop
jns
inc
xchg
cmpsb
or
dec
bound
clc
xor
fsts
decl
sahf
je
fildll
jp
add
test
add
cld
insb
ss
jmp
mov
test
cmp
shlb
cltd
xrelease
int
nopl
repnz
addr16
outsb
cmc
inc
or
outsl
adc
rorb
cmp
in
popa
loope
insb
clc
or
enter
mov
cmpsl
jns
test
dec
adc
or
insb
int
inc
jle
aam
out
or
daa
les
rcrb
in
jo
pop
sahf
int
mov
mov
ljmp
mov
repz
adc
inc
xchg
ds
xor
jle
adc
mov
sti
push
mov
cmp
les
jecxz
dec
pop
xchg
cmp
jl
cmc
dec
mov
sub
out
aaa
testb
mov
test
jo
sahf
pop
or
mov
or
rclb
mov
cmp
or
lock
mov
lcall
dec
jne
arpl
imul
add
and
xor
and
sahf
je
mov
loopne
adc
lock
js
je
xchg
push
push
shlb
jno
imul
adc
inc
sbb
add
adc
xchg
je
mov
ss
lods
int3
movl
jg
sbb
jmp
sbb
ret
pushf
cmp
mov
mov
and
jne
idivl
stos
es
dec
test
out
sub
out
arpl
enter
adc
lods
insl
pop
fsubp
aad
popa
ds
and
jae
adcb
pop
dec
mov
and
and
and
mov
js
ficoml
add
sbb
add
or
adc
add
or
adc
lahf
jns
mov
les
stc
and
std
dec
stos
faddl
mov
and
pop
fstpl
inc
or
dec
lea
push
lods
pop
inc
cmc
push
jmp
adc
jmp
adc
fnstenv
ja
adc
cmp
mov
mov
xor
out
ds
cs
xchg
inc
sub
in
sbb
lds
jl
xor
xchg
jne
jnp
sbb
icebp
xchg
lret
cmpsl
sbb
mov
ljmp
mov
orb
jo
insb
jb
sbb
cmp
aaa
shrl
push
cwtl
push
inc
arpl
jne
cmp
fwait
scas
xor
arpl
mov
arpl
mov
dec
sbb
xchg
pop
fwait
loop
pusha
lods
test
or
adcl
hlt
out
xor
pop
pop
ja
fwait
and
cmp
mov
cli
out
subl
inc
push
xchg
cli
sarb
push
fdivp
xor
sub
enter
lcall
mov
andb
sbb
cs
out
adc
mov
jp
mov
mov
mov
add
fnstsw
push
mov
mov
lds
lea
hlt
xor
rcrb
sahf
pop
jmp
and
and
cmp
pop
mov
lds
aam
imul
jl
sbb
jp
sub
or
push
sti
movl
sahf
adc
icebp
lods
pusha
inc
cmpsl
loope
or
test
dec
mov
xchg
and
aas
xor
test
imul
sbb
xchg
mov
dec
push
inc
rorb
pop
inc
fldenv
adc
and
xor
ss
and
daa
lea
fcoms
xchg
mov
std
dec
mov
xchg
add
sti
loop
xlat
icebp
jb
sbb
adc
leave
push
or
cmp
pop
lahf
push
inc
in
aad
xlat
cmp
add
mov
addb
fistpll
loopne
xchg
add
cmpsb
mov
mov
ds
push
cmp
fstpt
lea
xchg
jae
aas
cmp
or
sbb
mov
in
sbb
arpl
sub
add
sub
sbb
adc
mov
data16
jno
mov
xor
cmp
push
pop
dec
jecxz
repz
xchg
xor
sub
or
aas
loopne
clc
jnp
dec
mov
or
icebp
arpl
imul
int3
repz
int
lea
xor
insb
ficomps
push
andl
pushf
daa
cmp
aam
mov
add
pop
ret
movsb
sahf
or
pop
jmp
mov
clc
inc
or
lock
fidivl
mov
ds
adc
icebp
mov
add
aam
jbe
jle
dec
fwait
rcll
mov
cmp
inc
inc
lahf
lcall
je
lods
ds
orb
mov
aaa
add
adc
sub
and
inc
push
filds
jne
and
out
dec
fisttpl
jmp
or
push
loopne
mov
and
mov
mov
inc
aaa
adc
dec
mov
test
pop
fwait
jl
stc
add
popa
shl
in
inc
sbb
xlat
sbb
pusha
mov
dec
inc
jmp
cli
rcl
aad
not
les
aas
fdiv
fwait
pop
cmpsl
dec
aad
lcall
cmp
fchs
sbb
or
subl
mov
scas
incb
call
loope
sbb
jb
fstpt
arpl
pushf
lret
cli
daa
lret
mov
rclb
dec
pop
stos
insl
loopne
add
jnp
xor
imul
cld
sub
lods
lret
loope
pop
call
dec
rcrl
cmp
andb
inc
add
pop
push
js
ds
sbb
lea
lret
mov
nop
lret
xor
lods
ret
fcomps
es
pushf
lock
call
ret
xlat
pop
sbb
loope
insb
mov
lock
es
rcl
stos
stos
movsb
fsts
daa
roll
mov
sub
les
rcll
dec
cmp
arpl
or
fwait
stc
inc
loopne
inc
inc
xchg
scas
stc
addb
xor
hlt
mov
outsb
mov
add
cmp
sub
out
mov
inc
das
sub
clc
cmp
sbb
mov
dec
lahf
adc
mov
sar
jl
movsl
ds
inc
mov
pop
sub
mov
daa
fcomps
scas
adc
into
fisubrl
mov
out
int3
adc
ja
adc
sub
fsubs
mov
push
loopne
fsubs
in
lcall
outsl
psubusw
dec
sub
pop
cmc
inc
pop
les
jecxz
enter
push
fidivs
shlb
cld
push
jmp
je
pop
stos
mov
sahf
mov
fsubr
shr
inc
jno
and
mov
fcompl
insb
or
sbb
mov
shlb
xor
xor
aaa
fstpl
pop
and
sub
movswl
inc
inc
inc
in
and
add
mov
inc
out
and
dec
push
sar
inc
pop
mov
lds
lcall
push
mov
in
mov
inc
xor
sbb
xchg
adc
aas
mov
and
sbb
adc
mov
and
ja
mov
dec
xor
dec
rol
adc
and
mov
stc
clc
push
pop
pop
dec
andb
das
cmp
mov
adc
xor
mov
out
ret
in
dec
hlt
into
jle
out
ffreep
gs
call
shrl
stos
stos
inc
xor
rorl
and
and
js
addl
cmp
sub
jno
mov
ja
ss
into
aaa
dec
push
inc
push
xor
pop
sahf
std
scas
xor
and
cmpsl
adc
push
insb
push
jae
iret
xchg
xchg
sbbb
aaa
inc
movsl
fsqrt
enter
loope
insl
push
sub
mov
xlat
jle
loop
cmp
or
push
fcoms
mov
jmp
add
jl
or
cmp
into
or
loope
mov
imul
ja
pop
cwtl
mov
add
js
jae
test
push
gs
jmp
sub
test
clc
inc
sbb
and
shlb
out
int3
data16
adc
leave
add
test
pop
es
pop
lds
bound
je,pt
cmpsl
push
or
or
data16
scas
sub
and
pop
jae
in
or
push
and
enter
dec
jg
pop
or
push
dec
push
lds
lock
cmp
mov
xor
in
inc
pop
sbb
mov
lods
imul
rorb
jnp
nop
outsl
lret
jbe
daa
jne
popf
add
jmp
add
and
inc
data16
ljmp
jo
adc
leave
jg
aaa
mov
push
jbe
daa
ret
xchg
lock
sbbl
pop
add
sahf
sbb
jne
sub
jo
add
loope
arpl
out
andb
das
loop
mov
cltd
jbe
rclb
in
pop
pop
mov
and
add
push
jne
sbb
hlt
lds
cld
fdivl
in
inc
or
shll
xor
data16
mov
mov
mov
mov
shll
mov
and
push
movsb
loop
pop
ljmp
fprem1
mov
sbb
ds
pop
adc
sbb
or
movsl
pop
push
mov
cmp
rorb
xor
and
add
out
pop
mov
movaps
pop
jbe
push
andb
pop
or
jbe
les
sbb
jns
mov
shl
mov
push
cltd
int
sbb
dec
sub
std
mov
lea
or
enter
scas
push
push
mov
mov
rcr
aaa
and
icebp
loopne
jl
pop
cld
inc
push
movzbl
mov
xchg
or
push
shrb
push
in
shlb
test
rorl
out
mov
in
sbb
or
int3
icebp
mov
jo
mov
mov
inc
pop
cmp
mov
dec
cmp
fidivl
adc
pop
iret
lock
cmp
roll
push
daa
adc
daa
addr16
in
je
imul
flds
mov
mov
jp
call
cmp
cmp
test
push
pop
in
pop
and
dec
push
js
jg
ljmp
mov
ret
adc
cmpsb
popf
xor
hlt
fisubrs
xchg
adc
jl
lret
mov
setbe
imul
sub
cmc
aas
jnp
dec
daa
inc
insb
aaa
aaa
jb
pop
mov
iret
repnz
cltd
sahf
inc
test
sbb
xlat
hlt
push
fstps
aam
jecxz
pushf
inc
test
dec
push
sub
testl
xor
es
movsb
cltd
sub
dec
inc
inc
and
sub
pop
sbb
out
jne
dec
jecxz
and
and
mov
inc
nop
inc
mov
subb
xor
aas
sub
jmp
mov
inc
lea
xchg
lcall
je
sub
aam
leave
clc
cmp
ljmp
addl
sti
mov
pop
rcl
js
pop
lods
mov
xor
loopne
dec
adc
sahf
mov
iret
cmp
xor
push
mov
cmp
dec
aad
aas
xor
mov
mov
aas
loop
inc
je
fsubrs
addl
mov
pushw
push
and
sbb
lahf
pusha
lret
adc
ja
les
xor
rolb
adc
enter
and
cmp
sbbb
inc
xor
test
mov
xchg
or
xor
mov
es
mov
sbb
mov
mov
mov
jo
test
sub
mov
xor
xor
push
orb
adcb
ret
into
outsb
mov
cmp
aaa
jg
sub
loope
mov
push
push
dec
or
icebp
les
loopne
in
xor
xchg
test
jb
stos
xor
xchg
bound
sbb
dec
mov
jmp
push
fists
push
and
xlat
pop
out
or
mov
xchg
cs
mov
outsb
mov
mov
sbb
mov
mov
pop
mov
aad
test
dec
sbb
xchg
jecxz
addr16
popa
mov
jnp
mov
sbb
psrlq
and
sarl
add
jbe
pop
fimuls
les
jp
sti
out
cmp
pop
jae
pop
add
xchg
mov
popf
shrl
pop
cmp
pop
mov
sub
dec
loope
jo
adc
pop
adc
call
push
dec
mov
cmpsl
shll
lret
xor
rcrl
mov
and
lods
nop
mov
mov
xor
pop
add
cld
sahf
and
out
jl
adc
jbe
sahf
movsl
dec
sub
jg
mov
addb
jne
mov
fs
mov
popa
jl
adc
lea
mov
es
cwtl
fcoml
inc
addl
movl
sbb
sti
rcll
outsb
xchg
push
mov
sub
pop
fldcw
push
add
je
mov
les
arpl
out
js
iret
imul
adc
inc
mov
dec
xchg
arpl
adc
repz
stos
push
stos
mov
or
std
call
dec
pop
push
sbb
cmp
pusha
mov
xchg
mov
jge
gs
mov
rcrb
xchg
inc
mov
loope
sti
cmp
jne
jns
loop
out
add
xor
or
cmpsl
test
mov
adc
ja
mov
ret
mov
push
mov
mov
mov
in
dec
push
addr16
push
lea
xor
call
jnp
xchg
test
cmp
sbb
test
fcoml
cmp
dec
mov
popa
mov
dec
adc
sti
aaa
xor
mov
and
call
fsubs
mov
loopne
xorl
ds
dec
popa
adcb
stos
mov
es
inc
jle
xor
adc
sbb
xchg
push
shll
pop
sub
rcr
stos
fadds
outsb
cmpsb
fisubl
stos
sbb
mov
repz
dec
and
repnz
jge
cmpsl
cmp
daa
sbb
dec
sahf
out
jo
sbbl
test
push
fidivrl
push
cld
loopne
xchg
fsubs
test
lret
roll
in
lret
xor
repz
adc
and
addl
imul
sbb
jl
nop
imul
je
insb
mov
out
jae
xchg
in
or
push
add
mov
les
mov
mov
jae
sbb
popa
add
add
or
insl
popa
movsb
inc
test
or
rcrb
sbb
push
popa
es
ja
shlb
lods
fcompl
vpunpckhqdq
mov
jmp
push
pop
and
jne
loop
push
mov
repnz
fistpll
clc
mov
stos
repz
mov
scas
xor
mov
mov
and
xor
mov
lods
in
mov
lods
loop
in
sbb
movsb
out
aaa
roll
cwtl
ret
add
or
add
setl
fadds
or
inc
jo
jmp
rorb
add
fisubs
inc
adcb
leave
shrb
adc
bound
stos
orl
mov
mov
push
nopl
aam
lds
cmp
cli
mov
cltd
cmpsl
sub
cmp
adc
pop
daa
inc
hlt
dec
mov
hlt
pop
bnd
and
mov
cmpsl
rclb
pop
mov
adc
dec
xor
inc
loop
arpl
aad
divl
sbb
push
mov
popa
add
lds
icebp
ds
or
pop
mov
dec
xchg
subl
int
mov
sbb
stc
adc
neg
nop
enter
add
sahf
mov
adc
mov
sbb
push
imul
fnstcw
dec
sar
jecxz
and
sarl
std
or
jmp
lcall
pop
cmp
jmp
out
lret
fwait
sbb
test
pop
push
loope
lret
sbb
mov
jb
idivb
pop
inc
jbe
pop
pop
pushf
xchg
jne
lock
stos
jb
es
insb
cmpl
or
inc
push
mov
clc
xlat
inc
iret
push
xor
adc
scas
into
pusha
loop
mov
xor
mov
adc
jp
loopne
add
rolb
fwait
or
and
mov
stos
rep
popf
xchg
and
hlt
arpl
xchg
dec
dec
adc
mov
or
mov
popa
xor
adc
inc
sbb
cwtl
xor
sub
cmp
jl
mov
pop
into
sbbb
das
xlat
ss
push
jno
xor
add
adc
jne
push
mov
cs
adc
cmc
jnp
pop
pop
or
fsubrl
mov
mov
out
ret
stos
loope
out
shr
sub
js
push
mov
rcll
xchg
pop
dec
add
adc
arpl
mov
jmp
mov
mov
sbbl
sub
mov
movsb
shll
cwtl
dec
cmp
xchg
xchg
testl
cs
inc
mov
sub
dec
cmp
adc
outsb
fidivrs
sbb
cmp
inc
push
scas
xor
stos
loop
out
or
push
jnp
mov
outsb
pop
in
jp
adc
mov
dec
xchg
loopne
pop
xor
xor
mov
iret
push
or
inc
push
sbb
clc
mov
lds
imul
into
cmc
mov
mov
mov
mov
dec
mov
push
push
js
pusha
cmp
jb
jp
out
call
adc
inc
jns
cmp
inc
mov
dec
pop
jl
popa
shlb
xchg
clc
sbbb
mov
mov
imul
xor
loop
daa
les
jmp
sub
out
fmull
ljmp
adc
flds
and
mov
mov
inc
mov
jns
or
pushf
xor
inc
dec
and
outsb
ret
pushaw
nop
incl
es
sbb
or
inc
adc
xor
nop
movsb
test
fdivrs
and
stos
mov
mov
xchg
and
decl
outsb
lock
lea
cmp
adc
pop
inc
cmp
mov
lea
sti
popf
out
jb
mov
mov
dec
mov
add
jbe
and
bsr
icebp
je
adc
repz
testl
adc
mov
xor
adc
mov
mov
and
out
out
add
cmp
xchg
mov
cmp
iret
xchg
fwait
test
adc
insl
dec
daa
jo
mov
mov
je
rorl
inc
mov
dec
and
jp
push
stos
repz
dec
aad
daa
shlb
les
mov
insl
lods
cwtl
movsl
pop
aaa
subl
and
mov
in
aaa
stos
push
fdivrs
jg
in
es
negl
sbb
in
cmpsl
and
movsb
jmp
xchg
or
mov
mov
daa
icebp
cld
mov
andl
push
and
pop
mov
dec
pop
jle
xchg
or
stos
gs
push
mov
xor
pop
pop
add
icebp
xchg
pop
sub
cmp
hlt
insl
leave
rcll
call
add
adcb
pop
mov
xorb
cli
lds
sub
or
testl
cmp
pop
cmp
sub
jl
push
jb
xchg
fnstcw
int
mov
or
es
pusha
fcomi
mov
test
sbb
ds
in
clc
cmpsb
movsl
bound
je
xchg
pop
xchg
call
push
push
dec
xchg
testb
xchg
imul
fsubr
icebp
movsb
call
push
cmp
arpl
fwait
and
std
jp
mov
mov
daa
test
rclb
shrb
gs
ljmp
push
mov
lods
movsb
mov
pop
xchg
push
pop
lcall
in
jbe
xchg
call
pop
cmpl
push
mov
mov
aas
in
dec
iret
sub
pop
mov
or
xor
addb
fcmovnu
mov
pop
and
jmp
sub
cmp
jecxz
mov
ljmp
jmp
lea
and
xchg
sbb
pop
mov
fst
xchg
mov
xor
mov
xor
jge
into
xchg
addb
push
push
add
les
xchg
scas
adc
hlt
pop
and
mov
dec
ret
mov
adc
mov
stos
dec
repz
cmpsl
int3
addr16
pop
jge
sub
add
lahf
cli
mov
cvtps2pi
nop
je
mov
push
lds
test
or
js
xchg
in
cli
scas
ret
dec
push
push
mov
dec
jp
jp
fidivl
inc
pop
cmp
mov
xchg
mov
or
jae
fwait
adc
push
adc
push
stc
jge
pop
call
mov
or
outsb
mov
jge
icebp
gs
bound
pop
rclb
popl
mov
add
xchg
rcrl
loopne
sahf
sbb
add
sbb
in
shl
das
adc
xchg
xchg
icebp
std
push
je
xlat
mov
movsb
xchg
arpl
jge
inc
daa
cmc
pop
gs
iret
mov
ror
in
push
mov
jl
jle
fstps
cmpsl
lea
add
inc
push
xor
jge
xor
pop
insb
in
push
and
ja
mov
mov
sarb
sbb
out
mov
cmp
call
mov
in
loopne
lock
imul
cld
and
push
into
aad
add
outsb
pushf
scas
ds
cmp
or
jnp
repnz
sub
sub
inc
add
int3
scas
jecxz
pop
stos
lds
add
rorb
or
jecxz
and
jo
or
out
dec
lds
fistpl
xor
push
pop
insl
adc
ljmp
fdivr
cmp
gs
mov
xor
je
pop
sbb
xchg
shll
sbb
cmp
mov
mov
ja
sahf
rolb
xor
jmp
jae
cmpsl
add
pop
test
push
push
push
mov
adc
test
sbb
adcb
jecxz
dec
int
lock
ret
ret
and
mov
mov
ja
cld
imul
popa
loope
ret
mov
rol
test
mov
cmp
outsb
and
or
sbb
mov
call
pop
imul
mov
dec
or
push
inc
incl
cmp
int
je
orb
push
ret
fmull
push
cmpsb
out
jb
sub
mov
and
out
mov
mov
lcall
cli
insb
sub
mov
cmpsb
sub
ds
ljmp
dec
out
mov
xor
lock
push
adc
enter
dec
sub
dec
movsl
arpl
inc
call
or
mulb
pop
shl
nop
les
imul
fsubl
push
xor
insl
push
aad
shlb
sti
orb
and
mov
les
sub
dec
sub
daa
xor
cmp
fucomi
repnz
iret
test
loope
adc
push
jo
jae
movsl
sbb
aam
mov
fyl2x
inc
xlat
cmp
lea
dec
loope
xor
sub
cli
add
shll
sar
arpl
push
jne
call
or
sbb
sbb
sbb
aad
pop
mov
jmp
orl
leave
adc
cmp
inc
icebp
insb
mov
add
add
push
daa
pop
jb
lahf
scas
ljmp
aam
push
adc
dec
xchg
frstor
fsubrs
test
push
add
cmp
dec
cmp
int
jle
test
add
fdivs
mov
xchg
pushf
mov
fs
idivb
mov
add
insl
jge
push
mov
cltd
dec
pop
ja
xchg
pop
test
hlt
jns
scas
ja
sub
and
pop
pop
mov
xchg
hlt
mov
aam
pop
xchg
jmp
jg
pop
xchg
lea
es
push
pop
hlt
imul
jecxz
int
sub
andb
adc
repz
mov
fs
ss
insb
cmp
ljmp
mov
push
pop
mov
cmp
and
outsl
daa
dec
cmp
and
xor
inc
pop
push
scas
xor
fsub
push
insl
outsb
lret
ljmp
adc
and
ret
je
lock
cmp
addr16
jp
mov
sub
idiv
mov
push
hlt
and
mov
mov
out
add
aam
sbb
add
and
mov
loopne
scas
pop
lcall
add
jle
lock
into
imul
aaa
push
and
add
pop
lahf
mov
push
xchg
fnsave
jge
xchg
int3
int
xchg
out
mov
add
test
fwait
xchg
sarb
outsl
lret
dec
inc
stos
dec
sbb
mov
call
nopl
dec
loope
imul
outsb
es
cmc
cmpsb
scas
jne
sarl
cmc
xor
sbb
pop
inc
fistps
add
ficompl
sub
mov
cmp
scas
cmp
icebp
sbb
xlat
mov
lcall
xor
xchg
mov
add
fsub
jmp
push
pop
test
icebp
mov
test
imul
cmp
sbb
movb
rcll
sbb
in
mov
and
ss
push
push
sarb
jmp
mov
fisubs
add
arpl
cmpsl
mov
mov
test
mov
test
test
adc
jb
insl
das
test
push
js
int
jl
mov
xor
ja
ss
inc
mov
cli
jno
addr16
nop
call
xor
into
jle
icebp
xor
inc
add
sarb
push
adc
call
inc
pop
rorl
lahf
sbb
pop
lahf
jo
cmp
cltd
jb
in
jle
dec
addr16
dec
mov
mov
jp
add
jo
scas
inc
xchg
or
bound
mov
push
imul
out
mov
jnp
jmp
or
icebp
pop
pop
pusha
movsb
call
or
pop
filds
pop
addb
cwtl
lock
pcmpeqb
mov
mov
fisubrs
jecxz
repnz
test
popa
cltd
fidivrs
mov
mov
dec
arpl
aam
or
pop
inc
dec
push
aas
test
sbb
enter
jo
jae
mov
repnz
mov
aad
outsb
jno
mov
ja
mov
aaa
into
int
out
pop
iret
test
inc
pushf
adc
popf
ljmp
dec
test
mov
std
add
mov
orl
xchg
jo
pop
sbb
lock
mov
in
jbe
adc
push
xor
xchg
shrl
push
mov
or
xor
cmp
fwait
xchg
insl
adc
mov
shlb
daa
mov
xlat
sbbb
adc
rcrl
lea
movsb
je
inc
mov
ficomps
fwait
push
cmp
js
incb
iret
std
xchg
frstor
xchg
lds
pop
and
or
test
dec
dec
push
dec
outsb
ror
clc
push
or
inc
aad
insb
adc
je
jp
or
scas
sahf
xor
xchg
inc
mov
push
lods
mov
sub
and
scas
ljmp
dec
loopne
cmp
sub
jne
jne
mov
in
repnz
enter
test
fistpll
hlt
into
push
loopne
pop
test
push
in
ja
jge
pop
aam
push
xchg
pop
imul
push
dec
mov
sbb
out
lds
sub
mov
leave
mov
and
mov
test
test
out
xchg
cs
je
ss
xor
inc
movsl
xor
xchg
loopne
push
loopne
cmp
popf
sbb
hlt
clc
hlt
nop
lret
xchg
adc
mov
push
add
pop
sbb
jp
imul
rcl
inc
cmp
in
out
ds
mov
repnz
jo
andb
cmp
mov
into
dec
cwtl
pop
stos
mov
int3
push
or
inc
mov
cltd
movsl
lock
das
cs
mov
test
outsl
push
xlat
xor
int3
pop
rcl
xor
adc
mov
mov
je
ffree
arpl
xchg
sub
xchg
dec
pextrw
and
scas
mov
and
add
and
cli
cmpsl
or
out
jae
push
pop
loope
mov
and
sbb
jl
jnp
popa
push
je
fbstp
lods
jmp
ja
pop
or
inc
mov
jmp
sbb
jo
mov
sbb
stc
int
xor
jae
dec
xchg
xchg
into
and
push
jo
xor
fmuls
xchg
nop
shrl
fldl
xor
adc
pop
push
pop
jge
pop
push
jmp
mov
push
xor
fiaddl
inc
mov
dec
or
mov
imul
adc
pop
andl
inc
scas
mov
ret
pop
hlt
adcl
jg
mov
sub
push
sub
pusha
sbb
inc
jae
add
xor
mov
inc
into
sti
mov
push
lods
loop
lock
sbb
in
aas
out
push
and
insb
in
mov
sarb
and
inc
out
and
mov
mov
outsl
xchg
in
xor
iret
inc
pop
fwait
rclb
bound
jns
mov
xchg
subb
andl
aam
jb
movsb
sahf
popf
sub
mov
das
cmpsb
ja
lods
mov
or
cld
fistl
adc
sub
loopne
fstp
inc
cvtpi2ps
fdivl
fisubrl
mov
and
movsb
jecxz
inc
and
clc
push
in
xacquire
sub
adc
mov
stos
and
lods
or
pop
xor
repnz
mov
push
popl
jbe
lcall
inc
leave
dec
sub
and
xor
jge
pop
pop
shlb
mov
arpl
push
and
pop
stos
mov
sbb
lea
adc
add
js
add
cli
test
adc
sti
fcomps
scas
jecxz
push
fidivs
jo
loopne
repz
scas
daa
les
adc
mov
outsl
jge
loop
or
es
outsb
jnp
inc
adc
dec
cmp
xorb
xor
xchg
inc
cs
jle
call
test
add
test
dec
push
sbb
xor
dec
xorl
push
popa
push
dec
sub
mov
ljmp
or
mov
push
lods
rcrl
jnp
jne
push
in
jg
sbb
aas
jo
mov
cmpsb
out
jp
clc
adc
or
jecxz
and
inc
mov
aas
cmp
xchg
daa
gs
cmpsb
sbb
jne
ret
popf
filds
push
cmp
out
les
testl
cmova
sar
addb
or
inc
mov
sbb
ds
test
cmp
nop
or
and
testb
mov
pop
jl
xchg
rcl
popf
je
xchg
cmp
and
imul
xlat
xchg
in
cmp
movl
cmpsl
mov
sbb
xor
test
call
stos
mov
clc
in
popa
das
add
jp
mov
sbb
or
inc
inc
push
jmp
add
andb
push
adc
jecxz
adc
gs
sub
jno
jp
mov
cmc
sbb
inc
bnd
xor
jmp
add
push
sarl
adc
stos
jmp
popa
push
repnz
push
xlat
cmp
cmp
push
mov
mov
cmpsb
call
lods
sahf
adc
insb
sbbb
aad
in
mov
sub
and
rorl
rclb
mov
jae
adc
inc
sub
cltd
adc
mov
scas
push
sub
aam
daa
inc
mov
pop
inc
aaa
mov
dec
adc
cli
rcll
sbbl
xchg
mov
xor
inc
xor
xchg
inc
call
or
daa
pop
or
jnp
add
aam
cmpl
aad
jecxz
lods
mov
jbe
mov
negl
fnstcw
cltd
je
mov
aam
jns
ljmp
clc
xchg
jge
mulb
incb
sbbb
inc
fs
or
push
mov
fwait
jmp
gs
push
pop
mov
mov
scas
clc
aad
jo
imul
push
aas
bound
mov
rclb
sub
cmp
sti
lret
pop
movsb
out
xchg
in
push
popa
enter
fisubrs
mov
addl
dec
adc
arpl
push
sbb
mov
iret
jo
and
shlb
addr16
je
aam
inc
xor
loop
stos
outsl
push
sbb
cs
cmp
push
xchg
pop
sbb
clc
sub
fmull
and
mov
adc
popa
push
pop
mov
into
outsl
pop
rcll
fnstenv
jg
mov
ret
jo
xor
cli
pop
fwait
adc
add
repz
push
sbb
mov
clts
add
in
mov
dec
pop
add
mov
xlat
out
packssdw
add
sbb
in
xchg
aad
mov
fdivr
std
mov
jl
dec
outsb
je
mov
inc
pop
rcrb
mov
push
mov
sbbl
fistl
scas
or
ficoms
inc
sbb
arpl
clc
mov
outsl
cmp
rorb
inc
mov
jmp
ficoms
xchg
les
inc
fdivrs
shr
sbbb
inc
das
sahf
lods
jg
jbe
movsb
loope
stc
inc
xor
xchg
adc
jae
sub
sbb
xor
setae
movsl
aas
test
pminub
std
test
int
dec
arpl
ficoml
xchg
push
jae
lret
mov
push
popf
push
xlat
lods
out
sbb
inc
add
shl
enter
pxor
or
mov
cmp
sbb
es
je
inc
mov
imul
cli
inc
or
sbb
mov
xchg
mov
lcall
fidivrl
sbb
insb
pop
aas
sub
sub
sub
pusha
pop
push
filds
inc
sub
cmp
sbb
sbb
sbb
xor
xor
idivb
pop
mov
push
push
xchg
inc
mov
into
pop
cmp
cmc
ljmp
outsb
jle
out
add
aaa
ljmp
xor
mov
pop
adc
mov
popa
test
iret
cli
hlt
pop
dec
repz
and
mov
ret
andl
nop
loope
ds
sti
sbb
pushf
xchg
push
fwait
sbb
pop
jle
loop
jp
cmpsb
sarl
add
mov
inc
push
jmp
sbbl
mov
roll
dec
or
push
inc
adc
fmuls
add
xchg
or
adc
mov
push
call
dec
cmpsl
push
inc
or
inc
test
add
inc
js
mov
ret
mov
jnp
xchg
xlat
imul
inc
cmc
lods
jo
jge
addr16
mov
push
xor
in
and
movsl
outsb
and
cwtl
push
cli
dec
jns
mov
je,pn
fmull
movsl
jns
fst
pop
ja
jge
jl
jg
fs
pop
push
push
dec
pop
add
mov
lock
mov
sbb
or
sub
outsb
rclb
xor
fld
sub
lcall
loop
cmpsl
addr16
das
loope
or
pop
shlb
cmp
cmp
jb
add
scas
mov
mov
fbstp
mov
jnp
jno
xchg
push
push
adc
pop
repnz
test
pop
cld
push
mov
jb
inc
adc
or
mov
inc
mov
je
loop
xchg
rclb
jae
xor
adc
dec
addr16
mov
sbb
ja
jle
mov
scas
mov
into
in
adc
pushf
test
push
push
push
fsubrl
xlat
push
pop
ret
jecxz
push
xor
in
and
dec
add
and
std
cmpsb
js
sarl
stc
cmp
imul
loopne
mov
cmp
or
gs
pusha
jmp
test
in
add
pop
xchg
pop
jge
jge
pop
dec
pusha
mov
mov
mov
xchg
adc
in
pop
xchg
roll
aaa
sub
cld
mov
les
mov
jno
clc
xchg
jo
pusha
dec
mov
and
mov
cmp
loop
jne
ss
out
mov
in
jmp
mov
outsb
cmp
cwtl
adc
test
fnsave
pop
mov
movq
addr16
push
shlb
or
xchg
cmp
mov
xor
xchg
dec
movl
cmp
out
test
mov
fnstsw
jl
add
xorl
mov
mov
inc
shrb
aad
or
sbb
jb
inc
jo
pop
popf
adc
out
jle
xchg
pop
popl
mov
cmp
test
les
stos
cmc
mov
iret
xor
inc
lods
xor
mov
xor
adc
xlat
pop
daa
adc
out
pop
sub
call
inc
or
fwait
mov
ja
int
cmp
daa
rcrb
cmp
adc
mov
imul
adcb
lcall
add
fnstenv
sbb
inc
inc
jnp
mov
std
adc
jae
shrl
pop
into
mov
rorl
cli
orl
inc
xor
negl
shl
rclb
pop
and
nop
clc
icebp
ret
sub
and
xchg
xchg
stc
jb
shll
and
xchg
testb
sti
scas
xchg
xor
cltd
clc
fmuls
jmp
pop
icebp
test
setno
jecxz
jno
add
stos
outsl
orb
jecxz
sub
test
addl
arpl
jge
ja
daa
aad
and
loopne
loop
aaa
shlb
pusha
out
lahf
dec
fnstsw
bswap
push
movsb
nop
andb
frstor
insb
inc
das
sbb
ljmp
sbb
repz
cmp
cltd
and
aam
pop
filds
dec
call
test
testb
lcall
push
fs
push
sbb
test
mov
pushf
les
cli
in
push
sub
mov
mov
jp
and
pop
inc
cmp
jo
les
pop
shll
cmc
icebp
dec
fsubrs
mov
jo
adc
sbb
shll
mov
jmp
arpl
rcl
clc
into
into
les
mov
in
xor
or
or
js
pop
mov
es
fwait
or
and
pop
addr16
leave
or
sti
bound
subb
inc
movsb
popf
das
xchg
daa
aam
ss
aad
push
popa
rcrl
sbb
xor
xchg
pop
xor
mov
mov
sar
xor
mov
add
adc
sub
inc
lea
lock
cmp
xor
push
insb
push
mov
mov
dec
ret
xor
cmp
cmc
fprem
mov
loop
adc
xor
and
mov
push
fsubrs
stos
loopne
xchg
cmp
sbb
rolb
push
mov
jns
pop
adc
pop
sbb
jg
fadd
mov
shr
and
rol
sbb
add
sbb
sti
fwait
dec
mov
hlt
or
repnz
mov
mov
mov
mov
outsb
inc
test
jae
clc
cmp
dec
in
fnstenv
pop
push
mov
and
leave
add
or
sub
mov
or
cmp
pop
xor
mov
iret
cwtl
xchg
xchg
mov
sahf
int3
inc
mov
imul
pop
cmp
push
push
gs
add
cmp
loopne
rorb
push
mov
jecxz
stos
lahf
push
roll
das
mov
or
adc
fistps
roll
jp
iret
inc
mov
stc
mov
sahf
lods
mov
shrb
fcomps
lock
ficomps
jmp
sub
sbb
enter
popa
arpl
pop
push
orl
aas
and
push
lret
mov
icebp
push
test
data16
pxor
xlat
mov
mov
clc
notb
mov
loop
enter
xor
mov
hlt
xor
insl
ret
fwait
lock
ja
or
jne
inc
mov
rcll
cmpsl
lods
lock
rclb
scas
xchg
pop
test
add
adc
lret
ret
lock
rcr
fdivs
mov
sbb
xor
inc
adcl
sub
xor
pop
out
sbbl
lret
fidivs
inc
sbb
add
jge
loope
mov
int3
and
sbb
lret
and
lock
cmp
cwtl
ljmp
push
pushw
inc
and
mov
ret
dec
int3
xchg
les
sahf
aam
xrelease
sub
test
das
mov
addr16
sbb
mov
js
rcrb
mov
jae
jns
dec
ds
mov
lock
sub
add
insl
xchg
ss
or
xlat
cmp
and
mov
add
sahf
mov
dec
lret
hlt
test
fldenv
mov
fdivs
in
in
pop
aam
sbb
movsl
mov
mov
xchg
mov
mov
scas
addr16
sub
xor
cmp
popa
ret
push
lds
mov
fwait
mov
clc
mov
push
fdivrl
ret
xchg
and
push
mov
cmp
mov
aad
add
inc
punpckhbw
xchg
daa
xor
add
dec
and
imull
shlb
jns
in
jns
das
mov
ja
int3
shrb
xor
add
hlt
idivb
cmpsl
push
xor
inc
sbb
mov
je
xchg
xchg
inc
adc
sub
mov
adc
clc
shlb
xchg
cmp
add
insb
rcl
xchg
add
mov
add
pop
mov
ss
mov
cwtl
jp
jle
mov
out
sub
mov
scas
jl
sbb
lock
push
jae
xchg
gs
xor
lcall
lcall
jmp
clc
add
popa
loop
mov
sub
pop
js
cli
push
mov
roll
push
mov
pop
push
sub
mov
sub
iret
pop
add
or
xchg
jp
jns
cmp
dec
adc
xchg
sub
and
pop
rclb
sbb
call
mov
cmp
sub
cmp
adc
mov
fsubr
iret
xor
jecxz
xor
xor
out
inc
icebp
outsl
test
in
mov
lcall
adc
add
mov
jecxz
loopne
pop
xor
outsb
sbb
pushf
data16
rorb
dec
out
test
sbb
testb
and
push
mull
cld
les
mov
sub
jmp
xor
loopne
fdivrs
jl
inc
mov
xor
insl
mov
cld
jno
cmp
mov
ss
adc
rclb
test
cmpl
sbb
xchg
cld
fisttpll
dec
hlt
push
sbb
mov
jae
fcoms
fistpl
rcr
add
xchg
mov
xor
pop
add
pop
ds
or
xchg
push
int
dec
aad
imulb
cmp
iret
mov
fisttpll
mov
cmp
dec
enter
loope
cwtl
dec
popf
hlt
fxch
idivl
sbb
fdivr
dec
test
mov
cli
jg
notl
cs
cmp
and
mov
jb
repnz
iret
push
mov
mov
push
pop
mov
sbb
dec
dec
adc
jnp
jns
lea
mov
out
test
and
enter
sub
mov
test
or
mov
xlat
sbb
mov
das
pop
sbb
lods
push
dec
add
dec
jmp
add
shufps
jb
and
jo
icebp
mov
nop
sub
mov
inc
mov
xchg
xor
fbld
jp
imull
inc
test
sub
jbe
in
adc
outsb
ret
gs
in
loope
add
subb
outsl
push
push
pop
and
mov
sbb
jl
mov
pop
push
and
popa
aas
cmpl
cmp
dec
in
in
daa
jle
mov
fstpl
dec
jbe
cmp
push
inc
add
ljmp
scas
ljmp
ds
sub
ret
cltd
fwait
outsb
mov
mov
push
sub
fwait
pop
mov
inc
add
arpl
inc
stc
dec
lret
push
sbb
mov
push
xor
and
mov
in
aaa
pop
add
mov
dec
in
push
jle
mov
aaa
pavgb
insb
sbb
fdivrs
add
mov
shrl
inc
jb
movsl
xchg
xchg
mov
pop
cmp
sbb
pushf
mov
fwait
push
lods
xchg
into
mov
push
mov
cmp
sbb
adc
or
int
xor
xor
fcomp
pop
xlat
adc
sub
push
lods
dec
xor
je
push
sbb
call
std
inc
mov
mov
cli
push
cmp
mov
sarl
mov
add
mov
mov
mov
mov
mov
inc
push
frstor
ffreep
pop
les
data16
add
jns
addl
xor
xchg
cmpsb
mov
pop
je
in
pop
rolb
dec
sbb
sahf
fstl
jge
adc
or
jno
test
aad
test
or
and
ljmp
xchg
push
adc
shll
outsl
loop
push
xor
loop
fnstcw
mov
shll
push
test
xorl
pusha
sub
fcomip
sbb
fstpt
add
add
inc
xor
notl
xor
add
cmp
dec
xor
mov
sub
ja
lea
cmp
bound
fmull
adc
xchg
xchg
sub
pop
add
insb
sahf
push
in
and
xor
xor
push
scas
test
stos
test
cld
lock
sbb
mov
cmc
addr16
shl
jecxz
or
mov
pop
sbb
pusha
jg
inc
cmp
icebp
push
addl
inc
fiaddl
cmc
cmc
fcoms
aaa
imul
andl
push
and
repz
cmp
sbb
js
jnp
adc
pop
lcall
insb
shrl
xor
adc
stc
sub
and
jl
negl
jo
push
or
mov
mov
xor
test
cwtl
in
push
arpl
outsl
cwtl
or
test
pop
cwtl
iret
cwtl
pushl
stos
call
mov
movsb
push
push
xchg
add
rcll
sbb
das
ficoms
dec
test
fcoml
icebp
dec
pop
mov
inc
mov
xor
shrl
cmp
adc
jle
decl
sub
sbb
fildl
lods
test
cmpsb
inc
push
push
ja
mov
aaa
fisttpll
fdivl
pop
aad
call
mov
cmpsb
in
pop
sbb
aam
in
cwtl
mov
notl
xchg
sbb
xchg
cs
mov
pop
add
loope
hlt
into
pop
mov
cmp
dec
outsl
inc
dec
xor
push
stos
mov
adc
rcl
sub
xchg
jge
xorb
cmpsl
jl
adc
dec
icebp
pop
sbb
clc
adc
pop
mov
mov
xor
mov
fcompl
movsl
stos
shll
mov
rorl
inc
ret
std
into
or
xchg
hlt
xchg
pop
mov
xlat
cmp
mov
mov
sub
ljmp
or
push
xchg
pop
cli
dec
clc
call
cmpsl
xor
sub
loope
add
loopne
dec
sbb
fcmovnb
sbb
and
pop
or
ss
mov
mov
rcll
loop
xlat
xlat
jbe
mov
enter
jmp
jno
push
sahf
aas
mov
and
mov
sbb
and
stc
mov
arpl
mov
sub
xchg
inc
fildll
cmpsl
lods
addl
jo
sbb
int3
scas
cmp
lea
ljmp
aam
shrb
iret
jb
pop
mov
js
xor
cmp
aad
andb
lock
mov
mov
and
sub
fisubrl
stos
stos
aas
jbe
push
add
movsl
addb
cs
adc
pop
push
inc
jp
aas
fistpll
subl
shrl
sub
pop
xlat
xor
lock
scas
mov
lahf
xor
clc
ja
adc
cli
add
sbb
in
popa
inc
mov
mov
bound
cmp
jo
pushl
pusha
sub
xchg
aas
inc
xor
fistps
jl
push
xchg
in
ret
inc
mov
stos
insl
dec
adc
or
test
xchg
movsb
ss
inc
insl
call
repz
xchg
imul
push
pop
mov
mov
mov
push
shl
adc
mov
cli
sti
in
or
jno
shll
or
sbb
jo
push
push
js
push
dec
xchg
fildll
and
pop
dec
cmp
fldl
xchg
cld
pop
inc
add
enter
push
ret
add
das
xor
sbb
mov
scas
and
xchg
iret
or
mov
nop
sub
les
pop
mov
and
mov
sbb
cltd
push
test
lar
in
lea
inc
adc
inc
shll
int
pop
cmpsl
dec
mov
pop
jbe
adc
pop
jle
mov
cs
pusha
out
cmp
inc
sub
adc
clc
aad
xor
sti
shr
and
xor
push
dec
aas
fwait
dec
loopne
mov
xchg
mov
push
outsb
sub
js
dec
shl
stc
or
insl
ret
mov
repz
data16
dec
and
hlt
inc
scas
gs
mov
movsl
arpl
or
mov
insl
movsb
mov
icebp
sub
cmpsb
inc
mov
fdivs
adc
scas
jg
or
repz
ljmp
and
mov
pop
inc
outsl
sub
jbe
cmp
loop
lds
enter
lock
ds
cmc
xchg
xchg
xchg
adc
push
in
notb
out
mov
je
ljmp
loopne
jns
inc
push
dec
xchg
je
jne
arpl
lock
mov
cs
adc
daa
jne
or
add
jb
adc
xchg
ds
lret
mov
fwait
jo
leave
stos
addl
jb
sub
add
les
sbb
sahf
sbb
lods
jb
xor
xor
aad
cmc
xor
xor
scas
jbe
add
out
cli
mov
stos
fisttps
dec
push
cld
mov
add
mov
mov
inc
je
mov
xchg
add
ds
fists
push
insl
sub
cltd
jbe
sub
aad
or
lock
mulb
sbb
mov
or
adc
jmp
popf
pop
repz
rcll
mov
pop
lods
jnp
lods
or
imul
push
dec
add
clc
mov
jle
fimull
adc
loop
sbb
mov
sub
cwtl
inc
xchg
cmp
mov
push
push
lret
cld
cmpsl
cmp
pop
leave
mov
xchg
es
fistl
fcoml
adc
sti
push
sbb
or
bound
insl
mov
mov
mov
sbb
clc
sub
fimuls
lret
jle
mov
daa
rcrb
jno
adc
adcb
lods
out
inc
cld
xor
ja
icebp
jge
lea
iret
out
lahf
mov
mov
sub
xchg
mov
popa
add
sbb
subb
bound
mov
sbb
test
gs
int
adcl
add
nop
push
sub
dec
ret
push
je
sbb
mov
lea
int3
jbe
or
arpl
push
lock
mov
pop
cmp
lcall
push
push
mov
ljmp
outsb
arpl
pop
out
js
icebp
fcoml
daa
das
jge
cmpsb
xchg
cwtl
dec
call
sbbl
jl
or
clc
shll
push
inc
cmp
push
jl
aad
popf
sbb
lock
out
into
xor
xor
inc
frstor
dec
jb
call
xor
inc
lds
repz
call
shrb
wbinvd
mov
psubd
mov
incb
add
imul
mov
cmp
test
fwait
cmp
cmp
ljmp
inc
in
jno
mov
pop
inc
pusha
fs
jge
push
jae
pop
adc
mov
pop
dec
xor
loopne
pushf
adc
sub
int
outsb
hlt
icebp
shll
rclb
fdivrs
or
cmpsb
or
movsl
inc
push
add
sub
das
das
inc
hlt
stos
cmp
ds
add
push
stos
pop
jge
stos
stos
pop
adc
jmp
inc
popf
push
dec
orb
cli
adc
in
dec
dec
or
xlat
movsl
fistps
xchg
mov
arpl
xchg
popa
pushf
pop
pop
pop
pop
insb
xor
lea
cmp
lahf
mov
adc
fwait
sbb
in
push
xor
mov
or
in
mov
addb
push
sbb
xor
or
loop
push
out
push
mov
pop
jno
loope
xor
dec
or
pop
jb
sbb
inc
std
mov
jnp
ret
sahf
jge
movsl
push
scas
and
xor
rol
add
mov
lcall
test
inc
sarb
subb
jae
jge
xor
mov
jo
mov
icebp
xor
fnstsw
jle
mov
iret
jmp
mov
adcb
add
fsubrs
inc
cli
aad
xlat
dec
sub
lahf
popf
mov
sub
push
call
inc
js
lret
xorl
adc
data16
ret
dec
adc
mov
push
adc
push
push
enter
mov
xor
stos
jnp
lahf
call
nop
adc
sub
call
mov
stos
bswap
sub
xor
ds
sbb
or
inc
in
push
decl
sub
out
subb
jo
adc
sub
lret
pop
cmp
lds
ss
adc
jbe
movsb
dec
imul
lods
xchg
orb
dec
popa
fs
and
jp
jle
sbb
and
mov
dec
scas
icebp
std
push
push
es
mwaitx
movsl
push
test
js
arpl
mov
mov
pushf
and
test
test
inc
xchg
pop
push
inc
pop
xor
in
arpl
inc
dec
movd
mov
sbb
insl
mov
aaa
bound
iret
ret
cmp
dec
mov
insb
ljmp
sarb
add
add
push
pextrw
lods
push
xor
xor
or
xchg
add
icebp
sbb
fadd
add
out
mov
mov
adc
lcall
jb
fsubrp
mov
fildl
jmp
lock
adc
addr16
daa
mov
push
jno
xchg
test
adc
sbb
test
scas
sbb
and
lret
inc
jge
mov
sub
and
test
xlat
in
lret
into
mov
push
mov
jno
mov
test
iret
std
mov
sbb
out
jns
xchg
icebp
icebp
dec
pop
andl
divl
fscale
lret
xchg
fwait
gs
js
jl
mov
mov
mov
xchg
sbb
push
imul
sbbl
adc
cmp
cmp
cmp
cmpsl
adc
fists
adc
adc
or
ret
pop
or
sbb
add
xchg
fimuls
sub
fimuls
cs
fwait
js
jno
fnstcw
ret
mov
stc
jns
lret
mov
lods
mov
and
das
mov
in
pop
mov
adc
dec
mov
inc
mov
fwait
push
out
jae
cmp
jp
add
mov
ss
inc
es
dec
icebp
add
cli
jno
push
es
pop
jmp
mov
pop
loopne
jo
loope
daa
mov
sti
insb
ficoms
sub
lock
out
mov
call
stos
popf
aad
adc
cmp
jno
dec
sbb
xchg
add
jecxz
cmp
cltd
or
popf
dec
imul
mov
adc
leave
inc
cmp
or
jnp
mov
fbld
test
jmp
xchg
les
dec
loopne
outsb
or
je
xchg
push
or
push
or
sub
insb
das
icebp
js
push
adc
data16
out
push
mov
sti
cmc
nop
cmpsl
dec
add
stos
out
test
mov
popa
xchg
minps
pop
cmpsl
dec
rclb
xchg
inc
inc
scas
frstor
sub
cmp
dec
sbb
pop
mov
lcall
pusha
ja
popf
dec
out
rcr
lock
or
aaa
stos
movsl
sbb
mov
push
testl
in
inc
ret
subb
xchg
negl
mov
fsubs
daa
xchg
lods
cmpsb
outsb
clc
pusha
popa
cmc
icebp
jle
or
leave
mov
xchg
sti
icebp
push
mov
ljmp
push
dec
push
fildl
loop
inc
mov
div
roll
sbb
xchg
mov
mov
push
cmp
fdivl
pop
mov
mov
inc
int3
push
imul
sbb
mov
pop
bound
mov
jg
mov
rclb
cmp
jnp
int
stc
push
mov
out
and
call
int
sbb
pop
xchg
jbe,pn
mov
testb
mov
sbb
fisubl
cltd
xchg
movsl
dec
or
fucom
cwtl
xchg
clc
pop
mov
cltd
mov
pop
sarb
mov
xchg
insb
xor
ds
jo
cmp
xchg
mov
inc
jl
jge
xchg
and
mov
enter
faddl
ss
shll
loop
add
je
add
xor
loope
jle
pop
xchg
push
jmp
gs
jle
or
mov
decb
or
and
shrb
call
stc
lods
cmc
or
aam
xchg
push
les
mov
std
mov
mov
cmp
call
jns
test
das
jbe
imul
loope
js
cmp
dec
inc
and
or
dec
in
lods
sub
mov
movsl
in
add
shr
mov
xchg
or
pop
pop
cmp
mov
push
adc
jl
mov
das
es
call
in
nop
push
pop
roll
push
jle
add
mov
push
jecxz
xchg
sbb
dec
js
cld
sarb
sub
rep
mov
fbstp
sbb
lahf
iret
lahf
mov
je
mov
mov
pop
dec
movsb
xor
mov
dec
and
addr16
aam
push
pop
push
jge
sbb
bound
push
inc
scas
jl
fisubl
subl
jae
popa
or
jmp
imull
jbe
hlt
adc
iret
inc
movsl
int
and
xor
mov
jbe
adc
xor
out
push
mov
jle
inc
je
jb
add
add
or
dec
insl
cmp
outsl
add
aad
test
push
daa
lds
push
mov
ss
sbb
mov
jno
outsl
inc
rcll
adc
jo
je
fwait
gs
leave
push
push
sahf
mov
outsl
leave
in
cmp
push
cld
cmp
or
pop
pop
pop
cs
mov
push
lahf
es
adc
ds
out
mov
or
mov
arpl
and
pop
or
inc
pop
js
call
dec
xchg
mov
cmp
lods
ja
fcomps
lfs
mov
incl
mov
fidivs
repnz
orb
fildll
cmpsl
pop
and
imul
xor
out
pusha
andl
jo
lock
xchg
insb
sbb
sbb
jns
lcall
loop
add
jg
pop
test
jne
test
into
and
jp
call
mov
cmp
dec
lahf
dec
inc
stc
lahf
inc
and
shlb
popf
xlat
add
inc
dec
sahf
enter
xchg
call
jl
arpl
jle
out
loopne
dec
pop
push
lahf
movl
mov
loop
fdivs
sub
push
loopne
vmaxpd
push
into
das
ljmp
mov
mov
sbb
add
in
cmpsl
jle
stc
loop
sbb
jge
or
inc
push
addr16
ret
inc
pop
cwtl
cmp
push
dec
cli
add
inc
test
cmc
pop
fsubrs
xchg
inc
mov
mov
in
outsl
jno
mov
pop
sub
lock
fistpl
lret
clc
sahf
push
mov
sbb
cmp
clc
xchg
sbb
dec
outsb
bound
and
insl
inc
lock
push
out
inc
aam
ficoms
and
jbe
mov
jno
idivl
jne
into
or
inc
or
iret
clc
cmpsb
dec
jno
sub
leave
call
xor
lcall
jp
inc
mov
fldt
mov
inc
adc
jl
rorl
mov
xchg
xor
hlt
push
xsaves
dec
int
ret
jbe
xchg
sahf
and
add
mov
jne
sub
cs
inc
mov
sub
jne
cltd
pop
frstor
pop
inc
cltd
icebp
add
pop
pop
pop
out
sub
xor
insl
push
ja
test
jge
xchg
sahf
cs
movsl
cmp
mov
push
sarl
pop
das
add
mov
cmp
cmpsl
leave
xor
add
fwait
push
loop
pop
js
add
call
sub
pop
lock
cmc
add
stos
sbb
fstl
cmp
test
sbb
imul
aaa
xchg
push
subl
das
jb
sbb
sti
jmp
mov
pop
cmp
inc
pop
or
iret
jl
lret
hlt
cmp
pop
aad
mov
shlb
add
divb
pop
adc
cmpl
out
test
in
sub
js
and
xchg
in
js
lret
inc
adc
test
pop
fidivrl
cmp
and
dec
cld
fimull
mov
popa
out
push
xchg
clc
insb
mov
sbb
sbb
fidivl
into
ja
lods
popl
or
xchg
sub
aam
dec
cmpxchg8b
loopne
fs
fwait
dec
jg
aas
sbb
test
das
mov
xchg
add
cmpsl
and
insb
inc
cmp
ret
movsb
out
ret
in
and
test
lods
cwtl
jne
clc
jb
xor
bound
adc
int3
dec
mov
dec
push
inc
test
ss
enter
bound
in
sbbl
iret
jmp
sti
pop
xlat
dec
pop
jg
mov
mov
jl
je
mov
push
xor
or
add
rcll
andb
push
adc
jb
dec
xor
ss
pop
scas
orb
and
je
mov
insl
push
mov
sub
and
fisttpl
call
movsb
xor
jbe
push
mov
int3
dec
mov
sbb
shll
cmp
in
lret
loopne
fsubl
inc
and
sbb
call
lahf
mov
mov
out
roll
pop
xchg
ret
repz
dec
mov
movsl
lock
mov
aam
notb
ds
pop
movsb
adc
shl
cmp
lret
push
inc
into
loopne
hlt
scas
subl
sub
push
pop
sbb
mov
mov
or
pop
fcmovb
jmp
stos
push
mov
mov
lds
popf
adc
cmp
or
loop
adc
rcrl
push
mov
arpl
sub
push
and
cli
shrb
dec
pop
jo
inc
xor
adc
inc
aam
mov
pop
fstps
outsl
xchg
loop
fisubrl
pop
mov
sti
push
shlb
test
add
adc
shll
imulb
sbb
jo
cs
mov
loop
jp
xlat
sub
jmp
mov
mov
js
fmull
inc
mov
fwait
pop
xchg
ret
aam
mov
in
shrl
mov
shl
lock
add
rcrl
je
cmc
movsb
loopne
and
sbb
sahf
cli
mov
push
pop
adc
or
lods
pop
shlb
test
mov
loope
call
fs
sbb
cld
sbb
jmp
mov
add
out
rorb
adc
xorl
adc
stos
or
lock
cld
push
and
or
add
cmpl
call
dec
cmpsb
add
inc
repz
pushf
test
xchg
pop
insb
and
xchg
pop
hlt
int
sbb
pop
ficomps
data16
call
shlb
inc
mov
pop
cli
cmp
ss
outsb
jg
stos
push
fnsave
loopne
call
je
or
ret
lcall
fdivrp
lcall
dec
cmpsl
je
outsb
sub
dec
cmp
push
sbb
test
sub
aas
call
jo
fidivs
ret
clc
andb
cmp
shr
jmp
shlb
adc
mov
mov
je
sarb
cmp
mov
add
rolb
arpl
mov
mov
clc
mov
movl
outsb
int
dec
mov
lahf
inc
xchg
aam
shll
js
mov
sti
ficoms
jbe
nop
jno
pop
mov
shr
icebp
mov
adc
enter
pop
aaa
inc
in
lret
test
loop
add
dec
ret
dec
sbb
leave
loope
mov
mov
iret
imul
xlat
jb
cs
push
mov
xor
mov
addr16
das
insl
aas
out
fildll
adc
mov
repz
lods
jl
ffree
cmp
popl
gs
aaa
pop
fbld
movsb
sub
cwtl
movsb
cmc
jl
psubb
inc
cmpsl
mov
in
mov
jmp
loope
xor
test
mov
xorl
inc
add
mov
pushf
test
push
pop
loop
push
mov
stc
cwtl
nop
sbb
lds
xor
test
cmc
sahf
add
pop
xchg
fwait
push
cs
cwtl
and
jae
hlt
inc
mov
or
addb
adc
mov
sub
lock
loop
inc
aam
outsl
pushf
push
push
jns
adc
js
pusha
xchg
or
sub
stos
push
lock
xchg
loop
cli
clc
testb
push
js,pt
sti
mov
xor
stos
fiaddl
and
inc
shlb
hlt
push
jne
subb
push
dec
call
adc
xchg
xor
lea
mov
push
fwait
jmp
repz
lea
push
mov
in
add
add
outsl
push
pop
cmp
je
pand
call
out
push
dec
iret
fsubrl
pop
push
pusha
xchg
fucomp
sbbl
adc
test
test
add
inc
ljmp
les
cmpsl
cmpsl
ret
aas
cmp
jmp
cmpsl
lahf
test
cmpsl
sub
sbb
cmpsl
stos
bound
jle
adc
mov
jae
shrl
js
push
inc
test
xor
icebp
mov
xchg
popf
adcl
fsubl
sub
cmp
test
dec
hlt
pop
mov
pop
imul
sti
xlat
xchg
sbb
xchg
aas
rorl
mov
jp
out
repnz
push
jns
call
xorb
dec
popa
cmp
insb
pusha
push
sti
xchg
or
les
roll
mov
ds
int3
pop
jbe
fcoms
mov
xchg
dec
iret
adc
and
sbbl
fwait
pop
nop
mov
rcr
push
mov
cmpsl
stos
addr16
gs
or
mov
sub
scas
cmp
aaa
outsb
insb
in
jnp
fcoml
xor
inc
imul
jne
inc
sbb
pop
mov
inc
repz
hlt
stc
out
jecxz
pop
pop
mov
adc
fsubrs
mov
in
adc
mov
inc
pop
insb
les
subb
sbb
mov
shll
addr16
push
loope
sbb
cwtl
mov
movsb
xlat
jg
jne
cld
xchg
mov
dec
push
mov
mov
pop
fs
lods
ja
shll
ja
lock
hlt
arpl
fucomip
sbbb
xor
mov
pop
aaa
int
or
inc
xlat
sbb
lahf
bound
ds
sbb
bound
xadd
call
cmp
pop
setae
pop
mov
scas
mov
loopne
lahf
in
jp
and
test
push
xor
std
xchg
push
loopne
add
push
arpl
mov
inc
jl
cli
clc
mov
aam
lock
push
ret
das
iret
sub
hlt
pop
mov
add
lret
js
outsb
mov
add
push
insb
dec
shlb
loop
lds
je
pop
scas
push
scas
pop
out
addr16
inc
mov
test
jmp
inc
and
cwtl
push
push
or
inc
aam
cmp
sbb
inc
xchg
push
pop
mov
roll
je
mull
ljmp
sbb
xchg
js
mov
call
push
test
clc
pop
xchg
lcall
mov
js
adc
add
sahf
cld
cmpsb
adc
jbe
push
nop
mov
stos
mov
ljmp
enter
lods
insb
iret
daa
inc
dec
jmp
pop
inc
imul
or
mov
mov
fdivrl
imul
sarl
cmp
nop
xchg
ret
fmull
dec
pop
hlt
cmc
fwait
int3
mov
in
mov
push
adc
aaa
outsb
pushf
inc
xor
inc
repnz
stc
ret
dec
xchg
ss
mov
sub
push
cmp
sub
lea
in
notb
mov
adc
or
or
in
js
xor
or
loop
jle
push
push
das
push
roll
xor
inc
mov
fcmovnb
mov
lahf
subb
mov
jne
loope
imul
pushf
cmpsl
xchg
xor
or
stos
pusha
int3
push
mov
pop
clc
push
dec
addb
lcall
xor
push
xor
sub
inc
cmc
inc
test
adc
adc
mov
push
mov
or
lods
cmp
jbe
jmp
mov
cltd
add
idivb
dec
sti
lret
xchg
xchg
in
loop
xlat
lods
mov
sub
cmp
in
push
lds
push
xor
dec
pand
inc
cwtl
inc
push
xor
sub
outsb
nop
ret
and
mov
adc
xor
fwait
cli
test
xchg
or
ljmp
mov
xor
or
ret
pop
rclb
jp
mov
aaa
push
inc
or
icebp
test
mov
loope
push
pop
cmp
jne
call
xor
shl
loopne
inc
shr
cltd
pop
jo
push
mov
pop
xchg
mov
xor
mov
push
inc
xor
and
xchg
push
mov
pop
icebp
jno
daa
ss
sub
aaa
std
pmuludq
pop
add
iret
add
or
push
lock
pop
sahf
ret
sub
pop
cltd
mov
push
adc
mov
pop
rorl
pop
test
fbld
loop
inc
arpl
jge
jb
loope
out
adc
mov
pop
std
les
pop
mov
cmp
push
mov
into
cmpsb
dec
lcall
fisttpll
xchg
dec
insb
outsl
xchg
add
mov
inc
dec
push
mov
inc
loopne
push
cmp
xor
scas
test
loope
fcomi
push
pop
data16
inc
mov
lea
push
and
mov
xchg
add
cmp
sub
aad
xlat
jge
jle
push
xchg
nop
mov
push
dec
sbb
ret
and
cmp
imul
cmp
pop
aam
mov
lret
adc
or
or
xor
cmp
pusha
jecxz
mov
inc
or
add
out
mov
imul
push
xor
sbb
loop
loope
cmp
or
pop
shr
adc
xor
xchg
jp
sbb
hlt
adc
andb
mov
icebp
or
scas
sub
ja
sbb
divl
fiaddl
adc
scas
or
les
push
mov
or
jmp
jo
fdivp
sahf
cmp
pop
add
mov
jbe
ja
pusha
push
pop
mov
mov
call
cltd
in
lea
push
repnz
mov
clc
lock
lahf
jl
lds
ret
sub
cmp
pusha
xchg
aas
add
cmp
leave
sub
sbb
scas
movsb
popa
and
clc
cli
adc
sti
imul
lahf
mov
cld
inc
ret
pop
add
sbb
scas
test
ret
jae
mov
xor
repnz
je
sbb
aam
std
push
sub
ds
jb
sbb
fiaddl
pop
push
sub
movsl
test
mov
xor
movsl
dec
jne
enter
imul
js
nop
add
push
ficoml
push
clc
push
inc
clc
xor
loope
dec
popf
test
sbb
lret
mov
dec
rorb
add
lahf
outsl
fwait
jp
test
pop
inc
mov
cld
dec
fisttpll
clc
xor
int
stc
int
mov
xlat
cmp
jp
and
sub
push
mov
stos
inc
insb
pop
and
lods
arpl
dec
mov
add
iret
xchg
int
fistpl
push
je
loop
sbbb
shll
mov
daa
outsb
lock
mov
out
pop
sbb
add
ss
pop
push
inc
mov
movl
adc
push
loop
xor
jmp
push
xchg
inc
scas
and
cmp
int
inc
push
push
stos
jp
mov
inc
push
xor
sbb
xor
dec
fnstenv
push
add
or
xchg
fistl
aaa
je
jecxz
dec
sbb
loop
mov
cltd
or
dec
cmp
popa
inc
clc
mov
jb
sbb
stos
jbe
mov
push
push
insb
pop
roll
mov
fisubrs
hlt
adc
mov
mov
icebp
test
and
fdivrl
inc
jne
mov
call
sbb
or
jp
push
sub
out
mov
sarb
xor
fwait
cmp
mov
mov
jae
scas
mov
cltd
ss
sti
add
mov
out
jmp
ds
shlb
cli
mov
fucomi
adc
out
add
fcomps
scas
lret
js
test
dec
jl
mov
andl
gs
fnsave
inc
loope
adc
nop
gs
adc
cmpsl
mov
or
inc
inc
test
jl
roll
xlat
xchg
mov
repnz
jmp
mov
std
dec
sub
and
fidivrl
jo
xlat
pop
jns
sar
mov
test
outsb
cmp
test
push
in
in
mov
mov
in
fcom
xor
shr
jl
pop
imul
ficoms
mov
nop
rorl
fcmovnbe
mov
inc
insl
push
call
popa
add
adc
ljmp
lret
insl
js
inc
mov
adcl
jb
xor
mov
sbb
mov
inc
test
sbb
fadd
pop
mov
push
xor
js
in
bts
xchg
wbinvd
ja
dec
shlb
cmp
test
insl
call
in
cli
loop
repnz
pop
adc
lcall
or
jg
and
shl
inc
test
faddl
push
sarb
pop
fldl
les
inc
jnp,pn
aad
sbb
jne
add
sbb
imul
mov
loop
jbe
mov
mov
or
sbb
mov
inc
sbb
pop
cwtl
stc
mov
fisubs
push
fildl
dec
and
cmpsb
and
and
mov
ja
lret
jmp
shrb
jbe
sub
cmovb
iret
cmp
mov
adc
and
icebp
call
jg
push
inc
insb
add
out
jg
in
push
xchg
mov
adc
push
aaa
ljmp
dec
pop
mov
inc
in
add
add
mov
add
pop
ficoml
arpl
inc
jae
nop
cmpsl
and
inc
dec
test
push
xor
push
js
xchg
pop
call
sti
aas
imul
or
sbb
addb
dec
pop
sub
cs
dec
iret
in
icebp
cmp
ja
mov
or
jle
sub
mov
and
add
leave
ljmp
dec
js
add
mov
icebp
fdivl
pop
ret
mov
aam
sub
sbb
xor
aas
stos
mov
ja
xor
adc
xchg
outsl
adc
pop
lock
add
and
mov
scas
sbbb
pop
sbb
mov
mov
test
push
lods
out
addb
lods
push
aas
cmpl
orb
nop
aam
je
out
mov
insl
insb
mov
adc
add
mov
arpl
test
sbb
pop
call
xor
lds
xchg
mov
or
xchg
aad
cmp
xor
adc
sarb
cltd
popa
enter
sub
cmpsl
push
loopne
or
push
andb
or
or
adc
and
jl
aas
mov
test
sar
mov
xchg
xor
nop
test
cmp
inc
call
ret
out
push
mov
dec
dec
mov
sbb
xchg
clc
mov
outsb
jnp
adc
sub
pop
mov
push
lea
lret
push
push
shlb
inc
add
mov
call
add
mov
sbb
dec
add
xchg
shr
pop
clc
stc
xor
dec
push
dec
jb
clc
inc
adc
mov
cmp
aaa
push
imul
inc
xchg
mov
es
ljmp
xorl
jg
sbb
mov
push
push
mov
cld
adc
jle
mov
sbb
jge
repz
cmp
mov
fisubrl
dec
dec
ds
cmp
jecxz
mov
add
fwait
add
mov
adc
stos
mov
push
lock
push
jns
fucom
ret
xor
jo
pop
pusha
jne
sti
hlt
inc
push
fcoml
in
sub
loop
std
xchg
xlat
stc
test
and
dec
lea
lret
inc
popf
jmp
pop
stos
in
cld
roll
pop
stos
setbe
jns
sub
test
in
adc
adc
pop
mov
push
xchg
rcll
xchg
pop
nop
lock
pusha
add
jmp
insb
inc
aad
repnz
popf
loopne
push
mov
ljmp
es
ror
loopne
daa
adc
sahf
mov
or
sub
mov
ret
sub
push
cmp
inc
and
ss
lods
sub
push
or
inc
into
out
clc
in
pop
or
lods
dec
dec
jmp
sub
jae
mov
push
imul
dec
bound
ss
sub
fidivs
sub
hlt
loopne
cmpsb
push
lahf
lcall
test
or
popa
das
fwait
test
xchg
aas
sbbl
aad
inc
std
aam
xor
mov
or
test
je
mov
mov
sbb
mov
ja
popf
mov
fcomp
fcomip
lea
frstor
pop
pop
mov
adc
cmp
inc
and
daa
mov
ja
add
rcrl
imul
mov
dec
inc
outsl
pop
mov
jae
push
je
fdivs
loop
jmp
and
rorl
add
fcmovne
js
je
cmc
inc
sbb
sub
pop
pop
mov
dec
mov
jb
sahf
aaa
in
mov
std
xchg
mov
and
inc
popf
mov
cmp
int
mov
hlt
dec
push
loope
jmp
in
pop
or
repnz
cmc
cs
dec
mov
sub
or
lock
or
mov
lods
or
ret
ljmp
mov
and
jno
out
js
arpl
cmp
fildl
hlt
arpl
cmp
or
mov
cltd
aam
jbe
icebp
ds
inc
cmp
sbb
lahf
insb
cmpsb
xor
cmc
dec
lods
inc
inc
or
inc
inc
mov
inc
outsl
mov
test
xchg
rclb
cmp
bound
les
mov
sti
or
dec
aas
lea
cmp
push
jo
movsb
mov
daa
add
fs
in
or
addb
xlat
add
dec
mov
add
push
inc
jge
add
sbb
pop
lods
mov
sti
movsb
mov
in
mov
sub
push
out
pusha
arpl
adc
cmpsb
cmp
and
popf
mov
in
sbb
jo
adc
pop
dec
fs
js
mov
adc
sbb
adc
jmp
das
jecxz
dec
xor
leave
rorl
xor
outsb
nop
xor
ja
out
mov
dec
fdiv
mov
test
inc
sub
shrl
mov
stc
add
push
stos
sar
popl
inc
lock
cs
jae
sbb
sub
cmp
inc
mov
ficoms
or
addr16
test
dec
fidivs
adc
movsb
ss
mov
sbb
iret
inc
mov
imull
inc
scas
sbbl
lock
jmp
xorb
jne
jmp
and
imul
inc
xor
cmp
push
jae
or
xor
inc
pop
ja
dec
push
hlt
hlt
aad
push
movsb
loopne
push
stos
int3
sbb
mov
daa
adc
lret
and
dec
repz
out
dec
mov
mov
flds
dec
lods
mov
testl
je
inc
mov
stos
or
inc
jne
notb
insb
shll
jmp
mov
mov
movhps
inc
jno
cs
add
sarl
mov
arpl
fwait
cmp
mov
faddl
clc
ss
fidivrs
mov
inc
leave
fmul
insl
xlat
jb
test
mov
enter
xchg
jno
mov
push
iret
pop
ss
loopne
popa
in
mov
in
fstl
js
nopl
cmc
fwait
add
adc
push
cmp
int3
mov
orl
cmp
push
pop
or
loop
adc
mov
insl
mov
ds
and
adc
notl
and
js
in
xor
and
pop
adc
int
mov
aas
das
rol
jo
out
adc
clc
mov
out
mov
rcll
mov
outsb
fwait
test
lds
test
ret
add
test
push
ljmp
and
pop
sbb
std
and
cli
mov
stc
mov
mov
jge
aad
mov
scas
imul
mov
or
mov
sub
and
xchg
rolb
push
mov
iret
fsub
lods
sbb
push
mov
mov
fwait
pop
arpl
xchg
inc
call
aaa
test
in
lcall
push
leave
sbb
jge
mov
xor
or
arpl
push
das
repz
sub
loopne
push
lock
xchg
popl
push
mov
adc
cmc
dec
rcl
scas
scas
pop
je
mov
jp
test
jbe
clc
divl
shl
test
and
popa
pusha
inc
ss
cmp
push
push
dec
push
pop
or
xchg
xchg
sub
add
stos
cltd
xchg
push
stos
cmc
mov
cli
xor
fadds
inc
arpl
cwtl
jge
or
loope
jge
jp
test
push
sub
out
add
hlt
cmp
pushf
shlb
ftst
mov
sub
gs
xor
insb
dec
cmp
incb
daa
dec
les
mov
pop
and
sahf
sbb
inc
pop
dec
insb
mov
ljmp
push
in
dec
aad
inc
mov
icebp
clc
aas
inc
mov
adc
and
in
xchg
js
or
dec
insl
pop
dec
aas
mov
sahf
add
inc
add
xor
jp
or
lds
jecxz
mov
mov
sbb
add
jne
or
inc
xor
movsb
inc
insb
jno
je
inc
lea
inc
xchg
inc
das
add
fstpt
xchg
inc
mov
jge
sub
icebp
scas
aam
xor
insb
je
testb
iret
ds
cmp
loop
ret
or
mov
bound
fwait
ds
out
ds
inc
enter
subb
sub
arpl
mov
dec
jmp
ret
jg
das
ret
popa
or
sub
andb
and
inc
clc
call
int3
adc
jmp
inc
cwtl
pop
add
aam
cwtl
arpl
lgs
in
rorl
dec
mov
rcrl
les
in
add
or
iret
mov
inc
dec
jb
jne
adc
jbe
push
shll
aad
inc
sub
jge
ss
ljmp
test
stos
pop
add
push
sbb
mov
cmp
pop
faddp
cmp
push
xor
jmp
in
cmp
push
push
push
leave
sub
add
inc
pmulhuw
jae
fdivrp
fldpi
es
mov
or
lods
pop
inc
sbb
dec
addr16
jmp
notl
cmp
or
mov
xchg
jbe
adc
adc
cmp
shr
sub
mov
ljmp
pop
pop
bound
dec
pop
shlb
movsl
outsl
fiadds
fisubl
cmp
ret
into
push
out
push
test
testb
sub
lds
popa
clc
lds
arpl
std
push
fdivrs
fisttps
sub
add
mov
arpl
enter
push
dec
and
cmpsb
mov
push
adc
adcl
dec
hlt
repz
iret
mov
sub
sub
dec
push
xor
push
pop
je
out
add
mov
test
jae
xlat
sahf
pop
sbb
xchg
xchg
lds
push
shll
subb
mov
js
pop
adc
push
shll
std
imul
pcmpeqb
sti
in
inc
xchg
dec
lods
mov
mov
stos
pop
in
xchg
dec
jl
pop
or
and
rolb
mov
jg
repnz
sbb
lret
and
xchg
pop
add
pop
shl
jl
mov
scas
enter
ret
mov
stos
pop
fidivl
shrl
lcall
fs
jno
inc
outsb
ret
outsb
loope
testb
push
ja
mov
mov
mov
pop
outsl
outsb
nop
pop
or
add
jle
cmpsl
fisubrs
push
pop
and
xrelease
aaa
lds
adc
xchg
cmpsl
push
and
fcmovbe
mov
mov
fistps
fs
popf
fdivs
fwait
in
inc
lock
and
xchg
mov
fldl
and
jge
inc
or
xchg
addr16
inc
xchg
sub
insb
cmp
lods
adc
xchg
lock
sub
stos
push
popf
out
pop
fwait
push
jnp
pushf
push
cmp
pop
aas
dec
adc
lods
adc
scas
push
mov
jno
pop
add
movsl
notb
bswap
lcall
dec
mov
out
icebp
sbb
loopne
xor
adc
out
ficoms
lret
dec
inc
cmp
sbb
scas
push
mov
pushf
in
adc
adc
rclb
andb
lods
test
dec
jl
addl
xchg
aaa
cltd
inc
roll
pop
jmp
fcomp
mov
sbb
mov
sbb
dec
jno
insb
loope
jbe
test
or
jge
mov
or
sub
je
mov
lds
cmp
arpl
fldenv
add
loope
xlat
inc
orl
pop
ljmp
loopne
adc
cmp
dec
repnz
sar
std
ljmp
xchg
push
dec
inc
jg
or
mov
add
push
mov
dec
cld
add
aam
xchg
adc
in
adc
adc
shr
ljmp
mov
sub
ljmp
invd
lcall
pop
fdivrl
dec
adc
xchg
sbb
pop
dec
mov
rorb
fadd
mov
bound
filds
xchg
js
dec
inc
mov
push
pop
dec
js
stos
clc
and
insb
inc
adc
add
aaa
dec
lds
addb
call
shrl
test
adc
xchg
rorb
leave
ss
cmp
push
jge
jg
fstl
push
popf
clc
sbb
ja
sbb
notb
inc
xchg
sub
test
sub
sti
xor
cmpsl
push
mov
stos
loop
mov
fimull
rcrl
out
rcrl
mov
pop
push
and
inc
fsubs
fdivs
inc
gs
pop
in
test
in
sub
mov
imul
aam
cmp
outsb
in
push
adc
sub
push
fcoms
mov
mov
mov
add
xchg
push
adc
cmp
push
out
mov
dec
or
sbb
inc
mov
lahf
xchg
cmp
inc
jb
mov
ret
cmp
mov
int
cmp
aam
rcrb
into
mov
loop
sub
ja
and
aam
imul
lds
push
xor
ss
xor
xor
aas
cmp
jge
mov
roll
mov
dec
xor
arpl
mov
roll
bound
add
insl
sub
and
inc
inc
cwtl
mov
mov
jl
xor
arpl
jbe
loop
popf
jecxz
jbe
push
fsts
jecxz
pop
ss
push
sbb
xchg
and
jecxz
push
cmc
xor
out
jp
sub
pop
imul
or
push
dec
push
lcall
inc
jnp
fwait
sarl
cltd
fimuls
add
sub
test
and
mov
cmc
sub
adc
mov
pop
ret
mov
sti
iret
outsb
xchg
adc
out
jl
cmp
sbbb
divl
inc
iret
or
push
sbb
jne
adc
mov
add
ficoms
ljmp
int3
and
pop
add
dec
test
xchg
xlat
shrb
mov
inc
scas
jo
pop
adc
nop
sub
mov
test
pop
add
bound
pop
movsb
dec
rclb
mov
cli
mov
sub
fadd
repnz
jge
aaa
inc
jge
daa
sub
out
call
jmp
loopne
stos
shrl
mov
in
mov
cltd
jmp
mov
std
or
test
cmpb
jb
add
test
xchg
dec
dec
je
xlat
stos
loop
dec
loopne
mov
bound
into
cmp
lret
jne
leave
cmp
jmp
ret
add
jle
inc
inc
inc
mov
jmp
inc
fdiv
mov
movsl
xor
push
xor
ret
push
sub
daa
push
sbb
xchg
xchg
push
xor
dec
sbb
lahf
ds
add
cmp
xchg
add
inc
adc
jns
xor
adc
dec
test
nop
setp
xorl
add
sub
pop
add
cmpsl
jns
lret
ficompl
shr
lea
mov
das
mov
mov
mov
repz
fdivrp
clc
fisubrl
rcl
mov
xchg
add
icebp
xor
xlat
push
mov
outsl
dec
ljmp
pop
xchg
push
cmp
ljmp
push
add
sub
push
scas
adc
test
sbb
or
roll
xor
pop
iret
jae
xchg
and
inc
js
roll
xchg
dec
fwait
aam
es
cmpsl
scas
in
and
push
bound
push
aad
xor
lds
pop
jp
mov
xor
fcompl
outsb
in
sbb
nop
pusha
lock
mov
fidivs
sub
fwait
jl
ja
or
mov
xchg
pushf
xor
dec
sbb
xchg
add
pop
adc
jo
mov
dec
jo
lock
dec
xchg
dec
add
lea
cmp
mov
in
fdivs
std
lds
jo
test
xchg
xor
sub
xchg
sbb
mov
into
lahf
insl
mov
mov
test
adc
subb
dec
popa
jecxz
out
fldenv
pop
adc
mov
ds
adc
or
xor
out
mov
out
push
or
cmp
cli
dec
push
fld
jecxz
es
lds
add
xorb
jns
xor
rolb
adc
clc
test
mov
jae
clc
icebp
shrl
mov
jl
xchg
mov
stos
xchg
orb
jno
outsb
popa
ret
cmp
push
enter
inc
add
arpl
xchg
cli
andl
call
pop
decl
dec
jne
add
enter
xor
shl
push
sbb
mov
mov
adc
jbe
mov
and
cmpsl
repz
in
push
push
jmp
in
scas
orl
pop
mov
aam
test
mov
inc
dec
cmp
inc
ret
cli
arpl
dec
fmuls
loope
loope
fcmovnbe
lcall
ss
pop
shl
pop
push
pop
negl
or
mov
xchg
inc
ss
jo
jmp
or
sub
xor
cmpsb
clc
js
adc
insb
mov
shlb
dec
or
lea
mov
lds
stos
imul
pop
add
or
lock
movsb
add
ds
dec
cmp
jns
mov
leave
scas
xor
popa
loop
sbb
out
cmp
cmc
xor
sub
pop
call
sbb
and
insl
ss
out
jb
lods
std
mov
loopne
sbbb
mov
jnp
aaa
cmp
adc
lcall
sbb
in
cmpsb
mov
pop
mov
movsl
pop
cmp
mov
je
outsl
iret
mov
cltd
call
fcomip
jg
push
mov
mov
pop
int
adc
sti
or
xchg
loope
fisubs
jns
xor
aam
xchg
push
orl
mov
movsb
and
ret
or
mov
sahf
lds
mov
dec
and
jmp
xor
adc
clc
rcll
jl
scas
sub
xor
inc
xor
mov
cmp
dec
pop
xor
mov
push
jl
push
imul
sbb
add
cmc
mov
xor
ljmp
aas
mov
push
xor
scas
pop
pop
cli
ljmp
in
shr
ret
in
jl
adc
push
adc
cmpsb
jecxz
inc
divl
push
insl
insb
mov
add
sub
loopne
js
cmp
insb
xchg
fsubrs
sbb
or
fs
imul
ljmp
test
sarb
ss
fucomi
pop
bswap
sub
cltd
mov
adc
imull
jne
jmp
xchg
ret
pop
or
rcrl
sbb
lds
fstpl
pop
icebp
aam
mov
arpl
loope
cwtd
aaa
insb
add
mov
add
jno
add
xor
adc
clc
push
enter
jns
and
xor
les
shlb
push
mov
notb
std
inc
dec
adc
pop
adc
inc
movsl
pop
cli
jo
aad
sti
xorl
inc
push
inc
or
pusha
inc
and
xor
ret
mov
out
sbb
icebp
inc
ja
dec
sub
adc
or
ljmp
outsl
sub
cmp
das
xchg
xchg
enter
dec
cld
lods
lea
cs
pop
ljmp
shl
pop
ficompl
aaa
cmp
sbbl
sbb
xor
cwtl
xor
rolb
push
testl
push
cmp
adc
addl
jbe
push
sarb
scas
mov
mov
js
sbb
andb
push
mov
cmp
test
cmp
mov
icebp
nop
push
nop
sti
or
mov
jmp
repnz
cmp
mov
iret
or
jo
sub
jmp
add
fs
sbb
sbb
cmp
push
push
jmp
sub
inc
cmpb
jmp
addl
or
das
rolb
es
adc
shl
or
call
pop
loope
ds
vcomiss
cmp
lods
lret
or
out
jmp
jnp
nop
imul
mov
inc
adc
xlat
scas
xchg
push
jl
pusha
ret
out
shr
inc
cmp
fsubl
call
inc
mov
pusha
add
icebp
data16
nop
add
adc
cmp
and
mov
xor
xlat
add
scas
cs
mov
jns
aaa
push
loopne
mov
push
mov
in
pop
popf
sarl
test
cmp
jbe
mov
inc
dec
lock
or
fdivrs
mov
mov
push
sbb
dec
adc
xchg
aas
add
jp
icebp
inc
inc
in
rorl
mov
shl
int
aaa
mov
movsb
lret
push
jge
popf
jbe
jp
sbb
jbe
jo
cmc
cmp
in
mov
pop
shll
sub
add
cmpsl
pusha
inc
or
and
jno
xchg
jmp
in
adc
into
dec
insl
ret
cli
pop
inc
mov
adc
aaa
xchg
push
or
dec
inc
push
inc
mov
add
out
aaa
out
mov
inc
lock
idiv
lcall
insl
pop
inc
sub
or
xchg
scas
insb
rclb
es
mov
insl
mov
faddp
dec
push
cmc
jmp
sbb
dec
inc
dec
push
enter
xor
pop
mov
mov
pop
adc
mov
mov
mov
or
xchg
sbb
mov
pop
cmp
bswap
sub
aaa
cmp
mov
cs
fsubrl
dec
cs
cli
call
rcrb
mov
pop
cli
mov
call
aam
sbb
push
sub
adc
flds
fldcw
mov
push
scas
jo
cmp
pop
jl
dec
add
push
into
sub
and
add
lahf
aam
mov
movsl
test
sahf
mov
ret
push
push
mov
fists
push
or
cld
aaa
call
inc
xlat
push
shl
and
rcrl
xchg
stos
cld
icebp
shlb
or
push
jge
cmp
test
sbb
xchg
push
mov
lret
push
and
hlt
aad
into
jle
les
mov
inc
roll
hlt
dec
adc
imul
in
mov
in
and
cmp
add
jle
pop
and
movsl
inc
mov
add
or
ficoml
mov
dec
icebp
test
cmpsl
cltd
clc
into
or
xchg
xchg
loope
jbe
xor
jl
aad
loope
xchg
xor
push
lods
fcom
int3
pushf
sbb
dec
push
clc
sub
pop
ljmp
push
addb
mov
sbb
pop
sbb
mov
cltd
and
sub
jb
pop
mov
shrb
mov
pop
les
push
lret
ret
dec
lods
sti
subl
and
inc
lds
adc
testl
or
call
gs
cmp
inc
mov
xchg
mov
fstps
fistps
mov
scas
stc
add
in
shlb
mov
ja
or
mov
inc
and
add
inc
add
add
mov
push
inc
mov
push
jno
inc
pop
fdivp
imul
sti
aad
cmpsb
pusha
out
fidivrs
sbb
push
dec
push
sarb
pop
dec
push
test
imul
inc
hlt
pop
dec
inc
xchg
clc
inc
sub
std
mov
and
xchg
lret
jno
xchg
or
jbe
cmp
mov
out
pop
addr16
in
lahf
and
scas
or
pop
pop
push
inc
out
sbb
loope
inc
cmp
jl
and
fisttpll
imul
xlat
mov
or
repz
lock
sub
sbb
cmc
dec
cmpsl
into
jecxz
mov
jmp
bound
js
incb
xchg
test
push
nop
mov
mov
pop
test
inc
inc
sbb
icebp
adcl
pop
cld
inc
sub
cmp
repnz
mulb
xor
pop
jns
xor
in
imul
test
popf
mov
adc
jl
xchg
shlb
cltd
inc
mov
mov
je
and
xor
pop
loop
push
dec
push
aas
movd
xorb
xor
daa
movsl
int3
jno
mov
add
sbb
in
pop
clc
lods
lock
imul
or
mov
dec
mov
add
jg
mov
or
fsubs
loopne
cmp
or
cmp
mov
ret
test
and
dec
cwtl
cltd
adc
or
adc
push
insl
out
clc
jae
pop
adc
cmp
repz
pusha
mov
addb
enter
insl
or
testb
outsl
cs
xchg
in
repz
popf
xor
stos
jb
lock
jmp
lods
dec
dec
test
jo
mov
inc
mov
mov
mov
sub
clc
sub
ss
push
loop
inc
das
stc
ds
sahf
jl
pop
shlb
sbb
orl
outsl
fidivl
bound
mov
adc
loopne
jmp
mov
and
int3
sarl
cmp
jmp
push
add
insl
add
inc
rcrb
pop
and
push
push
mov
fsub
std
push
mov
xor
mov
cld
sub
insb
dec
sub
sbb
cs
ror
aam
jge
call
stos
test
sub
pop
sub
rcr
adcl
mov
clc
outsb
and
mov
pop
test
loop
push
mov
pop
mov
loopne
fs
out
push
aam
arpl
loope
inc
xchg
enter
addr16
jbe
adc
jg
loope
or
dec
lcall
push
fsubl
pusha
lock
mov
insb
iret
je
xor
lea
imul
int3
mov
mov
sbb
repz
cmp
pop
mov
into
cmp
mov
shrl
dec
je
mov
fcomp
pop
and
out
sbb
es
testl
sbb
xor
jg
stos
sub
sub
cld
mov
cmp
mov
frstor
aam
push
scas
mov
xor
outsb
dec
push
jno
outsb
daa
add
jne
movl
sbb
push
xor
sti
add
xor
push
mov
aaa
mov
test
add
test
cmp
mov
mov
test
adc
push
aas
call
fcoml
mov
lea
test
xchg
call
ror
jb
mov
lock
add
imul
sub
xor
cmp
or
ret
enter
nop
mov
and
insl
lahf
loop
xchg
xor
and
and
dec
pop
mov
subb
sti
stos
fcoms
lret
add
and
cltd
pop
xorl
icebp
fcmovnu
add
sub
in
dec
stos
dec
jg
cmp
and
out
outsb
cld
out
xchg
push
pushf
cmc
lret
in
addr16
fsts
les
in
or
xchg
nop
add
jno
mov
jbe
rorb
out
sub
push
sub
lods
popa
mov
sbb
inc
fidivl
xchg
pop
adc
insb
imul
pop
sub
addr16
fsubs
iret
fsqrt
xor
sub
xor
andb
rcrb
inc
add
ficompl
push
mov
popl
inc
jg
or
aam
xor
dec
popa
je
xchg
push
jb
call
dec
fsts
imul
arpl
jne
sbb
push
dec
mov
loopne
or
pop
fcmovnbe
and
cmp
xor
test
mov
dec
pop
fs
pop
sbb
lahf
xchg
fildl
sub
and
mov
lcall
push
fwait
das
add
dec
pop
hlt
cmp
jl
mov
jns
and
push
and
enter
mov
test
xchg
test
shll
mov
orb
pusha
mov
fcmove
scas
mov
mov
fiadds
cltd
jle
lock
add
cmpl
pop
lds
inc
scas
pop
jmp
sbb
push
ja
stos
pop
paddb
in
das
into
adc
fs
push
mov
cmp
lds
jg
push
adc
add
sbb
and
pop
outsl
mov
mov
cltd
sbbb
out
fcmovnbe
pop
fiadds
cmp
sti
push
xchg
aam
pushf
xchg
mov
mov
inc
inc
cmp
sub
jecxz
cmp
ljmp
add
sub
insb
pop
test
into
lea
fwait
adc
jmp
hlt
inc
inc
add
lods
xchg
jmp
sub
out
cmc
jno
sub
push
fcom
sbb
jecxz
cmpsl
xlat
pushf
iret
mov
lret
xor
or
push
pop
pusha
xchg
mov
les
daa
adc
fidivrs
adcl
sub
popa
adc
pop
jnp
add
mov
and
mov
mov
cwtl
xor
cmpb
mov
jb
sbb
push
setno
jae
xor
cmp
mov
cli
int
or
adc
addr16
cmp
sahf
divl
pop
fisubrl
mov
mov
mov
jae
stc
mov
bound
repz
push
adc
mov
xchg
dec
daa
arpl
js
mov
orl
mov
and
test
call
outsl
mov
enter
movd
adc
std
fwait
mov
insb
push
shlb
sbb
mov
jb
pop
subb
push
xor
add
inc
arpl
and
rclb
pop
pop
dec
jno
insl
pop
jno
xchg
jb
mov
pushf
mov
fiadds
dec
xchg
sti
test
dec
mov
std
aam
out
add
mov
out
mov
daa
cld
dec
mov
outsb
add
adc
repnz
scas
aam
shrb
dec
add
adc
inc
rolb
lret
sbb
pop
cmp
daa
pop
jbe
sub
cwtl
lds
and
pop
cmp
insl
pop
and
xchg
cmpb
jb
nop
and
jl
adc
or
pop
lret
movsb
sub
jbe
mov
fisubrs
pusha
test
jg
sub
add
mov
push
in
and
cmpsb
dec
adc
mov
mov
xchg
out
dec
rcrl
adc
xchg
pop
xor
cwtl
les
and
dec
xchg
sub
add
and
jl
test
mov
ljmp
xor
imul
repz
push
subb
in
xchg
movsl
negb
lret
out
push
xchg
adc
mov
inc
inc
test
incl
aas
jle
rcrb
cli
mov
xchg
repz
and
and
adc
inc
sbb
in
mov
mov
outsb
lret
fbstp
imul
or
or
add
dec
test
dec
in
inc
ds
cmpsl
nop
pop
cmp
jbe
push
fs
add
jp
mov
and
mov
std
movsb
mov
push
loopne
arpl
loope
and
mov
js
rcrl
insb
pop
hlt
push
sti
push
cmpb
mov
mov
arpl
ror
or
leave
sub
lock
ror
inc
fwait
mov
scas
sub
mov
rolb
jnp
insb
mov
test
fdivp
jnp
fmuls
jbe
pop
sahf
and
sahf
mov
lret
adc
scas
mov
and
stos
ficomps
jle,pt
cmpsl
jno
xor
into
loop
sbb
cwtl
pop
out
lods
push
bound
jp
iret
xchg
inc
adc
inc
ja
out
ljmp
stos
mov
cld
mov
push
jo
inc
xchg
adc
mov
mov
jl
inc
and
pop
dec
call
ljmp
je
rorl
je
in
mov
imul
adc
repnz
or
or
mov
push
outsb
movsl
mov
pop
orb
jne
lahf
or
imul
adc
jns
js
shll
fxch
mov
mov
iret
ror
xchg
pushl
in
clc
jne
lea
add
and
mov
std
orl
xor
iret
lret
insl
pop
adc
pop
iret
repz
adc
icebp
lret
rcll
or
lret
pop
repnz
inc
in
or
mov
imul
adc
pop
outsl
mov
pop
pop
cwtl
fcmovnu
jge
cmp
mov
loopne
dec
sbb
sbb
jmp
dec
fadd
sarb
shlb
add
cltd
scas
arpl
call
jnp
inc
inc
sbb
ljmp
mov
or
lock
jl
ret
sub
icebp
dec
ljmp
push
orl
push
xchg
std
lahf
push
lret
pop
mov
add
hlt
ret
push
ds
xor
push
mov
icebp
mov
jb
sti
xorb
dec
cli
adc
push
and
mov
inc
xchg
dec
xor
adc
out
fwait
dec
mov
add
jle
jecxz
xor
dec
push
and
adc
imull
pop
mov
mov
aas
mov
movsb
jns
add
rsqrtps
push
push
ds
mov
mov
pushf
je
arpl
push
jge
jg
jmp
std
mov
mov
push
mov
or
jno
test
fsubrs
loope
ljmp
dec
inc
mov
add
btc
adc
xor
insl
jmp
adc
jge
pop
das
inc
add
xchg
mov
out
or
push
int3
out
inc
push
mov
insl
out
test
test
jne
outsl
cmp
clc
out
pop
movsb
fistps
loop
sbb
mov
or
bound
test
cmpsl
add
mov
cld
adc
mov
sub
jmp
push
int3
pop
add
shll
push
cmpsl
test
cs
cmp
xlat
mov
jae
xchg
aam
push
mov
in
or
iret
insl
loopne
xchg
mov
add
cltd
adc
aam
add
fildll
xchg
clc
ljmp
dec
aaa
cmp
jnp
std
mov
mov
gs
mov
inc
push
scas
and
or
imul
xor
mov
xchg
aas
in
cld
sti
call
or
sahf
leave
gs
popf
insb
add
jo
sbb
ficomps
cmp
inc
cmpsl
pop
mov
pushf
loop
iret
lods
in
cmp
rorl
outsb
and
cmpb
xlat
pusha
mov
ljmp
cmpsl
not
popf
adc
and
sub
jp
pop
cli
jo
popf
adc
mov
ficoml
fistl
stos
adc
xlat
inc
xchg
orl
xchg
clc
jmp
loope
loope
ret
roll
push
sbb
sbb
mov
aaa
int3
jno
vmwrite
push
xchg
push
test
pop
xchg
pop
mov
shrl
sub
pop
fs
and
dec
mov
fdivl
shrb
push
mov
repz
cmp
or
adc
in
pusha
add
ja
mov
and
inc
aaa
shlb
add
mov
mov
xchg
shrb
dec
popf
clc
mov
xchg
adc
pop
sbb
iret
push
push
mov
dec
pusha
lods
xchg
shll
int3
xor
add
add
mov
divl
pop
push
push
mov
adc
mov
and
sub
jb
sbb
aas
pop
cmp
sub
test
ljmp
xchg
loopne
test
push
sbb
mov
loope
imul
pop
inc
sub
xor
inc
pop
aas
adc
ret
mov
in
pop
data16
push
mov
in
dec
ror
test
jp
pushf
or
dec
pop
imul
inc
into
mov
jmp
or
fsubrs
jo
rolb
test
jge
je
movsl
daa
jbe
pop
xor
loop
and
stos
pusha
inc
popf
movsb
xchg
sbb
pop
jbe
mov
mov
dec
mov
and
insl
xor
lahf
js
outsl
inc
xor
mull
inc
or
cmpl
orb
add
arpl
movsl
mov
add
inc
aam
push
fidivl
test
fistl
jecxz
out
subl
outsl
mov
popf
sbb
sub
popa
pmullw
aaa
aam
xchg
or
lahf
sub
push
fdiv
jp
push
pop
pop
sbb
out
jbe
cmpsl
fiadds
gs
push
ljmp
test
out
jge
pop
call
mov
mov
push
aas
pusha
shl
xor
bound
mov
mov
sbb
out
jne
cltd
icebp
pusha
mov
mov
or
inc
push
mov
inc
js
movsb
test
pop
shlb
arpl
clc
sbb
shll
add
loopne
push
pop
lret
mov
mov
dec
pop
xor
hlt
push
pop
cmp
cmp
add
cli
push
mov
mov
cltd
inc
jo
mov
pop
pop
push
popf
das
add
bound
iret
cmp
mov
sahf
cmp
or
dec
mov
call
xor
loop
js
cwtl
xor
js
out
hlt
mov
push
enter
inc
and
cmp
test
fs
inc
pop
cmp
test
xchg
fbld
aas
jp
pusha
push
jno
add
push
insl
loopne
into
add
push
loopne
or
sti
xor
mov
gs
pop
xchg
adc
lret
pop
push
shll
xchg
add
push
ficomps
mov
push
scas
jae
iret
test
jl
fwait
insb
hlt
mov
cli
mov
dec
mov
call
mov
adcl
mov
lock
sub
addr16
cmp
cmpb
pop
push
and
sbb
ljmp
jbe
bound
ds
push
adc
lahf
xchg
pop
loop
fs
repz
sbb
mov
movsb
jo
jnp
dec
sahf
and
into
lods
lods
inc
and
lea
sbb
push
xchg
xchg
mov
mov
scas
and
and
fsubrs
jecxz
and
xchg
sbb
fildl
cmp
dec
dec
jg
loope
arpl
movsl
lret
ds
fmuls
mov
insl
mov
sub
mov
adc
sbb
scas
dec
insb
add
cmpl
or
stc
add
nop
les
test
test
outsb
jmp
pop
outsl
pop
icebp
test
out
leave
xchg
lret
or
sub
mov
sub
imul
repz
in
negb
and
sub
mov
pushf
cmp
xchg
dec
sub
inc
sbb
js
inc
in
mov
or
jne
lahf
popf
ljmp
pop
shlb
movsb
popf
xor
mov
dec
xor
inc
ljmp
leave
add
dec
mov
call
pop
pop
xor
lea
outsb
mov
push
mov
push
xchg
es
push
call
arpl
dec
loop
fstpt
mov
pop
fiaddl
xor
lcall
in
pop
or
push
lock
sbb
mov
call
mov
xchg
or
ret
dec
dec
icebp
jns
mov
jle
in
movsb
stos
clc
lods
push
cltd
aas
loope
movl
dec
xchg
inc
jmp
dec
jge
fildl
int
rcl
std
jecxz
adc
push
mov
add
rorb
pushf
adc
icebp
adc
out
stc
aaa
inc
fisttpll
fisubrl
jl
sbb
mov
aam
insl
xor
aad
addr16
ret
pop
jp
testb
pusha
push
push
stos
jb
and
nopl
cmpsb
sub
clc
stos
and
pop
cmp
arpl
sub
sub
mov
mov
mov
rorl
pop
movsl
roll
push
push
push
imul
sbb
enter
pop
mov
jg
xor
add
adc
jp
mov
dec
je
movsl
xchg
mov
movsb
je
jns
sbb
push
xchg
sub
cli
jp
mov
add
in
outsb
add
or
inc
add
and
gs
dec
mov
jo
in
cmp
mov
jle
xchg
hlt
push
sub
stos
mov
adc
stos
ficoml
or
mov
popa
rorb
loope
jg
push
outsb
sbb
ds
lret
push
jge
mov
call
mov
bound
jecxz
insl
lea
xchg
mov
push
add
leave
adcl
mov
adc
ds
outsl
inc
mov
mov
mov
iret
divl
jge
mov
sbb
repnz
icebp
pop
pop
out
into
pop
pop
repnz
leave
mov
aam
test
jge
or
or
xchg
adc
mov
xor
jg
rcll
pushf
inc
imulb
cmp
out
mov
push
sbbl
push
mov
cmpsb
in
push
fstp
mov
popa
sbb
or
mov
inc
orl
jo
cld
and
add
test
mov
mov
mov
daa
push
push
push
add
mov
xchg
jo
mov
or
shl
xchg
push
cli
mov
and
nopl
sarb
jbe
push
add
test
cld
test
addr16
xor
and
pop
mov
mov
jno
cs
sahf
and
jmp
sbb
dec
jle
dec
icebp
dec
sbb
inc
movsb
mov
add
adc
inc
or
cli
nop
sub
xchg
test
xlat
arpl
je
ds
aam
inc
in
test
mov
jge
testl
mov
inc
mov
mov
sub
push
jg
test
mov
xor
sbb
loopne
shlb
xor
clc
int3
dec
into
mov
clc
jnp
stos
in
dec
or
movsb
out
cli
xorb
or
and
rcll
inc
sub
cli
popf
push
and
inc
pop
inc
and
jp
popa
xlat
push
xchg
ds
je
out
roll
imul
or
jo
pop
adc
or
int
jle
loopne
and
scas
ljmp
outsb
or
push
es
jns
push
outsb
mov
iret
clc
push
iret
jg
rol
push
mov
dec
mov
leave
and
push
loop
mov
and
mov
ja
rclb
inc
out
test
shl
and
jmp
loopne
jbe
jbe
sbb
jecxz
adc
xor
fnstenv
psubb
xor
dec
fisubrl
mov
fildl
jg
out
in
dec
jne
in
add
pop
out
fiaddl
pop
jle
lret
test
inc
mov
xor
push
mov
loopne
inc
scas
cmpsl
icebp
mov
clc
push
orb
es
push
add
add
xor
bound
cmc
sahf
inc
roll
inc
into
clc
push
or
pop
dec
sub
leave
stos
fisttpll
mov
mov
shlb
jl
lock
sbb
sti
xor
nopl
xchg
dec
cmp
add
fsubp
pop
je
stc
sub
idiv
sub
adc
cli
pop
sub
clc
clc
icebp
or
ror
fcmove
xchg
lea
std
add
xlat
pop
add
mov
mov
mov
js
jae
mov
aad
or
sbb
pop
fimuls
mov
sbb
aas
arpl
jnp
fists
add
lret
sahf
sbb
jl
loop
enter
adc
lods
dec
test
xchg
sbb
insl
jne
out
enter
cltd
mov
lock
clc
sbbb
sbb
or
je
cltd
adc
cli
jle
jl
xor
scas
lds
mov
mov
and
push
add
outsb
sbb
lds
adc
les
xor
xchg
jge
inc
insl
mov
fldz
ljmp
sbb
sub
push
sbb
sti
aam
div
mov
and
xor
fbstp
mov
sbb
cmp
clc
mov
fidivrl
jle
repnz
jne
dec
dec
sbb
mov
inc
dec
jbe
inc
adc
pop
enter
pop
lds
call
negb
aam
push
and
jbe
inc
or
inc
imul
inc
daa
lods
push
sbb
mov
pop
push
ret
mov
lahf
hlt
test
inc
push
jl
out
call
je
fs
sbb
je
pushf
jmp
int3
pop
xor
xor
mov
xor
xor
shlb
mov
xor
outsb
lds
add
hlt
inc
outsb
loope
sub
sbb
call
test
repnz
pop
and
pop
cmp
scas
in
dec
in
orl
dec
mov
pusha
aas
cmp
aas
movaps
sbb
pop
jp
cmpsl
jne
lcall
adc
pop
lock
push
in
fistpl
jecxz
push
fnstsw
sbb
mov
push
push
int
loope
pop
sbb
mov
add
mov
pop
out
pop
inc
sbb
or
sub
sahf
sbbb
and
insl
pusha
pop
stos
adc
sub
or
mov
cmp
cmc
rclb
fsubrl
addl
jae
push
int
mov
inc
in
xlat
xchg
jl
mov
pusha
push
and
fisubrs
mov
inc
or
rorl
or
js
fnstenv
cmp
pop
daa
sbb
jecxz
jle
cmpsl
push
sbb
test
idiv
jb
mov
in
cmp
and
push
and
xor
and
lahf
shlb
push
je
xchg
dec
add
sub
or
xor
cli
xchg
bt
xchg
gs
mov
add
outsb
mov
mov
push
jne
ss
imulb
stc
lds
push
sub
xor
lods
push
and
jns
dec
mov
sbb
dec
cltd
xchg
inc
mov
add
adc
add
nop
dec
dec
fs
cmpsl
inc
movsl
popf
or
sbb
jp
xchg
mov
lahf
sbb
repnz
or
addb
pop
mov
loope
test
stos
inc
cmpsl
arpl
loop
out
pop
add
adc
in
test
rorl
and
xor
pushf
aaa
jbe
xor
sahf
cwtl
fstp
sbb
mov
jp
xchg
inc
or
outsb
pop
push
loope
js
add
mulb
mov
adc
push
jmp
repz
imul
stc
sti
jg
loopne
push
push
adc
adc
in
sbb
adc
pushf
nop
ds
hlt
cmp
dec
xchg
imul
movsb
lods
adc
xor
jbe
mov
jp
fiadds
ret
jnp,pt
pusha
mov
sbb
cwtl
jo
shrl
sub
mov
aam
cli
clc
fbstp
movsl
clc
test
push
cmc
or
mov
shrl
sbb
pop
lods
or
add
test
jns
pop
adc
maxps
clc
into
pop
das
mov
data16
das
stc
add
loopne
fsubrs
stc
and
andb
scas
jp
addb
fwait
mov
loope
dec
xor
or
out
mov
imul
imul
or
aas
arpl
jl
test
data16
push
roll
jb
jle
dec
lock
bound
popf
sahf
cmpl
lock
sub
adc
xor
sub
clc
and
adc
cmp
push
push
jns
loop
jns
push
dec
cmp
cmp
insl
clc
lcall
movsb
inc
push
inc
int
mulb
jno
pusha
xchg
inc
stos
or
out
cmpsb
mov
orb
xchg
jmp
popf
les
mov
push
mov
pop
nop
jecxz
dec
inc
mov
mov
push
icebp
add
inc
testl
rcrl
mov
dec
xor
xchg
sbb
call
lods
mov
push
xor
sub
enter
cmpsb
sub
pop
jge
in
cmpsb
xchg
sbb
sub
sub
pop
outsb
mov
sub
je
fxch
out
repnz
xor
inc
outsb
je
jle
xor
dec
pop
fcoms
xchg
or
outsl
fisttps
jecxz
jae
push
mov
xchg
and
add
int
xlat
cmpsb
inc
and
clc
imul
int3
dec
fimull
insl
das
data16
mov
test
sbb
sbb
stos
inc
ss
or
mov
pop
inc
or
idiv
aam
das
xlat
cmp
repnz
inc
mov
or
lcall
loope
jl
push
loope
sbb
ret
rcr
shll
lret
inc
movsl
or
stos
sbb
add
push
syscall
xor
imul
pop
pop
ret
or
shll
fildl
out
jmp
fsubrl
sbb
mov
pop
fcmovb
inc
hlt
add
mov
shlb
xchg
jbe
xchg
stos
ret
call
shl
xor
popf
xor
cwtl
arpl
inc
mov
jecxz
in
inc
movl
sbb
cli
adc
xchg
fsubrs
ja
push
cmp
adc
pop
push
or
mov
scas
mov
outsb
pop
cmp
add
std
inc
inc
mov
je
lock
or
bound
fucom
or
mov
xor
adc
inc
jns
iret
or
or
dec
xchg
mov
xchg
mov
pop
enter
movsb
or
push
lahf
mov
push
cmp
stc
js
loope
into
out
cmp
mov
stos
aaa
pop
jb
insl
out
or
test
xchg
pop
ss
jle
call
fildl
sbb
cmpsl
cmc
inc
fbld
fistps
imul
fdivrs
sbb
xchg
filds
cmp
idivb
aaa
mov
fs
fstps
adc
inc
fistpl
dec
xchg
add
cmpsb
pop
xor
mov
dec
mov
xor
aam
jg
cli
imul
dec
jo
out
shlb
pop
jle
js
scas
adc
aaa
or
mov
shrb
shl
push
mov
or
xor
jecxz,pt
push
adc
mov
stos
pop
pusha
lahf
jmp
inc
mov
repz
ret
out
adc
mov
xchg
mov
xchg
scas
jmp
add
je
push
in
movl
jo
insl
dec
lods
repz
mov
pop
aaa
fdivs
mov
mov
loope
add
pop
xor
enter
sti
jne
fstpl
popa
push
adc
mov
push
cwtl
ror
pop
imul
scas
mov
repz
iret
jmp
shll
mov
gs
dec
je
push
add
cmp
push
sahf
jnp
xchg
or
roll
xor
and
jb
xor
mov
scas
aad
push
adc
xor
dec
out
inc
mov
add
sub
inc
pusha
lahf
sbb
mov
lcall
popf
mov
movsl
fists
inc
call
fs
nop
insl
mov
cmp
test
xchg
arpl
lds
data16
es
jnp
faddp
out
xor
xchg
out
sbb
aad
jne
and
mov
std
bound
or
cli
out
mov
or
mov
dec
sbb
popa
push
pusha
sbb
mov
jb
mov
fisttpl
inc
push
jnp
pop
in
test
or
and
loop
jge
ss
push
je
pop
inc
arpl
jecxz
rolb
out
mov
mov
cli
cmp
cmp
stos
leave
lea
xor
subb
fistps
shlb
sub
add
cld
arpl
test
aam
pop
mov
push
cmpsb
leave
jo
pop
cli
cs
xchg
ja
lea
cmp
and
jg
jns
fidivrl
rcl
dec
mov
ror
movsl
sti
mov
and
jmp
dec
in
xchg
sbb
fwait
movsb
test
push
icebp
mov
mov
and
add
sbb
sbb
mov
outsb
jo
cmc
shlb
mov
imul
mov
add
and
iret
mov
sbb
fistpl
frstor
test
or
sbb
fdivs
arpl
mov
mov
push
popa
lahf
fstps
stos
mov
enter
addb
fcmove
mov
xchg
and
rolb
leave
shlb
xor
in
add
mov
ja
and
and
sub
or
xor
sarl
ds
xchg
fwait
popa
push
adcb
lods
mov
lods
or
push
inc
inc
and
xchg
xchg
js
mov
scas
mov
and
mov
push
cli
or
fwait
add
icebp
add
xchg
cmp
pop
popl
mov
in
fcomps
popa
ss
test
jbe
inc
and
xlat
fwait
insl
pop
repnz
push
jmp
add
xchg
jp
xor
add
mov
movsl
test
icebp
scas
call
stc
jnp
or
repz
mov
push
add
aam
add
add
fwait
add
mov
cmpsb
in
mov
pushf
mov
in
mov
je
pop
push
rcrb
sub
dec
jge
or
adc
addl
and
std
push
sub
dec
data16
fisttps
push
fcoml
xor
mov
mov
add
mov
mov
sti
les
push
pop
push
lock
or
out
mov
cltd
insb
xchg
adc
cmpsl
mov
imul
mov
mov
mov
scas
daa
imul
or
addl
jo
sbb
dec
insl
jp
xor
push
xchg
add
mov
add
lods
and
stos
andb
fisttpll
fst
sub
inc
adcl
in
popa
xor
dec
icebp
scas
inc
lcall
bound
aaa
mov
ja
aam
lahf
adc
movsl
push
and
fucomp
mov
xchg
shll
xchg
sub
es
mov
jo
ss
jle
cmp
test
or
mov
jne
xor
imul
mov
add
inc
rcrl
sbb
jl
loopne
ret
xchg
popl
add
sbb
push
incb
popf
inc
push
adc
sub
aam
lock
enter
sbb
inc
or
mov
pop
mov
lock
xor
stc
shrl
adc
hlt
sbb
std
mov
lea
or
clc
add
outsb
imul
shll
and
and
aas
and
aad
popf
jns
sbb
cmp
pop
pusha
std
fwait
cmpsb
mov
xorl
lods
hlt
aas
pop
iret
fwait
sbbl
inc
adc
dec
lock
or
inc
inc
stos
jp
ds
jecxz
arpl
sbb
ljmp
mov
xchg
adc
dec
pop
pusha
sar
dec
cmpsb
ret
adc
xor
fdivrp
jno
pop
dec
pop
mov
rorl
subb
outsl
testl
scas
mov
mov
aad
mov
jl
mov
notl
cld
in
or
leave
imul
cmpb
pop
rcrl
and
loope
je
frstor
icebp
mov
jne,pt
mov
mov
push
jge
cmp
and
inc
jbe
test
cmp
aaa
xor
and
call
pop
mov
dec
es
int3
mov
pop
je
aam
adc
into
ret
addl
std
loope
pushf
xchg
aaa
fmull
stc
xor
jno
int3
shlb
ds
mov
pop
xchg
push
je
sub
rcll
cmpsb
lods
stos
mov
ret
testl
adc
fistl
pop
call
test
sub
add
imul
les
inc
shll
test
push
push
cmpsl
dec
adc
pop
cmp
ja
adc
sbbb
inc
call
xor
jbe
sub
aam
pop
add
das
mov
out
fildl
mov
mov
aaa
jno
inc
push
xor
in
add
jge
loopne
mov
xor
je
addl
in
dec
and
rorb
pusha
movsl
sti
imul
or
fs
faddp
sub
pop
mov
xor
add
stc
repz
dec
push
ret
push
mov
push
and
sbb
std
imul
jge
sbb
bound
xlat
jmp
pushf
icebp
push
sub
mov
adc
lret
rorb
cmp
out
test
imul
pop
call
adc
fwait
xchg
or
shrl
xchg
or
movsb
sahf
pop
leave
loopne
or
mov
dec
jmp
jno
std
hlt
adc
and
pushf
hlt
insl
mov
sbb
push
stc
outsb
lock
in
add
lret
scas
les
pushf
xchg
movsb
ss
stos
cmp
call
sub
fsts
add
mov
fcmovb
pop
jbe
or
cmp
xlat
fsts
fidivs
or
outsl
adc
popa
jl
aad
jle
fsubrp
mov
xor
ror
ret
jns
push
adc
out
xchg
pop
pop
pop
cli
pop
pusha
insl
sub
les
add
push
fisubrs
jnp
pop
loopne
and
faddp
pop
pushf
jge
mov
in
inc
lcall
movsl
je
sub
inc
xorb
in
testl
lret
cmp
sub
sar
cmp
push
idivl
int3
xor
clc
sti
xchg
adc
push
adc
imul
pop
mov
lcall
stos
sbb
cmp
frstor
push
icebp
xchg
mov
aam
xchg
je
stc
lock
mov
or
outsl
mov
inc
inc
mov
mov
int
incl
mov
pop
jge
pop
mov
xor
push
std
test
js
call
int3
jbe
jmp
adc
clc
ja
loop
sbb
sub
arpl
inc
add
clc
mov
and
xchg
cmp
or
insl
xchg
dec
outsb
inc
pop
int3
mov
jecxz
testb
sbb
lods
xchg
adcb
out
cs
jecxz
mov
fwait
dec
aas
xor
xlat
xor
push
mov
xor
pop
mov
adc
ss
fsubrl
mov
jecxz,pt
or
mov
ret
jno
stos
mov
cmp
sub
cmpsl
test
fistl
mov
push
mov
sub
inc
mov
out
cmp
push
inc
add
inc
mov
mov
pop
xchg
cmp
jb
int3
pusha
movl
sarl
stos
and
add
iret
jge
mov
xor
cwtl
mov
fs
sti
ret
fcmovnu
cwtl
mov
inc
add
mov
dec
and
in
aad
mov
adc
push
movsb
mov
cli
inc
sub
in
int
loopne
mov
std
mov
xlat
in
pop
and
mov
sub
hlt
or
dec
add
scas
xor
xor
mov
mov
ja
cltd
mov
pop
push
jmp
and
inc
test
daa
add
rorb
pop
xorb
outsb
adc
ljmp
insb
cmp
lock
mov
fnstsw
cs
int
shll
loopne
pop
out
stc
adc
in
jle
testl
adc
push
adc
ja
or
xor
loope
orb
sbb
push
xchg
mov
repnz
popf
loopne
flds
pusha
sarl
jle
mov
mov
mov
mov
jo
mov
fstl
insb
adc
insl
jl
fs
cmc
stc
leave
sub
fiadds
and
inc
xor
sub
mov
inc
sub
in
add
fmuls
and
cmp
or
sbb
cli
cmc
jge
fs
js
sub
clc
add
jae
hlt
sub
push
rcrl
aas
imul
inc
inc
mov
mov
loop
mov
dec
insl
aaa
ficomps
inc
enter
dec
test
mov
pushf
cwtl
xchg
sbb
fdiv
or
rorl
sbb
sub
jb
clc
xchg
je
xlat
add
js
add
and
fdivs
pop
sub
scas
jb
cmp
lcall
enter
push
push
addl
cmpl
push
inc
int3
pop
xchg
dec
cli
in
mov
rcrb
ds
dec
rcrl
mov
call
pop
fdivs
fwait
ror
push
inc
sbb
jnp
or
push
cmc
xchg
ss
push
les
nop
pop
inc
mov
dec
mov
icebp
stos
inc
jge
incb
test
stos
lahf
lret
loop
cmc
mov
jbe
mov
fstps
cli
rclb
sub
sub
js,pt
lock
push
sub
xor
aad
jmp
inc
fisttpll
xor
test
loope
lods
daa
jno
dec
sbb
stc
or
mov
pop
xor
dec
loopne
clc
aaa
test
negb
test
nop
push
or
andb
sub
xchg
in
dec
fwait
mov
and
aam
fmul
dec
rolb
or
add
movsl
repnz
push
sbb
mov
add
sbb
push
xor
pushf
andb
outsl
jb
adcb
clc
xchg
jns
xlat
fbstp
jmp
mov
pop
mov
loope
inc
fs
inc
mov
cli
mov
lahf
sbb
incl
adc
lock
in
jnp
xlat
or
pmuludq
xor
fwait
pop
pop
add
scas
ret
mov
push
lock
cmp
jo
lahf
mov
mov
push
jmp
fs
aad
in
xchg
pop
mov
neg
stos
stc
push
mov
rolb
mov
sub
in
dec
jl
inc
je
jb
aas
enter
jle
and
jo
cmp
xor
xor
fbld
cwtl
inc
std
dec
adc
mov
adc
enter
push
rcrl
mov
test
lds
jle
fdivs
int
jno
clc
jg
lea
call
adc
add
add
push
dec
fcoml
fistl
push
outsb
fidivrl
adc
aas
mov
or
add
div
mov
mov
sbb
push
test
call
mov
imul
ds
or
std
outsl
xchg
sub
inc
adcl
out
enter
test
adc
mov
dec
icebp
lahf
int
xchg
enter
mov
pop
sub
pop
lcall
xor
add
int
sti
sahf
add
lahf
cld
mov
pushf
adc
or
enter
dec
frstor
jnp
mov
pop
imul
cmc
stos
dec
adc
mov
movsb
cmp
fwait
or
dec
inc
les
mov
jnp
leave
iret
rsm
sbb
inc
jnp
gs
addl
push
and
mov
ret
mov
adc
adc
outsb
aam
in
in
mov
push
hlt
jnp
in
js
in
lret
hlt
inc
iret
xchg
das
sub
push
push
sbb
outsb
lret
xchg
loop
and
cld
sbb
rcl
nop
inc
lods
scas
xchg
adc
js
push
cmp
jg
inc
add
mov
lods
mov
mov
jmp
mov
iret
outsb
mov
or
dec
xchg
out
mov
in
and
xor
dec
mov
addl
pop
call
sahf
daa
add
pop
mov
loope
mov
or
arpl
pop
pop
mov
or
jne
lock
roll
pop
dec
xor
adc
arpl
or
cmp
mov
out
je
jl
or
add
xchg
inc
jle
lods
jl
lock
ss
xchg
mov
fidivl
mov
dec
mov
xlat
out
cltd
add
imul
fistl
cltd
pop
jmp
hlt
sub
or
ds
cli
inc
cmp
cld
push
es
push
inc
addl
cmp
rcll
ljmp
mov
sub
jo
sbb
daa
inc
inc
push
out
cmp
pop
and
mov
pop
add
jno
push
and
jno
and
subb
int3
stos
test
mov
sti
and
cmp
sbb
hlt
cmp
pop
adc
xor
mov
outsb
loopne
ds
adc
inc
ds
mov
out
pop
adc
shll
push
and
and
lds
lods
lock
in
je
test
push
sbb
dec
pop
inc
mov
adc
fwait
cmp
pop
mov
push
imul
or
sbb
test
sbb
pushf
and
out
xchg
sti
fsubs
mov
add
mov
pop
mov
xor
leave
xchg
dec
arpl
filds
cmp
pop
fadd
cli
pop
xor
je
ret
adc
add
addb
outsb
mov
push
sbb
sahf
imull
mov
bound
jne
out
ljmp
pop
mov
adcl
mov
ret
sub
jbe
ja
mov
sbb
sbb
jecxz
aaa
add
bound
pop
jl
sti
mov
pusha
pop
add
andb
ja
pop
shl
mov
or
and
jg
xor
mov
xor
ds
mov
sub
repz
mov
jecxz
subl
scas
mov
es
jg
inc
lods
pop
sbb
inc
int3
std
enter
loope
cmpsb
sub
ds
mov
and
inc
xor
dec
sub
ficoms
pop
or
test
ljmp
add
ss
xchg
fisttps
into
mov
test
shr
subl
pop
je
mov
adc
jle
in
rcl
inc
xor
daa
dec
loope
ret
scas
cltd
roll
fcmovnu
cmp
push
test
push
in
es
adc
push
into
sbb
jb
mov
sub
test
cs
lods
lret
and
xor
outsb
pop
shl
push
jno
dec
icebp
add
mov
insb
jge
lods
inc
jae
js,pn
inc
fisttpl
jl
cmp
addl
mov
sbb
pop
or
ljmp
inc
loopne
pop
cmp
xchg
movl
mov
aaa
mov
mov
cmc
popf
sub
inc
mov
xor
and
insl
mov
push
scas
xchg
lods
mov
outsl
and
sbb
and
fisubrs
fsubr
sub
xor
xchg
pop
push
jo
int
xchg
dec
and
movsl
lods
mov
pop
andb
mov
push
ret
adc
pop
clc
adc
push
mov
push
call
ds
aad
pusha
cmp
adc
int
xchg
scas
lods
mov
shrb
icebp
mov
pop
push
popf
or
mov
in
mov
es
mov
stos
call
mov
mov
dec
inc
setae
add
sahf
std
sub
daa
add
imulb
and
push
or
jge
and
mov
ds
inc
xor
cmp
xchg
mov
fiadds
popf
pop
adc
in
adc
ljmp
xchg
stc
and
push
push
scas
bound
mov
fs
test
dec
lock
mov
sbbb
xchg
ja
js
fwait
xchg
xchg
and
arpl
mov
divb
push
test
push
icebp
loopne
xor
ja
jle
sbbb
inc
inc
aam
and
jmp
and
roll
inc
inc
cmp
outsb
mov
hlt
add
add
adc
xchg
add
mov
pop
sub
jmp
dec
jbe
clc
jmp
sbb
adc
pop
sub
inc
pop
mov
fists
into
mov
mov
popf
in
mov
cmp
add
decl
cmp
dec
jo
test
xchg
lahf
cmp
mov
ljmp
fildll
ljmp
mov
dec
test
fistl
inc
stos
sbb
dec
mov
inc
das
or
ljmp
shlb
add
rclb
mov
mov
pop
lock
adc
jmp
adc
cmp
xlat
addr16
rcrl
adc
xor
scas
xchg
mov
leave
sar
pusha
pop
push
xor
cmp
rcrl
nop
andb
lret
ljmp
dec
pop
jecxz
adc
mov
jo
mov
adc
add
mov
jge
mov
pmaxub
aas
inc
xchg
jnp
iret
inc
les
jecxz
mov
mov
jbe
lds
sbb
std
mov
sub
lock
pop
nop
sbb
ss
jecxz
sti
jp
gs
sub
pop
inc
mov
mov
js
imul
add
aam
push
ret
and
mov
lret
xor
es
push
jecxz
mov
in
or
push
adc
out
push
sahf
jnp
add
dec
and
mov
jmp
mov
enter
inc
cmc
pop
cmp
and
inc
jnp
xor
add
sbb
jo
rcrl
popf
ja
mov
push
mov
jno
andb
jno
jbe
lea
xor
std
pop
dec
pop
cmp
jne
xchg
inc
sub
out
xor
jae
mov
push
mov
cmp
sbb
mov
ficompl
mov
pop
jne
mov
or
push
scas
iret
mov
xor
inc
mov
and
ja
sub
or
cmp
outsb
mov
sub
adc
popf
test
pop
lock
add
adc
push
add
xchg
jmp
and
push
ja
add
inc
es
pusha
test
or
loopne
jno
or
add
and
xchg
and
xchg
mov
addr16
mov
movsl
xchg
or
sub
xchg
movb
cmc
rclb
cwtl
shlb
insb
in
repnz
out
and
jae
shll
mov
aad
push
scas
lods
cmpsb
pop
add
dec
into
jnp
pop
jnp
inc
stos
mulb
push
movsb
adc
adc
fistps
cs
inc
call
out
or
jne
xchg
or
enter
xchg
inc
rol
test
inc
inc
hlt
mov
mulb
fidivrs
clc
sbb
xchg
hlt
movsb
dec
adc
dec
loop
push
aam
fisubl
sub
inc
adc
mov
cs
test
or
sbb
mov
push
dec
pop
in
fwait
sbb
and
rorb
aas
sbb
inc
pop
outsb
dec
jge
sub
pop
adc
jl
sub
cwtl
iret
adc
xor
push
push
push
push
push
jo
mov
faddl
jb
pop
mov
ret
in
mov
jg
xchg
cmpsl
mov
pop
xor
pop
xchg
jl
sbbb
adc
dec
mov
and
add
sbb
ljmp
xchg
push
xor
jb
sub
bound
push
push
fbld
xchg
dec
icebp
scas
int3
mov
enter
dec
lock
leave
xchg
inc
mov
mov
cmp
and
xchg
test
adc
mov
adc
fisttpl
add
sub
sti
ljmp
adc
dec
scas
aas
sub
sub
pop
ror
movsl
push
jmp
pop
push
fdivs
sub
pop
testl
and
cmp
cmp
clc
push
jecxz
stc
int
cmc
mov
dec
adc
jmp
loop
aaa
dec
inc
loopne
add
fldenv
xor
xor
push
icebp
arpl
adc
jne
and
mov
mov
sub
cmp
fidivl
fs
xchg
lret
ret
push
fstl
jmp
test
inc
je
sbb
arpl
dec
inc
sbb
mov
mov
and
jb
add
insb
or
insl
cli
scas
adc
outsl
jp
bound
fdivrl
lods
sub
int
push
mov
push
ds
ss
fisttpl
sub
push
jmp
sub
je
push
adc
xchg
inc
add
mov
repz
inc
clc
arpl
aad
mov
js
lods
insb
push
cmp
sbb
dec
out
outsb
mov
stc
xlat
xor
or
jne
push
add
xchg
and
mov
aad
pop
subb
mov
fnstenv
xchg
add
mov
cmp
dec
lea
sub
sub
sti
xorl
rorl
fsts
push
stc
jle
pop
mov
movsl
repnz
ss
movsb
rorl
aas
push
cld
loop
clc
div
out
mov
inc
adc
inc
add
movl
mov
dec
outsl
inc
ret
into
xchg
scas
prefetcht0
pop
into
hlt
call
imul
imulb
jl
ficompl
adc
mov
mov
aas
lcall
les
xchg
jl
mov
or
mov
fcoml
out
lock
mov
inc
dec
out
dec
xlat
daa
push
hlt
pop
cli
jmp
push
mov
pop
cmpb
lods
cmp
jmp
add
add
in
stc
test
hlt
mov
push
pop
cmpsb
aas
jle
cmpsl
stos
inc
subb
je
outsl
inc
daa
sbb
aad
add
lret
cmpsl
mov
xchg
test
stc
aad
add
cmp
icebp
mov
les
ret
sbb
jl
fisttpll
sarb
out
pop
es
mov
in
nop
mov
cmpsb
ljmp
or
mov
arpl
in
mov
and
dec
cltd
mov
inc
int3
rorb
xlat
lea
enter
jmp
ja
popa
push
cld
mov
inc
lahf
jp
incl
dec
imul
fildl
mov
stos
mov
sbbb
cli
cmp
pop
xlat
adcb
cli
sbb
stc
mov
out
divb
mov
add
subl
adc
clc
stc
sub
ret
push
lret
call
xchg
jo
outsb
fisttps
loope
aas
fisubs
xchg
js
gs
mov
das
imul
daa
jl
aad
call
add
jl
xor
and
hlt
lret
inc
dec
pusha
sbb
mov
cli
mov
pop
in
pop
dec
jmp
adcb
lret
into
add
mov
adc
xor
outsb
insl
test
add
daa
or
add
cs
cmp
jae
arpl
in
or
addr16
and
and
adc
sub
sub
xchg
jb
iret
pop
push
mov
enter
or
or
js
loopne
mov
or
push
lock
sbb
pop
dec
comiss
divb
dec
push
or
sub
jmp
adcl
icebp
inc
nop
andl
cmp
lret
push
shrb
in
xchg
div
cmpsb
cmpsl
fsubr
les
lods
aaa
pop
data16
test
inc
mov
sahf
sbb
test
leave
inc
pop
loope
or
dec
cltd
dec
or
xchg
aam
pop
loope
inc
call
adc
in
fcmovnb
dec
lock
movsb
inc
call
and
les
fiaddl
xor
out
inc
icebp
test
xor
insl
xor
sarl
rdtsc
sbb
test
and
inc
in
adc
fidivl
jle
stos
outsb
out
cmc
adc
xor
pop
dec
or
adc
xor
and
xor
mov
lret
xlat
std
jbe
inc
testl
pop
add
and
cli
mov
loope
jl
outsl
jmp
movsl
xor
mov
and
mov
jmp
inc
sub
shlb
dec
push
cmp
ss
jo
sbb
imul
sti
std
fistl
dec
add
mov
sbb
adc
hlt
adc
or
sti
xchg
push
inc
adc
movsb
ljmp
adc
jmp
stc
jl
jmp
inc
mov
jnp
stos
xchg
insl
fisttpll
sbb
mov
pop
sbb
cmc
or
push
add
push
cmp
pop
and
ds
adc
sub
push
ljmp
in
pop
adc
movsl
or
pop
jp
add
jno
mov
add
fsub
data16
lcall
cmp
or
adc
mov
sar
rcrl
mov
enter
mov
mov
shlb
mov
outsl
and
pop
mov
or
rcll
inc
push
subb
cmp
sbb
cli
jl
rolb
repnz
sub
neg
and
clc
and
sbb
mov
or
or
out
sbb
movsb
enter
mov
psadbw
ficomps
jb
je
add
jb
mov
dec
arpl
dec
leave
xor
jb
fisttpl
std
cmpsl
mov
dec
outsl
and
xor
push
dec
cmpsb
punpckhbw
sbb
jo
pop
je
int3
fildll
stos
jmp
insl
add
out
sbb
shll
fistpll
add
push
test
jne
and
call
lahf
shl
out
mov
xor
je
or
addb
or
cmp
orl
scas
rorl
jge
testb
fsubp
movsb
js
push
push
inc
cmp
cmpsb
sarb
dec
into
cmpsb
sub
das
mov
fildl
insl
lret
inc
jle
or
mov
mov
sbb
aad
scas
gs
add
sub
es
scas
clc
cli
and
mov
push
or
adc
mov
test
or
sar
divb
scas
xchg
dec
sahf
sarb
add
btr
lcall
xchg
fdivs
mov
adc
lahf
sub
and
or
mov
out
xor
pop
subb
clc
mov
xchg
dec
repnz
lcall
add
adcl
test
arpl
mov
lret
cmp
js
lock
lea
insl
orl
sbb
cmp
jmp
test
dec
rorl
mov
call
xchg
clc
push
push
push
sub
js
cmpsl
push
scas
sbb
cli
xor
mov
mov
inc
rorb
aam
mov
mov
dec
sub
push
sbb
hlt
inc
push
sub
or
fiaddl
imul
push
pop
shr
icebp
sbb
fsubr
test
push
das
cmp
aam
push
sub
sbb
xchg
iret
inc
stos
inc
add
or
push
mov
cmp
rolb
and
ds
sbb
fcomps
xor
clc
mov
sub
cmp
push
pop
or
jle
sbb
rolb
and
cmp
testb
mov
inc
nop
push
jae
adc
aas
jp
fnstenv
test
and
rorl
stos
ficoms
lret
mov
mov
xchg
sub
xchg
mov
cmp
testb
icebp
lods
inc
push
mov
insb
ljmp
scas
push
mov
adc
xchg
movsl
shlb
xchg
pop
pop
divb
cmp
clc
and
inc
adc
ss
insl
aam
mov
inc
xchg
aad
inc
rorl
fdivl
cli
hlt
and
imul
push
add
imul
push
and
notb
fiaddl
fwait
cli
cltd
or
adc
testl
movsl
inc
push
mov
adc
inc
mov
fisttpll
or
aam
inc
cmp
unpcklps
das
repz
cmp
mov
sub
add
push
dec
dec
das
outsl
or
or
jae
pop
add
push
jp
nop
pop
pop
mov
push
cwtl
dec
call
sub
push
cmpsl
push
or
lea
into
popa
shlb
pop
xchg
fwait
dec
or
call
leave
push
data16
and
shl
mov
push
lret
sub
xchg
add
cmp
add
jg
je
push
sgdtl
cmp
fists
push
push
push
xchg
push
jmp
jne
push
inc
adc
int
and
jg
cmpsb
in
aam
icebp
jge
push
cli
push
or
jge
dec
xor
rcl
xor
clc
push
mov
jl
jle
or
lahf
dec
cmp
imulb
aas
sti
fwait
cmp
nop
jo
je
jp
enter
repnz
scas
ja
mov
inc
mov
lock
jp
push
push
popa
add
fidivs
int3
cmp
divb
push
mov
lock
in
sbb
mov
jle
pop
jecxz
test
xchg
es
mov
jle
in
push
add
push
outsl
jge
mov
xchg
pushf
or
inc
dec
adc
int3
xchg
mov
scas
pop
mov
lock
add
sbb
pop
mov
insb
sub
add
mov
outsb
pop
push
jge
scas
xor
scas
test
lods
mov
or
push
pop
inc
mov
aas
lock
roll
sbb
dec
xchg
mov
ret
in
mov
out
sub
pop
push
test
xor
push
lock
jg
jo
shlb
push
std
std
dec
pop
lds
and
iret
mov
push
mov
movsb
dec
test
jno
add
adc
jbe
push
pop
ret
adc
in
aam
or
mov
xchg
jb
mov
lock
mov
test
and
out
xorl
stc
test
xlat
out
dec
stc
pop
mov
shrl
pop
call
adc
pushf
test
mov
jnp
pop
adc
daa
rcrl
je
std
and
mov
xchg
push
dec
xchg
dec
shlb
xchg
decl
cmp
inc
pop
fidivrs
push
pop
pcmpeqw
das
pop
jae
jecxz
inc
sbb
mov
sbb
neg
cmp
shlb
je
outsb
and
scas
test
pop
jns
inc
xor
sbb
xor
ret
push
cmp
movb
mov
test
pop
add
push
insl
or
mov
add
sub
ss
mov
sbb
and
cmc
mov
cmpsb
pop
mov
xlat
mov
jbe
test
dec
gs
sbb
inc
push
lock
sub
adc
pop
loope
mov
and
inc
fcomip
sarb
es
mov
jnp
sbb
or
fildll
call
ss
loop
cli
rcrb
shll
xchg
mov
pop
dec
pushf
push
push
outsl
and
cwtl
je
push
mov
lds
mov
std
cmp
mov
ja
cmp
mov
push
lret
adc
or
or
stc
mov
dec
mov
add
scas
fdivrs
cmp
lcall
sub
aas
push
adc
push
fnstcw
stc
or
shrl
loope
pushf
loope
and
outsl
test
in
pusha
push
shll
lock
stos
sbbl
call
aaa
int
push
scas
sub
leave
jmp
aam
jle
jle
in
push
nop
pop
sbb
pop
sub
pop
xchg
lods
punpcklwd
lock
insb
push
cmpb
cs
jne
push
pop
sub
cmp
push
push
push
xchg
lods
push
mov
and
inc
fcmovnu
pop
gs
jmp
int
adc
cmpsb
clc
xchg
hlt
sbb
fstp
pop
roll
jecxz
es
insl
mov
decb
jb
jbe
fildl
add
or
push
cmp
add
pop
xor
loopne
test
mov
pop
adc
xchg
lahf
ss
cmpsb
daa
mov
imul
mov
pop
jl
movsl
je
ret
loopne
shr
mov
ja
xchg
pop
leave
enter
lds
dec
and
jno
cmp
jp
sub
sub
std
mov
in
nop
mov
inc
hlt
push
sbb
add
icebp
stos
shrb
add
jno
pop
jno
test
movsl
popf
xchg
fisttps
and
hlt
jbe
xchg
pop
test
mov
pusha
xor
sub
ds
push
arpl
orl
mov
test
hlt
neg
adc
lcall
in
pop
addb
and
xor
xchg
xchg
xchg
fiadds
adc
mov
lock
xchg
test
aas
shll
xor
cs
dec
subl
add
jecxz
push
and
add
daa
aaa
and
incl
js
add
shll
es
push
mov
and
ljmp
push
mov
sti
cmpb
cmp
or
bnd
negb
outsl
bound
lock
sbb
xor
push
jnp
loopne
repz
add
popf
lods
pop
in
xor
addb
xchg
stc
mov
adc
xlat
pop
push
incl
or
test
or
push
mov
sbb
mov
push
int
and
jno
sub
or
inc
stos
js
aam
ds
fwait
dec
or
add
xchg
faddl
in
cwtl
cmpsl
aad
or
jecxz
sub
sbb
inc
mov
fsub
jnp
push
addr16
add
fldcw
dec
out
fisubs
int
jbe
sub
push
in
int3
pop
jmp
test
rclb
lods
jp
dec
xchg
test
xchg
je
xchg
mov
push
les
xor
stc
das
in
mov
cmp
push
fcmovnb
stc
ret
xlat
flds
sub
jmp
sti
and
mov
xor
mov
enter
adc
dec
shll
fcmove
imul
iret
xchg
fbstp
shlb
pop
add
out
rcrb
jbe
mull
in
cmpsb
clc
push
and
push
sub
and
clc
lahf
pop
les
cmpsl
inc
loop
pop
jle
xchg
insl
outsb
dec
jae
add
and
int
daa
mov
inc
fwait
or
outsl
pop
add
sub
inc
jmp
stc
test
inc
std
xor
dec
adc
jnp
cmp
inc
jp
in
movsb
sarb
clc
js
jmp
aaa
shrl
mov
repnz
lods
xchg
cld
xor
andb
data16
add
dec
fwait
cwtl
and
cmp
lea
repz
leave
test
mov
stc
loope,pt
lea
push
addr16
fcoms
les
mov
loope
pop
aaa
shlb
pop
movsb
out
push
jl
jmp
mov
orb
or
dec
sbb
pushl
cli
aaa
push
mov
shrl
push
out
lock
ljmp
das
adc
popa
or
push
push
fldcw
jge
dec
or
sti
adc
fs
inc
out
adc
pop
pushf
negb
lods
into
outsl
imul
inc
or
mov
pop
mov
js
mov
imul
imul
loopne
jae
jge
add
jo
test
dec
pop
test
out
xchg
push
test
push
cmp
sub
cmpsl
lds
add
call
je
repz
test
cmp
pop
cmpsb
xchg
js
mov
fstpt
fimuls
jl
icebp
or
pop
fdivr
cmp
jl
test
cwtl
das
testb
add
fs
jbe
les
push
scas
pop
adc
pop
mov
insl
scas
sbb
jno
xorl
sbbl
inc
pop
les
pop
ljmp
in
pusha
mov
std
sub
xchg
test
xor
sbb
sub
aas
xchg
dec
sub
sbb
es
cmp
add
fs
adc
scas
lock
lcall
push
dec
add
xchg
jns
add
adc
mov
pop
jle
notl
sub
cmpsl
int3
jg
in
testb
dec
into
inc
jl
and
lock
lds
xor
enter
sarl
and
pop
cs
vmulss
and
shrb
push
mov
sub
aaa
and
mov
jne
adc
xor
sub
shll
mov
popf
insl
popf
and
mov
out
je
js
cltd
test
pop
fs
jg
sub
push
mov
arpl
repz
gs
and
mov
sub
repz
dec
lods
andb
jo
jae
cwtl
xchg
xor
iret
mov
aaa
insl
addl
push
addb
fidivrs
loop
stc
lds
leave
stos
xor
dec
mov
inc
adc
mov
and
cmp
nop
or
jo
mov
jbe
mov
push
mov
xor
xchg
mov
cmp
inc
push
add
data16
stos
xchg
mov
scas
push
pusha
or
sub
cld
ja
xor
adc
xor
test
insl
mov
test
jge
jp
adc
or
pushf
mov
push
insb
xlat
jecxz
sbb
jle
inc
dec
or
sbb
xchg
imul
xchg
mov
aaa
in
out
rcrl
xchg
xor
test
je
pusha
leave
addr16
mov
imulb
ror
xchg
jg
jmp
pop
cmc
mov
pop
clc
ret
repz
and
or
lock
ret
push
sub
mov
jl
lret
addr16
hlt
mov
cmc
int
cmp
ficoml
loop
aas
adc
add
or
inc
stos
xchg
cli
inc
pushf
pushf
popl
cmp
sub
int
lds
jnp
cli
dec
cmc
stos
fildll
cmp
cmpsb
lds
jge
mov
insl
in
stos
xlat
adc
mov
insl
sarb
inc
jne
pusha
adc
inc
in
mov
rcl
fisttps
lcall
push
test
or
jp
add
cli
cli
shll
push
cmp
cmpsb
xchg
push
cmpsl
leave
rorb
push
jmp
and
jns
mov
adc
mov
dec
insl
and
adc
push
mov
outsb
jnp
ds
cwtl
scas
push
fisttpll
hlt
icebp
mov
xchg
aad
out
sbb
fnstsw
sub
shrl
out
add
mov
mov
cmp
or
pushf
dec
cli
fisttpl
cmp
ja
loopne
xor
je
sti
jbe
aam
dec
test
ret
xchg
pop
dec
out
and
mov
rcl
mov
insl
in
cmpl
stos
cmpsb
test
mov
mov
mov
xor
push
aas
push
push
arpl
aas
lcall
fcmovnbe
inc
rolb
loope
in
sbb
push
mov
inc
add
dec
mov
and
insb
loopne
hlt
lock
cmc
xlat
inc
push
clc
mov
adc
mov
mov
or
add
addr16
jp
pop
push
pop
xchg
push
push
aad
xor
adc
push
insb
insb
dec
jb
inc
xor
jl
lea
pop
ret
mov
xor
mov
das
xchg
std
sub
shrl
sahf
dec
adc
or
xchg
cmp
neg
and
and
add
push
jmp
fs
inc
je
in
jbe
inc
sbb
out
mov
das
mov
pop
loop
aas
fldenv
mov
cmpsb
push
sbb
xor
lods
mov
ljmp
jl
mov
inc
shr
add
bound
lods
mov
xor
sahf
in
loope
test
subb
inc
or
pop
clc
xor
or
mov
and
xchg
add
outsb
or
sbb
sub
aam
mov
add
pop
popa
enter
sarb
mov
je
mov
xchg
and
test
repz
dec
push
ds
clc
enter
mov
insl
cmc
or
enter
pushf
test
ret
sub
add
and
mov
jge
mov
cmp
bound
pop
dec
mov
push
mov
or
lds
jmp
test
pop
sbb
push
cmpsb
jo
fiaddl
jnp
leave
add
stos
or
stos
icebp
mov
lds
int3
push
pop
lock
jl
fldt
dec
cmp
bound
dec
mov
lods
loopne
ja
sub
and
icebp
adc
xor
int3
xchg
cmp
mov
cmpb
add
ljmp
test
add
fs
loope
push
mov
add
outsl
jp
out
sbb
jo
pop
push
mov
cmp
or
or
shlb
cwtl
jg
cmp
mov
fistps
ja
pushf
xchg
lds
or
add
xchg
mov
insl
aad
and
or
addr16
pushf
jecxz
xchg
hlt
mov
lret
mov
cmp
pop
movsl
loop
mov
rcrb
arpl
addr16
fs
push
js
fldt
mulb
popa
fwait
arpl
add
pusha
ret
xor
mov
cmp
fcmovnb
mov
out
xor
rcll
sub
das
outsb
xchg
adc
pop
mov
movsl
jbe
pop
aam
jmp
movsl
adc
cli
xor
mov
jp
adc
pop
sub
and
xchg
sub
subb
xor
out
mov
fdivrl
add
pop
mov
lds
ljmp
lods
daa
ss
imul
mov
mov
pop
push
pop
repnz
aaa
popa
jge
in
out
pop
pop
dec
jge
hlt
rol
jo
mov
dec
call
lret
mov
xchg
test
loop
mov
pusha
xchg
adc
imul
sahf
dec
push
enter
pop
sub
sub
add
fwait
mov
xor
jge
leave
cwtl
lahf
imul
mov
sub
add
cmp
fildl
jg
sub
sbb
movsl
adc
insb
sbbl
cmp
pop
rorb
jl
cmp
adc
lahf
jne
clc
call
or
or
jbe
call
outsb
adc
push
fsts
rcrb
and
pop
push
dec
xchg
mov
and
test
je
enter
mov
cli
cmp
jl
mov
mov
popa
add
jle
jb,pn
sahf
jl
jb
imul
jl
loope
mov
cmc
in
mov
mov
add
xchg
or
pop
or
mov
aas
je
outsb
insb
enter
fimull
lahf
jo
pusha
and
scas
adc
test
push
decb
push
sbb
mov
lahf
sbb
ret
mov
push
aaa
mov
inc
jl
rorl
js
inc
rclb
imul
fbstp
fdiv
push
sbb
xorl
mov
mov
inc
ret
aam
sub
jp
in
cli
popa
rep
jne
inc
testl
clc
or
out
adc
adc
jge
fisttpll
cmpsb
xchg
stc
mov
cmp
sbb
mov
sarb
cmp
cld
mov
data16
pmuludq
hlt
xlat
ja
in
inc
arpl
pop
mov
shl
dec
or
scas
adc
sbb
outsl
lea
inc
dec
aas
dec
test
iret
loopne
or
jb
andl
adc
sbbb
inc
lret
ljmp
filds
mov
inc
les
inc
imul
xorb
dec
or
mov
fs
leave
arpl
cmpsl
paddb
mov
aas
in
aas
fsubl
add
mov
sbb
lods
flds
mov
cmp
mov
mov
jo
mov
cmpsl
fldcw
jne
ss
xor
cmpsb
dec
and
clc
or
andb
lock
jne
xchg
xchg
pop
jb
iret
pop
cmp
js
lea
pop
pop
mov
jg
or
push
or
cmp
xor
fsubs
mov
and
inc
mov
jle
cmpsl
push
add
and
mov
rorl
loopne
sahf
nop
push
mov
xor
test
shlb
jno
mov
dec
or
adc
inc
inc
cmp
xchg
jne
lods
insb
or
into
mov
pop
mov
jge
xchg
je
add
adc
or
sub
stos
lahf
xor
or
xchg
mov
jle
aam
push
mov
sbb
and
js
lahf
fdivrs
lock
loop
mov
sbb
mov
mov
jg
adc
lods
inc
and
mov
or
fidivrl
sar
sbb
sbb
and
mov
xchg
mov
sbb
mov
xor
jp
xor
test
xorl
inc
jbe
mov
fs
enter
addl
das
call
out
jno
scas
fwait
jo
and
sbb
das
std
jnp
pop
lods
add
shlb
and
not
test
and
sahf
and
les
lahf
and
jmp
loope
mov
arpl
mov
mov
sar
pop
mov
jmp
sbb
cmpb
cmp
fdivs
es
fbld
insl
adc
xchg
add
mov
adc
jb
xchg
int
ret
adcl
cmpsl
sub
clc
enter
and
jbe
xchg
fsubs
adc
inc
pop
push
cld
lahf
sahf
nop
jo
or
test
adc
pop
lds
xchg
nop
cmpsb
mov
mov
and
push
inc
test
or
sub
pop
popf
outsl
cmp
mov
rol
pop
lcall
scas
pop
push
into
xor
inc
insb
movsl
add
movsb
mov
leave
imul
into
repnz
rcll
movsb
test
popa
imul
push
and
jnp
cmp
nop
iret
lcall
jp
mov
movsb
xchg
cmc
out
pop
clc
or
lods
fnstcw
mov
call
xchg
push
pop
sbb
mov
jle
lock
movsl
stos
inc
aaa
push
sub
mov
daa
enter
ljmp
lret
sbb
cmp
loop
mov
inc
icebp
popa
sbb
add
mov
mov
addb
out
jg
adc
test
dec
push
pop
push
adcl
imull
mov
aam
jmp
rcrl
pop
notb
push
dec
notl
movsl
or
imul
mov
jae
lcall
sub
mov
and
fs
cmp
std
andb
xchg
sub
rol
pop
sbbb
or
xchg
xchg
hlt
jge
mov
mov
popf
dec
out
stc
jl
and
sub
popf
sahf
and
fs
sbbb
lcall
sbb
jle
xlat
je
or
jne
jecxz
daa
jbe
rcrl
out
mov
jns
mov
mov
or
adc
hlt
and
cmp
inc
sarl
loope
xor
jne
outsb
sub
ds
out
push
sar
ret
or
cmp
fnstsw
outsb
loop
cmc
divl
shlb
lock
lahf
and
stos
fld1
push
les
cmp
mov
scas
insl
divl
in
ljmp
inc
in
pop
mov
loope
dec
push
outsl
xorl
xchg
xor
loope
stos
sub
call
mov
lds
ljmp
sbb
movsb
ljmp
ja
pop
daa
aam
xor
std
imul
jl
leave
inc
pop
mov
imul
stos
xchg
aaa
mov
jp
fldenv
push
sbb
sti
or
lock
movsl
pop
push
adc
add
jns
out
rcll
addr16
mov
roll
pop
mov
insb
ret
xchg
xor
stos
xor
push
push
popa
aaa
ja
lea
leave
mov
push
sahf
push
arpl
mov
mov
popf
push
sub
jp
or
lahf
push
xchg
xlat
lret
or
cmp
fmull
xor
lock
cmp
movsl
cli
sub
loopne
adc
and
enter
movsl
das
mov
xchg
pusha
mulb
divb
roll
mov
fwait
lods
or
push
jle
adc
sub
cmpl
mov
adc
scas
mov
lods
xchg
scas
rorb
pop
and
xchg
sbbl
aam
xchg
dec
std
lret
in
ret
push
stos
ds
movsl
fs
stc
orb
imul
sbb
cmpsb
xchg
mov
testb
ja
test
movsl
into
jns
jno
sbb
pop
test
pop
pushf
xor
ja
dec
into
sub
ds
pop
out
fstl
mov
sbb
popa
call
int3
cmpsl
add
pusha
loope
mov
out
inc
or
sub
popf
xchg
data16
jo
xlat
scas
in
repnz
pop
ja
pop
sbb
loop
lock
jmp
daa
pop
xor
ret
mov
call
push
pusha
fdivrs
jno,pt
mov
test
test
sarb
orl
popa
pop
mov
mov
lds
mov
push
add
xor
int
lsl
lods
and
adc
jle
out
pop
xchg
leave
enter
inc
sbb
cmc
movsb
loop
lods
dec
dec
mov
pop
das
pop
xchg
mov
inc
out
xor
fwait
loopne
stc
popa
loop
scas
aas
xchg
push
add
adc
cmp
mov
cmpl
jnp
jmp
nop
out
fwait
scas
cmp
mov
or
and
jecxz
stos
incl
adc
lea
cmp
out
cmp
pop
dec
cwtl
aaa
sub
cmp
xor
lcall
mov
mov
pop
data16
lods
and
mov
movsb
xchg
insl
cmp
shlb
aad
imul
repnz
punpcklbw
aam
xor
sbb
dec
mov
xchg
outsb
push
or
sahf
js
cs
pop
mov
sahf
sbb
mov
adc
inc
jmp
xor
mov
adc
mov
push
cltd
mov
jbe
ja
test
mov
in
iret
mov
adc
sbb
popf
lock
jg
shlb
sub
daa
cmpl
mov
mov
lcall
mov
push
push
movsl
sbb
mov
movl
or
xor
cs
faddl
cmpsb
fadd
cmp
ja
pop
adc
sbb
int3
add
loopne
add
fdivp
sbb
mov
mov
push
dec
xor
nop
fimuls
sahf
jp
insl
sub
sbb
sbb
push
rcr
out
mov
sti
in
mov
clc
nop
ljmp
dec
mov
hlt
cmpsl
gs
mov
mov
sbb
and
addb
pop
fsqrt
or
xchg
add
or
cvtss2si
or
scas
or
test
sbb
mov
pop
mov
shrl
jbe
adc
dec
mov
pop
nop
insl
ljmp
fstpl
push
aas
mov
fadds
inc
clc
fucomi
pop
sub
jnp
xor
jmp
rcll
int3
xchg
xchg
xor
jmp
push
insl
test
jno
daa
mov
jne
xchg
mov
add
aad
add
adc
dec
repz
jmp
xlat
dec
mov
cmpb
mov
subb
shr
adc
mov
orl
inc
popf
sti
add
xchg
hlt
pop
addb
movsl
sub
adc
pop
mov
sbb
shr
push
movsl
cmpsb
mov
insl
ds
inc
bound
fst
mov
mov
sub
adc
cld
dec
adc
or
jae
mov
and
unpcklps
cmp
sbb
adc
stos
pop
mov
pop
jbe
adc
lock
out
out
dec
sub
or
push
and
jo
xchg
popa
cld
test
sbb
stc
test
idivl
push
ret
fwait
sbb
adc
xor
das
in
cmp
movsb
stos
or
inc
dec
mov
sub
adc
in
in
inc
add
imul
dec
enter
fdivl
mov
fmul
sbb
cmp
mov
inc
in
fbstp
push
push
push
jno
push
pop
push
ret
xor
pop
xor
mov
rorl
in
andl
ja
jnp
add
or
sbb
out
or
fldl
and
out
inc
rorl
jo
sbb
rorb
adc
cmp
cld
push
mov
notb
cmpl
mov
lock
pusha
mov
aam
xchg
push
jecxz
outsl
cwtl
out
movsl
lcall
scas
cmc
inc
lds
push
mov
cmpb
into
fdivs
push
popa
rcr
mov
je
sub
clc
ret
xor
out
pop
nop
aam
push
iret
adc
sti
enter
pushf
cmpsb
ja
adc
shl
insl
and
pop
mov
push
mov
or
bound
daa
aam
mov
ret
fsubrl
add
inc
dec
test
fadds
xchg
arpl
push
fdivrl
pop
and
flds
shlb
test
dec
jl
data16
jle
push
mov
sbb
mov
or
dec
rcrb
aam
addr16
sub
xlat
std
push
cmp
es
dec
adc
xchg
sbb
cltd
out
sbb
lods
or
mov
xor
int
aaa
int
dec
push
sti
in
test
inc
inc
xchg
mov
adc
push
or
bound
cmp
shll
insl
jmp
xchg
jbe
pusha
add
rolb
add
or
lcall
push
xchg
data16
aam
sub
loopne
aad
or
outsb
popf
xor
jno
add
stos
mov
mov
pop
ret
adcb
sbb
inc
mov
sbbl
mov
mov
movsb
xchg
mov
inc
ljmp
jo
adcl
adc
aam
sub
xor
imul
dec
pop
addb
adc
outsl
ja
popa
or
fisubs
dec
fnstcw
js
xchg
fistpl
fidivrs
mov
pushf
mov
in
sbbb
push
cmp
sbb
jmp
lea
imul
rorb
mov
xor
add
aam
rolb
subl
mov
movsb
inc
lods
call
in
stos
insl
pop
insb
xor
popf
or
rol
push
cwtl
dec
pop
jle
mov
inc
mov
cltd
sbb
repz
std
loopne
inc
mov
add
jns
nop
push
mov
push
ja
cmpsl
pop
push
out
addr16
jecxz
arpl
cmp
mov
enter
push
addr16
push
push
lcall
sub
jns
push
mov
mov
jns
push
adc
out
les
inc
cmp
and
jb
test
test
xor
push
aam
test
es
lcall
pop
push
loop
testb
xchg
sbb
add
andb
adc
inc
jge
shll
or
stos
jmp
xchg
mov
jne
push
add
clc
es
mov
pop
sarb
enter
pop
rcrl
mov
or
bound
push
inc
adc
lret
addb
mov
or
test
iret
mov
xchg
push
fcomps
mov
scas
inc
mov
mov
ret
adc
cwtl
adc
mov
mull
lahf
inc
pop
scas
and
push
dec
lock
inc
inc
cmp
push
out
mov
dec
jmp
sbbb
sbbl
mov
jae
jno
push
push
xchg
xchg
adc
and
imul
lret
mov
jne
mov
bound
in
xor
ret
imul
sub
sub
ret
inc
cltd
xchg
jg
inc
insb
ja
repnz
jl
arpl
mov
je
rorb
mov
loop
and
add
lock
push
pop
seto
imul
add
in
jnp
sbb
movsl
jno
dec
ret
cmp
pop
popa
sti
and
stc
adc
icebp
mov
rcll
popa
dec
cmp
add
insl
movsl
adc
sarl
push
lahf
je
and
mov
leave
cmp
cmc
mov
inc
packuswb
mov
cld
les
inc
pop
sub
xor
add
pop
fimuls
icebp
shl
xor
shll
inc
lcall
jmp
icebp
movsb
sub
decb
mull
push
pop
into
cmp
or
mov
push
jmp
xor
aam
std
mov
adc
jne
push
pop
adc
cld
push
jle
jne
popa
ds
rcr
ljmp
imul
and
sub
popf
in
mov
xor
imul
sbb
loope
adc
sub
mov
cmp
mov
mov
mov
testl
test
dec
mov
gs
test
sub
pop
push
xor
dec
pop
inc
outsb
pop
in
ja
das
daa
jbe
sbb
cmc
inc
sub
mov
loop
and
addb
into
lods
mov
sub
push
and
dec
xchg
xchg
out
inc
int
push
insb
pop
lret
pcmpgtd
je
push
push
lret
lods
push
adc
xchg
add
es
fs
pop
push
cmp
mov
sbb
shrb
jae
out
sbb
clc
or
out
fisubs
and
and
lahf
lcall
addr16
cmp
xchg
iret
and
icebp
popf
ss
fadds
cs
adc
out
push
fstpl
cmp
push
or
pop
sahf
fwait
inc
sbb
nop
movsb
or
call
xchg
push
lds
out
lds
pop
lret
mov
mov
push
dec
in
lret
loopne
add
pop
sbb
rcll
mov
jp
xor
std
sub
adc
jb
jp
jl
in
imulb
ja
mov
loop
mov
shl
mov
mov
add
pop
ficoml
jne
sbb
imull
rclb
je
stc
xchg
jns
scas
mov
jnp
adc
negl
test
sti
out
shrl
imul
cmp
or
push
std
dec
xorl
test
push
rcr
xchg
nop
js
out
shl
pop
mov
push
mov
jecxz
jg
or
es
ljmp
sbb
lea
jbe
sbb
dec
add
out
jno
add
mov
cmp
iret
icebp
jg
adc
nop
push
ja
inc
pop
pusha
sbb
loop
or
out
dec
das
hlt
push
scas
insl
mov
insl
push
aas
xchg
push
push
mov
pop
mov
push
lcall
js
fsubrl
out
js
mov
add
or
test
or
cld
xchg
sub
sahf
test
shrl
cmp
and
sarl
pusha
xchg
mov
inc
rorl
adc
xchg
jge
adc
add
div
cmp
push
push
mov
pop
inc
mov
loop
pop
push
push
mov
insl
xor
mov
jg
hlt
mov
in
inc
dec
jecxz
sbb
push
stos
push
pop
xor
test
sbb
outsl
xor
popa
cli
pop
push
in
mov
int
std
stc
mov
cs
xchg
cmp
pop
jp,pt
fsubr
mov
int
adc
sbb
push
data16
add
dec
mov
fwait
js
rep
repz
inc
mov
pop
addr16
and
sub
pusha
jnp
psllw
aaa
mulb
xor
cmp
mov
and
loopne
js
andb
arpl
cmp
cmp
inc
mov
inc
imul
lret
pop
and
call
lock
insb
fucomi
lock
repz
add
clc
orb
sub
das
sub
mov
loope
subb
std
xchg
jo
mov
mov
js
and
ret
sti
lods
orl
or
or
arpl
jle
jecxz
lahf
xor
ss
je
xor
xchg
mov
repnz
out
xchg
mov
inc
pop
inc
inc
std
cmpsl
and
lahf
dec
popa
fmull
mov
pop
and
in
mov
cmpsl
sub
push
mov
mov
insl
fcom
and
push
roll
jmp
cwtl
aaa
cmp
movsl
cmpsb
xchg
fildl
and
leave
loopne,pn
je
movl
or
cmp
and
cld
cmp
cmpsl
mov
sbb
and
inc
fcmovu
mov
and
movsb
lods
cmp
or
fwait
jl
lods
sbb
mov
nop
cld
xchg
icebp
mov
punpckhbw
inc
dec
cli
dec
mov
push
and
cltd
inc
fucomp
mov
push
add
sbb
inc
out
add
jno
dec
shlb
mov
in
and
movsb
cmc
int
rolb
mov
repnz
sahf
and
pop
fisttpll
pop
outsb
jl
movsb
pop
jmp
cmp
add
and
adc
mov
subl
rcll
out
or
adc
hlt
cmp
scas
mov
mov
filds
ja
mov
add
repz
add
pop
add
shlb
iret
pop
cmovae
mov
mov
mov
fsub
bound
sub
loope
add
lea
mov
pop
xor
stos
push
int3
push
fmull
cmp
dec
cwtl
dec
pop
xor
frstpm(287
shl
cs
push
jo
addr16
aam
enter
xor
push
sbb
shrl
lcall
iret
in
mov
sub
in
mov
jp
push
mov
mov
in
xchg
xor
div
xchg
aas
inc
and
dec
mov
imul
shll
incb
push
shlb
loopne
push
dec
pusha
dec
push
into
cmpsl
sarb
dec
std
mov
pop
rclb
ret
ljmp
ficompl
xchg
pop
jge
rcll
dec
je,pn
je
mov
mov
js
mov
mov
mov
mov
mov
add
pop
push
ja
cld
les
adc
cmpsl
inc
inc
cwtl
mov
std
jecxz
add
pop
sub
mov
push
xchg
je
cmpsl
inc
inc
sub
or
pop
cmc
popa
adc
cmp
fdivrp
and
push
lods
mov
fwait
jle
out
push
xorl
or
ret
mov
jmp
lahf
ss
push
cs
xor
sarl
mov
jmp
divb
dec
mov
sub
enter
loop
push
sahf
jb
sub
lock
jae
gs
cld
mov
loop
push
cmpsl
hlt
test
sarl
and
stos
enter
rcrl
lods
test
or
mov
adc
test
lahf
subl
cmpl
inc
mov
sub
pop
jecxz
sbb
mov
ds
or
xor
pop
mov
ds
mov
add
fcmovbe
je
je
inc
inc
dec
sti
sub
lahf
out
mov
jns
out
add
popf
rolb
sbb
sbb
lock
test
push
es
or
and
cmc
inc
push
mov
mov
push
cmpsb
jmp
in
jb
in
fwait
lods
orl
scas
add
push
test
data16
push
rcr
inc
int
cmp
hlt
and
sar
add
fidivrs
lods
test
rolb
pop
push
push
add
jmp
adc
cmp
mov
es
inc
cmp
mov
mov
add
mov
push
dec
mov
push
addb
insb
sahf
jp
push
lahf
lock
nop
test
movsb
inc
pop
sub
mov
in
xor
scas
mov
pop
mov
nop
mov
lcall
in
icebp
push
sbb
mov
dec
xor
pop
cli
or
push
int3
imul
cmp
jne
sub
jp
jl
sbb
enter
mov
stos
hlt
ret
lds
sbb
movsb
mov
mov
fadd
cmp
sbb
adc
insl
popa
leave
in
arpl
test
pop
mov
mov
jae
rol
cmp
lcall
das
iret
xor
call
inc
daa
jl
add
jne
das
inc
pop
xlat
popf
cmp
fdivrl
aam
mov
mov
scas
or
jne
sbb
or
xchg
movsl
jnp
push
and
fdivrp
rclb
jp
mov
gs
fsts
shrb
loopne
ret
inc
fwait
or
jmp
insb
sub
iret
shll
adc
sub
mov
bound
mov
cmpsl
add
pop
addr16
ficoms
adc
cmp
inc
pshufw
push
repnz
fwait
jbe
scas
sbb
cmp
xchg
cld
aaa
imul
mov
dec
mov
sahf
or
bnd
rcl
xor
inc
or
inc
cmp
pushf
andl
or
mov
add
gs
popf
dec
sub
jmp
iret
adc
and
dec
add
xor
mov
xchg
jb
pop
nop
cmp
fcmovnu
pop
push
or
loope,pt
fsubl
insl
push
jne
in
mov
popfw
sbb
shll
imul
imul
or
push
sub
test
les
aas
adc
inc
mov
cmp
test
and
inc
pusha
cmp
inc
in
mov
in
xor
test
fbld
push
rolb
mov
shll
mov
call
ficomps
and
loopne
daa
cmp
cmpsb
nop
mov
mov
test
outsl
push
pop
xchg
inc
or
stc
aad
call
lahf
cmp
ret
xor
pop
add
xor
shl
fsubrl
sahf
adc
nop
shrl
xor
dec
out
dec
push
pop
enter
xor
adc
sub
stos
xchg
sub
or
mov
jne
add
add
adc
mov
outsl
loopne
and
adc
cmpsb
aad
pop
clc
cmp
test
inc
pusha
imul
lods
adcb
push
leave
xchg
fstpt
jbe
jnp
adc
sub
sbb
add
adc
sahf
mov
call
push
mov
movsl
mov
fbstp
adc
adc
jnp
in
fisubl
arpl
mov
pop
and
stos
cwtl
jne
mov
inc
xor
test
loope
fdivrl
mov
test
lcall
cmp
ss
in
out
dec
xchg
ds
ljmp
pop
cli
icebp
mov
fdivr
xchg
sbbl
jp
add
or
int
xchg
pop
jbe
jmp
arpl
das
xchg
sbb
das
pop
cmp
shll
int3
cmp
addl
je
inc
adc
bound
out
jmp
sbb
mov
repnz
testb
mov
mov
mov
fdivr
fstps
xchg
ret
mov
lret
popf
mov
sbb
jmp
int3
lcall
rcl
shrb
add
xor
and
test
adc
jb
adc
cli
dec
jae
adc
outsb
enter
jbe
mov
into
insb
push
adc
pop
outsl
fisubl
push
mov
xor
bnd
mov
sub
into
rcll
xchg
cmc
or
adc
popa
inc
mov
and
out
in
nop
mov
pop
mov
cmpsb
pop
xchg
sahf
aam
inc
mov
mov
aad
cmc
pop
adc
add
es
add
mov
imul
mov
mov
or
mov
and
popf
mov
mov
or
cmpsl
cmpsl
or
fisttpll
loop
in
add
jno
sahf
or
push
and
mov
cmpsl
mov
test
xchg
arpl
pusha
pop
int3
mov
xchg
adc
pop
push
xor
cmp
xchg
fwait
daa
push
shrb
icebp
adc
mov
adc
mov
ffreep
push
scas
punpcklwd
xchg
sub
dec
pop
jo
jo
fsub
inc
push
xor
bound
loopne
add
push
outsl
inc
sbb
jp
cmp
sub
stos
inc
cmc
xor
rcrl
or
ljmp
xor
jle
xchg
push
gs
xor
mov
sub
fstpt
stc
cmp
push
ja
rclb
arpl
lret
pop
inc
jle
inc
xchg
fsubs
dec
or
ret
xor
mov
add
xor
faddp
xlat
in
int3
gs
stc
imul
stc
aas
mov
aad
mov
into
adcl
lock
sub
es
scas
mov
mov
rorl
pop
sbb
ret
out
repnz
mov
or
sar
mov
movsl
xchg
mov
js
cmp
cmc
adc
jns
xor
add
ljmp
push
sahf
sbb
pop
mov
mov
ret
or
inc
arpl
add
dec
aad
popf
sub
ret
test
mov
sbb
out
mov
mov
test
adc
cmpsb
test
repnz
cmp
sub
add
jnp,pn
je
xchg
jb
loope
sub
repz
xchg
outsb
sbb
sub
lcall
adc
icebp
mov
add
sub
fcomp
mov
jl
inc
dec
lods
mov
les
add
daa
mov
add
incb
leave
push
cmpsl
or
pushl
inc
jg
inc
or
lahf
std
or
les
orb
xchg
dec
pushf
cmp
jge
fwait
nop
and
fidivl
test
repnz
insb
fisubrl
cli
insl
lock
out
clc
loopne
inc
xchg
fs
xor
lahf
cmp
push
fsubl
sub
iret
mov
scas
icebp
daa
adc
and
sti
rcl
dec
inc
fistps
inc
xorl
and
xchg
sbb
pop
inc
push
sbb
push
loope
fidivrs
xchg
adc
and
loopne
loope
lahf
ja
fwait
in
pop
outsl
jge
push
pop
pop
fs
cmp
lods
mov
leave
and
inc
pop
mov
imul
sbb
push
movsl
push
les
xchg
outsl
or
sar
dec
or
ret
sbb
sti
int3
aas
testl
mov
rcl
mov
add
das
and
insl
and
pop
dec
push
sub
lods
movsl
lods
mov
in
adc
jb
arpl
in
add
fdivrs
jmp
push
leave
adc
dec
movsl
adc
int3
insl
insl
lds
cmp
push
add
xchg
and
sbb
stc
sub
mov
insl
cli
test
jne
mov
decl
cmp
cmp
out
cmp
mov
lock
add
lret
mov
test
adc
mov
add
inc
xor
push
divl
adc
mov
xchg
fnstcw
les
jge
xor
into
xchg
cli
icebp
jmp
pop
inc
jecxz
push
mov
clc
nop
ret
or
repnz
lret
sbb
das
adc
mov
dec
mov
js
inc
lds
and
bound
popf
cwtl
aad
hlt
add
add
pop
and
popa
add
inc
in
daa
jnp
in
jne
sbb
push
or
sbb
rolb
cwtl
out
shl
pop
idivl
loope
and
push
and
sbb
pop
subb
in
jne
into
stos
mov
loope
pop
movsb
repnz
repnz
lret
test
mov
xchg
push
sbbl
ljmp
mov
and
mov
sbb
cs
mov
loope
xor
mov
mov
xor
sbb
and
mov
sbb
lcall
mov
or
add
js
push
iret
pop
hlt
mov
sub
cmp
leave
dec
mov
pop
mov
iret
fiaddl
mov
mov
loop
push
ret
out
adc
and
inc
adc
insl
pop
ss
ret
in
mov
add
clc
mov
push
addb
pusha
mov
mov
test
bound
xor
and
movsb
repz
in
ret
das
das
mov
ljmp
shrl
cs
pop
mov
mov
pop
shlb
popf
pop
pop
xchg
mov
jle
xor
xchg
insb
add
loop
test
jno
es
sarb
mov
xor
mov
sbb
xor
repz
cltd
in
adc
mov
lods
negl
add
pushf
xchg
mov
jl
or
jns
lea
mov
inc
mov
cmp
sbb
divl
sbb
pop
into
mov
lock
add
ja
js
cmp
dec
or
or
mov
in
xor
cmp
mov
mov
sahf
sbb
outsl
pop
jp
push
sbb
std
das
add
enter
cmp
lods
add
into
jge
or
push
add
adc
rolb
leave
adcl
ror
cmpsb
adc
aas
into
rcr
test
pop
std
and
lea
push
leave
sub
add
inc
push
adc
std
add
and
xchg
add
adc
icebp
cmp
push
test
flds
call
pop
fmul
adc
std
mov
in
movb
xor
aad
jnp
dec
arpl
es
jl
cli
loope
dec
jae
push
enter
mov
ret
inc
ja
cmp
mov
mov
adc
jge
pop
push
testb
popf
xchg
inc
inc
fisubrs
clc
jne
push
jb
out
test
jns
es
inc
cmp
aas
and
or
add
pop
std
inc
clc
test
sub
aad
data16
sbb
push
ret
cmp
xchg
fwait
or
icebp
lods
xchg
sti
mov
xor
xchg
es
rorb
je
ret
mov
movsl
jbe
adc
sbb
jnp
shlb
jmp
clc
push
push
std
push
out
sahf
sar
rcl
jno
cmp
or
aas
push
lock
push
sub
cwtl
ss
data16
jp
mov
adc
add
pop
inc
jne
jnp
adc
out
jae
inc
mov
mov
xchg
and
push
or
mov
out
nop
add
or
ror
mov
xchg
das
outsb
bndstx
or
push
xchg
inc
mov
inc
mov
adc
test
sbb
es
std
xchg
xor
pop
aam
loope
daa
and
push
mov
mov
fwait
leave
sbb
mov
popf
mov
ret
popa
mov
dec
xchg
into
mov
mov
lds
lea
ret
out
push
shrl
ret
lods
pop
aas
ret
adc
fnsave
jecxz
fwait
sub
mov
sub
xor
outsl
mov
rorl
aaa
in
arpl
das
xchg
lret
or
repz
sub
sub
std
adc
xchg
lods
pop
das
mov
or
icebp
sbb
and
sbb
add
js
lea
dec
cmp
aad
js
xchg
loopne
inc
sbb
mov
fmuls
bswap
call
test
mov
inc
shrb
mov
mov
jno
sbb
jmp
aaa
pminsw
repz
adc
call
cmp
jmp
movsb
shr
cmp
rcrl
loope
rolb
or
data16
jno
test
cwtl
jnp
mov
or
jge
dec
push
lods
jbe
ja
gs
jae
jbe
xchg
vsubps
mov
cmp
cltd
cli
cmp
lahf
into
ja
xchg
mov
mov
jp
sbb
jl
xor
hlt
stc
aaa
inc
and
mov
scas
in
adc
mov
and
shrl
inc
pusha
jne
jae
mov
frstor
stc
scas
add
pop
push
jecxz
popa
inc
into
mov
adc
sbb
rcrl
xlat
or
or
dec
mov
mov
push
loop
xchg
sbb
enter
ficompl
push
lds
or
movsl
jmp
imul
mov
loop
ficoms
xor
bound
adc
js
es
lods
cmc
ss
sbb
pop
add
xor
je
sar
push
or
push
xor
sbb
jge
jns
std
inc
cs
ret
cmp
jl
xchg
into
movsb
leave
rolb
dec
std
ljmp
dec
adc
inc
ljmp
lods
push
xchg
mov
dec
jmp
jae
sbb
test
out
xor
ret
mov
lcall
jp
movsb
popf
jecxz
sbb
cmp
pop
mov
mov
scas
popa
dec
add
mov
divl
inc
ret
add
das
je
fs
je
add
test
out
xlat
pop
inc
mov
mov
pop
sbb
in
mov
fisttpll
cwtl
add
mov
mov
jl
mov
es
inc
mov
inc
insb
adcl
loop
fildll
jo
adc
push
scas
jae
test
and
push
std
mov
addl
loopne
addr16
in
cmp
aas
sahf
jp
jns
sti
cli
pushf
sbb
jne
lea
mov
adc
incb
mov
rclb
sub
pop
mov
sbb
push
sub
ja
loop
or
fdiv
and
fdivr
or
mov
call
incl
cli
jg
add
insl
call
mov
mov
ret
rorl
loopne
jp
xchg
xchg
dec
shlb
insb
or
jl
cmc
cmp
shufps
or
xchg
add
inc
cmp
rclb
aas
xlat
popa
adc
add
push
push
push
pop
arpl
mov
add
jnp
and
mov
and
out
rcrl
icebp
sub
sbb
movsl
scas
xor
cmpsl
inc
xlat
mov
and
dec
xor
jmp
in
or
sbb
je
aas
outsl
add
mov
mov
test
or
push
outsl
negb
jmp
fwait
xor
into
lds
dec
cmp
or
lea
lcall
mov
test
inc
test
cs
jnp
iret
fwait
dec
loopne
mov
dec
jmp
adc
mov
shlb
rcl
xor
mov
insl
repz
ds
xor
cli
inc
adc
enter
rcrl
cmp
and
mov
ret
loopne
ret
sub
cmp
in
test
imul
js
insl
scas
add
sub
cmpl
xchg
cmpsb
xchg
and
out
sti
jg
mov
or
repnz
xchg
out
fcompl
cmp
mov
pop
mov
xchg
xchg
xor
andl
dec
inc
inc
stos
stos
imul
movsl
aas
flds
mov
pushfw
pop
mov
in
outsb
popf
mov
sbb
push
cmpl
in
sbb
mov
imul
push
aas
mov
inc
mov
mov
scas
lods
ljmp
push
ret
pop
or
sbb
mov
loope
xchg
std
cmpsb
fs
add
insb
jbe
pop
pop
scas
jnp
inc
xchg
push
or
les
and
mov
jmp
mov
sbb
pop
daa
and
lahf
push
push
lcall
jp
mov
dec
lcall
lods
xor
loope
push
ret
cmp
add
fs
jl
inc
pop
rol
bound
or
lahf
mov
testb
push
call
jns
mov
cmp
jb
cmpsb
hlt
cmp
sti
imul
mov
rcr
rcrb
gs
stos
adcl
sbb
mov
arpl
das
xor
sub
in
test
cli
lods
push
out
mov
xor
sahf
int
es
fldt
lods
out
outsb
mov
leave
or
lods
mov
push
popa
pop
mov
mov
xchg
movsl
jg
sahf
pop
jne
pushf
sub
setbe
movsb
sbbl
inc
sbb
mov
add
add
push
adc
std
inc
add
test
mov
data16
adc
mov
dec
inc
dec
add
mov
jae
in
popf
movsl
cli
xchg
xor
out
mov
addr16
sub
xchg
jnp
ficoml
in
mov
add
pop
jmp
xor
bound
add
adc
bound
out
and
xlat
mov
or
fsubl
push
or
sbb
push
jb
xorb
push
cmp
mov
insl
and
or
fwait
push
ret
mov
inc
pop
fcomip
shlb
fsts
cwtl
pop
inc
loope
pop
icebp
mov
add
pusha
out
sbb
or
inc
dec
mov
fildl
notl
cmp
pop
jb
ret
sub
inc
mov
outsb
pop
push
lahf
fs
mov
cmc
pop
push
cwtl
je
shlb
and
sub
in
add
push
out
and
push
sub
pop
filds
lods
xchg
leave
hlt
dec
cmc
add
orl
mov
ret
sub
dec
addb
cmp
addr16
fninit
fdivrl
mov
shll
cmp
jg
adc
out
in
inc
cmpsb
mov
sbb
add
and
out
inc
mov
aad
add
test
ss
dec
or
imul
popa
xor
dec
shlb
pop
inc
xchg
and
in
xor
add
xor
sarb
repnz
add
nop
pop
jle
xchg
adc
cmp
jge
stos
hlt
leave
xchg
cwtl
lahf
fcoms
mov
cs
push
mov
ret
mov
cmpsb
mov
adc
leave
mov
je
aam
jg
es
xchg
mov
dec
xor
cmp
scas
xor
shlb
lret
sbb
lock
xchg
ljmp
pop
decl
stc
pusha
or
xor
add
dec
je
shr
fwait
sarb
xlat
xor
mov
fisubrl
insb
cmovbe
jmp
popa
lds
mov
call
push
sti
mov
pusha
adc
cld
dec
in
cmp
ret
sahf
and
in
inc
push
out
hlt
shrb
inc
xchg
ret
sbb
mov
clc
inc
aas
mov
push
jle
mov
test
nop
mov
pop
clc
rcll
add
or
pop
mov
mov
jns
xor
cld
std
xor
test
add
test
mov
jl
and
cmp
rcrl
jbe
fsubrs
pop
data16
mov
leave
mov
sub
mov
out
xchg
push
cmc
add
dec
jne
inc
push
inc
insl
stos
shl
repz
into
vpsadbw
inc
mov
mov
fldt
popa
add
fsubrs
subb
les
es
mov
and
mov
iret
cmp
bound
mov
mov
inc
xchg
dec
add
inc
and
dec
add
call
inc
dec
cmp
jbe
mov
andb
push
pop
or
lcall
pop
mov
mov
pop
push
dec
jns
stos
mov
loop
mov
pop
mov
push
xchg
loope
or
loope
test
push
push
or
mov
inc
and
das
outsb
inc
adc
cs
sbb
mov
repnz
mov
adc
dec
sbb
mov
jecxz
loope
pusha
movsl
loope
aaa
pop
pop
pop
idivl
test
mov
add
dec
aam
rcr
icebp
dec
xor
inc
pop
rol
jle
adc
mov
std
xchg
inc
mov
in
shrb
scas
xor
jmp
lret
pusha
les
add
inc
movsb
incl
cmp
mull
xlat
leave
lods
jle
fidivl
add
pushf
les
xlat
ficomps
push
clc
inc
push
cmc
mov
mov
pop
fadd
shl
sti
push
jb
shll
repz
xchg
jne
add
push
adcb
push
lds
js
cmc
adc
mov
push
pushf
cmp
inc
cmpsl
mov
xchg
adc
pop
inc
inc
pop
cmp
dec
adc
jb
dec
test
mov
pop
and
repz
ss
insb
cli
inc
test
popa
jmp
daa
cwtl
aaa
adc
jl
test
ret
mov
xchg
enter
xchg
shr
leave
imul
test
and
xchg
inc
ffree
pop
add
icebp
push
push
mov
jo
popa
push
repz
lods
ja
shlb
adc
punpckhdq
xlat
enter
xor
mov
repnz
pop
data16
gs
add
mov
dec
or
pop
fs
rorb
inc
bswap
push
addr16
mov
outsb
add
rolb
push
in
or
andl
cld
pop
sbb
sub
push
mov
mov
adc
dec
pop
cli
adc
jns
push
pop
mov
aad
and
cmp
inc
jl
add
lret
hlt
sbb
rcrb
loopne
sbb
cld
xorl
pop
outsl
pop
mov
inc
jae
lock
aam
int
mov
insl
mov
or
cmpsl
daa
fnstcw
mov
pop
add
xchg
cmc
aaa
ja
dec
loope
mov
insl
test
mov
adc
outsl
add
push
inc
popf
ds
inc
jo
inc
add
jg
fbstp
add
cmpsb
jb
das
mov
pop
or
arpl
addl
cmpsl
and
loopnew
dec
or
popf
push
push
or
dec
scas
push
sub
js
ficomps
sbb
mov
test
xor
pushf
pop
mov
push
mov
push
or
ja
push
insl
and
ret
xchg
xorb
and
mov
lds
fwait
das
stos
aas
enter
or
jp
js
int
ss
incl
ss
xor
mov
pop
aad
outsb
mov
aad
pop
je
imul
scas
mov
xchg
sub
xchg
sahf
dec
push
int
push
adc
sub
in
ja
and
jno
stos
or
lahf
inc
out
outsb
and
rcrl
lea
jbe
inc
mov
push
mov
jno
or
xor
and
je
movsb
add
loop
imul
or
sub
mov
test
movsb
rcll
cld
sti
std
xor
subl
push
add
jmp
stos
movl
in
addr16
inc
xor
cmc
mov
aad
push
sbb
mov
cmpsl
mov
nop
aaa
dec
mov
sbb
sub
les
mov
idiv
jae
pop
mov
xchg
adc
aaa
mov
mov
arpl
int3
pushf
hlt
cmc
cmp
xchg
mov
mov
jbe
xchg
inc
lea
sub
jecxz
jmp
push
mov
mov
sahf
sbb
adc
nop
xchg
mov
ret
mov
pop
push
aad
xorl
nop
mov
fnstsw
je
sahf
inc
push
arpl
test
sub
cs
adc
xchg
filds
push
insl
sbb
fidivl
mov
dec
mov
mov
fs
mov
or
imul
je,pn
ss
popa
lds
mov
repnz
push
insb
sbb
xchg
pop
das
pop
ret
pop
add
je
out
cmp
insb
ret
cmpsl
ljmp
addl
cmpsb
add
xor
aam
les
cmp
in
in
push
xor
adc
mov
and
or
cmc
or
jno
shrb
pop
push
sbb
mov
dec
cs
mov
mov
sbb
mov
out
shlb
faddl
pop
std
cltd
in
insl
dec
xor
xor
outsl
dec
dec
mov
xchg
jmp
adc
clc
jp
mov
nop
jns
mov
add
js
lds
and
cltd
cmp
pop
out
test
xchg
insl
mov
mov
cmpsb
push
dec
cmp
iret
loope
hlt
fimuls
cmp
dec
mov
mov
and
fdivrl
dec
pop
inc
icebp
or
adc
dec
inc
repz
jae
rcrb
jmp
ljmp
loope
and
aaa
divb
iret
idivb
lahf
mov
adc
sbb
loop
into
xlat
bound
js
mov
rol
lahf
into
dec
xchg
negb
inc
mov
repnz
sub
mov
xor
cmp
mov
or
inc
jb
and
inc
sub
aas
test
push
lds
jmp
or
jno
test
popa
lock
das
dec
inc
das
mov
pop
sbb
jg
jmp
test
mov
adc
ficoms
rorb
sbbb
add
sbb
out
insb
or
xor
adc
aam
daa
mov
dec
cmp
mov
mov
push
cmc
fdivs
aaa
mov
mov
adc
mov
or
lods
mov
hlt
cs
mov
sbb
les
mov
arpl
cli
ret
and
adc
sub
xor
mov
dec
sbb
and
pop
cmc
stos
sbb
mov
jb
inc
xchg
clts
cld
push
jne
hlt
xchg
lret
or
loop
or
mov
fldenv
data16
xor
cmp
js
pop
and
push
fnstsw
cmpb
or
or
sbb
sbb
mov
int3
or
into
ret
and
call
push
xchg
and
test
sub
xor
xchg
pushf
jecxz
push
clc
bound
xor
daa
sbb
iret
adc
jo
das
roll
xchg
or
test
testl
inc
cli
push
or
mov
xchg
pop
lods
jmp
repnz
loopne
or
icebp
xchg
push
jecxz
pop
jnp
in
in
xchg
lret
imul
push
jne
pop
lods
add
add
or
and
insl
jmp
pop
push
dec
mov
stos
sub
out
cli
frndint
mov
adc
out
mov
xchg
les
inc
ljmp
pushf
push
xchg
xchg
cmpsb
stos
mov
imul
mov
push
aaa
mov
lret
adc
cmpsl
pop
imul
cmp
es
orb
jp
movsl
addr16
push
pop
movsl
xorb
inc
les
fadd
jmp
mov
inc
dec
dec
pop
fnstenv
cmp
sbb
lods
mov
lock
pop
lcall
jecxz
clc
cmp
sbb
add
push
cld
sarb
mov
out
fs
adc
aaa
popf
in
pop
test
mov
mov
mov
jne
add
jg
cmp
lds
mov
addl
icebp
xchg
xchg
fisubrl
test
ffree
add
ds
mov
loope
inc
xor
lock
or
and
pop
das
jl
inc
dec
mov
fisubrl
lods
loopne
lahf
into
or
or
or
and
mov
cmpsl
out
pop
out
inc
push
add
add
fadd
pop
and
ljmp
popa
inc
adc
add
push
pop
sbb
cmpsb
rcrb
sbb
pop
loope
inc
ret
adc
xor
ds
sbb
jge
add
subb
stos
push
out
dec
jno
pop
cltd
rorl
xor
dec
aas
push
out
aaa
stos
mov
lds
xchg
mov
xor
scas
jle
xor
xor
mov
mov
ret
sub
je
mov
mov
xlat
pop
in
scas
mov
mov
movsb
mov
imul
mov
shll
push
enter
pop
inc
jmp
cmc
or
mov
clc
loop
cmova
scas
or
adc
mov
xorb
ret
cmpsl
test
sahf
shrl
mov
push
cmp
fcom
mov
aaa
or
and
cmp
jmp
fmul
dec
loop
add
sti
sub
enter
add
mov
adc
mov
or
and
out
popf
sbb
inc
ret
and
test
es
sahf
cmpsl
test
xchg
cmp
mov
push
or
icebp
mov
orl
ss
inc
out
jg
mov
movsl
sbb
ret
ss
jae
adc
adc
pop
insb
pop
insl
push
fnstcw
mov
jecxz
stos
mov
lods
cmp
jge
pop
jbe
mov
jle
and
pop
lret
rorb
or
or
dec
jmp
cmp
dec
je
xchg
xor
dec
mov
clc
cli
xor
ret
xlat
in
in
jl
andl
push
push
loope
dec
add
enter
and
stos
add
inc
out
out
and
and
inc
out
cmp
sahf
loope
aad
add
hlt
jbe
mov
pusha
adc
mov
lcall
pop
or
out
int
cmp
or
mov
outsl
or
pop
andl
pop
push
xchg
fwait
or
mov
arpl
inc
sbb
mov
dec
arpl
mov
sbb
dec
test
shrb
sub
xor
lock
pop
push
cld
mov
shrl
sbb
inc
js
fiaddl
mov
and
loop
fadd
pop
hlt
mov
mov
mov
out
imul
xchg
mov
sbb
cltd
cmp
dec
xchg
cmp
roll
lock
inc
and
mov
mov
pop
arpl
mov
cld
stc
sub
scas
pop
push
and
cmpsb
imul
pop
out
jle
xchg
mov
cltd
or
setbe
cs
mov
lahf
mov
outsb
xchg
and
mov
cmpsb
addl
cmp
repz
cmp
pusha
cmp
mov
pop
loop
adc
pop
inc
clc
mov
inc
push
loopne
pop
mov
cltd
mov
cmp
mov
sub
outsl
shll
sbb
loope
lahf
dec
inc
sub
ja
pop
jo
es
aas
fidivrl
push
mov
mov
fnstenv
shrb
ret
sahf
fdivrl
pop
mov
mov
iret
sbb
push
push
push
sbb
daa
mov
lcall
jo
mov
loope
add
add
loope
frstor
imul
aaa
xchg
jp
cmp
add
pop
or
scas
push
mov
das
jl
push
push
mov
test
mov
int
and
bound
xchg
xchg
jns
ss
adc
in
popa
push
lods
jo
jne
nop
outsl
mov
xor
shll
jne
and
je
or
shrl
mov
roll
cmc
testb
cmp
dec
or
shlb
xchg
jb
outsl
pop
cmp
xchg
add
xchg
sub
push
push
xor
push
cld
sub
pop
in
inc
lods
out
lods
push
push
mov
or
enter
jge
xchg
fsubrl
fwait
mov
repnz
mov
xlat
adc
jnp
js
mov
mov
push
cmp
js
std
aam
sbb
xchg
ds
push
in
add
fsubs
jl
test
sbb
pop
or
cwtl
inc
cli
add
ljmp
fisttps
in
sbb
cmpsb
xlat
xor
rcll
and
repz
ljmp
and
mov
mov
fnsave
sti
imul
orb
inc
sahf
jns
xor
add
dec
outsb
jp,pn
jmp
fiaddl
test
notl
aaa
orl
je
inc
jl
ret
mov
hlt
pop
bound
dec
pop
jno
mov
mov
hlt
or
jl
cs
shl
test
cmp
dec
cli
shll
inc
add
push
in
lcall
or
lods
xchg
sbb
push
inc
dec
inc
mov
mov
jns
das
fsubrs
add
sbb
pop
pusha
ljmp
and
ret
inc
pop
xor
sub
aaa
mov
inc
xor
dec
test
jmp
inc
mov
or
bound
xor
dec
jmp
outsb
stc
out
bound
sahf
pop
out
inc
pop
pusha
xlat
nop
std
mov
dec
cwtl
addl
mov
inc
icebp
fisubrl
xor
xchg
in
cmpsl
mov
pop
sbb
xchg
aas
mov
dec
sub
pop
lret
adc
or
and
dec
mov
add
push
xor
repz
aaa
jg
int3
inc
mov
or
dec
cmp
xchg
out
mov
inc
mov
cmc
ja
aas
mov
cs
lock
and
js
xor
cld
xchg
fwait
adcb
lods
cmpsl
push
clc
xor
and
das
mov
fwait
adc
pop
jne
mov
jmp
adc
daa
lock
xor
mov
or
shlb
jo
in
xor
add
jne
pop
les
aam
or
clc
xchg
stc
movsb
cmp
or
push
mov
mov
mov
iret
cmp
lret
int
sbb
or
nop
mov
mov
sbb
jbe
xor
xchg
or
and
subb
or
js
les
lods
out
paddsw
push
lock
xor
aam
movsb
out
jno
popa
fists
test
cmp
dec
shr
adcl
in
andb
adc
jp
sbb
dec
mov
inc
or
xchg
xchg
andb
ret
test
push
addr16
xchg
pop
xchg
and
pop
pop
inc
xchg
divps
mov
dec
or
lods
push
or
push
mov
outsl
dec
testb
enter
shlb
bound
lds
or
sub
leave
or
jmp
inc
je
jge
pop
bswap
pop
or
cmp
sub
mov
icebp
xor
xor
push
adc
push
cmp
pop
inc
enter
sbb
sbb
bound
mov
andb
shlb
xchg
iret
mov
push
pop
xchg
cmc
out
shl
es
jecxz
xor
mov
mov
rcr
loopne
xchg
fbstp
sub
sarl
fadd
iret
and
pop
add
dec
pushf
inc
lods
dec
ss
js
outsb
cmpsl
data16
lea
idivl
out
cmpsb
pop
mov
shlb
adc
sub
nop
lret
aaa
adc
mov
inc
clc
sbb
adc
xchg
test
mov
push
xchg
scas
out
xor
jmp
fisttps
or
scas
cmp
js
adc
inc
add
pop
lea
jge
cmp
rorl
mov
popf
flds
sbb
imul
enter
in
aas
and
inc
mov
jb
sti
test
popf
scas
mov
iret
mov
pop
je
ror
cmpsl
xchg
pop
shll
sbb
out
or
pop
shl
inc
addl
bound
outsb
popa
hlt
cmc
cs
ret
shll
mov
pop
push
xchg
mov
mov
ss
xor
inc
inc
test
jge
cwtl
sub
test
je
mov
int3
xlat
in
dec
add
mov
mov
movsb
add
js
add
ret
ljmp
mov
fsubrl
jg
test
test
pop
pop
fs
push
mov
shll
movsb
out
test
mov
push
aad
push
mov
fs
neg
out
sbb
mov
mov
mov
rol
dec
call
dec
cmp
mov
mov
addr16
and
or
jp
insl
push
mov
inc
imul
ss
or
mov
push
inc
enter
stc
mov
and
xor
leave
cmpsl
lret
mov
add
or
sti
push
sti
loopne
call
inc
call
outsb
mov
mov
push
push
push
cmpsb
je
repz
lret
scas
scas
cli
inc
xchg
push
xor
nop
aad
sbb
stos
pop
test
mov
loope
aaa
cli
neg
test
mov
cmp
xor
add
add
das
add
or
add
out
jmp
lock
pop
int
aad
leave
mov
lods
addr16
call
or
arpl
push
add
push
mov
addl
jae
sub
add
aad
sub
les
pop
sbbb
mov
inc
adc
inc
popf
movsb
mov
and
out
push
sub
std
adc
or
lock
imul
and
pop
movsl
sbb
adc
jno
and
cli
bound
cmpsl
repnz
sbb
jmp
adc
fimuls
sub
adc
fadds
jae
jae
mov
pop
jge
xor
addl
or
ds
or
jae
bound
or
jb
inc
push
insb
jge
jo
in
dec
inc
lcall
imul
sti
arpl
shlb
fldenv
sbb
mov
add
xchg
fildl
push
or
daa
add
loop
xor
lahf
gs
cmpsl
sbb
fnsave
mov
xor
and
jge
inc
or
dec
mov
mov
lret
pop
sub
ret
add
mov
mov
daa
loop
call
push
mov
push
inc
sahf
outsl
test
test
inc
imul
es
cmp
mov
notb
shll
xor
sbb
test
inc
dec
sub
xchg
pop
add
int
mov
mov
int3
scas
stos
mov
pop
xor
imul
xchg
stc
mov
das
push
adc
push
addr16
dec
incb
lret
orl
jbe
sti
in
rcl
or
push
mov
sbb
add
lds
mov
mov
push
pop
sub
push
add
lods
scas
out
js
pop
rol
jo
mov
mov
jecxz
push
in
mov
pop
mov
scas
push
dec
clc
dec
in
dec
test
mov
and
push
mov
aas
dec
leave
push
jbe
daa
lcall
jmp
jmp
push
sbb
icebp
lods
adc
add
nop
scas
push
and
adc
fdivrs
or
lock
dec
cmp
stos
test
pop
dec
lcall
sbb
test
mov
adc
sub
outsb
jp
loopne
cmc
xchg
jecxz
or
shl
dec
or
or
xor
test
cld
xor
xor
pop
and
jp
pusha
adc
daa
xchg
outsl
xchg
sub
push
pminsw
add
sti
mov
inc
int
cmc
dec
or
push
cmp
jo
leave
notl
sbb
movsl
adc
rcrl
ds
lea
mov
call
xor
loop
loope
ldmxcsr
inc
test
or
outsb
dec
frstpm(287
jns
mov
push
bound
nop
adc
mov
popa
in
rcr
jae
dec
orl
and
push
out
icebp
inc
mov
bound
loop
mov
jns
cmpsb
movsl
scas
jb
pop
insl
or
shlb
pop
mov
sub
add
aad
movb
add
mov
xchg
mov
shll
hlt
pop
mov
nop
sar
mov
adc
or
imul
xor
lds
adc
push
or
push
clc
dec
cmp
outsl
xchg
push
mov
xor
std
fdivrs
lods
addr16
xlat
call
add
int
dec
and
push
mov
inc
sub
int3
roll
pop
test
test
cmp
mov
cmpb
jecxz
js
inc
adc
inc
and
xor
pop
jl
fs
cmp
push
les
add
pop
pop
sbb
fdivrl
mov
popa
push
fisttps
out
sbbb
push
inc
xchg
mov
mov
nop
cmp
aad
push
inc
sbb
repnz
xor
cmc
inc
je
jns
jbe
xchg
daa
shl
hlt
jo
mov
lods
jmp
mov
lds
int
xorl
jns
jg
aam
pop
fstl
cmpsb
mov
into
call
fists
pop
dec
mov
sbb
pop
mull
mov
add
sahf
adc
xlat
jecxz
cmp
pop
cmp
mov
sbb
ret
or
inc
ljmp
mov
repnz
bound
mov
push
and
pop
fnstsw
add
xchg
inc
push
xor
mov
sbb
add
and
mov
jle
loopne
loopne
mov
daa
jl
loop
insl
xlat
adc
cmp
or
cs
fwait
xor
mov
nop
cmp
inc
mov
pusha
lret
int
aad
scas
ja
pop
or
add
stc
mov
or
pop
cmc
fildl
xor
cmp
test
fldl
loop
in
push
test
mov
into
sub
out
sub
push
adcl
in
push
push
pop
lock
orb
mov
inc
cld
push
pop
add
pop
sahf
shrb
movsl
popa
inc
xor
and
xchg
roll
adc
outsb
mov
sbb
dec
mov
mov
es
das
xlat
mov
xlat
ficomps
push
mov
inc
pop
fnstenv
lret
mul
movsl
mov
das
mov
push
and
cmp
pop
push
sbb
subl
or
lcall
mov
fiaddl
pop
or
fmull
fists
clc
push
rcrl
xchg
pop
or
push
loopne
cmpsb
ja
or
lcall
jbe
testb
or
mov
push
ja
jne
mov
and
fistpl
add
or
movsl
cs
jb
and
jo
and
iret
jne
insb
dec
xchg
fisttpl
inc
pop
in
in
aam
ljmp
push
pop
push
lea
daa
adc
fcompl
nop
sub
mov
sbb
decl
out
add
xor
or
dec
ja
testl
sbb
inc
andb
cmpsl
in
ss
mov
jle
add
xor
inc
sub
push
aaa
sar
add
sbb
jmp
sub
sti
ljmp
neg
in
cmp
scas
mov
push
iret
push
jbe
rcrl
inc
aad
dec
ficompl
shlb
jp
sub
inc
mov
daa
pop
popa
in
inc
push
inc
aam
das
dec
insl
or
mov
mov
pop
mov
ror
imul
dec
jns
negb
dec
or
fwait
cmp
ss
xor
lret
mov
xor
mov
nop
xchg
mov
in
sbb
mov
or
jg
icebp
das
jo
pop
dec
mov
loop
cmc
cmpsb
nop
add
mov
and
out
adc
ret
xchg
je
pop
jle
test
push
ds
ljmp
lods
adc
push
and
sub
daa
ds
mov
xchg
add
xorl
mov
mov
and
addb
jo
outsb
mov
xlat
xor
popf
scas
mov
and
jmp
scas
fistpll
test
mov
movsl
pop
in
jle
mov
scas
push
adc
mov
xor
adc
cmp
pop
shll
add
sub
into
test
or
xor
pop
cli
outsl
lea
orb
leave
int3
sbb
mov
je
lock
mov
dec
repnz
cmp
fidivrs
ds
test
mov
cmc
pop
fst
cli
lock
je
cltd
in
outsb
loope
dec
rorl
or
insl
pop
scas
rorb
xor
xchg
mov
mov
sbb
shrl
inc
xchg
xchg
jb
mov
out
das
jecxz
fiaddl
xor
jne
dec
aad
add
daa
xor
in
enter
dec
mov
and
sub
outsl
in
dec
leave
or
scas
pop
adc
push
mov
or
fsubl
fcmovb
pushf
mov
leave
sub
and
xor
lods
add
pop
adc
test
hlt
jecxz
inc
push
mov
fdivrp
add
pop
loope
daa
test
or
xchg
orb
jl
mov
adc
dec
and
je
outsb
mov
lret
sti
mov
xor
pop
push
cld
pusha
mov
jp
add
add
pop
jge
stc
pop
fsubrl
push
dec
push
aas
loopne
mov
rol
pop
inc
ljmp
push
je
pushf
xchg
lahf
fnstenv
ror
adc
cld
loop
add
out
es
cwtl
xor
aas
aam
pushf
adcb
inc
pusha
mov
js
iret
sbb
or
push
pop
lret
mov
sub
xchg
aaa
mov
fdivl
arpl
es
popf
xchg
push
mov
sbb
add
cmp
and
xchg
enter
mov
in
jae
cmc
jnp
pop
fwait
bound
push
loope
push
or
inc
lcall
aas
sbb
mov
jbe
jbe
loopne
mov
mov
leave
sbb
push
movaps
icebp
lcall
xchg
fiaddl
xor
and
gs
enter
mov
mov
mov
negb
aas
fs
imul
add
pop
aas
xor
pusha
cmpsl
adc
mov
pop
outsl
je
arpl
mov
cmp
fiaddl
sub
icebp
test
fmuls
xchg
cmp
arpl
or
test
sub
fildl
unpckhps
clc
and
loopne
inc
aaa
and
cmp
mov
daa
xlat
adc
jne
dec
loopne
adc
mov
pop
into
into
dec
lahf
into
sbb
sbb
sub
or
push
insl
lea
mov
jg
into
dec
cmpsl
ss
push
mov
sbb
les
xor
bound
and
jmp
ds
xchg
mov
jb
inc
mov
xor
jmp
lcall
jg
xchg
sahf
add
pop
loop
cli
rorl
nop
push
pop
inc
pop
push
test
sbb
cmp
clc
sahf
adc
sub
pushf
mov
add
and
push
mov
fisttpll
push
pop
mov
mov
fdivl
xchg
mov
das
cld
lea
adc
mov
jge
mov
adc
daa
add
add
mov
test
xchg
mov
and
push
inc
jae
cmp
scas
in
xchg
addr16
sbb
add
out
data16
call
icebp
add
mov
and
ret
cmpb
sbb
xor
pusha
and
or
cmp
jnp
ljmp
lock
mov
pop
filds
sbb
jmp
jno
cmp
fwait
mov
sub
mov
lahf
aaa
lcall
xchg
and
sub
adc
iret
sub
inc
shufps
mov
sbb
add
or
pop
xchg
out
jmp
inc
push
dec
jae
cmp
and
adc
adc
repnz
ds
jg
ljmp
test
cltd
repnz
int3
pop
sbbl
cmp
mov
out
dec
out
in
repz
in
add
out
rclb
rcl
mov
movhps
push
int
insb
pop
push
dec
adc
inc
mov
pop
lea
es
lods
mov
mov
sbb
scas
cs
fiadds
mov
cmpb
or
lret
xchg
test
lret
sbb
popf
or
ds
adc
mov
in
mov
cmpsb
cs
sbb
inc
je
and
into
shl
dec
push
test
iret
jge
jmp
mov
iret
loop
jne
sub
cmp
mov
dec
inc
add
inc
lock
fs
iret
nop
inc
xchg
fcomps
test
adc
push
lds
cmc
insb
and
mov
and
in
stos
jne
sub
push
mov
arpl
push
pusha
pop
call
xor
and
std
jge
imul
rcr
ret
pop
faddl
int
inc
test
test
sbb
inc
js
mov
out
cmpsl
mov
xlat
mov
or
cmp
scas
ret
cwtl
icebp
dec
pop
push
jg
sub
repnz
or
repz
popf
test
push
stc
insb
gs
lahf
clc
xchg
imul
pop
or
or
orb
lret
sbb
loop
and
xchg
es
xor
mov
fidivrl
test
dec
pop
std
loopne
test
jns
je
inc
out
mov
js
mov
sbb
sbb
in
addr16
mov
push
add
xchg
ljmp
aad
xchg
mov
cmp
sub
or
fstpt
jl
inc
sub
fldt
icebp
sarl
call
xchg
popa
ja
push
cmp
push
cld
out
movsb
stos
jg
or
mov
call
shll
jmp
push
cmp
fcomps
ret
adc
push
jge
dec
xorb
nop
sahf
vmread
dec
subl
push
mov
xor
aad
push
insb
bound
inc
mov
xchg
adc
fbld
sub
test
int3
popf
test
mov
imul
sbb
ret
out
loopne
aaa
add
orb
sub
jne
cmp
lods
fstl
inc
sbb
dec
sbb
add
cmc
mov
push
adc
and
add
jge
ret
leave
mov
movsb
inc
mov
adc
xchg
jo
shll
pop
imull
xchg
or
pop
mov
pop
aas
jo
jbe
mov
pop
frstor
stc
cli
bound
lret
lcall
loope
mov
fisubrs
push
mov
mov
mov
mov
inc
das
icebp
and
ss
mov
out
fidivl
mov
mov
mov
push
mov
cmpsl
aam
xchg
lock
pushf
jg
hlt
aam
xchg
lock
push
loop
dec
test
bound
xor
mov
push
jge
jo
jle
push
xor
pop
mov
pop
rorl
ja
lret
in
andb
push
sbb
jns
sbb
test
cwtl
sahf
outsb
inc
insl
sbb
lret
loopne
sbb
mov
pushf
adc
push
jp
addr16
and
and
mov
jl
in
ret
mov
inc
cmpsl
pop
or
push
mov
mov
mov
jbe
mov
arpl
pop
xchg
or
mov
inc
or
jo
rcrl
adc
call
bound
lock
pop
add
mov
loopne
sbb
pop
and
aad
aas
test
out
pop
lahf
mov
push
xlat
or
cltd
fbstp
ficompl
ficoms
adc
cmp
mov
dec
shlb
adc
cmp
mov
push
sbb
cmp
adc
mov
gs
and
adc
outsl
jns
dec
cmp
sub
or
out
inc
in
int3
dec
add
sub
sbb
es
push
cmp
xchg
ret
cli
pop
mov
sbb
movsl
call
cmp
cmp
outsl
add
push
adc
xchg
push
sbb
mov
rcr
pop
inc
les
inc
loop
fldcw
add
scas
xor
vpaddsb
cmp
cmp
or
pop
dec
adc
push
cmc
push
lock
adc
test
lcall
xor
cmp
jo
mov
xor
aas
push
mov
adc
sub
fs
rep
emms
dec
mov
addb
and
negb
outsb
xchg
add
sbb
jle
in
push
and
add
imul
xor
fsts
adc
adc
cltd
loopne
xor
pusha
jmp
add
pop
ret
xchg
push
sub
fidivl
stos
cmp
mov
push
sub
or
push
sbb
cmp
dec
aaa
rorl
lods
loopne
test
mov
xor
call
jle
fcoml
popa
scas
push
ficompl
loop
insb
xor
mov
push
mov
daa
cmc
and
mov
mov
mov
cmp
rcrl
roll
loop
lea
xor
jae
adc
add
aad
pop
ret
mov
cmp
mov
loopew
fistpl
pop
xchg
inc
ret
or
inc
ret
daa
hlt
movsb
and
push
add
mov
and
enter
dec
mov
or
cmp
shrb
in
out
mov
mov
call
popf
jne
sbb
jbe
les
or
rcl
aam
andb
int
dec
jl
xor
aaa
push
inc
ffreep
dec
xor
mov
sbb
movsb
jo
loop
push
lret
stos
cmp
or
dec
xor
mov
enter
gs
pop
orl
repz
scas
mov
lock
pop
loope
xchg
jnp
push
push
or
aam
add
pop
mov
xchg
push
inc
jmp
inc
fwait
orl
jb
mov
js
mov
xor
popf
pop
in
jg
and
dec
xor
int3
cld
fwait
pop
cmc
leave
inc
in
push
sub
add
adc
push
inc
adc
and
shll
inc
xor
mov
test
fs
loopne
xlat
sbb
test
cmp
or
aam
jb
stos
inc
mov
mov
clc
add
repnz
sbb
rol
outsl
test
repz
call
xchg
add
shlb
in
cmpsl
mov
mov
lock
fldl
pop
cmp
es
push
xchg
xor
sbb
stos
bound
iret
and
lcall
bound
loop
push
pop
cmc
cmc
inc
mov
push
sbb
rcll
mov
xchg
push
gs
or
sbb
mov
cmp
fistl
fs
stos
push
xor
cs
inc
dec
lret
push
cmpsl
inc
mov
add
mov
xchg
pop
lahf
gs
adc
lock
mov
inc
addr16
mov
mov
jge
inc
pop
fwait
cld
aaa
or
xorb
and
shlb
inc
aad
test
push
pop
mov
jns
in
or
repz
push
shlb
pushf
xor
sahf
cli
aas
or
xchg
jl
dec
shl
inc
ds
or
lods
mov
orb
sbb
cmpsl
in
inc
ss
andl
mov
out
add
out
out
xchg
or
cmp
insl
or
subb
xor
sub
sti
addl
mov
call
mov
popf
aas
iret
xchg
rcll
xchg
movsb
dec
lods
leave
mov
int
ss
cmp
sbb
sub
lcall
lcall
lods
cli
daa
out
xor
sub
lahf
push
rcr
pop
pop
js
fs
pop
or
ret
adc
addb
mov
insb
lds
subb
jecxz
pop
add
hlt
jecxz
push
push
andb
or
and
pop
addb
push
negl
mov
or
movsl
cli
jl
icebp
sub
cmp
test
ret
inc
lea
cmc
ficoml
test
cmp
inc
xchg
sahf
xchg
imul
push
leave
and
pushf
dec
ds
dec
pusha
out
and
ljmp
daa
push
add
lea
jmp
xchg
pop
ljmp
rorl
loop
cmp
test
xor
or
sbb
stos
imul
mov
std
popa
cmpl
mov
add
ja
fidivrl
cmp
or
aas
cs
jp
fldenv
sub
into
jmp
xor
sbbb
sbb
out
mov
imul
xchg
pop
fwait
lock
push
mov
mov
pushf
cmpsb
fcmovnb
mov
pusha
es
cmc
lret
icebp
loope
scas
adc
inc
repnz
js
mov
lods
xchg
pop
je
xchg
out
ret
filds
inc
cmp
repz
call
dec
xor
mov
je
lahf
sbb
jo
inc
inc
pop
insl
dec
xchg
add
adc
mov
and
dec
subb
imul
out
pop
add
sub
inc
or
xchg
xchg
push
imul
mov
xchg
mov
pop
sarl
dec
popa
xor
loopne
clc
mov
fistps
xlat
push
cmpsb
cmc
out
repz
dec
inc
cmp
cwtl
push
mov
mov
mov
pop
xchg
ret
scas
subl
lds
jo
xchg
pop
push
je
leave
sahf
xchg
popl
inc
stos
mov
or
imul
jne
loope
or
aaa
shrb
xor
lds
dec
loop
xor
xor
loopne
stos
call
sahf
cmp
roll
std
shlb
jae
push
push
push
sbb
sub
push
sub
sbb
sub
mov
jp
inc
mov
mov
idivl
cmp
mov
jb
cmp
scas
or
int3
mov
nop
mov
xchg
dec
movl
fdivrl
inc
daa
das
mov
or
and
mov
mov
nop
jl
and
inc
inc
ret
push
push
cmpsb
iret
mov
inc
jecxz
xchg
dec
adc
lock
or
lret
mov
cmp
and
adc
dec
sbb
ficoms
out
ret
nop
stos
jp
xchg
rorb
lods
pop
push
shlb
push
ds
lea
push
cld
in
lock
cmc
pusha
orl
aaa
xchg
shlb
cli
shlb
push
lcall
mov
out
lea
jno
lods
push
loope
adc
mov
sbb
stos
hlt
xor
mov
xor
shrl
repz
mov
ret
test
sub
insl
ret
out
push
push
cmp
int
mov
hlt
ljmp
les
mov
add
or
lods
mov
in
lods
and
std
sub
xchg
push
int
fstpt
mov
cmc
es
ret
imul
ret
xor
pop
popf
loop
jo
loopne
add
inc
sbb
pushf
sub
push
mov
shlb
pop
fbld
fwait
jg
cmp
fisttpl
sub
lea
xor
out
jp
dec
daa
xorb
mov
xchg
or
jns
scas
cmp
test
adc
movsl
mov
aas
dec
dec
mov
sbb
pusha
scas
sbb
adc
lods
dec
repnz
and
push
cmp
aam
or
xor
inc
mov
cwtl
lock
mull
insb
mov
dec
data16
push
pushf
pop
outsl
lahf
xchg
jns
test
sub
adc
fisubs
lds
inc
jecxz
xchg
cmp
inc
xor
and
push
jnp
adc
ror
add
icebp
push
xchg
xorb
mov
rol
cmp
add
push
push
dec
iret
add
mov
inc
inc
aas
movsl
stos
ja
std
inc
xor
lea
addr16
test
imul
das
jbe
inc
fcoml
mov
fucomip
xlat
mov
mov
in
mov
ds
add
xchg
pop
mov
push
cmp
inc
and
add
sbb
movd
cmp
pop
fists
dec
push
push
icebp
push
imul
push
xor
mov
clc
and
pop
repz
outsl
cld
mov
sub
mov
pop
int
and
out
ret
adc
cmp
dec
repnz
pop
mov
push
pop
inc
mov
sbb
push
mov
fwait
mov
test
cmc
loope
div
pop
xor
xchg
mov
in
cmpsb
out
loope
rorl
ljmp
xchg
xor
stc
test
or
xor
sbb
mov
iret
loopne
lcall
jns
sbb
mov
inc
nop
cmp
cli
jae
xor
les
cmp
inc
adc
test
adc
popa
adc
into
or
ret
push
and
dec
and
sbb
inc
xor
sub
pushf
int3
leave
test
daa
push
pushf
dec
test
and
icebp
out
sbb
jo
fdiv
fisubs
mov
adc
or
sbb
sbbb
cmovp
add
mov
adc
mov
adc
pop
add
pop
cmp
and
test
popf
je
mov
inc
fwait
mov
push
orl
imul
insl
mov
lods
or
es
orl
iret
dec
push
or
jg
inc
pop
or
mov
fisttps
mov
sub
loopne
rol
mov
das
pop
cmp
lcall
mov
mov
and
mov
stos
cltd
push
fdivs
push
mov
fisubrs
fdivrl
adcb
jecxz
mov
mov
sahf
dec
arpl
cmp
repnz
mov
and
test
sbb
xchg
das
add
mov
mov
or
pop
xor
mov
jp
cmp
daa
lret
inc
cmp
mov
sarb
sahf
adc
add
sti
mov
out
mov
lds
out
shl
outsb
or
ja
js
push
mull
addr16
loopne
cmp
jnp
xlat
decl
insb
call
lods
ljmp
adc
jle
inc
icebp
sbb
add
cwtl
inc
adc
xchg
mov
or
mov
sub
push
mov
and
pop
rol
lret
lret
xchg
test
push
xor
xchg
or
fisttpll
mov
cmpb
call
iret
jmp
lds
es
nop
imul
or
mov
orl
inc
std
iret
cltd
add
out
popf
or
insb
sbb
pmaxub
mov
jmp
dec
js
add
adc
ja
cmp
gs
clc
jge
cmpsb
les
mov
jno
mov
out
orb
imul
pushf
lds
lea
in
mull
push
xor
jbe
sbb
or
pop
lea
int3
mov
xor
add
pop
mul
mov
scas
inc
subl
popf
std
mov
push
mov
and
dec
push
mov
or
subl
shll
pop
mov
cmp
adcb
mov
jmp
dec
dec
sub
in
dec
scas
movq
aam
inc
push
nop
icebp
loope
pop
mov
inc
aas
daa
or
xchg
mov
mov
adc
test
xchg
sub
push
aad
shrb
add
or
push
sbb
ret
std
or
shlb
ret
xchg
lock
dec
jge
sbb
lret
es
aad
je
adc
dec
test
sub
in
fildll
leave
pop
les
xor
fwait
dec
pusha
lahf
cmp
shll
mov
add
push
mov
push
loope
aam
nop
add
mov
cmp
add
add
or
xor
lock
inc
dec
mov
pop
xor
mov
push
sbb
loopne
std
dec
fisubrs
or
aas
inc
fcoms
mov
ljmp
xor
mov
cli
xorb
mov
jecxz
pusha
cmpb
or
aaa
cmp
es
mov
mov
xor
int3
repz
or
mov
mov
sahf
sti
jl
int
lods
adc
mov
sbb
out
cmpsb
pusha
inc
lods
push
adc
mov
mov
loopne
xchg
dec
stos
es
push
sub
pop
into
ficoml
in
inc
mov
in
out
mov
inc
cmp
or
out
call
mov
pop
push
jmp
mov
pop
imul
pushl
les
mov
sbbl
insl
inc
sbb
add
xor
pop
fmuls
test
nop
shrb
jo
jns
push
fsts
cmpl
cmp
or
dec
fwait
loope
call
add
jmp
xchg
rcll
push
jo
es
cmpsb
pop
cld
pushf
mov
mov
lds
cmp
test
inc
pop
sub
push
mov
pandn
push
not
ss
test
inc
aam
sub
dec
mov
xchg
add
rorl
cmp
and
rcrl
nop
stos
jle
sbb
mov
lds
ss
pop
cmp
ss
cli
adc
mov
icebp
sbb
add
mov
test
dec
or
jne
inc
pop
mov
fcompl
add
and
loopne
xchg
mov
into
mov
cmpsl
lea
jecxz
inc
sahf
test
sbb
loop,pn
fwait
int
mov
fmuls
test
loope
outsb
jge
std
cs
aas
ret
adcl
stos
inc
aas
andb
mov
cmpsb
lock
add
movsb
push
xlat
or
movsb
cmpsb
add
pushf
loopne
push
mov
pop
stos
xchg
jnp
mov
es
adc
jbe
xor
icebp
xchg
stos
mov
out
jl
mov
cld
push
mov
lods
stos
push
mov
jle
pop
pushf
sub
cltd
mov
mov
andb
cmp
add
jle
das
les
lcall
xchg
fdivs
dec
sub
call
fstpt
ret
shrb
mov
sbb
cli
push
inc
dec
cmp
ds
aas
and
cwtl
int
xor
mov
in
bound
bound
xor
cmp
addl
daa
outsl
add
sbb
pop
imul
lds
xor
mov
push
inc
rcrb
bound
push
cwtl
jecxz
jg
and
int
lret
lret
ret
push
add
les
icebp
insl
test
adc
cld
lcall
sub
in
daa
clc
sub
imul
aas
es
jmp
lods
test
pop
aas
push
push
cmp
inc
mov
out
pop
outsl
inc
sub
ja
adc
lcall
mov
cli
jmp
test
sub
or
cltd
pop
lods
push
out
dec
xor
push
add
lret
mov
xorl
jns
xchg
mov
push
sbb
arpl
push
pop
inc
adc
loope
and
adc
or
adc
in
arpl
jno
push
and
in
inc
std
cmp
pop
sbb
inc
cmp
jg
mov
add
adc
push
xor
mov
sub
movb
xor
rorb
pusha
repz
insb
ret
mov
push
dec
fucomp
sbb
inc
jne
adc
jns
arpl
or
cmc
mov
xor
mov
inc
fists
xlat
fldt
aas
inc
je
sub
sbb
hlt
lock
xorl
xor
sub
imul
call
inc
popa
mov
sbb
xchg
lds
pop
rcrb
mov
mulb
fnstsw
dec
add
inc
add
inc
rol
adc
sbb
push
dec
enter
movsb
and
test
and
pop
fdivrp
sbb
cmp
sbb
push
adc
xorb
jecxz
cs
dec
add
and
outsl
cltd
mov
push
test
shll
or
test
adc
lds
bound
fiaddl
pop
sub
push
adc
xor
stos
mov
pop
ja
mov
loopne
push
adc
cmp
pop
push
popf
fcomi
jae
cmc
sub
xor
mov
shrl
cmpsl
mov
sub
je
adc
call
inc
scas
fst
xchg
or
and
shll
dec
jp
pusha
mov
push
jle
add
mov
jle
xor
push
sub
or
adc
xor
dec
les
insb
inc
and
movsb
push
dec
dec
pop
mov
or
mov
jae
outsb
nop
lea
pop
test
lock
mov
fistpl
shr
xchg
das
ficomps
add
ljmp
and
jecxz
add
out
mov
xor
fwait
mov
inc
mov
mov
or
push
adc
and
and
push
xor
sarl
and
lret
out
icebp
and
cmpsl
out
lea
xchg
jns
inc
and
hlt
inc
add
or
loope
loopne
jl
mov
loope
jb
pop
push
xchg
sbb
sbb
pop
cmp
loopne
adc
sbb
sahf
mov
ret
ljmp
sbb
sub
mov
vmwrite
inc
int3
or
cmp
pop
imul
cmp
jl
xor
xchg
in
shll
imul
sbb
imul
adc
mov
data16
fsts
mov
pop
adc
cmp
cmp
fadds
imul
jp
push
xlat
push
shlb
test
dec
or
dec
mov
movsl
cmp
sahf
push
mov
lods
stos
imul
sub
andl
xchg
push
repnz
cmc
and
push
or
add
push
cltd
mov
loop
push
inc
pop
les
pop
cli
xor
mov
out
xor
flds
roll
cmpsb
jp
sbbl
xcrypt-cfb
cmpsl
and
jecxz
pop
mov
and
scas
push
dec
ret
sbb
push
inc
icebp
jecxz
js
mov
pushl
cmovo
data16
pop
jecxz
or
jmp
cmp
mov
cmp
sbb
cmp
dec
rclb
xchg
and
cli
xchg
mov
mov
push
lds
in
cmp
and
jmp
scas
mov
ss
lods
call
adc
inc
or
dec
ret
xchg
into
in
dec
jecxz
ja
fbstp
xchg
xchg
adc
sbb
jne
psubd
sub
stc
pop
inc
cmpsb
aad
adc
mov
popl
ss
adc
add
ljmp
mov
sub
ret
lds
and
mov
jns
movsl
out
je
loopne
mov
cmpb
call
jmp
mov
icebp
push
jge
outsb
enter
mov
xlat
pop
mov
and
loope
mov
or
in
xor
xchg
mov
cmp
pop
es
loopne
adc
jmp
movsb
dec
loop
call
add
dec
push
adc
in
jmp
lock
pop
cmpsb
cmp
cmp
out
push
inc
hlt
mov
les
mov
mov
dec
or
mov
mov
xor
jbe
call
rolb
push
call
adc
pop
pop
nop
imul
popl
mov
or
mov
dec
add
mov
inc
xlat
adc
sahf
cli
and
sbb
lods
sbbb
scas
adc
movsl
out
mov
fcomps
or
dec
lcall
mov
lret
lret
rclb
adc
xchg
into
sbb
xchg
inc
ljmp
xchg
cmpsb
add
loop
shlb
mov
inc
ret
adc
push
sbb
pop
xchg
mov
dec
cmpsl
xchg
push
cmpsb
movsb
ficoml
adc
push
shlb
pop
sbb
lock
flds
cmpsb
and
cmp
lret
dec
add
sar
mov
mov
adc
shlb
or
inc
push
bound
or
lock
subl
jmp
mov
mov
cmc
sub
ficompl
out
mov
xor
jmp
mov
inc
outsb
fidivrl
dec
pop
inc
xchg
ds
out
dec
lock
mov
negb
dec
int
mov
cmpsb
fldl
cltd
push
sbb
xor
inc
fstl
push
cmp
xchg
cmp
mov
divb
cs
insl
sbb
jl
repz
iret
sbb
adc
ficoml
aaa
call
es
push
js
sub
jecxz
xchg
js
mov
bound
mov
ja
xchg
icebp
ret
mov
rolb
je
mov
adc
adc
sub
sbb
dec
add
dec
push
or
cs
mov
out
shr
add
test
aam
pop
dec
outsl
mov
adc
inc
inc
cld
test
arpl
iret
jg
into
ljmp
and
repz
shr
sahf
inc
xor
jecxz
cmp
cmp
xor
rcrb
lahf
imul
cmp
add
pusha
or
das
stos
clc
daa
testb
lods
dec
sahf
and
push
mov
in
xchg
mov
xchg
push
mov
adc
rcrb
adcb
leave
daa
dec
pop
sbb
push
xor
icebp
inc
adc
sub
jmp
push
jo
and
pushf
pop
cmc
dec
mov
cmp
sti
movsb
loopne
inc
add
ret
add
xor
push
cs
aam
add
jae
push
ret
xor
cli
mov
add
mov
jnp
pop
je
mov
sti
cltd
sbb
maskmovq
mull
pop
fbstp
lds
jp
outsb
push
ret
mov
push
pop
cmp
aas
js
insl
sahf
mov
fwait
mov
push
sbb
shl
addl
loopne
ja
das
sub
adc
sub
mov
pop
or
rcr
xchg
out
pusha
scas
add
ss
inc
es
popf
jns
lcall
outsl
mov
aaa
dec
in
sar
insb
cmp
daa
xchg
xor
aad
add
inc
movsb
inc
jbe
cmpsw
xor
clc
ja
xchg
in
xor
popa
fsts
test
and
stc
sbb
sbb
sbb
data16
cmc
jmp
or
punpckhwd
xchg
sbb
cld
lock
movsl
mov
popf
sub
dec
adc
mov
mov
cmp
fcoml
jbe
movl
in
lret
mov
popf
rep
icebp
add
mov
in
arpl
loop
lret
add
adc
cmp
mov
and
pop
push
bound
nop
andl
iret
sub
clc
mov
dec
pop
in
addr16
pop
nop
fadd
fs
or
mov
mov
push
movsb
mov
adc
push
daa
js
cli
sti
mov
add
mov
sbb
push
cmp
pop
push
shll
out
mov
dec
ss
mov
je
dec
mov
cmp
jg
cmp
insb
insl
das
mov
adc
xchg
test
and
leave
or
setg
mov
jno
adc
or
icebp
pushf
lret
jmp
lods
sub
inc
into
pushf
add
loopne
inc
mov
sub
cld
mov
or
xchg
sarb
pop
mov
popf
test
insb
fmuls
adc
add
push
jo
add
adc
ja
sub
into
dec
das
dec
int3
shll
pusha
jnp
cmp
aad
aaa
or
insl
push
push
sbb
dec
leave
insl
outsl
insb
repz
movsb
mov
or
in
subl
shll
mov
lret
popf
cmc
and
mov
or
mov
push
mov
xor
in
push
mov
jno
xchg
mov
mov
pinsrw
call
jae
push
leave
ja
test
fistpl
outsl
inc
cmp
or
or
pop
xchg
or
cld
lods
test
repz
pop
adc
sub
popa
inc
and
mov
jno
sbb
je
fbstp
sbb
inc
jno
pop
ss
sti
iret
pop
xchg
lods
jmp
fidivrs
push
mov
insl
test
je
dec
aad
stos
jl
xchg
mov
mov
xchg
dec
xchg
adc
lds
dec
xchg
mov
popa
fbld
test
iret
jbe
jne
cmpsb
sbb
mov
daa
mov
fneni(8087
out
and
inc
adc
jns
addr16
xchg
xchg
sahf
mov
pop
sti
test
or
fldl
addl
lds
sub
repz
adc
sbb
jl
or
filds
mov
popf
enter
test
fcoms
js
or
push
rclb
popa
adc
jno
notb
ljmp
sub
jle
mov
sahf
adc
dec
mov
js
fsubrl
mov
test
push
out
xor
in
jl
test
jmp
add
dec
mov
sbb
mov
add
sbb
addr16
cmp
lea
add
ds
jecxz
inc
adc
sar
inc
in
movsl
outsl
pushf
aad
fs
ss
jne
jno
dec
loopne
jae
adc
cmc
mulb
ljmp
dec
movsl
jb
sbbb
mov
jmp
jmp
mov
jle
lock
shrl
fs
mov
cmpsb
ret
icebp
scas
xchg
push
cmp
scas
dec
popf
mov
rorb
rorl
jne
mov
in
aad
js
and
ja
mov
push
xlat
mov
mov
aam
vcvtdq2ps
and
aaa
mov
popa
insb
shlb
out
pop
into
dec
jg
test
xchg
push
add
and
adc
sbb
stos
mov
and
mov
sub
push
into
loop
push
sbb
inc
add
in
cltd
mov
jb
lock
pop
insl
sbb
xor
aaa
popf
sub
push
outsl
xor
das
or
dec
xor
cmc
repz
xor
aas
xchg
jne
loope
and
cmpsb
pminub
pop
and
mov
jno
inc
and
xorl
jge
loope
mov
push
xchg
dec
lret
inc
mov
stos
lock
into
push
xor
or
mov
mov
adc
xor
outsb
js
inc
pop
popa
adc
stos
call
adc
xchg
popa
test
mov
xchg
popf
xor
mov
sub
mov
in
les
out
push
or
lods
pandn
xor
movl
rcll
shrl
out
add
cmpsb
lcall
cmpsb
add
mov
jo
pop
or
xchg
lahf
ficompl
lods
mov
cmp
xchg
jnp
sbb
cmp
or
fcoml
cmp
mov
xchg
xor
insb
mov
insl
je
push
add
loope
pop
lds
stos
and
fdivrl
lock
popf
cli
cmp
mov
jae
repnz
lahf
imul
add
fisttps
cmpsl
cmp
imul
cmp
shrl
sub
and
lock
jb
adc
outsl
add
adc
rorl
ret
xchg
cmp
repz
mov
aaa
mov
inc
push
and
cmp
xor
insb
add
rcrl
int3
dec
je
sbb
in
in
aam
lds
lds
pushf
mov
jnp
add
xchg
jle
stos
shll
mov
xor
movsl
adc
or
shrl
movb
jno
shlb
xchg
iret
jmp
std
nop
lcall
and
rcrl
sahf
aad
es
leave
cmpsb
jbe
mov
inc
ljmp
call
cmc
sbb
sub
add
xor
mov
push
cmp
xor
roll
xchg
cmpsb
mov
stc
add
xor
jb
adc
pop
mov
lods
cmpsb
out
push
fldenv
xchg
bnd
sub
add
mov
clc
loopne
lea
outsb
xor
pop
xor
mov
add
pusha
adc
sbb
scas
inc
es
cltd
test
inc
fidivrl
add
pop
subb
push
sbb
bound
bound
jecxz
popa
dec
shlb
inc
lock
imul
xor
dec
xor
andl
loop
mov
adc
xor
aam
ss
out
test
pop
xchg
cmc
push
scas
adc
inc
or
dec
call
add
fwait
sub
shrb
mov
inc
mov
cmpsl
xchg
repz
mov
cmp
ja
out
jmp
out
in
jo
in
out
jne
leave
mov
xor
cltd
cld
mov
or
in
xor
arpl
mov
pop
ret
cmpb
push
xchg
and
mov
loopne
cmp
test
mov
push
dec
orl
mov
leave
iret
jae
jno
mov
movmskps
mov
add
push
popa
jb
mov
push
mov
scas
iret
sbb
xchg
add
mov
pop
mov
sbb
push
sbb
push
pop
inc
clc
dec
cmc
inc
inc
aaa
xchg
in
mov
stos
push
or
mov
and
sub
pop
mov
loope
pop
mov
push
shll
mov
repnz
and
das
fisubs
sub
idiv
ret
shll
inc
adc
push
out
pop
je
std
stos
das
iret
imul
es
xchg
call
cmp
test
imul
cmp
out
out
cmp
jmp
inc
mov
cli
icebp
dec
sub
je
adc
addr16
jns
out
pop
mov
test
xchg
pop
adc
dec
fcoms
icebp
inc
daa
xor
jbe
cmp
idivb
xchg
push
pop
leave
jecxz
xor
push
mov
bound
cmp
jle
sub
cmp
jnp
popa
and
jge
add
dec
movntq
subb
cwtl
inc
push
sti
dec
inc
ds
sbbb
mov
adc
insb
or
pop
test
mov
mov
mov
cmp
mov
dec
pop
enter
dec
push
neg
add
rol
movsl
dec
cmp
mov
inc
insb
push
fstpt
cmp
ljmp
add
test
mov
cwtl
gs
ret
mov
clc
mov
cmp
inc
adc
mov
dec
outsb
movsl
sbb
imul
add
hlt
aam
aaa
dec
add
pop
popa
xchg
xor
pop
inc
jp
add
rorl
adc
les
test
cld
addl
stc
xchg
pop
cmp
pusha
f2xm1
xor
push
cmc
loopne
aad
test
jl
mov
mov
pop
lahf
das
mov
sub
jp
mov
cmpsb
imul
aas
push
ficoms
add
cld
lcall
iret
jo
cmp
xchg
mov
pop
mov
adc
icebp
js
pop
cmp
jne
andl
xlat
rorl
test
mov
call
aad
xlat
jns
movsb
push
fcomip
or
and
rdmsr
insb
repz
xorb
xor
pop
pushf
or
lods
dec
adc
inc
cmp
data16
dec
lds
aaa
stc
adc
inc
inc
jno
pop
jg
mov
add
adc
xchg
xor
out
jle
call
jo
mov
fdivrp
cmp
adc
roll
imul
adc
and
fsts
clc
ret
lods
mov
enter
aam
cmp
out
xor
lock
in
push
clc
idivl
rol
jmp
scas
stos
sbb
rcl
test
xor
test
and
pop
gs
pop
testb
sbb
adc
ss
sub
cmp
mov
mov
popa
movsl
and
inc
cmp
xchg
push
add
jecxz
enter
cmp
stc
mov
adc
dec
and
mov
add
pop
mov
pop
jge
jl
jecxz
or
cmpsb
lcall
add
shrb
xlat
inc
mov
call
pop
mov
icebp
push
shrl
mov
insb
pop
mov
cmp
cmp
adc
and
ss
inc
push
jl
sbb
inc
mov
inc
add
mov
test
add
popf
sub
push
push
mov
mov
pop
push
ret
rorb
mov
jne
bound
mov
jle
pop
insl
jns
jae
pop
out
lods
add
add
inc
test
or
mov
mov
outsb
mov
ljmp
repnz
lds
lcall
movsl
xchg
mov
test
cmp
or
outsb
inc
int3
add
gs
scas
daa
insb
adc
loopne
iret
mov
mov
inc
jmp
test
sti
cli
push
mov
xchg
stos
xchg
mov
outsl
iret
mov
popf
cmp
adc
les
inc
mov
movsl
pop
push
xlat
fisttps
cmp
frstor
cmp
ljmp
bound
pop
pop
push
outsb
mov
daa
sbb
jle
idiv
leave
xchg
outsl
lods
scas
je
sub
mov
cmp
imul
loope
add
xchg
imul
scas
enter
pop
jle
rorl
ds
adc
sbbb
jb
mov
sub
inc
fldl
es
ret
mov
push
mov
lcall
cltd
inc
push
repnz
inc
insb
inc
push
xchg
aam
xor
stos
je
std
pop
aaa
outsb
lahf
adc
fwait
ljmp
push
arpl
or
push
loope
std
int
loope
icebp
add
fcompl
add
in
or
jae
push
addl
dec
cwtl
jmp
cmc
xlat
mov
xchg
imul
js
loope
nop
fldenv
inc
stos
mov
mov
orb
mov
sahf
or
jno
andb
bound
stc
jo
call
movsl
jae
mov
dec
and
xchg
sbb
aaa
sbb
cmpb
addb
inc
test
adc
dec
imul
sar
or
mov
xor
outsb
pop
push
mov
lods
rcrl
loop
or
cmc
inc
sbb
and
xorb
pop
bound
mov
addr16
mov
jo
mov
pop
rcrb
jp
pop
gs
push
sbb
and
jmp
or
dec
jno
hlt
repz
sbb
bound
test
inc
mov
or
inc
shl
test
jmp
and
mov
mov
arpl
lcall
cwtl
mov
and
call
movsb
loopne
inc
xor
inc
das
ret
arpl
xchg
add
push
in
imul
inc
mov
inc
lret
idivb
mov
adc
mov
fidivs
fmuls
lods
clc
rorl
repz
scas
insb
je
push
sbb
sub
jmp
test
or
mov
xlat
mov
xor
das
in
mov
jle
and
jge
adc
xchg
mov
mov
jno
mov
cmp
outsl
dec
dec
fstps
pop
inc
mov
push
jl
scas
mov
gs
aad
cli
lret
movl
stos
out
xchg
addl
or
sub
mov
cmp
mov
adc
adc
push
or
aad
xor
ror
add
mov
dec
stos
sub
jae
mov
pushf
fistl
aas
dec
adc
sub
test
or
adc
mov
sub
sbb
inc
inc
mov
in
pop
mov
sti
lock
mov
gs
sbb
daa
pop
pop
inc
loope
mov
mov
mov
mov
and
inc
addr16
loopne
push
mov
insb
mov
sbb
jl
jecxz
xor
js
cmp
add
dec
ret
ffree
adc
aam
pop
jnp
lret
aas
leave
cmpsb
pusha
pushf
in
mov
insb
add
hlt
cli
pop
loop
nop
loopne
daa
cmp
xchg
xor
sub
add
jbe
mov
cmp
dec
add
pop
sbb
inc
icebp
jg
adc
xorw
push
inc
mov
dec
adc
ret
pop
push
stc
sbb
and
push
clc
pop
scas
fwait
or
adc
popl
dec
mov
repnz
shrb
mov
ds
cmp
imul
neg
es
xor
out
push
mov
nop
popl
mov
das
pop
insb
adc
jno
inc
sub
ja
or
cmp
shl
cmp
jle
push
es
mov
sbb
testb
cmp
mov
imul
sti
cmp
dec
pushf
pop
js
xchg
or
xchg
pop
xor
mov
addr16
dec
loopne
ror
lcall
sub
dec
add
icebp
pop
subb
mov
xor
sbb
sbb
ficompl
arpl
lods
cmpsb
outsb
test
pop
sbb
hlt
push
sti
jp
or
lods
jp
pop
test
xor
adc
hlt
push
lock
loop
fidivl
mov
sbb
mov
lods
sar
nop
push
mov
pop
mov
push
adc
ficompl
in
jecxz
mov
das
sub
outsl
in
mov
mov
sub
nop
sbb
adc
push
inc
iret
adc
mov
test
sahf
xchg
loop
fbld
sbbb
jno
xchg
dec
daa
movsb
ljmp
xchg
push
stos
dec
adc
lods
stos
stos
ljmp
pop
push
in
fsubs
insl
leave
jo
imul
fisubrs
pop
push
adc
push
sub
jecxz
mov
add
aad
ret
sbb
loope
adc
pusha
cmc
lock
fst
adc
seta
jg
sub
cmpsb
and
movsl
unpcklps
mov
dec
test
cmp
fwait
das
adc
xchg
cli
fcompl
dec
popa
add
and
movsl
xlat
das
add
nop
cmp
orb
sbb
xchg
loopne
push
cmpsl
stos
inc
pop
sti
cmp
mov
jle
divl
dec
or
mov
imul
cmp
pop
sub
jo
pushl
push
movsl
out
shlb
adc
dec
xor
fnsetpm(287
push
scas
les
lret
mov
aam
add
sbb
jle
sbb
sbb
cmp
leave
pop
mov
sub
call
cmp
loop
or
int
adc
sbb
sub
mov
xchg
push
xor
test
vmovaps
mov
stos
mov
bound
sti
xchg
or
jecxz
or
or
add
loope
hlt
jns
and
xor
jnp
cld
ret
cmp
and
jno
push
and
inc
push
pushf
xchg
or
cmp
outsb
sar
mov
sbb
push
cld
inc
xchg
inc
adc
add
dec
dec
adc
xor
pop
stos
adc
lret
cmp
dec
lods
clc
dec
sub
sub
sub
and
ret
popa
mov
xchg
mov
pushf
adc
adc
mov
lds
ret
cmp
lcall
dec
pop
out
mov
push
hlt
cs
scas
cmpb
das
mov
push
mov
popa
mov
mov
movhlps
nop
js
addr16
pushf
add
shlb
stos
loope
push
mov
push
sub
xabort
rcrb
out
or
dec
clc
jne
lods
mov
push
imul
sub
pushf
and
test
pushf
test
or
out
rcll
ja
sbb
pop
jp
lahf
jne
fldt
addb
push
push
cmp
rorl
jp
fcmove
dec
push
inc
pop
testl
pop
loopne
pop
xor
mov
pusha
push
xchg
outsl
loopne
in
iret
push
sub
xchg
or
stc
sub
scas
loope
or
jns
fwait
add
and
loop
addr16
and
xor
sbb
pusha
sbb
cmp
sbb
jbe
jl
inc
hlt
jge
icebp
adc
cli
add
int3
jnp
scas
stc
lcall
push
mov
ja
outsl
mov
push
test
add
mov
gs
mov
outsl
xor
ret
mov
cld
cmp
adc
cmp
stos
pop
leave
pusha
cltd
inc
loope
pop
and
cmp
xchg
or
sbb
call
lods
leave
dec
icebp
inc
pop
fisttpl
movsb
adc
lock
dec
in
xor
jne
mov
xchg
mov
andl
aaa
ds
sub
fwait
cmpsb
xchg
in
ss
pop
ss
clc
xor
and
sbb
fdivrl
pop
nop
es
xor
popa
test
mov
cmpsl
pop
hlt
dec
lahf
pop
scas
movsb
dec
cmp
outsb
stos
mov
sahf
add
dec
jge
shlb
cld
lods
ja
in
fsub
or
and
hlt
sub
leave
xlat
fistpl
es
int3
outsl
rcll
cmpsl
mov
xor
mov
sbb
test
push
push
xchg
inc
lock
mov
mov
adc
int
movsb
jle
add
and
mov
add
mov
mov
movsb
fldenv
sub
dec
lahf
rorl
clc
mov
aam
mov
dec
sbb
jp
xchg
jns
xchg
xor
ret
frstor
in
or
je
cltd
jecxz
loope
ljmp
inc
pop
cmp
sub
testl
aad
xchg
fldenv
js
sbb
and
cmc
push
rorb
cmp
or
rorl
bound
mov
les
es
dec
in
loop
ljmp
cmpsl
sahf
mov
setnp
jns
or
push
frstor
insb
filds
leave
into
mov
movsb
movsl
xlat
lea
pop
sbb
push
inc
push
lods
arpl
mov
xchg
cmc
cmp
mov
dec
sub
fcomi
add
lock
pushf
pushf
out
repz
icebp
add
ja
jbe
aas
dec
and
or
push
and
scas
ja
int
xchg
pop
mov
pop
icebp
push
cmpsl
pop
ficoms
ljmp
je
out
loope
or
out
xor
lea
sbb
hlt
xchg
js
pusha
shll
aas
andb
clc
mov
jecxz
daa
lock
pop
ss
inc
xchg
adc
mov
mov
call
mov
lock
xor
pop
movsb
dec
dec
inc
jne
mov
pop
push
add
arpl
add
pop
jb
orl
mov
aad
or
lahf
push
pop
scas
adc
jae
jb
ret
add
jne
cmp
mov
js
mov
sarb
aaa
inc
adc
push
aam
cmpsb
xor
mov
cmpl
mov
or
mov
js
xor
lret
mov
aaa
xchg
ds
jmp
xchg
inc
cltd
and
adc
cwtl
sarl
push
mov
mov
inc
pop
int3
jecxz
xchg
mov
sar
jo
lock
inc
mov
aam
call
enter
mov
das
arpl
pop
sub
jecxz
or
decl
sbb
sar
das
adc
cmp
loop
lret
loopne
fisubs
stos
out
icebp
nop
fisttpll
sbb
sti
hlt
popf
mov
cmp
pop
addr16
push
mov
dec
cmp
add
ds
sbb
push
movsb
inc
cmp
or
xor
scas
fsubl
fwait
cmp
push
xchg
jmp
push
adc
fsubs
popf
add
pushl
and
f2xm1
imul
jnp
jae
andl
cmp
stos
sahf
mov
mov
mov
insl
xchg
cmc
xchg
mov
add
push
fsubs
inc
gs
mov
xor
and
daa
jo
cs
pop
fdivs
push
or
clc
fwait
sbbb
enter
mov
inc
mov
std
imul
mov
cmpsl
sub
test
subb
mov
xchg
cmp
lea
add
mov
pop
addr16
or
inc
test
sbb
sub
out
mov
push
pop
adc
jnp
pop
or
cmp
scas
fnstsw
jge
dec
push
movsb
or
xor
cmpsl
pushf
movsb
stos
xchg
js
outsb
xor
fsubp
and
inc
es
push
inc
pop
sub
leave
mulps
imul
cmp
xchg
cmp
leave
push
loopne
cmc
dec
sbb
loop
outsb
sbb
xor
outsb
jb
pop
jp
movsl
adc
addr16
xor
pop
imul
enter
pop
ds
or
leave
jle
sbb
lock
jmp
bnd
outsb
icebp
in
or
push
xchg
cmp
into
data16
or
push
nop
nop
or
popf
popa
push
cmp
jo
in
cwtl
shll
pop
or
roll
mov
jno
add
mov
popa
je
sbb
ret
add
add
pop
in
or
sahf
or
fwait
push
fsubl
jne
pop
clc
mov
mov
sub
ljmp
cld
and
fidivs
popl
js
inc
push
leave
xor
std
mov
xchg
add
cmpsl
loope
xchg
dec
jno
push
iret
pop
mov
js
ljmp
jbe
and
imul
mov
dec
das
fnstsw
lock
xor
mov
iret
inc
mov
loop
push
sub
pop
hlt
pop
lret
dec
pushf
dec
rol
push
das
dec
xchg
call
bnd
adc
mov
hlt
dec
daa
fiaddl
jge
mov
insb
sub
rcrl
sbb
stos
or
sbb
in
repz
jge
add
mov
jo
cmp
stc
sub
dec
and
jle
xchg
data16
mov
push
mov
enter
push
lahf
jmp
std
jae
popa
sarb
push
pop
rclb
jmp
add
push
xchg
imul
je
jbe
adc
or
arpl
adc
xchg
adc
movsb
mov
add
addl
mov
xchg
clc
fs
inc
outsb
cmp
fiaddl
pushf
pop
int3
and
int
pop
test
sub
lods
cmp
jo
pop
sti
stos
mov
pop
enter
cmp
xor
xchg
jp
ljmp
cmc
mov
repz
mov
and
push
test
subl
popf
pop
push
xor
dec
shr
mov
mov
jp
push
mov
pushf
shll
lods
mov
in
cmc
mov
pop
scas
clc
mov
lods
int
mov
inc
lds
mov
add
cmp
fistpll
or
xchg
in
adc
sbb
ds
and
aas
jl
mov
xchg
testb
das
xor
icebp
push
jp
and
jmp
ret
or
les
cltd
data16
bound
push
dec
sbb
jo
push
rolb
mov
cmp
mov
fdivl
cpuid
sbb
xchg
push
dec
dec
push
xchg
mov
sbb
jbe
out
js
or
shl
dec
pop
imul
roll
or
mov
pop
insl
or
rorl
ficoml
add
lock
dec
loop
call
dec
sub
dec
fiaddl
in
add
dec
imul
adc
fldcw
jmp
pop
jo
mov
and
fsubrs
hlt
sarl
rcr
lea
sub
nop
mov
jne
sbb
mov
mov
aam
pop
pop
xchg
lea
lcall
xchg
pop
enter
inc
shll
pmullw
aam
pusha
enter
arpl
aam
mov
sbb
xor
mov
jo
pop
mov
or
arpl
dec
add
mov
mov
pop
mov
inc
inc
dec
xor
insb
pop
addr16
inc
dec
inc
imul
push
dec
js
outsw
xor
xor
inc
insb
jae
imul
push
bound
arpl
lahf
imul
inc
dec
push
dec
push
nop
or
aaa
xor
and
inc
dec
xor
outsl
jge
pop
pop
dec
pop
push
dec
dec
push
pop
inc
dec
lock
outsl
and
mov
aaa
xor
xor
cmp
mov
sub
cmp
rdmsr
xor
jg
in
imul
push
dec
push
push
jae
out
pop
add
outsw
jne
push
outsl
ja
jae
out
jo
inc
in
outsl
sbb
data16
jbe
push
push
dec
push
inc
dec
push
push
sbbl
push
dec
aas
push
dec
jae
dec
inc
imul
jbe
ja
and
inc
dec
push
inc
dec
dec
push
das
xor
xor
in
neg
fisubl
push
bound
jae
xor
xor
clc
in
jmp
push
bound
imul
fs
jo
push
jae
insb
jne
sbb
xor
and
pop
push
imul
mov
dec
cmp
dec
dec
testl
arpl
fs
addr16
jg
lods
xor
outsb
insl
pop
inc
aaa
outsl
jo
push
aad
inc
imul
ja
dec
pop
jbe
aas
inc
fs
outsl
mov
mov
push
cmpsb
push
push
aaa
push
inc
outsb
stos
movsl
outsl
lock
insb
inc
dec
outsb
jb
inc
popa
outsl
sahf
inc
push
js
dec
loope
mov
je
popa
dec
dec
into
imul
push
popa
outsb
addr16
decl
xchg
pop
add
pushf
loope
shlb
push
arpl
decl
lock
mov
dec
pop
sbbl
out
push
lahf
hlt
in
lea
cmp
lcall
push
movsb
jbe
xchg
and
je
cmc
mov
lds
lcall
outsb
sub
aas
fdivl
int3
mov
xchg
in
cli
cmpsb
xchg
subb
jmp
scas
pop
add
mov
xchg
cmp
pop
jns
lcall
cmpsl
sbb
inc
addr16
sub
out
hlt
jecxz
mov
sub
push
std
inc
gs
ljmp
push
gs
cmp
and
dec
outsb
mov
js
xchg
dec
xor
popa
mov
out
mov
mov
sub
xor
sarl
and
or
push
popa
mov
cltd
add
inc
sub
jp
addr16
cmp
mov
ds
out
decl
icebp
and
ds
push
sbbb
call
test
jg
das
xor
fcoms
lret
fldl
call
sbb
lcall
or
and
int3
mov
sub
adc
out
sub
imul
inc
xor
fsubl
cld
rcrb
sub
xchg
mov
insb
addr16
lcall
mov
fcomip
pop
or
mov
std
jmp
adcb
call
sbb
repz
les
xchg
inc
jne
pop
cmp
push
in
in
mov
sbb
lcall
in
jle
cmp
mov
fsts
lods
xchg
fsubrl
sbb
incl
loope
leave
rcll
and
std
ljmp
outsl
imul
cmp
dec
scas
popf
sbb
sub
dec
fisttps
out
or
iret
dec
pop
dec
sub
or
repz
mov
decl
and
push
fcmovb
mov
pop
or
or
into
jo
mov
sahf
cwtl
push
jns
ds
add
mov
test
movsb
pop
daa
call
push
or
aaa
pop
pop
pop
sbb
mov
xor
jno
outsb
xor
pop
push
pop
mov
pop
jg
aaa
clc
loope
ret
mov
lahf
jno
dec
stc
adc
lret
and
imul
push
stos
ret
hlt
and
cmp
mov
lds
imul
mov
xchg
mov
int3
lods
and
leave
mov
rol
add
ud0
in
daa
push
inc
stc
jno
mov
enter
adc
jmp
call
enter
cld
incb
pop
mov
xor
push
adc
clc
mov
aad
loopne
es
andl
stos
into
push
je
adc
fxch
sahf
xchg
jg
icebp
lcall
pop
push
pop
neg
and
daa
dec
subb
data16
mov
mov
ret
jne
cmpsb
xchg
xchg
cmc
push
imulb
sbb
ffree
scas
popf
jne
incl
mov
addr16
adc
call
adcb
mov
or
xchg
test
scas
test
pushf
lds
aad
push
jecxz,pt
pushl
fdivl
in
pop
inc
and
mov
pop
popa
mov
mov
stc
out
cs
cmp
inc
mov
cltd
push
pop
mov
xor
xchg
in
pushl
pop
lret
test
mov
or
lahf
dec
std
loop
cwtl
test
lcall
push
inc
cs
jbe
out
les
sarl
daa
adc
ljmp
xchg
jbe
mov
in
jne
in
pushf
dec
jge
daa
inc
sub
aaa
fistl
inc
loopne
adc
lcall
fwait
mov
rorl
pop
fstpt
jg
cltd
dec
repnz
jae
insl
push
inc
inc
movsl
cmp
fxch
sbb
adc
sbb
ljmp
mov
inc
xchg
movsb
pop
push
mov
sub
enter
inc
stos
jg
sbb
jno
adc
add
pop
xchg
jp
xor
sbb
ds
pop
inc
mov
cmpsb
movsb
or
inc
fists
xlat
shrl
test
push
adc
das
mov
pop
xor
dec
dec
mov
or
in
cmc
cltd
mov
jnp
mov
clc
in
pop
clc
pushl
adc
push
iret
mov
xchg
or
lods
add
in
xchg
jp
ljmp
js
pop
inc
stos
and
mov
or
mov
fadd
mov
jg
ljmp
xchg
lds
push
push
inc
das
stos
aas
sub
cld
jmp
lahf
sub
es
or
jg,pt
scas
ljmp
sbb
lds
dec
fdivl
cwtl
adc
xor
dec
cmpsb
adc
gs
and
in
sbb
dec
cmp
and
ljmp
icebp
leave
dec
mov
fs
outsl
pop
xor
and
or
daa
lods
and
test
jae
push
jae
ret
inc
mov
push
mov
std
mov
push
pop
movsb
mov
test
push
jno
shlb
push
add
jg
jnp
lret
or
decl
dec
inc
xor
leave
mov
jg
jns
dec
enter
popf
iret
stos
xor
jp
dec
inc
xor
sti
imul
lret
mov
mov
push
sbb
xchg
sbb
push
lcall
mov
add
jecxz
outsl
cltd
or
pop
or
arpl
clc
in
cmp
jg
gs
push
popa
scas
pop
sarb
test
jne
xlat
in
and
pop
pop
stos
call
clc
mov
popf
es
pop
loopne
insl
jecxz
pushf
pop
sti
pop
inc
das
pop
out
clc
mov
xlat
and
fs
jg
xchg
inc
sbb
cmp
into
int3
cs
mov
lcall
fiadds
rcll
call
jbe
push
xchg
push
cmp
or
mov
lods
test
insb
push
inc
jbe
pop
in
adc
pop
mov
cli
fistps
dec
xor
ret
mov
cs
mov
mov
cmp
xchg
loopne
add
xchg
popf
sub
ficoms
push
lods
lahf
dec
add
cli
iret
push
mov
xor
fistpll
dec
mov
pop
add
pop
test
mov
in
les
aaa
das
xchg
scas
insb
push
cwtl
cmpsl
mov
push
lea
aad
decl
mov
jecxz
out
fmull
jns
test
aam
xor
or
add
clc
mov
loop
ss
pop
mov
repnz
pop
cli
in
sub
mov
popa
jmp
jge
mov
arpl
sub
mov
inc
pop
push
arpl
pop
jg
pushl
lea
aaa
pextrw
or
fists
mov
mov
sbb
jmp
imul
clc
pop
popf
ja
add
jnp
dec
jp
cmp
in
jmp
das
push
or
mov
cmp
bound
adc
call
add
push
pop
data16
ret
dec
inc
negl
mov
daa
fucomp
shl
movsl
add
lods
out
movsl
pop
clc
push
icebp
sahf
push
pop
dec
cmp
repz
sbb
stc
incl
and
ljmp
jno
dec
cmp
sarb
push
std
inc
or
jg
sarl
mov
pusha
dec
es
adc
test
mov
lods
lods
stos
das
mov
in
lods
push
xchg
in
mov
sbb
cmp
xor
jnp
pusha
aam
sbb
daa
in
fmul
arpl
bound
pop
ss
cltd
push
mov
ss
aas
xlat
xchg
roll
loopne
dec
cmp
mov
icebp
incl
cmc
fmulp
and
orb
dec
ds
aas
in
les
mov
les
jg
mov
add
cmpl
sbb
call
xchg
inc
subb
adc
mov
insl
xchg
xchg
mov
arpl
negb
in
xchg
pop
loop
mov
inc
sub
hlt
xchg
add
dec
cld
ljmp
pop
or
ret
sbbl
clc
insl
adc
cmp
mov
mov
push
cmpsb
repnz
sub
jo
dec
mov
icebp
dec
pop
loop
push
clc
lds
xchg
adc
or
sar
mov
mov
and
sbbl
sub
mov
dec
pop
jbe
stos
call
xchg
xorl
es
loopne
fucomi
add
mov
aad
xor
das
lcall
jmp
into
xchg
shll
sbb
ret
mov
cmp
mov
xchg
out
jbe
out
and
test
pop
cli
lahf
mov
xor
ljmp
add
call
ljmp
imul
stos
scas
stc
out
fiadds
das
xor
jne
movsl
sub
pop
cld
decl
ja
scas
sbb
sub
and
add
cld
test
push
mov
add
call
xchg
jb
dec
and
or
js
jmp
repnz
mov
sahf
into
push
mov
or
jle
outsb
das
pushl
dec
cmp
jb
repz
loope
testb
popf
pop
cmc
ljmp
repnz
sbb
mov
jo
js
fwait
mov
push
adc
ljmp
scas
movsb
xchg
aad
das
push
mov
fs
sub
sub
ds
push
clc
pop
mov
mov
push
cmp
mov
rorb
jp
mov
sbb
cmp
mov
cmc
arpl
cmp
xchg
outsl
call
mov
cmp
add
sub
out
js
jmp
push
aam
mulb
dec
and
dec
ss
push
jge
mov
stc
rol
shlb
adc
lret
mov
jg
cli
ror
mov
inc
addl
in
aam
mov
aas
je
or
adcb
push
cmp
jp
or
or
pop
iret
mov
popa
add
sbbl
pop
xor
sbb
cwtl
cli
mov
xor
inc
cmpsb
movsl
testb
aaa
sahf
test
loopne
mov
dec
decl
xchg
das
adc
shll
xchg
or
cs
xchg
gs
jns
int3
pushl
outsl
mov
fwait
cltd
cld
lds
iret
in
rol
mov
push
inc
pop
dec
out
sub
fwait
jle
jg
ljmp
pop
push
inc
jbe
je
mov
loop
jo
dec
and
push
pushl
jle
fbstp
cs
mov
popf
popa
in
aam
jg
cmp
sub
ljmp
mov
xchg
or
fcmovne
and
stos
test
mov
or
das
mov
fcoml
jp
in
push
fimuls
loope
popa
push
cmpsl
lea
adc
mov
mov
xor
sbb
sbb
pop
jnp
fstps
xor
lret
mov
hlt
jecxz
ret
xchg
jmp
pop
cli
incl
pop
dec
and
jg
and
jo
push
inc
cwtl
das
outsb
pop
daa
scas
call
jg
lcall
ss
mov
jne
xchg
lods
dec
ret
or
jmp
nop
jg
mov
lea
sbb
mov
mov
mov
mov
sub
pop
loopne
adc
aam
ja
adc
gs
stc
inc
dec
xchg
xlat
cmpsl
push
pop
mov
sub
jmp
mov
cmp
out
cld
cmpl
cld
pop
dec
add
xchg
cmpl
or
das
icebp
jg
mov
lahf
xchg
addb
insb
sarl
push
outsb
mov
xor
sbb
ds
jne
lcall
jge
shrb
xchg
xchg
mov
mov
push
jle
test
clc
movsl
sti
shl
daa
data16
jg
imul
jp
int
mov
ja
divb
stc
out
jmp
adc
lea
ss
or
negb
test
mov
ficompl
das
or
lock
lea
repnz
outsl
dec
pop
arpl
lock
daa
nop
sub
incl
adc
cs
fbstp
idiv
inc
jg
push
mov
shll
iret
test
adc
mov
cltd
jb
aad
mov
lret
out
sbb
xor
fistpll
inc
sbb
shlb
xor
loop
jl
sub
roll
lods
std
popf
and
fucom
mov
lret
or
mov
aam
pop
jne
leave
dec
movsb
fistl
or
sub
insb
repz
xchg
mov
jmp
rolb
lods
insb
inc
std
cmp
leave
jg
push
jecxz
mov
cmp
jb
jae
ret
or
or
sub
aaa
jle
test
jl
lret
cmp
push
add
push
inc
xchg
sti
pop
out
xchg
cli
mov
test
adc
jmp
test
sar
das
mov
enter
shlb
fdivr
mul
pusha
or
test
mull
adc
call
sub
push
and
or
scas
test
jle
popf
cmp
xor
mov
mov
stos
hlt
inc
sbb
or
call
les
inc
jno
lods
jg
pop
adc
add
push
sbb
mov
repnz
pop
cmp
or
fsubl
das
sub
mov
mov
shll
pop
mov
icebp
pop
cli
sbb
fstpl
mov
add
nop
lret
outsl
cmc
test
incl
xlat
sbb
and
add
cwtl
fimuls
inc
mov
lods
cmove
inc
sbb
adc
subl
xor
pop
fists
fsubr
cmp
push
fistpll
xor
mov
ljmp
mov
xor
push
mov
push
lcall
dec
push
dec
or
in
mov
test
aad
and
mov
popa
test
lock
leave
inc
xor
push
inc
iret
nop
je
cli
mov
push
js
dec
rclb
jae
cmc
mov
rorl
adc
cmp
push
or
incl
lcall
aaa
and
mov
pop
adc
clc
fists
cmp
pop
test
jne
push
dec
jne
push
ja
dec
add
bound
in
pop
inc
mov
cmp
adc
push
adc
inc
dec
inc
dec
push
int3
push
arpl
jb
ljmp
cld
xor
xor
jae
add
imul
addr16
dec
jbe
inc
inc
data16
push
push
push
dec
push
inc
dec
inc
dec
dec
add
mov
adc
outsl
xchg
fs
loop
jge
adc
dec
inc
cmp
dec
bound
inc
dec
push
aad
pop
pusha
xor
mov
mov
add
ret
ss
push
lock
je
push
bound
pop
push
and
sub
mov
xor
in
fisttps
jne
ja
add
gs
jns
outsl
clc
push
pop
mov
add
xor
aaa
pop
sub
xor
xor
push
mov
dec
add
imul
js
push
mov
popa
ss
mov
mov
jno
ja
ja
adcb
push
and
mov
fucomp
outsb
xor
ja
jb
inc
mov
jb
inc
gs
push
jb
dec
push
inc
dec
dec
push
push
int
lods
inc
loop
cmp
xchg
mov
dec
imul
je
imul
dec
sub
inc
dec
outsb
jg
inc
mov
jp
push
es
imul
jb
push
jbe
inc
adc
addr16
push
inc
inc
addr16
push
jae
insb
dec
jmp
push
pop
mov
push
push
dec
pop
add
push
fwait
int
dec
inc
jbe
imul
pop
in
mov
inc
dec
pop
dec
dec
dec
dec
dec
xor
jb
push
dec
ja
jo
das
cld
in
inc
dec
push
inc
dec
push
and
inc
inc
dec
xchg
fcmovnb
fbstp
push
jno
imul
mov
js
dec
and
pop
mov
ja
jnp
inc
mov
dec
and
xor
push
push
dec
push
push
pop
jae
imul
inc
push
inc
push
push
push
mov
sub
movsl
clc
cmp
push
push
je
jno
je
imul
adc
jmp
dec
imul
imul
ss
dec
dec
push
inc
jmp
divb
mov
jno
data16
sbb
jns
lods
mov
push
push
add
xor
outsb
cmp
mov
sbb
inc
jo
or
sbb
jns
mov
pop
gs
add
rolb
mov
jb
je
loope
or
gs
dec
loopne
dec
dec
inc
mov
dec
pop
inc
push
push
jno
push
imul
fistl
in
push
je
jbe
xor
pop
fdivs
shlb
push
ds
imulb
push
push
xlat
shlb
addr16
or
add
xor
mov
push
dec
dec
push
xchg
int3
jecxz
ret
push
push
fs
mov
insb
or
outsl
jg
fs
ja
js
gs
inc
jns
or
dec
inc
pop
add
fmuls
pop
push
push
dec
imul
jg
out
push
subb
data16
aaa
popa
arpl
test
inc
dec
dec
inc
push
push
test
sbb
incb
inc
push
push
pop
inc
rorb
dec
cs
push
imul
outsl
imul
js
dec
push
push
push
popa
cmp
inc
sbb
push
add
dec
xchg
mov
push
insb
xor
scas
push
bound
cs
loop
bound
jno
pop
push
mov
das
adc
jno
jae
push
insb
pop
dec
mov
je
outsl
push
jbe
push
inc
insl
push
fs
lock
insb
xor
imul
or
inc
push
dec
ja
dec
aaa
insb
or
movb
bound
mov
inc
add
xor
and
xor
neg
testb
push
insl
push
mov
jb
dec
gs
gs
dec
push
mov
or
dec
jns
push
lods
ret
sbb
insl
xor
pop
mov
das
shrb
jbe
xor
ja
je
push
mov
aas
xor
mov
push
orl
sub
imul
push
inc
mov
imul
movl
lret
inc
fistpl
cmp
loope
adc
mov
insb
inc
ss
jbe
ret
add
inc
bound
jne
popa
fs
push
or
ret
add
lea
dec
push
jmp
repnz
imul
pop
rorb
incl
and
inc
imul
jne
iret
hlt
outsl
inc
push
jo
dec
mov
arpl
cmp
ss
lods
jg
push
mov
dec
push
std
popa
pop
jo
inc
sbb
ja
sbbl
pop
mov
jo
adc
jns
das
xor
mov
inc
inc
ss
xor
lcall
mov
jnp
xor
popa
pop
inc
jo
pop
dec
mov
sbb
xor
stos
aad
jg
pop
int
fstpt
jmp
bound
out
push
iret
jne
push
xor
jmp
mov
dec
inc
jmp
mov
pop
inc
xor
pop
imul
arpl
fisubrs
mov
insl
push
push
xor
add
pop
push
insl
insb
insb
and
insl
arpl
outsl
pop
mov
inc
fistps
in
imul
dec
outsl
jae
push
jne
jo
sbb
sbb
lods
shlb
fstpt
sbb
push
cli
shlb
cmp
push
dec
xor
xor
add
push
mov
mov
jns
dec
push
outsb
popa
stos
icebp
fildl
push
dec
push
dec
pop
repnz
dec
lods
jge
fs
jb
outsl
push
ret
clc
insb
outsb
ja
push
sub
imul
dec
dec
inc
push
push
add
inc
in
inc
or
push
add
sbb
or
adc
jnp
jecxz
outsl
ss
subb
pop
sub
mov
xchg
jo
popl
xchg
ja
push
mov
js
jnp
bound
push
aaa
cmp
hlt
inc
add
rorb
insb
mov
cmpsl
add
cli
push
arpl
pop
inc
dec
push
fimuls
jo
mov
sub
mov
fdivs
aaa
xor
mov
testb
stos
sysenter
arpl
lds
lea
dec
inc
and
das
fsubrl
ret
fdivl
jb
dec
pop
and
sub
push
sti
mov
add
data16
xor
test
insl
jo
dec
popf
ss
pop
sti
dec
push
pop
dec
push
cmpsb
cmp
dec
jl
push
sub
inc
outsb
mov
ss
sub
dec
cmp
data16
mov
ds
dec
gs
xor
sub
push
outsb
or
adc
imul
xorl
fstp
outsb
mov
push
and
push
inc
and
inc
xor
pop
gs
enter
lea
loop
jb
xor
inc
les
movsl
movsl
pop
outsl
js
or
out
movsl
push
loope
fcoms
dec
jmp
or
outsb
call
in
data16
loopne
pop
outsl
insl
sub
dec
push
pop
sbb
rcr
push
pop
lea
dec
push
push
loopne
inc
mov
fcom
gs
adc
push
push
cmp
sbb
cmp
or
jbe
jne
mov
pop
cmp
jl
inc
imul
bound
fsubrs
in
movsb
jbe
dec
xor
lds
repz
dec
mov
and
sbb
sub
jg
add
xchg
pop
pop
dec
inc
dec
addr16
push
cli
imul
inc
js
add
adcb
inc
sbb
push
pop
shlb
push
push
insb
cli
push
sbb
lea
mov
push
jecxz
dec
gs
or
push
sbb
push
jae
scas
dec
mov
movsl
push
push
inc
inc
push
and
push
xor
xchg
xor
rolb
xor
jns
sbb
push
xchg
dec
mov
ss
imul
ja
push
dec
punpckhbw
aad
push
or
adc
insb
aaa
sub
lock
pop
insb
push
push
add
mov
sub
push
push
push
sub
je
cli
lods
shlb
outsb
je
outsb
outsl
insb
or
adc
cli
insl
pop
insl
dec
xor
adc
add
fdivs
push
jb
mov
sub
test
adc
dec
add
push
pop
dec
inc
xchg
inc
sbb
mov
insl
push
and
xor
push
jne
sub
push
pop
add
arpl
and
ja
jb
inc
cmp
push
mov
or
push
popa
bound
insl
movb
inc
lock
je
lock
test
cmp
cmp
pop
mov
cmpsl
aaa
fbld
mov
std
jno
dec
inc
je
call
xchg
int
or
cmp
add
js
imul
fistps
jae
push
outsl
je
adc
mov
out
jae
push
cs
jno
push
xchg
pop
scas
pop
inc
xchg
jo
lods
add
adc
push
insb
jnp
ss
dec
fidivl
bound
ja
push
subl
inc
loop
movsb
daa
dec
add
imul
sbb
dec
add
ret
or
pushf
mov
pop
mov
or
pop
data16
cmp
push
sub
inc
insl
jae
cs
inc
dec
add
dec
arpl
cmp
or
pop
stos
mov
lods
insl
orl
dec
test
jno
lods
lds
aad
icebp
dec
data16
mov
mov
dec
rclb
jnp
jle
lea
leave
pop
push
dec
lcall
push
imul
push
dec
sub
sbb
adc
xor
dec
pop
outsb
adc
xor
inc
inc
jns
pop
mov
jno
inc
dec
insl
jo
inc
jmp
ss
push
movsl
inc
lods
sub
xchg
dec
jo
push
push
xorl
imul
js
outsl
push
imul
xlat
test
push
inc
xor
pusha
mov
mov
dec
imul
fidivrs
enter
dec
adc
pop
imul
xorb
aaa
aam
pop
push
ds
inc
outsl
mov
rorl
push
dec
adc
movsl
insl
mov
pop
dec
nop
push
pop
stos
push
sub
sbb
mov
testb
or
inc
mov
outsb
es
xor
js
inc
lods
push
push
cs
jb
jae
imul
insl
fdivl
aaa
call
sub
cmp
inc
sbb
aad
mov
inc
cmp
jbe
mov
lea
inc
jne
ss
mov
into
cmp
mov
mov
jb
sbb
mov
push
ret
dec
push
sub
inc
push
dec
push
clc
dec
inc
pushf
aam
add
mov
adc
adc
outsl
dec
movsl
inc
inc
push
aam
sub
mov
push
fwait
inc
dec
xchg
outsb
test
inc
adc
inc
push
sbb
cmp
dec
adc
movsl
push
mov
outsl
adc
mov
js
mov
mov
outsb
push
xor
insb
shrb
xchg
jo
test
popf
insl
add
into
sub
lret
js
mov
pop
mov
xor
mov
push
into
lods
cmp
mov
sbb
inc
xor
xor
rcll
dec
test
pushl
mov
push
inc
gs
loope
mov
fnsave
sahf
dec
inc
sbb
sub
arpl
push
jno
push
mov
jae
pop
fists
popf
xchg
je
sbb
mov
sbb
je
pop
sbb
jne
and
xor
inc
add
adc
clc
sub
cmp
arpl
or
lea
insb
inc
mov
push
add
and
mov
push
dec
push
push
xor
adc
sbb
inc
add
push
sub
imul
xor
insl
imul
mov
cmp
cmpsl
cmp
adc
pop
and
nop
decb
push
scas
pop
mov
mov
movsl
aaa
inc
insb
in
mov
imul
dec
push
call
dec
arpl
push
jb
pop
push
ret
enter
pop
push
pop
icebp
pop
pop
bound
jne
push
movsb
jo
inc
xchg
pop
push
push
adc
dec
mov
arpl
dec
fists
mov
adc
push
sub
jnp
sbb
jo
test
lods
fimull
sbb
lock
pop
inc
push
dec
dec
push
dec
dec
dec
and
mov
fsubrs
outsb
sbb
push
insl
insb
dec
push
cmp
add
insb
sbb
popf
pop
je
push
inc
and
jb
sub
or
and
lods
push
sub
jno
pop
push
adcl
test
in
fldcw
in
movsl
sbb
adc
imul
sub
adc
push
addl
inc
xor
adc
sbb
xor
mov
push
shlb
push
jno
inc
dec
arpl
xchg
dec
jge
mov
mov
test
aas
gs
test
ror
fiadds
cmp
sub
push
test
xor
imul
inc
rol
inc
stos
or
cwtl
pop
in
mov
inc
imul
mov
andb
jno
out
add
push
imul
add
aas
leave
ljmp
je
popa
insb
inc
jb
gs
insb
insb
outsl
arpl
in
incl
insb
gs
outsl
imul
je
dec
outsl
jbe
dec
gs
outsl
jb
add
insb
mov
je
outsb
inc
or
bound
imul
jne
dec
popa
outsb
fs
inc
insb
mov
dec
insl
popa
addr16
imul
pop
push
inc
dec
adc
inc
jb
fwait
add
or
sub
push
je
inc
fstpt
add
add
add
jg
daa
sidtl
add
add
mov
daa
or
sti
or
jbe
and
ja
add
or
mov
xor
pop
mov
push
add
add
push
xor
je,pn
pop
pop
aad
mov
adc
jb,pn
das
fsubrs
add
aam
out
popf
mov
push
cs
add
ss
dec
jae
arpl
repz
add
rorb
or
add
add
add
nop
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
and
outsb
jmp
inc
push
mov
sbb
or
ret
sbb
sbb
insl
mov
fwait
leave
inc
insl
insl
or
in
mov
mov
dec
xor
shll
and
inc
jmp
dec
inc
sub
sub
mov
pop
and
gs
or
inc
pop
jb
dec
test
push
xor
cs
lret
loop
mov
push
loopne
daa
lods
outsb
jnp
mov
and
cmp
mov
in
leave
int
lds
xor
sbb
jg
movsl
push
sub
pusha
jp
sbb
or
pop
ret
sub
jbe
sahf
bound
adc
sbb
add
push
xor
std
inc
fisttpl
lret
dec
fldenv
sbb
xor
lret
jo
fs
xchg
aas
fwait
sbb
sub
lcall
cwtl
call
sub
sub
mov
pop
cltd
push
shl
add
push
lahf
mov
lcall
cli
loope
jmp
aam
or
lock
aad
push
mov
dec
lds
fisubl
cmp
mov
lds
sbb
lahf
mov
mov
daa
or
pop
stos
and
and
mov
cmp
xor
jo
shrb
fdivrl
xchg
lods
and
and
aam
push
ret
insl
repz
pop
jge
push
rorb
adcb
dec
pop
mov
cmc
test
inc
mov
xor
movsb
pop
lea
pop
push
and
sub
outsl
sub
add
loopne
nop
or
out
xchg
xor
xchg
outsl
fnsave
scas
add
lahf
jecxz
je
test
aam
outsl
sbbb
pushf
.byte
.byte
