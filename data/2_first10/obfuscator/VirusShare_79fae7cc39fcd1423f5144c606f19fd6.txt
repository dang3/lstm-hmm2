bsr
mov
bsr
adc
cmc
movzbw
mov
call
pusha
mov
bswap
pushf
repz
popl
movsbw
movsbl
xchg
btr
ror
stc
stc
pushl
popl
rol
movl
movzbw
pushl
pop
mov
jmp
dec
inc
jmp
mov
mov
call
push
mov
call
push
jmp
test
stc
pushf
add
jmp
bsr
mov
cmc
add
push
pushl
lea
jmp
xor
pushf
mov
not
pushf
pushf
mov
lea
jmp
pusha
cmc
cmc
pusha
xor
call
call
repz
popl
adc
pushl
popl
mov
bts
clc
movsbl
movl
sbb
rcr
sub
mov
bt
movl
push
xor
pushf
not
pushf
movw
movb
movb
lea
jmp
xchg
bswap
movzbw
xchg
not
push
xchg
push
call
call
call
clc
bt
mov
jmp
pusha
pushf
inc
cmp
cmc
neg
stc
pushl
bt
xor
bt
test
cmp
test
sub
jmp
jmp
shr
clc
push
pusha
or
cmp
jmp
movb
mov
call
pushf
xor
pushf
sub
cmp
cmc
mov
jmp
pushf
pushl
lea
jg
mov
pusha
pushf
pushf
pushl
lea
jmp
rcl
push
movsbw
mov
jmp
mov
pushf
pushf
pushf
lea
jmp
call
test
pushf
add
call
call
pusha
mov
call
pop
pusha
movzbw
mov
not
pushf
call
pusha
xor
bt
xor
cmc
jmp
movsbw
shl
mov
stc
test
clc
sub
pusha
cmc
mov
pusha
bswap
bt
push
pushf
add
call
pusha
pushf
popl
push
push
call
and
cmc
cmc
bt
call
pushf
pushf
call
inc
pushf
neg
call
add
adc
cltd
xacquire
nop
jge
mov
cmp
xlat
ret
shlb
mov
sub
aam
mov
fbld
xor
pushf
sub
aas
mov
repz
jo
pop
call
cwtl
push
pop
pop
in
mov
mov
sub
jae
testb
push
xchg
aad
aam
jl
dec
inc
scas
pop
xchg
sub
and
adc
insl
jns
lret
push
in
iret
mov
push
dec
push
adc
test
add
mov
sbb
cmp
pop
mov
sbb
push
lods
je
into
loopne
ret
dec
andb
sbb
iret
lret
int3
in
loopne
add
or
mov
and
inc
adc
mov
adc
mov
divl
or
sahf
out
push
add
push
push
jge
rorb
cmovno
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
out
bound
mov
mov
clc
or
stos
fwait
das
or
jnp
popf
mov
shr
xchg
scas
jecxz
and
or
das
cmp
je
stc
int
jge
enter
fcmovu
das
out
push
mov
or
cmp
fistpl
adc
test
divl
sar
ljmp
aaa
loope
mov
out
movsl
pop
dec
inc
adc
sbb
push
fildl
fnstsw
lea
jb
pushf
test
cmp
pushf
pushf
mov
pushf
lea
jae
pusha
mov
clc
shl
lea
mov
not
pushl
shl
mov
push
bt
clc
movb
xor
push
cmp
bt
repnz
mov
jmp
pushf
adc
call
shl
test
mov
cmc
stc
cmpb
jmp
pusha
call
add
dec
outsl
popa
fs
imul
add
add
sbb
adc
sub
les
add
sbb
xchg
clc
sub
int3
jae
add
sbb
mov
sbb
add
sbb
push
rcrl
fdivl
add
add
add
add
add
jae
add
add
add
add
add
sbb
add
add
add
add
add
jb
add
jae
add
add
add
add
add
jae
add
add
add
add
add
sbb
add
iret
mov
je
bound
push
inc
ja
pop
mov
adc
fstpt
jns
mov
outsl
push
decl
outsb
sub
mov
lret
loope
and
fs
pop
sub
insb
test
pop
mov
out
inc
test
dec
xor
pushl
fcoml
movzbl
movsl
in
xchg
mov
adc
scas
mov
outsl
inc
divb
xchg
mov
cltd
sbb
push
stc
test
jae
divl
push
or
pop
jno
int
jmp
outsl
stos
pop
push
adc
push
and
imul
shlb
cmpsb
shlb
dec
inc
test
mov
scas
andb
scas
stos
adc
stos
jo
xor
sub
mov
jg
mov
xchg
ds
in
sbbl
scas
das
inc
mov
js
mov
adc
jp
jmp
push
out
and
call
in
movsl
inc
cmp
or
std
mov
lret
mov
jns
sub
sbb
rorb
out
rcrl
shll
mov
clc
call
dec
push
push
inc
push
cmp
cs
insb
add
fs
je
not
mov
bswap
lahf
lea
pushf
pushf
pushf
mov
setb
lea
jbe
not
pushl
jmp
pushf
mov
stos
pushl
movb
lea
jmp
add
jmp
movb
pushf
pusha
lea
jae
push
dec
xadd
mov
cmc
mov
rcl
mov
movsbw
mov
stc
clc
test
test
sub
cmc
clc
mov
repnz
push
push
pushf
movw
lea
jne
jmp
add
bound
mov
scas
pop
mov
and
xor
xor
das
test
lret
loop
scas
push
mov
xchg
dec
inc
and
or
dec
clc
cmp
dec
add
bound
fstps
xchg
cmp
sbb
int3
ret
roll
and
nop
jp
pop
cmp
push
add
ja
push
add
pushf
call
jmp
lea
jne
pusha
push
stos
push
pushf
pushf
movw
lea
jmp
pop
mov
movb
pushf
lea
jmp
ror
stc
bt
cmp
push
sub
pushf
clc
test
pushw
popfw
pusha
inc
movw
push
mov
push
adc
lea
push
jmp
push
rcrb
bound
pop
imul
xor
or
popf
sub
sub
bound
subl
scas
sub
or
mov
jnp
sbb
sbb
xor
inc
rorb
mov
or
ljmp
push
or
lock
mov
xchg
movsb
insl
aaa
es
mov
mov
mov
mov
sar
xchg
shrb
aam
push
leave
out
cmp
or
fwait
insb
nop
aaa
test
add
lea
call
push
call
lea
je
jmp
pusha
lea
call
pusha
sub
call
pushf
call
mov
lea
jae
sub
movzbw
bts
clc
mov
pusha
neg
mov
cmp
pushl
add
mov
pusha
stc
test
sub
cmc
repnz
movw
movb
pushf
lea
jne
xchg
mov
mov
btr
bt
bts
shr
sub
lea
call
bswap
mov
pop
push
pushf
pushl
ret
popf
out
loope
bound
or
stos
inc
out
pop
cmp
dec
fcomi
push
mov
push
sbb
inc
add
popa
xchg
dec
jle
or
jecxz
int
int
fcoml
cltd
xchg
push
jnp
cmp
pusha
movb
call
test
jmp
lea
ja
stc
sub
sbb
sbb
pushf
lea
add
clc
not
rol
mov
push
mov
bt
bt
stc
test
repnz
push
lea
jne
movzbw
cwtl
movb
pusha
mov
pushf
lea
movzbw
pushf
lea
pushf
movl
pusha
movb
mov
pushf
push
pushl
ret
clc
pushf
sub
cmc
repnz
mov
lea
jne
rcl
rcr
mov
neg
ror
movzbl
dec
sub
bsr
push
sbb
lea
clc
push
sub
pusha
pushl
popl
bt
movw
mov
cmp
jmp
pushl
popl
pushf
cmp
push
lea
ja
pushf
add
sub
neg
bsr
neg
rol
sub
add
bts
mov
neg
bt
mov
pusha
cmc
bt
repnz
call
lea
pop
lea
call
in
jbe
inc
inc
and
sub
or
shrl
movb
xchg
push
and
es
clc
stc
add
pop
xor
pop
aad
outsb
dec
lds
inc
in
sub
cmp
jbe
or
mov
and
fnsave
pop
je
mov
add
sahf
inc
outsb
pop
ret
xchg
inc
lds
ss
arpl
jbe
mull
xchg
int
arpl
cmp
inc
mov
jo
adc
movsl
xchg
shll
inc
lds
aam
push
pushf
jp
in
jg
push
mov
pop
mov
xchg
mov
mov
mov
ror
and
mov
jo
mov
xchg
into
or
jbe
inc
test
shll
add
les
push
fisubl
xchg
xlat
mov
lcall
xchg
xchg
clc
inc
mov
in
mov
add
mov
dec
lcall
and
push
rorl
or
add
andl
lea
push
data16
sbb
mov
cmc
leave
fwait
cmp
inc
adcb
cmp
test
push
and
or
std
sub
push
out
popa
xor
sbb
xor
xchg
call
pop
scas
movsl
in
add
mov
int
repz
fisttps
call
in
sbb
daa
icebp
sub
dec
std
jnp
les
inc
mov
insb
mov
mov
aaa
fmuls
cltd
out
cwtl
ret
insb
cmp
push
popf
pop
push
pop
subl
or
add
dec
xlat
dec
gs
mov
sbb
sahf
sahf
lock
dec
inc
jp,pt
sbb
insb
add
jbe
enter
mov
leave
add
daa
sbb
roll
push
pusha
ficoms
xchg
add
inc
dec
sbb
xor
and
les
or
outsb
movl
rcrl
sarb
sub
jmp
popf
lods
addb
inc
int
pop
fisubrs
movsl
mov
adc
movsb
pop
test
aam
hlt
mov
push
push
mov
inc
sub
xchg
popf
std
inc
mov
inc
addl
push
mov
sti
jge
in
jbe
adc
xchg
add
int
inc
push
jbe
bnd
gs
les
jge
popf
xchg
jge
inc
gs
inc
roll
outsb
push
gs
xor
inc
xchg
cmp
repz
imul
clc
xlat
and
add
dec
push
jnp
movb
imul
clc
in
and
popa
lcall
cmp
jb
jae
inc
inc
sub
rcll
pop
cmp
nop
jle
add
add
lcall
push
sbb
sbb
roll
or
push
iret
xchg
rcrl
orl
sbb
cmp
popf
push
setge
mov
mov
sub
mov
dec
cwtl
dec
or
daa
xchg
inc
and
mov
mov
jbe
pop
mull
loop
push
lods
xchg
outsb
jp
repnz
jg
push
shll
and
jnp
data16
in
sbb
adc
xchg
scas
mov
push
add
das
ret
sbb
popa
pop
inc
jge
cmp
mov
lahf
or
movl
sahf
xchg
push
xor
and
int
jecxz
out
add
rclb
sub
andb
inc
cld
and
dec
icebp
pop
push
loopne
adc
nop
add
fbld
dec
jne
fsubl
dec
inc
and
mov
adc
je
sub
lods
lea
fistpll
add
mov
xor
add
jl
xor
nop
mov
sbb
xor
lds
inc
jg
pop
in
sbb
inc
clc
pop
pop
mov
push
movsl
inc
aam
xor
mov
fiadds
int
inc
cld
sbb
movsl
add
lahf
int
fdivl
lods
dec
cmp
inc
inc
pop
popa
cld
rcrb
jbe
mov
pop
cmp
push
cmp
push
add
fldl
dec
jge
add
pop
add
and
cltd
pop
inc
pusha
arpl
cmp
xchg
sbb
xchg
lds
dec
daa
mov
push
inc
or
push
add
cmpsl
sub
movsl
inc
mov
or
add
std
xchg
push
mov
xchg
push
cwtl
pop
lcall
and
in
rcr
or
sbb
mov
xor
lcall
rorb
out
into
mov
lcall
mov
cmc
shlb
or
cmpsb
mov
and
daa
imul
mov
cmp
and
dec
std
fbld
inc
inc
daa
xchg
mov
incb
jl
mov
push
movsl
insl
rcrl
push
xchg
movsb
push
push
ss
sub
jge
les
jp
ret
pop
xchg
cmc
leave
mov
add
lds
dec
add
in
dec
mov
icebp
popaw
add
xor
push
les
test
inc
pop
pop
mov
aam
inc
and
cltd
fistl
and
cmpb
movsb
sbb
std
faddl
daa
push
push
pop
add
repnz
mov
push
pop
xchg
mov
std
add
or
pusha
inc
adc
inc
jbe
ret
rclw
inc
xchg
popa
adcl
mov
and
fdivl
inc
inc
inc
test
sar
push
fsubl
adc
rcll
jb
jae
jno
rorb
test
imul
sahf
sar
test
rcll
push
sbb
xor
push
jb
lret
insl
roll
sahf
pop
push
mov
add
or
and
mov
and
and
sbb
push
and
ss
inc
mov
mov
pop
adc
clc
jmp
add
enter
and
mov
jbe
pop
sahf
pop
push
inc
or
add
hlt
sbbb
fs
out
dec
stos
or
pop
mov
fbld
arpl
xorb
bound
inc
add
stc
test
daa
fistl
mull
rol
shll
enter
pop
inc
daa
int
pop
and
orl
ret
or
dec
lods
fsub
dec
add
cmp
arpl
xor
xor
fnsave
stos
rcr
cs
add
adc
adc
pop
leave
rorb
adc
fs
sbb
stc
xor
add
addl
xor
cmp
adc
popf
adc
or
cli
add
mov
pop
xorl
fiaddl
std
inc
pop
mov
test
dec
push
add
pop
leave
ret
jmp
push
or
xor
inc
add
inc
out
or
pop
daa
push
sbb
and
sbbl
add
jno
aam
mov
stc
outsl
fsubl
fiadds
je
ret
pop
or
andl
inc
mov
add
movsb
inc
and
test
xorb
fs
imul
les
cli
jle
or
push
cmp
jnp
std
sbb
sbb
pusha
pushf
pushf
push
leave
in
fldt
shl
xchg
sub
rol
jl
add
pop
icebp
inc
dec
push
pop
orb
insl
inc
outsb
aas
ficoms
sbb
push
add
xor
xchg
iret
leave
mov
fdivrs
bound
test
xor
pop
sub
cwtl
inc
data16
inc
xor
fstpl
pop
out
popa
pop
lahf
and
cmp
or
enter
incl
orb
dec
insl
push
adc
rol
daa
pop
adc
jb
pop
fcmovbe
push
negb
or
add
inc
stc
ja
test
fs
mov
inc
jmp
pop
push
ja
jle
mov
faddp
push
mov
jmp
inc
rcll
in
icebp
addl
add
mov
in
jno
inc
movsl
dec
movsb
leave
and
mov
mov
les
push
movsb
enter
xchg
stc
jae
inc
add
or
xchg
les
mov
mov
cmc
push
xor
enter
mov
xchg
test
daa
dec
fucom
pop
pop
arpl
in
cmpsl
shlb
sbb
ret
add
push
scas
stc
push
jge
int
mov
arpl
and
dec
push
inc
in
aad
mov
jg
negb
leave
icebp
mov
inc
and
lock
ret
jns
orl
pushf
and
or
pop
outsl
je
cltd
sbb
pop
add
leave
and
sbb
inc
fisubl
popa
cld
push
inc
fmull
xchg
fcomps
inc
mov
push
jae
add
test
pusha
pop
pop
fs
push
fst
shll
push
insb
pop
fs
push
and
ret
addl
inc
sarl
lods
dec
fwait
inc
mov
loope
fwait
inc
insb
sbb
push
push
les
inc
test
ljmp
push
loopne
xchg
push
add
pop
adc
jae
adc
shll
push
and
add
repz
test
jmp
mov
push
sbb
dec
ret
inc
addb
or
int3
test
inc
pushf
mov
stc
jecxz
adc
mov
cmp
in
lods
xchg
sbbl
leave
in
sbb
sarl
adc
leave
jmp
dec
test
in
sbb
fisttpl
push
sti
pop
fpatan
xchg
les
jo
ret
lahf
push
cmp
shll
imul
loope
jo
test
xor
add
inc
jo
xchg
aas
jne
ss
sbb
leave
mov
rolb
inc
mov
push
insb
dec
test
addr16
inc
sbb
cmp
inc
dec
pop
loopne
mov
repz
jae
push
or
inc
in
jl
les
fwait
cwtl
rcll
pop
les
or
inc
insl
pop
or
lock
fcmovu
push
loope
xor
pop
dec
icebp
rorl
or
fidivrl
pop
jmp
inc
movsl
daa
sbb
ds
loop
pop
dec
adc
test
sbb
pop
jg
pusha
push
push
fmull
xchg
inc
aaa
nop
xchg
xchg
xchg
add
or
pop
push
or
push
mov
icebp
xchg
ret
xchg
in
cmp
stc
fcmovnb
or
test
cli
mov
sbb
mov
test
outsb
mov
add
push
mov
test
ret
nop
cltd
lods
ret
mov
andl
sbb
cmp
jg
add
pop
repz
lret
add
cli
pop
andl
imul
add
adc
loope
pop
mov
add
push
les
leave
aam
popf
mov
jmp
ljmp
adc
andb
das
cld
mov
sbb
movsl
mov
xor
fiaddl
pop
fnsave
adc
fs
cmp
push
push
js
cmp
popa
push
push
jnp
or
stos
and
mov
bound
xor
mov
add
xchg
add
push
movsb
mov
jmp
fsubl
lret
and
fwait
cmpsl
test
push
jle
fmul
shl
pop
xchg
or
pop
push
orb
pop
and
or
sub
jnp
mov
add
stc
inc
inc
shl
add
stc
in
and
xchg
sub
outsl
je
in
or
mov
test
add
sbb
cmc
cmp
xchg
fmull
adc
xor
pop
adc
or
leave
mov
or
xor
sbb
test
fstpl
cmp
xchg
push
pop
inc
or
icebp
inc
aas
mov
pop
test
inc
sbb
popf
mov
cmp
or
xchg
push
inc
gs
xchg
push
xor
mov
inc
outsl
xorb
mov
sub
call
sbb
mov
jns
xchg
inc
push
jno
sub
inc
sub
mov
jno
sbb
or
and
icebp
int
ss
or
fdivrs
jbe
stos
ret
push
mov
int3
dec
leave
pop
push
imul
push
dec
xchg
mov
push
rorb
add
aas
jne
insb
decl
cld
cmp
pusha
aad
xchg
lock
repnz
std
jle
xor
mov
std
push
or
test
lds
shlb
aam
pop
sbb
std
push
sahf
inc
pop
and
stos
pushf
test
jp
mov
hlt
xchg
xor
or
addr16
jbe
pop
mov
dec
xchg
mov
xchg
or
sub
aad
jne
dec
out
inc
insb
lods
lret
sbb
push
out
inc
sub
mov
xchg
inc
lret
push
xor
mov
les
mov
mov
xor
outsb
ja
out
les
push
sub
cmp
sub
or
mov
jae
imul
xor
dec
pop
ja
jmp
repnz
xchg
ds
dec
fwait
mov
sub
int
adcl
in
pop
xor
orl
xchg
inc
dec
mov
and
xchg
movsl
sahf
out
push
xchg
xchg
xchg
xchg
dec
shrb
inc
lahf
add
mov
push
cli
mov
inc
subl
push
xlat
mov
jb
repz
xchg
pop
jno
les
adc
lock
mov
mov
sarb
insl
mov
fwait
push
push
push
push
jecxz
mov
jno
xchg
jae
adc
xchg
pushf
out
mov
pop
clc
mov
orb
jbe
std
xchg
push
push
ret
mov
repnz
movsl
stos
inc
fcoml
lcall
mov
pop
dec
ds
jae
sub
jp
sbb
call
cmp
inc
test
push
inc
lds
push
sbb
push
popf
gs
push
mov
lahf
inc
data16
jnp
push
int
sahf
ret
or
inc
adc
jp
ljmp
pop
xor
and
js
push
sahf
push
inc
or
push
icebp
pop
stc
cwtl
inc
shlb
bound
gs
xchg
int3
and
xchg
lock
mov
xchg
cmp
add
xchg
adc
inc
arpl
sub
cmp
add
daa
imul
push
sub
sahf
pushl
jbe
inc
mov
inc
jmp
cmp
mov
jae
pop
int
push
inc
subl
inc
and
lea
mull
nop
fs
cmc
sbb
lds
mov
mov
stc
test
push
mov
add
movsl
add
scas
ja
test
or
lcall
cltd
xchg
mov
xchg
popf
test
adc
inc
xchg
subb
cs
xchg
outsb
ss
or
idivb
push
push
xor
and
push
bound
ljmp
adc
push
xchg
add
xchg
push
or
add
mov
inc
push
inc
mov
aad
xor
lcall
and
or
adcl
popa
dec
in
jne
jbe
push
lods
xchg
mov
jle
lds
popa
rcll
cwtl
popf
push
dec
mov
and
or
jp
xchg
jb
add
movsl
mov
jle
xchg
adcb
es
insl
sbb
push
mov
data16
mov
push
sbb
lcall
call
daa
dec
xchg
in
loope
inc
and
push
andl
sahf
and
sub
fs
andl
inc
xor
cmpsl
mov
inc
mov
in
fmuls
cmc
sbb
jb
push
xchg
cmp
push
in
push
into
inc
xchg
test
aad
xchg
dec
inc
push
jns
ss
and
lea
push
repz
adcb
icebp
sahf
rorb
push
or
movsl
xor
outsb
fisubs
cld
pop
arpl
xor
cmp
cmp
jg
jge
inc
cli
inc
popf
add
je
in
xchg
push
jmp
outsl
test
sub
jmp
add
cmc
es
insb
jbe
sbb
push
lret
xchg
push
push
test
add
and
cltd
pop
xchg
push
inc
add
push
rclb
add
gs
ret
rol
in
daa
pop
in
and
push
add
pop
cmp
repz
or
or
into
dec
and
push
adc
movl
push
add
mov
or
gs
mov
rcll
push
andb
push
repnz
add
popa
adc
pop
and
aad
addl
test
ror
arpl
into
push
test
xor
nop
xchg
inc
ja
pop
pop
pop
lcall
mov
inc
jmp
movsl
sbb
add
lahf
jge
jmp
xchg
or
std
mov
inc
sbb
lods
xor
stc
add
xor
pop
shrb
sbb
or
outsl
std
jecxz
xchg
pushf
sbb
push
jle
insb
cmp
jp
jmp
cmc
or
inc
icebp
sub
out
test
out
ret
jbe
xchg
les
add
cwtl
xchg
mov
jmp
popf
cld
mov
push
pop
sub
push
push
dec
cmp
push
insb
push
sahf
cwtl
pop
mov
cltd
movsl
aaa
call
dec
mov
pop
push
in
gs
fidivrl
mov
and
add
je
xor
inc
pop
sub
cmp
xchg
sbb
mov
repz
push
sti
lahf
xor
ffree
dec
xchg
or
das
repz
int
in
inc
popa
pushf
call
push
rclb
push
add
jp
ljmp
shlb
xchg
mov
fstpl
jae
or
insl
hlt
push
xchg
int
push
loope
sbb
mov
or
push
and
xchg
test
andb
sub
add
push
arpl
movsl
les
jnp
test
xchg
js
push
in
inc
xlat
xchg
ss
mov
imul
fsubs
push
jns
xor
mov
loope
and
cltd
negb
push
repnz
mov
inc
jno
aam
cwtl
inc
daa
addr16
loope
out
cmc
scas
ss
incl
scas
push
xchg
push
loop
sbb
push
add
jl
loope
xchg
mov
sahf
lcall
sbb
je,pt
xor
and
jbe
pushf
dec
push
sbb
cmp
push
aas
popf
test
mov
test
adcb
movsl
insb
xor
out
ja
test
test
bound
test
bound
test
bound
test
fimull
mov
repnz
push
rorb
faddl
add
dec
jbe
xor
addb
inc
push
push
add
push
and
xchg
daa
inc
or
pop
xor
add
rorl
push
adc
loope
test
icebp
pop
addr16
gs
add
and
xchg
fidivs
into
rcr
inc
fisubs
and
ficoms
movsb
inc
cmpsb
xor
mov
mov
mov
mov
lods
shrl
add
inc
inc
es
xchg
test
test
xchg
jle
pop
std
sbb
push
test
test
ljmp
std
pusha
mov
dec
mov
mov
push
dec
or
outsb
shlb
pop
cmpl
test
ss
xchg
mov
jge
cmp
push
fstpt
push
pop
es
movsl
dec
movsl
sahf
cmpb
sub
jnp
fbstp
dec
and
sbb
icebp
mov
popf
sbb
push
in
or
rclb
repnz
add
in
inc
inc
push
lea
les
jnp
jae
push
inc
and
add
pop
push
pop
dec
mov
jae
jbe
push
movb
jp
and
sar
insl
sub
subb
mov
add
add
nop
xchg
mov
pop
das
aad
dec
pop
mov
inc
xlat
add
inc
sahf
scas
inc
test
xor
dec
into
shrb
add
xchg
idiv
or
aas
push
ficomps
xchg
and
push
lahf
test
arpl
call
add
xchg
cmp
jmp
jne
fs
sahf
inc
inc
test
jb
pop
rorl
or
aam
in
cld
xchg
push
push
rorb
sub
push
mov
pop
add
cli
xor
test
pop
mov
insb
mov
xchg
sub
pop
xor
outsl
popf
out
pop
bound
or
add
xor
loopne
dec
add
xchg
or
mov
jl
add
imul
loopne
cmpsl
popa
test
dec
rorb
push
int
test
cmp
cmc
push
incl
add
repz
js
and
outsl
push
inc
push
jb
rcrl
mov
or
mov
test
mov
loope
or
je
jle
or
xor
leave
mov
sub
mov
add
rolb
ljmp
and
add
sahf
dec
rorb
pop
cmc
adc
aam
test
in
bound
repnz
ss
mov
inc
pop
push
or
xchg
aad
add
shr
mov
push
jb,pt
xchg
lcall
jle
shl
idivl
xchg
add
xor
scas
in
cwtl
stos
inc
icebp
shll
pop
fwait
loope
xchg
xchg
push
dec
or
lds
cmpsl
dec
cmc
dec
or
jbe
movsl
cmp
jns
mov
adc
lds
cmpsb
or
jbe
push
bnd
jae
lds
aam
mulb
xor
lret
cmp
scas
insl
pop
and
les
push
pop
clc
sub
mov
mov
popf
jnp
dec
cwtl
fcmovnb
mov
sbb
and
xchg
imul
xor
lret
xor
mov
std
xchg
in
test
ss
popf
inc
scas
fbstp
int3
add
sbb
inc
xor
inc
xchg
and
push
pop
bound
jecxz
lea
adc
fs
pop
lds
or
fisubs
inc
movsb
or
pop
add
int
and
mov
test
jbe
sbb
mov
pushf
pop
inc
push
push
pop
add
inc
ljmp
cmp
popf
test
pop
lahf
mov
push
test
xlat
call
xchg
add
or
cld
lds
adc
add
aas
int
leave
fsubrs
xor
aaa
nopl
dec
xchg
cmp
gs
and
or
in
and
fildl
adc
inc
gs
ss
mov
movsl
in
sub
orb
push
roll
addb
pop
add
lcall
push
dec
imul
mov
cld
dec
std
xor
sbb
sahf
testb
inc
outsb
jmp
push
fidivs
xchg
dec
aad
or
add
and
aad
pop
push
sbb
or
jecxz
or
adc
aam
dec
xchg
mov
jg
jne
adc
jne
xor
inc
pop
mov
mov
push
enter
mov
popa
rol
je
mov
and
and
push
mov
push
sbb
hlt
mov
je
inc
lods
repz
cmp
mov
xor
sbbl
xor
xchg
pop
adc
inc
sti
hlt
pop
lea
dec
jbe
gs
scas
inc
pop
inc
dec
push
sbb
dec
lcall
cmp
inc
mov
ss
pushf
cwtl
mov
outsb
sub
mov
popa
aaa
pop
jmp
inc
add
cmp
pop
into
ss
lds
adc
mov
mov
cmpsb
push
pop
insl
pop
or
es
outsb
jmp
es
outsl
pop
test
lds
sarb
pushf
sti
xchg
shll
fs
add
inc
xchg
pop
push
xchg
incl
push
fbld
mov
fiaddl
xor
arpl
push
inc
dec
subl
lds
and
les
movsb
xlat
push
bound
inc
imul
test
dec
jo
jg
xchg
fwait
mov
mov
stc
cmpsb
sbb
dec
or
mov
jmp
stc
nop
xlat
push
xor
insl
dec
pop
movw
jbe
enter
sbb
jno
fwait
push
add
xor
add
xchg
popl
sbb
icebp
add
fiadds
aam
dec
rcrb
ljmp
aam
jae
sbb
loopne
pop
xchg
jno
ret
jnp
mov
scas
sbb
mov
imul
test
je
and
movsb
es
pop
adc
mov
jb
fs
inc
sbb
add
mov
push
mov
adcl
stc
sbb
ss
sbb
adc
push
or
fld
jno
or
sahf
mov
icebp
rcrl
inc
movl
jl
pop
jg
adc
xlat
lds
add
xchg
lahf
cmp
jmp
jns
jae
jnp
push
pop
pop
pop
mov
fisttps
orl
imul
inc
jae
sbbl
add
imul
enter
adc
fcoms
jmp
mov
fs
lock
insb
fwait
ret
jmp
mov
xchg
imul
and
inc
inc
mull
adc
cmp
sbb
dec
out
fidivl
mov
sbb
add
dec
orl
rcrb
xor
lahf
jg
mov
pop
push
orl
sub
js
repz
add
ret
push
subb
fstps
jmp
adc
pop
add
xchg
and
jo
aas
and
aad
insb
cmpb
fildl
or
cmpsl
je
and
jl
push
insb
pop
mov
adc
push
popa
sub
add
sbb
xor
lahf
or
adc
cmp
sahf
aaa
lea
push
mov
nop
dec
jp
xchg
leave
jnp
pop
icebp
nop
add
sahf
shr
imull
dec
xchg
or
inc
in
test
sbb
push
lcall
in
push
cld
mov
dec
mov
push
shrl
dec
inc
mov
in
push
pusha
popf
bound
test
imul
dec
xor
sub
loope
xor
mov
sub
jb
jg
sub
ret
in
jp
fucom
sti
xchg
or
xor
in
mov
leave
mov
stos
mov
jnp
push
pushf
inc
xor
xor
jecxz
in
les
dec
sub
add
testl
dec
mov
sbb
enter
jnp
xchg
frstor
cmc
test
xor
ret
xor
add
pop
and
and
in
inc
xor
pop
xor
push
sbb
push
add
sub
xor
mov
and
test
sbb
push
notl
mov
fwait
pop
jle
or
stos
push
push
or
rol
xchg
dec
add
jp
jno
loope
lds
or
or
movsl
or
sbb
sbb
mov
dec
andl
loope
pushf
mov
mov
pop
mov
xchg
je
dec
in
fcomps
or
mov
dec
inc
fs
push
mov
or
clc
sbb
les
sbb
cli
jmp
andb
aas
sbb
and
dec
movsl
xor
clc
loopne
gs
arpl
subb
dec
dec
xor
xor
addb
outsb
jp
xor
les
add
loopne
cmc
push
out
pop
popa
les
jbe
jmp
jae
fdivs
add
sbb
mov
xchg
mov
inc
jp
sbb
data16
add
in
or
stos
push
inc
in
xor
or
mov
movsb
push
loop
jne
sbbl
push
sub
sbb
lret
test
sbb
aas
inc
push
pop
aad
cmp
cmp
pop
dec
pushf
and
or
aad
in
jb
push
adcl
add
inc
xor
mov
repz
movl
lcall
or
inc
mov
iret
clc
stos
and
mov
popf
mov
pusha
xchg
adc
and
pop
jle
or
mov
arpl
orl
lods
jb
jle
mov
inc
aad
sbb
dec
xchg
test
push
loope
in
lock
xchg
jle
add
mov
add
frstor
pop
aam
jl
push
jp
shll
jmp
inc
cwtl
imulb
aad
lret
push
in
add
fisubs
addr16
popf
and
xorb
adcb
inc
jle
mov
jnp
popf
bound
sub
xchg
dec
inc
xor
push
dec
sahf
dec
inc
inc
push
popa
movsl
leave
jnp
aam
cmp
sbb
mov
and
pop
mov
jmp
inc
in
cmp
push
bound
dec
test
jge
repnz
adc
arpl
sub
jp,pn
lret
add
addr16
mov
or
or
repnz
sub
sbb
fistpll
or
je
xor
test
pop
mov
xor
xchg
sbb
jb
pop
mov
sbb
and
in
insb
mov
inc
mov
sbbl
dec
mov
test
push
out
popf
push
mov
jns
add
icebp
lds
es
ss
lahf
je
mov
jbe
dec
in
adc
stos
mov
gs
ret
pop
sahf
push
fsubr
sub
push
pop
cmp
pushf
or
jno
mov
movsl
int
xchg
outsb
push
pop
popa
sbb
inc
jae
jbe
xor
push
into
pop
push
es
mov
in
push
inc
mov
test
rcr
jbe
test
inc
cltd
push
push
lds
in
hlt
mov
xor
ds
xchg
jg
jecxz
dec
int
xor
ss
xor
jle
sbb
movsb
mov
adc
and
jne
push
dec
movsl
test
pusha
popa
xor
les
inc
jb
sub
push
fsubp
add
jl
xchg
lds
lds
shll
push
xchg
pop
es
out
mov
ret
jno
and
lds
cmp
xchg
jb
xchg
in
lcall
mov
xchg
add
add
dec
add
je
hlt
or
and
add
lea
bound
add
xchg
sub
nop
into
push
lds
mov
loope
jbe
push
loope
adc
repnz
gs
incl
inc
std
loopne
cmpl
jb
sub
push
faddp
aas
mov
add
es
imul
aam
push
inc
inc
mov
es
push
add
push
xchg
roll
adc
jns
pop
inc
add
lods
adc
inc
enter
inc
xor
dec
inc
mov
hlt
push
inc
dec
adc
jne
loopne
add
cmpsl
xchg
push
movsl
pusha
popf
jge
jo
xchg
and
jne
add
in
xchg
ret
andb
push
aad
lret
gs
outsb
inc
std
les
and
lods
test
sti
push
inc
mov
sub
test
jge
inc
push
test
lds
dec
jge
xchg
xor
add
in
inc
cmc
dec
mov
aad
rcrl
cmp
or
pop
pop
pusha
fbstp
pop
cmp
je
jp
add
cmp
movsb
push
inc
lds
stos
dec
pop
movsl
outsb
mov
pop
mov
mov
stos
fisttps
lret
fwait
mov
push
jb
adc
push
inc
mov
test
out
jp
push
lahf
inc
add
push
test
pop
push
mov
addl
mov
push
into
adc
loope
push
sbbl
aas
dec
arpl
mov
inc
rcll
xchg
pop
les
mov
outsb
movl
sbb
sbbl
int
jmp
in
mov
cmp
arpl
das
andl
lds
jb
xchg
rcrl
arpl
adc
bound
rorb
test
sub
sub
mov
mov
roll
cmpsl
xor
rolb
or
push
aad
push
push
xor
xchg
xchg
lret
jae
inc
sahf
pop
push
push
pop
jb
into
stos
push
and
or
dec
inc
test
or
cld
pop
and
push
inc
push
data16
fst
add
xchg
jg
jbe
dec
add
arpl
xor
aad
inc
inc
bound
into
inc
add
push
or
mov
fildl
xchg
pop
aaa
or
mull
orl
dec
fcompl
pop
icebp
imul
mov
clc
and
popaw
icebp
xchg
outsb
sub
rcll
sbb
les
lea
and
ret
pop
mov
inc
xchg
jno
fstpt
and
stos
push
stos
xor
xchg
incl
or
add
inc
push
push
movsb
mov
add
pop
lds
xchg
inc
out
lds
scas
add
fidivs
cmp
scas
insb
dec
or
xchg
sahf
mov
out
pop
cmpsb
inc
ds
mov
loope
lret
jbe
xchg
sahf
orl
cmp
pop
ja
es
dec
push
lret
fwait
sub
rorb
lahf
xor
outsl
andl
fldenv
push
ret
sbbl
adcb
hlt
pushf
test
test
or
repnz
sbb
fstps
test
pop
test
shll
inc
push
ret
movsb
orl
mov
jmp
mov
pushf
iret
stos
aad
mov
pushf
mov
leave
pushf
scas
or
inc
inc
push
sbbb
std
add
lds
sub
insb
lahf
int3
mov
test
shl
add
mov
popa
mov
jecxz
aad
sbbl
lahf
jecxz
aad
arpl
jae
lahf
mov
push
daa
dec
lds
lahf
jge
aad
fs
insl
dec
aad
fs
pop
dec
aad
fs
dec
cmp
or
sbb
es
pushf
lds
xchg
push
dec
add
loopne
ds
lret
fistpl
fistpl
fistpl
fistpl
fistpl
cmp
subl
sbb
test
fimull
mov
clc
sahf
push
enter
sahf
push
fcom
repz
sahf
push
test
repz
push
mov
push
mov
adc
sahf
pop
cwtl
lds
and
sbb
pop
andb
dec
lds
pusha
sahf
bound
pusha
sahf
jb
aad
pusha
sahf
inc
dec
aad
pusha
sahf
push
pop
aad
fldl
test
xor
mov
jecxz
aad
mov
jecxz
aad
sbbb
lahf
jecxz
aad
pusha
lahf
insb
pushf
lds
or
cld
lds
lds
lahf
jecxz
aad
jo
jecxz
aad
inc
lahf
jecxz
aad
push
lahf
jecxz
aad
and
xor
lahf
mov
test
xor
mov
mov
mov
mov
mov
mov
imul
pop
in
xchg
jmp
test
popf
sahf
fwait
adc
adcb
inc
loope
jmp
sahf
inc
icebp
aad
fistpl
fistpl
fistpl
fistpl
or
xchg
rorl
addr16
push
xchg
push
xchg
loope
data16
pop
arpl
aad
sahf
pop
jae
aad
sahf
pop
inc
loope
push
sahf
pop
push
adc
es
xchg
ss
pop
out
xchg
push
int
ret
xor
loopne
andb
sbb
fcompl
or
mov
dec
cmp
mov
popf
repz
movsb
sbb
out
xchg
mov
inc
push
cli
push
cmp
sub
aas
dec
cmpsl
mov
jnp
hlt
pop
mov
shlb
lods
cmp
aas
dec
dec
mov
insb
push
push
xorl
inc
and
addr16
push
into
sti
jo
cmp
ss
lret
arpl
or
adc
leave
lahf
inc
and
cmp
lahf
push
xor
ret
sub
pop
add
aad
jae
pop
icebp
aad
xchg
xchg
popa
aad
lahf
inc
out
aad
or
xchg
fistl
lahf
movsl
lcall
push
int
xchg
xor
xor
shll
in
je
dec
sbb
dec
data16
lds
popf
inc
fmuls
dec
cltd
ret
or
daa
cmpsb
sub
daa
and
movsb
test
jmp
pusha
lcall
pop
dec
hlt
daa
imul
jge
pusha
fcmovb
pop
aad
sbb
jbe
fiaddl
lds
fidivrl
sbbb
adc
lret
cmc
lcall
add
pop
adc
aad
lcall
pop
lock
into
dec
pop
shl
mov
aad
dec
pop
mov
pop
mov
inc
xchg
mov
sbb
pop
mov
mov
dec
xor
jecxz
fwait
bound
sbb
push
cmp
test
or
sti
mov
ljmp
or
adc
inc
push
adc
mov
mov
push
lds
dec
mov
sub
lret
dec
cmp
add
addl
cmc
adc
add
sti
fiadds
pop
inc
and
cltd
ret
sbb
in
xchg
dec
fs
fwait
dec
cmpl
xchg
lahf
jl
test
cltd
ret
shll
push
sbb
and
icebp
mov
mov
mov
mov
orb
je
notl
mov
icebp
mov
or
pop
mov
mov
jg
and
test
xchg
or
int3
rorl
popf
and
xchg
lcall
push
and
adc
push
add
ret
stos
daa
gs
test
sbb
ret
xchg
or
sub
popl
mov
inc
jp
test
lahf
jbe
testl
or
or
xor
mov
or
pop
data16
fildl
cmp
je
lds
call
cmpsb
data16
iret
ljmp
pop
jne
xchg
jp
fbld
inc
repnz
inc
sub
cmpsb
adc
lds
jg
cmp
icebp
ds
push
mov
cmc
mov
in
dec
pop
and
mov
pop
pop
das
imul
push
push
vmovmskps
fcmovnbe
push
sbb
cmp
adc
cmp
inc
cvtps2pi
inc
and
mov
pop
stos
jecxz
popa
notl
add
insb
cmp
mov
in
stos
jnp
mov
jne
inc
lds
jmp
mov
cltd
jg
clc
divl
dec
in
or
adc
xlat
dec
jo
sahf
leave
sbbl
push
jno
pop
lcall
sub
ds
std
psrad
pop
inc
sbb
lds
bound
pop
dec
paddsb
mov
mov
cmpsb
arpl
mov
pop
jbe
xchg
mov
lcall
scas
and
mov
je
dec
rolb
mov
pushf
mov
cmc
push
mov
popf
stc
std
outsb
hlt
sbb
add
loope
or
inc
cmp
pusha
add
leave
jbe
iret
push
inc
mov
add
inc
inc
inc
inc
and
cmp
addb
inc
mov
push
xchg
mov
jge
jne
jno
es
rcll
sahf
bound
mov
in
or
xor
ds
jmp
jb
lcall
add
pop
dec
pop
mov
mov
sbb
dec
or
jp
jge
bound
inc
inc
ds
lock
in
int3
popf
ds
enter
push
add
jl
inc
mov
inc
mov
cmp
adc
insl
push
adc
sub
dec
mov
and
add
push
hlt
push
jg
jmp
xchg
jle
or
inc
jecxz
dec
adc
xorl
xchg
inc
es
repz
hlt
int3
push
out
jb
sahf
inc
adc
adc
ja
dec
imul
add
movsl
and
mov
add
xchg
push
hlt
push
jl
jb
jae
adc
out
dec
xchg
pop
xor
push
sub
push
or
xchg
fs
adc
xchg
xchg
pop
call
adc
aam
mov
add
push
notl
fs
sub
aam
or
push
lds
popf
dec
stos
xchg
inc
rolb
push
mov
add
fists
inc
inc
mov
xchg
mov
dec
xor
fwait
aas
jne
add
xchg
aam
test
push
cmc
xchg
mov
js
sub
xorl
dec
aas
stc
adc
enter
in
sbb
and
sbb
pop
xchg
sub
add
pop
cld
movsl
xchg
jge
add
mov
popa
das
pop
popf
push
movsl
inc
xchg
add
imul
add
bound
adc
mov
sarb
inc
sbb
mov
ss
jle
add
cmp
mov
mov
fucomp
test
pop
jne
incl
gs
ds
cmp
mov
fisubrl
jnp
mov
movsb
outsb
outsl
leave
jle
jge
add
sbb
push
pop
ds
mov
add
rclb
test
add
push
andb
pop
xchg
mov
lds
xchg
bound
mov
push
push
popf
movsb
xchg
pop
test
xchg
xchg
lods
pushf
in
es
cmc
incl
xor
inc
inc
cmpsb
push
sbb
push
test
mov
andl
aad
ja
ja
icebp
jbe
or
mov
sbb
push
sti
inc
lods
cmp
inc
lret
xchg
mov
add
and
test
mov
ret
xchg
jno
mov
cmp
iret
mov
addl
or
push
pop
lds
adc
lods
dec
xchg
push
mov
jg
adc
mov
aam
ficomps
push
leave
ret
push
inc
pop
mov
fwait
aaa
movl
fisubs
andb
pop
inc
add
out
inc
aam
pop
fisttpll
ffree
push
ljmp
sbb
pop
pop
inc
out
sti
and
mov
xor
inc
inc
push
cmpsl
sub
les
cli
sbb
sbb
sar
or
xchg
xor
insl
mov
inc
pop
mov
mov
mov
inc
nop
sub
dec
ud0
xchg
bound
mov
divb
scas
dec
inc
xor
loope
jp
shrb
inc
in
mov
sbb
addl
xchg
lahf
lds
ret
jmp
adc
bound
add
or
in
dec
inc
scas
popf
std
push
in
inc
adc
enter
xor
aaa
dec
movsb
pop
sbbl
add
aam
ret
xorb
add
orl
mov
xor
push
sarb
cs
scas
push
data16
push
jns
dec
adc
filds
test
add
xor
push
inc
data16
test
jbe
xchg
mov
das
testb
jne
add
cmp
movsl
les
fistl
lret
add
test
inc
jne
push
mov
rolb
adc
add
inc
addl
inc
lahf
add
lea
sbb
lods
mov
lods
sub
stos
gs
aaa
add
mov
xor
mov
xor
xor
xor
add
lea
mov
loopne
and
icebp
jae
xchg
fs
popf
xadd
xor
jecxz
lods
xchg
flds
out
mov
or
mov
xor
xchg
jns
inc
dec
mov
sbb
aad
mov
negb
filds
push
dec
push
cmpsb
pusha
lods
push
repnz
jle
xchg
les
add
sbb
leave
mov
dec
es
or
dec
roll
cmp
sarb
or
ret
scas
dec
nop
fnsave
dec
xor
jnp
fwait
lahf
inc
push
adc
or
or
push
adc
int
xchg
pushf
inc
and
push
add
fwait
mov
or
mov
ds
fstpt
cmpsb
cmpb
mov
pop
movsl
xchg
data16
in
std
scas
xor
data16
xor
mov
add
inc
repz
int
jae
std
inc
xorl
mov
push
int
bound
mov
push
test
lds
movsl
lds
out
sbb
arpl
divb
adc
xorb
mov
icebp
ds
mov
mov
sahf
or
std
sbb
xchg
xchg
in
mov
stos
mov
adc
jp
sbbl
jp
lock
rorb
sbb
inc
popf
pushf
cltd
mov
inc
test
add
loopne
stos
inc
stos
cltd
mov
jl
and
pop
arpl
pop
in
xor
inc
loopne
adc
or
mov
add
fs
pop
mov
enter
fwait
xor
shll
sub
mov
and
xor
xchg
fscale
add
leave
insb
jne
fldcw
xchg
jns
jnp
cmp
cmp
cmp
sub
leave
ficomps
dec
jno
mov
pop
xchg
mov
addl
orl
mov
and
jbe
mov
mov
jbe
bound
mov
cmpsb
imul
push
sbb
cmp
icebp
popa
dec
les
cmp
push
inc
in
rolb
ja
inc
or
xchg
dec
push
mov
fs
pop
xchg
dec
rcl
jge
or
loop
push
sub
adcb
adc
mov
or
loop
push
gs
rcll
imul
pop
in
fcmovu
mov
or
outsb
fidivl
dec
xor
inc
hlt
add
sub
fcmovu
xchg
rorb
push
push
mov
xor
shll
ret
test
push
cwtl
inc
inc
push
lds
inc
jmp
add
xor
mov
or
xor
lds
or
pop
testl
fs
pop
xchg
fstl
sahf
or
addb
and
xchg
pusha
js
mov
fisubrs
addl
arpl
lods
cmp
je
jbe
into
dec
test
inc
ret
and
mov
mov
bound
push
mov
arpl
pop
adc
dec
adc
xchg
pop
xchg
push
jns
lahf
push
and
mov
nop
je
xchg
fs
cmc
xor
lds
faddl
aam
mov
fs
and
inc
js
jle
fs
sbb
jle
fs
pop
xchg
xor
adc
push
cmpsl
jmp
incb
outsb
arpl
push
push
jno
and
inc
push
pushf
pop
popf
xchg
or
fs
pop
xchg
frstor
sbb
xchg
and
enter
aad
pop
pop
inc
popf
fs
pop
xchg
add
add
adc
sbb
pop
and
jb
dec
pop
xchg
pusha
aaa
and
pop
jae,pn
xchg
dec
inc
cs
ret
and
fdivrl
in
xchg
xchg
lea
popf
fs
pop
xchg
add
leave
add
into
pop
sbb
xchg
fwait
lods
mov
repnz
push
pop
adc
fnsave
ret
insl
sbb
out
std
sbb
lcall
arpl
push
je
sbb
lahf
je
xchg
fs
cmc
pusha
push
lahf
jbe
ffree
addl
jb
dec
pop
xchg
pusha
loopne
mov
xchg
pop
xchg
mov
into
movsl
les
lea
cmp
icebp
adc
rcrl
lcall
pushf
dec
popf
inc
push
lock
inc
in
popa
aas
lds
inc
mov
add
xchg
ret
push
and
pusha
adcl
xchg
in
pop
lock
lock
or
mov
jne
or
push
mov
xchg
in
test
arpl
push
iret
lret
xchg
ss
mov
lret
int
mov
xchg
cmp
movsl
shll
movsl
gs
aam
inc
movsb
addb
pop
addr16
fwait
mov
xchg
sbb
push
mov
gs
test
push
lahf
lods
sub
jb
and
cmp
lret
imul
jp
mov
enter
sbb
fs
pop
jo
sbb
popf
loop
je
rorl
mov
xchg
push
add
pusha
fwait
inc
xor
adc
mov
adc
lret
or
jge
lds
adc
fildl
adc
pushf
jno
jg
xchg
andl
add
int3
arpl
xchg
inc
rorl
hlt
pusha
dec
and
test
inc
inc
push
pop
inc
mov
jmp
jl
std
pop
add
loope
in
xchg
popf
xchg
pop
lahf
cs
aaa
xor
insl
add
bound
adcl
test
or
pop
or
or
pop
xor
xor
addr16
shl
dec
test
jmp
cmc
inc
pop
mov
jbe
push
dec
mov
outsb
pop
inc
ret
rcl
push
loop
ret
dec
dec
or
add
rcll
adc
cmc
xor
sbb
icebp
xchg
mull
xchg
mov
jne
dec
fs
rorl
hlt
nop
movsl
xor
in
push
rorl
mov
jge
xor
push
lea
aam
rorl
jmp
imul
mov
popf
mov
ret
ret
pushf
int
mov
push
xchg
adc
and
xor
push
pusha
popa
and
lock
lcall
leave
push
inc
xchg
sahf
mov
or
xor
popf
clc
jnp
and
insl
cld
aam
push
gs
fs
adc
insl
xchg
cld
cltd
je
fstp
in
or
dec
xchg
in
in
push
or
xor
and
fcoml
inc
mov
inc
inc
lahf
inc
ret
cmp
popa
inc
mov
arpl
ret
pop
jb
adc
mov
pop
adc
inc
sub
leave
dec
popf
jp
sbb
cmp
lret
ficompl
fs
inc
ret
mov
enter
rcll
and
pop
shl
lahf
inc
xorb
pop
and
dec
inc
jecxz
adc
pop
jg
mov
jae
js
out
mov
dec
inc
mov
xor
insb
jl
xchg
adc
xor
jle
popf
xchg
inc
mov
pop
inc
ljmp
cltd
push
xchg
adcl
sbb
je
jl
bound
adc
pop
mov
arpl
lcall
inc
cmp
inc
arpl
push
sbb
mov
sbb
jle
mov
inc
imul
adc
dec
andb
arpl
push
sahf
lcall
dec
xchg
lahf
pop
xchg
adc
icebp
cmp
aad
jp
or
insl
dec
test
rclb
popf
adc
mov
mov
push
sub
sbbl
and
movsl
xchg
out
xlat
neg
push
mov
rcl
or
push
push
or
psrlw
add
and
pusha
dec
pop
fstl
jl
jecxz
sbbb
adc
xchg
inc
lds
mov
push
insb
imul
mov
insb
andl
xlat
cmpsb
jmp
les
sbb
popf
notl
std
push
cmpsl
or
mov
sbb
push
add
js
add
inc
mov
mov
push
sarl
test
loope
adc
mov
and
add
addl
xchg
test
pop
enter
cmp
inc
test
or
and
push
aam
xor
adcl
inc
in
js
jae
xchg
in
int
add
es
inc
mov
adc
movsl
popf
dec
or
adc
cmp
mov
cld
repnz
sarl
sbb
adc
movsl
push
add
jge
mov
fidivl
sahf
lds
andb
rcrl
test
adc
outsl
inc
test
xchg
cmpsb
cmovle
push
mov
push
lock
subb
sub
mov
pop
clc
pop
mov
hlt
and
dec
int3
negb
in
or
hlt
test
jmp
ss
dec
ret
repnz
ja
bound
in
sbbb
ret
xor
jne
dec
inc
sbb
stc
bound
jp
cmc
push
inc
xor
jbe
mov
ret
stos
test
or
sarl
mov
add
in
mov
pop
test
fcmovb
stos
test
bound
mov
jbe
test
nop
mov
jg
pop
and
xchg
sub
sub
movsb
bound
jp
out
inc
sbb
mov
or
inc
std
ret
xor
out
jp
andl
sarb
ljmp
shll
jp
fsubs
test
cmp
mov
popf
inc
cmc
push
ss
push
inc
sbbw
mov
div
push
sub
into
add
mov
and
sbb
or
test
xchg
xchg
cld
nop
pop
hlt
mov
in
and
xchg
ficoms
iret
and
xchg
mov
push
mov
or
and
aad
inc
xchg
xchg
nop
or
and
jne
pop
rcrb
stos
fiadds
jle
adc
test
bound
jp
cwtl
cmc
inc
or
repz
or
jecxz
push
sti
add
mov
pop
jg
push
fldl
jb
xorb
dec
pop
push
ljmp
inc
mov
or
orl
or
push
arpl
push
xchg
fildl
je
or
inc
and
xchg
push
pusha
xchg
jge
daa
push
adc
push
adc
test
mov
sbb
cli
jp
cmpsb
xchg
inc
jmp
push
inc
sbb
dec
push
push
jg
int
dec
repz
adc
jg
push
xor
fisubs
lds
aam
and
bound
mov
in
add
jp
repz
movsb
nop
mov
jmp
bound
push
adc
inc
orb
mov
add
push
mov
mov
push
lods
and
push
cld
and
sbb
cltd
lds
addb
int3
gs
push
rorb
pop
call
push
jmp
call
mov
aam
lds
rol
xchg
xchg
sub
xor
jge
sti
mov
fnstenv
popa
inc
lods
nop
dec
leave
pop
cmp
popa
addl
lcall
cwtl
sub
push
ss
loope
xor
mov
jbe
pop
test
xchg
rorl
popa
and
push
in
cmp
stc
repz
or
xor
mov
fisubs
jp
or
fcoml
jo
testl
and
les
in
mov
dec
push
mov
push
xchg
enter
push
add
adc
popf
add
je
mov
sub
mov
cmp
fs
pop
addr16
gs
mov
fs
imul
js
mov
testb
mov
sbbb
inc
fiadds
lahf
lea
add
orb
gs
inc
and
stos
xchg
sbb
stc
fimull
lret
gs
lea
inc
push
push
gs
xor
mov
inc
leave
lret
add
jg
push
inc
gs
inc
and
xor
add
lret
inc
test
inc
stos
add
outsl
inc
push
push
and
add
adc
fildl
fmuls
test
add
pop
push
push
and
inc
add
adc
in
cmc
test
jmp
xlat
test
mov
add
fs
inc
dec
and
xor
inc
adc
jecxz
hlt
lds
inc
dec
enter
mov
fsubl
fs
push
jno
dec
outsb
push
xor
insb
pop
jnp
mov
and
or
sub
shl
jg
mov
loop
inc
arpl
add
dec
mov
sar
xor
sbb
push
int
out
inc
inc
sahf
push
inc
cmc
mov
push
inc
and
xor
lahf
mov
fs
shlb
leave
shlb
and
xchg
mov
mov
xchg
or
add
xchg
test
imul
ret
popa
adc
dec
rorb
cmpsb
sbb
roll
repz
mov
lds
xchg
out
test
pushf
aad
add
add
mov
std
add
dec
inc
ret
imul
xchg
add
icebp
cmpsb
dec
arpl
inc
test
jl
xor
inc
xchg
aam
arpl
push
jb
sbb
fiaddl
mov
xchg
push
cld
loopne
add
shlb
adc
sbb
mov
inc
addr16
jl
or
push
xchg
mov
jmp
out
add
cmp
dec
mov
aad
dec
and
mov
jns
pop
push
fiadds
adc
push
sub
gs
mov
add
mov
data16
movsb
push
dec
rol
add
outsl
dec
inc
add
mov
mov
xor
and
add
cmpl
mov
test
jae
jne
mov
lahf
push
cmc
sbb
cld
arpl
inc
push
insb
aad
xor
add
lret
or
add
in
shll
or
bound
mov
jmp
xchg
jbe
cs
imul
or
fs
pop
push
ret
dec
inc
es
pop
jb
cmp
popf
push
cmp
push
add
inc
or
jmp
int
lcall
mov
mov
push
sbb
mov
add
push
aam
in
dec
lret
push
push
add
inc
icebp
pop
pop
and
mov
inc
lods
rcrl
sbb
sub
lahf
stos
jge
orl
inc
fs
add
inc
pop
and
or
arpl
adc
adc
fimull
gs
jne
sbb
inc
cmpsb
xchg
jmp
add
jno
shll
jae
jecxz
test
adc
pop
lock
pop
adc
test
pop
inc
and
mov
inc
div
mov
jge
cmp
in
push
call
jge
cmpsb
aam
es
dec
mov
insb
mov
push
sahf
mov
pop
and
fiaddl
mov
iret
loope
inc
xchg
xor
sbb
mov
jb
int
adc
inc
mov
in
pop
mov
mov
movsl
pop
mov
int
mov
lcall
dec
lahf
inc
lea
inc
add
and
popf
es
mov
inc
leave
and
or
add
shll
rolb
push
mov
int
pop
ljmp
bound
inc
add
bound
jne
sbb
test
nop
test
push
daa
iret
ret
pop
inc
adc
mov
push
std
cs
xchg
loop
dec
cmc
ret
outsl
jbe
test
push
ss
stc
fistps
mov
stos
out
cmp
mov
pop
push
sahf
pop
add
rcrb
jl
shrb
lods
into
call
int
popf
dec
and
or
or
sub
filds
xchg
in
mov
lods
rcll
lret
xchg
sbb
inc
add
xchg
xor
push
lret
lret
sub
sbb
pop
push
push
das
jmp
and
popa
imul
push
enter
fxch
and
or
fstpl
addr16
mov
stos
xor
aam
inc
jmp
push
add
and
dec
test
jg
xchg
and
popf
addl
sub
shlb
leave
lcall
in
and
inc
je
and
add
add
mov
addb
ss
pop
cmp
mov
popa
or
xchg
mov
pop
lds
inc
or
adc
xchg
scas
loope
outsl
addr16
insb
push
pop
pop
sub
mov
shll
mov
repz
push
inc
pop
and
cwtl
sbbb
sub
insl
test
stos
pop
inc
dec
test
mov
xchg
addl
movl
aam
sbb
push
sbb
inc
adc
loop
in
int
daa
adc
loopne
fidivs
xchg
sbb
pop
xor
pusha
hlt
and
dec
popa
outsb
push
add
rorl
dec
movsl
adcb
dec
jbe
mov
outsb
lret
jnp
jno
mov
inc
lcall
popf
mov
pop
test
mov
cwtl
dec
adc
pop
mov
test
call
pop
push
sbb
pop
xor
sbb
sbb
and
or
mov
pop
dec
lea
mov
into
push
aad
ds
int3
dec
enter
scas
xor
push
imul
pop
xchg
inc
int
push
sbb
dec
in
andb
add
scas
push
pop
add
mov
adc
xchg
and
scas
enter
or
push
call
adc
nop
pop
repz
rol
jle
add
nop
fwait
sahf
adcl
aas
or
mov
lcall
fbstp
test
mov
jp
call
inc
pop
add
fstps
je
test
dec
pop
fs
pop
push
int3
frstor
je
test
dec
dec
inc
and
fidivs
inc
outsl
bound
nop
push
inc
push
add
add
and
inc
rolb
dec
inc
inc
add
inc
add
adc
xchg
pop
xchg
ss
sti
xchg
xor
pusha
mov
inc
in
jnp
pop
gs
sahf
push
imul
jne
ffree
popw
xor
in
sarb
rol
mov
jae
lock
push
push
popf
sti
lcall
test
lea
cmpsb
test
mov
gs
lea
rolb
mov
add
inc
incl
outsl
fisubs
loope
data16
push
es
and
xchg
mov
xchg
gs
jne
inc
push
leave
jns
xchg
aam
and
mov
shl
and
sar
mull
movb
and
cmpsb
jne
or
jne
mov
and
pop
test
clc
cmp
push
or
and
shrb
hlt
xor
popf
inc
jmp
out
leave
mov
ds
rcr
jno
mov
daa
movb
xchg
lcall
push
xor
push
mov
lahf
movsl
popf
push
pop
jmp
push
or
push
or
cmpsb
test
dec
or
and
push
pop
sbb
sbb
mov
cmc
ficomps
popa
into
fcompl
sbb
cmpsb
mov
shll
xchg
cmc
ljmpw
push
dec
jmp
aad
mov
dec
cmp
jg
inc
jmp
mov
dec
jge
mov
mov
cmp
adc
mov
popf
cmp
inc
inc
and
bound
mov
daa
in
sub
inc
mov
push
xor
pop
inc
push
sbb
or
pop
je
push
pop
lds
out
clc
xor
mov
mov
sbb
mov
shll
mov
test
add
mov
out
and
and
in
pusha
test
movsb
repz
repnz
or
fwait
xor
test
or
sub
std
jp
repnz
je
ret
mov
cmp
inc
and
test
fstpl
lea
inc
mov
dec
in
jp
inc
add
pop
rorl
sbb
addb
rorb
imul
xchg
fwait
rep
adc
inc
xor
sti
sub
or
xor
test
mov
ffreep
sbb
pushl
or
jb
add
mov
pusha
icebp
call
add
xor
test
test
sbb
dec
push
cld
fwait
xchg
subb
xchg
push
int
hlt
xor
rolb
fs
test
jmp
out
fwait
loop
jge
out
fwait
test
cli
fstpl
xchg
push
andl
into
inc
movsl
pushf
xchg
lret
subb
aam
inc
adc
adc
xor
jne
mov
cld
subl
adc
xchg
aas
dec
mov
insb
xor
cmpl
incl
sbb
lcall
sub
and
repnz
bound
pop
ss
popf
sbb
psubsb
inc
or
xor
out
xchg
add
bound
inc
push
fucomp
into
cmp
aad
xor
inc
and
mov
mov
push
test
mov
cmc
push
sbb
adcb
or
out
push
jae
add
or
mov
in
neg
jl
in
pop
xsha256
cmpsb
xchg
lds
push
inc
inc
add
into
cmc
dec
mov
and
jbe
xor
cmp
and
push
sbb
inc
add
subl
into
movsl
hlt
lods
jge
mov
addb
adc
pop
inc
data16
bound
mov
inc
adc
cmc
fwait
rorb
push
jl
pushf
cmpsl
inc
xor
xchg
mov
outsb
inc
add
test
cld
pop
mov
imul
cmpl
jl
xchg
test
rclb
lret
lods
loopne
sub
inc
jbe
sbb
adc
xchg
sub
inc
mov
push
lahf
data16
sbb
jge
loopne
sub
test
add
frstor
mov
jae
dec
repnz
lahf
and
das
add
lcall
jge
cmc
push
in
rorl
lahf
or
and
scas
aam
idivb
ds
push
and
icebp
sub
pop
push
mov
cmpsw
test
icebp
xchg
mov
inc
mov
mov
add
inc
add
adc
in
je
mov
sar
push
mov
push
inc
add
mov
stc
lds
push
sub
popa
and
add
gs
std
xchg
or
add
or
push
cltd
loop
mov
cli
cltd
test
mov
add
cmc
sbb
mov
adc
in
test
mov
push
in
fwait
pop
push
pushf
sub
shrb
adc
xchg
push
sbb
push
enter
sbbl
in
in
or
sbb
sbb
cmp
arpl
imul
mov
inc
or
in
mov
mov
fs
pop
in
insb
cmc
fidivs
mov
and
pusha
push
mov
movsb
mov
shll
faddl
gs
sbb
add
mov
lods
test
sti
mov
jle
mov
scas
dec
sbb
adc
inc
mov
or
aam
aam
insl
mov
in
cli
out
mov
gs
popf
pop
aad
scas
popf
int3
cmpsb
push
adc
inc
fstpt
call
test
push
insb
push
ljmp
jg
insb
inc
push
idivb
dec
sbb
mov
inc
dec
test
xchg
push
test
fdivrs
jmp
inc
sbb
push
jge
pop
imul
lds
dec
loop
popa
mov
xchg
jno
loop
mov
mov
rol
dec
mov
fwait
popa
xchg
xor
add
int3
sub
stc
pop
std
test
shrb
iret
mov
loop
lahf
jne
mov
push
sbb
push
cmpsb
mov
sbb
ret
cs
push
fucomp
xchg
mov
push
aad
ss
xchg
inc
aas
push
pop
imul
loopne
cmp
repnz
add
lahf
sub
mov
xchg
jbe
loope
jp
mov
inc
jle
and
test
push
push
int
lcall
mov
jne
mov
repnz
ret
push
push
inc
jp
arpl
pop
sub
sub
and
nop
cmp
mov
jp
dec
test
inc
push
inc
dec
mov
mov
repnz
mov
or
inc
mov
mov
lds
jb
pop
inc
xchg
sbb
pop
and
mov
cltd
pop
jbe
add
ret
adc
neg
clc
push
in
mov
aaa
bound
jno
test
mov
hlt
jo
mov
push
outsb
pop
dec
andb
ret
xorb
lret
out
push
and
cmp
inc
xor
bound
pop
clc
jp
andl
or
push
xchg
jae
mov
push
orl
fisttps
pop
test
sub
add
testl
in
add
cmp
and
in
inc
ret
xor
cmp
in
les
sbb
sahf
lds
mov
pop
inc
popf
xchg
lods
in
adc
sbb
js
andb
add
fwait
push
jb
fs
fstpl
xchg
inc
lock
mov
xchg
jmp
rorb
and
lcall
push
pop
clc
dec
push
leave
cmc
dec
out
roll
and
push
push
xor
ret
xchg
lods
outsb
sbb
adc
mov
rolb
cmc
loop
pop
sbb
insb
mov
rcrl
addl
es
jbe
popa
mov
out
loop
mov
adc
lds
jecxz
mov
xchg
jne
add
mov
mov
pushl
hlt
hlt
sbbl
ret
add
in
ss
testl
loop
xchg
cmpsl
ljmp
popa
mov
mov
out
aaa
push
in
stc
xor
test
les
xchg
add
lcall
inc
adc
xor
ret
mov
adc
adc
insl
ret
and
jne
idivb
add
loopne
or
mov
movsl
xchg
std
push
jecxz
dec
mov
test
scas
and
inc
push
test
test
andl
movsl
cld
mov
cmpsb
inc
repnz
inc
loop
add
inc
lock
push
ret
lahf
fists
or
inc
imul
or
adc
in
jge
je
rorl
inc
repz
mov
inc
les
lahf
cmp
xchg
xchg
or
pushf
and
adc
add
out
ja
jge
aaa
cld
push
nop
mov
adc
push
imul
pop
push
pop
fwait
nop
inc
aad
inc
jno
sti
xor
mov
test
rol
xchg
aam
loop
fdivl
sub
xlat
mov
mov
inc
mov
inc
and
ds
xor
push
inc
es
repnz
xchg
inc
push
loope
or
pop
js
xchg
xor
mov
loop
nop
push
mov
sbb
mov
dec
adc
dec
adcl
pop
sub
add
xchg
add
push
mov
mov
cmp
sbbb
adc
push
xchg
adcb
popf
bound
inc
je
andl
add
fistps
insb
lahf
jns
or
dec
clc
ficomps
mov
negb
push
pop
and
loopne
popf
pop
out
mov
and
and
pop
jmp
add
lcall
ficoml
xchg
inc
cltd
imul
push
jo
push
lds
pushf
lds
std
sub
aad
mov
and
pushw
push
jge
fnstcw
rolb
mov
sahf
cltd
xorl
pop
movsb
or
movsb
pop
xchg
lret
rcll
aaa
sub
or
orb
fld
jbe
add
fidivrs
icebp
and
repz
rclb
pop
push
mov
jb
lds
and
pop
fdivs
repz
shrb
mov
jae
cmpsb
int
push
add
sub
inc
ret
sub
xchg
test
call
lcall
test
inc
jmp
inc
movsb
mov
inc
icebp
int
setnp
cmp
data16
cmpl
inc
xor
movsb
pushf
in
movsl
daa
jecxz
and
push
push
push
ficoml
cltd
mov
jmp
sub
mov
popf
xor
push
or
fstl
sub
data16
and
inc
stc
xchg
fwait
xchg
loop
cs
in
mov
rorl
add
xchg
pop
mov
sarl
push
push
addl
lcall
in
adc
push
nop
cmp
mov
jmp
rolb
dec
mov
out
jbe
push
push
jno
jae
sti
mov
int
cmp
push
push
ficoms
fists
xchg
clc
jecxz
in
and
and
or
lcall
sub
or
test
sub
in
test
push
ret
roll
mov
out
or
lds
filds
add
ret
jle
jl
aaa
jg
push
or
cli
or
ja
mov
mov
lock
in
leave
mov
add
dec
mov
rdtsc
subb
xchg
jge
inc
pop
rcll
mov
cmp
inc
out
and
xor
inc
add
and
scas
push
pop
mov
popa
roll
in
add
jl
jne
cmp
inc
sub
daa
mov
shld
cld
in
lds
xchg
mov
cli
cs
outsb
mov
mov
xchg
test
or
xchg
call
jp
and
mov
lods
loope
lea
push
sbb
push
mov
push
pop
ds
leave
repnz
pushf
adc
ja
pop
sbb
add
push
gs
outsl
xor
xchg
mov
inc
loopw
mov
add
dec
sub
push
or
adc
jae
jmp
outsb
push
mov
popa
mov
adc
mov
int
addl
mov
insb
shll
out
loop
enter
insb
xor
cmp
inc
mov
dec
inc
add
stos
add
cmpsb
lret
push
daa
in
test
adc
clc
mov
jecxz
pop
andb
pop
push
adc
cmpsb
xchg
rorb
pop
cmc
push
lds
icebp
and
test
js
mulb
ficoms
xchg
inc
jle
or
popf
and
fistps
jne
les
dec
mov
push
orb
push
push
jae
andb
enter
xor
ja
jle
mov
adc
mov
sbb
movsl
sbb
pop
jmp
mov
addb
into
pop
lock
cwtl
in
sbb
nop
fs
push
xlat
movl
inc
adc
add
mov
and
inc
add
sbb
cld
jle
repnz
pop
les
popf
mov
inc
fs
dec
cmp
cmp
loopne
jbe
xchg
nop
jmp
sub
push
mov
js
mov
aad
add
cmc
jnp
test
int
xor
cwtl
xchg
inc
ss
add
push
les
push
in
jae
inc
adc
jo
dec
or
popa
pop
pop
mov
xor
xchg
or
fs
push
aad
dec
dec
and
test
push
sbb
ret
mov
and
inc
add
enter
jnp
and
test
int3
or
sub
dec
jne
stc
pusha
push
xor
push
das
movsl
in
pop
lock
jae
into
fwait
lods
inc
mov
repnz
ja,pt
jecxz
add
ss
sbb
xor
pop
mov
inc
jns
test
xchg
cli
cmpsl
push
stos
xchg
push
and
lea
stos
incb
out
inc
xchg
sbb
push
in
les
bound
adc
int
je
xchg
adc
cli
inc
and
in
xorl
mov
sbb
jle
call
outsl
sbb
in
pop
dec
addr16
adc
repnz
popf
mov
les
dec
add
clc
std
mov
dec
cmpsb
aas
xor
pop
push
xchg
outsb
cmpsb
dec
mov
mov
add
push
inc
mov
cs
push
jb
pusha
adc
shlb
popa
repz
cmp
dec
inc
push
std
test
or
push
jb
push
jno
add
imul
je
xor
pop
xchg
xchg
adc
add
push
dec
sahf
push
div
push
jg
mov
inc
push
jmp
xlat
add
and
inc
push
adc
xchg
push
or
aaa
adcb
xor
popaw
test
cmpsb
inc
sti
pop
push
es
or
in
cmp
sub
popl
adc
push
leave
xchg
test
and
imul
xor
into
add
sub
mov
bound
lea
mov
stos
test
jno
lahf
es
mov
or
add
test
ss
pop
mov
fldl
rcrb
mov
sbb
xor
adc
lock
stos
pop
cmp
sar
xor
data16
xlat
adc
insb
shll
movsb
scas
xor
insb
sahf
stc
cld
pusha
add
fisubs
xchg
push
pop
push
aam
bound
test
fistps
and
jecxz
sbb
xchg
aam
push
push
inc
pusha
push
addb
fs
popf
outsb
cmp
mov
inc
push
int
cmp
pop
pushf
test
rol
fcomi
push
mov
insl
xchg
add
mov
clc
inc
aam
add
add
iret
jae
inc
ficomps
mov
push
aas
push
xor
xor
add
enter
out
movsl
mov
xchg
pop
jp
adc
lcall
sbb
jb
pop
outsb
rol
xchg
inc
or
inc
xchg
add
shrb
xor
leave
loopne
in
loope
cmc
jle
lret
shlb
sub
and
out
xchg
out
dec
popl
adc
ret
inc
das
dec
inc
or
ss
int
repz
and
xchg
push
inc
rcrb
push
pop
cmp
cmp
sbb
sbb
pop
xchg
shll
adc
ret
insb
sbb
dec
loope
sub
mov
popa
add
sbb
push
pushf
fldcw
adcb
add
and
inc
repnz
jo
cmc
push
xor
mov
adc
sbbl
cmp
aad
jg
sbb
ret
mov
mov
cs
pushf
push
sbb
loopne
and
xchg
and
inc
movsl
inc
xchg
lcall
adcl
imul
add
in
cmp
and
add
or
xor
add
int
ret
push
add
fdivp
add
sbb
push
mov
push
jbe
mov
test
bound
add
sub
add
add
cli
fmull
push
jecxz
mov
mov
adc
push
sbb
and
bnd
addb
aaa
data16
xchg
pop
incb
lret
call
stc
jae
jb
sarl
arpl
data16
mov
jp
adc
inc
outsb
and
mulb
rolb
test
lcall
jno
stos
mov
outsb
loope
jbe
aad
push
push
pop
jge
or
testl
orl
push
dec
xchg
nop
mov
lock
sub
imul
push
mov
arpl
fwait
inc
mul
xchg
inc
repnz
dec
ss
cmc
dec
ja
and
test
jp
jbe
aaa
sub
mov
outsb
mov
push
aas
cmp
lcall
ffree
dec
adc
jge
and
push
test
scas
pop
lock
mov
aad
or
insl
fmuls
push
jecxz
push
inc
inc
cltd
and
jbe
mov
mov
es
hlt
repz
rol
mov
cmpsl
popa
int
insl
sarl
cltd
mov
test
fsubrl
lods
push
lods
pop
lods
mov
xor
in
jmp
and
mov
add
xor
mov
pop
stc
test
mov
jl
pop
movsl
in
mov
aad
outsb
cwtl
xchg
int
xchg
mov
mov
cmpsl
movsb
sub
and
adc
lds
jb
sbb
jle
imul
icebp
ljmp
mov
mov
and
jp
and
adc
jmp
mov
dec
sbbb
addr16
pop
mov
addr16
jbe
dec
push
sbb
sahf
jbe
out
and
out
int
scas
les
jo
inc
not
lahf
jecxz
test
xlat
xchg
movsb
pop
dec
mov
in
sbb
stc
ss
cmpsb
cmc
cmp
pusha
mov
jl
push
inc
or
push
lret
lcall
sbb
jne
dec
bound
les
loope
push
mov
push
add
xchg
or
lds
adc
sbb
inc
jmp
movsb
add
mov
jns
cmpsb
mov
rcr
mov
jbe
rolb
out
xor
and
mov
pop
in
mov
test
mov
int
in
fs
mov
movsl
and
add
jne
mov
and
inc
push
push
adcb
push
add
sbb
fcmovu
mov
xchg
mov
ljmp
cltd
les
push
test
jp
lcall
mov
sbb
jns,pn
jp
fldt
xor
push
rcr
mov
xchg
fnsave
test
idivb
push
mov
sbb
xchg
and
es
and
xor
inc
cmp
outsb
add
xor
aas
push
pop
orl
xchg
adc
je
push
inc
ret
aas
lea
add
xchg
fcom
mov
push
inc
gs
in
add
add
bound
sub
inc
loop
mov
jns
out
hlt
movb
and
lock
lret
inc
loope
fnstenv
mov
bnd
add
or
in
in
cmp
push
sbb
rol
push
popa
movsb
subb
sbb
subb
f2xm1
mov
mov
adc
xor
mov
pop
stos
adc
out
arpl
xor
push
bnd
jo
push
into
add
push
in
mov
cmp
call
mov
pushf
inc
mov
jle
or
mov
xchg
mov
inc
push
cmp
es
push
ds
pop
testb
adc
insl
inc
adc
mov
dec
xchg
sbb
movsl
inc
adc
int
xchg
push
cmp
xorl
sbb
mov
inc
in
inc
mov
push
mov
inc
inc
inc
add
add
inc
pop
out
or
vpavgb
loopne
loop
lret
dec
jbe
inc
in
int
push
rcll
push
gs
mov
lret
test
stos
add
xor
pop
negb
test
popf
std
data16
sub
add
in
fldenv
and
pop
xchg
in
add
rorl
out
push
hlt
sub
les
ret
jle
push
inc
add
ret
dec
outsb
add
pop
mov
icebp
rcr
mov
adc
dec
mov
stos
int
arpl
test
jns
lret
test
xor
fsubrs
or
add
loop
adc
imul
popf
or
out
loope
or
ljmp
aad
icebp
xor
xlat
ljmp
mov
inc
mov
mov
pop
jne
cli
loope
add
xlat
jae
push
lds
dec
test
xchg
fs
ljmp
mov
cmp
jecxz
add
and
and
adc
pop
lods
andl
shll
adc
push
inc
and
shlb
mov
mov
add
xchg
imul
pop
push
add
add
sbb
xor
cmp
jb,pt
aas
cs
int
push
ret
xor
jne
andb
add
push
inc
les
xchg
xchg
ret
dec
and
xor
push
sbb
pop
test
roll
cmp
loop
cld
inc
popa
test
sbb
lds
sub
test
add
iret
inc
pop
sti
fstpl
adc
pusha
lds
cmp
fmul
rol
jmp
inc
lds
mov
out
add
pop
push
push
jmp
sti
sub
gs
loope
sbb
dec
pop
xor
push
test
mov
add
rcr
fildl
inc
and
push
enter
sub
mov
pushf
sbb
jo
mov
ret
sbb
rcrl
dec
lods
dec
adc
adc
arpl
jp
and
push
dec
dec
adc
mov
xchg
push
loop
push
ja
and
mov
mov
and
add
fs
and
mov
pop
out
push
sbb
cmp
vpsubsb
dec
mov
test
les
lods
int3
push
dec
sbb
fdivrl
lds
push
hlt
hlt
dec
mov
movsb
sub
aad
lret
dec
adc
dec
xchg
push
lock
addl
and
lahf
out
add
add
test
mov
aaa
add
mov
mov
lods
mov
pusha
sbb
adcl
add
cltd
repnz
imul
add
and
add
inc
xor
hlt
dec
les
ret
repz
jmp
out
xor
dec
jb
sarl
push
add
jecxz
rol
pop
mov
lds
movsl
add
add
inc
movsl
inc
test
orl
movsl
adc
les
ds
push
add
fs
jecxz
mov
mov
cld
push
add
add
xchg
adc
jp
test
js
mov
and
loope
adc
roll
call
xor
mov
bnd
pop
movsb
pop
es
inc
xchg
jle
lcall
imul
pop
mov
ret
inc
inc
pop
inc
test
inc
mov
adc
add
add
popa
add
test
ljmp
sbb
cwtl
sub
shrl
in
out
fwait
mov
cmp
rcrl
ret
xchg
divb
xchg
cmp
bound
pop
aaa
insb
call
or
pop
dec
nop
in
mov
outsb
test
inc
pop
lea
outsb
loopne
mov
mulb
not
outsb
jnp
aaa
test
outsl
pop
xchg
ja
cmpsb
gs
or
retw
adc
fadd
in
inc
push
mov
pop
daa
and
addl
jecxz
inc
rorb
push
dec
andl
mov
pop
les
adcl
ret
and
push
xor
test
adc
aam
in
cmpb
sbb
mov
repnz
mov
js
xchg
test
push
subl
mov
ss
lcall
mov
les
outsb
leave
push
add
pop
and
dec
inc
movsb
ret
outsb
lods
jmp
mov
xchg
repz
std
jne
jecxz
dec
dec
scas
cmp
pop
roll
std
push
adc
jae
fs
pop
mov
test
or
popa
bound
cmp
popa
js
out
ja
jne
inc
pop
mov
maskmovq
notl
enter
pop
test
jge
popa
inc
jb
insl
inc
inc
pop
xchg
jle
push
ret
call
test
sbb
inc
inc
in
pop
pop
xor
push
dec
push
sbb
outsb
inc
rolb
mov
push
or
add
imul
adc
xchg
pop
inc
jne
outsb
mov
xchg
pop
les
in
insl
inc
dec
imul
iret
push
or
adc
in
ret
in
pop
or
sarb
jb
aas
or
and
pop
mov
lods
lds
or
and
jb
movb
sbb
test
out
xchg
inc
fldenv
inc
pushf
push
popf
and
test
in
ret
test
dec
sub
xlat
fisubl
je
mov
jl
xchg
xor
fs
sbb
les
popa
inc
xchg
mov
mov
lds
xor
cld
mov
add
enter
nop
or
ret
fildll
cmp
push
xchg
inc
inc
shrl
leave
push
rcrb
and
push
movsb
movsb
add
lods
pop
into
pop
jb
test
inc
dec
mov
mov
stc
cwtl
mov
xchg
test
leave
pop
fnstenv
and
stos
sbb
lcall
add
mov
leave
popf
mov
jo
sti
xor
jb
jl
add
lea
add
mov
fsubr
mov
and
push
push
outsl
push
decl
icebp
stos
sti
push
cmp
addb
in
in
mov
pop
movsl
inc
or
lret
js
nop
iret
sbb
lret
jmp
mov
out
dec
aam
in
xchg
and
repnz
mov
push
repz
stc
jp
mov
xchg
repz
leave
leave
pop
push
jecxz
mov
dec
xor
inc
test
mov
ror
push
and
and
ret
push
mov
mov
xchg
enter
orw
and
sub
push
loope
mov
call
inc
mov
dec
mov
or
push
pop
mov
or
push
xchg
adc
xor
or
push
mov
jnp
cmpsl
dec
imul
cmp
push
addb
pop
dec
and
jne
xor
dec
test
test
fiaddl
bound
inc
bound
add
fsubr
lcall
inc
mov
inc
push
cmp
int
out
xchg
sbb
mov
sub
in
ljmp
test
cmp
add
ret
mov
push
test
les
add
jnp
or
fstpt
cwtl
pop
adc
and
add
add
lods
dec
inc
arpl
push
xchg
add
inc
repz
test
xchg
fstpt
cmp
jne
je
inc
test
jae
in
ss
pop
je
idiv
in
fmuls
adc
jns
cmpsl
or
lds
std
inc
push
andl
orl
bound
add
insl
sbb
dec
pushf
repz
popf
pop
lret
int3
mov
lret
std
push
add
mov
xor
or
dec
push
mov
xchg
pop
aam
push
push
in
mov
and
insb
jge
dec
imul
stos
pushf
shlb
jmp
aad
test
adc
xor
xor
push
push
xorl
insb
test
xchg
ror
into
dec
dec
cli
inc
rorb
das
popl
mov
cmp
pop
cmpb
lods
movsl
scas
xor
push
mov
ret
push
fs
push
enter
and
push
cwtl
dec
jo
aaa
clc
mov
outsl
pop
repnz
aam
adc
jge
pop
mov
addb
lcall
mov
mov
ret
sbb
hlt
dec
or
jl
pop
sarl
mov
dec
sahf
pusha
stos
loope
loop
mov
jp
cmc
fs
ret
rolb
adc
jge
inc
fs
lret
lcall
jno
xchg
in
push
jmp
xor
sarl
push
push
pop
gs
int
push
pop
adc
and
push
adc
scas
inc
inc
test
mov
fs
fimull
lcall
xchg
or
xchg
mov
fcmovne
mov
or
xor
aas
inc
push
xor
fdivs
pop
lcall
subb
invd
pop
mov
adc
cmp
push
test
push
or
fs
xchg
or
dec
sti
leave
mov
pop
in
out
lds
dec
leave
outsb
subl
sub
fidivs
lds
xchg
adc
and
call
ret
push
xchg
inc
test
test
cli
push
mov
cmpsb
jne
je
ja
mov
xor
push
inc
push
push
addb
pop
xchg
int
scas
sub
sahf
push
mov
or
adc
call
add
scas
lcall
mov
cmpl
movsl
addb
inc
xor
pop
inc
mov
push
and
and
lds
xor
inc
push
jle
addb
cmc
push
jle
ret
gs
xor
sbb
adc
subl
movsl
cwtl
cli
lea
add
sti
dec
insb
mov
dec
scas
sbb
lock
adc
pop
push
je
and
ss
add
repnz
fbstp
insb
adc
divps
jne
shr
popf
mov
sub
xor
or
cmpsl
in
jb
mov
sbb
les
adcb
hlt
push
and
xchg
mov
sub
fs
mov
int3
xchg
scas
shl
test
insb
cld
popa
sbb
inc
xor
les
mov
adc
or
inc
jbe
sbb
jns
sbb
mov
adc
icebp
das
jle
push
dec
mov
mov
mov
lods
movsb
dec
sbb
cld
test
bound
int
inc
out
inc
insb
xor
sub
push
mov
mov
jo
imul
xor
add
sbb
add
mov
mov
adc
push
inc
je
sbb
inc
jb
and
rcrb
xchg
insl
xchg
icebp
push
add
subb
push
push
sbb
lds
mov
pop
es
inc
and
jmp
scas
cmpsl
mov
into
sbb
mov
inc
icebp
push
xchg
dec
add
dec
adc
push
or
xor
lret
xchg
cwtl
cmpl
imul
xchg
lds
jl
adc
mov
daa
arpl
xor
jae
in
dec
jmp
push
notb
into
jno
cmpsb
xchg
test
test
push
fdivrs
lret
out
add
cmp
pusha
add
xchg
inc
add
fbld
xchg
inc
lock
pop
repz
xchg
xor
inc
sbb
lea
lcall
rcrl
sbb
lea
jl
popf
sbb
rcrl
inc
adc
cmp
jo
test
dec
ljmp
divl
sbb
xor
xor
jge
push
push
push
pop
jae
pop
rorl
or
andl
dec
stc
cwtl
rorl
loopne
mov
push
mov
repz
rcrl
jne
pop
dec
pop
pusha
sahf
dec
aam
add
push
or
pop
iret
dec
sub
int3
insl
loopne
dec
pop
dec
add
or
add
mov
imul
icebp
xchg
pop
adc
inc
shrl
add
incl
push
jp
daa
out
mov
into
loope
out
aad
sub
cmp
adc
rcrb
and
add
cwtl
sub
push
mov
out
sub
sarb
add
mov
inc
and
xorl
add
incl
xorb
rorb
cmp
xchg
adc
in
xchg
mov
mov
xchg
mov
dec
data16
pusha
hlt
inc
int3
xor
sub
insl
push
xchg
stos
push
call
mov
and
xchg
into
adc
out
test
loop
jns
pop
les
cmp
into
xchg
push
dec
mov
data16
insb
sbb
inc
push
movsl
mov
xchg
pop
aaa
ds
in
push
add
into
es
jg
push
mov
mov
sbb
adc
jecxz
je
sub
ret
leave
test
call
je
and
ljmp
pop
in
ss
push
scas
pop
jecxz
test
adc
loope
push
push
inc
icebp
push
push
cmp
in
rclb
lods
inc
push
dec
movsb
xlat
mov
test
addr16
push
leave
pop
dec
mov
lahf
clc
outsb
dec
pop
mov
ja
loope
mov
jbe
scas
lock
sbb
sub
push
xchg
inc
outsl
jns
xor
jne
insl
insl
mov
inc
pop
adc
clc
das
test
std
inc
push
mov
das
aad
adc
cmc
jne
add
cwtl
lahf
hlt
pop
adc
shrb
imul
add
push
push
loope
sbb
es
stc
enter
xor
aam
nop
mov
test
sbb
push
inc
pop
out
and
lds
xor
jmp
inc
bound
je
add
inc
lds
call
sbb
add
fldt
frstor
sub
dec
push
push
xchg
push
inc
mov
jge
arpl
stc
jp
leave
aad
dec
push
fsts
lea
mov
je
mov
pop
repnz
lock
inc
sbb
nop
jno
or
int3
and
repnz
rcll
mov
pop
movsl
lret
popf
inc
movsl
mov
inc
lea
aad
dec
ret
dec
idivl
xchg
and
mov
stc
inc
dec
fidivrs
bound
dec
fnstcw
or
in
dec
or
data16
jmp
into
dec
adc
xchg
pop
add
pop
notb
icebp
jae
stos
lds
push
pop
adc
jbe
push
pusha
iret
loopne
fsubs
and
jmp
cltd
aad
inc
xor
inc
lock
cltd
sbb
mov
push
outsb
xchg
or
lods
les
cmpsl
xor
inc
add
add
gs
arpl
add
lea
repnz
push
divl
mov
mov
fs
pusha
pop
mov
push
sub
cltd
mov
daa
xchg
int3
icebp
push
sbbl
xchg
int
or
push
inc
iret
sbb
xorb
out
clc
lea
sub
pop
dec
jmp
cmpsl
jge
pop
orb
xchg
in
ret
fbld
out
clc
lcall
stc
mov
pusha
mov
arpl
sub
push
in
ljmp
and
fwait
stc
sbb
dec
mov
jmp
cmp
mov
push
icebp
lds
add
xchg
mov
ss
int
cmpsl
and
leave
adc
stos
dec
inc
lock
fsubrs
jb
dec
loop
push
rorl
shrb
popa
xchg
xor
fsubr
adc
cld
cmpsb
add
scas
mov
and
xor
mov
push
sbb
push
sbb
in
pop
dec
loope
ljmp
or
push
into
popa
idivl
xchg
sti
je
cld
insl
or
add
jb
push
icebp
orl
and
into
ret
dec
push
push
ret
popl
in
adc
inc
or
insl
mov
adc
fsubl
push
gs
in
pop
loope
mov
sub
pushf
or
or
ret
adc
xchg
loop
andb
jbe
mov
ret
and
cltd
test
push
add
lods
les
std
add
jmp
and
xor
xor
popa
ljmp
jp
fsts
mov
add
adc
outsl
std
jp
pop
and
call
sbb
and
setbe
or
xor
mov
addl
jmp
xor
popf
xchg
fs
sbb
dec
mov
popa
sbb
cli
into
xor
imul
adc
ret
sbb
fmull
rolb
fwait
inc
test
jno
sbb
pop
mov
mov
test
adc
push
stos
xchg
enter
inc
lds
stc
mov
push
mov
cmp
add
pop
mov
fisubl
jbe
test
hlt
jb
pop
sbbb
add
lods
imul
ret
adc
iret
inc
mov
jmp
dec
sbb
into
stos
adc
arpl
fstps
aaa
scas
mov
cmpsl
dec
int3
pop
nop
inc
or
mov
scas
mov
addr16
jns
push
js
dec
add
sub
fsubs
mov
sub
loop
lods
insl
sbb
push
subl
mov
insb
mov
daa
sub
sub
lods
mov
add
mov
std
mov
sub
out
sub
pusha
pop
inc
dec
xor
xor
sbb
andl
sub
lods
add
call
mov
mov
std
adc
xchg
jb
xor
xchg
inc
inc
ret
out
lods
mov
mov
rol
push
lods
jno
movsb
adc
adc
jne
ret
shll
and
and
pop
mov
shrb
push
adc
sub
mov
movsb
rcll
roll
ljmp
pop
imull
stc
jne
and
outsb
aaa
int3
rolb
dec
loopne
push
loopne
loopne
outsl
push
inc
fdivrs
fsubr
push
mov
dec
jmp
jo
mov
xor
sti
mov
mov
in
decl
pop
test
popa
adc
jno
cmp
push
insb
pop
xchg
push
inc
dec
mull
imul
aas
movsbl
pop
es
jae
inc
add
push
adc
jp
ret
js
adc
add
xchg
inc
add
inc
inc
sti
pop
inc
lock
js
test
inc
push
or
xchg
xor
icebp
rolb
cmp
inc
inc
sbb
xchg
loopne
bound
fisttpll
mov
adc
adc
push
jge
adc
or
jae
jnp
mov
je
rorl
or
shll
sbb
inc
xor
push
movl
stc
xor
adc
outsl
leave
lods
lret
dec
add
repz
test
add
inc
ds
ret
fs
cmp
jecxz
jge
jl
pop
mov
or
push
adc
rolb
aas
xchg
aas
adc
je
mov
cmp
xchg
fwait
cltd
mov
icebp
xor
cmc
dec
sbb
mov
outsb
pop
ss
jge,pn
dec
adc
push
xchg
lea
or
setp
ficoml
mov
push
xchg
or
adc
xchg
or
outsl
syscall
adc
xchg
aaa
and
divl
adc
int
fwait
andl
aaa
pop
es
or
xchg
push
and
jmp
popa
jb
mov
cmp
ret
inc
ljmp
scas
clc
xor
mov
in
sbb
jnp
cmp
push
cmc
mov
popa
orl
xchg
mov
or
xchg
scas
shrb
movsb
adc
pop
inc
xchg
je
lea
out
mov
push
push
inc
push
lds
gs
fdivrp
mov
cwtl
jmp
int
inc
push
dec
inc
and
mov
cltd
lods
mov
les
mov
lods
fwait
mov
mov
push
mov
adc
adc
add
dec
add
pop
push
inc
pop
jg
adc
lea
test
sub
mov
push
push
fstpl
popf
inc
pop
gs
cwtl
je
test
jp
rcrb
fwait
mov
cmpsl
pop
int
fldl
pop
sub
sub
cltd
orb
inc
push
pop
test
daa
xchg
or
xlat
mov
lds
cs
frstor
inc
cmp
mov
jae
cld
daa
dec
ficoms
fadds
adc
add
xchg
mov
cmp
or
inc
clc
and
test
add
out
xchg
fldenv
push
rcrl
jns
js
jb
aad
and
or
sarb
inc
xlat
jg
pop
lds
sbb
and
test
pop
sbb
pushf
push
push
pop
mov
mov
adc
push
movsb
imul
xchg
push
push
inc
xlat
and
mov
mul
stos
in
lods
push
push
sbb
fisttps
inc
dec
push
jle
jecxz,pt
and
test
popf
inc
pop
les
add
aam
aam
inc
ja
and
add
cltd
jl
sahf
sub
add
cmc
jns
lods
dec
ror
mov
das
call
in
test
inc
push
dec
aaa
adc
add
movsb
jp
mov
mov
adc
fwait
push
lods
stc
stos
aas
call
jl
inc
pop
and
xor
aam
and
adc
adc
and
inc
jne
sbb
adc
fs
and
inc
gs
mov
mov
inc
and
int
lret
dec
aam
pop
and
sbb
or
mov
and
into
push
xchg
add
adc
pop
add
mov
mov
and
dec
jmp
gs
insl
push
xchg
cmc
lcall
dec
rol
push
ja
pop
and
popf
and
lock
lahf
test
sbb
test
sarl
gs
in
lock
addr16
sbb
ret
int3
inc
mul
mov
aam
test
fcmovb
cmp
sbb
popa
inc
bnd
rcr
mov
call
sarl
popa
movsb
shrb
aas
fiaddl
push
xor
push
sub
scas
ret
in
cmc
outsb
push
test
aas
mull
sbb
xchg
aad
cmp
inc
adc
scas
mov
xchg
xchg
test
rclb
test
adc
adc
mov
push
xchg
lods
sbb
pop
xchg
gs
mov
cwtl
pop
int
pop
jne
push
push
pop
or
dec
and
inc
int
aas
or
inc
push
jno
rorb
jbe
mov
pop
mov
push
loopne
and
cmp
add
mov
mov
ss
sbb
in
cmc
push
pushf
lret
das
test
testb
les
pusha
sbb
sahf
adc
xchg
pop
rolb
lret
pushf
nop
gs
cmpsl
bound
cs
andb
and
push
push
inc
mov
out
or
mov
cmc
imul
sbb
data16
aaa
cld
xorl
loop
or
fucomip
es
or
rolb
sbb
in
aad
jmp
fnstenv
lods
push
mov
sub
jo
mov
jo
in
inc
les
or
push
loope
dec
dec
add
sbb
sub
pop
pusha
jmp
sub
ficoml
cmpsb
aad
jbe
xchg
adc
bound
movl
and
mov
insb
sbb
add
jge
jl
xchg
ss
push
cmc
aas
push
divl
and
pusha
dec
sub
xor
mov
xchg
sub
out
xchg
dec
in
sub
pop
pusha
sbb
repnz
xor
cmp
sub
movsb
mov
and
push
cmp
push
push
pop
cmpsl
xchg
adc
add
in
xchg
jae
jp
adc
cs
popa
and
add
xor
mov
int3
insl
jb
jb
xor
inc
and
dec
jne
and
jnp
add
push
dec
add
add
jmp
loopne
in
and
jne
mov
mov
mov
pop
adc
clc
notl
fcompl
jge
lret
fs
inc
lds
push
loope
and
mov
leave
sub
outsb
iret
test
stc
pop
push
jg
and
test
stc
cltd
mov
iret
fs
dec
and
pop
pop
jmp
lea
cmpsl
rcr
jge
dec
sarl
push
incb
mov
pushf
xor
sbb
orl
rolb
rolb
pop
and
push
gs
ret
and
sbb
push
cwtl
mov
and
lds
popf
roll
inc
sbb
in
fiaddl
popf
dec
mov
pop
jmp
xlat
or
and
inc
stc
inc
cmp
inc
jbe
cmpsb
adc
in
dec
jecxz
jle
mov
les
jmp
pop
add
int
xchg
inc
push
loope
fldl
push
enter
push
fmull
lds
or
add
push
mov
dec
imul
inc
or
jns
xor
jmp
cld
mov
sbb
addr16
arpl
or
cs
popf
inc
popf
pop
xlat
mov
xor
lcall
sbb
sbb
data16
adc
fdivrl
mov
pop
mov
push
xchg
pushf
and
in
or
sbbl
lret
push
adc
inc
jno
popa
sbb
adc
mov
test
dec
sbb
cmpsl
stc
add
ficomps
xchg
xor
jp
pushf
mov
rcrl
ficoml
push
mov
fildl
into
sbb
xor
inc
stc
add
add
lods
inc
mov
or
sub
push
popa
popf
repz
gs
xchg
inc
dec
dec
mov
ds
call
mov
les
notb
jle
mov
pop
mov
adc
inc
outsb
add
icebp
adc
xorb
or
pop
cmc
in
or
sub
rcrb
movsl
push
sahf
out
add
lods
stc
cmpsl
pop
into
dec
call
pop
cmp
inc
xor
jae
shr
les
push
ret
jno
and
inc
orb
push
scas
xor
add
adc
fimuls
outsl
dec
rcl
push
es
add
mov
pop
xchg
push
add
cmpsb
xchg
nop
dec
movsb
sahf
pop
pop
jbe
add
or
inc
dec
mov
mov
div
sbb
inc
pusha
outsb
mov
jmp
loopne
cs
repz
add
repnz
pop
xor
jo
mov
xor
or
lea
inc
add
mov
push
sbb
sbb
test
icebp
inc
dec
ja
pop
push
lock
push
push
push
or
movsl
add
or
mov
nop
and
mov
push
int
xorl
int3
push
mov
ja
dec
mov
cmpl
rolb
push
jecxz
jbe
and
movb
icebp
ds
out
ret
push
sbb
mov
fimull
inc
xor
cmp
cli
xor
mov
sub
and
mov
jbe
inc
xchg
mov
push
mov
addl
xchg
cld
jmp
cmp
sti
mov
es
jbe
xor
or
mov
andl
cmpsb
push
push
sbb
xor
dec
sub
popf
add
adc
dec
xchg
and
pop
loope
jne
lret
movb
popa
sbb
sbb
insl
fs
shll
int
hlt
xchg
pop
jno
clc
jno
inc
jge
aas
adc
xor
pop
push
mov
inc
es
cltd
push
in
add
mov
dec
xchg
in
push
add
and
inc
fwait
inc
mov
in
inc
rolb
mov
and
ljmp
clc
movlps
xor
adc
ret
ss
outsb
cmp
subb
xor
xlat
jecxz
sti
inc
mov
dec
inc
xchg
std
pusha
mov
ret
xorl
repz
mov
int
fs
mov
insb
xor
xchg
sahf
imul
sub
dec
sub
push
test
std
cmpsb
int3
pop
mov
stos
loopne
int
loopne
lcall
mov
xchg
dec
gs
push
out
test
lods
aaa
adcl
movl
and
dec
hlt
pop
inc
and
loope
dec
push
push
xor
inc
push
test
adcl
adc
or
iret
lock
push
and
adc
jno
push
xchg
fs
sahf
sti
rol
mov
cmpsl
popf
test
xchg
inc
repnz
push
xchg
sub
jl
int3
inc
mov
imul
xor
roll
test
inc
test
cmpsb
pop
adc
fidivl
mov
sbbb
dec
mov
dec
dec
cli
arpl
lret
enter
dec
mov
jge
cmpsb
xchg
dec
pop
repz
xor
pop
and
mov
stos
jp
jmp
fiaddl
pop
in
aad
add
or
test
enter
addb
or
repz
aam
xchg
and
pop
cmp
push
push
rolb
dec
stos
sbb
mov
rolb
push
jp
jge
pop
fisttpl
mov
sbb
test
rorb
xchg
outsl
int3
aad
sub
sub
push
jmp
rcrb
dec
out
cmp
push
sahf
inc
pop
lds
lcall
xor
cs
pop
inc
cmp
int
fisttpll
push
stos
jl
int3
add
fsub
sbb
shll
pop
mov
popa
in
inc
sub
push
arpl
or
int3
test
mov
mov
fwait
sbb
pop
add
aam
mov
int
dec
popf
push
or
lock
mov
mov
out
scas
push
scas
addb
daa
and
inc
and
mov
inc
jne
add
and
mov
sbb
repz
negb
jp
cltd
fdivs
bound
rolb
inc
push
les
xchg
cltd
aad
dec
pop
in
push
hlt
xor
jp,pt
mov
mov
cmc
inc
popf
jb
dec
jl
jp
dec
xchg
mov
sbb
adc
or
stos
inc
ss
jp
lds
adc
cltd
jecxz
sub
inc
cmp
addl
data16
mov
jae
shrl
pop
sbb
fsubs
xor
test
and
hlt
cmp
sub
ss
or
xchg
sbb
add
inc
out
adc
or
adcl
sahf
push
rcrb
mov
pushf
jne
dec
jmp
into
arpl
xlat
addl
cmp
and
dec
aas
les
push
or
lds
inc
mov
in
mov
jbe
bnd
inc
push
adc
xchg
das
test
xor
push
xchg
cld
nop
add
dec
test
test
push
mov
es
orb
xchg
test
outsb
rol
mov
push
scas
inc
out
test
xor
jecxz
xor
push
or
mov
pop
push
adc
mov
out
mov
test
popa
fdivl
xchg
pushf
or
and
push
data16
jmp
adc
stos
testl
push
sbb
scas
mov
fistl
xchg
outsb
push
pop
mov
iret
ljmp
jno
or
inc
mov
stos
ret
aad
and
mov
jmp
loop
pop
es
loope
and
xchg
sti
fwait
or
jmp
scas
adc
push
gs
or
add
outsl
push
inc
stos
xchg
xchg
orl
mov
outsb
testl
xchg
jbe
adc
mov
sahf
pop
mov
pop
in
loopne
xchg
pop
sbb
pop
adc
adc
subb
xor
test
mov
lcall
mov
pop
aas
pop
fisubs
scas
cmc
push
sub
repz
mov
dec
mov
lods
mov
mov
mov
lcall
hlt
roll
dec
push
cmp
or
icebp
cmpsw
or
add
test
jg
dec
lds
inc
adc
or
lds
out
inc
add
dec
mov
pop
arpl
cmpsb
jmp
jnp
mov
inc
or
inc
dec
shr
shrl
dec
cwtl
mov
push
push
pusha
inc
ds
inc
push
push
loope
popa
scas
cli
pop
clc
jnp
jne
mov
cmpsb
push
xchg
mov
dec
push
inc
inc
out
icebp
lret
mov
inc
gs
pushf
mov
sbb
mov
pop
push
lods
insb
lea
cmc
jae
inc
add
andb
inc
xlat
push
inc
movb
mov
add
xchg
test
addl
dec
mov
mov
mov
pop
push
std
popa
inc
jg
xor
popa
xchg
mov
dec
push
sahf
mov
ret
mov
gs
mov
lds
in
xor
movsl
push
pop
jmp
xchg
enter
sub
adcl
push
and
cltd
jnp
fisubrs
sub
mov
in
push
aad
xor
jge
ret
dec
adc
fistps
andb
pop
jns
lods
jge
popf
sahf
rorb
pop
mov
lds
loop
nop
adc
ret
inc
insb
cmp
int
aad
ret
int3
sbb
mov
adcb
mov
add
fists
dec
dec
shld
push
es
out
pop
ret
repnz
adc
jns
test
test
lds
adc
add
test
arpl
push
push
ret
jp
dec
stos
jnp
es
pop
aam
add
ret
dec
push
jns
adc
sub
dec
int3
mov
mov
pop
mov
xchg
jae
mov
sbb
mov
sub
xor
and
inc
je
mov
pop
xchg
add
xchg
test
std
andl
inc
dec
sbb
or
shl
leave
movsb
dec
es
mov
sbb
jbe
mov
daa
adc
mov
es
pop
adc
imul
jle
add
mov
mov
mov
push
add
adc
xor
pop
and
mulb
aad
hlt
cmp
cld
mov
arpl
ror
out
les
or
incl
mov
mov
pop
xchg
andl
adc
and
push
cmp
push
dec
push
xor
cmp
incb
call
int
enter
test
mov
sbb
and
fsubr
dec
hlt
clc
andl
incl
jle
jnp,pn
test
or
push
repnz
gs
dec
xor
xorl
mov
mov
sub
sbb
sbb
jne
test
mov
and
enter
data16
test
cmc
mov
int
dec
xchg
and
push
mov
jbe
ss
xor
sbb
dec
cmpsl
mov
adcb
loopne
push
inc
push
call
int3
xchg
dec
inc
gs
ss
add
fwait
bnd
and
jno
mov
rep
stos
add
push
xor
jne
cmpsb
adc
xchg
add
adc
push
es
sub
inc
loope
sub
mov
dec
pushf
pop
std
mov
dec
in
mov
push
and
shlb
sbb
lods
xchg
loop
popf
scas
jne
in
add
int3
push
lcall
mov
shll
sub
fprem1
addb
push
xor
iret
lds
ficoms
lahf
scas
ss
push
nop
push
rcrb
or
xor
push
adc
push
jnp
pop
ret
divl
loop
jmp
sbb
inc
fsubr
movd
test
sub
lea
and
cmc
stos
jne
or
out
dec
orl
cmp
mov
dec
add
frstor
mov
lea
out
lcall
and
lock
bound
dec
jmp
stos
sub
es
add
ja
xchg
mov
push
and
inc
pushf
cmpsl
insl
sbb
out
into
add
dec
push
and
gs
ret
jbe
or
andb
repnz
inc
pop
push
test
pop
mov
mov
add
pusha
loopne
xchg
pop
test
sbb
test
jge
test
cld
mov
xchg
dec
dec
add
std
subl
mov
out
xchg
inc
adc
sub
pop
add
loop
xor
sbb
fsubrl
subb
sbbb
sbb
les
sub
lcall
jbe
xor
pop
xchg
lret
push
pop
and
pop
adcb
movsb
fwait
xchg
fnstenv
fsts
cmp
adc
movsl
sbb
xor
aas
lea
bound
sarl
pop
ret
jo
stos
inc
je
rorb
nop
mov
lret
mov
mov
pop
inc
push
sbb
push
pop
out
lods
add
or
inc
or
arpl
pusha
push
adc
movsb
fmul
out
fdivrs
xchg
nop
push
mov
push
lds
sub
inc
and
cli
adc
mov
int3
jmp
jecxz
xchg
jo
inc
pop
inc
outsb
xor
enter
loope
adc
js
mov
inc
ja
outsb
xchg
out
lahf
mov
dec
out
bound
popf
arpl
or
lods
inc
jl
jle
ror
scas
push
dec
lret
and
into
or
bound
in
add
es
repz
pop
inc
cmp
and
fisubrs
std
xchg
nop
sbb
icebp
int
mov
das
gs
mov
xchg
and
or
push
pop
repnz
imul
mov
ljmp
ljmp
jmp
sub
rorb
push
ret
out
xchg
push
or
lds
daa
jg
ja
cmpsb
aas
cs
mov
addr16
xchg
pop
mov
shrb
imul
adc
xor
test
out
aad
repnz
push
mov
ja
sub
pop
inc
or
aad
cmpsl
jecxz
pop
ficoml
inc
pop
es
stos
flds
fwait
ds
or
adc
repnz
je
pop
sbb
or
pop
outsb
mov
mov
push
stos
dec
mov
xor
push
push
mov
mov
fadds
sub
mov
sub
push
push
leave
pop
sbb
dec
jns
scas
fwait
push
xor
or
sahf
mov
and
jmp
dec
mov
out
xchg
inc
popa
push
pop
add
xchg
dec
es
sahf
dec
rolb
dec
test
lods
adc
jne
mov
pop
jne
adcl
in
jae
loopne
xchg
mov
movsb
je
and
les
icebp
cwtl
inc
mov
fwait
stc
adc
xor
dec
imul
adc
push
jae
or
inc
sarl
xchg
andb
add
xor
pop
mov
inc
push
dec
or
sbb
js
mov
out
jns
neg
movsl
xchg
xor
jmp
or
cmp
notl
xchg
dec
push
repz
mov
repz
lea
fistpl
inc
mov
repnz
ror
sahf
out
mov
and
dec
xlat
xchg
cmp
and
inc
xchg
inc
or
lods
insl
fisttpl
fiaddl
adc
mulb
adc
mov
lcall
mov
or
pop
pop
mov
pop
test
jl
inc
enter
shl
xchg
or
arpl
xchg
or
push
test
data16
popf
push
lcall
les
in
loop
sbb
or
adc
or
pushf
push
leave
push
call
sub
push
jb
in
lcall
sbbl
adc
or
jp
orb
push
pop
insb
adc
cmpsl
pusha
es
pop
arpl
dec
xchg
fwait
push
add
bound
pop
push
inc
jl
push
xchg
dec
fmuls
mov
push
andl
leave
scas
andl
cld
mov
call
rcl
ljmp
je
test
xchg
roll
stos
repz
inc
repz
fsubl
push
mov
inc
repnz
aad
push
pop
xor
add
ljmp
test
xchg
sub
mov
inc
pop
and
in
cld
test
mov
outsb
sbb
cmp
jle
sub
push
inc
addr16
fsubs
xor
lods
hlt
clc
push
dec
in
dec
fdivrs
fisubl
hlt
pop
ret
adc
repz
pop
add
mov
rcrl
sbb
mov
push
aas
add
fwait
lea
fimull
sbb
nop
subb
mov
pop
das
roll
and
lcall
call
xchg
stos
movsl
movsl
out
push
jg
lds
pushl
mov
fistpll
orl
mov
xchg
pop
das
dec
xchg
jecxz
adc
or
inc
popf
arpl
es
adc
add
sbb
xchg
mov
aaa
loope
mov
pop
js
cmp
ret
loope
mov
dec
enter
inc
pusha
movsb
mov
dec
je
es
inc
mov
andl
shrl
or
add
jl
stos
and
int
adc
adc
add
ret
jecxz
repnz
int3
xorb
lds
inc
inc
int3
inc
movsl
mov
mov
cltd
lea
pop
mov
cltd
mov
lock
xchg
mov
add
push
rorb
pop
rcr
dec
shll
gs
bound
dec
or
ret
mov
out
imul
enter
push
mov
sbb
inc
xchg
pop
dec
dec
mov
pop
sub
sub
jl
push
or
call
xor
mull
gs
bsf
mov
call
test
push
sub
jge
push
mov
push
out
push
loopne
push
enter
inc
addl
add
pushf
mov
daa
dec
lock
jmp
or
mov
in
pop
push
popf
fcmovbe
fildl
gs
adc
pop
add
mov
cmp
dec
mov
sbb
lret
and
cld
ds
mul
mov
or
in
pop
cld
fnsave
fcomps
popf
xchg
and
loop
lods
arpl
popa
notb
xchg
inc
sub
inc
xchg
dec
je
jmp
inc
lahf
aad
icebp
xor
push
mov
xchg
dec
aaa
cmp
or
push
inc
pushf
sbb
mov
adc
lods
scas
push
lods
xlat
pop
push
xchg
pop
lahf
test
xchg
mov
inc
fists
pop
mov
or
pushw
mov
dec
xchg
daa
pop
sub
movsl
inc
out
stos
xchg
dec
xchg
mov
add
rorl
push
jge
outsl
lock
jb
or
inc
xchg
sbb
popa
and
loope
sub
jb
adc
lret
or
roll
cltd
lahf
arpl
adc
sub
inc
inc
int
pop
fnsave
dec
mov
sbbl
pop
loope
stos
dec
leave
gs
push
leave
dec
js
lret
pop
inc
inc
pop
stos
gs
loope
rcrl
inc
test
scas
lcall
lds
and
pop
out
mov
jge
jl
or
sar
stos
adc
ret
fcmovb
sbb
sbb
jmp
shl
dec
jge
add
sbb
arpl
imul
inc
sbb
lret
inc
movsl
inc
jmp
push
and
testl
sub
lock
mov
mov
fidivrl
inc
dec
inc
ret
xor
aas
xor
stos
and
adcl
les
ror
cmpl
jb,pt
xchg
inc
inc
lock
xor
lret
mov
ret
push
cmp
jb
jge
lret
pop
popa
rcl
sbb
rcrb
repnz
dec
xchg
rcrb
add
push
int
movsl
bound
mov
test
fdivrs
and
lahf
dec
in
div
jae
sub
dec
jmp
push
fildl
add
dec
dec
stos
or
dec
lds
sbb
arpl
dec
shll
cwtl
repz
add
or
negl
inc
aas
fisubrl
push
pop
mov
xor
dec
insl
mov
or
mov
pop
push
loope
add
or
ficompl
xchg
dec
cwtl
mov
pusha
mov
mov
xlat
push
sti
or
cs
in
ret
or
and
dec
cld
add
cmp
mov
xchg
add
movsl
adc
dec
lea
stc
ret
popa
adc
push
nop
dec
xchg
inc
dec
inc
je
inc
push
and
rol
sub
jno
add
movsl
mov
push
push
addr16
inc
fwait
mov
popf
jge
lcall
fnstcw
lret
dec
add
data16
cmp
jnp
fistpll
push
dec
dec
push
dec
cmpb
mov
fld
jmp
lcall
mov
imul
stos
adc
pushf
loope
ss
add
dec
inc
bound
or
pop
aad
lods
xchg
mov
cmp
adc
lahf
sub
lds
lds
ret
sbb
mov
add
push
and
addb
jge
lret
add
inc
es
xor
mov
aad
jne
inc
repz
jp
xor
int
lods
sbb
jl
push
adc
bound
and
push
div
mov
inc
jecxz
mov
nop
pop
push
adc
push
cmc
xchg
nop
std
push
add
jo
and
xchg
push
loopne
jno
xchg
cwtl
sub
loopne
jecxz
fistpll
ret
loopne
xchg
inc
push
push
divl
cs
push
fidivs
xchg
lds
inc
sahf
lcall
gs
fimuls
rolb
les
jno
and
adc
push
or
cmpsl
xchg
adc
lahf
xchg
add
add
and
or
inc
dec
pop
pop
pop
sbbl
mov
push
sbb
pop
mov
fwait
dec
pop
push
pop
mov
je
rol
jmp
mov
or
mov
mov
int
jno
dec
jnp
xchg
add
push
sbb
sub
jmp
leave
dec
repz
dec
sub
cwtl
inc
loopne
je
dec
aam
add
mov
filds
and
xor
gs
mov
icebp
sbb
and
mov
ror
jno
test
push
mull
xor
hlt
iret
dec
add
ss
adc
add
test
loope
insb
dec
aas
cmp
nop
popa
imull
lods
dec
arpl
inc
fidivrl
pop
push
lods
pop
roll
mov
add
add
inc
jno
xor
jecxz
jecxz
xchg
dec
adc
loop
or
pushf
push
inc
filds
sbb
and
inc
xor
fldl
bound
cmp
pop
test
xchg
xor
and
xor
arpl
test
mov
adc
lock
testl
mov
test
ret
addb
cwtl
jne
add
add
adc
inc
dec
jbe
in
inc
add
push
adc
mov
outsb
into
outsb
data16
or
mov
test
inc
enter
cmc
push
jno
cld
test
insl
dec
cmp
inc
inc
xchg
rorb
cmpsb
lcall
and
int3
and
push
add
ljmp
pop
mov
pop
mov
add
enter
jle
xchg
rcrb
dec
push
and
cmpsl
sbb
jns
fs
cmp
xor
sub
outsb
testb
dec
inc
ljmp
push
jne
mov
jnp
mov
popa
inc
hlt
mov
cltd
mov
shrl
ret
pop
pop
push
dec
clc
leave
test
jae
add
ret
popf
add
insl
xchg
jmp
xchg
and
adc
out
cwtl
subl
cmc
test
cli
cmp
repz
sub
xor
sub
dec
pop
and
jle
mov
xor
popa
xchg
ret
shrl
cmp
fucom
jno
lds
or
pop
mov
xchg
mov
add
cmp
aam
movsb
xchg
mov
aas
ret
je
icebp
dec
fiaddl
mov
cwtl
scas
rcll
jmp
mov
int
or
daa
lds
fcomps
pop
push
dec
mov
cld
push
or
stos
sub
cs
cld
dec
inc
and
stc
xor
imul
sub
in
popf
adcl
pop
dec
pop
jp
imul
aas
pop
cltd
push
jge
lcall
ret
cmp
pop
push
sbb
rcll
faddp
push
or
pop
es
inc
dec
mov
lock
dec
imul
mov
pop
ds
je
lea
sub
inc
bound
je
inc
add
or
fildl
jg
ds
sbb
pop
aad
inc
shll
mov
popf
loope
mov
addl
cmp
and
ret
rolb
inc
inc
fsubr
ret
orb
cwtl
mov
pop
das
sbb
xchg
inc
mov
fmuls
cmpsl
sub
mov
fcomps
adc
or
lock
push
fnsave
les
mov
addb
inc
outsb
int3
pushf
lds
incl
inc
jb
push
add
filds
push
les
xchg
test
push
inc
mov
nop
push
adcl
pusha
test
out
bound
std
sahf
or
std
int3
mov
ljmp
inc
dec
inc
popa
scas
or
xchg
enter
movsb
addb
popa
hlt
lcall
mov
ljmp
add
mov
sahf
shll
fwait
addb
scas
pop
inc
pop
ret
fs
xchg
int
shll
xchg
inc
test
pop
adcl
les
jmp
shrb
outsl
push
pop
lods
push
inc
sbb
loop
xor
mov
cld
add
mov
inc
xchg
or
bound
int
xchg
pop
mov
xchg
bound
push
shrb
test
xor
bound
ficomps
jo
jge
js
fwait
imul
mov
inc
jo
in
dec
lock
sub
pop
dec
cmc
pop
or
aaa
sbb
sbb
outsb
cwtl
test
add
je
je
xchg
andb
add
es
xor
bound
push
or
mov
xchg
jle
or
ja
cmp
orb
xchg
imul
ret
data16
test
inc
negb
test
aad
repz
sub
push
je
xchg
outsb
inc
cmp
push
inc
out
inc
pushf
ss
bound
lds
jge
test
test
or
add
ss
ret
add
pop
xchg
test
and
ss
les
inc
pop
insb
add
jae
xchg
shll
inc
add
pop
sbb
add
add
xor
stos
push
push
inc
aas
ss
add
xchg
sub
lahf
jb
movsb
pop
push
cwtl
inc
pop
fistps
ficoms
loop
cmp
ds
push
xchg
bound
fstl
pop
push
or
mov
inc
jbe
in
cli
inc
add
push
ss
mov
std
fcomps
sbb
bound
dec
xchg
fwait
jecxz
and
mov
add
inc
mov
in
xor
push
inc
fiaddl
xchg
fs
push
std
add
pop
loop
in
dec
jge
fs
add
sbb
inc
or
push
movsb
lcall
dec
mov
xchg
dec
add
dec
test
fs
xchg
sahf
lds
and
inc
adc
push
or
xchg
shll
loope
xchg
sbb
pop
and
test
add
mov
dec
jecxz
in
inc
lcall
mov
inc
push
mov
pop
andb
push
add
pushf
sarl
cmp
mov
nop
test
jno
adc
sub
adc
insb
xor
das
rcll
dec
loopne
jge
pop
incl
shll
insb
in
inc
insb
cmpsl
scas
lret
sarb
inc
jmp
jbe
inc
inc
xchg
mov
mov
daa
push
cli
pop
cwtl
lahf
js
xchg
mov
lea
mov
repnz
lods
push
pop
cmpsl
lds
repz
sbb
cltd
or
mov
push
mov
xor
hlt
and
cmp
mov
cli
data16
in
mov
jb
pop
ds
rolb
test
dec
mov
fdivrs
jecxz
or
imul
xor
or
iret
in
popaw
or
mov
div
out
dec
dec
mov
mov
xchg
cmp
lret
adc
lods
mov
loopne
loope
icebp
mov
xchg
sbb
or
mov
fsubs
popa
imul
test
popl
adc
and
sti
pop
call
xchg
sbb
daa
push
inc
test
lods
rorl
xor
inc
jle
fdivl
rclb
adc
dec
pop
fsubrs
jp
pop
jbe
int
divl
xchg
and
call
je
test
mov
gs
cmpsb
ror
push
lds
test
xor
and
or
imulb
mov
ret
dec
icebp
sbb
repnz
in
sub
jcxz
insb
cmp
push
into
outsb
int
sbb
mov
hlt
js
jle
movsb
imul
cmpsb
std
xchg
jb
sbb
cmp
jbe
mov
pop
je
mov
add
xchg
sbb
aaa
jmp
std
jl
add
les
sub
push
in
dec
call
mov
sub
inc
xor
push
arpl
into
insl
dec
lods
out
aas
aas
sbb
aad
in
mov
adc
mov
push
leave
mov
daa
mov
cmpsb
ss
in
inc
sub
pop
outsb
rolb
ss
aad
gs
shll
add
mov
and
jmp
mov
hlt
add
xor
jns
mov
mov
inc
dec
std
sahf
mov
insb
in
test
add
dec
es
xchg
push
and
jne
mov
add
jne
dec
movsb
mov
mov
push
mov
mov
inc
jg
lahf
adc
out
repnz
sub
inc
jno
push
movsl
loopne
test
notb
call
ja
dec
fsubrs
ja
or
cwtl
clc
mov
shl
inc
push
push
push
and
mov
or
cmc
repnz
mov
sub
jb
cs
fs
adc
orb
mov
pop
ss
pusha
add
cmovno
stos
sbb
aas
movsl
sbb
and
pop
fisubrs
jg
sbb
pusha
leave
sahf
pop
inc
sahf
jbe
sub
or
test
and
cmp
call
mov
pop
sbb
loope
pop
xorb
push
call
outsl
xchg
scas
jge
push
jg
jbe
in
cltd
jbe
fwait
inc
aas
gs
imul
repz
sbb
icebp
push
dec
pop
movsb
add
lock
push
push
pop
mov
inc
mov
and
xchg
or
push
mov
dec
shlb
xlat
add
cmpsb
arpl
les
ror
sub
lds
movsl
dec
add
gs
pop
test
outsb
jp
jae
or
mov
add
lods
stos
xchg
add
sub
inc
lret
fwait
ss
das
test
cmpl
xchg
dec
nop
lds
push
rcrl
es
xchg
outsb
mov
js
or
rcrb
pop
gs
push
movsl
cmp
jb
stc
mov
outsl
inc
xchg
jmp
in
push
fists
jg
int
movsb
push
cmpsb
scas
test
pop
push
enter
xchg
shll
jp
or
xchg
cmc
mov
pop
inc
xor
lret
in
ficoml
pop
test
bnd
lea
xchg
in
add
sarl
pop
repnz
xor
gs
add
sub
popf
mov
cmp
fwait
cmc
fidivs
and
sbb
sahf
lds
sbb
sbb
enter
and
fmull
repnz
inc
int3
jp
fdivrs
xchg
jnp
cmp
pushf
xorl
jl
mov
or
xor
add
filds
lock
les
pop
adc
cmpsl
sbb
test
adc
stos
push
mov
icebp
mov
xchg
jae
push
bnd
mov
mov
data16
jbe
cwtl
fwait
cwtl
ss
push
cs
test
push
cli
xor
jmp
movsl
mov
and
ja
pop
mov
push
in
cli
add
andb
sbb
sbb
push
std
stc
sub
push
popf
subb
push
lds
mov
push
inc
mov
movl
incb
inc
ds
outsl
sahf
shl
in
pop
push
xor
cmp
out
cltd
lock
stc
inc
push
out
or
inc
aas
ret
mov
movsl
push
push
pop
repz
fldl
add
ljmp
in
adc
popf
ficoml
or
mov
push
mull
imul
mull
rorl
dec
test
les
dec
mov
xor
cmp
in
or
sbb
pop
fldl
fildl
or
mov
dec
jne
mov
loopne
or
add
xchg
push
dec
jecxz
sub
push
lcall
or
pop
sbb
pop
icebp
cmp
and
cld
inc
mov
nop
mov
jge
addr16
jnp
mov
pop
cwtl
adc
add
notl
out
fwait
push
inc
add
hlt
test
cmpb
jbe
inc
dec
sub
scas
push
fs
shlb
add
ss
int
sti
mov
mov
sarb
mov
test
adcb
in
push
addb
mov
mov
xchg
mov
dec
xchg
fdivs
insl
movsl
cmp
addl
movl
loopne
daa
push
push
cltd
or
ret
ds
sub
mov
push
pop
adc
bound
das
data16
call
mov
add
or
mov
pop
mov
daa
push
adc
cmp
push
lret
push
stos
and
inc
mov
push
inc
inc
inc
mov
xor
sti
push
lea
inc
outsl
mov
out
sbbl
xor
or
add
xor
inc
xchg
sbb
add
fcoml
pusha
shrl
cmpsb
add
int
add
stos
jno
inc
sbb
xor
or
cmpsb
scas
pop
mov
and
movsl
pop
insl
fld
adc
sbb
sub
mov
dec
jbe
add
cmp
lds
dec
adcl
xchg
or
out
sti
mov
mov
jecxz
push
pop
rclb
jo
push
repnz
push
add
cmp
movsl
jmp
push
dec
test
je
cmpsl
clc
cwtl
jnp
jae
adc
outsb
jmp
add
ds
mov
dec
insb
or
incl
lock
repz
loopne
mov
popf
adc
popa
cmp
mov
dec
scas
movsb
lea
int
jne
jp
inc
jecxz
iret
out
push
aam
shlb
adc
in
xor
out
fcmovnbe
popa
push
push
push
std
loopne
shr
inc
shl
adc
push
jno
outsb
push
jecxz
adc
dec
rorb
sbb
inc
jns
aaa
aad
not
pop
ficoms
bound
push
and
lahf
xchg
inc
cmc
push
out
adc
popa
daa
scas
pop
and
sub
fwait
popa
xchg
dec
adc
hlt
push
mov
or
and
jo
imul
xchg
popf
inc
pop
adc
lcall
jl
xchg
mov
xchg
add
call
add
imul
or
dec
inc
cmpsl
shlb
loopne
and
mov
push
jp
push
add
add
mov
pop
inc
int3
mov
jo
int
ret
jle
out
adc
inc
cmpsl
shlb
bound
shlb
popf
cmpsl
cmp
xor
and
inc
sbb
jp
sbb
outsl
dec
sbb
dec
xchg
adc
aad
and
push
notl
jo
aas
and
mov
or
mov
das
lahf
stos
cwtl
in
data16
pop
sbb
add
push
gs
mov
insb
js
mov
mov
or
pop
adc
dec
loopne
lret
iret
adc
pslld
fisubrs
inc
rclb
push
jb
pop
adc
fadds
add
jmp
inc
add
popa
adc
xchg
inc
popf
mov
es
inc
stos
sub
xlat
mov
sti
mov
xchg
jns
mov
cmc
push
and
inc
jl
cmp
sub
mov
test
add
push
data16
xor
sub
xchg
xchg
insl
xchg
add
sahf
fsubrp
test
adc
mov
pop
jge
aad
sbb
lahf
fs
mov
push
sbb
pop
in
das
add
test
inc
and
push
push
addb
in
add
and
ss
mov
pop
mov
add
nop
call
mov
hlt
orb
hlt
mov
xchg
or
add
mov
sarb
into
out
cmc
or
mov
les
pop
add
push
adc
push
dec
clc
cli
mov
push
sbb
addb
xlat
aad
inc
std
push
jnp
cmp
jl
inc
sub
in
mov
xchg
inc
test
xor
or
jp
sub
cmp
dec
mov
xchg
aas
mov
out
lds
sub
daa
dec
icebp
in
pop
dec
inc
es
sub
jl
jne
sub
popf
movsb
outsl
inc
push
lods
pop
push
jg
push
sbb
in
mov
stos
push
sub
xor
mov
test
push
arpl
add
jb
pop
adc
xchg
pop
push
ret
mov
and
push
cs
frstor
cmpsb
lods
mov
sub
loop
xchg
in
daa
mov
ss
pop
mov
add
mov
mov
fucom
loop
add
popf
lds
sub
jae
test
outsb
popf
cli
push
loopne
or
and
lods
shr
add
out
addb
test
clc
test
data16
sub
pop
fs
mov
adc
outsb
int3
es
data16
or
aam
pop
inc
pop
push
dec
and
pop
outsb
sbb
scas
rorb
loope
inc
jecxz
mov
cmpsb
inc
or
icebp
add
sahf
test
sti
adc
push
jecxz
xorl
inc
mov
jnp
repz
inc
jno
cwtl
in
cwtl
mov
pop
fadd
ljmp
push
pusha
cmp
mov
dec
lds
push
roll
push
dec
jg
pop
mov
dec
pop
mov
aas
inc
or
stos
sti
sub
shl
adc
jge
data16
sbb
inc
loop
repz
mov
push
inc
sarb
call
movsb
adc
inc
pop
sub
int
ja
mov
mov
insb
orl
mov
repnz
dec
into
pop
lods
dec
mov
push
mov
mov
add
pop
jns
je
repz
push
cmp
andb
lods
bound
sub
dec
ss
mov
xchg
push
mov
lahf
or
in
jbe
aaa
es
es
push
shl
cmp
and
jl
jae
adc
cmp
nop
xchg
in
repnz
cmpsb
jecxz
out
jge
adc
xchg
pop
std
or
pusha
push
xor
sbb
adcb
ret
bound
mov
fcoms
jecxz
pop
sub
xor
sbb
jge
adc
add
jbe
inc
lods
aas
jne
jle
fdiv
dec
cmpsl
loopne
outsl
gs
pop
jg
andb
push
vmaxpd
loope
push
pop
aad
or
push
lret
daa
fnstsw
xor
jmp
push
xchg
sbb
pop
jb
push
lds
sub
add
sbb
push
loope
jne
and
inc
divl
aam
push
lds
mov
pop
je
es
loope
cmpsb
cltd
cmp
stc
mov
dec
addb
dec
dec
aaa
adc
push
rclb
jle
enter
xor
subb
sub
loopne
fs
inc
gs
xchg
test
mov
xchg
xor
mov
loope
test
outsl
mov
push
mov
mov
cmc
inc
or
daa
pop
lret
adc
repnz
pop
xor
stc
dec
lds
or
rcl
pop
pop
push
xchg
pushl
xchg
xchg
pop
push
xchg
lret
ret
icebp
mov
arpl
int3
adc
pop
add
out
outsb
lea
lds
pop
push
sbb
and
cmp
fsts
add
ret
sbb
inc
or
test
sbb
gs
adc
or
inc
je
ret
fdivrl
subl
adcl
mov
dec
rcr
pop
fwait
pop
mov
add
subl
pop
hlt
cwtl
mov
out
mov
and
xor
imul
inc
das
xor
xor
outsb
insl
inc
mov
jbe
jmp
or
mov
push
xorb
sahf
test
out
ret
cmc
add
ja
js
lcall
test
dec
push
fldt
inc
inc
add
and
add
dec
daa
outsl
mov
lret
cwtl
aas
outsb
loope
adc
cmp
jbe
outsb
pop
adc
push
loop
add
rcrl
push
adcb
or
add
pop
mov
loope
add
test
mov
in
xchg
cmc
adc
nop
aam
sbb
push
push
pushf
test
call
test
inc
mov
bound
popf
cld
and
cmp
loope
sub
ret
dec
push
jle
in
pop
jmp
xor
icebp
add
orb
add
mov
mov
push
push
stc
cmpsb
andb
filds
inc
add
cwtl
jl
out
aaa
cmp
andb
gs
add
jo
mov
adc
lds
jbe
arpl
ret
aad
movb
add
add
xchg
inc
orl
pop
fidivrl
pop
test
into
lret
xchg
dec
and
xchg
push
or
cmp
push
jae
mov
daa
ljmp
sahf
lds
jns
adc
pop
inc
lret
ss
and
mov
vorps
jno
jle
outsl
add
decb
inc
icebp
or
xor
sti
pop
lcall
lock
and
insb
xchg
loopne
push
incb
cmp
push
bound
cmp
js
jns
xchg
push
je
leave
xchg
or
jg
and
inc
jo
rcrl
sbb
push
inc
and
cmp
pop
adcb
sbbl
subb
dec
pop
aam
sub
mov
adc
cmp
jne
test
stos
pop
popl
mov
cmpsb
and
mov
jg
dec
nop
mov
push
ljmp
pushf
gs
dec
les
cmp
shlb
das
xor
adc
lds
test
pop
cmpsb
mov
xor
imul
and
mov
adc
test
cs
out
cmp
bound
mov
inc
inc
pop
sbb
inc
dec
int
inc
cmp
mov
or
shl
cmp
add
and
xchg
xorb
inc
push
inc
test
jbe
sub
sbb
in
xchg
add
push
add
jbe
xacquire
repz
add
and
push
lock
mov
add
movb
ret
loop
adc
les
divl
adc
mov
pop
pop
jecxz
mov
xchg
js
imul
adc
out
int
scas
add
out
add
inc
and
or
adc
inc
push
adc
movsl
int
cltd
out
xor
inc
add
add
cmpsb
pop
lret
jecxz
inc
cmc
ffreep
push
bound
pop
xor
fisubrl
je
cmp
xacquire
cltd
dec
and
jno
pop
in
ds
stos
mov
loope
mov
sub
xchg
stos
shlb
jbe
pop
push
add
jbe
sub
mov
mov
scas
shlb
dec
mov
jno
xchg
adc
arpl
pop
shll
pop
std
pushf
cmc
xchg
ss
mov
lods
pop
and
dec
mov
out
lcall
add
lock
inc
scas
imul
push
pusha
enter
xor
sbb
xchg
xchg
push
mov
fistpl
jns
xlat
loope
loopne
lods
orb
rolb
outsl
aas
mov
jb
ret
and
xor
repnz
inc
push
push
out
repz
int
lds
xchg
sbb
fildl
adc
add
mov
test
pop
sub
add
loope
add
mov
lea
sub
push
outsb
fdivrl
movsl
out
aam
xor
fsubl
xchg
push
std
jmp
xchg
int
jb
sbb
and
ds
pop
movsb
xchg
test
dec
xlat
notl
push
gs
roll
adc
mov
movsl
jb
jb
mov
mov
mov
lcall
cwtl
pop
xchg
int
mov
shlb
es
adc
or
out
mov
mov
mull
cmp
or
lds
les
bnd
leave
cmp
jge
test
sbbl
cmc
testb
bound
xchg
shl
aad
push
push
cltd
xchg
jne
shrl
push
add
pushf
cmc
int3
pop
adc
and
int
mov
sbb
dec
jge
mov
xchg
mov
adc
test
jmp
mov
out
pop
mov
int
cld
div
dec
in
imul
mov
je
outsb
and
mov
sbb
inc
insb
clc
push
pop
aam
popf
rolb
cmpsb
jle
sbb
push
in
shr
popa
jmp
loopne
pop
mov
pushf
mov
call
ljmp
xor
mov
pcmpgtd
push
cmp
fistl
add
fldcw
or
out
mov
inc
aas
fsubrs
std
out
cmpsb
xor
xor
pop
mov
add
xchg
or
dec
ljmp
cmp
sub
clc
push
mov
jne
mov
cmp
lret
xor
shlb
jne
fbstp
inc
cmc
adc
inc
enter
movsl
adc
pop
dec
sbb
dec
inc
add
jne
inc
pop
push
or
or
xchg
addr16
dec
jne
loope
inc
in
insb
jb
add
xor
inc
out
add
test
clc
mov
adc
enter
mov
int3
nop
rolb
outsb
fsubrl
jbe
in
xorb
lds
dec
cmp
movsl
lds
dec
out
jp
nop
sarb
mov
lock
xchg
fisubrs
dec
test
pop
idivb
mov
push
stos
xor
je
sbb
ret
push
xor
test
fcmovnb
arpl
or
fwait
mov
rcrl
xchg
and
and
dec
movsl
inc
call
test
pop
lahf
push
out
mov
inc
dec
fstpt
jbe
fwait
xchg
sbb
mov
pusha
rcr
lods
cli
mov
mov
dec
testb
cmp
adc
cltd
dec
lods
xor
sub
cmp
sbb
aaa
mov
repnz
notb
test
xchg
int
inc
jnp
xor
fistl
out
mov
lret
mov
sbb
pushf
adc
mov
lcall
lds
xor
or
and
ja
jecxz
xor
pusha
mov
cmp
xchg
repnz
fcomi
mov
lret
pop
add
add
adc
lock
loope
les
jne
lock
leave
mov
push
loopne
leave
idivl
leave
gs
aad
push
jno
xor
mov
fisttpl
pusha
bound
dec
inc
ja
js
xchg
cld
in
jecxz
push
ss
es
adc
es
sbb
push
cmc
in
es
push
dec
push
jne
xchg
enter
mov
rcrb
fcmovnbe
imul
fcmovnu
xchg
cmp
imul
jnp
movsl
cltd
ret
sbb
mov
fistps
sti
jns
sub
cld
sti
xchg
jecxz
in
xorb
cmp
repnz
cmp
and
sbb
pop
dec
into
pusha
sub
lds
into
lock
dec
aad
sub
pop
popf
into
outsl
push
dec
movsl
xchg
mov
sub
push
jnp
fimuls
mov
jne
into
cmp
dec
inc
dec
dec
inc
adc
or
loope
add
and
mov
cmp
mov
xor
inc
or
or
inc
ja
or
dec
ds
xor
add
shll
add
das
push
sahf
fsubs
je
addr16
cli
xchg
inc
push
jl
jae
fdiv
inc
mov
sbb
sbb
test
lds
cmpsl
mov
lods
arpl
cmp
in
xchg
xor
mov
or
clc
xchg
lahf
ret
add
mov
and
mov
into
movsb
mov
stos
sub
mov
nop
inc
lds
push
ret
and
jb
sbb
call
out
xchg
addr16
aam
mov
sbb
stos
jge
fsubs
mov
push
add
into
sbb
in
sahf
daa
cmp
loope
pop
je
mov
dec
in
inc
mov
stos
imul
jl
flds
sbb
cmp
ret
xchg
pop
out
movsl
stos
xchg
test
mov
out
mov
pop
fldt
mul
jp
dec
clc
jne
xor
popa
xchg
lret
mov
fmuls
dec
popf
cmp
and
inc
or
jb
in
xchg
test
jmp
jb
push
and
sbb
outsl
int
inc
fisubs
dec
std
popf
notb
push
or
out
mov
jp
mov
lea
ficompl
aas
dec
and
or
xor
popa
inc
popf
pop
adc
test
loopne
popf
xchg
inc
ljmp
mov
sbbb
and
mov
popa
push
in
xchg
loopne
aaa
xchg
inc
add
mov
lret
inc
push
dec
dec
mov
cmp
xchg
test
loope
cmp
add
cld
cmp
adc
jmp
adc
shll
mov
lahf
sbb
mov
mov
sub
mov
jle
push
loop
orb
movsl
jl
jecxz
sub
shll
xchg
xchg
aad
add
pop
stos
push
xchg
mov
and
insl
sub
or
lds
pop
leave
cltd
mov
ret
dec
lods
mov
mov
mov
fiaddl
dec
les
and
sbb
dec
int3
js
into
dec
test
stc
repnz
sbb
inc
jecxz
out
xchg
sub
loop
jle
outsb
pop
adc
xor
and
adc
sbb
lret
loop
adc
add
mov
roll
jbe
xlat
xor
loop
dec
jge
jbe
in
mov
cmc
or
xchg
dec
mov
sub
push
push
lds
mov
add
xor
adc
repz
push
mov
and
cmc
fs
or
and
jle
jae
pop
es
push
icebp
icebp
out
out
in
sub
or
es
dec
jb
jl
inc
movb
or
sbb
or
or
mov
and
cli
pop
or
pop
inc
push
sub
mov
les
hlt
fmull
jne
cld
adc
cmpsb
dec
push
push
sub
test
inc
movb
dec
lods
inc
mov
stc
and
je
js
lret
lock
jns
adc
subb
jg
loope
outsb
cld
add
popf
repz
imul
xor
imul
adc
dec
pop
into
xlat
movsb
scas
xlat
mov
into
cmp
adc
sbb
repz
ja
xor
jo
loope
fs
inc
mov
shll
les
lahf
ja
inc
shlb
mov
es
mov
mov
jle
into
leave
rcll
xor
or
sub
jbe
repnz
jns
jg
rorb
sub
inc
push
jg
sbb
cltd
mov
hlt
rcrl
js
cmc
xchg
out
mov
jne
mov
sbb
xchg
sbb
cmp
mov
mov
test
in
addr16
jb
cli
je
mov
dec
or
fidivl
mov
sbb
scas
in
adc
iret
inc
or
and
ljmp
xlat
cmc
pop
xchg
dec
in
ja
mov
and
push
call
test
inc
adc
jns
dec
mov
arpl
cwtl
jge
subb
cwtl
mov
dec
pop
jecxz
dec
ret
lret
sbbb
in
cmp
xchg
test
movsl
ret
in
mov
icebp
leave
lods
fs
subl
ret
mov
stc
or
dec
mov
leave
das
push
int
and
pop
aam
mov
call
sub
adc
mov
dec
test
out
jnp
lret
imul
cli
repz
mov
movsl
les
cmpsl
xor
or
mov
inc
xbegin
lds
mov
adc
jecxz
xchg
cmc
imul
sub
jbe
sub
push
sub
push
pop
aam
inc
jl
xchg
lods
mov
gs
mov
xchg
xchg
push
add
pop
int3
jo
roll
pushf
sbb
sarl
pushf
adc
out
dec
cmc
jle
repnz
xchg
inc
add
aas
cmp
and
or
roll
push
sbb
inc
add
pop
lds
in
dec
adc
aad
jne
mov
sbb
test
cmc
cmc
push
and
xor
add
mov
sbb
xchg
inc
fnstenv
dec
leave
ret
pop
mov
rcrl
mov
sbb
pop
sbb
jl
in
fwait
push
dec
test
stos
je
inc
je
stc
mov
insl
add
inc
or
xorl
repnz
cmp
push
aad
xchg
popf
mov
in
into
loope
movl
mov
xor
inc
or
lea
jbe
xchg
and
cmp
xchg
in
addb
mov
dec
pop
pop
in
jno
xor
pop
dec
in
fidivrl
cmp
sub
push
mov
scas
xlat
push
cmpsb
adc
imul
idivl
push
dec
out
add
pop
dec
lret
and
pop
lods
adc
mov
cltd
adc
push
jne
adc
jne
into
ret
imul
jmp
push
test
leave
xor
loope
or
mulb
outsl
fld1
and
or
fwait
stc
inc
or
jns
cmp
movsb
sarl
dec
dec
addr16
inc
inc
inc
dec
loope
rclb
push
in
ss
add
movsl
mov
inc
mov
cwtl
mov
addl
xchg
mov
call
stos
ffree
neg
test
dec
ret
pop
pushf
outsb
xor
add
xchg
fwait
loop
call
jno,pn
mov
push
pop
cmpsb
inc
and
jb
popa
sub
cmp
cmp
pop
mov
push
dec
ror
jl
mov
xchg
mov
sbb
mov
fsubl
xchg
and
cmp
movsl
cmc
pop
repz
jbe
mov
inc
pop
lret
cmp
push
stc
mov
daa
pop
cmp
jge
or
or
mov
add
push
fcoms
ds
add
inc
stos
pop
fidivl
or
into
rorb
push
stos
wrmsr
mov
xor
push
push
xchg
mov
ljmp
mov
mov
int3
xor
fwait
add
sub
add
stos
pop
adc
sbb
fnsave
mov
lret
pop
or
xor
cmp
loop
push
jbe
pop
sub
addl
xor
jge
or
push
mov
push
jp
test
outsl
roll
xchg
pop
cmc
push
ljmp
push
mov
inc
icebp
imul
stos
pusha
gs
and
or
mov
adc
dec
mov
je
xchg
mov
add
loope
int
push
aas
fisubs
add
clc
xchg
hlt
sar
aaa
sbb
fs
jne
xor
lcall
or
jg
mulb
je
push
jmp
in
jl
push
cld
jle
push
adc
fbld
push
lock
sarb
lret
lret
jp
add
test
adc
in
lds
add
sbb
loope
push
fsubs
or
mov
mov
adc
lock
pop
push
mov
add
aas
ret
or
xchg
jp
or
push
addr16
jns
out
and
in
and
mov
jg
dec
pusha
rcrb
dec
xchg
ja
pop
pop
cmp
shlb
pushf
push
jns
shlb
ret
jne
push
movl
mov
lret
inc
int3
icebp
xchg
mov
enter
dec
popf
shrl
fimull
cwtl
push
popf
xlat
shl
test
lods
mov
mov
jne
xchg
mov
in
jne
cld
dec
or
test
push
push
inc
stc
shlb
push
mov
xchg
cmp
push
out
xor
addr16
shl
xor
dec
mov
lcall
pop
lcall
icebp
stos
pop
shll
test
inc
fidivrl
inc
jle
dec
in
adc
daa
xor
das
mov
mov
outsb
loope
lods
enter
test
jp
push
data16
xchg
push
mov
in
mov
faddl
daa
lds
loopne
adc
pop
loopne
dec
push
inc
mov
push
ja
push
add
sbb
xchg
lds
ljmp
mov
cltd
inc
xchg
shll
inc
mov
cld
mov
sub
pop
mov
jne
into
mov
jno
loope
les
jne
jmp
leave
cltd
fidivs
adc
and
mov
jb
les
loope
out
insb
cmp
shl
es
add
std
iret
mov
filds
push
in
and
dec
dec
push
push
inc
mov
xor
or
pusha
gs
fwait
je
jne
add
sub
pop
mov
mov
fstpl
fsubl
pop
repnz
adc
mov
mov
lcall
inc
les
sub
fisttpl
mov
scas
js
out
rcr
or
or
jge
or
add
out
and
jge
mov
leave
cmp
xchg
xchg
test
xchg
leave
call
sbb
and
das
mov
data16
cmp
sbb
dec
or
pop
out
sbb
mov
and
mov
leave
jno
andl
mov
dec
xchg
loop
sub
mov
cli
mov
pop
mov
lcall
ret
mov
mov
popl
fnstsw
cmp
push
jg
aaa
jp
xor
push
cmp
xchg
push
insl
mov
mov
xchg
lret
mov
leave
inc
jmp
xchg
loop
repz
arpl
mov
icebp
pop
pop
les
mov
sub
insb
bound
jle
mov
and
mov
or
outsl
vsubps
mov
xchg
dec
loop
aas
lds
mov
xchg
adc
push
cmp
sahf
or
jb
push
fsubrl
lret
push
int3
mov
cmp
fidivrl
leave
jge
test
xchg
dec
out
les
dec
push
ja
dec
or
jnp
dec
ja
cwtl
sbb
lds
adc
aas
lock
call
inc
xor
aas
sub
mov
xlat
xor
mov
insl
dec
cltd
fiadds
jne
je
outsb
out
andl
imul
mov
cmp
movb
xor
and
call
add
add
es
mov
mov
pop
cmp
test
mov
movb
inc
push
out
bound
xor
jge
jbe
insl
mov
dec
dec
cmp
subl
and
test
in
mov
and
ja
inc
jns
lret
test
js
adc
test
sbb
loop
or
int3
xor
sbb
adc
jo
fcoml
lcall
or
aas
or
mov
cmp
fsin
insl
leave
dec
jb
mov
loop
jne
into
mov
dec
and
or
and
les
mov
addr16
fimull
loop
negl
sub
movl
jne
jnp
cmp
adc
leave
mov
iret
testb
leave
js
repnz
fs
mov
loopne
pop
mov
popa
and
mov
cmp
popf
xchg
mov
popf
ja
and
pop
xlat
adc
lods
fiaddl
push
add
jb
je
lahf
push
push
or
dec
pushf
arpl
xor
dec
jb
repz
xchg
xchg
rol
push
or
mov
lahf
int3
fstpt
jnp
fwait
sbb
fisubrl
jne
je
pop
vpmovd2m
out
imul
mov
arpl
fs
fwait
arpl
dec
lock
rorl
fildl
leave
push
xor
adc
jmp
xor
ret
fs
push
mov
sub
out
mov
and
loope
dec
xchg
mov
push
xor
lret
or
outsl
or
les
adc
fimuls
fidivrl
inc
adc
mov
mov
mov
and
xor
pop
mov
or
loop
adc
jge
enter
arpl
aad
out
repz
mov
cld
cmp
sub
ret
movsb
inc
cltd
ret
jle
xchg
pop
fninit
push
test
sbb
inc
fistl
xchg
jbe
test
sti
je
int
pushf
arpl
xor
and
xchg
gs
pop
pcmpeqb
lahf
or
push
jge
bnd
inc
cltd
jge
sub
in
sahf
mov
mov
inc
scas
shlb
leave
aas
dec
mov
mov
pop
hlt
and
mov
bound
out
mov
arpl
or
lds
mov
js
das
jns
clc
scas
mov
movsl
leave
hlt
push
lock
xchg
adc
insl
jl
sbbl
orl
xchg
add
mov
push
aad
add
xchg
data16
dec
push
add
xchg
xchg
stc
popf
add
test
jb
je
sbb
pusha
fcomps
in
mov
lcall
aas
fildl
cmp
imul
dec
push
sub
nop
sahf
mov
jge
pop
inc
bound
into
lods
xchg
push
mov
dec
gs
pop
js
loope
sbb
or
pop
into
mov
push
incl
imul
dec
jno
mov
and
mov
mov
js
xchg
sahf
inc
inc
cmc
mov
mov
xchg
stos
inc
push
stc
xlat
sbb
aad
xor
inc
or
pop
mov
xlat
hlt
in
mov
push
pop
jbe
push
faddl
shlb
sbb
insb
push
sahf
sub
adc
mov
bound
stos
xchg
ret
fwait
ror
inc
mov
scas
stos
test
cmp
dec
orl
xchg
int
mov
mov
int
cmp
mov
loop
xchg
testl
cwtl
cmpsb
adc
push
add
jo
xchg
cmpsb
mov
dec
ret
out
ds
call
aad
bnd
cli
cmp
loopne
fsts
jbe
sub
jnp
outsl
fdivs
xor
inc
in
push
popf
jbe
shll
sub
mov
mov
lea
inc
arpl
adc
scas
add
mov
add
int3
xchg
add
shl
sbb
inc
jb
je
sbb
andl
jnp
push
daa
je
pop
inc
out
lods
ficomps
hlt
mov
lods
mov
inc
jns,pt
fildl
xchg
pop
cli
ret
out
jno
push
vdivss
push
adc
repnz
push
arpl
test
repnz
or
sbb
je
enter
sahf
and
adc
in
out
test
xor
jg
or
ret
out
sbb
arpl
inc
push
xor
bnd
add
and
mov
test
pop
add
imul
sub
repz
mov
test
push
ficompl
sbb
les
lock
sbb
cmp
cmp
popa
shlb
lahf
push
pushf
dec
movb
and
and
jle
repnz
test
enter
xor
or
test
les
ss
mov
rclb
leave
test
in
adc
sbb
sbb
mov
mov
mov
lock
test
icebp
mov
inc
or
push
mov
je
fcmovne
out
cmp
iret
leave
push
push
int3
ss
lock
out
roll
sbb
sti
dec
jle
pop
gs
pushf
jb
addr16
xor
lcall
sbb
inc
push
mov
mov
jle
jbe
aas
mov
xchg
popf
push
adc
mov
insb
imul
test
add
xchg
movsb
enter
arpl
mov
cmp
push
sbb
testb
mov
lret
jb
jne
das
sbb
scas
mov
and
test
and
aas
aam
pop
repnz
pop
jo
and
not
xor
outsb
les
and
repnz
sbb
insb
push
lea
push
or
cltd
cmp
or
or
and
jb
loopne
stos
push
mov
loope
jbe
fiaddl
mov
test
xchg
cltd
mov
push
inc
xor
push
test
loop
cmpsl
mov
mov
int3
rorl
sahf
aas
hlt
in
mov
in
xchg
mov
inc
cli
mov
inc
mov
and
and
cmp
or
icebp
push
jl
hlt
adc
pop
xchg
dec
pop
push
inc
mov
mov
outsb
sub
pop
cld
shl
std
push
dec
sbb
or
cs
jl
dec
mov
mov
insl
xchg
pop
in
mov
dec
movsb
cmp
leave
idivl
xchg
les
maxps
rcll
xor
jnp
mov
addr16
adc
mov
lret
lea
push
sub
in
movsb
ret
and
lahf
into
or
pop
popa
mov
cltd
mov
and
mov
jb
xchg
enter
push
dec
call
push
orb
test
cmc
adc
aad
adc
scas
mov
push
xor
xchg
mov
fcoms
mov
rcr
imul
xchg
adc
cmp
fists
ss
or
lcall
push
xor
stos
dec
clc
mov
lret
aam
std
outsb
sub
inc
add
jae
pop
in
or
in
jg
sahf
and
outsb
syscall
sbb
add
xrelease
inc
insl
xorl
xchg
jp
dec
data16
add
inc
popf
or
or
add
adc
mov
mov
and
xchg
adc
jg
jge
stc
pop
mov
jno
loopne
loopne
movsl
dec
jmp
sbb
pop
insb
shlb
ss
in
jb
xchg
es
cmc
mov
imul
jl
imul
sbb
jge
es
add
mov
add
xchg
jnp
fistpl
movsb
mov
mov
fidivl
jle
add
cmp
cmp
add
pop
popf
dec
jp
jge
dec
nop
jecxz
push
cmp
sub
bound
xchg
sub
fisubrl
sbb
mov
cmp
movsl
xchg
int3
lcall
dec
dec
inc
mov
je
adc
push
push
mov
sbbb
aaa
xor
or
data16
sarb
orl
mov
push
in
sbb
cwtl
test
adc
push
jp
popf
push
testl
nop
jge
int
mov
cmpsb
or
sub
xor
xchg
jnp
mov
fisttpll
adc
sbb
mov
pop
cmpsb
dec
add
repnz
jecxz
outsb
push
aad
call
fcomps
je
cli
mov
int
lock
sbb
jge
jb
outsl
lods
sub
pop
inc
mov
push
stos
add
outsb
pop
cmp
scas
push
xorb
add
shlb
mov
fistpl
lret
jecxz
push
mov
icebp
xchg
mov
inc
call
clc
sub
jae
clc
mov
in
cmp
adc
push
pop
loope
pop
mov
mov
gs
in
jb
mov
stc
or
std
aaa
out
in
lods
dec
jb
pop
xor
rorl
enter
in
mov
sahf
filds
push
leave
shlb
pop
out
out
fcoml
in
sahf
push
mov
ret
and
xor
jl
xchg
sbbb
push
dec
cmp
add
leave
movsb
push
inc
std
push
daa
dec
add
add
dec
sbb
sahf
cmp
pop
popa
and
jnp
adc
dec
jo
adc
jae
arpl
outsb
bound
adc
bound
jnp
push
jmp
subl
pop
iret
push
mov
mov
add
sbb
sub
in
inc
jl
test
push
outsl
add
xor
pop
mul
dec
and
xor
add
sub
dec
jbe
ljmp
push
int
popf
jns
push
inc
inc
or
mov
scas
or
pop
xor
orl
lea
or
add
sbb
sub
xor
test
and
fcomp
movsl
clc
in
push
es
out
insl
enter
sarl
dec
jb
loop
push
out
jmp
or
loope
xchg
dec
adc
fwait
adc
cmp
test
cwtl
push
push
hlt
sub
fildl
sub
fnsave
sahf
cltd
lea
aam
bound
pop
and
sbb
inc
xor
repnz
outsl
mov
std
loope
pop
test
sbb
stc
add
or
aam
sbb
jmpw
sbb
pop
test
arpl
cmp
or
fisubrl
inc
scas
mov
sti
sbb
insl
pop
outsb
rolb
shrl
and
mov
jle
sahf
or
and
push
rcrb
sbb
cwtl
mov
xchg
call
jns
loope
jp
cltd
jmp
adc
jmp
fnstenv
in
ret
adc
sub
push
pushf
jns
sub
push
jbe
lea
push
mov
mov
je
push
dec
push
mov
adc
jmp
cmpsb
mov
stos
pop
xlat
jle
bound
and
lcall
std
mov
sahf
repnz
push
jne
push
mov
in
dec
lods
std
adc
add
cld
lds
imul
mov
data16
xchg
fdivs
fs
setge
and
pop
or
cmpsl
test
push
sbb
leave
mov
sbb
fneni(8087
dec
jno
lcall
lds
mov
jbe,pn
popa
stos
negb
out
fimull
inc
cld
pusha
jbe
sbb
stos
arpl
adc
test
mov
pushf
mov
add
outsb
fwait
push
ficomps
or
in
jecxz
out
popf
in
pop
inc
or
es
out
jo
jae
cmp
fdivp
fcoml
add
inc
cmpsb
adc
or
gs
iret
clc
call
jbe
adc
dec
testb
cwtl
jp
push
rcrb
or
addr16
push
mov
cmpsb
mov
mov
pop
repnz
mov
outsb
jge
shll
push
push
mov
mov
adc
jb
stos
imul
fildll
fistpl
adc
loopne
add
mov
jp
mov
jmp
adc
stc
inc
pop
cmp
jge
pop
stos
pop
shl
repnz
vaddsubpd
sub
int
lahf
sub
pop
adc
xchg
xor
ss
filds
in
xchg
scas
dec
jp
mov
pop
int3
fs
add
mov
adc
repnz
xor
loope
ret
ret
or
loop
and
inc
pop
mov
fs
stos
fistpl
mov
cmp
xor
out
pop
bound
das
es
cwtl
popf
push
and
test
sahf
mov
jns
pushl
sub
add
dec
enter
clc
pop
cwtl
into
dec
jp
sahf
inc
mov
sarb
and
jp
call
add
lock
lds
fadds
repz
mov
test
mov
fnsave
push
scas
notb
jle,pt
jmp
add
test
mov
jg
bound
push
fisubrl
ja
lock
addr16
dec
out
mov
push
pop
add
jge
repnz
lds
mov
sbb
sub
sbb
adc
pop
xor
push
lds
jne
and
and
dec
push
pop
out
shlb
rclb
push
and
mov
sti
stos
out
and
pop
cmpsb
loop
out
bound
sub
pop
into
sub
push
loop
scas
cmp
dec
roll
stos
xor
lret
xlat
aad
enter
call
les
aad
sub
es
xor
fidivrs
das
clc
sub
jle
jns
cmp
popf
fsubp
cmpsb
and
into
jbe
repz
push
fisttpll
xchg
std
inc
sub
push
mov
push
or
pop
lds
mov
xchg
cmp
pop
adcl
mov
repnz
mov
pop
jne
lret
orl
sub
dec
sahf
xchg
dec
es
pop
and
daa
daa
dec
mov
movsl
int
dec
ficompl
push
popa
mov
cld
push
sbb
mov
in
sub
adc
cmp
mov
add
adc
inc
arpl
imul
add
jbe
jmp
scas
leave
sbb
ja
faddl
jmp
mov
sbbb
out
push
shll
fisttpll
xorb
sbb
fbstp
out
ret
ljmp
mov
or
imul
pushf
mov
fisubl
loopne
out
icebp
sarl
sahf
ljmp
inc
fisubrl
push
lock
stos
iret
rcrl
mov
mov
sbb
pop
push
gs
push
cmp
push
jb
test
and
test
dec
mov
or
inc
dec
repz
dec
add
test
inc
popf
jg
jbe
frstors
idivw
das
xor
sbb
mov
std
rolb
popf
and
movsb
dec
push
ret
mov
lahf
pop
in
and
lds
cmp
sub
xchg
loopne
mov
inc
xlat
arpl
andb
add
push
and
or
sbb
add
and
jne
movsl
jb
xchg
add
inc
sbb
sbb
popf
lcall
jecxz
je
or
imul
jno
xor
push
mov
and
je
mov
push
jno
repz
push
ret
xchg
addl
imul
ljmp
decl
shrl
loope
dec
scas
push
mov
aaa
scas
mov
movsb
adc
test
add
lds
ljmp
cltd
push
subb
nop
xor
adc
mov
cmp
inc
push
mov
jbe
aaa
imul
dec
std
addr16
repz
jmp
cli
lcall
mov
jno
test
fld
dec
jle
in
ljmp
cmp
in
lds
add
xchg
xchg
insb
int
xor
inc
mov
arpl
subb
xchg
lret
cmp
jle
outsb
push
push
xchg
loope
outsl
push
out
mov
das
mov
add
or
scas
mov
fadds
xor
dec
inc
mov
cmp
mov
jne
pop
lds
sub
stc
cmc
in
mov
inc
mov
cmpsb
mov
leave
insl
and
fildl
jbe
loop
mov
pop
ja
jae
jg
sbb
mov
sbbl
loop
inc
mov
ret
nop
adc
mov
pop
push
cs
jbe
ret
jb
aas
inc
mov
pop
push
cmp
mov
pusha
inc
jle
loop
faddl
arpl
jle
cmp
outsb
pop
adc
mov
mov
sbb
pop
xchg
repnz
jg
int3
in
popa
movsb
adc
xchg
outsb
mov
push
fs
loop
retw
rorb
and
sbb
ds
push
push
insl
insl
or
add
xor
mov
cmc
add
fyl2x
mov
mov
xor
pop
pop
jge
xchg
repnz
jg
or
mov
push
lret
push
add
xorb
into
incl
and
cld
fs
icebp
int3
sbb
dec
repnz
dec
xchg
inc
cmpsl
rorb
jno
jo
repz
in
fnstenv
gs
push
hlt
fiadds
pop
lods
push
les
insb
push
sbbb
mov
cmc
aaa
sbb
sahf
jle
xchg
pop
into
clc
scas
and
mov
jns
enter
adc
out
mov
je
outsl
and
inc
int
pop
mov
pop
pop
das
and
and
addr16
xchg
add
rolb
fistpll
adc
pop
push
push
jb
pop
jbe
jge
iret
xor
popf
or
push
in
jle
add
loopne
cmpsl
rclb
mov
insl
adc
cmpb
das
lods
inc
out
cld
insb
mov
jp
jo
cmp
pushf
xchg
or
test
adc
mov
mov
jge
jmp
std
orb
push
jle
xchg
or
pop
push
inc
xchg
leave
jmp
xor
push
lds
adc
inc
lret
aam
xor
add
jns
fwait
test
subl
ljmp
push
jmp
fnstenv
cli
jno
out
insl
fldl
jno
cmp
dec
push
addl
insb
sar
sub
lret
cmp
lds
mov
xchg
scas
arpl
inc
jmp
repz
inc
push
popf
dec
add
jbe
mov
scas
xor
xchg
aad
les
pusha
or
push
xchg
fisubrl
cmpl
negl
pop
push
ret
aaa
or
jle
jbe
sbb
cmpsl
push
pop
mov
aaa
aam
jb
sbb
xchg
jge
mov
loopne,pt
clc
mov
icebp
mov
test
in
pushf
jecxz
inc
fsubl
push
push
mov
movsb
test
xchg
jb
jl
movsl
iret
xor
insb
inc
inc
and
cli
sub
arpl
movsb
add
movl
inc
pop
addw
aam
cmpsb
lods
test
inc
sbb
or
adc
cltd
jnp
push
cmpsb
jge
mov
mov
insb
arpl
inc
lock
or
push
movsb
aaa
inc
pop
jecxz
push
or
ss
mov
sbb
mov
rorl
jecxz
mulb
lods
dec
push
inc
jl
scas
aad
sbb
movsb
xchg
or
fwait
idivb
add
xchg
andb
sarb
sbbl
cmpsl
es
sti
sub
fmuls
test
dec
popf
test
flds
int3
dec
lods
xchg
mov
into
adc
out
rclb
fwait
in
mov
adc
push
aam
lahf
in
movsl
popf
xlat
pop
push
add
dec
push
cmpsl
push
mov
and
test
adc
xchg
int3
lock
adc
into
dec
popf
mov
cmc
push
rorb
fwait
jl
adc
push
rorb
popf
jl
adc
push
aam
popf
lahf
jl
repnz
xchg
inc
in
andl
fsubs
dec
test
mov
je
push
lret
int3
mov
bound
rcll
adc
cli
push
xor
mov
jae
scas
add
sarl
dec
dec
popa
or
xor
test
xchg
cmc
cmc
xchg
mov
mov
xchg
mov
xchg
stc
cmc
xchg
movsb
inc
fidivrl
xchg
jmp
data16
mov
cmc
in
or
mov
pop
dec
outsl
jg
loope
test
push
dec
push
push
cmc
xchg
sbb
and
and
dec
insl
fs
and
push
cmp
push
xchg
hlt
pop
xor
push
popa
jae
les
add
daa
data16
fwait
jb
data16
sub
mov
test
add
mov
mov
lea
jno
add
pop
in
jo
lahf
adcb
subl
jg
iret
add
bound
outsl
arpl
das
jg
bound
jno
xchg
xchg
frstor
mov
xchg
cltd
roll
xchg
mov
mov
cwtl
sub
adc
sahf
push
or
insl
jnp
pop
fs
and
sbb
movsl
adc
sbb
mov
jae
sti
pop
push
fs
dec
inc
xor
std
test
push
inc
lahf
ja
incl
push
push
inc
xor
roll
push
inc
imul
jl
sahf
pop
je
mov
add
rolb
or
inc
in
ds
adc
sbbb
ret
xchg
notl
add
xchg
sbb
dec
push
fs
xchg
xor
add
lds
stos
daa
sbb
pop
in
mov
mov
es
andl
call
dec
shll
inc
xchg
orl
jbe
adc
inc
fs
inc
inc
pop
pop
push
pop
gs
inc
inc
and
xchg
sbb
mov
fsubrp
dec
add
in
addb
cld
xchg
inc
push
mov
xor
mov
mov
frstor
and
jb
add
pop
sub
cli
js
or
push
lcall
xor
adc
cmpl
push
orb
inc
stc
lock
jg
push
xor
pop
xlat
in
ja
lahf
test
push
add
addl
push
sbb
adc
add
adc
aaa
push
fildll
lods
movsl
popa
inc
mov
add
sub
divl
mov
lds
push
fnstenv
xchg
pop
sub
outsb
aas
stc
fcoms
int3
shr
jp
pop
push
inc
xor
scas
lds
roll
aam
mov
call
fdivrs
mov
in
ja
es
xchg
push
pusha
add
inc
call
jp
mov
pop
mov
push
arpl
movsl
push
push
fwait
pushf
adc
jmp
imul
pop
test
icebp
inc
xchg
lret
cs
sbb
mov
push
lds
jg
stos
cmpsb
dec
pop
xchg
ljmp
or
xchg
dec
mov
sbb
mov
int
fnstenv
popf
movsl
sbb
sbb
jecxz
mov
cld
mov
pop
movsl
pop
pop
mov
addr16
jecxz
lcall
inc
sbb
bound
leave
pop
clc
mov
jg
test
adcl
xchg
pop
push
in
fisttpl
jno
xchg
out
pushf
lock
jno
in
and
xchg
dec
xor
xchg
pop
or
gs
int3
out
jg
fstpl
pop
leave
outsl
out
push
mov
push
inc
push
dec
jg
adc
and
ret
inc
xchg
push
jne
mov
jae
sbb
sbb
into
fistpl
add
bound
push
mov
sbb
icebp
js
mov
mov
lret
mov
mov
ret
jns
adc
push
xchg
push
andl
cmp
jle
xchg
test
lret
scas
push
jno
gs
lcall
cmp
dec
adc
cli
adc
adc
cltd
movlps
xchg
fs
scas
adc
aam
add
jl
push
ficompl
add
xchg
lahf
inc
pop
cmp
xlat
push
daa
push
mov
cmp
and
jno
jno
xor
inc
repz
xchg
adc
es
jecxz
out
adc
pop
popa
inc
sbbl
xor
popa
add
adc
mov
ret
push
testb
cmp
inc
pusha
mov
pop
and
inc
mov
ja
push
push
hlt
sbb
xor
mov
jg
mov
popf
adc
out
scas
bound
out
jne
dec
inc
repnz
stc
es
loop
push
inc
sbb
inc
sbb
jp
repz
mov
test
jae
and
cwtl
mull
cmp
cmpsb
adc
aad
test
push
add
add
push
mov
pop
inc
sbb
cwtl
insb
mov
xchg
adc
jge
push
std
cmc
xor
xchg
andl
not
cltd
fcompl
cmc
adc
mov
pop
add
lods
dec
push
stos
xchg
out
test
inc
imul
xor
cwtl
gs
cli
inc
orb
hlt
add
add
test
outsb
add
out
imul
or
inc
or
test
test
jmp
adc
dec
daa
push
arpl
out
push
mov
add
add
push
adcb
mov
push
inc
int3
addl
rorb
test
clc
and
mov
xchg
lret
test
outsb
or
in
adc
lahf
in
cmp
es
jmp
sub
sbb
lret
test
add
mov
adcb
dec
xlat
test
lret
aad
push
sahf
and
popf
sbb
ja
pushf
sahf
push
shrb
or
test
in
fwait
cmpsl
push
or
or
inc
hlt
arpl
push
add
lret
fwait
push
outsl
pop
into
xchg
adc
add
sbb
xchg
scas
push
lcall
mov
sbb
mov
sarb
nop
les
popa
andl
jl
mov
pop
push
movsb
ds
pop
popf
lods
add
testb
add
ds
or
mov
mov
movsl
fdivs
insl
in
sub
mov
es
xchg
xchg
pop
adc
jmp
mov
mov
testl
jne
xor
mov
popf
out
adcb
pop
movsb
mov
add
inc
imul
lds
add
int
pop
add
pop
pop
adc
cld
xchg
inc
cli
mov
mov
outsl
cmpb
pusha
mov
test
push
popa
daa
cmp
mov
gs
jecxz
loop
fs
addb
sub
sub
push
sbb
jl
push
sub
jmp
and
cmp
pop
push
inc
mov
adc
leave
and
jecxz
in
iret
xchg
and
movsl
add
test
push
aam
insb
andb
pop
loopne
cmpsb
addb
xchg
pop
dec
add
in
testb
add
cmpsb
lret
mov
or
xor
sbb
push
add
test
aad
xor
push
subl
dec
push
movsl
mov
or
insl
and
xor
mov
addl
pop
ja
adc
adc
lret
xor
fstl
pop
je
xchg
adc
outsl
lcall
push
sub
xchg
inc
add
or
and
dec
roll
add
pop
cld
add
jne
sub
rcrb
xor
les
loop
gs
faddl
dec
add
sub
mov
and
jbe
xchg
lcall
movsl
stos
push
stos
mov
push
jmp
and
pop
sarb
or
jne
mov
out
pop
insl
scas
sub
cwtl
mov
lods
adc
push
adc
cmp
call
jl
push
add
insl
inc
inc
les
xor
flds
cmc
popa
add
shll
mov
imul
dec
gs
bound
pop
prefetch
or
mov
rolb
add
and
mov
mov
jmp
cmpsl
ret
es
mov
sub
or
mov
mov
rorb
iret
xchg
test
sub
jno
jae
xchg
daa
jge
or
mov
push
sbb
pop
int
call
mov
inc
fwait
lret
sub
call
ret
int3
inc
sbb
dec
xchg
aad
adc
addb
mov
mov
test
stos
test
push
push
subl
jns
add
lret
mov
mov
xchg
scas
adc
imul
rclb
add
dec
push
mov
mov
mov
push
dec
xlat
daa
in
and
adc
pop
lods
push
xchg
stos
cmp
hlt
gs
xchg
test
push
jmp
addr16
or
or
xchg
cmp
dec
or
bound
push
in
mov
data16
cmp
arpl
imul
in
sub
and
push
or
inc
jge
clc
add
xlat
add
add
dec
add
push
arpl
pop
dec
add
rolb
aas
outsb
jecxz
xlat
sti
aaa
push
lea
pop
gs
sub
push
dec
insl
push
enter
push
cmpb
mov
sbb
adc
int
cmp
repnz
jno
jge
fisttpll
sub
sahf
outsb
mov
pop
xchg
jecxz
addr16
mov
or
enter
ss
aas
xor
cltd
inc
mov
test
fdivs
xchg
lds
push
and
xor
enter
call
push
lods
add
pop
or
enter
push
push
inc
inc
out
and
test
mov
sub
jo
jnp
call
jo
xor
jle
popa
mov
pop
push
loopne
xchg
lock
dec
mov
and
dec
push
cmpl
jecxz
sub
test
jmp
xorb
fmuls
xchg
xchg
scas
test
adc
pop
jle
popa
sbb
or
push
call
jne
and
hlt
sahf
sbb
push
adc
add
cltd
push
push
add
dec
add
push
popf
or
jno
push
or
jno
lahf
mov
js
pop
push
pop
mov
out
insl
push
andb
loope
adc
push
inc
in
mov
inc
bound
int
lods
les
sarl
mov
in
lds
and
bound
jno
jb
push
xchg
into
pushf
cmp
movsl
push
bound
xchg
mov
sbbb
mov
repnz
sub
dec
xchg
popf
add
mov
jne
lahf
pusha
xchg
cmpsb
movsb
push
mov
xchg
xor
dec
pop
xor
int3
jae
ror
add
fists
adc
lcall
jge
lret
lret
adc
add
cmovg
dec
pop
push
scas
aaa
vandnps
iret
mov
cmpsl
sub
fiadds
out
add
ss
add
jns
or
jecxz
and
or
loopne
and
push
push
adc
inc
mov
push
mov
fcomps
and
lret
hlt
dec
andl
sahf
push
mov
push
xor
lods
and
dec
push
cmp
ss
push
lahf
adc
loope
mov
push
fldt
leave
adc
sbb
xor
in
pusha
adc
rolb
dec
adc
shrl
xor
out
inc
mulb
adc
dec
popa
das
notl
rorb
push
and
push
pop
lcall
lea
mov
fldl
sub
push
outsb
popf
adc
fcoml
sub
dec
mov
dec
sahf
cmp
insb
movsl
test
ds
and
mov
movsl
cmp
jl
cltd
or
ds
xor
in
or
jo
aad
lcall
int
cltd
addr16
xchg
inc
adc
push
pop
sbb
push
addb
mov
mov
addl
test
aam
mov
fcmovbe
inc
and
mov
and
test
in
sbb
and
loope
int
ss
dec
sbb
xor
add
add
pop
xchg
inc
push
mov
xchg
sti
je
lret
fwait
and
addb
lahf
pop
push
adc
popl
xor
js
in
sti
inc
fistpl
jbe
mov
fucomip
and
or
rcrb
int
jle
loope
loopne
pop
inc
cs
jae
adc
jp
xchg
inc
ds
sub
add
fstl
and
test
sub
jno
das
inc
inc
xchg
lods
dec
adc
clc
lahf
pop
in
loop
fstps
inc
popf
in
mov
push
add
add
repnz
sub
in
mov
pop
add
sub
arpl
mov
fcmovnu
cmp
gs
subb
test
sahf
scas
test
cli
push
inc
cmp
popf
xorl
inc
pop
sahf
inc
mov
test
add
sahf
pushf
pop
ret
sahf
inc
mov
andl
popf
lahf
je
jp
fwait
sahf
ret
push
ror
rcl
or
cmp
push
fcom
sti
cmp
fadds
lds
popf
dec
xchg
daa
je
repz
add
pop
aad
pop
xor
jno
and
dec
daa
mov
imul
rcrb
mov
outsb
pushf
les
xor
and
movsl
sub
pop
adc
int
addb
cld
jmp
push
mov
and
arpl
sbbl
jecxz
rcrl
lods
popf
into
int3
test
lret
inc
scas
sub
mov
xlat
dec
mov
push
loopne
inc
test
add
stos
dec
sbb
push
popa
add
lahf
ror
leave
iret
fwait
lods
jge
bound
arpl
xchg
nop
mov
mov
rcrl
insl
ja
xor
stos
sbb
enter
rcrb
pop
adc
ss
leave
gs
repz
popl
rcll
gs
pop
test
mov
adc
inc
enter
scas
xchg
loop
pop
jp
mov
cmc
movsl
jbe
out
ss
out
xchg
jecxz
pop
stos
fdivp
jge
lods
jo
or
mov
in
jne
ret
pop
outsl
inc
xchg
out
lds
pop
mov
xchg
xchg
loope
sub
jge
inc
sub
inc
pop
sub
cmp
jbe
je
repz
sbb
xchg
jge
popa
sbb
and
sub
jnp
xchg
pop
lods
sbb
mov
push
std
or
in
adc
lret
pop
scas
int3
int
sarl
mov
repz
int3
andl
cwtl
dec
mov
sbb
ljmp
mov
inc
inc
mov
fldenv
mov
mov
mov
mov
jns
addr16
incb
xchg
faddp
fnstsw
cli
inc
mov
xchg
add
aaa
mov
cmp
out
jno
xchg
mov
out
les
inc
push
ret
and
in
jno
icebp
push
inc
push
dec
push
and
sbb
mov
adc
xor
pushl
test
test
fsubrs
mov
bound
gs
iret
gs
pop
or
mov
in
pop
sub
pop
inc
pop
pop
frstor
jge
movl
xabort
fmul
push
enter
and
pop
add
cwtl
jg
push
cltd
jmp
push
mov
dec
cmp
push
loop
mov
je
xor
dec
lea
cltd
add
cwtl
pop
xchg
les
bound
xchg
xchg
shlb
iret
imul
jecxz
call
lock
and
test
xchg
dec
les
loope
cmc
leave
and
outsb
jl
xchg
lret
popf
sbb
ret
pushf
xor
adc
into
rorl
sub
jle
adcl
test
adc
leave
pop
mov
inc
out
and
push
cltd
dec
fistps
dec
or
movl
subb
jmp
xchg
ljmp
mov
mov
arpl
out
add
arpl
push
add
add
pop
leave
sub
jmp
jb
das
xchg
inc
add
xor
inc
sbb
cli
adc
mov
ret
push
xchg
xor
and
and
pop
jg
mov
lcall
jmp
imul
out
and
jge
ret
int
outsb
xchg
push
fwait
cmp
mov
test
lea
mov
mov
das
mov
jnp
adc
mov
adc
dec
test
sbb
rclb
add
sbb
or
test
pop
aad
inc
repnz
je
cmpl
add
int
adc
cmp
movsb
inc
add
push
mov
add
call
cmp
pop
add
xchg
cld
test
add
pop
stos
cwtl
fldl
fs
lret
ja
inc
ja
adc
mov
sub
cmp
push
lcall
add
push
jns
pop
fnsave
dec
push
adc
es
arpl
dec
inc
mov
lods
bound
dec
popf
mov
lret
fwait
sarb
push
lcall
mov
inc
es
pushf
test
popf
in
idivl
testb
inc
mov
xor
add
or
inc
es
xchg
aad
push
ja
notl
adc
shrb
add
push
mov
leave
cmp
outsb
hlt
pop
jecxz
es
add
pushf
jecxz
sub
call
mov
inc
das
mov
jmp
sub
push
and
in
jg
mov
divl
push
repnz
jae
scas
ds
ljmp
jne
xchg
jmp
adc
sub
add
out
dec
fwait
das
leave
rclb
int
inc
lahf
push
gs
sub
xchg
test
pusha
lahf
stos
sub
mov
mov
movsb
push
fisubs
dec
imul
hlt
lcall
push
sahf
mov
cmp
pop
in
jp
push
sbb
cmc
sub
xlat
push
jge
jnp
insl
mov
les
shrl
mov
dec
xor
mov
push
dec
xchg
test
cmpsl
bound
movsb
addr16
push
je
lods
sub
adc
mov
or
mov
je
mov
sbb
cmc
aaa
pop
sbb
mov
add
pop
testl
dec
push
pop
mov
sub
lret
xchg
and
aad
lahf
es
test
or
adc
push
push
test
dec
mov
sbb
aam
add
aad
add
push
orl
mov
inc
or
sahf
cmpsb
leave
or
enter
aad
inc
ja
push
shll
add
repnz
cld
push
es
pop
in
call
andb
rcrl
push
test
jp
cmp
lret
and
xchg
xchg
pop
adc
loope
sub
inc
stos
pop
xchg
pop
mov
push
in
iret
push
jg
xchg
jp
sbb
outsl
outsl
sub
addl
sub
int
addl
testl
add
jns
jecxz
inc
add
push
add
cmpb
cmp
rcrl
test
push
scas
xchg
and
subb
push
sbb
sub
enter
lahf
xor
sub
das
push
cmpl
xchg
test
sahf
lahf
inc
xor
add
lahf
lods
push
pushf
lahf
pop
fwait
lahf
int
lcall
jnp
icebp
test
push
cmp
imul
push
and
sbbl
or
push
call
stos
dec
lds
add
or
sbb
pop
push
sbb
mov
mov
movsb
lahf
xor
pop
scas
jg
mov
and
inc
pop
mov
ficoms
sbb
pop
repnz
push
xchg
xor
xlat
shll
dec
mov
mov
cmpsb
cwtl
jno
sub
inc
loopne
mov
add
push
adc
fwait
ljmp
inc
call
retw
dec
xchg
mov
in
out
sarl
shlb
outsb
pop
outsb
mov
or
pop
jae
ljmp
pop
xchg
jg
push
incb
xchg
ljmp
jno
jmp
lds
and
insb
int3
sub
xchg
inc
outsb
sbb
scas
cli
mov
out
xor
int3
xchg
add
xchg
add
inc
xorl
and
jge
jge
popf
adc
int
xchg
cmc
dec
test
jbe
inc
into
bound
dec
add
pop
ja
push
inc
es
inc
fstl
inc
sahf
or
iret
and
dec
or
les
loope
mov
sub
pushw
loope
add
cmp
std
lea
pusha
rcl
xor
jl
jg
fs
aaa
push
call
push
das
test
lahf
jmp
unpckhps
jbe
out
push
jge
and
add
subl
ret
popa
pop
inc
lcall
mov
pop
xchg
xchg
add
jp
inc
shl
mov
stc
je
jmp
inc
jg
mov
adc
daa
aaa
adc
stos
movsb
lds
cwtl
insb
adc
mov
xor
shrb
stc
out
ljmp
and
mov
push
mov
jecxz
xchg
insb
mov
ret
dec
add
mov
push
js
lahf
push
nop
aad
int
push
cmp
inc
nop
out
movsb
dec
gs
or
inc
pop
movsl
pushf
test
jl
jb
aaa
inc
ret
cli
pop
insb
lcall
xchg
es
jbe
sub
aaa
and
xchg
insl
jne
pop
and
mov
mov
and
std
popf
arpl
pop
out
lods
das
popf
mov
add
push
pop
lods
addl
inc
shrb
jno
rcr
rol
shrl
adc
and
jb
fwait
into
inc
imul
and
inc
pop
inc
out
pop
ss
jl
push
add
loope
pop
add
sti
add
faddp
incl
dec
dec
mov
dec
ljmp
adc
int3
orb
imul
xor
inc
inc
jb
pop
mov
jmp
mov
mov
test
ret
mov
inc
push
add
mov
dec
dec
popf
jg
adc
inc
xchg
fisttpl
pop
dec
mov
jp
mov
sarb
ljmp
sub
sbb
aaa
jo
xor
xor
and
inc
aaa
js
imul
pushf
xor
mov
negl
adc
clc
repz
push
push
push
sahf
out
adc
out
fnstcw
out
sbb
adc
jmp
xchg
shrb
xchg
jnp
and
test
xor
inc
adc
test
push
test
pop
std
pop
lods
enter
ljmp
inc
mov
sbbb
dec
sbb
sub
ficoml
scas
shrb
cmp
loope
fs
scas
and
loopne
arpl
dec
pop
inc
call
into
mov
adc
scas
sub
cmp
js
pop
cmp
mov
sbb
xor
negb
push
movsl
pop
cld
hlt
notb
je
push
push
push
xchg
scas
test
ss
mull
push
sub
lahf
push
movsl
jge
inc
lea
popaw
and
and
sarb
imul
and
rcrb
mov
sub
pushf
movsb
push
sub
clc
fldenv
sbb
cmp
or
or
in
mov
insl
outsb
xor
test
test
nop
imul
leave
mov
cmpsb
lcall
lahf
insb
adc
pop
push
std
mov
mov
pusha
inc
pop
fcompl
jp
push
cmp
test
cltd
arpl
push
fcoms
cwtl
fnstcw
inc
and
pusha
leave
sarb
lds
clc
shl
push
testb
pop
mov
inc
jb
scas
cmpsl
in
rorl
xchg
add
push
add
mov
addr16
mov
jg
test
cmp
mov
mov
xchg
push
add
and
dec
movsl
arpl
push
enter
mov
xchg
push
push
popl
adcb
adc
aad
dec
ljmp
call
scas
mov
pusha
or
call
jge
daa
mov
pusha
cmpsb
adc
mov
repz
mov
jge
add
lahf
cld
jl
aam
add
mov
xchg
jp
sub
out
imul
add
test
push
jo
bound
test
fimuls
xlat
jmp
dec
and
add
imul
push
rorl
fsubr
sub
adc
push
mov
pop
lret
push
pusha
leave
call
or
arpl
cmp
leave
js
push
push
xor
test
out
xlat
sbb
mov
and
pushf
test
adcl
add
mov
gs
fs
inc
fwait
jle
or
gs
addr16
xchg
dec
nop
add
jne
sahf
pop
dec
jge
sub
movsl
sbb
pop
sbb
decl
xlat
xchg
xchg
outsl
cmp
ret
sub
test
mov
in
jl
push
sbb
insl
and
arpl
cmp
popa
sti
adc
jnp
lcall
cli
std
push
sar
push
xor
fidivrl
pop
fwait
dec
xorb
imul
push
mov
in
or
dec
in
push
les
mov
jns
stc
inc
push
test
push
dec
cmp
jl
and
xlat
enter
push
mov
xlat
inc
sahf
idivl
adc
ss
xchg
jns
popa
cmp
shr
mov
inc
shll
cld
sbb
bound
or
ss
mov
xlat
xchg
fucom
mov
inc
clc
scas
aam
mov
ficomps
js
push
and
xchg
call
js
scas
cmp
cmp
adc
adc
or
push
hlt
shll
or
fs
aam
mov
bound
mov
mov
out
add
dec
jno
cmp
inc
dec
push
mov
outsl
into
and
adc
loop
sbb
or
fs
adc
mov
in
loopne
jge
push
and
ret
fistpll
dec
mov
jge
ret
push
dec
cmp
daa
test
add
inc
jne
outsb
frstor
outsb
hlt
dec
popa
sub
cmp
cmp
mov
xorl
call
iret
xlat
ret
cltd
sahf
xchg
int
jp
push
andl
mov
add
add
mov
mov
bound
xor
gs
in
cmpsl
dec
mov
add
inc
jnp
lock
scas
cs
icebp
mov
mov
ret
sbb
imul
ret
add
cmp
fadd
inc
jns
sub
inc
adc
add
cmp
mov
aam
ljmp
lds
sub
inc
and
call
aas
rorl
pop
imul
rcrb
mov
inc
vpcmpeqb
aam
and
inc
aam
nop
lret
dec
fldl
scas
add
pop
mov
xor
xchg
cmpsb
aad
lds
in
push
sub
fwait
jno
xchg
jmp
movsl
mov
loope
push
push
sbb
test
jne
in
mov
stc
jmp
or
loope
clc
push
add
in
lods
pop
sbb
inc
mov
cmp
dec
sbb
cli
into
or
or
cmc
cmp
sbb
popa
sarb
loope
inc
xchg
sub
inc
sbb
lret
leave
pop
push
cltd
daa
mov
rcl
xchg
adc
stc
pop
xchg
mov
rcll
roll
test
nopl
mov
push
dec
cld
test
pop
adc
xchg
repz
xlat
lret
and
arpl
iret
decb
lahf
arpl
jnp
sbb
and
icebp
mov
mov
xlat
insl
add
mov
pop
stc
dec
push
dec
mov
push
shll
aam
dec
or
jp
push
add
aad
adc
mov
in
gs
xchg
imul
pop
in
dec
les
test
mov
xchg
add
pop
test
daa
mov
fdiv
gs
jmp
gs
std
inc
push
add
sbb
int
push
daa
cld
xor
nop
fmuls
daa
jl
clc
push
test
cmp
or
faddl
sbbl
jns
and
add
xlat
mov
and
add
icebp
inc
in
gs
pop
or
add
loopne
xchg
mov
inc
pop
sbb
cmp
das
lods
sbb
mov
push
or
test
jl
push
dec
popf
mov
sbb
pop
jno
ret
lret
flds
popa
and
cli
cmp
loope
lock
and
xchg
push
inc
pop
mov
fcoml
pop
movsb
push
and
push
sbb
fistps
pop
add
lea
cmpb
scas
inc
mov
push
into
sub
pusha
in
jge
adc
repnz
xchg
adc
dec
fadds
adcl
fmull
sbb
in
loop
shlb
mov
test
out
push
lahf
xchg
pop
mov
mov
loop
fistpl
mov
add
pop
bound
out
addl
cwtl
insl
fidivl
cmpsl
ljmp
std
xchg
or
lcall
add
and
jp
arpl
mov
enter
les
xchg
inc
cmp
sbbl
add
pusha
add
pop
pop
mov
xor
xchg
imul
nop
add
fadd
inc
mov
shrl
ret
into
andl
sbb
arpl
dec
cltd
mov
inc
add
add
or
loope
mov
push
push
push
sub
fistl
aad
aad
add
aad
hlt
fimuls
inc
aad
test
mov
xchg
hlt
pop
repz
scas
xchg
jl
adc
test
jns
lea
fs
addl
inc
inc
addl
insl
lret
enter
pop
ljmp
add
sbbb
in
lods
shr
add
popf
sbbb
add
shlb
hlt
fadd
cwtl
cld
std
addl
test
cli
aam
or
pusha
stos
or
xor
inc
out
lahf
jge
aaa
fisubs
push
js
cmp
push
push
adc
mov
push
inc
adc
andl
pop
cmc
push
mov
mov
jmp
dec
push
mov
movsl
sbb
jge
xchg
into
xchg
push
scas
aad
dec
loope
jmp
or
in
insl
inc
lret
cmc
lds
scas
adcb
add
add
xchg
add
mov
mov
mov
sub
andb
or
jle
cmpsb
mov
push
mov
test
call
imul
inc
add
mov
adc
sbb
mov
xchg
pop
push
pusha
nop
sub
adc
in
jecxz
enter
cwtl
insb
push
icebp
xchg
arpl
fidivl
addb
hlt
adcb
test
les
or
mov
mov
push
or
pop
aad
addl
xor
rcrb
notl
outsl
pop
test
leave
mov
xchg
cmpsl
mov
sub
int3
xchg
out
lahf
add
popf
enter
pop
xor
je
mov
lahf
add
pop
call
arpl
lods
cli
jl
inc
lds
repnz
rcll
xor
mov
mov
pop
jnp
xchg
add
add
popf
xor
sbb
lock
push
popf
loop
clc
push
add
popf
fisttps
add
sub
cmp
mov
add
dec
shlb
fdivl
jle
in
mov
test
icebp
or
inc
mov
inc
mov
test
and
popa
push
jecxz
repz
sub
push
lock
pop
adc
add
jnp
adc
add
xchg
scas
and
imul
test
push
sbb
lcall
iret
adc
and
sbb
xchg
sub
adc
mov
out
sbb
jmp
inc
push
cli
iret
xor
push
shrl
jmp
cmpl
mov
fstpl
fdivr
xor
lcall
fldt
jae
inc
push
pop
int
sub
cmp
ljmp
add
aas
mov
dec
add
sbb
pop
call
or
sbb
jg
sub
daa
sbb
fistpl
mov
xchg
xor
imul
imul
and
mov
cltd
push
push
pop
xor
in
cmp
pop
add
mov
je
das
jl
push
mov
fildl
jno
and
lcall
gs
imul
rolb
mov
in
cli
gs
bound
push
pop
lds
dec
icebp
xchg
sub
aaa
out
push
leave
popa
mov
sub
je
andb
dec
je
add
stc
shr
nop
sahf
add
addr16
shrl
or
fwait
aam
mov
mov
ret
andb
add
jp
gs
and
sbb
rcll
icebp
jge
scas
sbb
sbb
xchg
inc
in
pushf
imul
ret
imul
addl
xchg
push
xchg
add
rorl
pop
push
or
decl
out
mov
pusha
lcall
push
fs
es
jle
cmp
lahf
arpl
inc
sbb
push
push
mulb
sbb
push
cmpsb
jle
icebp
addr16
add
int
inc
test
popw
test
orl
incb
std
gs
and
andl
fisubrs
fisubl
into
jns
stos
hlt
mov
nop
iret
das
mov
adc
sub
xlat
out
xchg
daa
out
cmp
mov
loope
inc
cmpl
lahf
smsw
or
and
pop
jns
or
dec
or
out
divb
pop
mov
mov
pop
daa
xlat
sub
mov
fsubr
sub
adc
push
movsb
or
addl
sbb
adc
adc
jge
leave
sub
mov
stos
pop
sbb
lds
imul
mov
push
dec
jne
loopne
inc
sbb
js
or
ja
inc
pop
outsl
sbb
pop
dec
pop
or
in
aas
push
in
pop
dec
fistps
mov
inc
push
sarl
add
and
fdivp
arpl
inc
lea
adcl
pop
inc
icebp
pop
cld
cmpsb
mov
rclb
fcoml
pop
int3
ja
out
pop
mov
enter
jne
inc
shll
pushf
push
adc
mov
sub
pop
stc
sbb
sbb
mov
inc
push
mov
cmpsb
pop
push
out
out
icebp
mov
xchg
test
inc
int
mov
movl
inc
insl
or
push
rol
adc
add
les
jno
gs
test
adc
call
xlat
daa
adcl
rolb
in
insb
lret
int3
jno
fistl
jns
pusha
out
int
inc
in
iret
cwtl
incl
enter
mov
mov
data16
repz
xchg
dec
inc
lret
mov
and
andb
dec
imul
push
pop
fisubl
dec
movsb
ds
cwtl
xor
loop
add
xchg
add
add
aaa
loop
xchg
add
push
add
mov
ja
cmp
clc
pusha
sbb
enter
stc
mov
pop
mov
das
jg
andl
dec
xchg
movsl
mov
sub
or
mov
add
lret
jge
dec
cld
repz
mov
xchg
or
aam
or
test
pusha
mov
pop
sub
xor
mov
out
mov
pop
mov
in
sbb
lcall
mov
sub
scas
in
mov
mov
roll
mov
subl
outsl
loope
inc
out
xor
cmp
sbb
xchg
and
push
cli
test
fsubp
test
and
cwtl
test
or
push
mov
repz
daa
pop
mov
pop
lds
test
xchg
add
cs
lds
movsl
cli
and
dec
cltd
pop
in
sbb
int
xor
sarl
mov
lret
pop
sbb
rorb
outsl
cli
pop
insl
mov
dec
pop
dec
lods
inc
cmc
add
pop
inc
mov
add
inc
lret
xorl
sub
dec
ja
test
fnstsw
push
test
adcl
mov
out
imul
outsl
adc
push
std
pop
sahf
and
jmp
daa
loope
mov
mov
stc
or
lret
dec
jno
inc
inc
movsl
jns
xchg
test
repz
out
aaa
loopne
xor
cmp
pmaxub
jns
pop
ja
add
imul
push
loopne
testl
cmp
int
mov
adcb
push
dec
clc
and
xchg
vpunpcklwd
add
addr16
out
daa
xor
xchg
aaa
adc
ja
mov
aaa
repz
orl
stc
ja
pop
push
xchg
cmp
test
aam
lds
inc
cmpsb
pop
mov
repz
xchg
call
inc
jmp
hlt
je
add
push
arpl
mov
loop
pop
mov
fs
rcrl
fistpll
into
stos
loopne
outsl
dec
dec
xchg
pop
jbe
add
cmpsl
sub
push
mov
arpl
mov
xor
insb
aam
mov
jecxz
jns
fildll
mov
fsubs
mov
cwtl
adc
mov
sbb
test
loope
scas
or
sub
pop
inc
add
lock
cs
sub
mull
add
xor
in
cli
dec
imul
testb
xchg
test
adc
cmc
adc
popl
bswap
pop
popw
ljmp
out
cmpsl
shll
movsl
jo
decb
jo
add
mov
xchg
lods
in
ja
dec
inc
jmp
mov
lock
stc
lods
scas
stc
adc
loope
pop
jmp
test
popa
mov
push
adc
repnz
in
xchg
gs
test
inc
sub
jl
mov
jg
addr16
pop
cmc
ret
push
fs
loope
movb
test
enter
xor
jmp
sub
movsl
sbb
sub
inc
out
mov
push
dec
cmp
push
leave
push
dec
into
xchg
mov
add
inc
push
inc
daa
xchg
push
fimull
push
leave
aam
bound
outsl
mov
fsubl
adc
xchg
rcr
add
jne
sti
pusha
and
mov
mov
fsubrp
gs
cltd
xor
pop
ds
cltd
mov
xchg
iret
sub
mov
push
enter
push
inc
adc
jmp
negl
fdiv
or
sub
ss
or
mov
sbb
repnz
sub
jle
fidivrs
fs
pop
gs
int3
test
scas
test
jbe
or
jmp
jmp
mov
loopne
push
push
sbb
dec
outsl
mov
cltd
mov
push
stos
mov
sub
sbb
mov
xchg
mov
sub
mov
test
inc
dec
and
cmp
add
into
cld
cmp
popa
push
xchg
out
daa
mov
pop
icebp
cwtl
jmp
mov
fstpt
scas
or
mov
push
cmp
xor
arpl
mov
pusha
inc
shlb
aam
addr16
xor
fs
push
jmp
jne
pop
aad
add
xchg
jns
inc
cld
add
fucomp
rolb
push
push
mov
popa
jge
cld
pop
add
in
cmp
inc
daa
fnstsw
mov
or
push
movsl
jecxz
sbbb
mov
push
push
and
adc
mov
xchg
sar
sarl
adc
fdivrs
sub
jae
push
fstl
mov
idivb
out
mov
push
mov
xchg
divl
and
and
test
enter
fs
mov
test
dec
sti
push
cld
pop
ja
int
inc
jmp
adc
jge
push
or
adc
xor
xchg
jp
or
mov
popf
idivl
and
fidivs
pop
adc
popa
test
or
cmp
add
sub
cli
dec
pop
mov
mov
lcall
fcoms
cmp
cmpb
add
jns
hlt
loop
cmp
daa
push
jno
and
cmp
scas
sarl
dec
cmp
jecxz
loope
adc
loopne
int3
xchg
xchg
test
adc
mov
popf
fcomip
push
test
outsl
push
gs
iret
negl
sbbl
les
addr16
iret
out
insb
aad
sbb
lea
lods
js
cmp
cmc
xorb
jl
les
inc
dec
testl
roll
pop
cmc
popf
inc
adc
pop
xchg
jp
or
pop
add
ljmp
jbe
mov
push
bound
xchg
test
or
mov
or
test
mov
lcall
or
add
xorb
or
and
pop
aaa
push
bound
sub
xor
pusha
movsb
movsb
push
and
adc
and
pop
xchg
mov
mov
pop
add
aam
or
add
mov
sahf
adc
adc
aad
clc
adc
push
pop
test
popf
or
cld
sub
sarb
jnp,pn
sbb
fstps
lea
sub
test
push
ja
es
push
adc
ds
cld
daa
inc
lea
scas
subl
and
aam
sbb
repz
movsl
rorb
inc
mov
sbb
xchg
and
int3
inc
inc
popf
jecxz
xchg
imul
arpl
fiadds
xor
out
xchg
notl
insb
movsl
je
gs
pop
cs
les
out
push
ret
clc
mov
dec
xor
test
repnz
pop
int
imul
adc
subl
adc
xchg
pop
mov
push
mov
dec
movsl
pop
cmp
lret
inc
push
push
sbb
sbb
insl
push
sub
inc
jp
cmp
cmpsl
cmp
gs
cld
fstl
mov
inc
inc
fmull
push
je
test
out
aam
testb
push
incb
or
cmp
aam
lahf
fdivrl
xchg
lock
add
jmp
or
xchg
nop
scas
mov
add
xchg
xchg
test
adc
dec
leave
pop
shll
fiaddl
notl
pop
push
cmc
mov
lea
scas
fs
pop
out
push
sahf
gs
repz
sahf
rol
inc
mov
add
inc
lret
xchg
mov
adc
roll
jns
or
sti
inc
mov
scas
andb
shl
lcall
test
or
lds
cmp
mov
aas
les
aad
and
sub
xor
es
jp
mov
nop
add
push
xchg
nop
sub
es
push
mov
dec
shlb
inc
xchg
ja
push
push
enter
push
mov
scas
pushf
ret
push
int
test
popa
xlat
decl
sarl
or
daa
ljmpw
ds
xchg
inc
in
pop
xchg
push
ret
cli
lods
mov
sbb
out
ja
jl
xchg
adc
add
xchg
roll
cwtl
jp
xchg
push
lods
sarb
xchg
popf
daa
cmp
xchg
cmpl
aaa
arpl
sub
push
cmp
loope
bound
push
sahf
and
jp
jmp
aam
and
enter
or
iret
jne
ljmp
sbb
jne
cli
aam
add
dec
mov
cltd
cmc
aaa
push
stc
mov
cmpsb
enter
and
mov
pushf
ret
pusha
push
scas
cmp
bound
aam
pop
fstl
mov
mov
out
mov
std
jmp
ret
insl
popa
test
xchg
adc
sbb
cwtl
cmpsb
fisttpll
jge
ja
or
in
or
adc
pop
insb
mov
stos
push
add
ljmp
in
inc
scas
jge
add
js
sub
daa
dec
pusha
push
fsubl
mov
lock
mov
xchg
and
daa
jl
mov
lret
notl
xor
dec
cmp
push
sub
popf
cltd
jne
test
pop
int3
sbb
pop
sbb
jge
mov
or
push
dec
xchg
sub
pusha
test
insl
lods
movaps
repz
cltd
xorl
pop
inc
push
pop
insl
in
dec
and
inc
mov
cmp
adc
mov
pop
outsl
enter
or
fbld
add
into
icebp
sub
add
lahf
dec
and
push
pusha
leave
scas
xchg
xor
icebp
int
pushf
jp
jle
shll
scas
loope
int
mov
enter
push
sbb
jns
mov
add
incb
leave
incl
push
aaa
icebp
sub
jns
repnz
loopne
mov
js
pop
shr
sti
add
mov
test
loopne
sbb
cltd
jmp
pop
pusha
xlat
or
jmp
rcl
xchg
xor
rclb
arpl
test
pusha
popa
pop
inc
cmpsl
icebp
test
bswap
or
sbb
inc
and
es
push
ljmp
popf
sbb
push
cs
jge
cmp
pushf
mov
lret
outsb
mov
cmpsb
ficoms
pop
push
and
mov
lods
data16
pop
call
mov
cwtl
inc
pop
fs
aaa
int3
outsl
dec
cmpsb
dec
mov
icebp
cmp
inc
inc
push
dec
bndstx
adc
jg
push
push
xchg
pop
add
jo
xor
pop
lret
mov
and
jmp
sbb
sar
test
or
xor
xchg
psubd
mov
jno
jle
addr16
ud0
addr16
movups
mov
dec
pop
nop
push
pop
mov
mov
mov
adc
mov
dec
imul
lock
or
addl
jge
aam
xor
push
mov
xchg
sub
or
fistpl
inc
test
in
xchg
mov
and
ret
cmpsb
dec
adc
xor
mov
push
jl
dec
and
jl
out
mov
test
mov
imul
int
ret
pop
dec
push
popf
rol
pop
pop
or
cmp
or
lcall
div
int3
mov
or
test
gs
stos
call
scas
cmpsl
into
rclb
push
dec
fincstp
stc
rolb
cld
push
dec
jge
xchg
sahf
in
cwtl
sub
or
std
cmp
sub
ss
lcall
cmp
add
cmp
mov
mov
idivb
adc
mov
out
das
in
cmp
into
mov
outsl
fmull
ja
pop
xor
pop
dec
push
xor
jecxz
outsb
jns
xor
mov
es
ljmp
add
cli
inc
mov
fadd
inc
or
mov
jmp
xor
push
rolb
mov
xchg
or
repnz
loope
mov
push
mov
xor
bnd
pop
int3
testl
and
loopne
les
mov
dec
and
les
sbb
sbb
xchg
fldcw
or
into
jnp
xchg
aas
dec
mov
outsl
popf
mov
lods
shlb
nop
jecxz
leave
aas
icebp
mov
movsb
mov
sbb
cs
cmp
xchg
or
sub
xor
idiv
or
lds
les
aaa
dec
test
add
out
inc
jae
push
cmpsl
xchg
shl
stc
adcl
mov
les
inc
subl
int
add
mov
or
dec
dec
lcall
inc
inc
cmp
jne
sub
jnp
sub
mov
mov
cltd
dec
mov
cmpsl
add
push
add
ss
cltd
movsb
ret
and
dec
es
call
mov
fldl
xchg
mov
xor
test
jb
mov
pop
shll
repz
pop
jge
push
dec
in
imul
mov
dec
data16
ss
mov
cmpsl
popa
js
pop
push
leavew
or
fisubrl
movsl
sub
add
imul
mov
adc
pop
jno
push
cmp
sbb
ds
push
data16
insl
cwtl
js
andb
sub
cmpl
sbbl
pushf
xor
div
push
inc
mov
ss
jno
xchg
adc
or
jmp
sbb
insb
inc
pop
xchg
in
push
mov
jbe
call
jle
jge
dec
pop
add
push
or
and
mov
or
pop
bound
out
lods
jle
shufps
cmp
dec
mov
pop
aad
jbe
addb
mov
cmc
cmpsl
inc
fwait
in
xorb
mov
cltd
daa
jp
pushf
xlat
pop
in
push
lahf
xorb
addl
jnp
addb
mov
inc
outsl
punpcklwd
mov
mov
pop
pop
adc
push
arpl
jae
jp
adc
push
sbb
test
in
ss
push
in
in
sbb
dec
fwait
add
pop
stos
loopne
testl
or
add
aad
xorb
loop
js
xchg
adc
cmpsl
shll
mov
xor
and
into
jbe
push
push
xor
popf
out
pop
popf
push
les
lahf
mov
jo
adc
cmp
pop
lret
push
mov
popf
xchg
add
outsb
mov
daa
sbb
in
jb
scas
adc
sbbb
subb
arpl
adc
test
leave
movb
lahf
lcall
bnd
adc
lahf
jg
popf
loopne
lock
push
mov
es
mov
cmp
mov
outsb
xchg
rorb
jle
jno
fs
mov
mov
lahf
stc
inc
repnz
cmp
mov
icebp
sahf
xchg
jbe
loope
push
jb
inc
lcall
jecxz
mov
inc
pop
out
pop
cmpsb
fimull
lret
movsb
test
mov
push
push
out
push
int
repnz
push
mov
addl
out
sbb
aaa
fbstp
and
int
mov
repnz
or
add
lods
lea
push
mov
push
dec
or
int
fstl
jae
ljmp
popf
add
adc
mov
mov
xchg
pop
mov
push
lret
pop
std
inc
les
mov
inc
jbe
cltd
test
adc
add
push
and
pop
int3
fs
in
xchg
bound
cmpb
and
daa
aas
lahf
or
ffreep
add
test
adc
inc
or
repnz
test
shrl
lcall
and
lea
in
push
pop
ror
dec
adc
inc
jb
das
pop
into
popf
mov
ret
add
adc
sbb
test
je
pop
or
call
and
xchg
adc
mov
pop
jbe
adc
addb
xor
xor
push
push
mov
in
inc
out
lds
es
popf
cmp
jge
loope
add
mov
movsb
lods
movsl
addl
inc
movsl
inc
cmpsb
pushf
rol
into
inc
push
inc
in
movsl
rcrl
adc
out
mov
jnp
dec
insb
push
sbb
inc
mov
adc
dec
test
jno
icebp
sbb
inc
or
mov
xchg
jne
js
xor
outsb
sub
repnz
das
int
inc
xchg
notb
cld
rolb
aaa
subl
popl
inc
xor
aaa
xchg
mov
popa
stc
subb
xchg
xchg
rorb
dec
xchg
je
or
mov
pop
and
sub
lcall
cmp
add
cmp
xor
add
push
sahf
test
xchg
add
mov
adc
rcll
icebp
in
or
rcll
pop
xchg
sbb
mov
test
out
mov
testl
aam
ret
inc
es
push
lds
inc
sbb
xor
mov
add
mov
jg
adc
pop
add
mov
or
ror
fs
sbb
sahf
cmp
add
inc
jno
xor
fsubl
std
xchg
inc
push
mov
sub
xor
pop
outsl
or
mov
cmc
sbb
jmp
xchg
inc
rorl
cwtl
mov
xchg
push
dec
pop
aad
rcrl
ficoml
mov
push
call
sbb
test
shl
incl
pop
test
je
dec
mov
add
xor
frstor
add
cmp
or
dec
and
mov
shlb
mov
insl
sbb
push
pop
enter
data16
mov
call
out
push
mov
leave
adc
inc
xor
inc
xchg
movl
mov
dec
push
or
cli
push
sti
mov
pop
inc
jbe
xchg
test
inc
pop
jne
xchg
test
push
rorb
inc
pop
push
xchg
adc
mov
xlat
pop
mov
adc
repnz
addl
bound
xor
imul
xchg
inc
dec
stos
jb
push
adc
jbe
jns
test
imul
or
cli
push
dec
cwtl
fs
mov
cli
pusha
push
cmovbe
inc
sbb
push
and
nop
lea
icebp
jge
adc
push
dec
gs
repnz
inc
mov
stc
inc
pop
and
jns
adc
decb
jmp
test
fstl
insl
es
loope
mul
push
popa
or
xchg
sbb
xchg
call
in
inc
jl
jle
cs
adc
jle
addl
jge
test
push
lret
pop
rorb
ja
add
adc
jae
fcmovnbe
pop
popl
call
test
mov
dec
cbtw
daa
xor
mov
jae
frstor
in
xor
push
loope
cmc
lahf
inc
sub
aas
add
test
mov
dec
and
andl
shlb
mov
pushf
test
in
bound
and
fdivrs
xor
xchg
orb
int
in
stc
or
test
push
lds
lea
adc
cmpsb
cli
jge
bound
arpl
repz
adc
mov
add
xor
daa
test
arpl
movsb
or
sub
push
movsb
loope
mov
mov
mov
mov
dec
out
adc
aam
xchg
mov
xor
subb
repnz
outsl
add
loope
adc
lock
filds
sbb
out
cmp
mov
and
push
cmc
jg
jns
in
mov
add
repnz
push
lods
mov
dec
pop
mov
inc
or
fs
enter
les
cmp
add
jmp
ds
xchg
fs
popf
jns
jg
arpl
es
out
sbb
loop
inc
test
dec
loope
add
mov
xor
stc
fdivrs
jne
and
adc
imul
mov
fstl
insl
dec
cld
inc
add
int
push
mov
ret
xchg
sbb
lea
jp
push
or
jge
and
outsl
or
jg
mov
inc
imul
cli
jecxz
xchg
fs
push
add
and
jns
dec
push
jecxz
nop
or
cltd
push
inc
clc
sbb
inc
jb
rorl
jge
movb
outsb
add
jno
xor
and
mov
enter
xchg
flds
push
sub
in
fstpl
test
enter
or
cltd
pusha
mov
xchg
jbe
int
test
adc
and
dec
jne
rolb
sub
int
popa
es
loope
pop
push
mov
sbbl
sbbb
jns
adcl
mov
push
addr16
pop
decl
push
lods
je
sub
dec
inc
mov
test
sub
mov
xchg
cmc
xor
xchg
cwtl
xor
imul
clc
sbb
add
mov
sub
or
divb
add
lcall
dec
jbe
stc
or
cmp
push
inc
add
movaps
aaa
add
or
sub
dec
das
push
sbbl
fisubrs
add
or
jae
fists
cmc
cmp
jbe
test
inc
inc
outsb
add
inc
dec
mov
mov
dec
mov
adc
jg
sti
adc
fiaddl
mov
and
add
lea
into
jg
imul
add
notl
dec
lds
push
xchg
aaa
adc
inc
lar
inc
addl
adcb
dec
pop
es
enter
sbb
stos
cmp
movsl
jno
and
mov
and
jbe
dec
lcall
add
xlat
loope
mov
es
lcall
jae
and
fistps
pop
sub
jp
push
jmp
dec
ss
aam
or
inc
push
mov
mov
inc
adc
sbb
or
jns
sub
push
inc
dec
inc
sahf
mov
rorb
aad
mov
lcall
cmc
cmp
or
jbe
jmp
or
pushf
test
notl
test
in
xchg
sbb
cmp
or
clc
cmpsl
push
fs
ljmp
outsb
inc
push
inc
inc
cmc
popa
push
jne
test
testl
push
dec
pop
inc
repnz
sub
add
test
bound
jno
xor
dec
mov
push
mov
lret
bound
adc
lock
push
mov
add
mov
dec
les
in
into
inc
movsl
pop
pusha
xor
or
cmc
nop
rcrb
add
inc
into
clc
addr16
scas
fnsave
jg
ljmp
outsl
add
jae
shlb
and
pop
outsl
adc
xlat
sbb
rcrl
add
cltd
and
push
sbb
cwtl
aad
cwtl
sub
sbb
bnd
jnp
push
sahf
out
push
inc
jns
push
xchg
fs
adc
cs
fdiv
enter
fldenv
add
enter
movsl
xorb
pop
xchg
jb
inc
addr16
sbb
xchg
popf
mov
bound
fisubl
add
lea
bound
pusha
xchg
outsl
dec
xchg
add
lcall
in
add
and
ret
pushf
or
dec
test
inc
sub
pop
fwait
pop
fs
daa
mov
fists
inc
ret
imul
std
xchg
jae
or
test
pop
add
dec
ds
dec
mov
test
sub
leave
push
decl
push
repnz
xchg
cmp
mov
cltd
movb
dec
sub
rep
lcall
cmp
imul
sub
orb
mov
std
adc
add
dec
pop
jbe
xchg
in
dec
xchg
and
jle
xchg
pop
and
sbb
cwtl
insl
sub
cltd
shlb
push
bound
jbe
adc
fs
xor
mov
icebp
cltd
xchg
pop
pop
xchg
outsb
mov
nop
shlb
test
pop
test
cltd
mov
mov
repnz
xchg
sahf
inc
imul
jne
mov
dec
mov
inc
jne
xor
aas
test
pop
push
lds
add
mov
test
aas
daa
dec
andb
daa
jb
push
popa
lahf
or
jle
xchg
add
outsb
dec
mov
in
fildll
mov
or
push
in
insl
in
sbb
pop
cmpb
cwtl
lds
push
jbe
mov
cmpsl
xchg
imull
lea
xchg
push
addr16
inc
addl
push
cltd
inc
push
popa
mov
pop
and
cltd
fimull
adcl
inc
rcrl
cltd
push
push
inc
lret
mov
xchg
inc
aaa
sbbb
inc
daa
ss
xchg
cmp
je
fimuls
data16
sub
test
mov
dec
stos
push
xor
bound
xchg
dec
xchg
mov
jbe
jne
lods
adc
jae
push
mov
popa
xchg
inc
mov
dec
jle
aad
ds
outsb
syscall
jns
mov
dec
ret
arpl
push
std
out
movups
sbb
add
inc
into
dec
daa
push
xchg
mov
lea
outsb
dec
push
xchg
jmp
mov
stc
shlb
cmp
dec
ds
jl
pusha
jb
push
enter
mov
xlat
adc
cmp
add
xor
nop
dec
inc
jae,pt
cmp
and
mov
push
movl
sub
cmp
jl
pop
subb
test
mov
outsl
sbb
adc
lahf
mov
repnz
mov
leave
pop
test
cmp
je
dec
or
and
add
push
pop
cmp
mov
shl
lcall
into
adc
ss
ret
mov
mov
fucomip
pushf
imul
jle
lock
jge
bound
gs
mov
aaa
andb
je
daa
add
out
cmc
inc
int
rorl
jae
cmp
lea
stc
fs
in
pop
push
int3
gs
sbb
sahf
cmp
mov
add
cltd
and
out
push
push
xchg
lods
xchg
sub
and
sbb
mov
jg
into
add
xor
add
jno
cwtl
aas
xchg
daa
mov
pop
ficompl
out
in
lret
jb
aas
jle
cmp
clc
dec
inc
repz
jne
ret
pop
and
icebp
frstor
mul
add
out
inc
mov
xchg
sbb
dec
xchg
jmp
test
push
test
cli
jp
xlat
mov
pop
jge
movsl
push
out
xchg
or
adc
mov
mov
mov
int
mov
out
jnp
cld
jne
gs
or
push
movl
push
dec
and
jecxz
std
popa
popa
popf
enter
or
xchg
sarl
jb
sti
popa
jo
xchg
ret
sbb
and
xor
test
and
xchg
mov
sub
int3
add
adcl
cmp
push
xor
test
outsl
push
or
sahf
shlb
cmc
jae
das
cwtl
punpckldq
test
push
cld
xor
pop
xchg
ret
push
and
shlb
pop
js
icebp
push
ret
dec
jge
sub
add
dec
jmp
in
rcr
jo
jnp
popf
ret
mov
push
add
or
pushf
mov
popf
loope
lcall
leave
ret
xor
lcall
xchg
pop
jl
je
mov
add
mov
in
pop
outsb
mov
sbb
jbe
bound
adc
addr16
std
push
out
cwtl
adc
dec
and
push
sahf
cmpsl
int3
add
fsubl
pushf
jb
fsubrs
sbb
sbb
fcom
cmp
sub
cmpsb
pusha
aam
enter
fcmovb
movsb
scas
popf
or
inc
hlt
pop
push
adc
xor
hlt
or
jae
test
ret
pop
add
cmp
movsb
jmp
push
sub
fcomp
pop
inc
xchg
jne
dec
test
jmp
pop
dec
call
push
or
loopne
inc
aas
into
jno
stos
and
push
xor
add
pop
jne
dec
sbb
xchg
and
pop
xor
mov
imul
into
lret
aaa
call
hlt
imul
sbb
push
xchg
inc
push
xchg
testl
mov
lea
sbb
adc
dec
icebp
lock
mov
flds
roll
ret
xor
pop
loope
hlt
xor
mov
outsb
adc
jbe
mov
test
cltd
xchg
mov
fnstcw
xchg
xchg
dec
or
jge
cmc
inc
in
ret
fists
lret
jne
fldcw
fwait
rcrl
push
jno
inc
lcallw
test
xor
ja
bound
fwait
mov
jnp
into
push
fimuls
cmp
loop
dec
icebp
jnp
sbb
jne
adc
in
sbb
cmp
pop
mov
iret
pop
sti
push
adc
cmp
shll
pop
orb
repz
inc
cwtl
mov
xchg
ljmp
out
jg
cmc
test
jmp
mov
xor
out
fisttpl
inc
stos
push
mov
pop
push
xor
cmpsl
adc
enter
lcall
outsl
aaa
jecxz
aad
inc
adc
stc
fsubrs
in
mov
addb
imul
roll
inc
aad
or
in
enter
mov
aaa
test
push
rcr
cmpsl
adc
out
push
jl
aad
out
repnz
daa
mov
mov
push
jmp
add
mov
inc
popf
or
add
mov
mov
sub
jecxz
andl
inc
cmp
adc
or
je
mov
flds
push
add
cltd
cmpsl
mov
add
sbb
sbbb
mov
cmpsb
xor
jmp
repz
movsb
jg
fwait
jp
sti
xchg
test
xor
mov
sbb
push
pop
add
mov
stc
jmp
movsb
jb
xchg
inc
popf
push
xchg
add
jp
sbb
repz
jg
pop
mov
xchg
leave
sub
push
mov
cmc
data16
push
adc
insb
adc
mov
in
push
mov
lds
xchg
outsb
repnz
test
adc
pop
xchg
xchg
inc
gs
es
adc
mov
adc
cmpsl
popf
push
xor
cwtl
outsb
repnz
imul
loopne
xchg
pop
pop
lcall
and
fcompl
lcall
lahf
test
push
or
out
jnp
push
mov
adc
rol
adc
lods
dec
xor
imul
imul
aam
jo
fs
cld
fidivrl
in
and
push
repnz
enter
push
leave
stos
jge
decl
mov
push
and
mov
roll
cmpb
push
sbb
jmp
stc
leave
adc
jp
nop
jmp
outsb
mov
pop
imul
or
xchg
pushf
mov
out
cmp
ficompl
incl
leave
mov
inc
jg
shll
mov
decl
ds
add
movsb
pop
xchg
leave
xor
fs
mov
cmpsb
leave
sub
ss
pop
shll
aaa
loop
dec
xor
enter
fildl
lcall
int
dec
orb
int
and
dec
sbb
insb
cmc
in
add
cltd
arpl
icebp
and
xchg
cmp
ds
cmp
add
mov
pusha
and
jb
roll
scas
scas
xor
sbb
sub
add
faddl
decl
pop
bound
imul
jno
cmc
inc
fistpl
xor
pop
jp
cmp
jle
push
mov
in
aad
loop
jno
jae
inc
inc
sahf
arpl
jb
fs
in
xlat
in
xor
test
ret
mov
mov
dec
ret
fcoml
pop
gs
arpl
inc
inc
test
mov
xchg
in
test
xchg
js
test
insb
add
jge
jg
popf
jne
inc
or
jl
xlat
movsl
je
cmpsb
sbb
jbe
pop
and
xchg
sbb
jb
fucomp
sbb
lcall
push
test
dec
dec
sub
pop
lods
push
sbb
clc
jnp
int
push
xlat
popf
cmc
xchg
insb
inc
in
fbstp
push
cmc
cmp
jmp
dec
push
add
lea
adc
rcrl
push
dec
mov
jne
xor
lahf
inc
sbb
inc
ds
pop
repnz
dec
push
add
ret
mov
lds
jno
movsl
xchg
test
pop
jb
xchg
int3
leave
mov
mov
gs
inc
inc
arpl
pop
sub
addb
rsqrtps
fbstp
lcall
fstps
or
fwait
popa
adc
movsl
pop
and
pop
dec
fcmovne
or
popa
add
jne
popf
pop
gs
arpl
pop
lds
popa
sti
mov
mov
negb
dec
xchg
inc
mov
jmp
cmp
ret
push
mov
xchg
mov
cmp
leave
push
dec
xchg
or
mov
jmp
jp
mov
mov
in
sub
cmc
daa
push
push
add
xchg
xor
and
mov
lds
cmc
or
cmpsb
mov
xchg
in
leave
cmp
sub
imul
mov
ljmp
push
xor
aaa
pushf
aaa
icebp
mov
xchg
outsl
pop
and
mov
jge
lcall
mov
cmp
popa
daa
or
pop
jl
lcall
jns
repnz
mov
sub
push
or
push
loop
in
mov
inc
test
inc
mov
je
pop
ficompl
push
mov
icebp
xchg
push
dec
in
loopne
loop
decb
iret
cmp
scas
es
jns
addl
jnp
inc
pop
movsb
add
jge
xor
test
sbb
inc
orl
stos
and
push
mov
xor
cmc
ficompl
aaa
pop
jge
popf
ret
jo
pop
int3
inc
push
mov
fisubrl
inc
outsb
jbe
repnz
mov
sbb
jae
mov
mov
jmp
jns
lods
pop
leave
in
push
mov
nop
sahf
sbb
mov
jbe
mov
push
icebp
mov
jbe
mov
divl
mov
les
push
mov
and
push
push
cmc
outsb
test
hlt
fwait
loopne
testl
cld
stos
inc
jmp
mov
add
mov
cmp
mov
dec
sub
xor
imul
mov
fldl
daa
and
sbbl
cltd
orl
idivl
sahf
jnp
xchg
jle
ds
gs
adc
push
xor
jp
adc
or
jmp
mov
jp
rcll
xchg
clc
mov
sbb
hlt
rorb
faddp
jbe
into
lds
mov
dec
lods
iret
lods
scas
add
popa
sub
or
nop
imul
test
dec
mov
jne
int
pop
clc
je
cmp
push
in
xchg
loop
jge
lds
jl
jg
ja
rorb
out
add
cltd
jo
mov
push
fs
xorl
jle
pop
orb
xchg
stos
sbb
jmp
jp
std
mov
sub
inc
sbb
shll
sub
test
and
mov
ss
dec
test
xchg
test
dec
mov
push
jae
lcall
add
pop
xchg
inc
or
cmp
loop
mov
aam
pop
inc
scas
pop
sbb
mov
or
rolb
mov
xchg
add
push
or
out
in
adc
mov
push
addl
popa
inc
mov
xchg
scas
popf
out
popa
les
jp
sub
pop
cld
lock
inc
test
push
dec
pushf
inc
and
mov
adc
adc
mov
inc
shll
sub
push
shlb
test
xor
lea
or
out
dec
cli
push
dec
mov
xchg
push
xor
adc
sarl
adc
add
pushf
mov
ds
or
pop
xorb
pop
repnz
xor
sub
cs
dec
inc
mov
or
pop
imul
test
xlat
pop
dec
pop
mov
stc
and
sbb
jle
pop
jge
inc
mov
push
or
adcb
jae
and
int3
test
mov
pop
and
repnz
mov
pop
daa
pop
lock
mov
popa
ret
fucomp
jbe
jno
les
outsb
pop
inc
pop
aaa
sbb
mov
test
push
jo
into
mov
bound
push
and
addl
ret
mov
nop
cs
pop
les
jo
and
cmp
lods
pusha
popf
jnp
inc
dec
pop
dec
fnsave
or
dec
dec
push
dec
test
movsb
pop
rcrb
dec
popf
push
mov
jle
mov
ffreep
sbb
mov
pop
jne
mov
enter
xchg
or
repz
add
jnp
pop
xchg
addr16
inc
adc
pop
arpl
sub
gs
jecxz
outsl
cmpsl
in
cmp
push
insb
pop
repnz
mov
dec
icebp
adc
mov
mov
jecxz
jb
lods
mov
xchg
imul
es
movsb
test
int
movsl
adc
xchg
sbb
loop
popa
aad
inc
lds
jl
jle
jg
adc
pop
into
xchg
fs
sarb
adc
out
loope
add
inc
inc
mov
and
add
test
dec
xchg
pop
cmp
xchg
jb
adc
jo
in
xor
ss
cmc
or
int
add
push
ljmp
add
adc
lahf
push
or
setbe
mov
or
inc
fwait
sub
sbb
jmp
dec
lea
cmpsl
and
push
dec
call
and
ret
into
and
push
std
lahf
mov
dec
push
cmp
pop
push
dec
push
mov
in
and
icebp
lcall
inc
xchg
repnz
sub
daa
sub
and
mov
mov
and
mov
push
and
es
mov
out
rcrl
pusha
test
add
pop
lret
or
xchg
push
cmc
sub
mov
ja
sbbb
ss
xor
std
xchg
and
test
add
add
cmp
sti
push
mov
test
into
jo
and
clc
add
cmpsl
rcll
mov
js
ret
mov
fwait
or
inc
loope
arpl
or
ficoms
stos
push
out
leave
shl
fstpl
movsl
or
dec
shlb
push
aas
push
push
mov
outsl
test
lds
adc
pop
leave
jbe
rorl
xchg
enter
xchg
and
xchg
fstp
lea
call
or
xchg
ds
lock
mov
shl
fs
les
arpl
fs
pop
inc
ss
pop
cmpsl
cmc
ss
enter
outsb
mov
sti
sub
ds
pop
cmp
rclb
pop
fidivs
cmp
inc
movsb
inc
jecxz
data16
aas
mov
xor
test
mov
xlat
or
call
push
stos
or
or
es
adc
lods
inc
mov
cmp
stos
rolb
or
xchg
add
mov
ja
add
test
dec
mov
fldenv
adc
and
add
mov
roll
testb
mov
icebp
sbb
mov
sarb
sub
push
in
nop
pop
lea
test
sbb
sbb
stos
jmp
sub
add
inc
rcrb
rcrl
xchg
pop
pusha
int
lcall
xor
repnz
sbb
into
inc
xchg
inc
scas
mov
inc
dec
fsubp
les
das
arpl
cli
cmpb
aad
mov
push
adc
adc
dec
outsl
daa
lret
push
adc
aam
and
and
jecxz
pusha
sbb
mov
inc
or
fildl
leave
les
mov
outsl
dec
push
cmp
rcll
cwtl
insl
and
fidivrl
insb
jge
fisttps
inc
out
in
xor
sbb
cmpsb
mov
divl
jge
jns
or
dec
xchg
sbb
xchg
ret
int
jcxz
push
adcb
fadd
jbe
push
mov
mov
push
jno
jae
aad
popf
out
pop
ret
int
xchg
mov
cmp
aad
mov
rclb
and
stos
xchg
out
pop
adc
sbb
xor
sbb
leave
jl
inc
push
jecxz
sub
xor
insb
or
iret
gs
push
sbb
adc
pop
int
or
inc
lcall
aaa
push
xchg
jns
jge
popf
neg
arpl
enter
fiadds
fldt
rorl
lds
inc
jge
cmc
cmpsb
lods
push
pop
sub
notw
add
xor
xchg
jg
push
xchg
mov
subl
inc
je
es
es
push
ss
add
push
sbb
mov
inc
js
or
out
cmc
xchg
mov
sahf
or
mov
inc
lock
fists
in
dec
xor
or
lds
push
add
rcll
jno
cld
push
mov
popa
add
incl
mov
ret
int3
rcll
inc
push
pop
inc
outsb
pop
jp
in
adc
jne
inc
orl
js
pusha
int
jmp
rorb
jge
push
or
maxps
stos
test
jnp
ds
pop
dec
jae
outsl
cmp
rcrl
mov
lcall
outsb
dec
jbe
lock
sbb
cltd
aaa
or
push
fwait
fwait
rcrl
xor
and
es
and
xor
imul
aad
scas
xchg
pop
incl
dec
test
jl
addr16
mov
into
push
lahf
fwait
jb
jb
fstpl
push
dec
inc
dec
mov
inc
mov
lds
dec
cmc
xor
jmp
cmp
outsl
negl
mov
xchg
inc
movsl
out
mov
inc
inc
shl
popa
inc
push
fstl
imul
popa
movsl
lock
adc
adc
ds
xor
sahf
jmp
add
pop
daa
aad
jg
lret
push
sub
popf
or
rorl
inc
pop
fnstsw
adc
and
mov
lcall
pop
pusha
dec
icebp
mov
popf
pop
int
lds
adc
add
pop
clc
shl
in
leave
push
ret
or
adc
test
inc
push
test
pop
push
les
cli
arpl
push
push
push
sbb
xchg
stos
sbb
sub
jge
push
sbb
aam
add
popa
mov
add
mov
cwtl
push
inc
jle
movsl
lds
push
incl
fmull
push
push
out
push
test
loope
sbb
xchg
in
and
xchg
ror
adc
xchg
and
mov
inc
push
xchg
jmp
or
jge
sub
adc
jecxz
into
movups
jle
or
leave
hlt
add
inc
pop
in
adc
xchg
add
ljmp
cwtl
lahf
or
out
std
sbb
les
xor
mov
testl
or
mov
ret
in
jnp
cwtl
cmp
inc
push
or
push
icebp
repz
movl
faddl
sti
xlat
xchg
mov
es
out
jmp
mov
fistpll
xchg
xor
push
inc
test
es
shl
out
sub
add
pop
and
xor
les
shlb
or
dec
pushf
mov
popf
mov
xchg
mov
pop
cmp
adc
out
rol
sub
jb
xchg
pop
bound
imul
inc
add
shlb
cmc
mov
es
pop
out
rcll
nop
dec
mov
leave
movsl
lahf
cmp
xlat
mov
int3
movsb
xchg
jecxz
inc
hlt
push
leave
in
or
jle
push
lcall
dec
and
inc
arpl
xor
ds
mov
push
mov
mov
jns
push
stc
pushf
xchg
lds
ja
push
mov
fwait
mov
ret
pop
mov
or
xchg
or
sbb
repz
mov
dec
and
test
adc
xchg
mov
dec
cmp
or
enter
je
add
cmc
xchg
push
xchg
out
add
pop
ja
std
pop
test
jbe
outsl
xchg
repnz
scas
fidivl
fstpt
lds
lods
inc
and
mov
inc
sbb
or
and
jge
pop
roll
cmp
lds
iret
and
data16
fadd
mov
and
shll
aam
xor
add
pop
jne
out
xchg
mov
sub
cmpsb
push
pop
push
imul
mov
adc
xchg
lret
repz
lea
lds
cld
notb
inc
jbe
lea
add
test
rcr
xchg
rcr
ret
sbb
call
cmp
leave
and
add
dec
gs
inc
scas
push
ficomps
ljmp
cmp
xchg
fistpll
push
scas
jns
pop
rcl
ss
sbb
cmp
push
arpl
lea
push
mov
or
xor
stc
stc
ret
xchg
add
lods
adc
movsb
jbe
loope
in
outsl
sbb
push
inc
cwtl
lcall
dec
inc
push
pop
xlat
adc
sub
fisubrl
jle
fiaddl
adc
fistl
gs
bound
xchg
jge
inc
adc
push
mov
adc
dec
into
sahf
sub
sub
cmc
fiaddl
and
push
push
inc
xlat
gs
adcl
cmc
in
subl
rorb
push
fwait
in
adc
mov
pop
push
popf
xor
xchg
jbe
adc
out
jmp
test
xchg
push
test
cwtl
add
inc
xchg
in
dec
pop
push
jp
lods
fcomip
push
test
inc
enter
gs
jno
popa
or
pushf
ljmp
xchg
dec
popf
adc
movsl
inc
jg
daa
shrl
mov
jecxz
in
ss
ret
mov
arpl
popa
fcmovnu
rcr
jne
sahf
add
inc
fdivl
popf
fstps
cmp
jb
stc
mov
cltd
test
mov
movsl
aam
popa
inc
mov
sub
jbe
fmul
fnstsw
data16
xchg
push
lea
stos
jecxz
add
pop
sbb
arpl
loop
mov
clc
and
ret
xlat
xchg
sbb
jecxz
mov
mov
dec
movsl
mov
push
or
out
xchg
mov
sub
lahf
pushf
divl
xchg
or
sub
jo
sbb
lret
fwait
push
test
adc
xchg
push
in
notl
push
rcrl
add
jno
fs
push
pop
mov
test
sahf
push
outsl
insl
mov
insl
into
faddl
shrb
cs
inc
and
popf
hlt
add
loope
xchg
xchg
lcall
data16
cld
push
mov
in
mov
push
jl
lds
fwait
in
push
inc
pop
mov
inc
leave
jne
inc
dec
frstor
push
stc
mov
pop
dec
loope
loope
test
mov
repnz
in
jno
jmp
gs
aad
mov
int
add
into
xor
aad
test
test
out
jle
mov
test
aaa
add
lcall
rorl
clc
xchg
xor
es
int3
inc
icebp
lock
cmp
mov
jle
push
int3
pusha
mov
lods
rol
mov
movsb
subl
mov
out
push
mov
pushf
outsb
outsl
into
pop
jnp
out
cmp
je
pop
jnp
push
repnz
sti
dec
push
push
inc
dec
sbb
sbb
mov
data16
mov
cmpsl
adc
mov
push
mov
int
push
sbb
mov
pop
push
mov
dec
out
fistl
and
mov
data16
daa
cmp
or
xorl
push
popf
xor
inc
fcomip
xlat
test
cmp
pop
aad
adcb
loop
lret
pusha
ja
sub
mov
push
stc
test
add
les
ds
rcrl
mov
les
adcl
frstor
or
inc
adc
rclb
mov
inc
je
mov
add
xor
testb
movsb
push
push
mov
jb
aad
inc
out
lret
sbb
xchg
and
pop
gs
lds
in
rcrl
dec
add
fmuls
pop
aad
lea
out
and
mov
cmp
adc
clc
int3
add
pushf
jle
mov
aad
mov
pop
arpl
pushf
pslld
jmp
xor
xor
paddusb
addr16
add
xchg
cltd
paddusb
sub
es
sbb
shrl
les
pop
gs
mov
and
outsb
sub
cmpsb
test
aaa
mov
js
test
pop
push
mov
add
jbe
add
lock
repnz
sub
inc
test
mov
fnstenv
pop
mov
les
dec
out
push
pop
cltd
add
lcall
loopne
shll
std
xchg
inc
data16
mov
ss
push
jp
ret
fbstp
jae,pt
fstpl
bound
in
dec
movsb
gs
push
dec
imul
lea
sbb
dec
jae
filds
aad
ret
test
jl
pop
and
jle
fs
jle
iret
sbb
push
int
xchg
cmp
push
or
imul
arpl
xchg
push
push
inc
pop
xor
push
add
imul
shrb
ret
xchg
cmp
shll
or
addr16
lahf
jbe
ss
or
mov
jl
jo
push
sbb
mov
and
aaa
pop
jne
xlat
loop
pop
push
cmp
pop
data16
jl
into
or
pop
rcrb
fstpl
fsubl
mov
xorb
or
das
loop
push
ret
mov
pop
stos
push
test
jns
push
lcall
pop
mov
or
xchg
rcrb
repz
adc
and
cmp
cmp
fwait
divl
ret
lahf
inc
push
add
gs
and
aam
out
pushf
je
lahf
pop
and
lahf
sbb
push
sub
movsl
loopne
cltd
repnz
iret
popf
popa
lahf
jns
push
mov
shlb
xlat
ficompl
sahf
mov
cmp
mov
lds
mov
cmp
mov
daa
dec
gs
add
testl
xchg
pop
xchg
mov
pop
loopne
aam
fldenv
pop
dec
rcrb
shlb
popf
pop
jp
loope
jl
inc
loop
sbb
sti
ret
dec
cltd
int
lds
es
jle
rorb
and
sbb
dec
test
fists
pop
xor
inc
mov
into
dec
pop
iret
adc
cmp
sub
pop
inc
inc
cmp
mov
addr16
in
mov
gs
inc
add
inc
push
fildl
add
push
push
mov
dec
loope
inc
fcmove
add
repz
bound
rcr
shr
inc
sub
fmul
sub
push
cld
pop
je
bound
dec
rol
out
pop
add
lret
sbb
cli
push
insl
mov
or
cwtl
pop
or
mov
mov
sahf
xchg
je
push
pop
push
ljmp
xchg
jg
movsl
hlt
leave
or
rclb
inc
jne
push
sbb
inc
pop
sbb
test
dec
and
les
testl
es
jle
inc
ds
or
mov
sub
lret
mov
cmp
mov
pop
push
out
ror
loope
in
shll
leave
test
fwait
repz
loop
bound
or
jbe
cs
jmp
inc
inc
dec
rclb
jle
rorb
pusha
dec
daa
pop
add
xchg
inc
push
dec
out
cltd
pushf
les
out
push
roll
movsb
push
ret
sub
and
ds
mov
les
mov
or
scas
js
dec
pop
shll
cwtl
movsl
mov
stc
int3
jp
push
fwait
loope
push
sti
stos
fs
push
mov
dec
lds
jge
daa
dec
mov
in
xor
mov
or
pop
test
data16
or
mov
cmp
or
or
mov
icebp
dec
int3
into
in
push
fstpt
sti
insb
leave
mov
cli
imul
cmp
icebp
nop
adc
or
xor
enter
stos
jnp
mov
sbb
jmp
adc
pop
add
add
push
lock
adc
jae
dec
mov
add
mov
test
fs
push
sbb
popa
rcrl
pushf
mov
adc
add
mov
int
test
push
or
sarl
in
movsl
rol
in
incl
loopne
gs
jno
inc
xchg
mov
cmp
repnz
add
dec
movsb
test
aas
xchg
adc
cs
sub
mov
or
pusha
in
rorb
dec
cmp
mov
sub
xchg
out
mov
cmp
push
rol
xchg
stos
les
mov
push
xchg
xchg
aas
bound
adc
mov
orl
shr
dec
xorb
leave
out
xchg
rorb
jg
mul
push
bound
sarb
sbb
cld
or
data16
sbb
mov
inc
sbb
or
mov
int3
mov
or
push
inc
ss
xchg
es
mov
in
xchg
sub
mov
dec
pop
mov
rcll
lds
push
jo
lret
or
jmp
in
out
fdivrl
int
insl
ds
sbb
call
cmp
and
dec
dec
and
push
or
jmp
inc
pop
xchg
dec
fstps
loop
inc
test
cmp
adc
orb
test
dec
inc
ficomps
cmp
subb
outsl
mov
leave
pop
or
lcall
add
dec
inc
sub
addb
mov
xor
aad
pop
inc
and
popf
push
loopne
jl
push
lock
nop
rcrl
pop
jns
jmp
ja
jne
sti
js
cmp
xchg
adc
and
fwait
adc
lock
xchg
sbb
mov
mov
and
scas
add
mov
fistl
add
orb
mov
jbe
int
mov
inc
inc
cmp
push
cmc
cmp
in
mov
lea
push
aad
iret
in
icebp
addr16
test
push
fs
sbb
outsb
out
xchg
adc
mov
arpl
les
dec
mov
sarl
dec
push
loopne
jle
push
roll
iret
xchg
mov
add
jno
or
xchg
stos
cmp
insl
negb
pop
jg
repnz
cmpsl
dec
or
or
push
or
push
aas
sti
jge
xor
xorb
jecxz
aas
movl
rcll
pusha
stos
and
cmpsb
mov
aad
xor
mov
add
inc
adc
push
movsb
xchg
inc
insl
pushf
sbb
divl
mov
out
and
inc
pop
xor
lds
mov
scas
popa
jne
ret
adc
mov
aas
mov
jb
push
out
bound
sbbl
sub
out
push
and
xor
cmc
jne
or
jne
xchg
pop
outsb
jbe
aad
or
add
jns
mov
enter
popf
dec
cwtl
out
in
inc
movb
push
sahf
cld
mul
cmp
push
mov
dec
pushf
fimuls
lds
inc
lcall
punpckhbw
shrb
lea
movsb
test
mov
cmp
jecxz
mov
push
int
shlb
adc
mov
dec
in
mov
mov
es
mov
data16
and
sahf
es
jo
adc
addr16
mov
lahf
sbb
lods
popf
lcall
in
mov
enter
push
adc
stos
sbb
bound
mov
lret
gs
fimuls
add
inc
lcall
fcmovne
inc
fidivl
lret
test
dec
imul
leave
icebp
jns
je
movsb
adc
ret
pop
mov
sarb
inc
sti
fldenv
xchg
pusha
xchg
rorl
sbb
je
mov
push
lcall
cmp
jmp
notl
repz
pop
gs
shll
das
add
fcoml
jb
add
aam
cltd
sbb
les
pop
and
adc
mov
call
sbb
or
jb
setne
dec
cs
dec
mov
mov
repnz
jne
std
pop
push
add
push
xchg
xchg
or
in
inc
cmp
push
ret
pop
fcompl
cld
cmpsb
adc
cmp
dec
roll
movsl
fbstp
cli
adc
in
cs
push
ja
adc
pusha
inc
push
jl
or
adc
bound
jle
jle
adc
popa
ret
push
mov
out
call
mov
and
test
movsl
aad
bound
push
addr16
jecxz
test
out
rorl
in
repz
mov
push
fcom
xlat
out
add
cmc
ss
bound
inc
jns
xchg
rorb
pop
mov
das
lcall
orb
fwait
jno
push
testb
pushf
aad
and
loopne
mov
test
bound
popf
rorl
cmp
push
inc
shll
inc
add
push
les
test
outsl
inc
mov
aaa
pop
push
add
clc
movb
iret
cmpsb
push
arpl
test
gs
xlat
data16
sub
sbb
inc
push
es
sbb
into
sbb
gs
inc
xor
sahf
xor
push
lahf
xor
cmpl
out
pop
pop
stos
pushf
mov
pushf
adc
jmp
and
es
popa
adc
adc
je
dec
negl
mov
sahf
xchg
je
mov
xchg
xorl
rolb
or
sbb
xchg
test
mov
fisubs
out
push
cmpsb
addb
jecxz
mov
adc
aaa
xchg
mov
popf
jne
dec
adc
fnstenv
fcmovb
pushf
pop
inc
and
push
outsl
adc
xchg
mov
mov
scas
pop
rol
ss
pop
inc
push
push
add
jge
and
popf
cltd
jp
dec
adc
and
cmpb
jb
and
lods
popf
mov
mov
push
fstl
mov
jbe
mov
call
xor
push
idivl
fdivrs
scas
imul
dec
mov
pop
loope
push
sub
cmp
cld
xchg
addb
xchg
stc
and
sub
jno
jns
mov
daa
mov
test
pop
inc
mov
rorl
inc
js
cmpsl
inc
pop
adc
mov
mov
ss
enter
nop
push
cmpsb
shrl
mov
lods
sbb
cmp
arpl
pop
pop
ja
push
ja
pop
roll
mov
inc
movsl
dec
pop
popf
rorb
clc
xchg
cli
mov
and
cmp
cld
push
inc
pushf
pushf
xor
es
sub
sahf
and
aam
into
fwait
sbb
pop
cmp
mov
popf
ljmp
xchg
pop
mov
fs
repz
cltd
cmp
mov
leave
xchg
cmp
sbb
aaa
lea
cmp
fwait
pop
repz
out
out
and
mov
pop
cld
pop
and
add
clc
pushf
dec
idivl
mov
retw
movsl
adc
fadds
pop
pop
sbb
bound
sbb
mov
std
lock
sti
mov
popf
outsl
xor
idivl
xchg
push
inc
addr16
sub
jo
push
test
xor
xlat
push
cmpsl
xchg
and
out
jb
or
xchg
push
pop
out
outsl
popa
js
lock
sub
inc
dec
aad
inc
leave
jne
addr16
ret
ja
jecxz
mov
ds
sub
aad
mov
pop
jb
lcall
add
dec
leave
cltd
shrl
dec
mov
arpl
xor
xchg
data16
mov
ljmp
push
xchg
or
dec
inc
fwait
dec
aad
scas
or
popf
pop
fiaddl
lcall
sub
aad
push
or
negl
mov
dec
inc
js
mov
out
aam
push
out
cmc
enter
das
stc
pusha
cmp
jo
lds
sub
arpl
jns
dec
mov
pop
and
or
add
jg
add
push
pop
pushl
cmpsb
dec
lds
jp
xchg
push
push
test
sub
sub
and
popf
stos
gs
push
mov
test
sahf
mov
into
mov
movsb
cwtl
pop
aad
into
mov
imul
cltd
idivl
rcll
iret
loope
and
adc
cmp
jmp
add
jbe
sti
lock
out
sahf
pusha
inc
push
xchg
or
jp
lcall
test
pop
push
mov
xchg
addl
jne
mov
test
and
js
and
lcall
push
cltd
xchg
dec
les
loop
adc
cmpb
xchg
mov
test
adcb
gs
and
pop
or
mov
dec
inc
jmp
jne
sarl
sbb
pop
data16
inc
xchg
lea
std
mov
in
or
mov
mov
clc
push
test
ret
xchg
test
rclb
jae
aad
xchg
test
pop
scas
pusha
sbb
push
addl
ret
call
gs
pop
pcmpeqb
sbb
adc
outsb
cli
out
push
pusha
add
push
push
subb
test
loopne
mov
inc
add
add
stos
testb
dec
mov
pusha
push
mov
pop
scas
push
inc
fldl
jge
pop
imul
es
negl
data16
pop
dec
popf
mov
aaa
jl
jge
stos
xchg
mov
xor
pushf
scas
in
push
dec
push
fidivrs
dec
daa
loopne
inc
imul
lods
sbb
or
push
pusha
mov
mov
gs
out
enter
xor
add
cld
test
insb
ja
out
push
pop
xchg
popa
or
cmp
and
mov
mov
jne
mov
adc
fnstsw
pop
sahf
mov
mov
mov
xchg
gs
pop
and
inc
icebp
pop
aas
faddp
and
lock
in
and
ds
mov
outsb
pop
pop
mov
aad
pop
inc
mov
popf
jb
repnz
push
and
clc
or
bound
mov
pop
mov
jp
add
mov
inc
out
mov
push
dec
loopne
mov
mov
outsl
lds
adc
cmp
jo
pop
mov
mov
dec
es
notl
mov
xchg
pop
pop
rcll
mov
dec
fld
and
inc
mov
out
aad
mov
ja
leave
setg
aad
xchg
sub
inc
rorb
dec
stos
or
repnz
push
int
pushfw
push
push
ss
inc
xor
fadds
lds
addl
adc
inc
or
xchg
jbe
xlat
push
mov
pushf
icebp
add
inc
mov
mov
int3
xor
sbb
lea
andl
bound
sarb
mov
es
push
lea
ret
dec
inc
jg
adc
lds
jg
in
jp
adc
push
sti
mov
cmpsb
xor
mov
mov
lcall
test
and
sbb
ret
je
xchg
lahf
jns
mov
mov
pop
mov
jb
bnd
or
loope
push
jno
and
inc
shll
inc
mov
repz
jmp
pop
mov
movsl
pushf
pop
imul
mov
pop
mov
push
jmp
inc
jo
add
mov
test
cmpl
mov
xor
sbb
arpl
es
xchg
inc
add
cmpsb
repz
jbe
hlt
daa
aaa
sub
shlb
dec
sbb
roll
addr16
sbb
mov
jmp
lds
jbe,pn
sti
jae
enter
sti
lods
push
cs
fbstp
jmp
mov
bnd
movb
mov
pop
xor
inc
push
mov
inc
in
in
les
adcb
mov
aas
orl
mov
or
and
inc
push
and
push
inc
xchg
push
insl
add
outsb
adcl
test
ds
gs
push
int
jns
and
je
rcl
mov
das
out
in
inc
push
cli
cmpsb
mov
popl
lret
xor
lds
or
outsb
add
testb
xchg
out
hlt
xchg
jae
fistl
test
into
pushf
mov
cmpsb
or
repz
push
cmpsb
pushf
arpl
add
repz
call
fnsave
int3
sahf
push
xor
jp
push
xchg
jno
loopne
lock
arpl
add
jbe
jge
das
in
adc
test
sbbl
inc
repz
rcrl
repnz
arpl
xchg
lcall
sub
popa
ss
rcrb
dec
gs
pushf
sub
into
lds
addr16
in
repnz
mov
sub
and
inc
mov
mov
mov
mov
xor
mov
xorw
mov
inc
divl
xchg
jnp
inc
test
jp
lret
std
jnp
ss
outsl
xchg
jecxz
jmp
add
cmpsl
or
add
inc
ret
jle
sbbl
jge
xchg
data16
mov
and
imul
je
in
add
mov
mov
pop
fs
cmpsl
in
les
sahf
fptan
mov
inc
outsb
add
cmc
shlb
arpl
add
cld
jbe
pusha
pop
test
push
mov
and
pop
repz
sahf
sbb
inc
add
test
popf
test
xchg
ds
insl
sbb
inc
test
xchg
ss
mov
pop
xchg
sub
jl
xchg
pushf
lcall
stc
mul
mov
inc
vpcmpeqd
pop
jp,pt
int
fcompl
add
mov
inc
push
inc
fcmove
adc
mov
pop
pop
push
dec
xchg
loope
mov
jge
aas
in
pushw
ret
fs
inc
jae
gs
inc
add
add
aad
idiv
xchg
push
roll
sti
and
in
data16
add
or
add
std
testl
or
and
inc
loope
mov
add
imul
jecxz
fistpll
and
inc
dec
iret
jge
and
jp
stos
jb
lcall
add
pushf
outsb
cld
mov
jp
lock
out
bnd
jp
add
rcrl
cltd
xor
dec
in
sti
imul
fwait
addr16
cmp
jl
xlat
adc
jo
and
cmp
mov
jae
ret
pop
and
ret
mov
add
add
lock
shrb
pop
shrl
outsl
push
lcall
int
adc
pop
cmp
in
mov
pop
lods
int
test
push
cmp
lods
pop
in
xchg
jle
loope
adc
jne
dec
ljmp
fiadds
push
cmpsb
lahf
cmp
in
pop
dec
lea
add
xchg
or
popa
test
inc
repnz
adc
and
lret
lahf
and
sbb
add
pop
cmp
push
call
inc
mov
loope
mov
ret
aaa
push
push
inc
pop
cmp
cmp
xor
push
mov
xchg
mov
roll
jl
xor
ss
dec
repz
bnd
push
cmp
jno
xor
sbb
push
adcb
xor
mov
dec
rcll
mov
jno
add
mov
in
aas
xchg
push
mov
and
ja
jne
xchg
out
test
inc
dec
xchg
add
lock
jo
adc
leave
cmp
fistps
dec
je
pushl
mov
arpl
mov
and
sbbb
push
jns
push
ds
inc
cli
push
and
imul
fstl
shlb
push
or
clc
cmpsb
push
outsl
jbe
movsl
dec
adc
out
xchg
inc
cmpsb
push
mov
inc
mov
lea
or
dec
push
jg
adc
lds
lret
push
mov
test
mov
aad
cmc
adcl
loope
push
in
sub
dec
ja
into
daa
scas
cmp
xor
fldl
inc
mov
sub
or
inc
push
inc
cli
movsb
jae
es
xchg
jnp
inc
fnsave
jmp
add
jne
pop
in
ret
pop
adc
ds
sbb
fucom
mov
xchg
cli
xchg
or
inc
cmc
stos
mov
aam
popf
add
push
jbe
mov
mov
sahf
pop
subb
add
aad
andl
sub
xchg
adc
sbbl
movsl
xchg
das
xchg
xchg
rcll
push
push
pushf
cmp
add
jb
add
push
jecxz
popf
mov
scas
xlat
push
jge
cwtl
data16
pop
mov
push
movsb
fucomp
push
fcmovbe
add
add
mov
std
orb
popf
kmovw
addb
popf
mov
incl
adc
jmp
jle
sti
xchg
mov
outsb
fwait
movsl
mov
or
or
repnz
pop
sbb
inc
jle
pop
jle
movsb
cmc
out
and
arpl
dec
dec
out
or
inc
xchg
cli
and
movsb
rolb
je
cmc
pop
xchg
mov
loop
mov
aaa
loop
icebp
into
add
shlw
loope
jg
outsl
xchg
dec
or
in
es
xchg
int
ret
push
stos
aaa
xchg
jnp
pushf
test
pop
inc
inc
or
roll
std
pop
dec
lahf
scas
add
mov
popf
loope
aas
scas
leave
cmp
pop
mov
push
adc
cmc
movsb
divl
mov
sub
pop
and
mov
inc
pop
arpl
mov
mov
jmp
jmp
cwtl
sub
pop
and
loope
add
js
xorb
scas
repz
enter
lretw
je
lret
fnstsw
cmpsb
les
sub
cli
pushf
and
iret
loopne
clc
and
xchg
int3
and
xor
inc
outsb
pop
mov
pop
icebp
jbe
add
jae
into
push
inc
mov
xchg
push
jbe
icebp
xchg
mov
mov
ret
fwait
es
daa
push
imul
js
in
push
pop
call
outsl
into
inc
jns
movsb
dec
jne
mov
pop
jle
addr16
and
lcall
jge
pop
and
mov
push
outsb
notb
sbb
ss
std
push
test
lret
pop
mov
es
push
enter
out
out
outsb
xchg
arpl
add
in
push
push
insb
mov
pop
ljmp
jne
pop
xlat
inc
cli
xor
mov
pushl
push
mov
gs
mov
ja
pop
mov
popa
cltd
aad
xchg
jno
mov
int3
or
ficompl
inc
push
pop
sbbl
mov
pop
xorb
mov
push
xor
std
sbb
xchg
mov
orb
addl
push
push
jb
xchg
mov
jns
int
loop
dec
sbb
pop
push
fwait
ret
mul
int3
dec
fdivl
push
ret
jnp
cmpl
xchg
movhps
adc
jmp
sub
pop
mov
sub
jge
ljmp
icebp
dec
pop
int
lea
cmpsb
jns
cmp
jb
xchg
pop
inc
adc
popf
xchg
mov
insl
dec
stc
jno
xchg
cmp
xchg
pop
jge
cmp
or
sub
and
outsl
sbb
nop
outsb
push
scas
jl
incb
sub
data16
xchg
inc
xchg
cmpsb
in
fwait
mov
sbb
in
insb
xchg
inc
sbb
sub
xchg
jno
scas
aas
sbb
sbb
sbb
pusha
mov
xchg
ficompl
fcomp
mov
mov
sub
int
mov
imull
inc
mov
pop
test
push
inc
pop
or
divb
push
mov
pushf
cmc
das
mov
or
aad
sub
push
inc
pop
jne
lods
insb
or
outsb
cmp
loopne
or
sbb
add
jp
push
push
and
hlt
mov
int
cmp
push
data16
arpl
outsb
adc
mov
lds
loope
jl
mov
int
popa
pop
mov
int
dec
das
lea
mov
add
mov
cmpsb
cmp
test
aas
push
inc
std
push
test
ja
and
mov
adc
sub
lea
mov
pop
mov
push
loopne
roll
loope
ret
adcl
push
push
mov
stos
push
out
int
mov
push
cmp
pop
ret
pop
mulb
std
fisubl
fndisi(8087
inc
aaa
push
cmp
xchg
xchg
lret
and
dec
and
mov
int
imul
cmc
data16
cmp
and
xchg
cmpsb
or
testl
pop
dec
mov
icebp
pushf
adc
loope
cltd
in
jmp
inc
fstl
arpl
sbb
pop
jnp
or
and
sub
rcrl
out
shl
dec
add
inc
notl
stos
xchg
jle
inc
sub
push
in
mov
lea
pop
pop
jg
repz
jnp
mov
inc
test
push
popa
adc
div
stc
adc
jle
mov
das
jb
xchg
mov
mov
lock
out
lds
mov
inc
movsl
test
push
insl
pslld
mov
jl
jb
cmp
and
sbb
jp
add
mov
dec
push
ret
cltd
push
rcr
sub
lret
push
add
test
add
inc
dec
jp
cs
or
loope
lahf
xchg
or
push
mov
insl
inc
stc
icebp
jb
cmp
mov
jmp
dec
xchg
pop
lds
in
movsb
push
push
pop
divl
hlt
in
adc
std
or
dec
in
data16
jo
movsb
fldt
inc
sbb
fs
int
dec
test
mov
repz
push
decl
add
dec
xchg
jns
shll
or
popf
jecxz
mov
cmp
data16
push
lret
jno
inc
adc
and
mov
pop
bound
lahf
push
cmp
adc
xchg
jnp
sbb
out
add
pushf
aad
popf
or
xor
xor
nop
out
in
ficomps
sahf
sbb
inc
inc
cld
sbb
mov
adc
and
aaa
test
pop
push
mov
push
arpl
iret
adc
jb
and
or
test
sub
call
repz
loope
pop
push
mov
shll
cmpsb
sbb
mov
inc
mov
cld
sbb
add
sub
add
inc
push
mov
inc
xor
xlat
test
les
loope
scas
leave
mov
ljmp
int3
fisubl
add
pop
pusha
bound
add
pop
out
push
add
mov
ds
cmp
and
add
add
inc
ret
in
mov
std
in
mov
addr16
sub
cmpl
test
mov
add
mov
fyl2xp1
icebp
cmpsb
mov
sub
bound
in
es
mov
test
rclb
inc
frstor
xchg
mov
repz
mov
adc
lea
mov
dec
xchg
cmpsb
or
cltd
div
push
mov
or
imull
dec
dec
out
push
into
addr16
add
fstl
push
mov
enter
mov
or
mov
cmp
xor
mov
lds
ret
and
add
add
xchg
push
lods
std
fsubl
loop
mov
push
jbe
jge
inc
push
pop
movsl
push
xchg
cld
inc
icebp
add
movsl
movl
or
mov
mov
hlt
dec
inc
dec
test
or
fidivl
cmp
cmp
or
gs
push
jge
pop
xchg
push
hlt
sbb
mov
pop
mov
bound
fs
addl
add
push
push
movsl
xchg
push
mov
dec
add
push
adcb
lods
and
xchg
cmpl
cmp
mov
int3
mov
repz
jge
lds
push
mov
and
inc
jne
and
mov
sahf
jp
dec
sub
jle
test
test
ret
add
dec
rep
push
lahf
cmp
and
xor
test
movsl
int3
nop
bnd
int
mov
or
jno
mov
mov
testl
incb
popf
repnz
pop
into
sbb
and
jmp
jo
rolb
xchg
inc
mov
imul
push
mov
adc
mov
add
or
cmp
gs
out
jge
ss
pop
add
lea
jge
push
push
inc
test
jle
jns
adc
lea
popf
das
or
dec
incb
push
mov
lret
dec
addb
push
inc
arpl
adc
dec
and
inc
out
iret
sahf
push
mov
lea
push
out
loope
or
pop
ficoms
push
out
inc
sbb
sub
lods
push
dec
push
push
jge
cmp
movsl
cmpsb
orb
mov
inc
mov
lds
push
xchg
push
lds
fistps
push
leave
jl
mov
sbb
outsl
push
in
dec
es
lret
jg
out
in
jp
imul
push
mov
popa
adc
push
dec
xor
xchg
inc
inc
repz
lcall
sub
mov
mov
pop
mov
jmp
test
pop
dec
out
sbb
adc
jo
cwtl
bound
jae
or
lcall
out
arpl
fcoml
push
orl
push
test
or
push
pop
xchg
inc
xchg
push
test
mov
inc
and
xchg
push
add
push
dec
notb
xorb
sbb
jle
test
pop
std
add
push
es
push
jge
enter
xchg
leave
out
stc
sti
je
stos
test
popa
pop
add
push
andb
fwait
in
sbb
mov
dec
bound
xchg
push
in
orb
or
xchg
dec
xchg
push
add
push
lahf
mov
push
in
lahf
push
push
add
fldenv
or
inc
and
xor
sbb
orl
stos
mov
add
add
repnz
std
push
dec
aaa
adc
in
mov
jmp
mov
std
inc
cmpsb
adc
rolb
and
sahf
xlat
mov
insl
jecxz
and
pop
popa
push
sahf
pop
insl
sbbl
nop
push
fwait
mov
inc
aam
dec
xchg
aad
mov
andb
mov
xchg
push
in
dec
je
pop
ret
sbbl
test
inc
mov
ret
jmp
je
lahf
lea
test
jg
adc
aam
pop
lods
add
rolb
bound
repz
test
add
stc
fnsave
xchg
mov
dec
inc
add
xor
sbb
pushw
sbb
cli
lcall
addb
lret
jg
mov
and
add
test
add
repnz
popl
jmp
or
or
mov
push
xchg
inc
test
add
and
test
pop
jmp
jo
leave
je
dec
lods
popf
xchg
push
jmp
add
test
add
push
inc
sbbb
xchg
sbb
fidivl
pusha
test
sbb
add
cmp
jno
push
adc
test
pop
inc
xchg
popf
aad
popf
mov
pusha
movsb
fwait
je
sbb
push
mov
pop
inc
pusha
les
pop
push
in
out
xchg
jnp
adcb
push
addb
bound
inc
test
sbb
fwait
or
or
xor
jmp
push
pop
pop
or
push
pushf
les
push
lea
jg
adc
xorl
cmpl
test
add
push
sbb
xchg
pop
cmp
xchg
jg
adc
les
lcall
jg
adc
push
je
lea
or
adc
les
orb
jg
adc
push
lahf
mov
xchg
or
jg
adc
lcall
dec
pushf
jg
adc
sahf
je
lea
jg
adc
andb
pusha
push
mov
fidivs
push
adc
push
inc
mov
sbb
pop
push
pop
mov
pop
dec
repz
popf
pushf
push
add
or
test
pushf
push
into
push
test
iret
dec
arpl
andl
pop
add
inc
pop
shlb
ret
sub
xchg
or
pop
jbe
test
mov
add
stc
adc
and
out
in
add
outsb
movl
jae
dec
mov
and
and
sbb
jae
inc
cmp
push
add
shll
jne
push
xor
aad
and
inc
pushl
push
andl
insb
ret
hlt
ss
push
aad
and
push
xchg
sbb
and
loop
out
ss
push
inc
push
push
push
push
in
dec
out
inc
in
add
xchg
cwtl
sbbl
gs
loop
and
push
mov
xchg
dec
sahf
xchg
nop
inc
pusha
dec
addr16
out
jne
jp
or
pop
ret
outsl
inc
sbb
divb
or
cld
bound
jle
mov
xorb
xchg
push
push
push
insb
les
lcall
andl
dec
repz
stc
xchg
sti
inc
inc
jns
jae
push
es
push
push
lea
subb
cmp
xor
add
cmc
popa
push
jmp
mov
fistps
xchg
push
jl
insb
ficoms
pushf
xchg
inc
stos
shll
cmpl
mov
jl
jae
add
pop
xchg
rcrb
inc
pop
xchg
call
sbbl
xchg
std
mov
out
mov
jecxz
sti
jbe
out
in
rcrl
xchg
das
pop
lea
cmp
aad
push
inc
dec
mov
lods
mov
fnstcw
xchg
add
xchg
mov
add
shll
loop
add
add
or
dec
add
add
jb
or
lock
addl
test
mov
xchg
bound
sar
je
jp
sti
xchg
dec
movsb
test
in
repz
push
test
cltd
jno
xchg
decb
pop
in
pop
xchg
xor
xchg
inc
or
sbb
repz
addr16
in
pop
out
mull
jae
pop
inc
cmc
add
lods
aad
rcrb
ja
push
fnstsw
les
mov
or
bound
or
inc
pop
iret
inc
mov
or
les
adc
push
xchg
sbb
out
enter
dec
jbe
adc
sub
movl
inc
sbb
cld
scas
test
cmp
outsl
pushw
cmp
je
test
jae
fldenv
test
inc
mov
dec
pop
lcall
mov
cltd
inc
imul
inc
int
das
jo
pop
les
jb
outsl
push
or
dec
xchg
sbb
mov
clc
pop
add
enter
cmc
fsubr
adc
inc
movsl
ss
lds
sub
sub
adc
outsl
je
test
or
les
push
movsb
dec
jns
dec
test
mov
test
push
push
rcrb
or
nop
jl
movl
inc
push
stc
cmp
sbb
in
lds
dec
jo
jl
push
flds
sub
cmpsb
xlat
push
out
jg
lcall
sub
clc
mov
les
test
pop
add
mov
das
and
pop
add
lahf
push
fwait
push
test
loop
inc
dec
in
in
mov
nop
xor
or
inc
cmc
push
push
fwait
int3
sub
in
pop
test
arpl
insb
ret
add
jo
xor
fs
pushf
add
adc
inc
jecxz
mov
jo
movsb
bound
add
dec
jecxz
insb
andb
lods
movsb
xchg
je
loopne,pt
push
repz
xchg
dec
ret
push
test
or
push
inc
fs
test
fs
xchg
xchg
inc
ret
popf
je
add
in
jo
inc
mov
push
popf
jbe
lret
add
fnsave
ret
hlt
and
push
les
inc
or
add
test
rcll
pop
popf
jne
inc
adc
out
lods
dec
push
xchg
ja
lds
frstor
je
test
jp
inc
test
cmc
movsl
xchg
lds
push
xlat
call
mov
insb
inc
mov
in
xchg
pop
inc
or
jbe
inc
mov
push
aaa
lds
popa
addr16
adc
insb
add
pop
jnp
xchg
fwait
mov
adc
xor
repnz
adc
stc
ds
movsb
ret
xrelease
mov
popa
fs
ffreep
push
inc
addl
jno
and
bound
adc
push
mov
lods
bound
xchg
push
hlt
outsl
add
add
add
mov
cmp
push
icebp
mov
sub
roll
popaw
inc
jno
bound
iret
add
fbld
pop
xchg
xchg
lds
dec
push
arpl
jns
mov
cmpsl
xor
outsl
sub
push
nop
addb
bound
xchg
jbe
push
inc
iret
pop
lea
clc
popf
jp
fistl
vpshaw
bound
outsb
dec
add
lea
push
popf
dec
jp
inc
gs
jne
in
cmc
leave
sub
jle
jmp
jbe
lret
lds
inc
test
ret
fbld
xchg
jmp
or
add
push
leave
cld
inc
flds
arpl
aam
iret
insl
inc
adc
inc
inc
jb
test
out
or
xchg
jp
fs
and
push
and
in
pop
sub
outsb
lea
dec
test
pop
push
pop
or
and
fs
jae
sahf
jl
sbbb
adc
fisubl
jle
outsb
pop
cmp
jmp
bound
mov
jnp
sbb
fwait
lea
mov
push
test
jne
dec
adc
add
sbb
or
fcmovne
pop
and
sbb
mov
movsl
xchg
fisttpl
arpl
xchg
cli
inc
ljmp
bound
mov
ret
or
movsl
xchg
dec
pop
roll
push
mov
mov
or
xchg
sbb
xor
movsl
xchg
fmull
fs
push
popf
ss
pop
add
xchg
lea
sbb
mov
not
insl
les
xlat
ret
xchg
push
push
pop
jb
xchg
push
test
or
push
push
std
inc
push
dec
dec
in
add
cs
jp
inc
sub
jecxz
push
push
mov
out
xchg
jle
lcall
mov
outsb
add
test
jg
popa
or
mov
in
cld
xor
and
xchg
setne
incb
les
adc
movsl
xchg
fimuls
arpl
cmc
test
lahf
inc
or
inc
pusha
jg
shll
outsl
movsl
xchg
pop
dec
dec
andl
sub
bound
lcall
leave
xchg
add
in
xchg
out
dec
filds
iret
pop
sbb
mov
mov
add
ret
ds
sbb
fwait
and
or
insb
dec
scas
push
xchg
lcall
test
addr16
xchg
xchg
cmpsl
mov
add
test
xchg
test
ja
popa
jmp
pop
ffree
sbb
jp
insb
push
lea
out
dec
std
negl
nop
aas
inc
das
popw
cs
fs
add
adc
mov
and
jge
aaa
test
aas
sbb
xchg
and
iret
inc
inc
xor
sub
mov
add
xor
popf
adc
mov
inc
test
js
xor
cmp
mov
imul
repz
test
push
pop
dec
or
clc
lds
sahf
push
inc
popa
push
leave
popf
jmp
arpl
popf
stos
je
daa
jb
push
cmc
pop
dec
rcrb
es
int3
lret
lcall
jmp
jge
in
mov
pusha
pop
bound
push
push
xchg
push
add
dec
inc
cmp
xchg
pop
pop
cmpsb
repnz
mov
mov
clc
mov
jbe
scas
std
insb
test
pop
lea
adc
movsb
push
push
inc
inc
jecxz
inc
jmp
sbb
fwait
or
inc
mov
ret
mov
mov
xlat
daa
xchg
gs
arpl
xchg
cmpsl
inc
mov
xchg
xchg
in
roll
pop
push
mov
jnp
test
ret
nop
dec
aad
adc
xchg
insb
fistps
lret
add
push
cmpb
nop
pushf
inc
mov
sub
push
xchg
pop
jecxz
xorb
rcll
mov
mov
subl
inc
mov
adcb
popl
notl
push
sbb
mull
mov
mov
rcrl
int
insb
mov
jmp
addr16
xlat
push
test
cli
add
mov
or
inc
aas
add
xlat
push
xchg
xchg
sbb
xchg
out
rcr
shll
adcl
mov
inc
std
add
adc
sbbl
jl
adc
pop
pusha
in
test
mov
and
lds
arpl
xchg
dec
inc
cmp
lret
test
and
insl
push
data16
pop
ss
xor
out
addb
push
adc
test
andb
pop
push
int3
xor
mov
mov
popf
inc
es
cs
sbb
pop
pop
ret
shll
cmpl
rcl
das
cmpb
inc
dec
mov
fs
ss
stos
mov
push
pop
lahf
les
in
test
sti
inc
sbb
sbb
je
jmp
mov
aad
fucomi
add
or
inc
push
insb
insb
inc
repz
loop
xor
xchg
push
add
in
cmc
cmc
dec
xchg
xlat
dec
cltd
sbb
jle
jns
mov
xorb
insb
mov
pop
ret
jp
std
push
cmp
pusha
shrb
pusha
sbbb
or
test
sbb
insb
xchg
rcrb
sbb
sbb
lcall
ret
or
inc
loope
push
stos
pop
mov
mov
test
adc
in
sbb
pushf
mov
sbb
icebp
call
xor
mov
pusha
sbb
adc
push
or
mov
out
fcompl
lds
ret
xchg
leave
or
std
scas
insb
pushf
sti
lods
mov
fcomps
pop
inc
or
sti
mov
xlat
sbb
xor
add
andb
dec
adc
mov
sbb
fisttpll
faddl
dec
jecxz
mov
test
inc
aaa
xchg
pop
and
test
fwait
fs
and
aam
adc
paddusw
xchg
pop
test
mov
in
or
pusha
mov
dec
insl
sub
aad
je
xchg
ss
testl
in
pop
and
push
incb
cmp
push
inc
pop
adc
aas
xchg
insb
lcall
mov
and
jecxz
xor
add
jae
mov
scas
sbb
mov
mov
imul
inc
insb
or
push
inc
in
inc
adc
repnz
loope
sbb
inc
rcll
jns
jecxz
sti
add
shlb
std
sarb
push
mov
popf
js
dec
shl
mov
push
loopne
aad
mov
insb
mov
inc
and
out
inc
fimuls
test
xor
and
xchg
mov
inc
stos
jg
in
inc
sub
int3
xor
testb
adc
or
xchg
push
loope
pop
xor
aad
xchg
mov
jb
push
ret
enter
in
rclb
aad
mov
aad
test
and
and
and
bound
adc
push
push
inc
xchg
xchg
popf
and
ret
fnsave
push
sbb
roll
mov
sub
mov
in
gs
and
imul
push
sar
adc
or
gs
aad
ds
inc
in
xchg
frstor
bound
enter
dec
movsb
fs
xchg
les
adc
in
lea
inc
push
outsb
jb
jb
push
lods
insb
xchg
add
mov
jnp
xchg
adc
imul
xchg
sar
adc
inc
loopne
movsl
adc
out
pop
inc
and
dec
adc
push
frstor
je
shlb
and
add
jecxz
or
or
aas
or
push
pop
mov
mov
les
aad
mov
insl
aam
cmc
popa
aad
add
test
jmp
add
inc
or
daa
gs
aaa
push
pop
movb
jnp
test
ds
xlat
loopne
cmpsl
insb
pop
xor
inc
adc
jmp
sbb
inc
dec
jmp
adc
xchg
dec
mov
inc
insb
push
rcrb
push
cmp
push
daa
test
jmp
hlt
push
mov
push
enter
cld
iret
insb
lds
test
push
subb
dec
aaa
lds
bound
paddusw
je
popf
cmp
aam
shlb
pusha
test
inc
xchg
fs
push
out
push
popf
movsb
std
imul
pop
sbb
add
cmp
xchg
outsl
inc
in
mov
mov
sbb
xchg
je
test
fs
stos
aad
xchg
push
inc
and
sub
pop
adc
and
mov
push
push
push
lahf
or
dec
lret
xor
inc
xchg
mov
lret
inc
mov
in
loopne
dec
xchg
cmp
insb
add
push
pop
dec
arpl
in
cwtl
ret
mov
push
in
rcl
popf
je
bound
lds
int3
push
sub
jmp
pop
jl
adc
aad
insb
andl
jb
push
ja
inc
test
xchg
push
inc
mov
cltd
inc
insb
inc
xor
cmp
in
lods
arpl
dec
inc
jecxz
and
push
mov
pop
xchg
insb
add
popa
dec
cmp
loopne
fs
pop
push
ds
cs
shrb
cmp
inc
xor
clc
mov
into
push
mov
ret
add
repz
add
mov
dec
fs
adc
xorb
pop
gs
cmp
das
adc
out
adc
add
mov
mov
fnsave
push
scas
inc
popa
push
jno
inc
jmp
jecxz
test
insb
add
sbb
push
and
enter
test
jnp
xchg
pop
add
shrb
test
or
mov
sbb
fcmovnb
pop
xchg
hlt
rorl
mov
push
test
push
jnp
imul
rcr
imul
test
insb
inc
loopne
mov
jnp
xchg
inc
gs
aad
mov
push
fldl
insb
popa
add
fs
inc
inc
je
dec
xor
sbb
inc
and
or
ret
add
xchg
rorb
fs
inc
les
aam
popf
sbbl
arpl
push
lds
je
addb
inc
adcb
dec
adc
and
mov
xchg
ret
gs
jg
mov
xlat
out
inc
ret
addr16
arpl
xchg
icebp
inc
inc
pusha
and
mov
popa
add
inc
push
aad
xor
orb
jae
sub
jb
push
sub
fisttps
add
inc
aad
xchg
inc
inc
shl
push
push
dec
and
xor
inc
push
mov
push
notl
adc
inc
jb
je
test
xchg
aad
mov
inc
and
or
cld
adc
xchg
lds
es
ss
std
mov
xchg
addb
jb
xchg
cmpsb
mov
fiadds
xor
dec
adc
mov
push
xor
fildl
pop
xchg
cmp
push
inc
shlb
daa
pop
jb
insb
pop
jo
mov
mov
in
fldcw
aad
adc
add
cmp
out
popa
pop
loopne
cmpsl
repz
mov
cmc
xlat
inc
cmpsl
push
dec
lea
jae
je
xchg
sub
push
xor
dec
push
inc
std
adc
cmp
in
sahf
fldl
int
repnz
xchg
call
test
cmpsb
insb
fldl
adc
fs
ret
outsb
xor
pop
insb
popf
add
push
inc
and
out
xor
adc
inc
fldenv
fs
pop
lea
leave
push
sti
and
jl
iret
dec
dec
sbb
pop
push
mov
in
mov
dec
xchg
sub
popa
je
sbb
je
jno
test
ficompl
lret
insb
faddl
imul
loopne
dec
ret
popa
pushf
xor
inc
mov
xchg
push
xchg
test
ds
fldt
popa
adc
mov
mov
mov
mov
aad
bound
adc
je
test
insb
sbb
cmp
xchg
sub
pop
mov
pop
popa
mov
je
xchg
mov
push
fsubrl
out
fdivl
xchg
pop
rol
cmp
insb
fwait
rorb
fsub
bound
mov
rcl
fnstsw
cmp
mov
int
iret
push
mov
push
xchg
out
aad
bound
adc
loopne
dec
pusha
aad
xchg
sbb
xchg
cs
aad
xor
ficoms
pusha
into
les
test
xchg
movsl
out
inc
add
imul
in
insb
lcall
das
pop
rolb
push
mov
popf
adc
bound
dec
fs
mov
iret
add
mov
scas
daa
aam
loope
fsubl
inc
pop
inc
jno
or
incl
mov
test
inc
fcomi
pop
bound
and
xchg
rcrb
insb
leave
pusha
mov
mov
test
roll
xchg
loopne
push
and
mov
xchg
inc
gs
inc
jg
xor
xor
leave
dec
les
sarb
lods
xchg
xchg
rcl
mov
insb
dec
rorb
aad
mov
or
sti
jmp
adc
mov
push
cmp
inc
and
push
and
aad
xor
xor
test
jmp
mov
clc
addb
mov
pop
xor
mov
js
dec
inc
pop
dec
in
adcl
insb
mov
add
pop
xchg
jbe
inc
push
jecxz
in
add
or
imul
adc
cld
dec
insb
dec
fs
xor
test
daa
cltd
lds
testl
push
test
or
fs
aad
xchg
mov
jno
aas
mov
and
xchg
movsb
pop
push
pusha
aam
bound
or
repz
inc
fcoml
cld
dec
lret
insb
xchg
xor
test
adc
and
test
enter
push
inc
dec
lds
fsubl
xchg
je
inc
in
and
inc
xchg
es
cld
insb
pop
xor
mov
data16
push
inc
xor
imul
adc
in
cmpsb
loopne
cmpsb
push
aad
mov
xor
add
dec
jb
adc
loopne
daa
add
xor
loop
fs
daa
pop
pop
aaa
insb
hlt
aad
adc
mov
push
push
adc
cmpsl
xchg
or
rcl
push
aad
mov
out
mov
aad
loopne
imul
in
loopne
je
push
cmp
xor
sbb
vsubps
inc
test
popa
lds
fs
in
mov
sbbl
rolb
adc
adc
mov
insb
pop
std
sub
xor
out
dec
and
aad
rolb
dec
flds
jb
push
mov
add
aad
mov
pop
xchg
sub
dec
push
inc
dec
jb
div
call
mov
in
mov
add
push
pop
test
xchg
cmp
bound
pop
insl
jle
insb
test
cltd
pop
bound
hlt
fldenv
add
sarl
mov
aad
mov
fs
adc
inc
bound
push
loop
pop
push
cmp
mov
dec
test
cwtl
test
js
bound
clc
adc
fsubrl
int3
arpl
lock
shrb
mov
or
ds
pushf
bound
rolb
push
mov
ds
pusha
xchg
push
inc
xor
mov
outsl
in
cltd
insb
sbb
push
subl
jl
add
mov
fs
bound
dec
or
push
clc
adc
add
cs
or
add
addr16
cmp
add
cmpb
scas
test
popa
xchg
loopne
fstpt
mov
inc
loop
xchg
xchg
add
addl
xchg
bound
xorl
push
out
pop
test
in
scas
xchg
lcall
in
push
push
mov
subb
xchg
addl
dec
test
mov
sahf
mov
repnz
mov
loopne
ss
xchg
in
sbbb
bound
jae
and
in
mov
out
dec
test
ja
sahf
lahf
inc
call
fs
pop
popa
cli
test
inc
test
out
cld
adc
xchg
bnd
popa
incb
push
loopne
add
sbb
mov
push
loop
test
mov
jno
in
inc
test
inc
loope
test
andl
out
cmp
mov
add
dec
call
faddp
add
cli
movsb
jb
push
sub
inc
push
xor
cld
test
mov
clc
mov
jo,pn
push
pop
dec
sahf
inc
dec
fs
test
adcb
in
repz
and
rcll
push
adc
jmp
xor
push
or
cld
adcb
xorb
lea
fs
sbbb
pop
mov
xor
test
or
test
out
icebp
cmpb
add
xchg
push
call
lahf
clts
fwait
je
cli
pop
pop
fs
xor
mov
mov
add
movsb
adc
inc
jg
dec
cwtl
lcall
pop
addb
lods
ret
addb
movsl
or
jne
mov
out
cmp
test
adcb
pop
jg
dec
jle
lcall
push
xchg
pop
jle
mov
fs
mov
pushf
lds
push
loop
xchg
andb
dec
push
in
xor
xchg
xorl
lahf
ret
add
aas
fs
mov
xor
insl
popl
mov
xchg
adc
incb
mov
orb
test
test
les
add
and
fs
in
lds
out
mov
jo
adcl
push
mov
push
cli
movsb
add
xchg
gs
sub
push
lahf
cs
inc
or
mov
loopne
and
push
add
xor
push
loope
andb
push
in
lcall
fs
sub
jno
adc
call
mov
xchg
bound
xor
inc
pop
or
jle
orl
outsb
dec
lds
mov
sub
push
fs
xchg
xchg
xor
data16
pop
xor
daa
or
sub
lds
xchg
jge
xchg
mov
in
and
or
xchg
pop
add
setl
push
inc
pushf
pusha
call
pushf
movl
pushf
lea
jb
call
test
cmp
bound
jmp
fldt
dec
ja
jmp
xchg
xchg
test
sbb
sub
jp
cmp
jl
adc
movsb
jne
pushf
ss
add
lret
repz
xor
jne
push
mov
mov
cmp
or
xor
psubw
push
push
xor
call
rcll
or
ficoms
inc
leave
fs
and
add
pop
mov
cmpsl
fstp
in
mov
imul
scas
xchg
xor
mov
pop
fists
pop
mov
fistl
mov
jb
icebp
mov
not
daa
cwtl
xor
add
lds
inc
mov
add
mov
mov
fdivrs
ja
jb
shlb
add
push
dec
movsb
dec
sbb
mov
jbe
mov
sarb
loope
jbe
icebp
mov
je
adc
or
sub
mov
add
xor
in
shl
call
addps
push
bound
daa
adc
cmpsl
repnz
mov
test
jle
inc
jb
fimull
inc
adc
xchg
jg
cmp
imul
push
ja
jne,pt
and
push
add
cmpsl
inc
test
cmpsb
mov
clc
sub
push
cmc
mov
setb
push
mov
adc
cmp
gs
ss
mov
jg
mov
cli
out
movsl
push
or
mov
jge
ret
js
test
sbb
out
loopne
out
and
mov
and
imul
mov
out
xchg
jmp
rcr
add
dec
repz
rcll
sti
icebp
push
jmp
cmp
and
and
daa
int
adcl
je
pop
xchg
or
ret
and
lea
jne
bt
neg
mov
mov
xor
sub
push
lea
stc
movb
sub
cmp
jmp
jo
xlat
pop
addr16
fs
imul
mov
inc
bound
call
cmc
mov
or
scas
xor
xchg
or
popa
dec
iret
movsl
jmp
dec
adc
push
pop
mov
lahf
xchg
mulb
jmp
sbb
repnz
mov
rcr
outsb
or
popw
cmp
sbb
or
popa
pop
bound
ss
jo
cmpsl
push
fiadds
dec
sbb
cltd
inc
in
aaa
xchg
mov
cmpsl
les
test
lock
out
add
adc
sbb
lcall
fdiv
fmuls
sub
lods
pop
clc
mov
cmpsb
push
insb
addr16
add
lods
aaa
ret
push
test
movl
push
std
test
dec
jg
jge
in
cmp
cli
imul
cmp
popa
sbb
jecxz
jge
or
sbb
out
mov
test
pusha
movzwl
xor
pop
mov
stc
add
test
mov
push
pushf
test
mov
mov
pushf
lea
je
cmc
cmp
pusha
jmp
push
lea
jne
call
lea
jne
call
clc
stc
stc
test
jmp
add
mov
inc
sub
btc
rcr
mov
cmp
push
bt
stc
sub
jmp
sete
pop
lea
call
pusha
lea
jae
not
mov
shrd
setge
clc
mov
inc
mov
pusha
pusha
jmp
test
test
call
bt
cmp
push
lea
ja
cmp
sub
rol
sub
shld
cmp
rcl
bt
add
call
clc
bt
repnz
push
jmp
bts
push
not
stc
mov
rol
push
adc
push
mov
sar
and
movsbw
push
movsbl
push
bts
push
rcl
adc
bswap
test
mov
push
add
mov
not
sar
adc
mov
pusha
pusha
stc
or
mov
jmp
sub
call
cmp
mov
cmp
mov
inc
ret
push
or
cltd
mov
jb
push
jecxz
add
push
addr16
stos
or
aad
pop
cmp
and
mov
movsl
jp
jae
std
es
mov
add
or
xor
jae
mull
pushf
mov
not
mov
mov
lea
jmp
cmc
cmp
call
cmp
add
adc
inc
jns
sub
in
push
xchg
stos
dec
inc
call
cli
cmp
in
cltd
inc
loopne
xchg
mov
scas
lret
stos
popa
ret
jmp
pop
jnp
fidivl
xorb
imul
xor
rorb
ss
hlt
dec
lock
dec
mov
push
pmuludq
cmp
jecxz
fadds
fcomps
mov
mov
mov
xor
bt
clc
mov
pushl
sub
stc
clc
pushl
cmc
neg
lea
js
push
push
dec
call
mov
bound
adc
ret
adc
lcall
jmp
aaa
daa
iret
addr16
jae
xchg
xchg
jecxz
or
daa
and
cmp
aam
aas
inc
lahf
sub
in
or
dec
pop
dec
movsl
outsb
mov
arpl
out
jl
pop
filds
ret
add
sbb
and
sti
sahf
test
push
movsb
mov
mov
std
adc
nop
into
and
adc
js
outsl
nop
push
push
mov
out
jbe
mov
add
subl
negl
out
mov
out
out
cmp
pop
imul
xacquire
test
xchg
cmp
out
sub
and
jl
nop
cmp
cmpsl
or
lahf
cmpl
lea
lds
stc
and
pop
imul
lret
rorl
sub
lahf
dec
lcall
hlt
mov
cmp
lods
mov
mov
push
mov
jae
and
mov
aam
jb
adc
push
jne
jp
iret
pop
lea
setp
xlat
sbb
test
sbb
movzbl
pushf
lea
call
das
push
out
bound
mov
fs
or
pushf
hlt
stos
pop
sbbl
pusha
sti
leave
and
lods
adc
popf
dec
ljmp
jl
dec
lahf
dec
aam
lahf
dec
jnp
jmp
mov
into
data16
xchg
adc
rcr
insb
pop
adc
cld
idivb
negl
mov
mov
fs
push
ljmp
lds
fcomip
add
pop
daa
hlt
lock
push
xchg
clc
in
aas
das
es
subl
mov
cmpsb
int
daa
add
aas
out
xchg
or
dec
outsb
jge
das
subl
adc
in
mov
pop
add
jns
jp
lret
and
push
mov
sbb
mov
call
out
inc
or
xchg
adc
adc
xchg
shll
adc
cmp
arpl
mov
js
mov
adc
xchg
sub
pop
fimuls
and
aas
mov
xor
cltd
push
test
mov
xchg
push
dec
mov
pop
xor
fldl
inc
push
adc
mov
sbb
arpl
clc
mov
inc
in
dec
xchg
stc
dec
movsb
or
mov
test
jne
cld
jne
cmp
pop
jb
ret
imul
jmp
dec
lods
or
add
mov
xchg
mov
cmc
dec
js
aaa
sbb
push
hlt
xor
mov
orl
les
pop
idivl
fsubr
jmp
test
dec
push
cli
jp,pt
cmp
or
push
pusha
ret
push
pusha
movl
pusha
call
adc
cmp
bound
pop
cmpsl
sbb
xchg
testl
test
jno,pt
lahf
adc
bound
inc
jmp
scas
js
stos
loope
inc
mov
cmpsb
popaw
shrl
aaa
jecxz
jle
stos
jne
roll
cli
cmp
sub
push
aaa
or
xor
cmp
add
cmp
jns
out
out
jo
stc
push
aad
das
pop
hlt
pop
subl
movsl
mov
mov
je
stos
dec
cmp
lahf
cli
xchg
aaa
add
fwait
rcl
insb
pusha
bound
movsb
inc
adc
cmp
cmp
inc
insl
add
mov
jg
daa
lods
lds
fists
jmp
rcll
vpsrad
and
and
int
adc
mov
xchg
push
and
aad
and
sbb
add
jle
adc
or
mov
movsl
shr
xor
mov
adc
dec
xor
mov
fstps
div
cli
and
mov
fcomi
lea
or
mov
lret
popa
bound
push
cmp
jnp
fidivl
outsl
mov
adc
and
bound
popf
sub
dec
xor
test
mov
std
shlb
cltd
jmp
mull
sbb
out
pop
pop
mov
test
js
jne
out
sub
xchg
dec
xor
inc
stos
add
shrl
adcl
mov
out
dec
or
pusha
mov
scas
scas
cmp
add
aam
pop
shrb
xchg
adc
jo
ds
popa
into
push
jl
out
cmp
add
leave
fwait
test
fcompl
xchg
jno
jne
pop
rcl
nop
mov
pusha
push
mov
push
leave
dec
pop
xor
inc
sub
pop
std
cmpsl
inc
loope
pop
std
dec
outsb
js
and
add
std
push
shlb
adc
jge
mov
sti
inc
out
iret
jnp
mov
ds
lcall
push
jnp
xchg
ja
or
xorl
push
out
out
sbb
fs
lods
popf
push
je
shrb
or
andl
adc
sub
sub
mov
out
je
mov
sbb
cmpsb
xor
push
mov
lock
cmp
les
xchg
mov
jecxz
pusha
mov
mov
scas
inc
sub
lret
fnsave
fldenv
repnz
call
stos
adc
jns
enter
mov
ret
xchg
adcl
xchg
std
in
xor
cmp
dec
mov
mov
lods
lods
mov
loopne
jg
bound
mov
loope
pop
cltd
dec
xor
jbe
add
dec
mov
dec
mov
sarl
shrb
pop
aaa
shr
mov
enter
sbb
mov
xor
sub
data16
js
mov
ds
lcall
push
jb
mov
mov
jb
ljmp
lahf
lods
js
jo
stos
or
ja
scas
push
ja
dec
pop
dec
subb
mov
push
xor
cld
add
xor
jnp
outsb
jg
arpl
cwtl
mov
mov
cmp
imul
mov
in
jns
je
add
test
adc
add
ud1
dec
mov
fwait
shlb
or
in
pop
int
test
pop
call
jb
gs
cmp
xchg
mov
dec
icebp
xchg
push
int3
sbb
out
xchg
js
stos
mov
jle
divl
xchg
xchg
loopne
or
setge
clc
shr
mov
jmp
push
movl
pushf
lea
jmp
jecxz
xchg
bound
ja
sbb
fcompl
int
pushf
testb
out
imul
adc
fsubl
mov
pop
cmpsl
xchg
clc
sub
movsb
gs
adc
sbbb
cwtl
jg
data16
insb
addr16
pop
xor
or
insb
mov
jecxz
push
fildl
shll
add
fs
fdivrl
jns
cmp
je
jae
pop
cmp
insb
addr16
and
call
js
or
mov
sahf
fwait
das
adc
jp
dec
lds
pusha
jbe
xor
mov
jg
push
enter
or
lods
nop
fmulp
aaa
xchg
mov
and
add
pushf
fwait
hlt
lcall
aas
iret
scas
out
notb
push
int3
mov
pop
mov
xor
movsb
xor
cld
mov
mov
jge
aas
sbb
jmp
and
bound
js
bound
cs
imul
sbb
es
je
dec
and
sub
pop
jbe
push
test
jge
pop
jl
into
shr
je
xchg
fidivrs
push
xchg
cmp
fisubrs
pop
sub
into
sbb
mov
xchg
into
push
lret
push
jle
add
pusha
test
xor
or
sbb
add
mov
pusha
bt
movb
push
sub
clc
bt
jmp
mov
inc
or
sbb
mov
bt
cmp
cmp
sub
pushf
call
lea
jae
xchg
pusha
not
mov
mov
dec
inc
dec
dec
inc
not
setg
not
mov
pushf
pushf
push
lea
call
push
call
push
adc
mov
mov
pushf
pushl
ret
cmp
bound
call
add
jecxz
pop
loopne
mov
repz
and
adc
loope
inc
adc
add
lods
pop
lret
lock
add
adc
mov
sub
sbb
shlb
jle
movsb
psubusw
adcl
inc
in
inc
aam
mov
or
push
clc
jl
clc
notb
gs
push
nop
imul
int3
ljmp
hlt
and
repnz
cmp
jae
orl
mov
movsbw
sete
lahf
lea
jmp
pushf
lea
ja
pusha
inc
pushf
inc
add
xor
mov
sub
xchg
test
daa
mov
push
shl
mov
cmc
clc
jmp
lea
jb
cmp
cmp
pushf
jmp
repz
pusha
mov
pusha
pushf
movl
pushf
jmp
lea
jne
stc
btc
mov
stc
pusha
call
call
lds
imul
pop
and
jge
dec
dec
xchg
sarl
imul
fs
and
add
jmp
sarb
jle
pop
add
xor
ret
dec
mov
test
dec
into
xchg
mov
cmp
push
fimull
loopne
sbb
clc
call
add
lea
aam
dec
jb
loope
cmp
sub
xor
cmp
cli
and
push
jmp
sti
push
cmp
mov
fs
jne
pusha
lea
call
pushf
pushf
pushl
pusha
lea
jmp
pushl
popl
push
pushf
pushl
ret
pushf
movb
not
mov
pusha
lahf
lahf
mov
lea
call
pusha
pushf
lea
jb
pushf
pusha
movw
cmp
pusha
pushf
mov
lea
ja
test
call
pusha
lea
jne
shr
pusha
mov
pushf
movb
add
jmp
pusha
pushf
lea
jae
adc
mov
rcl
mov
shld
sar
mov
pusha
pusha
test
xor
stc
call
push
mov
lea
je
jmp
push
pusha
lea
jne
add
ror
mov
bsr
bsf
not
shr
sub
clc
mov
cmp
sub
test
bt
pushl
clc
cmp
jmp
pop
fiadds
bound
sarl
xor
xor
and
nop
aad
roll
pop
xor
adc
jo
aad
test
adc
cmp
add
dec
cmp
xchg
ss
jp
out
daa
jecxz
pop
xor
stos
fldt
mov
sbb
push
mov
xchg
fdivrl
insb
xor
jne
dec
loope
inc
daa
mov
ljmp
fsts
sub
adc
pop
sub
iret
ret
jmp
movl
jmp
pusha
pushf
call
int3
pop
jecxz
addr16
xchg
cmc
pop
imul
orl
andb
jae
mov
cmp
jp
shll
jp
out
sti
les
or
dec
sbb
xor
outsb
stos
xchg
pop
add
lea
push
sub
mov
dec
xchg
sti
ffreep
pop
mov
cmp
jo
push
adc
lds
sub
movb
push
bt
bt
repnz
pushl
call
stc
pushf
cmp
pushf
push
jmp
push
cmc
cmp
int
adc
mov
cmp
mov
popf
mov
push
cld
in
mov
adc
and
inc
push
stos
inc
push
stos
decl
sti
out
mov
inc
aas
xchg
dec
mov
mov
fdivs
sub
cmp
cmpsb
xor
out
sub
out
imul
or
bound
mov
popf
sub
inc
scas
inc
xchg
sti
cmp
adc
xor
rolb
adc
or
inc
adc
movsl
push
movsl
cltd
dec
sbbb
xor
mov
mov
sbb
adc
adc
out
shrl
cmp
mov
ss
xor
mov
rcrb
push
push
mov
adc
xchg
rcll
aad
fmuls
mov
mov
dec
lods
cmp
subb
stos
inc
cmp
sub
inc
and
fcoml
adc
mov
cmp
arpl
mov
das
pop
mov
outsb
mov
bound
xor
cmp
sub
dec
jp
test
dec
push
test
test
aaa
neg
scas
adc
push
js
push
icebp
xchg
push
sub
outsb
test
pop
or
xor
cltd
cmp
mov
push
test
jb
std
dec
mov
repz
and
popa
mov
aaa
mov
lds
adcl
hlt
test
ja
rcrb
jp
in
xchg
cmp
stos
mov
push
cmc
cmp
pusha
pushf
lea
ja
rcr
sub
or
xor
rcl
add
shld
btr
rcr
clc
mov
stc
mov
stc
repnz
pusha
lea
jne
call
bsr
or
jmp
call
leave
lret
xchg
mov
xor
push
jno
call
pop
adc
test
xchg
add
dec
aad
xchg
mov
dec
xchg
push
insb
movl
xchg
inc
outsl
dec
adcl
lahf
push
xchg
data16
dec
push
lcall
and
xchg
mov
cmp
adc
xchg
test
cltd
into
addb
lahf
gs
inc
fwait
add
push
orl
gs
inc
popf
add
out
fcoms
mov
fimuls
aaa
xor
mov
fsubrp
dec
mov
push
pop
imul
or
mov
pop
xor
inc
out
fs
xor
mov
fimuls
divb
mov
fsubrp
dec
mov
push
imul
or
push
sahf
dec
fidivs
xchg
xchg
push
push
lahf
push
dec
xchg
addb
push
fs
mov
test
ds
add
test
int
mov
addr16
bound
xchg
lods
mov
nop
inc
test
fisttps
scas
jo
pop
adc
sahf
jmp
cmp
inc
popf
lret
enter
cmpb
pop
or
and
mov
test
test
daa
jbe
xor
nopl
aas
add
das
jo
xchg
sbb
xchg
rcl
pushf
shll
add
test
push
mov
scas
iret
js
push
stos
mov
add
mov
insb
mov
push
cmp
cmpb
clc
inc
xor
arpl
movsb
xor
and
mov
push
dec
pop
outsl
jo
fists
dec
xor
add
push
cmp
cmpsl
add
jecxz
add
mov
mov
repz
push
push
mov
nop
outsl
pop
loopne
dec
ret
push
mov
adc
and
icebp
jno
and
inc
in
arpl
std
jno
mov
xchg
push
push
test
aaa
data16
jg
lahf
push
roll
adc
cld
icebp
bound
jecxz
mov
adc
test
jno
fcompl
xchg
sub
inc
je
mov
adc
mov
lahf
rcll
inc
push
or
add
sahf
mov
in
push
push
jns
les
ret
jl
mov
mov
iret
pusha
repz
scas
popa
test
daa
mov
mov
inc
xchg
lods
out
push
bsf
jo
outsb
mov
jno
push
jb
xchg
mov
std
mov
fs
dec
je
shr
jbe
les
jg
mov
shr
mov
fucomip
in
dec
iret
test
scas
pop
inc
ss
jno
ds
mov
sarl
lret
ss
add
xchg
outsl
mov
dec
fistps
cmpb
addb
xor
inc
add
and
imul
inc
loope
popa
xor
test
pop
fcoms
xchg
rcrl
les
xorl
ss
ret
sub
sbbb
popa
add
arpl
mov
sarl
inc
js
adcl
adcl
jl
add
sarb
iret
call
xor
rolb
xchg
gs
incb
lret
test
mov
cmpsb
faddl
out
dec
lds
inc
popa
outsl
push
ret
add
mov
cs
test
dec
sbbb
cmc
cmpl
adc
xchg
add
xor
pop
push
cs
lds
xorb
mov
inc
outsb
arpl
enter
pop
icebp
push
bound
mov
imul
in
aam
sbb
les
xchg
or
xlat
cmp
aad
add
add
addb
add
xchg
sub
push
ret
popf
sbb
jae
popa
pop
mov
out
loopne
mov
rorl
subl
inc
insb
sbb
mov
hlt
cmp
mov
dec
sbbl
inc
pop
mov
pop
roll
sahf
xchg
sbb
xor
mov
cmp
repnz
xor
pushf
or
mov
popa
shlb
aad
and
mov
and
das
loope
in
test
fidivrl
push
dec
pop
add
fisttpl
test
test
add
jno
adc
jno
bound
or
add
sbb
pop
inc
fistpl
gs
lahf
push
stos
je
inc
inc
ja
ret
inc
jno
bound
cmp
repz
roll
jecxz
lds
subl
xchg
lds
add
movsl
test
movsl
pop
jb
std
adc
roll
popa
xchg
sub
rcrl
or
inc
mov
icebp
push
and
push
cmp
jno
test
cs
push
mov
inc
or
push
add
adc
adc
jle
pop
dec
or
shll
frstor
pushf
jb
mov
sbb
fisubrs
stos
jmp
arpl
sub
inc
cmc
mov
roll
sbbl
lahf
adc
movsl
sub
adc
cmp
add
aam
test
add
fnstsw
scas
cld
call
and
addb
add
cmp
adc
add
das
sbbl
ret
adc
push
add
jge
aaa
hlt
mov
inc
addl
jle
stos
jae
test
jle
mov
roll
inc
push
jno
les
push
in
dec
mov
popa
sahf
jge
pushf
aad
loope
push
push
inc
addl
test
popf
xor
fwait
aaa
mov
add
inc
mov
push
inc
lds
adc
add
out
dec
jno
jne
inc
push
jbe
push
inc
inc
lods
out
aam
roll
loopne
mov
push
andl
rorb
test
ficoms
dec
mov
sbb
shll
leave
leave
and
and
mov
pop
xchg
cs
sub
test
popf
xchg
lods
outsl
popa
icebp
into
decb
test
and
push
shl
dec
rcl
add
inc
pop
test
pop
push
icebp
arpl
arpl
inc
sti
sub
les
mov
cmp
xchg
cmp
adc
adc
cmp
xchg
xchg
push
inc
ret
push
pop
add
inc
fwait
adc
jb
push
add
and
lds
roll
jo
push
push
xchg
add
xchg
jmp
and
mov
nop
shll
mov
stc
sbb
xchg
add
push
addl
xor
cmpsl
gs
inc
pop
popa
xchg
ret
push
addr16
add
pop
jg
inc
in
add
insb
mov
inc
or
sub
mov
add
and
mov
inc
push
inc
dec
insl
in
xchg
add
jno
push
jo
pop
jg
enter
ja
jl
enter
gs
dec
inc
push
inc
loopne
fistpl
ds
test
xor
ffree
mov
jno
inc
push
cwtl
push
lds
xchg
xchg
loope
rolb
and
call
cltd
inc
add
mov
inc
adc
mov
adc
sbbb
push
jno
add
add
push
pop
fs
das
shr
addr16
pop
adc
pop
fcoml
popf
add
popf
dec
fistpl
sub
cmp
cmp
ret
and
test
inc
add
ret
lock
push
inc
sub
cmp
mov
fists
aad
jno
xchg
hlt
sbb
roll
dec
xchg
sbb
lds
ror
daa
movsb
add
or
mov
push
mov
mov
add
addb
cmpb
push
add
or
mov
inc
inc
repz
mov
sub
popf
xor
enter
lock
dec
ss
dec
repz
adc
popf
add
movb
xor
inc
mov
fs
push
and
mov
mov
push
cwtl
jp
add
push
push
movsl
xor
inc
test
dec
push
push
adcl
inc
sbb
add
pop
add
inc
and
inc
or
inc
push
clc
jnp
xchg
inc
hlt
pop
xlat
push
jae
cli
mov
and
pop
adcl
clc
pop
inc
jmp
or
rcll
bound
ret
xor
dec
add
inc
or
pop
or
add
movsb
or
sbbl
fs
jns
repz
mov
dec
dec
test
or
loopne
test
push
cmp
mov
push
mov
xchg
imul
jns
mov
pop
mov
inc
test
mov
push
aam
xor
sub
xchg
pop
fiadds
inc
xor
xchg
mov
pushf
fiadds
call
lret
or
incb
in
icebp
pop
ret
ret
inc
sbb
les
xorl
fwait
push
and
ja
pop
push
les
stc
pop
add
pop
test
sub
inc
std
testb
push
test
mov
pop
mov
lahf
pushf
in
dec
mov
subl
std
push
cmp
mov
je
jp
popa
inc
push
pop
push
cmp
ret
icebp
xor
push
add
inc
mov
push
mov
cltd
add
jmp
or
fs
xor
popf
xchg
jmp
push
inc
ds
and
fwait
push
add
mov
pop
push
test
out
push
mov
adc
cmp
push
jle
push
jnp
lds
jae
sub
fisttpl
push
add
pop
sub
les
push
or
push
sbb
push
imul
jecxz
inc
inc
xchg
cmp
loope
ret
push
dec
jecxz
inc
ss
add
xchg
roll
inc
inc
sbb
mov
test
push
in
std
inc
xchg
and
or
sub
int3
filds
inc
dec
sbb
inc
push
and
add
mov
inc
dec
loope
pop
xchg
add
incb
and
inc
xor
adc
rcrb
gs
mov
pop
jne
inc
ret
sbb
dec
push
push
and
jle
arpl
inc
fwait
jg
push
stc
push
xor
push
cmp
loope
fisubl
arpl
loop
push
push
lcall
adcl
int3
je
and
inc
test
adc
pop
push
test
popa
push
nop
mov
jnp
mov
test
enter
gs
lock
xor
pop
lret
inc
mov
ljmp
sub
test
and
adc
pusha
push
and
repz
lea
adc
fisubs
push
mov
xchg
push
inc
repz
ret
jmp
fimuls
xchg
aam
repz
add
mov
or
stc
sbbb
je
inc
repz
rcrl
and
loope
rcrb
push
jp
call
stc
lock
jecxz
sbb
pop
dec
cmp
jnp
adcl
xchg
add
and
je
stc
and
loope
push
add
jp
xor
dec
je
xchg
aam
pop
iret
xor
out
pop
shll
lret
pushf
sub
xchg
loope
pop
add
push
mov
cli
popf
and
lret
pop
cmp
adc
add
sub
sub
mov
pop
popl
xlat
push
test
adc
mov
mov
filds
dec
dec
mov
inc
leave
push
mov
adc
popf
adc
xor
out
fcompl
dec
iret
aam
int3
fcmovnb
or
rorl
nop
dec
pop
inc
pop
xor
or
daa
inc
xchg
mov
inc
je
dec
js
or
roll
popf
ja
adc
mov
or
mov
or
loopne
adc
cltd
mov
push
sbb
inc
cmp
jle
rolb
xchg
xchg
push
aad
mov
insl
sub
sub
repz
ret
inc
add
pop
add
arpl
lret
or
jle
rcrb
je
mov
and
fiadds
push
inc
mov
hlt
jmp
inc
pop
jns
call
mov
push
mov
icebp
or
or
sub
les
cld
or
jle
rcrb
mov
ret
fwait
pop
repz
pop
daa
jae
imul
clc
xchg
xor
mov
arpl
lcall
aam
fistpl
jecxz
icebp
mov
sub
icebp
shrb
rcrb
sbb
lret
jge
shlb
ror
or
mov
insb
rolb
loopne
lret
andb
pop
push
shll
or
pop
jb
jg
outsl
mov
jae
arpl
popf
xchg
mov
nop
out
push
xchg
add
add
pop
gs
jno
fists
inc
xchg
add
cmp
xor
arpl
add
sbb
push
bound
push
pop
pop
mov
fsubrl
test
inc
add
and
arpl
pop
test
sub
xchg
or
dec
xchg
cmp
insb
mov
inc
test
lea
xchg
mov
jg
adc
les
xor
jae
cmp
das
mov
dec
das
push
mov
test
fidivl
pop
mov
jae
test
lea
or
inc
jg
adc
xchg
mov
ficoml
mov
add
jle
inc
add
rorl
scas
frstor
test
ja
jae
int3
enter
loop
push
xchg
les
mov
pop
push
je
mov
test
outsl
dec
or
inc
xchg
pop
xchg
test
scas
mov
and
and
inc
mov
jo
rcrb
xchg
fwait
pop
xchg
adc
aam
repnz
das
push
mov
test
fidivl
pop
mov
scas
cwtl
adc
push
jno
scas
das
std
push
push
pop
add
outsl
pop
pop
adc
test
and
fidivl
je
fidivl
je
fidivl
je
fidivl
je
fidivl
scas
insl
orb
xchg
in
inc
push
dec
je
push
or
or
push
mov
inc
scas
push
add
sbb
mov
adc
shrl
adc
push
mov
push
pop
cld
loopne
outsb
call
rcll
int
faddl
and
xchg
test
mov
inc
inc
xchg
inc
add
lock
add
and
insb
out
inc
add
dec
dec
stos
add
stos
sbb
sahf
and
andb
and
repnz
push
cmp
dec
rcll
mov
roll
pop
inc
pushf
and
mov
pop
or
leave
xchg
inc
adc
std
in
xchg
xor
test
in
repz
xor
xchg
and
mov
xor
repnz
inc
mov
add
and
inc
adc
xor
btr
jno
jg
mov
push
sti
sbb
push
and
push
add
rcrb
cld
mov
ljmp
mov
jg
ja
cmp
adc
test
or
clc
aam
call
dec
iret
out
push
jne
pop
fsubrs
xchg
inc
fistpll
push
add
sub
nop
sbb
scas
es
outsl
nop
sub
arpl
dec
push
inc
sub
push
gs
addb
adc
aad
or
cmp
jmp
inc
add
fisttps
flds
iret
or
test
xchg
sub
ret
lds
gs
test
gs
xchg
push
adc
mov
pushf
jnp
pushf
pop
fcompl
test
addb
out
jns
mov
movsb
insb
inc
mov
das
sbb
push
xchg
lods
jp
inc
fists
aad
jecxz
cmp
cmp
push
add
cli
ljmp
cmp
dec
mov
dec
sti
loope
ffreep
push
xchg
sarl
mov
jge
xor
xchg
ret
rcll
sbb
aad
inc
mov
add
inc
mov
jo
iret
stc
ja
adc
rorl
cwtl
jno
ja
push
jo
xchg
cwtl
adc
daa
push
xchg
add
push
rcl
test
adc
dec
push
jo
adc
cs
inc
pop
xorb
pop
mov
pop
je
ret
inc
call
mov
push
lcall
mov
xchg
lea
lahf
arpl
ja
xchg
or
and
mov
mov
add
icebp
insl
and
jnp
nop
jb
adc
xor
and
out
add
mov
pop
and
outsl
loope
popa
mov
jmp
or
jl
fldl
jl
jae
imul
jo
inc
pop
push
in
dec
and
inc
and
mov
xchg
sbb
xchg
xor
sub
fidivs
data16
add
xor
jae
cltd
test
mov
test
inc
add
sub
inc
das
mov
idivb
xor
sbb
jg
movsb
xor
push
push
insb
push
lcall
test
popf
or
jo
arpl
pop
add
fisttps
scas
and
pusha
or
add
lods
xchg
add
adc
inc
lcall
push
jecxz
pushf
xchg
negl
fildl
shl
aam
js
pop
pop
jno
and
flds
add
sbb
incl
mov
popa
add
or
mov
xchg
push
dec
inc
ret
popf
arpl
cld
dec
decl
add
jnp
in
orl
xor
push
dec
ficoms
pop
add
add
lock
cmp
xchg
or
outsl
les
test
add
add
fcmovnb
fsubrl
test
jnp
inc
add
mov
cmp
out
orps
fstpl
jg
jl
leave
inc
jle
icebp
xchg
imul
in
mov
or
inc
ljmp
mov
int3
insl
fld
push
cmc
rolb
pop
cmp
lahf
jno
test
adc
mov
aam
or
pop
fs
sub
sbb
add
add
repz
adc
xchg
rclb
popf
cmp
push
loopne
out
inc
fsubs
sbb
inc
hlt
inc
loope
inc
aas
push
or
stc
loop
push
and
push
fnsave
mov
or
sub
les
push
mov
jno
pop
lds
push
fistps
push
filds
push
arpl
xchg
pop
jg
ret
add
inc
lock
push
sbb
pop
pop
dec
push
je
jb
dec
sub
mov
loope
bound
clc
lock
xchg
call
or
fisttpl
insb
pop
pop
cmp
mov
fsubrs
rcrl
adc
lret
mov
mov
xor
data16
lods
xchg
sub
cwtl
jmp
gs
pop
sub
xchg
xchg
das
xor
adc
pop
xchg
xchg
jbe
xchg
arpl
rolb
mov
inc
add
loop
les
adc
and
es
inc
movsb
lds
jne
test
aad
mov
insl
movsl
xchg
dec
notl
jp
xchg
sbb
and
dec
push
pop
sub
mov
leave
pop
jle
mov
lcall
jns
aaa
sti
jle
add
mov
mov
dec
js
push
out
dec
inc
sub
mov
or
movsl
out
xchg
test
cmp
dec
jmp
or
sti
jbe
xlat
cmpsl
pop
enter
mov
dec
imul
outsl
stos
enter
pop
roll
arpl
sub
and
mov
data16
mov
ss
es
add
xor
negl
cmpsl
push
xlat
repnz
inc
mov
movsb
sbb
daa
sub
dec
ficompl
add
xchg
out
mov
xchg
jbe
hlt
outsl
roll
mov
mov
dec
setg
xor
outsl
mov
test
cmp
ja
push
pop
mov
jnp
sti
dec
jp
addl
cmpsl
sbb
cwtl
leave
stc
cmp
test
mov
dec
sub
in
rclb
mov
gs
inc
add
test
add
push
sbb
ljmp
sahf
pushf
jbe
loopne
xchg
repnz
hlt
xchg
out
adc
mov
push
mov
test
adc
push
les
add
mov
andb
daa
push
lcall
jle
ja
push
pushf
or
add
popf
sbbl
movswl
dec
fstpl
jnp
xchg
xchg
dec
dec
or
jmp
xchg
sub
xchg
push
pop
mov
lods
mov
movsl
jmp
pop
lea
sbb
jo
xchg
xor
push
adc
filds
lds
jmp
fimull
xchg
lret
mov
xchg
ss
push
in
and
push
bound
xchg
mov
ficoms
dec
mov
imul
xchg
inc
push
or
data16
dec
or
shll
xchg
add
loop
adc
mov
outsl
shlb
aas
lcall
sahf
pop
add
xchg
in
data16
in
aas
test
xchg
inc
inc
pushf
add
movsl
xchg
insb
jns
xchg
clc
pop
mov
pop
ss
cmpsb
daa
jnp
mov
idiv
sbb
dec
stos
ss
xchg
mov
std
mov
lcall
jae
outsl
push
xchg
adcl
fiadds
and
test
mov
inc
adc
sub
mov
xchg
mov
int
xchg
dec
sbb
xchg
fprem
enter
sti
dec
jl
xchg
or
mov
outsb
cli
pop
int
push
stos
sub
enter
sahf
inc
sbb
mov
data16
xchg
popf
sub
pusha
mov
pop
add
cwtl
test
outsb
sahf
in
mov
sub
int3
dec
cmp
fcomps
lahf
xchg
pusha
adc
sahf
ret
dec
sarl
mov
aad
cmp
adc
inc
dec
cmc
xchg
shrl
rorb
adcb
lock
add
and
xor
xor
fwait
shl
add
push
popa
adc
add
inc
or
lds
or
andl
cwtl
mov
lock
push
shlb
push
push
popa
adc
xor
or
push
and
xchg
popa
inc
xchg
fildl
and
rolb
jns
popf
test
cmpsl
divb
inc
int
inc
inc
fimuls
sbb
lds
mov
psrlw
mov
pop
subl
add
push
int3
hlt
inc
push
mov
aaa
adc
push
inc
push
adc
push
ds
cmp
pushf
xchg
adcb
xchg
frstor
pop
dec
xchg
test
andb
dec
sub
push
inc
add
inc
inc
dec
les
movsb
xor
and
push
and
mov
or
orl
xchg
inc
shlb
or
ret
test
jbe
dec
cmp
pop
sub
orl
mov
test
fbld
xor
push
xor
out
sahf
ja
mov
insb
jl
inc
aad
and
cmpb
add
xchg
iret
jmp
paddq
icebp
inc
xchg
mov
jne
into
xchg
and
push
orb
jp
pop
je
push
push
xchg
xchg
out
gs
daa
pop
cwtl
xchg
lock
jg
lcall
jle
mul
nop
sti
mov
fildll
mov
mov
sti
stos
nop
cwtl
sahf
test
fmulp
inc
sbbl
inc
addb
ficompl
fdiv
daa
lret
jb
mov
sahf
cwtl
and
pusha
adc
add
aam
push
mov
lahf
outsb
push
mov
inc
lret
adc
pop
dec
in
test
jae
test
mov
out
bound
dec
dec
jnp
xor
pop
add
test
test
fmuls
dec
test
stos
push
dec
pop
jle
jmp
sub
inc
mov
test
sti
insb
mov
pop
stc
fsubl
xor
repnz
and
mov
xor
fmull
ljmp
loopne
adc
jb
xchg
pusha
pop
xchg
xor
mov
mov
popf
jge
and
repz
aad
add
es
cwtl
fmul
sub
xchg
jmp
rcl
adc
repnz
push
data16
outsb
jle
lcall
push
mov
inc
push
test
popf
sub
pop
mov
mov
ljmp
or
mov
hlt
movsb
adc
jl
mov
lods
cmp
xchg
push
push
sti
test
repnz
xchg
push
dec
pushf
cmp
push
scas
push
adc
dec
sub
cmp
pusha
push
es
mov
je
data16
push
test
or
inc
adc
stc
data16
shlb
cmpsb
in
push
or
pop
xorb
ret
push
data16
mov
popa
xor
scas
pop
inc
push
cmp
jmp
test
mov
jmp
mov
lods
pop
push
push
imul
in
test
jmp
push
dec
test
movsl
mov
mov
sub
mov
fwait
xlat
push
jnp
pop
bound
fiadds
in
push
and
or
and
sub
popf
fsubr
pop
in
add
addb
push
scas
push
xor
add
data16
in
dec
test
scas
mull
inc
mov
and
or
nop
das
jg
test
jns
bound
inc
xlat
jle
sub
inc
xchg
stos
jnp
popf
push
addr16
or
cmp
push
aam
lahf
and
mov
out
jno
pop
inc
xor
lock
bound
sub
bound
aas
or
inc
bound
scas
test
popa
mov
leave
mov
pop
addr16
xor
cmp
test
das
mov
mov
into
inc
add
adc
inc
inc
mov
aam
stos
sub
push
xor
mov
fwait
push
mov
popf
pop
add
mov
data16
and
mov
jge
lcall
int3
das
xchg
sub
jns
enter
xchg
scas
test
inc
push
rorl
fwait
xchg
lcall
cwtl
cmp
push
adc
sbb
push
dec
insl
test
xchg
push
and
or
jbe
xchg
or
inc
dec
insl
jo
add
pop
xor
xchg
stc
cs
push
out
outsl
mov
push
cmp
popf
jmp
xlat
pop
lahf
jns
sbb
mov
call
int3
fsubrl
mov
mov
mov
mov
leave
sub
mov
cmp
xchg
fimull
sbb
cmp
or
push
push
push
pop
sahf
mov
xchg
mov
mov
faddl
fdivr
sbb
ret
iret
or
movsb
and
aam
xchg
inc
repz
ret
jae
inc
jmp
jg
rclb
out
push
les
shl
xor
add
testl
aaa
xchg
ja
cltd
cmp
cmp
or
jge
lcall
test
test
sub
fstpt
jmp
imul
dec
or
cwtl
mov
aaa
or
ret
mov
pop
push
add
loope
push
cwtl
leave
jbe
stc
mov
or
fwait
dec
mov
mov
xchg
dec
jge
int
and
ret
decb
imul
repz
jae
lods
inc
inc
ljmp
mov
out
xchg
shll
loope
les
add
and
mov
sub
cli
fwait
ds
pop
fcmovnu
sub
cld
mov
dec
push
jge
or
add
mov
outsb
or
stos
pop
cmp
lcall
scas
ret
iret
out
pusha
push
lahf
xor
mov
fisubs
scas
sbbb
movsb
mov
sbbl
jo
mov
out
pushf
adc
data16
xchg
out
rclb
andl
in
and
jecxz
inc
test
test
push
xor
ret
in
sub
pop
sub
pop
mov
fistl
daa
lcall
ss
xor
sub
xchg
inc
and
out
faddp
adc
sahf
jg
adc
and
bound
cmp
out
xchg
div
in
sbb
scas
insb
xchg
cs
lods
pop
pushf
mov
dec
cmpsl
leave
ss
sub
insl
jg
rcrb
imul
scas
das
push
sbb
aam
inc
fldl
jbe
cmp
mov
fucomp
pop
jge
int3
or
call
mov
subb
jecxz
les
out
adc
inc
les
push
outsl
xlat
loopne
dec
jo
cwtl
push
and
cwtl
mov
xchg
dec
scas
and
push
jg
cld
cwtl
xor
fcmove
xchg
ret
call
js
sub
or
mov
inc
sub
or
rcrl
mov
jbe
repz
dec
cmp
loop
dec
mov
arpl
idiv
xchg
icebp
xchg
sarb
insl
in
mov
jmp
outsl
fisttpl
daa
add
pop
loopne
ficoml
mov
jno
icebp
cld
add
pop
popa
mov
dec
push
cmp
psubsb
add
jmp
inc
push
lods
jge
enter
out
inc
arpl
int3
jb
cmp
mov
daa
and
push
or
cs
nop
mov
mov
xchg
insl
cmp
mov
add
or
inc
or
push
ss
pop
fdivl
dec
xchg
jne
xchg
test
popl
shrl
push
lods
loop
and
stos
movl
xor
leave
lods
loop
loop
fdivp
add
pop
xchg
inc
add
mov
sbb
stc
adcl
or
mov
mov
push
popa
mov
jmp
ja
lret
jecxz
inc
adc
inc
stos
push
push
add
inc
push
push
xchg
inc
aad
sbb
inc
sub
inc
jle
jne
xor
loope
hlt
gs
inc
aam
bound
xchg
fimull
cmpsb
movsl
inc
cmp
sbb
cmp
push
les
push
roll
mov
fldenv
push
mov
inc
adc
xor
xor
push
inc
gs
inc
test
mov
inc
sub
push
inc
gs
inc
or
sbb
das
add
mov
inc
mov
fs
inc
jb
push
cmp
inc
push
add
lea
ds
inc
lock
rolb
add
or
or
add
inc
jae
xor
std
out
push
gs
popl
outsl
push
add
inc
loop
push
inc
adc
push
cs
inc
inc
add
inc
mov
dec
inc
pop
add
dec
fs
inc
fucomip
push
xlat
gs
loopne
lods
repz
insl
push
mov
add
inc
icebp
in
push
fwait
gs
inc
test
cli
jecxz
mov
mov
dec
inc
jp
sub
aas
fs
shr
push
andl
jge
sbb
mov
fwait
ret
lahf
and
fisubs
inc
add
lea
push
in
test
mov
cmp
mov
add
lea
stc
inc
pop
cmp
inc
out
cltd
lea
fs
rcrb
mulb
inc
jo
sbb
arpl
push
mov
add
inc
dec
pop
push
inc
cmp
and
inc
or
enter
mov
call
fs
imul
gs
inc
xchg
add
lea
sub
jl
or
jecxz
mov
xchg
mov
mov
mov
inc
loopne
xchg
hlt
jae
stos
push
mov
jl
lret
into
mov
add
xchg
cs
mov
sahf
adc
shl
mov
mov
in
ds
fidivs
sahf
dec
cmc
arpl
xchg
mov
mov
push
xchg
mov
stos
in
sbb
ret
je
mov
fcmovne
ss
test
mov
jg
lcall
hlt
in
mov
gs
addb
pushf
dec
arpl
aam
iret
cwtl
add
fcomip
sub
cmp
and
cld
fstpt
xchg
xor
out
xor
jge
and
sub
mov
mov
mov
pushf
leave
inc
adc
shll
loop
pusha
stos
xchg
cs
imul
push
mov
mov
rcrb
mov
or
sti
into
push
mov
ds
aam
push
push
shll
negl
mov
xchg
lahf
push
mov
add
mov
outsl
in
lahf
lock
pushf
inc
sbb
push
inc
sahf
xchg
sahf
aam
fadds
fs
pop
fstps
shrb
aaa
mov
jge
and
sahf
out
iret
mov
xchg
lret
stos
sub
mov
fidivs
out
clc
cwtl
pop
lods
mov
xchg
mov
adc
out
jne
lock
fildl
xchg
leave
mov
pop
imul
jbe
lahf
pop
stos
sbb
sbb
pop
rcrb
dec
push
xchg
mov
push
lds
pop
adc
fisubs
rclb
xchg
pop
mov
inc
xchg
js
repnz
xchg
lcall
enter
sbb
jno
mov
insl
pop
fisubs
pop
mov
or
adc
rol
mov
mov
add
pusha
mov
mov
and
mov
data16
push
popa
stos
sbbb
mov
mov
jmp
cmpsb
or
mov
and
pop
roll
pop
xchg
mov
mov
lods
iret
ss
adc
stos
movsb
out
loop
xchg
dec
xchg
mov
xacquire
aad
add
mov
push
push
movsb
mov
add
push
add
xchg
or
mov
mov
mov
test
jbe
xchg
mov
mov
pushf
repnz
test
lret
movsl
stos
mov
dec
popf
arpl
mov
or
pop
addr16
jmp
ds
cmpb
xchg
mov
inc
pop
pop
in
mov
jae
push
outsl
add
xchg
mov
sbb
fimuls
xor
mov
jno
sbb
push
and
mov
mov
movsw
sbb
sahf
imul
aam
jae
mov
sahf
out
sub
arpl
and
jl
xor
mov
jbe
test
jae
cmp
rcr
aad
mov
add
mov
mov
rclb
mov
inc
lcall
nop
iret
dec
jbe
outsb
adc
mov
sub
mov
bound
cmp
push
inc
and
aam
xchg
cmc
dec
mov
and
and
movsl
mov
pop
xchg
aaa
sahf
inc
cltd
cmp
mov
subl
lret
lods
mov
ret
push
pusha
sub
mov
mov
addb
mov
out
xchg
dec
push
outsb
test
jbe
inc
mov
sbb
addl
ret
sarb
jnp
jne
imul
fildll
xchg
cmpsb
jecxz
roll
test
icebp
xchg
inc
mov
xor
add
inc
cmpsb
pop
push
xchg
push
dec
xchg
mov
mov
cld
mov
jge
addb
xor
jns
sub
ss
xchg
mov
mov
loopne
add
mov
out
enter
sbb
ss
mov
xchg
pop
andb
cmpsl
sbb
sbbb
jl
out
rolb
xor
adc
or
or
or
test
lods
loop
ja
cmp
pop
outsl
and
mov
aam
sahf
pop
adc
aam
push
cmpsb
movsl
sub
std
lods
jmp
inc
inc
or
cmp
jbe
pop
icebp
xchg
sahf
int3
roll
push
ja
stos
add
mov
jb
mov
lds
adc
fistl
flds
xor
test
adc
lahf
dec
test
lods
jbe
ret
add
mov
sub
inc
sahf
jp
shlb
sti
mov
mov
enter
push
jl
shlb
cli
inc
fisubl
inc
cwtl
mov
add
pop
xchg
into
sub
gs
lds
pop
sbb
imul
push
fiadds
jp
jo
popf
ja
pop
mov
push
mov
sahf
mov
mov
jmp
cmc
mov
cmc
and
xchg
popf
jae
pusha
mov
flds
or
jb
pushf
adcl
and
xor
xchg
loope
fisttpl
pushf
fsubr
loopne
movsb
mov
icebp
pop
lods
fistps
mov
xchg
inc
xor
mov
lret
mov
das
stos
mov
mov
in
or
mov
sbb
imul
xchg
xchg
repnz
push
xchg
popf
xchg
sbb
sbb
insl
add
sub
insb
popf
stc
les
andb
jbe
lahf
cmpsl
xor
fwait
xor
daa
imul
nop
scas
sbb
jg
mov
lcall
mov
inc
dec
aam
xchg
bnd
mov
sbbb
xchg
inc
daa
adc
flds
add
push
adc
mov
call
sahf
fidivs
and
xchg
ret
sti
mov
mov
push
scas
ret
rcll
cmc
scas
pop
pop
xor
pop
mov
push
shlb
repz
and
lcall
mov
xchg
mov
popf
fcmovnbe
daa
push
inc
ret
inc
xchg
mov
lcall
shrb
xor
dec
lods
cwtl
mov
xchg
push
daa
cmp
push
je
addb
enter
orb
dec
aad
inc
inc
sbb
fldt
jae
xor
pop
jb
add
mov
or
test
mov
or
inc
sbb
pop
inc
push
and
and
mov
sti
mov
es
adc
or
cmc
mov
sahf
pop
jp
pop
mov
mov
out
das
sbb
lds
push
cwtl
jns
sbb
xchg
pop
mov
mov
mov
mov
or
add
gs
add
or
fsub
data16
outsl
rcr
in
outsb
popf
repnz
cwtl
mov
xchg
lahf
mov
pop
cmp
mov
fwait
cmp
cmc
mov
push
and
dec
mov
shlb
dec
test
pusha
mov
leave
addb
inc
sbb
sub
add
dec
push
push
push
jmp
shl
cmc
inc
and
adc
lcall
cld
pop
inc
xchg
das
mov
xchg
sahf
mov
inc
xchg
stos
xchg
push
mov
mov
shll
push
and
adc
out
rcll
sahf
mov
rclb
stos
mov
add
inc
in
insb
pop
movsl
adc
push
pusha
and
pop
addb
mov
lods
mov
add
fwait
les
icebp
fildl
mov
pop
repz
cmpsl
mulb
or
lea
sub
stos
xchg
add
push
add
sti
ret
xchg
aam
add
or
xchg
mov
lret
adc
dec
outsb
pushl
mov
push
shlb
dec
pop
xchg
les
stos
pop
sahf
movsb
fdivrl
xchg
mov
out
lds
cmpsl
test
jns
lcall
xchg
push
cltd
push
xchg
mov
sbb
andl
mov
notb
add
push
aad
xor
cmc
mov
enter
pop
and
into
xchg
push
jae
repnz
xchg
not
movsb
inc
in
mov
sahf
mov
stos
and
mov
cmc
icebp
dec
mov
inc
xchg
rclb
inc
sti
mov
jnp
or
mov
fcom
cmp
and
push
push
lahf
inc
ficompl
add
add
mov
sbb
imul
sub
lcall
xor
cmp
cmp
push
mov
add
aaa
lock
xchg
movsl
jo
fisttpl
stos
sahf
inc
pop
mov
add
cwtl
sub
adc
insl
jne
ss
pusha
mov
into
das
sbb
inc
fisubl
dec
inc
imul
mov
inc
fwait
data16
xchg
jns
ss
aas
outsb
jle
push
sbbb
cmp
in
xor
xchg
cmc
sbb
xchg
xchg
popa
xchg
sbb
pop
xor
mov
xchg
stc
lcall
outsl
sbb
mov
or
inc
ficoml
mov
push
pop
adc
or
decl
dec
push
jg
popf
lcall
scas
outsb
aam
mulb
dec
mov
stos
sti
in
jbe
inc
test
cwtl
shrl
js
jae
adc
push
sbb
movsb
mov
jno
testb
add
arpl
pusha
cs
push
movsl
xchg
test
insl
shlb
xchg
lods
mov
adc
inc
mov
loop
push
mov
add
add
fidivs
js
lcall
xchg
sub
jne
push
pop
das
cmp
dec
or
shl
aad
sbb
mov
push
cwtl
mov
sti
mov
jno
mov
mov
ret
add
xor
pushf
nop
push
mov
jo
shll
jb
push
xor
mov
shlb
xchg
xchg
sbb
loope
ss
aaa
shl
data16
out
stos
roll
inc
sahf
jl
je
mov
movsb
fistps
mov
mov
push
in
mov
pop
mov
out
xchg
cmc
stos
arpl
sub
jns
or
jo
orl
stos
ret
pushw
add
mov
inc
jb
mov
arpl
sahf
rcrb
sbb
xchg
sbb
sbb
add
jae
jle
mov
xchg
jle
lret
push
adc
xchg
pop
sbb
sbb
in
movsb
xchg
add
push
mov
inc
jg
mov
mov
and
stos
add
sbb
fld
xor
dec
push
arpl
data16
push
addl
popf
xchg
test
mov
rcrb
add
mov
xchg
pop
inc
outsl
pusha
sahf
xorb
add
sbb
mov
or
pushf
in
or
xor
and
aam
xor
cmpb
loop
xchg
and
nop
jg
push
rcl
jo
stos
xor
sub
lret
movsb
ja
jae
lds
lret
rcrl
jge
xor
lret
addr16
out
inc
scas
insb
repnz
mov
loop
or
sbb
mov
test
sub
scas
jb
popf
rclb
subl
push
inc
cli
xchg
inc
inc
mov
inc
int
inc
sarl
mov
gs
inc
mov
mov
mov
jo
sub
pop
xor
push
mov
push
aam
out
pop
inc
mov
lds
xor
outsl
jle
jae
push
push
adc
mov
data16
jb
repz
repz
xchg
push
es
mov
mov
xchg
stos
mov
jae
loope
xor
inc
rcrb
data16
lcall
adc
gs
push
addl
cmp
push
sbb
inc
jb
push
push
jmp
gs
jg
inc
rcl
movsl
scas
mov
jo
xchg
inc
jae
adc
lahf
inc
ss
pusha
dec
xor
hlt
or
mov
jl
and
push
aam
adc
aad
adcl
dec
sub
mov
adc
aad
sbbl
out
mov
cmpsb
movsl
int
bndstx
mov
adc
lret
lods
nop
jns
sub
adc
add
inc
testb
pop
lret
add
mov
mov
dec
mov
mov
out
inc
mov
cmp
or
sbb
pusha
mov
sbbb
pop
push
fbld
outsb
adc
dec
inc
insb
in
and
cmp
aas
mov
jo
sbb
movsb
iret
xchg
jno
repz
sub
xchg
aas
cmc
cli
add
jb
or
mov
inc
repnz
inc
xor
push
pop
sahf
jnp
in
loop
xchg
in
fldl
roll
lret
inc
insb
xchg
les
les
push
mov
rorb
outsl
pop
mov
xor
push
jae
pop
arpl
cli
jb
add
push
test
dec
push
inc
fistl
lret
inc
dec
inc
inc
jnp
shlb
pop
lods
add
inc
pop
inc
or
mulb
add
test
add
gs
frstor
leave
sbb
pop
dec
or
sbb
popf
fiaddl
addb
push
xchg
rcr
data16
ret
jl
cld
inc
mov
push
inc
iret
add
clc
dec
mov
inc
ret
into
mov
rolb
push
dec
dec
xchg
ljmp
push
add
cmp
or
in
push
xchg
fiadds
or
dec
jecxz
adc
inc
jmp
cltd
dec
mov
jb
sub
cs
adc
adc
fcmovnb
rolb
xor
inc
xchg
adc
arpl
cltd
insl
inc
pop
inc
and
xchg
inc
cmp
inc
jnp
push
pop
inc
std
leave
popf
inc
fistl
xchg
and
and
popa
or
mov
dec
xor
lds
dec
inc
sbb
xchg
mov
inc
inc
arpl
rorl
add
add
ficoml
add
popf
insb
add
inc
movl
jp
jae
dec
in
leave
mov
cmpsl
jne
or
leave
pop
lods
add
and
dec
out
pop
push
je
xchg
roll
test
popf
inc
test
and
or
dec
jns
in
pop
fcoms
add
jns
pop
repnz
jo
movsl
ret
popf
outsb
das
and
push
jmp
mov
push
mov
mov
sbb
mov
pushf
inc
fdivl
pop
out
mov
and
push
mov
sbb
lahf
mov
outsb
fs
stos
pop
mov
xor
stc
mov
jo
pop
or
imul
pushf
fnstenv
leave
test
js
outsl
push
mov
xchg
les
test
mov
xor
hlt
add
popf
fiadds
push
add
divb
rorl
pop
jne
and
dec
mov
rcll
xor
mov
push
andl
mov
add
lds
push
add
int
iret
ss
xor
mov
in
fdivrp
mov
imul
mov
cmp
sbb
jo
mov
mov
in
pop
adc
mov
popf
outsb
test
jge
scas
mov
cmp
xchg
pop
fdivrp
scas
stos
mov
pop
mov
ss
mov
mov
cmp
loope
ficomps
les
les
in
mov
inc
mov
inc
cmpsb
and
pop
xchg
dec
xchg
and
or
inc
lret
loope
xchg
mov
mov
pop
mov
cmp
add
stc
xchg
fcompp
mov
and
or
pop
pop
or
mov
and
outsb
mov
fmuls
sahf
add
cwtl
pop
mov
loopne
sbb
or
notl
lcall
mov
add
xchg
outsb
push
ja
and
push
pop
out
xor
shlb
divb
es
pop
mov
xchg
mov
scas
jbe
lods
incl
xor
mov
mov
xchg
adc
ss
jno
cmpsb
rcll
in
and
xchg
notl
cmc
xchg
arpl
ss
movsl
cwtl
stos
je
ja
les
xchg
mov
lds
stos
inc
jne
cld
mov
icebp
inc
inc
outsb
jns
push
mov
and
xor
outsb
orb
mov
dec
hlt
mov
fcmovnb
outsb
jg
aam
dec
sbb
mov
test
xchg
mov
fs
mov
push
je
popa
loopne
outsb
lahf
mov
mov
inc
and
inc
adc
xchg
mov
fs
out
jecxz
xchg
cmc
repz
and
ret
mov
cmp
outsb
daa
call
mov
cld
jp
pop
inc
mov
sbb
mov
cmp
inc
mov
mov
mov
and
mov
add
inc
mov
mov
or
sbb
jo
push
add
mov
dec
sbb
mov
lret
jb
es
push
mov
and
sbbl
xchg
ficoms
mov
and
xchg
xchg
icebp
mov
xchg
roll
jnp
mov
cmp
addl
mov
lret
popa
outsb
ss
jno
pop
push
xchg
push
sbb
and
lahf
xor
outsb
sbb
xchg
gs
push
mov
pop
push
nop
cmpsl
push
cs
jmp
sbb
sahf
inc
insl
nop
inc
loop
pusha
mov
mov
inc
rcrb
and
push
je
mov
add
mov
outsb
sbb
outsb
xor
incl
stos
fistps
test
mov
xchg
cs
xchg
in
xor
mov
pop
lds
push
stos
mov
imul
mov
pop
repnz
out
push
push
push
fidivs
cmp
mov
sub
aam
inc
repnz
ja
outsb
shl
ret
adc
movsl
dec
cmp
mov
cmp
or
sahf
icebp
sub
in
movsl
mov
ljmp
movb
mov
mov
aam
adcl
sbb
fisttps
lret
mov
dec
std
outsb
push
call
sbb
lods
mov
sbb
xor
lret
add
and
pop
pusha
inc
shrb
mov
jmp
cwtl
lea
and
mov
inc
lcall
inc
nop
movsl
pop
shlb
cmc
bound
ficoml
or
inc
mov
inc
cmpl
addb
mov
jge
mov
ja
les
arpl
add
push
scas
push
bound
mov
jo
add
rorl
enter
pop
shll
jp
lcall
add
inc
or
fists
icebp
lahf
dec
ret
add
out
xchg
sub
lcall
or
mov
fwait
int
xchg
sti
lods
add
mov
dec
mov
cmp
or
in
mov
int
outsb
insl
in
lods
mov
std
mov
imul
mov
or
int
jmp
xor
add
orb
or
cmpb
push
or
subb
cli
xor
fiadds
pop
orb
cmpsl
jns
pop
cld
mov
movsl
imul
and
mov
sub
roll
inc
jae
test
ljmp
mov
xchg
pop
push
dec
xchg
leave
sbb
jo
sbbb
mov
sbb
fwait
adc
jne
xchg
mov
xchg
xchg
push
outsb
addb
add
addb
pop
testl
adcb
push
addb
test
test
test
test
test
test
cs
dec
test
insb
xor
inc
stos
inc
jmp
inc
hlt
testl
mov
test
xor
xchg
xor
xor
xor
cs
mov
data16
or
in
xlat
xchg
mov
lret
sbbl
lret
and
out
sahf
into
sahf
cli
popf
sahf
int3
insb
sahf
sub
jle
inc
xor
dec
xchg
inc
mov
push
add
jle
inc
inc
push
fnstsw
das
xchg
into
pop
sbb
lea
ljmp
test
inc
inc
xlat
push
inc
sbb
inc
ds
inc
push
xor
into
inc
xchg
xor
inc
test
inc
add
les
xchg
jae,pt
cmp
xchg
icebp
pusha
xchg
test
jbe
fldl
or
popf
mov
cmp
push
push
mov
fs
push
repnz
fidivl
popf
fists
mov
hlt
cltd
xchg
out
stc
test
lds
aam
dec
xor
xchg
ss
pop
push
jnp
push
aaa
lods
push
lock
push
enter
mov
add
jle
gs
data16
andb
ss
pop
push
jl
push
movsl
lret
push
cmp
ret
xchg
test
imul
and
xchg
scas
jge
bound
xor
dec
mov
xchg
mov
daa
jle
in
xchg
repnz
xor
dec
ja
lea
jle
sahf
fisubs
dec
inc
rorb
push
mov
enter
pop
aam
movsl
push
push
adc
es
gs
test
inc
cmp
xchg
push
cmpsb
popa
bound
mov
test
xchg
jmp
movsl
test
push
test
imul
test
outsl
or
xor
clc
les
push
rolb
jge
outsl
jl
data16
les
add
pop
jno
les
mov
xchg
pop
xchg
movsl
test
js
test
push
cmpsl
out
test
das
ret
cmpsb
out
cwtl
loopne
bound
adcb
add
pop
push
adc
push
outsl
xchg
push
popa
ss
inc
bound
dec
test
js
fnsave
inc
xchg
sahf
push
adc
sub
test
adc
sahf
jne
dec
test
pop
and
mov
lahf
pop
xor
mov
sbb
jle
sbb
add
add
mov
add
arpl
data16
pop
test
xchg
inc
les
or
repz
mov
cmpsl
push
roll
mov
add
xchg
loope
xchg
test
add
mov
sti
xchg
push
push
add
sub
imul
jmp
mov
push
fsubr
inc
mov
add
loopne
aaa
dec
mov
pop
pusha
nopl
rcrl
test
cmpsl
das
orb
mov
pop
je
pop
scas
mov
push
jbe
adc
nop
popf
pmulhw
dec
addl
jae
shll
hlt
pop
mov
lahf
rolb
xor
ds
mov
dec
lahf
loop
xchg
pop
xor
jmp
mov
jge
sub
iret
clc
xchg
push
mov
pop
lock
sbb
les
and
leave
shr
stos
cmp
adc
mov
and
add
pop
test
cmp
jecxz
mov
xchg
inc
mov
shll
andl
push
jbe
inc
push
data16
fisttps
inc
sbb
inc
movsl
test
pop
mov
mov
or
sbb
xchg
lret
lret
cmp
inc
push
clc
mov
mov
adc
pop
push
std
subl
sub
ficompl
adc
movsl
inc
bound
inc
lea
inc
mov
popf
inc
dec
inc
dec
adc
mov
inc
xor
mov
push
xchg
inc
sbb
mov
je
push
xor
sbb
push
inc
add
add
xchg
std
or
mov
mov
push
add
inc
mov
shrl
add
inc
pop
add
add
je
cmpb
pop
push
mov
inc
and
sti
or
mov
lcall
sub
lea
push
push
or
inc
pop
add
inc
fs
ficompl
fbld
inc
test
pop
push
fwait
lea
add
add
enter
fwait
add
lea
rolb
push
lds
inc
popf
add
ret
inc
lea
add
int
popf
xchg
lea
pop
fs
inc
add
push
sbb
pop
roll
fistpll
frstor
inc
add
push
push
dec
int
fisubl
popf
fisttps
shlb
or
inc
adc
sahf
add
ret
inc
in
mov
add
and
std
xchg
push
inc
pushf
pop
push
shlb
test
push
push
dec
leave
fs
inc
inc
inc
push
inc
xor
xchg
dec
fs
fldl
push
lds
push
fldl
rorl
pop
inc
lahf
orb
xchg
dec
lcallw
pop
add
dec
dec
pop
jg
outsl
repnz
cmp
inc
xor
movsb
outsl
loop
fiaddl
pop
dec
loope
icebp
fimuls
and
cltd
lahf
testl
mov
mov
add
shll
xorb
jb
push
dec
lahf
pop
jmp
jmp
jg
adc
xchg
push
lds
jg
out
fildll
push
in
arpl
jnp
fstps
nop
ret
mov
inc
push
cmp
adc
inc
jne
push
mov
jo
mov
lret
orl
mov
pop
and
dec
cltd
xor
xchg
dec
iret
pusha
imul
add
pop
pop
aas
nop
pusha
sbb
dec
and
jmp
xchg
push
dec
inc
mov
xor
rclb
push
dec
sbb
pop
jne
dec
cmc
pop
outsl
imulb
test
jmp
pop
seta
xchg
add
sub
sarl
and
je
jo
iret
lahf
xchg
add
es
pop
adc
into
xchg
xlat
pop
mov
lcall
inc
mov
lods
push
mov
es
add
dec
in
or
inc
pop
xor
and
leave
mov
nop
jmp
add
or
jb
dec
jg
je
push
testb
sub
bound
mov
hlt
mov
leave
mov
add
xor
loope
jecxz
ret
lods
shll
sbb
add
inc
mov
in
inc
sti
sub
outsl
lea
les
push
mov
xchg
add
addl
jo
xor
popa
xchg
loopne
test
add
adc
lcall
add
pop
mov
int
insb
cmc
xorl
sub
pop
cld
xchg
dec
call
cmc
inc
mov
in
push
jge
dec
cmp
jmp
jg
dec
test
jp
mov
sub
sbb
cwtl
fxch
fs
arpl
test
jmp
in
jnp
ds
sbbl
add
xchg
mov
in
aad
adc
mov
adc
add
jecxz
inc
je
sub
dec
inc
dec
pop
dec
jle
lahf
jnp
push
or
push
int3
pop
mov
add
daa
cltd
fildl
pop
aaa
fucomi
dec
and
enter
pop
bound
mov
imul
xchg
je
adc
lea
xchg
fists
xor
xor
xchg
adc
pop
out
sub
fcmovnb
inc
jae
lock
fsubl
jle
mov
jge
inc
rsqrtps
sub
xor
xor
lret
andl
xchg
jae
mov
adc
push
cmp
add
out
cli
fisubl
cli
ljmp
pop
pop
mov
loop
push
repz
inc
std
mov
mov
jge
ret
jmp
iret
adc
fisubrl
loopne
inc
add
push
xor
jae
inc
dec
arpl
ret
xchg
lret
jmp
dec
push
xchg
imul
push
or
aas
sbb
dec
lea
or
gs
sub
pusha
push
arpl
xor
shll
push
ds
pushf
movsb
scas
lahf
out
cmp
cli
adc
jne
sub
xchg
xor
shl
push
adcl
mov
mov
push
pushl
add
add
outsb
sbb
adc
adc
imul
fdivs
jnp
inc
jge
iret
int
nop
push
adc
jo
dec
lock
add
and
dec
and
cmp
retw
dec
add
std
inc
mov
lahf
cmp
fdivs
mov
and
insl
cmp
mov
mov
subl
cmpsb
mov
lock
inc
push
sub
and
ret
arpl
scas
icebp
adc
dec
jno
pop
add
and
mov
shlb
adc
popf
bound
int
fisubl
cli
je
adc
or
cmp
pop
loopne
std
ret
add
shll
push
inc
adc
movsb
jge
add
nop
outsl
dec
add
adc
mov
xchg
dec
jo
dec
pop
dec
out
rorl
shll
mov
inc
sub
xchg
mov
inc
iret
jae
rclb
std
mov
icebp
sub
jp
out
inc
cs
cmp
mov
xor
loopne
or
stos
es
inc
cmp
pop
sub
cmp
loopne
sbb
rcrb
or
scas
das
mov
jo
mov
mov
push
nop
andl
icebp
pop
sarl
jae
adc
or
add
lret
jne
cld
dec
rcll
sti
aaa
cmp
mov
mull
sub
push
or
mov
cmp
lods
setne
jbe
add
jns
dec
mov
fisubrl
mov
jo
out
mov
pop
push
sti
adc
sar
cmp
xlat
or
and
ret
add
xchg
mov
in
orl
cmp
addr16
fldt
pop
jmp
mov
popa
inc
mov
pop
mov
dec
xor
pop
xlat
fildl
iret
inc
outsl
sbb
push
pop
and
sarl
adcb
subb
sahf
daa
xor
dec
pop
jne
pop
sub
add
mov
sbb
add
pop
adc
mov
jnp
inc
ret
fistpll
enter
mov
and
jae
push
adc
inc
adcl
std
jne
pop
push
jne
sbb
inc
das
shl
push
bound
jnp
jl
xchg
je
scas
inc
hlt
cmc
jge
inc
push
push
sbb
mov
dec
inc
aas
cmp
popa
jo
and
push
dec
fstps
repz
push
sbb
ret
loop
testl
pusha
inc
cmp
jo
ljmp
cmp
ja
icebp
xor
dec
andl
mov
lods
fwait
adc
jae
xor
popa
jecxz
and
sub
push
les
inc
das
mov
ror
jb
popa
cltd
mov
add
ficoms
flds
jne
fsubs
sbb
add
insl
clc
enter
ljmp
push
jno
jp
pushf
fistps
xor
pop
lods
dec
add
jp
in
cmc
sbb
sti
xor
sbb
jg
and
cld
pop
sub
or
cmp
inc
inc
inc
insb
jl
dec
ret
sub
adc
cmp
repz
inc
test
xchg
cld
add
jle
mov
inc
mov
pop
dec
faddl
jg
sti
mov
stc
jmp
and
test
addr16
in
sbb
add
jb
jge
pop
pusha
outsl
lea
fs
xor
adc
in
or
add
xor
je
jno
lds
stc
inc
pop
rcrb
stc
rcl
mov
adcb
mov
jle
pop
loopne
js
jae
inc
push
and
add
xchg
bound
push
andl
addl
popf
lds
dec
mov
sbb
gs
inc
mov
push
jae
ffree
movsl
adc
inc
popa
xchg
pop
cmpsl
xchg
inc
inc
push
push
mov
out
mov
push
outsl
lods
roll
ficoms
inc
fs
fiadds
pop
pop
add
test
enter
data16
sbb
aam
mov
in
scas
nop
adc
jbe
or
inc
mov
xchg
xor
popa
jbe
mov
or
inc
popf
ficomps
cmp
ficomps
movsb
jb
or
add
vmovsd
add
inc
fdivrl
es
addb
mov
add
pop
loope
sbbl
popf
lds
add
pop
xchg
add
lds
pop
pop
lds
pop
lds
push
movsb
cwtl
mov
pop
cld
js
dec
xor
lods
or
outsl
adc
push
jecxz
test
arpl
push
fisubs
das
add
xchg
inc
inc
push
xor
push
push
push
test
pop
cmp
pop
das
fstpl
jge
ds
std
test
pop
pop
adc
js
lahf
popf
fidivl
pop
mov
pusha
pop
pusha
nop
loop
add
push
inc
push
lea
arpl
fwait
pop
mov
xor
pusha
push
dec
nop
pop
inc
add
xchg
arpl
jae
arpl
out
jecxz
xchg
sahf
sub
push
jne
inc
jnp
into
xchg
pop
push
mov
xchg
mov
adc
pop
sbb
add
and
add
dec
pop
adc
xor
inc
gs
inc
movsl
gs
cmp
inc
xchg
add
cmp
repz
aam
and
or
push
push
ret
das
pop
fs
repnz
fs
and
add
mov
inc
shlb
push
mov
xor
xchg
xchg
mov
inc
lret
xchg
das
ret
nop
movsl
cmpsl
cli
xchg
push
mov
adc
inc
lcall
sbb
mov
movsl
pop
sbb
shld
out
mov
sarl
lret
mov
lea
stos
popf
inc
test
fwait
test
add
mov
call
movsb
iret
xchg
dec
addb
jns
and
sbb
inc
incb
sbb
mov
rclb
dec
shlb
push
int
test
adc
dec
xchg
xorb
xor
jbe
xor
dec
aad
out
ss
in
out
adcl
sub
ljmp
js
or
sarb
enter
jmp
sbbl
jbe
test
sahf
popf
cmp
and
dec
inc
pop
xchg
je
dec
imul
dec
cli
mov
sbb
push
xchg
inc
sbb
xchg
xchg
roll
add
aam
mov
shll
xchg
popf
xchg
enter
clc
xchg
jecxz
pop
mov
push
dec
mov
dec
xchg
lods
jae
sbb
jl
sbb
pop
inc
pop
sahf
stos
mov
add
aad
xchg
sub
xchg
shlb
xchg
out
js
mov
push
dec
mov
dec
es
out
dec
xchg
jle
dec
xchg
push
sbbl
sbb
or
mov
shll
fstl
dec
testb
jnp
test
lcall
dec
xchg
dec
mov
or
cltd
xchg
sub
sbb
xchg
sbb
xchg
mov
sub
roll
inc
pop
aam
xchg
in
sbb
push
orl
sahf
cmc
mov
push
jbe
add
imul
push
dec
and
test
mov
fs
fwait
pop
xchg
cmp
aad
mov
lret
xchg
cmp
aam
lds
jbe
imul
or
and
inc
outsb
xchg
jo
pop
xchg
inc
pop
mov
dec
loopne
incb
mov
insl
xor
mov
ss
inc
mov
push
add
movsb
cmpsb
xchg
adc
xor
stc
xchg
push
sahf
and
adc
mov
mov
jns
push
loopne
call
xor
mov
mov
xor
or
mov
dec
jp
add
mov
ljmp
es
xchg
call
shl
stos
daa
loope
movb
mov
mov
enter
xchg
adc
xchg
in
and
pushf
imul
lds
ljmp
and
push
mov
add
lret
loopne
repz
xchg
imul
mov
jp
xchg
sbb
aam
mov
inc
in
and
jo
fsubrl
in
iret
mov
or
push
xorb
xor
jg
xor
xchg
sbb
repz
imul
jbe
xchg
mov
jns
bound
push
fadds
mov
fldenv
or
daa
cwtl
das
fwait
scas
xorl
add
xchg
repnz
cmc
xchg
xchg
popf
mov
mov
out
nop
lcall
in
cmpsl
imul
inc
mov
nop
xchg
sub
and
xor
adc
das
mov
mov
sbb
cmc
mov
or
jno
fimull
mov
mov
dec
add
addr16
jp
jmp
xchg
cmp
pop
inc
push
and
flds
stos
xor
je
mov
loope
dec
xchg
add
pop
repz
jecxz
xor
lds
mov
mov
sarl
repnz
pop
ljmp
sar
lcall
cs
scas
mov
lcall
mov
inc
push
pop
stos
xor
push
ss
nop
mov
lahf
inc
xor
js
push
mov
mov
inc
push
push
std
push
jnp
lds
cmp
mov
mov
add
add
or
or
andl
inc
adc
mov
pop
rcrb
addb
cwtl
loop
mov
push
mov
inc
data16
jp
fwait
lods
xchg
sbb
pop
push
xchg
pop
pop
out
inc
int
push
rcrl
inc
mov
mov
enter
inc
sbb
jmp
lea
subl
sbb
leave
repz
leave
cmpsb
inc
or
lret
test
fidivs
dec
gs
mov
lcall
lds
je
aad
inc
pop
movsl
insl
enter
mov
inc
sbb
xor
sbb
push
xchg
scas
test
pop
pop
gs
jns
sbb
pushf
jge
scas
test
sbb
or
fs
xor
mov
pop
inc
add
adc
and
or
lea
in
out
and
or
popf
push
hlt
mov
rcr
push
les
ret
xchg
inc
popf
push
aam
xor
ffree
push
movsb
insl
inc
cmpsb
inc
add
or
inc
push
test
inc
or
orb
mov
jnp
push
fs
subb
pop
push
add
push
inc
dec
inc
inc
mulb
push
leave
inc
mov
add
push
and
mov
test
mov
pop
insb
inc
add
mov
inc
js
adc
jecxz
test
inc
sub
xor
movb
cmpsb
out
test
rcrb
xchg
sbb
xor
xor
push
or
out
rolb
je
push
inc
inc
xlat
or
arpl
push
xchg
sub
push
or
bound
daa
dec
leave
icebp
aam
push
or
xchg
aas
imul
mov
data16
or
fdivs
lcall
push
inc
cmpsb
inc
pop
push
lods
pop
sbb
and
mov
popf
je
cmpsb
inc
pop
adc
mov
filds
shrl
push
shll
mov
or
mov
lea
repz
icebp
addb
xchg
and
orb
les
shrb
dec
inc
scas
xchg
inc
mov
xlat
fnop
inc
mov
jno
pop
test
xchg
loope
rorb
stos
push
cmpsl
xchg
repz
test
shll
stos
loope
sbb
xchg
add
push
popa
adc
jbe
dec
dec
mov
pop
add
pop
inc
mov
sub
loopne
bswap
lea
shlb
mov
leave
xchg
push
mov
lods
inc
adc
or
inc
stos
jae
push
mov
cmp
push
adc
les
es
stos
fs
test
pushf
xchg
inc
dec
xor
daa
xchg
roll
in
pop
jmp
test
sub
add
inc
pop
push
xchg
pushf
lcall
inc
dec
stos
lods
lahf
xor
xor
mov
adc
js
or
dec
std
sbb
pop
es
fsubl
iret
mov
or
push
mov
jnp
inc
sahf
add
push
dec
ficoms
push
xlat
add
pop
loope
lods
repz
inc
pop
ss
leave
sarl
push
icebp
loop
and
xor
addr16
add
mov
popa
add
in
fcompl
push
ja
inc
lea
jg
popf
shlb
inc
mov
add
nop
xchg
sub
xadd
xchg
inc
add
or
mov
iret
inc
data16
loopne
in
ret
icebp
push
sahf
add
xchg
or
add
mov
push
lahf
jne
jne
aas
and
pop
test
sbb
lret
pusha
xchg
sahf
aad
inc
lds
pop
add
test
inc
xor
and
add
dec
xor
andb
inc
jg
aas
cmp
out
mov
adc
jns
jae
add
outsl
cs
pop
xchg
pop
filds
into
cltd
push
inc
in
xor
movhps
lahf
arpl
iret
or
mov
cmpsb
push
inc
ret
test
test
xchg
mov
lds
scas
pusha
or
and
gs
adc
xchg
sahf
sub
aas
scas
dec
out
roll
imul
sahf
bound
inc
daa
add
nop
notl
lds
push
repnz
pop
arpl
lahf
repnz
inc
ss
out
adc
ret
std
jo
inc
mov
stos
pop
and
sbb
nop
jp
inc
inc
lahf
push
mov
popf
or
inc
xchg
push
push
jmp
lret
mov
scas
pusha
gs
xor
fidivrs
lahf
scas
das
jb
test
push
or
mov
lahf
pop
jmp
mov
pop
sbb
lahf
inc
sbb
push
sbb
inc
xor
hlt
and
push
cmp
insb
or
sub
cmp
test
orl
dec
inc
call
popl
out
jo
rolb
mov
movb
popa
push
mov
in
inc
push
or
mov
dec
icebp
ret
sbb
sub
pop
add
adc
mov
mov
gs
outsl
testb
repz
enter
xchg
xchg
pusha
adc
rolw
pop
fdivl
daa
shl
xor
pop
lea
mov
xchg
xor
movb
xchg
inc
lcall
xor
inc
push
jg
or
ss
xor
je
lea
adc
das
mov
and
push
in
sbb
gs
or
in
mov
gs
mov
cmp
into
fimuls
inc
inc
mov
add
or
mov
cmc
or
dec
aad
scas
xchg
popf
fcompl
test
es
cmc
xchg
jbe
movsw
xchg
mov
sbb
inc
leave
add
mov
inc
enter
fisubl
pushw
jle
bound
lea
inc
push
popa
inc
imul
jg
addr16
std
gs
jmp
incl
in
cld
gs
call
incb
es
ds
and
cmp
and
and
inc
sub
and
daa
movsl
push
mov
add
inc
cmpsl
movsb
push
mov
add
shll
xchg
inc
mov
xchg
lea
push
lea
inc
cltd
add
inc
xchg
push
push
push
adc
adc
or
adc
adc
inc
sbb
adc
pop
push
push
dec
gs
inc
pop
add
fs
inc
pop
push
push
dec
gs
inc
pop
add
dec
fs
inc
push
aad
int
roll
rorl
xlat
aam
int3
rolb
rorb
jne
jp
xchg
add
insl
push
lea
xor
push
imul
ja
add
xor
push
stc
xor
push
jmp
add
xor
push
in
xor
push
clc
xor
push
ljmp
divb
push
cs
push
cmp
push
sub
add
xor
push
sub
pop
push
cmp
push
sub
push
aaa
xor
push
lods
xor
push
mov
pop
push
stos
xor
push
mov
add
xor
push
mov
pop
push
stos
xor
push
mov
add
in
adcb
test
inc
addl
lea
add
add
add
add
lea
inc
inc
inc
inc
push
inc
gs
inc
inc
add
jbe
outsb
lea
jb
push
je
push
jo
js
fbld
test
test
or
mov
push
push
lds
les
in
push
es
lea
adc
push
inc
aad
push
jbe
jne
cmc
add
lea
fs
inc
lods
mov
push
push
les
mov
pop
lds
mov
out
movsl
add
jne
inc
jbe
inc
and
mov
adc
hlt
pop
les
xchg
ss
adc
popa
sar
xchg
inc
xchg
jg
adc
inc
lods
lea
and
add
scas
sahf
stc
les
mov
cmpsb
sahf
mov
lds
lock
inc
add
mov
outsl
lock
sahf
rcrl
or
lds
sub
adc
sbbl
and
clc
jle
lahf
nop
pop
xor
lret
jle
push
jnp
mov
cmc
loope
sbb
lret
jp
gs
fs
shrl
subl
mov
repz
jge
jg
push
or
sub
repz
jge
jg
mov
movlps
movsb
xorb
mov
add
inc
insb
add
rcr
pop
pop
fisttps
inc
rorb
inc
push
xor
and
add
mov
test
out
xchg
test
mov
test
daa
cmp
roll
pop
ret
pop
or
adc
lea
popf
add
mov
pcmpgtd
movsb
xor
add
aaa
jmp
add
jbe
lahf
stos
addr16
inc
add
mov
push
popa
sbbb
lea
mov
dec
dec
mov
ss
addl
add
dec
jp
inc
xor
push
lea
or
jo
in
ret
cmc
add
pop
lds
cmovno
jg
fcompl
adc
xchg
dec
inc
pop
add
add
pop
mov
mov
les
addr16
cmp
mov
je
lea
lcall
xor
jl
and
scas
je
pop
inc
cmc
fidivl
mov
sub
ficomps
movsl
test
mov
sbb
or
bound
push
inc
lea
pop
movsl
mov
pop
and
add
pop
pop
scas
or
dec
mov
push
or
or
fdivl
lcall
adc
mov
in
lcall
pop
sbb
push
sbb
or
popf
fcmovne
jp
stos
xor
pop
aam
pop
sub
fmull
lea
fwait
testb
popf
fstl
addb
stos
xor
pop
mov
xchg
inc
adc
cmpsb
fs
add
cmp
cmp
add
popf
inc
data16
fidivrs
xchg
arpl
cltd
fsubrl
mov
push
fildll
lcall
sbb
sbb
addr16
inc
movsl
mov
adc
pop
sbb
std
shlb
inc
fimull
test
or
aaa
or
cmp
pop
into
xchg
cmpb
xchg
repz
mov
enter
inc
dec
orb
push
inc
ret
lods
add
cmpsb
out
sbb
sub
dec
rcl
mov
pop
or
loop
addr16
out
pop
jge
mov
insl
mov
popf
rolb
push
subl
pop
mov
xchg
add
mov
fisubl
add
push
stos
push
pop
pop
inc
pop
sbb
xor
cli
dec
fwait
pop
stos
jl
jge
cltd
subb
push
pop
lcall
sbb
subl
out
pop
leave
add
inc
scas
dec
adc
les
loop
test
dec
dec
push
xlat
pop
pop
inc
int
inc
ret
in
add
test
subl
fistpl
mov
add
mov
xchg
lods
mov
call
or
mov
xchg
je
cmpsb
int
inc
inc
enter
dec
jb
dec
pop
mov
inc
gs
movsb
lods
sub
pop
cmpsl
ret
mov
push
cmp
mov
inc
push
pop
stos
or
mov
test
push
lcall
addr16
xor
dec
mov
and
pop
scas
dec
adc
pop
cmp
mov
popf
and
push
push
mov
lret
add
rcrl
push
inc
mov
mov
pushf
xor
mov
loope
xor
push
sbbl
inc
xor
dec
mov
adcl
add
sbb
or
dec
pop
push
popf
inc
inc
and
add
xor
xchg
scas
dec
push
push
inc
lds
or
sub
outsl
sub
push
flds
stos
sbb
lahf
scas
scas
sbb
push
mov
jmp
lds
xor
daa
jnp
rorb
lds
and
lds
jb
icebp
sbb
bound
adc
add
dec
shlb
xchg
mov
cs
popf
mov
add
popa
push
lahf
push
outsl
jecxz
movsb
lds
loope
addl
xchg
xor
in
stc
xchg
pop
mull
pop
cmp
sahf
jle
mov
adc
jo
ret
loopne
inc
std
adc
cwtl
out
sbb
dec
shrb
xlat
cltd
std
sub
addl
iret
push
add
add
test
pop
mov
mov
push
push
out
fwait
aad
sbb
pop
inc
inc
ret
test
add
cld
ret
mov
mov
filds
and
push
nop
fsubrs
mov
stos
sub
lcall
xor
cmp
mov
test
movsl
add
test
push
push
push
mov
adc
fs
pop
dec
arpl
cltd
test
icebp
sbb
shlb
inc
fs
in
xor
sahf
pusha
adc
inc
pushf
inc
and
sub
mov
in
outsl
mov
dec
or
jl
adc
push
imul
jns
jmp
out
push
cmp
stos
sbb
stos
sub
out
sub
jmp
leave
and
or
xchg
or
pop
int3
adc
jp
jno
lahf
mov
or
adc
mov
xor
sbb
xor
loope
mov
xchg
andb
movsb
pop
int3
cmp
rclb
lods
sbb
fcomps
fwait
jecxz
inc
pop
mov
sbb
inc
and
sahf
adc
xchg
or
pop
inc
or
xchg
xchg
add
fldl
xchg
insb
xchg
data16
inc
mov
andl
pop
cmpb
and
into
mov
mov
xor
xor
inc
push
test
lods
mov
push
stos
test
push
push
es
push
cmpsb
mov
mov
push
inc
test
gs
imul
jnp
roll
and
adc
enter
cwtl
mov
inc
scas
out
lcall
or
cmc
sbb
inc
sub
repz
xchg
es
mov
mov
out
mov
loope
push
shll
jecxz
or
pushf
mov
test
jb
xchg
shll
mov
inc
xor
push
mov
inc
mov
ja
std
xchg
cmp
mov
add
adcl
fldl
imul
add
pop
mov
pop
push
pop
pop
xchg
inc
faddp
add
mov
nop
mov
and
pop
mov
jbe
popa
xchg
inc
pusha
cmp
inc
push
or
jno
push
pop
add
mov
mov
adc
test
dec
add
sahf
pushw
mov
dec
aad
xor
jmp
add
pop
xor
scas
popf
mov
inc
mov
iret
lahf
adc
pushf
lahf
aad
mov
or
mov
je
repz
repnz
add
jg
dec
cmp
outsb
push
inc
insb
push
js
data16
setg
inc
sub
and
pop
int3
outsl
add
inc
or
inc
xchg
nop
push
mov
and
outsb
pop
ficoml
fs
jbe
push
es
inc
lds
test
addl
imul
test
lahf
mov
loop
rcrb
incb
cmp
inc
subb
xchg
sbbl
lcall
lcall
sub
jb
jnp
jns
jno
mov
imul
xor
lret
cmp
pushf
lea
popf
pushf
pop
inc
mov
addr16
movsb
pop
sbb
add
or
lock
fwait
push
fsub
adc
mov
imul
jnp
push
popa
rcrl
fsubl
jmp
data16
lcall
lods
sahf
sbb
adcb
xor
outsl
xchg
loop
bound
add
inc
xchg
test
mov
outsl
pop
sub
jg
xchg
inc
addb
sahf
mov
xorl
add
subl
jnp
lods
mov
sahf
aaa
sbb
inc
test
or
cmpb
leave
orb
sub
lahf
pop
cmp
jb
mov
xorl
notb
mov
pop
adcb
xchg
scas
jp
xchg
mov
adcl
ficomps
add
lret
push
inc
repnz
xchg
sahf
inc
push
mov
bound
loopne
push
inc
pusha
adcl
push
mov
xchg
andb
sub
movb
inc
sahf
fiaddl
dec
push
shrb
push
xchg
pushf
pop
bound
lahf
dec
mov
and
insl
pushf
das
incl
inc
repnz
mov
int3
movsb
sahf
add
ficoml
dec
es
pushf
loopne
lcall
pop
mov
push
cs
jbe
orb
xchg
test
xchg
pop
xchg
sahf
lcall
je
dec
test
lcall
lahf
xor
xchg
outsb
and
inc
popf
mov
push
mov
xchg
insl
sbb
push
arpl
inc
push
inc
loop
rolb
cmp
or
out
adc
inc
cmpsb
out
in
scas
lahf
test
divl
cmpl
cld
bound
mov
popa
lret
push
inc
data16
mov
push
stos
or
sub
jbe
fs
insl
adc
mov
popf
ret
xchg
mov
scas
test
jge
add
inc
mov
push
dec
pushf
jno
addb
ret
dec
cltd
movsl
fstpl
lahf
pop
inc
ret
dec
fwait
addl
data16
pop
xchg
xorb
or
ret
xchg
fwait
movb
adcb
roll
enter
lahf
add
stc
adc
rol
out
shrl
push
mov
cmp
add
les
pop
inc
jnp
adc
mov
or
pushf
mov
xchg
les
inc
fildll
pop
jno
push
je
lea
or
jmp
push
add
dec
mov
add
or
adc
les
popf
lea
push
faddl
mov
lds
mov
jmp
xchg
test
fidivl
pop
mov
ds
test
mov
lea
sbb
jo
lahf
roll
push
xor
jmp
je
pop
lcall
or
rorl
lea
test
lret
adc
push
lea
add
add
mov
lea
jno
sbb
xchg
push
roll
dec
ret
lret
push
push
pushf
out
sbbb
mov
test
add
cmpl
add
mov
lea
jg
adc
popf
je
lea
sbb
lcall
or
xchg
bnd
xchg
push
aam
adc
add
orl
jg
adc
les
lahf
lea
or
adc
sbb
fwait
lea
or
adc
les
xchg
push
push
mov
or
adc
xorb
or
dec
cmpb
lahf
les
mov
lea
jg
repnz
jg
adc
mov
mov
or
jg
bnd
xchg
push
aam
adc
adcl
inc
std
sahf
ret
adc
imul
push
roll
mov
lea
or
jnp
add
pop
pop
dec
mov
inc
leave
cld
push
addl
push
mov
test
and
sub
adc
add
push
push
loop
nop
and
push
or
testb
mov
mov
sub
pop
shll
mov
lahf
pop
shrb
leave
xchg
stos
sub
mov
adc
mov
lods
jmp
ret
or
in
in
icebp
fs
push
cmp
sbb
lods
adc
push
sbb
adc
pusha
inc
inc
add
inc
les
daa
adcb
push
call
add
pop
fs
inc
add
pop
jno
cmp
push
std
inc
incb
inc
inc
add
push
daa
popa
xchg
or
sbb
push
pop
inc
xchg
frstor
push
mov
test
lea
inc
xchg
incl
addr16
mov
pop
fs
mov
mov
add
ret
inc
les
in
pop
shll
inc
mov
jmp
inc
pushf
cmp
inc
aas
add
lea
inc
inc
shll
gs
add
rcll
or
push
inc
test
inc
push
test
pop
xchg
loope
icebp
jbe
fs
add
and
cmp
adcb
fs
pop
xchg
add
inc
andb
push
in
add
mov
push
test
cs
fld
arpl
lahf
stos
mov
enter
pop
shrl
scas
add
lret
cmc
ljmp
mov
adc
jns
lods
add
jp
sti
and
xorb
ret
mov
or
push
add
lahf
stos
call
cs
into
add
jmp
inc
and
clc
dec
repnz
jp
ret
inc
mov
enter
ja
mov
movsbl
pushl
popl
call
pushf
push
mov
pushf
pushf
pushf
pushl
pushl
ret
movb
lea
je
setno
lea
bswap
pushf
jmp
setg
setl
mov
pushf
mov
mov
lea
jmp
pushf
pusha
push
jmp
movl
movb
jmp
mov
lret
das
shll
inc
sar
sarb
push
cmp
mov
test
pop
xor
out
lock
pop
adc
out
push
loope
test
xor
in
and
pop
xchg
negl
cmpsb
out
xchg
push
aaa
gs
daa
insl
sbb
inc
mov
jne
pop
mov
push
std
add
stc
cltd
cmc
inc
std
aam
das
cmpb
mov
jns
cli
lods
insb
cmpsl
sbb
insb
mov
cmp
add
cmc
pusha
cmp
mov
movb
pusha
movb
lea
jb
cmp
test
clc
cmp
pusha
call
clc
xor
call
pusha
lea
jp
jne
call
pushf
pusha
adc
jmp
xchg
movzbw
bswap
mov
not
movl
pushf
bswap
movsbw
movzbw
lea
jmp
movb
cwtl
mov
lea
lea
lea
push
movl
call
add
data16
outsl
outsl
jb
push
push
test
cmp
jmp
das
mov
xchg
mov
ljmp
xchg
push
cmpsl
mov
movsl
sub
pop
jae
or
popf
pop
rclb
sbb
pop
jne
jo
dec
stos
ror
repnz
out
iret
push
push
das
mov
jne
ljmp
cmp
inc
nop
sub
mov
loopne
lret
mov
sbb
mov
xchg
cmp
lcall
inc
sbb
sub
adc
stc
std
adc
enter
aam
pop
and
lahf
pushf
movzbw
movl
lea
lea
lea
js
push
call
rep
pop
movsbw
movzbw
mov
push
movb
push
lea
jmp
mov
or
bound
push
push
mov
aam
sub
jle
jmp
jnp
stos
sbb
cmp
pop
in
jle
jns
jmp
int
call
or
mov
call
int3
add
shrl
mov
ds
js
test
outsb
aaa
lret
jne
push
pop
add
push
out
lea
xchg
sub
neg
inc
add
out
xchg
sbb
xor
vmwrite
clc
call
pusha
lea
ja
stc
mov
cmc
cmc
sub
shl
bt
dec
add
inc
mov
seta
mov
test
repnz
pusha
lea
jne
movsbw
lea
movsbw
jmp
cmp
xlat
addr16
lcall
mov
rclb
lahf
int
rcrl
dec
cli
pop
adc
stos
cmpsl
xchg
arpl
adc
lret
hlt
repnz
xor
fisttps
movsl
popf
mov
pop
hlt
cmp
scas
mov
xchg
xor
mov
out
mov
js
and
mov
rolb
popf
jb
fidivs
pop
aad
subb
std
call
rcll
int3
pop
mov
imul
sub
cmp
call
push
test
push
and
ljmp
dec
out
cli
xor
lcall
test
inc
ret
jnp
test
pop
daa
xor
scas
fmulp
fsincos
rcr
dec
or
xor
mov
out
out
xor
mov
je
pusha
push
not
mov
lahf
push
lea
mov
jmp
xor
sub
bound
push
sbb
push
movsl
xor
nop
popf
jl
pusha
add
lret
or
mov
outsl
cli
sbb
gs
mov
shll
push
cltd
sub
ja
movsb
dec
lahf
inc
inc
jecxz
mull
push
dec
mov
stos
arpl
sarb
mov
arpl
inc
xchg
fadds
push
fimuls
les
lea
jae
test
stc
push
cmp
call
call
push
push
pushf
lea
jae
pushf
clc
call
lea
jae
call
movw
push
mov
pusha
pushf
xchg
not
bswap
cwtl
call
aad
mov
bound
arpl
mov
dec
jg
movsb
jmp
mov
add
test
insb
or
pop
mov
push
push
pop
repz
pop
adcb
xchg
test
shlb
fimuls
pop
dec
iret
daa
fstpt
inc
and
or
dec
and
das
test
sahf
jmp
pusha
push
bound
cld
sub
loope
arpl
sub
jb
or
adc
bound
sub
rclb
les
fidivrl
popa
fucomip
rcll
push
jecxz
jl
dec
test
inc
mov
addr16
sbb
jl
rorl
popf
test
sbb
out
ret
repnz
dec
scas
ja
pop
xor
mov
mov
cmpl
sahf
mov
in
jp
pop
in
dec
add
mulb
inc
add
imull
sub
push
stos
inc
xchg
add
add
out
mov
adc
int3
loope
cs
in
mov
bound
adc
mov
and
movsb
jbe
es
jne
xrelease
pushf
pusha
pushf
pushl
ret
int3
mov
loopne
lock
scas
adc
dec
popa
mov
test
loope
sbb
cmp
cmpsl
add
rcrl
sbb
in
adc
pop
sarb
clc
movsl
push
jae
jnp
pusha
bound
jbe
mov
fsub
dec
fidivl
in
loopne
lcall
shr
pop
mov
into
dec
fs
and
insb
xchg
push
fildll
dec
scas
loopne
stc
mov
pushl
cmc
test
cmp
pushf
call
dec
mov
fisubl
shll
shr
mov
imul
ds
fsubrp
adc
cld
and
inc
stos
inc
cmc
mov
pop
add
divb
decl
out
pop
adc
or
int
fwait
xchg
jge
dec
hlt
add
in
in
into
daa
scas
inc
push
push
mov
orl
outsb
mov
cmc
pushf
bt
ror
clc
jmp
pusha
mov
jmp
aaa
stos
adc
bound
aaa
mov
mov
add
lods
pop
dec
lcall
adc
loope
push
cmp
subl
xchg
and
mov
hlt
sub
pop
jnp,pt
pop
pop
pop
ljmp
adc
jbe
das
movsl
xchg
shr
xor
in
inc
push
cld
scas
lret
cmc
sti
and
sti
or
lahf
jl
jns
mov
cmc
cmpsb
js
jbe
cmp
dec
or
stos
shrl
adc
leave
jp
push
fsts
cmp
jo
sahf
push
push
jmp
push
std
inc
sub
cmp
sbb
lret
lea
in
std
xchg
jp
mov
aas
jne
add
enter
cwtl
rcr
sub
jmp
pusha
movb
push
lea
je
pushf
cmp
lea
push
jmp
movl
pushf
pushl
popl
push
pushl
mov
movw
pushl
ret
inc
pusha
call
cmp
mov
inc
push
cmpsl
lea
jecxz
sahf
in
pop
stos
add
idivb
scas
mov
sbb
in
jmp
push
jo
mov
dec
mov
icebp
add
stos
or
jo
xchg
sbb
cs
bound
cltd
call
dec
out
adc
jg
addr16
pop
sub
fistpl
inc
dec
or
jno
xchg
hlt
mov
xchg
push
lea
je
pusha
push
lea
jmp
lea
jne
shl
jmp
stc
bt
mov
cmp
jmp
mov
movsb
pop
into
lret
movsl
mov
fs
lcall
into
aad
fwait
movsb
pop
int
lcall
iret
pop
aad
movsb
pop
movsl
ror
cwtl
int3
mov
iret
mov
lret
cwtl
lret
rcrb
lret
lods
repnz
in
mov
mov
push
jbe
jbe
mov
mov
mov
ja
inc
add
pushf
mov
aad
enter
lea
mov
arpl
push
addr16
pusha
xchg
pop
popl
mov
push
mov
lods
sbb
cmpsl
fisubrl
cld
xchg
fiadds
aas
ja
divl
outsb
or
div
out
dec
or
mov
arpl
mov
stos
and
loopne
int3
pushf
fcomip
in
fcoml
lea
mov
push
ds
mov
cmp
outsl
or
or
cmovnp
scas
sar
mov
sahf
dec
xor
stos
cmp
push
cmp
lahf
pop
adc
fsts
popf
outsl
push
loopne
or
inc
cmc
inc
cs
aas
imul
jge
in
aas
test
jmp
nop
test
lods
orl
cmp
in
imul
or
fnstenv
mov
outsb
pop
test
fsubr
idivb
mov
sub
loop
mov
movl
gs
add
jp
ja
out
mov
xor
inc
cmp
lock
cmp
dec
bound
jg
mov
pop
and
jmp
movl
pusha
movl
pusha
pushf
push
mov
lea
jmp
pushf
pushf
movl
mov
movw
pushf
push
lea
jmp
in
xchg
clc
fbld
jp
insl
inc
cli
int
stc
lret
cmp
push
inc
jl
ljmp
add
cmp
push
xor
cmp
xchg
sub
push
xchg
add
mov
pop
cmpsl
push
jg
push
xor
imul
pop
imul
jo
fidivs
fdivp
dec
add
pop
cmc
pop
xor
push
or
jae
gs
pop
jmp
jp
insb
sbb
inc
adc
xchg
loopne
popa
pop
mov
push
mov
mov
and
outsb
sarl
idiv
sti
xchg
mov
mov
pop
dec
xor
cltd
aas
leave
and
sub
bound
pop
cmp
mov
gs
mov
in
popf
mov
sub
mov
hlt
in
arpl
push
fstp
outsb
mov
adc
pop
cmp
int3
cmc
cli
ret
mov
sahf
mov
xchg
pushf
test
fidivl
cmp
add
inc
push
push
mov
jbe
call
adc
decl
xor
xor
push
mov
gs
dec
ss
push
cli
add
push
pop
cs
jecxz
data16
outsb
mov
mov
xchg
sub
jbe
xor
popl
add
pop
pop
push
add
ret
jge
add
xchg
lock
pop
pushf
mov
movzbl
mov
mov
movsbw
push
movsbw
mov
mov
mov
bswap
movsbl
pusha
bswap
mov
pushf
pushf
pushl
ret
cwtl
lret
bound
mov
or
cld
imul
mov
sub
test
xlat
and
sbb
add
xchg
lock
imul
mov
xchg
rcrl
add
clc
mov
into
out
inc
sahf
add
outsb
xchg
hlt
out
rcr
push
aaa
sahf
jmp
mov
xor
mov
jg
add
mov
push
jp
mov
lcall
add
lea
call
pushf
push
mov
movb
lea
jae
cmp
test
push
sub
pushf
jmp
stc
cmpb
pusha
jmp
not
call
or
add
bound
into
inc
shrl
pop
inc
pop
mov
popa
adc
xchg
sub
repnz
loopne
out
inc
imul
popa
fld
in
push
sbb
cmc
les
mov
hlt
dec
xor
sbb
dec
lods
add
mov
faddp
out
cmp
add
sahf
or
jp
push
sbb
cmpl
add
call
push
popl
test
adc
sahf
gs
inc
lahf
addl
add
push
andl
add
mov
xchg
pop
add
xchg
inc
mov
push
mov
inc
lcall
xchg
sbb
jno
test
inc
lds
popf
inc
push
sahf
add
lea
add
andl
lea
lds
inc
xor
test
or
mov
fcmovu
lcall
sbb
leave
or
push
push
gs
push
pop
arpl
lahf
inc
add
lds
add
lea
add
fs
add
add
andl
test
add
cwtl
or
lea
or
or
fsubrp
fs
lcall
pushf
inc
sbb
adc
push
pop
fs
inc
add
xchg
push
lds
push
inc
dec
lds
push
inc
dec
enter
push
add
or
push
pop
in
inc
dec
ret
inc
fidivrs
push
orl
inc
inc
sbb
mov
lcall
pop
push
andb
inc
mov
inc
inc
push
push
pop
je
or
inc
leave
add
fstp
push
fbld
inc
inc
add
pop
and
xchg
or
or
fwait
pop
push
pop
gs
inc
filds
rorb
inc
in
pop
inc
xchg
dec
inc
sbb
pop
add
inc
fs
inc
add
push
xchg
movb
lea
fimuls
add
inc
inc
add
lea
inc
test
mov
mov
push
fisubl
inc
fldl
pop
lea
inc
push
les
je
movsb
inc
adc
mov
fimull
sahf
lahf
push
shlb
inc
add
mov
enter
sbb
pop
lea
add
inc
addl
ja
inc
fwait
add
lea
filds
inc
push
xorl
hlt
sbb
inc
fistpl
inc
rolb
ret
inc
add
mov
add
fiadds
inc
push
andb
add
adc
lea
pop
fs
inc
filds
inc
inc
inc
pop
add
sbb
pop
push
fisubs
inc
inc
add
add
push
xor
inc
sbb
sbb
popf
fiadds
inc
push
andb
add
and
pop
push
pushf
fldl
inc
lea
inc
in
pop
inc
push
push
or
pop
pop
push
shlb
inc
add
lea
hlt
xchg
pop
adc
faddl
xchg
jbe
leave
xchg
pop
push
add
shlb
add
add
les
jne
or
dec
lea
lcall
pop
inc
fiadds
pop
fbld
inc
rorl
gs
inc
add
les
pop
gs
enter
or
pop
lea
pushf
inc
sbb
sahf
inc
pop
add
inc
add
orl
gs
mov
test
xchg
or
or
mov
inc
pop
add
fstpl
inc
inc
add
lea
addl
push
push
jne
inc
push
xchg
or
inc
pop
add
fbld
addl
sbb
fbstp
lcall
lea
pop
inc
filds
inc
add
orl
or
movsl
mov
push
or
or
inc
fwait
add
pop
orb
gs
inc
inc
add
out
pop
aad
movl
lcall
pop
inc
lahf
add
add
inc
add
ret
test
push
push
mov
xchg
or
push
lcall
lea
rorb
gs
add
hlt
cmc
lea
mov
inc
sbb
fmull
fiadds
push
inc
roll
les
in
or
push
mov
inc
fildl
fmull
pop
fisttps
andb
add
ret
fs
inc
add
inc
push
mov
xor
inc
sbb
fisttpl
fiadds
push
inc
addb
les
movb
mov
mov
inc
sbb
fwait
lea
pushf
inc
sbb
testl
or
outsb
push
arpl
lahf
add
andb
sahf
add
lahf
or
adc
mov
arpl
bound
mov
in
je
adc
inc
popa
add
xchg
push
es
push
sbb
add
subb
jne
ds
faddl
adc
xorl
in
test
les
jg
and
filds
int3
jno
xor
sbb
bound
sahf
scas
popa
push
push
test
xchg
in
lahf
add
push
test
push
dec
mov
ss
xchg
mov
or
sahf
fldl
or
dec
xchg
jl
outsb
insb
push
daa
jmp
lcall
xchg
imul
add
repnz
sahf
sahf
or
movsb
xchg
mov
xchg
cwtl
dec
mov
inc
lahf
and
outsl
xorl
repz
cmc
push
cwtl
or
in
out
xchg
cs
out
or
pop
pop
in
add
push
popf
add
mov
and
int3
sbb
pushf
inc
jbe
stc
jo
js
adc
sub
addl
pop
repnz
push
les
push
inc
lcall
and
push
add
dec
lahf
adc
xor
add
sub
enter
jnp
or
inc
xchg
push
dec
lahf
adc
inc
out
cmp
lcall
xor
xchg
inc
repz
jecxz
jnp
or
push
mov
push
rorl
mov
xor
nop
lods
cld
sbbb
jbe
inc
mov
ja
push
add
push
mov
test
and
shl
stos
es
pusha
or
pop
mov
add
xchg
mov
in
repnz
inc
jl
push
cmpsl
inc
add
aaa
in
and
orb
sbb
xor
les
mov
dec
dec
or
xchg
lock
jmp
xor
lcall
aaa
push
mov
arpl
cmp
inc
pop
fwait
jp
inc
roll
pop
pusha
enter
xor
sub
mov
aam
mov
dec
adc
js
xchg
mov
arpl
jge
pop
push
xchg
inc
push
dec
mov
incl
sbb
jo
daa
mov
pop
lcall
scas
mov
sahf
add
xchg
xor
adc
loop
inc
xchg
jmp
test
lcall
xchg
inc
mov
or
addr16
xchg
movb
sbbl
sahf
les
adc
jle
add
fldenv
dec
addb
insl
inc
lahf
movsl
mov
rolb
mov
mov
xchg
or
or
std
add
xor
xchg
inc
test
xchg
push
inc
xchg
fs
lea
xchg
popa
mov
inc
repnz
sahf
aam
sarb
adc
data16
repnz
fidivl
xchg
pop
mov
xchg
dec
lds
or
xchg
pop
and
inc
pop
jbe
cld
lods
and
pop
in
rcr
and
call
cmp
ss
filds
mov
ret
push
insl
jo
sbb
scas
jmp
in
and
jo
orl
repnz
and
xchg
nop
movsb
xchg
add
rorl
or
sbb
les
call
pop
xchg
sbb
pop
xchg
xchg
pop
dec
add
add
ret
je
xchg
push
jb
shlb
inc
ljmp
data16
psrad
xchg
or
movsb
inc
add
xchg
call
adc
test
or
dec
int3
loop
bnd
hlt
mov
addr16
pusha
orb
add
jmp
pop
test
inc
xchg
push
sbb
insb
cld
popa
fcomps
inc
xchg
ss
lods
loopne
lret
cmp
jne
xchg
adc
outsb
and
lret
jl
jns
add
stos
or
mov
sahf
movsb
mov
mov
sbb
jg
jbe
das
push
subb
xor
div
das
ss
sbb
in
mov
inc
xorl
mov
scas
push
nop
add
or
push
ss
jmp
and
hlt
mov
cmp
test
cmc
push
ja
stc
mov
xchg
mov
xchg
jae
js
push
dec
ret
cs
int3
xor
cwtl
repnz
ja
subb
adc
push
es
rorl
xchg
test
jo
adc
out
aad
xchg
dec
mov
and
flds
ljmp
sar
or
adc
loope
xor
and
popl
fcompl
push
cmp
mov
mov
push
rorl
jbe
shr
cmp
add
or
xchg
lret
xlat
sub
cmp
push
xchg
adc
mov
xor
xchg
xor
adc
movsl
fsubrs
loop
xchg
hlt
mov
xchg
stos
mov
aam
mov
subb
into
mov
inc
xor
lods
lcall
imul
clc
xchg
test
scas
dec
aam
into
cmp
xchg
jb
push
pushf
dec
nop
dec
dec
sub
or
and
xchg
js
dec
iret
xlat
cs
insb
and
xor
xchg
icebp
shl
sbb
cmp
adc
repnz
leave
dec
jl
sub
xchg
cmp
xlat
ss
cmpb
ret
adc
sbb
sbb
jnp
mov
cmpsl
pop
fcmovb
mov
dec
add
shrb
lret
int3
dec
push
repnz
jg
sub
movsl
or
mov
push
xchg
adc
sbb
pop
or
lcall
sub
pop
movsl
push
insl
lret
cli
sahf
int
shlb
aad
sbb
mov
inc
loop
sahf
test
test
into
pop
inc
cmp
adc
js
jne
adc
dec
adc
jno
jns
push
xor
pop
push
in
push
icebp
jle
stc
mov
hlt
sub
or
push
rcrb
int3
in
imul
adc
cs
sbb
jae
mov
jb
xchg
xchg
mov
lods
dec
sub
mov
sahf
mov
dec
cmp
jo
lea
lret
cmp
sti
aaa
nop
mov
mov
aas
js
ret
test
adc
or
stc
mov
push
mov
scas
je
fstpl
cltd
cltd
lcall
jbe
mov
testb
ficoms
clc
push
daa
jnp
xlat
xchg
aam
pushf
or
push
lods
jle
je
mov
popf
lds
cmp
adc
sub
xor
push
lds
cs
xor
mov
mov
cltd
xchg
sub
enter
inc
out
cmp
xor
loope
xchg
mov
call
movsb
mov
sahf
and
leave
pop
add
dec
adc
mov
mov
mov
cs
out
xchg
lahf
jl
dec
sahf
and
gs
xchg
cmp
add
xchg
fstl
jne
xchg
mov
or
les
or
jecxz
dec
addr16
add
ficoml
xchg
dec
ret
pop
or
xor
popf
mov
in
loop
and
iret
arpl
xchg
popf
sti
xchg
shll
subb
aas
stc
fildl
pop
mov
movsb
dec
ss
imul
in
bound
or
add
jecxz
jnp
xor
and
adc
movsb
mov
imul
lods
mov
gs
cwtl
jge
dec
ds
xor
aam
sub
fildl
psubb
xchg
push
repz
sbb
std
cmp
xlat
xor
and
shr
mov
xor
dec
negl
das
into
xchg
cmp
shlb
mov
int3
hlt
mov
mov
xchg
pop
pop
hlt
cs
movsb
jmp
pop
or
dec
or
sbbb
test
mov
sti
sub
aad
call
or
xchg
push
clc
mov
flds
ljmp
stos
xchg
ficoml
sbb
inc
pop
int3
inc
aam
cmp
lds
or
movsb
pop
mov
fisubl
inc
aam
clc
lock
mov
xchg
dec
rol
and
adc
adc
push
sti
sbb
ror
mov
jbe
imul
mov
inc
popa
lods
sub
testl
movsl
das
rcl
and
push
cmovs
aaa
push
outsl
mov
call
mov
ss
push
aam
sahf
mov
addr16
in
jno
div
pusha
test
mov
mov
test
xor
xchg
psraw
call
insl
xor
dec
or
mov
cmp
cmp
xchg
jo
mov
xchg
test
imul
fisubrl
shlb
cmpl
jne
xor
ss
loop
iret
out
add
insl
jns
les
ljmp
mov
dec
xchg
and
sbb
mov
inc
xchg
seta
adc
pop
ja
les
mov
xor
ss
lahf
cmpsl
lret
fidivl
xor
sahf
jb
cs
mov
cmpsb
enter
scas
lcall
imul
ss
lods
mov
push
xor
or
mov
subb
sbb
gs
mov
xor
aas
mov
pop
pop
idivl
test
mov
iret
fimuls
out
notl
jp
movsb
mov
mov
xlat
mov
enter
insb
xchg
test
pop
mov
mov
imulb
or
xchg
sbb
shl
clc
mov
test
add
mov
sahf
outsb
jbe
mov
xchg
sbb
test
sbb
mov
and
repnz
inc
ss
les
mov
mov
imul
jge
sub
dec
sbb
data16
test
pop
mov
movsb
andb
scas
jg
or
xchg
testb
test
cmc
sahf
adc
jle
xchg
xorb
mov
xchg
ret
sbb
out
cmp
and
aas
and
mov
into
mov
mov
outsl
test
scas
xchg
sarb
testl
push
cltd
or
aas
sahf
lcall
xchg
xchg
fwait
jbe
data16
mov
aam
lahf
xchg
shl
scas
xchg
mov
mov
mov
mov
movsl
cmpsb
adc
lahf
ljmp
xchg
jno
xchg
inc
push
out
push
test
xchg
mov
sbb
xchg
testb
repz
jb
mov
xchg
lret
outsb
xchg
dec
leave
mov
pop
iret
shl
xchg
mov
or
divb
cmp
xchg
mov
inc
cmpsl
lods
xchg
and
jl
imul
xchg
cmp
lock
popf
or
lea
imul
inc
andl
fisttps
cmp
or
push
mov
mov
xchg
push
fcmove
xchg
jmp
outsl
add
imul
lods
dec
test
pop
xor
in
inc
cmpsb
sbb
test
icebp
repz
lods
es
scas
daa
pusha
lahf
lcall
and
dec
fisubl
xlat
mov
xchg
xor
cmp
dec
sub
repz
push
scas
scas
sahf
cmp
xlat
push
out
pop
mov
dec
mov
jnp
xor
jbe
outsl
lret
dec
xchg
sbb
clc
test
xchg
add
xor
jp
daa
mov
adc
xor
or
inc
dec
movsl
mov
push
hlt
xor
mov
xchg
inc
add
rcrl
daa
mov
int
pop
mov
clc
xchg
cmpsb
xchg
enter
sbb
or
xchg
jecxz
cmp
jp
xor
int
repnz
push
mov
mov
xchg
mov
mov
idivl
sbb
and
jno
nop
mov
data16
das
int3
addb
xchg
push
push
or
or
mov
sub
icebp
sbb
fs
cmp
xchg
pop
out
mov
enter
xchg
jbe
ja
xor
sub
mov
xchg
fs
dec
cmp
lahf
mov
cli
test
sbb
ja
mov
popl
scas
xchg
test
fisubs
js
mov
sub
stos
xchg
fbld
add
sahf
into
testl
aaa
inc
enter
pop
int
pusha
mov
cmp
add
xchg
mov
imul
scas
adc
or
xchg
inc
xchg
xor
inc
es
add
test
sub
ret
cwtl
mov
xchg
mov
loopne
add
xchg
lahf
push
popa
scas
pop
xlat
mull
and
ljmp
aas
push
mov
sbbb
pop
int3
push
xchg
mov
xor
sub
mov
add
push
test
push
lods
aam
repnz
xchg
ljmp
mov
jbe
cmp
scas
cmp
movsl
mov
adc
sahf
cmpsb
nop
xchg
lea
ja
call
xchg
cmp
pop
cmpsl
movsl
jns
pop
push
xor
js
jmp
pusha
dec
push
xchg
xchg
mov
mov
inc
aam
loop
or
fbstp
cmp
ljmp
push
push
xchg
jbe
fmuls
stos
fucompp
sbb
clc
imul
mov
inc
mov
repnz
cmpsb
sahf
and
into
fmuls
lds
int3
xor
rorb
jbe
jp
shll
sub
xchg
push
fmuls
and
loop
outsl
cmp
xchg
ficompl
sbb
int3
jne
leave
cmpsl
sbbl
outsl
push
fwait
add
cmp
mov
cwtl
fsubrs
xor
jmp
xchg
cmpb
daa
add
imul
inc
cmp
or
and
xchg
hlt
mov
test
push
and
and
cli
int
mov
out
ret
ss
adc
fwait
hlt
mov
cmc
mov
dec
pop
xchg
fimull
and
out
xlat
mov
aas
xchg
pushf
jae
sbb
lahf
xchg
jns
rorl
jg
out
imul
xchg
or
dec
adc
adc
fidivrl
inc
xchg
je
and
lahf
pop
hlt
jne
add
xchg
insl
mov
aad
ret
in
jae
addr16
push
inc
adc
add
dec
lods
mov
dec
sub
xlat
mov
daa
nop
add
jbe
sub
cmp
in
mov
xchg
popa
mov
test
insb
and
jg
into
enter
add
repz
sbb
mov
add
test
ljmp
repz
mov
leave
dec
int
lcall
cmovne
xchg
adc
mov
fisubs
fcmovnb
or
lret
xor
xchg
sbb
pusha
cmp
push
xchg
mov
jl
xchg
and
inc
and
ds
push
pusha
insl
mov
sub
pushf
cmp
mov
shll
data16
mov
mov
adc
jge
gs
sub
add
roll
inc
lds
dec
jge
cmp
or
pushf
sub
xchg
shlb
hlt
add
cmp
dec
xchg
test
popf
rorb
out
or
mov
punpckldq
stos
mov
cld
sahf
out
sbb
cmp
xchg
adc
ds
lds
jge
push
sbbl
push
sarb
sbb
mov
test
aaa
mov
cld
push
in
push
jne
pushf
testl
xchg
cmpsl
inc
pop
push
sbb
fwait
mov
sub
sbb
xchg
push
ljmp
jbe
iret
das
mov
gs
mov
push
sahf
push
pop
sbb
add
punpckhbw
movsb
rcr
cs
aas
sahf
push
adc
lea
mov
imul
cmp
filds
cmpsb
insb
add
add
push
lock
dec
or
addr16
dec
out
inc
sbb
les
gs
hlt
xchg
stos
cmp
dec
xlat
lock
inc
addr16
or
nop
mov
les
in
push
int
test
das
add
insb
sahf
int3
shl
cmp
dec
cmc
xchg
into
sub
popf
sbb
jae
add
lods
test
pop
mov
adc
cmp
pop
push
inc
or
inc
lods
sub
xor
mov
int3
xchg
mov
shl
hlt
xchg
mov
push
test
jl
arpl
xchg
je
mov
xchg
pop
xchg
pop
aas
xlat
xchg
push
adc
pop
and
out
pop
xchg
mov
fidivl
divl
enter
subl
mov
cmp
jle
mov
arpl
or
jnp
aaa
cmpsl
xchg
cmpsb
ret
sbb
orb
jbe
lret
jbe
ds
or
adc
jp
fstl
mov
xor
icebp
mov
jnp
push
mov
into
xchg
xchg
xchg
mov
daa
clc
push
les
pop
dec
test
mov
test
mov
rcrl
cwtl
lcall
scas
and
test
lods
pop
and
or
mov
add
adc
dec
xor
les
and
mov
dec
daa
add
pop
mov
or
cmp
mov
aaa
xor
testl
dec
dec
jl
adc
xchg
dec
sbbl
mov
or
pop
mov
inc
dec
rcr
popa
sahf
jbe
cmp
cmpsb
xchg
xchg
lods
ret
out
or
dec
xchg
xchg
sub
jp
cmp
negb
xor
dec
js
xchg
nop
inc
in
adc
xchg
icebp
mov
mov
shll
xchg
enter
addr16
push
testl
repnz
adc
xchg
fnstenv
in
and
stos
roll
add
jbe
mov
fcomps
jbe
cmovnp
or
mov
nop
stos
mov
ja
pop
sub
jl
cmc
clc
push
cwtl
xchg
lods
push
rolb
sub
jbe
cld
incl
ret
xchg
sahf
xchg
fisubl
stc
jecxz
sahf
fisttpll
jae
inc
stos
or
ret
xor
loop
adc
xchg
cli
or
pop
inc
pusha
fisubs
hlt
sahf
cltd
jnp
push
inc
xchg
test
jmp
xor
pop
xor
hlt
icebp
shrb
out
imul
arpl
dec
mov
fisttpl
aas
nop
cltd
adc
mov
movsb
jg
push
sarb
cltd
dec
add
jb
rcr
xchg
fisubs
test
mov
mov
shl
dec
insb
push
sahf
bound
dec
js
jne
test
outsl
inc
add
test
cli
mov
ds
cmp
sbb
popf
and
lret
pop
test
ljmp
and
mov
data16
jb
lock
sbb
and
dec
cmc
loope
xchg
xchg
lea
xchg
pop
or
mov
mov
sub
cs
pushf
test
mov
xchg
push
mov
mov
sti
xchg
lods
xchg
arpl
mov
cs
xchg
sbb
lret
and
mov
aaa
dec
movsb
shlb
dec
xchg
mov
mov
in
cwtl
xorb
incb
nop
xchg
test
mov
dec
cmp
pushf
add
pop
out
or
adc
xor
popa
pusha
ret
push
inc
pop
ret
scas
test
or
int3
into
jae
jmp
pop
cmp
cltd
enter
xchg
fistpll
jecxz
and
jbe
sahf
xchg
dec
sub
xchg
psubusb
xlat
jnp
shrb
cwtl
or
pop
mov
aas
icebp
add
xchg
jae
mov
jmp
inc
mov
xchg
jne
sbb
faddl
leave
mov
scas
push
pushf
je
adc
xchg
inc
mov
in
sub
sbb
fimuls
cmpsl
stos
jae
scas
test
incb
jno
jne
shll
lcall
jns
xchg
xchg
notl
shrb
fiadds
inc
test
cmp
pop
xlat
pushf
cli
sti
jge
cmp
data16
xor
xor
dec
call
mov
pusha
lods
rcll
dec
or
xor
sahf
ret
pop
push
adc
pop
xchg
add
adc
dec
push
jle
stos
mov
js
sub
imul
and
lds
push
mov
lods
push
inc
add
xchg
xchg
mov
mov
mov
mov
mov
pop
shrl
sbb
xchg
les
inc
push
xor
push
xor
and
inc
inc
and
add
lret
lcall
jne
sahf
cld
out
sbb
insb
negl
adc
sub
adc
test
cmp
arpl
xchg
aas
cmpsl
enter
shlb
mov
int
jmp
test
cmp
inc
jo
out
test
jg
hlt
mov
adc
and
mov
cmp
in
invd
xor
dec
mov
enter
pop
push
js
scas
push
xchg
rol
mov
pop
ret
mov
stos
stos
mov
subl
jnp
test
sti
or
xlat
xchg
sbb
std
fcmovnb
gs
adc
sahf
loope
cmc
xor
ss
movsb
cmp
adc
mov
lcall
enter
pushf
clc
rcrl
xchg
inc
movsl
xchg
out
xchg
test
mov
adc
or
outsl
and
xchg
mov
cmp
mov
addr16
nop
xchg
mov
sub
scas
pop
test
xchg
or
movsl
push
js
mov
xor
lahf
loopne
add
loop
pop
test
stc
cmp
lcall
imul
lcall
add
mov
test
push
mov
pop
sti
jecxz
jae
addb
mov
mov
js
push
faddp
pop
push
in
mov
mov
hlt
xchg
leave
mov
cmpsl
clc
xor
popf
int3
repnz
push
leave
insb
push
xchg
daa
bswap
sbb
popw
js
je
and
xchg
int
imul
aaa
xrelease
popa
mov
dec
sub
mov
add
movsl
daa
xchg
dec
xor
or
xchg
xchg
out
mull
add
aas
rorl
xchg
mov
sarb
push
int
inc
ret
jbe
imul
cmp
sub
jbe
sbb
mov
cli
xchg
repz
test
fldt
xchg
test
jns
xchg
int
leave
sbb
push
mov
and
mov
add
mov
stc
dec
mov
mov
dec
push
ret
xchg
loope
add
test
movsb
ret
cmp
xchg
std
into
add
addb
lods
adc
xchg
mov
out
repnz
cwtl
sahf
mov
js
xchg
loop
roll
push
and
add
bound
nop
and
push
aaa
jbe
scas
and
push
loopne
sub
mov
mov
mov
filds
test
jnp
push
stc
test
call
xor
pop
mov
stc
outsl
mov
pop
cmp
mov
pop
push
jns
cmpsl
lret
jle
xchg
add
xchg
fildll
outsb
sahf
fistpll
fwait
xchg
add
sbb
mov
add
xchg
stc
cmp
add
sahf
pusha
add
push
shr
fnstenv
mov
lods
xor
xchg
fcoml
dec
sbb
add
inc
imull
lret
leave
or
out
shr
pop
ss
aam
scas
and
xchg
and
aas
sbb
loopne
shll
xchg
loope
in
xor
mov
rcrb
cmc
sub
call
in
pop
push
xchg
dec
jbe
scas
cmp
inc
decl
jecxz
ljmp
out
adc
mov
push
subb
sbb
and
jecxz
je
in
jge
sbb
xchg
pop
dec
jne
mov
fwait
outsl
cli
push
inc
mov
xor
cmpsl
xchg
jae
mov
push
cmp
push
or
les
inc
in
xchg
stos
loopne
sbb
das
lret
mov
xchg
and
jns
and
xchg
push
mov
scas
out
add
cmp
lock
mov
jo
xchg
xor
xchg
std
lcall
incb
clc
rcr
xchg
mov
in
ret
xchg
mov
sub
cmp
fnstenv
add
popl
xchg
add
mov
xchg
jmp
shrb
cld
cmp
jne
lods
dec
mov
sahf
or
repnz
roll
sub
jp
inc
icebp
popf
incl
and
outsb
int3
xor
arpl
mov
mov
jns
xor
out
xchg
cmp
lods
dec
cs
hlt
dec
and
xchg
dec
sahf
rcl
sbb
cmc
sub
stos
cltd
pop
xchg
adc
xchg
shl
xchg
cmp
mov
data16
jle
dec
jbe
inc
daa
push
imul
data16
jae
mov
addb
adc
andnps
movsb
mov
scas
push
xchg
xchg
push
call
adc
or
mov
xchg
xor
push
adc
inc
inc
jle
push
rol
jns
xlat
mov
fnsave
inc
stos
int
xchg
ret
mov
push
mov
std
ds
bound
insb
test
xchg
rolb
lcallw
mov
test
adc
xchg
rcr
push
sub
mov
sahf
popfw
push
or
jno
push
mov
cmpsl
cli
mulb
xchg
repnz
lea
mov
call
cld
in
andb
and
out
lds
add
cld
xchg
add
int3
movsl
loop
mov
mov
das
cmpsl
inc
mov
lods
imul
and
cmpsb
arpl
cld
xchg
mov
push
movsb
stos
gs
fmuls
xor
mov
test
scas
xchg
dec
fsubs
out
xchg
jg
adc
into
mulb
fwait
vmwrite
sub
or
xchg
cmpsb
and
nop
iret
mov
addr16
ja
or
imul
sbb
adc
hlt
cmpsb
mov
mov
scas
push
out
mov
and
imul
sbb
faddl
stc
dec
stos
xor
xor
xchg
pop
aas
push
jg
or
nop
jbe
js
add
sbb
xchg
mov
sbb
out
dec
and
mov
xchg
fstpt
xchg
adc
data16
adc
lcall
push
mov
mov
add
mov
jno
push
lods
imul
jmp
in
cmpsl
push
mov
sar
xchg
mov
sub
mov
xchg
mov
xor
push
push
out
dec
xor
sbb
repz
inc
mov
cmp
mov
lahf
add
or
ret
adc
das
movsb
decb
xchg
mov
sub
adc
xchg
mov
cmp
fneni(8087
lock
data16
mov
out
sti
imul
movsl
mov
int
fisubrs
lret
jg
push
cmp
dec
or
cmpsb
xchg
psadbw
sub
xchg
xchg
je
movsb
mov
js
mov
cmp
and
arpl
mov
jge
xchg
xchg
push
ucomiss
mov
xorl
ret
loopne
adc
and
mov
xchg
mov
std
sbbb
mov
or
mov
xchg
icebp
cmp
or
iret
inc
and
test
or
and
lods
inc
mov
inc
sub
add
cmc
decb
dec
mov
dec
out
jbe
mov
push
int3
pop
sahf
xchg
packsswb
lods
shlb
add
lahf
mov
aam
sub
std
or
cmp
xor
add
movsl
sub
aaa
data16
jne
ret
xlat
fiadds
jb
data16
shlb
sahf
add
dec
cmp
xor
addr16
das
pop
mov
and
lahf
dec
pop
outsl
jbe
test
sbb
adc
xchg
adc
mov
scas
and
cmpsl
fimull
iret
xchg
jp
scas
daa
jae
push
negl
push
sahf
enter
add
sub
pusha
call
xchg
mov
andb
or
push
jbe
jl
adc
or
mov
mov
inc
pop
aam
in
repnz
xchg
pushf
lret
dec
jbe
jecxz
push
push
mov
xchg
mov
sti
xchg
inc
aad
cltd
add
push
mov
jp
test
ss
sub
mov
adc
cmp
stc
mov
add
scas
movsb
xchg
mov
bound
dec
mov
scas
add
or
xchg
mov
jo
addb
inc
das
jmp
aaa
mov
lea
pop
or
sub
inc
shl
sub
adc
xchg
int3
and
jne
inc
push
cmp
mov
adc
adc
mov
aas
insl
arpl
loop
das
add
sub
xchg
mov
mov
sti
xchg
mov
fwait
jle
inc
movsb
inc
and
test
and
inc
addr16
mov
sub
and
cmp
jp
jle
jb
lahf
xchg
xor
sbb
xchg
pop
jae
jbe
dec
sbb
loope
xchg
push
jge
xchg
jne
pop
data16
ss
pushf
jle
scas
lods
sahf
jmp
lahf
fwait
xchg
inc
push
dec
mov
mov
and
xchg
jnp
mov
push
xor
std
and
jl
sbb
sub
clc
fwait
adc
stos
inc
shlb
aam
je
cld
add
or
lahf
push
bound
xchg
and
xchg
push
repz
in
cmc
dec
inc
pop
rolb
and
xchg
leave
lods
xchg
adc
push
xchg
outsl
gs
mov
imul
pop
inc
fwait
sbb
sbbl
xchg
xchg
jge
sti
in
hlt
std
popa
xchg
push
subb
adc
ljmp
outsl
sbb
ret
and
and
cli
mov
xchg
or
leave
les
into
pushf
xor
xchg
data16
aam
call
in
in
and
loop
lcall
xchg
arpl
mov
lods
int
leave
loop
lret
loope
aaa
xlat
mov
xchg
outsb
pop
jns
jecxz
xor
jp
mov
rcrb
inc
or
sbb
pop
push
movsl
aad
and
mov
add
mov
xchg
sub
inc
sti
xchg
pop
lock
lods
out
xchg
adcl
xchg
xchg
ret
xor
dec
push
mov
insb
lds
xor
or
stos
lahf
or
push
enter
out
xchg
inc
xor
xchg
adc
mov
cmpsb
jnp
leave
xchg
addr16
iret
adc
mull
int3
xchg
ja
data16
outsl
dec
in
mov
inc
adc
mov
sti
inc
mov
inc
lahf
dec
cmc
xchg
js
pop
cmp
cmp
mov
movb
ss
fcoml
mov
xor
loope
sti
cmp
pop
and
mov
push
int
sbb
xchg
mov
xchg
push
dec
mov
inc
inc
adc
shll
xchg
inc
push
dec
sbb
fs
jl
in
cwtl
jo
push
xchg
out
int3
shll
out
sub
sub
hlt
cmp
test
cwtl
xchg
ja
xor
cld
pop
cmp
cmp
jecxz
xchg
jnp
pop
nop
push
dec
xchg
xchg
pop
incl
stos
mov
lcall
fidivrs
mov
aas
xchg
or
or
xchg
inc
adc
or
sbb
stc
pop
cmp
push
jns
dec
xchg
push
fisubl
ss
mov
xchg
test
pusha
and
inc
cltd
jnp
jp
nop
mov
xchg
or
dec
jbe
into
xchg
push
and
xchg
push
sbb
dec
repnz
out
ss
xlat
pop
fisubs
cltd
push
lcall
mov
mov
xchg
inc
pop
sub
nop
xchg
inc
sub
inc
popa
dec
xchg
scas
jg
mov
push
test
movsl
mov
pushf
sub
iret
cmc
pop
in
xor
cwtl
les
leave
fsubr
xchg
mov
xor
xchg
xchg
sub
insb
xor
mov
jo
pushf
jae
data16
xchg
push
lods
ja
mov
mull
lcall
xchg
cs
test
ljmp
fldt
dec
xchg
in
out
loope
aad
mov
leave
xor
push
adcl
imul
xorb
cmp
test
mov
mov
push
add
xchg
mov
faddl
and
mov
daa
jmp
adc
dec
and
mov
jp
lcall
das
call
sti
stc
sbb
jnp
enter
push
cmpsb
add
movsb
add
sahf
inc
addl
in
sub
push
jmp
jne
mov
mov
lds
and
sbb
adc
xchg
rclb
xchg
arpl
rorl
enter
or
ss
sub
jns
pop
lcall
mov
test
mov
mov
outsb
icebp
aas
dec
sti
xchg
cli
cltd
add
inc
and
xchg
and
push
dec
and
cld
imul
mov
cmp
push
mov
xchg
jmp
pop
addr16
pop
ret
lock
fwait
cmpsb
popf
pop
es
insl
mov
sbb
sub
lock
inc
fwait
roll
push
add
fld
leave
jmp
out
adc
push
divl
pop
repnz
insl
movsb
xor
nop
push
jb
repnz
icebp
xchg
xlat
out
subb
inc
mov
aam
push
mov
mov
ja
pop
xchg
mov
sbb
mov
fildl
jno
cmp
jle
sarl
sbb
jecxz
sbb
mov
add
lods
movsb
flds
add
jle
sbb
or
pop
xchg
pop
insb
stos
xor
push
inc
xchg
cmp
popa
movsl
jns
rcll
fs
push
rorl
nop
jg
daa
lods
pop
mov
lcall
xchg
dec
int3
loope
push
adc
movsl
xor
ffreep
pop
mov
push
dec
sti
xlat
inc
in
or
cmp
ret
xchg
bound
daa
cmpsl
lret
push
pop
int
mov
xchg
sbb
movl
xchg
sub
roll
mov
add
in
leavew
in
xor
jecxz
push
loopne
sahf
rcr
lds
icebp
adc
mov
pop
jle
movsb
and
inc
loop
inc
lock
lcall
mov
popl
push
xchg
pop
bound
push
jmp
xchg
addl
fwait
adc
orb
mul
repz
mov
fdivrl
sub
mov
mov
push
subb
jbe
xlat
dec
cmp
push
cli
cld
xor
and
mov
sbbl
repnz
data16
jp
push
xchg
inc
ret
add
movsb
or
mov
or
aad
cmpsl
sbb
aas
pop
shlb
xor
mov
std
pusha
into
mov
int3
orb
shlb
clc
rcll
pop
cmc
cmp
lahf
pushf
rol
cmp
stc
xchg
and
add
arpl
rorl
stc
pop
mov
fcoml
mov
pop
push
mov
mov
js
loope
incl
lcall
icebp
sbbb
out
ss
jae
ja
js
jns
xchg
cmp
xchg
adc
xchg
lea
pop
add
xchg
cltd
mov
jl
push
dec
dec
sbb
xchg
sti
push
mov
xor
add
repnz
push
lahf
jne
nop
cmp
sbb
add
adc
xorb
lds
data16
mov
mov
lods
mov
xchg
lea
repnz
and
dec
jg
jno
push
jp
divl
dec
jp
nop
out
int
faddl
sbb
test
hlt
aad
xchg
arpl
and
mull
xchg
popa
and
adc
xchg
mov
jns
pop
push
cmp
sbbb
pop
xchg
outsb
ds
add
dec
inc
cmp
addb
xchg
cli
xor
push
xchg
addr16
scas
jg
push
pop
lea
inc
and
fisubrs
icebp
fs
popa
hlt
mov
cmp
cmpsl
test
and
and
xchg
mov
imul
addr16
popf
xor
mov
xchg
out
fwait
shlb
push
repz
inc
cmc
adc
mov
pop
addr16
data16
sub
mov
xor
daa
xlat
jo
mov
mov
xchg
mov
addb
clc
pop
mov
js
sahf
pop
fstpt
xor
inc
sub
inc
lods
mov
fidivs
or
xor
xor
xchg
addr16
xchg
insb
outsl
mov
push
push
dec
pop
imul
mov
push
dec
sub
mov
cmp
sub
cli
faddl
outsb
xchg
push
or
jbe
fs
push
jg
mov
movb
jp
jmp
xchg
test
arpl
mov
mov
lods
addb
loop
int
data16
ret
and
jecxz
aas
inc
imul
mov
in
test
push
imul
ss
test
cwtl
cltd
cwtl
into
dec
shrb
push
dec
mov
outsb
mov
xchg
push
xchg
xchg
pop
xchg
sarb
jle
jns
test
addl
sub
loopne
xlat
push
dec
test
mov
cld
aas
and
push
addl
xor
add
dec
hlt
xchg
adcl
mov
sahf
or
test
ret
subb
cs
dec
xchg
fucomi
xchg
ja
xchg
pop
cmp
pop
pop
fadds
mov
mov
mov
cmpsl
mov
push
lock
inc
push
dec
inc
add
xchg
stos
lock
sub
xchg
movsl
mov
ss
das
test
jbe
scas
mov
gs
xchg
enter
sub
lcall
jbe
in
lret
sub
popf
fs
shrl
and
mov
imull
xchg
dec
data16
xchg
outsl
sub
ficomps
les
jg
lcall
mov
sbb
pop
pop
sub
data16
pop
add
adc
loope
inc
jae
leave
push
nop
sbb
cmp
cld
imul
dec
pop
aas
push
dec
js
mulb
adc
pop
test
xor
cmpsl
fsubr
fwait
dec
sbb
pop
push
mov
mulb
rcl
bound
ret
jmp
pusha
les
loope
cwtl
lea
cmpsb
and
jbe
sub
lods
mov
jo
lcall
mov
lahf
sbb
push
icebp
sti
stos
jbe
addr16
adc
mov
outsl
clc
iretw
sub
dec
xlat
mov
add
lods
sahf
xor
scas
cmp
mov
out
insb
movsb
sub
mov
in
lcall
push
aam
test
ss
cmpsb
sbb
xchg
sahf
add
inc
addb
xlat
push
fdivs
fldl
repz
inc
ret
adc
out
enter
adc
imul
ret
rcrl
lods
mov
add
addb
xor
sahf
bsf
mov
ljmp
outsl
add
xchg
pop
inc
add
dec
xchg
hlt
and
jne
test
lret
sub
imul
xor
pop
jle
popf
xchg
mov
aas
jne
rolb
js
loop
mov
sahf
sbb
mov
fldlg2
xor
dec
xchg
dec
imul
data16
movsl
cmp
dec
push
dec
jp
sahf
xchg
cmpsb
aaa
scas
sbbb
pop
or
rcll
jg
jp
or
xchg
aaa
ds
dec
inc
jbe
xlat
out
push
or
cmpsl
xchg
sbb
jnp
xchg
enter
cld
rolb
inc
mov
cmp
data16
add
xor
dec
arpl
cmp
mov
add
retw
popf
mov
lods
push
jne
pop
pop
mov
adcb
movl
adc
jmp
cli
add
dec
mov
adc
aaa
inc
or
gs
inc
xchg
lea
mov
popa
ret
mov
andb
xchg
mov
aas
ljmp
sahf
lock
sub
pop
mov
jbe
mov
es
sahf
int3
xorb
adc
test
jbe
mov
sbb
cmp
xor
pop
add
push
jmp
addr16
sbb
xchg
jge
data16
fs
lahf
es
push
xchg
movsb
pop
xchg
jle
pop
push
dec
shlb
pop
rorl
inc
add
xchg
rorl
push
or
cwtl
or
xchg
loope
fldcw
lcall
dec
repnz
xchg
mov
aam
xchg
movsb
xor
dec
push
mov
mov
test
push
mov
inc
xchg
xchg
imul
les
bound
and
adc
xchg
pop
mov
xchg
add
sarb
add
outsb
stc
sbb
roll
mov
or
sbb
movsl
sub
mov
icebp
mov
push
xchg
arpl
lahf
mov
jnp
cmp
movsl
lods
adc
ss
xor
adc
inc
xchg
aam
ret
inc
jns
pop
test
sbb
pop
les
jge
cwtl
xchg
aam
cmp
popf
jae
outsb
inc
push
xchg
sbb
ds
je
dec
inc
xchg
xchg
psubsw
outsl
addr16
aaa
xchg
pop
push
xor
lock
and
mov
stc
mov
repz
add
push
mov
adc
xchg
inc
iret
movsb
data16
pop
cmc
ret
into
bound
pop
dec
outsl
cmp
adc
mov
lcall
sub
inc
flds
shll
lods
sbb
push
cltd
ret
idivl
xlat
xor
mov
bswap
xchg
rorb
leave
fisttpl
call
jle
adc
mov
jp
lahf
sahf
les
jecxz
orb
jae
popa
movsb
jge
movsl
loopne
push
loop
outsb
ds
lcall
sbb
push
lods
and
xchg
push
icebp
sbb
jl
add
xchg
in
and
popf
pusha
push
daa
adc
lahf
inc
fisubrs
push
sbb
in
sub
xchg
fucomi
leave
mov
and
nop
outsb
imul
push
stc
pop
ja
mov
jne
fstps
xor
outsl
lcall
adc
xchg
lahf
mov
adc
repnz
imul
into
push
jl
mov
mov
xchg
jns
mov
addr16
xchg
shrb
cmp
xchg
push
dec
lds
mov
js
add
in
mov
adc
in
setp
nopl
cmp
jl
loopne
aam
rolb
dec
ja
into
xchg
lods
cltd
data16
testl
push
leave
loopne
pop
icebp
lcall
pushf
fcmovu
jbe
mov
or
pop
cltd
sub
clc
push
je
xchg
mov
xchg
jg
or
loope
lcall
ret
cmpb
sbb
sahf
jmp
pusha
and
rclb
mov
subb
xchg
push
xchg
jecxz
mov
mov
es
out
ja
sahf
loop
int
std
lea
push
imul
repnz
adc
nop
loop
add
sub
loope
daa
shll
adcb
mov
test
push
push
adc
mov
adc
sbb
stc
lods
outsb
add
popf
add
inc
movsl
sub
cs
mov
mov
push
lcall
inc
sahf
std
pusha
pop
inc
push
mov
je
mov
pushf
xchg
fs
rcrb
inc
push
sub
jl
lods
adc
push
lods
and
and
and
pop
xchg
test
sbb
and
inc
insl
enter
sahf
cld
lcall
mov
addb
cmp
cmp
popl
sub
pop
clc
xchg
sub
popa
or
xchg
xor
sarb
jmp
fimuls
sbb
jno
or
into
cmp
dec
mov
dec
fbstp
jns
pop
pop
push
pop
jp
stc
cmpsb
xorl
lcall
xchg
push
mov
pop
jecxz
das
filds
add
jno
lds
push
pushf
or
mov
xchg
bound
lea
cmc
push
mov
es
sbb
jo
xor
fimull
mov
adc
add
mov
dec
icebp
cmp
xchg
jg
mov
inc
push
sub
xor
mov
pop
test
fidivs
fs
sarl
notl
outsb
aam
ret
mov
mov
inc
xchg
out
fistpll
lea
pop
pop
inc
xchg
fwait
add
iret
adc
icebp
mov
inc
inc
xchg
das
js
xchg
pusha
sbb
xchg
and
data16
dec
in
ret
adc
les
dec
mov
fnsave
ss
lret
lcall
dec
fistpl
jae
xor
sti
jbe
mov
mov
push
jbe
lds
xchg
repnz
subb
ret
test
adc
pushf
mov
xchg
movsl
mov
mov
fdivrl
mov
push
xchg
jbe
shrl
jg
mov
int3
ss
sbb
xor
sub
adc
inc
int3
bound
outsl
aad
cmpsb
mov
or
lret
and
lds
xchg
out
aaa
dec
lea
sbb
xchg
or
jb
mov
cmpsl
jg
popf
add
das
xchg
xor
mov
movsl
mov
pop
and
fs
and
xchg
mov
mov
test
jb
imul
or
adc
popl
test
fwait
mov
outsb
pop
pop
inc
out
sbb
lret
push
jbe
repnz
out
popa
add
push
test
xchg
les
out
lods
ss
push
movsl
pop
mov
mov
xchg
arpl
mov
pusha
adc
in
pop
data16
shr
das
cs
jb
push
sbb
sahf
pop
xchg
es
pop
jge
test
mov
pop
flds
les
xchg
mov
lahf
mov
loop
scas
scas
idivl
pop
aas
pop
aam
stos
mov
or
data16
out
and
nop
xchg
sbb
cmp
and
mov
negb
sub
popl
cmp
cmp
push
dec
and
jmp
repnz
xchg
js
cmp
xchg
jo
divb
cmp
movb
mov
out
push
inc
cmp
ja
sbb
or
mov
les
adc
loop
push
lea
adc
push
xchg
xor
lods
pop
dec
add
mov
mov
mov
mov
ds
adc
mov
daa
mov
hlt
icebp
js
fstpt
in
in
or
jle
dec
push
mov
iret
out
sbb
enter
mov
sub
rclb
call
add
sahf
sbb
mov
push
lock
sahf
dec
push
in
push
xchg
jnp
mov
mov
retw
loopne
push
xchg
test
push
add
inc
mov
jmp
inc
mov
push
inc
mov
hlt
xchg
push
incb
es
mov
sub
cmp
jle
rorl
xor
bound
xchg
xchg
insb
stos
les
adcb
cli
sbb
test
xor
rcrl
cmc
xchg
loopne
cld
shr
icebp
mov
cmpsb
xor
xlat
fcmovb
push
sub
fsubrs
or
add
out
iret
subb
jb
jl
add
shll
gs
push
adc
les
movsl
and
xchg
addb
mov
or
mov
outsl
jno
sbb
sub
lahf
lcall
fwait
imul
orb
movsl
mov
fcompl
add
lcall
in
push
cs
mov
pop
loopne
cmp
xchg
jno
or
adc
cmp
lcall
daa
jnp
jb
jmp
mov
jbe
push
cltd
mov
sbb
lock
leave
fistl
push
repnz
ret
xchg
xor
ss
lea
in
aas
imul
std
dec
rcrb
xchg
lods
outsl
cmp
and
and
insb
cmc
mov
xchg
and
inc
frstor
in
sub
xchg
mov
cwtl
pop
or
test
dec
addr16
xor
daa
lahf
addb
push
scas
xchg
ds
xchg
sub
lahf
pushf
test
addb
jns
fsubs
movsl
hlt
loopne
fmul
data16
aaa
cmpsb
out
leave
int3
repnz
jmp
stos
dec
xchg
xor
repnz
sub
fildll
cmp
mov
jecxz
fisubrl
inc
ljmp
lahf
dec
or
test
into
addr16
cmp
or
jbe
xchg
pop
xchg
xor
stos
data16
add
lcall
mov
and
or
icebp
sub
jg
xor
stc
push
cmp
pop
ret
push
or
mov
dec
loop
inc
stos
xlat
adc
pushf
bound
xchg
in
push
dec
sahf
xchg
in
mov
cld
and
xchg
mov
test
xor
cmp
dec
cmp
mov
sub
fistps
ret
popa
sbb
std
movsl
inc
sub
xor
xchg
fnstenv
mov
test
pop
push
cli
ss
inc
mov
and
cld
xchg
pop
sub
lea
mov
mov
lock
jmp
jle
outsl
ja
xchg
repz
loope
ss
pop
mov
sahf
data16
or
jp
cmc
xchg
iret
xchg
pop
xchg
pusha
mov
loopne
cld
or
mov
inc
pop
scas
mov
shll
xchg
xchg
sarb
jg
pop
lods
add
mov
test
xchg
mov
mov
dec
js
rcll
or
mov
test
mov
clc
mov
mov
mov
xchg
cmp
mov
int
pop
sub
lret
lods
cmpsb
mov
test
adc
aam
push
cmp
les
xchg
daa
int
inc
es
jmp
je
cld
lcall
sub
mov
pop
or
and
add
mov
fcompl
push
push
imul
sub
mov
out
mov
push
fwait
mov
ss
jnp
cmp
pop
ljmp
xchg
inc
loop
push
lds
in
arpl
push
xchg
push
pop
inc
andl
add
fldenv
test
movsb
add
data16
gs
js
pusha
enter
test
je
rcrb
cli
mov
popl
push
cmc
or
cmp
mov
xorb
mov
push
das
mov
adc
loope
mov
lock
jle
xchg
adc
mov
mov
sub
scas
inc
repz
and
add
pop
ret
xor
stc
cmpb
lcall
dec
mov
inc
sub
pop
mov
mov
sbb
mov
shl
ss
cmp
mov
mov
push
int
dec
dec
add
cmc
loope
cli
repnz
and
cmc
xor
sub
inc
xlat
or
cs
mov
out
mov
push
mov
lret
push
in
push
mov
stc
mov
andl
js
jbe
mov
inc
adc
out
cmp
lods
stos
push
or
loop
adc
xchg
out
jmp
sbb
xchg
pop
sub
out
adc
pop
jg
mov
jnp
push
ret
js
icebp
and
ret
cs
test
mov
jbe
xchg
mov
addb
mov
cmp
cmp
lds
pop
mov
repz
fdivl
xor
arpl
dec
clc
fwait
inc
popf
or
sub
add
cmp
fwait
cs
pop
in
in
sub
movsb
mov
sub
adc
arpl
push
in
cmpb
mov
mov
ss
mov
or
jecxz
outsb
push
pop
add
ret
pushf
les
in
inc
mov
inc
out
bound
sbb
leave
inc
rcrl
xor
add
fnsave
add
clc
rolb
les
push
hlt
pop
push
movsb
xor
scas
sub
in
mov
cmp
out
data16
jge
sbb
les
fs
or
loop
push
neg
mov
jmp
js
mov
add
fdivp
lock
xlat
daa
xchg
data16
fisttpll
data16
lods
sarb
mov
pop
jns
mov
shr
cmp
xor
movsl
jnp
adc
jg
or
cwtl
je
push
jbe
movsl
sub
loop
pop
lods
outsb
sub
sbbb
xchg
in
push
push
icebp
les
mov
mov
out
jbe
pop
stos
movb
jle
aad
push
push
adcb
in
cmpsb
adc
lcall
push
add
xchg
fmul
data16
lret
xchg
inc
or
shrb
fcoms
push
sbb
mov
cwtl
inc
into
testl
xchg
push
shr
mov
mov
xchg
fstl
popl
xor
jl
jns
cmp
push
jecxz
lret
xchg
lcall
popl
jae
fisubs
lret
push
sub
pop
pop
dec
push
cmp
lret
enter
cmp
inc
or
push
xchg
movb
lods
jbe
or
bound
mov
or
pop
mov
es
adc
idiv
mov
mov
ret
out
imul
xchg
int3
jmp
in
cmpb
jae
sub
push
fsts
mov
push
stos
loope
cli
fisubs
mov
jge
orb
xchg
and
jne
adc
xchg
dec
gs
or
loop
lea
cmp
sahf
add
ss
and
in
inc
xchg
or
xchg
inc
pop
or
es
jns
and
xchg
mov
mov
ljmp
xchg
clc
sbb
call
adc
inc
or
movsl
xor
int
add
sti
movsb
sub
cs
flds
cmp
mov
jmp
into
inc
jb
or
dec
cmp
sbbl
jmp
lock
int3
mov
cmp
repz
inc
lret
loop
je
movl
xchg
lods
mov
cmp
mov
push
and
xchg
andb
ret
scas
add
inc
cwtl
xchg
lret
out
jns
ret
cmp
fidivl
inc
inc
in
push
aam
add
dec
xchg
add
inc
mov
out
cmp
mov
iret
xchg
shr
push
sub
xor
mov
push
mov
pop
movsb
push
dec
fildl
inc
jl
dec
mov
mov
testl
movsb
mov
stos
xchg
and
cltd
push
mov
push
lods
lods
xchg
and
idivl
je
pop
mov
in
aas
icebp
jo
sub
cltd
jecxz
cmpl
xchg
pop
adc
xor
push
xchg
outsl
mov
pop
pop
xchg
sub
jmp
mov
dec
pop
test
add
inc
aam
cmpsl
nop
lcall
xchg
jg
cmp
pushf
adc
inc
inc
fwait
and
fnstenv
xlat
xor
cmp
imul
int3
daa
sbb
lds
add
pushf
insl
cmp
sbb
xchg
xchg
adc
inc
and
popl
or
push
xchg
repnz
xchg
cmp
add
adcl
lahf
ljmp
divl
cmp
in
mov
out
mov
into
adc
test
fyl2x
testb
mov
repz
rcrb
jge
push
lods
lcall
push
dec
or
daa
xchg
out
and
inc
lods
dec
movb
xchg
add
jns
hlt
cmp
xor
xchg
xchg
xchg
jmp
xchg
add
out
sahf
sbb
clc
adc
dec
les
jecxz
jl
fwait
jg
rol
int
pop
xchg
push
jge
mov
pop
xchg
insb
or
pop
push
sbb
and
or
dec
sbb
push
pop
push
sahf
or
cwtl
and
xlat
cmp
test
enter
xchg
adc
lret
xchg
lods
test
cwtl
push
mov
cmpb
cmpsb
sub
or
push
jp
ret
ds
mov
mov
ret
xchg
call
outsb
mov
mov
push
push
mov
adc
rcl
xlat
ror
aam
jae
out
jle
dec
sbbl
enter
sub
xchg
push
pop
out
push
or
std
mov
frstor
stc
mov
fwait
shll
jbe
mov
adc
cmp
push
out
aad
pop
test
out
xor
and
xchg
nop
pop
std
add
scas
mov
test
adc
mov
sbbb
xor
inc
xchg
test
aaa
lea
xchg
mov
testl
xchg
out
scas
jl
dec
into
nop
xchg
int3
add
roll
xchg
or
mov
mov
pop
xchg
dec
push
movsl
jecxz
xor
sub
and
fiadds
stos
or
jmp
xor
leave
or
mov
addr16
repz
mov
cwtl
test
jp
and
sahf
icebp
gs
sahf
push
adc
push
mov
lods
iret
jmp
rcr
fldt
ss
xchg
test
mov
push
ss
test
sbb
sahf
add
or
adc
inc
test
jge
mov
jg
xchg
jbe
je
jnp
ret
xchg
incb
cld
imul
mov
inc
cmp
cmp
xchg
add
jecxz
cmp
loope
out
das
pop
mov
xchg
or
repz
imul
jge
out
gs
subb
pop
mov
sahf
sbb
xchg
push
push
adc
stos
cmpsb
fldcw
pop
xor
cmc
into
xchg
xchg
mov
aas
cltd
xor
iret
and
push
mov
out
inc
jb
data16
out
xorb
das
movsl
data16
mov
mov
cmp
fldl
adc
cmc
out
nop
imul
out
xchg
testl
ret
sbb
out
sbb
push
notl
sbb
add
sahf
gs
dec
add
iret
rcll
shlb
stos
mov
sbb
adc
leave
pushf
xchg
jb
ljmp
js
mov
and
fsub
outsb
cmp
pop
and
arpl
outsb
cld
push
jno
pop
outsl
hlt
jmp
xchg
je
mov
mov
fisttps
test
cmpsb
sahf
pop
mov
rolb
mov
mov
inc
fbstp
sbb
mov
inc
cmpsl
jae
scas
push
push
inc
xor
and
jne
or
push
mov
loop
lcall
and
mov
test
mov
sahf
mov
pop
in
xor
mov
ret
int
sub
push
jae
push
cmp
or
xchg
sub
rcrb
negb
cmp
inc
lea
lret
in
push
pop
pop
or
xor
aaa
xor
xchg
loope
push
or
jge
and
xchg
adc
sbb
lcall
mov
popf
stos
ror
outsb
and
cmpsl
dec
out
adc
ss
inc
js
xchg
push
xchg
adc
dec
dec
loope
out
sub
mov
outsl
insb
inc
enter
rorb
cmp
jae
jbe
in
and
xchg
call
imul
jecxz
sbbl
fsubl
addr16
push
pop
pop
mov
mov
cmp
jge
add
lcall
sbbb
mov
xchg
lods
xchg
pop
out
insb
ljmp
pop
cld
rorl
gs
shrb
ss
dec
mov
addl
cmc
xchg
loop
shlb
out
inc
lods
aad
cmp
insl
lds
cmp
pop
mov
test
arpl
inc
sbbw
jp
gs
add
icebp
xchg
xchg
fstl
mov
inc
jns
cmp
dec
sbb
loope
sbb
jle
int
packuswb
js
daa
insl
sub
shll
cwtl
sub
cli
cmp
repz
mov
push
xchg
outsl
int3
xchg
sbb
xlat
dec
les
scas
test
out
pop
fwait
sbb
jg
outsb
cmpsl
std
out
inc
stos
sahf
lahf
cmp
cmovb
das
push
pop
aam
je
mov
sub
xchg
jmp
cs
push
in
cmp
xchg
mov
mov
ret
rcrb
popf
idivl
pusha
adc
or
jmp
sub
imul
mov
inc
mov
add
inc
sti
mov
fwait
jge
cld
inc
add
repnz
mov
or
add
aam
push
cmp
xchg
repz
add
pop
mov
jbe
jmp
std
nop
xchg
popf
int3
repz
cmp
jge
ss
fcmovu
les
add
xchg
dec
adc
jno
outsl
aam
rcrl
add
mov
xlat
mov
jle
cmc
aaa
notb
rep
adc
divb
cmp
xchg
stos
cmp
mov
iret
cmpsl
xchg
shlb
inc
mov
dec
push
pop
inc
dec
push
or
sti
xor
lret
lods
mov
mov
pushf
movsl
movsb
ret
inc
add
aam
sbb
jmp
test
addb
inc
xor
xor
dec
jl
cltd
push
lcall
xchg
pusha
inc
mov
push
jbe
cld
cmp
or
test
loope
xlat
adc
mov
pop
out
sbb
gs
mov
lcall
icebp
mov
testb
cmp
mov
mov
cmp
das
lea
pop
inc
mov
testb
mov
frstor
jmp
sub
mov
cwtl
mov
xchg
out
xchg
cmpsl
pushl
inc
sahf
outsb
sbb
pop
cmc
inc
out
dec
mov
sbb
loop
add
mov
iret
pop
adc
mov
int3
and
mov
or
fnstenv
inc
mov
fisubrl
ss
daa
scas
inc
sub
mov
xchg
outsl
xor
and
add
push
lods
cmp
incl
jb
mov
sbb
test
jnp
dec
sti
xor
lahf
scas
inc
lcall
push
out
and
xor
jae
pop
lahf
lcall
invd
data16
rcrb
adc
xchg
xchg
jo
xchg
xor
mov
cmp
movl
push
sbb
cs
sbb
loope
dec
jbe
jl
cmpsl
ds
out
cs
ficomps
mov
jge
xor
or
jmp
pop
pop
sbb
xchg
js
addps
dec
pop
cmp
imul
stos
cmpsb
push
stos
or
xchg
dec
push
xchg
inc
xor
push
iret
jo
dec
lret
pop
pop
push
pop
cwtl
push
sbbl
out
push
ss
inc
sub
dec
jb
mov
leave
add
sahf
sbb
dec
je
lock
cmp
cmp
imul
xor
mov
jmp
jge
xchg
mov
ret
add
mov
push
mov
mov
xchg
rcll
xchg
into
not
movsb
fisubrs
mov
and
ret
ss
sbb
andb
lret
or
lods
lods
xchg
or
and
mov
jne
and
mov
pop
aas
cmp
xchg
xchg
sahf
fstpl
or
cmp
shrb
adc
adc
aam
dec
xchg
jns
xchg
xchg
lcall
out
cmc
arpl
sub
xchg
xchg
fs
stc
mov
enter
outsl
scas
push
cltd
pop
fildl
call
jb
mov
aad
std
clc
xchg
xchg
mov
scas
test
les
push
test
sahf
std
jl
jge
lock
dec
pusha
xchg
inc
ja
faddl
movsl
mov
ret
lcall
dec
in
je
xchg
inc
xchg
fs
fmull
mov
xchg
or
mov
push
jmp
and
add
pop
mov
dec
aam
rcll
icebp
mov
xchg
inc
int3
je
call
mov
mov
mov
xchg
xor
and
lock
sar
sbb
fbstp
jns
mov
out
sahf
push
xor
popf
lods
into
xor
movsl
lahf
xchg
jae
shrl
fidivrs
dec
inc
mov
adc
call
xchg
mov
sahf
push
mov
xchg
cmp
int3
xchg
lret
rcll
sub
mov
sub
nop
fldcw
lret
inc
js
or
adc
cmpb
inc
adc
cltd
test
dec
shr
pop
loop
push
jne
shrl
ret
scas
sub
xchg
int
sub
mov
adc
xchg
push
mov
adc
inc
cs
stc
xchg
fsubrl
mov
jle
cwtl
lcall
mov
sahf
out
bound
pop
aam
add
insl
jmp
mov
cwtl
fnstcw
jno
and
sti
adc
mov
test
push
jg
pop
mov
mov
sbb
lock
add
nop
movsl
adc
cs
mov
pusha
xchg
insl
and
cmp
ror
ljmp
mov
cmp
fnstenv
jae
sub
xor
mov
jns
cs
jo
xor
inc
iret
sahf
clc
push
ret
xchg
adc
pop
aad
aas
popa
mov
sub
xor
fcmovnb
fsubp
aaa
xchg
ror
int3
sbbb
adc
fcmovnu
adc
imul
stc
xchg
push
push
insb
repz
xchg
pushf
or
push
inc
sti
jecxz
xor
data16
out
cmp
xchg
push
push
or
lcall
add
cmp
dec
icebp
test
mov
aad
testl
lret
pop
scas
xchg
les
xor
mov
or
pusha
add
lock
mov
and
cs
mov
arpl
das
mov
andb
dec
lahf
jge
insl
js
iret
andb
push
lods
lahf
rcrl
jecxz
cmp
mov
inc
jnp
cmc
pop
ficoms
int3
jbe
insb
pop
push
dec
loopne
adc
inc
cmp
cmc
add
xchg
lcall
lcall
test
dec
cmp
xchg
cli
mov
push
cwtl
data16
aaa
test
pop
mov
scas
stc
sub
fstpt
in
xchg
or
adc
packuswb
xchg
xor
mov
adc
mov
sbb
lods
dec
fnsave
mov
pop
or
mov
mov
scas
stos
dec
aad
mov
xchg
ds
add
loopne
inc
testb
hlt
push
dec
xchg
das
test
dec
scas
xchg
outsl
or
mov
punpcklwd
xchg
cmp
out
addr16
push
xchg
das
fistpll
xchg
cmp
data16
into
pushf
or
pusha
scas
outsl
xchg
cli
mov
daa
mov
cmp
arpl
dec
cmp
mov
sbbl
ffree
cmpb
loopne
pushf
cmp
jns
xor
add
fstps
out
xchg
dec
aas
jns
and
sub
shr
out
xchg
dec
jmp
dec
dec
pop
or
cmp
xor
sbb
cmp
js
loope
ja
xchg
and
cmpsb
sbb
pop
mov
pop
jne
movsl
stos
mov
cld
cmp
scas
into
cmpsb
xchg
aaa
int3
mov
push
rcr
test
js
xor
scas
mov
jno
add
xchg
xchg
leave
push
push
pop
mov
lea
or
fwait
cmp
push
out
pop
pop
dec
push
xchg
jno
adc
mov
psubsw
daa
add
test
stos
xor
lcall
es
inc
lea
ja
pusha
adc
xor
adc
sbbb
imul
stos
mov
enter
pop
add
clc
popf
sub
push
insb
dec
pop
xchg
pop
imul
in
xchg
jp
lods
shrb
ss
ret
test
mov
jbe
sbb
int
loop
mov
cmp
fimull
insl
jae
popf
jb
xchg
stos
shll
mov
scas
mov
pop
xchg
pop
shl
xchg
dec
movl
jne
xor
sub
int3
cwtl
aad
dec
pop
nop
fisubl
sti
jle
mov
push
movsl
sahf
xchg
mov
movsb
pop
mov
mov
and
loopne
push
or
sub
popa
xchg
mov
cs
cmp
inc
add
sub
lcall
pop
out
jb
sub
mov
out
sti
popf
outsb
mov
add
jg
mov
mov
popf
fldenv
mov
sti
incl
xor
in
lods
popa
xor
push
xchg
movaps
test
mov
lods
jle
out
into
repz
mov
mov
inc
in
dec
add
add
sub
mov
push
pop
aas
xchg
stc
loope
xor
gs
outsb
enter
inc
mov
repnz
and
jg
sub
add
xlat
scas
jno
xchg
imul
add
loopne
mov
cmpb
aam
cmp
int
push
adc
outsb
std
dec
xchg
sub
push
and
inc
bound
loope
fsubl
frndint
cmc
outsl
and
xchg
or
stos
sahf
test
test
ss
popf
dec
gs
cmpsb
mov
mov
lods
xchg
mov
and
imul
lcall
cmpsb
les
dec
dec
pop
adc
leave
outsl
mov
add
movsl
rolb
push
or
xchg
lds
add
add
sub
es
out
xchg
out
xchg
arpl
xchg
dec
fwait
es
jp
rcrb
xchg
fnstenv
enter
bound
push
movsl
dec
xor
sub
lods
cmp
and
scas
sahf
stos
popf
push
jns
adc
jae
jge
jne
push
xchg
xchg
lahf
cmp
and
mov
cmc
sub
jge
aam
inc
push
push
scas
andb
ljmp
sti
std
xchg
movsl
push
jmp
add
inc
jle
std
sti
cmpsb
inc
xchg
jl
cmpsb
dec
rol
mov
and
pop
mov
mov
cwtl
and
xor
and
cwtl
and
mov
pushl
inc
jge
push
dec
lahf
jne
jno
cmp
popa
jp
inc
dec
jmp
cmc
mov
sti
lcall
xor
inc
xchg
adc
in
test
sub
push
icebp
or
mov
add
out
jbe
js
mov
adc
lcall
xchg
daa
aad
pop
mov
or
ljmp
xchg
fildl
and
pop
add
stos
adc
std
jle
push
xchg
cmp
stc
inc
sarb
fwait
mov
in
in
cltd
push
jb
mov
xor
test
rcll
jbe
pop
mov
and
es
add
push
loop
sbbl
inc
xchg
fs
sbb
ss
adc
jl
call
sbb
inc
mov
add
xchg
xchg
push
movl
xchg
mov
pop
cmpb
xchg
and
popl
rol
test
arpl
mov
sahf
xchg
sub
fldl
cld
push
dec
pushl
mov
sbb
stc
je
cmpsl
cwtl
imul
inc
jl
xor
fs
or
pusha
xchg
xchg
out
mov
jecxz
and
dec
fildl
std
loope
add
jbe
les
icebp
sbb
mov
dec
pushf
aas
movsl
das
shr
out
xchg
incl
adcl
in
mov
xor
insl
fwait
mov
dec
inc
roll
inc
data16
icebp
and
mov
push
sahf
or
mov
xchg
jbe
pop
rol
lahf
rcll
lea
leave
adc
inc
rcr
in
xchg
push
fs
mov
shrl
mov
ljmp
lds
mov
push
sub
or
xchg
rcr
fsubr
cmp
addb
cs
std
adc
pop
out
xchg
ret
jmp
mov
mov
out
rolb
lods
div
xor
dec
call
dec
incb
mov
dec
xchg
lcall
sbb
lcall
push
dec
jne
mov
ljmp
sahf
lea
pop
and
adc
fadd
sbb
push
pop
lcall
lea
xchg
sub
scas
pop
int
sub
push
mov
inc
xchg
lret
and
incl
sbb
jne
dec
mov
xchg
pusha
mov
lea
lret
push
pop
ret
lcall
arpl
movsb
cmp
sbb
jmp
xchg
arpl
imul
and
inc
jge
cltd
pusha
daa
jle
push
sahf
stos
cmpsl
stos
mov
xchg
shll
fwait
scas
sub
inc
cmpsb
test
dec
aas
cmp
aaa
aad
or
test
lret
adc
mov
inc
push
mov
sbb
and
lcall
jl
sahf
sbb
or
xchg
pushf
xor
or
pushf
pop
push
xchg
and
insl
pushw
in
mov
lea
rcrb
pop
das
test
xor
xor
cmp
std
jg
loop
imul
lds
mov
aam
aad
mov
test
or
pushf
data16
xchg
rcrl
js
dec
sahf
adc
aad
fwait
js
mov
pop
jnp
cli
sub
xchg
in
cmpsb
pop
xchg
orl
xchg
and
sti
sbb
jnp
cld
divb
mov
push
push
popf
cmp
mov
mov
jbe
jbe
aas
pushf
pop
lock
push
push
xor
pop
pop
fimuls
lahf
dec
adcb
rol
testb
andl
aas
xchg
mov
or
or
pop
mov
popl
lea
jp
dec
inc
jecxz
or
adc
adc
lea
lcall
out
cmp
push
adc
xchg
into
sub
inc
push
insb
jnp
fldl
movsl
pop
mov
fnstsw
mov
sbb
adc
insb
jmp
jne
push
pop
fwait
test
icebp
or
and
sti
jne
fwait
mov
pop
push
adc
push
int
leave
sti
sbb
sbbb
fsubr
xchg
add
or
sti
fwait
sbb
dec
dec
jl
sub
mov
mov
outsb
pop
dec
xchg
and
stc
xchg
in
xorl
jmp
lds
sbb
inc
xchg
sub
out
nop
xchg
data16
fcmovb
std
dec
cmp
movsl
jno
icebp
push
xchg
adc
sahf
hlt
insl
xchg
adc
cs
xchg
insb
adc
mov
movsl
popl
shlb
ljmp
adc
mov
lock
loopne
imul
sahf
lcall
bswap
and
mov
xchg
adc
lods
fistpl
stos
sahf
stc
push
jno
lahf
mov
adc
enter
dec
cmp
xchg
test
mov
mov
and
movb
push
dec
mov
loop
dec
mov
mov
adc
dec
sub
pusha
enter
mov
leave
clc
lret
xchg
aaa
ja
jg
dec
int3
cs
sub
mov
daa
xchg
jecxz
or
dec
outsl
push
jns
pop
call
xchg
xchg
out
repnz
add
or
adc
iret
call
xchg
fwait
push
mull
cmp
and
subb
pop
movsl
out
or
xchg
adc
pop
xrelease
xor
inc
idivl
out
sti
bound
fidivrs
lahf
mov
loop
push
xchg
add
or
sbb
sahf
and
popa
sarl
das
mov
roll
movsb
aaa
push
scas
mov
loop
push
jle
inc
jle
or
cmp
push
incb
mov
xchg
ret
adc
sahf
add
or
xor
mov
stos
xchg
movsb
mov
rol
out
push
pop
sbb
xchg
inc
dec
jnp
rcrl
gs
mov
mov
sub
pop
loopne
push
cmp
mov
jne
leave
mov
adc
add
cmp
lods
or
xchg
stc
xrelease
sti
push
jmp
mov
stos
sahf
dec
mov
push
mov
mov
add
jg
mov
or
mov
mov
cmpsb
jl
xchg
call
sub
jp
mov
ficoms
adc
cmp
push
and
pop
shll
xchg
xchg
mov
outsl
xor
push
dec
movsl
mov
xchg
icebp
push
test
leave
insb
jle
mov
mov
aaa
gs
mov
xor
mov
sub
lcall
out
test
es
enter
mov
ss
lock
hlt
pop
sub
mov
add
bound
inc
and
imul
lcall
jnp
cltd
dec
push
outsb
faddl
cmp
sub
adc
cmp
or
mov
pop
lods
xchg
ficompl
cwtl
js
sbb
jns
repnz
mov
sbb
data16
popf
in
sbb
sub
cmp
pushf
jnp
nop
stc
dec
bound
imul
add
ficompl
xchg
dec
inc
jbe
mov
fisubrl
inc
jmp
repnz
cli
push
lods
les
jb
subb
jae
fsubrl
xchg
jle
cmp
movsb
out
clc
mov
cli
xcrypt-ecb
cmpsl
or
aaa
jg
pop
cmp
andl
mov
mov
fdivs
lods
test
scas
outsb
fsts
scas
push
xor
sub
dec
cmpl
lods
lcall
xorb
js
jno
repz
xor
jne
es
sbb
add
sub
fdivr
stos
jmp
cmc
mov
xchg
or
mov
xchg
int
jl
insb
lcall
mov
pop
fidivrl
push
fistpll
and
repz
mov
jecxz
out
xchg
mov
ja
push
jle
dec
inc
mov
pop
jle
stos
aam
jbe
lods
mov
hlt
xor
jg
mov
rcll
outsl
ljmp
jnp
xchg
testl
add
inc
xor
mov
xor
cmc
fsubp
dec
adc
aam
sbb
lcall
fistl
and
mov
stos
fldl
push
pop
movsl
cmp
push
push
push
dec
sahf
test
inc
mov
rolb
pusha
lahf
push
xchg
adc
mov
aas
xlat
jnp
mov
ss
lock
leave
xchg
scas
jne
xlat
and
sbb
xor
push
and
stc
scas
fidivl
fldcw
int
cwtl
dec
loopne
dec
adc
add
mov
jns
pop
loope
xchg
ret
and
push
add
inc
iret
jge
xchg
inc
sub
fstl
pop
pusha
mov
cmp
pop
lcall
imul
inc
xchg
jnp
outsb
out
cmp
cmpsb
call
insb
fildl
xchg
stc
pop
jl
mov
jne
lds
adc
mov
sbb
in
mov
push
jecxz
imul
in
sub
cmpsb
ss
dec
ficoml
cmc
mov
sbb
movsl
in
adc
andb
sahf
dec
clc
mov
ret
test
lret
aaa
ret
mov
or
aaa
sahf
lods
jbe
ja
inc
mov
mov
cwtl
sbb
adc
jb
jbe
mov
add
fldl
cmp
fldenv
js
pop
jecxz,pt
lcall
mov
adc
jecxz
pushf
or
popfw
inc
push
mov
dec
mov
pmuludq
mov
xorl
dec
popf
test
jne
ss
sbb
negl
mov
push
xchg
andb
ficompl
mulb
sbb
loope
repz
cmpsl
pop
pop
inc
xchg
xchg
dec
pop
jg
enter
lcall
ljmp
sahf
push
insb
sbb
xchg
xchg
push
movsl
mov
jne
add
xchg
inc
adc
scas
fs
mov
mov
out
sahf
adc
dec
mov
pop
mov
adc
out
jb
fldl
sub
or
jp
pop
repz
mov
sbb
adc
add
dec
or
lea
stos
cmc
nop
stc
cmpsb
movsb
xchg
out
jmp
lods
sbb
cmp
jns
daa
call
lea
icebp
mov
mov
jmp
inc
xchg
pop
cmpsb
stc
xchg
adc
xchg
int3
leave
scas
scas
inc
xor
push
enter
xchg
pop
cmc
mov
xor
addr16
cmpsb
sahf
jp
mov
aad
data16
jo
jl
push
addb
add
mov
jle
xchg
fs
and
inc
push
pop
cmpsb
dec
xor
sahf
sub
sahf
pop
push
inc
pop
jg
js
ds
or
jnp
sub
cmpl
stos
popf
in
lcall
push
scas
ja
fstpl
jg
pop
add
pop
divb
ja
mov
subl
mov
jne
shll
imul
mov
in
icebp
adc
push
jno
mov
sarb
cwtl
pop
push
push
rcrl
js
mov
cmp
xor
push
ret
lretw
cld
dec
push
jb
xchg
ret
andb
add
jb
lds
push
fwait
scas
mov
mov
orl
inc
ficompl
lret
lcall
cmovp
ds
das
jecxz
jg
lahf
cmc
mov
js
cli
push
lahf
add
outsl
or
out
pop
sahf
lea
push
jns
mov
scas
inc
addr16
ret
outsb
lods
cmc
stos
cmp
adc
jl
lea
mov
and
stc
push
xchg
adc
dec
mov
xchg
leave
jle
sarl
push
dec
xchg
mov
inc
xchg
push
xchg
cmpb
xchg
cwtl
mov
jge
pop
lahf
xchg
sti
loopne
fnsave
jp
pop
and
push
cli
xchg
out
and
in
xchg
ja
cmp
mov
xchg
cmp
xor
push
fs
lods
cmp
jmp
and
push
shlb
lods
in
loope
jl
add
xchg
outsl
aad
insl
xor
mov
sub
mov
sbb
and
xchg
fistpl
push
xchg
add
mov
sub
arpl
sbb
adc
out
negl
xchg
mov
bound
lret
fs
and
into
jae
imul
and
cmc
cwtl
mov
popa
sbb
andl
cmp
and
popf
sbb
mov
aas
add
mov
out
sub
xchg
cmp
sub
and
mov
test
aaa
adcb
xchg
jp
inc
daa
ja
xchg
push
xor
lcall
sahf
add
lret
dec
xchg
jbe
jmp
out
gs
repnz
push
jmp
mov
mov
mov
mov
rol
pop
mov
test
cmp
pop
mov
xchg
or
lcall
sbb
cmp
mov
xchg
jo
mov
xor
filds
dec
mov
jg
arpl
xlat
shlb
repz
dec
or
and
lods
fs
icebp
movsb
sbb
xchg
cmp
in
push
cmp
dec
popf
and
arpl
inc
jecxz
and
daa
repnz
cmp
xchg
stos
cwtl
imul
mov
xchg
clc
ljmp
nopl
gs
fisubl
jge
call
das
aad
pop
xchg
cmpb
inc
sahf
adc
ds
sahf
int
repz
and
neg
data16
je
add
add
xchg
mull
or
test
fists
xor
xchg
mov
jg
xchg
xchg
push
stos
repnz
daa
jmp
sbb
or
fsubl
add
int
lcall
cmc
add
mov
mov
jno
and
into
incb
out
mov
ss
addr16
imul
lret
js
lea
jl
xchg
insb
mov
shll
push
push
jl
loopne
bound
pop
jne
cwtl
sub
mov
addr16
movsl
cmp
pushf
fmull
hlt
and
mov
or
in
jmp
or
mov
cld
aaa
sahf
add
xorb
cmp
add
mov
fwait
packsswb
adc
or
test
jge
push
xchg
js
aad
insl
sbb
sti
add
cltd
outsl
xchg
repnz
cmc
or
loopne
xchg
lcall
es
jb
cmp
xchg
lcall
sub
lahf
xchg
stos
pusha
mov
mov
inc
xchg
push
sbb
mov
scas
xchg
pushw
jle
jne
movsb
pop
sbb
cmp
xchg
dec
ss
xlat
test
or
push
mov
cwtl
sahf
mov
push
push
imul
js
push
sahf
cwtl
lods
enter
sub
push
mov
shlb
jno
inc
pop
add
jecxz
out
xchg
popl
sbb
jbe
xchg
pop
shlb
mov
dec
icebp
jge
lds
int
push
js
xor
cld
fdivr
or
add
pusha
lea
test
movsl
and
mov
in
pop
or
hlt
inc
xchg
xchg
ss
sbb
cmp
lcall
push
aad
ss
shll
in
lret
pop
inc
xchg
cmp
cwtl
ja
cmp
fstps
repz
inc
inc
push
sbb
mov
xchg
loope
in
xor
xchg
sahf
xchg
sbb
enter
xchg
imull
pop
gs
xchg
outsl
dec
movsb
xchg
inc
outsb
in
pushf
pop
lret
sub
sub
lds
push
test
sbb
std
fistl
test
xchg
mov
fldcw
lods
int
stos
std
cmp
jo
sbb
pop
dec
rcll
cmp
mov
sub
jnp
cmp
mov
dec
fstp
sbb
xchg
inc
mov
xchg
gs
jno
jo
leave
push
pop
stos
xchg
or
xchg
leave
sahf
shlb
or
pop
mul
sti
xor
das
adcl
pop
ds
xor
loop
mov
pusha
dec
or
mov
in
mov
mov
mov
imul
inc
out
iret
addr16
xor
loop
shrl
pop
xor
lds
or
and
add
clc
push
jns
rcl
sarb
test
dec
or
loope
mov
inc
lahf
loopne
xchg
divl
sbb
push
mov
mov
push
lcall
xchg
dec
into
jae
sbbb
movl
xchg
inc
shll
inc
mov
adc
xchg
xlat
xor
push
inc
int
dec
fmuls
mov
sbb
add
popf
jb
cld
adc
xlat
mov
xchg
jns
mov
jle
push
test
jmp
outsb
sbb
popa
fwait
lahf
xchg
push
imul
out
popf
out
xchg
movb
fldcw
cwtl
pushf
rdpmc
mov
mov
sti
push
sbb
movsb
mov
loope
mov
mov
cmp
mov
gs
or
xor
jle
mov
inc
xchg
mov
ret
js
fists
xor
pop
out
xchg
jne
and
xchg
mov
adc
pop
sahf
fstpt
sub
xchg
dec
dec
int
pop
stos
xchg
ss
xchg
ja
jmp
shlb
mov
xchg
pushw
pushaw
pop
ds
sub
inc
xchg
mov
xor
adc
fidivl
shll
xchg
pop
mov
loop
mov
aaa
cmp
lods
push
cmp
sbb
and
add
loopne
fdivs
lahf
stc
stos
xor
mov
xchg
cwtl
pop
shr
insl
xorb
pusha
leave
popf
xor
sbb
lahf
push
ret
pusha
sbb
mov
data16
lods
xchg
jo
aaa
jns
mov
jmp
test
outsb
mov
xchg
xor
dec
je
das
scas
jbe
mov
or
jne
dec
out
sbb
jg
add
sahf
inc
and
shl
pop
sahf
popf
scas
xchg
aam
xchg
xor
xchg
fdiv
lock
sahf
test
leave
ja
pop
and
pop
fmull
imul
xchg
lods
sub
xchg
xchg
sub
cmp
sub
pop
push
or
movsl
in
sbb
lcall
repnz
sahf
scas
mov
add
into
ljmp
in
xchg
mov
xor
idivl
sub
push
xchg
push
mov
dec
xchg
dec
sbb
mov
inc
push
gs
movl
xchg
aas
push
pushf
inc
pop
test
cmp
insb
int
roll
push
mov
popa
xchg
pop
imul
stc
or
and
dec
inc
enter
jnp
adc
sbb
fstps
push
xchg
les
outsl
in
sbb
movsl
push
push
out
xchg
xchg
dec
xchg
imul
stos
mov
fucomp
sub
mov
jne
aam
adc
clc
popa
imul
cmpsl
smsw
ret
ror
ret
test
das
popa
stos
mov
add
push
dec
xchg
and
stos
mov
sub
xchg
sbb
sti
mov
mov
js
adc
push
cwtl
xchg
scas
out
das
jae
push
outsb
sub
xor
addr16
enter
xor
jp
data16
lods
add
hlt
sarb
lahf
cmpsb
pop
icebp
in
popf
in
mov
sub
fdivs
stc
adc
xchg
sbb
mov
dec
test
pop
into
xchg
in
bound
pop
jmp
jne
fidivrl
jle
xor
and
stos
mov
xchg
xlat
push
mov
or
cli
jmp
sbb
stos
dec
int
xchg
pop
scas
mov
xor
jno
imul
lcall
repz
test
fiadds
loop
mov
mov
push
int
out
rolb
mov
cmp
adc
mov
push
sbb
mov
cmp
cmp
cmp
push
bound
cmp
fwait
inc
ret
xchg
sub
mov
cwtl
orb
fnsave
cmp
inc
xchg
ret
dec
js
mov
cmpsb
dec
repz
cmc
xor
aam
sub
sahf
cld
and
or
push
test
nop
push
pop
add
adc
xor
add
mov
inc
add
jge
sbb
les
push
xchg
popf
xchg
jb
popa
mov
xor
aad
jmp
ja
sub
jle
add
loopne
loop
mov
xchg
mov
jp
cmp
xchg
addb
subb
sub
adc
cli
mov
xchg
push
lcall
lret
decb
popf
ret
in
loop
or
mov
inc
aas
xchg
cmp
stos
cmc
ja
dec
addr16
xchg
data16
mov
fwait
xor
xlat
sbb
sbbb
popl
roll
movsl
xchg
or
cmpb
mov
ss
mov
int3
ljmp
loop
xchg
inc
imul
xchg
cmp
fdivr
les
shl
mov
pop
pop
push
lds
mov
subl
call
push
movsl
dec
inc
shrl
fisttpll
add
sbb
sti
and
jecxz
adc
ss
in
insl
movsb
outsl
xchg
jbe
adc
std
in
dec
aad
scas
lahf
dec
xchg
nop
out
sbb
jmp
xor
cltd
xorb
xchg
test
mov
icebp
fiaddl
pop
adc
or
xor
push
fistps
mov
repnz
pop
mov
push
jecxz
aas
fwait
dec
stc
and
movsl
les
movups
or
ficoms
or
xchg
sbb
cltd
insb
shl
mov
mov
mov
ds
cli
sahf
rcll
ret
fisubrl
shll
hlt
push
jno
sub
jge
jbe
xchg
or
dec
cltd
clc
jns
pop
cmp
hlt
or
push
enter
sahf
fisubrs
sub
dec
xor
pop
das
xchg
out
push
lock
mov
ret
and
lret
enter
push
clc
iret
sbb
xor
xchg
and
aaa
xlat
jbe
jbe
push
lea
inc
xchg
ja
js
mov
dec
jbe
or
mov
add
dec
sbb
xchg
inc
out
hlt
lcall
inc
and
roll
jns
cwtl
and
mov
push
mov
shlb
dec
xchg
ret
insl
inc
flds
std
mov
push
adc
sahf
hlt
sub
push
ret
sahf
sti
xor
lods
lods
adcb
negb
push
ficomps
mov
push
xor
stos
xor
xor
fcom
cwtl
cmp
sahf
in
clc
inc
scas
xchg
aas
arpl
std
or
outsl
jbe
shrl
jb
and
mov
dec
lahf
mov
push
ds
fadds
push
xor
inc
mov
insl
jno
mov
jae
movsl
pop
adc
clc
test
add
mov
push
sub
in
and
mov
rep
jo
sub
jns
faddp
xlat
in
inc
dec
lahf
ljmp
push
movsl
cmpl
rcrb
add
sub
mov
imul
neg
lcall
fisttpll
or
int3
out
shlb
pushf
push
into
sahf
stos
push
xchg
sbb
jp
mov
dec
aaa
es
mov
mov
fnsave
ds
xchg
sub
fcomps
jno
xchg
mov
loop
sub
rcll
lods
inc
daa
leave
mov
xchg
and
sbb
lock
cltd
cmpsl
xchg
gs
mov
sar
xor
xchg
fxam
and
fwait
jmp
hlt
movsb
push
sub
add
mov
in
push
push
inc
inc
inc
pop
mov
mov
pop
fcmovb
ljmp
adc
pop
mov
mov
scas
dec
xchg
mov
jne
call
dec
stos
les
adcb
xchg
pop
mov
xchg
ret
add
pusha
jp
cli
push
dec
sub
jl
cmp
shlb
subl
mov
mov
adc
negb
fildl
jo
jno
xchg
stc
lret
mov
cld
xchg
ljmp
addr16
in
add
popa
push
sub
fmull
mulb
sbb
movsl
insb
mov
adc
popf
mov
in
in
std
or
add
pop
jns
fsubs
mov
mov
adc
leave
xor
outsb
sbb
adc
and
jmp
inc
test
and
push
push
dec
aam
test
sub
pop
out
movsl
lods
adc
pop
sbb
dec
fiaddl
cmp
or
pop
fucomip
mov
jbe
je
popf
jb
or
aam
xchg
mov
cmp
repz
push
mov
out
rcll
xchg
testb
sbb
test
cmp
xchg
xor
sbb
scas
jle
fnsave
sahf
faddl
cmp
inc
das
xchg
sbb
sahf
into
pushf
lcall
lods
pop
cli
decb
xchg
psubsb
arpl
mov
pushf
sbbb
add
das
mov
and
push
or
jg
gs
adc
or
xchg
mov
sar
repnz
xchg
xor
into
mov
shl
pop
xchg
add
xchg
es
out
ljmp
sub
sahf
inc
arpl
sub
xchg
xor
ret
mov
stc
jmp
out
lret
push
movsb
xchg
gs
push
or
data16
pop
imul
data16
mov
add
clc
lcall
testl
add
shrl
add
xchg
cmp
test
fwait
adc
pmaddwd
in
pop
jne
jno
sahf
push
dec
mov
adc
rcrb
xchg
fs
dec
sahf
in
les
fildl
pop
inc
outsb
arpl
sbb
mov
xchg
adc
outsl
lods
xchg
std
test
call
icebp
fadds
mov
xchg
ret
cli
inc
popa
xor
adc
loope
cs
xchg
add
add
mulb
out
sub
pop
xchg
les
sbb
push
lcall
xchg
lock
pop
or
insl
in
movsb
add
cmp
xchg
push
aas
lret
sbb
arpl
adc
jl
cld
inc
add
mov
out
stos
mulb
xor
adc
dec
mov
imulb
out
cmp
push
roll
xchg
mov
mov
add
outsb
insb
test
mov
push
js
or
test
imul
xchg
sarb
das
icebp
sbb
sarl
sub
mov
adc
daa
loope
xchg
pusha
xchg
test
ljmp
pop
jecxz
mov
xchg
xchg
ljmp
and
lock
adc
jb
sbb
or
inc
cmpsb
int3
das
and
jns
out
pop
xchg
pop
nop
bound
fstpl
xchg
sub
cs
int
dec
ds
stc
xchg
xor
sahf
inc
sbb
xchg
pusha
inc
sbb
jge
or
bound
xchg
shll
lret
je
mov
data16
cmpsb
std
jmp
lret
sarl
lea
outsl
mov
ds
sbb
jb
fists
data16
testl
shll
xchg
leave
pop
xchg
shlb
sbb
lea
and
cmp
and
mov
rcrb
pop
movsb
mov
adc
int3
imul
adc
xchg
movsb
insl
fnstcw
rcr
cmpsb
push
and
cmp
and
dec
movsb
and
or
js
sldt
jle
jl
xchg
shlb
inc
adc
dec
je
std
fs
je
push
cli
mov
xchg
inc
pop
xchg
jae
cli
sub
push
sarl
hlt
xchg
fs
mov
xchg
inc
mov
fwait
sahf
jge
std
and
cmp
push
js
xchg
addl
xchg
sub
sub
mov
rorl
ret
or
cwtl
xchg
mov
add
pop
pop
xor
bound
sub
pushf
out
push
xchg
into
push
push
add
hlt
ja
sub
push
mov
out
xchg
ret
cld
ss
pusha
dec
test
mov
cwtl
or
dec
xor
xchg
scas
ja
cmc
mov
mov
and
out
jo
fcmovb
decb
dec
mov
mov
lea
cmpsl
mov
test
cmpsb
movsb
xchg
sti
sahf
dec
lds
adc
int
xchg
lahf
ljmp
or
jnp
cli
out
xchg
popf
loop
sub
sahf
sbb
inc
xchg
jbe
ss
pop
push
sub
loop
push
xor
jp
cmc
lcall
adc
mov
subb
data16
les
leave
dec
xchg
popl
inc
cmc
push
test
or
add
mov
jno
addb
sub
xchg
push
mov
or
cmp
mov
cli
lcall
test
jbe
out
push
push
dec
or
out
sub
and
pop
add
ss
inc
xorl
leave
pushf
sub
xchg
jecxz
pop
xchg
push
mov
inc
pop
xchg
loop
int3
clc
jnp
mov
xchg
cmc
mov
or
xlat
pop
inc
int3
adcl
jnp
fsubrl
xchg
mov
mov
mov
out
mov
jns,pt
clc
push
cmpsb
mov
pmulhw
dec
arpl
xor
test
ljmp
inc
jl
ret
dec
adc
add
add
fistpl
hlt
out
dec
les
stc
and
inc
test
mov
xchg
mov
orb
xchg
cltd
mov
pop
mov
jle
data16
jnp
mov
fnstenv
popf
jecxz
sub
mov
xchg
xchg
in
inc
xchg
mov
ja
add
inc
gs
pop
sbb
ret
xchg
loop
xchg
xchg
ret
scas
into
and
movsl
imul
cmp
xchg
shrb
sub
xchg
lret
mov
mov
stos
movsl
out
pushf
hlt
popa
mov
sub
or
cli
cmc
mov
imul
push
inc
insl
and
jg
movsb
scas
hlt
mov
xor
into
lods
lods
shll
aas
and
mov
scas
cwtl
jmp
cmpsl
add
mov
sbb
lret
das
sets
xor
fsubl
dec
mov
pop
inc
loop
jle
call
popf
insl
lock
xchg
mull
loope
icebp
and
dec
xor
sahf
push
subb
xchg
jne
cmpl
xlat
adc
inc
xchg
push
outsl
cli
add
sbb
mov
mov
fadd
and
mov
xor
lret
add
sbb
add
mov
xchg
out
mov
cmc
cmp
dec
dec
test
jecxz
stc
je
xchg
sti
push
xchg
das
loop
mov
mov
cmp
mov
dec
xchg
push
in
mov
out
iret
roll
xor
add
sbb
cmp
sti
push
test
mov
mov
repz
jbe
ss
pop
jg
cmpsl
shl
shll
xchg
scas
mov
pop
xchg
push
add
lret
mov
push
dec
sbb
lahf
xchg
pop
scas
fsubrp
mov
push
pop
subb
insl
adc
lcall
xor
pop
sub
jmp
data16
in
cmp
imul
jbe
xchg
adc
stos
and
push
dec
push
fcmovb
imul
dec
loopne
mov
pop
loope
mov
out
push
xchg
data16
push
cmp
xor
sub
arpl
fwait
xchg
mov
stc
sub
pusha
movsl
fisubs
sub
out
add
sbb
xchg
jl
cmc
in
movsl
notl
push
lcall
push
adc
xchg
cmpsl
xchg
or
sub
xchg
jecxz
out
jmp
sbb
add
cmpsl
clc
mov
aas
adcb
in
les
lret
jne
cwtl
nop
addr16
pop
sbb
jg
stos
jmp
pop
xchg
dec
repnz
fsts
sbb
lcall
jmp
clc
addb
cwtl
or
sub
ret
jbe
pop
or
rorl
or
loop
mov
arpl
mov
test
and
jno
cmc
fwait
popl
jecxz
popf
push
repz
daa
xchg
testl
sbb
sbb
xchg
ds
daa
mov
ljmp
inc
pop
sub
add
or
mov
mov
aaa
loope
aas
test
ds
es
push
pop
cmp
enter
out
outsl
mov
mov
stos
cmp
cwtl
int3
mov
popf
aad
dec
ljmp
push
jb
lds
xchg
in
mov
xchg
mov
hlt
sub
xchg
sub
ja
mov
xchg
jmp
iret
fidivrs
xchg
xchg
movsl
scas
xchg
mov
lcall
scas
jbe
fisttpl
outsb
int3
pop
clc
push
insb
xchg
in
cs
pop
inc
call
movsl
data16
lret
lods
mov
adc
sub
addl
xchg
loope,pt
gs
mov
xchg
and
xchg
pusha
or
inc
pop
daa
add
lcall
xchg
adc
jbe
imul
xchg
out
jp
cmpsb
test
sbb
dec
test
push
mov
jno
jecxz
mov
mov
ret
sahf
jns
fwait
rcl
pop
xchg
push
adc
mov
cld
out
stos
dec
lea
or
sbb
add
sbb
cmpsb
dec
push
adc
adcb
sti
loope
out
inc
pop
xor
mov
mov
mov
pop
aam
lret
and
movsb
adc
jb
pop
arpl
mov
cld
mov
xchg
xchg
aas
rclb
jmp
stos
push
lods
sahf
inc
rcr
or
pop
pop
addr16
jbe
pop
int
sbb
or
repnz
insb
jp
mov
dec
mov
adc
popf
fsubr
daa
push
dec
in
lret
aaa
add
or
icebp
jbe
addr16
fcmovnbe
testb
out
ror
bound
sbb
and
dec
aas
addl
idiv
xchg
push
stos
push
faddl
shlb
jle
enter
scas
jne
outsb
mov
hlt
xchg
mov
xlat
sbb
fwait
sbb
scas
adc
xchg
test
dec
and
push
arpl
lods
jae
xor
ja
adc
pop
add
ss
shll
and
mov
cld
inc
imul
push
sahf
inc
rcrl
mov
ss
fistpll
rcl
jbe
cmp
inc
mov
es
xchg
and
fldl
jne
test
xchg
jge
xchg
adc
movsb
jbe
out
arpl
xchg
jg
sub
mov
jmp
jge
pop
inc
xchg
xchg
pop
stos
faddl
and
jbe
pop
xchg
in
orl
test
jo
or
sahf
xchg
out
mov
roll
je
arpl
fs
cs
inc
scas
test
jae
test
jbe
fisubl
jns
xchg
pop
push
repz
sub
xchg
imul
cmc
int
xchg
daa
add
xchg
mov
arpl
incb
and
int3
andb
xchg
int
lcall
lods
push
insl
or
rcr
xorb
inc
pop
lahf
sar
rorb
push
dec
sahf
out
xchg
push
xchg
pop
and
sbbb
fsubl
jae
leave
ret
dec
dec
xchg
sbb
cmp
pop
sbb
loope
inc
mov
pop
or
mov
push
sahf
lea
mov
ja
cltd
lods
in
xor
fsubl
insw
sub
pop
adcb
fs
cli
xchg
pop
mov
fbld
fistpl
lret
push
xchg
or
or
mov
dec
mov
sub
xchg
lahf
cli
xor
jbe
stc
std
lea
pushf
cwtl
jo
inc
xchg
addb
or
fldl
push
pop
repnz
mov
ss
xchg
mov
imul
je
pop
and
mov
data16
and
gs
mov
pop
xchg
push
stos
mov
out
and
out
xchg
add
dec
mov
frstor
mov
or
pushf
pop
jge
xchg
jle
fisttpll
imul
and
xchg
inc
cwtl
testb
lahf
rclb
push
xor
orb
out
jae
sbb
int
jp
xor
xchg
xorb
call
inc
xchg
mov
ret
ss
movsb
mov
jns
mov
and
xlat
add
xchg
add
ret
inc
mov
sub
cli
or
mov
cwtl
or
test
sahf
les
mov
and
or
push
xchg
pop
mov
or
adc
in
xchg
xor
pop
add
out
sti
dec
addb
popf
or
in
jmp
lcall
xchg
push
jnp
lods
inc
xchg
addb
rcl
jns
cltd
inc
sahf
roll
xor
shlb
test
push
jb
sahf
push
dec
daa
fs
pushf
sub
lcall
out
add
ret
adc
cmpsl
lock
add
fs
jecxz
out
sahf
xor
sub
jp
sti
inc
rclb
fwait
or
xchg
subl
sub
push
mov
stos
outsl
in
mov
test
subl
imul
std
les
jecxz
notb
mov
gs
xchg
push
movsl
popf
mov
xchg
je
xchg
push
jp
mov
mov
pop
dec
scas
xchg
insl
lret
imul
push
fdivrl
pushl
loopne
ror
in
addl
pop
insl
jae
sarl
xchg
jecxz
or
bound
cld
cmp
inc
testl
ret
dec
and
xchg
xchg
scas
ret
xor
outsl
dec
mov
lock
xlat
xchg
add
ss
push
mov
mov
xchg
nop
xorl
out
test
mov
out
outsl
das
xchg
orl
adc
ds
sbb
cwtl
andb
mov
or
add
push
dec
je
inc
or
pop
mov
mull
xchg
mov
mov
test
xchg
shll
xor
test
fnsave
mov
mov
jp
mov
outsb
add
jge
popa
mov
das
ss
movsl
mov
pop
sub
pop
pop
sbb
addr16
subb
xor
inc
enter
cmp
xchg
push
dec
mov
mov
xor
sbb
into
push
data16
rcrl
mov
dec
mov
inc
push
jecxz
test
loop
out
daa
fildl
xchg
rcll
dec
cmpsb
push
pop
cmc
mov
xor
inc
pushf
push
jne
in
data16
insl
dec
and
insb
pop
ffreep
loop
stos
negl
imul
cmp
mov
sar
ret
mov
jns
in
inc
in
aas
sub
sahf
inc
lahf
xchg
movsb
jnp
cmp
mov
mov
call
dec
lods
lds
inc
push
xchg
cmp
push
aas
ss
je
dec
mov
fildl
pushf
sbb
sarb
pop
lcall
inc
and
xchg
fidivs
mov
dec
xor
jne
es
ret
das
adcb
rol
ficoml
lcall
aam
iret
lock
pop
jae
xchg
rolb
push
sub
fsubs
jp
and
arpl
dec
jne
test
xchg
add
push
lods
push
push
cmpsb
sbb
fsubrs
mov
fwait
push
mov
jmp
xor
push
fadds
xchg
out
rol
jmp
xchg
fidivl
test
lds
arpl
xchg
jb
jo
mov
jae
xchg
xor
cmp
aaa
das
outsl
or
dec
fstl
sub
mov
cmp
adc
data16
jle
mov
and
popf
outsl
xchg
mov
mov
into
cmp
push
pop
insb
mov
rclb
adc
movsl
mov
pusha
mov
mov
pop
mov
stos
scas
mov
movsl
cs
test
pop
outsb
ja
std
out
add
sahf
sbb
flds
jb
xchg
lds
pop
sbb
scas
dec
xchg
popf
sbb
es
mov
out
jmp
lahf
xor
jo
xchg
xor
andb
rolb
fwait
loop
outsl
pop
xchg
cmc
sub
rolb
inc
in
cmpsb
in
sub
xor
sbb
xor
cltd
sub
pushf
scas
and
in
sbb
cmp
xchg
ljmp
jbe
lcall
cmp
cmc
aaa
xor
mov
push
sub
pusha
ja
xchg
cmovnp
and
or
sbb
sbb
mov
arpl
jmp
cmpsb
sbb
dec
xchg
enter
jnp
ja
inc
js
scas
cltd
xchg
lods
inc
fwait
mov
cmc
fsubs
into
and
sahf
add
int3
ja
mov
ljmp
sub
pop
jne
cwtl
sbb
jns
mov
or
sahf
ljmp
and
fisttpl
mov
out
inc
cmp
pop
sbb
enter
cmp
xchg
and
or
out
cltd
cmp
rol
mov
stos
iret
sahf
and
adc
stc
lret
scas
add
divb
push
outsb
and
out
sbb
xchg
jge
insb
pusha
test
test
mov
sbb
dec
sbbb
cltd
icebp
push
jge
mov
xchg
lret
insb
and
lods
pmuludq
add
xorb
loopne
push
gs
test
decb
xchg
xchg
push
lahf
pop
jnp
repnz
mov
push
enter
mov
ja
sbb
out
jl
mov
cmp
add
mov
fsubrs
fxch
and
fwait
xchg
into
movsl
ret
inc
rcll
loop
pop
stos
cmc
dec
sub
test
pushf
xchg
jp
into
jne
mov
movsb
fildl
fnstcw
inc
loopne
cmpsb
adcl
push
std
lahf
jnp
lahf
mov
rclb
dec
xchg
sbb
icebp
mov
mov
addl
xchg
xchg
je
inc
mov
mov
shlb
pop
cmpsb
sbb
mov
or
or
mov
aad
xchg
js
mov
inc
jo
xor
add
sahf
mov
daa
adc
sub
mov
jecxz
in
inc
aas
aaa
xchg
mov
ret
pop
lods
popf
pop
dec
mov
jbe
sub
adc
mov
jp
inc
xchg
mov
dec
divb
add
or
xchg
scas
dec
aas
jnp
add
add
dec
pop
push
ss
cltd
test
in
negb
ljmp
sbb
lods
xchg
mov
in
push
cmp
xchg
pop
mov
xchg
add
cmp
add
sub
xchg
lds
lea
push
dec
mov
mov
jg
sbb
repz
out
mov
jns
cmp
addb
pop
scas
xchg
aam
or
ljmp
and
sbb
daa
call
mov
into
cmp
cs
lahf
sbb
mov
cwtl
inc
cmp
in
shrb
jne
pop
adc
stos
xlat
pop
scas
in
xchg
fistpl
xchg
ret
inc
scas
add
push
insl
add
pop
push
cmpsl
xchg
and
jg
fisttps
dec
mov
mov
mov
jne
test
pop
loop
mov
aaa
pop
lret
jge
into
cmp
into
xor
sub
mov
cmp
xchg
ljmp
and
divl
mov
int3
ljmp
sbb
cmpsl
arpl
xchg
or
adcb
cmp
cltd
jne
dec
jge
xchg
daa
xor
imulb
lods
popl
xchg
sbb
lcall
and
mov
mov
in
mov
xchg
inc
cmpsl
out
mov
in
ds
fcmove
sbb
push
xchg
dec
dec
fucomi
les
push
cmpsl
lods
or
mov
clc
pop
inc
in
loope
mov
lods
push
sub
jns
test
cs
das
aas
mov
incl
addb
mov
clc
lods
movsb
and
mov
mulb
cmp
ljmp
push
repz
jbe
js
or
ret
enter
xchg
xor
pop
sub
lea
js
adc
mov
cmc
rcrb
icebp
clc
sub
fmull
testl
movsl
inc
adc
mov
add
mov
dec
cmp
out
pop
lret
das
test
jmp
test
xchg
mov
dec
mov
ss
adc
push
mov
pusha
jbe
and
mov
xchg
mov
sbb
cld
mov
dec
dec
test
mov
mov
fisubrl
push
roll
cwtl
int3
jle
out
jbe
jecxz
pop
pop
mov
icebp
inc
imul
sbb
insl
popf
xchg
mov
lea
rorb
mov
xchg
lea
nop
call
inc
in
cmp
adc
mov
mov
jbe
xchg
into
inc
pop
sub
test
shll
sub
pop
out
inc
inc
filds
mov
shrd
push
mov
orb
sbb
inc
add
cmp
scas
jp
cmp
minps
xor
cmp
insb
movsl
lret
and
dec
mov
stc
hlt
and
sbbb
add
imul
jbe
sahf
leave
push
xor
cmp
jp
lods
adc
insl
xchg
lds
outsb
aam
jo
cmpsl
data16
rorl
cmpsl
jo
ds
push
or
out
lret
sub
mov
mov
fs
es
lret
test
mov
jne
mov
aaa
subl
inc
cli
pop
outsb
loope
sub
add
lahf
add
push
cmp
add
data16
add
push
lock
push
call
insl
andps
out
and
push
cltd
mov
xchg
adc
pop
sub
lods
pop
dec
mov
adc
movb
enter
nop
scas
popf
xchg
push
xchg
cmp
mov
ror
xchg
ja
repnz
xchg
decl
sbb
testb
dec
xchg
sub
bndstx
or
xor
xchg
iret
jg
mov
add
dec
ljmp
test
rol
dec
out
push
loopne
ss
jnp
or
call
aaa
sub
cli
in
les
lcall
or
dec
jbe
cmp
out
jle
aad
jge
jg
scas
notb
stc
pop
push
xchg
xchg
test
cmpsl
fstps
neg
and
or
shlb
call
sub
data16
xchg
icebp
loopne
sub
sbb
jmp
inc
sahf
cmc
iret
div
sbb
or
cmpsb
daa
ret
mov
lcall
into
inc
xor
jp
fidivrs
es
cmpsb
testl
mov
inc
pop
rol
pusha
xchg
mov
loopne
xor
mull
scas
ljmp
sbb
icebp
push
loop
or
pop
int3
cmc
mov
test
xchg
jmp
cmpsl
push
mov
jp
xchg
and
add
lock
aaa
cmp
lret
leave
arpl
cmp
pop
inc
adc
xchg
mov
xor
popf
movsb
xchg
mov
push
inc
div
inc
xchg
nop
out
mov
ficompl
jmp
jle
xchg
lea
movsl
lcall
pop
xchg
add
push
mov
mov
sub
pusha
sub
dec
movsl
cli
cld
xchg
lcall
dec
sub
dec
outsl
test
mov
mov
add
lcall
or
pop
push
mov
lahf
fwait
loopne
insb
ss
pop
and
popf
mov
cmp
jbe
adc
dec
mov
loope
push
pop
xchg
and
shll
sahf
jns
or
push
cmp
pusha
push
push
dec
ljmp
push
xor
arpl
ficomps
shll
or
inc
mov
fsubs
xchg
and
mov
xor
sub
pop
ljmp
xchg
adc
rolb
adcl
addr16
outsb
adc
leave
sahf
jle
inc
dec
mov
cmp
shll
jle
dec
movsl
cmp
mov
test
shll
shr
or
in
xchg
or
mov
jge
mov
fbstp
fwait
cmpsb
sbb
pop
lcall
mov
aam
cld
mov
dec
cmpsl
mov
pop
or
fsubs
inc
int3
rclb
mov
add
mov
mov
stc
mulb
xchg
xlat
push
cmc
arpl
push
ret
repz
jecxz
add
cmc
sub
sub
lcall
lret
push
jbe
mov
sub
cwtl
xor
inc
mov
mov
jb
addl
xchg
popa
dec
adc
mov
movsb
or
xchg
aas
cmp
pop
dec
push
sbb
lcall
mov
addb
push
pusha
in
xchg
fidivrl
insb
add
ret
mov
cmp
stc
xchg
sbb
lahf
xchg
jge
scas
testl
sbb
outsb
sub
xchg
adc
cmpsb
jbe
clc
sub
out
sbb
sahf
cmp
pop
sti
jle
cmp
nop
xchg
bound
xorl
leave
xchg
es
xchg
lock
test
lahf
mov
xlat
clc
inc
lcall
xchg
fldl
insl
push
shrl
xchg
jne
add
sbb
fiadds
or
fcomps
add
and
pushf
movsl
cmpsl
lods
insb
daa
and
and
outsl
mov
rcrb
xchg
out
xor
mov
subl
sbb
jbe
mov
xor
xchg
stos
sbb
das
mov
adc
push
cmp
scas
rorb
data16
sbb
into
mov
aaa
mov
fwait
out
and
out
loopne
dec
out
dec
mov
xor
mov
scas
or
xchg
or
dec
adc
pop
js
lods
ja
xor
sbb
aam
cmp
dec
push
jl
out
push
shlb
mov
mov
inc
cmc
mov
push
jl
or
aaa
daa
movsl
das
dec
cmp
mov
push
out
xchg
mov
lock
into
subl
jg
leave
fdivs
mov
xchg
push
jno
ljmp
fbld
cmpsl
xchg
addr16
imul
leave
push
iret
sbb
idiv
mov
test
mov
popa
sub
lahf
cmpsb
ss
aam
loopne
hlt
scas
pushf
pop
mov
stos
mov
mov
cmpsb
add
les
loopne
push
push
roll
aaa
dec
xchg
mov
xlat
and
shrl
push
subb
xchg
aam
sbb
das
in
jmp
push
xchg
xchg
xchg
pop
mov
lock
fildll
loope
push
ret
push
inc
xchg
adc
aaa
repz
movsb
sub
inc
or
fwait
stc
push
orl
repnz
das
sahf
dec
ret
rclb
lret
jne
aad
xchg
or
jge
add
addl
xchg
shlb
jnp
test
or
jb
inc
inc
jbe
pop
js
mov
int
jbe,pn
fadds
loop
mov
add
xchg
sbb
or
stos
jo
and
shl
cmpsl
and
push
xor
fwait
clc
call
pop
cli
mov
sub
xchg
icebp
mov
outsl
aas
push
test
ja
shr
xor
bound
xchg
sub
push
xchg
lret
xchg
ret
inc
test
ss
fadds
daa
int
xchg
dec
in
adc
dec
int3
xchg
lret
mov
or
out
xchg
and
push
and
pop
and
fsubrl
cli
aad
rolb
xor
dec
incl
loopne
filds
xchg
cwtl
lret
adc
inc
test
or
xchg
daa
push
out
movsb
ja
mov
xchg
cld
inc
subb
jg
sbb
cmp
data16
mov
xorb
inc
push
cmp
adc
clc
aaa
or
xchg
cs
xchg
cmc
push
pop
sub
sahf
xchg
mov
jnp
or
fcom
mov
xchg
pop
or
mov
add
push
ret
xchg
sbb
xchg
lahf
cmc
lret
ljmp
test
and
xchg
fdivrl
clc
xchg
and
div
xorl
cmpl
les
xor
clc
sahf
cmpsb
ja
sbb
xchg
dec
imul
push
inc
jp
mov
mov
pop
jmp
inc
push
rolb
mov
push
adc
xchg
xchg
negb
stos
sub
out
xchg
movsb
mov
adc
jecxz
aad
leave
and
int3
or
jo
js
movsl
add
cmpl
cs
scas
test
mov
xor
mov
cli
mov
mov
loopne
adc
pop
loop
mov
mov
stos
sbb
dec
and
pushf
dec
inc
rolb
push
mov
andl
incb
cmc
push
mov
pop
das
xchg
push
loop
jo
and
repnz
sahf
fdivrl
mov
out
ret
into
int
mov
or
xchg
inc
movsb
ret
mov
out
data16
leave
push
test
sub
mov
repz
lcall
mov
fidivs
and
jecxz
cmp
bound
insl
scas
dec
or
aam
jb
adc
xchg
cmp
lahf
call
add
push
stc
xchg
push
mov
mov
int3
inc
lret
ja
mov
das
xchg
dec
popf
test
xor
cltd
xchg
sub
ja
mov
add
push
lea
cmp
test
adcb
xlat
fiadds
xchg
mov
pop
cmpsl
ror
xchg
xchg
clc
sub
push
adc
mov
xchg
mov
int3
fstl
xchg
mov
lea
ret
inc
mov
ret
mov
scas
xlat
and
sahf
sbbl
adc
div
add
out
mov
ds
lret
xchg
mov
in
nop
lcall
add
or
cmp
xchg
or
scas
add
pop
sti
xchg
movsl
lds
stos
xchg
xor
jecxz
mov
push
mov
hlt
sub
fwait
cld
and
inc
xchg
pop
inc
daa
mov
mov
xor
aaa
sub
ja
out
das
jb
mov
xchg
push
stos
mov
imul
and
js
movb
and
xchg
adc
add
inc
xchg
sub
push
pop
mov
les
mov
mov
ss
pop
lret
jmp
add
xchg
imul
inc
out
loope
pop
lcall
insb
cmpl
pop
pop
jbe
loopne
fnstenv
xchg
mov
jbe
or
aad
push
xor
aam
cmp
fwait
sbb
mov
lods
xchg
in
je
sbb
test
sub
mov
mov
mov
pop
out
sahf
xchg
addr16
lds
shlb
sbb
mov
je
cld
xchg
cmpsb
mov
notb
mov
cwtl
mov
int3
dec
das
enter
xchg
imul
cmpsl
pop
lcall
shr
and
dec
or
and
lret
adc
mov
jne
movsb
mov
out
xchg
and
cmc
sahf
daa
rcll
pop
cmp
pop
xor
mov
xlat
xchg
mov
mov
mov
lcall
fistl
xchg
jbe
mov
mov
xor
mov
fistl
sbb
popf
fcmovnu
lea
jb
inc
data16
pop
sbb
imul
add
mov
mov
mov
int
cmp
divb
cmpsl
xchg
push
add
or
dec
pusha
and
loope
pop
mov
int3
xchg
dec
mov
in
aam
mov
xor
je
imul
add
sbb
xchg
sbb
pop
aas
mov
ja
mov
das
xchg
outsb
xchg
xchg
inc
cmpsl
mov
xchg
loope
scas
push
xor
in
jl
loop
sub
bound
rcrl
inc
je
mov
pop
mov
sub
aaa
aam
shlb
mov
xchg
gs
mov
pop
clc
pop
xchg
xchg
add
mov
xchg
xor
mov
rcll
inc
xchg
and
or
ret
push
test
jle
jl
jl
or
loopne
repnz
sbb
mov
adc
mov
add
pop
mov
jb
rorb
mov
mov
push
jns
sarb
xor
jnp
or
cmp
xor
js
repnz
lods
ja
sbb
jg
xchg
aam
fcom
dec
les
jbe
or
jl
adcb
call
pop
iret
mov
dec
pushl
test
xchg
add
xchg
dec
ret
push
xchg
mov
lea
aas
jb
pushf
and
fistl
movsl
pop
mull
test
ds
test
ret
sbb
push
ret
mov
pop
arpl
push
nop
xchg
jecxz
cmc
and
std
fnsave
xchg
mov
rolb
mov
xor
incb
sbb
mov
ffreep
shrl
jp
mov
mov
outsb
mov
pop
cltd
xor
out
xchg
sbb
xchg
test
and
lock
pop
cltd
aam
test
lcall
mov
imul
jge
mov
fbstp
mov
add
push
jae
aas
movsb
shrb
lcall
xchg
pop
and
jno
movsb
mov
ja
lods
int
mov
scas
pop
jae
ljmp
cmp
mov
add
push
stc
jo
dec
sub
or
stos
xchg
fistpl
cmp
mov
mov
lcall
push
push
inc
pop
mov
pop
xchg
andl
inc
mov
ret
inc
daa
adc
lods
bound
mov
push
sbb
fcoml
mov
gs
fwait
and
into
xchg
cltd
add
adc
lret
ljmp
repz
popl
mov
orb
jg
loope
fildl
mov
xchg
jmp
sti
jg
les
sarl
cld
and
mov
xchg
int
movsb
dec
ljmp
mov
imul
push
in
bnd
lcall
int3
imul
and
sbbb
jbe
jae
xor
fldenv
dec
push
rcrb
cltd
nop
xorb
inc
aam
pop
bound
and
push
cmp
gs
inc
mov
les
and
mov
pop
fnstenv
push
dec
mov
clc
jbe
aam
out
push
fcomps
xchg
mov
jne
cmpsb
ds
fwait
mov
xchg
xchg
das
scas
mov
movsb
push
repnz
sbb
dec
mov
mov
xchg
hlt
and
mov
out
insb
jbe
jmp
sub
or
mov
xchg
iret
sub
in
push
push
xchg
ror
lcall
xchg
xchg
icebp
mov
cmp
stc
mov
repz
movb
xlat
pop
push
loope
xchg
insl
sub
movsb
mov
test
sarl
cmp
test
cmp
push
xchg
dec
incl
outsb
insb
or
adc
jge
xor
or
les
add
xor
movsb
mov
and
pop
popa
call
clc
in
fiadds
xchg
sarb
test
pop
repnz
ljmp
stc
push
push
hlt
test
lcall
xchg
adc
test
jbe
pop
adc
xchg
clc
xchg
sahf
mov
xlat
mov
jne
fwait
aad
out
aas
fmull
mov
or
cmp
ret
adc
xor
mov
inc
jno
lret
inc
cmp
adc
test
and
pop
xchg
jle
cmp
ds
sbb
push
or
lds
dec
push
mov
sbbl
cmp
and
xor
daa
loopne
int3
xchg
add
cmp
lds
sub
testb
sub
mov
xchg
adc
test
arpl
into
dec
ret
mov
repz
sub
cmp
insb
dec
cmp
xchg
in
push
cs
fmull
or
cmp
das
xchg
pop
or
fs
push
mov
jbe
mov
icebp
jmp
sbb
jbe
mov
bound
jae
sar
gs
scas
add
xchg
addr16
xchg
mov
jbe
inc
int
jnp
cli
mov
aas
add
pop
out
repz
adc
scas
mov
mov
add
jo
sti
jecxz
jp
jge
and
mov
pop
pop
popa
out
movsl
xor
imul
mov
stos
nop
ss
pop
hlt
fcmovnbe
test
and
xchg
out
std
and
int3
add
int3
sub
xchg
and
rol
xchg
mov
mov
leave
fldl
cmpsb
rol
ja
jp
inc
movsl
rcll
test
movsl
mov
xchg
into
mov
leave
roll
cmp
lcall
lcall
fidivrl
test
or
iret
sahf
or
popf
xlat
jecxz
rolb
xchg
jo
xor
jg
mov
popf
and
push
dec
jl
adc
lds
dec
xchg
pop
mov
or
imul
lea
sbb
pop
sub
pushf
xchg
push
xchg
push
push
pop
cmp
ret
sbb
stc
inc
cmp
or
or
xchg
push
mov
push
pop
xchg
dec
inc
xchg
sti
xor
leave
sub
sbb
in
repz
movsl
xor
cli
popf
mov
push
mov
jbe
xchg
mov
cmp
mov
loopne
jecxz
mov
mov
push
pop
xchg
popl
fwait
ds
or
stos
movsl
insb
mov
test
xor
cli
xchg
repz
movb
ljmp
pop
lock
xchg
sar
gs
sbb
adc
pop
lret
push
push
mov
jg
add
pop
xchg
scas
jbe
xchg
ja
fs
mulb
aad
ficoml
or
xchg
xchg
test
jno
sbb
int3
out
mov
inc
shll
sub
out
enter
mov
mov
mov
xchg
cmp
rcrb
pusha
mov
fbld
lods
shll
mov
out
cmp
lea
fs
xchg
xor
pop
ficompl
pop
push
mov
aas
pushf
pop
jnp
fisubs
ret
in
cmc
sub
fdivs
push
cmpsl
dec
movsl
add
cmpl
xchg
shl
inc
jl
jbe
repz
sbbl
rcl
and
dec
test
je
enter
dec
sub
fldcw
jmp
mov
lcall
sarb
xor
fwait
leave
xchg
test
sahf
es
ret
sbb
lock
xor
pop
mov
mov
das
xchg
les
lods
mov
cs
and
cmp
xchg
jge
mov
jmp
cmp
xchg
mov
cmp
aas
mov
ds
test
movsb
lods
roll
jne
int3
push
out
cld
mov
mov
xchg
nop
std
adc
and
xchg
mov
popa
testl
inc
cmc
or
adc
lret
out
fsubl
cmp
push
adc
sub
mov
inc
fwait
jmp
lcall
xchg
into
mov
or
mov
push
stc
jnp
mov
imul
test
lea
pop
mov
scas
popa
dec
gs
push
sub
test
dec
jne
out
push
mov
or
push
mov
dec
cmpsl
out
cmp
scas
mov
or
xchg
test
cmp
lret
iret
sbb
mov
lods
mov
or
loop
push
dec
stos
out
jbe
fwait
pusha
xchg
repz
lcall
insl
stos
mov
mov
sbb
lea
jg
push
inc
pop
pop
enter
jno
fstps
add
xchg
mov
clc
out
bound
and
mov
xchg
ja
lahf
cmc
sbbl
aaa
in
dec
adc
int3
mov
loope
lea
mov
sbb
cmp
push
pop
xor
ja
xchg
mov
outsb
scas
and
fwait
push
xchg
fbld
jne
loop
jp
call
dec
adc
dec
xchg
mov
dec
cmpsl
adc
cmp
data16
or
mov
das
push
pop
xlat
les
pop
mov
xor
adc
repnz
cltd
xchg
jecxz
mov
std
ss
enter
lods
mov
lcall
mov
subl
mov
in
int
arpl
filds
cmp
pushf
adc
jo
imul
mov
mov
sahf
cltd
xor
inc
push
pop
and
cli
aaa
dec
dec
inc
xchg
shl
data16
xchg
cmpsl
repnz
mov
shl
xchg
jo
pop
fisubrs
push
sub
stc
pop
popf
test
xchg
out
xor
sub
lcall
addr16
stc
xor
xchg
cmp
pop
pop
adc
sbbb
mov
fildll
mov
add
sahf
xchg
pop
bound
jmp
shrb
lahf
jnp
aam
testl
sbb
out
dec
and
outsl
jg
xor
into
sbb
ret
adcb
or
jp,pn
xor
les
and
push
and
aad
jmp
sahf
jns
popa
aas
lcall
jo
adcl
scas
cmp
mov
fimuls
xchg
not
or
out
loopne
or
sbb
inc
jne
xchg
lcall
mov
sbb
cmp
jbe
pop
pop
decl
imul
sub
sbbb
in
icebp
dec
jg
movsl
cs
setl
sbb
pop
loope
xlat
cli
cmp
sub
addr16
mov
stc
mov
aaa
lock
repnz
cwtl
f2xm1
cmp
xchg
mov
pop
ljmp
sub
mov
inc
mov
xchg
enter
sbb
stc
add
mov
dec
cs
xchg
push
in
insb
lea
xchg
sbb
orl
rolb
ficoml
xchg
fidivrs
add
in
aad
pop
xchg
jnp
hlt
pop
shlb
ljmp
push
shll
stos
push
movsb
xchg
xchg
xchg
enter
xchg
jle
push
movsl
mov
dec
jmp
xchg
outsb
nop
sbb
repz
and
sahf
xor
dec
jnp
ret
aaa
scas
std
pushf
sbb
test
mov
lcall
add
xor
mov
adc
ss
jne
and
xchg
inc
aas
das
and
xchg
pop
push
push
push
sbb
and
lahf
into
mov
add
and
mov
jo
xchg
xchg
add
or
test
sti
xchg
mov
xchg
test
mov
scas
rclb
repz
jno
sub
dec
out
ss
add
and
mov
fcoml
nop
aam
or
dec
or
xchg
xchg
sub
and
mov
adc
sbb
xchg
jno
cmpsb
gs
scas
es
loope
jne
ss
mov
xchg
movsb
inc
adc
jl
fcmovbe
xchg
nop
out
fisttps
jae
shll
jne
push
push
push
pop
cmp
sbb
inc
push
cmp
jbe
mov
inc
push
test
jns
fistl
imul
ficoml
sub
ljmp
test
mov
into
add
push
adcl
xor
jns
xchg
mov
push
sub
jp
mov
aam
pop
xchg
xchg
fbld
cld
xchg
xor
jmp
jb
or
pop
pop
es
test
arpl
or
mov
mov
push
sbb
cmpb
dec
push
lds
add
sahf
cmp
mov
filds
and
or
sti
fdivs
aas
les
xchg
pop
sub
lahf
mov
mov
xchg
mov
mov
jne
cmc
xchg
sbb
add
stc
enter
jle
addb
sub
out
adcl
sbb
and
adc
les
ja
test
gs
dec
xchg
xlat
add
xchg
hlt
pop
inc
rol
xor
rorb
mov
lahf
hlt
ficoms
jecxz,pn
movsl
mov
scas
cmpsl
ljmp
lds
cmpsb
mov
sub
cmc
jecxz
xchg
cmp
imul
adc
test
lods
inc
arpl
mov
fdivs
roll
test
pushf
outsb
shlb
xor
and
imul
jle
pop
adc
cmpsb
cld
cmp
jae
xchg
pusha
fdivr
and
stos
adcl
cwtl
lahf
enter
cmc
inc
in
rolb
repz
sbb
inc
mov
out
scas
sahf
push
jb
pushf
jne
inc
subb
cmpsl
add
cmpsl
sbbb
popf
cmpsb
adc
repz
dec
mov
fists
cli
mov
inc
mov
pop
fmull
adcb
xchg
mov
aaa
mov
imul
mov
jno
inc
leave
cmpsl
stos
ss
sbb
lcall
jo
or
decl
sub
shll
xchg
add
sbb
loope
lcall
lds
int3
or
push
fistpl
adc
aas
xorl
mov
dec
inc
mov
es
xchg
xor
add
dec
add
ja
push
out
aaa
mov
xchg
pop
push
xchg
es
ret
sbb
push
mov
push
jb
xchg
pop
push
or
ficoml
pusha
sahf
cmpsl
ja
mulb
add
or
ds
out
fwait
cmpsb
loopne
adc
les
cmp
sbbl
decl
filds
add
push
add
sub
into
xchg
hlt
xchg
outsl
xchg
dec
aam
jae
mov
or
adc
jg
pop
stc
xchg
test
add
nop
mov
cmp
cmp
adc
les
repnz
out
das
sahf
sub
popa
lods
jno
data16
hlt
xchg
jbe
shl
subb
cli
push
pop
jae
bound
mov
lock
in
xchg
mov
cmp
xor
mov
out
outsb
sub
jo
sti
mov
inc
mov
xchg
les
sub
je
xchg
jmp
data16
jne
push
push
sbb
lcall
mov
push
mov
repnz
push
xchg
es
xchg
sbb
in
mov
xchg
dec
add
ret
sbb
push
out
jbe
xchg
mov
lahf
out
xchg
and
test
push
movsl
shll
jne
sbb
xchg
jp
dec
in
popa
cwtl
ret
push
or
pop
mov
push
ja
sub
mov
xchg
jo
xor
mov
orl
stos
rorb
daa
rolb
adc
inc
repnz
push
or
sahf
popa
insb
cmp
jne
lret
cltd
xchg
xlat
shr
cmp
cmpsb
sub
lock
je
mov
push
sbb
mov
les
out
subb
dec
push
imul
jge
and
aad
aaa
enter
cli
lods
xchg
aas
and
imul
lea
jmp
lds
add
ret
stc
mov
gs
sbb
aad
inc
mov
int
and
add
xchg
sub
jbe
scas
sbb
mov
es
cs
inc
out
xchg
sbb
mov
push
inc
rcrl
or
push
test
fidivs
mov
rolb
mov
or
inc
mov
roll
sub
cwtl
sub
jo
inc
xchg
fdivr
mov
cmpsb
mov
pushf
insb
fstl
mov
mov
cmc
mov
xchg
mov
and
insb
outsl
jmp
xchg
push
dec
daa
pop
decl
lods
xchg
and
add
sbb
sarl
xor
lods
inc
into
xor
xchg
lock
add
mov
test
outsl
and
mov
daa
dec
pop
xchg
les
iret
mov
sub
lds
cwtl
movsb
pop
popf
jp
mov
push
cwtl
lds
jnp
pop
xchg
inc
xchg
xchg
xchg
jmp
std
sbb
adc
pop
pop
fdivr
xorb
dec
fsub
xchg
xchg
push
lds
fidivrl
popl
mov
stos
mov
jbe
mov
popf
inc
fimuls
push
insb
pop
sbbb
movsl
lcall
cmp
cmp
xchg
scas
mov
inc
mov
sub
xchg
sbb
and
pop
push
fisttpl
lock
mov
xchg
jp
lods
mov
das
xor
xor
mov
jge
lds
push
rorl
mov
sbb
xchg
mov
push
cmc
jp
jae
jno,pn
mov
iret
repz
scas
xor
adc
subl
aad
divl
jle
dec
addr16
pop
ss
sub
inc
test
ret
xchg
mov
lods
xchg
xor
jecxz
mov
ror
push
inc
sbb
xchg
xchg
jne
out
aas
cmp
in
mov
xor
inc
inc
xchg
lahf
lods
es
pop
xor
jge
or
xor
or
add
xchg
mov
std
shrb
lcall
jne
das
aad
mov
fisubrs
jne
push
push
pop
jl
adc
mov
rolb
push
jno
xchg
and
js
inc
lods
movsl
add
jne
jns
into
in
std
mov
fwait
sahf
mov
insb
in
xchg
lcall
mov
mov
mov
xchg
iret
add
mov
ja
not
es
xchg
mov
pop
pop
push
dec
loope
adc
add
mov
xchg
out
divl
xchg
in
adc
rol
adc
xchg
rorl
les
fwait
arpl
jne
push
outsb
cmp
cld
ss
cltd
add
jno
cwtl
pop
jbe
mov
cmp
push
jbe
cmp
testb
or
mov
insl
xchg
popa
push
icebp
fwait
inc
movsb
pop
cltd
cmp
loopne
roll
popa
pop
xchg
lea
arpl
int3
repnz
scas
cmp
sub
push
ss
or
cmp
iret
push
jmp
cltd
pop
xchg
jmp
les
adc
xchg
pop
js
push
sub
mov
push
xchg
lea
ss
into
mov
mov
and
sar
shl
out
mov
inc
pop
adc
adc
nop
xchg
sti
inc
arpl
inc
pusha
xor
xor
mov
lock
imul
or
sub
cli
add
mov
cmp
xchg
xlat
sti
jecxz
mov
and
xchg
aam
lods
mov
adc
mul
inc
sub
es
pop
rcr
xchg
mov
lods
mov
dec
lahf
out
dec
cmp
push
ret
out
hlt
sbb
ljmp
sub
icebp
xchg
jne
pusha
out
in
xchg
mov
roll
pop
xchg
clc
jne
mov
movsl
lret
push
pop
enter
cmc
imul
ficompl
or
xlat
lret
fsubs
pusha
andb
mov
adc
scas
sahf
jbe
sub
jg
cmp
and
or
sub
ret
add
xor
loope
jnp
test
out
pop
outsb
les
testl
loopne
mov
daa
aas
inc
outsl
dec
ss
shlb
cmp
xchg
inc
in
cmp
stc
das
xchg
xchg
lahf
popa
repz
into
xlat
dec
ret
push
fdivl
out
sahf
out
bound
push
jo
pop
fcmovnbe
lahf
cmp
jg
insl
dec
adc
sub
ss
sahf
fcoml
insl
push
inc
inc
std
lret
movsl
jge
sahf
fdiv
pop
mov
sub
call
shll
xchg
pop
enter
fstpt
leave
arpl
inc
imul
mov
fcmovnu
xchg
repnz
xchg
cltd
leave
mov
push
xchg
mov
loop
je
cmpsb
cmpsl
dec
lcall
out
lds
push
xchg
adc
int
arpl
outsl
daa
sbb
xchg
stc
dec
add
xchg
adc
loope
jbe
pop
push
rolb
xchg
gs
mov
cmp
lds
and
lahf
xor
mov
pop
fucomi
jne
sub
je
repz
loop
cmpl
insb
ret
jp
mov
xchg
sub
jns
mov
stos
inc
push
push
xchg
ja
orb
fldl
pop
cmpsl
out
movsl
fdivrs
aas
test
dec
adc
sub
scas
xchg
icebp
repz
jnp
push
xchg
xchg
fwait
rclb
addr16
mov
lods
dec
iret
sub
push
mov
mov
ss
mov
sahf
sub
inc
xor
xchg
mov
xchg
ljmp
shlb
xchg
testl
out
fcoml
mov
jnp
pop
add
pop
data16
cli
aas
pop
lcall
shr
hlt
scas
sahf
jae
dec
movsl
in
sarb
cmc
bound
xlat
int3
ret
cld
cmp
out
mov
repnz
leave
xor
and
push
xor
push
les
xchg
mov
loop
shlb
std
pop
leave
push
mov
repnz
dec
ret
xchg
push
ror
test
into
test
cltd
xchg
cmp
cs
dec
and
jecxz
mov
adc
pusha
mov
fisubs
mov
scas
das
jbe
adc
pop
mov
sub
fdivr
std
push
or
sahf
dec
int3
push
push
xchg
fldl
lods
xchg
jns
add
pop
pop
xchg
fwait
adc
lds
and
cli
and
in
loopne
pop
push
lock
xchg
mov
inc
pop
das
std
mov
inc
sbb
xor
scas
negb
mov
sahf
fnsave
into
push
or
or
jno
mov
jg
icebp
ficoml
inc
jle
sub
xchg
add
mov
insb
mov
lret
jl
lret
adc
dec
jns
cli
sahf
sub
in
xlat
push
fcoms
mov
out
pop
sahf
cmp
jns
cltd
mov
aam
mov
aad
aam
les
xor
lcall
inc
lock
sub
sti
bound
mov
xor
jbe
fimuls
jmp
mov
push
jle
push
inc
and
mov
lea
cmpb
xor
pop
std
pop
shll
xchg
xor
inc
sub
xchg
xchg
lahf
mov
fstpl
int
xor
sbb
push
dec
icebp
pusha
loop
aam
mov
xchg
push
shrb
in
lret
xchg
addr16
divl
or
cmp
add
cmp
ja
ljmp
mov
lock
inc
ds
mov
lahf
push
loopne
popf
xchg
and
xchg
or
pop
mov
push
push
pop
popa
out
xchg
cmpb
ficomps
jne
sbb
xchg
loopne
mov
inc
fdivr
stos
out
push
xchg
xchg
dec
cmp
loopne
inc
mov
jo
add
fildll
xchg
push
pop
mov
out
jns
xor
lcall
iret
add
addr16
sti
mov
stos
jmp
out
cli
mov
sahf
mov
sub
xor
push
inc
in
push
into
iret
sahf
sub
xchg
push
mov
adcb
add
shll
push
sbb
lock
daa
loop
push
xlat
loop
push
aaa
gs
adc
jbe
sar
sbbw
jne
push
push
xchg
push
bound
cmc
xchg
pop
or
ror
adc
fwait
ds
ret
mov
cmc
xchg
icebp
jge
push
nop
test
sbb
aam
insl
sub
mov
jge
xchg
mov
test
inc
add
inc
imul
clc
stc
mov
mulb
stos
dec
xchg
mov
jmp
dec
out
push
push
cmp
sub
call
scas
or
les
aas
lcall
push
add
mov
sub
add
enter
push
les
outsb
inc
in
xchg
bound
rorb
mov
xchg
jecxz
xcrypt-cbc
cmpsl
xchg
mov
xchg
adc
sub
lahf
push
cwtl
jg
lahf
xchg
mov
out
mov
addl
jbe
imul
and
mov
mov
push
xchg
jo
scas
add
sbb
xchg
cs
sbb
add
fstp
and
clc
xchg
lods
ja
xchg
lahf
add
rorl
xchg
mov
cmpsb
cmpsl
cmp
pop
fidivl
xchg
rcl
iret
repz
xchg
jne
in
cwtl
mov
cmp
dec
or
pop
and
test
push
sti
test
add
pop
sub
shr
cltd
jge
stos
pop
dec
sbb
pop
push
push
push
jl
add
push
bound
dec
cmpl
imul
orl
fs
xchg
xchg
mov
and
sbb
sti
loope
outsl
mov
int
mov
jo
into
clc
push
xacquire
fisttps
or
imull
fiadds
cltd
call
lcall
xchg
stos
das
popf
aad
sti
outsb
add
dec
test
inc
or
fimull
or
sbb
mov
adc
dec
dec
pop
xchg
inc
mov
or
insl
push
xchg
sub
clc
cmc
adc
push
pop
lcall
aam
or
jae
add
ja
mov
push
popf
pop
xor
into
out
push
dec
mov
jbe
ljmp
adc
jl
adc
cmpsb
iret
xchg
movsl
xor
cwtl
mov
mov
gs
repz
inc
test
adc
add
hlt
xor
or
je
xchg
push
inc
lcall
out
popf
xchg
xchg
and
mov
jb
pop
adc
pusha
xchg
mov
mov
jnp
out
shlb
mov
pop
dec
jg
cld
paddq
xchg
fdivr
adc
lods
scas
and
push
push
daa
adc
lcall
loop
adc
xchg
and
fbld
sub
sub
xchg
or
mov
xchg
mov
icebp
or
and
xorb
int3
or
popf
fisubs
and
dec
dec
jae
aam
scas
addr16
aad
mov
fdivrs
imul
clc
add
inc
lret
fildl
insb
ja
lods
mov
inc
ss
movsb
xchg
pop
xor
cmpl
sbb
js
repnz
xchg
repnz
ljmp
inc
cmpsl
lods
sbb
lea
xchg
inc
stc
out
add
aam
ja
mov
mov
sub
push
push
and
lcall
xchg
sub
fsubs
shlb
jecxz
xchg
adc
repz
xchg
orb
mov
and
clc
xlat
test
dec
xchg
dec
cwtl
popf
and
xor
popa
pop
xchg
xchg
outsl
push
dec
xchg
push
cmpsb
or
and
jb
aaa
repz
jle
adc
rclb
mov
lds
mov
or
adc
and
sbb
in
push
mov
test
xchg
jns
rcll
pop
fldenv
mov
adc
add
scas
lcall
ss
ret
fs
xchg
jo
add
mov
and
aaa
inc
cmc
lret
inc
gs
mov
cltd
lcall
inc
aaa
mov
fcomps
stc
dec
pop
xchg
into
frndint
jecxz
clc
xchg
add
and
shll
adcb
cmp
aas
les
push
popa
dec
sti
jbe
test
in
xchg
fsub
mov
xor
mov
test
push
dec
shr
loop
dec
pop
les
inc
shrb
outsb
jns
jns
sbb
movsl
iret
xlat
pop
xchg
push
or
add
adc
cwtd
jns
mov
aas
pop
es
sahf
or
into
sti
xchg
sbb
push
movsl
in
or
pop
sub
in
cmp
jns
lds
ficoms
fcmovnbe
dec
xchg
sbb
and
fists
data16
ss
fsts
mov
add
xor
jecxz
ret
cmp
mov
hlt
mov
loop
mov
in
add
dec
xchg
lret
xchg
gs
sar
jns
adc
cmpsb
fstpl
push
les
dec
sub
xchg
lret
lods
jge
lea
xchg
test
mov
stos
data16
xchg
test
lds
sbb
push
push
ret
cmp
xchg
andb
pop
std
daa
xchg
aad
roll
or
sahf
xchg
push
mov
mov
je
call
fnstsw
and
fistl
movsb
and
jne
pop
fiadds
loope
out
xchg
les
popa
jno
inc
push
subb
jnp
add
mov
mov
jbe
sub
mov
imul
xlat
push
out
mov
aaa
popa
into
fdivrs
inc
pushf
ja
or
mov
sbb
mov
cltd
xchg
jne
xor
fs
in
pop
push
jb
xchg
js
xchg
mov
es
push
push
jmp
out
lds
inc
lret
flds
jnp
and
xchg
add
jmp
fstpl
les
sbb
insb
sahf
ljmp
lds
or
into
out
xchg
or
push
adc
xchg
dec
pop
repz
hlt
xor
inc
xor
inc
and
pushf
lcall
inc
cmp
movsb
cli
loop
inc
cwtl
ret
bound
mov
sahf
mov
inc
jmp
pop
cwtl
and
sbb
xchg
or
orb
aas
push
pop
popf
mov
pop
lods
lret
and
out
leave
cmp
loope
cs
pop
xchg
pop
mov
pop
xchg
shrl
xchg
or
lahf
popf
dec
cmp
fldenv
adc
std
adc
clc
outsb
cmp
adc
test
jmp
and
add
test
xchg
ret
insl
mov
mov
cmpb
mov
in
xchg
aas
mov
cmp
add
movsl
nop
sbb
test
xchg
pop
dec
push
sbbb
xchg
imul
add
rcr
and
mov
mov
imul
sbb
scas
ss
jbe
xor
adc
sub
insl
aad
and
push
arpl
or
sbb
mov
sub
lea
or
adc
pusha
cmc
xchg
mov
addr16
mov
cli
repnz
xchg
xchg
fimuls
jg
inc
cmp
cli
out
movsl
cmpsb
sub
ret
or
fcmovnbe
or
mov
xchg
sar
imulb
insl
imul
adc
lods
or
int3
stos
mov
stc
je
sbbl
jmp
lods
sub
mov
xchg
test
xchg
adc
xchg
sub
ret
lret
fisubrs
xchg
rol
xor
lea
cltd
les
int
mov
sbb
sub
andl
inc
push
pop
ja
cmpsl
xor
sbb
and
xchg
jmp
xchg
jbe
push
push
and
mov
test
lods
out
shlb
rcl
nop
jb
arpl
iret
loopne
test
test
das
inc
popf
xchg
imul
imul
push
stc
mov
sbbl
int
jg
ret
mov
ffreep
jle
pop
aad
lods
lcall
jp
enter
in
or
sub
dec
add
fsubrp
add
rolb
sbb
icebp
xchg
aaa
insb
popfw
and
leave
dec
xor
cmp
and
sub
xor
ret
and
roll
xchg
push
sbb
xchg
sbb
outsb
aas
sbb
stos
movsl
cli
and
mov
and
mov
jg
add
inc
jp
aad
pop
aaa
cmc
cmp
scas
imul
mov
movsb
out
cli
ljmp
add
into
add
xor
ret
xchg
mov
pop
mov
pop
sahf
jne
add
ret
xchg
test
movsl
cmp
cmp
xchg
mov
mov
outsb
jbe
cwtl
push
sti
jmp
xchg
bound
mov
pavgb
repnz
dec
loop
div
mov
dec
movsl
call
add
jmp
and
test
xchg
stc
and
jg
inc
cmc
sbb
or
subb
add
push
lock
add
stos
out
repnz
xchg
push
clc
xchg
nop
jbe
shrb
loopne
sbb
data16
push
add
aaa
xchg
js
aaa
fmuls
push
movsl
jmp
mov
pushl
jbe
in
inc
push
pop
retw
orb
or
dec
jo
mov
xor
outsb
sbb
mov
pusha
pop
lret
stos
scas
xor
mov
in
fisttpll
aad
jmp
addr16
out
xor
shll
pop
sti
rclb
test
pop
ficoml
xchg
mov
mov
jle
push
mov
pop
pop
pop
aaa
add
in
les
popf
mov
ss
movsb
xchg
dec
push
sub
rol
lock
push
ficoml
push
cmpsb
outsb
movsl
loope
xor
jbe
push
sub
add
sbb
mov
and
cltd
and
sub
test
adc
jnp
ss
push
test
shll
popa
stos
pop
insb
lahf
inc
xchg
repz
sub
ja
out
mov
cwtl
xor
pushf
in
pusha
fisubrs
xchg
in
cmc
lret
jne
addb
push
xchg
jmp
nop
stos
cmpb
stos
es
xchg
inc
mov
les
jbe
mov
dec
std
xor
mov
fneni(8087
popf
pop
pop
jmp
lcall
int3
or
stc
push
test
add
sahf
out
push
repz
or
pop
sahf
fdivrp
rol
movsl
mov
mov
das
dec
inc
adc
ss
sbbb
xchg
ds
cmpsb
xchg
pop
sbb
pop
ret
sarb
cmp
push
xchg
dec
clc
add
inc
jae
push
adc
and
cwtl
push
push
fildl
cli
push
lcall
add
mov
xchg
lea
mov
xchg
xchg
lahf
mov
xchg
loope
push
rcrb
pop
mov
insb
ficoms
test
add
ds
and
ss
push
pushf
and
dec
xchg
jae
or
adcl
or
cmc
sbb
mov
sahf
outsl
dec
push
sahf
nop
jb
iret
xchg
jge
ds
mov
dec
xchg
int
ljmp
mov
mov
xchg
cmp
push
scas
xchg
fisubrs
xchg
movsb
push
inc
mov
lods
cmpb
std
and
sahf
cmp
js
xor
xchg
xchg
mov
and
fists
insb
cmp
notb
subb
mov
mov
cmc
adc
sahf
imul
xchg
movl
in
movsl
adc
arpl
xchg
inc
jno
loope
xchg
sub
dec
mov
xor
xchg
rcrl
lcall
movsl
push
sub
sahf
in
pop
mov
push
repnz
cmp
xchg
and
xor
mov
sbb
les
or
loope
icebp
or
xchg
into
pop
cltd
mov
jp
iret
add
in
cli
sbb
cld
repnz
add
xor
data16
cltd
pop
add
push
inc
xor
push
cmp
loope
sbb
sub
and
jne
pop
jp
mov
sar
test
scas
fs
mov
nop
outsl
gs
rolb
xchg
fdivrl
shll
enter
fistps
add
scas
pop
fwait
mov
pop
outsl
xchg
or
cs
mov
icebp
lahf
orl
sub
lock
xlat
cmp
insb
rolb
push
mov
mov
pop
mov
clc
push
shlb
push
pop
fsubrs
mov
mov
and
and
mov
jo
adc
xchg
sets
cmp
xchg
decl
push
enter
ljmp
mov
xor
movsb
icebp
and
cmpb
mov
arpl
lret
idivb
imul
es
shll
mov
xor
dec
sbb
loop
adc
push
xchg
in
xchg
mov
cltd
and
cmp
xchg
ds
push
insb
daa
xchg
lea
inc
xchg
jo
mov
xchg
sub
pushf
mov
push
push
xor
lcall
jno
xchg
xchg
mov
in
add
mov
xchg
cmp
cli
cld
sahf
es
dec
fcomp
xchg
xchg
sbb
in
loop
addb
fcoms
cmp
idivl
inc
xchg
mov
aad
cltd
data16
xchg
and
lea
lods
mov
xchg
pop
movsl
inc
push
push
stc
pop
cmc
fadds
mov
lea
jl
push
cmp
sahf
lahf
mov
ss
xchg
push
mov
jbe
cmp
lcall
lea
mov
or
mov
mov
ret
fcmovnb
rcll
mov
sub
fsub
mov
dec
push
jl
int
jbe
inc
mov
fstps
add
std
lcall
push
repnz
adc
ficoms
fwait
int
or
xchg
or
rclb
add
pop
xchg
jp
xlat
xchg
loop
lds
rorl
jne
cmp
push
xchg
mov
imul
adc
jecxz
cmp
out
sub
aam
jbe
ss
lahf
andl
mov
jns
test
inc
dec
mov
xchg
ja
lcall
jns
xor
lds
jp
out
repz
dec
pop
inc
sbb
mov
loope
pop
mov
mov
cli
in
cs
dec
inc
rorl
pusha
fdivs
outsb
aaa
lcall
fwait
and
gs
pop
xlat
in
xchg
not
push
lods
stos
cmc
mov
shlb
and
mov
xchg
lcall
daa
cmpl
popf
jmp
mov
cwtl
dec
sub
clc
add
xchg
cld
mov
xchg
fisttpll
sub
clc
xchg
add
or
imul
adc
add
xchg
adc
xor
xor
out
xchg
int
je
lret
xor
pop
ficompl
roll
xchg
xor
nop
ret
xchg
mov
push
inc
xor
xchg
mov
les
clc
subb
cli
sarb
inc
aad
mov
outsl
mov
jp
push
fcoms
lock
xchg
mov
sbb
xchg
pop
aam
mov
insl
mov
test
gs
fwait
les
or
pushf
ds
mov
jns
mov
outsl
fscale
pop
cmpsl
pop
xchg
mov
cmp
ja
adc
movsl
out
xorps
xchg
mov
cli
es
add
popf
xchg
xor
push
xchg
pop
retw
orb
mov
jbe
dec
push
dec
jae
xchg
mov
int
jno
jo
jecxz
sbb
dec
jp
dec
or
nop
repnz
mov
cmpsl
mov
mov
xchg
scas
jne
xchg
inc
pop
push
xchg
push
push
add
movsl
jae
loopne
sahf
jl
inc
xchg
out
cli
mov
filds
in
lock
clc
or
push
add
sub
test
xor
dec
adc
xchg
divb
jle
cltd
inc
mov
push
ds
xchg
int
aad
push
add
jg
pushf
ficoms
shlb
xchg
imul
stos
mov
jecxz
lcall
or
push
retw
fadd
mov
pop
add
xorl
test
ss
daa
mov
insb
push
inc
inc
mov
scas
movb
jg
ds
outsb
aam
pop
mov
inc
fstpl
rolb
add
cmp
movsb
push
out
sbb
mov
addb
ja
lock
push
xchg
jp
dec
lahf
xlat
and
jne
out
xchg
inc
xchg
add
xchg
xlat
fsubrl
leave
dec
loopne
pop
lcall
mov
lock
lret
mov
pushf
scas
bound
jbe
js
ret
rclb
mov
sub
push
cmp
and
ja
dec
xchg
sarb
lea
xor
stos
cs
mov
stos
outsl
into
jbe
popf
push
popf
mov
xchg
loope
arpl
jo
push
ja
mov
sbb
ds
xchg
jmp
int3
jbe
or
fcmovu
pop
addb
and
unpckhps
xor
mov
mov
dec
push
fwait
xor
mov
inc
xchg
shlb
xchg
jne
mov
mov
cltd
aam
xchg
mov
ds
pop
xchg
divb
test
mov
xchg
insl
movsb
fcomps
idivl
cmpsl
push
mov
stos
and
pop
mov
push
enter
iret
je
call
dec
shll
aaa
movsl
insb
pop
inc
inc
pushf
or
mov
popf
lock
nop
jmp
lods
ljmp
pushf
mov
cld
sti
fucomip
mov
shll
andb
out
cmp
es
pop
cmp
fnstcw
push
aam
sub
jle
xor
sbb
les
pop
dec
xor
sub
xor
loop
jl
ss
ss
lahf
cmp
push
mov
adc
push
inc
or
int
inc
ret
push
adc
adcb
or
xor
and
add
push
outsb
nop
sahf
ss
inc
adc
xchg
mov
sbb
xchg
adc
scas
popf
or
mov
mov
pop
push
mov
xchg
ret
js
pop
ficompl
ret
mov
fs
and
inc
pop
xlat
fisttpll
pop
xchg
push
std
mov
jno
dec
xchg
adc
xchg
into
fstl
cmovle
pop
out
jbe
push
data16
das
jbe
enter
insl
clc
lods
shr
scas
movsl
mov
mov
xchg
test
cmp
stc
jl
push
push
lcall
mov
pop
adc
jg
dec
stos
fsubrs
xor
in
mov
jg
cli
mov
inc
int
ljmp
iret
inc
push
cmpsl
push
adc
mov
sbb
data16
xchg
sahf
jle
mov
push
and
push
cmp
data16
in
jno
xorl
orb
outsb
xchg
mov
stc
out
inc
push
xchg
mov
fsubrs
fidivs
mov
mov
mov
push
out
mov
xchg
pop
jns
insb
or
sahf
ss
jbe
xor
lcall
push
arpl
cmpsb
adc
mov
xchg
adc
cmpsl
adc
push
mov
push
data16
mov
or
mov
xchg
movsb
mov
lcall
adc
mov
dec
xor
xorb
in
ss
mov
lret
pop
push
mov
shl
testb
sahf
mov
mov
out
daa
movb
icebp
and
pop
lahf
cwtl
hlt
dec
pop
push
insb
xchg
fstpl
dec
addb
push
aaa
hlt
stos
test
out
mov
xchg
cmp
sub
xchg
adc
xchg
mov
enter
sbb
cmp
incl
push
xchg
imul
gs
mov
mov
dec
push
sbb
sbb
push
push
jecxz
fmul
and
hlt
and
push
aas
pop
xchg
xchg
push
push
inc
lods
sbb
cmp
mov
sbbl
pop
push
or
shr
fnstsw
sahf
sbb
fdivr
cmp
das
idiv
pop
mov
iret
pop
daa
lods
inc
sub
lret
mov
divl
xchg
push
pop
and
cmpsb
lds
movb
and
insl
xchg
cmpsl
mulb
mov
daa
jp
pop
sub
jne
add
xchg
xchg
xor
mov
mov
inc
inc
xchg
pop
or
add
mov
mov
or
ret
das
movsl
stos
cmpsl
out
in
pop
jl
jb
cwtl
pop
cmp
mov
test
addl
xchg
fidivl
aas
mov
or
testl
clc
pushf
ljmp
mov
sahf
add
lahf
inc
xchg
popf
pop
test
rolb
mov
paddusw
daa
mov
jp
adc
loopne
int
out
jg
in
sbb
aas
aam
divl
xchg
arpl
lcall
mov
lret
push
pop
xchg
xchg
push
outsb
scas
push
xchg
cltd
pop
mov
mov
xchg
dec
js
inc
xchg
mov
stc
xchg
or
inc
push
je
sub
dec
repnz
int3
xchg
cmp
aas
notb
aaa
xchg
xchg
loopne
rclb
xchg
sub
int3
xchg
add
mov
nop
std
jle
dec
gs
int
push
in
add
js
or
mov
pop
push
pushf
in
mov
fldl
push
add
scas
orl
ss
fs
ss
jecxz
or
outsb
lods
mov
dec
xor
mov
insl
pop
ss
add
cmpb
roll
addr16
divb
inc
aaa
ds
inc
push
jl
adc
xchg
lret
mov
xchg
in
jnp
adc
cmp
sbb
pop
aam
cwtl
les
lds
add
mov
dec
and
mov
mov
pop
mov
mov
add
add
mov
push
push
andl
mov
scas
std
cwtl
pop
xchg
jp
add
xchg
sbb
jnp
push
push
jl
sbbb
inc
ficomps
out
cmp
xchg
out
cmp
pop
aaa
jecxz
mulb
and
xchg
xchg
lods
js
mov
scas
or
out
int
and
stos
lret
inc
movsl
jbe
icebp
or
push
push
push
pop
xor
arpl
adc
cmpsb
xchg
pushf
cld
mov
fisubl
mov
insb
popf
or
xor
mov
xchg
pushf
sbb
test
in
cmp
movsl
cmp
and
add
loop
ss
imul
jbe
adc
sbb
adc
jp
cmp
es
and
sub
inc
xor
sub
mov
orb
xchg
jle
aam
inc
mov
add
sub
mov
sub
mov
dec
clc
test
xor
adc
imul
jo
in
outsl
or
arpl
and
mov
loop
add
jge
ss
xor
cmc
dec
repz
fbstp
data16
pop
flds
cld
push
fistl
lcall
js
je
xchg
push
ret
pushl
sub
sub
cld
popf
popa
out
push
mov
jnp
je
or
call
int
adc
ret
xchg
pop
sbb
ds
aad
xchg
fwait
jg
adc
cli
lods
mov
jl
jae
fldl
movsb
aam
sbb
and
or
mov
xchg
jecxz
pop
sahf
in
jns
xchg
xchg
adc
cmp
test
pop
jle
jae
fadd
or
add
pop
xor
stos
cmp
cmp
xchg
inc
jb
fstl
rolb
movsb
adc
stc
mov
cmpsb
sbb
out
nopl
mov
push
out
xchg
xchg
scas
adc
sbb
dec
xchg
lods
push
xlat
xchg
mov
lcall
ss
mov
pusha
or
cwtl
movsb
add
idivb
scas
cmp
shll
int3
aaa
xchg
fidivrl
popa
or
xchg
fstl
jno
insb
pop
jp
test
inc
addb
clc
or
fisttpll
inc
cmpsb
xor
xchg
out
jbe
outsb
push
popf
inc
lcall
je
imul
xchg
sahf
out
push
and
xchg
mov
test
sbb
out
xchg
sbb
mov
xchg
xchg
fdivl
mov
mov
add
inc
test
sbb
dec
test
shll
scas
pop
popa
pop
mov
xchg
clc
cli
int
push
xchg
test
out
push
adc
gs
fcompl
arpl
pop
int
stos
ss
cmpsb
stos
int3
jb
adc
or
leave
xor
add
int3
add
xchg
andl
in
iret
dec
sbb
sub
xor
ss
mov
inc
cmc
popf
incb
out
jl
xchg
shlb
cmp
add
sub
xchg
std
repz
nop
aaa
lds
das
sbb
xlat
fs
mov
arpl
ror
inc
mov
pop
or
adc
add
jae
pop
jle
adc
enter
push
and
xchg
lods
xchg
hlt
xchg
es
inc
mov
negl
sahf
aaa
fcmovne
push
push
imul
loop
aas
xchg
and
gs
std
cmp
in
addr16
cmc
sbb
les
sti
xchg
inc
lahf
ss
imul
push
jnp
das
pop
js
mov
insb
mov
xchg
mov
xlat
pop
mov
imul
insb
xchg
divb
icebp
js
push
xchg
xchg
and
sarb
mov
xchg
mov
jmp
or
xchg
out
and
adc
fmul
js
xchg
push
push
lahf
aas
aaa
mov
xchg
jle
mov
inc
sbb
es
jo
ret
xchg
mov
jb
lret
icebp
xchg
cltd
add
dec
add
movsb
push
popl
insl
out
adc
lds
mov
lret
xchg
push
jp
mov
leave
mov
mov
lock
push
rcrb
roll
movsl
mov
mov
hlt
jo
jp
sahf
xor
adc
ss
push
mov
test
loop
out
insb
pop
jns
into
push
mov
test
ficoml
xchg
popf
loope
mov
imul
jg
xchg
xor
imul
jmp
xchg
repnz
ljmp
ja
xchg
jo
data16
aam
lea
leave
or
loop
icebp
ja
sbbl
mov
xchg
add
movntps
fwait
dec
mov
loop
fildl
xchg
pop
fsubp
shrl
sub
mov
cmc
fisubl
test
dec
xchg
mov
call
jp
mov
add
ja
in
pop
orb
shl
dec
xchg
add
pop
lcall
dec
pop
ficomps
xchg
std
jl
pop
and
mov
jbe
mov
xchg
pop
mov
pushf
stc
arpl
loop
mov
pop
adc
sahf
pop
ret
xlat
jmp
or
jae
lcall
mov
pop
ficompl
out
inc
mov
push
pushf
jne
mov
adc
add
cmpsl
cmc
xchg
xchg
and
sbb
popf
xchg
xor
pop
dec
fwait
xchg
mov
mov
jo
dec
push
ds
adc
mov
test
jo
and
xchg
repz
outsl
xchg
cmp
cli
aaa
movsl
mov
cltd
inc
inc
ret
xchg
dec
testl
pop
imul
mov
ret
les
and
ret
lcall
jne
mov
or
lcall
loope
mov
shlb
in
xchg
and
push
sub
movsl
call
sub
mov
or
mov
pop
addb
adc
xchg
add
outsl
xchg
sub
ds
or
or
and
stos
sahf
sbb
jecxz
lcall
test
xchg
lds
push
subl
pop
aas
xchg
mov
pop
cmp
gs
cld
or
xchg
lahf
les
repz
sub
xor
int3
into
mov
les
das
stos
frstor
int
into
and
add
dec
cmc
pusha
push
mov
xchg
out
ret
cs
movaps
mov
popf
lods
inc
outsl
rolb
lcall
mov
sahf
add
mov
push
mov
add
xchg
popl
jle
rcrb
sti
sahf
cmpsb
mov
pop
mov
sub
ficompl
sub
out
sbb
mov
repz
test
fldenv
enter
popf
js
push
les
dec
movsl
sbb
out
aaa
arpl
cmpsl
pop
addr16
lcall
adcl
push
jg
popf
or
out
fiadds
inc
in
xlat
seto
test
in
cmpsb
xchg
xor
pop
fcomi
sub
ficomps
push
sbb
jp
inc
mov
mov
cmp
mov
sbb
sub
dec
mov
xchg
cmp
sub
sahf
and
or
cmp
sbb
jecxz
or
outsb
into
pushl
pop
sub
push
test
fs
xchg
ficoml
rcrl
mov
aam
jecxz
test
fstpl
cmp
es
mulb
mov
in
mov
scas
or
sti
inc
sub
add
adc
sub
jnp
dec
int
mov
jl
sbb
add
xchg
mov
mov
xchg
push
decl
mov
cmp
movsb
sahf
int
lcall
pop
stc
das
xchg
xchg
sti
and
xchg
and
stos
pop
aaa
dec
mov
divl
incb
xchg
dec
std
dec
leave
xchg
shlb
and
push
aam
pusha
pop
lcall
or
ss
pop
rcrl
test
mov
cmpsb
rolb
in
xor
fldt
xchg
xchg
cmc
or
sbb
mov
fcoml
loop
jecxz
push
add
and
adc
xor
lods
xchg
stos
inc
cltd
cmpsl
cmp
ret
not
dec
lds
popa
sbb
inc
xchg
jle
add
cltd
fdivrl
xchg
inc
pop
jle
cmp
add
ja
dec
pop
inc
lahf
pushl
lds
ljmp
and
mov
pop
jo
fistpl
in
cmp
in
xchg
mov
mov
shrw
xor
xchg
mov
fs
lock
lods
jl
enter
mov
mov
nop
idivl
andb
popa
pop
pop
fisttpl
and
dec
pop
pop
stos
xchg
adc
cmp
jne
xchg
or
xchg
and
adc
jge
cmc
sbb
push
inc
add
gs
push
mov
add
cld
jbe
mov
fwait
shll
stc
sub
pop
xor
xlat
sbbb
negb
in
push
movsl
or
fst
cmpsb
mov
cmp
mov
and
mov
js
or
pop
mov
bts
fstpl
xor
pop
and
ret
xchg
and
ss
push
and
mov
fdiv
push
pop
add
or
cwtl
rcl
xchg
rol
xchg
sbb
xchg
push
mov
push
mov
pushw
xor
lcall
dec
add
inc
testb
nop
xchg
movsb
ret
loopne
sub
push
mov
iret
jne
stc
mov
fidivl
mov
add
push
cmp
inc
xchg
mov
cld
pop
daa
dec
pusha
xchg
jge
lahf
mov
mov
pop
mov
push
pop
cmp
pop
adc
dec
xchg
mov
stos
les
add
sbb
inc
popf
dec
fiaddl
mov
dec
nop
sarb
lds
stos
aaa
dec
adcb
lahf
sub
inc
inc
jae
test
fisttps
push
jecxz
pop
mov
outsl
lahf
lret
xor
pop
mov
bound
aad
orl
mov
add
add
dec
pop
nop
iret
scas
pop
fnstenv
cmp
adc
and
jge
shrb
push
jmp
mov
adc
es
test
xchg
push
test
test
test
pusha
cmp
adc
inc
dec
jnp
rorl
xchg
in
andw
mov
xchg
sbb
rol
xchg
test
lds
xor
push
adc
es
push
test
xor
xchg
and
inc
or
or
adc
roll
in
add
or
add
sahf
das
xor
xor
sbb
les
jl
leave
mov
stc
test
inc
pop
xor
add
or
in
fsubs
or
inc
and
push
inc
testb
or
icebp
xchg
or
adc
aaa
jecxz
aam
test
mov
mov
pusha
popa
push
cmp
retw
xchg
es
adc
xchg
dec
mov
push
push
js
aad
popa
push
xor
in
jno
or
inc
push
lock
pop
shl
jne
fstl
inc
cltd
xor
pop
test
addl
inc
int3
clc
rcll
lahf
test
push
test
push
arpl
adc
cli
xchg
test
and
push
mov
inc
push
dec
insb
xor
sti
push
pusha
lret
clc
adc
add
test
xor
adc
xor
nop
push
push
inc
ficompl
ljmp
test
and
outsl
xor
or
mov
repnz
jmp
pusha
or
mov
movsl
fs
sbb
mov
data16
scas
adc
mov
insb
push
data16
data16
adc
adc
mov
xorb
mov
mov
inc
xchg
hlt
xor
es
cs
cs
stos
jle
inc
je
mov
add
mov
adcb
ret
xchg
mov
push
add
jae
inc
jbe
sbb
jo
xchg
cmp
je
cmp
pop
jne
mov
jbe
dec
pop
jb
cmp
push
sbb
popf
push
xchg
aam
movsb
inc
jl
push
mov
jle
lods
and
lods
push
and
mov
xchg
ret
add
faddl
sahf
rcrb
inc
in
xchg
cld
add
or
sub
add
subl
cmp
movsb
xchg
lcall
pop
jle
aas
inc
add
xor
mov
mov
xchg
ljmp
mov
mov
movsb
sub
lds
mov
pushf
int
inc
jo
xchg
cmpsl
fstpl
ret
adcb
addb
ja
xchg
sti
xor
sahf
push
mov
add
mov
push
inc
xchg
adc
mov
ss
lods
add
lods
test
inc
out
add
inc
std
mov
pop
dec
jle
mov
xlat
pop
inc
mov
mov
xchg
test
jnp
ja
jg
xchg
mov
mov
aad
loop
clc
mov
gs
dec
notl
in
push
fwait
into
xchg
pop
pop
fiadds
shr
arpl
fildl
inc
imul
and
pop
xor
fsubl
subb
xlat
data16
sahf
in
xchg
ret
xchg
insb
mov
imul
ss
jle
je
mov
test
mov
pop
fbld
ret
xchg
pop
add
rcrl
test
jne
push
xchg
lods
or
push
cli
sbb
jle
jo
movl
mov
ficompl
or
xchg
push
push
outsl
mov
inc
nop
jbe
or
add
orb
mov
gs
ret
mov
sub
rcl
xchg
call
add
pop
xchg
pop
pop
test
loopne
inc
pop
push
fstl
xchg
inc
xchg
sbb
add
lcall
and
xchg
mov
test
add
push
mov
inc
fwait
mov
push
fisubs
push
lods
jne
pushf
xchg
lds
mov
fwait
add
push
mov
mov
lahf
rcrl
ret
hlt
cmp
pop
arpl
jecxz
mov
in
xor
je
add
inc
mov
test
ret
fs
je
pop
push
push
cli
or
mov
inc
inc
loop
xor
jb
push
push
inc
add
sub
enter
xchg
push
imul
sbb
or
xchg
inc
xchg
ret
sahf
fstps
cmp
aaa
addl
push
loope
xchg
rolb
scas
jbe
addb
ljmp
pop
xor
jle
mov
or
mov
mov
inc
lock
sahf
js
push
addl
sahf
pop
xor
pop
and
data16
xchg
fcoml
sahf
imul
daa
popf
xchg
inc
xchg
or
inc
or
sub
inc
arpl
fwait
inc
roll
inc
sbb
push
repz
xchg
sahf
mov
sbbb
andl
sbb
add
pop
mov
push
or
mov
rcrb
aam
pop
xrelease
enter
sahf
push
int3
push
lcall
sahf
mov
xchg
test
imul
pop
rclb
xor
pop
movsb
xchg
sbbl
and
pop
pushf
test
inc
lahf
push
push
adc
lcall
jae
xchg
fidivl
fisttps
add
rcl
fsubl
xchg
cmpb
xor
fs
test
inc
push
dec
cmpsb
test
add
add
inc
dec
or
movsb
pop
fimuls
xchg
ret
mov
pop
aam
pop
dec
fyl2x
lcall
lds
das
inc
push
sbb
or
pusha
add
pop
in
jg
lds
loop
popf
adc
xchg
push
push
jb
stc
push
fldl
addb
inc
push
fstpl
xor
lds
dec
jmp
out
jmp
addb
push
fs
repnz
inc
sahf
scas
sbbb
dec
test
and
inc
lock
addl
xchg
pop
test
jae
xchg
dec
xchg
mov
sahf
push
rcll
mov
and
ds
cmp
sbbb
inc
popl
xor
push
popf
movsl
xchg
inc
push
test
aad
in
xchg
add
inc
and
rol
arpl
add
cmc
pushf
xchg
fiadds
movsb
pop
popf
lds
in
push
ret
xchg
sbbl
push
jb
push
xchg
shlb
movl
sahf
inc
or
add
es
xorb
lods
repnz
xchg
sbbb
ret
push
sahf
arpl
cmpb
push
or
xchg
ret
dec
or
or
xchg
lahf
xchg
jge
test
test
jbe
or
fcompl
enter
inc
out
ficomps
xchg
popf
in
pop
xchg
sbbb
test
lds
setne
andl
push
xorb
dec
jle
lahf
je
mov
xchg
or
mov
pop
mov
push
push
pop
aaa
out
or
sahf
mov
in
and
push
mov
xchg
test
ret
xchg
mov
push
add
dec
sub
pop
cmpsl
xchg
pop
setne
mov
xchg
and
xchg
or
push
add
pushf
mov
jbe
sub
pop
mov
push
gs
xchg
lahf
jmp
bound
xchg
ret
xchg
in
movsb
and
fwait
ret
fistpll
inc
test
mov
dec
pop
cmpb
pop
clc
fs
pop
call
mov
dec
es
xorl
fwait
rcll
enter
pop
dec
fs
or
inc
ror
pop
imul
cltd
movsb
lods
ret
xchg
sbb
jae
lods
fildll
jbe
leave
sbb
stc
xchg
test
xchg
jl
movsb
rcrl
lds
lods
loope
jbe
negl
dec
pushf
xchg
popa
sub
pop
jb
lds
mov
cli
pop
fs
jp
lahf
mov
xchg
pop
mov
sub
add
andl
movsl
lods
xchg
mov
mov
cmp
push
or
es
sahf
xchg
cwtl
xchg
add
xchg
movsb
ljmp
mov
add
xchg
mov
xchg
test
jmp
lcall
dec
push
addb
das
inc
test
pop
pop
test
sti
and
push
lds
sub
fimull
fwait
sbbl
stos
jle
ret
mov
sahf
cli
lret
xchg
inc
or
and
inc
xor
pop
jmp
push
aaa
sub
jl
push
ljmp
lods
mov
jp
add
sbb
test
cmp
pushf
jmp
dec
addr16
add
popf
xchg
add
fadd
movsb
mov
popf
movsb
pop
pop
push
mov
mov
outsb
test
fs
ret
xchg
or
movsb
test
inc
ret
push
ret
test
xchg
ficomps
lods
pop
cld
and
call
cwtl
push
cmpsl
je
int3
cmp
add
push
push
adc
lahf
fsubl
cmpsl
jl
or
arpl
ret
pcmpeqb
cld
mulb
sub
xchg
arpl
popf
sbb
sub
andb
cmp
test
jg
test
xchg
inc
and
mov
xchg
test
inc
or
mov
jb
test
pushf
inc
mov
inc
xchg
and
inc
cs
add
daa
mov
and
sub
sbb
and
fisubs
sbb
fwait
inc
xor
inc
mov
fdivl
xchg
test
sti
add
pop
minps
pop
inc
mov
lds
movsl
xchg
xchg
push
add
add
cs
pushf
inc
pop
xchg
mov
or
push
repnz
and
fdivr
jae
dec
mov
test
xchg
mov
sub
popf
mov
mov
js
or
dec
jle
push
mov
mov
call
addb
dec
sahf
pop
rolb
incl
mov
add
mov
addb
das
inc
test
addr16
adc
pushf
iret
xchg
sub
gs
pop
pop
test
dec
cmp
sahf
dec
xchg
sbb
aas
lcall
push
adc
xchg
inc
pop
jle
jecxz
inc
data16
dec
jbe
outsl
mov
test
popf
mov
fimuls
xchg
pop
lahf
mov
xor
scas
addl
sbb
pop
mov
lods
or
icebp
insl
xor
fs
nop
xchg
int3
xchg
or
add
sbb
pusha
add
bound
rolb
pushf
fstl
pusha
adcb
lods
xchg
pop
push
inc
inc
in
ret
inc
fsubrl
aad
imul
cmp
rolb
jmp
jle
in
push
sbbb
mov
add
addb
inc
in
add
mov
push
rolb
add
jmp
test
popf
jne
lock
loopne
idivb
mov
xchg
mov
test
fistl
adc
mov
xchg
xlat
cmp
dec
roll
mov
push
or
jecxz
mov
sahf
jl
push
push
jno
inc
cwtl
xchg
or
lcall
mov
mov
push
and
addl
mov
pop
inc
inc
xchg
leave
mov
xchg
add
add
xchg
mov
mov
xchg
xorb
icebp
lds
loope
std
addb
pushf
adc
add
add
rcrb
xchg
inc
loope
sahf
xlat
inc
push
fisubs
sbb
mov
inc
call
pop
push
sbb
push
popf
test
add
jb
pop
xor
cmpb
inc
imul
ss
xchg
jle
sbb
in
push
pop
add
lea
iret
xchg
roll
test
inc
fcoms
and
rcrb
push
test
add
add
je
ret
sub
les
rcll
mov
push
adcl
mov
cmp
pop
push
pop
add
pop
xor
sbbb
and
addb
inc
add
aaa
subb
mov
cmp
daa
add
xchg
mov
movsl
dec
jg
pop
fisubrs
es
push
inc
add
adcb
jbe
pop
jecxz
jae
push
popf
fs
pop
mov
adc
ret
popa
test
xchg
ficomps
test
addb
lcall
ss
std
xor
add
lcall
mov
adc
inc
add
adc
cmc
inc
lods
adc
mov
xchg
jp
lcall
mov
shll
test
jmp
push
mov
push
lcall
mov
dec
arpl
stos
popf
pop
add
inc
jp
mov
andl
inc
data16
mov
dec
fiadds
inc
lea
mov
dec
fwait
stos
insl
xchg
add
imulb
lahf
inc
dec
cmpsl
push
inc
iret
inc
pop
jecxz
inc
mov
lea
scas
pop
inc
inc
inc
mov
repz
scas
dec
inc
dec
jecxz
xor
or
hlt
lea
add
xor
add
lea
xchg
push
test
inc
je
fs
inc
rol
jp
add
addl
pusha
andl
hlt
xor
adc
fistps
fsubrp
fs
inc
add
dec
jl
push
inc
jg
ret
sbb
icebp
cld
les
and
popa
xor
pop
arpl
xchg
mov
inc
push
push
and
xchg
popa
fwait
dec
mov
popl
outsl
mov
subb
cmpsl
aam
add
bound
xchg
outsl
out
cmp
pop
cmc
jmp
push
pop
dec
mov
pop
inc
rcrb
jb
std
adc
jge
popa
in
js
cs
xchg
push
hlt
fistps
push
mov
fidivrs
jb
sub
movsb
fbstp
sbb
movsb
mov
lods
add
add
inc
mov
jp
test
pop
mov
and
roll
sbb
fisttps
sbb
enter
xchg
out
or
mov
rorb
inc
je
dec
jae
xchg
adc
lock
inc
push
cmp
aaa
jle
cmp
jle
mov
dec
ret
push
fildll
add
rolb
inc
mov
mov
dec
mov
mov
call
inc
or
inc
push
call
test
mov
cwtl
jg
and
cmc
inc
cmp
test
inc
or
and
cmc
inc
cmp
test
inc
arpl
mov
pop
mov
inc
out
dec
mov
push
mov
or
rolb
inc
adc
pop
push
roll
int3
xchg
inc
inc
inc
sub
mov
pop
scas
mov
cs
lahf
shlb
popf
aaa
or
pop
outsl
mov
cs
pop
shlb
popf
dec
aaa
or
xchg
pop
sub
test
xchg
push
xorl
xor
rolb
push
mov
fmuls
pop
add
notb
inc
outsl
jle
ret
dec
sti
jecxz
faddl
insb
mov
cmp
inc
push
int3
outsb
push
ret
cld
cs
xchg
xchg
ja
std
scas
and
test
xchg
icebp
sub
data16
inc
ret
inc
pushf
push
jl
sub
pop
pushf
adc
lcall
fs
add
mov
mov
xchg
pop
add
or
lods
sbb
add
int3
ret
xchg
scas
and
call
push
pop
mov
mov
sti
sbb
adc
rolb
push
clc
lgs
push
push
lret
rcrl
push
sbb
popa
leave
mov
fdivrp
mov
clc
rcrl
pushf
shr
sti
xchg
jge
mov
lret
lcall
cmpsl
outsb
rcrb
popa
stos
mov
loope
mov
rcrl
je
xchg
xchg
lcall
pushf
xchg
fstpt
pop
mov
ja
dec
insl
pop
dec
xchg
push
loop
rcll
inc
add
subb
push
dec
cmp
js
bound
jb
pop
clc
lock
jle
jl
shlb
out
enter
pop
sub
xchg
addl
pop
push
push
cmp
xor
xchg
ss
push
or
adc
lds
inc
inc
addr16
inc
enter
mov
add
in
test
mov
inc
push
push
mov
or
cmc
rcrl
adcb
loopne
dec
sbb
out
dec
inc
mov
imul
inc
xor
jle
in
les
mov
push
hlt
mov
push
inc
aam
shll
inc
add
mov
sbb
adc
adc
jge
cmc
mov
inc
ds
and
int3
leave
aam
mov
daa
fisttpll
add
pop
int
leavew
or
cs
adc
aam
xchg
mov
push
and
xchg
mov
adc
xorl
jle
mov
repnz
mov
mov
test
faddl
jge
lahf
xor
inc
cmpl
icebp
sub
xchg
dec
les
inc
xchg
shll
rorl
inc
fs
pushf
arpl
dec
pop
xchg
dec
ret
xor
and
loope
mov
sub
dec
test
arpl
shll
inc
inc
push
and
inc
movsb
lea
inc
dec
push
xchg
push
push
in
sub
fs
adc
xor
and
xchg
add
movsb
fdivs
pop
fstl
fmuls
jae
arpl
push
loope
xor
push
gs
aad
pop
inc
xor
test
aad
in
mov
cmp
ret
arpl
in
add
sbb
into
cld
adc
stc
ss
push
add
add
push
mov
test
scas
pop
hlt
data16
movsb
jb
or
dec
mov
test
sbb
mov
inc
and
xchg
jl
cld
xor
xor
lahf
les
jmp
xchg
inc
lods
lahf
push
loope
sbb
faddl
mov
rcrl
add
loop
inc
je
and
sbb
jne
arpl
pushf
fs
mov
loop
andl
sub
cmp
push
loop
dec
jbe
mov
mov
aas
lds
repnz
int3
and
scas
in
push
cmp
sbb
rcll
dec
test
in
cld
xchg
repnz
faddp
popf
lcall
cli
jbe
inc
ficoml
es
push
mov
mov
mov
mov
mov
adc
xchg
aaa
std
push
xchg
inc
aam
pop
xchg
add
and
mov
popa
xchg
cmp
mov
add
and
add
fwait
sub
rorl
cld
add
cmc
gs
adc
add
lea
jne
xchg
push
pop
out
orb
xchg
pusha
inc
ret
push
mov
aam
pop
sub
pop
dec
ret
mov
push
jns
mov
insl
jmp
mov
enter
dec
cmp
cwtl
push
cmp
jns
jle
pop
gs
push
cmp
or
aad
sarl
pop
shl
gs
in
mov
jne
jle
xor
or
pop
daa
aam
adc
roll
mov
fcoml
xor
in
mov
and
add
test
daa
fisubrl
out
xchg
xchg
sti
adc
dec
shll
mov
shlb
pop
jae
repz
loope
inc
cltd
repnz
call
dec
ficoms
call
data16
mov
les
ja
jge
push
inc
and
insl
popa
pop
je
push
jle
pop
filds
dec
addb
shll
dec
jne
call
arpl
gs
lret
inc
mov
in
jecxz
in
enter
daa
je
mov
test
xchg
mov
adc
xchg
cwtl
movsw
pop
or
fdivs
jg
mov
mov
das
movsb
and
outsb
loopne
pop
outsb
and
shll
xor
dec
es
mov
inc
mov
pop
jg
ret
inc
pushf
or
test
xchg
jb
mov
jle
mov
adc
jmp
inc
pusha
lahf
mov
bound
and
xchg
fidivrs
jno
push
or
nop
or
and
pushf
add
jo
adc
lahf
and
out
dec
sbb
dec
mov
dec
fcompl
gs
mov
and
xor
inc
lret
iret
pop
jle
fs
les
incb
insl
sahf
roll
fldcw
dec
aam
and
xlat
pop
mov
jge
jnp
sbb
inc
aas
int3
dec
test
in
add
arpl
xchg
repz
sbb
rcll
lock
out
inc
mov
xchg
sub
adc
adc
std
or
lods
add
mov
ret
aad
push
iret
mov
pop
es
inc
mov
lea
shl
mov
dec
pop
repnz
sub
loope
mov
and
data16
mov
lock
mov
sub
rol
jecxz,pt
movsl
pop
test
data16
aad
sti
in
mov
gs
leave
pop
and
inc
fwait
mov
inc
mov
sti
aaa
push
xchg
imul
loope
sbb
inc
aas
mov
test
inc
test
mov
cmp
imul
int
add
arpl
jge
ficompl
nop
mov
fistpll
subb
inc
inc
addl
lret
loop
mov
in
aad
mov
jbe
gs
adc
ret
in
sub
sub
mov
test
mov
cmp
sbbb
jmp
push
inc
xor
push
add
jecxz
adc
call
sub
pop
mov
sub
push
lahf
ss
shlb
lcall
inc
fmull
rolb
loope
jae
roll
mov
popa
or
lds
fistpll
xor
lock
adc
mov
pushw
and
xor
adc
or
out
fbld
rorl
iret
lea
add
or
fdiv
test
or
dec
shl
lahf
xchg
or
fdivl
mov
and
stos
arpl
jg
fisttpl
data16
stos
adc
push
and
add
push
pop
or
arpl
and
and
fcmovnu
mov
or
movsl
mov
mov
adc
loope
add
cmp
std
in
sub
fidivrl
icebp
daa
fcoms
xor
aad
imul
dec
or
call
sbb
out
adc
inc
mov
cmp
std
popf
xor
roll
cmp
cmp
xchg
adc
and
add
adc
add
xor
shl
repnz
leave
sub
call
repz
and
leave
jl
in
out
fs
jmp
mov
inc
icebp
movsl
jnp
insl
imul
je
pushf
cmpsl
mov
xchg
decl
lahf
jge
mov
cld
jge
jl
mov
xchg
push
arpl
xor
inc
pusha
shl
or
and
xchg
lahf
loope
icebp
sub
aas
addr16
inc
xchg
inc
stos
es
les
push
jns
js
inc
sti
repz
movsl
push
xchg
lcall
or
or
push
stc
leave
adc
add
push
lea
adc
or
outsb
xchg
push
outsl
push
pop
icebp
add
dec
add
cmp
ss
ss
ss
push
cmp
and
xchg
jl
sub
inc
shll
xchg
fs
mov
xor
cs
mov
sbb
pop
loop
clc
outsb
enter
in
pop
sbb
and
xor
mov
pop
pop
push
cld
inc
xor
sbb
outsl
jecxz
jle
ja
xchg
lods
fnsave
add
pop
pop
mov
mov
scas
pop
outsb
out
imulb
outsb
cwtl
outsb
push
pop
lahf
jo
pcmpgtb
jnp
int
lea
fcompl
cmp
and
pop
jbe
lahf
mov
push
add
dec
push
jecxz
out
aad
test
es
movsb
fsubr
push
pop
push
add
add
pop
mov
jg
movsl
in
push
cli
nop
movsb
in
adc
push
ss
jmp
cmp
cmp
jae
push
data16
loope
movsb
fsubr
push
sbb
add
xchg
sbb
or
pop
jecxz
lds
stos
inc
sbbb
mov
push
insl
adc
inc
test
push
sbb
out
inc
jnp
lock
xor
addb
pop
aas
shl
xor
pop
fisttpll
imul
mov
in
pop
inc
ja
jge
xlat
push
adc
loope
mov
mov
insl
mov
sbb
xor
and
sahf
inc
dec
pop
lret
ljmp
jge
adc
andl
sub
mov
inc
test
or
adc
dec
lahf
lcall
mov
shl
sbb
lret
pushw
mov
cmpsb
les
getsec
into
ret
in
inc
std
cmc
inc
jmp
mov
and
jno
xor
ss
andl
push
or
dec
jne
jg
clc
and
shll
inc
inc
inc
adc
stc
add
jl
mov
mov
jbe
xchg
inc
jp
add
shlb
inc
stc
sbb
and
sbbl
addr16
inc
xor
push
repz
pop
loop
jmp
jb
add
push
pop
mov
sub
inc
arpl
dec
dec
mov
mov
xchg
xchg
inc
orl
sub
push
std
jbe
lds
inc
mov
xchg
push
rorb
loop
xchg
popa
std
cld
add
mov
inc
or
mov
test
and
lea
in
sbb
mov
lds
sbb
insl
jbe
adc
pop
lds
loope
bound
data16
xchg
es
adc
cld
dec
in
inc
popf
adcl
cmc
push
out
mov
aad
das
xchg
btc
fiadds
leave
ss
repz
inc
sbb
bswap
push
ret
push
gs
arpl
pop
inc
sbb
inc
test
xchg
adc
xchg
push
mov
ret
pushf
in
fiadds
pop
nop
aam
or
mov
ficoms
mov
pop
orl
cwtl
or
jle
xchg
in
xchg
adc
arpl
je
aad
inc
int3
lds
inc
shl
cmp
push
push
jmp
notl
inc
lea
dec
jmp
adc
les
shll
test
icebp
ja
dec
ret
data16
jns
fs
sti
fbld
fwait
outsl
jmp
jbe
lea
data16
jmp
mov
fwait
sbb
inc
push
lea
xor
bound
dec
loop
pop
pop
cmpsl
subl
mov
inc
in
push
sbb
js
jo
lods
add
dec
mov
shlb
mov
and
xchg
inc
rolb
jb
xor
dec
jle
inc
push
inc
xor
loop
jge
mov
frstor
cmp
mov
loop
repnz
inc
cmpsb
movsl
imul
or
xor
push
mov
mov
out
add
push
or
jbe
inc
pop
pop
cmp
cmpsb
mov
or
in
jecxz
mov
aas
ljmp
mov
sbb
and
lret
aam
std
mov
aam
int3
test
mov
cmp
fstl
lds
in
xor
push
adc
pop
push
ja
add
jp
pop
dec
mov
add
lahf
inc
jno
les
mov
jge
addr16
ret
es
push
flds
mov
ret
rep
push
lock
jge
pushf
inc
xor
lds
add
xor
mov
jns
push
rclb
call
push
cld
add
push
aaa
js
fistps
lahf
xchg
idivb
mov
jmp
add
aad
add
and
or
xor
aam
inc
mov
xchg
add
movl
arpl
popa
jb
inc
lret
mov
dec
fcoml
mov
pop
test
mov
repnz
mov
test
fsts
sbb
scas
in
pop
addr16
cmpsl
jae
in
inc
jle
mov
cmp
test
dec
popa
sbb
sahf
add
inc
jae
aam
rclb
test
lahf
mov
mov
push
inc
lods
inc
sbb
test
cld
mov
xchg
fwait
subb
stos
pop
fists
mov
ds
aad
or
fwait
out
jle
cld
adc
adc
je
and
push
popf
std
jbe
mov
pop
cmp
jecxz
and
clc
mov
cmp
cmpsl
xor
bswap
push
test
es
mov
incl
rcrl
imul
mov
dec
sahf
aad
xchg
jb
and
movsb
jge
pushf
out
clc
mov
jg
inc
in
mov
or
push
inc
loopne
lods
lret
cmp
mov
or
inc
rcll
sbb
mov
lds
jnp
or
push
std
movsb
jg
lret
sti
arpl
int
cmp
pop
rcr
mov
jge
sbbl
jge
adc
pop
mov
data16
jmp
jle
fstl
in
dec
jge
sahf
dec
ret
roll
pop
sub
mov
cmp
dec
nop
test
in
pop
movsb
pushf
sbb
fbstp
inc
data16
inc
loope
jp
and
sub
inc
ffreep
cmpb
fdivrl
adc
sbb
lea
and
jecxz
or
pop
enter
addr16
fstpt
fmull
dec
mov
ret
mov
and
inc
lahf
insb
or
shr
mov
fdivl
or
xchg
xchg
cmp
and
fnsave
and
mov
movsl
adc
cmp
sarb
sub
stc
addl
fs
fbld
mov
mov
adc
inc
inc
cmpsb
add
or
stos
cltd
outsl
sbb
and
aad
test
xor
cs
jo
ret
lds
push
lahf
push
mov
sahf
mov
mov
sti
pop
lds
push
pop
ret
aam
popf
and
shr
ds
dec
jb
pop
push
in
push
imul
adc
imul
push
loop
mov
test
or
mov
jno
movsb
jecxz
push
stc
pop
test
mov
add
push
pop
mov
dec
loopne
imul
push
out
insl
shl
daa
sub
jge
loopne
imul
dec
fcmovnb
sarl
sub
fwait
addr16
sbb
sbb
dec
data16
cmpb
bound
fmuls
cmp
lea
sti
sahf
sub
cwtl
call
mov
xor
pop
jmp
push
mov
sub
pop
xor
or
inc
mov
mov
jp
inc
dec
es
movsl
leave
inc
fmulp
push
xchg
mov
data16
movsl
cwtl
roll
ljmp
lods
push
mov
jge
fldenv
clc
adc
dec
data16
pop
addr16
insl
pop
jbe
cli
sbb
pop
cmpsl
inc
push
mov
mov
cld
aam
in
aas
fwait
test
data16
adc
repz
sub
notb
inc
lahf
or
test
pop
in
lea
push
leave
js
jle
dec
push
inc
les
sbb
out
pop
setbe
lock
xor
dec
fstl
pop
movsb
jmp
sarl
cltd
jbe
mov
test
lret
cmp
jge
adc
leave
adc
pop
in
popf
cmp
mov
aad
and
xchg
aam
mov
pop
jl
in
and
pop
movsl
enter
mov
pop
mov
pop
test
sbb
and
push
cmp
roll
fisttpl
enter
movsl
test
push
and
dec
cmpb
xchg
push
sub
adc
in
adc
es
push
mull
xchg
inc
out
inc
out
inc
mov
jl
pop
jns
jmp
cmp
sahf
sub
shl
mov
jb
mov
xchg
jecxz
lahf
cmpsl
test
imul
jl
xchg
sbb
sub
dec
mov
add
jge
out
adc
inc
pop
mull
shll
fdivl
cwtl
xchg
jno
jnp
dec
mov
jnp
pop
mov
xchg
imul
xchg
iret
xchg
in
cmp
arpl
jg
sub
sbb
jge
pushf
add
mov
insl
xchg
jecxz
cmp
rolb
clc
adcb
mov
xchg
pop
mov
dec
data16
in
cmp
orb
adc
xchg
mov
lret
mov
in
and
push
pop
mov
je
lahf
mov
or
jnp
pop
fwait
imul
lods
fwait
mov
ret
pop
inc
pop
push
int
inc
push
adc
or
cltd
popfw
movsl
mov
arpl
xor
push
add
inc
jp
call
adc
cmp
mov
addr16
pop
sbb
and
test
cld
lahf
xor
mov
sbb
jp
addr16
and
dec
mov
pop
inc
sbb
or
cltd
mov
jb
jge
and
push
in
sbb
adc
repz
and
ds
inc
add
repz
push
sbb
xor
sbb
pushw
jp
mov
mov
shll
in
sbb
icebp
dec
mov
dec
adc
sbb
dec
loopne
mov
inc
sti
mov
daa
or
mov
and
xor
pop
movsl
pop
cld
fsubs
pop
je
pop
xlat
inc
pop
fildll
loopne
xchg
or
pop
push
sbb
push
out
pop
jle
ret
lahf
jmp
test
mov
sub
repnz
jg
pop
cld
ret
ret
adc
push
lds
push
sbb
adc
fcoml
or
dec
add
movl
adcl
repnz
sarb
pop
add
aas
adc
xchg
mov
shl
addb
mov
cmp
mov
call
test
push
sbb
sete
ja
xchg
sbb
in
imul
inc
imul
push
fildll
ret
mov
fidivrs
bound
mov
jecxz
into
lds
dec
xlat
rcll
test
out
jg
loopne
addr16
fcomp
cmp
mov
rclb
cld
mov
addl
shll
add
jecxz
pop
sbb
pop
dec
inc
lcall
fstps
adc
jns
adc
push
inc
andl
icebp
adc
inc
and
lret
mov
ffreep
sarb
mov
xchg
jne
jns
adcb
push
loopne
jl
adc
ss
mov
xchg
push
dec
bound
xchg
and
shll
lods
inc
xchg
cmp
pop
adcb
and
xchg
mov
pop
sbb
mov
fldl
in
fs
jecxz
in
ret
xchg
and
cmpsl
bound
fcoml
jg
mov
jecxz
inc
and
test
inc
adc
cltd
in
xchg
mov
add
jno
pop
push
ret
sbb
xchg
adc
add
or
jbe
loop
inc
mov
dec
mov
xor
hlt
jg
mov
adc
mov
int3
leave
inc
push
push
or
in
sbb
sub
cmpsl
mov
pop
mov
sbb
leave
ret
push
push
mov
imul
push
fadds
jmp
adc
enter
xor
lea
jmp
adc
adcb
jae
dec
imul
jmp
dec
bound
shll
push
scas
ret
or
scas
jb
jecxz
rclb
repz
dec
je
lock
mov
cmpsl
pop
and
push
inc
add
xchg
mov
mov
inc
stos
lea
xor
inc
es
pop
cmp
lcall
dec
std
and
pushf
mov
loop
push
popa
sarb
icebp
jle
sarl
push
jmp
repz
mov
dec
decl
jmp
shll
adc
mov
in
lock
fs
mov
rcll
add
lods
or
mov
rcl
push
sub
push
fisttpl
lcall
and
or
dec
sbb
insl
push
sub
push
mov
out
cmp
inc
pop
push
call
cmp
enter
imul
xchg
dec
sarb
cwtl
loopne
mov
pushf
cmp
add
add
repz
rolb
repnz
gs
in
inc
imul
rcrl
sub
xchg
lcall
ret
adc
jecxz
cs
dec
mov
add
scas
mov
inc
sbb
add
dec
add
sbb
dec
jge
adc
and
rol
cmpsb
pop
mov
cmpsb
fisubs
pop
mov
sbbl
jb
js
pop
out
pop
setbe
push
cmp
ss
es
inc
mov
mov
push
push
jmp
jno
cmp
dec
cmp
inc
xchg
cmp
jl
mov
cmpb
fildll
ret
imul
push
jecxz
dec
jl
test
rclb
aam
mov
cs
pusha
jl
jl
mov
stos
movsb
and
mov
mov
push
mov
pop
jl
add
push
jg
xorb
mov
ret
inc
shrl
sbbb
inc
out
test
into
add
push
cwtl
jg
mov
mov
outsl
lea
arpl
sarl
in
popa
sar
dec
dec
dec
inc
jl
pusha
inc
adc
int
fstps
pop
mov
adc
sub
dec
mov
sub
mov
mov
add
jg
mov
loope
fisubrs
jl
push
inc
add
sbb
inc
mov
dec
movsb
imul
mov
or
cwtl
loopne
push
inc
lahf
bsf
mov
adc
les
inc
adcb
push
pop
mov
xor
fld
and
push
jl
jge
pushf
lea
mov
repnz
lahf
push
sbb
inc
jle
inc
push
gs
bound
out
cmp
addb
insl
inc
xchg
out
pop
pusha
jp
cmp
mov
dec
or
cmp
add
sahf
into
adc
jmp
push
inc
ret
cmp
pop
cmp
inc
or
inc
inc
fwait
push
fcmovbe
pop
push
in
loopne
pop
into
cwtl
into
mov
cwtl
pop
out
mov
mov
mov
imul
xchg
inc
les
and
xchg
inc
mov
mov
xchg
and
inc
mov
mov
cs
into
loop
sbb
call
mov
sbb
test
je
arpl
addr16
pop
sub
inc
pop
pop
cmp
jg
xchg
imul
and
into
pop
movsl
cmp
inc
and
cmp
repnz
dec
imul
mov
daa
sbb
and
inc
pop
dec
cmpl
rcrl
mov
call
mov
or
mov
jb
mov
jmp
data16
inc
dec
jbe
je
dec
inc
mov
inc
mov
fiaddl
lods
popf
es
bound
xchg
inc
mov
xchg
push
invd
mov
in
or
mov
cmc
add
enter
inc
adc
xchg
aad
leave
mov
movsl
cmovp
push
cmc
mov
hlt
fdivs
andl
push
fcmovnu
popf
push
lret
roll
xchg
pop
inc
xchg
mov
pop
lods
pop
addb
push
xchg
dec
inc
dec
decb
scas
ret
mov
pop
in
push
jl
xor
push
sub
inc
mov
jnp
push
sbbb
inc
lods
insl
data16
fisttpl
std
xchg
movsb
cs
dec
xchg
into
xchg
add
jp
push
xchg
sbb
push
sahf
xchg
inc
add
inc
fs
inc
and
add
adc
push
pop
add
lods
lea
in
loopne
test
leave
aad
pop
pop
push
inc
rolb
movl
inc
mov
mov
inc
and
dec
bound
fisubl
or
shrb
or
sbbb
pop
cli
adc
sub
movsb
andb
jmp
mov
mov
mov
dec
adc
cwtl
mov
lods
shrl
sbbl
inc
inc
xchg
lds
lahf
mov
sbb
xchg
add
dec
adcl
cmpsl
int3
les
lahf
push
jmp
mov
adcl
xchg
rcll
adc
orb
jg
and
xchg
xor
je
lea
or
lea
or
fwait
xor
jg
or
inc
mov
push
push
xchg
js
sahf
repz
inc
mov
lea
inc
dec
sbb
pusha
sbbb
roll
rcrb
or
fimuls
ret
fcompl
ret
pop
sbb
fnstsw
or
jbe
xor
xchg
jg
adc
arpl
lea
fs
pop
jg
adc
bound
xor
je
lea
jb
jg
adc
jne
xor
je
lea
in
std
jg
adc
push
mov
rcrl
jae
xor
adc
cmpb
xchg
mov
lea
or
dec
das
sbb
jg
adc
les
xor
or
dec
mov
les
mov
xchg
mov
outsb
mov
xchg
lea
nop
adc
je
lea
les
cmovs
jg
mov
lea
js
push
or
dec
ficoms
inc
push
sbbl
dec
or
jmp
push
je
lea
dec
dec
push
jg
mov
cld
addr16
adc
call
rorl
jg
adc
sarl
push
jne
xchg
xchg
outsl
dec
jae
sub
lea
sbbb
pop
jb
test
mov
lock
dec
cmp
bnd
dec
out
jg
adc
cmc
mov
lea
xor
xor
xor
mov
lea
jg
adc
mov
mov
mov
dec
mov
mov
mov
stos
xchg
scas
je
pop
cwtl
mov
lea
mov
xchg
mov
sbb
or
or
cmpsb
xor
or
pop
lods
pop
pop
mov
dec
cmpsb
xor
dec
mov
pop
dec
lods
dec
push
scas
or
cmpsb
xor
xlat
mov
int3
fsubrs
cmpsb
xor
insb
mov
js
insl
lods
dec
jns
je
pop
ja
addr16
mov
jmp
imull
clc
pop
ljmp
sub
dec
cmp
mov
sub
lods
dec
stos
scas
je
pop
lods
mov
mov
mov
adcl
mov
pop
lock
test
adc
inc
mov
xchg
inc
shlb
xorb
xchg
data16
inc
xchg
add
inc
test
popa
lea
xchg
loopne
pop
and
push
lcall
mov
adc
inc
and
xchg
nop
add
jbe
bound
add
fnsave
call
and
inc
mov
shll
mov
fsubrp
dec
mov
pop
push
sbb
jb
sti
daa
xchg
lea
ja
shr
rcl
push
ror
sub
jmp
jecxz
add
xchg
sub
sub
stc
out
lret
hlt
mov
inc
inc
sub
cs
mov
fwait
ss
inc
inc
inc
aas
jp
jg
outsl
addb
add
pop
in
aad
pop
pop
fistpll
push
cli
xchg
cmp
and
push
xchg
into
nop
and
outsl
sbb
sbb
xchg
push
in
mov
inc
cmpsl
addr16
mov
add
cmpsb
stos
inc
xchg
inc
pop
cld
add
mov
jge
aam
lea
mov
mov
pop
lret
in
and
test
mov
xor
int3
scas
mov
sub
pop
aas
movb
and
scas
testb
aam
pop
mov
sbb
xchg
jecxz
in
xchg
subl
pop
fs
mov
push
insl
pop
fwait
jb
jecxz
ret
lods
int
js
or
scas
jmp
ljmp
rorl
or
cmp
xor
pushl
ret
jmp
stc
pusha
or
call
mov
pushf
jmp
mov
pushf
pushl
ret
aaa
cmc
push
imulb
and
cmp
movsb
lock
imul
pop
outsb
pop
xor
nop
push
push
shll
mov
int
pop
inc
sub
jl
leave
test
imull
add
loope
inc
cmp
les
and
xorl
mov
lock
xchg
adc
mov
test
sub
mov
lock
fwait
out
xorl
pushf
lea
jne
lahf
pushf
lahf
movb
call
jmp
jmp
cmc
push
clc
add
movb
pushf
pushf
pusha
lea
jmp
loope
sbb
add
add
sub
sub
add
add
leave
jo
add
add
add
add
add
sbb
add
add
push
pop
sbb
add
add
add
add
imulb
add
add
add
cmp
add
ret
adc
pop
sbb
add
sub
add
add
jmp
in
or
push
int3
repz
mov
lret
jecxz
hlt
arpl
bound
scas
add
cmp
dec
mov
ficomps
dec
je
int3
int
test
es
push
popf
dec
shll
cmp
mov
pop
xor
lcall
cltd
xor
mov
inc
add
aad
mov
data16
fdivl
insl
imull
cmc
leave
fwait
insl
inc
clc
lret
mov
cmpb
adc
ret
rol
scas
mov
mov
jg
adc
fdivrs
outsl
mov
scas
xor
jmp
inc
xchg
loop
andb
push
clc
out
mov
shll
sub
push
pop
push
lahf
sbb
push
xor
cmpsb
jle
cmp
cmp
pop
adc
sub
add
adc
push
jmp
lea
ja
push
lea
ja
dec
neg
inc
sub
bsr
sbb
sets
cmc
add
bts
mov
mov
mov
inc
sbb
rcl
test
mov
stc
push
repnz
jmp
pusha
xor
pushf
pushf
pushl
stc
repnz
push
pushf
call
lahf
mov
jmp
lea
jl
jae
btc
mov
lea
xor
sar
cmc
mov
sbb
btr
sub
mov
jmp
ret
clc
push
test
loope
insb
adc
pop
fnstsw
sub
std
popf
ds
jne
out
enter
loop
arpl
push
jo
push
in
mov
adc
lock
push
ret
test
sub
mov
sub
das
ljmp
aaa
or
pusha
das
insb
imul
sbb
xchg
test
out
out
cmp
setle
lea
mov
jmp
pop
inc
int3
clc
push
add
push
ljmp
dec
shrb
into
fbld
jl
in
push
outsb
sub
inc
nop
bound
mov
rorl
and
inc
iret
push
and
pop
mov
mov
xor
inc
adc
jno
xor
inc
cmp
or
dec
add
arpl
call
je
stc
push
lahf
arpl
rcl
cwtl
jmp
mov
fnsave
fbstp
lock
call
fildll
stos
cli
xchg
sub
outsl
fiadds
fadd
aaa
adc
je
clc
scas
fisubrs
jg
iret
addr16
cld
xor
or
fcmovnb
gs
sub
orl
adc
cli
push
js
mov
frstor
icebp
ret
fwait
mov
ja
sub
stos
dec
xor
in
jl
pop
scas
jno
cmpsb
push
out
sahf
stos
outsb
shl
leave
mov
push
sub
mov
inc
icebp
pop
mov
and
rclb
daa
cs
lret
aaa
and
dec
lea
icebp
mov
mov
insl
adc
jmp
add
adc
push
mov
mov
dec
mov
mov
jmp
pushl
lea
je
bt
clc
push
add
push
pushl
pushl
lea
jmp
movl
pushf
pushl
lea
js
pushf
movl
push
mov
pushf
lea
jmp
pushf
push
cmc
sub
lea
push
push
inc
lea
pushf
pusha
pusha
lea
call
pushf
jmp
rep
lea
mov
push
pushf
lea
jmp
cmp
not
ror
mov
jmp
adc
jns
push
or
dec
lods
in
js
or
xlat
lahf
lret
std
daa
pop
and
jnp,pn
lods
cmp
scas
xlat
mov
out
inc
pusha
sbbb
cmpsl
and
pop
lock
sbb
add
add
or
sbb
popa
dec
jno
mov
addr16
mov
lea
mov
aam
xorl
imul
jg
inc
pop
xlat
mov
inc
ds
call
movb
pushf
movzbl
mov
lea
mov
lea
mov
lea
jmp
lea
jae
call
call
sbb
sti
push
adc
outsl
pushf
mov
test
out
ret
jmp
inc
adc
sarb
xchg
insl
lret
leave
outsb
aam
pop
into
xchg
cmc
lret
hlt
test
mov
add
inc
cltd
mov
xchg
xor
and
out
cmp
add
into
dec
cmpsl
add
das
mov
push
addr16
or
ja
pop
add
leave
cld
push
out
fdivrs
lods
mov
clc
cmp
iret
and
xchg
aam
add
mov
imul
pop
dec
add
push
push
lahf
mov
andl
aas
test
int3
jb
sbb
ljmp
cli
push
xor
lods
out
jl
jne
sbb
out
and
pop
cmp
call
add
sbb
sbb
sbb
das
ljmp
add
add
test
clc
call
call
test
or
jmp
ficoms
test
mov
xchg
daa
flds
js
dec
insl
aad
mov
dec
sbb
int3
push
inc
testl
pop
sbb
out
lock
pop
call
push
out
aaa
ja
add
jmp
repnz
daa
mov
or
sub
stos
push
sarb
outsl
aas
lock
scas
std
push
pop
repnz
mov
pop
sub
adc
jns
add
cmp
push
xor
test
imul
movb
shll
lcall
and
jp
xchg
jge
xchg
cld
mov
pushf
aaa
cltd
dec
cmp
ja
push
add
in
mov
xor
fdivrs
mov
push
mov
sarl
cs
mov
mov
popf
jle
fcmovb
dec
mov
dec
inc
daa
mov
mov
fdivs
cmp
sbb
inc
sahf
add
pop
out
test
mov
push
dec
movsb
pop
addl
push
dec
movsl
out
inc
push
ljmp
and
popw
push
into
mov
stc
inc
out
test
push
add
les
mov
mov
mov
sbb
sub
outsb
cmp
xchg
cmp
or
sahf
lret
out
push
fadds
testl
or
mov
push
mov
clc
fisubrl
push
jb
outsl
dec
lods
mov
adc
fadds
in
cmp
sub
push
pop
repz
mov
arpl
sub
arpl
pop
cmpsb
stc
inc
sub
fdivrl
lahf
lock
jg
sub
fsts
nop
cmp
or
lret
pop
mov
fmull
outsb
js
cmp
sbb
mov
cs
xchg
stos
mov
sbb
test
jmp
sub
and
pop
pop
mov
stos
inc
mov
xchg
test
out
xchg
adc
jmp
xchg
jp
pop
cli
fnstcw
cmp
in
mov
jnp
and
into
adcb
mov
cmp
push
inc
jmp
scas
pop
jecxz
push
push
jmp
popa
mov
xor
cmp
xchg
jb
data16
jge
fsubrs
mov
mov
xor
xor
lret
mov
xchg
fldcw
clc
imul
int3
mov
mov
in
pop
push
mov
hlt
les
and
std
out
xorb
fs
mov
fnstcw
mov
in
sub
or
cmp
mov
mov
push
sbb
nop
bsf
cmc
aaa
push
lods
xchg
negb
push
sahf
xchg
aas
mov
cs
enter
dec
lret
and
sbb
xchg
imul
jmp
pop
das
push
repnz
addl
sub
imul
and
mov
push
mov
mov
je
popf
aaa
add
cltd
imul
xchg
xor
inc
es
push
adc
repz
sbb
and
sub
and
stc
mov
pop
lahf
pop
cmpsl
push
lds
insl
xchg
push
shlb
xchg
mov
loop
pop
pop
mov
pop
pusha
shll
out
or
cmc
push
push
rcrl
sub
popa
and
insb
bound
int3
mov
cmp
add
scas
ja
or
and
sbb
xchg
in
cltd
dec
test
ficoms
rcrb
mov
movsl
adc
aad
pop
in
cmc
cmp
pushf
pushf
lea
jae
clc
mov
call
add
inc
gs
outsl
fs
gs
imul
add
test
or
pushf
add
pusha
cmp
call
roll
add
mov
lods
rol
mov
jle
xchg
daa
kmovb
lret
adc
mov
mov
ljmp
mov
popa
lea
sbb
bound
inc
add
cmpsl
add
sbb
mov
imul
adc
mov
jbe
xchg
hlt
mov
loopne
xchg
ljmp
cmp
add
cmp
xor
sbb
add
inc
in
and
mov
stos
sbbb
aaa
pop
aaa
enter
repz
sub
xor
add
xchg
js
jle
sub
sbb
nop
jo
sti
fs
movb
out
pushf
sbb
js
xchg
and
jne
cmc
aaa
cmc
mov
lods
in
aam
xchg
jb
dec
ljmp
xchg
dec
jnp
fcoms
leave
aad
popa
xlat
je
mov
pusha
xor
cmpsb
out
out
out
jg
jge
gs
xlat
mov
xchg
mov
hlt
pop
pop
scas
das
jbe
and
pop
add
test
adc
jnp
in
hlt
adc
js
cmp
mov
xchg
xchg
mov
sub
mov
jl
xchg
jbe
mov
popa
ret
adc
adc
sbb
stos
leave
lock
fsts
sub
xlat
dec
fwait
xor
jecxz
data16
movq
push
je
jae
dec
mov
call
xchg
cmp
cmp
in
scas
movsl
scas
mov
xor
je
cwtl
imul
inc
mov
imul
in
add
mov
or
call
pushf
call
cmp
add
jae
pusha
movzwl
sub
sbb
movzbw
sbb
mov
test
bt
test
jmp
cmc
cmp
push
lea
jne
pushf
jmp
cmpsb
movsl
pop
add
bound
cmp
pop
lahf
mov
cld
mov
mov
nop
mov
dec
mov
enter
std
push
jmp
sub
adc
pop
jbe
add
stos
push
lret
rcr
and
dec
lret
aaa
sahf
dec
loope
aam
int3
and
mov
pop
xor
and
fdivrs
jp
sahf
cmpsl
dec
jg
fs
leave
fiaddl
cmp
insb
insb
add
rcr
jp
int
imul
movb
call
call
cmp
pushl
push
lea
ja
clc
imul
jmp
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
test
ret
add
push
mov
mov
je
push
das
push
add
mov
cwtl
ja
jle
enter
out
adc
dec
inc
shll
outsb
add
lret
rorl
mov
cmpb
loope
in
xchg
mov
cmpsb
sbb
mov
rcr
add
pop
in
ss
insb
sarl
dec
jbe
push
push
jns
and
scas
mov
jae
pop
jp
pop
inc
add
add
inc
gs
jne
jb
outsb
je
push
dec
add
movl
call
lea
jne
movzbw
inc
shrd
clc
mov
adc
bswap
sub
shrd
cmp
mov
pushf
pushl
sub
pusha
test
pushl
popl
push
stc
cmp
bt
cmp
pushf
push
lea
ja
push
xor
sar
sub
and
dec
sets
pop
add
stc
ror
pusha
mov
rcr
or
stc
mov
pushf
jmp
cmpb
mov
pusha
lea
jne
bsr
aaa
sbb
sub
aaa
rol
movsbl
bsr
mov
not
rcr
rcr
add
jmp
add
xchg
add
ret
test
fistpl
or
sub
lcall
cmpsl
lret
outsb
rcrl
in
jo
xor
inc
adc
test
adc
inc
sbb
lcall
mov
mov
bound
pop
clc
dec
test
imul
aad
mov
jns
inc
push
stc
and
jmp
subb
xchg
fwait
add
cmp
stos
mov
mov
filds
mov
clc
jmp
mov
xor
adc
popa
repz
negl
add
pushf
in
je
cmp
pop
subl
mov
lods
stos
mov
and
call
mov
mov
popa
pushf
push
lods
xchg
xor
stos
addr16
pop
jb
push
mov
inc
mov
nop
mov
outsb
in
sub
dec
dec
jmp
mov
mov
into
into
into
inc
js
into
dec
stc
pop
shrb
test
dec
rorl
jge
rol
and
sahf
lock
jne
or
in
mov
sub
xchg
ljmp
cmp
push
mov
jae
mov
out
xchg
out
lea
pop
ljmp
nop
mov
add
das
insb
pop
mov
mov
xchg
push
or
mov
cmp
sbb
sbb
fnsave
stc
push
sub
mov
or
test
mov
mov
jmp
add
pushf
cmp
test
mov
sub
je
cmp
cmc
bt
test
jg
pushf
lea
je
pushf
pushf
cmc
test
add
pusha
bt
pushf
cmp
call
jmp
xchg
mov
pop
imul
lock
mov
hlt
cltd
cmpsb
into
dec
aad
test
dec
rcrl
cmp
xchg
mov
adc
lods
inc
sbb
int3
cmpsl
stc
mov
xor
or
and
sbb
jge
lock
push
dec
test
and
jno
popa
daa
pop
ljmp
push
push
fucom
mov
mov
xchg
aas
mov
add
cmp
dec
ds
out
mov
movsl
or
xor
lea
mov
dec
mov
add
and
sbb
in
daa
cmp
stos
ja
out
cli
cmc
out
mov
push
pop
lods
dec
mov
mov
pusha
mov
mov
mov
test
lea
push
adc
inc
inc
test
xchg
push
jle
mov
cmp
xchg
loop
fs
jne
setp
pusha
mov
movb
bswap
movsbl
lea
not
mov
movzbw
movsbw
lea
pushf
movl
call
call
lea
mov
pushf
push
pushf
pusha
pushl
ret
add
inc
or
pop
cmp
add
lret
xchg
cmp
iret
dec
arpl
aam
dec
cmp
jno
dec
cwtl
rcrl
fcomi
shlb
cmp
mov
cs
ffreep
mov
or
inc
add
sahf
dec
leave
lock
mov
out
ljmp
cld
addr16
or
and
lock
sub
or
or
iret
int
loopne
sahf
dec
push
jb
dec
mov
mov
fnstcw
sarb
dec
or
test
ret
mov
stos
rclb
dec
lcall
aaa
popl
call
jmp
cmc
jmp
repnz
movw
pushl
call
movl
call
add
cmc
jmp
xchg
lds
imul
stc
test
sub
xchg
daa
mov
push
or
jmp
pop
out
xchg
cmp
fimull
push
fnstsw
out
add
cmc
lret
sbb
add
fistps
lcall
scas
je
mov
es
imull
and
arpl
or
inc
mov
ds
movsl
or
rcr
pop
push
add
jbe
inc
push
sbbb
jo
or
mov
imul
int3
mov
insb
pop
mov
mov
int
pusha
unpckhps
nop
cmpsl
push
jge
push
mov
in
int
xchg
and
in
xchg
sti
inc
lods
enter
in
pop
enter
mov
out
inc
jp
pushf
je
into
movsl
inc
pop
popa
daa
mov
dec
cmp
js
mov
movb
sub
bt
clc
call
pusha
pushf
jmp
sub
pop
or
fpatan
inc
cmpsl
cltd
pusha
and
out
mov
jp
outsl
pop
pop
xor
mov
adc
xor
push
jl
mov
or
outsl
mov
outsb
push
mov
jmp
jne
mov
sahf
mov
stc
sbb
add
sbb
xor
pop
loope
ja
pop
cwtl
loopne
popf
xchg
mov
repz
sarb
lcall
std
mov
fldlg2
dec
aad
jo
or
les
xchg
push
ret
rcr
xchg
xor
add
inc
pop
push
inc
inc
mov
jmp
lcall
in
mov
xor
and
add
cmp
and
mov
shrb
movsl
in
fs
xchg
std
fmul
inc
movsl
std
sbb
push
inc
aas
movsl
je
inc
inc
jbe
add
ljmp
cwtl
orb
hlt
sahf
repnz
pop
mov
out
std
and
lahf
jp
or
mov
cmp
int3
sub
mov
call
fcompl
imul
shr
sti
es
outsb
sub
test
sbb
dec
sahf
cmpb
sbbb
xchg
xchg
js
les
mov
jge
ret
jno
popa
mov
add
cld
xchg
repnz
aam
xchg
dec
outsb
mov
inc
rclb
inc
adc
cwtl
movsl
sahf
movl
jmp
jmp
imul
push
mov
inc
mov
pop
imul
push
add
push
test
pop
mov
cmp
shll
daa
jb
imul
push
and
int3
out
inc
je
inc
xor
cmp
xlat
push
sub
push
ds
out
jbe
push
and
test
sub
cmp
ljmp
in
mov
mov
sub
pushf
clc
add
repnz
out
stos
mov
pop
mov
mov
push
repz
mov
inc
mov
lcall
pextrw
sahf
mov
cmc
sahf
ret
ret
dec
xchg
ss
cmpsb
in
fistps
xor
inc
and
push
adc
leave
xchg
add
test
xchg
cmpl
xor
jecxz
mov
or
jmp
repnz
mov
xorb
add
push
lds
mov
lret
and
or
jbe
jecxz
cmp
dec
les
push
ss
into
mov
xchg
sbb
or
adcl
push
add
pop
inc
pusha
jle
out
xchg
std
and
lds
dec
xorb
push
faddl
xor
mov
inc
je
lret
pop
inc
popa
push
mov
fcompl
or
inc
inc
out
lahf
js
movsl
inc
ja
cwtl
mov
call
gs
test
gs
xchg
inc
pop
push
es
dec
pop
out
push
add
mov
andb
cmp
test
sti
in
add
sbb
js
mov
pop
test
insb
clc
add
popa
fs
pop
insl
es
add
ds
hlt
in
pop
repnz
jle
lods
inc
sbb
sbbl
mov
popa
pop
or
mov
das
dec
adc
jnp
push
sbb
xor
and
test
leave
insl
mov
jmp
jae
pushf
ss
add
dec
mov
pop
pop
and
push
adc
inc
pop
xchg
das
into
fisubl
mov
push
icebp
mov
sbb
jne
mov
and
dec
lea
pop
out
push
jecxz
mov
inc
insl
ret
xchg
mov
push
add
ret
mov
pop
mov
push
popl
ds
and
or
in
cmpsl
cmpb
call
jle
aaa
dec
mov
outsb
or
lcall
vhsubpd
mov
push
jne
nop
or
pusha
pop
ljmp
xor
icebp
xchg
testb
inc
cmp
push
xor
push
lock
pop
push
cwtl
adc
mov
add
insb
mov
mov
inc
test
enter
or
push
add
gs
fisubrl
mov
in
and
inc
fnstcw
push
data16
inc
push
fcoml
bound
sbb
imul
cmpsb
cld
sbb
jl
push
andb
mull
dec
inc
add
test
mov
xchg
jmp
mov
mov
aaa
push
sarl
push
iret
mov
cltd
shlb
cmpsb
sahf
stos
xchg
mov
cmp
pop
shlb
addr16
pop
daa
movsl
mov
xor
push
jecxz
sbb
lcall
and
sbb
push
daa
pop
or
movsb
push
sbb
jge
and
xchg
pushl
inc
daa
les
sti
and
sahf
sbb
aaa
push
in
push
ds
sbb
iret
popa
mov
in
mov
add
mov
or
adc
push
inc
jbe
add
fwait
in
cs
imul
into
fisttpll
adc
push
jno
addb
or
call
cwtl
gs
inc
adcl
jnp
rorb
mov
mov
pop
sub
loope
enter
add
and
loope
push
jecxz
repnz
inc
adc
bound
mov
xchg
ds
lea
stc
mov
je
push
sbb
push
lods
sbb
faddl
cmp
icebp
pop
loop
cmp
cltd
lcall
repz
ret
inc
mull
jge
roll
fimull
outsl
adc
jge
test
push
dec
inc
xor
les
imul
pop
leave
test
sbb
inc
lods
in
psrad
test
mov
addr16
adc
pop
jp,pn
jbe
fnstenv
sahf
out
push
push
out
jle
addb
cltd
sbb
sbb
stos
or
xchg
arpl
mov
daa
mov
cmp
or
aaa
cmp
cld
lret
sub
pushf
sub
dec
cmc
hlt
rcrb
push
out
test
cs
push
sub
push
data16
jge
and
xor
jno
jmp
popa
cmp
and
mov
popa
xlat
imul
imul
xchg
ja
xchg
pop
and
push
sbb
int3
mov
cs
xchg
and
out
cmp
cmp
fwait
roll
sti
adc
iret
aaa
inc
push
sub
and
pop
popa
rcll
popa
xchg
add
pop
imul
jmp
pop
add
inc
lods
push
test
jmp
cwtl
test
mov
test
popf
jb
jp
fxch
scas
fadd
and
jg
or
or
adc
insl
aad
mov
xchg
or
and
inc
popa
sbb
cmpl
cmp
add
dec
daa
cltd
xchg
pop
pop
sbb
fidivrs
ret
inc
push
or
aad
mov
push
sahf
cwtl
aad
cmc
lcall
push
gs
popa
mov
jl
mov
cmc
fs
cmp
add
movsb
cmp
pop
int
fildl
or
popf
push
push
sbb
jle
fcoml
outsb
lcall
lcall
sbb
push
test
mov
fldlg2
inc
mov
jne
add
sbbb
inc
xor
add
loop
mov
xchg
mov
fwait
stos
ud0
jae
lds
in
popa
sub
lea
add
insb
das
data16
lcall
mov
sahf
pop
ror
mov
pop
xchg
mov
inc
frstor
jge,pn
adc
mov
popf
mov
ret
dec
push
push
sahf
call
lcall
je
xchg
cmc
push
sbb
adc
outsb
inc
sbb
sbb
shl
jns
jp
cmpb
add
mov
mov
sbb
imul
sbb
or
or
hlt
movsb
repz
mov
xlat
int
ret
aaa
jp
cli
mov
sahf
adcb
add
pop
push
mov
push
cmpsl
rorl
dec
push
mov
sbb
sub
incb
out
cld
movsl
jmp
test
sub
pop
popf
adc
jne
out
sahf
mov
cltd
cmp
lds
loopne
icebp
repz
pop
adc
push
pop
lret
in
iret
or
mov
cwtl
jle
sub
cmc
das
or
add
and
dec
test
add
mov
push
roll
add
lcall
int
mov
in
pusha
stos
pop
int
xchg
push
adc
test
inc
ror
and
movsb
add
dec
insl
ficompl
adc
adc
sti
insb
cmpsb
xchg
ljmp
add
fimuls
mov
repnz
pop
or
xor
aas
pop
ljmp
or
mov
les
push
jnp
mov
je
push
scas
shrl
test
ret
mov
cmp
push
xchg
sbb
push
adc
arpl
adc
adc
jne
pop
inc
inc
jo
dec
icebp
cli
add
inc
adc
cmp
insl
pop
adcl
xchg
inc
or
push
out
add
push
sbb
push
xor
add
js
lea
pushf
inc
test
adcb
test
mov
inc
cmpsb
mov
repnz
add
cmp
mov
pop
inc
pop
mov
aaa
push
and
mov
ret
inc
in
ret
scas
inc
add
dec
dec
xchg
and
fwait
sbbb
sbbb
cs
pop
popf
std
add
xchg
sahf
xchg
fcompl
push
test
push
adc
nop
pop
hlt
lds
xchg
pop
cltd
jl
mov
movsl
fdivl
push
jl
out
or
jle
push
sbb
leave
adc
inc
decl
xchg
sub
scas
inc
out
dec
add
stos
adcl
int
cwtl
lcall
hlt
mov
cmp
cmp
movsb
push
sbb
std
stos
inc
pop
test
inc
xchg
pop
popa
in
xchg
loop
mov
daa
lahf
loope
repnz
nop
lods
add
or
repnz
sbbb
xchg
loop
shll
dec
hlt
shll
jge
fld
or
mov
data16
add
fwait
mov
xchg
adc
jb
add
pop
add
jne
cmp
or
xchg
popa
out
cmp
outsb
sbb
test
andl
adcb
pop
push
ret
daa
dec
gs
sbb
sarb
pop
test
adc
pop
pop
jno
cwtl
loop
cs
ds
popf
ja
addr16
test
pushf
cmc
fsubs
loopne
js
int
sahf
jne
imul
push
fistl
ret
test
cmc
in
jp
inc
xor
lds
rcl
jbe
inc
sub
enter
xchg
test
std
mov
xchg
lahf
inc
or
xor
pop
sbb
aas
test
in
xchg
pop
xchg
xor
adcl
test
jbe
cmpb
jp
adc
jge
or
and
inc
adc
xor
loop
xchg
sar
movsb
ret
mov
xchg
sbb
mov
popa
ss
fsubs
or
std
ja
les
xor
iret
dec
mov
push
xor
jne
jg
pop
push
sbb
jmp
cmpb
out
mov
dec
fisttps
xchg
lcall
jo
jl
lcall
or
aaa
push
pop
stos
xchg
sub
sahf
addb
mov
inc
sbb
or
pop
cmp
js
add
sbb
xchg
dec
pop
xchg
pusha
xor
xchg
push
es
and
or
ret
or
popa
add
sti
insl
or
mov
sbb
mov
pop
jg
fsubrp
addr16
mov
jns
faddl
enter
ret
sub
rclb
cwtl
add
xchg
xor
or
std
popf
dec
cmp
loop
ds
sbb
cmpsb
daa
sub
imul
sbb
ljmp
cs
sbb
sub
adc
pop
daa
push
jno
mov
and
mov
imul
sbb
add
add
dec
and
ret
add
in
pop
jo
or
xchg
xor
cmpsb
pop
fsubrl
fiadds
or
add
rep
test
ds
xchg
arpl
cmp
push
dec
leave
pop
mov
ret
sub
sub
or
jbe
mov
test
cmp
stos
inc
orl
jnp
popf
jns
jle
mov
and
test
pop
mov
xchg
jae
sub
mov
jmp
or
mov
add
pop
push
fisubrs
dec
xchg
pop
add
pop
int
push
leave
mov
xorl
or
mov
cld
pop
jbe
test
pushl
pop
out
xor
fisubs
in
sub
cs
lds
rorb
push
andb
pop
cli
jne
sbb
popf
and
xor
divl
or
je
or
out
mov
jp
mov
mov
xor
or
add
sbb
add
adc
loope
aaa
repnz
pop
imul
jg
xor
and
mov
popf
subb
pushl
push
pop
div
jp
push
pop
repz
pusha
and
lock
inc
inc
faddl
test
sbb
loop
pop
fstpt
orb
mov
mov
adc
inc
dec
pusha
inc
dec
nop
imul
or
push
xchg
loop
or
jge
xchg
loopne
cmpsb
mov
push
and
inc
int
dec
cmp
jg
aaa
push
imul
or
cmp
cltd
orb
push
xchg
jns
dec
sbb
jo
jge
frstor
pop
sub
lcall
push
test
inc
in
inc
add
and
mov
or
xchg
mov
and
xor
ret
push
mov
or
mov
dec
mov
or
jge
in
fisttpll
int3
or
and
pop
popf
push
ret
add
ljmp
inc
add
pop
adc
pop
bound
lock
xor
jne
and
ret
push
test
orl
fisttps
lret
xor
cli
cltd
repnz
sbb
ss
fiadds
out
mov
push
ret
xchg
pusha
push
movlps
lods
out
mov
xchg
lahf
mov
xchg
inc
dec
pop
fs
pop
test
flds
mov
dec
sahf
push
adc
movsl
aad
cmpsb
inc
add
pop
cmp
or
xor
jecxz
cmpsl
mov
mov
cmp
sbb
adc
arpl
in
push
sti
and
dec
bound
or
pop
cmp
ret
pop
andl
adc
push
loope
dec
push
out
sbb
mov
lds
popf
call
or
sarb
imulb
pop
fwait
xchg
cmp
or
lds
enter
bound
movsl
sbbb
cwtl
icebp
and
sti
push
pop
pop
cld
rcrb
or
jnp
mov
sbb
push
mov
sbb
xchg
pop
add
jno
mov
jns
je
lds
cmp
lods
mov
test
add
mov
fmul
popf
scas
ret
and
clc
fs
push
push
mov
lock
gs
test
pop
pop
dec
data16
xchg
add
lret
dec
push
les
lods
int
cmp
push
pop
daa
pusha
push
pop
add
jmp
sub
outsb
dec
lds
jl
pop
mov
adc
cmp
pushf
sbb
rcrb
push
cmp
add
mov
xor
push
mov
ret
pop
mov
xchg
adc
leave
jl
and
xchg
sarl
out
aad
int3
jecxz
add
push
xchg
out
xor
sbbl
push
outsb
jecxz
push
inc
fistpll
cli
or
outsl
daa
mov
cltd
xchg
jno
pop
dec
and
rcr
adc
mov
movsl
cmp
ds
mov
sbb
or
and
jp
pusha
push
dec
cmc
lods
daa
xchg
xchg
mov
cmp
xchg
ss
cs
in
or
inc
adc
cltd
xor
xor
inc
push
fisubl
xor
jp
cmp
or
aaa
fildl
repnz
adc
jle
mov
lahf
dec
int
ljmp
psubq
mov
mov
push
js
jb
jne
cwtl
push
mov
ss
xchg
cmp
ljmp
cs
fisubrs
in
pop
leave
shrl
mov
or
xchg
loop
jo
xor
out
iret
fbld
pop
stos
jae
sub
xchg
divb
sub
and
lock
dec
inc
mov
lcall
cli
xchg
push
mov
adc
cs
cwtl
push
popf
jb
or
pop
loopne
out
inc
inc
pop
pop
pop
mov
xor
xchg
std
mov
lds
add
push
jmp
lcall
popf
inc
xor
mov
push
push
arpl
dec
sub
sub
in
dec
arpl
inc
jge
add
dec
aam
and
xchg
dec
mov
jns
xchg
mov
push
fiadds
mov
add
sbb
cmc
out
in
movsb
adc
lea
daa
fisubs
cmp
mov
or
out
aaa
inc
sbb
or
cmp
addr16
jns
xchg
dec
sahf
out
inc
sub
jl
cmp
sub
or
and
xchg
test
xor
pop
scas
add
arpl
in
es
or
mov
cli
fistl
imul
fcomps
adc
xor
push
test
fisttpll
adc
and
sahf
jns
and
or
sub
or
xor
lock
xchg
call
fnstsw
jns
jmp
add
pop
or
sub
cwtl
movl
les
mov
in
bound
or
add
xchg
jno
push
push
xchg
or
std
aad
imul
xchg
roll
inc
xchg
das
adc
sahf
push
add
push
decb
jp
xchg
daa
js
or
and
ja
loope
and
subb
or
pop
mov
xchg
add
int3
sub
popa
sbb
xchg
jle
sbb
adcl
fiaddl
xchg
and
test
inc
into
int
sti
mov
sbbb
add
sub
test
sbb
add
pop
popf
pop
mov
data16
fcoml
ret
xor
imul
jge
inc
cmpsl
das
push
ret
lods
lcall
rcll
stc
and
jnp
inc
pop
sub
mov
lea
push
dec
pcmpgtw
xchg
fnsave
push
out
addr16
xchg
push
dec
add
rcll
daa
dec
fcompl
jg
mov
sbb
test
mov
dec
lds
or
mov
shlb
cli
outsl
cmpsl
push
shll
loopne
pmullw
or
inc
gs
ss
mov
outsl
xor
lods
popf
leave
and
andb
movsl
int3
out
mov
popf
stos
test
in
aas
fsubr
adc
cmc
insb
pop
dec
dec
inc
add
sub
mov
mov
add
push
cwtl
cwtl
dec
mov
andb
dec
test
lods
nop
inc
push
mov
xor
mov
rolb
dec
popa
xchg
icebp
test
push
addl
pop
cmpb
inc
push
jmp
cmpsb
push
inc
test
cli
and
inc
and
orl
scas
add
or
iret
xchg
clc
popf
addb
lods
inc
in
inc
and
in
sbb
addr16
xor
xor
pop
dec
aam
aas
sub
pop
call
jbe
jl
jmp
bts
cmp
notb
out
test
imul
adc
adc
xchg
cli
lret
mov
inc
mov
and
and
push
dec
add
jbe
sti
mov
and
push
cmp
sbb
xorl
insl
ret
mov
in
mov
cmp
jg
rorl
dec
mov
sbb
and
js
push
sub
and
out
sbb
leave
aas
rorl
adc
test
jno
inc
aas
push
jp
dec
sub
out
and
pop
cmpsb
lcall
mov
hlt
jae
pop
xor
push
sub
jg
xorl
or
cmc
out
jecxz
mov
clc
cmpsb
fnstsw
pop
les
adc
in
addl
sahf
jbe
in
fsubrl
push
sub
outsb
stos
js
inc
movsl
orb
movsb
sahf
lcall
adc
dec
fs
inc
add
icebp
push
inc
or
push
pop
cs
pop
jns
pop
rcrl
out
lds
inc
push
test
cltd
inc
pop
pop
in
fnstenv
hlt
inc
jg
imul
or
loope
mov
and
dec
add
shll
jmp
ret
add
insb
test
out
xchg
jp
test
adc
dec
popf
jb
inc
pop
stos
pushf
mov
addb
mov
xchg
or
push
lcall
cli
and
cld
jbe
popf
or
leave
lds
mov
lds
push
fildl
sbb
rcrl
push
gs
ss
sub
call
inc
mov
mov
adc
sahf
leave
xchg
insb
imul
pop
popa
sarl
fsubrl
in
int3
loop
xorb
or
aas
mov
daa
pop
xchg
js
push
lock
shrl
mov
xchg
out
ret
adc
jo
jae
fiadds
lods
jmp
push
pop
adc
inc
repnz
jge
jl
sbb
sbb
aad
outsl
popf
test
fsubr
sti
pushf
aas
jb
inc
and
iret
rcll
pop
rcr
clc
cmc
roll
movd
shll
enter
or
out
ror
roll
jp
inc
test
push
shrl
pusha
jne
cmp
popf
pop
test
cmp
lds
xor
jge
repz
xchg
call
xor
imul
out
sarl
jbe
mov
inc
jbe
faddl
xorb
inc
insl
es
popf
mov
pop
jp
sub
aad
dec
jns
dec
pop
sbb
andl
rorb
pop
push
jns
jmp
mov
and
shlb
cld
xchg
jmp
stos
push
mov
fdivrl
inc
cmc
test
or
or
int3
cwtl
or
jmp
jb
sti
in
add
lcall
mov
or
or
orl
in
pop
orb
xor
inc
push
and
add
cmpsl
sbb
je
mov
add
sbb
mov
js
cli
pushf
in
imul
inc
mov
es
inc
mov
sbb
rorb
aad
mov
inc
add
in
or
sbb
add
into
cmp
inc
adc
push
dec
xorb
or
pop
dec
sub
adc
aam
mov
or
movsb
pop
mov
cmc
lret
ja
aad
add
xorb
push
add
loope
imul
dec
or
mov
in
push
out
mov
dec
or
dec
mov
mov
sbb
cld
into
mov
xchg
in
mov
xchg
push
cmp
dec
mov
inc
mov
ficoms
or
add
cmc
aaa
mov
lods
fstl
cmp
sbb
cld
or
mov
mov
call
or
andb
mov
movl
test
mov
sbb
xchg
mov
repnz
inc
pop
es
push
shll
add
imul
push
xchg
adc
mov
aas
cli
push
push
lock
cli
scas
push
pop
jge
inc
inc
sub
call
and
add
shlb
bound
in
scas
test
fisttpll
push
inc
push
lcall
xor
outsb
pop
add
xor
cltd
pusha
in
enterw
lods
xor
or
movsb
in
insb
daa
xchg
data16
push
jns
jbe
xorb
jbe
jae
or
arpl
pop
adc
cmp
lret
mov
arpl
xchg
in
jne
cltd
xchg
cmpsb
mov
stos
into
lahf
inc
in
mov
sub
sbb
mov
pop
sub
add
sbb
adc
fdivl
lahf
xor
loopne
loopne
xchg
dec
rolb
movsl
andl
fs
ret
int3
pop
cs
or
imul
data16
popa
inc
iret
pop
sbb
lds
test
gs
imul
aas
aaa
es
add
in
xchg
mov
add
mov
mov
fcompl
dec
push
mov
xor
cwtl
or
mov
mov
cmp
es
leave
rorb
bound
in
insl
sbb
lock
cs
rcll
inc
jnp
scas
sub
mov
subb
pop
push
pop
insb
or
cmpsl
mov
dec
push
in
into
xchg
fistl
and
mov
sbb
movsl
mov
imul
out
xchg
cmpsl
ja
test
gs
xchg
ret
int
xchg
jb
out
cli
or
xchg
lahf
decl
adc
in
aaa
xchg
cmp
imul
daa
out
sahf
pop
sahf
test
inc
push
jg
insl
and
ficomps
mov
adc
cmp
cmp
and
push
pop
adcl
cmc
cmc
or
movsl
cltd
add
test
jbe
hlt
cmpb
sahf
lea
xor
cmpb
inc
mov
lods
lods
jo
sbb
mov
dec
cld
inc
out
aas
and
sbb
jecxz
mov
push
pusha
inc
cmc
jbe
mov
push
add
add
mov
dec
push
add
call
cmp
stos
int3
jge
rcrb
pop
dec
adc
repnz
jle
clc
lcall
cmpsl
sbb
mov
push
insl
sbb
mov
dec
test
orl
cltd
push
cmp
daa
sahf
stos
call
aam
mov
in
cmc
cltd
mov
lds
or
xor
fwait
out
int3
adc
inc
mov
insb
push
clc
fdivs
pop
cld
lcall
push
pop
ret
xchg
and
lds
pop
fisubrl
pop
ja
adc
pop
addr16
pop
dec
in
int
inc
push
lret
jno
or
ljmp
mov
icebp
inc
pop
push
cmp
jo
jge
pop
jb
cmc
and
mov
outsl
mov
jecxz
mov
sbb
lahf
jbe
pusha
data16
dec
or
fists
out
jno
shrl
sub
push
iretw
adc
out
xor
lods
jp
inc
incb
stc
push
mov
addr16
cmc
aas
icebp
test
jecxz
ljmp
xchg
push
pop
mov
and
pop
mov
pop
stos
add
mov
out
fs
sbb
pop
shll
xchg
ficoms
or
ret
mov
xchg
sarl
jp
mov
ficompl
sbbb
sbb
cltd
ss
inc
int
cmp
xor
scas
loop
xchg
xor
pop
push
push
jle
lret
sti
in
pushf
stc
cli
xor
push
and
adcb
movsl
mov
sbb
lods
fdivp
lcall
mov
push
push
mov
jmp
add
test
mov
inc
xchg
mov
ficoms
mov
or
mov
mov
ficoml
push
dec
add
xor
inc
rcr
dec
jge
or
adc
mov
cmpsb
lds
repnz
es
ljmp
movl
sub
sbb
data16
mov
mov
and
dec
outsb
or
fisttpl
add
add
or
jp
jne
inc
and
xchg
cltd
jge
je
fisubl
jmp
push
and
rcr
xchg
pop
inc
adc
add
and
and
or
jge
cs
icebp
pop
cwtl
xchg
imul
movsb
add
bnd
xor
mov
repz
ds
jno
dec
push
outsb
mov
push
push
inc
scas
lahf
test
jmp
push
pop
je
cmc
fwait
cmpsl
xor
das
mov
pop
enter
sahf
imul
pop
dec
inc
fdivs
pop
add
add
rolb
sub
dec
pop
fiaddl
lahf
mov
sbb
lcall
jbe
sub
dec
or
pop
mov
cmpsl
leave
popf
scas
push
lods
mov
fistpll
or
sub
xor
pop
add
gs
ja
sti
add
or
enter
mov
mov
addr16
adc
adc
adc
push
add
mov
push
ficomps
mov
xchg
in
and
inc
pop
add
cmc
dec
mov
inc
iret
cmp
popa
push
adcb
mov
popa
mov
xor
pop
mov
in
cmp
jle
fimull
cltd
insl
sbb
filds
jge
add
pop
push
ret
popf
leave
inc
or
pop
jbe
jmp
push
or
sub
inc
adc
lea
out
popa
inc
or
imul
xor
iret
test
test
add
in
ret
or
inc
sbb
mov
push
xor
and
nop
ret
insl
sub
fiaddl
jns
lea
pop
es
push
or
test
inc
xchg
ja
sub
shlb
or
push
insl
outsb
push
jns
cld
into
cmpb
inc
adc
mov
ja
mov
jno
push
ficoml
sbb
sub
and
outsl
rcrl
rolb
cmpsb
lcall
inc
mov
xorl
and
js
inc
push
cmp
out
cmpsl
ja
lcall
fcomp
push
into
dec
cwtl
mov
inc
std
out
stos
push
out
lahf
jp
add
sbb
sahf
mov
ret
and
push
addr16
lcall
in
jp
xchg
sub
inc
and
repz
xchg
lods
or
jmp
mov
out
sub
cmc
xor
xor
addl
cmpsb
test
mov
das
sbb
mov
xchg
mov
jae
imul
fnstenv
popf
xchg
or
or
inc
aaa
sbb
or
inc
xchg
pop
push
jo
rcll
jnp
adc
dec
cld
cmp
sahf
les
add
push
pop
push
adc
ss
incl
adc
sbb
xor
icebp
sarb
xchg
rcrb
aad
push
iret
aas
ljmp
testb
movsb
pminsw
clc
mov
adc
lcall
lret
add
lahf
test
xchg
xchg
push
add
cmpsb
lods
mov
in
rclb
fistpl
test
jns
pop
lcall
inc
lods
jl
clc
mov
dec
out
add
imul
test
sub
mov
push
pop
sub
pop
xchg
sbb
stos
push
insl
mov
les
push
push
push
pop
jnp
cmp
or
jle
lcall
xlat
sbb
pusha
xchg
push
loope
popa
test
in
fsubs
fidivs
leave
ret
xchg
jne
mov
mov
jno
sub
cmc
pusha
fsubrl
adc
xchg
and
pushf
imul
xor
out
sub
pop
sbb
in
and
data16
lods
push
orl
pop
lods
loope
xor
xor
sbb
into
push
jecxz
jmp
out
sbb
or
das
mov
imul
shlb
cld
lcall
testb
jmp
jg
mov
cmpsb
push
pop
jg
xchg
shlb
xchg
sbb
adc
loopne
inc
or
fwait
mov
xchg
lods
jne
or
or
mov
mov
rorb
gs
andb
movsl
cmp
xor
stc
add
lods
jmp
push
sti
dec
stc
sbb
rcl
sub
push
push
or
int
mov
aas
aas
repnz
cmp
leavew
idivl
adcb
popf
jne
push
popf
ficoms
sbb
daa
push
xorb
mov
orb
lods
test
mov
mov
popf
jecxz
scas
push
push
jmp
xchg
pop
mov
pusha
rcrl
sahf
add
pushf
adc
dec
push
imul
test
jl
pop
mov
add
cwtl
es
orl
sbb
jbe
mov
add
bound
cmp
mov
pop
dec
ret
pop
cmpsb
push
popa
fsubrl
push
adc
xchg
push
mov
and
push
int3
push
or
lods
mov
mov
mov
test
push
push
sbb
bound
mov
or
enter
pop
pop
repz
pop
jge,pt
mov
in
test
pop
cltd
inc
lods
add
lock
lea
and
dec
mov
push
add
mov
sub
push
mov
addb
ret
dec
popf
ss
mov
add
pop
call
or
sbbb
stos
sub
clc
or
or
cmp
jge
dec
and
or
xchg
adcb
push
mov
jne
push
fmuls
lock
in
dec
mov
mov
inc
push
sbb
jge
in
mov
lret
and
aas
cmp
mov
shrl
subl
lret
sbb
push
xor
popa
pushf
pop
ret
xchg
pop
bswap
and
sub
rcr
pop
jno
fnsave
test
add
popf
sub
jo
aam
lds
push
xor
push
mov
adc
out
inc
or
sbb
sbb
fs
jge
adc
jbe
push
cmpsb
data16
cmp
arpl
mov
inc
push
pop
jl
cmp
bound
fwait
inc
and
dec
or
scas
cmc
jmp
push
daa
push
mov
adc
pop
sbb
push
lret
fmull
arpl
dec
inc
push
mov
dec
out
in
sbb
jno
cmp
xchg
ret
loop
pop
dec
iret
cmp
cltd
inc
xchg
imul
mov
xchg
dec
push
sbb
xor
pop
data16
xchg
imul
push
std
xchg
leave
loop
adc
popa
mov
insb
rcrb
les
mov
stc
rorl
fimuls
imul
pop
jmp
push
iret
add
addr16
cli
js
push
mov
inc
add
test
pop
loopne
mov
dec
and
push
jns
pop
adc
dec
rolb
push
int3
jbe
sbb
arpl
sahf
sahf
loopne
jo
pop
out
mov
sahf
sub
ss
push
adc
and
movsb
aaa
movsb
add
test
adc
xor
add
sti
pop
or
rcll
mov
sbb
cmp
sti
sub
jecxz
jne
inc
push
push
or
jne
in
js
fs
xchg
andb
mov
daa
mov
mov
jmp
cmp
xor
xchg
iret
or
orl
add
and
pop
mov
dec
sbb
inc
push
lret
dec
or
call
ds
rolb
jl
sub
data16
popf
mov
and
fisttps
int3
push
mov
xchg
addr16
out
and
mov
loopne
xor
out
popf
cmp
xor
adcb
and
sti
int3
pop
xchg
inc
lret
dec
bound
in
inc
incl
lock
cmp
imul
repz
inc
add
es
push
scas
stc
in
out
pop
adc
mov
lds
pop
inc
pushf
cli
add
xorl
xor
add
push
dec
add
repz
fisubrl
sbb
push
mov
sub
ficoml
xchg
lea
not
adc
lock
sbbl
iret
negb
mov
aad
gs
xchg
cli
bound
js
out
cmp
jl
aad
call
dec
dec
inc
call
inc
lea
loop
popf
inc
iret
mov
and
setbe
xor
sub
xor
in
rorb
xor
pop
inc
pusha
aaa
out
gs
push
jb
mov
neg
cwtl
sbb
dec
dec
vcvtps2dq
push
mov
jae
test
cmc
or
int
leave
xor
adc
lds
pushf
fcomi
push
out
sub
enter
inc
mov
inc
scas
dec
imul
loope
dec
test
int3
lcall
pop
cmpsb
inc
or
std
testb
movsl
dec
sub
or
outsl
mov
adc
out
cmpsb
push
jb
xchg
fsub
outsb
stos
adc
add
les
fiadds
out
sub
repnz
mov
cwtl
mov
xchg
push
subl
cmp
sub
and
lcall
add
inc
push
loopne
lea
mov
jmp
movsb
js
xor
rcl
mov
pusha
xchg
cmc
out
mov
pop
add
popa
xor
xchg
or
jns
cltd
outsb
cli
inc
sahf
sbb
bound
xor
sub
rorl
adc
xor
add
push
imul
imul
mov
or
pop
sbb
fisubl
fiaddl
lds
or
sbb
mov
cld
cmp
in
loopne
jg
mov
push
lods
inc
flds
jge
adc
mov
cmp
daa
sub
outsl
out
loopne
push
imul
adc
ds
fidivrl
sub
push
adc
insb
or
insb
jae
jl
dec
xor
push
arpl
inc
cmp
add
push
xchg
jge
lahf
push
stc
add
adc
rorl
scas
mov
je,pn
cmpsb
inc
xchg
push
sub
in
sub
dec
not
xchg
xchg
icebp
cmp
inc
and
push
add
sbb
jp
sbb
mov
daa
sub
xchg
movb
dec
sbbb
dec
cmpsb
popa
and
sbb
test
aam
mov
adc
pop
mov
mov
mov
xchg
inc
cwtl
pop
cltd
push
mov
test
loope
in
push
pop
jmp
sbb
int3
jmp
dec
cmp
mov
sahf
add
out
mov
xor
jp
scas
pop
push
or
add
push
jne
int
aad
xchg
jp
mov
in
repz
mov
ret
mov
test
shll
pop
cmc
add
cmp
pop
xor
cs
es
lsl
xchg
sti
pop
jb
mov
xchg
or
inc
gs
or
rcr
jnp
cmp
xchg
icebp
xchg
inc
in
shrb
jae
dec
ss
mov
ja,pt
sub
sub
fistl
adc
imul
out
xchg
rorl
dec
adc
rol
inc
jns
movb
pop
jle
fistl
lret
add
ss
adc
mov
push
lods
popl
imul
push
insl
add
add
adc
pop
add
jne
push
pop
ljmp
cltd
xchg
ja
add
test
dec
jge
mov
adc
inc
int
inc
push
push
fisttps
jne
dec
mov
and
pop
xor
mov
in
rep
sub
push
or
cmp
xchg
xor
pop
push
adc
xchg
jl
dec
add
imul
sahf
not
xchg
lcall
mov
xor
jne
sbb
dec
and
xorl
xchg
imul
lret
shlb
stc
rcrb
es
and
push
dec
push
inc
sbb
pop
pop
push
and
fs
pop
push
aaa
sub
popa
add
jl
dec
push
mov
lret
mov
xchg
cmc
push
or
mov
or
mov
pushf
outsb
bound
out
rcll
lods
pop
sub
lds
data16
ds
scas
addl
sbb
jl
xor
dec
jl
pop
push
jmp
cmp
add
pop
xor
dec
cmp
sahf
add
bound
int3
ret
pop
and
xor
jae
jo
imul
xor
xor
pop
inc
pusha
lock
fwait
or
cmpsl
xchg
mov
stc
shll
dec
mov
push
or
pop
stos
dec
pop
mov
fldl
pop
insb
push
loopne
ret
pushf
mov
cltd
imul
imul
fcoml
pop
dec
loop
dec
cld
adc
jmp
sub
sbb
xor
xchg
add
dec
stos
dec
xorl
mov
arpl
arpl
mov
std
cld
add
cmc
lock
xchg
sbb
clc
push
aas
jmp
xchg
or
xchg
cld
imul
add
sbb
mov
out
adc
cmc
fldt
popf
lods
pop
shl
xorb
xorl
and
xchg
std
aam
pop
mov
xchg
add
lea
or
daa
xchg
inc
pushf
inc
and
out
popf
insl
add
xchg
js
mov
shrb
dec
int
addb
ret
dec
lcall
xor
sbb
lods
jb
mov
repnz
hlt
pxor
sbb
xor
xchg
sub
mov
mov
arpl
mov
pop
rcr
and
jbe
sub
push
jnp
mov
jne
sti
js
bound
or
mov
fwait
fwait
cs
int3
xchg
repz
pop
insl
mov
shr
dec
data16
repz
mov
sbb
sub
sub
lret
push
pop
sbb
mov
push
sbb
cld
scas
loope
aaa
push
cmp
cmc
xchg
leave
push
xchg
fadds
cmp
sub
int3
push
and
imul
sbb
push
lods
dec
lret
xchg
outsl
xchg
add
mov
or
adcl
icebp
hlt
lcall
shrl
and
int3
adc
orb
test
les
rorb
leave
adc
inc
fistpl
data16
mov
dec
or
dec
xchg
sbb
cld
adcb
fwait
in
mov
xorb
popa
or
add
rolb
aam
cmpsb
jmp
arpl
cltd
push
dec
jbe
dec
and
jge
adc
sbb
call
jne
push
sbb
sbb
ficoml
fsubl
inc
rcll
jmp
lahf
mov
lcall
jg
int
addr16
mov
test
pop
jno
imul
jge
out
mov
or
jno
test
push
test
dec
scas
dec
add
mov
xor
cmp
testl
push
or
inc
adc
imul
stos
scas
xchg
fildll
cmp
add
ljmp
or
aaa
dec
push
dec
mov
test
dec
pushf
mov
xchg
ret
out
add
xor
adc
or
call
push
mov
shl
inc
push
jmp
fiaddl
out
xchg
mov
xchg
in
pop
mov
adc
ja
testl
in
je
add
push
gs
or
test
push
faddl
or
pop
sbb
sbb
loope
ja
idivl
sub
cmp
sbb
jle
and
loopne
insb
leave
adc
xchg
out
inc
lock
leave
inc
ds
push
dec
shll
std
push
mov
push
icebp
cmp
sti
mov
add
sbb
mov
ss
cwtl
rorb
fsts
inc
jp
sbb
push
inc
cmp
mov
and
jne
in
lahf
fs
call
mov
rcl
push
inc
movsl
daa
push
pop
sbb
adc
sub
pop
je
fwait
dec
lea
mov
add
sub
pushl
test
cmp
popf
orl
in
xor
in
insl
push
icebp
sbb
sbb
mov
adc
sbb
popf
cmc
ror
xchg
lock
fldln2
bound
sbb
add
clc
dec
add
jns
push
sbb
das
dec
sub
dec
je
outsl
and
ror
xchg
inc
cmp
sbb
dec
lds
sbb
mov
rcrb
fdivr
push
fwait
push
xor
sub
arpl
in
sub
mov
scas
int
lret
pop
mov
mov
gs
xchg
aaa
cmp
adc
xchg
mov
or
xlat
inc
push
and
cmp
sbb
lock
mov
pop
dec
add
cmpsb
ds
push
fnsave
adcb
lcall
insl
jbe
arpl
xor
subps
daa
push
mov
sbb
out
sub
pop
lcall
es
addr16
mov
ss
fcmove
adcb
sbb
inc
sub
sbb
jle
cs
sbb
sub
mov
and
cmp
sub
jp
mov
cmp
sub
xchg
xchg
push
in
ffreep
cmp
mov
xchg
lret
repz
xor
add
mov
fisubrs
int3
lea
xchg
insb
repz
push
mov
leave
jmp
pop
rol
xlat
dec
movsb
mov
out
sbb
push
mov
cmp
push
sub
rcr
into
dec
or
ja
mov
sbb
fimuls
cmc
imul
inc
jbe
sbb
sbb
dec
sbb
cmp
rorl
insb
xor
add
adc
and
add
push
xchg
sbb
fbstp
data16
mov
xchg
popa
ja
lock
and
dec
inc
int3
cwtl
ljmp
out
sbb
jge
sub
push
jecxz
dec
pop
xor
aaa
adc
bound
jb
ficoms
fisttpl
xchg
clc
push
push
adcb
jne
push
cmp
dec
test
xchg
loopne
or
in
or
sahf
bnd
not
pushf
sbb
pop
sbb
aas
popa
inc
or
xor
pop
or
push
adc
sbb
mov
push
dec
dec
push
popf
inc
add
dec
mov
pop
test
push
sahf
adc
test
adc
bound
inc
rcrl
mov
or
cmpps
pop
sub
scas
jl
dec
mov
add
jns
mov
aad
and
pusha
outsb
mov
cli
das
mov
cmpsb
xchg
pusha
mov
add
sub
sti
jge
jmp
sti
dec
dec
or
sbbb
xchg
rol
dec
mov
and
lcall
push
outsb
or
fists
mov
in
xchg
addl
dec
outsb
add
cltd
int3
and
push
cltd
pop
push
ja
inc
jns
or
andl
or
ret
push
ret
mov
add
ds
int
jmp
add
sbb
sbb
push
push
dec
add
cmp
mov
test
cs
or
xor
mov
negl
shrl
push
std
hlt
inc
push
outsb
inc
notb
popa
jns
test
data16
or
push
jge
mov
jp
push
sub
pop
cmc
inc
cld
jno
cld
sbb
clc
push
mov
gs
subb
sbb
mov
jb
adc
andb
and
pop
mov
pop
jmp
popf
int
mov
sub
cmpsb
sbb
pop
xchg
xor
mov
repz
test
lret
subl
xchg
es
outsl
mov
dec
shrl
jmp
aas
imul
jo
sti
push
rcrl
add
imul
ss
xor
add
pop
sbb
mov
cmp
push
or
into
pop
sub
pop
fwait
gs
mov
scas
dec
cmc
jge
pop
rclb
mov
loop
cwtl
repz
cmp
inc
inc
jmp
pop
imul
adc
cwtl
out
cs
jnp
ljmp
xchg
pop
and
sbb
fnstcw
sarb
lret
imul
pop
sarl
push
popf
or
sub
or
add
jo
mov
inc
pop
lods
mov
pusha
in
enter
mov
jbe
mov
push
movl
sub
jno
loope
add
int3
inc
ljmp
inc
pop
in
mov
cmp
aas
rep
push
xlat
lcall
test
addr16
insl
enter
push
lahf
cmp
loopne
jns
add
inc
pop
jns
fldt
or
fcmovbe
mov
lret
jnp
lods
adcb
fstps
add
xor
inc
pop
xor
xor
sarb
push
add
xchg
roll
push
xor
mov
or
add
rcrl
push
dec
js
sbb
sbb
pop
push
xor
pusha
mov
or
mov
inc
idivl
cli
push
popf
mov
dec
mov
inc
fistl
sti
ljmp
test
int3
cmpb
aaa
es
repz
int3
inc
andb
or
sub
in
xchg
dec
inc
adcb
movsl
pop
adc
lds
lock
add
data16
pop
movsl
push
and
inc
push
jp
xlat
out
scas
cld
mov
xchg
dec
fstl
jnp
out
adcl
mov
sbb
subb
cmc
imul
push
push
push
fimuls
cmpsb
notl
add
cmp
in
sbb
push
pop
es
mov
sahf
flds
mov
dec
stos
mov
sbb
cltd
int
dec
rclb
out
fsub
gs
mov
movsb
loope
jge
push
das
xchg
mov
push
outsl
mov
inc
popf
lods
inc
sahf
out
or
cwtl
mov
adc
mov
out
add
movsl
gs
cltd
lret
push
mov
jbe
xabort
pusha
push
pushf
fsubrl
sbb
jg
xchg
add
pop
mov
inc
xor
and
lods
mov
adc
sbb
and
jae
xlat
scas
stc
sub
dec
xchg
add
adc
imul
dec
lock
movsl
mov
test
sti
jo
pop
mov
test
lahf
add
bound
cmpsl
pop
pushf
lret
test
adcb
divb
outsb
dec
xorb
leave
dec
and
notl
lea
in
cmp
lret
mov
lret
or
adc
or
dec
subb
call
adc
jnp
adc
xor
jns
sub
stc
sahf
mov
cmpsl
add
aam
sub
jbe
test
cs
es
sbb
mov
dec
loope
jge
ret
adc
arpl
push
push
arpl
cmpsb
es
add
daa
mov
ja
bound
push
aas
hlt
pop
sbb
fnstsw
xchg
inc
lods
jp
and
fcompl
or
mov
fdivr
mov
mov
roll
or
loope
jno
dec
push
adc
jne
cli
popa
pop
jns
bndldx
sbbb
dec
ds
ret
test
loope
or
cwtl
test
fdivrl
rcll
scas
or
test
push
cmc
xor
test
cmp
js
lret
in
add
mov
pop
ja
lret
cltd
jnp
pop
leave
inc
adc
push
ret
popf
lods
daa
fdivrs
es
fsts
popf
push
mov
js
sbb
popa
mov
leave
pop
mov
or
or
inc
jnp
lea
sbbl
fists
dec
cmp
subl
enter
push
sbb
push
or
aas
push
fcompl
inc
and
adc
movsl
pop
push
push
jnp
pop
sbb
push
xrelease
mov
inc
in
add
iret
adc
imul
in
fstpl
cmp
inc
setbe
pop
jmp
pop
push
mov
sbb
push
data16
and
cmp
jecxz
mov
lret
fstl
dec
mov
xchg
sbb
pop
add
daa
rcr
pop
xchg
sbbb
jp
cmp
xchg
jge
scas
add
jecxz
xlat
maxps
xchg
mov
inc
loopne
sub
aam
mov
inc
cmp
and
imul
sbbl
push
mov
pop
stos
adc
lcall
fdivl
mov
or
subb
mov
cltd
rcrl
sub
sbb
or
mulb
or
lds
jno
mov
xor
cs
mov
icebp
rol
jecxz
push
or
or
push
imul
adc
pop
ret
ret
ret
xor
ficoms
out
int3
xlat
inc
lret
inc
roll
frstor
or
dec
shll
push
xor
sub
cmp
daa
lods
leave
xor
idiv
out
xchg
sbbb
cmp
jb
imul
inc
in
cmp
add
xor
or
inc
pop
xor
jmp
xchg
jmp
stc
inc
sbb
cltd
lret
mov
add
sub
cmpb
or
push
roll
insb
add
js
mov
sbb
insl
or
push
test
cmp
mov
inc
push
pop
jge
sub
xor
mov
loop
sbb
push
mov
mov
test
sbb
jno
mov
cmpb
daa
cltd
pusha
dec
dec
addr16
or
stos
in
sbbb
ja
mov
nop
and
loopne
out
xchg
lea
test
and
mull
test
push
add
mov
add
sbb
xchg
adc
inc
cmp
or
and
lods
inc
or
bound
scas
jle
jno
xlat
lods
sbbb
cmpb
xchg
and
adc
push
mov
ja
loopne
sti
xor
push
and
dec
cmpsb
dec
mov
int
mov
jecxz
jb
andb
ja
das
xchg
xor
jae
fmull
aam
imulb
push
inc
mov
jno
flds
fbstp
add
and
pop
enter
inc
push
mov
lcall
xchg
add
pop
aad
icebp
popa
sbb
xchg
mov
adc
pushf
push
sbb
xlat
sbb
cmp
sbb
out
mov
int
push
add
cmp
jne
mov
jno
xchg
lret
fucom
addr16
leave
lret
loopne
imul
push
fs
adc
lcall
call
daa
rorb
adc
mov
sbb
loope
sbb
sub
daa
pop
sub
loope
sbb
adc
mov
in
and
inc
fs
dec
or
sahf
pop
ficoml
es
pop
lea
jo
inc
sbbb
fiaddl
or
shl
mov
or
and
mov
jecxz
inc
pop
cltd
jne
fistps
jle
jno
es
pop
aaa
cmp
out
iret
test
cmpsl
or
pop
xchg
jl
shlb
sub
fwait
in
insb
xor
pop
addr16
push
mulb
and
inc
in
shlb
mov
xorb
maskmovq
mull
push
jbe
dec
leave
xchg
loop
mov
jnp
pop
or
push
je
inc
lret
mov
sti
inc
in
pop
pop
adc
push
mov
or
ds
push
dec
mov
push
add
bound
dec
pop
mov
sti
dec
lcall
xchg
mov
inc
lcall
sbb
and
flds
and
sub
gs
fcompl
sbb
popf
js
scas
jae
shll
repz
outsl
mov
sub
mov
sbb
fwait
jge
jle
ret
std
xorb
ss
ljmp
popf
push
ret
add
cmp
jge
fwait
cld
es
pop
stc
xchg
adc
push
mov
sub
inc
push
sbb
aaa
or
int3
xchg
cmc
aad
jecxz
enter
insb
aas
fwait
xchg
or
pop
adc
sbb
iret
mov
lret
addr16
and
cmp
cli
inc
jbe
mov
mov
pusha
and
jne
push
jle
sbb
cwtl
push
loop
clc
fwait
fwait
and
lcall
jl
inc
inc
lods
loopne
add
sbb
pop
or
fldl
sub
dec
lds
inc
imul
push
lea
cmc
or
imul
orl
sbb
push
or
je
cmc
jle
inc
add
fsubrl
pop
sub
fsubp
out
bound
notl
xchg
sub
das
rcrl
movsb
lods
jmp
lret
mov
pop
sbb
and
mov
sbb
adc
xor
out
dec
rcrb
push
jp
call
sbb
sub
xchg
jb
mov
inc
out
gs
popa
jo
xchg
orl
outsb
push
sub
sbb
inc
xbegin
pop
sbb
or
data16
jl
lods
or
cmp
mov
jmp
xchg
loopne
dec
imul
sub
gs
sub
popa
loopne
and
test
ljmp
jl
add
inc
lock
mov
add
lds
jp
jle
mov
lcall
idivb
out
or
push
fsub
dec
and
jg
push
scas
roll
out
mov
mov
mov
insl
pop
pop
mov
call
test
pushf
push
call
rol
dec
imul
popa
xchg
lods
pop
mov
dec
in
cmp
push
rol
bound
or
ss
xor
xchg
test
jl
xlat
inc
mov
mov
aaa
imul
mov
inc
std
jno
inc
cmpsb
xlat
pushl
popf
imul
outsl
scas
mov
or
leave
dec
rolb
fsts
xchg
das
mov
pushf
pusha
push
pushl
lea
jmp
dec
xor
addr16
jecxz
pop
test
ja
cmp
mov
sbb
pop
aaa
sub
aam
mov
jge
cltd
ss
mov
cmp
cmp
int3
iret
sbb
and
inc
mov
loop
cli
nop
xor
mov
jecxz
shlb
adc
and
popf
fs
loope
sub
mov
inc
xchg
or
or
out
loopne
dec
xor
jb
jge
cmpsb
or
ljmp
mov
push
pushf
push
lea
jmp
ja
neg
shl
shl
dec
sub
movzbw
add
bt
ror
mov
dec
sub
inc
mov
pushf
test
call
jno
mov
das
or
sahf
xchg
or
je
push
push
push
lock
test
outsb
pop
testl
cmpsl
stc
rcl
cwtl
mov
push
cmp
aam
jge
xchg
in
cmp
pushf
push
popf
repz
lret
adc
lock
gs
fistpll
sub
inc
in
popf
inc
mov
movsb
or
jbe
or
js
loop
test
sub
jmp
and
sub
je
add
jl
das
data16
pushl
ret
ror
bt
mov
clc
rol
bt
cmp
add
bt
pusha
not
push
mov
pushf
mov
ror
call
push
cwtl
push
not
not
pusha
pushf
lea
push
pushl
movl
jmp
call
repz
push
imul
mov
out
sahf
ss
mov
jmp
cltd
jb
sbb
xchg
sub
add
push
pop
sbb
lods
mov
repz
jmp
add
enter
fistl
sbb
xchg
inc
push
push
add
jbe
std
push
imul
adc
imul
push
jmp
cmpsb
dec
hlt
inc
sar
mov
fimull
ficoms
mov
nop
insb
add
mov
add
dec
push
jg
jmp
lods
jmp
cwtl
xchg
adc
inc
dec
pusha
movsbw
lea
movb
jmp
pusha
mov
push
imul
xchg
inc
push
das
push
jg
pop
or
mov
stos
push
cmc
test
mulb
mov
and
xchg
pop
and
adcl
adc
mov
push
das
imul
dec
sbb
lret
and
repnz
pop
andl
mov
push
cmp
add
aad
pushf
aad
xor
add
cmp
aam
sbb
push
fdivs
jne
add
jp
cmpsl
roll
push
lea
je
pusha
push
pusha
lea
jge
mov
jmp
xor
jmp
call
pushf
jmp
mov
push
cwtl
jmp
lea
jae
stc
jmp
add
xor
rol
rcr
inc
mov
cmc
cmp
push
call
jmp
mov
call
rcrb
or
shrb
or
xchg
aas
mov
lret
testb
adc
xchg
mov
out
cmp
xchg
or
xchg
mov
jmp
jb
mov
shr
std
push
lret
mov
divb
push
nop
in
jbe
icebp
and
out
fs
xchg
je
shll
jmp
mov
loopne
les
adc
sahf
dec
out
popf
mov
imul
ja
iret
jmp
sbb
jbe
and
jp
pop
jl
push
inc
dec
push
push
inc
push
cmp
cs
insb
add
mov
sbb
decl
and
jne
test
jmp
cmc
mov
push
test
pushl
push
lea
jg
pushf
lea
je
push
add
bt
clc
cmp
pushf
lea
jb
cmp
push
cmc
pusha
cmp
jmp
cmp
test
pusha
lea
je
call
and
inc
push
imul
daa
fidivl
cmp
mov
imul
clc
lahf
aam
inc
loope
jmp
inc
cmp
xchg
adc
sahf
call
mov
fwait
jb
test
shll
xchg
push
out
xor
xchg
aas
push
sub
ss
pusha
cmp
xchg
or
cmpsb
push
jns
add
into
movsb
aad
or
dec
mov
scas
nop
push
xor
roll
add
push
arpl
out
cmp
jae
inc
out
pop
testl
and
test
mov
mov
pusha
lea
jne
call
test
pushf
sub
pushf
cmc
pushw
popfw
push
inc
push
mov
call
pushl
popl
push
push
pushf
mov
pushl
ret
push
lea
jae
mov
mov
push
push
inc
mov
push
jmp
clc
cmp
push
mov
lea
jle
pusha
lea
jae
push
pusha
cmp
pushf
movb
lea
ja
setnp
pushf
setbe
call
mov
inc
push
imul
pop
mov
xchg
inc
and
out
call
ret
mov
aas
and
push
dec
fsubs
mov
insb
mov
std
jns
cli
pop
xor
fwait
cli
lahf
imull
ret
mov
lret
inc
mov
test
mov
arpl
hlt
pop
push
cmc
jne
ret
lcall
sti
and
shld
sar
mov
cmp
cmc
pushf
clc
and
pusha
add
sub
jmp
push
mov
mov
call
pushl
cmc
sub
mov
clc
stc
cmp
pushl
lea
ja
jmp
lea
jb
cmc
pushf
cmp
cmp
jmp
call
lea
je
sets
movzbl
lea
pusha
movzwl
mov
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xor
pushf
movl
pushf
movl
pushf
lea
jmp
mov
movw
mov
movb
pushf
pushl
ret
sarl
push
imul
jl
pop
scas
cmp
sub
xor
lahf
jp
sbb
push
xor
ja
jmp
loope
cmpsl
push
xchg
adc
ret
add
lcall
sub
cli
push
jae
cs
push
arpl
push
add
push
iret
movsb
sarb
mov
rcll
addr16
jp
dec
test
das
mov
and
dec
xchg
sarb
xor
jne
cli
nop
xor
retw
mov
jge
lea
jne
pushf
call
mov
push
lea
jmp
push
bound
adc
out
ret
imul
xor
push
sub
cld
adc
push
mov
xchg
pop
adc
sti
or
push
inc
pop
jno
add
into
in
jg
shrb
mov
sub
cmp
loop
ret
mov
xor
pushf
clc
mov
xchg
pop
mov
sti
push
stc
cmp
jl
in
andb
pop
es
nop
sahf
in
sub
fistps
ret
pusha
push
mov
push
out
cmp
sbb
jno
sbb
mov
pop
lds
dec
push
push
cmpsl
mov
and
je
jb
add
aam
push
and
insl
sar
mov
jle
scas
fimuls
lods
add
dec
outsb
push
in
mov
adc
lret
push
or
out
jle
inc
mov
sahf
pushf
mov
push
lea
call
jne
push
lea
jne
not
mov
push
pushf
lea
jmp
pushf
lea
je
xor
neg
add
xor
sub
sete
cmc
bts
shl
shr
sub
xchg
sub
stc
mov
stc
add
shld
dec
add
bt
btc
sbb
sub
mov
pushf
shr
jmp
mov
pusha
inc
pushl
pushf
pushf
pushl
lea
jmp
xchg
sbb
call
call
fdiv
cld
mov
sbb
ljmp
cmp
pop
xor
aas
xor
fwait
push
cmp
ret
jl
sbb
and
lahf
test
shlb
fsin
stos
ss
and
xor
xor
pop
ficompl
aad
inc
cwtl
out
subb
lcall
jl
cmp
push
cs
push
int3
cwtl
or
ffree
in
dec
shll
xlat
movsb
les
and
push
or
pushf
mov
lea
je
push
push
call
pushf
movl
pusha
pushl
movl
push
pusha
pushf
lea
jmp
pushf
stos
sets
jmp
ljmp
stc
lret
jle
sub
pop
out
test
mov
inc
in
push
outsb
leave
and
jbe
jne
data16
stos
movsb
fs
mov
outsb
lret
mov
push
imul
jge
insb
add
repz
cmp
shrb
or
sbb
outsl
pop
adc
call
pop
cmc
fs
cmc
filds
sub
daa
insb
pop
imul
leave
jg
mov
cmpsl
inc
ret
jle
scas
pusha
push
and
mov
ja
dec
cwtl
aas
lahf
sar
mov
into
and
or
movsl
mov
fidivrl
out
push
pop
popa
sbb
xchg
or
popa
sub
clc
std
fsubl
mov
mov
fldenv
loopne
leave
mov
scas
lret
icebp
ja
loope
jns
pusha
scas
jle
adc
stos
and
mov
pusha
jmp
jmp
or
aad
cwtl
int
rcrl
pop
movsb
lret
lret
into
lret
pop
fs
cmp
add
pushf
pushl
pushf
lea
jae
stc
cmp
clc
bt
sub
pusha
call
movl
movb
lea
ja
push
sub
movzbw
stc
push
add
add
sar
seta
mov
test
mov
stc
clc
clc
repnz
push
pusha
call
lahf
xchg
sbb
fisubrs
inc
mov
jg
pop
addb
jns
sbb
add
inc
inc
jge
push
lret
jecxz
movb
dec
stc
mov
jmp
gs
mov
dec
jp
and
movsl
pop
nop
add
inc
sub
or
bound
and
inc
std
dec
mov
xor
lock
mov
pop
dec
or
cwtl
mov
cs
xchg
dec
in
jae
stos
rcl
sub
test
loop
or
dec
loope
nop
sti
call
jge
add
ljmp
cmp
push
jb
icebp
dec
iret
xorl
sbb
jmp
or
xchg
jno
jmp
push
int3
and
xlat
js
negl
jle
in
in
mov
mov
out
pop
dec
jg
mulb
mov
bound
adc
test
pop
push
hlt
insl
jmp
push
cmp
add
nop
jmp
int3
mov
adc
xor
xchg
out
movb
mov
addr16
mov
iret
and
jnp
inc
jg
lods
insl
lea
inc
jg
pop
or
scas
xor
in
mov
in
adc
cwtl
insl
cwtl
sbb
arpl
jns
push
sbb
cmp
call
mov
mov
ss
cmpsb
ret
add
mov
out
add
je
jo
xor
xlat
andb
cmpsl
inc
jecxz
fstpl
cmpsl
mov
jmp
cltd
div
pop
xchg
jge
jns
out
push
fdivrs
ffreep
ret
fisubl
pop
imul
popf
out
rcr
shrb
jecxz
xchg
aaa
popa
fstpl
ja
mulb
insl
mov
pushf
mov
call
cmp
jmp
cmp
mov
push
mov
enter
sbb
repz
imul
push
pushf
in
jnp
xlat
mov
xchg
jecxz
xor
jns
stc
cmpsb
sahf
subb
sub
add
jbe
lods
aas
xor
gs
add
push
roll
push
insb
iret
jo
mov
adc
push
and
push
pop
mov
mov
mov
rcrl
js
loope
push
fwait
dec
pop
jne
ljmp
arpl
popf
dec
mov
cmp
icebp
cmc
insl
jmp
mov
arpl
jl
pop
out
dec
adc
sub
sahf
enter
push
rorl
es
or
popa
scas
mov
jg
jmp
lret
adc
mov
scas
xor
jecxz
sub
pushf
out
nop
sub
cmpsl
outsl
fimuls
mov
aad
xchg
stos
or
sbb
flds
push
mov
aam
or
pop
imul
dec
mov
lret
imul
aaa
adcb
push
or
pushf
lods
cmp
inc
add
or
imul
push
pop
data16
xlat
aam
test
lds
mov
lret
sbb
push
or
cmpsb
repz
xchg
pop
aas
fcompl
pushf
mov
sar
outsl
mov
xor
sbb
lret
aas
addr16
arpl
sub
pop
loop
mov
jl
pop
xor
inc
rcrb
pop
dec
or
fsubrl
filds
add
pop
mov
sbb
outsl
push
jns
mov
imul
je
ficoms
adc
clc
xchg
stc
adc
xchg
enter
out
cmp
or
icebp
hlt
ljmp
mov
dec
cs
and
je
push
lea
pusha
not
not
movzwl
pusha
mov
lea
bswap
lea
pop
movzbl
lea
je
mov
push
movw
jmp
lea
jb
stc
stc
jmp
lret
push
fistpl
bound
stos
stos
clc
push
push
decl
push
fwait
sub
dec
insb
mov
fsubrl
arpl
enter
push
jo
out
scas
cltd
in
pop
pop
data16
decb
add
mov
and
out
push
sub
cmp
add
adc
jae
mov
jnp
es
jbe
addr16
sarl
in
in
idivb
loop
and
dec
pusha
dec
leave
and
jg
mov
imul
test
jmp
and
das
sbb
jp
es
jge
loop
popf
xor
jae
cld
dec
in
out
xor
sti
pop
fs
sub
xor
test
daa
push
or
bound
lods
sti
sarb
pop
xchg
sbb
arpl
pop
mov
mov
pop
sbb
adc
repz
or
stos
add
sub
cmpsl
mov
je
mov
hlt
ds
xchg
aaa
mov
dec
pop
push
test
push
pushl
pushf
lea
je
ja
sbb
jmp
add
add
or
fld1
cmp
push
stos
add
aas
xor
dec
xlat
js
mov
push
mov
xor
fmull
dec
fistps
cmp
in
test
andl
adc
adc
insb
in
rcll
adc
sbb
fwait
js
pop
addl
xchg
insb
jnp
decl
add
stos
adc
cmp
ss
xchg
es
in
test
pop
add
jae
ficomps
xlat
frstor
movsbw
mov
bswap
push
movsbl
push
setle
pusha
lea
pushf
call
int3
popf
call
or
pushf
pushf
push
jmp
push
mov
lea
jno
push
pushf
pushf
movb
mov
lea
call
pushf
pushf
mov
jmp
mov
mov
pushf
pushf
pushf
lea
jmp
push
call
and
bound
jecxz
fisubs
int3
mov
lahf
loope
jge
inc
push
sub
xchg
out
lods
into
jl
fstpt
push
jo
fisttps
push
fldcw
movsb
jmp
cmpsb
sub
xor
xchg
sarb
mov
mov
fnstenv
xchg
call
dec
lcall
loopne
jecxz
sub
fwait
inc
jne
jmp
dec
push
cmp
pusha
call
movb
lea
jae
push
call
pop
dec
mov
imul
mov
pushf
ljmp
shr
mov
lods
mov
cmp
xchg
sub
jne
clc
pop
insl
test
sbb
data16
mov
push
inc
mov
popf
leave
insb
jmp
mov
pop
ss
hlt
xlat
fcomps
cmp
xchg
ja
push
hlt
adc
push
repz
jl
ret
insl
fs
xchg
dec
push
inc
mov
pusha
lea
jae
pusha
pusha
sub
push
lea
call
pushf
jmp
lea
ja
clc
imul
stc
stc
cmc
cmp
add
push
lea
jmp
mov
call
lea
jne
bsr
cmp
or
sub
ror
xor
lea
sub
mov
pushf
ror
add
and
call
movb
mov
movb
test
test
add
cmc
cmp
stc
call
jnp
and
mov
mov
inc
ljmp
std
in
inc
out
sar
clc
repz
lret
sbb
inc
scas
popf
mov
dec
xor
adc
fwait
sbb
mov
mov
in
inc
out
xchg
ds
rorb
lret
adc
add
lods
movsl
out
test
push
fsubs
bound
sub
insb
cld
inc
cmp
mov
push
push
adc
or
push
mov
or
lds
out
mov
repnz
add
ret
and
inc
mov
loopne,pt
sub
insb
fnstsw
mov
add
xchg
sti
dec
lds
fidivrl
dec
mov
mov
adc
movsl
pop
jno
es
sbb
mov
mov
movzbw
pushl
popl
lea
mov
call
clc
pushf
sub
clc
cmp
pushf
jmp
push
push
pusha
pushl
pushf
movl
pushf
movw
lea
jmp
jge
dec
imul
popf
cld
cmp
test
andb
jl
add
movsb
dec
outsl
std
shrl
sub
xor
xor
dec
cmp
ss
push
cmp
add
push
add
sub
fists
sbb
imul
sub
adc
mov
stc
in
mov
adc
cmpsb
insb
insl
orl
inc
call
jecxz
add
jns
imul
dec
out
incb
inc
adc
sub
je
aas
cli
and
mov
pop
push
mov
and
xchg
test
push
lock
scas
pop
push
rcll
int3
add
sbb
jb
jne
iret
push
cmpsl
in
cs
sub
dec
xor
adc
test
iret
addr16
bound
leave
dec
insl
pop
sbb
xor
jmp
sub
xchg
mov
inc
popf
ljmp
test
pop
jmp
or
lret
xor
push
push
sbb
pop
sub
pop
xchg
mov
push
add
repnz
mov
int3
fs
push
sub
mov
out
push
cmp
pop
inc
inc
int3
imul
pushl
popl
call
jmp
jmp
movw
lea
ja
jmp
pushf
lods
bt
stc
rol
pushf
jmp
mov
testl
and
int
inc
mov
lcall
dec
mov
ljmp
jae
xor
adc
mov
aaa
sahf
xchg
test
sahf
dec
mov
add
sub
xchg
mov
mov
or
stos
inc
in
xor
xchg
addb
andb
cltd
pop
push
aaa
pusha
aaa
inc
loopne
push
mov
dec
mov
or
or
adc
and
mov
xor
ficoms
adc
mov
add
add
add
mov
shrd
push
rcr
cmc
mov
movsbw
add
and
rcr
sub
shl
push
aaa
bsr
push
aaa
rcl
push
pushf
aas
shrd
sub
pop
lea
call
clc
sub
imul
mov
addr16
hlt
inc
xchg
cltd
mov
scas
lret
imul
add
xchg
xor
or
xchg
jge
cmp
mov
sub
mov
inc
add
pop
andb
ret
pop
lock
cli
and
lret
xchg
pop
cmp
and
in
aaa
ret
aas
add
push
push
sahf
xchg
sbb
mov
jp
xor
inc
cmp
fadds
imul
cmc
pop
or
movsb
dec
mov
mov
cmpsl
sub
jae
pusha
std
jnp
jnp
cwtl
push
mov
loop
notl
lret
inc
ss
push
mov
nop
xor
jnp
fwait
dec
xorb
mov
aam
movsl
lcall
ficompl
xchg
test
or
daa
out
push
sub
pop
shlb
in
adc
pop
cmp
dec
repz
out
xchg
push
jge
push
aaa
or
mov
in
xchg
xchg
negb
inc
inc
shll
cmp
push
sbb
sbb
mov
push
outsl
adc
scas
adc
cmp
add
or
cmp
mov
cmc
shrb
pusha
xor
xchg
cmpsl
push
xor
jge
cwtl
clc
aad
or
xor
pop
popa
aad
ret
jge
into
cwtl
xlat
inc
aad
push
ds
bound
jg
xchg
ffree
inc
and
icebp
sub
call
or
dec
push
push
and
in
adc
add
mov
fidivl
fsubl
imul
cli
arpl
andl
imul
lret
and
lods
fisubs
pop
mov
mov
push
jae
xchg
jmp
movl
xchg
cltd
je
lret
pop
les
int
xchg
sub
jg
xchg
insl
ret
push
les
pop
mov
testl
lock
add
leave
add
outsl
or
add
cmp
call
sarb
imul
mov
loopne
pop
mov
pop
leave
and
subb
mov
or
test
ret
push
adc
dec
lahf
cwtl
cmp
xchg
jmp
push
cmp
out
out
insl
call
movsb
mov
cli
or
fidivl
xchg
into
sub
push
repnz
cld
imul
incl
adc
or
push
fsts
ret
movsb
or
das
pusha
andb
mov
push
xchg
gs
xchg
outsb
cmpsb
sbb
cld
int3
pop
lock
pop
je
lea
pop
push
cmp
jmp
aad
dec
fs
push
gs
iret
rdmsr
and
cld
lahf
jg
jp
or
inc
mov
cmp
insl
test
mov
aas
xor
outsl
add
bound
js
inc
jmp
and
cmp
daa
jae
movsl
cmp
andl
pop
repz
pushf
call
pusha
pusha
mov
mov
push
pusha
lea
jmp
mov
lea
jne
bswap
cmp
mov
movzbw
or
bt
sub
bsr
btr
shld
shld
mov
cmp
clc
sub
test
pushf
pushl
popl
pushf
cmp
cmp
cmp
jmp
out
pushf
push
bound
xchg
les
pop
lock
arpl
in
roll
inc
mov
and
add
insl
push
add
and
pop
enter
adc
dec
xlat
mov
fnclex
lds
stos
imul
dec
scas
inc
mov
aas
dec
pop
movsl
jg
dec
cmp
adc
aaa
cmp
imul
pusha
sbb
sbb
or
lret
into
push
daa
xor
jge
out
iret
addr16
or
rclb
outsb
inc
stos
sbb
int3
pop
cmp
fisttps
stos
je
jmp
nop
negl
lahf
rcll
jmp
call
inc
and
test
bound
fs
iret
jns
jmp
xchg
inc
cmp
mov
mov
sub
xor
fisttps
jl
imul
cmpsb
pop
fstpt
nop
inc
mov
jp
or
rcrb
lahf
insl
pop
adcb
jns
sub
inc
shlb
fisttpl
decl
push
loopne
xchg
in
clc
lret
imul
pop
xor
or
cmp
jns
test
outsb
cmp
push
xchg
push
lahf
or
out
xchg
jne
inc
xor
sub
movb
movl
call
push
lea
ja
sub
ror
pushf
add
test
pushf
mov
movb
cmp
mov
pushf
lea
jb
jmp
dec
lahf
and
imul
lea
xchg
jbe
je
pusha
loope
fwait
adc
pop
int3
mov
fs
mov
xor
pushf
xor
lahf
mov
aad
mov
ljmp
mov
and
xor
sti
or
push
cli
sub
out
dec
sbb
int3
ljmp
loop
into
neg
ficoms
das
and
add
dec
fwait
pusha
mov
inc
call
ljmp
scas
adc
daa
pop
inc
insb
pop
or
jb
lcall
jge
pop
in
add
dec
movsb
pop
pushf
mov
pop
lahf
scas
out
or
and
dec
jmp
aas
fcoml
jae
mov
jno
pop
xchg
jo
bound
xor
scas
and
sbb
jnp
repz
push
or
jg
add
jnp
or
jg
pop
shl
push
xor
cmp
or
cltd
and
sub
aad
leave
pushf
jne
out
xchg
and
repz
sbb
bnd
inc
push
roll
adc
stc
sahf
sbbb
mov
or
and
pop
xor
pushf
push
pushf
movb
lea
jmp
bt
cmpb
pushl
lea
jne
rcr
cmp
bt
sub
bsr
cmc
mov
cmp
not
bt
add
sar
test
mov
call
push
sete
add
add
lea
sub
clc
ror
mov
not
sub
mov
pushf
bt
pushf
repnz
call
push
movl
push
lea
jmp
jmp
repz
mov
imul
dec
sbb
notb
pusha
or
sub
push
scas
pop
pop
leave
push
cmc
test
xlat
mov
and
xchg
insb
insb
mov
sbb
loop
dec
adc
leave
cmp
out
or
mov
cmp
xchg
je
inc
gs
add
cmpsb
cltd
mov
test
imul
pop
das
push
xor
addr16
xchg
and
jg
dec
ljmp
int
test
cmp
insl
jle
and
dec
popa
xor
in
pop
xlat
lock
mov
sub
clc
fucomi
ret
jecxz
dec
cmp
push
xchg
mov
sarb
pushf
or
push
outsb
and
ljmp
add
lds
dec
mov
push
or
xor
mul
push
dec
xor
pop
in
vpunpckldq
leave
and
xlat
insl
lds
mov
mov
and
or
jmp
mov
std
outsb
imul
add
addr16
sub
ljmp
push
sub
adc
sub
stos
fwait
push
inc
push
mov
test
cmpsl
dec
pop
or
aam
fwait
pop
test
mov
ss
lea
test
cltd
int3
es
xchg
and
cmp
bound
mov
call
lea
jmp
pop
gs
inc
jnp
popa
test
imul
add
dec
mov
repnz
mov
cmp
xchg
jg
push
jo
and
out
stos
adc
pop
jb
sbb
outsb
push
and
repnz
xchg
cs
xlat
xchg
sub
adc
push
sti
dec
push
xchg
fldcw
and
popa
cmp
ljmp
add
pop
mov
pop
in
jno
stos
cmp
paddw
pop
jbe
clc
subb
mov
sub
call
add
test
cmp
call
dec
addl
jno
ljmp
sbb
leave
sbb
dec
lods
sbb
testl
inc
xchg
lods
cmp
loop
jmp
fxch
fldl
xchg
cmp
sbb
mov
imul
shr
adc
stos
lea
fcomps
aam
or
rcrl
sub
push
mov
jge
xchg
cmp
xor
xor
cli
push
popf
xor
cmp
out
adc
jbe
push
jp
jo
bound
test
loop
or
dec
inc
xlat
sub
pop
ljmp
aad
fucomip
inc
out
aam
jl
pop
mov
outsb
incl
int
out
mov
adc
push
sub
or
dec
pop
int3
pop
push
int
movsl
inc
aad
stc
cmp
xlat
sub
stos
adc
incb
mov
aad
fs
inc
xchg
sbb
bound
repnz
mov
lahf
fs
aad
or
incb
jl
push
loopne
ss
gs
sbb
mov
loop
mov
cld
dec
mov
dec
push
or
xchg
mov
mov
mov
jae
cli
xchg
aad
xchg
fdivp
fists
cmpsb
add
and
scas
out
sti
mov
mov
push
jmp
cmpsb
loop
cmpsb
jmp
cli
enter
mov
ret
cmp
jne
or
lcall
inc
add
ljmp
in
xchg
jg
xchg
sbb
leave
clc
lods
test
xchg
in
stc
mov
push
je
movsl
ljmp
das
push
sbb
rcrb
cmp
das
stos
pop
mov
movsl
cwtl
cmc
mov
pop
in
pop
ret
andl
or
sbb
addb
pop
imul
ljmp
cmp
out
jmp
and
push
jb
bound
inc
scas
les
add
jg
ret
dec
add
sub
shrb
mov
lods
ret
sub
lods
ja
add
test
out
and
push
inc
rolb
iretw
dec
xchg
test
hlt
dec
or
insb
mov
push
out
test
mov
mov
sub
bound
shlb
and
pop
sub
test
jae
stc
or
insb
or
dec
je
lock
clc
pop
jb
rclb
cmpsl
test
andb
outsl
mov
pop
jo
cli
cltd
daa
pop
std
adc
xor
insb
sbb
leave
mov
or
or
mov
int3
lea
repnz
clc
mov
andb
and
dec
jno
mov
xchg
ljmp
filds
or
mov
mov
adc
push
add
pushf
lea
je
push
cmp
add
cmp
pusha
cmp
pushl
cmp
pushl
mov
pushl
pushf
lea
jb
clc
push
jmp
pushf
pushl
popl
push
movb
pushl
ret
cmp
clc
push
or
pushf
lea
jne
bt
mov
bt
test
jmp
mov
bound
enter
and
push
outsl
push
inc
es
jg
inc
sbb
not
icebp
sub
adc
add
xor
test
add
sbb
rorb
and
hlt
fisubrl
sub
test
out
lcall
jnp
lcall
lods
insb
lahf
inc
mov
hlt
inc
adc
test
jg
pop
xchg
rolb
pop
insl
inc
cmp
out
xchg
sbb
adc
test
ret
pop
iret
inc
push
push
in
cmp
inc
nop
push
xlat
andb
jecxz
call
add
dec
outsl
arpl
inc
jb
gs
xor
push
pushl
ret
cmp
clc
cwtl
mov
in
lock
pushf
mov
out
sbbl
jo
mov
jne
sbb
xor
cwtl
jg
pop
daa
jp
xchg
stc
test
aaa
xchg
js
xlat
jp
and
imul
aaa
xor
fcmovb
or
mov
jp
add
in
mov
sub
lret
inc
lock
sar
mov
cwtl
jae
or
lock
stos
xor
js
lock
sub
fldt
cmpsb
mov
ret
jnp
je
out
cmp
lcall
pop
scas
or
jb
and
inc
and
mov
in
movsb
icebp
pop
rorl
in
out
and
mov
and
push
jp
or
out
rorl
mov
jne
mov
jg
test
orb
out
cmpsl
or
mov
stos
xchg
stos
or
sbb
adc
sbbb
push
shll
bound
scas
roll
imul
cmp
and
popf
sbbb
pop
sbb
xchg
call
xor
test
das
js
mov
push
jb
dec
or
mov
sub
loope
mov
lcall
mov
dec
add
notl
aad
mov
fcoml
imul
rcrl
clc
stos
mov
cmp
sub
xor
pop
push
in
sbbb
daa
pop
cltd
pop
mov
test
mov
mov
inc
pop
lcall
pop
fdivrl
clc
sub
ljmp
enter
daa
cli
movw
movl
pushf
pushf
call
pusha
mov
lea
call
bt
bt
call
jae
dec
ja
bound
fdivrl
int
adc
js
aaa
pop
sbb
sti
sub
cmc
sti
pop
out
push
int
push
dec
jle
pusha
and
in
xchg
mov
and
adc
mov
xrelease
into
and
scas
jne
pop
out
xchg
jnp
ficompl
fisttpl
sbb
jnp
push
sub
push
cs
cmp
testb
and
call
jl
jns
imul
push
xor
jmp
fdivl
push
ds
bound
loop
into
fildll
pop
mov
pop
mov
int3
dec
shll
repnz
mov
push
ja
decl
enter
fbstp
push
sub
fiadds
nop
push
stos
dec
rclb
stc
je
lret
sub
stos
pop
lock
cld
push
les
lock
push
clc
das
push
add
es
lds
mov
rcr
test
movsb
sbb
add
or
inc
js
bound
cs
sbb
xchg
stos
xchg
andb
vmread
inc
jp
mov
jp
dec
pop
sbb
test
aas
int
shlb
addr16
stos
mulb
in
lea
ss
fimull
repz
movsb
das
icebp
mov
and
cmpsb
out
popf
sbb
aam
adc
das
addr16
cmp
xor
and
aas
pusha
jg
mov
cmc
pusha
jp
cmp
not
sahf
sbb
hlt
adc
lret
pop
in
xorl
fdiv
adc
pop
jecxz
js
xchg
sbb
imul
sbb
sub
mov
xchg
mov
lds
or
xlat
lcall
add
cli
xchg
jns
dec
xchg
fidivrl
mov
pusha
iret
mov
stc
mov
ds
xchg
addr16
jge
add
clc
or
pushf
call
push
movl
movl
mov
push
mov
push
pushl
ret
add
aas
aas
pop
inc
aas
and
popa
jae
arpl
data16
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
push
inc
inc
pop
pop
pop
add
or
and
outsl
js
bound
movsl
repz
mov
pop
or
out
push
pop
push
mov
sub
dec
in
xchg
pop
rorb
andb
in
mov
pop
pop
dec
jge
inc
jno
mov
pop
cltd
jb
jae
int
push
jecxz
aam
shrl
mov
sti
cmp
scas
fisubs
pop
fdivs
push
cmp
daa
push
loop
in
jb
fsts
rol
pop
sub
push
bt
cmp
cmp
pusha
lea
jne
pusha
jmp
add
jle
imul
loope
test
imul
in
ret
pop
pop
daa
sti
shrb
cltd
sub
rol
jne
jno
es
repnz
stos
add
cmp
or
xchg
cld
pop
mov
gs
mov
loop
fimuls
bound
push
mov
test
cmpsl
xor
leave
cmpsl
xchg
daa
addr16
rorl
xchg
outsl
xchg
jae
clc
xchg
push
in
cwtl
loopne
addr16
sub
fmulp
push
fdiv
cwtl
insl
mov
icebp
ds
jmp
scas
call
shr
call
addr16
sub
lods
ficompl
loop
and
into
cltd
and
inc
mov
stos
jg
lock
push
cmpsl
adc
insl
push
pop
add
in
leave
lods
add
rorl
ret
jae
int3
and
adcb
jbe
data16
stos
jnp
ficompl
jns
jb
mov
pushf
add
clc
mov
stc
call
pusha
add
push
movw
movb
pushl
lea
jmp
push
scas
adc
bound
incb
lret
sub
dec
mov
sub
cmpsl
mov
pop
ds
push
mov
pop
cli
xchg
sbb
out
in
jno
jo
sarb
into
mov
roll
xor
xchg
inc
xchg
mov
out
aad
out
cmpsb
inc
scas
pcmpeqd
leave
je
lods
das
fstps
cmp
adc
loope
pop
adc
add
mov
hlt
xchg
scas
add
or
jp
int3
sub
and
pop
jo
or
mov
repz
mov
daa
xchg
mov
repnz
aas
jl
in
sub
cmc
inc
mov
mov
push
fistl
push
push
mov
mov
and
bound
mov
push
jp
sub
push
xor
add
in
xlat
and
les
and
mov
add
call
push
dec
mov
cmc
push
test
pushl
pushf
pushl
lea
je
cmc
test
cmc
cmp
sub
test
push
cmp
jmp
mov
pushl
popl
pushl
pushf
pushl
ret
movsb
orl
imul
dec
sbb
stos
cmpb
xor
push
ds
add
icebp
repnz
icebp
movsb
cld
pusha
and
xor
xor
xor
in
cmp
sub
xchg
cmp
outsl
pop
mov
mov
xchg
cmp
jle
cli
fcomps
mov
push
push
cmpb
aas
adc
push
add
add
nop
les
aam
mov
mov
xchg
inc
mov
repz
rcll
mov
sbb
adc
push
enter
xchg
outsl
cmpsb
jl
data16
pop
mov
daa
into
or
or
aas
inc
clc
js
arpl
cld
out
imul
cmp
mov
dec
cmpsl
loopne
cmp
mov
sub
rcl
call
imul
mov
aaa
jecxz
mov
pop
hlt
or
cmp
call
push
xchg
inc
pop
pop
ret
mov
pop
les
rorl
call
lret
mov
mov
pop
dec
ret
dec
out
xchg
xchg
negb
jns
imul
mov
pop
or
cmpsl
int3
push
inc
mov
jbe
stos
imul
jno
sub
jecxz
mov
adc
adc
int
adc
or
fstpt
hlt
sub
mov
pop
inc
or
add
mov
or
mov
popa
mov
fcompl
mov
mov
adc
adc
inc
lahf
inc
cmp
les
cld
lahf
outsb
push
scas
adc
cmp
jge
mulb
into
nop
inc
fstps
jo
ja
adc
clc
int
pop
adc
test
mov
aad
shl
aas
sar
xor
aad
stc
not
mov
pusha
and
add
add
sar
mov
movb
bt
jmp
pusha
pushf
cmp
mov
movw
lea
ja
push
clc
mov
bt
imul
call
jmp
mov
lea
je
clc
push
clc
sub
bt
pusha
call
mov
movb
movw
pushf
mov
pushl
ret
sti
sub
imul
mov
leave
xor
or
sbb
lea
sbb
stc
test
loop
in
dec
pop
in
inc
jb
jns
popa
pop
mov
les
and
jecxz
test
sub
int
pop
push
sbb
inc
sub
lock
pop
push
stos
outsb
mov
dec
es
adc
pop
sub
pop
fsubl
lds
adc
pop
pop
xchg
cmpsb
xor
jmp
cli
mov
or
cwtl
inc
mov
mov
bswap
pusha
movl
pop
lea
pusha
movb
movb
call
btr
mov
push
bt
clc
cmp
add
pushl
cmc
call
call
mov
lea
je
cmp
call
mov
fnstsw
bound
push
cmp
push
andb
insl
lret
lods
adc
pop
jecxz
sti
lret
sub
shll
xchg
mov
jmp
push
jmp
lret
sahf
jl
enter
int
loop
or
lods
das
subb
les
mov
add
into
add
les
fistl
fcoms
pop
push
xchg
roll
push
repnz
cmp
mov
pop
and
push
add
insl
push
xor
sub
hlt
mov
push
ljmp
xor
js
inc
jg
sbbl
cmpsb
push
sub
cmp
and
out
mov
dec
mov
stos
in
mov
imul
mov
push
xorl
mov
push
scas
cltd
add
push
insb
test
imul
xchg
in
mov
roll
dec
cld
push
cltd
xlat
je
nop
cmp
mov
pusha
push
xchg
mov
outsl
mov
push
mov
mov
inc
mov
sub
xor
mov
test
xchg
dec
and
sbb
shr
push
repz
pop
loopne
stc
jl
clc
cmc
sub
jmp
bt
pushf
push
add
pusha
pushf
lea
jmp
jmp
add
cmc
cmp
cmp
mov
dec
bswap
mov
stc
bt
clc
cmp
mov
push
lea
jbe
xadd
dec
ror
call
mov
lea
js
pusha
mov
mov
lea
pushf
mov
pushf
pusha
pushl
ret
sub
lcall
mov
pop
mov
loope
stc
mov
into
mov
mov
mov
cmc
inc
cmp
mov
fnsave
test
and
push
arpl
popf
or
out
adc
arpl
inc
sarb
loop
dec
outsb
lock
push
pop
jns
inc
jo
mov
cld
mov
xchg
in
cmp
dec
push
cmp
subb
xchg
mov
pop
jno
adc
cmp
jmp
sbb
inc
rcrl
mov
add
fsts
push
nop
loope
add
dec
mov
jl
int
shrb
xor
mov
mov
sbb
jbe
in
ds
fisubrs
sub
les
sbb
jns
and
cwtl
in
mov
out
scas
hlt
jmp
lea
jne
pushf
jmp
shl
test
sar
mov
not
cmc
sar
mov
cmc
stc
push
pusha
repnz
pushf
pushf
push
lea
jne
push
movb
pusha
movzbw
pusha
movsbl
mov
push
movsbw
pop
cwtl
lea
mov
mov
jmp
sub
bound
push
call
sbb
hlt
cli
jbe
add
testl
sbb
inc
repnz
les
jge
leave
sub
xor
dec
mov
lods
cmp
in
fstl
ret
sbb
inc
subb
inc
inc
cmpb
xchg
fdivp
movsl
mov
dec
xchg
lock
and
stos
fwait
pop
aas
subb
test
add
decb
in
or
call
pushf
pushf
bt
sub
call
lea
jne
bswap
movsbl
mov
pushf
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
or
outsb
int
fsubrs
add
cmp
adc
sbb
add
cmpsb
and
adc
xchg
fs
movsb
xchg
adc
ss
push
or
push
fs
cmp
cmp
mov
dec
inc
fwait
jge
fmull
into
mov
push
fbstp
xchg
bound
push
popa
enter
int3
or
mov
mov
mov
das
cli
mov
push
mov
cmp
test
movb
cmp
test
pushf
push
lea
je
pusha
jmp
pushf
pushl
jmp
movl
setnp
lea
lea
mov
mov
pushf
movl
movl
movb
jmp
pusha
pusha
pushf
mov
jmp
mov
cmp
stc
clc
cmp
push
push
jmp
pusha
call
test
call
bt
repnz
pusha
movb
mov
jmp
pushf
lea
je
jmp
pushf
xchg
sub
adc
mov
push
pushf
sub
call
pushf
mov
bswap
pushl
popl
pop
call
dec
dec
mov
imul
mov
jno
jecxz
rcl
pop
jl
out
fs
inc
dec
xchg
das
shr
adc
add
outsl
popf
push
mov
push
cmp
sub
mov
jno
mov
popl
stos
mov
cmpsb
mov
popa
fdivs
xor
push
stc
mov
fiaddl
jge
cmp
pop
mov
xor
pop
push
sbb
or
xorl
mov
dec
push
push
and
inc
and
push
inc
and
lahf
not
not
mov
movl
movzbw
lea
pushl
jmp
lods
pusha
cmc
mov
rol
cmp
pushl
push
cmp
add
jmp
pusha
movb
pushf
lea
ja
call
mov
jmp
imul
bt
call
push
inc
lret
aad
cwtl
test
ljmp
stc
ds
cld
rorl
fsubrs
arpl
push
jo
jecxz
jmp
and
jno
arpl
lretw
pop
roll
pop
mov
es
aaa
mov
stc
imull
lahf
cwtl
xor
fdivl
std
adc
rcrl
pop
std
sbb
mov
mov
or
fs
jne
call
stc
call
cmp
xchg
call
sub
outsl
sbb
jg
insl
inc
xchg
and
mov
repnz
pushf
mov
jecxz
iret
sbb
jge
imul
jo
sahf
repz
push
cwtl
nop
cli
xlat
mov
in
pop
dec
jle
pop
or
shlb
xor
push
clc
xchg
scas
xor
cmp
inc
push
dec
sbb
imul
push
mov
dec
mov
lea
push
mov
jmp
test
pushf
lea
je
call
enter
imul
in
mov
lods
add
sbb
jnp
xchg
cld
das
pop
cmp
jo
and
xchg
jge
add
jnp
fistpll
dec
jne
imul
imul
lods
mov
arpl
dec
dec
outsb
cmp
lods
adc
mov
daa
scas
sahf
xchg
das
daa
fcmove
xchg
mov
fcomp
dec
out
filds
mov
mov
loope
push
stos
fcmovb
push
adc
lret
adc
mov
movsl
aas
xchg
push
push
jecxz
stos
or
xchg
fnstsw
arpl
push
aas
xlat
jb
adc
mov
and
ret
mov
cmp
insl
push
js
xchg
arpl
dec
fldcw
jae
xchg
outsl
cmp
mov
push
les
mov
push
sub
scas
dec
cmp
cmc
adc
inc
fldpi
aam
push
jle
dec
xchg
cs
push
sub
js
fcoms
daa
jp
pop
xor
or
push
mov
dec
add
call
dec
out
xchg
insb
or
push
adc
shrb
mov
mov
aaa
xchg
push
xor
cmp
mov
adc
or
stos
aad
addb
and
mov
xchg
mov
mov
pop
pushf
pop
adc
je
jns
subb
mov
pushf
lea
jne
push
bswap
not
setnp
mov
pushf
sub
movzbw
bsf
lea
cmp
pushl
sub
test
pushl
popl
cmc
test
cmp
jmp
xchg
inc
lret
bound
popa
lahf
mov
sbb
inc
subl
fcomp
pop
in
or
mov
lret
mov
mov
sbb
adc
mov
loopne
test
add
lahf
cmp
add
nop
cmpsb
add
lea
push
sbb
lret
sub
xchg
out
or
jb
das
pop
ror
js
loope
and
sub
sub
jno
mov
mov
add
fs
incl
xor
cmp
mov
test
xor
cmpsl
ficoms
cmp
push
pop
insb
adc
pusha
lcall
rcll
cmp
mov
scas
push
gs
int3
imul
push
add
pushl
pushf
pushf
pushl
lea
jmp
cmpsb
outsl
rorl
negb
xorb
lret
xor
pop
and
outsl
in
jnp
orb
dec
movsb
sub
sub
lds
cmp
or
fsubl
dec
and
pop
out
push
mov
fidivrl
test
mov
arpl
jl
mov
loop
test
call
add
push
gs
popa
jo
outsl
fs
test
add
mov
lea
movb
movzbw
pushf
setns
mov
mov
lea
push
pushl
call
jns
jo
imul
inc
adc
add
popf
inc
int3
cmpsb
loope
inc
ljmp
adc
cmpsl
in
jnp
jbe
xchg
fsts
xchg
cli
dec
imul
adc
lock
scas
leave
pop
lcall
stos
adc
cmpsl
xchg
js
subb
fiaddl
mov
shrl
jbe
es
mov
xor
fmull
pop
rorb
fs
jne
sbb
pushf
bsf
mov
dec
shl
sub
movsbw
lea
add
jmp
push
pusha
movsbw
mov
call
xor
inc
mov
ret
fisubs
iret
sub
test
rolb
call
cmpsl
mov
xor
lret
sub
shlb
je
xor
pop
scas
pop
pop
jnp
inc
test
xor
dec
lret
or
pop
pusha
mov
sahf
lea
mov
sbb
dec
push
jnp
mov
lods
xchg
jp
push
loope
adc
int
cmp
stc
or
pusha
call
pushl
popl
pushf
pushl
ret
jmp
pusha
mov
jmp
call
call
xor
cmp
add
pushf
clc
test
test
xor
movl
test
add
pushf
cmc
pushl
movb
cmp
pushl
movsbw
mov
cwtl
lea
lahf
mov
mov
pushf
lea
ja
pusha
lea
jb
stc
test
call
ja
test
add
call
push
dec
dec
dec
dec
inc
push
cs
insb
add
add
sub
ror
pop
mov
neg
clc
dec
add
and
pusha
mov
cmc
jmp
mov
cmp
in
add
push
outsb
adc
mov
in
pop
sbb
xchg
jo
sti
ja
adc
add
jp
cmpsb
inc
shrb
les
add
and
aad
push
pop
out
mov
idiv
sbb
cmp
xor
loop
jge
push
fs
sub
in
and
and
subb
xchg
add
sbb
popf
mov
push
dec
jo
fsubr
sub
mov
loop
push
inc
mov
mov
sbb
leave
jge
data16
stc
cmp
sub
clc
pusha
stc
pusha
pushl
popl
push
test
call
cmc
mov
pop
shrd
mov
jmp
add
jmp
add
add
add
shrb
add
add
add
jo
add
add
add
add
add
sbb
add
add
push
pop
sbb
add
add
add
add
imulb
add
add
add
cmp
add
ret
adc
pop
sbb
add
sub
add
add
add
push
pop
imul
adc
or
and
scas
fnstcw
pop
jle
or
and
push
stc
shrl
dec
cmpsl
jle
ss
test
add
mov
in
rcrb
daa
xchg
out
inc
fidivs
push
cmpsb
jno
cmpsl
pop
jo
jg
or
rcrl
xchg
jno
sub
sbb
cmp
xor
pushf
push
pushf
lea
jmp
adc
pushf
lea
jmp
faddl
mov
movsl
adc
adc
ja
fs
cli
push
sbb
jb
insl
aaa
mov
lret
mov
jno
loopne
dec
lods
lea
cmp
xchg
andb
xlat
lods
test
sub
cmp
loop
aas
int3
sub
xor
or
sbb
outsb
xchg
repnz
repz
jl
cltd
aad
or
pushf
xorb
and
stc
pushf
bt
add
pushf
mov
pusha
lea
jmp
mov
push
lea
jne
pusha
rcl
sbb
pushl
mov
stc
cmp
or
jmp
pusha
movb
lea
call
pusha
movb
pushl
lea
jb
pushf
pushl
ret
pushl
call
xchg
nop
cli
mov
andl
add
mov
inc
sbb
data16
sbb
jns
add
lcall
mov
ss
aad
iret
stos
ljmp
arpl
repz
sbb
add
sbb
xchg
or
movsl
out
es
xor
cli
lds
mov
jae
imul
sub
mov
mov
call
cmp
mov
int3
popa
add
aam
or
sub
push
cmp
lods
inc
ss
loope
fbstp
sub
cmp
sub
or
jo
sbb
sub
pop
adc
inc
outsb
add
aas
add
push
ljmp
loopne
cmp
sub
dec
sbb
or
sti
xor
mov
cmp
call
jmp
push
clc
jmp
stc
cmp
call
pushf
mov
movw
pushl
pushf
pushf
lea
jmp
stc
cmp
call
xor
bts
mov
rcr
pushf
sbb
add
call
xchg
and
imul
mov
jno
lretw
sbb
jl
jmp
jb
xchg
repnz
ljmp
fs
and
and
pop
mov
xlat
xor
sbb
jecxz
lds
dec
clc
add
popf
adc
sahf
sbb
pop
pop
cmp
loopne
inc
cmp
pop
aas
mov
or
push
out
push
mov
xor
mov
repz
ljmp
cmpsl
fwait
out
and
pusha
lea
jne
dec
bsr
sub
aad
cwtl
sbb
mov
sub
add
clc
mov
clc
push
test
pushf
lea
jb
je
clc
call
jmp
out
mov
imul
pop
scas
aad
icebp
fldenv
cmc
cmp
in
scas
dec
stos
fstpl
and
xchg
insb
leave
test
sbb
shlb
push
sub
inc
sub
sub
pop
aam
cwtl
push
ror
mov
fwait
sub
jmp
imul
cmp
test
notl
cs
arpl
aas
adc
fwait
mov
mov
mov
jp
cmpsl
test
lret
jg
cmc
fbld
ficoms
test
cli
xchg
jb
das
adc
xchg
int
gs
mov
cmc
adc
xchg
jbe
aad
lret
inc
movsl
nop
jp
jo
test
add
xchg
dec
mov
outsl
gs
adc
mov
dec
test
out
lret
es
fbstp
add
loope
jbe
push
ja
push
outsl
cmp
push
or
enter
test
or
pop
dec
jb
adc
add
pop
jbe
xor
in
fildl
or
cmpsb
in
rclb
xchg
imul
in
mov
adc
insb
cmpl
mov
test
lock
subl
mov
lods
adc
aad
dec
int3
js
adcl
arpl
cmp
sub
or
sbb
xor
jecxz
and
mov
lahf
aaa
stos
sarl
sub
sti
js
fdivrs
mov
add
mov
rcrl
sahf
pop
clc
add
add
cmp
push
jmp
lea
mov
movsbw
bswap
mov
mov
not
pushf
pushf
mov
call
sbb
xchg
xchg
imul
jmp
jp
xlat
subb
jge
imul
int3
das
pop
je
movntq
out
adc
daa
dec
mov
cmp
shlb
xchg
sub
inc
mov
pop
outsl
or
cltd
sbb
jecxz
dec
ja
call
dec
aas
add
mov
push
jp
cmp
cmp
in
stc
push
jl
sete
mov
clc
dec
pushf
xchg
dec
pop
pop
sub
push
gs
adc
aad
sarl
lea
sub
mov
in
scas
xor
jae
jbe
cmpsl
loopne
pop
xor
call
jb
or
frstor
or
push
std
je
hlt
popf
xchg
scas
sti
mov
fisttpll
mov
out
adc
fsubrs
jg
scas
repnz
sete
mov
lods
pop
mov
xchg
push
aaa
test
inc
in
jg
aaa
divb
mov
out
cmpsl
enter
adc
lock
inc
cltd
jnp
lods
ja
fildll
es
shl
lcall
or
push
mov
add
dec
out
int3
rcl
cmp
imul
and
ja
push
shl
lcall
or
es
push
jnp
cli
xchg
sub
jecxz
dec
sub
sti
pushf
out
sub
into
fimuls
dec
or
aas
fcmovbe
xchg
adc
cwtl
xchg
push
push
mov
cmp
mov
outsl
mov
mov
roll
inc
jmp
test
pop
or
push
sahf
addb
cmpl
xchg
imul
xor
xchg
std
arpl
mov
lcall
push
lahf
fbstp
jb
fdiv
dec
gs
js
add
add
pop
inc
rcrl
and
xor
clc
adc
push
xchg
mov
xor
sbb
call
repnz
lods
push
pop
sbb
lret
out
data16
imul
xchg
mov
leave
inc
push
fcmovbe
inc
sarb
cwtl
sbb
jmp
sbb
sbb
cmp
insb
daa
push
push
mov
insl
xchg
imul
mov
inc
and
jle
inc
jne
ja
sub
push
sar
mov
push
mov
adc
enter
push
cmp
lahf
inc
lahf
js
data16
imul
or
call
ror
jb
sub
push
sbb
repz
stos
or
xchg
repnz
call
and
bnd
cs
mov
lea
dec
in
xchg
lods
dec
jne
lock
push
nop
loope
mov
mov
mov
not
mov
adc
and
mov
movsb
mov
cmp
notl
push
imul
push
fwait
stos
pop
push
sbb
jb
and
or
ss
test
stc
dec
mov
ljmp
push
fadds
mov
fisttpl
out
nop
decl
push
fcompl
xor
jnp
inc
or
test
sahf
cmp
loope
or
pusha
mov
lcall
adc
movl
pushf
mov
lea
jmp
mov
bound
jl
add
std
ret
pop
sub
adc
push
mov
jge
les
xchg
inc
xor
or
mov
fbld
movsl
pusha
sub
int
or
call
jmp
adc
repz
imul
mov
jmp
push
test
add
push
pop
push
push
jb
addb
or
jge
sbb
cmp
andb
ret
dec
sbb
dec
jne
sub
jl
out
sbb
mov
in
sbb
lret
adc
cmp
cld
fcompl
cmp
lea
xchg
xor
cli
jbe
into
paddusb
ret
shlb
in
or
pop
fistl
mov
mov
push
cmp
and
sti
adc
call
mov
sbb
fcmovnu
mov
xchg
cmpsb
sub
mov
mov
popl
pusha
push
mov
pushl
ret
pop
inc
xchg
imul
sub
jge
neg
mov
or
xor
cmp
outsb
add
cmp
mov
dec
stc
shrl
sbb
xor
cmp
push
into
ja
popl
xor
xorb
jecxz
std
sbb
inc
lods
sbb
jbe
stos
ja
xor
pop
mov
aad
jg
fcoms
jle
cli
adc
aas
jnp
negl
popf
sti
xchg
push
cmpsb
xchg
add
insl
in
popa
xchg
mov
les
push
push
jle
pop
or
js
stos
ljmp
adc
mov
sub
loop
push
xor
mov
cmp
lahf
loopne
dec
ds
hlt
adc
and
or
aaa
dec
ficoml
mov
fimull
iret
dec
or
iret
push
dec
jp
jg
cwtl
imul
cli
adc
pop
es
cmp
mov
push
add
push
jb
adc
mov
sbb
cmp
push
xchg
int
push
adc
sahf
inc
mov
sbb
mov
fcmovne
pop
mov
dec
out
repnz
inc
adc
pop
int3
pusha
cmpsl
mov
loope
ss
and
mov
bt
stc
add
sub
js
cmc
test
call
cmpb
cwtl
imul
fidivrl
lods
mov
pop
stos
dec
inc
cmpsb
div
push
and
shl
shr
cltd
int
jp
loopne
fsubl
adc
inc
lods
xchg
dec
addr16
aam
jecxz
jmp
adc
mov
pop
xchg
cmp
push
push
nop
cmc
cwtl
mov
stos
jns
fprem
repnz
loop
pop
out
fdivs
jecxz
outsb
sub
out
out
sarb
pop
ja
fs
dec
call
mov
mov
push
pusha
push
lea
jmp
in
cltd
imul
and
addl
ret
mov
jmp
add
jns
xchg
push
sbb
mov
pop
cmp
push
movsb
pushf
aas
push
xor
lods
cwtl
leave
sub
cmp
pop
mov
ss
clc
lods
sbb
jge
xor
cmpb
add
cmp
movsl
xchg
jo
xor
call
pushf
and
mov
or
pop
lret
lds
jns
testl
sbb
mov
adc
cmpsl
mov
and
cmp
mov
and
fsubrs
sar
jo
test
jne
sti
fwait
into
mov
in
push
insl
xor
or
subb
ret
push
mov
rclb
inc
and
lea
pop
ret
add
jmp
push
sub
aam
add
xor
out
mov
xor
ja
xchg
xchg
jp
in
sbb
sub
pop
bound
ror
btc
sub
pushf
ror
daa
mov
pop
mov
test
bswap
ror
bswap
shr
bts
inc
mov
test
bt
clc
test
or
pushf
jmp
lea
call
push
pusha
lea
jne
movsbl
mov
pusha
lea
jmp
mov
out
fwait
imul
leave
or
xchg
movsl
sbb
call
inc
dec
call
sbb
ja
out
ja
dec
dec
es
outsb
test
mov
jl
mov
dec
mov
movsb
je
dec
mov
mov
pusha
mov
in
adc
and
sti
ficomps
push
insb
cmp
pop
data16
ss
jp
pop
mov
push
adc
clc
xor
ja
mov
bound
sub
aaa
mov
jecxz
jecxz
fldt
or
scas
push
jp
stos
das
loop
lock
in
cmovb
mov
scas
mov
adc
sbb
mov
loope
push
movsb
dec
test
jbe
cltd
neg
ds
add
cmp
imul
outsb
popf
jne
aaa
xchg
cmp
movsb
call
pop
stos
jg
flds
pushf
mov
jmp
jmp
jmp
loopne
mov
inc
call
adc
jp
pop
mov
mov
or
test
outsb
rep
xchg
arpl
lods
clc
aad
push
jo
arpl
test
pop
adc
push
iret
shll
sbb
mov
pop
es
out
into
xchg
inc
pop
and
repz
stos
inc
movsl
aam
cli
push
fs
pop
add
or
mov
shrb
roll
shll
dec
cli
sbb
hlt
add
sti
bt
sub
mov
jmp
or
pushf
imul
adc
pop
sub
adc
push
negl
lea
dec
fsubs
ds
jnp
and
scas
rcl
xchg
sub
sti
test
ret
add
mov
imul
sbb
rcrb
push
or
insb
mov
lds
pop
fbstp
fisttps
mov
data16
xor
adc
sub
int3
arpl
cmp
popa
sbb
push
cmp
cmp
cmp
dec
data16
push
adc
js
and
mov
bt
pusha
cmp
pushf
pushf
pushl
movb
lea
je
call
pushl
popl
pushf
movw
pushf
pushl
ret
movsbw
mov
push
test
cmc
mov
and
cmp
stc
add
pushf
movw
push
pushl
lea
jmp
add
pusha
pushf
jmp
push
mov
lea
jne
xor
daa
clc
or
xor
aaa
bsf
mov
sbb
add
bt
mov
cmc
cmc
cmp
jmp
pop
sub
bound
btc
mov
inc
mov
and
lea
shlb
jb
add
push
mov
push
cwtl
cmpsl
and
xchg
lds
dec
stos
push
or
scas
xor
mov
jo
imul
mov
ja
sub
jns
fwait
into
xchg
rcrl
or
outsl
scas
and
adc
pusha
dec
push
sbb
dec
cltd
xor
out
dec
push
jo
nop
iret
sbb
xchg
pop
test
std
out
jno
test
test
push
xchg
fs
test
xchg
cli
cltd
cltd
jbe
fs
adc
inc
iret
add
dec
sub
sbb
imul
pop
leave
out
ret
lds
mov
cmpsb
push
fpatan
sbb
xorl
daa
mov
dec
or
sub
cmp
xchg
xor
mov
pushf
andl
int
je
mov
les
cmp
testl
cmp
push
fnsave
mov
jne
or
mull
imul
test
movsb
jb
cwtl
mov
loop
icebp
jle
cmp
mov
in
xor
jle
mov
clc
mov
mov
jmp
insl
sub
adcl
sub
cmp
pop
movsl
mov
jbe
xchg
insb
and
or
stos
daa
sti
sub
les
icebp
mov
sub
add
inc
je
shl
push
and
inc
test
cs
jo
cmp
mov
inc
and
mov
push
call
push
mov
lea
je
test
stc
pusha
cmp
push
lea
jne
push
jmp
lea
je
bt
call
lea
ja
call
movl
push
call
pop
imul
stc
cmp
call
xor
clc
sbb
add
mov
fsubs
pop
push
xor
cmpsl
test
cli
push
mov
xchg
lock
shr
ficomps
cs
xlat
es
decl
mov
dec
xchg
call
adc
int3
fidivl
testl
xor
mov
fcompl
mov
loopw
test
xchg
mov
dec
mov
stc
mov
fdiv
repz
inc
xchg
push
jl
sub
hlt
lea
enter
ror
xchg
shrl
imul
in
dec
jo
jb
dec
in
lods
rorl
aam
jns
in
fstpt
cli
dec
mov
mov
outsl
dec
cmp
adc
daa
cwtl
jae
rorl
pop
xchg
sbbl
fistl
add
aaa
cmpsb
ret
subl
int
pop
int
inc
cmp
int
mov
xchg
lret
sbb
xor
mov
imul
inc
lock
fsub
or
inc
test
inc
inc
subb
push
mov
aas
adc
adc
aam
shld
sub
jo
pop
imull
mov
cli
movsb
cltd
mov
lahf
jnp
test
gs
dec
sbb
or
pop
jno
cltd
pop
aaa
xor
hlt
ret
mov
pushf
pushf
lods
pusha
mov
pushl
inc
jmp
btc
mov
call
pop
int3
push
mov
mov
xor
pusha
pusha
movsb
and
out
test
jae
dec
push
out
dec
icebp
mov
pop
aas
adc
cmpb
icebp
scas
mov
sub
jb
jns
js
sbb
add
pusha
test
sub
stc
call
mov
mov
fwait
jae
pop
adc
pop
iretw
aad
sbb
pusha
sub
sub
pop
add
push
imul
sbb
jecxz
xchg
mov
vorps
rolb
sub
sti
call
inc
and
jmp
gs
pop
hlt
jmp
in
enter
dec
sub
jb
jbe
jge
mov
vpsubusw
pop
or
adc
ljmp
jge
add
sub
cmp
pop
dec
pop
cmpb
cs
cmpsb
dec
dec
adc
push
add
mov
ja
mov
mov
xchg
insb
add
into
fidivl
and
sub
bound
cmp
pop
lods
or
mov
jmp
test
add
cmc
jmp
sub
gs
mov
jge
ja
jnp
cld
pop
test
push
rol
jg
jae
inc
dec
xlat
ret
inc
pushf
adc
push
scas
cltd
inc
fsubrl
pop
mov
fimull
xchg
test
insb
push
mov
pop
cmp
push
push
std
testl
lahf
jge
in
arpl
enter
dec
jbe
fdivrl
sbb
sbb
mov
and
outsl
cmc
pop
bound
and
sub
xchg
inc
iret
sbb
jecxz
jle
mov
addl
movb
lea
je
bt
push
call
movb
jmp
imul
dec
mov
lods
sbb
mov
cltd
lods
mov
push
or
inc
jo
xor
xchg
jmp
sarl
in
in
inc
outsb
pusha
dec
insl
mov
jno
xchg
mov
and
and
jmp
movsb
xchg
pop
xchg
repz
jle
sbb
out
das
cmp
fcoml
lcall
insb
into
movsb
imul
shlb
aaa
je
aam
sub
nop
mov
xor
je
call
cmp
xchg
cmp
pop
push
xor
insb
mov
push
outsb
or
neg
push
cmp
mov
hlt
rcll
lds
aas
push
pop
pushl
jge
sahf
daa
and
mov
xchg
jnp
test
in
xchg
xchg
sti
fstl
ror
test
andb
mov
adc
aad
cmp
lret
jne
cwtl
incl
roll
fstl
adc
aam
repnz
xchg
fsts
push
pop
mov
and
cwtl
fwait
push
lds
in
in
pop
sahf
or
mov
loope
loope
and
jmp
fstpt
in
movsb
insb
xchg
jae
lods
cwtl
mov
cmp
mov
push
pop
pop
cmp
pop
lret
and
and
lret
mov
cmpsb
inc
sbb
in
xchg
inc
jg
icebp
mov
test
dec
cmp
push
cmp
adc
xor
shll
pop
hlt
and
paddusw
test
add
dec
mov
mov
push
pusha
jmp
mov
bound
lock
and
icebp
xchg
shlb
jle
sbb
dec
mov
adc
add
and
in
push
adc
push
in
mov
shll
pop
or
xor
sub
jnp
mov
loope
fs
adc
icebp
inc
shlb
ret
or
add
dec
lret
iret
sub
push
andb
and
dec
arpl
add
inc
sub
aas
xchg
fsubl
mov
xchg
mov
lods
sub
out
outsl
mov
int
and
and
rclb
shl
add
bswap
call
lea
mov
lea
pushf
lea
jns
pusha
mov
mov
push
lods
pusha
pushf
mov
inc
pushf
cmp
neg
clc
add
stc
movw
jmp
push
mov
imul
negb
sub
mov
fidivrs
mov
hlt
mov
lcall
orb
lahf
jge
cs
cmp
in
xor
and
insb
sbb
lds
add
into
stos
pop
stos
in
pop
adc
cwtl
pop
int3
dec
inc
push
fsubr
sbb
pop
out
arpl
jne
cmp
mov
outsl
icebp
inc
adc
and
out
xchg
daa
pop
mov
loope
mov
std
cmp
test
xor
push
in
ds
shll
xorb
and
cmc
mov
stos
dec
push
mov
in
fdivrs
roll
mov
adc
inc
movsb
sti
cs
imul
xor
aas
call
fdivp
mov
jg
sbb
test
shrb
inc
inc
je
xchg
ljmp
jbe
int3
pop
icebp
pop
inc
dec
js
sti
xor
sahf
jle
xchg
jae
inc
aaa
jae
movsl
cmp
push
repnz
flds
and
and
mov
xor
cs
pop
mov
fcoms
and
pop
ljmp
shrl
jnp
mov
out
mov
lea
jae
das
cmpsb
jno
shll
incb
std
push
lds
dec
add
fs
repz
push
fdivl
test
xorb
xor
xor
jbe
inc
push
lock
outsb
push
mov
dec
test
lock
test
fnstenv
mov
add
mov
xchg
leave
pop
imul
mov
dec
lea
clc
dec
and
inc
les
fmull
ja
or
aas
stos
jge
pop
mov
lcall
dec
aad
es
repz
hlt
cmpsl
jno
push
jnp
pop
jmp
and
popa
in
sub
cmp
fsubl
lods
sbb
adc
pop
pop
push
test
aad
out
dec
fstpl
lods
and
mov
cmpsb
repz
subl
addr16
incl
mov
xor
fsubrl
jns
push
gs
xor
aas
enter
shl
imul
push
cmc
mov
js
pop
mov
aas
add
push
adc
popa
int3
aad
insb
xor
and
fwait
jo
nop
cmp
cmp
andb
jmp
hlt
arpl
adc
leave
fidivrl
jne
fwait
jno
dec
pop
add
or
sbb
das
jns
loop
mov
jmp
int3
lds
pop
fidivs
adc
pop
pop
imul
mov
add
mov
inc
ss
cs
pusha
xchg
negl
test
mov
clc
push
in
mov
dec
data16
enter
adc
jae
mov
repz
mov
inc
add
addr16
jle
xchg
inc
daa
popl
push
mov
fmul
push
out
fisubs
xchg
js
add
out
imul
mov
test
insl
push
add
xor
daa
rorb
mov
push
je
adc
push
ja
dec
cld
leave
or
sub
shrb
lahf
mov
shl
fmuls
cmp
xchg
and
cmp
lahf
xorb
mov
add
mov
test
daa
mov
rorb
mov
pop
icebp
sbb
out
repz
mov
sub
jl
enter
repnz
ret
les
imul
push
in
js
lods
jmp
sahf
dec
or
movsl
dec
daa
xchg
inc
aas
daa
xchg
or
ds
pop
push
pop
mov
or
sbb
and
xchg
push
stos
xor
lret
push
andb
cmp
dec
hlt
dec
fistpll
mov
shlb
enter
sub
and
imul
push
add
and
loopne
stos
gs
push
pop
xlat
inc
mov
enter
andl
jmp
inc
scas
pushf
and
xchg
mov
rcrl
daa
out
adc
adc
inc
jecxz
lret
push
fwait
adc
add
sub
ret
lret
add
cmp
pushf
jno
add
enter
jge
cld
inc
les
sti
xchg
roll
adc
cli
loope
or
sub
in
add
fs
sarl
lret
xchg
daa
pop
loope
out
leave
xor
notl
movsb
inc
xchg
or
sub
jmp
ja
push
out
popa
dec
outsl
btl
call
sub
aas
fisubrl
and
xlat
sarb
shll
dec
fdivrl
push
cld
outsb
push
push
mov
test
jge
add
mov
cmp
jno
mov
push
cmp
mov
adc
ret
mov
adc
out
cltd
cmp
push
pop
int
jl
add
notb
mov
movsb
lock
cli
adc
lahf
cld
std
ss
jb
sbb
xchg
lcall
adc
mov
cmp
push
ljmp
sbb
or
fldt
sub
mov
xchg
daa
mov
xchg
pop
sti
push
jg
push
mov
push
js
inc
fsts
scas
and
jge
mov
cld
imul
xchg
dec
dec
lods
dec
clc
push
push
iret
jge
movsb
and
pop
add
mov
dec
iret
and
push
mov
leave
stos
cmp
call
test
push
and
inc
in
hlt
cmp
cltd
jnp
enter
in
sub
pop
jno
std
insb
and
mov
inc
out
divb
mov
sub
cmp
pop
pop
out
mov
cmp
int3
mulb
adc
xor
rclb
xchg
ljmp
fnstsw
clc
push
fsubr
ficompl
aaa
out
xor
pop
xor
push
and
xor
in
out
clc
sbb
pop
and
leave
cmp
fsubl
subl
lods
dec
aad
repz
xchg
data16
dec
xor
or
mov
scas
cwtl
jno
cmp
inc
ljmp
pop
leave
pop
jbe
dec
sbb
xchg
mov
sbb
push
loopne
jge
test
sbb
dec
mov
outsb
add
sti
and
repz
push
jp
xor
cmc
lret
popa
push
aad
scas
rcll
repnz
push
fwait
loopne
jmp
orl
mov
insl
xchg
fbld
xor
hlt
xchg
inc
pop
flds
dec
sahf
cs
jle
adc
ja
or
pop
imul
xchg
pop
test
int
addr16
or
push
xor
lods
xlat
xchg
jno
push
dec
sarl
pop
sarl
into
daa
pop
ret
jne
mov
and
jb
movb
out
jmp
jmp
shr
and
insl
push
hlt
and
pop
mov
fbstp
mov
pop
mov
aad
mov
lds
je
lcall
jnp
jl
jecxz
stc
loope
into
mov
lret
pop
mov
adc
lock
xlat
xor
sub
repnz
clc
dec
mov
mov
jp
ret
push
cmpsb
xchg
mov
inc
repnz
js
outsb
pop
ljmp
mov
test
dec
jo
insl
mov
ds
das
mov
cmpb
shll
add
mov
inc
xlat
into
dec
imul
les
jecxz
jae
leave
into
bound
ror
fldt
jne
and
shrb
mov
clc
pusha
icebp
rolb
ljmp
test
pop
ljmp
mov
lahf
loope
sti
jb
test
es
jmp
into
and
xchg
xor
movsl
arpl
ljmp
dec
and
lea
out
pop
int3
int
sbb
pop
mov
hlt
xchg
mov
mov
loope
xor
cltd
stos
ret
fwait
sub
sbb
add
pusha
rcl
fimull
loop
sub
in
add
vmread
sbb
outsl
fucomi
inc
nop
xor
mov
pop
icebp
in
clc
sbb
push
mov
xorl
sarb
fidivrs
popf
sbb
pop
inc
lret
pop
cwtl
jecxz
sub
cmpsb
pop
enter
adc
or
inc
lock
ljmp
lods
in
inc
movsb
movsl
adc
mov
pop
or
and
imul
dec
js
cltd
or
mov
in
pop
shlb
sub
leave
xor
clc
xchg
mov
call
mov
and
inc
mov
mov
leave
mov
shlb
into
subl
mov
or
jge
push
rorl
jg
mov
cli
sbb
cltd
jae
stos
mov
cld
and
sub
add
test
pusha
inc
mov
fucomip
inc
inc
mov
test
aam
into
shl
into
push
or
ret
and
or
fdivl
addr16
lcall
rorl
xchg
cmp
jbe
sarl
bound
xor
repnz
push
and
mov
and
adc
pop
imull
pop
cmp
scas
call
push
mov
mov
loope
gs
sbb
push
adc
or
and
inc
daa
xchg
es
or
pop
pop
icebp
mov
fldt
insl
dec
add
xchg
negl
pushf
subl
sahf
bnd
fwait
cmp
adc
mov
repnz
jne
cmc
pop
mov
add
xor
lret
daa
or
or
pop
leave
ret
inc
xchg
movsb
hlt
mov
cmpsb
adc
into
scas
sbb
or
mov
loope
mov
jb
and
pop
inc
mov
mov
movsl
rcl
arpl
or
aam
ret
inc
push
pusha
cmp
pop
out
fimull
fst
cli
addr16
jae
mov
cltd
adc
lods
sub
jbe
lods
or
inc
jmp
or
dec
jg
mov
xchg
inc
jbe
push
adc
push
sahf
sub
fidivrl
cltd
jl
pop
push
cmpsb
ljmp
mov
inc
call
mov
push
lahf
das
stos
cmp
test
fsts
ja
ja
ljmp
icebp
xchg
cmp
xchg
jmp
das
lds
daa
xchg
lcall
inc
inc
mov
xor
rcr
aaa
jns
xlat
test
out
pop
in
mov
xor
push
hlt
mov
movsb
aaa
jmp
pop
add
mov
push
imul
in
das
add
mov
push
shll
shll
dec
into
add
jmp
add
int
push
adc
mov
popf
cmp
or
ds
mov
data16
jne
hlt
lock
dec
test
adc
cmp
mov
push
stos
mov
jns
out
mov
popf
jae
ret
push
out
jno
pop
mov
xor
nop
cmp
inc
fs
or
cs
pop
jae
dec
fcmovu
sub
xchg
mov
mov
lods
jno
je
imul
or
push
clc
fs
lret
adc
inc
stos
xor
mov
fidivrl
jmp
bnd
jg
mov
stos
idivb
add
jae
loope
xor
inc
in
hlt
cmp
popf
jle
aam
jl
mov
test
cmp
or
mov
mov
rclb
jnp
stos
add
or
push
scas
lret
popl
addr16
sub
enter
push
or
add
mov
sub
jne
mov
jno
xchg
add
int
into
jbe
or
or
test
pusha
rsqrtps
inc
or
test
ds
fldcw
leave
inc
mov
mov
mov
stc
push
outsl
add
push
and
sbb
out
pop
insl
popa
xchg
addr16
aaa
loop
loopne
shll
movsb
mov
scas
js
es
jb
out
mov
mov
repz
and
movsb
loopne
fdivrp
popa
out
jmp
imul
sbb
test
cmp
outsb
mov
call
das
xchg
xchg
ss
dec
arpl
jge
cmpsb
imul
ficompl
sub
shl
jb
pusha
bt
add
sub
dec
mov
push
cmp
call
popf
jmp
mov
bound
into
push
push
movsb
shll
pop
int3
and
jb
in
mov
jne
int3
out
cmp
xchg
jge,pn
mov
sbb
gs
xlat
xchg
adcb
daa
xchg
cwtl
push
xchg
std
sbb
cwtl
jbe
pop
outsb
inc
pop
jge
sti
dec
pop
ss
or
mov
or
xor
leave
int3
push
jo
xchg
addr16
addr16
or
pop
or
push
cmpsl
cs
subb
dec
std
pop
lret
add
int
mov
pop
adcb
fcoms
roll
imul
subl
push
inc
mov
dec
mov
xchg
jecxz
stos
xor
dec
hlt
inc
shl
push
xchg
cmp
inc
or
push
movsl
js
mov
cs
fadds
pop
aaa
lahf
push
ret
mov
out
in
pop
add
test
arpl
pushf
data16
sbb
or
jo
sti
outsb
cmpsl
mov
jge
jns
pop
pop
std
push
je
jmp
movw
pushf
lea
je
setg
setno
setne
mov
jmp
bt
sub
lea
pusha
movb
setl
not
lods
clc
rcl
mov
rol
pushf
jmp
lea
je
push
pushf
movb
mov
lea
jmp
pusha
inc
lea
rcr
cmp
xchg
cmp
mov
setg
mov
pusha
pusha
clc
bt
xchg
rcr
rol
adc
movw
mov
bt
mov
sub
movb
pushf
pushf
movb
rep
movzbw
not
pushf
mov
push
lea
jmp
pushfw
popw
lea
jno
pushf
mov
pushf
clc
rol
jmp
lea
jb
pusha
cmpb
pushf
jmp
jmp
jmp
in
or
mov
bound
mov
or
mov
mov
push
andb
fldl
not
addl
in
jno
mov
movsb
call
push
sub
ret
sub
push
push
ret
and
popf
pushl
xchg
ja
push
icebp
fisubrl
adc
ret
les
fwait
push
pop
loope
pushf
cmp
neg
push
xchg
ss
xor
mov
xor
mov
das
pop
pop
xchg
add
push
mov
and
add
shll
shl
push
es
add
dec
cld
fisttps
testl
mov
pop
stos
repnz
test
dec
sub
pop
gs
in
and
mov
pop
pop
dec
add
lret
aaa
cs
or
xchg
mov
in
fidivrs
adc
jno
mov
push
mov
jne
outsl
into
mov
mov
repz
pop
in
mov
fwait
int
subl
mov
mov
icebp
and
or
add
inc
and
aaa
std
adc
iret
xchg
jmp
call
inc
inc
dec
xor
cs
insb
add
inc
and
sub
shr
std
jmp
bound
test
dec
loope
cld
cmpb
xchg
cli
xor
inc
mov
jbe
pop
adc
mov
fsubs
add
inc
and
jge
and
cltd
mov
xor
or
test
jae
decb
xlat
psubusw
mov
rcll
add
hlt
or
fistpll
jmp
icebp
pop
mov
adc
repnz
lock
sti
mov
sub
js
add
xchg
lcall
cmc
aas
lahf
lods
or
add
orl
push
add
test
sti
sahf
test
movsb
test
xchg
jbe
sti
push
movsb
xchg
out
loopne
daa
push
std
mov
dec
bound
jnp
add
push
mov
jbe
cwtl
xchg
xchg
mov
clc
or
adc
inc
test
cmp
movl
pushl
pushl
lea
jmp
pusha
lea
jp
pusha
mov
pushf
mov
lea
jmp
movl
pushf
call
pushf
push
lea
je
jmp
pushl
ja
imul
fsubs
jae
ljmp
inc
push
cmp
scas
xchg
lock
adc
cli
add
sbb
sbb
push
rorl
out
inc
stos
jns
sahf
cmp
mov
negl
mov
addr16
mov
xchg
push
xor
popf
xlat
sahf
mov
dec
ss
pcmpgtb
das
loope
mov
aaa
pop
jmp
iret
mov
pop
adc
out
fidivrs
rorl
jb
loop
jl
xlat
lahf
lret
xchg
filds
je
loope
dec
loopne
loopne
cmp
push
in
xchg
imul
and
push
icebp
insb
pop
test
popf
inc
xchg
adc
fidivs
inc
fildll
ja
iret
pusha
mov
aas
mov
xchg
push
mov
das
sti
setl
mov
pushf
push
jmp
adc
pushl
call
hlt
and
ss
ja
xor
and
sub
push
movsl
out
add
test
cmp
jl
sub
xchg
aaa
mov
popa
icebp
rol
sbb
and
inc
add
in
push
rclb
loope
aad
inc
stos
mov
sbb
in
fidivl
dec
pop
js
sbb
mov
mov
jns
mov
or
inc
fwait
xchg
shlb
xchg
ret
add
fs
bswap
call
push
pushf
push
movl
pushf
pushl
mov
movl
mov
push
lea
jmp
cmp
imul
fldt
in
mov
cmp
push
sub
dec
aas
iret
cli
adc
iret
dec
push
ljmp
fld
sub
lea
lods
inc
aaa
imul
cltd
dec
fists
xchg
and
push
cmpsb
out
sti
xchg
dec
repnz
mov
inc
outsl
xchg
mov
mov
std
inc
aaa
imul
dec
and
mov
mov
cli
dec
aas
xchg
ret
test
pop
jp
mov
in
mov
add
mov
cmp
dec
jno
insl
lret
mov
mov
jns
jbe
sti
add
addr16
call
adc
push
nop
loope
ljmp
in
or
sbbb
pushf
inc
cmp
sti
lahf
mov
popf
and
outsl
adcb
clc
and
cs
add
mov
sbb
cltd
inc
xlat
dec
jp
je
aaa
movzbw
call
pusha
pushf
xchg
jmp
pushf
mov
mov
pushl
ret
xchg
cs
mov
inc
mov
sub
push
outsb
sbb
in
jecxz
movsb
iret
out
enter
mov
jl
pop
push
out
daa
inc
mov
or
movsb
xchg
pop
clc
in
mov
pop
test
add
fcmovnbe
mov
xchg
jnp
cmpsb
jl
rcr
or
int
lods
inc
movsb
sbb
ds
mov
push
add
lret
mov
test
lret
sahf
jb
inc
inc
xor
sub
push
xchg
not
inc
aas
btc
mov
call
pushf
cmpb
lea
jns
jne
btc
aad
rcr
sub
das
mov
call
lea
ja
rcr
pushf
ror
add
sub
not
sete
add
add
test
and
call
jmp
sbb
xor
sub
xchg
lcall
sahf
pusha
in
in
add
mov
jmp
fmul
shr
dec
pop
cmp
in
loop
inc
ds
test
aad
mov
inc
pop
sti
lds
or
comiss
fsubrl
dec
push
rcl
popa
push
jl
movsl
push
les
add
ds
push
push
or
sub
push
pop
js
xchg
mov
xchg
add
int3
imul
sub
xor
lds
adc
or
jno
mov
pop
push
pop
mov
std
or
bound
jge
or
cmp
ds
pop
gs
or
daa
ss
dec
inc
cmp
xor
cmp
popa
jmp
push
fld
jnp
dec
dec
loop
sub
mov
sbb
in
subb
test
push
mov
mov
les
mov
ljmp
mov
jne
jmp
jb
in
xchg
and
daa
int
jno
gs
push
jb
pop
xchg
sti
mov
xchg
cli
pop
xchg
fistl
in
add
ficoml
ficoms
js
in
inc
xor
stos
lock
std
jmp
mov
lock
cmp
inc
and
mov
in
push
clc
mov
mov
pusha
pushl
ret
inc
call
lea
jne
push
pusha
jmp
int
inc
inc
add
fstl
xchg
mov
rorb
ret
cmpsb
pop
jmp
sub
push
sbb
nop
xor
mov
addb
sbb
in
push
into
xchg
lods
outsl
and
xorb
push
lcall
and
cmp
pop
or
mov
lea
fs
inc
lods
fldl
and
pop
inc
repnz
push
shlb
push
dec
xor
lahf
test
push
sub
pop
in
dec
fwait
inc
xor
lods
lea
push
add
mov
inc
add
cmpsb
and
mov
or
fistpll
outsl
add
push
inc
sbb
sbb
push
sub
mov
fdivl
add
rcll
inc
sbb
dec
in
mov
fsubrs
inc
aas
xor
loope
xchg
stos
add
or
and
test
adc
inc
sbb
xrelease
jno
pop
xchg
add
push
push
in
cs
add
add
stc
inc
sbb
inc
or
push
push
xlat
fdivl
pop
fs
adc
sub
and
sbb
jns
addr16
adc
mov
cmp
adc
mov
cs
addb
dec
lret
dec
push
aam
push
lds
mov
ret
in
xchg
mov
jecxz
in
jnp
cmc
rorb
xchg
mov
leave
pop
xchg
sbb
movsb
push
sbb
insb
dec
push
daa
sbb
dec
test
mov
shll
adc
pop
adc
xor
outsb
xlat
rorl
dec
cmpsl
xor
jo
sbb
popf
les
ret
ja
in
or
add
lds
cli
rorb
pop
pop
cmpsl
jbe
push
test
test
or
adc
frstor
ficoml
test
mov
add
sbbb
faddl
inc
mov
or
vmread
sbb
addr16
add
cmp
stos
add
or
inc
mov
mov
ret
lret
xor
add
lret
cld
es
in
mov
sar
push
inc
pop
ret
add
jnp
adc
jbe
pop
cmpsb
ss
xchg
in
cmpsl
aam
jnp
or
mov
testb
cld
inc
mov
and
add
inc
loopne
in
mov
add
inc
add
in
or
jnp
jg
cs
pop
or
lods
movsb
lcall
pop
popf
daa
adc
sbb
jl
push
addr16
pop
dec
addl
mov
sub
in
into
sti
or
push
jno
sbb
pop
jl
inc
mov
add
pushf
push
or
test
mov
les
loop
daa
mov
cli
cmp
and
gs
push
xchg
or
bound
lea
and
sbb
add
jle
xlat
adc
push
leave
mov
cltd
pop
loop
pop
sub
pop
jne
or
and
orl
mov
push
rorl
adc
pop
adcb
lods
out
xchg
xchg
mov
mov
jecxz
jecxz
pop
cmp
les
sbb
push
mov
cmc
adc
roll
lea
sbb
xchg
stos
mov
push
push
inc
or
xor
xchg
sbb
dec
jne
adc
xchg
call
bound
dec
and
mov
push
cwtl
pushf
xchg
xchg
adc
or
adc
jbe
fcomps
mov
nop
cltd
push
rol
popa
cld
pop
jl
out
clc
mov
xor
int3
jge
sbb
jbe
lahf
mov
mov
cltd
mov
xchg
push
push
inc
inc
sbb
sub
icebp
jmp
adc
xorl
or
jbe
sbb
shll
xchg
js
cwtl
popa
sub
orl
and
mov
and
lds
push
adc
pop
jge
add
mov
sub
mov
cmpsl
and
add
sbb
lods
cmp
or
adc
mov
inc
or
jp
mov
sbb
mov
movsb
add
stc
jae
adc
lahf
ja
xchg
out
les
pop
lret
faddl
in
addl
adc
movsl
imul
dec
inc
jb
daa
fadds
fwait
jnp,pn
lcall
mov
cmpsb
or
and
adc
mov
sub
mov
outsb
mov
test
out
push
mov
stos
push
sub
gs
je
inc
jp
in
mov
shlb
push
xchg
ljmp
cs
inc
aaa
dec
test
je
fiadds
aad
pop
bound
les
adc
clc
ret
fnstcw
mov
out
xor
mov
jnp
subl
add
setne
inc
push
adc
sbb
repz
mov
fcompl
or
sbb
mov
ljmp
pop
cwtl
ss
imul
and
icebp
ret
push
or
mov
cmp
lea
shlb
fs
inc
and
jecxz
das
fwait
mov
push
es
jle
rorb
es
popf
sub
shll
sbbl
subl
fsubl
xchg
or
sbb
pusha
ss
sub
mov
dec
jmp
mov
lcall
jnp
xchg
ret
in
adc
nop
fisttpl
sub
je
xchg
push
test
pop
xchg
add
stc
outsb
inc
mov
fcomps
and
hlt
lods
inc
lds
or
lret
and
jge
inc
stos
popf
fsubl
push
test
ret
push
aad
int3
ds
ret
pop
outsb
pop
xchg
xor
adc
or
enter
fsubp
test
jp
int
fs
out
inc
jo
imul
add
mov
xchg
cwtl
xchg
add
or
js
int
inc
test
xchg
add
out
cmc
outsb
mov
push
jne
or
out
fsubrl
mov
sub
aaa
sbb
inc
fcmovu
xchg
aaa
cmp
pop
int
or
cli
add
inc
shlb
pop
insb
or
jns
or
xor
repz
add
cmp
daa
call
jp
sbb
in
inc
outsb
pop
out
rcll
ja
push
add
gs
mov
sbb
fsub
xor
sti
or
int
lret
mov
fldcw
mov
fstpl
aam
push
inc
push
jle
push
cli
push
mov
sub
fadds
out
lods
daa
mov
mov
jns
or
scas
les
add
scas
shrl
sbb
push
lods
push
dec
cs
push
clc
jbe
mov
mov
loope
test
pop
ss
push
sbb
mov
fiaddl
lcall
sub
and
and
sbb
add
ret
aam
sub
ret
sbb
iret
adc
test
fcoml
inc
jecxz
cmpsl
mov
pop
xor
pop
in
inc
sub
push
mov
into
cmpsl
push
pop
jmp
outsl
mov
cmp
or
aad
fs
inc
pop
or
xchg
jns
fcompl
pop
faddl
aaa
cmpsb
rorl
push
sbb
popf
sti
js
xor
sub
repz
stos
in
mov
pop
add
mov
ret
les
push
dec
mov
pop
cltd
mov
popa
sbb
jmp
and
rcll
test
daa
sti
outsb
jle
and
add
dec
ljmp
cld
loope
aad
push
out
mov
add
test
int3
pop
rcl
mov
sub
lahf
aam
add
inc
cmc
mov
mov
nop
mov
jno
orb
fnstcw
cwtl
sbb
fs
jb
in
pushf
test
jp
inc
pop
sub
xor
dec
cmp
data16
or
data16
jp
mul
div
fwait
jmp
add
inc
jg
sub
dec
std
int3
outsl
add
pextrw
nop
movsl
je
scas
adc
in
lods
jo
int
popa
xor
and
mov
imul
add
cmpsl
andl
and
hlt
inc
sbb
lods
add
xchg
dec
dec
or
imul
cld
aas
in
movsl
mov
mov
shll
jae
dec
dec
jae
neg
pop
dec
movsl
adcl
orl
push
imull
adc
add
pop
idivb
rcrl
mov
rolb
ss
sub
ja
mov
sbb
pop
mov
in
int3
mov
cmp
aam
pushl
orl
mov
ret
and
adc
cmp
popf
pop
push
imul
pop
xchg
jecxz
xchg
std
add
scas
rcrl
out
ret
xchg
add
pusha
mov
or
cmpsl
shr
adc
shl
xchg
push
in
inc
add
sahf
ret
aad
xchg
mov
inc
mov
mov
sbb
xchg
aas
or
sbbb
loope
jmp
or
lahf
sbb
sbb
push
add
aaa
lods
push
mov
sbbl
mov
mov
icebp
push
or
mov
and
push
push
pusha
shll
fimull
xor
add
or
arpl
gs
xorb
xor
adcb
sbb
test
dec
pop
inc
imul
fcoml
add
mov
test
push
or
jns
xor
lret
mov
fwait
sub
insb
movsl
add
lds
out
mov
aaa
mov
jae
xchg
mov
call
cmp
push
cwtl
ds
insb
push
inc
push
test
cmpb
test
clc
jnp
dec
shrl
push
or
lcall
mov
push
test
jge
inc
push
pushf
in
mov
aam
or
mov
push
xor
movsl
xchg
iret
jns
or
cmp
inc
dec
pop
jl
mov
pop
mov
gs
fstpl
imul
gs
loop
push
cmp
xchg
pop
roll
inc
and
pop
test
and
lahf
push
orb
int
dec
imul
rcll
mov
jl
lods
push
inc
pop
sbbl
or
insb
jns
lret
mov
cmc
xor
arpl
sub
in
add
ja
sbb
ficoml
dec
addr16
les
push
inc
dec
xchg
inc
sbb
cli
insb
popf
pop
lahf
mov
push
push
lret
cmp
sub
jle
jns
pop
cmc
mov
dec
jle
out
das
loope
push
out
les
lds
add
cmp
cmp
add
adc
sahf
cmc
add
cltd
sbb
faddp
jo
aaa
nop
inc
push
testb
outsl
stos
jns
mov
adc
mov
test
jge
outsb
jp
sub
je
stc
jnp
lcall
or
fwait
sbb
es
inc
cltd
add
call
test
mov
daa
mov
sbb
imul
and
sub
dec
mov
pop
addr16
jmp
leave
mov
push
mov
fwait
in
xor
push
mov
fisubrs
mov
fisttpl
mov
sbb
sbb
icebp
outsb
lea
mov
jge
mov
test
mov
xchg
pop
xchg
test
xchg
aas
sub
pop
out
lea
adc
jmp
add
daa
mov
push
outsl
mov
in
sbb
add
pop
lahf
push
iret
out
pop
cmpsb
imull
push
fdivs
or
in
repnz
pop
mov
fiadds
mov
pop
je
pop
jmp
xor
loope
in
mov
or
push
lcall
loopne
addl
jno
cmp
mov
mov
fisttpll
fistps
aas
pop
rcrl
call
mov
pop
push
daa
adc
add
data16
pop
pushf
cld
inc
hlt
js
ret
and
dec
adc
fsubrl
add
cmpsb
xor
xor
mov
fwait
dec
and
popf
movl
xchg
andb
pop
dec
and
mov
jg
pushf
mov
ret
sub
pop
popf
lcall
test
inc
scas
dec
or
popf
mov
pop
pop
mov
xchg
imul
in
mov
inc
pushf
cltd
sbb
sarb
xor
and
jge
pop
in
push
mov
mov
add
jp
push
lock
fisttpll
xchg
test
mov
cwtl
pop
je
mov
xor
popf
jne
addb
add
jmp
inc
xor
add
xchg
jae
or
sbb
jbe
daa
dec
stos
jns
pop
add
ss
or
add
or
in
clc
dec
jg
xorl
sbb
mov
jne
or
sbb
sbb
xchg
xlat
add
call
or
dec
jns
mov
inc
inc
add
xchg
add
xlat
pop
xchg
xchg
hlt
add
xchg
push
aad
add
sbb
out
xlat
mov
cmp
mov
or
xchg
sub
dec
jmp
das
add
xchg
inc
xchg
shlb
out
jo
sbbl
lret
add
dec
jge
xchg
jbe
jp
add
adc
aad
ret
test
add
sbb
sbb
js
insb
leave
and
or
xchg
in
lds
xchg
push
test
xor
sbb
xchg
mov
movsl
fsubrl
adc
mov
mov
leave
jmp
mov
ja
push
xchg
pusha
sbb
ss
imul
jle
jp
jmp
fcomi
mov
and
icebp
aas
inc
in
enter
inc
sbb
dec
xchg
mov
int3
mov
inc
inc
inc
sarl
cltd
in
mov
sub
inc
sahf
and
lods
aaa
cmp
mov
ficoms
out
jle
loop
orl
outsb
xorb
mov
jecxz
push
cvttps2pi
jmp
dec
fs
lock
dec
dec
push
jge
push
add
sbb
pusha
sub
jo
movsb
push
pushf
or
rcll
jae
mov
lea
xchg
or
add
int3
in
push
jge
push
sbb
aaa
cmp
fcompl
test
inc
and
sahf
push
cmpsb
xor
lds
bound
popf
pushf
dec
scas
jle
aam
pop
test
hlt
fcoml
and
call
xchg
mov
aaa
xchg
addr16
fcomi
or
adcl
mov
cmp
test
xchg
xor
push
dec
cwtl
and
pop
or
test
in
mov
mov
dec
sbb
fnsave
data16
cmpsb
cltd
mov
stc
jnp
xchg
orb
jge
adc
outsl
ficomps
shrl
dec
adc
add
jns
ss
pop
inc
cmp
ret
xchg
lahf
and
jecxz
popl
sbb
jle
cld
outsb
mov
xchg
inc
jg
inc
cmp
push
mov
inc
insb
sub
sbb
xor
and
pop
push
pop
sbb
data16
cmp
roll
scas
jg
pop
mov
sub
stos
jecxz
call
mov
leave
test
pop
add
pop
mov
paddb
js
fdivs
mov
test
xor
jo
cmp
inc
outsl
dec
dec
xchg
xchg
add
jle
push
sbb
rcrb
in
shll
pop
pop
or
mov
add
or
and
sbb
mov
lds
push
mov
sbb
sbb
cmc
push
pop
and
addb
mov
andb
outsb
jns
divl
in
add
mov
xor
dec
ds
mov
push
lcall
xlat
push
and
in
imul
sbb
test
pushf
push
pop
jb
outsb
fcompp
push
popf
mov
adc
sarl
and
mov
decb
popa
sbb
int
out
mov
push
xchg
and
in
cmpsl
js
sar
icebp
and
rcll
jle
fmull
imul
test
pushf
pop
orb
xor
push
mov
fsubrs
mov
test
sub
sbb
mov
push
dec
push
pop
iret
dec
insl
push
pop
fdivrp
fstpl
xlat
jle
mov
inc
shr
outsl
addb
jle
sahf
outsb
dec
mov
mov
xor
lahf
cwtl
adc
jle
das
out
cmp
adc
push
movsb
inc
inc
xor
inc
or
lcall
cmp
cwtl
pop
mov
mov
pop
xchg
jg
jp
inc
out
mov
push
gs
mov
push
or
pop
pop
js
xchg
int3
andb
mov
repnz
sub
mov
sbb
xchg
icebp
sbb
or
test
cmpsl
mov
ret
aaa
push
cmp
fiaddl
xchg
ja
daa
test
sub
push
pop
faddl
pop
mov
push
movsl
jmp
loopne
getsec
push
add
xor
nop
sbb
xor
imul
adc
xchg
and
xchg
dec
mov
roll
movsl
xchg
cwtl
shrl
cmc
sbb
cmovs
shll
pop
push
popa
dec
mov
cmc
cld
fisttpll
xchg
add
add
out
add
pop
sbbb
fsubrl
mov
loopne
cmpsl
in
arpl
loope
scas
nop
sbb
and
xor
call
push
sub
inc
stc
scas
jae
mov
test
daa
jns
add
add
and
subl
rorl
cmp
dec
icebp
dec
mov
ja
pop
ret
int3
ret
add
test
cmp
push
lock
push
dec
add
popf
lcall
fsubl
stos
and
xor
outsl
mov
mov
into
aam
mov
lock
sbb
push
mov
in
aad
push
loopne
sub
add
lea
mov
adc
addb
adc
push
ficoml
or
jmp
cmpl
xchg
push
inc
mov
loopne
lcall
daa
jl
and
out
andb
mov
xor
fstpl
add
das
subl
pop
mov
cmpb
pop
loope
cmp
inc
xchg
out
pop
imul
shr
shll
jne
les
xchg
js
or
repz
or
sbb
test
cmp
int3
mov
xchg
jmp
bound
sysexit
and
ds
imul
or
out
mov
mov
xor
popa
movsl
stc
neg
sbb
jne,pn
xchg
cmp
test
daa
pop
xchg
push
and
lds
lret
add
dec
ret
and
sub
xor
jmp
mov
loopne
sub
nop
jnp
pop
mov
fisubl
icebp
fwait
jbe
leave
aam
mov
xor
hlt
or
sbb
push
mov
jns
lcall
jbe
push
or
mov
or
dec
xchg
adc
daa
fwait
mov
inc
push
and
enter
mov
mov
sahf
push
daa
test
les
fdivrl
sbb
nop
push
mov
jge
mov
bound
sub
rolb
inc
bound
mov
push
xor
dec
lcall
fcomps
sahf
addr16
push
imul
ss
fwait
jns
gs
hlt
jnp
or
push
test
jo
jmp
push
shrb
mov
out
add
push
in
pop
int3
push
insl
mov
dec
imul
lock
adc
lcall
andb
xor
imul
jg
jecxz
inc
popa
push
fcoml
shll
enter
pop
jecxz
loop
pop
cmp
or
or
sahf
out
sti
jbe
add
arpl
sbb
inc
adc
call
sub
out
and
pop
scas
imul
repnz
sbb
mov
xchg
stos
gs
jo
hlt
js
es
mov
int3
adc
outsb
mov
add
and
das
cmp
clc
fcmovu
mov
scas
popf
enter
out
xlat
pop
test
ret
mov
pusha
aas
or
mov
popf
push
push
mov
mov
jp
mov
add
mov
ss
push
in
push
cmp
jnp
inc
aaa
repnz
out
add
sahf
or
outsb
scas
cmc
fisubs
movsl
xor
xor
pop
cmp
jbe
jne
insb
pop
mov
push
cmp
cmp
pop
scas
and
mov
fcoml
push
mov
cmc
rcl
add
ret
adc
sbb
test
mov
inc
xor
stos
add
mov
dec
xchg
jge
push
or
jp
inc
scas
push
xchg
insb
test
inc
and
add
adc
mov
xor
jge
orb
gs
sahf
xchg
push
stc
cmpsl
lret
pop
xor
push
addb
inc
push
inc
lods
push
xchg
add
fistpl
mov
mov
pop
or
xchg
push
dec
bound
push
push
inc
mov
pop
test
xor
pop
adc
mov
or
in
lods
std
lcall
pop
jle
popf
add
sub
outsb
mov
xchg
out
xchg
mov
in
or
inc
inc
jne
push
inc
out
add
dec
pop
aaa
inc
push
pop
jnp
pop
roll
jne
leave
mov
in
inc
jle
pop
fstps
test
clc
jns
xchg
jae
cltd
bound
add
lods
and
vmovntps
xchg
jg
mov
mov
shll
add
aas
pop
icebp
cli
jge,pn
or
cmp
insl
dec
in
mov
je
mov
mov
push
shl
mov
add
les
cmp
dec
sar
add
cmp
cltd
fimull
cld
push
inc
or
jne
pop
aad
cmp
jbe
push
mov
or
xor
filds
add
sbb
xor
mov
lret
shrl
clc
popf
and
loopne
push
into
addr16
or
dec
test
add
popa
pop
icebp
pop
pop
imul
js
cmp
icebp
adc
les
or
nop
jnp
cmp
mov
int
nop
mov
jle
sub
lock
xor
or
mov
inc
lods
sub
pop
pop
or
or
inc
xchg
popf
and
jo
ficomps
add
and
push
js
std
push
cmp
sbb
daa
push
xor
add
or
lea
out
idivl
pop
fst
jnp
adc
std
insl
popa
lcall
push
or
mov
fisttpll
cmpsl
xor
dec
lahf
popf
out
data16
push
pop
push
jns
mov
mov
dec
mov
mov
ss
and
in
cmpsb
adc
mov
xor
pop
jno
lahf
dec
call
cmpsb
sbb
roll
scas
mov
sbb
inc
adc
in
inc
mov
js
cmc
mov
test
push
mov
cmpsb
xchg
test
jne
shll
testl
mov
mov
and
cmc
call
cmc
or
dec
jns
jns
mov
push
movsl
pop
mov
push
out
cmc
rcl
xchg
sbbl
mov
les
push
pop
mov
pop
inc
jns
add
adc
mov
lock
std
mov
or
sbb
jmp
jge
arpl
test
idiv
mov
int
cmp
and
test
inc
or
cli
mov
mov
adc
inc
jecxz
mov
pop
arpl
sbb
popf
dec
push
aaa
xchg
xor
loop
imul
insl
push
iret
sbb
sqrtps
popa
faddl
jmp
xlat
xor
push
into
adcb
mov
inc
jge
sbb
test
lods
cmp
stos
arpl
mov
mov
add
sbb
mov
adcb
jg
cmp
dec
sub
adc
add
shl
sbbl
xlat
mov
movsb
imul
in
aam
dec
in
fnstsw
push
rcl
mov
push
aam
cmp
insl
dec
push
sub
dec
outsb
mov
aad
pop
or
sbb
xchg
push
pushf
stc
mov
push
arpl
fbld
imul
adcb
and
ss
add
dec
sub
sahf
lea
push
dec
add
add
pop
mov
ret
fidivs
leave
dec
decb
loope
test
adcb
pop
iret
sbb
fistpl
add
pop
xor
jl
arpl
icebp
add
pop
in
xchg
add
pop
fdivr
ret
jae
or
lea
push
add
pop
cli
pop
mov
out
sbb
jno
adc
lea
movsb
push
and
push
adc
pop
mov
jbe
rcrl
js
loopne
shrl
nop
fucomip
mov
cmp
ret
cs
push
mov
rolb
xor
enter
jp
out
push
push
inc
jns
mov
inc
ret
push
stos
fisubrl
dec
push
and
adcb
sahf
jecxz
dec
std
mov
push
xlat
dec
adc
and
cltd
add
test
psubb
ljmp
bound
jl
inc
add
push
or
mov
cmc
pop
adc
imul
pop
xor
jge
add
popf
cmovp
pop
inc
testb
dec
inc
arpl
call
or
adc
lcall
push
xor
ret
mov
loopne
mov
push
pop
or
sub
loopne
pop
push
jb
lea
inc
pop
aad
mov
rclb
enter
pop
bound
push
xchg
and
test
add
testl
inc
pop
sbb
ret
mov
mov
or
cmp
test
inc
fmull
push
fwait
sbb
shr
pop
loopne
mov
lret
adc
xchg
jp
cmp
lea
or
lahf
cmc
pop
das
mov
testb
push
and
jmp
or
fidivrs
adc
dec
leave
pop
outsb
das
add
push
aad
xchg
xchg
pop
mov
sbb
xchg
call
insl
jmp
pop
jne
cmc
fildll
dec
sbb
imul
pop
movaps
push
scas
popa
pop
xchg
push
pop
imul
jl
leave
push
sbb
pop
jns
inc
mov
aas
push
nop
or
adc
jg
or
out
leave
cld
aas
inc
inc
push
aas
jno
ret
pop
add
repz
orb
jne
xor
lock
test
sbb
jo
cmp
inc
inc
mov
jp
sbbl
mov
jne
mov
lret
mov
mov
dec
adc
mov
jbe
imul
adcl
dec
mov
sbb
xchg
ja
int3
push
or
sub
jge
dec
sti
popf
add
xor
aaa
loopne
inc
pop
pop
pop
push
push
dec
pop
push
cmp
xchg
inc
test
inc
xchg
lcall
xchg
or
push
adc
ret
in
outsb
cmpsl
mov
rcl
add
add
pop
sbb
pop
in
fadd
sub
pop
test
out
jne
inc
test
fcomi
pop
xor
or
adc
inc
inc
inc
jmp
lods
or
loope
mov
lds
sbb
xchg
add
loope
pushf
sbb
push
sbb
push
imul
movsl
xchg
cwtl
mov
xchg
pop
mov
adc
leave
in
jne
imul
pop
jg
sarl
mov
addr16
jp
imul
mov
mov
mov
cmpsb
or
mov
adc
add
not
cli
push
mov
lock
adcb
jbe
sbb
inc
mov
dec
out
mov
lret
in
cmc
stc
inc
and
or
push
and
push
fcompl
lcall
adc
xchg
inc
or
jl
sub
adc
dec
scas
call
jp
lea
loope
idivb
dec
push
push
outsb
add
popf
cld
imul
xchg
lea
adc
push
out
jl
push
sar
es
sbb
or
push
into
push
xchg
jl
or
and
xlat
out
ret
sarl
pop
sbb
out
pop
out
sarl
gs
mov
notb
xchg
aam
fcmovnb
fsts
mov
int3
in
inc
cltd
cmp
gs
sbb
ja
or
loop
push
pop
push
dec
sbb
jno
cs
ljmp
ja
lods
mov
inc
aaa
mov
inc
push
push
push
mov
int3
pop
aaa
arpl
add
jbe
pop
push
dec
mov
loope
lea
test
data16
add
or
pop
inc
jnp
lcall
pusha
push
xchg
adc
cmpsb
sti
aas
or
jmp
mov
push
mov
lcall
mov
dec
or
or
addl
push
push
daa
dec
jp
lea
fisubs
aas
xor
add
mov
mov
sbb
xchg
pop
mov
imul
mov
xor
push
jns
jne
and
dec
lods
push
stos
dec
mov
into
negl
and
sbb
mov
lret
aam
aad
out
cmp
sbb
jge
lahf
icebp
xor
mov
fst
cmp
cld
gs
jmp
adc
pop
mov
pop
cld
jle
mov
sahf
out
movsl
xchg
aad
cli
enter
cmpsb
jne
mov
dec
push
std
leave
dec
lcall
mov
adc
cs
push
cmp
out
les
lcall
mov
add
shlb
and
add
adc
inc
sub
fs
in
push
mov
rorl
adc
fsubl
out
nop
in
es
out
jmp
dec
or
cmp
pop
cmc
pop
movl
and
repz
jne,pt
sub
cmp
sbb
insb
das
out
jle
cltd
or
sbb
scas
sub
sbb
push
push
xor
adc
aam
add
fdivrl
sbb
repz
inc
cmc
test
add
inc
cmp
loopne
lcall
jp
mov
add
mov
push
loop
in
mov
sbb
orb
or
xor
out
mov
pop
add
pop
fdivrl
ja
ret
shrb
add
add
test
push
mov
adc
fildll
cltd
fdivs
pop
add
jmp
aaa
test
xor
adc
xchg
lcall
lods
xor
fcoml
ja
cwtl
int3
and
push
and
cltd
mov
push
arpl
adc
aam
out
add
or
test
dec
jo
adc
imul
shl
je
xor
dec
dec
data16
push
pop
xor
pop
cmp
orl
addr16
cld
test
outsl
jno
push
pop
jnp
and
cli
mov
inc
ds
cwtl
cmp
scas
and
xchg
jecxz
daa
mov
push
dec
call
xorb
mov
or
xchg
pushf
lods
add
je
add
cmc
test
aas
mov
arpl
push
fwait
pop
imul
push
or
push
cmc
out
sahf
lret
jae
scas
shrl
sahf
repnz
ret
push
cwtl
pop
cmpsb
notl
cwtl
sub
lret
inc
mov
dec
or
testl
ficoml
mov
or
jo
movl
add
add
pop
cmpsl
aas
xlat
arpl
pop
push
popa
stos
andl
dec
push
push
mov
cmc
jno
dec
gs
pop
cmp
daa
xchg
insb
pop
insb
xorb
mov
sub
push
ret
inc
xchg
push
lahf
icebp
out
xor
mov
popf
lds
or
or
push
enter
push
jg
adc
mov
xor
cmp
jmp
mov
jle
imul
xchg
cli
roll
sti
scas
or
mov
lcall
or
adc
cmp
loopne
mov
in
test
dec
sbb
imul
lods
xchg
add
ficomps
inc
idivb
sbb
addb
lods
mov
sbb
pop
pop
dec
mov
dec
aaa
cmp
fcompl
ljmp
mov
in
adc
mov
add
pop
pushf
fiadds
lret
push
test
or
inc
loop
lahf
stc
cli
pop
inc
xor
out
xchg
popf
or
pop
xchg
adcl
hlt
bound
repnz
pop
loopne
cltd
xchg
imul
adc
int
aas
jle
ret
shll
imul
js
addr16
pop
push
les
add
popf
and
push
inc
out
fdivrl
adc
mov
adc
lret
inc
push
es
pop
inc
cmc
push
mov
cltd
mov
subb
or
push
sahf
cmpsb
mov
mov
out
sbb
stc
or
cmpsb
orl
int
cmp
mov
lods
pop
xor
test
outsb
sti
mov
jb
or
int
mov
jle
adc
inc
sbb
out
xlat
add
or
sub
push
or
mov
push
push
or
inc
andl
out
sahf
sbb
jns
loopne
lcall
dec
lret
stc
subb
test
sbb
add
push
mov
mov
xchg
gs
int
pop
cmp
push
pop
test
mov
in
lods
xor
in
stos
cwtl
pop
xchg
fiadds
ret
adc
dec
fmull
cmp
mov
jle
dec
movb
pop
push
fmuls
xor
add
dec
fstl
mov
pop
bound
icebp
push
aaa
push
cmc
jge
add
adcl
mov
into
xchg
subb
xchg
out
mov
adc
cmp
push
mov
outsb
pop
fistpll
ljmp
jg
test
icebp
jnp
sbb
inc
pop
sub
mov
jb
or
pop
xchg
inc
add
pop
cwtl
insb
leave
add
test
test
jecxz
cs
cld
nop
imul
addr16
sbb
mov
mov
pop
sub
or
orb
imul
mov
cmp
add
fmull
sbb
inc
inc
cmp
push
flds
out
bound
or
pop
repz
inc
das
scas
xor
mov
loop
mov
mov
jp
ret
xlat
xor
pop
lcall
lea
orl
xchg
cmc
mov
cmpsl
xchg
push
xchg
fwait
mov
xor
lret
push
add
inc
std
push
jle
stos
sub
adc
dec
sub
sbb
filds
add
or
adc
sub
hlt
mov
scas
xchg
jnp
popa
fidivrs
imul
cmpsl
rcrl
and
pop
inc
mov
sbb
daa
xor
fsubl
sbb
lahf
jp
mov
cwtl
xor
pop
jbe
shrb
cmp
cmp
adc
mov
sub
ss
mov
add
push
rorl
imul
jno
pop
aaa
es
ds
push
mov
add
addb
cmpb
inc
xchg
cwtl
ret
in
jnp
mov
sub
adc
jl
incl
mov
add
in
add
sbb
bound
sub
xor
pop
jg
es
add
sbb
mov
and
jp
fs
mov
xchg
lahf
repnz
or
cli
cmp
add
nop
mov
sbb
sahf
mov
xchg
or
and
sub
xor
and
adc
or
add
mov
mov
jns
adc
pop
out
sbb
push
add
mov
imul
inc
inc
cli
out
fcompl
sbb
loope
popa
mov
cmp
mov
mov
cmp
push
enter
sbb
lahf
jbe
mov
les
push
imul
hlt
aas
fistpll
imul
mov
sub
loopne
jo
sar
movsb
bswap
outsb
pop
xchg
and
jle
clc
mov
cli
mov
stc
movsb
and
int
pop
and
aaa
lahf
in
loope
inc
jae
xchg
rol
rorb
call
cs
nop
or
jmp
and
push
neg
je
inc
add
mov
adc
sub
in
subl
pusha
maxps
sub
inc
pop
add
fidivrl
popa
ja
lock
push
scas
aam
nop
mov
sahf
xchg
outsl
and
test
xor
mov
out
sbb
test
shrl
lea
daa
repnz
xchg
dec
xchg
sbb
jge
outsb
xor
xchg
sbbb
jno
cmpsl
sbb
push
dec
out
mov
nop
and
mov
cs
lea
ret
inc
push
sbb
xchg
stos
mov
or
rcl
popa
int
mov
sbbb
lods
popf
cmpsl
mov
lds
sub
inc
mov
cmc
addr16
cmpsb
test
dec
push
cmp
lds
fwait
out
insb
cltd
sbb
aaa
pushf
testl
inc
push
hlt
pop
pop
bnd
sbb
mov
mov
jp
mov
insl
pop
add
test
pushf
call
lahf
adc
sbb
mov
bnd
les
cmp
in
mov
stc
lahf
adc
sahf
test
out
faddl
dec
and
pop
imul
lods
xchg
loope
movsl
pop
add
pop
sbb
popa
sahf
mov
pop
pop
dec
in
mov
sahf
sbb
dec
sub
movb
ljmp
mov
repz
xor
movsb
or
in
mov
xchg
inc
add
testl
sbb
cmpsl
jns
add
lcall
push
daa
pop
int
addb
inc
lcall
cmp
pop
jp
jbe
inc
xchg
and
aaa
ficoml
adc
xor
bound
adc
ret
jle
stos
mov
mov
out
jg
push
fdivr
pop
adc
and
xchg
xchg
repz
insl
les
add
data16
scas
inc
fstpl
je
jae
jne
fwait
test
adc
rorl
cmp
cld
xor
mov
pushf
push
dec
sub
movsl
sub
and
mov
lods
or
addb
xchg
imul
test
cli
testb
daa
jno
xor
xchg
sub
mov
jecxz
pop
sahf
dec
jl
push
sbb
mov
inc
cmp
pop
xchg
cmp
or
inc
sub
test
andb
mov
jg
repnz
mov
rcll
faddl
mov
cwtl
push
push
xchg
xchg
inc
pop
dec
jle
stc
dec
addr16
mov
add
lds
adc
pop
shrb
mov
jl
loope
dec
xchg
jge
sti
push
or
sub
push
mov
mov
jno
sub
in
jge
and
jns
mov
sbb
jecxz
or
ret
mov
fistpl
pop
loopne
mov
add
jp
jno
push
aas
cmpsb
bound
fcomps
fimull
jg
inc
or
cs
mov
imul
fmull
push
inc
jp
and
test
test
or
jbe
addr16
adc
shrl
xchg
gs
test
mov
inc
inc
aaa
mov
push
cmp
push
jns
pop
icebp
cmp
or
or
push
cmpsl
mov
gs
sbbl
cmp
xchg
lcall
xchg
mov
in
dec
imul
bound
add
or
rcrb
push
rcr
xor
add
pop
cwtl
dec
fnsave
pusha
addr16
mov
sub
push
push
push
sub
xchg
stc
add
push
test
mov
inc
ficomps
add
sti
in
xchg
leave
lods
shll
or
jns
pop
mov
stc
adc
les
sbbb
adc
scas
sbb
and
jmp
cmpsb
leave
jecxz
pop
sbb
adc
in
and
push
xchg
xchg
or
push
push
and
push
andb
test
sub
mov
sbb
lahf
push
jb
mov
mov
jle
add
jge
sbb
outsw
mov
shrb
inc
xor
mov
cmp
sbb
call
in
xchg
int
imul
shll
pop
clc
jmp
or
mov
daa
sub
fwait
into
mov
or
dec
rorb
dec
fisubrl
push
daa
mov
xchg
hlt
inc
jae
push
cld
inc
std
dec
jmp
dec
mov
in
and
ljmp
sub
jne
ret
or
jns
sbb
jns
and
lods
xchg
sub
test
lcall
pop
cwtl
bnd
add
adc
cmpsb
adc
mov
push
mov
subb
pop
mov
jge
stos
imul
sub
push
push
xchg
sub
jno
push
rcll
xchg
xchg
add
fldcw
pop
subl
repz
pop
adc
dec
movsb
xor
sub
adcl
rolb
xchg
jp
xchg
out
mov
sub
es
pop
pop
add
cltd
in
aaa
or
loope
xchg
imul
cmpb
push
sbb
aas
sahf
inc
add
jl
insl
jp
add
mov
mov
pop
xchg
xchg
in
insb
enter
test
subb
xchg
out
sub
in
sbb
push
jl
mov
clc
xor
cmp
adc
out
cmp
push
sbbl
add
in
sub
adc
test
sbb
loopne
loop
lds
dec
xchg
shlb
sbb
gs
aam
cld
cmpsb
ficoml
gs
add
jmp
or
iret
xor
neg
and
cmpsl
imul
dec
ja
imul
icebp
ficompl
pop
es
mov
add
rcll
sbb
xor
ja
add
aaa
and
pop
inc
in
cmc
lods
mov
cs
es
push
jns
adc
dec
push
lret
ret
test
sub
lcall
jmp
pop
nop
cmp
mov
test
xor
insl
dec
push
fildl
push
or
std
in
icebp
out
call
popl
addb
pusha
dec
shr
aas
test
and
add
bnd
adc
dec
push
fnstsw
sti
xor
imul
cmp
arpl
es
sbb
xor
movsl
fisubs
push
adc
add
mov
int
add
jae
and
cmp
mov
inc
mov
jb
scas
push
mov
push
dec
sahf
cmp
push
out
add
cwtl
lds
xchg
ret
cmp
insb
mov
add
mov
std
cmpsl
aam
or
push
shlb
fwait
cmp
adc
inc
lods
pop
ficomps
mov
dec
mov
andb
loop
and
pusha
xor
imul
push
cltd
subl
imul
cwtl
or
popa
out
pop
and
jle
pop
ss
dec
push
cwtl
cwtl
inc
mov
pop
push
popf
insl
mov
jo
xchg
cmpsl
mov
adc
insb
fsubl
rcrl
loope
cmpsb
aam
in
sub
rolb
xor
call
sarl
in
add
shlb
pop
mov
xor
sahf
add
sbb
dec
nop
rorb
push
insb
pop
out
jp
or
mov
mov
lcall
mov
das
pop
mov
jo
outsb
or
push
fstpt
test
cmc
aaa
cmp
hlt
mov
mov
push
add
int3
call
push
ljmp
push
pop
mov
loopne
ror
add
mov
into
sub
inc
cmc
push
and
xchg
cmp
leave
fdivrl
xor
scas
or
daa
pop
push
push
dec
enter
je
xchg
aas
cli
pop
mov
push
test
subl
jp
cli
xchg
daa
lods
popf
cmc
ret
fwait
pop
fdiv
cli
das
mov
ss
add
jne
movsl
or
pop
pop
mov
mov
mov
shrb
cli
div
or
or
lret
shll
lret
add
ds
jne
loope
or
repz
scas
incb
repz
cmp
push
xchg
mov
add
or
jbe
decb
push
addr16
push
scas
and
mov
insb
fs
sbb
add
test
dec
jle
fs
aad
sbbb
mov
notl
jns
cmc
daa
xchg
sub
sub
lods
pop
daa
dec
aad
sub
sar
push
test
hlt
mov
sahf
mov
dec
push
data16
ja
sub
sbb
lods
icebp
inc
xchg
add
jae
dec
out
xor
pop
or
pop
lret
mov
pop
icebp
mov
in
test
in
add
out
mov
popa
push
inc
xor
jle
test
div
push
movsl
xchg
jnp
add
cmpsb
fnstenv
outsb
lea
adcl
sbb
jge
push
scas
or
push
cmp
push
mov
cmpsb
test
xchg
loope
pop
inc
aaa
nop
loopne
mov
mov
push
stos
shrl
dec
and
lods
inc
xor
push
ja
mulb
inc
jp
pop
xchg
loopne
dec
in
dec
call
arpl
adc
lds
mov
aaa
mov
adc
or
xorb
push
pop
or
icebp
dec
pop
mov
jns
cmpsl
push
sbb
mov
add
xchg
cmpsl
fisttps
xchg
sub
fnstsw
add
stc
popf
sub
lea
add
sbb
test
inc
es
xchg
jp
sahf
call
jne
inc
push
dec
add
loopne
int
insl
jp
test
cmc
andb
movb
data16
add
sub
mov
push
jo
stos
jp
shrl
imul
repnz
les
in
pop
jno
aam
xor
shl
mov
ret
jmp
lods
mov
faddl
adc
lcall
call
xchg
sub
sti
adc
or
mov
ljmp
cltd
pop
dec
add
add
jp
flds
push
or
mov
mov
pop
mov
inc
adc
inc
cmpb
or
sub
fcom
outsb
mov
dec
or
sbbl
jae
out
aas
lods
inc
test
fldt
outsl
mov
popf
and
sbb
leave
stc
add
rorl
aas
xor
jge
pop
aas
push
jns
jge
movb
mov
ss
push
repz
xchg
int
cmp
rcrb
cltd
outsb
ret
inc
imul
xchg
adc
icebp
xlat
and
loopne
dec
xchg
test
jle
mov
shlb
cli
xchg
and
inc
scas
dec
neg
popl
xchg
movsl
adc
adc
mov
test
xchg
sahf
jge
push
shlb
imul
jecxz
sbb
enter
das
push
pop
fcoml
sbb
push
insl
add
xor
popa
xchg
or
fidivl
cmp
jae
jo
rolb
xchg
push
inc
mov
mov
add
or
inc
xor
mov
jbe
imul
or
mov
dec
int
aam
sbb
inc
aaa
scas
jns
dec
fwait
and
adc
push
inc
push
pushf
sub
lea
mov
mov
sub
mov
cmpsl
repnz
push
sub
lds
idiv
adc
dec
test
aaa
repnz
fwait
adc
mov
rolb
adc
sbb
sahf
movsb
sbb
cmp
repnz
xorb
inc
loopne
lods
test
test
cmc
pop
or
inc
cmp
dec
and
xor
nop
arpl
ljmp
subb
popf
int
out
data16
sbb
or
sahf
add
xchg
xchg
ret
test
jecxz
ret
push
stos
in
push
sub
insl
dec
lock
sbb
popf
movsl
cmpsb
stc
lcall
push
xchg
jns
dec
dec
idiv
inc
movsl
mov
or
lds
mov
pop
lret
push
mov
jbe
out
lahf
add
lcall
pop
mov
dec
mov
test
xlat
push
sub
rorb
leave
cwtl
cmp
mov
nop
stc
dec
icebp
scas
flds
gs
or
mov
adcb
rcrb
dec
cmpsl
push
dec
sahf
cmpb
xor
pushf
in
mov
mov
mov
js
inc
sbb
jge
imul
stos
roll
xor
mov
mov
mov
mov
push
sbb
sub
or
add
movsb
jo
push
loope
fwait
ss
fwait
push
push
push
aaa
cmp
or
rorl
mov
mov
add
cld
jns
test
add
gs
and
or
ret
or
ljmp
fcoml
add
daa
or
pop
adc
pop
push
mov
fisttpl
lcall
or
sbb
movsl
ffree
pop
cmp
sahf
jb
imul
int
jbe
arpl
add
mov
scas
xor
fldcw
stc
mov
test
mov
dec
inc
enter
or
aas
loop
push
push
test
ja
pop
test
mov
xchg
mov
je
in
sbb
adc
add
push
imul
push
add
push
fwait
leave
push
xorb
dec
fwait
and
pop
bnd
push
in
adcl
xchg
fwait
jne
not
pusha
test
dec
addb
push
icebp
adc
loopne
loop
mov
dec
notl
fsts
in
movsb
jmp
roll
scas
push
inc
xchg
int3
inc
test
popf
pop
stos
lods
jno
dec
icebp
push
aas
or
je
pop
mov
xchg
mov
daa
dec
fildl
std
test
jl
xchg
dec
mov
inc
jo
mov
lds
mov
adc
adc
or
aas
andl
jmp
sbb
test
lret
js
add
in
cmp
sub
sub
movsb
inc
jno
adc
mov
push
push
adc
pop
xlat
xchg
adcb
cwtl
jge
push
push
xchg
dec
roll
repnz
cltd
xor
stos
bound
adc
sub
mov
cmc
in
adc
push
sub
xor
popa
lret
pop
and
inc
inc
xchg
cmp
int
sahf
or
xorb
inc
fsubs
jge
mov
popa
mov
mov
dec
pop
bound
loop
ja
push
bound
orb
jns
sub
push
cmp
pop
mov
xor
cmp
popf
cmpsb
fstl
out
lea
mov
mov
mov
jge
add
data16
sahf
ret
sub
inc
inc
popa
rol
xor
out
adc
push
arpl
mov
jl
xchg
out
and
mov
cs
sbb
jne
cmp
mov
out
adc
lahf
popf
movb
sub
into
pop
add
out
mov
pop
ja
push
ss
jmp
daa
mov
je
rcrb
cs
ficompl
xlat
inc
mov
dec
xlat
out
add
rcrl
aam
sbbb
mov
push
aaa
inc
mov
popf
cmp
inc
push
pusha
in
xorb
xchg
adc
xchg
mov
mov
gs
stos
add
mov
and
stc
inc
inc
push
add
dec
or
cwtl
push
inc
lock
lret
subl
adc
and
inc
push
pushf
insb
aaa
cltd
jne
mov
fildl
pop
aad
ss
add
sbb
or
xchg
cmc
aam
icebp
jmp
xchg
sub
outsl
sbbl
aas
mov
stos
and
inc
lock
cwtl
mov
xlat
and
cli
pop
popa
or
cld
cltd
fdivr
xchg
rcll
out
sub
xchg
out
fsubp
xchg
cmpsl
or
decl
add
aas
mov
push
jbe
fcompl
fsubrl
fsub
adc
mov
ret
jp
lcall
dec
xlat
adc
adc
push
xchg
inc
sub
stos
xchg
push
add
cltd
or
mov
adc
push
mov
sahf
inc
sbb
popw
inc
negl
sbb
and
pushw
jg
stos
popa
jge
jle
mov
test
imul
pop
rorl
insb
leave
mov
fiaddl
push
jnp
push
push
div
data16
xor
lods
arpl
xlat
xchg
jb
decb
test
imul
imul
adc
jne
ljmp
push
push
mov
gs
out
dec
fcmovnu
loope
test
and
loopne
push
shr
movsb
lds
icebp
pusha
rolb
xor
cmpsl
jo
gs
mov
cmpsl
add
dec
adc
orl
outsl
dec
sbb
fsubl
push
push
aaa
daa
lock
loope
push
test
call
popf
or
lcall
mov
jg
roll
push
inc
mov
mov
subl
out
pop
jns
jmp
mov
jne
test
es
xchg
aaa
imul
das
into
add
std
jns
and
jbe
sbb
xchg
shrl
add
xchg
xor
push
cmpsb
leave
ret
pop
push
push
loop
xchg
js
inc
push
mov
mov
dec
dec
cmc
outsl
and
or
pop
sbb
mov
push
inc
icebp
add
in
inc
sub
sbbl
or
jnp
lret
in
mov
jg
fst
stc
jg
inc
add
int
fists
rcrl
icebp
adc
aas
cmpb
pop
dec
add
jp
pop
aaa
pop
sbb
mov
sbb
shl
leave
lahf
sarb
xchg
shl
push
inc
mov
jne
lret
fisubs
enter
cli
pop
xor
push
cmp
dec
cmpsl
pop
sub
mov
int
push
test
loopne
dec
push
rorl
sub
push
test
rorb
sub
mov
cs
add
mov
rol
jne
xchg
pop
dec
xchg
daa
lds
sbb
adc
mov
dec
addl
and
gs
cmp
ss
mov
repz
ret
jb
lods
dec
cmp
mov
sbbb
std
es
cli
addr16
sahf
sub
test
ljmp
pop
faddl
popf
and
or
pop
dec
add
mov
sbb
cmp
xor
jge
stos
stos
jle
mov
jbe
inc
shr
push
adc
fimull
mov
push
je
test
mov
pop
jge
and
pop
inc
aam
mov
push
or
and
xchg
pop
push
js
and
and
pop
or
pop
jge
lods
imul
testb
lret
outsb
adc
gs
jl
out
lret
mul
cwtl
xchg
jecxz
push
out
dec
xor
inc
xor
adc
or
insl
xchg
sbb
xorl
pop
mov
test
sub
push
push
imul
arpl
gs
push
es
stos
fidivrs
sahf
jmp
add
xchg
lret
xor
mov
daa
in
shrl
push
sub
lahf
and
dec
jp
lods
cltd
test
test
and
add
or
lret
mov
inc
cltd
sub
rcrb
test
add
and
stc
dec
outsl
or
adc
jne
fnstsw
imul
repnz
sub
scas
adc
jns
jecxz
and
daa
cmp
pop
push
jle
mov
cli
cmp
loop
jno
cmp
daa
sbb
xchg
loop
inc
cltd
mov
push
aad
icebp
fwait
xor
movsl
loope
into
repz
xchg
clc
add
pop
lods
add
test
inc
mov
push
and
inc
pop
sbb
lret
pop
xchg
inc
mov
xchg
sbb
fbstp
jns
adc
ljmp
jp
dec
leave
addr16
lds
pushf
push
les
es
sbbb
mov
mov
test
jne
pop
stos
mov
adc
cmc
leave
adc
cltd
in
mov
inc
dec
shrl
pop
out
cmp
push
add
sub
mov
idivb
xchg
dec
imul
nop
lock
fcoml
loopne
mov
inc
adc
sub
sub
mov
xchg
dec
jno
mov
sbb
dec
cli
addb
pop
push
shll
stos
sbb
jo
xchg
pop
roll
push
mov
stc
vandps
push
stos
fucomp
pop
dec
gs
push
ja
subb
dec
xchg
vmwrite
push
sub
inc
call
jp
mov
hlt
inc
or
aam
das
daa
cmc
dec
xchg
xchg
ret
or
andl
cmpb
std
mov
int
sti
in
sbbb
cld
xchg
and
push
xor
xchg
mov
xchg
in
cs
jmp
pop
sbb
xchg
or
push
add
add
jp
mov
test
sbb
testb
sti
and
jecxz
adc
mov
cmp
mov
daa
adc
pop
add
imul
xor
dec
push
and
sahf
lcall
mov
mov
sahf
push
sbb
ret
int3
lcall
imul
fcomps
jmp
imul
push
push
push
or
cmp
or
dec
in
data16
shlb
jne
aaa
jge
fistl
test
test
xchg
mov
lea
fsts
add
sbb
loope
inc
roll
sbb
test
loopne
sbbl
xor
repz
pusha
repnz
xor
scas
or
xchg
push
pop
push
aam
sub
imul
jecxz
in
push
pop
fdivp
leave
outsb
test
icebp
jno
sub
rcr
test
cld
push
mov
push
pop
rol
add
aaa
jns
push
loopne
xchg
cmpsb
fwait
int3
icebp
jbe
push
pusha
in
inc
ljmp
pop
ret
and
popf
dec
pop
out
xchg
mov
jbe
add
popf
stos
int3
fnstsw
shrl
sbbb
icebp
mov
xchg
movsl
ljmp
adc
pop
jns
pop
out
cmp
adc
cmp
lahf
add
add
inc
mov
or
ret
pop
lcall
push
fiaddl
mov
pop
lock
add
out
cmp
pop
xchg
insb
add
incl
shll
ja
int3
out
cwtl
mov
jge
enter
dec
mov
fisubl
lea
mov
push
cmp
mov
push
xor
xorl
jne
iret
push
or
push
xchg
mov
pop
jecxz
andps
mov
sbb
or
sbb
push
mov
pop
mov
aas
pop
push
xchg
push
xchg
jno
inc
in
xor
mov
and
or
sub
mov
leave
or
push
xchg
jb
lds
jge
inc
addr16
shlb
sbb
jns
popa
pop
push
push
and
mov
rcr
lea
nop
cmpsb
dec
add
adc
mov
ret
ficomps
and
fldt
mov
cmpsb
lcall
sub
cmp
and
lret
xor
or
int3
and
lock
add
jo
push
or
in
pop
scas
push
jbe
add
add
dec
xchg
inc
std
inc
jne
pop
sbb
cmpsb
jmp
je
out
outsl
inc
sbb
loopne
mov
cmpl
daa
sub
nop
insb
pop
and
out
fsubr
xchg
jne
repz
sub
pusha
shll
dec
pop
xchg
std
inc
orb
out
nop
ja
or
mov
add
sbb
inc
lcall
xor
mov
loop
sar
inc
daa
stos
push
adc
addr16
sbb
mov
add
inc
iret
fldl
mov
mov
scas
sub
sub
xor
xor
ja
dec
push
fwait
lods
sub
add
leave
xchg
mov
mov
sbb
loope
and
or
jns
add
mov
or
lahf
push
mov
dec
ds
add
cmp
push
dec
popf
jp
xor
sub
inc
add
sbb
dec
add
ja
cmp
rclb
lods
sbb
out
adc
stos
add
add
jle
adc
xchg
mov
sbb
imul
jb
jo
mov
push
fidivs
add
dec
sbb
pop
cwtl
out
mov
push
mov
fwait
enter
and
xorb
lret
add
subl
mov
int
jecxz
add
xchg
or
inc
lock
cli
sbb
or
popf
mov
or
clc
addb
out
icebp
jae
push
into
out
or
loop
les
push
xchg
sbb
mov
mov
xchg
jp
cli
roll
jne
lds
push
addr16
xchg
add
pop
mov
xchg
out
mov
mov
sub
jae
xchg
mov
or
stc
testb
jo
pop
sub
gs
mov
ss
popf
pushaw
sbb
pop
pop
xor
adc
mov
test
inc
xor
xchg
and
test
idivb
jno
jle,pn
sub
sub
or
sahf
inc
rorb
xchg
pop
adc
repnz
pop
sahf
cmpsb
mov
or
repz
sbb
xchg
pop
xchg
pusha
mov
imul
push
add
sahf
jb
sub
aad
xchg
popa
push
pop
fninit
dec
and
inc
jecxz
xorb
xor
popf
inc
push
lret
cld
filds
lcall
iret
mov
inc
push
jnp
pop
or
cltd
or
mov
cmp
inc
add
enter
cwtl
mov
cmp
stos
scas
mov
mov
push
fcoml
fdivrs
jne
sbb
cmpsb
sbb
ljmp
dec
orl
xchg
push
or
test
pop
pusha
addl
push
push
subb
add
push
push
lcall
enter
pop
ret
jg
jle
test
fidivrl
or
stc
xorb
imul
jle
lea
mov
sarl
pop
inc
mov
dec
cmp
lock
dec
movsb
ja
ds
lret
pushf
sub
xchg
push
call
addl
insb
mov
popa
dec
inc
pusha
add
pop
test
test
sub
popf
mov
xor
js
adc
sahf
icebp
mov
lcall
mov
sbb
jl
xor
xchg
inc
inc
mov
int3
pushl
fs
push
rclb
xchg
add
cld
lahf
xor
or
test
xor
mov
test
xor
add
add
mov
les
lods
push
inc
xchg
test
hlt
sbb
cwtl
cmp
jae
gs
xor
pop
adc
daa
gs
pushf
out
lcall
pop
js
sub
sbb
cmc
dec
jne
inc
test
call
addr16
test
dec
dec
fisttps
rcrl
lcall
dec
push
xlat
scas
in
aaa
das
int3
xchg
in
mov
dec
mov
enter
sub
cld
les
orl
int
push
mov
adc
dec
sbb
test
cwtl
mov
push
loop
lret
sbb
mov
add
jp
or
inc
and
sbb
mov
ret
adc
sbb
push
pop
stc
int
push
cmp
out
push
pop
pushf
sub
fistl
sub
sbbb
sbb
inc
push
push
fbstp
adc
pop
nop
jno
adc
imul
pop
ret
or
loopne
mov
pop
lcall
test
ret
sub
push
cmpsl
and
lret
subl
pop
xchg
inc
adc
or
mov
les
push
aaa
icebp
xchg
sahf
mov
pop
jbe
xor
push
imul
push
sbb
add
gs
sbb
xor
adc
ss
or
or
and
enter
jle
sbb
dec
jno
push
xchg
pop
cltd
push
outsb
popf
mov
dec
andl
sahf
lods
xor
iret
or
cmpsb
xchg
stos
sbb
loopne
test
lds
xchg
or
cld
loope
jno
add
and
or
mov
lret
loopne
inc
pop
adc
push
cltd
sti
fwait
scas
or
mov
xchg
sub
bound
js
fstps
clc
xchg
mov
mov
ret
xor
loopne
jnp
inc
div
clc
sbb
in
test
lock
mov
or
xchg
daa
lret
xor
test
push
or
cltd
sbb
in
in
inc
scas
test
popf
jge
mov
pop
jbe
and
mov
sbb
cltd
jg
mov
mov
push
rcl
xor
loope
adc
jecxz
cwtl
mov
add
xor
cli
aaa
jne
fmul
sbb
inc
fdivl
mov
fwait
sub
enter
adc
cmc
sbb
imul
push
or
mov
stc
enter
shl
popa
adc
jle
lcall
sub
and
rorl
cmp
lret
cld
lock
mov
cltd
fwait
cmpsb
movsb
cmpsl
lret
sbb
fwait
jl
inc
push
add
add
add
cs
jae
pop
gs
cmp
je
jne
lods
je
and
dec
mov
adc
pop
inc
add
jl
sbb
sbb
xchg
or
push
les
pop
mov
inc
rclb
jno
sub
fs
mov
sub
jns
pop
mov
fildl
push
mov
mov
mov
pop
fbstp
adcl
and
inc
push
addr16
xor
mov
aam
pop
push
push
cmpsl
addr16
sub
mov
add
mov
inc
cli
mov
mov
aad
iret
push
pop
sbb
pop
inc
sbb
cwtl
push
lods
cwtl
add
xchg
loop
lods
add
xor
mov
movsl
lret
ljmp
push
jae
addr16
xchg
loope
dec
jnp
inc
pop
loopne
jp
aaa
sti
insb
loop
imul
icebp
andb
push
inc
in
sbb
mov
fsubs
scas
and
xchg
adc
push
sub
jnp
dec
das
or
xor
daa
mov
dec
popa
out
or
dec
repz
inc
fistpl
cmc
sbb
aas
xchg
sub
fcoml
cmp
rcrb
mov
sbb
cltd
bnd
xchg
push
imul
fs
inc
pop
cmpsb
cmc
jge
xor
jmp
dec
insl
pop
or
sti
jne
out
loop
mov
jnp
fstl
xorb
jle
ss
cmp
sbbb
or
scas
int3
cli
ffree
adc
cmp
popa
sbb
inc
in
fstps
mov
test
lock
and
add
and
inc
int3
lock
jle
hlt
mov
repnz
inc
daa
push
in
cmp
adc
lret
subb
out
sub
lahf
adc
mov
arpl
mov
sahf
inc
imul
ficompl
ljmp
fdivl
adc
test
shl
mov
or
sub
push
push
cld
mov
or
push
add
fdivl
fisttpl
mov
mov
xchg
xchg
mov
jns
sbb
subb
xchg
or
push
inc
mov
xchg
int
roll
test
or
fldenv
add
or
addr16
xchg
js
int3
dec
leave
xchg
sub
pxor
daa
shll
mov
push
aad
sub
push
mov
test
add
loop
orl
cmp
out
jmp
mov
mov
loop
es
xor
mov
xlat
repz
ret
jo
or
dec
pop
add
push
and
dec
xchg
pop
ja
imul
je
mov
subb
ret
push
mov
sbb
mov
mov
push
push
dec
jo
cmp
test
nop
xchg
push
xchg
scas
sbb
leave
lret
shrl
ret
loopne
fstpt
jne
jmp
in
negb
push
scas
shrb
mov
sbb
jl
mov
xchg
mov
or
pop
sahf
push
sbb
cmp
sti
push
and
sahf
push
or
pushf
xchg
mov
pop
cmpsb
popf
and
push
scas
mov
sub
or
aam
int3
xchg
mov
fiadds
mov
sahf
pop
enter
fcompl
int3
jp
pop
adc
adc
mov
or
faddl
scas
xchg
inc
shlb
shrl
into
leave
add
aad
cmpsl
xchg
ljmp
xchg
xor
shlb
inc
jne
test
or
jge
mov
mov
ror
inc
mov
inc
add
andl
or
xor
add
lock
and
sub
pop
or
sbbl
clc
mov
outsl
out
mov
cs
or
sbb
sarl
pop
mov
mov
inc
mov
call
out
das
or
mov
lds
inc
xorl
jb
xor
mov
out
outsl
pop
popaw
sbbb
xchg
dec
inc
rsm
adc
xchg
xor
adc
mov
rol
arpl
cmp
cltd
and
sbb
and
inc
mov
mov
jp
fnstcw
push
gs
sbb
addb
lret
loope
or
or
xor
gs
movsb
cmp
dec
pop
push
cmp
out
mov
je
pop
sbbl
xchg
pop
js
jbe
sub
cs
mov
andl
adc
or
or
add
push
test
and
dec
sti
mov
and
out
bound
push
cmp
nop
xchg
push
test
sti
inc
cmc
jle
sbb
mov
in
fildll
gs
pop
xlat
inc
scas
jle
sub
mov
xlat
cmc
daa
inc
in
mov
jl
pop
idivb
push
lret
fcmovnbe
test
xchg
cmc
cmp
nop
insb
lret
setne
or
adc
test
andb
lret
jns
mov
mov
fcoml
fs
pop
call
inc
mov
push
sub
shl
stc
in
aam
dec
pop
lds
or
push
push
lea
mov
inc
jmp
ss
jb
and
addr16
xor
outsl
fcompl
dec
lcall
push
dec
xchg
js
or
cmc
or
mov
sbb
pop
dec
ljmp
mov
mov
xchg
push
popf
inc
dec
push
push
lcall
in
or
movsb
fcoml
xchg
lea
pop
stos
jecxz
mov
mov
jne
enter
pop
aaa
mov
mov
jmp
sbb
and
adc
inc
jae
js
mov
ret
inc
inc
fmuls
ljmp
leave
push
push
or
mov
xchg
inc
push
pop
test
or
cmpb
arpl
sub
add
push
add
shr
pop
lds
insb
lods
lcall
xchg
mov
test
aaa
pop
cmpsb
in
jns
sbb
or
push
sbb
dec
sub
sub
push
test
inc
jle
pop
repz
and
pusha
lcall
repz
sti
jecxz
xlat
lds
inc
add
jle
push
fnstcw
bound
jmp
adcl
fisubs
jle
pop
mov
xor
fcoml
xlat
inc
cmpsb
or
int
push
ss
mov
mov
dec
adc
lds
lret
jno
rcrl
cmpxchg
popl
xor
fistl
adc
cwtl
push
pop
cmpsl
sub
test
test
xchg
andb
in
xlat
out
mov
xor
mov
add
push
fimuls
jnp
in
and
xchg
dec
cmpsl
rol
scas
sbb
mov
lds
lea
lods
pushw
test
in
shrl
mov
fidivrs
jp
cmp
scas
fidivrs
mov
fdivrs
cli
out
sbb
inc
sbb
push
adc
outsb
mulb
fs
add
inc
test
push
sub
sub
sub
lea
cmp
jmp
out
ss
inc
or
cs
or
in
aam
sbb
int3
lea
popa
insl
mov
cmpsb
xchg
ret
test
call
pop
test
and
hlt
test
mov
rorl
mov
inc
push
and
movsb
enter
adc
shrb
addr16
cmpsl
sahf
test
insl
out
pop
lret
out
test
cmpsl
xchg
mov
mov
dec
shl
sub
xchg
push
lcall
test
das
ret
jge
test
mov
enter
sbb
testb
out
shlb
dec
loop
push
pop
je
daa
int3
fcomps
gs
inc
cli
xchg
sub
lock
pusha
nop
xchg
pop
pop
leave
adc
stc
fsubrs
adc
mov
fwait
mov
lcall
xchg
sub
mov
scas
jne
inc
pop
test
mov
jle
mov
push
cld
mov
xchg
test
or
push
pop
lcall
inc
mov
dec
add
push
xchg
jl
xchg
cmp
xchg
clc
adcb
xchg
add
mov
mov
mov
pop
sub
mov
push
pop
inc
repnz
mov
jmp
push
jns
add
rcl
xchg
or
pop
inc
sbb
add
mov
int3
xlat
jne
push
call
outsb
inc
sbb
push
jge
and
or
pop
popa
mov
inc
xchg
xor
movsl
fs
cmp
ficoms
outsb
add
aam
mov
out
pop
mov
imul
and
inc
mov
sub
cmpsl
data16
cmp
mov
jle
rcll
cmp
lcall
or
xchg
cli
shl
iret
jbe
sbbb
push
push
insl
xor
jle
pop
dec
add
sbb
enter
clc
cmpsb
es
pop
test
inc
or
or
loopne
test
sbb
cli
jns
dec
cltd
mov
subb
xchg
loope
or
popa
dec
cli
adc
push
xor
lret
inc
and
es
dec
je
pop
popf
push
or
inc
sub
aaa
dec
lcall
std
lahf
mov
sbb
jne
imul
dec
mov
push
outsb
ret
lea
push
jnp
gs
les
jmp
loope
mov
cmp
jp
fimull
xorb
ror
mov
sub
cltd
es
mov
push
cmp
mov
adc
dec
mov
imul
and
xchg
sbbb
cs
daa
cmp
addr16
mov
cli
dec
test
add
test
lret
mov
insb
sbb
pop
sub
jne
pop
xorb
test
pusha
and
stos
adc
data16
jnp
imul
fwait
lods
aaa
insb
xchg
int
lcall
sub
pop
mov
xchg
pusha
push
les
or
add
notl
lahf
mov
or
add
push
icebp
ret
inc
push
add
ret
cltd
sub
pop
lods
icebp
xchg
xor
xchg
addb
dec
out
dec
pop
jbe
jne
sbb
fs
xchg
enter
or
xor
pop
fdivrl
sti
das
push
hlt
movsl
xlat
push
loop
test
jb
ljmp
mov
lds
sub
lea
ja
rorb
dec
or
mov
dec
push
jbe
adc
fsubrl
je
mov
or
add
fadd
push
add
cwtl
push
cs
push
lds
loopne
aad
push
cld
push
cld
mov
fwait
data16
sbb
sar
or
sub
faddl
jo
or
leave
mov
jl
mov
pop
in
inc
rcrl
xchg
inc
fstpt
sti
cltd
ficomps
fldl
dec
mov
or
xchg
scas
sbb
push
xchg
or
cli
inc
fisttpll
or
negl
ffreep
stc
sbb
dec
inc
in
mov
rcrl
ss
sti
cmp
xor
jne
cmpsb
mov
inc
movsl
dec
movsb
in
xor
inc
adc
or
aas
pop
addr16
xchg
daa
imul
and
adc
sbb
sbb
das
mov
addr16
cmp
movsb
mov
shlb
fcmovbe
mov
push
sahf
cmpsl
or
pop
negl
xchg
pop
inc
fiadds
sub
cltd
sub
push
ret
inc
or
cs
pop
mov
adc
lret
xor
pushf
incl
mov
sbb
lods
adc
roll
rclb
xor
or
lahf
xor
mov
mov
push
or
sbb
mov
shll
mov
sub
ljmp
rcll
sbb
enter
lods
pusha
dec
out
push
jbe
in
les
mov
push
adc
adc
ret
mov
and
xchg
push
adcb
scas
push
roll
mov
nop
aam
mov
iret
gs
and
cmp
clc
addps
pop
lcall
out
lds
add
jmp
test
inc
mov
cmp
shll
pop
inc
pop
add
addl
jp
cmpsb
or
fcoms
cmpsb
inc
outsl
subb
add
mov
lcall
outsb
imul
shrl
push
sbb
movsb
mov
lret
sub
xchg
cmp
or
jmp
pop
sbb
pop
jp
sub
add
sahf
jp
or
mov
mov
jns
mov
rorl
out
in
adc
push
xor
out
jae
mov
out
imul
out
insl
repnz
lods
lock
rol
test
outsl
sarl
xchg
scas
shr
mov
dec
lock
icebp
testl
imul
adcl
jecxz
add
fsubrl
or
imul
repnz
insl
and
dec
loope
push
lods
mov
stos
rolb
cltd
push
pop
mov
mov
cmp
arpl
stc
aam
lret
push
sub
loope
outsb
cmpsl
add
sub
adc
xchg
les
push
or
jne
and
jnp
mov
fwait
mov
mov
nop
repz
inc
and
or
jne
imul
cmpsb
or
addl
mov
adc
inc
test
shlb
jge
jne
lcall
lcall
lahf
pop
push
pop
nop
bound
cltd
inc
out
or
xor
cwtl
mov
testl
or
mov
push
pop
inc
dec
cmp
push
aam
dec
hlt
pop
lret
mov
add
add
or
loop
popf
loopne
jb
sub
cmp
jle
sbb
imul
lcall
iret
outsb
sti
sub
lock
adc
jbe
lock
fs
or
mov
addl
sahf
pop
jb
or
push
sahf
insl
lods
mov
out
test
paddsw
iret
push
movsb
fsubl
jb
pop
movsl
loopne
lds
fsubr
pop
loope
cwtl
xor
ss
push
pop
xchg
js
push
stos
jbe
out
data16
lds
push
add
push
jbe
nop
scas
inc
ret
add
adc
or
negb
mov
test
and
or
pushf
xor
popa
out
test
cltd
mov
cmp
pop
push
inc
stos
test
sbb
nop
or
int
mov
popf
andb
ja
sbb
aas
adc
adcl
mov
mov
negl
pop
insb
push
sbb
cmp
daa
movsl
cmp
adcl
cmp
lea
test
sbb
gs
stos
arpl
dec
testb
adc
pop
lret
mov
subl
sbb
sti
jae
pusha
orl
mov
dec
dec
bound
fcomps
icebp
add
mov
pop
cmp
pop
sub
fistl
orb
adc
cmp
lds
arpl
or
daa
sub
inc
int
mov
sub
in
jp
pop
ret
jge
rorb
stc
dec
in
pop
repnz
inc
sub
adc
lcall
gs
sbb
and
xchg
cmp
add
lods
or
sub
cmp
sbb
and
test
ret
push
loop
cmpsb
nop
loopne
push
fdivrp
cltd
sbb
in
and
add
xchg
out
push
and
add
add
lds
xor
mov
xchg
adc
jmp
arpl
jno
shlb
xchg
arpl
fstpt
push
dec
sbb
sbb
out
cli
xor
inc
cmpsb
stos
pop
cmp
movsl
inc
jle
or
or
adc
or
sub
in
in
sbb
in
mov
sub
xchg
pop
fisttpl
sbb
cmpsb
cmp
mov
inc
fadds
push
out
aam
jne
mov
inc
push
jnp
cli
fnstsw
mov
sbb
das
cmc
jmp
dec
imul
cmp
mov
dec
std
scas
mov
adc
icebp
loopne
cmp
jo
jl
push
adc
xor
popa
adc
in
and
leave
cmc
rcr
jae
sbb
pop
adc
and
pop
mov
mov
xor
cs
shlb
dec
dec
xchg
mov
jne
and
push
add
bound
cmp
cmp
fidivrs
lods
mov
pop
dec
sahf
leave
andl
fisttpll
jno
test
sbb
pop
ljmp
gs
lcall
inc
aas
es
imul
push
out
jp
push
and
dec
pop
push
mov
repz
pop
or
iret
fbstp
aam
adc
add
xchg
sbb
enter
loopne
loop
mov
sahf
sub
out
mov
mov
xchg
invd
jb
sbb
jge
stc
xchg
outsb
mov
lret
mov
mov
dec
inc
push
adc
sbb
push
sarl
aam
outsl
sbb
sbb
mov
xchg
add
int3
popf
aaa
cltd
daa
sahf
test
jne
cmp
jge
sub
movsb
mov
lock
dec
dec
add
mov
dec
in
xor
or
push
lock
addl
ljmp
mov
xor
test
xchg
dec
inc
andb
pop
inc
push
dec
xchg
mov
xchg
sub
imul
frstor
jle
cmpsb
or
out
mov
jl
sbb
push
inc
aas
dec
call
sbb
dec
arpl
shll
cmpsl
sbbb
ret
xor
cmc
jae
mov
addr16
cld
scas
nop
add
or
ds
mov
xor
mov
cmpb
aas
lods
adc
jge
cmp
cld
cmc
jns
enter
aas
sbb
or
sub
inc
ljmp
pop
lret
pop
dec
faddl
pop
mov
mov
jle
sub
pusha
xchg
push
mov
ja
ljmp
xchg
push
jge
xor
hlt
push
push
data16
xor
imul
inc
insl
inc
or
dec
cli
cmp
dec
inc
push
mov
fucomp
xchg
lea
lds
fs
fcoms
fcomi
enter
dec
lods
rcr
stos
lock
shll
xor
mov
push
fsubs
pop
cmpsb
aaa
repz
pop
xchg
stos
pop
jmp
inc
mov
add
mov
push
sbb
dec
xor
pop
cmc
data16
cmp
leave
lcall
sub
pop
popf
fildll
dec
xchg
jp
sub
je
adc
and
lea
test
sbb
mov
mov
xchg
ret
mov
pop
es
and
dec
pop
pop
js
xchg
adc
in
and
scas
add
pusha
adc
mov
call
shlb
jle
fstpt
enter
push
mov
mov
gs
jno
jne
xchg
mov
cmpsb
bound
jb
mov
movsl
add
push
cwtl
dec
add
lods
jle
je
push
mov
aaa
sub
lcall
rcr
popf
xor
add
xor
adc
add
ja
push
aam
outsb
jecxz
mov
mov
push
mov
ret
gs
sahf
push
insb
pop
sbb
loopne
fs
subb
push
int3
sbb
cwtl
nop
add
inc
jp
mov
js
inc
fisubs
pop
in
cmpsl
xchg
loopne
shl
js
cmc
or
xchg
adc
jne
subb
popf
aas
push
adc
or
lcall
mov
aam
cmp
fstp
xor
mov
mov
jecxz
test
in
fldenv
and
cltd
cmpsb
popa
mov
and
std
and
sbb
mov
add
shll
xchg
lret
dec
ss
pop
add
xor
stc
jg
jns
sub
cs
pusha
inc
daa
mov
clc
fimull
sahf
push
sbb
stc
pop
or
cmp
cmp
and
out
inc
stos
mov
xor
lock
inc
jp
inc
movsl
rcll
xchg
pop
push
addl
sub
sub
out
inc
fwait
dec
xchg
push
sub
and
pop
mov
mov
in
xor
mov
setl
mov
mov
shrl
xor
xchg
mov
xchg
test
sbb
sub
int3
cwtl
mov
fdivrs
nop
test
test
lcall
rorb
add
pop
les
or
mov
test
fisubrs
rorl
test
mov
pop
enter
push
sbb
and
scas
mov
imul
push
pop
mov
xchg
fsubl
adc
pop
add
in
mov
mov
or
fdivp
cmpsb
adc
mov
adc
sub
popa
in
outsb
sub
fidivl
pop
inc
call
addr16
rcrl
inc
xor
pop
xor
in
lret
inc
pop
xor
inc
dec
jle
daa
dec
mov
jmp
cmpsb
inc
lods
dec
mov
or
sahf
jns
mov
cmp
xchg
mov
ficoms
into
mov
outsb
xchg
ret
fisttpll
sbb
cmpsb
les
or
shll
subl
pop
std
sub
pop
pop
dec
lods
movsb
popf
arpl
adc
aas
dec
scas
adc
push
push
repnz
xchg
fdivs
mov
inc
rcrl
jbe
or
mov
xor
cltd
push
in
adc
test
out
push
repnz
or
xor
xchg
loopne
test
mov
add
cmp
push
addr16
fisttpll
fst
and
inc
fsubs
rcl
lock
push
adc
sahf
dec
push
and
cltd
out
bound
cwtl
mov
call
mov
cmp
inc
sub
adc
sub
loopne
dec
mov
add
xor
xchg
clc
ljmp
sahf
divb
stc
or
adc
inc
add
dec
sbb
jns
inc
dec
sub
cli
or
push
aam
lods
dec
das
dec
mov
inc
std
jle
jge
in
xor
rorl
mov
outsl
leave
cmp
push
sbb
push
cld
inc
popa
repz
test
shlb
fidivrl
bswap
movsl
mov
mov
inc
sub
mov
test
dec
shlb
jle
fucomip
push
sub
dec
cmpsb
sbb
test
and
mov
pop
push
fs
sub
mov
aas
lahf
cmpsb
mov
xor
or
shl
mov
mov
jp
testl
mov
in
lcall
xchg
adc
sbb
insl
sti
icebp
xor
in
xor
shlb
cmp
jmp
sbb
or
mov
push
cmpl
jbe
insl
insb
lock
jbe
sbb
rolb
icebp
cmpsb
jle
inc
shlb
in
xor
xchg
mov
jge
lods
cltd
jp
shl
icebp
ret
rolb
sbb
mov
push
and
cltd
bound
aad
imul
push
or
xchg
subb
mov
int3
dec
aam
cmpsb
rclb
cmp
mov
xchg
xchg
fnstenv
mov
popf
mov
push
xchg
mov
sbb
decl
out
into
adcb
das
out
lcall
mov
lret
dec
gs
es
imul
push
in
mov
cltd
nop
push
orl
jmp
xchg
dec
sbb
mov
jp
addb
out
cwtl
mov
pop
fidivrl
or
mov
stos
inc
int
sub
mov
inc
imul
jb
or
ljmp
inc
or
xchg
lock
push
pop
push
xor
and
je
add
mov
push
popf
testl
sahf
and
mov
dec
fs
lock
roll
pop
mov
mov
aaa
popf
loopne
lds
jle
cmpsl
fcompl
pop
xor
out
and
es
adc
cmpsl
lock
gs
addb
ds
rcl
xchg
push
inc
ret
movl
into
and
insb
out
jne
fbstp
ret
pop
sub
mov
imul
cmp
mov
push
inc
jge
inc
sbbb
fdivrs
xchg
fmull
push
add
sarl
dec
fsubr
fstp
jnp
ret
push
jno
push
dec
push
mov
sbb
shlb
xorl
cmpb
or
xchg
pop
icebp
rorb
sbb
insl
ficompl
shl
sbb
mov
adc
lds
sub
push
cld
add
or
push
jg
or
fucomi
lods
push
cmp
cmp
cli
and
loopne
ret
and
fwait
ljmp
xor
cmp
mov
push
push
sbb
lret
fidivrl
gs
cmpl
dec
sub
xchg
push
bound
shll
flds
ret
xchg
lock
dec
ret
and
std
push
lret
push
rcr
xor
pop
xchg
add
push
addr16
cmc
test
std
subl
dec
push
pop
jecxz
sub
jle
mov
xlat
aad
mov
pop
outsl
daa
mov
or
push
loope
clts
lahf
cmp
cmpsb
inc
xor
sub
divl
xchg
mov
cmp
mov
test
nop
in
push
out
xchg
pop
or
inc
sbb
push
stos
add
inc
push
mov
sti
lahf
or
in
arpl
les
stc
jne
fcomps
fisubl
mov
repz
imul
negl
gs
pop
shlb
mov
or
xlat
push
aam
cld
pop
pop
frstor
lock
dec
insl
ss
mov
stc
out
clc
sub
inc
pop
inc
mov
or
ret
cmp
cmc
sbb
sbb
adc
fmuls
outsb
ds
push
mov
push
fsubr
jge
pop
mov
cmp
lea
mov
inc
mov
pop
or
in
sub
test
and
mov
xor
lock
dec
or
enter
bound
jge
cltd
push
add
scas
dec
movsl
cmpsb
jp
push
sub
xor
in
push
inc
aas
or
scas
inc
inc
jnp
push
les
xchg
fldt
loope
push
jp
jge
mov
push
or
rcrb
push
and
cmp
xor
xchg
punpckldq
aaa
push
lea
repz
push
dec
push
test
addr16
test
push
or
ffreep
push
push
inc
mov
int
jae
es
std
jne
test
push
sahf
popf
rorb
sbb
sub
mov
inc
dec
inc
insl
xchg
sarl
dec
push
xor
mov
les
lcall
cltd
xchg
push
sub
jle
adc
push
test
orl
cmpsl
xchg
repnz
xor
dec
hlt
inc
lods
or
mov
cmp
cmp
test
inc
add
sbb
add
fisubrl
mov
adc
lods
bound
scas
adc
pushl
sbb
jecxz
mov
adc
push
lds
add
int3
ja
inc
push
stos
arpl
xor
pop
inc
popa
lds
xchg
dec
mov
ror
imul
sbb
jb
mov
pop
lds
sub
sbb
test
jp
das
sbb
mov
add
stos
mov
adc
xchg
mov
pop
scas
leave
pop
cmp
or
inc
add
jo
stos
cltd
sbb
dec
out
pop
sub
lret
cltd
jo
fdivrl
out
aas
jg
mov
sbb
sbb
add
cmp
xchg
lds
mov
inc
xchg
or
jp
in
gs
inc
insl
jns
gs
dec
movsl
fwait
cmp
stos
outsb
les
fsubrs
jge
or
popf
pop
test
std
jecxz
ss
inc
and
jge
add
jp
neg
add
inc
push
sti
add
sub
fwait
mov
add
mov
in
xchg
notb
push
adc
test
scas
gs
in
mov
push
clc
pop
push
dec
jecxz
mov
daa
cmp
enter
sbb
push
cmp
fistpll
inc
push
rolb
adc
jae
adc
repz
es
leave
or
cmpsl
test
sub
dec
xor
cmp
push
mov
push
or
mov
nop
ret
lods
fimull
xlat
cmp
xorb
mov
xchg
into
in
mov
inc
pop
lods
xchg
addl
js
mov
sbbb
push
add
pushf
cwtl
aad
sbb
and
adcb
aas
ja
jo
es
das
or
lds
mov
push
call
cs
aad
push
mov
or
cmpsb
add
sbb
jge
jae
push
dec
push
xchg
sbb
or
mov
repz
jl
aaa
mov
sar
cmp
stos
mov
jne
and
pop
push
ja
adc
mov
lret
xchg
pop
mov
jge
lods
cmp
insb
ja
jbe
add
mov
addl
inc
icebp
push
dec
dec
xchg
sahf
cltd
sub
loopne
xlat
shll
push
adc
inc
mov
in
or
lods
push
xchg
cli
cwtl
cmc
cmc
jecxz
push
push
lods
adc
sbb
movsl
cld
mov
jecxz
dec
imul
je
daa
cmc
pop
rcrl
sti
push
push
mov
push
or
inc
sbbl
or
popf
call
adc
outsb
stc
sub
out
or
sbb
xor
or
les
popl
movsb
add
stc
adc
or
add
jne
push
insl
sbb
xor
addr16
sbb
sbb
jge
jg
xchg
fistps
out
lcall
sub
inc
mov
in
lret
inc
cld
sbb
pop
jle
jmp
jmp
sbbb
loopew
pop
jnp
sbb
jne
ret
pop
insb
stc
mov
jp
lcall
sarl
stos
aam
imul
mov
clc
sahf
mov
sub
adc
xchg
add
mov
ss
cmc
add
aam
sbb
test
lock
dec
mov
test
cmp
push
push
fsubs
mov
lods
jl
mov
lcall
imul
xlat
sti
scas
push
pop
or
in
stc
cmpsl
fsts
jcxz
ljmp
cmc
outsb
sahf
testb
sub
xor
and
dec
add
lcall
sti
jl
aad
inc
std
add
xchg
jp
sub
xor
mov
push
pop
inc
add
ret
ret
dec
cs
pop
inc
push
pop
test
xor
mov
lahf
adc
add
popa
xchg
fistps
fisttpl
rcrb
popf
xor
imul
gs
sar
xchg
lods
sbb
int3
push
enter
push
sbb
xchg
cmp
ss
andl
aas
xor
push
dec
into
jne
je
cltd
js
xor
les
fisttpll
stos
leave
mov
les
sbbl
mov
std
push
int3
or
and
in
add
mov
out
loope
sub
mov
pop
sub
fcomps
cmp
or
gs
xor
or
inc
pop
loopne
or
add
arpl
test
xchg
push
sbb
popa
fsubl
xchg
fmull
idivb
inc
xchg
or
and
sbb
push
adc
sti
and
movsl
xchg
dec
out
pushf
mov
stos
jl
push
rcrl
pop
sbb
adc
pop
outsl
jbe
add
rcrb
lea
shrl
js
add
shrl
inc
shrl
push
test
push
popf
repnz
aam
cmp
notb
gs
das
shll
aas
pop
movntq
aam
mov
jp
mov
inc
sbb
xchg
add
ss
aad
jecxz
or
stc
cmpsl
popa
fsubrl
ja
fadd
dec
mov
adc
arpl
imul
out
popf
mov
pop
push
pop
xor
out
mov
movsb
sbb
sbb
pusha
mov
dec
or
xchg
sbb
add
idiv
sahf
lcall
mov
neg
or
dec
adc
sub
gs
push
orb
inc
sbbb
enter
sbb
lahf
mov
dec
jge
pop
adc
xchg
imul
outsl
inc
push
fs
xor
or
sbb
xchg
lods
and
adc
gs
pop
inc
and
cmp
or
imul
inc
mov
lret
sub
or
inc
jb
arpl
imul
pop
mov
ret
sbb
sub
pop
mov
adc
pop
ja
jne
and
adc
xor
xchg
pop
inc
mov
faddl
jne
inc
dec
setle
cmpsb
push
push
pop
repz
aaa
jp
or
mov
lock
out
mov
out
mov
lcall
out
fadd
stc
test
mov
pop
jp
fidivs
inc
mov
add
and
pop
pop
inc
push
lcall
sbb
push
push
sub
xchg
lcall
cmpsb
or
arpl
shlb
push
add
rcrl
rclb
loop
jmp
stc
adc
fdivrl
bound
sub
fstps
imul
cld
int3
mov
mov
pop
dec
push
add
arpl
push
push
outsb
mov
or
add
cltd
mov
lea
decl
cli
loop
rcll
cld
dec
mov
lret
int
mov
push
sahf
filds
jnp
xchg
xchg
xor
sub
sub
pop
mov
add
pop
inc
mov
icebp
out
fcmovu
pop
sub
jnp
popf
call
arpl
inc
push
push
sahf
add
push
and
out
sbb
ret
fistps
orb
fcoml
test
aaa
sahf
add
add
mov
aam
inc
daa
cmp
sub
xlat
sbb
xrelease
add
pop
mov
ret
fmull
mov
clc
lea
mov
cs
fimull
lea
daa
into
push
jle
mov
dec
dec
ss
rcrb
decl
xchg
jp
mov
or
repz
ss
adc
dec
out
pop
jne
imul
xchg
sahf
sbb
fistps
pop
adc
jg
inc
or
roll
push
sub
pushf
and
or
jnp
mov
inc
fcomps
fstl
outsb
imul
xchg
daa
call
js
cli
mov
lcall
push
test
lahf
inc
cmpsl
push
sbb
mov
imul
jbe
rcrl
inc
dec
aaa
inc
jne
out
movsb
cmp
sub
imul
gs
das
push
dec
mov
and
xchg
stos
mov
mov
addr16
rcrb
rcrl
movsl
inc
out
jmp
adc
mov
iret
push
mov
cmpsb
and
cltd
mov
sbb
cltd
jmp
repz
mov
fwait
dec
xchg
lahf
sbb
dec
cli
test
mov
sarl
ficoms
mov
jnp
andb
mov
xchg
cmpsl
add
inc
mov
aad
ret
mov
inc
lods
repnz
test
inc
dec
fstpl
cwtl
mov
lcall
sar
push
aas
mov
or
mov
sub
test
xlat
ficoms
repnz
in
sbb
mov
mov
sub
jge
icebp
loopne
arpl
andl
daa
rolb
sbb
std
pusha
add
and
push
pop
ret
jns
repnz
pop
and
pop
push
test
mov
lcall
dec
mov
xchg
mov
lahf
testl
stos
andb
sub
mov
imul
jnp
add
aad
addl
add
lock
adc
mov
inc
xchg
push
mov
jne
sbb
lcall
cmc
fidivrl
adc
mov
mov
sub
jecxz
cmp
pop
daa
push
jge
mov
xchg
jmp
and
cltd
xor
mov
inc
call
mov
arpl
call
movsl
dec
pop
adc
cltd
mov
int
push
xchg
and
lcall
and
int3
add
xchg
dec
sub
sbb
test
popf
out
xor
das
lcall
out
aas
hlt
int3
or
fwait
jns
sbb
sahf
les
mov
shl
mov
mov
mov
push
inc
aad
and
add
sbb
addr16
nop
lahf
inc
sbb
add
sahf
jmp
dec
push
fwait
popa
xor
fwait
inc
jle
pop
out
int
scas
mov
push
jne
lcall
adc
stc
mov
imul
dec
lcall
cmpsl
es
fsubs
leave
aam
mov
fsts
stc
sub
or
mov
addr16
cmpsl
sub
inc
xor
jle
and
dec
lea
mov
cmpsl
sub
int3
lea
push
js
and
fdivs
mov
mov
gs
mov
or
in
add
xlat
loope
mull
push
rolb
rorb
test
stos
xchg
add
sub
mov
test
mov
pop
or
icebp
cmp
int3
push
lret
or
mov
addb
inc
out
int
in
sahf
rolb
leave
pop
es
or
je
push
sbb
addr16
mov
sbb
push
movsb
pusha
sbb
push
ljmp
xchg
push
and
push
add
xor
inc
jo
inc
ljmp
test
pop
mov
sub
inc
sahf
fcoms
sub
lret
shlb
cmp
sub
jne
daa
cltd
and
and
dec
ret
ret
rol
rolb
in
mov
jg
inc
data16
pop
scas
adc
xchg
pop
popa
ret
jno
insb
jne
xlat
sbb
add
xchg
mov
gs
mov
mov
add
mov
dec
ja
pop
xchg
jbe
add
icebp
out
ret
rcll
test
cs
lods
or
push
inc
mov
mov
push
test
lcall
sub
jne
cmpsl
mov
in
movsb
mov
push
mov
lahf
sbb
add
mov
test
into
insb
in
or
and
mov
ss
stos
fcos
call
data16
pop
mov
adc
push
push
icebp
mov
loope
push
add
cmpsl
cld
cld
lods
fs
movsl
xchg
or
ja
sub
dec
mov
popf
mov
mov
aaa
scas
jnp
mov
or
push
test
mov
cwtl
pop
push
add
or
stos
sbb
in
xor
add
xchg
and
pusha
fs
dec
rcll
push
add
xor
xor
mov
xlat
dec
inc
mov
pop
mov
mov
push
or
or
shrl
pop
add
pop
push
or
and
adc
jp
aam
rorb
push
push
movb
or
xchg
push
dec
or
outsb
rcrb
call
add
xlat
mov
and
and
mov
cmp
mov
popw
cwtl
lcall
ja
scas
jmp
jo
repz
imul
ljmp
and
outsb
add
andb
lahf
test
shlb
stc
dec
mov
les
sub
gs
xchg
jle
mov
cmpsb
xor
ret
sbb
jge
sbb
inc
jo
fsubrl
dec
int3
sbb
sbb
inc
lret
xchg
cmp
mov
aam
mov
inc
push
and
xor
mov
mov
push
mov
sub
add
adc
pop
cmp
jl
sub
and
add
in
scas
cmc
or
xor
fwait
rol
addb
insl
sbb
or
sbb
xchg
loope
pop
pop
xor
mov
dec
stos
rol
pop
je
gs
dec
cmpsb
or
add
mov
adc
out
sbb
int
test
adc
rolb
es
push
mov
clc
xchg
or
in
dec
inc
adc
push
into
stos
add
and
nop
imul
loope
add
out
mov
sub
xor
hlt
test
leave
and
jl
or
sbbb
pop
int
or
insl
aaa
sbb
mov
pusha
sbb
lret
and
push
mov
jo
aam
inc
cwtl
inc
or
in
jge
iret
dec
dec
inc
repnz
mov
inc
jne
push
pop
rcl
mov
xchg
push
inc
mov
xor
inc
mov
jmp
push
dec
sahf
jb
or
mov
lock
cmp
out
sbb
inc
into
push
cld
sub
loop
sub
or
or
inc
lret
add
sbb
jle
sbb
jmp
les
ss
aaa
adc
push
sub
xlat
or
clc
aaa
test
cltd
movsb
sub
ficoml
xchg
ret
cmp
push
push
inc
or
ss
cwtl
add
and
or
popa
and
mov
outsb
stc
mov
or
testl
rcrl
rorb
add
or
xchg
xor
or
rcrl
jnp
jle
pushf
dec
cltd
mov
cmp
and
subb
mov
xchg
test
test
pop
xor
push
cmp
pop
sbb
jl
dec
rorl
push
mov
dec
es
aad
lcall
push
mov
or
xchg
inc
sti
sub
mov
xchg
ja
sbb
pushf
add
cwtl
push
jge
xchg
xchg
and
sbb
mov
adc
inc
ret
and
add
lods
lea
push
les
test
xchg
cmp
xchg
orl
sahf
dec
ret
inc
mulb
inc
push
adc
outsl
xchg
add
xchg
out
add
popa
mov
popa
aas
inc
hlt
and
andl
add
mov
cmp
sub
addl
sbb
roll
movsb
mov
or
xchg
inc
mov
lods
push
inc
add
test
test
stos
push
bound
dec
add
popf
fbstp
out
and
push
jecxz
fistpl
push
cmpsl
push
pop
dec
sbb
xorb
lret
sahf
mov
pop
subl
mov
add
loopne
andl
subl
ja
lds
ror
inc
test
out
addb
test
pop
push
mov
mov
add
pushf
popf
popf
bound
xchg
and
pop
into
rclb
and
rolb
mov
pop
or
inc
xchg
pop
xchg
add
xchg
push
xchg
xor
pop
or
adc
mov
jle
jae
bound
fcoml
push
sahf
push
pop
test
sbb
aas
inc
rclb
pop
inc
pop
pop
mov
push
jnp
in
add
add
inc
ret
fdivrp
sbb
pop
jl
les
inc
add
add
sahf
inc
xchg
repnz
addl
push
or
rcll
lcall
xchg
test
gs
push
add
dec
inc
imul
lahf
test
stos
or
mull
inc
add
fisttpll
fdivl
inc
xrelease
pop
add
arpl
je
push
jge
in
push
push
sbb
loope
add
test
dec
xchg
push
push
pop
dec
jp
mov
popf
push
sbb
sub
dec
jno
int3
les
sbb
popa
pop
push
shrb
addr16
mov
push
push
addr16
cmc
mov
pop
and
dec
xchg
xor
icebp
mov
mov
in
pop
ret
add
sbb
dec
mov
ljmp
xor
jge
mov
fdivl
push
xchg
gs
fnsave
mov
cmp
lock
pop
and
shlb
jnp
xchg
mov
out
sbb
mov
les
pop
in
jg
cmp
pushf
jecxz
test
and
push
add
in
mov
mov
outsl
test
add
push
imul
mov
test
jle
xor
test
sub
mov
cld
push
cmp
sub
daa
push
dec
pop
subb
outsb
jmp
data16
scas
les
jae
jle
lcall
jge
test
xor
icebp
scas
mov
xor
sbb
cld
addb
cmp
xchg
std
mov
in
push
xchg
shr
mov
cmp
sbb
pop
or
in
in
in
xor
enter
xchg
aaa
mov
in
fmul
mov
loop
imul
daa
mov
aaa
cmp
popf
mov
clc
or
pushf
sbb
in
test
gs
fisubl
lock
jp
jp
xor
mov
orb
neg
ffree
and
jnp
dec
gs
mov
outsb
dec
adc
fld
mov
xchg
jne
jnp
cs
pop
and
xor
lds
inc
mov
push
pop
push
mov
pop
fdivrl
shll
popa
fucom
imulb
mov
sbb
fdivrl
ja
addl
lds
movb
mov
and
iret
mov
xchg
push
outsl
xor
jp
mov
push
or
xor
adc
es
hlt
dec
cltd
xlat
jbe
xchg
xor
or
push
push
pop
mov
mov
out
in
sub
fcoms
cmp
dec
dec
dec
push
test
pop
mov
or
push
mov
scas
lret
xchg
lahf
data16
fdivs
sbb
add
arpl
and
xchg
call
test
imul
pop
inc
xor
lock
mov
and
dec
stos
fisttps
icebp
mov
ja
daa
mov
fsub
movl
int
xchg
push
stos
cmpb
sahf
pop
shrb
lock
or
scas
xorb
xorl
mov
dec
loopne
test
add
fmul
cmc
push
inc
into
out
xor
xor
hlt
fdivs
cmpsb
arpl
fdivrl
adc
sub
cmpsb
dec
call
dec
fsts
sbb
decb
or
dec
pop
mov
jmp
mov
imul
inc
xchg
dec
test
pop
mov
dec
mov
mov
inc
mov
sbb
or
test
xchg
es
push
icebp
or
cmpsb
pop
xchg
icebp
cmc
cltd
cmc
sbb
inc
imul
test
xor
dec
jno
scas
xor
fnstenv
imul
daa
xor
dec
adc
xchg
loope
sti
inc
adc
push
mov
pop
sub
fs
push
mov
test
push
scas
lret
inc
mov
fcoms
mov
mov
or
push
xchg
aam
dec
aaa
sarl
cmc
xor
lahf
cmp
std
and
sbb
or
inc
xchg
cltd
lcall
clc
sub
es
out
pop
popf
sbb
pop
jmp
sub
add
adc
sahf
sbb
out
fsubs
mov
lret
push
or
push
push
aas
rcl
sbb
pop
decl
cmpsl
sahf
mov
mov
scas
add
idivl
aad
pop
jo
and
sbb
cmp
andl
adc
xchg
int3
push
pop
pop
cld
mov
push
in
sub
adc
rolb
cmc
out
or
adc
sub
cmc
and
xor
nop
xor
or
dec
xor
inc
pop
ja
xchg
sbb
dec
push
stos
sub
or
aas
enter
push
mov
inc
mov
pop
sbb
add
mov
pop
sarl
cmp
and
jecxz
jbe
or
push
push
aad
push
lcall
mov
mov
imul
fists
jge
mov
inc
adc
pop
loopne
inc
xchg
pop
pop
negl
popf
stos
push
icebp
add
push
fwait
mov
test
popa
push
pop
cmp
xchg
ret
add
jp
pop
mov
jmp
fisubrl
or
pop
adc
rsm
mov
pop
lods
scas
or
push
ja
roll
push
sub
sbb
push
push
push
gs
push
adc
mov
add
repnz
sbb
dec
popf
cmpsb
mov
lods
mov
jl
subb
loope
ljmp
jno
cltd
xchg
mov
imul
aas
mov
push
add
adc
adc
popf
cmp
xchg
mov
nop
sbb
or
ljmp
mov
jns
mov
fildll
adc
jmp
mov
addb
sbb
pop
out
aam
testl
jmp
sbb
mov
pop
ja
pop
sub
mov
icebp
ficomps
mov
dec
sub
add
out
xchg
int
stc
adc
test
comiss
test
sub
inc
int3
es
pusha
add
cmp
sub
jp
sbb
mov
fst
repnz
clc
jae
mov
mov
lret
mov
pop
xor
xorl
not
push
addr16
inc
loopne
sub
jp
push
ss
xor
pop
movsl
es
pusha
push
test
rcrb
jle
mov
mov
sbbl
inc
jo
scas
cs
insb
dec
fstpl
adc
pop
or
enter
sbb
orb
sahf
push
dec
and
xor
or
jne
popa
cmp
xchg
outsl
lds
out
lods
inc
dec
js
mov
mov
popf
sti
push
and
xor
data16
sarb
daa
cld
push
les
pop
shlb
out
loope
fs
sar
add
popf
mov
xchg
lret
or
out
lret
stos
lahf
out
sub
outsb
or
mov
sahf
xchg
push
jmp
imul
arpl
inc
test
fimuls
cltd
and
lret
popf
add
or
loopne
inc
xchg
andl
lcall
push
mov
jo
push
push
mov
push
inc
mov
cmp
and
push
insb
icebp
add
ljmp
aam
push
xchg
add
addl
xchg
icebp
inc
jbe
pop
add
adc
jae
mov
xchg
xor
xor
and
or
movsb
ret
popf
subl
push
and
data16
push
push
jg
lahf
andl
bound
xchg
adc
pop
mov
int3
push
pop
push
inc
test
ss
add
insb
inc
push
sbb
into
inc
ret
or
pusha
mov
daa
dec
and
xchg
loopne
jbe
push
addb
pop
add
xchg
add
test
popf
inc
test
addl
dec
test
ret
xchg
adcb
les
popf
inc
sbbb
and
push
incb
add
adcb
inc
test
pop
test
loop
add
lahf
test
inc
addb
jae
icebp
push
into
gs
test
adc
sbbb
xchg
push
add
push
pop
push
mov
in
lcall
testl
pop
es
inc
add
add
pop
sbb
pop
or
adc
gs
gs
in
mov
loope
inc
cmc
push
and
jge
push
filds
push
add
pop
cmpl
mov
test
dec
push
add
pusha
aas
inc
adc
inc
inc
dec
or
inc
ljmp
orb
sahf
in
fildl
in
sbb
lahf
test
enter
jl
mov
rcr
pop
jle
inc
inc
test
xchg
mov
or
popf
push
push
add
push
inc
inc
inc
inc
sahf
inc
leave
test
roll
jge
addb
popf
pop
pop
pop
inc
popf
add
adc
inc
add
pop
add
push
les
test
arpl
jle
jge
gs
gs
push
rorl
or
push
jns
std
or
mov
lods
cwtl
xchg
mov
mov
mov
xchg
push
inc
out
test
leave
lret
xor
lods
push
mov
sahf
test
lods
pop
aaa
push
sbb
jmp
faddl
popa
or
pop
push
cmpsb
or
mov
push
jmp
fcompl
popf
jp
jge
add
push
pop
rcrb
in
pop
or
add
daa
push
aam
mov
jp
test
xchg
pop
cmpsb
mov
jp
test
daa
push
adc
in
inc
sti
sub
test
push
push
nop
jbe
pushl
mov
popa
xor
push
inc
jnp
fsub
cmpsb
test
lds
lahf
or
ljmp
test
mov
sub
daa
or
sbb
mov
and
sub
pushf
push
sbb
in
cltd
std
shll
test
or
add
out
int
mov
imul
sbbb
jb
sub
mov
loopne
fcmovbe
insl
mov
repnz
sbb
push
or
xchg
pop
xchg
out
sbb
push
pop
mov
pop
mov
inc
push
lcall
push
test
jno
cmpsb
stc
lods
nop
lods
orb
sahf
jle
fdivrs
sbb
lock
out
add
pusha
cmp
sub
fcomip
rcrl
test
dec
mov
loopne
xchg
pop
cmp
jnp
int3
stos
push
adcl
leave
fwait
sbb
adc
mov
outsl
and
cmpsl
dec
or
push
dec
out
xchg
add
leave
or
stos
ret
in
out
jl
repnz
and
mov
inc
pop
mov
lds
jge
sub
mov
cmc
out
inc
jae
insl
mov
adc
mov
fcmovu
mov
sbb
ljmp
adc
lret
roll
and
mov
add
in
mov
sbb
inc
stc
mov
sbb
negb
dec
xchg
test
add
in
lret
sub
cwtl
pop
add
testb
fistpl
pop
cmp
ficompl
inc
iret
or
push
loope
aas
loope
fcomps
mov
stos
push
icebp
cwtl
shll
repz
das
dec
and
popa
adc
stos
movsl
mov
push
mov
add
push
test
sahf
push
mov
fnsave
push
cmc
or
popf
add
jne
push
je
cmpsl
mov
ja
dec
push
mov
ja
inc
push
xchg
sub
nop
jge
addr16
ret
push
inc
jbe
aaa
test
jmp
test
xchg
or
test
cmpsb
jo
test
test
test
bound
in
ljmp
mov
pop
add
out
lret
les
je
push
or
test
inc
cld
push
jae
inc
adc
in
inc
pop
mov
filds
aam
push
pop
pop
ficomps
sub
fistpl
pushf
inc
pop
push
ror
and
pop
pop
ficomps
fsubl
cld
add
and
xchg
sbb
pusha
popa
test
add
push
sbb
repz
adc
ret
push
fcoml
test
add
pop
in
adc
push
mov
loope
bound
xchg
sbb
rolb
and
add
push
cltd
movsb
add
add
add
test
pop
add
dec
gs
add
push
push
or
or
add
push
dec
xchg
add
pop
push
inc
push
lahf
push
inc
test
mov
push
jge
add
pop
jle
or
ret
repnz
enter
pop
jnp
in
rcrb
ffree
roll
add
popa
jne
incl
fstpt
mov
adc
addb
jne
adc
dec
push
pop
pop
or
push
adc
imul
or
jge
push
pop
xchg
sbb
inc
test
ret
push
jnp
in
pushf
jmp
or
out
sbb
addb
andl
jns
and
add
std
lcall
xchg
jae
sbb
xor
xchg
add
mov
cmp
xlat
fisubs
roll
jg
mov
inc
gs
stos
add
movsl
xor
rcrb
push
mov
mov
adc
push
jnp
lahf
inc
aas
mov
cmpsl
fcoml
cld
inc
xor
out
roll
insb
dec
push
dec
out
xchg
ljmp
scas
xor
dec
inc
in
mov
cmp
dec
inc
mov
push
pop
jo
adc
subb
dec
push
mov
scas
movsb
bound
lcall
mov
outsb
or
fcomi
and
sbb
cmp
sbb
inc
xchg
repz
pop
sahf
ret
int
push
dec
fidivl
push
fs
and
imulb
push
lea
dec
inc
xor
add
fbstp
pop
push
pop
mov
jnp
sbb
leave
ret
and
pop
repz
lahf
add
or
sub
shrb
cmc
jge
add
add
push
push
adc
push
mov
adc
inc
adc
xor
inc
xchg
inc
mov
inc
and
mov
jmp
mov
mov
stos
js
cmc
jle
ret
jl
imulb
jo
mov
stos
hlt
sbb
imul
xchg
mov
ret
std
sub
pop
mov
cmpsb
dec
sahf
divb
sbb
add
jb
cs
es
mov
movsl
call
lock
cmp
or
jmp
imul
sbb
cmpsb
adc
push
les
jp
or
outsl
lds
addr16
orl
xor
divb
andb
out
cwtl
jecxz
scas
cmp
and
cmpsb
fsubrp
adc
or
pushf
loop
lret
mov
jmp
mov
push
sub
jno
mov
out
cltd
and
push
jmp
repnz
mov
sbb
cmpsb
sbb
adc
push
lret
dec
cmp
xchg
cmp
and
jns
push
addr16
sbb
and
mov
adc
add
clc
stos
mov
or
cmp
movsl
jno
dec
test
push
mov
shll
test
out
pop
adc
fidivrs
jae
jmp
sahf
pop
faddl
mov
roll
add
scas
mov
movsb
or
add
jns
shl
cli
cmp
cmc
adc
pop
inc
mov
and
jnp
mov
pushf
and
aas
mov
add
dec
dec
pop
fidivl
xchg
mov
sbb
inc
jl
cmp
push
ret
cmc
lds
scas
inc
sbb
stos
fadds
loopne
or
addl
les
psubusb
mov
pop
pop
out
push
push
push
stc
lret
imul
sbbb
test
lcall
xchg
idiv
int
popf
stos
ret
daa
cli
push
mov
cmc
fdivrl
es
cmc
mov
orl
in
les
mov
push
pop
out
mov
nop
and
jp
mov
cmp
add
dec
imulb
or
push
test
jecxz
mov
ja
add
fnstcw
loop
pop
cmpl
mov
sbb
lcall
imul
cld
lea
cs
rcll
dec
iret
popa
in
cmc
push
mov
jmp
cmp
ja
sbb
inc
test
cmp
push
bound
pop
adc
dec
cmp
insb
dec
scas
add
imul
mov
fcompl
insl
fistpl
xchg
and
out
bound
repz
add
popa
outsl
pop
mov
sbb
and
push
inc
jnp
or
xchg
fists
lcall
pusha
mov
cmp
les
or
or
in
jl
push
subb
ss
addr16
push
pop
inc
cltd
test
mov
pop
call
cmp
or
mov
xchg
mov
sbb
jno
add
cmp
mov
mov
cmp
pop
fidivrs
shl
jbe
mov
int3
rcrl
rolb
lret
sbb
sub
icebp
aas
push
lahf
daa
xchg
cmp
pmaddwd
aaa
ficoms
xchg
sbb
dec
push
lcall
pop
or
inc
loopne
out
int3
add
hlt
adc
clc
pop
rcrb
mov
rcrl
pusha
shll
scas
xchg
int
mov
dec
and
sbb
adcl
inc
test
scas
in
sub
dec
add
dec
sahf
or
pop
push
cli
scas
xchg
jo
sbb
cmpsl
adc
jge
mov
cld
cmp
mov
sub
xor
add
ss
or
mov
data16
and
insb
mov
popf
pop
xlat
push
push
pop
mov
add
int3
out
int3
jnp
mov
notl
rcrb
dec
mov
daa
pop
cmp
inc
fs
pusha
test
inc
jae
imul
add
push
push
mov
enter
xchg
mov
dec
add
jns
lods
mov
sub
jge
pop
sub
js
rcl
add
or
rolb
mov
cmc
fldt
shlb
lret
call
push
icebp
mov
push
jne
add
push
mov
add
lret
pop
fsubrp
ret
fsub
adcb
mov
cltd
sub
bound
out
clc
sub
shll
push
mov
cmpsl
or
sub
in
xor
pop
fidivl
gs
into
fdiv
jecxz
pop
sbb
pop
or
insb
push
mov
xor
mov
call
push
xor
insl
push
shrl
or
inc
inc
shl
xor
adcl
es
inc
cli
push
cltd
mov
mov
lods
popa
add
jne
int
adc
jge
aaa
popf
cmp
pop
stc
jo
rol
dec
sarl
mov
pop
stos
addr16
shlb
orb
cwtl
jp
test
add
jnp
push
sbb
movsl
pop
daa
adc
xor
mov
xor
nop
push
mov
xchg
and
lret
jae
push
xchg
sbb
mov
or
adc
addl
hlt
hlt
inc
cld
inc
push
xchg
mov
pop
aaa
test
dec
fdivl
push
fwait
adc
dec
insb
iret
xchg
orb
adc
and
sub
lahf
add
jmp
sub
das
jmp
pop
sbb
jnp
mov
pop
icebp
mov
imul
std
pop
test
xchg
adc
add
push
aaa
test
xorl
dec
jae
jb
out
sbb
int3
daa
mov
jecxz
pop
sub
aaa
hlt
sub
mov
xchg
sub
insb
sahf
pushf
add
rcrl
aaa
call
out
xchg
enter
and
push
xchg
in
call
sbb
jge
imul
and
push
addb
or
cmp
cmpsb
fs
jno
jl
in
or
mov
lds
sub
stos
insl
push
mov
test
fistl
jge
les
fnstsw
repnz
or
and
jns
xlat
mov
adc
cmpl
lds
jo
xor
push
mov
xor
sub
pusha
add
test
cmpsb
or
lods
push
push
pop
movsb
iret
xor
addr16
mov
notb
je
aaa
rcl
roll
sbb
xchg
in
jb
and
call
movsl
ja
jl
adc
xor
les
xchg
add
ret
add
rcll
pop
mov
pop
fistps
std
add
inc
mov
out
jnp
sub
mov
jecxz
in
pushf
xor
test
push
ja
das
inc
hlt
dec
rclb
ljmp
adc
sub
xor
ret
stos
xchg
mov
sbb
test
pop
lds
shlb
outsb
or
dec
in
pop
shrl
fwait
icebp
pushl
mov
or
mov
pop
data16
shll
cmpsb
jbe
stc
xchg
cmc
fistpl
out
or
mov
push
sbb
pop
test
jmp
sbbb
xchg
push
pushf
stos
jno
add
xor
notb
mov
test
push
or
nop
orb
jmp
test
pusha
addl
xchg
loopne
pop
and
mov
in
mov
lds
adc
jl
lds
sbb
test
and
es
lea
mov
adc
add
clc
jle
inc
imul
push
jns
inc
xchg
pop
mov
push
stos
addr16
mov
mov
push
adc
sub
imul
push
inc
xchg
add
dec
addr16
es
popf
ret
or
xchg
adc
test
mov
fiadds
inc
push
xchg
xchg
sbb
xor
stos
inc
inc
test
push
dec
lahf
sbb
mov
sbb
in
test
popa
push
ret
fstl
imul
or
popf
cs
loop
popa
std
ret
inc
or
mov
fldenv
arpl
test
xor
add
inc
leave
dec
inc
push
inc
test
ficomps
ret
mov
and
add
popf
add
inc
adc
push
mov
notb
inc
inc
rol
cmp
fdivrl
imul
popf
fbld
jecxz
popf
mov
jl
fisubs
sbb
pop
mov
test
arpl
std
pushf
fwait
sbb
inc
fistpl
test
sahf
dec
inc
push
lds
imul
sbb
mov
push
andb
std
inc
fisubs
inc
les
test
lahf
cld
andl
sbb
flds
add
sbb
pop
test
lds
fisttpll
pop
pushf
xchg
cld
andl
popf
repz
push
dec
inc
sbb
shlb
inc
xchg
or
cld
or
push
add
je
inc
add
push
add
pop
xor
fisttpll
add
popf
jle
roll
mov
or
outsb
inc
mov
jge
add
fdiv
sahf
sub
dec
test
inc
mov
inc
xchg
nop
sub
test
fldl
cmpb
cmpb
inc
inc
mov
xchg
arpl
pop
or
pop
inc
data16
popf
add
push
mov
add
or
clc
add
pop
pop
add
jl
adc
popa
and
lret
push
scas
fs
insl
test
popf
fiadds
add
inc
push
jns
pop
test
xor
sbb
lcall
or
bound
rcr
pushf
rcrb
leave
adc
or
in
and
aad
xchg
test
nop
add
bound
test
xor
jb
push
pop
xor
pop
cmpl
pop
shll
add
push
loope
fnsave
les
je
mov
push
inc
lcall
pop
lret
or
push
jb
push
pop
push
test
xchg
xchg
popf
dec
ficompl
push
ret
mov
inc
add
sbb
add
add
fisubl
subb
ret
adc
lds
inc
ficompl
sub
adcb
inc
pop
inc
rcrl
test
xchg
pop
and
xchg
inc
rol
push
fcmovnbe
sbb
pop
pop
fstpl
dec
inc
and
xchg
insl
fwait
inc
fists
mov
or
inc
pop
add
lcall
fcmovnu
fwait
and
adc
dec
add
pop
add
cmp
jg
ret
jne
bound
adc
arpl
push
les
sahf
fcmovu
push
arpl
inc
add
inc
xchg
xchg
test
ffreep
jl
roll
gs
in
add
add
jmp
xchg
and
outsl
scas
pop
adc
mov
mov
sub
sbb
mov
fidivs
or
into
sbb
loope
inc
pop
sti
outsb
test
out
inc
or
sbb
sub
out
xchg
xchg
jle
cmpsb
or
addb
call
into
stos
mov
stos
fwait
adc
mov
push
cmc
sti
bound
or
mov
imul
sbb
fldl
cltd
inc
loope
fadd
pop
dec
aam
inc
out
or
in
inc
push
scas
das
sub
adc
xor
xchg
cmp
push
cs
push
bnd
or
mov
in
test
cmp
xor
and
test
add
cmpsl
fcompl
or
scas
inc
in
add
sbb
mov
push
mov
stc
pushl
pop
inc
and
sbb
aam
inc
pushf
hlt
cli
jo
shrl
mov
sti
inc
mov
jbe
out
faddl
xlat
xchg
push
out
cwtl
daa
dec
ficompl
pop
andb
cmpsb
popa
push
pop
push
out
pop
cmpsb
and
cmc
fcompl
sahf
sub
sahf
push
gs
ja
ficoml
add
js
cltd
aad
mov
push
test
xchg
arpl
add
sti
xchg
insl
fistpl
test
dec
call
sbb
ror
xlat
arpl
mov
sub
scas
arpl
mov
xchg
adc
jl
leave
cmp
mov
push
and
or
daa
cmc
or
mov
pop
sahf
ss
sub
cmpl
js
inc
dec
sarl
mov
arpl
int
xor
rcl
aam
cmp
lods
fsubr
int
xchg
fsubrs
and
sbb
push
aas
addb
int
imul
dec
inc
pop
or
mov
repz
dec
add
stos
test
fsubl
jns
and
jle
jmp
or
int3
inc
in
flds
mov
add
xchg
pop
ljmp
test
int
pop
pop
fdivrs
pop
std
sbb
negl
fcoml
xor
jmp
sahf
sahf
mov
add
dec
pushf
outsl
push
nop
cmpsl
cmp
inc
add
dec
jle
dec
pushl
cmp
popa
jl
int3
jge
pop
fdivl
mov
xor
aaa
sub
mov
sarb
sbb
in
rcrb
mov
stos
dec
adc
lea
sub
js
jecxz
cwtl
data16
shll
nop
mov
mov
add
pop
add
adc
int3
divb
in
dec
mov
orb
push
movsb
mov
stc
leave
cmpsb
or
mov
lcall
cmp
push
push
je
icebp
stos
pusha
roll
gs
cmp
mull
stos
movsb
xor
jge
mov
lret
enter
scas
cmp
shlb
dec
sbbl
xchg
popa
mov
stos
pop
inc
push
icebp
inc
push
jns
or
arpl
std
lods
xor
leave
in
adc
cld
dec
mov
mov
cmova
addr16
sub
jg
gs
cmpl
mov
push
lret
sahf
ja
pop
les
js
push
addr16
xor
dec
mov
lahf
push
sbb
fwait
imul
fs
addb
test
adc
lea
pop
jp
and
loope
push
test
xchg
inc
cmp
dec
aaa
les
out
gs
pop
lock
popf
cmc
fisubrs
int3
or
mov
adc
xchg
xor
cs
xor
dec
jp
jbe
aaa
imul
add
int
lret
loopne
shll
out
into
rolb
fistpl
sbb
adc
or
or
push
andl
cmpsb
push
mov
inc
rorb
push
mov
cmpsl
sub
mov
lods
inc
xorb
xchg
cmpsb
popf
jl
push
or
in
lahf
push
popf
cmc
rolb
sub
loopne
enter
cmc
xor
enter
out
imulb
fmul
and
cmp
lea
aas
hlt
push
fcompl
sysexit
or
jnp
xor
inc
mov
mov
fadds
movl
mov
ja
testl
enter
sbb
ret
pop
and
pop
movsb
xor
scas
xchg
pop
pop
sub
add
xchg
ret
push
jecxz
icebp
insl
imul
mov
pop
dec
cmp
lahf
and
pop
sbbl
push
or
in
xorb
cmp
add
sbb
in
in
mov
fwait
mov
insb
test
inc
cmpsb
lds
dec
and
xor
add
cmp
cmpsb
mov
mov
jge
mov
cltd
imul
inc
pop
repnz
les
sub
ja
jne
mov
les
in
leave
add
cltd
sbb
inc
mov
xchg
xchg
in
and
ja
mov
pop
adc
fistl
pop
mov
mov
mov
lret
fldt
or
loopne
int
aam
sub
out
mov
or
add
push
bound
addl
andb
push
sub
mov
pop
test
pop
xchg
fcoml
aaa
dec
jg
sub
outsb
sub
faddl
out
test
adc
push
mov
mov
gs
sbb
lea
das
roll
cmpsb
mov
dec
cltd
mov
scas
loopne
push
xchg
repz
inc
out
dec
roll
scas
bound
into
adc
lds
addr16
xor
lret
hlt
popa
inc
out
mov
push
add
fldl
push
push
xchg
fldl
sbb
mov
push
test
sahf
jno
dec
push
jge
es
pusha
test
addl
test
or
lahf
arpl
test
adc
fildl
test
sti
std
std
cmp
inc
xchg
test
enter
popw
jl
subb
cwtd
push
add
les
sbb
push
push
repnz
add
imul
pop
inc
push
jge
jbe
daa
or
push
popf
mov
adc
xchg
lds
in
in
sbb
leave
fildl
mov
popf
adcb
pop
popf
xchg
inc
orl
jl
pop
inc
test
shl
mov
inc
jnp
sbb
add
in
stc
leave
flds
push
inc
xchg
xchg
and
bound
add
sub
cmpl
sahf
bound
in
pop
rcrb
inc
mov
cwtl
jne
sbb
push
arpl
fwait
inc
test
mov
add
enter
add
test
push
test
test
push
adcb
jae
and
inc
inc
dec
and
lahf
pop
pop
jle
xchg
add
imul
dec
push
lahf
push
add
push
andb
pop
pop
ret
add
insl
dec
test
rorb
repz
test
inc
inc
ret
push
lahf
push
or
mov
mov
pop
roll
add
fdivp
xchg
hlt
inc
pop
inc
ret
popf
pop
inc
jl
fistps
fisttpll
lahf
and
shll
inc
std
push
push
sbb
lcall
add
ljmp
push
test
push
cmp
or
fsubrl
jge
push
dec
gs
or
mov
mov
cld
addl
mov
sbb
push
push
add
xchg
sbb
push
mov
jl
in
dec
es
or
push
inc
xchg
std
es
test
sub
test
repz
dec
mov
sbb
mov
in
lcall
popa
sub
je
insb
sbb
dec
cltd
mov
stos
stos
gs
pop
rcll
mov
cmp
mov
out
or
pop
inc
lret
mov
rol
fnstenv
das
int3
sbb
ljmp
test
aaa
fnsave
stos
cmc
insl
mov
jp
out
pop
jns
pop
cs
or
mov
ds
sbb
cltd
mov
fsubrl
cmp
fsub
shlb
dec
push
or
cwtl
mov
iret
fimull
sub
fldenv
mov
lds
fcmovb
jge
sbb
fsubrs
sbb
sti
addr16
add
out
mov
inc
push
pop
outsl
dec
push
shrl
sub
scas
add
rcl
iret
test
mov
sbb
inc
icebp
jo
dec
dec
in
mov
lcall
lret
testb
sahf
sbb
mov
mov
mov
sbb
push
imul
sbb
jge
mov
and
sub
cmp
mov
inc
dec
test
or
mov
cmpsb
push
adc
push
dec
cmpsb
pop
js
cmp
rcrl
or
push
sahf
pop
incl
jb
cmp
push
sbbl
cld
mov
or
push
xor
jmp
xchg
pop
push
stos
lds
dec
test
mov
sahf
xlat
ret
adc
cmpsb
mov
add
in
lods
sahf
jge
xlat
icebp
and
lcall
push
or
jp
inc
lods
mov
lods
or
adc
xchg
or
pop
xchg
fwait
lret
dec
dec
lret
push
lcallw
inc
popa
popa
rolb
push
xor
xor
push
xlat
fsubs
in
push
ds
dec
xchg
loopne
test
mov
or
mov
loopne
inc
add
fisubrs
jb
mov
shl
lds
inc
sbbb
xchg
lret
mov
cmp
push
icebp
das
jb
add
inc
jle
lea
in
or
sub
push
push
fsubr
scas
pop
adc
arpl
mov
gs
add
dec
inc
dec
pop
pushf
add
std
inc
outsl
ret
inc
dec
insl
inc
arpl
or
sar
andb
jl
dec
ret
lret
mov
inc
push
repnz
fs
fcomps
nop
aad
iret
in
push
mov
mov
inc
or
push
insb
sub
cmpsl
push
popf
adc
add
sub
push
and
and
sbb
xor
push
sub
xchg
xor
in
repz
scas
xlat
dec
and
gs
clts
pop
pop
push
push
loope
sbb
jp
andb
in
cwtl
shlb
mov
imul
jne
sub
pusha
nop
cltd
dec
lods
repz
test
or
mov
dec
sub
outsb
jg
dec
out
mov
test
mov
sahf
daa
pop
cld
xor
ficomps
xchg
leave
push
bound
xor
sub
sahf
jecxz
dec
add
sbb
dec
pop
add
call
sub
pusha
out
cs
in
shll
push
add
sbb
pop
push
xchg
mov
std
xor
call
sub
cmp
ss
mov
insl
sbb
adc
mov
lcall
fidivrs
imul
outsb
sbb
add
mov
lret
push
dec
lcall
addr16
push
fcompl
adc
mov
mov
sbb
xchg
xchg
cli
mov
sub
sbb
sbb
mov
add
push
pop
mov
dec
pop
test
sbb
leave
iret
in
jmp
shrl
push
mov
sub
xor
dec
push
lea
cmp
in
jge
int3
xchg
xor
pop
add
inc
scas
pusha
jns
out
add
jg
js
mov
xor
movsb
pop
sbb
jp
or
pop
pop
add
push
dec
mov
pop
jmp
dec
pop
dec
into
cmp
dec
sbb
xor
fs
incb
outsb
push
dec
lock
addb
mov
pop
dec
rorb
add
jge
fs
insb
inc
rol
inc
sbb
jns
and
or
sbb
lcall
inc
das
mov
dec
movsb
arpl
addb
lea
xor
pusha
lods
cmp
jl
movsb
popf
insb
mov
pop
cmc
mov
fwait
cld
push
fucomip
jl
mov
jbe
fisubs
fidivl
or
jmp
mov
dec
imul
xchg
mov
lea
mov
in
adc
adc
fmull
pop
loopne
pop
dec
dec
pushf
mov
adc
jl
pop
les
lcall
push
xchg
jbe
cmp
push
rorl
jmp
jne
gs
insb
add
xchg
outsl
enter
ret
cmpl
movsl
dec
or
sbb
xchg
mov
call
lock
roll
pop
xchg
push
inc
add
cmp
jp
adc
xlat
fdivl
cs
cmpsb
cmp
repz
mov
inc
mov
xchg
mov
les
les
adc
xchg
or
push
or
xchg
out
xchg
mov
dec
xor
outsb
scas
fs
sbb
pushf
adc
xor
int3
and
push
icebp
hlt
xchg
lds
jmp
loopne
jns
das
addl
stos
test
and
xchg
cld
inc
test
lret
fwait
jnp
mov
cmp
jne
out
or
sub
mov
test
or
push
insl
cmp
jmp
mov
or
aad
das
push
loop
jp
xor
sahf
add
sbb
movsb
push
lds
fimull
scas
out
sub
outsb
lret
xchg
mov
in
add
enter
scas
fsubs
scas
in
insl
mov
sub
add
xor
aad
in
add
aaa
imul
andb
out
add
rcrb
sbb
popa
push
das
dec
adc
in
xchg
sub
dec
xor
add
mov
scas
mov
daa
jp
or
jne
insl
stos
jmp
dec
adc
jg
sbb
dec
cmp
cs
into
in
dec
cltd
push
add
mov
mov
test
xor
adc
int
test
pop
sbb
pushf
xor
andl
jle
popf
aas
and
cmp
jb
mov
xchg
sbb
pop
shll
lcall
sbb
jl
sahf
out
pop
mov
cmp
lds
push
or
push
imul
push
adc
repnz
fcompl
rcll
loope
int3
pop
test
faddl
sub
out
push
push
xchg
pop
sbb
dec
jl
out
inc
mov
lock
adc
jle
add
leave
jge
dec
mov
pusha
adc
push
mov
xchg
data16
or
or
inc
and
pop
xchg
pop
sbb
mov
push
jnp
cld
cltd
pop
cmp
arpl
fisubs
xchg
jmp
mov
add
dec
imul
jno
sahf
adc
jmp
sub
fmull
dec
adc
imul
call
insl
mov
gs
orb
jne
bound
jle
sub
or
jle
notl
stos
gs
in
jl
addr16
outsl
mov
inc
into
insl
ds
aas
stc
sub
cmpsl
inc
cmp
cmpsl
push
icebp
and
jnp
sub
popf
es
addb
dec
ss
dec
test
mov
pop
pop
sbbb
jae
and
ficompl
pop
test
pop
xor
test
call
dec
add
xor
xchg
xor
mov
mov
mov
imul
test
mov
insl
movsb
push
and
inc
mov
clc
jle
sbb
push
imul
pusha
and
sbb
into
sti
rcrl
repnz
lcall
jbe
cmp
daa
or
sbb
pop
dec
jl
mov
inc
lcall
push
lret
pop
xor
xor
add
repz
enter
jl
popw
push
adc
sbb
jge
cwtl
shr
out
sbb
pusha
loop
add
sub
xchg
push
outsl
mov
into
ffreep
popf
adc
sbb
das
push
lods
mov
cmpsl
test
xchg
jno
xchg
xchg
lcall
std
popf
pop
xchg
test
inc
aam
push
jecxz
inc
xor
xchg
sbb
adc
clc
or
sub
push
cs
add
imul
push
test
add
inc
or
inc
mov
ret
sbb
fcompl
popf
sahf
mov
faddl
xchg
sub
mov
mov
movsb
inc
mov
test
sub
incl
loopne
gs
arpl
popw
or
in
xchg
sahf
or
inc
fwait
inc
pop
push
dec
xchg
pop
add
inc
pop
mov
add
lahf
add
add
test
shll
in
frstor
sbb
or
xchg
fcompl
test
inc
andb
lret
inc
sbb
jge
or
xchg
popf
adc
inc
es
fcmovne
popf
inc
pop
test
movsb
sahf
lea
sbb
add
sahf
je
loop
sbb
test
test
jle
in
test
and
sbb
push
lcall
addl
pushf
jl
arpl
add
push
popf
or
pushf
pop
ds
ja
pop
adc
pop
push
inc
and
sbbl
add
fstp
dec
or
inc
inc
pop
adcb
inc
cld
popf
les
xchg
pop
inc
xchg
mov
add
test
inc
pop
or
ret
xor
in
dec
test
mov
test
faddp
inc
repz
test
dec
sti
inc
jecxz
movb
fwait
sahf
add
rolb
add
add
sbb
inc
xchg
dec
or
sahf
pop
fmull
add
sbb
add
fstpl
jl
sbbl
sub
xchg
mov
push
hlt
jbe
add
or
mov
sti
mov
sahf
push
and
push
xchg
jp
push
inc
or
orb
pusha
jge
or
rcr
js
xchg
add
sbb
or
sbbl
lea
cmp
pop
leave
or
xor
insl
dec
inc
dec
add
cmc
mov
into
pop
sub
push
sub
cmpsl
out
xchg
sahf
movb
mov
repz
loope
sub
push
scas
jbe
or
fcmove
cmp
das
fs
inc
add
add
mov
inc
inc
ja
popa
jns
and
jo
push
and
popa
xor
andb
or
popa
nop
mov
insl
mov
sti
int
add
outsb
mov
lahf
addw
add
cmp
test
testb
les
cmpb
push
fidivrs
iret
mov
call
mov
jl
cmpsb
mov
mov
loope
dec
cmpsl
ljmp
and
in
ljmp
or
xchg
xor
cmpl
jne
imul
pop
pop
push
test
push
jno
push
pop
cs
cmpsl
xor
dec
jae
ret
mov
add
xchg
pop
repnz
jnp
adc
mov
jg
fsubl
testb
lock
inc
fstp
xchg
cmp
js
andl
cmp
shrl
push
mov
bound
inc
xchg
sbb
hlt
sti
leave
cmp
sbb
sahf
jns
stos
and
adc
push
sbb
or
and
int3
push
jecxz
adc
and
fcmovnu
or
jo
add
jns
les
push
inc
adc
sbb
jl
push
or
jl
mov
subb
mov
sbb
xchg
andb
cwtl
shl
adc
in
push
sbb
add
inc
inc
lea
aam
pop
test
out
cmpsb
loopne
je
fdivl
mov
xchg
ja
add
mov
push
bound
jmp
sti
cmp
inc
cmp
jo
incb
mov
push
loope
mov
mov
in
pop
jge
pop
and
dec
inc
sbb
pop
inc
push
add
cld
sub
xchg
inc
push
cmp
push
cmp
sbb
xor
ljmp
nop
jecxz
movsl
leave
sbb
popf
mov
and
pushf
scas
mov
test
add
loop
cmc
mov
imul
pop
sbb
or
push
arpl
in
jl
orb
fidivrl
xor
or
sahf
dec
gs
inc
xchg
pop
dec
jne
mov
fnstcw
mov
ret
int3
or
add
in
pop
push
out
and
push
cmp
iret
sub
sbb
mulb
xchg
int3
notl
push
mov
xchg
mov
add
nop
or
adc
insl
xor
mov
push
adc
dec
in
mov
xchg
sub
xchg
xrelease
jg
jo
dec
or
or
outsb
xchg
sbb
int3
pop
inc
test
dec
aas
ret
icebp
sbb
pop
jns
mov
xchg
sub
add
mov
ror
sub
jne
imul
mov
cld
test
lret
dec
sub
bnd
sbb
xchg
sar
and
inc
add
or
dec
push
cwtl
jge
or
push
mov
loopne
mov
sbb
lock
test
xor
imul
fldenv
and
nop
andl
cmp
push
sbb
push
cmp
add
dec
test
xor
pushf
cmpsl
xchg
mov
and
or
add
repnz
dec
out
fiadds
lret
sub
pusha
push
shl
test
pop
jbe
lcall
mov
cmp
jae
pushf
rcrl
fsubrl
insl
adc
loopne
xor
dec
dec
out
test
jl
out
xchg
lods
call
mov
adc
mov
fldenv
icebp
imul
pushf
jl
cmpsb
pushf
sub
rcll
dec
mov
sbb
sbb
xchg
fldl
inc
mov
ret
xlat
xchg
add
sub
sahf
mov
jmp
push
movsb
mov
insl
inc
rcll
xor
pop
push
jb
jl
adc
lcall
and
cmpb
adc
loopne
pushf
loopne
mov
sbb
sbb
imul
mov
xchg
or
lcall
adc
es
sbb
inc
popa
cmpsb
mov
xor
xchg
inc
mov
fsubl
lea
loop
jg
loop
dec
in
mov
or
sbb
popf
cwtl
shll
test
pop
aas
pop
inc
loope
cmp
push
inc
loopne
or
test
sub
test
int3
or
push
test
into
or
fcoms
cli
push
das
idivb
pop
sub
inc
aad
lds
loopne
clc
push
ja
jmp
testb
ret
or
lret
jg
jge
loop
pusha
mov
or
push
js
push
mov
fnstcw
out
lcall
xor
push
fisttpl
ret
ret
jns
cmpsl
cltd
in
xor
lcall
addr16
cmp
push
loopne
and
add
push
nop
xor
out
push
pusha
out
mov
pop
mov
adc
aad
xchg
lds
add
or
pusha
es
punpckldq
mov
and
xchg
fcmove
ret
lahf
jb
movsl
cwtl
sahf
sbb
pop
fs
sub
test
push
push
sbb
mov
std
push
push
pop
imul
xchg
jmp
ljmp
out
push
cld
push
icebp
inc
dec
fs
mov
mov
pop
add
in
cs
ljmp
leave
pop
mov
pusha
cmpsl
cmc
dec
or
mov
ljmp
scas
and
call
jl
jno
jle
sar
sub
push
test
ja
in
pop
xor
stos
test
hlt
jne
xor
dec
push
aad
bound
xchg
insl
jne
adc
test
adc
mov
mov
xchg
mov
cwtl
popa
scas
jl
adc
das
add
test
sbb
repz
and
repz
jl
and
lret
ret
sbb
loopne
dec
in
ret
dec
aad
in
mov
lcall
inc
jne
addr16
mov
xor
je
iret
mov
jge
dec
cmp
inc
scas
sarl
or
sub
cmp
popa
push
push
sbbb
mov
sti
gs
pusha
jno
mov
jnp
push
push
imul
mov
pop
dec
frstor
subb
aas
popf
push
or
pop
sbb
mov
fcmovbe
pop
shll
leave
movsb
imul
push
mov
jae
xchg
push
jmp
fistpll
les
mov
push
jg
and
in
sbb
mov
fwait
lcall
loope
and
cwtl
mov
xchg
inc
addl
in
sbb
in
add
or
scas
or
add
fsts
pop
or
int
pop
push
xorb
inc
popl
add
pop
stos
and
add
lds
fcoms
sbb
ljmp
push
scas
jo
int
adc
js
cmpsb
push
sub
xlat
xchg
mov
subl
jecxz
sub
pop
adc
xchg
int
push
inc
pop
out
sahf
daa
pop
fistl
mov
test
xor
dec
imul
mov
jno
push
lret
or
xchg
cmp
shl
mov
sub
mov
cmp
int
xchg
push
push
push
mov
imul
dec
sar
in
inc
push
fwait
mov
es
fldcw
aam
jb
sahf
cld
mov
add
xchg
jle
dec
sbb
adc
dec
adcb
out
xor
pop
shrl
cwtl
pop
pop
push
imul
loope
sbb
pop
sbb
int3
add
fwait
push
adc
shll
jno
inc
jb
xchg
js
loop
fwait
xor
inc
fcoml
outsl
insb
adc
jl
pop
pop
fcompl
mov
test
pop
push
out
das
xchg
mov
add
xchg
mov
pop
cmc
scas
and
pop
test
pop
mov
cs
pusha
fiaddl
movsl
push
add
stc
cmp
pop
push
and
add
sbb
mov
jmp
xlat
or
es
testb
shlb
pop
jge
and
inc
out
cmc
jle
negl
pop
in
jle
hlt
je
sub
adcb
push
lcall
sbb
negb
or
int3
jp
mov
jle
test
cmpsb
and
loop
pushf
cld
add
test
es
mov
and
pop
jb
cmp
mov
mov
xlat
iret
sub
jp
push
jo
mov
sahf
test
mov
mov
or
mov
aad
dec
dec
sbb
mov
fldt
jno
stos
xor
mov
or
scas
mov
and
lcall
aam
dec
or
pop
xor
lahf
jne
cmc
sti
xor
test
sahf
jp
bound
push
cmpsb
out
adc
xchg
mov
sahf
addr16
decl
nop
mov
out
or
ret
mov
pop
pushf
iret
outsl
icebp
les
jae
pushf
inc
mov
dec
sbbl
arpl
fsubr
adc
add
push
mov
push
adcl
sahf
cmpsl
adc
into
mov
sub
out
lret
data16
enter
lea
fldt
dec
test
and
xor
jae
dec
mov
jne
fidivl
sbb
xchg
fwait
push
repnz
sahf
jl
fldcw
insl
and
push
xchg
sub
pop
cmc
ret
imul
ljmp
das
push
popf
or
movsl
pop
int3
add
lea
les
xchg
and
pop
pop
dec
in
adc
mov
pusha
push
mov
mov
sub
mov
test
stc
out
movsb
xor
sbb
pushfw
cmpsl
sbb
xchg
imul
popf
into
mov
push
jns
fwait
xor
addl
pusha
es
push
mov
mov
xchg
push
xor
pushf
jo
adc
mov
loope
or
mov
or
jo
and
aas
dec
push
imul
into
leave
lock
daa
out
jp
and
stos
jecxz
std
insl
push
ja
data16
orb
lods
inc
add
xchg
sahf
aaa
lret
add
cmp
cmc
fdivs
xor
sbb
mov
mov
push
add
ljmp
out
and
sbb
jp
into
mov
insl
gs
je
jnp
data16
cmp
mov
inc
cmp
cmpb
xchg
fisttpll
push
mov
fnstsw
sub
jmp
or
sbb
dec
adc
dec
repz
xchg
add
jge
push
in
mov
pop
xchg
or
dec
adc
fcoml
sub
sbb
cli
xchg
sbb
daa
je
mov
and
mov
test
leave
add
xlat
repnz
or
xor
js
fwait
cwtl
jp
xor
jmp
adc
jbe
mov
xor
pop
xorl
mov
cmp
push
ret
ret
popf
pop
sub
dec
cmp
cmc
push
call
dec
sub
push
inc
lods
sarb
pop
add
xchg
mull
in
pop
pop
xor
arpl
push
dec
cltd
cmpsb
test
subb
adcb
fistpl
jbe
inc
jo
not
mov
dec
inc
out
push
aam
ret
or
mov
push
inc
adc
pop
mov
addb
jp
mov
pop
inc
orl
xor
inc
cmpl
xchg
notl
cli
cs
sbb
decl
jns
inc
pop
push
insb
xchg
roll
divb
lods
rcl
andb
xchg
mov
cwtl
fdivl
or
gs
cmp
xchg
jge
pop
cmp
gs
jne
icebp
xchg
fldenv
test
add
jecxz
pop
xchg
xor
fwait
pop
nop
sub
mov
push
out
and
pushf
stc
sbb
jae
aas
and
aam
add
scas
pop
jmp
mov
fldl
and
lcall
or
jne
adc
push
jmp
notl
sbb
lock
push
mov
push
lds
xor
test
jg
lock
sbb
pop
mov
faddl
cmc
pop
inc
js
pushf
push
jns
xor
lcall
sbbb
or
roll
mov
sub
mov
or
sahf
inc
in
enter
mov
push
or
shl
test
sarl
xchg
iret
ss
data16
mov
cli
push
data16
mov
jl
push
push
fdivp
scas
sbb
rolb
ret
sbb
cmpl
add
es
subl
mov
lock
stos
lods
inc
add
adc
xchg
push
adc
gs
scas
es
jbe
mov
push
jmp
jmp
inc
sub
and
push
lods
mov
mov
mov
in
icebp
stos
jle
loope
divps
repz
dec
jo
sbb
sbb
fsin
fs
inc
mov
pop
into
dec
mov
dec
negb
dec
lcall
xor
inc
dec
sbb
rorl
ss
add
popa
fadds
xchg
sub
push
mov
fwait
int
lcall
jbe
mov
and
cld
jg
or
dec
mov
add
mov
lock
lods
popa
aad
hlt
cs
push
fldl
mov
add
lods
jge
push
or
ret
push
into
xor
test
sub
push
test
inc
imul
notb
push
in
aad
or
jg
xor
jle
loope
dec
loope
mov
and
pusha
mov
lods
sti
inc
xchg
int
and
xchg
fmul
fcoms
xlat
data16
cmp
and
inc
sub
jle
outsl
retw
std
mov
inc
popf
xchg
pshufw
out
add
adc
pop
outsl
rol
scas
sahf
add
xchg
mov
pop
dec
and
sbb
ss
inc
orl
loope
mov
sbb
mov
fisttpl
sub
insb
ljmp
test
repz
mov
and
jns
sti
push
dec
cmpsb
push
sbb
mov
inc
inc
sub
pop
mov
hlt
aad
movd
arpl
into
test
shrl
jo
leave
lret
adc
cmpsl
test
jbe
dec
pop
and
and
or
ss
loop
mov
nop
imulb
cs
mov
loopne
or
jle
add
int3
pop
dec
pop
cmp
sbb
or
sbbl
inc
fdivl
insl
inc
mov
push
xor
cltd
sub
icebp
rcrb
sbb
sbb
dec
into
add
pop
push
test
adcb
xchg
int
sbb
cltd
loope
les
add
loopne
and
jle
mov
jle
push
dec
mov
lret
xchg
retw
inc
jp
push
enter
cli
pushf
andl
add
adc
icebp
std
jns
lcall
test
inc
imul
jl
loop
or
jbe
fdivrl
pop
mov
mov
ret
adc
xchg
push
jmp
xchg
mov
mov
or
push
inc
cmp
fsts
cld
sub
cwtl
cs
dec
jo
xchg
adc
mov
cmpsb
test
mov
mov
jp
scas
movsl
ret
test
cmpsb
and
xor
mov
pop
and
addb
test
loop
mov
test
xchg
sahf
inc
mov
hlt
mov
sub
jl
pop
pop
js
mov
or
lahf
or
adcb
repz
aam
scas
mov
adc
dec
hlt
push
xlat
cmp
lret
xor
data16
pop
fs
pop
pushf
or
sbb
test
loopne
stos
inc
fs
xor
or
js
or
dec
mov
ret
lcall
inc
adc
mov
fistl
sbb
into
cld
loope
push
inc
push
popl
mov
dec
sti
jnp
push
or
xor
repz
rolb
inc
fcompl
mov
pop
aas
lret
addb
out
loop
push
add
dec
and
orl
mov
cltd
adc
push
inc
test
leave
nop
hlt
jno
jne,pt
lret
and
mov
in
dec
adc
cmp
pop
jo
dec
mov
xor
pop
xor
or
xorb
inc
aaa
mov
inc
test
adc
cmpb
fwait
in
add
test
test
inc
push
outsb
mov
mov
add
test
repz
and
lods
je
jb
ds
xchg
mov
push
outsb
xor
test
or
test
orb
mov
mov
mov
imul
mov
addl
add
push
mov
sub
pop
int
add
popf
fsubs
sbbb
es
push
push
test
stos
test
add
cmp
test
inc
xchg
sub
lret
fistpl
jle
gs
shlw
arpl
sbb
orb
xor
addl
pop
adc
out
inc
adcb
fcompl
and
add
fldl
or
or
mov
popf
sbbl
in
add
push
out
inc
jae
and
ret
testl
sbb
fldl
insl
inc
inc
orl
loopne
sbb
adc
add
pushf
jae
bound
inc
add
or
add
and
xchg
push
push
and
push
fstpl
add
pop
popf
add
sbb
pop
je
dec
inc
xchg
gs
push
pop
gs
add
adc
cld
lcall
std
sbb
add
pop
adc
lds
test
add
and
xchg
fisubl
xchg
and
pop
rcrb
jnp
push
rcrl
or
dec
test
mov
roll
popf
inc
cld
or
push
inc
dec
repz
add
sbb
sbb
push
pop
sbb
les
pop
ja
bound
and
xchg
and
les
dec
jl
insb
dec
gs
lods
pop
and
or
sbb
cmpsl
cmp
stos
and
add
sbb
jmp
push
repnz
adcb
sbbb
pop
lcall
mov
mov
push
dec
les
sahf
or
sahf
add
pop
lods
sahf
adc
pop
pop
dec
pop
in
lock
xor
pop
cmp
pop
outsl
sbb
sbb
call
add
mov
or
or
push
out
data16
xchg
add
idiv
push
clc
rolb
adc
out
pop
movsl
mov
test
mov
push
push
fwait
cmp
lahf
adc
inc
add
iret
adc
int
loop
nop
lds
push
xlat
popa
push
mov
cmp
and
push
jno
push
rcr
mov
sub
sub
sbb
addr16
cmp
push
int
sbb
test
cmpb
fcom
data16
hlt
dec
push
stc
cmc
mov
insl
fistl
jecxz
flds
int
sub
pusha
jge
stos
jl
lock
inc
push
sbb
push
call
jle
loope
aas
adc
pop
xchg
sbb
repnz
sahf
lods
jns
sbb
or
imul
mov
sub
xchg
nop
jo
daa
mov
pop
insb
cmp
push
inc
stos
add
test
bound
mov
stos
cmpsb
ret
loopne
mov
mov
enter
sti
cmc
pusha
mov
mov
xchg
xor
leave
test
inc
fs
or
insl
mov
lret
add
shlb
nop
roll
pop
sbb
dec
aad
xchg
push
cmp
cli
arpl
arpl
and
add
sub
xor
jecxz
pop
sbb
into
adc
in
jnp
pop
add
sub
imul
sbb
add
or
into
stos
fs
lds
lahf
mov
push
divl
adcl
add
pop
mov
fsts
insl
sti
pop
inc
cmp
lods
stos
test
inc
or
cmp
iret
push
adc
jb
sbb
add
xorb
cld
push
stos
andb
inc
loopne
scas
outsb
sti
mov
adc
pop
xchg
sub
mov
jmp
iret
std
shl
adc
cltd
lcall
mov
daa
inc
sbb
push
hlt
lcall
addr16
mov
xchg
sahf
mov
scas
dec
leave
sub
gs
mov
push
sbb
mov
push
pop
aam
pop
mov
leave
mov
fs
adc
or
popf
or
jnp
dec
sbb
or
cli
daa
cmc
sarb
icebp
inc
pop
in
push
mov
lds
mov
push
xchg
outsb
sub
jecxz
xor
cmp
pop
pop
cli
cmp
test
inc
scas
sub
ret
dec
and
ret
movsb
popa
xchg
push
pop
add
popa
or
orb
xor
out
fs
jl
sbb
mov
xchg
movsb
mov
mov
pop
xor
push
or
add
xchg
in
cmp
popf
jb
jge
dec
add
jmp
int3
rol
mov
pop
out
jne
cmp
cltd
arpl
cltd
push
jns
jle
and
sbb
lock
cmp
mov
mov
pop
ljmp
dec
gs
jge
in
gs
hlt
shl
out
ret
sub
out
jge
cmp
or
andb
cwtl
sub
and
mov
or
push
lds
es
lret
cli
scas
dec
dec
xchg
and
lret
subb
ds
sub
jl
cmp
cwtl
leave
xorb
xor
test
dec
lds
sub
push
pusha
out
adc
pop
adc
sbb
dec
mov
fimull
stc
repnz
aaa
mov
push
ja
test
dec
or
mov
jg
icebp
loopne
pop
js
xchg
mov
cld
jb,pt
pop
aaa
mov
add
mov
pusha
dec
xchg
sub
xchg
mov
adc
faddl
xchg
mov
cmpsb
pop
mov
lods
add
in
test
pushf
mov
pusha
ret
pop
jle
add
dec
fnstsw
push
inc
xchg
xchg
ret
cltd
mov
loope
add
add
jno
mov
mov
repz
pop
and
jne
xor
jecxz
mov
sbb
mov
xchg
xor
out
cmpsl
xor
mov
addr16
lds
cmc
fmull
cwtl
cmp
arpl
rorb
push
mov
test
or
xor
pop
push
pop
int3
orl
nop
jne
mov
jns
mov
add
push
sbb
iret
shll
and
add
cmp
push
inc
push
jno
icebp
leave
pusha
orb
icebp
mull
pop
rcrb
cmp
mov
cli
xor
insl
stos
loop
into
or
js
add
fsts
add
ret
mov
lret
leave
jge
test
stc
pop
fbld
xor
adc
jp
enter
out
fidivrl
xchg
or
mov
push
add
xor
xchg
pop
xchg
mov
outsb
push
leave
mov
jns
jno
jne
mov
fldt
in
xor
xchg
enter
leave
daa
mov
out
push
cmp
mov
cmc
or
sub
push
mulb
jl
xchg
test
fwait
mov
pop
scas
test
cs
std
pop
adc
push
xorl
outsl
addl
or
loope
xchg
mov
mov
in
pop
jno
popa
add
mov
push
dec
neg
add
sbb
jno
fidivl
add
mov
sub
or
and
leave
sti
add
sbb
push
or
dec
xchg
aad
push
sbb
lods
rorl
data16
outsl
sti
outsb
mov
pushf
in
push
aam
dec
out
push
vmovaps
cli
sub
int3
and
and
xor
in
test
xor
xchg
dec
sub
cltd
leave
pop
mov
sbb
scas
insb
in
xor
mov
lock
mov
mov
arpl
mov
cmp
test
leave
and
push
ficoml
sti
inc
jno
jnp
outsb
orl
push
dec
leave
lahf
pop
dec
shrl
cmpps
in
popfw
inc
and
mov
xchg
push
jne
push
pop
inc
scas
lds
ja
gs
lret
or
add
mov
sbb
adc
xor
ss
xchg
mov
mov
out
cmc
lcall
xchg
jecxz
or
adc
xor
cltd
push
ljmp
mov
shrl
mov
sahf
xchg
sub
push
imull
ffree
mov
dec
push
and
notb
mov
jge
into
lcall
jl
out
scas
test
xchg
clc
pop
push
dec
pop
cmp
pop
mull
lret
adc
mov
cmp
fists
cmp
fs
lds
aam
mov
cli
gs
movsl
xchg
testb
icebp
mov
push
mov
test
clc
fidivl
mov
scas
es
adc
test
push
jo
or
xchg
es
lahf
cld
cmp
inc
add
je
mov
loop
inc
shl
push
add
and
mov
inc
add
xchg
or
not
sub
jne
bound
sbb
mov
mov
or
sub
mov
into
cmp
adc
out
test
pop
js
out
pop
rcrb
push
jmp
insb
into
jne
inc
jg
or
mov
mov
ficompl
mov
push
xor
push
mov
out
push
jne
mov
inc
xor
lret
sbb
subl
out
mov
pop
movsb
jle
sbb
arpl
mov
testl
mov
in
aad
shll
cmp
xor
push
sahf
pop
jae
inc
jmp
sbb
gs
xchg
imul
stc
xchg
shrl
push
lods
lods
and
sub
sbb
ror
adc
lret
insl
lret
adc
scas
push
push
sbb
shl
xor
popf
inc
stos
orb
mov
daa
jp
sub
adc
push
inc
xchg
and
inc
in
add
lea
push
inc
xchg
jno
testl
push
dec
inc
mov
sahf
add
jg
or
cmpsb
cmc
mov
xchg
inc
test
iret
add
push
and
dec
lds
js
test
fdivs
pop
mov
rolb
mov
orb
mov
push
inc
xor
sbb
xchg
ds
jp
push
cmp
jle
mov
and
add
pop
cwtl
dec
pop
cmc
inc
div
pop
aaa
fwait
sub
daa
shrl
scas
or
lret
sub
jns
add
jp
in
icebp
adcl
cs
or
add
sar
sub
sub
gs
lcall
lret
cmpsb
add
xchg
dec
loop
push
xchg
dec
es
cmpsb
jp
pushf
lods
xor
add
pop
flds
cmp
in
loopne
out
sbb
test
cmpsl
sub
mov
and
cmp
pushf
sbb
movsb
in
mov
mov
cmp
sahf
cmpsl
mov
jp
jns
cltd
jne
out
cltd
rorb
or
jb
mov
dec
test
sub
fwait
rcl
clc
fbld
iret
inc
and
pop
cmpsl
mov
and
clc
push
out
add
gs
inc
and
aas
rclb
leave
or
mov
pop
insb
ljmp
push
mov
add
sbb
add
cmp
cmc
xor
sbb
repz
inc
mov
jmp
add
jb
pushf
rcrb
test
popa
sub
rcr
adc
push
push
adc
cmpsb
or
shll
movsb
mov
cmovge
imul
xor
out
sarl
and
call
test
inc
jecxz
cld
push
add
mov
lret
xor
pushf
lcall
push
xchg
sbb
aad
push
sub
mov
push
xchg
dec
jmp
int3
fnclex
mov
fsubrl
inc
cmpsl
imul
xorl
aam
cld
aaa
sar
out
mov
xchg
fdiv
iret
and
xchg
out
cwtl
outsb
push
test
xor
cs
jge
sahf
jb
sbb
push
or
fnstenv
cltd
inc
add
repz
inc
lret
mov
gs
out
mov
frstor
xor
add
mov
stc
xchg
xchg
pop
stos
test
push
and
cwtl
test
enter
enter
cwtl
adc
sahf
out
and
mov
mov
cmc
mov
xchg
int
lcall
and
pop
mov
aaa
addb
ss
aas
cmpl
and
cmc
cmpsb
push
cmp
pop
out
aaa
and
or
sbb
out
inc
mov
shll
dec
xor
int
data16
arpl
adc
hlt
mov
testl
pop
dec
sahf
pop
or
push
adc
jp,pn
pop
push
cmp
imul
bound
ret
dec
cld
jl
fiadds
out
push
and
or
jp
push
lret
inc
inc
pop
pop
mov
push
and
leave
xchg
xchg
aas
shr
and
adc
loope
or
mov
cmp
mov
sbb
xchg
addl
lahf
decb
push
xor
inc
inc
pop
xor
jo
fnsave
sub
jle
cwtl
repnz
fidivrl
pop
in
rorl
aad
xor
cwtl
fs
loopne
nop
outsl
sub
lea
jns
push
ja
mov
mov
push
lods
daa
cmc
pop
ds
jnp
bound
out
sbb
add
push
mov
cmp
es
add
push
push
sub
lret
inc
aaa
xchg
dec
jb
test
cld
mov
jnp
loope
iret
lret
mov
mov
pushl
aaa
jge
imul
stos
subb
sbb
adc
and
loope
jo
xor
mov
lahf
cli
negl
sub
test
adc
dec
mov
jnp
mov
icebp
inc
rolb
lcall
fs
aad
mov
scas
or
jle
lds
inc
mov
xor
pop
lret
sarb
push
push
xchg
xchg
add
ss
insl
pop
push
fcoml
rorl
xlat
in
add
or
adc
mov
push
adcb
push
inc
mov
pop
xchg
fimull
popf
mov
dec
lcall
mov
shl
fwait
add
addr16
push
rcll
insb
test
push
ret
popf
mov
sub
cmp
daa
lods
add
and
adc
data16
jmp
inc
jne
imul
mov
inc
add
add
cmpsl
jne
mov
sbb
add
popf
push
xchg
pop
sti
jnp
push
xlat
xchg
sub
or
mov
stos
push
andl
gs
mov
sbb
pop
add
std
scas
and
jne
pop
cmpsb
or
mov
push
adc
frstor
scas
popf
or
and
add
dec
jge
jp
jno
and
dec
mov
hlt
lods
sbb
jnp
ret
repnz
jge
mov
jns
movsl
or
jecxz
nop
push
mov
inc
aas
test
rorb
fwait
mov
aad
cmp
push
into
mov
int
into
add
jle
rolb
cmp
repnz
pusha
sbb
inc
insb
data16
hlt
in
jo
in
inc
cmp
negl
jne
jmp
jne
add
sahf
dec
imul
or
dec
pop
add
xchg
xchg
int
js
cmc
push
data16
push
mov
cmpsb
je
jge
inc
xchg
rorb
push
ror
push
xor
ret
xor
pop
mov
xor
mov
mov
lret
add
mov
pop
and
mov
ror
inc
test
adc
xchg
ret
cmp
idiv
dec
addr16
mov
xchg
pop
mov
jno
push
in
fimull
int3
mov
and
push
clc
push
push
cmpsb
sbb
xchg
hlt
mov
mov
shll
leave
jg
mov
xchg
pop
push
pop
or
push
sub
gs
pusha
movsl
adc
add
push
shlb
arpl
aam
das
ds
mov
lcall
dec
std
pop
mov
pop
test
push
addr16
xlat
pop
les
or
pusha
cmpsb
hlt
rolb
jp
cwtl
shl
xor
scas
cli
mov
sarl
mov
add
inc
testl
jp
int3
jl
les
sub
daa
stos
arpl
hlt
mov
mov
loop
mov
sbb
inc
jnp
xchg
push
push
push
push
xchg
jmp
stos
inc
das
cmpsl
leave
jbe
mov
sahf
ret
rcrb
daa
loope
fs
movsl
addr16
pop
inc
mull
mov
repnz
pop
sbb
mov
push
adc
mov
insb
mov
sub
sbb
cmp
rol
fsubl
xchg
pop
cli
cmc
gs
mov
inc
dec
push
sbb
adc
push
mov
and
insl
jno
ret
mov
push
shrl
loope
mov
and
test
loope
or
in
pop
mov
dec
xor
pushf
iret
inc
stos
lds
repz
xchg
xchg
xor
ljmp
aad
int3
mov
addr16
rorl
pushaw
inc
add
inc
sarl
xorl
push
stc
les
jl
out
lods
dec
shr
sbb
xor
sub
imul
daa
cmp
notl
outsl
xchg
mov
sbb
mov
jp
push
rolb
dec
mov
add
sbb
inc
mov
xchg
push
sti
popf
fnstsw
divl
fwait
enter
roll
stos
push
out
mov
addl
pop
adcl
xchg
testb
sbb
mov
bound
loopne
push
lock
gs
mov
popf
push
je
bound
adcl
fwait
mov
sbbb
and
push
add
push
mov
jmp
push
iret
fstpt
les
test
sbb
into
test
or
nop
mov
add
orb
push
mov
sbb
rcll
pop
jmp
inc
sbb
popl
mov
or
and
dec
cltd
mov
add
popa
adc
push
std
std
out
das
bound
int3
adc
shlb
incl
cmpsl
xchg
add
ds
add
enter
in
addr16
in
mov
lea
mov
xchg
hlt
adc
ret
mov
cltd
adc
adc
and
mov
jmp
cmp
inc
test
loope
testl
xchg
and
cmp
lret
xchg
inc
in
jle
adc
inc
int
cmc
inc
and
jg
gs
sbb
pop
mov
add
rclb
add
push
push
dec
hlt
pushf
sbb
mov
add
mov
and
shll
mov
mov
adc
test
mov
pop
or
or
or
xor
mov
aad
cmp
or
adc
pop
xchg
aas
fisttpl
push
jno
scas
cmc
inc
push
roll
add
test
lcall
hlt
popa
pop
pop
mov
movsl
push
imul
lcall
stc
cld
ss
pop
mov
cmp
sbb
push
sbb
mov
or
add
xchg
out
gs
movsl
sbb
push
pushf
cli
popw
es
test
in
add
mov
test
out
cmpsl
pushf
test
test
mov
int
pop
dec
jecxz
stos
jnp
add
in
or
push
popa
push
aaa
mov
orl
stos
or
mov
mov
inc
fdivl
inc
lret
jns
and
xor
cltd
xchg
jno
filds
fstpt
mov
rclb
cvtps2pi
outsl
xor
insb
jns
push
imul
dec
inc
dec
bound
push
sahf
fistpl
mov
out
pop
repz
stos
jae
ss
add
and
sbb
rcll
cmp
jg
loop
daa
cmp
notb
cs
lock
adc
mov
sbb
dec
pop
push
push
push
push
or
mov
add
mov
lcall
andb
sahf
jae
cwtl
call
cmc
es
push
sub
jne
shlb
ret
repnz
into
jg
dec
addr16
orl
xchg
movl
shl
xchg
pop
mov
pop
rcrl
push
or
sbb
mov
cmp
mov
xor
outsb
or
xlat
pop
repz
int
xchg
mov
jae
ret
fnsave
pop
sbb
push
imul
mov
jle
push
cmp
shrb
sbb
and
mov
inc
mov
daa
sahf
inc
and
push
add
mov
lahf
arpl
pop
pop
sub
or
lret
pop
push
pop
xchg
popa
sbb
and
fcoml
mov
pop
lret
arpl
jae
movsb
pop
pushf
and
stos
xor
xchg
shll
les
add
mov
sbb
jg
sbb
or
lds
stos
insb
aas
pop
iret
add
les
xchg
sub
jne
decb
push
outsb
loope
xchg
outsb
adc
loope
dec
jp
int
test
scas
scas
imul
fwait
push
out
nop
add
orb
inc
lret
jle
sbb
xchg
cmc
pop
rcrl
add
xlat
das
ficompl
or
push
sbb
fnstsw
mov
ret
push
lock
mov
iret
stos
mov
xor
sti
aaa
fldt
xor
mov
adc
or
in
push
sbb
pop
jo
nop
jae
popa
test
shll
xchg
dec
ds
outsb
inc
sub
lahf
vpmovmskb
movsb
orl
xor
dec
mov
jae
out
add
xchg
pop
outsl
gs
dec
add
sbb
push
in
push
mov
push
mov
sbb
cmp
cmp
std
shl
fwait
out
or
mov
dec
and
sbb
sahf
add
mov
in
cwtl
xchg
sbb
insl
js
pop
add
adc
inc
inc
out
cld
xlat
inc
jp
aas
in
push
call
cmp
xchg
add
push
mull
mov
out
sbb
jp
and
mov
or
sbb
pop
orl
into
pusha
xchg
ss
shll
xchg
inc
add
mov
or
pop
test
loopne
popa
cltd
jo,pn
jae
add
add
data16
daa
or
add
movl
pop
mov
orb
out
push
std
dec
or
out
add
ds
pop
add
push
sub
ret
outsb
negb
in
gs
sbbl
inc
jb
sahf
mov
ret
lret
les
adc
test
push
rcrb
lcall
jp
dec
dec
shl
mov
mov
xchg
aam
in
arpl
lret
sbb
test
dec
addr16
lds
stc
cmpsb
and
je
mov
mov
adc
dec
pop
push
mov
mov
rolb
ficoms
movsl
mov
mov
aad
xchg
sbb
fwait
jle
lea
icebp
jno
daa
jle
adc
sub
push
out
xor
pop
pop
mov
inc
cld
shl
mov
loop
int
sbb
pop
pop
loope
cltd
mov
enter
test
or
pop
sbb
push
xor
gs
ss
outsl
roll
gs
push
dec
fldt
mov
negl
jp
cmp
mov
mov
inc
int3
popf
cmp
pop
daa
out
mov
pop
dec
and
mov
xchg
mov
or
mov
or
inc
fisubrs
ds
rolb
int
adc
adc
and
subl
xchg
addr16
sub
xor
movsb
ljmp
cwtl
test
out
cltd
pop
or
in
push
pop
lret
sahf
daa
mov
or
ds
sbb
xor
test
fidivrl
inc
cwtl
stos
xchg
mov
or
out
push
cs
shrl
outsl
push
lds
in
jmp
dec
jo
jecxz
iret
fnsave
addb
scas
push
insl
sbb
xchg
push
out
lret
cmpsb
inc
ja
or
cmc
push
out
js
push
stos
test
and
pop
mov
mov
push
pop
jl
jge
addr16
and
divb
and
jg
imul
enter
pop
mov
sbb
pop
fcompl
jge
sbb
cmpsl
lods
ficoms
aaa
arpl
andl
lret
xchg
cmpsb
imul
push
inc
mov
sub
pop
pop
ljmp
dec
pop
mov
xchg
inc
sbb
xchg
add
mov
imul
pop
popf
repnz
mov
dec
ret
adcl
test
mov
js
mov
or
clc
jno
lahf
and
and
test
xor
jge
mov
sub
and
outsl
jmp
aam
or
pushf
pop
xchg
push
fadds
push
ret
jo
orb
out
addr16
sti
cmp
out
inc
and
cmp
nop
popf
mov
lahf
mov
and
enter
adc
sbb
xchg
shlb
jnp
inc
xor
xchg
push
mov
mov
inc
xor
imul
mul
mov
lods
out
pop
adc
inc
cmp
jne
js
push
jb
stos
push
scas
and
inc
cmp
jmp
out
sbb
lods
pop
cmp
lahf
push
sarl
rorl
je
pop
xor
pop
insl
push
cmp
inc
inc
push
push
inc
fisttpl
mov
add
gs
pushf
mov
cltd
xor
orl
cli
and
stos
movsb
adc
jmp
insl
or
and
mov
cmp
popf
shll
nop
fdiv
fwait
insb
jecxz
push
inc
mov
xchg
aas
dec
enter
push
push
in
jle
int3
sub
movsl
shll
sub
or
push
fdivrp
adc
push
loope
adc
in
out
pop
mov
jns
ret
orl
push
nop
pop
inc
add
sub
jns
inc
stos
adc
rcr
push
add
jge
sub
sub
xor
aaa
jecxz
fadd
ret
mov
icebp
xor
sub
sub
inc
push
inc
mov
bound
sbb
pop
inc
stos
popf
mov
sbb
add
or
cmp
mov
push
bound
or
or
sbb
arpl
adc
imul
push
in
repz
mov
cmp
push
cli
sbb
js
andb
add
add
mov
jle
fwait
mov
cs
jmp
insl
dec
mov
push
rcl
ljmp
push
test
mov
adc
jp
inc
lock
in
aaa
or
clc
add
cmpsl
mov
xorl
mov
fldenv
pop
addb
enter
data16
xor
dec
orl
loopne
dec
pop
lea
ret
inc
fsubs
add
or
dec
dec
scas
fsts
mov
fdivrs
pop
jns
insl
adc
push
push
push
aaa
fcomps
fadds
stc
cli
fcomps
ret
dec
dec
adc
mov
cmc
sbb
lds
shlb
iret
roll
mov
dec
rorb
mov
enter
sbb
add
inc
jl
nop
cmp
mov
mov
pop
mov
push
mov
mov
jle
andb
neg
sbb
mov
pop
and
sbb
mov
cs
outsl
inc
test
shrb
or
int3
cwtl
adc
mov
or
sti
lea
movsl
adcb
pop
mov
push
std
xchg
pop
add
adc
negl
mov
shrl
hlt
shll
mov
mov
dec
push
lods
or
loope
inc
test
push
sub
dec
jmp
mov
icebp
inc
push
sahf
xchg
nop
pop
stos
xor
mov
push
sbb
rcrl
or
pop
jecxz
enter
jne
lret
jmp
call
jnp
jecxz
mov
jmp
in
iret
mov
and
push
imul
loopne
jnp
pushw
adc
in
aaa
add
test
add
lcall
insb
mov
dec
lret
jno
insl
add
pushl
test
ljmp
pop
inc
aaa
fs
cmpl
aaa
xchg
ja
pop
and
lcall
pop
lods
mov
shll
add
cld
cmp
xchg
mov
clc
lock
popa
xchg
movsl
rclb
push
fldt
cmc
add
push
bound
jle
push
jmp
enter
inc
push
lock
jno
push
jp
pop
in
pop
mov
or
mov
dec
stc
push
or
das
iret
arpl
adc
sbb
test
pop
orb
stos
lock
dec
push
lods
ror
mov
addr16
dec
fs
leave
shlb
ds
mov
sti
fcomps
je
sbb
out
add
jge
mov
jae
movsl
xchg
lods
ljmp
call
data16
pop
sets
adc
outsl
xchg
sbbb
or
add
add
outsl
dec
cwtl
aam
scas
jp
mov
leave
cmc
aaa
imul
sbb
shl
dec
loope
mov
jb
pop
mov
arpl
push
and
dec
enter
icebp
pop
mov
jle
xchg
push
mov
pop
in
or
in
mov
fmuls
mov
je
repz
jmp
lcall
or
in
sub
in
ficompl
sahf
xor
test
adc
or
in
dec
shlb
mov
cmc
add
dec
push
push
test
mov
adc
jbe
sbb
in
pop
data16
cmpsb
xchg
pop
std
es
in
jmp
scas
fldcw
push
mov
xchg
add
xorl
inc
dec
xchg
es
repnz
sti
pop
xchg
test
mov
push
push
lahf
sti
notl
push
arpl
das
ds
daa
pushf
lods
aas
sbb
mov
gs
out
xlat
and
push
jle
lret
dec
xchg
stc
std
out
rcr
xchg
ror
arpl
mov
cmp
add
and
fsubl
inc
push
or
clc
jge
scas
sub
imul
fdiv
sbb
data16
hlt
clc
xlat
fistpl
cmp
cli
push
or
dec
pop
add
lea
enter
popf
or
mov
int3
sub
push
gs
outsl
mov
sbb
push
call
loopne
cwtl
fnsave
cmp
movl
and
arpl
sar
cmp
mov
sbb
xchg
push
adc
sub
cwtl
mov
add
or
out
dec
popf
fcompl
loope
js
mov
dec
mov
stos
or
cmpl
mov
jne
rorl
xchg
jp
pop
cmpsl
jb
or
into
xor
addl
adc
insb
or
xchg
mov
pop
or
lcall
sbb
inc
fstpt
fmuls
int3
cld
ds
xchg
loopne
push
lret
cld
iret
lcall
mov
imul
dec
insb
mov
xchg
mull
pop
roll
pop
addl
imul
pop
fisubl
xchg
push
mov
jge
lock
cmp
jge
xchg
sbb
cmp
add
sti
sub
dec
outsb
push
inc
push
scas
or
insb
push
cltd
es
dec
andl
and
jge
repz
scas
pop
dec
sahf
rcll
and
mov
rolb
jp
data16
dec
mov
xor
mov
outsl
mov
in
xchg
or
sbb
mov
xor
stos
sub
in
mov
mov
int3
leave
scas
ret
mov
jl
aam
sub
add
sub
or
jo,pt
xchg
jl
fisttpl
jb
add
addr16
sub
test
mov
sbb
ret
cmp
fstps
loopne
aam
rorl
arpl
sarl
jb
cwtl
dec
roll
test
mov
xchg
rolb
inc
jge
push
pop
mov
mov
jle
add
push
adcb
aad
mov
test
sub
test
arpl
dec
add
test
lret
xchg
add
pushf
out
cltd
xchg
push
rcrb
add
push
jp
sahf
lock
fistpl
pop
pop
inc
fldl
add
push
sahf
add
sarb
push
mov
inc
test
add
or
xchg
ret
test
sahf
sahf
pop
call
insb
cmp
inc
roll
orl
jle
inc
dec
add
add
test
and
push
or
in
cmp
dec
loope
negb
inc
push
fcmovb
add
add
push
popa
rcr
add
add
fsubl
sub
sbb
cmp
add
or
fwait
xchg
add
pop
fists
inc
xchg
mov
inc
inc
mov
sbb
inc
out
lcall
and
xchg
ret
inc
mov
xchg
inc
and
xlat
rol
test
add
sbb
leave
repz
inc
add
and
incl
fiaddl
lods
jecxz
or
inc
test
pop
fildl
mov
ret
popa
add
fists
pop
pop
jl
arpl
xorb
add
stos
cmp
repnz
pop
inc
jl
addb
add
inc
inc
fiaddl
add
fstpl
pop
and
sahf
adc
xchg
adcl
inc
inc
or
inc
jne
inc
inc
dec
test
pushf
bound
push
roll
dec
je
test
and
inc
add
xchg
cli
mov
or
push
in
xlat
add
aaa
pop
jbe
jae
or
mov
inc
ss
add
adc
and
mov
inc
mov
sbb
xchg
dec
add
repnz
out
pop
dec
push
inc
sbbb
or
sub
push
nop
mov
xlat
lock
fsubl
dec
test
or
push
and
ja
test
push
pop
pop
or
adc
lds
sbb
sbb
js
push
and
enter
ja
add
add
push
pusha
jnp
les
jmpw
ret
inc
cmp
pop
add
push
hlt
aaa
pusha
adc
and
or
pop
push
jnp
mov
lds
dec
xor
jne
push
imul
or
push
xchg
pop
inc
cltd
add
inc
rcll
inc
mov
mov
and
add
mov
dec
sahf
sbb
jne
dec
push
jmp
push
pop
arpl
sbbl
mov
jecxz
mov
push
push
dec
sbb
nop
enter
pop
pop
pop
add
add
xchg
popf
fiadds
in
xchg
inc
test
sbb
inc
or
fstpl
jl
gs
pop
or
jne
pop
frstor
or
adc
add
leave
xchg
sbb
in
je
and
adc
adcl
jae
add
ret
jl
jp
push
add
imul
pop
pop
in
fdivr
mov
sub
pop
xchg
addb
add
call
lcall
or
mov
inc
dec
lcall
add
pop
mov
sahf
and
add
inc
jge
dec
pushf
imul
jns
inc
xchg
inc
add
sahf
add
lahf
rcr
andb
cmpb
mov
enter
test
dec
sti
push
rorb
fcoml
inc
pop
gs
and
pop
fildll
mov
sarb
lds
pop
push
cld
add
sbb
add
add
inc
je
in
jl
loope
je
add
insl
push
add
insl
add
jle
popa
rorb
pop
adc
sub
cltd
insl
jp
xorb
pop
sub
repz
test
sbb
sub
mov
mov
mov
xchg
jp
mov
loope
lods
mov
loope
rcrb
insb
xchg
and
add
pop
nop
or
push
fidivrl
adcb
int3
xchg
mov
movb
stos
fadd
adc
loopne
sbb
test
imul
cmc
xchg
test
jge
sbb
pop
cmp
push
inc
add
and
mov
xor
test
lcall
xor
test
aam
scas
push
pop
nop
mov
mov
sub
pop
pop
or
jne
cmp
jp
push
out
dec
dec
repnz
fstpl
and
aam
pop
pushf
adc
dec
dec
fsubr
daa
jns
or
jb
push
push
dec
int3
repnz
adc
xchg
je
lods
cli
movsb
aaa
adc
test
or
leave
jns
sub
sbb
inc
sbb
pusha
ds
out
pop
decb
or
dec
fstl
cmp
xor
in
cmc
cmp
push
in
sub
and
xor
pop
xchg
cmp
dec
in
push
dec
dec
das
adc
cmp
mov
push
outsb
dec
aaa
xor
in
adcb
scas
leave
and
or
sub
lcall
jp
mov
sti
leave
shlb
or
scas
arpl
xchg
cmp
aaa
notb
sbb
xchg
or
pop
incl
shlb
std
in
fdivrl
leave
mov
mov
xlat
rcr
cmp
dec
push
test
lcall
out
in
mov
cmp
lds
dec
loop
or
xchg
dec
add
neg
push
incl
sub
ljmp
notl
andb
adc
mov
add
sub
popa
flds
test
out
xchg
jns
aam
pop
add
mov
xor
mov
pop
mov
mov
xchg
fdiv
mov
or
sbb
ss
out
sub
in
sbb
cli
push
in
or
fs
sub
mov
cltd
sahf
leave
dec
xchg
mov
push
loopne
cmpsl
jb
mov
jne
aaa
aad
rcll
add
mov
dec
push
mov
mov
shll
sbb
and
add
jmp
pusha
add
push
mov
push
xchg
push
mov
add
mov
sub
dec
fdivrp
jle
leave
andl
xchg
test
adc
fnsave
mov
dec
fs
leave
pop
cmp
inc
mov
cltd
int3
xor
cmpl
jle
lahf
adc
push
test
dec
push
mov
ret
lret
in
loope
adc
sbb
mov
sub
mov
and
cmc
mov
dec
decb
pop
inc
cmp
int3
popf
rcrl
pop
fwait
and
cmc
sbb
lods
pop
sarb
lret
fldcw
in
jl
ret
pop
jnp
cmc
mov
sbb
or
mov
call
jmp
js
stc
pop
call
add
push
leave
pop
or
and
idiv
pop
inc
adc
pop
push
inc
xorl
jle
lret
loope
mov
sbb
pop
or
adc
add
dec
icebp
mov
xchg
mov
xchg
cmp
popf
repnz
adc
or
dec
adc
jno
cmpsl
aad
fsubl
pop
inc
adcb
les
fwait
mov
lods
mov
push
insb
test
mov
mov
push
fidivl
push
addl
push
loopne
push
ljmp
insb
adc
push
clc
jb
or
aad
pop
push
jb
or
add
insb
popa
int3
cmp
test
mov
int3
jl
pop
cmpsl
adc
xchg
jecxz
jge,pt
rclb
pop
pop
icebp
sti
push
aaa
pop
mov
cwtl
push
mov
mov
lods
jle
jmp
xor
test
lcall
mov
or
lds
jbe
pop
roll
lcall
lahf
mov
sbb
add
push
lcall
mov
cmpb
sarl
pop
xor
pop
movsl
mov
mov
sbb
imul
xchg
mov
adc
scas
shlb
fsubr
fwait
xchg
sub
mov
mov
mov
rclb
inc
sub
out
inc
sbb
mov
movsl
roll
jnp
shrl
cmpsb
std
lcall
scas
jle
out
lds
fldl
mov
lock
sti
and
dec
imul
cmpsl
lret
push
dec
jl
mov
cmp
push
ljmp
out
adc
or
push
mov
int
mov
push
lods
mov
js
mov
mov
or
push
xor
into
test
cmp
mov
test
xchg
or
inc
pushf
pushf
xchg
jb
cmc
sbbl
or
sahf
aam
push
test
cmp
notl
push
dec
mov
lret
cmpsl
xchg
dec
or
jp
pop
jge
jmp
mov
adcl
pop
cmp
icebp
sbb
testl
mov
gs
push
xchg
sub
mov
mov
lretw
cmp
repz
mov
aam
lcall
mov
dec
mov
add
loop
ljmp
dec
pop
jo
push
sbb
sub
jne
pop
call
adc
push
popa
jae
dec
mov
lret
push
mov
or
add
sbb
addr16
push
sub
push
xorl
and
lret
mov
push
out
pop
cmp
jp
rorb
cmpsb
mov
mov
push
popf
adc
push
pop
push
call
xor
xor
in
xchg
fmull
or
add
out
int3
mov
fisttpll
jle
out
push
arpl
es
mov
stc
arpl
lcall
sahf
push
or
lea
sbb
outsl
mov
lret
jo
cmp
jne
stos
xchg
or
enter
inc
sub
shlb
sbb
pop
mov
add
inc
adc
cmpsl
aaa
clc
add
test
sbb
sub
mov
cmpsl
dec
lret
fwait
je
xchg
mulb
and
inc
stc
scas
adc
xorl
pop
cmp
das
push
sub
cmp
out
sub
jae
scas
xor
pusha
and
sbb
or
test
push
sbb
ljmp
dec
outsl
jae
and
pop
lret
cmc
mov
dec
fcomps
push
ret
rclb
jne
enter
lcall
pop
cmc
sbb
popa
in
cwtl
cmpsb
fidivrl
lahf
popa
sahf
aam
ss
push
popa
mov
push
mov
lcall
xchg
cmpsl
and
jne
ret
add
nop
ret
in
das
roll
jge
loope
dec
mull
add
and
mov
sub
cltd
push
imul
mov
les
paddb
jae
jmp
in
xchg
jne
mov
adc
sbb
cltd
stos
push
scas
popa
into
jg
add
cltd
xor
icebp
loopne
cld
sbb
push
insl
pusha
pop
sub
push
scas
lret
pop
jle
mull
cmc
mov
imulb
add
imul
push
vxorps
in
mov
sbb
lret
add
cmp
jecxz
js
test
xchg
mov
addr16
data16
subl
push
cli
xchg
lahf
and
cwtl
testb
or
shll
mov
out
sub
sub
sbb
or
popa
jp
lahf
mov
fs
pop
movsb
jp
push
add
pop
test
ss
jbe
mov
fdivl
sbb
addl
es
iret
mov
and
ret
daa
movsb
mov
orl
push
ficompl
adc
mov
test
loope
mov
mov
add
jg
mov
inc
ja
sub
dec
icebp
sub
add
sbb
data16
push
imul
lods
mov
dec
xor
push
mov
popl
sub
push
dec
dec
sub
daa
sub
inc
push
jae
push
push
cltd
cmp
stos
sub
and
iret
sub
insb
mov
mov
int3
mov
stc
push
ret
or
mov
push
xchg
or
aas
inc
and
mov
mov
fdivs
pop
adc
adc
inc
test
jb
push
push
dec
negl
xchg
inc
xchg
adcb
test
sbb
mov
sbb
jmp
in
push
mov
cltd
repnz
dec
sbb
data16
sub
mov
stos
sbb
push
pusha
inc
inc
mov
popa
roll
subl
inc
leave
pop
into
dec
lods
testb
les
mov
jge
cmpsb
adc
addr16
add
add
std
xor
enter
and
jns
xlat
pop
test
jno
shrb
ret
shlb
movsl
jae
test
es
fwait
ja
jo
test
andl
jecxz
cld
xor
ficoms
inc
aam
add
adc
cltd
ret
xor
out
orb
or
lret
jbe
push
cmp
mov
pop
push
jmp
xchg
jne
or
mov
pop
adc
jbe
xor
stos
rcrl
dec
pop
cld
adc
and
outsb
fldcw
sub
jle
fisttpl
mov
mov
aad
cmpsb
out
xor
arpl
or
dec
imul
ret
dec
push
pop
sbb
or
add
cmp
push
mov
std
push
lock
xor
mov
add
jne
inc
mov
ret
imul
sub
push
test
add
push
push
cmpsl
fsubr
xor
fstpl
jbe
add
sbb
inc
add
inc
cs
inc
and
pusha
mov
enter
cltd
mov
xchg
dec
add
sub
pop
sti
xchg
mov
enter
mov
arpl
cltd
in
lcall
and
add
adc
mov
jns
sbb
fbld
ss
test
cmp
movb
inc
sub
sbb
adc
jge
jb
dec
fimull
jmp
xchg
ds
xchg
dec
dec
mov
pushf
aad
addb
push
mov
mov
ret
push
sub
cli
push
aas
inc
mov
push
pusha
daa
int
cld
pop
sbbb
pop
cmp
add
jns
es
adc
aas
sbb
lret
out
push
cld
popf
aad
int
pop
repnz
sahf
repz
or
adc
xchg
xchg
fdivrp
bound
xor
add
push
or
add
mov
xor
inc
test
fcomps
popf
clc
inc
gs
xchg
sub
add
jmp
mov
out
or
sub
mov
mov
subl
add
push
ficomps
xchg
pop
cmc
aad
inc
jbe
repz
or
add
aam
inc
mov
fcomps
call
cmp
lret
inc
ficompl
add
push
or
sbb
cmp
pop
mov
fwait
pop
pushf
sbb
in
push
enter
out
int3
jb
repz
pop
sub
push
and
not
daa
fcoml
jae
repnz
cmp
mov
jno
sbb
cs
stos
jbe
dec
fcompl
sahf
cmp
jmp
in
loop
add
mov
xor
add
mov
outsl
mov
ja
pusha
test
jae
inc
iret
push
adc
lret
mov
imul
jle
jge
pusha
adc
int
mov
daa
aam
xchg
cmp
mov
ret
dec
imul
shrb
aas
sub
jne
push
sub
jbe
or
and
xchg
mov
cltd
in
ljmp
imul
pop
popf
push
and
dec
cmp
stc
gs
lret
inc
daa
pop
push
sbb
in
push
xchg
lock
cmpb
mov
or
in
andb
lcall
cli
xor
cltd
les
imul
sbb
shll
dec
sbbb
dec
push
add
xor
pushf
jne
enter
push
mov
push
scas
xchg
insb
xchg
mov
or
les
loopne
data16
ret
aam
ja
mov
and
divb
test
lds
jne
jecxz
hlt
loop
out
mov
imul
lea
cmp
mov
xor
mov
movsl
in
rclb
sbb
xchg
and
mov
pusha
stos
fsubrl
push
xchg
adc
imul
cmp
add
jne
pop
mov
sbb
mull
or
clc
pop
cmp
lock
sbb
orb
inc
clc
aaa
adc
fdiv
mov
out
inc
push
arpl
das
mov
clc
xor
rcrb
popa
ljmp
aas
addl
fsts
hlt
nop
push
aad
test
push
movsl
faddl
pushf
push
or
adc
mov
push
clc
push
sahf
xlat
lret
push
fdivrl
add
cmpsl
sbb
inc
push
mov
sub
push
pop
lcall
into
orb
imul
xchg
xor
xchg
or
notl
pushf
fistpll
out
xchg
mov
int3
and
addr16
cwtl
loop
inc
mov
pop
ret
cld
mov
cmpb
popa
add
sbb
add
xchg
popf
faddp
je
jmp
jo
or
out
push
dec
push
sbb
loop
addr16
loope
cmpsb
enter
mov
push
out
out
ja
cmc
jmp
jnp
addb
sub
popf
jne
dec
scas
pushf
and
mov
inc
rorl
sub
lret
insl
inc
icebp
mov
pop
jnp
call
sbb
cmpsl
enter
or
sub
sbb
lcall
or
xchg
mov
pop
shll
mov
rorl
mov
dec
lds
mov
ret
sbb
push
movsl
int3
push
xchg
pop
pushf
push
jmp
push
push
in
test
cwtl
xor
dec
mov
dec
bswap
push
mov
std
fs
mov
stos
push
lds
ret
mov
insb
xor
xchg
gs
jle
push
xchg
sahf
call
lods
fwait
cltd
push
sbb
filds
mov
ret
sbb
inc
pop
jecxz
out
out
stos
enter
fnstsw
add
mov
add
lret
nop
add
mov
cmc
add
repz
sbbb
sbb
and
aad
mov
pusha
xchg
into
mov
xchg
sbbb
jns
or
sti
jb
or
pop
push
sbb
inc
repz
jg
insl
pop
ret
jp
pop
in
aas
fidivrl
stos
pusha
frstor
xchg
cltd
stos
lds
xor
test
inc
mov
mov
xor
pop
loopne
or
pop
push
or
add
pop
out
xor
leave
add
aad
dec
rcll
gs
leave
lcall
xchg
lea
mov
inc
mov
bound
jae
push
adc
enter
sbb
dec
std
outsl
adc
das
push
sbb
adc
sti
adc
inc
adc
add
stos
xchg
dec
pop
xor
mov
adc
mov
or
cli
mov
aad
push
mull
out
movsb
mov
ret
orb
and
or
popl
push
push
adc
stos
dec
incb
repz
pop
dec
jg
pop
ja
lods
jge
out
mov
pinsrw
inc
sbb
xor
mov
add
ss
in
xchg
cmp
mov
xchg
mov
movsb
ret
scas
dec
pushf
add
xchg
push
sub
add
dec
push
ret
inc
inc
pcmpeqw
lahf
sub
pop
mov
pop
ss
in
shrb
add
sti
sbb
ret
test
xchg
sub
out
or
mov
mov
pop
cmpsb
pop
cli
das
mov
popa
int3
push
add
push
adc
adc
push
or
mov
test
or
jle
out
mov
inc
fcoms
jge
dec
nop
cmp
add
les
ss
jp
stos
or
sbbb
adc
rcll
inc
dec
pop
push
and
lds
out
call
mov
jo
xchg
in
mov
aas
xchg
dec
push
mov
mull
xchg
pop
aad
pop
test
and
push
inc
cwtl
xlat
or
lret
pop
scas
inc
xor
outsl
adc
and
mov
sub
pop
movsl
inc
stc
test
jbe
xchg
popf
in
jmp
xor
test
dec
mov
mov
addl
fdivrl
cmpb
xchg
mov
das
cmp
or
dec
test
mov
insl
push
push
mov
sti
jb
fdivrl
movsl
cli
arpl
push
xor
stc
sbb
xor
push
mov
hlt
fs
mov
mov
sbb
sbb
or
jbe
cmp
cmpsl
push
dec
jle
lods
add
loop
or
jecxz
add
jg
adc
pop
mov
inc
es
xchg
imul
and
fcmovb
inc
fidivrs
jecxz
dec
pusha
xchg
jne
push
movsl
daa
xor
mov
add
shrl
mov
or
fisubrs
xchg
add
xor
jnp
mov
movsb
jb
mov
aad
jge
cmp
insb
nop
pop
mov
push
in
sarl
addb
pop
fs
inc
or
rcrb
loopne
fldl
fidivrs
shll
mov
imul
movsb
mov
xorl
in
aad
pusha
add
ret
push
xchg
pop
and
pop
jns
nop
sbb
jmp
or
stos
mov
rorb
lds
push
scas
lret
test
in
repz
vprotb
mov
out
ret
shll
mov
popf
inc
cmc
cltd
xchg
cmp
mov
cmp
jae
cld
mov
pop
test
call
loopne
insb
dec
jge
inc
sub
pop
scas
push
test
dec
fcomi
or
add
or
pop
sbb
cltd
sbb
outsb
adc
mov
cs
stos
orl
insb
add
aam
pop
adcl
cwtl
push
pop
imul
aaa
adcl
and
add
lods
in
into
jb
lret
sub
jl
mov
xor
dec
roll
cmc
pop
mov
insl
add
mov
hlt
ret
inc
imul
sahf
push
push
cltd
cs
mov
bound
sub
out
stos
mov
inc
xorb
dec
cltd
inc
das
icebp
fimuls
adc
and
sbb
mov
sbb
mov
faddl
adc
xor
pusha
mov
in
lds
adc
inc
insb
xchg
push
in
push
popa
push
mov
sbb
add
mov
repnz
pusha
xor
ret
arpl
mov
data16
mov
cld
repnz
pop
mov
push
xchg
lds
mov
or
mov
in
js
xor
test
test
mov
sahf
sbb
mov
mov
or
inc
insb
shlb
add
dec
adc
sub
xchg
add
or
pop
es
pop
gs
enter
sbb
push
jno
jne
shlb
mov
pop
push
pop
or
inc
inc
data16
xchg
pushf
dec
scas
pop
scas
les
mov
aam
faddl
adc
gs
inc
orb
roll
int3
adc
adc
dec
roll
jle
je
adcl
xchg
jp
and
popa
xchg
inc
jo
stos
ss
mov
test
mov
repz
mov
cmp
data16
data16
cltd
cmp
pop
or
add
ljmp
and
dec
pop
rol
aaa
les
push
xor
and
movsb
push
enter
pop
leavew
add
mov
adc
mov
jmp
insb
jp
add
rorl
clc
jle
or
xor
and
inc
sub
popf
lods
cwtl
lcall
nop
es
sar
and
xor
dec
loopne
popa
lahf
dec
xchg
and
sbb
push
cmc
dec
faddl
orl
xor
sbbl
incb
push
inc
jns
pop
jae
add
or
dec
sub
mov
popa
jg
mov
shll
ret
and
and
xor
inc
jge
lds
push
dec
push
fimuls
fdivrl
cmpsl
adc
lods
test
and
xchg
ljmp
sbb
adcl
scas
shll
leave
fcomp
add
cmpb
push
sti
mov
push
push
faddl
pop
fildl
addr16
adc
push
mov
mov
pop
int3
inc
lret
push
fdivrl
je
mov
cs
roll
sbb
mov
dec
mov
leave
add
divb
adc
mov
leave
pop
cli
cmp
push
icebp
out
daa
out
in
cwtl
je
and
les
mov
jne
jl
jg
dec
cld
shll
cs
ja
push
orl
daa
pop
mov
fldl
xor
icebp
xchg
or
xor
mov
sub
cltd
popa
add
fdivs
daa
dec
dec
pop
and
add
sahf
cld
lods
push
sbb
ss
adc
int3
mov
roll
not
movd
sbb
mov
add
pop
pop
xlat
nop
push
sbb
sbb
movb
mov
nop
mov
je
xor
or
xor
cwtl
arpl
leave
leave
mov
jnp
ds
loope
outsb
sbb
sub
cmc
cmp
stos
jns
mov
rorl
aad
sbb
jl
sti
xchg
or
sbb
xor
rclb
imul
mov
mov
dec
loop
mov
jbe
mov
arpl
dec
sbb
ss
cli
mov
outsb
jmp
outsb
in
sbb
lret
inc
sub
xchg
mov
xor
adc
aaa
in
cmpsb
xchg
xchg
orl
loop
in
test
jmp
dec
dec
arpl
or
testl
pop
jmp
outsb
and
sub
and
add
add
call
fbld
int3
and
mov
addr16
fwait
repz
das
inc
out
pop
or
std
push
xorl
pop
inc
push
test
sahf
adc
push
add
pop
es
cmp
dec
lods
mov
shl
mov
test
fucomp
popa
loopne
lret
dec
nop
mov
data16
xor
bound
jne
bound
xchg
jle
xchg
fimuls
mov
or
xchg
lret
inc
add
loopne
mov
aam
pop
mov
xchg
scas
mov
xchg
and
dec
add
inc
test
imul
inc
lcall
pop
popa
mov
or
sub
in
xchg
sub
arpl
movsl
add
mov
pop
outsb
ret
rol
cmp
sbb
mov
xchg
outsl
add
scas
lret
push
jecxz
add
pop
pop
xchg
int
push
jb
repnz
into
jecxz
stos
sbb
sbb
jp
jnp
les
cmp
fwait
jle
aad
add
sbb
adc
xchg
mov
fidivrl
sbb
rcl
or
pop
pushf
xor
rol
mov
out
xchg
pop
xchg
gs
and
leave
inc
sbb
cltd
sahf
mov
xor
in
dec
daa
popa
xor
fsubl
dec
repnz
in
add
sbb
das
inc
pop
in
inc
sbb
std
dec
sub
mov
sbb
aas
nop
fcomps
lret
mov
push
lods
pop
or
or
out
push
cmpsl
jno
sub
xchg
xor
out
push
jmp
pusha
stos
fmulp
dec
popa
sti
pushf
pop
xchg
sbb
fdivs
fisubs
push
sbb
data16
test
push
popa
jns
inc
and
or
mov
fldt
add
into
shr
jp
in
shr
mov
or
jno
popf
cwtl
imul
pop
icebp
adc
ja
cmp
addb
or
dec
in
mov
cltd
mov
loope
mov
push
es
cmc
pop
sbb
cmpb
sub
and
push
adc
inc
mov
hlt
movsl
shrl
sbb
das
dec
pop
mov
repnz
cmpsb
xchg
xor
lods
add
int
shlb
outsb
jne
movsl
push
icebp
test
mov
data16
ljmp
pushf
inc
lea
jb
jns
outsb
es
outsb
loopne
add
addb
fcoml
repz
ljmp
test
iret
lea
mov
dec
rol
push
dec
mov
add
cmp
subl
into
mov
cwtl
gs
xor
movsl
and
cmp
dec
imul
mov
repz
mov
or
shll
inc
shll
cmp
imul
cmp
mov
cwtl
jne
push
add
xor
lods
push
in
aad
jecxz
notrack
add
mov
push
inc
lahf
mov
cmpsl
xchg
jl
mov
sbb
adc
fildl
jno
dec
mov
xchg
ds
mov
lahf
or
jno
pushf
test
and
pop
int
mov
xchg
push
and
jmp
dec
or
or
or
pop
fdiv
insl
adcl
add
es
push
popa
inc
loopne
and
int3
dec
jecxz
nop
pop
aam
and
xchg
mov
push
xor
and
jle
cmp
js
mov
aas
add
in
aas
sbb
jg
enter
lds
xchg
sbb
ret
bnd
jecxz
mov
and
or
ret
and
sub
pop
imul
sub
ret
push
fiaddl
pushf
push
aad
je
add
sub
fwait
adc
sbb
fimuls
mov
push
in
mov
jle
loope
fstpl
arpl
enter
jl
in
push
arpl
out
adc
or
mov
movsl
je
and
repz
mov
xchg
cli
adc
popa
and
adcb
fadd
outsb
jne
lcall
sbb
push
jne
and
add
cmpsl
push
addr16
scas
push
sbb
test
sbb
dec
add
jl
push
sbb
add
sbb
lods
lods
xor
add
pop
xchg
and
xchg
in
movsl
sahf
or
ss
push
pop
add
sub
cmc
inc
or
or
jge
pop
test
es
lods
and
add
push
leave
test
leave
inc
sahf
pop
cmpsl
test
int3
insb
add
into
sub
push
out
add
add
fidivrs
mov
popf
fxch
rcll
pop
or
xchg
pavgw
cmp
mov
lcall
adc
ficompl
lret
push
xor
sub
sbb
rcrl
cli
out
push
jb
push
les
push
or
jb
adc
or
push
ja
and
sbb
imul
jg
cmp
xchg
fadds
mov
loop
orl
aad
fwait
pop
sub
push
cld
dec
push
scas
push
test
or
rcll
push
pop
into
arpl
push
leave
out
xlat
jp
int3
or
mov
xchg
adcl
mov
inc
or
lea
iret
jne
dec
pop
push
dec
popa
repz
add
cmpsb
cltd
dec
je
mov
sti
lds
lds
jae
dec
imul
add
xor
mov
repz
sahf
cs
jp
test
stos
ss
sbb
mov
xchg
push
or
movsl
jns
repz
int
pushf
data16
sti
dec
shrb
sub
out
jmp
cltd
cmp
mov
xor
sbb
push
cmc
arpl
in
in
gs
push
push
je
stos
out
or
shrb
mov
mov
mov
fs
add
xchg
mov
dec
cmp
lret
mov
mov
add
jns
fwait
outsl
cwtl
xchg
sbb
jbe
or
stos
push
adc
sbb
incb
ss
test
fbld
push
test
mov
push
cltd
push
lea
test
cmp
data16
sbb
pop
in
lret
decb
adc
add
inc
jno
push
jecxz
push
xchg
fwait
pop
xor
lock
sub
xchg
jae
roll
jge
enter
xchg
int3
lret
inc
or
dec
adc
cmp
dec
cmp
loop
jmp
inc
flds
inc
fbstp
loopne
test
xor
loopne
and
mov
or
sbb
loope
jnp
mov
imul
cmp
into
mov
jp
push
test
xchg
add
sbb
pop
das
add
jmp
mov
sub
fcoms
fcmovnbe
dec
popa
inc
aaa
mov
xchg
imul
dec
loopne
or
scas
push
dec
aad
inc
popf
adcb
add
lods
push
mov
popa
push
sub
mov
arpl
and
popa
push
and
data16
cli
dec
inc
das
push
fs
jbe
sbb
retw
in
das
notb
pop
mov
ficompl
int3
sbb
jge
pop
sub
fdivl
sub
pop
jno
flds
in
add
ret
sbb
fimull
divb
mov
lret
sub
stos
push
repz
lds
lock
sub
adc
scas
sarl
dec
push
pop
mov
pop
std
sbb
inc
popf
push
test
rcrb
subb
pusha
ret
lock
repnz
inc
rolb
mov
sbb
sbb
mov
add
aas
add
add
add
lods
cmc
cmpsl
loopne
push
adc
outsb
mov
mov
inc
adc
and
fiadds
and
ror
or
shrl
sub
shrb
mov
jl
cmp
pop
mov
insb
push
mov
xchg
fwait
jo
lret
adc
aaa
jno
add
ret
mov
sub
ret
into
mov
out
sarl
push
or
lds
sub
negb
int
loopne
xchg
push
adc
out
sbb
mov
je
jbe
rol
fnsave
dec
cli
mov
cmp
popf
adc
data16
push
mov
xor
insl
movswl
push
inc
add
push
and
adc
sbb
dec
and
fdivr
push
fcomi
dec
sbb
stc
push
icebp
cwtl
nop
jb
leave
sbbb
lea
dec
aas
cltd
push
push
inc
pop
jecxz
dec
sbb
add
orb
addr16
mov
push
pop
pop
aaa
mov
out
mov
js
sbb
movsl
sbb
xor
into
lcall
lds
xor
lcall
cmpsb
inc
add
sbb
or
mov
mov
jmp
out
cmpsb
stos
lahf
pusha
sub
xchg
cmp
xchg
aaa
or
dec
mov
jg
les
ret
add
lcall
push
jp
pop
sbbb
int3
lahf
jns
or
pop
sbb
xor
addl
ljmp
mov
mov
loopne
jecxz
popf
imul
mov
in
incl
bound
dec
in
mov
sub
les
stc
push
push
aam
fsubrp
pop
mov
mov
and
in
push
push
jle
pop
stos
aad
push
push
addl
mov
mov
fwait
add
sbb
daa
jnp
pop
xchg
push
inc
hlt
or
aaa
cwtl
es
test
xlat
cmc
inc
sbb
stos
push
sahf
es
or
sar
and
pop
lds
out
stc
and
mov
sbb
pop
sbb
mov
push
xchg
and
cmpsb
sub
lcall
cwtl
cmc
dec
pop
xor
pop
xor
pop
mov
xchg
adc
leave
cmpsb
add
dec
sahf
addl
fs
xchg
sub
and
add
jle,pn
test
inc
jmp
pop
mov
push
sbb
fwait
stc
test
or
or
std
pop
out
fmuls
filds
and
test
dec
sub
leave
pop
mov
nop
sbb
jbe
add
gs
fldl
and
fsubrl
sub
inc
ret
inc
dec
xlat
js
inc
les
xchg
int
pop
mov
imul
mov
pop
out
fsubrl
movsb
push
test
cmp
push
jno
test
insb
fstpl
jne
jbe
test
aam
sub
inc
push
fdivrl
adc
in
popf
leave
or
inc
inc
shll
imul
push
mov
or
sbb
cmp
inc
mov
nop
pop
mov
test
inc
icebp
sbbb
lret
or
gs
sbb
sbb
xchg
push
mov
push
dec
mov
sbb
jecxz
aaa
adc
xchg
push
or
adc
call
int
adc
movsb
mov
test
lock
push
jg
scas
scas
push
lret
push
or
lock
push
xchg
xchg
sub
pushl
sbb
inc
push
push
stos
int
or
mov
dec
sbb
in
xor
lret
cltd
shl
lea
xchg
mov
and
inc
dec
ljmp
xchg
sbb
pusha
xor
andb
insl
jecxz
add
sarl
xchg
pop
mov
jne
cmc
rcrl
pop
movsb
add
xchg
mov
call
dec
push
pushf
test
sbb
add
sbb
pop
xor
test
jne
and
pop
sbb
or
lds
addr16
mov
add
mov
adc
sbb
xor
lret
dec
adc
or
movsl
pop
aaa
jp
test
mov
sub
adc
xor
jbe
dec
xlat
pop
scas
xor
lea
sub
aas
cmpl
es
jle
add
test
lret
sarb
fdivl
or
or
jl
push
jne
daa
pop
inc
orl
sub
add
sbb
ror
inc
aas
imul
mov
out
in
inc
push
sbb
sub
repz
test
div
test
mov
test
and
inc
add
adcl
faddp
ss
psllw
dec
addr16
xorb
xchg
jmp
or
fstpl
repz
push
loopne
push
mov
inc
inc
sbb
mov
mov
mov
test
push
sbb
daa
ret
lds
ret
icebp
cmpb
inc
dec
lret
test
sbb
adc
add
shr
gs
jo
or
mov
ja
add
mov
dec
mov
icebp
adc
pop
das
or
notb
xor
or
adc
aam
aas
in
fwait
in
addb
sbb
xor
cli
nop
sub
in
sbbl
fdiv
pop
je
jge
pop
pop
xchg
jge
lahf
cmpsb
add
aam
scas
xor
sar
leave
roll
mov
xchg
js
shlb
push
or
mov
ret
cmp
cwtl
mov
je
add
nop
adc
andl
jl
cmp
ss
or
xchg
cmc
or
mov
sub
add
into
and
scas
fdivrp
ret
stos
lahf
lret
xchg
cmp
in
addb
xor
pop
inc
scas
or
fcompl
scas
jp
pop
arpl
sbb
push
push
and
jg
xor
mov
pusha
inc
out
add
pop
jb
add
test
add
mov
xor
mov
jne
cmp
sbb
push
xor
sbb
insb
insl
sbb
pop
sbb
sub
outsl
jnp
ret
push
mov
xchg
mov
sub
cmpsb
pop
pusha
sbbl
inc
testb
pop
fsts
imul
dec
sub
shlb
leave
add
push
push
mov
popf
push
fwait
out
mov
push
inc
fsubr
arpl
adcb
ljmp
mov
sub
test
sbb
adc
pop
fstpt
and
xchg
mov
jle
pop
cmpb
shrb
leave
dec
push
adc
loop
stos
mov
addr16
sbb
std
push
mov
jno
ss
jo
test
imul
icebp
jbe
sbb
loope
cwtl
sub
push
jg
mov
pop
jbe
ljmp
insb
add
popf
mov
inc
xchg
push
mov
pop
out
add
dec
xor
cmp
sbb
inc
rorl
mov
popa
bound
dec
out
inc
pop
sbb
rcrl
inc
pop
stos
add
push
stos
test
push
sahf
test
xchg
sub
jecxz
imul
cmp
pop
or
rclb
sbb
mov
xchg
pop
aad
fimuls
insl
or
test
xor
icebp
clc
sub
pop
pop
fadds
fucomp
ss
ljmp
cmpsb
adc
imul
mov
leave
ss
dec
mov
mov
stc
mov
outsl
push
arpl
test
xor
or
in
aad
loop
in
push
test
dec
cli
cmp
in
out
movsb
mov
push
out
insb
mov
cmp
sbb
fldcw
add
jno
add
jge
enter
push
add
mov
pop
test
repnz
mov
dec
pop
adc
push
or
pusha
aad
repz
inc
xor
push
int
test
sbb
push
sbb
dec
sahf
test
inc
add
scas
lret
sbb
mov
addb
jne
loop
out
push
imul
mov
mov
into
das
rcll
pushf
or
cli
xchg
les
data16
dec
sub
dec
inc
cmpsb
in
mov
popf
scas
adc
pop
js
rorl
loopne
mov
pop
xchg
imulb
jg
clc
mov
es
xor
stos
int3
push
add
movsb
pop
es
fs
pushf
jnp
sub
sub
imul
aas
adc
mov
enter
daa
lret
xchg
enter
in
push
inc
int3
loope
dec
lods
pop
sahf
rorl
es
fs
push
aaa
ds
sbb
addl
mov
bound
out
lahf
mov
addl
decb
jbe
push
int3
push
fsubl
dec
mov
sbb
and
sbb
mov
jns
sbb
xchg
ja
dec
inc
inc
popa
test
dec
neg
scas
mov
push
mov
cld
fwait
jbe
movsb
cmp
cld
pop
dec
add
fnstcw
fsubrl
pushf
mov
xchg
inc
inc
adc
sub
cmp
add
in
dec
add
arpl
sbb
fisttps
test
xor
into
std
lock
adc
mov
cmp
jle
out
or
pop
push
pop
adcb
mov
xorb
adc
push
scas
sahf
in
mov
sti
test
xorb
ret
push
xchg
push
int
jge
ficompl
xchg
inc
push
fsubl
fs
repz
mov
cltd
add
sbb
mov
pushf
icebp
repz
inc
lds
outsb
sar
push
sti
std
cmpsl
es
lds
sbb
lret
and
xor
push
add
push
mov
xchg
xchg
xchg
lret
orl
rorl
pop
add
jae
xchg
flds
add
mov
sahf
rcrb
jbe
push
mov
stos
stc
fcompl
enter
jle
sahf
pop
or
sbb
xchg
inc
stos
bound
mov
mov
xchg
cmp
xchg
incl
dec
std
stos
push
fiadds
inc
mov
mov
pop
lods
cli
push
fists
push
inc
lret
fidivrl
adcb
lea
jne
sbb
fcoms
clc
jle
push
sub
mov
in
sbb
cli
inc
sti
add
insb
and
mov
scas
roll
jg
add
pusha
gs
addr16
push
leave
outsb
xor
adc
xchg
inc
xchg
daa
dec
lods
sbb
add
stc
push
push
sahf
movsl
xchg
mov
add
xorb
push
add
das
pushf
leave
sbb
push
push
idivl
into
icebp
cld
pop
push
add
jge
add
cmpsl
fdivrl
icebp
int
sbb
push
pop
andb
pop
or
xchg
fcoml
inc
or
push
or
ret
es
test
addr16
in
or
or
sbb
sub
loope
cwtl
fcomip
addl
cwtl
cmp
sbb
les
add
mov
and
dec
sbb
or
jmp
or
pop
imul
jp
pop
lods
add
cmp
outsb
xor
addl
jbe
sahf
cmc
xor
adc
lret
mov
repnz
jmp
xorl
pop
mov
lret
xchg
push
push
xchg
ljmp
negb
jle
fiadds
lds
lock
jp
adc
sub
out
adcb
repnz
push
adc
loopne
leave
aad
add
lret
push
in
mov
and
gs
cltd
pop
mov
adc
popf
cmpsl
mov
sbbb
out
cmp
cmc
call
xchg
popa
add
in
popf
and
xor
jmp
inc
mov
jl
aas
push
mov
orl
push
test
or
mov
mov
daa
add
and
mov
ficoms
push
mov
loope
dec
or
repz
mov
cli
adc
movsl
ret
inc
cmp
lock
adc
nop
adc
and
aad
sub
stos
dec
fdivrs
inc
push
xor
popa
mov
jp
push
push
sbb
in
sbb
repnz
cli
mov
roll
leave
pop
lds
mov
dec
in
popa
push
inc
push
lret
cwtl
or
mov
bound
into
sub
dec
popa
or
jge
inc
push
sbb
cmp
mov
inc
popf
inc
fimull
cmc
jecxz
or
movsb
add
inc
push
sbb
jnp
push
sahf
jmp
es
inc
iret
jnp
push
les
pushf
and
and
sbb
and
daa
int3
pop
enter
pop
in
fcoml
mov
sti
push
repnz
cmp
mov
sbb
sbb
loopne
jl
pusha
pop
js
push
cs
cmp
int
add
push
mov
jnp
lds
adc
sbb
test
jae
xlat
stos
test
shld
adc
out
addr16
mov
jp
int3
and
cmc
xchg
or
sbb
loop
popf
dec
stc
jo
movsb
stos
test
dec
dec
mov
fwait
push
in
insl
pop
sbbb
je
popa
xchg
pop
jno
xor
mov
jns
sub
add
bound
mov
add
jne
jo
aad
ficomps
inc
hlt
fisttpl
sti
push
add
or
lret
leave
lret
mov
mov
or
and
aad
sbb
add
or
fsubp
sub
sbb
fwait
mov
or
rclb
dec
sub
add
lahf
roll
mov
mov
out
jecxz
out
shll
sbbl
jae
jmp
xchg
mov
mov
sbb
xor
fwait
push
repz
int
test
push
add
repnz
and
sbbl
and
lock
xor
xor
ljmp
imul
push
pop
inc
push
movl
jl
mov
adc
push
scas
dec
aam
call
or
sub
adc
mov
xor
sbb
dec
scas
push
les
pop
mov
adc
cli
mov
xchg
test
pop
popa
loope
push
pop
push
add
int3
fadds
dec
mov
popf
loope
jnp
sub
pop
mov
mov
sbb
xor
cmp
jge
lods
out
out
loop
cmp
or
divb
pop
mov
ret
pushf
cltd
add
jne
mov
loope
push
stos
xchg
add
sbb
sub
inc
sbb
frstor
gs
jg
inc
rcr
mov
xlat
in
dec
push
pop
cli
inc
pop
nop
insb
mov
or
lret
cli
sahf
lods
sub
inc
ret
jne
dec
lea
lret
jnp
movsl
or
xchg
lea
xchg
ja
xor
daa
lds
sbb
mov
mov
inc
and
orl
test
roll
mov
es
jg
push
int3
jb
push
mov
add
mov
andl
adc
shrb
and
pushf
movsb
dec
xchg
dec
xor
lock
mov
mov
push
rolb
faddp
sbb
push
loop
jb
jp
add
js
test
movsl
add
sbbb
sub
jb
sbbb
insl
add
pop
int
push
notb
lret
jl
inc
int3
mov
xchg
mov
sub
sarl
and
xchg
jbe
ljmp
pop
jb
notb
push
cs
adc
add
jge
movsb
pop
xchg
cmp
adc
mov
jmp
test
cmpb
mov
bound
inc
lcall
out
jnp
mov
jmp
in
pop
dec
jne
iret
aam
in
test
test
add
xor
pop
inc
daa
dec
inc
add
xor
mov
mov
lgs
push
leave
fbld
call
test
stos
or
xor
jl
xor
mov
loope
mov
jl
mov
div
push
jae
mull
fadd
shrl
fnsave
sub
inc
dec
mov
push
fcompl
xchg
push
xchg
inc
lret
add
call
es
cltd
jmp
pop
sbb
mov
cltd
xchg
imul
dec
dec
out
dec
imul
push
fucomp
xchg
push
popa
sbb
dec
mov
pusha
cmc
subb
dec
pop
inc
repz
fisubs
or
shll
mov
add
inc
out
adc
push
inc
das
push
push
xchg
mov
mov
negl
jecxz
shl
and
sub
xor
sbb
fsubrs
push
gs
add
mov
sub
xor
mov
cli
test
scas
inc
pop
xchg
dec
or
push
pop
out
aam
paddsw
pop
inc
pop
xchg
pop
jno
inc
sub
inc
icebp
aas
fsubrp
mov
jle
xchg
std
lret
xor
fdivrl
push
sbb
movsl
and
mov
add
pop
dec
mov
fisubs
xchg
jns
cmp
mov
sbbb
add
and
sub
inc
out
lds
je
lds
pushf
insl
inc
inc
scas
jbe
sub
shlb
xchg
mov
push
jnp
adc
xchg
mov
sub
mov
lds
adc
fisubs
jp
movsl
andb
insl
andl
push
scas
data16
pop
push
test
loop
lods
jnp
orl
dec
dec
mov
add
dec
mov
mov
mov
enter
aaa
addr16
dec
push
fbstp
cmp
in
leave
ljmp
fldl
dec
push
sbb
inc
jle
or
sub
pop
movsl
ds
scas
sbb
pop
adc
or
sub
adc
jecxz
stos
or
test
jecxz
sub
adc
jle
lock
ljmp
cltd
mov
push
add
mov
out
xchg
std
or
jnp
in
repz
data16
div
gs
adc
or
and
enter
add
pop
lahf
pushf
and
test
push
in
daa
ret
icebp
inc
je
scas
aaa
sahf
mov
cmpsb
pop
rol
or
mov
inc
shl
add
cs
add
xchg
xor
fisttps
sbb
pushf
bound
cmpl
mov
hlt
mov
xchg
xor
push
mov
adcl
inc
nop/reserved
popf
lcall
sub
jle
dec
pop
mov
add
or
xor
cmpsb
sub
mov
sbb
or
jg
mov
repz
int
lock
or
mov
jge
xor
mov
add
add
enter
mov
mov
je
or
insb
xor
pop
jno
mov
push
add
adc
out
xchg
loop
int
mov
lcall
popf
and
sbb
ret
push
adc
addl
cmpsb
and
hlt
fstps
or
push
push
mov
ret
aam
mov
sahf
sti
cmpb
or
test
sahf
pop
enter
dec
fcompl
sbb
js
inc
or
aad
push
pop
mov
out
fs
push
jle,pt
inc
fwait
ja
int
lcall
cmc
mov
nop
lock
sets
inc
or
mov
lcall
fs
inc
xchg
mov
data16
or
rol
call
and
or
data16
rol
repz
pop
or
in
push
jbe
jl
mov
dec
popf
mov
add
adc
pop
sbb
insl
sbb
fstl
dec
gs
arpl
pop
stos
adc
std
rcl
enter
cld
add
mov
push
inc
std
in
dec
jne
sbb
xor
jnp
sub
dec
and
xchg
sub
in
mov
mov
pushf
es
or
pop
jne
movsl
jmp
jno
xchg
sbb
daa
enter
ja
shll
jmp
push
adc
jle
lcall
sbb
pop
fldl
xchg
sub
sbbb
push
fstpt
jno
out
and
cmp
dec
inc
pop
outsb
push
sbbl
xchg
sbb
mov
out
push
add
mov
push
mov
xchg
int3
dec
mov
mov
push
sahf
popa
or
xchg
pop
cld
xchg
icebp
js
das
jge
das
sbb
icebp
out
adc
push
enter
sbb
imul
adc
inc
add
dec
sti
jbe
push
dec
std
loop
mov
sub
xchg
jne
jns
popf
push
mov
and
jg
rcrb
dec
shrb
push
adc
imul
lods
flds
adc
shlb
adcb
stc
mov
xor
aad
sbb
xchg
scas
sbb
dec
lahf
mov
lea
das
jp
push
and
out
inc
sahf
sbb
data16
jg
and
test
sbb
mov
aas
lahf
jecxz
dec
sbb
mov
aam
or
aad
jne
mov
xlat
sbbb
pop
jae
or
popa
dec
out
and
aas
fwait
addb
mov
outsb
pop
pusha
popa
push
rcr
sbb
out
xchg
stc
lcall
pop
sbb
orb
fistpl
inc
ret
aas
imul
mov
insb
or
xchg
or
mov
rcrb
inc
pop
mov
es
mov
mov
jb
mov
jp
lahf
mov
in
jmp
adc
or
dec
shl
cmp
or
cli
outsb
arpl
dec
jg
cld
mov
mov
pop
data16
ss
xchg
jl
ds
lret
and
sbb
lock
mov
pop
out
inc
rorl
mov
add
test
mov
xchg
lods
add
je
outsb
mov
adc
popf
mov
fdivr
std
fists
cmp
mov
mov
or
sub
or
push
cmp
loop
lea
push
xchg
dec
add
pusha
repnz
cmp
mov
cmp
dec
pusha
mov
pushf
cltd
xchg
int
push
nop
jns
lret
lret
pop
jno
mov
roll
lahf
in
loop
sti
cmc
jg
addb
cmp
mov
fcoml
pop
cltd
xchg
ss
mov
jbe
movsl
or
mov
loop
cmc
cmpsl
test
cld
mov
push
adc
or
shlb
clc
xchg
xor
add
adc
pop
jecxz
ret
jp
adc
ja
sahf
add
je
sbb
xchg
inc
pop
adc
sti
push
mov
push
cmpsb
bound
push
jge
aam
xor
sbb
andl
popf
fisubrs
jno
mov
dec
dec
dec
ja
test
mov
les
xchg
nop
sbb
lret
sub
sub
cmpsl
subb
dec
enter
js
cmp
cmpsl
mov
lea
jbe
ret
sub
mov
lds
shll
js
loope
dec
je
mov
not
popa
or
sbb
xlat
in
jp
pop
jne
leave
dec
push
jle
inc
pop
xchg
and
or
sbb
and
mov
cmp
push
in
aad
push
inc
mov
arpl
loope
dec
push
xchg
shll
adc
lcall
pop
xlat
add
pop
mov
shl
loope
arpl
adc
cmc
push
paddq
add
fisubl
jbe
push
enter
sbb
pusha
ja
cmp
data16
insl
xchg
pushf
mov
xchg
mov
ret
mov
pop
in
xchg
mov
jo
jmp
sbb
imul
loopne
dec
push
lret
mov
xlat
repz
loope
jp
leave
dec
jnp
inc
mov
push
shl
lcall
jl
cmc
or
sub
stc
sub
jae
iret
out
sbb
jns
inc
daa
jmp
sbb
lret
cmc
jmp
or
fadd
mov
imul
mov
mov
dec
mov
jno
gs
or
mov
daa
dec
addb
sahf
sub
add
add
push
sti
inc
decl
jb
fucomi
enter
out
push
adc
dec
outsb
inc
popa
scas
aad
in
pop
push
in
xchg
jae
gs
adc
xor
cltd
jae
loope
dec
sbb
adc
adc
out
ss
pop
movsl
sbb
inc
lea
cmp
out
fstpl
sbbb
int3
sub
repz
insb
rclb
aam
adc
sbb
orl
xchg
fwait
xor
add
mov
jno
dec
add
pop
pop
insb
pusha
dec
idiv
push
cmp
mov
jl
mov
add
jg
lds
inc
mov
scas
insl
outsl
inc
adc
or
push
cmp
dec
jl
ret
add
cwtl
or
push
inc
lcall
lahf
leave
lock
push
push
push
sbb
inc
dec
rorl
outsb
pop
lahf
adc
push
lods
pop
push
add
call
cmc
test
fs
cmpsb
jo
push
add
jnp
lea
ret
mov
cli
mov
cmp
mov
fldt
pop
dec
xchg
rcrb
das
jbe
jno
sub
enter
test
fsubrl
jmp
push
repz
xchg
xor
scas
mov
lahf
sbb
pop
xchg
repnz
fldenv
push
sbb
ds
jp
insl
jg
insl
or
sbb
popa
xchg
or
daa
cld
fs
out
pop
outsb
or
cmp
inc
inc
lret
insb
inc
jge
sbb
cld
aaa
cmpsb
jecxz
adc
xchg
lret
icebp
lds
mov
xor
sbb
mov
out
or
adc
push
add
pop
push
fimuls
or
add
inc
bound
lods
push
in
or
sahf
jle
mov
xor
jecxz
add
ss
test
in
dec
pop
mov
fdivrs
mov
aam
insl
jle
cmpsb
jnp
dec
outsb
lock
pop
dec
lock
sahf
xchg
lahf
pop
rolb
lds
lds
inc
pop
jl
js
inc
ljmp
mov
movsb
mov
dec
jmp
sub
sbb
dec
mov
sub
cmc
mov
pop
dec
gs
roll
mov
sub
add
cld
mov
adc
ss
and
les
std
jge
cmpb
stos
out
rcrb
outsb
cmp
rcll
jne
call
xchg
jno
mov
js
or
in
leave
data16
inc
int3
insl
cmp
inc
adc
mov
stc
sarl
inc
dec
lds
das
jg
int3
add
mov
std
lds
bound
mov
push
int3
mov
cmpsl
xchg
and
or
and
enter
imul
jecxz
inc
cmp
scas
inc
out
nop
jp
cmp
xor
or
adc
sbb
fs
inc
idivl
cmp
adc
xchg
sub
or
cwtl
cmp
cmpl
add
sbb
xor
cli
xchg
call
movsl
or
push
add
jno
cmp
stos
inc
scas
in
mov
leave
push
fst
adc
jno
mov
mov
sbb
sbb
test
out
into
flds
ror
pop
lcall
inc
cs
xchg
push
shlb
addl
push
jns
xchg
fcomi
xlat
popf
mov
adc
filds
add
lock
out
and
push
pop
lcall
mov
push
push
inc
push
xor
inc
push
or
sub
imul
es
pop
movsl
sbb
outsb
and
aad
outsb
imul
popf
pop
push
push
pusha
mov
std
test
jge
xchg
or
pop
cmpsb
cwtl
mov
add
lods
lret
inc
sbbl
sahf
mov
repnz
push
mov
and
push
fldl
enter
pop
inc
mov
xchg
lret
stos
addl
sbb
and
mov
sbb
add
popf
dec
add
or
jle
idivb
xor
nop
sti
pop
xor
cltd
nop
arpl
aad
sub
or
dec
push
lds
clc
xchg
mov
push
jmp
cmp
gs
pop
popf
xchg
fs
pop
andl
pop
rcr
dec
sahf
pop
or
mov
stos
or
nop
sbb
movsb
inc
or
pop
add
inc
fwait
sbb
mov
sub
fprem1
or
sahf
imul
and
push
es
mov
das
pop
cmp
dec
loopne
sbb
fidivrs
repz
stos
fs
ja
loope
shrb
aaa
imul
pop
dec
in
or
jp
add
test
lcall
jmp
cltd
pop
mov
xchg
out
mov
pop
push
in
ret
cmp
icebp
xchg
addr16
loopne
test
xchg
jbe
loopne
cmp
cld
arpl
jbe
cmp
lret
insb
shll
icebp
pushf
push
pop
jmp
or
cwtl
jae
data16
cmc
fwait
orl
rolb
push
rorl
rcrl
aam
inc
bound
sbb
push
enter
add
out
push
dec
add
out
lret
cmp
adcl
cmpsb
gs
sbb
mov
fs
adc
inc
pop
rol
lcall
notl
mov
dec
fists
addps
xchg
and
ffree
sbb
sub
sub
or
inc
js
push
adc
push
dec
inc
mov
lods
mov
xorl
test
inc
in
fs
and
and
mov
rclb
pushf
testb
enter
push
call
mov
je
cs
inc
cmp
mov
mov
mov
stos
sbb
cld
test
and
arpl
es
enter
jp
push
jp
rorl
sbb
sbb
inc
scas
jne
xor
or
cmp
mov
andl
sahf
faddl
gs
lahf
fdivl
in
and
or
stc
cltd
adc
mov
lcall
inc
shlb
insl
arpl
fadds
daa
or
push
push
loop
inc
lds
adc
out
or
adc
jmp
cmp
inc
iret
pushf
test
lret
xchg
popf
xchg
lds
jp
stos
xor
loop
cmc
mov
mov
icebp
and
add
mov
pusha
pop
push
inc
lcall
mov
out
loop
push
sub
out
ja
jne
jnp
sahf
sahf
cwtl
dec
sub
repnz
shlb
jb
out
lcall
mov
or
lods
mov
add
jbe
icebp
imul
in
and
xor
fwait
and
in
aas
jge
test
push
cmc
mov
pop
xchg
mov
mov
jns
add
jne
and
mov
insb
xchg
inc
dec
rcll
push
inc
insb
push
into
inc
pop
fwait
pop
cmpsb
mov
iret
lds
xchg
mov
push
push
dec
aad
lahf
pop
or
jmp
xchg
imul
orl
push
popf
fisttpll
push
int3
and
add
pop
xchg
mov
repz
fnstsw
sbb
jge
test
lret
sbb
add
or
and
push
add
cli
insb
mov
jecxz
mov
mov
pop
pop
ret
lods
sbb
sbb
inc
mov
adc
add
mov
loope
jbe
ret
push
aad
adc
xor
xchg
mov
pop
push
cmc
mov
pop
and
mov
xor
push
stos
stos
dec
in
push
mov
fs
mov
pop
dec
idivb
and
prefetch
jbe
mov
mov
xor
push
sar
fnstsw
jbe
sbb
push
push
cltd
cltd
out
mov
inc
sbb
orb
or
xor
pop
push
push
in
cmp
xchg
xchg
pushf
insl
push
sbb
cmp
mov
mov
mov
ja
push
mov
nop
mov
jge
aas
cmpl
dec
ss
imul
push
sbb
cld
xor
pop
addb
ret
xor
push
addl
cwtl
sub
inc
mov
or
jl
iret
push
ja
dec
pop
jl
mov
fdivl
out
jp
dec
mov
dec
jge
mov
xor
lds
cli
mov
sbb
mov
cli
mov
or
into
jo
rorb
popf
repnz
adcl
fimull
or
jne
cmp
cmc
aam
and
mov
xchg
fisttpll
jns
and
xchg
or
inc
xor
fsub
add
jecxz
ds
in
mov
lahf
in
fwait
pop
or
cmp
imul
hlt
pop
pop
pop
push
mov
or
jge
fst
pushf
inc
fmul
icebp
or
shll
add
xor
outsl
xchg
call
sbb
insb
shlb
cmc
pop
lcall
and
out
out
jns
stos
jne
inc
mov
cmp
mov
inc
repz
cmp
gs
sub
mov
int
mov
cmpl
lahf
xchg
cmp
or
jne
push
je
adc
push
lcall
std
lret
ret
push
icebp
xchg
fst
dec
dec
pop
rolb
rcrl
fsubr
push
push
bound
shll
pop
test
jp
clc
push
dec
loop
jb
ds
xor
aas
loope
pop
dec
pop
inc
push
dec
add
lret
lock
adc
insl
push
lods
mov
icebp
sub
lds
pushf
adc
cmp
bound
and
lods
in
nop
sub
xchg
cmp
icebp
addr16
mov
inc
leave
pop
jb
mov
inc
xchg
fs
mov
daa
imul
jne
dec
push
sti
push
xlat
incb
sub
dec
lds
xor
cmp
mov
xchg
jno
mov
mov
add
and
sub
movsb
and
sbb
loopne
adc
orl
cmp
mov
ljmp
imul
sbb
andl
jns
mov
imul
push
push
popa
scas
inc
ss
push
fisubl
dec
inc
aas
xchg
imul
rcrl
mov
divl
jmp
dec
fs
jnp
out
and
mov
dec
aad
xchg
mov
int3
gs
xor
call
int3
inc
push
imul
repz
ds
push
cmc
ret
mov
adcb
jb
in
and
cltd
fmull
lahf
data16
and
shll
popa
sbb
push
and
push
or
lahf
cmp
dec
pop
push
and
fistps
orl
mov
xchg
out
leave
jbe
push
or
pop
aad
inc
loope
cmp
add
mov
inc
insb
ret
bound
fistpl
xor
stc
fnstcw
dec
pop
xchg
fcompl
xor
pop
pop
orl
pop
push
lock
lds
ja
and
sub
add
test
movsl
shll
xor
inc
mov
jl
pop
or
stos
push
cltd
sbb
loopne
mov
sub
mov
scas
cmp
push
arpl
xchg
stos
int3
sbb
test
add
sbb
dec
mov
sarl
push
mov
add
gs
rolb
or
adc
int
fwait
add
testb
stos
rcr
mov
push
mov
mov
inc
roll
pop
push
push
pop
jecxz
insl
stos
cld
insb
push
int
jmp
and
leave
xor
and
ds
add
pop
jae
fisubl
push
or
in
xchg
xchg
repz
cli
mov
dec
popf
stos
jg
fsubr
sbb
pop
add
xchg
push
sub
xchg
in
xchg
or
mov
cmc
lock
xchg
mov
jne
push
hlt
add
dec
adc
stos
nop
inc
sbb
mov
and
jae
in
pop
jo
stc
arpl
in
jg
or
icebp
fisubrl
loope
mov
lds
test
mov
inc
adc
rolb
or
test
mov
int3
mov
sbb
movsl
xchg
aad
in
sub
gs
orl
add
imul
push
mov
jge
add
and
mov
subb
xchg
dec
jle
mov
dec
out
inc
xor
or
sub
aad
adc
in
or
mov
inc
cmpsb
add
dec
in
jae
mov
rcrl
xorl
or
mov
popaw
or
jae
and
jp
cmc
in
inc
arpl
fs
std
xchg
aas
mov
test
cmp
mov
mov
add
seto
movsb
jbe
out
lahf
dec
pop
xorb
push
push
lea
push
inc
lods
jnp
mov
rcll
shlb
loopne
pop
and
int3
add
push
cmp
add
lods
adc
pop
rcrl
lea
stos
hlt
shl
xorb
jae
dec
out
int3
lahf
scas
sub
iret
or
push
test
sub
inc
mov
dec
push
es
adc
jecxz
xchg
mov
xchg
xchg
ljmp
xor
imul
gs
dec
mov
pop
jne
mul
test
movb
xchg
adc
xchg
test
repz
xchg
jg
xor
icebp
push
dec
popf
mov
jge
out
xorl
inc
or
gs
xor
dec
lds
cmp
push
aad
push
stos
or
filds
jo
orb
push
loope
and
inc
mov
les
sub
mov
jbe
arpl
xchg
ja
mov
push
adcl
sbb
push
dec
jbe
lds
xchg
jae
in
fcoms
pusha
outsb
sarb
jmp
sub
jmp
push
ret
xchg
sbb
ficomps
shll
inc
popa
xor
cmpsl
adc
mov
mov
fnstcw
jmp
subb
pushf
xchg
popf
sbbl
jae
ret
loop
rcrb
rorl
jns
out
mov
push
mov
and
test
mov
cmp
and
mov
lds
xchg
cmp
xor
subl
sbb
jecxz
jb
mov
jg
push
aad
sub
or
nop
jge
cmp
xor
pop
popf
adc
sub
es
jns
xchg
popa
mov
cmc
mull
push
xchg
sub
sbb
or
sbbb
or
dec
and
in
dec
inc
or
pop
repz
inc
xor
shlb
xchg
mov
cmc
lods
sbb
fwait
push
mov
scas
adc
out
mov
mov
or
add
mov
pop
lcall
in
jns
js
jno
pop
mov
imul
sub
push
dec
lcall
inc
rorb
out
into
sarb
stos
mov
push
adc
js
adc
mov
inc
inc
stc
add
pop
sbb
test
mov
cmpsl
les
xor
sbb
roll
lods
xchg
push
sbb
dec
pop
ja
das
pmuludq
xlat
or
fisttps
inc
lahf
xchg
fmull
fidivl
mov
pusha
mov
mov
sub
push
cmp
data16
jge,pt
lcall
frstor
or
scas
call
pop
es
mov
mov
mov
mov
mov
loop
pushf
outsl
push
subb
push
roll
sbb
stos
and
lods
loop
dec
inc
stos
scas
push
cmp
sbb
mov
and
movsl
insl
pusha
or
das
push
inc
jmp
test
imull
sub
push
or
pop
jbe
push
subl
aam
or
stos
int
cmp
daa
jp
dec
pop
sbb
data16
cs
lods
popa
orb
add
ficoms
lock
insl
sbb
lcall
jg
xchg
andl
mov
mulw
push
fcomps
roll
inc
dec
adc
cli
push
loop
into
xchg
sub
add
daa
roll
insl
hlt
xor
xchg
leave
push
xchg
pushl
dec
push
fiaddl
jg
imul
sub
add
aam
pop
jns
sbb
mov
pop
lret
adc
and
sbb
inc
mov
cmpl
push
xor
sbb
mov
sarl
pusha
mov
adc
or
xor
inc
inc
or
mov
xchg
fcompl
adcl
jp
jb
or
mov
ja
pop
jg
in
sub
push
jp
and
cmc
xchg
jno
xor
xchg
imul
mov
leave
xor
jle
lret
cmpb
or
bound
mov
mov
and
fnstsw
mov
int3
mov
mov
pop
sub
dec
adc
mov
sbb
mov
pop
sbb
mov
push
sahf
inc
push
mov
add
pop
sbb
sbb
pop
lcall
addl
out
fwait
lret
in
enter
xor
xchg
jne
imul
dec
in
pop
jecxz
push
les
lcall
add
addb
mov
add
aad
pop
lea
adc
inc
ja
lahf
stos
bnd
sbb
sub
push
xchg
push
xchg
push
add
fsub
dec
mov
mov
test
lret
push
and
lahf
out
das
pop
out
nop
in
leave
xor
sbb
in
push
push
inc
adc
push
push
jecxz
xor
leave
mov
and
dec
ljmp
cmp
xor
or
mov
insb
pop
loope
imul
rorl
sahf
jnp
adc
cli
sbb
and
add
cli
lret
adc
adc
stc
sbb
inc
jb
inc
pop
pop
mov
cmp
sub
inc
inc
shll
jne
test
sbb
xor
mov
cmc
cltd
pop
popf
and
jbe
inc
fcoms
cmpsl
repz
and
cmpsb
cmp
hlt
test
mov
sbb
jmp
and
adc
dec
or
inc
popf
daa
insb
and
fs
xor
jg
and
cld
mov
mov
inc
add
jl
mov
adc
sbb
add
sub
ljmp
daa
mov
leave
push
xchg
pusha
push
cs
pusha
sub
push
xchg
sub
repnz
add
adcl
cwtl
sbb
jp
mov
mov
push
pop
jmp
add
je
mov
aad
fistl
adc
xor
push
rcll
subb
sbb
sbb
insb
push
cmp
sbb
xchg
stos
lahf
mov
and
add
dec
jmp
jne
sbbb
sbb
into
les
lcall
sarb
fsubr
cmp
and
sub
cmp
pop
leave
insb
out
sbb
bound
fwait
xchg
stos
adc
jge
inc
jmp
cli
sub
fs
add
sahf
pop
gs
dec
xchg
mov
mov
sti
push
jo
dec
inc
imul
pop
enter
xor
and
cmc
or
pusha
fmuls
mov
add
push
pop
call
pushf
incb
cmp
out
jp
mov
lea
jmp
push
mov
sahf
stc
mov
repnz
cmp
mov
mov
lret
inc
iret
pop
fcompp
dec
out
jmp
imul
push
dec
push
decl
aam
jp
fs
adc
sar
je
cld
sub
push
or
sbb
dec
sub
das
pusha
mov
pop
fnstcw
stc
or
pop
es
aam
pop
xchg
loope
xor
pop
sbb
in
xor
xchg
int3
addb
xchg
out
ror
popf
in
add
xchg
insb
seta
sbb
and
xor
mov
enterw
cli
sbb
add
and
cmp
cmc
mov
lock
cli
push
movb
mov
and
popf
mov
sbb
pop
loop
push
mov
es
dec
dec
jg
fsubrl
jle
jbe
xor
mov
repnz
inc
mov
leave
insl
push
lods
jge
outsb
in
jno
stos
adc
push
popf
xorl
pop
xchg
js
adc
or
inc
fimull
mov
out
push
adcw
jp
add
xchg
or
dec
sub
and
out
daa
cltd
fdivrs
mov
push
push
mov
push
xchg
loope
or
aam
adc
lret
scas
insl
test
inc
es
sbb
push
add
flds
stc
pop
push
pop
sub
les
push
inc
or
mov
add
loopne
push
out
fsts
push
daa
das
inc
push
mov
lock
repz
xchg
shlb
pop
lock
and
xchg
push
fcmovu
gs
sahf
cmp
popa
ret
pop
xchg
fstpt
ficompl
hlt
push
aaa
mov
cmp
repnz
cs
bnd
scas
sbb
jp
sub
inc
add
adc
lods
es
jno
cmpsb
mov
fisubrl
sbb
cmp
shrb
ret
add
icebp
fidivs
cmp
gs
sub
sub
pop
cmp
xor
dec
jge
mov
jbe
pop
or
pop
orb
and
in
rol
mov
outsl
and
xor
add
mov
sbb
sub
in
test
push
pushl
push
jo
jl
sahf
xchg
jp
push
add
jae
loope
jl
xchg
pop
das
adc
into
test
inc
pop
daa
xor
out
pop
pop
jle
sub
dec
test
mov
repz
push
xor
out
and
nop
lret
pop
idiv
xchg
clc
or
mov
sbb
mov
jge
or
xchg
vfrczss
lret
loope
push
cmp
inc
aas
incl
add
cmp
out
aaa
ret
sbb
or
lods
jle
sbb
or
inc
add
scas
xchg
mov
jmp
in
out
add
push
ljmp
loopne
addw
cld
lcall
gs
push
ds
pushf
xor
fcomi
inc
pushf
xor
or
movl
sbb
cli
sti
inc
push
pop
shrl
movl
in
xchg
mov
and
dec
mov
out
data16
cwtl
mov
in
pop
sbb
in
sub
mov
test
mov
loop
cmp
dec
test
ljmp
pop
and
xor
fmull
data16
add
fcoms
push
pop
adcl
and
push
mov
lea
lods
push
mov
pop
dec
jge
cmp
in
adc
pop
or
sbb
test
adc
sbb
std
pop
popa
mov
pop
inc
mov
dec
fst
in
in
add
add
sbb
sbb
and
xorb
neg
and
and
jne
mov
loope
sahf
ret
popf
mov
ret
loope
dec
or
aas
inc
add
and
repz
leave
push
testb
sub
rcrl
and
ret
gs
push
jbe
adc
or
mov
jns
jne
in
jb
adc
arpl
lret
movsb
inc
fucomp
xor
xchg
inc
pop
xor
jg
add
dec
dec
insb
pushf
or
fwait
inc
sub
fistpl
lret
stos
ja
in
test
inc
int
adcl
test
xchg
pop
mov
ds
push
mov
push
jle
mov
xchg
add
mov
insl
test
xchg
jbe
sbb
mov
orl
cmp
fst
fildl
xchg
pushf
icebp
andb
xchg
pushf
mov
add
jbe
jnp
fidivl
loopne
sbb
jmp
add
inc
movsb
or
or
into
sbb
mov
pop
push
test
xor
sbb
or
adc
icebp
jb
xchg
cld
dec
mov
lret
adc
xchg
lret
pop
mov
and
cmp
dec
push
inc
clc
mov
pop
push
inc
fdivs
fisttpll
push
mov
mov
xor
roll
sbb
or
sub
loopne
xchg
jnp
outsb
jecxz
data16
lods
and
sbb
loopne
add
daa
mov
out
call
pushf
sbb
xchg
cmp
mov
fistl
mov
outsb
dec
shlb
push
sbb
cwtl
notb
stc
repnz
test
sbb
fidivrs
push
inc
jo
jmp
mov
dec
push
adc
or
loopne
pop
sbb
xchg
cmp
fcoml
or
dec
mov
adc
sbb
cltd
pop
movsb
jbe
test
mov
sub
sahf
pop
jnp
mov
inc
push
dec
adc
jge
ljmp
jne
jae
daa
in
sub
xor
cltd
out
adc
pop
inc
aam
sbb
and
repnz
mov
loop
inc
add
jle
xchg
inc
xor
mov
in
adc
pop
xchg
negl
insb
sbb
jo
notl
pusha
add
xchg
xchg
dec
jo
filds
sbb
pop
lret
dec
and
lret
or
arpl
cmp
pop
loope
pop
fsubrs
add
jp
push
andb
xor
add
sub
or
pop
mov
outsb
leave
and
aad
adc
dec
mov
movsl
out
arpl
jg
dec
icebp
in
mov
rol
lods
lret
mov
mov
femms
jns
inc
lods
ret
sub
xor
xor
jno
push
scas
adc
jae
clc
pop
fcomi
mov
sbb
or
call
test
jp
data16
cmpsl
scas
cmp
and
xchg
lret
jmp
lods
xchg
xchg
mov
mov
pop
mov
shll
mov
int3
pop
dec
adc
xchg
mov
jg
ror
fcomi
push
outsl
imul
lock
out
addr16
and
sub
dec
inc
fdivrs
in
push
xchg
inc
jmp
sbbl
mov
mov
adc
in
xorb
aad
ja
inc
stc
xchg
adc
jp
fdivs
lahf
and
call
popa
pop
ljmp
outsl
cmp
daa
lahf
xchg
and
xchg
inc
sub
leave
pop
pusha
sti
loope
test
clc
int
aad
test
inc
sbb
push
icebp
mul
push
jnp
jp
fbstp
adc
or
dec
xchg
cmp
jmp
sub
mov
dec
jb
cltd
ret
rcrl
stos
fwait
cmp
out
mov
adc
xchg
cmp
push
dec
sbb
ss
mov
ja
addr16
sbb
scas
xchg
dec
jge
icebp
mov
or
pop
sbb
inc
test
ficoml
and
pop
jns
jnp
jle
pop
jg
mov
in
stos
jecxz
cmp
xadd
mov
xchg
or
in
fbstp
loopne
push
xor
mov
fists
jno
or
int3
xchg
mov
dec
gs
mov
loope
dec
mov
cwtl
jb
sub
cmp
jbe
inc
pop
mov
pushf
push
mov
fstpt
push
inc
in
icebp
xor
xor
mov
adc
rolb
add
cmp
jmp
pop
pusha
repnz
lahf
mov
xchg
sahf
pop
push
cmp
and
and
lcall
je
xchg
into
jbe
lahf
pop
push
sbb
cmpsl
pop
enter
adc
imul
sub
and
ljmp
cld
into
dec
icebp
cmc
lea
mov
or
int3
outsl
lea
or
pop
add
inc
in
mov
push
lea
fisttps
push
xchg
sbb
ret
jg
push
sbb
stc
roll
sub
jg
xchg
and
cmp
mov
mov
out
jmp
inc
xlat
jecxz
cmp
pop
push
jne
data16
xchg
imul
cld
repz
add
mov
lods
in
seta
nop
insl
xor
dec
std
push
inc
sbb
push
in
inc
std
inc
aaa
pusha
cld
aaa
add
scas
or
jle
int
jmp
xor
cltd
je
xor
ljmp
sub
add
inc
and
jbe
xorb
iret
pop
sbb
inc
mov
data16
add
jle
inc
ds
add
andl
or
lret
fnsave
fcoml
fimull
mov
pop
cmove
xchg
push
jbe
pop
or
mov
fstpt
popf
push
mov
sbb
lahf
mov
cmp
ret
shl
inc
pusha
icebp
pop
or
mov
addl
int
sub
push
push
mov
mov
jmp
lret
adc
clc
repz
ljmp
cmp
sbb
clc
out
xchg
fs
xor
pop
sbbl
mov
ljmp
insl
sbb
cmp
cmpsb
insb
mov
or
fisubs
ret
in
daa
sbb
ret
mov
xchg
pop
jp
clc
cmpsb
mov
inc
push
push
nop
and
mov
sbb
scas
xchg
cmp
gs
ss
in
push
xor
xor
push
rcll
sahf
jg
sbb
push
cwtl
fwait
mov
sub
pop
and
jne
push
in
lahf
add
adc
js
rolb
push
outsb
nop
pop
call
dec
rolb
mov
and
dec
and
sbb
aad
or
sub
dec
pop
loop
sbb
xchg
out
add
in
sub
lds
dec
aaa
mov
ljmp
cli
cltd
fidivrl
imul
sahf
adc
sbb
and
cmp
addr16
inc
mov
cmpsl
or
adc
jp
pop
mov
xor
add
insl
stos
jmp
into
push
leave
sbb
cmp
inc
xchg
repz
or
ljmp
lcall
inc
sbb
push
ss
pop
pop
xor
jne
rcrb
and
and
push
gs
or
fstpl
adc
xchg
sbb
push
pop
jle
mov
ljmp
lds
dec
xchg
insl
push
adc
insl
sbb
outsl
push
jge
loope
or
loop
mov
mov
ss
push
push
ljmp
pop
lods
push
aas
test
in
iret
stos
and
addl
xchg
dec
js
sarb
add
xchg
cmpsb
jns
int
xchg
addr16
test
pop
push
lret
and
sbb
test
stc
popa
mov
sbb
mov
gs
call
fisubrl
push
das
mov
popf
xchg
fistpll
imul
push
push
stos
lret
popa
repz
sub
inc
sbb
cmc
push
pop
cmp
sbb
test
jp
sbb
xor
dec
pop
mov
sbb
inc
push
mov
mov
arpl
inc
insl
xchg
icebp
insb
xchg
fsts
repz
addr16
in
pushf
dec
sub
mov
insb
mov
jle
jmp
lcall
aas
mov
clc
lds
repnz
stos
add
gs
mov
out
popf
popf
pushf
sbb
std
nop
call
inc
addb
clc
mov
xlat
pop
movsl
fwait
lea
sub
call
cmpsl
outsl
inc
cli
mov
leave
push
pop
push
push
pusha
pop
mov
test
dec
sbb
lods
fidivrl
js
and
jne
xor
seta
inc
out
rol
mov
adc
dec
jae
push
pop
sti
lahf
mov
icebp
dec
cmp
subb
mov
imul
cmc
les
add
sub
or
popf
vpshufhw
rorl
or
dec
into
inc
pop
cli
pop
xchg
fucomp
cmp
or
push
adc
sub
fimull
or
jb
mov
xor
add
push
hlt
jne
rorl
jg
inc
jl
cli
cltd
les
in
inc
lock
shr
cmp
rorl
or
sub
push
mov
lds
int
mov
mov
mov
flds
sahf
andl
mov
dec
jl
scas
cli
cmc
adc
ret
movsb
sbb
jne
imul
jle
xor
push
ljmp
or
xchg
push
dec
xchg
mov
jmp
push
adc
nop
lock
lea
inc
pusha
das
cmp
and
call
mov
cmp
mov
push
cmp
test
sbbl
fstpt
adc
mov
jg
push
push
pop
sbb
inc
fidivrl
jmp
push
inc
iret
or
js
and
sbb
mov
lods
mov
lea
push
push
adc
leave
xchg
test
sbb
jns
cmp
pop
sahf
test
push
fimull
cmp
push
jp
xchg
das
add
es
lds
push
pop
lahf
dec
pushf
sbb
jge
mov
ja
lods
mov
xlat
inc
jo
fldcw
leave
pop
push
imul
push
pmullw
insb
bound
and
push
nop
xor
sbb
and
repz
jne
dec
jnp
and
imul
push
mov
imul
push
push
ljmp
xchg
lahf
add
push
leave
pop
mov
cmc
leave
add
add
rcrb
repz
bound
sub
jnp
adcb
icebp
add
lods
ret
pop
cltd
pop
push
movb
and
sub
adc
inc
mov
fmul
inc
sbb
jp
nop
adc
incl
jno
xor
pop
xchg
add
jle
test
outsb
sbb
rcll
pop
mov
push
add
sahf
inc
aam
sbb
adc
jbe
and
adc
hlt
or
imul
push
xchg
fwait
sarl
addb
push
stos
nop
ret
xchg
sbb
pop
in
popf
ret
stos
adc
orl
fsubr
add
or
jg
fidivrl
mov
mov
insb
lahf
stos
imulb
ret
fidivrl
popa
imul
inc
lods
jge
filds
and
xor
lea
inc
pop
dec
std
in
sbb
inc
push
decl
sbb
xchg
rolb
std
cmc
xor
insb
inc
push
adc
dec
scas
mov
mov
add
push
add
je
push
jge
in
stc
push
fmull
shrb
gs
xchg
js
gs
or
jmp
cmp
jnp
les
mov
sub
jnp
test
ja
add
les
rcrl
adc
pop
cmpl
pusha
daa
xor
adc
push
aam
shrl
cmp
gs
pop
fld
les
lods
jge
mov
or
dec
jp
aaa
and
stc
push
dec
mov
out
call
fwait
jbe
insl
mov
and
jle
inc
mov
arpl
repnz
fsts
mov
mov
cmp
fs
mov
push
sub
stc
xchg
inc
and
jg
push
inc
ja
data16
and
and
lock
or
jne
or
neg
imul
aas
shrb
ret
adc
pushf
sub
mov
dec
xor
pop
pop
addr16
sbb
inc
jne
jns
cld
dec
inc
notb
inc
les
mov
scas
pop
cld
cmc
std
imul
imul
sahf
mov
inc
add
shlb
xorl
sbb
sub
scas
sahf
icebp
or
jp
sbb
cwtl
xchg
ljmp
cmp
push
dec
sbb
outsb
cmpsb
arpl
cmc
jne
sbb
mov
push
or
pop
add
in
cmpsl
rol
push
sbb
jno
or
push
adc
cmp
shl
sbb
push
push
xchg
outsl
add
pop
aad
mov
test
ljmp
aaa
cmpl
ret
outsl
rorl
data16
arpl
ss
data16
pop
inc
lcall
jp
pop
add
adc
mov
shr
test
ret
gs
pushf
mov
or
add
or
xor
popa
dec
xor
addr16
or
mul
int3
sub
xor
xchg
cmpsl
test
std
lds
inc
lea
cmp
rolb
push
mov
fcmovnbe
jo
sbb
std
inc
repz
xorb
xchg
jns
aam
repz
mov
or
popa
adc
xorl
in
dec
push
test
sbbl
pop
mov
subb
sbb
dec
xchg
push
pusha
sbb
lds
les
bound
xchg
push
inc
jmp
or
mov
and
mov
mov
and
cmpsl
xor
fdivp
and
adc
int3
popaw
inc
mov
daa
loopne
add
or
fs
lcall
xor
jbe
icebp
mov
or
mov
xlat
xchg
sub
andl
addb
push
inc
mov
fistps
ljmp
shr
or
dec
or
popf
sbb
xchg
out
sub
lret
cmp
mov
stos
xchg
push
cltd
jge
or
das
sbb
pushf
adc
aaa
fdiv
ret
jno
sub
mov
arpl
imul
fadd
cwtl
dec
sti
lret
adc
repnz
or
jnp
pop
inc
or
mov
cmp
lcall
or
cwtl
dec
mov
jo
cmpsl
std
inc
push
xchg
xchg
xchg
cmp
or
push
jo
adc
arpl
cmp
lret
add
xchg
clc
jmp
push
xor
in
faddl
lods
sbb
jp
mov
mov
xchg
lea
cmp
fwait
mov
loope
add
jmp
pop
dec
stc
icebp
fwait
or
push
or
imul
fucomip
jp
push
ss
add
repnz
xor
movsl
and
call
es
shr
inc
sub
mov
push
and
nop
inc
call
lcall
and
cmc
out
sbb
jecxz
stos
jmp
dec
mov
inc
xchg
or
mov
adc
mov
jmp
or
inc
xchg
mov
or
mov
clc
push
ret
pop
es
dec
mov
fs
sbb
xchg
test
lds
xchg
sbb
sahf
ret
pop
and
sbb
outsl
or
cmpl
aad
test
add
cli
stc
fabs
sbb
or
pop
lret
adc
outsb
adc
addr16
pop
inc
push
sti
cmp
pop
sbb
jmp
add
xchg
mov
push
ja
pop
gs
push
ret
ja
aam
push
jge
push
cmpsl
lahf
cld
add
jno
out
out
xchg
imul
xor
mov
xor
xor
jmp
inc
adc
data16
outsl
cwtl
jp
mov
ljmp
sbb
das
in
jl
sbb
sti
repz
arpl
cmc
enter
outsb
sti
or
fs
push
xlat
shlb
imul
call
int3
pop
mov
dec
xor
ljmp
cmpsl
cmp
cld
inc
test
push
inc
pop
aas
das
pop
sbb
mov
pop
stc
arpl
inc
pushf
jnp
xor
cmp
imul
sub
lock
add
cmc
addb
pop
xor
fwait
das
mov
push
mov
pop
xlat
and
ret
dec
arpl
jmp
mov
popa
push
adc
movsb
push
pop
movb
push
add
arpl
sbb
repz
or
xor
add
or
addl
push
data16
inc
out
dec
loop
cltd
out
cmp
addb
out
stos
cmc
rcrb
add
gs
cmp
ficompl
in
sub
push
addr16
orl
iret
add
inc
mov
outsb
imul
push
xorl
aad
std
mov
sbb
xchg
push
xor
insb
sbb
fidivrs
mov
in
xor
sbb
or
jmp
pop
clc
mov
add
int3
add
rcrb
shrb
mov
shlb
mov
add
subl
test
xor
outsl
push
adc
inc
shlb
adc
into
adc
xchg
sbb
sub
repz
pop
jl
test
mov
jae
cs
ret
test
int3
push
xchg
adc
call
aad
push
sar
fs
add
sub
mov
adc
push
cmpsl
push
sbb
sbbl
out
mov
add
inc
in
mov
mov
fsubs
add
sbb
jns
loope
or
push
xor
sub
loopne
orl
ret
popf
sbb
push
sahf
push
lcall
add
sbb
clc
lahf
lods
jne
xor
xchg
xchg
add
sar
inc
xchg
push
cltd
push
inc
add
icebp
jl
and
gs
add
or
rol
mov
sahf
mov
pop
pop
adc
loope
je
sbb
scas
adc
imul
cltd
subl
call
jae
insb
mov
push
arpl
push
int3
push
in
into
in
inc
scas
nop
mov
ret
arpl
sub
mov
pop
test
sbb
and
xchg
mov
inc
jmp
ljmp
fwait
or
sub
dec
addb
loopne
int3
xchg
out
ret
inc
popa
lret
lret
aam
lea
test
ud0
sub
sub
shrb
sahf
add
ljmp
jo
mov
lret
outsl
mov
or
mov
xchg
inc
push
loop
lcall
pusha
sub
push
cs
sbb
inc
repz
int3
scas
or
push
lcall
outsl
xor
pusha
dec
mov
jecxz
stc
xchg
xchg
adc
fistpl
jb
mov
sub
add
push
or
ret
xor
push
mov
rorl
mov
ret
sbb
stc
in
inc
loop
clc
mov
sahf
sahf
xlat
push
test
adc
cli
xor
jle
sbb
sbb
cmp
js
lods
push
sahf
pop
lock
test
sub
push
popf
xchg
clc
cmp
loop
lds
gs
popa
sbb
fdivl
sbb
sub
jne
in
mov
adc
loope,pt
push
mov
push
sub
pushf
fisttpl
scas
mov
jmp
orb
sub
push
loope
push
cmp
push
rcr
fs
push
or
xchg
setbe
sbb
jo
dec
inc
sub
cli
out
pop
insl
mov
fwait
movsb
and
in
xor
add
cmp
xchg
mov
icebp
lds
dec
mov
and
ffree
and
xlat
xor
decb
ljmp
fsub
out
xor
pop
rsqrtps
mov
inc
jo
add
push
jo
sub
cmc
scas
or
ret
mov
xlat
sbb
fistpll
dec
out
mov
rcrb
lret
push
repz
and
sarb
ja
xor
loopne
es
mov
inc
and
mov
add
inc
or
test
imul
push
add
xchg
jo
fidivrs
ficoml
sbb
pop
icebp
mov
scas
xchg
sbb
mov
gs
fwait
mov
xor
xchg
int3
push
imul
cmp
push
repnz
xor
test
jg
in
ret
loopne
imulb
dec
mov
sbb
xchg
push
fs
xor
sbb
sarl
adcl
fcoml
stos
sub
sub
pop
pop
mov
jp
jl
lahf
add
nop
or
repnz
frstor
mov
popf
dec
not
sti
enter
mov
inc
xchg
cmp
inc
sub
cli
inc
fwait
jge
imul
pop
lret
xor
jno
push
push
pop
dec
enter
dec
xchg
inc
and
cs
jp
faddl
andl
in
sahf
inc
mov
mov
jne
cmpsl
sbb
adc
rorb
loope
lahf
into
mov
jmp
mov
mov
cmp
call
insl
mov
outsl
pop
xchg
addr16
sbb
push
mov
in
pop
add
sbbl
sbb
jge
pop
jmp
dec
push
push
sub
pop
mov
sbb
test
inc
mov
lcall
mov
push
lock
push
js
push
push
out
xchg
or
pop
mov
outsl
add
popa
enter
jmp
ss
cmp
sub
ja
sbb
xor
xchg
sub
push
add
push
movl
fmuls
scas
jl
pop
pop
orb
push
sub
ret
daa
sbb
and
in
out
inc
mov
sbb
jp
xchg
and
scas
sub
add
mov
loope
xor
nop
in
lahf
mov
mov
repnz
pop
movsb
sub
add
fisttpl
dec
lahf
or
jno
mov
sbb
hlt
push
cwtl
inc
dec
enter
adc
pop
sbb
pusha
jl
insb
sub
sahf
push
je
data16
lret
adc
mov
jge
push
inc
xor
mov
sub
pop
mov
ljmp
std
push
sub
add
mov
or
jmp
mov
push
lods
xor
inc
sbb
roll
sub
jge
pop
and
push
mov
sbb
mov
cmp
scas
sbbb
lock
inc
xor
cmp
sub
mov
sbb
lock
shlb
add
push
push
dec
outsl
pop
cmp
cmc
cmpsb
jno
rcr
jae
pop
sbb
xchg
sahf
fadds
push
pop
push
pop
popf
ss
push
mov
bound
mov
loop
orl
leave
test
xchg
sbb
sub
test
in
cld
pop
iret
int
dec
push
testl
and
xchg
cmp
loope
and
pop
dec
cli
test
adc
cmc
xor
jge
pop
sbb
sbb
pop
jb
pop
les
pop
cld
sub
fwait
dec
ret
bound
add
add
addl
adc
pop
sahf
push
loop
or
mov
or
jno
sahf
jno
ljmp
cmpsb
xor
ud2
inc
sbb
and
sahf
cltd
or
mov
cmp
in
xor
rcll
push
fistl
jmp
mov
fdivrp
das
adc
adc
lds
out
push
rcrl
loopne
mov
jae
add
daa
xor
or
inc
movsl
sbbb
mov
adc
pushw
sbb
sahf
or
jnp
inc
or
sub
fs
out
loopne
or
int3
ss
and
popa
adc
xor
lret
cmpsb
mov
or
xor
sub
add
int
mov
popa
fsubrl
sbb
lods
sub
adc
inc
mov
pop
cmp
lds
adcb
mov
out
cmp
inc
add
pop
sub
clc
ret
lock
mov
lods
lcall
sub
xor
cmp
stos
test
mov
dec
roll
jle
dec
push
ret
out
je
xor
mov
cmpsl
mov
cltd
cmp
jae
cmpsb
lds
push
or
sbb
pop
loope
cmp
xor
sbb
out
fsubl
gs
push
and
add
sub
daa
popa
xchg
gs
out
push
or
adc
xor
test
pop
gs
sbb
xchg
pop
mov
jb
arpl
or
xchg
dec
daa
cltd
and
hlt
test
insb
xchg
sbbb
outsl
mov
sbb
xchg
dec
pushf
addl
fcoms
mov
call
fisttpl
mov
rolb
or
xchg
sbb
iret
cmpsb
repz
sbb
std
cli
andb
outsl
and
iret
pop
sbb
and
pop
and
insb
inc
inc
in
mov
xchg
mov
fs
outsl
out
out
sbb
xor
jbe
sbb
stos
gs
pop
ljmp
add
xchg
mov
sbb
xor
sub
adc
ret
jl
pop
jno
mov
insb
mov
xchg
lea
xlat
lret
stos
int
lods
testb
push
mov
loope
pop
frstor
not
sbb
in
arpl
push
lret
lcall
dec
fcmovb
adc
jne
test
aad
sbb
sbb
cmc
out
mov
xchg
in
sub
dec
mov
loope,pn
xchg
mov
jo
push
lds
hlt
int
movsb
decl
in
pop
xchg
ds
aas
je
adc
lds
nop
aas
sub
fwait
mov
mov
adc
hlt
cmc
jge
addb
jno
dec
rorb
ficoml
jns
movsl
mov
loope
mov
jle
into
data16
or
inc
xor
testl
mov
xor
mov
addb
in
adcb
push
mov
daa
call
dec
in
add
shrl
fcomps
pop
xchg
mov
lea
imul
mov
into
jne
in
or
inc
sahf
cmpl
scas
mov
dec
mov
or
ja
sahf
es
jnp
jo
in
adc
aad
sub
dec
popf
divl
les
rorb
mov
popf
or
jb
or
or
filds
fidivrl
and
and
es
push
add
stos
cmp
call
jno
jecxz
adc
ja
add
jmp
xor
int3
adc
aad
sbbl
imul
sub
ffreep
loop
icebp
jmp
or
mov
jns
cmp
das
fcoml
stc
xlat
enter
add
aad
mov
pop
je
mov
imul
dec
sbb
fnstcw
daa
imul
push
orb
mov
push
lock
adc
repz
sub
pop
push
sbb
es
lock
push
xor
xor
jo
mov
push
dec
lret
lds
test
push
sbb
stc
inc
fistl
dec
sbb
mov
mov
add
sbb
out
fcmovnu
data16
lock
jnp
loopne
divl
outsl
mov
cmp
sbb
stc
cmp
loopne
xor
out
add
jecxz
mov
mov
push
aas
rcrb
out
mov
icebp
das
movsl
add
rorl
in
cwtl
ljmp
pop
inc
aad
sub
pop
adc
sbbb
ret
xadd
shrl
cwtl
shr
sbb
jmp
out
icebp
stc
pop
dec
rolb
subl
push
mov
cli
jno
test
neg
pop
or
mov
jl
mov
fs
xchg
and
push
mov
mov
js
cmp
add
jno
mov
jne
cmp
imul
fisubrl
mov
fsubs
dec
sahf
push
and
sbb
sbb
or
shlb
cmc
xor
int3
add
int
iret
jbe
mov
mov
in
pop
xchg
mov
pop
repnz
and
xchg
cwtl
mov
not
call
movsb
and
cltd
xchg
mov
xchg
mov
xor
xor
sbb
mov
mov
repz
test
push
ss
sbbl
and
jne
je
int3
cmp
sbb
imul
adc
jle
dec
and
sub
adc
cmpsb
and
mov
and
cli
jbe
hlt
movsl
push
dec
adc
inc
ror
push
inc
pop
sub
addl
add
and
sub
or
stos
cmc
sbb
dec
mov
xor
sbb
sahf
jae
sbb
shll
cwtl
mov
push
bound
rolb
jle
sbb
cmp
popf
arpl
jnp
imul
sub
mov
enter
lahf
jbe
insl
popf
pop
xlat
stos
sub
mov
rcrb
aam
inc
cmp
push
and
or
test
inc
push
addb
lret
mov
fiadds
pop
loopne
or
or
movsb
in
sub
sti
shl
pushf
in
pop
adcb
push
sarl
ret
jno
cld
scas
xchg
stos
cmp
lock
pop
mov
int
cltd
xchg
sahf
mov
mov
ljmp
add
aad
xor
pop
cmp
roll
out
xor
jbe
lods
ficoml
and
aas
or
pop
rcll
add
bound
jg
int3
sub
mov
hlt
and
sbb
or
fnstsw
das
adc
and
or
aas
jecxz
add
xor
dec
inc
rclb
leave
mov
subb
push
jg
out
add
lock
sbb
gs
cs
xchg
ret
xor
inc
sti
sub
aaa
jne
ds
pop
je
cmp
loopne
sub
out
push
or
push
es
pop
sbb
xchg
addr16
fwait
gs
mov
stos
lahf
inc
sbb
xchg
bnd
cmp
sbb
dec
test
out
dec
fstpl
repz
or
addb
dec
lret
xor
xor
dec
lret
imul
mov
pop
push
and
pop
inc
sub
dec
push
loope
cltd
fdivrs
push
divl
sub
xor
pop
lret
jle
imul
cmp
xchg
mov
jne
inc
iret
sbb
mov
inc
or
and
das
xor
add
xor
jo
mov
repnz
add
pop
jo
rorl
or
dec
xor
lcall
outsl
pop
jne
dec
cmc
jp
cmpsl
dec
inc
and
sbb
pop
adc
push
adc
pop
sbb
shl
cmp
inc
sub
and
dec
xor
push
push
mov
lret
ret
xchg
push
mov
lahf
test
in
jns
lea
lods
bnd
mov
bound
addb
ret
push
dec
push
adc
adc
and
jno
not
mov
dec
mov
jo
subl
in
fisubrl
pop
imul
test
aas
sbb
mov
mov
lret
mov
into
mov
sbb
mov
sub
mov
ljmp
arpl
add
mov
add
add
xchg
pop
dec
lock
cmpsb
dec
cwtl
and
scas
cmp
adcb
mov
test
lea
sbb
lock
orb
movsl
sarl
jmp
outsb
mov
pop
xchg
adc
repz
xor
insb
add
push
in
out
call
add
rorb
pop
push
mov
pop
sbb
inc
sbb
inc
lret
shrl
fisttpl
push
jge
fs
hlt
xor
mov
sub
add
push
mov
subl
pop
bound
xor
les
or
fucomp
pusha
jne
lcall
inc
sub
xor
into
mov
xchg
inc
sbb
cmp
pop
push
stos
fs
lcall
jge
or
test
jo
push
pusha
inc
pop
mov
push
jno
sbbb
cmpsb
mov
pop
xchg
push
dec
xrelease
sbb
pop
sub
inc
sbb
dec
in
mov
jge
lods
mov
fnsave
fwait
push
cmp
xor
xor
jl
test
dec
nop
xor
ss
or
popa
nop
fiadds
jecxz
dec
inc
insb
cld
sub
test
push
add
jbe
sarb
pop
push
or
lretw
sbb
xchg
pusha
push
adc
cmc
pop
loope
out
jle
in
dec
push
mov
or
mov
std
push
loopne
imul
cmpsb
fwait
push
and
or
mov
ljmp
sarb
mov
mov
or
inc
ljmp
stos
mov
es
xor
push
aad
addb
and
mov
cmp
push
mov
and
sub
sub
cmp
inc
jge
push
cmpsb
pop
and
push
or
ss
sub
ljmp
scas
jnp
push
or
add
gs
lods
pop
xor
inc
ja
inc
or
mov
sbb
adc
xchg
cmpsb
daa
cmp
loop
push
mov
in
sbb
xchg
loopne,pn
or
aaa
cmp
sub
push
out
jno
mov
and
jbe
roll
jae
loop
cmp
lret
push
sub
xor
outsl
pop
data16
int3
pushf
sbb
cwtl
dec
cld
cmp
inc
shl
out
rorl
push
fisttps
xchg
xchg
dec
mov
xchg
mov
loope
int
mov
test
gs
popa
int3
sarl
inc
mov
xchg
cmpsb
int3
fmull
ljmp
push
roll
repz
inc
xor
in
mov
add
mov
rcl
mov
jl
sahf
inc
add
popa
popl
inc
addb
or
bound
in
push
pop
sub
adc
mov
arpl
add
sub
ret
adc
pop
pusha
pop
xchg
add
aas
in
pusha
jns
xchg
mov
sub
test
xchg
and
push
minps
int
addr16
push
add
cltd
cmc
mov
cltd
jnp
or
mov
daa
leave
xchg
xchg
sbb
or
dec
sub
sti
jg
jno
lea
inc
mov
mov
lcall
or
inc
cmp
adc
inc
into
int3
out
sbb
cmp
fisubl
stc
fiadds
jne
mov
add
pop
xchg
out
mov
out
test
ss
inc
int
sub
add
rcrl
and
ret
bound
scas
popf
sbb
and
stos
data16
lods
cs
outsl
mov
mov
repnz
sbb
inc
jg
jbe
call
inc
movsb
ret
dec
cmp
jge
sti
aas
inc
pop
jle
inc
push
dec
and
mov
mov
loopne
push
icebp
lahf
out
test
scas
ds
xchg
loop
push
or
mov
cld
fwait
subl
movsb
mov
frstor
push
mov
lods
pop
mov
push
lea
add
mov
cmp
add
fs
stos
popf
bound
int3
mov
das
insb
outsb
test
stos
jp
sbb
add
mov
inc
mov
pop
add
pop
fildll
out
jl
loope
cli
iret
cmc
imul
std
mov
bnd
mov
sub
leave
pusha
inc
in
dec
dec
sub
jo
xor
dec
inc
shll
imul
adc
add
jecxz
addr16
xor
stos
gs
mov
rcrl
inc
or
jp
cmpsl
pusha
shll
mov
dec
or
addl
in
fstps
mov
mov
pavgw
dec
das
adc
adcb
and
cltd
ret
xor
sbb
loope
mov
dec
cmp
and
aad
repz
les
roll
push
cmc
aas
mov
mov
push
cmpsb
jno
pop
adc
test
shlb
lahf
cmp
pop
fwait
add
ret
mov
aad
push
add
cmpsb
icebp
icebp
lea
out
and
insb
sbb
lea
bound
test
imul
fistps
fdivrl
add
xchg
jp
mov
call
int3
add
cli
orb
mov
sub
jne
jl
insl
pop
mov
addr16
and
gs
orl
sahf
nop
mov
mov
popa
mov
jo
or
sbb
rolb
push
dec
mov
clc
cmc
insl
mov
in
mov
pushf
fimull
sahf
mulb
sbb
mov
addb
insb
push
xchg
or
les
push
stos
fxtract
ds
test
sbb
add
adc
popf
mov
add
xor
jecxz
sub
mov
jns
pop
push
mulb
mov
sbbb
mov
arpl
sahf
mov
push
loopne
fbld
popa
fistpll
cmp
dec
fisttpll
test
sbb
cmp
scas
fs
push
xchg
xchg
cmc
lret
jl
push
rcll
mov
mov
lods
mov
daa
fidivrs
mov
fnsave
repz
mov
sbb
test
and
movsb
sbb
xor
inc
scas
sub
jne
mov
adc
add
movsb
push
sbb
imul
or
and
lods
adc
dec
int
push
cs
mov
lods
and
sub
push
dec
dec
mov
pop
xorb
pop
rcll
das
pop
mov
pop
push
mov
sbb
inc
mov
loope
mov
cmp
in
add
sbb
out
shrb
ficoms
les
sbb
xor
nop
idivb
jne
jnp
cmp
add
lret
push
cltd
int3
pop
inc
lret
test
pusha
je
addr16
add
xor
and
nop
scas
std
xchg
push
jbe
bound
in
into
push
shll
pop
mov
xchg
inc
mov
inc
inc
shll
dec
and
mov
sbb
sbb
test
sbb
aad
sbb
je
push
dec
repz
rorl
add
add
aad
add
scas
pushf
aaa
push
push
cmp
mov
push
push
cmpsb
stc
cwtl
ret
mov
jae
or
test
mov
dec
fists
fwait
out
adc
push
pop
aam
lret
jbe
imul
mov
in
lret
dec
out
xchg
shll
subl
nop
xchg
push
out
and
sbb
ds
mov
xchg
or
hlt
adc
cmp
les
cmpb
mov
pop
mov
dec
mov
clc
cmp
stc
and
dec
sub
out
hlt
mov
int
or
add
js
mov
sbb
mov
or
daa
loop
mov
add
push
divl
inc
fs
sti
stc
rcr
or
popa
xor
dec
sbb
push
mov
ljmp
jle
and
das
rcr
ret
xchg
dec
inc
lea
shlb
sbb
icebp
cmc
gs
inc
das
or
xlat
mov
call
scas
cmp
stc
mov
pop
aas
add
sbb
and
outsb
popa
or
mov
int
xchg
mov
lret
dec
add
push
xchg
popa
xor
in
stos
xorb
arpl
movsb
or
mov
sbb
mov
arpl
add
lret
cwtl
or
rorl
sbb
xor
pop
mov
xor
insb
mov
imulb
stos
pop
pop
loope
push
in
insb
rolb
pop
movsl
inc
sbb
dec
xor
and
sbb
mov
inc
dec
addr16
shrb
bound
push
or
data16
jnp
cmp
popa
jle
sbb
rorl
mov
add
cli
xlat
jbe
jp
stos
jns
repz
sbb
mov
cmpsl
mov
mov
idivb
sbb
divb
sahf
fsubrp
cmp
mov
and
jecxz
push
test
mov
and
push
push
sahf
addl
jne
add
push
add
ljmp
invd
sbb
mov
sahf
xor
xor
xor
push
mov
imulb
jle
cmp
and
int3
cltd
cmp
mov
inc
inc
sti
lods
shll
mov
adc
add
push
add
xchg
sub
sbb
sbb
scas
dec
sub
xchg
divps
mov
es
mov
jae
or
dec
or
push
xor
mov
add
pop
daa
sub
movsl
mov
jbe
mov
and
xchg
cltd
push
jle
sub
std
fstps
mov
into
nop
or
pusha
shl
adc
rcrl
imul
mov
and
mov
mov
push
mov
shlb
faddl
adcl
fisubs
add
loop
xor
scas
jnp
inc
cmp
lret
lret
sub
lret
fisubrs
pop
cmp
int
sahf
rorb
sbb
lods
ss
xor
mov
pop
outsb
enter
movsb
lcall
xor
or
out
ja
dec
sbb
adc
push
sbb
hlt
add
cmp
add
sbb
pusha
lret
xchg
jle
or
mov
ss
cld
push
pop
subb
fldt
pop
icebp
mov
jne
sbb
jns
add
mov
lret
sbb
xlat
pop
sub
es
jle
sbb
divb
cmp
push
push
clc
jb
or
xor
jne
ffree
insl
dec
mov
cmp
cmc
or
insl
stos
inc
push
divl
int
push
xor
push
pop
popf
sahf
xlat
pop
stos
in
out
pcmpeqd
sbb
lret
icebp
inc
ljmp
dec
test
cs
jnp
push
dec
test
pop
sub
add
sbb
ss
pushf
inc
les
dec
mov
nop
push
xchg
or
lods
adc
imul
push
xor
into
inc
pop
xchg
dec
mov
aaa
xchg
and
loop
pusha
sbb
daa
mov
xor
int
adc
mov
push
in
sbb
repnz
jge
arpl
aaa
popf
push
and
xor
popf
sub
adc
sub
das
adc
in
pop
xlat
ss
mov
jne
fwait
adc
stc
lcall
cli
or
int3
fisubs
add
arpl
je
push
sbb
loop
add
sbb
push
mov
add
jnp
push
dec
js
lea
negb
pop
into
and
iret
sbb
jmp
arpl
dec
push
mov
sbb
dec
inc
dec
jp
repnz
cmp
xchg
cld
sub
add
xor
es
push
rep
inc
pop
mov
in
lds
xlat
pop
loope
std
test
push
mov
stos
sbb
bound
adcb
push
dec
popf
fildll
add
cwtl
push
cs
hlt
cmp
mov
push
jae
cmpsl
in
test
adc
outsb
lock
xchg
fdivrs
xchg
pop
mov
sbb
out
inc
inc
les
and
lock
popa
xor
shrl
adc
in
push
pop
fcomps
inc
sbb
aas
cmp
cmp
add
mov
dec
stos
add
mov
std
dec
scas
loope
insb
lea
xchg
pop
dec
inc
ret
pusha
pushf
dec
mov
cli
inc
inc
out
sbb
rcrl
loope
fcmovbe
pop
or
xlat
lcall
mov
sbb
dec
xchg
ja
ja
icebp
sbb
lcall
and
popf
pushf
and
pop
insl
fidivl
mov
jp
lock
sahf
sbb
icebp
sbb
and
push
adcb
sub
and
mov
stos
sti
pop
scas
data16
lods
sahf
pop
mov
fs
pushf
pop
sahf
dec
popf
adc
rcrb
xlat
mov
pop
cmc
pop
jae
push
movsl
jg
fcomps
fcoms
rorl
push
push
dec
cmp
cmp
lock
adc
add
xor
pop
ss
mov
je
jp
jnp
dec
xchg
jl
repnz
mov
es
lret
sub
insb
lahf
jle
popa
or
popf
dec
clc
in
in
dec
popf
lock
insb
je
inc
push
mov
push
repnz
sub
cmp
cmp
fisttpl
mov
add
jne
negl
sub
mov
xlat
add
fucomi
shll
pop
pop
lods
imul
push
add
inc
mov
es
mov
sub
les
pop
mov
add
xchg
mov
sbb
inc
push
repz
jge
push
arpl
dec
pop
push
cs
mov
pop
lds
add
fldenv
lcall
shl
insb
pop
gs
out
sbb
ret
into
dec
add
sahf
push
fsts
or
popa
dec
sub
ljmp
jmp
mov
popf
jne
add
leave
cmp
insl
xor
mov
imul
lods
and
xchg
lods
mov
push
cmp
lea
add
add
xor
jmp
pop
jmp
daa
push
pop
mov
in
inc
shll
insl
mov
adc
inc
sub
and
out
mov
jne
sbbl
mov
inc
xor
xchg
xchg
cmpl
sub
jb
pop
fmulp
push
arpl
or
lods
stos
dec
sbbb
mov
popa
dec
loope
mov
inc
jge
pushf
mov
insb
ds
dec
pop
jle
fnstsw
dec
ret
rclb
mov
in
aam
ret
xor
xchg
and
cmp
stos
or
adc
push
add
lea
leave
insl
mov
cmc
stos
inc
jl
mov
xchg
sbb
cmpsb
and
loope
inc
mov
fs
lahf
sub
inc
dec
nop
filds
lock
fmull
add
dec
add
adc
cs
loopne
and
call
lock
pop
cmpsb
jmp
cmp
in
test
out
testb
or
cwtl
stos
test
sbb
stos
mov
dec
sub
jl
mov
dec
add
push
ret
enter
icebp
mov
mov
dec
push
sub
or
les
stos
stc
mov
xor
mov
inc
mov
sbb
std
mov
push
jge
adc
sub
cmpsb
xor
mov
xchg
stos
add
sub
pop
jge
jbe
dec
fs
push
jns
repz
addl
push
mov
mov
push
jns
movsl
faddl
jp
mov
sub
ds
sti
cltd
or
inc
or
pop
sbb
push
mov
push
jne
add
mov
es
pop
xchg
push
test
ljmp
mov
cmpl
dec
xchg
pop
sub
aam
cmp
add
add
pop
sbb
dec
bound
push
daa
aad
pop
cli
out
lret
icebp
popf
fisubs
dec
ja
push
cmpsl
xchg
mov
jns
inc
and
inc
insl
addr16
inc
add
cwtl
fdivrl
rorb
outsl
add
mov
sbbb
xchg
add
push
int3
enter
jno
mov
pop
scas
add
sub
les
fs
es
sbb
dec
mov
stos
add
sbb
mov
pushl
imul
sahf
dec
adc
cltd
inc
lea
mov
sarb
add
imul
pop
adc
leave
popa
dec
pop
and
into
mov
out
popa
mov
xchg
sahf
jns
iretw
lds
or
cs
lock
ljmp
in
fisubrs
lahf
inc
push
jo
and
push
xchg
push
cmp
mov
mov
ret
mov
mov
in
mov
repz
pushf
dec
inc
daa
jle
dec
push
push
sub
mov
cmp
and
loop
stos
mov
mov
cmp
rcrl
fldl
testb
insb
into
stos
call
and
in
push
mov
push
stos
cwtl
lret
add
xor
xorb
jne
sti
inc
push
ljmp
inc
scas
inc
adc
cmp
push
or
fdivl
or
clc
data16
scas
test
bound
sahf
std
mov
xchg
sbb
popf
pop
ret
adc
lods
mov
outsl
inc
and
cmpsb
addl
pusha
in
inc
dec
sub
notl
push
ret
push
add
push
scas
jnp
stos
inc
pop
or
outsl
pushf
mov
jge
sbb
xchg
pushf
test
ret
adc
adc
data16
push
jge
or
add
xchg
mov
into
inc
xchg
arpl
mov
in
xor
scas
or
xor
sub
pushf
pop
sbb
add
adc
dec
lret
pushf
leave
cld
jns
es
shrl
stc
lods
test
pusha
dec
outsl
sahf
cmp
iret
daa
pop
lods
and
jno
pop
int
xchg
dec
call
dec
mov
popa
pop
loopne
pop
pop
and
adc
sbb
mov
push
scas
pop
push
sarl
scas
aam
push
add
jbe
ds
cmp
andb
test
icebp
push
sti
fwait
ds
pop
test
mov
pop
push
or
out
push
xor
lret
lcall
pusha
ja
push
mov
cmp
lock
sbb
adc
imul
sub
jo
sahf
inc
fcoml
gs
cld
shrb
sub
into
fildll
jge
push
leave
bound
pop
aas
add
cli
arpl
cs
ffreep
and
in
testl
sbbl
dec
les
mov
out
outsl
in
sbb
aad
sti
xorb
pop
cmp
pop
push
adc
jne
pop
lds
cli
js
inc
sbb
push
data16
js
rorb
aam
or
fcmove
in
rcrl
pop
loope
xlat
add
mov
das
out
stos
push
les
ss
inc
and
push
pop
lock
clc
xorb
insl
lea
mov
pop
mov
mov
pop
or
inc
mov
lds
add
jecxz
pop
add
test
jo
mov
xor
sub
les
jbe
lahf
lock
out
inc
pop
push
add
cwtl
insl
xlat
call
dec
addr16
add
hlt
cmpsb
lcall
mov
test
es
jg
push
or
sbbl
inc
inc
imul
sarl
into
loope
icebp
or
push
mov
data16
test
and
das
jp
push
adc
mov
or
sub
pop
push
sub
ds
ss
adc
mov
adc
aaa
sbb
and
push
ret
sbb
mov
xor
mov
sbb
push
outsl
push
addl
enter
push
ret
lahf
jae
into
push
and
xchg
mov
sbb
push
jae
insb
push
mov
cltd
movsb
xlat
jno
cmpsl
cmc
rol
sbb
ficomps
inc
pop
filds
cmpsb
rcr
ret
and
aaa
or
movsb
bound
leave
in
pop
xchg
pop
jl
test
and
fstpt
sbb
or
cmpsl
adc
and
cmc
lahf
cwtl
sbb
fmul
sbb
out
out
fsubs
into
pop
cld
sub
lcall
sub
add
xchg
stos
test
dec
sbb
icebp
mov
lds
jg
xchg
addr16
popa
subb
gs
lcall
sti
cs
xchg
sub
add
sbb
pop
mov
imul
nop
scas
insb
cwtl
aad
jb
cli
xchg
jmp
add
dec
sub
sbb
mov
negb
inc
xchg
ds
xchg
jo
out
cmp
mov
test
mov
call
in
dec
cli
mov
mov
out
jnp
notb
mov
bound
sbb
pop
inc
mov
mov
cld
push
addb
mov
sub
arpl
adc
lock
idivl
cmp
loope
mov
test
jp
sbb
sbb
mov
lds
das
in
out
mov
pop
xchg
xor
dec
jle
jo
andb
and
mov
push
faddp
jle
cmc
int3
inc
jmp
loope
adcb
data16
and
pop
stos
inc
and
es
lcall
cli
adc
jecxz
out
cltd
mov
mov
popw
push
add
dec
xchg
mov
xchg
aad
ret
lds
push
loopne
sbb
ss
mov
inc
mov
pop
cmp
sbb
xchg
cmp
fwait
sbb
mov
push
push
cmp
xchg
sbb
rcll
test
xchg
pop
enter
outsl
mov
inc
push
test
subb
sub
into
gs
subl
jbe
cltd
mov
dec
push
mov
push
sbb
std
roll
dec
push
add
adc
fdiv
xlat
out
or
aaa
dec
mov
inc
shll
roll
adc
pop
loopne
mov
dec
sub
mov
jnp
lods
jle
outsb
fldenv
mov
sbb
dec
ficomps
and
add
das
rolb
es
push
ficoms
loope
xchg
and
mov
and
int3
stc
inc
into
inc
jo
mov
jmp
aam
adc
jae
icebp
and
sub
inc
add
lahf
mov
in
fsub
call
mov
inc
sbb
nop
mov
add
pop
mov
or
pop
cmp
mov
fucomi
and
inc
sub
mov
popf
lret
xchg
mov
cmp
dec
ds
data16
mov
jmp
jne
cltd
iret
mov
aam
fucom
adc
dec
test
sub
mov
sti
das
lods
push
sub
fwait
mov
sub
sbb
test
jns
pop
mov
cli
js
push
fidivrs
xor
pop
fwait
andl
push
and
es
jecxz
adc
push
mov
gs
imul
mov
jmp
pop
dec
dec
out
stos
xor
int
andl
ja
inc
dec
or
mov
inc
inc
sub
pop
test
cmc
dec
mov
fisttps
xchg
sahf
dec
xlat
filds
mov
xchg
into
push
or
int3
dec
xchg
jle
outsl
and
and
push
stos
and
push
in
xchg
out
inc
arpl
inc
aad
xlat
add
rorl
jnp
pop
idivl
inc
pop
pop
int3
jb
cmc
mov
movsb
jecxz
adc
push
mov
mov
ss
sbb
mov
xchg
cmp
call
lcall
das
std
push
ret
and
and
dec
sub
icebp
add
mov
jo
mov
popa
test
and
xor
push
inc
jle
dec
inc
in
fcmove
jne
imul
je
popa
xchg
popf
sbb
jnp
xchg
push
in
cli
sub
fsts
mov
out
push
cmpsb
mov
jo
mov
out
sub
xor
mov
adcl
lret
ret
gs
mull
sbb
imull
out
cltd
or
hlt
repz
leave
into
test
dec
nop
sbbb
test
fs
and
inc
sbb
addr16
mov
or
add
addl
mov
fldenv
sbb
nop
add
sbb
xor
push
stc
int
scas
push
cltd
pop
jo
shll
inc
data16
mov
push
bound
and
sbb
test
sub
ds
jbe
xor
out
push
mov
jns
gs
mov
sahf
mov
xor
pop
sbb
or
sbb
mov
xchg
movsl
lods
mov
lret
add
mov
and
add
sbb
dec
sub
jno
std
xor
sar
lock
pushf
sbb
cs
and
cmp
pusha
fwait
movsb
daa
das
sbb
or
xor
divps
fiadds
or
seta
add
sahf
movsl
int
iret
sahf
push
add
cmpl
sahf
cmp
and
cld
or
push
out
cwtl
mov
xor
or
inc
mov
inc
add
in
jnp
scas
inc
les
mov
mov
cmpb
gs
dec
pop
lahf
sbb
cmc
sbb
sub
jns
sbb
fs
addb
stos
adc
xor
test
mov
jge
pop
or
pushf
adc
push
inc
sub
xchg
cmp
mul
push
jg
dec
xchg
and
mov
and
add
jl
lock
rorl
pop
jne
mov
sbb
loopne
push
dec
call
xchg
push
clc
mov
jg
xor
dec
fldcw
scas
js
pextrw
mov
hlt
mov
add
subl
adc
ret
xor
pop
sbb
xor
out
pushw
into
inc
jle
repz
push
jecxz
lret
repnz
mov
lahf
fwait
jno
push
daa
xor
mov
mov
xor
inc
inc
dec
push
es
lcall
pop
mov
sahf
add
mov
dec
mov
mov
test
sbb
data16
fisubl
adc
cmp
dec
sbb
jecxz
jbe
hlt
mov
inc
movsb
jle
lcall
mov
jne
push
int3
scas
sbb
addl
call
xchg
sub
add
push
aas
sub
mov
cmp
adc
test
or
data16
sbb
jecxz
sbb
push
sahf
into
fwait
or
cmp
cli
sbb
cmc
in
mov
dec
cwtl
mov
pushf
jne
cmp
ljmp
loop
arpl
sbb
xor
push
push
nop
xlat
nop
pop
lds
push
int3
xchg
rclb
dec
push
sbb
popa
faddl
fwait
not
repnz
out
scas
xchg
adc
subl
bound
out
pop
cmc
sbbb
sbb
aaa
mov
or
jae
sbb
das
mov
idiv
ds
push
andl
add
inc
and
movsb
sub
or
or
sbb
js
inc
cmp
push
push
popa
push
cmpsl
aam
test
aam
and
mov
stc
xchg
pop
xchg
pusha
dec
outsl
sub
add
mov
jg
loop
lods
xchg
mov
jno
xor
xchg
jnp
sbb
jb
add
dec
xchg
push
negl
mov
inc
add
pushf
pop
xlat
clc
sub
and
mov
pop
outsb
lcall
adc
push
or
push
jne
sbb
sbb
jno
jge
stos
mov
dec
mov
sahf
pop
movsbl
mov
imul
pop
lock
sbbl
iret
inc
fildl
fcmovb
dec
jle
or
roll
out
lods
and
pop
sbb
or
dec
neg
jmp
and
pop
xor
or
add
jne
xchg
dec
cmp
iret
imul
push
xchg
cmp
sbb
subb
pushf
push
and
outsb
rorb
mov
xor
stos
out
fadds
mov
push
or
adc
ds
cld
xor
in
mov
fmull
add
mov
add
loope
jmp
aas
sbb
jge
mov
ret
loope
mov
js
cmp
mov
shlb
mov
and
push
stc
or
scas
dec
push
ret
mov
add
adc
and
in
dec
outsl
push
cmc
int
mov
test
and
mov
inc
in
sbb
inc
loopne
fcmovnbe
lcall
cltd
or
mov
inc
in
dec
std
sub
push
pop
sbb
imull
or
xorb
xchg
add
popf
push
test
jne
sub
cltd
adcb
pop
pushf
daa
rorb
dec
adc
lahf
loopne
jl
test
cs
hlt
or
add
movsb
rcrl
xor
mov
mov
movl
mov
adc
lret
sahf
cmpb
push
imul
pusha
shrl
pop
dec
mov
pop
into
xchg
lcall
lock
mov
fisttps
test
cmpsb
xchg
popa
das
cmpb
xchg
bnd
push
push
mov
cld
push
fistps
cmpsb
adc
addl
cltd
xor
sbb
rcll
pusha
das
jne
ret
mov
cmp
mov
mov
cwtl
and
cmp
fstpl
cmpb
test
popa
daa
push
stc
stos
cld
test
jne
into
int
mov
push
loopne
mov
insl
cmc
push
inc
mov
rol
dec
jo
loop
lods
sbb
ljmp
mov
dec
jbe
test
xchg
sbb
repnz
adc
jns
loope
or
leave
lds
fldcw
divl
aas
inc
in
es
inc
inc
popa
dec
sbb
jmp
mov
cmpsb
insl
xor
stos
ret
in
push
hlt
and
fdivrl
out
int3
cmpb
iret
pop
and
cmp
ss
xor
adc
push
or
shll
xchg
and
and
dec
push
push
mov
xor
pop
stos
movsb
or
push
addr16
mov
jge
aad
test
xorl
sbb
aad
xor
sub
push
cs
movb
inc
and
test
xor
lds
outsb
sbb
sub
bound
push
lcall
mov
inc
fcoml
dec
loopne
dec
cmp
sub
cmpsb
push
lahf
aam
add
cs
jecxz
mov
or
rcll
mov
xor
fidivs
loopne
inc
mov
loop
sahf
in
jle
ss
or
ljmp
mov
jno
dec
out
lea
sbb
subl
or
sbb
jnp
test
add
hlt
inc
adc
les
fst
out
xorb
sahf
pop
jb
sub
fcompl
in
inc
andl
cmpb
aad
mov
scas
or
or
sub
in
add
cmp
fcoms
cmpsb
sahf
mov
pop
dec
shlb
lods
cmc
cmc
sbbl
dec
loopne
mov
mov
ja
mov
lcall
addb
mov
orl
xlat
sti
nop
testb
sahf
add
cltd
or
mov
repnz
sbb
pop
lret
jno
jne
daa
xor
stos
xor
push
and
pop
fwait
pop
dec
addr16
mov
sbb
xor
mov
in
cwtl
inc
ret
mov
mov
jns
xchg
pop
dec
into
dec
fmull
js
mov
mov
fsubrl
adc
imul
out
into
dec
in
leave
jnp
cmp
mov
and
inc
stc
divl
push
sbb
fcomps
pop
and
adc
cmp
push
fwait
push
add
aad
push
pushf
cs
sbb
cmp
dec
nop
push
repnz
fnstcw
addr16
out
push
sub
test
sub
cmp
les
pop
popa
adcb
inc
and
jne
pop
aad
leave
fwait
sbb
pop
mov
sub
adc
inc
mov
pop
outsb
sbb
mov
pushf
lcall
add
xchg
mov
insl
ret
lock
adc
add
xchg
aas
aad
mov
mov
arpl
insl
mov
fdivr
fcoml
jbe
pop
inc
imul
pop
mov
add
jge
dec
dec
sahf
rcrb
repnz
mov
popf
loop
incb
ror
retw
or
std
xchg
dec
xor
fldl
mov
inc
mov
test
fs
popa
cmp
push
or
dec
xor
xor
mov
sahf
push
mov
fnsave
sar
gs
dec
sbbl
mov
xor
dec
inc
jbe
inc
dec
adc
shll
add
and
insb
or
mov
clc
cmpsl
cmc
scas
in
jp
or
aas
pop
pop
call
scas
add
pop
push
add
sbb
mov
aaa
popa
sahf
cmp
xchg
insb
mov
outsb
sbb
dec
or
into
lcall
out
cmc
sbb
test
push
pop
xchg
xchg
fidivrs
das
aas
jg
cmp
inc
mov
mov
and
clc
or
rcll
xchg
mov
cmp
xchg
sub
call
movsl
inc
lcall
or
xor
loop
mov
sub
mov
jp
and
or
dec
les
in
dec
add
mov
jle
push
or
add
push
xchg
enter
aaa
mov
mov
push
repz
add
mov
add
cld
lret
pop
add
movsb
test
jl
pop
push
cwtl
fldcw
bound
sub
je
hlt
jl
xchg
sbb
test
dec
pop
rclb
mov
insb
push
pop
enter
dec
pop
lret
add
mov
std
fcom
or
pop
cmp
cmp
adc
in
into
mov
pop
idivl
pop
lcall
into
fistl
popa
xchg
inc
pop
repz
sti
pop
sbb
imul
pusha
les
mov
fwait
or
faddl
dec
es
test
cmp
push
fmuls
out
xchg
cmpsb
xchg
out
dec
sbb
add
lods
add
xor
xchg
add
jno
mov
js
cli
ja
add
sahf
mov
mov
loope
or
and
and
pop
fmuls
jnp
outsb
or
or
pushf
js
and
cmc
jb
push
push
cmc
sbb
push
daa
popf
in
add
sbb
mov
xor
xlat
xor
iret
push
lock
mov
xchg
and
repnz
or
mov
inc
cmpsb
jb
test
pop
das
sbb
adc
inc
pop
jne
lock
inc
rcl
inc
add
sbb
xchg
popa
push
add
cmp
and
pop
bound
addb
push
xchg
mov
mov
rorl
test
test
adc
adc
test
or
rclb
mov
cmpsb
aaa
sub
xchg
mov
add
sub
ss
xor
mov
imul
adc
inc
inc
dec
pushf
mov
jle
xor
sub
inc
cld
into
mov
mov
in
out
or
add
data16
iret
sbb
cmpsl
mov
scas
addl
adc
outsb
ficoms
adc
adc
and
inc
leave
pop
int3
icebp
fistl
dec
test
jno
pop
lcall
clc
mov
push
xor
loop
test
push
or
and
popf
sub
xchg
mov
sbb
pop
add
insb
out
add
loopne
enter
in
pushf
push
bound
sbb
push
mov
shll
or
cmc
and
aad
mov
insb
movsl
pop
push
push
xlat
lods
popf
imul
gs
inc
xor
repnz
jl
gs
stos
jae
sbbl
subb
sahf
push
cwtl
jp
es
mov
cli
mov
cmc
sub
push
cld
aaa
pushf
mov
in
outsl
mov
mov
bound
pusha
jno
xchg
push
shrb
jmp
sub
mov
cmp
faddl
mov
dec
push
push
insb
aas
ret
pop
lret
push
shll
or
jle
xchg
aas
xchg
inc
sub
mov
push
pop
add
jmp
cmpsl
or
repnz
add
push
push
sbb
or
xor
or
stc
insl
fwait
cmpsl
dec
aad
sbb
aam
shr
adc
sbb
jl
shlb
ficompl
mov
xchg
ljmp
mov
bswap
pusha
push
pop
mov
jle
ds
pop
repnz
adc
inc
cmp
orb
adc
xor
pusha
fldt
lock
fimull
mov
les
inc
lds
adc
jmp
pushf
ret
cmpsb
and
loopne
adc
pop
xor
mov
cmc
adcb
mov
rcrb
xchg
lds
jae
sbb
mov
aad
imul
cmpsb
mov
pop
mov
cmpsb
push
sbb
xor
fmull
ret
out
xchg
xchg
rcl
pop
loop
jmp
sub
xlat
xor
pop
or
jle
cmp
in
stc
cmp
out
mov
push
xchg
in
or
push
dec
aaa
cmp
adc
push
xchg
sub
pop
addb
repnz
add
cli
pop
mov
negl
sbb
test
xchg
jl
push
mov
popf
xorl
mov
mov
push
test
sub
test
adc
pusha
int3
xchg
leave
leave
pop
xchg
dec
cmc
cmpb
xchg
inc
fldcw
pop
sahf
sbb
dec
and
fs
imul
mov
mov
jno
push
adc
rcr
cmp
test
nop
sbb
add
out
cmp
arpl
sub
lock
and
daa
lds
mov
frstor
and
lds
sbb
bound
xor
inc
xor
cwtl
push
or
aaa
jne
add
pop
jp
lret
and
scas
or
or
mov
sbb
cmp
insb
out
add
dec
shl
cmp
jle
iret
or
bound
adcl
ret
int
inc
ja
mov
mov
fwait
sbb
mov
push
shlb
push
out
and
inc
push
dec
pop
andl
xorl
pop
pushw
push
push
fcomps
lock
adc
mov
inc
and
jne
cmpsl
dec
lods
mov
cmp
add
mov
push
cmp
daa
cltd
andb
stc
jnp
xor
inc
fistl
mov
and
in
push
and
outsl
dec
loope
jle
flds
out
rcl
loope
imul
das
xchg
xchg
ja
inc
or
xchg
call
daa
sub
mov
dec
int3
test
sbb
mulb
orl
push
cmpb
inc
das
stos
xchg
dec
xchg
sbb
mov
push
push
jle
push
loop
int
pop
lock
push
xchg
mov
inc
mov
jl
sub
mov
fildll
rcrb
lock
lcall
lahf
cmc
dec
rol
lret
repnz
and
std
int
add
faddl
scas
imul
cmp
in
or
dec
mov
stc
jns
mov
stos
in
jl
nop
jle
or
fnsave
mov
dec
or
cltd
jecxz
sbb
mov
sbb
lcall
mov
rcr
pop
add
and
mov
mov
or
mov
lret
cmpsb
test
test
dec
add
data16
int3
mov
inc
scas
movsl
ljmp
mov
add
sbb
stc
stos
shrl
sub
and
movsb
test
or
loope
imul
scas
lds
dec
pop
ret
js
push
jmp
mov
sahf
movsl
mov
dec
cmp
mov
sbb
bound
cmpsl
cwtl
mov
push
loopne
xchg
jle
leave
mov
pop
pop
cmc
pushl
mov
sub
into
pushf
jle
mov
xchg
shl
dec
fisubs
jmp
adc
jmp
jo
mov
mov
popf
jle
xchg
sbb
scas
js
mov
addb
stos
aam
rcr
test
pop
mov
mov
adc
cli
leave
push
mov
cmc
jmp
sub
and
fs
pusha
dec
rcll
mov
popf
xor
and
or
pop
push
pushf
sub
pop
in
cmpsb
sbb
mul
or
fwait
into
insl
shlb
out
pusha
and
out
push
adc
ret
scas
dec
aas
add
ds
das
loopne
stos
ds
jl
and
or
adc
inc
xor
dec
mov
add
jne
jne
negl
lods
jl
adcb
cmp
and
pop
sbb
jnp
dec
test
mov
filds
add
leave
sub
lds
dec
and
mov
sub
jne
stos
subl
aaa
cltd
or
je
gs
cmpsb
inc
ror
outsb
xchg
addr16
aad
add
inc
jbe
je
add
and
stos
imul
sbbl
push
lea
pusha
js
adc
pusha
inc
scas
xchg
sbb
add
clc
ret
movsb
pop
lret
loope
fmuls
and
jmp
or
scas
adc
push
dec
push
push
jp
mov
xor
xchg
jle
xchg
dec
dec
leave
std
inc
and
mov
push
sahf
pop
dec
sbbl
loope
cmp
add
mov
mov
jbe
popa
aas
inc
dec
pusha
arpl
in
jmp
addb
lock
dec
xchg
rcrl
adc
sarl
sbb
or
push
lods
dec
stc
jo
popa
ret
mov
sbb
sbb
pop
and
push
push
and
out
rcr
xchg
enter
xchg
inc
imull
leave
xchg
or
loope
cmpsb
jae
or
adc
mov
test
inc
sbb
add
sti
int
push
sub
adc
adc
fcmovne
jmp
out
inc
mov
adcb
loopne
push
cli
xor
sahf
mov
pop
dec
cmp
or
mov
lea
cmp
fsubrl
cli
push
incl
xor
jmp
cmc
mov
mov
addb
lods
xchg
mov
stos
fdivl
jnp
test
divb
sbb
fstpt
pop
push
idivl
push
add
jb
faddl
or
jne
cltd
xor
add
es
inc
xor
rclb
clc
pop
sbb
inc
sub
mov
lret
jmp
push
stos
fnsave
scas
mov
fimull
mov
lcall
pop
in
mov
sbb
movsbl
push
sbb
aas
xor
loope
call
inc
xor
pop
add
mov
out
in
xchg
test
clc
pop
push
xlat
out
cmpl
mov
stos
mov
sahf
mov
inc
mov
mov
push
pop
sbb
es
ljmp
popa
xor
inc
xor
add
es
xor
jge
lods
sahf
and
stc
ja
lds
cli
call
movsb
mov
int
jmp
sub
in
push
pop
sub
popf
pusha
xor
ret
push
adc
cli
loope
inc
or
pop
add
cmc
data16
pop
sahf
cwtl
sbb
cli
icebp
push
pop
mov
mov
stc
and
and
sbb
nop
push
xchg
dec
xchg
repz
sbb
fsubr
mov
aad
sbb
push
mov
mov
jmp
pusha
arpl
cmp
inc
cwtl
jge
sbb
adc
mov
xor
aam
and
mov
push
inc
mov
mov
imul
aas
mov
fsts
sbb
push
lods
pop
imul
lret
data16
mov
fwait
in
push
add
stos
cmp
pusha
inc
mov
lods
sbb
cwtl
sub
ret
loope
int3
sub
mov
int
into
jmp
cli
sbb
lds
push
outsl
jp
inc
sub
mov
imul
mov
pusha
pop
movsl
jmp
cmpsl
ljmp
adc
sub
and
and
movsl
jl
mov
int3
das
or
add
test
fcmovnb
xor
add
sbb
int3
es
inc
xor
inc
shrl
stc
push
adc
sub
das
sar
push
stos
into
cmpsb
jo
data16
push
mov
mov
mov
cld
pcmpeqb
push
test
aaa
xchg
jne
xchg
mov
xlat
nop
mov
dec
jp
add
es
out
or
jne
aaa
sbb
adc
mov
cmp
or
jbe
test
add
ret
stc
into
jnp
shl
inc
out
cmp
fisubrs
or
fwait
inc
dec
cmpsb
dec
sbb
add
dec
mov
jno,pt
fwait
cmc
jbe
pop
pop
sub
and
mov
or
popa
aam
enter
xchg
push
out
sbb
data16
push
or
xchg
ret
int
push
mov
xchg
push
popf
data16
jle
sbbl
add
adcb
jl
pop
push
mov
jmp
push
scas
cmp
shll
cmpsb
and
rolb
cmc
xor
mov
xchg
das
lock
xchg
test
cmpsl
popf
xlat
mov
ss
add
imul
testl
ret
pop
shll
test
ds
or
js
int3
add
inc
add
rol
sbb
jp
scas
inc
pushf
mov
imull
aaa
mov
daa
xchg
inc
pop
cltd
pop
add
pop
mov
dec
cs
js
je
leave
cmp
jg
mov
rorb
push
pop
cwtl
les
adc
pop
xchg
daa
cmc
lcall
xor
xor
fsubl
sbb
pushf
int3
and
cli
push
lret
pop
jmp
neg
mov
fsub
cltd
push
das
xchg
xchg
and
push
pop
stos
gs
inc
rcr
mov
mov
xchg
ret
jg
mulb
xchg
push
mov
es
mov
aaa
dec
fidivs
int
or
jns
cmpsl
pop
jmp
fwait
lods
mov
sbb
jecxz
mov
jb
add
mov
arpl
outsl
pop
stc
das
cltd
into
and
jl
push
push
les
lds
dec
leave
push
cmpsb
add
lea
ffree
icebp
pop
mull
push
push
stos
divl
shrb
packsswb
bound
sbb
pop
pushf
mov
and
sbb
mov
es
dec
push
dec
pop
cmp
outsb
xchg
jns
or
or
cmc
rorb
and
fiadds
fbld
jge
push
mov
enter
mov
mov
mov
lock
rorl
mov
inc
int
repz
xor
dec
movsl
pop
push
cmpsb
data16
add
sbb
jo
imull
imul
xor
sbb
pop
sahf
popa
jecxz
in
stos
xor
cmp
dec
out
cmpsb
mov
xlat
fcoms
les
sbb
jnp
xor
imul
pop
ljmp
pop
dec
shl
cli
xchg
xor
mov
stos
or
xor
test
adcb
push
iret
cmpsb
cmp
enter
mov
jns
xchg
and
icebp
sub
push
inc
pop
inc
je
pop
mov
jl
inc
mov
test
dec
cmc
xorb
subl
imul
pop
and
movsb
subb
in
loop
push
jne
cmc
rclb
cmpsb
mov
jns
pop
movsl
or
loope
inc
subl
xor
inc
ds
addb
sub
ja
mov
mov
inc
sbb
push
sbb
inc
enter
addb
stos
or
enter
lret
cmc
idivb
fs
or
dec
fucomi
sub
mov
fisubl
pop
push
sbb
stc
jecxz
jle
sbb
mov
test
pop
pop
test
enter
rcrl
jge
stos
sbb
mull
fidivl
insb
lcall
arpl
popa
pushf
xchg
mov
or
and
leave
jbe
cmp
add
lahf
push
sbb
popf
and
repnz
sbb
rol
mov
push
hlt
and
ja
inc
int
jp
mov
inc
std
or
jl
das
lret
jle
insl
bound
xor
scas
xor
mov
xchg
push
stos
jne
pop
ret
dec
cmp
sahf
mov
sbb
or
fsubrs
mov
movsb
loopne
mov
sbbl
int
pop
add
into
not
push
aad
push
xchg
push
inc
inc
sbb
pavgw
cmp
push
cmpsb
mov
xchg
lock
je
out
xor
xchg
inc
cs
push
xor
sub
push
repz
loope
leave
insl
ret
orb
mov
orl
jbe
icebp
push
sbb
popa
mov
add
inc
mov
stos
shlb
mov
or
filds
or
mov
mov
fnstsw
stos
and
add
adc
or
daa
sbb
push
outsl
push
loopne
or
ret
test
jbe
leave
jnp
mov
or
push
dec
xchg
jbe
inc
lock
ja
xchg
mov
jle
addr16
xor
out
fbstp
cmp
icebp
push
dec
add
sbb
dec
repz
sbbb
stos
and
dec
push
sti
xor
mov
daa
mov
or
add
xchg
ret
lds
push
pop
and
xchg
push
push
jns
mov
push
movsl
or
adc
mov
andb
lret
les
sahf
pop
or
iret
inc
push
scas
les
dec
jl
or
inc
int3
and
add
push
mov
outsl
lea
fdivl
stos
repz
lcall
xorl
stos
mov
orb
adc
roll
add
push
add
sbb
out
data16
jp
dec
insl
pushf
enter
outsl
rorb
out
mov
sti
shlb
jg
ret
daa
push
cmovbe
js
fisubrs
jne
pop
ficoms
jle
sahf
pushf
and
add
nop
push
push
test
test
lock
divb
mov
or
shll
or
or
push
fwait
xchg
and
les
insb
scas
fwait
mov
add
call
sub
jle
cmpsl
arpl
jg
xchg
out
lods
bswap
in
sahf
mov
cmc
aaa
mov
shlb
cmp
std
cmp
jno
mov
mov
jge
cs
sbb
lods
or
stos
stos
cwtl
loopne
inc
mov
jbe
jp
cmpl
add
cmp
stc
push
lds
test
out
mov
mov
inc
decl
mov
cmp
mov
ja
mov
movsb
add
and
sbb
jo
xor
test
mov
loop
in
scas
popf
shlb
dec
andl
pop
push
mov
xchg
and
addb
out
in
lahf
jbe
or
popa
mov
lret
xor
dec
inc
sbb
es
insl
test
mov
orb
jns
lea
or
push
fdivrl
cmp
cmp
push
inc
sbb
pop
mov
std
xor
mov
pusha
out
pop
roll
xchg
fdivrs
hlt
cwtl
data16
add
test
aaa
and
mov
pop
aam
jnp
jb
into
cmp
sub
ret
mov
and
mov
jb
xor
mov
daa
sub
jno
inc
nop
dec
les
gs
inc
out
sub
cwtl
dec
jo
fucomi
dec
pop
fmuls
dec
jns
fstpl
cld
mov
cmp
movsl
clc
cmp
cld
pusha
mov
out
or
push
or
scas
inc
inc
dec
jp
enter
fisttpl
bound
mov
lahf
push
nop
mov
int3
dec
xorl
mov
mov
push
fildll
movsl
mov
xor
sbb
idiv
fdivrl
inc
xchg
push
mov
jmp
mov
lcall
sub
push
popf
cmp
mov
lahf
mov
js
imul
mov
xchg
mov
dec
mov
clc
push
jae
xorl
push
jg
cltd
cltd
push
lock
jecxz
pop
pusha
test
icebp
xlat
xchg
pop
add
lret
cmpsl
pop
test
insb
pop
lret
inc
inc
and
insl
push
lea
cmp
add
ret
or
inc
push
lods
test
mov
ljmp
jecxz
cmc
scas
mov
call
in
push
jge
or
hlt
nopl
or
or
clts
push
sub
sub
cltd
es
inc
dec
sub
add
mulb
sbb
cmp
mov
jmp
lcall
lcall
and
dec
inc
dec
sub
dec
pop
mov
push
fisubs
adc
push
aam
adc
or
das
or
and
jg
loopne
sbb
insb
add
inc
and
mov
jmp
rcl
fisttpl
sub
loope
inc
xor
mov
cld
jecxz
dec
cli
cwtl
in
aad
enter
xchg
mov
inc
cmpsl
inc
cmp
xor
jno
adcl
hlt
out
in
std
pop
push
and
scas
icebp
mov
dec
stos
fstp
add
xchg
jmp
xor
fiaddl
mov
inc
add
add
ret
scas
movsl
popf
mov
aad
or
mov
das
inc
mov
lds
dec
push
and
pop
xchg
jo
sarl
loopne
rolb
jnp
loopne
lahf
repz
push
sbbb
mov
insb
or
mov
sub
and
dec
dec
in
fs
sbb
mov
add
mov
sub
push
cmc
and
movsl
scas
mov
mov
pop
aas
ljmp
jno
pusha
ss
push
add
mov
arpl
fwait
mov
imul
cmp
mov
cmp
ja
xor
push
mov
or
xor
jle
cli
cld
inc
in
mov
pop
addr16
loope
jnp
es
add
out
and
ljmp
in
adc
es
push
into
inc
pushl
jle
aad
sbb
xlat
inc
xchg
pop
dec
and
inc
roll
out
add
sbb
filds
xor
dec
les
jl
jge
or
js
stos
adc
in
fdivl
jg
lods
add
mov
lret
pop
or
mov
int
clc
adc
ret
jno
in
div
xor
push
inc
arpl
and
std
sti
mov
inc
pusha
xchg
jmp
in
inc
pop
loope
fsubr
xor
cltd
lcall
adc
pop
subb
fwait
insb
push
sub
insb
xchg
into
sub
stos
mov
mov
and
fimull
sub
mov
mov
push
imul
jmp
fcmovbe
add
stos
inc
fsub
hlt
jne
cmpl
inc
jb
sbb
aaa
adc
addr16
mov
sbb
xchg
ds
xor
dec
hlt
ss
mov
js
out
inc
xchg
pop
in
outsl
push
sub
les
int
xor
adc
jl
flds
push
jbe
add
pop
and
inc
push
or
xchg
out
mov
jae
jg
pop
movsl
aad
ret
pushf
xor
insb
dec
sbb
sbb
mov
push
sbb
cmp
sbb
pushf
mov
sub
loop
or
faddl
jnp
pop
roll
orb
push
in
test
out
push
jb
inc
mov
pop
sub
test
inc
sbb
add
es
ret
das
insb
int3
jl
fcoms
jno
in
ja
mov
push
orl
lods
inc
ret
imul
cmc
adc
mov
pop
xchg
aam
mov
lret
cmp
pop
xchg
rclb
addl
js
out
loope
daa
nop
xor
ljmp
aad
ret
lock
or
jbe
aas
xchg
push
loop
test
sub
lret
cwtl
jp
add
push
sbb
fwait
sub
loope
inc
mov
jmp
jns
sti
jg
xchg
or
pop
stos
lods
xorb
imul
xchg
pop
push
adc
adc
imul
fwait
sbb
jge
dec
ret
pop
inc
add
sub
jl
out
inc
or
cmpl
sbb
scas
ret
movsl
shll
and
sahf
ljmp
adc
jp
pop
push
jp
orl
push
sbb
push
add
ds
cltd
mov
repz
sbb
inc
lret
jmp
mov
and
fidivrl
dec
mov
dec
pop
fcomps
rorl
push
mov
insb
fcomip
pop
stos
mov
dec
sub
cmp
outsb
xor
dec
xor
mov
sub
mov
mov
jmp
jns
push
xchg
stc
pushf
imul
lcall
cli
jb
lock
sub
xor
insb
jge
test
stos
aam
fimull
add
lea
mov
xchg
push
or
adc
sar
or
sub
aaa
bound
jnp
divb
fidivrs
pop
loope
add
insl
add
int
jb
jecxz
and
and
cmpsb
sub
pop
xor
add
push
adc
popa
cmpsl
inc
or
add
lds
test
sub
pop
sub
fiaddl
xchg
push
rcrb
mov
push
mov
sub
push
leave
jno
int3
ja
ficompl
inc
adcb
jle
adc
mov
mov
dec
inc
mov
in
jg,pt
push
cmp
push
stos
pusha
iret
test
mov
mov
shrl
adc
or
dec
arpl
pop
jmp
mov
inc
cli
std
mov
mov
add
ficoml
adc
pop
add
fnstcw
push
jle
cli
sbb
ds
dec
mov
sbb
sub
adc
add
inc
je
add
adc
lea
xchg
dec
sbb
add
mov
arpl
sub
add
popa
lods
sbb
fmull
sub
shl
addb
dec
aam
push
and
out
sahf
mul
inc
dec
mov
inc
push
outsl
pop
lret
inc
jns
test
dec
aas
add
mov
or
cmpsl
ja
pop
xor
xorl
mov
frndint
bound
add
dec
test
arpl
xchg
into
int
shll
pop
ja
dec
rep
mov
lcall
les
icebp
mov
dec
sub
push
push
rolb
push
mov
pop
mov
roll
scas
pusha
xchg
mov
mov
or
dec
mul
pop
add
ret
cmp
pop
test
pop
push
pop
mov
andl
stos
ja
push
jb
ret
pop
sbb
xlat
add
sbb
or
daa
push
lods
mov
adc
test
mov
mov
pop
sub
cmp
add
stc
test
sub
loop
jne
inc
enter
pop
push
pop
inc
dec
xchg
pop
and
inc
and
lret
cltd
pusha
jb
mov
sbb
stos
xchg
push
nop
rol
rorl
ds
jle
push
les
outsb
daa
call
ret
lcall
xor
or
out
push
fcomi
jne
xchg
cmpsb
cmp
cmpb
mov
xchg
and
push
pop
andb
add
int
mov
cmp
lret
jl
mov
pop
pop
inc
inc
ljmp
ja
sbb
dec
inc
cld
push
sub
jle
sbb
pushf
sbb
xchg
rcll
push
dec
xor
fwait
add
jp
push
inc
in
sti
xor
cs
ret
pop
sbb
js
and
sbb
inc
jo
sbb
add
jnp
je
add
dec
push
nop
inc
jo
dec
and
cmp
cmp
xchg
out
adc
arpl
sar
sbb
test
and
callw
call
das
jmp
fisttpl
cld
int
xor
pop
pop
xor
cmp
es
inc
pop
jbe
stos
mov
jg
loopne
pushf
and
xchg
fiadds
adc
adc
in
mov
sahf
bound
mov
and
mov
xchg
sahf
fs
add
pop
mov
inc
xchg
push
invlpg
xlat
add
sbb
add
test
fiadds
pop
push
mov
mov
xor
lea
test
add
stos
or
cmc
or
scas
js
mov
cmp
mov
out
pop
mov
outsl
mov
xchg
lret
out
cld
test
sahf
mov
lds
cli
shl
pop
xor
orb
bound
jle
mov
jge
arpl
mov
cmp
push
dec
fnstcw
jge
ret
and
rcr
push
vmovlps
adc
ja
jge
inc
xchg
add
push
lea
hlt
lcall
jmp
arpl
push
out
jne
xchg
data16
ret
or
push
or
loop
lds
repz
idiv
or
push
sbb
loopne
popl
jl
mov
ror
iret
cli
into
jno
xor
sbb
enter
inc
pop
mov
inc
insb
xorl
jg
leave
bound
push
mov
jge
scas
xchg
jp
pop
fstps
push
xor
in
or
gs
push
arpl
dec
jg
ret
insl
adcb
and
cmc
lea
orb
ret
inc
cmpsl
notb
jl
or
and
ja
xchg
std
cltd
pop
int3
lods
jns
add
test
sahf
negl
sub
inc
mov
and
lea
inc
and
fmul
xchg
push
add
test
push
and
or
or
outsb
ljmp
inc
nop
mov
add
hlt
cwtl
cmp
jl
into
idivb
push
daa
orb
gs
mov
sbb
fcmovbe
int3
add
pop
popa
add
and
sbb
test
nop
mov
xchg
mov
xlat
jns
out
mov
scas
or
inc
push
mov
add
cs
inc
mov
mov
inc
mov
mov
cmp
cs
sub
bound
push
verr
repnz
jp
movsb
stos
adc
xor
into
imul
mov
leave
hlt
push
test
sub
jbe
push
xlat
xor
mov
sub
inc
rclb
xor
out
mov
mov
call
inc
test
cltd
lds
or
cmpsl
mov
xor
xchg
dec
fucomi
outsb
mov
fst
add
dec
adc
popf
aad
or
mov
clc
xor
and
lods
inc
push
pop
mov
aam
mov
sahf
dec
jmp
xchg
jecxz
mov
sub
xchg
mov
sbb
jge
dec
imul
push
sbb
fadds
idiv
loope
push
or
mov
cltd
cli
jecxz
ljmp
push
xor
incl
icebp
xor
xchg
movsl
sbb
push
mov
sahf
inc
dec
sbb
push
shr
or
jmp
pop
ljmp
push
scas
call
mov
pop
dec
lret
jl
stos
sub
or
shrb
cs
gs
out
sbb
icebp
xchg
mov
add
dec
inc
add
adc
add
xor
push
rcrb
inc
lret
mov
cmpsb
mov
or
lret
sbb
xchg
aaa
jns
mov
pop
adc
pop
andl
out
and
or
xlat
add
ret
cmp
repnz
xchg
pushf
mov
xchg
xchg
and
sub
test
cmp
mov
jno
mov
lahf
xchg
inc
push
push
ret
and
add
mov
cli
inc
scas
fcoml
sahf
into
push
jp
adc
aam
pusha
sbb
pop
mov
stos
aas
pop
pusha
testb
xorb
icebp
xchg
add
sub
into
xchg
pusha
incb
or
xchg
fwait
sarl
push
or
dec
out
push
xor
xchg
push
lock
adc
or
pop
and
ret
shll
add
fsubs
sti
inc
jb
fimull
data16
dec
dec
in
aad
mov
pop
sarb
fwait
jg
mov
cld
cmp
sbb
out
fmulp
orb
cmp
sar
push
pop
push
jnp
addb
cli
and
loopne
loop
pusha
jb
push
push
add
into
add
or
outsl
lds
xchg
add
sarl
adc
mov
fcmovb
jns
push
push
xchg
and
repz
cmc
ja
ja
jne
sbb
ret
test
lret
cmpsl
pop
xlat
test
add
add
dec
out
add
test
push
decb
ds
lret
jbe
mov
mov
in
sub
shll
lock
sbb
or
lea
inc
int
xor
aam
rcrb
fsincos
arpl
add
add
pop
sti
dec
inc
xchg
sti
dec
adc
sbb
jnp
popf
aad
insb
mov
inc
in
mov
cmp
fcompl
sarb
mov
push
sbb
rorb
fsubl
lds
sahf
mov
pop
shll
jle
sub
pushl
push
mov
xor
and
inc
jnp
ret
dec
pusha
xor
add
xor
pop
test
sub
clc
jnp
loopne
xchg
cmp
or
xchg
adc
cmp
sahf
scas
xchg
imul
les
int3
add
ret
sub
sti
dec
data16
fdivrs
xchg
mov
test
outsl
gs
or
mov
cmp
mov
sbb
test
out
ret
mov
mov
push
insb
inc
out
push
jle
fstpl
adc
push
sahf
nop
cmpsb
rcll
mov
adc
xchg
jo
data16
push
call
test
pop
cmpsb
data16
push
mov
push
cmp
daa
adc
subl
into
dec
pop
daa
mov
sub
gs
xor
or
sbb
frstor
ss
adc
mov
mov
inc
ljmp
jno
push
cmpl
xchg
xchg
cs
mov
push
sarl
in
fcom
fisubrl
faddl
loopne
rorl
sahf
call
sbb
dec
gs
pop
idivb
add
iret
push
sbb
cmc
stos
or
or
scas
andl
add
sub
das
and
add
loop
xchg
xchg
pusha
or
sub
xor
cltd
repz
inc
pop
push
jbe
repz
dec
sar
jle
jnp
xlat
lds
jp
out
fcmovu
jno
lcall
dec
adc
xor
sbb
sbbb
sbb
pop
jl
loope
sbb
xchg
lcall
push
dec
out
cmc
sub
sub
std
mov
icebp
inc
es
repz
in
sbb
lock
imul
mov
xor
int
imul
cmpsb
nop
jno
scas
xlat
lods
xor
adc
cli
xor
push
inc
mov
xchg
dec
mov
aas
stos
movl
cmp
inc
pusha
mov
stos
push
cmpb
or
insb
scas
adc
pop
sbb
int
push
push
in
pop
jmp
sub
inc
add
test
jge
subl
cmp
adc
popf
sub
daa
sub
and
lcall
movsl
cmc
popa
sbb
addr16
xor
test
data16
test
adc
ja
stos
sub
jle
shl
loop
dec
dec
test
mov
popf
jbe
loopne,pt
flds
add
popf
mov
xor
aaa
cld
mov
dec
cmc
mov
aas
sbb
inc
sbb
popf
cltd
mov
insb
mov
test
add
mov
mov
pop
out
or
scas
pop
mov
xor
icebp
jns
sub
orl
xchg
lock
mov
popa
jne
std
nop
ljmp
adc
mov
add
and
mov
fnsave
les
mov
stos
hlt
pop
sbb
sub
inc
or
and
lahf
insb
mov
lcall
jl
outsb
sahf
shrb
lahf
popa
daa
mov
lcall
mov
push
cmp
pushf
inc
lds
sbb
push
xchg
jne
stos
mov
sbb
ret
or
jle
pop
mov
xor
mov
orl
sub
lea
jns
mov
aad
test
mov
mov
sbb
pop
and
or
mov
stc
mov
push
pop
mov
sbb
out
out
push
testb
or
and
cmp
popf
jl
test
stos
imul
push
pop
push
out
loopne
cmp
mov
dec
mov
scas
and
xchg
cli
sbb
jns
mov
dec
push
inc
sub
adc
insb
mov
outsl
int3
and
shr
mov
push
test
nop
push
mov
int3
lret
adc
mov
xchg
addb
rcrb
dec
mov
dec
stos
bound
pop
fcoml
sub
loopne
mov
dec
rolb
rcrl
mov
dec
add
scas
ljmp
sub
dec
xchg
data16
shll
fs
pop
sti
push
out
mov
push
mov
pop
mov
jl
cmp
popf
stc
in
jne
cltd
mov
stos
int
ljmp
sbbb
in
pop
mov
ss
jle
mov
xor
sbb
inc
add
int
sbb
jno
stos
push
add
mov
sbb
insb
inc
lds
inc
jb
mov
fcmovne
mov
insl
xor
popa
ljmp
popf
adc
xchg
inc
jl
inc
in
sub
add
sbbb
lods
xchg
fs
addl
js
hlt
mov
mov
mov
mov
cmc
push
add
dec
push
pop
dec
lahf
mov
test
push
es
inc
out
inc
fsubrl
xchg
lds
jae
leave
pop
mov
or
push
shrl
mov
inc
jp
dec
xor
stc
sub
ljmp
mov
mov
cltd
arpl
int
out
imul
push
frstor
sbb
jecxz
cmp
sbb
cmp
push
icebp
sar
aam
rcrb
sbb
add
add
or
inc
inc
in
dec
test
lods
mov
xor
cmc
sahf
fmuls
subb
inc
lods
mov
inc
dec
pop
xor
rolb
xor
mov
loop
gs
or
mov
aaa
cld
call
xchg
bnd
mov
ss
stc
pushf
repz
dec
int3
mov
rcrb
push
insl
loope
push
push
adcb
out
inc
pop
cmp
flds
jmp
in
sbb
xor
push
push
sbb
xchg
push
lahf
or
pushf
mov
inc
gs
insb
dec
pop
cltd
lcall
xchg
stos
mov
popa
xchg
cmp
inc
add
xor
rolb
xor
jb
shlb
popa
and
dec
xor
mov
xlat
fdivr
les
mov
nop
sbb
insl
bound
filds
dec
mov
xchg
test
ret
sahf
pop
out
fistpl
jno
inc
mov
xchg
push
imul
xor
dec
pop
xchg
ret
int3
xchg
adc
aad
mov
sub
dec
add
add
push
pop
mov
add
sbb
pop
xor
sbb
add
jne
sbb
mov
or
in
sbb
stos
sub
lret
mov
xchg
mov
sbb
mov
jge
test
das
ljmp
push
add
jnp
es
or
popf
push
xor
jne
imul
inc
push
jns
xchg
shl
jmp
adc
loope
es
pop
mov
adc
mov
fs
cmp
lahf
mov
add
sub
sub
test
mov
enter
inc
sub
jl
je
push
pop
ret
sti
jl
movsl
sbb
pop
lds
add
cmp
adc
xchg
adcb
inc
dec
push
pop
adc
sub
outsb
mov
aaa
sub
mov
push
jne
dec
ljmp
sahf
push
mov
pop
data16
cmp
pop
inc
std
push
lods
rcrl
shll
lcall
imul
stos
test
fnstcw
push
mov
loope
cmpsl
mov
and
js
test
mov
add
mov
jecxz
cmc
shll
jnp
jmp
cmp
nop
cmp
sbb
pop
lods
push
xchg
xchg
lds
or
adc
dec
sahf
cwtl
push
sub
test
jae
pop
xchg
add
imul
xchg
fistpl
clc
or
push
repnz
daa
cmc
sub
jb
cmp
ficoml
fidivl
stos
mov
jg
sbb
dec
or
nop
lret
inc
cmc
jmp
fsubrl
xor
inc
sbb
in
xor
push
or
popa
sbb
fwait
pop
mov
loope
ja
add
subb
imul
lahf
sbb
imul
adc
inc
clc
xlat
adc
push
pop
xchg
pop
xorl
jle
push
inc
push
rorb
out
out
dec
rolb
sti
test
mov
push
addr16
pop
xor
sbb
pop
aad
mov
inc
push
xor
pop
fdivrs
pop
xchg
fcoml
ds
outsb
sub
push
or
jle
pop
data16
addr16
sbb
cltd
nop
int3
bound
push
xchg
and
shll
dec
addr16
or
into
ret
lods
popf
rcrb
mov
xchg
add
pop
mov
mov
mov
push
push
fcmovb
sub
adcl
shr
add
push
pop
sbb
mov
jbe
jmp
and
adc
mov
sub
cmp
or
jmp
out
mov
movsb
movsl
pusha
loope
ret
repnz
fnstsw
pop
add
mov
xchg
pushf
sub
mov
fcmovnu
enter
xchg
xchg
ror
and
js
out
fucom
jo
push
es
out
enter
test
ds
and
scas
cmpsb
pushf
lret
mov
sbb
daa
push
stos
sbb
cmpsb
inc
cmpl
push
insl
push
test
inc
mov
or
ret
mov
shrl
icebp
inc
xchg
fadd
popa
test
shlw
ja
xor
cld
std
mov
int
cmp
in
in
int
pusha
aad
lods
das
shlb
test
xchg
inc
or
adc
daa
cmpsb
mov
dec
cli
dec
popf
jbe
sbb
pop
gs
test
or
icebp
test
mov
mov
add
fwait
outsl
test
lret
sbb
mov
add
xchg
xor
inc
imul
mov
sbb
out
and
push
pop
pop
scas
repnz
fcompl
mov
xchg
add
cmp
inc
push
daa
rclb
test
gs
subl
mov
aas
adc
pop
ljmp
sbb
adcb
inc
jno
cmc
test
mov
inc
xor
inc
xlat
stos
dec
shlb
vpcmpeqw
lds
xor
in
in
pop
mov
repz
jp
pop
jno
hlt
mov
push
dec
adc
jge
mov
test
mov
push
lods
mov
sub
sbb
lret
dec
or
adc
pushf
mov
mov
sbb
cmp
bnd
add
stos
sub
fwait
xchg
inc
add
sarb
fsts
push
xchg
fsubr
outsb
sub
adc
xchg
sbb
mov
fistpl
xchg
movsl
add
aas
nop
ror
push
int
dec
xchg
xor
add
jne
sbb
dec
mov
mov
push
xlat
and
out
and
ljmp
cmpsb
and
adc
pop
aam
cltd
push
jmp
or
jb
xchg
mov
cld
push
rclb
loope
test
out
inc
mov
jle
sbb
push
dec
lock
push
jne
fwait
pop
push
dec
ja
fdivr
dec
ret
push
stos
aas
mov
lret
or
jmp
jmp
lock
push
shl
cwtl
rcr
nop
cld
mov
xchg
jge
gs
mov
jp
dec
push
mov
and
test
cmp
lahf
xchg
pop
mov
outsl
jne
mov
mov
imul
pop
add
std
imul
inc
fwait
out
pop
rorl
adc
sbb
ret
call
dec
push
data16
cmpsl
add
push
and
dec
and
insl
mov
jne
imull
push
inc
mov
test
push
sahf
popa
add
out
or
push
mov
and
loop
es
xchg
cmp
jb
fs
aad
lods
ljmp
add
mov
inc
pop
sbb
cmp
push
or
jle
dec
mov
mov
mov
lcall
insb
shl
dec
lock
mov
sub
scas
ret
jne
jns
or
ds
in
mov
cmc
mov
int3
jl
pop
add
dec
cltd
cwtl
shlb
push
lods
push
movsl
mov
cmc
xchg
je
mov
and
popa
push
dec
xor
scas
inc
in
sub
shlb
outsl
add
cmpl
sbb
out
mov
stc
sbb
sahf
mov
pop
pop
sbb
mov
jl
test
arpl
jno
hlt
mov
ret
fcomps
or
ficompl
inc
rolb
out
cmpb
push
sbb
stos
pop
lret
add
cmc
sbb
mov
push
jns
arpl
adc
push
fists
orl
sub
xchg
in
xchg
adc
jg
sahf
addb
shll
push
or
ss
jl
inc
push
inc
xor
clc
lea
loope
lds
sub
bound
lods
push
cmc
pop
aaa
rcl
outsl
pusha
push
rorb
sarl
nop
dec
neg
rcrl
cmpsb
fsubrl
shll
dec
pop
js
fldl
push
stos
inc
jmp
insb
lahf
mov
insb
aad
movsb
aad
mov
pop
enter
adc
push
sbb
mov
mov
fnsave
dec
and
dec
insl
mov
ret
sbb
icebp
xchg
test
inc
xchg
inc
sahf
dec
pushf
or
cmp
stos
sbb
dec
outsl
push
icebp
push
sub
cmp
mov
gs
fsubrs
cmp
stos
pushf
cmp
inc
sbb
test
stc
add
mov
add
push
lahf
push
jno
xor
lret
or
add
dec
ret
and
test
in
adc
xchg
test
mov
pop
test
push
aaa
cltd
popa
lret
dec
pop
inc
outsl
mov
jl
pop
rorl
pushf
in
bound
mov
and
ficoml
mov
and
mov
test
dec
lahf
les
jl
lods
xchg
xor
rorl
cmc
mov
inc
push
push
mov
jne
mov
shlb
shll
cmc
lds
psubusw
mov
sbb
or
sbb
ret
xorl
stc
push
sbb
dec
loopne
push
mov
jb
xor
scas
add
std
ret
and
and
fs
xchg
or
int
loope
jmp
pop
movsb
das
sahf
add
sbbl
push
sub
popa
sub
sahf
mov
dec
mov
js
sub
xor
out
loope
sbbl
hlt
xor
cmp
mov
jns
push
jnp
mov
je
fisubrs
stc
loopne
jnp
xor
jle
mov
cmp
mov
cmpsb
pop
cs
dec
adcl
xor
pop
out
loope
out
xlat
add
ret
adcl
loope
or
in
xchg
es
mov
addr16
push
push
ds
lahf
mov
pop
dec
sahf
mov
push
in
jge
bound
inc
inc
mov
sub
mov
bnd
cmc
lods
enter
sub
add
aad
nop
outsl
mov
mov
test
sbb
pop
push
push
ljmp
or
sbb
or
add
cwtl
and
std
sahf
scas
xchg
std
cs
pop
mov
inc
dec
int3
inc
out
in
push
popa
mov
dec
adc
xchg
mov
pop
aam
mov
or
add
stos
stc
fsubs
lds
mov
les
xor
ljmp
in
dec
adc
push
shlb
add
sahf
or
dec
add
adc
sub
or
and
fstl
movsb
sbb
outsb
xlat
mov
pop
add
add
jnp
shlb
or
mov
aas
loope
stos
dec
dec
pop
pusha
push
andb
scas
jle
adc
pop
out
lods
and
inc
and
pop
xor
xor
shll
rcrb
aad
jb
push
xor
ss
std
ja
lret
adc
mov
in
pop
jl
pop
inc
jo
pop
cmpsl
or
xor
cmp
cli
sahf
imul
xor
mov
in
sbb
and
sbb
pop
pop
jmp
in
loopne
je
dec
stos
sti
sti
pusha
ljmp
fadds
sbb
lcall
xor
mov
pop
js
fisubl
cmpsl
jnp
and
jns
or
int3
pop
popa
sub
icebp
lods
add
sbb
lock
mov
daa
or
shll
js
lock
scas
cmp
sbb
add
pop
popf
cmpsl
push
movsb
inc
jbe
lods
movsl
push
lods
mov
xchg
lea
test
sbb
stos
push
push
cmp
or
push
cmpsl
stos
dec
outsb
mov
dec
mov
lock
mov
or
in
cmpsb
jno
and
sahf
mov
mov
adc
sar
lcall
pop
jl
jge
dec
std
pusha
mov
mov
test
mov
into
addb
mov
jo
jns
push
pop
negb
shlb
mov
mov
xchg
das
movsl
fs
gs
pushf
xchg
or
inc
popf
cmp
gs
fwait
mov
lds
cmc
or
mov
push
push
cmc
fwait
mov
xchg
push
cmc
or
push
push
adc
xor
in
sbb
or
push
or
and
lret
lds
sub
adc
loope
or
cmc
icebp
xlat
and
or
mov
sub
xor
add
cmp
into
clc
cmp
gs
out
aad
decl
rcrb
fstpt
pop
sbb
dec
inc
push
sub
mov
cmpsb
imul
in
hlt
sahf
mov
test
hlt
and
pop
jno
lds
rolb
inc
or
mov
push
jb
jnp
subb
repnz
jne
or
stc
lahf
dec
push
jmp
mov
xchg
out
pop
adc
push
jno
pop
jle
mov
jl
add
mov
xchg
adc
addl
cmc
sbb
push
and
shrl
xchg
push
push
push
rcr
sub
push
or
ds
lret
in
jg
jge
out
orb
aas
pop
stc
mov
loop
fidivrl
jle
in
dec
push
cmp
push
inc
adc
testl
push
and
pop
cmpsl
test
subb
cmp
xchg
push
cs
mov
inc
pushf
pop
sub
inc
dec
pop
mov
lcall
aas
mov
xchg
xchg
dec
testb
insb
daa
mov
inc
mov
jne
push
jbe
add
lcall
sub
shrl
insl
imul
aaa
sub
xchg
adc
lahf
lea
lret
sbb
push
mov
test
dec
lret
fnstenv
or
sbb
mov
jl
in
adc
pop
cwtl
int
or
outsb
outsl
pop
mov
das
enter
test
stc
cmp
push
nop
cwtl
dec
adc
inc
lods
mov
imul
xchg
test
sbb
push
int3
pop
addb
push
bound
lret
pop
mov
cmp
in
mov
outsb
mov
js
je
rolb
and
cwtl
push
mov
cmp
arpl
sub
adc
data16
jno
imul
pop
rcll
decl
lret
pusha
sti
pop
je
sarb
test
adc
adc
dec
xor
sub
orb
and
add
lock
jbe
cmp
mov
push
xchg
repnz
push
mov
sbb
dec
lcall
push
outsb
rolb
sti
and
arpl
and
sbb
inc
inc
push
pop
xchg
into
pop
cwtl
addl
xchg
xchg
mov
mov
mov
loopne
les
popa
or
adc
add
xchg
add
roll
repz
push
pop
inc
mov
loopne
xchg
mov
dec
in
xchg
and
pop
notl
mov
sbb
imul
fstp
out
je
sbb
sbb
loop
out
fildl
jo
repz
test
test
lahf
dec
fildll
xor
out
adcb
xlat
add
push
ljmp
ss
or
daa
mov
xchg
sub
icebp
ret
mov
arpl
sbb
test
stos
aaa
rclb
bound
sbb
or
addb
xor
lret
mov
sub
scas
sbb
fwait
or
adc
jbe
and
lock
addr16
daa
call
inc
lcall
bound
cld
lahf
into
push
inc
and
loope
popa
test
xor
or
mov
mov
pop
mov
lea
mov
mov
add
adc
sbb
mov
jl
mov
dec
add
jne
inc
sbb
divb
xchg
add
lcall
sbbb
lods
scas
ret
jns
movb
ss
add
add
in
mov
sti
jl
push
or
jmp
push
sbb
pusha
push
in
mov
inc
pop
sbb
sub
jecxz
jbe
push
cmpl
mov
mov
jge
imul
inc
lods
sbb
inc
fbld
jbe
sub
fwait
fadds
lods
add
scas
pushf
adc
xchg
push
mov
and
fisubrs
aam
fsubs
ret
jns
push
pop
inc
leave
pop
or
xor
adc
fidivrs
or
aaa
xchg
push
andb
mov
outsl
pop
mov
nop
push
adc
sti
lds
repz
stc
dec
test
xchg
inc
ja
mov
mov
rclb
or
pop
call
adc
mov
sti
mov
dec
notb
sbb
sbb
out
insl
test
lds
cmc
or
loope
lret
add
xchg
pop
sub
xchg
jno
push
into
shll
dec
sbb
mov
es
cmpsb
int
xchg
das
sbb
out
cltd
cmp
pop
stos
js
inc
sbbb
jecxz
jmp
mov
push
sbb
inc
xchg
dec
or
mov
add
mov
fisttpl
add
loopne
sbb
add
in
cmp
xor
les
adc
jne
inc
sub
pop
orl
xor
mov
dec
sbb
out
sti
aam
xor
and
aad
cltd
leave
mov
popf
outsb
pop
xchg
fimull
in
lds
dec
push
mov
cmc
arpl
mov
pop
insb
decl
inc
ja
inc
sbb
sub
pusha
lock
aaa
mov
adc
bound
fsubr
sbb
mov
adc
add
inc
lret
popf
mov
cmp
aam
scas
push
orl
or
notb
mov
into
les
xchg
xor
mov
mov
lret
mov
push
cmp
ficompl
xchg
outsb
mov
inc
insl
leave
cmp
mov
sub
incl
mov
movsb
sbb
jecxz
es
mov
sbb
popf
cwtl
inc
sbb
mov
or
cmp
pop
jns
scas
ficoml
pop
adc
lcall
test
xchg
aad
aad
push
incb
out
push
bound
aaa
and
popf
pusha
test
lret
lods
xchg
mov
pop
lods
mov
add
faddl
mov
outsl
cmc
mov
notl
fidivrl
sahf
add
mov
or
and
xchg
das
sbb
adc
clc
mov
sbb
push
outsl
dec
imulb
lret
aaa
inc
cld
and
xchg
les
push
inc
out
lahf
or
pop
scas
inc
scas
in
es
dec
in
jne
and
inc
lock
in
push
dec
push
jae
mov
mov
push
xor
dec
push
les
in
dec
sbb
dec
xchg
fisubl
cmp
lds
sbb
inc
sub
xchg
pop
push
cmp
push
cmpsb
jne
in
dec
mov
jmp
stos
fisubrs
push
popa
mov
cmpsl
outsl
push
inc
sarl
out
popf
adc
fldt
xchg
lcall
addb
ja
popf
loope
pop
rcll
dec
movq
bound
mov
or
outsb
pop
call
xchg
push
pop
js
xor
enter
dec
mov
sub
les
pop
pop
out
mov
push
icebp
imul
dec
test
mov
fldl
test
int
xchg
adc
xor
mov
inc
push
ss
stc
fistpl
int3
mov
jno
pop
ja
dec
or
inc
adc
pop
sbbb
lods
sub
xchg
add
cmpsl
icebp
xchg
notb
fucom
rcll
call
sub
sti
pop
jne
das
popa
and
push
leave
repz
ss
push
fistpll
je
pop
mov
enter
cltd
imul
jge
xorb
ret
and
xchg
inc
add
sub
or
and
mov
lea
dec
es
xor
sub
xchg
cwtl
mov
xchg
jne
add
sti
pop
nop
sbb
mov
ret
repz
mov
scas
loopne
xor
cmc
pop
adc
lcall
fwait
xor
pop
inc
sbb
jle
dec
shll
mov
testb
mov
out
lahf
in
push
jle
cmp
cmp
adc
mov
mov
pop
gs
sti
ret
outsl
push
mov
filds
xchg
es
mov
outsb
loope
sub
test
aam
push
daa
in
xor
inc
xchg
addr16
das
adc
xchg
mov
movsl
inc
out
out
mov
or
aam
lods
andb
outsl
rcr
and
lahf
rclb
jae
fcompl
fiadds
pop
adc
aaa
cmpsl
popl
lret
sub
xchg
sub
mov
fmul
adc
mov
dec
mov
fwait
pop
lret
out
popa
loope
rol
stos
inc
or
lcall
adc
das
data16
cltd
or
push
xchg
jp
inc
jae
or
and
loop
mov
leave
rcll
mov
sub
xor
jo
push
dec
iret
push
xchg
sub
out
fildl
fisubrl
jp
daa
es
sbb
shlb
jecxz
pop
add
sbb
out
sbbb
idivl
adc
add
divl
sbb
dec
inc
mov
and
dec
xor
pop
cmp
aas
sbb
adc
or
cwtl
xchg
push
bndldx
adc
out
xchg
or
cltd
mov
mov
jle
addl
or
adc
mov
or
or
xchg
inc
aad
or
and
in
int3
loope
mov
lds
stos
lock
rcll
jmp
mov
sahf
mov
push
and
lods
movsl
xchg
shll
jmp
sahf
test
adc
fcmovb
cmc
dec
xchg
and
inc
out
cmc
sbb
pusha
cmpb
mov
adc
mov
sbb
xor
xchg
outsb
add
xchg
lcall
add
lcallw
sbb
dec
lcall
ficompl
inc
push
mov
add
xchg
in
xor
scas
jno
adc
lock
fisubs
roll
inc
cmc
ss
xchg
jmp
arpl
fwait
popf
mov
in
lcall
fdiv
mov
sbb
mov
sub
add
inc
out
jmp
in
out
test
mov
inc
jle
nop
pop
xchg
xor
mov
and
outsb
pop
mov
incl
xor
ljmp
hlt
push
jmp
vshufps
push
fnstenv
cmp
pusha
jbe
in
add
push
adc
mov
cmc
cmc
sbb
sub
filds
inc
add
int
cmp
cmc
sub
call
fdivrs
in
push
test
addr16
insb
cmpsl
jns
push
cmp
sub
sub
inc
gs
and
add
gs
push
mov
mov
jp
ret
xchg
dec
out
or
mov
lds
dec
fistpl
lock
lret
jmp
ss
pop
xchg
dec
or
mov
mov
push
fnstenvs
into
jno
push
insl
jge
xchg
add
cmp
cmc
into
in
xchg
or
shrb
sahf
sub
mov
loope
inc
pop
jmp
jnp
jbe
adc
push
cmpsb
cld
fcoml
xchg
insl
roll
repz
pop
test
sub
pusha
icebp
ja
enter
inc
adc
lahf
cmpps
cwtl
dec
or
aam
popa
sbb
xchg
out
sar
xor
adc
or
sbb
fcompl
push
dec
push
dec
mov
xlat
popa
lods
test
in
dec
jge
push
dec
cmp
cltd
out
in
pop
inc
dec
add
sbb
loope
cmpsb
xchg
cmpsb
pop
pop
inc
ljmp
outsl
pop
sbb
dec
pop
pop
sbb
rcll
in
jle
arpl
jbe
insb
pop
aad
sbb
dec
fs
jae
or
inc
pushf
rolb
lods
mov
push
xchg
cld
mov
xchg
stos
xchg
inc
bound
push
cwtl
paddsb
les
jae
sbb
mov
incb
sub
repz
out
hlt
mov
pop
xor
mov
lret
mov
fmull
cmp
mulb
sub
repz
xchg
fs
icebp
movsl
icebp
shrl
les
repnz
push
or
jmp
jnp
shufps
push
fucomip
addr16
sbb
or
or
int
outsb
mov
and
pop
aam
aaa
adc
ret
xchg
repnz
push
and
inc
mov
sub
data16
jecxz
aam
repz
movsb
sbb
cmp
in
and
dec
popf
lds
sbb
cwtl
insl
mov
xor
in
lods
lahf
xchg
icebp
stos
pusha
xchg
filds
in
into
into
inc
into
aad
mov
cmc
cwtl
out
sbb
lret
xor
dec
and
dec
jmp
cli
xor
popf
sbb
cwtl
es
fiaddl
inc
fmul
add
pop
cld
xchg
sbb
dec
inc
mov
push
xchg
push
ret
shl
adc
movb
stos
clc
or
add
stos
rcrl
in
fnsave
dec
fwait
or
add
mov
hlt
jbe
fstpl
jecxz
sbbl
and
leave
test
push
mov
lret
jno
mov
pop
sbb
xchg
testl
scas
pop
adc
cltd
fcomps
out
cmpb
pop
pop
jb
idivb
fwait
adcl
lcall
negb
bound
mov
lds
dec
push
pop
mov
pop
jne
add
add
and
cmp
push
sti
int3
dec
mov
cmp
inc
add
xlat
inc
push
mov
testb
ds
xchg
mov
into
and
pusha
stos
imul
pusha
push
insb
fimuls
jle
adcl
mov
sbb
mov
sbb
out
shlb
lcall
xchg
fdivrl
cmpsb
adc
adcl
addb
cmpsl
addr16
mov
xchg
test
and
lea
push
inc
add
add
jmp
pop
sub
dec
mov
fwait
push
movlps
sub
aam
jge
mov
push
and
push
add
sub
hlt
or
push
or
movsb
mov
add
lahf
imul
ret
gs
aaa
cmpsl
or
rolb
mov
xorl
sbb
adc
or
in
test
in
js
pushf
loope
pop
nop
or
sbb
repz
sub
lock
daa
mov
sbbb
test
dec
pop
and
loop
daa
cmp
ljmp
mov
or
rorl
enter
cmp
mov
lcall
push
push
xchg
sbb
push
mov
adcb
pop
xor
enter
add
leave
ret
inc
pop
data16
and
mov
jp
sbb
lret
and
js
mov
sub
sbb
xchg
sbb
xchg
mov
scas
pop
js
push
scas
add
mov
cmpsb
lods
pop
shl
or
xor
inc
shll
es
movsb
add
repnz
mov
cmp
jae
xor
mov
cmc
mov
addr16
movsb
mov
push
inc
push
jae
jge
into
and
loope
add
push
xor
icebp
ret
xchg
push
aaa
mov
sbbl
sub
push
sbb
lods
and
mov
lret
add
dec
bound
push
mov
rclb
fisubl
movsb
inc
mov
ss
or
or
popf
adc
xchg
or
bnd
mov
mov
fs
icebp
cmpsb
sahf
loop
push
cwtl
mov
iret
and
mov
rcrl
inc
movsb
jmp
pop
shrl
ret
cli
sub
add
addl
hlt
cmp
popf
fdivl
data16
nop
cmp
or
mov
push
mov
pop
insl
mov
sahf
lahf
sahf
pusha
test
fucomp
ficomps
out
xchg
enter
adc
jmp
mull
fisubrs
orl
sahf
add
pop
rorl
pop
pushf
js
push
loop
jno
add
shrb
or
out
fdivl
fmull
xchg
cmp
daa
popf
mov
sub
dec
fadds
test
inc
orb
insb
pop
dec
mov
fistpll
inc
jp
mov
rcrb
inc
inc
push
sbb
out
shrb
xchg
add
enter
inc
and
leave
inc
push
les
and
jmp
fadd
pop
gs
fistps
mov
fadds
fdivp
cmpsl
jmp
adc
std
mov
scas
push
mov
dec
stc
dec
xchg
mov
sbb
jmp
push
sbb
lods
cmp
sbb
or
lods
rcrb
sbb
or
cmpl
add
xchg
adc
inc
xor
cld
mov
orl
pop
loope
sbbl
fst
push
out
loopne
and
jmp
hlt
fiaddl
add
mov
add
inc
jp
mov
pop
jo
outsb
testl
jnp
movsl
or
shl
test
ds
mov
lret
pop
out
sbb
pop
leave
xor
subb
xor
lret
leave
jbe
aam
in
mov
sbbb
adc
jge
sub
mov
xlat
fildl
in
ret
push
sub
jbe
mov
dec
and
mov
movsl
push
inc
pop
out
popf
push
jno
ret
push
add
out
push
sbb
loop
xlat
aam
fcmovbe
fidivs
add
mov
mov
inc
in
lods
xchg
aam
push
mov
inc
popa
in
or
jle
add
dec
xor
adc
in
sub
pushf
dec
mov
stos
push
xlat
pop
or
cmp
lret
jne
sbb
push
movsl
inc
stos
es
or
cs
add
push
std
xor
pop
cwtl
sbb
test
sub
test
in
ljmp
xchg
pusha
push
loopne
fisttps
mov
dec
jnp
xchg
mov
mov
and
xor
hlt
lahf
add
sbb
jno
dec
rol
and
imul
dec
mov
mov
pop
ljmp
popf
and
adc
xchg
imul
ficoml
push
jb
insb
aas
inc
dec
fisubs
jne
mov
push
out
bound
cs
push
inc
mov
cltd
pop
jno
mov
test
inc
mov
repnz
cwtl
insb
data16
xchg
jne,pn
mov
jae
pop
ss
push
mov
mov
and
jae
mov
mov
mov
mov
daa
shlb
cmpsl
push
pop
or
sub
cmpsl
dec
cmp
sub
cmpsb
fucomi
fstps
lcall
jno
ja
pop
and
call
mov
mov
lea
roll
add
cmp
addr16
ja
xor
pusha
or
xor
and
push
subb
inc
lcall
fidivrs
jmp
test
lds
jne
andb
ds
insl
mov
cmc
dec
ss
mov
add
pop
jae
cmc
out
xchg
mov
mov
stc
and
or
mov
dec
ja
outsb
pop
add
xchg
jb
fists
jp
pushf
push
xchg
inc
pop
hlt
add
data16
clc
pop
es
iret
dec
pushf
xor
xchg
stos
cmpsl
mov
inc
inc
push
or
xchg
add
xchg
pop
nop
sub
sbb
mov
cltd
scas
push
jae
jg
and
aam
data16
cmp
repnz
inc
dec
ja
hlt
adc
pop
xor
mov
int3
aaa
sub
shll
mov
pop
jge
rol
or
fcomps
incl
insb
mov
rolb
aad
les
aam
inc
jnp
jae
out
fdivl
repz
sub
sbb
adc
cmp
lock
into
mov
mov
adc
jne
jl
mov
gs
sbb
orb
jp
inc
cld
mov
dec
arpl
aaa
pop
mov
insb
sub
iret
pop
xchg
sbb
push
loop
push
lret
test
ret
inc
lret
dec
push
inc
sub
jbe
inc
add
sbb
stc
xchg
cwtl
add
cmp
jne
mov
subl
xor
xor
test
dec
push
out
add
rcrl
nop
add
sub
in
mov
dec
push
mov
jae
jl
daa
shll
mov
jae
sbb
cltd
out
push
leave
jmp
push
cmpxchg
jnp
in
test
dec
jl
pop
data16
jb
cmp
mov
scas
pop
jle
addb
inc
push
imul
pop
popa
ret
jns
dec
cmp
mov
inc
xor
dec
xchg
enter
mov
add
fcmovb
mov
xchg
cmpl
stos
xchg
add
in
lods
decl
into
mov
and
add
adc
fisubl
xchg
test
mov
gs
xorl
dec
popa
sbb
pop
dec
lock
jo
push
popf
imul
out
dec
or
sub
sub
imul
lcall
mov
dec
stos
popf
mov
loopne
or
int
shlb
lcall
lods
xchg
pop
dec
push
ret
ffree
pushf
pop
stos
lcall
adc
inc
cli
imul
xchg
push
daa
imul
lret
into
into
cltd
imul
sub
push
xchg
fists
mov
jge
inc
sbb
fnsave
push
cmpsl
jmp
sbb
out
or
pop
xchg
fistps
mov
jmp
mov
shll
outsl
add
dec
lahf
fcmovbe
pusha
mov
cmp
dec
dec
inc
sbb
add
into
dec
loopne
notl
test
jne
idiv
cs
or
fwait
inc
push
psubw
std
das
xor
add
pop
mov
or
mov
test
movsl
push
repnz
push
jle
or
pop
into
sub
mov
js
imul
addr16
ror
imul
sub
cmc
fisubrs
add
or
sub
and
nop
dec
std
push
inc
cmp
test
js
jae
dec
sub
jl
xchg
push
sub
in
shrl
leave
dec
aas
lods
dec
or
orl
inc
mov
mov
sti
outsl
push
or
sub
sub
addl
sbb
lcall
push
fcomi
test
xchg
sbb
mov
or
insb
rcrl
std
out
xor
sub
pop
adc
sbb
cli
add
fadd
add
fs
shl
jge
gs
xor
ljmp
jl
es
cld
fld
sub
lret
push
adc
and
jb
int
fwait
pop
sbb
pushw
and
data16
into
mov
lods
enter
dec
in
sti
dec
xor
gs
aam
inc
enter
and
or
push
sarb
xchg
mov
pop
push
cld
dec
popf
jg
xchg
adc
sub
push
fst
or
dec
sub
adc
mov
push
lahf
sbb
mov
lret
enter
sarb
xor
mov
andl
scas
out
sbb
es
mov
mov
ret
xchg
jbe
xor
adc
push
push
dec
push
mov
dec
fs
jno
jmp
push
mulb
int3
loopne
cld
into
das
cmp
repz
pop
and
mov
pop
sbb
jp
roll
enter
xchg
pop
or
inc
in
push
push
sahf
mov
mov
arpl
push
push
mov
push
adc
imul
push
insb
inc
lret
dec
jbe
mov
pop
in
fbld
mov
cmpsb
or
pop
out
stos
inc
mov
cmpsb
or
sbb
aam
or
jnp
lcall
std
movsb
push
roll
mov
dec
sbb
sbb
sub
ficoml
scas
ss
fadds
xchg
popf
cmp
cltd
mov
lds
lret
sub
sbb
loop
sti
add
lahf
xchg
dec
dec
fstl
ljmp
addr16
jne
sbb
cmpb
imul
pop
pop
shll
aas
lods
jne
xchg
ss
rclb
cmp
ret
aad
pop
sub
js
xor
xchg
rol
pop
jecxz
or
sbb
cmp
lods
ljmp
mov
sbb
testb
pusha
movsb
cmpsl
das
cmc
mov
loope
mov
cld
dec
test
sahf
cmp
push
push
movsl
repnz
imul
xor
es
sbb
sbb
mov
dec
nop
inc
xlat
sbb
pop
add
xor
inc
in
rcrl
cwtl
or
stos
xchg
popa
push
popa
movb
lcall
popf
icebp
fisttpl
add
addr16
pop
or
jle
mov
pop
out
cmp
xor
add
adc
jo
push
ja
jp
mov
lcall
push
push
jne
push
and
dec
jmp
add
and
pusha
mov
mov
sub
pop
inc
cs
or
jg
leave
into
fwait
sarl
test
push
cmpl
jp
sub
lock
stos
imul
or
mov
ja
int3
push
jo
pop
dec
jl
mov
xorl
loope
xchg
mov
inc
add
and
lods
ror
pushf
and
mov
loopne
inc
inc
push
mov
stc
sbb
cmc
pop
pusha
cmc
movsl
faddl
inc
pusha
and
scas
xor
and
cmp
sbb
add
inc
pop
loope
test
xchg
pusha
or
stc
xchg
gs
sbb
mov
xor
mov
add
xchg
push
sbb
aad
sub
ret
pop
mov
lock
notb
mov
pop
orb
sbb
sbb
jg
lahf
mov
dec
pop
mov
jnp
insl
inc
adc
mov
mov
sub
pop
cmp
call
es
add
xor
scas
xor
push
lods
push
push
xor
lahf
sbb
fdecstp
scas
inc
and
add
lods
sbb
mov
push
sbb
xchg
ret
aad
sbb
add
sub
xchg
push
xchg
mov
jbe
cmpsb
mov
dec
dec
xchg
pop
sbb
inc
roll
sub
xor
ss
xor
mov
xlat
inc
sub
cmpsl
loop
cmc
shlb
insb
loope
cmc
pushw
fs
mov
jp
pop
mov
add
sbb
jo
push
add
jbe
add
sbb
pop
das
add
outsb
jle
out
xchg
adcl
xor
and
sbb
fmuls
mov
sbb
call
adc
jle
mov
xlat
and
mov
sti
jne
mov
js
icebp
cmp
xchg
xorl
xor
rcr
pop
or
andb
fwait
fwait
test
es
add
add
cmc
push
shll
test
dec
xchg
jnp
popf
xchg
cmpsl
or
add
mov
cwtl
lods
push
jge
cmpsb
inc
clc
sbb
mov
cli
or
push
stos
jbe
leave
adc
xlat
lret
in
jne
sbb
push
das
mov
mov
clc
mov
sbb
es
sarb
aad
jb
jp
or
jge
dec
push
pop
xor
fmul
rorb
xor
sub
sub
push
or
xor
subl
into
icebp
adc
xor
mov
jmp
test
sbb
mov
sbb
shll
data16
loop
push
rol
inc
dec
cmp
js
and
leave
sbb
mov
ss
inc
das
push
cli
cmp
jmp
dec
ror
sbb
in
pop
dec
adcl
popf
cmpsb
push
pop
pop
sbb
jecxz
pop
pop
sub
fdiv
xchg
stos
push
jae
jo
cmc
jp
pop
cmc
scas
add
sahf
test
mov
or
mov
xor
fdivr
xor
std
fmull
pop
mov
bound
sbb
xor
inc
sbb
dec
and
inc
inc
movsl
mov
sbb
orb
stos
dec
popa
sbb
sbb
sbb
enter
sub
pop
enter
sti
xchg
rcrl
mov
icebp
sub
in
jne
push
and
stc
xlat
rcpps
cli
jge
into
adc
and
sahf
movsl
or
xchg
push
jne
test
dec
dec
pop
es
add
outsl
mov
loope
sbb
inc
mov
push
daa
out
jg
push
mov
push
mov
adc
fstps
cs
test
mov
pop
and
mov
add
lret
or
add
and
jl
push
addr16
aaa
dec
dec
sub
shll
adc
ds
mov
push
stos
mov
mov
mov
pop
shll
faddl
stos
xchg
cmp
sbb
cmp
mov
dec
sbb
cmc
pop
scas
mov
add
cwtl
pop
nop
insl
mov
dec
push
in
loopne
sti
bound
xor
dec
pusha
scas
xchg
sub
mov
cli
sbb
bound
gs
pop
and
and
push
add
roll
cmc
sub
sbb
fistl
jg
test
stos
jno
ret
test
imul
incb
lcall
push
adc
gs
aas
loopne
lods
pop
lcall
das
mov
pop
push
mov
inc
inc
mov
mov
sbb
shrb
orb
inc
lcall
loopne
push
jle
or
cmp
daa
jle
jb
ret
gs
insl
sbb
jg
mov
stos
pop
add
cmp
jl
xchg
ds
mov
repnz
or
data16
xor
fcompl
mov
stos
adc
je
xor
movsl
insb
adc
inc
jle
xchg
pop
jp
xchg
sbb
insl
push
fdivl
or
sbb
scas
mov
lret
inc
or
hlt
push
stos
nop
or
or
sbb
jle
and
movsb
mov
jne
ret
arpl
cmp
rclb
movzbl
xchg
into
gs
push
push
jge
enter
fisubs
inc
jg
out
push
into
cmc
inc
imul
xchg
jnp
outsl
aaa
loop
sub
push
es
pop
mov
out
bound
lret
pop
pop
stos
inc
out
lds
push
lret
icebp
mov
dec
dec
pop
jle
imul
add
xor
xchg
insl
add
jbe
enter
shlb
jne
or
cli
popf
fs
xor
arpl
test
adc
push
mov
xchg
mov
inc
pop
pop
insb
lret
fld
and
and
daa
jae
popa
add
pop
push
imul
sbb
data16
imulb
pop
sbb
pop
inc
out
pop
inc
mov
nop
mov
scas
arpl
adc
mov
cmp
adc
and
lcall
lahf
inc
dec
out
sbb
mov
push
data16
mov
test
je
lds
inc
add
jae
pusha
mov
test
dec
cmc
insl
pop
aaa
nop
xchg
xchg
mov
adc
leave
xchg
sbb
xor
or
lods
cli
fisubrs
mov
xor
in
imul
jecxz
xor
push
lret
fildll
mov
dec
and
clc
push
lret
stc
inc
cmpsl
sub
lahf
jnp
adc
or
sbb
es
pop
jl
mov
sub
inc
int3
out
int3
xor
xchg
test
cli
adc
pop
push
cltd
mov
stos
push
pop
add
fcoml
call
xor
xchg
jns
mov
orb
fmull
jns
ret
loopne
or
inc
sahf
push
add
mov
mov
inc
cmc
mov
xchg
and
cmp
cmp
cli
fidivl
mov
leave
push
icebp
out
and
loope
xor
jo
stos
sahf
inc
mov
mov
mov
xchg
sub
int
push
orl
arpl
outsb
mov
mov
dec
push
jo
je
loope
or
insb
insb
in
and
insb
mov
mov
pop
lds
add
push
lock
mov
sbb
add
nop
and
int3
gs
dec
out
push
mov
jmp
add
and
out
test
cmp
mov
cmpsl
dec
xor
mov
cmp
loop
cs
imulb
sbb
push
and
sbb
xchg
or
push
rclb
ja
cmp
add
mov
fmuls
ja
pop
std
loope
push
je
adc
ret
xor
xchg
jp
call
adc
jne
test
jbe
lds
or
cmp
lcall
cmpsl
mov
inc
shll
es
cmp
push
popa
xor
jnp
xchg
sti
fisttps
jle
jno
pusha
js
adc
and
nop
and
xchg
inc
icebp
cs
or
xor
ret
pop
dec
mov
addr16
ffree
mov
pop
push
xchg
ljmp
test
ss
jmp
jge
fidivs
dec
jl
jge
xlat
push
sahf
dec
cmp
push
outsl
pop
pop
cld
mov
jp
outsl
push
ljmp
mov
shl
push
int3
xor
inc
add
xor
push
or
pop
cmp
or
jne
mov
inc
or
mov
pop
in
push
adc
mov
mov
mov
in
scas
lea
inc
pop
mov
or
js
cli
out
scas
xor
xor
xchg
stos
cltd
insb
scas
sbb
in
or
push
push
in
adc
fistl
add
mov
mov
push
fstl
fs
cmpsl
stc
shlb
cmp
fstpl
cmpsb
add
mov
fdivrs
lcall
add
faddl
pop
or
daa
stc
pop
inc
test
nop
xor
add
inc
xor
mov
dec
push
lea
call
lea
js
mov
aaa
orl
mov
jae
scas
lock
mov
loopne
fistps
dec
ret
lods
push
ret
jno
cmpb
and
jecxz
sbbl
push
pop
mov
out
test
stos
sbb
pop
mov
int3
ljmp
add
sub
imul
mov
int3
inc
jne
jecxz
or
pop
js
imul
decl
std
cmp
sbb
mov
adc
fdiv
int3
pop
and
lods
and
pop
fs
hlt
mov
into
dec
and
sbbl
push
shr
in
daa
aaa
and
xchg
xchg
mov
and
cmpl
sarb
or
xchg
clc
xchg
jle
sbbl
and
mov
popf
nop
jle
dec
mov
daa
sub
movsb
es
rolb
cmp
or
cmpsl
add
movb
popf
add
icebp
les
mov
ja
cli
imul
shrl
mov
push
or
int3
not
dec
ja
ret
mov
dec
scas
or
aaa
or
bound
mov
in
rclb
jbe
pop
out
pop
sti
outsl
mov
sub
call
data16
shlb
push
sbb
pop
inc
push
cmp
int
jmp
loop
clc
addr16
cmc
jp
mov
movsl
ja
in
push
inc
daa
adc
mov
cmc
adc
mov
push
rclb
jecxz
js
leave
je
adc
cli
scas
xchg
pop
push
jne
stos
cmc
push
inc
cmpsb
mov
out
mov
adcl
dec
and
mov
movsl
mov
jecxz
sbbb
dec
jnp
gs
repz
adc
mov
push
out
lret
mov
adc
pop
push
insb
addl
add
test
add
ret
mov
jo
out
mov
mov
jge
hlt
or
test
pop
nop
cmp
leave
push
adc
pusha
mov
cltd
ss
push
and
jae
sub
lcall
shl
xor
xor
adc
and
jbe
in
orb
or
jle
std
mov
cmpsb
or
lret
lods
pop
xchg
int
jns
je
or
cmc
rorb
mov
aam
adc
xor
mov
outsl
mov
push
aas
addb
ds
mov
push
push
or
add
es
leave
clc
mov
popa
inc
jge
push
popa
sti
sbb
push
jne
fdivrl
fiaddl
mov
fcoms
xchg
inc
jb
jne
ds
movsb
adc
jbe
pop
data16
mov
dec
push
mov
jg
ret
xchg
mov
cmp
add
clc
cmp
mov
jmp
mov
es
adc
repnz
test
or
inc
xchg
inc
mov
out
or
insb
sahf
stos
xchg
sbb
lods
inc
cmp
insl
pop
orb
leave
adc
lahf
stos
mov
stos
or
adc
dec
outsb
add
arpl
mov
es
or
mov
les
mov
into
sarl
and
stos
cwtl
insl
xor
mulb
xor
dec
xor
sub
popa
ret
add
pop
mov
sbb
rcll
mov
loope
inc
lret
out
pop
lsl
xor
sbb
inc
and
sub
lock
fidivl
cmp
test
out
mov
mov
dec
nop
pop
pop
sti
pop
jge
pop
inc
mov
sub
psrlq
sub
dec
pop
data16
shrl
outsb
cwtl
test
fwait
jbe
arpl
xchg
mov
add
jno
push
sbb
ret
or
mov
fnsave
popf
or
mov
std
cwtl
add
mov
jmp
push
inc
lret
inc
jns
or
repnz
test
add
int
xor
ljmp
mov
mov
mov
dec
icebp
arpl
jmp
push
inc
dec
add
leave
stos
out
lock
lret
mov
popf
sbb
movsb
sahf
mov
pop
xchg
sbb
test
dec
dec
subl
xor
sbb
cmpsb
inc
add
ret
sub
jne
mov
insb
rorl
xchg
jnp
push
and
jnp
repnz
lahf
leave
pop
add
mov
sbb
mov
or
sbb
jae
jbe
stos
test
inc
push
imulb
push
je
mov
push
jnp
pop
dec
cld
inc
and
inc
or
adc
or
add
xor
xchg
xchg
scas
sbb
js
data16
cltd
jmp
jl
fisubrs
mov
xor
and
ss
lds
pop
dec
add
rcll
bound
insl
inc
jmp
add
aas
inc
push
xchg
mov
cmp
stc
call
push
xchg
xorb
cmp
imull
insl
push
dec
lahf
rorb
jne
push
fsubr
jne
jmp
cli
adc
cwtl
mov
sbb
cs
jp
test
sub
mov
add
xorb
test
add
bound
js
aaa
std
jecxz
pushf
pushf
repz
cmp
xchg
sbb
cmc
push
fsubrl
lret
jle
test
cmp
cmp
mov
add
out
mov
sub
mov
inc
xchg
jbe
fcomip
or
sub
subps
mov
addb
jl
insb
cltd
xor
imul
mov
pop
fistpl
push
imul
or
mov
clc
pusha
push
addb
fcomip
add
or
cltd
mov
xchg
inc
add
lds
insl
jge
push
aas
lcall
shlb
or
ret
push
lret
xchg
add
arpl
pop
dec
and
adc
mov
lods
xor
es
mov
addb
push
lds
jp
loop
pop
adc
std
test
sub
addr16
cmc
push
xchg
mov
out
pop
push
inc
jle
xor
test
sub
push
icebp
inc
xor
mov
push
adc
add
std
iret
push
sbb
ja
sbb
push
test
push
ljmp
jno
jmp
pop
cmc
push
jnp
out
int3
fists
inc
movsl
push
cltd
sbb
hlt
mov
pop
mov
aad
js
push
sti
popf
push
in
dec
pop
ljmp
das
inc
mov
in
sub
push
cmpsb
mov
inc
mov
icebp
scas
adc
inc
push
andb
or
pop
xor
and
push
cmp
insl
xor
lea
inc
mov
enter
jae
pop
sahf
adc
aas
pop
jbe
call
sub
jge
nop
mov
push
jno
inc
mov
xchg
dec
test
lret
xchg
or
test
adc
mov
mov
cmpl
cmp
in
sbb
sbb
jl
aad
lea
fldl
cmp
mov
fisttpl
pushf
mov
popf
loope
or
jp
lcall
push
js
clc
data16
mov
xchg
ljmp
scas
xchg
xchg
dec
add
cwtl
negl
shr
adcl
inc
inc
mov
mov
push
lcall
pop
xchg
repz
mov
push
mov
or
dec
loope
lds
lret
in
and
lds
add
pop
pop
pop
test
or
push
add
jl
mov
sub
loope
repnz
lock
or
shl
mov
ficoml
mov
jp
pop
hlt
test
popf
imul
mov
sbb
jo
insb
jp
icebp
rol
sbb
imul
xorl
in
add
push
rcrb
ljmp
mov
ds
addb
cmp
loope
fistpl
jl
das
movsl
in
jge
aad
mov
mov
mov
adc
xchg
dec
sbb
adc
mov
xor
cs
mov
or
fsubrs
dec
scas
or
out
ficomps
jnp
mov
inc
mov
dec
sub
fsub
icebp
mov
clc
push
js
xchg
add
scas
rorb
sub
cmpsl
popf
inc
inc
cmpsb
test
push
push
popf
ds
fistl
jmp
rol
aaa
mov
ja
popa
out
mov
sbb
flds
flds
push
cmp
insb
add
xlat
mov
repz
aam
push
cmp
dec
pop
sahf
int3
dec
test
sbb
cwtl
enter
push
sbb
push
enter
inc
push
jg
ja
or
push
and
int
cmp
rol
pushf
xchg
sbb
mov
mov
jb
adc
lret
icebp
mov
popa
pop
mov
int
outsb
pushf
mov
pop
xchg
insl
mov
imul
in
es
inc
out
and
sbb
or
add
xchg
sbb
mov
mov
sub
add
lret
call
rolb
das
add
xor
inc
dec
push
add
xchg
enter
xor
fsubrs
iret
inc
mov
into
pop
push
pop
shlb
push
or
xor
dec
cmp
push
mov
xchg
aad
imull
jnp
inc
cmpsl
loopne
push
imul
movsb
mov
mov
xor
lds
hlt
or
inc
mov
in
add
and
or
pop
pop
test
push
int3
dec
add
add
inc
pop
dec
cmc
jns
pop
js
mov
fcmovnu
inc
mov
mov
mov
fisttpl
sar
jle
pop
adc
pop
sbb
test
push
inc
push
jg
xchg
scas
jg
fmull
dec
insl
mov
arpl
aas
popl
sti
mov
test
cwtl
jge
loop
jae
sbb
fcoml
mov
or
push
mov
mov
jbe
loopne
sbb
dec
jmp
push
repnz
subl
xor
or
sti
sub
icebp
sbb
jle
fcomp
popa
xor
mov
sbb
fnstenv
lock
jae
rol
and
xchg
push
pushw
lcall
dec
dec
push
dec
into
jnp
dec
ret
ljmp
mov
cmpsb
xor
and
std
xchg
in
xor
icebp
xchg
int3
push
mov
test
movsl
ja
xchg
or
fsub
js
mov
mov
pop
or
shll
mov
mov
out
xchg
push
dec
sbb
rcll
and
lods
ret
dec
cmc
adcb
mov
pushf
cs
aaa
push
test
out
or
jbe
mov
test
pop
shrl
push
popf
fs
and
loopne
shll
add
jecxz
mov
nop
or
and
push
ret
add
clc
sbb
pushf
dec
cwtl
mov
cli
add
dec
je
pop
push
mov
mov
inc
ja
sub
pop
add
aad
lods
mov
leave
jmp
stos
frstor
popf
mov
jecxz
jbe
sub
add
xorb
loope
fisttpll
rorl
outsl
add
hlt
sub
je
jno
subb
sbb
das
add
or
fists
xor
out
mov
jnp
shrl
mov
icebp
mov
pop
jbe
and
sub
cld
lods
div
jns
fldt
arpl
out
cli
inc
push
popf
std
cmpsl
dec
push
outsl
inc
lods
dec
loope
test
orb
rolb
xor
jae
pusha
push
jle
xchg
push
out
sbb
xor
sbb
xchg
mov
jcxz
jge
push
push
xchg
repnz
fcomp
push
inc
xchg
mov
push
cmp
mov
test
aad
mov
das
loop
arpl
cmp
gs
stos
cmp
dec
add
js
jne
sbb
js
sti
xor
rcrl
pop
sarl
test
andb
push
divb
dec
xchg
inc
cmc
pop
pushf
icebp
incl
dec
sub
push
xchg
or
orb
fcompl
test
jns
cmpl
pop
xchg
mov
and
add
push
popa
test
inc
gs
pop
mov
js
add
addb
ljmp
repz
cli
std
loope
dec
jnp
icebp
hlt
pushf
push
push
in
fs
movsb
pusha
notl
pop
mov
imul
lcall
fwait
inc
ss
and
fldt
mov
cmp
push
popf
mov
es
or
push
gs
mov
push
inc
outsb
xor
mov
cli
jae
stc
sbb
ljmp
test
jnp
outsb
sbb
into
outsb
dec
mov
pop
mov
lret
sub
stos
lret
fdivrl
imul
mov
jne
imull
and
imul
add
rcrb
fsubrs
inc
sub
aaa
cltd
push
pop
loop
js
es
and
or
popa
or
dec
inc
rorw
dec
add
add
dec
add
mov
aas
push
push
daa
sbb
outsl
rclb
cmp
push
mov
aaa
pop
arpl
hlt
dec
adc
sub
insb
or
pop
std
addb
lea
cmp
das
imul
jp
cmpsl
push
mov
das
arpl
push
inc
dec
add
sti
xchg
add
mov
pop
notb
mov
imul
cmc
orl
int
mov
jmp
sbb
cmp
shll
pop
xor
or
sub
mov
cmpsb
jp
add
and
bnd
inc
lret
or
sbb
mov
rcrl
jnp
mov
push
ret
cmp
pop
pop
lcall
cmp
outsb
fucom
mov
lods
dec
mov
dec
scas
inc
arpl
jle
adc
pop
pop
cltd
clc
cmp
lea
dec
out
mov
push
insl
inc
inc
aas
addb
bnd
inc
add
loopne
cmp
pop
out
loopne
xor
jl
xor
pop
inc
dec
lock
testl
outsl
les
test
jns
push
add
jae
inc
jp
xor
icebp
xchg
mov
push
pop
pop
dec
sahf
add
push
mov
push
jb
jge
sbb
and
or
fisubrs
xchg
mov
sbb
test
cmp
dec
add
sub
dec
bound
loope
pusha
dec
dec
jg
push
inc
lock
add
push
add
pop
xor
mov
push
iret
jbe
push
into
test
sbb
fdivl
push
push
popl
ret
lea
fcmovbe
fistps
dec
mov
jno
inc
pusha
js
mov
xchg
push
int3
orb
xchg
lcall
add
push
sbb
cmpsb
pop
aad
in
scas
ss
pop
pushf
adc
sbb
mov
gs
je
fmull
jg
inc
andb
lods
test
jnp
movsb
ret
notb
inc
push
xchg
test
shl
out
adc
or
stc
xchg
mov
dec
dec
repnz
loopne
xor
and
pusha
pop
sbbb
cmp
lahf
push
lods
or
sub
and
mov
imul
ret
jno
jle
outsl
pushf
lret
mov
shlb
imul
and
or
in
adc
jl
jp
and
xor
popa
mov
xlat
xchg
insl
cmc
shrb
call
sbb
jge
jbe
fisttpl
cmp
adc
push
mov
jbe
es
adc
xor
shrl
push
test
mov
adc
or
jbe
sbb
dec
mov
inc
rcl
nop
insb
inc
dec
push
sbb
sbb
inc
dec
jnp
inc
mov
mov
sbbl
and
and
and
cmp
fwait
dec
xchg
mov
mov
sbb
add
push
dec
xchg
ljmp
popa
lahf
inc
dec
subb
sub
push
in
daa
mov
push
mov
sub
mov
adc
cmp
popf
mov
fs
jno
xchg
or
cmc
ds
lahf
xchg
or
push
clc
movsl
mov
or
pop
movsl
bound
mov
inc
test
fwait
mulb
in
das
or
fcoms
mov
mov
mov
jb
mov
xor
or
or
dec
insb
std
out
scas
add
mov
pop
dec
ljmp
and
xsave
pop
lods
jns
cwtl
mov
fistpl
xchg
add
jnp
imul
inc
orb
sbb
xor
scas
test
cmc
pop
sub
insl
nop
sub
push
scas
dec
xchg
pushf
aad
mov
push
cwtl
mov
jnp
push
push
into
lock
adc
sbb
push
stos
or
jl
and
pop
fsubp
xchg
pop
sub
pop
icebp
test
sbb
jmp
pop
jmp
ljmp
hlt
push
bnd
push
sbb
xchg
mov
push
pop
punpckldq
outsb
lea
stos
int
imull
pusha
mov
pushf
sbb
cmpsl
mov
dec
push
movsb
inc
dec
mov
out
daa
outsb
or
push
daa
pop
push
push
mov
mov
ret
cmp
jne
xor
adc
adcl
or
daa
es
or
leave
rcrb
jbe
mov
dec
sbb
aaa
mov
arpl
adc
pop
push
stos
sub
scas
test
ja
add
sbb
addl
sub
fwait
pop
lods
inc
cmp
addb
sub
in
jl
or
out
mov
mov
pop
ss
cmpb
push
sub
fucom
lock
cmp
lret
cmpsb
addr16
ss
sbb
scas
jne
icebp
jbe
sub
xlat
int3
push
mov
test
mov
jl
inc
mov
push
sahf
pop
or
mov
adcl
mov
mov
fisubrl
or
xchg
sub
dec
ljmp
add
jle,pt
movl
sbb
push
jmp
or
ficompl
xor
jg
ret
movsb
mov
mov
ret
pop
adc
mov
add
and
std
in
add
cmc
xchg
leave
pop
dec
daa
flds
jne
sbb
icebp
sub
sbb
pop
mov
add
leave
add
ret
hlt
lahf
call
jbe
popf
int
mov
aam
sub
mov
ss
lret
cltd
test
test
js
dec
popf
adcb
cmpsl
dec
cwtl
iret
repnz
mov
push
push
popa
shlb
adc
sbb
mov
out
mov
or
mov
mov
add
sbb
js
inc
les
imul
icebp
jge
das
sub
test
or
pop
mov
int
test
cmp
dec
xor
or
xchg
inc
lods
add
fidivl
in
dec
shr
into
push
push
sahf
repz
add
fwait
mov
xor
aaa
in
cmc
cs
mov
sub
shrl
push
xor
and
addb
push
mov
outsb
stos
lods
push
pop
in
sub
shrb
arpl
nop
sbb
in
jnp
dec
mov
notb
sub
out
dec
leave
cmc
and
data16
aad
push
leave
mov
in
out
imul
sbb
cmc
loopne
out
lcall
mov
aam
ds
cmpsb
outsl
in
adc
mov
in
das
loope
add
or
cmp
cli
notl
sub
movsl
lods
cli
cmpsb
mov
data16
dec
hlt
or
insl
arpl
popf
imul
stc
je
cmp
bound
sub
pop
sahf
xchg
sbb
imul
dec
mull
pusha
lret
out
movsb
mov
xor
aaa
sti
mov
addr16
mov
dec
std
xor
ret
into
ljmp
jp
out
dec
clc
inc
dec
js
mov
in
inc
jl
mov
push
and
mov
rclb
scas
gs
mov
addb
in
stos
mov
leave
sbbb
adcl
mov
mov
adc
dec
rorb
mov
xchg
ljmp
bound
je
aad
jp
or
sbb
and
push
cmp
cmp
push
or
popf
out
cltd
sbb
into
add
mov
fwait
sbb
add
xchg
data16
dec
in
dec
pop
jno
push
inc
rorb
inc
add
daa
push
pop
sbb
push
pop
xchg
loope
cmpsb
dec
in
jno
stos
xchg
cs
ljmp
pop
sub
repz
orb
sahf
jno
out
mov
jmp
int
push
and
cmp
addr16
jno
xor
lcall
inc
sti
mov
push
xor
pop
cmpb
xor
cmp
fstpt
add
and
jmp
cmp
out
addr16
jns
mov
jo
lods
adcl
sbb
jge
mov
enter
popf
into
lods
sbb
js
int3
movsl
and
jno
sbb
lods
mov
mov
inc
adc
push
mov
popf
xchg
jno
sub
jns
or
stc
subb
xchg
test
xchg
sbb
dec
dec
and
lahf
fiaddl
andl
adc
jmp
mov
loopne
push
inc
inc
das
movsl
sbb
rcrl
ds
sub
movsl
sbb
jecxz
nop
or
cwtl
push
in
fstl
mov
aam
push
cmpb
imul
jecxz
imul
push
mov
iret
mov
pop
jmp
and
mov
sub
adcl
add
inc
subb
push
prefetchnta
inc
ds
out
mov
or
sbb
adc
add
popa
adc
cwtl
data16
adc
sub
sbb
xchg
cmc
das
jle
sbbb
mov
pop
cmp
xor
inc
xchg
packsswb
jp
dec
mov
int3
push
in
fcomp
popa
lds
paddq
xor
leave
xor
movsb
insl
jge
cmp
sub
mov
push
mov
push
pusha
fcom
add
pop
jl
inc
jnp
add
jne
xlat
mov
dec
push
jb
fdivrl
jecxz
mov
inc
pushf
shl
imul
pop
cmp
sti
inc
jg
mov
stos
arpl
test
jb
pop
sub
fstps
sub
push
xchg
jecxz
fidivrl
sarl
pushf
or
addb
push
xchg
fdivr
in
xchg
mov
adc
cmp
and
add
sub
shrl
and
pop
sbb
adc
xorl
cli
jl
test
sub
pop
and
mov
pushf
cmp
xchg
sbb
int3
pusha
bound
sbb
fdivs
dec
add
dec
fwait
test
or
push
dec
push
dec
pusha
push
aaa
ret
pop
sub
sti
sub
mov
popa
les
xchg
shrl
jno
cmp
rcrb
jne
push
js
xor
push
adc
shll
inc
mov
cwtl
xor
ljmp
repz
sub
jo
movsl
into
and
mov
dec
pushf
pop
insb
scas
xchg
ds
pop
lcall
imul
mov
mov
js
into
add
jle
dec
lcall
xorb
movsb
mov
fwait
pop
jb
mov
jo
mov
inc
mov
adc
mov
mov
mov
push
ret
jge
lcall
loop
xchg
mov
add
push
push
shlb
shl
repnz
fwait
test
mull
xchg
xchg
xor
fiadds
cmp
lock
jmp
adc
xchg
adc
inc
cmpl
xor
test
scas
out
push
jno
sbb
bound
mov
lods
leave
daa
in
or
mov
stc
fdivrs
inc
fwait
mov
adc
inc
addr16
ret
jle
loope
setne
xor
or
sbb
sbb
sub
dec
xor
jmp
dec
mov
je
sbb
jge
xor
or
rcr
into
arpl
mov
out
jecxz
fnstsw
in
fwait
xchg
enter
push
jmp
add
push
sarb
jnp
js
scas
shll
xchg
cmc
inc
pop
sbb
push
mov
ljmp
push
jp
xchg
cmp
mov
inc
push
fs
mov
leave
bound
xor
mov
stos
sbb
inc
dec
xchg
push
sbb
aaa
mov
dec
or
fildl
pop
sbb
dec
punpckhbw
and
aam
iret
and
jmp
sbb
fs
loope
mov
inc
cmp
mov
fdivr
cmp
pop
rol
les
pop
add
or
mov
mov
xchg
out
mov
jge
dec
scas
dec
fwait
adc
jl
sbb
mov
inc
mov
rcl
push
lock
cli
stos
les
stos
ja
adc
sbb
imul
jg
es
mov
sbb
shrl
pusha
in
sbb
push
push
aas
and
roll
subb
push
lock
or
lods
or
popf
ljmp
fsubrs
push
mov
or
mov
or
and
pop
push
inc
push
dec
cmpsl
and
xor
out
frstor
fiaddl
int3
sbb
loopne
stos
or
rorl
add
push
add
cltd
loopne
push
ret
rcl
mov
mov
sbbb
loopne
adc
cmp
jg
inc
and
scas
sbb
fmuls
xchg
cld
cmp
xchg
or
outsl
mov
imul
clc
fwait
jle
pop
dec
jno
loope
mov
pop
mov
cmc
mov
mov
or
enter
adc
insb
xchg
scas
pop
cmp
mov
push
fcoml
push
inc
js
dec
rol
jb
adc
sbb
push
xchg
pop
mov
repz
rcrl
nop
jge
sbb
jle
sbb
adc
dec
sbb
sub
adc
inc
and
ds
jno
test
or
push
adc
inc
fistpl
add
cmpsl
cmp
mov
mov
pop
les
shl
cmp
cmpsb
enter
fimuls
test
push
pop
pop
and
sbb
imul
mov
rcrb
jle
pop
mov
adc
stc
jno
adc
insl
jns
imul
xor
jge
inc
dec
es
sahf
mov
cmp
jbe
movl
jnp
data16
push
xchg
jne
push
rclb
fisttpll
loope
cmpsb
xchg
push
aas
leave
jg
ret
aaa
inc
mov
push
fucomp
inc
in
sbb
cwtl
xchg
xchg
in
jge
lods
mov
xchg
pop
mov
cmp
pop
pop
stos
popf
sti
test
push
aad
sbb
movsbl
add
pop
arpl
inc
mov
notl
or
insl
adc
fdivrs
or
or
fnstsw
ja
insb
pop
icebp
stos
leave
xchg
pop
mov
xchg
push
scas
jnp
mov
rolb
add
mov
jnp
sub
es
mov
repnz
shll
fsubs
repnz
roll
scas
cmp
fsubrl
icebp
jp
mov
into
testb
adc
pop
mov
jns
sbb
jnp
cmp
mov
pushf
push
mov
mov
mov
mov
adc
aaa
pop
dec
std
mov
imul
sbb
movsl
or
mov
jp
popf
lcall
xlat
es
mov
insb
pop
cmpsl
jl
jge
std
mov
fdivrl
jbe
test
xchg
gs
sahf
push
jne
mov
mov
cmc
mov
xchg
push
push
or
or
cs
mov
js
cwtl
gs
jbe
or
xchg
repnz
mov
sbb
loope
int
mov
lea
aad
mov
mov
or
lret
lahf
jle
lahf
push
or
hlt
or
cmpsl
outsw
mov
pop
dec
add
push
sbb
mov
cmp
lock
fsubl
cltd
enter
add
xchg
loop
jnp
pop
sahf
cmpl
jecxz
scas
push
xor
fsubs
xor
negl
scas
dec
xchg
sbb
popf
jecxz
jg
rorl
and
fiaddl
push
add
aaa
in
call
daa
cmp
pop
mov
bound
ljmp
pushf
mov
dec
fmull
lret
push
cmpsl
movsl
sbb
mov
sub
inc
adcl
pusha
cmpb
inc
mov
push
les
outsb
mov
push
imul
push
insl
mov
insl
mov
add
cmp
testl
insb
sbb
arpl
or
gs
mov
push
ret
rcrl
fst
inc
or
ljmp
movsb
push
popf
jbe
je
push
and
inc
dec
test
pop
push
adcb
insl
add
xor
mov
mov
mov
cli
arpl
xchg
xchg
sbb
hlt
ss
pop
leave
imul
fnstsw
or
sbb
inc
lds
dec
sub
add
in
pop
inc
xchg
xor
arpl
pushw
data16
ret
mov
jl
mov
add
xchg
jp
js
push
pop
pop
daa
mov
or
imul
bnd
and
rcrb
lcall
test
adc
and
xor
inc
jg
and
inc
or
push
sub
insl
mov
pop
inc
cmp
xor
stos
das
out
mov
push
insb
push
ljmp
roll
dec
cltd
stos
pop
insl
aam
pop
fwait
jne
fadds
add
ret
adc
inc
out
sti
fldt
cmp
add
adc
push
push
xchg
lret
push
mov
xlat
out
mov
outsb
loope
pop
mov
add
imul
movsl
or
into
pop
pop
cmp
xorl
pop
addb
stos
clc
cs
jns
in
jno
pop
psllw
adc
add
popf
das
cwtl
mov
inc
dec
adc
sti
xchg
shrl
sbb
pusha
adc
fmuls
stos
enter
sbb
ret
fwait
call
lret
push
fwait
sahf
int3
mov
jns
sbb
popf
inc
jle
inc
push
add
sbb
mov
leave
inc
test
jno
fmul
andb
inc
sub
into
mov
stc
jp
inc
fucomp
mov
nop
pop
add
fcomps
pop
gs
fwait
enter
and
ror
mov
stc
pop
inc
add
in
jle
mov
xchg
cltd
add
mov
lret
inc
shrb
jne
cmp
jp
jno
add
sbb
stos
mov
jo
adc
data16
lret
push
das
sub
dec
xor
jmp
mov
fnstsw
add
xor
shll
cmpb
push
inc
es
pop
xchg
mov
sub
dec
cwtl
xor
adc
push
fwait
add
into
cmc
das
sbb
pop
popf
rolb
or
test
adc
pop
stos
or
pop
mov
push
repz
fdiv
ss
fcomps
dec
lods
push
jg
xor
xchg
out
insl
push
or
repnz
pop
adc
mov
mov
push
rorl
icebp
jecxz
cmp
pop
js
addr16
aam
xor
mov
sub
inc
in
add
and
sbb
inc
addr16
rcrb
lret
pop
push
les
out
jnp
push
add
pop
repz
mov
out
cmpsb
pop
out
cmp
test
sbb
jbe
dec
pusha
jnp
push
jmp
add
imul
inc
in
inc
insb
sbb
lods
or
pop
ret
inc
ja
cmp
fcompl
clc
jg
push
jge
push
loope
cli
popa
dec
xchg
sbb
imulb
lds
sbb
add
stos
punpckhdq
ja
xchg
gs
mov
and
jmp
add
cmp
jns
cmp
add
leave
imul
mov
sub
scas
mov
mov
cmp
popa
fdivrl
jmp
mov
ljmp
lods
movsb
jno
lods
pop
scas
outsb
sbb
imul
call
or
rol
nop
and
jno
popa
lods
sub
cmc
orl
xor
popa
cmpsl
int3
scas
add
fadd
dec
arpl
add
mov
sbbb
call
add
ss
mov
roll
popf
push
jmp
enter
push
lret
mov
adc
loopne
ret
add
fwait
cmpsl
lock
or
in
stc
insl
sbb
test
xchg
jne
or
lods
push
xlat
cmpsl
shll
sbb
fidivl
push
pop
or
mov
inc
adc
or
push
lods
rclb
out
xchg
ret
rclb
add
test
icebp
jne
int3
inc
pop
mov
sub
pop
sbb
leave
cmpsl
subb
pop
mov
in
mov
loop
pop
jo
mov
jecxz
sub
int3
push
dec
or
int3
push
sbb
mull
mov
push
stos
cmpsl
pop
fidivrs
negb
pop
dec
and
mov
cmp
mov
xchg
cmpsb
pop
mov
jmp
outsb
mov
loope
jb
cmp
sbb
sbb
lcall
mov
icebp
jne
mov
cmp
ret
cmpsl
add
push
dec
jo
sub
jne
xchg
adc
mov
hlt
push
add
inc
fwait
mov
std
ja
pop
sub
fst
imul
inc
xchg
sbb
mov
hlt
push
push
and
add
fucomi
dec
lahf
mov
ds
sub
dec
mov
test
mov
data16
push
xchg
andl
notb
fiaddl
sahf
in
jge
or
enter
dec
push
push
bound
push
lea
fmull
inc
loope
outsl
in
xor
sub
mov
cld
lds
bound
add
and
jp
sbb
nop
xchg
add
adc
es
adc
inc
aam
lods
out
inc
shll
inc
xchg
in
test
xor
push
add
jns
jbe
push
lock
clc
in
cli
mov
cmpb
int
xchg
cmp
or
mov
pop
icebp
mov
xchg
in
dec
sub
lret
sub
or
mov
push
les
push
ret
sub
cmp
jbe
aam
mov
mov
jns
enter
test
and
adc
push
mov
or
fnstcw
sbb
cmpsb
inc
pusha
inc
repz
mov
pusha
mov
inc
mov
nop
pushf
mov
scas
lahf
test
mov
inc
add
sbb
sbbl
loop
lock
out
movsl
cmc
pusha
push
fsubs
jns
cltd
cli
dec
popf
aas
sbb
dec
jns
add
sbb
jb
sahf
pop
addr16
cwtl
nop
inc
data16
inc
push
dec
mov
and
adc
mov
rcrl
push
push
cmp
loopne
push
mov
cmp
push
sbb
dec
loopne
mov
jmp
mov
jp
jbe
jae
xchg
pop
int3
xlat
rclb
in
xchg
push
lods
push
lahf
push
mov
inc
sbbb
jo
in
cmpsl
gs
push
sbb
dec
pop
repnz
ficompl
fistpl
inc
sbb
mov
mov
xchg
sub
sbb
call
sahf
lret
sbb
push
mov
icebp
dec
cmpsl
jp
jge
fadds
pop
or
jno
dec
and
or
gs
add
jecxz
fiaddl
mov
push
jns
stc
out
scas
mov
and
cwtl
test
js
mov
outsl
nop
cmc
push
ret
cmp
outsb
lods
xchg
dec
dec
dec
mov
and
in
add
mov
stos
sbb
jmp
sbb
hlt
scas
mov
push
rorb
mov
addr16
fsubrs
fwait
test
in
sbb
pusha
mov
cmc
mov
xchg
jge
fnstsw
cmc
xlat
in
out
lock
nop
push
rorl
add
jns
shl
lret
add
pusha
movsl
test
push
or
cmpsl
mov
push
sbb
inc
nop
and
sub
adcb
loopne
lret
mov
push
and
aaa
fadds
and
xchg
and
push
shrl
gs
fwait
xor
xchg
loopne
test
aaa
inc
in
lret
out
push
inc
inc
push
jbe
leave
roll
pop
inc
roll
out
mov
mov
sbb
fisttpll
mov
aad
sub
lods
popf
sub
negl
decl
push
push
sbb
and
stos
push
cld
cs
fwait
cwtl
sub
xorb
dec
push
dec
into
fs
xchg
frstor
jae
in
lea
sbb
rorl
adc
mov
out
xchg
repnz
jns
push
ss
arpl
mov
ss
cmp
sbbl
sbb
push
push
push
notl
mov
xor
adc
push
and
out
push
pop
lods
clc
or
lock
es
jle
adc
sti
rcrl
sub
cli
mov
cmpsl
je
jecxz
mov
mov
jne
cmp
jecxz
add
cli
cmp
leave
andl
dec
fldenv
cmovbe
clc
push
stc
inc
add
aas
cs
fwait
loop
xchg
pop
and
jne
in
push
ss
mov
adc
mov
or
daa
mov
je
sbb
adc
hlt
lock
icebp
pop
pop
adc
fsubl
sbb
xchg
mov
xor
push
gs
test
adc
sbb
scas
imul
add
lock
inc
orb
scas
cmc
fadd
lcall
mov
push
stos
fs
jno
mov
mov
mov
fcompl
ret
push
std
jge
mov
pop
sub
lods
pop
ja
inc
pop
cmpsl
push
cmp
xchg
cmp
in
push
mov
push
sbb
fs
ds
adc
andb
jo
xor
repnz
xlat
in
in
pop
lods
xchg
xchg
mov
mov
repz
dec
in
jecxz
je
mov
ljmp
ficompl
mov
inc
and
and
mov
adc
int
or
xchg
in
push
mov
inc
jp
mov
jo
pop
and
movsb
nop
leave
jecxz
fadd
inc
icebp
push
push
nop
mov
sti
ret
divps
sub
mov
sub
xchg
lret
ss
inc
push
fdiv
mov
fbld
jge
stos
cmp
pop
idivb
subb
push
or
into
dec
mov
sti
ja
data16
mov
fucomi
jge
add
clc
shr
scas
test
mov
inc
xchg
cmp
popf
mov
xchg
rol
ffree
push
push
dec
inc
fstps
inc
mov
push
xor
les
repnz
push
mov
test
js
sbb
mov
or
lret
cmovae
sbbb
test
lret
inc
push
sti
test
jo
ret
xchg
inc
mov
mov
pop
push
ds
xchg
mov
in
or
pop
xchg
jbe
xor
add
sbb
mov
daa
rorb
daa
adc
call
jl
and
cmp
cmpl
inc
gs
cltd
subl
pop
pop
add
xchg
or
test
adc
test
in
in
bound
movsl
or
cmpsl
inc
pop
mov
jnp
mov
lret
sub
cmp
sub
scas
lahf
loopne
inc
dec
jns
roll
pop
aam
jb
fnsave
cwtl
adc
enter
push
out
fidivl
xor
cs
push
inc
out
addb
push
cwtl
repnz
loop
or
jge
or
pop
popf
cmpsb
add
cld
pop
rorl
les
cmp
push
adc
and
sbb
push
ja
lock
mov
dec
mov
jb
inc
fistpl
ret
sbb
std
push
pusha
loopne
cmpsb
std
sbbl
pop
mov
pushf
xor
jae
and
jno
pushf
mov
xor
divl
out
dec
sbb
push
lds
sub
mov
popa
mov
enter
or
mov
mov
cmc
jge
mov
and
jecxz
lea
ret
jge
dec
pop
dec
xchg
xchg
imul
or
or
jp
inc
cmp
push
sahf
pop
push
andl
dec
data16
pop
sbb
clc
mov
setno
out
arpl
sbb
and
lea
xchg
mov
pop
sarb
and
adc
in
test
hlt
pop
insl
cli
pop
loope
test
add
mov
fldt
add
xchg
pop
inc
mov
push
loopne
or
push
xchg
push
mov
mov
sahf
cmpsl
scas
addl
dec
cmc
pusha
fcomps
xchg
dec
push
push
push
dec
loop
test
lret
mov
test
sahf
dec
or
in
push
mov
int
cmp
nop
sub
add
cmp
mov
ficoms
mov
enter
scas
mov
dec
shr
in
mov
push
cltd
dec
fistpl
gs
mov
mov
dec
pusha
pushf
cmc
push
and
hlt
xchg
testl
aaa
add
int
fmuls
sti
aas
inc
into
mov
lea
je
adc
xor
pusha
nop
mov
or
xchg
int3
push
pop
into
test
mov
inc
push
sbb
nop
add
jp
das
dec
mov
cli
or
icebp
cmpsb
nop
divl
xchg
jns
scas
aaa
dec
push
push
test
gs
scas
mov
xchg
push
adc
push
push
sbb
hlt
test
aam
adc
icebp
cmc
arpl
addb
in
mov
iret
lret
jb
jmp
push
adc
lock
add
das
js
std
xorb
push
jno
jl
push
outsl
push
data16
lds
les
mov
pop
xor
inc
movsl
out
jae
fwait
mov
inc
clc
inc
mov
mov
pop
or
or
cwtl
mov
mov
out
xor
cmpsb
fnstcw
pop
iret
or
mov
into
fistpl
jnp
sbb
push
mull
cmp
lds
repnz
or
bound
and
cwtl
ret
icebp
adc
hlt
sahf
jg
sub
xor
add
or
xchg
lea
mov
jecxz
dec
xchg
addb
sbb
mov
push
andb
mov
xor
shlb
orl
jo
add
mov
or
fmull
outsl
add
aad
lret
push
sbb
xchg
push
out
cs
dec
push
cli
pop
outsb
lds
pop
in
add
int3
jno
cmpsb
test
lea
fs
dec
fbld
mov
sub
sbb
or
movsl
lcall
or
shl
pop
subb
sbb
mov
shl
mov
or
add
push
or
movsl
dec
into
push
cmc
popa
mov
dec
das
leave
lahf
xor
cs
push
loopne
adcl
or
daa
sbbb
addl
icebp
adc
mov
fdiv
jns
les
push
lcall
sahf
pop
stos
out
jbe
lret
inc
inc
mov
sbb
or
inc
sbb
imul
jne
and
jae
jne
pop
mov
roll
scas
sbb
lods
adc
sti
push
enterw
pop
ret
adc
pop
leave
out
pop
mov
sti
cmp
xor
jp
xchg
cli
sub
addb
sub
subl
stos
stos
jmp
das
jp
cmp
mov
sub
inc
sbb
int
dec
ret
popf
adc
push
test
or
and
push
cmp
imul
push
out
push
sbb
repnz
mov
adc
lock
and
inc
dec
adc
divb
pop
test
pushf
sub
inc
sbbl
jnp
dec
out
sarl
enter
and
addl
pusha
rclb
inc
mov
sub
mov
mov
inc
xchg
loope
push
jnp
ret
mov
fcoms
add
or
mov
pop
int
jno
stos
lret
or
adc
adc
xor
cmpsb
xor
push
mov
dec
sub
in
add
mov
xchg
cld
mov
sub
aaa
movsb
scas
xchg
adc
and
cli
fldcw
sbb
andb
sub
repz
add
jae
add
imul
stos
xchg
push
out
cmp
push
outsb
adc
icebp
adc
in
fldl
mov
or
imul
cltd
add
xor
ficomps
push
push
mov
int
cwtl
pop
xchg
xchg
aad
jge
pop
sub
clc
in
sbbl
sbb
daa
test
inc
dec
out
jo
mov
mov
outsb
in
or
jle
sti
xor
mov
loope
jmp
cmpsl
lds
cs
and
inc
int3
sub
xchg
inc
cmp
dec
loopne
fcompl
iret
mov
mov
popa
cmpsb
lcall
add
loop
add
pop
lock
mov
pop
push
mov
mov
push
xchg
ja
pop
aas
sbb
lea
sbb
dec
int3
outsb
icebp
cmpsb
mov
imul
sbb
push
sbb
push
and
shlb
pushf
sub
push
js
xchg
out
lret
jecxz
xchg
push
pop
cmp
pop
mov
mov
dec
push
rorb
adc
dec
je
repnz
cwtl
inc
fcoms
add
mov
filds
mov
shrl
sbb
dec
jge
push
stos
jl
insl
or
jns
clc
jnp
repnz
dec
scas
push
data16
mov
adc
scas
mov
xchg
in
jg
daa
or
jl
mov
mov
stc
lds
jmp
repz
push
lods
addr16
add
xchg
pushf
and
jp
xchg
or
ret
pop
adc
aas
lods
mov
ret
jbe
outsl
roll
ffreep
xchg
and
in
enter
xor
test
xchg
mov
fisttpl
insl
cmpsl
or
push
push
lds
divl
es
mov
or
cmp
inc
mov
inc
sub
sub
or
test
into
pop
call
push
popa
out
mov
fisubs
insb
sbb
pusha
dec
inc
sti
bound
divb
sbb
inc
xor
cld
in
push
sarl
pop
sub
cmpsb
ds
sbb
mov
arpl
mov
mov
or
fldl
add
sub
addl
xor
in
sub
jl
push
in
jge
shr
scas
and
sbb
imul
or
cltd
fstl
jno
jge
jecxz
daa
push
out
mov
cmp
jne
lcall
out
icebp
ror
aaa
inc
mov
xlat
xchg
mov
add
inc
push
and
mov
imul
aas
xorb
xchg
push
dec
leave
cmpsb
idivl
int
mov
mov
in
push
in
fidivrl
xor
push
stc
rolb
add
push
cld
sti
or
mov
inc
jp
mov
lret
cld
add
adc
sub
lret
push
cwtl
out
and
xchg
lea
or
mov
in
push
or
xchg
mov
lds
adc
roll
xor
insl
std
mov
aad
jns
aas
inc
push
out
out
push
popa
fcoml
mov
xchg
mov
xor
int3
mov
or
daa
enter
add
mov
push
nopl
add
xchg
xor
pop
add
jb,pt
sbb
gs
inc
insb
sub
mov
leave
les
or
mov
lock
rorl
jp
in
cmp
or
jp
mov
int
mov
pop
xor
xchg
add
push
jnp
lds
sub
jl
inc
loop
mov
mov
ja
jo
subb
cli
dec
or
bound
loope
enter
dec
lret
xor
and
cmp
cmc
mov
je
dec
aad
sbb
cmpb
dec
mov
pop
mov
in
lods
mov
jb
mov
mov
subl
ljmpw
add
int3
scas
or
int
scas
js
insl
lods
mov
mov
push
das
push
daa
push
ret
adc
testl
sbb
test
add
mul
data16
ret
outsb
arpl
mov
push
cmp
repnz
loop
push
push
repz
or
inc
inc
push
mov
sbb
sbb
or
adc
mov
loopne
xor
jne
lahf
fdivr
push
imul
or
mov
jl
or
lret
andl
lea
mov
scas
stc
add
lcall
mov
loopne
cmp
sbb
cmc
dec
cli
or
lret
or
loopne
hlt
test
imul
in
les
jns
dec
push
ss
mov
push
add
das
bound
cltd
push
arpl
pop
add
and
xchg
jae
push
mov
xor
mov
sbb
sub
nop
mov
or
pop
add
stos
js
punpckldq
mov
and
push
fisttpll
addb
pop
data16
or
and
add
test
sub
pop
ljmp
lds
add
add
fucom
or
daa
cltd
out
inc
pop
lret
idiv
test
mov
dec
mov
cmp
mov
and
jo
aam
push
pop
mov
xlat
mov
sbb
mov
push
cmp
test
scas
pushf
xchg
dec
popf
mov
xchg
cmp
pop
lahf
out
and
fs
loopne
and
adcl
in
sbb
or
inc
jmp
into
loope
out
cmp
lahf
inc
ljmp
xchg
or
inc
mov
add
jp
or
push
test
pop
xor
fsubl
inc
add
loop
mov
ret
icebp
pop
or
sub
xchg
dec
inc
push
xchg
pop
pop
push
cmc
mov
sbb
js
int3
and
subl
mov
mov
in
xchg
pop
add
loop
pop
loope
in
add
incl
iret
data16
out
ss
test
shll
or
pushf
sbb
xlat
insb
popa
fdivrs
mov
lods
pop
popa
and
inc
xchg
and
test
orl
imul
and
mov
sbb
xor
cmp
movsl
add
insb
adc
aas
lret
pop
popa
mov
nop
jmp
and
jmp
rcrb
xchg
faddl
mov
jmp
les
enter
xorb
jmp
dec
mov
or
mov
dec
cmp
aad
adc
pop
fs
loope
negb
cmc
movsl
loop
and
loopne
add
dec
or
ret
inc
jbe
pusha
fisttps
sbb
pop
add
inc
and
test
add
clc
stos
jge
adc
out
mov
movsb
out
scas
jne
dec
dec
bound
daa
pop
mov
out
adc
dec
hlt
mov
mov
lods
and
xchg
sbb
lahf
mov
sbb
sub
aam
pop
add
jmp
pop
mov
push
insl
sbb
sbb
push
or
add
push
xor
dec
fsubr
push
inc
mov
seto
jne
out
xchg
pop
mov
jecxz
in
add
lahf
and
xchg
mov
mov
lea
aam
push
cmp
xor
add
xor
int3
jge
arpl
rcll
call
mov
stos
arpl
mov
xchg
jne
jl
dec
push
mov
sbb
fsubrl
aad
or
sub
ret
push
aam
sbb
arpl
movsb
pop
cld
imul
out
test
sbb
xchg
adc
xchg
inc
xchg
mov
xor
movsl
shl
cs
push
add
data16
gs
data16
sahf
or
xchg
lahf
push
lea
inc
icebp
xchg
in
adc
inc
inc
test
fcoms
movsb
roll
mov
test
pop
call
jbe
inc
jae
inc
mov
out
lret
or
ret
adc
lods
mov
rcrb
sub
mov
adc
push
shlb
fwait
lret
sub
sub
ja
mov
jno
push
push
and
inc
push
mov
mov
inc
xor
ss
xchg
jle
rorb
cmc
fwait
push
imul
add
ret
push
inc
out
loop
jbe
sbb
dec
sti
xchg
lods
enter
xchg
rcr
jns
vcomiss
pop
cli
dec
lock
loope
movsl
mov
xchg
inc
stc
int
cltd
mov
pop
repz
rcl
push
sbb
xlat
pusha
mov
subl
mov
fimull
icebp
pop
out
dec
pop
cwtl
subl
lret
test
sub
jp
dec
mov
leave
lcall
aas
xor
out
push
push
jecxz
std
out
aas
lcall
jle
pop
cmc
sbb
in
push
adc
pushf
inc
or
inc
inc
roll
or
sub
cmpsl
lret
scas
imul
mov
ss
inc
jne
push
stc
stos
jl
fcoml
add
es
or
jge
push
push
jnp
sub
push
xchg
leave
and
cmpsb
adc
jp
sbb
xchg
cmpsl
ror
subb
inc
lods
cmp
adcb
lret
jp
nop
pop
xchg
mov
push
mov
sbb
push
sbb
mov
fdivs
sub
mov
outsb
push
pop
adc
add
loop
iret
cmp
push
sbb
sarl
jnp
adc
mov
jnp
pop
inc
add
adc
and
mov
dec
jge
push
aaa
cwtl
shlb
inc
flds
jo
jne
stc
pop
mov
lcall
movsl
ds
xor
movsb
int3
pop
jns
cmp
sub
out
loope
or
lret
es
sbb
add
add
popf
int
int
sub
sar
fidivl
add
jno
mov
enter
mov
add
dec
adc
stos
stc
add
push
cwtl
icebp
cmp
outsb
sub
inc
cmp
addr16
inc
loop
adc
pusha
jle
cwtl
adc
dec
or
loope
jmp
cltd
jno
cmpsb
xchg
addr16
inc
add
in
add
jg
push
test
jl
mov
outsb
lcall
rdtsc
sbb
lods
jge
lcall
lods
jns
mov
scas
or
xchg
mov
icebp
dec
dec
das
adc
filds
push
mov
jno
dec
test
or
adc
mov
mov
cmc
xchg
push
adc
inc
xor
loope
pop
imul
mov
orb
cmp
jp
xchg
mov
cwtl
sub
insb
mov
mov
jbe
pop
and
test
inc
sbb
dec
cmp
sarb
loopne
je
cs
incl
test
insl
inc
cmp
icebp
mov
xor
sbb
mov
loope
daa
lods
mov
xor
push
xor
mov
xor
adc
fidivrs
mov
mov
pop
sbb
loope
std
lahf
shl
jge
and
and
ja
les
lret
push
fidivrs
enter
fscale
mov
icebp
sahf
addl
es
mov
xchg
pop
test
cmpsb
jge
popf
mov
mov
mov
xchg
gs
hlt
lods
adc
adc
inc
inc
lret
push
jne
cmc
ja
sbb
loope
out
pop
cli
sub
push
lds
movsb
or
xchg
push
add
mov
pop
faddl
add
arpl
sbb
pop
addr16
jl
and
sahf
push
mov
inc
pop
or
stos
push
cld
cmp
and
gs
jecxz
lret
fwait
mov
dec
sbb
rcrl
mov
adc
xchg
fidivrs
and
sbb
stos
sbb
push
mov
leave
ret
test
xchg
pop
mov
mov
in
lock
mov
mov
movsb
push
pusha
push
ljmp
jnp
jecxz
jae
add
pop
sub
pushf
jbe
dec
ds
fs
icebp
dec
jne
mov
mov
setae
cmp
add
fs
push
psllw
in
aam
or
fadds
lahf
fs
cld
into
arpl
push
in
push
icebp
enter
fcoms
inc
test
orb
sbb
rclb
sbb
mov
sub
jno
gs
je
lods
test
xchg
cmpsb
bound
add
arpl
ss
sbb
mov
lods
xor
into
repnz
imul
dec
loope
lret
jmp
or
mov
pop
fadds
inc
stos
cli
fsts
fsub
push
loopne
pop
pop
enter
xchg
or
inc
aas
push
xchg
mov
add
rcll
push
inc
or
orl
data16
das
jmp
dec
lock
mov
mov
das
rcl
and
push
mov
fstp
mov
add
cmc
or
mov
fbld
sti
jnp
and
inc
jns
mov
jnp
adc
mov
je
fcomi
mov
mov
adc
or
jmp
repnz
stc
fnstenv
rorl
cmp
xor
adcb
dec
sbb
jno
mov
lcall
stos
xchg
cmc
mov
lock
inc
adc
jno
int3
icebp
mov
gs
shrb
fidivrl
ret
sbb
repz
ss
dec
inc
or
jne
sbbb
pushf
push
inc
jbe
dec
and
gs
into
inc
dec
int3
push
loope
lret
push
or
mov
test
inc
hlt
pop
repnz
pop
inc
push
sbbb
mov
ss
xchg
mov
lret
mov
jns
stos
sub
test
mov
icebp
lret
adcl
mov
lods
mov
jns
inc
rcr
jno
out
cmp
push
lretw
pandn
push
xor
jg
push
test
cmp
in
movsl
sbb
mov
imul
lods
mov
sbb
xor
jmp
call
fisubl
loope
fcomp
sarl
jmp
and
test
pop
cwtl
aam
add
ja
adc
mov
sbb
mov
js
mov
mov
xchg
cmpsl
pop
mov
cmp
mov
rcr
and
add
push
jmp
mov
sub
pushaw
out
dec
sub
dec
into
or
test
lret
cli
cwtl
rcrb
lret
out
scas
jmp
std
cmc
sub
mov
test
xchg
addb
lret
mov
enter
push
mov
jnp
mov
jp
sub
lahf
test
push
cmpl
sub
push
sbb
mov
icebp
jbe
mov
sub
push
or
sbb
mov
adc
ja
inc
inc
dec
jb
push
push
sbb
and
dec
add
mulps
int
mov
jnp
out
pusha
cs
mov
xchg
mov
mov
mov
rorb
es
rcrl
out
mov
or
adc
or
lcall
enter
sahf
ret
test
mov
sub
xchg
leave
or
add
es
fsubrl
inc
int
in
rcrb
leave
jmp
das
lods
mov
popf
jmp
and
mov
sub
stos
xor
pop
fcompl
dec
mov
cmp
mov
sbb
addr16
in
add
cwtl
arpl
icebp
fnstsw
cmc
push
xor
pop
inc
and
push
push
and
sbb
subl
cwtl
mov
adc
inc
adc
cld
jns
mov
adc
aas
dec
lods
pop
push
fists
pop
xchg
pop
mov
int3
mov
mov
jge
mov
push
sbb
mov
sbb
add
mov
jne
push
and
push
add
rcrl
adc
xor
call
data16
ljmp
sahf
fdivrs
jo
fisubs
pushf
mov
lahf
cwtl
mov
mov
inc
scas
std
in
rolb
mov
dec
inc
sbb
mov
mov
rolb
cmc
insb
or
xchg
test
xor
sbb
push
push
sub
push
add
cmp
dec
aaa
fwait
sbb
lods
mov
pop
cmc
daa
cmpsb
dec
das
repnz
jecxz
aaa
cli
mov
xor
jno
insb
jb
xchg
cmp
mov
adc
sar
jmp
ret
push
arpl
cmp
sub
cmp
mov
or
sarl
push
int3
adc
jns
sbb
xchg
add
cs
xchg
je
cli
add
add
fmuls
sbb
xor
mov
es
jle
and
mov
cmp
std
insb
sub
imul
jnp
shll
sbb
shll
call
cmp
xchg
test
dec
rol
scas
and
in
dec
or
ret
inc
jno
dec
pop
mov
jl
cmpsl
popf
lods
les
test
icebp
lods
or
jo
or
xchg
ret
sub
mov
sub
dec
sbb
cmc
push
jge
into
stos
xchg
jne
sbb
jo
stos
inc
fmull
mov
outsb
sahf
mov
fsubrl
lcall
cltd
pusha
loop
sarb
test
les
int
adc
scas
icebp
add
xor
jge
arpl
orl
jns
jecxz
and
add
shl
test
xchg
push
xchg
out
into
jne
aas
pop
gs
or
jg
sahf
push
addb
add
add
arpl
jmp
xor
sbb
or
insl
xchg
shll
lods
or
pop
inc
or
or
dec
jl
lods
imulb
ret
sbb
mov
dec
sub
and
mov
add
dec
jge
test
fadds
and
push
jo
mov
xor
dec
adc
jp
inc
lcall
cmc
negl
or
xchg
jne
adc
xchg
push
ret
push
nop
sub
dec
mov
inc
shll
imul
loopne
sbb
imul
sbb
pop
outsb
and
mov
icebp
push
mov
sti
neg
pop
jg
dec
les
push
data16
add
call
inc
mov
xor
sbb
loop
inc
std
jnp
gs
inc
jb
sbb
or
xor
sahf
xor
data16
dec
push
push
loope
ljmp
daa
sti
and
cmp
leave
pop
shlb
mov
shrl
pop
pushf
cli
outsl
add
jae
mov
dec
sbb
cli
jnp
jecxz
pushf
subb
mov
jno
or
test
or
xchg
push
xor
scas
jp
hlt
xor
popf
fildl
mov
and
mov
xchg
or
xchg
xchg
gs
sahf
xlat
xchg
dec
xchg
lea
add
lock
mov
push
and
sbb
mov
push
fdivrs
pop
mov
add
mov
orl
add
mov
mov
sbb
mov
or
mov
push
pop
cmpsl
jmp
jl
and
xchg
jge
pop
xchg
sbb
scas
movsb
pop
dec
push
sahf
in
pop
pusha
lock
movsb
mov
cs
and
add
lret
aas
push
shll
bound
lock
cli
in
pop
loope
lods
adc
decl
data16
or
bound
jge
iret
sbb
leave
pop
mov
mov
sbb
pshufw
cmp
and
add
jecxz
jnp
divw
push
mov
ret
adcl
xor
pop
adc
inc
xor
add
xchg
lods
pushf
mov
or
lcall
and
push
xor
cmpsl
insb
or
adc
sahf
mov
jp
dec
sahf
and
push
leave
dec
ljmp
mov
mov
stos
ljmp
ss
movsb
insb
mov
push
vxorps
mov
mov
sbb
addl
mov
mov
ss
dec
insb
inc
mov
xor
xchg
andb
sahf
cli
lds
lods
sbb
scas
insb
xchg
mov
iret
or
xor
sbb
shlb
inc
ljmp
arpl
idivl
rolb
leave
inc
cmp
cmp
and
add
sbb
pop
dec
mov
sti
jmp
ss
mov
outsb
out
push
pop
mov
dec
and
adc
repnz
inc
jle
mov
rol
ficompl
rol
cli
cmp
test
push
cmp
sbb
jbe
mov
loope
lret
mov
jmp
inc
sub
push
adc
cmp
sbb
clc
cmp
mov
jg
push
scas
dec
fcomi
xor
lret
xor
jle
stos
jecxz
sub
pop
int3
mov
stos
into
or
xor
cmp
idiv
adc
add
daa
mov
cmpsb
push
pop
pop
mov
xchg
jbe
mov
fmul
notb
push
sbbb
jo
and
arpl
pop
jmp
jns
jg
pop
mov
add
fiadds
stos
push
in
push
sarb
negb
pop
bound
aas
out
cmp
rorl
push
popa
jno
dec
es
je
in
xor
mov
sti
mov
xchg
or
adcl
add
das
and
icebp
adc
add
gs
cmp
xor
pop
xor
push
push
loop
mov
cmp
dec
sub
sub
pop
dec
dec
roll
ljmp
imul
or
pop
sub
mov
or
dec
out
pop
fistl
lods
mov
dec
insb
data16
push
jl
fsubs
cmp
jp
or
test
arpl
hlt
sbb
pop
pop
imul
push
and
test
and
sbb
or
pop
popf
push
add
mov
sbb
inc
popa
xor
dec
push
push
push
push
pop
into
sbb
mov
push
les
addl
xor
lcall
daa
mov
popa
das
mov
sub
adc
scas
arpl
popf
fimull
sbb
test
gs
lods
andl
mov
rcrb
lahf
pop
mov
inc
mov
xchg
or
pop
sbb
jmp
fdivl
data16
mov
add
mov
cmp
push
pop
mov
mov
jp
xchg
jbe
add
sahf
mov
inc
loope
dec
mov
out
sub
xchg
scas
inc
test
popf
bsr
mov
mov
jae
shlb
adc
mov
sub
dec
xchg
nop
inc
test
jecxz
sbb
push
pop
cltd
andb
jecxz
push
out
addr16
xchg
pop
xor
jmp
cmpsb
sbb
inc
orb
aas
inc
mov
dec
shl
cmpb
add
iret
pop
mov
mov
test
rclb
xchg
adc
push
or
jge
or
popa
cli
xchg
into
mov
push
sub
push
and
add
and
push
dec
orb
das
adc
je
inc
add
std
jbe
lahf
int
jecxz
push
lds
out
lea
decb
fstp
sub
loopne
popa
iret
ror
xor
insl
out
out
jns
jns
jecxz
pop
cmp
imul
out
jle
mov
xchg
pop
in
or
xor
mov
mov
ror
scas
test
mov
pop
xor
jmp
in
shll
fwait
lods
dec
loopne
int3
mov
sbb
pop
xrelease
xchg
jg
mov
jns
aam
cmp
aas
add
fadds
xlat
mov
fimull
loopne
push
jnp
daa
ss
ret
mov
popf
xchg
or
xchg
sub
std
sahf
dec
aam
int
and
push
or
sar
sub
jmp
mov
push
add
dec
out
sbb
lret
pop
les
in
xlat
loope
fcoms
and
sti
xchg
cmp
pop
neg
push
int
lret
or
in
xchg
jne
pop
inc
jne
mov
xchg
test
jbe
cmp
xchg
fcmovbe
rolb
fs
push
mov
cmp
add
mov
or
sahf
add
imulb
sbb
hlt
rcrl
or
mov
and
or
loopne
cmp
inc
or
xor
jl
sarl
and
jge
or
dec
sbb
std
jl
adc
sbb
mov
xor
adc
popa
sbb
or
mov
push
sbb
cmp
push
xchg
pop
mov
scas
or
push
cmpsb
gs
in
push
popf
add
cmovle
pop
stos
adc
mov
xlat
dec
outsb
xor
jno
in
jl
xchg
orl
sarb
dec
addr16
leave
jl
loop
or
sahf
je
pop
sub
cmp
mov
xorb
add
adc
mov
fdivrs
insb
inc
push
cmp
aas
imul
pushf
testb
pushf
gs
sarb
dec
es
push
mov
cmpsb
rorb
dec
inc
mov
push
mov
in
lret
in
mov
test
ret
or
icebp
inc
mov
out
mov
icebp
fistl
inc
popa
cmp
loopne
xorb
jp
pop
inc
cmpsb
loopne
in
push
inc
mov
xor
mov
dec
lahf
out
fcompl
sbb
sub
in
add
pop
jbe
stos
or
push
sbb
idivb
push
cmp
imul
mov
es
or
xchg
icebp
sbb
jae
dec
enter
cmpsb
push
pop
addr16
cmp
push
xchg
int
lcall
movsl
sbb
pusha
dec
nop
imul
cwtl
int3
cli
pop
and
xor
imul
insl
inc
jge
test
shlb
leave
mov
jnp
pop
xchg
popf
in
sbb
addb
jmp
xor
inc
mov
ds
push
mov
daa
push
fcompl
hlt
mov
xor
addr16
lods
test
outsb
or
fisubrl
and
cs
cmpb
out
lock
xchg
push
jns
pop
repz
test
aaa
mov
sub
aaa
cmpsl
loop
cmp
jle
stos
lds
mov
jmp
movsl
inc
and
push
aaa
add
inc
jp
mov
imul
int
dec
aaa
jge
add
add
cmp
sti
insb
out
adc
and
cmpsb
mov
pop
cli
cld
or
add
rorb
mov
in
adc
pop
mov
cmova
popa
into
sub
xor
inc
xchg
fdivrl
add
xchg
pop
gs
loope
mov
sbb
getsec
dec
adc
sbb
mov
hlt
loope
push
sbb
xchg
frstor
icebp
imul
test
or
or
dec
push
and
sbb
into
xor
cwtl
into
adcl
inc
insl
xlat
xor
pcmpeqd
out
dec
int
inc
dec
ret
xchg
add
in
xchg
sub
mov
and
shr
push
mov
mov
mov
jmp
push
mov
pushf
xchg
push
sbb
sbb
in
inc
repnz
loopne
xchg
sub
inc
pop
imul
fwait
test
push
out
lds
fimuls
push
mov
cwtl
mov
data16
fmuls
fmulp
dec
inc
lock
mov
sbb
cltd
and
jb
imulb
bound
sbb
xor
cmp
jbe
std
popf
jecxz
jno
jg
psubusb
daa
mov
mov
pop
mov
repz
aaa
gs
mov
lods
shrl
retw
xchg
loopne
push
adc
clc
push
mov
push
mov
push
add
push
ret
repz
aam
or
xchg
xchg
pop
jg
stc
and
xlat
shrb
int
and
sbb
pop
mov
aad
pop
pop
das
jb
jne,pn
inc
xor
rcrb
xor
fnstenv
xchg
cmp
pop
jnp
or
fisubs
rcll
jecxz
dec
mov
mov
cmpsb
sub
push
orl
out
rolb
pop
cmpsb
popf
mov
sarb
insl
mov
cmp
int
dec
push
xchg
incb
dec
jge
subb
inc
icebp
adc
mov
sbb
sbb
sbb
push
add
push
jmp
pop
loope
cs
cvtps2pd
mov
mov
data16
inc
std
fidivl
mov
mov
cmp
add
sbb
mov
jo
xor
mov
cmc
mov
mov
dec
mov
jecxz
xorb
lods
mov
mov
mov
std
pop
in
outsb
shll
aaa
test
enter
xchg
in
mov
jmp
dec
sarb
psubq
jno
mov
in
lret
xchg
push
call
jle
sbb
or
repz
lock
mov
arpl
add
or
icebp
add
adc
test
mov
mov
loopne
push
aaa
push
pop
inc
sbb
sub
or
add
jnp
mov
sbb
cmpsl
gs
mov
mov
inc
sub
fwait
lods
ret
sbb
std
jne
adc
mov
bound
addb
push
mov
jb
add
mov
sbb
std
lds
inc
enter
movsl
incl
mov
insb
xor
mov
adc
mov
dec
xor
pop
push
sbb
gs
test
jp
mov
mov
mov
int3
mov
imul
jnp
imul
pop
xorb
mov
fcmovnbe
dec
mov
pop
add
movsb
push
jo
xchg
pushf
inc
jle
mov
pop
icebp
mov
dec
fsts
push
ljmp
mov
daa
or
sub
cltd
xchg
pop
jbe
push
lods
lret
popf
addr16
popa
je
inc
add
cmp
cmc
or
fmuls
xor
pushf
jle
cmp
xchg
mul
sbb
pop
push
enter
popa
xchg
mov
daa
lcall
into
or
inc
js
adc
dec
stos
jns
lret
test
sbb
lahf
adc
faddl
jle
push
xchg
xchg
inc
bound
rorl
enter
or
dec
push
sub
loope
jno
pop
mov
add
shll
dec
daa
push
call
fdiv
xor
int3
sbb
add
xchg
subl
sbb
pop
ret
pop
or
adc
scas
pop
inc
repz
xchg
xor
in
mov
lods
outsl
jb
jge
addr16
and
add
mov
jne
add
inc
dec
shl
sbb
in
in
into
push
ss
insl
mov
dec
pop
stos
push
nop
add
pop
add
mov
mov
je
loopne
out
iret
subb
mov
gs
push
nop
shll
mov
lock
mov
or
push
jno
lcall
add
xchg
int3
mov
in
and
push
addr16
gs
aaa
cmp
lea
adc
xor
cmpsl
xchg
cld
mov
xchg
mov
sbbl
push
jmp
cwtl
ret
cltd
mov
pop
xchg
jno
fisubl
pop
sahf
push
gs
jp
adc
ret
jle
adc
pop
flds
xor
rorl
test
add
xchg
xchg
fisubrl
or
mov
or
mov
nop
mov
faddl
rolb
aam
aad
movsl
pop
mov
add
inc
xchg
les
mov
pop
xor
pop
or
and
shrl
fisubs
push
scas
cmpsl
mov
in
lock
or
or
imul
jp
push
jbe
xchg
aaa
icebp
test
mov
data16
pop
cmc
dec
and
mov
ret
rcll
mov
pop
fsubrs
sbb
rcll
pop
fdiv
pop
jle
jecxz
add
add
shll
or
sbb
subw
xchg
xor
and
inc
mov
pop
testb
sbb
push
sahf
mov
cmp
dec
or
jecxz
leave
cli
leave
xchg
or
insb
test
cmpsb
lret
sbb
in
or
xchg
or
lcall
lea
scas
mov
inc
stos
sub
mov
add
jmp
test
repz
add
jmp
mov
sub
inc
jp
punpckldq
stos
cwtl
xchg
push
outsl
iret
test
adc
push
dec
or
stc
inc
imulb
bound
push
scas
mov
insb
lock
pop
adcb
mov
fs
rorl
out
sbb
stos
inc
jo
rcrb
mov
adc
lret
jmp
scas
daa
mov
in
div
pop
leave
cltd
xor
dec
fnstsw
mov
jl
mov
orl
push
sbb
or
insl
lret
es
lret
dec
popf
mov
xor
rorl
push
pop
or
inc
lahf
fwait
int
and
cmp
push
rcr
mov
sbb
scas
mov
or
add
xchg
or
jno
shr
inc
xor
ja
or
je
pop
cld
mov
or
push
les
insl
test
mov
inc
movsl
mov
mov
and
test
icebp
xchg
lret
cld
jmp
cli
loopne
xor
adcl
jp
add
cmc
pushf
imul
out
xchg
mov
push
out
incl
cs
pop
push
cmp
inc
adc
rolb
xor
mov
pop
adc
jmp
push
dec
dec
dec
sbb
fdivp
push
sub
sbb
inc
lds
lock
sub
inc
inc
ljmp
dec
xchg
nop
adc
sub
mov
xorb
ja
add
pop
stc
lods
cmpsb
pop
stc
popa
stc
jp
addl
test
mov
in
add
daa
cmc
and
popa
scas
loop
das
dec
scas
pop
add
scas
push
test
push
daa
cltd
mov
lea
mov
push
hlt
cmpsb
jl
es
sbb
mov
or
xchg
add
iret
xchg
sbb
jbe
and
in
add
add
mov
add
push
dec
int
mov
mov
xchg
movsl
mov
cs
mov
ret
push
and
jno
lds
stos
xor
xchg
inc
ret
out
cwtl
adc
lcall
xchg
sbbb
aaa
in
lea
in
lds
xor
jo
notb
lea
sbb
mov
jg
mov
popl
jle
xchg
sub
jp
jb
or
and
or
jge
and
push
push
push
sub
popf
pop
sti
shl
cmpsb
test
fnsave
lock
xchg
jle
mov
inc
lahf
out
sub
ss
jne
fwait
push
bswap
cmpsl
or
add
cmc
xorb
cli
sbb
loope
rcrl
incb
or
push
in
lds
int
stos
push
jb
jns
push
xchg
dec
jle
or
or
lea
mov
jb
jp
sub
xor
mov
jns
push
outsl
cli
mov
mov
lods
mov
mov
lret
out
notl
in
pop
pop
lea
mov
and
dec
int3
pop
fstl
shl
add
pop
dec
xlat
cwtl
jne
or
lcall
dec
mov
andl
test
sub
mov
mov
popa
add
aam
ror
test
xor
push
jl
int3
cmc
inc
and
jb
fstpt
sbb
jno
fdivl
cmpsl
mov
fwait
sbb
scas
fidivs
jg
test
mov
sbb
and
jmp
jge
push
movsb
push
scas
shrl
sahf
sbb
arpl
pop
add
sahf
fcomps
cmpsl
int3
pusha
sbb
sbb
addb
inc
sbb
mov
rcrb
insl
sbb
popa
dec
cmpsb
leave
jp
push
je
pop
sbb
cwtl
dec
dec
add
inc
lea
andb
push
cltd
addr16
or
add
adc
mulb
add
dec
dec
adcb
mov
das
sub
push
andl
inc
mov
mov
jp
sbb
push
mov
sti
cmp
cmc
jge
fcoml
fsubs
cmp
or
movsl
and
dec
loope
out
xchg
dec
dec
or
push
xchg
jbe
ret
ret
idivl
outsb
ja
pop
dec
movsl
gs
aas
xchg
pop
sahf
jnp
into
jp
scas
mov
ret
dec
mov
repnz
ja
jg
xor
ljmp
nop
inc
mov
sbb
in
jae
sbb
arpl
ret
xchg
add
es
cmpsl
fildl
mov
sarl
leave
outsb
lock
pop
add
mov
sti
imul
mov
movsl
and
cmpsl
add
sbb
es
xchg
pop
inc
and
lods
orb
pop
sahf
ljmp
leave
pop
cli
addr16
lret
aam
sub
and
test
jb
add
pop
sub
mov
in
jmp
sbb
sub
sub
dec
inc
insb
fists
pop
jne
jno
jecxz
xchg
xchg
jge
dec
ret
int3
mov
dec
add
lcall
mov
or
nop
jo
insl
jnp
in
ja
jns,pn
bound
and
mov
pop
cmp
scas
cmpsb
lahf
lock
aam
or
out
cmp
out
iret
mov
xchg
xor
lahf
push
lods
mov
push
push
out
add
push
dec
push
test
add
imul
sbb
lahf
divl
fmuls
gs
cmc
stos
xor
inc
mov
mov
mov
call
jb
sbb
sti
push
into
ss
mov
data16
adc
sti
ja
rorb
lret
addr16
fsts
jne
push
sbb
push
das
adcl
cmc
mov
scas
push
in
daa
xor
ds
testb
mov
insb
dec
divb
or
hlt
cmp
rclb
pop
mov
insb
sub
lret
fidivrs
xchg
mov
iret
push
test
add
xchg
sub
rolb
xor
mov
push
scas
lret
sub
fmulp
mov
add
orl
sbb
mov
jne
cmp
call
mov
sti
movsb
aas
rcr
inc
push
ret
fcoms
stos
cmpsl
mov
hlt
cmp
and
add
divb
push
xorb
fs
addb
add
jne
cmp
or
imul
inc
outsb
xchg
jle
mov
in
fcoml
outsl
lret
aaa
lea
mov
inc
mov
cli
inc
or
lds
xor
lds
pusha
xchg
pushf
or
push
jmp
jmp
popf
dec
jg
aas
subb
adc
push
mov
jns
pop
jne
test
lds
cli
jmp
imul
mov
or
inc
fwait
dec
dec
fsubp
jo
cmp
pop
push
lds
andb
add
lock
or
or
scas
cmp
cwtl
mov
mov
sub
jb
lahf
mov
sub
out
rcl
inc
lods
xchg
sbb
push
dec
mov
sbb
movsl
pushf
imul
cmp
pushf
or
iret
inc
clc
popf
sub
add
or
fisttps
inc
arpl
subl
push
push
lods
push
stc
jnp
push
fsts
mov
adc
retw
sbb
sbbb
jecxz
mov
repz
dec
mov
arpl
push
add
rolb
loope
pop
les
cmpl
mov
scas
jno
arpl
fnsave
xor
add
popa
mov
jge
negl
jbe
stos
xor
scas
sbb
sub
and
icebp
inc
cli
dec
fsub
fs
icebp
or
shll
out
loope
mov
movsb
int3
push
add
xor
std
negb
addl
inc
ret
mov
sbb
test
push
sbb
mov
sti
dec
sub
aaa
pop
ret
repz
andl
movsb
mov
popf
xor
add
mov
cmpsb
push
cli
cmpsb
inc
dec
out
inc
int3
dec
mov
mov
sbb
xor
add
movsb
test
dec
mov
cltd
test
cmpsl
data16
scas
sbb
and
cli
jne
mov
inc
cmpsl
sbb
pop
inc
movsb
lods
pop
in
fisubrl
inc
insb
or
cmp
ljmp
mov
cmp
sub
testl
fwait
dec
add
addr16
cmpsb
xor
inc
mov
inc
push
jle
push
into
repz
das
xchg
inc
pop
scas
arpl
in
test
pop
in
and
mov
jmp
ret
pop
jecxz
test
mov
aam
add
push
scas
pop
push
cmc
cltd
fcompl
daa
jecxz
push
mov
add
test
pop
and
push
ja
cmpb
adcb
add
fmuls
in
add
xor
or
dec
push
imul
jle
pop
xchg
mov
add
stos
add
push
push
popa
or
xchg
dec
vpmaxsw
push
xor
sti
enter
fmuls
xor
push
stos
mov
push
dec
push
xor
push
push
stos
in
scas
inc
lea
inc
adc
mov
fwait
cmp
and
and
jne
outsl
rol
dec
sahf
jno
mov
add
add
dec
dec
dec
mov
out
jl
push
shr
push
cwtl
mov
aam
sub
fnstcw
or
jmp
jle
sbb
pop
lret
jbe
out
and
jl
cld
aaa
popw
xor
mov
and
es
pop
mov
sahf
js
int3
das
sbb
popa
push
lcall
popf
shlb
fists
gs
mov
fnstenv
daa
xor
pushf
prefetcht1
mov
adc
push
fs
rcrb
imul
lcall
add
mov
add
or
pop
in
lds
or
xlat
adc
clc
in
and
xor
rcrb
xchg
add
jecxz
mov
jb
cwtl
sbb
pop
jae
inc
mov
xchg
mov
outsb
popf
mov
push
mov
in
pop
lahf
mov
shlb
xlat
mov
push
or
cmpsl
xchg
mov
cmp
hlt
inc
add
enter
xor
js
xor
fmull
and
dec
cmp
or
loop
inc
mov
push
cmpsl
or
or
add
push
mov
sub
xor
sub
xor
jne
int
xor
mov
nop
or
cs
icebp
ljmp
loope
int
cmpsl
into
lock
dec
jg
xchg
fisttpll
into
frstor
ss
movsl
addr16
lcall
cmp
fidivl
jae
insb
in
mov
rep
cltd
lock
mov
pop
cmp
ret
inc
mov
ss
push
mov
mov
lret
imul
decb
xor
dec
int
sub
add
popf
lcall
leave
jae
jmp
dec
inc
vaddsubps
sbbl
lods
xchg
lea
xchg
cmp
or
mov
xor
sub
cli
cmp
sub
or
or
xchg
inc
adcl
clc
jbe
or
mov
ds
mov
ffree
sub
or
int3
ret
pop
loop
test
xor
pusha
fiadds
sbb
pusha
push
mov
cli
adc
push
cmp
and
xchg
fcmove
loopne
cld
stc
mov
inc
icebp
sbb
in
addb
lds
in
stos
lcall
lcall
pop
add
icebp
test
fdivs
rol
pop
arpl
xor
push
xlat
scas
dec
rcrl
push
test
cs
xor
mov
push
mov
icebp
pop
iret
pop
push
sub
addb
dec
in
xor
repz
sub
xor
jle
push
mov
and
push
mov
shl
push
js
sub
lods
mov
nop
lds
shl
jl
je
into
or
inc
pop
inc
pop
mov
push
push
les
pop
add
pop
xchg
mov
mov
fisttps
out
cmc
popl
rcll
lods
or
dec
stos
pop
mov
pop
stos
mov
or
xchg
mov
pop
dec
pop
dec
pop
mov
icebp
pop
popf
stos
int
inc
mov
push
mov
in
add
push
cli
xchg
push
add
movsb
std
jns
adc
int3
xchg
scas
outsb
mov
loop
xchg
pusha
addb
inc
jecxz
out
push
fwait
sbb
mov
xchg
fadd
faddl
cmpsb
test
leave
imul
sbb
fdivrs
mov
sub
fdivrs
test
inc
push
adc
rorb
add
xchg
pushf
add
cmc
xor
jecxz
movsb
int3
loopne
out
xchg
sbb
and
jp
je
mov
jne
cmpsl
xor
addr16
xchg
enter
pop
xchg
loop
cmp
inc
jbe
lea
add
mov
mov
clc
mov
cmp
push
jne
outsb
jmp
test
divl
push
fsubrl
out
push
in
pop
xor
push
cs
ret
cmp
sub
xlat
iret
roll
loope
imul
push
test
mov
mov
fcomps
lea
aas
jae
sbb
sti
imul
cmc
sbb
addr16
inc
cmp
push
push
test
xchg
inc
cltd
xchg
mov
xchg
leave
mov
mov
mov
mov
add
xchg
lcall
sahf
adc
loopne
bound
push
dec
cwtl
pop
inc
lds
mov
outsb
inc
mov
jle
mov
sbb
ret
test
incb
and
push
jecxz
enter
testl
pushf
shl
adcl
xchg
lret
jle
mov
ljmp
add
fcompl
push
lret
les
out
into
fbstp
sahf
xchg
das
fwait
imul
dec
cltd
es
inc
and
and
dec
dec
imul
push
faddl
add
lds
lds
lods
pushf
mov
dec
sub
adc
sub
push
xor
add
rcrb
nop
movsb
cmp
dec
mov
fwait
or
add
int
and
rcl
inc
mov
sti
xor
mov
xchg
or
movsl
adc
jge
inc
or
xor
cmp
cmc
loop
std
mov
sbbb
mov
stos
inc
call
cmp
fsubl
enter
dec
stc
stos
and
rclb
stos
into
jge
mov
xor
sbb
cmc
mov
inc
addl
shrl
into
addr16
fsubs
and
sbb
sbb
dec
gs
test
aas
int
cli
pop
pop
nop
dec
inc
sbb
or
mov
in
sbbl
or
jl
mov
jle
push
cmpsl
lods
mov
jne
insb
sbb
cli
ret
lods
popf
test
pop
mov
xchg
ja
lds
faddp
add
push
addr16
jno
sbb
add
push
call
xlat
mov
push
bound
add
adc
cmp
sarl
negb
insb
fsubl
or
cmc
in
dec
lods
push
push
enter
inc
ljmp
movsl
mov
gs
int
jns
ljmp
enter
hlt
xchg
or
jmp
or
pop
sti
jl
lods
add
movsb
jnp
inc
ljmp
sub
mov
xlat
jl
std
out
fcoms
mov
rcrl
inc
and
dec
adc
gs
or
mov
dec
lods
cwtl
xchg
shll
movsb
xchg
push
cmpsl
mov
loop
mov
mov
iret
ja
xor
or
repz
and
cmpsb
popf
jmp
sbb
jle
adc
je
add
and
jle
xor
subl
push
pop
ja
and
pusha
sbb
jecxz
ror
arpl
sbb
or
cmc
scas
or
push
pop
mov
inc
movsl
push
js
mov
mull
or
cmp
xor
mov
insb
cmpsl
fcomp
hlt
xor
icebp
into
and
pushf
xor
mov
out
fdivrs
cmp
pushf
xor
inc
jmp
dec
negl
pop
pusha
mov
add
mov
ret
mov
and
inc
or
leave
dec
mov
les
jl
mov
fs
cwtl
sbbb
sbb
adc
adc
std
in
loopne
cmpl
addl
inc
mov
testb
inc
dec
stos
pop
jp,pn
push
rcrl
into
icebp
nop
out
mov
ss
out
ljmp
test
sbbb
push
repz
addr16
sbb
jb
lock
or
ja
fidivrs
sbb
fstl
lds
divl
xchg
pop
or
xor
pop
xchg
cwtl
pop
repz
cmp
movsb
cmpsb
cmc
lods
xadd
sbb
inc
sub
gs
xchg
nop
stos
and
mov
xor
arpl
inc
inc
sbb
punpckhwd
inc
cmp
jbe
gs
xchg
stc
xlat
cmp
jnp
fisttpll
or
adc
fs
mov
mov
cmp
inc
mov
sbb
mov
xchg
adc
dec
mov
push
pop
sub
mov
aam
pop
xchg
pop
out
lret
nop
or
mov
mov
cmp
add
jp
rorb
jecxz
cmp
popf
bound
lcall
out
movsl
scas
lock
jne
add
add
repnz
add
into
dec
mov
arpl
js
jne
ret
fildl
pop
je
sbb
or
jmp
std
lock
mov
fxch
leave
popa
push
pop
mov
jmp
push
sbb
push
ja
cltd
rorb
cmpsb
mov
cli
mov
pop
inc
ret
out
loopne
push
pop
mov
xchg
dec
into
loop
jo
ja
dec
fsubrl
stos
sub
lcall
in
bound
imul
sahf
ljmp
cwtl
in
iret
push
les
data16
sub
push
jns
mov
lcall
sbb
andb
inc
push
fisttps
xlat
push
mull
sbb
dec
or
call
mov
inc
xchg
dec
sub
mov
cmc
cmpsb
inc
inc
pop
jno
mov
xor
ljmpw
int3
aas
test
mov
stos
jne
idivl
les
leave
pop
sti
dec
mov
jecxz
push
mov
addl
add
pusha
xorb
push
ficompl
jno
out
mov
xchg
xchg
push
jecxz
lock
mov
sbb
lcall
mov
jle
mov
shl
bound
cmp
dec
add
push
push
mov
sahf
pop
sbb
mov
aaa
dec
into
in
imul
lret
inc
cmp
mov
jg
inc
inc
in
sbb
dec
mov
hlt
add
xchg
xor
enter
std
xchg
push
adc
push
sub
pusha
sub
dec
mov
lcall
push
push
xor
nop
sbb
std
cmpsl
gs
stos
stc
jmp
imul
add
push
push
gs
sub
add
pushf
das
push
push
sbbl
inc
repz
add
ja
cmp
insb
mov
adc
push
xlat
fadds
mov
stos
adc
test
rcrl
popf
daa
and
jb
rcr
cmpsb
iret
jno
dec
int3
push
mov
inc
out
sahf
sbb
mov
mov
sbb
pop
ja
mul
stos
out
mov
loope
dec
jmp
xchg
pop
ds
cmp
icebp
xchg
shr
dec
xchg
mov
in
rcll
xor
popf
and
sbb
mulb
test
dec
int3
cltd
or
imul
xor
jp
or
inc
mov
outsb
jnp
icebp
fdivl
ja
sbb
push
daa
mov
jle
mov
dec
xchg
push
mov
jbe
xchg
lret
dec
lahf
fldcw
fwait
sub
leave
daa
xchg
pmulhw
sub
adc
leave
xlat
sbb
dec
mov
adc
dec
movsl
jge
mov
imul
stos
faddp
aad
xchg
or
lretw
and
mov
push
and
call
xor
adc
dec
jmp
cmp
xchg
lea
add
mov
test
fsubrl
pop
addr16
inc
les
dec
cmc
mov
adc
aas
fwait
andb
xor
sbb
mov
icebp
iret
addb
lea
imul
xchg
add
mov
mov
add
mov
jo
jmp
lods
inc
xchg
push
cmpsl
aaa
mov
test
jae
or
mov
pop
push
xchg
xchg
xchg
mov
xorl
and
in
pop
ret
aaa
hlt
mov
les
insb
movsl
cmp
fcmovnbe
sbb
fdivrs
mov
mov
shrl
cmc
or
push
dec
and
outsl
cld
sbb
and
add
mov
or
pop
daa
xchg
jmp
mov
xor
adc
jae
hlt
pusha
das
fldenv
lds
mov
loopne
inc
sahf
mov
jge
and
inc
sub
mov
movl
xor
cmpsl
dec
lods
test
jg
xchg
shrl
xchg
in
add
sub
inc
cmc
inc
sbb
test
icebp
mov
int3
frstor
dec
push
fidivs
push
add
xor
leave
and
popf
jg
sbb
inc
dec
add
jg
jg
es
outsb
lcall
mov
lock
out
xor
mov
jl
dec
mov
iret
shlb
add
cmp
cmc
mov
mov
jmp
adcl
out
or
cmc
sbb
mov
dec
loope
rcll
mov
jne
sbb
popa
xor
in
call
jmp
or
lea
enter
loope
and
cmc
sub
xchg
xchg
cltd
xchg
xchg
out
je
cmpsb
jns
adc
add
sbb
lods
cli
dec
jmp
push
test
out
stc
cmpsb
pop
shlb
xchg
mov
repnz
push
jno
pop
aaa
inc
lret
ljmp
movsb
dec
cmpsb
mov
mov
ljmp
addb
sbb
cs
pop
cmp
imul
mov
or
aad
test
or
jp
cmp
mov
push
ret
sub
add
movsb
sub
mov
mov
jle
push
xor
add
push
pop
jp
stos
mov
adc
mov
dec
mov
mov
dec
outsl
test
mov
lret
das
in
pop
xor
pop
adc
inc
rolb
cmp
xchg
je
jnp
mov
add
icebp
pop
icebp
push
or
and
adcl
into
sbb
fsubr
pop
push
sub
inc
insl
xor
push
sbb
mov
push
roll
imul
testb
pop
jae
pop
scas
or
and
xor
inc
cld
push
xchg
rcl
xchg
jecxz
insb
mov
mulb
jne
sub
pusha
mov
rorl
maxps
mov
push
sbb
pop
push
out
xchg
xor
data16
mov
mov
and
pop
sbb
xor
push
in
popa
cmc
push
add
push
aas
dec
in
jl
cmp
lret
xor
dec
push
jmp
in
push
add
dec
add
aaa
cltd
push
push
sbb
insb
or
dec
sbb
lods
addb
push
pop
xchg
das
fwait
aam
scas
mov
add
jge
xchg
push
ret
mov
mov
and
cmpsl
xchg
cmc
ret
sbb
xchg
stos
mov
inc
test
cmp
xchg
sahf
jmp
and
mov
sbb
dec
addr16
aad
rclb
mov
or
jp
xchg
test
pusha
sbb
push
shl
popa
nop
mov
enter
pop
pop
jle
xor
mov
and
pop
dec
popf
xchg
jle
out
sbb
mov
sbb
ret
test
jbe
jb
test
push
icebp
mov
rcrl
sub
in
lea
and
mov
lahf
jo
test
loope
gs
cmc
stc
daa
addl
cmc
mov
xchg
or
jge
into
push
ds
add
les
pop
add
sub
icebp
notl
jb
pop
add
loop
push
dec
mull
imull
sarl
pop
loop
insl
imul
aaa
dec
sbbb
imul
pop
pop
lcall
daa
ret
frstor
into
inc
sbb
cli
add
and
dec
cmc
inc
xor
mov
std
add
xchg
or
pop
cmp
push
pop
rcrl
mov
mov
enter
scas
enter
inc
insl
push
jno
sti
loopne
push
shl
sub
shrb
sbb
dec
and
xor
sbb
push
sbb
mov
insb
jno
pop
incb
js
mov
sahf
xchg
push
xchg
inc
fdiv
sub
test
jmp
sbb
clc
outsl
repnz
mov
push
push
divl
sub
mov
dec
mov
shll
jnp
sub
dec
mov
stc
daa
gs
ret
push
cmpl
ss
adc
aas
scas
mov
stc
cmp
adc
push
mov
add
sahf
and
push
sbb
add
dec
push
repz
lahf
sbb
sub
je
push
add
adc
repz
push
hlt
cmc
push
cmp
das
jl
or
add
scas
mov
ljmp
movsb
lods
push
pop
sbb
pop
movl
add
nop
or
shll
pop
pop
add
add
mov
icebp
inc
mov
scas
xchg
lea
pop
in
repz
insl
dec
pop
idivl
andb
xchg
int3
shl
dec
mov
in
js
inc
scas
push
push
sbb
repz
jbe
inc
js
cwtl
xchg
gs
xchg
fldt
loopne
ret
adc
sbb
jne
xchg
in
insl
xor
imul
cwtl
push
into
in
mov
or
fdivrs
mov
mov
pop
dec
mov
pop
lods
dec
and
add
and
outsb
rorb
dec
and
or
adc
or
int3
dec
jg
in
add
sub
roll
lds
mov
insl
cmpsb
fadds
mov
aad
pop
int
mov
hlt
pushf
popa
cmc
add
xlat
mov
cmp
adc
xor
push
repz
push
sbb
jno
scas
lret
js
test
adcl
inc
cwtl
or
mov
cltd
aas
or
add
inc
adc
test
or
mov
into
rolb
icebp
fs
lret
cwtl
or
sbbb
jo
sbb
and
xor
jbe
or
sbb
add
lds
pop
mov
test
push
sbb
jmp
mov
xchg
sbb
or
int3
pop
jnp
fsubs
jecxz
xor
leave
xchg
push
adc
cmp
mov
mov
cwtl
push
pop
pop
movsl
mov
or
pop
sbb
and
add
outsb
lods
lahf
xor
xor
adc
push
das
or
or
mov
out
outsl
pop
rorb
inc
movl
add
ja
dec
shlb
mov
pusha
in
mov
lock
ss
test
sbb
xchg
fptan
inc
xchg
and
jp
int3
jae
popa
and
fistps
into
pop
mov
cld
fbstp
cmp
cmc
jno
push
mov
dec
mov
int3
outsb
mov
dec
sbb
jle
jle
in
fwait
rcr
inc
mov
imul
cmp
aaa
mov
shlb
loope
mov
dec
out
ficompl
jle
jo
ret
movsl
sub
sti
mov
and
test
push
stc
movsb
das
loop
and
and
flds
fisubrs
dec
mov
add
mov
sti
dec
push
pop
das
test
adc
push
outsl
insl
mov
xor
or
cmp
pop
pop
jp
jae
stc
test
or
dec
idivb
push
fwait
push
sub
jno
mov
mov
xlat
inc
cld
mov
pushf
jbe
push
lcall
jno
gs
dec
iret
pop
cmpl
jmp
mov
sbb
push
push
mov
pop
bound
scas
sbb
ja
or
push
xchg
stc
mov
fcom
sub
ret
push
fs
aas
loope
pop
mov
pop
data16
push
push
mov
fisubl
push
sbb
loop
leave
dec
je
repnz
jb
or
dec
fucompp
mov
xchg
clc
insb
fwait
xor
cli
enter
dec
mov
pop
push
idivb
pop
ss
sbb
fdivl
or
dec
push
and
or
cmpl
pusha
jle
sub
cld
add
and
push
pop
insb
pop
negl
sti
or
add
aad
sub
add
xor
daa
stos
dec
pushf
pop
jno
and
dec
loope
cli
inc
push
mov
adc
cli
pop
pop
std
in
push
mov
mov
ret
ja
in
jmpw
loop
and
mov
ja
int3
inc
fucom
sub
cmpsb
sbb
pop
mov
jnp
std
faddl
lahf
mov
xor
xor
mov
dec
and
push
lock
jle
int
fnstenv
sbb
cmp
inc
push
or
xor
neg
xor
xchg
cld
push
scas
scas
mov
scas
icebp
dec
add
rorl
pusha
cmp
add
mov
lret
cltd
push
nop
sub
in
add
pushf
cwtl
pop
call
xchg
mov
pop
adc
lods
popf
push
push
test
sbb
rcr
testl
mov
mov
jne
pop
jle
ja
push
cltd
adc
push
push
xchg
xor
cwtl
adc
sub
fs
sbb
mov
sbb
shll
lds
icebp
je
in
scas
fsubs
sub
and
push
fbstp
int3
aas
stos
pop
sbb
pop
cltd
mov
mov
adc
push
dec
mov
xchg
fcoml
push
cmp
sub
int3
or
mov
jl
pop
lcall
into
jecxz
adc
cltd
pop
push
ss
aas
js
xchg
test
lds
in
mov
loopne
jns
stos
outsl
push
fsubr
andb
adcb
pop
cmp
orl
aam
stos
aas
xor
sub
mov
imul
std
xorl
cwtl
mov
pop
xchg
push
or
shlb
inc
jbe,pn
dec
shl
out
mov
mov
test
sbb
jbe,pn
loope
inc
mov
sbb
jmp
xlat
vmovlps
xchg
push
shl
push
ja
pop
popf
daa
add
or
inc
inc
aaa
fistpll
adc
mov
xchg
push
rol
push
push
adc
gs
sub
cwtl
xchg
sub
push
or
mov
mov
jbe
ja
push
enter
mov
sarb
pop
mov
inc
cmp
bound
pushf
mov
inc
cmpb
inc
xchg
jae
data16
ret
addl
and
in
inc
jl
push
mov
cli
loope
push
int3
pop
nop
push
pop
sub
jno
ret
testb
pop
adc
or
data16
adc
repz
dec
jno
xchg
mov
pop
jl
das
dec
adc
jnp
sbb
enter
popf
daa
xchg
xchg
ret
and
sti
xchg
cltd
lret
mov
sub
stos
mov
sbb
iret
jno
shl
inc
setno
add
or
je
xorb
cmc
mov
das
test
loope
aad
movsl
incl
jne
mov
jmp
sbb
inc
add
sub
lods
les
ret
nop
test
sbb
mov
inc
outsb
icebp
lret
xchg
out
push
jo
mov
test
sahf
ja
lods
lods
sbb
mov
inc
jecxz
cmp
mov
pop
cli
push
xchg
cmpsl
mov
lock
ljmp
insl
sbb
pushf
sbb
cli
sbb
mov
mov
clc
xchg
gs
push
lock
sbb
cltd
imul
lds
add
sbb
loope
adc
mov
dec
add
sbb
daa
daa
popa
pop
dec
jecxz
outsb
sahf
sbb
add
scas
popf
shll
mov
bound
xor
xchg
pop
testl
dec
lea
mov
imul
sbb
push
or
mov
pop
out
orb
pop
push
mov
mov
xor
es
adc
stc
inc
push
rcrl
cmpsb
mov
lods
push
nop
sbb
pop
mov
addl
in
jl
inc
les
ja
loop
jae
repnz
adc
mov
ss
inc
lret
add
sub
insb
pop
add
push
or
mov
mov
push
imul
or
and
jae
mov
jne
sub
or
pandn
test
jne
xor
add
in
dec
cmpsb
dec
adc
adc
cmp
dec
scas
pusha
and
cli
insl
dec
pop
insb
sbb
pop
sub
push
jl
xchg
loop
fnstsw
xchg
cmpsl
push
or
lahf
mov
jg,pt
jbe
sub
adc
dec
in
cwtl
mov
fs
adc
add
dec
leave
lds
fs
dec
stos
lcall
out
and
dec
mov
jbe
out
pusha
jno
jg,pn
pop
iret
push
mov
sbb
loope
push
stc
call
fwait
adcb
sbb
stos
dec
pop
addr16
mov
scas
inc
cmpsb
push
jns
add
push
or
mov
stos
pusha
inc
push
sub
mov
popf
or
inc
scas
and
xchg
or
aaa
scas
xchg
scas
fcomp
test
push
test
cmp
aaa
and
ret
cmpsb
mov
in
jle
cmc
push
push
sub
xor
mov
pop
cld
js
inc
js
cli
fnsave
addl
add
data16
lret
xor
dec
pop
mov
ficomps
mov
push
mov
aas
xor
xor
push
push
mov
push
lea
repz
fidivrl
jl
das
pusha
push
mov
gs
ss
mov
les
push
add
and
loope
xchg
xor
cmp
out
mov
into
in
data16
xchg
and
and
out
pop
xor
clc
call
cmpl
cli
pop
push
or
xchg
cmpsb
xor
lahf
or
daa
pop
std
rorl
fwait
adc
or
cltd
scas
pop
pop
pushf
mov
in
lret
into
loope
push
movsl
shrl
jnp
test
and
movsb
insb
mov
sbb
or
push
aas
movsl
dec
dec
leave
mov
push
sti
xor
add
mov
ss
xchg
jecxz
out
fucomi
mov
pop
xor
mov
sub
add
sti
push
rolb
dec
jnp
xor
cmpsl
inc
sub
dec
cli
add
push
mov
movsb
scas
push
sub
mov
xchg
pop
sub
or
out
mov
xchg
into
mov
sbb
std
push
std
gs
dec
std
sbb
inc
inc
test
mov
sbb
mov
sbb
xor
imul
cmp
scas
pop
out
mov
addb
ret
or
push
xchg
mov
or
sbb
mov
lds
add
push
push
out
mov
test
adc
daa
mov
sbb
sub
cwtl
mov
aad
adc
xorb
jp
bnd
mov
mov
leave
shll
jno
mov
addr16
fisubl
jecxz
mov
push
mov
clc
shl
loop
add
icebp
add
popl
jnp
pop
mov
pop
scas
loope
mov
pop
addb
sbb
and
lods
out
into
sub
mov
filds
mov
leave
mov
xor
js
enter
add
stos
inc
mov
push
jae
add
adc
sbb
lods
and
data16
jl
arpl
jle
add
inc
dec
shl
ret
ret
sahf
pop
xchg
push
orb
pusha
in
das
pop
out
xor
in
shrl
push
inc
stc
sbb
imul
popf
mov
mov
mov
pop
jmp
cmc
adc
push
xchg
lahf
sbb
inc
jne
out
pop
dec
mulb
sbb
inc
lcall
sar
push
call
xchg
aaa
das
sbb
push
insl
mov
inc
loopne
roll
mov
mov
std
lods
mov
clc
hlt
dec
jne
adc
rorl
iret
sbb
jecxz
xor
xlat
sub
outsb
std
xor
mov
in
mov
and
sbb
inc
sbb
pushf
fistl
jmp
mov
repz
cwtl
sbb
push
or
push
arpl
and
ret
stc
mov
xchg
inc
popf
jmp
addr16
xchg
jnp
ss
les
jae
cmp
or
mov
and
je
sbb
loopne
test
sub
push
inc
push
fwait
push
addr16
mov
inc
ds
push
outsb
das
jae
xor
addr16
lcall
stos
xchg
dec
mov
out
jae
or
lods
mov
jle
pop
fsubl
gs
ret
popf
inc
out
jnp
pop
sbb
mov
mov
push
into
std
jecxz
in
sbb
push
xchg
inc
fisubrs
sbb
pushf
sbb
adc
in
lds
adc
clc
cmc
nop
je
in
push
push
or
and
roll
jmp
push
sub
lds
aaa
push
das
loopne
arpl
mov
sbb
loopne
cli
pushf
cli
pop
xchg
pop
sbb
xor
pop
jnp
sbb
dec
mov
mov
ret
cld
aad
cmpsb
add
push
adc
xor
cmc
fldcw
or
xorl
mov
les
ljmp
jle
pop
data16
loopne
mov
cmp
inc
cli
mov
out
fadd
lahf
shll
ficomps
or
dec
dec
test
xchg
mov
or
pop
test
sbb
inc
mov
dec
stc
inc
sub
inc
sub
sub
insl
and
into
sub
dec
fwait
adc
sub
sub
movsl
pop
enter
cmp
jo
lods
pop
fstps
cmpsb
adc
dec
sub
loope
or
shll
adc
jle
lods
orb
mov
std
les
popa
push
jnp
into
imul
scas
inc
add
mov
and
pusha
jp
dec
sub
add
xchg
nop
test
xchg
popa
repz
pop
xor
call
sahf
fisubl
adc
pop
cltd
xchg
cmp
aas
inc
push
pop
mov
push
ss
mov
and
jno
mov
pop
mov
mov
sbb
pop
push
out
addl
sub
fwait
jmp
sahf
cld
push
cmp
add
loopne
xchg
inc
int
popa
jae
mov
mov
cmp
mov
dec
aaa
andb
loop
adc
inc
hlt
mov
ja
stos
aaa
fstps
lret
or
sbb
adc
fldenv
mov
ja
mov
jl
pop
data16
jbe
jbe
fwait
popf
mov
jno
mov
inc
xor
jecxz
lods
jne
xor
js
mov
insb
mov
jmp
fstpl
movsl
mov
mov
inc
xchg
sbb
jne
sti
imul
adc
int
lcall
test
push
fsts
lods
push
sbb
push
fdivl
mov
mov
testl
ret
mov
sarl
push
or
pop
aam
fcomps
out
push
loop
and
xchg
inc
sbb
mov
js
push
insl
mov
mov
add
out
push
cld
add
ds
sbb
sub
adcl
inc
cmp
pushf
inc
out
lret
push
insl
repz
fmul
jmp
xor
lds
andl
out
outsb
inc
or
pop
sti
daa
pop
loope
test
mov
xchg
sub
stos
push
push
adc
adc
pslld
pop
stos
sub
and
movzwl
aam
sbb
ss
sub
in
in
jecxz
adc
jbe
jmp
mov
lods
xchg
lods
test
call
add
es
dec
lock
cmp
dec
pop
addr16
xor
sbb
lret
sti
add
pop
dec
xchg
jmp
test
mov
js
es
sbb
mov
and
mov
push
add
test
sarl
fistpll
mov
lods
ss
cmp
test
add
sbb
pop
cmp
dec
push
fs
cmc
sbb
mov
jge
mov
addl
mov
icebp
dec
or
int
inc
xchg
xor
bound
sub
das
cltd
jecxz
push
repnz
xchg
stc
add
lret
or
xchg
sbb
cmp
push
into
push
faddl
fdivl
xchg
add
sbb
xchg
aaa
pop
jbe
push
inc
jecxz
push
pop
xchg
das
inc
and
out
aaa
cmc
imul
cmovae
jb
daa
mov
sbb
test
add
adc
cs
ljmp
sbb
add
lods
int3
test
or
insl
cli
int
adc
nop
jp
repz
into
xchg
arpl
jbe
imul
mov
pop
stos
stos
dec
dec
sub
push
jg
mov
je
stos
insb
adc
loop
xchg
call
jge
leave
mov
dec
test
adc
xchg
add
xchg
mov
movsl
pop
jp
mov
popa
adcb
xchg
mov
sub
mov
dec
xor
dec
rorl
sti
sbb
fwait
xor
xchg
mov
out
popw
push
sahf
pop
cmp
fdivl
ret
mov
pop
sub
mov
and
out
cmp
mov
stos
pushf
xchg
lock
jge
cmpsl
addr16
add
jg
andb
dec
scas
xor
repz
loope
mov
xchg
das
jbe
cmpsb
nop
or
out
mov
adc
jo
ja
mov
lret
hlt
inc
fisttpll
mov
leave
loop
xor
loope
cmp
lcall
adc
inc
aad
ret
fdivs
sbb
xchg
mov
cli
dec
cltd
jl
or
sarl
sbb
sub
push
fiaddl
frstor
pop
pop
data16
push
cli
outsb
pop
fimull
jno
cmp
sahf
jne
pop
and
or
inc
and
out
enter
addb
add
xchg
fiaddl
lcall
sbb
test
cli
sub
mov
adc
insl
lock
mov
loope
dec
mov
stos
cli
push
test
jp
mov
mov
mov
inc
mov
pop
pop
ljmp
xlat
cmp
aam
jo
pusha
mov
sub
fcoml
ds
mov
xchg
sbb
add
dec
sub
rcll
push
enter
xchg
xchg
pop
mov
mov
adc
or
jle
cltd
adc
daa
sub
and
adc
jo
inc
dec
cli
inc
lds
imul
shrl
fisttpl
cmc
jns
pop
stc
push
pop
nop
and
add
or
repnz
fsubl
cmp
decl
jge
sti
sbbb
or
pop
pop
add
xor
gs
mov
mov
sub
push
push
es
push
sub
mov
data16
mov
cmp
in
xor
dec
jbe
or
push
pop
lret
aam
gs
jb
add
jl
imull
jmp
jmp
cmpsb
enter
ret
xor
sbb
scas
mov
cmpsb
xor
ficompl
jl
fs
into
push
loop
repz
xchg
loop
mov
jp
insb
add
shlb
in
xchg
xchg
rorb
cmpsb
pop
push
sahf
shlb
cmp
pop
xor
cltd
mov
int3
sub
lds
sub
mov
pop
dec
arpl
ret
inc
aas
add
or
fisttpll
ret
xchg
sbb
push
sub
sub
sarb
jbe
test
jb
xchg
add
fisttps
dec
push
or
mov
mov
or
mov
add
push
xor
adc
jmp
mov
loopne
rorb
fcomps
xor
dec
mov
xor
adc
push
xchg
loope
push
std
imul
xchg
and
test
lahf
xchg
dec
movb
arpl
xchg
cmp
xor
fsubrs
pushf
cmc
sbb
outsb
jbe
or
decb
fisubrl
mov
bound
ficoms
pop
inc
sti
jg
insb
aas
pop
ret
mov
dec
fdivrs
test
pop
pop
cld
es
xchg
add
or
push
add
andb
out
pop
lds
js
ds
dec
jmp
xor
imul
mov
push
pop
mov
mov
xchg
pop
lea
stos
dec
faddp
and
mov
pop
and
or
jge
shl
insb
dec
xchg
mov
mov
xor
div
popa
mov
in
add
mov
sub
cld
bound
xchg
jmp
lea
or
rcrl
jne
pop
lcall
lret
push
gs
jecxz
or
push
pop
hlt
nop
mov
mov
sahf
in
mov
mov
sub
xchg
mov
sbbl
add
push
int
pop
sub
cli
orb
mov
nop
dec
jle
daa
pop
lahf
xorl
mov
dec
jns
stos
dec
mov
rolb
divl
lea
loope
push
push
xchg
push
xor
jo
xchg
lcall
inc
xchg
cmpb
cli
enter
pop
mov
call
jmp
push
gs
xor
scas
out
sbb
push
pop
and
push
ret
push
ljmp
out
pusha
fcmovbe
push
out
js
cltd
push
xchg
push
ja
dec
jbe
adc
mov
fsubr
dec
leave
fxch
jle
imul
adcb
es
dec
out
pop
mov
push
dec
xchg
js
test
xor
mov
mov
sahf
clc
ja
push
cmp
orb
or
sub
push
xchg
dec
sahf
pop
adc
sbb
sbb
sub
inc
adc
shrl
sub
imulb
shll
jnp
mov
test
fbld
pop
xor
xchg
dec
jmp
fs
pop
mov
sbb
push
mov
mov
es
ret
cli
enter
cmp
jns
xchg
lret
mulb
xor
push
xor
pop
xor
gs
jmp
imull
sbb
fcoms
insl
lahf
test
leave
test
imul
icebp
imul
adc
lahf
mov
dec
shll
inc
lods
push
xor
dec
add
jmp
cmpsl
inc
cmpsb
roll
test
loope
insb
jecxz
cli
stc
hlt
mov
lret
jnp
inc
cmp
xor
and
ficoml
dec
sbb
mov
mov
cmpsb
or
pushf
push
add
jp
jmp
jp
mov
mov
adc
and
xchg
aad
xchg
and
pop
or
add
into
dec
das
adcl
pop
lods
jp
enter
pop
mov
add
pop
lock
mov
xchg
mov
jmp
mov
xor
stos
mov
mov
fnstsw
xor
out
mov
mov
xor
push
rcll
cld
xchg
lods
adc
sub
ljmp
mov
and
push
xchg
sbb
icebp
inc
jno
push
lret
mov
dec
xchg
push
dec
add
cmp
add
test
mulb
repnz
popa
xor
insl
add
vshufps
icebp
cmc
or
mov
fnstsw
push
in
xor
int3
pop
dec
mov
jnp
pop
xchg
sub
leave
mov
cmp
jle
enter
xchg
jge
mov
pop
or
dec
pop
sarb
lock
mov
xchg
pop
xacquire
orl
rorb
adc
nop
aad
xchg
aas
adc
cmpsb
fnstenv
mov
add
mov
enter
mov
movd
adc
rorb
lahf
adc
insb
inc
push
mov
sbb
mov
pushf
in
pop
pusha
aam
fmulp
inc
inc
jl
sbb
icebp
sbb
rorb
adc
pushw
mov
andb
arpl
insl
jne
xlat
jmp
push
negl
ljmp
mov
mov
push
pushf
inc
xchg
faddl
mov
xor
mov
in
xchg
out
xchg
mov
aaa
cs
xor
push
out
dec
lahf
xor
das
cltd
xchg
insl
or
or
cli
pop
jp
cltd
negl
imul
cmc
enter
xchg
lcall
imul
mov
jecxz
cmp
daa
and
int3
xchg
out
or
scas
jnp
lcall
fs
jnp
aaa
adc
mov
dec
xchg
adc
sbb
mov
mov
mov
sahf
add
mov
negl
mov
out
inc
shll
add
add
push
mov
or
addr16
into
sti
mov
mov
jp
insl
int
fadds
popa
push
sahf
sub
and
orl
pop
pop
inc
test
xorb
inc
subb
mov
xchg
addb
sbb
loopne
aas
les
test
xor
xor
lahf
movsb
sub
mov
movsl
jb
sbb
sbb
insb
mov
lods
lds
jle
pop
lock
pop
xor
mov
pop
sub
lea
mov
outsb
inc
xchg
mov
stos
or
jl
jne
pop
mov
out
pop
in
loop
pop
sub
insl
ficoms
sbb
sub
mov
xor
and
fcmovu
cmp
add
fimull
subl
or
or
test
pusha
inc
fisubs
push
pop
clc
push
cmp
subb
cmp
es
mul
cmp
or
es
push
lret
push
sub
jbe
cmpsb
mov
outsl
daa
xchg
out
bound
mov
cmp
adc
mov
fs
push
orl
popa
sarl
out
cmpsb
pop
ret
inc
gs
and
sbb
jecxz
cmp
xchg
int3
inc
jo
fs
xlat
lahf
inc
into
fadds
xchg
scas
jae
lock
fcomps
hlt
ss
pushf
dec
push
cmpsb
adc
jmp
sbb
pop
sahf
inc
int
pop
cmpb
loop
pushl
sub
outsl
mov
sbb
sbb
bound
or
sti
jl
mov
push
or
gs
pop
imull
sbb
filds
xchg
jo
xchg
push
sub
dec
dec
and
andb
jns
out
test
add
fstpl
dec
jae
and
orb
cli
arpl
addr16
inc
pop
loopne
sbb
fsubrs
jb
js
stos
ss
mov
fyl2x
data16
out
dec
repnz
push
inc
fwait
pop
lods
mov
pop
js
stos
xor
adc
xchg
shlb
push
rcr
add
cmp
sti
nop
in
xchg
push
insb
or
lods
imul
adc
popa
jne
imul
sub
dec
rol
lds
adc
or
sbb
ja
add
mov
mov
in
mov
in
sub
xorl
cmp
repnz
fisubrl
push
adc
pop
insl
cli
icebp
or
and
ret
xchg
or
lds
pop
xor
sbbl
cmp
mov
sub
pop
icebp
cmp
or
and
shll
add
xor
mov
fisubrl
gs
xor
je
xor
cmp
ret
daa
iret
repz
fdivrl
int3
pop
iret
cld
push
mov
xchg
std
shrb
in
cmp
cmpsl
sub
xchg
mov
test
fs
and
cmpsb
push
andb
lds
les
in
add
bound
cmc
or
sub
sbb
mov
adc
fdivr
mov
cltd
mov
sbb
and
push
test
loope
test
gs
push
sti
loope
mov
pop
shrl
jg
mov
jp
jmp
sbb
sbb
sbb
push
mov
stos
lahf
cmc
subb
loopne
pop
sar
xchg
or
push
loop
lcall
insb
push
lcall
adc
fidivrs
sbb
jne
out
in
xchg
dec
lretw
iret
out
gs
push
add
inc
inc
mov
and
lret
inc
mov
jmp
pop
nop
test
xor
mov
push
lods
or
xchg
jno
cwtl
ret
pop
es
pop
shll
addb
hlt
jle
push
or
mov
sbb
mov
cwtl
int
fidivl
fdivrl
lret
mov
inc
mov
lds
jl
int
push
push
popf
jno
push
xor
and
lds
xchg
mov
or
cmc
mov
mov
lods
mov
stos
xchg
mov
mov
jbe
jmp
mov
insb
push
cmpsb
inc
jg
int3
cmove
mov
clc
cmp
inc
push
into
test
inc
sbb
fmull
xchg
push
adc
js
or
or
in
test
pop
sahf
mov
cmp
jne
data16
shlb
jbe
xor
or
aad
push
test
sbb
sub
cmpsl
cmc
cmc
and
sbb
add
push
sub
push
mov
mov
dec
adc
lahf
das
add
push
test
rcrl
push
pop
cmp
xor
rorb
popf
mov
add
stos
fwait
xchg
orl
scas
sbb
mov
push
das
movl
sbb
and
out
pop
mov
std
std
dec
mov
mov
cmpb
jl
mov
adc
xlat
cmpl
xchg
adc
mov
mov
mov
ja,pn
insb
addr16
pop
mov
mov
add
sbb
int
aaa
into
mov
data16
add
xor
or
addr16
mov
inc
aad
lea
add
sahf
in
add
dec
cmpsb
or
sahf
pushf
or
xor
xor
sbb
cld
shll
pop
ss
pop
xor
sahf
jno
iret
idiv
pop
lock
gs
jmp
pop
mov
popa
loopne
mov
lcall
addr16
leave
cmpb
push
jge
cli
cmp
pusha
imul
pop
cli
lret
cmp
in
xchg
pop
nop
lds
jp
ret
ss
stc
cmp
ficoms
test
xchg
mov
aam
popf
jae
gs
testl
mov
stos
icebp
pushf
lret
add
xchg
lods
jmp
shrl
jl
add
rcr
fs
inc
or
into
or
mov
fucom
mov
sahf
push
sub
or
repz
mov
jbe
test
mov
mov
cmp
inc
inc
jecxz
xchg
and
inc
xchg
test
or
sub
sti
test
add
adc
sub
add
cmp
push
xlat
shl
lcall
push
xor
sahf
gs
popf
jbe
add
icebp
sbb
or
std
add
cmp
add
shrb
lock
adc
cltd
loop
xor
push
add
mov
adc
ljmp
push
or
and
and
sbb
lock
out
xchg
roll
dec
in
push
cld
shlb
fldl
fiadds
addl
add
lock
addr16
and
or
xchg
insl
dec
out
xchg
mov
adc
xchg
ror
cwtl
outsl
nop
mov
ja
test
mov
mov
mov
push
rcrb
lahf
rolb
fmulp
icebp
or
mov
inc
mov
push
dec
xchg
and
in
sbb
jecxz
jae
insb
enter
dec
or
in
lods
push
mov
and
mov
and
or
lret
or
sbb
rcrb
push
jge
and
hlt
xchg
sub
inc
daa
cmp
or
mov
mov
jmp
adc
mov
jne
movsl
pop
mov
xchg
movsl
icebp
xor
pop
enter
xchg
mov
xchg
in
push
inc
lock
fwait
arpl
mull
cs
push
adc
in
cwtl
pushl
inc
das
outsb
cmc
sbb
and
rcrl
push
inc
add
fildll
mov
sti
dec
push
test
sbb
sub
aaa
push
jne
test
lret
mulb
stos
jl
ret
dec
fndisi(8087
xor
jo
xor
push
jmp
inc
push
ret
or
inc
hlt
push
sarl
dec
lret
das
jp
xor
repz
xchg
stc
ret
lds
cmpsl
andb
push
fisubl
mov
pop
daa
cltd
add
lret
xor
jo
adc
loope
pop
pop
or
cld
dec
sbb
ja
xor
lods
leave
cmp
lretw
xchg
neg
imul
pop
mov
fstpl
mov
adc
push
out
sbb
insb
mov
int
stos
enter
cmp
out
jmp
xchg
frstor
mov
aas
sarl
shlb
push
add
or
in
pop
mov
daa
scas
cmpsl
jnp
int
pop
adc
mov
cmp
or
ss
lahf
xchg
dec
das
mov
ja
arpl
dec
xor
dec
fsubs
add
inc
push
lret
mov
push
add
jle
int
bound
or
cmp
adc
repz
jl
xchg
cmpsb
sub
and
popf
pop
jecxz
add
sbb
dec
sahf
mov
scas
popf
setnp
and
int3
sbb
sub
jns
inc
orl
shrl
mov
inc
jl
push
stos
push
sub
sbbl
xor
test
stos
movsl
lock
faddl
lods
test
lahf
mov
pop
fcomps
inc
mov
int
add
sub
loope
fnsave
repnz
das
cld
cmpsl
lea
mov
and
jecxz
outsb
add
lds
popa
rolb
loope
sbb
addr16
or
xchg
vmaxsd
add
add
sbb
loop
test
add
sahf
jno
fmulp
push
sub
or
test
jbe
fldenv
or
lahf
sahf
add
shl
fistl
int
mov
sbbb
cli
push
fcmovnb
push
xchg
push
jbe
inc
push
xchg
add
rorl
sbbb
fcoml
and
arpl
mov
sbb
push
mov
in
push
out
aas
sub
in
adc
fdiv
lret
jmp
sub
mov
repz
mov
mov
jge
clc
pop
stos
mov
sbb
inc
sbb
push
inc
stos
test
sbb
fstps
es
testl
stos
les
cmpl
cmpb
pop
gs
stos
and
fwait
cli
sbb
sbb
insl
pop
sub
lock
mov
arpl
jge
dec
outsl
loope
add
mov
test
stos
outsl
rolb
dec
rorl
nop
subb
jno
ja
enter
insb
aaa
fcompl
pop
lods
adc
add
jno
js
aaa
xchg
negb
sbb
cmp
repz
cmp
inc
sti
push
add
mov
mov
aaa
shll
inc
mov
cwtl
das
xor
sbb
inc
fsubrl
sbb
pop
add
cmp
sbb
fs
push
push
pop
pop
pop
addr16
add
in
js
mov
fmulp
add
add
inc
cmpsl
xor
xchg
pop
sahf
push
iret
enterw
inc
gs
repz
ljmp
jle
imul
xchg
daa
mov
ljmp
test
push
int
add
xor
or
ret
push
out
cmpb
jne
pusha
inc
das
sbb
push
push
mov
sarb
xor
or
pushf
mov
inc
sub
jecxz
lds
or
push
inc
sbb
and
xor
out
dec
daa
repz
jp
push
add
fadd
jg
push
ror
inc
inc
lahf
sub
inc
mov
mov
sub
or
xchg
sub
mov
mov
data16
enter
roll
cwtl
cmp
into
loop
xchg
lock
roll
inc
popa
jbe
dec
push
mov
call
xchg
jge
test
imul
dec
cwtl
fnsave
subb
mov
push
cltd
push
push
add
cmp
dec
mov
cwtl
xor
xor
xchg
cmpsb
repnz
test
dec
inc
jnp
xor
dec
sbb
xchg
popa
pop
dec
fisttpll
add
repz
sbb
mov
ret
mov
adc
cmp
fadds
mov
orl
mov
add
mov
sbb
xchg
test
mov
jae
out
fwait
jne
subb
stos
sub
or
das
dec
and
ja
jge
or
dec
data16
sbbb
out
sbbl
push
jb
hlt
dec
jg
or
pop
fwait
mov
pop
cltd
cld
xchg
jb
into
ljmp
lea
jg
add
mov
pop
frstor
jno
add
push
xor
mov
mov
popf
add
sbb
jge
xor
lret
into
jl
sub
ret
push
dec
andl
into
adc
inc
out
ja
jle
fstpt
jbe
sub
pop
add
les
lods
mov
notb
inc
xchg
enter
pop
pop
mov
scas
or
mov
add
mov
push
pop
call
sti
jle
or
and
push
into
jg
roll
daa
iret
pop
dec
mov
addl
lods
test
out
pop
inc
mov
ja
sbb
xchg
mov
repnz
cmpsl
cmp
add
sbb
xchg
dec
dec
or
push
movsl
insl
out
mov
lcall
push
sub
or
fisubrs
push
popa
push
xlat
movsl
into
jecxz
outsl
and
nop
push
out
inc
into
and
pop
maskmovq
idivl
jle
mov
pop
and
leave
mov
sub
dec
mov
xchg
jns
faddl
add
stos
enter
xor
aas
push
cltd
orb
arpl
stc
xchg
dec
mov
xor
andb
sbb
fldt
mov
addl
push
ljmp
jmp
xor
loope
jbe
sbb
pop
lods
mov
push
mov
add
enter
pop
cmpsl
jae
test
sbb
outsl
and
popf
xchg
xchg
add
jmp
pop
faddl
xor
pop
test
insb
xchg
fisubl
cld
das
cld
and
push
out
push
sbb
mov
lcall
jb
push
mov
mov
adc
test
mov
add
es
aad
mov
ret
ret
jbe
add
lds
inc
movsb
out
js
andl
imul
mov
in
gs
icebp
mov
clc
loopne
sbb
and
fcoml
insb
les
inc
xchg
xchg
decl
pusha
pop
testl
or
xor
pop
push
out
xor
enter
aam
aam
sarl
lcall
mov
mov
pop
inc
jle
or
cmc
sbb
mov
pop
popw
sahf
fsubs
popf
clc
lock
inc
xor
popf
jecxz
cltd
loope
inc
mov
mov
xor
add
mov
push
xchg
adc
daa
push
mov
add
or
jle
mov
incl
mov
into
fcmove
mov
or
jp
scas
jbe
adc
lahf
popa
cmp
inc
sub
sub
adc
lret
in
sbb
cli
xor
insb
scas
js
fistps
cmp
cmpl
sbb
push
inc
mov
cltd
xchg
push
dec
push
cmpsb
andb
into
jnp
dec
psrld
leave
jmp
push
mov
xchg
inc
popa
adc
testb
lds
mov
inc
in
mov
cmpsb
dec
add
or
add
mov
std
aad
mov
pushf
pop
mov
call
add
fwait
in
mov
data16
ljmp
sbb
hlt
cmc
sub
sbb
insl
lds
out
lock
inc
push
xor
or
fstl
lret
sbb
and
data16
imul
push
adc
js
dec
mov
pop
lods
sub
push
fsubl
xor
pop
das
xor
mov
mov
sbb
cmpsl
pop
push
pop
sub
mov
mov
std
mov
stos
pop
mov
data16
int
jle
add
out
inc
pop
jbe
xchg
sub
mov
jecxz
nop
mov
out
mov
pop
pop
jne
xchg
lea
fisubrl
leave
jno
or
leave
movsb
subl
lds
dec
lret
push
ret
jmp
nop
rcll
mov
out
fmull
jo
or
ljmp
mov
mov
or
and
sbb
cmp
xor
ss
mov
inc
out
push
sahf
xchg
cmp
int
out
leave
jb
mov
repz
cmpsl
push
lea
jge
dec
out
cli
mov
mov
lahf
jmp
movsb
and
loop,pt
pop
loopne
mov
xlat
testl
push
mov
cmp
push
lcall
jne
dec
iret
repnz
pop
out
push
xlat
sub
faddl
xor
nop
loopne
pop
pop
pop
push
std
cmc
sahf
fadds
fsubrl
cmp
push
mov
cltd
push
fs
leave
mov
pop
orb
xchg
in
sub
out
cmp
out
incl
adc
push
fcomps
pop
popf
icebp
cmc
cmp
loope
push
sbb
rcll
enter
push
stos
sbb
adc
xchg
mov
scas
cmc
pmuludq
dec
jge
in
sub
inc
mov
mov
shr
xor
xchg
jne
jmp
pop
xorl
xchg
mul
mov
dec
mov
movsb
ret
dec
pop
imul
jae
jns
popa
push
iret
lds
inc
and
fldl
sub
mov
pop
push
andl
popf
inc
insl
fisubrl
rolb
fldl
mov
test
mov
mov
sbb
pusha
and
leave
out
loope
xchg
in
sub
insl
jp
stos
and
leave
mov
xchg
imul
es
pushf
pop
mov
inc
pop
fdivp
mov
repz
fstl
pop
adc
daa
push
ret
gs
push
mov
jns
mov
in
mov
add
rolb
andb
fwait
ret
and
jbe
xchg
push
sub
cmp
roll
adc
cmp
inc
add
in
push
or
mov
mov
inc
dec
xlat
in
mov
ret
or
push
or
adc
icebp
into
sbb
jp
pop
sbb
mov
insb
sub
mov
inc
pop
adc
cwtl
jecxz
cmc
push
xchg
add
mov
xor
ret
rcrb
clc
in
rorb
jge
pop
jb
pop
cmpsb
xor
sar
inc
push
push
insb
rorb
adc
loop
add
push
scas
jl
and
push
dec
hlt
push
cmpsl
inc
mov
std
push
dec
lsl
mov
push
or
fnsave
stc
inc
or
sbb
sub
sbb
fmull
xor
sbb
pop
es
lahf
in
push
jge
inc
or
xchg
aaa
jl
inc
nop
gs
jno
test
or
nop
movsl
or
jp
jo
les
lret
pop
mov
dec
fisubl
mov
xchg
xlat
inc
loop
jne
sbb
pop
or
cmovg
fst
jmp
inc
mov
lahf
inc
loopne
in
cmp
dec
push
cmp
and
icebp
fldt
movsl
icebp
faddl
sahf
jne
xor
inc
xchg
or
lahf
into
orb
or
fcompl
sahf
add
dec
adc
cmpsb
jmp
inc
add
fs
mov
add
add
or
jne
push
jge
adc
scas
fs
loope
jmp
sbb
push
sbb
mov
dec
jle
loope
insb
pushf
rsqrtps
fsubs
repz
or
sbb
repz
adc
pop
or
mov
dec
sbb
and
adc
lods
popf
in
aaa
pop
add
inc
lret
outsb
out
faddl
cmp
mov
xchg
cltd
out
repz
dec
data16
shlb
jns
test
mov
pushf
stc
fcoms
in
imul
push
dec
inc
stos
fnstenv
sbb
das
sbb
jae
imul
nop
push
orl
ja
jb
dec
or
dec
addr16
xlat
and
jecxz
mov
xchg
sbb
push
mov
lret
sub
into
lods
cltd
pop
add
lods
dec
sub
mov
adc
int
cmp
push
sbb
inc
dec
mov
jmp
dec
xchg
movsl
es
push
push
jo
loop
aaa
mov
adc
mov
js
mov
insl
push
jmp
xor
loopne
lds
mov
shlb
sub
movsl
scas
sbb
or
lahf
sub
dec
mov
addr16
es
outsb
in
add
and
jae
cmp
data16
out
in
call
icebp
popa
xor
dec
jle
pop
mov
sbb
jg
test
add
adcb
pusha
in
sarl
cmc
sarl
lea
sub
fldl
fs
stc
or
push
or
test
jno
push
decb
pop
insl
cmc
cs
dec
stos
and
mov
sub
mov
data16
sbb
jl
push
push
xor
fs
jne
aad
mov
stos
jo
ja
dec
mov
stos
pusha
push
test
and
xor
xor
adc
repz
push
dec
sbb
es
out
and
daa
mov
mov
mov
lret
popa
sbb
adc
leave
push
lret
mov
mov
iret
push
das
cmp
aas
cli
lcall
push
sbb
pop
lahf
pushf
inc
lods
cwtl
pusha
test
xchg
rcl
mov
cmp
dec
mov
clc
push
inc
mov
push
rorl
adc
retw
xor
inc
add
icebp
add
jp
cltd
insb
scas
int3
mov
pop
or
push
pop
ja
sub
addr16
dec
xor
fs
popf
sub
pop
jns
insl
pop
add
inc
scas
enter
cltd
popf
dec
cmp
cs
cmc
push
inc
out
cmc
es
jae
xchg
adcb
push
ret
push
pop
dec
inc
mov
out
int
stos
ret
jae
cmp
and
out
xchg
jno
pop
push
add
jbe
or
sbbb
pop
add
push
jo
popf
subl
test
mov
out
add
in
in
pop
and
stos
xor
movsb
pusha
loope
and
in
lods
pusha
fwait
pop
fisttpl
nop
sbb
jecxz
xchg
ds
lods
int3
movsl
scas
jl
ror
ss
push
setne
xchg
push
test
inc
cli
sbb
jl
xor
inc
stos
pop
lret
add
ds
movsb
aas
cmp
lret
adc
push
add
jne
jge
xor
gs
imulb
dec
lock
pushf
sbb
add
push
negl
push
or
xchg
out
sub
mov
xchg
mov
mov
xorb
hlt
lock
dec
mov
push
cwtl
mov
lods
aaa
push
pop
pop
outsl
push
inc
hlt
mov
loop
lock
push
cs
mov
insl
pop
cmp
das
shll
and
push
and
dec
lret
vpmacssdqh
lock
cmpsb
pop
adc
arpl
jne
std
pop
mov
cmpsl
sbb
call
cmc
sbb
repnz
andb
subl
inc
imul
and
jmp
xchg
in
or
xor
cmp
and
sub
fistps
inc
mov
cmp
xorb
fisttpll
cmp
hlt
fnstenv
jno
push
xchg
ss
add
cs
loopne
add
cmp
sub
adc
xor
add
gs
leave
cmpsl
outsl
mov
sub
mov
fmull
jl
jns
cmp
push
stos
xor
imul
push
pushf
fisubrs
jmp
lock
insl
ret
loope
jp
int3
shlb
fs
xor
cltd
fildll
push
inc
js
jns
cld
lret
jp
ret
push
movsb
mov
or
push
das
and
mov
fsubrs
test
pushf
jnp
cmc
or
dec
ss
jle
sub
push
int3
fdivs
xor
gs
sar
cmp
lock
push
push
dec
scas
inc
sti
movsl
shll
pop
mov
inc
sbb
mov
sbb
adc
les
adc
clc
aad
or
out
jecxz
mov
add
aad
inc
in
stc
adcb
mov
fbstp
xchg
cmpsl
bound
fistps
mov
cmc
mov
mov
into
inc
push
lret
xchg
add
add
jge
lods
or
out
xor
dec
jnp
add
sbb
xor
rolb
mov
mov
fdivrs
cmp
pushf
cmp
jno
popf
sbb
arpl
das
in
rcll
fisttpl
push
or
popf
insl
mov
sub
sub
popf
loope
pusha
dec
and
rolb
daa
fisttps
jae
mov
or
inc
jmp
lea
fcompl
sub
mov
dec
in
and
adc
jecxz
pop
or
pop
push
cmp
punpcklwd
divl
dec
inc
sub
aam
sbb
mov
dec
fsts
stos
sbb
test
sbb
adc
arpl
orb
inc
jge
shlb
shl
popa
cmpsb
inc
insb
aad
incl
add
jno
outsl
fcmovnbe
mov
test
xchg
add
repnz
sbb
fiadds
pop
and
lret
les
push
dec
ror
push
sbb
mov
sbb
pop
push
outsb
cltd
aaa
imul
add
ds
or
outsl
push
jnp
fs
leave
sub
nop
pushf
outsl
mov
pop
out
lret
lcall
and
shlb
in
nop
icebp
std
sarb
xor
fsubl
xchg
xchg
push
gs
dec
sub
inc
or
pushf
push
lds
xchg
outsl
push
pop
js
and
push
fldenv
inc
or
mov
sti
mov
xchg
push
loope
jle
das
inc
mov
dec
pusha
cmc
shlb
pop
in
in
push
arpl
adc
fcmovu
movntq
stc
inc
loope
push
and
hlt
dec
pop
and
cwtl
cmp
negl
dec
orb
incl
pushf
dec
dec
mov
std
into
cltd
jmp
mov
sahf
or
mov
jbe
cmp
inc
test
pop
pop
gs
int3
dec
mov
xchg
and
cmc
mov
jb
orl
mov
ffree
and
sub
mov
jbe
jmp
cmp
loop
and
or
shlb
mov
loopne
mov
stos
xchg
mov
incl
sbb
pop
pop
scas
xor
pop
lret
pusha
adc
pop
hlt
rcl
scas
sbb
inc
les
jno
pop
pop
sub
dec
inc
mov
ficomps
jl
jl
dec
loope,pn
push
sbb
ss
mov
nop
test
push
addb
xchg
add
lods
ret
movups
sub
popf
sub
xor
xchg
xor
mov
dec
pop
pop
stos
in
lds
xlat
imull
or
push
push
ds
pop
mov
loop
test
mov
pop
push
jne
add
daa
and
or
sbb
add
xchg
rcr
lahf
out
jnp
push
and
cmc
pop
add
daa
add
call
lret
jbe
in
pop
lret
jnp
insl
bound
mov
add
pop
int3
scas
adc
push
mov
pop
add
push
mov
stos
mov
lret
xchg
ud2
repz
sbbb
add
sub
add
shll
sbb
xchg
sbb
push
xchg
pop
aaa
cltd
cmpsb
shlb
push
jmp
hlt
hlt
dec
xchg
and
mov
xchg
cltd
shlb
xchg
pop
aad
std
test
and
fsts
inc
aaa
mov
test
pop
mov
mov
lcall
push
and
mov
jne
pop
push
fidivs
jge
inc
mov
xor
iret
scas
movsb
mov
adc
inc
fcoms
mov
inc
inc
add
pop
roll
cmp
cmp
add
movsb
cmpsb
add
sbb
shll
sbbl
cmc
cmpsl
add
ljmp
xor
bound
mov
lea
push
into
jbe
in
stos
aam
cmp
pop
push
and
xlat
push
fadd
cmc
daa
dec
mulb
jg
mov
cmp
sbb
addr16
sbb
lods
jne
dec
or
push
adc
mov
out
mov
shll
cli
xor
jp
hlt
sbb
dec
add
jne
imul
mov
ret
testl
xor
mov
inc
adc
popa
aaa
inc
cmp
dec
inc
pop
lock
mov
jnp
inc
fs
es
cmp
pop
pushf
and
mov
addr16
imul
sahf
inc
inc
dec
stos
leave
pushf
sbb
fisubrl
and
lcall
or
push
popa
movsl
sub
jge
sti
orb
gs
out
popa
add
pop
repz
push
pushf
xchg
mov
mov
ds
rorl
test
push
pop
pop
shlb
popf
test
stos
fmul
mov
popa
add
xor
rcrb
stos
xchg
dec
les
xchg
imul
fimuls
ljmp
ret
adc
push
sbb
adc
dec
addl
dec
cmp
mov
jb
mov
fnstsw
jp
addr16
add
jae
mov
enter
das
sbb
mov
gs
cmpsl
ljmp
mov
popa
adc
cmp
stos
jns
les
add
pop
pusha
and
lods
or
addl
adc
cli
push
rcrb
fcmovbe
sahf
add
pusha
outsl
jecxz
inc
push
das
add
cmpsl
adc
xor
sahf
push
data16
xor
push
and
in
push
pushf
das
xchg
add
std
dec
mov
sahf
jbe
adc
lods
sbb
and
mov
sbb
shl
jns
cmc
mov
ljmp
or
pop
loop
sbb
push
lret
lret
fld
out
or
popf
inc
fildll
divb
int
sbb
mov
push
sbb
data16
loop
data16
fwait
sub
daa
shl
ljmp
scas
mov
aas
sti
inc
lahf
push
es
pop
xchg
add
push
repnz
sbb
aaa
int3
test
insl
jae
hlt
cmc
or
testl
mov
daa
imul
jge
push
mov
test
ja
lcall
inc
data16
inc
and
cwtl
pop
inc
add
sbb
aas
das
cmpsb
sbb
jg
pop
gs
fnstcw
daa
fsts
fdivrl
mov
sub
xor
data16
fbld
sbb
add
and
aaa
jns
sahf
es
pusha
ret
cltd
adc
ret
pop
aaa
jae
fstps
clc
sbb
int
mov
lret
push
push
add
cmc
pop
jmp
test
das
gs
rcll
or
jb
insl
rorb
mov
jmp
orb
lcall
inc
popa
insb
loopne
adc
jmp
xor
dec
mov
adc
sbb
lahf
dec
xchg
test
shrl
fmull
gs
popf
inc
pop
call
lock
adc
jae
pcmpgtd
jbe
inc
xchg
push
sbb
lcall
int3
pop
inc
shrl
subb
cld
into
repnz
xlat
mov
aad
pop
fimuls
jge
xchg
stos
and
sbb
jb
mov
cmpsb
mov
insl
mov
fidivl
sbb
pusha
jp
in
filds
lods
inc
pop
jl
aaa
lods
and
push
in
pop
popf
sbb
std
stos
fistpll
cli
pop
adc
push
sbb
push
sbb
mov
mov
cmpb
mov
mov
mov
or
push
aas
cmpsl
add
sbb
jb
icebp
inc
sbb
pop
add
inc
sub
in
imul
lret
ret
dec
cltd
jge
mov
aad
les
sbb
pushf
out
mov
sahf
clc
mov
jmp
xor
lcall
lods
dec
push
mov
shr
push
push
xor
sbb
fistl
jl
push
fcoml
das
cmpb
sbb
lods
xchg
sar
jno
mov
mov
mov
lret
dec
mov
xlat
arpl
jno
xchg
lcall
lea
xchg
imul
dec
pop
loope
outsb
outsb
add
fcmovnbe
sub
adc
jge
mov
add
lcall
xor
push
mov
mov
fisttps
das
jno
sub
mov
fisubl
data16
int3
inc
xor
pop
out
scas
sbb
stos
dec
pop
fidivs
gs
pop
sbb
cs
insl
outsb
pushf
lret
mov
pop
bt
add
mov
mov
sbb
jge
dec
inc
fimull
in
cmc
inc
push
dec
imul
xchg
les
inc
sarb
sub
fiadds
inc
ss
dec
daa
pop
mov
mov
dec
add
add
mov
push
add
and
dec
out
dec
iret
sti
cmp
std
add
lea
das
ss
xchg
sub
sti
pop
jecxz
andb
js
or
add
nop
jmp
repz
push
gs
inc
cmpsb
in
pop
mov
popf
jl
rolb
test
cmp
or
adc
push
push
sbb
adc
iret
jbe
xchg
jae
loop
faddl
sub
test
pusha
std
outsb
mov
push
insb
dec
ja
or
pop
push
inc
or
push
jbe
or
mov
xchg
or
and
sub
xor
xor
sysexit
adc
arpl
lahf
and
lcall
pushf
or
adc
xor
mov
mov
pusha
loop
or
roll
lock
sbb
add
int3
mov
inc
fcmovnbe
daa
xchg
js
dec
ds
insl
mov
sub
out
inc
out
nop
lcall
or
pushf
mov
jnp
aas
mov
outsl
shrb
rorl
shll
push
inc
cmpsl
addr16
jl
push
push
addb
sbb
test
mov
push
inc
arpl
jl
outsb
sbb
mov
and
scas
loopne
xlat
xor
loop
xchg
jp
ret
mov
fbstp
fistpl
data16
pop
jno
ret
out
cmc
xor
cmpsl
loope
push
mov
fsubl
ret
jp
lahf
or
das
daa
in
mov
imul
pusha
sub
sbb
insl
add
jnp
aas
sub
js
leave
sub
icebp
inc
adc
xor
adc
jecxz
xor
mov
rcrl
out
mov
cwtl
mov
xor
mov
mov
stos
lcall
sbb
out
popl
cltd
adc
sbb
cld
xor
into
pop
lods
sarl
fisubrs
shll
jno
add
fld
xchg
or
fdivr
and
mov
das
cmpsl
imul
pop
insl
cld
mov
dec
xor
popf
sub
xor
fcompl
xchg
mov
data16
arpl
subb
mov
subb
xchg
ret
bound
xchg
adc
jmp
jecxz
pop
fstpt
cwtl
sbb
push
or
ss
mov
in
pop
rorl
pop
stos
mov
insl
jno
insl
testl
call
jp
data16
jl
jle
cmp
xorl
inc
jmp
fdivp
fmull
mov
sti
pop
orl
stc
and
popf
imul
icebp
cmp
inc
push
adc
dec
hlt
pop
jb
cltd
xchg
iret
mov
ljmp
jnp
shld
add
movsl
push
push
mov
adc
pop
icebp
imul
cmc
into
leave
mov
rcll
dec
add
and
frstor
dec
lods
xchg
div
rcrb
in
push
sbb
jl
loop
xor
test
nop
pop
sbb
enter
out
lods
adc
xchg
mov
cmp
push
popf
xor
adc
and
pop
jmp
jbe
mov
jb
pop
jae,pn
xor
or
test
mov
inc
and
pop
xchg
fidivrl
dec
enter
sti
mov
fnstsw
or
inc
mov
push
fistps
add
or
or
mov
xor
xor
push
sbb
sub
imulb
xlat
sub
inc
aam
ljmp
lods
insl
bound
mov
adc
cmp
push
jp
mov
aaa
adc
fwait
shll
rcrl
cmpsb
fldcw
pop
sub
or
push
lret
jp
push
mov
clc
dec
xor
aas
test
mov
and
mov
les
xchg
lods
and
lret
or
fidivl
ss
dec
sahf
xchg
add
ljmp
sbb
outsl
mov
fnstsw
ja
leave
add
jge
dec
pop
sar
jp
xor
push
data16
or
adc
out
jl
push
stc
xor
xchg
sbb
and
icebp
pop
jb
xorl
adc
insb
xchg
sahf
add
orb
sarb
push
jo
stc
pushf
or
adc
pop
js
mov
lret
test
cmpsb
sarl
jbe
pop
fdiv
imul
xlat
inc
push
jae
sbb
sbb
mov
mov
fstps
or
test
mov
pop
fdivrs
push
loope
bound
leave
fucom
int
xchg
movsl
test
data16
lret
jbe
jno
and
xchg
xchg
jns
cmp
push
fidivl
mov
icebp
rorb
dec
jle
dec
jbe
cs
ljmp
xor
pop
lds
inc
pop
dec
sub
mov
addb
shrl
push
xchg
push
std
xor
sbbl
mov
dec
or
ret
les
gs
repnz
inc
movsl
add
in
mov
pop
jle
fst
inc
mov
sbb
stos
sbb
add
dec
por
mov
or
cmc
dec
or
stc
rol
sub
ljmp
outsl
pop
jne
cli
inc
add
mov
bound
fmull
sbb
sub
xlat
mull
lock
repnz
mov
jp
cmp
ret
sbb
or
jp
test
rolb
push
jno
lds
scas
testl
fstl
loope
fidivrl
push
push
jnp
movsl
push
adc
testb
inc
cmp
dec
leave
leave
xor
push
mov
pushf
push
ret
adc
data16
in
xchg
lods
insl
add
push
call
push
inc
pusha
add
push
rcrl
push
gs
inc
xlat
xor
sub
mov
outsb
inc
xor
popa
out
mov
loop
dec
sbb
cmp
sbb
fwait
xchg
inc
cmc
mov
xor
outsl
aam
les
xor
xchg
sbb
shrb
pop
aas
dec
movsl
lods
clc
imul
bound
movsl
dec
sbb
inc
dec
add
push
in
inc
repz
nop
pop
push
and
cmovbe
out
inc
inc
lcall
rcrb
push
andb
inc
in
jp
dec
push
insb
and
pop
sbb
mov
fst
mov
int3
imul
jb
lds
int
out
cs
ss
xor
mov
shl
xor
test
arpl
dec
jle
mov
in
popa
inc
addb
es
sub
daa
cmp
pop
fstpl
rcll
adc
loope
xchg
lcall
call
rorl
fsubl
jg
cwtl
pushl
adc
addb
stos
cmp
mov
cli
jle
filds
fidivrs
inc
pusha
jmp
sbb
sbbb
orb
sahf
stos
outsl
pop
test
xchg
mov
or
test
xor
loop
addb
sub
addb
not
inc
xor
call
mov
ret
xlat
mov
mov
and
xchg
cli
inc
loop
push
aaa
mov
andb
inc
ss
loope
sbb
jns
jmp
ret
ja
mov
cmp
add
sahf
push
call
mov
lret
js
and
xchg
dec
je
push
pop
mov
cltd
cmpsb
movsb
jp
adc
dec
sub
sbb
jmp
pop
xor
fcmovu
loope
xchg
cwtl
jle
or
add
movsb
test
lea
les
or
loopne
fsubrl
xchg
add
add
pop
ljmp
mov
test
fwait
jb
lds
add
in
pop
lahf
bound
xor
mov
shrb
pop
jp
or
push
cmpsb
bound
add
icebp
inc
cmp
jp
xor
push
push
xor
dec
nop
pop
mov
mov
cmpsl
sub
pop
cmp
xor
sbb
mov
and
push
add
fucom
test
xor
or
sbb
push
insb
lock
popf
mov
sarl
leave
mov
lock
adc
jnp
shlb
lcall
js
or
pushf
xor
jl
xchg
data16
scas
add
pop
mov
ja
push
push
or
mov
lods
mov
and
fcmovnu
push
add
mov
lds
aaa
test
insb
mov
sbb
test
addr16
sbb
jmp
test
iret
lods
daa
shrl
mov
adcb
movsb
or
add
cmc
scas
pop
cli
xorb
jle
jmp
je
dec
or
or
add
ljmp
adc
je
jbe
inc
push
aaa
and
loope
pop
stos
push
shlb
xor
cmp
xor
mov
sbb
adc
xor
popa
enter
pop
fwait
push
lock
jmp
or
dec
sahf
inc
jae
sub
xor
lret
pushaw
sub
leave
mov
lds
sbb
ljmp
cmovbe
push
xor
out
sub
jne
push
xlat
sahf
clc
lea
fbld
roll
add
lahf
jmp
jl
loop
jg
sub
xor
and
sbbb
aaa
or
add
inc
mov
mov
mov
mov
dec
mov
xor
orb
in
insl
mov
inc
lret
addr16
lods
leave
sti
jl
add
dec
sbb
xor
sti
or
or
xchg
scas
lahf
lods
arpl
testb
js
add
in
rcll
lret
cltd
decb
stos
dec
push
jp
xor
cmp
mov
cs
xor
or
mov
les
stc
popa
inc
add
fildl
and
xchg
pop
pop
dec
outsl
pop
popa
mov
lret
sbb
sbb
insb
inc
sbb
int
repz
mov
push
xor
mov
mov
js
mov
xorl
mov
flds
mov
lahf
out
push
mov
popa
mov
mov
out
stos
daa
pop
xlat
sbbl
jno
inc
pop
push
pop
push
xor
sbb
sub
xchg
addl
jl
inc
lds
cmc
xchg
jg
aad
add
cld
mov
or
data16
stos
push
xchg
and
sbb
mov
or
fsubl
bound
or
xor
inc
or
negl
test
pop
and
mov
add
or
dec
pop
xor
stos
addr16
lret
sub
inc
jle
xchg
jbe
xchg
stc
push
sbb
sbb
arpl
lods
gs
je
cmc
aaa
mov
xchg
add
or
push
add
loop
lcall
shl
data16
je
sahf
push
add
or
push
pop
insl
xor
stc
movsl
and
in
push
xor
xchg
jno
mov
test
testb
cmpsl
add
sbb
xor
or
mov
inc
pop
mov
pop
jecxz
ljmp
sbb
jecxz
inc
add
popf
push
adc
or
sbb
pop
sbb
icebp
push
jle
mov
push
pop
inc
inc
fmuls
or
mov
outsb
mov
mov
or
dec
dec
xchg
adc
mov
xchg
pop
out
test
in
add
sbb
sub
push
add
add
loope
pop
popf
jp
push
sbb
pop
imull
xor
xor
scas
xorb
xchg
mov
icebp
cmp
loop
test
sbb
cmp
or
cld
mov
xchg
icebp
cmp
jl
shll
xor
pop
gs
fs
aaa
test
inc
or
add
cmp
bound
push
pop
xchg
add
xchg
out
pop
std
rcrl
sbb
insl
les
repnz
jle
xor
xor
ljmp
push
dec
mov
jmp
sub
inc
bound
push
test
sbb
cmpb
jp
sub
xlat
rclb
lcall
imul
fcomps
in
je
push
and
xchg
add
ja
jle
sbb
push
jp
leave
nop
aas
lds
cltd
xor
outsb
sbb
cld
shrb
mov
enter
sub
imulb
jne
lcall
or
or
push
std
cmp
sbb
adc
and
loop
xor
pusha
sahf
cmc
pop
jmp
repnz
inc
ret
push
add
dec
adc
fidivrl
iret
nop
mov
and
fisttpll
ljmp
fwait
cld
mov
ret
cmc
dec
push
data16
inc
adc
push
cmp
cmp
icebp
into
and
add
jge
sti
sbb
adc
data16
mov
mov
or
jno
js
test
repz
into
sbb
mov
xor
out
pusha
xor
lock
ret
mov
movsb
call
dec
push
andb
cld
or
mov
jae
into
pop
jb
or
xchg
aad
pop
push
inc
les
push
jmp
lret
cmc
sub
cmp
adcb
mov
sub
bound
xor
pop
jb
mov
push
and
pop
fldcw
in
mov
push
or
addr16
add
lcall
aaa
adc
jbe
or
cmp
mul
lret
test
ret
test
jnp
inc
xchg
jne
jp
sbb
push
ret
gs
mov
pop
xchg
out
mov
ja
xchg
xor
lret
pop
push
cmpb
dec
adc
mov
nop
jb
xor
mov
mov
lea
jne
mov
and
aas
cmp
popa
rcl
or
mov
jno
das
pop
nop
inc
push
mov
rcrb
cmc
inc
dec
mov
sbb
mov
repz
cmpsl
fmulp
mov
sub
and
dec
or
lret
lret
lea
fwait
jecxz
xlat
adc
cmp
clc
mov
fimuls
mov
jno
inc
cmp
cwtl
lea
pusha
xor
pop
sbb
jbe
idivl
adc
or
movsl
fnsave
jne
sahf
inc
popf
popa
jbe
inc
mov
ficoml
xor
aaa
sbb
sub
out
jmp
mov
and
mov
or
pop
stos
jmp
insb
mov
dec
push
mov
jmp
mov
outsl
repnz
push
dec
pop
add
es
xchg
mov
push
or
and
cltd
jbe
pop
adc
ja
fcomps
jae
in
or
popf
xor
sbb
ljmp
dec
inc
fwait
dec
adc
shlb
jg
jne
fs
mov
xchg
imul
lds
inc
cwtl
adc
sub
cltd
sahf
ret
dec
orl
bound
pop
push
xchg
rol
cli
lds
lret
test
push
icebp
pop
jmp
fsubrp
mov
push
loop
imul
fsubl
mov
dec
pop
sbb
outsb
or
lds
adc
dec
sarl
lret
add
pop
pop
fsubrl
notb
repz
in
and
es
push
lret
mov
dec
push
cs
mov
inc
jne
stos
push
push
ret
jno
xchg
mov
xchg
lcall
popa
push
xor
or
cmp
cltd
jle
jb
repnz
mov
push
imul
sbb
jge
hlt
and
push
sbb
je
mov
addb
sub
jp
bound
push
out
addr16
in
stos
xlat
mov
xchg
mov
add
pop
pop
enter
ja
push
in
sti
jbe
pop
lret
push
scas
pause
test
jle
mov
inc
or
cmpsl
pushf
cmpsb
fs
shll
jne
ds
jge
leave
jne
ljmp
imul
repnz
loope
pop
xchg
jg
pusha
fwait
or
leave
mov
push
add
movsb
cmp
je
add
dec
pop
mov
jl
xor
cmc
dec
push
sbb
pop
ss
sti
inc
fisttps
lock
cmpsb
or
out
out
jl
mov
jl
pop
sbb
sub
sbb
xchg
xchg
sbbb
daa
call
pusha
and
or
inc
test
and
cwtl
inc
sbb
loopne
jne
lret
adc
push
inc
inc
mov
pop
push
fs
add
mov
leave
xchg
dec
sub
fs
stos
jnp
dec
sub
lret
mov
lods
dec
inc
xor
in
outsl
in
repnz
mov
lods
add
or
shll
cmp
push
dec
xchg
mov
mov
mov
out
jnp
les
inc
lcall
bound
dec
and
inc
push
in
dec
push
pop
stc
sti
test
cltd
adc
data16
aam
adc
or
ja
lods
in
testb
or
push
dec
jno
rclb
pop
push
ficompl
cmp
add
or
pushf
adc
mov
xor
insl
or
xor
xchg
cmp
push
jge
inc
pop
ss
jne
add
or
inc
cmc
mov
fsubs
loopne
fstpt
jmp
icebp
and
and
sahf
cmp
movsb
sub
les
adc
pop
cli
imul
sbb
js
rcrb
imul
mov
stc
inc
sbb
mov
pop
sbb
jns
sbb
add
gs
or
inc
add
push
cmp
mov
push
push
and
addl
hlt
push
fs
test
adc
into
gs
adc
adc
lods
mov
xchg
insb
jp
int3
test
or
mov
rolb
in
hlt
or
aad
leave
lea
arpl
mov
aad
mov
mov
push
aaa
lret
sbb
jl
cmpsl
pop
in
pop
jmp
and
jo
mov
sbb
cs
add
sbb
sahf
sub
shrl
shrl
cmp
or
rclb
add
fiadds
outsl
mov
push
es
lahf
cmp
cs
and
subl
jae
fildll
and
pop
jge
sbb
cltd
lods
int
inc
add
jmp
stc
mov
rorb
adc
call
sub
lock
cmp
stos
adc
mov
mov
imul
lcall
pop
les
push
mov
or
push
popa
mov
xlat
les
cltd
jmp
rcll
scas
sub
inc
cmc
or
not
or
insl
hlt
call
mov
dec
jne
add
jns
sub
push
jo
jne
out
js
xchg
ret
add
scas
dec
movsb
aaa
inc
rcll
stos
rorl
das
sbb
mov
or
inc
pop
and
xor
inc
es
mov
rorb
xchg
mov
cmp
fsubr
daa
out
out
cmp
adc
inc
sbb
data16
fwait
jl
fst
cmpsl
lds
add
dec
adc
lret
sub
repz
sarb
cmc
shrb
push
xchg
and
jecxz
pop
sarb
sbb
outsb
pop
add
jp
mov
push
fcoml
sbb
fisubl
lods
sbb
or
mov
jle
lret
scas
push
das
lock
andl
mov
shlb
popf
mov
push
jle
sbb
ljmp
ss
mov
xchg
jb
fsubrs
enter
sub
and
popa
sbb
xor
push
or
lods
cld
dec
or
data16
sbb
sub
mov
in
lcall
mov
and
mov
jns
mov
adc
jnp
add
imul
fwait
cmc
sbb
shll
into
aas
stos
pusha
push
subb
sbb
and
cltd
iret
xlat
lods
aad
cmpsl
std
dec
enter
popf
roll
gs
xchg
shlb
shlb
jmp
fcmovu
push
sbb
imul
jmp
dec
mov
add
jg
push
mov
aaa
andl
shrb
int3
jnp
mov
movsb
push
or
pop
shll
xchg
lods
and
xchg
push
adc
or
nop
imul
adc
pop
sbb
mov
cmp
or
out
inc
pop
mov
lods
sub
or
jne,pt
sbb
fidivrl
fnstsw
pop
cld
out
pushf
or
dec
sbb
inc
daa
jecxz
add
xchg
outsb
sbb
movsb
pop
notl
movsb
mov
add
insb
test
loop
mov
sarl
cmovne
les
cmp
dec
mov
mov
stos
xchg
clc
les
dec
adc
or
push
or
jbe
cmpsb
push
incl
in
push
push
scas
daa
sub
jno
movsl
add
out
xchg
cwtl
add
aad
jbe
or
jge
xchg
xchg
jae
and
popf
ret
xor
cltd
data16
sbb
add
decb
push
add
sbb
add
push
lea
mov
scas
mov
pop
fcomps
adc
loopne
fildl
pop
sti
push
inc
mov
mov
popf
in
or
stc
add
push
inc
out
dec
sub
into
ret
jns
cli
int3
push
mov
jo
loope
fs
sbb
sbb
es
sbb
xchg
shl
or
push
adc
xchg
lods
sub
fdivs
xchg
test
push
add
sbb
add
dec
movsl
push
xchg
jae
movsb
pop
inc
outsb
or
xor
mov
lods
mov
mov
add
inc
xchg
jmp
sbb
dec
adc
sbb
lock
loope
push
fstpl
lcall
sahf
lret
and
dec
or
cmp
xchg
mov
pop
adc
cld
or
push
sbb
xor
shlb
xchg
ds
mov
add
inc
aad
out
gs
lret
dec
sub
jmp
adc
test
xor
push
ret
pop
inc
push
push
in
testl
cmp
or
jb
movnti
stos
push
ret
pop
aaa
push
cli
sbb
in
cltd
mov
stos
data16
jmp
std
out
orb
fsubrs
push
mov
flds
jno
out
xor
lods
lgs
dec
jecxz
inc
cmc
enter
mov
data16
mov
cmp
xor
lcall
inc
fwait
jne
jle
or
add
popa
xchg
mov
test
add
ret
mov
bound
shlb
sub
mov
push
mov
test
inc
sbb
les
cs
xor
push
lret
adc
in
lcall
loopne
mov
jae
pop
jo
mov
es
dec
icebp
mov
mov
ficompl
sub
cwtl
jl
fdivrs
adc
lret
cmp
test
cmc
out
sub
pusha
mov
cmpsb
pop
data16
add
pusha
ret
popa
mov
dec
and
xchg
cmp
adc
loopne
cmp
ja
mov
jg
dec
nop
jo
pop
adc
call
addr16
out
pop
cltd
cld
ljmp
sbb
cs
adc
test
jbe
fisubl
daa
push
lret
xchg
pusha
scas
pop
mov
adcb
lds
lea
testb
insb
mov
jns
sahf
add
ret
mov
test
jge
mov
ret
pop
and
pop
xor
inc
inc
mov
insb
jecxz
rclb
pop
jb
xor
into
shll
push
arpl
mov
icebp
inc
dec
movsl
dec
adc
mov
dec
in
jge
scas
inc
and
pop
add
inc
xor
or
adc
pop
inc
movsl
sub
fstpl
sub
enter
pop
add
js
outsl
mov
adc
loope
dec
pminsw
sub
or
jno
mov
fnstsw
fbstp
hlt
fnstcw
insl
push
add
or
fidivrl
jbe
cmpsb
jge
lods
xchg
loop
dec
push
inc
insb
pop
dec
mov
dec
xor
xchg
imul
sub
mov
or
scas
shll
es
fcompl
insl
pop
xor
pop
fadds
add
sti
mov
fdiv
push
cmc
scas
rcll
push
dec
xchg
fistpl
inc
add
push
sahf
add
in
ljmp
aam
jae
enter
daa
sahf
mov
dec
cmc
push
adc
jo
cmpsl
mov
jne
arpl
mov
add
sbb
dec
bnd
jne
sub
and
mov
inc
pop
loope
pop
or
mov
mov
xchg
and
dec
lods
xlat
sar
pushf
jno
cld
add
sub
or
push
mov
push
cmp
rorb
clc
or
mov
push
mov
fmull
push
jl
addr16
mov
ja
es
outsl
push
gs
sub
jne
jbe
test
mov
loopne
shll
scas
aas
dec
push
jne
insb
repz
ja
lock
outsb
dec
jne
cmpsb
jno
sti
les
inc
sub
inc
test
or
std
dec
xorb
test
sahf
test
sbb
mov
js
out
and
sub
lock
push
arpl
dec
xchg
out
addb
cmpsl
mov
mov
and
xchg
pop
popa
push
add
or
add
jge
mov
hlt
pop
mul
daa
cmp
loopne
lds
cltd
cmpsb
sbb
pop
or
addb
loopne
inc
pop
or
inc
repnz
sbb
inc
cmpsl
inc
cmp
xor
push
push
in
aaa
test
ret
sbb
and
or
sub
imul
enter
test
ret
or
xchg
loopne
push
jp
clc
dec
mov
xor
push
movsb
pop
dec
cmpsb
lret
pushf
arpl
popa
loopne
ljmp
jmp
sbb
div
cwtl
cmp
mov
adc
inc
mov
or
or
into
scas
sbb
add
icebp
cli
push
divl
jne
mov
out
inc
inc
ss
add
je
das
push
dec
cmp
or
mov
repnz
add
adc
cmp
sbbl
or
dec
int
pop
lods
inc
loope
cli
fstl
jp
xor
leave
mov
popf
lret
cmp
xchg
add
out
mov
mul
and
ljmp
sbb
inc
cmp
lahf
sbb
inc
lea
cltd
sbb
cmc
adc
clc
dec
add
test
push
notl
cmp
mov
and
ret
ficompl
ret
in
lods
xchg
test
cli
pop
loope
sahf
sbbl
cmpsb
out
mov
or
push
and
cmc
push
mov
pop
add
std
ljmp
dec
add
and
int
stos
fsubl
lds
xorl
data16
cmp
adc
push
fsts
out
outsb
ss
hlt
cld
pop
xchg
das
add
stos
sub
into
xor
jns
popa
and
ja
push
sbb
shl
rcrb
movsb
jmp
inc
sarl
mov
dec
ret
sub
adc
cmp
add
add
sub
aad
or
imul
addl
mov
cs
jmp
adc
rorl
clc
add
addr16
aaa
add
jg
xchg
in
pop
xchg
mov
mov
mov
xor
push
lea
scas
push
stos
es
dec
lcall
push
movsb
or
xlat
xchg
cmp
fmulp
mov
js
jbe
add
fbstp
push
xchg
ljmp
push
jmp
xor
mov
gs
cmp
data16
mov
jne
or
xchg
test
xchg
dec
jbe
repz
orb
cmc
sbb
or
xor
pop
xor
push
iret
sbb
fdivl
cltd
fmuls
loop
fnsave
cmpsb
fimuls
adc
int
loopne
leave
xchg
mov
mov
mov
rcr
in
stc
xor
aam
out
rcl
pop
jne
lds
pop
rcrl
lea
push
icebp
jno
dec
pop
fs
mov
daa
dec
dec
cs
int3
cmpsl
jbe
scas
fldl2t
lahf
es
jge
lds
xor
dec
cmpl
subb
cwtl
aaa
mov
push
cmp
shrl
jbe
cmpsb
popa
xchg
cmpsb
push
in
pop
ljmp
and
popa
loopne
stos
je
lds
cmc
sub
mov
add
inc
insb
orb
ljmp
pushl
out
lock
movsb
adc
dec
mov
ret
or
jno
popa
push
mulb
jecxz
popf
mov
push
dec
cmpb
enter
mov
add
dec
xor
mov
mov
xchg
sub
fs
jmp
jno
sbb
mov
inc
xlat
test
or
addb
outsb
inc
sub
repz
and
mov
out
pop
sub
data16
loope
xor
lods
sti
outsl
ja
xchg
adc
call
mov
inc
cmp
ret
push
sbb
fimull
xor
daa
mov
nop
push
loopne
mov
call
aas
jnp
jne
in
push
test
in
fnstenv
sub
pusha
pop
loope
xchg
fcomps
xlat
xchg
pop
sbb
pop
push
cli
mov
adcl
out
outsl
cld
push
cmc
outsb
mov
xchg
mov
lret
fsubr
test
cmp
cs
call
stc
jae
inc
fmull
push
mov
xchg
je
std
jecxz
lock
sbb
xor
repnz
cld
out
lcall
and
sbb
insb
inc
imul
push
into
jne
ja
stos
cmp
pop
pop
inc
add
sahf
mov
imull
sub
popa
lods
inc
cltd
jmp
push
sbb
pop
push
in
mov
cmp
and
aaa
cmp
mov
sbb
xor
jae
push
dec
sbb
jmp
jmp
divl
dec
pop
loopne
stos
jno
push
push
js
pop
sbb
sbb
or
push
lcall
orb
and
fwait
sub
xchg
dec
je
xchg
add
ret
imul
and
gs
xchg
xorl
xchg
mov
add
ret
in
push
gs
nop
das
popa
jae
mov
push
pop
sbb
stos
in
adc
push
or
cmpsl
je
insb
pop
outsl
and
in
inc
sub
ret
cld
push
or
add
jp
lcall
jo
das
dec
int3
or
cmpsb
inc
inc
test
push
or
jmp
add
arpl
sti
sub
mov
and
sbb
sti
arpl
rorb
scas
pop
xor
cmp
pop
pushf
fiadds
flds
mov
push
loopne
fbld
in
lahf
mov
pop
out
push
lock
cmp
mov
inc
mov
push
mov
pop
rorb
rolb
in
push
jbe
pop
lcall
jne
jmp
sahf
mov
hlt
push
inc
daa
fwait
stc
pop
cwtl
stos
sbb
insl
mov
jns
or
loope
jnp
jle
jmp
mov
int
incb
test
add
or
fdivrl
shll
cpuid
fidivrl
inc
xchg
ret
sahf
pop
add
stos
jno
inc
inc
lcall
sub
dec
test
pop
pop
push
out
cmpsl
push
mov
push
and
mov
mov
and
cmpsl
adc
mov
mov
and
cmp
fwait
sti
insb
enter
shrb
mov
aaa
push
sti
out
xor
xchg
fwait
xchg
dec
xor
out
adc
mov
dec
gs
addr16
pop
repz
andl
popa
xchg
ret
sbb
cli
xchg
psubsb
cli
cmp
mov
test
add
rorb
sbb
mov
jp
mov
sbb
popf
push
xchg
mov
sbb
adc
loope
cmp
sub
inc
sahf
cmc
ss
lcall
sti
out
mov
or
push
insb
cwtl
and
xor
in
push
fildl
or
mov
fnsave
ret
lret
or
mov
das
xlat
jno
cli
or
ret
out
popa
inc
jge
add
cmp
sbb
scas
push
xor
jns
sub
jg
sahf
xchg
add
out
inc
cltd
or
xchg
notb
sub
xor
jns
cmc
jns
in
fmuls
icebp
data16
mov
test
and
cli
push
push
mov
mov
imul
lret
cmp
pop
push
xor
and
sub
add
jge
pop
test
enter
addb
das
push
fs
jmp
int
loopne
jl
outsl
and
sbb
push
and
ret
sbb
inc
push
push
popa
scas
negl
data16
popa
lea
loop
int3
mov
and
call
jecxz
in
lret
jge
mov
or
jnp
push
jnp
test
data16
cmp
or
jle
outsl
adc
addb
mov
pop
pop
mov
and
inc
in
stos
cli
pop
scas
fists
push
pop
fistpll
pop
xor
xchg
ficompl
ficomps
xchg
out
sbbl
leave
xchg
adcl
and
add
dec
test
out
push
cli
or
test
imul
popf
add
sub
xor
inc
push
xlat
ficoml
mov
fsubr
ljmp
jo
mov
mov
div
mov
or
sub
mov
fdivs
jmp
xchg
inc
popf
or
out
pop
rcrb
push
dec
cmpsl
bound
addr16
jecxz
lea
push
dec
mov
es
fcoml
pop
cmc
sbbb
jnp
ljmp
cmpsb
sbb
mov
int
jno
in
daa
mov
in
push
shrb
xorb
imul
loope
jb
repnz
push
cmp
insl
lret
aad
mov
ret
push
icebp
fstpt
dec
fsubs
xchg
lds
hlt
pop
cmc
inc
mov
push
ss
test
inc
ljmp
mov
adc
cmp
adc
mov
dec
cmovp
pusha
imul
sbb
mov
fwait
jae
test
push
push
lock
and
outsb
sbb
adc
lea
mov
outsb
sbb
jle
cmp
xchg
rclb
loop
pop
aam
mov
mov
add
mov
sahf
scas
cmp
movsl
jmp
adc
xor
jmp
shlb
xchg
pop
mov
popf
ja
nop
push
stos
xlat
inc
inc
add
das
popf
ljmp
stos
rcll
int3
test
lds
aad
sbb
or
cmpsl
aas
lods
pop
mov
pop
cmp
cmc
fmul
push
inc
jnp
pop
jp
jge
push
dec
xchg
stc
insl
cmpb
xchg
not
mov
pop
test
pop
aam
add
add
pop
mov
mov
insl
mov
xchg
mov
pop
dec
bound
push
add
pop
loop
testb
mov
mov
sbb
push
inc
jno
jmp
mov
movsl
inc
add
and
mov
repz
fidivrl
pop
fsubl
insl
test
in
or
dec
in
mov
xchg
rcrb
jecxz
addb
rol
movsl
pusha
and
mov
jnp
push
or
shl
jge
fwait
mov
dec
xchg
aaa
push
movsl
lret
mov
xchg
cwtl
cmpsb
sbb
adc
add
and
cmp
cs
pop
int3
add
push
jns
mov
pop
pop
xchg
mov
leave
jmp
cli
cwtl
out
aaa
sbb
xchg
pop
sbb
int3
fs
out
jns
stos
inc
popa
stc
push
inc
sti
add
and
and
aaa
adc
and
sub
pop
or
and
nop
testb
cmp
and
xorl
or
outsb
sahf
sbb
push
xlat
sub
mov
mov
jg
mov
jo
dec
xchg
mov
ror
or
adc
sub
out
stos
ja
sbb
movsb
or
add
sub
dec
cmp
mov
sbbb
or
mov
fwait
negl
sub
adc
enter
xchg
mov
test
xchg
add
faddl
repnz
mov
imul
pop
jbe
or
mov
pop
loop
and
cmc
stc
push
scas
add
inc
cmc
sub
xchg
subb
mov
dec
mov
aam
or
jecxz
cmp
and
call
fwait
mov
xor
mov
into
lret
adc
rorb
lods
xor
test
pushf
adc
mov
push
aaa
gs
dec
mov
sbb
sub
test
not
sub
clc
ja
test
xchg
leave
orb
aaa
cmpsl
imul
aad
dec
mov
mov
fldl
loope
imul
les
sub
or
orb
jecxz
into
cmp
cld
cmc
hlt
jb
sbb
dec
clc
jg
push
aam
mov
sbb
push
in
mov
divl
xlat
repnz
push
fisubl
aad
sbb
out
sbb
pop
mov
test
pop
xor
stos
jmp
fwait
or
es
rol
add
inc
mov
lcall
push
test
sub
shll
movsb
test
pop
mov
dec
cmp
jb
sbb
sbb
xchg
lods
popf
and
and
jl
xchg
cmc
sbb
lahf
inc
mov
repz
mov
push
sub
jb
je
mov
test
xchg
jmp
popa
jl
xor
add
adc
mov
dec
loopne
mov
rclb
jp
or
sahf
ret
cmp
cmp
punpcklwd
fisttpl
aaa
sbb
push
push
idivl
add
test
xchg
stos
negb
testb
mov
loop
test
push
into
lret
inc
std
xchg
cmp
int3
faddl
cwtl
aam
std
or
loop
cmpsb
cld
loope
inc
xchg
push
push
add
push
push
inc
fs
aas
in
test
scas
inc
jg
lods
add
adc
arpl
mov
data16
cwtl
xlat
mov
arpl
sub
sbb
mul
push
inc
enter
cmpb
out
push
sbb
call
cmp
add
movsb
hlt
fidivs
jb
sbb
stos
arpl
lret
stos
sbb
fdivs
and
addb
and
jcxz
pop
je
cmpsl
rolb
in
stc
mov
push
gs
or
insl
out
xchg
movsb
movsb
stos
add
pop
fwait
xchg
push
inc
stos
sbb
fadds
sti
ficoml
nop
incb
imul
aam
cmpsl
scas
push
hlt
sbb
cmp
addb
stos
cld
mov
rorl
cmp
popf
mov
movsl
add
sbb
mov
cmpl
stos
inc
push
inc
adc
add
loop
test
sbb
jecxz
xchg
pop
push
stc
lahf
popf
xorb
std
xor
push
and
or
loopne
fs
out
jbe
add
call
sub
rolb
lcall
jge
and
sub
call
or
addl
sub
das
in
or
mov
mov
adc
test
xchg
push
sbb
addb
xor
sbb
mov
jbe
idivb
add
sbb
jmp
movsl
push
mov
mov
hlt
mov
add
jl
call
rcll
punpcklbw
cmp
leave
jle
sub
lods
and
jno
es
cli
add
loop
xor
ret
and
sti
rorl
adcb
mov
and
jmp
lahf
inc
push
fucomp
test
adc
push
push
pop
js
xor
je
push
in
hlt
jbe
icebp
and
jae
sbb
negb
and
mov
cwtl
jne
int3
mov
mov
mov
ret
rcrb
dec
out
and
iret
cmc
dec
pop
xor
jne
sbb
dec
push
add
mov
mov
into
rcrb
mov
leave
pusha
push
mov
mov
push
cmp
outsl
xchg
mov
mov
inc
aaa
inc
mov
xchg
gs
bound
jno
test
outsl
sbb
inc
mov
negb
jne
push
in
sahf
lret
push
lret
sahf
push
cmp
adc
test
fistpll
mov
pop
jb
enter
sbb
lea
in
movsl
gs
mov
jecxz
mov
mov
in
or
pushf
or
jl
data16
xchg
push
imul
adcb
out
add
popa
inc
mov
fwait
cltd
mov
nop
mov
test
loopne
pop
jbe
push
dec
rcr
mulb
pusha
cmpsl
inc
push
cltd
pop
js
test
xchg
jbe
mov
cwtl
subb
mov
xchg
sbb
dec
jle
call
and
rcrl
mov
and
mov
std
jo
sub
out
lds
sbb
mov
lret
xchg
xchg
push
es
fadds
or
push
lahf
cltd
shrl
or
sub
test
push
aas
aaa
pop
adc
mov
pop
cmp
out
pop
stc
shlb
mov
push
imul
jns
xor
stos
in
inc
mov
inc
mov
pusha
xor
popf
xlat
or
sbb
subl
icebp
lods
ljmp
in
mov
addb
jnp
addb
std
outsb
loope
mov
cmc
cmp
lret
add
pop
inc
mov
cwtl
cwtl
pop
or
pop
jmp
or
or
sub
fcoml
aas
push
dec
cmp
jnp
movsl
add
and
xchg
cmp
out
sbb
lock
mov
sbb
mov
nop
push
sbb
and
inc
movsb
lods
push
xor
and
push
dec
fcoml
pop
lret
sub
or
fimull
cmp
add
dec
jp
sbb
sub
or
imul
xor
jbe
or
aaa
jmp
sbbl
cmp
inc
mov
sar
scas
xchg
push
fucomp
in
cmpsb
inc
stos
jle
xchg
and
mov
sbb
pushf
add
jecxz
sub
and
xchg
jne
dec
mov
jo
cmc
packuswb
in
mov
pop
jecxz
rolb
add
ljmp
mov
outsl
shr
leave
data16
add
int
ret
stos
loope
testl
lret
in
or
pop
inc
shlb
imul
cmc
sbb
mov
pop
jo
lahf
icebp
inc
inc
pushf
xchg
mov
lcall
lods
push
fdivl
les
pop
mov
xchg
or
js
sbb
push
pop
mov
xchg
scas
inc
lea
daa
pop
arpl
iret
dec
out
mov
in
adc
dec
xchg
or
and
or
sbb
inc
out
out
ss
fadds
fdivrs
and
dec
sahf
mov
out
push
sbb
sub
fwait
out
outsb
pop
test
sahf
aam
pop
daa
adc
imul
out
stos
dec
sbb
negb
fistpll
jns
sbb
shll
mov
push
incl
popf
fsubl
mov
hlt
adc
subb
or
inc
xchg
fsubrs
scas
das
outsl
jle
jno
dec
icebp
add
inc
mov
inc
fadds
and
mov
cltd
mov
jl
jb
mov
sub
mov
sub
lea
dec
cmpsb
add
sbb
or
jle
aam
or
cmpsb
mov
adc
shlb
cmpsb
int3
aaa
lods
dec
arpl
inc
in
adc
xlat
fisubl
test
pop
mov
or
mov
test
cli
add
jecxz
in
out
rcr
sarl
arpl
nop
sbb
lret
xchg
and
fiadds
jae
and
into
popf
lcall
pushl
cmp
xchg
in
daa
icebp
pusha
aad
inc
add
mov
add
pop
xor
ret
ret
jge
mov
lret
sub
add
and
mov
xchg
or
sbb
ret
das
ret
mov
std
lcall
neg
push
mov
dec
add
cmpl
and
xorl
jbe
xor
sub
push
push
dec
daa
sbb
je
cmpsb
sbb
mov
sbb
push
arpl
sbbl
popf
faddl
loop
mov
cmp
xchg
xchg
pusha
mov
add
call
or
out
sarb
sahf
jbe
xor
mov
xchg
inc
sbb
data16
movsb
adc
pop
loopne
ficompl
test
inc
dec
mov
pop
out
jne
stos
mov
xchg
fisttpll
or
lahf
incb
mov
sbb
sbb
pop
sub
sahf
stc
fs
xchg
adc
icebp
xchg
sahf
jns
movsb
pushf
dec
pop
dec
int3
jns
dec
popf
out
in
or
cmp
mov
sbb
lret
fs
cmpsl
inc
inc
add
lock
mov
ds
mov
shlb
stc
mov
in
sarl
loopne
dec
aas
xor
dec
pop
mov
cmp
in
imul
push
mov
mov
xchg
dec
sahf
test
sahf
mov
or
xor
push
arpl
rorl
mov
scas
jne
cmc
out
jl
jle
and
lds
add
loopne
push
imul
jne
and
in
das
jns
dec
and
add
in
or
mov
mov
fmuls
xor
std
call
pop
loope
das
and
jmp
adcl
out
jl
in
mov
ja
push
cmp
out
mov
fsubrl
add
sbb
sub
add
rcr
xchg
test
add
das
insl
adc
bound
sahf
js
ret
mov
rorb
andb
lret
or
sub
mov
mov
jmp
mov
aas
sub
push
sub
dec
jnp
jle
insb
inc
mov
add
dec
shl
pop
dec
int3
pop
mov
rcrl
mov
mov
adc
dec
mov
ljmp
fdivrs
push
in
lahf
xchg
mov
mov
adc
in
test
inc
xor
lret
mov
jnp
and
cmp
scas
mov
jno
inc
inc
lock
jg
fsubrl
dec
in
dec
pop
fistps
icebp
inc
rcl
jl
sbb
mov
cmp
negb
mov
pop
mov
mov
mov
out
imul
sahf
inc
lds
jb
aaa
mov
mov
xchg
data16
pushf
in
push
or
and
xchg
push
push
sbb
sub
les
repnz
imul
shrl
dec
test
mov
sahf
mov
cmpsl
inc
mov
and
shlb
push
dec
jmp
mov
inc
mov
cmpb
mov
push
bound
loope
sub
dec
into
cltd
insb
dec
sbb
aaa
lea
pop
mov
sbb
addl
mov
cmc
or
pop
jge
pop
and
mov
and
adc
sub
mov
xor
fimuls
pusha
fsubp
es
mov
andb
int3
and
sbb
sarb
xchg
pop
cli
push
out
xor
inc
in
in
xchg
pop
jae
add
inc
adc
nop
mov
call
fs
xor
pop
jbe
push
mov
mov
sbb
out
mov
push
bound
pop
cltd
cs
movsl
out
mov
mov
inc
mov
mov
aaa
mov
std
cwtl
hlt
mov
mov
cmpsb
pop
mov
mov
xor
andb
enter
out
ja
jmp
insl
cmpsb
inc
loope
xor
sub
pop
adc
lcall
and
roll
mov
jmp
mov
les
pushf
inc
sbb
jbe
and
mov
int3
loope
cli
sbb
cwtl
sbb
popa
push
lret
mov
aas
sbb
mov
jb
call
cli
xchg
push
iret
and
popa
pop
call
leave
int3
sbb
or
outsb
jbe
sbb
ds
push
inc
mov
das
push
sbb
inc
push
popa
int
arpl
add
ror
mov
test
test
push
mov
mov
mov
or
adc
lret
jae
push
or
adc
push
shrl
mov
jecxz
push
filds
cmp
fiaddl
sbb
mov
lds
inc
lcall
fsubr
loope
sub
lahf
decb
xchg
mov
cmp
lcall
and
jle
inc
xor
adc
push
sbb
pop
test
jp
and
dec
cmp
push
les
sti
mov
jl
testb
in
push
iret
sbb
dec
in
push
call
stos
lock
adc
imul
mov
loope
jge
int3
dec
cmp
sbbb
jmp
push
add
inc
scas
dec
mov
adc
gs
fstpt
inc
push
data16
cmp
iret
sti
xchg
or
mov
xor
mov
pop
adc
push
sbb
shlb
mov
repz
mov
pop
stc
pop
push
test
inc
xor
mov
pop
addl
ja
sbb
mull
mov
icebp
inc
adcb
xor
icebp
popa
cmpsb
fdivrs
enter
xchg
imul
test
lcall
jno
sub
pop
mov
xor
jp
addb
inc
mov
loop
jo
int
sarl
mov
nop
jne
cmp
xchg
scas
dec
rcrb
jo
pop
mov
test
sbb
add
pop
push
pop
es
mov
out
cmc
test
negl
inc
adc
and
ss
popf
mov
lret
xchg
dec
mov
data16
lcall
nop
shrl
loope
ljmp
sbb
dec
and
add
pusha
inc
and
xor
test
ss
pop
lods
push
dec
xor
dec
out
fistl
lcall
mov
sbb
das
inc
jmp
lock
and
fistpl
dec
cmp
fldl
incb
add
and
mov
enter
outsb
notl
xchg
jae
inc
lcall
aad
jne
icebp
es
sbb
mov
inc
shlb
add
mov
dec
cmpsb
stos
fldenv
jmp
mov
xorl
pop
xlat
jp
shlb
nop
sbb
push
sti
xor
addr16
inc
lcall
pushf
pop
pop
les
fcmovnb
sahf
inc
add
dec
lret
sub
jno
inc
addb
in
cltd
xor
lea
push
mov
sbb
sbb
stos
das
jbe
push
and
lock
adc
out
daa
pop
push
scas
rcrb
sub
popf
mov
inc
xchg
lds
in
jmp
or
inc
ljmp
push
cs
sbb
mov
xor
xchg
shrb
int3
ja
xchg
in
push
push
mov
ja
lahf
int
iret
inc
inc
mov
dec
jnp
in
icebp
add
fs
mov
inc
pop
punpcklwd
fnstenv
pop
mov
gs
fwait
and
dec
jg
stos
add
gs
enter
inc
fucom
xchg
push
mov
out
pushf
test
jle
jg
jne
or
daa
dec
mov
lea
push
push
ja
into
mov
sub
sub
push
add
icebp
std
push
xchg
add
cmpsl
loopne
data16
int3
cmc
scas
dec
sub
xor
jp
outsl
lcall
mov
dec
icebp
mov
push
xchg
popa
popa
dec
out
sub
and
push
lds
incl
cltd
jge
cltd
out
lret
nop
jne
xchg
push
adc
mulb
xor
jae
cltd
loopne
jns
pop
fcomps
sbb
leave
movsl
mov
lret
mov
add
pop
scas
cmp
jbe
std
fldenv
push
inc
out
xchg
pop
roll
scas
xchg
and
mov
mov
adc
shrb
mov
movsb
inc
sbb
jg
adc
out
push
pop
or
sahf
fstp
dec
iret
or
ret
and
jp
fsubl
sbb
pusha
fs
insb
or
push
pop
push
mov
lods
loope
das
test
fs
pop
movb
xor
imul
in
ret
popa
ss
cmc
push
mov
pop
and
sub
enter
mov
mov
scas
or
fidivrs
sub
and
mov
add
sub
lret
jo
push
mov
sbb
daa
dec
cmc
in
popa
pop
sahf
subb
dec
sarl
xchg
dec
daa
mul
sahf
or
enter
dec
xchg
cmp
daa
and
cmp
insb
test
xchg
ret
repz
pop
pop
xchg
subl
rol
cwtl
lock
jecxz
incb
mov
fisubs
jge
add
add
cmp
cwtl
xchg
shll
sub
mov
xchg
add
in
scas
sbb
and
cli
lods
pop
popa
jl
dec
mov
lods
mov
lods
mov
push
rclb
add
add
pop
or
cmpsb
dec
adc
adc
test
cmpsb
enter
adc
sbb
pop
mov
andl
test
or
push
and
pop
jnp
popf
adc
mov
mov
inc
mov
xor
fsubr
inc
test
ss
dec
inc
and
popf
gs
stos
mov
jmp
scas
sbb
sub
repnz
int3
or
add
dec
loopne
push
mov
mov
test
aad
or
mov
popf
pop
xchg
mov
jecxz
mov
sub
fisubrs
sbb
push
ret
mov
xchg
shlb
sub
outsl
fbstp
push
sub
jge
shr
xchg
data16
movsb
mov
and
mov
insl
add
mov
add
mov
nop
fnsave
sub
push
lods
xchg
int3
adc
jle
mov
adcl
sbb
dec
enter
and
fwait
enter
popf
sbb
shrb
arpl
testl
popa
stos
jecxz
dec
insl
inc
addr16
andb
mulb
xchg
push
pop
cmp
lods
xor
push
adcb
push
dec
enter
mov
int3
inc
pop
push
insb
insl
je
pop
gs
divb
xchg
fimuls
push
divb
aas
lcall
dec
sub
shlb
add
pushf
mov
ljmp
mov
mov
sbb
mov
out
mov
inc
inc
fcoml
mov
cmp
and
mov
and
or
orb
stos
popa
pop
push
loope
cmpsl
nop
xor
xchg
add
data16
sbb
cmp
mov
repz
sub
xchg
fimull
dec
inc
pushf
mov
cltd
iret
adc
lods
inc
in
jae
mov
popf
cmpb
cmp
push
mov
inc
mov
mov
fisttpl
jmp
loopne
jno
xchg
rcll
cmp
nop
test
cmc
icebp
push
pushf
pop
jae
cmp
shlb
dec
xor
mov
mov
xchg
inc
int3
dec
in
and
das
hlt
lret
les
test
and
out
sub
push
inc
call
push
pop
xchg
add
jae
cld
scas
sbb
mov
mov
inc
sub
cli
or
and
sub
and
andb
mov
orl
ret
lock
or
imul
jne
or
stc
xchg
fs
push
or
sbb
and
in
fdivr
xorb
xchg
mov
jnp
test
push
xlat
xorb
xchg
dec
out
aas
out
add
sbb
enter
stc
inc
orb
andb
add
add
xor
sub
mov
inc
mov
loope
sbb
lret
push
cmp
lea
lods
pop
subl
mov
pop
leave
lods
lcall
mov
repz
jns
push
ffree
or
ficomps
mov
mov
or
cmp
mov
jmp
xlat
push
or
adc
insb
inc
test
inc
lahf
push
mov
scas
movsl
roll
mov
or
mov
sbbb
mov
sub
shlb
sub
or
std
movsl
cltd
insl
jno
in
sbb
mov
cmp
sbb
in
gs
gs
and
lock
ljmp
ljmp
lret
jl
jge
lret
jle
sub
faddl
out
jbe
or
jge
pop
or
aaa
pop
xor
les
adc
sahf
or
imul
mov
cmc
in
mov
mov
int
pushf
sbb
lret
and
or
sahf
jg
add
test
pop
mov
fwait
cmp
sub
in
lds
cli
lcall
and
fstpt
pop
push
imul
jb
ret
sub
pop
push
into
sbb
mov
sub
jg
fstl
jno
out
sbb
popf
inc
jp
lock
jle
mov
dec
dec
in
jg
imul
outsl
icebp
into
ret
aad
in
shrb
inc
and
pop
add
pop
pop
insl
fisttps
mov
and
sbb
xor
out
pop
and
nop
shlb
sub
testl
add
dec
or
cmp
shl
pusha
dec
sub
insb
mov
mov
scas
push
cmpsb
stos
cwtl
fsubr
aaa
jb
sbb
fidivs
cmp
inc
add
es
fsub
pop
in
sub
jns
inc
cltd
test
sub
icebp
das
lcall
dec
test
pop
pop
mov
fchs
dec
or
jnp
mov
nop
rorb
jnp
dec
xchg
xor
idiv
fsub
test
push
mov
imul
sbb
gs
shll
sahf
sbb
lock
push
sbb
xor
or
cmp
aas
pop
dec
outsl
and
inc
push
push
push
lret
xor
rcrl
gs
in
mov
pop
mov
and
hlt
push
inc
imul
adc
adc
pop
es
fwait
loopne
pop
ror
lcall
hlt
lds
daa
mov
jp
imul
push
xlat
nop
or
jne
jg
add
adc
xchg
jno
mov
mov
rcrl
aad
lret
push
and
pop
lea
imul
mov
or
test
dec
add
dec
mov
ljmp
aaa
in
mov
or
stc
dec
sbb
fadds
mov
jne
imul
scas
mov
arpl
push
xchg
movsl
movsl
jecxz
push
jne
test
nop
jp
adc
add
mov
and
sbb
or
fwait
daa
xchg
mov
xchg
or
mov
inc
andb
xchg
fimull
xor
test
cmpsl
push
test
jne
cwtl
xchg
leave
mov
xor
pop
xor
test
andl
dec
pusha
jl
xchg
nop
add
dec
inc
push
cmpsl
sbb
movsl
sub
cmc
push
cli
andb
popa
shrb
into
outsb
call
rol
cwtl
mov
nop
mov
lahf
aam
rcrl
push
or
pop
push
cmp
into
sbb
dec
orl
imul
xor
int3
dec
mov
das
cmc
and
xchg
imulb
jbe
mov
dec
pop
jmp
orl
sahf
dec
out
sub
mov
lods
sbb
cmpsb
movsl
inc
lret
fs
inc
push
das
inc
popa
adc
pop
je
and
fnstcw
xchg
mov
pop
jb
lods
pop
fdivs
data16
bound
popl
push
push
push
dec
xor
cmpsl
push
jecxz
push
pop
addl
in
push
daa
mov
push
js
mov
pushf
or
imul
mov
xchg
add
jbe
push
fcompl
popf
dec
pop
jnp
push
sub
sahf
add
fsts
outsl
test
or
rolb
in
fimull
nop
out
pop
in
std
mov
seto
adcl
push
xorb
jle
lea
inc
movsl
dec
sub
push
call
std
scas
mov
pop
jle
mov
out
pop
mov
push
or
cwtl
or
pop
inc
imul
aam
fisttpll
and
cli
push
mov
mov
sbb
sbb
insb
inc
fs
xchg
push
data16
pop
push
xchg
outsb
nop
mov
in
mov
inc
ret
xlat
out
insb
mov
stc
push
out
lds
fdivrs
fsubrl
ss
mov
push
mov
mov
stos
cli
dec
ret
mov
or
rclb
repnz
ret
out
sbb
mov
xor
mov
sti
dec
cltd
jmp
xchg
push
cmp
mov
cmp
lahf
adc
imul
adc
adcl
push
push
mov
push
pop
xchg
mov
and
lds
sbb
cmpl
in
pop
mov
add
orl
and
repz
jno
js
ret
push
xchg
test
mov
ret
bound
into
daa
lods
punpckldq
fisubrs
les
cmpb
jb
mov
popl
jbe
inc
push
stos
sbb
inc
jp
mov
inc
jp
stos
push
or
jns
daa
or
ljmp
aaa
cmp
lock
sbb
jbe
sbb
and
or
add
decb
jmp
fwait
icebp
gs
insl
push
loope
ljmp
pop
or
lret
gs
out
leave
loop
mov
call
into
shll
movsl
rcll
cmp
jp
outsl
xor
cmpsb
dec
sbb
insl
mov
jns
adc
push
dec
ss
and
add
jno
ds
cmp
stos
movnti
cmpl
xor
push
shlb
add
outsl
dec
mov
outsl
push
xchg
mov
cwtl
test
ja
ja
xchg
add
jb
inc
pop
or
cmc
add
es
adc
pop
imul
and
sti
cmp
mov
pushf
cmp
movl
pop
dec
push
cmpsl
and
rcll
test
sarb
mov
mov
or
inc
stos
jp
outsb
rolb
popa
push
icebp
mov
xor
test
jg
pop
divps
inc
mov
jecxz
mov
xchg
jo
rcr
ja
int
ret
lock
cmp
cli
stc
lock
daa
xorb
pop
jnp
jge
cmp
xor
or
inc
sbb
mov
pop
or
cmc
push
mov
push
adc
pop
nop
add
push
pop
dec
rcr
jge
icebp
cmp
mov
mov
push
loopne
cmp
push
sub
pop
sub
sbbl
adc
insb
dec
ret
sbb
pop
roll
sbb
push
jmp
xor
out
cwtl
sub
sahf
shlb
pop
adc
add
std
adc
mov
outsb
sbb
mov
bound
rcll
sbbl
pop
sub
mov
add
xchg
gs
mov
in
inc
pop
popf
aad
fldenv
mov
mov
sub
fdivrp
ljmp
addr16
stc
xor
add
lods
and
mov
shll
jns
push
xchg
ret
sbb
sti
and
mov
pop
or
and
xorb
jle
add
cmpsb
push
pop
jp
adc
mov
push
lds
repnz
sbb
das
mov
and
push
popf
sbb
cmpsb
js
icebp
inc
in
mov
out
push
ds
adc
in
data16
mov
jnp
stc
xor
mov
insl
icebp
test
fs
adc
cmpsl
popf
mov
adc
dec
idivl
lods
xchg
pop
icebp
cmp
add
test
jge
pop
ret
mov
xor
cmp
mov
cmp
xchg
movsb
ret
movsl
mulps
xchg
test
fwait
jp
mov
dec
pusha
in
rcrl
enter
mov
inc
or
lods
pop
mov
mov
int3
daa
insb
sahf
shll
dec
add
or
pop
cmp
add
xor
ret
sbb
adc
xchg
dec
xchg
pop
stos
popf
dec
lods
or
stos
mov
rolb
pop
mov
imul
ret
adc
xlat
dec
add
adc
push
sahf
out
data16
xchg
mov
xchg
xchg
adc
fs
sbb
or
movsl
inc
xor
mov
rorl
ljmp
jb
lock
popf
dec
add
insb
test
mull
out
cwtl
divl
cmp
ds
in
mov
std
les
and
jp
mov
xlat
sarl
aad
push
fcompl
sbb
in
fistps
add
mov
pop
sahf
xchg
cltd
push
ret
call
subb
push
mov
decl
dec
cmp
inc
cs
notl
cmc
ja
mov
clc
aad
push
ror
xchg
fidivs
mov
stc
mov
mov
fldl
add
es
or
pop
cmp
jns
pop
jecxz
cmp
lock
or
push
inc
ret
pop
sub
xor
push
lds
xor
aaa
push
or
dec
out
les
mov
dec
loop
test
mov
cmp
push
xchg
imul
mov
add
and
xor
aam
sti
mov
sbb
xor
insb
xor
sbb
push
ljmp
pop
call
inc
movl
xchg
leave
mov
add
push
scas
sbb
cltd
sahf
sbb
mov
push
jno
mov
flds
mov
sbb
adc
or
adc
orl
push
adc
hlt
pop
mov
lds
subl
shlb
insb
add
cmc
or
inc
push
aad
aam
adc
adc
or
add
sahf
or
stos
push
ret
lea
mov
adc
mov
cmc
sub
jecxz
cmpsb
dec
add
ss
lret
push
mov
sahf
add
das
ja
mov
data16
mov
scas
div
cld
inc
sbb
pushf
mov
test
sub
or
xor
pop
push
sarl
push
into
mov
dec
pushw
popa
mov
jo
sbb
clc
test
jle
daa
ja
jg
in
gs
mov
mov
xchg
sbb
mov
lret
push
movsl
adcb
jbe
cwtl
push
add
popf
push
lea
jnp
das
mov
jno
frstor
dec
adc
cmp
pop
mov
nop
or
sub
inc
pop
mov
dec
pop
outsl
dec
xor
jp
dec
jns
sbb
int
or
test
inc
mov
cli
add
jmp
cmp
mov
iret
mov
lret
inc
je
imul
into
or
pop
add
cld
jns
mov
adc
xchg
dec
popf
push
and
ret
arpl
mov
call
lods
hlt
xorl
sub
xchg
add
dec
out
fwait
mov
cmc
mov
dec
sbb
dec
and
mov
push
or
orl
mov
scas
je
mov
movl
xchg
dec
adc
add
pop
add
mov
stc
mov
and
mov
cli
int
loop
mov
push
fucomip
int3
cmpsb
sbb
fwait
icebp
btc
mov
adc
mov
int
ss
sub
popf
push
movb
lcall
je
stos
push
jno
movsl
mov
lret
aaa
pushf
or
cmc
fcmovbe
pop
in
sub
ljmp
data16
negb
dec
mov
adc
mov
testb
loop
stc
imul
sbb
or
test
ss
mov
int3
popf
cltd
push
aaa
sub
push
shlb
out
aaa
mov
dec
ret
inc
ljmp
or
mov
jae
les
cmp
inc
in
xchg
ficoml
nop
adc
imul
data16
jno
mov
int3
fs
dec
cwtl
sub
mov
fistl
lret
aas
inc
mov
adc
add
add
loop
add
pop
mov
or
push
in
loop
add
or
fadd
lock
jmp
jns
fsubs
inc
es
jnp
inc
dec
dec
add
jecxz
jne
lock
mov
pop
or
xchg
adc
cli
sbb
cmpsl
adc
leave
hlt
mov
mov
pop
inc
cmpsb
jmp
cld
popa
or
dec
mov
xlat
sbb
sub
jecxz
sub
or
sbb
adc
and
dec
repz
stos
aaa
ficoml
sbb
mov
stc
push
add
dec
jns
push
gs
ljmp
mov
sbb
sbb
lahf
mov
stos
push
and
cwtl
idivl
add
gs
and
xchg
push
pop
push
in
add
push
xor
scas
pop
insl
nop
and
gs
ljmp
sub
gs
pop
xchg
testb
fmull
cld
push
inc
sbb
inc
adc
jae
sbb
push
in
sti
or
repnz
mov
jo
mov
push
testl
xchg
js
sti
out
mov
ss
ja
jbe
aaa
popa
test
and
les
rcl
xchg
xchg
pop
mov
mov
rcrl
dec
sbb
cmp
ficomps
mov
dec
je
cmc
mov
mov
lahf
adc
gs
in
push
fld
ss
lcall
mov
imul
loopne
dec
push
adc
or
inc
aad
inc
mov
out
mov
stos
je
mov
inc
sbb
add
fwait
sub
push
push
mov
mov
leave
in
push
sbb
cmpsb
out
mov
push
xor
negl
dec
push
and
cmp
adc
sbb
loop
jne
adc
loop
rcrb
pop
dec
xchg
or
stos
pusha
lock
xchg
push
cmc
or
jns
lock
icebp
sub
shll
test
adc
testl
mov
pop
int
mov
arpl
gs
push
add
xchg
ss
sbb
mov
sub
cmp
or
xchg
jne
fcmovne
push
and
adc
jg
and
and
and
data16
into
rcr
arpl
clc
mov
pop
sub
push
add
sbb
lods
sub
mov
xchg
out
adc
mov
add
stos
pop
push
mov
ret
and
ror
pop
inc
ja
sbbb
adc
inc
sbb
dec
push
sbb
cmpsb
mov
fwait
mov
aaa
xor
mov
xor
mov
loop
push
int3
stc
push
sbb
push
in
cwtl
push
nop
adc
sbb
mov
imull
cmp
and
mov
sbb
dec
andl
pop
es
in
cmc
aad
pop
mov
pop
push
mov
dec
push
adc
and
jne
stos
loope
and
in
mulb
or
int3
es
shlb
sti
push
pop
mov
dec
push
aad
fildl
fdivrs
adc
inc
dec
and
and
inc
sub
push
in
sub
addb
or
out
inc
mov
data16
sbbb
jbe
or
jg
cmp
imul
adc
sub
xor
adc
adc
enter
repnz
sub
leave
ss
imul
bound
push
test
jl
into
sbb
mov
gs
xchg
fbld
fcompl
fisubrs
lcall
out
test
shrl
lock
test
shrl
stos
fcomps
out
sbb
add
or
inc
scas
add
notl
pop
filds
fchs
stos
dec
mov
imul
aaa
push
lcall
fadds
push
inc
addr16
stos
arpl
aas
or
addb
pop
sub
addb
push
xor
sbb
xor
js
and
cltd
jl
out
mov
pop
pop
es
lcall
push
adc
imul
or
aad
mov
pop
dec
adc
lds
adc
rcrl
insb
stc
or
loop
addl
push
dec
xchg
push
sbb
xchg
inc
pushf
inc
mov
mov
jbe
mov
stos
xor
lahf
lret
jne
fs
push
xchg
mov
add
add
fidivs
jg
sub
jg
xlat
sahf
push
mov
sbb
in
inc
adc
and
mov
xchg
aam
jne
mov
push
xor
movsl
jmp
in
dec
stos
filds
subl
cmc
ret
out
jbe
or
xchg
adcb
outsb
cli
sub
inc
or
xchg
jle
inc
test
xchg
jecxz
pushf
add
inc
mov
sbb
mov
cwtl
push
mov
or
ss
sahf
jp
mov
push
cmpsl
loope
cmpsb
test
add
imul
cmpsb
cmpsb
mov
out
lods
rolb
and
add
fsubrl
arpl
out
int3
lds
push
andb
or
jp
dec
mov
cltd
loop
add
mov
lea
pop
fucom
dec
mov
mov
xor
mov
stc
adcl
and
mov
sbb
andb
jnp
jle
pop
in
popa
inc
push
out
cli
sub
mov
sbb
cli
mov
add
jle
inc
aad
ss
icebp
jnp
mov
out
cmp
mov
add
dec
lods
push
push
and
sub
imul
xchg
test
sbb
jp
enter
fistpl
fldt
or
rcrb
or
adc
sub
je
adc
add
push
add
sub
mov
inc
cwtl
out
push
fmuls
xchg
xchg
sti
inc
enter
xchg
stos
in
mov
hlt
sbb
fcomi
ss
pop
push
or
jle
xchg
fs
nop
sbb
fwait
pushaw
and
xchg
mov
mov
mov
xchg
cmp
mov
mov
lcall
or
push
or
adc
adc
sub
jae
pushf
lds
sbb
out
mov
rorl
and
xchg
int
push
popa
xchg
dec
cli
roll
mov
xchg
cmpb
mov
popa
xchg
popf
sub
in
dec
inc
sbb
mov
cli
int
cmp
mov
pop
dec
pop
ret
push
xor
inc
testb
pop
pop
jb
push
inc
sub
mov
cmp
mov
scas
data16
addl
jmp
adc
adc
lcall
cmp
push
mov
lret
xchg
mov
sub
jmp
pop
fcomps
idiv
sub
or
mov
xchg
lcall
aaa
subl
push
lods
or
andb
mov
pop
test
or
cltd
shl
pop
sahf
jecxz
inc
jmp
push
scas
add
lods
cltd
cmp
inc
in
cmc
jmp
add
cmpsl
pop
push
add
jmp
push
and
loopne
mov
mov
fsub
mov
push
mov
inc
dec
dec
ss
je
xor
jmp
pop
les
jecxz
sar
push
dec
pop
xor
icebp
je
pushf
inc
pop
and
mov
lea
test
popa
mov
orl
xor
es
mov
std
dec
stos
fisubrl
xor
cmp
in
mov
mov
inc
pop
sahf
and
cmp
mov
pusha
rcrb
rol
nop
jbe
mov
lcall
jns
push
out
cs
insl
push
mov
das
dec
clc
cwtl
mov
rcl
jp
sbb
aaa
add
jmp
inc
test
pop
pop
loopne
and
popa
xlat
adc
sub
mov
int3
pop
push
mov
pop
rorl
test
shll
inc
popa
hlt
push
jnp
mov
cmp
mov
jno
mov
add
stc
cs
int3
add
sbb
and
cmp
fdivrs
push
sahf
in
fs
add
das
popf
adc
mov
adcl
mov
pop
bound
xorb
je
mov
in
xchg
jle
dec
mov
imul
mov
pop
adc
xor
jne
lods
pop
test
insl
dec
ss
sub
xchg
mov
repz
or
imul
sub
mov
rclb
or
adc
into
popa
test
jne
bound
xor
pop
sub
faddl
icebp
scas
jl
hlt
inc
repnz
jmp
aad
or
imul
jne
xor
xchg
scas
sti
fisubrl
sbb
cmpsb
jns
mov
fwait
inc
nop
jnp
jno
repnz
mov
inc
adc
push
aaa
movl
fcomip
div
test
mov
popf
lea
xorl
jmp
addr16
push
xor
enter
add
fildl
or
sub
adc
push
adc
orl
cs
clc
adc
mull
pop
inc
add
inc
std
xchg
bound
and
xchg
inc
test
inc
mov
sbb
pop
sub
insb
shl
jo
les
ret
pop
loopne
mov
push
lods
clc
mov
hlt
xlat
pusha
cmpsb
jle
sbb
pop
data16
es
pushf
roll
and
sbb
or
jo
mov
pop
pusha
std
inc
add
lds
insl
sahf
mov
scas
leave
sbb
cli
movsb
lods
adc
push
adc
xor
daa
mov
inc
out
sbb
mov
out
inc
or
fbstp
or
fcomps
ja
aas
jmp
shlb
xor
test
sbb
jecxz
faddl
cmp
fdivr
sub
dec
cmp
addb
pop
cmc
inc
in
lret
fisubs
sahf
sbb
je
or
out
cli
test
pop
lcall
sub
negl
adc
inc
loop
popa
or
std
lock
xchg
mov
and
cmc
test
fidivs
outsb
gs
loope
inc
int3
pop
jl
mov
mov
cmp
icebp
fwait
sub
repz
mov
pop
mov
sub
nop
stos
outsb
sub
into
jae
add
inc
lock
and
pop
jbe
pop
loopne
outsb
movsl
test
or
sub
mov
lds
jne
pop
mov
and
adc
sub
cli
inc
jbe
call
mov
inc
xor
cltd
push
xor
jmp
imul
fadds
into
or
xchg
adc
loop
das
hlt
xor
pop
xor
pop
jo
lods
in
std
mov
dec
xor
xor
insb
pop
sti
fldcw
sub
push
aam
fwait
push
adc
daa
fcoms
and
aas
cwtl
inc
xchg
or
push
ss
lret
pop
jge
int
push
xchg
xchg
sahf
xchg
out
pop
in
ja
jne
ljmp
test
lods
fildll
testl
ficompl
add
inc
pop
stos
les
and
ss
dec
fisttps
nop
lahf
sbb
xchg
aad
add
out
roll
addb
data16
inc
sbb
inc
add
incl
aaa
jecxz
dec
std
push
or
in
xor
andl
insb
jmp
sbb
add
cmp
lea
mov
jecxz
push
out
shrb
xor
mov
sbb
out
test
cmc
push
stos
mov
xchg
pusha
imull
inc
dec
sahf
mov
push
pop
dec
in
sahf
enter
sub
in
insb
mov
pop
push
lret
cmp
test
sbb
mov
add
sub
insb
push
test
mov
xor
mov
pop
push
mov
std
loop
xchg
mov
mov
andb
fsub
das
mov
ret
push
shll
mov
jno
mov
int
mov
in
jne
add
pop
xchg
fs
popa
jp
mov
notb
inc
xchg
add
sub
int
rcrl
test
push
or
cmp
jb
int
push
push
xchg
out
add
sti
outsl
bound
sbb
cvtps2pd
stos
xchg
mov
jle
push
and
push
lods
lock
orb
cmp
mov
inc
ds
push
icebp
inc
inc
pop
test
repnz
pop
gs
xor
pop
pop
stc
adcb
xchg
sbb
lods
pop
lds
leave
mov
stos
in
inc
inc
jp
pop
sub
mov
jp
hlt
sbb
adc
fdivrl
ja
repnz
push
aad
xchg
or
out
aam
pop
xchg
repnz
sbb
sub
mov
jnp
std
adc
movsb
push
sbb
xchg
add
push
mov
mov
sub
or
stc
test
adc
cmp
stc
cli
or
and
jmp
mov
dec
jbe
lahf
jb
pushf
and
clc
dec
mov
nop
aam
arpl
mov
mov
or
leave
pop
add
mov
adc
xchg
push
push
or
fiadds
test
push
xor
es
daa
cwtl
or
jp
sbb
jg
sbb
jnp
lock
push
jl
ss
popf
cmp
mov
sub
cmpsb
movsl
out
xchg
movsb
mov
mov
aaa
xchg
imul
mov
idiv
aas
ds
hlt
dec
cmc
push
fcomps
jp
movsb
push
inc
rclb
fs
jl
push
mov
jnp
pop
ret
arpl
and
push
mov
dec
nopl
scas
add
fdivrs
xchg
movsb
cmc
idivl
roll
add
mov
je
jbe
leave
jp
mov
mov
popf
xchg
out
sbb
sar
add
pop
xorl
mov
push
ds
fstp
sub
mov
shll
inc
pop
outsl
mov
insb
into
call
push
shrb
pop
repz
int3
testb
in
mov
les
and
icebp
in
or
sbb
push
push
js
cmp
bound
call
xchg
sahf
repz
movb
jp
mov
jo
pusha
push
jg
aaa
in
mov
in
pusha
cmpsb
fs
pop
fucomi
ja
xchg
add
xchg
clc
dec
lret
ret
popa
lahf
pop
xchg
pop
test
cmpsl
sbb
leave
xchg
adcb
cmc
lods
pop
mov
mov
sub
sub
sbb
and
mov
mov
mov
outsl
mul
je
stos
leave
leave
inc
arpl
icebp
mov
mov
jle
gs
jg
loope
cmp
push
and
addl
adcl
jg
adc
fdiv
inc
iret
outsb
fmull
out
adcl
inc
es
or
mov
add
or
sub
iret
dec
jp
inc
cltd
fcoml
sbb
mov
addb
cmp
inc
test
mov
call
inc
in
sbb
lret
inc
out
xchg
xchg
lods
inc
fwait
dec
sbb
xchg
or
aaa
imul
push
fs
pushf
sbb
sbb
sub
popa
lods
jns
adc
pop
lcall
or
repnz
push
xchg
repnz
scas
or
cmp
xchg
popa
and
fsubs
or
and
mov
into
xchg
mov
out
gs
sarb
scas
push
inc
xor
cmp
in
dec
lcall
mov
add
push
adc
pop
dec
dec
pop
mov
mov
sbb
jbe
mov
jecxz
aad
outsl
jl
bound
imul
mov
mov
mov
int3
push
pop
dec
pop
jnp
inc
dec
xchg
in
insl
ficompl
mov
rcll
arpl
test
mov
and
out
inc
ljmp
mov
daa
cmc
or
xor
imul
dec
inc
inc
mov
sbb
sub
ret
leave
sarl
xor
xor
and
push
inc
cs
push
push
cmp
pop
pop
je
mov
dec
scas
pop
dec
mov
sub
sbb
sub
add
pop
fildll
inc
xchg
fidivl
xlat
lcall
pop
sbb
popf
les
and
lret
sbb
popf
lods
enter
test
xchg
jmp
add
cpuid
dec
shl
jb
outsl
scas
or
cmp
push
inc
loope
lea
orl
jnp
rol
pop
add
aad
inc
int
jno
sbb
lds
fcompl
lret
mov
cli
addr16
mov
sub
les
sbb
sbb
inc
mov
pop
sub
cmp
int3
sbb
pop
pop
pop
test
popf
fcmovbe
dec
pop
sti
cwtl
sbb
subps
mov
pusha
test
outsl
or
sbb
stos
lret
out
sbb
jno
mov
sub
fcoml
push
jmp
adc
test
std
ret
xor
lahf
in
movsb
cmp
cmp
and
inc
hlt
shll
mov
or
mov
lods
test
pop
xchg
in
and
test
mov
bound
rorl
js
fdivrl
jno
cli
push
push
sub
lods
push
fwait
cmpsl
dec
insl
fsubs
insb
pop
push
xchg
aaa
cmp
mov
scas
fucomi
icebp
inc
add
jbe
nop
imul
jecxz
andl
cmc
pop
ret
jns
in
mov
adc
xor
inc
and
in
mov
pop
mov
ret
in
xchg
pop
xor
es
les
xor
lret
sub
sbb
aaa
aam
jns
mov
or
add
push
jo
punpcklwd
incb
cmpsl
inc
mov
sbb
pop
sub
incb
cmp
xor
push
pop
add
push
lea
sahf
inc
jno
inc
cwtl
iret
or
jmp
mov
mov
fwait
cltd
dec
mov
aas
ja
add
negb
dec
xor
xchg
push
push
leave
dec
add
cmc
aaa
jp
jb
and
or
stc
popf
test
fwait
adc
cmpsl
aad
fimull
outsb
pop
jae
adc
aam
mov
sbb
mov
push
or
leave
pop
mov
push
jg
mov
pop
mov
shll
fdivl
pusha
stc
xor
or
inc
push
sbb
pop
cmp
stos
jg
cmp
jns
sbbl
sub
mov
lock
xor
mov
jbe
out
add
stos
dec
push
pop
in
mov
mov
adc
rclb
jg
cwtl
addr16
into
scas
push
dec
push
push
xor
sbb
or
arpl
sahf
inc
stc
mov
xchg
sbb
pop
je
inc
das
mov
outsb
mov
dec
fmul
push
test
shrb
sub
cmp
out
dec
sbb
sub
dec
sbb
mov
in
mov
ret
jp
add
int
xor
inc
iret
jl
jmp
scas
addb
push
push
add
adc
cmpsb
clc
jg
and
add
popf
push
cwtl
mov
movl
outsl
out
push
inc
std
repz
pop
mov
lock
imul
xchg
shlb
jle
sbb
cs
mulb
pop
pop
aam
cmpsl
sub
push
sbb
popf
das
sub
addb
adc
icebp
ret
sbb
rolb
mov
mov
cli
sbb
icebp
clc
and
or
inc
dec
insb
sbbl
insb
arpl
add
inc
push
inc
or
jmp
subb
insb
or
cs
addr16
inc
mov
inc
sub
add
push
mov
inc
cmp
test
sbb
imul
mov
sbb
sbb
jl
scas
cmpsb
out
lock
mov
or
xlat
adc
push
movhps
add
stc
das
jbe
ret
stos
mov
aam
cli
sbb
aad
sbb
int3
addr16
mov
aas
into
dec
pop
jmp
out
bound
sub
cmc
inc
xchg
test
jp
sub
ds
fstl
xor
icebp
pop
sbb
sub
fistps
or
xchg
les
arpl
mov
jecxz
mov
stos
rcll
fnstenv
push
icebp
fdivrl
cmp
fsubrl
sbb
mov
rorl
sbb
pop
sarl
cmp
adc
andb
xchg
out
or
test
adc
ret
test
dec
or
sub
mov
mov
xor
mov
outsb
or
cmc
cmpsb
adc
out
jecxz
xchg
xor
add
sbb
roll
enter
js
bound
mov
lods
out
into
pop
aam
add
jns
inc
lret
inc
lea
or
aaa
out
pop
mov
jbe
cmpsb
pop
insl
cmpsb
and
icebp
inc
ja
mov
mov
stc
pop
lock
mov
fildll
xchg
lock
cmpsl
sbb
aaa
mov
mov
arpl
add
jns
dec
push
cmp
and
iret
mov
xchg
loop
arpl
add
rcll
mov
or
add
push
xchg
aas
xchg
stc
adc
cmp
in
and
call
addr16
mov
xlat
stos
inc
aas
jp,pn
sbb
repz
rcrb
out
das
pop
imul
or
mov
xchg
push
lods
mov
jge
idiv
add
mov
and
sbb
rcrb
orb
das
ficoml
stos
icebp
scas
pop
scas
les
push
push
dec
push
aas
dec
xchg
mov
jg
or
mov
imul
pushf
loop
sub
and
jno
pop
mov
aaa
xor
push
dec
jbe
fidivrs
add
aad
or
hlt
lea
sbb
jbe
rol
pop
mov
in
pop
inc
push
adc
mov
subl
mov
out
addl
sbb
dec
imul
negb
pop
adc
stos
lahf
mov
aam
mov
jl
imul
push
leave
push
sub
addr16
dec
pop
inc
jns
pop
mov
lahf
in
sahf
in
and
mov
bound
and
mov
add
ds
frstor
dec
sub
push
adc
add
mov
lods
rclb
mov
add
fwait
rorb
hlt
aaa
ficompl
imul
shl
hlt
shl
rcrl
mov
mov
imul
mov
cmpl
test
add
in
fidivrl
imul
mov
daa
adc
dec
xchg
pop
pop
or
andl
fwait
popf
ja
xor
movsb
out
shrl
cmpsb
fwait
shrl
out
sub
int3
jb
dec
rcrl
mov
sub
cmp
inc
shrb
lcall
sub
mov
cmpsl
pushf
int
rcrl
pop
mov
add
sbb
pusha
in
xor
pop
rol
xchg
push
or
sti
push
and
mov
std
jne
pop
mov
push
je
dec
popa
pusha
push
in
dec
pop
dec
xrelease
pop
push
cwtl
mov
sbb
insb
adc
add
mov
sti
nop
jns
xchg
rcl
aam
daa
out
loope
ret
pushf
dec
pop
sbb
xchg
xchg
scas
mov
mov
int3
aam
cmp
jmp
jle
mov
or
xor
mov
mov
or
cs
addb
jne
insb
add
push
sbb
fwait
sbb
test
mov
dec
add
testl
outsb
sub
xchg
shll
dec
aaa
sbb
adcl
test
hlt
push
dec
adcl
xchg
ljmp
adcl
mov
inc
inc
insb
add
lcall
xor
cmpsl
jno
test
insb
popa
in
inc
sbb
adc
dec
stos
add
loop
out
jge
addl
adc
mov
xor
push
dec
adc
movsl
test
dec
jo
pusha
push
adc
sbb
push
lret
nop
fs
hlt
outsb
cmpsb
dec
xchg
sub
and
jno
loope
leave
mov
xor
adc
ss
call
and
xor
sbb
lcall
pop
out
mov
frstor
test
bound
cmc
call
pop
cwtl
repz
pop
xor
js
in
lcall
dec
stos
push
mov
lret
dec
pop
pop
aaa
sub
jno
nop
mov
scas
or
sti
int
pushf
dec
sbb
inc
pop
mov
sub
in
add
pop
push
jae
dec
jmp
and
lock
xchg
add
insb
fisubrl
popf
push
push
push
inc
out
icebp
jecxz
addl
jg
out
fwait
iret
sbb
cmp
sub
dec
adc
dec
xor
test
mov
jne
push
movsl
mov
pop
test
mov
pop
in
imul
shlb
scas
daa
pop
addl
push
xor
out
lret
pusha
dec
sbb
and
sbb
nop
mov
pop
fwait
xor
lahf
and
xor
call
fidivs
mov
push
sbb
loope
arpl
inc
push
sbb
fadds
sbb
call
push
sub
mov
sbbl
xor
cmp
xchg
lcall
pusha
dec
les
popa
adc
sbbb
in
fnstenv
push
push
and
cmp
into
and
xor
cs
pop
and
cmc
adc
cltd
mov
push
pusha
test
mov
push
sbbb
in
iret
and
popa
and
mov
sbb
scas
lret
cmp
dec
ljmp
stos
or
dec
gs
out
mov
je
out
xor
movsl
fidivrs
push
push
mov
cmp
sbb
test
and
push
addl
les
fs
cld
push
loopne
out
mov
lret
or
and
ja
add
xchg
data16
dec
in
vunpcklps
inc
aad
jbe
aam
adc
add
cmc
xorb
enter
inc
sbb
pop
call
aaa
mov
mov
add
or
inc
leave
adc
push
lcall
mov
aad
adc
mov
xor
testb
jb
movb
scas
mov
stos
nop
negl
js
shrb
or
cmc
addb
inc
mov
enter
ljmp
int3
imul
fld
enter
test
sti
or
adc
push
sub
push
int
or
aam
neg
push
sbb
push
fstps
xor
push
ja
xor
imul
shl
or
gs
and
lds
push
sbb
pop
imul
or
lock
std
mov
adc
orb
fs
cwtl
in
pop
adc
mov
lock
cld
xchg
divl
fisubrs
ds
fdivrl
mov
sbb
clc
je
xlat
loope
lret
jae
fistps
rcl
push
cmc
inc
mov
add
test
push
mov
int
dec
cmp
jb
fdivrs
stos
and
cmp
test
pop
sahf
jle
pop
sub
sbb
je
andb
sbb
cs
or
test
scas
jnp
test
add
dec
adc
dec
shrl
sbb
sub
cmp
in
cmp
mov
cld
dec
mov
popf
sub
push
dec
ljmp
mov
push
cmpsb
xchg
pop
xchg
ss
xlat
mov
add
inc
sbb
push
mov
cmp
push
clc
mov
mov
pop
fnsave
test
mov
test
mov
lcall
test
sub
mov
inc
cmp
mov
popf
lods
in
test
push
in
dec
jmp
lret
cs
ret
inc
xor
dec
arpl
pop
cltd
inc
xor
jmp
mov
popa
testb
inc
and
xor
pushf
cmc
test
jo
or
mov
dec
test
jge
push
and
mov
pop
dec
push
das
inc
xchg
push
dec
xchg
fcmovbe
jo
jp
sub
adc
pop
scas
lock
and
out
mov
lret
xorl
cmp
lds
jp
xchg
negl
jb
mov
xor
fildl
inc
bound
test
enter
mov
sbb
add
xor
iret
mov
pop
fs
add
outsl
lcall
arpl
jp
or
pop
insl
lds
push
das
fwait
add
sbb
jmp
stos
repnz
fcomp
stc
nop
loopne
inc
inc
and
xor
cltd
jo
adc
add
xor
fisubrl
lds
push
in
mov
popf
pop
mov
incb
mov
pusha
push
cli
pushf
inc
sahf
add
aam
jno
xchg
mov
mov
and
test
test
icebp
xchg
jge
xchg
mov
cmpsl
and
sbb
call
subl
dec
sub
mov
pop
cvtdq2ps
sub
adc
stos
fsubrs
loop
sahf
push
xchg
aaa
sub
fwait
stc
jbe
or
das
gs
dec
cmp
rorl
popl
gs
test
sbb
leave
fwait
push
xorb
sbb
mov
lahf
leave
sbb
les
dec
stos
adc
scas
into
shll
pushf
inc
popf
movsb
bound
pop
fs
sahf
dec
cmp
imul
jne
cmpsb
pop
nop
mov
imul
sbb
addb
out
push
cmc
std
cmpl
daa
mov
push
aam
enter
testl
popf
lret
sbb
arpl
jnp
jnp
pop
or
xchg
int
lret
xor
in
xchg
mov
mov
and
adc
jg
test
inc
mov
data16
inc
pop
loopne
xchg
xchg
jecxz
jbe
lds
imul
or
dec
add
lahf
sbb
aas
mov
into
jmp
pop
add
jecxz
icebp
data16
lahf
fwait
ret
or
sub
push
xchg
sbb
add
sbb
incl
ucomiss
jp
or
leave
add
or
jl
inc
in
jle
push
shlb
xor
add
insl
lret
data16
push
adc
xchg
inc
add
push
pop
sbb
cmp
sbb
lods
hlt
inc
inc
pop
mov
or
sbb
imul
add
push
pop
ljmp
gs
movsl
pop
fildl
stos
adc
lods
fisubrs
in
roll
fistpll
icebp
xchg
push
pop
shlb
add
push
mov
les
add
inc
mov
mov
popa
lods
daa
dec
popa
push
in
pop
pop
test
cmp
sarb
das
nop
ficoml
adc
inc
push
xchg
mov
pop
pop
push
add
daa
jl
xchg
pop
add
aaa
add
push
jp
aaa
pop
arpl
sub
jg
push
cmp
cmpsl
bound
enter
cmpsl
cmp
pushf
je
icebp
mov
or
xchg
jns
dec
loope
fisttpl
dec
add
inc
fildll
sahf
sub
push
insb
movsb
jns
mov
sbb
pop
jne
sub
push
pop
jge
repnz
xchg
push
roll
push
lods
scas
push
inc
inc
mov
mov
ret
ss
add
addr16
mov
dec
adc
stos
fcomps
rcrl
fsubr
enter
out
mov
cmpsb
insb
cmp
adc
push
pushf
push
rol
add
in
adc
and
enter
int3
adc
sbb
pop
mov
loope
push
adc
ret
scas
hlt
inc
fdivrl
in
inc
or
dec
mov
mov
outsb
jecxz
xchg
push
or
aas
fisttpll
cmp
in
js
test
lods
push
jg
int
rol
fcoms
lods
rcl
add
jmp
andb
dec
decb
das
pop
xchg
mov
adc
add
mov
mov
jnp
push
inc
cmpsb
push
xor
adc
add
sbb
pop
fisttpl
mov
sarl
enter
icebp
sbb
shlb
ret
loope
out
push
xchg
rcrl
out
mov
push
std
and
insb
out
push
sbb
add
lods
mov
sbb
mov
lods
inc
nop
sub
in
fidivrl
fsubrs
xchg
cmp
add
pop
shll
push
push
jbe
addl
xchg
mov
addl
or
xor
sbb
and
push
popa
sub
data16
filds
inc
ret
repz
xchg
jno
loope
loop
ret
pop
stos
mov
pushf
dec
js
mov
fmuls
push
push
js
incl
or
int3
add
rcrl
cmp
sbbl
arpl
dec
xor
jbe
cmpsb
sbb
mov
fnsave
push
lcall
pop
sahf
idiv
inc
leave
decb
push
mov
inc
leave
jns
mov
push
dec
cmp
divb
jo
add
xor
jnp
gs
xor
pop
mov
aad
rcr
repz
test
cli
inc
idivb
mov
xchg
aas
sbb
mov
dec
jmp
sbb
pop
insb
dec
pusha
sub
gs
insl
mov
mov
add
push
jp
sub
shr
shlb
lods
lods
addb
inc
lods
out
push
nop
inc
stos
sub
pushf
xchg
mov
ret
sbb
repnz
insb
sahf
dec
stos
les
push
imul
movsb
popa
sub
sbb
in
pop
and
mov
sbb
hlt
mov
pushf
xchg
or
nop
pop
jl
dec
enter
test
xor
lds
inc
gs
nop
xchg
test
loopne
imul
adc
cmp
xchg
or
lret
xor
in
insl
fwait
jge
int3
and
in
push
or
or
jp
stos
lock
int3
shlb
xchg
scas
and
cmp
loope
popa
push
xchg
lds
out
aam
pop
sbb
mov
adc
xor
ss
jmp
sbbl
sbb
imul
rcrl
outsb
lds
push
sub
testb
add
push
andl
and
sub
ret
inc
push
add
rorl
int
ja
inc
ljmp
pop
mov
rol
xor
adc
ret
pop
dec
ficoml
nop
jecxz
mov
or
mov
in
pusha
push
lret
pop
faddl
dec
adc
or
orl
out
stos
mov
pop
mov
imul
sub
ds
mov
jno
lods
shll
push
dec
or
xchg
outsb
mov
mov
add
add
repz
pop
pop
push
stc
push
xchg
shll
cmp
xor
xchg
sbb
inc
daa
pop
out
lock
jge
or
mov
jl
sbb
aaa
xchg
addb
popf
dec
aas
push
fwait
inc
sub
mov
les
push
into
imul
add
sub
push
repnz
aas
rorl
xorl
sbb
shrl
or
outsl
dec
push
imul
repz
std
ret
push
mov
jge
and
mov
mov
xchg
sbb
insl
addb
cmc
cli
jl
movsb
xchg
mov
popl
xchg
aad
add
mov
xor
adcb
inc
in
jecxz
das
push
jle
in
pop
xor
mov
shll
push
mov
inc
scas
lea
fldl
xor
cmpsb
sbb
push
push
adc
or
movsb
shll
pop
lcall
jns
dec
jle
cmp
aaa
lea
out
les
loopne
push
jg
adc
add
ss
in
inc
das
in
mov
in
repz
shrb
jmp
movsb
mov
add
ljmp
xchg
jnp
imul
ja
xor
insl
or
jbe
aad
xchg
cmc
mov
in
add
xchg
sbb
stos
push
test
rol
push
or
jle
and
push
push
out
int3
mov
pusha
jbe
pop
movsl
gs
arpl
mov
es
mov
aas
xchg
push
or
xor
inc
leave
stos
mov
pop
clc
popf
dec
out
adc
jnp
mov
loope
push
mov
pop
push
loop
dec
aam
aad
sbb
push
mov
cmpl
xchg
sub
pop
mov
mov
jne
or
popa
and
inc
shrl
adc
imul
sbb
sub
fwait
mov
imul
dec
sbb
mov
cmp
xchg
or
mov
or
dec
cmpsb
xor
jmp
pop
mov
into
std
shlb
mov
push
jmp
stos
lcall
mov
out
mov
sub
pop
adc
outsl
sub
xchg
stos
movl
pop
pop
or
div
dec
cmpsl
and
or
cmp
lea
rcrl
push
xchg
cwtl
repz
je
and
ror
mov
lods
in
pop
ffree
leave
invd
push
mov
push
cmp
addr16
shrb
ljmp
lret
vpunpcklwd
pop
pop
inc
push
cmp
fimull
addl
xchg
xchg
xor
decl
or
mov
adc
mov
jnp
loopne
cli
inc
pusha
test
je
sahf
mov
gs
sub
add
push
or
pop
cmpsb
fldl
mov
xchg
cmp
inc
pop
out
and
dec
js
mov
add
cmpsb
adc
pop
mov
popa
data16
in
mov
add
int
dec
xor
test
out
imul
popa
mov
pop
adc
int3
push
out
jne
mov
push
imul
repnz
lea
mov
add
inc
adc
js
dec
or
jae
or
push
out
leave
jmp
push
ja
leave
mov
mov
jne
jmp
pushf
or
lods
rcrb
push
movsb
jne
call
mov
in
push
add
push
je
cwtl
inc
adc
fldenv
rolb
dec
imul
xor
cltd
int
mov
add
xor
es
repz
sub
and
in
add
lods
xchg
xor
or
loopne
loop
sub
and
adc
sbb
and
dec
dec
stos
mov
xchg
jmp
lret
loopne
out
adc
cs
pop
test
lret
pop
mov
add
add
ljmp
mov
loop
xlat
cmp
and
push
ss
adc
fists
fists
loopne
cmpsb
lds
sti
ja
jg
data16
dec
in
cmp
pop
mov
cmc
in
fcmovne
mov
push
shll
add
cmp
push
cmc
push
add
stos
mov
mov
enter
mov
cmp
addl
dec
mov
imul
sbb
rcr
loopne
lret
xchg
push
sbbl
loope
xor
cmp
shlb
inc
popf
orb
scas
adc
add
inc
dec
lea
or
jecxz
je
and
add
dec
out
push
pop
test
jg
mov
fsubs
mov
lretw
test
rcrb
out
mov
mov
fcoml
dec
outsl
mov
dec
push
and
inc
push
popl
cwtl
mov
xchg
dec
stos
test
or
data16
js
pushf
mov
cmpl
pop
inc
add
jecxz
xchg
pop
cmc
pop
adcl
in
adc
or
push
sbb
jbe
xchg
cltd
inc
pop
xor
add
dec
push
pop
push
inc
pop
mov
xchg
add
mov
je
sub
fcoml
cmpsb
fstps
pop
shll
add
in
mov
push
mov
add
movsl
ficompl
adc
fimull
lahf
add
inc
std
ret
icebp
inc
imul
sbb
dec
rolb
dec
or
adc
adc
or
mov
mov
movb
mov
inc
lods
xor
add
or
fildl
inc
xor
xor
xchg
sub
bound
sbb
and
cwtl
mov
xor
dec
mov
cmp
sbb
jnp
dec
mov
ret
xchg
add
not
push
ret
sub
test
ds
pop
sbb
fsubs
push
pop
fwait
sub
lds
push
cltd
imul
jnp
add
fidivs
stc
or
cmp
xchg
pop
scas
jp
mov
gs
and
pop
mov
icebp
clc
or
adc
faddl
test
gs
fadds
ja
add
mov
mov
sbb
pop
xchg
dec
lcall
gs
dec
cmpb
test
mov
orl
dec
or
mov
add
sbb
mov
push
loop
bound
add
clc
mov
xchg
sbb
sbb
test
sbb
movsl
jnp
repnz
push
rcll
push
push
dec
xor
fdivl
nopl
push
mov
or
mov
mov
dec
inc
mulb
pop
js
sbb
sbb
mov
mov
mov
hlt
repz
sbb
mov
adc
lea
ds
jb
push
ss
ficoms
sub
pushl
xor
sbb
inc
inc
addl
and
mov
cmc
push
xor
mov
jno
dec
pushf
mov
subb
pop
adc
lcall
mov
and
adc
inc
mov
int
test
xor
push
ret
btl
movsl
insl
jbe
push
push
mov
sub
push
fisttpl
pop
les
dec
mov
fnstsw
dec
pop
add
aam
add
jae
jle
addr16
sbb
inc
inc
sub
xchg
pop
pop
xchg
fdivrs
pop
out
sbb
sbb
mov
and
adc
inc
lret
pop
push
or
std
jp
les
sub
mov
rolb
arpl
push
call
cmpsb
int3
icebp
or
dec
mov
mov
movl
aas
shl
dec
pop
dec
jge
mov
rolb
lcall
ljmp
sti
cmp
movl
std
push
jge
loopne
sbb
mov
in
push
mov
jnp
jl
mov
sbb
dec
adc
es
in
test
loopne
data16
pop
lea
or
imul
dec
in
dec
pop
fstpt
or
lcall
or
les
mov
ret
push
repz
mov
into
hlt
stos
pop
or
jp
shlb
add
cmc
mov
in
hlt
cmp
and
xorl
sub
arpl
aaa
push
aad
addl
cwtl
shll
sahf
loopne
mov
call
push
mov
cmp
push
movl
push
push
mov
insl
sahf
xor
fsubs
arpl
aaa
push
push
mov
push
mov
mov
insl
gs
mov
idivb
fwait
jle
or
add
mov
push
lea
lds
loope
or
lock
xchg
push
jb
mov
movsl
jmp
mov
ss
loopne
lds
cmpsb
in
mov
addr16
push
pop
mov
dec
xor
xchg
aad
stos
sarl
rclb
pop
addr16
mov
imul
cmpsb
mov
pushf
xchg
mov
mov
lret
les
mov
and
out
sub
test
sbb
or
std
cmc
xor
mul
or
adc
imul
and
test
bound
mov
popf
jbe
jnp
xchg
stc
xchg
sbb
pop
mov
testl
mov
mov
jg
xchg
pop
scas
lods
jno
int
pop
testl
or
or
fs
pop
popf
adc
out
idivl
pop
add
push
add
cltd
cmpsl
jb
aam
cwtl
hlt
cmc
sarb
fucom
das
push
cmc
lret
sbb
xchg
push
push
xor
lds
push
jp
fs
mov
test
xor
dec
mov
mov
add
inc
dec
sbb
imulb
loop
dec
inc
push
jmp
sbb
ret
jmp
cltd
in
xor
andb
addb
and
xorl
xchg
push
pop
fstp
xchg
loope
orl
cmpsl
xchg
xlat
xchg
testl
out
pop
or
lods
or
jge
testl
mov
push
test
sarl
in
push
or
mov
cmp
or
jl
or
or
nop
stos
xchg
or
add
stos
jg
fcoml
xchg
dec
lret
jno
cmpsl
xchg
into
jmp
sub
mov
mov
stc
rcrb
xor
cmpsb
fisubl
js
mov
test
outsb
xchg
inc
sbb
gs
and
nop
sti
orl
pop
mov
or
and
ja
adc
test
jb
stos
mov
repnz
aam
xor
jne
cmp
or
jle
jp
int3
sahf
int
imul
jne
lods
push
push
gs
mov
jns
add
push
adc
jmp
sbb
lret
push
popa
cmpsb
xor
sub
call
inc
mov
pop
cld
cld
mov
test
xchg
daa
xchg
roll
sbb
push
sub
dec
fwait
loop
cmp
add
jno
cs
add
push
ret
push
test
loopne
xchg
icebp
or
insb
roll
loope
ss
mov
cli
dec
ljmp
xchg
in
ljmp
inc
sbb
push
test
lock
fsts
push
sbb
das
sbb
push
data16
inc
cmp
sub
dec
mov
scas
test
dec
aaa
cmpl
dec
pushf
cmp
lcall
rclb
xchg
push
data16
scas
mov
cmpsb
fs
es
push
out
insb
andl
loope
pusha
aam
pop
outsb
push
call
std
popa
push
mov
js
lcall
popf
xor
inc
xorb
ret
mov
testl
mov
scas
arpl
push
inc
mov
lahf
insb
mov
push
mov
cmp
in
jecxz
ss
daa
cs
shlb
int3
and
jbe
pop
scas
testl
dec
mov
sub
lods
push
movsb
test
or
push
mov
es
cmp
sahf
icebp
sti
fs
shlb
jnp
into
je
push
dec
mov
xor
push
pop
or
fmull
cld
dec
adc
lds
mov
or
add
push
in
cli
gs
and
inc
sbb
mov
jns
inc
xlat
mov
mov
out
shufps
sub
imul
mov
into
movsl
sub
mov
cli
movsl
movsl
add
mov
adc
or
and
mov
rcrb
fisubrs
mov
ret
or
cmc
mov
push
arpl
sub
fcoml
das
push
jmp
add
inc
dec
out
and
stos
int3
test
sbb
cmp
xor
and
repnz
mov
or
pop
test
jecxz
mov
or
mov
jo
mov
cmpsb
sarl
dec
rcll
ret
fcmovnbe
and
jbe
aas
sbb
ja
das
cmp
sub
dec
xlat
dec
inc
fwait
pop
add
fwait
lock
mov
jne
mov
jbe
lret
add
mov
inc
or
xlat
in
cwtl
jecxz,pn
loope
xchg
test
subb
jbe
stos
xchg
mov
test
imul
cmp
andl
mov
mov
inc
push
inc
and
jae
cmp
popa
pusha
ret
cs
inc
mov
fsubrl
fidivl
daa
push
pop
xor
popa
xchg
lcall
neg
stos
jnp
faddp
xlat
adcl
pextrw
gs
push
fdivrp
cmp
rcrb
lret
pop
push
add
rorl
daa
in
stos
cmpsb
mov
lds
idivb
jae
xchg
mov
in
or
add
mov
pop
xor
add
mov
sub
ret
cmp
mov
mov
pop
xchg
or
rcrl
add
mov
mov
inc
test
nop
inc
dec
pop
cvtpi2ps
adc
pushf
lret
add
fimuls
leave
dec
int3
push
jnp
mov
pop
dec
xor
pmaxsw
dec
shl
add
jmp
mov
sbb
ljmp
mov
mov
icebp
push
mov
mov
sbb
jecxz
loop
int
pop
sbb
cltd
mov
daa
shl
cmp
int3
sub
pushf
push
loope
dec
lds
xor
or
pop
xchg
fidivl
sbb
gs
stos
mov
xchg
in
repnz
subb
push
adc
or
push
cltd
push
xlat
in
loopne
dec
pop
add
sbb
hlt
lret
and
add
mov
mov
push
or
jl
adc
cltd
out
mov
mov
add
bound
jp
push
mov
jmp
mov
pop
rolb
ss
fidivl
lret
push
ror
jge
das
pop
jmp
mov
or
test
sbb
mov
add
and
sub
mov
jge
pop
loopne
and
or
mov
cmpsb
adc
push
clc
jmp
cmp
loopne
cltd
pop
clc
imul
mov
xor
stos
xchg
xchg
and
xchg
fdivl
adc
xchg
cltd
pusha
dec
or
mov
cltd
sbb
and
cmc
jl
push
or
adc
mov
dec
mov
test
adc
inc
dec
xchg
stos
js
lock
mov
sub
subb
or
and
xor
dec
pop
xchg
mov
cltd
das
out
or
xchg
fldenv
ffreep
lret
mov
jns
nop
or
mov
add
insl
sub
ljmp
inc
and
jp
mov
mov
fsubrp
in
test
add
adc
aad
js
in
or
dec
pop
add
pusha
mov
push
push
lret
test
dec
dec
sub
mov
sub
add
ficoml
or
adc
fsin
sbb
or
call
lret
insb
xorl
sub
mov
mov
xchg
xor
mov
mov
xchg
fdivs
mov
xor
push
scas
hlt
sub
fadds
mov
push
testl
sub
addb
add
scas
sbb
pop
inc
add
mov
sahf
and
sarb
sbb
lahf
aam
mov
add
repz
inc
scas
jge
fisttpl
rorl
pop
imulb
or
rclb
roll
mov
pop
or
sbb
movb
fsubl
mov
push
insl
pop
push
pop
scas
and
aaa
imul
push
aas
adc
sti
arpl
xchg
aam
and
popa
mov
pusha
sbb
push
xor
addr16
imul
or
push
mov
pop
mov
test
inc
pop
gs
int3
push
sub
lods
cld
sbb
addl
add
idivb
scas
shr
or
mov
loope
push
sbb
sub
imul
mov
inc
rol
mov
aas
cmpsb
pop
fcomps
gs
sub
shl
xchg
test
imul
and
call
fadds
dec
repnz
push
mov
jl
fsubrs
insb
daa
test
ss
ljmp
xchg
ret
loop
mov
mov
xchg
in
jl
icebp
pop
add
jp
es
sbb
hlt
and
or
fstpt
bnd
cmc
repz
jne
pop
clc
dec
mov
xor
sbb
dec
pop
mov
pop
test
pop
add
push
lcall
and
push
push
ds
int
mov
add
adc
inc
hlt
rcl
xchg
icebp
jp
cwtl
scas
xor
and
lods
and
inc
add
call
lds
and
mov
push
jmp
out
jno
mov
adc
sbb
fstl
dec
cmpsb
fistl
gs
xor
ja
out
scas
mov
cmp
int3
out
dec
mov
cmp
xchg
loop
and
xor
sbb
mov
sbb
adc
test
js
jae
inc
pushf
or
pop
sahf
loop
jb
pop
xor
rorb
into
test
mov
add
add
sbb
xchg
dec
sbb
aas
cmc
lock
pop
imul
ret
aad
inc
adc
hlt
dec
movsb
push
sub
enter
fimuls
cli
sub
sahf
jg
xor
pop
mov
aaa
sub
xor
mov
nop
outsl
gs
rcl
in
mov
push
insb
pop
inc
push
sub
daa
outsl
rcl
in
push
imul
pop
ss
jns
inc
mov
jp
jmp
jmp
pop
fsqrt
popa
mov
ret
inc
pusha
aad
testb
in
insb
das
sbb
cmp
inc
mov
testb
daa
fldt
cmpsl
and
cmc
pop
jbe
adc
repz
das
mov
gs
add
jo
lahf
jbe
add
inc
push
add
push
test
ja
stos
xchg
and
jne
loope
dec
jno
adc
andl
push
push
lret
cltd
out
loope
or
stc
xchg
fisubl
sbb
cli
inc
sub
insb
xor
xchg
clc
push
fsts
jmp
mov
push
aam
stos
bound
push
or
push
or
sbb
mov
fidivrl
jmp
lods
jmp
leave
rcrl
mov
clc
push
scas
test
inc
xchg
int3
into
gs
xchg
or
sub
push
xchg
fstl
jge
mov
add
test
pop
das
ja
in
cmp
and
dec
inc
mov
xchg
in
repnz
fsubrl
test
test
stc
or
add
push
adc
outsb
and
pusha
stc
aas
bound
roll
inc
sbb
add
fs
adc
add
or
stc
sub
xor
xchg
or
outsl
cmp
shll
sbb
push
mov
scas
nop
push
add
fcomps
xlat
rol
dec
mov
pop
add
xchg
insl
mov
lea
fldcw
cmp
shll
mov
ret
pop
jg
loope
push
sbb
sbb
cmpsb
inc
push
pmullw
out
fdivr
nop
add
sub
test
mov
or
popa
push
push
dec
mov
pop
push
pop
mov
sbb
cmp
jno
mov
inc
outsb
inc
jnp
push
or
mov
cli
pop
cmp
test
mov
test
sbbl
icebp
pop
fcmovne
jle
pop
add
push
es
psubusb
lock
stc
imul
push
add
arpl
inc
orl
inc
jl
sub
xchg
lods
icebp
in
dec
jmp
push
pushf
pop
jnp
push
add
cmp
sahf
push
pop
mov
dec
fs
data16
fwait
inc
mov
sbb
fwait
leave
lret
stc
or
and
psubusb
sub
cmpb
sub
gs
pop
sar
mov
xor
lea
sbb
and
test
insl
pop
xchg
arpl
rolb
cltd
mov
mov
xchg
insb
adc
inc
pop
inc
dec
jl
jno
mov
outsl
ret
pop
bound
sbb
insl
mov
jns
xchg
ljmp
cmc
lds
loop
ljmp
cmpsl
ss
sub
cmp
mov
jecxz
push
dec
pop
sbb
loope
adc
aam
imul
fsub
fs
xchg
pop
jno
std
stos
test
mov
sub
das
stos
in
push
loopne
jne
or
cmp
cmpsb
and
cmp
mov
or
sub
add
jmp
dec
mov
sbb
sbb
out
adc
fcomi
sub
jbe
jmp
dec
loope
stos
jmp
pop
pop
adc
lock
jle
sbb
aaa
imul
stos
gs
js
dec
xchg
xor
pop
jecxz
ja
inc
out
mov
push
or
stos
js
pop
test
nop
jnp
pop
jg
xor
mov
add
repnz
xchg
inc
popf
in
data16
mov
or
in
sahf
push
dec
push
cmpb
xchg
mov
add
fstl
add
adc
test
insb
push
ds
inc
jp
rorl
jecxz
lret
xchg
xchg
jmp
and
xchg
fcompl
cmpl
mov
push
mov
gs
jae
jae
xchg
mov
daa
shl
or
das
xor
and
mov
lods
cmp
dec
add
pushf
push
cmc
or
push
dec
jge
and
xorl
fcompl
pop
push
in
rcll
cld
frstor
fmull
dec
test
ss
data16
in
decl
pop
shll
cmpsl
add
adcl
hlt
mov
add
sbb
mov
jecxz
data16
daa
rorb
mov
stos
mov
or
mov
sbb
insb
into
xchg
cmpsl
pushf
sbb
xchg
jge
sbb
push
gs
cmpb
jb
lock
add
mov
cli
jb
fwait
cwtl
lea
sahf
stos
cmp
push
fcoml
fisttps
inc
out
int3
push
pop
sub
inc
lock
ljmp
push
psrlw
imul
mov
pop
mov
cld
or
inc
jb
out
stos
pop
outsl
mov
add
aaa
gs
imul
rcll
popa
mov
xchg
xchg
imul
sbb
or
or
jge
int3
mov
mov
outsl
adc
jge
aad
addr16
outsl
inc
add
fmuls
inc
inc
dec
push
xchg
inc
std
mov
sub
and
mov
fucomp
xchg
dec
mov
pop
sbb
jl
scas
adc
dec
dec
test
or
cmc
jge
es
push
sbb
sub
push
push
dec
xchg
jmp
call
cli
jle
sahf
nop
cmc
enter
lock
loop
ret
shll
jmp
jg
insb
repz
leave
scas
leave
scas
dec
add
out
inc
jb
mulb
jp
pop
sub
pop
add
mov
js
mov
test
pop
pop
inc
pushf
cmpsb
cmp
push
add
inc
fldln2
jne
popa
mov
jno
outsl
cmp
int
js
xor
sahf
or
mov
jg
ja
sbb
jge
pop
das
jg
loopne
mov
ret
pushf
pop
pop
sbb
sub
mov
andl
fcmove
xchg
push
pushf
call
insb
add
int3
mov
movsb
pop
jle
push
inc
dec
mov
dec
test
sub
push
adc
cmc
mov
sub
or
scas
popf
mov
adcb
mov
inc
mov
lret
dec
jp
push
pop
repnz
xor
std
pop
cltd
xlat
push
fs
nop
imul
ja
cmc
std
dec
faddl
add
or
addl
inc
and
icebp
push
aam
nop
push
mov
scas
pop
jbe
mov
mov
out
dec
addr16
loopne
xchg
cwtl
mov
pop
cli
inc
fwait
dec
add
add
or
sarb
dec
jecxz
mov
xor
movsl
and
push
fwait
lea
mov
test
cmp
xchg
lret
push
mov
pop
cmc
shll
xchg
rolb
in
mov
fdivrs
stos
nop
aam
jo
adc
mov
imul
dec
lcall
push
push
mov
ret
in
and
pop
sbb
dec
inc
aam
rcrl
adc
jle
aas
cmpsb
cmpsb
dec
jno
cmpsl
loopne
pop
cli
or
mov
test
lods
cmpsl
lahf
xchg
insb
std
ret
xchg
inc
mov
testb
mov
add
cltd
lock
leave
cltd
pop
mov
inc
test
sarb
push
int3
mov
pop
jne
notb
test
pusha
arpl
or
inc
adc
shll
xor
fsubrs
mov
add
std
ret
sbb
sahf
cmp
lock
popf
nop
push
pushf
fwait
xchg
sahf
xchg
mov
mov
in
shll
add
sbb
sub
dec
mov
enter
ja
and
sarl
popa
jns
pop
fwait
test
cmpsb
flds
sbb
cmpl
or
aad
jge
loope
cs
inc
cltd
mov
pushf
pop
jns
pop
push
orb
icebp
xor
xchg
cltd
add
divl
dec
outsl
lcall
icebp
inc
lret
mov
push
ljmp
stos
fsts
aaa
mov
mov
mov
pop
outsb
xchg
xchg
mov
cmpsl
das
add
or
clc
add
outsl
pusha
push
push
dec
popa
pop
mov
sbb
add
jmp
lods
pop
or
rorb
sbb
push
inc
out
xchg
rcll
or
das
mov
jge
or
cmp
mov
pop
sub
repnz
fs
add
jo
add
jne
push
fcoml
fcomps
jge
inc
inc
xchg
inc
pusha
std
cwtl
sub
test
test
mov
cmpsl
iret
adc
or
lds
out
jo
push
sbb
mov
aad
pop
dec
sbb
ja
out
lock
ljmp
pop
push
pop
or
mov
pop
add
cltd
sbbl
imul
jb
scas
and
stos
jmp
mulb
ret
sub
mov
inc
cld
lock
adc
sbb
add
xchg
mov
hlt
push
sbb
data16
lods
sbbl
sub
inc
sbb
data16
popf
push
mov
fstpl
and
mov
bound
push
mov
jb
andb
jle
or
ja
sbb
adc
sub
leave
bound
dec
cltd
and
scas
punpcklbw
push
lock
stos
je
push
test
lods
sbb
imul
mov
insl
bound
mov
jo
lods
jns
insb
mov
xlat
icebp
test
subl
push
das
call
mov
xchg
lahf
lods
pop
lcall
push
add
aas
stos
aad
pop
push
pop
mov
cmc
push
ficoms
hlt
or
test
in
cmp
jmp
dec
insb
ja
push
xchg
loop
jecxz
imul
xchg
mov
or
and
aas
sbb
inc
testb
test
lea
cmp
lds
sbb
jno
dec
notl
lods
and
sbb
sub
add
das
das
cmovle
sub
daa
rcrl
mov
call
ss
outsb
loop
stos
test
mov
sub
sub
mov
orl
adcl
xchg
jmp
fmul
adc
in
negb
insl
inc
into
fs
xchg
push
xor
mov
jp
lds
xchg
jne
and
ljmp
sarb
pop
lods
mov
dec
xor
fists
into
out
mov
sti
xchg
sti
sub
mov
adcl
push
add
lds
mov
cmpsb
lahf
jbe
rolb
les
cmp
dec
ret
int3
loopne
shlb
mov
lods
inc
xchg
jne
testb
mov
and
shrl
lea
cltd
loope
pusha
test
popa
insb
cmp
je
addr16
inc
and
roll
in
add
outsl
pushf
lahf
push
sbb
shrb
into
mov
lret
mov
mov
inc
daa
inc
sbb
add
jno
pop
inc
jo
or
testb
sbb
loopne
les
push
insl
dec
jns
xchg
mov
cs
sbb
sbb
sbb
sub
xchg
lahf
mov
sbb
punpckhwd
cmp
inc
popa
or
outsl
fwait
je
int3
inc
mov
jg
add
leave
cmp
sub
mov
ficomps
in
iret
das
push
push
imull
jno
popa
stos
sub
cli
dec
dec
loope
and
xor
sbb
mov
push
mov
sarb
sbb
loopne
mov
in
mov
xchg
and
push
add
jmp
xchg
push
add
hlt
push
dec
mov
or
add
jne
stos
jg
imul
inc
loop
add
ret
adc
jle
mov
sbb
xor
pop
pop
lods
add
cld
push
ret
imul
push
push
sbb
out
dec
jno
push
cmc
incl
gs
insb
pop
into
mov
clc
repz
jecxz
scas
faddl
mov
xchg
mov
loope
mov
xor
lahf
cltd
daa
pop
or
push
dec
push
and
gs
sub
repz
inc
sub
int3
cltd
or
mov
pop
xchg
sbb
incb
sbb
inc
ret
leave
loope
loope
adc
sub
stos
xor
fcomps
test
lea
les
sub
repz
adc
adc
test
add
sbb
dec
lea
xor
cmpl
insb
ret
add
out
and
mov
leave
mov
xlat
push
pop
hlt
adc
cs
or
dec
aaa
inc
in
jnp
fcoml
nop
or
and
mov
push
mov
and
fsubp
mov
mov
inc
roll
in
test
and
fdivl
xor
test
sahf
xlat
outsl
or
test
xchg
pop
or
lahf
ss
sbb
push
sti
push
push
inc
fnstsw
call
add
or
enter
js
pop
mov
mov
adc
jle
pop
out
or
inc
adc
in
push
ljmp
jle
push
mov
add
push
mov
mov
dec
push
in
xor
pusha
std
loop
jp
jns
aad
fstps
sti
jg
loop
dec
out
cmp
cmp
dec
lea
sub
ljmp
cmp
ja
or
sbb
aad
push
or
lret
mov
inc
fs
or
xlat
inc
mov
pop
sbb
pop
jne
stos
sbb
dec
lahf
cmc
pop
sbb
ficomps
inc
and
dec
int3
in
fsubrs
dec
outsl
fldl
sbb
ljmp
insb
clc
xchg
arpl
fnstsw
mov
or
lock
lret
insl
sub
push
inc
adc
hlt
mov
push
gs
mov
jge
daa
xor
ja
jmp
hlt
cli
push
jb
cmp
aaa
jno
dec
sbb
mov
add
push
repnz
rcpps
ret
addl
mov
in
faddl
mov
dec
mov
inc
sub
in
push
or
push
sub
jl
mov
fisttpl
aaa
mov
data16
outsl
xor
push
sub
xor
jns
stos
daa
rcrl
sbb
jne
mov
push
shrl
loope
push
jmp
cmc
mov
dec
mov
imul
repnz
aam
cmpb
xor
vsqrtps
sbb
ja
mov
pop
rorl
ret
sub
inc
sbb
cmp
roll
fs
pop
xor
inc
mov
sbb
mov
stos
push
or
push
push
repnz
repz
dec
and
xor
jbe
mov
repz
out
adc
mov
xor
gs
popf
imul
cmp
fwait
mov
inc
pop
push
sbb
push
xor
jp,pn
or
cmp
mov
fldl
mov
or
ljmp
loop
in
mov
repz
xor
roll
stc
stc
cmpsb
sub
adc
aas
sahf
adc
xor
jne
out
data16
inc
pop
outsb
add
fidivs
jge
push
sub
push
sbb
cltd
push
test
mov
inc
test
int
movsb
adc
sbb
ja
decb
pop
inc
jbe
push
insl
push
subl
cmp
addl
sbb
xchg
scas
test
icebp
mov
and
xor
xchg
cmp
jcxz
insb
push
cs
outsb
sub
sbb
sahf
adc
inc
mov
cwtl
std
out
fsubrl
xchg
lcall
lret
adc
dec
pushf
scas
cltd
cld
sbb
loopne
pop
add
mov
fbstp
outsb
inc
arpl
pushf
or
mov
das
insb
sub
or
pop
pop
xorb
pop
jb
jne
testl
ret
mov
jp
loop
xor
orl
and
push
lods
gs
or
inc
cmp
push
fistl
out
arpl
in
sbbl
and
push
pop
dec
fwait
inc
mov
in
cli
and
cmc
sbb
mov
dec
inc
sub
fcomps
mov
sub
fsin
add
pop
out
push
outsb
mov
out
push
mov
and
xchg
push
mov
ficoms
push
add
shrb
out
adc
add
dec
push
dec
push
or
push
gs
fisubs
fcomps
cli
imul
add
and
lods
arpl
jns
add
cs
add
and
sbb
notb
mov
jge
push
je
sbb
lock
mov
mov
pop
pop
imul
aaa
mov
sub
xor
shl
in
dec
push
jno
lea
roll
cmp
add
loopne
sbb
sub
inc
pop
outsb
lods
sbb
rolb
loopne
lds
push
lret
es
jns
inc
out
loopne
es
jne
adc
dec
int3
jmp
adc
fildll
mov
mov
xor
imul
pop
pop
xchg
out
push
cmpl
pop
jno
sbb
lds
adc
xor
or
in
xchg
lret
xchg
les
lahf
loope
push
fisubrs
fcmovb
jae
mov
sti
in
repz
or
push
ret
in
inc
xchg
out
loope
sti
popl
mov
mov
or
lods
xchg
cmp
test
pop
dec
dec
dec
insl
pop
aaa
leave
sahf
add
xor
out
jne
out
sti
jnp
in
mov
sbbl
shr
xchg
cltd
add
pusha
jecxz
adc
add
incl
pushf
leave
cmc
loope
mov
and
scas
outsb
jnp
stc
pop
leave
std
adc
xor
mov
push
fists
push
repnz
rorl
shr
test
jge
mov
ret
outsl
adc
push
in
fnstenv
jbe
repnz
into
stc
mov
stos
pusha
and
loopne
test
push
and
xor
jae
mov
xchg
cmpb
or
movsb
push
test
push
pop
adc
loopne
mov
jo
addr16
xchg
sbb
data16
adc
mov
test
daa
jno
pop
notl
cltd
add
dec
out
stc
push
mov
xor
add
das
arpl
sub
jg
fisttps
out
inc
aad
les
mov
andl
fsubl
into
sub
jmp
mov
sbb
mov
jnp
mov
inc
mov
xchg
add
pop
test
arpl
inc
add
fucomp
mov
test
fiadds
popf
adcl
xchg
test
outsb
arpl
rcll
or
fdiv
sub
inc
imul
cltd
add
dec
out
inc
cmp
mov
xor
sbb
cmpsb
divb
outsl
add
push
add
popa
xor
mov
xchg
push
repz
push
jle
sbb
dec
add
push
xor
mov
jae
inc
mov
test
sbbl
jno
sbb
mov
data16
mov
mov
add
add
mov
inc
pop
jge
adc
and
adc
xchg
sti
rcrb
aaa
lock
loop
mov
push
mov
fsubl
jmp
lcall
xor
jbe
mov
adcb
jo
or
stos
xchg
inc
sub
leave
and
out
into
stos
icebp
insb
ret
push
ret
pop
push
rorb
cmp
dec
or
jbe
mov
sbb
leave
rol
inc
push
xchg
scas
or
add
pushf
mov
push
adc
push
push
mov
sahf
cwtl
xchg
mov
in
push
movntq
sbb
cld
aaa
loop
clc
nop
insl
cmp
dec
inc
xchg
arpl
xor
out
orl
inc
mov
cmp
or
stc
sub
push
sbb
sbb
add
scas
test
lds
mov
es
dec
inc
lahf
sbb
pop
sub
sbbb
repnz
ss
stos
cmpb
xchg
loopne
out
sbbl
gs
cmpsl
adc
pop
add
adc
movsl
stos
push
je
sub
outsb
xor
rcrl
add
loopne
inc
lret
inc
rcrl
pop
mov
in
or
movsb
outsl
xchg
and
leave
mov
scas
insb
jle
mov
jne
cmp
out
ss
in
xchg
lret
push
mov
das
xchg
pop
sbb
mov
and
in
push
push
les
jge
xchg
movl
nop
push
sbb
outsl
dec
stos
insl
push
cld
push
cmp
mov
jl
lock
or
popa
add
inc
sbb
mov
dec
out
add
push
adc
fidivrs
arpl
sbb
pusha
jle
or
mov
js
lock
pop
movsb
sbb
orl
stc
in
es
pop
out
jnp
push
lcall
push
pop
notl
test
sbb
shll
aaa
add
mov
push
repz
xchg
popf
inc
mov
sub
mov
std
gs
sub
sub
dec
push
ja
stos
orl
pop
pop
jle
aad
push
negb
jg
int3
mov
inc
bnd
cwtl
pop
cmpl
sbbb
dec
adc
inc
sub
push
mov
scas
xor
adc
jge
test
jmp
stos
jno
arpl
and
adc
lods
lahf
add
adc
fs
into
repnz
inc
movsl
mov
lds
xchg
jo
xor
fsubp
xchg
push
push
or
inc
pop
loope
mov
fistpl
xchg
sbb
ds
stc
sbbb
test
addr16
pusha
mov
outsb
rorb
cwtl
movsb
dec
xor
imul
sbb
inc
lea
imul
xlat
inc
sahf
add
xchg
push
sbb
or
test
or
dec
and
push
sbb
pop
xchg
inc
repz
insb
mov
rsqrtps
dec
cmp
fcomip
mov
inc
sub
jmp
mov
mov
cmc
pusha
and
adc
jne
movsl
mov
dec
sub
filds
fsubs
mov
jg
jg
pop
adc
js
mov
stos
adc
test
ljmp
cmc
sbb
mov
jp
mov
stc
stos
push
and
pop
fcompl
rolb
cmc
out
mov
daa
jl
and
xchg
mov
repnz
lcall
pop
aad
lahf
out
dec
or
mov
add
dec
xchg
mov
dec
fnstcw
mov
gs
fstpt
mov
mov
pop
mov
loope
adc
and
sbb
dec
inc
xchg
pop
mov
xchg
mov
mov
in
inc
roll
dec
mov
xchg
out
and
pop
cmc
rorb
mov
call
cs
dec
xchg
shr
pop
fimull
mov
and
mov
subl
rclb
push
jnp
mov
aad
sbb
sbb
int3
and
ja
push
idivb
cld
cld
cmp
dec
lea
pop
dec
xlat
or
lds
leave
pop
push
jl
xchg
push
lock
lret
mov
xchg
leave
lock
or
dec
mov
test
cmp
sub
or
aam
cltd
and
cmpsl
int3
iret
test
mov
push
jle
lea
push
jle
cmc
ficoml
cli
out
arpl
pop
xor
mov
sbb
or
int3
dec
inc
enter
les
lock
push
mov
inc
or
xor
pop
loope
cmp
test
jp
adc
mov
sbb
sub
shlb
cltd
cli
xchg
roll
jmp
insl
inc
cmp
lret
pop
fs
daa
xor
jb
nop
mov
movsl
dec
popa
and
daa
xchg
fstps
in
sbb
jecxz
in
xchg
push
pop
outsb
mov
mov
scas
cmp
test
pop
cmc
test
push
mov
pop
loopne
out
popf
in
test
push
sbb
jnp
aas
jns
rcl
jle
addr16
cltd
push
mov
adc
stos
dec
xchg
movsb
pop
inc
rolb
imull
lds
icebp
or
add
cmp
lds
cmpsl
icebp
daa
xor
cmc
adcb
incl
clc
push
data16
add
es
xchg
insl
test
out
adc
mov
rol
roll
ljmp
mov
push
sbb
jmp
dec
and
jge
fwait
add
test
test
push
aad
clc
movsl
loop
lods
in
popa
and
popa
test
dec
stos
shrb
inc
sbb
mov
add
mov
loope
pushl
pop
out
inc
aad
daa
sbb
jge
xchg
or
pop
mov
out
add
dec
push
or
cmpsb
aad
cmpsl
inc
add
leave
push
into
rcll
es
nop
xchg
jbe
sarb
push
mov
jb
mov
pop
daa
lock
sub
dec
xor
mov
jle
or
out
cmp
jp
xor
decl
xchg
adc
sbb
sahf
add
push
or
sub
xchg
and
icebp
and
xchg
insb
push
outsl
cmp
cmc
scas
pop
sahf
mov
je
push
jp
out
lahf
or
xchg
scas
movsb
cmp
jg
out
lods
loop
mov
in
test
ret
mov
loopne
xor
jge
scas
pop
imul
or
xor
mov
enter
addr16
xor
idivl
push
jmp
sub
cmpsl
faddl
test
repnz
aas
outsb
or
jno
mov
xrelease
sub
int3
pop
loop
mov
jnp
int3
sub
cmp
les
mov
sub
jle
push
sbb
addb
xchg
mov
pop
mov
push
xor
jge
out
ret
lds
fidivrs
or
sbb
jnp
mov
mov
and
hlt
bound
push
insb
mov
push
ja
pop
loopne
icebp
lcall
sub
xor
dec
or
cltd
dec
fcmovnbe
ret
lea
subl
jecxz
jge
vsqrtps
popf
push
sub
dec
lds
mov
sbb
inc
push
cli
and
xchg
stos
idiv
sbb
jge
movl
and
mov
inc
push
adc
jecxz
faddl
xor
out
js
add
push
or
iret
ja
xchg
stos
inc
sub
sbb
dec
mov
mov
pop
xchg
repz
jecxz
lret
int3
gs
addb
stos
or
or
xchg
cmc
adc
adc
in
and
mov
lods
int3
lar
inc
push
sbb
jnp
cmp
stos
pop
cmpsb
inc
sti
lds
add
test
inc
xchg
sub
sarl
sbb
rclb
inc
add
pushf
sbb
and
je
mov
frstor
int
dec
incl
je
mov
push
sbb
dec
sbb
and
xorl
jnp
test
jp
inc
add
push
mov
bound
addb
popf
sahf
ret
icebp
imul
stos
out
jno
movsl
adc
dec
mov
cmp
pop
xlat
mov
fimull
push
je
cmp
add
test
sarl
bound
ja
divb
out
push
cmc
sbb
mov
stos
xchg
mov
aaa
aad
add
sbb
sub
in
fcomps
clc
add
int3
fisubs
or
ret
sarl
aad
daa
dec
test
mov
jecxz
add
sbb
mov
int3
test
lret
or
mov
out
inc
push
ljmp
sahf
fnstenv
pop
lods
jle
inc
mov
das
gs
pusha
mov
and
cmp
jp
or
enter
subl
xlat
push
adcb
mov
ljmp
or
test
int3
or
dec
add
and
jno
bound
jne
addr16
cli
inc
stos
xchg
mov
jbe
fnop
mov
das
popa
in
rcrl
and
sbb
cwtl
rol
sbb
sahf
sbb
mov
popf
mulb
mov
jns
mov
xchg
inc
cmc
jnp
inc
imul
xlat
xchg
push
lods
and
int3
or
cmp
popf
inc
fs
sub
cmp
jne
das
fwait
lea
lcall
dec
arpl
xor
es
mov
pop
jle
js
pop
sub
jle
roll
mov
jge
xchg
aad
sti
push
xorb
jb
addl
int3
push
inc
and
pop
or
aaa
sbb
mov
push
cli
xor
adc
popf
inc
cmc
call
rorb
jae
lds
xchg
std
inc
xchg
ljmp
push
in
in
adc
push
jmp
in
or
cwtl
or
cmp
push
stos
data16
into
cmpsb
mov
aam
in
dec
jbe
scas
cld
xchg
pushf
pop
pop
sbb
dec
mov
and
jecxz
jp
fcmovnbe
ja
je
add
ss
sub
dec
or
push
mov
aam
cmc
jge
aam
add
sub
push
dec
xchg
sub
lea
sbbb
inc
pop
call
cwtl
lahf
out
sahf
jno
jns
stos
mov
scas
jp
mov
jne
sbb
sbb
incb
or
test
leave
xor
ja
fs
xor
push
add
or
data16
cmp
mov
cmp
and
repnz
test
inc
in
int3
mov
push
push
popa
dec
jne
mov
es
jo
or
mov
cmp
adc
inc
adc
dec
mov
ja
lcall
les
outsb
pop
push
je
adc
xor
xor
sub
dec
imulb
add
testl
lods
inc
fs
mov
and
stc
shrl
sbb
dec
add
int3
sub
mov
out
mov
mov
adc
out
fiadds
or
push
mov
push
cmp
cmp
cmpsb
js
push
ret
leave
push
push
jns
lret
lea
push
sbb
leave
loop
mov
mov
lcall
push
inc
cmc
and
push
add
je
add
xor
pop
test
enter
and
stos
je
or
push
add
outsb
mov
add
push
dec
cs
loope
dec
xorb
insb
cwtl
std
sbb
jbe
lret
ret
pop
test
mov
jge
rcr
enter
dec
lahf
bound
cmp
cs
sbb
push
lds
push
inc
cmc
lret
repz
arpl
insb
lret
cmc
or
sub
gs
gs
int3
or
mov
pop
sub
data16
xor
mov
jbe
popa
addl
fcomi
rol
add
jne
inc
mov
add
lret
dec
cmp
jl
addb
sbb
lock
and
add
js
es
testl
das
sbb
into
lds
lret
push
fmull
ss
mov
lods
jle
push
in
cmp
cmpsl
cmc
push
inc
jno
insl
sarb
jle
sbb
pop
cmpsb
push
dec
cs
insb
push
jne
dec
push
pushf
mov
mov
jbe
cli
rcrl
hlt
mov
cld
adc
icebp
movsb
lock
mov
mov
adc
repz
add
pop
rorb
adc
scas
adc
fdivp
adc
mov
jg
mov
push
cli
add
shlb
mov
loopne
loope
inc
ret
imul
push
shr
cmpsb
and
xlat
enter
std
sbb
in
sbbb
adc
loopne
filds
cmp
adc
into
cmp
addl
inc
mov
icebp
sbb
sbb
and
es
insb
test
mov
outsb
or
cli
subb
or
xor
mov
andl
inc
mov
int3
pop
sbb
inc
jo
scas
mov
test
stos
xchg
jbe
fwait
scas
sbb
inc
mov
ffreep
inc
push
or
or
xchg
dec
sub
addb
xor
out
les
push
push
mov
roll
es
popa
push
pop
sbb
fildl
or
xchg
fwait
imul
cmpb
aad
iret
lahf
hlt
sbbl
xorb
pop
push
or
mov
fisubrs
popf
push
roll
call
push
ret
lods
pop
gs
rorl
jmp
mov
pop
sub
adc
test
xor
pop
mov
xchg
xor
test
ret
into
mov
sub
push
pusha
mov
scas
in
pop
shlb
sub
add
push
jb
lea
add
gs
pop
mov
dec
lahf
mov
fstl
dec
sarb
sbb
jl
pusha
fldcw
outsb
out
insb
dec
loope
sbb
fdivr
jmp
xchg
or
dec
push
sbb
sub
scas
push
fidivrs
cld
dec
jne
add
jle
lock
fisttpl
push
adcb
inc
in
dec
xor
std
loop
fstpl
mov
or
xchg
add
imul
or
sub
or
add
jno
out
js
mov
loop
insl
cwtl
cli
sbb
jno
test
cmp
cmpb
adc
mov
xorl
and
fs
adc
icebp
rcl
aas
xchg
andb
push
xchg
jb
xor
inc
mov
fnstsw
inc
icebp
cli
popf
std
mov
into
pusha
aaa
arpl
shrl
adc
mov
sbb
je
insb
add
or
shll
sbb
sub
jle
pop
orb
jbe
ror
loop
dec
fsts
pop
dec
lock
stos
push
faddl
nop
sbb
sbb
pusha
pop
add
ret
add
les
inc
pop
mov
add
imull
stos
pop
add
in
pop
pop
pop
rcrl
cmp
sub
or
loope
mov
in
push
add
decb
lret
or
mov
lods
es
mov
xor
gs
xchg
aad
sbb
mov
sti
inc
and
pop
jbe
jge
push
jmp
mov
das
loop
insl
or
inc
data16
sbb
lock
pusha
xchg
mov
push
test
andb
fidivs
xchg
fadds
ds
adc
rolb
sub
ret
enter
flds
repz
fimull
es
movsl
leave
mov
fcmovne
arpl
repnz
or
xchg
lcall
ret
mov
cmp
push
push
call
dec
inc
scas
lods
or
movsl
or
data16
test
mov
aaa
std
inc
mov
outsb
sub
sub
mov
mov
cli
lahf
mov
mov
mov
fcompl
popf
imul
and
dec
loop
orb
mov
jb
mov
out
lds
dec
daa
sub
mov
sub
mov
in
mov
dec
lock
jg
sbb
sahf
mov
repnz
mov
mov
cmp
sub
add
jbe
inc
sbb
xchg
in
push
aam
jp
xchg
jp
dec
push
fldt
lret
or
cmpsl
mov
xlat
or
arpl
inc
inc
sbb
js
mov
jmp
pop
push
push
in
nop
jmp
sbb
fsubrl
sbbl
das
pop
dec
cmp
dec
jo
or
lock
pop
xchg
imul
out
sbb
mov
inc
lahf
and
loopne
pop
jecxz
xchg
sbbl
jae
or
jle
push
and
mov
pop
push
pop
push
sahf
cwtl
or
sbb
loope
out
xchg
dec
or
pop
inc
inc
iret
adc
pop
insl
inc
or
test
adc
scas
sbb
push
flds
sbb
jmp
mov
pop
adc
insb
inc
repz
mov
sub
loopne
out
in
pop
xchg
fwait
jne
stos
aam
lret
push
sbb
bound
nop
insb
enter
aad
outsl
loop
pop
popf
and
add
or
inc
aam
mov
negb
loope
mov
popa
cwtl
pop
sbb
test
mov
cmp
movsb
in
test
aaa
inc
push
call
in
xchg
loope
std
adc
mov
nop
cmp
rolb
add
mov
mov
push
cmpb
mov
push
outsl
push
push
xchg
scas
pop
cmp
inc
call
jl
jne
cli
mov
xor
andb
cwtl
or
sub
stos
push
pop
ss
push
xor
aad
xchg
dec
jne
lea
cs
loopne
jno
mov
mov
xorl
pop
hlt
pop
xchg
add
sub
rcll
inc
push
popa
push
mov
jl
rol
adc
lret
jns
popa
out
dec
cmp
mov
into
enter
in
imul
loopne
dec
daa
jae
jg
andb
jle
in
shr
inc
setno
cmpsb
orb
push
das
add
rclb
loope
push
or
inc
bnd
mov
gs
ds
sarl
sub
mov
push
in
sub
loope
stos
arpl
roll
or
lds
ja
add
jp
sahf
add
pop
inc
cmp
add
sbb
gs
neg
jae
add
xchg
jp
mov
mov
fs
andl
adc
into
cli
adc
movhps
lahf
lret
dec
sbb
insb
ljmp
arpl
mov
push
mov
or
dec
psllw
fmull
push
jno
inc
mov
push
jae
adc
stc
and
popa
lea
and
push
mov
push
test
mov
popf
incl
jle
fwait
pusha
mov
add
sahf
and
test
enter
mov
push
cli
cli
mov
arpl
lock
test
cmpsl
add
pusha
sbb
rcrb
mov
dec
in
data16
push
cmp
push
sub
les
xor
mov
sbb
imul
mov
js
rolb
adc
pop
add
cmp
cmp
int
pop
mov
icebp
cmpsl
mov
or
add
or
push
subb
push
sbb
imul
mov
fmuls
ljmp
xor
cmp
or
daa
test
out
ss
scas
lods
pop
cmp
add
pop
sub
mov
inc
inc
xchg
add
push
inc
frstor
addb
mov
dec
pop
dec
jmp
out
fisubrs
test
cmc
int3
movsl
int
mov
lahf
loope
leave
stos
cmc
xorl
aad
imul
xor
jecxz
dec
push
sbb
inc
test
cli
lahf
out
stos
out
mov
pop
mov
fnsave
icebp
add
clc
mov
xlat
ficompl
dec
mov
out
adc
scas
call
arpl
jmp
outsl
xor
xor
sbbl
dec
inc
or
in
ja
test
scas
lock
ja
xlat
inc
repnz
jno
xchg
xor
pop
nop
outsl
cmpsb
jae
cmp
leave
push
pop
out
or
das
cld
addb
cmp
sahf
aas
mov
cmp
lret
mov
mov
pusha
mov
xchg
divb
add
sbb
scas
push
and
adc
xchg
mov
scas
fcmovnu
jle
jo
or
jns
dec
popa
pop
push
jmp
inc
icebp
pop
sub
pop
xor
push
push
add
test
decl
pushf
loope
fldt
cld
push
icebp
pop
int
push
push
cmp
push
xchg
inc
jbe
mov
mov
cmp
xchg
out
xor
push
pop
aad
pop
xchg
xor
push
scas
push
fisttpll
or
xor
aam
in
sbb
and
fiadds
sbb
imul
jp
in
xchg
aaa
rorl
popf
or
arpl
xchg
add
xchg
sbb
fidivrl
sub
bound
mov
mov
mov
mov
mov
and
inc
mov
mov
popa
pop
sub
dec
inc
loope
or
sub
push
mov
adc
push
rolb
sbb
aaa
mov
jge
jl
out
pop
lds
add
and
sarl
pop
and
dec
adc
add
add
aad
mov
fisttpl
and
push
pop
inc
pop
ja
pop
ret
jb
or
adc
into
insl
lea
add
sub
cmp
pop
cmp
sub
push
test
xor
jno
cmp
lcall
sub
testl
and
cmp
pop
mov
xor
sub
ljmp
jg
pop
loopne
mov
aas
cltd
dec
mov
push
pop
rolb
mov
mov
popf
pop
sahf
xchg
jl
iret
dec
movsb
scas
rep
add
sbb
pop
jbe
xlat
addb
adc
xchg
hlt
dec
and
mov
jmp
mov
mov
leave
int3
sub
hlt
mov
cmpsb
mov
xchg
movsl
pushf
cwtl
push
lcall
insl
inc
sbb
aam
xor
daa
hlt
mov
fsubrl
mov
pop
jecxz
jecxz
xlat
aad
lods
cmpsb
mov
xchg
sahf
mov
repnz
fidivs
icebp
fnsave
pop
cli
cmp
jno
cmc
jp
call
enter
lahf
add
jne
imul
or
adc
jb
movsb
push
clc
push
test
dec
dec
inc
lret
popl
adc
push
or
aas
ficoms
aas
ret
jb
inc
mov
faddl
and
pop
sbb
cmpsb
cmpb
lret
dec
push
movsb
jno
sbb
repz
adc
dec
in
notb
test
xchg
sbb
pop
cld
fwait
leave
aas
cmpl
sbb
fidivrs
bound
fmuls
outsl
add
mov
out
add
push
pop
sub
fcomip
and
fs
xor
jle
mov
test
or
xchg
mov
push
shrb
adc
dec
inc
lret
push
jge,pn
jo
pusha
out
and
mov
shl
or
test
cwtl
fs
mov
xor
and
iret
shlb
iret
or
xor
or
cmpsb
and
mov
ret
mov
jecxz
mov
imul
ret
mov
jmp
mov
add
rcrb
inc
rorb
lcall
je
in
or
fstl
cwtl
mov
scas
in
lods
out
jb
call
or
adc
rol
pop
gs
test
xchg
and
mov
adc
pop
or
cmpsl
sbb
jl
jmp
mov
push
inc
mov
sub
gs
cld
out
mov
cmp
loopne
dec
frstpm(287
inc
dec
cmp
loope
jmp
inc
enter
add
bound
jno
sub
and
in
mov
loopne
or
push
push
jb
xchg
aad
sbb
dec
testl
add
into
mov
gs
stos
adc
jo
negb
ret
fistpll
pusha
mov
out
adc
ror
inc
bound
mov
or
ret
xor
dec
mov
loop
mov
test
stos
and
sub
dec
in
mov
gs
or
rcrb
sbb
ficompl
imul
xor
push
add
mull
loopne
sbb
cmpsb
clc
lahf
xchg
sub
xlat
out
fwait
mov
insl
sbb
mov
andb
jmp
imul
mov
stc
add
dec
ljmp
mov
add
scas
fdivr
push
aas
scas
mov
or
xor
jae
jmp
add
lods
enter
lcall
dec
fsubrl
push
or
mov
xor
dec
les
imul
ret
sbb
jl
mov
mov
sbbl
adc
jl
cld
cli
shlb
out
xor
mov
out
xchg
mov
add
jbe
mov
aaa
mov
aaa
out
imul
dec
sub
inc
dec
mov
sti
inc
or
popa
pop
insb
gs
popf
fimull
jge
stc
push
divb
or
mov
mov
rcrl
push
mov
jne
pop
and
jne
orl
sbb
mov
push
dec
iret
pop
out
push
inc
in
lods
mov
ljmp
inc
push
call
outsb
adc
repnz
in
dec
xchg
mov
mov
add
lods
mov
orl
es
gs
rcrl
inc
sarl
jge
pop
inc
xchg
stc
sti
or
imul
or
ja
in
mov
stos
popf
sub
mov
pushf
sub
out
sbb
pop
mov
dec
mov
mov
pop
push
dec
call
repz
cmpsb
mov
std
sub
and
jnp
addr16
inc
adcl
pop
mov
adc
and
jle
sbb
sbb
je
xor
jmp
mov
xchg
dec
test
test
mov
jl
stos
dec
push
xchg
cmpsb
popf
aam
dec
sbb
or
aas
jb
xor
inc
sbb
push
pop
mov
das
jo
hlt
push
add
adc
andl
sahf
int3
push
pop
imul
jle
or
sbb
add
mov
pop
fstps
bound
loop
mov
cmpb
add
jae
mov
rcll
or
aas
int3
dec
mov
fildll
outsb
cwtl
test
xor
pop
push
or
push
lcall
pop
ret
dec
in
xchg
mov
sahf
jmp
jp
pop
or
cmovge
fcoms
push
fisubs
pop
dec
fldt
rcr
or
ret
ss
or
inc
mov
dec
cwtl
or
gs
push
xchg
out
sbb
addr16
stc
rdpmc
or
mov
fsts
sbb
pop
lods
insl
out
ljmp
ljmp
inc
mov
lcall
je
lock
orl
jno
push
xchg
int
xchg
inc
or
push
lods
cmpsl
mov
lods
dec
pop
inc
push
cmp
data16
jp
imul
cmpb
idivb
dec
inc
iret
inc
enter
adc
cmpsb
pop
xchg
jno
xor
sbb
cmp
fs
aaa
or
jo
lods
outsl
mov
outsl
mov
mov
imul
push
mov
and
xchg
inc
sti
lret
or
add
insl
sbb
push
or
jmp
out
sbb
mov
and
add
mov
inc
or
fchs
cmp
and
faddl
movmskps
loope
cmpsl
dec
sub
ja
notb
imull
call
das
add
aaa
sub
add
or
pushf
fsubrp
mov
jnp
or
cs
jno
mov
xlat
xor
push
cwtl
adc
pushw
insb
push
or
and
xchg
jle
push
sahf
pop
and
aad
daa
jp
mov
mov
and
xor
mov
push
in
dec
and
scas
pop
adc
out
loopne
out
dec
inc
insb
scas
push
aam
mov
inc
popf
mov
xchg
mov
aaa
fmull
fdivl
repz
mov
movsl
dec
icebp
daa
mov
jne
pushf
pop
pop
xor
mov
mov
loopne
fnstenv
outsb
loopne
cli
or
inc
jo
in
mov
jp
pop
xchg
sbb
cli
xchg
adc
bound
lcall
sbb
sub
fwait
inc
fxch
or
in
sbb
push
push
ds
icebp
popa
notb
add
sbb
popf
mov
jp
fstpl
xchg
push
leave
repnz
mov
gs
jp
scas
arpl
mov
add
add
sahf
in
lea
inc
mov
ret
push
cltd
cmp
leave
jae
cmp
scas
add
stos
inc
cwtl
iret
xor
fstps
lea
inc
out
leave
inc
inc
int3
rclb
inc
repnz
dec
leave
push
cmp
mov
aam
jno
std
enter
std
je
dec
dec
sti
lods
dec
je
jno
cmp
inc
cmc
sbb
inc
ret
stc
pop
scas
mov
scas
dec
lds
sbb
jge
xchg
xchg
rolb
aas
dec
dec
lahf
xchg
rcr
orl
rolb
outsl
in
loop
and
xchg
lcall
aaa
push
and
nop
mov
or
imul
push
jl
clc
into
pop
or
adc
mov
fs
cltd
das
cmpsb
in
outsb
loopne
xchg
repnz
mov
mov
sub
test
jp
and
jb
sbb
lret
xor
lods
mov
dec
lods
and
stc
cmpb
or
mov
je
call
adc
inc
pop
in
bound
fsubr
mov
inc
adc
mov
daa
inc
popf
jmp
push
inc
mov
xchg
insl
pop
mov
mov
movsb
int
jecxz
in
popa
idivl
or
aas
in
es
or
lret
fnsave
push
add
cmp
sahf
scas
das
inc
ljmp
or
out
push
and
ret
rclb
inc
lea
rolb
test
in
mov
int3
sub
cli
push
pop
xor
xchg
push
addr16
fdivrl
dec
test
scas
stc
xor
inc
lea
xchg
int
cmpsb
negl
inc
lcall
fstpt
out
xor
lock
sbb
xor
cmp
xor
into
pop
sahf
adc
or
pop
jmp
insb
dec
mov
int3
mov
jns
xchg
adc
cmp
es
rclb
xchg
hlt
xchg
mov
pop
sbb
enter
mov
lock
pusha
into
cs
mov
clc
cmc
and
dec
add
rcrl
subl
jecxz
out
xor
shlb
stos
and
inc
add
sti
jnp
lahf
jl
mulb
xor
js
ss
add
test
mov
sbb
fidivrl
sar
sub
lea
mov
and
inc
loope
ja
push
movsl
sbb
and
loopw
dec
mov
xchg
push
sub
jb
inc
push
repz
mov
pushf
xchg
mov
fsubrl
sbb
add
insl
push
pop
mov
push
shl
inc
sar
jge
loopne
jecxz
sbb
rclb
mov
mulb
mov
push
inc
mov
testl
mov
push
inc
and
mov
add
dec
push
mov
icebp
add
mov
sahf
or
das
inc
popf
jne
enter
repz
mov
arpl
and
insb
pop
push
lds
ja
add
testb
popa
push
jne
fsubl
cmpsl
xchg
pop
mov
lret
push
pop
cli
js
pop
rorb
test
cmc
pop
xchg
cmpsl
cld
cmpsb
ja
inc
mov
xlat
les
mov
sub
mov
in
data16
pop
cmpsl
add
xchg
xchg
loope
jnp
sub
cmpsb
inc
and
dec
int
mov
test
stc
shlb
insl
popa
loop
fisubrs
sub
and
add
cmc
push
cmpsl
jl
and
out
roll
insb
mov
loop
xor
mov
or
push
inc
xorb
xchg
sbb
in
pop
mov
pop
mov
outsb
cmpsb
lret
sbb
sbb
mov
inc
lcall
push
sbb
scas
push
and
inc
cmc
mov
cltd
ds
stos
add
lods
pop
pop
int3
jno
jb
sub
jae
xchg
pop
xchg
sub
inc
cmp
pop
sub
mov
lahf
outsl
add
faddl
mov
adc
push
outsl
lds
std
fnstsw
push
sbb
cmpsb
mov
loopne
aad
sbbb
rorb
inc
cli
mov
cpuid
in
sub
fdivp
icebp
mov
daa
lds
jae
int3
push
sbb
sub
dec
rolb
xchg
sub
and
leave
mov
mov
sub
ret
xor
fucomi
push
add
push
lcall
int
xor
xchg
mov
ds
loop
subl
push
lret
stos
jle
fninit
push
dec
lret
fmul
cli
adc
test
pop
or
loope
dec
sub
pop
inc
inc
push
lods
dec
dec
inc
mov
inc
or
or
iret
mov
dec
push
cmpl
push
mov
xchg
shrl
call
xchg
repz
subl
gs
stc
jae
es
dec
icebp
out
lds
and
inc
lahf
ret
mov
out
push
or
movsl
int
out
scas
xchg
jmp
ffreep
push
std
divl
pop
xchg
add
mov
sub
arpl
pushf
mov
inc
add
icebp
in
xlat
xor
add
sbb
in
out
mov
sub
push
push
mov
stos
inc
dec
mov
jmp
insb
pop
adc
push
mov
fidivrs
jmp
out
inc
or
sbb
pop
inc
pop
mov
jl
ficoms
addb
out
test
int3
mov
sub
pushf
in
pop
imul
and
adc
jnp,pt
jle
pop
mov
mov
dec
pop
into
hlt
inc
fcomps
or
inc
loopne
stos
mov
inc
adcb
pop
popa
addl
sub
push
mov
divb
test
flds
mov
ss
push
mov
loope
hlt
stos
push
imul
addb
mov
cltd
scas
mov
inc
cmpl
push
fwait
enter
add
sti
jbe
cmp
jg
popa
push
xchg
mov
jge
and
mov
lea
push
lds
add
mov
push
call
leave
sbb
fsubrs
push
stos
ja
cld
and
pop
add
inc
fimuls
insl
imul
xchg
in
xchg
cld
sbb
inc
out
loope
jl
mov
ljmp
xchg
and
es
lret
jmp
dec
testb
add
repnz
xchg
in
aas
or
dec
hlt
sarb
inc
je
les
and
mov
aas
cli
sub
jne
sub
pop
push
inc
mov
add
push
out
fsubrl
stc
lret
push
dec
and
xorl
cmpsl
popa
out
or
push
sahf
and
fcomps
int3
or
fdivrl
jno
ds
or
mov
pop
xchg
jno
jb
sbb
insb
xor
mov
sub
data16
jg
cltd
dec
rol
cwtl
mov
fs
add
jbe
dec
out
or
mov
leave
out
add
cmc
int
add
mov
loop
in
cmp
and
mov
xor
xor
shrb
imul
inc
insb
sbb
xchg
lods
sbb
shlb
das
popa
jno
push
push
arpl
dec
mov
adc
loope
enter
test
imul
add
das
sub
or
lret
imul
jl
push
pop
popa
inc
shll
sub
orl
inc
xor
add
out
sub
mov
push
adc
xor
sub
shll
fstpt
js
lret
insl
lods
pop
push
sarl
scas
and
add
orb
or
inc
sbbb
cmp
orb
cmp
inc
push
js
mov
jl
out
testb
lret
xchg
xor
in
xchg
jl
pop
movsl
xchg
sbb
sbb
jg
hlt
or
cmpsl
or
bound
in
rep
push
xor
adc
test
daa
sbb
leave
push
xor
popf
and
xor
sub
lods
push
cli
xchg
stc
push
rorl
rcrl
fstl
cli
nop
hlt
data16
cmp
mov
dec
in
pop
rclb
jmp
das
sbb
push
mov
inc
xchg
sbb
cltd
stos
dec
mov
add
xchg
sbb
gs
and
jmp
jmp
mov
popa
mov
ret
lods
loope
cli
rolb
ficomps
pop
inc
subl
cmpb
lret
xchg
pop
adcb
inc
adc
test
add
push
mov
arpl
pop
and
sahf
mov
inc
or
les
xor
jbe
sub
test
mov
dec
repnz
jmp
testl
mov
popl
fwait
inc
pop
push
dec
mov
inc
sbbb
jle
xchg
loop
pop
sbb
mov
mov
repnz
ja
add
pop
xor
inc
xchg
xor
adc
mov
hlt
stos
adc
cld
mov
test
sub
jnp
and
cmp
xor
xchg
out
es
lock
mov
ss
mov
lret
mov
sub
add
jb
add
cmovbe
shll
lret
mov
mull
xchg
mov
sar
push
je
cltd
mov
and
jae
or
lea
icebp
sub
shll
sti
daa
jl
ljmp
scas
mov
push
mov
fdivs
movsb
or
cmp
push
sbb
push
or
repnz
jno
xor
add
push
or
in
test
dec
fdivl
mov
push
xchg
sbbb
inc
mov
repz
fcomps
or
jmp
xor
jnp
push
dec
sbb
jne
xor
ffree
inc
addr16
cli
mov
xchg
inc
test
xor
arpl
movsb
lret
lods
mov
jge
dec
adc
jnp
fcomp
stc
popf
loopne
pop
pop
imul
push
inc
gs
mov
mov
or
popa
adc
gs
inc
dec
cmpsl
fsubl
inc
add
fisttpll
push
add
fisttpl
or
cs
pop
rcrl
jne
lods
and
lea
stos
pop
fs
xor
push
jno
or
enter
and
aad
sbb
push
cmpsl
lds
movsl
sub
cmpsb
xchg
ljmp
cmp
sbb
leave
xchg
orl
jecxz
outsb
add
movsl
add
aad
jl
arpl
lea
jmp
jne
push
pusha
xor
scas
and
gs
ja
arpl
stos
lcall
iret
mov
push
xor
and
add
andb
push
test
mov
and
stc
xorb
nop
pop
inc
adc
insb
push
fwait
adc
and
fucomp
xchg
add
or
pop
mov
test
inc
lahf
addb
es
popf
add
mov
xchg
push
adc
mov
int3
add
and
ja
in
xor
jecxz
ror
repz
mov
icebp
jbe
jge
dec
add
popf
or
dec
and
xchg
add
lret
cltd
push
insb
sbb
xchg
adc
dec
or
push
iret
jmp
cmp
pop
adc
bswap
xor
push
and
dec
aas
push
test
rolb
pusha
pop
out
or
ljmp
scas
add
or
mulb
or
insb
sbb
loopne
int3
mov
sub
data16
mov
cli
pop
fs
jg
dec
dec
add
push
mov
mov
xchg
adcl
flds
inc
lods
dec
add
xchg
jbe
push
mov
subb
adc
dec
pop
sbb
mov
mov
or
adc
add
mov
loop
scas
fs
cmp
mov
les
sub
int3
adc
loopne
mov
pop
adc
mov
push
mov
inc
mov
inc
gs
sbb
aad
sub
mov
lret
push
imul
mov
pop
or
pop
add
dec
addr16
cmp
or
out
mov
sbb
stc
jb
mov
inc
inc
push
dec
test
mov
negl
shlb
fnsave
loopne
sbb
fidivs
push
or
mov
mov
jp
dec
jecxz
sub
test
rorb
std
lods
ljmp
data16
cld
push
cwtl
mov
mov
sub
xor
cmc
lods
mov
jns
push
lret
dec
jle
push
test
xchg
mov
dec
or
push
add
int3
dec
pop
mov
test
stos
cmpsl
lret
dec
mov
aad
iret
xchg
popa
loop
push
xchg
xchg
arpl
mov
add
push
mov
fdivrs
adc
or
mov
rcr
dec
popa
add
add
les
cwtl
ret
scas
mov
mov
aam
push
inc
subl
or
out
into
mov
cmp
dec
clc
push
sub
incl
jge
inc
mov
loop
xchg
ljmp
outsb
fwait
add
repz
pop
jecxz
stos
in
and
decl
mov
xchg
xor
fdivs
push
xchg
arpl
lock
push
popa
sbb
adc
loopne
loop
addl
stos
frstor
sbbl
insb
subb
icebp
inc
mov
sahf
ret
lcall
in
cld
in
mov
pop
ljmp
outsl
js
add
mov
jecxz
sahf
lock
cmc
push
testl
jno
xor
mov
sub
mov
jbe
jae
inc
in
rcr
imul
cmp
shlb
aaa
hlt
push
mov
jns
loope
sub
push
or
lods
push
in
cmpb
mov
sbb
mov
in
xlat
inc
mov
insb
push
jmp
imul
inc
in
jmp
gs
shlb
mov
movsb
aam
dec
arpl
adc
adc
dec
and
lret
pop
ljmp
lds
xor
scas
push
or
mov
mov
xchg
lret
adcb
shll
push
or
fstl
shlb
push
cmp
lods
shll
ds
fs
xor
stos
mov
xchg
loop
pop
cmp
cmp
or
push
push
push
fbstp
cmpsb
lahf
nop
sbb
inc
rcrl
mov
daa
pop
push
xchg
insb
dec
or
or
ret
call
mov
sbb
fwait
dec
orl
push
push
lret
adc
gs
fstpl
roll
inc
push
fsubp
mov
cmp
inc
out
inc
into
and
adcl
add
lods
mov
xchg
popf
into
loope
ljmp
and
popa
mov
push
add
cmpsb
data16
sbb
jle
or
or
popf
test
fdiv
add
sbb
mov
pop
xchg
pop
sbb
pop
inc
jnp
sub
push
aam
nop
mov
and
mov
jmp
or
call
pop
jnp
or
sbb
les
push
mov
insl
lds
fdivr
and
negl
ja
pop
mov
mov
mov
inc
mov
push
mov
add
fwait
movsl
add
dec
sti
es
dec
fdivr
sbb
shrl
dec
adc
andb
shrb
insb
add
mov
xor
inc
dec
sbb
fstl
sahf
out
pop
idivb
pop
insl
adc
loopne
jbe
jae
outsl
stos
push
inc
dec
sub
xchg
scas
ficomps
es
mov
bound
mov
hlt
orl
inc
cmova
inc
dec
outsb
sahf
add
movsb
enter
mov
xchg
sub
mov
pop
inc
mov
cmpsb
jae
pop
cmc
ljmp
cmp
mov
xchg
popf
mov
addr16
xor
shlb
lret
mov
addr16
mov
sbb
inc
ret
int3
add
sub
pop
repz
and
inc
add
repnz
lea
push
pop
out
roll
daa
lcall
gs
nop
jnp
mov
sbb
mov
cltd
popa
out
in
in
mov
mov
lds
xchg
mov
outsb
mov
jge
insb
pop
and
add
aad
sub
popf
xchg
ret
xchg
add
push
enter
in
ja
xchg
icebp
and
and
stos
test
das
mov
call
mov
push
mov
cmpsl
bound
aad
lods
jne
pop
out
cs
or
xchg
test
out
xor
cmpsb
out
mov
add
lcall
jmp
jp
dec
rcll
push
mov
push
cli
xchg
sub
adc
mov
or
mov
adcb
push
xchg
push
add
inc
mov
sbb
insb
push
pop
shlb
fdivrl
push
lcall
mov
push
xor
pop
popf
jno
pop
loope
cli
int3
lods
arpl
xorl
lods
hlt
mov
sbb
inc
or
sub
testb
das
cmpsb
sbb
es
dec
imul
mov
add
jnp
cli
and
add
fwait
mov
jmp
xchg
sbb
inc
cwtl
pop
sahf
xchg
sub
cmp
loope
mov
jl
add
dec
sbb
mov
into
mov
daa
mov
add
pop
adc
pop
loopne
andb
xor
mov
jmp
push
pop
push
lahf
dec
fmull
pop
dec
dec
fidivs
or
into
shrl
add
sub
or
push
or
ret
and
sbb
mov
xor
cmpl
jp
xorl
mov
xchg
mov
add
mov
xchg
enter
in
addl
mov
ds
add
adc
xchg
xchg
jo
adc
repnz
xchg
out
and
jbe
lods
sub
and
in
ljmp
adc
xchg
inc
sbb
and
mov
pop
adc
in
cs
pusha
xorl
xchg
push
cltd
adcb
jmp
ds
movsb
xchg
pop
or
in
push
add
ljmp
sbb
loope
scas
mov
pop
out
sbb
mov
sarl
ss
dec
push
inc
jl
jmp
inc
test
test
in
xchg
fstl
inc
sub
roll
cld
ja
leave
cmpsb
pop
out
scas
movsb
push
pop
in
mov
ja
dec
nop
sti
fdivr
into
push
cmc
adc
xchg
dec
jns
mov
rcrb
inc
scas
cmpsl
gs
les
mov
and
ds
xchg
cmp
sbb
add
xor
test
and
inc
jmp
cmp
cmc
dec
icebp
sub
ds
add
lods
xor
cmp
jp
lret
sub
fwait
jmp
int3
jns
loop
jne
mov
fs
or
push
sbb
jp
fs
leave
push
rol
xor
add
inc
fdivl
cli
xchg
mov
dec
mov
sub
or
sbb
insb
fdivr
pop
mov
push
scas
sbb
rorb
out
and
int3
je
mov
stos
jno
and
addl
lahf
jbe
and
lahf
pop
aaa
sbb
mov
mov
sbb
inc
in
jne
arpl
gs
fistpll
lock
inc
push
pminub
add
jle
jo
mov
ja
test
push
cld
iret
mov
cmp
or
stc
xchg
and
sbb
push
sti
pop
mov
lret
movsb
jo
xor
dec
cli
mov
or
add
enter
out
daa
and
inc
xor
or
or
mov
in
cli
movsl
pop
hlt
push
lcall
sub
or
mov
mov
jns
in
fsubp
sub
sbb
out
cwtl
sub
jge
mov
adc
push
scas
or
pop
in
sbb
add
ret
dec
mov
popf
or
sub
sbb
mov
xor
jmp
pop
jmp
sbb
scas
int3
or
adc
push
mov
aam
or
cmc
sbb
stos
fdivrl
clc
rcrl
cmp
mov
cmp
sub
inc
jl
xor
jb
aam
cmpsl
ljmp
push
push
or
inc
pushf
mov
mov
icebp
jmp
mov
mov
leave
jl
pop
out
add
test
xor
sub
outsl
les
jnp
int
pop
pop
sahf
out
mov
imul
mov
and
add
pop
lock
ret
mov
push
sbb
adc
ret
repnz
xlat
mov
xchg
mov
icebp
fcmovu
pusha
xchg
dec
fcomi
pop
xor
mov
je
inc
or
test
insl
pop
stos
jge
insb
mov
fwait
in
mov
lock
dec
mov
test
bound
imul
insb
sub
push
xor
or
dec
sbbl
hlt
sarl
jne
push
mov
jp
stos
mov
push
jno
add
cwtl
roll
mov
test
lods
sub
mov
in
inc
imul
push
jb
out
mov
push
cwtl
jno
mov
les
inc
pushf
mov
addb
fcomi
push
cmp
test
xor
push
cltd
push
push
xchg
add
add
or
mov
sub
jp
mov
rolb
add
cwtl
mov
mov
pusha
xchg
dec
sbb
daa
imul
cmpsb
cmp
or
or
aam
adc
leave
sbb
aaa
into
sbb
sbb
mov
movsb
out
js
add
into
addb
test
push
shrl
cli
sbb
or
icebp
inc
add
cpuid
in
jno
or
call
out
cs
pop
fwait
inc
mov
sbbb
arpl
and
lods
push
ret
jle
or
es
frstor
dec
add
ss
cmp
rcr
imul
mov
inc
and
pusha
xor
inc
insb
or
jo
mov
add
or
xchg
fdivr
or
pop
ficompl
push
addb
sub
xlat
push
pushf
out
outsb
mov
jge
ret
lds
data16
sub
push
lods
iret
pop
mov
inc
add
popf
jae
lea
aaa
or
les
fisttpll
das
mov
loopne
rcll
lea
out
sub
stc
es
subb
lock
mov
mov
xor
sub
pop
lea
and
fwait
jns
inc
jbe
fildll
scas
xchg
mov
sbb
mov
movsb
cmpsb
inc
push
mov
std
jmp
lock
dec
mov
and
aam
jnp
cmc
cld
outsl
jns
test
subl
push
loopne
inc
jmp
dec
aas
pop
outsl
pop
push
push
enter
xor
cmp
pushf
push
call
data16
popf
sub
add
inc
mov
test
or
jns
adc
push
xchg
repnz
test
fs
jp
add
movsb
pushl
sbb
int3
stos
pop
or
mov
nop
stc
xchg
in
dec
mov
cmp
lahf
inc
mov
cli
adc
cmp
roll
dec
add
sbb
in
ret
mov
inc
loopne
xchg
pop
pop
pusha
mov
or
add
sbb
loopne
sbb
subl
lock
mov
lret
lcall
shll
das
and
lds
xor
mov
or
je
adcl
fs
push
adcl
and
rcll
dec
push
insb
sbb
addr16
mov
add
ret
push
shll
sub
jne
jne
xor
lcall
and
inc
xor
ljmp
pop
push
xchg
cmc
push
dec
sarl
mov
out
add
outsl
sbb
mov
fcmove
out
outsb
push
lcall
mov
stos
jnp
sub
inc
lods
insl
call
dec
and
pushl
xchg
mov
xchg
add
dec
test
sub
mov
adc
push
xchg
add
aaa
ret
roll
xor
jbe
test
push
xor
sahf
cli
scas
xchg
push
int
movsl
insl
and
mov
mov
fisubrs
adc
mov
cmp
imul
inc
decb
in
push
jecxz
mov
inc
testb
adc
in
in
data16
iret
xchg
jl
das
and
invlpg
cmpsl
mov
and
and
mov
mov
decb
inc
roll
bound
pusha
test
stos
out
mov
push
xor
push
cmc
dec
jns
sbb
scas
or
xchg
test
pop
aam
loopne
xchg
jecxz
mov
dec
jnp
push
pop
xor
cltd
mov
lock
inc
xor
jp
sbb
jbe
add
icebp
xlat
daa
pop
lds
cmp
pop
push
and
mov
sbb
push
mov
and
pop
cmp
adcb
add
popa
ficompl
xchg
lds
test
inc
adc
and
hlt
sarb
das
push
jp
fs
cmp
xor
loopne
lds
mov
jl
mov
and
add
or
popf
repz
fidivrl
ret
sub
pop
mov
movb
or
mov
das
movsl
and
insl
mov
or
adc
pop
repz
mov
add
sbb
les
cmp
repnz
int3
or
sahf
add
dec
inc
inc
cmc
or
sbb
add
pop
psubw
sub
push
add
js
leave
mov
out
rol
pop
or
cli
cwtl
add
nop
xchg
inc
pop
mov
or
test
add
xlat
mov
ja
popa
or
mov
sbb
cmpb
push
mov
loope
fldpi
lretw
mov
mull
mov
out
sbbl
xlat
ljmp
sbb
push
je
add
mov
xchg
ljmp
xchg
dec
sahf
pusha
loop
cld
dec
inc
inc
and
xchg
rcrl
xchg
dec
sub
mov
fidivrs
xchg
add
ljmp
mov
sbb
or
ljmp
inc
jo
pushf
lret
sbbl
xchg
cmp
push
add
pop
mov
imul
test
test
shll
jge
dec
lret
jno
jnp
mov
xlat
inc
testb
loope
or
sahf
sbb
add
cmpb
roll
imul
sti
cwtl
pushf
or
fdivrl
fildll
dec
call
cmp
inc
push
xlat
scas
sub
cmpsl
rcrb
push
nop
xchg
test
sbb
mov
ja
lret
ljmp
xchg
roll
adc
fs
pop
js
cli
es
imul
notl
dec
xchg
insl
sbb
addr16
and
adc
push
jno
dec
out
lret
scas
enter
outsl
mov
pushf
pop
sub
mov
pop
push
add
push
dec
lcall
push
lods
jae
push
in
test
add
imul
es
pop
fmull
pop
pop
out
lcall
rclb
inc
test
mov
push
inc
pushf
jne
add
test
inc
xchg
fidivl
cld
popa
cmp
popa
cmpl
or
add
mov
sbb
mov
repnz
sbb
pop
aas
lcall
bound
das
mov
shll
mov
repnz
call
push
mov
repz
or
dec
rclb
push
out
data16
das
jp
pop
or
adcb
in
ret
inc
xor
xor
xor
inc
scas
mov
popa
mov
in
daa
xor
push
es
adc
daa
test
jl
jge
mov
jbe
dec
andl
sti
add
xchg
int
movsl
dec
xchg
fisubs
jbe
daa
pop
or
mov
pop
fwait
aaa
sub
lds
push
and
xchg
dec
dec
or
pop
orl
or
sub
jnp
test
mov
stc
filds
aam
or
lods
das
outsb
mov
mov
pop
push
mov
mov
adc
adc
imul
sti
mov
jp
sarb
push
addr16
push
loope
dec
lods
mov
inc
jp
incb
daa
ljmp
insl
and
or
cmp
js
adc
dec
test
push
mov
inc
sbb
dec
mov
movsb
and
repnz
mov
add
mov
push
add
sbb
outsb
mov
int
mov
fs
fwait
push
pop
inc
jns
jle
cwtl
push
sub
mov
pop
test
sti
xchg
mov
pop
sub
scas
cmpsb
rolb
jno
test
xor
fisttpl
rorl
pop
sahf
mov
xor
cmc
sbb
fisubrs
sub
xor
inc
cmp
inc
mov
jl
test
int3
xor
cmpsb
push
or
xchg
stos
mov
test
jp
movsb
inc
pop
push
jecxz
dec
fldt
pop
jne
pop
cs
mov
lret
push
cmp
push
dec
fs
fisubrl
loopne
jp
inc
push
pop
push
mov
fsincos
add
push
and
sbb
inc
dec
aaa
popa
lret
data16
fsts
or
mov
dec
cwtl
xor
lahf
cmp
adc
fucomp
scas
fs
push
shlb
push
adc
call
sub
cs
les
mov
dec
xchg
mov
add
in
call
add
insb
sbb
sbb
jge
popf
xchg
popa
or
outsl
add
pop
push
jge
ret
mov
test
out
sbb
push
push
jge
into
dec
lret
stos
pop
sbb
mov
gs
jle
fnstenv
add
push
sub
cmp
rclb
xchg
add
addr16
dec
mov
ret
daa
imul
sub
cwtl
jecxz
nop
jbe
mov
sub
movsl
outsb
xchg
pop
xchg
push
in
sarb
out
inc
mov
shr
mov
orb
fsubs
fdiv
mov
callw
push
pop
fisubs
push
or
mov
sbb
repz
adc
inc
fwait
or
cmp
dec
ror
add
out
loopne
jne
sbb
sti
fdivrs
imul
ljmp
ror
jp
roll
pop
and
dec
push
sbb
mov
dec
dec
cmpsb
dec
out
or
rol
xchg
outsl
mov
imul
test
xor
push
hlt
add
scas
push
jb
cmc
notb
mov
push
stos
xchg
sbb
fwait
or
cmp
outsl
sbb
push
insb
sbb
sub
test
test
push
dec
lock
mulb
sarl
pop
mov
sbb
add
push
cld
jl
jne
push
push
add
xchg
dec
xchg
popa
sahf
fcmovu
and
adc
sbb
sti
inc
push
leave
xchg
inc
xchg
inc
add
loop
loopne
cmp
push
pop
aam
jbe
add
mov
sub
cmc
sub
dec
mov
xchg
dec
xor
mov
insb
sub
jl
cmp
sub
outsl
add
push
insb
shlb
cmc
sbb
sbb
xchg
jecxz
jns
xchg
daa
mov
inc
jbe
push
gs
inc
in
mov
xorl
add
jo
fisttpll
xchg
icebp
push
jge
insb
add
push
or
jl
fcomps
int3
and
inc
ret
or
or
int
adc
bound
mov
incl
ss
lock
or
sbb
add
sahf
fs
daa
sbb
mov
in
orl
les
insl
in
outsl
jp
ljmp
adc
dec
and
imul
jb
ljmp
cmp
mov
addr16
test
subb
lcall
adc
xlat
mov
in
mov
xor
jecxz
xchg
xchg
jae
ret
jmp
test
sub
sti
fs
sub
out
jnp
mov
mov
cmpsb
mov
jle
push
jb
movhps
jne
push
sbb
loopne
std
enter
fcomp
cmpsl
pop
dec
test
add
jne
jmp
mov
out
sbb
cmp
shl
sbb
lretw
int3
imul
jo
adc
in
decl
jnp
dec
lahf
cmpsb
aam
icebp
aam
adc
in
popa
mov
mov
sbb
std
outsl
jp
push
xor
data16
into
jne
cwtl
jmp
mov
ret
repz
les
mov
jnp
add
ror
mov
or
pusha
xorl
pop
jb
add
pushf
sbb
add
sti
bound
loope
jl
add
addr16
in
and
sub
fucom
push
movsl
sbb
xor
xlat
cli
xchg
das
pop
push
mov
inc
xchg
inc
cltd
outsl
mov
or
mov
cmpsl
sbb
js
mov
mov
cs
and
cmp
out
std
adc
pop
scas
daa
fwait
mov
lds
cwtl
mov
mov
push
push
xor
adc
loop
icebp
ret
iret
incl
outsb
gs
loopne
pop
sbb
sub
shl
mov
imul
insb
xchg
jge
enter
push
jns
inc
lods
or
or
push
out
xchg
xor
push
push
sbb
test
into
iret
xor
jp
shl
xchg
xchg
test
inc
daa
in
in
push
lock
movsb
out
inc
in
aad
ret
add
int3
xchg
inc
das
or
xchg
faddl
mov
cmp
or
lods
mov
mov
mov
gs
inc
pop
xchg
inc
add
pusha
lahf
xchg
mov
inc
inc
int
push
imul
test
in
sbb
sub
sbb
add
aaa
mulb
bound
into
cmp
call
jmp
pop
enter
xor
rcrl
jge
jg
mov
in
sbb
cld
mov
lods
push
and
adc
cmpl
xchg
leave
add
push
orb
std
bound
jno
dec
sub
xchg
clc
xchg
cmc
add
pop
fidivrl
push
dec
xor
insb
pop
int
in
dec
shlb
mov
shr
aas
cmpsb
mov
popa
cmp
in
out
inc
mov
cmp
cmpsl
orb
mov
stos
or
pop
lcall
sbb
data16
push
das
and
dec
addr16
mov
xchg
sbb
sbb
jno
lods
inc
adc
bound
mov
sbbl
fadds
inc
xchg
dec
jp
out
lods
mov
js
loope
mov
aas
inc
fdivl
mov
inc
lsl
sahf
cwtl
jge
sub
nop
pop
sbb
sbb
out
ror
icebp
fs
mov
faddp
sbb
jo
scas
sub
dec
sub
jae
mov
fdivrl
jecxz
inc
push
jnp,pn
cmc
sub
jmp
leave
out
loope
ljmp
jae
jb
aaa
leave
dec
lods
daa
scas
jo
mov
xor
jg
cltd
push
xchg
rclb
jno
mov
add
jbe
test
xchg
sbb
push
pop
enter
jge
mov
adc
and
movsb
pop
jb
mov
mov
ja
add
push
pusha
fidivs
mov
stc
xchg
fisubrs
mov
mov
lret
mov
aad
repz
into
in
dec
daa
adc
sarb
cwtl
pusha
setge
das
int3
aas
pop
add
pop
icebp
in
ja
inc
lahf
rcll
jae
add
push
xchg
sbb
push
mov
lods
jno
mov
notl
sub
or
add
inc
pusha
addb
push
inc
dec
fs
std
ret
das
jno
push
sbb
mov
mov
sbb
addb
sbb
jnp
mov
into
xchg
mov
sbb
xlat
jae
dec
add
jge
pop
xorl
xor
loop
les
push
aas
inc
cmpsl
jb
push
or
mov
xor
test
and
roll
dec
pop
jmp
sub
out
mov
xchg
repz
sub
mov
ret
push
outsb
dec
xchg
cwtl
push
cmc
popa
fsts
pop
cmp
int3
pop
rolb
scas
sar
adc
pusha
ret
ret
nop
push
push
scas
jne
dec
cmpsb
out
aad
jecxz
push
lds
or
in
jne
jmp
pop
mov
and
cltd
ret
sub
pop
jl
cmc
inc
push
inc
adc
orb
push
inc
test
pop
add
repnz
scas
fsin
arpl
cltd
rolb
sub
andb
in
out
dec
nop
sbb
repz
addl
mov
lcall
outsl
addb
mov
cmp
aam
fs
dec
pop
cmc
sbb
scas
sarl
iret
sbb
pop
adc
fwait
stos
lods
sbbl
leave
fiadds
inc
out
push
mov
cmp
in
iret
mov
fcoms
push
lods
imul
addb
dec
int3
push
mov
test
outsl
mov
and
aad
dec
push
leave
rolb
xchg
sbb
fbstp
or
jae
mov
cmp
sbb
mov
xlat
push
cwtl
loope
xchg
jnp
push
repz
in
or
loopne
cmc
fsub
push
shlb
or
pop
cwtl
lds
or
movb
adc
and
scas
pop
pop
sub
out
fcmovu
mov
sti
cmp
push
inc
rorb
lcall
push
xor
push
sbb
jne
push
push
das
mov
xchg
lods
lea
daa
cmp
inc
fcoml
push
push
inc
call
xor
roll
bound
mov
or
or
jnp
adc
insb
ja
sub
jmp
stc
pop
or
imul
xchg
xor
add
xlat
shlb
test
pop
hlt
xchg
out
pop
outsl
sub
cmpsb
push
cmpsl
ret
xchg
add
test
push
sbb
xor
ss
cmpsl
push
scas
dec
in
sub
addl
mov
xchg
fists
sbb
push
rcrl
dec
mov
mov
flds
in
mov
push
cmp
dec
pop
imul
popf
int3
xor
das
and
sahf
mov
cmc
pop
or
sub
scas
arpl
aam
icebp
fildl
or
sbb
cli
ja
lock
loopne
push
xchg
addr16
xchg
inc
add
enter
icebp
leave
fcoms
inc
lds
inc
in
inc
add
outsl
pop
ret
push
int
sub
dec
and
sbb
lret
shl
push
or
jno
or
out
es
into
push
fadd
rorl
pusha
add
insl
in
into
sbb
mov
xor
push
gs
inc
stos
into
pushf
movsb
pop
mov
cli
lret
jb
dec
add
lret
cmovl
pop
mov
or
push
popa
incb
or
push
cmpsb
sbb
fdivrs
jmp
test
adc
les
ret
jle
in
xlat
inc
jle
pop
push
push
es
mov
aas
call
js
test
cmp
pop
testb
add
mov
gs
test
sub
test
cmpsl
shll
sarl
pop
inc
jge
sbb
dec
ficomps
push
loope
pop
ss
or
xor
loopne
mov
ror
in
and
gs
repnz
int3
call
cmpsl
sbb
mov
lahf
cmp
mov
or
and
dec
jne
cmp
jmp
ret
ds
or
scas
jge
int
or
sbbb
dec
jge
mov
push
mov
sub
xor
nop
pop
dec
pusha
xchg
data16
mov
pushf
pop
addr16
add
mov
lds
dec
mov
mov
pop
xor
xchg
jle
adcb
test
imulb
leave
lods
mov
xchg
jp
push
dec
inc
sub
jno
lcall
push
and
out
call
xchg
jnp
repnz
faddl
jecxz
dec
xchg
rorb
sbb
cmpb
jo
jp
push
adc
push
dec
lcall
lret
add
xor
mov
out
repz
pop
arpl
cld
add
loope
sbb
jbe
jno
data16
lods
in
incl
xor
aad
je
xor
in
into
push
xorb
inc
rcr
push
jne
mov
jno
push
mov
pop
jns
jp
or
lret
sub
pop
fwait
imul
stos
stos
push
shlb
or
popa
add
add
pop
and
in
in
jbe
mov
inc
push
lahf
jb
sahf
pop
lahf
mov
divb
push
pop
ljmp
lret
push
cli
mov
jl
mov
sub
inc
call
mov
movsl
pop
add
sbb
jl
inc
or
sahf
mov
pop
xchg
out
dec
push
dec
fcomps
xchg
fdivs
xchg
ss
ret
scas
addr16
orl
mov
rcrb
push
out
mov
test
icebp
lock
mov
jl
dec
inc
movl
xchg
enter
pop
lcall
pop
sbb
rorb
fcoml
xchg
xor
dec
stos
xor
inc
push
mov
and
int
push
fwait
cli
cmp
jo
add
shrl
std
cltd
fidivrl
addb
or
dec
loopne
or
mov
jae
xorb
push
cmpsb
fsubs
pushl
cmc
xor
cmpsb
gs
stos
andb
sbb
ret
inc
hlt
add
add
outsb
idiv
or
subb
mov
mov
and
test
sbb
out
loopne
sbb
mov
adc
push
mov
test
and
mov
dec
push
xor
iret
pop
sbbl
cltd
add
cmc
xchg
in
inc
add
add
jne
sbb
push
dec
int3
add
or
inc
pop
jp
pop
push
pop
adc
or
inc
mov
mul
out
jne
push
dec
fstl
fdivr
cmpsl
shrb
std
aad
cmp
inc
mov
mov
mov
inc
decb
cmp
jne
lock
in
jmp
mov
loope
subl
cmpsb
mov
jge
sbb
push
mov
dec
loop
push
lcall
mov
adc
mov
lods
mov
mov
push
sub
popa
lock
aas
xor
fs
adc
les
ret
decl
or
mov
out
sub
mov
testb
or
lea
inc
lret
cwtl
adc
pusha
cli
and
or
icebp
pop
jle
add
imul
pushf
in
fidivrl
inc
repnz
jp
jae
nop
icebp
std
stos
enter
out
inc
xchg
call
test
gs
rcll
mov
loopne
lret
aaa
sub
sbb
sub
sub
ret
imul
test
call
jb
inc
jnp,pt
orb
int3
jge
mov
ja
sub
add
xlat
pop
dec
jb
sub
into
inc
fisttpl
xor
je
jb
mov
sbb
pop
push
lahf
in
push
xor
lahf
dec
pop
mov
sbb
fimull
nop
scas
mov
lret
jmpw
dec
xchg
lods
add
sub
add
or
mov
fisubs
lock
cli
test
sbb
hlt
popa
out
add
inc
scas
jle
inc
jl
or
popf
cmc
fdivl
popa
pop
sbb
jl
push
mov
cmp
mov
sti
js
sbbb
out
mov
sbb
lock
inc
dec
cld
loope
testb
fcoms
ror
lods
jle
lods
adc
outsb
or
pop
cs
push
aad
roll
mov
gs
xor
mov
dec
movsl
mov
ljmp
jno
cs
rcrl
mov
xchg
sub
mov
adc
ss
or
xchg
sbb
dec
cmp
jle
adc
jp
addr16
or
cltd
das
cld
push
adc
xchg
std
jne
xor
cwtl
sahf
push
adc
adc
test
xor
aam
push
imul
pop
loopne
pushf
or
push
loopne
mov
dec
loope
sub
or
mov
jnp
cmpsb
repz
add
jle
or
in
xor
enter
out
sub
xchg
push
mov
add
sbb
jns
sbbb
ror
and
push
nop
or
pop
dec
dec
iret
jbe
xchg
push
into
movb
in
mov
mov
fimull
xchg
popa
mov
lret
mov
sahf
jecxz
lea
js
pop
testl
stc
insl
sbb
mov
sbb
repz
ret
jns
pop
jbe
shll
dec
fnstenvs
cltd
lcall
push
mov
roll
xchg
sbb
cmc
sti
and
fimull
mov
pop
aaa
in
pop
sbb
inc
mov
mov
sub
addr16
or
sub
push
push
sarl
add
sbb
ja
leave
mov
popa
iret
pop
insl
ljmp
xor
inc
out
adc
dec
shlb
push
inc
and
dec
imul
mov
xchg
scas
cld
and
fildll
jne
pop
sbb
flds
inc
adc
add
cmp
mov
push
int
int3
sbb
in
push
xor
xor
pop
shrb
int
aam
lock
mov
ja
and
adcl
lcall
or
stc
inc
sar
mov
scas
jne
fstpt
mov
andb
push
dec
faddl
imul
mov
sbb
dec
in
dec
fsubs
push
xchg
pop
stc
pushf
add
std
add
aaa
pop
cmpsl
aas
jne
fcom
fisubrl
out
notb
jno
sti
push
or
out
push
cmc
xor
cmp
jb
adc
sub
and
jnp
in
jbe
fidivl
and
lcall
fstpt
sbb
xlat
out
cmpsb
insb
imul
adcb
mov
pop
push
imul
mov
push
sub
xor
sub
push
sbb
jno
out
les
stc
flds
jnp
jle
fisttpll
int3
add
push
push
mov
mov
int3
mov
and
dec
or
mov
in
cmp
cli
mov
inc
jl
mov
iret
cmc
push
add
test
pop
icebp
out
sbb
in
and
add
pop
lods
dec
cli
jg
gs
lcall
push
int3
lea
out
cmp
lcall
sub
stos
test
add
jo
sbb
sbb
sbb
adc
inc
sbb
fstpl
and
push
fs
dec
outsl
sub
lea
arpl
inc
jno
imul
pushf
aad
pop
into
movsb
fs
pop
dec
jne
in
pop
rcrb
dec
mov
lcallw
pop
fcomps
shufps
pop
idivl
lods
loope
sbb
imul
ror
xchg
xor
sbb
sbb
incb
sbb
pop
sbb
jge
rcll
icebp
loope
or
fnstenv
je
inc
cltd
enter
mov
stos
and
sbb
test
push
dec
idiv
mov
add
popa
ret
fs
mov
or
aas
xor
fnstsw
loop
jno
out
data16
push
jl
adc
das
dec
adc
ljmp
mov
sbb
sbb
jno
jno
fisubrl
popa
cmp
inc
addr16
sbb
fcompl
inc
leave
xor
stos
testb
add
jp
arpl
les
add
xor
push
mov
int
adcb
or
mov
clc
popa
mov
imul
xchg
sbb
popf
or
cwtl
es
and
fstl
gs
xchg
jbe
out
ret
test
push
jge
nop
dec
cmp
fidivrl
sbb
sub
push
or
cmpsl
pop
push
sbb
insb
dec
sahf
ljmp
pusha
jecxz
adc
fwait
cmpsl
sub
in
xchg
sbb
adc
out
pop
clc
mov
pushf
mov
in
jle
pop
inc
ss
ds
mov
add
xchg
mov
cmp
cmp
data16
sbb
mov
sbb
in
dec
inc
and
test
into
loope
mov
imul
add
fimuls
out
fs
mov
or
xchg
pop
push
or
add
pop
xchg
int3
sbb
fsubl
or
mov
cmp
addb
inc
cmp
adc
in
cmc
sub
pop
cmc
sbbb
mov
testl
push
pop
nop
incb
icebp
sbb
scas
push
mov
sbb
inc
pop
sub
add
aaa
sub
xor
icebp
shrl
faddl
mov
int3
mov
jp
dec
mov
jmp
repz
sbbb
scas
into
add
outsl
stc
xor
pop
fcompp
xchg
xchg
test
pop
cmp
add
mov
jb
outsb
fisttpl
push
push
push
fwait
stos
sub
sbb
mov
pushf
in
imul
shl
jge
jno
cltd
push
mov
sbb
int
jecxz
add
fsubp
xor
add
outsl
mov
dec
pop
mov
repz
jne
imul
imul
pop
pop
cli
xchg
mov
inc
and
inc
dec
jno
js
jns
xorl
ret
repz
add
add
outsl
push
dec
outsb
pop
sub
sarl
sbb
and
lods
add
repz
add
sahf
out
movsl
xchg
cmp
sahf
inc
push
or
push
mov
xchg
adc
iretw
mov
xchg
nop
mov
dec
leave
cmc
add
pushl
xorl
cmp
int
cmc
loope
fcmovnbe
xorl
and
into
repz
int3
dec
inc
add
test
mov
cmpsb
push
imul
adc
mov
das
mov
aaa
sbb
outsb
in
out
sbb
inc
fucomp
cmp
mov
and
or
xchg
test
lods
cld
outsl
inc
mov
ss
inc
sbb
add
int
loopne
push
mov
dec
int3
pop
into
mov
sub
add
jne
loop
sub
fdivl
or
adc
inc
mov
or
adc
loop
stos
xor
adc
cmp
push
adc
in
push
mov
jns
fimuls
enter
pop
les
xor
dec
repz
xchg
add
pop
scas
pushf
imul
out
sbb
shrb
rcrb
loope
mov
xor
rcrb
test
mov
incb
sahf
insb
push
inc
imul
fstpl
pop
and
jnp
push
sarb
jbe
test
or
add
arpl
sbb
bound
out
add
out
repnz
repz
pop
jb,pn
sbb
cmp
add
push
add
mov
ds
aaa
popa
sbb
shll
jmp
sbb
xorl
mov
shr
cmpsb
sbb
outsl
nop
popf
cmp
cltd
adc
pop
in
xor
xchg
mov
add
aam
imul
nop
mov
adc
mov
and
js
int
scas
popf
pop
or
add
ja
out
pop
dec
mov
icebp
and
jmp
icebp
sbb
jge
lea
add
sbb
jns
lret
das
subl
popf
xchg
in
xchg
pop
mov
movsb
and
cmp
jl
nop
push
es
mov
cwtl
sub
iret
xchg
and
loope
push
mov
lcall
cld
inc
stos
xchg
mov
xor
inc
sub
mov
outsl
mov
sbb
insb
inc
aaa
add
insl
in
jp
push
and
cmp
mov
dec
sbb
push
add
sbb
jl
and
data16
xchg
cmc
pop
mov
sbb
mov
ss
icebp
in
fwait
mov
mov
jmp
push
out
push
imul
sbb
stos
sbb
mov
push
mov
push
scas
xchg
xchg
dec
lcall
cwtl
mov
lret
ffree
sbb
push
lea
pop
push
dec
cmp
test
mov
loope
dec
and
lahf
in
loope
fnstsw
cmpsb
ss
pop
adc
aaa
sub
dec
and
sbb
cwtl
xchg
or
add
mov
stc
mov
add
and
push
in
cmp
jl
mov
or
jo
lret
xchg
inc
add
bound
aad
insb
jle
test
int3
sub
cmpl
mov
out
out
cltd
inc
pusha
push
or
dec
mov
add
scas
je
popa
daa
pusha
ja
lea
xchg
gs
mov
or
mov
roll
sbb
ja
arpl
add
dec
sub
outsb
xchg
push
out
mov
add
bound
xchg
popf
in
out
loope
imul
mov
fcoml
xchg
xchg
jne
push
cmc
push
cmpsb
mov
add
xchg
pushf
sub
pop
out
gs
mov
mov
enter
pusha
div
ljmp
fmull
jp
stos
mov
rcll
inc
mov
xor
pop
push
dec
lock
sbb
pusha
in
popf
push
or
loope
imul
test
into
ret
mov
mov
mov
jge
adc
pop
ljmp
fimuls
sbb
aas
cmp
xor
mov
mov
imul
inc
mov
sub
dec
popf
aam
dec
pushf
retw
add
loop
dec
test
fisubrs
in
pop
lahf
push
fnsave
hlt
lahf
out
les
push
mov
sbb
arpl
addl
xor
sub
push
sub
inc
gs
sub
sbb
and
cltd
adcl
jb
pop
sbb
cmp
xchg
or
inc
jge
lods
notb
and
push
mov
sbb
add
sub
inc
inc
jo
out
mov
sub
xor
cmpxchg
mov
push
int
lahf
lods
pop
jne
push
mov
out
jno
mov
sub
push
inc
lods
adc
sbb
jne
jmp
pop
popa
push
xchg
lahf
add
mov
cmp
leave
cmp
xchg
popa
dec
stos
cmpsl
or
sub
lock
xlat
sub
inc
jne
jl
in
lods
sbb
pop
arpl
dec
push
mov
jnp
gs
inc
daa
outsl
push
notb
loopne
xor
mov
movsl
add
cmp
sarb
dec
pop
stos
loope
mov
ja
pop
idivl
inc
cmp
mov
push
sarb
jl
arpl
add
mov
mov
cmp
push
lods
aas
push
sbb
test
fsts
das
data16
inc
pop
insl
cmp
scas
xchg
ret
ror
and
push
and
add
lcall
lds
sarl
test
jne
add
addr16
int3
fadd
lea
js
adc
push
loop
lea
orb
andl
cmpsl
push
or
inc
aas
push
and
enter
push
sarb
lods
add
rolb
fildl
das
or
add
mov
sbb
and
dec
stos
clc
dec
jle
sti
outsl
jbe
inc
cmp
scas
adc
sbb
popf
loope
jp
les
outsl
xor
jae
sti
addb
cmp
mov
mov
les
mov
mov
cmp
jle
je
into
cmp
xor
xor
roll
test
push
dec
sub
xchg
movsl
out
lret
mov
popa
stos
fimull
jg
mov
xor
and
mov
xor
sbb
jb
xor
fdivl
rorl
mov
in
add
jle
inc
aas
mov
in
mov
jno
xchg
inc
jg
subl
sbb
icebp
data16
sbb
inc
dec
sub
mov
cltd
mov
lret
jb
xor
jge
js
hlt
lock
fwait
xor
mov
push
ja
out
in
push
xor
gs
jmp
stc
mov
test
mov
fcomps
cmp
push
mov
add
or
aas
xlat
push
aas
iret
cmc
insb
push
aad
sbb
and
test
insl
in
loop
fstl
sarb
mov
mov
test
add
pop
xchg
subb
pop
stos
cmc
mov
fidivs
xchg
inc
stos
xchg
sti
pushfw
sub
jg
jle
jns
jbe
sbb
xchg
dec
inc
inc
addb
stos
ja
cmc
sub
pop
dec
push
or
jne
or
cmpsb
sbb
lret
icebp
push
or
popf
ja
push
rcl
les
mov
cmpsb
mov
sub
xchg
mov
or
scas
int3
pinsrw
mov
dec
sub
test
sbb
lods
mov
inc
push
xchg
pop
push
sub
stos
lret
int
lock
xlat
arpl
stos
jo
stc
lock
mov
aam
aaa
or
sub
ret
push
or
mov
int3
cltd
insb
pop
dec
in
xchg
outsl
notb
test
repz
sub
lds
or
cmp
mov
lods
aaa
aam
sbb
push
out
cmpsb
mov
fnstcw
cmpb
xchg
fldl
xor
shl
pop
cwtl
sub
pop
or
sub
add
fwait
sbb
or
fstpl
fstpt
stos
dec
imul
inc
inc
push
xor
orl
arpl
xchg
sub
cmpsl
cli
jmp
mov
stc
data16
pop
fistps
mov
add
inc
icebp
adc
fimull
xchg
stos
xchg
aad
pop
jne
stos
insl
test
test
pop
xorb
push
roll
incl
stos
pop
repnz
outsb
jge
arpl
pop
ret
in
aaa
cld
jp
dec
jmp
test
push
mov
loope
mov
mov
mov
gs
sub
xchg
test
mov
loope
xor
dec
leave
lret
sbb
daa
cli
push
or
push
mov
sub
pushf
loopne
inc
or
rcll
fsubl
in
xor
ficompl
mov
adc
cmp
out
fsubl
sbb
pop
in
xor
xchg
negb
pop
jbe
shl
pusha
lret
into
mov
dec
lea
into
decl
cmp
lods
test
mov
sub
sbb
nop
mov
lcall
js
mov
in
addr16
out
roll
shl
test
xchg
sub
inc
sbb
xor
aas
fldt
cmc
jge
das
clc
pushf
adc
mov
add
lret
and
and
lret
idivb
shll
enter
out
cmp
dec
xchg
scas
mov
sbb
into
mov
add
push
inc
sub
addr16
xchg
cs
sbb
sub
mov
mov
dec
fistpll
jge
cwtl
jle
pop
clc
adc
push
fcoml
push
test
loop
mov
lock
push
sbb
loope
jmp
add
ret
sbb
repnz
mov
popf
jae
push
jmp
xor
les
popa
nop
push
aaa
inc
imul
dec
inc
filds
or
lock
jp
test
jbe
inc
dec
popa
into
dec
pop
popa
pop
jge
jg
push
mov
negl
add
test
insl
addr16
mov
test
xor
pop
mov
xor
ja
outsl
dec
lock
jnp
mov
cmc
xchg
repnz
addr16
mov
xor
jp
or
das
push
dec
sub
enter
add
mov
push
aas
xor
and
xchg
loope
xor
std
xor
das
pop
mov
jmp
cmpsl
xor
lret
lods
add
insb
xor
and
jp
push
pop
subb
sahf
mov
jmp
or
pop
mov
sub
dec
or
add
gs
out
mov
sar
xchg
loopne
xchg
pop
push
mov
ret
pop
adc
into
icebp
data16
xor
adcl
adc
inc
pop
jns
fcompl
sbbl
shlb
push
sub
sub
lods
rorb
in
in
out
dec
push
insb
out
ja
mov
sbb
popf
mov
or
sbb
add
xor
dec
pop
push
cli
arpl
mov
sub
mov
loop
mov
add
add
sbb
andl
mov
inc
dec
xchg
jecxz
add
cltd
popf
mov
push
jae
shll
mov
xor
cwtl
enter
adc
shlb
rorl
stos
cmp
push
push
mov
push
out
push
pop
sub
pop
repz
jnp
ret
jg
dec
daa
mov
sub
mov
inc
int3
in
jmp
fbld
sub
xchg
mov
xor
gs
jmp
out
sbb
push
xchg
cmpsl
addr16
test
popf
mov
loope
sub
and
xchg
orb
bound
and
cmp
mov
dec
push
push
adc
mov
addr16
or
into
pop
ud2
loope
std
hlt
sbb
movsb
or
aam
and
pop
inc
repz
mov
stos
lcall
push
ffreep
js
sbb
jns
jbe
mov
pop
sarl
movsb
dec
pushf
inc
or
in
call
mov
dec
sbb
scas
daa
mov
nop
inc
mov
or
inc
jmp
dec
inc
push
add
pop
stos
sbb
andl
int
lea
jnp
adc
lcall
mov
sbb
mov
push
int3
fsubrs
in
jmp
inc
xor
mov
fwait
std
push
jne
lock
ja
dec
ja
mov
sbb
jge
enter
xchg
pop
andl
in
mov
pop
xchg
stos
push
inc
push
cmc
hlt
shlb
repnz
add
add
xchg
in
ret
lds
or
add
aam
inc
cmc
push
mov
xchg
sub
or
push
inc
xor
fwait
xchg
repz
sahf
inc
out
mov
scas
xor
insb
cmc
cmpsb
fsubrs
mov
movsb
iret
sbb
pushl
adc
pop
xchg
ljmp
dec
adc
jbe
inc
cmpsb
xor
movsb
lcall
push
cmp
imull
ret
add
sub
int3
xchg
sub
xor
ds
data16
mov
inc
test
or
and
test
insb
inc
rorb
sbb
cld
rcl
cli
aas
pop
mov
adc
sbb
or
jo
dec
push
insb
mov
sub
jbe
ds
lcall
xor
repnz
lahf
push
or
mov
out
add
fldt
lds
mov
int
mov
cli
outsl
pop
repnz
mov
pop
and
js
jne
stos
insl
mov
sub
sub
sbb
bound
and
mov
add
aas
rclb
and
imull
scas
mov
data16
fbld
push
fists
jecxz
inc
or
inc
push
sbb
push
mov
idiv
cltd
les
data16
mov
add
push
inc
mov
sbb
imul
cs
or
jne
fldt
in
pop
pop
jo
or
and
fadds
push
out
loope
xchg
cmpsl
lret
cmp
shld
xchg
pop
addr16
mov
pop
xor
adc
add
jns
sti
popa
mov
test
lods
pop
sub
bound
sub
ret
pop
sbb
data16
sub
xor
sbb
push
js
fsubs
or
in
pop
mov
or
jnp
popa
jne
adc
data16
xor
xchg
loopne
aas
inc
mov
mov
push
jecxz
xor
gs
idivb
outsl
arpl
scas
stos
sub
fld
jo
in
push
adc
or
stos
inc
and
movsl
lods
mov
mov
mov
push
imul
pop
mov
jbe
fs
mov
jmp
cmc
mov
sbb
shl
add
or
aad
dec
inc
scas
pop
sbb
jecxz
hlt
inc
test
mov
cld
jbe
scas
add
jb
js
hlt
gs
aad
sub
push
add
mov
fnsave
aas
clc
jb
or
add
or
xor
fdiv
adc
je
xor
mov
adcl
pop
cmp
clc
mov
pusha
scas
pop
pop
jne
cli
dec
dec
ljmp
cltd
cmp
push
jne
push
lds
jle
ss
and
mov
int
pop
pop
fs
lods
adc
mov
xorl
jns
xor
and
lock
or
jne
js
pop
xchg
push
sbb
testl
add
mov
add
inc
jns
mov
inc
mov
sub
or
pushf
inc
sbb
lahf
dec
in
movsb
lods
lret
pop
insb
lcall
pop
mov
in
cwtl
icebp
andl
fistps
insl
mov
rolb
ffreep
cld
aaa
scas
jmp
je
dec
lods
xchg
add
sbb
rorl
add
mov
pop
push
ljmp
jo
rcrl
mov
enter
jnp
and
adc
fnsave
cmp
sbb
fwait
ret
nop
pop
rclb
mov
mov
popf
sbb
adc
xlat
cmp
into
mov
sub
insl
add
jp
outsb
pop
adc
leave
mov
hlt
add
addl
inc
roll
sbb
pop
clc
mov
loopne
mov
insl
out
jl
gs
jl,pn
addb
jae
inc
mov
add
stos
cs
sbb
adc
cmp
inc
sbb
cltd
xor
mov
stos
add
fcomps
sub
sbb
cmpsb
and
pop
mov
lret
out
dec
std
and
inc
xorl
fcompl
cmpsb
das
outsl
mov
icebp
repz
jne
xor
dec
or
loope
xlat
lret
mov
mov
pop
addb
xchg
lea
add
loopne
fwait
dec
loope
or
negb
sub
push
cmpsl
xchg
xchg
xchg
push
out
cmp
icebp
xchg
add
sbb
aaa
inc
frstors
ret
testl
push
jno
faddl
mov
jg
and
nop
je
xor
push
push
fdivrp
dec
rclb
cltd
frstor
mov
xchg
pop
pushf
aas
jmp
cmp
dec
aad
imul
inc
ljmp
push
ljmp
and
mov
xchg
or
mov
inc
loope
pop
icebp
daa
sti
addl
mov
lcall
or
sub
push
out
cmp
cmp
push
push
jbe
jle
xchg
jnp
repz
xor
fdivr
sti
jne
negb
mov
divl
test
xor
subl
sarb
push
adc
ret
popa
cmp
cmpsb
sub
sbb
jnp
add
cmpb
mov
add
mov
fnsave
or
pop
ret
add
sub
and
sub
sub
mov
sbb
xchg
sti
mov
pusha
bound
push
adc
add
inc
ret
pop
xlat
mov
push
jge
pop
sbb
out
inc
pop
or
adc
loope
or
or
add
ret
inc
test
ja
xchg
inc
mov
fs
scas
sub
mov
sti
in
adc
ret
push
loopne
dec
pop
pop
popf
cmp
lcall
push
dec
aad
add
lret
cmp
movsl
push
pushf
dec
push
mov
push
or
leave
jo
mov
repz
sub
pop
gs
push
xor
jle
int3
pusha
pusha
repz
pop
jbe
or
aas
out
xchg
sbb
jge
xor
or
lret
frstor
les
cltd
subl
mov
mov
and
push
insb
iret
push
dec
lcall
incb
mov
imul
sbb
adc
insb
sahf
mov
xor
sti
out
adc
jne
mov
push
cli
mov
ds
ljmp
xor
pop
mov
push
pop
arpl
rolb
sbb
fiadds
sbb
sbb
repnz
adc
pop
adc
xor
dec
xor
stos
sub
mov
bound
add
jp
test
xchg
int3
mov
movb
scas
xor
jns
mov
out
push
sub
inc
jmp
cmpsl
jnp
inc
or
xchg
test
cmpsl
nop
mov
out
wbinvd
insb
fildll
mov
lcall
pusha
cmp
adc
test
cmp
cwtl
cmp
sbb
jp
pusha
mov
mov
aad
ret
or
cltd
loopne
jl
insl
movb
shl
fsts
pop
call
test
mov
or
push
push
negb
cwtl
imul
or
pushw
les
xchg
cmp
pusha
inc
daa
jno
push
jecxz
and
addl
add
push
aad
notl
or
insb
fmull
sbb
sbb
repnz
dec
daa
fdivrl
sbb
jno
xchg
dec
xor
mov
sbb
sub
add
stos
into
adcl
add
push
ret
lea
lock
mov
mov
push
scas
push
sub
ret
jle
xor
mov
bound
sub
lret
pop
xchg
pop
outsb
sub
aaa
push
sub
shlb
pop
cli
cmp
mov
and
lret
loope
or
inc
xor
popf
icebp
cmp
push
std
ljmp
sbb
shlb
jbe
xor
loopne
sti
jge
mov
mov
cmpsl
sbb
xchg
cltd
cmp
sub
push
and
xor
neg
add
daa
push
cmpsl
adc
or
fisttpll
icebp
push
cli
xorl
mov
fs
mov
and
xor
sti
or
adc
popl
nop
les
ss
push
add
xor
hlt
push
pop
pop
pop
add
and
cmp
sbbl
xchg
xchg
arpl
or
add
lret
enter
dec
test
test
fldl
dec
aam
fnsave
in
call
sbbl
int3
mov
movsb
js
push
and
mov
sbb
adcl
in
gs
lcall
mov
jae
jo
mov
pop
rcll
fwait
leave
or
push
sbb
imul
xor
dec
shll
sbb
pop
pop
or
gs
pop
add
cmp
icebp
xchg
daa
pop
les
aam
push
sub
push
data16
rol
or
stos
dec
lcall
iret
jecxz
mov
fistpll
inc
sub
lds
mov
xchg
icebp
dec
mov
pop
and
inc
push
les
mov
mov
add
out
push
in
push
sbb
scas
and
into
cli
cld
arpl
dec
mov
lcall
xor
jge
push
sbb
push
ja
dec
cpuid
inc
mov
mov
mov
int3
pop
adc
rorl
fs
adc
loope
push
fcoms
test
lret
clc
pop
scas
aam
push
pusha
sahf
push
dec
mov
imul
nopl
sub
inc
push
pop
orps
jp
pop
filds
cmp
or
xchg
scas
loope
aaa
cmp
fwait
mov
add
jmp
pslld
or
cmpsb
das
push
xor
fiadds
sub
in
xchg
xchg
xchg
cmpsb
lods
mov
sarb
in
or
mov
addl
xor
push
popf
mov
jp
outsb
and
xor
stos
push
std
scas
in
gs
imul
xchg
mov
cmc
ret
adc
fnstenv
add
cwtl
jae
cmp
xchg
sbb
test
repz
lock
add
push
adc
xchg
pop
add
xchg
sbb
jae
test
dec
mov
sbb
xchg
subb
fmull
xchg
or
popf
sub
jns,pt
mov
jo
mov
inc
arpl
sbb
xor
dec
jne
pop
imul
push
stos
popf
and
leave
inc
push
lock
rorb
fwait
lret
sub
outsl
jmp
add
mov
dec
or
pop
cli
leave
int
jne
add
jbe
testw
cmp
push
leave
pusha
mov
mov
in
dec
mov
lods
shrb
ss
jecxz
sbb
add
add
and
push
cwtl
mov
in
add
add
lret
je
imul
fldt
and
hlt
je
in
sbb
pop
cmp
js
rcl
testb
mov
sbb
pushf
mov
iret
test
add
add
mov
adc
push
push
xchg
data16
jl
insl
mov
rcrb
int3
mov
popf
or
jp
pop
fwait
inc
scas
xchg
adc
repnz
push
data16
cltd
jne
sub
addr16
or
lds
call
shrl
loop
insb
popa
lock
stos
dec
add
pushf
xchg
out
rorl
dec
sbb
xchg
pop
add
jne
cwtl
pushf
xor
int3
adc
sbb
inc
or
add
push
bsf
aas
je
push
cltd
xchg
mov
mov
xchg
out
jmp
test
pop
push
mov
js
jne
sbb
ja
frstor
outsb
aaa
loopne
mov
add
scas
js
and
jp
or
fsubrs
pop
scas
push
popl
dec
and
xor
xchg
pop
addr16
sub
cmpsl
cmp
mov
pushf
xor
or
out
inc
shlb
adc
in
jb
mov
mov
subb
cmp
dec
mov
sub
pushf
repnz
and
pop
sbb
aam
dec
jle
frstor
sbb
or
lret
mov
xchg
subl
nop
push
stc
addr16
mov
mov
mov
push
or
cmpsb
push
sub
push
mov
xor
pop
xor
xorl
dec
cli
mov
xchg
loope
test
arpl
mov
jl
mov
pop
jp
sti
add
and
fidivs
gs
dec
cli
xchg
lock
sub
or
stc
push
cs
int
sub
in
jbe
mov
pop
push
dec
mov
xorb
int
dec
cmp
ds
adc
and
pop
mov
dec
pusha
sbb
push
jp
das
pop
sbb
lock
xor
pushf
lock
gs
mov
es
mov
sbb
fdivrs
stos
das
decl
mov
or
rep
add
sahf
inc
loopne
sub
xchg
pop
cmc
es
mov
add
cmc
pushf
loope
xor
adc
sbb
push
arpl
jle
paddusb
out
jge
sbb
lock
push
lds
mov
mov
inc
inc
mov
or
int3
clc
cwtl
jnp
pop
mov
push
or
add
fistpl
lret
jne
and
div
imul
mov
fildl
sbb
loopne
or
add
dec
jle
popa
test
outsb
stos
fwait
jbe
or
enter
jnp
push
xchg
dec
sarb
cmp
subl
jle
fnstcw
add
or
mov
outsb
lds
loope
sbb
and
idivl
and
mov
sbb
sub
fwait
div
cli
mov
loopne
adc
test
mul
pop
fldcw
mov
mov
push
pusha
cmp
mov
mov
andl
add
dec
sbb
int
lret
xchg
xchg
inc
ja
pop
out
pop
lds
icebp
or
dec
icebp
call
inc
fdivs
pusha
mov
push
cmpsb
pop
test
adc
mov
mov
jle
inc
aaa
inc
cmp
dec
stc
fisttpl
je
in
lcall
mov
inc
loope,pt
add
mov
sbb
ss
lret
shl
or
hlt
ret
jb
sbb
sub
popa
and
rcrb
cmpsb
pop
inc
aam
xor
adc
xchg
repz
xor
cld
push
lods
jp
arpl
mov
push
push
adc
jecxz
sub
xchg
add
or
jbe
pop
cmpsl
sbb
sbb
add
cmp
xor
xchg
mov
push
cld
jmp
cmc
add
lcall
fsubr
adc
push
mov
sarb
jno
popa
jne
cmp
ljmp
push
js
sahf
leave
movsl
cmpsl
fwait
or
inc
mov
sbb
inc
inc
push
lahf
js
sarl
sbb
rcll
sbb
ja
hlt
dec
jb
fwait
push
stos
sub
scas
jne
sub
fs
inc
push
mov
ljmp
test
jecxz
mov
mov
outsl
cmp
inc
mov
clc
loope
jmp
mov
mov
push
fildll
sbb
jbe
subb
inc
mov
popf
inc
inc
mov
add
push
dec
addl
dec
fsubs
js
inc
es
enter
jns
mov
and
pushf
push
add
adc
jmp
adc
pop
inc
sbb
cwtl
ljmp
add
adc
mov
scas
sbb
stc
jno
loope
sbbw
xchg
es
mov
inc
js
das
pop
outsb
sbb
cld
popf
cwtl
aam
in
mov
pop
repz
arpl
and
xlat
negb
push
push
sbb
add
out
fisubrs
pop
les
push
jno
and
xor
orl
jl
fdivp
inc
std
cwtl
sbb
sub
inc
lret
ss
dec
addb
add
mov
into
call
hlt
xchg
jmp
and
pop
roll
mov
js
movsl
test
mov
mov
push
ret
fcmovne
pushf
sbb
lcall
test
or
pop
sbb
xor
out
or
fsubs
dec
das
inc
out
push
mov
fisubl
les
lret
bound
inc
pop
push
aas
loop
sbb
out
cmpsl
push
lock
mov
out
nop
pop
ret
popa
adc
inc
xchg
adc
xor
push
pop
push
call
bound
push
mov
into
lahf
adc
mov
aam
inc
cs
pop
popf
pop
xor
add
jns
push
jecxz
testb
mov
outsb
idivb
fcmovne
in
mov
fistpll
cmp
xchg
aam
jp
pop
rcll
jp
sbb
dec
jbe
fimull
cmp
xor
mov
dec
pusha
cmc
out
pushw
call
test
and
cld
inc
aad
or
mov
divb
lds
cli
bound
jle
nop
pop
fsubl
cmp
xlat
scas
inc
push
movsl
cmpb
aad
scas
pop
inc
sbb
and
fwait
test
pop
adc
jne
cld
popa
repnz
fcoml
std
or
ja
dec
cli
test
pop
in
mov
out
jbe
mov
lret
push
add
jns
mov
test
mov
sahf
push
fstps
pop
or
dec
pop
pop
inc
in
mov
pop
imul
fstpl
insb
adcl
mov
mov
xchg
jecxz
jae
or
and
inc
mov
daa
out
fldl
mov
aaa
jne
push
inc
imul
jl
ds
mov
out
loopne
xchg
icebp
adcb
andps
ret
punpckhbw
xchg
shl
ljmp
jmp
inc
insb
gs
xchg
test
mov
sbbb
pop
sbb
enter
dec
into
fwait
dec
inc
push
sub
jns
push
es
rclb
cmp
sbb
inc
adc
xchg
popa
addb
mov
out
dec
jnp
mov
cmp
adc
lea
adc
lea
ffree
imul
dec
out
push
jmp
push
imul
jno
pop
mov
and
xchg
insb
insb
sti
push
push
mov
dec
pop
mov
aaa
adc
xor
or
int3
shl
or
sar
inc
push
xchg
ret
cmpsb
sbb
and
out
xchg
mov
inc
jecxz
fsubs
push
in
mov
movsl
dec
out
sbb
loopne
mov
int
cld
iret
icebp
fbstp
cmp
stos
inc
idivb
lock
dec
sub
xchg
add
imul
jmp
xor
cmc
push
js
push
add
jb
cld
mov
cld
xor
fdiv
dec
pop
xchg
test
or
movsl
pop
lret
rcrl
mov
or
lds
aam
cmc
mov
inc
add
pusha
divl
testb
mov
fdivrl
sub
test
or
add
pop
mov
mov
xor
enter
inc
pop
cld
cmc
mov
int3
pop
sub
andl
mov
jp
shr
dec
dec
ja
stos
inc
and
xor
jecxz
dec
add
inc
inc
push
xor
jns
push
or
and
testl
xchg
inc
cwtl
mov
inc
adc
notb
and
dec
mov
pushf
orl
mov
dec
push
jbe
into
stc
cltd
mov
sbb
pusha
movsl
sbb
adc
test
and
mov
mov
sbb
adc
inc
fsub
daa
jp
inc
rcll
jecxz
jl
xor
cli
and
fadds
push
cs
inc
je
es
orl
mov
push
ret
pop
inc
les
jne
pop
lods
fwait
jns
jno
sbb
fwait
into
xchg
mov
cmc
sub
out
inc
loop
jne
mov
sbb
into
mov
xchg
sbb
push
dec
scas
in
hlt
and
sbb
pop
inc
jbe
pop
mov
sbb
push
sbb
cltd
mov
push
xlat
or
jge
pop
fcoms
inc
xchg
shrb
cmp
and
popf
popf
daa
sub
popa
inc
xchg
mov
mov
loopne
fwait
lahf
or
test
mov
mov
inc
push
mov
dec
pusha
push
inc
sub
test
or
cmpsl
jns
call
xchg
loope
dec
cmc
cli
xor
jp
mov
add
addr16
push
or
adc
and
pushf
add
push
clc
into
mov
test
add
cmc
push
mov
xor
popf
add
adc
mov
xor
cmpsb
daa
shlb
jmp
mov
rorl
push
cmpsb
cmc
pop
jbe
popf
addb
rclb
scas
sbb
in
mov
sahf
mov
pusha
inc
cmp
cli
cmp
jmp
clc
dec
clc
cmp
mov
loope
jl
in
faddl
push
je
dec
dec
xchg
mov
add
hlt
pop
and
push
mov
or
ja
adc
sub
push
push
fsubrl
xchg
test
pop
fstpl
mov
jl
into
sub
fcoms
xorl
ljmp
out
push
inc
aas
jns
pop
jle
testw
call
popl
sub
mov
aam
gs
mov
loope
inc
mov
stos
insb
jae
sbb
movsl
xlat
xchg
pop
jp
jne
mov
mov
or
sbb
add
test
imul
xor
pop
les
push
insl
mov
pop
add
mov
loopne
ja
inc
stos
push
dec
cs
dec
movsl
dec
and
lahf
dec
sbb
pushf
sub
xlat
pusha
adc
pop
xchg
xchg
add
sbb
stos
xchg
fidivrs
sub
repnz
loopne
cmpsl
test
test
loope
jmp
sbb
leave
stos
xchg
inc
jmp
mov
sbb
jecxz
sbbl
dec
addr16
mov
dec
call
inc
subl
out
cli
xchg
mov
mov
and
add
in
fbld
cmp
or
les
dec
cmp
loopne
adc
aam
adc
sub
in
movsl
add
gs
jo
popf
mov
push
add
sahf
push
adc
push
sub
mov
push
inc
neg
bound
xor
jecxz
in
push
add
jne
fcompl
loop
mov
or
sar
pop
push
das
xor
cli
cmp
pop
lcall
mov
mov
or
push
cmp
push
icebp
pop
fninit
adc
dec
in
pop
inc
cmp
push
jnp
fdiv
xor
or
jp
and
xchg
push
in
sti
inc
ds
push
or
cmpsb
cmp
dec
je
cmp
fdivrs
in
popf
xchg
mov
xor
aas
repz
add
mov
aaa
push
imul
push
notl
add
xchg
add
xchg
int
imul
fcmovb
dec
inc
shl
push
scas
into
ds
int3
push
and
loope
or
cwtl
movsl
push
jns
out
dec
xchg
mov
xchg
lcall
testb
push
mov
cmpsl
adcb
insl
fdivl
push
xor
xchg
stc
or
cwtl
lods
movsb
and
popf
jbe
jae
add
mov
icebp
mov
loope
xchg
or
ja
jb
outsb
jnp
push
nop
xor
adc
imul
cmpsl
cmp
push
and
pop
mov
stos
in
das
ret
mov
push
mov
mov
mov
mov
fiadds
cmp
pop
mov
movl
es
fs
push
add
roll
icebp
sbb
int3
push
inc
push
stos
xchg
cmc
adc
adc
and
rcll
xor
mov
popl
out
dec
movsb
xchg
sub
mov
push
rolb
dec
dec
lret
pop
add
push
inc
push
xchg
cwtl
jns
or
add
aaa
aas
mov
notb
outsb
jg
jne
popf
sub
sarl
xchg
fcmove
arpl
jmp
lods
adc
push
fwait
xchg
bound
push
mov
int
xchg
loope
test
sbb
lcall
movsl
std
stos
push
jne
sub
dec
mov
lret
stos
push
or
push
not
sbb
sbb
ret
or
mov
sbb
out
xchg
out
into
sbb
mov
lods
cli
lock
push
inc
daa
jecxz
mov
adc
mov
pop
loop
lahf
or
push
or
andb
push
sub
out
int3
fs
push
fs
and
loopne
ret
sbb
cmpsb
cmpsb
flds
mov
shrb
push
idivl
push
mov
mulb
inc
out
sbb
pop
add
popaw
sbb
dec
or
shl
sbb
mov
push
sub
xor
push
aad
rorl
sbb
jbe
cltd
inc
add
push
mov
cltd
int
adc
xchg
push
xchg
insb
ret
data16
cli
sub
repnz
movsb
gs
and
in
dec
xchg
ja
out
mov
ret
xchg
lods
add
js
xor
mov
nop
xor
call
testl
sub
cmc
push
fdivl
adc
push
mov
sbb
add
lds
jne
and
xor
inc
xchg
orb
fisubs
lds
adc
inc
mov
xchg
es
or
fucomi
push
cmp
and
sbb
or
and
cmc
add
mov
test
push
addr16
popa
fcoms
cwtl
mov
icebp
imul
test
or
jne
or
leave
xchg
jno
sbb
push
adc
fidivs
stos
and
cmp
ja
xchg
pushf
push
popf
hlt
out
imul
nop
sahf
xchg
add
and
xor
pop
fs
xor
or
pop
out
mov
sub
orb
push
aas
aaa
pop
test
ljmp
in
jle
rorb
or
adc
push
aaa
cmpsb
cs
bound
loop
hlt
push
daa
mov
push
dec
les
cmp
pop
add
lds
or
lret
das
dec
inc
daa
fldcw
pop
or
cmpsb
add
stos
arpl
cli
fs
fadds
adc
fs
sub
jge
mull
ret
inc
push
pop
and
aad
add
xchg
dec
lret
mov
cmp
rcrl
push
cli
or
sub
jne
cld
out
pop
sbb
pop
popf
test
enter
test
xor
jp
ret
cmpsl
ja
or
push
sub
and
and
mov
cs
xchg
xor
mov
mov
mov
sbb
js
ficoms
and
cli
stos
ret
adc
mov
test
scas
arpl
mov
test
adc
adc
sbb
pop
jb
fwait
dec
dec
adc
aas
inc
nop
or
repnz
push
pop
pop
lcall
xchg
fsub
jnp
and
lcall
lds
jae
and
sub
jns
xor
fs
in
adc
out
jg
test
test
outsl
ss
test
xor
cmpl
ljmp
lock
loopne
cmp
and
mov
movsl
and
or
rcll
inc
das
stos
and
push
pop
mov
cmc
mov
fdivr
test
add
or
add
aaa
gs
cmpl
lds
sbb
or
pop
xchg
sbb
push
push
pop
test
mov
out
sbb
icebp
mov
dec
jne
mov
es
sarl
addl
call
add
pop
repnz
pop
sbb
jno
fildl
addb
adc
dec
aad
dec
push
xor
add
sbb
mov
aaa
lock
aaa
fs
in
cmp
sbb
loop
jg,pt
stc
jno
mov
jge
push
fsubrl
mov
aaa
push
or
data16
popa
mov
pop
leave
push
jg
data16
and
mov
add
ret
fstpl
adcb
ret
add
inc
xchg
icebp
mov
jl
stos
std
out
xchg
and
push
pop
in
sahf
mov
jno,pn
inc
ss
fimull
out
not
stos
inc
mov
sbb
cmp
hlt
mov
fwait
repz
lahf
dec
das
pop
pop
movsl
adc
sbb
mov
sbb
sbb
fwait
cmovbe
dec
loope
sub
add
rclb
fdivrs
lcall
push
push
daa
dec
lods
mov
xchg
push
inc
sbb
dec
sbb
add
pop
cmp
jle
sbb
add
dec
xor
pop
jnp
popf
push
movsl
vpaddusb
xchg
insb
inc
mov
inc
mov
add
out
incb
lcall
or
mov
nop
lcall
inc
xor
test
push
mov
mov
add
syscall
lret
push
pop
and
push
sbb
push
insb
int3
fstl
loopne
and
lret
adc
xor
xchg
in
inc
or
xor
dec
in
sub
inc
xor
add
cs
push
lret
sti
xor
jg
xor
ror
inc
inc
add
inc
cwtl
xchg
jo
lods
js
pop
and
inc
addr16
addr16
xchg
arpl
sub
sub
cmc
rcll
mov
cwtl
jp
out
and
int
and
ljmp
push
insb
xlat
insb
xchg
cli
es
idiv
scas
mov
and
ret
cmp
sbb
jnp
jge
lahf
mov
cmc
sbb
adc
cs
push
mov
jp
jae
dec
pop
in
inc
inc
pop
xor
xchg
xor
mov
xchg
ret
or
xchg
jns
sub
imul
mov
cmp
xchg
add
sbb
mov
and
lcall
inc
mov
rcrl
shll
es
ljmp
sahf
or
fsts
inc
cmp
add
dec
and
mov
dec
ss
push
pop
movsl
pop
dec
push
int
inc
xchg
mov
add
insl
pop
pop
or
ja
push
addl
icebp
xor
or
add
cmc
xchg
pop
sahf
sbb
xor
mov
mov
add
popf
push
fcoml
mov
dec
xchg
inc
adc
sbb
bound
or
rcrb
in
push
sahf
mov
mov
mov
cltd
push
std
shlb
push
negl
ret
sbb
xchg
inc
test
xchg
dec
jo
adc
mov
mov
pop
orb
adc
cmp
lock
fisttpll
lods
test
push
imul
sbb
cmpsb
push
inc
mov
in
pop
and
icebp
dec
testb
pushf
jne
mov
pop
mov
mov
push
jle
fdivl
fucomi
dec
lahf
and
adc
repnz
jne
xorl
mov
xchg
lcall
mov
fldl
jae
dec
cli
push
pop
out
ret
lods
push
sub
cmp
mov
inc
sbb
mov
ds
jp
xor
push
aam
xor
into
cltd
pusha
mov
lds
sbb
ret
lds
leave
mov
loope
movl
sbb
cmp
vmovsd
push
push
pop
adc
sbbb
lret
sub
mov
jle
fdivl
xor
dec
test
aad
ja
add
fs
add
mov
or
pop
mov
jb
out
add
jl
push
aas
mov
fcompl
dec
cmp
dec
mov
or
cs
leave
xor
push
sarb
arpl
orl
loopne
in
dec
dec
movsl
xor
fldcw
jnp
mov
ficoml
dec
sbb
sbb
into
les
cmpsb
lret
mov
jo
test
les
ret
add
inc
int3
mov
adc
jne
je
aas
out
sahf
cmp
adc
jle
push
enter
mov
rol
mov
push
sbb
insb
imul
jb
lea
push
dec
and
pop
ja
xchg
enter
xchg
hlt
enter
cltd
aas
push
mov
cmp
stos
xor
notl
adc
push
fisttps
rclb
mov
cli
int3
mov
mov
lcall
pop
push
mov
jg
pop
pusha
es
inc
adcl
jns
sbb
sbbl
pop
shrl
in
lahf
and
adc
inc
push
jne
sub
xor
inc
repnz
pop
cld
jbe
in
fisubrl
inc
in
mov
xchg
andl
outsl
cltd
clc
std
push
cltd
push
jno
lcall
dec
xchg
pushf
sub
push
fdivs
dec
les
dec
xor
jo
dec
mov
jb
out
pushf
jno
jg
outsl
sbb
sbb
mov
aam
sbb
daa
add
or
inc
adc
ss
jno
mov
sbb
dec
adc
sbb
in
out
jns
adcl
sbb
ret
mov
add
pop
jb
mov
cmc
aam
cltd
sub
dec
jg
sarl
or
cltd
and
call
pop
push
int3
clc
icebp
ret
mov
imul
xorl
fisttpll
std
int3
cmp
sarl
xor
lods
das
cmpsb
mov
push
or
loope
xchg
ljmp
and
mov
dec
out
pop
lods
sbb
outsl
or
stc
cmpb
loope
test
mov
pop
movsl
xor
xor
pop
cmp
push
rcrb
xchg
jns
fsts
notb
pop
xor
pushf
pop
sahf
xchg
popa
mov
xchg
pop
lcall
xor
gs
push
jl
add
lods
and
repz
sbbb
inc
into
add
dec
data16
pop
xor
pop
fldenv
pop
sbb
rorl
mov
jnp
jp
lahf
scas
loope
push
cmpsb
add
pop
jp
outsb
rol
sarb
ret
cli
or
xchg
cltd
xchg
test
je
add
jge
out
add
xchg
in
push
decl
xchg
fistl
dec
cmp
rcrl
es
ret
mov
jo
aas
or
sub
sbb
or
mov
and
add
in
jae
cwtl
xchg
dec
inc
mov
add
call
scas
xor
dec
or
mov
ljmp
nop
repnz
fbld
inc
popf
addl
stos
xor
orb
mov
mov
ret
out
xor
gs
push
or
sbb
lods
gs
dec
mov
lcall
or
push
cmp
insb
out
andl
xchg
add
pop
ljmp
popa
mov
mov
or
xor
pop
sbbb
sbb
inc
pop
hlt
or
pop
jle
mov
das
xchg
xchg
bound
cmp
ret
je
stc
or
add
sub
xchg
pop
imull
jle
cmp
jmp
push
sar
bound
mov
pushf
ja
push
add
lods
cwtl
sbb
cmp
adc
add
xchg
addr16
sub
xchg
lret
lods
xor
inc
stos
or
lret
cmpsb
cmp
adc
outsl
repnz
add
dec
aaa
jne
sbb
sbb
into
fs
add
jno
and
and
and
enter
xor
mov
mov
add
mov
out
and
sahf
sarb
or
xor
insb
lea
scas
ds
repz
loope
pop
subl
jbe
push
pop
in
mov
sub
dec
fdiv
std
jle
sbb
lea
add
inc
movsl
test
sbb
add
add
push
mov
test
sbb
out
popf
add
pop
or
lock
enter
loope
nop
pop
lds
mov
xchg
fidivrl
add
sbb
dec
out
mov
mov
mov
inc
mov
xchg
idivl
inc
ret
movsb
mov
rcr
jne
add
pop
imul
sbb
jb
sub
add
pop
adc
jle
sbb
aaa
mov
inc
pusha
push
push
stc
lds
fwait
cmp
pop
mov
and
push
out
mov
cmpsl
orb
dec
mov
sub
test
sbb
push
data16
mov
movsb
rclb
lahf
sbb
in
jmp
les
dec
add
xchg
negb
sbbl
jl
loopne
sub
out
daa
push
outsb
ror
cmp
dec
or
xor
gs
lret
jge
insb
dec
sub
jne
callw
jbe
push
test
hlt
stc
andl
or
fwait
mov
sbb
dec
xchg
push
mov
pop
mov
mov
push
inc
sbbb
rcll
xorl
lcall
aad
xor
ret
pop
cmp
dec
movsb
xor
bound
outsl
je
stos
sbb
outsb
outsl
ret
xor
adc
sbb
xor
inc
jb
add
mov
lret
add
repz
icebp
std
mov
shlb
mull
daa
fsubl
test
in
add
popa
pop
mov
push
test
fbstp
cwtl
pop
add
jbe
shll
cmc
mov
dec
mov
clc
and
jg
cmc
push
fbld
out
push
cmc
cmp
inc
or
addb
sub
leave
mov
ret
lahf
ljmp
lret
repz
push
push
enter
mov
lock
lret
and
jns
lret
scas
xor
addr16
dec
das
pop
test
mov
testl
scas
sub
cs
push
lret
ret
dec
cltd
mov
mov
mov
into
push
sbb
mov
push
sbb
lock
mov
call
sahf
push
lds
lcall
xor
sub
fcompl
xchg
xor
dec
inc
testl
dec
stos
aas
lret
mov
xchg
mov
jmp
shrb
xchg
cmp
adc
and
stos
nop
sub
mov
sbb
pop
add
pop
dec
xor
jecxz
lds
into
rcr
dec
stos
adc
push
cltd
sub
xchg
fcoml
ret
mov
push
jne
cmp
sbb
add
aas
push
xchg
cmp
push
add
xchg
sbb
mov
adcl
xchg
cltd
cmc
adcb
imull
push
aaa
pop
xor
pushf
add
jo
adc
mov
push
xor
cwtl
jle
iret
out
ja
dec
and
sahf
add
xor
negb
sti
lahf
mov
inc
adc
ss
inc
pop
addr16
stos
ja
dec
pop
and
sbb
jno
pop
push
shl
pop
adc
mov
adc
xchg
jl
push
add
push
int3
mov
sub
and
jo
push
sub
std
pop
imul
jbe
or
push
int
mov
inc
cli
or
popf
jge
test
jge
orb
cld
pop
sahf
loopne
jno
stos
jbe
repnz
jno
mov
xchg
inc
xchg
subb
in
pusha
jne
jnp
ljmp
and
lahf
sub
bound
scas
fnstsw
into
cltd
mov
sub
sub
xchg
lock
dec
fisubl
mov
divl
pop
cmc
xchg
or
jbe
jle
ficomps
fdivr
aaa
cmpb
sbb
add
iret
pop
xchg
dec
shl
inc
mov
dec
sbb
mov
mov
push
repnz
fisubrs
popa
and
jne
addr16
mov
lock
call
mov
pop
testb
enter
mov
movsl
lcall
xchg
out
xor
sub
stc
lahf
sbb
or
idivl
cmpsl
shll
cmp
aaa
inc
and
and
sbb
es
add
jnp
addr16
insb
pusha
mov
pop
pop
xchg
sbb
dec
rorb
xchg
cmp
xor
in
pop
cmc
sbb
xorb
jge
cmp
jne
mov
jbe
mov
es
sbb
inc
popa
jno
sbb
lret
jnp
ss
jp
in
dec
push
pop
stc
pusha
inc
mov
sub
cwtl
gs
sti
push
push
in
fildll
jne
fisttpl
dec
and
flds
rcrb
mov
mov
scas
push
xor
sbb
mov
xor
cmpsb
inc
stc
adc
or
jbe
mov
sbb
pop
inc
add
sub
addr16
test
mov
fsubp
add
ret
jbe
push
mov
addl
xchg
xlat
insb
nop
sbb
mov
push
adcb
mov
fcmovbe
out
mov
daa
push
dec
dec
pop
jne
in
lahf
mov
mov
pop
repz
inc
outsb
pop
inc
jge
stos
sub
lds
inc
outsb
push
add
mov
lret
fldenv
jae
pop
mov
sahf
jp
push
insl
inc
ret
sbb
cmovbe
inc
stos
stc
sub
lahf
jb
cmp
xchg
xchg
pusha
mov
je
lahf
ret
and
xor
jecxz
push
push
or
cmp
imul
and
in
rcrb
call
mov
xor
sbb
mov
cmp
push
hlt
fisubl
fwait
cmp
mov
js
push
adc
mov
clc
loop
dec
mov
add
fidivl
pop
js
pop
sbb
jbe
jecxz
jge
insb
insb
icebp
pop
inc
lcall
fadds
shl
dec
jno
push
jae
mov
mov
inc
aas
cmpsl
sbbl
ss
jmp
lock
icebp
adc
jmp
aas
rcrb
xor
mov
adc
rorl
loope
mov
sbb
hlt
gs
xorl
xor
gs
or
pushf
addl
fnstsw
aaa
fs
int3
shl
mov
je
les
dec
pushf
ss
push
daa
iret
test
rorl
daa
or
or
cmpsb
fcomps
dec
jp
push
push
lret
test
data16
repnz
mov
cmpsl
add
push
test
push
test
les
movsl
imul
sub
mov
xorb
add
mov
rol
outsl
push
pop
xlat
cmc
outsb
cmpsb
out
fimuls
mov
sub
xor
xchg
lods
or
fidivl
xlat
jge
and
mov
mov
sub
ret
xchg
lds
int
xor
sub
loop
cmp
mov
dec
mov
inc
vmovhpd
sub
xor
mov
inc
rcrb
push
shl
dec
mov
add
pushf
push
into
inc
lock
push
dec
push
int
sub
sbb
inc
push
sbb
fildl
xchg
subb
cmpsl
ret
xor
pop
jns
lcall
out
push
std
cmp
insl
lock
jnp
out
push
inc
in
and
repz
add
and
push
adc
pop
daa
mov
outsl
lea
mov
loop
rorb
ljmp
das
xchg
xor
cmpsl
sbb
insb
ret
sbb
orl
push
or
mov
test
dec
pop
ljmp
xchg
sub
inc
adc
iret
jno
xor
pop
ret
sbb
shrl
cmpsl
jmp
xor
ret
pop
pop
insb
xor
fdivrl
mov
into
xchg
push
or
scas
xorl
das
inc
cmp
out
sbb
out
or
adc
arpl
push
aas
or
xchg
jbe
sub
fwait
jo
pop
push
mov
aaa
cmp
jmp
jns
sahf
xchg
add
pop
cs
dec
roll
xchg
push
dec
out
push
loop
stc
aam
adc
sbb
xchg
jns
xchg
dec
lret
loop
or
fidivrs
mov
scas
inc
add
xchg
test
leave
adc
mov
je
adc
add
insb
push
and
mov
jmp
cmpsl
add
dec
inc
dec
mov
popf
and
and
nop
mov
shr
cmpsb
into
pop
pusha
test
mov
mov
mov
addr16
add
xchg
pop
fistpl
cli
loope
nop
popa
pusha
sahf
jno
orb
aad
push
rolb
cld
and
jno
inc
add
adc
out
push
gs
or
mov
mulps
jp
mov
lret
outsl
inc
mov
xchg
into
jg
mov
jbe
sub
shl
xchg
jecxz
es
xor
shrl
pop
sahf
sub
jp
dec
jmp
mov
push
xlat
fimuls
cld
xchg
add
push
dec
dec
rorb
int3
test
in
jg
movsl
or
mov
push
dec
test
shll
in
cmpsl
adc
xor
ret
xor
jl
aad
jecxz
xchg
jb
xor
push
ljmp
fstps
cmpb
lcall
jl
or
adc
dec
mov
ret
xor
push
xchg
inc
jno
add
sbb
inc
data16
loopne
fcoml
repz
data16
and
push
inc
inc
sub
pop
pusha
adc
addr16
xchg
jno
leave
mov
icebp
test
jae
ret
roll
aaa
jns
ret
add
aam
sbb
mov
jnp
mov
out
xchg
fisubs
lret
outsl
shlb
push
sahf
push
or
jae
orb
data16
push
outsl
xchg
data16
jge
andl
mov
sbb
jnp
lock
xchg
mov
pxor
inc
cwtl
nop
subl
movsl
sub
sti
xchg
and
mov
xor
lods
mov
fdivrs
dec
cmpsl
jnp
in
jne
cld
inc
movsl
insl
inc
lret
out
aaa
fsubl
or
jge
cltd
mov
lds
gs
fimull
sub
add
dec
shr
fldcw
sub
daa
fcomip
rorl
lcall
mov
sbb
gs
shlb
add
stos
pop
adc
fwait
mov
pushf
xor
cli
mov
dec
das
in
in
cwtl
or
xor
adc
dec
add
mov
fsubr
orl
cld
and
insb
xlat
sarb
sbb
xor
faddl
add
insl
xchg
mov
mov
scas
popf
xor
ja
repnz
dec
test
dec
lcall
xor
lret
cmpsb
jmp
loopne
je
test
xor
test
and
imul
push
jecxz
fcomps
stos
popf
out
xorb
lock
fldt
jns
sbb
aaa
or
fwait
dec
cld
and
out
sbb
lahf
push
or
sbb
jne
and
sbb
jmp
push
leave
lahf
das
insl
sub
popa
mov
lods
sub
das
fsubr
sbb
jp
daa
in
push
dec
imul
inc
cmpsl
mov
mov
mov
sbb
mov
dec
lahf
dec
lock
and
mov
adc
ljmp
fs
inc
mov
jmp
push
jecxz
inc
testb
ret
bound
les
or
cmpsb
loope
mov
das
int3
pop
fwait
inc
out
xchg
inc
xchg
cmc
add
sub
test
shll
fisubrl
push
xchg
lcall
jge
mov
pusha
sub
dec
andl
add
push
ljmp
int
movsl
jmp
fmull
negl
xchg
mov
dec
sbb
test
mull
loopne
rorb
dec
inc
dec
out
push
mov
bound
shrb
add
test
cwtl
sbb
pop
jmp
xor
loope
fs
and
add
xor
push
add
push
xor
mov
loop
lods
test
adc
jp
mov
add
add
cmp
jecxz
mov
cld
jge
or
lds
mov
shrl
mov
xor
dec
adc
adc
pop
and
aad
or
jmp
dec
into
mov
xor
andl
xchg
jge
rol
lahf
sub
cmp
push
movsl
inc
into
and
out
loopne
jg
stc
dec
rol
and
out
ret
ret
lret
and
rcrl
popa
push
or
push
mov
inc
icebp
inc
test
sbb
dec
or
or
int3
insl
xchg
cltd
jno
dec
mov
in
pusha
push
jae
notb
and
push
mov
sbb
out
xlat
or
sbb
cwtl
shlb
fstpl
xchg
fisttpll
fwait
sbb
and
data16
arpl
xchg
pop
fldl
lcall
movsl
dec
jp
adc
inc
adc
in
mov
cmpsl
cltd
in
fimuls
push
xchg
ljmp
js
or
sub
jp
fildl
cmpsl
sbb
or
inc
push
rclb
cmpsl
mov
in
fsin
nop
lahf
or
repnz
push
inc
daa
adc
rolb
lret
jle
sub
loope
sbb
sbb
icebp
push
xlat
pop
or
inc
arpl
add
outsb
lret
pusha
sbb
mov
push
mov
ja
adc
xchg
in
lret
notb
cmpl
sub
aam
sbb
cwtl
stc
test
lds
push
sti
pop
sub
sbb
ret
mov
jb
pop
jge
mov
cltd
nop
ret
or
mov
inc
addl
add
out
adc
mov
sbb
or
ret
test
inc
jmp
addr16
add
pop
add
shrb
mov
subb
fisubrl
loop
adc
jns
das
jl
subb
lcall
cmp
or
push
or
stc
mov
push
push
lock
out
push
nop
add
xchg
add
xor
or
pop
popa
cmpsb
outsl
sarb
xchg
push
xor
ss
sbb
push
push
cmp
fmull
mov
jp
inc
xorb
pop
add
ret
lods
add
leave
sub
aam
or
mov
filds
test
add
lcall
mov
sbb
cltd
push
dec
sbb
xchg
jno
push
pushf
movsl
add
scas
push
out
mov
add
pop
mov
stos
popa
inc
dec
push
lds
sar
rclb
int
sbb
xor
scas
lcall
mov
fldl
push
add
shl
data16
aad
sahf
pop
pop
fisubrl
mov
xor
pop
andb
loop
lods
dec
dec
insb
fisubrs
inc
sbb
dec
xorb
mov
mov
push
into
or
clc
shrb
xchg
xchg
cmp
mov
push
pop
adc
lea
insb
lods
adc
pop
mov
cltd
push
data16
mov
mov
push
stos
sub
push
es
push
cmp
shll
jmp
div
daa
mov
or
or
xchg
sbb
adc
xor
sub
dec
and
dec
lods
ret
push
rcr
cwtl
cmc
xorl
xor
ret
push
push
jmp
out
into
adc
popa
xor
add
pop
or
mov
cwtl
fs
mov
push
lock
insl
into
mov
pop
or
dec
jns
inc
or
ss
les
mov
ja
dec
jo
js
les
lahf
sub
mov
push
ss
lods
fisttps
sarb
inc
cmp
int3
mov
jp
in
shl
sbb
movsb
out
push
mov
int
and
dec
out
pop
pushl
js
fistpl
mov
lea
pop
and
pop
ss
movsl
sahf
mov
sbb
pusha
xor
add
fs
fmul
and
dec
add
imul
scas
cli
das
lds
inc
or
data16
cmp
pop
mov
outsb
jecxz
leave
lret
fcoms
jp
xchg
xchg
addb
ja
push
cs
dec
dec
push
cwtl
roll
xor
mov
pop
sahf
add
lods
mov
jne
ja
and
inc
fadds
add
inc
mov
xor
and
icebp
inc
fsub
pop
lds
cld
ds
xlat
fninit
pop
addl
fisttps
push
cs
add
xchg
shl
add
push
sbb
push
loope
cmpsb
mov
add
dec
push
sub
xor
mov
sbb
out
sahf
xchg
nop
jbe
mov
mov
lods
inc
and
subl
nop
push
xchg
add
repnz
sub
cmp
push
sbb
jecxz
cmp
mov
repnz
xchg
pop
xchg
pop
or
push
lods
daa
and
fdivrl
sbb
clc
pop
mov
imul
lock
and
pop
pushf
roll
xchg
xchg
inc
fcmovbe
push
mov
int
sbb
repz
loop
stos
dec
and
rorb
addb
inc
mov
mov
jbe
cli
icebp
stos
lret
loope
sub
push
ljmp
in
add
push
pop
dec
xchg
gs
pop
fldt
rolb
in
jmp
out
stc
mov
clc
pusha
orw
push
dec
and
scas
xchg
add
dec
inc
sub
dec
rcll
inc
xchg
lock
jb
push
loope
loopne
jl
loopne
loope
jl
or
jmp
cmpsb
sbb
pop
cmp
xchg
ret
gs
test
mov
xchg
dec
mov
fsubrs
daa
pop
and
loopne
mov
rcrl
fisttps
shlb
loopne
addl
jg
mov
adc
sbb
cmp
lahf
test
in
fwait
mov
xchg
pop
shrl
jbe
push
xor
fs
or
lcall
lds
pop
data16
cmpsl
push
and
push
push
lea
lds
aad
sbb
adc
call
leave
cmp
dec
mov
mov
push
das
xchg
and
flds
addb
jl
lret
cld
cmp
add
adc
into
cmp
adc
shll
addb
mov
sahf
sub
mov
repnz
iret
imul
pop
cwtl
es
mov
xchg
ss
stc
in
icebp
push
add
lcall
jns,pt
cmpsb
andl
dec
jge
pop
xor
dec
mov
gs
pop
icebp
fs
repnz
fcomps
dec
sbb
dec
daa
sub
fsubrp
inc
adc
imull
rolb
pop
shll
or
test
jp
icebp
les
fnstcw
gs
pushf
in
inc
loopne
out
fcoml
mov
mov
fadds
push
mov
ret
inc
jnp
cmp
cld
shll
or
lcall
jb
pop
and
or
pop
mov
fwait
mov
sti
or
fcoml
push
lds
mov
xor
imul
cltd
pop
js
xor
jge
xchg
cmp
lds
sbb
add
sbb
pop
jg
inc
add
jne
pop
push
test
push
pop
push
jns
imul
push
std
ljmp
rorl
jl
mov
pop
ja
xor
jnp
popa
jnp
popf
jb
mov
fwait
xor
mov
sbb
dec
or
xor
mov
pop
xchg
or
test
and
mov
fistps
or
mov
xchg
js
fcoml
lods
ror
adc
sti
jmp
lods
inc
cli
leave
cld
scas
das
lcall
sbb
inc
out
push
std
lds
and
mov
and
xor
dec
in
mov
pop
in
xchg
and
das
jl
repz
hlt
and
dec
or
and
adc
pop
mov
roll
jle
nop
inc
and
scas
in
dec
pop
jno
mov
dec
sbbb
lahf
xor
pop
push
cmc
mov
mov
sub
rorb
adc
xchg
xchg
adc
push
mov
mov
inc
xchg
add
sub
inc
movl
call
mov
mov
jae
mov
enter
mov
flds
lret
movsl
mov
into
xor
cmc
shrb
xor
xchg
test
xor
mov
jl
cmpsl
push
into
notb
xor
mov
push
stos
dec
mov
rdtsc
sub
mov
cmc
loopne
cmc
xchg
mov
mov
loop
popf
add
add
pop
fs
push
mov
push
out
jp
xchg
gs
xor
inc
es
or
xor
cmp
inc
xchg
loopne
negb
mov
push
mov
inc
je
pop
loopne
jno
std
inc
dec
mov
bnd
pop
sbbb
mov
push
inc
test
rcl
es
loop
js
add
xchg
jb
imul
jmp
cmp
dec
inc
frstor
out
imul
xchg
xor
insl
lahf
add
jge
mov
sbb
dec
enter
shll
and
pop
bound
mov
sub
inc
ret
jmp
fsubl
mov
jne
sub
out
divl
movsl
data16
es
scas
dec
inc
dec
push
pop
iret
sbb
rolb
adcl
enter
fsubl
test
or
enter
or
shrb
mov
orl
sbb
out
dec
add
orl
mov
lret
pop
fs
ret
stos
mov
cmc
lds
lods
add
pop
mov
push
sbb
dec
sbb
dec
in
inc
loope
inc
hlt
ret
gs
stc
pop
out
pop
and
jnp
pusha
xor
sbb
dec
xchg
add
mov
add
mov
push
lods
sbbl
add
subb
cli
inc
or
push
ror
and
cmc
sbb
adc
jns
sub
popa
cmp
pop
inc
dec
xor
xchg
dec
int3
mov
out
fidivl
inc
sbb
adc
inc
or
push
cmpsl
fwait
sub
and
sbb
inc
pushf
gs
and
loop
out
mov
push
jno
inc
pop
mov
mov
cmp
pushf
dec
mov
jg
and
addb
adc
addb
push
lods
test
xor
add
les
sbb
movsl
lret
mov
add
sbb
lea
lods
sahf
jl
lock
loop
in
add
in
cs
aad
xor
popf
add
push
iret
mov
inc
or
pusha
mov
sub
jne
test
jb
dec
mov
push
addr16
add
enter
pop
push
push
repnz
rorl
iret
dec
or
adc
and
loope
pop
insl
jb
mov
andl
sub
xor
mov
xor
cmc
and
cld
jge
and
or
mov
push
or
test
or
enter
add
pop
or
loope
push
add
mov
jns
shlb
sbb
push
xchg
xchg
jge
xchg
mov
sub
jne
insb
pop
xor
pop
sbb
mov
loope
rcll
push
test
cmpsb
std
jns
inc
ficompl
fmuls
imul
cmp
mov
divb
xchg
out
scas
pop
outsb
jne
mov
addl
enter
loop
adc
mov
shll
negb
and
jmp
fs
xor
mov
and
dec
jecxz
or
mov
aaa
sbb
sub
mov
jbe
xor
sub
inc
add
or
jnp
ss
cli
repz
cmc
push
xor
cmp
out
mov
fdivrp
push
movl
dec
es
shrl
add
xchg
pop
xchg
push
sub
dec
lahf
fisttpl
nop
dec
movntps
ss
sbb
rorb
push
popa
sbb
cmpsb
mov
fisubl
sbb
std
pop
jns
xor
mov
xor
inc
sub
add
mov
sub
and
scas
icebp
in
scas
adc
mov
scas
or
into
mov
in
mov
insl
adc
jnp
add
pop
pusha
outsl
jne
in
dec
test
jnp
mov
sbb
loope
jge
sbbb
add
add
pop
cltd
sub
leave
push
sbb
lods
xor
push
sti
inc
cmc
testb
xchg
arpl
bound
pop
movsl
stos
std
movq
push
pop
sti
shrl
push
push
ffreep
lahf
sti
push
and
addl
cmpsb
das
adc
push
jbe
insb
mov
inc
scas
cmpsb
push
mov
shlb
jge
out
rcrl
cmp
xchg
cmp
movb
add
daa
das
cltd
mov
mov
sub
mov
jno
adcl
adc
shl
jg
xchg
jge
push
adc
fnstsw
mov
mov
mov
fdivp
cmpsb
aam
flds
add
sahf
push
inc
dec
cmp
jno
add
icebp
lock
or
jns
xchg
lea
mov
push
js
mov
jle
adc
out
mov
scas
daa
clc
fxch
lods
dec
sbb
icebp
push
or
cmp
mov
jle
stc
das
scas
dec
scas
cmp
mov
mov
das
dec
in
or
rclb
pop
push
inc
sbb
addr16
xchg
sbb
insb
push
js
cld
mov
xchg
ds
xlat
and
and
and
push
pushf
mov
jnp
sbb
mov
loope
sbb
jne
and
mov
add
xchg
ja
push
bound
dec
and
outsb
sar
xchg
mov
push
xor
jge
loopne
fldenv
jmp
cmp
xor
sub
cmovns
push
insl
mov
int3
mov
je
xchg
or
sub
fs
mov
push
out
jle
cltd
sbb
and
loop
inc
fmuls
jne
or
in
add
popa
mov
rcll
icebp
mov
push
jnp
jne
fidivs
sbb
xchg
leave
jne
xor
out
or
cmp
dec
incb
stos
ret
adcb
cmc
pop
adc
dec
repz
mov
cmp
adc
mov
mov
dec
insl
push
cli
insb
mov
jp
fists
cmpsl
pop
dec
add
and
std
mov
lods
leave
out
xchg
rolb
jns
ret
inc
jl
cmp
and
popf
andl
xlat
sub
out
inc
add
rorl
push
in
mov
mov
gs
pop
test
pop
inc
cmp
sbb
movb
ljmp
shlb
dec
ss
lret
push
scas
pop
in
and
sti
mov
mov
add
sbb
and
pop
or
add
pusha
aam
push
in
mov
test
dec
sbb
adc
push
cmp
in
mov
mov
jl
in
jecxz
mov
aaa
adc
ret
sahf
jle
or
jg
mov
sarb
in
sub
fsubrl
sub
push
mov
into
cmc
adc
add
idiv
into
popf
hlt
sbb
jmp
inc
cmp
nop
sub
loope
or
scas
dec
or
sbbl
ljmp
add
or
adc
mov
sub
out
movsb
aaa
pop
popf
icebp
push
mov
and
dec
mov
hlt
mov
icebp
cmp
cld
push
std
inc
and
xchg
push
flds
inc
or
sub
stc
sub
and
popf
rolb
push
push
push
push
mov
push
add
pop
orl
bound
fcoms
adc
sbb
add
mov
orl
out
or
mov
enter
std
sub
inc
mov
pop
lcall
mov
jbe
jmp
mov
adc
enter
sarb
shlb
jbe
addr16
les
scas
ja
xor
cmp
push
in
mov
data16
dec
push
mov
jl
or
ds
fsub
loop
sbb
jecxz
sbb
popf
pop
jbe
daa
jns
push
sub
test
cmp
cltd
or
adc
dec
xchg
stos
shrl
inc
sub
js
or
add
push
insb
in
out
in
gs
cmc
sbb
lret
xchg
orb
imul
add
cltd
sub
out
rcll
add
jle
out
das
test
into
btr
ja
cmc
out
or
xchg
cmp
test
sub
mov
out
or
or
imul
push
loop
push
pop
inc
shl
mov
rclb
ja
mov
and
mov
or
and
inc
adcb
mov
test
ljmp
ret
leave
ret
xchg
xorl
outsl
adc
jo
pop
jl
insb
fistps
loopne
inc
mov
pusha
mov
push
inc
lods
mov
iret
cmp
cmc
mov
cwtl
xlat
scas
xchg
test
cltd
mov
jge
in
fcmovbe
lret
ret
mov
cwtl
imul
sbb
scas
dec
sub
imul
jle
pop
xor
inc
mov
inc
xor
xor
je
scas
and
push
add
lods
jne
std
mov
xchg
sub
adc
pop
imull
test
push
pop
insl
pop
or
add
in
sub
jmp
dec
push
ljmp
and
jmp
adc
mov
and
nop
lds
roll
push
jl
enter
mov
movsl
pop
push
pop
scas
arpl
pop
rorb
lcall
sti
fsubrl
jmp
jnp
leave
sub
popf
fists
sub
cwtl
or
jo
mov
adc
add
xchg
xor
test
das
cwtl
mov
aas
in
push
xor
dec
inc
sbb
je
mov
or
xchg
or
mov
push
dec
lods
scas
and
insl
push
sahf
push
repz
repnz
or
sbb
dec
daa
sbb
pushl
sahf
xor
cmc
cmp
push
jne
mov
sub
jb
push
faddl
jge
mov
movsl
sbbl
rolb
inc
fistps
das
adc
xor
addb
push
xchg
sahf
sub
push
dec
cltd
mov
movsb
popa
add
mov
in
hlt
jmp
or
sti
in
jmp
aaa
rcr
daa
push
mov
je
jae
dec
stc
adc
xchg
jbe
jne
shr
xchg
cmpl
sbbb
inc
dec
pop
sbb
arpl
cli
xchg
js
icebp
rorl
test
sbb
add
leave
push
add
cmp
int3
push
lods
sub
push
mov
cltd
inc
push
mov
inc
testl
ror
sahf
inc
clc
mov
adc
ret
xchg
rcl
or
dec
sub
add
jl
pop
pop
pusha
cmp
inc
add
push
push
sub
dec
push
je
xchg
js
sbb
mov
dec
out
push
stos
lds
inc
xchg
fwait
dec
sub
sub
std
mov
repnz
push
add
in
ret
jp
or
and
xor
push
mov
sbbb
les
aad
cmp
stc
jne
push
cmp
cmc
enter
iret
lds
inc
test
lcall
or
sahf
add
leave
jo
sbb
cmpsb
inc
adc
push
fildll
ja
xchg
loop
test
loope
clc
and
fwait
inc
leave
lock
arpl
xlat
stos
sub
push
ljmp
and
push
sbb
mov
sbb
push
mov
xchg
or
ds
jp
test
dec
inc
arpl
mov
jl
pusha
or
mov
fwait
pop
scas
xchg
jns
cmpsb
mov
int3
clc
add
dec
add
dec
jp
lea
addl
bnd
dec
sbb
add
in
sbb
lds
movsb
cmc
ret
push
push
fldl
outsb
mov
mov
xchg
popf
add
in
scas
fsubl
loop
enter
ret
xchg
roll
jl
mov
ljmp
dec
inc
pop
push
mov
lds
jmp
ficomps
xchg
mov
stc
inc
ret
fcompl
jb
lcall
in
xchg
pop
ret
cmp
jo
cltd
pop
loop
cltd
scas
int
cmpsl
push
push
jns
mov
std
data16
mov
imul
in
pop
fstl
outsl
into
ret
mov
and
std
decb
in
cld
nop
mov
fisubl
pop
jno
ret
orb
addb
scas
lods
mov
fstpl
add
sbb
inc
push
roll
mov
es
pop
sbb
xchg
or
jbe
sub
inc
sub
sbb
ss
aam
or
dec
std
xlat
sub
test
jnp
inc
outsl
loope,pt
inc
or
leave
xchg
mov
inc
int
fwait
dec
push
int3
cmp
mov
sub
mov
ficoms
jbe
dec
shlb
or
pop
loope
fdivrl
add
js
push
push
xchg
pusha
jge
push
pop
push
and
or
dec
addl
ret
sti
inc
popf
mov
mov
leave
mov
int3
or
adc
cmp
sub
iret
icebp
daa
fwait
sti
lcall
test
cmp
xlat
sbb
push
xor
subb
jbe
mov
cwtl
sbb
xchg
jge
adc
test
sbb
popa
ret
in
pop
mov
mov
sbb
jns
push
es
push
xchg
add
ljmp
sbb
and
cmc
add
pop
dec
jge
sti
cmp
decb
push
sub
cltd
jno
and
mov
pop
xchg
out
gs
jl
mov
push
inc
repnz
inc
push
jb
mov
js
xor
sti
ret
push
adc
pmulhw
negb
adc
push
ret
lock
call
mov
orb
cmc
push
cwtl
rol
gs
imul
xchg
ret
mov
and
add
xor
or
fwait
xor
les
add
pop
aas
lret
push
push
mov
test
xchg
mov
push
int3
fucomip
addb
or
pop
mov
test
inc
inc
fadd
out
inc
divl
ss
mov
inc
arpl
rcrl
icebp
sti
jno
out
sbb
push
or
xor
ljmp
fistps
out
sub
adc
mov
and
or
out
or
push
sbb
jb
pop
xchg
sub
sbb
ret
cmpsb
inc
xchg
movb
push
sbb
push
stos
imul
mov
sbbl
movsl
inc
inc
mov
mov
imull
pop
and
jg
mov
fsubl
into
mov
test
js
mov
arpl
xchg
jnp
jo
lret
push
cmp
ret
out
jbe
push
jne
pop
xchg
mov
push
pop
lcall
cmpsb
data16
jae
enter
mov
fisubl
cmp
add
push
stos
popf
or
sub
add
jb
aad
pusha
inc
ja
cs
addr16
in
push
mov
dec
ljmp
popa
mov
cmp
fmuls
push
dec
loopne
dec
mov
cmpsb
fstl
gs
mov
icebp
cli
jmp
add
call
add
mov
and
sbbl
stc
cli
inc
sbb
mov
mov
jnp
ficoms
xchg
pushf
jns
dec
jle
or
out
lods
lds
repnz
inc
fdivr
pop
cli
leave
int3
pop
xchg
xchg
inc
jo
int3
add
push
fs
shl
mov
mov
xchg
mov
mov
lahf
dec
mov
mov
and
dec
inc
rorb
dec
jb
lcall
or
mov
mov
movl
or
shrl
add
or
leave
in
in
scas
int3
pop
adc
ljmp
push
fdivl
cmc
sbb
lea
or
pop
and
in
mov
pop
data16
inc
lds
data16
xlat
inc
sub
push
je
xor
push
dec
cmpsb
pop
incl
cmc
push
repz
push
push
mov
data16
jb
pushf
in
dec
shll
cmp
enter
mov
inc
inc
inc
ror
mov
jecxz
jmp
sarl
pusha
push
or
daa
pop
lods
pop
sahf
inc
lds
xchg
push
add
subb
jbe
int3
in
mov
fsubl
and
inc
pop
add
hlt
incl
stos
xor
out
fcmovbe
int3
jge
xchg
dec
pop
movsb
ss
insl
testb
mov
jnp
jo
and
xchg
test
cmpsb
ficomps
add
or
es
xchg
mov
push
adc
ja
sti
test
push
ljmp
push
out
sub
push
shlb
dec
mov
adc
inc
out
push
sbb
lds
lahf
mov
inc
repz
xchg
ds
mov
cmp
add
sub
xor
mov
lret
into
xor
testl
lods
bound
fists
aas
cmpsb
push
loop
add
or
pop
xor
push
sbb
and
xchg
push
and
dec
and
pop
inc
lods
dec
or
mov
ljmp
push
mov
and
pop
or
add
fcompl
call
addr16
divb
mov
test
mov
xor
adc
in
add
arpl
daa
add
jnp
jbe
add
inc
leave
nop/reserved
cmp
mov
pop
mov
cli
mov
pop
adc
push
daa
sub
arpl
faddl
xor
adc
test
sbbb
insb
jg
xor
fsqrt
les
and
fistpl
ja
ret
add
sbb
repz
rcrl
mov
fdivrl
jle
lods
mov
mov
or
inc
push
xchg
aaa
test
mov
fldcw
push
inc
scas
jno
stos
dec
sub
xor
add
mov
data16
jge
dec
aad
cli
add
lret
adc
dec
stos
in
jno
imul
fstl
xchg
repnz
jb
out
xor
and
movb
repz
daa
lods
int3
lods
inc
xchg
in
stos
sbb
and
mov
mov
pop
sti
inc
stos
mov
or
mov
or
xchg
aad
cmpsl
dec
or
and
xor
lret
cmpsl
rorb
cmc
cmp
pop
pop
fwait
stc
ja
dec
or
cmp
daa
fadds
xchg
pop
imul
sbb
xchg
inc
jge
ret
or
or
add
push
push
les
lds
incb
adc
pop
xchg
mov
mov
push
std
adc
scas
fnstsw
out
and
in
xchg
adc
push
inc
pop
es
mov
xadd
xor
mov
sub
dec
jnp
mov
push
pop
jp
or
aam
rcrl
lret
sbb
outsb
les
xchg
jmp
stos
or
jb
or
imul
ljmp
enter
add
jecxz
lret
dec
add
sbb
mov
xchg
stos
xorl
xchg
xchg
addb
inc
and
dec
mov
push
dec
faddl
or
mov
pop
dec
je
mov
and
test
stos
adc
dec
pop
inc
mull
cwtd
int
xchg
pusha
inc
clc
pop
data16
or
std
sub
and
xor
js
pop
or
stos
inc
loop
adc
xchg
jg
repnz
sub
sub
imul
xchg
insl
lret
xor
lea
pop
inc
stc
loopne
pop
mov
outsb
dec
jb
and
mov
leave
repnz
xchg
jne
and
lahf
pusha
push
jno
in
shlb
pop
rcrl
sub
and
ljmp
out
cmp
push
xor
test
pop
sbb
mov
ficomps
fwait
loope
cmpsb
xchg
rcrb
pop
into
icebp
cli
and
push
fcmovnbe
mov
add
lcall
or
outsb
mov
das
push
inc
or
cmc
mull
das
sub
and
aaa
aad
dec
test
mull
lahf
ror
push
push
cmpl
test
push
jnp
jp
adc
add
fwait
lock
rcrb
push
add
mov
stos
sbb
lock
mov
cmp
fwait
mov
push
or
push
out
cmp
sub
mov
js
cs
adc
sub
inc
add
push
jmp
inc
add
sbb
leave
sbb
inc
sbb
lret
mulb
movsb
mov
or
xchg
imul
and
outsb
ret
or
leave
lea
icebp
out
dec
mov
cs
cmp
js
lret
imull
add
ljmp
ja
movsb
mov
pop
nop
lds
inc
pop
mov
pop
enter
add
dec
sbb
mov
push
stc
or
dec
mov
adc
out
loope
push
shlb
sbb
cld
jne
stc
addr16
inc
popf
inc
fsubl
cltd
adc
dec
sbb
and
cmp
lcall
dec
add
rcrb
test
std
ja
add
rcl
or
or
sub
into
pusha
pop
mov
sbb
imul
roll
ljmp
mov
dec
inc
cltd
stos
sbb
cwtl
rcll
jecxz
fidivl
addr16
xor
icebp
xor
sbb
sbb
out
sbbb
cltd
sub
or
bound
pop
fsubs
adc
shll
ja
dec
outsl
push
sbb
rcr
shll
mov
xor
imul
cmpsb
sub
jnp
xchg
jmp
inc
arpl
lret
push
cmp
shlb
sbb
push
aad
dec
test
inc
sub
mov
mov
mov
cmpsl
jl
rol
xchg
xlat
inc
mov
push
stos
push
jg
and
imul
gs
into
popa
add
lock
retw
or
xchg
shr
rolb
notb
add
mov
inc
add
mov
push
xorl
fwait
or
inc
pop
xchg
push
xor
stos
sbb
mov
adc
xchg
sub
lcall
xchg
or
jecxz
out
addl
cmp
sub
xchg
add
in
adc
mov
lret
fwait
mov
pop
pop
or
stos
inc
cli
jg
subl
data16
stc
flds
adc
lret
mov
orl
lret
pusha
cmp
sbb
ficoms
fs
push
jo
jbe
insl
dec
mov
mov
and
pop
insb
add
out
std
test
push
cmpsb
shll
inc
lahf
or
dec
push
adc
rol
ficoml
push
mov
adc
sbb
xchg
inc
sti
int
pusha
xchg
mov
jecxz
lahf
loop
out
sub
push
mov
mov
stos
scas
push
sbb
aas
dec
gs
ret
mov
popa
pop
or
or
adc
push
jp
sub
scas
inc
into
inc
add
push
jbe
or
cmp
push
cmc
loop
test
xchg
addl
dec
push
popa
mov
mov
bound
movsb
xchg
inc
nop
out
mov
insl
inc
stos
shlb
add
or
cwtl
push
dec
out
cmp
mov
add
loope
stc
or
inc
cmp
test
into
cwtl
jbe
pop
lcall
mov
or
or
es
add
enter
sahf
decb
fnsave
lret
mov
shl
mov
subl
sbb
jmp
inc
inc
lods
sbb
inc
inc
push
inc
pop
dec
daa
inc
lcall
idivl
mov
pop
and
ja
push
addb
subl
mov
jno
gs
sub
mov
mov
cmp
mov
test
mov
test
mov
mov
mov
sub
in
repz
pop
dec
js
and
push
mov
inc
out
cmp
jnp
add
sbb
cmp
push
push
jne
gs
stos
sub
jne
stos
jl
cs
mov
mov
outsl
sbb
jge
pop
addb
dec
lock
jmp
stos
in
jp
inc
lock
lret
lcall
push
jnp
out
nop
movsb
dec
pop
jb
sti
jae
inc
mov
sub
xchg
jecxz
lds
add
mov
xor
fdivp
cli
xor
popa
test
dec
jns
cli
pop
dec
rcr
sbb
into
popf
clc
and
insl
xchg
push
rorb
scas
jle
adc
bound
cmpsl
mov
mov
pop
jl
ljmp
push
xor
rolb
data16
test
bnd
inc
mov
jnp
imul
icebp
out
and
nop
lcall
mov
fcompl
subb
push
xchg
aad
xchg
pop
inc
sbb
inc
dec
cli
cltd
add
pop
shrl
cmp
test
lock
call
mov
mov
shll
arpl
mov
fs
in
cmpb
or
aas
inc
add
xor
lods
cmpsb
pop
add
xor
inc
pusha
jmp
inc
jno
jo
push
insl
xor
push
loopne
es
mov
enter
inc
in
je
and
std
jge
and
jecxz
cmp
das
outsl
xchg
cs
fs
hlt
sbb
push
mov
xor
in
imulb
mov
mov
mov
stos
push
dec
jle
inc
pop
pushf
jno
adc
mov
jmp
pop
mov
add
icebp
push
dec
xchg
adc
pop
cmpsl
add
mov
lods
adc
out
fsubs
fcoms
adcb
mov
add
mov
jle
scas
cli
push
orb
loop
or
xchg
ds
and
data16
aam
stos
out
sbb
insb
pop
aaa
cmc
cmp
cwtl
jmp
fwait
pop
mov
popf
mov
out
outsb
repnz
inc
cmp
jns
push
and
dec
jae
mov
mov
dec
insb
adc
sahf
sub
pushf
popf
fcompl
nop
enter
sti
mov
jmp
cmc
cmp
scas
dec
sti
xlat
cmc
dec
test
std
loope
mov
shlb
sbb
out
push
lods
dec
clc
inc
push
add
loop
ficoml
ret
jb
aaa
fists
pop
cltd
push
lods
mov
mov
addb
cwtl
test
sub
icebp
sub
jno
sub
bswap
adc
inc
cld
jae
cmp
pop
push
cmp
cmp
data16
inc
xor
int
push
adc
sbb
aaa
inc
pop
test
push
or
popf
loope
fstps
and
cmc
orb
aad
add
aas
in
addb
or
dec
int3
cmpsb
and
push
popf
outsl
or
push
pop
mov
movsb
popa
push
jge
sbb
mov
lds
cmp
shlb
lret
xchg
mov
cmc
push
xor
inc
mov
xchg
nop
add
stc
xchg
sub
adc
pop
sbb
in
adc
mov
dec
sbb
test
sbb
inc
push
dec
lcall
pop
inc
jp
popa
mov
nop
pop
xlat
repz
cli
fwait
add
sbb
pop
adc
jno
and
sbb
lahf
gs
mov
aam
out
or
sub
in
cmpsb
dec
icebp
jge
scas
xor
pop
pop
add
test
push
dec
sbb
dec
pop
mov
cmp
mov
and
push
dec
push
jnp
rclb
out
ret
push
push
pop
popf
aam
js
push
daa
jp
mov
mov
dec
mov
pop
cmp
test
adcl
xor
and
pop
sahf
shr
push
lret
nop
dec
je
scas
and
pop
mov
bound
jle
push
xorb
imul
adc
cmp
push
jg
xchg
dec
pop
movsb
inc
add
incl
push
insb
or
lahf
push
inc
and
int
jp
daa
mov
mov
ret
and
rcr
push
in
jno
push
pop
pop
push
sbb
mov
popl
loopne
sbb
push
sub
js
mov
aam
fwait
adcb
fildl
inc
ljmp
inc
cmp
test
or
push
setnp
adc
lods
lea
je
xchg
xchg
call
lock
pop
xor
and
gs
mov
add
sti
pop
mov
mov
data16
or
mov
leave
and
ret
ret
sahf
sbb
fdiv
jb
mov
sub
mov
add
movsb
fildl
pop
mov
cmpsb
pop
fs
jae
enter
sbb
ret
je
in
sub
es
mov
xchg
lret
out
cmp
mov
xchg
out
int
sbb
inc
push
pop
jmp
pop
popf
int
pop
jmp
mov
jp
cmp
push
arpl
bound
insb
mov
cli
bound
dec
test
push
sbb
aad
mov
jge
xchg
adc
pop
add
scas
jbe
add
or
rcrl
push
movb
pop
lds
cwtl
xchg
fidivl
mov
in
les
add
lods
jb
das
mov
inc
repnz
pop
divl
inc
or
jno
sbb
inc
fs
push
dec
jnp
lods
and
sub
push
adc
cwtl
out
out
pop
stos
sahf
mov
pop
jge
mov
js
inc
push
dec
pop
fmulp
shrl
mov
push
gs
pop
test
popf
sub
int3
leave
jg
xchg
mov
pop
or
in
push
mov
dec
mov
xchg
shl
in
subb
mov
imul
fdiv
pop
pop
add
insl
jg
mov
inc
lret
sbb
lcall
test
jmp
int3
inc
push
mov
in
outsl
xchg
jns
sub
cmpsl
ret
sbbb
xchg
out
adc
repz
xor
adc
loope
add
movl
mov
test
inc
es
aad
fiaddl
in
pop
std
jl
mov
cmpb
push
test
scas
int
mov
mov
push
popf
movsl
addb
and
test
outsb
xchg
sbb
xor
jmp
push
loop
es
mov
mov
push
lret
mov
mov
push
bound
push
jmp
mov
mov
mov
inc
adc
push
mov
inc
mov
add
dec
mov
pushf
add
push
imul
pop
inc
sbbb
pop
jbe
sbb
out
jnp
neg
jbe
lock
dec
das
inc
inc
ret
in
and
add
pop
lahf
sbb
sub
xor
sbb
mov
std
aaa
rep
xor
and
faddl
js
out
add
shlb
inc
lods
sub
into
cmc
sahf
pop
pop
idivb
ss
jno
cmpsl
scas
popl
xorl
aad
jg
mov
ljmp
sub
imul
loope
jnp
jne
jmp
mov
xchg
lret
mov
xchg
test
mov
xchg
and
push
push
or
sbb
sub
sbb
in
xchg
mov
jl
or
add
fsubr
int
cmp
arpl
rcrl
sub
lahf
sub
incb
jp
orb
in
xchg
add
inc
jno
sub
in
lods
mulb
popa
gs
sbb
scas
imul
xor
lret
lea
pop
inc
xor
adc
adc
aam
or
stos
cmpsb
les
pop
lcall
je
insl
xchg
lea
mov
dec
add
add
add
sarb
jecxz
lcall
dec
loope
xor
inc
dec
pop
sub
cmp
lock
adc
and
or
add
rcll
cmp
insl
lock
xchg
popa
stc
ficoms
inc
push
jle
jnp
mov
pop
xlat
pusha
mov
insb
dec
push
fbstp
adc
filds
hlt
push
leave
movsb
inc
imul
shlb
push
inc
adc
pop
lret
sahf
and
imul
jo
add
stos
push
xor
in
or
push
popf
dec
mov
mov
mov
xor
xor
mov
test
xor
dec
cmpsl
add
add
mov
mov
mov
divl
xor
or
mov
mov
lea
orb
popa
cli
push
icebp
lret
scas
push
jmp
mov
dec
cwtl
fidivrl
xchg
push
cwtl
pop
xchg
ret
ror
adc
subl
pop
ror
sbb
dec
std
divb
jmp
ljmp
sahf
jge
subl
and
pusha
leave
adc
add
div
xchg
pop
out
push
adc
pop
das
jecxz,pt
imul
adc
cmpsb
pop
push
xchg
fildll
cli
addl
fs
gs
inc
sub
inc
outsb
or
mov
cwtl
push
je
xchg
out
jmp
sti
cmc
mov
add
push
fdivrl
in
icebp
jae
lret
idivl
jno
cmp
cmp
nop
in
jmp
jns
push
dec
lcall
xchg
fsubl
push
add
add
out
xlat
shr
out
icebp
lea
data16
adc
ss
cmc
inc
add
push
xor
sbb
rcrb
jno
sub
xor
lods
xchg
ret
and
mov
push
add
popa
lret
shrl
mov
add
in
push
mov
push
push
lret
iret
mov
leave
add
xor
mov
cld
lods
mov
cli
inc
fs
iret
fmul
push
stc
inc
or
dec
mov
inc
sbb
mov
sbb
push
sub
cmc
fistpl
ret
push
aaa
lret
lret
int3
push
mov
imul
and
fldt
pushf
aad
inc
cmp
adc
xor
sti
or
xchg
fdivrs
fsubrs
mov
das
arpl
dec
xor
and
cmpsb
lahf
xor
bound
pusha
inc
aad
push
and
shrb
or
mov
js
in
jecxz
xchg
pop
or
fiaddl
mov
jno
stc
scas
scas
fucomp
jl
mov
scas
add
xchg
or
xor
daa
cltd
shl
int
push
mov
sbb
insl
mov
jg
pop
faddl
xchg
add
andl
test
pop
push
xorl
fsubrl
mov
push
sbb
mov
in
jl,pn
push
and
in
pop
pop
inc
xchg
push
add
pop
cmp
push
fisttps
mov
xchg
or
jnp
and
push
inc
lcall
adc
dec
out
pushf
jge
rorb
add
add
push
jae
fimuls
cmp
test
push
pop
inc
dec
test
testl
mul
loopne
insb
push
hlt
ret
add
stos
mov
mov
jno
sahf
popa
add
xchg
push
subl
std
test
repz
gs
xor
cmpsb
orl
daa
sub
push
out
add
shr
jae
jmp
nop
das
inc
inc
int3
xor
push
fstpl
mov
test
je
mov
repnz
or
xchg
imull
inc
test
testb
dec
in
mov
mov
divl
mov
pop
test
jne
jecxz
ja
test
pushf
aaa
jp
rorb
xlat
mov
push
mov
xchg
test
lock
sub
js
ffreep
add
pop
nop
lret
add
in
sub
cmpl
faddl
popa
stc
cmp
xchg
cmp
shll
sarl
add
jbe
mov
push
jnp
xor
sbb
adc
jb
test
mov
mov
out
xor
rclb
xchg
hlt
mov
sub
push
ficoms
xchg
mov
std
aad
fsubl
fwait
add
dec
mov
mov
ss
sbb
push
cmp
in
repnz
sahf
pop
add
push
adc
popa
mov
jp
mov
ljmp
mov
xor
xor
add
xor
mov
mov
dec
rorb
loope
pop
dec
pop
xchg
fdivrl
repz
aam
cwtl
sub
outsb
icebp
mov
gs
push
xchg
sahf
add
mov
inc
popa
shl
mov
fdivrs
sub
idivl
xchg
mov
icebp
hlt
add
fisubs
jmp
mov
lds
sbb
ret
faddl
in
mov
aad
xchg
fwait
xor
push
in
das
jo
loope
jmp
and
rorb
pusha
lds
lret
popf
mov
or
pop
push
mov
and
fs
adcb
insw
mov
or
dec
adc
jne
lds
mov
sarb
jmp
in
push
fcomps
xchg
rorl
inc
dec
sub
rcrl
mov
mov
scas
bound
or
xchg
push
and
sub
push
cmc
shl
mov
iret
cli
cmc
cli
dec
es
mov
sub
push
pop
ds
inc
popf
push
mov
jns
es
sbbl
cmpsb
imul
push
nop
cmpsb
push
popa
aam
sub
pop
pop
repnz
fistpll
ret
xor
inc
dec
cli
or
popa
and
ret
jmp
adc
push
cmc
dec
sbb
cwtl
cmp
push
cli
add
sub
lock
jmp
jp
adcl
xor
inc
int
add
or
jge
mov
xlat
fcmovbe
dec
push
sti
sti
dec
mov
sarb
push
sbbb
jno
mov
aaa
mov
insb
push
and
add
pop
nop
cmpsl
push
sahf
arpl
push
scas
js
add
dec
inc
or
sti
test
insb
data16
sbb
push
lret
sbb
dec
sbb
lcall
dec
add
fstp
push
test
in
xor
sbb
test
mov
and
stc
lahf
stos
stos
sub
pop
xor
sbb
xchg
rclb
lds
cld
idivb
mov
push
mov
stos
shl
mov
inc
cmc
bound
add
or
xor
mov
mov
or
push
mov
jmp
nop
js
push
inc
repz
mov
rorl
dec
dec
insb
cmp
inc
movsl
add
sub
cmpl
cwtl
inc
into
mov
push
xor
addb
push
fnstenv
add
inc
jne
cli
ja
cmp
test
inc
inc
lds
add
cmp
aam
cmp
sbb
pop
add
cltd
data16
push
fdivl
popa
jl
xorb
enter
xchg
mov
add
cs
in
sarl
push
pusha
sub
push
pop
mov
pop
and
add
add
jne
ja
sahf
push
xchg
xor
pushf
insb
cmpsl
jbe
inc
add
cmp
adc
gs
mov
outsb
andb
adc
clc
adcl
daa
pop
gs
or
fdivl
xor
test
jb
fimull
xor
dec
add
sti
push
testb
jb
or
jnp
test
add
popf
insl
push
xor
das
test
sub
sbb
bound
sbb
aam
in
scas
data16
adc
fistpll
sbb
ret
dec
cmp
aaa
sbb
pop
cli
test
and
not
repz
in
mov
ja
movsl
jp
cmp
push
jle
and
push
xor
fwait
rcll
lcall
sub
lret
imul
addl
add
ret
fwait
out
test
push
xchg
cmc
ficomps
addr16
inc
adc
stos
add
imulb
fisttpll
add
push
jle
sbb
push
add
jg
popf
testb
rcrl
fs
sub
idivl
dec
mov
lds
mov
lock
sarl
mov
stc
mov
cld
int3
loope
ja
push
mov
cmc
cmc
add
fs
arpl
and
inc
ret
sahf
mov
adc
cmp
or
jge
cmp
subb
rclb
test
mov
mov
add
or
adc
cli
cmpsl
cltd
adc
mov
imul
sahf
add
mov
testb
loopne
jle
outsb
popa
push
jge
into
or
cmpsl
and
test
inc
pop
xchg
add
cmc
inc
fstp
insb
imul
in
notl
adc
fstl
or
fsubl
xor
mov
mov
xchg
rcrl
add
push
out
out
mov
popf
push
or
push
movsb
jle
lret
test
pushf
cmpsb
mov
dec
jne
leave
fsubr
xchg
pop
push
lret
xchg
pop
lock
adc
lahf
xchg
pop
shlb
ret
addr16
add
push
mov
mov
jle
inc
out
pop
leave
push
scas
push
arpl
icebp
sbb
push
xor
sbb
cmc
out
fisttpl
lods
pop
inc
stos
test
inc
mov
or
ja
cld
or
or
fnstenv
push
or
aaa
push
xlat
dec
sbb
push
lea
xorb
pop
setae
cmp
orb
mov
add
push
inc
sahf
sub
sahf
add
sbb
mov
fcoml
imul
or
sbb
inc
inc
out
adcl
popf
dec
xchg
out
inc
sahf
push
inc
lahf
inc
add
xor
dec
iret
mov
jge
lcall
and
pop
push
or
ja
arpl
or
push
xchg
fmuls
daa
add
ds
out
mov
lock
scas
leave
das
dec
adc
push
fsub
inc
fsubrs
jecxz
shll
jno
scas
inc
rorl
loop
addr16
push
add
int3
or
adc
and
or
jl
xchg
fdivl
inc
insl
sub
jo
and
sti
push
das
js
int3
orb
push
cli
add
sub
mov
mov
xor
sbb
dec
pop
test
sahf
andl
adc
add
clc
fldenv
decl
test
add
mov
in
xor
rclb
or
push
add
dec
adc
imul
pop
loope
daa
fdiv
fstpt
dec
inc
sub
and
push
adc
ror
movb
and
out
repz
jecxz
xor
mov
or
mov
dec
gs
dec
movb
inc
filds
add
sti
mov
adc
inc
mov
inc
push
mov
addr16
xor
loop
push
clc
cld
pop
dec
and
jmp
arpl
dec
icebp
xchg
jp
pop
repz
or
xchg
pop
sbb
mov
or
fisttps
xchg
add
loop
popa
sub
fstpl
mov
xchg
int
push
jbe
add
movb
idivb
or
xchg
push
dec
gs
lret
add
fmull
fs
mov
sbb
xor
mov
inc
xor
and
ljmp
push
inc
push
insb
push
fisubrs
imul
mov
mov
add
sbb
lahf
je
sbbl
xchg
mov
lods
negb
xor
sar
cmp
mov
icebp
fucompp
mov
cwtl
das
iret
dec
imul
repz
stc
mov
mov
nop
mov
sbb
aam
jo
push
cwtl
push
sahf
cmpsb
pop
xorb
into
insl
fstl
dec
mov
or
push
jge
push
loopne
or
push
aad
cmc
in
xchg
jp
push
adc
mov
cli
jne
test
lods
shr
pop
mov
sub
cmpsb
fldcw
push
repz
out
or
fstpt
xchg
sub
sub
cltd
dec
xor
mov
movsb
push
dec
aaa
cmc
les
mov
xorl
push
jg
jl
pop
daa
or
mov
scas
aas
data16
jmp
push
dec
or
loop
mov
iret
mov
loope
orl
xor
dec
xchg
outsb
bound
pop
sbb
scas
dec
add
test
call
mov
test
in
add
imul
jmp
arpl
sub
sbb
loope
add
push
jge
push
xchg
in
dec
pop
lods
popa
gs
test
mov
push
push
jne
clc
jbe
insb
pop
add
inc
adc
or
dec
shr
test
ret
dec
cltd
add
push
adc
cmp
lret
inc
push
pop
ljmp
mov
mov
sbb
rcrb
dec
xorl
dec
push
notl
xchg
out
jae
clc
or
dec
pop
loope
pushf
dec
add
xor
xorl
jns
les
lock
shrl
inc
adc
rcll
cmp
mov
outsl
mov
adc
xlat
cltd
scas
shll
mov
jmp
lret
add
lret
sti
es
daa
pop
or
dec
fistpl
inc
inc
lock
cmpsb
jne
das
fcmovnbe
mov
lahf
and
xchg
mov
xchg
add
pusha
push
sub
sub
pop
sbb
enter
test
cmc
mov
adc
mov
dec
outsl
xchg
xor
pop
push
fisubs
inc
clc
or
enter
jo
int
ds
or
ret
push
xchg
ret
mov
pop
and
and
cltd
pop
jne
pusha
push
and
push
push
sbb
ror
insb
and
lods
jecxz
into
faddl
negl
cmp
push
adc
cltd
mov
jae
add
add
add
pop
repz
jg
pop
dec
push
sbbl
iret
fwait
cmpsl
pop
repnz
push
pop
dec
cmpb
sbbb
sbb
imulb
leave
aas
sbb
add
mov
push
or
sub
inc
sbb
aas
or
mov
jmp
sub
pusha
push
xchg
adc
ja
mov
fs
sbb
mov
repnz
sub
popa
int3
je
inc
insb
sub
push
jle
inc
inc
ja
inc
sbb
idivb
lock
fcoms
out
pop
pop
and
aam
movsb
cs
int
mov
push
cli
inc
stos
ljmp
cmp
jp
push
mov
mov
pop
inc
sbb
mov
jge
cmpb
xchg
cmc
sbb
inc
stc
addr16
leave
push
cmpsl
jo
incb
mov
mov
out
push
fmuls
and
and
inc
jl
addr16
popf
in
fs
scas
pop
pop
sbb
sub
dec
andb
push
add
jnp
push
push
xchg
xlat
lds
addl
dec
stc
int3
dec
inc
mov
adcb
addr16
out
gs
iret
or
sub
fcomip
cwtl
cmc
scas
jp
jecxz
outsb
sbb
sub
sbb
pushf
mov
push
rcll
cld
xchg
aaa
inc
mov
jmp
mov
negl
push
inc
popa
pushf
aad
dec
add
xchg
adc
mov
inc
mov
inc
jp
dec
push
or
xor
push
les
lea
arpl
je
pop
mov
sub
inc
sbb
subb
push
js
mov
inc
std
imul
out
popf
add
mov
xor
and
lahf
test
bound
pop
test
sbb
dec
out
jne
pop
pop
in
cmpl
lock
mov
add
push
adc
test
cmpsl
loopne
push
movsl
jne
sub
mov
loope
mov
xchg
dec
mov
sbb
fistl
stc
cld
pop
icebp
push
mov
hlt
jo
adcl
gs
ret
ljmp
sti
inc
fdivs
into
xchg
test
mov
roll
cmpsl
mov
pop
cltd
sub
add
and
test
add
or
out
sahf
mov
mov
repnz
mov
iret
scas
inc
sub
cmpsl
stc
daa
cmc
or
or
les
pop
cmp
add
imul
in
fbstp
pop
scas
xor
fcoms
out
pushf
aam
stos
dec
xchg
xor
mov
add
add
rcl
rcl
hlt
popa
adc
cltd
filds
iret
adc
punpcklwd
stos
pop
inc
mov
gs
and
fisubrl
ljmp
pusha
jo
push
adc
addr16
sbb
sbb
push
out
push
push
fistl
jg
jnp
cmp
jae
aam
movsl
hlt
xchg
in
and
mov
lret
lock
mov
jge
adc
and
mov
inc
add
iret
adc
pop
inc
and
inc
pop
dec
cltd
sbb
jnp
and
lds
xor
dec
ljmp
aas
sbb
into
data16
xchg
pushf
out
lea
addl
sbb
cwtl
and
cltd
pop
xchg
lea
xchg
and
subl
lock
lods
sub
fwait
xchg
adc
jae
movl
xlat
iret
enter
dec
arpl
lcall
stos
popf
add
cvtps2pi
dec
inc
ret
pop
dec
enter
jmp
shlb
clc
testb
popf
add
sbb
das
adc
or
jb
jo
fcomps
jp
pop
movsb
pushf
fsubs
dec
cs
inc
xchg
add
jmp
ds
test
ljmp
fs
out
jae
leave
lds
mov
xchg
or
scas
inc
test
sbb
cmp
ljmp
push
cld
jl
fsubs
push
mov
or
addr16
shlb
stos
out
and
sbb
adc
fimull
bound
or
fstl
push
out
fiaddl
mov
repz
dec
shl
xor
and
mov
pop
out
lcall
dec
stos
inc
outsl
pushf
xor
shrb
jb
in
pop
add
cmpsl
inc
pop
mov
ffreep
mov
test
adc
inc
mov
aaa
xchg
inc
pushf
jl
sub
xchg
sbb
mov
cmp
ljmp
xchg
xor
daa
mov
loop
cld
add
dec
push
mov
pop
push
insb
cmp
jp
add
cmc
add
and
insb
push
cwtl
ret
xor
mov
push
arpl
movb
dec
imul
outsl
sub
mov
mov
inc
and
add
dec
add
mov
adc
xor
mov
pop
ja
lock
mov
and
jl
pop
lds
mov
mov
jb
out
das
sub
xchg
stos
sbb
rorl
jg
dec
and
push
sahf
cmp
adc
imul
loop
add
mov
dec
adc
cltd
sub
inc
dec
inc
lods
and
jge
les
popa
outsb
mov
inc
push
xchg
cmp
ds
jecxz
pusha
add
push
inc
test
adc
dec
adc
push
mov
stc
fwait
lods
rcrl
int
fcmovnb
xor
and
enter
add
lret
pushf
pop
clc
jecxz
and
mov
nop
xor
into
jge
dec
sbb
lds
sbb
mov
cltd
repz
xlat
adc
push
leave
test
push
sahf
dec
jecxz
mov
push
jmp
or
sub
pop
inc
xor
mov
mov
xchg
scas
mov
enter
addl
jne
xchg
xor
in
ss
pop
sbb
jnp
dec
sti
shrl
mov
dec
sub
push
and
aas
mov
sbb
mov
imul
push
cmpsb
inc
cmc
sbbb
sarb
and
test
das
mov
int
std
sub
inc
lcall
divl
jecxz
inc
add
popf
jge
pop
scas
adc
test
jp
adc
mov
xor
ljmp
stos
jne
fucompp
cmp
das
jno
and
in
sbb
dec
pop
stc
push
cs
lcall
or
sub
xchg
xchg
test
sub
and
pop
ja
jne
adc
iret
pop
inc
loope
lods
imul
and
test
repz
push
cmp
icebp
mov
adc
mov
or
pop
mov
cltd
inc
push
lock
cmp
jbe
lea
lods
dec
loopne
inc
or
fdiv
mull
fidivl
xchg
cli
add
imul
fisttps
xor
rclb
xchg
in
test
daa
cltd
mov
push
gs
jmp
imul
lcall
push
push
inc
mov
pop
push
xor
aam
data16
inc
jmp
jmp
jl
pushf
push
push
xchg
jg
dec
xor
mov
pop
inc
sbb
rcrb
repz
scas
outsl
mov
mov
div
dec
in
adc
add
and
dec
mov
push
popf
xchg
repz
outsl
lods
cmp
sar
mov
mov
xchg
test
cld
inc
test
push
rcrb
xor
loope
add
mov
and
sbb
pop
inc
mov
cmpsb
mov
mov
mov
inc
pop
scas
sbb
pop
push
mov
sub
add
jno
outsb
fmull
fs
dec
divb
ror
cmc
mov
sbbl
into
fidivs
aam
xor
mov
jp
xor
repz
pop
ljmp
in
sub
inc
shll
sub
sub
sahf
add
das
sbbl
jmp
ret
mov
sbb
xor
jbe
adc
xor
adc
ljmp
mov
fists
push
dec
dec
pop
dec
jecxz
dec
sbb
add
insl
xchg
push
fildll
mov
pop
add
daa
jp
shrl
insl
loop
pop
inc
push
mov
mov
push
push
movaps
or
xlat
lret
into
mov
add
sbb
in
xchg
jo
cmp
aad
add
sbb
xor
dec
test
xchg
sbb
jne
test
test
inc
pusha
lds
lods
sub
popa
jle
loop
in
lret
fadd
jno
and
ret
and
outsl
lock
mov
dec
data16
mov
mov
sub
sbb
loopne
lds
inc
add
add
xor
addb
dec
enter
sub
popf
repz
int3
daa
sbb
sbb
aaa
jle
imul
loope
mov
fs
lds
je
jne
or
leave
sub
stos
jmp
adc
cld
xchg
clc
stos
add
and
push
das
cmpsl
pusha
cmp
mov
or
mov
clc
sbb
scas
bound
fsubrl
add
and
mov
mov
mov
mov
fdivs
push
gs
pop
std
popa
mov
loopne
fiadds
adc
pop
mov
cmp
mov
int
mov
mov
add
pop
lods
fidivs
ficoml
icebp
push
push
or
addb
insb
inc
es
mov
inc
push
xor
sub
dec
sahf
xor
dec
mov
fimull
daa
cmc
out
sbb
mov
scas
sub
je
push
ja
cmp
popa
testl
dec
ljmp
sbb
mov
outsl
testl
lahf
sbb
xchg
pushf
stos
adc
inc
xchg
pop
pop
lahf
sahf
or
gs
mov
mov
inc
out
out
xchg
insb
inc
or
es
jno
iret
push
xchg
ret
xchg
sbb
pop
cmp
stos
inc
lds
cmp
btcl
mov
jb
insl
jl
std
stc
rolb
cmpsb
xorl
xchg
xchg
scas
dec
xor
xor
lock
jb
cwtl
sbb
xchg
es
sub
sbb
xor
jl
dec
pushf
pop
sbb
mov
jge
in
loopne
push
ret
xchg
adc
mov
loopne
push
mov
sub
push
xor
pop
push
insb
aas
mov
inc
xchg
faddl
in
addb
mov
roll
dec
je
in
test
stos
or
test
mov
mov
mov
jmp
sub
sub
divl
daa
clc
mov
shl
cmp
or
pop
xlat
push
mov
push
add
stc
add
sbb
sub
mov
push
leave
test
or
add
cmc
or
push
sbb
dec
dec
xchg
push
adc
popa
fs
loope
dec
mov
es
pusha
sbb
fimuls
jb
mov
sahf
ds
cmc
add
add
int
jle
sub
and
mov
or
sub
ret
dec
mov
adc
pusha
data16
mov
cmp
loope
mov
mov
sbb
into
pop
fadds
popf
and
add
push
xchg
insb
xchg
inc
scas
aad
fmul
inc
xchg
imul
imul
cmp
into
pop
int
pop
sbb
xchg
or
jnp
sahf
imul
popf
add
dec
hlt
jne
xchg
lret
jecxz
jbe
and
adc
cmpb
fcoml
ljmp
adc
cmp
inc
jmp
inc
loop
negl
ret
enter
imul
roll
aad
in
pop
fildl
cmpsl
mov
pop
repz
add
mov
push
int3
sti
jb
fdivrs
dec
jl
subb
sbb
lock
into
and
adc
inc
popf
push
or
inc
daa
gs
jne
out
shrl
insl
inc
dec
cmp
mov
bound
pop
mov
push
xor
mov
scas
jo
adc
sbb
mov
lock
sbb
pop
fisubs
scas
fdivr
jle
push
jg
pop
mov
or
std
adc
loope
xlat
push
xor
jns
ficoml
pop
shr
in
scas
add
neg
lock
call
push
sbb
inc
int3
je
out
jp
lods
loope
jp
inc
push
xchg
mov
mov
jns
and
mov
or
add
inc
push
adc
fdivl
ret
scas
xorl
push
ror
sbb
add
push
iret
mov
cli
dec
sub
mov
enter
push
and
xchg
sbb
mov
cmp
popa
pusha
insb
add
jge
mov
sbb
cmp
stc
xor
inc
sbb
das
adc
stos
adc
stos
push
mov
movsl
add
add
jl
cmp
sbb
push
fmul
arpl
adc
jl
pop
add
mov
lcall
inc
sub
mov
jns
cltd
cwtl
push
sahf
xlat
sub
jns
jge
and
xchg
add
cmp
xchg
in
stos
fsubr
adc
add
pushl
aam
in
lods
inc
daa
stos
inc
test
xlat
dec
lds
pop
add
loope
inc
leave
push
in
pushf
notl
imul
adc
pusha
clc
adc
sbb
push
movsb
add
fldt
stos
cmpsb
pop
std
insl
jmp
int
jno
mov
loop
js
int3
jns
add
adc
add
dec
cwtl
in
sub
sbb
outsl
popf
data16
rorl
jne
addr16
dec
into
mov
les
jmp
mov
cmpl
cmp
add
cltd
push
xor
inc
movsl
outsb
cmp
mov
into
loope
inc
mov
out
mov
fnstcw
repz
mov
icebp
lea
inc
xchg
jecxz
nop
inc
mov
and
sub
xor
add
ret
js
or
or
xchg
dec
sbb
hlt
fimull
adc
xor
scas
and
mov
js
add
in
fucomp
sbbb
push
mov
repnz
das
add
cltd
int3
in
add
cmpl
fld
test
pop
pop
outsl
test
out
add
fcoms
inc
and
lcall
jl
ljmp
mov
test
fldcw
subl
mov
notl
call
pop
data16
arpl
les
add
xor
cmp
call
imul
out
sar
jo
lret
sbb
daa
pusha
out
in
jp
xchg
int3
inc
jmp
push
cmp
jbe
sub
add
sub
add
push
orb
and
repz
pop
out
pusha
mov
cs
adc
jge
stos
jnp
scas
dec
mov
stos
leave
out
or
mov
pop
call
aad
add
dec
nop
sub
mov
aad
sub
sub
push
fistps
xor
push
xchg
mov
inc
sub
jge
push
inc
or
or
cmpsb
out
out
repz
pop
negl
jecxz
adc
mov
sbb
sbb
cmpsb
sbb
idivb
in
jno
jl
popf
push
cli
rorl
add
das
leave
int3
pop
addr16
nop
xor
les
or
repnz
dec
cmpsl
imul
stos
xchg
or
mov
dec
arpl
inc
inc
dec
mov
or
jnp
inc
push
jle
xor
fldcw
jbe
sahf
pop
pop
addr16
cmp
cmc
js
decb
xor
testl
hlt
je
sbb
sbb
xchg
mov
fidivs
or
popf
dec
sub
pop
sbb
pop
pop
fnstenv
pop
lret
fstl
dec
xor
xchg
pushf
or
dec
jae
add
or
scas
addr16
imul
jle
enter
lret
xor
ret
ror
pushf
cmp
icebp
testb
and
outsb
dec
lret
sahf
cltd
add
jno
lds
mov
insb
mov
daa
sbb
test
pop
addr16
int3
scas
cmp
pusha
into
cmp
add
and
jp
orl
or
test
cmovge
popf
filds
inc
pop
xchg
mov
push
or
jno
xchg
pop
cmpsl
fcmovb
pop
add
sbb
fsub
jmp
repnz
cli
rcll
push
sub
ror
aas
test
sub
out
imul
aas
rcrl
mov
or
push
push
aam
jbe
das
pop
jge
or
clc
lcall
jl
lods
fldenv
movl
arpl
rol
pop
cmpsl
jns
or
loopne
fnstcw
sbb
pop
mov
test
or
repz
jg
call
js
cld
popa
fmuls
fwait
mov
insl
push
fsubs
sbbl
sbb
ds
clc
sub
and
jecxz
xchg
add
sub
jg
outsl
or
popa
cmp
push
lret
sbb
icebp
jno,pn
mov
dec
mov
mov
cwtl
fidivs
sbb
and
pop
or
jns
dec
movsl
fidivl
je
shll
cmp
nop
dec
pop
loop
pop
loopne
lcall
xorl
fstpl
pushf
int3
jbe
xor
aaa
cmc
inc
subb
mov
cmpsb
or
mov
jecxz
out
hlt
sbb
jmp
or
stos
lret
jne
sbb
mov
and
xor
dec
sbb
add
sub
mov
jp
nop
xor
and
adcb
xor
xor
cmp
pop
imul
cltd
sub
xor
jno
nop
mov
roll
out
jns
jbe
xchg
lea
test
movsb
pop
int
cmp
jne
push
fiaddl
jge
icebp
inc
aam
adc
aaa
pop
cltd
popa
out
scas
shlb
js
in
mov
sbb
xchg
nop
lea
add
or
loopne
sbb
mov
stos
push
rorl
sbb
pop
in
mov
cltd
sbb
mov
fcmovnb
lock
stc
sub
aam
sub
push
ret
add
inc
lods
mov
mov
stos
dec
inc
mov
in
sbb
or
mov
xchg
fwait
pop
add
jmp
icebp
jne
jmp
mov
mov
or
adc
add
and
in
mov
cs
mov
sub
scas
aas
stos
mov
jbe
sbb
fwait
push
xchg
mov
sub
push
push
fistpll
sarl
pop
repnz
rcr
repnz
add
inc
in
cmpsb
mov
mov
jp
popf
inc
sbb
mov
or
jb
push
cli
xor
inc
sbb
movsb
mov
js
cmc
sbb
mov
fbld
sub
rcr
push
dec
or
mov
jno
adc
push
mov
pushl
mov
stc
push
push
fcomps
leave
and
sbb
hlt
cmpsl
sbb
mov
pop
dec
mov
xchg
ds
sti
out
jno
cmc
in
sub
roll
pop
sbb
fldcw
fstl
sub
sub
mov
pop
xor
xchg
push
loope
sub
inc
in
fisubl
popa
push
lcall
mov
decl
out
out
inc
mov
aaa
adc
add
stos
and
imul
cltd
inc
adc
xchg
rorb
addr16
mov
mov
scas
stos
fildl
inc
cmp
fmulp
into
rcrl
in
mov
pop
cmp
out
push
inc
data16
adc
js
mov
or
push
dec
daa
xlat
adc
mov
cmpsl
xor
mov
pop
cmpsb
fstps
sbb
push
mov
inc
dec
jg
mov
adc
lahf
lcall
es
lods
mov
sub
add
arpl
push
cmp
lods
popa
add
push
mov
xchg
xchg
or
jne
xchg
adc
in
push
mov
gs
je
sbb
jmp
mov
sbb
sub
enter
inc
gs
lods
pop
bnd
and
xchg
inc
push
lods
xor
dec
popa
mov
mov
fwait
popf
jmp
add
dec
daa
mov
sbb
jl
push
jno
lea
or
adc
loopne
and
sbb
es
and
sub
pop
repz
sbb
inc
sbb
push
push
scas
push
lds
ret
in
add
dec
push
pop
dec
lods
pop
mov
sbb
and
and
cmc
stc
xchg
jmp
sbbl
loope
or
cmp
and
sahf
push
pop
lods
ret
adc
push
jp
dec
pushf
shrl
ljmp
test
mov
mov
and
mov
out
sbb
mov
dec
leave
rolb
mov
jl
add
enter
add
and
sbb
aas
pop
xor
fsub
out
mov
popa
add
xorb
cli
and
sbb
sub
pusha
jecxz
xchg
mov
inc
icebp
cmp
pushf
push
pop
cmpsl
push
or
aam
lds
sub
cmp
mov
sbb
mov
icebp
sahf
xor
mov
cltd
inc
pop
repz
loop
cltd
mov
lahf
mov
aaa
lcall
ret
sub
pop
push
fistpl
clc
inc
sub
int
push
jne
js
dec
push
jmp
decl
xchg
xor
xchg
jbe
and
movsl
addl
sub
pop
jb
sbb
mov
pop
and
push
pop
les
add
loope
jmp
cmpsb
stos
mov
push
xor
xchg
cli
mov
mov
mov
pop
or
std
inc
mov
lock
dec
or
sti
cld
push
lea
es
mov
and
dec
clc
or
aaa
jge
xchg
rcrb
sbbb
push
in
inc
pop
pushf
push
and
jae
dec
rolb
mov
ja
in
out
aad
adc
aaa
mov
adc
imul
insb
push
daa
cmp
int3
mov
xorb
dec
mov
xchg
push
push
xchg
data16
popa
mov
inc
sub
out
dec
stc
push
or
scas
mov
arpl
mov
dec
repnz
push
out
push
xor
jle
mov
aaa
inc
out
mov
cmp
mov
dec
mov
add
mov
dec
sbb
leave
out
mov
xchg
add
or
cmpsb
push
lods
jl
mov
sahf
sbb
xchg
insb
lods
xor
lcall
pop
and
mov
mov
sbb
into
dec
sbb
into
sub
stos
push
cmp
inc
popa
push
mov
loop
push
mov
idivb
add
lds
mov
dec
cmc
addb
inc
or
xchg
add
js
cmpsl
inc
sub
ljmp
cmp
addr16
into
cld
movsl
jns
movsl
ret
mov
in
jns
xor
sub
push
lret
in
leave
xchg
data16
add
jmp
push
movsb
sarb
and
pushf
or
clc
sub
fildl
xchg
mov
sub
sbb
adc
jo
cld
loop
test
and
lcall
data16
negl
pop
icebp
pushf
jl
rclb
or
pusha
sbb
daa
jg
jmp
sti
out
imul
ds
dec
out
aad
ror
xorl
mov
push
push
fstpl
out
adc
pop
fsubr
imul
mov
iret
mov
mov
cmp
andl
lods
mov
xchg
fwait
insb
pusha
push
int3
loop
ljmp
shrb
sub
pop
xchg
mov
popa
add
xchg
pop
sbb
lock
inc
outsl
pop
jne
cltd
push
std
lds
mov
mov
imul
add
dec
or
cli
aad
repnz
cmc
push
push
loopne
xchg
fildll
xchg
or
es
lret
sti
dec
push
or
gs
sbb
xchg
jno
cmp
lahf
jns
pop
sub
outsb
xchg
inc
jp
xor
xor
xor
sub
pop
dec
pop
arpl
cs
inc
data16
aaa
mov
sbb
ljmp
stc
stos
fsubrs
out
andl
push
jle
ret
inc
xor
pop
adc
or
dec
loopne
test
jo
xchg
xorb
push
sub
fwait
stos
mov
inc
jne
stc
jno
scas
add
rorb
lcall
sbb
js
dec
jle
mov
cs
testl
xchg
and
cmc
xchg
adc
std
sbb
jbe
testb
mov
or
cmp
movsb
jle
cs
cli
std
fists
fwait
testb
pop
inc
pop
dec
sbb
jp
sbbb
sbb
jmp
xchg
inc
into
jns
pop
or
sarb
and
or
cmpsb
or
cmp
dec
aaa
popf
and
in
push
aad
mov
xor
jno
aad
sbb
data16
loop
clc
or
xchg
jb
ret
ret
mov
sbb
and
xchg
insl
pop
push
adc
mov
mov
sbb
pusha
inc
imul
push
insb
jecxz
fldenv
adc
pop
xor
or
pop
out
fwait
ret
xor
dec
push
repz
popf
xchg
cmp
xchg
dec
lcall
or
jmp
rolb
jae
pop
push
sbb
cmp
mov
ficoml
xlat
adc
and
gs
pushf
sbb
popf
lds
test
inc
adc
or
incl
jb
std
inc
data16
pop
std
ret
hlt
cmc
sbb
insl
lahf
aaa
movsl
in
cs
inc
and
add
mov
dec
cmp
push
int
pop
les
dec
xor
add
mov
mov
inc
cmp
mov
adc
sbb
sub
jne
dec
cmp
addl
orb
xchg
filds
js
fucom
xchg
jge
add
out
sti
jge
stc
dec
adc
sbb
mov
stos
out
or
jbe
jnp
xor
orl
xorb
pop
sbb
popa
xor
sub
push
or
shl
out
fwait
pushf
push
mov
sub
pop
pop
add
xor
fdivl
xor
inc
outsl
popa
test
dec
adc
gs
jp
push
rcll
ljmp
jmp
insb
inc
inc
add
test
jge
mov
into
push
xchg
cld
mov
lret
xor
dec
lock
jle
repz
lea
sbb
fsubs
call
pop
lret
mov
xor
push
inc
rolb
inc
scas
push
lret
xor
addr16
push
sbb
and
sub
mov
jb
mov
popa
jl
jns
pop
jb
ljmp
sti
mov
jno
mov
push
push
and
mov
sbb
inc
push
addb
int3
jp
push
inc
shll
add
jp
pop
fistl
std
push
popa
cltd
jle
cmp
orl
pop
jge
xchg
dec
sub
mov
nop
insl
cli
xchg
inc
leave
or
rorl
icebp
or
sbb
enter
push
jbe
cld
push
addb
fnsave
sub
dec
xchg
sbb
xorl
mov
pop
push
jle
cmp
andb
and
test
mov
shlb
sahf
dec
pop
mov
addr16
ja
es
xlat
lea
out
das
dec
inc
sub
jno
scas
and
sbb
dec
mov
sbb
add
movsb
sarl
or
rcll
jecxz
sub
xchg
sbb
adc
dec
pushf
mov
xor
add
add
dec
addr16
and
pusha
xor
test
lret
js
xchg
pop
imul
dec
lahf
xchg
out
imul
mov
and
je
and
jp
push
scas
test
testb
shlb
or
cltd
xchg
mov
pop
sub
sbb
enter
clc
cmp
into
jle
faddl
inc
adc
and
outsb
rcrb
mov
inc
push
mov
rorb
in
push
call
or
adc
pop
shll
inc
out
push
lret
cmp
sub
jg
data16
dec
sbb
lahf
cmp
jo
rcrl
pop
add
fsubs
gs
add
add
add
gs
stos
and
push
test
nop
inc
test
repnz
lods
sbbl
fdivrs
xchg
mov
xchg
sahf
iret
mov
lret
imul
rol
xchg
sbb
ret
pop
lcall
int3
into
jae
dec
pop
or
popa
dec
sahf
jecxz
int
xchg
pop
push
movsl
bound
xor
or
push
jecxz
sbb
pop
popf
jecxz
pcmpeqd
scas
or
push
gs
push
lret
ret
mov
rol
add
test
icebp
inc
add
jne
xorl
dec
nop
push
fdivrl
imul
mov
push
pop
stos
pushf
push
add
pushf
loop
xchg
popa
mov
hlt
lahf
mov
mov
sbb
sbb
shlb
push
add
and
cmc
sbb
in
dec
inc
and
dec
cwtl
lods
mov
cmp
pop
push
pop
cwtl
testl
and
inc
dec
xor
mov
fisttpll
and
jp
aad
sub
test
adc
add
inc
stc
mov
jge
lock
add
jno
sub
mov
jp
je
dec
adc
jnp
lock
mov
enter
or
add
sahf
lret
clts
xchg
xchg
into
or
push
lcall
pop
addl
mov
aas
adc
adc
push
or
push
out
int
bnd
out
mov
pop
mov
sub
mov
push
fidivrs
inc
into
leave
test
xor
adcb
cmp
cli
mov
inc
push
sub
push
push
std
mov
dec
jae
push
outsl
jecxz
push
push
jmp
mov
xor
fnsave
xor
loop
pop
ljmp
data16
sbb
push
or
jb
out
ss
xor
adc
jle
xchg
inc
out
xor
loop
inc
sbb
and
shll
mov
and
jnp
inc
or
in
adc
std
dec
push
repnz
xor
add
mov
rclb
movb
adc
mov
cmp
leave
stc
jge
xchg
sarl
sub
adc
loopne
sbb
jbe
fwait
push
test
jge,pn
inc
add
mov
xchg
popa
inc
fwait
es
or
jo
add
push
mov
xlat
mov
xchg
mov
jbe
jo
inc
jne
mov
or
or
aas
cmpl
les
and
lcall
mov
pushf
int3
test
ss
out
mov
lock
xchg
push
jnp
dec
jle
mov
je
sahf
call
lea
sub
push
out
sbb
add
adc
in
add
cmpsb
pop
push
push
pop
cs
cmp
xchg
push
sbb
push
push
movsl
stc
xor
fcoms
xchg
jp
jae
fsubs
mov
pop
xor
xor
lret
movsb
jae
inc
sub
sbb
and
jbe
mov
mov
pop
cmpsb
or
mov
push
jnp,pn
push
out
stos
push
sub
push
and
sub
shr
add
mov
dec
stc
std
dec
adc
xor
data16
add
into
negb
int
cmc
imul
push
mov
sub
pop
jns
add
lea
jb
xchg
push
sub
xchg
mov
divl
out
data16
push
test
adc
pop
call
in
mov
jecxz
jle
dec
mov
fcom
add
pop
aaa
inc
jg
sbb
push
xor
jb
mov
mov
add
loopne
and
aas
pusha
arpl
jp
icebp
aad
shll
leave
jge
dec
test
jns
pushf
repz
jl
pop
arpl
inc
ss
fdivrs
or
push
in
rorb
cmpsb
sbb
jge
cmp
inc
mov
sbb
sti
pop
hlt
dec
icebp
divb
out
dec
and
jo
test
add
aad
scas
sbb
or
mov
sarl
add
sti
fcoml
mov
sbb
mov
xchg
inc
aaa
in
das
insl
bound
lret
push
and
in
lret
or
sbb
movsb
mov
push
mov
fs
mov
sub
cmc
and
push
push
add
cmc
sbbl
ret
mov
sbb
sbb
sub
pop
add
xchg
sbb
inc
mov
mov
pop
inc
xchg
push
sub
cli
mov
mov
pop
es
cli
jg
sbbb
int3
into
bound
mov
es
pop
jo
xor
sbb
sarl
pop
xchg
rorb
xor
xor
ja
sbb
aam
mov
cmp
rorl
dec
inc
sbb
xor
sbb
xchg
cmp
je
addr16
cmc
rorl
lds
mov
test
jl
insb
popa
pop
jbe
ffree
lds
mov
cld
ljmp
xchg
sub
shlb
adc
mov
inc
es
push
sbb
fadd
pop
sahf
dec
or
jle
jbe
daa
jp
cwtl
xchg
insb
lret
pop
test
add
mov
jge
mov
ret
sub
add
cmp
or
mov
outsl
xchg
ret
mov
mov
push
test
out
repnz
lcall
data16
push
mov
cltd
inc
xor
sbb
pop
or
mov
pop
repz
icebp
ds
andb
inc
shrb
mov
dec
data16
push
lcall
xor
ret
xor
icebp
sbb
jle
dec
fwait
adc
push
cmpsl
or
or
push
int3
xchg
repnz
bound
fadds
sub
xor
xlat
dec
jecxz
insb
imul
mov
js
push
ss
push
movsl
sbb
sbb
les
push
xchg
inc
inc
inc
sbb
pop
popa
adc
jp
mov
dec
mov
sub
xlat
mov
and
addl
bound
adc
dec
sahf
popf
push
and
imul
inc
iret
bndldx
rcll
nop
jbe
ljmp
mov
cwtl
ret
fwait
aas
mulb
daa
cmpsb
out
mov
push
push
xor
int
xchg
jbe
or
mov
sbb
adc
stos
sub
add
jge
xchg
xor
andl
imul
xchg
pop
xorb
movsb
pop
push
cmp
mov
mov
jge
icebp
adc
lahf
adc
inc
into
xor
mov
xor
push
repnz
jmp
pop
cmp
sbb
pop
dec
mov
xchg
imul
out
icebp
mov
movsb
sub
lock
jns
jmp
daa
mov
scas
scas
jl
jge
out
repz
sub
fcom
repz
and
xor
lsl
pusha
inc
sbb
push
mov
jg
lahf
xchg
sbb
and
cmp
loopne
jmp
inc
push
fisttps
jo
mov
cmpsb
jecxz
and
mov
test
xchg
lcall
inc
push
jg
test
xor
jle
fdivrp
cmc
fsubl
insb
dec
test
ret
lods
dec
lret
dec
and
in
xchg
daa
pop
xchg
jge
imul
push
imul
ret
dec
mov
add
and
add
dec
shlb
mov
sub
jbe
mov
jle
xor
push
xor
or
add
mov
daa
fs
xchg
popa
fadds
outsb
sub
loopne
dec
neg
mov
xlat
and
or
xchg
sub
call
inc
mov
addl
mov
push
call
add
test
xor
clc
call
or
les
mov
lcall
in
push
in
mov
pop
leave
push
inc
push
pop
or
add
gs
push
jl
sub
fnstcw
inc
bound
insl
movb
sbb
xchg
clc
shll
std
push
push
and
sbb
add
mov
pop
xchg
xor
adc
sub
call
sub
xchg
or
mov
gs
adcb
testb
xchg
xchg
shll
inc
repnz
repz
sti
adc
adc
push
cld
adc
mov
js
popf
adcl
push
xchg
outsl
incb
leave
aas
push
pop
dec
test
pop
cli
cwtl
mov
gs
dec
cmpsb
adc
out
inc
push
mov
dec
dec
leave
pop
sub
or
push
roll
mov
and
insb
mov
or
inc
push
adc
push
mov
into
sbb
fistpl
mov
dec
test
outsl
push
outsl
push
mov
int3
pop
test
pop
pusha
sarl
jg
mov
pop
movsb
sbb
mov
daa
pop
dec
lock
fstl
dec
adc
cli
sbb
mov
sub
cwtl
xorb
arpl
xor
in
daa
fdivp
jbe
cmp
push
dec
jno
dec
cltd
add
push
dec
icebp
pop
js
loope
xchg
pop
mov
mov
sub
sbb
mov
xchg
repnz
popf
repz
mov
stc
add
jb
cmc
mov
jmp
dec
push
or
inc
jecxz
xchg
sub
leave
in
fsubrl
cmc
or
jl
xor
int3
insl
mov
sbb
dec
stos
jae
sub
dec
mov
fisubrl
inc
repz
mov
popa
sbb
inc
push
jp
ja
add
pop
sahf
jle
cltd
adc
cli
loop
stc
fisubl
sbb
inc
adc
dec
fwait
cld
dec
mov
es
ljmp
loope
add
scas
xor
pop
xor
mov
int
jb
or
gs
daa
addl
cmp
push
arpl
cmp
pop
jo
and
fucomi
or
mov
ljmp
jle
loope
ret
mov
sub
dec
push
inc
inc
xor
mov
fldl
add
adc
sbb
test
or
lret
cmp
dec
sbb
xchg
mov
add
pop
and
ret
sub
pop
sbb
cmp
dec
sbb
in
aaa
ss
inc
loop
push
imul
imul
int
fadds
inc
mov
aaa
jle
test
bound
out
aad
or
and
adc
and
cmp
xor
loopne
aaa
cmp
jle
in
push
inc
add
jmp
adc
push
repz
in
mov
mov
mov
cmpl
in
xchg
jb
dec
imul
xchg
mov
jecxz
push
aad
sub
adc
movsb
push
sti
push
cli
push
cmp
sub
test
or
sbb
and
les
jne
fcmovb
int3
push
sub
rcr
dec
push
sbb
cmc
jecxz
or
cmp
cltd
or
cli
popf
push
repz
push
icebp
js
jge
jg
add
repnz
stc
jbe
cmc
sbb
shrb
lea
clc
shr
jne
cwtl
sbb
adc
or
mov
and
xchg
pop
ss
push
test
daa
cmp
in
rolb
mov
or
icebp
mov
stos
and
rcll
inc
mov
scas
neg
std
mov
mov
cmpsb
push
inc
xor
inc
cld
loopne
sub
aam
das
cmp
mov
push
sub
ja
gs
mov
scas
xchg
xchg
popf
dec
adc
lcall
nop
loope
test
or
adc
sbb
repz
push
xorl
stos
cs
pop
int3
dec
xchg
mov
divb
ljmp
loop
pop
xor
daa
xorb
xor
gs
in
inc
jno
or
mov
or
ret
cltd
push
std
lcall
mov
fwait
loopne
or
xchg
sbb
pop
jbe
lea
pop
mov
add
jb
shl
fcompl
enter
lock
int
jne
jl
jnp
fwait
xchg
xor
lea
sub
in
xchg
xor
xorb
add
in
cwtl
add
push
ficoms
xchg
push
jmp
push
adcb
jecxz
push
ja
fistps
rcrl
jmp
aad
insl
adcl
rol
xchg
lahf
push
jnp
add
jae
roll
sbb
iret
xor
sahf
push
repz
in
pop
shrb
lock
xchg
sub
add
stos
jge
add
pop
std
fisttpl
in
inc
aaa
sub
jmp
adc
mov
sbb
lods
mov
nop
cmp
dec
xor
arpl
cmp
js
hlt
xchg
add
add
in
mov
rorl
push
jg
push
push
adc
add
mov
or
mov
sbb
sbb
adc
sbb
mov
pusha
out
loopne
dec
mov
lock
or
vsqrtps
mov
adc
xor
mov
cmp
jns
sub
xchg
inc
dec
pusha
out
ret
adcb
push
adc
add
jne
loop
mov
out
in
mov
addr16
cmp
xor
jl
fimuls
push
adc
pop
jnp
inc
mov
and
sbb
dec
adc
sub
mov
mov
fcomps
pop
stos
xor
pop
call
or
scas
and
dec
mov
xchg
xor
push
xchg
add
sbb
mov
push
cltd
loopne
push
popa
lods
jo
pop
xchg
and
sub
lods
jge
out
xor
sbb
in
push
into
arpl
ja
jb
pop
adc
jb
test
sbb
out
fs
jne
mov
in
inc
mov
xchg
push
pushf
in
cltd
outsb
push
ficomps
dec
fld
mov
jno
pusha
jb
mov
mov
push
xor
sahf
call
icebp
pop
mov
jecxz
xor
sbb
and
sub
push
mov
addr16
or
push
xchg
std
scas
jmp
aaa
aad
in
out
mov
ds
fildl
inc
add
xor
add
add
mov
lods
inc
mov
cmc
mov
adc
test
out
and
out
pop
daa
adc
push
mov
add
add
fidivrs
mov
lods
bound
cmc
or
pop
inc
lcall
icebp
scas
imul
mov
pop
jecxz
lea
xor
adc
test
test
xchg
and
mov
cltd
jp
cmpsl
das
push
adc
ds
jl
mov
fistpll
cmp
push
and
xlat
jge
jge
xchg
push
js
cli
lcall
or
jmp
ret
add
lods
shl
mov
shll
sti
pop
bound
xchg
add
int3
adc
mov
stos
imul
adc
clc
cmpsl
or
add
and
dec
popa
jmp
fsubr
lock
insb
add
sbb
push
loopne
dec
icebp
popf
in
sbb
fstpt
insb
mov
jo
andl
das
sub
popa
inc
xchg
insl
mov
hlt
adc
cmp
dec
jnp
addb
outsl
cmpb
sbb
popf
xor
sbb
int3
rolb
icebp
aas
cmpsb
popa
movsl
stos
jl
popf
sbb
xor
pop
inc
test
xor
in
add
sub
xchg
aad
aam
shrl
and
lock
stos
add
push
lret
jmp
fdivl
pop
cmp
push
xor
sbb
arpl
inc
or
negb
adc
add
sbb
out
jl
sbb
stos
sti
add
mov
test
cmc
mov
push
or
jl
in
push
add
mov
lea
dec
pop
ret
pop
subl
sbb
mov
pusha
iret
andb
xchg
sub
arpl
movsb
sub
push
sbb
jns
mov
fcoml
xchg
mov
cmp
mov
jecxz
cmp
sbb
mov
insl
gs
inc
or
lcall
mov
addb
sbb
rcll
mov
mov
mov
ret
lret
lret
stc
mov
cmp
leave
out
sbb
aaa
xchg
inc
in
jle
jl
sarl
stos
push
or
mov
loope
fstl
icebp
mov
adc
xor
fdivl
icebp
adcl
test
xchg
scas
aaa
loop
arpl
addb
add
stc
inc
pushf
push
flds
sub
push
or
imull
and
mov
jmp
std
push
inc
xchg
mov
test
fdivr
xor
popf
cli
add
fwait
lahf
and
mov
jae
xchg
loop
adc
push
jmp
mov
movl
stos
mov
add
or
sbb
mov
mov
in
cmc
jp
divb
mov
push
in
adc
lock
jbe
ret
fistl
or
shll
scas
adc
push
cmp
jle
into
out
push
add
cltd
cmp
stos
fucomp
xor
xor
ret
xor
sarb
pop
in
aad
push
push
sub
xchg
mov
pop
pop
cs
loop
stc
filds
sub
jmp
aas
fisubrs
lock
mov
add
add
inc
adc
xchg
subl
push
jne,pn
add
cli
jge
xchg
and
dec
gs
or
push
xor
out
icebp
ret
jge
dec
ds
push
pusha
adc
mov
push
aaa
orps
mov
lods
and
or
imul
push
push
mov
scas
seta
mov
std
outsb
rcrb
mov
mov
js
add
jg
push
xor
push
xchg
or
nop
mov
mov
jnp
or
dec
add
popa
xchg
in
mov
sbb
adc
xchg
adcb
gs
testl
pop
testb
in
sbb
jae
cli
mov
pop
mov
dec
jg
push
xchg
mov
arpl
dec
pop
aas
xor
pop
mov
add
fcmovnb
mov
inc
push
js
adc
jl
pusha
push
cmpsl
jns
push
sbb
mov
aas
jg
jecxz
push
sub
pop
bound
mov
jl
arpl
adc
mov
xchg
aaa
lods
cmpb
stos
push
jnp
cmpsl
mov
mov
icebp
mov
lock
daa
xchg
add
push
dec
repnz
aaa
dec
lods
ret
test
cmc
and
sub
mov
repnz
outsb
loop
mov
repnz
stos
testb
fsubrs
mov
and
scas
pop
and
fwait
cmpsb
into
dec
popa
cmp
pop
dec
mov
test
adc
aas
adc
bound
add
filds
lock
subl
xor
lcall
mov
andb
mov
cli
xchg
addl
xchg
mov
push
frstor
sbb
test
loop
add
cmpsl
and
pushf
lock
sar
ret
stos
jmp
icebp
aaa
add
push
sub
test
pop
int
push
int
ljmp
or
cmp
pop
pop
pop
sbb
sub
test
mov
push
fcompl
insb
dec
xchg
mov
and
sbb
or
daa
imul
fstpt
push
and
mov
mov
out
mov
fadds
aas
js
adc
dec
inc
mov
ficoml
rsm
aas
or
xchg
pop
sbb
pusha
arpl
push
popf
data16
xchg
or
sbb
and
sahf
divl
push
sbb
cmp
test
sbb
into
sahf
pop
addr16
movsl
jp
cwtl
inc
xor
pop
es
and
sub
inc
jle
adc
push
fiadds
add
ror
cwtl
sbb
mov
ret
dec
dec
jno
pop
cli
ja
mov
loopne
daa
stos
xchg
mov
and
and
aaa
rorl
inc
inc
ficoml
test
mov
pop
loop
je
cltd
fwait
shlb
adc
mov
add
mov
mov
fsts
mov
and
orl
loope
inc
jl
sbb
sbb
add
fnstcw
faddl
sbb
jmp
int3
call
mov
sbb
in
outsl
lret
popa
jle
std
add
insb
cmp
and
aad
push
fwait
rep
movsb
cmp
and
xchg
pop
mov
xor
movsl
stc
repz
aad
jl
call
inc
repnz
mov
and
mov
mov
add
pusha
add
aad
sub
pushf
add
mov
sbb
dec
rcrb
scas
in
push
fidivrl
xchg
mov
insb
orb
xlat
bound
shll
in
jle
imul
adc
lcall
out
lock
aad
sbb
adc
push
xor
int3
or
jl
insb
mov
addr16
cltd
cmc
sub
mov
fcmove
sub
popf
cmp
and
xchg
and
mov
test
push
add
lods
inc
dec
dec
mov
pop
sbb
into
xorb
inc
dec
xor
sbb
adc
cmp
sub
jmp
pop
xor
adc
mov
mov
sbb
inc
pop
jbe
fidivrs
andb
mov
sahf
jg
jnp
add
xor
scas
shlb
jmp
lds
cmp
sbb
cmp
xchg
inc
mov
cmp
sahf
pop
mov
sub
pop
sub
shlb
test
or
adc
sbb
mov
sbbl
xor
adc
adc
inc
and
and
pushf
cmc
in
cmp
push
mov
dec
imul
adc
test
decb
push
cmc
pop
pop
sub
mov
inc
inc
jle
mov
sub
in
sbb
mov
popa
fucomip
stc
dec
outsb
stc
dec
inc
jmp
or
fs
rol
push
xchg
ss
mov
addr16
mov
dec
pop
xchg
mov
sbb
jno
ss
lret
stc
inc
mov
mov
ss
pop
lcall
call
sbb
adc
int
lds
mov
into
sbb
jmp
pop
out
sub
out
sbb
dec
shl
xor
ficomps
xor
cmp
enter
xor
mov
add
out
add
int
sahf
nop
or
int3
fistpll
popf
inc
mov
inc
fs
cmp
ds
sub
adc
inc
aad
imul
rolb
mov
push
in
push
insb
adcb
xchg
jl
push
ficomps
pushf
lods
jno
cli
in
insl
or
imul
xor
push
shlb
fmull
xchg
push
cmpb
and
mov
sbb
pop
addb
stos
xchg
bnd
inc
xor
ret
pop
jno
xor
stos
inc
pop
jp
je
xor
jbe
loopne
and
test
xor
pop
push
jg
mov
sub
test
mov
mov
jne
int3
aas
outsb
pusha
in
addr16
lds
loop
push
jle
xchg
sub
cmp
stos
push
orl
pop
jmp
mov
aam
mov
leave
mov
cmp
dec
aaa
pushf
sbb
pop
add
dec
inc
insb
fwait
xlat
mov
fiaddl
pushf
sub
sub
add
sbb
or
add
pop
dec
data16
sbb
xor
push
sbb
mov
std
sbb
fcompl
push
in
in
push
push
into
adc
scas
out
xchg
sub
loopne
stos
and
lahf
mov
adc
inc
ret
ja
sbb
mov
insl
fcmovne
jmp
inc
xchg
jmp
aam
repz
jbe
inc
push
popf
enter
xchg
inc
movsl
add
jecxz
cmp
imul
shlb
cld
inc
adc
movsb
xchg
into
icebp
pop
adc
stos
bound
sub
sub
lahf
or
xchg
movsb
jne
imul
jl
ds
cmp
mov
xorb
cmp
xor
and
lds
addl
dec
or
or
call
ja
jno
mov
or
mov
xchg
out
mov
sbb
sti
xchg
pop
repz
insb
rcll
sbb
jb
jmp
adcl
cmc
mov
ds
sbb
popf
pusha
sub
inc
mov
xor
sub
sub
ss
cli
leave
psrad
xchg
popf
inc
leave
repz
ret
add
push
xchg
or
add
add
push
inc
std
and
mov
sbb
push
xor
add
mov
mov
jmp
ss
hlt
loop
rorl
inc
add
cmc
subl
lcall
testl
mov
mov
shl
or
fdivrp
aam
in
jmp
jae
mov
sub
jns
or
les
adc
xor
sub
jle
pop
das
inc
into
pusha
inc
inc
pushf
test
push
sub
fisttpll
cmc
mov
jns
xchg
add
cmp
data16
jecxz
sbb
push
mov
lock
jne
mov
stc
and
es
or
jecxz
pmaddwd
aad
loope
mov
fsubrl
push
push
dec
push
sbb
out
mov
cmp
sbb
sub
imul
xchg
sbb
movb
push
pop
std
andl
je
addr16
pusha
hlt
mov
daa
test
push
icebp
pusha
mov
mov
mov
adc
sbb
jle
andb
or
xor
lods
sahf
dec
jb
push
sbb
scas
outsb
iret
xor
push
push
or
lcall
add
sub
jg
repz
stc
pop
outsl
jmp
sbb
cmp
sub
sub
insb
xchg
pop
cmc
pusha
mov
mov
clc
shll
add
and
mov
mov
das
jl
xchg
dec
fiadds
push
gs
sti
fwait
mulb
stc
pusha
enter
sub
dec
movsl
ljmp
adc
push
pushf
sub
cmp
cmp
sub
out
not
mov
or
sub
das
pop
nop
cmpsb
jnp
or
lahf
push
addl
push
cli
cwtl
in
jno
in
cmp
push
xchg
mov
push
push
lods
ja
data16
mov
inc
inc
mov
jne
outsl
and
aaa
xor
pop
insb
or
jb
dec
andl
pop
and
jmp
into
mov
sbb
pop
jnp
inc
test
divb
push
popf
data16
mov
imul
jmp
dec
pop
in
push
mov
dec
push
dec
scas
sbb
in
jne
pop
lds
insl
dec
fwait
out
pop
sbb
scas
addb
jnp
jo
inc
insb
fcmovne
push
or
xor
push
outsb
xchg
jg
or
int
dec
mov
jmp
pop
ret
in
addr16
push
inc
mov
fimull
jge
mov
lret
pop
ds
bound
arpl
pop
test
data16
data16
xlat
mov
pusha
jp
mov
filds
jbe
pop
add
inc
or
inc
ljmp
outsl
testb
push
and
mov
or
push
ds
push
jne
loope
mov
mov
cmp
mov
addr16
loope
push
fdivrs
xor
shr
inc
int3
push
adc
sbb
fsubrl
push
nop
sbb
mov
mov
add
call
add
jge
mov
xor
out
mov
mov
es
jmp
jp
das
mov
mulb
push
add
xchg
inc
scas
jecxz
ret
arpl
and
mov
add
xlat
and
je
pusha
call
jne
imul
jecxz
andl
repz
push
icebp
adc
hlt
xor
mov
pop
cmp
jle,pn
mov
orl
fdivrl
fsubl
push
imul
jmp
cwtl
jg
int
add
mov
fldcw
or
mov
clc
mov
jp
adcl
mov
mov
jg
rol
cmp
dec
xchg
inc
add
int3
sar
popa
mov
pop
pusha
jno
loope
adcl
cmp
ds
dec
lret
dec
outsb
or
jo
test
mov
lret
std
mov
stos
push
hlt
pop
sahf
mov
jo
stc
push
inc
inc
adc
outsl
ja
sub
inc
repnz
fisubl
or
imul
xchg
arpl
jno
rorl
mov
push
scas
jecxz
fdivrp
ret
ljmp
push
push
dec
cmc
mov
test
jne
jl
test
adc
out
icebp
aam
das
mov
xlat
into
in
mov
fcoms
or
or
lods
dec
outsl
addr16
mov
cmp
xchg
add
in
out
sbb
roll
leave
jo
sbbl
pop
nop
ret
add
dec
loopne
xchg
sbb
mov
mov
clc
xchg
xor
xchg
and
adc
mov
mov
nop
sbb
push
xchg
mov
xor
dec
sub
or
lcall
fsubl
push
pop
mov
mov
mov
fsubs
mov
lcall
sbb
lods
mov
es
cltd
adcl
sub
pop
loopne
mov
shlb
xchg
scas
push
dec
jns
mov
leave
adc
imul
enter
or
adc
pop
xor
int3
jno
addr16
push
inc
int3
xchg
or
test
adc
icebp
fdivrl
mov
in
mov
push
ljmp
pop
cli
stos
loope
dec
cmc
cwtl
jge
out
xchg
add
inc
rcr
xor
rcr
in
xchg
add
movsb
les
xchg
jbe
leave
push
pop
mov
aam
jl
xchg
test
jl
adcl
pop
outsb
jno
popf
adc
add
push
push
xchg
test
lcall
in
mov
mov
cltd
pop
clc
lods
xchg
xor
hlt
lcall
test
sub
add
arpl
das
mov
xchg
enter
and
xor
imul
add
std
xchg
push
cmp
add
stc
jle
aas
mov
inc
icebp
jae
ret
roll
sbb
cltd
icebp
pop
xchg
mov
push
cmp
xchg
xor
in
pop
mov
clc
inc
rolb
mov
sub
dec
mov
aad
adc
xchg
rcrb
addr16
loopne
cmpsb
andl
sbb
xchg
ficoml
or
mov
ret
sub
cmp
iret
or
outsb
lahf
inc
lods
and
mov
sbb
shrb
add
stos
jg
pushf
jecxz
jne
xorl
mov
insb
inc
sti
mov
pop
xchg
cmc
jbe
jmp
sti
lret
inc
lcall
sbb
into
dec
xor
mov
inc
push
fwait
mov
mov
popf
inc
jecxz
mov
xlat
mov
sub
mov
mov
popf
or
jge
mov
fwait
sbb
inc
icebp
and
dec
sbb
mov
fcompl
or
insl
out
or
out
jne
ficompl
jnp
and
dec
stc
out
lcall
dec
mov
bound
lahf
test
and
jge
and
stos
xor
pop
xor
das
rorb
inc
aad
lock
mov
cs
shlb
adc
mov
jne
dec
pop
dec
lcall
inc
xor
inc
in
sub
sbb
into
test
jb
jp
or
ja
dec
cli
mov
pop
shrb
dec
dec
cmp
popf
jp
ret
fldenv
push
das
rcll
cmpb
or
jbe
loope
xchg
mov
xchg
int3
push
or
cli
out
xchg
xchg
cltd
push
and
inc
mov
jge
jmp
and
sbb
test
cmp
fs
adc
xor
fwait
testb
out
sub
gs
xlat
gs
neg
enter
xchg
sbb
jmp
roll
pop
or
lret
mov
dec
mov
dec
cmp
adc
add
imul
xchg
mov
sbb
xor
sbb
mov
andl
ret
jge
and
pop
int
jmp
icebp
roll
xor
mov
icebp
dec
pop
test
pop
mov
into
inc
cmp
inc
cmp
pushf
call
ja
jge
sahf
cmpsb
mull
adc
jne
nop
scas
mov
mov
jnp
inc
scas
add
orl
daa
movsl
cli
sbb
cmp
incb
movsb
jnp
repz
stos
and
mov
sbb
xor
jb
mov
data16
push
mov
jecxz
push
ss
push
shr
mov
mov
push
jp
inc
aad
fnsave
xor
mov
roll
cli
stc
data16
imul
sbb
push
int
data16
xor
pop
into
add
lods
cli
and
sti
jnp
ret
loopne
sub
mov
xor
ret
repnz
nop
xchg
fs
inc
imul
xchg
fwait
push
sbb
xchg
std
mov
aad
or
clc
adc
dec
or
or
leave
stos
pop
mov
add
add
imul
or
cwtl
aaa
sti
xor
in
sub
add
jecxz
bound
mov
add
stos
insl
ffreep
cltd
stc
jmp
hlt
ss
icebp
mov
inc
leave
ret
pop
dec
icebp
sbb
and
int3
mov
push
test
stc
bound
pusha
cmp
xchg
sbb
mov
mov
cmp
test
insb
mov
mov
xchg
leave
xor
repnz
inc
mov
dec
daa
fiadds
outsl
push
mov
xchg
loopne
jmp
movsb
inc
test
pop
sub
icebp
mov
jnp
inc
jo
push
xchg
insb
std
mov
sti
adc
stos
cmp
jle
sub
push
xor
xchg
add
pop
jl
popf
or
pop
mov
orl
into
push
ss
fnstenv
aaa
mov
popf
jns
push
xorl
push
xchg
mov
in
xchg
jge
pop
outsl
repz
aaa
lcall
inc
sub
jge
out
jnp
add
mov
mov
pop
aaa
mov
rcrb
mov
jbe
cmp
pop
test
cmc
lret
or
or
lods
cmc
das
test
test
push
sbbb
popa
xor
loope
into
pop
out
xor
pop
xor
add
fisubrl
pop
repnz
seta
pop
shl
inc
das
sub
mov
and
loope
add
pop
insb
aas
and
push
cmp
xor
mov
in
addb
pusha
sub
sbb
cltd
cs
fisubrs
imul
sti
xor
mov
test
and
add
push
xor
ret
xlat
cmp
mov
sbb
adcb
fidivs
xchg
mov
sbb
imul
ss
shll
jo
sub
xor
mov
in
add
mov
mov
loopne
sbb
add
mov
mov
ss
dec
rcr
fs
mov
sbb
or
ficompl
fldl
push
lret
dec
pop
and
bound
mov
push
and
or
xchg
sbb
or
sti
cmpb
add
ja
xchg
out
dec
cmp
xlat
pop
ret
icebp
in
scas
daa
ret
test
mov
gs
rolb
mov
movsb
adc
shrl
jg
xor
mov
add
sub
cmp
inc
lea
mov
std
mov
lahf
stos
stos
fstpl
add
fidivs
cltd
gs
adcb
and
popf
not
mov
ja
sub
jmp
pusha
andb
push
sub
xchg
push
sub
cmp
inc
mov
adc
mov
xchg
jl
cmp
pop
imul
jge
adc
leave
and
jge
gs
mov
fwait
or
adc
aaa
pop
push
insb
lea
jecxz
data16
cmp
sbbb
jge
lret
xorl
xchg
fldl
stos
aas
push
lret
cs
out
jmp
pop
add
and
push
sbb
inc
fsub
xchg
rcrb
pop
xor
sbb
dec
data16
xor
xor
out
cmp
xor
adc
push
pop
xchg
loopne
xchg
mov
or
push
daa
das
push
inc
mov
mov
arpl
xchg
dec
fistpl
sbb
push
lcall
flds
adc
int3
add
xchg
push
mov
dec
jecxz
add
or
jo
shrl
in
icebp
inc
out
sbb
out
mov
pop
test
fcmovnbe
cld
fldenv
jnp
gs
repz
mov
jmp
popa
clc
sbb
repz
imul
cmp
push
or
xlat
repnz
cmpsb
xchg
push
ss
fldt
mov
imul
sbb
add
push
mov
jne
sti
pop
push
push
sub
jp
cltd
push
insb
mov
cwtl
mov
jbe
clc
cmp
jle
into
addl
ret
sbb
xadd
cmc
fists
sbb
sbb
cwtl
out
stc
roll
sbb
iret
mov
pop
xchg
scas
xlat
mov
cmp
pop
ret
cmp
push
lea
cmpsb
or
adc
stos
out
vmovsd
out
pop
push
sbb
add
sti
pusha
popa
pop
insl
push
fbstp
push
hlt
dec
jge
mov
sub
nop
mov
sahf
dec
orb
sbb
pop
pop
nop
jne
push
lret
in
mov
jae
jns
lods
inc
xchg
lcall
icebp
push
out
mov
jp
sbb
lods
adc
filds
inc
jnp
gs
push
fwait
jecxz
ja
movsl
lret
mov
dec
jp
mov
mov
xchg
inc
xorb
iret
rorl
bound
or
push
push
or
popa
inc
lcall
dec
scas
aad
or
mov
jo
push
push
subb
gs
outsb
add
faddl
sarl
aas
cmp
or
xchg
mov
add
jg
dec
mov
sub
les
enter
cli
rorl
jae
sub
mov
mov
std
pop
cmc
sbb
xor
or
movsl
adc
lahf
nop
cmpsb
push
mov
invd
icebp
ljmp
idivl
push
or
add
inc
lret
push
test
adcl
sbbb
popf
mov
mov
aaa
cmpsl
addr16
cmpsb
insl
jns
arpl
outsb
out
inc
push
dec
fsubp
fbld
mov
cwtl
das
push
repz
xchg
sub
push
idiv
fucom
rcrl
loope
and
sti
in
orl
aaa
xchg
lods
ja
or
aaa
sub
jle
lret
je
rclb
or
repz
cmp
test
pop
inc
adcb
lods
mov
out
std
jecxz
nop
inc
iret
out
fcom
mov
and
add
inc
arpl
aad
ss
movsb
sbb
pop
cli
lods
scas
mov
mov
push
leave
inc
push
pinsrw
inc
fstpl
mov
dec
jecxz
aaa
push
into
cmpsl
jne
push
out
je
xchg
shr
or
stc
scas
mov
test
jmp
subl
mov
adc
pop
stc
test
lret
mov
inc
fwait
inc
out
push
mov
jbe
adc
nop
fistpll
mov
sbb
or
mov
sub
in
xor
add
in
dec
in
push
mov
jl
push
push
push
das
push
cmc
fstl
mov
mov
cltd
test
out
int3
loope
mov
xchg
inc
subb
fstpt
dec
pop
mov
fisubrl
and
adc
push
lds
pxor
add
push
cmc
mov
xchg
iret
dec
lahf
and
ljmp
incb
cmpsb
xor
pop
push
sbb
inc
orl
sub
test
push
xor
mov
fsub
pop
cmp
aaa
jp
mov
and
icebp
and
cld
xchg
and
jnp
dec
sbb
or
sub
loopne
ljmp
sub
lock
mov
repnz
jmp
mov
sub
inc
ljmp
cmpsb
outsb
mov
outsl
mov
xor
into
mov
add
fwait
add
daa
dec
xchg
xchg
pop
outsl
out
dec
xchg
mov
lea
and
test
and
cld
mov
fucomip
ficompl
jbe
mov
push
mov
push
rol
leave
cmc
sub
sbb
insb
into
ret
adcb
xor
mov
test
sbb
xchg
sti
movsb
sub
mull
ret
lds
fnsave
mov
cmc
mov
sbb
in
mov
mov
jecxz
sahf
xor
clc
inc
mov
or
lret
add
aaa
xor
scas
and
in
into
push
adc
insl
test
ret
mov
inc
data16
inc
xor
imulb
std
add
sti
enter
push
rorb
inc
xor
mov
and
lretw
jl
add
sbb
fcoml
sbb
popf
aad
jne
pop
pop
mov
mov
ror
movsl
mov
pop
xor
push
lds
jl
sbb
hlt
add
push
cmpb
mov
outsl
test
or
xlat
test
sbb
fwait
testl
jle
lock
nop
je
or
das
pop
push
out
jl
ljmp
mov
aam
xchg
xor
dec
bound
xor
inc
pop
add
in
nop
insb
int3
xchg
int
cli
sbb
xorb
rcrl
popf
popa
popf
dec
push
jae
and
push
pushl
dec
push
jle
es
cmp
sbb
mov
xor
dec
call
inc
dec
in
jl
daa
adc
add
add
add
push
dec
xchg
pop
xor
lcall
andb
fidivrs
jno
xor
sub
popa
xchg
dec
push
cmp
and
outsb
stos
lahf
lock
cmpl
fisubs
push
add
scas
push
pop
jns
sar
cmp
inc
sub
cmpsb
int3
shl
xchg
xor
mov
movsb
mov
add
lret
fsubp
xchg
push
test
or
jecxz
out
xlat
jge
add
push
ljmp
or
or
gs
and
mov
and
xor
cld
jl
and
sbb
leave
cmpsb
pop
test
test
jp
stos
sub
mov
sbb
jle
adcb
fildll
xchg
dec
jbe
dec
nop
fcomps
adc
imul
mov
adc
pop
mov
sbb
popa
mov
dec
inc
pop
jle
xchg
repnz
fdivp
dec
mov
in
orb
jmp
in
cmpl
popf
jl
push
dec
push
xchg
cmp
lahf
sti
nop
imul
pop
fcoml
jge
push
fbld
divl
push
test
aaa
scas
movsl
cmp
xchg
loope
cli
addl
lods
cmp
cmc
cmpsl
dec
xchg
daa
lock
mov
fstps
sub
ret
xor
cmp
out
icebp
jne
popf
adc
add
or
bound
mov
xchg
cmc
or
mov
pop
bound
add
sbb
mov
repnz
mov
pop
pushf
mov
sub
push
inc
mov
mov
cmp
int3
ss
lods
jge
imul
sbb
xchg
sub
mov
jl
sahf
js
sahf
imulb
decb
addr16
in
xchg
pop
fwait
xlat
fsubs
cmpsl
dec
add
inc
sbb
leave
lret
xchg
mov
mov
lret
add
cmc
rcll
and
test
loopne
xchg
insl
stos
leave
xor
jbe
xlat
pop
dec
inc
or
cltd
loop
adc
movsb
push
ja
jp
cmpsb
rorl
insl
es
sbb
shr
data16
sbb
fadds
lock
mov
repnz
fnstenv
sub
xchg
adc
pop
imul
andb
popa
outsb
or
hlt
push
dec
idiv
insl
inc
sbb
and
mov
inc
or
imul
pop
adc
xor
xor
sub
aad
je
test
dec
mov
icebp
jne
ret
in
or
mov
leave
mov
leave
inc
icebp
movsl
mov
push
cltd
pop
adc
pusha
mov
sub
mov
scas
adc
fcmovnu
int3
int3
xorb
push
or
lods
mov
xor
orl
loope
mov
addl
rcll
and
sbb
sahf
sbb
jmp
imul
mov
xchg
mov
out
jl
cmp
lahf
jbe
dec
inc
jl
xor
fadds
or
sub
cltd
mov
adc
lds
shrl
nop
xor
ret
lcall
stos
jne
add
in
sub
pop
data16
mov
or
pop
mov
popa
dec
xor
popa
jno
test
xchg
jle
dec
inc
sub
rorl
mov
inc
lea
sti
dec
dec
sar
lds
mov
rorb
sub
rcrl
dec
ljmp
or
jle
nop
jl
mov
pop
pop
test
pop
mov
cmpsl
addr16
add
cmp
pop
and
mov
inc
add
out
lods
mov
inc
push
and
pop
sbb
es
xor
inc
out
or
dec
mov
adc
rorl
ret
inc
push
lock
js
test
push
icebp
out
pop
or
push
stc
daa
add
lods
and
jge
ljmp
pop
mov
cli
popa
add
dec
inc
jno
outsl
cs
push
pop
das
stos
push
jno
push
fstpt
pop
repz
bswap
outsb
out
mov
sahf
fcomps
or
inc
ds
push
mov
add
jmp
xchg
jmp
daa
cmp
mov
push
dec
pop
add
notl
cmc
jne
cmp
jmp
pushf
imul
pop
or
loope
out
dec
xchg
mov
and
pop
cmpsb
sbb
int
loop
mov
or
cmpsb
and
push
mov
mov
inc
fstpt
or
cwtl
pop
cmpsb
dec
repz
inc
xor
mov
mov
push
xlat
pop
and
cmpsl
or
xor
dec
pop
xlat
scas
addr16
movsl
daa
lcall
nop
cmc
or
rcr
jae
add
sarb
lock
mov
dec
inc
hlt
jecxz
add
mov
movb
or
xorl
mov
sbb
jnp
stos
lea
lods
jno
cmp
movsb
jecxz
divb
cli
adc
and
and
mov
dec
mov
cmp
fsts
dec
push
subl
icebp
mov
xchg
jbe
push
loop
mov
adc
adc
pop
mov
adcl
fildl
mov
mov
jnp
addr16
sub
xchg
add
push
scas
xchg
jbe
call
or
subl
rcrl
mov
jge
das
inc
jg
mov
fwait
pop
dec
movsb
cmc
loope
pop
adc
push
call
icebp
lea
pop
testl
inc
dec
cmp
mov
push
scas
fbld
add
push
ljmp
rolb
dec
or
out
lret
inc
cmp
jbe
xchg
cmpsl
add
aaa
cmp
push
dec
or
adc
pop
mov
pop
loopne
andb
scas
stos
adc
push
push
sbb
dec
in
sti
sbb
loope,pt
mov
bound
jne
pop
or
daa
jbe
addb
pop
dec
xchg
adc
push
aam
xchg
xor
and
test
imul
sbb
mov
mov
cmpsb
daa
and
mov
add
pop
xchg
or
fidivs
add
mov
popf
ret
in
xchg
mov
inc
inc
repnz
add
dec
add
mov
data16
les
hlt
lds
pop
in
pop
lock
repz
addb
jle
repnz
movsl
lret
fildl
add
les
jbe
sbb
push
xchg
jmp
mov
add
ds
call
and
inc
push
in
add
jns
movsl
test
cmc
lahf
aas
dec
cld
imul
add
adc
gs
dec
and
inc
int3
sub
push
or
shlb
ljmp
mov
jae
xor
xchg
jp
and
negl
inc
jb
jmp
jns
jnp
out
lret
call
push
pinsrw
cmp
movsb
sbb
into
mov
and
cmc
dec
addb
sub
mov
inc
mov
push
or
loopne
cmp
and
push
push
nop
mov
push
xchg
ret
mov
xchg
inc
repz
mov
jbe
lret
scas
iret
mov
fmull
and
mov
imul
mov
fistpl
or
dec
mov
loope
dec
int3
and
add
sub
in
dec
xchg
pop
iret
mov
nop
jl
roll
pop
pop
rcrb
lds
push
or
jo
int3
xchg
mov
sbb
dec
mov
sbb
xor
rcll
sbb
add
pop
cli
hlt
aaa
add
jae
mov
dec
rorb
jns
mov
cmp
sbb
mov
sub
fisttps
mov
push
pushf
fiadds
push
lods
xor
add
mov
or
and
hlt
jne
fwait
imul
and
repz
dec
cmp
fstpl
stos
data16
jge
adc
cmpsl
adc
popf
sbb
push
lret
mov
lods
mov
inc
fs
mov
mov
or
dec
or
ret
insb
test
aad
icebp
cmp
mov
cmc
sbb
in
mov
jne
out
and
push
and
push
pop
aaa
cltd
mov
lretw
sbb
test
lret
xchg
and
xchg
jmp
mov
cltd
loopne
adcb
add
fld
cmp
test
and
sub
loop
aad
jns
jl
pop
cs
push
int
lods
mov
and
jl
or
lods
cmp
cmpsb
xchg
pop
je
je
xor
xchg
fcmove
push
mov
shll
mov
cltd
je
xor
adc
cld
xchg
add
dec
inc
mov
pushf
inc
push
clc
push
mov
sbb
jno
int
ljmp
jle
jae
xchg
mov
jnp
mov
sub
gs
mov
push
ret
push
push
repnz
or
jno
scas
add
mov
dec
adc
loop
jae
imul
dec
inc
and
stc
rol
je
add
dec
inc
lret
pop
pop
or
add
lret
cmp
or
xchg
push
pop
xor
adc
lcall
pop
movb
add
sbb
ret
jg
std
jle
sbb
mov
je
cs
sbb
daa
dec
or
inc
xlat
push
lcall
cmp
data16
loop
mov
dec
jns
clc
je
testb
repnz
lret
cmc
or
or
lea
adc
sub
push
mov
aad
jne
aas
movsl
fiaddl
dec
rolb
gs
push
ljmp
sti
pop
mov
leave
mov
bswap
inc
fstl
fistpl
push
loope
pop
stos
or
call
inc
push
cmpsb
adc
adc
or
cmp
stos
push
insb
push
cmp
test
push
mov
shll
cltd
and
incb
xchg
xor
mov
adc
mov
add
push
jnp
jl
mov
jmp
or
mov
cltd
jne
mov
xor
jb
insb
jg
xor
leave
cmpsb
mov
mov
mov
push
push
xchg
ja
xchg
test
mov
inc
lds
push
sbb
sbb
sbb
stos
mov
mov
add
mov
subl
xchg
cmp
sbb
gs
mov
dec
sub
sbb
jmp
cmp
popf
mov
shll
cmc
test
xchg
inc
mull
adc
jle
divb
ret
mov
pop
push
icebp
or
pop
jbe
ljmp
cwtl
imul
cltd
xchg
daa
pop
add
lret
call
mov
inc
sbb
lcall
out
lods
xchg
dec
popf
dec
aaa
add
sub
push
pop
cmp
push
push
pop
int3
inc
ror
mov
cld
sahf
dec
daa
lcall
aaa
lcall
or
dec
jns
xlat
cmp
icebp
push
mov
inc
mov
rorb
insb
xchg
xor
popa
aas
test
scas
scas
push
rep
sbb
and
jle
xchg
insl
adc
shlb
cmc
cmpsl
pop
cmc
mov
das
and
pop
mov
push
aad
aas
jmp
jae
ljmp
idivb
fidivrl
pop
mov
fbld
sbb
xchg
aad
pop
jecxz
inc
inc
dec
cmpsb
sahf
pusha
addb
cmp
push
pop
je
jmp
jnp
aam
push
sbb
rcll
fsubrs
push
dec
arpl
pop
dec
add
movsl
imul
adcl
sti
in
lret
pusha
add
xor
ljmp
jecxz
jnp
fstpl
jns
lahf
inc
push
out
or
cmp
scas
repnz
push
sbb
nop
jge
rcrb
pop
mov
or
rorl
call
mov
arpl
popf
call
cmp
sbb
addr16
and
sub
mov
out
push
ret
jns
push
sbb
jae
dec
rcl
push
fmul
ret
loop
push
rcl
sub
cmp
xor
sbb
gs
inc
jl
lods
push
stc
lret
mov
sub
mov
in
push
mov
adc
testb
rol
arpl
push
loope
mov
stos
add
push
gs
dec
sbb
movsb
dec
out
xchg
cwtl
inc
aaa
fildll
repnz
addl
add
jno
lret
popf
and
adc
sub
jecxz
pop
xor
jp
or
dec
arpl
push
imul
dec
clc
sub
fucomip
sbb
imul
icebp
push
jnp
icebp
pop
insb
xor
test
lret
or
pop
adc
or
out
fst
cmp
cmp
incb
sbbb
add
jne
mov
cmp
loope
out
stc
scas
xor
inc
popa
mov
inc
or
jne
stos
xchg
shrl
cmc
sbb
add
bound
int3
push
push
push
cmc
lds
fsts
adc
repz
cmp
xchg
mov
inc
cmp
jne
cli
or
test
mov
gs
icebp
adc
dec
mov
xor
pop
cmp
arpl
and
mov
pusha
and
add
cmpsb
mov
cltd
mov
ss
rclb
mov
clc
sbb
cmp
push
lcall
add
or
pop
into
sbb
pushf
lea
sti
test
cmpsl
adc
pop
pop
add
mov
mov
jl
cli
cli
pop
xchg
push
mov
xchg
add
mov
pop
adc
popa
sbb
repnz
int3
jp
adc
cmp
xchg
insl
jl
out
xor
pop
data16
js
ljmp
bound
inc
or
ja
add
in
je
sbb
shr
jnp
jb
mov
stos
dec
lret
scas
jl
push
insb
pop
cld
faddl
push
dec
js
dec
stc
add
jns
push
frstor
js
mov
mov
sbb
ds
push
pusha
xchg
testb
mov
or
or
aam
adc
jge
push
push
jge
je
add
lret
mov
xchg
mov
add
jge
addl
cwtl
pusha
jmp
pop
or
fdivr
je
and
pusha
in
hlt
ret
xchg
add
lret
adc
cmpsl
xor
pop
lock
mov
gs
mov
add
xor
vmptrst
nop
adc
mov
mov
jmp
cmpsb
ficomps
pushw
pop
daa
idivb
push
in
jno
das
pop
mov
lea
dec
aaa
pop
sub
cmp
push
xchg
push
xchg
repnz
push
and
adc
jbe
and
movsb
inc
pop
add
jmp
push
cltd
and
pushf
sbb
xlat
aad
fisubl
shll
stos
aaa
fwait
adcb
or
mov
dec
jg
rcrl
shll
jns
pop
xchg
add
mov
jge
sub
aaa
or
inc
in
mov
leave
pop
leave
inc
add
popl
or
cmc
ret
popa
adc
dec
inc
imul
pop
push
pop
mov
mov
jge
xchg
sub
jle
arpl
xchg
pop
ds
out
leave
ss
mov
and
xlat
xor
or
xor
cmpsl
pop
lds
sbb
and
inc
out
ss
leave
xchg
icebp
test
fwait
insb
adc
clc
and
pushf
mov
pushf
cmp
test
mov
xchg
sub
shll
sbb
sub
icebp
mov
jnp
push
sub
dec
scas
mov
push
dec
shrl
inc
sub
sbb
lock
xlat
jmp
dec
pop
mov
addr16
cmc
or
scas
and
dec
jmp
xchg
hlt
repz
lret
sbb
inc
add
sbb
cli
sub
xorl
hlt
nop
jbe
or
aad
cld
push
mov
sub
lret
xor
add
push
and
sub
pop
scas
sbb
inc
mov
stos
xchg
pop
cld
add
pusha
fnstsw
sub
ljmp
leave
cmp
pop
stos
pop
pop
out
add
dec
jmp
mov
mov
pusha
cwtl
xchg
das
enter
xor
lea
jb
subl
lret
ljmp
lret
sbb
loopne
lret
cmp
cmp
adc
sbb
popa
adcl
sbb
fisubrl
in
divl
inc
mov
xchg
mov
daa
andb
or
inc
xchg
dec
mov
es
ljmp
sbbl
gs
push
inc
mov
test
aas
aam
mov
add
add
dec
mov
leave
rol
repz
pop
fisttpll
test
sbb
lahf
mov
in
stos
lahf
inc
movb
or
mov
xlat
inc
data16
dec
pop
mov
sub
inc
addb
sub
inc
fwait
push
nop
aaa
dec
inc
int3
jo
push
push
scas
adc
jb
test
mov
push
orb
adc
fcmovnb
and
dec
xchg
sbb
push
addr16
inc
daa
adc
mov
out
add
inc
sub
fisubl
fwait
or
mov
xchg
and
adc
and
xor
sbb
out
cwtl
or
or
adc
xchg
pop
cmc
sub
fisubl
in
arpl
ja
gs
fcompl
loope
cmp
jno
out
lret
out
xor
xchg
int3
cmp
lea
fs
push
inc
or
into
leave
insb
push
mov
push
xor
cmpsb
add
mov
inc
push
xchg
jecxz
inc
and
or
sbb
and
fidivrs
mov
push
or
movsb
cmp
add
pop
pop
aaa
in
pop
call
ret
dec
ret
sub
pushf
test
xchg
lds
push
sbb
out
push
outsb
xorl
dec
cltd
xchg
mov
xorb
or
mov
test
insl
sub
push
sub
jne
ljmp
add
pushf
jp
out
mov
sub
hlt
lcall
xlat
mov
and
sbb
jmp
imul
or
sbb
repz
adcb
inc
cwtl
ret
sbb
aad
out
inc
les
mov
mov
cmpb
sub
pushf
fbstp
addr16
and
pop
dec
or
sbb
sub
push
cmp
add
dec
inc
pop
mov
cmp
test
insl
jl
push
dec
sbb
pusha
mov
mov
pop
push
inc
pop
xchg
push
pop
sub
stos
bound
cld
int
movsb
pop
leave
dec
sbb
cmp
movl
inc
sbb
or
mov
pop
inc
fcomi
mov
jae
lds
mov
push
cmp
mov
mov
mov
xchg
insb
jae
mov
test
and
pop
int
ss
xor
inc
push
adc
push
sbb
lcall
repz
jle
pop
pop
imul
fdivr
add
sbb
or
push
loop
add
rorl
pop
and
test
or
dec
hlt
pushf
ljmp
dec
fcmovnbe
sub
popf
out
push
lock
mov
js
mov
sub
sbb
out
adc
repnz
fildl
loope
repz
jno
mov
push
mov
rcrl
or
add
jbe
pop
test
mov
lahf
inc
in
sub
sarb
dec
or
push
pop
and
arpl
out
std
add
arpl
push
gs
in
aaa
pop
sbb
cltd
sub
sbb
add
test
sbb
push
addr16
fistps
sahf
in
ret
out
sub
mov
inc
sub
sub
push
pop
daa
cmp
mov
pop
ret
mov
test
outsl
jno
dec
mov
sub
stc
pusha
and
xchg
mov
push
and
push
outsb
or
jg
sbbl
stos
data16
leave
push
lea
or
addb
cmp
clc
sub
inc
mov
jne
jbe
dec
addb
es
fwait
mov
rorb
dec
in
push
leave
sbb
push
sbb
mov
lock
xor
arpl
mov
shrl
js
pushf
clc
add
aaa
scas
push
jnp
xor
fcoms
push
outsb
sbb
sbb
lea
jb
loope
addr16
lock
and
jp
ret
push
push
sbb
les
inc
jb
add
adc
mov
add
aaa
cltd
xchg
pop
movsl
add
push
call
aam
mov
add
mov
lods
call
cld
xor
orl
nop
jns
sbb
fdivr
jge
xchg
scas
push
inc
mov
lcall
inc
adc
jb
sbb
fldt
pop
sarb
clc
nop
add
push
adc
cmp
subb
push
or
mov
inc
imul
sbb
dec
data16
fsts
popa
subb
mov
in
pusha
jns
sub
test
fwait
idiv
or
outsb
push
bound
rcl
jbe
lods
ret
push
jl
push
or
inc
mov
push
stc
daa
mov
sbb
lret
sbb
jp
pop
xchg
sarb
inc
sub
jge
xchg
inc
jb
imul
pop
outsb
fwait
cmp
adc
inc
dec
xchg
ljmp
dec
dec
out
dec
adcb
add
sub
push
arpl
jge
ss
xor
mov
leave
sarb
incl
xchg
jge
pop
scas
mov
lods
fs
xchg
and
dec
pop
pop
lods
jno
mov
add
nop
pop
inc
fwait
test
cmp
stc
mov
xorl
lret
or
mov
ja
int3
stos
push
dec
in
popa
pop
cltd
sub
sti
cltd
call
and
sub
mov
out
lahf
testl
popf
aad
and
in
add
mov
pop
cmp
lods
jne
inc
imul
mov
in
shll
push
stos
push
cmp
mov
lods
pop
jle
jmp
in
cmp
mov
clc
int
pop
mov
test
dec
mov
or
pushf
inc
ror
dec
aas
jge
cmp
sub
or
in
inc
cmc
jae
jecxz
push
mov
outsb
cmpsl
xchg
fcmovu
jl
test
or
and
push
out
repz
jno
rcrl
mov
jmp
pushf
xchg
mov
mov
out
and
dec
and
xchg
mov
add
sbb
mov
in
dec
scas
imul
mov
push
adc
mov
add
and
jae
ret
inc
pop
and
aad
and
rcl
xor
stc
jne
and
and
mov
mov
frstor
xor
data16
mov
jg
insb
subb
ja
fs
push
fisttps
shlb
mov
add
in
mov
pop
pop
cmc
sbb
jge
cmp
lock
xor
cmpsb
pop
ljmp
pop
test
sub
loopne
mov
loop
fsubs
dec
bnd
insl
bound
jne
ss
xor
xchg
push
xor
arpl
lods
add
dec
xchg
int3
jno
lret
dec
mov
rcrb
cmp
insb
push
mov
insb
out
pop
mov
test
cld
xchg
scas
sbb
dec
sub
ljmp
dec
dec
or
mov
test
dec
cli
xorl
and
mov
mov
repnz
jbe
scas
push
push
xchg
dec
movsb
testb
lods
jns
push
jb
mov
fs
inc
sbb
cli
mov
jne
xchg
sbb
inc
add
inc
jmp
test
adc
add
jle
lcall
cmp
pushf
jmp
xchg
ss
into
stos
loop
mov
or
sbb
icebp
lcall
xchg
cli
xchg
lds
jmp
dec
divl
data16
sbb
cmp
popf
lea
adc
faddl
loope
jmp
pop
gs
mov
clc
push
xor
insl
ret
add
test
fbstp
pushf
aaa
mov
call
loope
cmp
loope
cwtl
mov
xchg
sahf
add
mov
push
add
out
fsubrl
clc
sbb
dec
pushl
mov
stc
out
into
sbb
push
sbb
les
and
push
or
sub
xchg
rcr
loop
mov
stc
dec
cmp
push
insb
call
sti
and
push
push
movb
je
invd
mov
mov
stc
aas
dec
popa
mov
mov
xor
pushl
push
pop
sbb
sbb
lods
shll
cmpsb
ror
das
sub
push
out
xor
jecxz
add
or
xchg
xor
cwtl
mov
push
adc
mov
add
arpl
imul
mov
cmp
fsubs
jae
cmp
inc
aad
mov
mov
rorb
ljmp
add
jne,pn
cli
lea
lock
xorl
loope
push
mov
mov
sbb
jne
rcrb
jl
xchg
aaa
adc
lret
push
pop
xor
stos
mov
mov
sub
fbld
jae
shll
jae
xchg
cwtl
ficoms
inc
adc
shl
sahf
push
mov
sbb
test
sub
out
dec
jmp
std
aam
push
jne
push
fwait
pop
dec
outsl
mov
mov
jae
dec
push
push
push
pop
sbb
and
adc
cmc
jae
scas
inc
movsl
pop
inc
mov
cli
xchg
add
adc
les
shlb
sti
cmp
push
fcoml
sbb
inc
out
mov
lcall
jge
pop
inc
ret
push
mov
int3
imul
xchg
add
push
movsb
mov
pop
inc
stos
int
fcmovnb
jno
roll
sbb
inc
push
es
lcall
fmul
jl
pop
mov
push
jge
stos
add
test
aaa
xlat
sbb
pop
pop
inc
popa
cmc
or
jo
mov
push
in
or
rcrl
stc
loopne
mov
sub
dec
loope
sti
adc
inc
mov
cld
cmp
loop
fcompl
out
sbb
xchg
lea
icebp
int3
pop
and
insl
int
sarl
mov
int
dec
popa
xor
seta
mov
sarl
popf
insb
dec
inc
data16
sbb
roll
cld
cmp
pop
aam
sub
add
dec
or
or
rolb
imul
mov
inc
push
pop
orl
mov
arpl
loopne
aas
pusha
in
mov
fwait
je
or
leave
jne
sbb
jae,pn
jg
xorl
xor
fdiv
mov
xchg
add
push
sub
ret
push
mov
jae
sub
rcr
std
sbb
and
jae
push
jle
js
test
stc
aas
je
divl
cltd
int3
les
cmpl
dec
push
mov
cmp
popf
jle
orb
cmc
ds
sbb
and
add
sub
mov
movsl
jl
fdivrl
pusha
jge
fdivrl
sub
add
sub
sbb
dec
push
and
xchg
lret
es
call
mov
loope
nop
ret
xchg
subb
insb
mov
jbe
pop
sub
inc
fwait
pop
sbbb
out
int3
adc
mov
xor
mov
outsb
rcr
lods
shr
lds
push
cld
js
in
lcall
das
les
add
mov
or
push
sahf
call
lretw
cmpl
fmull
enter
das
push
jmp
push
xor
add
adcb
iret
cmp
sarl
pop
dec
inc
cwtl
or
push
sbb
jno
jnp
popa
inc
data16
scas
hlt
cmp
mov
inc
mov
les
out
cmpsb
mov
adc
cltd
adc
add
int
jmp
and
test
jg
jne
jp
pop
cwtl
lods
out
push
jnp
push
loopne
inc
add
dec
adc
mov
loop
in
mov
andb
popa
gs
lods
cltd
cmp
push
jno
pusha
int3
scas
sbb
push
lahf
and
mov
and
mov
aaa
and
jmp
adc
stos
sub
mov
subb
or
mov
out
cwtl
leave
lcall
int3
mov
push
push
sub
push
aas
das
jbe
scas
rclb
outsl
icebp
es
pop
lret
in
cmp
cmp
xor
sahf
xchg
add
and
add
dec
fcomps
dec
cmc
mov
lcall
sbb
sti
push
sbb
sbb
cmp
cli
mov
mov
sbb
dec
pop
repz
add
lods
mov
pop
push
out
push
sub
lret
add
inc
add
push
jge
adc
mov
adc
mov
fnstcw
mov
mov
test
loope
fwait
add
jle
and
inc
das
popf
fists
mov
add
mov
push
movsb
cli
mov
mov
rclb
sbbl
add
ret
sbb
sbb
sbb
push
mov
imul
ds
out
iret
add
or
gs
xchg
mov
push
sbb
je
and
and
add
decb
stos
xchg
fidivrl
aaa
pushf
into
mov
popf
aaa
lods
inc
adc
in
fistl
out
leave
inc
pushf
fsubrs
mov
pop
stos
sarl
aas
test
sbb
jns
push
stos
push
bound
test
pop
xor
xchg
arpl
jmp
push
fisubs
xchg
mov
mov
push
jnp
inc
dec
aam
xor
sarl
dec
sub
mov
push
loope
mov
pop
stos
sbb
mov
leave
xchg
push
mov
int
xor
mov
ret
pop
or
jl
insb
test
adc
push
push
xor
fstpl
mov
or
outsb
inc
scas
push
popfw
add
or
push
pop
insl
and
sbb
mov
sub
data16
jge
cmp
adc
lods
mov
icebp
sbb
push
mov
mov
ds
inc
icebp
jecxz
fistpll
loop
imul
mov
xchg
into
sbb
mov
sbb
fdivl
dec
pushf
test
sahf
scas
jecxz
std
dec
mov
in
pop
jo
fnstenv
push
and
jmp
repz
pop
cmc
dec
mov
dec
xchg
cwtl
inc
or
jle
inc
pop
sbb
in
cmp
notb
outsl
lds
mov
add
push
xchg
leave
pop
xor
jl
xchg
sahf
sbb
int3
cmpsb
mov
scas
adc
ret
xor
sub
adc
mov
push
xchg
or
cli
out
je
ret
lods
or
mov
inc
sbb
dec
adc
jno
mov
cld
mov
fmuls
mov
push
sub
xchg
addl
adcb
mov
std
mov
or
sbb
pop
cmp
push
xchg
add
not
mov
pop
jp
gs
jae
dec
lret
pop
clc
pop
jmp
orb
push
jne
adcb
mov
or
or
lcall
sbbb
xor
lahf
pop
xor
push
cwtl
fmull
sahf
push
rorb
inc
daa
xchg
or
mov
inc
sahf
add
aas
sub
stos
cld
in
xor
add
inc
mov
addr16
rolb
inc
rcr
in
sbb
jp
out
data16
mov
and
lret
stc
add
push
mov
pop
cmp
adc
sbbb
std
scas
mov
int
test
and
repz
inc
or
lea
push
rorl
jmp
lahf
adc
push
les
mov
push
or
gs
aaa
and
int3
sarb
lcall
iret
pusha
and
das
test
mov
es
pop
or
add
or
add
loopne
int3
rorb
fstl
sbb
mov
mov
inc
loop
pop
cmpsl
clc
dec
in
cwtl
and
sbb
xor
loop
jne
ljmp
mov
cltd
mov
popf
sahf
daa
fsubrs
jle
cmp
jp
inc
push
push
mov
scas
icebp
or
sbb
data16
aas
in
test
mov
rcll
shrl
into
lret
add
sahf
inc
inc
hlt
xlat
dec
inc
xor
dec
ret
mov
lds
xorl
pop
jl
popf
mov
sbb
sub
dec
mov
push
or
jb
cmpsl
push
insb
inc
push
lret
stc
jne
fcomps
sbb
push
add
sbb
imul
xchg
push
cmc
movsb
and
mov
push
sahf
or
cmpsb
test
sbb
stos
lcall
pushf
divb
lock
out
sti
jle
pushf
lods
mov
sub
push
mov
outsl
jecxz
sbb
ljmp
fsubs
sub
pop
das
sbb
push
das
cmp
mov
xor
or
push
scas
cwtl
and
arpl
push
inc
pop
mov
add
das
js
fstpt
jp
in
xchg
fcoms
mov
lds
das
xchg
enter
movsl
mov
popf
add
push
xorl
je
push
add
inc
xchg
lcall
outsl
into
shl
or
jecxz
fbstp
cmpsb
fldl
imul
add
dec
xchg
or
mov
xchg
out
loop
insb
scas
data16
fcmovne
mulb
shr
mov
rolb
test
mov
mov
cmpsl
cwtl
inc
orl
dec
xchg
push
mov
push
repnz
sbb
clc
ret
adc
inc
xor
repnz
lods
jecxz
mov
push
mov
das
idiv
inc
or
sarl
xor
add
popl
int
xchg
negl
xchg
fisubs
sbb
ror
mov
and
in
mov
pop
xor
xor
sub
xchg
ljmp
mov
imulb
sbb
xchg
xchg
add
xchg
inc
mov
xor
stos
jo
dec
aaa
push
loop
pop
es
add
and
mov
push
dec
sbb
jge
cli
xchg
jge
dec
mov
arpl
or
jne
shr
ds
rorl
mov
push
mov
add
inc
pop
int3
js
adc
xor
daa
cltd
push
adc
xchg
lods
jns
jae
xchg
dec
ficoms
sbb
pop
jbe
fwait
jp
add
sbbb
sbb
cmc
xchg
repz
pop
lds
aad
push
xlat
xchg
lock
inc
xor
insl
popf
pop
adc
jecxz
fsubl
xchg
add
scas
cwtl
ret
lret
sbb
in
cmc
pop
out
mov
ds
lds
sbb
aaa
nop
stos
cmp
lock
mov
mov
sbb
xor
xor
cmpsl
xlat
lahf
jbe
and
gs
lds
mov
or
outsb
pop
out
loopne
pop
out
push
out
mov
test
out
sahf
mov
add
pop
mov
add
pop
call
test
xchg
jle
and
pop
pusha
jne
inc
push
adc
jns
in
loope
rcr
int
jle
stc
mov
popa
int3
out
mov
shr
and
popa
dec
out
add
decb
bound
std
scas
cmpsb
cmp
cmc
xchg
imul
test
jg
js
test
sbb
fisubl
sbb
pop
pop
xorl
jbe
jns
sbb
lea
lds
fcomip
out
adc
mov
mov
push
xchg
push
andl
lock
int
push
stos
xlat
mov
or
mov
jae
or
js
jle
lods
sub
adc
inc
lods
cmc
add
fdivrs
pop
jmp
aad
inc
add
dec
out
test
pop
lcall
addb
mov
mov
push
lods
daa
inc
add
push
mov
xchg
popf
dec
xchg
dec
or
or
push
fwait
pop
mov
popa
inc
in
test
fdivl
ja
xorb
int3
xchg
mov
cld
adc
dec
in
dec
jle
cmp
inc
xchg
es
xor
out
rol
lods
stos
dec
lods
mov
cmp
fisttpl
ja
in
cmp
dec
lods
xchg
add
leave
dec
mov
faddl
xor
call
dec
pop
pushf
pop
push
not
and
push
inc
xchg
mov
dec
xor
dec
popf
xor
jnp
rol
insl
mov
jo
in
sbb
pusha
repnz
pop
jmp
sbb
pop
sbb
lret
push
sbb
cmp
pop
sub
mov
mov
xchg
ds
das
dec
mov
movsl
push
xor
cmp
adc
ja
stos
or
sbb
jle
xchg
jae
jg
push
call
xorl
clc
test
jp
lods
xchg
stc
imul
mov
pop
test
xor
movsb
das
repz
rcll
lret
push
add
xor
xchg
pop
xor
lods
cwtl
mov
movsl
fcomps
pop
cmpsb
jl
dec
stc
scas
mov
add
push
popf
ss
insb
and
loop
fists
inc
inc
loopne
xor
gs
das
ja
cmc
cld
scas
xchg
pushf
aaa
cltd
and
xchg
jae
insl
aaa
leave
jo
les
ss
out
scas
shrl
mov
inc
cmp
test
add
sbb
lds
dec
pusha
xchg
das
repnz
jno
pop
sbb
and
add
cli
cmc
pop
addb
mov
jnp
push
fcomps
je
in
mov
cs
push
jne
mov
jge
and
hlt
xchg
dec
arpl
mov
push
push
cmpsl
sbb
in
sbb
push
inc
push
or
inc
fistl
rcl
dec
pop
dec
aad
mov
into
add
ret
sbb
mov
add
push
fmull
addb
addb
mov
cli
adc
test
push
jnp
in
test
mov
fistpl
out
mov
or
ret
out
sbb
lret
cmp
iret
adc
sbb
or
mov
push
adc
mov
out
mov
or
ja
pop
in
adc
push
roll
jno
sbb
das
pop
cmpsb
rcll
adc
pop
negl
jl
xor
gs
jmp
mov
add
fs
push
xor
jle
push
jmp
jne
dec
data16
xchg
pop
jle
push
test
inc
xlat
mov
fwait
lods
loopne
push
adc
cmp
mov
xchg
add
add
rcrl
inc
add
push
in
inc
pushf
add
fs
and
cmp
xlat
push
or
pusha
ja
loope
push
mov
mov
in
int
pusha
dec
xor
js
jb
sbb
push
and
or
cwtl
jl
scas
pop
les
dec
aaa
push
fs
dec
cmpsb
out
insl
sbb
inc
inc
pop
orb
mov
jmp
cmc
popf
pop
cwtl
mov
cmc
sbb
pop
jp
ret
pop
rcll
push
pop
faddl
jge
lcall
test
push
add
out
push
addr16
adcl
and
inc
aaa
cwtl
rolb
sbb
out
mov
mov
leave
dec
cmp
ds
push
sbb
inc
cmovg
mov
data16
popf
test
adc
cmp
pop
mov
test
or
or
pop
aam
push
sahf
jne
sti
sub
and
mov
push
fsubl
sbb
daa
mov
xor
rcll
in
popa
mov
mov
out
fistps
sbb
pop
push
mov
inc
xchg
insb
ret
call
mov
pop
stos
fsub
popa
mov
push
lock
or
imulb
mov
orl
rcll
setg
jnp
or
imull
out
nop
mov
inc
popa
adc
test
add
popf
inc
add
cmp
out
lods
sub
pop
sub
cmc
js
aas
dec
jno
dec
lret
icebp
adc
fidivl
jbe
test
push
dec
push
or
pop
mov
jo
sbb
sub
inc
mov
push
lcall
xor
push
scas
sahf
cmp
mov
sbb
mov
pop
or
imul
ror
jbe,pn
or
push
cld
cmp
ret
ljmp
out
and
repz
pop
pop
cmc
sbb
pop
loopne
fistps
lahf
out
addb
push
in
xchg
xchg
lcall
mov
repnz
js
push
push
cmp
and
jae
mov
stc
cli
arpl
push
arpl
add
enter
stos
clc
nop
pop
sbb
out
insl
mov
sub
xor
cli
dec
dec
orl
dec
and
push
sahf
f2xm1
cmc
cmp
aad
lods
popf
dec
add
sub
loopne
popa
test
out
inc
mov
pop
adc
in
cmp
and
dec
jecxz
push
jnp
icebp
jmp
add
jno
xchg
jae
jecxz
pop
xor
or
lea
push
inc
mov
shlb
or
sub
jmp
and
clc
out
inc
sbb
ret
sub
push
test
arpl
and
push
mov
pop
push
pusha
cs
movzwl
mov
mov
add
bound
ret
arpl
inc
popf
inc
sbb
lcall
arpl
mov
mov
sbbl
nop
jp
dec
lock
rol
data16
outsb
pop
aaa
jmp
sbb
dec
insl
jg
adc
roll
rcll
arpl
mov
mov
out
icebp
and
sarb
loop
jae
xchg
push
push
pop
adc
adcb
fistpl
push
in
cmpsb
int3
xchg
mov
into
lds
in
jle
dec
sahf
xor
dec
mov
push
mov
dec
sub
add
sbb
mov
mov
adc
inc
sbb
fidivrl
andl
stos
xor
dec
inc
bound
push
dec
inc
ss
in
mov
mov
mov
ret
das
jne
fs
insl
sbb
fisttpll
xor
aaa
decl
cmpsl
dec
popf
movsl
fwait
out
xlat
stos
mov
bound
or
sbb
mov
or
outsl
dec
jecxz
je
mov
fldcw
cmpsl
cmpsb
sub
sub
push
ljmp
xchg
cmp
jne
mov
jmp
popf
sub
data16
mov
xchg
cltd
xorl
and
mov
cmp
lds
and
add
sub
mov
adc
in
adc
cwtl
pop
adc
jecxz
outsl
test
std
cmc
add
jne
pushf
add
cmpsl
or
lahf
push
adc
loopne
push
scas
push
aad
loopne
int
add
jle
sbb
popa
das
xchg
nop
inc
fdivrl
fisttpll
rorb
stos
pop
mov
dec
popf
test
seto
sbb
ja
sub
rcrb
xchg
outsl
push
and
push
add
push
push
sbb
stos
ja
push
xchg
cs
leave
jmp
mov
xor
or
pushf
mov
aad
inc
out
aam
ds
or
mov
outsl
js
icebp
jecxz
sub
jns
cmc
mov
sar
testb
and
sbb
stc
xor
dec
mov
jecxz
or
adc
shll
test
jns
jns
aam
roll
call
inc
mov
addr16
inc
dec
inc
lock
cmpsl
xchg
jns
adc
and
cmp
sub
sbb
jp
push
add
lea
mov
sbb
addl
mov
jnp
pop
and
fsubrl
movsb
shl
loope
cmpsb
fnsave
add
scas
int
xchg
xor
sbb
popa
subl
mov
ret
cmpsb
xchg
scas
mulb
out
jne
fs
push
xchg
mov
xchg
sbb
repz
imulb
stos
or
jne
inc
xor
arpl
cmp
icebp
push
jmp
pop
dec
inc
xchg
pop
push
cmpsb
js
data16
repz
mov
ficomps
adc
outsl
jmp
sbb
nop
popf
test
mul
call
mov
pinsrw
mov
cmpb
lret
hlt
repnz
jmp
push
mov
mov
push
bound
pop
jle
jge
sarl
test
and
sbb
loope
shlb
test
push
movsb
add
loopne
cmp
sub
outsl
pop
lcall
sub
out
into
adc
xchg
mov
sbbb
sbb
push
addb
in
fistpll
dec
pop
mov
test
sahf
in
mull
adc
dec
cmp
stos
dec
arpl
imulb
inc
sbb
pusha
mov
rolb
ror
pop
addl
imul
ljmp
imul
cmp
ret
pop
int
fwait
call
daa
test
sbb
loopne
loopne
and
repz
sub
push
pop
push
out
ss
lea
mov
pop
cmp
mov
out
cmp
cmpb
adc
pop
leave
xor
je
adc
mov
pushw
xchg
mov
outsb
sub
xor
or
mov
aad
mov
inc
and
push
data16
mov
jmp
es
and
inc
add
dec
out
movsb
add
imul
push
cmp
xor
mov
cmp
jecxz
fs
add
adc
jbe
mov
mov
cli
add
add
mov
or
repnz
pop
or
pop
sbb
test
cwtl
sbb
mov
psubd
cmpsb
mov
aad
pop
sbb
insb
pop
adc
in
lcall
xlat
mov
adc
repz
xor
sahf
sbb
sub
pop
test
or
mov
inc
lods
jbe
or
inc
dec
push
das
inc
in
rcl
push
cltd
pop
cli
mov
push
xchg
add
cltd
and
repz
or
lods
enter
cmp
and
fistpl
jbe
icebp
push
xchg
push
cmp
cmpb
fdivl
xchg
and
dec
aas
scas
jmp
nop
and
adc
test
loope
dec
add
out
cmp
lock
cmpsb
pop
nop
lcall
fimull
outsb
or
jle
test
dec
jmp
pop
movsb
and
jmp
cmp
test
dec
loop
in
dec
stos
pop
sub
xor
lea
arpl
ror
jecxz
mov
pop
xor
dec
add
in
int3
and
sti
push
pusha
rcr
in
inc
mov
jb
or
mov
jmp
pop
dec
into
fwait
subb
rolb
mov
movsb
loop
sub
mov
fdivrl
ret
out
adc
jp
xchg
test
dec
fidivs
lds
or
scas
test
xchg
dec
idivb
mov
fbld
mov
aaa
popf
dec
sub
jp
xor
push
pop
adc
das
pop
add
push
jmp
jmp
dec
hlt
loopne
jmp
dec
sub
popf
mov
ret
test
outsl
xchg
or
mov
mov
push
jg
mov
sbb
jmp
adcb
inc
mov
and
mov
push
prefetcht0
xor
xchg
sub
cmpb
cmp
movsl
add
mov
sti
aas
xchg
iret
sub
mov
movsb
sahf
inc
fnstsw
jb
orl
fcoml
sbb
enter
fwait
cmp
in
test
mov
sbb
and
sub
rcrl
sbb
pop
xchg
sahf
enter
incb
xchg
inc
jp
mov
loop
sub
dec
in
cmpsb
push
imull
popa
cltd
push
lods
sbb
cld
pop
sub
and
loop
enter
cld
pop
xchg
lods
sub
or
gs
loop
inc
dec
leave
jecxz
das
gs
stos
mov
shrl
repnz
and
pusha
inc
lea
out
cltd
xor
cmp
xor
clc
outsb
adcl
jle
insb
pop
jnp
mov
fcmovnbe
sub
xchg
inc
cmpsb
and
push
dec
xor
in
sbb
adc
data16
jne
jg
aaa
loop
lds
pop
outsb
xor
not
or
ret
jnp
xchg
divb
into
pop
inc
sbb
push
rorl
cltd
cmp
shr
call
or
mov
fsubr
sbb
push
dec
cmc
inc
cmpsl
cs
sahf
push
add
sahf
xchg
fsubl
ret
in
std
iret
scas
repnz
test
cs
xchg
sbb
cmpsl
pusha
les
jl
push
xor
jb
stos
jmp
mov
sahf
fiaddl
mov
cli
or
test
pop
lds
lahf
lock
add
jne
fwait
xlat
jg
mov
mov
fbstp
cmp
addr16
shrb
ret
loope
iret
mov
pop
ja
push
imul
xchg
cmp
jbe
pop
imull
push
mov
add
scas
lret
push
rcl
mov
scas
int3
test
clc
xchg
or
faddl
inc
or
cmpsl
enter
push
jl
pushf
or
sbb
int3
sub
xchg
or
cmpsl
shll
and
rol
negb
push
push
in
movsb
das
mov
inc
push
addr16
xor
jne
fs
lahf
pop
cmpsb
das
xor
cltd
mov
mov
mov
sti
xor
ret
or
mov
popa
popa
es
jp
pop
fstpt
fs
lea
push
sbb
push
sub
negb
js
leave
out
dec
pop
jle
jno
stos
xor
aaa
jne
pushf
sbb
outsb
mov
out
cmpsl
gs
cmp
cmpsb
or
push
pusha
add
ret
jb
mov
out
test
pop
leave
mov
mov
nop
lcall
sbb
stc
cli
sub
into
add
inc
sbb
out
adc
sbb
bound
mov
mov
and
loope
dec
pop
xchg
lcall
std
mov
ss
or
xchg
arpl
and
out
mov
xor
mov
test
fidivl
cmpsb
stos
pop
push
inc
and
mov
into
pusha
jns
imul
pop
xorb
or
scas
dec
mov
stos
jbe
rorb
daa
out
cmp
mov
pop
rcl
xchg
add
mov
addb
dec
lock
sbb
shl
add
and
outsb
mov
jne
fstl
or
scas
sbb
fs
scas
jmp
xchg
xchg
push
jmp
dec
mov
nop
adc
cmp
sbb
aad
cmp
outsb
sbb
out
mov
pop
ss
in
pop
stos
stc
arpl
mov
scas
jle
dec
cli
pop
mov
sub
gs
lcall
daa
shrl
jbe
bound
aaa
hlt
negl
fists
cmp
inc
outsl
inc
and
pop
pop
dec
sbb
lahf
loop
test
cmp
in
loop
dec
add
or
dec
test
pusha
testl
xor
cmc
sbb
xor
mov
cli
push
scas
push
mov
push
dec
test
or
test
out
out
or
ss
mov
gs
shlb
cmc
ret
sbb
int3
idivb
inc
ds
and
or
cmp
or
cmp
and
fisttpll
or
add
add
loopne
lcall
cwtl
btc
dec
stos
lahf
imul
dec
cmp
mov
jns
dec
lret
push
dec
stos
and
push
push
repnz
aaa
insw
or
inc
sub
cmp
sbb
gs
lods
add
addr16
cmp
scas
sbb
popf
push
je
or
xor
aas
ja
stos
scas
mov
in
mov
mov
push
add
cmp
in
pop
arpl
mov
ror
lcall
xor
lods
push
outsb
cmp
cmp
adc
pusha
daa
fimuls
mov
cs
adc
inc
hlt
and
test
in
adc
mov
lea
push
dec
lcall
lods
xchg
and
rcll
jecxz
cltd
imul
mov
cmpsb
das
xorl
fdivl
sbb
mov
movsb
inc
xchg
movsl
xor
in
add
repz
mov
outsl
or
xor
jge
pusha
aad
imul
add
ljmp
nop
cld
push
mov
inc
popa
in
clc
adc
xchg
in
mov
and
daa
loop
std
ljmp
bound
jmp
sub
xchg
inc
cs
sarb
leave
dec
mov
or
jo
mov
loop
fstps
les
aas
inc
in
cli
adc
adc
popf
sbb
dec
cmp
in
outsl
pop
add
push
cmpsl
insl
and
jl
int3
popf
andl
out
or
sbb
inc
pop
jecxz
add
add
out
or
imul
pop
sub
mov
out
inc
sbb
lea
sbb
aas
pop
pusha
pushf
add
or
ret
subl
fs
push
testl
arpl
arpl
lret
std
movsb
repz
insl
mov
sbbl
inc
pop
jmp
pop
add
test
inc
sbbl
dec
loopne
aam
mov
mov
mov
push
sbb
in
mov
push
xchg
add
add
mov
movl
sti
fidivl
cmp
loope
out
clc
mov
and
mov
pop
sub
dec
cwtl
sbb
add
inc
imul
gs
mov
dec
test
pop
adc
cmpsl
sbbl
pop
sub
pop
adc
dec
and
sbb
jge
pop
xchg
jo
fnstsw
sub
cmp
fwait
out
push
xchg
dec
dec
data16
or
popa
mov
push
jns
inc
push
xchg
xchg
cwtl
sbb
add
xchg
out
and
xchg
mull
pop
push
xchg
inc
loopne
icebp
dec
mov
stos
sbb
ret
or
pop
aam
in
jg
and
xorl
or
inc
andb
jge
and
mov
out
adc
subb
mov
or
cmp
subb
test
xchg
hlt
outsl
mov
dec
int3
cmp
in
aas
mov
sbb
pop
fucomip
out
pop
aad
pop
jnp
loop
adc
and
xlat
lahf
mov
aad
sbb
stos
jne
fdivrl
push
xor
leave
xchg
add
enter
icebp
in
popa
movsl
and
mov
dec
push
cmp
pop
cmp
lods
outsb
scas
mov
pop
mov
sub
and
pusha
cmc
dec
or
cli
fstl
xchg
push
sahf
andb
mov
aaa
inc
outsb
popa
push
faddl
rcrb
jg
jecxz
xchg
int
jno
dec
mov
rdmsr
pop
or
mov
out
and
sbb
lock
and
add
mov
add
push
or
pop
dec
lcall
mov
or
pop
mov
jnp
push
mov
stc
mov
jnp
mov
mov
add
cmpsl
aas
fadds
sbb
imul
lahf
dec
pop
xchg
adcb
int
loopne
xchg
mov
xor
mov
stos
fisubl
jne
dec
pop
pop
jns
sbbb
pop
andl
add
xor
outsl
rolb
inc
nop
push
leave
ljmp
data16
pushl
pop
sbbl
inc
pslld
dec
test
cmp
mov
pop
xlat
lcall
jl
pop
repnz
pop
xchg
push
cmp
out
pop
shl
jmp
lret
push
inc
cmpsb
mov
jp
jns
mov
cmp
sahf
mov
mov
mov
mov
push
pop
les
push
add
scas
cmc
mov
xlat
jno
sbb
imul
push
push
adc
scas
out
add
xlat
rorl
sbb
hlt
sbb
or
dec
in
mov
cmp
bound
and
pusha
stos
cwtl
mov
adcb
or
shr
in
jbe
pop
iret
push
ret
mov
sbb
cmp
mov
xor
lcall
and
and
fimuls
stos
pop
inc
rcl
lds
pop
cmc
push
dec
xchg
loope
stos
dec
mov
inc
xchg
xchg
scas
decl
ljmp
add
adc
pop
insb
jnp
jne
popa
ljmp
dec
add
cmpsb
test
out
mov
jmp
mov
divb
cmp
arpl
data16
popa
negb
jne
test
pop
xchg
add
das
add
cli
cwtl
sub
gs
cmpsb
sub
or
nop
inc
xchg
decb
fstp
xchg
pusha
in
out
js
xchg
js
or
dec
aas
dec
mov
xor
xor
ret
inc
insb
push
inc
stos
or
sbb
xchg
pop
lods
lret
sub
ret
mov
jmp
stos
sahf
sub
xchg
push
sbbb
jp
xor
out
cmp
int
inc
xchg
mov
fiaddl
stos
dec
sbb
adc
add
das
imul
jle
sbb
mov
inc
mov
in
xor
icebp
fsubl
sbb
add
jbe
sbb
sahf
dec
mov
xlat
loope
jmp
popa
cmpsb
addr16
jae
and
mov
mov
push
stos
insb
fidivs
sbb
sub
sbb
pop
lcall
lock
dec
dec
jp
xor
stc
xchg
inc
popa
mov
nop
shl
mov
mov
push
or
enter
push
push
iret
mov
test
xchg
pop
dec
push
ret
sub
dec
outsb
lea
add
xor
dec
ja
movl
adc
or
andl
mov
lds
adcl
add
xor
loope
test
loopne
push
movsl
sub
data16
sub
decl
xchg
mov
xchg
pop
xchg
jmp
cmp
xor
adc
cmovg
and
push
test
ret
roll
insb
jecxz
jno
pop
mov
add
scas
add
in
aaa
test
andb
popa
fstps
ret
notb
adc
cmp
gs
mov
jmp
push
loop
push
xor
xor
andb
aam
into
adc
xor
inc
jl
test
addb
out
push
push
das
push
fwait
add
jne
jp
cltd
fs
lahf
lcall
vmwrite
or
bound
mov
insl
pushf
xor
push
bnd
add
add
adcb
ss
cltd
adc
cmpl
das
sbb
insb
xchg
sub
xchg
jbe
dec
mov
sub
fcoml
rorl
imul
aas
jecxz
inc
jns
rorl
cvtps2pi
fisttpl
dec
pop
icebp
insb
mov
xchg
push
xchg
push
jmp
cmpsb
pop
inc
fucomp
xlat
loope
and
and
insl
push
mov
ja
add
push
scas
push
lahf
inc
sub
lret
sbb
add
and
cmp
add
jecxz
xor
xor
cmpsb
cmc
pushf
jne
push
or
and
aad
test
pop
addr16
adc
add
es
jnp
jns
sub
or
fs
stos
std
das
cmp
dec
or
ljmp
shrb
sbb
pop
mov
cmpl
mov
cmpsb
push
enter
xchg
hlt
jecxz
daa
out
push
cwtl
rcl
jp
sbb
mov
add
sbbb
dec
scas
lds
add
xchg
pop
testb
push
sub
into
lock
je
mov
mov
loop
arpl
das
cmpsb
or
insb
cmpsl
addb
inc
mov
pop
pusha
push
addr16
sub
add
add
jne
dec
icebp
or
inc
mov
lcall
scas
mov
das
ljmp
cwtl
pop
fsub
lret
mov
movsb
jle
adc
add
add
inc
rolb
pop
cwtl
in
jbe
shll
fldcw
mov
sub
cmp
pop
jp
jle
and
sbb
pop
jge
enter
and
mov
shrb
andl
pushf
repz
mov
imul
loopne
leave
addb
inc
cmp
scas
inc
mov
jne
sub
or
dec
jl
and
sub
testb
xchg
stos
fldcw
popf
jno
push
les
ficoml
mov
test
add
out
clc
stos
sbb
sub
mov
mov
loope
jmp
stos
xor
or
mov
test
xchg
adcl
xchg
add
xor
xchg
xchg
push
shl
roll
adcl
or
and
pushf
inc
xor
inc
scas
adc
add
xor
jmp
leave
jnp
mov
xchg
addb
mov
mov
jmp
pop
push
push
std
adc
push
sbb
adcb
xchg
out
aas
jae
push
cli
mull
or
xchg
inc
push
mov
mov
xchg
lds
push
outsl
testb
addr16
sub
lahf
bound
fsubs
mov
adc
out
cmpsl
sbb
or
inc
sahf
lret
cmpsl
cmc
push
es
jno
clc
or
xchg
jp
pop
inc
loopne
add
jge
cmp
scas
mov
mov
or
inc
in
sub
mov
and
jmp
jecxz
dec
or
add
add
push
push
ljmp
ja
out
mov
dec
lock
test
js
mov
or
fdivs
in
jo
or
es
push
pusha
out
mov
pop
xchg
sbb
dec
jge
fmuls
dec
mov
and
rcr
scas
sbb
fs
sbb
hlt
scas
in
xchg
adc
popa
loop
xor
nop
adc
repnz
movsl
imul
jmp
dec
in
push
popf
ficoms
xchg
subb
jp
jb
xchg
enter
adc
pop
sahf
push
fisubrs
stos
pop
nop
pop
pop
mov
and
pop
xchg
fidivl
stos
xchg
mov
movb
fstl
xchg
js
dec
jmp
pop
pop
or
jp
ret
sbb
lahf
outsl
dec
daa
add
or
mov
mov
mov
adc
mov
das
icebp
ss
jmp
movsl
lahf
sbb
inc
lret
xchg
dec
cmp
lods
sbb
sbb
and
jecxz
xchg
push
pusha
add
loop
inc
test
or
aad
xchg
inc
cmp
pop
xchg
es
movsl
sbb
inc
div
sbb
sti
cmpsb
jne
shlb
adc
ret
or
or
inc
sbb
xchg
les
mov
inc
movb
jb
sub
sbb
xchg
cmp
add
addr16
fs
into
out
inc
test
or
loop
adc
or
add
inc
in
pop
ret
bound
loope
inc
sub
push
add
jle
sbb
jno
cmpb
addb
mov
or
or
xchg
sbb
add
dec
fcoms
xchg
repnz
cwtl
dec
add
stos
fdivs
orb
mov
jg
or
call
mov
push
loope
pop
mov
rolb
cmpb
imull
lock
mov
xor
jp
enter
cmp
jmp
sbb
or
dec
mov
sbbb
rolb
pop
xor
jbe
mov
and
and
jle
inc
test
or
fsubs
icebp
insl
mov
dec
push
sub
cmp
jb
inc
repz
push
insb
jp
push
xchg
sti
inc
cmpl
mov
sahf
stc
daa
pop
sbb
ja
mov
mov
test
mov
js
iret
mov
sbb
xlat
int
fstpl
add
insl
mov
subb
aas
popf
cmpsl
scas
out
pop
xchg
ret
fst
in
mov
addr16
inc
mov
dec
mov
xor
in
cmpsb
or
pop
out
and
insl
out
js
andb
add
loopne
xlat
mov
sbb
andb
pop
add
inc
pop
push
push
pop
or
push
aas
pop
ss
xchg
inc
in
xor
xlat
arpl
in
inc
mov
pop
push
mov
icebp
mov
jne
or
add
push
out
lret
or
mov
inc
sub
cwtl
sti
pushf
cmp
out
negb
jle
mov
outsl
sbb
push
jnp
add
cmp
push
mov
push
insl
inc
inc
out
add
popa
sbb
leave
movl
out
or
xchg
and
and
lcall
sbb
loope
pop
sub
dec
push
into
sub
cli
pusha
mov
sub
mov
std
jp
or
ds
arpl
dec
inc
and
push
js
mov
mov
cli
mov
inc
fnstsw
mov
lock
ds
aam
insl
inc
sbb
imul
jno
push
push
sub
xchg
into
pop
icebp
xor
and
push
in
cmc
cmc
icebp
enter
lcall
les
dec
dec
add
dec
adc
mov
jo
aaa
mov
imul
pop
add
and
subb
pushf
cs
sbb
jne
xor
pop
shrb
or
sbbl
out
xchg
add
ficomps
pop
sti
mov
pop
test
cmpsb
push
nop
loopne
pop
jo
push
data16
imul
jecxz
and
iret
in
scas
outsl
push
push
inc
ja
add
add
cmp
int3
xchg
pop
sbb
pop
jge
adc
out
popa
loope
js
jne
fdivl
aam
ds
rorl
mull
inc
imul
and
fldl
lret
mov
add
testb
sbb
inc
push
scas
jne
idivl
gs
xchg
adc
ret
aad
push
cmp
xchg
cmp
inc
push
push
push
lods
or
scas
jns
pop
fidivl
dec
mov
jl
decb
jl
jmp
sbb
pop
fcoml
ja
retw
inc
fmul
jge
push
notb
orb
dec
add
push
pop
adc
scas
push
jne
dec
push
cmpsl
and
pop
cmp
sbb
sub
adc
cmc
sbb
popf
push
xor
inc
xchg
adc
icebp
jmp
jae
fidivl
mov
sahf
rorl
dec
cmpsl
cmp
nop
sub
daa
or
jno
fidivrs
pop
push
add
dec
jecxz
mov
mov
mov
or
inc
dec
sub
shl
psraw
popa
mov
add
sbb
repnz
int
push
aas
pusha
rcrl
mov
mov
jbe
push
xor
or
adc
lds
sub
mov
push
cli
jo
pop
int
addb
dec
jl
daa
lds
mov
mov
popf
adc
push
or
ljmp
int
andb
xchg
dec
iret
inc
jne
xor
hlt
push
adc
out
push
cmp
cwtl
add
xchg
mov
sub
sbb
dec
fcoml
dec
xchg
fcmove
add
inc
rcrl
sub
loop
repz
notl
dec
mov
pop
shlb
mov
loop
insb
dec
divb
adc
lahf
imull
pop
mov
mov
out
pusha
and
add
xor
mov
push
lret
inc
jo
mov
out
or
sbbl
stc
push
or
idiv
sub
or
add
gs
test
sbb
vmovntps
sahf
ret
cmp
push
bound
add
sbb
mov
push
mov
xor
inc
sbbb
mov
negb
sahf
mov
ja
stc
lahf
mov
jbe
aam
push
and
hlt
mov
andl
xchg
mulb
data16
push
in
xchg
xor
inc
xchg
or
and
ret
inc
aam
ss
add
push
subl
mov
pushf
xor
push
cmpsb
int
test
lock
inc
push
add
cmp
lret
sahf
push
mov
adc
jp
mov
push
pusha
mov
imul
xchg
icebp
stos
jle
mov
mov
dec
inc
xchg
push
inc
push
std
pop
popa
add
test
rcrb
xchg
mov
jmp
cmc
sbb
mov
mov
out
ret
push
sub
add
out
cmpsb
adc
repz
shrb
loop
cvtps2pd
jmp
and
andl
mov
xchg
aam
and
out
mov
push
in
test
ljmp
or
mov
xchg
out
jo
xor
adc
inc
inc
pusha
pop
pushf
xchg
sbb
mov
jmp
sub
and
pushf
push
sti
outsb
inc
pop
add
pusha
cmp
shlb
mov
popf
in
push
cld
dec
sarb
mov
lret
ja
scas
xchg
shl
push
xchg
inc
lods
scas
jle
push
into
in
and
lock
daa
mov
lock
or
loope
dec
adc
outsl
lods
inc
add
dec
movl
cmpsb
int
icebp
dec
xor
xor
popf
add
or
mov
cmpsb
push
and
lcall
jbe
add
sbb
dec
and
add
or
aaa
cwtl
out
loope
or
ss
hlt
fcomp
in
out
xchg
fwait
enter
pop
test
ljmp
lds
xlat
add
cmp
orb
imul
jae
rep
add
dec
push
mov
testb
in
pushf
mov
add
add
jecxz
inc
adc
jne
movsl
imul
imul
mov
sti
adc
xchg
in
cmp
aad
test
xchg
push
mov
push
dec
and
sub
jp
call
and
or
filds
push
fimuls
push
push
inc
jb
cmp
daa
xorl
xchg
movsb
mov
test
pop
lock
cmp
cli
push
cli
or
or
pop
push
mov
lods
out
push
jno
mov
ss
je
push
xchg
js
jle
aaa
add
lcall
push
dec
cmc
inc
or
adc
int3
push
outsb
cmpl
mov
xor
sbb
leave
mov
adc
lods
sub
xor
jge
push
push
xchg
stos
mov
clc
insl
jne
xor
push
xor
test
dec
das
sbb
and
sbb
lds
mov
leave
xor
add
jb
pusha
add
inc
shlb
push
cltd
push
fwait
and
idiv
cli
int3
and
mov
xor
add
aad
add
fstl
jle
fmuls
sbb
rolb
jecxz
lds
fidivrs
xchg
and
mov
daa
jp
adc
pop
cmpsb
fisubl
dec
fcmove
cwtl
ret
aaa
test
or
out
mov
pop
push
or
leave
pop
pop
inc
add
inc
xchg
mov
sbb
jg
push
ror
fsts
pop
push
dec
or
dec
inc
lods
cmpsl
jle
loope
lcall
pop
fldl
mov
sbb
dec
adc
mov
inc
loopne
mov
cltd
dec
ret
xchg
out
cli
bound
lret
pop
push
jno
movsb
sbb
enter
cmpsl
dec
dec
and
das
aas
xchg
inc
shlb
sbbb
dec
push
mov
dec
in
ret
loope
mov
pop
push
mov
dec
nop
add
jle
arpl
cmp
jmp
push
out
sbb
sub
mov
cmp
sbb
into
fsts
pop
scas
xorl
jbe
lock
pop
sbb
addr16
xchg
sub
push
adc
jne
call
fdivrl
sub
adc
mov
mov
loopne
pop
adc
fistpl
inc
imul
sub
out
push
rolb
andl
int
mov
and
sti
jae
add
dec
addr16
sub
pusha
sbb
mov
rcr
lret
lret
push
jl
fisubs
mov
repz
sbb
gs
int
and
sub
aam
lret
xor
adc
ret
adc
add
mov
inc
enter
sbb
mov
cmp
mov
inc
test
add
add
test
out
fs
add
fcmove
out
dec
cmp
push
gs
repz
add
jp
adc
aaa
push
dec
repnz
inc
xor
testl
mov
lcall
jns
xchg
xor
inc
adc
mov
stc
aas
jge
inc
push
in
mov
lea
or
jp
jb
mov
stos
and
pop
mov
add
pop
push
inc
fstpl
jnp
mov
call
or
andb
adc
xor
int
or
and
das
jp
pop
xchg
popa
xor
pop
subb
icebp
sahf
out
scas
fdivrs
in
xchg
xchg
andb
out
push
push
fst
inc
xchg
or
cmpl
inc
outsl
test
popa
divl
mov
insb
dec
stc
sbb
add
test
sub
out
mov
mov
roll
push
shll
ja
imul
les
xchg
dec
jb
sub
sub
loope
and
cltd
xchg
in
cmc
popf
mov
mov
sbb
xchg
in
ret
mov
mov
and
inc
sub
cld
pushf
push
xlat
dec
enter
out
pop
jae
xchg
pop
loop
mov
push
lcall
xchg
in
add
dec
loopne
clc
inc
jne
lcall
hlt
xchg
or
mov
insb
xlat
pop
inc
int
mov
xchg
loop
sub
test
xor
jae
xor
pop
push
sbb
loope
ret
jge
dec
mov
adc
lcall
push
sbb
jmp
push
test
insb
inc
and
mov
mov
mov
cmpsb
dec
and
dec
dec
loope
xchg
daa
jle
push
bound
orb
cwtl
add
inc
enter
in
xchg
push
and
mov
mov
mov
bound
shlb
sahf
push
or
push
xchg
inc
adc
ljmp
cld
xor
cmpsl
sbb
call
loope
jno
fmull
mov
or
pusha
xor
and
mov
in
sub
mov
movsb
add
xchg
in
sbb
into
xchg
cmp
xchg
cmp
out
and
mov
cmp
pop
out
push
or
lock
xchg
push
adc
xor
push
loop
popf
mov
inc
jne
dec
out
ds
xorb
mov
add
sbb
dec
gs
das
or
popa
arpl
add
jae
lret
or
xchg
out
subl
pushl
iret
sbb
popf
xor
outsl
or
add
xchg
pop
ret
pop
push
add
pop
lods
and
adc
popf
int
addl
mov
iret
xchg
fsubrl
gs
mov
dec
push
sbb
cld
sbbb
add
and
fs
adc
faddp
sbbb
jle
lret
decl
dec
dec
sti
dec
popf
pop
rcrb
add
xor
loope
orl
and
out
fucomi
lods
lds
push
push
add
mov
push
ljmp
xor
mov
jp
rcl
xchg
mov
in
jge
inc
in
push
mov
aam
cli
insl
push
repz
lea
les
cwtl
fs
fidivs
dec
push
fmull
popa
pop
pop
jge
loopne
in
jo
addl
xchg
jp
int3
xchg
dec
pop
adcb
out
das
shr
shll
fcmovnu
push
gs
push
inc
inc
jle
cmp
or
xchg
lock
aas
add
or
inc
pop
ror
aas
out
pushf
lret
jo
negb
sub
mov
mov
jp
inc
jle
ror
pop
addps
pop
pop
mov
cmp
pop
enter
popf
push
sahf
sbb
mov
cmp
add
xlat
mov
fwait
repz
dec
xor
out
loop
inc
jns
pop
jne
addl
test
lahf
bound
loopne
inc
pop
cld
in
daa
movsl
jne
cmp
ds
sti
pop
xor
dec
inc
inc
and
push
out
lret
mov
sahf
inc
sub
xchg
lret
push
std
push
das
push
push
push
jmp
es
dec
repz
fwait
movsl
sbb
or
loopne
adc
pop
mov
cmpsl
push
pop
jge
cwtl
xchg
sti
cld
and
mov
and
sbb
mov
ret
bound
mov
push
ret
dec
push
mov
inc
stos
fildll
xor
jb
add
jo
shl
inc
or
mov
sbb
js
xor
pop
shlb
and
cs
or
inc
or
sbb
cmp
pop
aad
mov
flds
mov
int
fbld
dec
xor
sbb
enter
incl
test
sbb
shlb
xchg
mov
icebp
out
jnp
add
not
xchg
adc
subl
inc
xor
xchg
xor
pop
out
jb
pop
mov
scas
inc
in
lahf
lock
or
mov
push
pop
inc
mov
mov
lods
cmp
outsb
scas
lock
lahf
cmpsl
lods
mov
cmp
cmpsb
add
sbb
pushf
jns
pop
jns
inc
ljmp
mov
pushf
mov
in
jne
mov
and
jbe
add
push
add
or
aam
adc
stc
stos
mov
into
nop
or
xchg
jge
outsb
cmp
stc
inc
das
jnp
mov
add
adc
sbb
jbe
enter
mulb
sahf
push
sbb
adc
mov
sbb
ficompl
subb
das
sarb
mov
and
les
decb
pop
bound
cmp
add
addl
inc
mov
aas
add
movsl
cld
sub
repnz
sbb
outsb
jns
lahf
addr16
xchg
cld
stos
ret
adc
mulb
popa
sub
jns
lea
addr16
sub
jmp
add
dec
inc
cmp
add
cltd
mov
aaa
repnz
aaa
gs
bound
pand
scas
out
sub
cwtl
xchg
sbb
jno
or
popl
jmp
andl
addr16
jmp
in
mov
mov
repz
loope
add
push
mov
fwait
inc
adc
ja
add
int3
or
sbbl
cmc
or
into
fwait
outsb
mov
popf
sub
dec
je
push
sbb
movsb
sbb
or
mov
sbb
adc
ficompl
dec
ja
jecxz
pop
push
inc
clc
inc
rcrb
push
ja
jbe
or
out
and
ss
bound
subb
push
das
out
xor
add
add
rclb
or
sar
pop
push
aaa
jg
push
lods
out
rcll
pop
lods
jno
bswap
jp
cmp
push
bound
lahf
lea
clc
shr
jbe
mov
jecxz
inc
sbb
pop
stos
jbe
push
lds
in
mov
cmc
mov
aam
sahf
dec
idivb
mov
xchg
or
out
loop
mov
inc
xlat
fldl
mov
in
mov
mov
mov
jle
add
or
test
mov
jge
cli
xchg
dec
jno
repnz
lds
push
mov
gs
lcall
jmp
mov
aam
lock
jg
mov
cltd
jl
mov
bound
adc
or
and
lods
pop
repnz
stos
sub
js
das
xor
lds
addr16
and
enter
dec
push
mov
mov
pop
cmpsl
or
cld
test
mov
add
and
icebp
xchg
adcb
repz
repz
mov
imul
in
arpl
sti
mov
xchg
or
cmp
sarb
sub
bound
shll
lds
or
mov
in
pusha
mov
jmp
jns
mov
sti
add
gs
dec
addb
into
sub
pop
ret
mov
and
rolb
sti
enter
sub
pop
push
pushf
movsb
or
push
fstpl
inc
mov
inc
push
sbb
inc
pushf
faddp
pusha
jo
xchg
movsl
mov
stc
in
inc
pop
xor
fistpll
fists
push
or
jle
adc
sbb
adc
and
call
gs
divl
push
fwait
add
mov
add
fwait
adc
inc
mov
int
cmp
push
cld
loop
fistps
daa
jge
pushf
xchg
icebp
fcomps
or
jmp
adc
push
dec
sbb
mov
lods
adc
out
add
shl
out
stc
add
shl
mov
dec
push
mov
fmuls
arpl
cmp
out
mov
mov
jno
mov
add
jl
mov
adc
lds
mov
movsl
js
popa
int
adc
je
mov
sahf
add
xor
inc
sbb
add
add
add
inc
fsub
pop
xchg
stos
push
test
push
je
mov
test
out
popa
incb
mov
rcrb
mov
xor
pop
and
inc
xchg
inc
in
push
sbb
mov
cmp
adc
adc
leave
stc
sbb
pop
aas
mov
shrl
sbb
push
jp
inc
movsl
pop
push
mov
inc
out
cmpsl
dec
fildl
decl
push
sbb
rol
push
inc
add
test
pushw
roll
sub
sti
icebp
adc
int
push
ret
mov
lcall
push
push
cmp
inc
sub
addr16
jecxz
cld
enter
dec
inc
sbb
jno
mov
test
mov
icebp
push
adcl
nop
test
xchg
push
fwait
mov
jge
mov
cltd
fwait
clc
gs
orb
adc
ds
gs
mov
sub
inc
dec
fiaddl
sbb
orl
lock
fisubrs
aam
inc
dec
add
in
ret
sbb
xchg
xchg
imul
mov
inc
jne,pt
repnz
idivl
pop
jg
cmp
mov
lcall
xor
sti
es
movsl
mov
mov
xor
dec
mov
or
and
or
jbe
mov
les
addps
xor
pusha
jmp
jge
aaa
or
jp,pt
or
sbb
std
push
sbb
cmpsl
add
push
daa
pop
or
dec
push
dec
imul
xor
lds
fmull
adc
pop
jmp
mov
inc
lods
je
or
inc
cmp
pop
into
jle
and
xchg
push
sti
test
loop
mov
push
js
call
lahf
sbb
fwait
rolb
cmpsb
add
ret
mov
lds
shll
fsubrl
ljmp
mov
jmp
fimull
fwait
push
hlt
stos
and
pop
mov
cmc
push
mov
add
arpl
sub
rcr
sbb
jae
xchg
mov
ficomps
mov
insl
cmpsb
add
data16
push
inc
je
fidivrs
aaa
decl
sbb
xchg
or
fistpl
or
xor
push
and
xchg
mov
or
mov
popa
pop
sub
cltd
arpl
dec
push
and
js
ja
mov
insb
xchg
pop
and
dec
sub
mov
jge
sbb
add
fistpll
sahf
dec
jb
sub
mov
jp
aas
movb
cmp
orb
ljmp
jmp
and
push
lret
aaa
dec
jecxz
sbb
fdivr
push
or
xchg
sbb
sub
jl
sub
inc
mov
icebp
sub
pop
pop
int3
dec
call
iret
fimuls
and
mov
push
cmp
sbb
jb
stos
shll
inc
xor
gs
insb
subl
test
adc
cmpsb
out
mov
fildl
mov
add
test
push
imul
lea
mov
bound
adcb
push
pusha
lret
fnsave
mov
sbb
push
mov
loop
lcall
xchg
push
fs
cmpsb
test
into
pop
sbbb
jg
daa
sti
pusha
sub
mov
rcll
mov
adcb
jg
push
into
push
xchg
je
xor
xchg
adc
adc
jno
inc
addr16
or
test
cmp
mulb
mov
fdivl
xlat
push
xchg
shl
add
dec
outsb
sub
sbb
adc
fadd
cs
and
xor
mov
pop
lods
dec
inc
or
daa
stos
inc
add
addr16
cmpsb
out
data16
mov
pop
or
jle
inc
mov
inc
es
loope
jl
xchg
cmc
adc
test
gs
pop
test
adc
insl
xor
stc
mov
jmp
jge
pop
mov
pop
aaa
pop
pop
pop
clc
mov
xor
lret
divl
add
mov
xor
ja
ja
xor
add
out
cmpsl
sti
mov
popf
js
or
pusha
cmc
mov
jp
cmc
pop
adc
cmp
push
aad
and
mov
cmp
mov
sub
jae
loopne
out
lods
mov
push
or
pop
ret
into
insb
xor
stos
subl
hlt
push
xchg
test
push
loopne
pop
or
aaa
push
add
cmc
cs
mov
push
fdivrl
fsubs
push
cmp
xor
imul
psrld
dec
jmp
pusha
out
add
sti
inc
push
dec
push
mov
cltd
mov
push
ret
sub
mov
add
xor
sahf
sahf
loopne
xor
test
out
rorb
and
nop
dec
bound
jno
push
cmp
cmc
sbb
scas
sahf
or
ret
movb
inc
mov
cli
sbb
rcrl
test
inc
push
push
push
outsb
xorb
adc
popf
cmp
pop
push
jge
mov
repnz
lret
clc
jno
fwait
into
mov
mov
xchg
sub
sbb
enter
mov
pusha
xor
xchg
pop
push
out
xchg
mov
popf
jecxz
jb
dec
ss
or
jae
cmc
aaa
and
ret
insb
test
dec
push
pushf
pop
and
cwtl
sbb
adc
push
inc
dec
call
jle
repz
hlt
ret
addr16
inc
add
xlat
mov
repnz
into
aaa
xchg
pushf
and
mov
inc
xchg
fisttps
scas
mov
movl
lret
pop
pop
mov
orl
loope
shrl
daa
jno
incl
repz
mov
pushf
mov
in
movb
dec
mov
negl
stos
mov
mov
push
inc
mov
out
add
jne
fsub
mov
fstl
xchg
pop
arpl
dec
adc
mov
lock
sub
push
lds
sahf
sbb
mov
sbb
push
jp
cltd
inc
test
sahf
push
cmpsb
mov
cmp
notl
mov
movsl
mov
sub
add
out
cmc
inc
and
mov
cmc
ljmp
lods
xor
arpl
gs
das
aad
mov
mov
sub
and
sbb
iret
mov
add
push
sub
push
add
jmp
add
mov
sarl
fisttps
jae
sub
sbb
cmpsb
xor
jnp
pusha
movsl
pop
push
sub
imul
jecxz
mov
stos
adc
inc
adc
cmp
in
mov
ds
popf
lret
scas
scas
or
mov
mov
orb
test
pop
add
xchg
dec
pop
or
or
mov
mov
js
inc
pop
pop
push
dec
or
xchg
cmp
xchg
inc
sbb
or
xor
sbb
mov
sub
sub
push
add
push
add
andb
sub
fiaddl
scas
push
mov
pushf
rolb
mov
mov
or
mov
push
icebp
pop
pop
sti
fdiv
andb
testl
bound
xor
push
ss
xor
inc
xchg
sub
inc
mov
cli
jl
jge
jb
push
or
in
pop
or
jmp
xchg
fstps
or
adc
out
outsl
push
les
cs
stos
sub
xorb
xchg
rcl
outsl
scas
insl
sarb
in
jle
vcomiss
aam
popa
out
or
add
fstl
adc
or
loopne
js
mov
push
sbb
push
inc
jle
pop
mov
fwait
xchg
push
push
mov
gs
sahf
mov
push
sub
fdivr
pop
and
andb
pop
bnd
popa
movsb
ljmp
fists
xchg
mov
arpl
cli
jge
push
xchg
lods
xchg
jo
testl
aad
and
sub
inc
or
xchg
xor
pop
loop
cli
mov
bound
push
sub
fisttpll
cmc
repnz
dec
sub
fwait
add
into
and
out
inc
jmp
cli
add
pop
data16
idivb
out
mov
mov
push
cmp
sbb
arpl
std
out
ljmp
mov
les
mov
lock
ficompl
sti
subb
push
jge
xchg
mov
in
rorb
dec
and
pop
stc
xor
push
pusha
aam
pop
fildl
loope
push
cwtl
out
push
in
nop
int3
leave
je
xor
stos
push
stc
hlt
push
xchg
lds
sbb
repz
xchg
xorl
out
fadd
out
and
fstpt
cmc
outsl
pop
movsb
add
jp
jl
in
adc
cmp
add
mov
addr16
ret
jge
mov
adc
insb
lock
in
data16
cmpb
or
push
add
scas
lds
jnp
jno
push
cs
out
adc
inc
and
mov
xchg
dec
xchg
loop
int
lea
dec
shrl
sahf
cmc
test
mov
pop
sbb
jne
movsb
push
sbb
data16
sbb
add
mov
mov
add
sub
push
mov
push
sub
popa
cmp
dec
pop
cmpsb
inc
pop
push
lods
jns
scas
lods
lahf
inc
dec
mov
fwait
pop
push
xchg
loop
lcall
mov
or
push
fstpt
push
cmpsb
enter
dec
and
lods
xchg
into
push
or
lcall
mov
loope
test
lea
loope
adc
test
fwait
push
clc
mov
mov
push
lds
mov
sub
arpl
cmc
adc
pusha
mov
or
sub
into
cmp
jle
mov
testl
movsb
fdiv
cmp
imul
ret
std
xchg
popf
iret
int3
jp
push
pop
push
test
test
dec
and
popa
inc
xlat
aad
mov
push
push
xor
insb
ud0
mov
roll
mov
push
mov
nop
xchg
add
lahf
in
xlat
inc
pop
out
inc
mov
or
inc
popf
repnz
es
pop
inc
and
inc
in
btr
sbb
mov
andb
jg
mov
cmc
enter
xchg
addb
test
dec
and
push
add
inc
andb
std
mov
push
push
jle
and
xchg
insl
add
lahf
sbb
xchg
sub
and
lahf
movsl
lods
popf
sbb
and
inc
shl
imul
rcll
test
cmc
mov
cld
sbb
jp
les
xchg
sbbb
xor
testb
push
fs
sbbb
add
mov
dec
out
mov
fdivs
push
sbb
test
fmul
sub
inc
in
aad
sbbl
pushf
ljmp
into
sahf
jge
gs
call
fsubl
cmp
xchg
lcall
dec
loop
fwait
jbe
dec
sub
mov
push
add
xchg
fwait
and
mov
sbb
push
shll
jle
sbb
scas
and
arpl
mov
fwait
push
mov
aam
xor
push
pop
dec
out
aaa
aas
lcall
mov
jle
pop
lcall
mov
cli
xchg
lea
out
dec
xchg
mov
mov
rclb
outsl
dec
jne
mov
mov
cmc
fisubrs
xchg
lret
shrl
mov
push
add
pop
loop
mov
clc
arpl
in
imul
fnsave
icebp
test
mov
or
test
movsl
loop
loop
push
adc
sub
inc
addb
hlt
ficomps
fwait
andl
fildll
adc
repz
mov
push
out
inc
inc
pushf
xlat
mov
lods
cmpsb
dec
das
adcb
mov
sub
push
das
fwait
outsl
in
lods
add
int3
add
orb
popf
push
dec
push
repnz
push
push
pop
lods
nop
sbb
decl
pusha
or
leave
xchg
xchg
jp
out
mov
and
sub
push
test
ljmp
sbb
push
xchg
ret
test
addr16
popf
inc
imul
sarb
push
xor
insl
inc
pop
cwtl
sbb
cmc
and
pop
push
icebp
insb
pop
in
sub
lret
repz
jno
mov
pop
rcr
out
rcrb
dec
mov
push
jno
sub
jo
popa
cs
push
insw
out
inc
jb
pop
dec
sahf
mov
mov
cmpsb
sbb
mov
add
cli
cmp
push
sbb
aaa
mov
xchg
mov
adc
dec
mov
idivl
push
pop
jb
arpl
testb
cmpsb
dec
adc
cli
xor
clc
push
shl
aam
cmp
cmc
fsqrt
cmp
outsb
nop
xor
mov
push
mov
inc
xor
sbb
popl
inc
cmp
fimuls
fiadds
sahf
sub
xlat
icebp
insl
sbb
pushf
sbb
popa
lret
and
add
adc
std
cmc
sbb
sbb
xchg
push
sub
inc
push
pusha
and
add
push
xorb
loop
test
push
cld
popf
sub
sbb
loopne
dec
shll
push
cmp
pop
push
popf
outsb
sbb
add
test
add
and
fmuls
not
add
adc
repz
push
mov
fidivrl
lock
pop
scas
mov
mov
or
or
inc
aas
or
dec
dec
je
inc
arpl
sub
test
repnz
jno
fildl
or
and
mov
sub
bound
mov
pop
in
dec
lods
add
negl
sub
mov
xchg
and
pop
iret
aam
adc
lds
push
sub
dec
push
lea
lret
movsb
fucom
scas
test
cmp
inc
popa
outsl
xchg
jno
or
push
and
addl
inc
push
mov
mov
js
js
inc
fdivs
popa
jmp
insb
jecxz
mov
loop
mulb
shlb
stos
cmp
jle
sbb
into
pop
sbb
dec
aad
push
neg
popf
add
out
mov
fmul
icebp
adc
inc
mov
je
idiv
addb
pusha
cwtl
sbb
lea
sbb
adc
sahf
jg
std
movsl
pop
sbb
roll
mov
jle
sbb
pop
and
pushf
sahf
lret
pushw
sub
aaa
pop
cmpb
cmp
mov
sti
cmc
dec
jb
and
movsb
movsb
mov
outsb
rol
pop
xchg
es
sub
ret
pop
adc
push
ljmp
jecxz
and
loop
cmp
aam
daa
lock
inc
andb
aas
pop
mov
lret
mov
push
dec
inc
and
pop
jmp
jg
xchg
hlt
and
mov
ret
add
pop
lods
mov
push
test
dec
xchg
sub
inc
gs
into
sub
jmp
push
pop
roll
jg
into
mov
add
fcompl
das
jns
inc
ret
test
push
mov
adc
add
sbb
mov
icebp
mov
push
pop
test
sbb
push
in
or
mov
loop
jp
cmpsl
mov
add
mov
cmp
mov
ret
out
xchg
mov
cmp
dec
sub
out
sarl
imul
inc
repnz
sbb
xor
fiadds
aam
rorl
andb
cmc
and
lret
push
add
push
xor
fwait
push
xor
push
jl
aaa
xchg
loop
loop
popf
popa
leave
fwait
and
sub
test
push
divb
inc
lds
xor
fisttps
xchg
shlb
mov
jb
push
sbb
and
xchg
jmp
jno
inc
pop
or
push
int
inc
inc
ss
repnz
into
test
xchg
imul
lcall
dec
inc
call
xchg
into
xchg
mov
xor
xchg
mov
scas
inc
out
inc
cwtl
mov
add
lock
cmpsb
push
cltd
add
jns
adc
fadd
test
mov
or
into
lret
mov
dec
cmp
enter
dec
cwtl
rcr
sbb
jmp
bound
mov
mov
xor
or
je
popf
dec
and
mov
push
lods
mov
dec
pop
sub
sbb
outsl
orl
dec
aad
xchg
gs
adc
test
stos
test
stc
or
ja
test
and
mov
sbb
jmp
xor
in
pop
sbb
pushf
andb
mov
push
inc
inc
mov
mov
mov
stos
push
test
subl
dec
adc
xor
fcomi
adc
sub
cmp
scas
mov
es
and
addb
pop
add
pop
lds
pop
lods
pushf
inc
add
push
push
push
push
test
and
push
push
into
jg
ficoml
fisttpl
rolb
fisttps
loope
cli
daa
pop
mov
or
xchg
idivb
jl
mov
adc
adc
push
stos
lods
or
loopne
roll
or
scas
fwait
sbb
lods
sbb
add
and
sbb
sbb
pop
test
jecxz
jne
cmpsb
push
stos
xor
mov
push
hlt
cli
sahf
adc
loop
nop
scas
test
pop
mov
setge
pop
xchg
push
xor
lock
inc
jg
addr16
jnp
jmp
das
pusha
xchg
fsubl
addl
ss
je
or
imul
div
loopne
add
add
cmc
pop
sub
add
mov
mov
loope
sahf
mov
leave
push
cmp
imul
lahf
dec
lea
imul
mov
pop
push
inc
daa
sbb
xor
lea
minps
xlat
and
lds
fmul
mov
das
lcall
out
jp
aaa
push
xchg
fdivl
inc
sti
adc
inc
xchg
cs
xchg
dec
cmpsl
cmc
out
xchg
testl
dec
jns
push
sbbl
dec
int3
lods
lahf
leave
sub
out
sub
sub
xor
inc
xlat
gs
pushf
ja
lret
lods
and
mov
xchg
lods
pop
mov
cmp
push
and
ljmp
dec
xor
dec
cld
je
test
add
xchg
arpl
nop
pop
in
les
bound
jg
adc
out
add
addl
mov
inc
nop
inc
lahf
xrelease
jecxz
jl
shrb
xor
or
rol
gs
mov
dec
add
jo
subl
rcl
jno
das
xor
mov
mov
inc
adc
adc
sbb
sub
popl
out
add
in
push
pop
cmpsl
sahf
jecxz
sbb
push
xchg
adc
lock
cmp
movsb
test
out
inc
mov
repz
mov
jmp
fldenv
xor
addl
xor
sub
call
xor
sbb
icebp
sti
or
adc
push
and
out
cwtl
mov
sahf
rcrb
add
mov
test
push
lds
pop
dec
cmpsb
rcl
inc
add
enter
pop
push
movsb
add
mov
push
cmpsb
lret
cltd
or
xchg
mov
inc
pop
dec
fsubrs
sub
fldcw
mov
stos
adc
inc
pop
xchg
sub
mov
fisubrs
pop
mov
cmpsl
mov
push
inc
mov
push
jnp
dec
ret
jbe
cld
add
push
adc
test
stos
pop
pusha
or
inc
xor
and
mov
sub
xchg
pusha
push
jae
cmc
and
dec
jno
fisubrl
dec
enter
dec
lahf
adc
fmull
fs
mov
fwait
sbb
jbe
adc
outsb
inc
dec
jp
cmpsl
imul
mov
mov
jmp
mov
xchg
lock
inc
sub
push
jmp
adc
mov
mov
movsl
sbb
xor
pusha
cmp
sbb
jb
sub
ficoml
and
adc
cmp
fstpt
cmp
dec
int3
add
orl
loope
data16
popf
out
les
gs
mov
adcl
xchg
cs
push
cmc
dec
cmp
inc
insl
fsubrl
gs
jmp
mul
adc
loope
je
test
loopne
cmp
xor
push
sub
lcall
in
imul
andb
ljmp
jo
push
movsb
shlb
cmp
pop
xchg
lcall
data16
push
push
ljmp
fidivl
std
ret
in
inc
mov
sbb
xchg
shll
xchg
xchg
lods
push
in
sahf
in
ss
cli
in
push
lcall
movsb
mov
dec
test
mov
inc
arpl
xchg
dec
mov
mov
push
ret
insl
and
lds
xchg
popf
add
mov
pushf
mov
int3
mov
leave
sti
jl
lods
xchg
stos
and
or
add
loop
sbb
loope
in
jle
jmp
mov
push
xchg
dec
cmc
cltd
pushf
fstpl
dec
movsb
popf
ss
inc
or
sub
inc
int3
bound
cmp
inc
int3
pushf
jne
or
testl
dec
repz
or
lock
jmp
les
fnstenv
mov
sbb
or
mov
scas
loopne
fnstsw
cmp
sbb
xor
jno
dec
pop
add
sbb
test
pop
sub
fcoms
sub
xor
mov
mulb
xor
push
add
inc
ljmp
xchg
xchg
mov
icebp
popa
mov
adc
rcr
clc
popa
fadd
popa
sub
push
clc
aam
or
ss
adc
jbe
xor
xor
and
shll
repnz
imulb
enter
insl
not
xchg
mov
mov
fldcw
dec
or
jne
pop
mov
mov
xor
das
call
sub
mov
or
ss
pusha
movsl
in
adc
cmp
insb
mov
and
jo
mov
fidivs
sbb
jnp
xor
push
andl
add
sub
and
sub
cmp
add
xor
push
cli
aaa
mov
mov
loope
or
mov
sub
inc
mov
xlat
inc
ds
adc
jmp
stos
push
xor
pop
bound
add
or
outsl
mov
fisubs
jne
dec
cmpsl
xor
add
dec
roll
push
adc
jp
xor
adc
push
xchg
enter
inc
hlt
fcomps
dec
data16
jb
push
idiv
nop
nop
lcall
out
push
dec
addl
add
mov
popf
jmp
add
les
xchg
xor
mov
fcmovu
test
sbb
or
les
ds
in
pop
inc
or
and
inc
xor
mov
cmp
int3
jb
bnd
call
stos
aam
add
xchg
jmp
cli
and
xchg
out
test
jp
mov
mov
xchg
pop
pop
repnz
fs
mov
dec
mov
fs
ja
dec
fcomi
cmp
into
in
pushl
shrl
stos
xchg
push
les
jbe
mov
dec
std
inc
jecxz
inc
sbb
pop
add
add
sub
mov
arpl
lods
push
cmp
xlat
pop
xchg
adc
mov
cld
and
adcb
inc
ret
lods
clc
pusha
ret
pop
das
ret
sub
je
add
repnz
adc
lret
jle
jno
mov
and
shll
test
push
sbb
dec
or
sbb
mov
push
jge
ret
gs
loopne
jmp
cmc
inc
mov
add
aam
pop
lret
jne
or
adc
xchg
sar
loope
sahf
xchg
out
mov
mov
cld
insb
loope
lock
mov
push
lea
inc
daa
mov
xor
in
jge
scas
jp
sub
push
jp
out
sbb
sbb
in
mov
xchg
jp
jge
popf
icebp
stos
outsl
sub
daa
mov
lret
mov
mov
js
sbb
sbb
add
mov
stos
cltd
in
jnp
xor
add
das
loop
mov
enter
or
add
in
js
cmpsl
movsb
lods
dec
test
sbb
xchg
lods
daa
rorb
jbe
and
push
sarb
push
popa
shrl
xor
pop
or
xlat
push
cmp
add
push
sahf
push
and
sub
pop
insb
pop
cmp
push
out
inc
lock
mov
jg
add
mov
push
mov
insl
jae
sbb
les
enter
mov
cltd
mov
or
add
data16
es
dec
into
popf
xchg
inc
xchg
xor
jg
out
pop
ljmp
pop
push
imulb
roll
sbb
cltd
setl
js
xor
scas
jge
aas
mov
addr16
jne
mov
or
out
or
inc
jge
lea
push
sbbl
or
mov
lods
outsb
mov
imul
push
xchg
sbb
add
lock
iret
jne
shrl
add
xor
subb
cltd
cwtl
xor
aam
cmp
insl
pop
inc
das
repnz
sbb
inc
mov
fwait
adc
mov
ds
xor
hlt
push
mov
lcall
or
push
lock
push
pop
push
jmp
icebp
in
dec
mov
xor
dec
out
dec
mov
fldl
add
mov
jb
sub
addb
insb
arpl
dec
fisubs
cmp
inc
cmpl
subb
mov
sbb
push
roll
jnp
pop
xor
imul
dec
or
pop
gs
enterw
out
or
push
inc
inc
orl
rorl
sbb
cmp
pushf
out
push
mov
insl
out
fnstenv
lods
adc
xor
lock
xlat
inc
scas
jg
adc
adc
mov
pop
scas
xchg
rcrl
add
mov
cmp
mov
fsubrl
fs
lcall
add
test
scas
xchg
dec
inc
popf
jle
push
mov
pop
enter
xchg
dec
mov
mov
test
addb
loopne
stos
repnz
insb
add
rcrb
mov
inc
loope
int
sbb
rcl
jne
adc
hlt
out
fimull
insb
arpl
jecxz
dec
xchg
mov
dec
push
pop
ljmp
push
les
and
mov
dec
aaa
gs
xacquire
lcall
mov
pushf
arpl
jb
jnp
ret
or
and
sub
mov
adc
ds
loope
adc
aad
loopne
jmp
or
xor
jg
mov
fcoms
mov
push
mov
add
pop
fcmovne
push
dec
or
cwtl
loop
inc
jo
push
out
jne
pop
adc
nop
push
xlat
add
mov
push
pop
dec
paddb
lcall
fwait
hlt
fld
jle
out
loopne
sub
test
add
jl
add
fdivr
add
loope
fadds
loopne
insb
ret
pop
ds
push
test
lods
add
jbe
mov
cmc
xor
ss
sub
test
cmpsb
mov
and
pop
jbe
mov
out
jecxz
ja
inc
loope
cli
test
mov
out
mov
mov
push
xor
lea
bound
rdtsc
imul
sbbl
sahf
in
mov
sub
adc
or
stos
xor
jl
push
cmp
cwtl
xchg
rolb
cmp
lret
jecxz
sbb
ret
cmc
mov
dec
mov
xchg
mov
pop
xor
lods
add
adc
scas
pop
lcall
or
in
stos
in
xor
add
and
or
and
push
jl
jle
push
popw
mov
test
xor
fs
push
dec
in
enter
addb
inc
pop
xchg
or
imul
cmp
addr16
jne
mov
push
dec
cltd
push
jo
xor
push
dec
scas
ja
mov
pop
out
jg
lds
aam
mov
sbb
dec
jge
pop
push
pusha
push
jnp
loop
xor
arpl
hlt
cs
jbe
add
jp
enter
rcrb
adc
insb
sub
out
sub
sbb
push
ret
lock
sbb
repnz
frstor
jnp
lahf
imul
or
xorl
mov
jne
xor
sar
xor
jno
test
mov
push
and
jp
mov
cwtl
imul
out
xor
aas
popf
adc
xor
mov
sbb
out
cli
std
dec
sti
xchg
vrsqrtps
pop
nop
stc
lahf
and
jmp
add
or
lret
bound
dec
in
mov
je
push
lock
and
add
push
int3
mov
xchg
add
adc
xchg
add
ljmp
leave
loope
and
and
jnp
fistps
jno
and
mov
test
adc
lret
sbb
dec
enter
push
xchg
jp
mov
inc
insl
subb
push
sbb
and
xchg
aaa
lret
inc
dec
xor
pop
mov
jmp
xchg
data16
jecxz
lea
xchg
leave
and
dec
lods
xchg
lahf
sub
ret
xchg
xor
mov
sbb
cli
into
pusha
jge
aad
ja
js
jns
jecxz
popf
adc
xchg
pop
push
call
jno
jg
add
jmp
sahf
add
push
mov
or
mov
negl
add
aaa
inc
gs
xchg
gs
ret
fnsave
mov
sub
jl
ret
add
cmp
or
add
shlb
shll
sbb
test
sbb
js
insb
into
scas
jns
xchg
inc
or
push
add
or
loope
ja
cmp
popf
insl
xor
adc
and
mov
push
into
loopne
cmpsl
sub
adc
leave
dec
lahf
subl
stos
and
mov
jmp
xchg
das
and
std
cmp
jb
pushf
cmovns
inc
push
repnz
ss
das
dec
rorb
dec
lds
mov
push
nop
movsl
lcall
and
sbb
cmc
pop
pop
insb
cwtl
inc
adc
jle
add
loope
inc
mov
lret
out
out
lock
es
pop
negl
xchg
bound
sbb
and
jecxz
fwait
imul
movsb
cld
gs
insb
imul
rorl
mov
test
clc
fldcw
push
cltd
sub
les
cli
mov
cli
add
sbb
lock
fsubrl
ret
adc
jge
int
mov
test
leave
or
inc
clc
push
push
mov
or
ja
jge
lea
fidivs
out
xchg
mov
sti
sbbl
xchg
inc
pusha
mov
xor
popf
mov
sarb
test
adc
or
jbe
mov
fnstcw
dec
dec
cmp
data16
and
mov
jmp
insl
jmp
mull
jg
pop
sub
push
pusha
jle
into
pusha
shlb
mov
dec
std
testb
inc
xor
push
imull
mov
lcall
mov
jno
aas
roll
xchg
addr16
mov
js
mov
mov
out
mov
push
mov
push
sbb
xchg
push
xor
add
aaa
add
inc
jp
inc
ret
ror
loopne
jmp
das
sub
fcomp
adcl
xchg
add
test
sbb
xor
data16
mov
icebp
sti
nop
pusha
jae
or
sbbb
jmp
or
outsb
dec
sub
sub
mov
fwait
add
xor
or
xchg
dec
mov
cmp
xor
mov
xchg
test
push
mov
stos
sbb
mov
and
lret
mov
pushf
or
icebp
ret
sub
mov
testb
lret
cmpsb
outsl
mov
in
inc
daa
inc
pop
inc
adc
push
jno
xor
repnz
mov
lea
jmp
cmpsb
lods
rclb
mov
sbb
pop
aaa
sarl
inc
xor
add
mov
xchg
shl
xchg
gs
xchg
out
andl
sbb
arpl
push
filds
jns
das
fwait
add
test
cmc
sbb
sbb
fstl
aad
and
andl
inc
push
xor
adcl
sbb
dec
dec
inc
xor
jmp
xchg
lret
sub
stos
lcall
int3
and
mov
cltd
push
out
stc
cmp
xchg
pop
cwtl
push
or
sbb
or
icebp
xchg
sbb
pop
fists
insb
fsubs
sbb
jle
sbb
xor
jbe
sbb
or
pop
mov
jbe
mov
lock
out
fdivl
out
or
sbb
jnp
add
cmp
bound
ret
lahf
pop
push
sub
fldenv
ret
loop
xor
repz
push
arpl
aaa
xor
fwait
stos
add
roll
inc
jge
adc
sbb
sbb
dec
mov
stc
mov
jb
mulb
insl
pusha
addb
xchg
addl
jle
adc
xchg
in
and
adc
and
sarl
mov
xchg
inc
shll
loop
lds
repz
stos
pushf
and
and
cld
cmp
jmp
das
cld
inc
aaa
cli
jge,pn
xor
or
push
ror
jmp
mov
cmpsb
push
sahf
ret
test
pop
mov
negb
mov
pop
cmpsl
stos
fdivl
test
sahf
addb
adc
sub
adc
mov
outsb
lods
xchg
mov
aaa
daa
roll
jmp
fildl
mov
fs
push
lds
lret
xlat
add
es
dec
outsb
lahf
jg
dec
aaa
mov
and
enter
xchg
bound
jmp
push
jno
rcrb
pop
sub
push
fsub
push
sub
mov
ficoml
sbb
mov
jp
push
push
jbe
cli
xor
outsl
add
cmpsb
pop
dec
pop
mov
jl
add
test
stc
jno
iret
mov
ficompl
in
cwtl
negb
test
or
cwtl
imul
ret
push
test
cmc
out
std
pop
mov
data16
lahf
adc
mov
jae
xor
pop
jne
xor
jno
jg
in
push
cmp
lods
cld
and
nop
cmp
inc
rorb
shll
std
add
daa
lods
adc
cltd
or
mov
push
xchg
push
jbe
sub
mov
mov
in
cmpsb
cli
dec
sub
jno
insb
enter
jmp
jno
inc
xorb
add
lock
xlat
pop
mov
or
ret
xchg
pop
or
cmc
jmp
clc
sbb
sarl
pop
mov
enter
inc
sub
das
push
fbld
push
adc
adc
std
test
ficomps
jne
mov
cmp
stc
cmp
push
mov
cmc
push
jecxz
leave
in
xlat
adc
fildll
js
popf
adc
sub
pop
ret
push
clc
fsubrs
loopne
sbb
lds
fisubl
sbb
jbe
and
addb
sub
call
cmp
or
sbb
dec
sbb
and
loopne
sub
dec
shll
mov
hlt
add
cli
std
gs
dec
addb
push
xor
aaa
dec
repz
fnstsw
xchg
or
push
bound
lock
cmpsl
mov
clc
xchg
cmc
stos
roll
cltd
movsl
adc
xchg
out
xchg
xor
or
pop
and
out
mov
lods
adc
add
xchg
mov
pop
push
push
movsl
add
cmc
ficoml
fwait
lds
jns
in
mov
pushf
jecxz,pt
jnp
cmovne
inc
cmp
cmpsb
cli
dec
jae
pop
xchg
addr16
scas
or
add
mov
pop
dec
cvtps2pi
pop
pop
sub
fadds
in
int3
jle
loopne
mov
xlat
sbb
mov
sbb
data16
adc
cmp
xor
aas
rorb
sti
xchg
and
cmpsb
push
push
pop
out
lahf
sub
aaa
js
into
mov
jns
out
jmp
mov
mov
and
fwait
mov
pusha
std
push
movsl
gs
orl
daa
mov
xor
test
pop
sbb
xchg
ret
add
outsl
mov
mov
jbe
fs
sub
mov
ljmp
movsl
mov
mov
icebp
in
push
sahf
jle
out
fwait
dec
push
icebp
stc
call
mov
add
pop
pop
insl
fidivl
cmp
inc
or
xchg
add
xchg
push
shrb
cmp
add
push
lahf
jmp
mov
or
pushf
add
hlt
dec
lea
les
shl
inc
mov
dec
push
add
mov
sbb
xchg
mov
mov
ja
xchg
cmpsb
mov
cmpb
dec
out
popf
loope
pop
xor
adcl
xor
inc
pop
fisttps
mov
jne
inc
or
add
imul
pop
movsl
add
push
gs
inc
sti
lret
subb
mov
aam
lods
lret
test
sbb
xchg
ss
subl
push
ret
mov
cli
loopne
mov
inc
orb
dec
inc
or
int3
sbb
cwtl
sbb
lret
and
mov
sub
or
sub
jbe
xor
popa
push
push
cmc
fisttpll
sbb
push
gs
pop
xor
jno
int3
jle
mov
mov
fs
flds
pop
sub
pop
sub
add
push
dec
cmp
or
insl
sbb
jb
fs
sub
inc
test
mov
pop
js
or
xchg
xchg
lods
dec
mov
inc
popf
insb
ret
and
mov
and
incl
repz
mov
nop
jge
adcb
addb
mov
bound
cmc
push
and
mov
test
imul
das
addl
pushf
sbbb
mov
dec
insl
mov
fwait
lahf
sub
aaa
sbb
sbb
scas
push
mov
mov
movb
inc
xchg
sub
jge
mov
cmp
sub
xchg
push
call
idivl
mov
adc
jle
aaa
push
sbb
sub
dec
iret
mov
and
shll
cwtl
sbb
push
cltd
mov
sbb
adc
pop
scas
adc
cmpl
or
jne
mov
sbb
icebp
inc
loopne
lock
icebp
add
add
or
sbb
das
fdivs
push
push
inc
ja
mov
fidivs
stos
leave
je
push
or
out
out
aas
cwtl
stos
in
inc
stc
xchg
std
push
adc
jne
pop
in
mov
sub
push
rcll
sbb
outsl
test
andl
scas
xchg
xchg
repz
cmp
icebp
test
nop
mov
gs
inc
pmaxub
aas
xor
add
sbb
xor
rcl
add
sbb
mov
pop
add
or
test
sahf
loop
lcall
xorb
insb
nop
sbb
mov
scas
cmp
insl
fdivl
mov
add
pushf
insb
sub
jns
cmpsb
sbb
and
leave
shrl
test
lcall
push
pop
ja
or
sub
neg
and
js
jne
cmp
mov
sbb
sbb
lahf
ss
and
cmp
inc
inc
xchg
popa
pop
inc
jae
pop
push
loope
push
aaa
add
rcr
repnz
aas
mov
sbb
pop
push
shr
dec
dec
push
and
add
lret
xchg
or
mov
shll
jp
sbbb
dec
or
dec
les
sbb
cmp
mov
es
inc
cmpsb
dec
xchg
call
mov
mov
pop
xchg
in
dec
les
jle
test
xchg
sbb
inc
sti
xchg
add
ljmp
loopne
mov
popf
push
popa
fcmovu
sahf
add
pusha
rol
or
fcmovb
nop
jp
push
inc
dec
adc
pop
out
jbe
mov
inc
mov
pop
mov
cmpsl
dec
or
lods
pop
mov
mov
adc
add
movsl
lcall
push
sahf
jbe
out
dec
pop
or
das
cli
nop
sarb
sbb
pop
jbe
jo
movl
imul
add
pop
pop
mov
mov
xlat
xchg
jns
xchg
pop
xorl
sahf
fmul
cmp
gs
imull
xchg
cmp
in
and
adc
pop
test
mov
mov
sub
xchg
ret
cmp
dec
cmp
mov
mov
mov
stos
insb
add
sbb
sub
jle
inc
jno
das
leave
into
push
js
sbb
mov
sbb
mov
into
mov
arpl
mov
mov
enter
mov
xchg
test
xchg
outsb
iret
or
mov
xlat
addl
push
nop
aad
dec
lods
add
aad
dec
fidivrl
aaa
add
xor
pop
lret
mov
repnz
inc
rcrl
xchg
out
xor
bound
inc
movsb
push
and
popa
and
mov
dec
push
lock
mov
aas
push
lods
mov
mov
add
lock
sbb
decl
mov
cli
dec
xchg
orl
xor
int
aad
mov
sub
or
jne
mov
pop
mov
pop
sbb
inc
loope
xor
ret
in
sbb
roll
cmp
sbb
ss
leave
stos
pop
sub
cmp
push
pop
ds
lods
xchg
add
pop
mov
rol
lock
mov
ret
aas
lods
push
subb
orb
add
mov
mov
cs
sub
sbb
test
inc
ja
lcall
pop
or
sbb
xor
sub
xchg
call
cmp
lds
in
stos
ja
icebp
cli
mov
lret
inc
imul
mov
cwtl
jl
dec
xchg
fstl
add
addr16
xor
mov
dec
loope
cmpsl
jno
pop
pusha
sbb
test
fcomps
add
pusha
loope
sbb
pop
add
pop
pop
repnz
rorl
mov
mov
stos
scas
push
aam
add
inc
jp
xchg
push
pop
mov
add
sarl
push
xor
movsl
jg,pt
push
add
ret
inc
mov
ss
addl
pop
sbb
dec
iret
sahf
scas
add
mov
mov
fdivrl
or
jnp
inc
push
push
fidivrl
mov
inc
push
in
or
outsl
cmpl
pop
movl
aaa
cltd
sbb
stos
jno
push
std
imul
movsl
mov
mov
mov
adc
mov
imull
bound
out
in
ja
popa
je
or
push
push
cli
ljmp
xchg
mov
mov
popa
dec
sbb
nop
iret
addb
ret
jne
push
mov
mov
daa
scas
test
or
decb
sbb
pop
xor
sub
xor
gs
push
sub
xchg
add
out
xorl
sbb
mov
lahf
lea
pushf
es
aaa
outsl
loopne
sub
gs
cmpb
pushf
popf
and
push
or
jp
pop
repz
cmpl
dec
cli
mov
xor
jns
insb
jne
mov
test
cmc
push
gs
orb
xchg
jg
xchg
imul
inc
dec
push
dec
dec
xchg
sbb
hlt
push
cmpsb
stos
fs
mov
rol
pop
sbb
shll
dec
add
mov
mov
push
inc
sbb
int3
cmpsl
mov
jnp
loope
enter
cmp
sbb
mov
xchg
lods
loopne
push
jmp
sbb
mov
stc
cmp
jge
ret
in
icebp
cld
lods
mov
xchg
push
fsubl
dec
mov
pusha
dec
aaa
jae
insl
stos
int3
sbb
mov
ss
or
mov
sbb
dec
shlb
xchg
add
mov
mov
stos
lods
xchg
sbb
xorb
pop
hlt
cwtl
mov
or
aaa
sbb
add
or
gs
jne
cmp
les
sahf
push
mov
adc
lea
add
mov
xor
sbb
mov
jno
and
sub
push
or
out
bound
popa
ljmp
add
sub
shrl
enter
fsubl
fisttpll
cs
xchg
cmp
jge
inc
data16
test
xchg
mov
lretw
sbb
fwait
jmp
push
mov
sub
fwait
adc
pmulhw
inc
jbe
andl
push
addb
outsl
mov
int3
out
push
jo
pop
aam
sbb
loopne
sbb
push
dec
shlb
or
push
in
xchg
ss
sub
test
mov
orl
cld
pop
xchg
jle
out
stos
or
cmpsb
js
in
jbe
and
jp
int3
loope
add
dec
pushf
or
push
sbb
mov
xor
jae
test
xchg
inc
lods
test
add
mov
mul
push
add
std
outsb
inc
xor
test
mov
mov
xchg
icebp
mov
int3
mov
mov
mov
cmpsl
fmul
pusha
xor
scas
fmull
pop
jle
mov
jl
pop
lods
add
dec
mov
stos
xor
push
jnp
dec
mov
add
dec
inc
iret
sub
xorb
pop
into
dec
pop
inc
mov
test
mov
add
and
sahf
jl
mov
sub
xorb
js
jmp
sbb
dec
cld
push
test
ret
xchg
mov
xchg
inc
sbb
subb
or
inc
mov
filds
rorb
cmpsb
outsb
test
inc
popa
inc
push
sbb
dec
xchg
mov
mov
mov
aad
or
bound
sti
xchg
push
gs
xchg
jle
or
fmul
cs
push
add
inc
insl
subb
negl
mov
aaa
mov
das
sbb
orl
popa
pop
popa
fstp
sbbb
fmull
subb
sbb
sbb
push
push
popa
test
icebp
adc
mull
mov
xlat
sahf
call
lcall
popf
out
rcrl
push
pop
sub
leave
dec
shll
or
ljmp
and
dec
jle
and
inc
sbb
fistl
addr16
gs
stos
insb
mov
and
dec
push
sub
fs
xlat
push
pop
leave
aad
cmp
pop
fists
mov
mov
out
xor
iret
push
hlt
jmp
int3
pop
out
jo
scas
addr16
fwait
int3
je
push
dec
scas
jmp
out
jb
mov
movsb
les
xchg
daa
sub
pop
sbb
insb
mov
dec
jmp
fwait
and
dec
fisubl
es
std
movsl
icebp
or
cmp
scas
mov
push
cltd
out
add
test
mov
gs
addr16
push
jge
repz
sbb
loop
lock
adc
in
xor
popf
push
add
xchg
mov
add
or
int3
add
jecxz
inc
or
mov
dec
and
mov
xor
mov
imull
out
std
xchg
sub
xchg
lcall
jle
fnstsw
sar
cmp
push
ret
pop
pop
int3
adc
xchg
dec
leave
xor
sbb
push
inc
dec
lds
in
lcall
insl
dec
les
std
mov
xchg
jnp
test
pop
mov
dec
loop
mov
lock
outsl
adc
add
cmc
mov
jecxz
push
or
dec
cmp
testb
sbb
jmp
sub
and
pop
mov
pop
push
sbb
loop
adc
call
mov
inc
int3
enter
out
lcall
jns
aaa
cli
lret
loopne
dec
call
jb
xchg
add
hlt
cwtl
dec
jno
data16
pop
push
mov
inc
pop
cmp
insb
stos
nop
push
incb
repz
sub
inc
push
push
add
outsb
fs
jmp
aam
mov
cvtps2pi
repz
adc
lahf
mov
jg
das
pop
dec
dec
xchg
dec
ds
mov
pop
sbbl
aas
in
loopne
loopne
cmpsb
aam
faddp
mov
mov
hlt
imul
xor
fnsave
pop
push
out
xchg
jns
mov
mov
jns
fwait
pop
arpl
xchg
inc
add
add
packuswb
lahf
test
push
jbe
sbb
aas
pop
jecxz
sbb
cmpsb
movsl
call
mov
mov
cmp
pop
push
add
testb
mov
cmpsb
out
push
icebp
fidivl
cmp
aam
arpl
push
repz
outsl
into
inc
and
or
fnsave
rorl
addl
cwtl
stos
lcall
pusha
sub
out
imul
mov
adc
sub
xor
jl
loope
dec
mulb
sahf
fs
dec
lcall
dec
daa
cli
jl
sbb
nop
pop
push
add
sbb
sub
ret
cmc
in
xchg
dec
sbb
jg
cmp
sbb
gs
stc
adcb
mov
add
push
inc
or
movsl
mov
popa
repnz
jp
lahf
loope
cltd
out
inc
mov
enter
mov
cmp
jno
and
leave
or
stos
xchg
data16
mov
sub
mov
xchg
xor
xchg
adc
into
or
cli
nop
sahf
stc
pop
fdivrs
and
mov
sbb
ljmp
jp
xchg
in
push
out
xchg
add
sbb
test
xor
and
in
sbb
mov
icebp
ret
mov
push
andb
rol
aas
sbb
add
notb
dec
add
add
xchg
das
add
jl
ret
pop
cmp
push
fwait
mov
adc
js
cmp
dec
inc
int3
iret
scas
pop
mov
daa
mov
outsb
push
push
cmpsl
stos
cmp
pop
icebp
jecxz
in
jl
rcrl
push
js
add
test
mov
repnz
mov
push
cld
mov
jns
roll
push
jno
xchg
rorb
pop
inc
sbb
leave
dec
add
fadds
mov
cmp
add
cwtl
cmc
cltd
adc
enter
sub
add
pop
mov
sbb
test
push
mov
pop
mov
add
add
adc
mov
or
and
cli
sahf
inc
add
shll
push
sbb
push
cwtl
sub
mov
rorl
icebp
pop
add
sahf
rcrb
push
xchg
sbb
es
out
or
and
pop
jnp
cmpsl
lods
dec
mov
insb
pop
pop
sub
dec
jbe
and
lret
dec
mov
sbb
lahf
sub
leave
sbb
sbb
addr16
pusha
lods
dec
pop
int
shlb
test
fs
aad
inc
ljmp
sbb
fisubs
ds
lret
inc
scas
jnp
test
jae
fninit
icebp
orl
js
mov
mov
push
notl
rol
cltd
sbb
fimull
jl
xchg
push
add
and
lcall
cmpsb
xchg
rol
inc
inc
or
daa
mov
xchg
pop
mov
aam
add
cs
inc
fmuls
pop
sbb
pop
push
outsl
xor
cltd
mov
jl
repz
sbb
xor
push
fisttpl
int
rclb
mov
mov
addr16
lret
mov
loop
add
mov
mov
jge
movb
xor
inc
out
push
push
jl
faddp
es
mov
add
loope
xor
pop
sarl
imul
or
cmp
out
scas
addr16
sbb
and
sub
into
imul
dec
test
add
mov
cmp
mov
inc
and
outsl
or
mov
idiv
fldl
push
mov
inc
and
out
add
scas
sub
push
add
pop
dec
mov
or
and
sbb
cld
and
xchg
sbb
or
cmp
mov
pusha
ret
std
jge
jmp
test
mov
sbbb
sbb
pop
sub
inc
push
sbb
cmp
push
in
mov
les
xchg
lret
ds
pop
mov
adc
rcrl
repnz
stos
arpl
jmp
push
and
sahf
and
jne
mov
and
movsl
in
test
in
or
cmpsl
dec
xchg
fcoms
dec
pop
push
dec
sar
inc
sub
call
mov
nop
mov
out
mov
or
gs
mov
mov
pop
push
or
sti
push
andl
aas
inc
scas
push
dec
into
or
push
ret
nop
push
and
notb
aad
rorl
stc
repnz
inc
nop
insl
shrl
notb
shll
add
imul
adc
sub
jnp
loopne
sbb
pop
xchg
add
test
jecxz
in
xor
out
test
and
popf
pop
out
fadds
popl
ficomps
repz
stos
cmpsb
push
push
add
cld
loopne
xor
mov
jle
sbb
pop
mov
ret
jecxz
xchg
roll
leave
arpl
xor
push
mov
scas
mov
fwait
mov
shlb
gs
out
mov
mov
mov
mov
sarl
in
add
mov
jp
fistps
pushfw
insl
pop
dec
mov
add
or
and
or
loopne
cmpsb
inc
adc
mov
adc
sbbl
out
jbe
test
dec
cmpsb
rcll
fistpll
sbb
sub
pusha
mov
mov
lds
ljmp
in
or
in
adc
or
pop
xor
das
imul
aas
pop
xchg
sbbl
cmp
push
push
outsb
inc
push
shr
cwtl
push
sub
inc
push
xchg
sbb
imul
test
mov
jge
mov
sbb
inc
pop
cmpsl
pop
dec
push
mov
dec
dec
popaw
insb
adcl
sub
mov
mov
pop
shl
cld
popf
nop
inc
jnp
jbe
jmp
xor
lret
xchg
pop
inc
push
add
inc
push
mov
mov
clc
jg
or
adc
and
xorw
dec
shlb
popf
sahf
mov
stos
test
push
ficoml
mov
imul
xlat
stos
loope
dec
shl
xlat
add
xchg
dec
aam
and
jae
test
push
push
das
sub
lret
or
cli
aam
aas
sahf
or
sub
in
aam
xor
mov
insl
popf
mov
fs
mov
int
std
push
ja
test
push
orb
hlt
pop
mov
mov
mov
mov
jl
or
fs
push
movsl
jbe
dec
aad
sub
push
xchg
lock
cli
jo
lcall
dec
insl
and
xchg
sbb
mov
loop
sbbb
mov
sub
popa
push
mov
dec
ja
mov
jp
or
xor
aas
cmp
data16
jo
test
sub
dec
xor
xor
push
sbb
stos
push
add
dec
cmp
cmc
cmp
push
mov
dec
adc
jl
cmc
or
fidivrl
adc
test
shlb
cmp
cmp
jnp
cmp
xchg
insl
xor
or
stc
xlat
cmpsb
cmp
add
push
pop
rorb
sub
sbb
add
fcoml
jle
sub
jne
mov
enter
pop
frstor
fsubs
pop
push
pop
cs
rol
dec
aas
jbe
adc
cmpsb
roll
inc
cld
sub
int3
or
adc
mov
aam
dec
ja
lods
or
pop
jecxz
jne
cli
mov
push
ret
scas
fs
add
push
cmpsl
sbbl
xchg
jbe
adc
pop
insb
scas
jl
aam
je
and
cmp
ljmp
cmpsl
and
cli
pop
lcall
in
popa
sub
loope
jo
or
add
test
and
bound
popf
mov
jbe
or
jno
add
das
jae
xor
mov
movsb
fmull
pop
push
sub
add
gs
add
sbb
icebp
bound
dec
lods
mov
imul
fadd
push
sbb
dec
fs
fstpt
cli
jg
pop
iret
cmp
inc
mov
push
ss
loop
lcall
inc
sarb
xchg
and
or
jmp
add
mov
dec
mov
inc
ja
mov
lods
add
or
fdivl
mov
pop
les
addr16
mov
data16
inc
icebp
subl
add
data16
push
sbb
mov
or
pop
es
repz
sti
xchg
shrl
or
or
mov
mov
lock
adc
aad
les
int
std
adc
and
aam
mov
or
lret
dec
into
or
sarb
mov
xor
cmp
xchg
adcb
mov
pop
sbb
cld
fiadds
shrb
adc
add
sub
sbb
sub
mov
in
jbe
rcl
inc
or
adc
cli
cmp
add
insb
addl
lea
hlt
xchg
testb
jge
xchg
lcall
jo
cmp
mov
mov
gs
rcrl
jge
mov
fs
sbb
cwtl
sub
pop
cs
mov
cltd
sti
jl
push
insb
adc
inc
push
in
divb
mov
icebp
dec
sub
or
push
jb
cltd
icebp
arpl
adc
ret
js
ja
out
inc
push
sub
adc
mov
lock
mov
jae
roll
dec
fwait
ret
inc
jge
cmc
jg
xchg
scas
rolb
pushf
scas
jns
dec
icebp
add
into
gs
out
or
add
add
mov
std
mov
and
push
sbb
mov
xorb
pcmpeqw
test
cmp
daa
push
cli
jo
lods
inc
pushf
mov
out
dec
nop
mov
xor
jmp
jns
bound
mov
into
sahf
into
add
pop
lock
fsubrs
jle
stos
das
cmp
enter
enter
lret
dec
push
stc
sub
jl
xchg
mov
sub
sbb
movsl
inc
insb
jae
adc
add
andl
push
aaa
sub
mov
dec
std
aam
data16
cmc
sbb
cmp
pop
out
icebp
fwait
add
ret
push
push
clc
fisttpll
pusha
orb
mov
lret
sbb
pop
or
mov
jmp
xchg
xchg
add
mov
or
pop
mov
jno
aas
icebp
orl
mov
mov
sub
fs
cmp
clc
in
and
nop
cmp
fsubs
outsb
push
sbb
dec
mov
xor
lods
bound
sub
jbe
or
pop
sbb
test
loope
mov
or
mov
or
lods
mov
xchg
mov
fdivl
xor
stos
xchg
insb
loope
neg
cs
loopne
ljmp
sbb
ret
fdivp
mov
int3
inc
pop
popf
rorl
cltd
mov
or
mov
call
adc
add
scas
leave
out
inc
sbb
pusha
add
xor
inc
inc
adc
dec
mov
pop
rcrl
or
jnp
and
mov
and
adc
cmp
stos
mov
std
sti
gs
outsb
mov
adc
add
inc
sbb
aas
hlt
mov
mov
dec
cli
test
dec
sub
push
jg
sbb
ror
sar
mov
xchg
gs
outsb
lret
popa
sub
gs
push
mov
mov
jno
adc
fcomps
sbb
adcl
and
sbb
cli
cltd
dec
es
add
push
les
xchg
mov
aaa
xchg
add
outsb
xor
adc
pop
ficompl
stos
add
mov
fistpll
pop
loopne
cmc
xchg
or
mov
or
pushf
sub
fwait
jnp
arpl
mov
into
add
mov
fldl
test
sub
mov
and
inc
fisubrl
inc
dec
lret
dec
mov
sar
std
in
mov
mov
rolb
sub
pop
mov
pushf
dec
inc
pusha
adc
iret
and
inc
test
dec
jae
mov
fmull
xchg
mov
imul
les
xchg
popf
xcrypt-ecb
cmpsl
lret
push
sbbl
pop
mov
fcompl
lods
rorl
sbb
cmp
xchg
ss
les
rorb
movsl
add
push
ss
inc
mov
mov
jecxz
popa
scas
adc
or
dec
jle
mov
jns
mov
int
inc
ret
jle
sti
mov
movsl
mov
mov
pop
and
sub
sbb
ss
cmpsb
fldcw
daa
pop
das
ret
pop
es
pop
push
add
aas
mov
into
gs
scas
push
mov
jnp
test
add
adc
xchg
lea
fisttpl
inc
dec
pop
cmpsl
jge
add
adc
adc
mov
pop
push
adc
pusha
add
or
jne
ret
imul
push
or
fwait
dec
push
icebp
fsubrl
js
fdivr
bound
xchg
cmc
cmp
jne
sbb
das
nop
out
mov
jmp
roll
enter
add
lds
pop
adcb
sbb
bound
testb
aad
and
test
lret
push
mov
mov
int3
xor
lahf
lods
movl
xchg
test
cwtl
mov
adc
dec
or
mov
out
icebp
repz
mov
mov
cld
mov
gs
mov
cmpsb
inc
loope
jo
push
mov
int3
js
push
xchg
popf
pop
leave
or
lods
push
fidivs
es
push
nop
dec
inc
lds
mov
orb
add
push
movsl
int3
popf
pop
jnp
pop
mov
add
and
inc
cmpsb
out
das
mov
hlt
stos
sub
orl
imul
dec
enter
pop
cmpsl
inc
dec
cmp
jno
and
enter
add
adc
cli
stos
mov
lods
lods
int3
shlb
out
mov
jle
mov
in
sub
orb
sub
lret
dec
loopne
cmpsl
scas
pop
cmpsl
and
sbb
xlat
lea
stc
or
push
scas
and
dec
cmpsl
clc
fildl
jp
push
mov
fsts
cmc
fistps
in
xor
mov
test
xchg
jbe
lret
pop
cmp
stos
popa
pop
sti
sub
xor
xchg
movsb
sbb
sbb
mov
mov
bound
jno
je
inc
push
push
in
inc
cltd
faddp
mov
sbb
into
or
sbb
std
hlt
movsb
dec
push
sub
xor
shlb
xlat
dec
sbb
xor
dec
cmp
xor
ret
cmpsb
ljmp
mov
jmp
push
test
jl
xorl
mov
or
jge
push
aas
lahf
loope
mov
mov
lcall
add
mov
push
cld
pop
xorb
or
out
mov
roll
cld
outsl
xor
jg
subb
dec
aaa
fdivp
sbb
fildl
imul
push
scas
les
add
sti
imul
out
mov
add
push
sub
sbb
mov
aaa
sub
clc
or
adc
mov
xchg
ljmp
dec
or
insb
push
lahf
sub
sbb
int3
lcall
sbb
insl
mov
pop
lret
add
xlat
mov
ret
inc
jmp
push
and
add
sub
aas
fstps
lds
sub
inc
add
shll
lret
sti
or
cmp
imul
xchg
fnstenv
sub
in
popa
loopne
pop
pop
add
gs
mov
inc
movb
lock
int
aas
and
pop
int
cs
pop
lcall
xchg
xor
daa
sbb
sbb
add
pop
mov
mov
push
sub
movb
mov
lahf
scas
inc
outsl
pop
sbb
rorb
dec
or
repz
les
or
mov
jp
je
lods
xchg
push
sbb
sub
inc
jp
xor
call
xor
mov
push
cmp
test
test
cmp
lods
xchg
cmp
adc
push
pop
subb
inc
adc
jecxz
mov
add
and
ds
out
test
ss
cmp
stos
and
arpl
aad
dec
jle
or
enter
xor
test
jbe
insb
mov
sbb
gs
popl
and
pop
test
add
aaa
add
cli
ret
outsb
dec
lds
fisttps
add
push
dec
adc
mov
mov
bound
movsl
ficomps
jne
enter
jle
inc
xchg
aad
mov
nop
push
or
cwtl
pop
mov
xlat
iret
xchg
aam
int
add
test
repnz
cmp
adc
mov
repnz
dec
xor
dec
fiadds
pushf
loopne
add
xchg
and
jbe
fsubr
push
jmp
gs
subl
xlat
decl
int3
jge
pop
dec
xor
movsl
jnp
pop
sub
lds
insl
pop
jecxz
shlb
dec
mov
fiaddl
lahf
sbb
push
xor
or
adc
cmp
testl
fimull
cmp
or
lods
cwtl
and
push
insl
mov
xor
mov
mov
dec
aaa
dec
std
scas
inc
inc
inc
lahf
fmull
aas
js
rorl
loope
gs
adc
jecxz
data16
pop
jg
xor
xor
fiaddl
fdivrl
fisubrs
sbb
pop
or
mov
js
sub
push
xadd
cmp
lods
mov
push
adc
sub
mov
xchg
loop
xor
pop
test
fwait
stos
sbb
fistpl
out
mov
cmpsb
adc
dec
adc
test
inc
pop
add
pop
xor
pop
test
mov
xchg
fiaddl
daa
mov
jle
negb
pop
push
inc
in
xor
negl
dec
outsl
popa
loope
jmp
int
rcrb
dec
dec
jmp
jno
sbb
mov
into
push
cmc
or
add
inc
xor
repz
or
mov
gs
jmp
imul
jmp
out
push
dec
pop
fmuls
mov
cmpsb
adc
ja
mov
test
dec
dec
push
pusha
in
sub
dec
add
or
pop
out
push
ja
aaa
jl
xchg
push
insl
movsl
pop
dec
mov
arpl
mov
xchg
xor
stos
test
mov
xchg
ret
xchg
int3
inc
arpl
add
cmp
jg
jbe
dec
fwait
or
imul
test
outsb
test
mov
stos
lahf
xor
xchg
int3
and
leave
bound
inc
dec
jmp
pushl
push
dec
cmpsb
mov
mov
inc
add
fcoml
push
subl
in
xchg
in
inc
ss
js
add
out
push
lret
mov
adc
mov
lcall
or
shlb
and
lds
lea
icebp
push
ljmp
pop
icebp
jmp
int3
or
mov
dec
insl
push
into
lds
xchg
insb
pop
rcl
mov
or
jo
mov
enter
dec
imul
and
adc
pop
and
or
sub
xchg
mov
mov
stos
js
loopne
mov
xor
bound
xchg
insb
cli
or
test
mov
int
test
in
out
out
loope
addb
loopne
adc
fdivrl
divb
xor
jl
in
and
mov
mov
ret
adc
jg
rorb
popa
pop
lds
adc
push
push
inc
popa
xchg
cmpsb
lahf
jae
jge
jnp
popf
outsl
mov
dec
lods
bound
xchg
fwait
js
push
sbbl
jno
cld
xor
fstpt
sub
dec
pop
ljmp
iret
jns
mov
rolb
pop
data16
jno
nop
and
sbb
les
jecxz
dec
test
jle
inc
lcall
sbb
dec
xorb
dec
dec
pop
test
daa
inc
cld
jl
push
mov
xrelease
mov
std
ja
push
dec
cmp
jmp
inc
add
mov
pop
mov
mov
mov
jl
mov
clc
cs
or
test
shll
inc
imul
inc
jle
or
rol
dec
test
push
sub
push
dec
xchg
addr16
mov
sub
mov
xchg
bound
or
inc
sub
leave
jl
out
gs
adc
cmp
adc
dec
test
pop
pop
push
sbb
sbb
in
cld
fsub
mov
mov
adcl
clc
lret
mov
push
add
xor
jbe
jno
mov
inc
ss
dec
sub
or
fadds
and
xchg
dec
pop
add
jb
lcall
dec
pop
jle
and
cmp
pop
mov
sub
or
jmp
xchg
loopne
sbb
out
push
aad
cli
pop
or
add
lods
push
rolb
outsb
out
gs
sub
xchg
lock
and
lods
cmp
cmp
sahf
sar
jle
stos
push
sbb
xor
mov
test
dec
and
stos
pop
mov
out
lds
popf
mov
xchg
aas
cli
pop
sub
imul
es
pop
push
push
cwtl
andl
int3
mov
mov
jmp
aaa
sub
lret
movb
addb
sub
sbb
xchg
cmpsb
jnp
push
mov
icebp
inc
enter
jno
loop
mov
fnstsw
add
lret
lock
mov
and
gs
ficompl
loop
lahf
mov
xor
rcrb
es
bound
aaa
aad
cmc
fimull
or
sbb
xor
jae
les
sbb
jecxz
arpl
jmp
add
dec
addr16
aaa
xchg
mov
fdivrl
neg
icebp
call
sahf
add
leave
shlb
insb
sbb
xchg
cmp
pop
pop
in
mov
je
pop
leave
mov
inc
mov
mov
scas
icebp
and
cmp
inc
mov
or
popa
lds
mov
adc
in
ret
dec
inc
dec
lods
jge
pop
ja
jbe
out
pop
push
in
or
cmc
adcb
push
add
inc
lret
pop
out
pop
jns
mov
and
sbb
cmc
hlt
or
scas
stos
inc
pop
pop
sbb
sub
cmp
fistps
imul
loope
jo
jne
xor
cmpb
jmp
rcrb
and
mov
and
pop
addb
gs
loopne
stos
int
cmpsl
rorb
out
fsubrs
gs
mov
dec
lret
leave
xchg
out
out
mov
mov
or
push
out
ljmp
je
bound
xor
xchg
aam
pop
js
pop
in
or
int3
lahf
int3
push
stc
jno
insl
fdivr
lahf
dec
sbb
mov
cltd
cmpsb
push
mov
icebp
adcl
inc
rcll
out
shlb
lret
aas
test
bound
xchg
js
pop
sbb
lret
clc
cld
sahf
add
fisubrl
sbb
mov
test
inc
fisubrs
daa
daa
pop
insl
mov
repz
xchg
mov
add
addl
mov
push
arpl
pop
in
es
jg
jle
dec
fwait
into
leave
mov
into
adc
ret
scas
adc
sbb
mov
xchg
cltd
mov
rol
in
inc
cmc
cld
inc
sub
in
shll
mov
jae
xor
in
xchg
sbb
mov
pop
outsl
lret
mov
dec
xorl
push
ja
mov
xor
push
rcrl
cmp
je
addr16
push
test
mov
cmpsb
fs
inc
mov
imulb
add
aaa
faddl
sbb
push
jecxz
dec
mov
subb
stos
dec
and
jns
dec
scas
pop
push
sbb
icebp
je
add
sbb
fiadds
subl
push
movsb
sbb
cmp
pop
inc
pushf
push
xchg
xchg
adc
out
xchg
add
mov
add
xchg
xor
mov
pushf
sbb
stos
mov
push
pop
mov
rcrb
mov
inc
loopne
jno
jl
sbb
addr16
push
inc
mov
mov
inc
rcl
mov
sub
mov
dec
cmpsb
push
push
mov
xor
push
adcl
cld
out
addl
or
movsl
push
dec
xchg
add
add
push
sbb
push
sub
fdivl
sbb
fistps
mov
mov
and
add
into
mov
arpl
sbb
sbb
icebp
movntq
out
fisttpll
rcl
xchg
mov
das
insl
stos
or
stos
jb
mov
cwtl
sub
and
add
mov
mov
mov
vorpd
fstps
sbb
adc
add
xchg
stos
mov
push
cmp
lods
mov
xor
enter
gs
ret
mov
je
popa
subb
add
sub
cmp
xchg
int3
dec
fidivl
into
jg
scas
inc
cmp
sub
mov
inc
ffreep
sbb
pop
out
movsl
or
push
ret
inc
sub
out
rcll
inc
lea
mov
mov
loopne
dec
dec
imul
push
lods
cmpsb
add
lds
sbb
push
mov
int3
push
nop
mov
sahf
das
pop
adc
mov
mov
cli
pop
pop
xor
or
rolb
aas
loopne
cmpsb
loope
imul
bound
test
push
jecxz
push
ljmp
push
imul
daa
adcb
int3
add
arpl
sbb
repnz
push
mov
xor
cmc
ficoms
push
cmp
scas
adcb
or
or
mov
std
std
shll
roll
fistps
pusha
lahf
enter
cmc
push
test
push
mov
add
xlat
sbb
loopne
cmpsl
xchg
cmp
outsl
push
adc
sub
push
dec
and
rcr
push
fistps
mov
jl
jge
insb
out
out
xor
mov
xchg
stos
enter
nop
push
cli
std
jmp
loop
lahf
sahf
sub
cmpsb
push
push
xlat
mov
jne
fdiv
lcall
jl
xchg
mov
movl
idiv
ljmp
fcompl
jge
inc
push
loopne
push
or
mov
sbb
pop
add
in
loopne
or
mov
mov
orb
stos
gs
or
jno
stos
sub
adc
pop
fistpl
insb
and
jnp
mov
or
imul
push
xchg
ja
xor
sbb
cmpsb
dec
push
sub
negb
cmpsl
das
add
nop
push
insb
xchg
std
sbb
xor
inc
jbe
subb
mov
pop
mov
insl
mov
add
loop
or
pop
rol
cmp
mov
ficoml
push
xchg
adc
ljmp
js
cli
lret
push
sbb
push
enter
in
lahf
inc
scas
and
sahf
frstor
int3
stc
xor
push
push
adcl
scas
dec
xchg
ljmp
pop
insl
in
mov
aad
sbb
mov
mov
imul
cmpsb
sub
xchg
aaa
cltd
sbb
inc
inc
test
ja
int
call
push
mov
sbb
addr16
push
in
cmp
mov
sub
loop
xchg
mov
sbb
or
out
out
insb
xchg
loope
aad
xchg
push
jae
gs
fcompl
decb
fmull
pusha
sub
lret
pushf
adc
int3
ficomps
or
mov
pusha
adc
insb
pop
sbb
sub
fs
pop
and
mov
xor
fwait
and
out
adc
mov
repz
mov
out
aad
xchg
test
mov
sbb
dec
loopne
sbb
pop
add
andl
lods
pop
mov
sub
push
mov
mov
xchg
sbb
ret
scas
jecxz
mov
or
mov
ret
add
out
sbb
popa
pop
scas
lret
add
pop
xchg
in
dec
pushf
add
pop
orl
out
xor
mul
jne
or
in
out
xchg
xor
push
pop
cmpsl
push
icebp
fcomps
push
and
out
lds
movsl
mov
clc
xorl
dec
xchg
mov
sahf
mov
cmpb
mov
je
jbe
test
push
add
xor
dec
mov
leave
test
inc
pop
test
cmc
out
dec
call
mov
inc
icebp
pop
shll
fwait
rolb
cmp
sub
mov
mov
mov
mov
push
pop
mov
jbe
sbb
sbbb
aaa
mov
pmulhuw
sbb
pop
js
xchg
jne
insb
imul
test
jno
and
inc
xchg
pop
push
gs
outsb
shlb
cltd
add
jg
loopne
out
mov
out
loop
popf
add
xchg
push
ror
popf
or
es
mov
sub
add
push
dec
xchg
mov
xlat
jae
dec
jae
sub
popf
and
mov
ret
test
inc
xor
inc
sbb
sub
xchg
cwtl
mov
jo
xor
mov
jb
fwait
iret
cltd
rcl
flds
rclb
push
test
push
int
jle
jae
aam
fadds
movb
loop
movsl
call
pop
cmp
sbb
cmpsb
mov
lret
popa
push
xchg
sub
sahf
sbb
lahf
popf
ljmp
popl
xchg
add
loop
push
add
insb
dec
fcomps
fistpl
xlat
js
loope
or
xchg
outsl
imul
inc
push
mov
jg
jle
jbe
nop
movsl
nop
xchg
pop
test
imul
dec
cwtl
adcb
or
adc
sub
gs
mov
data16
and
push
sets
mov
sub
sbb
mov
mov
jns
subb
mov
push
mov
jb
popa
adc
push
adc
cmp
push
jno
gs
cmc
pop
das
sub
std
dec
js
lds
inc
loop
sbb
sub
sahf
sbb
cmpsl
xor
cmpb
dec
dec
aad
xchg
cmp
pop
add
jno
adc
xor
dec
mov
cwtl
jae
cmc
xchg
jb
push
stc
mov
lock
stc
mov
jmp
push
lret
sbb
sbb
adc
out
xor
divl
jecxz
mov
lret
or
pop
sbb
je
add
jnp
inc
stos
int3
lcall
clc
mov
es
push
lret
pop
jb
xchg
and
mov
add
shll
sbb
sbb
shr
incb
inc
cmc
pop
push
adc
cmpsl
lahf
test
es
mov
sub
insl
sahf
cwtl
cmpsl
rcrb
dec
inc
nop
lods
xchg
cmpsl
push
repnz
test
or
or
sub
xor
pushf
sbb
add
inc
int3
and
jne
fwait
repz
xchg
rcll
popa
push
orb
sbbb
mov
test
mov
jne
cli
cwtl
mov
popa
or
movb
test
and
in
or
imul
mov
lds
xlat
and
cltd
xchg
fdivrs
or
dec
in
adc
out
fadds
jns
outsb
or
mov
cmp
aam
loopne
movsl
inc
sbb
jne
js
xor
mov
pushf
xchg
push
ret
lods
aas
shrl
fidivrl
faddl
pop
enter
gs
jmp
dec
insl
lea
imul
loopne
dec
jns
fistl
and
ret
sub
test
repz
mov
sub
fimull
gs
insl
add
pushf
pop
int3
xor
adcl
in
les
mov
insl
inc
fcoml
data16
jg
pop
std
adcl
enter
dec
sbb
mov
push
fists
xor
or
sbb
jno
cltd
mov
cmpsb
shll
mov
xchg
xor
and
sbb
sarl
test
push
jno
xchg
out
rcrb
pop
mov
mov
jbe
or
sub
mov
test
adc
scas
mov
sub
cs
daa
sub
xor
mov
enter
fiadds
ds
add
sbb
pop
imul
fidivrl
into
xchg
sub
adc
jmp
and
inc
xorl
inc
scas
push
add
sub
xor
jle
mov
sti
mov
pop
jno
cmp
mov
and
fmull
pop
inc
push
sti
lret
sahf
jl
insb
inc
and
add
jmp
jae
fstl
fidivrl
dec
aas
outsb
mov
xchg
daa
pop
int
cmpsb
cld
sub
xor
test
icebp
sub
hlt
bound
das
inc
movsb
add
jno
lret
data16
sub
inc
dec
in
inc
fisubrl
jo
repz
pushf
fsubr
xchg
les
push
push
test
gs
adc
leave
test
lret
cmp
mov
lea
rorb
icebp
dec
sub
and
cmc
mov
add
pop
enter
sbb
pop
or
jnp
clc
cmp
out
inc
sbb
sub
orl
test
jbe
push
mov
ss
rol
mov
stc
push
cltd
aam
xchg
push
aas
push
adc
inc
cld
dec
shlb
cmpsb
cmc
jb
and
daa
pop
xchg
pop
repnz
stos
sbb
dec
or
ret
pop
adc
push
ficoms
adc
push
ficomps
xchg
jo
sub
and
fcompl
add
fsts
test
in
mov
inc
fsubrl
or
lret
cmp
push
add
insl
outsb
pop
imul
loope
arpl
bound
sbb
shlb
cli
scas
cltd
sub
inc
inc
adc
push
ret
cld
xchg
pop
pushf
inc
sbb
popf
and
inc
xchg
jno
mov
lcall
sti
dec
stos
fbstp
mov
addl
data16
test
sub
jns
out
stos
dec
shr
popa
fbld
mov
out
nop
pusha
xor
add
data16
xchg
test
xor
test
mov
jmp
insb
or
fnsave
popa
and
sti
cld
and
jg
out
mov
es
push
mov
shl
ret
faddl
pop
ljmp
adc
cmc
jp
daa
sub
cltd
jo
sbb
call
not
mov
scas
and
inc
sbb
out
notl
mov
sbb
mov
xchg
mov
gs
leave
pop
les
xor
imul
ret
mov
mov
imul
adc
adc
gs
js
nop
pop
or
and
sub
insb
push
jno
mov
push
stos
or
xchg
aad
mov
mov
ja
jl
dec
lods
mov
or
jmp
pop
cmp
sbb
in
mov
ret
and
addb
test
fbstp
jmp
outsb
or
test
dec
int3
imul
enter
in
pop
cmp
xchg
mov
sbb
or
push
lock
rcrl
xor
mov
cmpsl
adc
aas
and
push
xor
xchg
push
loop
mov
vorpd
sub
hlt
lds
add
ja
js
sub
push
or
clc
out
ja
xchg
enter
push
mov
sub
in
push
add
rcrb
xlat
mov
sbb
xor
mov
fsubs
stos
adc
nop
je
mov
xchg
sub
aaa
stos
leave
imul
pop
bound
pop
adc
pop
inc
sub
mov
mov
test
jne
add
ja
mov
pop
into
sbb
daa
xor
dec
popa
jp
movzbl
pop
adc
sub
and
push
ss
ret
icebp
cli
lock
mov
ds
cld
in
cmp
pop
repnz
pop
jo
cmp
jecxz
data16
js
repz
rorl
cmp
dec
dec
xchg
loope
xor
xchg
stc
adc
mov
pop
xor
jecxz
adcb
mov
lock
adc
pop
jle
ljmp
les
push
lock
or
int3
pop
dec
loop
lods
jle
pop
sbb
lret
cmc
scas
mov
add
add
jle
add
fs
and
mov
sahf
jno
inc
and
add
sbb
xlat
in
jle
icebp
addr16
jp
stos
fwait
mov
mov
xchg
and
inc
mov
outsb
out
adc
out
xchg
pop
add
pop
pop
int3
mov
lret
bound
pop
and
mov
add
jle
sahf
adc
or
out
test
and
sub
sbb
orl
inc
push
mov
movsl
mov
ret
data16
rcrb
or
mov
push
mov
jo
push
fwait
pop
insb
dec
int3
jno
inc
aad
push
lock
xchg
aaa
mov
push
fstpl
sbb
std
out
lret
rorb
ret
sti
pushf
push
cmp
fistpl
pop
push
nop
push
lcall
subb
jo
push
inc
mov
push
sbb
repnz
ret
in
mov
inc
jb
popa
sub
test
add
xor
cmpl
mov
sub
pop
push
addr16
scas
cmp
dec
lods
in
xchg
sbb
jns
repz
dec
pop
or
sahf
out
inc
sbb
ret
test
and
adc
orb
sbb
ficoml
addr16
popf
lahf
and
xchg
push
push
mov
sub
push
mov
in
xchg
in
xchg
sbb
lea
pop
xor
aad
xchg
les
sub
xchg
rcll
dec
xchg
xor
mov
mov
hlt
xor
test
sbb
mov
xchg
sbb
mov
jne
mov
jecxz
adc
addb
and
add
pop
mov
pop
ds
movsb
into
mov
dec
push
cmc
cmpl
and
mov
cld
cmc
inc
or
sub
mov
idivl
add
mov
sub
dec
lods
lcall
lds
imul
sub
mov
xchg
ljmp
cmp
dec
pop
jno
add
and
or
aad
inc
push
add
dec
test
jnp
and
push
leave
xor
lea
inc
arpl
push
test
sub
mov
sbb
xchg
cmp
dec
mov
xchg
and
daa
dec
cld
dec
pop
mov
out
dec
daa
es
test
mov
pushf
xor
lods
aad
in
inc
repnz
fstpt
xchg
add
jbe
test
push
sub
fdivp
xor
data16
sbb
jecxz
or
ss
out
add
add
fisttps
mov
mov
icebp
out
inc
cmp
inc
sub
and
pop
mov
popf
pusha
add
mov
outsl
std
jbe
fstl
test
shr
sbb
mov
daa
cmpsb
sub
shrl
mov
sub
inc
mov
dec
xchg
shll
or
dec
addb
aad
test
int3
or
mov
adc
xor
sbb
subl
inc
and
push
pop
mov
stos
das
jl
add
lods
inc
adc
ret
lock
xor
aam
lea
or
adc
cwtl
xor
daa
xchg
push
inc
xchg
rolb
hlt
sbb
or
scas
ret
and
das
and
dec
jbe
std
add
xchg
out
out
gs
icebp
stos
jo
sub
and
subl
notl
loop
loop
ljmp
icebp
mov
mov
leave
dec
push
popl
imul
pop
xchg
jge
imul
push
incl
popl
test
jl
movsb
or
mov
mov
leave
shll
inc
aam
sbbl
lret
out
jne
mov
out
push
jbe
fildll
std
in
push
or
add
imul
aaa
jne
rcrl
xchg
mov
rol
popa
sub
popa
pusha
dec
cltd
insb
mov
imul
dec
or
icebp
mov
sbb
js
ss
sbb
adc
push
sbb
sbb
divb
pop
test
enter
add
pop
adc
mov
insb
adc
xchg
push
lret
sbb
push
loopne
fistps
repnz
sbb
xchg
inc
push
jge
shlb
xchg
sbb
pushf
data16
dec
xor
mov
addl
mov
push
sub
adc
push
xor
xchg
ficomps
or
cmp
fnsave
push
insb
aaa
cmp
and
outsl
popl
or
jns
push
ret
pop
cli
pop
in
frstor
inc
and
pop
mov
bound
sub
mov
dec
andb
push
movsl
add
dec
addl
in
pusha
cld
pop
and
inc
add
jnp
cmp
pop
adcb
mov
testl
push
subl
push
and
adc
jns
adc
scas
sbb
jecxz
shrb
mov
and
adc
inc
lea
add
addl
inc
inc
push
mov
insl
mov
mov
pop
push
loope
push
enter
inc
or
xchg
js
lods
add
pop
inc
arpl
jl
sbb
fidivs
cmc
cltd
out
inc
loope
leave
shr
and
into
push
add
inc
push
out
test
mov
cmp
add
add
and
or
ficompl
jne
fisubs
or
sbb
pop
sub
dec
test
jne
pop
stos
mov
xchg
jnp
push
mov
ficomps
add
pop
mov
jno
mov
test
mul
pop
stc
mov
push
or
subb
negb
pop
stos
ret
cmp
jae
push
int3
mov
ss
sub
fisubrs
pop
repnz
inc
add
ljmp
cmc
adc
cmp
hlt
imul
cmp
push
sub
jno
popf
xor
jp
inc
test
jne
jge
sbb
ja
repnz
jns
push
inc
movsb
cwtl
xor
push
ret
test
in
xor
jnp
ret
scas
shrb
add
rolb
jne
xchg
outsb
sub
arpl
xor
push
pushf
push
imul
xchg
dec
bound
push
or
mov
cmp
cltd
xchg
mov
scas
cmc
inc
or
cmpsl
adcb
sub
mov
pop
or
nop
dec
xchg
frstor
pop
es
int
cmp
mov
or
pop
cmp
xor
sti
mov
push
repz
xorl
subl
jle
push
xlat
push
sarb
jmp
sub
mov
sbb
xchg
inc
loop
pushf
push
in
sbb
fadd
notb
cmpb
mov
lds
mov
mov
push
xchg
clc
add
or
inc
int3
jnp
mov
cmpsb
ss
mov
dec
add
fildll
ss
jne
pop
imul
fimull
dec
into
mov
lcall
mov
and
inc
ljmp
push
mov
loopne
dec
popf
xchg
jmp
inc
inc
cmpsb
jl
push
bound
arpl
ret
call
bndldx
lds
sbb
mov
mov
fs
filds
jecxz
lret
insb
icebp
int3
cmp
sbb
test
mov
or
ss
imul
xchg
push
fiaddl
jo
add
mov
fisubl
mov
mov
shrb
scas
std
ret
subl
xor
rorl
js
movsb
push
into
notb
jmp
loope
mov
sbb
fcoml
ss
jp
sub
es
push
out
and
and
fistpl
fld
sbb
push
iret
mov
or
and
adc
inc
inc
lret
test
stos
out
jo
stc
movsl
mov
adc
test
push
test
jl
push
cltd
mov
dec
xchg
fldl
push
mov
add
dec
xchg
add
ljmp
cltd
inc
mov
mov
addr16
fisubl
mov
mov
call
andl
mov
out
xchg
popa
mov
adc
enter
jle
lock
push
mov
popa
push
je
adcl
pusha
int
aam
lret
test
dec
mov
popf
push
or
fs
outsb
push
and
xlat
fists
stos
adc
push
mov
in
push
sub
test
out
std
or
sbb
pop
sbb
mov
sbbb
mov
andps
bound
test
mov
ja
push
or
nop
cmpsl
mov
add
dec
fadds
test
dec
cmpl
add
push
mov
inc
cmp
adc
out
xor
les
or
push
sbb
adc
icebp
mov
cmp
fldt
fsubl
mov
mov
inc
mov
cmpsl
fnsave
sub
rcl
ret
push
sbb
pop
push
pop
test
out
pop
imul
pop
mov
ffree
or
scas
pop
xchg
test
sbb
repz
pop
add
imul
or
push
out
mov
sub
movsl
in
in
push
test
or
jnp
loopne
adc
mov
xor
and
or
icebp
lods
data16
mov
mov
sbb
adc
add
ja
cmp
pop
mov
and
mov
dec
rolb
out
inc
addl
push
imul
lea
pop
mov
or
ret
lods
lsl
mov
pop
jb
addr16
jp
add
pop
push
lock
xchg
xor
fwait
mov
lret
mov
es
xor
pop
cmpb
push
jbe
push
and
lretw
ds
testl
adc
xchg
xchg
fisubs
jmp
jnp
ret
movsb
mov
add
in
mov
push
sub
inc
dec
mov
inc
push
push
inc
jnp
jne
xchg
dec
mov
jge
xchg
movsl
jbe
jae
das
cmpsb
fdivr
mov
mov
cld
xchg
lcall
enter
mov
add
cwtl
cli
mov
outsl
mov
pop
jge
pop
add
cld
pop
pusha
xchg
jge
rcrl
rolb
jne
addr16
push
mov
xchg
pop
mov
in
xchg
mov
imul
lahf
xor
jecxz
leave
cmp
mov
pop
pop
jecxz
and
adc
jne
clc
data16
xchg
popa
lock
daa
xor
aad
scas
js
push
fildl
xchg
pop
cmp
sbb
and
mov
xor
mov
mov
jg
mov
fwait
cmp
cmpsl
lods
xor
roll
fidivs
jmp
adc
inc
fs
int3
jp
add
mov
dec
aaa
sbb
dec
movsb
pop
sahf
fcoms
daa
std
jp
arpl
addb
sub
pop
pusha
dec
sub
mov
jnp
and
data16
ret
orl
add
lahf
in
cwtl
push
and
mov
or
arpl
cmp
mov
jg
inc
mov
in
mov
clc
bound
ret
lret
adc
dec
inc
cltd
dec
xor
xor
mov
out
in
aad
push
mov
into
test
cwtl
or
dec
jns
push
jae
cmp
scas
adc
inc
adc
or
pop
jbe
or
cmc
mov
lock
or
mov
jbe
add
xchg
mov
insb
inc
sti
lods
jp
jb
pop
inc
sbb
les
in
test
gs
fdivs
xlat
sbb
add
fs
movb
and
mov
test
xchg
pop
mov
pop
mov
xchg
pop
int
sbb
and
movsb
sbb
mov
push
push
adcl
jbe
add
std
dec
or
inc
pop
push
repz
imul
push
or
xor
xlat
rolb
add
pop
mov
iret
in
sbb
add
loop
pop
stc
fcmovnb
dec
es
push
ret
mov
lods
push
fucomip
jne
mov
arpl
mov
ss
popa
jbe
fst
rcll
ljmp
shrb
sbb
enter
push
push
fwait
data16
pop
fisttpll
fs
lahf
mov
xor
jnp
adc
out
scas
sbb
add
subl
aam
adc
adc
rolb
mov
inc
enter
xor
dec
adc
test
sbbl
sbb
fidivrl
inc
pusha
lret
add
push
sub
dec
inc
mov
pop
je
call
and
cmp
fwait
out
popf
scas
dec
mov
test
and
pop
mov
add
mov
dec
in
pop
sub
call
insl
mov
es
push
sub
mov
adc
rolb
sbb
in
fisubl
inc
roll
adc
mov
pop
dec
fsubl
pop
dec
add
es
push
and
insb
test
insl
cmp
mov
test
dec
pop
fidivrl
adc
les
push
imul
test
cmp
push
sbb
jbe
inc
loop
jne
or
lds
pop
into
pop
jle
lahf
push
push
adc
loop
sub
adc
or
cmp
out
xchg
dec
adc
gs
dec
lcall
inc
dec
pushf
mov
or
inc
jbe
cmc
arpl
mov
add
pop
push
cwtl
or
sbb
test
xor
mov
out
shl
push
in
int
shll
insb
add
hlt
xchg
enter
sub
faddp
push
hlt
shr
push
stc
add
inc
sbb
stos
ret
inc
jge
mov
das
inc
push
cmovp
xchg
aas
pop
stos
jge
push
jnp
aam
sbb
mov
in
jb
pushf
xchg
popf
push
add
lret
adc
dec
xchg
jno
cmp
add
or
lea
arpl
cmp
out
adc
divb
lods
cwtl
lea
mov
jns
sbb
stos
aas
pop
lods
push
call
test
popa
xchg
sub
add
inc
inc
mov
in
mov
cmpb
push
xor
leave
mov
movsb
shll
mov
out
arpl
push
pop
repnz
sbb
loop
add
test
jno
xor
addb
sub
test
push
mov
in
cmp
push
and
pop
in
or
roll
dec
xchg
sbb
adc
push
inc
xchg
test
addr16
mov
sub
js
push
stos
cmpb
pop
mov
fiaddl
lea
and
push
mov
data16
mov
scas
in
out
jae
pop
mov
out
rcl
loopne
fs
pop
loope
pop
outsl
aad
test
out
xor
jbe
fiaddl
pop
shll
mov
sbb
mov
inc
xchg
mov
cmp
sbb
and
dec
clc
mov
mov
mov
stos
imul
jmp
pop
sbb
dec
jbe
sbb
int3
push
imulb
mov
jno
mov
xchg
cmp
ror
jmp
imul
jmp
add
sbb
daa
pusha
cld
mov
sub
mov
and
pop
xchg
frstor
push
push
fsubrs
dec
cmc
in
addr16
out
push
repnz
sahf
or
inc
mov
orb
mov
loope
adc
fiadds
lds
pop
jle,pt
loopne
fimuls
sub
and
jbe
or
mov
ja
push
jmp
jno
fsubrl
mov
push
sbb
push
add
aam
fcomps
pop
sti
stc
xor
andl
mov
push
call
clc
xor
sbb
pop
pop
or
and
mov
hlt
push
outsl
mov
int3
dec
jecxz
incb
pushf
divb
dec
xor
sbb
jbe
enter
pop
icebp
rcrb
inc
or
push
daa
imul
add
jg
int3
mov
es
loop
dec
dec
jbe
loopne
lock
cltd
lds
jne
mov
xchg
cli
adcb
loope
or
dec
xor
lahf
dec
fstp
jnp
jle
lods
cmpsl
cmc
nopl
fsubl
aad
inc
jecxz
add
mov
mov
fmuls
pusha
inc
sbb
daa
mov
dec
sbb
jb
push
test
xor
cmpsb
imul
cmp
leave
js
mov
cmp
jg
mov
mov
lds
shrl
mov
orb
les
add
cmpsl
and
jecxz
dec
fs
icebp
rorl
sbb
cmp
ljmp
dec
repnz
mov
add
adc
add
into
movsb
pop
std
cmpsl
push
shlb
sbb
inc
dec
or
cltd
push
add
and
mov
cmc
mov
pop
pop
cltd
jl
sbb
pop
or
xor
movb
out
lret
arpl
ss
jno
out
xchg
lods
sbb
test
data16
std
stos
subb
loope
int3
cmp
xchg
loop
push
pop
aam
in
cmpsb
or
xor
rorl
push
lea
scas
loope
arpl
aaa
cli
push
popf
out
mov
cmp
push
mov
and
js
lcall
push
adc
shlb
cmp
imul
jp
clc
sbbb
add
lcall
adc
ret
add
and
lods
xor
sbb
mov
push
fs
test
pop
adc
mov
int3
das
pushf
xor
cld
xchg
inc
add
mov
faddl
mov
xchg
push
pop
int
fwait
mov
icebp
sarb
mov
or
rcrb
movsl
imul
not
sub
fs
jl
mov
or
icebp
mov
pop
stc
pop
sbb
in
xchg
pop
dec
sbb
cltd
mov
sub
lods
xchg
test
movsb
mov
cltd
mov
and
or
mov
sbb
cli
aad
dec
jl
ja
mov
stos
sbb
stc
in
or
xchg
filds
sbb
sbb
adc
in
addl
mov
jnp
pop
les
sub
loopne
add
addb
sub
pop
push
scas
mov
mov
xchg
jno
stos
and
sub
fstpt
sbb
leave
jmp
or
mul
mov
jmp
push
stos
outsb
xchg
add
arpl
add
pop
push
mov
xor
test
inc
push
or
add
in
inc
loop
cmpsb
jge
sti
push
add
sbb
lret
xchg
frstor
jnp
xor
lret
xlat
jle
xor
xor
sbb
mov
or
sahf
aas
pop
popa
pop
in
aad
fdivl
push
sub
push
dec
add
jecxz
adc
inc
movsl
xchg
fsub
push
sub
cmpsb
pop
stc
or
mov
jecxz
test
sub
push
sbb
pop
inc
pushf
add
mov
addl
addb
test
mov
push
cmp
lcall
and
shlb
or
dec
int3
add
enterw
add
lea
and
inc
mov
mov
test
orb
repz
lods
push
jno
cvtps2pd
xchg
pop
or
pop
out
xor
shr
leave
push
mov
pop
inc
stos
lcall
test
loopne
sub
jge
idivb
push
mov
aaa
push
sahf
or
inc
xchg
dec
int
push
je
andw
adc
in
fldenvs
daa
pop
test
call
inc
xor
dec
enter
gs
ja
loope
and
cmp
or
xchg
mov
ja
movsl
cli
pop
mov
inc
jne
sbb
mov
insb
shll
fwait
mov
ret
icebp
out
in
andb
or
int
lds
pop
jge
in
flds
pop
and
fisttpl
mov
pop
or
popa
push
cli
sti
xchg
ds
pop
in
jno
xchg
push
push
jno
lock
jmp
je
push
jne
xorb
or
int3
sbb
sbb
push
daa
inc
or
sbb
xor
adc
ds
push
dec
mov
dec
lds
out
xchg
xor
push
mov
push
lret
add
ror
add
in
mov
or
adc
jecxz
xlat
mov
sbb
dec
jg
mov
push
cmc
mov
inc
mov
or
jl
pusha
mov
jnp
xor
pop
jecxz
and
je
gs
sub
cli
push
or
test
enter
gs
popf
scas
andl
adc
fistpl
mov
vorps
insb
pop
rcrb
int3
pusha
push
pop
flds
stos
dec
mov
xor
pushf
sbb
movsb
or
xchg
repnz
add
test
adc
fwait
or
push
xchg
inc
jns
dec
fcoms
push
inc
ret
inc
push
mov
lds
or
or
mov
push
push
mov
jnp
ficoml
jmp
js
int3
repnz
sbb
lock
lahf
or
lcall
lock
mov
out
mov
lcall
xchg
jbe
cmp
dec
adc
pop
mov
dec
loop
inc
sbb
popf
ljmp
and
scas
pop
sbb
sub
add
sbb
jp
insl
add
sbb
xor
sbb
sub
mov
fnsave
je
ret
mov
jae
cmp
push
std
mov
mov
and
test
add
test
icebp
and
pop
cs
or
in
jb
sub
adc
test
rolb
mov
dec
pushf
iret
add
push
mov
popa
inc
dec
pop
iret
cli
fnstcw
mov
shll
mov
or
lret
push
or
loop
xchg
xchg
fisubrs
in
int
sti
jo
push
in
sbb
add
push
jae
into
adc
data16
test
cmp
sbb
stos
sahf
xor
add
data16
aad
sbb
mov
jle
sbbl
mov
fwait
sbb
push
mov
rcll
adc
out
fildl
or
outsb
mulb
aaa
cmp
int3
cmpsb
mov
cltd
pop
mov
mov
insb
inc
ja
push
fldenv
adc
ds
dec
imul
add
icebp
es
mov
mov
iret
cmpsb
add
or
mov
mov
sbb
je
movsb
lods
imull
addl
sbbl
pop
lcall
push
hlt
sar
in
data16
fnsave
push
insb
jecxz
out
in
movl
or
lret
pop
fnstcw
das
leave
xchg
test
iret
xlat
mov
mov
mov
sub
pop
mov
lcall
test
pop
gs
outsl
mov
mov
bound
mov
push
mov
popa
testb
xchg
into
fstps
ljmp
arpl
mov
inc
push
jbe
sbb
test
lea
pop
stos
mov
pop
push
shrl
aas
addr16
adc
cs
pop
inc
sahf
pop
sbb
loopne
push
inc
inc
loop
sbbb
fiaddl
arpl
mov
sbbb
fsub
jle
mov
mov
testb
insl
jnp
ror
stos
push
mov
out
cmp
or
aam
repnz
stc
imul
loop
scas
xchg
adc
out
pop
mov
push
jmp
ss
in
addl
les
mov
jae
adc
xor
jne
xor
into
icebp
sbb
sbb
jno
and
mov
dec
out
mov
mov
icebp
xor
jle
mov
jmp
push
popf
cmp
sbb
jns
push
sbb
mov
es
mov
fnstenv
mov
sbbl
movsl
dec
pop
js
push
fwait
rcll
dec
and
cltd
or
pusha
xor
xchg
add
sbb
dec
pushf
leave
push
pop
pop
mov
dec
jno
or
xchg
stos
mov
xchg
jns
xorl
int3
cltd
enter
movsl
sti
leave
jge
out
dec
mov
or
sahf
addb
pusha
lea
cmp
test
mov
in
out
lcall
xchg
cmpsl
fists
les
mov
decb
push
sub
adc
pop
lret
jbe
leave
sbb
mov
or
dec
in
xchg
jne
movsl
push
sub
mov
mov
xor
cmc
sbb
xor
mov
repnz
pop
sbb
pop
stos
add
xor
jno,pt
int
popa
xchg
scas
in
mov
add
ljmp
sbb
aas
push
xorl
call
inc
mov
out
xlat
cmpb
cmpl
push
out
dec
inc
rcr
mov
mov
into
xchg
stos
and
sbb
or
push
inc
mov
add
ret
les
aam
jae
add
sbb
out
jne
push
fs
stos
sub
test
mov
mov
ja
cmc
sbb
push
in
adcb
imul
sub
jns
push
scas
imull
add
imul
iret
inc
dec
inc
testl
push
jae
add
in
cmpsl
data16
xor
popl
insb
das
ret
add
add
sbb
pusha
rclb
push
lds
das
sub
cwtl
push
outsb
outsb
fisttpll
gs
push
pop
fldcw
lea
int3
outsb
or
dec
call
fucom
jo
scas
lcall
add
push
leave
bound
cmpsb
or
mov
dec
cmp
stos
add
or
cmp
sbb
leave
and
inc
bnd
mov
leave
cld
xchg
mov
inc
cmpsb
clc
inc
imul
push
inc
sbb
mov
adc
and
add
inc
jecxz
test
sahf
or
jno
cmp
cmp
sbb
jl
loopne
jl
jle
pop
dec
mov
cmp
dec
lea
jmp
push
inc
adcb
xchg
add
pushl
cld
push
dec
ja
jp
andb
ss
jns
data16
js
mov
pop
push
inc
sub
dec
dec
mov
inc
xchg
mov
jge
add
adc
jne
jmp
mov
push
lcall
sbb
dec
pop
dec
gs
or
out
sbb
dec
or
gs
pop
stos
or
inc
push
jl
stos
iret
and
je
mov
arpl
mov
add
adc
or
adcb
cs
cmp
or
xor
mov
push
adc
lock
lret
ret
popf
lret
mov
cmc
dec
sbb
cld
pushl
cmpsb
aas
mov
dec
inc
and
test
imul
out
jbe
jnp
gs
or
cmpsb
daa
mov
jge
pushf
stos
sbb
not
enter
jne
sub
xor
mov
xor
push
or
or
mov
mov
lds
jno
lds
xchg
and
jmp
lahf
leave
adc
in
dec
gs
aaa
cmpb
gs
in
jmp
pop
pop
push
test
repz
and
fidivs
and
enter
lret
stos
dec
add
sti
sbb
jbe
cmp
inc
ret
sbb
pop
movsl
pop
das
push
pop
sbb
xor
mov
pop
andb
push
sbb
scas
pop
or
repnz
sbbb
add
sbb
lods
fs
mov
jmp
adc
sub
lea
outsl
mov
adcb
test
in
jmp
dec
loop
pusha
jno
test
jle
sbb
or
ret
rclb
or
pop
cld
movsl
sbb
dec
cli
xor
dec
jns
pop
push
pop
test
stc
ret
and
jae
sti
pop
or
lods
in
jno
adc
push
loope
lcall
ror
out
lds
push
push
mov
pop
sub
xchg
stos
sbb
pop
xchg
mov
loope
neg
xor
mov
jne
int3
push
inc
xchg
add
shrb
push
lock
fwait
test
push
sbb
es
ja
mov
mov
and
gs
aas
sbb
bound
xchg
cli
dec
sar
jl
cvtdq2ps
mov
pop
dec
push
inc
pop
and
orl
icebp
inc
or
subb
pop
loope
xor
ror
xchg
icebp
xchg
xor
add
push
and
inc
add
cld
lea
je
mov
lock
adc
add
push
inc
add
adc
xlat
fildl
test
cmp
mov
jmp
inc
sbb
jge
pusha
or
xor
out
jmp
pushf
test
mov
mov
sub
mov
mov
xor
jp
inc
inc
mov
popf
jle
or
rcl
clc
pop
mov
insb
cmp
mov
and
adc
sbb
mov
test
dec
dec
cmpsl
leave
in
sbb
cmp
sahf
hlt
shll
fadds
add
mov
mov
or
scas
mov
sbb
or
cmpsb
mov
inc
or
sahf
loop
dec
inc
mov
movsb
rcll
cs
mov
das
ret
sbb
int3
cmpsb
cmpsl
pop
and
push
sbb
push
mov
sbb
add
mov
inc
lcall
out
or
adcb
std
mov
push
jmp
or
xor
cmp
xchg
push
aam
push
fists
ljmp
mov
popf
cmc
inc
popa
cmc
out
sar
push
popa
adcb
jno
and
add
gs
mov
mov
mov
jae
pop
call
clc
push
cmp
data16
ret
xchg
rcll
push
loope
xor
out
xchg
insl
inc
xchg
lods
mov
pop
cmpsl
mov
pop
xchg
mov
mov
jns
dec
adc
mov
pop
jmp
test
xchg
and
in
adc
push
ret
cli
inc
lcall
shll
rcr
push
sbb
or
bnd
bound
test
insl
loopne
or
orl
pop
in
into
add
push
in
cltd
sub
sub
imul
rcrb
sbb
lret
fdivl
cmc
xchg
dec
xchg
mov
mov
mov
pop
xchg
add
mov
add
cmc
or
in
cmp
mov
adc
lds
fcomps
pop
jbe
mov
dec
jecxz
mov
in
push
dec
pushf
gs
jp
out
and
push
test
outsb
cmp
mov
pop
push
mov
loop
push
test
or
adc
loope
push
push
mov
dec
pop
loopne
js
push
leave
xchg
push
lods
xor
inc
lahf
xchg
push
cmp
push
sub
mov
adc
sbb
leave
loope
fiaddl
in
jmp
negl
stos
xchg
mov
sub
lret
lds
pop
or
cmp
nop
jne
sub
icebp
es
stos
in
cmpsb
xor
add
xlat
mov
jmp
call
push
mov
inc
sti
pusha
mov
cltd
sub
sub
shll
lcall
mov
push
sbb
sub
sti
sub
jbe
sub
mov
and
cmc
pushf
jge
aaa
jge
mov
sub
jmp
xchg
xchg
jns
push
mov
loopne
adc
add
mov
incb
in
xor
dec
pop
add
and
xor
or
add
lock
or
sub
cwtl
and
sub
or
lods
movsl
ss
pop
gs
fistpll
push
add
lods
push
lcall
loopne
leave
jb
mov
mov
loop
aam
mov
or
xchg
and
fstps
mov
lds
and
mov
mov
or
mov
lret
xchg
push
pop
loope
cmp
out
and
imul
into
icebp
cmp
mov
mov
lods
push
and
push
sub
push
adc
inc
leave
out
test
pop
cmpsl
mov
mov
sti
in
mov
subb
orl
add
adc
inc
mov
dec
cli
inc
add
inc
xchg
daa
in
mov
xchg
xor
repnz
lahf
mov
sbb
negl
dec
jne
xchg
mov
cmc
dec
call
dec
scas
jnp
cltd
pop
out
ja
ficompl
adc
inc
push
and
xchg
pop
sahf
inc
mov
mov
pop
pushf
cmc
fisttps
lea
outsl
sbb
stc
aad
stc
ret
cwtl
sub
arpl
dec
sub
sbb
inc
add
jno
imul
out
sbb
sbb
int3
adc
add
orl
mov
lret
sahf
call
in
loope
ss
es
pop
insl
mov
or
lcall
hlt
jl
jle
add
sbb
outsb
je
xchg
outsb
fcmovbe
outsl
cmpl
call
sahf
aaa
mov
add
adc
test
fimull
pop
jecxz
sbb
jbe
js
inc
mov
ficoml
dec
cmp
xorb
jno
jmp
add
mov
inc
movsb
dec
in
sbb
repz
repnz
ss
mov
pop
cld
and
or
add
and
lcall
gs
push
pusha
inc
cmpsb
enter
test
add
orl
pop
pop
gs
inc
loope
push
sahf
xchg
add
push
stos
add
orl
sbb
shll
and
insl
popf
or
out
addb
fcomps
repz
sub
fstl
cld
inc
test
shll
pushf
cmp
add
mov
test
mov
cld
add
add
xor
inc
inc
shrl
neg
ljmp
push
sub
out
in
add
cmp
stos
addr16
loope
mov
and
mov
adc
cmp
mov
outsl
inc
add
and
fwait
loopne
or
popf
xor
xchg
inc
dec
adc
inc
sbb
pop
jge
push
loopne
and
sbb
pop
dec
adc
outsl
mov
dec
xchg
pop
push
sub
mov
add
sbb
psubw
xor
test
out
xchg
shl
mov
int3
cltd
push
sub
dec
mov
pop
int3
jmp
push
pop
subb
push
pop
bsf
ret
sbb
mov
mov
pop
mov
jecxz
pop
les
ret
xor
cmc
pop
js
dec
cli
mov
pop
xchg
jp
hlt
lods
enter
mov
pop
outsb
or
repz
jb
jno
fwait
sti
cmpsl
push
jnp
test
mov
ljmp
add
test
sbbl
andb
sti
add
shl
sbb
mov
inc
add
scas
pop
mov
add
cli
jl
gs
jle
jbe
pop
sub
scas
push
pop
push
jnp
adc
pop
cld
sbbl
icebp
mov
push
clc
push
cmp
test
nop
mov
dec
stos
jmp
jno
stos
inc
cmp
push
pop
fcmovb
pop
test
jnp
das
subb
sbbl
mov
push
div
mov
leave
fiadds
xchg
repz
push
subb
fwait
mov
sub
cmpsl
nop
add
test
sbb
mov
mov
mov
push
push
push
lea
inc
push
sub
ret
clc
cmp
fdivp
pop
dec
les
mov
jns
repz
pop
fildl
xor
cmp
push
add
fisttps
orl
js
shll
pushf
add
sub
es
cmp
add
icebp
inc
and
mov
movsl
add
popl
and
mov
mov
sbb
pusha
dec
loope
popw
mov
xor
imul
and
add
pop
jle
pushf
aaa
and
fs
popf
dec
sarb
je
aam
popf
out
cmp
mov
push
sbb
insl
cltd
sbb
movsl
scas
jecxz
xor
ds
or
ss
add
and
jae
arpl
insb
pop
xchg
add
dec
adc
mov
test
adc
enter
test
xor
mov
pop
push
push
test
testl
imul
lcall
xchg
mov
xor
mov
aaa
mov
in
ljmp
ds
stos
pop
inc
js
jmp
mov
push
push
aaa
cltd
jbe
add
add
testl
fdivrs
adc
shr
add
mov
jne
sarl
pop
das
out
out
repnz
ja
cmp
inc
cmp
jne
incb
out
lret
popa
jmp
dec
and
lret
or
popa
add
and
fisubrl
ret
xor
aam
pop
data16
enter
push
cmp
popf
dec
ret
stc
or
out
sbb
rol
pop
mov
adc
sbbl
lcall
push
xor
shr
or
and
mov
int3
cmp
dec
jne
stos
lret
ficoml
nop
cmp
cwtl
loopw
push
fidivl
xor
push
add
loop
pushf
or
fwait
add
fs
andl
rolb
xorl
loopw
xchg
lock
jmp
iret
inc
shll
jge
push
or
loopne
sahf
aam
pop
or
mov
jne
and
dec
add
leave
mov
lret
and
and
push
adc
dec
or
aaa
jp
sbbb
pop
cmpsl
dec
mov
int
aaa
or
es
rolb
aad
insb
aad
sbbl
mov
or
pop
adc
mov
popf
fildll
add
jle
and
paddsw
rclb
jo
jge
and
cmc
inc
outsb
mov
test
push
aaa
test
or
imul
repz
or
cltd
inc
aas
jle
es
mov
std
and
jbe
stc
sbb
mov
or
add
orb
in
stos
xor
idivl
add
mov
subb
nop
movsl
mov
aad
jae
icebp
lds
dec
jmp
cmp
sbbl
popa
xor
push
jle
inc
mov
out
mov
and
loope
mov
or
xchg
jne
or
icebp
or
mov
cmpl
add
jne
mov
jno
inc
sbb
inc
int
data16
aaa
pop
mov
dec
xchg
decb
mov
es
cmpsb
pop
subb
or
xor
adc
mov
add
inc
lahf
pop
xor
jp
mov
lds
jb
nop
addr16
loope
jg
xor
sbb
mov
jmp
scas
xlat
xchg
mov
add
cmpsb
je
add
dec
in
and
jp
add
cmpsb
cli
mov
popf
cmp
or
xor
push
xor
and
stos
fs
dec
fisubs
xchg
sbb
testl
sbb
jnp
inc
mov
mov
push
mov
int3
sub
mov
push
add
cltd
scas
mov
adc
push
jg
pushf
add
mov
jne
stos
inc
dec
fs
push
pop
clc
loope
adc
sbb
push
imul
add
add
push
dec
cmp
mov
and
jge
xor
push
jecxz
int
insb
add
or
in
cltd
cmp
rcr
dec
jno
xchg
inc
fwait
arpl
pop
jg
outsb
movb
sbb
mov
arpl
gs
fistpll
fnstenv
cmpb
lods
cltd
sbb
add
gs
scas
push
cmp
push
inc
sbb
int3
dec
mov
cmpsl
push
js
gs
dec
ja
and
xor
hlt
das
and
cmp
jmp
out
lds
cwtl
mov
mov
stc
test
out
mov
lods
lcall
adc
test
popa
gs
xor
add
mov
xchg
jo
or
inc
dec
scas
adc
mov
rolb
icebp
pop
cmpsl
fxam
inc
push
inc
xchg
mov
dec
outsl
ja
sbb
std
or
inc
mov
xchg
shll
fs
pop
testl
das
or
inc
dec
or
xor
inc
mov
movsl
adc
sub
mov
fs
inc
mov
xor
inc
pop
fcmovnb
push
andl
inc
loope
pop
out
ljmp
cmc
cmpsl
sbb
or
jecxz
push
pushf
push
jbe
add
jne
stc
xchg
mov
mov
and
push
adc
fdivs
repz
add
or
mov
cld
and
or
aad
push
or
and
inc
or
mov
sub
daa
push
jns
scas
and
sbb
imul
xorb
sbb
das
and
dec
pushf
pop
mov
gs
js
pop
mov
addr16
jge
pusha
out
push
imul
jbe
in
xor
push
sti
cli
sbb
cmpsb
jne
fistpl
cmp
mov
rclb
lret
mov
iret
push
dec
in
cwtl
mov
lods
dec
xor
sub
sbb
push
out
pop
mov
or
add
jbe
and
or
test
sbb
call
pop
xchg
xchg
sbb
inc
push
fdivrs
pop
pop
sub
push
push
add
mov
xor
jmp
fidivrl
push
pop
in
sbb
inc
push
dec
in
mov
jns
dec
pop
movsl
or
mov
jne
lock
jle
jbe
sub
push
fisubs
xchg
push
dec
push
inc
inc
popf
add
in
sbb
pop
xchg
jo
jnp
jp
imul
and
into
test
sbb
mov
loop
push
fcompl
repz
push
add
mov
sub
cmp
pop
dec
std
pop
push
sbb
ret
cmc
xchg
das
mov
scas
test
scas
arpl
jmp
add
sub
ret
inc
mov
pop
push
add
xchg
xchg
out
stos
sub
sub
mov
pop
daa
pop
cvtps2pi
data16
mov
mov
icebp
cmpsb
addl
or
mov
fisubl
push
cmp
fidivl
outsb
aaa
lods
push
dec
mov
pushf
jge
andb
imul
and
and
cmp
test
inc
call
out
lret
aad
jmp
push
test
sbb
pop
or
sbb
xor
xchg
sbb
lods
xchg
push
add
sub
icebp
loopne
add
pop
push
sub
sahf
jl
sbb
pop
addb
adc
scas
fisttps
pusha
push
insb
inc
pop
and
rclb
mov
sbb
and
int3
lcall
mov
sbb
imul
das
lret
cmpsb
insb
mov
pop
push
sahf
cmpsb
xchg
push
cwtl
jnp
lods
popa
fs
and
inc
scas
sbb
fdivs
and
xor
or
lret
inc
xchg
mov
push
sbb
dec
mov
xchg
inc
push
push
push
pop
stos
inc
sbb
lret
xchg
xchg
add
sub
subl
fiaddl
ss
mov
pop
pop
push
test
sbb
flds
movsl
lret
or
add
into
sub
cmp
or
sub
add
clc
test
add
push
sbb
movsl
lea
cmp
aaa
jns
mov
mov
rolb
ret
ljmp
mov
mov
psllq
insl
sbb
insl
inc
ja
pushf
sbb
test
adc
imul
leave
icebp
aaa
cli
loopne
in
cmpsl
and
jbe
lret
fsubrs
je
mov
jg
sbb
sbb
mov
les
add
cwtl
ret
sbb
or
add
jne
and
test
pop
mov
jae
sub
lock
es
shrb
or
inc
xchg
pop
fcoms
or
cmp
or
adc
stos
dec
gs
fimull
add
je
adc
cmc
push
jne
mov
mov
xor
jmp
dec
and
or
sbb
mov
arpl
lret
xchg
dec
inc
pop
jne
out
and
and
rcll
cwtl
mov
mov
push
mov
xor
dec
gs
mov
stos
loop
aad
out
inc
scas
push
dec
mov
xchg
ret
das
pop
dec
pop
xchg
fidivrl
xchg
int3
pop
lahf
lods
mov
gs
sbb
adcl
push
pop
mov
sbb
std
mov
sahf
stc
ds
dec
sbb
jnp
adc
xchg
sbb
pop
scas
lret
mov
mov
test
test
in
popa
jg
sub
mov
push
dec
push
mov
pop
sub
gs
stos
adc
sahf
dec
push
aas
aam
xorb
xor
adc
mov
lcall
fcoml
imul
push
rorl
aas
sbb
cmc
or
and
popf
cmp
lods
in
dec
lahf
sbb
xor
in
je
aaa
leave
add
inc
mov
sahf
ret
test
sub
lret
sbb
jge
dec
cmp
pusha
out
add
aam
negb
sbb
dec
into
dec
dec
xchg
jne
lcall
daa
pop
inc
or
frstor
ret
mov
pminsw
idivb
inc
mov
fcoms
push
stc
or
int3
xchg
aaa
push
incl
xchg
inc
xor
fnstsw
sub
ret
rclb
mov
les
dec
sbb
mov
test
sub
push
roll
lds
xchg
cmpsb
mov
push
cmp
xor
push
add
sbb
lret
xor
cmc
insl
add
nop
and
popf
gs
push
cs
ljmp
add
loopne
aas
sub
or
div
dec
add
sbb
loopne
sarl
xorb
out
aas
lds
jp
adc
fldt
int
mov
and
lods
outsl
addr16
lock
inc
and
mov
adc
xor
xchg
cs
ret
sarb
sub
int
sub
xchg
cmp
adc
popf
mov
incl
sbb
and
xor
or
sbb
inc
nop
cltd
xlat
lock
or
sub
sarb
popf
mov
lods
dec
sbb
sub
stos
push
rcrl
repz
cmpsl
test
mov
js
xor
into
xor
xchg
add
ja
rolb
sub
add
jl
subb
fisttps
sbb
mov
push
subb
imul
mov
xor
aad
int
cmp
loop
and
mov
jmp
shrb
inc
push
les
fcoml
daa
subl
data16
xchg
scas
push
sub
cmpsl
and
fbld
out
mov
or
push
nop
bound
inc
mov
push
xchg
add
mov
jae
dec
push
mov
sti
push
call
loopne
sbb
in
or
mov
mov
sub
pushf
xchg
push
sbb
test
xchg
andb
mov
cltd
xor
lahf
ljmp
push
imul
sbb
les
outsb
repnz
cli
jl
jne
cmp
lea
sbb
inc
ret
inc
lock
adc
clc
das
xchg
es
test
mov
xchg
leave
in
int3
xor
and
or
test
sbb
push
xchg
gs
subl
test
mov
cmp
test
imul
aad
popa
test
gs
test
scas
pop
mov
sbb
inc
push
inc
data16
or
lods
test
push
lret
mov
shlb
add
fnstsw
fyl2x
sub
sbb
lods
dec
popf
push
push
adc
out
pop
fimull
outsb
pushf
add
xchg
and
orl
add
ja
xor
pop
cmpsb
std
inc
cmc
sbb
and
into
pop
jle
dec
inc
mov
jle
das
adc
cmp
jg
mov
loopne
adc
rorl
push
adcl
adc
sub
dec
mov
sbb
mov
add
fs
pop
lret
sahf
xchg
cmc
pop
andb
cmp
mov
jp
je
loopne
lret
pop
mov
addr16
inc
mov
jmp
and
fstpt
add
and
mov
faddl
aaa
inc
mov
cmp
out
pop
orl
lods
in
mov
cmp
adc
lods
test
in
mov
adc
lock
popa
clc
xor
and
int3
jnp
pop
jne
pop
and
testb
or
dec
sub
adcl
adc
jge
insl
mov
sbb
xor
in
pushf
outsb
fmulp
nop
psrad
lods
mul
mov
lea
test
adc
fstp
xorl
mov
jmp
lds
es
mov
fadds
jne
sbb
std
jecxz
in
mov
out
sub
test
or
mov
lcall
lods
sub
mov
fwait
roll
add
xchg
ds
ss
sahf
jo
push
push
test
add
nop
or
inc
push
outsb
insl
jmp
aas
fimull
rclb
inc
sub
lods
in
movsl
mov
bound
dec
jnp
jnp
orb
dec
push
ss
cs
aaa
loope
add
loope
pop
repnz
mov
and
cld
sub
mov
ret
insl
leave
or
adc
sub
or
rcr
jmp
xchg
jp
adc
andb
jnp
xor
imul
es
addb
in
dec
dec
xchg
out
xor
sub
lahf
mov
fyl2x
call
ljmp
dec
jp
inc
push
loopne
mov
pushf
icebp
or
add
dec
les
call
clc
mov
push
out
rcrl
aaa
mov
shll
out
cltd
mov
xchg
mov
test
jns
sbb
dec
sbb
xchg
mov
sub
jp
loope
aaa
rcll
pop
adc
pusha
jns
xchg
daa
mov
insb
push
push
pop
nop
nop
or
mov
xorb
lahf
out
cmc
sbb
or
xor
ret
ds
and
xor
and
mov
dec
mov
out
icebp
data16
push
subl
mov
dec
fistps
mov
add
ljmp
sbb
pop
cmp
int
cmpsb
sbb
xlat
ja
xor
xchg
ret
bound
jl
jns
in
pushf
gs
inc
cs
repnz
data16
test
ror
and
in
cli
je
sub
sbb
cmp
or
lods
dec
xchg
rclb
push
std
sar
xchg
dec
clc
icebp
addl
in
and
subb
outsl
mov
push
aam
jecxz
xlat
dec
add
jbe
and
inc
pop
into
dec
ljmp
in
cmpl
fcoml
test
sub
inc
jecxz
sbb
insb
cmpsb
dec
jnp
sbbb
mov
and
rol
fisttps
pop
inc
sbb
jmp
jne
mov
pop
std
adc
push
ljmp
and
add
inc
jmp
jns
add
sub
mov
orb
mov
mov
ret
lret
or
jge
push
mov
jl
sub
repz
add
adc
sbb
and
sbb
out
adc
mov
push
stc
subl
jne
pushf
dec
dec
push
test
in
push
cmp
fists
loopne
xlat
jns
jnp
mov
xchg
les
jp
and
adc
cltd
sub
push
pop
rorb
inc
or
in
mov
cwtl
into
sub
popf
cmpsl
and
mov
shl
or
cltd
adc
cli
xor
jl
dec
testl
push
fidivrl
cmp
mov
xor
fdiv
fmull
inc
add
cmp
outsb
cli
or
cmc
out
jmpw
add
push
leave
sub
jmp
mov
outsl
add
push
xchg
es
mov
add
xlat
adc
out
add
cmpsb
push
push
mov
sbb
mov
dec
jge
cmp
mov
addw
adc
das
jg
xchg
icebp
or
xor
inc
imul
pop
lock
cli
fs
lds
data16
pop
clc
dec
pop
pushf
push
push
xchg
mov
lcall
xchg
test
and
inc
sbb
sub
icebp
mov
inc
call
add
add
sahf
sti
bound
scas
add
inc
or
mov
popa
out
mov
fldt
into
jmp
mov
or
sub
roll
fucom
mov
int3
inc
sub
lods
loop
mov
inc
adc
add
inc
mov
pop
sbb
fdivrl
mov
adc
sub
mov
insb
add
mov
sbb
mov
loop
rolb
mov
aas
push
out
mov
xchg
inc
stc
aaa
adc
mov
dec
push
push
inc
cmp
aad
repnz
mov
lcall
and
jns
push
jmp
cmp
lock
pop
cmp
fdivp
gs
jmp
mov
push
sar
add
sbb
add
loope
inc
push
and
insb
ss
stos
xchg
cmc
femms
push
movsb
cmp
push
push
les
pop
adc
cs
in
jp
add
outsb
push
mov
xchg
test
sbb
ret
iret
dec
add
xlat
mov
mov
test
xchg
icebp
mov
dec
add
in
aad
lahf
test
or
jge
js
push
sbb
push
fmull
fstpt
add
or
pop
add
cmpsl
inc
loopne
lret
mov
jbe
dec
jmp
xor
stos
mov
cmp
js
ja
inc
pop
mov
inc
xchg
mov
and
repnz
pushf
mov
das
lea
add
sbb
frstor
push
add
mov
or
cmp
or
rcrb
int3
sbb
icebp
fiaddl
in
or
stos
jecxz
sahf
addl
dec
in
mov
mov
mov
aaa
mov
lods
xchg
xchg
push
cmpb
bound
mov
fmul
test
dec
add
rol
sbb
sbb
jb
stos
stos
cmc
mov
mov
add
xor
sbb
jno
push
xlat
iret
and
xor
daa
mov
ljmp
add
inc
movl
lahf
add
movsl
pop
sbb
movb
jl
dec
jp
popf
insb
sahf
cmpsb
mov
xor
push
int
inc
adc
pop
add
icebp
ja
pop
pop
test
or
xchg
xchg
xchg
xor
jbe
cmp
and
cmp
je
jne
add
test
in
add
scas
xchg
mov
jno
dec
cld
push
and
push
mov
or
inc
ds
mov
xor
sub
daa
int3
and
enter
xor
ret
jl
fmuls
xchg
sbb
sub
mov
mov
push
inc
leave
inc
jb
daa
jbe
cmpsb
sub
andl
jle
sub
xor
xor
std
lcall
mov
aad
mov
je
cmc
test
out
stc
sar
les
sti
mov
sub
int3
xchg
int3
cltd
jg
dec
xor
pop
or
scas
xchg
scas
shl
pop
in
jle
xchg
lcall
push
stos
in
int3
and
sbb
adcb
mov
xor
addl
xchg
sbb
adc
dec
out
sbb
gs
inc
ss
stos
jg
setg
or
or
adc
aaa
movsb
jp
push
cmp
mov
es
jl
xchg
cmpsb
jbe
insl
scas
lds
ret
popf
ljmp
rcr
mov
in
cli
sbb
push
cwtl
ss
add
repz
mov
push
lret
int
or
mov
stc
fs
sub
jl
adcl
stos
sbb
stos
push
nop
mov
mov
add
inc
and
ret
mov
pusha
sub
cltd
ror
test
jge
push
fwait
pop
subb
mov
dec
daa
sbb
dec
stos
dec
push
mov
inc
pop
cmc
sbb
add
gs
movsl
stos
xor
inc
inc
jnp
mov
sub
bound
xor
pushw
roll
loope
jmp
stos
lods
sub
adc
rorb
hlt
adc
bound
mov
push
jle
dec
cs
jg
and
dec
mov
cs
mov
and
mov
or
lock
in
add
lods
cmpsl
push
push
lret
test
xchg
push
test
pop
xlat
or
sbb
sub
adc
popf
xlat
cmc
rcrl
aaa
adc
add
xlat
xchg
dec
add
mov
sbb
stc
push
cmc
adc
dec
test
pop
popa
in
cmpsl
pop
imul
mov
outsb
sub
xor
rorb
shlb
les
and
push
sti
orl
add
or
mov
mov
jbe
ret
in
sbb
dec
andl
inc
faddl
pop
jne
xlat
shrl
test
fadds
add
xchg
aaa
addb
arpl
imul
xor
lcall
mov
push
fstps
xchg
add
pop
sub
jp
inc
jl
jp
clc
mov
cmpsl
push
pushf
pop
imul
push
lcall
xchg
pop
push
pusha
sbb
add
dec
push
dec
xor
and
repnz
je
sbb
lret
sbb
cmp
cmc
lods
xor
mov
cmp
rol
pusha
dec
not
imul
lcall
push
push
sub
mov
cmpsl
dec
push
cmp
push
jno
repnz
rclb
pop
insl
into
inc
mov
pop
mov
inc
xor
xchg
stos
fdivl
mov
pusha
mov
arpl
mov
out
inc
ds
repz
ljmp
and
add
and
xchg
sub
xor
jmp
dec
mov
shl
lahf
add
or
sub
pop
mov
repnz
mov
inc
jmp
jg
sbb
fdivrl
rcll
mov
pop
repz
lea
cmpsb
jecxz
popf
xor
fldcw
push
repnz
dec
cltd
jecxz
push
ror
inc
ds
loope
arpl
out
fwait
jbe
sub
pop
mov
or
scas
and
lsl
pop
push
pop
push
mov
add
test
orl
rcl
fisubl
xchg
nop
fs
ds
daa
xchg
lock
or
mov
lock
pop
in
and
shlb
insb
mov
popa
add
mul
or
pop
enter
xor
cmpsl
dec
sahf
mov
inc
xlat
les
stos
jnp
mov
jge
aas
stos
std
shl
loopne
arpl
test
bound
mov
dec
ja
inc
mov
sub
jbe
sub
mov
insl
gs
lcall
push
xchg
jp
cs
sbb
scas
mov
mov
test
adc
cli
push
xor
js
pop
push
sub
mov
push
mov
bound
and
ss
mov
out
aad
dec
pop
mov
fs
sbb
sbb
mov
es
add
into
mov
cmp
xor
cltd
sub
adcl
daa
loopne
xchg
mov
xchg
or
mov
cmp
add
push
mov
lds
mov
xor
jecxz
push
sub
sub
cmpsl
stos
mov
jae
mov
cmp
ds
add
inc
xor
iret
add
gs
lret
add
jecxz
jo
test
dec
jae
andb
enter
in
je
aaa
cs
or
xor
clc
fistpl
sarb
int
leave
sbb
or
sub
ss
xchg
outsl
ds
and
and
cld
push
test
mov
ss
and
mov
pushf
and
in
testb
and
sbb
sbb
subl
lcall
mov
inc
icebp
pop
jb
sahf
repnz
push
mov
cmp
cmc
cmpsl
hlt
pop
pop
mov
xor
lea
ja
daa
imul
cmpsl
mov
add
lcall
negl
mov
or
jno
sbb
test
jecxz
inc
jno
add
push
sbb
imul
fisubl
or
and
jae
push
leave
inc
loope
cmpsl
sbb
inc
imul
sbb
push
lret
push
ret
or
pop
imul
add
sti
movsb
xchg
imul
xor
les
xor
sbb
ljmp
mov
push
push
lock
clc
aam
enter
stos
aad
scas
cmp
loopne
mov
and
imul
stos
or
lds
imul
js
jbe
mov
mov
fisubs
and
scas
jp
pop
jmp
fcomps
stos
xchg
pusha
inc
xchg
mov
mov
cwtl
cld
dec
fwait
sbb
imul
stos
push
scas
call
mov
mov
inc
add
mov
imul
push
fsubrs
imull
dec
xchg
push
lds
xchg
dec
cmp
add
sbb
mov
or
data16
bound
lock
push
cmpb
repz
into
sub
mov
pop
cltd
mov
rclb
popa
sti
aaa
fnsave
andl
cmc
ret
pushf
mov
push
clc
daa
xchg
popf
outsb
cltd
and
popf
repnz
or
cmp
add
popa
or
mov
sbb
push
cltd
xchg
and
jge
mov
push
insb
pop
mov
pop
xchg
or
mov
loopne
int
sbb
popf
sbb
fldenv
mov
add
jbe
sahf
cltd
jmp
dec
pusha
cmp
fdivl
jne
repz
clc
mov
jbe
aam
dec
insb
pop
mov
ss
call
pop
cmpsb
les
lahf
test
incb
add
xor
inc
cmpl
mov
mov
shrb
lods
js
loope
pop
inc
mov
loop
mov
mov
dec
ljmp
test
inc
jne
lcall
mov
add
and
in
insl
cli
ss
xchg
std
scas
data16
mov
inc
xchg
jo
add
jge
sbb
movsb
std
jae
iret
mov
sub
add
insb
hlt
out
mov
pop
imul
test
inc
popa
data16
rol
add
push
fdivrl
lret
mov
ret
dec
mov
rol
pop
inc
mov
imul
add
add
pop
and
inc
or
icebp
jl
cmpsb
gs
daa
sarl
mov
mov
xorl
sub
mov
sbb
icebp
push
lea
repnz
xchg
mov
stc
hlt
mov
xchg
or
jmp
shlb
sahf
mov
cmp
out
popf
shll
fstp
mov
sbb
js
mov
sbb
aaa
mov
ret
inc
jg
aam
or
push
stc
jb
xor
int
negb
add
addr16
xchg
shl
mov
dec
xor
fwait
push
push
push
gs
pop
xchg
mov
fimull
fwait
aam
cmp
pop
jmp
cwtl
ret
enter
arpl
mov
andb
add
dec
xor
pop
jo
sbb
xor
cltd
jb
xor
pop
mov
adc
lock
or
dec
out
cmp
into
addb
ds
pusha
out
shlb
jl
add
pop
repnz
and
aam
subl
and
sti
push
aam
adc
int3
pop
sub
insb
repz
adc
mov
fiadds
sbb
xchg
mov
xchg
mov
into
gs
test
push
insl
xor
push
xlat
mov
sbb
testb
mov
clc
cs
addl
and
repnz
inc
push
sarl
cmpl
imul
sbb
stos
pop
cmp
jl
repnz
dec
sbb
jns
and
stc
pop
mov
stos
dec
jmp
or
cmp
pusha
sbb
push
push
pop
xchg
lcall
dec
add
inc
shlb
cpuid
push
addr16
sbb
test
movsl
add
aaa
pop
xor
xchg
scas
mov
add
push
mov
jmp
roll
stc
jo
mov
loope
lret
leave
dec
ljmp
fldl
cwtl
or
dec
popl
das
sub
sbb
fstps
and
sahf
add
sbb
dec
cmp
inc
sbb
adc
jl
lods
aas
out
sub
gs
and
ret
or
and
xor
push
mov
loopne
xchg
push
sbbl
int3
call
out
roll
testl
mov
push
subl
push
or
xchg
scas
xor
or
scas
push
xor
insb
pop
cli
inc
or
imul
and
dec
jge
mov
icebp
pop
cs
call
ja
hlt
push
negb
das
inc
push
es
aas
cmp
stos
push
or
aam
sbb
in
dec
jge
mov
test
mov
jnp
sbb
lcall
adc
mov
testb
and
mov
sbb
push
fists
and
nop
pop
mov
push
sbbl
add
xor
rcl
or
push
ja
sahf
or
lds
loop
pop
pop
sbb
in
add
aaa
repnz
call
negb
xor
adc
out
cwtl
aas
add
sarb
sbb
push
sbb
pusha
xchg
cmc
or
add
mov
mov
xchg
out
imul
inc
rol
pop
ret
pop
in
jne
xorl
push
add
jne
jg
push
push
stos
enter
sub
inc
add
or
cmpsl
jmp
stos
jmp
out
movsl
pushl
jns
cmp
ss
movb
mov
in
loop
jnp
pop
adc
or
jbe
not
mov
nop
mov
cs
cmc
bound
jne
out
or
or
scas
es
dec
rolb
lds
add
dec
add
push
lcall
xchg
xor
jg
addl
cmc
mov
mov
std
adc
jnp
add
mov
mov
popa
inc
inc
mov
sbb
mov
popa
nop
stos
push
ror
rorl
jge
pop
adc
inc
or
popa
sbb
fcoms
enter
in
jbe
push
xor
call
push
into
push
clc
mov
fadds
imul
cmp
inc
pop
cmp
sahf
add
jbe
icebp
enter
cmpsb
push
loope
stos
mov
insb
add
repz
sbb
sub
push
fildll
dec
or
xor
push
rol
or
mov
int3
sbb
mov
mov
pushf
push
fldcw
sbb
jbe
pop
and
pushfw
and
cld
xchg
add
lahf
and
sub
push
mov
pop
fsubrs
ja
xor
add
jmp
fnstenv
push
pop
ljmp
and
and
jle
pushf
push
push
and
lcall
jle
push
push
add
fwait
sub
sub
test
data16
cmovle
or
mov
rorl
add
sbb
sub
mov
or
sub
inc
int3
push
push
push
sbb
push
pop
push
mov
lock
test
lahf
mov
das
mov
dec
insl
push
sbbb
jg
sbb
cmp
xor
push
stos
arpl
mov
mov
mov
add
cmpsl
test
pushf
psrlq
add
in
sbb
dec
sub
loop
push
and
test
pop
sbb
add
mov
fldenv
dec
cmp
and
sub
into
or
xor
rcll
sub
inc
repz
cld
cmc
out
test
push
ficompl
cmpsb
jmp
mov
lods
pop
jo
dec
sub
mov
mov
int
sub
and
inc
fs
popa
in
mov
jecxz
test
in
into
xchg
mov
jnp
ss
popa
orl
dec
call
push
add
mov
repnz
push
or
jne
fisubrl
adc
jge
xchg
mov
sub
push
imul
push
xor
mov
mov
push
ljmp
dec
add
inc
add
outsb
mov
aaa
gs
push
xor
repnz
sub
add
jge
fidivrs
inc
lods
and
dec
sbb
adc
hlt
or
mov
xor
imul
and
in
lcall
shll
nop
ret
call
pop
sub
ret
lcall
popf
js
pop
cs
fsubl
rcrl
push
cltd
cli
fcmove
mov
mov
xor
imul
lds
xchg
sbb
jb
fdivrl
mov
push
pop
hlt
data16
jae
adc
scas
xchg
sarl
mov
lret
in
push
cmpsl
jnp
out
lods
xchg
sbb
jae
fs
data16
scas
push
mov
test
push
ficompl
jge
testl
lods
inc
test
daa
ret
enter
insb
xor
push
call
dec
push
push
hlt
inc
stos
add
push
pop
sub
loope
js
push
and
push
mov
lcall
xor
dec
mov
sbb
push
sub
pop
sub
jo
popa
mov
icebp
mov
mov
imul
outsl
mov
inc
pop
jbe
dec
imull
cmc
add
dec
data16
pop
sbb
lret
xor
inc
xor
mov
add
sub
xchg
and
adc
out
xchg
mov
and
push
or
je
and
out
xor
mov
ret
add
fbstp
lds
jns
div
cmp
dec
test
pop
jbe
mov
inc
pop
sub
inc
ret
aad
js
cmc
ja
xchg
cmp
bound
inc
jmp
push
mov
inc
stos
daa
dec
push
jno
sub
mov
ja
sbb
lock
sbb
lea
stos
nop
adcb
loope
mov
jp
sbb
cmp
and
fildl
leave
shll
icebp
loope
outsl
push
xchg
pop
idiv
push
adc
mov
rcrb
sahf
insl
inc
adc
mov
mov
rol
add
cmc
addl
mov
inc
jbe
mov
out
lret
jge
inc
fistps
push
rclb
fwait
and
repnz
pop
jmp
lahf
mov
pusha
cld
es
xchg
icebp
mov
mov
mov
shll
xor
xchg
dec
push
dec
cld
sbb
mov
dec
repz
sar
repz
pop
xorb
cmpsb
push
les
cmp
ds
mov
inc
cmpb
add
pop
stos
outsl
nop
inc
pop
xchg
add
mov
push
add
cmp
lods
push
es
dec
and
dec
push
pop
cmc
inc
push
pop
outsb
push
sbb
sbb
or
bound
jno
les
lods
pop
push
add
popf
push
push
cmpl
addr16
pop
outsb
test
inc
mov
dec
push
jnp
nop
push
mov
bnd
mov
push
adc
rol
ja
iret
jp
sbb
lods
inc
sub
inc
mov
popf
int
cmc
xor
je
xchg
mov
cmc
mov
or
pop
sub
jmp
dec
mov
popa
sahf
mov
stc
dec
pop
rcr
inc
mov
stos
jae
add
adcl
sahf
push
and
pushf
sbb
std
data16
or
cmpb
xchg
out
sub
into
cmp
out
xor
cld
push
dec
es
andb
outsb
scas
jno
fdivs
or
ljmp
and
test
cmp
jge
and
outsb
inc
xlat
add
ret
test
jmp
mov
imul
call
dec
rorb
divl
mov
mov
xchg
scas
sbb
mov
mov
sub
or
movsl
jmp
pushf
incb
sbb
add
and
push
sbb
adc
es
cmp
jmp
xchg
stos
xchg
mov
cmp
lcall
mov
lcall
push
pusha
xor
stos
add
mov
or
sbb
enter
sahf
addr16
push
js
add
in
shrl
push
and
dec
faddl
lods
shll
inc
xchg
pop
and
sahf
push
push
repnz
adcb
mov
mov
and
xchg
adcl
and
inc
int3
jp
xchg
adc
mov
imulb
shlb
dec
dec
cltd
or
xchg
jns
add
cmp
fwait
sbb
add
pop
mov
cmpsb
ret
jne
xor
or
and
dec
pop
icebp
push
fsubrl
into
mov
lock
sub
jbe
and
inc
xchg
popf
pop
push
add
mov
push
adcl
push
jnp
bound
sub
add
push
or
scas
fwait
cmpb
add
repz
mov
jns
mov
sbb
push
add
xor
hlt
xor
fwait
repz
stc
xchg
test
mov
gs
mov
sbb
or
inc
dec
xor
xchg
jno
adc
and
in
mov
popf
adc
cmc
jl
call
pop
or
inc
aas
inc
jae
and
cli
xchg
mov
push
push
and
ljmp
or
daa
add
cmp
inc
mov
dec
sbb
mov
mov
push
iret
pop
jb
sbb
js
add
fildl
jnp
stc
jo
jne
add
popf
cmp
xchg
jne
addr16
lods
add
sub
adc
xor
stos
jl
mov
add
dec
test
sti
and
jmp
mov
pop
jne
dec
push
add
sub
cmpsl
leave
lods
loope
ret
daa
in
sbb
xchg
ret
insb
dec
fidivrs
arpl
pop
fnstcw
in
fwait
pusha
jne
xchg
and
cmp
add
adc
or
test
mov
jge
popf
leave
mov
lahf
sbb
pop
les
jne
cli
mov
lds
and
xor
popf
cmpsb
movsb
in
fcmove
inc
mov
ljmp
xor
push
sbb
or
dec
add
mov
int3
rorl
repnz
cmp
das
seta
int3
jns
add
add
test
or
and
jecxz
shl
testb
dec
pusha
stc
jle
jbe
cltd
mov
hlt
xor
mov
data16
xchg
imull
ja
popl
sub
cs
mov
fadd
outsb
jge
in
inc
fidivs
inc
add
mov
jno
test
pop
subl
jle
inc
mov
jbe
adc
cmc
xorb
jp
imul
mov
scas
stos
int
fs
and
enter
data16
scas
fucomp
ficompl
xchg
or
je
data16
cmp
cmpsb
and
ds
pop
add
push
in
lea
cmp
insl
iret
cmpsl
int3
or
daa
sub
in
loopne
jae
xlat
clc
jne
or
lcall
mov
mov
xor
dec
test
decl
stos
jns
inc
roll
jl
and
jmp
sbb
xor
cltd
cmp
pop
adc
cmp
dec
sbb
movb
add
adc
pop
mov
mov
or
fimull
adc
mov
push
jecxz
sbb
mov
xlat
faddl
push
xchg
dec
jmp
lods
jo
shlb
dec
push
shlb
gs
leave
mov
inc
mov
adc
stos
test
add
out
outsb
mov
addr16
mov
inc
testb
push
lock
push
dec
dec
jb
lret
push
icebp
sarb
fadds
mov
or
push
pop
sbb
jns
iret
in
loop
data16
lea
push
popl
leave
mov
sub
sub
mov
adc
fsubrs
cmp
outsb
test
pop
or
rcrl
mov
pop
sub
arpl
je
data16
xchg
lods
or
maskmovq
imull
inc
xor
cmp
add
add
dec
xor
inc
and
xor
jl
in
mov
addr16
jne
lcall
xchg
jmp
push
pusha
and
push
cmpsb
xchg
and
pop
push
cmc
or
push
xor
xchg
pop
pop
divl
inc
and
sbb
cmp
dec
test
mov
lods
pop
sbb
testl
lcall
cmpsb
out
xchg
icebp
add
inc
lds
mov
orb
pop
test
jl
dec
int3
add
push
sub
pop
fndisi(8087
cmp
or
or
rclb
xlat
mov
push
cli
jle
jecxz
or
int3
or
sbb
hlt
lds
or
or
jmp
loope
add
inc
push
add
sbb
mov
das
fwait
lcall
bound
shl
stos
cmpsb
sbb
pop
test
mov
jnp
mov
sbb
jo
loope
int3
in
inc
es
mov
xrelease
mov
mov
xchg
mov
or
mov
das
sub
sbb
aas
in
fdivrs
dec
xor
test
or
cli
or
jle
js
testl
or
lcall
cltd
pop
sbb
jns
cmpsb
rcl
test
add
out
jp
pop
fcompl
add
iret
es
call
xor
push
mov
into
jns
scas
jae
jl
xor
les
push
add
ljmp
mul
mov
push
jne
es
xor
rclb
scas
pop
sub
sbb
push
dec
aas
inc
repz
push
iret
xchg
and
push
adc
xchg
inc
pop
push
fsubp
shlb
sbb
lods
jbe
sbb
mov
cltd
push
loop
gs
negb
pop
mov
ret
xor
std
mov
out
das
subl
dec
mov
adcl
arpl
insb
push
mov
mov
cmp
lea
roll
pop
cmp
loopne
sbb
push
sbb
test
scas
cmc
push
rolb
sbb
shrb
push
jg
stos
push
fs
fcom
subb
xor
or
mov
or
ret
fcompl
and
jmp
enter
sub
jmp
xchg
jbe
sub
or
and
dec
or
jg
popf
xchg
add
test
mov
xchg
mov
sub
popf
mov
adc
inc
sub
add
in
js
insb
inc
cmp
mov
and
divl
jl
pop
loop
frstor
dec
loope
inc
ljmp
pop
sbb
icebp
cmpsl
adc
pop
xor
lock
jl
pop
xchg
je
test
sbb
repnz
xchg
cmp
data16
fsubl
mov
ja
push
xchg
gs
loopne
and
arpl
adc
sbb
fldenv
inc
insb
push
sbb
stc
mov
mov
jecxz
addb
orl
clc
nop
or
in
push
into
imul
sbb
jo
nop
stos
cld
xchg
or
ror
add
dec
outsb
or
scas
dec
mov
push
xchg
inc
mov
cmpb
mov
inc
or
cmc
jmp
stc
sbb
cmp
xor
jne
sbb
cmpl
dec
sbb
lea
add
test
sbb
jb
loope
int3
call
mov
or
pusha
or
mull
out
sbbl
stos
idivl
cmpsl
rcrl
cmp
insl
cmc
inc
int3
imul
cs
or
sub
test
int
scas
repnz
and
inc
xchg
inc
mov
dec
add
fcoml
loopne
sbb
das
xor
pusha
movsl
rolb
cmpsb
xchg
sbb
insl
in
ljmp
mov
inc
jno
ljmp
roll
popa
dec
dec
rcrl
jns
stos
mov
push
jge
mov
data16
test
scas
push
inc
sub
jp
pusha
sub
fwait
shl
daa
pop
add
adc
rorl
popl
push
and
fistl
xchg
add
in
scas
int3
not
push
sbb
aas
cld
mov
mov
stos
insb
out
mov
ds
xor
roll
lock
mov
mov
jbe
test
push
and
sbb
sbb
rorl
ret
pop
fisttpl
shrl
fcmove
cmp
jp
sbb
in
imul
test
or
add
inc
shll
cmp
sbb
sub
icebp
mov
jae
pop
insb
mov
sti
pop
adc
outsl
sbb
insb
cs
cmpsl
repz
dec
xchg
lea
mov
sub
repz
loopne
cmpsl
adc
orb
sbb
pop
ret
adc
add
xchg
and
test
xchg
jbe
pop
mov
pusha
lock
cmc
sbb
insl
push
add
mov
imul
les
dec
jns
das
dec
cld
jl
in
dec
imul
das
aas
sub
push
in
pop
test
push
xor
adc
mov
sti
lods
inc
sbb
ret
push
add
scas
pop
or
jecxz
pop
add
add
jne
jnp
xor
jo
inc
mov
daa
mov
sub
pop
xor
test
jge
lret
sbb
and
mov
fisttpl
fistps
xor
push
xchg
jecxz
jns
mov
mov
inc
sbb
popf
mov
cltd
jmp
mov
mov
mulb
ja
and
mov
dec
movsb
movsb
push
jmp
out
push
subl
stos
lret
push
and
data16
mov
int
int3
adc
adc
dec
popf
lea
ja
jns
xor
and
pusha
pop
mov
mov
roll
push
add
sub
jmp
mov
mov
adc
fwait
xor
inc
std
lds
sti
roll
sub
or
popf
add
in
jno
inc
jns
icebp
jle
in
and
mov
adc
sbb
sar
pusha
lock
dec
jle
out
and
add
cvtps2pd
dec
push
sti
sti
icebp
imul
sub
mov
jae
inc
jmp
sbb
push
ficoms
movsb
inc
xchg
jnp
cmp
ror
test
dec
addl
pusha
lods
loope
cmp
sbb
dec
sarb
sarb
data16
jecxz
hlt
or
push
popf
jae
popa
pop
jp
push
sub
mov
add
mov
jmp
pop
mov
add
mov
cmp
jle
inc
maxps
bound
fs
and
lret
xlat
idivb
jne
dec
movsl
push
test
mov
push
xlat
or
mov
add
inc
push
dec
imul
loope
shrl
cmp
fsubl
mov
xlat
repz
dec
mov
sub
cmc
sbb
dec
dec
mov
dec
sub
pop
aaa
lock
in
mov
rolb
pop
rcrl
sbb
sub
push
movl
cmc
xchg
xchg
jecxz
inc
sbbb
xchg
inc
aaa
cmpsb
test
adcl
xchg
push
xor
and
les
and
sub
sbb
scas
inc
jnp
inc
outsb
rolb
loop
enter
orl
pop
xchg
repz
inc
adc
dec
xor
in
mov
or
add
mov
call
mov
add
fwait
xchg
mov
pop
dec
pop
xor
inc
bound
pusha
rcll
sub
dec
pop
pop
and
iret
scas
popf
push
mov
mov
xor
push
sbb
or
movl
vmaxpd
cmp
lret
and
loop
mov
or
sub
loopne
sub
xchg
gs
mov
xchg
push
in
cmc
sbb
add
das
lret
andb
push
insb
cltd
sbb
lods
xor
xchg
lock
cmp
mov
inc
ret
adc
jne
mov
sti
cwtl
mov
or
push
cmp
push
loope
dec
sahf
mov
mov
mov
adc
inc
movsb
cmpsl
in
testb
mov
rorl
out
and
jne
sub
shl
xchg
or
sub
cmp
inc
std
and
movsb
cmp
fwait
aas
scas
jle
cwtl
or
pop
mov
sbbl
adc
push
push
mov
negb
outsl
dec
cmpsb
dec
jge
mov
xchg
jp
cltd
pop
loope
inc
fwait
mov
pop
pop
insl
xchg
out
jmp
sbbl
mov
shl
inc
sahf
dec
addr16
sbb
loope
cmc
sti
cmpsb
sub
push
data16
out
mov
xchg
stos
push
test
inc
and
inc
sbb
idivb
push
add
xlat
nop
mov
mov
iret
adcb
add
test
mov
cmpsl
cmp
mov
fnstenv
pusha
jo
inc
jmp
cli
daa
fmuls
in
orl
jmp
and
jae
orb
xchg
das
sub
xor
ret
xchg
int3
or
out
or
dec
in
sbb
mov
xor
adc
das
sbb
jne
and
or
movsl
icebp
arpl
push
dec
shrl
in
inc
push
out
cmpsb
in
and
push
mov
cmpb
lret
and
dec
test
jns
popf
ds
adc
or
mov
pop
loop
sbb
popa
cmpsl
cmp
ret
sbbl
lods
pop
or
pop
jl
icebp
stos
cmp
push
mov
lret
jge
dec
enter
aaa
cltd
cltd
stc
push
dec
xchg
pusha
mov
mov
or
lret
out
cmc
or
fwait
dec
notb
cmpsb
add
clc
mov
mov
mov
sbb
and
aam
pop
pop
add
mov
andb
sbb
scas
popf
mov
out
rcr
data16
push
ja
push
pushf
push
add
xor
scas
mov
inc
icebp
inc
pop
jmp
std
hlt
mov
icebp
icebp
push
inc
mov
subb
std
mulb
cmp
cmc
push
xor
xchg
add
sbb
jb
rcrb
shr
ds
in
or
les
sbb
insb
pop
sub
add
rcrl
add
fidivrl
aad
xchg
mov
jnp
add
sbb
aas
cltd
loope
pop
cmp
lods
shll
pushf
add
or
sub
mov
loopne
sub
inc
mov
dec
jge
jmp
addr16
inc
orb
negb
pop
faddl
subb
mov
or
popa
mov
pop
jp
inc
mov
jecxz
xchg
inc
mov
pop
jnp
gs
cmpsb
int
scas
sbb
lret
add
and
mov
and
pop
sbb
ret
or
test
lret
das
cmp
idiv
push
jne
sub
mov
xchg
sahf
sbb
bound
xor
xor
daa
pop
or
pop
pop
loopne
rcrb
jl
loope
cwtl
ficoms
xchg
add
ja
and
add
dec
mov
mov
aad
fsubl
add
sbb
gs
shll
pop
inc
popa
push
dec
mov
std
xorl
testb
icebp
lds
mov
xor
inc
add
pop
nop
mov
sub
mov
pop
cmc
data16
aas
shr
loopne
lret
jno
xor
cmp
lods
nop
push
xor
and
cwtl
sbb
out
sub
test
pop
lock
es
sbb
pop
dec
cmp
sub
pop
mov
sbb
dec
pop
sbb
cmc
ss
pop
sbb
cmp
mov
xchg
fnstcw
sub
rcl
jmp
or
sahf
fwait
addr16
xor
mov
jo
loope
notl
xorb
ret
imul
es
push
mov
inc
es
add
cmpsb
lock
notb
adcb
add
in
jno
sub
pushf
push
sub
xchg
into
repz
sbb
adc
sbb
lret
mov
out
loopne
xchg
lds
and
push
outsb
jnp
dec
push
aaa
add
test
inc
push
add
dec
and
push
nop
ljmp
add
cmpsl
mov
test
in
jp
mov
add
shrb
int3
out
sbb
pop
and
mov
daa
lods
xorl
sub
outsl
in
or
xchg
dec
add
rcll
loope
xor
mov
mov
add
and
in
dec
cld
into
bound
pusha
mov
jmp
or
imul
daa
ds
xchg
inc
or
out
aam
dec
rorl
and
inc
cmpb
cmpsb
adc
test
pop
fcoml
int
ds
or
nop
test
lret
fstpl
ficoml
xchg
and
pop
xor
aas
xor
pop
out
xor
hlt
mov
out
jle
shr
push
and
mov
test
mov
push
repz
cmp
jo
mov
add
push
mov
pop
fs
jns
cs
or
enter
push
in
in
mov
ljmp
adc
xchg
sbb
adc
enter
in
out
xlat
es
rorb
movsl
nop
inc
loopne
cmpb
inc
sub
inc
in
pop
test
cmpb
cmpl
cmp
shll
push
sahf
xchg
mov
psrld
adc
repz
shl
pop
dec
sbb
jg
sub
stos
pop
lods
jno
add
ror
adc
dec
lock
out
xorb
sti
mov
push
jbe
icebp
into
or
jecxz
add
push
fs
push
xchg
xlat
pusha
loop
neg
add
les
dec
mov
inc
stos
jg
push
in
insb
jns
andb
idivb
inc
popf
adc
xlat
notb
mov
cmp
inc
das
mov
add
je
std
push
jns
testb
test
sbbb
sub
stos
push
ficoms
xchg
test
ret
ret
rclb
push
into
jl
mov
fnstcw
pop
add
adc
add
popf
inc
sbb
mov
push
jns
push
xor
test
adc
in
xchg
fcoms
push
sbb
pop
jne
jmp
iret
push
inc
dec
rcrl
shl
cmp
bound
mov
mov
inc
out
cwtl
or
xchg
xchg
orb
in
sarl
sahf
add
adc
xchg
or
xor
in
sub
cmp
add
icebp
out
push
push
jp
sub
dec
cmp
jle
jbe
fs
sub
add
call
xor
adc
add
ret
or
adc
into
rcrb
or
or
jge
popf
in
push
outsb
or
xor
rcrb
and
test
dec
push
cs
push
ljmp
stos
xor
mov
popf
imul
insl
in
jne
pop
orb
adc
adc
ds
sbb
jno
mov
sub
xchg
mov
in
enter
test
dec
gs
mov
cmp
ljmp
bound
popf
std
sbb
and
mov
lcall
push
or
sbb
nop
fiaddl
mov
popf
push
or
xor
mov
xchg
xor
push
ret
push
es
add
in
gs
out
mov
push
in
es
sub
lret
popa
mov
jl
sbb
sahf
inc
inc
add
sbbb
dec
push
sti
push
lret
pop
inc
shll
ret
push
add
outsl
loope
push
loop
mov
int3
push
outsb
push
mov
mov
sub
sbb
insb
mov
jbe
call
push
push
loope
scas
in
mov
je
xchg
jle
je
cmc
ret
pop
jne
cltd
out
jg
test
xor
shl
mov
dec
cmpsl
pop
shl
imul
loope
cmpsl
int
xlat
push
xor
ret
mov
push
xor
mov
adc
xor
cmp
leave
push
xchg
or
mov
sbb
pop
lret
add
filds
daa
push
lcall
xchg
loopne
fistl
sahf
mov
pusha
movsl
jne
push
pop
push
loope
xchg
xlat
add
leave
inc
sbb
cmp
sahf
add
push
pusha
sub
add
push
rorb
shrl
xchg
adcl
push
xchg
mov
add
data16
xor
and
push
sahf
sbb
inc
inc
pop
push
lods
out
jl
insl
jo
cmpsl
dec
add
sub
sbbl
fnstsw
dec
psrad
push
scas
mov
sbb
loop
mov
movaps
push
loopne
xlat
push
jle
add
fidivs
push
adc
jbe
pop
mov
js
pop
out
pusha
enter
cmp
movsl
push
inc
mov
call
std
dec
pop
xlat
popf
cmp
ja
add
jbe
test
add
hlt
xchg
int3
xchg
mov
es
mov
mov
fadd
mov
xchg
lret
dec
je
add
into
mov
push
push
addb
sbb
lahf
lret
xor
xchg
popw
das
sbb
dec
cld
inc
mov
xlat
sbb
push
xor
or
sbb
mov
outsl
aas
push
jne
insb
lahf
xchg
add
aas
inc
xor
testb
rcrl
inc
das
adc
sub
movsb
fmuls
mov
incl
popa
pop
and
ss
mov
xchg
sbb
mov
dec
dec
leave
xchg
fs
mov
fwait
roll
ja
dec
lahf
sub
aaa
enter
outsl
inc
std
push
cwtl
dec
push
cltd
add
xor
and
test
popa
add
or
arpl
ret
cmp
xor
inc
add
faddl
sahf
inc
mov
testl
int
sub
lea
mov
jb
roll
loope
pop
test
or
into
pop
xchg
or
or
popf
jbe
jns
fistl
sarl
xor
dec
imul
mov
ja
cmpsb
sbb
enter
or
test
sbb
mov
xor
push
fimuls
jmp
mov
cmp
or
orb
jnp
scas
jo
sbb
mov
test
sti
ja
push
adc
popa
jbe
cld
pop
loope
stos
inc
imul
push
daa
sub
idiv
push
setl
sbb
jl
and
shlb
lahf
mov
or
testb
fisubrs
sbb
ret
sbb
push
movb
push
xchg
mov
or
sbb
push
xor
rolb
push
mov
js
add
mov
shlb
inc
jns
and
scas
pusha
jns
mov
out
loope
jnp
shrd
movb
xchg
jne
shrb
pushf
stos
sbb
ds
or
sbb
pop
jecxz
push
es
lcall
in
jp
pop
mov
or
jge
test
lcall
fwait
or
pop
dec
out
das
ret
mov
fisubrl
adcl
lea
or
pop
sub
mov
mov
sbb
mov
mov
mov
push
jae
cmpsl
or
sbb
pop
lahf
xchg
int3
push
cld
out
sub
jecxz
xchg
mov
nop
and
push
cmp
pushf
xchg
stos
cs
enter
xor
je
rcrl
rcrl
rolb
stc
inc
pop
lret
push
push
pop
popf
mov
orl
add
fnsave
cld
cld
mov
out
push
mov
rorl
push
es
xor
scas
hlt
fistl
sub
es
pop
jl
lock
sbb
jmp
imul
fldenv
cmp
sbb
mov
add
inc
and
popf
cs
inc
pusha
subb
pop
movsl
lods
scas
cmp
ljmp
pop
or
mov
scas
cwtl
mov
xchg
stos
lahf
leave
stos
xorl
dec
jl
leave
inc
inc
outsl
arpl
dec
sbb
inc
insb
pop
loope
insl
cmp
out
jge
fcoms
sti
mov
sbb
jne
and
sti
inc
mov
dec
add
dec
cmp
jle
loope
jmp
inc
add
xor
ljmp
mov
data16
jle
aaa
icebp
dec
add
andl
mov
aaa
sub
jo
dec
mov
or
dec
cwtl
sbb
les
pop
push
sahf
xchg
jo
push
dec
cltd
or
pop
add
pop
rcrb
dec
pop
inc
fisttpl
popa
dec
inc
adc
ret
adc
add
sub
cli
dec
xor
add
and
imul
pop
xchg
sbb
arpl
shll
dec
sbb
stos
loopne
shlb
fld
or
ret
in
xor
dec
mov
and
frstor
pop
adc
xlat
mov
pushf
cmpsl
in
xor
test
fnsave
mov
jne
pop
mov
cmp
in
ljmp
loope
sbb
test
cmp
lea
sbb
jecxz
adc
xchg
sub
sar
pop
lcall
push
mov
jns
rcrl
arpl
sbb
icebp
negl
negb
test
fsubs
arpl
rorl
cmpsl
imul
mov
sahf
mov
enter
outsb
push
leave
lret
mov
sub
mov
mov
es
bound
out
xorl
aas
xchg
pusha
mov
jge
das
imul
mov
pop
xchg
outsl
push
mov
iret
mov
xorb
lahf
adc
mov
inc
xor
cmp
fadd
out
add
add
stos
and
mov
inc
scas
mov
pop
movb
test
les
or
repz
addb
xor
imul
adc
push
sbb
inc
pop
or
mov
cwtl
mov
popf
add
mov
test
push
jns
cltd
pushf
add
fbld
in
sbb
push
or
xor
das
mov
mov
gs
mov
jp
inc
mov
shll
bound
out
test
test
sbb
mov
mov
push
enter
stos
fisubl
imul
cltd
imul
jae
jmp
fstpl
inc
es
jp
sub
shrl
xor
ficompl
pop
dec
inc
sahf
test
movsl
mov
sbb
mov
fsubl
mov
mov
pop
add
stos
xchg
sahf
out
fsubs
sbb
gs
addb
jns
and
popa
mov
bound
cltd
sti
adc
mov
cwtl
push
mov
push
scas
pop
cltd
xchg
inc
loop
fwait
addb
pop
push
dec
jns
test
dec
fdivrp
stc
lcall
fldenv
enter
out
cmpsb
xchg
xor
and
dec
mov
insb
jo
add
xchg
mov
pop
add
pop
pop
sbb
adc
fcoml
add
sbb
cli
imul
mov
dec
jo
outsb
les
out
inc
mov
les
loope
cmpsb
mov
hlt
lret
das
test
jge
mov
xchg
mov
or
dec
or
or
push
pop
mov
in
sbbl
mov
and
pushf
mov
sub
in
mov
mov
xor
jp
or
inc
ret
aaa
adc
sbb
es
into
cltd
orl
push
push
add
sub
lcall
cmp
divl
negl
aad
hlt
add
add
add
imul
sub
cs
imul
add
xchg
pop
scas
adc
pop
in
adc
adc
dec
sbb
std
mov
out
jle
jp
fistl
filds
fwait
cld
cwtl
pop
loopne
loope
push
adc
popl
jnp
xor
pop
dec
mov
mov
push
cli
xchg
arpl
repz
jne
fwait
dec
bound
adc
mov
xchg
inc
int3
jl
test
pop
bound
mov
jmp
cmpsb
pop
pop
stc
inc
scas
dec
test
daa
add
mov
cmpsb
rclb
push
inc
sbb
pop
jne
leave
adc
cmpsl
pop
aas
sahf
add
repz
mov
add
mov
or
xor
ret
ss
push
push
imul
stc
sub
into
arpl
xor
cli
imull
mov
jl
out
sarb
push
mov
add
jo
daa
rcr
addl
xor
mov
shlb
add
rcrl
je
push
sbb
add
pop
pop
push
jns
sti
push
insb
mov
dec
adc
push
jb
and
arpl
divl
sub
xchg
sbb
add
rcrb
cmp
push
cmpsl
cmp
inc
pop
mov
adc
cmp
sbb
testl
sbb
sub
sbb
inc
pop
neg
cmp
stos
mov
js
dec
mov
cli
jle
pushf
mov
sub
popf
orl
stos
sbb
pushf
movsl
pop
stos
adc
data16
aam
jno
mov
xchg
xor
int
pop
mov
push
xor
sub
xor
pop
pop
stos
test
dec
add
xchg
mov
cmc
sub
popf
lods
mov
xor
sub
aaa
jp
icebp
mov
std
lcall
add
push
cmpb
shr
fwait
mov
lods
mov
adc
lea
push
sub
fidivs
mov
data16
mov
adcl
sub
mov
mov
push
and
icebp
ret
inc
lock
enter
xlat
or
aad
add
inc
cmc
int3
loope
jg
dec
jg
dec
jns
data16
es
jl
push
ret
inc
rorb
push
das
mov
in
xor
ficompl
fdivs
push
shll
dec
mov
push
jp
jecxz
inc
popf
es
push
jp
inc
cmpsb
push
testl
rolb
imul
lcall
xchg
sahf
pop
jmp
lock
or
andl
add
push
jle
into
out
sbb
sbbb
sub
fisubrs
inc
mov
imul
add
adc
add
xchg
cmc
scas
mov
flds
clc
xchg
cmp
sahf
pop
in
stos
in
scas
rolb
loope
iret
repz
stc
daa
aas
scas
jne
out
insl
add
sub
fs
pop
lret
dec
add
inc
mov
add
imul
popf
icebp
push
stos
shlb
mov
lea
divl
sbb
jbe
int3
addr16
ljmp
add
sbb
stos
icebp
cmp
shrb
push
shrl
out
pop
pop
sahf
pusha
inc
aam
adcb
dec
scas
mov
rcll
cmp
je
xor
sbb
test
out
mov
mov
mov
scas
cmp
xchg
push
cmp
dec
sahf
push
or
jmp
sub
jne
push
mov
lock
filds
sahf
mov
pop
jecxz
daa
cmp
push
sub
call
inc
mov
mov
sbb
popl
aad
incl
mov
or
je
xor
push
fldl
add
push
jg
lock
and
sbb
fucomp
je
outsl
mov
cld
xor
es
cmpsl
cmp
sbb
inc
test
test
mov
xor
cmp
in
andb
cli
aaa
push
xchg
mov
xchg
shrl
cmc
push
test
andb
mov
pop
jb
fistpl
inc
sbb
fisttps
or
flds
push
push
add
or
push
inc
or
rol
insb
ret
cmp
mov
pop
gs
data16
cmpsb
ja
fiadds
mov
push
sbbb
cmc
cmc
in
inc
daa
in
cmc
sahf
cs
jne
inc
sbb
lahf
gs
or
jno
xor
pop
scas
pop
loopne
fstl
xorb
sbb
adc
shll
xchg
loope
pop
push
loop
aad
jne
jp
addr16
dec
pusha
inc
imul
jno
and
sar
sbb
je
cli
shl
sarl
popa
xchg
mov
xchg
xor
sub
xchg
or
mov
add
mov
out
ret
movsb
rolb
in
stc
pop
push
pop
int
add
gs
notl
test
faddl
stos
loopne
jecxz
jge
jecxz
sub
movsb
cmpsl
inc
out
popf
xchg
add
aad
xchg
imul
mov
pop
scas
stos
push
xchg
xor
mov
loopne
sbb
inc
pop
mov
inc
push
adc
xorb
shrl
scas
push
add
lds
cld
imul
in
sub
dec
sub
mov
pop
pushf
and
push
sbb
lds
movsl
cmc
shlb
pushf
dec
add
add
ljmp
inc
xor
test
or
add
mov
pop
gs
fidivs
imul
lods
push
negb
or
cmp
fldl
in
mov
push
daa
pop
xor
addr16
mov
cmpb
xchg
dec
data16
adc
nop
inc
pop
stc
add
inc
and
jnp
std
popa
cmc
jge
pop
mov
sbb
add
and
pop
and
addl
jbe
push
pop
and
les
divb
inc
sbb
fmuls
fisttps
xor
sbb
cli
xorl
jno
sub
inc
lods
push
cmp
mov
js
push
cmp
mov
push
jb
sbb
inc
sarl
xchg
int
inc
in
fbstp
sahf
fstl
sub
sub
in
adc
addb
mov
sti
inc
lahf
cli
dec
and
stc
sub
push
test
xchg
dec
sahf
mov
mov
cltd
inc
xor
add
cmc
fisubrl
mov
or
lds
sub
pop
movsl
push
adc
loopne
or
sahf
mov
aaa
jb
adc
hlt
adc
fyl2x
mov
xchg
test
shlb
sub
repnz
scas
dec
roll
lret
cmc
or
xor
imul
dec
jne
jg
fstpt
push
pop
push
dec
pop
pop
daa
arpl
lds
je
jl
negb
mov
inc
mov
sbb
push
dec
out
ficoms
push
cli
es
lret
into
adc
je
test
pop
xchg
pop
nop
test
push
dec
or
mov
call
xor
inc
push
imul
push
cld
sub
xor
mov
loope
hlt
ror
lahf
pop
push
ficoml
xor
push
add
dec
pop
jle
enter
jnp
xor
dec
inc
lahf
pushf
imul
inc
jnp
jp
dec
cmpsb
decb
sbb
cmp
lcall
sbb
sahf
pop
xor
sti
and
nop
arpl
leave
push
in
in
subl
test
mov
test
daa
lcall
jne
adc
push
xchg
mov
addl
jne
in
push
or
mov
pop
jne
movsb
insb
outsl
inc
push
mov
sub
mov
mov
pop
data16
or
sub
xor
mov
fidivrs
std
push
stos
testl
data16
mov
mov
mov
imul
loopne
jp
xchg
shrb
lods
dec
cmpsb
sarl
pop
mov
lods
scas
or
push
mov
shlb
subl
pushf
icebp
shr
push
das
andl
jo
and
andl
xor
test
inc
das
xchg
ret
push
cwtl
jbe
movsb
shrb
jnp
in
mov
sbb
push
xchg
adc
fisubrl
test
sbb
into
jg
push
lods
push
mov
gs
ss
mov
loope
add
add
push
lods
in
xor
or
jp
dec
pop
daa
loopne
jmp
stos
push
call
push
vmulpd
push
dec
insb
ja
sub
lock
pop
shll
lea
and
into
and
or
adc
push
xchg
jno
std
scas
xor
inc
mov
daa
fldenv
sub
mov
lea
cmp
xor
sub
je
lock
and
cmp
push
add
repnz
xchg
test
out
sbb
or
mov
xchg
lret
fnstcw
nop
dec
push
jl
xchg
cmp
fisubs
add
inc
cmp
rsm
inc
insl
icebp
out
subb
test
jo
lock
test
inc
push
bound
mov
icebp
nop
xchg
push
sub
and
mov
inc
add
pop
fmuls
mov
mov
sub
in
lock
and
scas
xchg
sbb
andb
jge
inc
hlt
dec
dec
pushf
jne
pusha
test
xorb
add
loope
enter
mov
lret
xor
pop
je
push
or
xlat
cmpsb
addr16
pusha
and
xchg
push
inc
sbb
jb
frstor
ret
ds
pop
sbb
fiadds
int3
aad
loope
test
inc
sub
jo
sbb
xchg
scas
orps
push
mov
xchg
aaa
sub
sbb
pop
dec
ds
fldl
push
mov
test
je
inc
push
add
dec
pushf
cmp
adc
mov
add
jl
fs
nop
or
pop
inc
fisubl
dec
imul
add
cmpl
nop
dec
inc
mov
mov
cs
jnp
push
jmp
mov
jmp
roll
and
push
andl
lds
shlb
es
ret
ffree
lds
xor
icebp
in
xchg
subb
push
add
in
sub
dec
lcall
idivb
cmp
data16
add
arpl
fbld
pop
sub
xchg
mov
lcall
test
cmp
imul
inc
sbb
mov
pop
push
dec
sbb
cmpsl
pushw
sbb
and
xchg
fistpl
xchg
push
in
push
push
mov
fmuls
cmp
push
inc
sbb
push
popa
ds
mov
mov
sbb
popa
jno
push
orl
fcoml
out
or
dec
sub
add
mov
enter
jmp
rorl
mov
jne
cmpsl
or
aaa
rcrb
sbb
pop
push
mov
fwait
add
lods
cmc
repz
sbb
dec
pop
xchg
dec
mov
push
jg
or
mov
cwtl
sbb
repnz
or
sub
mov
stc
xchg
scas
out
and
xor
inc
push
sub
pusha
pop
shrb
inc
sbb
test
sbb
sbb
push
jo
mov
cltd
imul
pop
repz
pop
mov
inc
repnz
or
jmp
sub
sub
pop
popa
das
ja
shll
in
out
push
insl
add
jge
mov
sbb
mov
aas
jecxz
add
rcll
sub
cmp
xlat
fsubs
sbb
add
xchg
popa
faddl
js
mov
adcb
add
dec
rorl
scas
adc
mov
imulb
in
inc
into
cmc
pop
fmul
add
mov
nop
mov
and
sahf
push
add
je
btr
dec
enter
loop
das
int3
hlt
cltd
sbb
pop
dec
es
outsl
loop
pop
lcall
adc
roll
push
mov
hlt
pop
js
jno
popf
mov
add
sub
mov
pusha
add
ret
push
out
mov
aas
sbb
sbb
fisubrl
stos
add
outsl
popa
in
dec
inc
sbb
pop
mov
sub
xchg
cs
dec
xchg
push
das
sbb
mov
js
push
inc
xchg
sbb
ret
out
cmp
push
loop
xorb
test
and
mov
cmp
aas
mov
dec
dec
mov
lea
xor
pop
fs
pushf
repz
xchg
mov
fisttps
cmpsb
ja
mov
enter
popf
mov
cli
pop
inc
inc
or
and
pop
mov
std
outsb
imulb
and
fst
adc
mov
fwait
arpl
inc
loope
or
shll
sbb
cwtl
lds
into
addb
push
sub
dec
cmp
dec
jb
add
push
loopne
int
sbbb
mov
pop
mov
push
lret
mov
sti
xor
cld
icebp
add
mov
mov
add
adc
mov
mov
add
add
dec
mov
cmpsb
and
scas
add
sarb
nop
sbb
sub
push
into
negb
push
lcall
mov
mov
movb
dec
sbb
sbb
fisubl
sub
bound
inc
mov
in
cwtl
repz
pusha
cwtl
das
push
enter
cmc
fdivrp
push
sub
mov
pop
fwait
sbb
add
mov
fyl2xp1
push
sbb
pushf
sbb
dec
and
xchg
add
xchg
and
add
push
adc
xchg
std
mov
sub
std
inc
in
mov
aaa
pop
shrb
dec
pop
xorl
fcoml
xorb
lods
mov
sahf
scas
xor
enter
push
rcrb
sub
psubw
dec
and
popl
mov
pop
or
add
cmp
dec
sbb
mov
mov
add
stos
enter
and
lods
int3
addr16
push
lock
or
xor
mov
ljmp
jbe,pn
out
mov
add
sbb
lret
gs
pop
sbbb
bound
aam
adc
add
sub
sub
jl
movsl
sub
ja
out
or
icebp
push
or
insb
rcrl
inc
gs
lahf
and
sub
out
xor
es
mov
test
lea
cmpsb
insb
hlt
mov
adc
sub
or
daa
xchg
andl
data16
pop
ss
aam
mov
fisubl
int
jecxz
jne
jo
lcall
mov
scas
sub
dec
add
or
adc
pushf
lea
movsb
rcll
mov
push
movb
test
pop
mov
ss
pop
mov
mov
inc
ljmp
adc
sub
arpl
cmp
pop
lahf
mov
or
mov
fidivrs
inc
mov
adc
in
mov
mov
pmaxub
mov
jg
mov
cmp
fsubrl
sbb
mov
xor
cmp
clc
xchg
add
inc
outsb
xlat
cmpsb
xchg
rcll
idivl
adc
adc
lahf
dec
lret
fisttpl
mov
xor
push
arpl
adc
mov
lods
add
outsl
loope
jnp
movsl
sbb
test
sub
and
add
fs
add
loope
mov
popa
das
test
jbe
push
pop
mov
mov
cltd
adc
sahf
sub
lret
add
mov
lret
addl
push
inc
lock
imul
test
into
out
cltd
jnp
fcmovbe
pop
or
js
rolb
xchg
pop
les
sbb
test
negb
sub
cmp
push
cmpsb
pop
xchg
iret
mov
testl
out
loopne
inc
push
push
mov
inc
or
xor
std
shll
sbb
pop
lds
jne
mov
jae
movl
pop
jecxz
inc
jg
pop
es
repnz
jecxz
or
push
xor
repz
or
inc
ja
mov
dec
loopne
ja
and
add
dec
xchg
mov
cld
sbb
cmp
popl
or
aad
inc
or
push
ja
mov
rorb
das
cmpsl
sahf
ds
dec
imul
sub
mov
push
sti
insb
inc
add
sub
jge
lock
and
sub
pop
sbb
mov
clc
pop
jge
test
add
xchg
lahf
or
adc
sti
fimull
insl
and
sti
mov
std
js
sbb
call
stos
mov
insb
in
xor
mov
sahf
sbb
xchg
loope
sbb
test
orb
push
push
push
lds
int3
push
or
sbb
push
out
add
lcall
push
mov
lods
out
pop
insl
add
frstor
push
pop
mov
xor
push
loope
pop
xchg
std
in
add
xchg
les
cwtl
cmp
lods
mov
jnp
jp
mov
cmpsl
jo
rolb
jl
test
pop
les
xchg
adc
xor
add
nop
sub
pusha
xchg
ret
fucomip
icebp
pop
push
sbb
xchg
insl
call
mov
ficompl
ror
mulb
mov
jle,pt
add
ret
sbb
pusha
xchg
popf
adc
cwtl
ret
lock
lahf
xchg
add
mov
push
sbb
push
push
sbb
mov
in
mov
rcr
sbb
lret
mov
sub
push
stos
pop
ljmp
ret
sbb
or
loop
psllw
adc
popa
mov
xchg
sbb
cwtl
push
into
sahf
fnstsw
or
mov
fldcw
push
sbb
loope
xor
or
inc
popa
push
cmpsb
mov
ret
js
divps
and
les
xor
inc
xor
fadds
mov
jmp
iret
sti
sbb
cmp
leave
or
or
sub
adc
inc
pop
mov
or
xorl
daa
sub
int3
jo
xchg
fisubs
mov
jge
test
or
jle
sbb
sub
movsl
push
jmp
out
or
in
inc
lret
pop
mov
mov
xchg
push
pop
add
ljmp
mov
cmc
pop
ror
cmp
or
dec
xchg
data16
cmc
sahf
jne
popf
popa
pop
andb
cmp
push
inc
sbb
jno
filds
imul
xorl
test
sbb
es
cmp
xor
add
fwait
add
stos
jno
xor
ja
fdivrl
into
add
and
jnp
call
vunpcklps
jle
inc
inc
cltd
or
dec
add
push
mov
pop
repz
mov
xchg
cmp
in
lahf
scas
aaa
filds
xor
repz
insb
sub
mov
sbb
andb
roll
add
cltd
sub
xchg
outsl
adc
pop
test
prefetcht0
and
pop
lea
sbb
addr16
xchg
testb
and
push
and
mov
loop
xchg
push
inc
xor
sub
scas
out
aad
sarl
cmp
call
or
cli
icebp
pop
and
stos
jnp
push
in
lock
leave
lods
arpl
inc
inc
icebp
inc
daa
mov
icebp
push
push
add
arpl
out
dec
mov
push
stos
clc
jb
popa
mov
pop
mov
jno
negb
mov
push
aam
sub
mov
xor
icebp
sbb
icebp
mov
imul
cmc
rcrb
pop
dec
movsl
pop
or
jne
fsubrl
and
leave
or
adc
stos
sbb
dec
pusha
test
push
mov
or
faddl
mov
adc
in
decl
icebp
pop
dec
lcall
inc
ljmp
out
cs
lcall
jne
xor
and
icebp
pop
and
test
repz
mov
bound
push
xchg
sub
arpl
outsb
jle
jmp
pop
dec
popf
jmp
test
test
push
cmp
and
xchg
add
jp
jecxz
and
xor
mov
sub
pop
popa
repnz
fidivrl
cmp
lock
push
or
movsb
or
loope
jmp
cmp
sbb
loope
add
jo
cmp
in
pop
and
and
mov
and
jno
mull
sbb
leave
xor
aaa
sub
mov
sbb
int3
cld
int3
into
dec
data16
mov
add
mov
sub
push
mov
stc
shrl
pop
mov
mov
xor
aam
mov
adc
or
repz
add
in
jl
insb
pop
movsb
lock
and
orl
cmp
mov
insb
gs
rolb
iret
jecxz
xchg
mov
push
sbb
nop
jae
pop
into
loopne
lods
xchg
cmp
mov
mov
adc
imul
jge
push
ficoms
test
hlt
push
xchg
adc
divl
lcall
pop
or
dec
inc
xchg
or
sub
test
mov
dec
test
fprem
cwtl
adc
ficoms
mov
faddl
gs
dec
mov
jle
mov
sbb
addl
xchg
sub
mov
cld
nop
push
or
or
cwtl
xchg
mov
xor
out
add
cs
sub
xchg
push
push
sbb
pop
xchg
cmp
std
in
lds
mov
or
xchg
mov
adc
into
push
ss
pushf
xlat
popa
adc
testl
push
ficoml
jl
push
lret
dec
jg
and
stc
das
jne
cmpsb
addl
mov
fucomip
sub
dec
cmc
mov
rorl
aam
addr16
aaa
bound
test
shrl
cli
lcall
dec
jp
mov
push
inc
xor
jmp
jl
add
popf
xchg
dec
mov
mov
jecxz
or
adc
add
subb
in
bound
mov
jne
cmp
insb
insb
push
or
int3
push
sbb
sbb
dec
aaa
je
inc
and
mov
jno
in
divb
xchg
out
and
leave
sub
daa
test
insl
xchg
popa
add
dec
jp
ror
xchg
push
les
leave
mov
xchg
pop
sub
xor
mov
icebp
dec
mov
mov
loop
insb
fyl2x
or
push
test
mov
sub
add
popf
rcrb
mov
and
sub
inc
mov
aaa
push
push
fsubs
dec
mov
push
sub
sub
repz
add
push
leave
or
das
push
push
add
inc
mov
out
pop
add
cmp
xchg
aam
adc
jl
dec
dec
addl
mov
push
add
arpl
inc
out
add
icebp
arpl
or
sarl
fwait
cmp
or
orl
in
in
cmpb
cwtl
or
pop
add
push
rcl
popf
push
cmp
orl
pop
lea
daa
sbb
and
or
rorb
cmpsb
popa
push
jmp
shlb
and
insl
push
pop
cmp
mov
test
orl
mov
push
jecxz
in
dec
roll
punpcklwd
cmpsb
push
sbbb
sbbl
push
test
shll
xchg
pop
and
inc
out
and
stc
lock
insb
movsl
adcb
into
fmull
sub
xchg
xchg
sub
movsl
lods
cltd
adc
decb
add
dec
int
sbb
add
inc
out
jne
pop
call
add
push
daa
pop
add
cmc
lods
insl
add
loope
ficomps
add
dec
dec
add
lock
sahf
mov
sti
lods
popa
cmp
test
sarb
jno
int
inc
mov
mov
scas
or
mov
or
xchg
and
insl
sarl
aaa
add
xchg
and
push
rcl
inc
jns
adc
or
addr16
cmp
jne
fdivrp
jmp
fsubl
fdivrs
xchg
lds
dec
nop
xor
jns
jg
mov
inc
cmp
lock
fidivl
xorl
mov
data16
mov
push
or
test
stos
xorb
xchg
testb
in
add
aad
xor
icebp
es
mov
pop
mov
mov
cmp
je
lcall
jo
jp
lock
pushf
jo
mov
mov
lds
dec
loopne
fcmovu
pop
push
push
movsl
cmpsb
push
clc
stc
stos
sub
mov
orb
jmp
out
cli
or
incl
inc
dec
int3
test
mov
and
lds
aaa
nop
dec
mov
insb
sbb
or
stc
xchg
inc
inc
rolb
jmp
and
faddl
fsin
and
cmc
test
in
or
int
sarb
icebp
inc
popa
cltd
mov
int3
xor
or
das
mov
or
mov
xor
inc
jle
les
pop
enter
adc
out
push
cmc
sbb
mov
jbe
jge
push
pop
xor
in
xor
adc
push
sbb
or
dec
lahf
lcall
loopne
jne
cmpsl
xchg
fnsave
mov
fmul
fwait
inc
sub
sub
pusha
js
adc
sub
inc
pop
outsl
sbb
jle
fwait
ljmp
popf
jp
or
shl
stos
add
movsb
xchg
cmp
cs
sbb
scas
dec
or
ss
xchg
or
ja
push
in
push
jno
push
pop
jb
cmp
dec
ljmp
mov
bound
pop
aam
ljmp
pop
mov
insb
mov
cmpl
dec
adc
and
push
aaa
aas
xorb
push
mov
rorl
mov
push
add
lock
call
push
mov
pop
dec
repz
dec
cmpsb
xchg
ss
pop
xor
cmc
roll
test
cmp
imul
or
aam
call
or
lds
inc
das
xchg
adc
lret
xor
iret
mov
add
sbb
adc
cmp
push
mov
add
test
xchg
movsl
movsl
dec
inc
push
loopne
enter
xchg
es
push
push
push
mov
fdivl
sbb
pop
jl
fisubrs
cmp
push
sbb
fcomp
jp
outsb
popa
push
jge
in
mov
mov
mov
aas
add
mov
pop
je
dec
xchg
inc
faddl
inc
pop
push
ficomps
fimuls
jg
sbb
mov
xchg
push
push
fldl
inc
lock
dec
or
popf
jg
pop
pop
jmp
lock
cli
loopne
repz
arpl
inc
stc
notb
dec
mov
movsb
dec
popf
adc
adc
or
sbb
xor
mov
add
inc
arpl
mov
movl
mov
fidivs
jp
and
out
movl
rcrb
fsubp
jl
outsl
push
ror
cmpsb
ljmp
shrb
jge
xor
lret
jmp
ret
stos
push
jbe
xor
add
sbb
sbb
push
sbb
out
loope
daa
or
testl
push
mov
dec
adc
dec
xchg
jno
in
ss
adcb
mov
cmp
xchg
cwtl
repnz
pop
mov
ljmp
mov
push
cli
pop
jbe
mov
pop
cmc
or
fs
ret
scas
sbb
scas
xchg
pusha
clc
lods
sti
or
ret
orb
das
fwait
jae
movsb
jge
les
push
mov
fimuls
sub
sbb
pop
mov
push
push
test
mov
mov
sbb
sbb
addl
and
cs
lret
jg
lods
xor
dec
pop
jae
mov
dec
sbb
lret
ljmp
lods
cltd
jp
es
fsubl
mov
out
pop
fdivrp
clc
pushl
mov
pop
xor
push
into
mov
ds
dec
dec
xchg
stos
js
jmp
pop
dec
inc
mov
das
dec
mov
pop
out
and
mov
in
xor
mov
or
mov
idivb
int3
cwtl
jl
cwtl
push
fs
jne
arpl
orl
fwait
movsl
les
pop
jmp
mov
add
push
lret
xor
icebp
and
loope
lea
xor
jg
mov
jecxz
mul
sbb
lcall
or
sti
inc
int
test
jns
push
imul
push
stc
fnstenv
stos
mov
sub
jp
and
mov
aad
inc
roll
sahf
movsl
test
inc
and
cs
jbe
mov
sub
sarl
cmp
lcall
lock
inc
popa
mov
loope
fwait
and
insb
in
pusha
adc
xor
andb
or
sub
push
pop
leave
push
inc
sub
mov
adc
scas
stos
shrl
cli
out
lea
xchg
cmp
bound
jne
push
jno
xchg
add
add
mov
or
je
push
jae
xchg
repz
jmp
adc
mov
in
mov
mov
fstp
push
xchg
les
mov
pop
lds
dec
add
or
mov
std
stos
aad
jge
sbb
cmp
neg
lods
cmc
pop
ss
xchg
test
loopne
or
pop
inc
fbld
test
sub
mov
out
add
jge
cmp
push
push
mov
out
sbb
insb
push
int
jne
cltd
faddl
outsb
sbb
jp
or
push
jmp
sbb
cwtl
xor
shlb
mov
sbb
loope
fcomip
dec
lock
in
sbbb
cmp
stc
sub
mov
or
gs
dec
ljmp
aaa
xchg
push
xchg
subb
lods
ret
dec
xor
inc
pop
xchg
or
mov
or
ret
popa
fwait
jl
addr16
addr16
in
in
pop
pop
inc
rcr
insb
push
in
aaa
or
gs
stos
sbbl
cmp
cmp
mov
sbb
aas
out
stos
sub
testl
pop
aaa
mov
movsl
scas
jns
sbb
or
in
sbb
cwtl
and
add
xor
xchg
or
sbb
fidivs
push
dec
mov
xchg
mov
fldenv
aad
pop
adc
jae
sti
fldcw
cmpsl
mov
xlat
mov
lret
lds
imul
int3
and
mov
add
mov
mov
xor
rorl
cli
pop
mov
sbb
cmp
rcrl
adc
ljmp
pop
push
sahf
int
in
bound
inc
mov
shll
rclb
fdivr
add
pop
mov
push
xor
popa
sub
xor
pop
idivb
inc
pop
jno
cmpsb
pop
adc
push
push
ret
fstp
adc
sub
and
shrd
push
std
xchg
dec
jle
pop
in
jae
inc
test
mov
dec
xlat
lret
mulb
rcr
mov
or
or
test
orb
xchg
insb
out
add
mov
or
jo
sbb
imul
push
lds
cmpsb
mov
or
fwait
pusha
pop
push
adc
addl
sbb
inc
cmpsb
scas
dec
push
pushf
mov
lods
ljmp
das
leave
pop
dec
mov
ret
xor
popl
add
pop
lds
add
lret
stos
jg
mov
rclb
fs
jecxz
fdivs
and
fxch
sbb
aam
jg
popf
push
xor
rclb
mov
mov
fstps
lods
push
push
jmp
or
cmpsl
xchg
xor
pop
mov
cli
jb
mov
gs
dec
or
insl
popa
mov
add
sbb
test
mov
std
sbb
sub
sub
rcl
sub
push
inc
int3
popl
xchg
lock
xor
jp
mov
cmp
testl
loopne
sbb
mov
push
cmp
inc
adc
mov
and
sub
or
sbb
mov
jb
es
stos
aam
adc
out
cli
mov
mov
sbb
sbb
push
mov
cmp
mov
lock
xchg
mov
testl
jno
push
stos
push
pop
mov
mov
jl
add
movsb
cmp
xor
cli
adc
sbb
inc
pop
fsubrs
add
or
loop
out
and
xchg
sbb
insb
test
add
push
mov
add
fadds
rorl
adc
pop
fwait
push
test
lret
pop
mov
sbb
push
sbb
mov
cld
cmc
ljmp
cltd
aam
pop
jbe
popf
lcall
out
cwtl
jecxz
lock
dec
xchg
mov
mov
push
in
fimull
scas
push
add
testl
es
cld
sbb
inc
pop
out
mov
roll
test
repnz
jmp
stos
inc
push
lcall
xor
call
and
mov
cmc
sahf
ret
jnp
inc
add
popf
out
int
cmpsb
push
orb
std
mov
out
mov
jge
stc
mov
mov
in
xor
sbb
clc
gs
ret
sbb
gs
pop
inc
xor
jns
cltd
pop
mov
sarl
sub
and
fidivrs
or
sub
mov
scas
ja
aam
xor
xchg
cmpsl
fcomps
or
negl
int3
jno
jne
dec
xchg
mov
mov
imul
lret
sbb
nop
das
aad
out
fs
dec
and
mov
fidivrl
rcr
jns
inc
sbb
pop
notb
inc
loope
jge
cmp
out
pop
dec
movsb
inc
sbb
lods
or
pop
push
jle
icebp
pushf
xor
jno
push
aam
sbb
cmp
inc
jno
pop
or
sbb
mov
fcmove
mov
push
jp
jo
mov
inc
test
push
js
or
mov
and
bound
popa
rorb
push
ret
jge
scas
jne
cmpb
popf
adc
fldt
push
fidivrl
pop
lds
cwtl
sahf
push
sahf
nop
lods
sub
sbb
pop
xor
test
sub
call
in
les
push
clc
pop
arpl
ja
push
jbe
sahf
inc
ja
cmp
lret
mov
xchg
xchg
sbb
xor
xchg
jbe
in
lret
ds
inc
mov
push
jl
mov
push
int3
test
fidivl
lret
cmpl
jbe
mov
adc
jmp
mov
jmp
xor
push
fnstenv
sbb
jbe
adc
jne
jg
fmuls
shll
gs
or
fcoml
push
sub
insl
xchg
andb
add
insb
stos
loope
push
insl
stos
out
inc
sbb
fidivrl
ljmp
outsl
jno
sub
jo
insb
add
dec
aaa
adc
dec
push
push
mov
dec
pop
push
outsb
lcall
cmpsl
sub
loopne
dec
sbb
dec
jecxz
jnp
roll
mov
sub
mov
jne
cmp
add
push
sbb
push
das
sahf
outsl
sbb
sahf
addl
lods
mov
cmpsb
lret
xchg
xorl
pop
addr16
push
inc
or
arpl
sahf
fstps
mov
orl
push
mov
pop
cmc
movsl
fsubrl
inc
sahf
aas
out
gs
xchg
test
mov
sbb
lea
ds
and
and
pop
lods
arpl
push
dec
xchg
das
or
sahf
insl
cmpl
test
dec
push
ret
sub
cmp
xor
leave
nop
xor
inc
jge
add
pop
cmpsl
sub
fsubl
mov
push
adc
sbbb
imul
enter
andl
iret
jle
push
sub
adc
xlat
in
push
stos
add
sti
pop
gs
in
imul
mov
shll
insb
pop
int3
and
int3
dec
or
sub
pop
ja
int
sbb
or
inc
stos
leave
or
adc
adc
and
sub
jg
pop
or
jne
sbb
push
leave
test
insb
cmp
adc
sbb
add
mov
xor
adc
stos
test
enter
inc
pop
xlat
inc
push
and
lret
lods
cmp
or
fisubrs
add
ret
fdivr
popa
mov
pop
repz
add
sbb
dec
inc
xchg
mov
or
push
jp
push
sbb
imul
pop
ss
cmp
xchg
movsl
push
add
mov
mov
fldt
enter
push
fldenv
mov
sbb
mov
sbb
mov
sbb
bound
arpl
movsl
adc
imul
mov
insb
cmp
scas
xchg
jl
push
mov
adc
adcb
in
scas
add
mov
xchg
mov
mov
in
int
mov
sbb
mov
stc
mov
mov
dec
lret
clc
out
pop
push
popf
or
push
cmp
xor
add
call
inc
cmp
mov
rclb
cld
jmp
ljmp
mov
jle
or
mov
dec
in
xchg
mov
fcoms
cmp
jno
sbb
mov
sbb
jns
stos
and
ljmp
cmp
int
xchg
xor
shr
xchg
mov
arpl
stos
mov
xchg
cmp
fldl
dec
rcl
mov
insl
lds
out
daa
push
push
jmp
jns
cli
sbb
adc
jae
lcall
cmp
pusha
or
div
xchg
jae
mov
pusha
cmp
pusha
sbb
daa
jle
push
fs
movsl
mov
dec
scas
mov
sahf
add
add
push
lock
jae
bound
add
ljmp
addl
inc
jns
sahf
push
xchg
jmp
push
sub
add
sbb
cmp
adc
call
lock
xchg
add
outsl
js
push
je
leave
cmp
dec
dec
cmp
popa
mov
xchg
loope
int
repz
xor
cmp
sub
jne
iret
adc
push
jne
mov
arpl
lcall
mov
dec
xor
inc
mov
loop
lcall
jne
stos
popf
pop
ret
sbb
pop
mov
out
ficoms
inc
jge
sbb
lret
in
mov
aam
sbb
mul
fs
leave
pop
xor
ficomps
pusha
fs
psllw
lret
notl
push
dec
test
ret
loope
sub
mov
pop
inc
ljmp
lret
jge
mov
cmpsl
pop
mov
inc
mov
mov
pop
addr16
popl
add
lahf
sbbl
push
xchg
mov
in
mov
test
cld
cmpsl
imul
jmp
and
mov
pusha
loope
push
xchg
pop
pop
add
jne
pop
pop
push
and
push
lahf
push
push
jb
push
cmpsb
inc
icebp
sbb
xor
test
push
mov
mov
and
sbb
pop
sbb
pop
sub
ficompl
lahf
sub
xchg
in
sbb
jp
sub
xchg
aaa
addb
fsubs
pop
andb
cmp
lds
xchg
mov
fstpl
mov
ljmpw
fdivrl
pop
xchg
sub
xor
fadds
push
mov
cmpsb
fs
mov
xchg
push
adc
adc
pop
clc
or
mov
bound
xor
lahf
dec
roll
pusha
cmpsb
leave
add
lock
pushw
pop
mov
dec
push
adc
cmc
inc
dec
add
rorl
cmpb
hlt
stos
clc
push
jne
pop
xor
cmp
and
arpl
jge
xchg
sbb
vaddps
cwtl
adc
mov
pusha
add
xchg
dec
stos
out
icebp
push
push
test
ret
shll
jmp
jle
xchg
push
out
testl
inc
add
cmp
rcrl
lcall
popa
mov
insb
outsl
jns
sub
loop
ret
movsl
sub
loopne
mov
push
fwait
sti
or
int
sbb
sbb
movsl
movsl
daa
repz
leave
repnz
inc
popa
fwait
sub
lea
dec
cmp
push
cld
es
js
in
lcall
aaa
sti
sbb
xor
inc
cli
lcall
shlb
fs
loopne
dec
inc
push
push
adc
mov
lcall
or
shlb
pop
lcall
xlat
loop
mov
jle
mov
jp
mov
add
repz
mov
sahf
js
stos
not
pop
mov
cmpsb
sub
lret
pop
int
jle
add
cmpsb
add
sbb
loop
cmpsl
adc
dec
sar
inc
mov
xorl
ret
rcrb
and
cwtl
cmc
idiv
or
adc
cmp
xor
sub
incb
xchg
lcall
pop
loop
or
nop
mov
adc
lret
fs
sub
xchg
gs
repnz
jecxz
mov
fcomps
xchg
xchg
hlt
jmp
es
inc
ss
jl
data16
hlt
inc
rcrl
sbb
add
sbb
sub
andb
arpl
cltd
decl
inc
std
mov
pop
inc
repnz
stos
subb
add
insl
repz
or
ficoml
das
adcb
push
rorl
and
mov
inc
mov
fstpl
movsb
loop
adc
icebp
add
mov
or
or
rorl
cltd
aas
cld
mov
sbb
aaa
and
es
or
cld
movsb
popa
leave
enter
sbb
mov
cmp
adc
xor
out
lret
in
out
cltd
jle
imul
andb
cmp
jne
outsb
movsl
add
pop
hlt
jnp
loope
sbb
sbb
ret
push
mulb
inc
mov
fwait
mov
cmpsb
mov
sbb
hlt
repz
test
js
dec
jg
clc
data16
lea
pop
push
repnz
sbb
into
imul
fs
adc
xor
sub
out
in
loopne
xor
xorl
cli
fs
imul
push
sbb
pop
addr16
fs
jbe
jno
fwait
xchg
cmpsl
orl
sbb
cmp
aad
stos
mov
shlb
cmpb
loope
mov
push
cmc
popf
xor
xchg
push
jnp
pop
xor
jno
add
cmp
cwtl
leave
sarl
push
mov
pop
sub
sbb
pop
mulb
cmpsl
cmpsl
cmp
cli
into
mov
jne
jle
sub
fwait
push
push
lret
push
cmp
sbb
lcall
mov
ret
xchg
cwtl
mov
movsl
fdivl
push
pop
imul
jbe
or
mov
pop
out
in
jg
mov
inc
in
mov
cmp
cmc
cli
dec
jne
lret
jae
mov
mov
xor
xor
pop
pushf
xor
xor
test
imul
mov
int3
mov
lret
push
sub
shr
je
adcl
jne
rorl
or
inc
test
lret
loopne
sbb
xchg
sbb
jno
jp
pop
mov
pop
ljmp
mov
lahf
insb
add
push
push
in
fiadds
cmpsl
data16
popf
xor
cmpsb
test
xor
es
xchg
icebp
les
cmpsl
xchg
or
jae
mov
lahf
push
mov
xchg
in
or
xor
scas
insb
jno
mov
xor
sarb
lcall
xor
jo
xchg
cmc
rcrb
xchg
push
xchg
sbb
and
xchg
loope
sbb
aad
out
inc
cli
push
sbb
test
or
out
sbb
sahf
xchg
cld
outsb
adc
stos
adc
cltd
sbb
push
test
sub
or
add
cmp
sub
cli
pop
add
xor
sbb
mov
cmpsb
cmp
inc
sub
mov
cmp
push
sub
add
dec
out
fldcw
pop
push
push
imul
push
mov
rdpmc
pop
pop
ja
xchg
mov
xchg
push
pop
push
inc
hlt
xchg
out
push
sbb
or
subl
sahf
int
imul
negb
popf
mov
and
sbb
dec
out
stc
imull
cmp
sbb
stc
add
xor
repz
dec
movsl
xor
loopne
roll
inc
push
rcll
and
mov
aas
inc
dec
or
aaa
add
mov
push
leave
inc
cwtl
mov
notl
jl
or
pop
shlb
push
and
mov
push
xchg
cmp
push
mov
repz
jge
inc
movsl
dec
idivb
leave
xchg
cltd
jns
jo
pop
sbb
sbb
mov
insb
inc
shlb
fcomps
outsb
add
jne
inc
add
mov
andl
out
movsb
push
push
mov
loopne
movsb
cmp
int
addr16
loopne
xor
jp
cmpsb
in
aam
xor
test
inc
cltd
in
imul
jl
data16
push
or
mov
sti
sahf
add
inc
movsb
push
dec
mov
mov
push
cwtl
int3
inc
test
or
mov
out
xor
jns
adc
out
add
in
cmc
lret
fildll
pop
push
push
icebp
push
mov
bound
add
loop
push
out
popf
popa
jbe
hlt
mov
rclb
cmc
out
add
lods
stos
dec
inc
add
out
xchg
push
adc
out
hlt
sbb
inc
xchg
or
inc
inc
pop
jno
push
sub
aas
ret
jmp
jg
enter
adc
jecxz
jne
cmp
jae
popl
sbb
cmp
add
cli
cmp
addl
cmp
adc
loope
sahf
cmpsl
sub
out
xchg
mov
push
and
mov
rolb
loopne
mov
cmp
and
mov
mov
aaa
cmpsb
pusha
cmpsl
andb
inc
dec
cli
icebp
jge
subl
sti
out
ljmp
dec
sbb
mov
popa
jbe
mov
pop
test
outsb
lds
cmpsb
adc
sbb
loope
xor
gs
jmp
xchg
rcll
xlat
sbb
adcb
add
lcall
xchg
std
les
xor
aam
xor
xchg
mov
add
push
cmp
xchg
and
xor
mov
push
push
mov
lcall
or
or
sarl
xchg
out
mov
pop
stos
push
sbb
inc
orb
cmp
cmp
jecxz
fsubrl
inc
mov
inc
xchg
movsl
cmc
adc
rorb
xor
subl
idivb
xor
xchg
dec
sahf
cwtl
mov
or
fcmove
adcb
stos
int3
mov
dec
arpl
popf
bound
cli
aam
in
ficoms
rolb
push
xchg
jp
call
andb
jge
das
and
mov
int3
and
lock
mov
icebp
mov
test
push
push
pop
push
subl
and
pop
iret
ljmp
hlt
sahf
and
cmp
dec
into
push
fsubrp
mov
and
stc
mov
shll
es
push
lds
fstl
cltd
sbb
out
or
shll
nop
out
mov
dec
push
jle
mov
mov
dec
sahf
mov
mov
push
icebp
nop
mov
add
nop
adc
mov
hlt
divb
mov
xchg
cmp
add
sbb
add
lods
decb
xchg
je
mov
sbb
mov
sti
insb
out
fsubrp
andl
or
popa
sub
add
push
sbb
pop
orb
pop
add
push
pusha
test
out
lock
mov
rolb
inc
call
jae
inc
xchg
lds
lock
fdivp
push
repz
loope
pop
push
jmp
pop
test
loopne
xchg
fnop
frstor
sbb
add
dec
fucomp
sahf
pop
sti
imul
add
or
inc
jno
inc
sub
out
sub
dec
dec
and
add
loopne
subl
jo
jge
adc
sub
leave
sbb
cmpsb
and
movb
mov
jg
or
loopne
pushf
stos
xor
pop
xchg
jle
bound
mov
xchg
adc
stos
cwtl
and
pop
and
out
shrb
aam
and
mov
pop
in
aam
xor
sbb
mov
jg
cmpsb
outsl
dec
mov
fadds
mov
cltd
mov
lds
xor
xorl
cmpsb
cmpsb
iret
sbb
cwtl
push
add
aaa
sub
sbb
add
subl
pop
jno
xchg
jb
sbb
push
push
leave
imul
xor
push
faddl
or
push
cmp
xor
add
mov
push
fdivrl
popa
clc
mov
lods
jl
dec
mov
adc
mov
lcall
push
loop
es
fsts
jecxz
cmpsl
outsb
push
push
popf
mov
dec
jbe
and
pop
fidivl
dec
jmp
cmpsb
fldenv
push
push
xchg
mov
lcall
es
cmp
push
sbb
in
dec
and
adc
mov
and
jno
ret
and
mov
pop
sbb
icebp
push
and
sbb
or
repnz
outsl
push
cmp
push
fwait
sbb
lock
dec
push
cli
js
imul
jl
out
cltd
ss
add
xorl
js
sub
mov
lret
jle
pop
add
sbb
setl
sbb
mov
pop
gs
or
mov
dec
imulb
aam
or
push
fmul
shlb
sbb
sbb
sub
loope
mov
popa
lret
pop
sub
sub
pop
xor
sub
adc
add
inc
jae
cmp
add
lods
inc
or
aam
popf
jp
adc
ds
add
jge
fdiv
repz
jp
out
push
pop
out
jg
jne
neg
mov
inc
mov
cs
mov
add
pop
popl
sub
cmpb
cld
xchg
or
bound
or
rol
clc
sub
loopne
ret
lds
xor
stos
pop
loope
xchg
std
out
mov
sub
mov
sub
inc
push
mov
daa
pop
mov
divb
int
push
adc
jl
mov
jp
jno
out
fnsave
shrl
pop
icebp
inc
ret
jg
jecxz
in
xor
test
bound
mov
and
inc
test
xor
adcb
fbld
adc
in
push
sbb
push
dec
test
fdiv
in
jbe
in
push
aad
popa
imulb
mov
lock
jge
push
das
or
ja
sub
fs
inc
add
rolb
lcall
xchg
xorb
lock
mov
or
push
bound
shrb
divps
and
test
movsb
push
loopne
popf
mov
dec
inc
bound
inc
enter
jno
dec
cld
mov
sarb
movsl
cmc
insb
sub
inc
imul
lcall
xorb
and
jb
and
mov
repnz
loopne
addb
push
dec
and
jp
push
lock
sbb
xor
mov
push
pushf
leave
mov
lret
sahf
rorl
ret
pop
dec
mov
notb
cmp
and
add
push
mov
out
push
fsubl
bts
mov
push
or
mov
push
inc
xchg
cmpsb
jge
into
xchg
data16
dec
sbb
push
stos
and
sbb
ja
loope
frstor
lods
jb
mov
mov
inc
xor
icebp
mov
repnz
mov
fs
mov
sbb
cli
testl
push
sbb
or
les
pop
mov
mov
in
in
mov
leave
sub
or
imul
ret
add
jle
pop
push
roll
leave
outsl
in
add
adcl
iret
pop
jmp
sbb
addb
mov
pop
push
mov
xchg
adc
icebp
add
shll
lock
mov
ds
pop
iret
arpl
cmp
pop
repz
adc
sbb
aaa
push
push
sub
push
sahf
push
push
pusha
dec
pop
xorb
xor
mov
ficomps
test
in
mov
pop
and
mov
stos
jno
jmp
push
dec
push
stos
xchg
xor
sbb
and
or
mov
cmpsl
mov
and
xorl
and
sbb
dec
mulb
stos
dec
mov
push
mov
pop
inc
and
pop
cmpsl
fcompl
rclb
inc
or
stos
cltd
ret
xchg
add
lds
sbb
push
hlt
mov
shrl
mov
cmp
xchg
das
aas
mov
sbb
mov
aad
mov
cli
push
aaa
lahf
pop
popf
jp
lods
pop
cs
inc
inc
pop
sbb
xorb
mov
push
stc
int3
fsubrl
int3
or
adc
lcall
rol
fmul
push
and
nop
xchg
xchg
faddl
insl
ret
pop
and
cmp
push
addb
in
ret
mov
rcrb
lret
cmpsb
push
cli
enter
repz
gs
jmp
dec
push
inc
jp
jmp
mov
mov
push
mov
dec
inc
ret
icebp
jecxz
jl
sbb
stos
inc
jp
int3
xor
lods
movsb
imul
sbb
dec
addr16
mov
mov
cltd
imul
or
add
loope
lock
push
push
imul
loope
dec
push
stos
and
cmpsl
and
sbb
sahf
add
loopne
dec
loopne
enter
mov
fdivp
cmp
gs
xchg
in
cltd
outsl
jge
data16
mov
das
push
sbb
cmpsb
arpl
push
dec
and
mov
mov
sbb
out
mov
mov
out
out
addr16
push
add
push
push
dec
adc
test
sbb
fmuls
rcrb
repnz
sbb
popa
icebp
notb
lock
pop
icebp
insb
rcll
jae
mov
adc
sbb
aaa
sbb
mov
xchg
test
fcoml
inc
fistl
inc
push
insb
mov
ss
lds
or
pop
imul
into
pop
sub
and
xchg
or
mov
je
push
sub
sub
add
lods
cmpsb
enter
jno
xchg
notl
jmp
imul
mov
push
pop
pop
sub
xor
xchg
data16
xchg
das
out
xorb
pop
sub
clc
fs
xchg
sbb
ret
inc
adc
test
mov
ret
pop
addr16
pop
loop
movsb
popf
nop
lea
movsbl
lea
jo
push
dec
outsl
out
adc
mov
sbb
jle
outsl
push
push
xor
mov
not
sub
scas
lock
push
aad
xor
and
adc
and
push
jecxz
ja
push
scas
movsl
xor
push
or
sbb
xorb
add
cmpl
xor
rcl
fs
or
add
pop
push
add
out
push
sbb
cltd
lret
scas
mov
pop
sbb
aam
pop
fwait
addl
sti
inc
and
adc
rclb
ljmp
mov
xor
test
sahf
jmp
in
inc
sbb
aam
aas
cmp
xchg
fs
cwtl
pop
jns
cmpsb
pusha
les
ret
mov
pushf
and
jbe
inc
jnp
dec
mov
sbb
pop
xlat
popa
cmpsl
cmpsb
rcrl
inc
loope
ja
jecxz
and
lret
lods
sbb
sahf
inc
into
or
lock
pop
mov
fidivs
adcl
push
ljmp
jp
es
sbb
push
pop
mov
xor
movsb
pushf
pop
pushf
pop
add
push
mov
or
mov
cmp
clc
or
push
xor
pop
fstpl
hlt
mov
sub
inc
pusha
or
orb
mov
push
sbb
nop
jbe
int3
inc
and
enter
lahf
aas
sbb
imul
jb
cmp
xchg
test
pushw
lock
outsl
mov
dec
adcl
into
xchg
neg
adc
add
mov
dec
mov
sbb
xor
aaa
pop
push
sbb
std
jl
or
jecxz
sti
xchg
add
xor
ret
dec
mov
addb
loope
mov
sahf
mov
insb
cmp
out
aam
in
add
jge
sbb
sar
imul
call
jns
pop
lcall
add
inc
nop
adc
adc
outsb
pop
push
inc
loope
sbb
jmp
aaa
sub
and
cmp
stos
insl
sub
adc
stos
outsl
mov
mov
sbb
pop
pusha
cltd
insl
mov
mov
xchg
negl
lahf
push
mov
jbe
stc
cwtl
sbb
jo
bound
lcall
mov
sub
fmull
cmc
loopne
sbb
push
or
mov
jmp
or
es
sbb
ja
fadds
sbb
pop
imul
out
mov
fst
and
pushf
ret
mov
add
or
xor
ljmp
shrl
jg
movsl
or
xor
pusha
mov
mov
arpl
push
insl
jl
sub
or
sub
in
cld
sbbb
add
test
mov
mov
iret
add
clc
pop
sbb
jg
testl
add
and
push
mov
sub
xchg
xlat
fsubrs
rorl
data16
adc
mov
out
push
cmc
xchg
out
cs
ret
pusha
mov
sbb
sbb
mov
das
sbb
add
mov
mov
or
and
push
push
adc
and
js
add
jg
xchg
int3
push
in
xor
jnp
xchg
negb
test
cmp
sbb
into
or
iret
divb
out
scas
cli
cmpsl
xchg
imul
in
fstl
mov
sbb
mov
jae
pop
imul
ret
testl
mulb
cmc
mov
inc
dec
pop
pusha
cli
enter
sub
js
xor
pop
mov
loop
dec
enter
test
adc
or
sub
pushl
lcall
insl
addb
add
das
mov
fcomip
xchg
orb
rcrl
icebp
adc
add
test
mov
or
inc
sbb
test
sahf
mov
mov
lahf
flds
fwait
xchg
stos
stc
fmuls
mov
mov
fstl
fdivrs
xor
push
xchg
jmp
mov
loopne
cld
mov
aas
inc
lcall
insl
imul
cmpsb
in
jb
std
xchg
dec
cmp
pushf
push
cmc
cmp
arpl
and
out
inc
mov
cwtl
mov
filds
add
enter
pop
mov
mov
ret
gs
cmp
pop
jecxz
fmuls
add
cwtl
mov
mov
and
loopne
subl
mov
cmpsl
jb
xchg
inc
gs
sbb
fs
jo
push
and
dec
sub
push
and
fcoml
jo
lock
cmp
inc
mov
jae
or
pop
ret
pusha
imul
aad
arpl
out
ja
fs
ret
lea
pushf
dec
add
std
and
xor
cmp
loop
add
mov
push
sbb
mov
insb
rcll
sbb
sub
mov
daa
sub
push
mov
push
push
pop
sbb
in
pop
fstl
sub
popf
push
rolb
jnp
out
movsb
pop
rorl
lock
inc
cs
adc
enter
mov
sub
mov
mov
lahf
arpl
push
ret
sbb
or
push
mov
or
dec
pop
jno
insb
fcmovu
dec
add
bound
imulb
ljmp
pop
sbb
mov
nop
sbb
loop
imul
mov
pusha
adc
pop
fcoms
insb
movsb
subb
test
rclb
ljmp
jp
add
add
js
loopne
jl
inc
andb
mov
arpl
mov
push
bound
aaa
gs
xor
inc
mov
shlb
inc
mov
mov
fsubrl
in
ja
pop
stos
push
or
pop
xchg
add
mov
andb
add
int3
fmull
and
outsb
in
push
add
fdivrs
push
out
daa
or
nop
xchg
mov
push
cmc
jae
cmpsb
pop
pop
mov
xchg
and
push
sbb
lds
or
mov
dec
rorl
mull
push
or
xor
or
popa
dec
pushf
jl
lock
in
xor
shll
aas
rol
stc
rorl
cltd
xor
pop
inc
loope
or
test
ljmp
lods
pop
adc
shll
insl
lret
sbbl
sbb
add
scas
xchg
lret
icebp
jp
or
push
test
xor
mov
and
dec
addr16
add
jae
push
xchg
mov
xchg
ficoms
aaa
fnstcw
mov
popl
jle
dec
aaa
rcrl
leave
test
decb
sbb
cmp
xorb
dec
cmp
add
jge
stos
lock
sub
adc
sbb
inc
aam
push
cmpl
jp
daa
adc
out
adc
or
xchg
inc
add
lods
aam
loop
mov
push
fwait
je
test
mov
mov
pushf
dec
scas
js
xlat
int
cmp
incb
movsb
aad
push
sub
movsl
add
syscall
inc
cli
cmpsb
and
mov
sbb
js
dec
mov
pop
inc
push
and
cmc
push
sbb
mov
cli
inc
scas
imul
xchg
pop
in
pop
aad
leave
push
fsubl
out
out
xor
fisubrs
bound
pop
pop
cli
mov
pop
and
sbb
ljmp
push
pop
es
mov
mov
dec
xchg
imul
loop
xchg
clc
sahf
xchg
push
add
xor
gs
xor
push
int3
pop
lret
xchg
mov
or
loope
sbb
into
in
out
out
dec
add
xchg
sbb
mov
sbb
push
mov
rol
jl
insl
jmp
sub
add
inc
and
sti
add
rol
jp
aad
pop
push
pop
pop
sub
push
pop
mov
mov
movsl
pop
and
dec
push
sarb
xor
mov
inc
bound
xchg
xchg
in
xor
xor
xor
xchg
cld
dec
call
fiaddl
loopne
out
and
movsl
fadds
sbb
icebp
sbb
ret
lea
sbb
fwait
sbb
enter
and
jp
data16
cmp
imul
add
das
and
rdmsr
ficompl
out
gs
adc
jl
shll
es
cld
roll
aas
adc
and
into
add
cmpb
xor
fcmovu
sub
sbb
mov
arpl
pusha
loopne
xor
loopew
rclb
or
push
push
insl
test
sbb
xchg
mov
inc
push
lods
mov
fwait
sbb
jmp
mov
imul
mov
sti
mov
mov
jge
les
push
rorl
jl
notb
ja
pushf
or
mov
mov
push
dec
fsub
mov
xor
sbb
or
push
or
pop
inc
dec
mov
adc
push
push
lret
lret
test
add
insl
insb
out
jmp
mov
fwait
out
push
mov
pop
xor
popf
daa
add
shll
mov
int3
inc
ja
push
jecxz
les
sub
push
jno
sbb
dec
arpl
xchg
adc
jge
jne
xor
fwait
dec
xor
data16
sbb
mov
dec
gs
push
mov
popf
or
lret
mov
out
pop
les
sbb
ljmp
xor
dec
fcompl
cmpsl
xchg
xor
xor
jbe
inc
std
loopne,pn
enter
je
add
mov
xchg
out
mov
add
int
fiaddl
xchg
add
xchg
pop
jbe
and
mov
jl
mov
inc
adc
xor
enter
lea
sbb
popa
out
movsb
mov
leave
icebp
lret
inc
rcll
inc
lahf
das
or
mul
pop
mov
inc
push
clc
cmpsb
push
sbb
dec
test
ret
dec
jp
das
sti
sub
push
shr
aaa
fchs
sbb
addl
mov
imul
push
pop
cmp
mov
ljmp
sbb
jge
insb
push
sarl
adc
push
mov
or
dec
or
lret
xor
xor
lea
mov
out
mov
sbb
sub
ljmp
mov
xorb
out
push
sub
pop
mov
inc
ljmp
xchg
add
jns
cmp
ljmp
rcll
pop
lcall
jb
cmc
sbb
scas
cmp
and
icebp
cltd
je
push
shr
push
push
fsubs
sbb
gs
mov
sbb
dec
xchg
stos
icebp
mov
insb
dec
or
out
dec
sub
mov
and
cltd
jno
add
push
mov
pop
cld
xlat
push
imul
leave
les
ror
dec
into
jl
or
or
add
sub
mov
xor
xor
pop
lcall
ficoms
jle
xor
lock
xchg
pop
mov
xor
mov
push
inc
jb
mov
dec
fidivrs
test
push
dec
push
lcall
lcall
nop
roll
gs
xor
adc
sbb
sbbl
pop
xchg
cmp
sub
out
leave
int3
subb
dec
gs
mov
lds
inc
inc
pop
rclb
lcall
into
fistpll
inc
ficoml
push
cmp
mov
xchg
sbb
lock
nop
call
jmp
js
inc
jge
enter
cmpsl
or
cmc
cmp
and
sbb
push
dec
in
mov
sub
sbb
sbb
cmp
mov
sub
adc
inc
cmpsl
cmc
push
push
push
cmp
mov
cmc
or
addr16
jp
pop
mov
or
sbb
subl
or
pop
mov
xor
push
sahf
movb
add
arpl
jns
sub
mov
arpl
or
or
pushf
out
icebp
jbe
or
add
xchg
and
xor
jne
push
inc
push
adc
sbb
jbe
dec
mov
or
sbb
inc
in
ret
lods
data16
or
push
call
push
inc
and
push
push
add
mov
aaa
push
and
test
inc
cmp
in
xchg
add
mov
push
sub
call
rcrl
push
pop
movsb
shrb
jle
sbb
jmp
cmpsl
jmp
sub
out
jno
and
mov
pop
es
outsb
xor
dec
shlb
fisttpll
cmpsb
mov
mov
dec
mov
jmp
mov
jle
lahf
mov
mov
clc
sbb
pop
rcrb
subl
xor
scas
pusha
vmovaps
xor
push
jns
ret
mov
mov
ret
scas
sbb
gs
mov
cld
out
icebp
mov
inc
jecxz
add
repnz
daa
cmp
rcr
cs
das
adcl
add
incl
push
mov
xor
sub
bound
or
mov
xchg
mov
xchg
je
loope
mov
dec
pop
repnz
add
adc
fisttpll
mov
cmc
xchg
inc
push
ss
arpl
aaa
mov
and
cmp
lret
mov
jmp
cmpl
mov
pop
test
push
cmpsl
or
lock
stos
push
jge
shl
push
loope
outsl
jmp
lret
lea
in
push
mov
out
sbb
inc
add
or
push
dec
sti
in
icebp
adc
out
dec
pop
jmp
in
into
mov
pusha
sub
mov
test
xchg
divl
test
fdivrl
mov
sbb
pop
testl
pop
mov
sbbb
repnz
push
repnz
negl
sub
add
push
fnsave
insb
jge
lret
pop
mov
fsubs
inc
cmp
pop
cld
mov
pushf
push
inc
mov
cmp
hlt
imul
jne
jae
int3
vcvtdq2pd
push
push
sub
mov
psubw
cmpsl
inc
in
push
leave
inc
int3
aas
or
push
movsl
or
jbe
ljmp
aaa
mov
sbb
movsb
dec
inc
stos
dec
add
sbb
das
or
cmp
loopne
sbb
adc
add
cs
add
sub
imull
pop
add
cmpsl
rcll
push
dec
popa
mov
cmp
mov
mov
jno
jmp
adc
mov
cld
mov
mov
cmp
dec
repnz
int3
push
push
jbe
icebp
mov
aas
jmp
push
cmp
add
js
mov
ret
test
divb
mov
add
pop
jns
out
outsb
lret
sub
dec
sbb
sbb
mov
fsubr
mov
pop
pop
call
pop
dec
jbe
mov
add
mov
add
sbb
adc
rcll
fldcw
mov
sub
lds
dec
sub
adc
pop
and
dec
mov
jecxz
mov
test
mov
push
sbb
and
xor
rol
pop
pop
and
inc
and
xchg
sbb
subb
inc
rol
pop
in
sub
aad
addl
sbb
rclb
les
jns
lret
jecxz
in
dec
add
mov
shlb
jno
loope
mov
lcall
mov
pop
addl
lret
lret
dec
movsl
cli
jmp
aad
movsl
mov
gs
jge
push
std
in
add
push
pop
mov
pop
dec
and
fists
ja
sbb
xchg
mov
jb
jno
icebp
dec
fnstcw
inc
sbbb
push
mov
cmc
mov
adc
into
xlat
aad
mov
cli
inc
test
cmp
sarl
hlt
sbb
push
loope
pusha
xor
sbb
cld
bound
fsubrl
in
stc
shll
push
ss
jge
mov
xor
push
mov
pop
rep
cmp
sbb
mov
xchg
inc
xor
andb
cwtl
xor
inc
inc
fs
leave
cmpsb
lcall
pop
les
push
aas
adc
xor
dec
aad
fstps
push
add
push
or
pop
push
push
dec
mov
aaa
in
enter
pop
mov
inc
sbb
mov
or
sub
fnstsw
sbb
and
jle
mov
and
xchg
fmul
enter
jo
sub
sbb
stos
push
or
mov
jo
fsubl
jns
inc
lret
inc
xchg
icebp
pop
jl
out
mov
push
cld
pushf
push
cmp
std
xor
leave
ja
dec
scas
cmc
xchg
or
mov
psubw
cmpsb
push
mov
cs
pop
movsl
xchg
push
lcall
sbb
mov
mov
jp
add
insl
mov
lcall
sbb
lods
and
ret
jmp
lods
push
jbe
sub
call
in
testb
call
or
fcompl
mov
cmp
jae
cs
fdiv
faddl
and
mov
cmc
xchg
popa
aaa
dec
adc
xorb
dec
rcll
mov
sbb
lock
sbb
gs
or
out
mov
cltd
pop
push
adc
stos
xor
jno
cmc
and
sub
push
dec
mov
ss
imul
inc
in
inc
add
sbbb
cmp
dec
pop
jo
cmp
mov
enter
andl
sbb
add
fmull
xchg
sub
inc
xchg
je
mull
fsubp
out
sbb
sbb
mov
inc
xchg
out
int
fwait
testb
mulb
clc
pop
xlat
ret
sub
ficompl
scas
inc
fsubr
int
xchg
mov
xor
cmp
pop
test
inc
fwait
loop
movsb
call
cltd
mov
add
popf
and
es
add
mov
imul
sub
mov
cmp
adc
jp
add
jbe
mov
mov
jle
push
cwtl
add
add
jmp
jge
push
cmc
rcrl
fisubrs
out
cmp
push
push
xchg
jle
movb
or
xchg
out
shrl
popf
push
cmpsw
enter
lcall
shlb
rorb
sbb
pop
pop
sub
pop
jns
movsb
std
das
cmp
aaa
pop
push
or
in
pop
pop
push
insb
jnp
mov
les
jecxz
mov
sub
icebp
add
mov
outsl
addl
and
inc
ret
dec
mov
add
dec
fwait
and
add
sbb
scas
lock
xchg
addr16
sahf
cmc
sbb
sahf
inc
or
jno
faddl
cmp
xor
rolb
or
mov
cmpsb
pusha
pop
mov
imul
leave
inc
sbb
mov
lock
test
or
xor
mov
pushl
insl
cmpsl
ret
scas
ret
add
cmpl
ljmp
pop
dec
test
xor
add
bound
add
push
inc
inc
xlat
sbb
push
jno
fidivl
mov
fldcw
or
mov
or
in
ja
bound
enter
sbb
out
push
adcl
das
add
sbb
mov
or
test
jns
mov
xchg
imul
add
jns
adc
xchg
andb
mov
jp
into
mov
into
sub
scas
adc
addl
sub
leave
mov
scas
dec
fs
cmp
daa
cmovne
insl
or
push
jecxz
cwtl
jge
push
mov
shlb
push
push
addr16
cwtl
decl
mov
cld
xor
jns
loopne
mov
arpl
xchg
push
dec
mov
fildl
jbe
mov
pop
sbb
test
sub
sbb
inc
ret
sub
jp
out
pop
scas
ljmp
or
sbb
ret
and
repz
xor
sub
xchg
pop
xor
sbb
jnp
and
or
in
stos
ret
das
adc
icebp
cmpsb
push
adc
out
mov
icebp
cmpb
sub
xchg
inc
add
test
insl
lret
jp
imul
movlhps
por
shl
loopne
jns
dec
gs
rolb
dec
rcr
sbb
loop
push
mov
dec
jne
pop
jns
add
cld
xchg
leave
jecxz
mov
jo
adc
lods
jne
aaa
out
jl
pop
mov
test
add
popa
rcll
fwait
jle
mov
dec
add
cmp
mov
fcompl
push
xchg
inc
push
or
loop
mov
mov
hlt
pop
dec
divl
rclb
aaa
out
lds
push
sbb
andb
inc
jmp
mov
inc
out
xchg
mov
out
inc
popf
lcall
sbb
push
pop
push
fwait
adc
lods
adc
data16
add
or
daa
pop
scas
movsb
push
icebp
pop
or
xchg
inc
ds
sbb
pop
rcl
pop
xor
xchg
repnz
sti
pop
icebp
mov
test
addl
xchg
jns
or
popf
lods
lods
popf
jne
test
push
test
dec
mov
aas
cmp
inc
ret
jle
bnd
pop
push
dec
subb
dec
js
xchg
loop
or
outsb
xchg
add
jb
sahf
mov
add
sbb
ffree
add
xchg
cli
test
or
cmpl
loope
sahf
mov
jne
lcall
sub
sbbl
shll
pop
cmp
insl
popf
sbb
subl
push
sbb
or
ja
xlat
mov
mov
push
pop
sub
pop
add
add
sbb
and
aaa
xchg
lock
nop
xchg
mov
or
pushf
mov
cmp
lds
push
pop
adcl
je
and
into
repnz
insl
test
jno
aam
dec
test
inc
pop
movsb
pushf
inc
xchg
popf
shrl
dec
sbb
mov
cs
mov
mov
rorb
es
pop
sbb
ret
aaa
xor
push
gs
outsl
sti
xorb
icebp
jns
xor
adc
call
lea
pop
mov
movl
jne
fcomps
pop
jg
and
mov
mov
push
pop
cmp
mov
push
mov
jbe
cmpsb
int
fidivs
push
test
add
inc
mov
popf
jnp
sbb
fdivs
jmp
out
addl
mov
jbe
jge
addr16
addr16
and
xor
add
ret
adc
xor
mov
push
mov
xchg
movsl
pop
in
jne
mov
mov
jne
in
stc
and
in
xchg
fdivl
inc
inc
adc
dec
fcomip
icebp
push
imul
and
push
dec
inc
stos
out
jl
xor
inc
cmpsl
inc
sahf
rcrl
ljmp
test
adc
adcb
insb
dec
jbe
cmc
sbb
test
or
aam
popf
xor
jmp
pop
scas
cmc
push
push
xor
fwait
push
push
or
in
cmp
insb
inc
cmp
cmc
out
push
xlat
adc
js
gs
mov
push
push
mov
lods
rorl
daa
add
xor
push
fnsave
andl
fstps
and
in
aas
arpl
and
and
test
ficompl
mov
cmc
cld
jb
jle
mov
add
jmp
mov
mov
dec
lret
mov
out
dec
jge
or
mov
mov
icebp
jl
push
pop
sahf
xchg
call
lds
push
cli
cmc
scas
push
js
inc
jge
ret
inc
inc
cmp
jg
jbe
mov
stos
adcb
out
inc
sbb
mov
in
xor
loope
mov
sub
fs
and
lret
inc
or
inc
mov
jmp
fldcw
dec
icebp
add
in
imul
add
inc
ljmp
xchg
stos
xchg
adc
lods
ljmp
sbb
je
not
push
sbb
sub
pusha
mov
in
add
add
test
pusha
sbb
mov
stc
mov
pop
add
mov
mov
jnp
andl
sbb
sub
out
sub
mov
and
cli
int3
and
ja
xchg
pop
mov
out
dec
gs
cli
or
mov
imul
out
jle
add
lcall
dec
push
ja
scas
or
mov
xor
add
sub
mov
jmp
fucom
mov
dec
dec
pop
cmp
sub
cltd
or
jp
scas
push
push
es
shll
mov
out
je
sub
sbb
mov
xchg
pop
insb
xchg
inc
sub
dec
ja
sbb
xor
push
sbb
mov
jle
mov
mov
mov
mov
stos
sub
sbb
dec
add
or
cmp
xorl
pop
insl
in
mov
mov
test
fdiv
inc
test
adc
sti
xlat
scas
jge
sbb
rclb
dec
and
inc
pushf
shll
in
and
pop
imul
lret
into
aam
outsl
rcrl
sbb
rcrl
cli
test
and
cmp
jbe
push
mov
dec
xchg
sbb
je
add
add
cwtl
add
cli
sbb
sti
icebp
divb
add
and
push
sbb
popa
movsb
lods
xor
push
aas
js
jmp
or
pop
sbb
mov
cmp
lret
data16
movsb
in
push
adc
xchg
add
rolb
pop
shl
mov
dec
mov
cmpl
mov
add
shrb
popf
xchg
rorl
ret
add
outsb
rcrb
push
mov
xor
inc
loopne
bound
push
lock
fwait
popf
push
iret
push
jl
cmp
in
loope
sahf
xchg
bound
add
stos
push
add
lea
mov
dec
in
in
pcmpeqb
push
leave
stc
mov
jle
pusha
jns
pop
push
mov
xchg
sbb
ret
iret
xchg
popa
pop
and
sub
imulb
or
adc
stc
push
sbb
mov
mov
nop
jbe
test
push
xor
lret
dec
xor
lahf
in
dec
mov
sub
mov
shll
mov
xor
sarb
or
fwait
aaa
cmc
sub
lret
cmp
scas
loop
shlb
pushf
mov
cmp
lahf
push
stos
xor
aam
shl
sbb
inc
add
adc
sbb
jns
inc
inc
adc
sbb
push
inc
and
mov
loope
add
dec
pushf
jne
shlb
outsb
mov
adc
pop
test
or
lods
movsl
add
mov
sbb
add
push
push
push
inc
sbb
mov
push
imul
or
sbb
jp
stos
mov
ja
dec
ret
or
jle
pop
cmpsb
xchg
ret
outsb
mov
pushf
rcrl
out
add
sbb
in
sti
cmc
or
das
pop
and
add
pushw
push
mov
inc
lea
xchg
pop
aas
mov
jae
movsl
dec
jecxz
adc
inc
aam
mov
insb
and
and
or
icebp
ret
mov
pop
mov
dec
dec
int3
in
pop
orl
lcall
insb
adc
push
rcrb
push
insb
and
test
sarb
stos
inc
push
popa
xchg
jle
jnp
cmpb
scas
add
out
jl
test
out
fwait
or
push
loope
mov
jp
add
xchg
adc
rcll
lods
jnp
jno
sbb
test
xor
aad
add
fnsave
sub
xchg
add
cmp
in
cmp
inc
fiaddl
or
addr16
push
dec
pop
mov
xor
sbb
fcompl
mov
subb
shlb
jle
sbb
inc
imul
jnp
push
xlat
pop
and
dec
call
sub
pop
mov
push
xlat
aaa
pop
call
jecxz
xor
ljmp
adc
mov
sahf
ret
mov
fucomi
sbb
gs
sub
jno
cmpsl
jle
add
xchg
test
cs
push
dec
mov
add
xor
cmpsb
xchg
lods
inc
sbb
sbb
sbb
subb
pop
orb
cmpsl
sbb
xlat
imul
inc
mov
testb
pusha
test
jp
scas
xchg
scas
popa
cmp
add
daa
jl
mov
jecxz
stos
mov
xchg
add
xchg
or
out
jnp
pop
pop
xchg
out
mov
insb
dec
jne
xchg
mulb
shlb
push
inc
xchg
dec
sub
test
scas
andb
xchg
mov
jbe
cmp
mov
orl
ss
and
bnd
lds
jne
gs
or
xorb
idivl
adc
push
repnz
mov
inc
dec
stc
addr16
inc
sub
cmpsb
int
repnz
xor
push
mov
addl
xchg
adc
inc
pop
dec
rolb
daa
cmc
icebp
xlat
dec
icebp
dec
insb
addb
mov
imul
adc
sub
dec
ret
push
pop
and
add
rcll
repz
jl
mov
xor
sbb
xchg
insb
pushf
sub
shlb
loopne
inc
or
lret
loope
out
fbld
rol
push
cmpl
sbb
add
push
gs
hlt
es
dec
popf
stc
lods
dec
loopne
std
push
mov
jne
xchg
mov
or
lret
cmpsb
and
lods
cmp
rorl
inc
fiaddl
mov
dec
mov
push
icebp
popa
xor
push
cmp
aaa
fucomip
addr16
stos
xor
aaa
sahf
jbe
mov
push
icebp
xchg
test
in
cmc
jb
ljmp
add
cmp
mov
sbb
xchg
adc
arpl
add
and
jne
loop
ljmp
outsb
movb
add
jmp
push
fwait
mov
mov
das
mov
pop
adc
xchg
shl
inc
sbb
dec
dec
pushf
jle
outsb
sub
jecxz
pop
mov
jmp
icebp
lret
lcall
dec
inc
data16
outsl
icebp
rorl
or
imul
cltd
das
mov
cmpsb
sbb
xor
leave
test
in
pop
cmp
inc
test
sbb
sub
xchg
pop
adc
lock
pop
stos
or
outsl
dec
and
jne
aam
jae
sub
sub
cltd
popfw
lods
rolb
mov
adc
aaa
push
jmp
mov
sarb
ds
dec
ss
faddl
stos
jp
mov
cli
int
or
in
push
leave
scas
and
inc
jno
es
inc
pusha
push
cmp
mov
mov
mov
int3
xchg
filds
add
mul
pop
push
push
imul
push
sub
cmpsb
ja
dec
stos
loope
mov
cwtl
xor
sbb
sbb
rclb
cmp
insb
fwait
lock
mov
ret
lock
mov
out
adc
hlt
xchg
xchg
sub
rorb
sub
mov
fmull
std
xor
dec
popf
cmc
hlt
scas
loope
cmp
xor
lock
sub
jmp
push
leave
lcall
mov
inc
pushf
sbb
cwtl
loope
mov
add
daa
lret
adc
idiv
lret
scas
and
pop
xchg
movsb
push
inc
jo
jp
or
cmp
icebp
pop
pop
mov
add
sahf
mov
cmp
out
add
loope
ljmpw
insb
ret
jecxz
jne
mov
nop
cmc
sti
or
test
add
xor
popf
dec
xchg
or
jp
inc
int3
das
test
cld
fnsave
add
jecxz
in
cmc
sbb
inc
xchg
pusha
sbb
pusha
adc
je
xlat
stc
inc
sbbb
lods
mov
sbb
leave
jle
sub
jl
scas
loope
or
scas
xchg
lods
jns
mov
lds
adc
jge
sbb
mov
sub
repz
mov
aaa
imul
sub
mov
lret
hlt
out
cmpsb
sub
call
and
scas
push
xchg
adc
inc
xchg
lret
enter
int3
xchg
repnz
sahf
jecxz
stos
lds
ds
cmc
outsl
vpsubw
xor
add
fadds
pop
pushf
and
mov
mov
cli
push
enter
lahf
lcall
loop
add
stos
fldl
ret
inc
push
and
sub
sub
sbb
leavew
in
ja
mov
test
or
push
popf
inc
sbb
mov
cli
mov
out
loope
push
cmp
jnp
rcll
xlat
aas
dec
mov
gs
pop
aad
push
out
repnz
nop
repz
mov
pop
insl
jmp
jmp
addr16
enter
mov
jl
daa
loopne
sbb
dec
and
xorb
int3
sbb
pop
adc
or
test
inc
dec
push
dec
fwait
jp
ljmp
ret
mov
out
sbb
pop
ror
fadd
mov
fldl
sub
dec
sbb
loop
or
jbe
inc
outsb
jg
lods
mov
pextrw
jbe
push
adc
xor
and
xchg
stc
jecxz
js
dec
cmp
cltd
and
xor
cmpsb
and
fstps
dec
inc
in
lock
push
push
dec
les
jno
or
adc
bound
inc
mov
imul
shr
test
pop
cmp
sbb
pop
mov
out
stos
jnp
outsb
sbb
out
in
push
add
stos
cmp
out
mov
lahf
jl
xor
pusha
cmp
test
pop
xchg
sub
lock
inc
out
icebp
cmp
popf
push
push
lock
mov
push
cmp
out
push
push
jbe
imul
xchg
loop
or
and
mov
push
mov
jnp
pop
cmp
cmpb
inc
sbb
jmp
enter
inc
js
movsl
insb
test
sbb
ss
inc
sbb
mov
loope
cs
fdivrs
jl
add
pop
or
xor
mov
mov
stos
push
xchg
adc
lcall
push
mov
pop
in
dec
adc
in
pop
push
clc
aaa
add
xchg
mov
dec
pop
loope
pop
scas
sbb
mov
out
js
push
fcompl
test
mov
mov
xchg
push
dec
leave
jecxz
xchg
and
out
inc
fwait
stos
cmc
fdivrl
outsb
insb
mov
pop
test
xchg
mov
jmp
add
mov
das
out
testl
ja
adc
xchg
daa
mov
xchg
sub
andb
xlat
rorl
cmp
xor
mov
sub
sub
pushf
xor
sbb
pop
cmp
imul
sbb
lods
daa
push
and
push
leave
aam
ss
cwtl
jne
imul
lods
add
pop
cmp
jae
mov
insb
add
notl
push
pusha
insl
test
jle
lahf
cmpsl
cmp
add
gs
push
sbb
lods
and
mov
imul
inc
or
notl
pop
mov
cmp
push
ja
test
xor
int3
dec
jnp
nop
xlat
dec
cmpb
add
pop
aaa
loope
cmp
inc
xor
bnd
fs
sbb
test
jmp
adc
xchg
mov
mov
imul
test
pop
dec
adc
jns
sbb
aaa
xchg
shr
jp
pop
es
lahf
cmp
aad
lret
dec
test
push
push
xor
push
or
popf
fistl
add
jns
ljmp
orl
lods
sahf
in
lods
sbb
mov
mov
dec
sbb
js
pop
xchg
cmp
pusha
into
sbb
test
fwait
mov
inc
test
test
push
sbb
sbb
cmpsl
xchg
arpl
or
movsb
leave
outsl
xchg
arpl
dec
mov
and
inc
out
xchg
call
dec
loopne
divl
cmc
dec
mov
pop
push
sbb
push
jmp
popa
mov
cmp
add
mov
sub
stos
cltd
dec
pop
inc
repnz
sarb
and
jge
scas
daa
js
sub
push
cmp
mov
popf
andl
negl
inc
mov
js
outsb
rol
int3
fs
push
andb
cvtpi2ps
push
inc
push
inc
mull
das
pop
shl
data16
add
xor
add
mov
cwtl
xchg
mov
mov
dec
cld
dec
mov
lahf
cmpsb
subl
xor
jmp
xlat
push
or
pop
mov
jo
inc
push
int3
add
or
stos
sbb
bound
pop
jp
fwait
in
insl
cmp
into
jle
xor
jge
dec
adc
das
mov
xor
mov
fcmovbe
sahf
xor
out
adcb
cmp
cld
cli
sbb
lods
movsl
pop
pop
adc
jg
add
add
and
add
mov
int
mov
jle
push
ja
popf
jo
dec
mov
in
aas
pop
xor
xor
divb
aad
rclb
lods
leave
fistpll
notb
adc
pop
dec
sub
test
adc
pop
subb
and
daa
mov
sar
and
dec
adc
adcb
add
lods
pop
ss
fcompl
into
outsl
xchg
cmc
pop
inc
jl
xchg
out
dec
fs
cmp
inc
xlat
xchg
mov
aad
mov
or
ret
inc
call
pop
stos
pushf
sbb
push
mov
addl
mov
mov
sbb
mov
dec
ds
dec
pushf
mov
mov
je
popf
icebp
or
icebp
pop
out
adc
dec
xchg
mov
rcll
fdivl
sub
popf
cmc
daa
dec
ss
scas
xchg
pop
add
sub
sti
mov
jmp
pop
sbb
out
pusha
into
js
sbbl
outsb
xchg
fsub
mov
mov
inc
das
dec
sbb
jmp
into
fs
daa
lods
rorl
fwait
adc
sbb
mov
or
lds
mov
int3
dec
icebp
fdiv
pop
out
push
and
ret
sbbb
lret
rcrl
dec
test
mov
jg
dec
and
loopne
cli
addb
mov
adc
or
nop
scas
mov
xor
jecxz
sbb
adc
dec
jle
and
cmpsb
xchg
sbbb
lret
xchg
add
jmp
cmp
cmc
sbb
and
mov
test
mov
dec
sbb
test
orl
add
repnz
sbb
mov
and
test
mov
arpl
add
dec
xorl
and
cmp
out
xchg
lods
add
mov
push
out
ja
xor
dec
and
push
xlat
jno
add
mov
adc
lret
leave
sti
arpl
add
pop
adc
arpl
mov
js
xor
mov
test
jne
outsb
addr16
jno
jle
or
enter
loope
or
xor
cs
push
repz
aaa
cmpsl
jbe
or
gs
push
repz
pop
xor
sbb
and
push
pushf
lock
push
test
rol
data16
and
jno
gs
cltd
repz
stc
cmc
or
jne
add
lds
jmp
call
sbb
sub
jb
in
adc
loop
xchg
mov
imul
or
popf
push
xchg
call
insb
add
sub
addb
sbb
fwait
mov
inc
imul
inc
xchg
dec
adc
sbb
jge
or
push
sub
aad
jg
pop
mov
in
loop
pop
outsb
sbb
movsb
xchg
stos
cmc
andb
adc
push
cmc
lds
pushl
dec
mov
push
add
outsb
mov
into
mov
sub
add
add
or
ja
cld
mov
pop
imul
sub
mov
xchg
scas
sbb
out
sbb
insl
or
lret
mov
dec
ficoms
mov
sbb
xorb
dec
mov
sub
pop
mov
scas
xlat
fdivl
push
pop
cmpsb
nop
dec
test
pop
in
lods
gs
popf
test
push
pop
jl
in
ljmp
push
ret
es
inc
cmp
lcall
ret
mov
sub
test
xlat
jge
push
scas
aas
sub
aas
test
mov
jp
or
xchg
or
repnz
inc
subb
or
sbb
mov
mov
or
xchg
sbbb
leave
not
xchg
sti
mov
repz
mov
ret
into
mov
leave
mov
fs
mov
sub
or
push
subl
jge
icebp
sti
jne
out
mov
addb
dec
jle
pushw
ficoms
mov
fsubrl
inc
push
insb
mov
jb
add
adc
mov
popa
sub
cli
sub
inc
add
aad
nop
sahf
add
adc
xchg
mov
shr
shr
movlps
jecxz
addr16
jge
outsl
ss
jne
inc
lahf
or
push
shll
or
cmp
mov
cmpsb
cmp
mov
push
or
fidivrs
xchg
push
mov
insb
add
arpl
mov
xchg
and
xor
and
add
mov
imul
mov
xor
cmp
xchg
push
push
ret
mov
test
xchg
pop
mov
add
pop
pop
mov
push
out
mov
sbb
insb
shrb
sbb
sbb
mov
mov
test
icebp
and
mov
call
inc
and
dec
subb
sbbb
or
cmp
or
test
movsl
mov
pop
int
rcrb
scas
dec
sub
push
mov
push
sub
add
adcl
sbb
in
xchg
and
dec
test
outsl
pop
mov
xor
adc
mov
pop
daa
imul
or
xorb
faddl
sbb
or
jecxz
xchg
sub
jle
or
and
mov
adcb
cmp
push
xchg
out
mov
sub
dec
xor
xchg
int
or
faddp
mov
dec
fiaddl
add
sub
cmp
pusha
pop
xchg
pop
or
sahf
les
mov
xchg
sbbb
pop
xor
faddl
loopne
mov
push
sbb
mov
pop
out
aaa
dec
pop
cmpsb
negl
cli
xchg
add
mov
adc
enter
insb
into
lahf
data16
js
je
lea
or
cmp
mov
shlb
xchg
imul
subl
mov
ret
push
jne
pop
in
sbbl
fs
xchg
or
fcoms
add
xor
mov
es
in
add
jg
pop
fdivl
loop
jns
ret
or
xchg
pusha
into
mov
fcmovnbe
pop
mov
lds
icebp
or
outsl
sbb
push
sti
ss
cltd
sbb
js
or
addr16
push
mov
loopne
repnz
dec
mov
enter
inc
int3
mov
sbb
stos
call
jne
ret
lret
inc
push
or
adc
mov
orb
sahf
jle
cmpsb
daa
jg
dec
test
fldenv
gs
or
cwtl
and
sbb
cmp
pop
lea
dec
mov
cmpsb
fisubrs
scas
xor
repz
push
pop
pop
adc
dec
mov
sarl
push
add
movsl
pop
inc
mov
xchg
jecxz
jnp
mov
xchg
jbe
sahf
mov
mov
and
and
popf
add
stos
lods
sbb
sbb
fmuls
call
and
or
pop
sbb
mov
pop
cmpsl
sbb
pop
push
out
or
daa
mov
int
stos
icebp
push
mov
xchg
lret
and
push
jle
mulb
push
js
adc
fcomps
mov
add
mov
add
in
push
mov
sub
fstpt
add
pop
adc
out
lds
mov
push
popl
xor
out
icebp
sbb
xchg
arpl
xor
insl
into
cmp
insb
inc
rolb
xor
aas
dec
das
mov
jb
in
push
iret
mov
dec
and
or
mov
test
lret
jle
ret
daa
push
leave
popf
adcb
add
js
daa
mov
xorb
jno
fldl
mov
mov
mov
sbb
stos
rcrl
cmp
adc
dec
test
add
xor
or
sub
out
and
shrl
sbb
or
xchg
inc
in
je
adcb
xor
xchg
xchg
jl
mov
dec
xchg
shlb
inc
popf
mov
mov
xchg
aas
jb
mov
push
dec
cmpsl
test
sbb
pushf
cmp
outsb
jnp
inc
insb
addb
in
jmp
addr16
scas
mov
imul
repz
jns
add
out
shl
insl
xchg
shr
mov
ja
loope
fistl
and
inc
fstl
jns
mov
gs
mov
inc
mov
dec
sbb
sub
mov
lahf
mov
add
cli
daa
popf
rcrl
jp
or
stos
xchg
clc
or
psrlw
rclb
jl
mov
daa
test
sub
push
xchg
adc
pop
pop
jbe
mov
jo
sbb
add
fildll
mov
lret
lods
test
addb
lods
dec
pop
aaa
mov
jmp
mov
stc
imul
insb
subl
scas
rorl
sbb
sbb
int
xchg
jg
mov
daa
dec
adc
mov
es
push
mov
cmc
repnz
lcall
inc
sbb
cmc
or
stos
jg
popf
ds
mov
jae
xchg
push
dec
inc
jno
jno
lahf
dec
test
movsb
xchg
std
xchg
dec
mov
sub
scas
push
gs
sbb
mov
andl
jle
roll
out
mov
inc
xor
out
inc
test
mov
std
icebp
cmp
mov
andb
nopl
mov
cs
popa
push
push
js
cmp
push
scas
loopne
cwtl
cmp
cmc
scas
mov
hlt
movsl
fsubl
inc
xchg
mov
push
in
ret
mov
mov
out
loope
test
jle
hlt
mov
andl
lock
sahf
hlt
dec
out
push
jo
inc
loopne
sbb
popf
add
xor
clc
lock
add
hlt
or
movsb
sbbb
stc
ret
push
aas
cmpsb
push
ret
fiaddl
or
in
xchg
jp
pop
ja
add
enter
xchg
adc
pop
sub
add
sbb
mov
or
aad
pop
fadds
std
repz
push
sbb
outsb
testl
add
ret
push
jp,pt
or
outsb
jle
mov
out
lock
loope
mov
out
add
mov
fwait
cmp
rol
scas
test
pop
sbb
and
in
icebp
mov
fistpll
lret
shll
das
kmovb
cmp
repz
sbb
scas
shl
inc
xor
imul
mov
pop
sbb
test
add
sbbb
ficompl
lret
loope
pop
sbb
push
sti
and
push
mov
xor
or
inc
jbe
mov
cld
xchg
jno
push
mov
test
pop
daa
pop
jp
sbb
push
mov
sub
xchg
lods
mov
push
push
cld
or
arpl
jnp
push
iret
vfnmsubpd
xor
dec
dec
add
lds
mov
sbbl
mov
or
scas
xchg
bswap
fwait
loop
insl
mov
test
lret
lock
gs
cmpsl
mov
mov
pop
repnz
or
aaa
insl
and
cltd
nop
mov
ret
aaa
inc
push
daa
int3
loope
xchg
inc
pusha
cli
scas
sbb
jl
jl
sbb
pop
jbe
lea
inc
cmp
pop
ja
xchg
stos
pop
sub
sbb
int
in
dec
enter
mov
cmpl
idivl
je
pop
cmp
mov
out
inc
or
mov
jmp
xor
sub
cwtl
push
xchg
stc
push
adc
mov
lods
mov
lcall
pop
scas
icebp
jae
dec
jge
mov
dec
test
mov
fsubl
loopne
out
inc
cli
dec
sub
orl
mov
popa
mov
test
add
sbb
in
sahf
daa
andb
push
or
movsb
pusha
lahf
je
xchg
sbb
mov
js
adcb
das
pop
dec
jno
dec
xor
add
xchg
push
jecxz
mov
fcomps
sarb
and
jle
or
stc
addr16
bound
xor
dec
into
adcl
loope
icebp
push
cmpsl
pop
inc
shll
fnsave
cmc
inc
xor
fdivrl
or
cli
lret
leave
sub
lea
aaa
add
inc
pop
shll
rorl
popf
in
std
and
pushf
stos
arpl
push
imulb
repz
xor
mov
jg
and
into
gs
cs
stos
std
dec
pop
cmp
inc
or
jle
cld
ret
leave
rolb
and
enter
mov
jno
pushf
adc
daa
andl
mov
xor
adc
fcompl
push
int
mov
pop
jae
mov
ror
push
add
cmp
lcall
shr
pop
jge
push
jne
insb
xchg
andb
inc
and
ds
push
fldl
xchg
and
je
xor
or
sbb
mov
add
pop
pushf
cmp
lcall
xchg
pop
std
jle
stc
xchg
mov
jae
jp
jl
xchg
push
ficoml
mov
js
adc
mov
dec
pop
stc
bound
rclb
pushf
dec
ljmp
addr16
mov
add
jae
push
in
push
shr
and
jmp
jg
cmpsb
lds
cmp
sub
adc
jb
sbb
cli
push
out
icebp
popa
push
lcall
idivb
or
popf
inc
jb
scas
add
popa
lods
test
mov
ljmp
leave
sub
xchg
push
mov
push
mov
and
xchg
mov
stos
and
gs
out
jns
and
dec
daa
lods
lock
inc
shlb
test
adc
fists
rclb
and
add
daa
fistps
mov
gs
or
je
cs
ja
int
push
daa
mov
and
cmp
ret
mov
sub
mov
outsl
stc
hlt
movq
gs
add
idivl
adc
xchg
dec
or
or
sbb
out
push
repnz
xchg
inc
sbb
push
scas
xor
pop
inc
and
mov
jp
insb
inc
xrelease
lds
sbb
test
fmull
add
test
mov
mov
leave
dec
loop
and
or
and
sbb
mov
mov
mov
cmpsb
leave
cmp
xlat
repz
add
divb
mov
xchg
adc
pop
adc
inc
cmp
inc
xor
cltd
pop
mov
jo
xor
sahf
sbb
or
pop
xchg
ret
mov
xchg
bound
ja
adc
xchg
sub
push
or
scas
push
add
out
and
andb
incb
int
jecxz
hlt
test
dec
movsb
fcompl
push
sti
rcrl
cmp
ds
bnd
dec
int3
sti
addr16
insl
inc
or
push
sbb
jmp
cmpsl
das
sbb
sbb
test
add
in
add
or
mov
pop
aaa
push
cmpl
mov
sub
jbe
movsb
xchg
iret
lcall
loope
ret
arpl
push
mov
loopnew
mov
pop
stos
xchg
imul
and
incb
sahf
sub
sbbb
pop
rcrl
out
inc
mov
push
stos
test
or
adc
das
pop
ret
xlat
push
sbb
push
sbb
cmp
sti
add
scas
mov
dec
mov
in
cs
push
mov
lahf
orl
dec
sub
inc
cmpsl
inc
ret
movsl
data16
push
rolb
into
mov
pop
pop
cmpsl
sbb
push
sbb
mov
jl
mov
mov
sub
sahf
xor
sar
nop
inc
push
sbb
test
lods
int3
lods
xchg
mov
mov
push
jp
sbb
aam
add
mov
xchg
pop
mov
xchg
out
mov
gs
jmp
es
sbb
push
cmpsb
addr16
sahf
jecxz
jno
popf
cmp
inc
std
das
test
inc
push
mov
push
sbb
or
adc
lret
pop
addb
add
cmpsl
xchg
pop
int
adc
and
loope
cmp
shl
jo
add
mov
rcr
jnp
sub
push
push
pusha
dec
aad
lea
loop
push
or
dec
getsec
adc
cmp
adc
mov
test
stos
mov
pop
cmp
adc
and
xchg
xchg
leave
ffree
pushf
xchg
lds
test
test
add
test
ret
lcall
xor
enter
jne
les
fsubrp
xchg
out
pop
pop
push
cli
mov
xchg
scas
xchg
sub
sbb
push
stos
shll
js
ss
popf
inc
mov
lods
in
rcl
mov
mov
jl
xlat
stos
fdivl
aaa
sbb
pop
add
mov
rcrb
popa
fstl
icebp
int
jns
scas
push
cmp
jbe
add
pop
pop
push
mov
sbb
int
dec
pop
push
inc
dec
xchg
fmull
inc
or
orl
fs
mov
arpl
inc
push
test
sbbl
in
and
mov
push
fisubrs
aas
scas
mov
rcrb
xor
jl
les
montmul
cmpsb
add
ljmp
and
shll
fs
dec
into
outsl
outsl
dec
xchg
push
or
cltd
ret
aad
inc
and
pop
mov
jbe
scas
cmpl
in
inc
orl
inc
mov
pop
xchg
pop
xchg
mov
movsb
mov
lods
and
and
mov
scas
pop
xchg
and
stos
mov
in
xchg
aad
jle
jb
pop
mov
xchg
cltd
adc
xor
jae
dec
mov
sbb
dec
mov
jo
popf
movsb
push
imul
push
lret
lret
push
mov
cli
fcomps
pushf
push
jg
add
jmp
sbb
icebp
push
pop
fsubp
nop
popa
push
jge
pop
fdivs
jp
cld
jne
shr
cltd
push
lcall
add
out
insl
push
xchg
movb
mov
in
or
pop
pop
jmp
mov
xchg
inc
fists
jbe
add
outsl
dec
mov
lds
or
dec
fistps
add
sti
dec
dec
daa
cltd
loopne
adc
movsl
adc
pop
sub
gs
push
popa
fcmovu
mov
xchg
sti
adc
lods
imul
cli
add
jecxz
adc
arpl
jecxz
xor
int3
push
sbb
mov
cmpsl
adc
mov
mov
out
jae
lock
adcb
imul
shr
lret
xchg
mov
sub
push
xlat
out
sbbb
push
fcmovbe
divb
or
pop
mov
and
icebp
dec
add
sbb
pop
and
or
lret
hlt
mov
push
clc
pushf
mov
lock
inc
xor
lock
into
pop
xor
mov
mov
cld
xchg
or
sbb
mov
xchg
mov
inc
data16
leave
add
sbb
fistl
mov
sbb
loope
mov
push
add
icebp
pop
lret
mov
push
loopne
fldenv
mov
fisubrl
jne
sti
xchg
lods
xor
fcoml
sbb
adc
inc
data16
cmp
cmp
into
pusha
repz
shr
ja
mov
orl
mov
xchg
mov
fcmovbe
fwait
or
mov
adc
in
jmp
sahf
into
add
and
adcl
clc
mov
ljmp
sub
inc
rcrl
loop
rol
rcl
sahf
lret
cmp
jecxz
dec
cs
and
ja
or
dec
stos
lahf
lods
or
mov
add
dec
push
mov
mov
add
std
xchg
out
cmp
add
or
leave
pop
in
and
subl
insb
jbe
pushf
xchg
cmp
dec
mov
imul
fisubrs
cli
and
das
test
lock
sbb
gs
loopne
iret
cltd
rcr
out
mov
mov
or
insb
add
dec
iret
rcll
mov
pop
jl
add
in
jns
scas
push
in
in
jg
lret
shrl
and
push
mov
outsl
scas
sub
mov
popa
sub
mov
pop
mov
add
mov
popf
mov
leave
xor
call
inc
jnp
sbb
fimull
xor
sub
push
or
data16
cmp
je
dec
cmp
add
dec
add
push
rcl
jmp
mov
add
jo
orb
popa
and
push
mov
add
mov
mov
sbb
rorl
sbb
pop
xor
mov
adc
into
sub
jne
or
sbb
jne
mov
notl
fs
add
fdivl
cmp
aas
or
cmpxchg
push
sti
ljmp
fildl
repnz
test
dec
or
shl
loop
sbb
or
adcl
into
add
ret
call
jnp
fcoms
int3
popa
fisubrs
xchg
out
jmp
adc
loope
mov
sbb
insb
fstl
into
lock
jle
std
xchg
push
out
cli
testl
or
fdivl
sbb
jmp
in
add
loop
mov
sub
pop
mov
add
mov
sub
test
mov
lret
push
aad
jns
insl
xchg
mov
fwait
out
add
add
push
and
scas
icebp
inc
or
jle
fdivl
push
dec
cmp
pop
aam
and
or
cwtl
and
sbb
sbb
mov
jb
xor
push
or
dec
mov
inc
push
inc
jl
push
mov
add
cmc
data16
jae
xchg
push
imul
inc
adc
and
or
jecxz
mov
inc
aaa
lock
dec
jbe
arpl
mov
mov
cmc
loopne
mov
sub
mov
sub
test
inc
dec
punpckhbw
fsub
push
pop
push
mov
clc
orb
mov
mov
xor
pop
inc
push
std
aas
xor
je
or
in
mov
mov
cmpb
sbb
xlat
arpl
jl
cld
outsb
sbb
repz
cmp
mov
out
cmpsb
inc
cmc
mov
shrl
repz
cmc
xchg
cmpsl
push
mov
cmp
scas
inc
cmc
add
out
xlat
addb
and
movsl
add
pop
inc
fcmovb
loope
dec
jo
xor
sbbl
sub
and
fsubs
jge
mov
shl
xchg
popf
hlt
std
xchg
lds
sbb
test
divl
mov
in
push
sub
lahf
mov
push
xor
and
or
sar
xchg
mov
and
mov
into
adc
adcl
or
inc
jno
out
pop
mov
or
or
mov
sbb
inc
lret
adc
add
in
cmc
pop
es
pop
ljmp
cld
push
cmp
and
add
or
inc
sub
out
sbb
dec
cmp
popa
xlat
push
insb
dec
push
cmpsb
xchg
add
mov
sbb
push
dec
adc
mov
loope
adc
sbb
cli
scas
stos
xor
sar
pop
loope
mov
jge
popa
icebp
jne
shll
xor
jle
out
lock
daa
addr16
mov
inc
out
out
data16
add
jb
mov
xor
fnstsw
dec
sub
hlt
push
out
bound
add
mov
mov
subb
or
fadd
lret
sbb
dec
gs
fisubs
clc
or
add
inc
shrl
lahf
gs
xchg
mov
xchg
jecxz
and
add
mov
repz
cli
cmp
mov
add
pop
push
mov
js
iret
pusha
xor
sub
xchg
mulb
rcrb
subl
and
adcl
mov
arpl
add
mov
cli
mov
mov
or
adc
inc
sbb
into
push
pop
arpl
and
mov
imul
lret
adc
adc
int3
in
xor
inc
or
mov
lahf
lret
add
pop
pop
mov
out
xlat
cmp
jns
or
ret
add
aas
cmp
cmpsb
lret
push
dec
nop
mov
stos
lods
xor
mov
aaa
pop
xor
inc
or
mov
mov
xor
xchg
pop
mov
jae
xor
mov
movsl
sub
mov
je,pt
es
cmpsl
mov
add
cltd
cs
jp
jl,pt
inc
push
push
inc
jp
insb
out
ljmp
push
or
sbb
imul
and
cmp
dec
daa
sub
push
sbb
add
bound
test
push
adc
dec
test
sbb
cmp
rorb
flds
scas
mov
outsb
pop
mov
lcall
lds
les
mov
lret
xchg
testb
xchg
xchg
sahf
sbb
cmp
mov
push
addl
adc
mov
push
unpckhps
insb
or
sbbl
aam
pop
pop
cld
mov
sub
jb
mov
sbb
int3
and
shll
stos
nop
mov
adcl
add
xchg
outsl
inc
aas
mov
xor
fists
mov
sbb
jne
mov
icebp
stos
leave
ret
xchg
fisubrs
popa
xchg
xchg
sbb
pop
pop
cmp
aad
add
std
and
aam
lret
mov
lahf
xchg
jbe
sub
arpl
mov
insb
mov
mov
movsl
and
lock
ss
sbb
int3
adc
pop
xchg
mov
fildll
add
xor
add
and
and
add
test
dec
xchg
xchg
and
and
or
sbb
pop
and
into
imul
sbb
jne
aas
push
cmp
jnp
sbb
jmp
pop
sbb
pusha
mov
das
orb
cltd
add
sbb
shlb
push
push
test
fsubr
scas
mov
mov
push
aaa
mov
add
ret
adcl
les
push
mov
loope
movsb
and
and
mov
sarb
lds
idiv
int
adcb
pop
lods
adc
jge
mov
cmpsb
adcl
sub
jp
sbb
jne
icebp
jno
cmp
std
jge
ret
in
sub
lods
stos
lock
sub
out
das
add
jbe
loope
add
leave
push
pop
imul
mov
push
test
stos
int
mov
and
lcall
in
mov
stos
mov
arpl
fcoms
sbb
mov
leave
dec
scas
inc
aas
push
mov
es
mov
add
ret
shrl
xchg
aaa
mov
mov
out
mov
sbb
xor
pop
arpl
sahf
jo
std
and
out
lock
shrl
pushf
test
mov
outsl
pop
or
movsl
sbb
xchg
ficoml
stc
dec
nop
pop
sbb
xchg
mov
fstl
add
pop
pop
sahf
mov
cmp
and
sbb
inc
dec
fwait
push
or
test
shr
push
dec
sar
mov
xchg
hlt
gs
fildll
loop
ds
lret
add
sbb
insb
sbb
loope
dec
xor
jns
aad
sahf
test
pop
xchg
pop
cmpsl
jl
adc
dec
ret
jne
jecxz
fstl
add
jl
in
pop
cltd
test
push
mov
xchg
sub
imul
mov
dec
mov
mov
sbb
xor
ss
subb
sti
add
gs
xchg
js
loope
and
lods
sbb
push
add
sbb
inc
push
and
sub
pop
lahf
pop
adc
lods
mov
nop
inc
arpl
fisttpl
cmc
sbb
popf
xchg
sbb
rcr
mov
sarl
or
cmpsb
sbb
mov
jle
inc
sbb
mov
cmp
add
test
push
and
jmp
or
push
out
into
test
mov
sub
vaddps
jne
fidivs
pop
push
jo
and
clc
xlat
push
or
xchg
ret
push
mov
enter
adc
jmp
sub
add
lds
mov
fsubl
fnstcw
popa
or
sub
notl
ds
test
sbb
push
or
sbb
popf
fisttps
mov
push
and
and
out
es
fs
xchg
push
push
cmp
das
imul
jne
push
inc
cli
add
sbb
xchg
push
test
fldl
lahf
je
xor
lods
andl
dec
popf
dec
or
lcall
pushf
mov
punpckhwd
mov
mov
push
push
rolb
test
pusha
mov
pop
inc
gs
lret
loope
orl
mov
lret
fprem1
pop
xchg
addl
or
fs
mov
mov
xor
ret
movsb
pop
outsl
gs
dec
gs
enter
or
jmp
stos
daa
out
mov
jp
test
adc
test
add
arpl
pop
pop
testl
pop
lcall
test
ss
and
pop
mov
ret
mov
push
sbb
sub
insb
adcl
push
mov
pop
mov
outsb
inc
icebp
and
cli
sbb
dec
push
icebp
imul
add
leave
gs
icebp
sti
pop
push
mov
int3
xchg
out
int
pop
push
pop
dec
inc
lea
add
jne
test
cwtl
mov
sbb
out
adc
add
mov
mov
xor
subb
cltd
push
fisttpll
into
or
push
pop
fs
bound
push
dec
test
mov
sbb
and
xorl
daa
pop
ja
out
adc
lock
fwait
orb
push
pop
pop
fcoms
cmp
and
adcb
hlt
inc
mull
mov
out
test
aam
nop
in
lods
or
sub
sbb
mov
mov
push
dec
int
mov
xor
mov
adc
orb
pop
mov
inc
outsl
cwtl
nop
mov
jg
cmp
xchg
dec
nop
test
stc
add
ds
ret
cli
cmc
mov
pop
sbb
push
cwtl
in
fimuls
cmp
imul
neg
mov
cmp
repz
pop
clc
lds
mov
int
xchg
inc
hlt
pushl
dec
and
jnp
add
popf
inc
fcoml
adcl
push
sbb
orb
dec
pop
jp
mov
in
cmpsb
pop
adc
dec
cltd
or
and
xchg
loope
or
loop
jnp
push
xor
xchg
pop
push
jp
jne
addb
jns,pn
push
cmp
stc
push
daa
xchg
push
pop
sbb
cmc
sti
int3
jb
adc
dec
push
cmpsb
adc
mov
sbb
sahf
addl
test
jo
imul
push
sbb
jge
xor
push
pop
or
inc
test
fisubrs
sbbl
les
int3
scas
ljmp
inc
xchg
shll
add
pop
xchg
rorl
out
mov
sbb
pop
repnz
xchg
aam
dec
test
les
loopne
dec
outsl
jecxz
jae
add
sahf
add
inc
push
ja
loop
xchg
adc
insb
push
cwtl
mov
or
mov
push
popa
jnp
fwait
out
adc
mov
in
movsl
cmpb
testl
push
in
gs
push
cmp
adcl
mov
adc
fisttpl
loope
mov
or
insb
add
fidivl
and
sub
push
lods
cmc
cld
dec
scas
adc
jp
xchg
popa
cmp
inc
mov
out
pusha
imul
dec
andb
ret
jmp
push
fidivl
inc
mulb
xchg
aaa
ds
or
dec
lock
jl
cmc
out
and
rep
xchg
ja
lcall
inc
das
mov
mov
cmp
outsb
mov
mov
mov
adc
sbbl
add
int
subb
xchg
push
out
lret
sbb
and
push
mov
std
addb
add
fwait
lcallw
das
xchg
aas
inc
les
adc
fnstcw
and
sub
int
loop
dec
mov
cmp
xchg
xchg
pushf
push
mov
pusha
add
lods
loope
mov
pop
lahf
gs
iret
sbb
aaa
cltd
pop
icebp
xchg
ficoml
out
push
cmp
xchg
sbb
jns
fimull
aaa
dec
inc
stc
ljmp
xor
mov
out
xchg
ficoms
fmull
das
rcrb
push
xchg
or
repz
mov
roll
cmp
jmp
push
lods
jmp
lret
pop
test
pop
test
sbb
out
push
mov
add
cli
jnp
dec
inc
cmp
jle
add
lret
loopne
pop
pushl
repnz
testl
ja
dec
inc
pinsrw
data16
addr16
gs
dec
cld
xchg
xchg
xor
pop
mov
pop
fstl
mov
add
adc
stos
cld
sbb
cltd
push
jl
das
cs
popa
inc
cld
or
mov
insl
mov
cmc
cmp
xchg
lods
popa
or
cltd
movb
cmp
in
pop
lcall
push
out
out
pop
out
xchg
mov
das
push
ljmp
psraw
cwtl
js
js
push
or
ja
arpl
cli
dec
test
lock
xchg
sbb
fcomp
shll
mov
pop
sbbl
fcoms
out
jge
flds
xchg
dec
mov
and
push
and
ds
pop
adc
cmp
adc
adc
mov
int3
test
add
popf
xor
jnp
adc
push
lock
js
lea
jmp
adc
sti
mov
repnz
push
fildl
jp
repz
cltd
inc
adc
fwait
pushl
jnp
mov
mov
push
add
imul
mov
mov
mov
push
add
test
xor
sbb
jp
push
mov
enter
or
ljmp
or
lds
js
hlt
lock
adc
pusha
xchg
xor
sub
iret
cs
loope
adc
jo
mov
cmc
xchg
mov
push
xor
daa
fmul
lcall
ret
fdivl
mov
jg
or
sbb
rol
push
stos
mov
xchg
in
add
ror
aaa
fdivrp
inc
xor
xchg
mov
xor
sarl
add
mov
and
jbe
inc
mov
add
call
fisubrs
mulb
sbb
sub
popa
insb
daa
aaa
and
mov
or
mov
sbb
cmpsb
inc
data16
mov
pop
sub
mov
mov
sbb
pop
inc
cmp
loopne
xor
mov
gs
int
adc
mov
add
iret
xchg
ret
xor
jp
int
inc
es
push
mov
ss
xchg
daa
das
loope
repz
xor
jge
inc
add
in
xor
jl
insl
addr16
jmpw
xor
es
test
sbb
pop
test
inc
es
mov
dec
ss
jl
orl
imul
add
movsl
gs
repz
cmp
add
subl
cmp
add
inc
out
js
jge
ret
push
cmp
imul
inc
ret
int3
cli
or
sub
xchg
call
movsb
mov
gs
pop
sub
andb
filds
loopne
int
loop
adc
test
mov
repz
movsl
inc
pushf
rep
cmp
mov
xor
adc
and
movsl
jge
cmp
in
add
fdiv
add
outsl
cmpb
push
lcall
mov
xchg
add
push
mov
insl
movsl
lcall
add
mov
jno
fistpl
pop
push
cmp
cbtw
scas
sbb
mov
or
sbb
cs
jg
cltd
push
dec
push
hlt
push
pop
mulb
and
add
outsb
test
and
xor
cwtl
adc
mov
fiaddl
push
jbe
loopne
idivb
mov
dec
int3
pop
daa
gs
inc
push
add
dec
ds
mov
sub
pop
pop
aad
sbb
in
add
jns
add
test
andl
imul
stc
sbb
icebp
cmp
inc
pop
dec
movhps
sbb
sbb
xorb
add
gs
and
fisubl
test
sbb
adcb
mov
mov
mov
iret
dec
sbbl
mov
es
push
test
or
dec
mov
cmp
mov
outsl
rclb
pop
cmp
cmp
pusha
lods
dec
test
jp
sbb
movsb
icebp
jno
sub
xchg
pop
and
or
cmp
test
push
in
roll
inc
cli
lea
outsb
sbb
mov
repnz
jp
ret
push
add
jnp
sub
gs
pop
test
sbb
imul
add
mov
push
mov
mov
aaa
sub
mov
popf
fcmovnu
push
and
cmp
andl
pusha
adc
fwait
adc
push
stos
nop
mov
movsl
lcall
imul
jbe
push
pop
test
movsl
fdivp
pusha
int3
sbb
ficoml
xor
jle
mov
xor
push
out
xchg
xchg
dec
jmp
mov
mov
mov
shrb
jle
jb
das
sub
aad
push
dec
sbb
fiaddl
xchg
jge
jle
lea
adc
jbe
fwait
movsl
dec
stos
pusha
pop
pop
sbb
mov
adc
sbb
push
cmp
in
pop
inc
outsb
mov
mov
and
mov
aaa
add
add
and
push
and
push
inc
lcall
sbb
or
sub
sub
pop
jecxz
out
aas
bound
es
inc
push
mov
sub
test
outsl
andl
fldl
xchg
xchg
cwtl
cmpsb
sbb
stos
ret
fstps
loope
cltd
loope
push
mov
and
lret
xchg
out
jno
sub
aaa
mov
xchg
jge
es
pop
std
add
out
jnp
pushl
lahf
mov
mov
jns
outsl
mov
sbb
fsubs
in
mov
xor
jns
xor
mov
push
add
loope
sarb
orps
shll
pusha
pusha
pushf
dec
push
aaa
or
add
push
ret
jge
leave
push
adc
rcrb
sbb
out
push
ret
sub
dec
dec
lret
out
mov
mov
flds
cltd
ret
jne
lods
push
mov
sub
jge
xchg
cmp
jge
sbb
add
lret
jmp
push
ljmp
enter
lock
int
pop
ljmp
idivb
add
pop
addr16
dec
lcall
jns
jnp
loop
std
and
sahf
iret
xor
mov
jp
mov
lea
add
sahf
pop
or
and
pop
stos
mov
in
push
push
inc
movb
cmp
mov
aas
lock
jnp
in
and
enter
dec
test
mov
mov
pop
or
dec
lcall
out
xchg
xor
jmp
enter
xchg
add
test
lahf
popf
and
addb
gs
xor
lret
scas
and
pop
xchg
push
adc
in
sbb
add
shlb
out
xchg
xchg
sbb
lds
dec
aad
inc
sub
push
jge
push
ret
lds
shr
mov
sbb
sahf
xor
fsubl
bound
cltd
imul
jne
or
imul
xchg
push
add
clc
fstl
dec
xchg
push
aaa
ss
and
cmc
mov
sbb
rcrb
adc
and
jle
push
call
mov
xor
stos
les
xchg
test
cld
lret
xchg
jp
dec
outsb
sub
add
mov
fcoml
push
test
mov
stos
lahf
mov
jp
adc
rol
test
sbb
pop
xor
sbb
xchg
dec
or
mov
push
rcpps
test
in
out
sti
fstp
sarb
lret
ret
mov
push
test
push
lods
push
and
pop
cmp
pop
std
out
scas
nop
add
or
jns
cmpsl
dec
sub
insb
in
inc
add
xor
push
jle
outsw
std
les
pop
lret
icebp
dec
sbb
inc
mov
push
inc
addl
jae
push
pop
sub
push
out
addr16
aad
les
gs
xchg
xchg
jmp
shll
daa
dec
push
inc
push
or
jns
push
or
and
dec
sbb
inc
fbld
inc
ffree
jbe
lods
insl
mov
out
clc
and
sbb
xchg
cmp
ret
das
lods
sarl
and
push
out
fstpt
sbb
ds
lret
sbb
lods
lret
es
idiv
insb
aaa
cmc
push
andb
je
jne
test
inc
inc
enter
test
popf
in
imul
dec
fwait
pop
add
xor
cltd
mov
xchg
jb
mov
adc
out
xchg
data16
pop
lods
inc
sub
cmpsb
fstl
sub
mov
inc
sub
push
push
ljmp
adc
sub
into
psubb
popa
or
das
push
mov
mov
jns
mov
out
pop
movsb
sub
cmp
imul
cmpb
repz
cltd
lods
sbb
les
push
gs
out
dec
inc
scas
add
ja
mov
adc
mov
push
lock
xchg
sub
mov
mov
jge
jno,pt
fst
out
fs
fistps
in
movsl
sub
ficoml
xchg
mov
inc
mov
dec
xchg
mov
cmpsb
jo
js
and
jecxz
add
mov
insb
jg
cmp
sub
in
lods
jne
dec
fstl
mov
jl
inc
enter
inc
mov
ficoms
xlat
scas
xchg
or
jno
inc
push
mov
sbb
fwait
jp
adc
fistl
push
add
jbe
aad
add
dec
xchg
xchg
les
mov
leave
stos
adc
addr16
jae
jp
leave
aam
jp
test
sbb
sahf
lret
cmpsb
popf
pop
add
xor
fdivrs
mov
in
sub
jnp
inc
mov
mov
imul
xorl
leave
push
sub
sbb
pop
dec
sbb
push
movsb
out
sub
fcomps
fucom
scas
sarl
xor
imul
out
mov
sbb
pusha
inc
cmp
cwtl
lods
daa
cltd
and
add
xor
adc
sub
push
mov
and
lea
out
loop
out
sub
jecxz
outsl
jno
stos
xchg
cmpsb
fistps
mov
jo
es
arpl
loopne
pop
incl
mulb
pop
adc
jle
sub
into
psrlw
push
mov
lods
lock
subl
mov
fisubrs
mov
sub
xchg
mov
gs
cmp
subl
jno
or
test
cmp
lahf
mov
xor
cmp
rol
js
xchg
cltd
mov
cwtl
sub
insb
cld
push
test
inc
push
and
adc
add
lret
cwtl
cmc
mov
es
push
out
xchg
sti
jp
fsubp
popfw
mov
gs
mov
inc
cs
and
mov
sub
cmpsb
xchg
push
outsl
imull
cmp
adc
inc
adc
and
cmp
push
and
push
inc
push
or
lahf
mov
push
sbb
fdivrl
cmp
xchg
lahf
repnz
stc
mov
stos
inc
stos
imulb
xchg
xor
pop
nop
and
repz
push
jne
pop
pop
fnstcw
or
out
out
scas
loop
jg
insb
cmp
test
insb
add
rcrb
mov
pop
push
icebp
mov
adc
mov
jp
sbb
jg
les
adc
add
inc
lret
fcmovne
xchg
sbb
call
push
push
xlat
jl
and
push
test
mov
and
mov
int
cli
or
sub
popf
push
sbb
sbb
loope
pop
stos
adc
jp
loope
dec
adc
xor
test
stos
push
ret
aam
or
jne
insb
jnp
aam
sbb
mov
push
pop
push
roll
dec
lock
lcall
out
inc
das
ret
faddl
pusha
sti
in
jg
mov
adc
insl
into
mov
ljmp
and
sub
mov
or
fucomp
enter
sub
test
test
mov
mov
dec
dec
das
xchg
xchg
addb
pop
addr16
pop
sahf
gs
cmpsb
fisttpll
mov
lods
push
pop
sbb
pop
cmc
sub
enter
and
hlt
cmpsb
shl
gs
addb
shll
addl
xchg
int3
xor
and
pop
push
xchg
int
or
lods
add
lods
jne
push
pop
push
mov
mov
dec
imul
je
lock
pop
movsl
push
out
xchg
mov
add
mov
roll
cmp
mov
cmc
inc
ficoms
divl
sbb
jne
out
movsb
test
out
adc
add
dec
push
sub
or
jp
adc
lret
jno
inc
ret
jne
mov
test
cmp
andl
out
sub
cltd
pop
push
scas
add
jno
ss
and
jle
mov
xorl
mov
icebp
jmp
mov
mov
call
loopne
jl
add
and
jo
add
mov
mov
addl
mov
out
mov
mov
xor
pushf
insl
dec
xchg
push
das
out
sbb
mov
add
add
imul
dec
and
jne
lcall
idivl
xor
adc
push
xchg
sbb
adc
jne
inc
add
pop
decb
lods
dec
jmp
or
add
addr16
sahf
add
dec
ljmp
xchg
sbb
mov
outsb
repnz
xchg
popf
imulb
mov
pop
test
adc
or
jmp
inc
lea
dec
and
das
jge,pn
push
pop
fimuls
ret
or
addl
enter
loop
lock
sub
inc
add
xor
push
roll
out
into
xor
push
fmuls
sbb
push
notb
rolb
cmp
inc
xor
aas
loopne
push
and
rorl
cmp
cmc
and
sub
mov
push
test
clc
lahf
push
or
mov
cmpsb
fidivrl
mov
xchg
dec
icebp
jne
test
rorb
sbb
push
push
or
mov
jne
push
std
xchg
and
gs
fistpll
ja
sbb
mov
jo
push
testl
f2xm1
push
lahf
add
xchg
mov
cmc
inc
jecxz
mov
inc
xlat
mov
jnp
jle
in
and
fwait
sub
add
rol
pop
test
shrl
jnp
dec
jns
mov
loop
jg
or
jno
outsb
inc
cmp
pop
push
fidivrs
std
lcall
insl
mov
mov
xor
je
and
or
xchg
dec
cmpsl
lods
sub
sub
test
lods
rcrb
ljmp
push
xchg
into
stc
fcoml
jl
repnz
daa
cmpsb
stc
loop
sbb
dec
lcall
lret
and
sahf
pop
addr16
jne
icebp
popa
adc
icebp
jne
push
sbb
mov
gs
lods
sbb
add
ror
mov
xchg
mov
adc
pop
jle
orl
loop
pop
or
inc
dec
mov
imul
mov
xchg
inc
mov
push
out
dec
js
mov
cltd
popf
dec
pop
ds
sbb
movsb
lock
and
xchg
dec
popa
outsl
xor
orl
dec
fdiv
insb
add
ja
loopne
fndisi(8087
dec
sub
mov
pop
dec
scas
mov
arpl
aaa
cld
xor
jle
popf
hlt
xor
cmp
fildl
stos
loope
push
and
push
sbb
out
sub
mov
gs
testl
sbb
jle
push
loope
push
stos
push
insb
pop
push
aaa
or
movsl
and
adc
stc
pop
data16
call
in
stc
mov
out
xchg
fistpl
stc
pop
cmpsb
pop
pop
das
sbb
inc
hlt
jl
scas
xor
sarb
inc
mov
add
mov
cld
xor
popa
int3
subl
and
dec
dec
popa
push
mov
mov
mov
fdivs
sbb
inc
lea
mov
in
add
out
les
test
loop
dec
dec
into
mov
inc
jnp
xchg
cmpsb
lock
push
sub
cmpsl
pop
cmp
int
inc
push
sbb
cltd
gs
imul
cmpsb
loope
stc
sub
or
mov
cmpsb
xchg
jns
ret
xchg
dec
cmpsb
push
and
fbstp
ja
push
or
jg
inc
stos
das
test
cmp
add
popa
shr
pop
xor
les
add
shll
jmp
push
xor
lahf
push
xor
jg
cmpsl
fsubrl
pop
mov
jecxz
sbb
xor
lods
dec
imul
inc
jmp
inc
orb
out
add
leave
outsl
mov
mov
sub
dec
int3
mov
cli
insl
jecxz
push
push
push
addl
xchg
pop
pop
mov
bound
lret
stos
cmp
mov
arpl
fcmovne
jae
lea
addl
testb
or
sahf
sub
add
mov
or
xor
syscall
add
repnz
lock
std
adc
int
cld
addb
inc
out
arpl
or
cmp
lods
int
push
xor
adc
cmp
jmp
nop
or
sub
psadbw
cmp
push
add
mov
daa
sub
insb
sbbb
leave
sahf
sub
jecxz
inc
je
xchg
and
pushf
mov
xor
test
mov
xchg
inc
jo
pop
jge
pop
jmp
cmp
scas
into
xor
inc
sub
jp
pop
pop
psrld
int3
stc
into
mov
outsb
sbb
lods
pusha
sub
dec
cmp
push
jecxz
xchg
int
out
push
out
das
out
cltd
xor
out
inc
adc
in
fdivl
dec
or
xchg
nop
add
push
cmpsl
push
cmpsl
xchg
mov
mov
lock
pop
and
and
mov
lahf
dec
xor
fisubl
xor
int3
adc
dec
dec
scas
push
mov
xchg
lods
mov
cmpb
test
push
adc
push
cmpsl
fs
mov
cmpsl
and
inc
dec
cmp
xor
dec
ja
daa
push
loopne
pop
popl
rolb
add
dec
xor
pop
pop
imull
mov
xor
shll
inc
pop
das
test
les
mov
add
jnp
jg
hlt
inc
aaa
bound
jge
fsts
add
mov
add
fs
fstpl
aam
mov
mov
jo
xor
xchg
cmp
inc
aas
sbb
decb
sbb
xchg
or
add
aad
xchg
lea
cld
sub
mov
mov
cmc
xor
repnz
or
repz
test
inc
mov
subl
xchg
mov
or
test
adc
fldcw
mov
adc
push
lret
xchg
push
and
push
sub
and
pcmpeqw
popa
mov
fwait
jno
mov
xchg
adc
add
add
jnp
divb
fwait
ret
fcomps
daa
out
add
add
jnp
and
xor
or
fisttpl
xor
push
shr
mov
and
repz
imul
mov
sub
xlat
push
inc
sbb
sub
clc
insl
dec
and
cmpsl
dec
xchg
shrb
leave
sub
mov
adc
mov
bound
and
push
sbb
sbb
xor
cld
in
lods
out
cmp
fmuls
imul
add
into
and
xchg
add
loope
jmp
sub
xchg
lret
inc
push
cmp
push
xchg
jle
jg
fwait
call
addr16
sti
mov
cltd
dec
sahf
push
jo
xchg
stc
xor
out
xor
cli
pusha
mov
jno
add
jne
mov
jmp
jne
xchg
adc
subb
jmp
lret
jp
lea
xor
negl
lret
dec
mov
in
pop
add
xchg
cltd
sbb
imul
mov
scas
sbb
dec
adc
jge
jmp
mov
enter
mov
xchg
lock
cmp
mov
repz
xorb
sahf
movsl
cmpsl
ret
adc
test
push
or
xor
jmp
shll
sarb
push
mov
ljmp
stos
gs
pusha
int3
rcrb
in
push
mov
sub
jge
or
insb
fwait
mov
sbb
sub
jle
and
mov
fistpl
inc
cmpsl
icebp
push
push
mov
cmpsl
cmpb
jbe
inc
test
and
push
sub
push
inc
mov
jne
out
les
aaa
ret
in
les
push
gs
roll
in
imull
and
loop
and
mov
push
imul
divb
mov
pusha
loope
or
xor
or
and
mov
ret
jmp
out
inc
in
cmp
insb
out
jp
add
adc
inc
insb
push
sub
data16
sbb
je
fsubs
jmp
les
or
cmp
mov
mov
je
add
xor
jno
or
les
xchg
testl
add
test
aad
jne
sbb
ret
lcall
sbbl
imul
and
xor
or
sbb
mov
and
push
inc
mov
mov
sbb
outsb
push
int3
lods
rcll
push
inc
jecxz
add
inc
fstpl
fbld
fdiv
pop
clc
out
iret
add
stos
lahf
dec
test
mov
mov
cmp
repnz
pop
test
popf
imul
cmp
xchg
add
push
push
les
and
add
push
sub
test
mov
jb
mov
or
rclb
mov
cmovnp
jb
es
in
inc
aad
push
inc
sub
imulb
pop
fsubrl
test
push
dec
jmp
lret
pop
fbld
lds
sar
pop
cmp
pop
repnz
sbb
sub
aas
hlt
push
jns
lcall
cwtl
loope
sbb
mov
inc
pusha
in
push
xchg
inc
stos
add
adc
jle
mull
mov
aaa
into
xor
pushw
push
xchg
mov
xchg
push
iret
xchg
xor
ret
jne
or
and
fiaddl
mov
mov
idivb
xor
mov
jbe
mov
in
outsl
xor
enter
test
sbb
insl
inc
sub
jg
sbb
add
and
and
xchg
mov
test
mov
mov
pusha
xlat
loope
jp
movsl
mov
aad
xlat
sahf
jb
ret
out
scas
push
add
test
loope
sub
subl
inc
pop
fadd
inc
out
rcr
cmc
lret
in
sub
mov
fs
xchg
orl
fsubrs
push
int3
dec
int
pop
iret
not
sub
mov
data16
out
dec
add
push
pop
stos
outsl
add
ret
leave
movsb
or
out
adc
inc
pop
pop
mov
xchg
fnstcw
jl
loopne
in
adc
cs
sbb
mov
cwtl
xor
loope
push
les
fadd
ja
and
sub
jbe
push
push
sub
sbb
les
cli
fucomp
push
adc
sbb
divb
loope
inc
leave
repnz
xchg
mov
xor
pop
inc
int
aam
sub
in
jno
adc
repz
les
or
stos
sub
out
pop
popf
xor
lret
es
pop
push
out
cmovb
aas
mov
orb
cltd
imul
popf
adc
scas
cmc
stos
push
xor
dec
sbb
add
in
fst
shll
cmpsb
int3
mov
gs
add
or
dec
inc
cmp
xchg
leave
cmp
and
pop
orl
xchg
enter
push
pop
imul
fcom
sahf
jmp
rcll
dec
inc
mov
scas
and
mov
xor
loop
pop
add
inc
xchg
mov
adc
and
inc
and
into
nop
dec
into
mov
test
cmp
mov
cmpb
jecxz
stos
lds
jo
rcr
std
xor
mov
xlat
push
mov
int3
daa
inc
lret
mov
js
inc
outsl
sbb
jp
fidivs
mov
and
inc
enter
pop
lret
test
sbb
cmp
popl
out
adc
rol
fsubs
out
xchg
or
sub
dec
fldt
popf
inc
dec
xchg
jo
aad
push
fists
ljmp
stc
cmpsb
sbb
lret
and
insb
push
popa
xor
aaa
pop
ficoms
mov
movsl
clc
repz
push
jns
cli
pop
or
js
dec
shl
pop
and
or
mov
push
imul
js
mov
adc
mov
or
mov
out
outsb
push
mov
push
xchg
adc
push
sbb
movsb
call
inc
sub
lahf
cmp
inc
data16
xchg
add
lods
push
and
jb
xchg
inc
jg
add
roll
stc
stos
or
lret
push
pop
out
js
data16
jne
test
add
mov
loope
dec
es
aaa
xor
insb
in
add
cwtl
aas
inc
rcll
enter
dec
aas
sbb
push
fmuls
add
inc
gs
stos
xor
sbb
popf
das
cltd
lods
push
data16
loop
loope
fisttpl
pop
pop
lret
hlt
mov
int
add
iret
cwtl
adc
lods
or
mov
adc
dec
movsb
jnp
add
cmp
imul
sbb
loope
sbb
push
pop
sbb
cmp
mov
ret
dec
loope
lds
cmp
xchg
je
or
push
mov
cmp
sbb
stos
mov
enter
mov
cmpsl
imul
dec
cmp
repz
sub
orb
call
data16
lods
bswap
ljmp
push
dec
xor
ds
mov
repnz
cmp
pop
sub
adc
bound
inc
inc
addr16
sahf
sbb
pop
mov
lcall
push
fwait
sub
ljmp
dec
gs
adc
mov
shlb
xor
dec
inc
inc
jno
in
jns
dec
decb
xchg
xlat
and
aas
mov
inc
or
cmp
incl
sub
insb
movl
add
loopne
jmp
andb
xorb
loope
fs
movsl
bound
adc
pop
cs
mov
mov
repz
and
lds
add
mov
movsl
jge
xchg
add
nop
push
or
pop
into
shrl
insl
lods
xor
subb
push
jne
jb
int
repz
adcl
pushf
faddl
xor
or
mov
sbb
inc
movsl
cmc
xchg
sbbb
push
inc
xor
jmp
or
fsubl
inc
jo
or
pop
dec
lcall
xchg
pop
mov
mov
pop
shl
push
les
lods
test
mov
or
mov
sbb
cmpsb
test
fdivl
shll
pop
outsb
lock
jl
mov
stc
negb
movsb
add
lods
xchg
mov
dec
inc
adc
or
lock
add
cmp
dec
stos
test
sub
pop
lods
xor
mov
jp
ret
popf
sub
sub
and
test
insb
push
push
inc
int3
and
dec
lret
pop
mov
ja
test
mov
out
add
mov
out
sti
xchg
jl
loop
nop
aad
cmp
push
xorl
sbb
sub
adcb
mov
rcrl
or
mov
stos
gs
ljmp
das
fiaddl
insl
push
adc
sub
or
mov
cwtl
xchg
repz
imul
lds
pop
or
pop
out
fdivrs
cltd
imul
push
in
sub
mov
lcall
push
push
fcomps
add
sbb
cmpl
stos
xor
addr16
fmull
xor
in
and
xchg
mov
sbb
mov
ret
sub
pop
lock
sbb
rcrb
gs
out
lea
cwtl
or
push
stc
dec
mov
mov
sbb
pop
or
mov
adc
in
xchg
sbb
inc
xor
test
and
pop
fdivr
cmp
mov
icebp
mov
mov
sub
dec
pop
or
xchg
shll
fdivrs
push
lret
cwtl
ud1
and
inc
insl
popa
cltd
in
inc
lret
sbb
add
lea
call
das
dec
ret
mov
cli
rcll
dec
push
mov
mov
xchg
adc
xchg
dec
push
insb
push
mov
mov
cli
add
xchg
dec
ja
dec
sbb
js
in
push
cmp
xchg
aaa
mov
testb
cmp
pushl
mov
fdiv
fsubs
jne
mov
stos
and
add
rcl
rcl
mov
adc
das
mov
xor
nop
sbb
lcall
mov
addr16
aaa
sub
ret
or
aaa
rcl
xchg
cmpb
ret
dec
add
fstl
adc
ret
cmpsb
mov
cmc
inc
sbb
mov
fsubs
cltd
nop
or
add
ret
ja
cmp
mov
cwtl
incl
mov
mov
mov
add
inc
mov
dec
push
icebp
pop
rcrl
cs
enter
sub
mov
call
stos
or
popf
mov
mov
and
push
mov
shrb
cmp
adc
push
outsl
les
fsubr
push
mov
inc
iret
mov
inc
dec
pop
or
or
rcll
cmp
imul
fisubl
clc
dec
jmp
iret
add
insl
out
into
incb
insl
sub
cli
xchg
fistpll
cs
std
scas
fdivrs
xor
divb
inc
hlt
sub
mov
sti
pop
hlt
out
ret
imul
adc
and
sti
icebp
push
sbb
leave
data16
add
adc
push
push
sbb
lds
sbb
mov
sub
dec
out
pusha
dec
sbb
push
push
shlb
cmp
lcall
pop
jbe
negl
and
sub
popa
dec
cmc
pop
fwait
and
mov
mov
xchg
data16
cld
sti
pop
jns
pop
push
out
imul
rorl
push
cwtl
push
jae
cmp
shlb
sub
es
imul
jmp
cmpsb
and
or
ja
movsl
mov
sbb
sbb
jnp
in
aam
add
pop
in
lods
es
add
pop
jmp
popa
xlat
inc
sub
or
imul
push
out
jne
pop
imulb
mov
mov
insb
jp
inc
cmp
xchg
inc
sub
notl
mov
or
fnstenv
stos
pop
push
sbb
xor
lods
xchg
cs
add
scas
pop
mov
mov
xchg
pusha
add
dec
jns
call
sub
rolb
cli
lcall
insb
movb
out
jmp
lods
xchg
sub
lret
popf
sub
inc
fiaddl
jns
pop
push
sahf
mov
xchg
int3
push
fld
fs
pop
in
or
xor
daa
aaa
xchg
movsl
add
push
scas
xor
imul
inc
sbb
cmpsb
pop
inc
push
jb
push
xchg
cmp
icebp
xchg
push
aas
dec
hlt
rep
stos
mov
popa
gs
jo
sub
imul
jbe
pop
stos
loopne
mov
jb
push
out
sub
push
shll
dec
inc
pop
jle
jbe
add
addr16
js
div
aaa
push
adc
dec
xor
cmp
rolb
xchg
push
xchg
or
jp
insb
sbb
dec
mov
sbb
out
int
loop
pop
pop
ja
idivb
xchg
mov
push
lds
or
rcrl
test
xor
add
and
leave
push
mov
mov
add
mov
out
sub
xchg
fmuls
stos
or
mov
lods
inc
daa
push
jge
sbb
mov
invd
arpl
adc
add
push
add
xlat
jge
cwtl
jge
lret
push
sbb
jae
imul
jnp
arpl
aam
mov
rcrl
pop
push
stc
sbb
inc
or
and
or
cmp
xchg
stos
negb
jo
add
inc
xchg
outsb
testb
sar
dec
leave
fldt
icebp
mov
out
dec
int3
push
inc
mov
mov
inc
test
mov
stc
shl
dec
sahf
cmp
push
ret
addl
mov
cmp
outsl
shll
adc
mov
dec
jge
sbb
mov
jne
into
sbb
fdivr
aaa
scas
aas
inc
cli
mov
fadd
and
gs
adc
mov
xchg
pop
add
mulb
rorb
sbb
mov
mov
adc
mov
lahf
mov
scas
sub
gs
sub
sbb
lea
xchg
xor
inc
push
adc
cltd
mov
xor
pushf
popf
popf
pop
jno
movsb
mov
mov
nop
divb
js
fistpl
xchg
imul
xor
cmp
and
mov
mov
lods
add
pop
cmp
lea
into
subb
scas
push
out
xor
cmp
and
sbb
in
dec
adc
mov
dec
jge
xchg
sbb
popa
andb
sbb
gs
sbb
add
pop
int3
jne
sbb
push
cmp
xchg
fsubr
sub
cld
xchg
push
pop
das
push
xor
and
pop
cmp
clc
inc
or
icebp
add
push
or
popf
add
xchg
cmp
or
out
cmpsl
push
inc
jno
pop
cmp
sub
pusha
add
mov
adcb
lods
mov
dec
rcrb
push
or
sub
lods
test
shll
cmpsl
jne
dec
jbe
sub
jo
mov
cmpsb
scas
inc
out
or
mov
sbb
sub
jge
sti
leave
xchg
ret
fsubl
in
pop
xchg
loope
add
into
inc
int3
fld
loop
ds
or
pop
adc
cmpsb
push
push
int
jecxz
scas
push
sbb
xor
sbb
sbb
jge
jne
imulb
inc
mov
and
loope
inc
mov
or
jne
popa
push
cmp
xchg
movsb
sbbb
inc
ret
and
je
int3
lock
dec
subl
inc
cmc
or
scas
test
dec
dec
repnz
daa
sub
push
or
and
fnstenv
clc
shlb
sbb
sub
xchg
out
pop
fildll
insl
sub
and
repz
stos
xchg
bound
sbb
sbb
cmc
jg
cmpsb
xchg
std
or
sbbb
addr16
sub
repz
test
push
cmpsl
xor
fisubs
mov
popf
out
imul
xor
or
repnz
push
cmc
sahf
data16
popf
mov
adc
xchg
jg
mov
aam
in
inc
popl
icebp
add
dec
cwtl
push
push
sub
mov
push
ficoml
sub
xchg
lahf
orb
int3
adc
inc
dec
sbb
push
add
xchg
pop
push
push
jne
mov
pusha
push
dec
ret
repnz
rcrl
inc
inc
aas
and
cmp
add
sub
lods
test
jno
gs
rcll
add
inc
jns
out
xor
cmp
dec
sbb
shlb
push
data16
add
mov
insl
fcmovu
ret
fcompl
mov
mov
sub
sub
cwtl
js
xchg
leave
dec
test
adcb
xchg
negb
inc
popa
repnz
pop
and
fs
test
je
mov
loop
in
scas
lods
or
push
pop
push
movb
aas
das
jle
sbb
pop
xor
mov
out
mov
mov
loope
shlb
and
arpl
rcrl
inc
dec
roll
adc
inc
sub
inc
inc
sahf
dec
or
mov
mov
cmp
repz
adc
or
jae
add
fsub
shl
mov
pushf
mul
lods
xchg
lret
or
push
xor
adc
or
aas
or
faddl
jae
data16
jp
repnz
mov
adcl
add
jns
inc
inc
testb
pop
jne
mov
cltd
std
sbb
mov
add
inc
dec
jb
xchg
js
mov
xchg
push
sbb
fidivl
lea
push
xor
fwait
jge
cs
dec
xchg
in
jle
jg
test
lock
mov
fstl
outsl
clc
test
add
stos
push
cs
sahf
push
aam
dec
clc
jb
ja
sar
lea
nop
dec
dec
xchg
imul
inc
jbe
lea
enter
xchg
push
sbbb
adc
xchg
cmc
and
incb
adc
ficompl
mov
pop
out
insl
inc
push
xchg
adc
movsl
dec
arpl
push
cmp
mov
cltd
clc
frstor
fwait
mov
fdivr
sub
loope
adc
loop
inc
mov
fisttpl
sahf
add
lcall
fcompl
rcll
popf
cmp
nop
inc
mov
push
aaa
push
dec
insl
pop
imulb
in
push
sbb
mov
dec
sub
movl
jns
nop
add
int
mov
lock
test
sarb
mov
jo
adc
xor
sub
cmpsb
cmp
jne
mov
ljmp
pop
in
arpl
xor
pop
or
xchg
cmpsb
and
mov
cmp
sub
inc
out
cld
fiadds
rcrb
jae
inc
notb
lcall
cmp
mov
sbb
stc
add
xor
test
jae
xor
pop
dec
sbb
loopne
popa
pop
movsb
test
sub
sub
pop
push
cmpsl
push
mov
pop
roll
cmp
fdivs
xor
push
mov
pushf
and
aam
cmpsb
das
test
xchg
pusha
pop
add
push
add
inc
sub
sub
jb
xchg
fisubrl
push
sbb
xor
stos
js
into
mov
inc
rcrl
pushf
cs
out
mov
fsubrs
in
ret
or
and
or
and
pop
jmp
cmc
popa
cmp
dec
cwtl
daa
aaa
add
inc
cs
cmp
jno
add
mov
hlt
sbb
push
mov
mov
sbb
or
clc
test
xchg
sbb
dec
jge,pn
cmpsb
cmp
and
and
aam
ljmp
insl
dec
mov
pop
data16
push
imul
repnz
cltd
scas
dec
dec
lahf
mov
out
push
ret
cltd
cmp
push
sbb
pop
pop
test
pop
or
push
push
fucom
cmp
dec
pop
mov
in
dec
setae
cwtl
adc
loope
push
inc
sub
je
call
mov
leave
mov
sbb
dec
pop
ljmp
push
pop
ds
testl
push
xor
out
pop
hlt
mov
mov
pop
xor
xchg
add
lahf
aas
or
pop
int3
popf
pop
shll
mov
and
loop
push
inc
sbb
pop
insb
out
aaa
push
cmp
outsb
sbb
loope
dec
pop
insl
std
and
inc
mov
cmp
call
pop
or
ljmp
popf
add
negl
cs
jl
fisttpl
mov
jo
cli
loop
out
in
sub
add
fwait
pop
cmp
cmp
test
jne
push
mov
pop
out
loop
loope
fistpl
mov
hlt
icebp
into
sub
sub
mov
sub
sbb
out
sub
xchg
push
cmp
test
adc
mov
jle
add
adc
mov
adc
out
rcl
xor
sbb
leave
xchg
mov
push
pushf
mov
cmpl
imul
push
cmp
mov
dec
and
sahf
addl
sbb
sbb
xor
lahf
push
and
iret
fldt
adc
or
xor
mov
in
loop
pop
inc
xor
fwait
sub
inc
mov
and
xchg
add
jbe
push
mov
out
or
cmpb
jecxz
pushf
push
dec
xchg
push
xlat
std
push
sbb
add
push
and
push
sub
push
and
out
mov
add
jne
push
ljmp
push
xchg
cmp
adc
add
out
insl
je
inc
cld
mov
cmpsb
fisttpll
add
inc
sbb
stc
mov
hlt
movsl
es
dec
mov
sub
and
push
add
or
inc
inc
andl
fsubrp
push
addr16
rclb
add
dec
out
inc
mov
jl
cmp
mov
add
loope
pusha
sub
mov
mov
dec
out
push
in
shl
or
and
dec
add
or
jne
sbb
imul
cli
sub
xchg
aaa
ret
xor
out
leave
insl
jne
pop
test
out
and
in
xor
adc
push
pop
mov
add
xor
xchg
dec
cld
ret
and
popf
xor
cwtl
sub
xchg
cli
pop
orb
xchg
inc
in
jb
or
inc
sti
shrl
add
push
out
idivb
popa
lods
xor
push
mov
fs
mov
inc
pop
mov
lock
daa
test
adc
or
and
jle
cmpsb
cmp
aaa
and
xchg
mov
or
jp
push
xchg
lret
out
test
jae
adc
fisubs
testb
xor
cmpsl
rol
test
out
lea
jmp
xorb
lcall
test
insl
ret
mov
inc
sub
adc
sbb
or
push
scas
pushf
xchg
pushf
ss
lret
mov
cmpsl
test
add
aad
mov
jecxz
adc
sub
repz
popa
or
cmp
xchg
jnp
jecxz
je
push
adc
sub
xchg
out
rcr
sub
out
jg
push
add
or
cmp
xorb
test
insb
xchg
das
loopne
testl
je
rol
leave
out
jno
xor
popw
inc
and
adc
dec
inc
popa
sti
or
fiadds
pusha
mov
imul
or
and
adc
mov
jo
jecxz
mov
push
jl
fistpll
dec
sub
mov
inc
jmp
loope
jl
movsb
add
cmc
test
movzbl
dec
insl
and
je
loope
mull
push
mov
stos
add
mov
add
cwtl
out
xchg
cmp
cmpsl
fsubl
mov
jl
xchg
sbb
mov
inc
stos
mov
xlat
or
jge
jno
aaa
test
test
pop
or
mov
inc
add
jae
push
mov
mov
and
icebp
ror
repz
jmp
test
aaa
dec
cmp
shrl
stos
push
fisttps
jecxz
iret
dec
inc
in
testl
push
dec
jge
adc
push
add
lea
addr16
dec
cwtl
mov
push
sbb
rorb
nop
sub
stc
sub
std
adcl
movsl
test
mov
jmp
xchg
mov
enter
and
repnz
int3
mov
xchg
xchg
push
hlt
mov
mov
stos
push
mov
shlb
aam
hlt
fcoml
pop
push
imul
lret
imul
iret
adc
xor
inc
orl
sub
or
push
xchg
or
icebp
pop
pop
inc
push
sbb
mov
mov
jecxz
es
lret
cltd
pusha
ss
and
push
shll
jns
pop
or
imul
mov
xor
mov
mov
pop
adc
xchg
mov
mov
jnp
sbb
lcall
or
jg
call
enter
gs
orl
stos
sub
mov
addl
stos
sbb
lahf
stos
sbb
adcl
test
aas
mov
addr16
shrb
mov
out
popa
popa
cmp
and
ret
pop
and
push
les
leave
and
push
sub
mov
enter
add
pop
push
sbb
inc
jmp
inc
leave
icebp
and
int
inc
mov
pop
fistl
push
xorb
jns
mov
sbbb
inc
xchg
mov
mov
stos
or
mov
dec
in
popf
dec
and
loopne
pop
ja
push
test
add
or
sbb
cmpsl
jle
enter
fwait
imul
scas
mov
popf
pop
inc
mov
cwtl
adc
mov
test
xor
adc
sahf
std
pcmpeqw
or
das
pop
outsl
gs
push
addr16
add
add
ret
jg
sub
fdivs
jae
sub
ret
jp
inc
xchg
sub
lea
dec
mov
jns
adc
and
fists
aas
cmpsl
adc
push
fs
inc
stc
jg
std
imul
inc
cld
je
rorl
subl
clc
sub
adc
or
repz
pop
push
fucomp
jnp
jne
sbb
dec
stos
push
lods
es
dec
adc
ss
sbb
out
das
fildll
lds
add
sbb
push
mov
pop
xchg
jbe
mov
push
mov
or
mov
dec
or
int3
sarb
fcoms
pop
add
out
lret
imul
jb
mov
fildl
adc
cmc
pop
pop
test
mov
shld
adc
fisttpl
adc
arpl
xlat
pusha
pop
nop
pushf
fnsave
cmp
and
pop
pop
notl
xor
inc
sbb
dec
push
mov
add
or
aaa
into
sbb
data16
rclb
xor
mov
out
push
andb
cmc
mov
mov
xchg
imul
outsb
mov
sbbl
arpl
sub
daa
xchg
jl
add
sti
cmp
pop
or
mov
cs
shr
mov
dec
aaa
xorl
or
adc
or
loope
insb
loopne
andb
movsb
call
sbb
jae
or
inc
sbb
bound
out
mov
jp
mov
mov
mov
xchg
and
push
sub
sub
stc
addl
icebp
pop
std
jne
sar
mov
inc
in
dec
leave
stos
les
cmpsl
call
addb
cs
sbb
sub
cmc
ds
ret
mov
inc
aam
pop
dec
pop
or
fstl
daa
hlt
pop
sbb
aaa
and
sub
mov
loop
mov
popa
or
cmp
std
mull
andl
roll
cmpsb
stos
jnp
pop
cmp
loopne
mov
and
dec
xchg
cmc
pop
mov
adc
sbb
pusha
mov
adc
test
sbb
lret
or
cmpsb
aam
ret
cmp
adc
cmp
adc
xchg
mov
mov
aaa
sub
popf
sbb
cmc
sub
add
and
xchg
sti
jb
push
fnstsw
cmp
std
cs
or
dec
mov
imul
add
loop
lds
mov
inc
or
popf
pushf
pop
test
ret
fwait
xor
in
fmulp
sub
in
lds
xor
dec
pop
je
jl
xor
test
fwait
pushf
sub
sbb
adc
in
aad
lahf
fwait
scas
fnstenv
lock
fs
sbb
add
icebp
xchg
leave
frstor
sbb
jmp
faddl
add
paddw
add
xor
movzwl
into
add
jne
jb
mov
loop
push
push
xchg
mov
mov
insl
lcall
add
add
cmp
sbb
jno
clc
xor
xchg
lcall
and
adc
icebp
pushf
push
jns
or
sbb
dec
sbb
iret
addb
test
pushl
xor
lods
cmpsb
push
inc
test
popa
cmpsb
sub
cmc
sbb
mov
sub
loope
jmp
sti
mov
out
mov
mov
es
sub
push
sub
push
sub
xchg
cmpsb
mov
xor
and
inc
xor
jmp
mov
xor
nop
fcmovb
mov
icebp
sti
lcall
test
jno
inc
insb
inc
push
ljmp
bnd
lods
jb
rcrl
ja
insb
sbb
or
cld
mov
cmpsl
cltd
xor
fdivl
out
inc
add
lea
mov
push
pop
repnz
cli
mov
mov
and
adc
pusha
enter
mov
xor
jnp
and
push
jbe
loopne
push
sub
dec
pop
mov
sub
jne
mov
dec
rclb
jbe
jo
add
mov
mov
mov
getsec
leave
stos
sub
pushf
jge
jne
std
stos
dec
out
loopne
xlat
shrl
sub
xor
xchg
and
jnp
cmp
push
outsb
lcall
lcall
ficoml
sbb
neg
shll
jp
adc
mov
mov
lret
mov
dec
add
jnp
jne
dec
popa
imul
push
dec
mov
jb
nop
pop
andb
sub
sub
and
adc
xchg
push
mov
sbb
rol
inc
adc
in
sahf
inc
jno
outsb
xor
mov
out
jge
pop
movsl
or
and
test
sbb
xor
jp
push
or
adcl
lahf
xchg
ret
add
sahf
add
mov
testb
enter
rclb
subl
inc
inc
mov
sbb
pop
pop
sbb
pop
lcall
lds
sub
in
hlt
mov
mov
std
arpl
mov
inc
jmp
sbb
sbb
ljmp
icebp
and
cmpsb
insl
xor
inc
ret
sbb
push
and
or
addb
mov
aam
scas
icebp
cmpsl
xchg
inc
adc
ret
and
pop
mov
mov
push
add
das
mov
aad
jg
mov
rcll
push
cmp
fs
dec
inc
dec
data16
in
jp
sbb
testb
cmp
push
cld
xchg
stos
jne
push
xor
xchg
rcll
add
xor
ficompl
test
loope
adc
pop
in
xchg
push
add
inc
and
sbb
idivb
or
mov
fistpl
lock
or
js
mov
sbb
lret
neg
cli
inc
rcll
sahf
icebp
stos
roll
jecxz
jno
mov
or
xorl
dec
sbb
push
fildll
pop
pop
insb
out
inc
adc
je
sbb
sub
xchg
lret
ficompl
and
mov
sbb
in
call
shlb
fimuls
pop
dec
pop
push
sub
xchg
mov
mov
stos
lds
les
in
pop
fisubrs
sbb
push
leave
mov
inc
stos
inc
and
in
icebp
mov
inc
mov
shll
pop
push
xor
sahf
cltd
data16
out
lret
dec
cli
dec
push
or
and
dec
fwait
push
rcrb
lods
inc
or
shr
xorb
lret
testb
and
pop
lret
add
cmp
jle
into
clc
in
dec
or
sbb
jae
add
push
mov
push
mov
and
xchg
adc
test
mov
add
lea
inc
fwait
xchg
out
sbb
insb
sbb
outsl
or
popf
mov
test
fs
xor
fistpll
pop
xchg
mov
call
movsb
dec
add
pop
pop
jo
frstor
xor
out
popf
inc
mov
mov
mov
mov
lahf
shl
xor
xchg
pop
in
push
das
insl
or
sbb
sub
sbb
jno
lea
sbb
or
std
push
adcb
sbbl
xor
stos
pop
cld
js
adc
rorl
out
add
adc
rcrb
cwtl
das
push
daa
xchg
adc
jecxz
jmp
cli
sub
ss
xchg
mov
sub
fdiv
mov
repz
dec
lock
lods
lcall
mov
enter
daa
js
pop
sahf
cmp
int3
out
inc
inc
jno
push
loop
das
test
mov
addr16
push
lret
leave
xchg
pop
jmp
jmp
or
lahf
sbb
ret
aam
les
sub
fmull
imul
ret
leave
dec
arpl
rcrb
mov
sbb
sub
sub
js
jp
pop
shll
or
rorb
or
mov
jle
icebp
mov
in
cmpsb
fsubs
out
dec
sub
test
sub
mov
repz
add
add
lcall
mov
ja
sub
push
test
jno
xchg
das
jp
inc
fyl2x
xchg
out
test
fmull
lods
mov
xor
push
sar
xor
and
divb
stc
add
scas
inc
add
cli
dec
jl
sub
clc
mov
rcll
or
push
sub
xor
int3
push
dec
add
mov
cmp
push
neg
ss
inc
pop
mov
add
push
loopne
fistps
mov
hlt
pop
leave
add
xchg
mov
dec
add
sbb
push
push
orb
jns
int
dec
lock
xlat
pop
cmp
mov
je
push
pop
idivb
ss
cmpsb
cmpsl
out
adc
fwait
xchg
or
loope
mov
mov
push
push
jne
add
xchg
cmp
loop
testb
or
xchg
negb
and
mov
gs
and
mov
jne
dec
jge
fmull
xorl
mov
ret
stc
in
add
xor
movsbl
mov
in
and
cld
nop
out
call
fninit
lods
xor
add
testb
xchg
inc
cmp
inc
dec
ljmp
mov
or
pop
xchg
push
mov
push
pop
cmpsl
adc
cltd
mov
in
fistpll
push
loope
loopne
cs
pop
icebp
mov
push
cmc
add
fstl
les
or
test
lods
xor
lock
or
dec
dec
je
push
dec
pop
outsl
lds
jecxz
fsub
jmp
subl
jecxz
ret
ror
int3
jp
orl
stc
lret
popf
in
sbb
adc
xchg
roll
jne
jg
add
fwait
repz
pop
adc
pusha
fnstcw
loope
sbb
cld
push
xchg
imul
dec
fisubs
sti
jne
cmp
mov
mov
add
push
fmul
push
xor
jmp
out
icebp
popa
and
pop
inc
and
sbb
add
in
sahf
int3
jns
push
add
movb
in
pushf
sub
inc
mov
lcall
push
dec
xchg
mov
aaa
inc
mov
mov
xchg
cmp
scas
aam
and
aad
rclb
cmp
xlat
in
repz
clc
or
add
shrl
xchg
sbb
inc
sub
mov
add
xor
pop
pusha
push
add
sub
add
jl
loope
mov
leave
sub
les
mov
add
ss
stos
cmpsb
push
inc
sbb
sub
add
add
addr16
aad
or
rcll
das
and
stos
xchg
adc
mov
add
lock
xchg
loop
out
xorb
inc
sbb
lahf
mov
mov
or
pop
leave
add
xor
cmp
shl
sub
lret
dec
xchg
xor
jne
push
fwait
pop
cmp
in
inc
xor
push
test
xor
xchg
add
in
add
lea
icebp
cmpsl
jle
jno
jo
adc
jnp
push
sbb
push
and
add
sbb
vpmaddwd
in
mov
lret
dec
xchg
inc
test
sub
stos
test
add
push
mov
pop
loope
push
nop
sbb
push
jle
adc
sub
daa
cs
lea
dec
add
imul
push
sub
lock
inc
scas
fildl
cs
inc
outsl
or
jle
stc
mov
fcompl
xor
and
xchg
jle
jmp
adc
ret
cltd
enter
xchg
dec
loop
dec
fdivl
push
mov
shl
push
mov
loope
fisubs
xchg
test
xchg
cmp
lcall
cmp
subb
aas
add
adc
xbegin
popa
cmpsl
mov
repnz
ljmp
jne
aad
cmp
shll
push
xchg
and
add
popf
inc
lods
sbb
movl
xor
push
jg
xchg
rcll
jecxz
mov
out
jg
inc
sbb
jg
ficomps
or
sub
lret
push
mov
pushf
add
popf
idivb
sbbb
or
dec
or
adc
icebp
out
xchg
sbb
xchg
sub
jge
add
jp
mov
push
gs
idivb
cmp
push
jle
pop
popf
cli
sbb
imul
pop
dec
push
or
mov
aas
jno
xchg
inc
sbb
pop
cmp
push
or
aas
inc
pusha
pop
inc
scas
jns
jge
out
mov
adc
or
aad
cltd
sub
and
push
into
sbb
sub
pop
push
sbb
test
push
int3
scas
loope
or
push
subl
scas
into
add
adc
add
mov
xchg
push
mov
jle
aad
push
add
lds
xor
js
sbb
xlat
cs
stos
fcmovnu
test
bound
inc
sub
out
hlt
ret
fcoms
sbb
xchg
mov
xchg
mov
lods
inc
int3
lcall
or
sbb
in
into
push
mov
push
test
scas
and
xchg
ljmp
mov
out
push
imul
imul
push
repnz
dec
int3
mov
enter
arpl
cmc
mov
mov
out
decl
add
add
sub
fistps
fsubl
pusha
push
sbb
lahf
lea
pop
cltd
lea
lcall
in
and
add
inc
jmp
lret
cmp
pop
push
pop
mov
adc
push
mov
push
pop
jne
leave
push
add
gs
and
das
jns
nop
mov
sub
push
jl
stc
rol
xchg
aas
ljmp
fisubrs
adc
mov
loopne
jno
shlb
xor
scas
hlt
add
or
out
rcr
mov
aam
inc
mov
test
popf
ficomps
shll
loop
and
sbb
lahf
out
fcompl
gs
push
adc
mov
push
lds
lcall
lock
je
push
xchg
push
ljmp
xchg
fstl
jno
cwtl
sbb
inc
pop
sbb
les
xchg
dec
dec
xor
add
scas
push
test
mov
lods
xchg
adc
aaa
loope
pop
push
pop
inc
icebp
rol
fdivs
dec
xchg
jno
mov
add
enter
push
mov
cmp
adc
pop
pop
stc
cmp
roll
aaa
je
rcrb
jge
cmpb
add
out
and
rclb
sbb
jno
or
jno
mov
push
and
add
and
andps
pushf
dec
add
or
repz
sub
jnp
out
dec
and
adcb
mov
adc
loope
fisttpl
sbb
fdivr
cld
cmp
mov
jnp
add
cld
call
inc
or
cli
fimull
jno
adc
xchg
add
xor
orl
cld
in
loop
mov
push
leave
push
roll
xor
inc
xchg
adc
aad
imul
mov
inc
dec
jno
and
sbb
jno
mov
lret
xchg
push
cmc
or
das
cwtl
push
push
mov
in
popa
sbb
xchg
and
adc
fistps
mov
mov
outsb
fimuls
mov
sbb
imul
xlat
repnz
jl
out
adc
out
cmc
sbb
enter
mov
dec
mov
cmp
pop
mov
icebp
push
sbb
and
out
jo
jg
or
ret
ljmp
pop
pushf
pop
add
fnstcw
int3
mov
jmp
inc
xor
xchg
clc
imul
incl
xor
inc
lds
cmp
jnp
mov
daa
mov
cmp
sbb
xchg
sti
rol
pop
test
orb
mov
pop
fildll
inc
cli
shll
mov
mov
mov
ds
and
lea
xchg
cld
dec
hlt
jg
notb
jns
mov
arpl
jg
lds
add
sbb
add
loope
gs
add
push
dec
popf
popf
imul
sub
push
js
mov
arpl
orb
xchg
es
mov
les
sbb
mov
pop
pop
add
aas
jne
push
sbb
leave
leave
ja
sbbb
xor
mov
inc
mov
dec
xor
in
xor
adc
and
sub
sub
xor
jmp
insl
cli
jle
aad
fdivp
inc
movsl
mov
sbb
fadd
dec
sahf
addb
sub
jl
mov
enter
sti
in
repz
outsl
mov
stos
insb
lock
aad
cs
bswap
movsb
sbb
ret
and
movsl
mov
movsb
in
xor
or
inc
or
and
lea
and
out
ss
js
mov
stos
pushf
sub
push
gs
mov
add
and
jp
xor
xor
aam
inc
adc
mov
dec
ret
mov
push
sub
add
iret
clc
xlat
adcl
lea
mov
test
outsb
imul
sahf
add
out
nop
pop
xlat
addb
jle
mov
fdiv
push
push
mov
jno
data16
sbb
push
arpl
or
cmp
add
shll
add
ret
push
jns
andl
jecxz
mov
gs
dec
inc
cmpsb
cmp
and
or
add
push
mov
xchg
cli
test
orl
mov
sub
push
pop
adc
cmc
xchg
outsl
add
xorb
sbb
sbb
arpl
mov
mov
mov
fs
cmpsl
in
data16
add
or
or
cmc
jmp
pop
daa
xchg
jp
in
pop
data16
lods
in
sub
cmp
inc
or
stos
popf
test
jae
xor
jge
push
dec
sahf
dec
pop
or
pop
jae
mov
mov
add
or
sti
jl
mov
dec
ret
test
aad
or
cmc
out
movsb
mov
jno
add
mov
vmovmskpd
mov
lret
xor
mov
mov
test
pop
xor
or
mov
testl
cwtl
push
je
xor
or
les
xor
aas
and
and
sbb
xor
fcomps
mov
out
mov
jp
xchg
dec
or
stos
out
enter
or
xchg
not
dec
and
inc
clc
sbb
out
dec
sub
mov
pop
inc
leave
add
push
orb
mov
lcall
mov
mov
stos
insb
mov
in
xor
sbb
js
xor
xor
sub
push
loop
adc
mov
jno
jo
mov
pop
sbb
cltd
rcrl
pop
push
mov
sahf
pop
iret
mov
mov
sbb
mov
in
addr16
lods
pop
dec
lret
jae
adc
xchg
or
mov
fcomip
aas
or
pop
mov
add
daa
das
dec
cltd
lret
jbe
dec
les
sbb
daa
pop
jle
push
not
nop
call
adc
push
cmpl
push
ret
rcrb
clc
pushf
dec
loope
int
push
cmp
aad
dec
and
mov
lcall
sbb
jae
and
fs
lret
mov
gs
insl
xchg
into
std
pop
mov
xlat
sbb
add
lret
rorl
sbb
call
jmp
fs
aad
xor
repnz
popf
push
dec
pop
sub
dec
mov
shrl
test
mov
mov
sub
mov
ficoms
xchg
xchg
sub
stos
cmc
xor
and
jo
mov
xorl
outsb
mov
out
leave
int
mov
divl
insb
arpl
std
hlt
fcomip
into
mov
xchg
add
jecxz
out
mov
ret
or
idiv
scas
sub
pusha
sbb
fstpl
fsubrl
jno
or
fcmove
sbb
dec
scas
inc
mov
pop
dec
inc
sbb
incl
ret
push
sbb
mov
or
andl
repnz
jnp
xchg
dec
in
inc
push
shrl
repnz
rolb
mov
sbbb
mov
mov
popf
in
xor
lret
fmull
shlb
repnz
adc
mov
lods
repz
jnp
imul
mov
push
inc
sbb
sbb
pop
or
mov
daa
sbb
fwait
xor
adc
out
jne
inc
mov
dec
mov
xor
sbb
cmc
idiv
pop
fcompl
into
hlt
test
leave
jno
fs
push
mov
cmp
aaa
xchg
ret
sub
mov
out
sbb
cwtl
int3
ficomps
ret
pop
jecxz
sbb
add
lds
push
repnz
pop
push
or
sahf
or
mov
rol
lods
sub
loop
dec
xor
stos
stc
sub
stos
push
lea
and
sbb
and
add
xchg
test
jne
cmc
jecxz
scas
pop
or
sbb
sti
subb
in
subl
dec
and
mov
jecxz
mov
lods
jmp
add
bnd
mov
xchg
adc
add
lock
xchg
inc
sbb
mov
in
fwait
dec
adc
and
sbb
arpl
fisttps
jle
or
xchg
mov
arpl
or
fdivs
sbb
inc
loopne
mov
mov
cmp
jl
insl
xchg
sahf
cmp
fdivrp
mov
or
ja
test
push
imul
stos
dec
mov
sbb
adc
lods
mov
xchg
adc
mov
add
das
xlat
sub
insb
sbb
sbb
cmc
dec
lds
mov
adc
jne
cltd
sub
aaa
mov
shll
fs
dec
aad
inc
mov
mov
int3
dec
inc
add
cmp
xchg
addb
or
mov
divb
or
cmc
fsubrl
pop
mov
push
pop
or
out
cwtl
mov
cmpsb
push
scas
jmp
cmp
push
dec
mov
mov
scas
xchg
neg
sbb
fadd
adc
mov
and
lcall
mov
add
test
sbb
sub
test
mov
or
push
mov
mov
imul
gs
cmp
mov
jns
popa
or
xlat
or
pop
adc
lods
xchg
lds
pusha
sub
inc
xchg
add
pop
test
icebp
enter
lahf
daa
mov
ss
loope
jmp
movsb
sbb
sar
or
lds
jo
mov
and
pushf
std
add
adc
data16
imul
add
dec
ret
sbb
iret
xor
imulb
and
push
lcall
jnp
inc
out
inc
bound
adcl
or
push
xchg
push
mov
popl
mov
push
mov
fnstsw
repnz
fcompl
test
jno
inc
jb
pop
mov
or
out
jge
mov
scas
push
cmp
cmpsb
es
dec
in
fidivrl
add
or
gs
push
jne
icebp
mov
fucomi
add
push
sbb
mov
test
mov
ret
fld
inc
sahf
imul
hlt
dec
xor
outsl
sbb
jecxz
add
inc
or
cmpsb
das
or
xor
sub
add
testl
lods
mov
shll
sbb
and
mov
rcr
xchg
jle
cli
pop
mov
gs
out
add
movsb
in
ficoml
push
sub
test
push
lea
insl
add
jae
inc
vcomisd
push
mov
ss
push
test
jne
pop
enter
add
sub
clc
pop
or
cmpsl
sbb
std
adc
pop
decl
sbb
sbb
push
pop
xchg
pop
out
into
bound
stc
xchg
out
jle
insb
inc
inc
cltd
in
into
xor
sbb
push
add
lret
or
popa
or
dec
int3
cli
mov
out
cmpsb
or
adc
push
repz
test
cmp
popa
stc
fiaddl
lock
jbe
add
xor
sbb
fwait
test
sub
mov
pop
sbb
fdivs
jnp
loopne
imul
outsb
leave
lock
jle
jle
bnd
sub
icebp
fldl2e
adc
inc
mov
ret
lret
in
les
outsb
mov
loope
mov
push
push
push
leave
int
and
jnp
and
xor
add
or
or
mov
inc
jmp
push
add
push
cmp
inc
add
cli
mov
mov
repnz
shl
xor
jle
xor
sub
mov
push
pop
sahf
fnstenv
or
cmp
repnz
lock
pop
cmc
pop
adcl
cmc
jg
dec
cmp
fs
mov
fiaddl
mov
mov
inc
jmp
sbb
rorb
ljmp
dec
push
mov
sbb
dec
aam
mov
jg
popa
dec
dec
cwtl
rcrb
jne
xor
inc
push
pop
pop
fbld
ret
add
and
pop
xchg
ficoms
mov
pop
xchg
les
js
dec
out
lcall
in
push
or
cli
lods
scas
lea
sbb
cs
out
mov
iret
mov
lret
movsb
in
xlat
xor
std
aaa
xchg
fisttpl
mov
and
shl
stos
mov
pop
sbb
dec
gs
push
lods
xor
fisttpl
iret
sub
mov
cmp
addb
xlat
adc
xchg
inc
inc
popa
loop
jnp
cwtl
repz
mov
popf
push
mov
movsb
mov
sub
cltd
in
jg
loop
push
les
cmc
push
pop
sbb
in
insb
mov
loop
jnp
mov
scas
enter
dec
dec
rorb
jne
mov
loope
pop
push
mov
shll
dec
dec
mov
mov
xor
pop
sub
inc
push
mov
sbb
fwait
out
add
and
xchg
or
sub
dec
sbb
lods
lcall
mov
add
or
loope
lret
pop
sbb
fsubrl
pop
or
inc
xchg
dec
lods
jbe
jns
lds
in
rcrb
pop
sbb
jmp
out
rclb
add
jo
push
push
sbb
jle
pop
cmp
shlb
popl
jecxz
cwtl
xor
xchg
pop
cmpsb
repnz
inc
fwait
add
jnp
test
cltd
out
mov
ret
lock
dec
or
sub
sub
shll
shl
aas
push
mov
cwtl
dec
fldl
jbe
push
test
push
cmp
aaa
fwait
pop
xchg
movsl
mov
sbb
mov
mov
sbb
stos
mov
mov
icebp
sahf
pop
push
push
in
pushf
cmp
push
orb
xorl
pushf
mov
push
in
xlat
fisubl
imul
xorb
pop
mov
push
adcb
sub
and
notb
mov
jne
cli
loop
adcb
lds
lea
mov
mov
cmp
adc
sub
lods
sbb
xor
mov
cmc
sbb
inc
mov
imul
sub
push
push
mov
push
mov
mov
xlat
xchg
mov
ss
mov
out
or
bound
jle
pop
repz
and
mov
xchg
pop
loope
ror
push
out
leave
cmpsb
stos
or
sub
addb
mov
repz
jle
mov
nopl
and
mov
add
xor
cmp
or
pop
sub
xor
sbb
dec
jl
arpl
fwait
xchg
pop
mov
dec
jnp
jp
inc
ss
scas
xchg
out
pop
arpl
gs
daa
std
lds
inc
xor
out
arpl
mov
rclb
cmpsl
addr16
jle
fists
or
fsubrl
pop
sub
imul
jae
mov
mov
dec
stos
rcll
or
push
push
mov
add
adc
loop
arpl
cmpb
xor
add
cld
and
inc
mov
fmull
int3
scas
xchg
or
dec
cmp
test
nop
pop
cmp
daa
popf
mov
pop
xchg
dec
jne
jecxz
pop
cmp
movlps
mov
jb
cwtl
add
sub
int3
test
mov
xor
lock
push
movsb
push
insb
xor
mov
add
imul
ret
les
lret
xlat
fdivs
sbb
sbb
je
xchg
imul
daa
push
dec
int3
loope
inc
lcall
push
sbb
hlt
xchg
lcall
sub
or
xor
inc
rcr
pop
push
popa
fisubrl
mov
adc
and
pop
int
std
xor
mov
repnz
ficoml
rolb
inc
mov
notb
push
fs
cmp
movb
scas
pop
push
lret
pusha
mov
fsubs
incb
xchg
out
sub
add
iret
sbb
mov
sub
and
sahf
cmp
int3
mov
or
ret
lea
dec
jl
sti
sub
or
push
rclb
mov
xor
cmp
sub
orl
hlt
mov
lea
inc
dec
sbb
or
mov
lahf
aad
add
int3
xor
pop
into
jns
push
sub
or
cmp
icebp
mov
dec
inc
sub
pushf
jl
pushf
sub
fsubs
mul
jbe
mov
push
xorl
inc
sbb
stos
out
leave
push
sbb
xchg
lcall
push
or
sbb
aas
push
mov
stos
aas
and
cmp
mov
popa
cmp
fldt
test
cmpsb
idivl
shll
dec
sbb
fs
aas
popa
mov
jl
jle
sbb
out
push
gs
push
fldl
loope
inc
rcr
lods
jp
sub
stos
mov
push
adc
cmpsb
popa
out
push
movsb
or
mov
xchg
xor
stos
add
inc
mov
or
xchg
divl
jle
fcomps
pusha
clc
stos
sub
mov
sub
andb
adc
les
loop
push
sub
cltd
adc
xor
sub
adc
or
ds
cmp
imul
popa
mov
ror
xor
mov
sbbb
adc
or
fsubl
test
shll
inc
mov
icebp
push
mov
jae
sub
or
xor
pop
inc
cmc
stos
xchg
test
lret
sub
pop
inc
push
loope
int3
sub
hlt
test
pop
lret
mov
out
int3
xlat
dec
loope
lods
push
sbb
rorb
dec
pop
int3
pop
mov
mov
scas
xor
mov
push
add
leave
push
xor
pushf
xchg
xor
outsb
shl
mov
vcomisd
out
scas
xchg
or
idivl
or
mov
xor
and
test
fs
inc
out
sub
int
xor
push
mov
dec
mov
mov
sub
das
je
out
mul
test
push
loope
lock
nop
testl
mov
gs
mov
jns
test
cmp
adc
jnp
lret
gs
cmpsl
pop
pop
mov
incb
xchg
out
inc
sbb
or
test
xor
and
lds
xchg
icebp
test
add
pop
mov
xchg
xchg
movsb
inc
lods
push
ret
stos
jnp
loope
popf
mov
mov
into
dec
sbb
rcll
fiaddl
dec
sub
aad
xor
add
popf
mov
mov
adc
adc
pop
or
rol
xor
push
add
sbb
imul
push
inc
xchg
jne
out
jmp
xor
cmp
arpl
cmp
push
jne
enter
sbb
scas
or
inc
icebp
xor
push
aad
mov
movb
sbb
fisttpll
or
mov
fsubrl
mov
jge
xchg
add
pop
adcb
pop
sbb
cmpl
dec
push
lret
gs
push
mov
fadds
cmc
mov
shll
or
int
mov
into
jnp
cmpsl
sub
insb
add
gs
add
mov
or
gs
lods
loopne
mov
enter
mov
addr16
and
mov
mov
mov
jge
sarb
lock
gs
or
cmp
inc
sahf
jno
in
push
test
insl
jg
jg
mov
sbb
xorb
movsb
pop
cmp
nop
dec
and
add
pop
rcll
and
sbb
cmpsb
ss
or
cltd
pop
inc
pop
sahf
jecxz
cmpl
lea
push
push
test
cmp
cmova
cmp
fidivl
mov
jl
xchg
cwtl
shl
jle
cmpsl
dec
cltd
data16
push
mov
pop
sbb
std
push
add
mov
sbb
addl
inc
inc
pushf
mov
xchg
or
mov
mov
movsl
leave
sbb
jno
cmp
aaa
mov
dec
inc
popa
push
mov
mov
ja
adc
or
xchg
sbb
sbb
dec
out
dec
push
imul
push
outsb
mov
data16
pop
mov
mov
add
add
push
adc
gs
ftst
jle
add
testl
dec
mov
clc
push
lret
data16
xor
ret
sbb
mov
push
xor
mov
xor
pop
orl
cmp
pop
push
setbe
test
add
icebp
icebp
scas
add
mov
in
sahf
sub
pop
jnp
sahf
mov
negb
and
aas
xchg
mov
cltd
mov
jne
push
or
adc
in
test
jp
cld
push
mov
cmp
mov
sbb
nop
lret
pop
mov
shrl
out
leave
xor
cmc
and
sub
out
in
cmp
gs
mov
dec
pusha
push
mov
ds
sbb
mov
xchg
jge
loope
xchg
dec
add
inc
push
pop
push
ljmp
repz
nop
adc
mov
mov
in
sub
mov
pop
sub
mov
loope
adc
rcr
mov
std
lcall
and
ret
mov
adc
repnz
pop
jl
jge
pop
mov
ss
test
push
xchg
dec
xchg
scas
bound
sub
and
adc
mov
sbb
daa
loope
sbb
stos
or
cwtl
mov
xchg
pop
xchg
sbb
sbb
out
mov
cmpsb
aaa
push
jle
fs
addb
ds
repnz
xor
adc
and
push
sbb
in
cli
xchg
fisttpll
in
in
out
jo
rolb
cs
sbb
adcl
or
bound
out
aaa
add
mov
pop
outsb
icebp
sub
lock
sbb
mov
ret
dec
push
sub
gs
mov
add
ret
ret
jg
inc
push
dec
std
fidivrs
les
cmc
push
or
adc
pop
dec
sbb
jge
and
ljmp
xor
dec
pop
add
mov
adc
or
popf
pop
mov
int3
jmp
movsb
loope
popf
lods
pop
ret
inc
or
fldcw
fsubrl
out
mov
or
xsavec
lds
lock
addb
and
setle
mov
xor
pop
xchg
mov
pop
sar
loope
lds
sub
fs
or
pop
repnz
add
das
xor
ds
lock
jne
shll
data16
or
push
lret
fdiv
negl
shrb
ret
sbb
pusha
popa
aam
dec
aas
pop
shll
dec
and
add
int
xor
sbb
sub
inc
fsubr
mov
push
dec
into
push
adc
add
lds
mov
test
outsl
sub
hlt
cmp
lret
ret
lods
mov
push
and
les
push
mov
and
mov
in
inc
iret
or
int
xor
cmpsb
sbb
mov
lahf
cli
test
mov
in
push
in
mov
jno
data16
adc
add
nop
clc
dec
xor
jmp
ljmp
fdivl
or
sub
push
dec
loope
mov
mov
xor
enter
dec
int
in
lods
and
das
mov
xchg
inc
jb
jmp
sbb
xchg
fidivl
or
add
test
mov
push
add
dec
add
dec
add
dec
test
cltd
and
xlat
push
xchg
das
out
mov
imul
jp
pusha
mov
pop
and
fidivl
dec
aaa
mov
dec
addb
fwait
push
into
cmpsb
sbbl
adc
popf
xchg
add
mov
add
cmp
push
pop
dec
or
insb
xchg
in
out
cs
icebp
sbb
jb
ss
push
pop
push
repnz
sub
jecxz
push
int
dec
in
lds
sbb
sbb
call
or
cwtl
jl
xchg
or
mov
cltd
das
jl
inc
es
outsb
cli
mov
xor
lret
aaa
mov
pop
neg
cmp
fs
es
dec
dec
xlat
mov
stos
mov
outsl
xchg
out
xor
add
js
push
bound
xchg
dec
xor
mov
lods
fdivrs
out
imul
mov
aas
mov
sysenter
mov
cwtl
xlat
dec
inc
xchg
mov
jg
jle
and
xchg
dec
pusha
rcrl
xor
fwait
or
xchg
jecxz
push
xlat
fdivs
into
jae
sbb
pop
jmp
hlt
inc
and
xsaveopt
sub
mov
push
mov
xor
scas
xchg
sbb
adc
and
mov
iret
test
into
imul
aad
orb
ret
dec
cmpsb
mov
dec
push
test
lods
bound
notb
in
push
adc
and
rol
xchg
push
aaa
in
and
int3
loopne
push
xorl
cltd
xor
andb
daa
inc
push
sbbl
jmp
or
xchg
inc
mov
inc
dec
add
sahf
xor
ja
cmp
mov
jp
data16
es
les
add
adc
push
loope
out
loope
push
pop
dec
loopne
adc
push
mov
jmp
insl
push
adc
and
mov
add
add
and
xlat
inc
and
stos
lds
pop
dec
xchg
mov
jae
cmc
sbb
and
incl
cwtl
cmpsb
mov
rorl
push
mov
subb
inc
xorl
notb
adc
sbb
fisubrl
lret
testl
dec
stos
push
popa
cli
jle
mov
in
mov
and
js
arpl
aaa
mov
fsubl
pop
add
xor
cmp
cmpsb
repnz
jecxz
into
test
lea
frndint
daa
lret
int3
call
mov
jp
pop
rcll
mov
and
dec
icebp
push
leave
repz
push
mov
cmpsb
xchg
fistpl
dec
stc
jg
inc
sub
jl
sub
subl
push
push
xchg
add
xchg
inc
mov
sbb
mov
mov
dec
orb
faddl
outsb
jp
or
aam
sub
or
test
fs
lahf
mov
test
sbb
outsl
xchg
lcall
andb
add
test
insl
mov
pop
stos
or
mov
push
jno
scas
mov
mov
inc
mov
xor
repnz
jmp
sbb
inc
cmp
sahf
daa
sbb
icebp
fwait
es
imul
pop
jb
cmp
sub
sbb
mov
jns
fcomps
adc
aas
mov
jecxz
nop
xchg
les
cmp
dec
xchg
add
movsl
stos
cmp
sub
mov
call
inc
mov
les
pop
mov
xchg
and
add
or
out
adc
sub
adc
daa
dec
into
adc
das
pop
pop
stos
pop
aas
adc
xor
mov
jbe
loopne
sub
push
cmp
aad
les
dec
jae
sbb
mov
popa
add
jne
push
inc
repnz
jb
movsb
inc
xchg
inc
mov
fcom
ficoms
sub
push
sbb
push
ret
xor
std
or
mov
or
add
xor
adc
icebp
andb
cmp
int3
and
sbb
xchg
ss
fbstp
jl
loope
adc
pop
sub
xlat
xor
xchg
and
scas
xor
ret
sub
bound
or
adcl
mov
pop
mov
xor
test
sbb
mov
sbb
or
mov
cwtl
stos
inc
jp
cli
pusha
shrb
push
gs
je
in
pushl
sbbl
out
lea
push
daa
jno
lods
daa
cltd
addb
ret
pop
cli
dec
ja
fsubrl
sbb
inc
sub
clc
jmp
sub
pop
shlb
aaa
cmpsl
xlat
into
push
xor
std
mov
test
insl
dec
xchg
add
out
mov
lods
dec
and
pop
pop
cmpsl
adc
jg
mov
push
stc
dec
lcall
call
fbstp
jge
jl
loope
ret
sbb
sbbb
mov
stos
sbb
sub
pop
sub
xor
sbb
cltd
push
sbb
sub
ret
jne
mov
mov
cmc
bound
jg
add
adc
data16
or
ret
xchg
xchg
repz
lock
pop
rorl
addr16
sbb
xor
sub
mov
jns
enter
sbb
icebp
jnp
xchg
lcall
into
cmp
pop
push
or
xor
lods
xchg
or
sub
lahf
dec
inc
in
test
popf
gs
aas
push
push
dec
mov
lret
daa
aas
push
jnp
cmp
jg
jne
orb
jecxz
dec
sbb
inc
adc
jmp
or
mov
mov
pop
xchg
mov
movsb
xor
jae
inc
jl
add
jmp
adc
cmp
sbb
mov
inc
add
jnp
mov
sbb
jg
xchg
sbb
sbb
test
xor
dec
add
jl
push
outsl
xor
divl
fnsave
xchg
insl
out
dec
stos
add
fucompp
sub
mov
adc
les
xchg
aaa
jge
xor
push
pop
sbbl
fmuls
sti
fisttpll
mov
xchg
xor
shrl
or
movsl
or
push
pop
dec
lock
lret
daa
in
loopne
xchg
loopne
jo
sbbb
xor
hlt
lds
outsl
stc
fmull
test
push
or
mov
pop
pushf
xorb
dec
shl
mov
fimuls
ret
push
add
xor
mov
sbb
sub
and
cli
push
push
dec
or
sub
pop
insb
adc
mov
in
mov
repnz
subl
data16
es
gs
sbb
sti
lea
sbb
mov
add
add
mov
out
inc
rol
sbb
dec
push
pop
popf
pop
ss
adc
jg
sar
inc
jae
enter
sahf
testb
sbb
in
cmpsb
cmp
insb
stc
and
rcr
cltd
cwtl
mov
scas
ljmp
xor
or
daa
gs
arpl
mov
icebp
test
dec
loopne
sbb
mov
push
out
dec
cvtps2pd
pop
xor
outsb
adc
in
cmp
or
xchg
xchg
icebp
cmpsb
out
lods
cmpsl
and
mov
lcall
push
push
icebp
pop
adc
pop
mull
xchg
aaa
cmp
insb
mov
push
hlt
mov
push
data16
xchg
ljmp
pusha
mov
push
inc
xor
imul
sbb
and
insl
cmp
hlt
pop
adc
lods
subl
pop
mov
ret
fs
mov
fstpl
inc
lcall
popf
push
xor
fbstp
sti
addr16
sub
aam
adc
popf
adc
cmp
dec
aad
push
lret
cltd
pushf
sub
mov
pop
test
and
jp
xchg
nop
mov
push
imul
pop
mov
negl
jge
subb
testb
leave
sti
xchg
mov
pop
decl
loopne
fcmovnb
movsl
or
pop
sub
jne
inc
shll
mov
jp
test
out
and
jbe
ss
adc
xchg
jge
lahf
inc
jp
pop
dec
push
sbb
lds
lcall
push
scas
dec
add
gs
inc
test
mov
inc
int3
push
fsubl
lds
rclb
pop
push
lods
test
out
aaa
add
fwait
inc
sbb
sar
cwtl
cmp
std
pusha
xor
int
shr
ds
sub
xchg
enter
or
pop
or
shlb
ficoms
jecxz
and
aaa
sub
outsb
addr16
dec
push
sbb
ja
jb
dec
cltd
jl
lret
andb
mov
add
dec
loop
mov
mov
and
xchg
addb
pop
adc
sub
xchg
sbb
xor
mov
cmpsl
loopne
inc
ret
lds
pusha
jbe
rclb
mov
mov
jl
andl
aam
push
in
cwtl
lret
ss
cmp
sahf
cmpsl
sbb
inc
adc
mov
mov
rolb
subb
dec
sub
mov
lcall
lods
les
push
stos
inc
inc
fistpl
int3
cmp
inc
sbb
xor
fcoms
filds
ficompl
mov
push
lcall
xor
jbe
scas
and
mov
in
popa
pop
and
jb
and
sub
xor
mov
mov
inc
call
sbb
sbb
pop
inc
sbb
aas
mov
shlb
subl
jle
loopne
filds
sbb
jg
push
cwtl
out
dec
pop
sub
subl
add
sbb
push
xor
pop
sub
bound
gs
dec
addr16
adcl
xchg
aad
mov
js
imul
sarl
loopne
mov
fistps
scas
sarb
rcll
mov
popf
dec
push
cmc
nop
inc
lods
daa
push
push
push
repz
es
shrb
call
cmp
mov
add
dec
imulb
cmc
sar
fs
bound
and
into
icebp
jle
or
add
jns
mov
fisubrs
je
cbtw
jb
dec
dec
arpl
add
es
daa
pop
ljmp
das
sbb
jb
data16
adcb
in
dec
clc
pop
dec
fcomps
enter
mov
inc
movl
push
icebp
xlat
mov
xor
inc
dec
mov
outsl
sbb
push
xchg
pop
pop
add
leave
pushf
lock
shrl
sti
or
push
ret
subl
push
cld
jge
fdiv
push
fstl
adc
mov
inc
add
dec
adc
jo
xchg
xchg
fmull
cmp
ds
imul
std
call
xchg
scas
pushf
sub
es
or
lcall
adc
out
rolb
sub
cs
aaa
subb
movsl
fwait
mov
inc
mov
rorl
shl
inc
insb
sbb
cmpsb
adc
pop
add
aaa
lock
testb
xchg
jmp
adc
ret
xchg
inc
mov
xorb
shlb
ret
dec
mov
cli
leave
sub
fists
jecxz
or
sahf
xlat
fs
xchg
cltd
push
mov
or
stos
aaa
das
mov
pop
addb
mov
lods
xchg
cmp
in
dec
jecxz
add
imul
in
xchg
sarb
cmp
cmpsl
das
js
data16
pop
je
mov
sbb
sahf
faddl
push
popa
loope
xor
lcall
sub
jae
jmp
cli
mov
push
fcmovnu
sbbb
roll
push
mov
cli
mov
into
loopne
addr16
ret
arpl
lret
xchg
xchg
jge
push
sub
or
pop
imul
out
jo
push
mov
jl
rcrl
out
fs
lods
cmp
and
or
or
push
mulb
mov
les
popa
rcrb
or
or
mov
int
lret
pop
pop
add
or
jle
inc
push
or
mov
dec
das
icebp
cmpsb
jnp
mov
out
xor
test
data16
xchg
inc
test
orl
pop
push
inc
imul
add
fldl
cmp
jns
mov
push
es
mov
in
icebp
insb
jg
mov
or
fistl
andb
std
aaa
push
dec
mov
int
mov
insb
mov
aaa
sub
pop
mov
sub
pop
int
movsl
add
ret
jle
ds
add
in
jge
inc
out
mov
push
mov
cmp
inc
push
jle
ja
stos
inc
out
lahf
stos
inc
lea
ljmp
fstpt
test
lcall
loope
xlat
xchg
sarl
sub
cmp
sbb
push
cmp
dec
sub
bound
xor
mulb
je
loope
mov
add
gs
js
xchg
les
scas
rcrb
mov
scas
dec
add
dec
aas
adc
xor
push
icebp
mov
leave
jg
mov
xchg
cmc
sahf
popa
sbb
aaa
mov
add
dec
push
dec
cmpsl
test
aaa
xor
mov
loope
sub
shrl
and
negb
adc
inc
push
sbb
inc
push
sbb
xchg
cmpsl
pop
mov
aad
sbb
lock
sub
int
subb
cld
fisubl
dec
sbb
sbb
in
fdivrp
outsb
and
lds
mov
inc
add
mov
mov
sbb
cmc
cmpsb
dec
test
out
add
ficoms
scas
push
icebp
daa
pop
adc
push
or
mov
jmp
fdivrl
neg
inc
pop
subb
ds
scas
lods
add
mov
jnp
stos
outsl
cs
or
sbb
scas
push
sub
mulps
lret
add
fs
xchg
gs
stos
js
scas
outsl
cmp
dec
push
rcrb
xchg
or
mov
add
mov
jp
daa
cltd
mov
jp
sbb
imul
movsb
nop
stos
into
add
in
aad
mov
push
and
dec
sbb
out
fistpll
aad
inc
mov
jle
hlt
push
enter
sub
loope
mov
les
cmp
mov
mov
ja
dec
into
pop
cmp
sbb
xor
inc
mov
mov
addr16
rorl
xor
pop
cltd
jbe
or
dec
cmpsb
std
add
jl
lods
leave
sti
out
in
cmc
push
lcall
jmp
pop
pop
icebp
leave
in
arpl
or
insb
add
add
push
jecxz
ret
mov
iret
ss
pop
xor
nop
fnsave
int3
mov
aaa
add
pop
out
and
movsb
inc
and
inc
addr16
and
cs
sbb
sbb
flds
mov
xchg
jp
jecxz
das
andl
push
insl
subl
add
lock
xchg
mov
push
adc
into
repnz
sbb
dec
mov
leave
enter
cmpsl
sub
dec
das
pop
cmpsb
scas
add
xor
sub
add
notb
jecxz
inc
push
jb
cmpl
test
mov
ss
lods
fimuls
mov
add
pop
sarb
inc
push
data16
add
scas
sbb
rcrl
mov
arpl
ret
or
inc
pop
daa
imul
jge
jle
add
xchg
in
imul
xchg
test
data16
pop
in
sub
or
cwtl
popa
frstor
out
jl
subb
cmp
and
insl
outsb
add
pop
das
pop
jecxz
mov
cmc
inc
push
adc
mov
pushf
push
adc
add
icebp
mov
decl
and
in
xor
push
je
push
and
add
cli
stos
mov
aas
push
sub
sub
imul
clc
les
pushf
mov
mov
xor
fildl
xor
fists
pop
sbb
cmpsl
or
roll
adc
loop
pop
mov
sub
push
inc
aas
dec
adc
push
outsl
pusha
push
insb
sub
jnp
xor
push
push
fsts
cld
ret
es
mov
test
sbb
jno
fucompp
loope
xor
or
in
inc
add
mov
push
loop
fimuls
adc
or
mov
mov
jns
pop
push
inc
mov
or
mov
stos
stos
xchg
jne
fisubrl
inc
ret
pop
xor
xorb
fwait
aas
mov
lret
pop
add
insl
push
and
mov
adc
out
inc
sub
xor
or
stos
xchg
and
mov
or
lahf
inc
icebp
xor
mov
mov
jae
test
sahf
jnp
shlb
fcompl
mov
xchg
ret
aaa
sbb
jno
pop
sti
popa
into
hlt
add
nop
push
in
ret
inc
dec
push
cmpl
inc
sbb
daa
lods
inc
out
and
sbb
mov
sbb
mov
sbbb
inc
sbb
inc
lock
jb
jmp
xlat
mov
xor
pop
pop
cmp
gs
inc
dec
leave
xchg
push
or
add
mov
mov
int3
sub
dec
inc
cld
push
nop
pushf
lea
aad
addr16
inc
fiaddl
cmpsl
inc
dec
aam
ret
xchg
idivl
stos
push
pop
xor
xchg
rcll
das
cmp
adc
inc
jns
cmc
stos
push
and
jae
jno
pop
loope
or
cld
add
data16
or
rol
test
pop
push
leave
mov
popf
dec
xor
fildll
mov
xor
sbbl
mov
cmp
bound
repz
cli
pop
mov
ret
inc
arpl
fmuls
or
add
inc
xor
test
xor
push
rcr
push
or
fldcw
cli
pop
and
aad
ror
or
mov
pusha
or
in
mov
xchg
sub
push
icebp
pop
push
mov
xchg
xor
aaa
stos
inc
es
mov
stos
dec
mov
jae
pop
xor
cmp
aas
dec
test
mov
push
cmp
push
add
movsl
jg
push
testb
out
cmc
test
push
or
jo
or
nop
pop
dec
pushf
mov
popa
xchg
outsb
mov
add
mov
jb
das
xor
mov
test
add
shrb
pushf
add
inc
adc
mov
insl
ret
cmp
push
dec
or
test
mov
push
decl
test
loopne
cmp
mov
in
mov
pop
insb
inc
or
mov
mov
test
insl
inc
xor
es
in
pop
mov
mov
pushf
push
sbb
test
test
or
popa
std
out
ss
sbb
push
push
cmpsl
in
test
jl
test
popa
pusha
or
mov
mov
lods
push
pop
or
sti
and
rcrl
push
stc
test
add
sub
xchg
pop
cli
stos
inc
test
inc
xchg
sbb
lcall
inc
xor
cmp
add
sub
add
and
icebp
mov
inc
or
adc
push
push
or
sbb
dec
out
mov
cmp
jg
pop
sbb
into
pop
iret
test
scas
loope
je
data16
pusha
push
cltd
sti
lds
mov
xchg
mov
fldenv
jne
daa
cmp
movsl
add
sahf
rorl
mov
or
dec
dec
and
iret
imul
sbb
pop
ljmp
inc
jno
cltd
xchg
add
js
adc
pop
xchg
adc
clc
adc
loop
cltd
sbb
lea
cmp
enter
out
mov
dec
dec
jp
outsl
push
cmp
ret
sbb
cs
in
aaa
sbb
scas
sbb
mov
pusha
mov
push
pop
nop
xchg
imulb
push
loope
inc
stos
xchg
or
or
daa
test
push
sbb
loop
jnp
mov
inc
daa
lret
sub
jne
mov
xor
repz
and
fildll
aaa
loope
mov
in
mov
loop
jge
push
popf
inc
stos
out
mov
or
mov
pop
xchg
and
cmp
ja
pop
mov
or
or
mov
andl
fs
rcll
roll
test
pusha
or
pop
mov
aam
pusha
hlt
and
add
shll
pop
pop
pop
mov
cli
leave
adc
xchg
or
fbstp
std
fbstp
mov
je
and
pop
adc
jecxz
or
imul
fstl
outsb
pop
pop
sbb
out
lock
cmp
and
adc
cmc
jne
sbb
sbb
add
push
jne
fisttpll
inc
mov
loope
sbb
gs
sti
push
adc
adc
push
lods
xchg
orl
jg
sub
clc
call
and
xor
mov
js
gs
and
lock
loope
sbb
sahf
pusha
push
or
stos
inc
push
pop
or
push
pop
and
int3
jb
inc
sbb
addl
call
or
pop
inc
add
dec
xor
jnp
test
pcmpgtw
pop
mov
idivb
push
inc
orb
pop
std
sub
out
into
xchg
hlt
pop
or
cmp
mov
sbb
ds
push
addl
add
push
dec
shrb
inc
or
cmpsl
push
fdivl
loop
push
popf
hlt
negb
out
mov
cltd
and
mov
sbb
icebp
lret
jmp
inc
ficompl
jne
lods
fidivl
negl
sbb
sahf
mov
mov
mov
jae
xor
data16
clc
inc
mov
and
push
dec
setns
push
pop
mov
ds
cmp
dec
mov
in
icebp
into
fwait
adc
pop
mov
adcb
pusha
popa
fstl
int3
xor
dec
andl
lahf
jecxz
sbb
imul
jne
mov
loopne
lock
scas
clc
add
ret
test
popa
andb
lock
add
sub
movsl
lahf
in
jnp
push
ret
or
jno
lds
add
fistpll
aas
push
xchg
cs
fs
sbb
jmp
jecxz
sbb
adc
hlt
ds
pop
enterw
sub
inc
push
sahf
and
jp
pop
aad
xchg
sub
sbb
aaa
pop
push
or
jg
fcmovne
inc
add
aaa
mov
pop
enter
mov
xchg
xor
sbb
sub
inc
bound
scas
cmp
jnp
jmp
movsb
movsb
pop
nop
out
sbb
jmp
or
fs
sub
das
in
xor
push
xchg
pop
les
or
sbb
dec
hlt
mov
dec
cs
sahf
and
pop
push
jl
add
push
subl
bound
and
mov
out
shlb
xor
daa
fidivl
or
addr16
ret
movb
or
lret
push
or
fstpt
push
lcall
sbb
outsb
xor
pop
lea
mov
mov
push
inc
jo
jns
enter
jne
push
sub
cmc
add
test
sub
ss
std
adc
std
jne
test
nop
cmc
es
movsb
popa
cmpsb
xor
arpl
bound
xchg
xchg
shll
lods
inc
xor
out
shlb
mov
xchg
cmpsb
mov
mov
ficoms
xchg
jnp
inc
mov
jl
int3
loope
lret
fdivrs
es
lock
inc
sub
leave
mov
mov
cmp
imul
inc
mov
popa
and
xor
mov
inc
cld
aaa
flds
sub
or
inc
cmp
push
adcb
xor
cmp
mov
cltd
or
jmp
fdivr
sbb
dec
dec
pop
xorb
rcll
jp
adc
andl
or
add
mov
insl
or
push
and
sub
test
mov
and
xchg
jbe
mov
pop
cmpsb
add
rorb
mov
pop
push
ds
lret
aam
inc
test
add
push
fs
in
dec
and
sbb
in
aaa
mov
and
jbe
mov
lret
or
aam
inc
push
iret
ljmp
ficomps
pusha
popf
call
push
cmpsl
int
test
jp
movsb
pop
pop
lds
fistps
push
rcll
xor
ds
pop
add
loopne
stos
inc
movsl
mov
out
ss
stos
mov
inc
adc
xor
out
jbe
push
pop
cmpsb
mov
pusha
adc
lods
add
and
mov
jno
push
inc
sbbl
sbb
pop
jle
cmpsl
inc
jbe
fcomi
inc
cltd
adc
xorl
das
cmc
test
jne
jns
int
dec
mov
data16
fstps
idiv
imul
rcrl
push
sbb
adc
push
fcoml
pop
inc
mov
inc
subl
sbb
mov
fwait
or
lds
pop
add
dec
xor
divb
hlt
push
pop
movsl
insl
pop
push
pop
cmc
rorl
into
lret
mov
jle
pusha
ror
jecxz
sub
stc
sub
das
jle
mov
jne
sub
addr16
std
cld
add
add
fistps
popf
loopne
mov
leave
mov
lds
xchg
addr16
mov
jge
sbb
jnp
push
cmp
adc
sbbl
jb
sbb
loope
push
in
in
lea
lods
sub
lcall
daa
push
les
inc
jge
xchg
ja
mov
cmp
movsb
dec
lds
shll
mov
jp
scas
lcall
or
pop
fcoml
pop
mov
ljmp
dec
loopne
cmc
adc
fsubr
enter
pushf
gs
jmp
lock
int
dec
call
inc
or
mov
mov
and
add
lods
xor
lods
push
or
and
faddp
sub
imul
jne
sbb
cmpsb
jne
aaa
adc
add
add
xchg
jb
mov
test
stos
add
push
dec
sbb
add
mov
outsb
fmuls
cmp
mov
push
out
xor
imul
push
int
fdiv
lcall
lds
sbb
or
popf
mov
lods
mov
pushf
and
add
fucomp
ja
sbb
or
stos
or
pop
cld
add
clc
sahf
sbb
or
and
std
jl
and
dec
mov
fs
rolb
xchg
lds
xchg
add
xor
sub
pop
mov
inc
cwtl
scas
push
in
fldl
and
add
mov
pop
inc
mov
adc
adc
mov
aaa
addb
xor
xchg
push
clc
push
cmpsl
sbb
fidivs
pop
push
lods
jle
andb
iret
jnp
test
lret
pop
cld
pop
inc
push
gs
or
or
dec
xor
testl
or
std
cwtl
cmpl
mov
jno
ljmp
mov
les
insb
prefetcht0
call
leave
jl
jae
or
popa
push
add
bound
mov
add
testb
xor
push
push
ss
call
lods
and
inc
add
sbb
sbb
xor
shl
faddl
cmp
aas
add
lret
pop
jmp
insb
movsl
cli
lea
xchg
test
in
push
imul
inc
aaa
pop
je
in
orb
orl
push
sbb
add
pop
stos
addb
mov
fwait
imul
mov
sbb
test
mov
aaa
add
cwtl
jnp
xchg
push
pop
jbe
fidivl
iret
mov
addr16
popf
mov
push
scas
add
leave
movsb
cmp
out
sar
sbb
test
pop
mov
push
ljmp
adc
jo
pushf
inc
sbb
and
push
inc
push
test
sub
sub
loope
pushf
add
add
cmc
and
push
xchg
scas
add
movsb
cmpsb
dec
subl
push
mov
clc
jl
stc
mov
pop
sbb
adc
movsl
xchg
js
xlat
scas
sbb
sbb
push
push
mov
or
push
lds
mov
movsb
sbb
mov
jmp
cltd
xor
pop
sbb
mov
jne
push
sarb
negl
pop
push
jne
out
out
pop
sbb
dec
roll
testb
sub
cmpsl
xchg
pop
mov
ret
push
or
sbbl
pushf
or
ds
jl
jno
push
mov
shr
fwait
xor
mov
pop
in
int3
sub
xor
adc
push
push
icebp
cld
jge
push
inc
dec
add
or
scas
cli
aam
adc
lock
movsb
subl
sub
mov
adc
mov
cmp
fistl
inc
insb
sar
add
xchg
je
or
out
pop
sbb
sbb
push
imul
ja
aaa
or
mov
gs
xchg
std
adc
imul
cmp
clc
scas
in
sbb
pop
push
sarl
jbe
scas
and
xchg
shll
cmc
xor
mov
push
push
inc
or
cmovnp
test
jnp
int
xchg
inc
push
insb
cmp
push
mov
mov
adc
mov
sahf
cmc
inc
sarb
cmpsb
lret
add
push
imul
add
pop
sub
insb
inc
or
sub
mov
rcrb
test
sub
dec
lock
adc
sub
js
sub
ror
dec
xchg
pop
jp
add
fdivs
cmp
pop
into
dec
ret
stos
pop
jge
mov
cld
ljmp
fsubrl
sbbl
cs
jb
jo
cmpsb
push
loopne
cmpsl
add
and
mov
lret
dec
jp
pop
xchg
adcl
jne
lods
pop
int3
pop
mov
mov
push
pop
jnp
sbb
sub
mov
imul
add
fsub
jl
cmp
push
or
iret
jp
jbe
inc
cmp
inc
pop
add
cmp
sub
and
sbb
orb
ss
add
andb
xor
or
in
pop
mov
ret
sbb
sbb
out
jle
add
xchg
outsb
add
sbb
out
loop
or
inc
push
cmc
inc
mov
cmp
push
fdivrl
cmpsb
int3
adc
lods
lcall
jb
adc
shlb
fwait
repz
fs
xchg
aas
in
mov
test
mov
pop
jg
adc
inc
pop
sub
jne
mov
rcrb
shl
addr16
add
cmc
xor
xor
pop
push
mov
jne
dec
stc
imull
mov
mov
gs
test
push
dec
xor
in
gs
bound
sbb
sub
mov
mov
push
xchg
int3
push
fwait
stos
mov
enter
and
aaa
test
ret
xchg
mov
and
xchg
nop
scas
sbb
push
sub
aas
add
cltd
fimull
lahf
mov
sub
ret
adc
ss
mov
add
sbb
lret
push
or
push
in
push
jbe
mov
ss
gs
adc
mov
xor
pop
mov
lods
in
push
push
and
lods
ds
adcb
dec
test
stos
shr
test
and
and
add
sub
arpl
inc
sub
pop
cmpsl
inc
or
ret
notl
adc
mov
xor
add
push
add
out
inc
loop
or
add
and
mov
adc
xchg
test
sub
xor
in
adc
xchg
push
jmp
nop
pop
int3
mov
lods
inc
jge
pushf
pinsrw
mov
sbb
call
dec
sbb
mov
movsb
adc
mov
fs
mov
xchg
lods
in
fxch
dec
dec
and
lds
gs
xchg
into
and
cltd
rol
push
pop
pop
nop
pop
cmp
dec
mov
leave
push
push
or
mov
or
movsl
mov
and
int
push
add
adc
xchg
pop
mov
push
mov
mov
mull
popa
loop
add
fs
leave
and
insl
adc
daa
xchg
fadds
lock
inc
dec
dec
movsb
pushf
cmp
pop
lods
dec
mov
push
rorl
pop
out
pop
sarl
pop
repz
dec
jge
inc
xchg
inc
xor
movsb
mov
sbbb
lcall
lods
pop
or
jno
mov
scas
pop
addl
imul
xchg
push
pop
xor
popw
or
lahf
icebp
cli
cltd
popa
mov
ret
les
adc
mov
icebp
or
add
mov
add
xor
icebp
mov
add
ja
pop
nop
mov
and
mov
fildll
mov
dec
jecxz
int
inc
repz
ljmp
or
xchg
popa
mov
cmc
push
or
inc
xlat
mov
jo
fdivl
cmp
inc
shlb
mov
stc
jb
test
pop
mov
cltd
faddl
mov
imul
fidivl
push
jno
and
mov
push
adcb
shl
subl
cmp
loope
adc
adc
mov
mov
mov
add
mov
hlt
lds
jnp
or
mov
lods
dec
push
cld
pop
cmc
push
push
scas
dec
mov
push
shlb
push
push
ret
shrl
les
or
mov
mov
lahf
in
sub
mov
leave
shlb
sti
jl
sahf
add
insb
lds
les
xlat
clc
testb
nop
mov
mov
imul
fadd
scas
adcb
aam
dec
push
or
loop
ss
insb
inc
sahf
adc
pop
add
jo
addl
out
mov
cmp
arpl
inc
add
insl
mov
jae
add
mov
jmp
dec
enter
pop
popa
xor
inc
or
cmp
stos
adc
mov
xor
push
mov
bound
inc
mov
sbb
sbb
pop
ficomps
xchg
outsl
data16
fwait
out
jge
xor
dec
orb
xchg
insl
addr16
ljmp
fs
or
mov
jo
sub
cmp
arpl
jle
xor
jge
inc
fstsw
mov
lods
xchg
and
xchg
push
xchg
in
icebp
fists
or
out
dec
fildll
xchg
push
cs
or
mov
add
inc
push
or
faddl
arpl
jno
test
cmp
mov
mov
mov
pop
icebp
rcll
mov
add
ret
fwait
jae
and
scas
mov
ffree
pop
mov
push
or
sbb
add
mov
dec
or
fwait
inc
jne
sbb
sbb
cltd
in
push
sbb
in
pop
shlb
call
inc
cmpsl
int3
mov
and
sub
inc
add
dec
js
pop
jle
sub
push
or
pop
in
inc
popf
jmp
sbb
popa
scas
pop
jne
rep
orl
xor
in
or
sti
push
push
xlat
fsubl
dec
nop
xchg
push
sbb
popa
dec
dec
iret
adc
scas
loope
jb
inc
sti
or
add
not
xchg
les
mov
push
add
out
add
call
into
les
push
xor
adc
dec
cli
xchg
mov
dec
adc
dec
push
jp
adc
nop
add
mov
test
add
sbb
adc
lds
outsb
outsb
sbb
test
popa
or
lret
popf
cmp
jne
sbb
push
sbb
jge
fsub
ss
xchg
cmp
jle
sbb
dec
or
sbb
push
mov
in
js
xor
pop
adc
ja
adc
jp
cli
js
pop
inc
in
or
dec
mov
popa
sbb
adc
insl
adc
mov
mov
pop
andb
sub
add
cs
sbb
sub
addr16
mov
xchg
pushf
push
dec
shll
sbb
mov
xor
cmp
fs
test
adc
sbb
add
pop
icebp
inc
test
divb
fwait
push
outsl
sbb
pop
push
shll
ret
jmp
sbb
sbb
sbb
lock
dec
xchg
cmc
or
jge
cmpsl
frstor
ficomps
mov
push
sub
stos
push
push
sbb
pop
push
mov
sub
dec
pop
sbb
and
insb
dec
dec
add
add
lcall
mov
inc
lock
stos
insb
xchg
push
mov
aas
xchg
push
sbb
subb
push
mov
mov
es
xor
xchg
push
add
jne
mov
mov
imul
mov
jg
loope
pop
scas
outsb
sub
mov
adc
sahf
fsubl
add
push
popa
gs
mov
mov
fidivrs
pop
arpl
das
pop
scas
addl
push
out
scas
xchg
inc
or
push
insl
or
cmpsl
inc
pop
in
not
sbb
mov
adc
jmp
dec
adc
xor
icebp
jg
mov
rol
hlt
scas
fwait
pop
jae
or
xor
push
rcll
and
add
cmc
mov
loop
jnp
jg
divl
sbb
add
loopne
iret
sbbb
cwtl
out
mov
mov
jbe
jg
sub
inc
jecxz
clc
es
sub
mov
jl,pt
iret
mull
inc
add
sahf
inc
mov
das
sub
lea
lahf
addb
or
mov
mov
xor
push
sbb
roll
out
leave
pop
and
ficompl
push
mov
cmp
sbb
inc
mov
into
jmp
or
xor
sbb
pop
sahf
push
stos
js
xchg
rclb
add
out
inc
adc
adc
hlt
push
pop
jmp
xor
sub
push
lcall
xchg
jmp
adc
mov
fs
pop
loop
cld
pop
outsl
fldl
push
jge
and
orb
ja
in
sub
subb
mov
dec
xorl
mov
jno
data16
add
and
and
mov
lock
mov
mov
fadd
jbe
or
jmp
pop
add
and
fidivs
jmp
dec
pop
inc
adc
fidivs
pop
jmp
mov
in
push
out
dec
adc
add
xchg
xchg
mov
xor
bound
xchg
push
mov
lret
push
jge
xor
adc
push
add
mov
lret
ss
push
fdivl
mov
sub
cmp
negl
test
rol
fdivl
dec
push
and
mov
pop
mov
jo
push
and
sbbl
mov
cmpsl
xchg
sti
jp
scas
sbb
test
jg
lea
push
xor
dec
adc
and
inc
xchg
or
push
cli
imul
sbb
sar
popa
push
movsb
and
pop
rcrb
lea
fimull
push
ret
mov
lock
inc
ret
out
repz
stos
in
pusha
xchg
int3
test
mov
lcall
test
outsl
mov
movsl
inc
shr
push
or
orb
fcomps
ret
sahf
pop
stos
pusha
push
inc
mov
mov
ret
inc
sbb
sbb
push
lcall
orl
cli
enter
sub
inc
cmp
xchg
mov
inc
push
pop
push
cs
adc
and
and
dec
dec
cmpsl
sub
and
xchg
lret
cmpsb
dec
cs
mov
add
xchg
inc
call
ja
xchg
xor
test
dec
stos
fs
ficomps
fiaddl
adc
lds
jnp
xchg
mov
xchg
jne
xchg
push
sub
push
cmpsb
not
into
push
enter
xor
insb
mov
cmp
out
sbb
pushw
push
pop
or
lods
cmp
int3
pop
sbb
jne
mov
xchg
test
jns
in
or
int3
ljmp
imul
or
mov
mov
repz
mov
sbb
stc
push
or
pop
pop
jnp
mov
sbb
cmp
out
and
lret
pop
push
test
test
sbb
adc
adc
lret
push
pop
in
out
add
out
scas
popa
mov
add
pop
test
insl
inc
sbb
or
imul
inc
stos
jne
fcmovnbe
cs
and
fwait
addl
addr16
mov
addb
inc
stos
or
lcall
adc
jne
push
scas
loope
mov
or
pushf
ret
fmull
insb
jl
sbb
mov
sub
sbb
push
out
pop
fbld
loop
xchg
add
loopne
pop
adc
adc
orl
dec
mul
pop
cmpl
mov
sub
or
or
jns
int
mov
inc
xchg
push
push
dec
or
sbb
xchg
mov
testb
lcall
mov
sbb
push
ret
sbb
cmp
or
clc
ds
push
aam
into
or
stos
inc
in
or
mov
cmpsb
cmpsb
lahf
xor
mov
in
enter
fucomip
xchg
push
das
loope
xor
mov
popf
sbb
inc
rcrl
jns
jp
add
jb
push
rolb
loopne
push
pop
lds
loope
sub
push
sbb
sub
int3
sbb
mov
cli
addl
dec
sub
xchg
outsl
sahf
pop
nop
scas
mov
jp
dec
cltd
jb
inc
add
xor
jne
inc
push
cltd
pop
gs
outsb
mov
jmp
adc
pusha
movsb
dec
push
incb
xchg
mov
lcall
mov
pop
mov
test
shll
andb
roll
inc
cmp
pop
inc
lahf
pop
aad
push
add
xor
dec
and
push
adc
mov
jno
inc
inc
popf
sub
ret
test
mov
and
dec
inc
jg
jns
xchg
pop
mov
dec
push
and
mov
inc
fsubrs
pop
or
jle
int
shlb
sub
jg
inc
xlat
pop
mov
lods
out
and
mul
repz
jbe
roll
enter
addl
orl
cmp
bound
fmuls
sbbb
sub
sbb
add
mov
or
add
xchg
or
or
mov
daa
roll
adc
ss
test
or
push
dec
pop
add
xchg
aas
mov
fistpll
ficoml
rcrb
mov
pop
divb
mov
imul
ret
sbb
bnd
lods
xor
push
test
xchg
lods
out
outsl
cmp
aam
push
mov
cwtl
push
ss
xchg
push
xchg
mov
loopne
cli
enter
dec
xlat
mov
mov
xchg
out
or
push
imul
cli
imul
pop
xchg
imul
mov
xchg
mov
xor
data16
pop
sub
lds
adc
lock
xor
cltd
mov
add
push
xchg
data16
add
xchg
dec
mov
cmp
jbe
xchg
add
in
pushf
xchg
hlt
mov
xchg
insb
ds
cmp
mov
adc
cld
jne
sub
or
inc
test
in
jne
mov
stos
out
adc
jne
sahf
sbb
sahf
dec
dec
lods
sbb
pop
mov
ja
push
jbe
fldenv
aam
push
pop
fadd
pop
in
mov
fidivl
add
or
mov
push
pop
adc
les
mov
sbb
sub
fs
mov
aad
test
stos
inc
sbb
mov
inc
out
inc
xor
sbb
xchg
pusha
orl
popf
pop
dec
xchg
stos
sub
and
popf
push
daa
std
rorl
xchg
fdivrl
mov
xor
add
subb
mov
push
sbb
jmp
fiaddl
je
andb
ficomps
mov
std
xor
pop
jge
push
stc
pop
mov
sti
pop
jbe
out
xor
shl
push
cs
add
xor
inc
mov
xchg
rcrl
sbb
sbb
cmp
add
imul
mov
lock
fcoms
movsb
add
mov
addl
sbb
adc
push
bound
sbb
or
xchg
rcrl
inc
push
addb
or
rorb
sub
or
dec
gs
and
sahf
sbbb
dec
add
or
data16
fsts
test
push
or
pop
fstl
adc
enter
insl
fs
leave
loopne
out
fidivrs
mov
push
mov
subl
mov
inc
dec
pop
pusha
inc
mov
mov
fstpl
dec
rorb
inc
lcall
loop
push
and
push
pop
push
sub
mov
pushf
jb
jne
and
insl
call
push
inc
or
cmpsl
outsl
mov
xchg
and
add
test
pop
popa
cmp
sbb
lret
mov
repz
mov
cmc
rorl
mov
les
cld
xor
lock
cmp
fstl
or
push
roll
mov
pusha
popf
ret
les
push
add
loopne
xchg
or
repnz
notb
test
cmpsb
add
xor
gs
fidivs
cmp
ret
dec
push
mov
push
mov
iret
aaa
fidivl
lods
cmp
xor
bound
dec
and
adc
adc
sbb
mov
jl
push
inc
xor
jle
push
xor
xor
sbb
ficomps
push
stos
xchg
jb
xor
outsl
mov
cwtl
push
push
mov
fldl
into
push
or
fcomps
mov
inc
xor
jae
out
stc
pop
push
add
clc
pop
adc
inc
and
mov
das
hlt
lds
lods
inc
pop
aam
adc
push
or
cmpsl
mov
adc
cmp
mov
pushf
push
push
out
jb
add
popa
xchg
fnstsw
fdivrs
cmovle
jno
into
add
mov
out
int3
jno
sahf
dec
jle
repz
cmc
enter
push
dec
mov
mov
xchg
or
movsl
cmp
mov
fmul
popa
xor
ja
sbb
outsl
and
testb
shlb
jmp
roll
testb
imulb
lods
adc
test
stos
xchg
jl
and
pop
repz
add
dec
incl
mov
lcall
lods
insl
inc
mov
addr16
mov
mov
inc
adc
sbb
sahf
add
or
les
dec
dec
xor
xor
cmp
adc
sbb
insb
popa
pop
divl
jmp
std
jp
imul
andl
cmp
jg
xchg
out
fisttpl
inc
cmp
xor
in
jnp
sub
xlat
jo
icebp
mov
outsl
fwait
xchg
inc
adcb
or
std
outsb
add
lock
stos
xor
mov
fadd
adc
xchg
aam
repz
sahf
in
ljmp
pop
shll
cmpsl
xchg
mov
add
stos
cmc
push
pop
mov
sahf
push
cltd
inc
lea
lods
lahf
rorl
sbbb
push
inc
cmpsl
add
adc
sbb
fwait
loope
mov
dec
cmc
sub
sub
roll
dec
adc
pop
sahf
jle
xchg
das
and
orb
leave
mov
inc
or
cld
sarb
cmpsl
sbbb
adcl
insb
les
xor
or
add
mov
or
sbbb
mul
pop
cli
push
sub
sbb
gs
push
in
xchg
stc
cld
loope
cvtps2pd
dec
dec
cli
xchg
inc
pop
add
movsl
in
shrl
push
adcb
pop
test
sbb
int3
shlb
mov
sub
aad
or
or
push
mov
ljmp
mov
xchg
cmp
rorb
sbb
outsl
cwtl
scas
fisubrl
sub
pop
push
loope
cmpsl
in
fcmovnbe
or
inc
add
pushf
add
dec
mov
sbb
jmp
roll
pusha
mov
fisubs
ror
mov
ljmp
imulb
push
mov
aaa
out
xor
cmc
icebp
dec
xor
cmp
cltd
sahf
addb
inc
mov
ret
mov
filds
bound
lock
mulb
mov
sbb
sbb
hlt
sbb
jae
jb
jbe,pn
mov
xor
push
les
testb
in
sbb
add
dec
cmc
pusha
pushf
pop
push
jmp
scas
jnp
jbe
insb
mov
xor
das
pop
or
in
or
loope
pop
cli
pop
push
mov
testl
mov
movsb
lods
cmp
loopne
and
je
ret
sbb
mov
sbb
push
xchg
jno
jne
movb
pop
jbe
add
mov
enter
imul
pushf
add
xchg
and
or
mov
xchg
sub
int3
push
sbb
arpl
jae
jge
lret
mov
xchg
mov
mov
int
inc
adc
into
cmpl
sub
or
inc
fcmovnu
fisttpll
jo
adc
adcb
sub
mov
inc
outsl
cmpsb
lret
sub
push
popa
jecxz
jge
aas
enter
xlat
sti
enter
or
es
movsl
std
movsb
or
mov
test
push
test
push
or
cmp
lea
jle
jb
pop
enter
out
inc
loope
add
sub
push
leave
xchg
add
xor
test
loopne
inc
jg
push
enter
sub
xchg
out
outsb
sbb
cmpsb
testl
jnp
push
mov
and
andl
jbe
add
mov
test
sub
mov
xor
push
fnstsw
inc
xor
cmpsb
fsubs
cmpsb
aas
mov
test
inc
or
lock
lods
pop
jne
clc
cmp
xor
incl
adc
cmpsb
lcall
fmuls
dec
dec
dec
stos
imul
jge
cld
std
mov
sbb
cmpsb
fcomps
out
pop
add
adcb
sub
sub
scas
movsb
add
mov
pop
cltd
push
faddl
aaa
pusha
cmpsb
dec
push
mov
cmp
mov
push
aaa
test
xor
jno
je
mov
add
imulb
js
das
push
loopne
inc
or
jge
jno
jp
pop
loop
into
mov
mov
iret
xchg
jecxz
mov
mov
cmpsl
xchg
pop
adc
push
adc
das
xlat
jb
mov
lods
sub
pop
push
jne
lret
sub
push
adc
inc
hlt
dec
mov
pop
jne
or
insl
ret
je
fmull
jno
push
jecxz
out
sbb
loope
sub
jmp
insl
mov
in
mov
sub
or
sbb
subl
sbb
jno
stos
inc
mov
lods
cmp
sbb
or
in
xchg
pop
mov
inc
pop
push
and
add
jno
fwait
jmp
mov
cmp
lock
andb
loope
stos
jmp
or
jae
push
add
jg
lds
adc
lcall
shll
decl
xchg
lea
pushf
push
xchg
daa
push
mov
push
ret
rcrl
push
mov
mov
mov
ret
jecxz
jno
push
or
mov
or
aaa
push
dec
andl
test
js
inc
negb
push
sbb
daa
sub
jbe
sub
pop
cmp
ret
sbb
cmp
pop
cmp
loopne
mov
cltd
or
imull
add
pop
dec
test
loope
xor
sti
push
add
jecxz
mov
sbb
out
js
pop
movsb
out
lret
fidivs
stc
dec
inc
pop
jle
pop
sub
test
sbb
cmp
mov
sbb
add
aaa
aas
dec
test
cwtl
or
cmpsl
sub
fs
push
aaa
dec
or
sbb
repz
pop
clc
jge
gs
ss
and
sub
inc
sub
push
dec
jp
and
movsl
push
jge
repnz
push
mov
imul
fidivrl
pusha
mov
pop
mov
jge
mov
test
dec
and
addb
das
test
loope
subb
jbe
repz
fiaddl
fbld
lock
in
jp
ds
or
subb
xor
cld
je
rorl
test
jle
lret
fcoms
mov
mov
jl
cmpb
scas
xchg
sub
in
and
inc
shl
std
mov
fdivl
lcall
sahf
stc
aam
sarl
dec
push
inc
testl
sbb
pop
xor
xchg
jbe
js
imul
inc
sub
mov
fsubrp
inc
lods
fidivrl
or
loopne
fisttps
push
sbb
cmc
cmp
mov
lret
lds
stos
fmuls
bound
mov
mov
pop
cwtl
push
dec
push
rorb
xchg
mov
mov
xchg
ljmp
out
add
push
icebp
add
test
mov
lea
xchg
mov
pop
cld
jmp
ficomps
xchg
negb
cmpl
rol
in
xlat
push
sub
jmp
and
sbb
icebp
dec
pop
scas
aam
lret
mov
cmpsl
div
and
pop
decl
loop
push
andl
or
stc
push
mov
dec
out
testb
adc
pop
repnz
inc
push
fwait
enter
adc
or
mulb
test
cmpsl
mov
scas
outsb
mov
adc
imul
ret
push
push
dec
shrl
dec
das
mov
aas
mov
add
test
mov
loopne
test
lods
adc
xchg
add
movl
test
xor
sbb
loope
aad
fldenv
imul
pusha
cwtl
mov
out
or
daa
sub
lea
mov
xchg
mov
scas
dec
arpl
cmc
or
or
pop
andb
xchg
add
mov
inc
sbb
sarl
hlt
sbb
pusha
mov
jmp
inc
insb
je
loop
fdivl
cmp
mov
rcll
fs
filds
test
sbb
scas
mov
push
fcmovnb
push
lahf
rolb
lea
jb
loopne
cmpsl
das
push
popf
sub
fyl2xp1
rolb
aas
loopne
stos
out
fmulp
and
inc
out
cmpsb
js
push
mov
push
jbe
sbb
data16
mov
or
add
mov
push
popa
pop
fcoml
ss
mov
cmc
ret
shrb
imulb
je
xor
scas
push
enter
pop
daa
cmp
dec
ja
stos
dec
bound
daa
jns
cld
aas
cmc
in
je
lret
sbb
mov
bound
clc
inc
push
or
mov
jb
dec
sbb
sbb
out
cmpsl
imul
xchg
jmp
pop
mov
xchg
ja
add
add
xor
inc
push
jge
xor
lret
lea
push
add
or
push
mov
add
push
test
outsb
sbb
xor
dec
stos
addr16
pushf
add
pushw
fistps
xchg
jg
aaa
sub
sub
xchg
sbb
pop
mov
mov
jns
movsl
inc
in
xchg
cld
rcrl
daa
int
in
pop
sub
add
dec
aam
gs
arpl
add
or
sub
push
cld
lods
int
push
add
inc
adc
inc
or
and
push
pusha
scas
in
outsb
pusha
out
push
inc
mov
jge
inc
pusha
xor
insb
adc
mov
xchg
push
xor
adc
cmpb
loope
sti
add
adc
lahf
mov
lock
dec
and
lock
sbb
mov
push
cmp
cmp
gs
mov
xor
push
mov
lods
aas
dec
sbb
mov
jb
lds
push
mov
cmc
ja
add
ljmp
push
add
cmpsb
sbb
adc
mov
stc
shlb
pop
push
test
and
rcll
fstpt
sub
xor
lcall
in
pushf
lret
push
shlb
pushf
jo
sbb
push
add
test
sbb
add
inc
and
into
movsb
dec
imulb
add
xor
lods
sahf
sahf
fst
push
and
adc
inc
sbb
or
mov
nopl
rclb
adc
push
icebp
int
mov
aam
add
insl
sbb
mov
pop
xchg
push
jle
stos
das
and
push
outsb
push
and
pop
jb
sahf
pop
jbe
add
inc
xchg
inc
xor
fmul
mov
pop
jb
or
add
inc
icebp
bts
loope
das
mov
lret
dec
cli
sti
sub
pop
xchg
mov
outsb
mov
ja
push
sar
xlat
rcrb
push
ret
in
sbb
push
leave
pop
mov
xchg
add
or
mov
ret
dec
xchg
mov
or
cmp
pop
stos
jmp
mov
mov
or
cmpsb
push
insl
rolb
fists
or
dec
xchg
stc
push
pop
je
lods
sysret
or
sbb
add
push
cmpsl
mov
repnz
add
outsl
push
xchg
lds
sbb
lahf
push
add
mov
daa
push
out
fidivrl
leave
shrb
in
mov
sbb
je
lods
loopne
push
or
sbb
cld
and
and
pop
mov
fstpt
xchg
mov
inc
push
fwait
jmp
inc
add
lods
cmpsl
sbb
repz
push
dec
das
inc
aad
add
xor
push
push
mov
pop
mov
mov
add
lcall
insb
inc
pop
aaa
rcrl
add
ja
pop
add
and
popf
fisttpl
mov
xchg
pop
jnp
dec
push
lods
push
loopne
gs
mov
cs
stc
sbb
inc
push
loope
std
lahf
ds
jns
mov
and
sbb
push
daa
je
in
adc
out
jae
mov
cli
xchg
add
out
imul
js
loop
fwait
call
jne
xchg
mov
stos
push
push
dec
lea
jecxz
jne
push
add
scas
out
push
fstpl
idivb
push
and
xchg
push
push
dec
fwait
and
out
cs
inc
mov
ret
sub
mov
inc
daa
adc
push
sbb
pop
xor
nop
insl
scas
cmp
testb
in
mov
repz
orl
xchg
sub
or
outsl
inc
std
and
xlat
lods
xchg
cmp
leave
lds
cwtl
lea
stos
loopne
insb
std
xor
inc
std
and
mov
push
fsubs
lods
imul
add
and
sub
cltd
push
sbb
ficoms
and
outsl
mov
shlb
stc
add
sub
jmp
and
repnz
gs
jp
mov
dec
mov
cltd
pop
imul
jns
or
sub
push
adc
notl
pushf
ds
sbb
shrb
jp
inc
iret
popf
popf
cmpl
mov
pop
out
jmp
dec
and
add
sbb
fistpll
xchg
push
cmp
dec
inc
shll
fsub
mov
daa
pop
insb
push
loop
pop
mov
lods
cmp
xchg
aad
mov
mov
cmpsb
push
movsb
push
dec
jecxz
push
push
repz
fucom
adc
push
rol
repnz
cmp
stc
int3
mov
push
pushf
sahf
add
ja
xor
sbbb
pop
mov
xchg
aaa
cltd
inc
andl
sbb
mov
idivl
test
mov
arpl
nop
scas
and
xor
xchg
xchg
test
popa
cwtl
dec
cmpsb
push
testl
or
push
pop
jg
adc
or
lock
in
push
mov
pop
nop
jmp
mov
loopne
cmp
xorl
push
insb
aaa
loopne
sbb
xchg
cmp
cmc
fsubl
lods
cmc
xor
inc
in
mov
or
inc
pop
push
sbb
test
jp
ja
xor
lahf
mov
pusha
stc
pop
mov
in
cmp
lods
mov
sbb
sti
sti
sub
push
dec
mov
subb
sbb
stc
sahf
mov
shll
xchg
inc
mov
mov
mov
mov
mov
pop
sbb
popf
or
outsb
cmpsb
outsl
push
jle
pop
imulb
leave
mov
add
jp
scas
cltd
call
lods
loop
int3
clc
test
adc
add
and
or
push
shlb
stos
cwtl
daa
pop
mov
pop
pop
insb
or
adc
cltd
push
out
andl
mov
cmp
aad
sub
xchg
or
lods
int3
jle
or
fsub
xchg
mov
divb
pop
mov
mov
pushf
jle
pop
fdivl
mov
jp
psrlq
dec
push
std
leave
mov
ret
fldenv
push
pop
jecxz
xor
or
and
popf
jne
and
xchg
push
pop
jp
mov
stc
loop
loop,pn
imulb
sarl
test
pushf
mov
test
idivb
add
mov
daa
aaa
mov
inc
imul
imul
xor
jl
cmp
fwait
mov
jle
xlat
pop
cmp
dec
pushf
pusha
pusha
cmp
scas
mov
loop
pushf
loope
sbb
rcrb
pop
mov
inc
faddl
lods
clc
fnstenv
mov
mov
cmc
adc
pop
jp
sti
daa
dec
add
outsl
jns
add
pusha
mov
mov
mov
push
pop
xchg
mov
jle
mov
aad
adc
ja
data16
push
mov
adc
and
aaa
lcall
jne
arpl
push
into
mov
mov
ret
cs
xchg
sub
lea
sub
lea
xchg
sbb
icebp
sub
dec
inc
negl
pop
push
inc
test
scas
dec
rcrl
insb
push
xor
or
adc
ja
fcmovu
cmp
les
cs
ja
pop
sub
ja
push
sbb
or
adc
xor
fbld
ret
inc
test
insb
mov
sbb
call
in
addb
push
pop
mov
adc
sbb
sbb
jg
push
sbb
inc
and
and
sbb
gs
xor
dec
jecxz
jne
data16
or
or
xchg
mov
pop
mov
decb
lret
dec
and
sbb
outsl
and
bound
or
shrl
arpl
mov
leave
arpl
icebp
aas
xchg
addl
xchg
push
insb
sbbb
popa
imulw
data16
or
rcll
adc
or
xor
pop
popa
jne
or
out
jp
into
xchg
add
fimull
jns
mov
fisubrl
stc
add
add
testb
mov
inc
add
ret
mov
adc
outsl
pop
jg
leave
xchg
push
adc
add
sahf
xor
addr16
aaa
ja
inc
xchg
cmpsl
pcmpgtd
fmuls
fs
mull
jno
mov
outsb
aad
sbb
cmpb
sbb
jnp
pop
jno
daa
sahf
inc
sbb
orb
in
arpl
orl
int3
dec
sbb
sbb
sub
cmc
pushf
insl
arpl
outsb
pop
adcl
inc
adc
into
outsl
and
sub
or
outsl
inc
nop
loope
sbb
mov
lcall
adc
and
mov
sahf
mov
data16
pusha
test
loope
data16
aaa
adc
aam
pop
mov
xchg
xlat
mov
cmovns
jae
jnp
das
rcll
clc
addr16
test
repnz
fs
data16
insl
cmpsb
gs
mov
cli
push
insl
icebp
aam
mov
fsubs
adc
sub
lcall
addw
push
dec
orb
fdivs
mov
leave
ja
mov
sbb
push
js
daa
sub
shl
push
popf
xor
jno
cmp
dec
and
xchg
or
add
jnp
shll
outsb
fwait
loope
mov
fsts
mov
cmc
dec
addr16
mov
or
das
pop
loop
sub
sbb
dec
or
popa
int3
inc
test
jge
jl
mov
pop
inc
xor
push
jno
lods
and
daa
push
pop
jecxz
mov
hlt
aaa
lock
sbb
cmpl
icebp
in
add
fdivrp
icebp
mov
mov
scas
sub
out
jmp
dec
arpl
fs
enter
push
ret
pop
pusha
popf
pushl
xchg
int
loopne
mov
lcall
jne
dec
add
js
adc
sub
lock
ljmp
push
mov
loope
fcompl
fists
push
jecxz
js
out
in
insl
cmpb
aad
cmpsb
cmpb
adc
xchg
pop
push
addr16
imul
add
es
jl
sbb
push
dec
fdivl
xchg
mov
xchg
in
dec
push
inc
add
fimuls
xchg
icebp
fstp
fwait
mov
sbb
or
int3
sbb
call
jne
je
sbb
sub
sub
xor
or
or
pop
icebp
out
push
mov
and
insb
adc
sbb
dec
les
gs
push
add
xor
xchg
xorb
fwait
jno
out
sbb
dec
std
jno
add
xchg
das
cld
movsl
lock
and
pop
lea
idiv
jae
push
push
leave
leave
add
mov
inc
cmp
test
cs
push
sub
sub
mov
push
dec
inc
popa
jmp
and
imul
cwtl
nop
cmp
jno
and
sbb
mov
stos
and
push
frstor
lcall
sub
aaa
jecxz
or
in
or
sub
mov
adc
movsl
gs
xchg
mov
std
repz
xchg
dec
jg
adc
int
js
subb
push
inc
cmpb
jmp
repnz
insl
fisttps
scas
cmp
movsl
sbbl
pop
add
outsb
jp
or
mov
pushf
add
call
mov
aam
andl
mov
fidivrs
enter
imul
jp
lahf
mov
sub
dec
or
dec
mov
push
and
push
orl
cmp
popa
mov
xor
aad
inc
pop
lret
std
fmull
pop
push
pop
adc
in
mov
cld
mov
mov
int
push
push
ret
sub
adc
stos
dec
in
jae
lds
push
aad
sbb
shrl
xchg
fcomi
incb
jno
push
mov
inc
xor
das
xchg
fdivp
and
outsb
mov
in
cltd
push
rol
or
notb
scas
rcll
lds
push
std
lcall
dec
sub
cmp
cld
int3
fs
pop
lret
push
pop
jle
dec
sbbl
repnz
inc
loope
sub
lods
sbb
imul
mov
imul
xchg
xchg
xchg
ds
xor
fisubrs
arpl
sbbl
jnp
or
out
cli
test
imul
mov
loope
shll
dec
mov
inc
rcpps
push
mov
sti
or
mov
add
mov
pop
scas
add
test
jne
negb
fnstsw
pop
test
xchg
mov
or
jno
adc
int
out
fucomip
std
int3
jl
nop
cmpsl
xor
push
add
fistl
addb
iret
scas
jnp
in
in
cli
bound
fdivrl
or
test
add
outsl
test
xchg
add
sub
and
sbb
jno
sbb
ds
and
sub
inc
dec
sbb
cwtl
in
sbb
jg
pop
or
pop
fisubl
insl
sti
test
mov
and
test
push
pop
in
xchg
add
movsl
ret
mov
push
clc
shlb
pop
aaa
outsb
ja
lret
adc
outsl
mov
push
push
cmp
or
sbb
cmpsb
adc
daa
cmc
inc
mov
mov
push
mov
test
pop
jg
shll
cmc
jecxz
lahf
sub
mov
stc
or
mov
add
adc
roll
adc
jecxz
popa
mov
movsl
inc
mov
jns
cltd
add
enter
inc
mov
out
inc
or
mov
andb
xorb
mov
jb
lahf
fisttpl
pusha
pop
fsubrs
adc
sahf
xchg
addr16
cmpsb
fbstp
dec
mov
andb
push
mov
pop
jns
or
jmp
fdivl
out
xchg
test
or
loopne
fisttps
stos
in
ret
dec
and
pop
pop
mov
mov
mov
enter
scas
bound
push
adc
push
mov
dec
hlt
sbb
jp
xrelease
or
gs
adc
adc
jl
orb
dec
inc
inc
xchg
rcll
push
cmp
arpl
aad
add
add
dec
sub
rclb
test
cmp
mov
sarl
jo
gs
push
push
pop
jle
test
mov
subps
pop
dec
add
push
std
loopne
lahf
out
push
cmp
push
fucomip
sub
push
xchg
sbb
push
mov
sbb
pop
shll
aaa
push
xor
bound
scas
xchg
sahf
add
xor
xchg
cmpl
ss
inc
sahf
dec
sub
pop
popa
clc
jns
es
xor
out
fcmovnbe
or
movsb
jno
mov
sbb
nop
mov
and
repz
int
dec
and
sbb
xchg
gs
mov
inc
dec
jno
cmc
inc
lds
ret
and
repz
insb
fstps
pusha
mov
cmp
xadd
xor
sti
dec
adc
add
mov
cmp
stos
ja
push
inc
sbb
scas
xchg
mov
cs
mov
popa
insb
mov
in
addr16
xchg
imul
ja
gs
sbb
and
popf
mov
inc
xor
ljmp
sbb
push
bound
or
sub
fiadds
xorl
leave
sub
nop
mov
fmull
pop
xchg
das
loope
fcomp
push
call
cmp
int
mov
mov
nop
inc
sbb
arpl
inc
mov
dec
add
sbb
mov
int3
or
pop
or
sbb
and
scas
outsl
loope
or
imul
mov
lods
enter
add
mov
stos
inc
adc
push
add
inc
mov
in
push
gs
daa
xor
out
movsl
movsl
jno
mov
mov
adc
in
icebp
pop
push
stos
cmp
mov
mov
adc
and
leave
ja
rcll
out
fmul
jmp
jns
jg
cwtl
mov
lock
fimull
push
or
and
sbb
popa
pop
jecxz
insl
push
xor
out
add
dec
lret
leave
and
mov
lods
addl
jg
xlat
cmp
mov
test
mov
sub
adcb
pop
xor
mov
sbb
xor
push
sahf
movl
shll
outsl
std
mov
loope
cmpsb
icebp
fisttps
dec
into
das
inc
adc
push
pop
pushl
ret
sbb
cmp
cli
aad
scas
cmp
data16
mov
dec
xchg
push
loope
mov
aaa
jnp
insl
xchg
jl
sub
or
sub
xor
xorl
in
sti
push
das
xor
test
sbb
sbb
sbb
pop
xchg
notb
mov
rcl
test
popf
and
add
jmp
pop
scas
cltd
mov
sar
fdivrl
pushf
mov
popa
pop
setge
and
fisttps
inc
insb
incb
dec
xor
ljmp
jno
mov
mov
or
subb
leave
push
cltd
andb
outsb
loope
loopne
sbb
ss
push
fidivrl
inc
mov
inc
add
mulb
scas
test
in
mov
or
mov
test
xchg
out
push
pop
sarb
mov
jp
inc
sbb
sbb
or
push
jmp
or
jl
into
inc
cs
mulb
xchg
addr16
cmp
ret
fwait
inc
aas
in
cmpsl
xchg
or
test
dec
adc
or
mov
jno
pop
aam
inc
pop
and
out
jae
add
cmp
add
mov
cmp
cltd
inc
stos
inc
jmp
ljmp
aad
mulb
pusha
xchg
xor
std
add
sbb
jp
sbb
loop
sti
in
int
dec
add
mov
shrb
rorb
push
cli
cmpsl
pusha
xchg
mov
cmc
sbb
add
scas
outsb
jne
dec
pusha
fsts
mov
in
lcall
dec
scas
addl
data16
mov
pslld
and
es
hlt
test
hlt
es
jae
mov
push
scas
fnsave
call
sub
mov
jmp
shrb
and
adc
or
cmp
push
ret
xchg
enter
inc
lds
add
test
pop
mov
sub
mov
fistl
mov
xchg
shrl
negb
sub
out
inc
into
shrl
sbbb
lods
dec
xor
push
mov
inc
adc
or
insl
add
addb
dec
movsl
push
mov
pop
inc
jbe
pop
std
jno
fcmovb
jp,pn
in
das
cmp
sub
sbb
test
and
inc
sub
pop
dec
dec
or
into
and
or
lcall
addl
lods
cmp
sahf
jg
dec
xlat
cmpsb
dec
jae
flds
iret
pop
nop
ljmp
jns
jp
movsb
cmpsb
and
subb
out
mov
fs
les
mov
inc
push
push
pop
fiaddl
lcall
cwtl
ret
jl
lcall
test
fnsave
adc
or
ret
pop
mov
jbe
stos
pop
xchg
cmp
inc
mov
xlat
lahf
pop
stos
int
push
xor
or
pushf
jns
dec
or
iret
daa
test
add
hlt
adc
dec
add
push
ret
mov
cmp
push
xor
and
ja
test
movsb
dec
and
jo
out
or
sbb
push
mov
push
pop
adc
cmpsb
dec
adc
faddl
faddl
mov
sub
popa
sub
push
fcomps
xor
nop
sbb
inc
dec
jo
roll
shll
and
cmp
push
sbbl
cltd
adcb
test
xlat
sub
leave
and
cmp
inc
cli
dec
xor
sub
mov
insl
and
stc
lahf
icebp
or
or
pushf
dec
or
pop
inc
xor
add
arpl
jae
das
sbb
imul
jg
bound
push
mov
sarl
mov
add
call
or
xor
rol
popa
dec
jno
mov
cltd
ret
sbb
loop
push
xchg
push
mov
mov
sub
xlat
push
and
sbb
imul
lds
std
fnstsw
ret
stos
jle
inc
dec
pop
scas
sub
jg
adc
stos
ret
adc
sbb
into
push
sbb
mov
add
mov
pusha
pop
shl
mov
cmc
xchg
lods
push
mov
jp
push
test
mov
mov
sub
mov
cmp
decl
sbb
cli
mov
inc
mov
pushf
sbb
popf
aad
mov
mov
aaa
hlt
in
loope
cmp
push
add
mov
fs
push
pop
jnp
sbb
ss
or
test
sbb
sbb
lock
out
imul
faddp
or
mov
pop
add
sbb
pop
repz
mov
out
lret
int3
lret
cmp
add
dec
cmp
mov
sbb
add
ljmp
inc
jb
movsb
dec
popf
xadd
jp
pop
es
lock
push
inc
outsl
pushf
out
adc
cltd
icebp
in
cmp
jne
sar
fdivl
adc
push
pop
pop
pop
mov
stos
adc
loop
orb
cli
jp
fmull
fadd
push
loope
jnp
jne
lret
ret
adc
inc
mov
test
daa
rolb
jnp
arpl
pop
xor
cli
mov
sub
roll
jp
movsl
ss
popa
jno
subb
jp
and
inc
add
pop
cmp
imul
xchg
nop
sbbl
aad
sbb
jno
cmp
mov
mov
or
fucompp
in
jns
ja
inc
jl
inc
loopne
shrb
popa
push
bound
mov
mov
cmp
std
and
pop
dec
fsts
fs
add
xchg
jbe
dec
cmp
jle
pop
jge
jle
pushf
mov
push
imul
push
inc
cltd
mov
data16
popa
mov
push
pusha
jne
mov
inc
and
push
pop
repz
mov
sbb
jbe
nop
dec
ret
and
jge
push
jno
addb
adc
sahf
lcall
xor
mov
pop
add
sbb
jnp
popf
lret
cmp
xchg
in
shlb
pop
pushf
push
add
jnp
push
mov
sbb
sbb
sarb
into
add
popa
inc
add
fisttpll
lea
xor
in
fdivl
gs
dec
gs
repnz
jmp
mov
shll
dec
das
dec
pop
dec
data16
cs
jge
mov
cmpsb
add
add
shufps
int3
sub
dec
lahf
les
lock
mov
aaa
out
and
adc
js
mov
pop
std
xchg
fdivrs
or
divl
jnp
inc
fcmovne
mov
cmp
fldl
sub
aas
pop
push
rcrb
test
fwait
mov
scas
xor
mov
adc
sub
test
push
aaa
lods
mov
inc
popa
sub
and
mov
les
lods
gs
push
pop
adc
sub
call
mov
sub
into
pop
jp
push
xor
shl
inc
cmc
xor
dec
mov
cmp
sbb
stos
femms
scas
cmp
idiv
outsb
push
std
push
inc
iret
or
xchg
sbb
je
add
fnstsw
ret
cli
lahf
mov
jno
mov
nop
lds
jp
push
clc
stos
sub
insb
pop
dec
imul
ror
sub
pop
sub
xchg
jmp
add
xor
into
dec
inc
test
in
or
add
pop
lds
mov
mov
subl
dec
and
rorb
enter
mov
mov
scas
outsb
shl
inc
inc
or
stos
add
push
push
jmp
adcb
xchg
movsl
push
fimull
pop
sbb
rorb
dec
inc
sbb
cmp
das
or
lea
sbb
jg
rcr
sub
adc
adc
inc
es
in
in
or
scas
sbb
stos
jno
inc
scas
sub
jbe
jo
es
aaa
jb
add
mov
add
sub
sbb
notl
jge
or
push
mov
add
not
out
xlat
cmpsb
sbb
pop
push
pop
nop
and
into
or
jmp
inc
ja
push
push
std
mov
and
push
test
mov
push
push
outsl
cs
fldl
mov
lret
add
push
mov
mov
push
pop
xor
in
inc
jne
push
dec
arpl
inc
pop
lret
fisttpl
mov
aam
in
cli
push
adc
in
or
or
push
and
dec
ja
adc
inc
dec
cld
xlat
pop
inc
cmc
orl
xchg
xor
jo
lahf
jge,pn
lock
dec
arpl
push
add
cmp
lret
adc
cmp
out
data16
repnz
ret
cmp
xlat
mov
aaa
sbb
push
inc
sbb
mov
cld
mov
sbb
xor
mov
and
pop
mov
loope
adc
iret
inc
or
or
jmp
dec
mov
popa
jbe
in
push
test
fsubs
lret
sbb
add
inc
jp
out
xchg
sbb
mov
cmp
pop
or
jbe
jns
or
or
pusha
xlat
fcomp
cltd
ss
int3
decl
jmp
and
pop
add
mov
movsb
test
and
and
jno
push
fucom
add
push
out
jecxz
insl
pop
push
pushf
cmpsb
inc
loope
stos
xchg
imul
mov
imul
xchg
outsb
add
imul
shr
cmp
dec
hlt
sbb
cmp
dec
xor
popf
lcall
push
test
jns
shlb
push
pop
fcoml
xor
pusha
cmp
inc
push
out
jecxz
jbe
inc
cmp
or
inc
add
cli
sub
or
loopne
pop
or
mov
fldcw
iret
popf
jne
push
sbb
stos
stos
pop
mov
inc
adc
xchg
cs
es
add
imul
das
add
push
icebp
shlb
sahf
mov
in
xor
shll
mov
lldt
and
jle
push
in
mov
xor
or
add
jg
jmp
push
out
stc
in
inc
sbb
insl
imull
mov
mov
daa
shrl
clc
psrlq
js
lock
mov
and
mov
xchg
cld
pusha
cmpsl
lods
or
pop
mov
out
inc
cmp
mov
bound
call
dec
lds
cmp
mov
or
xlat
addr16
pop
pop
ret
jge
add
mov
push
gs
test
in
in
cmp
incl
fs
fbstp
add
and
cmpsl
push
ds
insb
outsb
jle
sbb
ss
push
test
xor
cmpsb
sub
rorb
out
adc
mov
fisttpll
movsl
xchg
dec
xor
mov
movsb
pop
ret
mov
stos
push
dec
pop
das
jmp
cmc
mov
nop
lods
popa
pop
test
push
jecxz
popf
inc
push
or
mov
ja
add
mov
jmp
or
ja
push
xchg
bnd
mov
loopne
cmc
lcall
and
int
dec
insb
clc
mov
xor
adc
push
sbb
das
sahf
subb
add
fnsave
ja
push
push
pop
cli
or
adc
loopne
scas
dec
cltd
sbbl
mov
and
shl
insb
adc
wbinvd
sbb
xor
fistpl
mov
jne
push
andl
fistps
adcl
mov
inc
xchg
and
lock
mov
fstpl
stc
mov
test
lret
pop
hlt
sbbl
and
inc
test
cmp
sbb
pop
xchg
mov
addb
inc
fldcw
daa
cltd
sbb
in
mov
call
fsubr
add
rclb
jb
rcrl
mov
lods
add
xlat
inc
stc
xchg
mov
lar
dec
outsb
xorb
jne,pn
sbb
pop
add
in
mov
sbb
cmpsb
dec
popf
movb
mov
insl
add
lret
mul
jmp
adc
fwait
mov
sbb
inc
mov
sbb
in
dec
stos
adc
pop
push
and
shrl
and
lock
icebp
xchg
mov
push
cmp
cmp
xchg
push
pop
inc
push
sub
sbb
dec
xchg
pop
cli
imul
push
in
cmpsl
dec
push
icebp
cltd
mov
ret
inc
lods
pop
ret
or
sbb
pop
movsb
or
stc
arpl
inc
sub
inc
xor
enter
push
fsubl
adc
inc
arpl
cmp
fs
mov
jge
popf
mov
mov
ret
movsb
pop
iret
mov
iret
sub
inc
ret
sbb
cmp
sbb
sbb
mov
insb
sarl
data16
mov
push
push
aam
or
add
lods
fs
jne
sti
mov
dec
sbb
movsl
pop
inc
fildll
mov
jmp
jp
add
std
cli
lcall
in
stos
rcll
test
mov
gs
fs
stos
jae
add
sbb
enter
loope
fnstsw
test
add
or
push
sbb
popa
xor
pop
subb
and
sub
sbb
rol
mov
push
push
cmc
mov
jmp
out
add
add
lcall
add
rol
sub
arpl
pop
aad
adc
scas
or
mov
or
and
mov
sbb
sub
mov
pop
add
loop
xchg
cld
nop
aad
out
xchg
outsb
jb
adcb
add
sbb
inc
fsubs
test
and
rorl
mov
in
out
mov
add
sbb
lods
xchg
inc
mov
push
inc
lods
test
int
push
push
imul
outsl
divb
or
sbb
mov
ret
lret
cltd
sub
inc
xor
out
rcll
dec
xchg
mov
fidivl
mov
ror
neg
xor
mov
mov
fdiv
and
pop
test
jns
pop
fdivl
xchg
js
iret
icebp
mov
xchg
loopne
popa
rolb
inc
push
push
xchg
std
mov
xchg
rcr
jecxz
fnstenv
addr16
inc
popf
sbb
push
mov
adc
sbb
xchg
jmp
test
xchg
xchg
inc
inc
repz
xor
filds
lret
mov
fldenv
rolb
repz
int
psrad
mov
daa
insl
pusha
lds
cmpb
push
sub
mov
fwait
rolb
add
xchg
mov
cmc
test
or
cmp
mov
adc
mov
dec
gs
jbe
aas
push
dec
cmp
jl
jo
and
sub
xor
sub
or
cwtl
scas
push
adc
fwait
test
movsl
sub
cli
jno
imul
adc
push
and
sbb
xchg
out
gs
xor
mov
xchg
jo
adcb
les
ds
jp
mov
loop
ljmp
sub
push
sbb
xor
xchg
shlb
dec
dec
mov
test
cmpsl
lret
repz
outsl
add
daa
dec
cmpl
out
inc
sub
shlb
and
xchg
test
outsb
test
ja
or
adcb
data16
push
push
and
and
mov
xchg
pop
sbb
inc
pop
sub
out
js
shrl
jbe
xorb
mov
mov
lea
mov
cmp
mov
sub
out
push
cmp
insl
testb
sbb
sub
mov
mov
or
mov
repz
sbb
inc
jbe
test
cmpsl
sti
pop
jo
mov
pop
stos
aam
sbb
test
sbb
push
das
loopne
xchg
inc
call
push
mov
and
ucomiss
xchg
mov
or
call
push
sahf
fdiv
mov
ljmp
push
test
nop
pop
xor
mov
mov
push
mov
push
and
adc
imul
mov
loop
mov
push
dec
popa
in
test
push
sbb
xchg
push
fcompl
jl
mov
or
std
ret
es
jmp
and
mov
out
mov
pop
test
cmpsl
test
sbb
imul
and
sbb
mov
fisubl
inc
les
repz
mov
fcoms
cs
inc
iret
xchg
xchg
ret
pop
inc
mov
inc
testl
push
sub
adc
in
jne
arpl
sarl
icebp
dec
jmp
jne
loope
or
push
sbb
mov
iret
xor
ret
jp
push
orl
mov
jne
jns
out
insb
imul
mov
dec
out
sbb
divb
jl
call
pop
push
jp
push
add
lock
jle
xor
leave
mov
push
adc
pusha
mull
dec
jo
mov
cmpsb
aaa
mov
xorl
and
cmp
xor
mov
xchg
iret
orl
dec
ret
xchg
cs
dec
out
dec
or
and
or
add
ficoms
xchg
sub
cwtl
mov
sub
addb
inc
xchg
aaa
stos
sub
popa
jo
mov
push
jl
add
rclb
xchg
pop
decl
cmp
loope
fldl
jmp
jp
xchg
incb
fldl
sbb
cmpb
fiaddl
add
push
sub
shlb
sbb
popa
inc
xor
out
icebp
push
mov
adc
scas
xchg
bound
repz
xor
ss
sahf
test
and
leave
in
or
lds
stos
lcall
popa
fisubs
lea
sbb
sbb
xor
std
bound
addl
mov
test
mov
sbb
rcrl
pop
cmp
xchg
or
imul
ljmp
inc
mov
sbb
ret
ljmp
test
add
and
pop
cwtl
jle
or
popf
mulb
pop
leave
stos
and
jmp
and
sahf
int
dec
pop
shlb
movsl
aas
push
jl
sub
add
cld
mov
push
cli
stos
cmc
cmp
dec
shlb
mov
add
cmpsb
insl
out
decl
pop
add
xor
add
aas
dec
adc
jb
cmpl
bound
in
sub
mov
mov
in
lret
jecxz
mov
popa
pop
sbb
jecxz
mov
js
fs
xlat
int3
push
ljmp
cmpsl
mov
cmp
lds
or
icebp
dec
in
bound
es
in
lret
pop
loope
mov
push
divb
cmpsl
roll
or
test
aaa
imul
lahf
js
clc
stc
dec
scas
fdivp
or
xor
imul
pop
into
adc
cli
addl
mov
cmpsb
fs
mov
inc
jno
movsb
or
lds
xor
cmp
dec
pushf
into
shl
loope
iret
push
pusha
sti
xchg
mov
loopne
add
sbb
rol
dec
sbb
mov
xchg
push
ljmp
push
jae
dec
sub
lret
idivl
ret
push
movsl
mov
xor
ja
mov
sub
fiadds
pushf
xchg
cltd
rorb
outsb
inc
or
mov
mov
in
sarb
xor
jl
inc
aaa
lock
xor
out
inc
lcall
add
mov
rorl
sub
add
xlat
into
call
subb
movsl
int3
call
sbb
sbb
test
sbb
sub
loope
sbb
jno
lahf
mov
or
cld
push
add
sbb
cmc
dec
cmp
dec
sub
jp
add
mov
and
out
sbb
insb
xor
adc
dec
dec
mov
cmp
jg
sub
and
out
or
test
or
cmp
sbb
pop
aaa
icebp
jae
loop
repnz
popa
push
mov
adc
and
and
mov
scas
pop
push
scas
inc
xchg
out
stos
jae
scas
sbb
jl
jp
fistl
jb
imul
fidivrs
dec
pop
dec
pop
xchg
add
adc
pop
xchg
dec
mov
test
mov
xchg
sub
sbb
sub
sbb
lret
xor
mov
fadd
inc
out
or
cmp
test
jbe
rcll
mov
repz
pop
xchg
dec
mov
inc
sbb
xlat
sti
stc
xchg
inc
jle
ljmp
cmpsl
pop
jg
inc
test
fdivrl
divps
lret
jbe
push
cmpsb
inc
mov
jecxz
mov
xor
adc
ret
loop
call
sbb
jb
mov
sti
add
test
mov
xchg
mov
push
dec
adc
jns
stc
jns
push
push
xchg
das
adc
popl
pop
or
pop
mov
sti
pop
fs
rolb
emms
and
add
cmp
xchg
pusha
scas
jne
jns
mov
mov
popf
push
sbb
add
repz
addb
push
bound
stos
fdivrs
mov
push
int
xchg
jae
pop
mov
jecxz
scas
mov
sbb
movsb
popf
mov
xor
cmpsb
mov
and
pop
pop
dec
int3
push
mov
fistpl
or
test
daa
mov
fdiv
push
dec
popf
sub
clc
jp
or
ss
adc
dec
sub
pop
scas
push
test
lahf
aad
sbb
addb
sbb
inc
ja
pop
stos
or
push
and
mov
mov
das
enter
jb
sbb
mov
arpl
push
mov
sbbb
inc
cmpsl
sub
fs
sar
cmp
ss
dec
jno
inc
andb
icebp
loop
jl
ljmp
cmp
add
stos
lret
push
jp
xor
jno
mov
push
hlt
dec
mov
cmc
fldenv
scas
movl
js
mov
sbb
test
push
push
icebp
xor
addr16
repz
gs
popa
mov
jle
adcl
lret
repnz
add
ret
adc
pop
or
inc
and
and
push
mov
fildl
orb
lods
jno
cmc
pushf
mov
jmp
push
rorl
in
add
pushl
sub
push
fwait
rolb
les
call
mov
mov
gs
sbb
ret
inc
lds
dec
push
add
dec
inc
and
jecxz
stos
mov
cmc
and
dec
in
lcall
int
mov
jmp
popf
int3
imul
and
or
in
push
jne
dec
jne
jbe
mov
or
test
pop
jne
adc
lds
pop
sub
xor
xor
loope
out
jmp
fs
or
nop
mov
cltd
mov
stos
inc
and
bound
cmpsl
fs
ja
rol
gs
addb
push
dec
test
sub
pop
ret
mov
daa
jecxz
lock
xor
std
pop
lock
das
or
dec
fisubs
mov
adc
jb
lret
imul
mov
cmp
xchg
test
idivb
push
add
call
outsb
outsl
es
jmp
test
jecxz
xchg
cmp
aaa
pop
je
insb
adc
fdivl
loope
scas
add
lahf
mov
mov
in
int
loope
jmp
xor
pop
scas
ret
push
or
add
mov
and
dec
mov
sub
or
or
sahf
pop
push
push
fwait
lret
jg
or
jge
sub
aas
repz
sub
dec
sar
dec
sbb
add
in
bound
mov
sbbl
fcoml
and
inc
sub
xchg
mov
pop
sub
cmpl
push
push
push
les
pop
jne
cmp
out
test
push
sub
jmp
lods
sti
mov
jns
sbb
fstps
das
inc
call
mov
add
mov
sti
and
dec
mov
or
mov
addr16
fcoms
pop
jmp
cmpsb
add
in
cmp
inc
or
sbb
ss
fdivrl
sbb
push
or
pop
aaa
and
loopne
shll
xchg
dec
mov
jmp
dec
push
mov
push
mov
test
in
pop
xchg
je
mov
lret
push
add
xlat
scas
imul
sub
inc
jecxz
fsubrs
out
adc
out
or
nop
gs
nop
mov
jns
jnp
leave
inc
xchg
pop
or
fbstp
dec
xor
mov
cmpsb
cmp
pusha
adc
push
cwtl
lods
or
cmp
out
or
iret
inc
repnz
jecxz
mov
and
pop
dec
sbb
add
or
test
add
jle
xlat
aaa
mov
fmul
fisubl
test
les
xchg
divb
jmp
fwait
aam
gs
xlat
cmpsb
push
das
xchg
popf
add
ficomps
std
ljmp
pop
add
pop
fdivl
movsl
inc
ret
decl
xor
out
add
test
out
inc
push
sub
inc
ss
dec
and
test
rcrb
mov
jecxz
pop
andl
rclb
push
lret
popa
xchg
mov
or
pop
out
jle
fwait
push
dec
sub
cli
cld
hlt
movsb
or
sub
push
sub
pushf
mov
cmp
and
in
ljmp
test
mov
bound
inc
fcmove
ja
pop
mov
pusha
hlt
ds
shlb
repnz
cmp
ja
daa
leave
push
fstpt
adc
sbb
int
popa
or
inc
imul
aaa
adc
mov
aam
pop
ljmp
xchg
xorb
decb
rorb
data16
das
out
pop
and
scas
and
add
mov
jmp
je
es
in
mov
fstl
stc
out
or
cmpl
adc
pushf
cs
stos
dec
les
divl
ret
pop
cmp
mov
inc
cmpsb
and
add
pop
imul
inc
scas
cmp
int
fimull
fisttpll
pop
stos
lods
inc
lds
test
hlt
jno
add
push
pusha
sub
or
test
popa
fldl
inc
loope
rorl
xchg
and
or
sub
jmp
add
stos
sub
sub
cwtl
subl
rcr
dec
inc
outsb
push
lcall
sar
dec
notl
mov
fs
and
xchg
pop
sbb
push
sbb
and
leave
lock
add
popa
test
pop
pop
sbb
outsb
and
adc
and
shl
pop
sahf
adc
sub
outsb
cmp
mov
ficomps
addb
and
or
nop
dec
std
mov
shll
lret
mov
inc
sub
sub
xor
adc
insl
sub
adc
lds
inc
sbb
in
pop
inc
add
sbb
outsb
push
xorl
and
gs
test
adc
rcrl
popa
das
call
pop
jecxz
sbb
sub
out
rcll
daa
xor
jmp
in
add
loop
xchg
mov
and
jle
jl
out
xchg
andb
and
cmpsb
and
cmp
or
or
push
fstpt
inc
xchg
add
mov
jg
addb
jge
std
popf
lahf
adc
or
xchg
mov
js
push
nop
pop
push
mov
xchg
inc
ret
clc
push
or
jne
jnp
push
sub
leave
addb
insb
lock
icebp
bound
inc
cld
jp
mov
add
std
add
mov
js
jns
testb
or
sub
sbb
test
mov
pop
inc
orb
ficoms
out
sub
test
cmp
test
lods
push
dec
dec
dec
cli
mov
je
in
mov
add
and
rcrb
sbb
push
push
insb
not
push
pop
movsb
push
cmpsl
pop
inc
cmpsb
int
adc
sbb
sbb
jge
and
push
lods
xchg
movsb
sbb
lds
add
fsubrl
js
icebp
mov
notl
xchg
add
in
cmpsb
xchg
jl
pop
push
mov
cmovle
fldt
ss
leave
inc
iret
popf
out
mov
fdivrl
and
les
cltd
sbb
rorb
inc
fs
pop
es
sbb
stc
rclb
lahf
hlt
add
adc
mov
mov
ftst
jbe
sbb
cli
ret
rcll
outsl
jne
leave
xchg
xchg
int3
out
cmp
jbe,pn
inc
jmp
sbb
push
sbb
icebp
loope
lcall
int3
jp
jns
push
dec
in
inc
jmp
push
out
or
fcompl
ret
mov
in
xor
in
inc
cltd
nop
jp
and
push
pop
jnp
or
cmp
xchg
mulb
test
icebp
pop
fincstp
rorb
imul
cmc
or
pop
aad
or
test
ds
inc
pusha
jo
mov
scas
add
add
pop
cmp
loop
mov
and
pop
add
mov
cmpsb
or
movsl
lret
gs
mov
cmpl
cltd
sub
push
divb
sbb
lds
daa
pop
outsb
push
add
mov
jae
enter
jge
imul
mov
andb
cld
jbe
shlb
testb
dec
pop
scas
ret
pop
arpl
mov
sub
stc
sbb
jmp
and
subb
into
xor
leave
popf
orb
mov
push
cmp
mov
popl
sarl
push
push
insl
popa
cwtl
xor
mov
faddl
add
mov
fldl
std
sub
inc
jecxz
inc
mov
dec
push
pop
pushf
mov
sub
outsl
popf
xchg
mov
mov
jp
mov
test
les
push
sahf
and
jle
cmpsl
ja
or
xor
out
pop
dec
stos
sub
xchg
sub
jg
ss
lea
jmp
out
sbb
cmp
push
jle
aas
insb
mov
sbb
je
dec
sti
and
aas
pop
insl
push
cmpsb
pusha
xor
push
push
test
sbb
sub
inc
rclb
icebp
jmp
cwtl
repz
jecxz
xchg
into
or
cmpb
lock
mov
sub
inc
in
mov
mov
cmpsb
fdivl
xchg
sub
fs
inc
jbe
cmp
sbb
and
add
add
xor
cli
outsl
test
or
ret
jbe
mov
outsl
pushf
lea
adc
push
mov
mov
or
adcb
mov
sbb
cmc
sbb
dec
cmpsb
shl
sbb
scas
sbb
xor
sbb
mov
mov
mov
cltd
sarl
repz
pop
clc
mov
fs
andl
fwait
std
ljmp
sbb
dec
jb
or
xor
fwait
test
dec
add
cld
jp
fucomip
push
sahf
cmp
loop
mov
mov
in
inc
enter
lods
cmc
xchg
dec
sub
add
das
loop
orl
sahf
push
cmpsl
jge
cmpsb
dec
stos
add
dec
add
pop
fcoml
jbe
sub
cli
inc
lods
mov
dec
popf
js
arpl
js
sub
push
stc
mov
add
imull
jecxz
sbb
cli
add
aas
jl
xchg
mov
adc
fdivrl
aam
movsl
jno
aad
mov
fistpl
roll
lock
rorb
repnz
mov
add
sarb
jle
or
jo
dec
outsl
pop
adc
xlat
mov
ljmp
sbb
xchg
adc
cwtl
sbb
ret
and
xlat
xchg
add
add
mov
or
xchg
pop
scas
jl
sbb
outsl
test
inc
jmp
or
shrb
dec
fildl
sbb
sbbl
fsubrl
mov
mov
cmp
cwtl
sbb
mov
aad
lret
jle
and
fidivrs
mov
mov
inc
xchg
fs
aam
adc
dec
mov
rcrb
mov
rolb
push
fisttpl
xor
fsubrl
rcll
sub
lods
add
push
stos
mov
pushf
dec
inc
out
push
or
int3
sub
mov
or
inc
call
stos
xchg
mov
xor
add
pusha
sbb
lea
add
and
and
subb
add
rcll
psraw
and
jnp
or
shl
xchg
xchg
xchg
push
pop
int
test
sbb
cltd
mov
outsb
sarl
andl
and
outsl
push
in
push
mov
pop
in
pusha
inc
jle
sub
push
and
mov
mov
and
stos
or
sub
push
movsl
test
in
lea
inc
and
idivb
cmp
xchg
roll
fcoml
cmpsb
push
and
loop
jmp
subl
xchg
sbb
popf
ss
scas
cmp
fsubs
ljmp
aaa
push
sbbl
sbb
insb
mov
cli
push
cmp
push
add
std
loop
xor
rcr
xchg
test
push
jbe
jmp
add
repnz
pop
jp
xchg
leave
jns
or
dec
push
scas
pop
inc
mov
push
mov
push
sbb
scas
or
add
ret
std
sbb
fwait
jge
cmp
int
jp
pop
in
lret
stos
imul
shrb
and
repnz
bnd
daa
imul
lcall
popa
jecxz
data16
ds
pusha
cld
pop
jno
mov
add
repnz
mov
pop
mov
add
mov
out
in
mov
and
adc
or
xchg
test
outsl
jge
push
fwait
sbb
xor
int
repz
dec
push
rorb
jbe
mov
pop
in
mov
stos
scas
flds
mov
in
bound
add
xchg
jmp
or
scas
xor
sub
push
sti
scas
sub
int3
daa
mov
xor
mov
test
mov
lock
addr16
add
aam
jne
xor
ret
pushf
mov
cmp
dec
dec
cltd
bound
movl
xchg
push
push
pop
test
adc
push
lea
cltd
lock
adc
push
and
or
nop
and
cmp
clc
in
pop
or
imul
mov
popa
in
cmp
inc
neg
int3
sbbb
xchg
and
pop
pop
shll
jnp
dec
inc
mov
or
cmp
cmp
add
shlb
outsb
sbb
jecxz
push
int
pop
loopne
test
clc
data16
hlt
add
pop
test
icebp
mov
scas
mov
jge
out
dec
aad
or
xor
lods
rcr
pop
out
out
mov
mov
mov
add
scas
add
mov
jecxz
lock
das
stos
loopne
add
xchg
jne
and
push
in
shlb
repz
pushf
add
fildll
xchg
jmp
in
ret
and
add
insl
sub
add
jne
xchg
test
je
into
aas
and
shlb
das
fsub
test
dec
cmc
cmp
sub
lock
iret
xorb
pop
jne
mov
mov
sub
mov
hlt
stos
in
stos
push
test
xchg
orb
cmp
or
sbbl
jl
xor
lahf
fisubs
ja
addl
repnz
fldcw
pushf
mov
int3
jns
cmpsl
lahf
pop
add
rcll
sbb
sub
jle
ret
jbe
mov
aaa
decb
or
jne
out
mov
push
popa
xchg
adc
and
mov
sti
ds
push
add
ss
mov
rclb
mov
mov
and
lret
xchg
or
adc
popf
int
or
fisubl
sub
pushf
and
cmpxchg
mov
testb
sbb
or
xor
xor
dec
mov
andb
sbb
sub
pop
jg
out
outsl
imul
pop
idivl
ljmp
or
movsb
mov
je
or
or
loopne
jp
sbb
pushf
xchg
das
mov
imul
addb
movsb
lock
sub
cmp
ss
xor
inc
and
cs
xchg
lcall
mov
mov
cmpsl
rcl
adc
sarl
leave
push
inc
lock
sub
testb
pop
aam
sbb
push
mov
xchg
mov
or
out
inc
dec
push
out
push
cmp
mov
pop
push
sub
test
add
xchg
gs
push
pop
sbb
mov
rorl
push
sbb
xchg
cltd
or
in
add
mov
xchg
jecxz
arpl
xor
shll
insb
lock
xchg
add
ret
mov
add
jo
cmpsb
inc
aad
mov
int3
push
jge
daa
pushf
mov
mov
decb
sbbb
fs
ds
pop
sahf
lds
leave
jno
sbb
mov
xchg
pop
push
xchg
cmpb
scas
lods
pop
shrl
leave
mov
cmc
push
lcall
popa
testb
inc
mov
ljmp
imul
adc
sub
pop
icebp
adc
mov
ror
push
sti
xor
sbbb
pop
insb
lcall
sbb
or
adc
fisubrl
inc
aas
ror
rcll
cmc
dec
outsb
adc
xor
cmp
jl
jbe
jno
mov
push
and
push
mov
adc
sub
addl
sbb
adc
add
loop
mov
aaa
or
fnstenv
mov
push
sub
dec
outsb
sbb
add
xor
push
int3
ret
outsb
adc
sub
jmp
jl
js
mov
mov
adc
xchg
fs
inc
dec
pop
mov
xchg
or
cwtl
dec
add
daa
imul
sbb
pop
test
xchg
fildll
and
lret
out
dec
inc
frstor
call
daa
das
adc
sbb
xor
les
mov
repnz
add
mov
add
mov
xlat
xchg
pushf
cmp
sbbb
test
xor
fidivs
sti
fwait
xchg
jp
adc
outsw
in
das
gs
lods
shl
and
mov
cli
jecxz
fldt
int
in
mov
adc
xor
pop
push
mov
mov
inc
or
dec
fdivrp
jl
mov
fwait
loope
js
sub
pop
lds
rcll
dec
rcrb
mov
fs
jg
loopne
adc
stos
fsubs
pop
cld
and
push
sbb
dec
inc
jge
ja
dec
pop
fld
aam
add
lcall
cwtl
inc
orl
sti
cltd
movsb
ffreep
push
mov
or
pop
mov
dec
jo
jbe
insl
jp
xchg
cld
push
repz
cmp
push
sbb
pop
fsubl
mov
cmp
out
push
dec
out
stos
out
dec
or
mov
outsl
ret
add
stos
call
lcall
pop
add
adcb
adc
clc
outsl
jp
rolb
sahf
mov
stc
add
or
out
mov
cltd
xchg
icebp
dec
out
icebp
or
inc
and
fdivrs
cltd
pop
mov
les
movsl
push
lcall
sub
cs
shl
pmaxub
data16
cmc
mov
adc
push
jg
push
clc
stc
data16
sub
outsb
test
ja
jg
push
imul
mov
sbb
xor
xor
faddl
xchg
out
cs
sbb
push
push
dec
sbb
lock
enter
mov
dec
subl
testl
jp
or
mov
repz
push
or
mov
sti
js
push
and
mov
mov
loopne
inc
add
test
sahf
inc
or
outsb
sbb
push
cmpsb
or
push
ror
int3
pop
xor
inc
adc
bound
xor
inc
test
shll
add
jp
mov
sbb
lret
rcl
and
fnstenv
lea
add
add
mov
popa
les
push
sbb
pop
fucomip
leave
loop
sar
push
lock
adc
or
outsb
ss
aad
scas
push
xchg
arpl
popf
mov
adc
icebp
aaa
out
les
sbb
fmull
push
mov
push
sub
adc
repz
negl
into
inc
gs
cs
sub
and
mov
jo
jne
shl
or
pusha
pop
mov
movsl
mov
mov
mov
mov
fcomi
cmpb
dec
lcall
mov
or
ficoml
adc
test
or
ror
ss
and
xchg
and
add
and
sahf
outsb
call
hlt
data16
jmp
into
imul
sbbl
xor
add
aam
imul
mov
or
cmp
push
nop
daa
fistpll
int
cmp
sbbl
ljmp
pop
and
xor
jg
jle
adcl
pop
out
cli
cmp
or
xchg
shlw
rclb
xchg
mov
sub
push
xorl
fcomps
mov
shll
or
insl
inc
jnp
addl
mov
stos
sbb
ret
mov
pop
xchg
fsubs
movsl
rcl
sbb
add
test
sbb
cmpl
mov
dec
mov
leave
mov
ja
adc
in
push
cmpsl
dec
fcoml
out
sahf
jbe
ret
lahf
sahf
jne
pop
push
negb
lret
loope
xor
hlt
inc
ja
xor
int3
inc
scas
ficoml
add
out
inc
orl
cmc
push
push
cmp
push
imul
push
icebp
jge
mov
add
inc
outsb
pushf
pop
inc
out
fnstenv
ljmp
push
addb
mov
mov
mov
bound
fistl
insb
mov
ret
or
sub
adc
cli
xor
sar
mov
dec
sbb
sub
sub
mov
popf
imul
in
sti
pop
gs
sarl
sahf
sbbl
flds
add
push
mov
sbbb
sub
ret
jmp
addr16
and
sarb
add
mov
xor
call
and
fcomi
mov
imul
andb
or
xor
sbb
sbb
inc
sbb
xor
push
add
inc
pop
push
loop
das
xchg
push
in
adc
repnz
push
addl
add
aam
pop
inc
or
insl
pop
jmp
jg
inc
jp
cmp
nop
mov
sbb
and
inc
lret
mov
cli
imul
test
cmp
adc
mov
dec
aad
adc
sti
into
jns
inc
sarl
repnz
add
inc
ljmp
xlat
sbb
sti
movsl
std
mov
mov
lock
push
dec
push
les
scas
ret
rcrl
or
sbb
xchg
jg
inc
popf
push
aad
sbb
dec
nop
sub
data16
test
jmp
fadds
out
sbb
dec
cmpsl
inc
pop
stos
and
cmc
mov
sahf
sbb
shlb
filds
shrb
pop
dec
addb
gs
jnp,pt
cmc
pop
and
add
dec
arpl
or
rolb
mov
fwait
add
repz
int3
push
lcall
add
push
jae
mov
addr16
xor
sub
fsubr
jmp
lret
cmp
rol
xchg
sbb
decb
inc
jo
sbb
push
fcmovnu
jge
mov
in
lock
scas
cmp
sub
push
daa
sbb
inc
dec
pusha
and
pop
mov
and
out
out
cmp
push
fs
sahf
test
out
dec
mov
lret
add
jno
sub
push
dec
cmc
mov
pushf
jge
ficoml
jp
sub
lock
in
or
lods
loope
js
test
jb
pusha
pusha
xor
imul
mov
lods
aas
leave
xor
mov
adc
fcomi
lret
push
stc
push
fists
popf
fdivrs
jb
adcl
mov
cmp
jo
arpl
and
dec
sub
repnz
inc
loope
pop
dec
sub
lock
test
push
or
inc
pop
fwait
mov
push
outsb
xchg
scas
mov
adc
adcb
movsb
dec
loopne
sbb
outsl
mov
fs
xchg
rolb
in
adc
xorl
cld
out
imul
sub
repz
jb
or
test
pusha
cmpsb
loope
push
xor
xchg
dec
sbb
pop
daa
xchg
fwait
ds
in
mov
mov
in
gs
int3
out
adc
test
imul
lret
add
rep
jne
sub
pop
sub
sbb
fstl
inc
aad
in
push
mov
pop
dec
push
bt
mov
mov
adc
jecxz
sahf
ljmp
loope
mov
xor
sub
jg
int3
pop
cs
aad
push
pop
lds
mov
fs
push
mov
adc
fisttpl
mov
jp
out
mov
sbb
leave
pop
lds
fstps
mov
and
mov
pushf
fmull
shl
mov
rclb
sti
pop
xor
cli
mov
sub
and
sub
or
outsb
mov
or
cli
outsl
aam
out
and
inc
sub
add
fiaddl
push
push
addr16
test
add
mov
bound
sarb
push
sbb
xchg
xchg
inc
mov
add
jmp
aas
pop
out
pop
icebp
das
cli
loope
xchg
cmc
sbbl
gs
fwait
aas
xor
pop
dec
xor
movsl
es
outsl
pop
push
xorb
or
mov
mov
mov
cli
std
mov
mov
in
loopne
xor
xchg
pop
in
mov
sbb
pop
cmpsb
or
xchg
fwait
sbb
xchg
mov
jge
jl
and
aaa
push
call
dec
icebp
pop
faddl
or
cmc
arpl
add
leave
dec
inc
inc
fisttpll
inc
mov
add
cmp
mov
jmp
enter
pushf
addb
adc
jle
fldl
push
cltd
scas
add
add
nop
mov
push
dec
fucomi
mov
icebp
and
icebp
popf
mov
aas
xor
in
and
mov
loope
test
mov
js
dec
sbb
out
inc
xor
xchg
jae
mov
add
rep
ret
push
fs
clc
movsb
cmp
addl
dec
pop
insb
push
xchg
cmc
mov
inc
xor
lods
xorl
add
lret
pop
and
into
cmp
push
fs
rcr
stc
or
dec
xor
std
add
dec
push
mov
lret
add
cmp
outsb
or
sbb
imul
enter
add
mov
fisubrl
dec
cmp
pushf
mov
ja
and
inc
jno
aad
stos
mov
repnz
pop
jae
inc
fldenv
aam
movzbl
test
dec
pop
lods
push
pop
mov
xchg
push
out
mov
addr16
andl
imul
das
adc
or
sub
cld
shrl
sbb
test
adc
lods
icebp
mov
and
mov
mov
je
idivl
add
mov
xchg
xchg
or
sbb
push
mov
sub
xchg
xchg
mov
push
sahf
push
pop
stos
hlt
mov
ljmp
sub
dec
push
out
inc
nop
iret
mov
movb
les
jno
cmpl
push
cmpsl
xchg
jp
imul
pop
jb
adc
out
xchg
push
insl
pop
fstl
jmp
dec
seta
dec
daa
insw
push
jle
call
sbb
ja
or
lret
dec
sbb
cmp
pop
testb
mov
inc
nop
xchg
lods
rol
sbb
int
jge
push
mov
and
add
inc
inc
sti
jbe
popf
pop
push
aaa
test
jle
add
pop
jle
es
pop
or
inc
mov
inc
aas
and
push
and
mov
xchg
xor
out
jae
push
loope
movsl
sbb
dec
xor
cli
enter
popf
shr
cmp
dec
cmp
pop
mov
or
addb
stos
jecxz
stc
cs
jns
cmp
fisubrs
bound
insb
cmp
fstpt
inc
or
stos
or
shll
inc
mov
out
movsb
int3
out
adc
xor
push
imul
cmp
or
pusha
mov
mov
stc
pop
bound
cmp
push
popa
xchg
push
aad
lods
xor
sbb
lcall
or
inc
jmp
ret
fucomip
in
sahf
out
or
cld
data16
out
fs
and
inc
xchg
stc
pop
mov
popa
xchg
push
jmp
stos
cli
mov
xchg
faddl
aaa
dec
lahf
and
inc
inc
scas
mov
add
mov
les
dec
cmp
daa
mov
or
int
in
dec
dec
cmp
sbb
je
in
or
mov
pop
pop
out
ret
jp
inc
xchg
sbb
mov
push
cld
arpl
xchg
mov
xchg
mov
pop
sbb
inc
sbb
push
push
inc
mov
std
fwait
repnz
pop
add
push
mov
or
sub
in
push
iret
mov
cld
faddp
test
jp
sub
addb
cmp
pop
cwtl
ret
fildll
push
push
out
test
sbb
add
adc
mov
jmp
cmp
sysexit
mov
cmpsl
fistl
jnp
xchg
mov
andl
les
and
fcompl
out
inc
add
lods
aas
mov
push
sbb
es
test
popa
pop
fs
cli
idivb
xchg
ja
icebp
ljmp
cmp
stc
mov
inc
popf
lods
ret
scas
add
bound
xchg
xchg
jge
clc
neg
mov
ret
sbb
pop
lcall
xor
inc
sub
xchg
out
jecxz
rcrl
inc
dec
loop
roll
lods
cmp
lahf
sub
scas
dec
repz
mov
dec
cwtl
mov
push
xlat
and
movl
mov
mov
push
add
and
push
imull
orl
hlt
aam
loopne
ret
jne
jno
daa
inc
mov
loopne
aad
pop
dec
decb
cmpl
sbb
mov
or
dec
add
lahf
addr16
push
arpl
sbb
push
inc
arpl
jmp
mov
fdiv
add
sbb
jmp
and
in
stos
pop
inc
push
push
push
add
rorl
adc
dec
mov
push
add
pop
jle
lret
or
cwtl
mov
enter
in
cs
dec
rcll
mov
push
inc
loopne
cmp
add
add
push
dec
xor
loope
add
dec
dec
movl
ljmp
and
inc
pop
and
inc
sti
popf
into
pop
cmp
and
mov
mov
into
fiadds
mov
out
adc
sbb
add
aas
xor
test
add
push
sbb
js
mov
push
add
movl
jl
test
inc
xor
inc
cmp
dec
ja
push
stos
adc
jle
idiv
xchg
aaa
xor
jae
add
fcomip
jno
sbb
scas
push
or
fsubr
mov
jno
push
add
xor
fsubr
fdivl
nop
jmp
pop
cmp
mov
imul
inc
aas
sub
mov
xchg
jnp
jo
jmp
sahf
lea
mov
xchg
inc
dec
data16
fsubrp
movsb
mov
fists
movsl
sbb
jl
push
add
push
mov
icebp
pop
out
push
sbb
movsb
subl
xchg
fmull
push
and
rcrb
mov
xor
fisubrs
dec
daa
fadds
sbb
xchg
add
jns
push
push
jecxz
add
mov
repz
stos
sbb
pushf
fmull
cmpsb
sbb
jmp
lods
inc
shl
imulb
mov
movsb
es
cmpsb
and
and
stc
jbe
mov
mov
or
decl
iret
sbbb
jo
data16
jne
jmp
jae
mov
mov
pop
xchg
jmp
dec
push
fistl
push
jge
push
push
hlt
mov
jle
mov
rclb
testl
fistps
sti
adc
pop
mov
mov
mov
leave
mov
xchg
imul
xchg
add
mov
cmc
cmpb
popa
ss
push
sbb
mov
pop
fmull
dec
mov
sub
pop
stc
sbb
outsl
jmp
mov
std
add
shrd
sbb
mov
hlt
push
mov
dec
xchg
mov
test
test
mov
negl
inc
xchg
xor
iret
or
add
gs
mov
negb
cmpsl
adcl
inc
lods
xor
xor
loopne
fucomp
push
jecxz
inc
in
cmc
sahf
dec
into
push
pop
icebp
fwait
mov
inc
sbb
pop
je
icebp
add
lock
fisttpl
and
jno
insb
and
pop
inc
jmp
fs
ret
test
mov
stos
out
pop
in
nop
das
and
mov
sub
test
sbb
jg
cmp
popa
ja
hlt
cmp
add
mov
pop
push
sbb
xor
fs
or
repz
jmp
aas
mov
jecxz
mov
push
cltd
xorl
sbbl
jnp
dec
sub
xor
les
xchg
mov
aad
fsubrl
orl
rolb
sahf
xor
xor
push
push
sbb
scas
xorb
pushf
out
jne
dec
and
inc
lea
add
sbb
pop
call
mov
fadds
subl
sbb
inc
mov
add
mov
nop
stc
popa
fsts
xchg
push
test
push
leave
cmova
fdivrl
inc
pop
scas
rorl
dec
mov
sbb
pop
cmpsl
sbb
xor
inc
add
ret
lods
mov
sub
fdiv
cmp
gs
lret
pop
xorb
push
cmp
test
inc
mov
das
inc
fistpll
push
shrl
ret
fnstsw
adc
sub
outsb
lcall
mov
jo
pop
inc
aas
orl
or
adc
mov
xchg
push
xor
sbb
jp
or
daa
cmp
movsl
movsb
add
inc
jge
xchg
and
out
dec
pop
stc
push
xlat
or
mov
pop
sahf
fisubs
and
jp
add
or
inc
pop
sti
cwtl
in
stos
mov
or
sbb
mov
pop
nop
mov
leave
add
addr16
mov
add
xchg
push
test
mov
stc
pop
pop
jae
enter
or
xorb
jmp
cmp
ret
sub
push
or
enter
push
jle
cmpb
sbb
mov
mov
push
add
pop
adc
xadd
insb
jge
mov
movsl
pop
cmc
filds
sahf
sbb
loope
pop
in
mul
add
or
ret
fwait
aaa
mov
sub
fdivl
std
pop
sbbb
jle
xchg
adc
push
imulb
pop
stc
shl
jl
mov
addb
pop
sub
shl
xchg
dec
nop
out
mov
adc
jnp
jns
imul
pop
test
mov
jge
lahf
loope
rcrl
in
dec
sti
jae
sbb
adc
and
inc
pop
loope
cwtl
dec
insl
outsl
out
push
stc
mov
into
adc
adc
imul
test
fisubrl
add
aaa
sub
jle
mov
imul
stos
sbb
aad
test
push
xor
mov
adc
sbb
orb
dec
outsb
pop
testb
daa
mov
shll
jmp
sahf
jns
in
jecxz
xchg
gs
ds
adc
pop
mov
pop
and
push
push
push
pop
mov
or
pop
int
stos
or
xor
jl
dec
cmp
sub
inc
or
jns
clc
in
cmp
inc
mov
and
in
ja
int
ret
push
fists
lods
xor
pushf
aas
xor
sbb
popa
test
or
lret
mov
xchg
insb
inc
cmpsl
fdivr
push
add
cmp
arpl
xchg
jecxz
movsl
pop
push
sub
cli
mov
mov
xchg
pop
cmpsb
mov
inc
nop
std
mov
inc
test
inc
add
sbb
pop
ljmp
jl
adc
fistps
loop
int
repnz
adc
xchg
push
mov
shlb
rcr
mov
stos
or
mov
adc
cmp
ret
push
pop
sbb
pop
dec
mov
inc
neg
lret
mov
and
xor
push
mov
lahf
push
dec
cmp
adc
lcall
in
cld
and
test
insb
flds
xor
xchg
addb
out
sbb
push
mov
loop
cld
xor
arpl
xor
lods
lock
shrd
or
in
pop
push
and
cmp
mov
mov
add
pop
adc
fdivl
inc
mov
inc
dec
mov
cmp
pop
push
mov
xor
push
in
nop
mov
xchg
shrl
cli
and
inc
mov
mov
jp
mov
sbb
mov
lea
dec
shlb
sub
cltd
arpl
or
xor
insl
pushf
dec
pop
les
pop
pop
stos
cmp
sbb
mov
xchg
loop
cmp
js
jecxz
xor
mov
add
out
pop
insl
sbb
push
or
fldenv
insl
movsl
jbe
xchg
sub
shll
jl
inc
xor
sbb
mov
daa
inc
adc
outsl
jbe
out
or
test
adc
sbb
xchg
pop
xchg
daa
out
push
ljmp
adc
ja
cmp
add
sbb
inc
inc
int3
inc
pushf
dec
or
cmp
in
sbb
insb
mov
test
xor
adc
mov
mov
ljmp
and
sbb
movsl
out
cs
adc
mov
lods
push
mov
or
movsb
enter
shll
xchg
pop
push
fiadds
push
jp
sbb
xchg
orl
stos
mov
push
sbb
call
jp
mov
in
mov
sbb
pop
adc
push
and
xor
jp
test
mov
rorb
add
push
add
adc
lcall
aas
out
nop
in
xlat
pop
int
or
mov
inc
xchg
add
sbb
fidivs
adc
add
mov
enter
xchg
xchg
in
sub
mov
icebp
cmp
and
sbb
sbb
xchg
cld
int
cmpsb
push
xchg
ss
adc
adc
sahf
int
idiv
mov
ds
jmp
add
pop
nop
mov
ret
les
add
pop
mov
mov
jb
imul
loopne
and
cmpsl
xchg
or
adc
dec
mov
ljmp
mov
mov
pop
mov
mov
stc
push
or
mov
push
fiadds
inc
lahf
jns
sahf
int
add
jbe
sbb
add
xchg
mov
fdivrl
adc
cmp
and
ret
mov
mov
sbb
pusha
lea
push
cmc
roll
loope
inc
cmp
add
fs
movsb
mov
call
push
push
pop
sub
in
imul
pushf
lahf
add
adc
test
and
daa
and
mov
jmp
cmc
icebp
es
adc
stos
fnsave
test
pop
roll
sub
and
cs
mov
sbb
pop
enter
orl
sbb
pusha
addr16
bound
jae
push
mov
and
movsl
insb
aaa
scas
adc
sub
gs
in
lock
dec
into
mov
fdivrp
pop
mov
popf
push
cli
pop
xchg
pop
nop
sbb
in
in
orl
push
icebp
ret
adc
mov
and
data16
subb
int
xchg
test
pop
cltd
ljmp
out
inc
leave
sbb
lcall
pop
mov
or
loopne
mov
sub
mov
adc
loopne
or
shlb
aad
arpl
push
pop
xchg
mov
pop
sbbb
cmpsb
sti
fcmovnbe
pop
cs
out
incl
testb
mov
add
pop
cmp
push
jge
adc
insb
sbb
jno
std
scas
push
or
rorl
inc
push
sbb
shlb
and
fmuls
mov
pop
pop
xor
or
jnp
insl
xor
fbstp
sbb
arpl
mov
sub
scas
gs
xchg
call
lcall
mov
imul
xor
and
stos
lock
and
lods
pop
mov
sti
stos
int3
cmpsb
ret
mov
mov
inc
rcrl
sbb
scas
cmpsb
jns
sub
js
test
xchg
loope
fisubl
sub
cli
xor
push
mov
xchg
in
dec
movsl
cmp
cwtl
jp
add
outsl
popa
andb
fistl
lret
mov
jmp
inc
scas
xor
data16
stos
test
sbb
rcl
cmpsb
fmul
xor
inc
cmp
addr16
cmp
mov
movsl
or
fsubl
or
out
clc
vscatterqps
push
je
xor
sbb
enter
xchg
pop
imulb
dec
mov
hlt
mov
sub
orb
sbb
idivl
dec
xor
adc
jp
stos
jnp
push
into
sbb
or
cli
cmp
bound
push
ficoms
add
lahf
mov
ficompl
mov
sub
inc
ret
xchg
jmp
jnp
out
rcrb
imul
smsw
cmpsb
add
inc
xlat
lods
jge
loop
xor
add
or
fistps
popa
sub
push
pop
push
fsubl
fwait
int
fdiv
pop
lea
sub
leave
mov
add
xchg
das
pusha
rclb
das
add
lds
cmp
xchg
gs
jmp
out
fisttpl
cmpsb
cmpsb
lahf
jmp
push
pushl
mov
incb
addr16
cld
daa
outsb
xor
mov
xchg
push
push
shll
push
sbb
sub
cmpb
jp
sbb
mov
out
js
pop
aad
jno
pop
sub
add
insb
pop
es
jae
xchg
push
iret
or
xor
out
and
xchg
push
cmpsb
scas
mov
jmp
jmp
inc
call
inc
sub
or
or
mov
fdivrs
sahf
xchg
mov
cmp
or
xchg
cli
and
xor
cs
icebp
das
pop
jge
imul
add
jmp
clc
xor
out
cli
push
scas
stos
xor
or
sub
add
test
jae
out
or
out
sbbb
mov
jo
xchg
pop
inc
or
mov
ret
push
ret
icebp
mov
rcl
push
mov
lds
fs
fsubrp
add
in
xor
sti
push
adcl
xor
jmp
sahf
add
push
add
loope
fldlg2
jecxz
pop
mov
and
sbb
sbb
fcom
xor
push
orl
mov
mov
repz
jne
push
ljmp
sub
inc
sbb
xor
jo
and
xor
idivb
out
rorl
into
sbb
xchg
stc
outsb
push
cld
scas
push
pop
push
dec
leave
mov
mov
push
xchg
loopne
jmp
cmc
sbb
cld
loope
lods
stos
pop
xor
outsl
mov
mov
sbb
pop
leave
jbe
jg
dec
mov
cwtl
hlt
mov
sar
sti
cmp
mov
rclb
add
in
sbb
push
sti
cltd
fistps
cmp
mov
lret
xchg
loop
out
lahf
sbb
pop
lods
mov
sbb
data16
mov
sbb
ret
add
push
xchg
fwait
sbb
or
and
mov
jp
push
aaa
or
scas
fadds
xlat
ja
push
out
xchg
lods
or
mov
aaa
pop
xchg
int
dec
pop
jae
jle
movsl
lret
push
repnz
inc
pop
out
lret
xchg
enter
mov
sub
or
popa
das
inc
pop
dec
cmc
or
inc
add
iret
mov
and
mov
push
movsl
pop
stc
enter
in
dec
mov
gs
lock
pop
mov
mov
pop
pop
xchg
imul
xor
mov
fs
add
sub
or
test
sti
fcomps
add
mov
lds
add
jnp
or
js
dec
ja
push
inc
mov
repnz
sbb
mov
std
sub
mov
movsb
inc
aam
mov
mov
push
sbb
xor
lahf
rorl
loope
arpl
jbe
dec
fldt
lcall
mov
mov
push
sahf
sub
es
mov
pop
mov
test
xchg
lcall
or
fldcw
add
movsw
mov
bound
fdivrp
addb
mov
test
mov
xor
mov
sub
and
pop
or
mov
xor
push
push
or
and
pop
xchg
clc
and
xchg
ret
test
cmp
sub
push
fs
stos
pop
xor
jns
push
int3
cmp
adc
xor
ja
sbb
insl
cmpsl
xchg
push
lods
fmull
sbb
lahf
lret
mov
adcb
add
dec
mov
adc
add
sbb
jmp
lock
loope
ret
xchg
call
jge
push
out
dec
stos
push
pusha
lock
pushf
addl
mov
or
popa
fwait
sub
adcl
cs
and
or
jle
movsl
dec
imul
push
sbb
jno
mov
aaa
add
add
xchg
mov
ret
daa
dec
stc
ss
arpl
bound
dec
pop
in
xchg
shl
cmp
fldl
mov
jmp
and
dec
push
pop
jle
xchg
ret
or
inc
xorl
cltd
or
xor
mov
adc
popf
mov
and
ljmp
jle
lret
mov
inc
jns
xchg
addr16
pop
ds
inc
sub
fbstp
cmpsl
mov
and
cmp
jle
and
cld
xchg
jno
xchg
add
adc
inc
mov
mov
or
clc
dec
adc
rcrb
shll
jecxz
test
cltd
hlt
adc
fsubrp
lcall
jmp
js
add
test
sbb
daa
addb
and
mov
lret
lahf
mov
xor
adc
adc
loop
cmpsl
push
nop
dec
mov
mov
js
rolb
sti
sbb
arpl
je
dec
fists
jae
clc
std
mov
push
sbb
sub
or
adc
je
sbb
inc
sub
push
addr16
and
frndint
scas
mov
inc
in
push
pop
stos
sbb
fcoml
and
lcall
cmp
jecxz
out
xchg
test
fistps
or
xor
cwtl
cld
ret
neg
pop
jmp
sbb
mov
ret
out
push
loop
mov
sbb
push
ret
std
int
lods
cmc
test
add
push
loope
pusha
pop
inc
in
cwtl
test
rcrl
stos
and
add
addr16
imull
test
push
xchg
sub
sub
cmpsb
mov
mov
mov
pushf
inc
sar
mov
test
jg
add
subb
pop
lahf
jle
jno
and
xchg
or
jne
fisttps
and
jecxz
push
add
gs
jp
sbbl
icebp
pop
inc
add
loop
cmp
inc
out
popf
and
mov
test
add
daa
sbb
gs
jns
sbb
and
or
lds
add
inc
ret
mov
and
or
js
mov
cmp
mov
stos
popf
jle
sahf
push
and
mov
push
sbb
cmpsl
ljmp
lods
dec
cmp
and
jbe
jmp
xchg
fcmovbe
adc
fldl
push
add
inc
add
push
cmp
pop
ja
jecxz
cwtl
push
or
outsb
aaa
dec
sub
push
imul
xchg
xor
sbb
sub
out
rcll
test
fmull
fsubrp
es
rcrl
lds
sbb
gs
cmpsb
nop
xchg
mov
int
das
ljmp
cmpsl
les
daa
mov
loope
fisubrl
insb
test
xchg
adc
sbb
cmpsb
fwait
pop
lods
lret
sahf
push
pop
dec
dec
ljmp
push
sbb
daa
sub
inc
imul
shrb
push
push
push
inc
enter
add
mov
jae
ret
out
xor
nop
bound
jmp
pop
jbe
ja
add
ja
test
xchg
add
add
lock
aad
xorl
sub
leave
cmpb
or
out
mov
pusha
shl
fists
pop
lods
fnstenv
jne
mov
leave
scas
xor
and
push
inc
add
in
xchg
aas
std
arpl
std
scas
data16
push
and
jno
push
or
sub
push
loope
push
loopne
lods
lock
leave
mov
sub
sahf
add
sahf
pop
call
xchg
push
or
push
add
sub
or
cmpsb
and
add
sbb
dec
daa
mov
dec
sub
les
icebp
xor
mov
push
scas
jle
fdivl
ljmp
sbb
gs
sub
mov
imul
mov
cmpl
jp
rcrl
pop
incb
or
addl
jg
sbb
xchg
sub
es
cmp
push
xor
daa
jecxz
xorb
pop
or
rorb
cmp
outsl
sbb
mov
les
sbb
pop
mov
or
shl
push
jmp
add
jb
cmp
cmpsb
cs
add
sbb
sub
jp
out
cld
sbb
and
mov
xchg
rorb
fbstp
fbld
pop
jp
loope
and
nop
movsl
adc
cltd
sbb
and
lods
pop
out
xor
dec
pop
out
mov
out
inc
adc
jne
add
movsl
jmp
mov
andb
ret
mov
nop
rorl
orl
jne
jmp
in
add
push
jl
or
and
and
xor
jb
add
push
shr
dec
lock
sbb
add
fmul
loop
push
sbb
cmp
inc
cltd
cli
add
imul
add
fwait
or
inc
dec
imul
lret
add
and
jb
int3
xor
sub
adc
test
daa
mov
sbb
sahf
popa
or
xchg
cwtl
mov
mov
jg
inc
mov
xor
or
clc
sahf
add
leave
mov
xchg
data16
mov
sbb
dec
mov
push
sbb
inc
es
test
shll
pop
mov
jmp
sbb
push
rcrb
jle
adc
xchg
sbb
dec
outsl
lahf
xchg
jns
fcoms
xchg
stos
cld
pop
lret
inc
test
pop
xor
push
inc
dec
xchg
es
dec
push
mov
add
jp
and
andl
sub
in
nopl
push
pop
data16
mov
cwtl
add
and
fldl
inc
xor
cmpsl
sub
stos
sub
push
lea
sub
insl
std
enter
daa
cmp
leave
lods
enter
pop
xchg
jl
pop
cmp
pop
fimull
dec
mov
xor
pushf
sbb
loopne
pop
clc
mov
lods
test
jno
in
inc
sbb
pop
cmpsl
cmp
sahf
test
popf
in
and
add
push
mov
vcvttps2dq
or
mov
dec
repnz
inc
ret
pop
or
xor
lds
jg
add
into
push
jne
or
aaa
mov
xchg
in
enter
add
shlb
mov
sahf
add
loopne
out
adc
stos
pop
xchg
adcl
in
or
push
push
neg
idivb
xor
sub
or
jne
dec
pop
mov
cmpsl
or
fldt
add
leave
mov
push
ficoms
fbstp
mov
mov
sbb
testb
jnp
lahf
enter
add
sub
inc
stc
les
addr16
jne
push
insb
sub
lods
inc
sub
jo
rcrb
xchg
dec
mov
imul
movsb
outsb
pop
repz
sbb
stos
mov
push
pop
pop
inc
sbb
push
xchg
mov
cmp
adc
leave
mov
insl
xchg
or
or
sbb
add
test
adc
mov
popa
sbb
push
scas
add
inc
inc
ss
ficoms
int
push
repnz
jmp
stc
cld
jmp
mov
jbe
loope
negb
pcmpgtb
mov
into
push
subl
daa
aaa
inc
inc
lods
into
ficomps
dec
aas
xor
cmpsb
ret
xchg
insb
stos
pop
repnz
add
fmuls
or
loop
and
insl
jo
jae
xor
out
leave
icebp
push
in
mov
jnp
jnp
enter
out
and
ja
sub
jecxz
sbb
lods
int
xor
fiadds
mov
sbb
xchg
mov
int3
push
jo
aaa
rol
xchg
push
xor
jmp
inc
cmp
push
add
push
cwtl
jnp
call
mov
cmp
and
lds
sbb
aaa
shl
pushf
sub
push
sub
xchg
call
repz
mov
into
les
iret
xchg
mov
xor
xchg
sbb
xchg
push
sub
sbb
insb
cltd
adc
fimull
mov
bound
nop
popf
inc
loop
xchg
pop
pop
mov
mov
push
pushf
imul
daa
inc
pop
sub
or
sub
dec
daa
mov
add
loopne
clc
jge
aas
idivl
arpl
cmpsb
rcl
cmp
mov
les
lods
inc
mov
sub
pop
mov
shrl
fldcw
mov
inc
ss
jg
and
or
shlb
in
data16
xchg
or
xor
mov
mov
inc
cmpsb
push
popa
cmpsb
push
aam
addb
push
addl
decl
and
sarl
call
std
and
daa
mov
aaa
add
jne
add
aam
mov
or
lcall
pop
stos
dec
mov
stos
test
jae
push
loope
xchg
cmp
fdivr
jnp
cmp
push
lcall
xor
xchg
cltd
insb
gs
cmc
ret
jmp
sahf
mov
add
xlat
ficompl
or
jae
mov
sub
push
mov
cltd
add
push
idiv
or
inc
enter
or
mov
inc
jnp
sbb
ret
add
mov
cmp
add
roll
mov
pop
inc
or
int3
andl
std
jno
add
fstpt
adc
sub
mov
push
push
sbb
mov
jl
or
test
fadd
or
cmp
mov
lcall
mov
jb
fs
adc
add
stc
pop
jno
pop
sbb
in
loopne
jo
roll
lret
cmp
in
xchg
sbb
rol
dec
lods
sti
sbb
imul
test
repz
inc
test
fwait
cwtl
bound
leave
mov
cmpsb
aas
jne
jae
daa
pop
cmc
push
dec
test
add
popa
dec
or
mov
dec
xor
pop
push
xlat
dec
loopne
mov
mov
mov
push
into
popf
lret
add
cwtl
outsb
push
push
push
inc
rcll
test
sbb
adc
cltd
enter
stc
popf
mov
mov
sbb
and
mov
stos
int3
out
out
push
mov
mov
dec
lea
and
lret
sub
scas
dec
dec
int
sbb
mov
inc
sbb
mov
pop
inc
out
lods
inc
lods
xor
bound
xchg
not
and
js
pop
in
in
dec
adc
jmp
outsl
dec
in
push
jnp
popf
cmp
daa
jl
in
push
xor
cltd
imul
call
loope
dec
subb
movsb
add
lahf
pop
inc
push
daa
push
fwait
pushf
ret
jae
aas
mov
and
push
comiss
jl
mov
or
pushf
cmpb
cltd
fdivl
sub
mov
push
push
add
mov
out
fs
xchg
push
add
sbb
cmp
or
int
inc
sub
sbb
cmc
stos
shll
xchg
push
push
pop
add
mov
je
adc
ja
push
pop
xlat
cmpsb
rorb
out
cld
rorb
ja
nop
xchg
popa
jno
inc
fpatan
call
imulb
fldcw
adc
push
push
insl
ret
mov
cmp
fists
pop
divb
adc
xor
les
and
adc
cmp
mov
dec
or
adc
pop
xor
dec
pop
popl
push
mov
jb
daa
movsb
jo
inc
cmc
adc
sbb
test
or
call
inc
inc
test
mov
xor
pop
pushfw
in
jae
cli
ret
and
push
mov
sbb
inc
xlat
je
sbb
dec
sub
stos
or
lret
loope
or
aaa
push
mov
adc
stc
xor
les
sbb
test
movsb
dec
pop
adc
fstpt
fistps
cld
and
inc
in
sbb
aam
data16
sub
add
inc
or
and
lret
addr16
arpl
xchg
add
test
xor
js
movsl
addb
bound
nop
ret
ljmp
pop
xchg
or
push
frstor
mov
adc
jne
in
pop
jne
push
mov
jge
jmp
xchg
lods
dec
cmp
fstpt
int
stos
cmpsb
mov
push
inc
push
sbb
sub
nop
out
add
xor
cwtl
pop
stc
cltd
add
jb
shrl
loopne
xchg
popf
sbb
xor
in
mov
cmc
out
jne
push
sub
add
icebp
sub
xchg
inc
add
push
mov
clc
inc
sub
push
test
push
and
push
cmc
aaa
jbe
cli
notl
xor
ret
jmp
into
inc
aaa
addl
in
call
imul
mov
jge
xor
jae
add
cmc
loopne
sub
ficomps
sbb
gs
nop
push
xchg
or
mov
outsb
jne
dec
jp
mov
sbb
icebp
negb
neg
pop
in
test
dec
adc
cli
jp
inc
cmpb
out
lret
fidivrl
sub
add
jmp
cmc
or
xchg
loope
inc
dec
or
adc
mov
stos
pop
nop
mov
push
pusha
test
inc
mov
jmp
mov
and
mov
sub
add
and
adc
xor
cmc
test
sub
arpl
aad
daa
fucom
push
lahf
lods
and
lods
push
adc
xchg
test
aas
jp
mov
loope
sbb
push
pop
cmp
loopne
add
pushf
lahf
ret
mov
cmp
xchg
jno
xor
xor
jno
mov
mov
pinsrw
insb
add
jmp
fcomps
imul
or
shll
push
sbb
mov
push
cmpsl
inc
rorb
add
aaa
icebp
test
pop
aam
sti
sub
gs
daa
inc
stos
inc
inc
popf
dec
and
push
icebp
imul
stos
gs
bnd
push
dec
xchg
lods
push
repnz
push
idiv
push
popf
pop
sbb
cltd
out
jne,pt
sbb
in
push
popa
jnp
test
les
cmp
or
decb
mov
push
test
nop
pop
adc
adc
dec
out
sbb
and
mov
sbbl
sahf
sbb
xchg
addb
add
in
sub
test
cmpsl
push
mov
and
or
ret
sbb
cmpsb
cmpsb
and
sbb
xor
mov
sub
or
lods
xor
sub
cmc
enter
jecxz
mov
pop
lcall
aad
int3
cmpsb
imul
and
gs
mov
pop
push
lret
stos
addb
pop
inc
push
add
into
xorl
cli
xor
loopne
sbb
jp
and
cmp
test
push
pusha
je
and
push
push
lds
pop
jb
test
push
mov
sbb
les
test
jb
mov
xchg
xchg
movsb
push
mov
mov
imul
data16
cmc
or
or
sbb
loope
xchg
std
lods
sbbb
pop
mov
or
dec
push
inc
out
or
push
fsub
jecxz
lock
addr16
mov
ret
push
nop
push
shlb
push
addl
lea
or
add
pop
jns
sarl
xchg
addb
in
add
fmuls
mov
sti
and
xchg
insl
out
mov
sbb
add
push
bound
leave
sahf
sub
mov
sub
fsubrs
es
flds
or
sbb
clc
gs
les
leave
rcrl
ja
cmpsb
xor
jge
lods
push
sbb
iret
cmp
mov
jnp
std
lea
mov
das
mov
lahf
cmp
scas
gs
sbb
inc
insl
out
xchg
shll
lret
or
insb
stc
sub
ss
xchg
or
das
sub
jecxz
orb
addr16
out
pop
fistpl
add
mov
and
sub
fwait
movsb
and
test
or
xor
cld
pop
mov
adc
insb
push
cltd
pop
pop
cmp
push
mov
pop
mov
jmp
rol
dec
push
push
subb
cmp
add
ret
stc
out
dec
push
xchg
mov
in
xchg
aas
js
in
jne
imul
jge
es
cld
stos
sub
add
lcall
cmc
jne
pusha
movsl
dec
es
scas
dec
jno
xor
inc
dec
cltd
out
fcmovnu
push
mov
addb
xor
icebp
lock
test
pop
dec
rcpps
inc
mov
outsb
aaa
mov
cmp
in
shr
xchg
xchg
dec
mov
lret
sub
xor
rcrl
inc
fcmovne
and
push
push
inc
inc
adcl
mov
into
sbb
lret
js
inc
add
stc
ljmp
sbb
add
add
xchg
mov
gs
adc
ss
jmp
pop
push
test
rolb
dec
inc
pop
insl
adc
xorl
or
fmul
cltd
push
cli
adc
xchg
dec
loope
jbe
sbb
movsl
cltd
dec
jg
xor
jb
dec
sub
roll
scas
stc
repz
iret
cwtl
mov
dec
lods
cmpsl
adcb
push
mov
mov
jne,pn
lret
mov
push
dec
xchg
add
and
out
cli
sbb
decb
test
xor
inc
mov
cmpsl
pop
inc
dec
xor
dec
sti
popf
inc
movsb
insl
inc
jno
sub
shl
dec
xor
cmp
mov
pop
fdivrs
cmp
aas
jb
stos
pop
sub
xchg
sub
sbb
jne
dec
mov
call
jge
mov
out
push
add
and
fldenv
mov
and
test
out
nop
jle
fcompl
sbb
mul
jl
add
or
jecxz
gs
xchg
push
jmp
xor
or
fstpt
inc
aam
mov
or
adc
mov
xchg
sub
inc
sbb
cld
push
add
daa
pop
inc
mov
sti
ret
push
popf
popa
push
out
lds
je
xor
hlt
jl
jle
sub
cwtl
movl
rep
cli
je
dec
icebp
add
fcoml
stc
push
and
inc
sbb
cmc
sbb
mov
inc
add
mov
pop
push
test
lcall
jmp
out
popa
ficoml
out
pop
cmpsb
jb
mov
xchg
push
insl
repz
inc
dec
cmp
add
sub
cwtl
iret
lcall
push
pop
js
xchg
push
inc
fdivrl
fstpl
pop
gs
adc
xor
mov
sbb
stc
test
push
lcall
jo
lret
pushf
push
sub
enter
inc
inc
push
popf
mov
jmp
punpckldq
fdivr
dec
adc
lock
mov
test
test
mov
scas
int3
fmuls
jp
dec
xor
sbb
xorl
inc
add
loopne
xchg
lds
sahf
jge
jp
fldenv
jns
mov
mov
and
ret
xlat
in
jb
xchg
rorl
pop
mov
loopne
dec
push
jle
lods
adc
mov
push
xlat
aaa
mov
aaa
out
nop
jge
mov
or
clc
test
pop
push
inc
dec
push
push
and
mov
loope
popf
addr16
pop
add
out
inc
sbb
mov
addl
push
orl
adc
mov
sbb
mov
aas
mov
push
adcb
add
ja
inc
xchg
cli
outsb
int3
jnp
loope
xor
clc
jecxz
add
outsl
sub
addl
push
cmp
or
ret
push
sbb
add
outsl
sbb
cmc
ret
cmpl
push
mov
xor
jle
sti
stc
push
push
push
imul
pop
shlb
add
sbb
mov
jmp
jmp
sbb
stos
xchg
xor
mov
std
pop
popf
xchg
push
jns
lods
xchg
sbb
mov
pop
dec
adc
mov
shlb
and
dec
out
lock
push
mov
mov
add
in
mov
dec
mov
outsb
xor
sbb
test
test
pop
cwtl
scas
xchg
inc
imul
loopne
jne
mov
or
dec
pop
dec
addr16
dec
cmpsb
adc
inc
aas
pop
dec
pop
fnstcw
int3
cmpsb
pop
cmp
mov
mov
popf
or
mov
imulb
pop
xchg
jnp
ret
sub
subl
sbb
jns
neg
lea
lcall
dec
dec
mov
or
repz
add
shlb
test
sbb
push
jnp
pusha
mov
imul
fstps
mov
inc
lock
popa
or
enter
jo
or
mov
arpl
push
insw
in
fisubs
loopne
out
pusha
pop
ret
mov
movsl
fldcw
loope
lret
mov
loope
nop
mov
mov
xor
in
out
push
mov
daa
loop
or
xor
negb
fucomi
pop
xlat
xor
movsb
and
sbb
pop
xchg
loope
mov
lds
mov
je
or
pusha
ret
gs
mov
mov
mov
xchg
movsl
inc
mov
fs
dec
jns
and
and
icebp
fstp
lret
mov
testl
dec
stc
push
aaa
push
das
psrlw
push
sbb
std
mov
adc
into
xchg
pop
shlb
outsb
popf
cmp
mov
mov
sahf
shlb
andb
ljmp
push
add
movsl
dec
js
enter
pop
out
and
add
test
lret
rcl
icebp
daa
and
lret
push
mov
pop
pop
cld
and
test
mov
cs
lods
sbbb
adc
lods
fstps
cmp
out
sbb
rcrl
mov
daa
dec
popa
test
cltd
faddl
push
imul
sbbl
inc
sbb
pop
xchg
inc
and
shlb
daa
cmpsl
cmp
repnz
mov
adc
imul
xchg
push
add
das
repz
popa
popa
popa
jae
int3
pop
mov
mov
in
push
inc
mov
imul
push
or
stos
add
ss
mov
cmpsb
pop
loope
movl
ret
mov
movsl
das
inc
mov
sahf
loopne
cmpsb
jbe
push
adc
xor
dec
sub
fisubrs
pop
movsl
pop
dec
cmpl
call
mov
sbb
icebp
aaa
stos
or
sub
pushf
cmpsl
inc
cmc
sbb
inc
sarb
rcrl
pop
mov
mov
pop
inc
inc
sbb
mov
int
das
mov
cmp
add
cwtl
inc
das
adc
push
faddp
mov
aad
add
pop
call
das
sbb
loope
into
mov
andl
icebp
pop
cmpsb
leave
int3
in
mov
adcb
fnstsw
or
add
jp
inc
repz
loope
lret
cmpsl
push
and
ficoml
push
sbb
pushf
xchg
add
adc
xor
stos
cmpsl
addr16
iret
cmp
jb
pop
or
sahf
aam
jnp
add
mov
cmpl
sbb
pinsrw
mov
mov
pop
outsl
cmpsl
imul
add
jp
inc
inc
mov
push
cmc
push
aas
out
xor
sub
inc
add
test
fucom
sbb
jp
sub
pop
push
fwait
sti
aas
divb
rolb
lock
pop
sbb
xchg
jb
push
clc
stos
rcr
cmpsb
popa
lcall
jno
xchg
or
sbb
jp
mov
popa
rcrb
mov
int
adc
outsb
inc
daa
pop
jmp
xchg
inc
aad
stc
addl
jno
pop
dec
inc
fidivl
shufps
nop
test
sub
aaa
imul
pop
inc
lcall
add
push
ss
sbb
mov
fucomi
sbb
test
shrl
dec
sbb
jl
xor
popa
push
cltd
inc
inc
inc
dec
mov
inc
gs
push
push
cmpsb
bound
dec
shlb
out
fdivrl
rclb
lret
lods
inc
pop
adc
je
sbb
xchg
nop
in
testb
add
lea
xchg
insb
fisubl
dec
add
dec
add
fs
das
push
dec
inc
mov
into
jle
sbb
scas
mov
imul
inc
shll
shr
lcall
pushf
sahf
xchg
test
pop
mull
dec
fiadds
jg
or
std
testl
push
inc
adc
inc
jnp
lds
add
push
and
xchg
sub
pop
mov
xchg
lock
mov
test
mov
jbe
lret
shlb
add
push
sub
sbb
fcoms
out
ja
jle
jne
xchg
js
add
sbb
ja
and
test
imul
adc
push
mov
mov
pop
push
insl
inc
sbb
add
pop
and
ret
adcb
mov
sbbl
sub
jne
ljmp
loop
push
jne
xchg
adc
fisubrs
jae
jmp
leave
stc
cmp
cmp
pop
fadds
mov
add
lods
mov
hlt
and
jg
popf
imul
mov
push
add
xor
push
rcrl
shrl
mov
sub
jp
mov
and
subb
add
mov
aad
mov
mov
pop
or
mov
rolb
subb
pop
ret
movsb
push
pop
xor
inc
jne
xchg
inc
inc
les
cwtl
xchg
adc
sbb
daa
mov
and
movsl
xor
push
inc
mov
jne
push
test
push
fucomi
stc
in
mov
fwait
add
outsb
xchg
mov
mov
das
mov
mov
mov
xchg
aaa
repz
lds
xor
sbb
mov
lcall
push
mov
shll
mov
pop
mov
adc
dec
jle
dec
jnp
xor
pop
cwtl
dec
mov
lods
and
gs
xorl
mov
popf
mov
scas
adc
rcll
movsb
repnz
inc
fstps
fisubrl
in
xchg
mov
mov
add
sub
bound
xor
mov
sub
test
icebp
stos
rcrl
pop
pop
es
testb
sbb
lcall
js
xor
dec
cmpsl
dec
stos
stc
or
shll
push
fiaddl
pop
cmpsl
push
loope
or
fcoml
mov
les
adc
sbb
adc
mov
xor
ds
addb
inc
jle
inc
xor
cmc
fs
cs
mov
mov
xor
pop
push
push
pop
pop
leave
cmovbe
mov
sbb
or
mov
push
imul
test
pop
xchg
bound
inc
sbb
outsb
sub
cmp
adc
mov
fsubs
std
stos
fs
popf
mov
cmpsb
push
sub
adc
rcrl
mov
mov
push
lret
daa
bound
jle
das
mov
inc
mov
xor
or
cli
push
js
daa
lea
lcall
test
xchg
and
mov
jmp
inc
outsl
mov
pop
add
xorb
and
mov
outsl
and
push
in
push
outsb
sar
ljmp
rorb
mov
xchg
jecxz
sub
cmpsb
gs
pop
movb
cmp
test
sub
loopne
sbb
inc
xchg
sbbl
jns
mov
jle,pt
push
testb
jne
je
dec
out
xchg
call
imul
jbe
inc
aam
and
sarl
xchg
pop
in
pop
jle
mov
outsb
add
lods
test
enter
adcl
jne
add
stc
sti
dec
rcrb
inc
xor
push
xchg
jecxz
push
xchg
xor
iret
jno
sbb
pop
repnz
mov
xor
aas
mov
adc
xor
sbb
data16
imul
scas
xchg
les
jbe
pop
xchg
lahf
arpl
cltd
gs
dec
xchg
xor
mov
jl
mov
lahf
roll
cmpsb
sbb
dec
testb
add
fwait
sbb
pop
pop
stc
call
push
xor
subl
aad
mov
int
mov
dec
mov
xor
dec
push
negl
mov
sahf
lea
jl
rolb
pop
sbb
popa
out
shrb
mov
pushf
dec
jo
pop
dec
push
add
outsl
je
jae
aas
dec
sbb
jl
sbb
adc
orl
scas
dec
add
add
hlt
or
lds
xor
jp
push
mov
push
mov
out
mov
insb
mov
js
inc
add
jo
adc
jle
les
enter
cmp
or
fdivrs
jne
sbb
jb
loop
jno
inc
in
mov
pop
scas
testl
pop
shl
and
or
mov
add
jp
int
and
les
or
mov
sbb
sti
jae
xchg
cmp
lahf
popf
lret
pusha
pop
es
sbb
out
sbb
sbb
mov
sbb
inc
sarl
leave
fdiv
sub
stc
pmuludq
pop
jne
mov
or
inc
push
scas
mov
cmpsb
dec
push
push
push
lock
addb
popa
and
mov
inc
mov
sbbl
in
sub
sbb
or
jbe
pmulhuw
and
cs
fstpl
mov
fiaddl
fisttpl
or
les
dec
jl
xchg
sbb
cmc
fcompl
das
mov
mov
imul
movsl
mov
mov
or
mov
push
sub
sbb
xor
fdivl
add
add
mov
xor
fsubr
je
jge
lcall
aaa
mov
mov
out
and
in
sbb
xor
jl
sbb
and
add
das
mov
arpl
fstpl
mov
sar
xchg
mov
sbb
sbb
int3
and
cwtl
sbb
mov
mov
call
push
out
sbb
adc
addl
push
int3
fmull
cmp
sub
fwait
rolb
or
das
mov
push
mov
fisttpl
cmp
imul
adc
sahf
lret
push
lods
xchg
add
or
adc
adc
pop
push
pop
divb
push
out
movsl
sbb
push
out
push
cmpsl
pop
mov
in
fmul
xchg
add
lcall
sbb
popf
jge
cli
cli
jmp
jmp
or
push
xor
loope
sbb
leave
ret
sub
sub
add
xor
je
ret
cmpl
addb
pop
and
arpl
dec
subl
shlb
popa
pushf
daa
lret
push
push
enter
ljmp
insb
cmp
sub
fnstenv
cmpsb
cmpb
jno
or
or
sbb
popf
xorl
fnstsw
pop
inc
ret
ja
ljmp
mov
jbe
jp
cs
lods
cltd
sbb
enter
push
movsl
bound
mov
in
fcmovbe
dec
sub
sub
testl
add
mov
or
add
fnsave
std
xor
test
mov
js
dec
dec
sub
sbb
and
lar
outsl
cmc
mov
mov
sub
addl
sub
mov
lods
inc
adcl
mov
sub
loop
mov
and
add
das
rcrl
pop
outsb
or
dec
fxtract
mov
mov
ja
xor
push
or
pop
add
adc
fcoms
sub
sarb
xor
adc
add
inc
in
popf
and
insb
test
sub
mov
dec
adcb
popf
dec
adcl
stos
fs
inc
jbe
or
call
cmpsl
arpl
insb
inc
inc
inc
xchg
stos
xchg
or
lods
or
mov
push
ret
cmc
popf
mov
dec
inc
mov
mov
mov
out
movsl
add
pusha
dec
cltd
dec
sub
fnstenv
cli
push
and
stos
ret
inc
mov
jle
test
aas
scas
lods
int3
dec
xchg
dec
mov
mov
test
cwtl
or
aaa
nop
pusha
pop
test
push
pop
mov
insb
leave
push
pop
stc
adcb
and
push
sti
sbb
fisubrl
jl
push
sub
ret
inc
sbb
cmp
xor
aam
sbb
inc
imul
pop
mov
push
sbb
sbb
int
mov
push
inc
sbb
popf
add
movsb
cltd
dec
xchg
jmp
cmp
sbb
lods
loopne
scas
ja
xor
pushf
pop
or
fidivs
or
cs
and
add
aaa
xlat
pop
jp
popa
push
dec
inc
dec
sub
dec
test
dec
xor
pushf
add
mov
cld
fucom
out
mov
or
es
mov
fisttps
mov
daa
cltd
mov
das
das
inc
pop
add
push
pop
xor
jecxz
lock
cmp
dec
inc
jne
inc
out
je
mov
or
jno
stos
dec
push
mov
inc
adc
ret
jg
lret
mov
sub
and
cmpsl
mov
loope
xchg
mov
pop
adc
push
xchg
xchg
and
xchg
loope
pop
test
push
pop
push
dec
pop
repz
and
jne
push
jno
push
adc
cmpsl
leave
fwait
cmp
dec
sbb
inc
fldlg2
leave
or
icebp
mov
mov
mov
hlt
shlb
dec
rcl
pop
add
aaa
andl
lcall
jbe
sbb
out
adc
mov
scas
icebp
cmc
push
lock
add
insl
inc
and
leave
add
xor
mov
data16
negl
cli
cmp
movsb
xor
push
ss
cmp
or
jl
xor
xor
dec
aaa
addl
cmp
cld
inc
cmpb
cmp
cmp
mov
jge
push
jle
add
shll
in
dec
data16
push
xor
jmp
jae
or
lret
pusha
cmpsb
movsl
pusha
icebp
test
mov
sub
push
pop
lret
pop
jecxz
dec
aas
and
jge
fdivrs
cmpb
mov
insb
mov
fsubrl
mov
sbb
jno
mov
cld
lret
mov
or
lods
pop
sub
popf
in
pop
mov
mov
sbb
pop
cmp
jp
push
addr16
daa
inc
push
jge
sub
and
test
pop
adc
addr16
jb
xorb
inc
sbb
cmp
push
inc
insb
aaa
in
jne
inc
adc
add
inc
fs
outsb
pop
push
lea
xchg
cld
gs
xchg
test
sbb
loope
ds
add
cmpsb
bound
lcall
rcll
xor
scas
rcrl
cmp
pop
and
pushf
lret
mov
xchg
pop
jbe
insl
flds
add
loope
repz
or
arpl
mov
jb
ljmp
fisttpl
dec
cmpb
daa
sub
add
lds
adc
cld
inc
or
ja
pop
push
stos
jl
mov
sub
rcrl
sahf
subb
sbb
cmovae
push
ljmp
popf
arpl
xchg
cmp
lret
jo
inc
jmp
testb
pusha
adc
out
lds
out
ficompl
add
sbb
and
xor
or
cmpsl
fstl
arpl
mov
cmp
add
stos
push
jmp
add
or
fisttpll
subb
mov
stos
test
push
jmp
and
mov
daa
test
jbe
inc
sbb
dec
fsubl
xor
sbb
incb
or
push
or
push
jle
daa
sub
push
adc
pushf
jmp
mulb
cmc
push
xchg
push
bound
jo
push
xchg
jne
lods
cld
xchg
xchg
shl
loop
inc
int3
shrl
pop
ss
or
mov
xor
inc
das
adc
add
mov
mov
fisubl
movsl
jae
pop
pop
cmp
pop
je
insb
ja
sti
or
cmp
popf
or
sahf
pand
xchg
pop
aad
xlat
mov
jno
dec
lahf
jg
lea
xchg
adc
call
mov
loope
xor
rolb
mov
test
ret
add
lret
add
xor
in
inc
cmp
jne
pop
aad
subb
adc
in
adc
lcall
inc
sub
sahf
cli
xchg
bswap
sub
shll
adc
orb
xchg
sub
icebp
and
mov
in
ret
cli
lcall
xchg
incb
jne
adc
stos
test
and
rol
push
inc
popa
adc
jp
daa
pop
das
sbb
fcmovnu
inc
jne
mov
push
adc
test
loopne
mov
cmpsb
dec
enter
in
and
aaa
pop
test
bound
mov
inc
dec
mov
lcall
rorl
mov
and
xchg
jne
stos
add
inc
xchg
orb
test
mov
cli
mov
call
mov
leave
jge
jbe
imul
pop
ficompl
outsl
push
gs
push
enter
push
xor
jae
mov
push
mov
sar
inc
mov
jmp
loope
fdivl
loopne
aaa
repz
nop
inc
out
xchg
sub
add
and
ret
or
mov
subl
xchg
mov
seta
jmp
loope
fwait
or
lret
adc
sbb
mov
pop
negb
test
mov
lcall
xchg
fldl
sub
mov
es
xchg
int3
inc
pop
pop
fsubr
dec
mov
push
insb
or
ja
pop
les
inc
ret
push
repz
outsl
sub
pop
mov
rcrb
out
loop
or
pop
mov
sbb
push
jle
or
jbe
shrb
mov
mov
pop
stos
inc
fs
mov
outsb
orb
out
push
fcoml
cmp
testb
cs
adc
jns
lds
mov
orl
in
jle
dec
jne
in
mov
leave
sbb
sbb
sub
dec
sbb
and
test
or
stc
mov
lock
ret
pushf
scas
push
repz
push
stc
shrl
out
cmp
and
mov
sbb
cwtl
jmp
mov
cmp
sub
stos
add
sub
ds
or
ret
adc
sbb
xlat
int3
aas
push
dec
aaa
mov
iret
cli
xchg
andb
cmp
ljmp
stos
jne
mov
orl
imul
inc
xchg
push
push
adc
sbb
xchg
xor
sahf
mov
leave
pop
arpl
cmpsb
loopne
xlat
pop
mov
jp
pop
lock
adc
xchg
cs
lds
xor
lds
cmp
mov
cmc
xchg
mov
jecxz
or
cmpsb
nop
mov
xchg
sahf
add
ja
xchg
mov
jae
sti
xlat
add
jle
add
mov
xchg
add
or
loopne
push
es
add
sub
sbbl
add
jle
pop
jg
and
xor
dec
lret
or
loopne
add
pop
mov
notb
sti
icebp
xchg
js
add
mov
fnstenv
sbb
rclb
push
test
out
and
out
dec
movsb
pop
jp
xchg
jmp
das
jbe
mov
sbb
jecxz
add
push
fstpl
mov
cmp
loopne
mov
cmp
ds
loopne
fistps
hlt
scas
roll
inc
aam
enter
mov
mov
sbb
cmp
sbb
or
jg
cmp
orl
adc
mov
sbb
jnp
dec
decb
rol
gs
mov
ja
pop
push
add
mov
fxch
gs
and
mov
fs
cmp
or
sbb
hlt
test
ja
aas
test
insb
inc
jmp
mov
add
aaa
inc
mov
add
daa
sbb
xchg
adc
flds
sub
fmuls
cmpsb
dec
dec
sub
jp
xchg
push
cmpsb
jmp
rcrl
rolb
mov
or
mov
int3
cmpsb
and
sbb
cmp
jbe
ja
shrl
xchg
add
mov
push
jns
int3
orb
in
mov
inc
in
and
cmpsb
mov
and
xchg
sbb
orb
or
arpl
and
fdivs
jle
sahf
or
mov
decl
mov
adc
xchg
push
mov
ja
es
add
dec
xchg
or
shlb
fsubrs
xchg
and
daa
sbb
xchg
out
stc
push
xlat
imul
jecxz,pn
sahf
sbb
fildll
movsb
or
pop
roll
std
xchg
fdivrl
sub
jmp
sbbl
fsubl
ret
and
sbb
cld
ret
stos
cmp
test
dec
lea
subl
ficoms
popa
mov
cmp
cs
dec
sahf
xchg
xor
jbe
sbb
das
dec
cmp
push
adc
out
push
cmp
insb
cmpsl
push
lds
pop
push
cmpsl
clc
inc
cmpsb
outsb
add
sbbl
and
jl
shrb
mov
add
loop
jb
or
pop
ret
fbld
cmpsl
sub
scas
stos
push
mov
xchg
jno
ret
rolb
repnz
in
addb
or
dec
rcrb
test
and
xor
negl
cmp
outsb
push
sbb
sbb
adc
das
jae
jnp
inc
cmp
dec
loop
into
popf
xchg
adc
inc
out
test
addr16
add
sbb
lret
testl
imul
mov
mov
ret
dec
mov
xor
in
dec
cli
or
test
mov
rolb
lahf
mov
xchg
ljmp
leave
xchg
add
loop
daa
dec
outsb
push
shrb
lods
cld
dec
pusha
sub
roll
dec
lcall
fwait
jmp
stos
mov
or
fadd
enter
sub
loope
jno
testl
iret
nop
push
jno
jae
out
jp
or
fdivp
jmp
cmp
xor
arpl
shlb
arpl
popf
dec
lods
andl
scas
int
and
pop
mov
or
or
cmp
and
mov
cwtl
fcomps
hlt
xor
pop
mov
pop
scas
sti
jnp
jge
test
movsl
and
sbb
mov
out
in
repz
push
push
daa
xchg
jp
loop
sbb
push
xor
jmp
outsb
cmc
cmp
stos
mov
fwait
addl
scas
lret
adc
repnz
push
jl
insb
cmp
push
mov
int
pop
jmp
mov
fisttpll
sub
sarl
stos
lods
dec
lds
subl
in
rcrl
xchg
push
pop
fidivs
jp
in
mov
mov
jle
push
cmp
loope
mov
fisttpll
and
sub
jle
loopne
andb
fistps
xchg
jae
mov
div
pop
mov
mov
sub
mov
enter
shr
cmpb
pop
out
in
mov
dec
loop
inc
and
call
insb
shl
push
scas
icebp
fwait
push
arpl
mov
dec
movsb
add
and
pop
jbe
test
and
sub
lods
xchg
cmc
dec
test
aam
cmpsb
frstor
test
jo
jo
stos
out
aaa
cmpsb
and
data16
sub
and
gs
flds
jno
dec
mov
xchg
mov
push
adcl
xor
loop
pop
add
fisttpll
ret
test
add
std
enter
and
stc
bound
add
jge
int3
mov
jle
mov
add
jae
xchg
mov
and
shrl
imul
add
stc
push
push
jmp
aaa
add
xor
stos
int
pushf
adc
and
and
dec
lcall
or
mov
insl
into
pop
xchg
inc
mov
add
ror
popa
pop
push
pusha
test
push
test
stc
es
mov
cltd
fwait
mov
xchg
or
sub
sbb
mov
stos
or
pop
cltd
xchg
notl
mov
enter
mov
jns
xchg
frstor
sbb
leave
aam
movsb
aam
movsb
pop
lahf
dec
and
test
add
in
ret
pop
out
imul
je
ss
mov
cs
pop
stos
mov
and
cmc
lds
stos
fsubrp
out
aam
fsubr
pusha
dec
scas
sbb
pushf
push
test
inc
enter
xchg
nop
orl
repz
fs
shlb
push
jp
outsb
adcb
test
inc
sub
mov
or
push
sbbl
adc
or
mov
push
sbb
roll
inc
cltd
xor
push
testb
sub
lcall
add
in
roll
jb
mov
cmp
inc
dec
in
sub
pop
jle
int3
pop
lea
xchg
data16
out
shrw
adc
ret
in
sub
dec
je
cmc
jno
in
push
and
daa
add
in
mov
aas
sbbl
aaa
inc
mov
jle
mov
pushf
jbe
mov
cwtl
xchg
mov
lret
xchg
lahf
rcrb
push
in
lret
push
jno
jp
cmp
sbbl
jae
pusha
jle
add
idivb
inc
lret
push
pop
mov
add
sbb
jg
fdivl
inc
andb
fadds
test
sahf
nop
test
jge
mov
pushl
jg
lock
sbb
or
sbb
lods
lcall
add
and
push
adc
les
mov
fistpll
fs
xor
aaa
into
cltd
stos
sbb
or
sbb
lods
leave
xor
inc
mov
sub
fmull
cmc
pop
mov
stos
mov
xor
mov
pusha
aaa
dec
frstor
jecxz
nop
out
adc
stos
sbb
out
mov
mov
divb
test
inc
cmp
dec
fadds
xchg
sub
jp
bound
sbb
out
ret
ret
lds
mov
jno
mov
andb
dec
loope
or
mov
sbb
inc
push
shrb
or
test
xchg
mov
pop
adc
cmpl
scas
mov
jns
sbb
int3
shll
loop
mov
xchg
and
xchg
cli
xorl
add
aaa
in
adc
mov
add
data16
inc
xchg
fnstsw
mov
push
jo
ljmp
cmpsb
mov
ret
mov
xorl
lds
stos
test
dec
xor
inc
dec
shl
int
inc
add
and
add
ret
sahf
mov
jnp
pop
addl
outsb
mov
fimuls
rclb
aad
inc
icebp
sub
cmpsl
ret
icebp
loopne
adc
inc
cmpb
loop
bound
inc
jne
mov
or
inc
sahf
push
jmp
int3
push
lea
push
loop
mov
int3
jecxz
imul
push
and
or
fisubrs
inc
aam
push
insb
incb
scas
sbbb
out
inc
or
inc
sti
pushf
and
icebp
jp
in
and
sub
rcll
hlt
pcmpeqw
or
shll
ret
jno
push
dec
je
sbb
popf
mov
inc
mov
adc
fdivl
sbb
sub
fwait
sti
pop
sbb
push
stc
mov
sub
push
cmc
data16
push
xchg
sahf
sbb
incl
fildl
or
pop
ss
jae
int
jne
out
xor
pop
and
jp
loop
out
rol
mov
stos
push
pop
xor
jo
or
fucomip
and
mov
mov
bound
pusha
adc
and
scas
cmp
xor
cmp
and
mov
je
mov
daa
ljmp
mov
movb
xor
pop
jle
out
insb
shrb
enter
addl
mov
daa
stos
pop
lret
shlb
or
mov
cs
divl
sbb
pop
jne
lret
ret
xor
popf
test
loopne
push
lea
in
iret
xchg
test
fmull
push
js
movsl
cmp
or
popw
mov
decb
fstpl
xor
adc
les
std
fildl
mov
test
test
push
and
sub
inc
shrb
hlt
mov
mov
cmpsl
xor
popf
fbld
sbb
jecxz
push
sub
ljmp
xor
inc
xchg
jne
add
sbb
mov
psrld
insl
dec
mov
or
mov
add
jecxz
stos
jno
sbb
int3
jbe
xchg
dec
cmp
insb
inc
sub
popf
adcb
cmp
mov
nop
das
repnz
adc
mov
mov
xlat
mov
filds
mov
jmp
push
movsl
push
call
lock
jp
ja
lock
sub
dec
mov
sbbb
xchg
xchg
xor
ds
enter
jg
jmp
xor
add
add
lret
rorb
mov
jle
dec
scas
std
xor
stos
jns
xor
adc
and
lock
in
ret
pop
dec
rcrb
inc
push
jns
sbb
icebp
stos
lahf
mov
xchg
mov
jns
fs
sub
test
gs
jmp
dec
cwtl
stos
jle
jp
rclb
sbb
mov
add
and
cmp
push
xor
out
xchg
push
xlat
dec
mov
jle
xchg
dec
scas
or
call
mov
cmp
mov
and
sub
sub
ficoms
sbb
mov
decl
adc
int
mov
bound
lret
jge
fcomip
loopne
push
dec
dec
jns
or
dec
cmp
push
pushf
cmp
ret
mov
xchg
pop
adc
addr16
push
mov
into
or
adc
add
into
sbb
or
cmp
cli
dec
cli
push
dec
fs
dec
aaa
or
bound
loope
pop
pusha
add
jno
xlat
sti
push
mov
fistps
movsb
or
xor
jmp
jne
iret
cli
and
dec
adc
xor
fdivl
pusha
ljmp
push
sub
popf
or
orb
push
push
mov
pop
mov
clc
fwait
jl
mov
loop
nop
inc
push
stos
cmp
and
inc
cld
inc
push
lods
js
in
jmp
jb
popa
sbb
loope
xor
inc
pop
cmpsb
fisttpll
xor
mov
and
jbe
dec
pop
xor
push
call
sbb
xchg
cmp
mov
pop
mov
bound
sbb
negl
jb
pop
sbbl
mov
in
int
cmp
stc
mov
call
pop
push
int3
test
testb
out
mov
jae
mov
lahf
mov
push
enter
lea
jno
cmpsl
dec
inc
cli
or
xchg
push
idiv
mov
pop
push
cmp
and
lcall
roll
loope
and
mov
in
add
mov
fdivrp
movb
outsl
loope
push
jmp
cmpsb
push
xchg
fs
mov
hlt
pop
mov
ret
gs
push
jmp
mov
insb
sbb
inc
inc
inc
add
push
loope
jno
mov
xor
aaa
cmpsb
mov
jnp
push
xchg
sub
shll
mov
sbb
icebp
mov
les
loope
mov
ret
loopne
ret
iret
in
and
cmp
xor
cmc
sub
add
cmpsb
into
ret
xor
fldenv
cli
add
sti
cmc
pop
out
stos
and
cmpsb
mov
mov
rclb
lret
loopne
push
mov
lcall
and
sbb
addr16
inc
les
jmp
push
fucomi
pop
scas
addr16
cmpb
jbe
popa
adc
sub
adc
fiaddl
out
adcl
push
xchg
mov
lods
mov
mov
lahf
mov
adc
push
andb
xchg
test
xor
xlat
test
xchg
in
sbb
inc
pushf
loop
jecxz
push
loop
mov
clc
inc
cltd
sub
subl
adc
test
xchg
mov
jb
mov
xor
fisttps
leave
clc
iret
sub
inc
movb
mov
add
pop
pop
cmpsb
mov
call
movhps
dec
pop
insb
pop
fidivrs
xor
inc
shr
cli
mov
adcl
fwait
ret
sbb
ja
pop
mov
mov
sahf
test
cmpb
jge
test
cmp
into
in
in
shll
xchg
xor
or
movsl
lahf
inc
outsb
repz
mov
sbb
cmpsl
lods
adc
scas
and
xchg
or
subb
push
add
ret
or
xlat
push
xor
sti
subl
pop
xchg
xchg
gs
mov
lcall
add
insb
data16
sub
dec
lcall
adc
or
enter
dec
scas
lret
sbb
lds
adc
inc
push
scas
mov
out
insb
ret
popa
scas
xor
jle
js
scas
mov
mov
add
bound
mov
push
inc
dec
adc
mov
test
xor
mov
ds
insl
and
add
jl
cmc
jle
fists
les
inc
add
adc
cmpsb
mov
pop
dec
sbb
rcrl
lret
jns
xchg
sub
adc
jle
nop
loop
push
enter
sbb
mov
adc
in
enter
lcall
add
xchg
mov
or
sub
test
jnp
add
les
or
mov
mov
or
loopne
sbb
jnp
in
or
adc
jecxz
lock
mov
or
jae
roll
lods
or
and
jl
mov
mov
add
xchg
mov
pop
sub
divb
xor
arpl
xchg
xor
frstor
mov
or
mov
call
adc
in
iret
or
jp
sbb
dec
push
push
outsb
push
dec
pop
outsb
int3
daa
test
or
add
push
push
inc
mov
mov
fisttps
sbb
out
popa
test
out
inc
sahf
shrl
orb
into
mov
leave
dec
adc
jge
mov
pop
arpl
or
bound
jbe
xchg
pop
sbb
pop
jno
mov
jle
pop
or
rolb
adc
adc
jne
sbb
popf
mov
adc
jne
fstpl
pop
sbb
xor
lahf
dec
fiadds
mov
xchg
pop
pop
push
push
and
enter
jnp
sbb
pop
mov
or
test
mov
loop
mov
movd
sbb
xchg
out
shrl
pop
jg
mov
mov
mov
mov
push
xchg
fnstsw
and
daa
clc
in
loope
icebp
jbe
push
dec
gs
andl
ret
inc
fidivl
das
inc
jb
fisttps
cmpsb
pop
mov
mov
push
popf
outsb
sti
jl
or
iret
inc
lock
imul
add
std
adc
mov
add
or
lahf
outsb
mov
mov
sbb
sbb
or
enter
jg
outsb
or
xchg
aas
inc
push
cmpb
xor
mov
js
sbb
movsl
mov
sbb
sub
jns
insl
xlat
xor
jp
fstpt
inc
in
test
pop
lret
jp
out
cwtl
jle
xchg
dec
shlb
push
fs
popf
inc
data16
xor
inc
xchg
ror
jg
test
subb
movsb
inc
movsl
sbb
scas
push
inc
loop
icebp
mov
addr16
sub
outsb
in
mov
push
add
dec
std
lock
push
in
movsb
sbb
xchg
addb
addl
push
mov
aad
jno
cmpsb
push
test
mov
jge
or
push
clc
shlb
outsl
mov
out
pop
cli
out
sub
in
adc
adc
cmpsl
int3
pop
sub
mov
pop
push
ficoml
sahf
ficompl
movsl
cmp
ljmp
fisttpll
jl
mov
lahf
cmp
jmp
dec
mov
inc
push
pop
nop
mov
add
cltd
add
lods
and
sbb
lcall
insb
pop
dec
popa
inc
loope
mov
xchg
int3
adc
data16
cld
pop
and
jb
loop
and
inc
inc
faddl
test
and
mov
add
fmull
xor
rolb
push
jnp
push
test
fsubrl
mov
insb
dec
or
jns
cmc
sbb
insb
scas
pop
cmp
std
adc
push
loope
push
jne
cwtl
out
arpl
int
inc
nop
jmp
sarl
outsl
or
xor
sbb
cmp
aam
sub
push
mov
mov
fstp
cld
subb
or
mov
xchg
push
push
add
jecxz
fildll
mov
movsb
xchg
into
sub
jp
mov
in
jb
add
add
fwait
data16
xor
adc
mov
push
pop
push
adc
xor
imul
push
pusha
add
imul
push
inc
cwtl
add
jle
dec
pop
cmc
mov
lds
mov
dec
mov
jo
scas
mov
xchg
dec
icebp
xor
filds
xor
shlb
adc
and
jne
negb
xchg
setle
and
add
fcompp
mov
adcl
outsl
cmp
pop
jne
push
pop
leave
fsubrl
aaa
inc
jns
or
mov
pushw
push
dec
test
or
pop
enter
adc
int3
xlat
or
arpl
mov
rcrb
incl
out
js
loopne
idivl
jae
sbb
dec
cmp
movsb
xchg
mov
jb
in
sarl
pop
outsb
test
cmp
xchg
cltd
push
dec
int3
loop
bt
mov
leave
sbb
push
int
int3
mov
iret
add
mov
jnp
dec
inc
fldenv
ljmp
xchg
cmpsl
adc
sbb
loope
xchg
cld
adc
jnp
push
add
lret
dec
xchg
adc
sbb
stos
scas
in
lds
or
sub
xchg
jp
lods
jno
xor
das
gs
sarl
pop
jnp
outsb
sbb
mov
mov
xchg
add
cmpsb
mov
test
or
lcall
push
jle
daa
jns
data16
xor
inc
adc
lock
cmpb
loopne
xchg
cmpsl
shrl
or
ret
ds
cs
mov
stos
xor
adc
shl
add
leave
cld
subb
dec
addr16
cmp
aad
mov
push
jnp
adc
gs
cld
mov
add
push
cmpsl
sub
adc
sbb
pop
je
and
outsb
mov
rcrb
arpl
fadd
std
push
arpl
mov
add
mov
push
pushf
pop
orb
add
in
inc
cmp
cli
fucom
push
loope
sbb
inc
fiaddl
mov
mov
add
in
dec
roll
add
rolb
mov
lods
test
loop
dec
push
mov
add
xor
fstl
icebp
and
cmc
loope,pn
or
negb
push
test
cwtl
out
orb
stos
fdivp
pop
lock
imulb
in
shll
add
push
push
jle
fbstp
fiadds
ret
movhps
xor
cmp
dec
xchg
sbb
scas
sbb
add
loope
jne
ljmp
lds
loope
sub
lock
sarb
out
mov
fs
mov
pusha
pop
rcrl
cltd
inc
leave
shlb
and
rclb
jle
add
push
sbb
pop
test
or
or
fwait
sbb
pop
dec
outsl
sub
jp
fdivrs
insb
adc
xor
outsl
jp
rcl
mov
popf
out
and
sbb
int
insl
mov
addr16
jbe
or
dec
jg
loope
lods
mov
or
push
cmpsl
outsb
mov
mov
jo
pushf
mov
fisubs
imul
cmp
and
push
xor
adc
pop
pop
mov
mov
popl
into
subb
sub
inc
jne,pt
inc
xor
cmpsb
cmc
xchg
mov
mov
lcall
fsts
pop
negl
rcl
mov
push
cmp
ret
or
sub
xchg
inc
cmp
adcb
xor
jle
xchg
dec
jle
mov
fisubrs
fs
dec
ret
dec
xchg
mov
lcall
add
inc
sbb
insl
gs
into
loope
fmul
xchg
sti
push
pop
mov
inc
cmpb
scas
outsl
mov
rcrl
inc
pop
mov
loope
adc
pop
push
mov
push
sbb
insl
aas
push
sub
cltd
or
lds
pop
adcb
decb
imul
mov
shlb
loope
inc
cs
cltd
std
loopne
sti
xchg
pop
cli
xchg
push
sbb
adc
sub
or
mov
imul
jmp
movsl
mov
mov
les
mov
pop
ret
dec
push
sub
sbb
es
xchg
out
les
in
add
push
sbb
cmp
adc
mov
shl
je
push
jp
jecxz
mov
stos
mov
iret
push
fildll
push
fmull
xor
pop
jl
lods
adc
inc
ret
stc
mov
ljmp
into
lock
fstpt
jo
sbb
mov
cmp
cmp
jnp
leave
in
lahf
mov
or
push
sbb
cld
jl
inc
inc
xor
fwait
sbb
adc
setns
sub
aad
lea
push
cmpsb
add
call
add
inc
das
xchg
cld
repnz
jo
test
leave
mov
cwtl
mov
push
sbb
sbb
ljmp
fadd
es
sbb
add
loope
mov
pop
pop
ror
jmp
mov
out
xchg
in
cli
cwtl
push
add
xor
push
sbb
inc
insb
inc
push
sbb
cmpsl
push
sbbl
and
subb
out
mov
pop
fildll
and
xlat
loope
sbb
dec
add
out
adcb
stos
and
fisttps
inc
mov
and
sahf
dec
les
lds
pop
push
aas
pop
xorb
and
sbb
int3
stos
pop
jo
iret
xchg
adcb
or
or
insb
sahf
add
out
repz
mov
pop
sbb
and
xchg
in
repnz
xchg
stos
outsb
cld
jle
add
pushl
mov
mov
ja
mov
jb
dec
rorl
loopne
rolb
and
lahf
out
mov
inc
xchg
xor
sub
or
mov
xchg
adc
sbb
mov
rclb
sub
sbb
mov
in
dec
or
xor
cmp
dec
scas
repz
dec
cli
mov
in
or
icebp
add
enter
cmp
rclb
mov
or
xchg
adc
lock
lods
negb
pop
or
bound
bound
ret
or
lcall
clc
fdivl
mov
lock
data16
les
or
push
dec
jno
pop
mov
jmp
stos
dec
out
xchg
popa
lods
inc
fwait
scas
pop
shl
sub
xor
into
inc
test
out
int3
cmpsb
push
js
jbe
cmpsl
cmpsl
int3
pop
mov
sahf
pop
cmp
cld
icebp
cmc
mov
ja
gs
addr16
push
mov
add
outsl
data16
mov
movb
xor
cmpsb
cmp
push
lret
imul
mov
mov
cmpsl
popf
jecxz
xchg
lea
and
inc
mov
pop
sti
test
cmp
dec
cmc
push
loop
stc
or
or
leave
lret
ret
xchg
mov
xchg
cmc
je
and
aaa
out
pop
lahf
ret
xor
ljmp
pusha
mov
jle
sub
ret
ss
adc
sbb
or
addb
or
xor
xchg
jns
cmp
push
jno
mov
dec
addr16
lcall
mov
fdivs
imul
or
sbb
jp
pushf
int3
mov
inc
dec
inc
sbb
sub
mov
mov
adc
and
out
flds
jle
fists
push
cli
xchg
inc
push
jns
push
and
in
push
pusha
inc
inc
sbb
jae
popa
sbb
add
cmp
add
lds
mov
sbb
loope
jge
lock
enter
mov
push
cs
aaa
sub
pop
or
mov
xchg
sarl
std
mov
out
fiadds
mov
movsl
ret
test
adc
jle
mov
cs
mov
lret
popf
sub
jl
popa
cli
mov
mov
ret
sbb
add
jle
stos
daa
int
add
xchg
scas
pop
dec
dec
shl
es
sbb
push
xorl
dec
cmpsb
loope
push
les
add
and
loope
mov
aad
pop
dec
or
sbb
inc
es
xchg
xchg
popf
jle
or
sub
sarb
push
test
aas
int
inc
stc
jg
or
inc
out
aaa
dec
clc
inc
sub
adc
adc
js
add
ljmp
xchg
fwait
loop
push
push
loop
sbb
xchg
sbb
fs
pop
movsl
mov
scas
push
or
lock
out
into
add
insl
loop
dec
lods
icebp
jnp
cltd
push
stos
xchg
lret
add
loopne
add
mov
pusha
xor
push
stos
sti
jmp
mov
fs
xor
mov
add
loopne
push
push
lds
aad
sbbb
inc
aam
loope
mov
cli
addl
inc
inc
jmp
popa
mov
std
repnz
jle
inc
bound
hlt
ret
mov
and
push
sbb
arpl
orb
or
repnz
scas
popf
enter
fs
pop
imul
stos
cmp
sbb
stos
and
orb
push
add
mov
loope
push
ja
sub
mov
pop
xor
fcomi
push
aad
pusha
jl
xchg
shlb
addr16
mov
test
fdivs
out
loope
addl
filds
mov
cli
imul
das
cld
mov
jg
ficompl
cmp
fwait
inc
push
mov
dec
mov
xchg
iret
scas
or
push
pop
stc
mov
popf
xor
or
les
mov
jb
cltd
es
xchg
or
fnstsw
fcoml
cmpsb
mov
cmp
imul
dec
popl
cmc
cmp
cmpsl
inc
lods
dec
ror
dec
sti
jno
gs
mov
hlt
ret
or
xchg
das
mov
std
inc
jae
lock
push
imul
mov
mov
mov
mov
mov
outsb
or
outsb
dec
repnz
or
add
jo
push
popa
or
cmpsb
imul
lret
mov
arpl
pop
sbb
sbb
adc
cmp
jbe
cmpsl
jae
fidivrl
or
int3
cwtl
jbe
loop
jmp
into
inc
mov
or
into
sub
in
sbb
push
inc
adc
shr
insb
mov
jnp
cmc
sbb
mov
dec
bound
stos
add
adc
les
loopne
xlat
jle
ss
cmc
dec
stos
xlat
fs
adc
pop
in
aad
jo
mov
rcll
data16
mov
push
gs
adc
insl
sbb
mov
lds
jmp
out
dec
mov
sbb
std
imul
int
cmc
mov
leave
addb
lock
inc
inc
pop
pop
xor
sbb
int3
pop
and
out
mov
inc
inc
dec
clc
lcall
push
adc
hlt
loop
lods
mov
push
sub
hlt
loopne
call
lret
add
ret
lds
in
stos
xchg
xlat
movl
jp
cmp
push
into
arpl
stc
push
sbb
fwait
and
xchg
xchg
gs
leave
jp
mov
sbbb
leave
cmp
inc
sbb
andl
or
sbb
leave
pop
imulb
test
shlb
cmp
notl
add
les
push
pop
fs
jnp
sbbw
cmpsb
push
adc
xor
adc
popf
in
adc
jnp
push
pop
movsl
mov
adc
outsl
mov
inc
xor
pop
test
rcrl
push
pop
xchg
sub
sub
push
mov
pop
xchg
ds
insl
add
idiv
jae
rclb
jmp
dec
hlt
in
ja
xor
jg
mov
or
lcall
dec
jae
lock
fildl
pop
popf
out
loopne
mov
icebp
jp
push
pop
test
cmpsb
notb
insl
fsub
push
stos
xchg
subb
xor
sbb
out
cli
jl
sub
adc
test
push
aaa
push
adc
sbb
insb
push
or
lea
and
jmp
or
mov
rolb
loopne
push
lods
push
xor
out
imul
jmp
int3
mov
xor
out
leave
add
ret
fwait
call
in
inc
cmpsb
popf
inc
mov
lea
inc
jecxz
mov
mov
cmp
add
shrb
adcb
in
dec
pop
add
imul
lods
pop
fsubl
pop
dec
mov
aam
int
daa
sbb
daa
popf
mov
pop
pusha
imul
add
out
loope
fisttpl
ret
or
cmc
shrl
shlb
test
jp
out
push
pushf
sti
mov
push
push
leave
stc
cmc
dec
pop
scas
push
into
inc
div
or
add
cld
fwait
negl
cmp
inc
add
adc
xchg
inc
adc
mov
dec
lcall
mov
push
adc
push
sbb
fildll
outsb
push
dec
arpl
fcomi
fimuls
sbb
jecxz
pushf
adc
js
jle
mov
mov
inc
jbe
clc
pusha
add
rorb
push
pop
clc
sahf
shlb
add
out
dec
dec
cmc
sahf
add
inc
rcrb
xor
pop
pop
mov
or
or
clc
scas
inc
or
mov
daa
dec
pusha
cmp
and
mov
shll
push
or
or
and
packsswb
orl
cwtl
sbb
ljmp
ljmp
push
push
mov
aas
adc
out
cwtl
jecxz
fiadds
inc
sbb
gs
jns
pop
ss
adc
mov
push
sbb
mov
jnp
lods
or
mov
inc
jne
pop
mov
ret
aad
int
cltd
fldcw
xchg
pop
loopne
xorl
push
mov
push
add
or
adc
das
pop
mov
adc
cmp
test
adc
flds
pop
jle
sbb
cltd
cmpsb
adc
pop
or
xor
mov
pop
leave
dec
sbb
push
mov
xchg
gs
mov
addr16
cmp
out
and
fwait
test
mov
in
jp
sbb
mov
pop
fdivl
data16
sbb
sub
scas
pop
icebp
and
xchg
scas
jge
cltd
shlb
sbb
push
cmpsl
mov
sti
int
loop
stos
idivl
sbb
loopne
hlt
push
lahf
rorb
cmpsl
fidivrs
and
aam
mov
lret
jmp
jno
scas
loop
dec
push
pop
leave
cmp
xlat
sti
aas
and
xor
push
rcr
pushl
cmp
jae
add
push
xor
inc
cwtl
repnz
push
jbe
aad
enter
out
jne
mov
pop
outsb
imul
popa
mov
cmp
dec
ljmp
xor
lods
ds
mov
xor
ret
sbb
push
mov
cmp
pop
push
add
dec
sbb
scas
inc
jp
repnz
cmp
mov
pop
pop
and
gs
pushf
pop
out
lcall
loope
sti
xor
scas
and
scas
lea
push
xchg
adc
adc
outsl
sub
jns
mov
dec
lret
xor
mov
push
xchg
in
mov
loopne
cmc
or
dec
insl
popa
jg
inc
mov
mov
test
dec
cmp
lahf
adc
rorb
fwait
jmp
jnp
repnz
sbb
gs
jnp
cwtl
xchg
insb
sbb
adc
push
adc
dec
mov
iret
push
addb
add
in
jnp
inc
sbb
or
jne
cmp
les
pop
push
mov
in
push
inc
aaa
in
xor
les
fcomps
fsubl
iret
mov
sbb
adc
or
push
popa
adc
repz
data16
in
rcll
dec
imul
jns
ret
sbbl
xor
jnp
pop
rorl
push
mov
cmp
les
cli
pop
jmp
movsl
adc
inc
mov
xor
in
jmp
bound
sub
cli
mov
adc
push
xor
and
or
adc
movsb
adc
sti
pop
je
in
mov
or
das
in
sbb
jge
or
xchg
pop
xchg
or
fnstsw
dec
sbb
mov
inc
fcoml
imul
adc
xor
popf
add
push
cmpsb
jle
mov
shrb
mov
mov
enter
rcrb
mov
add
add
jp
mov
cmpsb
pop
mov
movb
les
scas
leave
fwait
inc
push
sub
sub
push
aad
xchg
push
mov
add
rcll
adc
mov
mov
int
jno
lock
stos
sub
add
out
adc
mov
mov
mov
jecxz
ja
or
push
mov
lret
cmp
daa
jno
es
push
jne
loopne
xchg
lea
add
loopne
dec
xchg
jmp
ret
rclb
lods
xlat
mov
loopne
pop
push
and
test
mov
sub
sti
mov
sub
aas
daa
push
lahf
add
stos
sbb
pop
or
je
bound
jae
iret
or
xchg
divw
sub
or
in
in
out
and
fwait
pop
mov
daa
mov
pop
fidivs
mov
jbe
sub
xchg
xchg
push
xor
push
jle
pop
jp
orb
popf
jne
jno
or
cmp
arpl
imul
cmp
out
xchg
jecxz
adc
out
xchg
push
or
adc
in
jg
scas
enter
sbb
or
mov
pop
dec
pusha
cmp
movsl
pop
inc
push
mov
fs
mul
xor
push
dec
push
stc
mov
aas
out
cmp
arpl
mov
or
test
fcomi
dec
sbb
mov
push
jge
cmp
pushf
std
ret
sti
inc
cmp
stos
mov
out
into
sbb
mov
repz
pop
jge
movsl
sahf
fs
out
mov
add
daa
scas
jge
inc
sub
jp
cmp
push
shrl
xor
ret
rcr
push
ja
xlat
push
cmp
mov
cmpsb
push
pusha
add
pop
dec
ret
dec
lea
inc
outsl
testb
fnsave
push
sub
fstps
xchg
mov
fadd
fwait
rorb
push
scas
nop
rcrb
or
push
push
adc
gs
jbe
adc
cld
adc
fdivs
in
pop
in
mov
cmp
pushf
in
int
fsubrl
fisubs
mul
lret
push
or
addr16
add
xchg
out
inc
shlb
stos
pusha
add
jmp
or
pop
fwait
inc
sub
xchg
jle
pop
and
inc
cmovne
aam
mov
xrelease
rcr
cmp
dec
push
mov
cmp
push
movsb
loop
cs
add
fdivl
aaa
arpl
inc
daa
sti
and
subl
rclb
mov
xor
adc
rcrb
test
addl
inc
push
push
dec
inc
stc
pop
popa
xchg
add
add
test
mov
inc
lcall
dec
pop
out
dec
sahf
xchg
add
xor
pushf
dec
jg
es
sbb
lods
test
cmpsb
ljmp
mov
cmpsb
mov
fbld
push
dec
fildll
push
mov
sbb
push
mov
aam
daa
xchg
test
cli
into
push
jne
mov
xor
sbb
les
clc
out
and
push
clc
push
jl
push
inc
test
cmp
stos
and
inc
sbb
out
mov
out
sbb
ss
fdivrs
inc
mov
mov
and
dec
jb
push
push
pop
pop
stos
add
cwtl
cmp
cmp
lods
aaa
int3
fwait
movsb
lods
xor
test
xor
mov
or
xchg
out
mov
sbb
daa
sbb
add
andl
fsubl
sub
or
add
lea
pop
push
mov
fwait
or
daa
cwtl
ljmp
sub
jl
gs
testb
add
inc
pop
or
and
push
or
pop
and
mov
xorl
rcr
push
ret
xorl
inc
sbb
dec
sub
xchg
xchg
out
and
test
mov
insl
or
push
push
or
std
mov
push
mov
xchg
sahf
addb
mov
push
clc
push
fisubs
push
xorb
jg
inc
lock
mov
xchg
pop
out
mov
rorl
cmpsb
lods
insl
in
add
int3
and
and
sbb
in
loop
mov
mov
pop
dec
fsubrl
pop
add
dec
xlat
dec
adc
mov
add
out
dec
mov
test
or
lock
add
jbe
sub
into
push
xchg
push
das
dec
ljmp
cmp
insb
pop
es
sbb
inc
sti
aaa
inc
std
out
mov
sbb
cmpsb
xor
pop
mov
push
or
test
dec
popa
repz
lds
popaw
or
add
into
clc
push
dec
or
add
cmpsb
insb
mov
cli
repnz
jecxz
mov
mov
adc
pop
adc
add
cs
xor
add
sbb
loope
mov
inc
xchg
mov
ja
pop
jne
sbb
or
pop
lret
pop
sbb
cmp
repnz
ss
xchg
pop
pop
faddl
inc
mov
cmp
jo
in
sarl
hlt
lods
push
dec
rcr
fcmovnu
jle
daa
pop
pop
push
sub
push
lods
jns
or
shrl
xchg
neg
shrl
and
or
jne
ret
pop
es
insl
loope
jl
push
insl
stos
pop
push
inc
andb
sbb
sub
pop
test
mov
movsb
push
xchg
pop
gs
lahf
mov
jns
or
fidivrl
inc
sbb
popa
mov
push
repnz
in
jns
gs
ljmp
lods
out
xchg
add
add
or
and
test
pop
insl
inc
daa
adc
insl
out
xor
xchg
ret
fucomi
ja
xor
loope
and
leave
add
dec
push
mov
add
mov
mov
push
mov
lret
int
push
sbb
sahf
ss
or
pop
pop
aad
pop
pusha
es
test
or
push
lds
pop
push
aas
jmp
xor
stc
daa
mov
sbb
xchg
mov
fcompl
sbb
dec
iret
es
movsb
test
add
aad
fistps
bound
or
add
pop
in
repnz
mov
daa
push
xchg
pusha
in
mov
ljmp
xor
and
jmp
adcb
jmp
imulb
sti
xchg
lods
cmc
inc
aaa
flds
push
data16
int3
push
cmc
xorl
out
lret
sbb
pop
or
es
fwait
jge
pop
enter
add
int3
or
xchg
push
add
jbe
push
arpl
cmp
push
scas
nop
aaa
xorl
jmp
jle
or
add
jl
pop
pop
stos
sub
or
arpl
cwtl
loope
sbb
and
insb
sti
push
addr16
movhps
dec
xchg
add
leave
std
add
adc
sbb
in
pop
pop
loope
adc
mov
jb
cmp
fstps
xchg
jl
xchg
jnp
mov
mov
pop
rorl
mov
sbb
mov
cmp
mov
mov
lods
aaa
das
scas
jne
andl
or
pop
in
push
sbb
call
aas
adc
out
jmp
inc
mov
jp
daa
divb
pushf
ja
xorl
test
sbb
in
mov
movsl
pop
mov
test
jne
jb
into
push
xchg
test
xorl
movsl
sbb
jge
cmp
inc
xor
mov
pop
enter
mov
inc
loope
stos
test
repz
sbb
sub
jl
dec
dec
cmpsb
imul
aas
and
repnz
mov
adc
test
in
iret
xor
cmc
sar
adc
ret
aad
push
ss
pop
adc
test
pop
lock
loop
cmp
neg
into
mov
imul
lret
scas
inc
or
into
jecxz
fadds
mov
mov
jecxz
pop
mov
mov
mov
or
mov
test
and
and
sbb
popf
add
lock
pusha
shlb
notl
nop
add
inc
mov
and
lock
push
ret
mov
fdivrl
out
push
hlt
mov
lahf
sub
cs
outsb
out
push
mov
dec
mov
cmp
dec
mov
push
push
push
sbb
sub
pop
mov
xchg
lcall
fimull
daa
mov
jecxz
not
je
mov
in
mov
adc
popa
sbb
into
sbb
decl
xchg
cwtl
stos
xchg
mov
sbb
ss
lea
pop
mov
pop
outsl
insb
out
imul
leave
mov
xchg
lahf
fnsave
jo
xchg
pop
jnp
gs
sbb
ja
arpl
lods
add
in
add
xchg
dec
rcll
ds
stos
shrl
icebp
xchg
pusha
mov
xchg
sbb
jns
cmp
out
jnp
push
mov
aaa
cmp
rcrl
movsl
dec
aas
fadds
and
shlb
sbbl
cs
xchg
mov
jg
mov
fsubs
pop
cmp
pop
shll
adc
subl
sub
ret
lea
pop
cmp
xchg
mov
movsb
std
cli
hlt
mov
jmp
jnp
outsl
mov
sbb
lock
divb
mov
sbb
popa
test
pop
imulb
mov
sbbb
jp
or
xor
incl
loope
ss
ret
rcll
mov
ja
je
jg
mov
repz
pop
jecxz
push
loop
inc
aaa
out
xor
sbb
dec
fnsave
push
rcrl
sub
addb
xor
loopne
cs
jle
jbe
repz
insl
sti
fnop
adc
rsm
test
xor
push
mov
pop
jg
arpl
test
ret
dec
pop
and
jno
or
xor
pushf
ret
jbe
sub
ret
push
popf
inc
ss
cltd
dec
mov
movsb
outsl
xor
push
in
jp
bound
aaa
sbb
mov
les
insl
push
call
aas
loop
out
lcall
out
icebp
or
adc
mov
sub
or
daa
mov
lret
ret
push
cmp
imul
xchg
or
jl
aas
push
add
jbe
lods
pop
lahf
sbb
push
dec
daa
push
out
push
and
inc
imul
cmp
push
mov
popf
add
or
mov
lods
orb
mov
sub
ret
jmp
insb
ret
add
xlat
subl
adc
loope
xchg
popa
inc
in
pushf
jno
lock
lahf
mov
pop
xor
mov
or
sub
mov
adcb
inc
mov
stc
and
pop
cmc
into
xchg
std
ds
aaa
out
aas
out
sub
fdivrl
notb
or
push
push
add
dec
adc
orl
data16
mov
mov
sbb
jnp
sub
rcr
in
es
hlt
in
push
clc
push
dec
test
in
pop
sub
cwtl
aad
inc
cmc
add
cmpsb
daa
and
movb
pop
sub
enter
dec
jne
xchg
pop
pop
je
xor
mov
cmp
pop
dec
sub
xlat
repz
pop
push
or
imulb
mov
mov
dec
pusha
aad
sbb
pop
aaa
repz
mov
or
add
data16
add
mov
push
jne
adc
sbb
aaa
mov
outsl
mov
xor
loopne
pop
daa
js
fs
dec
sbb
ret
add
push
or
mov
add
mov
dec
icebp
cmp
test
dec
mov
stos
leave
cmpsb
inc
inc
aaa
lret
les
xchg
or
add
pop
sbb
mov
je
repz
gs
jmp
sbb
cmpsb
mov
frstor
rclb
scas
mov
test
aaa
adc
negl
push
push
push
push
insb
xchg
roll
dec
push
rclb
ret
adc
sbbb
cld
cmp
cmc
out
out
into
push
adc
test
lock
sub
fistpl
add
or
push
dec
sbbb
movsb
mov
ljmp
lret
and
add
sbb
cltd
push
jge
mov
sti
cmc
loop
imul
popf
cmp
sbb
prefetcht1
pop
stos
std
insl
popa
ret
in
cmp
or
andl
dec
mov
dec
test
fimuls
jecxz
loopne
mov
adc
jmp
push
adc
push
xor
sub
push
fidivl
mov
test
icebp
lahf
ljmp
lahf
push
mov
cmc
pop
or
mov
mov
sub
fmull
cmpsl
or
add
test
sbbl
pop
push
xchg
jne
jp
nop
cmp
std
stos
pushf
dec
sbb
stos
dec
jecxz,pn
stc
arpl
mov
in
or
push
mov
sub
sub
or
mov
fildll
pop
adcb
dec
daa
nop
sbb
jae
mov
stc
lret
add
xchg
add
jp
pop
scas
xchg
lock
lods
data16
mov
aaa
xchg
or
ljmp
sub
or
leave
mov
jns
cmc
xor
add
jne
mov
out
scas
daa
rorb
mov
push
jle
cmpsl
xlat
rcr
jl
subb
popa
lods
xor
sbb
outsl
jb
stos
call
or
movsb
dec
mov
pop
bound
push
repnz
mov
jns
pop
pop
outsb
mov
and
or
cli
dec
dec
pop
pop
inc
int
push
cs
adc
dec
dec
fmull
xchg
add
in
dec
or
sbbb
or
mov
xchg
push
shr
pop
gs
push
dec
in
into
and
sub
orb
xchg
inc
rolb
andb
sbb
push
xor
andb
arpl
cmpb
mov
and
fwait
dec
mov
xor
adc
out
fs
mov
mov
ljmp
out
je
pop
inc
sub
pop
fstpl
mov
xchg
jge
sub
ja
mov
jl
xor
xlat
es
mov
stos
and
xor
out
mov
sbb
inc
insl
insl
mov
pop
ja
add
mov
divl
movb
popf
push
idivl
rcll
fwait
add
out
adc
or
cmp
adc
js
loop
shr
ror
cmpsb
inc
push
inc
enter
mov
cmc
in
scas
insb
xchg
push
jmp
pop
sbbl
mov
mov
xor
sbb
pusha
in
adc
push
xorl
push
lods
sbb
sub
xor
push
fldenv
sub
jno
xchg
in
lahf
push
mov
jbe
lahf
imul
add
stc
stos
loope
stos
int
pop
push
dec
lods
jae
xchg
mov
gs
out
xchg
test
inc
pop
mov
cmp
int3
xor
mov
std
out
push
loopne
sub
sub
mov
sarb
lret
shlb
adc
xchg
jle
sbb
pusha
cltd
fmul
and
inc
sub
sahf
fldenv
add
add
dec
mov
sub
data16
mov
rorb
into
movsb
xchg
cli
or
mov
cmpsl
sbb
inc
inc
or
loope
test
andb
adc
xor
mov
dec
sbb
rol
pop
pop
lret
das
push
xchg
pop
mov
mov
gs
add
mov
cmp
dec
lods
addr16
xlat
ja
mov
push
cli
sbb
xchg
cmp
jge
aas
xor
cmp
cmpsb
insl
mov
mov
sbb
fwait
sbb
sete
pushf
out
mov
loop
or
xor
adc
aam
xor
mov
add
lcall
add
sbb
jp
lods
out
ficoms
xchg
mov
lds
or
in
pop
inc
push
dec
push
bound
push
shlb
add
subb
add
insl
add
aad
lods
gs
int
mov
insl
push
inc
lea
jne
or
mov
adc
add
mov
mov
cmp
outsb
ljmp
inc
push
or
mov
leave
hlt
roll
pop
jae
jle
ror
sub
daa
test
mov
add
in
mov
add
adc
inc
lock
pop
es
inc
mov
data16
lock
bound
sub
rcrb
aaa
insb
dec
sbb
movsl
repz
mov
dec
cltd
mov
xorl
xchg
into
or
sub
ret
imul
cwtl
xchg
and
pop
test
jno
xchg
push
mov
jle
movsb
push
pop
in
and
mov
std
call
sbb
pop
cli
add
cltd
inc
pop
mov
push
add
or
mov
xchg
cmpsb
pop
sbb
add
lcall
pop
jle
inc
jge
dec
mov
cmpb
addr16
out
fs
clc
pop
ficoms
dec
clc
lds
sbb
sahf
xor
cld
mov
shl
addr16
mov
xor
rol
aas
cmp
sbb
loop
jge
or
push
xchg
mov
mov
or
sbb
mov
xchg
sub
dec
icebp
mov
add
pop
inc
sbb
inc
daa
cmp
lock
in
add
jbe
lea
out
inc
cld
cmp
adc
mov
adc
pusha
lahf
dec
mov
lret
cmc
movsl
int3
mov
fwait
xchg
mov
adc
in
and
cld
mov
jg
daa
xchg
ret
xor
mov
outsb
or
sbb
jmp
push
sbb
sbb
mov
lods
iret
and
jp
and
jnp
repnz
pop
add
xchg
cltd
cwtl
mov
push
cwtl
jp
imul
mov
fmul
loop
test
movsl
in
insb
mov
out
xlat
sti
or
icebp
aad
insb
std
rclb
test
cltd
pusha
cmp
adc
push
cmpsl
push
push
or
sbb
xchg
or
pop
or
xor
or
add
mov
inc
ficoms
aaa
outsb
sbb
pop
mov
mov
cmp
popf
add
movsl
popa
out
inc
cmpsb
pushf
incl
adc
inc
test
inc
stos
inc
fiadds
pop
bound
push
inc
sub
popf
inc
sti
ljmp
insb
jbe
rolb
out
pop
add
jo
cmp
cmpsb
popf
pushf
pop
xchg
loope
stos
lahf
prefetcht1
das
sub
add
pop
mulb
ret
mov
ret
ret
out
or
sti
xchg
nop
inc
or
mov
aas
in
pusha
or
sub
add
jns
bound
out
nop
jl
out
lock
clc
inc
inc
push
sub
push
add
jp
xor
push
and
mov
mov
xor
ret
or
pop
jmp
jmp
andl
xchg
daa
mov
push
inc
adc
add
inc
adc
pop
jbe
inc
mov
out
push
add
push
or
fidivl
shl
jns
sbb
in
adcl
dec
adc
sbbl
cmp
mov
dec
xchg
nop
and
mov
mov
and
or
sbb
imul
push
push
cmp
cmpsb
mov
add
jmp
out
js
gs
movsl
idivl
dec
push
fisttpl
gs
and
je
xchg
fsubrl
adc
pop
pop
and
cmp
movl
outsb
mov
sub
pop
lret
data16
dec
data16
jnp
mov
jb
mov
cs
into
push
xchg
cmpsb
call
mov
incl
and
jmp
inc
mov
gs
sahf
in
add
adc
pop
dec
inc
lea
imul
mov
ljmp
xor
sbb
jp
in
lahf
jge
mov
sub
lods
and
mov
ljmp
icebp
cmp
inc
dec
pop
stos
dec
call
dec
stos
xor
sbbl
sbb
testb
cli
adc
xorb
dec
nop
out
cmpsb
ret
and
rcr
clc
movsl
dec
stos
ret
cmc
popa
mov
add
or
dec
sbb
out
sub
jne
add
push
xor
cmc
out
scas
or
push
push
inc
dec
pop
cli
dec
sbb
repnz
dec
test
or
jmp
test
sub
xchg
in
bound
push
cltd
or
jp
mov
xor
or
ja
or
jecxz
arpl
sahf
sub
divl
xchg
add
test
dec
call
insb
lret
lcall
sbb
clc
jbe
arpl
cmpl
push
sbb
imulb
mov
js
sbb
gs
dec
cli
push
pushf
test
icebp
xor
stos
mov
inc
loope
jecxz
adc
cs
sahf
and
pop
scas
jbe
sub
mov
stos
fsub
cmp
aam
punpckhdq
out
rcl
sub
imul
sub
dec
adc
sahf
dec
mov
cld
nop
push
push
dec
sbb
ficoms
aaa
sub
sbbb
and
add
cmp
inc
mov
dec
jl
cmp
es
dec
mov
stos
push
cmp
adc
dec
test
inc
sub
sbb
mov
pop
mov
orl
dec
add
aaa
addl
out
jp
cmp
idiv
nop
pop
test
pop
sbb
or
enter
arpl
cmp
pop
lret
mov
add
pushf
xorb
lods
cmc
inc
push
fidivs
mov
dec
mov
jg
add
je
push
iret
addl
xchg
outsl
sbb
lods
daa
push
cwtl
mov
cmp
push
pop
orb
mov
jmp
imul
addr16
add
inc
in
xchg
test
push
mov
push
mov
shlb
cs
rcrb
push
cmc
in
pop
testb
psllq
sbb
or
jnp
sub
or
aaa
or
mov
jg
push
mov
data16
scas
adc
dec
inc
gs
imul
cmp
lcall
mov
sbb
push
faddl
hlt
adcb
addr16
shrl
jb
pop
jno
in
xor
sub
inc
arpl
movsl
add
push
cmpsl
in
push
inc
loopne
sbb
jg
mov
test
dec
mov
push
clc
aad
or
ljmp
mov
cmp
dec
dec
loope
cmpsb
andb
push
mov
mov
add
mov
xchg
mov
aaa
xor
add
xor
jg
push
js
add
ret
sub
scas
sub
add
push
sub
xlat
repz
sbb
push
xchg
xorb
fdivl
rolb
inc
cmpsl
bound
pop
xor
adc
imul
in
dec
adc
jb
int
hlt
aaa
cmp
fimull
inc
dec
mov
test
add
mov
inc
sti
sti
fwait
test
sti
mov
push
sti
inc
mov
inc
pop
adc
dec
sti
xlat
ret
or
mov
rcrl
mov
or
out
mov
ds
sbb
loop
cmp
clc
ret
add
inc
in
add
movnti
adc
sub
xchg
cmp
sbbl
xchg
push
cmpsl
inc
push
inc
jg
fisubs
aam
pop
and
ret
sub
add
and
outsb
push
jmp
jp
jns
sub
and
rolb
int3
or
repz
xchg
inc
jns
daa
aad
mov
les
int
xchg
lret
mov
sbb
andps
andl
and
jmp
mov
popa
sbb
dec
jge
addl
dec
addb
ficoml
out
adc
bound
inc
cmc
mov
je
sbbb
stc
fwait
loopne
nop
daa
pop
mulb
adc
into
jne
loope
dec
xlat
stos
jno
cli
or
leave
jns
stos
add
inc
faddl
stos
clc
stos
jge
addr16
out
add
sbb
cmp
out
insl
mov
add
adc
jb
add
cli
pop
mov
ret
es
aad
daa
cbtw
cmp
push
mov
pop
mov
xor
add
loop
push
and
mov
mov
cmpsl
add
pop
pop
sub
test
shlb
sti
fimuls
addr16
popa
mov
push
cmp
pop
cmp
inc
sbb
cmc
sbb
push
filds
push
lods
jmp
popf
pop
mov
or
push
push
inc
jp
in
jmp
in
jl
scas
loopne
add
bound
push
or
cmpsb
adcb
fmul
lea
icebp
cmc
sbb
dec
sbb
push
test
push
outsb
loope
rorb
shlb
data16
pop
mov
aas
sbb
dec
sbb
pop
or
clc
or
orb
popa
xor
add
mov
loopne
lods
nop
nop
and
push
out
test
xor
xor
rcrl
and
pop
push
das
stos
out
and
sbb
jg
lods
add
lahf
and
xchg
dec
adc
mov
cmpsl
cltd
and
fsubs
mov
mov
mov
add
sbbl
mov
leave
shll
imul
inc
aad
mov
and
lcall
add
inc
cmp
and
hlt
out
jb
xchg
push
pop
dec
icebp
pop
dec
in
lock
lret
dec
xchg
shrb
xor
mov
jno
adcl
mov
es
sub
cs
sbb
push
test
lods
fiadds
cltd
gs
inc
mov
out
push
jp
fmuls
inc
sahf
ret
dec
scas
jae
jmp
adc
cmc
dec
pop
mov
into
pop
lcall
push
lods
dec
mov
mov
jg
cli
loop
push
gs
cmpsl
aaa
mov
out
jne
inc
rcll
inc
insl
jnp
lock
sti
test
scas
in
push
add
push
mov
lret
add
mov
mov
sahf
daa
xchg
mov
xor
out
mov
ret
cmp
sbb
inc
repz
lea
pop
imul
dec
mov
inc
or
shrl
add
fsubrs
cmp
aad
mov
cli
into
scas
add
shr
shlb
sub
push
mov
push
sbb
cld
pop
cmpsb
ss
or
and
cmp
fcmovnu
mov
icebp
mov
sbb
add
sub
or
icebp
xor
pop
in
subb
test
jbe
add
aas
push
aaa
insl
mov
push
jns
gs
push
pop
or
adc
lcall
dec
test
sbb
jnp
xor
mov
shlb
stos
xor
js
and
dec
push
add
das
jae
cs
jns
inc
mov
in
cmpsb
sbb
outsb
dec
jmp
dec
inc
dec
push
lcall
daa
imul
sub
outsb
xor
inc
push
mov
dec
push
lea
mov
or
fcomps
and
mov
add
lods
outsl
mulb
push
adc
adc
lahf
xchg
ja
int3
cmpsl
inc
gs
mov
dec
and
fisttpl
push
fnsave
add
test
xor
xorl
ffreep
scas
sub
lcall
sarb
pop
push
sub
jp
push
data16
sbb
outsl
ja
sub
add
sub
push
rcr
fisubl
notb
das
cmpsl
jno
imul
inc
fcomps
jae
imulb
xchg
or
mov
cmp
cmp
ret
fadds
loopne
mov
in
bound
ja
jp
add
mov
or
pop
stos
aaa
and
cmp
mov
enter
add
popa
ds
sbb
inc
mov
outsb
push
mov
cmpsb
scas
mov
std
out
mov
mov
inc
xchg
pop
sbb
mov
imul
leave
ret
fwait
icebp
or
fsub
in
stc
data16
scas
mov
sahf
cmpsb
or
mov
sbb
insb
push
leave
pop
js
mov
repz
aam
in
stos
test
jnp
loopne
notb
sbb
or
insb
fsts
loope
xor
xchg
xor
mov
cli
mov
inc
cmp
lret
aam
das
sbb
pusha
lcall
sbb
mulb
arpl
lret
lret
inc
js
ror
jp
mov
pop
add
xlat
mov
outsb
in
mov
popf
enter
fsubrp
pop
cmp
jl
shll
jne
leave
xchg
lahf
outsl
or
or
sti
push
or
add
fisubrl
inc
out
adc
lds
decl
clc
inc
dec
test
leave
mov
jne
mov
lea
jno
xlat
push
stc
push
cmp
mov
inc
mov
gs
push
xchg
sahf
push
push
nop
push
cmp
cmp
mov
inc
add
dec
push
mov
lock
and
lods
or
imul
repz
arpl
test
lea
sub
pop
xlat
push
outsl
ret
cmp
gs
leave
pop
jbe
mov
mov
dec
mov
popf
xor
cmpsb
add
xchg
dec
add
jle
or
mov
ret
lods
dec
gs
aas
xor
mov
jne
mov
sub
pop
popa
xor
push
and
ret
push
sbb
lods
pop
inc
or
sbb
in
push
lcall
test
icebp
cwtl
pop
adc
inc
or
js
jl
xor
pop
xchg
sbb
adc
adc
in
mov
mov
mov
dec
rol
rorb
mov
sub
cmp
insl
pop
mov
cwtl
loop
cmp
and
gs
fwait
imul
shl
push
stos
pop
or
push
adc
or
mov
orb
push
repnz
push
mov
cltd
push
andb
mov
cmc
inc
shrb
data16
xchg
ret
inc
xorb
pop
cs
jmp
mov
push
xchg
adc
in
jmp
push
cmp
jns
fadds
pop
push
test
mov
leave
push
sub
push
lds
lds
add
rcrl
insl
inc
loopne
in
aam
cli
fs
ret
jge
inc
mov
dec
popa
push
test
xor
xor
cmpsb
pop
mov
ja
mov
in
out
test
sbb
lods
add
das
enter
lcall
cmp
adcb
mov
aad
test
imul
lahf
das
and
test
sub
aaa
das
fwait
xchg
add
lods
jb
cmpsb
sbb
rolb
movb
mov
insb
mov
daa
sahf
xor
popf
push
cmp
cmpsb
jne
int3
mov
sbb
insb
or
out
cwtl
or
pushf
inc
sbb
jne
jne
add
and
repz
into
loope
sub
les
pop
add
mov
add
or
inc
and
cwtl
sbb
xor
sbb
int3
xchg
imul
sbb
push
rcrl
cmpsb
xchg
add
inc
pop
loope
sbb
out
push
inc
out
xchg
pop
cmp
int
scas
jl
and
lds
cmc
imul
add
popf
sarb
rolb
mov
fwait
inc
push
push
out
subl
or
add
dec
add
push
mov
gs
push
dec
jns
inc
or
lods
adc
mov
xchg
out
jbe
inc
repnz
popf
pop
out
loopne
add
fstps
out
inc
popf
or
repnz
jae
sarl
or
subb
divb
arpl
cmp
push
mov
add
call
xor
mov
test
dec
sbbl
movsl
loope
in
ljmp
ja
mov
add
in
sub
movb
add
test
insl
out
sbbl
scas
ja
mov
sbb
out
lods
and
mov
inc
rolb
pop
rcrw
daa
std
loope
jne
out
adc
sbb
xorl
mov
adcl
mov
pusha
xor
imul
das
addl
mov
mov
lret
mov
add
and
xchg
pop
pop
pusha
mov
test
mov
jnp
xchg
pop
jne
and
cmpsl
arpl
sub
pusha
movsb
dec
cltd
mov
hlt
and
cltd
imul
pop
sbb
test
jmp
sbb
and
jae
adcl
mov
in
jp
loope
pop
push
out
pusha
push
dec
cmpsb
popl
pop
adc
xchg
jle
div
pop
das
lds
roll
in
insl
jno
ja
add
xchg
push
mov
ja
sub
lock
push
xchg
cmpb
dec
rolb
pop
or
cld
shlb
pop
sahf
add
or
push
xorl
shlb
xchg
and
dec
xchg
repnz
iret
out
pop
dec
loope
push
inc
out
inc
jns
adcl
jecxz
adc
xchg
popf
je
push
dec
lds
add
jp
shlb
mov
cmpl
test
sbb
dec
imul
sub
mov
adc
pop
imul
icebp
add
xor
jnp
xchg
mov
and
and
or
sti
test
push
data16
addl
sbb
xor
enter
ss
mov
cmpsb
into
inc
mov
imul
sti
inc
aas
mov
rolb
pop
add
or
aaa
xor
arpl
dec
lcall
addr16
add
movsb
hlt
adc
push
adc
mov
leave
out
or
inc
int
push
mov
jne
cmpsl
jl
xor
into
in
int
cmp
lret
daa
in
pop
xor
outsl
ds
sbb
dec
xor
sub
xorl
insb
mov
or
lahf
loope
sbb
es
pop
movsb
xor
xor
xchg
push
xor
mov
in
xor
xchg
or
xor
or
or
inc
push
pop
out
pop
push
cmp
inc
mov
hlt
fstps
push
ss
lds
sub
sbb
ret
mov
push
cwtl
pop
inc
xchg
cmpb
out
sbb
insl
and
xchg
scas
cmp
mov
jno
ror
aaa
loope
cmpsb
or
orl
sbb
shrl
test
loope
loopne
mov
negb
insl
inc
jnp
test
add
xor
cmp
inc
cmc
les
enter
push
enter
push
out
daa
je
jle
mov
xchg
divl
pop
pop
mov
jge
lds
addb
daa
pop
pop
lds
int3
mov
sub
and
test
sbb
mov
loop
xor
cli
jmp
iret
push
pop
stc
mov
and
push
pop
add
or
fs
dec
pop
fmuls
mov
stos
or
sub
jb
push
bound
cmc
gs
fisubrs
sahf
pushf
xor
inc
add
cmp
shll
mov
or
pusha
movsl
push
push
mov
test
push
mov
pop
loopne
je
das
mov
aaa
out
scas
jb
jb
gs
push
xchg
adc
add
rcrb
icebp
loopne
les
sub
arpl
int
pop
fsubp
cmp
insb
dec
push
sbb
in
pop
aaa
notl
sahf
mov
lods
mov
dec
orb
jbe
sbb
mov
sub
mov
test
shrb
inc
sarb
negb
int3
sbb
mov
cmp
jmp
call
sbb
mov
push
jp
aad
shlb
pusha
push
clc
dec
push
jns
push
xchg
call
cmpsl
daa
inc
add
cmpsl
mov
int3
pop
lods
sbb
mov
adc
or
dec
ret
cmpsb
int3
arpl
gs
idiv
adcb
call
stos
shr
jne
inc
add
jne
inc
popa
dec
pushf
mov
lods
jp
xor
sti
and
xchg
push
faddl
cmp
jo
cmpsl
jle
sbb
add
mov
loope
jae
aaa
in
popf
inc
iret
or
sahf
xor
out
mov
insl
push
inc
pop
pop
mov
and
add
jmp
out
sbb
mov
mov
push
and
fdivl
pop
subl
insb
sub
iret
negb
cmp
xchg
ret
jne
insl
push
xchg
cltd
cmpsl
adc
sarl
inc
je
fs
mov
push
mov
mov
outsl
mov
pop
add
cmc
sbbb
inc
push
out
push
adc
xchg
and
mov
je
dec
rcll
pop
jmp
push
sbb
popl
add
addl
cmpsb
pop
mov
pop
jg
mov
jb
loope
subb
lock
clc
lock
jle
mov
jecxz
cmp
and
cltd
sbb
jne
in
pop
orl
data16
add
clc
adc
jne
pop
test
pmovmskb
movsb
or
xlat
out
xchg
push
jmp
in
pop
sbb
stc
inc
dec
test
iret
sbb
mov
lcall
inc
mov
testl
push
sbb
mov
mov
jl
sbb
lret
inc
and
cmpsl
das
insl
add
into
xor
nop
aad
sbb
testl
jmp
sbb
or
push
inc
cmp
pop
add
fwait
sbb
xchg
mov
test
cmp
and
dec
into
dec
jmp
xor
roll
and
loope
mov
add
mov
or
sub
lcall
xor
leave
add
dec
mov
or
mov
into
pop
mov
mov
inc
xorl
fwait
sub
aaa
sub
jmp
std
dec
cmc
mov
or
clc
mov
mov
jnp
lods
adc
dec
popf
outsb
or
loope
notb
test
imull
and
jl
cmpsb
ja
cmc
rcrl
mov
sub
bound
loope
outsb
push
sbbl
cmc
push
outsb
dec
jbe
out
push
adcl
test
inc
sbb
cmpsb
sbb
xchg
push
es
or
in
lret
pop
hlt
jp
push
mov
inc
js
outsb
inc
cmpsb
dec
aaa
cli
cmp
cld
mov
xor
or
jecxz
aad
dec
jle
jp
mov
jnp
sbb
out
mov
xchg
sbb
dec
add
jp
ret
jns
xchg
arpl
mov
icebp
or
imul
out
cmc
dec
push
filds
mov
mov
push
xor
fldenv
sub
mov
inc
push
xchg
push
aam
mov
addr16
shlb
fs
push
orb
dec
push
loop
mov
mov
loopne
sbb
into
icebp
aaa
stc
fbld
outsb
fwait
mov
push
pop
pop
data16
mov
aaa
pop
test
and
dec
and
divl
jl
mov
subl
inc
pusha
fsub
stos
xchg
mov
mov
ror
inc
rclb
insl
stos
mov
nop
and
sarl
in
lock
fmulp
xlat
pushf
push
and
dec
xorl
cmpsb
ja
cltd
enter
add
fcomps
sbb
dec
test
orb
rol
add
cmpsl
sbb
lcall
pusha
js
scas
popf
insl
cli
fidivl
push
push
pop
mov
jle
out
cmpsb
loop
popa
subl
push
sbb
xor
scas
or
fisubrs
add
cmpsb
imulb
lods
or
sub
mov
add
in
fstl
xorl
xorl
xor
mov
out
inc
pusha
xchg
mov
scas
popf
push
push
repnz
dec
mov
and
in
pop
or
xor
adc
ret
add
xor
or
or
push
sbb
jl
mov
pop
mov
mov
jle
mov
sub
mov
arpl
xchg
rorb
loopne
jbe
aad
jno
dec
adc
pop
cs
pop
repz
fwait
dec
sbb
sub
in
sub
jecxz
sbb
jb
or
mov
cli
and
fs
xchg
popa
dec
fmull
ljmp
jle
add
cmp
out
mov
loopne
dec
insl
aam
or
mov
rolb
das
idiv
popa
les
inc
fwait
lods
test
leave
insl
test
xor
jno
inc
inc
lahf
jmp
aas
and
jb
fadd
js
push
mov
movsl
call
stc
dec
dec
adc
add
imul
add
inc
lret
jecxz
dec
scas
push
lock
xlat
pop
or
adcl
cmp
push
jae
icebp
testb
mov
mov
not
ds
idivb
jmp
mov
add
dec
dec
dec
push
addr16
xor
dec
push
mov
jl
int3
dec
pop
fcmovu
addl
flds
fadds
sbb
sbb
push
pop
xlat
in
or
sub
std
sti
xor
xchg
ret
push
je,pt
ficomps
push
mov
test
je
xchg
push
dec
jns
cmc
int
dec
sbb
fnstenv
dec
sahf
cmpb
adc
add
xchg
or
add
adc
cmc
test
add
aas
inc
or
orl
inc
lea
imul
fidivl
lcall
xchg
xchg
bound
mov
scas
dec
enter
addr16
pop
stc
pop
test
jg
xor
aam
jno
add
xor
testb
push
fsubrp
popa
jle
push
bnd
dec
mov
cltd
adc
cmp
imul
jl
adc
dec
jbe
data16
lds
scas
jne
jmp
scas
imul
cwtl
jae
fstl
in
pop
sbb
mov
sbb
adc
dec
dec
call
xlat
jge
pushf
cmp
addr16
lods
push
push
daa
fmuls
ljmp
mov
sti
sub
icebp
test
add
inc
jmp
and
and
arpl
add
cmp
xchg
dec
and
push
out
xlat
call
sbb
test
rorl
sub
mov
mov
outsb
mov
dec
mov
xor
cwtl
mov
imul
inc
vpunpcklqdq
mov
xchg
ja
test
fmull
sbb
sahf
inc
insb
popf
pushf
cmc
subb
xchg
mov
jge
cmc
test
mov
fsubrl
mov
cmc
add
pushf
out
pop
repz
cmpsl
push
lret
addr16
cltd
push
in
jecxz
dec
xor
cs
in
decl
xlat
int3
xchg
jbe
andl
mov
ror
es
add
mov
shrb
or
dec
pop
hlt
mov
pop
int3
int3
push
fistpll
push
pop
sahf
call
movsb
sbb
mov
mov
xchg
or
cmpb
daa
cwtl
lret
sub
pop
or
fiaddl
inc
jo
aad
sbb
add
mov
in
je
xchg
push
xchg
sbb
mov
ret
es
sarl
pushf
stos
pusha
xchg
gs
rclb
jmp
adc
rclb
push
mov
aad
out
das
or
pop
add
out
or
pop
dec
pop
sbb
mov
mov
pop
dec
and
cs
xor
adc
push
cs
push
ja
jecxz
lds
sub
lret
push
add
fiaddl
sub
ret
jg
mov
sarb
or
ss
fcomps
push
lcall
pop
shll
repz
jno
fimuls
dec
sbb
cltd
mov
push
ret
int3
rclb
mov
in
mov
jne
cwtl
sbb
push
push
inc
in
icebp
xlat
notb
adc
lret
mov
mov
sahf
add
adc
pop
and
add
mov
inc
and
inc
cmp
into
xchg
and
sar
lock
push
cs
fdivl
mov
push
lret
icebp
mov
lock
mov
dec
or
mov
inc
push
mov
push
jno
or
icebp
icebp
lea
add
push
popf
or
int3
pusha
int3
scas
add
mov
dec
enter
loop
mov
sub
add
sti
lcall
enter
test
mov
jmp
jmp
push
mov
xor
adc
dec
popa
ret
dec
mov
dec
dec
xor
enter
cmp
scas
pop
ss
adc
sub
incl
idiv
icebp
pusha
hlt
inc
push
push
test
cwtl
sbb
ds
and
mov
scas
mov
dec
push
adc
lcall
mov
sbb
push
adcb
jno
clc
cmp
lahf
hlt
lret
cmp
test
movsl
inc
mov
dec
jbe
leave
mov
lahf
push
mov
pop
push
sbb
xchg
fs
jbe
ficoml
punpckhwd
jl
ljmp
stc
sbb
cmp
outsb
loope
lret
scas
fwait
negl
dec
mov
in
add
jno
or
push
add
stos
roll
sbb
gs
inc
or
mov
jno
std
add
adc
mov
dec
loop
and
add
and
insl
jns
push
lahf
mov
add
and
ds
mov
and
inc
stc
mov
int3
jle
xor
into
sub
lds
out
xchg
decl
mov
shrl
jne
cmp
sub
sbb
inc
xchg
jnp
popf
sbb
cmpl
iret
inc
popa
rol
pop
lret
sbb
cmp
jno
pusha
jmp
jno
sub
fsubrp
xor
stc
push
add
jo
lret
sahf
jae
add
mov
fs
je
push
sub
out
rorl
in
dec
cltd
jae
addr16
in
mov
push
inc
fistl
imul
push
loop
jge
jno
cs
pop
push
out
sbb
aas
push
shll
data16
popl
sbb
dec
and
loopne
pop
lcall
dec
inc
push
inc
mov
adc
mov
mov
mov
mov
mov
cmp
sub
cwtl
xchg
mov
mov
shlb
or
cmp
add
sub
adc
stc
sbb
and
mov
xor
dec
jno
dec
add
xor
and
push
sbb
es
mov
or
mov
sqrtps
sub
cmp
mov
adc
push
push
or
ja
xchg
jno
and
jge
stos
push
fcmove
and
insl
adc
xor
cvtpi2ps
pushf
pop
sbb
mov
push
mov
ret
add
in
ljmp
or
inc
inc
add
call
mov
clc
sub
add
push
add
arpl
dec
jb
leave
or
enter
cmpsb
mov
xor
mov
or
sbb
or
shrl
fucomi
pop
sbbb
leave
mov
mov
stos
or
fsubrl
mov
popf
jnp
add
sahf
push
or
xchg
int3
mov
aad
pop
cmp
push
lret
out
sbb
pushf
lcall
inc
or
jo
sti
adc
into
xor
in
xchg
loope
mov
fs
sbb
fbld
mov
push
mov
inc
jmp
fadds
cmc
jb
mov
inc
sbb
nop
sub
or
or
loope
popa
aam
jnp
adc
xchg
add
sbb
ja
push
addl
xlat
fldt
popf
repz
and
xor
inc
mov
pushf
sub
adc
inc
mov
mov
jmp
arpl
imul
cwtl
add
out
lret
ds
in
into
jns
sarb
stos
sub
mov
ljmp
les
sub
sbb
lahf
das
xchg
pop
or
cmc
loopne
ds
xchg
and
or
inc
test
add
and
fistl
inc
dec
ja
mov
dec
fisttps
andb
loop
das
push
subl
xchg
cmpsb
jmp
mov
stc
mov
ret
data16
fmull
mov
popa
jp
sti
test
jecxz
popf
in
add
adc
push
ds
add
sbb
fwait
add
hlt
cltd
hlt
mov
mov
sbb
test
lcall
push
imul
ss
fdivrs
mov
cmpsb
push
push
cltd
mov
ss
or
daa
sub
cmp
insb
xor
push
test
pop
jecxz
xchg
dec
xor
cmp
mov
cwtl
xchg
add
mov
sub
mov
daa
inc
push
mov
push
xchg
scas
pop
mov
imul
and
push
notb
push
cmp
mov
add
mov
xorb
mov
xchg
or
add
xchg
push
sbb
pop
stc
xchg
sbb
lock
imulb
pop
imul
out
cmp
ret
mov
sbb
in
lret
jge
sti
push
mov
sbb
nop
mov
cmp
xchg
orl
inc
mov
add
rcrl
and
or
aaa
icebp
addl
and
pop
fs
test
cmc
test
in
xor
clc
mov
xchg
cmpsb
movb
jge
test
mov
xor
out
push
xor
mov
shrl
out
test
lock
jge
hlt
sbb
lcall
push
dec
inc
push
pop
push
xor
push
stos
adc
into
push
cld
inc
in
jbe
aaa
mov
idivb
dec
ret
pop
mov
rol
nop
test
mov
add
cli
cmp
gs
or
rcr
push
popa
dec
cmp
sbb
mov
xor
cltd
test
addr16
cmc
xchg
es
add
in
fistpll
cld
xor
push
cmpsl
stc
aad
inc
in
inc
jmp
push
popa
cli
jnp
cmc
sbb
xorb
mov
inc
inc
add
mov
loopw
fwait
jne
movsl
int3
aam
into
push
or
xchg
dec
push
xor
out
daa
dec
mov
push
insl
push
les
pop
gs
cmp
das
sub
sub
loope
repnz
sub
jecxz
add
sub
jg
adcb
mov
imul
ret
pop
mov
sub
pop
fstpl
cmc
icebp
push
ja
add
lods
push
bound
stos
lock
jecxz
loop
addl
lock
jge
dec
xchg
incb
jl
fsubrs
in
pop
jle
add
cld
fld
cmc
pusha
int3
roll
inc
mov
pop
mov
ljmp
xorl
pop
or
out
sti
subb
cld
adc
xor
ja
fs
sub
pop
mov
inc
bound
daa
idivl
push
dec
into
inc
mov
lds
sahf
and
sbb
int3
mov
mov
cmp
movsb
lahf
bound
jno
xor
sahf
sahf
add
jne
or
or
subb
mov
sahf
shll
xchg
sub
stos
mov
pop
dec
clc
mov
fsub
sbb
ret
in
mov
pop
mov
test
fistl
push
cmp
lret
clc
or
lods
pop
pop
mov
out
out
pop
icebp
or
pop
cmpsl
test
cmpsb
lret
jcxz
in
movsb
push
inc
cmpsl
jp
dec
arpl
ret
test
mov
loope
inc
mov
and
inc
popa
xlat
jp
push
push
inc
mov
xchg
mov
adc
jae
aas
xchg
xchg
orb
subb
int3
lock
dec
dec
mov
andl
out
sarl
inc
lds
ret
sbbl
sbb
cmpsb
inc
xchg
push
adcb
mov
jp
shl
inc
sbb
or
jmp
inc
test
xor
pop
pop
dec
popa
pushf
loopne
fmull
sbb
aad
loop
pop
xor
inc
into
in
cmp
push
jne
addl
mov
xchg
or
push
int3
sub
notb
iret
or
call
cmc
inc
xchg
mov
mov
arpl
xchg
stos
outsl
and
pop
movsl
dec
fcompl
push
pop
sub
fwait
inc
ds
loopne
cmp
popa
mov
xchg
ljmp
ds
pop
pop
xchg
adc
subb
xchg
dec
xchg
xchg
movb
in
test
add
icebp
jo
xchg
and
scas
xchg
adcl
shrb
gs
push
repz
aaa
lock
lahf
inc
or
icebp
les
pop
and
add
loopne
cltd
orb
cs
lret
push
fisubs
sub
mov
cs
int3
pop
mov
push
data16
pop
and
popf
or
lods
iret
or
les
push
rcrl
cmp
sbb
add
leave
repz
push
ljmp
jne
xchg
daa
or
pop
or
pop
pop
hlt
sub
sbb
inc
mov
and
mov
inc
std
cmpb
ret
vmread
jg
jnp
adc
jmp
xor
mov
push
movsl
mov
lahf
dec
addr16
pop
andl
addb
mov
mov
push
ret
cs
in
pop
data16
jbe
jae
dec
lcall
sti
sbb
mov
push
jns
nop
inc
popf
loopne
or
ret
les
sub
cmp
or
dec
test
stos
cmpsb
mov
andl
jmp
test
mov
mov
sbb
daa
fistl
negl
in
sbb
lret
into
add
xchg
fsub
xchg
inc
xchg
inc
mov
idivb
xor
lods
mov
dec
rorb
mov
mov
lods
push
jge
dec
test
xorl
sub
mov
push
loope
sti
fsub
push
inc
or
frstor
push
sub
inc
mov
adc
jnp
xor
add
mov
cmp
addl
movsb
push
push
cmp
and
mov
mov
and
pop
xchg
add
imul
lods
jp
mov
inc
test
add
pop
imul
mov
repz
cmp
xor
scas
add
cmpsb
ret
pop
cmp
cmpsb
mov
pop
jo
mov
lret
out
jg
test
fisttps
sbb
inc
nop
or
daa
pop
jle
lret
jno
xchg
js
mov
xchg
sbb
sub
clc
icebp
push
sti
or
test
and
push
popl
std
subl
ret
jbe
sti
xor
loop
dec
fwait
mov
jl
jne
cmp
fsub
add
and
jecxz
movsl
pop
sbb
into
adc
cli
pop
or
shrb
outsb
arpl
out
xor
pop
jl
pop
adc
xlat
or
add
cmc
sbb
mov
or
repnz
jno
fsubl
pop
pop
out
cltd
mov
mov
lea
test
sub
xchg
xorb
lods
stc
test
mov
addl
lods
out
jecxz
pop
dec
xlat
sbb
pop
scas
mov
outsb
cli
xchg
movsl
mov
mov
or
cmc
sbb
mov
sub
push
add
pop
insl
jnp
xchg
adc
pop
cmp
pop
arpl
subb
sub
cmp
mul
rorl
mov
pop
push
adc
rcl
dec
pop
or
xor
or
push
dec
add
sub
push
popa
inc
adc
mov
mov
xchg
mov
mov
add
jmp
inc
hlt
add
push
sahf
or
sbb
sub
enter
outsl
insb
pop
int
pop
aas
push
sub
leave
movsl
inc
andb
jnp
rorl
pop
pop
test
pop
aaa
xorb
inc
xlat
out
inc
mov
inc
mov
push
mov
lods
lods
push
mov
ss
fisttpl
sahf
pop
mov
outsb
mov
notb
pcmpgtd
jle
push
lahf
lret
dec
lahf
out
adc
daa
mov
mov
xor
loope
sti
adc
adc
mov
adc
mov
loopne
jns
push
sub
arpl
sarl
inc
add
fisttpll
in
ret
aad
jecxz
les
bsf
xchg
and
mov
repnz
push
mov
pop
scas
stc
imul
test
lds
add
divl
xor
jne
cmp
or
push
inc
add
or
pop
clc
cli
dec
mov
mov
aaa
fwait
repnz
push
pop
icebp
cltd
jecxz
push
int
dec
dec
add
or
push
mov
testb
sub
and
loopne
xlat
and
push
popa
pop
icebp
fdiv
subb
xchg
jle
jbe
cltd
add
add
add
mov
or
sub
pop
sbb
fdivl
sbb
pop
rolb
push
mov
je
out
mov
xor
icebp
mov
jp
cmp
mov
popa
add
test
mov
mov
cmp
adc
cwtl
rol
ja
arpl
mov
mov
stos
add
mov
icebp
jne
cwtl
int
daa
dec
xchg
negl
lahf
test
push
or
lock
push
dec
dec
fists
lea
jno
arpl
in
in
and
push
stc
sti
int
mov
gs
ljmp
cmp
jbe
into
add
xchg
pushf
jle
out
lock
xlat
mov
imul
cmp
pusha
mov
std
jo
pushf
mov
or
mov
in
dec
mov
test
cmp
icebp
push
int3
fbstp
sbb
mov
scas
jge
add
std
cld
aaa
sbbl
or
daa
xor
push
fsts
pop
fmull
adc
inc
mov
fildl
mov
xchg
or
mov
addl
push
out
leave
adc
and
mov
dec
fldl
mov
lods
jle
rorl
shlb
and
xchg
jns
sbb
nop
cmp
or
sbb
cmc
inc
aam
push
jle
imul
mov
lods
test
shr
adc
sahf
and
xor
jne
dec
mov
outsb
jmp
xor
cmpsl
into
gs
pop
insl
adc
cmc
pop
push
or
jne
mov
mov
bnd
mov
push
inc
test
cmpsb
ljmp
fidivrs
inc
sbb
jns
push
sub
dec
outsb
inc
adc
pop
inc
mov
xchg
add
xorl
cmc
aad
jmp
inc
out
cmp
dec
mov
out
xchg
mov
dec
cli
imul
stc
inc
sbb
les
cmpsl
mov
jnp
mov
loope
rclb
jmp
lahf
pop
sub
xchg
imul
sahf
jmp
addl
add
incb
cmp
test
add
or
int3
aam
not
lret
xchg
mov
xorb
push
scas
ret
mov
loopne
stos
inc
pushf
imul
push
fwait
insb
pop
add
neg
xchg
pop
jo
dec
cmp
mov
or
mov
xchg
leave
jle
clc
andb
add
popf
leave
mov
inc
icebp
add
and
js
push
inc
loope
test
daa
popa
andl
push
add
inc
sbb
test
test
andl
ret
pop
cs
fildll
xchg
sub
cli
call
or
stos
out
xchg
jb
cmc
js
mov
jbe
into
xchg
mov
pop
dec
scas
lods
or
les
mov
mov
test
icebp
mov
call
push
xor
mov
adc
stc
lahf
stos
pop
xchg
out
sbb
nop
insl
out
test
es
das
xor
adc
add
jae
aaa
out
gs
sti
pop
sbb
sbb
cld
popa
lods
cltd
mov
ds
fisubrs
xlat
mov
lods
fisttpl
movsl
aam
sbb
mov
pop
adc
loop
jle
andl
iret
lock
shrl
mov
mov
push
dec
push
lahf
test
xor
daa
inc
pop
rclb
push
test
cltd
mov
pop
add
sbb
roll
mov
dec
stos
jg
popa
aaa
xchg
add
jecxz
jae
mov
mov
aaa
sbb
mov
scas
sahf
cmpsb
push
push
mov
sbb
sbb
jne
sub
mov
nop
or
repz
inc
and
mov
mov
popa
push
inc
sbb
jp
sbb
or
daa
xchg
pop
sbb
push
add
popa
mov
fcomps
dec
mov
adc
insl
push
xor
add
fmull
mov
aaa
addl
std
bound
popf
pop
adc
add
out
bound
xchg
or
icebp
gs
mov
mov
insb
imul
imull
inc
or
or
lds
cmp
cld
mov
movsb
pop
in
adcb
aad
xor
jns
mov
jg
in
jae
sbb
int3
scas
inc
fdivr
or
xor
jne
sbb
clc
pop
imul
lods
adc
push
test
mov
bound
mov
mov
popf
out
stc
sbb
rcrb
iret
jno
push
insl
jnp
push
repz
adc
test
popa
dec
jne
mov
dec
jge,pn
cmpsb
daa
xchg
icebp
or
jbe
pop
das
or
push
xor
pop
and
sti
flds
loop
mov
mov
paddusw
sbb
inc
mov
cmp
pusha
mov
mov
pop
xor
leave
rcrb
sbb
or
cli
mov
int
push
cmp
mov
mov
xchg
lock
in
test
inc
add
aad
mov
mov
in
stos
cmpsb
xchg
adc
popf
xor
xorb
add
repz
aas
mov
mov
jmp
mov
add
js
and
daa
or
in
jge
lcall
xor
sub
xchg
movsb
idivb
add
xor
fsubrl
subl
sbb
adc
icebp
rcr
leave
leave
orb
pop
dec
fmuls
in
inc
mov
pop
mov
test
sbb
or
jg
test
mov
xchg
push
or
sbb
xor
int
loope
fxch
faddl
ja
rcl
sbb
cwtl
inc
dec
cmp
inc
cmc
add
add
mov
lret
add
adc
mov
bswap
es
adc
or
icebp
inc
pop
fimull
out
push
sbb
movsl
testl
add
push
pop
test
popa
aaa
leave
addb
imul
jno
test
push
cmp
push
loopne
sahf
push
aam
sub
mov
inc
subb
aaa
sub
adc
and
aam
scas
addr16
jb
int
repz
push
mov
and
nop
hlt
ljmp
adc
mov
sub
mov
mov
in
das
insb
sub
xchg
pushf
daa
dec
xchg
ret
mov
push
out
js
inc
lcall
push
mov
div
add
xor
lret
xor
subl
push
lret
subb
mov
sbb
lret
inc
pop
mov
or
scas
and
inc
or
sbb
push
push
gs
movsb
mov
sbb
cmpsl
jno
ja
sbb
dec
jge
and
fiadds
cld
sahf
or
lock
push
aaa
js
outsb
sbb
dec
pop
xchg
test
and
lret
and
stos
aaa
fwait
aaa
add
or
hlt
std
int3
scas
loope
jae
cld
xchg
pop
ficoms
and
mov
out
add
cmp
jne
dec
orl
or
sbb
push
insb
daa
pop
sbb
into
dec
inc
outsb
mov
push
into
add
mov
jbe
push
mov
fmuls
insl
icebp
lds
dec
cwtl
sub
sbb
out
icebp
sbb
mov
nop
add
pop
repz
inc
mov
shl
xor
jg
adcb
xchg
pop
xor
into
xor
mov
fistpll
pushf
test
add
and
pop
adc
stos
int3
pusha
fcomps
mov
shl
ret
push
or
sbb
xorb
xor
pop
xor
mov
movsb
pop
cmp
jns
mov
sbb
lret
icebp
sub
add
sbb
outsl
adc
adc
inc
jl
leave
add
lret
sahf
aaa
cltd
add
icebp
xor
push
inc
or
sarl
lcall
movsl
clc
sbb
rolb
test
mov
call
jne
cli
pushf
pop
jno
jne
sbb
loope
or
rclb
int3
pop
orb
lock
xchg
imul
push
jnp
mov
dec
dec
lret
xor
mov
xchg
jne
pusha
cmp
cwtl
or
cmc
outsl
or
fiadds
es
xchg
push
jmp
xchg
jae
rclb
out
inc
sbb
mov
ror
sub
scas
out
nop
sub
in
cmp
cmp
cmp
fimuls
pop
loopne
sbb
stos
cmp
insl
dec
cmpsl
dec
push
inc
test
inc
adc
inc
jmp
jno
out
mov
into
shlb
mov
dec
add
fcoms
fsubrl
pop
mov
add
jns
jne
enter
mov
xor
sahf
inc
int
fmul
mov
cmc
or
fdivp
outsb
orb
mov
xor
xchg
or
ljmp
leave
fcompl
sub
arpl
bound
push
mov
push
lcall
adc
pop
add
sbb
xchg
dec
add
ds
and
inc
pop
cmc
cmp
fmuls
sbb
sbb
out
repnz
jmp
xchg
test
hlt
sbb
in
and
in
test
push
mov
push
js
cmp
add
pop
lret
in
inc
dec
testl
sub
std
xchg
jg
push
aas
out
or
enter
add
xchg
arpl
out
dec
dec
pop
xchg
js
loop
and
and
mov
pop
or
out
pushf
add
sub
push
push
add
leave
cmp
ret
dec
sbb
lahf
mov
fwait
mov
pop
sahf
push
push
scas
scas
push
pop
xor
ret
lret
mov
and
add
sub
cli
data16
idivb
jmp
ret
or
add
cmp
repz
rcrl
imul
xor
jns
pop
push
sbb
pop
pop
dec
lcall
cmpsb
data16
mov
out
shr
idivb
inc
stos
and
ja
subl
sbb
push
xor
pop
and
fwait
cmp
sub
pop
push
cmpsb
clc
lret
and
jae
add
push
sub
pop
fdivrs
sbb
sub
jp
mov
mov
add
mov
into
sbb
dec
sti
std
lds
sbb
add
in
insb
shrl
sbb
jns
aaa
jl
push
push
inc
in
push
sbb
xor
sahf
or
cmp
sbb
adc
adc
aaa
test
ljmp
mov
sbb
sbb
lea
outsl
pop
pushf
jecxz
out
jno
into
cmp
mov
push
sub
xchg
test
sbb
push
addb
test
gs
push
imul
sti
lea
scas
mov
or
push
js
insb
pop
inc
bound
jae
ret
mov
out
push
inc
cli
xchg
rcrl
or
mov
adc
mov
std
dec
dec
sahf
lock
insl
dec
in
pop
pushf
push
add
add
sub
cmc
out
sub
stos
sub
push
dec
testb
shrb
sbb
adcb
arpl
mov
mov
ja
push
push
imul
lea
dec
xor
cli
sbb
cmc
sbb
pop
das
movsb
cmp
outsl
lret
mov
or
out
int3
cmp
mov
sub
cmpsl
jp
add
cmp
xor
out
xchg
add
sub
les
push
bound
daa
popa
mov
out
inc
mov
push
push
insl
scas
jecxz
dec
idivl
lret
jmp
push
mov
lret
sub
pushf
fidivrl
xchg
out
lods
mov
jno
cmp
aaa
fwait
xchg
out
push
sub
int
jge
push
sbb
fbstp
outsb
xor
sbb
dec
stos
in
sbb
add
enter
mov
cmc
stos
jns
mov
or
sbb
mov
clc
adc
adc
pusha
jmp
inc
add
mov
mov
bound
jp
ret
sbb
sub
or
xchg
xor
test
mov
adc
js
xor
cmp
inc
mov
lods
pop
mov
jge
mov
dec
adc
pop
rorb
stc
mov
mov
out
or
xor
lock
or
mov
mov
cmpsb
repnz
inc
sbb
int3
addl
sub
sbb
popf
loope
push
mov
insl
cli
lcall
jmp
aas
jno
dec
shrl
inc
rcll
pop
lds
sti
clc
jno
push
inc
inc
insb
sbb
inc
sbb
popa
mov
rol
mov
sub
fdivl
inc
pop
in
add
xor
cwtl
out
cmp
outsb
gs
add
push
pusha
sub
or
andl
add
add
push
xlat
jl
add
in
mov
pop
cmp
nop
xor
sub
cmp
mov
fstpt
dec
add
enter
push
cmpsb
push
add
inc
sbb
movhps
popa
adc
scas
push
dec
inc
or
movsb
cmpsb
jmp
xlat
dec
inc
aaa
aad
out
cmc
cmp
insl
xchg
test
push
lock
repz
sub
push
adcl
test
adc
subb
pop
or
mov
xorb
jo
or
add
mov
add
sbb
mov
add
inc
or
or
out
dec
sbb
xor
mov
push
mov
push
jge
lret
addb
insl
mov
cwtl
and
sub
lds
add
inc
test
jg
jb
or
popa
loop
xchg
pop
packssdw
mov
not
test
jge
movntq
aaa
jmp
fimull
push
push
push
xor
in
orl
out
inc
ret
mov
stc
inc
or
andb
push
pop
dec
lret
push
xor
xchg
or
adc
cltd
dec
outsl
lods
push
fimuls
dec
enter
stos
shll
push
arpl
scas
sar
push
outsb
or
jne
dec
lcall
add
out
sbb
rcrb
or
inc
cmc
pop
and
subl
mov
push
movsl
cs
pushw
mov
inc
jl
shlb
jae
stc
inc
pop
arpl
jbe
add
movsb
mov
push
push
sub
jp
mov
sub
or
jae
adc
xor
das
jp
mov
push
add
push
lods
mov
xchg
stc
sbb
stc
mov
add
mov
or
xor
arpl
adc
stos
shlb
clc
popf
dec
gs
fnstenv
xlat
xor
dec
adc
xor
inc
xchg
push
ret
push
pop
out
xchg
testb
jno
out
xchg
mov
movsb
fs
roll
mov
push
jle
or
faddl
sub
daa
inc
dec
insb
adcb
add
and
push
xlat
sbb
cltd
sbb
sub
inc
mov
movsl
lock
cmpsb
test
and
mov
pop
loopne
xor
jmp
dec
mov
dec
adc
mov
mov
xchg
xlat
das
sub
xor
xor
jl
and
push
xchg
jge
pop
in
cs
fucom
lret
mov
outsl
test
popf
fiaddl
das
outsb
orl
cmc
pusha
popa
sbb
dec
out
pop
std
xor
cld
test
mov
and
push
fwait
jnp
pushf
sub
in
mov
push
pop
mov
push
mov
or
call
sbbb
inc
push
dec
push
aaa
ficoml
push
idiv
daa
out
shr
test
vmptrst
mov
add
sbbl
xor
mov
negl
sub
jbe
fstpl
pand
sbb
orl
pop
push
dec
dec
xchg
int3
das
lock
shlb
shlb
cmp
pop
loopne
lret
and
ljmp
cwtl
sub
pop
mov
jnp
inc
add
ss
dec
inc
rcrl
js
xorl
ljmp
xor
cltd
add
mov
jmp
rolb
dec
pop
aaa
in
mov
mov
cmc
shl
into
addl
shrl
or
sbb
add
daa
lahf
sar
movsb
int
dec
into
push
lret
mov
add
cmp
int3
cmpsb
dec
cmp
xor
enter
push
into
add
jle
sbb
not
ja
inc
or
sub
enter
add
adc
and
outsb
dec
inc
outsb
push
fs
negb
into
jl
jne
rol
jle
push
or
out
mov
js
dec
jne
pushf
pop
pop
dec
daa
or
adc
lea
out
xorb
adc
xor
dec
test
int3
inc
adc
inc
sbb
xchg
mov
test
dec
inc
dec
scas
sbb
loope
stos
flds
clc
or
jmp
les
inc
mov
sbb
inc
and
xor
into
fwait
xchg
insb
sbb
mov
xchg
aam
outsb
loop
arpl
add
bound
pop
sbb
push
sahf
push
test
lods
adc
arpl
subb
cld
lods
jno
and
loop
adc
jb
sbb
jbe
sub
dec
dec
mov
lock
unpckhps
sub
dec
dec
cli
in
cmp
lcall
cmpsb
pop
or
dec
icebp
fld
add
popf
push
gs
mov
andb
out
pushf
filds
and
out
mov
es
das
in
imul
mov
jae
aam
inc
dec
jbe
add
paddsw
dec
pop
testl
push
call
test
xlat
push
pop
or
sbb
add
cld
or
sub
mov
add
mov
pop
adc
push
ret
popa
xchg
fcoms
xchg
inc
arpl
and
test
data16
xchg
push
push
push
mov
stos
icebp
adc
dec
cwtl
fildl
xor
xlat
xchg
xchg
andl
scas
push
lret
or
notb
aad
shll
jne
push
or
adc
cmp
gs
imulb
inc
ja
dec
pop
mov
xor
inc
shll
mov
xor
fldt
fwait
outsl
jp
inc
pop
jecxz
out
inc
jne
imul
in
mov
lds
cmc
lahf
mov
push
push
pop
mov
fdivs
pop
into
add
daa
aas
es
or
pop
mov
fs
ret
scas
sbb
jg
pop
jno
xchg
dec
in
adc
das
aas
aam
inc
dec
lds
adc
int3
mov
call
push
mov
mov
dec
in
push
inc
push
pop
pop
sbb
adc
cmp
push
and
leave
mov
sub
mov
and
push
jae
rol
enter
mov
mov
mov
jge
jg
xlat
pop
or
add
inc
cmpsl
fisubrl
jno
and
fistl
fdivs
inc
scas
leave
or
mov
rcr
adc
mov
mov
repz
faddl
mov
and
lds
xor
push
test
scas
or
fwait
sbb
mov
cmp
lock
sbb
mov
sub
xor
mov
mov
and
int
sub
dec
push
inc
lret
add
cmpsb
rcrb
add
push
mov
and
push
les
dec
leave
push
inc
or
mov
sbb
negl
jl
xchg
cmpsb
add
mov
sbb
pop
and
push
fstps
jecxz
ret
mov
out
mov
inc
fadd
popa
hlt
fwait
mov
dec
pop
mov
sarb
push
sti
xchg
in
sbb
int3
mov
jmp
insb
fcoms
mov
pop
pop
or
dec
repz
xchg
aaa
sbb
dec
sahf
add
mov
and
sbb
pop
stos
cmpsl
in
enter
sti
fnsave
and
mov
shl
in
mov
or
test
pop
fisttps
sub
fdivrl
xchg
mov
mov
sbbb
push
xlat
lahf
scas
inc
cld
xor
sbb
clc
sbb
pop
shlb
lock
addb
iret
scas
mov
jle
sub
sbb
add
and
incb
popa
jo
add
daa
fsubrp
mov
and
popf
inc
sbbl
rcll
cmovg
loope
ficompl
pop
sub
xchg
or
pop
daa
pop
fdivl
fidivs
mov
jecxz
cld
arpl
loope
addr16
popf
sbb
mov
pop
cmp
xchg
xor
enter
call
jg
xchg
mov
and
sub
ret
pop
into
cmp
pop
ja
adc
aam
stc
or
into
jge
out
mov
ret
jo
xchg
lds
dec
gs
or
or
sbb
mov
pop
dec
sbb
or
adc
push
adcb
test
test
sub
movb
leave
xchg
jl
cmp
test
sub
add
jle
add
imul
lcall
sbb
push
or
mov
shrl
sti
push
dec
icebp
cltd
add
push
inc
dec
pop
dec
dec
sahf
movsb
push
mov
mov
push
out
adc
rcrb
repnz
push
out
mov
sbb
mov
ds
inc
movsl
data16
daa
into
adc
fisubs
cmc
stos
cmpl
jae
sub
add
cwtl
or
xchg
repz
pop
mov
mov
and
add
leave
rcl
dec
xchg
dec
push
jbe
jl
fistpll
rcrb
out
or
mov
mov
daa
sbbl
fcompl
fxch
adc
mov
dec
jp
stos
test
xor
jae
pop
mov
pop
les
pop
cltd
sub
adc
ret
sbb
push
pushf
mov
cmpb
ds
xchg
mov
popa
sub
push
imul
es
mov
or
mov
add
push
stc
push
pop
or
scas
sbb
out
xchg
adc
insb
mov
aas
pop
test
in
mov
inc
ret
mov
orl
mov
pop
mov
inc
pop
cmp
iret
data16
ficompl
test
rol
mov
stos
sub
add
inc
jl
leave
mov
das
or
jg
xor
push
leave
std
jb
cld
loop
rcl
dec
jne
mulb
inc
mov
lods
mov
mov
push
fcomps
test
push
inc
push
and
add
or
push
inc
jge
fcompl
loopne
adc
in
push
cmc
pop
mov
xchg
add
inc
sarl
push
inc
pop
fistps
ror
lock
mov
sbb
mov
mov
fcoms
sbb
popa
out
jns
push
mov
lcall
inc
cmp
or
inc
ret
loopne
mov
pop
mov
cmpsl
rcl
pop
pop
test
jb
pop
xchg
push
or
cmp
subb
sbb
fists
mov
ja
adc
mov
popf
push
inc
jae
push
cmp
stos
xchg
push
or
add
xchg
xchg
loope
aam
or
ljmp
push
icebp
jno
out
ljmp
repz
loope
xor
push
lods
or
leave
mov
setns
push
dec
push
sbb
psubq
or
jl
fidivrl
jno
ljmp
mov
and
ja
mov
pop
push
stos
dec
cmp
push
jl
jecxz
push
inc
lods
or
stc
and
loope
or
mov
test
mov
inc
stc
std
add
loope,pn
stos
push
dec
sahf
pop
mov
jmp
sbb
mov
push
mov
push
dec
dec
repz
sbb
loopne
adc
adc
push
push
lahf
sub
fisttps
cltd
mov
jns
fstpl
cmc
sbb
sti
sahf
add
jle
sub
jecxz
adc
test
sbb
and
cli
xor
push
call
push
xor
add
jge
stos
addr16
cmp
in
dec
aam
sbb
inc
imul
in
and
loope
lahf
inc
sub
dec
pop
inc
sub
mov
xchg
cmpsb
insb
stos
pusha
mov
std
mov
fsubrs
and
mov
fstpt
pop
push
adc
out
mov
xchg
sub
mov
test
out
pop
sub
add
rorl
cmc
pop
lret
and
mov
cmp
out
or
inc
or
or
lods
mov
mov
sbb
jge
ja
cli
xchg
mov
jmp
pop
mov
adc
pop
push
xor
mov
bound
sub
add
mov
or
sub
sub
test
insl
push
ret
mov
fdivl
inc
dec
push
mov
ja
addr16
jnp
sahf
add
fcoms
popf
loope
push
xor
stos
stc
pop
pop
xchg
loop
and
stos
pop
cltd
fdiv
xor
or
and
loope
add
sub
fildll
sub
mov
jo
add
pop
push
adc
sarb
inc
mov
and
add
xchg
inc
test
ljmp
inc
dec
dec
dec
pop
jecxz
jnp
push
fs
jae
xchg
push
insb
pop
shlb
add
fdivrl
shrl
pop
sahf
jno
fildl
in
add
popa
mov
mov
les
out
cmp
inc
lea
fwait
mov
push
jg,pt
imul
and
negl
lea
rorb
xchg
add
dec
inc
push
mov
push
das
mov
ljmp
movb
jns
out
pop
mov
mulb
inc
xlat
dec
and
add
mov
sub
xchg
pushf
mov
das
cli
loope
push
in
mov
mov
or
sbb
push
cmpsl
xor
sbb
or
xchg
int3
mov
dec
scas
inc
xchg
xor
or
inc
jle
in
mov
enter
ret
gs
sti
ret
lds
xchg
mov
je
add
lds
ficompl
push
imul
or
jge
or
ljmp
mov
jmp
in
inc
pop
cmp
orb
sbb
and
dec
xchg
jae
or
ss
xchg
push
inc
mov
inc
inc
orl
mov
js
test
mov
mov
testl
inc
test
push
rcrl
aaa
pop
jg
sub
fistpll
int3
cld
divl
adc
arpl
inc
sub
push
mov
jmp
push
cmc
or
int
mov
add
inc
insl
inc
fstps
push
dec
jo
stos
jnp
les
jl
ret
xorl
adc
jb
stc
pop
mov
mov
movsl
imul
mov
inc
add
inc
fadds
or
xor
mov
push
add
and
push
lds
mov
notl
out
dec
push
test
int3
cmp
sbb
push
sub
lods
pop
in
cwtl
es
pop
out
adc
push
jmp
pop
pop
ds
push
mov
add
pusha
test
pop
or
movsl
or
pop
push
lods
rolb
popa
lcall
aaa
fdivp
mov
jns
sub
sbb
lret
mov
dec
stos
sbb
jmp
mov
enter
lods
add
jl
aaa
or
scas
js
in
add
jne
ljmp
xchg
call
cmp
ficoml
mull
movsb
jp
adc
push
xchg
mov
shlb
mov
out
or
mov
or
jp
mov
cmpsl
sub
or
and
push
cli
adcl
sub
ret
dec
pop
adc
sbb
cmp
add
inc
sti
dec
cmpsb
sub
and
and
fwait
cmpsl
mov
jno
lahf
dec
jno
insb
addl
inc
mov
or
bound
in
lcall
daa
or
push
add
stc
add
add
push
es
insb
popf
in
in
sbb
sahf
mov
mov
pop
xor
popf
or
jle
push
in
or
mov
inc
cmc
or
mov
mov
out
fiaddl
mov
jne
mov
jno
mov
out
mov
xchg
dec
bnd
hlt
insb
int3
gs
dec
sbb
xchg
sbbl
pusha
out
es
and
rcrl
cltd
mov
mov
sub
cmp
call
push
cmc
jno
adc
stos
push
or
cwtl
pop
dec
rclb
cltd
lock
data16
jl
pop
cs
inc
outsb
addb
adc
xchg
mov
fwait
xchg
push
lcall
mov
xorb
shl
xlat
adc
or
sbb
xchg
pop
mov
inc
push
sub
out
dec
and
cmc
je
addr16
or
pop
stc
inc
popf
dec
out
mov
adc
and
xorl
cmp
mov
rcrl
inc
push
mov
sub
push
mov
icebp
jmp
dec
push
or
inc
ljmp
xchg
mov
and
push
mov
loope
xor
leave
popf
dec
sub
dec
movsb
nop
adc
mov
mov
jnp
scas
dec
inc
arpl
clc
sub
out
out
or
sahf
pop
jg
imul
das
sbb
stos
jne
or
sahf
sub
mov
daa
sub
dec
sbb
orb
mov
stos
and
mov
sub
inc
int3
xchg
or
push
ror
push
xor
scas
fbstp
test
add
test
inc
pop
adc
out
movsl
insl
add
hlt
gs
pop
in
icebp
out
les
adcl
fcoms
icebp
inc
push
xor
jae
sbb
sbb
fldl2t
sti
roll
out
jno
mov
mov
sbb
ror
or
dec
inc
daa
or
aad
mov
shrl
sbb
xchg
andl
int3
jl
cmp
jmp
sub
pop
jno
mov
mov
lahf
out
jno
sbb
cmp
jns
pushf
inc
xchg
lods
inc
mov
ja
dec
rcrb
movsb
sbb
negl
lcall
mov
push
mov
mov
inc
lahf
add
sub
into
xchg
pop
bound
push
and
leave
cmp
shll
lret
adc
or
lods
adc
mov
xchg
outsl
ret
sbb
cmp
imul
adc
push
add
cmp
or
insb
or
ror
fsubs
sub
int
push
in
sbb
dec
pop
icebp
and
dec
popf
je
cmp
mov
notl
add
sub
sbb
aam
xchg
dec
or
ljmp
adc
adc
mov
test
xchg
mov
scas
enter
inc
push
sbb
xchg
int3
cmc
push
cwtl
pop
shr
or
or
cs
xchg
insb
call
or
lea
lds
dec
fsubrl
pop
sbb
xchg
insl
or
sub
add
and
cmc
lock
ret
fmul
leave
fwait
push
push
mov
xchg
adc
daa
jecxz
xor
scas
data16
cmp
test
push
daa
sub
push
lock
adc
dec
inc
dec
mov
and
cmpsb
leave
fnstenv
jge
cmp
call
sub
add
fsubs
mov
xor
push
fstps
out
inc
jge
inc
mov
and
outsl
push
sbb
jmp
adc
add
mov
xor
dec
push
rcll
sti
xchg
or
es
xlat
inc
decb
dec
mov
dec
jne
add
pop
dec
gs
sahf
std
out
push
adc
into
mov
dec
pop
les
or
sbb
add
mov
pop
out
pushl
mov
subl
cmp
xchg
popa
xchg
dec
outsl
jne
pop
mov
xor
pop
dec
arpl
add
fcompl
mov
mov
xchg
cmpsl
or
mov
xchg
push
push
add
mov
add
or
cmp
pop
cmc
stos
dec
out
pop
pop
xor
gs
xor
mov
sub
fwait
sti
loopne
ficompl
push
loop
xchg
in
pop
pop
scas
cltd
test
push
dec
sti
xor
out
jb
push
and
mov
mov
xchg
cmpsb
lods
sarb
mov
pop
test
mov
mov
or
push
insl
shr
and
enter
xor
js
xchg
push
sbb
jge
ja
add
lret
or
push
jle
inc
ja
iret
repnz
sub
js
fs
mov
adcb
pusha
repz
add
mov
aaa
or
test
out
and
push
jmp
and
lds
adc
and
cmc
roll
sbb
lcall
test
std
inc
sarl
mov
loope
leave
jno
lds
sbb
pusha
ljmp
adc
xchg
mov
scas
and
add
pop
inc
and
gs
daa
out
or
adc
jle
pop
aas
mov
mov
cmpsl
or
popa
xsha256
cmpsb
xchg
lcall
sbb
loop
adc
pop
fisttps
ret
inc
xchg
push
xlat
std
cld
in
cmc
cmpsl
xchg
sbbl
jmp
sbb
xor
xor
fdivl
lea
cli
mov
add
call
test
fistps
add
cmp
xlat
dec
cs
push
push
mov
sub
sub
lret
icebp
adcb
jno
pop
jecxz
mov
out
push
adc
setne
pop
ror
xor
sbb
xchg
dec
insb
and
loopne
pushf
xor
fsub
divl
xchg
inc
xor
sti
insb
test
inc
and
cmpsb
adc
mov
jge
inc
adc
popf
pop
and
jmp
xor
in
push
or
aam
inc
in
adc
mov
mov
mul
je
or
lods
dec
jbe
fcoms
push
daa
cwtl
mov
mov
iret
rol
xchg
dec
push
pop
push
mov
jbe
jmp
aaa
lock
filds
cmpsl
popa
icebp
sti
mov
imul
stos
sbb
sub
xchg
and
mov
icebp
mov
movl
stos
fs
add
arpl
negb
aaa
dec
roll
pop
rclb
jbe
add
xchg
fwait
in
and
rcrl
stos
sbb
sbb
rorl
mov
idivl
jbe
lods
cld
sbb
jecxz
adc
push
mov
dec
stos
push
cmpl
xor
leave
xchg
adc
es
scas
test
dec
dec
shl
sbb
shll
dec
mov
addb
outsl
sbb
mov
pop
fcoms
fbld
push
xchg
bnd
fwait
xchg
pop
and
push
xlat
and
push
loop
mov
pushf
ljmp
stos
mov
fistl
arpl
rclb
ret
push
test
pop
in
inc
jge
cmp
inc
scas
aam
and
fidivs
cli
stos
sbb
addb
test
add
fsts
mov
adc
mov
dec
mov
scas
adc
xorl
sbb
push
scas
cmp
mov
add
lock
xchg
xchg
sbb
jb
ret
in
ret
dec
out
fs
cmpsb
mov
fisttpll
fwait
sbb
push
push
push
pop
mov
fnclex
jns
jb
clc
push
mov
stos
ret
bswap
lods
push
sub
or
cmpsb
xchg
fstpt
sbbb
gs
mov
stos
dec
popf
cwtl
jmp
jno
daa
xchg
shll
xchg
xchg
outsl
pusha
or
dec
jb
xchg
cmc
pop
or
jle
mov
mov
xchg
insb
add
add
add
mov
or
lahf
adcl
mov
ds
add
sub
stos
xchg
shlb
ljmp
add
in
and
bound
icebp
mov
push
ffree
iret
add
lds
xchg
xor
adc
fbstp
stos
outsl
icebp
in
push
mov
sub
fadd
dec
xor
mov
mov
jns
pop
rcrl
popa
and
cmpsl
or
push
movsb
cmpsl
or
xor
leave
xchg
xlat
and
push
ja
roll
rorl
notl
ret
cs
in
test
push
push
sbb
push
lret
push
pop
or
and
shlb
push
insl
bound
and
mov
add
dec
popl
jno
mov
sar
jbe
mov
lret
int
mov
push
orb
cli
pop
inc
push
xor
ror
jno
inc
cmp
fwait
dec
push
mov
popf
lret
xchg
xchg
dec
and
mov
fdivrl
push
int3
fsubrp
pusha
movsl
add
mov
add
stos
xchg
in
mov
or
push
xchg
cli
jmp
push
leave
lds
mov
inc
mov
movsl
mov
inc
ja
fs
decb
aas
and
cli
jo
dec
loope
fdivrl
push
lods
rol
mov
shrb
jp
pusha
lea
movb
and
lret
push
xchg
jge
and
fmuls
xchg
add
dec
repnz
adc
cmp
daa
imul
out
adc
ret
sbb
add
mov
dec
lods
inc
jbe
pushf
clc
or
test
xchg
dec
mov
add
lret
addl
icebp
jmp
iret
sub
push
mov
ljmp
lcall
xchg
or
add
inc
sub
das
fisttps
cmp
adc
data16
xor
daa
dec
push
or
out
lret
push
insb
push
call
sbbl
inc
inc
adc
inc
push
movsb
pop
loopne
and
xchg
dec
sbbl
jge
lcall
fadds
rcll
shll
pop
xor
jo
cld
xchg
add
push
inc
and
aas
in
sbb
insb
jp
mov
out
and
sbb
or
into
sub
sbb
daa
sbb
mov
sbb
pop
xor
fstpl
sbb
and
push
in
in
div
mov
mov
xor
jne
cmp
mov
arpl
gs
leave
sub
imul
cmpsl
imul
rclb
and
push
pop
push
mov
mov
es
jno
ret
or
jg
jecxz
jbe
push
std
test
icebp
or
rcrl
inc
jl
add
adc
daa
cld
inc
and
xchg
mov
mov
mov
jb
xchg
test
loope
repz
mov
test
cmp
mov
inc
jle
pusha
push
int
dec
insl
vcvtdq2ps
inc
test
mov
mov
je
jl
dec
xchg
and
xor
sbb
or
push
dec
cmpsb
cmp
cld
cld
fidivl
and
push
cmpsl
or
push
enter
mov
ret
pop
jnp
push
rorl
lods
lea
shll
mov
or
cwtl
out
push
or
dec
mov
xor
into
inc
pop
sbb
fsts
dec
jecxz
stos
and
inc
lret
loope
ficompl
icebp
popa
jns
addb
mov
fisttpl
or
lods
out
xor
mov
xor
aas
mov
cli
cmp
add
lock
add
pop
jecxz
jle
es
ljmp
aam
lcall
into
push
sub
xchg
loope
xlat
or
push
add
popa
lds
push
mov
or
in
rol
pop
shll
mov
ds
or
sub
clc
adc
repz
cmp
jl
push
test
icebp
jne
stc
repz
daa
sbb
jge
pop
jmp
push
test
or
lret
push
cmc
insb
add
scas
addr16
add
mov
adcb
jae
dec
lods
outsl
cli
push
fs
inc
and
invlpg
add
and
aam
add
out
les
or
vpsllw
shll
popf
cmpsl
lea
test
aam
sub
xchg
push
adc
add
loopne
xchg
jbe
push
sbb
scas
js
adc
repz
lea
loope
xchg
test
cltd
rorb
sahf
das
outsb
sbb
pop
add
call
jmp
mov
add
jnp
pop
popa
sbb
mov
mov
or
xor
loop
enter
int
pushf
bound
nop
aas
syscall
lds
rcrl
mov
push
lcall
jmp
loope
push
lods
jmp
jb
js
xor
je
movsl
inc
outsl
mov
nop
cs
mov
inc
inc
in
stos
daa
outsl
sub
out
insl
mov
cmp
imulb
int
lcall
cmp
jp
and
pushf
pop
sub
ret
push
in
hlt
xor
enter
and
mov
fwait
daa
xor
jne
jne
cltd
sub
inc
in
xchg
ret
inc
out
adc
push
lds
pop
xchg
pop
mov
mov
xor
xchg
lret
popa
or
pop
cltd
movsl
or
push
call
into
fbld
dec
add
cs
xor
inc
xor
sbb
out
add
or
cmp
movsb
nop
xor
fimull
je
mov
fs
shr
cmp
into
push
test
loope
xorb
sub
pop
lahf
mov
or
mov
mov
cmpsl
sbb
jle
lcall
neg
mov
push
aas
or
or
repz
jae
outsb
pop
sbb
outsl
dec
scas
mov
jnp
into
jmp
leave
push
popa
movsl
mov
push
jns
or
jno
mov
dec
pop
lods
cmpsb
pop
jnp
mov
or
lret
lret
push
cmp
push
ss
pop
or
mov
or
lods
adc
dec
mov
mov
and
pop
ficoms
bound
mov
lcallw
lods
jle
test
jle
lahf
mov
out
popa
mov
or
add
fcomps
cli
cmp
lds
rclb
sbb
xor
arpl
jmp
pusha
mov
pcmpgtd
xchg
bound
shlb
inc
or
aaa
or
sbb
in
xchg
add
add
in
addl
nop
sbbb
jae
push
push
add
mov
mov
or
cwtl
adc
dec
xor
dec
xchg
lds
ret
sbbl
test
mov
out
fidivl
or
pop
add
cmpsb
pop
adc
ljmp
sub
dec
outsb
or
add
push
mov
cmp
imul
mov
push
add
mov
jmp
mov
int3
pop
jge
mov
or
orb
dec
cmp
into
push
emms
inc
into
sti
or
cltd
loope
cmpsl
outsl
pop
pop
cltd
adc
test
lret
pop
or
mov
xchg
nop
cmp
notl
scas
pop
addb
nop
jg
cmc
and
icebp
and
mulb
xor
aaa
jmp
pop
cmpsb
pop
rorb
sbb
or
pop
add
inc
shrl
cs
popa
dec
xchg
jns
ret
andl
add
loopne
cmpsl
sar
jae
cmpsb
and
mov
call
stos
ds
enter
ret
sub
popl
jae
or
add
testb
push
out
outsl
out
gs
sbb
es
sbb
popf
fdivrl
add
adc
xor
decb
push
sahf
and
sub
clc
dec
xchg
lret
insb
popa
push
jns
ja
out
pop
xchg
and
mov
mov
imul
dec
pop
inc
loope
dec
jne
out
insb
xchg
pop
mov
fwait
dec
xchg
cmpsb
testl
adc
lret
add
out
dec
inc
cmp
addr16
and
mov
aas
push
mov
pop
pop
mov
sbb
mov
test
shlb
or
push
lods
lcall
pop
mov
ljmp
test
shll
cltd
xchg
sahf
pop
leave
lahf
cmc
or
sub
stc
pusha
lea
inc
xor
aaa
inc
inc
push
mov
sbb
dec
sti
lock
faddl
sub
cmp
jp
sbb
out
lahf
pop
cltd
mov
lret
jne
push
pop
jnp
xor
pop
jp
and
inc
mov
aam
sbb
sbb
sub
cmp
cmp
fcmovbe
dec
push
dec
mov
inc
jb
test
mov
push
mov
scas
cmp
pop
stos
jl
sahf
add
nop
lahf
cld
or
xor
dec
clc
fidivl
in
inc
mov
ret
sbb
mov
jmp
push
jno
inc
add
mov
out
sbb
repz
dec
add
inc
sahf
dec
sub
outsl
lret
push
les
pop
out
fs
sub
jns
push
sub
arpl
lldt
into
fldcw
addr16
adc
or
adc
adc
ds
mov
xchg
push
std
sub
sbb
mov
xlat
and
push
push
setge
std
or
fcoml
mov
or
push
inc
cmp
add
sbb
daa
sub
pop
outsl
rcll
ret
sbb
and
pop
jle
lret
sub
stos
mov
push
das
stos
std
stos
add
bound
push
insl
jns
cli
dec
and
xchg
filds
cmp
sti
aaa
pop
clc
subb
pop
fwait
cmp
or
xorb
lock
loopne
sbb
push
inc
xchg
push
repz
sbbl
add
push
sbb
jl
sbb
mov
das
sub
mov
call
sbb
popf
jbe
out
filds
fsub
xlat
xor
add
mov
jnp
jle
call
jo
mov
dec
loopne
sbb
push
rcrb
stos
jo
in
shrl
std
adc
adc
inc
or
rol
mov
rclb
add
data16
xor
loopne
or
pop
sbb
gs
das
xchg
fisubs
enter
js
add
ss
scas
into
push
sub
adc
cmp
test
jb
or
cmp
fucomi
sbb
push
add
pop
shlb
push
inc
fcompl
in
sahf
cmp
test
mov
scas
jb
popf
add
bound
enter
mov
data16
xchg
push
inc
jecxz
pop
sbb
mov
lcall
xor
or
popf
std
subb
sub
and
sub
dec
xor
pop
cli
sbb
xor
arpl
jmp
pop
adc
cmp
and
and
iret
nop
int3
or
data16
pop
mov
and
cmpsl
aad
out
rorl
add
xchg
add
push
dec
jo
sti
test
adc
imul
inc
jb
cltd
or
dec
sub
rcr
inc
xchg
pop
pop
ss
mov
mov
mov
test
loopne
xor
loopne
sbb
push
in
mov
cmp
mov
das
xor
mov
jns
xchg
cwtl
lods
arpl
xchg
incb
jmp
cmp
hlt
and
ljmp
lock
aad
cmp
dec
mov
ss
or
add
stos
dec
push
addr16
sbb
cmp
push
and
rclb
cmp
movsl
pop
mov
std
popf
stc
lock
xchg
popa
mov
bound
pop
sbb
repz
lret
or
pop
jb
fbstp
xchg
inc
dec
add
fmull
into
cld
xorl
std
dec
push
rorl
push
pushf
push
cmc
sbb
daa
or
test
add
adc
xor
sub
lahf
stc
fildl
sub
out
or
push
or
cmpsb
sahf
mov
sbb
and
xchg
stos
stos
adc
lock
xlat
test
bound
cmp
hlt
mov
jne
push
imul
jbe
sub
dec
cltd
lock
in
fsts
insb
sarb
cltd
push
js
xchg
es
sub
ljmp
data16
mov
and
andl
xor
mov
ljmp
stc
bound
loope
add
mov
aaa
xor
and
cmp
inc
jmp
push
xor
inc
imul
mov
cmp
loopne
or
adc
jnp
inc
shll
in
insl
outsl
mov
mov
sub
sub
jmp
mov
add
sbb
rolb
outsb
imul
mov
or
fdivr
addr16
scas
dec
push
insb
sbb
das
mov
mov
adcb
cmp
pop
push
scas
je
cmpl
mov
cltd
insl
dec
enter
xchg
leave
inc
xchg
lods
lret
popf
sti
popa
sub
sbb
mov
push
rorl
insb
sbb
mov
lods
in
scas
xchg
scas
rcr
stc
arpl
insb
mov
xchg
and
pop
aam
clc
int3
in
sbb
jo
and
mov
mov
pop
mov
sbb
icebp
sbb
test
adc
pop
add
in
mov
sahf
insb
and
cmp
sahf
add
push
orb
lock
into
in
das
call
mov
out
adc
into
outsb
sahf
xor
sbb
aaa
lret
adc
adc
cltd
fstps
std
pop
pushf
and
add
sarl
incl
push
cltd
cmp
mov
testb
out
and
adc
ljmp
sbb
scas
iret
inc
sub
mov
sub
fs
cmpsl
pop
or
sbb
out
pop
push
dec
sub
inc
xor
xor
sub
test
pop
insl
sub
mov
fdivl
dec
xor
add
adc
push
aad
or
jl
jle
notb
inc
int3
out
ljmp
lock
dec
pop
div
jmp
lcall
jmp
bound
mov
into
sub
testl
movsb
cmc
xchg
arpl
xor
hlt
mov
cmpsb
sbb
xchg
xor
push
add
mov
push
les
push
add
roll
sbb
sub
add
popf
pop
and
mov
fs
rcll
xchg
and
xchg
add
jo
fisubs
dec
pop
push
or
out
leave
dec
add
int3
adcb
aam
inc
mov
sbb
out
sub
stc
cmpb
jg
xor
fs
dec
inc
andb
jnp
mov
pushf
dec
add
cmp
daa
ja
mov
movsl
mov
popw
out
or
ret
enter
adc
adc
jne
stos
sbb
test
mov
scas
dec
rorb
stos
sbb
out
aas
psubusw
orl
stos
js
xor
cmpsb
out
pop
jae
popa
mov
inc
xchg
jbe
push
ret
dec
inc
lock
or
xchg
jg
pusha
test
lock
decb
push
pop
adc
mov
add
pop
dec
loopne
stos
xor
mov
adc
lcall
dec
and
push
pop
xchg
fwait
mov
jnp
push
idiv
lret
or
sub
add
cmpsb
shlb
icebp
pop
sbb
les
out
fiadds
pop
sti
test
pop
jne
lcall
in
mov
addl
dec
sub
cwtl
sbb
inc
stc
push
test
daa
pop
mov
insl
mov
aam
rolb
movsb
sahf
idiv
mov
lret
lcall
or
adc
xor
pop
and
rcll
addl
mov
push
in
orb
push
xor
xchg
movsb
mov
xchg
orb
je
cltd
mov
inc
cmp
fcoml
mov
pushf
mov
add
or
clc
xor
pop
lds
xor
xchg
les
pop
movsb
shrb
stc
jbe
stc
sub
les
jbe
inc
roll
out
fcompl
subl
xor
testb
ret
outsb
sbb
xchg
jae
add
shlb
aas
shll
pop
test
sbb
sbb
and
inc
mov
stos
jne
mov
dec
lcall
lahf
lds
or
and
sbb
mov
dec
xchg
jle
jnp
push
into
das
pop
mov
cli
mov
cs
imul
popf
movsl
pop
xor
and
sti
insb
xor
das
sahf
mov
mov
xor
mov
iret
outsl
enter
fsubr
addw
mov
cmp
aad
jecxz
data16
in
push
sub
adc
and
sbb
std
pop
aaa
mov
jne,pn
out
pop
or
scas
or
into
in
lea
mov
stos
xlat
inc
xchg
not
repnz
jae
inc
xchg
scas
scas
dec
cmp
and
push
fwait
arpl
sahf
xchg
push
inc
out
pop
inc
test
stos
mov
xorb
rep
or
rclb
push
push
or
push
push
orl
pop
call
sbb
fucom
mov
jge
jmp
mov
sub
add
inc
insl
sbb
sbb
sbb
dec
mov
insl
lods
roll
ljmp
in
in
sahf
push
push
dec
dec
cmpsl
std
out
imul
pop
rcrb
dec
out
dec
jnp
mov
std
jl
push
in
nop
adc
and
or
scas
cmpsb
xchg
je
sbb
je
es
lret
lds
sbb
adc
insl
dec
cli
sub
fwait
mov
cld
push
stos
xor
jae
mov
bound
cs
xchg
sbb
pop
sahf
jl
push
mov
cmpsb
cltd
mov
aad
and
push
test
push
dec
sbb
ljmp
sbb
sahf
in
fxch
mov
jnp
xchg
popa
fcompl
lods
adc
jo
or
lock
test
adc
loope
add
adc
cmpsb
sbb
lock
sub
je
add
stos
pop
pop
in
notb
xchg
imul
dec
pop
dec
pop
mov
or
les
push
icebp
push
lret
popa
or
addb
out
dec
repnz
xor
das
push
test
push
sub
xlat
jmp
jge
dec
push
scas
add
pop
jle
and
addr16
leave
mov
sub
mov
repz
push
jl
xor
divl
push
subl
out
sbb
incb
bound
cltd
ja
inc
lds
inc
sbb
xor
ret
add
in
jo
andl
fs
int3
std
ret
pop
inc
xor
xlat
cmc
repnz
cmc
sub
xchg
mov
icebp
sbb
lcall
fwait
jbe
ss
xchg
leave
hlt
subl
pushf
dec
shrl
bound
xchg
enter
jmp
inc
push
sbb
popa
sbbb
out
mov
dec
jns
int3
mov
out
outsl
adc
dec
mov
mov
out
fisttpll
sub
arpl
adc
push
ffreep
push
push
xchg
push
rdpmc
adc
adc
popa
pop
inc
out
dec
push
insb
pop
add
cmp
jge
push
sbb
dec
sbb
insl
aad
jne
mull
dec
xchg
pop
push
add
mov
jle
aaa
cmp
insl
cmpsb
adc
repz
fmuls
sar
push
or
mov
jo
mov
icebp
add
mov
lret
and
faddl
mov
sub
iret
stos
fisttpll
rcrb
xchg
mov
and
sub
lcall
sbb
out
push
mov
pop
jae
mov
cmp
das
addl
sbb
jp
insb
xor
pop
pop
rorl
fs
push
mov
lcall
push
xorl
fwait
mov
test
lcall
loopne
fdivs
mov
cmpsl
push
cmpsb
ljmp
add
test
mov
or
sahf
mulb
inc
sbb
jns
jmp
and
pop
int3
fbstp
sbb
push
pop
stos
cmp
lock
jne
js
test
cmc
push
ret
sbb
clc
fnstsw
pop
xchg
xchg
push
push
add
fcomps
mov
push
dec
pop
xchg
push
fdivl
stc
jno
jmp
mov
mov
add
and
mov
enter
fdivrs
mov
sub
push
or
out
cmp
into
jge
rcll
or
cltd
jnp
push
dec
pop
lahf
mov
sbb
mov
scas
ret
lret
adc
clc
sahf
add
or
mov
jb
add
sahf
gs
jne
cmp
test
jp
mov
jbe
jnp
push
pop
mov
dec
sub
or
mov
jp
push
xchg
mov
cmp
adc
xchg
push
and
adc
inc
sbb
stos
ljmpw
insb
adc
mov
std
xchg
bound
int3
mov
inc
cli
sbb
mov
or
sub
aam
loop
mov
das
js
movsb
js
push
movsb
push
mov
in
data16
sub
bound
inc
cmpb
sbb
in
mov
psrad
or
push
push
cld
or
push
xorb
jbe
adc
jo
pop
and
repnz
sub
aaa
std
test
sub
sub
stos
fs
inc
mov
or
push
cmpl
in
sbb
sbb
mov
mov
push
shlb
sub
addb
mov
add
pop
xchg
sbb
sbb
test
loope
jae
and
aaa
int3
rolb
lock
adc
mov
out
sbb
nop
arpl
pushf
ja,pt
popf
mov
rorl
std
jo
cltd
mov
in
pop
and
dec
jle
sbb
repz
fsubrl
add
adc
add
ja
sub
xor
or
push
fbld
jmp
lods
inc
and
fcmovnb
push
add
xchg
xchg
mov
push
andl
push
push
mov
mov
cmp
rol
adc
push
dec
fmull
pop
adc
rclb
test
pop
out
cwtl
idivl
jge
mov
mov
adc
xchg
pop
xor
push
loop
dec
and
pop
xchg
mov
loopne
or
xchg
ljmp
xchg
lods
push
xchg
enter
cmc
cmp
rorb
adc
hlt
std
pcmpgtd
mov
or
dec
push
sub
add
and
scas
adc
mov
xor
inc
out
mov
inc
jo
test
gs
stos
inc
or
lret
js
mov
test
mov
cmpsb
in
pop
mov
pop
int3
imulb
test
mov
xchg
xor
into
cmp
push
push
dec
push
icebp
push
popa
enter
xchg
push
sbb
fadd
mov
shrb
into
sub
dec
pop
sub
add
test
jne
stos
out
or
dec
push
xchg
add
sbb
cli
lcall
sar
data16
push
jmp
xlat
mov
cs
dec
adc
sub
pop
andb
subl
sub
ret
in
xchg
pop
mov
dec
stos
xchg
jl
into
xchg
scas
push
mov
dec
cmpb
or
jle
jmp
sub
xchg
fidivs
scas
insb
stos
add
fdivs
call
jg
jmp
inc
insl
or
ljmp
fbstp
dec
pusha
jns
and
dec
orl
cmp
fstpt
sbb
xorb
push
inc
enter
push
xor
cli
or
pop
decl
inc
inc
xchg
push
rorb
loope
sub
cmp
fdivr
cltd
ss
and
jle
xchg
mov
sbb
in
out
fistpl
sti
mov
push
jge
xor
dec
xor
adc
inc
scas
fists
dec
or
xchg
sbb
mov
imul
mov
cli
fadd
std
loope
cmpsb
cmc
push
pushf
pop
cmc
sub
pop
dec
mov
aaa
cs
add
push
loop
add
xor
cltd
popl
jge
and
ljmp
mov
sbbb
leave
shr
out
mov
cltd
cmp
mov
scas
js
imul
xchg
add
shr
jne
cmp
pop
dec
mov
xchg
dec
cmp
cli
mov
les
imul
xorl
cmpsl
mov
int3
jmp
imul
sahf
lds
fstpt
mov
pusha
mov
inc
sub
add
inc
push
loope
inc
sub
add
mov
addr16
jg
push
mov
leave
pop
sbb
jmp
enter
rcr
ficoml
mov
cltd
sub
stc
xor
push
ret
ljmp
sahf
sbb
jle
rcl
bound
fbld
fisttpll
or
pop
lea
push
icebp
enter
shl
mov
dec
in
or
dec
daa
push
mov
out
mov
dec
popa
sub
cwtl
shr
fucomi
jns
sbb
dec
outsb
sbb
pop
inc
dec
and
std
and
leave
lret
cmc
cwtl
lcall
sub
sub
lret
push
fidivrs
roll
sub
jnp
jecxz
out
out
dec
sub
test
aaa
mov
adcl
fs
out
sbb
push
mov
mov
cltd
adc
fsub
daa
xorb
mov
push
addb
out
dec
daa
ljmp
nop
out
xchg
jne
pushf
xchg
sbb
or
mov
ret
sub
push
pop
aad
pop
test
dec
jmp
mov
mov
xchg
imul
push
loopew
sti
repnz
xor
adc
sbb
mov
xchg
gs
add
test
dec
mov
adc
jne
add
pop
lods
xor
sub
or
jno
cmp
clc
jnp
sarl
enter
add
cld
dec
dec
stos
cmpl
in
mov
ret
sbbb
cmp
and
dec
lahf
or
sarb
xchg
or
shlb
imul
scas
arpl
out
nop
xchg
in
push
jmp
flds
mov
in
inc
xchg
mov
pushf
loopne
mov
xor
aaa
adc
loope
scas
ds
sbb
adc
mov
js
ret
sti
leave
roll
cmpsb
daa
cmpsl
jno
sbb
pusha
or
scas
bound
add
dec
xchg
sbb
inc
or
aaa
cltd
add
out
icebp
pop
jnp
fsubl
ret
jp
clc
mov
cmpsb
sbb
jle
mov
cld
in
push
cwtl
fisubrs
add
mov
inc
inc
jae
adc
sbbl
inc
sub
inc
xchg
andl
add
mov
mov
mov
cmp
js
sub
fwait
loop,pn
jecxz
pop
xchg
add
mov
inc
sbb
rcrl
xchg
xchg
jecxz
pop
xchg
add
jno
add
std
lret
lock
pop
adc
popf
push
mov
sbb
popa
jp
aas
out
adc
mov
add
outsb
jne
inc
js
push
ret
sbb
mov
sub
add
cmp
sub
jno
and
gs
dec
daa
stos
daa
pop
push
sbb
jge
lret
dec
dec
imul
cmp
dec
push
test
aaa
adc
add
rorl
dec
mov
and
mov
dec
fstl
xchg
loope
mov
sbb
icebp
pushw
inc
fwait
lret
pop
mov
jns
popa
push
ja
repz
data16
cmc
out
xchg
icebp
dec
mov
adc
inc
bound
mov
fistl
int3
data16
out
and
pusha
pop
das
bound
loope
or
sbb
in
int
addr16
popf
jmp
outsb
dec
ja
or
xor
or
and
and
rolb
xor
xchg
pop
or
mov
mov
mov
mov
lea
jnp
pop
or
cmp
into
add
cmpb
xchg
dec
or
scas
mov
xor
adc
pop
mov
or
jle
bound
or
inc
push
mov
xchg
and
push
cmp
mov
lds
cld
stc
push
dec
fcoms
addl
sbb
lock
in
lret
ljmp
shlb
xor
or
sbb
or
cmc
ret
pop
inc
sbb
jge
xchg
or
xor
sub
inc
stos
and
idivb
pop
jecxz
aam
push
ret
stos
ja
roll
jb
add
int3
movsw
jbe
pop
scas
cmpsb
dec
inc
xor
clc
xchg
loop
dec
jmp
xchg
cmp
cmp
mov
test
out
xor
enter
je
subb
inc
jbe
add
sbb
mov
ror
subb
add
out
lods
mov
add
add
dec
test
sub
out
jne
pop
add
xchg
mov
daa
sub
jle
clc
dec
icebp
mov
adc
divb
dec
leave
in
call
pushf
sti
das
mov
and
arpl
iret
and
lds
out
mov
shrb
fwait
pusha
aad
cld
lret
inc
xorb
mov
hlt
mov
inc
mov
xchg
and
pusha
arpl
jge
imul
lret
les
and
mov
jmp
je
ja,pt
sub
mov
in
int
test
cmpsb
repz
inc
in
adc
mov
mov
fcoms
add
mov
mov
lods
cmp
icebp
call
cmpsb
mov
jo
or
cltd
jle
lcall
jle
and
sbb
mov
lds
mov
stos
fsubr
and
fwait
repnz
notb
sub
loope
jecxz
lods
popf
mov
jbe
cmp
push
add
data16
js
sahf
add
lods
inc
lret
jecxz
sub
sahf
mov
pop
push
adc
sbb
push
pop
test
sahf
jecxz
push
xor
mov
jle
and
loop
loopne
adc
xchg
mov
push
push
dec
shlb
cmpsb
sbb
mov
pop
jo
sahf
jns
jmp
clc
repnz
jne
or
pop
lahf
sbb
enter
mov
cmp
pop
or
dec
pop
dec
stos
stos
add
jno
sub
push
loopne
mov
sahf
add
leave
adc
orl
in
add
cmpsb
add
xlat
mov
daa
mov
adc
mov
push
mov
andb
push
push
mov
repz
or
push
mov
push
push
sbb
shll
mov
mov
push
lds
outsl
push
scas
or
into
stos
test
leave
mov
hlt
cmpl
lods
lods
popf
inc
and
dec
inc
push
jne
dec
enter
in
pop
jl
or
loope
pop
inc
sti
jge
add
adc
cltd
inc
test
cmc
sbb
ja
ss
imull
push
xor
dec
dec
dec
sbb
fnstcw
sub
fildl
mov
cmc
xor
xchg
push
pop
loop
inc
or
cmp
test
cmp
mov
stos
adc
adc
pop
pop
xor
mov
iret
data16
test
call
stos
ja
and
add
or
aaa
loop
sbb
and
mov
decb
xor
and
or
pop
or
or
shlb
int
sbb
mov
cmp
jge
xor
jne
leave
xor
cmc
mov
out
das
pushf
and
jns
adc
bnd
jno
lret
loop
fsubrl
mov
rclb
stc
push
and
in
push
mov
inc
jge
and
push
pop
add
add
sbb
cmc
dec
inc
mov
popa
aas
pop
cmp
xorb
sbb
sbb
inc
cmp
cmp
outsb
sbb
add
add
ja
cmc
pop
sub
dec
add
push
ds
xlat
sub
rcrl
pop
xchg
les
add
dec
lds
inc
sub
fimull
inc
sbb
enter
rcll
cmp
dec
inc
mov
test
data16
cs
das
out
shlb
cli
sti
jnp
loope
push
incb
and
pop
test
or
loopne
je
insl
sub
gs
nop
rorl
rclb
mov
bound
push
ret
dec
push
mov
fadd
imul
js
imul
or
aaa
and
test
inc
cltd
insl
mov
jmp
mov
add
repz
or
or
push
ret
sbb
sub
or
mov
mov
xchg
test
or
xchg
jecxz
mov
mov
push
rclb
or
arpl
xorb
pusha
push
insl
negb
jno
add
push
push
jbe
test
rolb
mov
stos
lret
adc
int
jl
rclb
fsubl
xchg
shll
inc
inc
fsubs
sti
fstpl
mov
popa
daa
das
nop
lock
xchg
push
jmp
jl
lds
clc
lcall
shl
ret
pop
cmpsl
adc
xchg
lea
test
popa
lcall
stos
lods
push
pop
ret
into
dec
push
cmpsl
andl
push
cli
test
jge
adcb
loope
pushf
inc
xchg
jl
fsubs
sbb
pop
push
sbb
ja
xor
fldcw
add
jp
inc
jno
orl
inc
fstl
add
pop
loopne
std
mov
mov
dec
push
mov
int3
mov
or
jge
mov
jle
or
movsl
pop
cmpsb
iret
icebp
sbb
stc
adc
xchg
bound
arpl
push
loope
mov
loop
lea
loope
addr16
mov
add
data16
pop
mov
mov
and
popf
cli
in
shrl
sub
xorb
xchg
xor
jb
and
xchg
dec
leavew
add
adc
out
roll
mov
adc
fsubl
adc
nop
loopne
push
mov
ret
movsl
lds
into
fdivrl
pop
cli
cwtl
mov
js
arpl
jno
out
rorb
pop
pop
xor
inc
addl
stc
sbb
inc
sbb
test
add
test
sub
sbb
jp
push
sub
or
into
int3
bound
or
adcb
lock
xor
test
or
sarb
sub
out
and
sbbb
inc
push
mov
xchg
add
xchg
adc
lods
inc
shr
cli
pusha
push
xchg
ss
lcall
sahf
sbb
push
jp
or
xchg
lahf
inc
fwait
testl
pop
loop
out
xlat
dec
incl
jmp
ja
xchg
aam
jl
or
jbe
dec
or
xchg
pusha
inc
lret
call
sti
scas
aad
fisubrs
idivb
sbb
scas
popf
in
sbb
arpl
out
test
call
scas
mov
lcall
cmp
test
mov
pop
mov
mov
dec
and
ss
fldt
sahf
push
push
cmp
fldt
cmpsl
push
push
repz
cmp
inc
jle
rcll
inc
sbb
dec
dec
xchg
mulb
xor
fstl
and
push
nop
sbb
je
or
sahf
popa
add
test
popa
sbb
or
push
xchg
mov
dec
negl
mov
fucomip
ss
add
imul
jge
pop
and
xchg
or
rorl
xor
xchg
jnp
repz
pusha
and
xchg
sub
xorb
sub
sbb
sbb
in
push
push
inc
xchg
sbb
ds
xor
cwtl
jne
daa
push
les
xchg
dec
sub
ret
outsl
fdivl
div
mov
lods
sti
mov
dec
ljmp
xor
jl
push
cmc
lods
pop
inc
nop
int3
and
sahf
jecxz
scas
mov
and
fadds
mov
jmp
jle
addl
mov
lahf
icebp
dec
fistpl
dec
fcmovbe
frstor
sar
inc
or
cltd
add
inc
shlb
pop
xor
jns
scas
jns
and
mov
sbb
pop
push
mov
or
fdiv
jle
dec
xchg
or
hlt
mov
mov
inc
mov
loopne
roll
data16
xor
dec
mov
sub
lcall
insl
test
inc
dec
inc
sbb
ret
cmpsl
mov
jg
mov
aaa
sub
cmp
lret
mov
sbb
sbb
mov
pop
and
mov
push
gs
lods
and
sub
inc
loope
out
mov
add
jne
jmp
add
and
les
scas
sbb
cmp
test
cmp
jl
lret
inc
pop
cli
lcall
xor
dec
inc
dec
xchg
push
insb
aaa
cltd
push
adc
imul
xchg
std
lea
enter
and
nop
mov
pop
jnp
int3
jno
inc
inc
and
in
adc
les
push
dec
and
dec
mov
clc
mov
xchg
or
cmpsb
insl
frstor
jns
sub
or
rcr
jae
push
mov
or
ja
pop
xchg
push
frstor
or
test
bound
mov
addb
xchg
popf
cmp
addr16
sub
lds
shll
push
push
inc
lcall
push
cmpsl
sbb
out
addw
pop
inc
enter
cmp
movsl
popf
popl
jae
data16
jecxz
adc
es
out
pushf
cs
ret
fadd
into
pop
mov
jmp
cmpsl
or
pop
popf
cli
test
sub
sbb
jmp
test
add
scas
decl
push
cs
daa
cwtl
add
popa
clc
xor
cmc
test
aaa
lcall
lock
xor
jge
inc
adc
shrl
sbb
stos
dec
lock
cmpsb
outsl
clc
sbb
std
inc
add
add
lahf
stos
dec
pop
adc
sbb
and
mov
xor
jmp
pop
cld
addb
dec
adc
pop
sahf
and
adc
adc
or
sbb
xchg
mov
into
pop
rcrl
inc
or
xchg
cmp
imul
mov
test
pushf
js
pop
add
push
dec
or
push
rcrl
add
jnp
push
inc
in
add
lret
fcoml
mov
push
les
cwtl
daa
jno
and
push
lock
cmpsl
addb
cs
sub
movl
lock
jno
cmp
dec
inc
cli
and
je
inc
push
testl
popf
ds
push
jbe
sbb
ljmp
push
in
daa
cmc
ljmp
push
sbb
or
bound
xor
loope
jne
sahf
add
sahf
cmc
mov
mov
add
push
dec
mov
and
or
lret
in
out
aam
add
das
rolb
pushf
int
jne
mov
sbb
fdivr
scas
or
icebp
sahf
fldl
mov
xor
sub
in
xor
dec
nop
xor
add
shrl
icebp
xchg
outsb
jno
popa
into
pop
aad
lcall
jno
and
sahf
addb
push
bound
mov
jl
xchg
xlat
sub
cwtl
icebp
cmpsb
jmp
xchg
sbb
mov
jb
in
cmpsb
push
fstpt
push
dec
jnp
xor
pop
mov
into
shrl
inc
jmp
aam
sub
addl
sbb
pushf
fsubrl
sbb
rcll
mov
stos
fnstsw
int3
jle
std
rcrb
xor
mov
xchg
mov
and
addl
lock
dec
push
push
sub
and
testl
add
mov
aaa
add
cmp
sbb
pop
mov
das
ja
jle
lods
sahf
pop
pop
xchg
mov
adc
rcrb
mov
sti
cmc
jne
lods
outsl
pop
pop
and
pop
clc
xchg
int3
loopne
mov
mov
loopne
push
outsl
sbb
xor
mov
cmp
sub
adc
xlat
cli
imul
ja
fistpl
enter
mov
mov
repz
jmp
std
jne
negb
jno
jmp
icebp
push
add
add
leave
ret
push
sub
mov
ds
push
ljmp
mov
rcrl
enter
mov
fdivrs
popf
cwtl
push
xchg
or
cmpsb
or
inc
jp
outsl
inc
pop
add
ljmp
int3
pop
rolb
sub
fcmovnbe
ja
cli
in
pop
out
arpl
sbb
iret
std
xor
mov
not
mov
inc
dec
and
inc
sub
xor
and
fsubl
add
pushfw
dec
jb
jge
pop
or
dec
imul
xor
in
mov
arpl
xchg
aas
sub
mov
sbb
dec
out
cmc
or
sbb
xchg
inc
push
xor
stos
mov
in
cltd
mov
dec
movsl
add
pop
dec
sbb
es
and
mov
sbb
pop
xchg
mov
mov
mov
rcrl
push
inc
sbb
jb
mov
push
mov
adc
std
lret
dec
jne
pushf
sti
push
movsw
dec
xchg
sub
orl
and
pop
shll
jae
push
in
lock
lcall
and
mov
ds
xlat
xor
add
pop
sbb
mov
xor
cmpsl
mov
test
sbb
add
pop
mov
aaa
and
add
mov
mov
lret
aam
xchg
dec
sub
push
inc
mov
rcll
cwtl
mov
sar
movsl
adc
repnz
cli
daa
std
lret
data16
js
cmp
and
jecxz
aaa
in
push
cmp
loop
mov
or
sbb
loope
sti
sbb
aam
xor
scas
insb
mov
stos
arpl
pop
lods
adc
jecxz
out
fld
shlb
sub
jmp
jne
fmuls
loope
inc
mov
daa
cmpsl
jle
fsubl
push
fldt
popf
mov
test
fcoml
dec
hlt
lret
lock
mov
ja
inc
sbb
jno
fnstsw
addr16
in
add
and
xchg
in
call
jmp
dec
push
dec
cmp
dec
aaa
push
mov
pop
scas
pop
mov
xchg
or
jl
xchg
jle
jnp
cmp
jecxz
or
loop
in
xor
test
loope
dec
xchg
loope
testb
mov
push
icebp
xor
pushf
add
js
addb
mov
dec
imul
repz
xlat
xchg
or
sub
test
in
daa
cltd
out
xlat
or
aaa
ficoml
or
pop
andb
push
out
scas
xor
pop
icebp
fs
cmp
xchg
or
push
inc
mov
lods
insl
out
cmc
insb
mov
push
imul
setne
insl
cmp
cmc
mov
jmp
cmp
sub
fbld
add
pop
push
add
inc
loope
push
push
jle
xor
call
push
leave
js
and
lahf
xor
or
call
nop
data16
xlat
add
push
push
xorl
ljmp
scas
mov
xor
add
push
pop
adc
dec
cmp
xor
repnz
aam
fisubrs
shll
adc
push
and
dec
sarb
dec
jnp
dec
push
insb
adc
mov
mov
lock
aam
rcrl
fmuls
or
sub
sti
cwtl
push
mov
es
pusha
nop
repnz
fiadds
mov
mov
mov
inc
cmc
js
push
cmp
mov
in
cltd
dec
lcall
lods
mov
in
aad
and
inc
addl
cld
fidivl
in
pop
push
push
add
cmp
mov
es
add
dec
enter
das
into
rcl
popf
push
or
into
lcall
or
ret
jb
sub
test
enter
movsb
push
sahf
rcrb
or
inc
sub
movsl
pop
xchg
cmp
fs
add
cmc
mov
lahf
gs
sbb
inc
shll
jbe
cmp
ds
push
mov
ja
sbbb
lea
inc
ret
xchg
clc
adc
sbb
dec
out
push
sbb
sub
sbb
fs
xor
push
cmpl
int3
clc
and
xchg
or
bnd
les
cmpsb
mov
cmp
cmp
stc
jne
push
scas
xlat
lahf
add
mov
call
push
mov
sbb
popa
mov
lahf
cmp
rcrl
push
sti
stos
jno
mov
stos
arpl
sub
out
cmc
jae
mov
pusha
add
pop
cmp
pop
pop
mov
and
xor
pop
subl
pop
or
xchg
std
pushf
mov
jle
ret
pop
xor
xchg
mov
xchg
js
scas
adc
and
push
cmp
scas
xorb
sbb
adc
pop
xor
adcl
incl
fidivl
xchg
xor
lock
xor
inc
sbb
cwtl
mov
mov
mov
inc
pop
fwait
or
fwait
jp
shll
aaa
ret
inc
cmp
and
push
xlat
adcl
shl
gs
fnstsw
or
popl
adc
shrb
mov
xchg
pop
inc
mov
xlat
lods
inc
pushl
or
imul
fmul
xchg
addl
sbb
out
mov
dec
aaa
pop
jne,pt
and
rcrl
mov
out
lods
aas
fwait
dec
fwait
cmp
mov
sbb
pop
jmp
rcrb
lock
out
das
sarb
mov
add
ficomps
out
into
cmp
enter
xlat
xor
outsb
add
int
cmp
lret
dec
pop
push
insb
dec
mov
adc
in
jo
push
and
and
clc
mov
pop
test
jp
dec
cld
lock
clc
inc
jecxz
mov
add
lcall
sbb
div
sub
popf
mov
cmovp
sbb
sarl
jmp
adcl
call
stc
outsb
push
aaa
in
mov
dec
push
daa
stc
rol
dec
add
cld
pop
inc
out
pop
lods
sahf
xchg
icebp
cmpb
aam
or
idivl
inc
scas
xchg
lods
mov
cltd
push
xor
or
mov
jecxz
xchg
out
adc
sub
and
cmp
adcl
fists
loopne
and
inc
add
or
xchg
ret
add
mov
addb
ficomps
sbb
sbb
xchg
subb
ret
call
fsub
or
add
inc
sbb
add
or
mov
fsubrl
inc
or
xchg
push
gs
call
mov
or
orb
cmp
aaa
nop
lods
out
lock
inc
jmp
inc
shlb
xchg
mov
psubb
mov
xor
jl
out
icebp
jge
inc
icebp
addl
xor
shlb
pop
scas
imul
push
insb
loopne
sbb
mov
loop
adc
lea
jne
test
mov
mov
dec
insb
scas
fwait
xorl
dec
mov
pop
shrl
ret
and
test
shll
and
adc
pop
rclb
repnz
shll
test
push
and
add
subb
pop
or
inc
pop
rsm
jno
or
leave
outsb
pop
nop
or
jno
pop
or
jmp
and
or
pop
mov
aam
mov
inc
adc
test
jmp
jl
fcompl
adc
pop
and
xchg
rolb
mov
pop
inc
rcrl
mov
fnstenv
pop
jno
xor
xchg
sbbb
or
or
xor
push
lds
pusha
mov
mov
cmp
movb
and
lcall
lret
ret
sbb
outsb
or
cs
jmp
add
mov
lcall
mov
mov
fistpl
and
pop
fsub
cmpsb
and
repz
out
js
mov
fidivs
push
rorl
les
xchg
repz
mov
rcrl
mov
cmpsb
fs
faddl
mov
shlb
inc
push
test
scas
sbb
and
xorb
push
sbb
or
jns
sub
aad
mov
xchg
lret
movsb
jmp
sbb
mov
add
jl
arpl
rol
jns
gs
jbe
mov
testb
gs
rcll
jns
mov
loopne
sbb
lods
mov
lods
sets
mov
lret
push
xchg
cwtl
push
dec
pop
push
js
push
fisttpll
add
divb
lea
xor
sub
cmp
push
int
leave
fldt
testb
clc
nop
adc
xchg
fidivl
stc
loopne
push
pop
jecxz
movsl
scas
add
sbb
pop
xor
sbb
sti
cmp
xor
mov
out
sub
lods
repz
stc
or
out
adcl
push
scas
sub
or
push
das
add
pop
mov
mov
push
movsb
xchg
rorl
mov
xchg
mov
push
pop
jle
ds
cmp
add
test
sbb
mov
xor
rorb
and
lret
fidivrl
or
mov
jnp
jl
pop
xlat
push
add
or
leave
push
add
xchg
push
inc
jmp
jp
nop
shrl
cmc
faddl
scas
jbe
add
inc
xor
das
and
fidivl
rclb
negl
into
int
push
xchg
adc
dec
rcl
mov
loopne
jno
mov
adc
pop
sarb
popa
rcrb
xor
shlb
gs
dec
sbbl
push
test
lcall
jnp
popa
orl
mov
call
xchg
sbb
outsl
int3
data16
pop
imulb
push
cld
fwait
cmp
imulb
pop
mov
test
test
sbb
xchg
bound
sti
bound
jg
add
mov
sbb
xor
and
loopne
in
adc
or
leave
bound
sbb
mov
add
jno
sarl
pop
add
xchg
jb
out
push
fcomps
fwait
pop
bswap
xadd
push
adc
cmpl
dec
test
mov
rolb
push
dec
or
aaa
cwtl
mov
mov
lret
and
jl
mov
and
clc
es
push
sbb
pop
cmpsb
test
mov
mov
or
repz
gs
xchg
mov
aaa
bnd
negb
punpckhdq
in
sub
dec
cmp
dec
add
test
es
sahf
adc
mov
stos
adc
aad
pop
mov
xchg
or
ret
add
jbe
movsb
rorb
xor
loope
pusha
loope
int3
sbb
popf
test
lret
cmc
sbb
jo
pop
movlps
xor
jno
fwait
in
arpl
fwait
stc
nop
lret
and
test
out
jmp
cli
xchg
test
testb
or
add
in
jno
mov
xor
jle
fcompl
inc
pop
sub
pop
fldenv
push
and
fisttpll
cmp
data16
pop
push
push
in
dec
jge
adcl
xor
mov
dec
mov
sbb
stc
pop
or
sub
dec
xor
sti
into
les
outsl
push
mov
adc
sbb
cmp
addl
pop
and
inc
pop
cmc
icebp
movsl
or
in
jle
dec
aaa
inc
das
jmp
idivl
adc
lcall
ret
mov
dec
sbb
xchg
cmpl
std
lea
pop
inc
in
xchg
sbb
gs
sti
dec
mov
pop
push
adc
sbb
inc
ret
push
cmpsb
xor
mov
std
jno
icebp
xor
add
add
xchg
cld
scas
and
fisubrl
pop
add
bound
sbb
inc
popa
fidivl
icebp
pop
sub
mov
aad
stos
addb
mov
push
push
xor
movsl
test
loop
lcall
rcrl
scas
adc
cmp
and
pop
push
jne
jl
test
sbb
jle
add
push
mov
xchg
bound
and
out
ds
jns
sub
imul
add
inc
fyl2x
clc
in
cmp
add
loop
push
or
mov
xchg
shl
stos
xchg
add
loope
shrb
test
call
and
in
pop
aaa
or
sbb
in
inc
hlt
and
mov
inc
adc
nop
pop
and
and
bound
shrb
fisubs
adc
repz
movsb
jge
sub
push
hlt
cmpsb
xchg
flds
repnz
popa
or
es
jl
add
aam
and
pop
mov
shrb
movl
jge
imul
ljmp
mov
sbb
push
daa
jnp
pop
xor
cmc
or
ret
inc
jns
inc
fnstsw
sbb
insb
xchg
xchg
add
and
pop
mov
adc
cmc
or
and
les
adc
jp
push
mov
cmp
or
inc
add
xor
pop
ds
or
xor
or
out
fists
imul
aaa
popa
or
push
push
loop
fsubp
xor
shlb
sbb
faddp
aaa
arpl
sbb
lods
add
xchg
fcmovbe
jb
pop
push
inc
andl
aaa
mov
ret
and
pusha
push
add
into
popa
xchg
rcl
mov
loope
push
xchg
mov
jnp
jae
push
test
cmp
les
scas
mov
ss
xor
test
mov
cmpsb
pusha
and
xchg
push
sahf
ljmp
lcallw
outsl
aad
sub
pmuludq
add
adc
inc
inc
xchg
jb
sbb
sbb
and
dec
arpl
pop
adc
lahf
push
scas
in
neg
mov
arpl
arpl
jmp
lahf
inc
lahf
jns
xor
pop
ret
adcl
ret
mull
push
test
stos
faddl
std
mov
push
sbb
sbb
roll
icebp
push
and
fisubrs
call
dec
xor
cmpsb
out
jmp
das
add
add
inc
fcmovb
sub
test
push
cwtl
mov
loope
movsl
stc
popf
pusha
push
bound
mov
pop
mov
or
sub
or
push
mov
lock
sbb
and
or
movsb
popf
jne
aas
mov
sbb
mov
push
cli
lcall
mov
adc
insb
fdivs
loope
sbb
mov
or
out
dec
inc
testb
xlat
rcll
bound
loopne
sahf
repz
sub
push
repz
adc
xchg
sbbl
std
stos
call
addl
rcr
data16
add
loop
sub
jnp
xchg
insl
daa
in
fbld
cwtl
sub
cltd
gs
fsts
push
push
loope
imul
pop
mov
repnz
lahf
cli
sub
or
or
push
into
cld
xorl
xchg
xor
cmp
sbb
jne
pop
jle
lret
add
sarb
test
lock
iret
in
test
push
inc
js
ds
je
push
out
inc
jge
test
push
out
jnp
ret
out
sti
sub
ja
sub
push
jle
inc
jp
dec
pop
inc
xchg
add
or
fadd
xor
inc
aaa
sbb
xchg
stos
push
sbb
int
cmpsb
int3
in
repnz
jl
sbb
dec
jae
jg
mov
repnz
xchg
test
mov
mov
frstor
pop
pop
mov
out
add
sub
xlat
bound
push
ljmp
lret
enter
fstpl
pop
rol
xchg
inc
aam
rcr
mov
push
xlat
shl
cmpsb
mov
sbb
aad
scas
in
fsub
mov
lock
mov
mov
daa
add
jb
loop
or
rcrl
fadds
imulb
out
sub
call
adc
popa
icebp
inc
mov
cmp
ret
mov
outsb
icebp
mov
pop
popa
out
repz
sti
push
and
in
sahf
cld
adc
xchg
push
repz
sub
subb
jb
cli
sub
push
mov
adcl
add
loopne
int
push
mov
xchg
dec
mov
xor
popa
sub
push
xor
aas
cli
jmp
sbb
cs
ljmp
xor
cwtl
sahf
cmc
sub
out
fsubl
mov
jmp
jb
sahf
mov
xchg
mov
addl
int
dec
pushf
push
ljmp
ljmp
adc
imul
bound
test
iret
push
in
dec
das
xchg
sbb
push
neg
adc
pop
inc
sahf
icebp
aaa
outsb
inc
inc
cmc
inc
sbb
push
mov
sbb
adc
mov
icebp
imul
and
jne
push
cmp
cmp
das
inc
sbb
or
loop
bound
and
add
inc
insb
or
push
sti
dec
adc
fdivs
inc
fwait
shrl
int3
out
mov
inc
imul
mov
adcb
push
es
test
sbb
into
and
pop
jle
fcoml
sahf
repz
ret
aam
fbstp
add
ja
jne
jp
pop
push
mov
clc
fstpl
scas
mov
xchg
jp
jmp
and
daa
dec
xorl
jne
nop
jno
xor
fsubr
pop
mov
mov
lds
sbb
push
shll
imul
pop
ficompl
sbb
popf
out
adc
sub
add
mov
aaa
jle
in
sub
dec
aad
outsb
or
and
cs
sbb
jbe
cmpsb
sti
fisubrl
out
clc
xchg
lds
sbb
test
or
loopne
fnstsw
movsl
inc
cmpxchg
pushf
mov
mov
mov
in
push
push
aas
cmp
hlt
repz
mov
pop
pop
cmc
sbb
lea
es
addr16
pop
mov
rol
mov
add
cmc
sub
mov
pop
mov
lahf
nop
test
mov
lea
jbe
add
sbb
or
or
mov
push
jne
mov
push
jg
mov
add
sbb
push
lahf
mov
pop
fsubl
lcall
hlt
or
lcall
and
js
sbb
adc
xor
xor
pushf
jnp
dec
xchg
stos
test
and
cs
push
and
mov
inc
out
push
out
aaa
mov
push
jmp
dec
sti
test
and
outsb
ret
or
shrb
xchg
inc
lret
jmp
test
or
cmp
sub
inc
mov
cmp
add
dec
ds
push
adc
imull
pop
cwtl
gs
or
dec
loope
jne
jnp
shr
fsubr
dec
fstps
scas
or
or
xchg
inc
stos
lcall
mov
and
inc
adc
stc
sbb
imul
xorb
mov
vxorps
mov
and
arpl
test
sbb
cmp
popa
push
test
add
mov
jecxz
jnp
xchg
iret
mov
or
pop
mov
lret
lods
imul
sub
dec
repz
popa
arpl
pop
hlt
aaa
fmulp
xor
and
lcall
or
push
jbe
push
gs
add
jnp
mov
cmpsb
xor
leave
adc
or
int3
lret
pop
dec
repnz
imul
pop
cmp
std
jge
cmpsl
fsubl
mov
inc
and
fbld
mov
in
dec
pop
stos
push
inc
in
jbe
xor
sub
call
pop
adc
ficoms
mulb
faddl
xor
in
mov
or
sub
faddp
cltd
cmc
inc
js
push
push
lahf
pop
jno
testb
cmp
lret
repz
incl
fbld
mov
cli
and
popa
lcall
add
sbb
cmpsb
ljmp
ficoms
pop
fwait
push
or
test
xor
or
ficomps
lock
sbb
repnz
sbbl
add
xor
adc
mov
mov
add
rcll
add
jb
mov
pop
push
xchg
ss
inc
les
adc
pop
jp
in
mov
mov
sbb
push
pop
push
fdivr
sbb
mov
jno
pop
xchg
push
jbe
movsl
jo
fucomi
cmpsb
insb
aam
xchg
pop
icebp
iret
fisubrl
mov
mov
les
lods
clc
fidivl
int3
fcomps
or
cmp
mov
and
call
mov
push
jge
lcall
mov
into
add
data16
push
jge
test
xor
ja
scas
mov
fisubs
orb
add
sbb
mov
insb
adc
xchg
repz
push
pop
sub
add
xor
sti
fdivl
pop
pop
mov
lds
popf
in
shll
rcll
sub
clc
pop
xor
adc
push
mov
mov
lods
test
xchg
sti
jns
loope
xchg
mov
daa
rcrb
addr16
sbb
push
pop
xor
pop
pop
ret
push
xchg
push
fwait
push
ljmp
cmpsl
pop
inc
js
add
iret
movsl
subl
ret
xchg
daa
scas
jb
gs
jbe
iret
data16
cmp
xchg
dec
sub
push
test
sbb
inc
pop
or
movsb
add
cmp
in
out
adc
sbb
or
fsts
aaa
cli
test
test
loop
or
das
orb
cli
cwtl
test
movl
xchg
jecxz,pn
aaa
aas
and
test
imul
mov
adc
fimull
xor
push
push
fmull
cmc
aas
jns
fadds
jle
xor
aam
inc
add
mov
mov
dec
jnp
cmp
out
mov
mov
pop
pop
sub
sti
push
and
jbe
gs
mov
xor
je
sbb
xchg
adc
sbb
or
dec
imul
mov
adcl
adc
shrb
push
jecxz
ror
cmpsb
in
in
add
jne
bound
into
push
aaa
ret
and
inc
or
out
and
push
push
jns
leave
jecxz
mov
lahf
lods
dec
inc
cwtl
adc
add
clc
mov
inc
lea
or
fiaddl
popf
jg
imul
sub
xchg
stc
subb
dec
addb
in
mov
ret
inc
mov
cmc
jbe
mov
xor
or
test
cmc
test
lods
ret
sbb
inc
movsb
mov
test
push
mul
push
jb
outsb
xchg
push
pusha
faddp
sub
inc
nop
stos
or
push
add
pop
sbb
pop
lds
rcll
xchg
mov
push
add
sbb
xchg
ss
cmpsb
daa
cltd
stos
sub
push
sbb
lods
push
or
nop
call
add
and
les
or
fs
lea
insl
aad
mov
xor
xor
push
test
or
mov
aas
cmp
mov
leave
cmp
cmp
inc
mov
lahf
jnp
icebp
mov
add
rsm
push
jno
jl
jae
adc
inc
mov
fwait
mov
sbb
outsb
xor
fstpt
and
push
xor
cmp
or
jle
jno
in
sbb
pushf
or
push
icebp
cmpsl
daa
mov
push
pop
int3
xor
aas
subb
insl
out
repnz
xor
xor
lahf
jae
test
jno
push
jle
mov
pop
repz
or
and
push
stos
xchg
insb
adc
add
test
leave
and
in
icebp
push
inc
sub
push
push
sbb
cwtl
movsl
sub
or
out
dec
pusha
lods
jno
mov
jno
and
push
mov
push
mov
shr
push
jmp
add
jle
or
cmp
adc
test
ret
ss
push
push
push
inc
out
add
add
push
test
jbe
shlb
and
cmp
pop
mov
mov
out
rorl
or
mov
sahf
sbb
mov
push
divb
sbb
mov
adc
mov
flds
sub
push
fbstp
mov
shlb
std
fsubrs
cltd
cmp
nop
inc
mov
repz
and
xorb
out
xchg
shll
outsl
stos
pop
or
lret
pop
gs
push
cmpsb
jl
pop
popf
aaa
and
in
scas
movsl
mov
push
sbb
sbb
kmovd
sub
repnz
inc
stos
sarl
orl
mov
imulb
push
mov
aas
aam
lods
nop
ss
popf
push
mov
add
mov
mov
imull
dec
das
sahf
movsl
cmp
in
enter
mov
ja
popf
jne
mov
mov
insb
and
mov
jl
push
shrb
cmp
sti
add
fidivl
ds
cltd
rclb
mov
jmp
rcll
xor
cmc
push
sarb
add
sub
add
movsl
cmc
or
jnp
das
or
jecxz
nop
jo
mov
mov
jl
sub
cmp
fcmovu
mov
inc
jle
jg
xchg
sbb
daa
repnz
into
pop
xor
sbb
std
mov
or
ljmp
mov
fs
push
cld
mov
jo
pop
adc
in
pop
roll
or
cmp
jmp
mov
call
scas
pop
inc
call
movsb
add
pop
adc
stc
mov
xchg
addr16
sbb
cltd
loop
flds
lds
popa
cltd
jecxz
xchg
mov
pop
ss
mov
aaa
cmp
add
jl
in
inc
jle
sub
adc
mov
push
stos
je
rorl
or
mov
test
xchg
dec
sbb
out
jo
inc
stos
and
sbb
dec
mov
push
cmp
inc
pop
sub
pop
lahf
dec
loope
roll
and
aaa
mov
cli
push
add
dec
sbb
or
adc
test
push
fdivl
sahf
pop
imul
mov
mov
leave
and
repnz
and
inc
push
shrl
rorl
xor
sub
stc
xchg
sbb
addb
outsb
push
or
sbb
push
sahf
cltd
jl
ret
addr16
sbb
pushf
leave
push
cli
fidivrs
dec
leave
imul
xchg
xchg
and
repz
popf
outsb
stos
dec
sarb
test
push
add
popa
push
aad
das
xchg
dec
and
dec
iret
test
ja
add
jle
call
loope
nop
pop
xchg
xchg
add
dec
push
fisubrl
mov
or
add
idivl
jo
stos
arpl
xor
pop
jns
jae
mov
cs
dec
pushf
pop
pop
add
dec
lds
adc
stos
cmp
sbb
cs
add
sub
dec
scas
dec
push
jbe
mov
sub
xor
inc
pop
jne
fidivrl
jg
and
adc
in
mov
popa
and
into
or
add
imul
pop
add
mov
mov
pop
das
adc
les
mov
xlat
cmp
cmp
pop
xchg
pushf
or
leave
mov
pop
push
pop
lods
push
xchg
mov
jp
push
xor
call
dec
mov
mov
cmp
or
cmpsb
loope
inc
jo
fsubs
test
pop
mov
mov
jecxz
sti
xor
lahf
cmp
or
sbb
push
push
xchg
into
inc
push
inc
add
sarl
mov
jae
xor
scas
imul
loop
andl
jge
loop
push
dec
xchg
push
loope
aas
cs
aaa
sbb
movsb
pop
mov
or
aaa
pop
add
jecxz
push
xchg
loope
or
addr16
ficoms
lahf
insl
into
cld
or
push
inc
add
lock
push
mov
add
mov
cmp
movsl
pop
dec
or
fisubs
jo
loop
jecxz
pop
mov
sub
lcall
or
cli
test
jle,pt
sbbl
and
fs
outsb
imul
dec
lahf
mov
jnp
xor
sbb
mov
mov
or
testb
mov
mov
ljmp
daa
test
vmovntps
xor
pop
adc
insb
cmp
movb
dec
xor
stos
je
mov
cmp
push
call
adc
sbb
mov
test
and
test
rorl
sbbb
fnstsw
test
and
gs
and
sbbb
or
mov
add
fcomps
ret
mov
inc
daa
inc
sbb
inc
xorb
test
and
or
sti
ljmp
xor
loopne
outsb
sarb
pushf
hlt
sub
iret
push
test
test
jp
rolb
pop
ljmp
mov
or
int3
inc
out
test
stos
pop
sub
mov
popf
inc
fsubrl
icebp
in
xor
mov
es
pop
mov
lcall
outsl
dec
xchg
mov
sub
add
mov
or
dec
push
pop
pop
pop
xor
mov
into
adc
into
ja
push
push
or
xor
dec
mov
adc
mov
cmp
sbbb
rcrb
mov
push
fdiv
nop
inc
aad
inc
push
orl
ja
push
or
sti
mov
lret
inc
iret
movsb
loopne
je
subb
jp
int3
loop
cmpsl
shlb
sbb
mov
dec
adc
add
lcall
mov
rcrl
push
inc
xchg
dec
inc
sahf
imul
mov
lock
adc
add
mov
add
data16
add
pushf
pop
stos
sbb
ret
movsl
or
cmp
ja
or
adc
addb
push
movsl
test
xor
mov
cltd
inc
data16
xchg
jl
sub
add
add
shr
rcll
lods
fxch
cld
xor
pop
push
fwait
add
mov
lahf
cmc
mov
jmp
inc
mov
ret
or
xchg
mov
shl
jg
cwtl
rclb
sub
mov
or
dec
loop
sbb
push
das
inc
shll
mov
fwait
jnp
inc
roll
push
sbb
fcomi
popf
jge
xchg
sub
sub
test
or
cmp
dec
cmp
sti
mov
inc
inc
xchg
mov
aam
cmpsb
push
mov
rol
mov
imul
int
jle
jge
dec
popf
mov
addr16
mov
or
pop
push
loopne
jg
xor
dec
sub
jbe
and
pop
icebp
xlat
add
push
lods
in
dec
jge
daa
push
push
sbb
stos
popf
adc
cmpsb
mov
mov
rorl
push
aam
dec
out
cmp
adc
icebp
cli
push
adc
inc
add
or
sub
sub
mov
gs
mov
inc
loopne
daa
inc
pusha
xor
jmp
sbb
push
mov
pop
push
icebp
sbb
out
add
mov
push
loopne
insb
dec
outsb
mov
imul
lea
or
cmp
scas
dec
int
arpl
shrb
cmpsb
sub
dec
sbb
mov
mov
inc
mov
shll
lea
fsts
daa
jnp
push
mov
pusha
xor
jecxz
sbb
inc
sti
cli
jnp
jge
and
test
pop
push
je
sbb
add
mov
or
jmp
ljmp
je
aaa
icebp
scas
cmp
sarb
loop
mov
orl
or
mov
push
dec
adcl
popw
mov
or
loop
vmwrite
push
add
out
mov
rcl
repz
dec
and
push
xchg
sbb
ljmp
rcrb
inc
adcl
jnp
popa
sti
dec
icebp
cli
mov
pop
push
jg
sahf
add
sbb
jnp
out
hlt
sbb
pop
pop
mov
lret
fstpt
fdivrs
push
and
mov
cmp
add
nop
push
add
cmp
push
lahf
dec
addl
sbb
repnz
dec
sbb
sbb
pop
dec
jg
inc
imul
std
add
sahf
jp
lea
push
mov
adc
and
cmp
sti
aas
push
lock
xor
mov
pop
add
sbb
jle
test
and
test
inc
ja
mov
pushl
xor
outsb
jno
pop
out
sarb
lds
loopne
cli
icebp
mov
cmc
ja
test
xlat
pop
mov
in
mov
cli
loop
mov
sbb
xor
cld
cmpb
daa
mov
adc
das
or
or
push
xor
popf
mov
inc
popf
xor
pop
fildl
push
insl
arpl
xorb
push
frstor
push
sbbb
cmpsl
sbb
pop
jmp
test
andl
je
push
mov
mov
rolb
dec
pop
subl
test
pop
xlat
xchg
in
xor
mov
dec
aaa
dec
cmp
inc
ljmp
movsb
pop
push
cmpsl
pop
pop
pop
in
sti
frstor
dec
push
inc
mov
add
sbb
fidivs
pusha
cmp
xchg
lods
nop
imul
jmp
arpl
or
sti
nop
gs
mov
insb
sbb
adc
mov
pop
inc
pop
enter
push
sub
xchg
icebp
movsb
aam
pop
arpl
stc
jmp
xor
out
sbb
jbe
ret
mov
sarl
pushw
rclb
and
jp
xchg
pop
sbb
dec
mov
dec
or
push
cmpsl
aaa
cli
out
adc
push
test
sbb
loop
sbb
sbb
out
xlat
push
pusha
push
mov
xor
inc
push
xchg
insb
cmp
out
addr16
test
add
xchg
or
sbb
cmpsl
xlat
pop
dec
xor
stos
cmpb
ja
mov
loop
sbb
sub
add
inc
push
fwait
inc
add
mov
push
sbb
lds
or
subb
xorl
popf
test
jae
pusha
int
or
aaa
imul
lret
pop
or
jnp
into
nop
dec
add
loope
mov
push
aas
or
mov
sti
imul
sbb
pop
repnz
jle
push
adc
adc
or
nop
pop
loop
rorb
push
inc
inc
dec
push
inc
hlt
aad
ja
test
add
nop
lcall
inc
mov
out
int3
popl
test
cmpsb
lods
addl
dec
pop
sbb
dec
pop
inc
mov
jbe
pop
push
mov
mov
mov
xor
hlt
mov
nop
lret
ret
mov
mov
cmpsl
push
sub
pop
pop
repz
pusha
ret
push
rcll
arpl
test
sub
mov
sbb
sub
fs
add
sub
push
jg
xor
movsl
popa
out
cmp
xor
adc
pop
out
lds
add
js
lock
sbb
xlat
ja
test
gs
cltd
call
mov
addb
faddl
das
adc
or
inc
sbb
call
and
or
jge
adc
call
push
fcomps
or
fwait
lods
mov
ds
gs
cmpsb
arpl
cmpsl
movsb
push
or
in
and
jbe
test
mov
ret
lds
xorb
sbb
push
pop
sub
out
xchg
sub
stos
mov
sbb
jbe
or
inc
fwait
outsb
pop
arpl
popf
out
lock
push
mov
bound
shl
dec
mov
sub
out
cmc
push
ja
popl
add
or
pusha
mov
repnz
inc
dec
push
dec
xor
lock
push
xchg
decl
push
xor
sbb
loope
pop
mov
push
mov
and
clc
push
add
fisttps
xor
out
and
pusha
les
cltd
aaa
cmp
pop
mov
sub
ficompl
sbb
ret
inc
pop
cmp
mov
add
push
mov
mov
shrb
push
gs
or
pusha
inc
adc
mov
sub
iret
or
inc
xorl
and
cwtl
pop
xchg
aaa
xchg
mov
mov
jnp
jne
sarl
adc
cmp
adc
mov
lods
loopne
cli
lahf
les
add
sbb
lcall
cmc
daa
in
jg
push
mov
mov
sbb
sub
pop
push
shlb
mov
addr16
hlt
xchg
test
push
cmp
dec
les
push
mov
add
push
insb
add
dec
cwtl
jg
pop
into
mov
push
icebp
lret
xlat
cltd
imul
jb
add
stc
push
in
loopne
mov
jmp
ja
cmp
test
ret
mov
scas
add
stc
xchg
add
rcl
in
jp
lret
pusha
xor
fldt
or
lods
repnz
paddsb
sub
adc
add
daa
add
pop
shlb
pop
add
out
push
in
aad
pop
and
int
scas
int3
aaa
pop
lods
out
add
mov
aam
mov
push
xchg
add
mov
jp
inc
pushf
mull
rcrb
mov
and
lret
sbb
sbb
xor
cltd
jne
cs
cltd
fnstsw
stos
xchg
xchg
or
sub
push
push
add
movsb
push
pop
sbb
push
dec
out
sbb
jno
jno
jne
xchg
aaa
out
clc
sbb
mov
add
jmp
sbb
jge
add
inc
mov
ds
mov
sbb
es
outsb
test
outsl
insb
sub
or
repnz
lcall
and
les
enter
jne
adcb
sbb
shrl
inc
popf
sti
loop
pop
mov
loope
pop
add
cmp
es
push
shll
push
dec
pop
imul
test
movsb
xchg
das
shll
mov
push
jnp
mov
jns
popf
lods
jg
out
add
mov
mov
sbb
in
cmp
adcl
rol
stc
aas
sub
sbb
mov
cmp
mov
push
sbb
push
imul
insl
add
mov
ds
pop
sub
cmp
std
push
or
pop
mov
push
stos
cltd
inc
rorl
jns
sbb
mov
mov
imul
cmpsb
lcall
bound
scas
and
adc
push
sub
mov
push
call
bound
je
sahf
adc
cmp
popa
adc
rorl
ljmp
addr16
out
cmc
pop
imulb
mov
inc
add
add
loop
pop
mov
inc
imul
xor
stos
cmp
aam
jl
sbb
or
xchg
sub
outsl
aad
cltd
adc
xchg
loopne
sahf
ja
mov
xchg
cmc
add
lods
and
inc
xchg
dec
cltd
roll
outsb
inc
lcall
sbb
mov
mov
jecxz
jns
cmpsb
mov
mov
aad
xchg
dec
add
fdivl
subl
dec
bound
push
imul
or
cmp
int
push
and
into
xchg
insb
add
jp
mov
sub
add
insb
arpl
jno
sbb
sbb
xchg
xchg
gs
mov
out
gs
cmp
call
xchg
adc
insb
loopne
xchg
dec
rcrl
add
or
faddl
xor
mov
jmp
and
or
or
stos
aaa
add
lods
xlat
add
imul
mov
aas
mov
rorl
das
pop
or
inc
into
push
fcmovb
xor
insl
pop
jnp
inc
fisubrl
jmp
cmpsl
out
cmp
fcmove
push
xor
inc
or
je
ret
cmc
sbb
sbbl
inc
or
enter
xchg
xlat
lods
push
or
lock
int
movsb
mov
push
stos
sbb
in
mov
cmp
arpl
cmpb
ds
cmpl
jnp
mov
inc
xchg
xorl
add
and
bnd
icebp
jp
ffree
out
fs
cmpsb
sbb
imul
aad
insb
inc
jge
inc
in
data16
ljmp
ss
arpl
or
fsubrs
sbb
ljmp
mov
pop
dec
cmpsl
gs
imull
jge
sbb
inc
mov
dec
hlt
pop
xor
cmp
outsl
pushf
adc
sbb
add
mov
mov
fs
and
es
stos
lods
into
enter
clc
and
loope
lds
pop
mov
push
test
es
rcrl
and
dec
dec
pop
pop
subl
xchg
outsb
fsubrs
mov
jp
cmp
jbe
push
in
cmp
fsubr
add
sub
cwtl
imul
lods
or
pop
or
fldl
stos
mov
movsl
add
dec
xor
push
mov
mov
ret
mov
jo
imul
push
testl
sbb
pop
and
push
push
sti
aaa
xchg
into
loopne
sub
icebp
jnp
insl
inc
gs
divb
shll
and
data16
and
dec
shlb
lahf
xchg
or
mov
sbb
aas
mov
add
addr16
xchg
arpl
inc
enter
fcomp
mov
adcb
sahf
aam
mov
gs
ss
xor
ja
adc
stc
hlt
cmpl
mov
or
add
cmpl
in
clc
lds
dec
cmp
orl
lcall
js
pop
loop
xchg
shr
mov
inc
stos
sbb
dec
cmp
sbb
xlat
sahf
scas
int
push
pop
push
adc
mov
xchg
adc
lods
pop
cwtl
out
adcb
notl
cmp
data16
jmp
add
or
inc
xchg
mov
sbb
cmpsl
test
or
inc
sub
pop
lds
outsl
loop
adc
cmp
or
addr16
or
clc
push
adc
pop
sahf
lods
xchg
mov
jg
xchg
cmpsb
push
fs
pop
xchg
cltd
inc
push
xor
pop
andb
orl
xchg
ss
sahf
adc
push
adcl
or
cmp
mov
add
ja
data16
xchg
test
sub
adc
orl
mov
adc
pop
or
push
stos
inc
gs
jmp
addb
adc
xchg
pop
jbe
nop
sahf
bound
lahf
inc
sub
lds
jge
fdivrl
pop
in
addb
lcall
pushf
pop
notb
cld
gs
cmp
mov
push
push
mov
ret
subb
gs
ret
adc
push
pop
mov
test
mov
add
inc
stos
sub
xchg
repnz
push
xchg
in
xchg
adc
push
add
gs
or
sbb
nop
lods
xor
test
jno
jbe
push
test
scas
xchg
loope
pop
fdivrl
jne
shll
mov
dec
mov
test
xlat
or
fildl
push
xchg
aam
push
arpl
inc
xchg
sbb
cmp
loopne
ret
out
jne
cmpsl
ret
in
push
int
loop
out
mov
cld
adc
inc
pop
dec
pop
fs
inc
addb
sbb
test
jbe
mov
or
fldl
int
sbb
lods
mov
pushf
add
andb
add
sahf
add
aaa
inc
mov
mov
xor
sbb
popa
addr16
xchg
scas
cmc
adc
lcall
mov
or
adcl
xchg
sbb
pop
jbe
or
fnstenv
or
push
sbb
das
and
add
inc
mov
into
xchg
popf
pop
and
dec
pop
inc
lods
fsub
faddl
in
jb
lea
cwtl
flds
lods
movl
jge
sub
xchg
outsb
notl
pop
in
test
out
sahf
jne
xchg
push
add
out
mov
push
aaa
adc
add
push
in
push
data16
sbb
lret
xchg
movsl
push
data16
xchg
rcl
mov
fwait
jmp
sub
jbe
cmpsb
push
cwtl
outsl
and
xchg
adc
fs
push
push
mov
into
xlat
fwait
in
movb
fbstp
testl
mov
push
jo
inc
mov
pop
stos
testl
adc
xor
leave
sbbl
outsb
sbb
sub
fwait
test
ja
pop
lcall
inc
or
mov
pushf
dec
ud2
orl
lahf
stc
lock
and
jp
push
jle
test
push
inc
add
popf
fldl
iret
inc
and
out
push
xchg
test
cltd
daa
cmpxchg
push
call
mov
adc
fwait
xlat
nop
add
out
popf
pop
sub
es
test
xchg
test
scas
ficomps
loope
test
das
xchg
data16
data16
dec
push
out
test
addr16
lds
cltd
adc
mov
sbb
mov
pop
add
in
popfw
mov
mov
xlat
test
mov
test
mov
lcall
sarb
sbb
mov
addr16
push
jo
lcall
testl
or
add
std
add
jp
daa
push
add
shll
or
pop
jg
push
jb
pop
mov
add
xchg
daa
push
jl
push
push
stos
imul
lahf
fsubs
lds
lds
mov
add
add
mov
and
lcall
jne
and
test
inc
mov
gs
mov
addb
insl
or
inc
mov
popa
test
data16
lcall
out
pop
in
push
or
mov
xor
jp
pop
pop
or
jl
mov
sbb
inc
adc
sub
xchg
cmpsl
xor
addb
push
orb
push
pop
rcll
inc
jb
ljmp
xchg
adc
loopne
outsb
aam
test
rcr
bound
add
test
popf
pop
fs
ja
mov
cmp
test
mov
popf
test
inc
test
enter
mov
adc
outsl
mov
inc
adcl
out
inc
rcr
filds
jbe
syscall
scas
pop
ja
out
jle
pop
add
push
loopne
sbb
orb
test
addl
pop
xchg
add
sbbb
xchg
pop
outsb
nop
js
addl
xchg
jp
scas
inc
fisubs
jne
inc
lcall
je
arpl
mov
int3
xlat
test
lahf
rolb
out
adc
or
dec
or
daa
or
rcrl
cmpsl
inc
dec
push
pop
jle
rorb
sbb
sbb
mov
dec
ja
cwtl
in
sub
popf
add
leave
jnp
movsb
popf
in
test
sbb
adc
sahf
pop
xchg
push
pop
dec
lcall
adc
push
pop
jnp
addb
gs
pop
mov
dec
ja
mov
mov
adc
ret
and
lret
mov
mov
test
inc
aad
bound
xchg
imul
jle
sbb
dec
cs
cmpsl
sbbl
pushf
add
popf
xchg
push
fbld
xchg
add
lahf
fwait
es
mov
rcrl
adc
pop
loope
mov
xor
inc
xor
or
xchg
adc
mov
ror
aam
inc
outsl
jg
addb
push
jns
sahf
ds
xchg
push
mov
xchg
leave
lods
cmp
movl
addb
push
sbb
ja
addb
aas
add
lahf
enter
andb
out
sbb
sahf
fwait
or
pop
bound
push
cmp
add
outsb
xchg
mov
adc
xchg
out
xchg
or
pop
dec
push
xchg
xchg
dec
or
jge
add
sub
arpl
pop
roll
push
mov
xor
pop
push
mov
addl
push
mov
or
jle
mov
add
addl
adc
inc
pop
scas
xchg
std
add
sbb
cmpsb
xchg
jg
xchg
stos
mov
dec
pop
add
pop
pop
jp
mov
push
jmp
inc
test
mov
in
adc
popa
das
pop
shrb
cmp
or
xchg
or
and
test
xor
fisttpll
and
inc
lock
pop
les
data16
push
push
arpl
xchg
adc
daa
xchg
test
push
push
lcall
add
adc
aaa
addl
inc
stos
sbb
gs
xor
cltd
jg
data16
push
adc
push
xchg
inc
pop
add
mov
jo
pop
fildll
push
push
outsl
shll
pushf
sbb
jns
arpl
daa
insb
or
loopne
les
sbb
pop
sahf
fdivs
add
ficompl
or
lods
dec
lret
cwtl
shl
filds
lahf
in
xlat
sahf
or
xchg
jnp
movl
das
dec
mov
inc
dec
xchg
inc
add
dec
xor
addr16
and
xchg
shrl
dec
xchg
enter
popw
inc
pusha
add
add
xchg
rorl
fisttpl
orb
xchg
imul
xor
mov
movl
repz
lods
lret
jbe
sbb
mov
pop
mov
popa
std
shll
sub
pushw
rcrb
xor
inc
cmp
adc
or
pop
ss
cwtl
adc
addb
push
aad
dec
xor
popa
mov
insb
mov
mov
cmp
add
xchg
pop
in
divl
sahf
sbb
out
adc
jno
sbb
mov
push
scas
pushf
fstl
dec
adc
popf
mov
popa
adc
jg
inc
xchg
push
fadds
pusha
sbb
aas
mov
xchg
jmp
addb
shll
sahf
pushf
std
loopne
sti
fwait
pop
into
cmc
push
cmp
dec
dec
in
add
cmpb
or
inc
jle
lock
test
mov
cltd
imul
push
frstor
mov
inc
or
andl
xchg
ja
jne
inc
test
fcomps
jnp
push
xor
dec
add
fadd
mov
data16
imul
in
aas
fwait
inc
bound
add
fistpll
leave
or
push
insb
jmp
pop
xchg
arpl
in
addb
push
decl
fisttps
addr16
stos
outsb
call
cmpl
into
mov
gs
roll
popa
pop
out
jecxz
jle
inc
fcompl
mov
aam
pop
and
dec
fs
pop
jno
enter
pusha
repnz
sahf
sahf
pop
insl
push
push
or
or
std
movl
add
sbb
add
lcall
bound
loop
test
sbbl
dec
pop
mov
lods
out
subb
pusha
sub
add
sbb
into
push
or
sbb
sub
jp
data16
fwait
inc
adc
pushf
sbb
mov
push
ret
stos
out
sbb
cmp
cmpb
leave
inc
sbb
xor
xchg
lahf
pop
jle
jle
jle
je
lahf
xchg
or
mov
sahf
cmp
xchg
mov
aas
inc
jnp
ja
lods
loop
ljmp
popa
mov
xor
xchg
inc
leave
or
test
movsl
cltd
pop
xorl
xchg
add
pop
das
push
addb
mov
push
or
push
scas
mov
adc
xlat
sahf
mov
adc
inc
movb
sbb
jle
pop
or
addl
mov
sti
mov
xchg
js
or
add
pop
mov
mov
andb
out
mov
xor
add
aaa
mov
jl
nop
es
pop
inc
je
xchg
bound
and
ffreep
fs
mov
or
dec
inc
test
inc
aas
sbb
out
adc
xorb
jp
sbbl
sbb
jnp
pop
arpl
cmp
push
nop
dec
aas
test
lret
pop
fdivl
roll
xor
test
adc
dec
out
inc
nop
leave
xor
stos
clc
sbb
mov
push
mov
mov
xchg
mov
mov
sbbl
or
mov
mov
test
mov
add
sbb
out
adcl
inc
cmp
sbb
add
outsb
lds
insl
xchg
or
sbb
inc
inc
testb
jmp
adc
stos
int3
cmp
in
jl
inc
lahf
push
xchg
mov
pop
out
nop
lahf
test
jne
cli
inc
lods
rorl
addl
push
inc
add
popl
lock
fs
inc
pop
adc
push
add
clc
push
or
sbb
jne
cmc
sub
dec
sub
push
cmc
fcmovne
test
fidivl
sbb
pushf
xchg
mov
jo
out
scas
cmc
jle
fists
mov
iret
jle
xlat
test
sbb
mov
dec
lea
or
test
aaa
gs
pop
or
fwait
test
pushf
out
mov
inc
int
jg
sbb
dec
cmpb
mov
arpl
mov
ret
outsl
addr16
ret
jmp
inc
add
push
incl
popf
dec
mov
test
out
push
or
push
out
mov
movsb
pusha
mov
xchg
ss
jnp
popf
push
jl
inc
xchg
in
sbb
xchg
sbb
push
mov
jle
inc
insl
mov
mov
popl
fwait
xorb
ret
mov
mov
fisubs
subl
mov
ja
add
js
xchg
push
jo
icebp
cmpsl
xchg
pop
jg
inc
and
jp
mov
or
pop
pop
inc
inc
xchg
jmp
outsb
out
add
jl
test
jbe
sarl
xchg
pop
xor
cltd
cwtl
cmc
or
xor
jmp
sbb
ja
add
and
sbb
cmp
imul
add
fcompl
addb
push
ret
add
sbb
mov
movl
mov
fs
roll
lret
cmpsl
xor
xchg
gs
xor
fisubs
and
mov
aaa
xchg
orl
jmp
xchg
jmp
test
sbb
sub
or
out
andb
xchg
orl
mov
mul
rorb
adcb
sbb
mov
add
insl
frstor
jbe
out
mov
jl
mov
test
neg
ret
imul
mov
xchg
inc
orl
push
cmpb
push
pop
addr16
pop
shll
pop
jle
adc
int3
xchg
scas
or
shrb
push
jmp
pop
pop
andl
dec
sub
data16
pushf
push
jne
xor
pop
mov
mov
mov
adc
push
pusha
dec
data16
jl
nop
pushf
test
iret
jne
jno
inc
inc
xlat
lcall
sub
adc
lcall
pop
add
lds
adc
js
pop
sahf
push
cmp
ljmp
into
fnstenv
add
sbb
jmp
inc
pop
mov
lret
or
mull
andb
sbb
setg
or
mov
mov
xor
mov
xchg
xchg
adc
insl
bound
lds
or
xchg
adc
jbe
sub
fwait
xchg
push
lcall
cmp
push
stos
shlb
pop
movl
test
or
orl
mov
xchg
xor
jbe
mov
mov
mov
inc
sbb
aam
stos
sub
popa
lods
test
mov
sahf
xchg
cmpsb
cmp
imul
mov
imul
add
push
cmp
icebp
xchg
std
pop
push
ja
imull
stos
sbb
cmc
data16
popf
pushf
repz
ds
jle
out
pushf
xor
lahf
insl
inc
pop
inc
data16
fwait
cmp
pop
fxch
inc
addw
cli
mov
repnz
sahf
popf
fwait
adc
adc
outsl
nop
popf
xorb
or
xorb
or
pop
incb
orb
sbb
xchg
sbbb
jo
push
scas
cmc
sub
add
gs
je
popf
mov
mov
xchg
inc
mov
ret
or
ret
insb
mov
gs
push
cmp
xchg
push
xorb
fidivl
or
stc
test
xchg
lea
dec
inc
inc
dec
ja
leave
dec
push
test
sti
scas
adc
jne
in
lahf
sahf
jl
and
sub
push
ja
data16
push
xchg
insb
xchg
sahf
jl
enter
jno
aam
push
jmp
lds
or
call
mov
test
repnz
xchg
lds
sahf
adc
fs
aam
fldt
hlt
xchg
cmpb
jae
or
mov
leave
lcall
rorb
fwait
xchg
inc
mov
leave
xlat
add
rcrb
in
bnd
inc
inc
add
sbb
pop
lds
pop
mov
and
push
mov
pusha
xchg
cmpsl
add
fisubs
enter
xchg
pushf
mov
mov
xchg
ret
hlt
fistpl
pop
iret
pop
cmc
add
sbb
jmp
push
shlb
addl
or
lahf
xchg
mov
daa
xchg
xorb
push
xchg
lret
sbb
mov
xchg
xchg
fdivl
lret
andl
push
dec
or
fsubrp
xor
mov
data16
das
or
roll
nop
push
popf
xchg
je
fwait
pusha
pop
pop
xchg
sbb
lahf
daa
test
enter
or
sbb
xchg
out
inc
imul
mov
scas
loopne
add
xchg
sbb
jle
outsb
push
add
lods
in
cwtl
je
pop
jne
dec
pop
push
cmpsl
fstpl
pushf
xchg
fiaddl
adc
lahf
in
loope
out
push
dec
aaa
mov
add
mov
pop
mov
mov
push
add
mov
adc
pop
incl
lcall
adc
cmc
cs
jle
dec
fwait
push
lea
stos
fldl
sbb
jl
xchg
ret
popa
adc
adcb
xor
sub
xlat
jno
pop
adc
push
data16
je
sahf
pop
fwait
jl
scas
push
inc
push
jns
orl
enter
xchg
xor
call
push
lahf
les
mov
fldl
gs
pop
xorb
adc
cs
jl
inc
xchg
fwait
adc
int3
dec
bound
mov
leave
stos
testb
add
xchg
pushf
sbb
rorl
lahf
xchg
rcll
xchg
xor
cmpb
imul
mov
shrb
pop
mov
dec
pop
dec
ret
je
ret
or
inc
popf
andl
out
insl
inc
shll
inc
jp
gs
jo
inc
mov
xchg
push
or
sarb
pop
dec
inc
push
inc
sti
test
lods
inc
movsb
inc
shlb
adc
ret
sti
rcrb
pop
add
rorl
out
sbb
cmovp
lock
jle
adc
lret
pop
mov
push
gs
out
fstpl
fiaddl
loopne
imul
in
inc
jge
or
sahf
mov
imul
xchg
pop
sbb
fs
jp
mov
addr16
scas
jl
sbb
subb
inc
mov
and
xchg
sbb
daa
pop
pop
xchg
jg
xorb
xchg
adc
adc
dec
hlt
mov
test
and
ficoms
add
andb
inc
notb
inc
mov
fstpl
jo
sub
sub
pusha
fcoms
xchg
popf
or
addl
popf
mov
jmp
xchg
cmpsl
xor
push
pop
data16
and
aad
cli
test
add
out
pushf
lahf
lea
sahf
pop
jb
ja
subl
add
add
inc
fs
jo
mov
xor
add
push
pop
lds
push
cmp
test
adc
lcall
push
or
jnp
addr16
adc
movsb
mov
inc
xchg
insl
mov
jge
andl
aad
imul
and
jno
sahf
pusha
cmpsl
bound
outsl
bound
popl
pop
xchg
lcall
cmp
xchg
sub
inc
xlat
push
mov
xchg
cmp
push
negl
popf
push
arpl
pop
xchg
sbb
lods
int3
cwtl
jno
addb
mov
mov
cwtl
jmp
add
mov
xchg
pop
dec
inc
lcall
repnz
inc
loope
sub
jbe
xchg
int3
pop
inc
cli
or
and
jno
push
or
rorl
out
push
mov
xlat
popf
arpl
cmpsl
popf
inc
incb
call
jo
adc
mov
cwtl
adc
or
push
cmc
xchg
stos
jae
add
dec
fdivrl
es
lods
ja
mov
mov
xchg
orb
pop
push
mov
mov
cmpl
jp
aaa
push
scas
int3
and
mov
push
imul
ret
xchg
rorb
jge
xchg
loope
popf
sbb
mov
addl
adc
fisttpll
int
mov
adc
rolb
add
test
adc
out
data16
std
xchg
sarb
sbb
negl
test
xorl
js
mov
or
imul
pop
aaa
push
pushf
outsl
mov
inc
fdivp
loopew
leave
lcall
test
popf
or
push
or
testl
xor
xor
dec
daa
dec
cs
dec
fnstcw
xchg
and
mov
sbb
xchg
popa
lcall
dec
sbb
cmp
cmp
add
ret
inc
or
xlat
sbb
dec
inc
lahf
roll
and
inc
fstl
add
cmpl
mov
add
aaa
subb
or
mov
jne
sbb
pop
jns
xor
inc
pop
inc
mov
lea
cmp
or
fwait
pop
out
inc
or
popa
sub
inc
dec
fimuls
shrl
cli
rclb
test
ret
sbb
das
xchg
ja
inc
jmp
mov
in
testl
xchg
sbbb
test
dec
push
mov
dec
jne
je
cmp
xchg
orl
mov
sahf
ret
adc
xchg
jge
adc
xchg
shr
sahf
mov
fwait
mov
or
push
xchg
xchg
movsl
stos
sbb
xchg
pop
push
inc
xchg
cmpsl
movb
or
popa
pop
xchg
shlb
pop
ss
sbb
stos
mov
mov
dec
cld
popf
push
mov
fldl
add
addb
data16
push
repz
mov
push
xchg
mov
sub
ficompl
xchg
sarl
xor
xor
pop
icebp
rcll
jb
xchg
pushf
fwait
clc
mov
pushf
dec
add
pop
aad
repnz
popf
jg
jne
push
sahf
push
sbb
sub
xor
ret
fistps
adc
push
adc
push
std
and
test
sbbb
out
and
fs
aaa
pop
inc
fadds
and
stos
mov
jp
fstpl
test
inc
out
push
ljmp
inc
add
fbld
lahf
push
ret
popf
insl
test
dec
mov
pop
popf
test
add
push
leave
out
lcall
cmc
push
bound
and
pop
sub
subb
arpl
or
lahf
pop
sbb
shl
fwait
outsl
loopne
lcall
test
imul
push
xlat
aam
jge
repnz
or
jl
es
or
addl
push
xchg
adc
lods
cmp
jb
push
add
push
lods
popf
pop
div
scas
or
fisubl
out
adc
push
add
inc
pop
add
push
pop
xor
xor
mov
adc
in
push
cwtl
pop
dec
scas
fldl
push
data16
loopne
mov
sub
roll
movsl
popf
jl
jmp
mov
mov
cmp
aaa
sub
jne
xor
jle
push
mov
xchg
or
inc
addl
sbb
push
ficoml
lods
lahf
mov
xchg
insb
ret
xchg
push
clc
and
pop
fwait
inc
testl
xchg
fwait
loop
arpl
mov
test
insb
mov
adc
andl
xchg
ja
add
push
add
xchg
out
bound
das
pop
fstl
test
lahf
inc
insb
mov
xor
int3
push
sbb
sahf
stos
mov
popf
sbb
lods
xchg
push
or
jle
addr16
push
in
in
add
jge
addl
fdivp
into
jnp
mov
mov
jl
ret
cmp
jecxz
and
inc
outsb
in
adc
and
dec
aaa
push
sbb
add
adc
sub
sbb
sub
ret
icebp
jbe
out
jne
addr16
lahf
dec
push
or
nop
dec
cmp
cmc
test
push
ljmp
xor
mov
add
lahf
push
inc
push
sbb
push
inc
rolb
push
xor
gs
cmovp
scas
clc
mov
xchg
xchg
jb
push
adc
sbb
pop
jbe
lcall
imul
pop
or
sahf
lock
push
jp
call
sbb
cmp
push
nop
xchg
fs
push
xchg
gs
xchg
insl
shrl
popf
inc
adc
mov
push
jl
insl
fadds
ret
fiaddl
pop
push
sbb
and
sub
jl
popf
mov
xchg
sbb
cld
cmp
pop
jbe
adc
and
add
out
adc
mov
sahf
test
mov
pop
inc
popa
inc
leave
mov
pop
xchg
xor
stc
or
sbb
push
sub
push
in
inc
xchg
lods
idivl
aas
push
dec
push
sahf
pop
fiaddl
xchg
adc
xor
xchg
xor
cmp
gs
inc
subb
ret
inc
push
jle
pop
scas
movsb
movb
or
mov
and
unpcklps
popf
ficomps
frstor
jb
addr16
adc
outsl
sbb
sbb
adcb
jmp
jo
xchg
push
cmpsl
or
rcr
fwait
mov
push
addl
jl
mov
add
and
xchg
sbb
mov
sbb
jecxz
shl
jo
loopne
mov
sbb
xchg
bound
inc
arpl
jecxz
faddl
jne
sahf
popf
mov
dec
mov
add
rcll
pop
es
sbb
aaa
mov
fists
xor
xchg
push
fadds
push
push
push
xchg
cs
jp
imul
cmpb
xchg
sbb
sahf
push
jmp
and
xchg
in
push
fs
push
jle
jge
adc
sahf
adc
or
imul
jb
sbb
push
jle
xchg
daa
sbb
xor
stos
testb
enter
orl
pop
push
inc
mov
or
xor
scas
shll
dec
inc
ret
sahf
jae
adc
sbb
pop
pusha
filds
gs
xchg
push
adc
insl
dec
cltd
inc
data16
xor
sbbb
int3
mov
sub
flds
jle
aaa
sbb
adc
pop
fsubl
xor
pop
and
imul
cmc
sahf
cmp
mov
inc
sarb
mov
nop
adc
fcomip
test
add
xlat
data16
pop
mov
add
inc
inc
movsb
ret
sbbb
inc
xor
int
addl
sbb
mov
fstpt
sbbb
popl
mov
sbb
aaa
test
loopne
xchg
test
xchg
fiadds
jg
ret
pop
mov
fmulp
and
popf
int3
orl
add
es
add
jne
insl
inc
or
roll
xor
mov
pop
mov
or
mov
xchg
sbb
pop
pop
mov
roll
es
insb
pushf
and
sbb
xchg
test
jae
mov
into
addb
lcall
clc
outsb
roll
iret
cmpsl
xor
mov
mov
xor
sbb
hlt
mov
sahf
xor
or
daa
cli
pop
pop
ljmp
test
hlt
faddl
inc
lahf
push
pushf
rcll
cmp
pop
xchg
scas
in
inc
nop
test
inc
dec
out
aad
xor
out
bound
xchg
jmp
mov
inc
xor
in
adc
mov
xchg
shl
popa
popf
inc
and
daa
sbbb
adc
lods
mov
mov
mov
sub
or
addr16
rorb
xchg
addb
xchg
test
mov
sub
les
sbb
sbbb
and
xor
pop
nop
lods
add
lods
test
push
into
add
xor
sahf
inc
or
stos
or
jno
dec
or
add
push
inc
and
inc
xor
adc
sbb
xchg
sbb
and
das
bound
insl
mov
jo
and
pop
sbbl
int
mov
stos
fimull
push
les
std
aad
sarl
cltd
xchg
dec
mov
in
pusha
arpl
inc
sahf
push
aas
insl
orl
lret
addl
mov
negl
mov
xchg
ss
mov
xorl
test
rorl
gs
pop
fstpl
cmpl
lcall
int
outsl
add
out
mov
aad
insl
adc
add
rolb
loope
push
pop
outsl
xor
inc
rorl
dec
mov
dec
push
inc
lcall
cmp
add
xchg
cmpl
dec
pop
jp
pop
das
pop
sahf
fimuls
mov
jle
stos
scas
add
aaa
mov
sbb
pop
jl
cmp
ret
jle
dec
jnp
cwtl
fwait
xchg
repnz
jne
aaa
xor
lea
pop
mov
sbb
push
lock
fneni(8087
hlt
loope
daa
or
xlat
xor
add
test
add
mov
push
sbb
aaa
mov
sahf
test
jno
and
pop
bnd
sub
add
cmc
push
dec
jge
jle
mov
or
roll
icebp
test
out
mov
test
sahf
jecxz
sbb
sub
pop
xchg
adc
sbb
inc
inc
jne
mov
lahf
leave
mov
pushf
inc
mov
jp
aaa
je
arpl
iret
ja
jne
push
inc
sub
fdivp
jg
out
sahf
mov
rcll
fs
jns
cmp
push
mov
mov
xchg
int3
pop
fists
push
pusha
inc
dec
mov
je
or
sbb
or
loopne
lcall
add
mov
adc
mov
pop
nop
les
inc
dec
xchg
pop
stos
test
outsl
in
lcall
stos
push
lds
popa
jle
cmp
pop
inc
sub
mov
aaa
cmpsl
push
fimuls
add
sbb
dec
movl
inc
or
mov
negl
popa
repnz
pop
rorb
jg
das
jnp
js
add
test
push
fdivl
jle
inc
cmp
pop
mov
data16
test
inc
mov
cmc
dec
adc
pop
pop
sahf
xchg
push
jno
xchg
xchg
or
mov
push
add
xchg
sbb
test
subl
fldl
lods
adc
outsb
sahf
daa
lods
xor
dec
imul
fwait
inc
xor
add
mov
imul
pop
in
dec
pushf
sbbb
sbb
lods
pusha
and
pop
add
mov
stc
dec
push
addr16
fiaddl
or
lock
xchg
lcall
outsb
repz
jmp
leave
push
mov
movl
mov
or
fs
std
jecxz
xchg
pop
adc
addl
mov
or
jne
test
lea
add
fisubl
roll
addl
sbb
andl
test
mov
sbb
and
shr
add
data16
mov
enter
sahf
or
mov
and
push
sbb
sub
pop
xchg
push
addb
xor
inc
cmpsl
push
stos
inc
mov
sub
nop
sbbl
and
xchg
push
imul
aaa
push
adc
testl
sahf
addl
popf
orb
xchg
mov
fldl
leave
add
cmp
dec
dec
dec
push
lcall
adc
pop
inc
push
dec
imul
pop
inc
sbb
loope
push
adcl
sbb
pushf
xchg
jmp
jnp
push
scas
push
inc
push
pop
mov
sbb
mov
lahf
add
aas
inc
fimull
addb
dec
push
mov
add
or
jp
out
orb
lods
pop
mov
jno
or
lods
inc
mov
xchg
data16
cmp
jno
pop
andb
or
mov
xchg
adc
out
test
or
inc
xor
xor
and
xchg
dec
inc
lock
add
xorb
movsb
sbbb
pop
pop
sbb
push
shl
outsl
cmp
xchg
dec
push
leave
sahf
lcall
aam
test
add
adc
mov
sbbb
cmp
inc
sbb
ja
inc
add
popa
push
mov
dec
xchg
bound
pop
pop
sbbb
or
xchg
inc
adc
jge
add
xor
inc
gs
or
xchg
lods
add
jb
push
bound
gs
inc
cmc
xchg
sbb
fldenv
and
adc
adc
ja
ret
mov
notl
sbb
lds
aam
fstpl
pop
cmp
test
push
rcrb
pop
fs
cmp
leave
cmp
movb
pop
lahf
fistpll
arpl
pop
clc
lcall
cmp
in
fimuls
mov
gs
fcoml
filds
sbb
and
mov
add
addr16
xorl
pop
or
inc
pop
cli
add
adc
push
insl
pop
movsl
jle
fistps
fwait
jbe
adc
mov
int3
pop
or
notb
jecxz
lock
pop
xchg
testl
inc
out
stos
fidivrl
jmp
test
jle
das
adc
jmp
add
lods
cltd
push
inc
fildl
repz
push
push
sbb
adcl
or
or
jno
daa
int3
adc
xchg
repnz
lcall
adc
mov
lods
insl
push
jl
lods
lcall
addr16
loope
test
fwait
inc
rcll
mov
mov
lods
cwtl
cmpsw
xor
mov
pop
das
mov
nop
enter
lods
idivl
fadd
xlat
sahf
and
test
mov
imul
imul
mov
or
pop
push
inc
push
popf
xchg
lcall
fs
jae
in
adc
or
xlat
xor
push
jg
xchg
or
push
cmpsb
pop
xchg
lods
mov
pop
inc
inc
aaa
test
fmull
inc
xchg
mov
sbb
inc
mov
data16
sbb
xchg
xchg
inc
push
or
cwtl
inc
popf
add
js
mov
adc
lock
push
jne
jmp
sbb
xchg
fs
inc
shlb
add
mov
push
out
jne
jnp
xchg
or
push
jge
add
mov
jne
cmpsl
push
lods
inc
and
sbbb
jbe
xchg
rol
cwtl
insb
cwtl
xor
jbe
mov
in
pop
cmc
pop
cltd
enter
pusha
ret
dec
rol
inc
sahf
jnp
jmp
test
mull
js
jle
aas
test
inc
sahf
arpl
cwtl
jle
lret
mov
jne
jmp
mov
jo
fiaddl
popf
pop
xorl
popf
imul
dec
dec
outsl
add
xchg
pop
cmc
pop
mov
lcall
pop
xlat
adcw
push
xor
ja
shrl
inc
sub
add
inc
or
cmp
imull
xchg
pop
xchg
in
fisubs
cmpsl
ret
add
pop
aaa
pop
jbe
add
out
lds
pop
aas
pop
andb
cmp
inc
mov
and
jbe
pop
adc
pop
daa
xchg
ja
jge
dec
add
jns
lds
sub
inc
push
cmp
dec
movsb
popf
loop
sbb
outsl
mov
ljmp
add
into
pop
or
pushf
inc
pop
pop
sbb
mov
in
gs
and
cmp
sbb
rorb
lret
or
cmp
sbb
dec
ja
jl
testl
negl
out
stos
sbbl
pop
pop
ret
test
push
data16
repnz
or
xchg
dec
out
mov
arpl
sti
sbb
test
or
adc
test
js
dec
out
cli
fwait
push
leave
mov
xor
lcall
inc
push
cmpsl
mov
pop
xchg
fdivl
and
cli
inc
add
aaa
inc
jbe
mov
inc
aam
insl
mov
sbbb
adc
push
push
gs
jmp
lods
mov
test
lcall
inc
mov
gs
stos
dec
lds
pushf
xchg
fs
ja
test
pop
sbbb
push
xchg
sahf
inc
mov
or
gs
pop
mov
fcmovnb
lea
push
nop
ret
hlt
inc
pop
gs
sbb
rolb
pop
js
mov
imul
xchg
imul
andb
xor
subb
imul
fistpl
test
sbb
roll
or
outsb
imul
cwtl
jle
addb
rclb
cld
pop
test
sbb
movb
add
add
insb
sbb
sbb
loop
and
pushf
or
daa
dec
add
leave
loopne
movsl
add
sub
addb
xorb
mov
dec
lcall
pop
shll
lds
add
data16
sbbb
mov
fmulp
enter
lea
push
fwait
or
mov
mov
or
pop
push
xorl
cwtl
or
test
cmp
loop
jo
add
and
and
stc
mov
insl
daa
ret
xorb
lahf
xchg
pcmpeqb
test
xor
push
in
popf
std
cs
jne
rol
push
imul
popf
inc
cli
add
addb
iret
scas
or
jnp
dec
inc
push
cmc
lcall
dec
ja
and
inc
inc
lret
add
jp
enter
jne
mov
rolb
jbe
sahf
addb
jnp
push
fmull
js
aaa
add
arpl
lret
inc
mov
imul
mov
into
pusha
test
lods
shlb
hlt
popf
test
negl
mov
push
outsb
add
faddl
gs
xlat
inc
aad
jne
jne
push
out
outsl
jb
lret
mov
or
xchg
shl
adc
inc
dec
pop
and
lcall
aas
sbb
add
adc
inc
mov
pushf
push
push
inc
add
outsb
test
mov
dec
gs
push
sbb
daa
sbb
int
rcrb
add
jbe
test
mov
data16
daa
pop
xchg
jnp
push
push
push
mov
jp
aas
add
pop
dec
jo
testl
loope
imul
insl
lea
mov
or
test
loope
xchg
mov
cmpb
fwait
xchg
mov
scas
jno
loop
xorl
fldl
pushaw
cs
mov
xchg
jbe
addb
out
dec
popf
out
leave
ror
jns
ret
push
sbb
adc
movsb
jo
xchg
pop
outsb
nop
sbb
mov
jnp
add
cmc
push
popl
rcrl
test
nop
loopne
pop
add
push
or
stos
jbe
outsl
sbbb
cmc
loopne
aad
pop
xor
dec
test
push
data16
push
mov
add
aam
ret
leave
sbb
push
cwtl
mov
mov
xchg
call
mov
sub
mov
out
add
mov
aam
and
lods
xchg
shll
ret
aas
inc
fcompl
or
mov
sbbb
or
sub
xchg
rcr
subb
jns
jne
push
inc
mov
lcall
popf
lahf
test
inc
ds
leave
inc
mov
hlt
dec
ljmp
jnp
insl
add
out
jle
xchg
and
add
test
sbb
mov
imul
sbb
add
mov
dec
ret
insl
cmp
andb
inc
push
je
pop
sbb
mov
adc
ret
fdivrl
jne
and
jle
or
orl
repnz
outsb
ret
mov
add
adcl
clc
fcmovb
popa
fcoml
add
stos
test
daa
xchg
adc
jp
inc
pop
pop
sbbl
mov
imull
enter
add
add
out
shrb
adcb
jp
mov
test
adc
clc
jl
xchg
gs
es
push
arpl
mov
rcr
push
clc
dec
or
xor
add
jle
jb
cmp
add
add
test
fistps
fstl
mov
ret
cmp
add
sahf
and
orb
pop
or
jle
idivl
push
sbb
pop
roll
cmp
push
dec
mov
push
cmpsb
fs
or
outsb
fs
push
mov
push
popf
roll
dec
xchg
and
jno
jo
mov
xchg
pop
mov
dec
fs
xchg
xchg
or
cmpsl
or
dec
add
pop
jne
ja
inc
jns
lcall
mov
ss
push
sub
dec
das
movb
pop
xchg
inc
xchg
je
ja
fadd
mov
mov
xor
lock
mov
jb
mov
jno
xchg
stos
adc
jl
push
sbb
arpl
pop
push
adc
pop
or
es
ret
mov
dec
push
add
andl
sbb
dec
mov
fistps
incl
or
inc
sbb
push
add
div
std
or
cs
data16
or
sub
mov
add
cwtl
leave
in
xchg
mov
addr16
lahf
jno
int3
rcrl
negb
repz
jmp
js
cmpb
clc
mov
mov
dec
pushf
pop
test
call
adc
xchg
test
jb
mov
test
sub
pop
xor
push
jno
mov
push
push
lahf
sbb
xchg
test
add
ret
add
pop
inc
rcr
fnsave
pop
xchg
subb
jge
pop
outsb
cmpsl
cmp
pop
js
inc
xchg
mov
pop
mov
add
js
jne
test
cmc
sbb
fs
movsb
stos
xor
and
rol
xchg
mov
repz
and
push
and
gs
or
mov
inc
add
subb
mov
or
faddl
adc
imul
mov
add
dec
xacquire
xchg
stos
jmp
imul
jg
dec
dec
sbbb
bound
rol
add
xchg
mov
pop
inc
xchg
outsb
fwait
pop
dec
jb
xor
add
inc
rorb
inc
ficoms
xor
add
ret
dec
les
push
cmpb
es
mov
in
xchg
push
imul
mov
add
ljmp
popf
pop
cmp
cli
sbbb
lahf
leave
mov
popf
test
sbb
jle
add
aaa
sub
jmp
test
push
pop
in
pop
pop
or
out
fldl
stos
jnp
and
inc
mov
or
jp
dec
inc
pop
mov
sahf
push
adc
sbb
sub
icebp
add
sahf
sbb
push
imul
ret
cmpsl
data16
push
enter
leave
mov
cmp
xchg
stos
xchg
cwtl
sub
filds
inc
sbb
xlat
test
and
xor
cmpsl
mov
dec
ss
push
pop
fld
mov
xor
push
orl
add
push
pop
add
dec
sbb
inc
ret
outsb
inc
xchg
cmpl
sbb
push
dec
icebp
imull
push
lods
adcl
imul
div
stc
jp
xchg
inc
pushf
dec
jae
push
mov
mov
in
or
mov
fcompl
add
popa
addr16
jp
repz
test
fwait
xchg
ja
or
pop
inc
mov
sub
ror
inc
call
pop
jo
dec
xchg
adc
dec
adc
out
orb
add
and
xchg
addl
negl
and
add
push
popf
popa
xor
test
mov
call
jnp
dec
stc
out
dec
pop
cmc
add
pop
push
testl
insl
subl
cmp
lcall
hlt
mov
push
mov
jbe
fwait
mov
inc
mov
test
push
sbb
and
ja
and
pop
ffreep
jne
faddl
loopne
mov
cmpsl
aas
ja
popfw
and
push
cmp
and
xor
out
inc
xchg
inc
pop
pushf
cmc
jge
outsl
fstpt
jae
xchg
cmc
pusha
fbstp
dec
push
fidivl
cmp
and
jb
outsb
cwtl
push
es
mov
ficomps
sbb
dec
add
push
fimuls
inc
sahf
mov
adc
rolb
cmc
sub
jle
bound
sub
andl
mov
aas
or
inc
sub
xchg
add
movsl
rcll
cmc
out
orb
insb
dec
out
xchg
sbb
sbb
push
dec
aas
xchg
imull
dec
fwait
popf
push
jno
pop
adcl
movsb
mov
cld
addb
addl
inc
repnz
sahf
ljmp
mov
fwait
xchg
xchg
dec
lcall
dec
add
push
push
pushf
call
sbb
add
test
stc
jne
jle
inc
test
pushf
in
or
ret
data16
sub
repnz
inc
faddp
subl
push
and
add
xchg
mov
mov
or
out
les
roll
sarl
test
jbe
lcall
mov
pop
push
andl
scas
andb
add
pop
out
pop
inc
adc
lret
dec
ss
mov
mov
subl
sbb
test
cmpl
addb
lea
lcall
jg
and
cmc
xor
negb
pop
subl
jle
notl
jbe
xorl
sub
mov
addb
fdivl
push
add
popa
xor
gs
scas
push
ljmp
lock
out
or
scas
shll
jne
pop
mov
mov
dec
popf
add
add
jb
push
xchg
jle
bnd
jnp
lcall
inc
lds
xlat
push
inc
into
test
jb
or
pop
addr16
cmc
xchg
andl
push
push
mov
sbb
and
nop
lcall
test
inc
popf
or
push
pusha
lea
mov
pop
adc
aaa
sbb
lret
loopne
or
orl
in
aam
xchg
mov
jmp
es
fsubl
lea
mov
ret
adcl
cmp
push
inc
pop
testl
mov
sbbb
and
inc
mov
push
inc
in
fisttps
xchg
pop
data16
enter
mov
push
xchg
loopne
call
ret
cmc
or
xchg
pop
insb
xchg
ficomps
mov
addb
data16
or
xor
cltd
jmp
add
jl
stos
cmpsl
fdivl
jecxz
push
mov
inc
jge
inc
pop
fiaddl
pusha
arpl
and
push
mov
inc
inc
pop
jl
inc
pop
push
popf
lock
mov
out
xlat
popf
andb
lock
nop
js
add
dec
inc
push
push
arpl
push
add
gs
add
adc
inc
mov
inc
or
incl
fcmovu
cmc
int3
shll
inc
push
sbb
sbbl
js
push
push
mov
fistpl
dec
test
jnp
jae
aam
push
sbb
fisttps
out
fcompl
dec
test
dec
sub
push
mov
popf
mov
add
mov
pop
inc
mov
or
pop
enter
out
fists
aad
xchg
lcall
jnp
daa
inc
cltd
xor
sbb
pop
cwtl
adc
rol
mov
daa
orl
sqrtps
jle
xlat
xor
and
xchg
push
fwait
into
push
cmp
mov
loopne
push
push
sbb
leave
add
lcall
call
fsubl
or
lcall
je
xor
jno
pop
or
aam
addl
jae
push
inc
lock
and
cwtl
fistpl
or
add
ja
lds
sbb
out
xchg
fdivs
gs
xorb
arpl
fwait
add
hlt
jne
sub
das
sbb
mov
xchg
popf
repnz
jno
test
xor
xchg
mov
mov
sub
add
mov
psraw
sbb
scas
lea
lock
and
test
sarb
leave
cmc
pushw
sbb
xorb
mov
pop
sub
inc
dec
das
aaa
cmp
inc
andb
pop
jne
jle
pop
inc
mov
test
icebp
testl
inc
xchg
movsb
mov
sub
test
rorb
add
mov
or
push
adc
xchg
inc
test
adc
pop
orl
hlt
mov
cs
test
imul
mov
cmpsl
test
or
xor
sti
pushf
ret
mov
ret
cmp
test
cmp
pop
xchg
out
mov
add
add
or
movl
jnp
inc
inc
ja
add
pop
sahf
mov
std
xchg
mov
lahf
sbb
fwait
jnp
inc
test
enter
xchg
xchg
out
push
sub
add
xchg
andb
rcll
jnp
xor
fdivl
gs
outsb
clc
or
hlt
adc
pop
add
fistps
lahf
push
cld
mov
inc
xchg
add
in
sub
push
mov
int
sbb
out
lods
cmp
add
mov
xchg
scas
gs
sar
fistpl
cli
adc
pusha
add
push
push
sbb
pop
push
inc
push
pusha
sahf
lahf
lcall
mov
gs
fcompl
xchg
xchg
and
pusha
nop
dec
test
add
inc
inc
mov
jp
fs
pushf
xchg
lret
flds
je
rcll
inc
lcall
push
add
ds
mov
push
lret
jl
or
stc
dec
jp
cmpsb
or
pushf
jp
jl
or
adc
cmp
dec
jnp
jge
pop
pop
xchg
js
pushf
inc
push
popa
inc
jecxz
addr16
out
lahf
bound
dec
ret
iret
xchg
pop
push
jae
push
bound
pop
int3
xchg
loop
bound
je
add
mov
jb
mull
jbe
inc
adcb
jg
test
insl
xchg
movl
add
cmp
outsb
mov
lahf
pop
gs
inc
lahf
cmc
pop
lcall
pushf
xchg
call
repnz
dec
rclb
jbe
pop
mov
and
lea
sub
mov
xlat
xchg
add
pushf
sbb
lahf
loopne
imul
sbb
lds
dec
xchg
xchg
lods
test
jp
ja
aaa
test
in
add
or
sbb
xchg
rolb
ljmp
push
push
sub
lods
aaa
inc
mov
div
and
pushf
adc
inc
das
jmp
jp
rcll
push
je
xlat
or
movsl
xchg
inc
pop
adc
mov
stos
testl
lods
mov
addl
jne
jae
test
lahf
bound
mov
xchg
data16
pop
mov
daa
jecxz
sarl
sbb
xchg
negb
jp
push
daa
cmpsl
pop
sbb
imul
outsl
sub
push
lahf
pop
les
sbb
insl
jnp
push
mov
mov
mov
jle
add
and
imull
xchg
push
lahf
js
lock
inc
arpl
mov
popf
or
out
hlt
loope
jl
cmpsb
adc
xchg
inc
push
ja
fcomps
jp
out
pop
xlat
push
nop
xorb
data16
or
loope
jp
sbb
sahf
add
add
adcl
fists
add
xchg
fists
pop
cld
ffreep
inc
mov
add
dec
ja
xchg
incb
xchg
add
test
adc
loope
push
orl
arpl
sbb
cmp
jg
ss
sti
jle
push
mov
pop
jbe
dec
push
pushl
fwait
add
data16
adc
popa
rcll
jmp
addl
mov
inc
ret
pop
inc
fbld
mov
dec
test
xrstors
outsl
sbb
and
sbb
sbb
xchg
repz
out
sbbb
pop
dec
fcompl
xchg
and
jle
pop
xorb
popf
inc
out
mov
push
test
xor
fcompl
ds
lahf
ss
jecxz
pop
add
bound
xchg
insl
outsb
mov
push
popa
dec
frstor
or
icebp
jbe
leave
pushf
lret
push
ss
insb
or
lods
sahf
adc
or
add
sbb
jmp
lcall
sub
nop
inc
mov
test
stos
sub
mov
data16
mov
add
mov
stos
inc
cmc
add
lock
inc
jns
rorb
fisttpl
jno
mov
push
dec
add
jbe
faddl
test
add
or
fstpt
out
imul
xchg
pop
dec
fldl
test
or
jb
dec
xchg
out
fstp
scas
stos
out
inc
cld
pop
push
test
and
sub
push
dec
push
xchg
cmc
fwait
inc
cmpsl
inc
jmp
scas
sub
test
sub
jne
mov
ss
jmp
subb
neg
inc
data16
ss
mov
push
sbb
jle
imul
in
add
add
test
xchg
dec
inc
mov
mull
add
xchg
pop
jg
pop
xchg
rcl
jbe
push
jmp
js
xcrypt-ofb
cmpsl
in
scas
push
pop
cmpsl
inc
fildl
stos
push
xchg
sbbb
fdivs
movsl
jo
test
or
xchg
dec
fwait
add
mov
adc
xchg
jp
jp
sub
pop
dec
arpl
data16
inc
or
aaa
in
rcll
adc
fsubs
push
jbe
sbb
pop
inc
mov
aas
mov
jbe
arpl
push
jbe
fbld
mov
sbb
aaa
pop
je
fs
jbe
daa
sub
rorl
ret
inc
lock
aaa
jle
roll
mov
mov
inc
aaa
xchg
popa
shl
faddl
push
pusha
inc
dec
in
es
or
imul
lds
and
mov
add
mov
pushf
xchg
pop
adc
inc
xchg
mov
cmc
push
jnp
inc
cmp
xlat
or
outsb
and
andb
fwait
pop
lret
or
fwait
ret
test
fisubrs
push
fstl
js
aas
pop
xchg
fldenv
jae
test
jo
inc
and
xor
test
inc
pop
xchg
or
in
pop
filds
pop
popf
enter
pushf
iret
test
outsb
popf
addl
insb
sub
jae
xchg
pusha
pop
pushf
filds
pop
dec
add
leave
jp
sahf
mov
aaa
addb
jecxz
dec
std
adc
roll
jne
and
adc
inc
or
loopne
pop
push
lcall
lcall
out
lods
mov
push
sbb
adc
out
cmpb
loope
xchg
fnclex
fstpl
int3
adcb
and
mov
pop
lods
es
push
dec
lcall
addr16
add
push
pop
xorb
pop
sbbb
mov
or
mov
repnz
ljmp
jo
inc
in
or
out
leave
mov
lahf
lock
pushl
cmp
inc
icebp
push
fiaddl
out
sahf
pushf
add
jle
pop
enter
jnp
pop
xchg
xchg
inc
dec
pushf
add
jg
jge
xchg
mov
xor
test
ret
add
and
leave
test
test
cmpsb
pop
add
pop
adc
mov
jge
cmpl
jp
pop
cmc
mov
jl
jbe
xchg
test
test
push
imul
sbbl
inc
jne
xchg
mov
or
fildll
or
add
aaa
sbb
imul
pop
sbb
fldl
nop
push
xchg
je
fs
jbe
loopne
js
pop
jle
mov
xlat
mov
test
fucomip
pop
cwtl
testl
or
push
xorb
mov
xchg
cmpsb
sbb
ret
jp
pop
mov
fiaddl
xchg
xor
mov
jb
pop
shlb
pop
sbb
and
pop
push
fisttpll
sub
mov
jge
or
add
fwait
push
and
push
push
lcall
pop
push
ljmp
mov
add
test
popf
inc
fwait
push
adc
int3
addb
mov
adc
pop
xchg
pop
xchg
fisttps
adc
mov
jne
js
xor
dec
push
inc
addl
jnp
icebp
xchg
lret
push
jg
xlat
jb
cwtl
std
sbb
pop
pop
lret
leave
in
mov
add
lock
mov
mov
pop
iret
mov
test
loop
aad
mov
sahf
sbb
test
shll
mov
xchg
inc
cmpsl
mov
ret
adc
add
sbb
arpl
push
mov
inc
loope
add
pop
xchg
inc
aaa
jbe
cmp
jl
inc
add
jg
pop
idivb
add
fcmovb
rcrb
int
nop
xchg
inc
test
or
dec
jmp
add
sarl
xchg
adc
pop
pop
push
sahf
call
and
mov
xor
xor
push
popa
xchg
fildl
imul
leave
sub
jl
pop
sahf
sbb
adc
fnstenv
add
pushf
add
arpl
push
xchg
in
cmp
push
xchg
dec
gs
xor
sbb
push
xchg
aas
add
pop
fildl
xchg
out
inc
xchg
popf
inc
sbb
ret
cltd
adcb
test
jb
lret
jle
xorl
push
daa
test
xor
roll
andb
lahf
or
push
add
add
sbbb
mov
dec
pushf
jge
xlat
push
lahf
mov
ret
jne
test
loop
xor
or
sbb
mov
lock
add
pusha
jl
mov
cmpsb
sub
or
inc
fistps
inc
pop
push
mov
lock
inc
cmpsb
jp
stos
mov
lds
push
jle
jle
or
or
addl
inc
mov
push
ret
dec
daa
xor
xor
push
fs
pop
or
push
aaa
push
or
jbe
mov
ret
loop
push
xor
loope
pop
imul
mov
xor
sbb
test
or
lcall
sbbl
push
or
out
mov
je
pop
xchg
stos
xchg
pop
rcll
leave
outsb
adc
jns
mov
or
inc
dec
pushf
xchg
xchg
add
add
and
ret
mov
or
mov
lahf
lea
add
cld
mov
scas
test
jmp
loopne
xchg
inc
mov
push
sub
mov
sbb
jp
inc
andl
push
add
loopne
mov
mov
push
and
xorb
add
popf
adc
lcall
sbb
mov
ret
add
sub
pop
xchg
gs
push
xor
mov
test
pop
ja
lcall
push
stos
pop
inc
mov
and
in
and
ss
xchg
ss
data16
or
test
jbe
sbb
xor
add
pop
fs
aas
fildl
or
andb
jg
into
popf
sbb
daa
xchg
std
bound
xchg
push
jge
pop
push
test
inc
mov
inc
fwait
push
popa
fcmovnu
inc
inc
in
push
bound
jl
cmc
loopne
jl
ret
dec
pusha
nop
imul
push
lahf
sahf
inc
mov
xor
sbb
sbbb
idivl
lahf
cmc
adc
pop
add
data16
cltd
movl
xchg
stos
lds
fldl
pop
fwait
cmc
lds
jnp
daa
sbb
loopne
outsl
ret
xchg
adc
and
or
jnp
cmpsl
push
pop
sbb
cli
fiadds
aaa
lahf
add
aaa
ficoms
dec
xlat
inc
jge
pop
cmpsl
inc
ljmp
add
jne
sbb
cmc
pop
loope
test
adc
fs
dec
in
xor
inc
or
inc
cmpsb
je
inc
xlat
adc
lock
pop
add
lods
addr16
lcall
jl
leave
andb
jp
xchg
les
push
sbb
lret
jg
inc
pushf
add
in
mov
div
mov
test
push
sbb
pop
test
cltd
mov
jae
sbb
jbe
ret
push
pusha
addl
pop
in
add
dec
add
ret
ret
inc
repnz
xchg
xchg
xchg
push
sahf
and
das
not
ret
and
jno
lcall
sbb
sbb
shl
inc
pushf
gs
ret
call
dec
push
data16
xchg
lods
mov
fcmovne
mov
shlb
in
jmp
scas
xchg
inc
inc
xchg
ja
mov
bound
pop
jo
test
adc
rcrl
imul
ret
data16
sub
xchg
pop
test
sbb
cmpsb
fidivs
into
jge
pop
leave
mov
xchg
fistl
test
pop
push
test
xor
pop
mov
fidivl
stc
jle
sbbb
xlat
or
xchg
push
testl
pop
loop
adc
mov
or
sbb
push
retw
xchg
fwait
orb
dec
js
pop
xchg
push
push
stos
push
xor
or
inc
andl
shll
stos
or
sbb
popf
jb
nop
cmpsb
bound
mov
jne
inc
fdivr
sti
mov
push
fisttps
int3
or
inc
sahf
push
jnp
xchg
mov
loopne
adc
add
mov
shrb
dec
xchg
out
mov
xor
bound
movsb
dec
or
sbb
std
loop
test
pop
adcl
test
ja
pop
or
pop
push
in
jmp
dec
cmpsb
ret
test
daa
or
mov
add
orb
or
xorb
and
les
push
insb
xlat
jmp
stos
movsb
shl
xor
push
jno
dec
lods
fldl
aam
sbb
dec
dec
out
xchg
lds
and
add
sbb
sub
adc
das
and
sbb
pop
gs
inc
inc
popf
add
xchg
pop
dec
dec
outsb
adc
addb
pusha
pop
aad
xlat
mov
pop
mov
add
ja
push
stos
je
push
or
inc
xchg
mov
nop
gs
mov
movsb
jp
jne
xchg
fiadds
add
xchg
adcb
sbb
and
pop
movb
scas
daa
sub
add
loope
subl
addr16
filds
lcall
add
out
mov
sarb
and
jo
inc
divl
lods
mov
sbb
out
inc
inc
inc
inc
sbb
push
mov
mov
jns
add
lods
popf
shll
push
dec
iret
test
xor
sbbb
mov
inc
and
add
nop
or
mov
push
cwtl
or
in
add
mov
adc
loop
enter
push
add
xor
or
mov
mov
dec
mov
fbstp
sahf
idivl
cmp
fldl
test
cmp
sbb
add
push
insl
pop
sbb
xchg
pop
aas
cmp
jno
jp
test
out
cltd
test
add
nop
aaa
test
xor
les
fwait
xchg
cmpl
inc
cmp
in
pop
pop
addb
or
movb
mov
inc
gs
fnsave
push
cmp
ljmp
adc
or
dec
loop
sbb
ja
mov
jbe
subb
push
cmp
cmp
or
pop
or
addr16
ret
mov
push
fcmovnb
mov
add
addr16
repnz
xor
pop
ret
dec
test
les
lea
fwait
fs
jne
sbb
push
lcall
popl
pop
leave
icebp
jl
xchg
adc
popa
cli
pop
data16
sbb
or
xchg
inc
lcall
add
xchg
roll
add
add
mov
add
lds
sub
xor
mov
push
inc
mov
lahf
sbbl
or
mov
add
dec
mov
ljmp
fdivl
stos
stos
mov
push
sahf
ret
aas
mov
jb
out
fs
das
push
xlat
ja
test
or
pusha
jl
fadds
sub
aaa
test
sub
pmaxub
push
cmc
add
pop
inc
test
sbb
mov
movl
movb
adc
add
xchg
mov
popw
sbb
ffree
or
iret
inc
leave
and
fistl
sbb
inc
push
push
mov
movl
cmp
icebp
stos
or
dec
insl
outsl
out
pop
mov
jg
sbb
fimuls
mov
mov
icebp
jmp
or
xchg
push
lods
or
push
std
pop
push
or
movsb
fimuls
xchg
imul
jne
sbb
jno
xchg
push
scas
outsl
dec
inc
xor
insb
daa
xchg
bound
insl
stc
or
stos
sub
test
cmp
cmp
push
ret
jp
jg
inc
rcrb
push
insb
xchg
data16
pusha
jp
or
sub
insl
loopne
inc
xchg
cmc
sbb
pusha
jb
push
test
call
pushf
inc
sahf
pop
inc
pop
andl
add
andb
subb
stc
and
add
adc
mov
out
xchg
fcoml
js
pop
mov
mov
mov
push
xchg
jl
data16
pusha
dec
pop
push
pop
pop
pop
faddl
mov
sahf
inc
sahf
das
or
add
enter
jp
imul
or
mov
add
xchg
jge
mov
jb
xchg
jns
outsb
inc
pusha
data16
dec
out
cwtl
pop
outsb
clts
mov
inc
jmp
push
mov
jns
test
lock
loop
adcl
dec
pop
cli
stc
or
fcmovnu
sahf
mov
sbb
bound
pop
std
addl
and
xor
adc
push
lea
push
or
xor
pop
push
pop
ret
inc
jmp
push
stos
daa
xchg
push
pop
lcall
insl
adcl
sub
sbb
mov
xchg
ja
or
add
je
inc
ret
inc
mov
cmpsl
mov
int3
sbb
mov
pop
push
inc
sbb
adc
xchg
inc
frstor
xor
xchg
out
xchg
or
mov
xlat
pop
fwait
inc
jle
pop
mov
ret
lds
mov
adc
nop
pushf
cmc
outsb
xor
jle
mov
push
push
movb
mov
push
dec
int3
insb
add
push
or
out
add
arpl
pop
mov
mov
cmc
xor
jnp
add
scas
mov
pop
pextrw
xchg
and
sbb
cmpsl
mov
mov
rcr
and
dec
test
pushf
int3
test
sbb
imul
ja
test
pop
inc
out
xchg
xchg
or
pop
mov
popf
mov
test
push
lcall
push
ret
mov
add
dec
repz
fistpl
xchg
lods
jns
add
stos
pop
lcall
xor
pushf
test
cmpsl
inc
aaa
stos
lds
pop
mov
or
push
lock
fildl
jmp
jp
mov
ror
sbb
repz
cmc
stos
adcl
adc
or
inc
xchg
mov
aas
roll
movsb
or
inc
sbb
jns
adc
add
mov
gs
fwait
lahf
sbb
xor
frstor
rolb
dec
popf
xor
jb
sbb
fs
xchg
test
jns
aaa
jno
pop
jnp
jo
pop
add
jmp
xchg
sahf
cmp
popf
dec
sub
push
dec
subl
jb
pusha
clc
cli
repnz
or
inc
scas
push
in
dec
xchg
mov
mull
xchg
sub
fwait
test
pop
movsl
push
in
dec
aas
inc
jne
cli
xchg
pop
sbb
push
ljmp
addb
pushw
adc
imul
cmc
inc
inc
adc
data16
pushf
inc
dec
mov
iretw
mov
sbb
mov
dec
popa
js
adc
in
sar
mov
sbb
dec
sbb
sti
xchg
ret
xchg
fildll
pop
mov
mov
mov
bound
xor
fwait
inc
mov
jnp
movsb
stos
jo
xchg
and
mov
push
int3
jl
test
sbb
mov
cmp
pusha
test
adc
mov
sbb
fidivs
push
test
mov
icebp
jnp
fildll
ret
add
jmp
inc
iret
daa
inc
jle
xor
movl
push
add
popf
std
mov
mov
sbb
arpl
push
cwtl
jp
inc
push
or
cmp
xorb
push
adc
dec
test
or
cwtl
xchg
add
jne
popf
pop
jbe
cld
rorl
iret
adc
pop
add
lock
xchg
leave
adc
jecxz
pop
pop
xchg
filds
mull
pop
inc
xorb
add
pop
pop
sub
dec
mov
ffreep
mov
push
std
dec
xchg
insb
inc
cmc
or
xchg
xchg
sbb
cmp
orb
pop
add
fildl
pop
mov
mov
divl
jge
xchg
lods
data16
notl
add
add
sub
test
cltd
mov
cmpsl
mov
and
xorb
mov
pop
sub
xlat
sbb
fsubs
inc
popa
ja
push
ljmp
mov
inc
inc
and
push
pop
inc
ret
dec
ret
cmp
aaa
subb
pop
mov
add
cwtl
jl
xchg
inc
lods
xchg
xor
popa
je
xchg
insl
push
or
mov
mov
fs
daa
or
inc
test
dec
mov
mov
fwait
xchg
xchg
cli
enter
scas
out
shrl
xlat
test
std
arpl
adc
pusha
pushf
add
push
or
mov
or
ret
test
or
dec
das
adc
fs
xchg
or
mov
xchg
or
pop
test
stos
add
pusha
sarb
insl
nop
hlt
bound
jg
jbe
popf
mov
mov
in
out
roll
loope
ds
mov
lds
jns
in
add
imul
stos
pop
jle
dec
popf
leave
test
push
push
test
push
ret
out
jge
xor
lcall
mov
gs
gs
popf
lods
les
push
inc
pop
test
xor
inc
inc
ljmp
xlat
dec
fstps
or
pushf
and
test
ds
or
dec
xor
gs
andl
mov
daa
push
data16
pop
std
nop
inc
or
inc
lahf
push
dec
stos
stos
or
dec
addr16
pop
inc
scas
inc
insl
nop
movl
les
mov
sbb
sbb
cmp
xor
or
pop
inc
negl
mov
ja
push
rcrb
dec
xchg
lret
sahf
push
es
mov
pop
inc
test
ljmp
xor
push
pop
lahf
notl
sub
ret
cmc
ret
mov
imul
push
addr16
jl
jle
jbe
call
nop
jle
inc
push
ficompl
lret
mov
sbb
pushf
or
pop
subl
fsts
jns
push
adc
popf
sahf
loopne
pop
pop
cwtl
push
ja
bound
inc
add
stos
cli
mov
jbe
xchg
iret
test
or
inc
ja
adc
mov
dec
xchg
sbb
data16
dec
fs
aaa
inc
jnp
dec
add
jnp
inc
daa
jp
add
mov
stos
loopne
fcmovnb
pushf
or
data16
pop
lds
or
mov
sahf
inc
push
adcl
mov
or
loopne
test
jmp
sbb
xchg
pop
mov
loopne
enter
imul
leave
xchg
into
fistpll
dec
pop
lcall
add
cmp
jb
sbb
orl
fs
daa
sbbb
adc
xchg
xor
add
arpl
sub
in
movsl
gs
xor
inc
lret
pop
les
lahf
fidivrl
push
jp
mov
push
fiadds
int
les
cmp
xchg
pushf
and
sub
test
int3
ret
insl
mov
inc
add
sti
cmp
push
inc
fiaddl
sti
or
jae
dec
lea
add
sbb
subb
gs
adc
mov
sbb
add
push
xlat
setle
sbb
lods
push
lahf
aam
mov
xchg
loopne
pop
xchg
push
cli
testl
pop
int3
jge
data16
xchg
xchg
xchg
lahf
test
stos
xchg
ja
outsb
das
dec
add
cmp
inc
test
addl
pop
arpl
and
fnstsw
xchg
test
pusha
inc
xchg
rcrl
mov
pop
lahf
push
fs
fwait
lcall
cmc
or
nop
nop
adcb
jle
or
or
insl
daa
xor
jp
sbb
addb
sahf
push
stc
add
popa
mov
cs
shll
aad
add
jbe
lahf
or
adc
add
push
or
xlat
inc
mov
faddl
outsb
mov
cmpsl
add
adc
pop
mulb
mov
ret
xchg
sub
add
inc
sarb
add
inc
je
jge
cmc
push
in
mov
mov
mov
dec
sbb
mov
jnp
std
lcall
loopne
and
xchg
clc
sbb
aaa
jge
pop
add
sti
or
and
mov
cli
inc
sbbb
stos
add
or
lock
lea
sbb
daa
pop
pop
mov
mov
mov
push
test
lds
inc
adc
pop
push
out
jmp
daa
xchg
jbe
xchg
sbb
add
cmp
pop
xor
addb
rclb
into
movsb
in
jle
jb
fs
bound
movl
add
or
into
xchg
or
push
pop
lds
shl
mov
popf
xchg
loope
sbb
lcall
lods
push
data16
loop
inc
inc
pop
outsl
inc
xchg
sbb
inc
stc
pop
gs
jno
test
mov
jg
jne
gs
sub
fisubs
sbb
setg
cmp
data16
in
xchg
push
jl
xchg
sbb
pop
call
add
outsb
inc
adc
push
fsubrl
xor
rclb
jle
lret
ret
sbb
mov
inc
inc
addb
fiaddl
sbb
and
inc
add
std
fldl
push
je
xorb
cwtl
sbb
or
fisubs
add
lret
gs
xlat
xchg
insb
fs
add
icebp
pop
push
dec
jle
test
push
fcoms
enter
movsl
hlt
push
jne
cltd
push
push
lds
cmc
jl
popa
inc
cmpsb
aas
or
push
add
inc
push
jb
inc
mov
xchg
ljmp
sub
or
inc
xchg
dec
mov
addb
sub
daa
dec
add
sbb
and
mov
jmp
pop
lods
cmpsl
cwtl
inc
insb
xchg
add
filds
push
data16
inc
out
icebp
test
imul
inc
lcall
out
sbbb
fs
movl
mov
divl
or
shlb
adc
jnp
mov
pop
ret
inc
les
addr16
dec
scas
jle
push
cmp
dec
jp
push
sti
int3
xchg
popf
inc
xlat
lock
jp
xchg
mov
xchg
ret
rol
lds
cmp
add
or
inc
add
rcrb
push
inc
xchg
sbb
dec
ficoms
std
mov
sbb
shl
rolb
push
add
daa
lock
xlat
test
or
dec
sbb
icebp
push
dec
xchg
in
mov
adc
push
dec
cwtl
sti
xchg
ficoml
pop
popa
inc
mov
xchg
bound
mov
sub
fwait
roll
add
xchg
xor
or
popa
push
addr16
cli
mov
xchg
inc
fistpl
faddp
jne
test
inc
cs
push
mov
adc
ret
call
pop
outsl
or
ret
and
or
pop
xlat
xchg
enter
adc
movl
jmp
sub
insl
lret
mov
nop
test
xchg
mov
notb
popl
and
push
xchg
dec
mov
jmp
aas
mov
or
xor
add
xchg
movb
outsb
bound
test
mov
out
dec
shlb
ja
subb
fistl
inc
adc
mov
xchg
xorb
adc
pop
xchg
sbb
mov
pop
add
and
mov
fs
lcall
add
ljmp
sub
rcrb
xchg
enter
or
jge
sbbb
outsl
xchg
push
leave
xlat
adc
or
pop
test
add
jae
popf
pop
xchg
pushf
inc
xchg
pop
test
jmp
scas
std
push
xchg
dec
cwtl
inc
pusha
popf
sbb
mov
cmpsb
idivl
sbb
push
gs
inc
ret
scas
test
stos
push
xchg
mov
test
in
arpl
aaa
inc
push
adc
into
xor
rolb
inc
lock
faddl
add
mov
gs
add
lods
nop
pop
loopne
cwtl
fildl
pushf
fistpl
sub
test
insb
or
data16
stc
fwait
nop
mov
xchg
popf
mov
test
sbb
ds
loope
dec
cmc
jne
xchg
mov
test
adc
ja
xor
in
daa
repnz
mov
add
jnp
inc
or
cmp
cld
popf
gs
pop
add
adc
jbe
dec
stos
push
xchg
mov
pop
inc
test
dec
ret
popf
enter
in
sbb
cld
test
arpl
sbb
inc
movl
test
xor
mov
addb
mov
pop
xor
lea
adc
push
jno
enter
ffreep
lods
addb
bound
inc
jl
dec
jecxz
mov
pop
inc
xchg
mov
jle
aaa
cmp
pop
leave
lcall
pop
les
addr16
push
sbbl
gs
or
stos
inc
icebp
pop
xlat
fbstp
sbb
popa
xrelease
test
push
pop
jl
xchg
leave
jge
addr16
leave
push
sbb
mov
sahf
outsl
mov
data16
sbb
mov
fs
daa
repnz
lods
adc
orl
add
dec
jle
sub
aas
xchg
lods
js
in
daa
data16
inc
jnp
aaa
cli
or
pop
inc
xchg
lcall
faddl
pop
in
and
push
sahf
add
insb
cli
jp
test
mov
aam
imul
jne
je
inc
jge
lds
xchg
push
fsubrs
pop
mov
cwtl
cmpsb
inc
test
mov
js
sbb
pushf
sbb
aad
outsl
in
push
xor
sbb
push
mov
mov
clc
xchg
mov
nop
sti
imul
xor
lock
mov
sbb
jne
jmp
push
lcall
popa
push
mov
rolb
testl
adc
jne
sbb
sahf
lods
dec
test
mov
rol
test
movsl
fwait
leave
mov
test
xchg
or
scas
xor
sub
jl
stc
pop
or
mov
mov
pop
xchg
mov
inc
clc
or
pop
popf
add
push
into
out
ljmp
js
push
sahf
sbb
sbb
add
pushf
inc
test
in
xchg
add
inc
lds
jno
gs
repz
test
rcrl
pcmpgtw
dec
add
sub
xchg
stos
bnd
mov
inc
mov
cmc
lcall
inc
xchg
gs
faddl
fadd
dec
jne
add
xchg
imul
push
or
sbb
fiadds
nop
loop
push
mov
pop
and
xchg
mov
popf
cmpsl
mov
push
or
add
jle
repnz
bound
icebp
push
sahf
aad
hlt
dec
push
adc
xchg
popf
dec
daa
pushf
pop
mov
cmp
inc
push
pushf
or
mov
mov
or
jb
negl
shll
sbb
lds
dec
or
push
xor
and
adcl
inc
iret
push
stos
push
or
fcmovu
dec
movsl
inc
bound
jle
aam
cwtl
or
andl
sbb
pop
cmp
mov
sbb
sub
daa
cmpsl
test
mov
pop
jle
inc
pop
mov
pushf
lds
jmp
lods
jne
jns
movl
sub
test
push
add
sbb
sbb
pop
lahf
aaa
xchg
loope
mov
inc
inc
mov
add
fs
inc
mov
mov
movl
scas
popf
add
push
pop
push
rorl
test
jo
cmp
push
xchg
add
mov
loopne
pushf
dec
aaa
pop
push
addb
popf
inc
andl
aaa
addr16
jl
mov
mov
sbb
fisttpll
add
addl
xchg
pop
femms
add
add
and
inc
push
or
inc
testb
push
push
add
mov
data16
js
jg
mov
add
adc
mov
sahf
lahf
and
xor
test
add
sahf
shlb
xchg
cld
sbb
cwtl
add
push
out
insl
or
addr16
sub
mov
push
fbld
push
pop
fwait
push
and
inc
pop
enter
lcall
arpl
lret
pushf
cmovae
lods
push
sbbl
jbe
cmpb
mov
subb
sub
mov
xchg
test
cmp
sarl
add
xchg
inc
out
xchg
fisttps
push
push
add
test
dec
push
add
jno
sbbb
inc
inc
xor
or
xor
push
out
test
ret
rcrl
ret
test
test
inc
mov
fsubs
jne
cmp
push
movsl
cli
jnp
outsb
jmp
lods
xchg
nop
push
gs
pop
fdivl
pop
mov
sbb
push
mov
fsts
lock
mov
adc
lcall
pusha
out
pop
pop
ja
pop
push
popa
pop
movl
pop
dec
dec
fwait
in
xchg
mov
mov
mov
add
sbb
jbe
fwait
notl
outsl
fnstsw
cwtl
ljmp
fildl
orl
jl
dec
pushf
inc
sahf
repz
loopne
mov
lahf
test
lods
push
xchg
add
xor
nop
adc
out
push
adc
cld
pusha
outsl
xchg
ret
dec
popf
add
ljmp
push
jg
jle
pusha
push
pop
inc
pop
gs
fs
xchg
sbbl
cltd
adc
add
clc
fadd
and
push
jp
xor
ret
lret
xchg
jge
test
ja
sbb
xor
sbb
sti
icebp
lods
sbb
sub
xor
xchg
andl
out
sub
fwait
adcb
ret
aaa
and
test
sub
mov
sbb
loope
pop
mov
push
jne
ror
lcall
pop
pushf
pop
lods
cmpsb
xor
testb
mov
inc
lcall
stos
pop
mov
lcall
xchg
std
pop
jbe
jecxz
lea
xchg
or
jne
push
cmc
stos
sbb
xchg
dec
dec
gs
lds
inc
test
in
or
sbb
jnp
inc
divl
mov
dec
dec
mov
or
add
or
ret
scas
cmp
mov
fs
push
dec
pop
pop
test
push
inc
sbb
jae
mov
lahf
rcll
fistps
adc
shlb
test
mov
dec
fnstsw
aaa
pop
dec
xchg
push
inc
add
movsl
jl
arpl
data16
bound
add
test
jle
inc
add
xchg
sbbb
xchg
xchg
subb
cmpsl
push
fisubl
popa
inc
dec
mov
popl
xchg
andl
popa
rcrb
popf
cli
pop
xchg
rcrl
cmpl
jae
mov
push
lea
adc
jns
xchg
inc
cli
sahf
btr
pop
lcall
test
sbbb
xchg
daa
add
ffree
adc
mov
adc
mov
adc
cmpsl
xchg
pop
mov
fistl
pop
test
add
dec
sbb
addr16
sbb
pop
cmp
sub
cmpsb
inc
gs
fld
scas
pushf
add
adc
cmp
fiadds
or
pop
xchg
pop
jae
xchg
jp
out
aaa
pop
leave
jl
xor
shlb
xchg
lret
inc
mov
cli
pop
mov
jae
popf
pop
dec
pop
inc
mov
pop
inc
xor
bound
sbbb
xchg
or
jmp
and
mov
or
cmpl
xchg
adc
repz
daa
test
es
dec
pop
inc
enter
add
push
gs
cmpsb
or
fstl
gs
mov
popf
rolb
cmc
jno
popl
pop
sbb
push
pop
gs
pop
in
out
fmul
adc
or
jns
pop
inc
insb
gs
xchg
je
in
sbb
imul
pop
outsb
lods
and
je
movsb
andb
outsb
fmull
mov
rcr
addl
mov
stos
loop
pop
sbbl
pusha
jae
inc
xchg
sbb
push
movl
push
or
fiadds
push
jb
divb
lea
cwtl
push
and
pop
sub
jle
test
aaa
cmpl
test
or
xchg
stos
jle
push
fistl
jne
and
fwait
push
lods
sub
lahf
imul
jle
test
jp
cmp
push
adc
jle
gs
ret
push
or
jl
leave
xchg
cltd
xor
mov
add
pop
add
and
shll
dec
adcb
imul
outsl
adc
xor
sahf
fcmovb
test
pop
data16
sbb
call
pop
stos
mov
push
jae
add
lea
rol
pop
ficompl
fisubrl
mov
mov
es
loop
pop
les
or
adc
add
push
jmp
scas
adc
xor
mov
loope
adc
movl
xor
pop
jno
pop
add
or
mov
pop
addl
in
into
in
gs
popf
test
ja
xor
pop
inc
out
popf
add
inc
insb
inc
xor
mov
sti
sbb
test
jne
mov
pushf
cmp
and
jl
lcall
or
popa
leave
inc
xchg
orb
rolb
popf
test
xchg
push
adcl
scas
out
cmp
add
ds
cwtl
pop
jno
add
stc
ret
push
imul
mov
sbbl
sub
xchg
aas
push
es
push
mov
sbb
cmc
cltd
sub
popf
xchg
push
cmp
dec
ficoml
push
neg
je
xchg
add
out
inc
pusha
adc
insb
aam
mov
popa
mov
pushf
jp
jnp
nop
mov
sbbb
mov
mov
push
negl
or
mov
sti
cltd
test
lahf
mov
mov
or
add
test
cmpsb
or
fimull
dec
pop
bound
addl
adc
dec
sbbb
ja
lahf
or
fwait
orb
mov
pusha
out
aam
in
pop
or
in
xchg
les
orl
xchg
adcb
push
dec
push
push
in
sbb
fildl
orl
cmc
add
int3
cmc
add
sub
xchg
jp
addr16
pop
push
jne
xchg
jnp
addl
dec
pop
push
mov
sbb
sahf
sahf
xchg
xchg
cmp
mov
cmpb
call
jbe
mov
stos
lret
xlat
ud0
add
push
mov
pop
mov
cmc
add
inc
inc
jo
mov
in
xlat
adc
inc
fwait
adcb
mov
lcall
insb
lret
es
iret
and
lcall
rorl
or
andl
mov
sbb
lahf
pop
and
daa
inc
xorb
iret
pop
pushf
inc
test
shlb
test
aad
xchg
and
data16
in
pop
cmpsl
scas
cwtl
inc
xchg
jmp
in
push
mov
outsb
pushf
pop
mov
sbb
inc
ret
lret
popaw
mov
daa
roll
push
dec
movsl
inc
pop
inc
jge
mov
in
fists
jmp
cmpsl
mull
jle
aam
xchg
fildl
ss
jp
pop
inc
add
mov
lds
shrl
jle
pushf
xchg
or
fnsave
daa
xor
data16
mov
popa
out
pushf
pop
xchg
pop
mov
push
pop
push
lods
inc
test
fcoms
inc
inc
test
sbb
insl
orb
xor
arpl
adc
pushf
fistpll
inc
inc
push
ret
mov
stos
jle
mov
shll
push
arpl
or
addb
push
addb
fsubl
add
cmp
mov
jge
sbb
dec
mov
xchg
add
bound
sub
mov
lds
pushf
dec
sbb
xchg
cmc
mov
jl
push
pop
ret
adc
push
les
jl
sbb
jl
jbe
sub
out
rclb
sbb
sub
pop
push
jb
int
dec
ficomps
pop
mov
fidivl
xchg
mov
sbb
pop
mov
jo
mov
stos
add
popf
bound
decb
xchg
test
js
out
jge
jl
mov
mov
and
and
adc
mov
xlat
out
arpl
ss
imul
fs
das
loop
mov
xchg
ret
push
movsl
inc
pop
insl
sbb
fildl
sahf
push
dec
ret
fstps
mov
pusha
ret
or
mov
fwait
mov
adc
xchg
adc
shlb
add
pop
xor
addl
out
sbb
adc
pop
mov
pop
xor
push
enter
dec
inc
test
or
jle
mov
push
movsl
sbbb
push
test
mov
pop
lods
xchg
mov
imul
imull
repnz
push
pop
xchg
test
ret
in
xlat
sbb
push
std
mov
and
lcall
dec
std
push
fadds
cmp
xor
test
andl
push
jp
das
fwait
inc
fld
lds
ja
xlat
xchg
test
loope
in
push
addr16
pop
fsubrl
sbb
pop
enter
add
mov
sbb
adc
negb
push
xchg
mov
inc
test
mov
scas
xchg
test
jl
aaa
dec
mov
ffree
xchg
out
pop
and
inc
pop
jbe
push
test
adcl
mov
int
popf
mov
and
pusha
mov
add
outsb
rolb
mov
sbb
mov
mov
insb
adc
pop
insb
fisttpl
cwtl
hlt
rcrb
push
sub
fldt
cltd
rolb
imul
lods
gs
test
popf
andb
leave
or
jb
fsubl
sahf
or
cmpsl
xor
mov
andl
sarl
rclb
loop
imul
cmpsl
jp
xlat
ja
pop
roll
adc
test
sahf
fwait
mov
sbb
jl
cmp
roll
and
ret
jne
adc
add
push
lods
mov
inc
pop
push
mov
pop
aam
mov
cwtl
aaa
scas
pop
and
jae
xchg
stos
fdiv
ja
orl
cmpsl
ret
sahf
add
in
inc
gs
sbb
gs
mov
xlat
and
mov
xor
int
cmp
xlat
xor
lea
ret
pop
pop
push
loope
in
stos
pop
aad
xchg
shlb
pushf
pop
mov
pop
adc
cli
pop
jbe
adc
add
fsubl
dec
mov
and
dec
pop
ret
inc
aad
jo
cld
addr16
inc
pop
dec
fwait
jmp
push
pop
cmpsb
rcrl
xchg
test
pop
incl
sbb
push
push
xchg
fwait
stos
cmp
test
es
and
mov
sub
clc
mov
sbb
lods
jb
xchg
lods
insb
pop
xchg
ja
fmuls
xchg
sbb
or
push
pop
jle
jle
and
pushf
and
lea
or
jmp
and
and
or
sbb
das
mov
adc
jge
pop
xchg
cmp
cmp
push
insl
loope
ret
orb
cmpl
inc
inc
repnz
jne
aam
sbb
xchg
xchg
imul
std
pushf
nop
lahf
sti
repnz
out
pop
mov
outsl
rcl
or
iret
setne
xor
dec
dec
ja
or
xor
and
adc
jbe
dec
sub
push
fs
xlat
push
mov
lcall
sahf
adc
mov
sbbl
mov
imul
push
jnp
pop
mov
xchg
xchg
inc
nop
mov
push
pop
sbb
aas
out
add
add
bound
cmpsl
es
loopne
jge
fildl
push
loope
lahf
mov
mov
add
add
dec
les
js
add
add
mov
jl
cltd
inc
jle
pushf
mov
inc
xchg
mov
jmp
shll
aam
out
add
xchg
mov
xchg
addb
push
rcrb
jle
stos
sahf
fwait
add
test
ret
lret
cmc
pushf
idivl
fildl
popf
lea
pop
out
sahf
addl
dec
mov
leave
xor
popf
mov
mov
jnp
inc
push
push
lcall
mov
jae
lds
loope
cmpsb
test
pop
lock
mov
mov
inc
inc
mov
dec
mov
shrb
adc
cmc
add
ffree
in
push
lds
mov
xor
pushf
pop
andl
fcompp
test
pop
sahf
sbb
jge
and
adc
xchg
mov
fstpt
imul
pop
lcall
jno
sbb
dec
fiadds
movb
jge
mov
push
jp
xchg
push
nop
jae
pop
push
rcl
dec
jns
inc
lock
movsb
cmpsl
push
adc
sarl
lcall
and
push
inc
inc
fiadds
jo
pause
sbb
adc
push
xchg
or
arpl
jg
inc
roll
lahf
or
test
dec
jle
test
loop
jo
dec
in
xor
xchg
inc
xchg
adc
fisubrs
ror
jecxz
test
ja
or
pop
mov
add
daa
or
push
push
push
jmp
repz
imul
mov
add
add
cmpsl
mov
bound
rcr
repz
sahf
adc
xor
jl
mov
test
mov
stos
daa
lcall
nop
pop
pop
pusha
leave
test
ds
push
inc
test
sbb
push
js
fwait
pop
push
out
fisttps
addr16
call
inc
inc
lock
mov
outsb
xlat
test
jnp
add
lods
xchg
add
imul
xchg
scas
fwait
shrl
test
pop
push
jnp
pop
push
les
outsl
xchg
bound
cltd
fbstp
dec
cwtl
jno
inc
leave
xchg
inc
adc
dec
stos
and
fmulp
std
cmp
lcall
rorl
ret
xchg
pop
in
cmp
sbb
rolb
test
adcb
inc
or
filds
test
in
ja
dec
scas
test
les
out
test
jo
fstpl
inc
sbb
jo
xchg
sub
cld
adc
loope
test
sbb
mov
sbb
lods
push
or
add
xor
leave
sahf
insb
and
jg
imull
inc
sbb
cli
dec
or
gs
in
ret
push
add
or
jg
lcall
mov
imul
mov
movsl
mov
icebp
xlat
test
mov
push
inc
stos
notb
jge
jp
dec
sub
jbe
mov
shl
mov
push
addb
inc
and
dec
pop
stos
push
inc
mov
test
aas
sbb
or
orl
inc
jnp
inc
fisttps
add
pop
sub
xchg
in
add
test
in
subl
outsb
ret
in
ret
mov
aaa
inc
gs
daa
xlat
subl
data16
cmpl
pop
fiadds
sbb
xor
js
inc
dec
scas
movsl
jb
sbb
scas
loop
jge
xchg
jle
jno
pop
es
dec
mov
sahf
cmpsl
xchg
dec
mov
out
or
jbe
lahf
std
inc
aas
lret
mov
movsl
pop
mov
sub
ss
sbb
jbe
aaa
xchg
sahf
pop
adcl
pop
add
fs
jle
aad
test
roll
lds
sub
pop
mov
inc
nop
test
jns
scas
cmc
dec
enter
imul
cmpsb
in
push
imul
out
cmp
andl
in
push
sbb
in
lcall
fstpl
data16
rorb
jnp
pop
jecxz
push
sub
call
test
fstl
inc
and
push
test
in
inc
push
jle
addr16
lcall
js
ja
sbbb
je
repz
pop
testl
ret
addb
lcall
dec
push
mov
mov
push
test
push
jge
sbbb
xor
out
aam
pop
lcall
add
inc
sbb
test
popf
fmull
outsl
jno
shlb
inc
clc
outsb
or
ss
stos
test
mov
ja
mov
sbb
mov
or
lcall
pushf
xchg
push
cmpsl
pop
leave
jle
jno
pop
cmpb
xor
ja
pop
xchg
popa
pushf
pop
mov
shl
dec
add
xchg
push
push
adc
andb
ja
mov
into
or
insb
pop
addr16
add
rcl
lock
rcll
mov
sbb
ja
ret
insl
pop
aaa
mov
jns
cmpsl
dec
popf
push
call
insb
or
ja
push
push
test
or
mov
mov
push
aaa
cmpsl
les
push
xchg
ljmp
xor
push
pop
pop
lcall
outsb
xor
xlat
and
xor
mov
xchg
cmpsl
add
pop
jne
lods
sbb
lds
cmpsl
setnp
xor
xchg
fwait
pop
dec
mov
pop
fistl
or
push
leave
mov
or
jno
pop
inc
movsb
lcall
lcall
push
sbb
xor
negl
mov
aaa
dec
sahf
push
dec
sbb
dec
pushf
fimuls
inc
mov
pushf
or
test
dec
inc
jne
pop
lcall
test
fadds
mov
movsb
or
out
sbbb
imul
cmc
lahf
sbbl
pop
dec
sbb
adc
fcompl
push
adc
out
lods
jne
pop
or
ret
or
cmp
mov
stos
sub
cmpsl
sbb
sahf
sub
dec
pop
xchg
arpl
daa
cmp
cmpsl
adc
add
js
pop
jle
pop
sbb
das
mov
inc
xlat
jl
jle
and
test
pop
push
stos
popf
inc
jg
shll
ret
mov
inc
xor
andb
cmp
sub
rcrl
add
std
or
jg
pop
jnp
dec
gs
loop
rcr
xchg
cmp
ret
enter
insb
dec
lret
inc
fdivp
cmp
push
cltd
push
pop
sarb
pop
push
inc
lahf
push
pop
dec
fiadds
out
or
popf
jecxz
mov
lds
shll
sahf
ss
popf
xlat
filds
pop
movl
sub
fiadds
xor
addb
jp
lods
sahf
pop
pushf
xchg
leave
sbb
adc
inc
dec
or
jnp
lahf
inc
rolb
mov
add
mov
push
out
dec
loope
inc
push
andl
jle
addr16
push
loope
or
mov
bound
pop
cmc
push
or
or
and
je
ss
loop
insl
jp
sbb
add
adc
pop
fidivrl
test
mov
add
in
hlt
jbe
adc
fisubrs
push
adc
jae
inc
xor
and
outsb
std
das
lcall
and
pop
mov
test
out
pusha
dec
pop
xchg
inc
test
xchg
inc
push
or
rorb
xchg
sub
data16
cwtl
pusha
mov
imul
into
leave
jp
popa
mov
dec
data16
sti
push
add
call
addl
or
insl
mov
inc
outsb
adc
xchg
lea
inc
add
cmp
andl
arpl
xor
jo
pop
sbb
and
mov
jp
jns
fwait
mov
xchg
pop
dec
sub
sahf
subb
add
push
adc
test
xchg
push
jecxz
lods
sbb
test
cmpb
std
sbb
and
adc
push
or
movsb
jmp
pop
ja
fisttpll
test
addb
jecxz
fwait
xchg
bound
scas
bnd
jbe
push
sbbl
and
inc
ljmp
or
mov
inc
xor
data16
sub
insb
jl
push
sbb
in
hlt
jle
lods
sahf
filds
mov
add
xchg
dec
test
jns
gs
pop
mov
jge
sub
daa
or
and
xor
sbb
mov
xchg
pop
or
fstps
popa
aaa
mov
push
fiadds
push
pusha
popa
xchg
inc
gs
fwait
pushf
test
inc
std
jmp
push
repz
pop
inc
pop
icebp
pop
mov
pop
sub
cmc
mov
insl
ret
mov
loope
add
mov
subb
je
addb
lcall
test
and
lds
xchg
xor
lea
inc
data16
mov
lcall
push
jle
imul
push
jp
adc
fistpl
inc
adc
aas
xchg
ficompl
sbb
xor
jbe
inc
or
cltd
iret
mov
int
lods
sahf
mov
pushf
add
xchg
jnp
push
fmull
fwait
ja
add
jl
push
pop
mov
addb
mov
xchg
xor
test
dec
xchg
sbb
adc
inc
xchg
mov
ds
mov
jo
aas
dec
push
pop
inc
mov
decb
stos
fisttpll
inc
push
xlat
or
fistpl
xlat
add
mov
sbb
sbb
outsl
xor
fwait
sahf
pusha
lea
ja
sbb
push
adc
clts
ret
fcmove
push
jl
xlat
push
mov
dec
pop
and
dec
cltd
aaa
addr16
shrl
fiadds
sbb
pop
test
sahf
stos
lods
xchg
mov
sbb
jge
lds
popl
ds
mov
or
mov
pop
ret
push
inc
adc
add
sarb
lock
or
loope
dec
adc
xor
inc
in
or
imul
ret
lahf
pop
push
outsl
fildl
inc
cmp
bound
jnp
testl
or
and
push
xchg
and
pop
add
sbb
lcall
jl
push
lods
add
stos
push
xchg
pop
movb
dec
jle
sbb
add
inc
cmc
xchg
out
dec
movl
inc
jp
testb
andl
pusha
ret
nop
jle
insl
movsb
inc
pushf
inc
xchg
or
addr16
daa
fcomps
cmc
les
rcrb
jge
adc
mov
pop
pop
frstor
cmpl
ret
inc
mov
addr16
icebp
add
jb
outsl
into
adcb
mov
xchg
js
data16
pop
sbb
or
pop
xor
mov
sbb
test
call
jno
jle
je
pop
mov
mov
pushf
add
and
inc
jbe
xchg
subl
cwtl
adc
jo
push
sahf
lsl
mov
or
mov
jb
lea
or
jge
andl
push
ss
mov
push
outsb
addb
lret
ja
push
or
add
addr16
mov
cs
jno
inc
add
notl
push
sbb
aas
out
sahf
or
push
dec
movsb
add
and
inc
cmp
pop
es
push
push
dec
xchg
pop
push
das
negl
xchg
jo
push
test
stos
push
add
pop
dec
leave
push
jb
sbb
cmpsl
ss
push
xchg
mov
jmp
push
lods
mov
pop
pop
ret
ja
lock
push
popa
mov
add
inc
add
movsl
sahf
jle
xchg
sahf
pop
pushf
bound
loope
jle
pop
out
pop
stos
fistl
add
push
pop
jne
leave
data16
ficomps
cmp
fwait
andb
rorl
idivl
ret
cld
push
push
push
out
add
xchg
cmpsl
addb
sbb
pushf
pushf
push
mov
or
xchg
or
addl
insl
mov
dec
ss
push
gs
inc
fwait
pop
shll
arpl
pushfw
pop
es
das
add
ja
test
shll
push
push
jecxz
push
shlb
xchg
daa
inc
add
rclw
loop
dec
es
or
lahf
inc
movsl
cmp
push
jmp
sub
sbb
push
push
gs
add
pop
fstpt
push
das
sub
lahf
pop
dec
mov
push
leave
push
inc
mov
test
sbb
push
inc
test
pop
fwait
popf
xor
fisubs
lret
faddl
add
gs
mov
add
cmp
inc
bound
pop
inc
sbbb
ficoms
add
push
loope
pop
test
addr16
jmp
add
pop
ret
or
push
and
movsl
inc
leave
mov
sahf
cmp
out
pushf
testl
push
mov
inc
push
pop
ret
inc
inc
mov
jae
mov
jae
push
inc
and
dec
mov
pop
and
roll
enter
outsb
push
mov
or
mov
inc
daa
cs
sbb
mov
sbb
mov
sbb
test
inc
inc
xchg
inc
lret
inc
lea
fcoml
mulb
shlb
sbb
push
aad
callw
xchg
xchg
cli
add
addb
pop
out
test
push
xor
mov
pop
cmpsb
test
adc
pop
push
jle
jne
dec
sbb
pop
nop
jbe
pop
orl
pop
or
test
je
xchg
filds
arpl
mov
out
cmpl
movsl
xchg
adc
mov
inc
outsb
cwtl
cmpsl
xchg
fwait
mov
sti
cmpsb
dec
push
clc
fnstsw
imul
test
sbb
addr16
cmpsl
subb
pop
mov
aas
sbb
inc
xchg
test
fwait
out
jnp
in
cmc
outsb
pop
insl
xchg
lahf
xchg
push
into
addb
test
or
jl
daa
sti
pop
inc
out
sbb
inc
cld
sbb
popf
xchg
add
ja
loopne
push
fdivrl
mov
fiadds
mov
xchg
lcall
push
pop
xchg
arpl
dec
push
int3
xor
lods
sub
test
je
sti
add
jne
jle
out
pop
pusha
mov
xchg
push
pop
push
imul
sub
mov
pop
mov
dec
nop
add
sbb
mov
test
xchg
ret
jne
sbb
mov
inc
fcoml
bt
mov
ja
imul
idivl
xchg
mov
inc
inc
dec
inc
addb
push
mov
lahf
xchg
sarl
add
notl
subb
jge
add
inc
nop
fiadds
cld
test
fs
sub
push
jp
mov
and
pop
dec
inc
rcrl
push
cmp
mov
sbb
mov
jae
add
sub
add
popa
pop
lcall
fisubs
sub
xor
cltd
rolb
push
mov
int3
dec
pop
push
icebp
mov
push
xlat
test
jb
leave
subb
roll
in
inc
sub
sbb
jp
aaa
lcall
push
or
mov
mov
mov
jle
push
filds
ja
fisttpl
andb
data16
jns
pop
test
push
addl
les
jl
push
pop
add
fs
inc
xchg
test
dec
mov
stos
das
popf
aaa
gs
pop
and
add
mov
adc
pushf
mov
xchg
xchg
cmpsl
rol
mov
rcrb
inc
imul
mov
filds
pop
sbb
rorb
mov
push
testl
add
sbb
movb
nop
sahf
aam
stos
shll
and
pop
addb
decb
inc
cs
cld
push
push
sarb
mov
js
pop
lcall
pushf
imul
fadds
test
push
pop
loopne
mov
insl
xchg
push
jnp
or
fiadds
mov
flds
push
and
stc
or
push
or
sbb
mov
lret
lea
xchg
andb
xchg
inc
data16
bnd
nop
sbb
out
add
or
gs
pop
dec
addl
push
inc
addb
fisubrl
push
ret
idivl
xchg
or
xorl
gs
or
popf
or
xor
sbb
add
jno
jle
fcmovnbe
xor
pop
sahf
in
js
orb
sbb
mov
sbb
outsl
xchg
ss
orl
clc
jle
xchg
test
or
mov
adc
insb
add
pushf
lea
and
lahf
cltd
std
arpl
adc
add
mov
ret
add
lcall
pop
sbb
mov
popf
jne
pop
mov
inc
or
dec
orb
xor
or
sbbl
in
mov
jbe
movsb
dec
popf
mov
mov
mov
add
popa
loope
sahf
pop
test
or
cmpsb
test
out
sbb
test
inc
mov
or
lods
movl
add
inc
jne
push
std
cwtl
push
push
clc
mov
push
mov
xchg
xchg
push
in
dec
xchg
subl
xor
mov
jp
data16
xchg
mov
outsl
mov
or
adcl
add
sub
stos
hlt
dec
in
cmpl
test
fimull
mov
ja
pop
sub
fldl
mov
jno
daa
test
pusha
cmpsb
cltd
pushf
inc
lods
adc
push
jg
sub
xchg
pop
and
repz
mov
fsubrs
adc
dec
push
and
ja
lods
sbb
ret
negl
ret
mov
cmc
adc
fwait
dec
add
in
sahf
sub
push
das
popf
add
shrb
jne
sbb
lods
add
inc
repz
pop
in
addr16
sahf
sahf
jp
insb
xchg
or
imul
push
cwtl
faddp
out
fs
leave
ss
nop
mov
subb
inc
xchg
addr16
dec
orl
push
test
pushf
add
cmp
push
addl
sahf
lods
xchg
imul
addb
or
push
or
mov
hlt
pop
fsubrl
mov
stos
lea
mov
mov
sbb
xlat
push
enter
jnp
dec
sahf
jns
mov
dec
ja
lahf
gs
cld
retw
js
daa
je
jns
clc
imul
pop
adc
add
rorl
sti
faddp
sahf
icebp
into
push
sub
addb
sbb
and
push
xchg
cmp
mov
push
push
inc
lea
add
adc
push
pushf
mov
and
xchg
or
movsb
aaa
sub
push
xchg
or
adcl
sub
addr16
xchg
roll
inc
leave
push
and
mov
pushf
loope
and
xchg
ret
sbbl
das
push
sbb
aaa
adc
fs
xchg
xchg
imul
xchg
push
shlb
xchg
repnz
push
les
push
into
jbe
fdivr
or
fdivl
pusha
dec
sbb
clc
test
dec
pop
jecxz
push
sbb
push
dec
divl
sti
push
pop
mov
jne
into
cmpb
scas
sbb
addb
mov
xchg
jns
or
xchg
push
popa
ficomps
test
lods
pop
xchg
sbb
lret
xchg
or
sbbb
data16
adc
rolb
lret
pop
shlb
leave
xor
dec
pop
sbb
js
or
scas
or
jmp
add
lret
sub
imul
add
jecxz
inc
movsb
testb
test
inc
rorl
sbbl
jecxz
cltd
add
rcll
jno
lcall
pop
cmp
fwait
or
or
jecxz
pop
push
inc
les
add
or
mov
lcall
fcompp
fcmovu
mov
in
mov
push
dec
hlt
xchg
cltd
sbb
sbb
jp
faddl
pop
jge
xchg
pop
adc
leave
xchg
andb
test
sbb
cmc
out
pusha
aaa
and
addb
sub
cmp
push
pop
pop
adcb
stc
add
outsl
or
scas
xor
pop
xorl
inc
xchg
mov
push
popa
stos
pop
dec
rolb
xlat
adc
inc
jle
cmpb
mov
mov
test
rolb
jmp
jnp
mov
outsb
cmp
rcrb
adc
sbb
pop
frstor
test
adcl
or
mov
scas
push
add
or
add
out
pusha
fdivs
sahf
testl
mov
xchg
xorl
lds
sahf
mov
je
sbb
sahf
arpl
jge
test
fisubrl
inc
and
andl
pop
fdiv
adc
or
push
dec
mov
ficoms
insl
decl
aam
dec
test
bound
pop
outsb
add
pop
dec
or
mov
ja
mov
lcall
add
xor
imul
sub
add
sub
cmc
fidivl
xorl
xchg
or
mov
test
dec
popa
divps
sbb
xchg
pop
or
mov
mov
clc
mov
orb
push
jo
fimuls
jbe
adcl
gs
icebp
stos
cmc
fwait
das
lds
sbb
sahf
sub
or
xchg
pop
cmp
dec
add
add
jp
sbb
mov
push
jle
xchg
mov
popf
add
aaa
movl
popf
cwtl
or
pop
push
jle
test
mov
scas
push
fisubl
movsb
lods
jne
bound
dec
dec
movb
sbb
jne
pop
lahf
mul
subb
fwait
test
cltd
xchg
cmpsl
pop
or
rorl
jnp
lret
popf
inc
fs
std
jns
filds
pop
adc
inc
addb
push
addr16
roll
jp
mov
leave
dec
rclb
and
enter
jl
pop
xchg
xorb
xchg
pop
repz
lods
jns
jmp
fists
rorb
push
pop
jae
xchg
popf
cmp
mov
add
mov
add
inc
push
imul
aaa
mov
clc
pop
movl
inc
popa
xchg
sbb
popf
subb
push
sbb
or
pushf
adcl
imul
mov
cmc
push
sub
mov
fsubl
xchg
pop
data16
mov
mov
push
roll
add
mov
or
mov
test
sbb
mov
xchg
cmc
mov
push
ffree
lret
addb
jnp
dec
mov
and
outsb
xor
mov
or
adc
inc
lods
xchg
ficoml
mov
dec
test
insb
push
ja
mov
cs
test
mov
mov
xor
xchg
add
sbb
data16
xchg
ret
jle
rorb
popf
dec
and
and
loopne
push
xchg
xlat
insl
scas
mov
out
sub
pusha
xchg
pop
xor
lahf
roll
add
jne
movl
lds
test
mov
sbbl
or
push
gs
lret
pop
or
andb
popf
cmpsl
pop
lcall
lret
addr16
push
dec
xor
test
jbe
pop
push
leave
dec
daa
inc
pop
mov
insl
sub
pop
data16
or
out
jb
pushf
dec
leave
inc
push
ret
cmpb
xchg
pop
fisttpll
lods
inc
pop
mov
popf
nop
pushf
aaa
cmc
jne
daa
cmpsb
pop
pop
mov
jbe
mov
or
xchg
and
jge
jl
notl
pop
push
inc
mov
pop
inc
test
aad
xchg
sbb
lahf
pop
ret
push
scas
inc
push
test
sbb
jne
push
cmp
push
pop
ljmp
rcrl
sbb
icebp
mov
aaa
lcall
stc
sbb
popf
add
push
jl
cmpsl
mov
js
push
pop
stos
fwait
mov
adc
or
xor
mov
fwait
and
aas
call
imul
out
adc
shlb
gs
sti
add
jns
movsb
imul
orl
roll
insb
ja
jle
mov
cmp
js
jp
pop
and
in
and
adc
outsl
popf
xchg
or
rcrb
or
jge
test
outsb
sbb
inc
push
xchg
pop
lds
out
sahf
xchg
frstor
repz
in
pop
or
dec
test
arpl
jmp
add
mull
dec
addb
daa
pop
lds
bound
test
repz
mov
xchg
push
subb
gs
push
rolb
rol
mov
sub
imul
sbb
push
xchg
jnp
inc
xchg
popa
sub
test
sbb
aam
shlb
pop
sarl
mov
std
inc
test
fidivs
lods
pop
addb
pop
dec
imul
lahf
jmp
dec
xchg
sbb
dec
pop
dec
pop
out
fdivl
das
inc
push
fiaddl
outsb
jecxz
dec
stos
sbb
aad
dec
ret
fistps
lods
jno
insl
xchg
enter
sub
inc
inc
aad
lahf
in
push
add
lret
stos
xchg
call
pop
fiaddl
loopne
fcompl
sbb
cmp
mov
ret
xchg
cmpsl
bnd
addr16
leave
add
push
cmpsl
push
popf
inc
xor
clc
test
cmp
out
fistpl
repnz
ljmp
out
subl
out
add
pop
icebp
sbb
sbb
dec
mov
sub
in
push
jge
pop
cmpb
adc
outsb
frstor
mov
jle
je
inc
gs
sbb
lcall
or
pop
xchg
shlb
leave
mov
gs
call
lahf
adc
xchg
addb
fsubrs
push
pushf
inc
mov
hlt
push
ja
sahf
mov
add
push
scas
jne
sbb
std
lahf
xchg
pop
stc
cmp
inc
sbbl
adc
test
mov
outsb
cmpsl
push
add
pop
adc
push
add
or
or
inc
faddl
pop
ss
or
push
es
loope
pop
mov
lock
push
dec
cmpsb
loop
sbb
sbb
mov
loop
xchg
inc
mov
dec
mov
stos
lcall
es
idiv
adcb
lret
leave
dec
or
sti
push
adcl
test
dec
addb
xchg
in
or
add
and
add
daa
test
mov
dec
fldl
ljmp
mov
incl
jecxz
les
mov
mov
jge
incl
mov
pop
lcall
test
ss
push
imull
sbbl
daa
enter
pop
out
in
aaa
fistps
xchg
ja
add
inc
mov
cmp
pop
dec
lods
enter
out
and
sbb
mov
or
leave
test
xor
icebp
pop
js
jb
mov
cltd
out
nop
inc
scas
mov
dec
and
outsb
cmpsl
fisttps
pusha
cmp
pop
add
dec
inc
ret
sahf
add
inc
daa
mov
mov
sbb
and
adc
push
or
inc
pop
jne
push
pop
adc
xchg
mov
adc
dec
shl
mov
sahf
fidivrs
mov
lahf
pop
sahf
or
pop
xchg
sahf
sahf
lret
inc
std
and
cmc
popa
inc
sbb
xlat
test
xor
inc
sahf
popf
bound
ret
dec
mov
lcall
outsb
mulb
sbbl
add
addr16
xchg
or
inc
mov
fistps
ljmp
dec
or
jnp
adc
popf
or
test
addb
or
dec
pop
les
notb
push
rorb
lods
lds
cmc
mov
sahf
add
sti
test
pop
mov
dec
ja
inc
or
data16
fnsave
ds
dec
dec
out
or
sub
inc
add
pushf
adc
pop
xchg
shll
mov
fldenv
jp
ja
xchg
insb
inc
inc
orb
test
popf
fiaddl
js
test
pop
and
pop
mov
out
jl
rcrl
pushf
dec
dec
mov
mov
jne
cmpsl
enter
ja
push
outsl
adc
push
filds
xchg
outsb
push
push
mov
push
out
inc
lea
inc
push
sub
fsubrl
adc
push
inc
push
xchg
jne
je
sbb
scas
stc
inc
xor
cmc
popa
mov
or
xor
cltd
sbb
addb
setp
popf
xor
inc
repnz
xchg
daa
outsl
adcb
jnp
std
pop
inc
stc
pop
jne
rcrl
mov
pop
bound
xor
popf
enter
push
jb
insl
leave
sbb
jmp
pop
jns
xlat
mov
pusha
xchg
dec
or
add
inc
data16
iret
push
lds
fimull
pop
jbe
pop
lock
cld
dec
mov
sbb
sahf
xor
adc
jo
push
lret
push
inc
out
mov
addl
stos
popf
popf
lods
mov
jmp
inc
pop
push
sbb
jae
dec
fcompl
and
repz
jecxz
or
xchg
rorb
push
bound
sbbl
pop
mov
or
pushf
faddl
lcall
push
pop
sbb
ficoms
inc
adc
inc
fldl
xchg
xor
inc
stc
xchg
xchg
push
shlb
addb
and
and
test
dec
add
jno
or
sbb
mul
add
bound
scas
inc
pop
push
rcll
inc
cmpsl
fcmovu
pop
jmp
leave
stos
xor
ret
outsb
and
test
jb
xchg
out
sbbw
mov
push
xor
adc
movl
lcall
scas
sbb
xchg
push
add
jl
imul
or
mov
lgs
dec
mov
push
xchg
jbe
pop
int
inc
loop
xlat
sahf
mov
mov
jle
sbb
xor
mov
dec
inc
or
insb
inc
inc
lods
push
push
fidivl
pushf
add
mov
outsb
lahf
divb
sbb
addb
in
insl
fcompl
faddl
pop
adc
pop
test
and
pushf
adc
lods
popf
push
push
jbe
and
mov
pushf
test
dec
or
push
and
inc
aam
roll
cmc
ds
dec
mov
roll
lds
mov
sbb
dec
lahf
cmc
andb
movsl
rolb
addr16
cmc
bndldx
fcmove
add
inc
add
fstpl
ret
pop
cmc
lahf
adc
repz
pop
mov
push
data16
test
fwait
xchg
loopne
pushf
add
xchg
pop
cmp
data16
inc
insl
xchg
fistps
cmc
sbb
addr16
ret
popf
sbb
mov
or
sahf
xchg
xorl
popa
xchg
lcall
sbb
sub
dec
popa
jg
cmpsl
pop
jno
stos
jge
popf
sbb
jge
enter
pushf
push
dec
jp
rcrb
rolb
mov
jns
push
adc
xchg
add
or
mov
or
std
ja
jns
ret
fwait
gs
mov
pushf
xchg
mov
inc
xor
xchg
push
jnp
push
mov
adcl
xlat
test
push
sbb
sbbb
push
mov
ret
pop
xchg
xchg
sbb
and
inc
jns
inc
jg
add
mov
sbb
nop
pushf
rol
bound
dec
andb
jb
push
arpl
aas
push
push
xchg
pop
imul
mov
xor
cltd
fmull
ss
inc
dec
dec
pop
pop
mov
jno
or
dec
pusha
mov
andb
sub
inc
sbb
mov
lcall
and
daa
shll
pop
xlat
dec
pop
fiaddl
mov
stos
inc
push
pop
in
push
push
call
pop
mov
or
mov
fs
jl
dec
cmp
fldl
lahf
mov
mov
test
or
outsl
mov
and
or
mov
jg
xchg
or
icebp
movb
or
pop
faddl
or
push
or
xchg
inc
ret
in
fs
loopw
inc
push
sbb
sbb
ret
test
add
cmp
data16
or
mov
insb
push
loopne
pop
fbstp
stos
sub
or
xchg
lahf
dec
sbb
xchg
sbb
addr16
icebp
sub
mov
or
mov
xor
lcall
lock
mov
test
sbbl
or
and
das
mov
xlat
adc
xor
add
xor
inc
xor
aaa
daa
inc
popa
nop
xchg
pop
jl
adc
fnstenv
xchg
rclb
repnz
ret
jnp
mov
add
je
jecxz
pop
push
int3
in
dec
sbb
add
inc
jle
xchg
push
xor
fdivp
leave
out
fucom
data16
sub
cmc
pushf
scas
mull
fists
stc
test
adc
les
jg
mov
sahf
jne
push
fwait
inc
jno
pop
dec
jne
mov
mov
dec
sub
rorl
add
adc
mov
inc
mov
add
aad
and
mov
mov
xchg
inc
mov
pop
mov
notb
push
xchg
inc
icebp
pop
or
mov
pop
pop
in
lods
cltd
test
cmp
popf
call
inc
mov
mov
inc
fldl
sub
sbb
andl
fs
add
shll
xchg
pop
test
inc
pop
ret
ret
sbb
pop
sub
xchg
rcrl
fs
stc
popa
cmp
jmp
inc
xchg
test
inc
pop
lea
dec
sbbb
inc
lock
fiaddl
rolb
pop
xor
lcall
decl
jo
insl
mov
cltd
inc
push
push
notl
lahf
lods
inc
inc
into
lcall
incb
push
sub
jl
inc
adc
addl
cmp
or
add
and
fidivrl
in
gs
inc
les
pop
test
or
pop
sbbb
push
popf
jns
or
fdivl
lods
lcall
or
sub
adc
loop
jl
push
ja
lret
sbb
xlat
jl
jle
lahf
xchg
xchg
mov
insl
test
enter
loop
add
or
xor
ss
push
out
rorl
sbb
xchg
pop
xchg
int
bound
fistpll
cmp
faddl
push
sub
inc
dec
setl
mov
leave
rcrl
cmc
and
xchg
sbb
addb
pop
add
mov
inc
aaa
inc
scas
loope
lahf
jle
pop
popf
pop
mov
es
push
pop
test
xor
lcall
xchg
es
js
popf
mov
lret
out
mov
add
pop
jp
lds
les
mov
or
out
xchg
dec
sbb
popf
add
mov
xor
addb
js
imull
jmp
mov
cmp
test
filds
icebp
jbe
inc
mov
mov
stos
push
sbb
leave
dec
jge
mov
mulb
arpl
lret
add
xchg
adcl
pop
out
loop
add
inc
cmc
inc
out
in
mov
inc
push
cmc
adc
cmp
bound
dec
jne
mov
repz
lock
or
inc
out
out
push
fcoms
test
loop
jnp
rcll
sahf
sub
inc
pop
cmp
cmp
or
out
dec
inc
inc
sbb
setb
push
push
loop
dec
pusha
stos
setge
jle
loopne
data16
xchg
mov
popf
filds
adc
xchg
lods
and
jae
pushf
nop
cmp
inc
inc
out
xchg
cwtl
out
cli
or
push
push
mov
movsb
adc
or
orb
mov
movl
pop
jle
push
cmpsl
pop
inc
notl
add
incb
jbe
mull
jmpw
push
popf
aaa
stc
ret
push
or
aas
pop
nop
loop
and
ja
adc
scas
push
pop
mov
adc
or
lret
dec
mov
add
mov
dec
dec
and
mov
or
aaa
faddl
ret
cmpl
push
jo
jbe
lahf
xor
xchg
dec
imul
data16
cmp
push
fwait
pop
add
stc
dec
add
xor
add
xchg
jbe
xorb
xor
mov
subb
sub
push
fbstp
mov
adc
pop
mov
arpl
nop
popf
push
cwtl
cmc
jne
add
loopne
inc
test
pop
ffreep
and
faddl
lcall
mov
mov
shl
out
push
fwait
es
and
test
lret
testl
insl
mov
add
fstpl
jp
sbb
cmc
push
push
filds
fs
adcb
addr16
pop
pop
or
aaa
mov
and
jle
mov
filds
jmp
shll
pop
xchg
add
ret
dec
pop
sbb
lcall
mov
adc
cmp
outsl
testb
mov
push
mov
jb
lea
lcall
xlat
pop
push
adc
out
mov
fiaddl
movl
xchg
mov
fdivl
jle
and
bnd
push
ficompl
mov
pushf
pop
inc
addr16
stos
inc
gs
and
fs
jbe
cmp
movl
xchg
subb
push
jl
and
test
filds
js
test
sbb
pop
mov
xchg
lcall
adcb
fs
mov
cwtl
pop
jl
js
pop
jle
fisttpl
pushf
push
mov
rolb
dec
scas
gs
mov
inc
lock
into
pop
cmc
xchg
xlat
and
sub
push
pextrw
fs
jle
sbb
sahf
xorb
pop
xor
ja
pop
test
iret
push
mov
or
mov
orl
mov
add
add
subb
jl
or
pushf
rcll
mov
jne
fs
pop
xchg
test
nop
stc
xchg
stos
xor
inc
add
aam
stos
xor
aaa
xchg
xchg
or
dec
mov
mov
xchg
xchg
jb
pop
jbe
sub
add
add
adc
mov
leave
sbb
cmp
or
aam
dec
lret
mov
push
xchg
push
loope
push
jnp
pop
pushf
sbb
push
ret
inc
mov
xchg
add
lahf
xchg
push
lock
outsl
lcall
push
sahf
int
lret
add
arpl
outsb
ret
lcall
aas
add
push
pop
add
or
mov
add
insb
mov
add
pusha
lcall
xor
subl
scas
xchg
test
xchg
push
pusha
mov
fs
dec
enter
addr16
addl
xchg
outsb
test
inc
fwait
out
leave
and
jmp
test
lahf
pop
filds
aaa
mov
inc
inc
xchg
pop
out
movb
or
jle
inc
rorb
lcall
fnsave
aaa
test
jl
mov
mov
insb
pop
inc
pop
mov
pop
add
in
push
sbb
sub
daa
jecxz
arpl
insl
mov
lds
dec
or
push
sub
mov
or
jae
sarb
jle
insb
push
loop
pop
inc
mov
clc
aam
mov
inc
neg
fmull
xchg
mov
jbe
or
scas
dec
dec
bnd
mov
sbb
inc
lods
addr16
test
cltd
inc
pusha
jne
and
mov
push
inc
daa
icebp
jl
sbb
lcall
popf
nop
pop
cmc
fstl
mov
push
jge
dec
inc
xchg
push
and
adc
lcall
sbb
orl
les
fists
or
js
mov
pop
pusha
insl
aaa
test
cmp
mov
repnz
sub
addb
cmpsl
fwait
popf
lock
nop
pop
push
aaa
jb
inc
pop
ret
pop
jle
js
mov
jne
jmp
xchg
inc
test
popa
push
sbb
ja
shrb
sahf
popf
dec
outsb
mov
sbb
dec
lahf
cmc
shll
addr16
stos
mov
inc
dec
cmc
dec
fiaddl
mov
mov
addl
push
pushw
xor
hlt
pushf
outsb
or
xlat
xchg
lcall
mov
pushf
jge
out
dec
xchg
sbb
out
stc
lds
popa
das
testl
jg
popf
dec
movsb
fsubl
test
sub
dec
aas
popf
sbb
push
cld
loop
pop
push
push
pop
adc
cmpb
push
mov
repz
mov
arpl
das
popa
xchg
out
jle
mov
xchg
cmpsl
mov
js
jbe
fldl2e
ret
xor
inc
or
jp
daa
or
clc
push
inc
add
lcall
test
cmpl
xchg
inc
stos
test
test
xchg
into
push
mov
push
mov
fldl
adc
subb
fildl
mov
mov
mov
rorl
dec
cli
inc
xchg
pushf
in
outsl
sbb
inc
in
jnp
xchg
or
pop
push
jnp
jle
out
inc
dec
test
cmpsl
push
mov
xchg
lahf
add
stos
sub
int3
popf
ficompl
and
xchg
mov
inc
loopne
cmc
jnp
leave
sahf
push
xor
or
pop
xchg
mov
cmp
inc
enter
dec
inc
xchg
enter
sbb
xchg
lcall
rcrb
or
lret
cmp
mov
mov
mov
inc
call
rcrb
pop
adcb
or
fiaddl
lret
xchg
shr
pop
test
mov
push
sbb
leave
mov
ret
orl
cmpsl
test
rcll
ja
sbb
pop
popa
or
sbb
faddp
jne
push
or
shlb
mov
mov
dec
fcomip
stc
inc
add
sahf
sahf
xchg
cld
scas
es
dec
pushf
daa
pushf
ret
inc
in
or
push
addb
mov
fdivs
lcall
imul
mov
movb
inc
jo
filds
fs
je
inc
jp
mov
bound
test
sbb
mov
std
push
popf
add
scas
cmpl
add
inc
mov
pusha
xchg
add
xlat
test
adc
push
sbbb
mov
inc
jle
out
cmp
add
cmpl
test
jns
lcall
jne
jl
pop
adc
adc
xchg
outsb
addl
adc
cmpsl
xchg
sub
arpl
ret
dec
inc
or
push
fstpl
mov
xchg
inc
mov
mov
out
mov
xchg
aaa
sbb
pushf
add
sub
js
push
add
sbbl
lcall
add
mov
mov
push
jle
cmp
and
popa
pop
jl
pop
inc
add
add
sbb
xchg
mov
int
clc
repnz
lcall
popf
pop
loopne
je
pop
cltd
test
jne
mov
xchg
loopne
adc
adc
dec
adc
adc
ret
jne
and
push
xchg
adc
cld
ss
add
pop
xchg
push
xlat
add
push
movb
xor
popl
fs
pop
pop
fwait
outsb
mov
cwtl
test
es
adc
syscall
xchg
mov
nop
lcall
or
call
add
bound
int
cmp
addl
add
mov
jmp
push
mov
cwtl
cmpsl
add
xlat
jbe
movsl
cmp
es
cmp
stos
push
cli
jl
addb
jne
mov
addb
sub
ja
mov
xor
pusha
jle
push
push
pop
inc
test
cmc
daa
subb
jle
xor
or
pop
test
xlat
cmp
add
xchg
push
movsl
jp
push
pop
sbb
inc
push
push
les
mov
pop
pop
mov
inc
or
pop
mov
xchg
add
ja
xchg
push
cmpl
bound
data16
lcall
ficomps
xor
adc
cwtl
sbb
lcall
jge
inc
push
mov
fsubs
or
xchg
inc
adc
incl
addb
xor
cmc
fists
fnsave
jl
cmpsl
sti
stc
inc
xchg
cwtl
lret
rolb
test
in
mov
lcall
inc
and
scas
mov
mov
or
pop
mov
xchg
stc
shll
mov
jns
popa
leave
pushf
ficoml
cmp
sbb
shrl
andb
imul
stos
std
fwait
cmc
adc
xchg
aas
les
and
lcall
inc
cmpsl
lds
je
inc
cmp
test
push
inc
dec
xchg
xor
push
pop
fwait
xor
das
addr16
xchg
push
or
jbe
push
into
adc
jg
mov
sbb
xchg
pop
mov
inc
fistps
sbbb
lahf
mov
lcall
push
jle
xchg
xor
movl
sbb
jge
rolb
cld
sahf
fistpll
inc
fs
xlat
inc
pushf
ret
cli
xor
xchg
sahf
xchg
or
cmpsl
adc
sysexit
in
inc
andl
popf
push
push
or
sbb
adc
add
int3
test
or
cwtl
mov
lcall
mov
xchg
mov
or
pop
mov
das
cmp
pusha
cmc
push
jle
out
xchg
andb
sbb
pop
in
xchg
ret
push
pop
aaa
push
shll
les
xor
lds
add
roll
xor
mov
imul
rorl
cmpl
lock
mov
sbb
outsb
dec
leave
dec
enter
sub
add
faddl
dec
xchg
loopne
fwait
push
pop
dec
add
cmpsb
sbb
add
fdivrl
popf
js
or
divl
lret
add
mov
sub
pop
loop
add
push
nop
dec
pop
pushf
fcoml
in
dec
mov
in
popf
push
pushf
inc
addr16
xchg
mov
jmp
xor
notl
cmc
jp
add
adc
stos
test
or
sbb
scas
adc
jne
stos
mov
mov
lret
dec
sahf
jecxz
dec
out
std
cmc
sbb
mov
xchg
push
add
adc
decl
enter
test
dec
xchg
ja
loope
inc
push
push
dec
pop
sahf
lahf
lock
xor
ja
fmull
jae
or
xor
mov
test
pop
cltd
imul
faddl
sbbb
mov
inc
mov
fisttpl
pop
push
xchg
dec
or
lods
xchg
out
sbb
pop
jbe
movsl
mov
aaa
mov
mov
jne
out
inc
stos
cmp
arpl
ret
aam
sbb
mov
sbb
fucom
addr16
test
sbb
add
into
jbe
jne
pop
mov
jmp
inc
sbb
fidivs
dec
popa
cmc
push
leave
mov
mov
push
js
test
pop
sahf
xchg
mov
cmp
or
push
xchg
mov
aas
loope
mov
mov
mov
jnp
push
fimuls
or
popa
stc
or
sub
push
stos
or
push
movl
mov
push
popf
insl
data16
lods
sub
leave
pop
outsl
add
xlat
sbb
pushf
insb
fadd
xchg
or
jno
sbb
lahf
push
test
pop
mov
mov
or
inc
mov
clc
std
hlt
and
xchg
dec
sub
xlat
inc
fiaddl
addr16
shl
mov
mov
sub
test
leave
popf
test
lock
inc
cmpl
mov
sbbb
and
and
or
dec
xchg
cltd
inc
push
fwait
xchg
mov
sbb
xchg
jno
xchg
mov
test
in
mov
ret
test
add
test
shl
ficompl
push
push
call
fwait
gs
aad
sbb
jl
lods
add
lret
adcl
out
or
js
addb
pop
sbb
mov
or
out
std
dec
mov
inc
jno
add
jbe
xchg
add
jle
ficoms
push
jl
xchg
addb
or
mov
pushf
bound
sub
xor
pop
push
sub
xchg
rcr
rorl
xchg
push
ss
fdivl
push
ret
leave
xchg
bound
xor
enter
xchg
add
xchg
mov
nop
mov
pop
pushf
lea
call
and
push
push
jg
lea
lcall
data16
lahf
xchg
cmpsl
cltd
pop
outsl
pop
test
push
add
xorl
adc
push
shrl
fdivrs
sbb
scas
cmp
push
dec
inc
inc
gs
add
push
test
push
xor
jnp
rcll
ret
and
push
stc
push
inc
inc
mov
data16
inc
pushf
ret
pop
fs
cmp
movb
mov
and
jo
mov
addr16
cli
dec
cmpb
xchg
aas
pop
push
mov
adc
xchg
inc
ret
cmp
jae
sahf
testl
dec
sbbb
inc
inc
fists
xchg
add
adc
sbb
js
dec
jne
xchg
aad
ret
loope
push
inc
jle
jno
xchg
pop
sub
pop
lahf
push
cmc
jecxz
sbb
rclb
je
add
jbe
fistpll
or
xchg
cmovbe
adc
fnsave
test
in
filds
adc
cmp
jge
xchg
aaa
inc
fidivl
mov
cmp
jle
mov
mov
andl
inc
jbe
inc
rcrb
adc
jo
add
xchg
xchg
mov
pop
jbe
pop
add
pop
push
push
out
sbb
xchg
lcall
mov
mov
gs
sbbb
inc
or
mov
gs
dec
push
xlat
rclb
test
jl
inc
lea
mov
ffree
enter
add
lcall
test
outsb
push
xlat
or
addr16
insb
mov
jp
or
mov
add
jmp
jl
pop
imul
add
gs
inc
xchg
xor
aam
data16
fimull
add
test
fimuls
push
push
and
fwait
push
xchg
adc
push
or
outsb
push
dec
mov
shrb
data16
das
mov
and
pop
adc
data16
dec
pop
xchg
pusha
mov
add
push
jecxz
test
pop
jmp
jl
faddp
subb
or
out
push
or
loope
jl
in
or
test
enter
dec
lea
xchg
mov
sub
inc
andb
mov
or
cmp
xchg
test
jmp
inc
add
data16
sbb
jae
mov
popf
mov
test
pop
jne
or
jae
mov
daa
adc
sbb
inc
jge
inc
data16
scas
sbb
sbb
pop
pop
xorl
out
arpl
mov
push
cmp
push
inc
inc
pop
lret
andb
fs
sub
jne
mov
fisttpll
jle
push
das
testl
or
addr16
fcmovb
jb
lock
add
outsl
in
add
sbb
jl
movsl
push
pushf
cmpl
aam
mov
push
pop
dec
subb
or
xor
ret
shl
out
movl
popf
decl
xchg
dec
xchg
cmp
add
fwait
pop
sbb
push
xchg
jae
mov
shll
repnz
xchg
sbb
out
test
push
cltd
push
push
stos
loope
lock
sub
adc
ss
xchg
lahf
repz
jo
int3
testl
or
or
sbb
rol
adc
xchg
add
adc
mov
lcall
imul
add
push
and
xchg
sbb
cmpsl
adc
mov
pop
leave
xchg
lcall
lahf
xorb
fsubrs
shll
xorb
pop
or
mov
inc
jnp
daa
stos
fmull
jne
adcl
nop
call
lcall
sbb
roll
pop
out
add
add
andl
or
mov
insl
das
inc
xchg
lods
lret
movsl
jo
faddl
adc
push
das
dec
dec
fwait
test
sub
push
jge
or
dec
stc
pop
pop
das
xchg
add
pop
int3
lahf
and
mov
sub
je
jne
andb
cmpb
jle
sbb
cmp
sub
jne
ret
inc
mov
cs
inc
daa
and
outsl
addr16
sbbl
nop
jns
movsb
add
out
pushf
gs
in
jmp
inc
cmp
jb
or
cmpsl
push
cli
fisttps
test
sbb
addl
mov
sbb
daa
add
mov
fistps
jl
or
stos
jmp
pop
push
scas
fcomip
sti
mov
fidivl
jae
cld
mov
sbb
push
inc
inc
test
lcall
loopne
mov
fildll
mov
test
dec
mov
jp
ret
lods
mov
cmpsl
pop
xchg
data16
add
mov
mov
add
leave
push
mov
or
inc
xor
pop
pop
pushf
jne
dec
mov
pop
xchg
lock
add
data16
cmovae
cli
mov
je
push
push
mov
leave
inc
mov
add
and
js
pop
pushf
mov
and
test
fisubl
data16
sahf
ret
adc
rcll
push
out
mov
js
sbb
xor
push
jg
inc
pushf
xchg
push
scas
mov
or
ficomps
lcall
pop
xchg
repnz
jmp
push
inc
lds
popa
jecxz
add
mov
mov
dec
and
je
add
roll
pusha
test
std
dec
mov
test
mov
insl
jg
cmc
or
sahf
inc
stos
fyl2xp1
sbb
jno,pn
push
bound
fildll
adc
inc
jo
or
sbb
xor
pop
cwtl
jnp
scas
push
call
or
or
ret
dec
aaa
push
faddl
or
call
ja
test
dec
repz
pushf
mov
pop
and
push
movl
add
mov
mov
test
pop
cmpsl
repz
jne
cwtl
jle
addr16
and
sbbl
xchg
scas
push
subl
in
inc
popf
pop
cmp
movsb
xchg
pop
cmp
mov
lds
xchg
pushf
xchg
sarb
pop
adc
sub
adc
dec
iret
dec
data16
aam
mov
orb
push
subb
shlb
add
adc
jmp
inc
loopne
xchg
inc
push
jge
xchg
mov
sbbl
lret
sub
imul
or
add
cmpsl
add
les
or
mov
xor
fwait
into
dec
pop
leave
fiaddl
or
dec
jle
cmp
inc
dec
lcall
data16
lcall
or
inc
pop
xchg
push
es
mov
sbb
aaa
inc
loope
fcoml
jmp
push
push
dec
mov
adc
mov
inc
aam
rorl
or
stos
xchg
cltd
add
sahf
popf
adc
in
sbb
dec
cmpsb
test
push
or
loop
pop
fwait
mov
inc
test
push
push
lds
pop
dec
popf
pop
push
cmp
add
flds
mull
das
push
les
lock
xchg
push
outsl
dec
xchg
sbb
sub
gs
fisubrs
vpunpcklwd
add
sub
xor
xchg
or
xchg
fistpll
push
enter
pushf
subl
lcall
gs
popf
add
sti
ret
sub
dec
jb
aam
movl
ja
sahf
sahf
out
adc
adc
aaa
add
out
cmp
lcall
fdivrl
ret
mov
jp
filds
or
lods
jno
add
xchg
stos
inc
mov
aas
mov
dec
cmpsb
in
inc
and
adc
popa
inc
loopne
mov
ret
cmp
sbb
sbbl
loopne
rcr
inc
jle
push
rolb
pop
cmc
xor
stos
popw
pusha
mov
or
push
cmc
pop
jbe
inc
data16
out
push
fs
ja
lods
or
pop
fwait
inc
dec
xchg
xchg
faddl
pop
pusha
mov
sahf
addl
aas
dec
xchg
nop
dec
push
pop
aam
xlat
jge
lcall
xorb
lock
mov
push
sbb
fimuls
xlat
xor
pop
lea
xchg
adc
or
cwtl
cmp
cmpsl
cmp
int3
pop
xchg
lahf
pop
mov
inc
loop
xor
shlb
xor
les
enter
dec
or
pop
xchg
adcb
fs
mov
jb
aaa
test
movsb
or
ret
adcb
jge
jae
push
aad
hlt
call
inc
mov
cli
add
jle
inc
pop
jle
je
inc
sahf
adc
enter
sbb
addb
sbb
mov
repnz
test
jl
dec
fimuls
pushf
xorl
and
xor
inc
in
in
inc
fs
jnp
js
movsl
xor
sbb
pop
les
adc
test
dec
les
sti
jmp
scas
int3
fiaddl
test
inc
push
mov
pop
movsb
lcall
ja
or
fwait
jns
dec
or
mov
cmc
jns
popf
fiaddl
add
jle
jmp
cwtl
dec
aas
adc
addl
fldenv
lahf
filds
dec
adc
cmp
push
fnstenv
negb
jbe
cltd
test
movsl
lods
nop
xchg
ffree
pop
dec
mov
cmp
ja
pop
je
test
inc
sbb
mov
int
cltd
daa
sbb
das
aaa
ficomps
or
icebp
shlb
loop
xchg
jl
movsl
rorb
subl
enter
test
pop
daa
add
cltd
popf
shlb
mov
inc
xor
push
lds
sbbb
dec
pop
xor
bound
fiadds
xor
or
mov
mov
xchg
jle
mov
mov
rcll
dec
mov
mov
test
cmpsb
xor
sar
gs
or
outsb
adc
or
aaa
jle
ret
hlt
mov
movl
or
adc
pop
mov
lds
mov
pop
or
xchg
add
push
daa
lcall
jp
pop
xchg
lods
arpl
push
es
pop
mov
sub
or
test
xchg
rol
push
add
lcall
bound
je
pushf
fwait
mov
lcall
shll
sahf
scas
mov
fstpt
add
add
mov
jae
sbb
xchg
push
mov
testl
int
fwait
adc
jae
push
mov
cmc
inc
orb
jne
sti
popf
pushf
orl
and
sahf
inc
stos
arpl
pop
mov
sbbl
shr
push
cwtl
xchg
sbb
xchg
addb
repz
cmp
sub
out
add
jno
dec
jbe
xchg
jle
add
mov
sbb
xchg
pop
outsb
push
ja
inc
decb
scas
pop
jne
popf
fldl
mov
inc
les
inc
call
les
gs
pop
rol
xor
mov
dec
xchg
clc
inc
xchg
xchg
jb
lods
js
outsl
xchg
fwait
bound
xorl
push
or
popf
push
xlat
sarb
add
add
cmp
rclb
xchg
js
push
jne
or
test
arpl
mov
les
in
and
inc
mov
pop
test
jle
add
adcl
add
xchg
inc
lods
pop
or
pop
filds
insb
addr16
jle
cli
push
aas
lds
frstor
xlat
mov
jmp
je
dec
nop
mov
or
mov
pop
insl
fiaddl
mov
add
mov
cmpsl
cmp
pop
xchg
or
fs
mov
cmp
lea
int3
mov
sbb
mov
mov
inc
push
or
test
das
loop
push
or
pop
movsb
lods
cltd
test
cwtl
inc
or
ja
pushf
mov
mov
arpl
cmovbe
outsb
pop
js
cmpsl
add
jp
pusha
out
enter
dec
and
mov
jns
push
push
inc
mov
xchg
leave
adc
repz
test
pop
mov
push
jmp
inc
lret
inc
pop
scas
push
xor
inc
stos
xchg
test
xchg
mov
popf
xchg
sub
sub
sbbl
or
xchg
and
sbb
divb
jl
js
xchg
fldl
add
mov
jne
mov
sbb
addb
ljmp
pop
mov
xlat
test
dec
pushf
xchg
loop
lods
out
repz
test
pop
push
addr16
test
xor
inc
fwait
cltd
std
or
inc
lods
mov
dec
inc
sbbb
ret
jne
jne
shrl
push
test
pop
imul
icebp
add
inc
xor
fwait
addl
lods
push
fdivs
pusha
dec
scas
inc
pop
xchg
subb
sbb
gs
xor
hlt
adc
sti
xchg
test
leave
lret
xor
sbb
pusha
jp
jbe
mov
dec
mov
sbb
xchg
rcrb
pop
mov
jge
mov
push
mov
adc
sahf
push
test
mov
jnp
and
mov
shlb
jp
or
cmc
push
out
push
pop
into
fcmovnb
and
add
inc
or
pop
jecxz
push
inc
jb
xlat
jbe
adcb
nop
orb
mov
into
push
leave
or
outsb
fistl
xor
addb
xlat
cmp
xorl
and
mov
test
jne
mov
or
adc
ret
out
addb
mov
je
inc
andl
mov
lds
fwait
notl
cwtl
fdivl
test
xor
or
cmc
fimuls
jge
nopl
or
jp,pn
test
or
movsl
lock
or
and
addl
in
inc
and
test
cmp
nop
andnps
movsl
scas
insl
nop
push
data16
rcll
or
add
mov
mov
addl
push
xchg
xchg
mov
inc
stos
mov
add
or
xor
mov
rorl
out
push
jno
es
pop
xchg
adc
mov
fisttpll
fisttpl
sahf
push
das
lods
or
push
test
imul
mov
inc
inc
test
inc
outsb
sahf
inc
or
mov
pop
mov
loope
mov
fisubs
lret
xor
mov
sbb
lods
in
je
addb
int3
outsl
xchg
aam
xchg
add
cmp
jno
and
inc
jne
jle
xchg
test
sbb
and
pop
push
mov
sbb
jl
dec
imul
ret
push
sti
mov
jp
dec
sahf
add
inc
sbb
scas
idiv
jb
sbb
fs
push
mov
ss
push
movsl
lcall
addb
sub
loop
data16
ret
xchg
shll
insb
ret
test
pop
cwtl
fucom
jl
jp
mov
test
nop
push
fs
xlat
cmpsl
pop
add
fwait
sbbb
gs
fcompl
adc
js
pushf
inc
popf
cmp
shlb
addl
and
test
subb
shll
ret
icebp
test
gs
sbbl
mov
mov
sbb
fistpll
sahf
jb
test
mov
fcmovb
clc
and
popf
jge
xchg
outsb
jne
xlat
push
xchg
adc
fwait
div
add
mov
fs
sub
pushf
mov
lahf
mov
cmpsb
add
jnp
inc
cmpsb
pop
inc
pop
enter
mov
cmpb
gs
orl
jns
pushf
fadd
ret
nop
test
lea
fisttps
add
adc
rolb
subl
pop
sbbl
add
rcrb
pushl
outsb
xlat
adc
push
inc
adc
fildl
sti
and
test
inc
mov
mov
imul
mov
lds
popw
jge
cmpsl
pop
fisttpll
outsl
cld
sbb
jae
mov
test
adc
pop
faddl
jmp
xchg
jle
xchg
mov
aas
cli
pop
inc
test
movsb
lcall
inc
dec
lods
sbb
mov
jne
adc
pushf
adc
push
cs
test
mov
mov
sub
mov
aaa
data16
js
bound
or
mov
jle
inc
pushf
ljmp
popf
xchg
push
adc
add
pop
pushf
dec
fstpl
sahf
lahf
cmc
dec
push
lods
or
jl
out
and
pop
push
cmpsb
fidivs
inc
jmp
pop
loopne
add
fdivr
fldl
or
add
add
jne
jl
sahf
mov
push
pop
jmp
mov
aas
dec
xchg
pop
push
pushf
gs
mov
jle
mov
dec
fcmovnu
jbe
mov
jbe
lods
movsl
mov
add
or
mov
pop
sbb
pushf
jns
out
xchg
lcall
stos
daa
popf
pop
rcrl
inc
jne
pop
jne
push
push
mov
scas
in
push
add
or
repz
cli
mov
pop
xor
fwait
lcall
sub
sub
movsl
mov
or
pop
xchg
add
ret
add
xchg
xlat
movsb
test
jne
push
inc
insb
push
sbb
in
add
jb
pop
inc
jbe
sub
fwait
repz
adc
fldl
testb
push
or
pop
movl
subb
push
mov
shll
or
inc
scas
add
insl
jmp
inc
dec
adc
filds
pop
add
test
test
leave
xchg
lods
inc
xchg
adc
leave
inc
daa
test
cmpb
jge
sahf
add
orl
imul
insb
pop
xchg
or
xor
mov
pushf
sbb
dec
push
notl
pop
cli
or
dec
faddp
out
jmp
gs
sbb
mov
mov
popf
mov
iret
cmc
js
sbb
inc
enter
xor
add
push
test
bound
push
pop
pushw
inc
xchg
leave
fldl
add
xor
pop
mov
or
inc
sub
and
inc
xchg
addb
and
jp
mov
inc
ja
inc
dec
bound
inc
jns
xorb
xchg
push
popf
add
negl
andb
and
addb
sbb
pushf
cmpsl
aas
imul
inc
jnp
fbld
lds
aad
mov
ret
pop
push
cmc
fsubl
inc
xchg
xchg
cmpsb
sbb
bound
push
shrb
inc
je
fildl
add
xor
test
or
addr16
stos
les
fcompl
addl
test
xchg
mov
pop
gs
js
pushf
jecxz
mov
and
push
adc
mov
les
jb
popf
inc
lahf
push
jg
or
sbbl
pop
sbbb
ret
popa
mov
ret
xlat
sbbb
pop
push
mov
roll
cmc
sbb
pop
data16
lea
enter
fdivl
sti
inc
cmp
jbe
stc
or
orl
sahf
inc
push
jmp
inc
faddl
mov
movl
mov
cwtl
out
lods
mov
ds
adc
inc
xchg
mov
jae
pop
test
into
inc
mov
and
stos
pushf
in
mov
pop
lods
rcr
add
mov
movl
mov
xchg
movb
pop
inc
shrl
popf
fucomp
sub
add
adc
xchg
inc
xchg
popa
dec
or
imul
fstpt
cwtl
sahf
or
mov
lock
sahf
jle
roll
jmp
push
or
add
xchg
inc
repnz
mov
xor
popf
lock
adcb
inc
pop
xchg
mov
add
cmp
inc
scas
fdivrp
sbb
pop
mov
sbb
lea
repz
dec
push
and
sbb
sbb
sahf
addl
fwait
outsb
adc
sbb
xchg
lods
js
sbb
fisubs
inc
pop
mov
dec
pop
cmpb
inc
cltd
push
inc
fildl
cmc
jmp
std
and
in
add
add
inc
nop
sbb
sbb
cmpsl
mov
adcl
sbb
jno
mov
mov
jle
xchg
and
cmc
divb
inc
test
and
dec
pop
push
in
add
inc
mov
or
popa
or
fwait
gs
mov
adc
jne
aas
sub
cmc
add
and
bound
jnp
add
sbb
or
push
xchg
pop
stos
add
inc
andl
test
add
xor
shlb
xor
add
jle
test
movsl
xchg
xchg
push
or
push
data16
push
dec
push
addr16
sub
xchg
ficomps
mov
push
lahf
ret
iret
popf
adcl
sbb
mov
mov
aas
push
addl
sbb
jp,pt
pop
push
fstpl
pop
dec
jns
out
rcrb
dec
mov
sbb
dec
xchg
insb
mov
lcallw
addb
push
test
cmpsl
insb
loope
jl
cmp
dec
push
daa
out
fwait
xchg
jb
xchg
lods
or
adc
jecxz
jne
test
push
outsl
sahf
push
jae
jbe
mov
or
inc
sahf
gs
mov
shlb
mov
jge
bnd
dec
outsb
subl
xchg
and
rorl
loopne
lahf
ret
push
lock
push
inc
mov
push
sbb
into
xchg
push
cmp
outsb
xor
xchg
shlb
andl
mov
sbb
fwait
inc
popa
lcall
or
cmc
test
pop
pop
xor
icebp
xchg
pop
stos
movsl
dec
stc
addb
dec
dec
sahf
xchg
bound
andb
test
sub
mov
fucomp
cmpl
or
fisubrl
fmull
adcb
mov
inc
sahf
into
cmp
and
rolb
stos
dec
pop
adc
lret
les
sahf
les
pop
aas
sbb
dec
fiaddl
jne
cmpsl
push
sahf
sub
sbb
mov
mov
push
xor
popa
pcmpgtw
inc
fwait
xor
aad
stos
or
fs
pop
xchg
sbb
dec
pop
push
lret
aaa
es
xor
fwait
xor
xchg
sbbb
jmp
or
xorb
sar
test
or
adc
inc
fwait
mov
sarb
out
mov
inc
adc
movsb
fbstp
sbbb
rcrl
out
add
in
push
movsl
cmp
addb
addr16
mov
push
adc
fwait
or
add
push
and
cmpsl
daa
gs
cmp
imul
rolb
bound
mov
xchg
pop
mov
sarb
rorl
movsl
je
faddl
xchg
loope
mov
xchg
mov
jp
mov
xlat
mov
movsb
es
andb
fimuls
dec
dec
incb
jae
shlb
xchg
xchg
adc
push
pusha
lcall
sahf
inc
push
jno
add
xchg
daa
in
mov
lds
jg
cld
or
and
xchg
mov
xor
mov
jl
das
inc
subl
and
faddp
push
rcll
roll
frstor
dec
or
stc
add
cwtl
testl
int3
sub
arpl
sub
push
sub
popf
xor
leave
data16
or
xchg
test
push
cwtl
xchg
inc
mov
sbb
pushf
imul
pop
and
es
jge
adc
aad
jle
xor
mov
leave
rcl
loope
ss
mov
sub
inc
test
mov
outsb
add
in
adcl
mov
add
addl
arpl
lcall
inc
les
mov
pop
cmpsb
jmp
test
and
jle
cltd
leave
sbb
mov
out
sahf
add
add
fisubs
add
adc
out
test
popa
aaa
out
jmp
daa
mov
mov
loopne
sbb
ret
dec
push
hlt
fwait
lcall
jl
push
fwait
or
mov
loop
sbb
ja
mov
arpl
xchg
enter
mov
call
adc
sahf
mov
pop
jns
or
sub
adc
pop
push
mov
add
fwait
mov
mov
sub
inc
xchg
xchg
or
out
or
test
inc
cmpsb
jae
inc
test
and
inc
mov
xor
addr16
lods
pop
xchg
pop
fisubl
test
stos
test
bound
ret
rorb
sbb
mov
jnp
sbb
pop
les
cs
xor
add
jne
cmp
test
add
iret
push
xchg
push
xchg
or
andl
data16
adc
xchg
test
outsl
out
cwtl
or
aad
and
inc
mov
fwait
das
aas
xchg
out
popf
fadds
nop
js
inc
rcll
test
lcall
fimuls
xor
aas
ficoml
dec
outsl
shlb
jl
nop
adc
test
xchg
popf
outsb
loope
inc
add
adc
addb
inc
xor
shlb
cmpsl
es
xor
pop
test
sbb
ret
cwtl
or
pop
xor
mov
fiaddl
lret
push
sbb
pushf
push
and
sub
sbb
test
and
scas
xchg
add
add
or
iret
push
addr16
fdivr
xchg
insl
movsb
adc
jo
push
push
mov
lods
ret
lds
gs
sub
add
fwait
cld
fidivs
jl
mov
ljmp
inc
sbbb
outsl
mov
cmpl
inc
add
fdivl
mov
push
out
push
adc
pop
addb
add
inc
push
orb
jne
jl
push
inc
add
mov
xor
push
dec
gs
pop
inc
xchg
stos
jmp
adc
mov
mov
push
xchg
aaa
cmp
stc
mov
add
adc
nop
sbb
pop
adc
sbbl
imul
xor
xor
lahf
cmp
mov
loope
bound
push
jne
adc
fwait
push
sysenter
sbb
enter
ret
fisttps
ficomps
xchg
cli
push
sahf
adc
dec
push
jecxz
add
inc
mov
add
imul
sbb
add
mov
dec
es
int
popf
mov
cmpsb
jge
stos
push
jl
pop
pop
xchg
aad
jbe
or
repnz
mov
vpor
inc
push
dec
sahf
push
pop
mov
mov
shll
jbe
add
nop
sbb
jbe
enter
adc
xor
test
movl
jg
pop
test
jle
xor
test
addb
add
and
fidivrl
jne
incl
data16
iret
add
les
pop
xchg
or
xchg
push
mov
xchg
and
fistpl
addr16
lea
mov
lcall
data16
minps
push
dec
cli
nop
enter
add
xchg
and
push
xchg
decl
lahf
jp
jg
push
push
pop
mov
ret
aaa
push
stos
dec
add
sbb
les
icebp
inc
pop
mov
xchg
add
nop
pop
sbb
in
pop
cmc
adc
jp
inc
popf
fwait
xchg
icebp
stos
or
jge
aaa
aas
pop
and
repnz
mov
pop
inc
lods
or
cltd
in
cmp
push
mov
push
je
in
test
push
adc
ret
fists
enter
inc
dec
inc
out
mov
aaa
mov
or
jp
in
add
add
xchg
jo
sbb
inc
add
addb
pop
jmp
inc
and
jne
out
or
adc
sahf
mov
jns
out
test
cmp
sbb
mov
push
insb
push
pop
out
lcall
scas
loope
into
nop
add
inc
dec
inc
rcrb
cwtl
lahf
add
xlat
sahf
push
pop
call
xchg
movb
xor
test
lods
sbb
inc
lcall
pusha
jb
popf
dec
stos
gs
pop
inc
out
pushf
adc
jne
dec
inc
xchg
xchg
popw
es
xchg
push
and
inc
push
jo
inc
push
sti
pop
shlb
xchg
addr16
pop
xchg
fidivrs
inc
mov
arpl
bound
insl
cli
divl
lods
shlb
mov
jae
stos
lock
jnp
dec
bswap
add
mov
xchg
xchg
fisttps
orb
xchg
inc
mov
sbb
push
xchg
inc
bound
cmp
das
xchg
add
ja
xchg
add
adc
inc
pop
mov
xor
cmpsl
pop
push
mov
jp
addb
add
sbb
fwait
pop
fs
inc
mov
dec
inc
leave
addl
sbb
sub
xchg
stos
dec
pop
nop
pop
lea
mov
mov
lock
nop
outsl
xchg
addb
inc
push
push
or
and
push
adc
dec
inc
push
ljmp
scas
sbb
jnp
adc
and
shr
pop
jne
fcmovb
mov
stos
mov
or
es
neg
mov
jge
cmpsl
pop
push
xchg
imul
push
test
insl
mov
push
add
std
pop
mov
mov
push
jo
cmpl
adc
sbb
add
sbb
iret
adc
jo
data16
xchg
dec
xchg
pushf
js
call
mov
add
fildll
add
popf
test
adc
ret
popf
in
cld
aas
inc
add
mov
mov
icebp
xchg
push
sbb
lods
cltd
mov
jo
imul
fmull
xchg
test
gs
xlat
sbb
xchg
adc
sbb
adc
push
jle
jne
xor
xchg
adc
add
addr16
movsb
test
mov
sarb
sub
fiadds
cltd
pop
xchg
or
divb
or
clc
cmp
pop
rolb
pushfw
lds
and
cmpsl
pop
dec
xchg
mov
push
mov
gs
enter
in
xlat
test
push
cmp
nop
sub
xlat
add
jo
daa
push
mov
jp
addb
pop
sub
fwait
cmc
xchg
pop
stos
sub
pop
xchg
pop
add
insl
jne
lock
lahf
lret
inc
or
add
mov
outsl
in
lods
cmc
fdivrl
pop
dec
ret
inc
in
movl
pop
sahf
cmc
adc
xchg
mov
call
mov
ljmp
xor
lahf
fucomp
jno
lcall
mov
lahf
jle
fsubrl
out
push
fstpt
jl
xchg
sub
lea
call
inc
xchg
cmp
int
loopne
testl
cli
or
push
push
xchg
das
inc
stc
push
pop
test
pop
ja
xorl
mov
inc
pop
add
adcb
cmpsb
dec
addl
jne
mov
jne
jnp
mov
dec
and
lcall
imul
push
rol
jnp
xchg
ret
mov
add
pop
inc
adc
rol
xchg
push
push
cmpsl
lahf
xchg
in
mov
xchg
fwait
bound
movb
popf
add
add
pop
xor
push
add
fcoml
dec
fcmovu
mov
pop
sbb
pop
fildl
sbb
push
mov
lret
arpl
loope
add
je
out
aaa
fiadds
push
jecxz
inc
repz
inc
and
push
test
pop
es
mov
fisttps
or
sbb
cs
das
pop
call
xorl
in
ffreep
fwait
out
fwait
xorl
push
push
popf
mov
adc
addb
ret
dec
addr16
and
cmp
push
mov
mov
xchg
adc
sbb
add
pop
mov
test
outsb
lahf
sahf
stos
inc
adc
inc
ss
jnp
fldl
in
mov
sbb
pushf
xchg
inc
aad
lcall
jbe
fs
xor
cmpb
or
sbb
xchg
sbb
imul
jne
xchg
xchg
test
popf
sbb
cmp
out
mov
jbe
lcall
stos
pushf
cmp
lods
dec
inc
cmc
icebp
push
mov
mov
popf
sbb
shl
mov
ja
pop
orb
mov
cltd
rcll
lahf
adc
fsubs
lods
mov
xchg
mov
lahf
xorl
inc
lret
mov
scas
jmp
rcrl
stos
jp
inc
mov
xorl
push
cmp
addb
sbb
in
frstor
ss
out
push
and
xchg
sbb
jnp
inc
cmp
xchg
inc
mov
loope
lret
mov
xorb
scas
lea
dec
bound
fsubs
movsl
sbbl
jns
test
test
movsb
xor
adc
mov
add
mov
inc
fiadds
adc
gs
dec
xchg
xchg
insl
out
pop
enter
inc
xchg
inc
sub
orl
pop
lds
sbb
jno
dec
es
aaa
mov
out
out
mov
leave
cmc
xchg
push
mov
xchg
xchg
sbb
jge
add
fidivl
jbe
sbb
ljmpw
push
xor
add
jnp
bound
insl
movl
repnz
out
sbb
fs
cmpsl
push
test
pop
lret
mov
gs
xchg
movb
jp
or
xchg
test
pop
push
cmpsl
pop
xchg
in
divl
imul
add
xchg
lcall
cmpsl
mov
movl
lcall
insb
int
pop
xchg
frstor
ja
pushf
loope
in
aaa
ret
cli
outsl
add
adcb
inc
dec
xor
and
cmpsb
adc
imul
add
je
fisttpll
dec
aas
cwtl
sbbl
enter
cltd
or
ja
ret
adcb
mov
or
jg
adc
fwait
push
repz
pop
xor
rcll
and
inc
xchg
test
sub
add
inc
push
or
mov
cli
ljmp
pop
push
shrb
mov
mov
fistpll
int
pushf
adcb
jne
pop
adc
push
lea
jae
xchg
xor
sbb
fidivrl
pop
cmp
sbb
dec
add
xor
inc
push
testl
stc
sbb
jle
fcomps
movsl
or
mov
add
xor
inc
inc
stos
inc
lods
test
mov
lock
mov
sub
xchg
imull
fmuls
jnp
fcompl
dec
pushf
pop
dec
aaa
lret
sbb
popf
push
mov
out
cvtps2pd
mov
jg
mov
pop
push
pop
add
add
in
or
nopl
fistpl
push
icebp
cmpsl
dec
sbb
push
test
adcb
cli
sbb
mov
adc
arpl
or
pushf
push
jnp
dec
mov
xchg
bound
test
nop
pushf
mov
pop
xor
mov
inc
lea
adc
cmp
mov
inc
ret
push
push
pushf
pop
pop
iret
or
ret
dec
mov
ss
inc
adc
out
adc
rcrl
add
arpl
dec
cmpsl
setge
fs
xchg
or
ja
sbbl
or
cmpsb
gs
stos
test
mov
push
xchg
push
mov
pop
or
outsb
mov
mov
fnsave
sahf
pop
pop
ret
mov
es
orl
aas
cmp
add
leave
cmp
mov
or
test
push
mov
push
dec
add
mov
data16
fcmovb
add
push
outsl
test
cmp
repz
xchg
lcall
out
inc
in
sahf
lds
pop
adc
inc
stos
rolb
sbbb
sbb
or
sbb
data16
addr16
mov
sbb
jle
gs
addb
jb
pop
jns
adc
adcw
dec
pop
jl
leave
mov
jg
add
sbbl
pusha
sbb
inc
filds
or
and
dec
fmuls
push
mov
and
shrb
inc
pushf
jno
js
sbb
addl
pop
rcrl
sub
sbb
sub
cwtl
in
jl
fsubl
inc
mov
fisttpl
pop
test
vunpcklps
loop
push
test
movsb
mov
roll
pushf
push
push
shrb
inc
push
inc
daa
and
fiaddl
push
add
add
inc
addl
xchg
xchg
insl
mov
movsw
push
adc
and
add
imul
test
sahf
mov
push
enter
cmovno
sbb
and
mov
enter
xlat
lea
add
es
dec
or
loope
inc
push
jl
xchg
sbb
dec
loop
jp
lret
push
stos
or
lods
test
lcall
arpl
ret
xchg
nop
dec
or
jl
jns
inc
lock
lahf
xchg
xlat
add
ret
mov
ret
push
pop
lock
xchg
jo
push
popf
mov
fs
mov
adc
xchg
sbb
push
out
adc
lret
test
dec
mov
dec
sbb
test
rolb
sbb
ret
fwait
xchg
imul
jecxz
sbb
mov
inc
sbbb
add
roll
loope
aas
ret
loopne
dec
mov
cmp
mov
ss
jmp
dec
adcb
xor
jmp
test
sub
lods
test
addl
cmc
cmp
push
movsb
mov
rcrb
or
xchg
into
mov
inc
arpl
test
fucomip
push
imul
fimull
stos
xchg
mov
shll
or
xor
mov
mov
adc
jne
xor
pop
mov
outsl
inc
sbb
addb
jl
ja
sbbl
inc
fs
fwait
inc
lods
sbb
adc
popa
add
dec
test
ret
popa
ret
mov
mov
add
and
pop
orl
leave
xchg
fstl
sahf
adc
and
dec
add
mov
mov
sbb
sbb
jbe
dec
andb
loopne
ljmp
jbe
mov
fldl
cmpsl
out
rcl
add
dec
pushf
or
dec
popa
inc
leave
inc
insl
ror
mov
sbb
jne
test
loopne
rcll
sbb
jge
xchg
fcomp
test
pushf
inc
test
xchg
daa
in
mov
push
jp
xchg
mov
fwait
sbb
ret
cmc
or
fisttps
in
dec
add
je
dec
daa
xorb
imul
sahf
mov
push
push
sbb
dec
xor
push
arpl
add
mov
fldcw
or
cwtl
outsb
ret
xchg
sbb
out
mov
jp
outsl
or
mov
push
sub
pop
fcmovnb
xchg
or
dec
push
cli
inc
dec
adcl
jae
adc
movsb
leave
xchg
xorb
stos
test
fisubs
push
mov
or
push
sbb
lock
imull
push
push
jne
or
sbbl
pusha
pushf
sarb
pusha
fisubrs
add
addr16
lods
xchg
rolb
cmpw
dec
dec
stos
add
out
jge
fs
mov
xor
test
inc
lahf
lea
popw
xor
imul
orl
jnp
push
fnstsw
xor
bound
gs
xorb
popf
push
test
imul
sahf
ret
test
mov
cmp
sbb
outsb
mov
test
fldenv
imul
negl
test
jne
jl
or
jne
loop
sbb
fs
data16
addb
adc
push
lcall
jnp
jecxz
add
add
mov
cmp
data16
pop
xor
add
in
push
outsl
xor
xchg
adc
pushf
inc
and
jg
std
add
lds
ret
rorl
addb
arpl
jno
dec
test
lahf
enter
lcall
mov
cmc
enter
dec
jne
pop
sbb
sbb
or
add
je
or
push
sbb
addr16
stc
pop
adc
xchg
jae
pop
adc
dec
sbb
ss
icebp
push
jae
jp
add
addb
jle
mov
je
inc
cmpsl
mov
test
scas
stos
jne
jo
xor
repz
js
aam
out
push
jp
dec
inc
push
pop
cmc
out
mov
add
xchg
add
mov
dec
cmpsl
xchg
sbb
sub
pushf
sbb
mov
pop
popa
add
out
pop
insl
xchg
loop
enter
mov
push
orl
dec
sbb
xchg
test
xchg
dec
lea
scas
cwtl
pop
stos
sbb
mov
in
or
push
push
lods
and
mov
mov
aas
adc
lds
in
shrl
push
xor
push
push
inc
add
in
sahf
outsl
mov
jne
popf
add
out
insb
sbb
lahf
dec
ret
mov
je
nop
xor
xchg
sub
pusha
inc
mov
cmc
sbb
xchg
mov
pop
pop
popf
sahf
lahf
call
and
sahf
ja
arpl
add
flds
mov
jnp
test
addl
xchg
fadd
inc
in
adc
sbb
fldz
pop
pop
push
lcall
jl
dec
ret
push
test
mov
test
stc
add
mov
aas
add
pop
pushf
inc
ja
sub
jg
jmp
xchg
ja
pushf
pop
cmp
icebp
shll
sbb
push
lcall
lds
mov
mov
or
push
data16
or
inc
xchg
stos
add
cmpb
jl
mov
in
inc
jne
push
stos
or
and
add
int
fimuls
mov
jl
rclb
jo
icebp
notl
outsl
pop
jae
mov
push
jnp
in
jle
sub
jp
push
insb
inc
jno
sbb
xchg
test
push
or
mov
push
pop
jp
lcall
pop
pop
xchg
andb
lock
imul
and
je
cmovb
adc
cld
rolb
mov
dec
pop
div
xchg
popf
and
push
ret
fwait
pop
imul
pop
mov
jge
cli
jl
push
imul
aaa
ret
subl
lds
jge
arpl
push
cmpsl
test
aaa
test
mov
inc
jbe
js
pop
inc
xchg
cmc
cmp
sahf
bound
inc
es
sarb
push
lock
jne
xor
pop
inc
dec
dec
xchg
andl
mov
adc
mov
inc
inc
push
lods
jne
in
sbb
fwait
adc
mov
mov
mov
dec
pop
xchg
sbbb
rclb
xor
and
mov
inc
cmpsl
enter
add
stos
inc
add
addr16
insl
inc
xchg
testl
aaa
dec
add
fs
movsb
adcb
inc
fistpl
std
sbb
lcall
cmpl
subb
enter
lods
mov
imul
xchg
add
cmp
sbb
fimuls
sbb
jnp
push
nop
rorb
in
sub
out
and
dec
inc
adcb
mov
or
or
add
cwtl
xchg
mov
popf
pop
pop
fs
sbb
in
xchg
cmp
and
cmpsb
ret
shll
js
fisttpll
test
stos
mov
adcb
jbe
or
rcll
cmc
pcmpgtw
mov
ljmp
or
data16
sbb
lods
jle
add
mov
dec
cmpsl
mov
out
sahf
pop
data16
arpl
pusha
push
sahf
pushw
pop
std
movb
fdivp
cwtl
ret
out
cld
gs
ret
pop
and
add
push
mov
jno
addr16
fists
popf
test
mov
test
andl
call
add
lds
inc
mov
enter
adc
enter
rclb
pop
fmull
xchg
test
int3
cmp
mov
test
shlb
xor
pop
test
xchg
stos
jnp
test
jbe
inc
inc
sti
jle
adc
ja
inc
stc
add
inc
repz
lcall
lcall
adc
cmpsl
ret
stc
fistl
lods
fldl
pusha
cmc
dec
lcall
push
pushf
inc
pop
inc
daa
stos
xchg
in
mov
cmp
or
pusha
push
test
adc
or
clc
pop
jnp
mov
ss
xchg
push
mov
je
sub
in
popa
inc
inc
fwait
scas
outsb
fcompl
xor
popa
rcrl
cmpsl
fistpll
or
cltd
out
outsb
sub
test
mov
or
sub
data16
std
add
fdiv
sbb
loop
leave
cmc
lods
test
loopne
int3
pop
bound
xorb
mov
push
cmp
cmp
or
inc
push
xchg
cmpsl
push
popf
xchg
add
dec
xchg
out
or
out
inc
fldl
stos
inc
pop
xchg
mov
or
add
imul
push
add
js
lods
adc
jmp
gs
in
pop
dec
in
pop
push
bound
imul
push
pushf
sub
jnp
lds
sbb
nop
bound
daa
push
cmpsl
pop
adc
jne
fstpl
mov
dec
enter
add
cmp
cmpb
push
pushf
lahf
xchg
imul
xor
inc
jnp
and
xor
jbe
add
inc
pop
stos
xchg
lods
js
inc
or
shlb
cmpsl
aaa
loopne
xchg
sub
dec
popf
lcall
vmread
xchg
shl
xchg
dec
mov
fnstcw
outsl
adc
inc
sahf
lds
and
fneni(8087
stos
fs
jmp
inc
mov
fiaddl
adc
or
xchg
xchg
mov
clc
out
pushf
sbb
addb
faddl
ficompl
inc
icebp
add
push
or
mov
adc
xchg
pushw
dec
mov
cmp
ss
bnd
ds
pop
rorb
ja
add
insb
mov
test
xchg
sub
dec
xchg
andl
addb
inc
and
inc
jbe
sahf
mov
shll
int3
dec
ja
int3
sbb
inc
adcb
jle
addl
lret
adc
dec
lcall
pop
orl
orl
or
xchg
pop
sbb
test
mov
add
push
jmp
jp
cltd
adc
inc
lods
dec
test
mov
push
xchg
lahf
inc
xchg
scas
adc
sub
and
lcall
sbb
and
or
cmp
scas
push
or
mov
mov
or
fs
jno
push
push
sahf
cmp
sub
popf
rcr
dec
or
mov
xchg
leave
ror
mov
push
inc
cltd
push
jmp
push
insb
test
data16
jmp
mov
lcall
adc
lds
data16
sbb
outsl
pop
or
sub
fcmovnu
fwait
jle
xlat
std
push
pop
cmpl
data16
std
mov
or
fwait
stos
pushf
cmp
push
xor
pop
mov
push
dec
push
pusha
jne
fwait
lcall
push
add
jne
lret
cmc
popf
cltd
sbb
data16
sub
inc
mov
xor
rcrb
adc
dec
xorb
fwait
xchg
or
lds
sub
ret
jbe
inc
sti
xor
push
or
jecxz
inc
ret
and
sub
movsl
jp
jle
push
fistl
jl
dec
enter
pop
ficoms
adcb
sbb
cmpsl
push
xchg
and
in
inc
xorb
enter
sbb
add
mov
test
dec
enter
adc
or
test
or
xchg
inc
xor
addb
jne
jp
xor
stc
mov
pop
lahf
imul
mov
add
test
push
jge
mov
fdivs
inc
mov
popf
or
negl
sbb
push
fistpl
test
movsl
test
inc
outsb
lret
gs
out
xchg
xor
sub
pop
mov
pop
add
add
push
or
aam
aas
subl
setnp
in
test
test
or
adcb
fldl
and
or
xchg
add
out
out
aaa
out
mov
leave
push
add
imul
add
aas
icebp
leave
fwait
or
lret
dec
inc
rcrb
sub
rolb
or
jecxz
add
adc
inc
mov
pop
xor
inc
gs
lcall
or
pop
adc
add
test
mov
loope
lcall
das
pop
sbb
add
mov
cwtl
add
pushf
and
xchg
inc
data16
adcb
idivb
xor
out
push
jnp
xrelease
jb
push
lcall
xchg
lods
shlb
xchg
jg
adc
test
pop
mov
js
add
test
cmp
adc
andb
fwait
xchg
jg
xchg
or
hlt
addb
std
sub
add
sbb
jnp
stc
jmp
cmpl
pop
pop
mov
bound
pop
xchg
xchg
xchg
pop
nop
mov
cmp
xchg
hlt
arpl
clc
lahf
mov
xlat
xchg
sbb
xor
adc
add
pop
lods
cmp
faddl
jbe
enter
imul
adc
adc
pop
int3
popf
pop
sbb
xor
fwait
into
adc
and
enter
inc
adc
outsl
fbld
movsb
aaa
test
arpl
mov
adc
lds
js
addl
subb
gs
sbb
arpl
mov
or
into
jmp
xchg
pushf
sbb
xor
addl
test
jmp
test
scas
and
inc
add
mov
mov
sub
setl
xchg
fisttps
mov
sti
sbb
lcall
out
test
icebp
outsb
jmp
inc
mov
subl
dec
out
pop
add
xchg
insl
dec
movl
aaa
or
imul
inc
and
push
or
and
stos
pop
sbb
add
mov
ja
sbb
jle
leave
dec
mov
and
pop
out
or
mov
fistpll
das
daa
bound
push
inc
divl
inc
xor
int
add
fnstsw
inc
xchg
insl
into
in
sahf
outsb
cwtl
pop
add
sahf
dec
dec
and
or
cmpsl
mov
scas
data16
push
cmpsl
pop
push
or
push
fwait
dec
iret
je
addl
cmp
cwtl
outsl
lret
je
inc
pop
xor
clc
jle
xchg
test
push
pusha
addb
sbb
xchg
cmc
inc
xchg
mov
add
xlat
inc
mov
xchg
icebp
pop
jbe
lahf
pushf
rcr
cmp
xchg
aam
fsubrl
mov
ret
inc
test
popf
pop
mov
mov
dec
xchg
pusha
repz
mov
sahf
addr16
fsubrl
inc
insb
mov
push
push
daa
pop
sahf
cmc
jl
inc
leave
pop
sbb
fistps
push
mov
cmpl
pop
sbb
fldl
and
jne
movl
jmp
fildll
inc
mov
je
out
mov
xchg
or
cmpsl
pop
mov
lea
daa
mov
test
pop
pop
jne
mov
lcall
popf
inc
add
mov
rcrb
or
xchg
bound
addb
ss
push
gs
lcall
sub
pushf
and
repz
jmp
or
popf
into
mov
flds
jle
js
addb
leave
pop
mov
xchg
jb
cmp
test
fwait
pop
sbbl
xchg
mov
loope
push
push
ja
xchg
mov
lds
pop
movsb
cmp
sub
jne
push
sbb
jle
rcl
push
test
andb
jle
jo
filds
xchg
mov
movsl
fldl
mov
loop
das
inc
inc
mov
test
inc
inc
andl
pop
loopne
xlat
fistpl
xchg
int3
inc
inc
adc
cmc
leave
xchg
pushf
rol
in
add
inc
xlat
scas
push
and
in
mov
lcall
xchg
inc
mov
xorb
jecxz
repnz
cli
pop
fimuls
inc
bound
movb
mov
outsb
push
cmp
lea
je
ss
mov
pop
nop
push
add
lcall
imul
jg
addb
ret
adc
or
sti
sbb
jl
mov
pop
dec
pop
lock
push
scas
lcall
cmpsb
inc
loope
add
or
xchg
repz
ret
cmp
push
xlat
fimuls
mov
imul
jmp
fistpll
movsl
test
jge
mov
jbe
aam
push
aas
xchg
add
xchg
mov
fmull
and
fwait
mov
inc
in
dec
ret
dec
xchg
mov
xlat
addb
or
ds
adc
bound
rcrb
jecxz
pop
imul
ret
mov
or
adc
roll
lcall
sbb
js
leave
push
push
daa
mov
aas
test
cli
cmp
add
orb
inc
or
lock
jle
pop
test
push
adc
out
mov
or
pushf
adc
jnp
xchg
jle
fcmove
fcoms
mov
data16
lods
mov
xlat
ret
jne
add
les
lcall
sbb
xchg
adc
and
movl
push
xor
leave
and
jmp
lcall
adcl
pushf
fwait
and
inc
push
dec
push
mov
jecxz
push
cli
fisubl
imul
mov
ds
insb
xchg
sbb
mov
ret
cmpb
mov
movl
in
pushf
lahf
rclb
push
push
pop
inc
pop
ja
or
mov
push
ret
hlt
subb
sbb
out
xchg
in
data16
ds
enter
jl
push
outsb
call
jle
xchg
sahf
add
push
sbbl
aaa
addr16
out
pushf
and
lock
dec
roll
inc
mov
or
pusha
sbbl
pusha
cmpsl
inc
fwait
xorb
mov
nop
jb
imul
pop
and
pop
add
jmp
lcall
dec
pop
pop
xchg
inc
out
aam
add
inc
stos
fldln2
pop
shrl
push
pcmpgtd
xchg
decb
push
test
cmp
fisttpl
sbb
ljmp
add
sub
sub
sub
call
pop
push
add
jle
popa
sahf
push
jle
jge
test
mov
add
test
xchg
stos
pop
fwait
inc
adc
std
add
xchg
mov
ret
cmpb
bound
subb
addl
test
cwtl
enter
or
lods
movsl
or
fadds
fwait
xorl
cmp
mov
mov
and
bound
popf
jns
adc
jg
ffree
dec
nop
xchg
movsl
mov
enter
jne
ljmp
pop
cmpsl
movb
mov
sub
sbb
push
scas
pop
outsb
or
outsb
orb
dec
imul
insl
das
aaa
pop
push
or
mov
stos
sbb
jl
bound
xchg
stos
and
adc
cmp
data16
cmpb
adc
ret
push
add
lcall
mov
mov
loope
lret
sub
and
into
addb
scas
pushf
lahf
adc
pop
int3
add
fcmovb
inc
rorb
or
push
push
imul
cmc
pop
sub
add
insl
mov
insb
mov
mov
les
mov
mov
fwait
sbb
inc
inc
mov
dec
jns
sbb
inc
mov
inc
jnp
mov
ud1
or
dec
dec
inc
lahf
sbb
cli
xchg
mov
cmpsl
test
dec
push
mov
mov
inc
push
and
jecxz
push
gs
push
mov
xchg
xchg
dec
test
imul
lret
adc
popf
inc
inc
mov
movsl
out
cwtl
pop
mov
cmp
orl
rorl
add
xorb
dec
mov
jecxz
into
xchg
fdivrl
sub
fs
ss
push
jl
push
bound
sub
push
fbstp
cmpsl
rclb
pop
or
push
jg
imul
pop
push
pop
lcall
sbb
daa
lret
push
cmpsb
mov
stos
xchg
icebp
cld
cmovl
imul
jge
cmpsl
enter
arpl
inc
jle
aas
stos
mov
inc
fildl
out
push
jnp
ja
data16
movsl
mov
mov
mov
pop
jbe
sub
cmp
or
mov
adc
dec
into
xchg
sbbb
mov
dec
pop
inc
movl
pop
lcall
idivl
push
inc
jge
testb
addr16
outsb
mov
push
outsl
and
loopne
cmc
mov
int3
out
dec
mov
hlt
lret
push
dec
mull
push
mulb
add
mov
lea
sti
inc
pushf
mov
subb
or
imul
fisubs
inc
or
jae
test
mov
xor
xchg
fs
ret
popf
inc
in
adc
cmp
subb
lock
cmc
out
or
pop
sub
push
xchg
pop
xor
in
addr16
les
in
dec
mov
add
orl
and
inc
gs
sahf
push
mov
cli
ficomps
xor
cmpsl
outsl
xchg
jle
inc
test
incl
sbb
dec
push
mov
das
push
push
addb
add
test
clc
and
or
lcall
sbb
orb
push
loopne
fcmove
fwait
jo
pop
lcall
sbb
fdivl
mov
outsl
xor
stos
data16
test
inc
mov
inc
gs
mov
imul
test
or
test
push
pop
popa
inc
pushf
stc
add
call
push
add
mov
mull
pusha
mov
inc
push
adcl
shr
mov
inc
ds
repz
or
adc
inc
jns
loop
dec
inc
sbb
mov
xlat
add
imull
popf
inc
inc
lds
push
mov
fimuls
dec
fistpll
jno
or
mov
push
cmp
xchg
dec
pop
shlb
mov
mov
push
pop
hlt
mov
pop
mov
imul
shr
xchg
sahf
push
ja
fdivp
aam
fistpl
add
push
inc
inc
aaa
or
or
mov
sbb
addl
into
mov
jle
push
push
test
loope
fwait
xchg
lret
ret
push
inc
push
dec
dec
cmc
xchg
clc
dec
sbb
xchg
ljmp
or
pushf
push
or
leave
or
gs
push
fwait
out
or
cmp
fadds
inc
pop
mov
jecxz
adc
sbb
add
mov
pop
shll
ret
lods
add
popf
lea
mov
pop
orb
ret
pop
xchg
in
sbb
js
inc
or
sbb
mov
mov
test
inc
mov
adcb
adc
mov
addb
jle
dec
dec
jbe
insl
jl
push
adc
xchg
inc
mov
jnp
sub
inc
adc
dec
cmc
pop
ffreep
mov
jne
arpl
sbb
test
inc
data16
es
addb
xchg
lds
jb
ja
add
fsubr
pop
jne
stos
lahf
push
es
test
data16
dec
pop
addr16
dec
scas
xchg
mov
jmp
or
push
push
push
jae
sbb
push
ret
mov
data16
inc
fldl
sbb
inc
jno
adc
data16
sub
lods
add
or
mov
add
pop
loopne
or
rclb
dec
xchg
addl
fmuls
pushf
cli
repnz
sbb
jmp
pop
andl
movsl
dec
mov
fistpl
insb
jno
sti
or
sbbl
cmpsb
insb
leave
shll
fistpl
pop
rcll
popf
or
pop
add
mov
jecxz
js
lcall
ret
mov
adc
jmp
xchg
stos
mov
fwait
push
aad
cmpsb
inc
cmpl
cwtl
out
or
mov
push
mov
mov
add
outsl
mov
mov
jge
or
outsb
sbb
inc
and
inc
jmp
dec
popa
pop
popf
sahf
into
rep
jmp
sub
jne
dec
mov
enter
or
add
mov
cld
ret
aad
cmp
negl
add
sbb
sbb
or
add
outsb
mov
inc
xchg
lock
jge
jle
xchg
repz
jle
adc
test
scas
test
mov
scas
dec
sbb
addr16
xor
xchg
adc
sub
or
movsl
pop
dec
fdivrl
dec
inc
out
fwait
dec
pop
pushf
xor
mov
nop
pop
pop
adc
push
xchg
or
imul
and
mov
add
jmp
xchg
or
daa
pushf
subb
ret
mov
popf
adc
or
jp
mov
xor
in
movsl
pop
gs
cld
xor
pop
sbb
jle
add
mov
adc
sahf
cltd
or
test
mov
sbb
mov
rolb
mov
pop
xlat
sbb
je
push
fbstp
push
dec
addr16
mov
andb
inc
dec
jle
cmp
popf
xor
jge
dec
mov
addb
popf
fcmovu
sbbl
dec
jne
test
cmp
jnp
inc
mov
lea
decl
and
dec
fidivs
addr16
or
les
faddl
dec
addr16
adc
inc
mov
je
stos
or
cmova
leave
addl
outsl
or
addr16
jl
xchg
jns
dec
sbb
dec
int
enter
fmull
test
mov
addr16
inc
fwait
sbb
test
pop
pop
out
inc
xchg
imul
inc
test
sbb
push
fmull
sbb
xchg
test
pop
out
arpl
adcb
movsb
sbb
xchg
sbb
cltd
pop
nop
or
aas
mov
bound
popf
pop
inc
aas
xchg
add
pop
orl
or
dec
and
cmc
adc
jg
push
fldl
cmp
xchg
mov
mov
xchg
bound
mov
jbe
push
cmpb
cs
or
sahf
lcall
jnp
push
addr16
lret
stos
push
inc
out
mov
shrl
sbb
jne
sub
pop
dec
subl
or
push
iret
adc
notb
test
add
call
pop
push
aad
sbb
mov
leave
mov
mov
lds
xchg
lods
stos
call
push
push
mov
outsl
inc
sub
inc
add
mov
sbbb
xorl
xchg
jle
sbb
cs
xor
mov
inc
xor
insl
dec
add
pop
notb
add
data16
out
jae
sahf
ret
dec
inc
loopne
push
xchg
aas
mov
push
mov
adc
adc
data16
push
xchg
add
cs
inc
jae
mov
ja
sahf
popf
push
and
pop
jne
lret
or
or
sub
pusha
gs
mov
sbb
pop
xchg
lods
mov
xchg
and
dec
or
mov
test
lret
popa
nop
leave
push
mov
sub
mov
push
jbe
pushf
adc
mov
cmp
aas
adc
leave
add
add
jne
inc
jns
inc
sbbb
sbb
cmc
aas
repz
jp
popf
xchg
inc
xchg
sbb
cmp
roll
inc
sub
push
or
mov
setl
daa
or
rcrl
mov
xchg
add
out
divb
outsl
pop
pop
popa
mov
jnp
inc
std
xchg
std
sbbl
adcl
out
in
xor
lret
pop
push
loope
cmp
inc
sub
pop
popf
pop
icebp
cmc
push
out
shl
mov
sbb
lods
sbb
inc
and
and
pushf
fdivr
push
push
orl
mov
in
add
shll
lcall
or
add
cmpsl
or
fucom
push
ficompl
inc
mov
mov
add
arpl
mov
cmpsl
in
aam
jp
mov
sub
pusha
pop
mov
sbbl
lea
mov
loopne
pop
fistpl
jg
cmc
stos
lea
insl
fs
xchg
sbbb
les
xchg
jp
lret
mov
dec
mov
or
dec
imul
andb
mov
pop
push
sahf
sbb
sahf
jmp
mov
popf
mov
push
mov
test
xchg
adc
insb
addb
js
dec
cmpsl
mov
pop
in
push
jne
testl
lahf
inc
roll
adc
add
jae
inc
addb
repz
pushf
lds
pusha
sbb
pop
or
fnsave
mov
cmc
icebp
mov
mov
ret
lret
pop
jb
sti
inc
add
or
xchg
xor
or
xchg
pop
inc
icebp
xor
fiaddl
sar
loopne
subb
pop
xchg
dec
sbb
mov
shlb
cs
push
gs
adc
push
sbb
lods
mov
call
pop
add
scas
inc
sub
loop
jns
lds
test
adcl
mov
sbb
jne
inc
push
inc
addl
fs
dec
pop
or
push
mov
fisttps
orb
orl
sbbl
xlat
inc
nop
xor
out
dec
jle
cwtl
or
xchg
out
loopne
adc
mov
mov
arpl
dec
adcb
bound
sbb
andb
push
iret
or
mov
ljmp
test
push
leave
into
fmull
jge
inc
and
mov
inc
add
je
inc
inc
mov
pop
dec
and
data16
hlt
stos
inc
add
xchg
jmp
cmpsl
inc
cmc
mov
cmc
je
ficompl
pop
pop
stos
add
icebp
daa
stc
add
pushf
jp
cmpsl
lods
pop
dec
xchg
jb
ja
fwait
popf
mov
mov
push
roll
mov
dec
pop
add
sbb
inc
daa
stos
cmc
jle
push
in
pop
xor
leave
lcall
pop
xchg
mov
orb
out
xchg
dec
sbb
push
lock
push
sub
pop
repnz
dec
ficompl
sbb
lds
test
les
cli
dec
fstl
outsb
mov
mov
push
js
mov
addb
push
rolb
mov
push
cwtl
or
add
jbe
adc
jg
frstor
mov
cmp
push
fdivr
faddl
enter
pop
push
push
push
push
fdivrs
adc
sahf
test
decl
xchg
pop
shrl
rcl
test
fiaddl
pop
add
adcl
xlat
arpl
xchg
sbb
adc
andb
push
xor
mov
xorb
inc
fs
jmp
mov
xchg
mov
push
mov
roll
pop
mov
cmpsl
addl
pusha
pop
cmpsl
dec
pop
mov
adc
popf
xchg
scas
lods
inc
add
test
pusha
or
mulb
jmp
mov
fstpt
test
data16
loopne
or
aas
add
sbb
or
shr
test
inc
test
fwait
jp
push
push
mov
jne
and
je
xchg
nop
pushf
call
sbb
dec
ljmp
das
jmp
dec
pextrw
or
mov
xor
ljmp
ljmp
xchg
sbb
pop
inc
les
push
nop
mov
sbb
pop
inc
int3
xchg
pop
or
ret
lea
lcall
repnz
ss
ds
leave
adc
pop
test
dec
dec
test
jle
xchg
inc
jae
push
adcb
rorb
lcall
jae
imul
cld
pop
jne
popf
pop
push
stos
xor
inc
fiaddl
push
fbstp
pop
jbe
mov
push
mov
push
pop
das
push
jne
jge
addl
ja
adc
ret
sbb
movsb
sbb
dec
dec
jp
xlat
rclb
inc
bound
js
mov
push
loope
and
shll
inc
fistps
test
clc
popa
out
push
imul
bound
or
fwait
push
lods
inc
int3
stos
dec
add
negb
sbb
sahf
inc
lods
xchg
ja
loop
adc
test
mov
mov
negl
test
hlt
mov
inc
xchg
andl
movsb
jae
ret
add
inc
sbbb
insb
orl
fldl
test
push
movsl
test
adc
jns
gs
fs
loopne
push
inc
xlat
lods
mov
add
pop
pop
shlb
or
movsb
notl
mov
or
mov
rcll
ja
movb
mov
inc
mov
push
jnp
inc
stos
mov
mov
inc
nop
mov
fisttps
add
add
push
adc
push
fldl
push
push
push
ja
ficoml
push
mov
aad
mov
adc
mov
mov
pop
fsubs
shll
in
iret
movsb
jnp
fistpll
add
jmp
cmp
pop
es
adc
aad
pop
jae
mov
mov
cmp
jle
lods
les
or
adc
pop
xchg
mov
nop
leave
loop
lcall
lods
lds
leave
cmpsl
repz
enter
pop
gs
adc
xchg
dec
sbb
sbb
fwait
lea
jle
bound
addb
pushf
subb
or
xor
clc
ficompl
jbe
push
movl
push
test
mov
iret
or
and
movsb
daa
icebp
out
lcall
add
dec
or
inc
xor
push
ja
pop
and
push
xlat
lds
pop
sahf
inc
pushf
dec
mov
test
add
mov
cmp
popf
roll
dec
pop
cmpsb
aaa
ret
das
pushf
pop
lods
cmpsl
and
add
push
xchg
popa
dec
mov
add
mov
inc
jno
push
dec
loope
les
inc
subl
shlb
ret
jg
push
inc
movb
adcb
gs
pop
pop
out
lods
outsb
xchg
inc
cmp
jbe,pt
mov
xchg
xchg
stos
call
push
ret
mov
scas
insl
mov
or
movsl
in
dec
xchg
incl
dec
xchg
xor
pop
inc
mov
and
mov
jge
negb
lahf
data16
mov
cli
pop
addb
lea
mov
hlt
data16
push
inc
ds
sti
inc
nop
inc
fwait
into
adc
xchg
mov
popf
in
xchg
push
pushf
pop
lods
pop
gs
xchg
or
sbb
mov
mov
xorb
add
sub
ret
jmp
inc
notl
push
add
add
adc
push
xor
mov
mov
push
repnz
mov
scas
push
pop
shrl
xchg
adc
pop
mov
pop
xorb
lods
xchg
inc
fdivs
push
addl
mov
movsl
das
jg
daa
mov
jge
jns
pop
popa
jno
enter
adc
mov
or
fstpl
sub
rol
dec
js
dec
sub
addl
dec
inc
pop
sti
faddl
subb
jno
fwait
andl
addr16
lods
inc
xchg
push
sbbl
addr16
sahf
mov
xlat
xchg
outsb
mov
jle
pop
pop
ret
sub
inc
xchg
test
adc
pusha
mov
mov
gs
daa
fadds
popf
shrb
mov
ret
addl
mov
out
inc
test
aas
ret
jne
sbb
popf
push
jbe
fbld
shrd
repnz
das
sbbl
shlb
popf
lcall
aam
push
arpl
lcall
pop
shrb
dec
rclb
ret
pop
add
mov
stc
xchg
add
fwait
leave
lods
and
and
mov
popl
xor
add
daa
loop
jp
mov
sbbl
popf
adc
inc
cltd
mov
push
add
data16
fisttpll
inc
xor
and
sti
mov
dec
mov
out
sbb
xchg
cmpsb
lret
or
imul
neg
leave
mov
sbb
std
sahf
jge
orb
sub
nop
or
pop
push
lahf
fcoms
rcr
xor
pushf
jp
cmpsl
int3
cltd
sbb
test
ret
and
insl
or
cmp
loop
push
inc
jle
lcall
mov
jne
mov
or
sbb
jge
xchg
xchg
mov
push
and
leave
xchg
ja
xor
inc
out
pop
xchg
addr16
jle
xchg
mull
out
add
push
ficoml
sub
push
int
lret
nop
mov
pop
in
aad
xchg
orl
scas
hlt
mov
ret
adc
xlat
lods
les
pop
jp
pop
mov
jnp
and
or
popf
jl
das
xchg
add
ret
add
pop
push
mov
mov
jle
andb
push
addr16
ret
and
sbbb
or
in
push
popf
or
xchg
stos
xchg
test
inc
jo
inc
or
mov
add
xrelease
push
cwtl
les
fwait
dec
xor
xchg
sbb
pusha
xlat
addr16
push
rolb
adc
rorl
inc
add
or
sub
push
lods
out
nop
jp
mov
and
loope
pop
xchg
insb
out
sbb
xchg
popa
mov
stos
das
ret
mov
mov
mov
mov
into
push
mov
call
jge
popa
leave
jle
jno
call
incl
pop
fstl
cli
or
addl
push
add
inc
lods
cmc
pop
jb
xchg
shll
inc
and
addr16
loop
add
ret
jne
inc
dec
xor
mov
imul
push
pushf
push
inc
in
cmc
sbb
mov
or
sbb
test
lret
jge
and
cmp
mov
lahf
orb
push
add
fists
mov
sbb
add
lcall
lds
adc
inc
jns
je
xchg
push
test
js
mov
lret
inc
loop
inc
xchg
lcall
arpl
testl
fistpl
xchg
jecxz
rcll
or
jmp
mov
push
addl
and
lods
fdivrl
add
shll
add
mov
add
mulb
sbb
pop
inc
leave
loop
xchg
lcall
int3
mov
push
jb
es
mull
or
jbe
add
jp
gs
add
pop
jnp
movb
mov
lods
add
rcrl
xchg
inc
scas
fstpt
test
sub
outsb
faddl
popf
fwait
push
insl
sti
test
sbb
push
out
popa
scas
movsl
lds
sbb
push
loopne
add
andb
lock
adc
inc
inc
cltd
pop
sahf
sahf
lea
push
sbb
shll
mov
adc
test
inc
xchg
add
loopne
xchg
sub
jns
jle
pusha
lahf
and
mov
xchg
test
in
or
into
push
arpl
push
sbb
scas
popf
fisubs
mov
incl
fiaddl
jns
roll
popf
sbb
shlb
test
xor
in
popf
push
lock
loope
xchg
test
sbb
sbb
sahf
lods
mov
xor
fwait
lds
xchg
scas
push
pushf
sbb
inc
dec
cmc
fwait
jbe
inc
mov
pop
push
mov
imul
test
or
aaa
cmpsl
cmpsb
ret
and
xchg
and
outsb
leave
cmp
add
popa
mov
and
or
or
rcrb
mov
lds
cwtl
or
in
dec
jne
lahf
orl
popf
xlat
dec
add
push
addr16
sub
data16
xor
pusha
xchg
inc
negb
and
and
lods
mov
xchg
inc
fidivl
inc
sbb
push
lahf
dec
xchg
ljmp
das
daa
dec
loop
mov
cmc
roll
xchg
or
jg
mov
shlb
popf
or
xchg
popf
pop
cmp
lods
sbb
cli
jg
jbe
sbb
orb
adc
dec
push
xchg
add
pop
inc
mov
out
push
dec
les
xor
orb
aaa
pop
dec
dec
sbb
inc
sahf
andl
adc
sbb
scas
jmp
sti
insb
leave
mov
inc
lods
test
lea
imul
cmpb
pop
sbb
fcomps
dec
inc
xchg
add
dec
ret
add
fs
adc
inc
add
ja
or
loopne
leave
sahf
out
ret
gs
lcall
cmpb
fdiv
lret
test
jl
inc
jno
xchg
imul
mov
push
jp
idivl
pop
jle
mov
arpl
sbb
mov
mov
out
pushf
inc
enter
pop
js
fs
stos
push
or
test
movb
mov
cmpsl
aaa
sbb
gs
jb
in
mov
xchg
adc
adc
aad
adc
ljmp
addr16
and
in
cmpsb
pop
xchg
notl
cmp
in
or
fs
mov
icebp
inc
nop
inc
push
jecxz
mov
pop
add
cmpl
jp
lods
inc
mov
pop
inc
test
inc
xchg
mov
in
adc
pop
data16
mov
rcrl
mov
push
xlat
sbbb
xchg
popf
inc
subl
push
addr16
add
mov
dec
xchg
fs
xchg
sahf
testw
sub
icebp
lret
popf
popf
xchg
or
pop
push
pop
mov
jae
shrl
add
lret
subl
pop
mov
sahf
imul
cmpl
pop
cwtl
fdivl
ret
fbld
fstpl
orl
ja
sub
imul
pop
add
outsb
loopne
test
sbb
cwtl
lds
fwait
add
fimuls
push
daa
shll
push
mov
test
or
jle
lahf
fwait
sbb
pop
xor
sahf
sahf
int3
dec
sub
lret
sub
ret
and
or
pop
dec
sahf
pop
outsl
roll
pop
ret
pop
nop
addl
movsl
fwait
sahf
js
mov
mov
xchg
adc
inc
mov
out
je
sbb
add
inc
pop
cmp
call
dec
into
lods
inc
jnp
sahf
mov
aas
pop
add
addr16
mov
mov
sbb
and
jne
dec
or
jns
dec
mov
adc
mov
scas
cmp
out
and
xchg
or
or
inc
or
movsb
jp
lcall
ss
or
in
jge
mov
fisubrs
push
dec
inc
push
add
hlt
inc
jle
inc
sub
cmc
subl
mov
call
orb
pop
dec
pop
adc
cmp
stos
std
pop
add
mov
dec
push
pop
mov
daa
and
or
adcb
bnd
sbbl
fsubrs
mov
lcall
lret
into
int
insb
daa
addl
xchg
mov
jle
mov
ret
test
mov
in
mov
aaa
lds
adc
ror
gs
cmp
into
mov
push
inc
cmc
insb
rolb
mov
or
jnp
pop
ficoml
popf
mov
xchg
pop
push
cmp
popa
add
nop
popf
fnsaves
push
pop
sarb
mov
in
lds
or
scas
test
and
lcall
pop
xorw
add
enter
test
mov
inc
enter
jl
ja
lods
imul
mov
pop
cmpsl
cmpb
pop
orl
popf
test
iret
xchg
pushf
subl
jecxz
inc
fistps
mov
inc
cmc
mov
pusha
ljmp
lahf
sahf
push
popf
rorl
pop
add
jle
mov
pop
aas
inc
adc
jne
sbb
dec
mov
test
mov
mov
sahf
push
aaa
lcall
ficoms
pop
addr16
lcall
xor
jne
mov
mov
mov
pop
mov
xchg
bound
pop
xchg
or
add
stc
insb
rcr
push
js
fcmovne
xchg
loop
jp
adc
sahf
dec
pop
ret
test
add
pop
xchg
inc
push
stos
rorl
sahf
data16
push
or
gs
frstor
sahf
fildll
mov
jecxz
fcomps
jecxz
fs
inc
scas
push
cwtl
xor
mov
cs
arpl
sbb
push
push
pop
add
sub
inc
inc
push
icebp
adc
fstp
mov
push
outsb
sub
pop
cmc
sbbl
jg
xchg
addb
sbb
fwait
jne
in
cmp
mov
test
dec
push
fwait
rol
xchg
aaa
or
xor
pop
or
shll
xchg
mov
lret
aas
add
push
dec
mov
stc
lock
inc
pop
outsl
pop
lcall
lahf
les
cmp
outsl
cmp
or
addb
pop
add
popf
or
push
or
xor
lcall
pop
aaa
push
adc
push
out
mov
dec
pop
cmc
test
inc
test
cwtl
add
add
adc
insb
data16
cli
cmpb
ja
lods
push
adc
sub
popf
sbb
addr16
rcl
pop
push
jl
fdivrs
mov
fcompl
lcall
jnp
ret
add
sbb
jecxz
inc
sbb
jge
fisttpl
mov
pop
subb
hlt
dec
sbb
daa
push
mov
xchg
push
inc
out
inc
xchg
in
rcrb
xchg
fadds
cwtl
add
subl
inc
mov
pop
mov
incl
pop
jmp
out
std
or
bound
and
jl
pusha
shll
fwait
jne
fcomps
scas
xchg
mov
test
push
add
out
fnsave
xchg
out
div
outsl
push
loop
add
lahf
data16
test
mov
lahf
add
gs
or
pop
push
push
addl
cmpsb
xchg
les
sbb
add
test
iret
out
adcl
dec
fidivrl
aaa
rcrb
mov
push
enter
pusha
into
sbb
ja
popf
pop
cmp
ror
sbb
bound
lds
dec
mov
jl
sub
add
testb
inc
cli
add
jbe
xchg
lcall
mov
nop
mov
test
or
data16
rcl
jbe
out
adc
mov
jge
mov
or
and
xchg
xchg
addr16
dec
or
sbb
push
xchg
ja
arpl
jp
pop
popf
fsub
fisubl
mov
test
add
ret
sub
xlat
jle
lea
pop
popf
pop
andw
push
inc
gs
or
in
loopne
xchg
push
xchg
lcall
add
push
mov
out
test
lret
cmpsb
rcr
xor
sub
popl
test
adc
nop
not
and
inc
fxam
or
addb
xor
add
push
mov
imul
and
mov
jle
popa
pop
jb
fistpll
les
inc
shll
dec
fwait
xchg
lahf
subb
mov
addl
mov
ficoms
pop
out
lahf
mov
test
popf
test
dec
popf
add
ret
push
dec
pop
push
inc
daa
jle
sti
movsl
jb
frstor
jmp
jnp
aaa
push
jns
pushw
pusha
jae
aaa
add
inc
mov
mov
rcr
das
pop
mov
cwtl
push
pop
sarl
in
inc
push
ja
inc
sahf
lahf
int3
jno
sub
andb
inc
out
pop
mov
inc
ljmp
test
shll
leave
faddp
dec
imul
add
sub
fstp
arpl
mov
push
popf
add
mov
jge
into
imul
pushf
sbb
mov
inc
mov
push
pop
jno
loop
icebp
arpl
lcall
insb
ja
ret
into
lahf
rolb
mov
inc
add
rcll
adc
mov
insl
adcb
clc
dec
into
push
jle
dec
xchg
jnp
bound
stos
shl
xor
mov
aas
xor
inc
xchg
adc
push
pop
push
les
adc
dec
popf
mov
and
push
bound
stos
pop
cmp
stos
add
jno
bound
pop
idivl
inc
xor
inc
vmovaps
fimull
cld
xor
fwait
dec
data16
or
pop
jle
out
xor
push
mov
cmp
rcrl
das
sahf
fbstp
adc
jl
lods
pop
cwtl
jne
andl
push
xchg
dec
or
data16
push
loop
shr
pop
fisubrs
jbe
bnd
xchg
fnsave
test
aam
fcmovnb
sahf
add
adc
xor
xchg
clc
inc
popf
rol
rcrl
sbb
pop
xorb
or
adc
mov
fildl
and
push
cmc
and
push
jno
dec
popf
icebp
and
jg
push
into
pusha
leave
mov
sbb
mov
pop
inc
test
jle
pop
fs
addb
dec
bound
jge
lcall
cmpsb
add
cmpsl
cmp
sub
xchg
or
rcrl
cli
adc
pop
cmp
inc
dec
mov
fsubs
outsb
adc
xlat
inc
nop
mov
push
aam
jle
fsubl
test
out
dec
xor
push
outsb
dec
test
fwait
push
adc
mov
fldl
pop
inc
add
dec
and
mov
pop
inc
mov
push
pop
jbe
add
lcall
lock
push
addb
pop
gs
mov
les
add
js
stos
inc
mov
leave
adc
movb
add
push
or
orl
jle
inc
add
cmp
bound
js
pop
frstor
dec
and
fnsave
outsb
pop
outsb
or
cmp
inc
dec
fldl
push
jge
pop
pop
inc
sbb
cli
addr16
push
leave
andb
xchg
cmpsl
push
dec
and
andl
inc
xchg
inc
mov
test
loop
jge
mov
adc
cmpl
push
cmpsl
addr16
xchg
adc
dec
test
arpl
and
pushf
jb
jbe
enter
outsb
mov
jp
sub
push
xor
mov
add
out
mov
or
add
bound
addb
xorl
loope
mov
adcl
insl
fdivp
mov
xchg
popa
xlat
or
and
leave
mov
xor
mov
pop
mov
lcall
scas
mov
cmpb
pushf
or
addl
fs
daa
int3
xor
add
stc
xor
xchg
jnp
data16
mov
cmp
inc
xor
fidivrl
scas
xchg
jno
pop
pop
bound
sub
push
or
iret
cmpl
inc
sbb
std
negl
mov
sbb
clc
pusha
inc
add
cmc
sti
addr16
test
mov
mov
gs
addr16
push
stos
stc
lret
outsl
mov
jns
mov
sbb
out
jae
sub
fisttps
sbbb
addr16
ret
addr16
jp
mov
adc
jae
inc
in
ds
sbb
sbbl
inc
setle
sub
movb
push
sbb
aaa
dec
pop
or
jge
push
cmpsl
inc
jmp
mov
add
out
jno
sbb
in
insb
mov
stos
push
xor
pop
add
xchg
xchg
inc
cmp
lods
xchg
jnp
xchg
and
pop
mov
pop
arpl
insb
push
pop
gs
test
sbb
xchg
push
mov
inc
mov
inc
mov
sbb
cmpl
nop
push
lcall
fisubrl
mov
mov
movsl
xchg
scas
jmp
test
outsb
pop
arpl
movsb
and
or
pop
mov
addb
cmc
and
ja
dec
add
xchg
or
fisttps
in
sbb
mov
ret
adc
test
subb
sbb
add
pop
sbb
dec
fdivrl
or
aas
push
fiadds
outsl
or
sbb
rcrb
fwait
add
push
movsl
or
mov
pop
out
faddp
data16
lea
xchg
in
fmul
inc
fwait
dec
and
sub
push
jns
add
fidivl
sbb
pop
loope
cmp
xor
fs
xchg
sbb
lods
pop
pop
lcall
cmc
subl
cld
fwait
dec
mov
filds
xchg
lds
out
add
nop
xchg
sbbb
out
dec
add
pop
shl
inc
xchg
test
ret
inc
daa
jnp
push
mov
and
jp
ljmp
jbe
inc
sbb
mov
sbbl
stos
sbb
sbb
dec
xorb
xchg
pop
ja
mov
mov
fwait
inc
je
push
ret
push
daa
inc
pop
pop
sarl
xorl
outsl
je
dec
mull
add
shlb
sbb
xchg
ret
jnp
xchg
sahf
mov
cmp
pusha
cmp
cmp
dec
mov
ret
push
inc
push
cmpsb
leave
xorb
popf
jno
lods
popf
shll
rcl
mov
das
enter
rclb
mov
mov
lret
jbe
aas
adc
xchg
xchg
inc
pop
push
mov
ret
pop
push
inc
pop
lret
mov
cmpsb
or
popf
insl
lret
lret
out
adc
pop
cltd
pop
mov
adc
arpl
outsl
movsl
lods
inc
cs
orb
inc
or
xchg
mov
fiaddl
pushf
fwait
sahf
mov
insb
mov
test
icebp
jb
pop
ret
scas
push
pop
xorb
dec
mov
mov
ret
xchg
movb
jne
mov
fmull
push
adc
stc
popf
shll
lds
jmp
pop
push
loope
or
lahf
mov
es
sbbb
pushf
cs
shll
mov
orl
test
cmc
lock
sbb
dec
mov
ja
jb
push
in
movsb
add
stos
push
stos
push
push
cmpsl
adc
dec
push
push
sbb
mov
orl
cwtl
push
addb
scas
xor
mov
sbb
pop
inc
mov
fildll
fmuls
and
fwait
test
hlt
adc
cmp
xchg
xchg
push
stos
mov
sbb
xorl
push
jg
or
mov
jl
sub
mov
daa
popf
lcall
or
add
movb
sub
sbbb
push
out
sahf
pop
push
mov
std
mov
or
std
push
sbbl
jmp
pop
imul
or
lcall
mov
pop
sahf
pushf
inc
jae
add
mov
push
xchg
mov
adc
in
ret
fists
dec
cmp
add
daa
imul
xchg
fnstsw
cmp
popw
pop
js
int
push
test
jno
jb
pop
sahf
push
mov
sbbb
add
pop
mov
shrl
jbe
jl
push
stos
lods
loope
jle
dec
and
xchg
aad
jg
sbb
repnz
sbbl
outsb
xchg
pop
pop
and
dec
fwait
sub
loope
stos
fadds
add
pop
inc
lods
movsb
cwtl
push
pop
or
ds
test
data16
decb
inc
pusha
cmpb
mov
sbb
sldt
sbb
lahf
or
xlat
push
ja
or
sbbb
cli
rol
lcall
cli
sub
addl
xchg
pop
pop
inc
insb
insl
cmpsl
addb
or
pop
push
mov
jl
sub
and
push
or
movsb
data16
jp
push
cmpl
out
push
pop
inc
js
xchg
subb
jae
popf
pop
dec
gs
add
or
pop
mov
fistl
fisubl
sahf
cmp
fildl
mov
popa
scas
adc
inc
popf
aam
out
mov
pop
in
mov
pop
pushfw
fcompl
mov
cmp
cmc
dec
call
pushf
mov
or
popf
pop
orb
inc
insl
xchg
cs
pop
divb
inc
pop
mov
push
cltd
dec
jmp
push
sub
jae
lcall
pop
or
fiadds
xchg
addl
je
test
xchg
je
sbbb
mov
pop
and
jno
dec
icebp
sbb
pushf
mov
dec
add
or
sahf
mov
jg
xchg
push
js
xchg
data16
cmp
xlat
mov
adc
test
fucom
pop
inc
sbb
test
stc
add
jbe
fcomps
sahf
andb
push
xchg
or
std
fcomps
pop
xchg
jl
inc
test
shll
sbb
sbb
cmpsb
addl
sbb
negb
in
cld
andl
mov
dec
leave
addr16
gs
popa
mov
push
or
mov
test
and
test
sahf
push
xchg
mov
adcl
xchg
fwait
movb
xorb
outsl
xchg
ffree
or
inc
clc
adc
enter
mov
leave
pop
insl
xchg
xlat
aaa
xchg
xor
xchg
pop
push
mov
cmc
cmpb
les
testb
xor
ret
bnd
and
shrb
push
mov
add
jns
inc
lods
es
push
pop
add
or
mov
shlb
mov
lods
and
fadds
adcb
push
sbb
jnp
daa
fsts
lahf
adc
push
or
pop
xchg
pop
sbbb
andb
push
popa
inc
pop
add
je
mov
jb
jle
test
mov
fadds
mov
fwait
adcb
fstl
mov
fisttps
mov
pop
or
add
test
sub
sti
sbb
xchg
test
das
add
or
roll
daa
adc
popa
pop
cmpsl
jg
cmp
popa
notb
mov
das
test
hlt
ret
jmp
push
inc
mov
pushf
test
lret
icebp
fadd
mov
test
add
inc
xor
jnp
or
scas
insl
enter
or
gs
repnz
ret
push
rclb
add
cwtl
setbe
adc
xchg
adc
loopne
mov
lcall
insl
sub
test
inc
sbb
or
push
xor
push
sbb
xlat
cmovb
aam
orb
sbb
inc
pop
inc
jle
out
lcall
loopne
rcr
and
xchg
cmp
sub
xlat
or
dec
cmp
xchg
daa
fmuls
xor
inc
aam
cs
push
sbbl
pusha
xor
int3
test
sub
dec
shlb
ret
xchg
inc
mov
int
data16
sub
fidivl
add
inc
jg
lds
xor
mov
enter
push
mov
ret
addb
inc
pop
test
or
or
push
jnp
xor
xorl
sarl
fwait
lds
push
xchg
pop
mov
push
int3
popf
data16
xchg
add
aaa
repnz
xchg
or
jecxz
addb
es
testl
lds
mov
sub
adcb
cmp
ss
leave
cwtl
xchg
pop
sbb
mov
mov
imul
pop
rcll
adc
inc
push
aad
xlat
test
out
mov
mov
xor
lea
fcmovbe
fwait
inc
pop
inc
inc
push
ret
mov
test
lret
nop
roll
mov
jmp
adc
push
inc
data16
push
call
and
fucom
xchg
lahf
cmc
xchg
xchg
out
add
dec
mov
adc
jbe
and
add
inc
fisubs
rcr
mov
cmpb
imul
push
fs
popa
pop
add
int3
lds
sbb
fcmovnb
mov
jg
mov
dec
jg
jbe
push
cltd
mov
aaa
test
mov
jge
ja
ret
or
addb
orl
inc
jae
ja
addl
push
or
loope
xor
nop
inc
xor
sub
xchg
pop
inc
dec
test
jl
dec
pop
push
push
lds
push
pop
xchg
fstl
test
push
mov
pop
fsubl
and
or
mov
or
xchg
adc
fwait
inc
jle
cmovp
xchg
cwtl
xchg
xchg
pop
push
stos
ret
test
addr16
xchg
jbe
or
loope,pt
or
fs
lods
mov
cmc
je
sbb
adc
movsb
sbbb
andb
ss
je
test
jp
sahf
scas
pop
mov
inc
push
mov
xchg
leave
daa
pop
mov
inc
jl
push
fwait
xor
orl
push
push
xchg
imul
xchg
imul
xchg
ds
sbbb
add
daa
xchg
mov
fidivl
xchg
lcall
adc
test
push
addr16
sarl
js
inc
push
aam
push
into
rol
pushw
mov
inc
imul
mov
lds
int3
cltd
inc
push
lods
jns
stos
cmc
pop
jge
push
inc
ret
fwait
inc
data16
pop
pusha
jp
into
push
rcll
dec
ja
cs
adc
add
lret
leave
push
jle
mov
addb
les
add
addl
dec
jno
addb
aam
or
mov
das
lods
mov
push
jnp
movsb
adc
mov
in
or
push
adcb
mov
frstor
rorb
xorb
jae
leave
inc
or
shl
cmc
sbb
js
xor
dec
pop
or
pusha
scas
pushf
dec
mov
adcl
leave
inc
pop
add
push
sahf
in
sar
add
pop
push
subb
popa
xchg
push
int3
fcoml
popf
dec
mov
aam
jle
inc
adc
decl
push
pop
rolb
add
cmp
popf
fwait
orb
stc
pushf
add
aaa
daa
aaa
push
add
cltd
inc
pop
dec
or
add
sbb
adc
out
rclb
repnz
pushf
lds
lods
pop
sahf
or
or
xchg
orb
enter
inc
mov
rcrb
inc
ja
adc
xchg
sbb
inc
mov
mov
cmp
cwtl
lahf
add
pushf
inc
pushf
xor
repnz
cmc
les
or
addr16
or
xchg
sbb
fsubs
mov
gs
stos
xlat
pushf
sub
ret
lea
fadd
data16
sub
add
fwait
xchg
or
dec
mov
sbb
jl
push
sbb
lds
leave
dec
add
jb
mov
and
aad
mov
sub
lret
mov
int3
cltd
dec
inc
jbe
or
pop
or
scas
add
data16
fwait
popa
jle
mov
lahf
fwait
mov
andl
push
jle
js
mov
or
pop
pop
inc
jnp
fisubs
pop
mov
roll
bound
push
add
push
xchg
sbb
cmp
je
testl
xor
adc
mov
adc
imul
pop
xlat
mov
jecxz
inc
ss
cmc
push
xchg
mov
out
add
outsl
loopne
mov
or
cli
lods
pop
insl
or
push
ds
pop
xorl
jl
outsl
cwtl
jbe
ret
dec
cmp
insl
and
xchg
jns
pushf
addb
push
ret
add
clc
leave
rorl
push
xchg
cmpsl
mov
rcrb
jp
insl
jae
sbb
push
push
lahf
pop
clc
lcall
sub
negb
pop
add
mov
pop
or
dec
ds
fs
push
addl
adc
das
push
pop
pop
or
addr16
push
cmpb
out
fisubl
adc
inc
push
xchg
jp
aaa
sub
add
adc
or
repnz
ljmp
mov
test
xchg
lods
jp
xor
jnp
push
mov
xor
std
fisttps
push
xchg
push
scas
or
fistps
push
push
add
mov
in
pop
and
fwait
stos
cmp
mov
or
push
lds
jg
or
inc
adc
roll
mov
xlat
mov
or
dec
daa
sahf
push
sahf
xchg
pop
dec
mov
ret
and
cmpsl
fildl
faddl
nop
dec
hlt
movsb
inc
mov
mov
pop
sahf
mov
add
fbld
adcl
lock
push
popf
pop
mov
mov
mov
mov
jle
data16
inc
push
mov
sarb
mov
cmp
inc
sbb
insb
fistl
sbb
push
or
fsubl
sbb
inc
scas
outsl
mov
rcrl
inc
aam
fiaddl
pusha
xor
movb
scas
adc
sub
arpl
lds
lods
or
lret
jb
push
enter
stos
pusha
test
add
pop
pop
push
xchg
mov
addb
inc
repnz
adc
xor
sbb
push
mov
mov
or
fs
fidivl
xor
adc
test
subb
add
mov
fdivp
pushf
inc
inc
stos
push
or
adc
inc
ret
sti
dec
add
sbb
test
lcall
push
mov
pop
push
and
push
mov
ja
mov
inc
adc
cli
stc
sbb
into
cmp
mov
sbb
pop
jp
mov
pusha
dec
popa
inc
add
adc
xchg
rcrb
popf
sbb
fcomp
addl
dec
rol
cmp
ficoms
out
jnp
add
pop
cmp
and
xor
sahf
out
lcall
test
pop
inc
add
push
inc
xchg
mov
mov
inc
test
jl
mov
inc
push
cltd
xchg
dec
notb
inc
test
xchg
jp
dec
dec
xchg
sub
cwtl
add
jle
cmpsl
or
mov
mov
inc
movsl
sahf
lods
jle
in
xchg
jl
aaa
nopl
adc
aaa
roll
mov
mov
or
test
mov
ror
mov
popa
push
push
sahf
dec
and
leave
xchg
cmpsb
loop
push
lds
sbb
daa
lret
inc
dec
adcl
inc
dec
cmp
or
xchg
clc
pushf
sbb
addr16
dec
xchg
mov
inc
pop
iret
push
xchg
testb
fidivl
xlat
mov
shll
xchg
imul
or
sub
fiadds
orb
mov
std
add
add
clc
add
rclb
add
ja
xor
inc
aam
push
pop
inc
xchg
popf
pop
xchg
arpl
aas
add
lret
cmp
push
mov
dec
sub
dec
push
inc
xchg
mov
sbb
sub
cltd
test
lcall
sbb
cmp
xlat
sbb
test
pop
into
sti
test
pop
add
stos
test
shlb
lahf
jne
xor
jge
sti
orb
sub
in
loop
or
sub
mov
sbb
ret
pushf
xorb
add
mov
adc
inc
jo
push
test
repz
inc
xorl
es
jecxz
adc
sbb
fiaddl
aaa
add
sahf
jg
push
or
inc
push
gs
inc
lea
das
push
xchg
popf
push
shl
mull
lahf
or
in
addr16
inc
or
mov
jne
pop
idiv
test
imul
add
not
pop
inc
push
jg
mov
movb
jne
sbb
testb
out
mov
push
or
fstps
pusha
push
jecxz
adc
xchg
sub
popl
fdivs
inc
push
mov
and
sub
lcall
inc
sbb
cmc
sahf
fbld
daa
adc
loopne
mov
call
mov
jno
add
fldt
aas
adc
add
jne
cmpsb
lods
std
or
xchg
mov
pop
mov
xchg
sub
add
mov
xchg
mov
outsb
sahf
sbbb
fidivl
fnstenv
loopne
nop
dec
fucomi
add
repz
fs
push
stos
or
jnp
sarl
test
adc
inc
add
pop
jle
movl
js
xlat
lds
imul
in
adcl
and
sbb
xchg
jl
imul
sbbl
push
pushf
add
add
inc
lahf
bound
mov
dec
push
push
lcall
mov
xor
loopne
test
lahf
jb
inc
mov
pop
sbbb
mov
fwait
ret
mov
mov
pusha
incl
jnp
adc
fstl
fcomps
lods
xchg
addr16
inc
lahf
pusha
jmp
imul
fcoml
inc
cmp
popfw
inc
mov
jle
pop
jle
sahf
add
cli
inc
dec
mov
inc
sbb
sbb
and
jmp
inc
inc
or
aaa
addb
roll
jne
pop
mov
pushf
jns
cmpsl
mov
adc
arpl
sahf
adc
jbe
inc
lods
shll
popf
pop
loope
jl
push
aad
out
dec
pop
pop
xchg
sbb
adc
out
lret
sahf
inc
adc
jle
jne
popf
subb
or
lahf
push
daa
mov
push
pop
icebp
sbb
xchg
mulb
inc
dec
aad
frstpm(287
cmc
pop
mov
pop
sbbb
xlat
decl
add
scas
inc
shrl
mov
adc
or
add
mov
divb
popa
out
inc
or
je
fildl
sub
cmp
xor
mov
pop
addl
aam
hlt
loope
push
sbb
sahf
add
lods
push
and
pop
test
cmp
adc
xchg
push
pushf
aaa
cmpsb
ficoms
adc
add
push
and
xchg
dec
jp
pop
addb
pop
fwait
test
loopne
mov
aaa
adc
xchg
jno
movl
pop
fwait
adc
mov
xchg
lret
stos
add
mov
cmc
push
cmpsl
rorl
jae
outsl
xchg
mov
add
or
outsb
or
pop
int
pop
pop
or
lcall
mov
test
inc
xchg
add
or
jns
mov
lahf
cmp
pop
adc
test
mov
ret
pop
xor
pop
int3
jbe
inc
addr16
mov
jle
mov
xchg
push
pop
ret
and
add
lods
jns
fildl
push
ffreep
orl
mov
xlat
cmp
mov
add
pop
sbb
ret
mov
pop
add
mov
jl
inc
lcall
popa
jo
lock
mov
inc
inc
sbb
inc
inc
xorb
sahf
push
jnp
mov
or
test
shl
mov
inc
dec
mov
xor
xchg
imul
sarl
mov
lahf
aad
in
faddl
gs
scas
out
ficomps
pop
fcompl
mov
outsl
mov
into
mov
add
test
xor
adcb
or
shrb
pop
xchg
lods
gs
pusha
dec
orl
pop
test
and
xchg
jne
jb
xchg
add
js
sbbl
dec
xorl
jns
mov
inc
cmpsl
roll
stos
fs
inc
push
mov
adc
mov
dec
cmp
lods
icebp
cmpsl
jnp
inc
outsl
fs
adcb
mov
test
xchg
rcll
pop
push
jp
ja
lods
inc
mov
and
mov
sbb
push
adc
outsl
setl
arpl
inc
jo
pop
cmpsb
inc
shrb
pop
rolb
inc
jbe
imul
lods
lea
addl
sahf
popf
call
or
add
sub
lcall
jno
jle
fdivl
inc
push
xor
lods
dec
test
negl
inc
sbb
pop
sar
dec
mov
xorb
add
pop
adc
pop
pop
add
pop
mov
jge
mov
ficoms
add
decl
fs
xchg
sbb
mov
xorl
ret
cmpsb
sbb
jne
out
add
ret
inc
daa
xchg
pop
int3
mov
adc
test
ret
loopne
jp
pushf
popf
lcall
xor
inc
popf
inc
lret
leave
mov
sub
psubusw
fbld
lea
mov
inc
scas
test
mov
shl
add
xchg
jo
ja
add
pop
sarl
push
pop
jbe
xchg
leave
mov
sbbb
inc
xchg
xchg
cmpsl
pop
push
pop
mov
lods
adc
dec
or
push
mov
mov
mov
or
sbb
add
pop
jne
fwait
subb
jmp
lea
pop
out
mov
mov
jbe
xchg
outsl
dec
sbb
leave
lahf
mov
mov
pushf
add
cli
insb
push
fucom
das
or
add
inc
pop
adcl
mov
sbb
call
push
sbbl
leave
test
pop
lahf
gs
cmpsl
xchg
aam
lahf
sahf
sbb
inc
xchg
fcompl
inc
shll
pushf
add
ljmp
test
xchg
ljmp
fs
stos
pop
sbb
cmpsl
inc
popf
pop
andl
xchg
push
inc
outsl
leave
mov
addl
xor
sbb
in
subb
lds
xchg
insb
fisttps
popa
call
addr16
adc
adcl
jnp
dec
test
leave
fwait
adc
andb
std
and
adc
jbe
inc
mull
sbbb
sub
aas
fwait
loopne
pushf
xchg
rcrl
cmc
inc
test
or
xchg
sbb
push
xor
sbb
gs
rcrl
xor
negl
leave
bound
inc
xor
xor
nop
pop
out
mov
inc
sbb
daa
sbb
push
pushf
dec
jae
sbb
mov
test
jmp
jns
enter
imul
orl
fnstsw
jne
insl
add
jl
test
int
data16
or
test
fdivrl
ja
and
dec
cmpb
dec
ret
jecxz
cmpb
dec
enter
shr
popf
popf
inc
icebp
push
test
or
out
mov
mov
lds
mov
lret
jp
into
minps
push
gs
lcall
inc
inc
stos
xchg
stc
mov
bndldx
mov
dec
sbb
mov
push
xchg
fwait
rolb
lret
adcl
mov
xorb
add
mov
push
rolb
lds
outsb
popf
pop
addr16
pop
add
push
dec
sbb
xchg
mov
lret
dec
dec
lahf
andl
imul
dec
mov
pop
inc
and
jne
addl
test
stos
test
enter
nop
fisttpl
lahf
add
bound
mov
jl
pop
or
ds
or
or
mov
inc
stos
imul
fs
push
mov
xchg
cmpsb
cwtl
js
rolb
add
or
cmovb
push
pop
hlt
sbb
xlat
pop
push
mov
bound
popf
ret
add
setp
gs
enter
xchg
ja
shrl
dec
cli
rclb
mov
inc
js
ljmp
out
out
jns
add
repnz
dec
faddp
pushf
lcall
stc
inc
push
xor
fimull
shl
test
mov
inc
mov
jnp
mov
dec
mov
test
mov
add
xlat
pop
ret
bound
ss
inc
jp
aaa
popf
lcall
or
add
ss
in
jns
cmpb
and
cmp
add
pop
outsb
adc
xchg
sbb
cld
lcall
leave
ss
dec
jns
mov
mov
pop
outsb
dec
std
push
fwait
popa
cmp
std
je
inc
jle
js
mov
pop
dec
inc
pop
xorl
xor
stos
jbe
enter
dec
mov
fs
dec
add
push
shr
addb
fnsave
fsubrl
stos
sysexit
mov
mov
fwait
mov
sbb
mov
insb
orb
pop
jp
xchg
mov
inc
mov
lds
adcl
sbb
pop
scas
xchg
ret
jne
test
aas
adc
loope
or
xchg
cmp
mov
and
inc
xchg
xor
lahf
sbb
je
inc
jg
sub
and
addb
mov
pop
push
mov
xor
or
mov
adc
fiaddl
in
imul
jnp
push
fildl
sahf
scas
mov
ja
pushf
bound
or
push
dec
outsl
and
mov
fs
push
push
jnp
cmova
xchg
inc
stos
jmp
mov
inc
add
mov
enter
jo
pop
pop
fisubs
jnp
daa
aaa
cmp
pushf
inc
lock
pop
lahf
xlat
sbb
add
out
pushf
pop
test
and
pop
push
cli
inc
add
daa
pop
xchg
cmp
or
stc
addr16
mov
mov
out
test
call
sbb
push
push
pop
pop
push
imul
clc
addb
fimuls
add
jg
lods
cltd
xorb
push
outsb
imul
loope
sbb
xchg
xchg
mov
jle
repnz
shl
les
or
pop
test
movl
stos
and
or
ret
mov
js
sbb
out
push
xchg
lds
imull
lahf
popf
push
add
add
push
add
data16
jge
dec
dec
or
addb
or
insl
testb
out
cmpb
pop
pop
mov
loop
jb
push
dec
nop
add
test
test
insl
faddl
addb
shlb
inc
push
outsb
fistps
leave
mov
jg
data16
pushf
lods
jne
and
lahf
movsb
imul
push
jle
fsubrl
fwait
movsb
inc
jnp
inc
or
stos
addr16
lds
xor
imul
fwait
cmc
je
cmp
lcall
pop
inc
lods
jnp
add
jecxz
inc
add
sub
push
xchg
and
push
or
jne
mov
insb
push
stos
ret
and
mov
loop
jbe
jp
jae
stos
mov
bound
stos
ret
mov
mov
pushf
sbb
pop
out
insb
lds
push
movb
cltd
imul
mov
adc
xchg
push
lods
ljmp
daa
fwait
inc
adc
fs
xchg
frstor
ret
pop
addb
adc
sbb
add
retw
fstpl
lock
pop
test
test
cmp
inc
pushf
shlb
push
sbb
outsl
rcrl
mov
sbb
xchg
test
xor
fnsave
adc
mov
mov
negb
pushf
dec
mov
ja
fldl
je
pushf
ret
inc
sbb
add
clc
mov
xchg
jl
mov
data16
mov
imull
sbb
outsb
inc
insb
pop
leave
mov
test
pop
jne
addl
divb
or
push
xchg
push
stos
daa
jp,pn
int
add
test
clc
sbb
pop
subb
andl
mov
mov
addl
dec
pop
pop
out
pop
cmpsl
xor
mov
jmp
iret
inc
faddl
loop
sbb
fimuls
cmp
sbb
push
pop
andl
mov
add
xchg
ss
lcall
int3
ret
out
mov
cmpsl
lret
cwtl
arpl
push
andb
dec
sbb
dec
addr16
xchg
xchg
fstl
ret
lahf
in
cs
fcoml
mov
jge
inc
popa
push
inc
int3
adc
ja
scas
lods
sbb
or
inc
cmpsl
jmp
sbb
jecxz
inc
lds
jl
sbb
stc
pushf
mov
dec
test
test
push
mulb
and
add
inc
sub
arpl
nop
sub
testb
mov
pusha
inc
lcall
mov
jg
push
inc
cmpsl
sbb
push
mov
or
cmpsl
faddl
adc
jbe
popa
lcall
gs
xor
pop
jne
insl
lret
rcrl
inc
lods
shrb
roll
addl
icebp
mov
lods
mov
fdivrs
push
lea
mov
inc
adc
cmp
stc
inc
inc
jo
adcl
fwait
inc
arpl
mov
pushf
popf
out
cmpsl
lcall
ficoms
cs
sahf
lahf
jl
and
pop
inc
xchg
popf
push
xchg
aad
pop
shll
stos
lea
push
push
scas
sub
mov
jp
nop
imul
sahf
jns
andb
cmc
call
dec
pop
fwait
pop
xchg
dec
notl
push
ja
inc
add
adc
pop
add
cmc
addr16
adc
dec
jns
inc
addl
jo
bt
lcall
test
imul
xchg
pop
jno
cmp
sbb
xor
lea
lahf
cmp
inc
lret
pop
std
lock
hlt
add
mov
test
imul
outsb
popf
data16
jg
cmpl
add
andb
cwtl
in
add
inc
stos
push
inc
cmc
loope
test
loop
fcmovnb
xchg
lea
orb
mov
inc
fstpt
stc
pop
test
pop
popf
in
shrl
movb
data16
out
orb
popf
rcrl
leave
cs
jle
iret
xorb
jnp
filds
sub
fs
dec
inc
pop
add
or
aas
add
or
insl
cmc
dec
mov
pushf
sbb
rcrb
dec
add
add
mov
pusha
aas
ja
add
jno
aaa
inc
pop
repnz
sbbb
js
out
andb
xlat
in
jns
jle
cli
jo
jle
call
dec
repnz
mov
movsb
push
orb
loopne
fs
dec
inc
or
imul
lahf
outsb
out
out
or
push
jg
xor
fcomi
icebp
add
dec
repnz
sub
sbb
in
inc
xor
jge
adc
push
bound
mul
xchg
add
xchg
insb
ja
mov
out
pop
xchg
jge
xlat
repz
inc
push
repnz
fwait
sbb
iret
dec
xchg
dec
cmc
fwait
popf
dec
inc
inc
roll
xor
pop
pop
adc
or
and
gs
sbb
sub
loope
test
dec
lahf
mov
push
mov
pop
shrl
das
cwtl
lcall
fildl
add
addb
out
leave
in
pop
out
inc
sbb
pop
mov
pushf
sti
rclb
popa
dec
cmpsb
fstpl
stc
rorb
add
ret
es
int3
sbb
pop
inc
shll
dec
add
das
andl
lds
or
imul
or
push
and
add
outsl
lock
es
mov
push
push
jnp
or
and
push
pop
sbb
dec
lahf
ret
rcrl
popa
mov
and
xchg
dec
test
and
dec
hlt
notl
dec
insl
add
jo
sahf
imul
mov
xor
dec
rcll
pop
test
jg
and
jp
seto
rorl
test
xchg
mov
sahf
push
sbb
ret
inc
jnp
imull
mov
ret
mov
and
inc
dec
jo
divl
daa
in
and
lcall
mov
push
mov
sbb
inc
arpl
test
loopne
clc
or
xor
add
ficomps
dec
pop
rcrb
loop
leave
cmp
bound
jle
sbb
add
nop
daa
cmp
xchg
or
addr16
imul
push
or
mov
mov
fcomip
in
dec
gs
sbbl
outsb
dec
xorb
inc
xor
push
mov
mov
pop
roll
icebp
arpl
mov
inc
pop
sub
orb
pop
add
xchg
or
outsb
cmpsl
mov
sub
outsl
or
and
add
pop
cmp
adc
add
orl
pop
jmp
xlat
test
add
add
data16
sub
dec
pop
shll
test
push
or
adc
dec
je
cmpsl
xchg
fists
pusha
inc
repz
inc
pop
lcall
inc
push
push
stc
movsb
xor
or
frstor
pop
test
inc
jnp
dec
dec
imul
cmp
cmp
mov
andb
pop
lcall
or
adc
bndldx
sahf
mov
shrl
xchg
mov
popf
mov
sahf
sbb
sbb
pop
push
xchg
push
sahf
lcall
mov
enter
jl
xchg
sbbl
jbe
jl
xchg
addr16
sahf
push
insb
or
xlat
add
cltd
sbb
js
cmp
mov
dec
popf
dec
pop
xchg
sbb
or
mov
pop
push
insl
dec
inc
dec
add
push
add
pop
test
pop
jp
xchg
test
std
fsubl
cmp
adc
pushf
lcall
or
cmc
das
adc
js
push
mov
add
adc
stc
or
xlat
leave
pushf
xor
and
xor
stos
popf
pop
test
push
pop
inc
rcrl
imul
pusha
xchg
mov
popf
fdiv
pop
push
pop
jg
xor
inc
xchg
mov
xchg
jle
or
or
xchg
jb
pop
adc
sub
stos
mov
leave
lret
pop
xchg
dec
daa
pop
or
add
sbbb
jl
das
dec
lds
push
adc
jbe
sbb
sbbb
or
in
jp
fists
mov
xlat
xchg
pop
or
dec
mov
roll
jle
mov
add
xorb
dec
aaa
pop
sbb
orl
add
xor
pop
lcall
xchg
or
adc
test
int3
sahf
xchg
lahf
mov
iret
mov
cmp
lock
fimuls
inc
negl
pop
cmp
mov
sahf
cmp
xor
repz
sbb
cmp
fmull
ret
xchg
xor
jp
je
pushf
add
sub
ret
lds
pushf
jne
bound
jl
xchg
push
stos
gs
sub
jle
inc
aas
pop
jne
pop
in
push
xor
jle
mov
pop
lock
leave
add
je
push
jne
pushf
in
cmp
aaa
andb
testb
mov
inc
data16
push
mov
jle
call
jb
popf
sbb
nop
jg
xorl
cltd
pop
shrb
dec
mov
pop
jmp
add
test
lahf
mov
sahf
ljmp
push
jl
cmpsl
sbb
dec
cmpsl
in
pop
push
pop
lcall
pushf
fistps
ljmp
repnz
pop
push
addb
push
jl
xchg
sub
mov
pop
bnd
or
ret
jle
pushf
and
or
in
add
aad
cwtl
fdivl
sub
push
xchg
push
sbb
mov
mov
pop
mov
sahf
xchg
jne
movl
xor
les
addb
sbb
xchg
push
xorl
es
lahf
call
jnp
add
pop
inc
dec
inc
test
addl
inc
xchg
or
mov
jbe
or
dec
pusha
xchg
subb
adc
outsl
mov
popf
inc
cmp
lcall
or
inc
rcrl
adcb
jns
es
mov
mull
add
mov
ret
jne
xchg
js
pop
inc
cmpb
imul
mov
adc
adc
cmpb
ror
pop
jne
push
movsl
lods
xchg
mov
das
mov
fistps
mov
cltd
inc
pop
xor
push
ja
add
jecxz
pop
pop
xor
test
or
mov
ds
xchg
std
cmp
xchg
inc
pop
push
bound
das
popa
leave
in
imul
mov
fcmove
lahf
lret
dec
push
sbb
or
rorb
hlt
push
popaw
adc
jle
inc
negb
dec
adc
pop
or
dec
push
mov
mov
xor
push
jge
negl
lods
and
addl
adc
test
cltd
jmp
mov
dec
pop
cmp
test
aaa
sahf
dec
dec
je
sbb
daa
add
cmpsl
adc
leave
jne
or
mulb
push
or
clc
fadd
add
fwait
insb
fwait
leave
mov
inc
xchg
stos
daa
scas
jge
popf
leave
cwtl
test
test
adcl
and
sbbb
jecxz
les
bound
xchg
fcoml
xchg
stos
repnz
fs
sbbl
mov
mulb
push
cmp
pop
popf
sbb
orb
add
jbe
push
jle
testb
mov
imul
mov
push
lods
cmp
mov
or
push
addr16
js
into
push
mov
aas
dec
shrl
mov
out
xchg
pop
mov
adc
ljmp
ja
rorb
popa
outsb
pop
and
adc
pop
outsb
pop
sbb
xchg
adcl
or
push
cld
movsl
js
or
push
lahf
fs
repz
pop
loope
lcall
dec
cwtl
enter
push
inc
xchg
out
andb
test
dec
aas
addl
ficompl
push
xchg
enter
and
inc
add
push
roll
push
pop
fucomp
adc
pop
daa
mov
andb
mov
pushf
add
fnstenv
roll
mov
push
add
pop
jecxz
add
dec
addr16
out
lds
push
call
pop
xchg
test
adc
iret
imul
test
push
inc
les
subb
popf
jp
test
call
test
loope
mov
sahf
andl
jae
or
push
subl
add
push
jnp
sub
pushf
jb
or
jmp
adc
inc
pushf
daa
ds
ret
test
mov
or
popa
out
adcb
add
adc
jg
push
sbb
jle
jl
dec
sbb
jmp
js
test
mov
test
pop
add
pop
cmc
jne
lret
lds
sbb
mov
inc
shl
mov
fisttps
nop
xchg
lcall
and
in
mov
inc
inc
sahf
inc
outsb
insl
movl
pop
lods
mov
js
inc
fcmovnb
xlat
jb
andl
add
insl
stos
mov
mov
inc
jmp
addb
xchg
cmpsl
xchg
data16
pop
out
ja
lcall
jae
xor
jp
fmulp
pop
pop
pop
cmpsb
test
add
stos
and
xchg
test
subl
mov
or
outsl
inc
jge
inc
push
xchg
subb
sbb
mov
mov
xchg
push
or
ret
mov
mov
xchg
or
sbb
push
sbb
sbb
add
inc
fwait
push
add
inc
fs
stos
imul
add
fisttpll
jne
and
sti
cmp
addl
jne
repnz
push
insl
stc
pop
gs
js
and
or
jo
adc
inc
jmp
jno
push
push
dec
or
xchg
push
fimuls
cs
or
mov
adcl
jmp
pop
lds
jb
mov
popfw
loop
xchg
adc
bound
dec
xchg
sbb
push
add
ret
fidivrs
ds
sbb
es
xchg
pop
dec
pushf
cmpl
or
lcall
sub
shrl
jp
scas
popa
rcll
stos
stc
inc
inc
int
sub
push
push
mov
sbbb
or
pop
jne
pusha
cmpsb
addr16
push
ljmp
cmpsl
xor
jecxz
sbbb
cmpsb
push
sub
or
bound
cmp
push
lcall
adc
ret
loop
ret
xchg
or
arpl
sub
fstpt
sub
popf
mov
inc
add
sub
nop
inc
lock
jae
mov
call
push
mov
mov
lods
bound
test
dec
cmp
dec
inc
sub
test
roll
mov
push
jo
sbb
xorb
rorb
roll
inc
push
mov
jle
dec
inc
popf
pop
jp
ficomps
add
inc
test
or
adc
adcl
jge
pop
popa
notl
adc
push
gs
jecxz
test
cltd
mov
imul
jne
outsl
xor
inc
jmp
shlb
inc
jbe
push
add
sbb
xchg
aam
adc
mov
sbb
mov
sbb
aas
or
lcall
xchg
mov
aas
and
lcall
add
lahf
enter
imul
push
addb
pop
aaa
jo
push
test
cmpl
flds
daa
insb
pop
dec
or
test
mov
pop
cmpsl
adc
decb
adc
dec
sahf
andl
jns
dec
adc
je
test
or
sbb
adcb
retw
xor
xchg
les
sbb
or
jmp
inc
movsl
push
test
gs
pop
add
sahf
lods
inc
stos
fstps
rolb
lcall
xor
pop
push
sbb
jbe
into
dec
xchg
mov
push
out
lahf
outsb
data16
fstpt
test
xlat
popf
add
jle
push
pop
jp
pop
push
xchg
stos
jmp
adc
nop
addb
les
push
jb
mov
push
stos
sub
arpl
popf
test
aas
pop
add
add
dec
test
or
push
and
pop
cli
nop
inc
sbb
dec
inc
or
xchg
jg
sub
inc
add
dec
push
or
pop
xorl
iret
adcl
int3
dec
pop
daa
sbb
ss
pop
imul
dec
xchg
sarl
xchg
dec
movsw
jl
mov
add
or
incb
mov
arpl
mov
ret
negb
xchg
pop
mov
push
dec
mov
cli
in
out
subb
lcall
popf
sbb
int3
and
arpl
dec
cmc
leave
dec
or
sub
addb
inc
sub
ret
xchg
jp
xchg
push
mov
cmp
add
jmp
fimull
mov
or
mov
jle
dec
into
push
std
jne
lds
ficoml
mov
mov
fincstp
std
inc
jne
push
push
mov
add
lret
fisttpl
out
or
mov
or
fdivrs
mov
pushf
ss
cmp
pop
cmp
add
js
popw
adc
pushf
lcall
mov
jns
xchg
xlat
cmpsl
adc
xchg
pop
notl
xor
arpl
xchg
cmc
popa
mov
jns
or
mov
rolb
inc
popf
dec
popa
jle
jle
test
sbb
ret
xchg
push
inc
shll
fiadds
mov
sub
adc
icebp
push
lcall
mov
fs
pand
fwait
mov
xchg
and
mov
mov
sahf
insl
mov
mov
fstl
sbbb
rcll
jne
add
pop
dec
mov
xor
outsb
daa
bound
ret
popa
xchg
pop
mov
push
cmpsl
pusha
sbbl
jnp
push
in
out
jle
sub
test
imul
insl
push
out
lcall
addb
inc
adcl
out
bound
push
out
add
loope
mov
adc
adc
xchg
xchg
fwait
data16
iret
lea
dec
mov
push
fcoms
rorl
addr16
pop
inc
mov
add
jle
cmp
scas
push
sbb
add
inc
out
pop
inc
xchg
gs
addr16
dec
jnp
int3
stc
orl
gs
xlat
pop
sbbb
outsl
dec
cmp
sahf
sbbb
outsb
push
push
mov
xchg
fiadds
loope
arpl
dec
cld
das
stos
cwtl
bound
jbe
addb
jnp
inc
popa
lahf
pop
inc
push
addl
push
jp
pop
or
test
filds
push
sbb
ljmp
inc
dec
les
in
xlat
insl
movb
xchg
inc
scas
push
dec
ficoml
aaa
xlat
ret
pop
outsb
mov
push
add
lcall
inc
into
addl
mov
sbbl
inc
mov
fwait
sar
in
mov
push
pop
inc
jnp
or
adc
popf
xchg
or
mov
test
jl
mov
nop
xlat
aas
inc
and
icebp
dec
fwait
adc
movb
shrb
sbbb
popf
pop
dec
inc
fldl
push
cld
call
mov
aaa
inc
cmpsb
pop
lahf
push
loopne
test
stos
xchg
clc
add
jle
imul
xchg
mov
and
sbbl
pop
ret
xchg
sub
ficompl
push
ret
add
push
pop
add
or
out
lods
addl
subl
mov
gs
pop
pop
mov
sub
sahf
mov
sub
mov
push
add
addb
sbb
mov
adc
test
push
xchg
or
icebp
pusha
or
dec
mov
and
mov
and
popa
nop
add
mov
mov
loope
addl
sub
lahf
adc
xrelease
jne
push
js
xchg
pop
fdivrs
jb
popf
jmp
xchg
outsb
inc
in
cmpsl
movsb
adc
ret
jle
movsb
out
lahf
and
in
pushf
dec
jno
pushf
ret
jne
push
in
les
add
push
lods
fwait
jmp
mov
pop
mov
repz
inc
mov
xchg
test
or
shlb
lds
rcl
mov
inc
fnsave
jle
mov
xorl
imul
sbbl
jle
into
push
inc
inc
andb
add
roll
jnp
fildl
sahf
cmpsl
jl
hlt
adc
sbb
lcall
mov
xchg
lods
xchg
pop
sahf
popf
lock
cmp
testl
add
add
sahf
les
mov
jae
xchg
pop
push
leave
daa
adc
add
push
xlat
xchg
mov
push
inc
sbb
rcll
and
xchg
out
push
bound
daa
push
mov
fadds
test
add
popa
sbb
xchg
filds
mov
xchg
test
xor
es
xchg
cmpsl
mov
mov
push
mov
jo
add
push
xor
fsub
inc
push
popf
int3
ja
and
test
mov
les
rolb
cmp
jl
jbe
push
in
iret
mov
mov
mov
push
andl
mov
lcall
fwait
sbb
pop
pushw
lcall
or
fistpl
jo
insb
movb
inc
mov
inc
pop
jecxz
pushf
add
andb
ret
scas
sarl
xchg
mov
das
pop
jp
mov
push
imul
ficompl
pop
popa
addr16
das
xor
add
stos
add
popa
mov
inc
popf
lcall
pop
add
loop
fcoml
ficomps
in
enter
xor
xchg
pop
enter
dec
lds
xchg
addb
jge
mov
sub
out
shlb
sbb
xorps
arpl
lock
or
pop
add
jg
inc
movzbl
addr16
add
enter
xorb
jecxz
addl
or
xchg
ficompl
pop
add
vpunpcklbw
orb
testl
ret
popl
mov
inc
sbb
add
push
inc
scas
sbb
xchg
dec
mov
lock
inc
push
mov
fcompl
insb
int3
and
xchg
mov
aaa
in
popa
pop
push
add
jne
jae
mov
in
pop
adcl
dec
orb
lcall
popf
rolb
push
test
add
and
ds
cwtl
push
gs
xchg
mov
out
pop
pop
insb
addl
pushf
or
mov
data16
pushf
pop
xor
sub
je
dec
pop
cmc
in
leave
adc
ret
xor
daa
mov
dec
add
in
push
mov
lahf
push
sbb
repnz
dec
jbe
add
push
mov
cli
jg
jbe
mov
add
test
and
cld
lahf
fstl
push
mov
jo
mov
in
ret
jnp
bound
sahf
andl
pusha
daa
stos
adc
xchg
dec
pop
mov
repnz
andl
addl
or
das
cmpsl
pop
pop
jns
stos
push
test
popf
test
jne
and
addr16
cmc
lods
insl
xchg
data16
test
clts
xchg
sbb
inc
test
enter
sbb
xchg
lods
mov
ret
divl
sbb
imul
enter
icebp
mov
jl
xor
test
mov
jge
aaa
test
fdivr
mov
mov
or
arpl
adc
adc
outsl
pop
fcoms
fcomip
lea
sub
and
pop
sbb
incl
sbb
popf
rolb
fmull
inc
aaa
add
data16
jmp
add
pop
fildl
lock
test
fyl2x
fstpl
sahf
dec
jne
push
scas
imul
or
or
rclb
pop
cmc
jae
inc
pop
push
sbb
int
pop
rcrl
cli
xor
or
mov
mov
push
nop
mov
inc
cs
incl
push
hlt
outsb
dec
jmp
ret
mov
or
scas
insl
orl
rorb
xor
inc
outsl
or
or
jno
mov
or
lahf
adcb
inc
add
inc
sbb
adcl
mov
in
adc
inc
dec
mov
and
mov
inc
dec
inc
sbb
es
lahf
cmpsl
push
cli
inc
pop
aas
or
cmc
out
fucom
add
orl
push
add
rclb
jg
arpl
jns
ljmp
xchg
add
dec
inc
inc
stos
sbb
in
stos
pop
pop
leave
xchg
and
lds
and
push
inc
and
lea
cmp
popf
pop
sbb
mov
jbe
xchg
addb
xchg
mov
sub
in
pop
dec
jp
push
pop
sahf
add
push
jne
dec
cmc
sarl
cmp
jg
rolb
push
jno
adc
daa
or
pop
data16
jmp
push
addb
dec
adc
inc
sbb
dec
xlat
or
mov
loopne
add
les
and
sbb
addr16
popf
jbe
loopne
mov
inc
add
data16
pop
gs
es
or
movl
jg
loop
inc
adc
sti
jmp
push
jnp
daa
subb
cmc
pop
popf
sahf
fs
xchg
lods
pop
rcll
out
fmuls
fldl
and
movsl
arpl
rcrl
jmp
xchg
inc
and
repz
ret
negb
push
lret
popa
dec
les
sbb
dec
repnz
jl
push
scas
gs
xchg
pop
cs
inc
sub
jle
rcll
scas
cmpsl
jle
inc
rcrb
xchg
jge
sub
ret
sub
add
jo
add
mov
xor
add
stos
bound
aas
push
sbb
movl
ficompl
pushl
sbb
pop
jge
xorb
data16
or
add
or
lcall
sub
fs
push
mov
jne
cmp
mov
outsb
sbb
add
or
aaa
dec
fs
cmpsl
inc
sahf
ret
cmp
pop
sahf
popf
pop
inc
maskmovq
adcb
pop
xchg
ret
inc
lock
ret
xchg
stos
bound
imul
ret
ficoms
rcll
int3
dec
orb
add
add
sbb
loopne
push
or
cmp
mov
xchg
int3
mov
aas
rorl
add
dec
sbb
lret
sbbl
mov
jo
neg
xchg
push
or
pop
jle
push
and
test
push
pop
les
sub
mov
lahf
pop
setnp
sahf
xorb
and
cmpl
xchg
adc
test
adc
movsl
xlat
mov
and
shlb
push
stc
mov
lcall
adc
sahf
addl
push
mov
hlt
push
rorb
mov
xchg
xor
xchg
push
pushf
and
push
pusha
cmpl
mov
or
int3
sbbl
lods
in
pop
clc
mov
jne
dec
sahf
popf
push
nop
xor
jae
repz
lds
lcall
jbe
testl
pop
jle
jmp
stos
lcall
inc
ficomps
lret
test
sbb
and
test
ret
sub
subb
js
sbbb
pop
loop
fisttpll
sahf
lcall
or
movsl
cmpsl
inc
xchg
lods
lahf
inc
nop
pop
adc
test
testl
mov
loopne
popf
mov
test
sahf
jle
pop
lock
mov
pop
daa
push
fldl
outsb
push
fstpl
stos
out
aaa
mov
jbe
andl
rclb
mov
mov
mov
fs
int3
sbb
cs
jge
jnp
aaa
mov
das
lcall
sub
adc
pop
push
xchg
sbb
int3
or
xor
cmpsl
add
mov
iret
mov
popf
scas
sub
pop
and
test
jno
cli
dec
shll
xor
fs
adc
out
xchg
mov
stos
aad
out
dec
or
divl
andb
in
popf
pop
imul
push
add
in
push
jnp
add
aaa
rcrl
loope
jl
jl,pt
mov
xchg
pop
jmp
fisttpll
movsb
repz
push
jge
pop
sbb
imul
push
dec
or
pop
out
xchg
push
subb
ret
sahf
je
shrl
test
rcl
add
cmp
jmp
adc
mov
mov
push
add
in
jbe
pop
cld
scas
mov
pop
jne
loope
mov
xor
xchg
fwait
pop
outsl
pop
mov
addb
rcrl
mov
lods
jns
cmp
mov
cltd
inc
cmp
lcall
or
mull
rcll
nop
daa
js
jne
dec
inc
inc
in
xchg
out
dec
or
data16
xchg
xlat
push
pushf
push
sbbb
sahf
jbe
jl
adc
jb
ret
nop
xchg
lcall
pushf
and
sbbb
les
scas
std
pop
pusha
add
loope
lcall
cmc
inc
xchg
inc
data16
adc
inc
subb
inc
xchg
xchg
jle
aaa
ret
mov
test
adc
push
in
mov
sbb
popl
xchg
ret
add
xchg
sbb
fbstp
sbb
mov
insl
nop
lods
pushf
addb
or
push
inc
test
mov
sbb
test
popf
and
test
xchg
lahf
xor
data16
sbb
cli
fiaddl
cltd
orb
fnsave
mov
xchg
lods
push
jl
lea
gs
fwait
repz
inc
pop
inc
data16
sbb
rcrb
sahf
or
mov
add
gs
or
gs
xchg
stc
out
stos
xchg
add
mov
jb
mov
add
out
xchg
add
test
ljmp
lea
addb
fistl
ja
inc
pushf
test
adc
daa
int3
inc
lahf
xor
lock
xchg
dec
loopne
std
fbld
test
push
daa
push
loop
das
push
inc
out
rcrb
push
xchg
das
inc
mov
mov
push
adcl
out
arpl
mov
mov
mov
or
sbb
jnp
xor
pop
negb
arpl
and
addr16
fwait
ret
fs
testl
in
test
popa
out
stos
cltd
inc
adc
mov
lods
and
sub
pinsrw
imul
cmpb
or
in
or
pop
pushf
inc
sbb
fldenv
orb
pop
hlt
andl
xchg
sbb
dec
dec
loope
dec
lds
in
cwtl
addb
inc
loopne
jmp
push
test
adc
out
shll
pop
stc
xor
pop
add
dec
xchg
dec
data16
mov
adcl
stos
push
or
in
dec
push
lcall
push
addb
push
pop
or
jg
rclb
jns
pusha
dec
sarl
test
out
inc
xor
cltd
mov
mov
cmovbe
pop
push
fimull
add
aam
addl
stos
or
jnp
inc
pop
lods
xchg
fstps
imul
pop
cmp
stc
int3
daa
popf
pop
loope
cmp
popf
test
xor
jle
stos
cmpsl
test
or
mov
nop
stos
sbb
xchg
out
pushf
push
or
and
dec
inc
ljmp
push
imul
inc
mov
mov
lods
xor
add
fcmovb
subb
out
mov
sub
arpl
addb
out
inc
out
ja
sub
gs
or
cmp
add
in
addr16
cmpsl
sbb
testl
ja
lds
fs
push
ret
xorb
test
xchg
push
outsb
jle
mov
repz
or
iret
or
mov
test
ss
cmpl
or
out
fmull
sbb
and
lret
sbb
pop
xor
mov
dec
cmc
sbb
icebp
dec
popf
xchg
pop
data16
es
test
gs
imul
add
or
and
mov
mov
filds
or
pop
push
imul
in
test
sbb
stos
push
inc
in
daa
cmpsl
cltd
ret
inc
add
test
and
inc
leave
mov
gs
push
jecxz
test
pop
gs
sahf
xchg
inc
cmc
jle
aas
inc
jp
aaa
adc
xchg
dec
jnp
mov
outsb
pop
repnz
shlb
push
pushf
jg
ss
mov
mov
scas
add
jb
dec
inc
dec
xor
pop
inc
push
jnp
ret
add
jo
dec
xchg
data16
pop
dec
sbb
mov
rorl
jae
pop
inc
cwtl
or
in
xchg
inc
int3
js
sbb
push
mov
mull
add
xchg
outsl
adc
xchg
sbb
stos
xchg
push
pop
xor
dec
mov
aad
push
sbb
inc
push
ja
sbb
cmp
mov
or
mov
push
rcrb
or
enter
popa
add
xchg
pop
mov
dec
or
ret
push
jo
push
mov
popl
adc
pop
inc
mov
pop
jmp
inc
scas
lds
xlat
sbb
cmpsb
mov
adc
dec
pop
jle
add
or
cmp
sbb
pop
pop
or
pop
dec
mov
rolb
push
adc
xchg
enter
into
or
push
int3
js
insl
scas
push
inc
cmp
shlb
ret
dec
dec
xor
mov
mov
dec
jno
test
mov
aas
dec
xor
ret
inc
icebp
ljmp
dec
xchg
int
in
out
add
mov
or
movsb
mov
lds
pop
sbb
enter
pop
idivb
inc
xchg
xchg
imul
sbb
xorb
je
addr16
pmaddwd
pop
adc
filds
mov
add
sub
or
arpl
fisubrl
popa
jle
pop
sahf
addr16
rol
push
cltd
cmpsb
add
add
mov
push
add
int
or
outsl
adc
pop
adc
jb
pop
mov
and
cmp
pop
enter
jbe
jb
test
pop
out
scas
cmc
ret
aaa
pop
test
outsb
push
adcb
mov
fcomi
ret
enter
je
les
ficomps
stos
jnp
in
ret
bswap
xchg
adc
xor
test
push
adcb
bound
std
jmp
adc
mov
or
dec
addl
out
add
or
mov
mov
adc
lahf
inc
ss
notl
mov
xchg
loop
aas
fistps
pusha
out
jnp
mov
in
cltd
push
movsl
adcb
test
inc
in
add
loop
test
fs
scas
lods
jne
jne
xor
sub
jns
pop
movb
fdiv
mov
mov
inc
add
jecxz
push
jnp
push
mov
fwait
inc
xchg
in
or
adcb
push
sub
add
xchg
ss
push
sbb
sub
adc
xor
aaa
pushf
inc
insl
std
push
int
or
pop
mov
leave
push
mov
enter
xor
fcmovbe
add
xchg
pop
ret
sub
sbb
jle
in
mov
xchg
andl
sbb
push
xor
mov
xlat
add
or
cmpl
push
mov
sbb
pop
pop
loope
xor
lds
js
xchg
ffreep
sub
pop
push
xchg
pop
jle
pushf
test
shll
fisttpl
dec
cltd
fcoml
add
mov
jle
or
pop
sbb
adc
fsubl
sbb
addr16
insb
fistps
ret
stc
lcall
mov
fimull
test
gs
addr16
leave
push
or
stos
int3
enter
xchg
or
outsl
test
gs
fwait
std
mov
mov
mov
gs
push
ficomps
inc
adc
nop
pusha
push
daa
mov
sub
jg
and
addb
ja
jle
add
ret
or
add
inc
xchg
pop
ja
push
leave
lock
das
in
add
fidivs
pop
cmpsb
jnp
cmc
push
rorl
nop
lcall
data16
ja
push
icebp
or
mov
rcl
inc
or
mov
pop
test
mov
fwait
lcall
mov
xchg
test
int3
add
popf
test
mov
pushf
mov
mov
inc
leave
lods
and
jo
popf
test
pop
push
popa
mov
or
sahf
inc
clc
mov
xchg
and
cwtl
divl
test
cmc
push
jae
ficoml
pop
sahf
jecxz
aaa
mov
out
test
pop
cwtl
icebp
pop
push
mov
sbb
pop
sahf
dec
add
pop
or
dec
or
data16
or
push
movq
push
push
test
inc
jb
pop
or
adc
add
or
stos
sbb
adc
sbb
lahf
addr16
sub
push
mov
iret
sbbb
loope
sbb
xchg
xchg
add
mov
push
repnz
ret
popf
mov
and
lcall
cmc
test
popf
adc
add
fdivrp
add
add
cmc
mov
fsubl
xor
pop
dec
inc
inc
popa
lcall
jge
cli
fadds
test
pop
adcb
mov
inc
push
std
in
pop
dec
or
mov
or
scas
rclb
ljmp
insl
ret
or
loope,pt
fwait
loope
addr16
mov
icebp
jmp
mov
pop
lea
mov
or
rcrl
leave
ret
inc
addr16
inc
xchg
xchg
inc
mov
xor
cmp
scas
test
bnd
fisubs
std
adc
pusha
movsb
daa
mov
popf
ret
adc
adc
ret
cmpb
sbb
fincstp
test
push
cmpl
mov
inc
fcmovnu
mov
mov
xchg
std
testl
or
lods
out
fisubl
pop
dec
pushf
in
push
dec
insb
dec
push
ds
lods
mov
sbb
cmpsl
repnz
adc
jae
orb
or
cmp
repz
jle
andb
sub
call
arpl
fiaddl
inc
test
in
push
in
jnp
aaa
pusha
lret
lret
xchg
inc
cs
aaa
aaa
loopne
lds
push
stos
inc
inc
push
add
leave
orb
sahf
sbb
jne
and
push
inc
pop
sub
sbb
rcrb
cmpb
jp
setg
arpl
pop
xchg
aaa
adcb
jp
jae
xchg
js
or
inc
ret
icebp
push
fiaddl
gs
negb
ret
adc
pop
pop
pop
push
cs
sbb
pop
mov
fiaddl
scas
and
pop
lret
sbb
adc
nop
fwait
mov
lcall
dec
jne
cwtl
pop
fiadds
test
subb
mov
out
push
stos
ljmp
inc
in
hlt
out
lods
test
pop
push
mov
adcl
fnstcw
popa
dec
or
lds
popf
sahf
mov
inc
loopne
pop
pop
pop
cmc
lcall
fcomi
ds
dec
bound
les
dec
inc
pop
cmc
int3
sbb
add
inc
lds
jl
mov
test
rorb
mov
pop
mov
xchg
dec
ss
add
jle
test
mov
fistl
push
ror
mov
push
pop
push
or
push
das
sbb
out
orl
add
test
mov
clc
push
adc
sbb
fisubrs
jl
sub
pop
outsl
mov
testl
push
subl
test
and
out
jge
pop
jnp
sbb
pop
push
xchg
jb
add
dec
in
popf
add
mov
add
lcall
xor
test
adcb
gs
fcmovnu
mov
fsubl
push
xor
push
adc
mov
test
subl
inc
jb
mov
add
sbb
pop
mov
push
outsl
sub
out
sbb
jge
aaa
pop
or
mov
and
aaa
stos
std
xor
pop
cld
pop
xchg
sbb
inc
mov
fisttpll
fistpl
jle
sub
mov
inc
xchg
and
or
test
test
insl
inc
negl
sbb
sbbb
jmp
inc
shlb
push
adc
cmpsb
ret
sbbb
enter
rclb
xchg
loop
sbb
push
dec
add
or
mov
adc
popf
sbbl
xchg
lahf
nop
imul
add
add
flds
out
fidivrl
lods
enter
push
shrl
mov
inc
mov
jno
inc
mov
jp
push
pop
shll
dec
subl
jp
out
fisttps
cli
mov
xor
xor
add
pop
mov
scas
jae
ja
cmpsb
inc
mov
cli
ret
inc
dec
mov
fisttpll
xlat
js
stos
sbb
sahf
loopne
sbb
pop
test
mov
cmp
push
jle
imul
addb
adc
cld
mov
hlt
jo
xchg
jae
inc
inc
fcompl
sub
test
pop
les
push
xchg
dec
or
inc
imul
test
fwait
test
pop
push
jmp
inc
push
cmpsl
or
pop
push
push
je
clc
jle
out
xchg
mov
cmp
into
or
fwait
mov
sbb
cmp
mov
fistps
adc
add
popl
pop
push
push
sti
in
rcr
or
fsubrl
fiadds
cmp
push
xchg
add
dec
popf
cmpsb
mov
pop
in
jne
add
sahf
mov
out
dec
filds
dec
sbb
in
mov
adc
and
sub
sbbb
add
les
add
or
dec
and
lcall
inc
push
lods
add
test
jl
enter
fs
xchg
lcall
pop
mov
mov
cmc
xor
lahf
xor
and
push
mov
add
gs
adcb
add
rol
das
push
push
xchg
inc
or
inc
xchg
cmp
sahf
lcall
stos
jl
outsb
outsb
scas
cmpsl
movsl
mov
push
pusha
rorb
mov
sbb
lods
pop
data16
dec
mov
sbb
xchg
xorl
popf
addb
sbb
and
jle
ljmp
addr16
addr16
jbe
fdivl
gs
orb
fdivrl
jo
lea
in
cmpb
jle
mov
sbb
cmp
dec
or
add
sbb
sbb
cmovno
sbb
xor
insb
ret
sbb
add
loopne
push
arpl
faddp
xlat
xor
cmc
popa
xchg
xlat
out
inc
cmp
push
imul
scas
jp
sarl
test
jp
add
pushf
data16
jle
xor
je
addl
sar
inc
push
aas
out
fisttpll
push
data16
inc
es
cwtl
push
xor
sahf
aas
mov
lcall
outsb
ja
or
subl
xchg
lret
jns
stos
ret
add
push
add
gs
jo
enter
movsb
xor
sbb
xchg
xlat
and
jns
and
mov
pusha
mov
mov
int3
test
pop
ret
jns
add
pushf
push
into
ja
lcall
add
dec
addr16
ficomps
add
test
arpl
fiadds
lcall
imul
lret
in
ss
enter
test
xor
sahf
cmp
rolb
sahf
fwait
cmpsl
or
sbb
pop
pushf
vsqrtsd
lea
xchg
adcb
xchg
sub
and
mov
sahf
addl
sbb
stos
pop
push
bound
sahf
xchg
sbb
and
jle
jg
push
data16
mov
dec
sahf
lcall
fs
jb
data16
xchg
push
je
mov
mov
jl
pusha
ret
push
jnp
lea
pop
fadds
test
pop
xor
imul
pop
jmp
ret
mov
push
and
inc
push
ficompl
mov
pushf
orl
inc
lods
and
pop
jnp
pop
cmp
mov
jns
popf
pushf
xor
dec
add
pop
mov
inc
arpl
fnsaves
test
mov
mov
ljmp
mov
xor
imul
xor
fwait
inc
testl
ja
or
xor
insl
xor
or
and
lods
es
xlat
nop
push
lahf
add
outsb
and
sbb
dec
mov
jle
pop
mov
mull
dec
xor
push
bound
bound
jnp
add
arpl
faddp
xchg
test
pop
pop
fs
pop
jno
fcmovb
fimuls
andl
add
ds
in
inc
ret
out
mov
push
jge
xchg
adc
iret
call
dec
jne
lret
mov
test
movsb
mov
dec
inc
jb
fwait
in
pop
ret
and
lds
aad
scas
push
fstpl
xorb
dec
sbb
or
or
xorl
xchg
sbb
push
and
loop
sbb
pushf
andb
nop
add
mov
add
and
es
pop
js
sbb
mov
sbb
sahf
fiadds
pop
jne
test
lcall
jne
pop
xchg
mov
outsb
movl
data16
cmpsl
xor
addb
or
push
sahf
adcl
sub
out
test
je
inc
add
dec
cmc
call
pop
push
push
pop
cmc
jl
out
fwait
sahf
movsl
pop
push
aaa
sbb
adc
xchg
ret
gs
push
andl
and
loope
pop
lods
in
js
mov
pop
je
push
outsb
aaa
xor
xchg
or
fcompl
test
sbb
jl
movb
mov
push
sbbb
sub
or
xlat
mov
ljmp
xchg
adcl
or
jbe,pt
loope
pop
xchg
sahf
subl
push
jp
pop
test
sbb
ret
cli
mov
mov
ret
jle
jbe
inc
add
pop
nop
xchg
cmc
xchg
push
adc
and
pushf
xchg
pop
int3
pand
push
add
pusha
add
pop
dec
cmpsl
dec
int3
nop
or
stos
repz
mov
ljmp
int3
push
imul
fwait
inc
mov
addb
inc
cld
flds
cmp
xor
or
int3
pop
inc
ret
xlat
pop
fs
mov
lea
std
sbb
pop
ret
adc
and
pop
lds
jno
lcall
adc
out
fwait
addr16
pop
xchg
xchg
or
pop
push
dec
sbbb
adc
sbb
test
push
push
arpl
push
in
xorl
in
sahf
movsb
dec
iret
pop
push
add
fsub
inc
mov
xor
add
hlt
jp
pop
movb
test
sbb
push
mov
cmp
rolb
popf
mov
out
into
cwtl
sbb
test
inc
stos
dec
leave
push
popa
xchg
pushf
fwait
push
movl
fs
insb
xor
insb
add
in
add
test
out
mov
add
inc
jle
movsb
ds
mov
and
mov
or
inc
mov
int3
push
dec
addl
sbbl
or
aaa
mov
std
gs
sbb
fadd
xor
or
cmp
inc
mov
popf
push
das
rclb
movsl
jg
jge
inc
mov
sahf
and
add
and
lahf
gs
repz
push
mov
pushf
fldl
cmp
mov
xor
aad
or
jge
scas
sub
jp
sub
mov
mov
pop
lcall
adc
jae
es
pop
lahf
cmpsb
sbb
jo
inc
xorb
sbb
ret
pusha
outsb
sbb
imul
jnp
pop
or
stos
mov
test
negb
data16
inc
outsl
sbb
pop
xchg
or
bound
add
test
dec
lcall
inc
orb
or
push
xchg
sbb
sub
push
jne
sub
and
popf
pushf
rolb
subb
fistpl
xchg
jle
pushf
push
or
xor
bnd
negl
into
pop
xchg
or
add
pop
sbb
inc
mov
cmp
dec
sbb
add
ret
sbb
pop
mov
fcompl
sbb
inc
mov
pop
push
cmpsl
stc
mov
pop
inc
data16
xchg
data16
sbb
fadd
clc
push
inc
js
nop
das
mov
dec
jp
pop
mov
test
or
adc
cltd
mov
lods
and
dec
jle
jp
and
pop
addr16
int3
add
cmp
jp
out
cltd
sbb
inc
push
cmpsl
test
mov
inc
ljmp
push
adc
test
data16
scas
dec
or
pushf
enter
sbb
jle
imull
push
sbb
icebp
sub
dec
lea
inc
testb
sbb
inc
cmp
gs
jmp
cmp
lds
les
cmp
ja
jl
mov
icebp
and
test
inc
aas
ret
xlat
addl
popf
dec
fs
push
jle
or
mov
dec
push
add
xorl
or
add
jnp
adc
push
xor
pop
stc
test
movl
shll
ret
mov
jbe
and
popf
pop
int3
dec
mov
popl
push
jmp
cmpsl
add
and
jo
daa
jbe
mov
mov
xchg
inc
xchg
mov
fs
and
rcr
adc
fsubl
xorb
inc
nop
rcrl
pop
pushf
cmp
or
in
das
leave
push
jmp
mov
test
sbb
cmp
lcall
add
add
lcall
icebp
cmp
lods
or
push
sahf
test
mov
lods
cmc
popf
jno
push
nop
pop
pop
or
inc
xchg
mov
jle
adc
inc
fiadds
jge
jo
add
xchg
popf
xchg
ja
xchg
add
add
sahf
arpl
push
push
push
gs
cmpsl
testl
mov
push
into
push
out
pop
sbb
ss
sahf
test
leave
loope
test
out
jle
mov
inc
inc
ljmp
add
mov
imul
push
inc
rcr
leave
test
pop
ds
push
mov
or
and
mov
inc
fidivl
sbb
out
lahf
sahf
sbb
add
inc
sbb
gs
mov
testl
mov
xorb
cwtl
mov
fiaddl
sub
pop
xchg
outsb
mov
inc
push
fstpl
jns
or
nop
fwait
popf
mov
and
mov
gs
addr16
mov
push
cmp
test
jne
fwait
jbe
stos
mov
cli
mov
dec
or
sbb
or
data16
sub
mov
add
mov
orl
or
push
mov
gs
inc
cwtl
pop
push
xchg
inc
jecxz
test
and
mov
xchg
push
push
push
test
jecxz
loopne
lds
pop
push
sbb
mov
aad
mov
mov
rcrb
sub
js
sahf
daa
xchg
pushf
inc
lcall
sub
mov
jl
filds
movl
jns
int3
and
fidivrs
iret
xor
xor
sbb
add
cmpsl
lds
sub
add
sbbl
lcall
mov
jecxz
adc
jp
xchg
ss
push
mov
repz
enter
sub
adcb
test
orl
lds
rsm
inc
or
push
inc
xchg
adc
fs
movsb
mov
push
test
lds
mov
insb
or
test
and
mov
je
fbstp
fnstsw
dec
inc
fiadds
sbbl
test
rorl
lds
les
xchg
sbb
orb
push
jl
inc
pop
in
loop
sbb
push
lods
jl
mov
pop
les
leave
mov
add
jae
movsb
or
orl
test
lea
repz
loope
popa
pop
xor
andb
xorl
pop
inc
xor
sahf
ret
loop
pop
stc
lcall
lods
imul
xchg
sbbl
dec
pop
inc
sahf
js
sub
xchg
jg
out
stos
cmpb
scas
xchg
jnp
inc
inc
jmp
inc
lahf
packuswb
int3
fiaddl
cmp
xor
sbb
fwait
lcall
movl
push
ret
inc
inc
popf
in
int
or
jne
sbb
mov
push
popa
pop
popf
push
and
lds
jno
mov
add
xchg
xor
or
inc
outsb
aaa
inc
mov
add
xor
or
scas
jl
pop
insl
pop
sbb
sahf
mov
pushf
or
mov
popa
mov
cmpl
insl
jo
inc
andl
fldl
pop
push
jp
filds
nop
aaa
xlat
or
popa
jle
orl
mov
or
nop
jge
adc
test
test
inc
mov
jb
jl
data16
pop
sub
fiaddl
xor
sbb
pop
lock
test
into
jp
inc
int3
xchg
outsl
jle
lcall
fs
dec
pop
xchg
test
lods
into
or
sbb
mov
or
xor
lea
or
xchg
aam
add
xchg
mov
mov
ja
lea
pop
jge
cmp
mov
roll
xchg
fistpll
mov
and
xchg
out
adc
adc
sbb
push
test
lods
lods
pushf
jnp
inc
push
scas
mov
scas
mov
cmpsb
xchg
leave
xchg
js
pop
cwtl
loopne
xor
adc
push
test
xlat
sub
jle
fisubl
addr16
inc
loopne
xlat
les
mov
xorb
mov
mov
repz
ss
fwait
ja
pop
imul
mov
out
mov
insl
and
xchg
jne
data16
xchg
or
fcompl
or
inc
cmp
das
mov
lcall
mov
xchg
lds
xor
mov
mov
enter
push
xchg
adc
negl
mov
adc
add
push
pop
ret
mov
inc
pop
ret
jge
push
cmc
mov
leave
sbb
pop
jle
fildl
test
jae
adc
mov
nop
rcll
sub
imul
xor
mov
inc
cltd
push
fs
notl
pop
les
xchg
nop
xchg
push
out
push
mov
mov
push
inc
sbb
sub
push
xchg
lds
inc
lds
jp
or
mov
jo
add
lcall
pop
inc
into
mov
cmp
mov
out
inc
popa
lea
inc
push
xor
add
push
addl
push
loop
or
push
sub
aas
addl
fildl
xor
fsubrl
fdivl
add
mov
pop
enter
mov
inc
dec
push
lret
aaa
push
sahf
dec
xchg
sbb
dec
or
pop
mov
out
mov
dec
add
push
push
pop
test
jno
xlat
mov
movsl
lret
pop
push
aaa
push
xchg
out
popf
add
orl
test
lods
leave
test
data16
pop
cmp
cs
dec
fwait
push
fbstp
mov
popf
inc
cmp
bound
push
je
ja
cmp
adc
push
xlat
sub
stos
sbb
mov
adcb
mov
dec
lods
sbb
xlat
add
sbb
addr16
inc
scas
test
push
scas
pushf
fisubs
jbe
sarb
addr16
bound
rolb
dec
push
or
sub
aas
rcll
out
addr16
mov
insb
in
xchg
mov
pop
xchg
sbb
xlat
inc
out
pop
jle
stos
xchg
mov
bound
mov
int
mov
pop
lds
popf
mov
pushf
add
inc
mov
inc
add
fnsave
lret
xor
gs
leave
sbb
add
mov
sahf
mov
shl
mov
mov
and
pushf
xor
xchg
fs
inc
push
adc
ret
je
sahf
ja
movb
inc
gs
sbb
orb
push
cmpl
pushf
mov
mov
stos
pop
and
addb
sbb
add
call
mov
cmp
inc
push
inc
lahf
dec
mov
popa
rorb
fcmovnu
push
push
pop
inc
push
pop
pop
bound
fcoml
mov
loope
mov
xor
test
rclb
addr16
lds
inc
lahf
push
jg
pop
addr16
data16
add
cmpsl
test
add
lahf
sbb
out
rorl
jns
sbb
scas
lahf
pop
adc
ret
jne
outsb
sahf
push
shr
sbb
ffree
and
cld
stos
inc
mov
lcall
cmp
gs
ret
push
insl
add
xchg
shlb
xchg
or
inc
test
push
add
inc
outsl
pop
pop
aam
inc
jns
cmpsb
inc
inc
test
jnp
out
mov
dec
sbb
icebp
aas
fistpl
add
sbb
add
fcomp
push
orb
jle
and
sbb
push
sub
or
sbbb
enter
stos
mov
out
or
enter
addr16
lahf
fwait
sbb
popf
inc
sahf
pushf
xchg
mov
mov
push
int
cwtl
xor
and
add
add
add
lds
loope
mov
and
adc
test
faddl
lcall
inc
inc
lret
pushf
mov
mov
mov
mov
jp
leave
clc
xchg
xchg
das
loop
jle
dec
pop
sahf
ret
sbb
test
jnp
push
sbb
aas
or
aaa
pop
xchg
inc
pushfw
gs
mov
push
push
mov
sahf
loope
sbb
gs
ret
lods
inc
xchg
pop
push
pushf
push
push
push
sbb
pop
subb
or
or
fildl
push
mov
andb
hlt
sub
dec
orl
or
adc
mov
inc
aaa
stos
movsl
fnstcw
or
jnp
mov
pop
js
pop
dec
insb
inc
fldl
test
je
cmc
push
orl
sbbb
or
pop
rcrl
cmc
mov
xchg
mov
mov
push
cmpsl
fcmovnb
cwtl
stos
cmpsl
rcrl
inc
movsl
add
test
in
arpl
imul
adc
pop
jb
inc
adc
mov
inc
cmpsl
inc
push
or
cmp
jae
std
push
inc
adc
jmp
je
pop
mov
pop
jb
push
xchg
jge
sub
xchg
xchg
push
jae
test
sub
imul
xchg
clc
push
movsb
lods
or
jbe
loope
fistpl
loope
sti
adc
orl
sbb
or
dec
pop
xchg
mov
in
cmp
push
pop
das
xlat
ficompl
js
ffreep
jle
mov
jge
repnz
push
test
mov
jp
adc
popf
push
test
mov
xchg
stos
movl
jo
and
cmpl
fdivp
or
mov
push
lds
aaa
fcompl
or
or
bound
jb
ja
pop
shl
mov
lahf
xchg
xchg
sti
test
orl
cmpsl
ret
divb
mov
call
mov
lcall
sahf
ja
xchg
bound
push
leave
jp
or
sti
std
sbb
mov
out
inc
fstl
jae
fcmovnb
dec
addb
ficomps
bound
mov
and
cmpsl
addl
lods
aaa
mov
bound
dec
mov
dec
cmpsl
inc
adc
movsb
lds
rorb
jl
pop
push
repnz
xchg
inc
push
pop
inc
out
sbb
aaa
je
pusha
subb
test
xchg
xor
inc
out
lret
mov
fsub
pop
test
loopw
adc
jp
xchg
mov
insb
push
test
inc
fld
addr16
lcall
inc
popf
stos
and
push
lcall
sahf
xchg
ficompl
pop
fwait
loop
adc
mov
pop
sahf
xorb
fwait
jns
cmp
sub
adc
mov
pushf
bound
dec
push
inc
inc
subb
fistpl
aaa
fcoml
mov
add
test
hlt
vmovaps
jge
sbb
ds
repz
add
leave
dec
dec
dec
dec
addl
lcall
lock
inc
gs
enter
pop
lea
jle
das
sbb
sbb
mov
mov
add
dec
ret
or
mov
mov
loope
lcall
cmp
mov
inc
inc
cmc
outsb
out
add
imul
or
rorl
fimull
sub
sahf
mov
push
orb
mov
mov
fiaddl
push
add
mov
aad
stos
xor
or
mov
xor
je
mov
and
dec
lea
cmp
pushf
loopne
cmpsb
faddl
inc
jbe
test
push
inc
jecxz
aad
adcb
cmpb
sahf
sbb
inc
jae
arpl
sub
or
sarb
andl
sahf
add
push
pop
inc
jne
ret
xchg
inc
std
aad
scas
fdivl
ret
xchg
jnp
add
aam
or
mov
bound
ds
xchg
lds
or
in
aad
inc
lcall
and
aad
aas
xchg
jne
or
adc
ja
es
fdivrp
mov
in
or
insb
gs
or
popa
lcall
push
push
add
sub
pushf
pop
adc
inc
subl
add
lods
sbb
xor
test
sbb
into
ds
rolb
add
push
cld
into
or
inc
shlb
push
sbb
inc
data16
sbb
lds
jp
es
add
add
jecxz
icebp
mov
enter
add
mov
xchg
push
push
or
push
mov
sub
push
mov
mov
push
or
sub
cmp
push
fidivl
bswap
es
jbe
mov
push
mov
ja
andb
mov
cld
andb
fdivrp
dec
or
aad
push
and
iret
push
ja
xorb
sbb
shll
adc
add
push
shll
bound
sub
gs
add
inc
stos
mov
xchg
icebp
add
push
bound
cltd
pop
jle
test
fdivl
or
fbstp
scas
cmp
jo
call
bound
mov
int
fdivp
xor
xchg
fstps
cltd
jbe
pop
cmpsb
es
pop
outsb
dec
jge
push
sti
bound
push
popf
pop
inc
insb
addb
push
and
gs
xchg
ljmp
add
mov
add
idiv
mov
adc
in
inc
or
std
push
js
pop
dec
inc
fs
mov
es
sbb
xchg
jle
data16
xlat
pop
add
in
xor
rcll
push
jno
add
xchg
je
repz
cmp
repz
and
ffree
add
push
pop
pushf
ss
add
std
and
adc
push
rcrb
lret
add
inc
or
inc
roll
nop
out
lret
jle
shlb
mov
adc
jb
ret
jp
pop
pop
lahf
xor
pop
sbb
push
sub
mov
ret
loopne
sbb
add
lret
adc
icebp
push
mov
add
outsb
fstps
add
push
sub
orl
popf
and
mov
jbe
outsb
lods
fs
movsl
adc
mov
add
aad
orl
sahf
gs
cltd
fsubl
push
or
or
or
jmp
add
ja
lds
xchg
jp
ret
or
push
sahf
push
xchg
or
jl
xchg
push
push
pushf
pushf
outsb
jecxz
in
adcl
push
add
lods
pop
mov
push
or
dec
in
ja
jbe
sbb
push
lds
or
decl
fmull
mov
dec
adc
sahf
lods
adc
sahf
pop
xor
push
cmp
les
sahf
mov
in
fxch
pop
jle
ret
jp,pt
jle
insb
inc
jmp
dec
cmp
xor
in
jne
ss
mov
dec
xchg
sub
rolb
bound
or
pop
sub
imul
shlb
imul
add
jo
lds
inc
das
iret
push
jmp
inc
sbbb
xor
add
push
sbb
and
data16
lds
inc
or
push
int
push
xchg
fwait
test
lea
sbb
mov
in
mov
cwtl
pop
es
or
add
aaa
push
int
movsl
sarl
inc
cmp
jg
push
jo
xor
jl
sbb
outsl
mov
xorl
loop
push
mov
add
add
adc
sbbl
pop
or
or
sahf
sti
dec
ds
sbb
adcl
popf
in
mov
daa
test
add
jg
and
insb
fwait
or
fcoms
es
fs
xorl
mov
lret
cmpsl
cmp
test
movsb
ret
inc
aas
push
inc
dec
call
jmp
nop
nop
push
pop
repz
fs
rcrl
sbb
xor
xchg
adc
fnstsw
test
insl
mov
call
dec
xchg
loope
mov
out
fs
add
lea
pushf
xor
daa
mov
out
xchg
pop
popa
sub
mov
sbb
les
into
xor
push
fdivl
or
cmp
inc
imul
sub
push
inc
or
test
shrl
cmp
pop
lea
data16
je
call
sti
fwait
addb
dec
or
lcall
jl
mov
sahf
or
dec
xorb
pop
adc
adcl
in
jnp
nop
addb
cmc
push
sbb
stos
inc
and
ljmp
sahf
int
stc
lret
dec
mov
in
mov
push
sahf
sbb
fdivr
mov
pop
xor
jne
rcll
inc
jecxz
test
push
sub
imul
push
fs
inc
pop
inc
add
add
adc
adc
inc
inc
sbbl
ret
jne
stos
dec
push
xchg
and
aaa
sbb
mov
xchg
ss
and
cltd
in
es
add
push
dec
xor
aam
mov
sub
xchg
pop
lods
out
inc
pop
xchg
push
call
filds
mov
xchg
outsb
cmpsb
jp
mov
sub
jecxz
aaa
dec
push
lahf
mov
or
mov
cld
ret
xor
gs
adcl
lock
les
sub
xchg
xchg
aas
sbb
xchg
jmp
pop
fistl
sub
xchg
sbb
jle
ret
movsl
dec
sbb
inc
or
dec
cld
pushf
loop
mov
pop
sbb
ja
mov
nop
enter
or
pusha
inc
and
lods
sbb
sbbb
inc
adc
or
es
iret
loop
cmp
or
mov
pop
mov
lea
add
and
sbb
dec
not
repz
fwait
shlb
push
popa
mov
xor
or
push
sbb
or
test
ja
jge
adcb
dec
shl
lret
adc
test
and
mov
fistl
aaa
mov
mov
stc
adc
fists
inc
js
lret
sbb
mov
pop
sbb
movl
add
add
in
push
push
ret
xchg
sbbb
mov
push
adc
lds
das
or
add
or
adc
rcl
adc
lds
sub
testb
push
movsb
insl
lds
push
mov
sbb
popf
push
test
int
pop
pop
gs
pop
lcall
inc
arpl
pop
fs
inc
xchg
ds
or
out
pusha
mov
xchg
hlt
jecxz
pop
mov
daa
push
lods
jle
pop
add
xchg
pop
gs
add
sbb
cmc
cmp
pushl
xchg
pop
pop
int3
xchg
adc
rclb
inc
push
cmp
imul
dec
add
xlat
mov
fstpl
movsb
mov
xorb
inc
dec
pop
filds
int
ret
xor
cmpsb
aad
mov
pop
jno
test
push
xchg
mov
add
nop
cmp
and
jge
cmp
in
outsb
mov
push
dec
mov
mov
add
movsl
dec
sub
jae
inc
cld
push
cltd
popf
and
pop
or
inc
mov
xor
repz
sbb
mov
push
push
loopne
mov
je
xchg
cld
insl
add
std
sub
test
adc
xchg
int
add
imul
inc
jbe
push
mov
sbb
aad
adc
popf
sahf
mov
jnp
decb
push
mov
lret
imul
aas
rcrl
push
jns
sub
jbe
loop
dec
loope
ret
or
add
or
fnstsw
inc
jp
call
lcall
sbb
xchg
fisubrl
je
loopne
sbb
dec
in
pop
push
rolb
fiaddl
mov
push
inc
dec
lcall
sbb
pop
add
xchg
xchg
movb
imul
sbbb
add
mov
and
outsl
sbb
jp
mov
insl
es
fldl
dec
shlb
push
fmull
mov
jp
andb
sbb
shrl
jg
sbbb
xchg
test
lds
push
icebp
lds
lcall
pushf
insb
aad
mov
jo
scas
faddl
and
pop
addr16
insb
enter
push
loopne
xchg
enter
aad
dec
mov
fadds
jnp
imul
pop
cmpsl
xchg
cmp
lds
ja
out
and
mov
pop
leave
fisttpl
push
xchg
add
sub
add
dec
outsl
mov
dec
jb
push
sub
sahf
sti
cmc
cmpsb
pusha
popa
ljmp
lock
cmp
clc
dec
jnp
push
adc
xor
dec
mov
int
jo
adc
insl
data16
cmp
xchg
xchg
fisttpll
cmpsb
popa
push
and
call
outsb
xchg
sbbl
mov
xor
add
cmc
pop
pop
fs
adc
inc
jb
sub
mov
std
mov
lods
inc
in
mov
sbb
pop
das
pop
loope
xchg
sbb
out
pop
dec
inc
movsl
cli
repnz
arpl
add
add
push
jbe
xor
add
cmc
and
and
jne
or
lcall
orb
lret
inc
adc
xor
xchg
lock
mov
xchg
mov
push
stos
andps
cmc
jne
imul
fiaddl
dec
xchg
lds
push
inc
rcll
in
std
push
mov
or
aam
scas
sub
dec
mov
mov
xor
jno
andl
lcall
dec
decl
and
aas
rorb
std
xchg
int3
fiaddl
movsl
mov
dec
inc
sbb
and
mov
dec
pushf
pop
jb
push
lock
scas
mov
jns
inc
gs
data16
addr16
push
add
lcall
das
pushf
lods
icebp
pushf
arpl
cwtl
psadbw
sahf
inc
mov
fdiv
cmp
push
xchg
lods
inc
cmp
mov
popa
xlat
cmp
into
push
xor
lods
sbb
test
or
into
cli
daa
cmp
ret
rcrl
cli
rclb
jbe
leave
mov
or
mov
add
test
xchg
mov
jmp
sbb
ds
sti
movsl
add
inc
ljmp
in
pusha
push
inc
dec
pusha
out
mov
add
orb
push
push
jb
add
lret
pop
inc
sbb
out
jno
mov
aad
pushf
add
inc
push
iret
fdivrl
push
lock
insl
fnsave
mov
add
leave
das
inc
or
test
and
xor
filds
dec
jnp
xchg
or
cmp
sbb
fcomps
or
xchg
mov
push
mov
pop
push
adc
push
and
mov
test
sub
ffree
sub
pushf
negl
ret
cmc
sbbb
mov
movsb
sarb
enter
pop
push
xchg
fcomps
mov
cmpsb
and
fisttps
mov
dec
mov
in
jne
adc
push
pop
test
rcll
shrb
cmp
shll
push
addb
lods
jno
sub
mov
cmpsb
clc
fwait
shll
orl
add
pop
push
ret
mov
inc
push
cmpl
scas
orb
icebp
push
sar
insl
jle
fs
imul
jnp
inc
adc
cmp
aaa
icebp
lea
adc
or
push
or
fisubrl
and
pop
icebp
mov
xchg
mov
out
mov
addr16
aas
pop
inc
inc
adcb
fimull
fcoml
xchg
es
gs
popa
in
sub
outsl
pop
xchg
sbb
push
out
cmc
pop
call
stc
lret
or
and
pop
rorb
xor
pop
inc
push
mul
sub
outsl
test
retw
repz
in
inc
mov
push
push
iret
jo
mov
xchg
or
cmp
dec
mov
into
push
inc
cmp
rolb
mov
mov
add
push
mov
addb
dec
jle
lcall
fs
add
push
test
leave
loope
dec
bound
icebp
outsb
add
daa
hlt
jle
xchg
jno
and
xor
sbb
inc
sub
icebp
pop
scas
dec
test
lock
int
test
mov
jmp
pop
pop
jne
push
push
push
or
frstor
gs
es
xchg
rcr
push
imul
adc
fwait
jne
mov
inc
mul
inc
push
fisubl
ja
ret
push
inc
pop
xor
dec
fucomp
and
xor
jg,pt
push
les
lock
fs
cltd
adcl
xchg
fmul
lret
sbb
ret
inc
inc
notb
mov
jae
push
cmova
fdivrp
ret
or
enter
ficompl
subb
ffree
sub
pop
xlat
push
cli
pop
xchg
pop
push
popa
adc
pop
inc
insb
daa
aaa
add
xchg
jmp
cmp
mov
mov
adc
jo
fdivrl
sbb
jns
mov
and
jnp
dec
pop
adc
add
jno
test
push
shll
push
std
mov
jmp
addb
inc
or
xchg
xchg
dec
mov
sbb
inc
lods
aam
mov
xorl
jo
mov
repz
pushl
and
add
xchg
stc
sbb
cmc
lds
sub
pmuludq
and
fstps
add
mov
fidivs
loope
pop
push
imul
push
xor
or
lahf
or
daa
fdivs
ror
inc
pop
pop
mov
mov
andb
out
pop
icebp
or
adc
fdivl
mov
xchg
inc
jmp
dec
dec
xchg
rcrl
xor
or
movsl
scas
ja
sahf
jbe
jno
mov
xchg
add
in
arpl
test
xor
jle
inc
pop
aas
sub
adcl
rcrl
sbbl
mov
jno
xor
data16
fwait
push
cmc
arpl
pusha
mov
inc
sbb
fiaddl
push
mov
stc
insl
pushaw
test
shrl
xchg
pop
push
pop
push
adc
push
add
movsb
dec
jge
jl
push
ret
pop
jb
pusha
and
add
or
jne
icebp
inc
push
test
adc
add
int
pop
adc
shlb
fwait
aad
rorb
test
in
mov
daa
jge
scas
jle
aaa
cltd
sbb
or
insl
inc
mov
mov
adc
jp
or
mov
xchg
fst
jp
test
mov
pop
push
cmp
pop
pop
inc
int3
lahf
cwtl
test
and
ja
incl
arpl
xchg
cmpsb
pusha
test
xchg
push
rcrb
dec
xchg
cwtl
fbstp
and
lcall
in
out
jge
pop
lods
jp
hlt
cmc
add
or
add
mov
mov
out
adc
sbb
pop
leave
xchg
xor
aaa
xchg
std
data16
xchg
xor
daa
mov
inc
mov
fldt
aas
sub
xchg
xchg
add
out
push
push
cli
nop
daa
sub
shlb
xchg
inc
push
pop
jg
push
pop
mov
ret
popf
mov
jle
xor
push
leave
push
and
fmulp
pop
test
call
mov
jae
or
mov
dec
sub
fs
pop
pop
lret
shr
sub
sbb
jae
outsl
add
pop
mov
int
inc
popa
enter
in
sbb
xor
mov
lea
roll
adc
aas
pop
mov
iret
jle
inc
mov
sbb
and
sub
adc
push
inc
add
push
xor
mov
movsl
mov
lcall
popf
sbbl
or
aaa
adc
insb
pop
cmpsb
in
inc
push
faddl
add
and
in
lods
orw
orb
jge
add
and
lahf
mov
loop
insb
mov
or
ret
adc
push
adc
cmc
fildl
sub
sahf
xchg
lea
loopne
out
xor
les
push
or
flds
loope
push
pop
cwtl
jbe
sub
sbb
add
addr16
jmp
mov
sahf
xlat
shl
adc
addb
lcall
sbb
lods
dec
jp
outsb
lds
loop
test
shlb
lret
shrl
push
or
rclb
cmp
xor
fcoml
pusha
enter
sub
ret
shr
xor
inc
cmpb
sub
xor
gs
sub
and
iret
cmc
int
mov
das
lcall
std
js
jge
adc
jp
or
lods
mov
push
push
out
push
sbb
and
int3
je
push
sbb
pusha
stc
and
adc
div
fistl
xor
sbb
mov
cmp
jns
mov
movsl
fdiv
pop
jl
push
in
jno
inc
loopne
out
test
movsl
les
outsb
mov
or
pop
and
cmp
fstl
adcl
cvtps2pi
loopne
jns
arpl
fmull
dec
sbb
inc
int3
jo
gs
in
jnp
int
pop
fisubl
push
push
jne
dec
gs
xchg
pop
addr16
addb
shrl
loope
jne
or
sbbl
out
xor
inc
mov
outsl
sbb
mov
test
adc
mov
add
lds
std
bound
sbb
mov
dec
insb
jp
outsb
push
lock
jne
jbe
dec
addl
movsl
xor
jp
inc
sub
or
stos
xor
xor
push
in
jmp
sbb
adc
cmp
inc
bound
inc
cwtl
enter
jne
xor
add
pusha
fistpl
jge
mov
mov
sbb
shrl
or
repnz
pop
enter
mov
add
push
lds
push
fsubp
sub
test
or
lods
jge
inc
inc
mov
pusha
inc
mov
pop
push
push
sahf
pop
push
and
sub
add
jne
fdivs
adc
mov
push
jne
xor
in
push
mov
loope
pop
lds
addb
dec
cmp
and
sub
enter
jno
xor
adc
xor
out
inc
add
addl
aad
push
xchg
sub
pop
cmc
fisttpl
inc
ret
sbb
jecxz
inc
addb
sub
jle
movsb
arpl
imul
push
dec
mov
push
add
dec
jl
jne
or
cld
jno
xchg
inc
adc
scas
lds
leave
hlt
rcll
pop
push
push
inc
add
cmp
insb
stos
mov
cli
add
inc
xor
xchg
or
xchg
notl
dec
into
sahf
shrb
rcll
cmpsl
aad
mov
or
popf
add
push
and
and
les
cltd
in
push
mov
inc
leave
xchg
push
idivl
cmpsl
pop
imul
faddl
insb
sahf
dec
add
das
daa
loopne
xchg
add
iret
mov
sbb
fmuls
xor
ljmp
mov
jo
inc
mov
dec
pop
mov
jg
test
jo
sbb
nop
orl
gs
dec
arpl
test
pop
sub
cwtl
aad
pop
ret
test
mov
movsl
add
or
in
push
xchg
inc
movsl
ret
push
sub
outsb
mov
leave
or
es
mov
adcl
xchg
enter
mov
inc
and
jnp
test
xor
aas
lds
jp
pop
test
ljmp
or
adc
outsb
or
xor
push
push
les
imul
aaa
sbb
sbb
or
mov
stos
call
inc
dec
insb
lahf
sti
inc
call
shl
cmc
xor
inc
push
movsl
addb
dec
popa
inc
dec
sbb
popf
cs
sbb
mov
ljmp
repz
stc
repz
or
cli
or
xor
jbe
pop
cmc
pop
lcall
mov
cwtl
jp
sbb
movsl
mov
and
xor
repz
out
dec
xchg
stos
and
movl
add
cwtl
icebp
aas
fadd
inc
jle
mov
mov
mov
ret
jno
arpl
xor
bound
repnz
cs
lods
movsl
aaa
cmp
imul
and
cs
jo
push
cmpsl
jb
sub
data16
inc
aad
jmp
jno
add
add
xor
test
sbb
lcall
inc
and
push
aaa
cltd
sub
add
dec
sbb
pop
in
sbb
repnz
lret
ja
sbb
cltd
fisubrl
pop
sub
sub
add
jb
push
repz
jp
jb
jne
xchg
mov
out
in
adc
sbb
jno
add
movsb
and
rcl
xchg
movsl
sbbb
lcall
pop
test
sbbb
pop
daa
in
xor
lret
in
mov
rcrb
add
push
pusha
add
insl
jb
jnp
loope
inc
cs
add
xchg
cmc
cmp
lret
pop
mov
leave
repz
jne
and
or
out
movsl
or
shl
test
mov
mov
lcall
mov
fistps
push
inc
mov
cmp
mov
mov
push
mov
adc
xor
sbb
cmc
inc
bound
sub
cmc
repnz
or
je
data16
divl
fisttps
cmp
popf
pop
dec
repnz
imul
dec
clc
decl
ljmp
icebp
pop
fisttpll
push
jecxz
and
leave
jmp
ret
inc
arpl
cs
add
jp
add
mov
pop
jbe
std
jne
daa
xchg
push
fs
or
mov
sarl
loope
enter
imul
push
jge
sub
adc
addl
xchg
scas
xchg
push
or
inc
andb
loopne
push
adc
mov
sub
pop
xchg
xor
pop
pop
adc
ret
add
lds
xor
jle
repnz
sub
inc
lea
inc
into
rol
pop
scas
dec
jno
scas
outsb
cmp
scas
mov
arpl
push
test
add
jno
iret
mov
out
sahf
jnp
mov
cli
dec
retw
cli
mov
or
ret
mov
cwtl
sub
inc
nop
push
cmp
push
mov
xor
loopne
xchg
and
and
nop
stc
sbb
pop
mov
shll
inc
sbb
mov
xor
xchg
adcl
jp
push
and
lock
add
jmp
pop
push
xor
jbe
jnp
xor
and
sbb
inc
adc
sbb
and
cmp
push
add
cmpsl
jne
loop
sub
mov
add
ds
roll
lds
enter
xchg
sahf
cmpsl
cmp
sbb
mov
add
inc
mov
mov
lock
sbb
mov
hlt
pop
push
or
xor
cmp
repz
jecxz
xor
sbb
arpl
pop
lcall
mov
cltd
dec
and
dec
out
clc
loopne
fs
cmpsb
xor
push
or
sbb
mov
out
rol
orb
push
push
sahf
xchg
jecxz
push
rcpps
ret
sbb
inc
test
daa
andb
sub
push
jg
ret
push
add
gs
dec
sahf
add
shrl
testb
rcll
push
add
imul
aam
stos
icebp
adc
clc
sbb
addr16
daa
cmp
in
pop
push
ret
inc
push
sbb
mov
cmp
shrb
fistpl
cmc
sbb
loop
sub
rcl
idivb
cmp
mov
mov
or
imul
jb
fcoml
push
shl
hlt
xchg
les
add
push
aad
neg
outsl
sbb
sti
inc
imul
ljmp
add
sub
jmp
stos
gs
shll
pop
jno
jle
jmp
xchg
clc
std
insl
popa
jnp
add
mov
jmp
add
dec
and
ret
jne
xchg
ja
cmp
insb
ret
insl
movsb
test
test
sub
loope
dec
rolb
int3
pop
outsb
mov
test
push
xchg
inc
inc
mulb
rcl
inc
push
mov
mov
sahf
pusha
sbbl
add
arpl
in
gs
push
or
push
popf
insl
es
decb
enter
adc
gs
jg
dec
addl
int3
jo
outsl
cmp
sbb
addb
fwait
repz
pop
cmp
jb
sub
xorb
inc
cmp
leave
sti
add
pop
mov
sbb
sbb
xchg
stos
xchg
aad
loop
call
sahf
add
sbb
xor
sbb
rorb
mov
push
adc
add
or
pushf
test
sbb
lds
inc
pop
adc
sub
or
mov
test
jb
cmp
pop
pusha
addb
hlt
out
jno
popa
inc
loope
loopne
dec
sbb
insb
inc
dec
js
mov
lods
xor
xor
inc
dec
mov
shlb
dec
repz
pop
cmpsb
mov
cwtl
cmpsb
lahf
shrl
mov
mov
ja
jp
cwtl
adc
aam
xor
xor
and
push
sbb
loop
inc
mov
mov
xor
mov
pop
pop
mov
mov
mov
repz
iret
sbb
sub
iret
add
movl
test
sbb
inc
dec
fmull
std
insb
dec
xchg
add
lds
dec
repnz
fcoml
ljmp
fmulp
xor
dec
push
lods
push
and
xlat
inc
popf
xor
inc
push
adcb
lcall
jbe
cld
xchg
addb
pop
jl
inc
jns,pt
ja
or
push
pop
adc
ret
or
test
adcl
mov
add
aam
mov
add
rorb
mov
mov
test
lcall
add
gs
dec
jne
imul
push
jbe
pop
dec
add
dec
lods
and
bound
push
mov
xchg
stc
mov
les
stos
mov
pop
clc
sbb
sbbb
inc
mov
sub
imul
jmp
test
sub
and
mov
sub
add
loop
push
dec
xchg
and
add
popf
fsts
xchg
or
and
out
insb
push
xchg
mov
leave
jmp
mov
testb
push
jp
data16
or
xor
out
push
rcrl
mov
and
ja
mov
dec
insb
mov
sbb
out
and
int3
add
push
or
gs
mov
push
test
xchg
push
lret
sub
test
dec
das
arpl
or
jnp
dec
in
imul
in
mov
jnp
add
test
xor
rcll
pop
push
rclb
subb
notb
push
or
push
pop
fwait
xchg
mov
cmc
dec
mov
adc
in
les
jp
mov
add
add
enter
and
shrb
add
push
movb
lods
bound
rol
xor
lcall
js
jmp
add
pushf
sub
cmp
jle
daa
pushf
mov
into
stos
push
gs
push
pop
jmp
test
sbb
xchg
cmp
xchg
adc
subl
xor
xchg
jmp
push
or
inc
adc
xchg
sbb
push
in
and
and
out
add
popa
xchg
adc
lds
in
out
dec
sub
loope
or
adc
das
lods
gs
inc
push
sbb
out
rorb
mov
lret
or
imul
fisttpll
nop
xchg
push
imul
ds
aas
subb
xor
lea
test
aam
jns
inc
fsts
pop
aas
dec
cld
and
pop
sbbl
push
inc
loopne
mov
rcr
sbb
jge
cmc
pop
or
test
cwtl
adc
pop
mov
xor
mov
lret
inc
shll
sahf
push
pop
sbb
stc
fimuls
inc
sbb
jo
ret
push
lret
mov
adc
dec
dec
and
in
or
xor
out
testb
cmp
push
and
xchg
dec
xor
into
mov
test
dec
lahf
iret
jnp
pop
sub
insb
decb
arpl
ret
push
adc
es
insb
pop
push
add
or
mov
je
sbb
int
scas
push
push
lret
jne
mov
inc
sbb
or
sub
pop
add
pushf
cmpsb
jne
pop
jge
out
xor
inc
ret
mov
sbb
fldl2e
gs
cmp
mov
mov
jne
or
xchg
mov
cs
orb
popf
mov
cmp
xor
movsb
push
mov
imul
rcll
out
push
popa
push
inc
std
jecxz
orb
add
add
add
inc
out
sub
arpl
inc
dec
pop
call
xchg
cmpsl
mov
jp
cmp
xor
andl
mov
mov
loop
sahf
cmpsb
scas
mov
ss
roll
xchg
or
sub
add
bound
and
int
push
gs
xchg
test
fldcw
xor
mov
rcrb
pop
add
jne
frstpm(287
add
shll
inc
ret
jg
cmp
jmp
sub
movsb
add
cmp
dec
lea
fdivrl
stc
mov
pop
xor
out
push
jns
imul
bnd
pop
inc
mov
inc
int
dec
xlat
imul
pushf
jmp
lods
loope
rclb
add
add
xor
scas
push
daa
or
jp
cwtl
mov
pop
adc
test
fs
mov
lret
daa
xlat
xorl
mov
sbb
mov
add
loop
mov
icebp
mov
inc
cmp
out
mov
push
aaa
jo
movsb
sub
stc
lcall
xor
lock
mov
lds
cmp
push
xchg
xchg
loopne
add
xor
pusha
fisubs
and
and
lock
or
and
sahf
lret
arpl
add
mov
fsubrs
pop
push
pushf
adc
add
jge
lock
mov
mov
jecxz
loopne
inc
leave
lods
bound
fiaddl
fwait
or
pop
jnp
loope
cmp
popa
add
inc
data16
inc
inc
pop
jae
push
jns
pop
add
jle
aaa
mov
or
push
cmp
dec
jl
pop
or
inc
mov
into
and
fwait
dec
sbb
lods
pop
sbb
addr16
cmp
inc
les
sbb
push
mov
mov
and
mov
and
orl
test
mov
push
xchg
ret
lret
rcrl
test
mov
adcl
jg
sbb
push
repz
test
mov
outsb
stos
lea
aad
arpl
inc
orl
adcb
roll
iret
faddl
push
adc
jb
push
xlat
xchg
mov
pop
ret
pop
scas
xchg
adcl
lods
dec
insb
inc
add
les
pop
inc
movb
or
and
imulb
inc
sbb
mov
lret
dec
test
arpl
shll
mov
jle
push
ljmp
lea
cmp
mov
daa
sub
mov
ljmp
sbb
cs
or
inc
adc
add
pop
inc
push
fxch
mov
xor
dec
inc
sbb
xor
xlat
test
mov
cmp
cwtl
js
cmpsl
xchg
sti
inc
inc
sub
movsl
add
pop
pop
imul
mov
rcrl
test
jmp
or
dec
arpl
out
fbld
imul
mov
fiaddl
andb
out
inc
shll
pop
add
mov
push
in
mov
rorl
push
fdivl
ljmp
add
fwait
icebp
inc
mov
xor
insb
push
pop
xor
push
popa
jno
aam
repnz
les
in
push
sbb
sarl
cmp
mov
push
shrl
add
push
push
sbb
je
test
push
mov
pop
out
jmp
gs
dec
or
pop
mov
xor
cmpsb
insb
shl
push
and
pop
ret
pop
out
lods
push
andl
outsb
addr16
call
push
cmp
xchg
push
andb
jns
popf
add
pop
sbb
sarl
dec
dec
mov
cmp
fcomps
les
inc
adc
lods
jnp
adc
and
or
dec
icebp
popf
mov
lea
mov
test
push
mov
pop
rcll
mov
sub
cmc
sub
out
fcompl
adcb
popa
sbb
test
pop
xor
jne
testl
cmp
xchg
or
add
aam
test
add
addr16
push
cmp
andb
mov
push
mov
and
mov
sbbl
xchg
in
jl
mov
dec
outsb
mov
mov
adc
cs
gs
add
inc
sub
add
xorb
rorl
fs
lods
addl
push
aaa
jno
lret
mov
push
add
push
sbb
notl
repz
push
pop
rcrl
xchg
jne
jl
xchg
add
adc
inc
aas
xchg
pusha
pop
mov
movsb
xor
mov
and
popf
jecxz
or
sbb
daa
stos
cmp
loope
jb
stos
and
in
sub
push
dec
je
mov
test
cwtl
outsl
pop
xor
push
sub
pop
mov
jo
add
insl
jne
stc
and
push
loop
jle
hlt
imul
stc
jp
arpl
data16
hlt
or
outsl
adc
insb
lcall
and
ja
pop
andl
shll
pop
xchg
sub
mov
arpl
push
sbb
daa
outsb
sub
and
pop
fsubs
jge
push
fists
inc
adcl
addb
sub
dec
shll
loop
repz
xchg
sbb
push
outsb
add
inc
int3
fists
push
sti
jp
lss
movb
sbb
mov
ja
cmpsl
pop
fdiv
inc
mov
sbb
mov
sub
aaa
incl
sbb
add
sti
data16
mov
and
in
daa
imul
inc
mov
out
push
sahf
sahf
loopne
ja
iret
inc
or
ret
aas
adcl
pop
fcomps
inc
sti
adc
dec
insb
lds
stc
movsb
cmp
xchg
int3
dec
add
jge
sti
movb
lcall
enter
xor
orb
loop
or
loopne
sbb
out
out
ss
inc
or
add
lret
pop
mov
call
push
adc
adc
lds
aas
arpl
lcall
test
inc
add
dec
mov
push
push
jecxz
inc
ret
lret
sub
mov
or
mov
mov
sub
loopne
ffree
push
pop
push
ret
sub
sbb
inc
fldt
gs
inc
sbb
test
incl
lea
xor
mov
cltd
push
or
sub
push
and
out
pop
mov
lds
lds
sub
mov
rorb
aas
lods
dec
mov
xchg
mov
shll
and
cmp
sbbb
aaa
pop
jge
add
cli
push
cmp
and
add
lock
cmp
inc
jge
mov
adc
enter
stos
and
and
xor
adc
mov
movsl
dec
push
jge
sbb
push
sti
push
ret
sbb
int
xchg
mov
xor
pop
xchg
push
inc
daa
out
sbb
jne
dec
cmp
xchg
pop
or
push
push
fidivrl
ljmp
pop
enter
jl
mov
mov
cltd
ret
pushf
cli
inc
sbb
fbld
xchg
clc
sbb
mov
add
mov
das
or
xchg
sahf
xchg
aam
sbb
cmpsb
mov
iret
sbb
adc
iret
insb
fiadds
cmc
or
dec
add
roll
dec
push
sub
fmuls
pop
sub
bound
xchg
test
mov
sar
cltd
je
mov
or
dec
idivb
add
lock
imul
test
fwait
fwait
loopne
xchg
cwtl
decb
lods
mov
repz
mov
clc
icebp
add
test
push
repz
gs
scas
lcall
divl
addr16
lods
add
sbb
and
push
loop
inc
mov
mov
mov
inc
negb
xchg
and
insl
cmc
add
cmpsb
push
das
push
sbb
mov
sub
and
gs
push
dec
push
dec
bound
orl
mov
or
cltd
dec
adc
nop
fiadds
pop
cmp
jle
jge
and
lds
pop
lock
inc
add
add
out
repz
or
and
div
inc
cmc
jl
push
cmp
sbb
pop
ret
xchg
push
mov
inc
jne
movsl
adcl
add
jp
mov
pop
jne
outsb
scas
jno
cs
aam
cmc
xor
pop
push
mov
fsubl
imul
or
imul
inc
insb
or
in
mov
sbb
cmpsb
cmpl
xchg
outsl
sub
mov
les
cmp
mov
imul
in
lret
dec
mov
fcmove
push
xor
push
iret
inc
rclb
cmp
addb
push
xor
stos
cld
add
shll
dec
sub
mov
cltd
sti
stc
cmc
ret
lods
test
inc
push
roll
pop
xchg
lods
leave
ja
inc
dec
addb
into
shll
push
add
dec
inc
push
mov
pusha
push
outsl
jle
aaa
scas
movb
fbld
sbb
loop
and
xchg
mov
mov
pop
stos
inc
in
add
pushf
add
popf
push
and
lret
dec
dec
cltd
ss
pop
out
xchg
xsaves
adc
mov
mov
dec
iret
inc
gs
pop
sbb
hlt
loop
or
pop
negb
push
nop
fdivr
pusha
mov
xchg
fsub
test
aaa
jnp
icebp
xor
into
icebp
inc
inc
dec
jbe
pop
les
jbe
sahf
cmc
sbb
outsb
inc
out
enter
and
in
pushf
fwait
push
cmpsb
or
jg
xchg
inc
pop
mov
test
mov
es
inc
scas
in
adc
mov
imul
cmpsl
int
scas
inc
sbb
icebp
push
or
mov
subl
test
dec
push
stos
inc
jne
dec
pop
in
addb
and
lahf
daa
xor
pop
test
out
push
sub
or
mov
testl
fldt
arpl
ficoms
enter
pop
inc
mov
fnstcw
cmc
sbb
xchg
dec
xchg
ret
push
andl
stos
insb
lea
jne
jge
daa
sub
fadd
mov
sti
test
cmp
mov
jo
mov
add
dec
pushf
push
fbld
jb
cmpsl
cmc
mulb
shlb
sbb
mov
out
nop
jo
mov
das
sbb
dec
pop
lcall
pop
insb
add
pop
jge
sbb
jle
fbld
dec
or
insl
adc
cmc
sbbl
push
xor
xchg
shld
sub
jb
mov
outsb
xchg
fyl2x
lcall
mov
popa
push
lret
mov
mov
addr16
mov
sbb
faddl
out
nop
fwait
lret
dec
xor
cmp
and
cli
scas
popf
xor
orb
push
icebp
fcompl
faddl
pop
xchg
dec
sbb
sbb
pop
inc
mov
or
sbb
popa
inc
mov
inc
jmp
adc
cmpl
stos
inc
testb
sub
popf
icebp
mov
data16
mov
andl
jae
mov
mov
add
popf
pop
xchg
mov
add
mov
orl
roll
adc
std
enter
fadds
adc
and
cmpsb
ficomps
inc
jl
les
push
mov
stos
cwtl
or
sub
sbb
gs
mov
ret
popf
popf
pop
ret
leave
fcmove
ffree
popf
bound
pop
push
add
push
xchg
or
popf
pop
cmp
xchg
sbb
adc
pop
int
jns
cmc
shll
dec
or
leave
vhaddpd
shl
mov
mov
mov
mov
jp
and
xor
mulb
jns
adc
add
bound
cmp
pop
jge
add
js
mov
aas
mov
ljmp
jge
lret
fnstsw
mov
and
pop
mov
cmc
push
inc
push
adc
cmp
div
popa
dec
add
dec
pop
and
cmpb
inc
xchg
ret
mov
fs
xor
lcall
mov
sbb
push
incl
inc
sbb
repnz
push
and
mov
sbb
cmp
mov
mov
lret
stc
sub
shll
test
push
test
pop
cwtl
lock
mov
sub
sarb
mov
dec
push
adc
inc
dec
ljmp
popa
loope
je
cmp
and
add
stos
out
mul
in
push
mov
xor
or
sub
add
cwtl
add
pop
mov
test
and
inc
xorb
inc
push
fldt
ljmp
sbb
jl
and
push
addr16
outsl
dec
test
xor
push
shl
fsts
dec
test
int
inc
xchg
cmc
mov
mov
xchg
gs
xor
jle
add
lods
sub
adc
jne
lret
add
jl
add
das
or
jl
add
test
xchg
movsl
adc
pop
jns
insb
shrb
mov
lock
jns
xchg
sarb
cwtl
out
je,pn
jne
add
repnz
out
mov
sub
test
or
test
jno
sti
rorb
loopne
mov
xor
dec
mov
adc
jbe
adc
leave
icebp
jo
imul
add
shl
pop
jg
xor
sbb
sbbl
jp
outsb
rolb
jne
mov
jo
adc
or
mov
std
add
imul
pop
ljmp
push
js
nop
jb
dec
shl
call
inc
jp
inc
push
xchg
test
mov
or
test
xchg
xchg
lds
outsl
mov
push
mov
push
fidivs
xor
inc
inc
out
push
mov
outsl
inc
lods
ja
enter
cs
cmp
xchg
sbb
loope
daa
pushl
cli
jae
rorl
roll
scas
repz
enter
add
dec
cmp
xor
push
dec
adc
sbb
cld
add
cmp
stos
pop
dec
push
cmpsl
mov
jle
push
xorl
rcrl
outsl
inc
xchg
mov
mov
lcall
dec
sub
test
loope
mov
mov
mov
imul
add
out
inc
imulb
inc
dec
sub
aas
mov
cmc
fadds
sbb
jmp
push
xor
xor
xor
ret
sti
push
in
jecxz
sub
sbb
in
scas
dec
jne
sbb
int
test
lods
inc
cmpsl
lds
hlt
les
clc
std
movsl
xchg
mov
jno
fwait
and
out
ljmp
dec
mov
xchg
push
fs
jle
cmp
and
sub
jp
mov
mov
push
cwtl
lahf
idivb
out
lea
xor
cmp
out
xor
jbe
int
iret
xchg
cmpsl
test
jbe
add
insl
lret
xchg
roll
addb
jle
cmpsl
push
dec
push
fcompl
xor
adc
push
dec
xchg
mov
and
loope
sbb
and
out
aas
ret
xchg
fdivr
jae
mov
insb
mov
rorb
fwait
stc
xor
mov
in
sbb
stos
gs
mov
dec
mov
jmp
faddl
mov
fwait
pop
mov
inc
jbe
daa
push
lods
push
jne
psubw
shrl
add
pop
les
mov
pop
gs
pop
fnstenv
sahf
inc
test
roll
pop
fwait
and
cmp
jecxz
pop
cwtl
scas
jne
or
xor
cltd
mov
sub
fcomp
mov
mov
fistpll
add
xchg
lea
mov
dec
cmp
dec
and
repz
push
stos
and
xor
add
push
ja
add
loope
jg
inc
int
in
test
add
jp
jns
jnp
xchg
scas
or
push
sbb
sar
push
pop
push
sbb
ja
xchg
fs
out
les
mov
xor
jae
and
imul
testl
jbe
xorl
jl
mov
cmp
out
imul
dec
xor
cmc
mov
popa
stos
rcr
mov
fstps
stos
jnp
daa
or
out
lds
mov
cmc
sub
add
inc
pop
or
xor
add
sbb
sub
ret
in
lahf
jae
jmp
xchg
add
out
into
notb
dec
ja
cltd
mov
outsl
pop
repz
mov
cs
fs
test
push
cmp
inc
fdivrl
xlat
push
pop
lcall
orb
or
mov
pop
sti
test
push
jg
imull
jmp
add
push
inc
add
pop
andb
or
inc
ljmp
dec
mov
aas
xor
es
inc
call
daa
out
cmpsl
xchg
cmpb
sbbl
gs
sahf
fwait
cmpsl
int
mov
daa
fisubrs
pop
mov
sbb
mov
test
repz
hlt
nop
mov
decb
loope
test
fiadds
push
mov
pop
dec
mov
mov
sbb
mov
icebp
push
adc
adc
xchg
xor
or
insl
into
xor
mov
aad
mov
pusha
cmc
inc
add
int
push
roll
aad
inc
push
push
mov
jge
popa
and
push
push
pusha
pop
xchg
jp
pop
sbb
test
dec
insb
xlat
sbb
cmp
mov
push
scas
mov
lea
mov
dec
jg
lea
mov
push
pop
clc
dec
xor
repz
add
xchg
arpl
popf
push
andb
inc
int3
xor
pop
xor
pop
scas
leave
sahf
mov
jmp
movsl
jno
push
insb
cmp
or
arpl
insb
push
popa
adc
inc
ds
sahf
nop
mov
lds
xchg
mov
addb
shll
cmp
movsb
shll
mov
pop
inc
or
jle
mov
lahf
pop
popl
cs
jno
push
dec
sub
sti
lods
push
iret
sbb
xchg
xchg
xchg
jl
ja
in
and
lea
pop
dec
and
sub
mov
sbb
rclb
dec
mov
daa
jp
cmpsb
flds
sbb
push
mov
fisttpl
push
ret
mov
imul
xorl
xchg
jb
out
cmc
sbb
loope
xor
ret
test
sahf
loope
pop
jb
stos
mov
mov
shll
xor
adc
sub
push
sti
xchg
and
cmp
das
add
mov
leave
ja
push
inc
inc
stc
xorl
movsl
xchg
out
jp
popf
pusha
es
pop
push
pushf
lea
mov
adc
fadd
sub
mov
and
je
push
mov
xchg
pushf
loope
test
test
mov
imul
cmp
pop
lea
cmpsb
shrl
loopne
cmc
ret
lods
mov
add
arpl
sbb
test
lcall
inc
in
jecxz
cmp
sahf
mov
arpl
cmp
jmp
inc
jmp
sub
xchg
ss
loopne
ret
xchg
sbb
hlt
jmp
lret
mov
dec
jnp
pop
push
lret
mov
xor
mov
popa
dec
xchg
sbb
subl
daa
ret
dec
add
push
sub
and
sbb
ljmp
add
xor
xchg
sub
xor
mov
adcb
xor
cli
push
add
xchg
or
fildll
aaa
dec
into
xor
jno
clc
daa
test
pusha
sub
jnp
gs
pop
out
pop
jae
cwtl
lock
mov
inc
adc
call
xchg
add
mov
push
scas
repnz
ljmp
xor
dec
sti
xchg
rol
sub
push
xchg
pop
cmc
outsl
mov
data16
cmpsl
add
add
lret
sbb
aad
aas
adc
cmc
mov
out
dec
mov
mov
inc
push
jae
jmp
sub
push
es
arpl
fs
in
or
add
mov
sahf
sbb
jnp
imul
and
cmp
xchg
and
or
mov
or
inc
sub
jp
cmpsb
fwait
inc
sbb
xor
xchg
aaa
sbb
jnp
xchg
cmp
imul
or
jmp
mov
adc
movsb
sti
jl
mov
xchg
push
ljmp
popa
push
outsl
jmp
sub
and
daa
bnd
mov
jne
pop
push
xor
mov
sbb
add
add
jnp
inc
sub
mov
lcall
sbb
inc
arpl
sbb
repz
sbb
aaa
jle
pop
gs
or
push
int3
aad
sti
ret
mov
lds
mov
jbe
aad
sar
fisubs
cltd
inc
or
pop
daa
fildl
cmpsl
fsubr
jno
testl
push
pushf
push
ret
fwait
add
sti
scas
icebp
jge
push
outsb
mov
cmpsb
test
out
jne
mov
sub
push
pop
dec
movsl
test
jno
lea
mov
and
rcll
repz
inc
jmp
aaa
pop
mov
lret
sub
lds
add
insb
and
repz
in
call
gs
fsubrp
pushf
jae
clc
arpl
jle
and
ret
sbb
ss
xchg
push
xorl
inc
mov
mull
push
sbbl
mov
mov
pop
jl
mov
out
dec
jmp
or
pusha
lods
test
test
mov
out
into
xor
js
sub
int3
outsl
sbb
fsubrs
divl
sbb
test
sbb
cmc
mov
enter
popa
or
icebp
push
aas
stc
push
in
sbb
pop
ljmp
stos
pop
cltd
mov
pop
pop
lock
mov
aaa
xor
outsb
rcrb
ja
out
sahf
in
xchg
mov
subb
pusha
jp
inc
mov
add
daa
int3
cmc
scas
dec
push
pop
adc
mov
sbb
aaa
jle
sub
sbb
popf
cvtpi2ps
outsl
je
push
or
pop
adc
xor
mov
mov
sbb
and
lahf
push
jo
ret
aad
pop
stos
icebp
jnp
add
ret
dec
jns
add
loope
jp
inc
test
add
out
mov
sbb
add
jbe
es
sbb
gs
fcmovb
cmp
adc
cmc
imul
addl
rclb
xor
pop
push
ret
sub
pop
inc
ret
jp
outsb
dec
adc
sub
xlat
jp
push
lcall
and
scas
sbb
sbb
imul
pop
add
repz
push
sti
push
ds
inc
or
scas
sbb
mov
pop
xor
dec
dec
xchg
adc
jns
adc
addb
cmp
add
xchg
arpl
jo
pop
fstpl
push
inc
inc
cld
pop
or
rorl
loopne
aam
std
xor
in
leave
fisttpl
mov
dec
sbb
jb
push
sub
or
and
inc
in
pshufw
jl
push
ret
gs
es
inc
jmp
outsb
out
mov
iret
aas
bound
cmp
add
push
dec
test
aam
fdivp
xchg
js
xchg
bnd
test
mov
add
xor
rcll
sub
dec
cwtl
lcall
push
cmp
xchg
dec
bound
add
jp
or
or
xor
pop
and
or
popa
push
mov
cli
jno
sbb
imul
pop
pop
cmpsb
scas
gs
arpl
loop
mov
mov
scas
inc
dec
xchg
mov
sbb
sub
ds
sti
pushf
xchg
mov
mov
sbb
lcall
cli
int3
rorl
mov
sbb
ret
or
mul
jmp
xlat
mov
inc
xchg
lret
and
mov
push
cmp
push
bound
stos
or
test
aaa
js
add
repnz
loope
int3
cld
inc
cmp
js
push
fisubrl
movsb
dec
aaa
mov
fisubrl
cmpsb
pop
gs
sbb
inc
cmp
push
xchg
sub
cmp
outsb
or
adcb
sbb
push
cmp
xchg
inc
test
or
sbbb
jns
sub
loope
mov
mov
sub
mov
aad
add
or
fdivrs
gs
adc
inc
inc
add
fimull
mov
jbe
push
into
daa
pop
xor
in
mov
sub
pop
pop
dec
stos
sbb
and
in
or
icebp
mov
mov
jnp
popa
pushf
clc
sbb
xlat
mov
pushf
int
int3
sub
jmp
inc
lret
pushw
out
pop
enter
adc
clc
and
cmp
test
mov
push
rcrb
xor
cli
int3
sldt
jl
push
fidivrs
lret
test
inc
insl
and
sub
mov
xchg
jp
or
jmp
adc
enter
push
int
push
fistpll
int3
jnp
cmpl
xchg
adc
xchg
imul
popf
mov
mov
mov
sti
filds
mov
dec
sbb
mov
out
push
imul
cmc
push
jle
cwtl
orw
loopne
insb
arpl
pop
mov
mov
push
and
push
popa
xchg
cmp
sbb
and
in
xchg
adc
cmp
jle
loope
xor
cld
pusha
mov
fsubrl
xor
pusha
mov
push
repnz
scas
add
add
dec
in
loopne
sbb
scas
add
mov
aas
push
xchg
add
stos
cmp
sbbl
mov
mov
jns
push
stc
dec
xchg
or
bound
and
lret
cmc
and
jge
aas
mov
test
imul
imul
in
in
outsb
xor
xor
mov
or
fistps
mov
mov
dec
popf
inc
xchg
or
movb
xchg
fs
jb
lds
dec
sbbb
repz
jle
fmull
pop
cmpsl
jb
push
mov
cmp
pusha
jns
xor
or
xorb
push
pop
xchg
or
adc
mov
jecxz
pop
push
arpl
push
add
loop
and
cld
pushf
loope
dec
icebp
ss
mov
pop
into
nop
subl
add
dec
xor
push
adc
cmp
shrb
das
jmp
jge
push
push
sarb
sbb
dec
out
sbb
jecxz
push
pop
xor
jne
pop
roll
xchg
jmp
sbb
fistl
or
pop
or
cmp
cmpsb
or
push
sub
fwait
adc
sbb
jnp
out
addb
add
and
getsec
cltd
cmp
addr16
mov
outsb
add
addr16
inc
ret
or
mov
mov
notb
pop
cwtl
bswap
cmp
ljmp
aad
push
addb
xor
adc
inc
xchg
popf
ljmp
lret
ljmp
pop
push
or
push
dec
push
dec
cmp
xchg
jmp
xorb
adc
test
or
sbb
inc
jg
stos
jl
inc
mov
xlat
lahf
icebp
jl
movsb
sbb
aaa
sbb
lods
js
test
ljmp
pop
pusha
xor
loope
add
movsl
pop
repnz
insl
pop
xlat
or
repnz
inc
sbb
jae
movsl
cmp
adc
pop
sub
sub
pop
jnp
lret
enter
aas
xor
push
cmpsb
icebp
movsl
mov
inc
sbb
cmp
jb
scas
mull
mov
xor
inc
xchg
icebp
les
lret
push
adc
jnp
notl
jb
sti
addb
xchg
adc
mov
int3
ss
pusha
dec
push
push
push
out
adc
add
xchg
dec
insb
jecxz
test
cmp
ret
ffreep
mov
jmp
addl
cmpsb
dec
inc
loop
sarl
mov
gs
sbb
push
movsb
push
icebp
movsl
or
ja
xchg
pop
pop
ss
xorb
adc
ja
data16
addr16
lea
push
or
mov
rcll
sub
dec
imulb
outsb
inc
subb
sbb
sbb
pop
sti
pusha
in
pop
movsb
sbbl
cmpsl
mov
jae
and
cs
sub
pop
pop
mov
push
push
rcrl
add
mov
icebp
adc
mov
push
das
mov
out
rclb
dec
fcompl
mov
mov
test
inc
sub
in
std
icebp
push
inc
sub
or
sbb
fsubs
cli
fwait
pop
or
sarl
out
stos
das
leave
jp
jno,pn
or
jl
pop
xor
pop
sbb
inc
jge
fwait
push
out
ret
jle
fistl
inc
xchg
cs
pop
lret
sbbl
sbb
mov
imul
mov
pop
pop
loop
stos
icebp
sbb
mov
rcr
push
jnp
push
scas
pop
xor
fisttpll
mov
out
ret
or
fdivl
dec
dec
mov
fisubl
add
inc
adc
loope
call
mov
sub
add
insb
xor
xor
and
xor
sub
fadds
cmc
insb
add
inc
nop
cmpsl
adc
jp
mov
popf
pusha
in
into
pop
dec
stos
xchg
mov
lcall
jne
sbb
clc
xor
sbb
inc
mov
rolb
mov
arpl
pop
sbb
flds
ds
mov
push
mov
lds
aaa
mov
xor
jmp
xchg
andb
adc
and
sahf
test
inc
popa
fdivl
repnz
inc
repz
sub
push
mov
pop
in
andb
jne
push
sbb
lret
out
sbb
or
loope
dec
dec
push
push
adc
adc
push
push
mov
fisttpll
roll
std
cmp
dec
push
cmp
lret
xlat
push
test
pop
add
ret
loopne
xor
lock
sbb
andl
jnp
in
scas
cmp
fsubs
test
mov
xchg
fstpt
testl
jecxz
fsubrp
loope
add
push
xor
imul
cmp
adc
aad
fnsave
hlt
inc
and
loop
and
pop
ja
mov
and
sbb
add
sub
fbstp
rol
pop
call
xchg
dec
jecxz
cld
inc
xchg
outsl
push
dec
test
fwait
lret
adc
pop
xor
adc
sti
insb
pop
cmp
je
rolb
and
fistl
adc
mov
mov
ret
lock
inc
call
xor
or
jecxz
insl
mov
mov
xor
dec
jnp
xor
jg
inc
jo
xor
repz
mov
loope
jno
loop
and
outsl
std
loope
ja
mov
lods
flds
or
test
mov
call
inc
mov
imul
jnp
push
inc
jecxz
lds
pop
inc
cmc
push
fucompp
test
dec
fsub
loopne
mov
xor
in
push
cmp
leave
sbb
test
daa
push
stos
xchg
lds
add
push
sbb
in
dec
out
push
cli
fwait
enter
clc
fcoml
imul
mov
int3
push
sub
or
xchg
add
pop
sbb
add
xchg
negb
outsb
or
jmp
into
or
pop
jge
aam
adcl
sbb
pop
mov
xchg
push
flds
add
hlt
icebp
jle
jns
and
adc
pop
pop
or
je
jl
les
inc
add
push
push
lret
aaa
mov
arpl
enter
loopne
push
xchg
xchg
cs
jp
jne
pop
push
jl
mov
movsl
sbb
sbb
cmp
fistl
adc
stos
frstor
add
adc
pop
inc
pop
ret
cmp
insb
js
push
inc
xor
cmpsb
push
dec
and
and
inc
xor
addr16
xchg
mov
and
push
pop
cmp
repz
imul
jge
and
mull
and
mov
jbe
or
jbe
dec
fistps
and
or
std
mov
mov
lahf
int
daa
push
shlb
int3
pop
jno
stos
stos
push
jb
and
mov
inc
add
adc
aaa
cli
incl
mov
pop
dec
adc
pop
push
sahf
xlat
ja
pop
add
mov
enter
xlat
into
jns
push
rclb
gs
push
cmpb
xor
daa
loopne
push
js
sub
int
loop
fsub
pop
jne
mov
sbb
popa
add
mov
leave
loopne
ret
jnp
mov
add
push
in
or
inc
or
js
inc
outsb
rolb
push
data16
sbb
xchg
add
xchg
icebp
dec
or
jg
fs
mov
sub
mov
aaa
stc
int3
add
xchg
icebp
sbb
mov
fs
test
push
sub
pop
dec
ss
jg
sbb
push
adc
cmp
je
ds
add
cmp
test
push
mov
lret
or
in
lds
mov
icebp
xor
sub
pop
push
pop
stos
aas
and
pop
pusha
inc
mov
mov
lods
lahf
ret
push
lret
dec
xchg
mov
sbb
dec
out
mov
xchg
lret
or
dec
pcmpgtw
das
push
mov
imul
pusha
mov
or
ja
popa
lret
and
mov
jmp
loope
lods
push
xor
dec
adc
popa
xlat
call
les
mov
fwait
imul
push
pop
jp
inc
mov
sub
mov
lds
popf
push
jle
lock
xchg
and
pop
sub
fcmovbe
push
mov
idivb
push
xor
fstps
or
push
xchg
bound
pusha
or
outsb
pop
arpl
fiadds
mov
xor
aad
push
movsl
sahf
add
std
mov
sbb
dec
cmp
fcmovb
and
pop
fldcw
xchg
jae
fcompl
aaa
cltd
sub
inc
aam
mov
orb
ja
inc
cmpsb
lock
mov
jge
stos
xchg
mov
jbe
std
add
insb
sbb
out
dec
inc
inc
inc
mov
aaa
jnp
std
daa
icebp
insb
dec
gs
aam
inc
push
jne
insb
mov
iret
aam
or
push
andl
mov
out
icebp
adc
test
push
add
cmp
cld
xor
int
nop
push
imul
jno
sub
popf
push
data16
fs
js
std
jmp
pushf
mov
sub
popf
push
inc
andb
adc
lods
daa
jg
js
push
adc
fsts
cwtl
jp
sti
lds
cli
and
lcall
sbb
push
mov
push
or
and
jno
mov
sbb
pop
sbb
lahf
test
or
dec
mov
sarl
jle
sbb
inc
ret
pusha
mov
adc
and
fnclex
mov
xor
add
pop
sbb
adcb
mov
inc
lods
pop
sbb
mov
dec
insl
cs
fcoml
pop
addb
dec
mov
dec
jae
dec
lods
jecxz
pusha
fldcw
jae
mov
cmp
xor
ret
fs
or
and
or
loop
mov
jp
mov
mov
adc
sbb
jno
int
inc
iret
sti
ret
pop
notb
and
mov
adc
xor
in
mov
jmp
add
sub
or
std
adc
lahf
jp
cmp
pop
dec
add
push
push
inc
mov
test
push
fsubrp
stc
scas
fdivp
rol
dec
sbb
xor
rcr
sbb
fildll
call
inc
imul
or
test
jecxz
inc
mov
add
sti
inc
mov
ret
add
cmp
inc
sbb
sbb
sbb
ret
ja
gs
pop
data16
jns
mov
pop
loop
xor
xchg
in
inc
movsl
sti
xlat
shrl
imul
cs
aaa
mov
push
xorl
testb
sbb
std
sbb
lcall
enter
das
sbb
or
adc
jl
sbb
lcall
sub
lea
xor
loopne
or
subl
es
imul
dec
test
stos
int3
nop
jne
sbb
insl
cmp
cmp
jne
enter
sub
push
mov
pop
fisubs
push
mov
repnz
dec
data16
cwtl
add
sbb
sbb
pop
add
push
ret
jle
jae
adc
std
mov
daa
xchg
inc
jl
inc
push
mov
or
push
mov
mov
dec
mov
xor
adc
cmp
test
sahf
decb
jmp
ficoms
addb
call
mov
test
rclb
push
mov
les
int
sbb
loopne
add
jle
aaa
fmuls
adc
repz
test
push
out
push
push
adc
cmpsb
dec
jb
jle
pop
insb
dec
adc
out
mov
sub
pushf
scas
js
mov
jmp
rol
in
out
mov
or
fwait
sarb
lahf
cwtl
xchg
fadd
dec
lods
jp
lock
cwtl
das
or
adc
ret
sub
popf
outsb
lds
ret
push
mov
push
sarb
int3
ret
daa
nop
testb
fs
sbb
fldenv
gs
cltd
or
arpl
dec
lods
sbb
fidivl
jp
outsl
lret
je
sbb
adc
test
repnz
mov
push
stos
fs
sub
imul
mov
inc
cmp
xlat
cmp
loop
loopne
aam
mov
pop
repz
mull
in
xlat
lds
addb
andb
dec
dec
ljmp
inc
pop
les
lret
mov
xlat
mov
sahf
data16
mov
mov
mov
nop
add
stos
jp
push
idivb
dec
and
dec
leave
mov
jae
sbb
pop
stc
pusha
leave
push
inc
jnp
add
mov
sbb
shll
cmp
jnp
adc
int
cmc
or
push
stos
fiadds
fidivs
lret
test
outsl
inc
mov
mov
jmp
in
adc
sbb
iret
pop
in
lret
scas
cmp
js
gs
jp
mov
mov
mov
sbb
xor
mov
push
ret
addr16
or
pop
sbb
mov
push
out
pop
cmpsl
cmc
mov
sbb
stc
pop
pop
pusha
push
daa
lahf
and
aam
adc
cmp
add
shrl
fistps
mov
push
or
add
rcrl
daa
subb
jl
add
add
inc
jnp
jno
dec
cli
daa
stos
int3
mov
sub
or
mov
xchg
sub
jo
or
testb
inc
into
and
subl
jl
xor
rcrb
jmp
in
ret
fstp
pusha
inc
xchg
popf
pop
add
in
or
adc
push
sbb
mov
fsubrs
popf
or
int
push
ja
pop
mov
lds
movl
pusha
pop
xor
xchg
cmp
movsl
sbb
mov
addr16
add
cmc
sbb
mov
adcl
mov
sub
sbb
dec
cmpsl
xchg
fsts
cmpsl
xchg
mov
add
roll
jl
das
and
push
les
testb
mov
dec
addr16
loopne
lcall
fnstsw
sbb
sbb
adc
arpl
shll
inc
and
int3
jae
xlat
push
adc
jp
push
sbb
das
test
cwtl
cmpsb
mov
inc
cmp
jns
adc
sbb
fimull
je
jo
leave
xor
fcmovu
lock
mov
aaa
xor
dec
int3
fwait
mov
daa
xor
lds
pop
mov
xor
repnz
lods
and
or
out
inc
dec
mov
mov
arpl
inc
add
push
push
popf
adc
cmp
subl
push
andl
pop
sbb
sahf
stos
lahf
xchg
addb
ret
inc
mov
push
mov
gs
ret
dec
xchg
dec
or
out
xchg
dec
inc
imul
add
dec
jle
call
stos
xchg
cmp
cli
dec
repz
xor
sbb
mov
lret
insb
pushf
ljmp
xchg
adc
flds
sub
cmp
cmpsb
dec
popa
lea
mov
inc
sbb
push
sub
inc
xchg
mov
fiadds
fsubrl
loope
cmp
iret
fisubs
mov
push
popf
dec
sahf
popf
ss
xor
pop
xchg
aaa
shl
sbb
mov
add
out
sbb
push
push
faddl
add
cmp
sbb
cmp
mov
add
lret
icebp
icebp
cwtl
push
add
push
jae
push
fldl
ret
shlb
test
mov
sbb
cmp
loopne
popa
and
cmp
fildl
sub
pop
push
je
stc
notb
push
jno
dec
add
out
or
pop
inc
out
fistpll
jnp
test
mov
inc
adc
cmp
jg
gs
subl
jns
dec
sahf
fsubl
add
fwait
mov
shrb
testb
jbe
xor
stc
cmc
mov
push
mov
xor
jl
dec
pop
lret
out
inc
ds
pop
and
mov
lahf
or
in
in
pop
cmpsl
pop
mov
mov
mov
add
lahf
loope
imul
std
sbb
and
pop
sbb
xchg
push
sub
andl
lea
es
loope
pusha
out
iret
in
fwait
stos
loope
shl
lret
fbld
sbb
cmp
jns
test
pop
sub
cld
inc
or
push
ret
cld
sbb
pushf
sub
pusha
adc
decl
xchg
sub
sbb
push
cmp
add
lods
cmp
loope
cmc
and
push
add
add
pop
dec
inc
in
jg
or
ljmp
inc
mov
aam
pop
adc
fdivl
popa
sbb
rcrb
loopne
cmpsb
mov
jmp
jmp
outsl
mov
fsubs
lock
jle
idivb
jae
fists
or
dec
jle
pop
mov
jne
mov
sbb
std
dec
sbb
sahf
pushf
enter
cmp
scas
sbb
mov
sbb
pop
imul
mov
loop
or
repnz
fs
mov
or
dec
shll
fstl
mov
xchg
test
and
xor
push
or
lds
inc
bound
leave
shll
cmpsl
std
sub
mov
xchg
push
clc
test
mov
push
notl
lds
inc
pop
lods
jo
add
inc
xchg
xchg
jb
jle
test
sub
add
fcomp
jl
pushf
aas
push
ret
sub
arpl
mov
adc
push
scas
icebp
out
rorl
pushf
ljmp
and
out
shr
mov
mov
mov
lcall
xor
in
xchg
ja
in
scas
cld
xchg
ds
lods
cmc
sub
decb
jb
orb
mov
pop
or
mov
or
repz
leave
jne
inc
add
push
bound
push
jge
pcmpgtb
xlat
xor
int
data16
sbb
add
xchg
jno
fistl
push
mov
int
push
mov
das
add
mov
and
jl
jg
jle
mov
cmc
inc
cmp
push
movsb
add
add
mov
push
jae
cltd
cmpsl
clc
sub
out
jae
fistps
in
pop
addr16
arpl
enter
data16
gs
jb
mov
xorl
and
testl
lcall
popf
ds
jae
pop
and
call
insl
ljmp
das
andl
test
stos
icebp
lahf
arpl
lret
jne
jb
dec
jp
add
das
xor
lahf
nop
push
jg
mov
ss
imul
or
out
or
adc
or
xchg
dec
pusha
dec
sbb
fiadds
push
pop
rorl
pop
inc
fs
xchg
mov
sub
aas
xor
adc
mov
add
or
in
icebp
inc
sbb
gs
orl
sbb
inc
outsb
daa
imul
outsl
mov
inc
mov
repnz
nop
fisttpl
testb
cmp
pop
mov
ja
add
xor
xchg
sbb
loopne
lock
xor
adc
push
mov
insl
mov
idivb
mov
mov
pop
or
mov
sbb
fcomip
lahf
push
loopne
mov
sub
xor
push
or
mov
mov
sti
xchg
in
int3
jbe
mov
pop
cli
roll
mov
or
dec
fisttpl
enter
je
xchg
cmpsb
gs
jle
pushf
in
mov
lods
mov
jle
jle
aad
enter
lcall
lods
lcall
add
jp
lcall
add
sbb
xchg
xor
out
xchg
add
jge
pop
mov
fnstenv
push
add
inc
stos
cmp
cmp
inc
popf
pop
leave
loope
dec
fcompl
mov
add
lahf
xchg
daa
test
ljmp
sub
inc
popa
push
and
or
dec
jl
mov
arpl
mov
sbb
inc
and
out
lcall
jmp
imul
push
push
mov
mov
mov
cs
int3
mov
jp
jl
aaa
jecxz
add
mov
dec
cmpsl
sbb
dec
test
sahf
adc
mov
push
mov
pop
out
jp
xchg
mov
rolb
inc
lret
pop
adc
decl
add
cltd
xchg
aad
fistps
repnz
xchg
sub
push
xchg
mov
pop
push
lret
dec
jbe
cmc
adc
arpl
jbe
jg
inc
push
sbb
pop
mov
lds
xor
outsb
test
xchg
mov
add
aaa
and
xor
int3
mov
insl
mov
push
test
popf
lods
lret
mov
add
jg
xor
push
add
in
ret
test
dec
or
jp
dec
mov
mov
and
push
sbb
jp
inc
xor
adc
jg
icebp
mov
jbe
add
mov
orb
or
test
push
lea
pop
or
call
jmp
pop
rcrl
dec
loope
xor
xchg
xchg
jno
mov
int3
dec
rol
cmp
outsl
mov
jae
and
mov
jne
lea
addr16
loope
pop
and
insl
rcrb
xchg
jo
mov
sbb
mov
push
ja
sub
cmp
repnz
jns
push
sti
sbb
sbb
das
sbb
dec
jae
inc
repnz
mov
xchg
sbb
mov
inc
mov
movsb
or
lret
sbb
jns
sub
pop
jo
jge
scas
cli
fimuls
std
into
add
cmp
inc
xor
sbb
add
popf
out
cmpsb
xchg
jne
andb
jl
test
dec
int3
or
rep
dec
cmpsb
cmp
ja
jecxz
sti
out
jae
ja
scas
dec
idivl
in
movsl
scas
rcrl
pop
xor
shrb
out
cmc
ljmp
sbb
inc
mov
insb
shll
and
push
ljmp
lods
dec
sbb
dec
es
mov
or
add
add
nop
push
inc
sbb
into
cs
outsl
or
daa
dec
add
sbb
repnz
inc
ret
or
push
int3
push
imul
aaa
test
loope
xor
or
dec
jle
jp
pop
mov
pop
clc
jle
jne
mov
cmc
sub
xchg
ret
xorl
insb
mov
or
nop
jl
rcll
pop
jle
into
sub
sbb
push
pushf
cmp
xorl
xor
dec
sub
xor
push
inc
fmull
push
pop
cmp
pop
sbb
adc
lahf
inc
or
sti
lods
pop
fisubl
sbb
mov
fidivs
jne
mov
mov
out
scas
lret
fcom
addb
mov
cltd
aam
sbb
add
and
cli
in
xchg
inc
or
push
pushf
push
out
imul
subb
sbb
outsl
loope
cmpb
dec
scas
inc
mov
adc
pop
popa
adc
aam
sub
adc
sub
sbb
aaa
push
xor
dec
pop
ficomps
dec
push
xor
into
push
lds
mov
popa
test
lret
idivb
dec
fisttpl
mov
xor
pop
ljmp
xchg
xor
dec
cmpsb
das
inc
jp
jbe
leave
jnp
push
lods
lahf
adcb
dec
and
cwtl
or
jecxz
addr16
mov
daa
cwtl
es
add
daa
fs
fdivl
loop
mov
ds
aas
mov
pop
mov
mov
rcl
shll
adc
repnz
aaa
mov
shll
adc
or
sahf
insb
mov
mov
cwtl
pop
xor
or
ljmp
inc
pop
int3
stos
dec
hlt
adc
dec
cmp
aam
test
loopne
lcall
mov
push
mov
int3
sbb
inc
fldt
cli
roll
aas
ja
gs
sti
or
frstor
scas
iret
popf
mov
push
jns
sbb
xor
aas
sub
out
inc
adc
or
sar
pop
mov
adc
and
or
insb
incl
iret
sbb
xchg
or
mov
xchg
push
sbb
and
cmpsb
or
aam
lahf
mov
push
js
movsl
scas
pop
fsubr
gs
movsb
int
sahf
decl
jp
sbb
mov
mov
jns
ja
xchg
enter
in
jmp
add
mov
sbb
sbb
add
push
push
mov
mov
cmpsb
subb
jge
cli
nop
shr
test
push
inc
or
faddl
jp
push
in
mov
xchg
or
inc
loope
jmp
pop
pop
jbe
or
lahf
add
leave
and
mov
dec
jbe
gs
inc
or
test
adc
jo
ja
mov
add
dec
add
pop
jbe
or
les
shll
sub
sub
lret
inc
ss
test
push
add
mov
mov
movsb
test
aas
faddl
nop
test
add
mov
adc
mov
xchg
lds
inc
imul
inc
movsb
push
subb
and
popl
insl
in
shrl
mov
adc
dec
shll
out
jecxz
rorl
icebp
pushf
pop
mov
dec
fwait
add
clc
mov
pusha
dec
stos
pop
sbb
and
div
mov
les
in
or
xchg
popa
mov
pusha
rep
xchg
sbb
mov
mov
scas
test
pop
mov
std
dec
mov
lret
mov
lds
add
cmp
fcomps
jecxz
push
sbb
subl
fdiv
inc
mov
mov
cli
pushf
inc
xlat
mov
or
mov
mov
pop
ljmp
fiadds
lahf
pop
in
sbb
pop
ret
dec
dec
inc
test
xchg
inc
push
add
lcall
bound
sub
test
ss
dec
cltd
dec
jne
fsubl
into
mov
xchg
push
lods
cmp
sub
mov
lods
xchg
mov
mov
xor
fs
in
icebp
add
lods
sbb
xchg
mov
mov
leave
je
lret
cmc
subl
ss
or
push
inc
sbbl
lods
push
sahf
leave
inc
cmpsl
lret
rolb
in
ret
mov
or
incb
int3
jle
push
push
add
adc
ret
cmp
push
adc
repz
nop
xor
push
push
dec
scas
push
popl
and
mov
clc
fimuls
std
adc
pop
sbb
test
lcall
test
ja
jle
es
fidivl
test
mov
adc
add
ds
sti
hlt
adc
mov
push
add
push
sub
rorb
sbb
adc
gs
xlat
and
shl
or
lcall
jae
lcall
inc
mov
insl
nop
orb
movsl
cmpsl
sub
push
jp
insb
test
sbb
ljmp
fdivrl
pop
fmull
mov
or
xchg
sub
jl
pop
lahf
xchg
cli
lds
aam
dec
mov
mov
in
push
xor
sub
push
lods
mov
push
imul
and
test
imul
inc
fwait
test
incb
subb
mov
xchg
inc
sbb
mov
inc
push
mov
int3
fadds
xchg
push
movsb
repnz
popf
mov
jg
mov
jne
daa
stos
nop
into
pop
lods
push
mov
mull
push
jns
or
fisubs
add
arpl
sbb
lcall
popa
sub
add
out
scas
or
iret
mov
test
insl
mov
testb
mov
daa
cltd
subb
shll
sbb
pop
popw
mov
add
sbb
or
jle
xchg
fs
add
leave
loope
inc
mov
loop
cmpsb
xchg
cmp
loopne
subl
push
mov
in
ret
cltd
adc
sub
mov
and
in
adc
jns
fdiv
mov
mov
mov
enter
icebp
mov
jg
push
je
arpl
addr16
mov
jl
lods
icebp
push
imul
push
dec
inc
fdivr
sahf
sbb
outsl
imul
add
xchg
ds
sub
fists
dec
xchg
aas
imul
dec
push
mov
push
flds
push
icebp
pop
std
sbb
inc
data16
cmc
lahf
nop
nopl
int
mov
inc
push
mov
xchg
mov
int3
add
insb
inc
or
out
or
cmc
sbb
or
dec
sbbl
and
inc
loope
xchg
call
lea
cwtl
out
adc
stc
pop
pop
fdivr
xchg
push
add
int3
jge
or
imul
jo
insl
add
add
ret
pop
out
fucomp
gs
fs
and
mov
push
mov
rorb
mov
clc
inc
sbb
jns
in
sub
adc
pop
stos
add
lods
mov
mov
jp
pop
sub
mov
mov
mov
jnp
push
add
jne
dec
fcompl
and
pop
mov
out
jnp
insl
cmc
and
and
mov
stc
popa
and
movsb
mov
pop
inc
cmp
testl
nop
cli
jl
mov
lret
stos
xchg
pushf
jmp
xchg
stos
sbb
pop
arpl
mov
add
hlt
cmp
fstpl
mov
mov
std
jno
sbb
pop
dec
lcall
outsb
insb
add
and
xchg
loope
mov
lret
cmpsl
ret
sub
cmp
push
outsb
dec
push
cwtl
and
out
mov
jnp
xchg
mov
jl
lods
adc
add
pop
push
jae
scas
mov
jle
imul
push
sysret
push
sti
or
imul
mov
mov
addr16
cmc
inc
pushf
sbb
enter
add
mov
fadds
movl
xorb
loopne
scas
inc
shrb
adc
add
mov
jge
sub
xchg
or
sbb
int3
out
mov
cltd
lds
add
enter
mov
xchg
push
cwtl
mov
movsl
pop
hlt
push
addr16
add
into
dec
out
sbb
sarl
push
inc
lret
ljmp
push
mov
orl
out
and
jbe
inc
mov
flds
lcall
cs
lcall
sahf
aaa
bound
push
pop
mov
mov
fmuls
jecxz
scas
divl
jl
jge
fnstsw
mov
ret
imul
add
push
sbb
arpl
lods
push
dec
jnp
nop
or
or
xorb
fucomip
inc
in
dec
xor
int
push
orl
xor
outsb
sbb
pop
inc
sbb
or
jns
jnp
or
sbb
inc
divb
les
push
test
jecxz
push
sub
testb
outsl
int3
repnz
sbb
xor
jle
inc
xchg
xor
icebp
jnp
loopne
ds
mov
push
out
pop
sbb
lods
fsubl
xchg
jbe
push
jne
jl
mov
pop
daa
sub
or
sbb
adc
dec
inc
xchg
cmp
js
mov
mov
cld
inc
stos
stc
sbb
fldl
hlt
add
dec
push
dec
or
push
mov
mov
mov
adc
sbb
or
repz
test
sub
xlat
fcomip
xor
or
cmp
mov
dec
icebp
mov
or
mov
cld
cli
aaa
jmp
or
pop
jb
pop
idiv
xorl
adc
push
jecxz
sbb
scas
sarl
xlat
iret
loopne
pop
jo
das
sub
jnp
into
push
dec
xchg
xorl
cmpsb
sahf
jbe
xchg
adc
push
lds
lea
inc
fdivl
pop
adc
popa
and
xchg
lock
mov
and
mov
cld
sub
push
inc
addb
jmp
leave
ret
or
lahf
iret
mov
aam
mov
jmp
out
leave
in
inc
lahf
rcr
cmp
lcall
inc
pop
dec
rcrl
ds
les
je
jne
jbe
jbe
sbb
mov
test
ror
mov
push
aaa
test
mov
jl
jg
or
pop
lahf
lret
test
fs
add
int
dec
outsl
sub
inc
dec
adc
sbb
fcmovnb
movhps
bound
dec
pop
sub
decb
mov
inc
icebp
insb
mov
nop
sbb
mov
cltd
push
add
xor
stos
adc
or
mov
mov
xor
es
or
int
les
bound
adc
pop
cmc
stos
sbb
and
or
mov
rclb
stos
xor
add
xchg
pmulhuw
jo
and
or
xor
push
repnz
push
xchg
pushf
jge
leave
mov
dec
gs
xlat
mov
xchg
mov
insb
pop
repnz
add
gs
test
rorb
outsl
pusha
ret
stc
mov
dec
add
mov
int
lahf
test
cmc
sbb
inc
add
push
rclb
jne
or
or
hlt
xchg
cmp
or
pop
dec
and
int
mov
aaa
pop
and
jmp
pop
in
pop
stos
gs
mov
and
xor
push
jns
int
sahf
into
lock
or
in
out
rorl
ret
inc
push
xor
movsl
sahf
lock
and
jno
mov
cld
and
test
ss
hlt
loope
inc
cli
inc
sub
dec
adc
inc
cli
fnstsw
inc
rclb
dec
ror
insb
xor
mov
aam
push
xor
fnsave
or
movsl
xchg
fadd
push
mov
push
ficomps
orb
fs
push
ja
decb
icebp
jp
adc
and
dec
adc
pop
add
pop
sbb
fildl
mov
and
popf
mov
xorl
cs
loop
out
xchg
xor
inc
or
inc
cmpsl
dec
movsl
addb
aam
or
fiaddl
pop
or
insl
lcall
pop
out
add
loopne
or
jmp
jno
cmc
negb
sub
mov
sarl
mov
bound
cld
aam
outsb
stos
sub
xor
or
mov
jge
push
jle
or
sahf
add
iret
pop
cmp
bound
popf
mov
lods
inc
arpl
idivl
repz
dec
ret
and
xchg
enter
lds
adc
pop
and
out
mov
out
sbb
or
out
sub
and
sub
inc
and
or
dec
add
orb
xchg
repz
lahf
push
jecxz
mov
out
sbb
push
pop
cltd
add
xor
cmpsl
add
jp
stos
inc
movsl
dec
dec
hlt
icebp
orb
pop
add
rcrl
sbb
rorb
ds
int3
addl
repz
pop
pop
test
jp
lea
inc
je
mov
xor
push
mov
jno
cmp
fcmovnbe
mov
mov
lods
inc
inc
pop
mov
xor
jbe
or
mov
or
jecxz
jg
into
rol
daa
lods
jno
les
int3
lret
adc
mov
lds
or
mov
cmp
popa
cli
mov
pop
push
jg
repnz
shll
nop
in
aaa
ss
out
mov
add
cmpsl
or
mov
push
mov
push
orb
pop
idivb
test
cltd
ficoms
inc
imul
popa
add
cs
fucomi
pop
aad
insl
inc
xor
mov
movsl
ja
push
enter
or
cli
insb
xor
cmc
scas
mov
jl
scas
xchg
xor
cmpsl
cmc
inc
or
ds
mov
in
pop
jecxz
rcrb
mov
fs
or
inc
jecxz
sub
shlb
hlt
push
enter
jle
sub
movsl
lcall
xchg
push
add
int
popa
sub
pop
popf
add
pop
dec
jl
sub
xor
dec
test
sbb
xchg
and
mov
popa
popa
cmp
xchg
jne
shlb
cmpl
inc
dec
add
lret
int3
xchg
cmpsl
or
sbb
test
lods
sbb
mov
push
push
adc
dec
mov
push
sub
sub
adc
icebp
test
ds
pop
sahf
mov
dec
subb
cwtl
add
fdivp
jge
pusha
data16
js
jo
add
sbb
push
cmpsb
cli
mov
mov
jne
jae
add
stc
fsubp
push
pop
or
pop
ja
inc
imul
fnstsw
sbb
mov
or
out
and
pop
sub
and
push
mov
pop
jne
fisttpll
cmc
push
pop
pop
and
mov
push
pop
inc
mov
jle
xor
adc
jmp
rcr
mov
mov
in
xchg
popa
mov
mov
repz
xchg
or
ds
dec
int
daa
adc
pushf
push
push
imul
arpl
scas
outsb
loop
lret
jge
pop
push
imul
and
setne
inc
arpl
add
and
push
daa
sbb
nop
xchg
outsl
inc
movsl
scas
adc
fstps
adc
jns
aas
dec
je
test
push
out
int
or
pop
shlb
mov
js
leave
lods
dec
and
sbb
out
ljmp
call
and
mov
xchg
jns
inc
xchg
add
aas
leave
icebp
subl
pusha
roll
cmp
ljmp
add
or
xchg
push
je
xor
push
xchg
cmc
push
dec
shlb
pushw
push
push
or
adc
xchg
xchg
or
daa
add
std
fwait
inc
fadd
mov
push
sbb
out
pop
mov
fucomp
insb
mov
inc
clc
cmc
fs
dec
or
xor
xchg
lret
mov
clc
shlb
xorb
sub
repz
mov
jno
sahf
clc
cwtl
or
aam
sbb
in
sbb
and
orb
int
jecxz
ja
inc
es
sbb
mov
dec
mov
js
dec
repnz
xchg
ret
xorl
sbb
out
inc
mov
aam
jg
mov
ret
icebp
sti
add
addr16
mov
mull
xorb
jp
jg
lods
vmptrld
cmpl
repnz
in
add
sbb
in
push
movsb
ret
jne
sub
mov
std
dec
popf
cli
mov
rol
pusha
mov
xor
out
test
popf
cmpsb
inc
clc
cmpsb
xlat
lret
adc
cwtl
stos
or
sbb
ficoml
dec
inc
sub
out
aas
mov
pop
and
jno
imul
lcall
popa
sub
mov
pusha
jg
add
cmp
in
imul
add
xchg
jb
jecxz
stos
sbb
sub
adc
mov
enter
add
in
mov
add
mov
push
stos
aas
and
aaa
sub
mov
inc
or
push
adc
mov
pushf
mov
mov
sub
es
pop
inc
mov
cmp
je
lea
in
push
add
in
jo
dec
push
fildll
fldl
sahf
or
push
leave
and
addr16
loope
movsl
cmpsl
jmp
sahf
sbb
cwtl
ss
mov
adc
xor
cmc
fcoms
jae
xchg
sub
lret
hlt
sbb
push
inc
push
in
xchg
fdivr
xchg
push
negb
mov
or
or
mov
arpl
jne
sahf
movb
imul
mov
int3
or
test
mov
adc
add
ljmp
cwtl
dec
cli
push
jecxz
out
icebp
mov
pop
jb
dec
or
daa
call
push
fisubs
and
inc
xor
xor
push
daa
or
jp
xor
stos
mov
leave
je
fidivs
or
mov
movsb
ljmp
and
sub
stc
test
push
data16
std
add
adc
add
and
mov
dec
sbb
nop
pop
insb
xor
mov
repz
fwait
mov
push
push
xorb
ret
sarl
ja
sub
dec
ljmp
stos
mov
ret
sahf
inc
mov
jg
incl
mov
pushf
idivb
test
push
mov
xchg
jne,pn
pop
cltd
fcmovbe
xchg
mov
ja
pop
fdiv
adc
jmp
xor
lods
popf
sbb
dec
mov
add
popa
mov
idiv
out
mov
mov
cld
out
imull
into
cmc
push
inc
leave
cmc
push
adc
push
push
enter
out
jp
sub
in
or
cld
iret
or
sbb
std
mov
mov
scas
js
jg
clc
lods
or
aam
faddl
lea
aas
aaa
add
cmp
inc
mov
push
dec
add
or
sub
stc
pop
cli
insb
adc
or
xor
push
jle
pop
aaa
and
inc
mov
negb
push
push
push
sub
pop
sub
movsb
pop
mov
fwait
jecxz
shll
notb
or
test
jb
lock
mov
xor
fiaddl
lret
popf
fildl
mov
sbb
or
xor
dec
mov
sbb
pop
mov
out
sub
mov
mov
mov
sub
shl
ret
pop
fildll
mov
sbbb
aaa
stos
arpl
lahf
cmp
lcall
pop
xor
mov
jge
mov
out
xor
add
fbstp
dec
bound
mov
pop
add
cmp
jnp
mov
ficoml
mov
jmp
add
add
imulb
push
jb
lea
push
loop
scas
mov
mov
jge
dec
in
lea
and
shrl
jmp
sub
shll
sbb
dec
pop
movsl
add
lock
mov
sub
push
repz
inc
adc
outsb
cmp
sub
mov
mov
lods
inc
xchg
insb
addb
imul
cmp
decl
xor
xor
add
xchg
jge
filds
sub
add
fisttpl
in
ds
sbb
es
add
pop
xor
push
jne
insl
sbb
cltd
push
pop
xacquire
pop
ja
push
mov
pop
cmc
jmp
or
pop
cld
or
and
loop
mov
test
ret
std
push
inc
addr16
mov
mov
xor
inc
repz
cmc
sbb
pop
dec
in
mov
push
repz
xor
orl
std
mov
sbb
jns
js
adcb
push
mov
and
mov
sub
sbb
xor
pop
bound
mov
add
repz
jl
add
jbe
mov
out
dec
test
pop
push
push
cmpl
push
ret
adc
rclb
aad
push
leave
xchg
sbb
push
inc
sbb
push
sub
pop
ret
xchg
or
mov
lock
pop
ja
loope
fcoml
movsl
jbe
into
push
sbb
or
mov
sbb
stos
pushf
ret
stos
iret
arpl
mov
cmp
sbbb
push
in
mov
pop
mov
inc
pusha
test
push
ret
into
add
mov
push
xchg
lock
and
mov
mov
fdiv
sub
pushf
lahf
add
insl
popa
repnz
sbb
push
sti
nop
fadds
std
insb
sub
int
icebp
and
sbbl
in
pop
in
lret
pop
adc
xor
lock
loopne
cmpsb
imul
and
test
test
sub
add
dec
andb
nop
pushf
pop
cmp
jno
adc
int
push
ss
sub
popa
roll
cli
mov
xchg
add
push
in
faddl
dec
and
jle
subb
adc
push
insl
nop
add
cmp
mov
dec
xor
cltd
fwait
inc
orb
mov
xchg
sbb
icebp
mov
lods
pushf
or
cli
mov
imul
adc
mov
push
pop
sbb
cld
insb
popf
inc
or
xchg
or
add
fs
sbb
jle
daa
jns
sbb
int
rep
hlt
lock
push
fdivs
mov
push
popa
inc
jno
stos
fwait
iret
lds
sbb
and
xor
roll
test
ljmp
push
inc
pushf
jecxz
xchg
enter
or
sti
int3
inc
sub
pop
enter
gs
sarl
iret
cmp
inc
dec
push
jmp
sbb
leave
push
jmp
lock
mov
xor
mov
sub
sbb
jo
adc
pop
lret
add
jbe
sbb
imulb
mov
cwtl
xchg
mov
loop
fwait
addl
jnp
cmp
inc
cmp
xor
popa
add
xchg
out
js
fnstcw
inc
or
pop
inc
dec
xchg
fwait
or
dec
mov
imul
adc
stos
lret
jl
orb
sub
mov
jge
sbb
and
pop
or
push
push
or
cmp
jns
sbb
mov
inc
fidivl
rcl
xlat
sbb
std
xchg
mov
sbb
jge
inc
into
jnp
lods
pushf
insl
pop
sub
jge
in
jmp
nop
daa
fiadds
add
dec
xchg
add
xlat
lods
popa
scas
push
rcrb
int3
roll
cwtl
ja
add
test
rorb
int
mov
add
mov
shlb
dec
shl
leave
jne
cmpsl
pushf
xor
popf
stc
jle
push
gs
or
add
mov
xchg
sti
mov
enter
roll
pop
sbb
pop
test
pop
fimuls
mov
ljmp
push
or
or
ret
daa
out
jnp
mov
xchg
pop
sbb
or
xor
jno
inc
adc
mov
cmc
imulb
xchg
xor
cli
and
nop
sub
add
scas
pop
insb
push
push
arpl
out
push
fdivrl
push
ja
xor
dec
notb
notl
xchg
pop
xor
fidivrl
push
jle
ficomps
inc
mov
inc
scas
push
rolb
cmpb
pop
sahf
push
cmpsl
push
mov
xchg
and
mov
aaa
icebp
pop
into
loope
gs
inc
sarb
push
cmp
xchg
addr16
and
add
jmp
push
cmp
sbb
cmpsb
mov
jp
or
stos
lret
sahf
mov
clc
sarb
lock
xor
fldt
scas
rorl
or
aad
sbb
pop
jecxz
adc
das
fsubs
pop
mov
push
push
dec
dec
mov
cmp
mul
mov
or
push
mov
sub
sub
gs
movsb
xchg
mov
mov
sub
dec
je
and
pop
add
test
adc
and
add
pushf
addr16
cli
orb
and
rorb
xchg
dec
xchg
adc
fisubl
mov
ret
jecxz
ret
push
jle
fistps
jmp
push
ficompl
ror
lea
adc
add
jns
push
xlat
push
cli
xchg
push
cmp
inc
or
in
mov
sub
sbb
and
adcl
pop
loope
sahf
rorb
rorb
xor
fdivrp
xchg
xlat
jb
int3
gs
outsb
sar
rclb
jno
pop
fwait
push
int3
sub
xlat
push
sub
sahf
add
lds
daa
sarl
jl
pop
cwtl
jecxz
inc
stos
sbb
aam
add
xchg
push
mov
lcall
bound
or
loopne
pop
cwtl
xor
jl
jle
jb
pushw
shlb
rcll
test
and
xchg
jne
jno
movsb
jbe
cmc
add
push
aad
int3
xor
jno
dec
subl
mov
mov
mov
dec
je
and
dec
xchg
jo
ret
mov
jmp
mov
into
jge
cltd
and
cwtl
jb
inc
pop
sub
mov
test
sahf
testb
clc
dec
lcall
and
leave
xor
jecxz
arpl
stos
push
popf
cmp
push
push
mov
xchg
addl
jae
xchg
sbb
cmp
mov
addl
pusha
shrb
push
mov
jle
sbb
test
push
rcrl
lahf
sbb
int3
int
cmp
sub
sub
push
mov
sti
test
or
imul
xor
adcl
pop
sbb
data16
jmp
or
push
data16
inc
mov
mov
aas
jge
imul
mov
cmpsl
xor
cmpsb
fwait
xchg
or
adc
pop
sub
addr16
push
sahf
cmp
and
xchg
movsl
mov
data16
mov
fdivrl
add
push
mov
jge
add
mov
fsubrl
add
xchg
gs
jp
cld
push
cltd
xor
dec
jbe
xlat
pop
mov
stos
int3
clc
jns
mov
push
push
pushf
mov
popa
popf
loopne
mov
sbb
kxorb
sbb
add
rolb
xor
mov
or
or
xchg
push
xor
pop
cmpsb
push
mov
dec
test
inc
add
cmp
lock
pop
pushf
sbb
pusha
sub
sahf
andl
cltd
int3
xchg
enter
push
push
out
sbb
inc
dec
orl
mov
fsin
int3
outsb
inc
test
push
push
andl
cmp
mov
mov
std
pushf
cmp
test
pop
adc
rorb
xchg
sbb
mov
ja
adc
nop
ljmp
adc
mov
test
pop
inc
sbbl
pop
out
aad
inc
sbb
cmpsb
mov
add
imul
mov
sub
popa
sbb
xchg
dec
aad
push
lods
inc
or
sbb
inc
or
sbb
adc
dec
pop
popf
gs
jne
sti
dec
mov
dec
cmp
mov
sbb
ss
and
ljmp
dec
aad
push
pop
sub
cld
lcall
mov
scas
test
out
jl
lock
and
mov
push
add
lahf
cmp
bound
mov
popf
out
add
push
lea
adc
sti
fs
or
add
sub
in
cmp
loop
test
or
adc
jecxz
pushf
out
xor
aam
jp
push
add
inc
rcrl
cmpsl
add
mov
sbb
fwait
adc
cwtl
in
push
rcrl
pop
jle
mov
mov
xchg
dec
arpl
ljmp
and
ret
cltd
outsb
dec
cmc
push
movd
push
jnp
jmp
add
xor
sbb
rcl
lea
jge
adc
fisubrl
in
jg
mov
addb
xlat
sub
sub
aad
sub
lcall
jne
sbb
jle
fmul
xor
mov
stos
mov
and
out
arpl
adc
movl
push
push
in
pushf
sbb
jne
adc
push
jge
cmpsb
mov
or
es
mov
test
ror
lds
xor
js
out
inc
and
out
ja
pop
lret
inc
xor
sbb
push
mov
dec
dec
pop
in
or
mov
sbb
imul
dec
ljmp
dec
repz
jno
pop
mov
adc
lods
mov
in
fsubl
inc
mov
gs
or
out
test
cmp
xchg
out
xor
popa
xchg
scas
push
repz
mov
push
xlat
fsub
aaa
gs
aaa
je
sbb
ljmp
iret
loopne
lret
and
fstp
test
shr
lods
mov
mov
pushf
js
push
popf
or
push
ret
out
outsb
addr16
mov
cmp
xchg
xchg
sbb
cltd
int3
clc
xchg
push
or
mov
cmp
push
mov
stos
xorb
stos
xchg
add
inc
ret
popa
sub
push
pushl
mov
popa
lods
fdivrl
sbb
inc
jb
push
xor
orb
mov
xchg
sub
push
inc
adc
and
dec
dec
icebp
subb
jnp
hlt
sub
pop
fisttps
inc
or
mov
inc
lods
into
in
mov
shl
xchg
inc
mov
lea
into
icebp
dec
inc
cmpsb
pop
out
pop
cmpl
jno
inc
push
and
adc
sti
or
dec
pop
adc
mov
cwtl
test
mov
lock
and
xor
in
push
insb
dec
jne
cmp
and
sbb
mov
or
mov
lds
adcl
andl
shlb
lcall
hlt
mov
add
inc
pop
jp
in
pop
les
faddl
icebp
fsincos
test
adc
adc
fnstcw
gs
out
xchg
lds
lret
sub
ljmp
pushf
cwtl
or
inc
mov
loope
pop
aas
jns
xor
shr
mov
dec
ljmp
jne
jne
inc
mov
sbb
inc
insb
adc
mov
mov
lock
pop
jno
jl
jle
fucomi
mov
mov
cli
int3
cmp
subb
cltd
out
les
aad
js
mov
dec
test
mov
pop
movsl
xchg
nop
rorl
outsb
scas
and
jmp
sub
push
push
inc
jmp
loopne
insb
lret
sbb
push
cltd
out
dec
pop
test
mov
sbb
xchg
push
lret
orl
imul
mov
jl
mov
daa
cmp
sbb
and
add
movsl
xor
or
jecxz
movsl
add
std
xchg
inc
lret
ret
and
lret
sub
jo
sub
jbe
pop
imul
rcrb
xchg
xchg
mov
sbb
and
inc
lock
shll
mulb
inc
jmp
sahf
pop
ss
popa
pop
sbb
or
push
clc
mov
mov
push
pop
ret
pop
add
push
sbb
sub
sbb
sbb
mov
mov
into
int3
movsb
pop
mov
out
pop
jbe
addr16
fmull
in
stos
test
mov
rorb
testb
js
addr16
and
mov
je
jmp
sub
pop
gs
popa
pop
scas
stc
mov
int
jne
cmp
push
pop
into
pop
xor
inc
cmpsb
and
dec
sub
sbb
mov
aas
icebp
push
es
push
cmpl
icebp
test
jecxz
fmull
inc
sti
and
mov
xor
test
sbb
loopne
pop
adc
in
adc
sbbb
jl
xor
ss
mov
jnp
inc
out
leave
and
shll
or
jmp
sbb
xchg
pop
inc
out
and
popf
xlat
dec
cmpsb
adc
iret
in
dec
xchg
daa
cwtl
jp
out
ss
pop
leave
mov
stos
das
mov
dec
jge
fmull
mov
insb
test
or
push
add
sub
push
orb
jecxz
mov
jge
inc
scas
inc
inc
ret
mov
scas
jne
push
flds
adc
pop
push
sbb
or
ds
inc
out
loop
pop
jge
inc
int
sbbb
lock
cmp
sbbl
pop
enter
ret
stc
cli
jg
cmpsb
dec
jp
mov
or
inc
test
add
inc
cli
pop
test
stc
dec
fstl
add
lret
mov
dec
lret
lcall
and
es
in
add
and
adc
cs
jmp
andb
jnp
call
shlb
dec
sub
in
pop
dec
incb
pushf
ss
rclb
into
mov
sbb
cltd
lods
mov
jne
pop
adc
imul
mov
adc
xchg
adc
pushf
fimuls
mov
or
mov
jns
icebp
xlat
int
pop
insl
ficomps
push
cmp
cmp
icebp
pop
jnp
ds
loope
flds
addr16
cmc
sbb
push
add
leave
mov
mov
enter
push
cwtl
jecxz
xchg
inc
or
out
ljmp
scas
inc
push
and
jne
hlt
pop
jae
adcb
iret
imull
jno
arpl
sahf
cmc
push
or
xor
mov
jge
mov
fcomps
or
aad
xchg
inc
fs
les
dec
test
in
in
inc
or
adc
imul
push
push
sahf
filds
inc
ljmp
repnz
jnp
fistpll
push
mov
sahf
push
sbb
sub
data16
daa
dec
jo
jae
mov
xchg
jno
push
sbb
jmp
or
inc
xor
sub
sbb
push
dec
shlb
push
scas
dec
jae
push
cli
push
mov
pop
scas
sub
jg
mov
test
xor
pusha
imul
sbb
cmc
loope
inc
adc
in
sub
or
push
aas
sub
cmp
cmc
movsb
int3
notb
fmull
add
pop
xchg
bnd
mov
ficoms
add
dec
daa
and
push
add
std
push
lea
out
jbe
add
gs
inc
cmp
pop
stos
test
jl
les
and
mov
cmp
shlb
fisubrs
popf
out
inc
mov
sbb
push
push
movl
add
aam
dec
xor
mov
xor
fsubrp
sbb
adc
add
mov
jne
nop
add
dec
outsl
mov
repz
shll
cmc
sbb
add
movsl
ja
xchg
out
sub
je
lock
mov
sub
adc
lea
jl
aad
fisubs
roll
cmp
cwtl
jp
pop
jae
pop
lods
mov
daa
mov
ret
jne
xchg
adc
push
fisubs
push
lret
ja
fimuls
push
sub
dec
in
xchg
or
jle
jp
adc
dec
xchg
imul
addl
xchg
cmp
mov
shll
adc
pop
cmpsl
stos
sbb
stos
dec
add
movsb
movsl
insb
push
pushf
push
add
pop
mov
xchg
inc
andl
mov
pop
mov
xchg
addr16
mov
fmulp
lods
cli
fisubrl
jne
sti
xchg
inc
mov
pushf
add
push
shll
push
call
pushf
pusha
lret
sub
jge
mov
stos
adc
cmc
and
popa
lahf
es
xor
lahf
out
inc
or
pop
mov
mov
and
or
xchg
ja
je
or
pop
cmp
ret
stc
test
fs
xchg
mov
repz
mov
or
push
sub
lea
sbb
lret
sbb
out
xor
loopne
call
ret
sub
jne
mov
sti
das
pop
push
jnp
pusha
push
add
mov
cmp
xor
mov
cmp
ficomps
inc
sbb
xor
cltd
div
push
push
or
mov
jecxz
pop
add
bound
orb
mov
sbb
or
rcr
mov
lret
outsb
xchg
mov
js
mov
in
sbb
pop
pop
push
insb
divb
add
sbb
sbb
loop
add
mov
js
lds
jb
and
mov
jg
aaa
sbb
pop
add
add
popf
cmpsl
outsb
or
inc
ret
xchg
cwtl
stos
outsl
stos
scas
std
inc
fcoms
push
or
ljmp
inc
sub
repz
addl
pop
pushf
sbb
sbbl
cs
int
push
aad
je
int3
adc
std
mov
sbb
sahf
add
xor
push
mov
sub
sub
popf
movsl
jp
mov
in
decb
rcl
lcall
test
or
pop
rcrb
add
push
dec
mov
sbb
out
lahf
hlt
cmp
xchg
popf
mov
inc
push
push
fistps
push
repnz
sbb
mov
pop
cli
push
mov
cwtl
jecxz
dec
enter
xor
lds
mov
dec
std
dec
stos
or
test
arpl
cmpsl
jno
push
push
xor
mov
inc
push
push
call
aam
pop
data16
sub
sub
mov
xchg
out
test
std
mov
idivb
dec
sub
movsb
mov
adc
mov
sbbl
dec
int
out
inc
jle
rcll
sbb
out
cltd
pop
in
mov
lcall
xchg
lcall
insl
in
out
and
dec
jmp
std
subl
dec
pop
lods
test
sbb
data16
aas
dec
jp
dec
jmp
ret
or
cmp
add
pushf
sbb
jle
add
mov
int
data16
push
add
movsl
int
or
adc
pop
inc
jg
test
inc
add
mov
add
aaa
cli
bound
decl
add
sbb
push
mov
aam
xor
icebp
stos
ret
dec
push
push
stos
test
ja
mov
lds
ljmp
int3
leave
mov
out
nop
xor
fidivl
cmp
test
push
popf
mov
sub
xor
std
leave
ret
pop
sahf
dec
dec
ljmp
and
dec
cmp
jp
in
push
add
aas
int
mov
jg
sub
cmc
adc
fisubrl
push
xor
loope
and
adc
sbb
inc
popf
jmp
push
mov
cmp
xorl
cmp
test
mov
mov
in
sahf
and
xchg
sub
int
fst
push
and
nop
aas
mov
xchg
shlb
push
and
mov
in
pop
popa
pop
jo
ljmp
rcrl
sarl
dec
pop
xchg
lret
push
pop
pop
rcr
stos
fxch
pop
pushf
push
mull
daa
and
pop
or
dec
jl
cld
mov
scas
inc
inc
adc
roll
and
and
bound
std
outsb
or
pop
lret
test
fcmovbe
lahf
outsb
or
cld
mov
mov
adc
xlat
repz
lret
lret
test
jle
or
stos
fcomps
mov
loope
pop
jo,pt
insb
mov
lea
lods
xor
jnp
gs
jmp
out
fadds
stos
mov
push
dec
in
sbb
inc
movsb
gs
ret
test
jns
xor
fistl
jl
add
adc
or
shlb
mov
push
daa
das
pop
rorl
je
je
jg
daa
sub
push
xor
test
out
fldenv
jne
outsb
fiaddl
out
ficoml
loopne
out
push
push
in
decl
add
mov
xchg
push
inc
data16
in
in
xchg
cmpsb
addb
sub
mov
jo
pop
inc
leave
dec
pusha
or
stos
mov
inc
in
pop
mov
jle
fsubs
jns
mov
dec
test
sbb
mov
imul
dec
out
or
out
sub
inc
push
and
movl
pop
fstpl
outsb
mov
popa
push
add
scas
hlt
push
xchg
jo
sbb
sub
mov
sahf
push
imul
mov
inc
xchg
fcmovnu
pushf
pop
stos
dec
sti
jge
loopne
add
sub
nop
mov
dec
leave
stos
orb
xorl
sbb
dec
jns
repnz
jmp
rcll
lret
mov
pop
jo
fwait
push
push
mov
mov
push
dec
fwait
sahf
add
xor
stos
popa
push
or
inc
and
mov
jle
popa
mov
cmp
mov
lahf
aad
or
and
cmp
xor
lcall
push
mov
lret
sarb
push
push
in
jbe
fwait
mov
ret
jle
sub
out
and
cmpsl
movsb
adc
push
sbb
icebp
jle
mov
mov
clc
or
je
sti
lahf
rorb
and
jae
mov
mov
test
out
icebp
push
cmc
fbstp
jbe
stos
test
mov
rol
jb
test
push
xchg
movsb
sbb
dec
imul
jb
mov
aas
out
inc
les
mov
icebp
push
ljmp
cltd
sbb
xchg
popf
lret
sbb
imul
pop
inc
scas
arpl
adc
mov
sbb
pop
mov
jb
fsubl
xor
or
imul
ljmp
jne
mov
mov
mov
jmp
mov
fcomip
xor
adc
sbb
sti
xchg
mov
repnz
pop
movsb
or
sbb
aas
and
or
xor
jno
clc
aad
xchg
mov
push
nop
outsl
pop
xchg
push
leave
push
adc
push
and
mov
pop
ldmxcsr
cmpb
outsw
fisttps
push
jno
inc
adc
lds
pusha
popf
xchg
sahf
std
imul
loopne
pop
or
xor
mov
dec
fldenv
les
cmp
nop
enter
lret
inc
imul
imul
pop
cmp
push
scas
cmpsl
cmp
xor
sbb
sub
idiv
push
jb
jns
andb
test
mov
xor
add
stc
aaa
inc
into
imul
ret
and
inc
bound
push
sub
arpl
cmc
out
inc
and
nop
sbbb
jmp
lods
mov
mov
mov
sti
pusha
push
pop
xor
push
imul
loopne
xchg
or
aaa
dec
sbb
or
xor
nop
in
rorb
xchg
dec
data16
sbb
imul
mov
shll
mov
in
pushw
mov
sti
mov
xchg
sub
xor
pop
pop
mov
mov
jmp
mov
icebp
fiaddl
dec
jmp
add
leave
ret
mov
ss
push
adc
cltd
mov
mov
pushf
push
or
push
pop
xor
xlat
stc
test
push
lods
lds
iret
xchg
sbb
aam
sub
push
loope
xor
pop
xchg
ljmp
jno
xchg
lds
ss
or
cmpsb
inc
and
xor
mov
jbe
ficoml
js
mov
sub
test
pop
pop
js
insb
and
lods
int3
nop
sbb
fcom
adc
pushf
icebp
add
dec
mov
adc
mov
sbb
in
mov
fsubl
mov
arpl
out
bound
fisubrl
movsb
out
cmp
xchg
xchg
xchg
scas
mov
or
aam
stos
ja
push
add
sbb
out
xchg
sub
in
inc
sub
xchg
jg
sub
or
xor
aas
outsl
mov
cmp
dec
rcrl
sbb
lock
mov
aaa
push
pop
pop
mov
arpl
inc
pushf
jl
sbb
push
cli
xchg
jbe
and
add
test
mov
es
mov
sbbb
dec
aaa
cmp
cmp
test
lcall
int
fstl
xchg
movsb
sbb
add
sub
fmul
sbb
sbbl
data16
test
test
push
lds
lock
sub
pop
dec
jae
xor
and
mov
cmp
ljmp
scas
push
mov
inc
outsl
sub
dec
das
adc
sub
cmovnp
cmp
mov
test
pop
pop
out
movsl
cltd
push
insl
hlt
add
insl
sub
cmp
or
lods
ret
shrl
mov
sahf
cltd
cld
lcall
cmp
sub
inc
mov
sbb
sbbb
add
daa
sub
sbb
xchg
cltd
adc
mov
lret
add
nop
adc
out
or
dec
sbb
cmp
lock
or
adc
xchg
pop
test
xchg
pop
sbb
arpl
rcr
bound
mov
loopne
in
loopne
icebp
cmpl
xor
arpl
daa
dec
mov
sub
mov
cmpsl
and
std
and
mulb
add
dec
jp
sti
leave
or
hlt
lahf
mov
push
sbb
test
lahf
ss
or
mov
call
inc
or
inc
daa
xor
fildll
jmp
jne
paddusb
xchg
or
js
test
icebp
loopne
pop
bnd
psubusb
pop
aas
mov
adc
push
mov
pop
sbb
jne
push
or
xor
ljmp
push
in
push
xchg
enter
adc
in
and
mov
ds
pop
xchg
mov
push
insb
cmp
pop
inc
shll
mov
sbb
lahf
xor
aas
shl
adc
adc
fiaddl
ss
mov
orl
jl
xchg
jb
mov
sub
mov
sub
push
sbb
sti
inc
sbb
lods
stc
sub
test
or
push
cmp
xchg
add
jg
inc
pop
jae
xchg
add
dec
push
pop
jge,pn
or
inc
jp
imul
or
mov
adc
std
gs
xor
push
mov
inc
rcl
dec
addb
push
bound
or
inc
stc
or
andl
or
cwtl
mov
sub
into
sarb
push
jno
sub
sbb
fnstenv
push
ljmp
mov
ret
push
push
aam
stos
inc
loop
mov
pop
loopne
push
mov
pop
jge
xchg
fnstsw
inc
or
les
jnp
add
jg
cmc
sbb
daa
push
sbb
lret
jmp
clc
mov
lods
jmp
lret
movsb
fwait
out
push
add
fisubl
mov
adc
pushf
push
push
push
sub
jbe
dec
out
cld
loop
in
mov
cmpsl
fs
rolb
cwtl
shr
adc
and
test
mov
inc
mov
dec
sub
popa
dec
sbb
cmpsl
pusha
dec
jl
push
cmp
inc
push
movb
das
fucomp
ljmp
sub
jne
pushf
mov
mov
dec
push
xchg
popf
bound
mov
repnz
pop
inc
xchg
jecxz
dec
mov
mov
out
jp
ss
add
cmp
in
and
xchg
mov
subb
loopne
and
loope
or
pop
out
xorb
or
push
cmp
mov
pop
jge
std
xchg
sub
leave
and
sub
mov
cmp
lds
jne
sub
test
js
push
add
pop
stc
subl
adcb
add
pop
sahf
ret
ja
lret
pusha
add
shlb
daa
lock
or
fwait
cld
sbb
xchg
out
int3
cmp
in
push
sub
inc
call
xor
repnz
push
repnz
je
stos
or
fwait
pop
movsb
insl
dec
out
movhps
sbb
xor
xchg
mov
push
call
lret
sbb
inc
popf
xor
jmp
js
test
dec
push
cmp
cmpsl
mov
push
clc
imul
std
cmpl
pop
jno
mov
xchg
repz
scas
into
mov
lods
push
inc
dec
dec
test
push
lret
xchg
sbb
or
mov
insb
dec
pop
xor
push
sahf
ja
insl
sbb
arpl
mov
lcall
jl
mov
jp
adc
daa
sahf
inc
imul
pop
add
test
dec
jno
data16
dec
repz
ret
jbe
xchg
or
jle
aam
out
pop
add
movsb
ja
ret
sbbl
jno
bound
cmp
inc
and
fadd
divb
and
js
adc
int3
push
add
sbb
dec
test
ret
xchg
mov
inc
imull
mov
mov
adc
pop
fyl2x
pop
testb
push
pop
repnz
lea
xchg
pop
das
push
push
or
dec
sbb
pop
das
int3
inc
xchg
movsl
jne
les
xchg
lret
or
push
fistpl
jmp
mov
movsl
pop
insl
sub
mov
sahf
sub
ret
push
sbb
jp
lock
jno
gs
jmp
sub
lock
stc
stc
popa
xchg
in
push
adc
or
inc
roll
imul
imul
in
xor
cld
jno
scas
xchg
add
mov
mov
xchg
jnp
add
in
pop
and
enter
jmp
insl
sbb
add
test
jecxz
xorl
dec
cmpsb
push
pop
dec
mov
mov
and
mov
cmp
jp
xchg
popa
push
mov
push
xchg
mov
aad
pop
fs
in
add
jmp
popa
sbb
xchg
dec
push
ficompl
shll
cmp
or
inc
scas
icebp
jns
push
pop
mov
jne
ret
mov
lret
pop
jle
imul
je
inc
add
xlat
jnp
mov
or
inc
dec
sub
push
lods
pusha
and
push
rorb
lahf
arpl
movsb
dec
sub
int3
aaa
cld
mov
call
sub
pushf
test
repnz
mov
lret
cmpl
jbe
movsl
inc
add
out
insb
std
jge
sbb
xor
mov
or
pushf
jb
int
and
daa
aaa
inc
lods
js
xchg
jns
lea
call
mov
ret
gs
push
in
rcl
fsubrs
daa
and
addb
xchg
xchg
dec
out
sbb
pop
outsb
stos
ds
pop
push
mov
jecxz
ja
adc
popf
pop
mov
inc
dec
and
shll
call
xchg
test
inc
pop
cmp
or
or
adc
pop
nop
mov
inc
sahf
lds
mov
iret
lea
loop
in
dec
je
imul
inc
or
andl
aad
mov
sbbl
hlt
push
aaa
pop
inc
std
jp
imul
pop
sub
fidivl
mov
push
add
adc
push
mov
jae
pop
hlt
ds
inc
mov
xor
jb
into
push
sbb
leave
pop
punpckhdq
inc
and
add
sbb
pop
lcall
sti
xchg
sti
cmpsl
push
lea
clc
subl
cmp
xchg
push
xchg
popf
sbb
lcall
push
sbb
addr16
and
jle
into
shll
ret
rolb
les
ret
pop
lds
stos
scas
jne
or
xchg
push
or
fstps
es
push
std
dec
rcll
in
pop
fisubs
pop
dec
cmp
jmp
outsb
mov
pop
repnz
loope
test
ret
lret
pop
aas
rcrl
or
mov
add
mov
or
jl
stc
test
std
pop
ret
or
test
mov
adc
push
xor
jae
popf
inc
in
cmpsb
inc
aaa
mov
add
dec
mov
cwtl
jp
dec
xchg
jmp
inc
inc
xor
decl
or
jmp
cmp
sbb
das
lods
lret
jge
rcr
lds
aas
aaa
sub
push
int
orl
insb
or
out
fdivs
mov
mov
cmpsl
xor
adc
nop
xor
cmp
jp
add
xor
inc
inc
js
pop
pop
ja
addr16
mov
mov
sbb
cmp
push
inc
dec
rol
jge
or
testl
sub
cmc
and
mov
jle
mov
pop
wbinvd
pusha
std
sarb
mov
nop
pusha
insl
leave
sbb
mov
repnz
jb
iret
test
xchg
inc
push
sbb
add
rorb
cmp
push
sub
jbe
dec
sahf
jae
sub
ljmp
sti
pop
scas
gs
out
push
fstpt
fcomip
push
jmp
movsb
test
jg
inc
add
dec
xchg
outsb
mov
push
imul
xor
mov
insb
dec
repz
ss
and
sti
jl
cmc
push
lods
push
mov
fisttpll
dec
adc
sub
inc
xchg
loope
inc
insl
das
pop
loopne
sub
jbe
lahf
mov
js
test
insb
mov
imul
addr16
xchg
mov
sub
xor
inc
sahf
pop
dec
lcall
sahf
jbe
bound
adc
add
sbb
dec
pusha
sahf
or
pop
push
scas
xor
popf
rep
int
mov
sbb
icebp
pop
sub
lret
loop
popa
jne
xchg
rcrb
mov
xchg
dec
mov
sbb
adc
jne
ja
jg
les
add
call
sbb
dec
lods
dec
and
inc
push
inc
cmp
div
or
cmc
mov
push
cwtl
and
xchg
dec
pop
mov
sarl
fisubrl
jl
sub
in
cmp
xchg
dec
arpl
or
loop
fstps
out
cmp
inc
pop
bound
jae
shl
sahf
cmpsl
bound
mov
sbb
adcb
xchg
inc
xchg
mov
sbb
dec
scas
jmp
popf
push
pop
andl
leave
push
pop
je
cmpsb
dec
cmp
addr16
pop
adc
mov
sbb
pop
sti
pop
fadd
leave
jnp
inc
fs
mov
imul
jbe
sbb
pop
sbb
push
jge
mov
in
mov
cli
sbb
sbb
leave
je
fsubr
jmp
xor
sbb
orb
add
idiv
jnp
insl
negb
stos
sub
repnz
mov
addb
fdivs
jnp
adc
sbb
stc
addr16
xor
pop
scas
cmpsl
mov
loopne
or
jmp
loope
sbb
test
adc
inc
pop
xor
jae
nop
fistl
push
dec
xor
pop
adc
nop
or
xchg
xor
ja
mov
sarb
sub
repnz
fs
mov
dec
mov
inc
inc
jg
xor
xor
addb
and
aam
ret
gs
js
mov
mov
popa
cltd
lock
and
mov
scas
mov
imul
adc
or
mov
mulb
enter
push
add
stc
loop
mov
jge
pusha
sbb
xor
cli
ret
fwait
sbb
fidivl
stos
fisubl
adc
mov
add
loopne
out
cmp
loope
lea
lret
inc
mov
pop
xchg
xchg
add
sub
ret
sbb
jb
popf
std
ficompl
repz
mov
jb
stos
adc
out
inc
push
pop
mov
sub
fdivl
leave
xchg
lods
jge
pusha
add
cmpsb
aaa
sbb
push
roll
iret
jno
fistps
and
push
addr16
stc
and
outsl
addb
test
cmpsl
aaa
ja
or
xchg
test
mov
mov
or
shl
pop
ds
or
push
in
aas
into
leave
shl
dec
out
sub
push
add
inc
xchg
and
addb
fmuls
jl
std
jbe
fdecstp
xchg
lods
adc
clc
outsb
jge
cmp
xchg
sahf
push
ljmp
adc
pushf
mov
scas
mov
pop
push
nop
push
rcrb
sub
dec
cmpsb
std
rorl
daa
popf
xor
sub
loope
jg
iret
das
call
jbe
pop
jae
idiv
mov
stos
pusha
jb
xchg
mov
jb
dec
fdivl
repz
loopne
scas
sbb
and
daa
push
and
ret
mov
outsb
repnz
in
mov
repz
pop
inc
rol
pop
jge
xor
jae
sbb
lods
jle
jge
pop
xchg
test
sub
cmc
pop
sub
sbb
mov
lds
fwait
imul
aad
ret
mov
lret
dec
test
add
push
cmpl
jae
in
sti
sub
cmpsl
out
cmpsl
lods
insb
fwait
sbb
lret
adc
lret
push
stos
lods
mov
popa
mov
js
popf
pop
imul
iret
or
pop
jl
xlat
ret
dec
pushf
in
push
adc
test
adc
or
popfw
push
in
pop
insb
subb
movsl
xor
inc
pop
test
xor
lret
addr16
ret
adc
xor
adc
mov
imul
adc
daa
push
ret
call
loop
jb
popf
pushf
or
mov
push
in
push
cmovo
mov
adc
bound
lcall
push
xchg
fdivrl
or
cmc
lcall
lock
test
lods
pop
stos
mov
lcall
mov
mov
jnp
js
pop
mov
push
in
push
rolb
rorl
inc
adc
std
lret
mov
testb
pusha
pop
pop
add
adc
inc
stos
mov
out
das
inc
or
fimuls
mov
mov
sbb
or
sahf
lret
adc
jle
push
addb
mov
fbstp
jae
add
pop
sbb
xor
add
pop
push
sahf
sub
jno
jp
cli
std
jge
scas
out
adc
int
sub
out
xor
insb
lock
pop
push
xchg
test
popa
push
dec
pop
jp
push
out
mov
into
push
mov
dec
fucomp
out
fwait
sub
js
push
jne
inc
mov
adc
clc
jmp
inc
std
adc
cmp
jle
divb
xchg
daa
push
popf
fdivl
xorl
dec
aad
add
cmp
jge
add
mov
test
mov
sbb
notl
push
roll
rorl
pop
or
xchg
in
scas
popf
xchg
sbb
lret
push
mov
imul
pushl
mov
out
or
lock
cmp
push
push
rcrl
int
or
out
test
in
lock
lods
jo
jne
cmp
shlb
sbbl
sub
push
mov
aas
les
adc
test
mov
xor
pop
daa
mov
sahf
push
dec
aaa
xchg
hlt
mov
ljmp
outsb
cltd
jle
sub
sti
in
inc
xorb
push
mov
test
push
addr16
int3
xchg
mov
jmp
push
repz
negb
pop
into
push
pop
pop
mov
dec
xchg
sub
out
pop
ss
and
push
in
jle
movsl
adc
rorl
and
cltd
popl
int3
pop
stos
mov
and
dec
mov
or
cmpsl
repnz
pop
test
xchg
adc
pusha
test
repnz
sub
outsl
fcomip
or
mov
lds
dec
sti
cwtl
stos
daa
lret
mov
rcl
push
out
inc
fidivrs
leave
hlt
inc
fdivr
lods
lds
repnz
arpl
popf
pop
push
insl
lret
loope
push
mov
push
adc
int3
sub
mov
jp
inc
inc
push
gs
sub
pop
dec
movsb
and
leave
mov
xor
push
jo
ja
pop
xchg
mov
adc
mov
lret
lods
insb
xchg
fstpl
stos
or
mov
mov
sahf
sbb
jecxz
sbb
loopne
jne
push
inc
and
jae
push
jg
dec
addr16
sbb
pop
leave
aaa
push
jle
adc
stc
add
or
add
hlt
movsb
leave
gs
cli
mov
inc
adcl
sub
pop
xchg
fists
inc
adc
sbbb
pop
into
cmc
mov
dec
adc
insb
xorb
out
int
or
mov
jmpw
push
sbb
xor
cmpl
or
dec
mov
xor
jmp
leave
inc
fiadds
lea
mov
jecxz
mov
loopne
or
cmp
sub
test
inc
pop
mov
cmp
sub
lahf
sbbl
dec
or
fisubl
sbb
out
pop
dec
inc
mov
in
ret
push
sbb
xchg
addb
xchg
lods
adc
sub
mov
push
pop
aas
jge
jne
and
and
mov
sahf
xor
rorb
sub
dec
dec
sub
jnp
pop
xor
sbb
or
lret
leave
bound
test
inc
stos
cli
arpl
cmp
mov
int3
sahf
push
add
and
jae
dec
int3
mov
shlb
add
fwait
dec
stos
rcrl
imul
movsl
in
fs
inc
push
inc
cmpsl
or
mov
data16
aam
or
mov
dec
pusha
outsb
andl
mov
dec
in
sbbw
das
add
sbb
jmp
or
shlb
add
mov
and
in
pusha
loop
pop
inc
mov
lods
mov
cmp
push
sub
push
xchg
xor
mov
mov
and
or
sbb
add
gs
mov
cmp
int
jne
push
outsl
mov
adc
adc
in
push
shr
sbb
mov
stos
out
sub
and
test
inc
inc
add
mull
mov
and
dec
pop
in
movsb
push
dec
jge
or
lds
adc
sbb
orb
cmp
push
and
inc
mov
push
push
addb
mov
addl
push
add
in
outsb
mov
sub
inc
add
or
or
ds
cmp
addr16
int3
jp
xor
mov
push
inc
push
jge
mov
add
and
jno,pt
cltd
into
ljmp
add
jne
pop
cmc
test
stc
pop
lds
adc
push
sub
pop
push
fwait
imul
mov
mul
popf
add
inc
sbb
push
test
int
test
outsl
jle
pop
mov
leave
sbbl
ret
add
add
add
aaa
mov
pop
mov
sahf
clc
jno
adcb
push
and
push
bnd
jmp
xchg
fldl2e
xchg
push
mov
lret
test
lock
push
data16
out
and
sbb
test
aad
inc
xchg
sbb
cmpsl
lods
les
jmp
aad
mov
and
inc
dec
push
push
fistl
push
xchg
pop
mov
xchg
or
in
or
push
test
stos
push
push
jle
fwait
push
sbb
popf
adc
js
fcom
out
cmpl
mov
push
rorb
and
push
hlt
push
outsb
push
lret
mov
fwait
push
imul
mov
add
xchg
sarl
pop
std
add
jecxz
fwait
lret
jns
jle
and
or
dec
and
int3
insl
cli
arpl
add
inc
lcallw
cmpsl
imul
jecxz
jae
shll
ficomps
sbb
xchg
popa
out
rorl
sbb
movsb
ret
test
bound
test
add
ret
cmp
roll
inc
sub
or
dec
add
push
mov
lds
pop
or
pop
repnz
dec
inc
jl
in
xor
lods
xor
orps
jge
jecxz
mov
out
cmc
mov
push
bnd
mov
pop
icebp
jmp
xchg
sbb
dec
sahf
iret
mov
cmp
push
jno
mov
xor
repz
loop
mov
inc
gs
jmp
push
jle
xor
cmove
int
pop
gs
shlb
xor
hlt
lods
adc
adc
mov
xchg
fsubrl
sbb
jl
xlat
xchg
push
movsb
cmp
lds
aad
pop
pop
mov
insb
push
in
mov
outsl
jae
stos
adc
or
sbb
jg
xor
nop
jp
rolb
add
clc
inc
iret
pop
pusha
xor
notb
imul
lahf
add
fsubrs
call
xchg
inc
inc
lret
jle
pusha
pop
jne
add
je
inc
fs
into
and
mov
test
scas
loopne
push
mov
push
out
cmp
jno
mov
inc
sahf
aam
cli
jge
xchg
xchg
das
add
pusha
dec
push
jp
jb
add
mov
nop
pop
push
push
push
imul
xchg
lods
pop
sub
jae
rorl
xor
movsl
out
test
nop
les
ret
fimuls
mov
out
jb
sar
xchg
pop
pop
push
mov
out
pusha
dec
push
or
jg
pop
xor
addr16
and
les
xor
mov
icebp
mov
pushf
dec
fldl
outsb
jnp
out
loopne
cmp
ret
int
or
jecxz
out
arpl
push
xchg
add
daa
mov
sbb
sarl
int3
mov
fdiv
lds
cmc
add
ret
fistpl
xor
and
and
hlt
push
or
je
clc
or
jo
jnp
pop
or
std
loopne
jnp
mov
xor
mov
outsb
or
frstor
push
or
push
add
jb
data16
sbb
push
push
add
mov
xlat
pop
test
lock
imul
mov
cmpsl
xchg
lock
popa
or
sub
mov
leave
cmp
gs
fdivl
sub
xchg
dec
dec
repz
or
push
scas
dec
int
add
push
or
inc
adcl
or
nop
aad
movsb
fwait
inc
inc
xor
or
pop
aad
clc
arpl
scas
pop
lea
mov
inc
mov
or
ja
adc
jb
insb
pop
imulb
int
daa
jecxz
loop
testb
jbe
xlat
in
jno
sbb
bound
push
or
mov
pop
sub
fbstp
in
dec
push
in
xor
ljmp
icebp
mov
cmp
sbb
xor
stc
in
xor
dec
in
xchg
mov
daa
pop
add
jns
adcl
icebp
xor
es
lret
push
leave
test
test
cmpl
add
fs
sub
bound
sub
xor
and
push
sbb
sub
jle
data16
push
mov
push
xchg
sbb
sbb
test
add
pop
sub
ljmp
pop
jp
xchg
lret
out
js
orb
cmp
pop
pop
fcompl
bound
add
add
scas
inc
aam
adc
push
pop
lods
andl
cmp
shrb
pop
cmpb
scas
mov
sbb
ljmp
stc
das
insl
adc
and
cmp
std
jnp
mov
lcall
sub
leave
cmp
mov
leave
mov
addr16
jl
jl
lcall
push
xchg
adc
inc
and
lret
aad
pop
push
ja
or
lock
icebp
pop
pusha
outsb
mov
sub
loope
test
mov
xor
shlb
sub
ljmp
sbb
mov
into
mov
rorl
add
sub
mov
ja
xor
mov
mov
push
loopne
sub
stos
and
lret
push
add
loopne
xor
sbb
or
jge
mov
repnz
ret
sbb
inc
ret
dec
and
push
xor
popa
pop
test
xor
push
cmpsb
sbb
mov
mov
out
add
and
mov
daa
push
push
cmp
and
dec
outsl
pop
cmc
leave
jg
pushf
xabort
sbb
inc
lds
sub
fcoml
adc
int3
imul
jp
loope
scas
movd
out
pop
hlt
and
daa
push
and
or
jno
push
popf
fnstenv
inc
and
nop
icebp
and
jmp
xor
fisubl
dec
clc
add
cmp
xor
or
adc
cld
ficompl
divb
sbb
ja
cmpsl
daa
adcb
jo
rolb
sub
das
and
icebp
ret
mov
cmpsb
insb
out
add
add
xchg
popf
shll
xor
inc
pushf
cli
nop
cli
je
test
mov
stos
adc
adcl
dec
adc
mov
call
and
add
lret
test
popf
cltd
fdivs
lds
enter
inc
push
inc
sbb
fistpl
in
repnz
fisttpl
jae
pop
ret
testl
xor
into
cwtl
sbb
sti
inc
iret
insl
or
imul
pop
in
xchg
and
sub
dec
cltd
ret
mov
cwtl
test
jbe
arpl
ljmp
sub
imulb
adc
fdivrl
mov
push
jecxz
lds
test
xor
pop
inc
push
in
sbb
popa
cmp
or
mov
mov
pop
jno
push
xchg
lret
daa
inc
or
icebp
or
addr16
sub
lds
jns
fildl
xchg
inc
mov
jae
push
add
js
test
xchg
xchg
test
daa
push
fld
dec
in
sbb
insl
aam
mov
fsubl
pop
dec
mov
adc
jg
push
mov
inc
scas
int
in
adc
sahf
sub
xchg
incl
inc
call
dec
xchg
or
push
pop
outsl
mov
sbbl
roll
ljmp
cli
cmc
adc
rcr
jmp
fisttps
or
addr16
and
lret
imul
dec
cmp
arpl
xchg
add
out
js
mov
push
xor
insl
or
sbbl
and
xchg
adc
push
lahf
mov
subb
into
adc
lcall
xchg
aaa
or
mov
aas
jnp
fstl
repnz
jnp
inc
push
dec
push
enter
scas
fistl
mov
enter
add
int3
cwtl
ds
jecxz
sbb
rcrb
inc
or
in
pop
lods
outsb
enter
in
xor
sbb
dec
popa
xchg
add
ret
lock
cli
int3
dec
jbe
lock
mov
and
add
dec
mov
or
loopne
jnp
pop
cmp
and
lods
mov
mov
bound
push
and
jp
push
ja
jge
sbb
orb
rcrl
ljmp
insb
sub
sbb
push
add
stos
pop
iret
or
bound
inc
sbbb
ret
push
inc
movsl
sahf
icebp
vpsrlw
ud1
arpl
loope
imul
cld
pop
sbb
sti
jmp
cmp
mov
femms
stc
jg
and
scas
gs
jge
dec
push
mov
jne
mov
out
or
loopne
movsb
lods
push
out
lods
sbb
inc
lcall
mov
mov
pushf
push
mov
and
jnp
loop
xor
cmc
fidivrl
rclb
jp
mov
mov
fstpl
cmc
cmp
cli
sbb
lods
sub
xor
das
int
mov
xchg
mov
xchg
sahf
fbld
ss
mov
dec
mov
inc
and
test
fisttpl
push
lods
out
add
insb
sahf
icebp
es
inc
add
pop
filds
cmpsb
sub
dec
lcall
pop
pop
dec
sub
add
lock
push
out
adc
cmpl
pop
inc
add
pop
mov
dec
sbb
mov
mov
jno
xor
mul
ret
mov
dec
daa
mov
cmc
cli
xchg
nop
dec
repnz
pusha
lret
xchg
pop
cli
sub
addr16
jns
in
add
imul
pop
fdivrs
push
dec
jo
mov
pop
dec
or
add
or
xor
mov
lahf
fdivrl
aam
xor
int
repz
or
sub
insb
xor
adc
pop
stc
aam
fcmovnbe
pop
ret
je
push
xorl
xchg
int3
dec
adc
ret
out
mov
lods
xchg
mov
scas
pop
mov
inc
push
sbb
jge
sbb
fsub
fcoms
xchg
fidivl
mov
inc
test
insb
sbb
popa
mov
cmp
sub
jg
hlt
out
add
jmp
ret
xchg
or
aad
xchg
test
std
inc
cmc
or
jne
lds
data16
xchg
mov
mov
push
ret
shll
pop
out
xlat
dec
mov
jg
sbb
jle
and
sti
push
sub
loope
dec
subb
loope
das
inc
inc
mov
lea
shll
ficompl
inc
sbb
lock
test
pop
es
mov
jle
mov
push
dec
add
jno
mov
adc
adc
cli
faddl
add
xchg
fcomps
cltd
scas
fwait
repz
lods
ficomps
addr16
loope
popf
inc
je
pop
jae
adc
ret
loop
popf
add
bound
xchg
push
inc
icebp
push
jl
mov
cmc
stos
inc
xchg
arpl
jle
mov
dec
mov
xor
test
mov
mov
push
push
arpl
cmp
or
and
es
sbb
lahf
add
subb
xor
dec
sbb
in
inc
jne
add
mov
les
xor
movsl
lds
fisubs
adc
js
cmp
popf
js
or
mov
xchg
cmpsb
leave
add
addr16
mov
push
fsts
inc
pop
andl
sub
scas
pop
stos
in
sbb
sbb
push
shll
xchg
add
xor
inc
test
inc
dec
mov
adc
inc
push
xchg
sub
xchg
lods
add
or
loopne
pusha
xchg
ret
and
mov
push
pop
push
sbb
sti
xchg
clc
mov
in
mov
dec
pushf
pop
add
sub
popl
rcrl
cmp
rol
loope
mov
movl
xor
imul
scas
leave
push
sub
mov
add
jns
int
jp
xor
and
movsb
rcll
pop
ret
cmc
sbb
hlt
or
jnp
sub
dec
jnp
out
andl
pop
cmp
mov
xchg
into
push
and
jne
mov
cld
aad
xchg
jno
and
rclb
sbb
repnz
gs
cs
inc
test
shrb
out
movl
lock
or
sbbl
loopne
lcall
add
dec
adc
scas
pop
xchg
jge
mov
inc
ret
push
cltd
sbbb
fucomi
sbb
rcrb
or
sbb
adcl
iret
aam
xchg
sbb
es
inc
mov
add
js
dec
stos
fisttpll
loope
mov
push
pop
xchg
dec
pop
enter
jae
mov
xchg
jp
adc
pusha
sqrtps
or
cmp
notl
mov
xchg
pop
add
scas
xlat
adc
adc
pushf
and
add
push
sbb
jecxz
mov
cmp
mov
push
xor
fs
and
shlb
push
insl
or
adcl
xor
mov
fwait
cmc
lock
mov
or
jns
shr
push
cltd
mov
fisubl
jno
aaa
mov
int
in
shrl
pop
inc
push
jb
xor
into
push
repnz
sahf
ljmp
xor
cs
pop
xor
pushf
addl
sub
mov
cltd
pop
popf
fnsave
push
leave
ljmp
pop
pop
aaa
inc
data16
mov
push
ja
adc
sbb
push
out
in
adc
add
jg
sub
dec
testb
ja
adc
or
dec
xchg
pop
pop
sbb
mov
movsl
stos
pop
pushf
mov
mov
pop
in
cmpsb
or
jmp
dec
mov
pop
dec
sbb
lods
adcb
sub
pop
inc
movsb
jb
mov
dec
xchg
push
jne
or
adc
dec
mov
ficompl
pop
negl
dec
into
lret
dec
sbb
and
mov
sub
xor
push
jge
inc
cmpsb
add
xchg
adc
test
icebp
sbb
imul
or
dec
xor
es
bnd
test
inc
data16
scas
sbbb
pop
fs
mov
jo
in
cld
inc
rcrl
push
inc
mov
fsubrl
or
shr
stc
lock
inc
push
sub
jno
mov
jle
xchg
pop
repz
mov
cmpsl
arpl
aas
mov
jl
inc
add
mov
or
icebp
lret
dec
fisttpll
add
ss
inc
movsb
dec
ficompl
loope
jecxz
addr16
sbb
pop
cmp
jns
fwait
and
shll
jb
inc
ss
insb
int3
add
pop
xchg
fwait
sarl
xor
cmc
daa
sub
shll
repnz
xchg
mov
cli
pop
subb
mov
push
aaa
lret
add
cmc
pop
add
jbe
js
popa
ja
sbb
and
testb
out
inc
pop
clc
mov
jecxz
push
stos
dec
out
push
outsl
scas
inc
das
mov
mov
mov
add
sub
jae
push
inc
out
inc
pushf
es
out
rcrl
out
insl
inc
hlt
mov
or
adc
and
add
test
mov
dec
scas
push
sub
sub
push
xchg
imul
pop
mov
adc
cmp
add
xor
jae
test
in
dec
sub
fs
push
in
mov
out
in
out
subb
rcrb
sbb
pop
in
sbb
aaa
gs
sbb
push
ss
xchg
orb
test
insl
push
icebp
lods
push
psrad
adc
add
or
loope
inc
add
pop
cmc
inc
frstor
add
xlat
add
lods
xchg
call
xchg
rcl
in
sbb
mov
and
imul
sahf
adc
mov
inc
pop
sbbl
or
add
mov
int3
add
or
imul
pop
int
fs
add
pushw
mov
lods
dec
or
and
xchg
sbb
sahf
orw
gs
cmp
jmp
push
fdivrs
movsb
sar
enter
insb
and
imul
sbb
xlat
sbb
or
in
fcoms
je
push
enter
jno
ficoml
int
enter
add
push
or
gs
aas
pop
xor
out
push
add
mov
cld
push
imul
popa
mov
pop
push
pushf
or
add
push
shr
add
and
jp
repnz
cmpsb
orb
inc
lock
pop
or
nop
sbbl
in
inc
mov
sbb
push
push
mov
out
sbb
cmp
roll
adc
repnz
adc
bound
mov
jg
out
pop
xlat
xchg
push
cmpsl
jl
cmc
lds
fadd
fsubp
sbb
pop
clc
rcl
and
lock
jle
scas
cltd
lds
jp
inc
push
cmp
push
inc
movsl
mov
xchg
loop
push
push
add
or
cwtl
sbb
and
aaa
scas
xchg
dec
ret
gs
jmp
addb
sarl
rorl
push
xchg
jmp
inc
mov
lds
add
fidivrl
dec
lret
sub
lods
jnp
pop
scas
inc
pop
ja
cs
push
mov
idiv
jne
jmp
cmovb
or
test
stc
pop
jne
or
or
outsl
in
dec
sub
sbb
pop
ljmp
jp
das
fdiv
push
cmpsl
or
aam
xor
sbb
push
jno
inc
xchg
push
pop
push
clc
loopne
test
mov
adc
adc
notl
repz
cmp
adc
jle
icebp
mulb
add
in
pop
icebp
int
pop
sbb
or
lods
in
sub
push
cmc
mov
cmpsb
dec
add
lcall
mov
cltd
inc
adc
sub
in
or
mov
pop
push
cmpsl
mov
daa
jbe,pt
addl
clc
out
mov
jne
mov
ja
xchg
adc
sub
sbb
push
divb
roll
aas
or
xchg
daa
stos
addr16
cmc
das
jg
sub
inc
push
sub
mov
mov
jns
sbb
or
test
out
cmp
gs
daa
xor
ss
add
int
push
xchg
aas
cli
lcall
call
div
mov
mov
orb
pop
js
mov
push
scas
push
repz
push
insl
loopne
jp
enter
fdivl
fcmove
and
or
subb
push
ret
cmpsb
popa
mov
loopne
sbb
jno
pop
icebp
mov
or
adc
push
movsl
test
pop
lcall
fdivrl
push
cli
inc
movsl
pop
jge
pop
push
sbbb
add
mov
xor
adc
inc
shr
inc
jle
sbb
mov
testl
lock
jle
push
add
xchg
dec
in
push
xchg
or
mov
lret
cmp
int3
push
faddl
loopne
repnz
push
sti
or
lock
lret
ljmp
pop
clc
insl
inc
fmull
dec
jnp
popf
inc
lock
mov
mov
out
xchg
fisubl
sub
vandps
dec
jecxz
sahf
sub
mov
sti
adc
xchg
push
or
popa
cmc
push
enter
arpl
xor
out
sbb
jno
nop
subl
fidivrs
add
mov
xlat
das
pop
shll
xchg
add
rorl
dec
push
rolb
js
xor
inc
add
sbb
lret
roll
mov
mov
pop
test
or
adc
pop
outsb
jb
dec
mov
popa
icebp
pop
fists
les
adc
dec
orb
insb
sub
sub
add
inc
adc
jb
sbb
and
cmpsb
fstpl
jmp
lcall
js
push
stos
jge
push
loopne
add
das
mov
gs
movsb
sbb
clc
sub
loopne
adc
mov
mov
or
andb
or
dec
push
dec
xchg
sbb
ret
iret
clc
push
cmpsl
pop
icebp
push
js
add
sbb
call
test
sbb
inc
icebp
rcl
lcall
dec
add
testl
mov
stos
sahf
push
jl
or
lret
jne
inc
mov
pop
push
mov
xor
outsl
mov
sbb
ret
fiadds
sbb
into
ret
adc
mov
ss
das
nop
cmp
adc
xchg
sub
popa
in
out
push
jecxz
imul
stos
pop
mov
adc
xor
in
or
xchg
ss
and
mov
cmpsl
fdivl
sub
dec
or
mov
jl
inc
jo
test
loope
push
pusha
pop
cmpsl
jne
push
push
testl
fcmove
repnz
out
addr16
or
inc
dec
loope
mov
dec
ljmp
mov
cmp
sub
sub
inc
and
xchg
int
mov
inc
xchg
inc
out
fidivrl
add
sbb
lds
imul
jae
mov
xor
ljmp
inc
and
dec
sbb
scas
filds
cmp
inc
adcl
inc
xchg
add
cltd
push
jns
xchg
cmpl
push
sbb
sub
dec
mov
pop
pop
inc
sbb
mov
lock
add
sbb
dec
lcall
add
rorl
dec
popf
inc
xlat
lcall
es
fwait
dec
mov
mov
faddl
ret
aaa
and
push
jl
sub
rclb
push
xchg
inc
jmp
fwait
mov
sti
mov
mov
lret
or
mov
insb
mov
cmp
sub
ret
adc
cmp
jae
cmp
addl
rorb
mov
mov
sbb
lods
inc
adc
inc
xor
imul
fstpl
sbb
js
adc
in
mov
or
cmp
rorb
dec
je
mov
sahf
cmp
stos
aas
jmp
push
shll
xor
push
inc
mov
daa
sub
push
mov
aas
xchg
icebp
das
mov
lret
icebp
xor
rclb
add
inc
jmp
aas
lahf
stos
sbb
inc
cld
shll
loopne
rcrb
push
sub
test
xor
scas
add
nop
pop
inc
dec
jp
push
mov
cli
cltd
pop
dec
jbe
sbb
sub
lea
les
jmp
sahf
add
int3
insb
lods
or
pop
xor
mov
clc
gs
mov
sbb
adc
adc
data16
inc
ss
or
mov
xor
daa
xchg
cmp
inc
sub
cmpsl
pop
cmp
mov
loopne
push
pop
pusha
gs
xor
pop
sbb
and
xor
mov
popf
pop
mov
sbb
push
in
pushf
sbb
cli
cld
xor
push
xor
push
cmp
push
ret
mov
sahf
or
fwait
inc
xlat
mov
ffree
adc
push
lcall
dec
mov
jno
pushl
nop
pop
pop
pop
mov
daa
negl
ror
je
xchg
leave
inc
test
mov
sbb
imul
sub
push
push
cmpsl
mov
cmc
mov
addb
push
dec
and
inc
enter
mov
sub
jecxz
mov
push
hlt
mov
jo
and
mov
or
adc
cmc
ret
xchg
es
inc
mov
daa
cwtl
andl
shr
daa
stos
cmc
sbb
inc
dec
push
les
xchg
mov
lret
frstor
test
sbb
cmp
mov
dec
add
jge
pop
cmovb
jbe
pop
push
jl
add
fwait
mov
cmc
in
mov
imul
sbb
cmp
shl
divb
stos
ds
scas
ret
push
repz
fdivl
xor
sub
inc
pop
sbb
cmp
out
xchg
pop
mov
out
inc
push
andb
cmp
das
inc
dec
pop
test
ret
std
hlt
mov
xchg
fsubr
jecxz
mov
adc
loopne
loope
ljmp
add
sbbb
repz
inc
ss
add
ss
inc
cmp
icebp
cmpsb
xchg
out
pop
imul
sahf
lds
push
add
xor
call
les
in
mov
scas
jbe
fwait
mov
push
jl
push
add
repnz
mov
js
push
and
pop
fiaddl
add
pop
or
cld
fwait
insl
push
jmp
loopne
lea
ret
jne
and
cmp
xchg
out
cmp
loopne
sti
inc
inc
jno
inc
mov
push
out
push
mov
cmpsl
inc
test
xchg
fmull
pop
adc
in
mov
mov
or
pusha
xor
xor
xlat
xchg
in
cmc
outsl
jae
test
push
jbe
mov
jae
movsl
pop
cmp
cmp
mov
dec
xchg
xor
mov
jge
push
mov
sub
loop
shll
sbb
fcomip
stos
bound
push
pop
enter
dec
add
aaa
mov
repnz
sub
ret
test
pop
stos
daa
push
fwait
mov
inc
in
lods
dec
call
gs
add
or
push
lds
jp
andb
mov
sub
xchg
out
dec
adc
inc
xchg
jmp
add
jmp
or
dec
add
mov
notb
gs
out
outsl
fmull
loopne
xor
imul
or
push
popa
stos
lds
inc
jno
and
mov
xchg
push
cmc
mov
pop
rolb
jno
or
dec
lock
cli
add
mov
jno
in
pop
test
inc
aas
or
adc
les
lret
test
pop
push
xchg
out
sbb
pushf
stc
pop
aaa
push
pop
sbbb
lahf
xor
add
sbb
mov
push
in
and
test
jle
lds
dec
in
hlt
mov
xor
or
fimuls
sub
sub
mov
xor
sbb
fwait
repnz
and
mov
es
and
shrb
push
cmp
cltd
pop
ret
lock
fdivl
mov
test
out
sbb
mov
push
movzbl
in
not
add
ja
xor
shlb
lahf
imul
mov
jne
call
je
jo
add
xchg
mov
sahf
push
out
shlb
mov
jo
inc
lock
xchg
pop
or
lret
push
sub
outsl
movsl
inc
sbb
add
sbb
adc
out
test
addr16
aas
adc
outsl
add
push
jno
or
lcall
add
sub
and
mov
push
jne
enter
mov
xchg
xchg
test
mov
pop
iret
jne
xchg
loopne
cmp
test
push
mov
add
iret
out
ficoml
pop
pushl
xchg
mov
and
repnz
mov
int
xchg
adc
test
enter
mov
mov
aaa
mov
mov
loopne
xchg
push
push
or
movsl
stc
rcrb
and
push
and
loop
enter
push
fwait
xchg
or
movsb
add
jbe
or
sub
inc
and
addr16
outsl
idiv
jecxz
cmp
push
push
cmp
inc
xchg
scas
jmp
jge
sbb
add
test
and
dec
and
xor
fsubr
sbb
sbb
repnz
and
jbe
ret
fwait
xchg
aas
jb
lock
mov
fcmovne
testl
cs
pop
mov
jbe
lahf
subb
cmp
jne
aaa
sbb
mov
fisttps
int
nop
xchg
mov
scas
movsb
mov
pop
jmp
iret
or
fidivl
movsl
push
push
mov
or
out
push
mov
cmp
add
mov
dec
sbb
nop
sbb
xchg
mov
pop
enter
lret
pop
popa
faddl
aaa
inc
out
cmp
push
inc
jge
insb
inc
out
or
inc
mov
daa
xchg
or
sub
cmp
inc
jno
orl
adc
push
mov
mov
inc
stos
shrl
cli
inc
out
mov
negb
jle
adc
arpl
lods
popf
js
std
mov
out
mov
sub
repnz
adc
xchg
add
pop
std
mov
sub
aaa
cmp
inc
mov
loope
repnz
loope
imul
scas
pop
movsl
mov
pop
mov
pusha
and
in
in
stos
aad
pop
in
push
pushaw
sub
sbb
rcrb
pushf
jmp
ffree
xchg
pop
mov
sbb
scas
mov
in
data16
pop
lock
or
or
ret
dec
xchg
mov
xchg
sub
dec
dec
pop
or
add
dec
cmp
lock
bound
jne
cmpsb
rolb
ficoml
adc
sub
insl
inc
cmpsb
lock
imul
adc
pop
stos
fnsave
cmc
mov
jle
out
xor
filds
testb
mov
xchg
out
insb
dec
vpshufhw
adc
cmc
xor
inc
lea
stc
cltd
pushf
das
mov
dec
ror
push
sub
cltd
push
sbb
xor
mov
in
cmpsb
sub
push
push
aas
dec
or
add
data16
je
and
iret
shl
pop
out
sahf
xchg
add
pop
sbbb
daa
dec
rcll
outsb
sbb
pop
out
rcrb
fsubs
mov
adcl
pop
popl
pop
xchg
rclb
in
mov
jecxz
jnp
mov
push
jg
mov
test
mov
int
stos
or
push
sbb
loop
cld
adc
rclb
or
or
shrl
sbb
mov
cmp
clc
jmp
pop
push
mov
xchg
or
adc
test
inc
bound
mov
fists
test
xchg
lret
or
stc
movb
ret
sub
daa
or
scas
stos
jns
fldt
or
add
cli
push
or
xor
fcoms
out
cmpsb
stos
sub
add
pop
movsb
sbb
push
add
lods
add
popa
data16
add
xor
cmp
mov
mov
cmp
jae
lret
sbb
out
mov
jl
pop
mov
sbb
lods
jbe
roll
fdiv
les
push
data16
adc
ss
imull
jge
inc
inc
inc
dec
jae
dec
pop
cmpsl
jl
push
or
mov
mov
gs
adc
pop
clc
xchg
dec
out
ja
mov
or
xchg
dec
push
sub
jno
cmpsl
pushf
out
js
xchg
xchg
push
gs
test
daa
sub
add
popa
add
bound
jbe
inc
sbb
loope
xor
pop
or
dec
push
add
cli
fs
mov
cmpsb
push
mov
scas
shll
aaa
shll
bound
lahf
sub
and
sub
xor
test
fcoml
sbb
lahf
adc
fwait
jl
rcl
repz
insb
inc
out
or
imul
push
divb
cmp
andb
pop
mov
pop
repz
in
test
fcoml
sbb
push
jg
idivl
add
rol
or
and
push
pop
add
or
add
ljmp
add
mov
cmp
sbb
jge
pusha
cmp
nop
sete
sub
les
adc
dec
lahf
or
inc
ret
xor
sar
xchg
push
push
leave
test
sti
or
pop
inc
xchg
sbb
xor
insl
mov
add
xor
mov
or
xchg
fsubrs
aas
stos
test
je
add
in
fsts
arpl
pop
in
test
sbb
movups
sbb
cwtl
mov
jno
repz
xorl
adc
shll
sbb
and
mov
push
mov
insb
pop
dec
mov
xor
bound
pop
je
xchg
push
insl
mov
inc
and
test
sbb
mov
inc
repnz
addr16
addl
mulb
pop
mov
clc
subl
icebp
loope
mov
mov
pop
push
jb
or
rcr
push
sbb
or
xor
flds
sbb
lock
das
int
xor
sbb
sub
stos
out
adc
jne
sbb
jno
inc
cld
scas
mov
jge
cmp
xlat
dec
mov
jne
and
cmpsl
add
pop
push
sub
cmp
jb
xchg
jne
pop
lea
adc
faddl
inc
xchg
xor
lcall
add
cmpsl
repz
test
inc
int3
bswap
mov
std
jp
hlt
adc
test
or
sbb
dec
xor
das
and
push
gs
push
je
in
mov
inc
data16
push
fisttpl
mov
mov
ljmp
cmpsl
mov
jle
jmp
jbe
jl
das
jle
neg
push
adc
fmul
pushw
add
lock
notb
sbb
testb
xor
stc
push
xor
and
out
push
xchg
jbe
movsl
mov
test
rolb
hlt
rclb
or
xchg
loop
xlat
nop
and
imul
mov
cmp
out
int
mov
pop
adc
inc
adc
rclb
insb
popa
dec
stos
mov
nop
js
push
add
arpl
dec
sbbb
add
pop
imull
loope
sbb
mov
sti
mov
gs
add
rorl
icebp
imul
mov
jo
mov
adc
mov
ja
into
lahf
add
div
jnp
roll
sub
adc
daa
inc
mov
mov
sbb
xchg
add
fstpt
testb
shlb
pop
imulb
or
js
xor
xchg
or
loope
inc
add
flds
lcall
dec
sub
pop
mov
add
pop
add
ljmp
frstor
mov
test
cmp
mov
addl
jmp
adc
fdivr
repnz
pop
add
shlb
pusha
sti
addr16
imul
jl
push
daa
lcall
into
add
add
gs
sbb
xchg
dec
inc
sub
nop
or
dec
imul
xor
dec
xchg
cld
inc
js
addl
mov
stc
imul
jl
shlb
ficompl
dec
adc
sahf
cltd
and
fidivl
pop
popf
in
popf
jecxz
and
jmp
cmpsl
add
cli
mov
add
mov
dec
es
daa
mov
faddl
jo
mov
ja
incl
push
mov
mov
cmp
sbb
jnp
jge
add
xchg
ret
cmp
xor
aaa
or
out
cld
sub
test
pop
lods
mov
call
jecxz
jmp
adc
and
pusha
cmpb
or
jne
adc
les
mov
adc
push
sbb
mov
fcmove
gs
jo
es
xor
jle
test
push
mov
addr16
test
mov
push
xchg
mov
js
jbe
jnp
or
mov
adc
mov
in
mov
or
cld
jns
xchg
mov
test
test
adc
pop
inc
sbb
sub
add
out
jb
fs
sub
fcompl
cmc
ret
repnz
ds
insl
or
shrd
sub
addb
inc
add
das
mov
xlat
out
dec
adc
stos
leave
cmp
addb
popa
add
test
outsl
mov
mov
mov
out
das
sub
out
or
ret
lea
pop
xchg
xlat
imul
xchg
aam
dec
mov
loope
sti
xor
dec
mov
pop
cmp
mov
data16
subl
mov
mul
sbb
dec
test
pop
add
pop
fisttpll
imul
add
xchg
xor
push
icebp
inc
xor
pop
or
rorb
sub
xchg
inc
add
fnstsw
adc
pusha
push
cmpsb
incb
adc
push
cltd
fsubrs
or
stos
aam
inc
xchg
push
xchg
bound
inc
mov
add
dec
jne
fldenv
arpl
add
adc
pop
cmc
push
in
jne
xlat
sbb
ror
fst
pushf
jb
add
mov
andl
xor
leave
aam
ror
dec
mov
jbe
pop
pop
adc
arpl
mov
test
add
lret
jle
clc
push
add
cmp
ljmp
decl
repz
add
or
rorb
mov
insb
mov
cmp
ret
rcll
inc
nop
mov
aas
insb
and
xchg
shrb
in
sbb
dec
dec
lock
add
mov
sub
hlt
xchg
mov
inc
data16
mov
adc
cwtl
mov
pop
into
in
out
insl
push
hlt
push
lea
jecxz
inc
aaa
jle
sub
sub
fbstp
mov
pop
pop
dec
pop
mov
mov
fs
lcall
jns
pop
push
testb
cmp
inc
fistps
in
out
push
or
andl
add
inc
jb
mov
popa
or
cli
insb
mov
pop
faddp
addb
out
jo
rol
lahf
ficompl
pusha
idiv
mov
popa
add
fdivrp
add
xor
jno
inc
nop
lds
and
enter
cli
sbb
test
testl
popf
pop
or
mov
pop
or
xchg
xor
daa
jle
cmp
data16
addr16
ds
std
jb
or
mov
xchg
xor
les
dec
out
fdivs
pop
xor
jecxz
pop
mov
out
jbe
aaa
clc
add
ficompl
mov
mov
inc
mov
mov
push
mov
add
sbb
jle
xor
push
sub
cli
std
icebp
popf
jb
jb
sbb
lods
mov
gs
loopne
jl
add
mov
in
fsubrl
arpl
pop
adc
xchg
sbb
xchg
lea
lahf
in
inc
jbe
incb
aaa
mov
fsubrl
mov
loopne
mov
divb
gs
sub
in
or
inc
pushf
gs
enter
test
adc
ret
imul
aam
jl
cltd
xor
and
jne
dec
xchg
shll
idiv
inc
stc
jmp
scas
aaa
into
das
cli
ficoml
jmp
or
dec
jno
fadds
jne
push
mov
add
ss
and
test
jg
push
add
add
push
jo
push
inc
lods
push
xlat
push
cltd
idivb
sbb
lds
push
jbe
lds
adc
dec
dec
xchg
stos
rolb
jns
sahf
jge
mov
adc
loop
and
sbbl
mov
repz
sbb
in
sub
and
sbb
sbb
repnz
ret
out
xor
cli
pop
sbb
lret
pop
cmpb
faddl
cmpsb
sbb
mov
out
xor
addr16
das
outsl
mov
jecxz
or
push
inc
xchg
or
xlat
jno
imul
mov
push
push
adc
insl
mov
out
xor
cmc
sbb
add
dec
mov
mov
mov
or
pushf
xor
out
push
aaa
jno
aaa
jnp
gs
push
test
imul
jns
ljmp
ss
jnp
mov
lret
push
xchg
addr16
fdivs
in
xchg
sub
mov
pusha
cmc
sahf
movaps
ds
ljmp
aad
pop
cltd
mov
sbb
inc
das
stos
mov
in
ret
add
inc
test
lods
inc
dec
and
inc
jnp
stos
jl
inc
add
aaa
icebp
loopne
imul
enter
aaa
inc
out
lahf
stos
imul
and
lcall
ret
or
jbe
mov
adc
add
rcll
pop
sub
or
xchg
in
gs
mov
xchg
nop
add
arpl
das
arpl
test
ret
std
sbb
repz
ret
mov
xor
out
mov
scas
adc
sbb
dec
stos
sbb
pop
ret
or
ficoms
fwait
arpl
insb
stc
jg
es
jge
pop
stos
mov
dec
pop
jecxz
sub
fsubp
inc
divl
scas
xor
inc
and
insb
xor
loopne
inc
incb
push
or
cmc
mov
jmp
fimuls
lahf
out
loop
rclb
sbb
push
xor
movsl
push
xchg
pop
test
push
rcrl
pop
pop
jbe
js
sarl
sbb
sub
pop
add
aad
push
mov
sub
pop
test
and
sti
loope
leave
adc
jp
sbb
and
popf
xchg
cmp
pop
mov
fcoml
aaa
sub
mov
scas
sbb
push
or
cmp
fs
adc
leave
push
adc
int
add
jmp
loopne
push
es
aas
mov
sbb
test
dec
and
xor
test
lret
addr16
add
sarl
or
lret
mov
pushf
aaa
int
mov
pop
or
mov
or
out
sub
into
mov
inc
pop
insb
mov
or
mov
lods
inc
jno
jl
out
rcrl
cs
loop
and
push
push
push
out
sbb
xchg
add
arpl
bound
popf
mul
push
dec
and
mov
push
mov
popf
imul
idiv
imul
push
mov
imul
insb
out
push
hlt
sub
jbe
mov
pop
stos
pop
fstps
mov
adc
stc
sbb
mov
xchg
jmp
out
pop
mov
cmp
adc
outsb
inc
jns
out
rcrl
jne
inc
mov
jne
inc
pop
dec
push
cmpsl
cmpsb
mov
xchg
or
mov
xchg
xchg
mov
std
hlt
xor
inc
loope
js
xor
leave
int3
adc
add
test
mov
jbe
sbb
or
loop
sbb
shrb
add
add
lock
push
lcall
hlt
or
add
pop
jmp
loop
pop
fildl
sub
repz
fstp
sbb
jmp
enter
mov
rclb
sub
mov
es
dec
mov
mov
ficompl
rcll
inc
cmpl
sbb
daa
push
push
push
add
xchg
and
or
adc
pop
mov
mov
xchg
xchg
jge
jg
mov
cmp
mov
je
xor
pop
cwtl
xor
adcb
sahf
pop
sbb
stc
fldenv
xor
daa
jle
popa
cwtl
subl
jb
or
int3
fucom
adc
loope
cmp
sahf
xor
jnp,pn
lock
xorb
mov
inc
dec
popa
sub
dec
inc
cmp
in
data16
adc
dec
mov
push
sbb
into
add
and
sbbl
sub
adc
clc
jmp
outsl
and
xor
test
daa
out
pop
add
jns
pop
dec
sub
cwtl
add
push
cli
nop
push
sbb
push
push
test
and
push
xchg
add
mov
jmp
int
adc
mov
lcall
mov
xor
sbb
frstor
fldenv
addb
dec
pop
idiv
lahf
test
loopne
imul
in
or
pushw
aas
push
xchg
lahf
add
mov
aad
adc
dec
xchg
mov
pushf
push
or
pop
lods
rcll
shrb
js
jne
cmpl
mov
xchg
in
push
dec
ror
test
push
in
popf
rcrl
and
xchg
mov
xor
shrb
xor
imul
sbb
push
outsb
add
xor
jmp
fldenv
and
mov
shlb
inc
and
movb
popa
call
addr16
popa
cld
stos
imul
push
xor
push
dec
insb
mov
dec
jmp
rorl
xor
add
jo
add
popf
std
or
sbb
data16
sub
sub
mov
shlb
inc
mov
notl
imul
imul
pop
test
pop
inc
dec
shrb
in
push
icebp
test
xchg
mov
loopne
add
lock
adc
adc
lods
ror
pushf
sbb
cli
cmp
pop
xchg
cs
sahf
mov
inc
clc
sbb
sbbb
fldenv
dec
pop
xor
jge
push
or
jp
jle
sbb
xchg
add
repnz
lret
jl
jne
or
inc
jno
pusha
call
pop
jo
outsl
push
aas
mov
or
jmp
push
outsb
or
cmp
pop
mov
push
sub
adc
cmp
sub
push
cwtl
sbb
jecxz
nop
pop
mov
pop
sti
or
mov
mov
mov
or
lods
adc
cmc
mov
add
jecxz
fstpl
xchg
imul
xchg
mov
cs
in
sub
dec
arpl
subb
push
jns
jp
cwtl
cmpsb
pop
aaa
sbb
pop
add
pop
addr16
gs
push
es
adc
sub
lret
nop
je
jo
inc
shlb
mov
mov
daa
pop
test
roll
xchg
stos
jnp
jne
call
jl
xchg
negb
imul
lcall
sahf
dec
mov
sbb
movsl
add
popa
push
out
push
loope
xor
int3
xor
xor
xchg
lret
scas
mov
sbb
pusha
pop
popf
push
pop
adc
int
xlat
xor
in
inc
xchg
mov
out
pop
jg
loope
push
sub
xchg
fisttpll
jmp
push
das
sbb
push
fists
cli
inc
mov
fs
sub
dec
mov
pop
insl
mov
xchg
hlt
clc
mov
sarb
sbb
aaa
jbe
xor
aas
pop
aad
pop
insl
cltd
push
cli
adc
repnz
fisubrs
mov
jecxz
and
ret
fisttpl
mov
nop
push
aad
popf
mov
inc
call
sbb
out
stos
sbb
pop
jnp
add
es
cmp
xchg
xchg
or
fwait
fwait
jbe
shll
ficomps
and
add
int3
jns
out
lea
daa
std
popa
loopne
push
add
xor
aad
mov
xchg
data16
and
add
sahf
jl
cvtps2pi
aas
lds
das
push
adc
pop
add
add
add
test
repnz
dec
xchg
aad
xor
push
js
adc
arpl
sbb
lret
mov
or
outsl
shlb
cmp
mov
adc
push
mov
nop
outsb
fwait
xchg
jecxz
xchg
dec
sbb
dec
inc
push
pop
cwtl
xor
mov
fwait
xor
add
cmp
mov
lods
dec
or
xchg
clc
aas
insl
and
mov
add
shlb
shll
shrl
inc
sbb
fdivrl
sbb
nopl
dec
popl
inc
fsts
mov
das
sbb
add
dec
add
jp
sub
pop
imul
cwtl
xor
ja
in
pushf
sbb
rolb
mov
je
imul
xchg
or
cmp
cmpsb
jo
sahf
xchg
add
cltd
mov
das
shll
mov
cmpsl
adc
cmp
repnz
sub
ss
out
sbb
or
sbb
int
jp
push
or
sub
test
les
mov
sub
in
test
loopne
adc
jo
es
leave
mov
icebp
jnp
jle
jecxz
cmp
cmp
and
aaa
push
ret
jecxz
xchg
cmc
fwait
add
dec
icebp
sbb
lahf
xchg
test
pop
add
imul
sbb
fwait
add
jno
jnp
out
outsl
jp
filds
sbb
pushf
jecxz
mov
push
dec
push
clc
mov
cli
add
imul
dec
and
ja
mov
jmp
sti
fistpl
ja
std
add
sbb
push
faddl
out
enter
orb
inc
xchg
lods
pop
stos
sbb
push
cmpb
movsl
xorb
xchg
dec
sub
imul
sti
fcompl
xchg
sbb
mov
pusha
cmp
mov
jo
fidivrl
mov
cmpsl
stc
cmpsb
sbb
ret
push
push
enter
xchg
mov
stos
add
sbb
adcb
jns
test
pop
push
cmp
push
cmpb
mov
loope
orb
sub
push
cmc
or
xor
not
add
sbb
popa
ja
stos
rol
xor
sub
jne
jbe
stos
leave
cmc
push
add
cmpsl
shll
imul
popa
lock
push
test
push
mov
push
test
cmp
movsl
add
ret
dec
sbb
test
test
pop
jo
push
mov
sub
notl
bound
or
xchg
sbb
push
rep
shl
push
addb
or
mov
xchg
fisttpl
xchg
aad
and
insb
mov
movsl
push
leave
push
fs
or
insb
ja
mov
movsb
mov
ljmp
xchg
mov
pop
mov
mov
and
add
test
sbb
lods
lahf
mov
or
pusha
lret
xchg
or
stc
testb
repz
xchg
cs
lahf
insb
and
add
pop
inc
dec
sbb
xor
insb
and
into
lds
sbb
or
add
inc
dec
jp
fcomps
xor
xchg
xchg
sub
and
mov
dec
add
leave
mov
scas
in
ret
mov
lea
pop
test
sub
xchg
xor
int3
outsb
outsl
push
inc
push
std
ficoms
or
or
pop
mov
test
jo
xor
das
mov
xor
or
out
and
add
clc
dec
sbb
lahf
sbb
mov
fistps
jb
mov
or
cmp
xchg
pop
mov
pop
mov
movsl
add
dec
or
ret
xchg
lahf
cmpsb
insb
loopne
pop
mov
out
pop
pop
lds
xor
minps
xlat
addr16
fisubs
aad
cmp
mov
lds
xorl
pop
cmc
stc
mov
xor
rol
inc
popf
popf
sbb
sub
ficomps
cmpsb
cmc
pop
sub
mov
xchg
jmp
xchg
add
fucomp
lds
mov
popa
add
and
inc
imul
arpl
mov
push
outsb
mov
int3
push
movsb
adcb
int3
xchg
das
fldt
dec
xor
gs
and
pop
adc
cmpsl
sub
stos
fdivrl
xor
or
lock
cmp
movd
scas
imul
adc
sub
sahf
sbb
sti
xor
popf
repz
inc
xchg
lcall
adc
dec
dec
negl
fiadds
faddl
mov
data16
push
xchg
js
cmc
xlat
sbb
sbb
aam
inc
addb
push
ror
js
shll
inc
test
bound
pop
sbbb
test
push
sub
push
adc
mov
test
bound
pop
icebp
movsl
test
clc
test
xchg
popf
mov
pop
stc
je
ss
cmpsb
lock
push
sbb
cmpsl
jb
test
and
sub
mov
ss
push
mull
lods
add
outsb
mov
sub
and
dec
imull
fs
out
xor
pop
jmp
pop
push
mov
nop
mov
iret
dec
out
inc
js
push
nop
loope
or
mov
jg
mov
inc
roll
cmc
flds
xor
cmp
jecxz
cmp
sahf
stc
outsl
inc
xchg
mov
mov
out
gs
pop
pop
out
xchg
sub
mov
mov
add
fadd
inc
mov
push
fwait
pop
xchg
push
push
mov
add
out
add
cmp
mov
inc
pop
leave
mov
xchg
out
lock
rclb
or
add
push
es
leave
jmp
shll
sbb
fdivrs
pop
xorl
in
icebp
orl
ret
mov
dec
xor
inc
dec
add
fwait
daa
repnz
lock
dec
adc
pop
dec
adc
aad
cmc
pop
and
and
add
cltd
sub
mov
or
xor
sahf
add
xor
xchg
inc
sbb
fpatan
cmpsb
aas
xor
pushf
jecxz
in
and
and
push
divb
or
test
and
sbb
aaa
sahf
loope
xchg
or
mov
sub
jp
mov
jmp
push
lock
test
xor
cmp
cmp
out
addr16
jp
ja,pt
punpckldq
aaa
pop
les
or
mov
outsl
jbe
sub
inc
dec
dec
pop
jns
xchg
nop
test
imul
aas
inc
imulb
test
in
and
and
mov
pop
mov
push
xor
and
mov
lret
fs
push
cmc
inc
into
lock
sbb
repnz
jge
push
xor
dec
add
dec
or
mov
stos
in
sub
pop
push
cmp
xlat
push
mov
sub
or
dec
sarb
scas
decl
out
dec
in
mov
je
jl
pop
jmp
xchg
push
inc
mov
aas
mov
mov
and
lock
cli
add
and
popa
cmpb
mov
in
push
fmuls
or
pop
mov
dec
inc
pop
mov
xchg
xorb
shl
out
shll
xchg
andl
push
add
push
loopne
inc
push
sbb
mov
and
sub
imul
pop
jbe
push
aad
add
shll
cld
ret
cmp
push
push
pushf
aam
cld
mov
mov
lds
sar
js
add
sbb
les
adc
bound
les
lahf
mov
jno
mov
dec
aaa
mov
push
repnz
outsl
cli
gs
pop
pop
add
mov
cmpsl
leave
push
or
sbb
cmp
test
jecxz
sub
sbb
rolb
dec
or
movsb
inc
rcll
cmovge
push
daa
sbb
stos
or
mov
insl
push
mov
mov
fs
fucomip
test
and
sbb
pop
push
cmpsl
mov
xor
test
cwtl
or
mov
popf
jo
aas
ja
mov
pop
loope
insl
imul
fsubrl
mov
mov
mov
and
jmp
out
loopne
pusha
xchg
fs
push
loop
sub
sbb
push
dec
sub
push
iret
or
sbb
pop
in
mov
pop
inc
dec
pop
ret
or
mov
jns
es
cli
movsl
mov
lret
ret
and
mov
pop
mov
jecxz
orl
pop
xor
dec
dec
or
mov
repz
mov
fisubs
push
add
push
cmp
dec
push
add
sahf
pop
pop
xchg
mov
push
push
and
pop
fimull
out
inc
dec
mov
xor
push
scas
js
sub
push
mov
adc
das
mov
imul
mov
inc
mov
icebp
dec
pop
inc
add
inc
mov
add
repz
add
jne
xchg
mov
repnz
lods
push
fimuls
pop
stos
cmp
test
pushf
gs
inc
mov
sub
sarl
or
mov
sbb
push
mov
sti
lret
pusha
lods
sbb
jle
enter
fwait
jbe
insb
xor
lds
scas
sub
clc
cli
dec
push
imul
sbb
push
repnz
outsl
in
add
adc
mov
lahf
sbb
aam
xchg
nop
cli
lods
sub
ss
cmp
mov
pop
fcompl
lret
and
add
pop
cs
or
xchg
push
xor
inc
pushf
add
ds
stos
push
xor
push
xchg
lods
fisttpl
out
mov
mov
in
and
out
push
sub
movsl
push
xlat
addr16
jl
pop
sahf
cmc
xchg
in
pop
adc
scas
popf
or
push
lret
test
mov
jmp
xorb
scas
and
fisttpll
mov
dec
and
jne
sbb
icebp
daa
pop
or
lods
addb
mov
in
lock
pop
inc
add
jae
mov
sbb
pop
pop
jbe
das
cli
adc
pusha
addr16
dec
call
nop
add
aaa
fsts
sub
pop
xor
dec
lret
mov
and
push
jns
jmp
sbb
outsb
sahf
add
xor
jb
int3
jle
arpl
fdivs
xchg
mov
cld
insl
push
icebp
scas
imul
div
sbb
aas
or
lds
push
rcrl
mov
lahf
pop
insl
mov
xorb
daa
cmp
mov
mov
lea
or
add
jne
repz
rcll
in
aas
pop
stos
push
mov
xchg
add
xor
and
ret
sbb
pop
and
and
fistl
shr
int
inc
fistps
les
sub
or
cmpsb
add
mov
mov
fsubr
sbb
xor
cmpsb
pop
xor
xchg
inc
sbb
and
adc
bound
js
hlt
inc
or
sbb
dec
imul
arpl
stos
test
and
mov
add
jne
cmp
mov
jle
inc
jbe
add
icebp
stc
ret
data16
xor
idivb
pop
sbb
imul
jecxz
aas
mov
pop
gs
aaa
out
test
enter
xor
dec
ljmp
call
enter
hlt
dec
add
loope
mov
sti
xor
rcrb
mov
inc
add
int
movsl
xlat
mov
or
sbb
push
cmpsl
or
iret
mov
xchg
mov
jo
pop
out
enter
mov
cmc
inc
jecxz
adc
mov
or
xchg
ja
mov
mov
movsl
sbbb
add
insb
mov
aad
pop
dec
xchg
imul
mov
rcrb
pop
lods
add
cmp
fst
jns
inc
inc
pop
out
sarl
jge
mov
xchg
pop
mov
pop
mov
mov
mov
movsb
add
add
xor
inc
xorb
shrb
sarb
fidivs
sar
sbb
loope
or
add
mulb
aad
dec
test
scas
or
andb
mov
jl
pop
inc
dec
sbbb
mov
lds
daa
mov
sub
mov
popf
inc
sbb
or
xor
push
sub
imul
push
ljmp
bnd
jne
in
mov
imul
stos
idivl
js
dec
pop
loop
xor
lods
aam
aaa
inc
outsl
lret
test
xchg
mov
or
das
mov
push
imul
jmp
xchg
jae
or
stos
mov
in
movb
fisttpl
outsl
in
and
add
or
adc
or
xor
lds
sbb
pop
scas
pop
jnp
pcmpeqw
test
xchg
xlat
push
div
arpl
dec
mov
xchg
jge
test
inc
push
mov
lea
or
sbbl
popf
lret
scas
ret
cs
mov
les
popa
fcoml
popf
dec
sbb
pusha
ret
fs
xchg
loopne
pop
sub
out
xchg
mov
sbb
dec
pop
inc
mov
mov
aam
fildl
push
and
mov
or
adcl
orb
subb
fwait
adc
dec
lock
fdivp
mov
inc
in
scas
shrl
mov
push
ret
rcll
stos
sahf
sub
add
adc
sbb
mov
mov
popf
fmuls
jmp
push
scas
jno
push
filds
orl
pop
or
push
popf
cmpsb
pop
ljmp
xchg
sub
enter
rcll
xchg
lcall
sub
push
subb
or
cmp
push
mov
and
dec
icebp
fdivl
bound
ss
popf
push
mov
sbbl
testl
repz
mov
mov
out
addl
or
sahf
push
fcoml
xchg
insl
push
sub
mov
pop
adc
test
xchg
mov
and
aam
call
test
add
xchg
subl
jmp
scas
int3
lea
mov
shlb
out
loope,pt
gs
fidivrs
push
cli
mov
addr16
add
xchg
addb
test
inc
stos
mov
stc
je
add
fsub
test
ret
dec
std
mov
aad
xor
push
cld
enter
add
pop
js
or
test
xchg
xlat
jbe
xchg
pop
pop
push
push
ja
xchg
stos
ja
loopne
pop
mov
std
push
andl
push
jmp
mov
mov
xorl
cltd
cmp
push
outsb
inc
into
cltd
adc
sbbl
or
int
test
sbb
roll
hlt
cmp
mov
imul
mov
jge
sbbl
fsubrl
jbe
mov
jge
push
xchg
dec
jns
pop
pop
test
popf
dec
adc
sbb
sbb
dec
leave
xor
lds
cmp
mov
scas
adc
pop
dec
push
and
add
shll
lods
and
arpl
jmp
mov
push
stos
sbb
popa
lods
and
test
dec
dec
cld
in
inc
int3
and
add
call
in
pop
xchg
xchg
pop
cs
mov
mov
sub
push
xor
push
out
push
fisttpl
xorb
mov
aaa
push
arpl
sbb
loop
jmp
mov
fs
cwtl
pusha
cmc
inc
and
sbb
or
pop
mov
push
and
aaa
addr16
inc
pop
mov
addr16
icebp
imul
sbb
es
cmp
inc
cltd
dec
push
add
cmp
ret
dec
pop
test
ljmp
test
and
js
test
mov
push
outsb
rcrb
movsl
xchg
and
or
inc
xor
xchg
and
or
test
sbb
movsb
ljmp
fimuls
mov
lods
mov
jmp
xor
inc
xorps
add
inc
lret
sarl
inc
test
lea
scas
int3
adc
inc
jmp
int3
enter
testb
lea
cmpsb
mov
ret
stos
stc
jns
sbb
or
repnz
and
dec
mov
aaa
mov
push
fnstsw
mov
mov
pop
xchg
push
and
xor
sbb
cld
fidivs
cmp
stc
push
inc
rol
adc
xor
enter
ljmp
push
sarl
sbb
xor
jae
lahf
mov
stos
ja
dec
inc
add
xchg
mov
or
push
and
movups
fldl
push
mov
cmc
and
adcb
jle
jbe
pop
cmpsb
sbb
insl
xchg
push
mov
cmpsb
es
mov
fisubs
sbb
mov
pop
arpl
lcall
mov
aaa
mov
or
popa
or
push
inc
pop
and
pop
sbb
icebp
lret
push
dec
jecxz
in
push
push
movsl
int3
test
lcall
mov
or
push
fwait
into
rcll
xchg
aam
pop
aad
imul
sbb
fucomi
aaa
sti
popa
push
add
sbb
or
divl
jnp
inc
sbb
and
xchg
xlat
fcomps
inc
nop
ljmp
cs
aam
mov
cmp
outsb
std
movsl
push
pushf
loope
or
adc
or
rolb
mov
push
ficompl
out
fdivs
xor
nop
inc
push
popa
mov
mov
bound
out
push
inc
add
sub
stos
push
shll
sbb
sbbb
daa
inc
in
cltd
sub
mov
cmp
xchg
and
inc
cmp
cli
inc
insb
dec
ret
pop
dec
cltd
sub
cltd
test
cmp
pop
sbb
inc
dec
in
push
fbstp
sbb
or
loopne
scas
mov
int
clc
jmp
xchg
popa
cmp
enter
mov
pop
das
jne
ret
add
add
adcl
popa
inc
out
mov
gs
out
xor
lahf
and
xchg
stos
in
adc
imul
rcl
nop
jp
jno
jg
imul
aad
sub
inc
mov
mov
push
test
or
in
jecxz
pop
imul
clc
leave
jnp
fisubs
mov
mov
sahf
inc
push
jb
push
lock
add
fcmovne
and
add
mov
ja
nop
adc
cmp
out
outsl
cmpl
fs
aas
daa
arpl
and
xchg
rol
cmp
jp
inc
and
inc
jg
sbb
dec
leave
mov
mov
pop
insb
inc
icebp
sub
arpl
xor
movsb
push
cmp
leave
cltd
push
mov
outsl
xor
inc
lds
popf
sub
arpl
sbb
pop
cmp
test
xchg
pop
iret
adc
dec
cmpsb
fwait
xor
testb
addl
mov
sbb
out
push
arpl
aas
push
icebp
and
inc
push
cmc
adc
push
rorl
dec
mov
cmp
lods
push
outsl
xchg
adc
sub
inc
negb
cld
loopne
stos
mov
aad
cli
rcrl
and
test
orl
pusha
fs
mov
scas
add
sub
push
jmp
xchg
in
movsb
pop
xor
push
int3
mov
gs
stos
sub
inc
test
mov
dec
or
jno
mov
movb
repz
push
nop
aas
loope
xchg
sbb
push
adc
push
cmp
cmpb
loope
sbb
push
sbb
popf
push
and
mov
push
fistl
out
adc
pop
push
push
sub
cmc
sbb
xlat
imulb
push
dec
xor
mov
inc
in
mov
cmpsb
sub
test
aam
mov
xor
sbb
cld
xor
push
or
pop
ret
lds
adc
cli
fdivs
scas
ja
jle
das
out
dec
adcb
addr16
mov
shrb
or
pop
dec
sub
testb
ds
add
cmpsb
insl
sbb
xor
mov
sbbl
mov
lds
es
adc
pop
jg
or
push
xorl
mov
aas
test
in
sarb
jp
cltd
pop
cld
push
lcall
push
lock
jnp
scas
add
add
mov
ljmp
fs
mov
jp
mov
xor
std
push
jbe
orb
jo
sub
jecxz
xchg
xchg
add
movsb
sbb
sahf
repnz
pop
dec
sbb
jge
inc
testb
jo
in
sbb
das
and
mov
out
pop
pop
inc
rcll
movsl
or
cmp
std
dec
push
ret
inc
add
mov
sub
mov
fnstsw
ret
popa
addr16
shrl
fiadds
sbb
mov
icebp
adc
inc
xlat
stos
icebp
pop
mov
scas
sahf
mov
mov
cmp
or
sub
cmp
cmpsb
popf
mov
fcomi
cmc
xchg
jno
fnstenv
mov
sahf
cmp
add
adcb
push
sahf
adc
jmp
inc
rcrl
leave
shl
mov
out
gs
rorl
lock
cmpsb
push
sub
das
pop
scas
push
sbb
cmp
mov
push
xchg
aaa
xchg
icebp
jbe
and
pop
leave
ss
sbb
xchg
adc
ljmp
jne
mov
xchg
in
mov
aas
shrb
mov
or
or
xchg
jl
clc
out
cmp
push
sub
pop
jecxz
xchg
and
pop
lcall
xor
xor
jl
scas
cli
cmc
sub
mov
mov
rorb
mov
or
dec
mov
push
jl
test
mov
rol
xchg
sub
push
js
loope
sub
cmovnp
imul
cltd
jp
ljmp
fimuls
dec
in
std
or
outsb
clc
ds
dec
or
cmp
mul
xchg
mov
add
xor
lock
xchg
bound
jno
ficomps
pop
es
pop
fistps
stos
jle
les
sbb
inc
mov
in
popa
scas
and
dec
push
add
and
push
rol
sub
cmpsb
push
data16
xor
out
cmp
sbbb
in
add
add
js
aad
xchg
cwtl
popf
dec
insl
inc
cmp
mov
mov
pop
iret
test
lahf
pusha
lea
mov
je
add
in
mov
and
lds
and
gs
inc
cmpsb
xor
clc
xchg
stos
fcoml
jmp
pop
jns
pop
xorl
push
movswl
imul
aas
cli
mov
inc
inc
xor
addr16
cld
shrl
shufps
jne
arpl
mov
arpl
xchg
mov
sbb
into
adc
aad
jb
loop
inc
popf
push
mov
aaa
test
push
jle
pushl
and
sub
cmc
cld
sbb
sbb
jo
lock
mov
add
mov
inc
xchg
adc
push
sahf
adc
les
sbb
int
leave
push
fcmovnb
xorb
pop
sbb
insl
push
lock
push
mov
sar
pop
into
add
and
popa
data16
lods
mov
addr16
test
cmpsb
mov
stos
shll
rorb
das
or
nop
nop
mov
cmpsb
mov
inc
lahf
sbb
mov
inc
push
in
and
dec
subb
pushl
sbb
mov
jmp
jl
pop
int
aaa
fs
mov
push
cmpsb
xor
cs
icebp
fistpl
daa
mov
cli
loope
cli
ficoms
shrl
dec
pusha
repz
lds
ds
add
jns
add
push
popf
rclb
push
push
push
mov
add
sbb
cmc
addr16
pushf
push
rcrl
mov
fs
or
push
pusha
fmull
lcall
cmpl
and
sbb
imul
fnstcw
sti
xor
jnp
cld
cli
fisubrs
aad
pop
xchg
add
push
scas
push
leave
pusha
shrl
lods
sub
shrb
out
add
and
dec
cmp
push
popf
imul
fstl
xor
fs
xlat
dec
dec
mov
jno
mov
imul
enter
fistl
push
and
dec
ja
sub
loop
les
scas
sbb
or
add
divb
cltd
outsl
dec
pop
or
xchg
cmc
int
pop
fmull
test
stc
test
cld
test
dec
inc
int3
xchg
mov
call
xor
dec
pop
xchg
ret
xchg
pop
jp
loop
xor
cld
fcmovnbe
push
out
pop
sub
or
int3
insb
dec
mov
mov
dec
push
sbb
mov
lock
mov
adc
jl
mov
push
mov
in
and
and
push
mov
jae
sub
add
test
test
je
ja
mov
cwtl
or
dec
in
popa
mov
cmc
mov
mov
sarb
fnstcw
stc
rorb
inc
jb
pop
xorl
sub
mov
mov
ret
sbb
aam
xchg
popf
pop
xor
lret
pop
into
popf
jnp
or
gs
mov
sbb
sub
or
ljmp
test
push
outsb
jns
mov
cmc
push
xor
test
arpl
jno
jno
pop
cwtl
gs
js
imulb
jecxz
pop
mov
rcll
and
mov
inc
sbb
ljmp
nop
std
mov
jp
out
pop
sahf
pop
mov
in
outsb
ljmp
cmpsl
call
mov
aas
andb
add
sbb
fsubrs
sbb
inc
or
jmp
in
ror
and
jbe
pop
push
cmp
jne
mov
fldenv
stos
or
rcrb
enter
cli
loop
out
lds
mov
inc
xchg
in
push
jmp
jne
pop
imull
in
or
push
clc
std
push
popf
mov
sub
dec
sbb
cmpsl
lock
rcrl
sub
mov
test
sub
fcmove
int
lea
sub
mov
inc
lods
orl
pop
in
ds
mov
push
scas
dec
jnp
pop
scas
aaa
rcll
or
inc
pop
jp
subl
pushf
stos
inc
idivb
movsb
rcll
cwtl
xchg
inc
test
or
fmull
add
xorl
daa
adc
int3
add
sahf
shl
addr16
mov
jbe
xor
nop
cltd
icebp
ljmp
lds
scas
scas
sub
call
sbb
mov
cltd
fcmove
lahf
inc
ret
jmp
hlt
pushf
pop
push
sahf
sahf
sbb
and
movsl
sbb
test
repnz
mov
xor
aaa
lcall
jbe
insl
cmpsb
cmp
fsubr
mov
xchg
orl
mov
jmp
lods
push
clc
xchg
add
xor
mov
repnz
inc
loope
dec
int
leave
out
pop
cmp
bound
jg
jmp
pop
jns
popf
xchg
or
push
add
ds
sahf
adc
jnp
sub
sbbl
fdivl
mov
test
imul
iret
sbb
mov
or
pop
cmp
popf
xchg
les
add
in
fistpl
jne
stc
les
sub
movsl
insb
scas
mov
andb
fsubrs
test
mov
push
mov
scas
mov
jae
aaa
inc
and
insb
sub
call
jb
divb
pop
cmp
mov
or
xchg
not
scas
out
mov
out
das
cwtl
lods
cmpsl
stos
cli
jg
iret
pop
cwtl
sub
daa
cmp
pushf
and
movsl
add
loope
sbb
jg
sub
stos
lds
cmpsb
or
popa
sub
cltd
sub
xor
loope
jne
jne
xchg
and
fdivrs
test
dec
mov
jae
rorl
sub
push
mov
int
push
add
jl
arpl
addr16
push
lds
or
or
movb
and
mov
sbb
lods
test
dec
pop
add
add
jo
pop
out
jne
mov
stc
cmpsl
push
addr16
mov
insl
aaa
mov
cmp
sub
pop
push
sbb
sub
mov
pop
mov
dec
jmp
mov
daa
fwait
cmp
and
inc
pop
outsb
mov
fdecstp
jle
sbb
ja
dec
out
stos
aam
push
mov
push
lahf
addr16
js
cmp
ja
mov
mov
push
out
in
outsb
cmovns
int3
push
into
cmpsb
xchg
popa
iret
cmp
push
push
push
pop
inc
inc
xor
leave
push
testl
or
popf
jne
rcrb
insb
inc
test
idivl
mov
mov
adc
inc
push
insb
cmpb
fisttpll
cld
loope
cwtl
xchg
fdivrs
add
insb
in
jecxz,pn
mov
in
sbb
jecxz
jmp
dec
test
inc
lret
stos
xchg
mov
aaa
inc
jge
xor
cmp
sar
xor
push
jge
mov
add
push
out
cmp
jne
or
dec
lea
ja
into
cmc
mov
mov
out
pop
add
mov
push
dec
rorb
outsb
dec
mov
movsl
sub
xchg
jnp
inc
call
jge
or
popa
mov
stc
out
pop
push
pop
xchg
in
sbb
in
sub
stos
jle
or
jnp
sbb
int
add
and
mov
push
fcompl
mov
scas
push
inc
lds
sbb
cmc
jmp
dec
and
daa
mov
fsubp
popa
xchg
out
ss
sti
sbb
xor
or
jne
test
andl
inc
and
addr16
lahf
mov
rcll
dec
sub
cwtl
mov
jmp
add
jne
out
mov
xorb
push
imul
sbb
mov
mov
hlt
jl
pop
xchg
xor
jmp
inc
mov
les
insb
imul
popf
mov
insl
push
imul
xchg
jle
mov
or
adc
stos
int
loop
cmp
sub
push
jg
in
xor
or
lock
adc
stc
pop
jo
fwait
bound
lret
jbe
xchg
mov
lock
mov
notb
add
enter
adcl
in
lcall
lret
call
mov
xorb
cmpsb
in
into
pop
xorl
hlt
mov
sbb
cli
pop
sub
ljmp
loopne
idivl
es
xor
pushf
mov
fldl
out
cmp
xor
and
jnp
test
mov
sbb
jmp
adc
jecxz
fxch
fdivrp
negl
call
push
sub
xchg
add
psubw
push
dec
inc
ss
add
sahf
jbe
loope
dec
test
xchg
add
and
test
push
jmp
not
shlb
orb
pop
cmp
mov
fs
sbb
int
pop
mov
movl
jne
jle
inc
out
jle
or
dec
cld
xor
ss
adc
ljmp
sub
mov
push
cwtl
mov
lret
cltd
test
cmp
sbb
sub
push
jge
cli
push
in
aas
xchg
lret
cmpl
push
pop
out
push
jbe
loope
mov
adc
lods
inc
les
or
xor
jle
scas
jne
mov
cltd
inc
push
sbb
mov
or
sbb
clc
add
add
loopne
sbb
stc
sbbb
lea
sti
and
gs
xchg
xchg
sbb
pop
mov
repz
mov
or
sbb
jmp
shl
testb
mov
testl
push
insl
dec
mov
enter
push
and
stc
push
inc
repnz
xor
adc
inc
enter
mov
cmp
clc
lds
popf
mov
rcl
or
pop
xchg
cmpsl
mov
into
push
or
add
into
xor
jmp
push
sbb
adc
xchg
outsl
fildl
xchg
dec
dec
cs
sbb
mov
lret
dec
dec
add
push
xor
dec
stc
stc
xchg
frstor
daa
jecxz
lahf
aaa
add
dec
push
test
jl
mov
imul
lret
mov
int3
inc
mov
int
add
lcall
push
jge
xor
pop
sbb
pop
jl
pop
or
push
mov
adc
inc
in
push
mov
jne
pop
mov
jbe
or
jo
mov
push
leave
adc
shrl
jg
pop
cmc
xor
outsb
and
sub
adc
addr16
and
add
mov
dec
xor
xchg
dec
jns
test
dec
or
mov
or
ret
cmp
and
mov
jg
iret
mov
xor
mov
inc
imul
sbb
push
xor
inc
movsl
push
mov
andb
gs
ss
stos
xlat
das
mov
lret
add
nop
push
ljmp
call
xlat
add
xchg
inc
inc
push
mov
jmp
mov
pop
ja
or
cwtl
addr16
ficomps
es
and
sbb
sub
cmc
or
add
xor
addr16
frstor
mov
loopne
mov
icebp
add
sbb
mov
dec
pop
ja
jmp
ds
cmp
mov
repz
popl
pop
sub
fildll
insb
lock
sub
sahf
lcall
lret
xchg
cltd
sbb
and
dec
pop
inc
sahf
sahf
jno
mov
and
ret
xor
push
inc
fsts
lods
jge
add
sbb
mov
mov
dec
lea
sub
outsb
jecxz
sbb
and
bnd
mov
mov
shll
cld
nop
insl
or
inc
les
cmp
jo
mov
in
out
in
jge
aaa
lahf
test
cmp
imul
mov
mov
lret
xor
daa
cmp
pop
mov
cld
out
test
dec
cmp
add
pusha
jbe
fidivs
pushl
mov
out
lods
aas
pop
cld
mov
pop
push
pop
inc
cmp
mov
ret
movsb
dec
add
add
fwait
daa
pop
dec
cmp
xor
inc
fisubrl
or
pop
cs
inc
sub
mov
cmc
pop
outsl
sub
and
adc
scas
inc
idivb
jno
sub
outsl
in
sahf
pop
outsb
sub
or
inc
lcall
ret
out
mov
fcmove
mov
lods
add
movsb
xchg
pushf
xchg
icebp
pop
pop
mov
insb
lods
push
shrb
jae
inc
inc
mov
sbb
lods
inc
or
push
js
orb
movsb
jge
mov
or
je
data16
mov
test
ret
roll
jg
daa
shlb
add
cli
cmp
outsb
dec
add
cmpsb
adc
dec
xchg
mov
dec
bound
outsb
rolb
jmp
push
sub
lret
mov
icebp
pop
or
fnsave
push
daa
mov
sbbb
xor
push
or
les
and
stos
mov
add
rcrb
dec
movsb
xchg
pop
mov
je
repnz
sbb
or
mov
mov
pop
addb
adc
out
repnz
adc
pop
mov
mov
xor
es
clc
mov
test
add
inc
and
inc
es
fdivrl
mov
loope
and
xor
xor
leave
scas
push
add
add
in
sbb
scas
sarb
cs
sub
push
push
in
xchg
mov
jl
mov
cmc
push
pop
scas
sbb
pop
xchg
push
or
xor
push
xor
loop
into
add
sbb
cmp
dec
popl
push
mov
push
dec
jp
inc
je
xchg
and
psubq
stc
lcall
push
mov
mov
xchg
jmp
xchg
jno
or
push
mov
cltd
inc
pop
mov
in
sub
les
lret
ja
dec
sub
in
push
popa
adc
inc
mov
leave
in
test
or
xchg
scas
test
mov
hlt
sbb
orb
nop
cltd
mov
push
imul
mov
add
popf
mov
add
inc
jmp
adc
push
jecxz
jno
out
out
iret
pop
dec
adc
add
push
sbb
push
arpl
rorl
iret
xor
add
or
mov
pop
sub
mov
dec
xor
xorb
out
adcb
addl
stos
mov
sbb
and
cmp
rol
imul
mov
jp
xchg
sub
lea
mov
faddl
add
pop
and
pop
aas
mov
out
mov
in
scas
out
push
push
adcl
inc
hlt
aaa
in
das
and
js
icebp
pop
fldpi
lret
test
mov
sub
jge
js
or
mov
inc
adcb
mov
int3
out
fsubl
ds
xchg
ja
addr16
and
cmpb
xchg
clc
mov
out
or
mov
push
out
xchg
cmp
imul
sbb
jo
dec
mov
subl
cs
sbbb
jmp
adc
pop
dec
data16
cmc
test
je
or
stos
insb
push
sbbl
xchg
sbb
jns
stc
jp
int
les
push
std
mov
movsb
adc
mov
xchg
push
push
out
stc
add
movl
scas
mov
mov
rorl
les
add
cltd
xchg
mov
sbbl
insb
xor
push
pop
adc
add
dec
neg
mov
mov
repz
cli
xor
cltd
lahf
insl
dec
nop
mov
jae
divl
push
or
sbb
inc
sub
add
lods
lods
daa
jge
sbb
adc
fbstp
or
dec
mov
lods
pusha
adc
jns
pop
xor
cmp
test
bound
push
push
cs
lea
ds
lahf
fdiv
jle
arpl
xchg
popf
in
mov
xchg
inc
pop
jae
les
adc
jge
inc
push
imul
sbb
and
mov
push
mov
aaa
imul
loop
in
pusha
and
cld
loop
lock
inc
insb
andb
lea
out
or
or
dec
std
pop
sbbl
data16
divb
dec
ss
cmp
out
cld
jno
rcll
test
cmp
sub
add
stos
xchg
lods
test
fstpt
mov
pop
cwtl
add
jae
or
mov
sahf
loope
push
out
fnstenv
inc
add
mov
add
sub
jo
lret
loopne
mov
mov
scas
arpl
push
aas
push
lcall
repz
jl
add
shll
inc
sti
or
popf
inc
scas
cltd
aas
mov
dec
pop
cmp
sbb
jmp
push
sbb
and
sbb
mov
xchg
out
add
movsl
dec
inc
pop
push
inc
mov
add
fildl
fsubs
mov
in
mov
aaa
pushf
inc
sahf
mov
and
sahf
mov
xor
cmpb
add
int
sbb
mov
cmp
mov
cltd
rorb
jecxz
in
or
cmpl
mov
cmp
out
sub
lcall
out
ficomps
jb
lcall
adc
sbb
inc
stos
mov
test
insl
jnp
fs
jbe
and
test
or
jae
out
popa
mov
push
xchg
jnp
out
sbb
jle
xchg
pop
xor
pop
arpl
xor
mov
js
sbb
push
repnz
mov
divb
test
push
mov
sub
sbb
mov
dec
cli
outsl
cltd
xchg
gs
stos
jecxz
mov
addr16
adc
sti
lahf
mov
xchg
cmpsb
out
inc
mov
adc
mov
push
mov
mov
arpl
mov
lea
into
cmc
scas
mov
int
mov
in
inc
mov
pop
inc
outsb
ds
add
push
push
mov
mov
decb
mov
fnstenv
xchg
jge
movb
and
sbb
sbbl
jge
or
and
bound
sbb
int
repz
mov
pop
inc
mov
cmpsb
es
mov
cltd
push
sbb
ret
mov
adc
aam
inc
pop
nop
sbb
cmp
sbb
inc
adc
xor
xor
adc
dec
xor
mov
push
inc
sbb
les
mov
popa
dec
dec
or
adc
inc
sti
inc
xor
leave
push
mov
mov
cmp
adc
sbb
push
rcrb
fimull
fisubl
or
cmpsb
inc
mov
enter
mov
sbb
fs
cmp
es
push
nop
aas
push
ja
inc
or
push
pop
daa
sub
shll
lock
cli
inc
pop
lods
cld
cmp
sahf
js
or
sub
jae
mov
dec
jl
sbb
jno
inc
cmc
out
or
xor
sbb
outsl
pop
ja
and
and
leave
lea
jge
xchg
idivb
mov
cmpsl
pop
mulb
xlat
jo
mov
fadd
or
xor
ljmp
jo
mov
cmp
pop
adc
jle
enter
or
pop
pop
stos
sub
faddl
sahf
dec
out
arpl
in
mov
jmp
pop
jle
iret
cmp
out
adc
mov
xchg
push
daa
mov
push
ret
loop
push
icebp
cmp
jmp
sub
and
pop
in
ficoms
mov
out
fiadds
sbb
fstpt
inc
fildll
shll
inc
sbb
ffree
addr16
jmp
sub
push
cmpsl
ljmpw
ret
lret
enter
push
fs
xorl
cmp
nop
ret
mov
push
mov
adc
mov
leave
mov
adc
js
xor
push
sub
push
cmp
xchg
loopne
aam
test
fadd
int3
xchg
out
xchg
inc
jno
jl
test
in
or
pop
aaa
dec
pop
add
or
sbb
mov
rcrl
mov
mov
mov
xchg
cli
rcll
adc
neg
popa
mov
cmc
mov
cmc
add
xor
sbb
roll
pop
sbb
ljmp
orb
inc
roll
pop
adc
and
enter
repz
cltd
gs
mov
or
data16
pop
mov
roll
push
imul
fldt
imul
arpl
enter
stos
xlat
cmp
sbb
lret
lret
test
pushf
or
and
xor
sbb
mov
inc
sbb
pushf
rorl
or
out
push
cmc
dec
xchg
cld
fs
ss
add
inc
cmp
dec
jle
out
out
jne
pop
les
mov
cmp
mov
sti
lahf
dec
sbb
xchg
sub
test
dec
dec
test
into
jmp
or
fmuls
sbb
lret
cmc
repz
pop
pushf
jns
sub
notl
orl
push
mov
pop
jle
leave
out
lds
pop
bound
pop
push
push
sub
xchg
sbb
xor
int3
outsb
rolb
sbb
and
push
subb
fldenv
data16
cmpsb
loopne
imul
cmp
cmp
xor
xchg
pop
cmp
imul
inc
add
ljmp
inc
pop
mov
sub
stos
inc
xor
cs
pusha
pop
xor
xchg
iret
cltd
popa
les
daa
xchg
out
fucom
lahf
jecxz
or
mov
add
inc
int
fmull
cmp
inc
jbe
or
stos
and
sub
add
adc
add
push
in
fcomps
xlat
sub
mov
jl
jp
cltd
or
push
outsl
mov
in
mov
sbb
push
mov
xor
sub
jno
imul
mov
or
test
push
jl
mov
cmpsl
leave
push
cmp
fbld
or
insb
add
xor
sub
lds
scas
sahf
lock
loopne
sahf
sarl
adc
ljmp
popa
into
inc
jmp
lock
add
jae
and
loop
and
jge
sub
dec
mov
mov
sbb
ret
push
dec
inc
shl
jp
xchg
adc
insw
dec
push
dec
xlat
jb
xor
sbb
je
daa
dec
xchg
adc
dec
inc
pop
or
xor
add
sub
daa
push
xlat
repnz
iret
rolb
xor
dec
pushf
out
or
lock
dec
rorl
cltd
push
leave
out
fs
hlt
jle
sti
or
dec
divb
or
mov
add
popf
pushf
xchg
jne
add
popf
sahf
and
dec
stc
sbb
push
adc
repnz
push
mov
push
lods
test
shll
jg
lds
call
adc
pop
push
mov
jae
inc
mov
lret
mov
jecxz
push
add
pusha
dec
fcomps
lret
loope
ljmp
mov
cmc
push
icebp
inc
pop
add
lea
adc
add
rorb
sub
push
leave
rep
repz
in
cltd
in
mov
jmp
mov
mov
rorb
jg
rorl
pop
test
mov
imul
jle
xor
loop
cmp
pop
and
mov
rcrb
aas
icebp
les
int3
push
cmc
add
push
fildll
loope
or
in
push
xor
jne
push
dec
jp
or
pop
gs
mulb
cmpsb
andb
lds
dec
ror
mov
es
sbb
xchg
or
mov
pop
lret
sbb
inc
dec
fdivl
mov
pop
je
outsl
cld
int
jl
xchg
inc
cmp
xchg
adc
lret
inc
push
imul
enter
sub
jl
dec
cld
out
add
mov
cmc
push
xor
lods
jle
xor
sbb
push
mov
imul
push
inc
fnstenv
lret
imul
insb
mov
push
cmpsb
loope
dec
dec
xorl
inc
test
fidivl
add
stos
pop
push
mov
cmpsl
xor
scas
jg
mov
lods
push
js
clc
xchg
xchg
push
loope
xor
xchg
push
andl
fstpl
jne
mov
or
or
out
pushl
mov
int
dec
gs
and
xchg
call
dec
ret
jecxz
std
aad
push
add
pop
fcmovbe
and
cli
test
add
adc
add
cmp
iret
loop
sub
outsb
pusha
adc
mov
inc
mov
or
sti
sub
dec
popa
sbb
xor
pushf
and
mov
cmp
test
rorl
mov
xorb
xchg
dec
rcll
adc
dec
popf
jmp
cld
dec
jbe
add
js
sub
arpl
leave
into
and
cmpsl
loopne
in
ret
cmp
cmc
and
lock
push
mov
pop
popa
mov
outsl
dec
pop
mov
mov
test
jo
sti
adcl
es
lahf
jecxz
and
pop
shll
add
mov
push
add
inc
pop
popa
add
or
roll
sbb
jnp
jl
sub
xor
fsubl
xor
xor
aaa
sbb
adc
jo
out
xor
ret
ljmp
or
push
cmpsb
xorb
or
mov
das
test
subb
cmpsb
mov
pop
fdivrs
cmpsl
jl
andl
and
ja
fldt
shlb
dec
cwtl
in
shll
jge
sahf
or
add
xchg
cld
testb
lea
xchg
mov
sahf
mov
jge
xor
mov
push
dec
clc
xlat
sub
aaa
jmp
add
jns,pt
sub
sbb
fmul
icebp
subl
mov
mov
sar
cmp
enter
push
xchg
scas
sub
call
pop
push
pop
dec
xlat
andb
jmp
sub
enter
pop
push
mov
and
ret
addl
adc
or
mov
adc
or
fcomps
movsl
or
xchg
dec
cli
adc
xchg
aaa
mov
jl
mov
daa
popf
pop
add
incl
test
fdivrs
roll
jmp
dec
push
xor
les
push
dec
push
add
mov
daa
test
xchg
and
imul
in
adc
pop
scas
pop
mov
fmuls
jle
mov
stos
nop
cli
mov
mov
fldcw
repnz
or
and
pop
mov
push
jge
int
mov
outsl
pop
or
cmc
mov
push
adc
push
inc
out
xchg
insb
roll
push
pushf
push
sbb
pop
or
pop
jno
test
pop
lods
dec
fistpll
or
push
data16
cltd
add
mov
das
cmp
jae
inc
pop
lock
mov
jns
bound
adc
and
filds
sahf
clc
jl
mov
sbb
clc
mov
add
adc
dec
cmp
stos
push
xchg
out
fcoml
jge
sti
pop
mov
sbb
pop
bnd
mov
inc
arpl
adc
push
cmc
sets
leave
jp
pop
inc
ror
and
sbb
xor
je
or
mov
pushf
cmpsb
dec
xor
dec
push
jno
inc
jae
cmp
jp
xor
or
adc
in
mov
sbb
jge
sbb
add
lea
push
pop
bnd
or
stos
or
cmp
das
ljmp
push
add
pop
lods
in
loope
out
ret
jle
inc
sub
iret
rorl
pop
int3
add
or
push
adc
outsl
xor
pop
dec
xchg
xchg
or
jp
dec
loopnew
sub
and
subl
cmpsl
sahf
iret
inc
fistl
outsb
pop
pop
loop
jne
pop
push
sbb
sbb
jno
push
fsincos
ret
mov
nop
lret
sbb
mov
imul
mov
sub
ret
adc
cltd
ret
or
ja
sbb
pop
mov
cltd
in
mov
and
push
push
in
jno
gs
sti
push
mov
or
imul
sbb
les
shrl
cltd
mov
cmpsb
in
jl
cmp
gs
fs
push
adc
xor
sbb
popa
pop
fisubl
pop
mov
push
pop
xchg
cmp
jge
push
pop
negb
sub
arpl
pop
lods
sbb
pop
fcoml
les
hlt
mov
mov
enter
push
push
jnp
leave
cmpsl
xchg
mov
mov
stc
xchg
je
sbb
cmp
xchg
jnp
call
pop
addl
dec
cli
ds
outsb
jp
aad
add
lahf
lock
decb
cmpsl
dec
add
mov
push
jno
and
push
arpl
push
shll
outsl
lods
adc
xor
idivl
push
push
add
mov
inc
sbb
lret
push
enter
movsl
mov
jno
add
pop
inc
sbb
sarb
iret
add
lahf
mov
gs
mov
sbb
js
add
test
push
daa
pop
push
mov
sbb
pushf
add
or
jp
fsubl
std
mov
add
mov
cmp
pop
fists
pop
push
fidivl
or
jge
hlt
push
dec
mov
sub
andb
adc
lret
pop
inc
sbb
inc
cmpsl
sbb
cmp
stc
pop
xor
imul
adc
xchg
out
and
inc
xchg
sbb
es
sarl
push
jge
adc
inc
cmp
addr16
mov
mov
fnstsw
lds
outsb
add
cmc
xchg
sub
xchg
mov
inc
loop
pop
push
mov
out
or
dec
mov
outsb
push
gs
shl
mov
mov
js
push
arpl
addl
mov
icebp
out
sub
pop
into
cmp
lahf
or
xchg
mov
cmpsl
and
or
and
std
inc
jb
lea
into
ret
ss
add
mov
sbb
jg
mov
cmc
sbb
dec
dec
test
aad
and
cmp
mov
fisubs
jno
pop
xchg
testb
dec
jmp
xor
xorl
push
mov
lret
gs
fsubrl
inc
or
cmpsb
insl
push
inc
cmpsl
xchg
or
out
scas
leave
xchg
out
sbbb
test
add
cwtl
xorb
cmc
or
sub
jge
lds
stc
into
sub
mov
and
inc
add
sub
mov
test
mov
adc
pusha
jge
mov
sbb
xor
cmp
inc
leave
movb
sbb
aaa
fs
mov
jle
insb
push
or
pop
cltd
sub
mov
push
add
inc
jle
push
or
dec
adc
xchg
rcrb
gs
or
imul
or
sub
hlt
push
mov
dec
xchg
sbb
out
fmul
xchg
cld
jp
xor
mov
jge
outsl
bound
rorl
mov
cmp
jg
cli
xchg
loop
in
ja
push
push
sbb
addl
movsl
sbb
movsb
les
cwtl
xlat
jnp
jl
push
lock
sbb
mov
scas
es
pop
sahf
int3
pusha
lret
enter
jmp
test
push
xor
ja
cmc
or
mov
pop
cmp
out
and
push
aad
test
lret
jbe
in
push
push
stos
adc
aas
push
addb
mov
in
les
ret
fisttpl
adc
movsl
dec
adc
cmp
pop
call
inc
pop
aad
or
mov
adcb
mov
lahf
and
ja
cmpsb
and
pop
cld
pop
fbstp
dec
and
popa
push
push
xchg
push
sbb
decl
xchg
data16
ficoms
pop
pop
scas
or
inc
outsb
mov
mov
jle
xchg
mov
pop
mov
add
or
repnz
dec
imul
mov
cmc
outsb
and
jae
or
lods
lock
dec
std
pop
push
mov
xlat
insl
xor
hlt
cmp
xor
ret
push
inc
jbe
lds
pop
jnp
xor
cwtl
out
add
push
xchg
push
sti
leave
fs
or
lahf
xor
sub
sbb
sub
mov
push
gs
ret
out
lret
sbb
dec
out
clc
pop
lods
jp
jle
and
mov
getsec
mov
out
mov
add
sbb
mov
xchg
dec
pop
pop
mov
push
or
lods
cmp
jae
ror
ds
lahf
mov
aaa
sbb
ret
fists
aaa
jl
push
or
push
add
jne
loop
xor
lock
imul
xor
lods
cmp
mov
lret
and
jge
push
mov
shll
adc
fdivrl
scas
sbb
mov
or
cmp
sbb
jae
ljmp
icebp
xchg
sahf
push
shlb
push
dec
leave
pop
sub
fwait
mov
cwtl
out
ret
pop
cmp
outsb
ljmp
mov
cmpsl
or
inc
push
add
add
data16
jnp
fists
hlt
mov
sbb
stos
aaa
cmpsb
or
mov
pop
ret
test
dec
xchg
rolb
or
bound
in
pop
ja
adc
sub
cmpsb
pushf
imul
test
jmp
loopne
mov
and
adc
adc
push
cmp
cltd
sub
mov
pop
fdivr
mov
aas
pop
ret
pop
andb
loopne
jg
inc
mov
sub
int3
inc
push
adc
or
ficoms
or
mov
and
ret
lahf
jbe
sub
pusha
jecxz
aad
cmp
popa
or
pop
jg
or
stos
push
xchg
add
sbb
sub
shll
jne
cmp
and
scas
pop
loop
sbbb
fwait
sbb
push
les
xchg
pop
repz
daa
pop
sub
loop
sub
or
lret
fmull
stc
xchg
in
cmp
testb
enter
arpl
lahf
push
mov
inc
into
lods
inc
gs
clc
dec
mov
imul
insb
cmpsl
push
push
push
sub
ret
jp
or
dec
fdiv
data16
dec
inc
cmp
sub
mov
pop
add
xor
pop
in
fwait
stos
lret
in
sbb
ret
stc
sbb
es
mov
cmpsl
popf
xlat
push
xlat
test
dec
cmp
mov
mov
add
cwtl
pusha
aam
xor
add
js
dec
mov
hlt
jo
xchg
xchg
sub
mov
lret
stos
jns
leave
sub
gs
mov
addl
subl
mov
xchg
mov
aas
inc
rolb
neg
into
mov
outsl
clc
loop
mov
lea
dec
mov
inc
cs
cmp
sbb
jne,pn
pop
cmpsb
stos
lret
out
push
nop
sbb
and
pop
flds
mov
loope
dec
out
fmul
test
mov
ret
mov
cld
mov
add
iret
jo
shlb
das
cmp
imulb
ss
add
shlb
add
mov
dec
sahf
add
sub
pop
add
xor
inc
dec
nop
dec
adc
xchg
loop
ljmp
ljmp
rclb
fcmovbe
aaa
lea
popa
out
dec
cmp
insl
lret
leave
out
mov
in
out
sub
popa
insb
ja
push
sub
mov
and
dec
xchg
stc
fidivrs
xor
mov
cli
mov
add
add
gs
adcl
rcrb
dec
mov
hlt
push
jno
test
xchg
lcall
cs
dec
jae
roll
cmpl
std
icebp
push
cmpsl
icebp
ja
sbb
daa
xlat
mov
call
inc
or
push
sarl
data16
mov
nop
loope
insb
cmc
or
jg
add
repnz
jns
add
mov
ror
xchg
cli
or
repnz
push
mov
les
out
imul
cmp
sti
jo
aas
inc
lods
and
jg
add
inc
sbb
cmpsb
mov
mov
sahf
and
jmp
lcall
sbbb
mov
pop
push
mov
push
dec
loope
mov
inc
mov
jmp
lds
add
cmp
out
repnz
xchg
lea
mov
fildl
fcompl
fisubs
and
insb
out
gs
sub
popa
rclb
dec
dec
sub
stc
inc
inc
test
push
dec
adc
in
mov
push
push
cmp
or
or
cmpl
hlt
fisttpll
cwtl
inc
push
lret
fistl
push
fists
xchg
sbb
jo
fdivp
xchg
add
mov
sbb
ja
dec
repnz
dec
sub
leave
add
fstpl
mov
adc
and
jns
hlt
and
cmp
test
adc
into
leave
or
add
popa
cmp
or
jp
frstor
ja
inc
xor
loope
aas
ljmp
sti
and
int3
sub
fnstenv
mov
pop
dec
std
sub
jae
jmp
popf
jns
popf
pop
into
adc
inc
pusha
in
sbb
add
sbb
cmc
or
mov
add
iret
iret
fwait
movsl
mov
subl
fsubrl
fiadds
jb
jge
imul
add
adc
icebp
push
stos
add
add
mov
jae
ss
imul
inc
xchg
data16
ja
inc
push
push
push
jle
inc
cwtl
out
sub
cltd
popa
push
or
mov
or
fs
sbb
xor
pop
pop
std
sbb
xor
out
or
xchg
mov
pop
inc
jp
int
mov
enter
mov
mov
das
dec
fildl
mov
das
xchg
mov
push
mov
mov
gs
aaa
mov
push
sahf
sbb
xchg
fbstp
or
jge
subl
sbb
push
or
pop
fdivl
dec
lea
mov
orb
loop
les
cmpsl
sbb
add
and
push
sbb
jge
mov
sub
hlt
and
jg
xor
xor
insl
pop
or
jne
ret
cmpl
fs
jge
jno
adc
fdivr
sbb
and
mov
inc
pop
jns
sti
inc
das
mov
lret
add
pushf
lret
test
pop
mov
lret
sbb
iret
add
add
pop
mov
imul
test
cmp
dec
ja
mov
push
sbb
sbb
icebp
mov
inc
in
icebp
das
addr16
inc
out
imul
sub
dec
test
push
enter
xchg
mov
mov
and
sbb
push
mov
push
gs
xchg
fwait
add
in
sub
or
cmc
add
jns
push
jp
or
lcall
dec
mov
push
xor
pop
xchg
stos
or
pop
and
xor
jb
sbb
arpl
or
outsb
sti
xor
inc
negl
sbb
rcrl
dec
mov
bound
aam
leave
sub
shll
testl
jnp
imul
or
xchg
or
loop
inc
sub
pop
adc
lret
push
orl
arpl
dec
in
sub
push
nop
frstor
idivb
aas
popf
lcall
xor
xchg
stos
faddl
sbb
add
add
push
xor
pop
inc
xor
dec
test
sti
mov
insl
pop
add
jne
pop
or
shll
hlt
ret
mov
insl
adcb
push
mov
bound
mov
pop
aad
rep
out
push
jne
notb
aaa
repnz
cld
xchg
and
push
or
xlat
cmpsb
fidivrl
add
gs
jne
mov
out
bnd
and
rcl
or
cld
inc
test
divb
and
lret
cmpsb
ds
jp
out
int3
sub
in
faddl
std
cli
push
sub
push
xor
xor
cmp
loopne
or
jne
cmp
hlt
sbb
hlt
mov
sarb
adc
jmp
cmpsb
mov
mul
mov
mov
pop
sub
dec
mov
repnz
jne
aaa
ljmp
cmc
ss
mov
mov
les
mov
pop
sub
clc
arpl
int
in
outsb
xor
fadds
mov
dec
call
push
dec
icebp
or
cmp
das
lds
stos
push
or
dec
mov
out
lods
leave
pop
pop
ret
or
lods
out
add
in
inc
xchg
ds
cld
sub
sub
xor
in
jns
in
dec
mov
cmp
push
out
push
xor
in
sbb
nop
jge
inc
in
cmp
add
add
das
gs
push
insb
fdivrs
cltd
dec
sbb
in
dec
ficoml
mov
inc
repz
imul
cmp
sbb
idiv
cmp
lds
xchg
push
mov
inc
scas
loop
inc
je
inc
arpl
scas
mov
scas
stos
sbb
in
negl
sti
call
out
jle
add
add
fistpl
push
sbb
sti
xor
sub
lcall
push
int3
cld
cmp
xchg
mov
popa
push
loope
fiaddl
mov
sub
fldcw
gs
or
mov
insb
addr16
cmp
lds
pop
pop
repz
sbbb
pusha
je
lahf
inc
add
add
testl
xlat
xor
sbb
xor
mov
gs
jae
xchg
dec
test
int
into
inc
movsl
mov
pop
jle
push
jno
xchg
dec
ljmp
dec
add
push
and
push
jecxz
push
pop
mov
sbb
ja
or
xchg
out
push
or
stos
cld
fsub
mulb
push
sub
and
xchg
shr
inc
pop
jno
cltd
sub
inc
cmp
bound
enter
movsl
pop
lds
icebp
add
xchg
add
out
push
pop
scas
mov
jns
push
stc
xchg
ja
lods
xor
ret
sarl
xor
xor
shlb
and
daa
cmc
mov
loop
xchg
add
push
pop
insb
jecxz
inc
mov
repnz
cmc
jg
js,pt
cmp
dec
lea
xchg
pop
mov
cmpsb
imulb
cmp
dec
xchg
dec
push
push
sbb
lcall
js
jne
lret
fs
in
js
add
xor
pop
insb
dec
icebp
jbe
inc
or
and
sub
arpl
inc
and
in
aas
fdiv
aaa
addr16
push
mov
mov
movb
add
sbb
xor
push
test
dec
add
add
cmp
sbb
into
fisubrs
pop
rorl
pop
xchg
data16
inc
pop
negl
mov
test
aaa
mov
test
sbb
fsubs
adc
mov
and
scas
push
adc
xlat
xchg
add
push
add
xchg
sbb
loopne
or
dec
jg
nop
pop
imull
mov
mov
loope
fistl
scas
or
pop
xchg
faddl
adc
inc
jne
inc
out
int
movsl
scas
bound
xor
stos
add
mov
pop
sub
and
mov
inc
js
or
shrb
inc
mov
int3
push
outsl
cmpsl
or
std
push
jae
shrb
cmp
xchg
ret
test
mov
add
sbbl
in
xor
mov
fs
push
xchg
out
xor
push
pop
and
or
andb
dec
dec
ret
cltd
movsl
divb
inc
mov
xchg
aaa
popa
sbb
push
dec
xchg
mov
xlat
jne
fisttpl
push
dec
addb
push
mov
sbb
add
movsl
push
xchg
jnp
addr16
stos
cmpsl
ja
or
cmpsb
or
loope
dec
sbb
mov
cwtl
cmc
cmp
jbe
addr16
gs
sub
jge
ja
cmc
or
add
mov
das
stos
aam
pop
sub
fldenv
int
stc
xlat
jnp
test
out
jmp
sub
stc
jg
fisttps
sbb
jnp
push
or
pop
pop
into
jno
sbb
mov
jmp
pop
sbb
pop
icebp
add
push
pop
inc
popl
or
jno
in
pop
cs
icebp
ljmp
jmp
push
or
or
dec
fsubl
add
test
jo
movsb
add
cmp
mov
rcl
add
in
xchg
cmpsl
inc
or
jne
mov
inc
sti
or
mov
mov
push
and
daa
sbb
mov
shrb
jnp
push
pop
fdivr
ljmpw
xor
push
dec
hlt
sbb
mov
xchg
sbb
add
in
movsb
leave
add
fldcw
add
in
test
jnp
and
dec
xchg
aaa
xchg
in
pop
stos
fidivs
out
hlt
push
add
test
test
in
xor
xor
aam
fsub
push
shl
adc
rol
outsl
sub
outsb
lea
aam
or
lahf
loop
fcomip
push
dec
sub
mov
xchg
pop
add
adc
mov
fs
cs
jb
bound
push
push
xchg
push
rol
mov
lods
shrl
dec
enter
daa
dec
scas
insb
mov
lods
push
es
xchg
in
inc
push
jmp
cwtl
aam
and
sbb
dec
jle
push
sbb
dec
inc
xor
test
push
mov
int
adc
mov
fdivrl
ret
push
aad
push
jne
or
jnp
xchg
xor
mov
rcrb
movsl
mov
push
pop
push
scas
mov
cmpsl
into
loopne
xchg
icebp
inc
ret
in
sbb
cs
gs
aaa
in
sahf
out
in
dec
negb
sub
cmpsl
lcall
and
push
pop
stos
inc
push
lock
xor
xor
dec
or
dec
popf
pop
push
enterw
jns
pushf
push
int3
xchg
std
jne
pop
sub
adc
dec
mov
push
jnp
push
das
test
mov
fcomps
cmp
inc
pop
inc
and
mov
inc
out
xchg
inc
sub
jmp
or
icebp
mov
push
adc
cli
or
dec
xor
pop
ds
pop
sbb
jmp
scas
hlt
sub
test
faddl
xlat
sub
out
sahf
xor
inc
push
jp
or
pop
cmp
dec
lret
stc
inc
popf
push
lock
mov
mov
out
add
ljmp
repz
add
pop
push
aaa
push
mov
mov
popf
xorb
push
push
inc
scas
xchg
push
int3
and
mov
rorb
pop
fildl
sub
jp
lock
cmc
pop
jne
pop
into
dec
pop
fcoms
scas
pusha
or
sbb
js
into
push
mov
movl
cmp
std
js
xchg
xchg
dec
lret
xchg
jp
sub
sbb
push
or
add
data16
pop
or
cld
mov
xchg
fmuls
fwait
leave
xchg
dec
enter
dec
aaa
add
inc
sbb
ret
jge
decl
push
or
lock
adc
jg
dec
cwtl
mov
or
xorb
in
push
sbb
inc
pop
push
inc
add
add
cmp
add
cmp
xchg
rcll
pop
mov
ret
adc
loopne
adcb
dec
xor
jnp
inc
pop
sub
push
inc
pop
shll
sbb
daa
pop
mov
add
popf
and
xchg
popf
add
push
xor
mov
jge
rcrl
cmp
push
xlat
add
in
movsb
adc
adc
sbb
rcrb
cmp
xor
inc
cmp
inc
xchg
inc
push
fnstsw
dec
shlb
flds
or
push
mov
ss
ja
clc
rclb
aas
outsb
push
adcl
pop
sub
mov
fsubrl
xor
add
jb
pop
incl
lock
gs
or
sbb
mov
ds
jl
xor
pop
sub
notb
int
stos
daa
dec
push
sbbl
lea
pop
out
inc
aad
or
insb
repnz
xor
sub
mov
dec
xor
lahf
ret
enter
or
fs
scas
jp
xchg
pop
xor
les
ljmp
imul
ret
js
push
mov
fmuls
int3
clc
pop
lret
sub
fwait
outsb
or
xorb
and
jp
das
mov
xor
xor
std
shl
loopne
push
pop
pop
push
mov
sahf
push
dec
test
xchg
jge
jno
sti
push
add
or
popl
add
js
andnps
roll
cmp
mov
test
cwtl
rorl
and
movsl
sbb
aad
push
dec
ret
cli
nop
js
shrb
jne
movsl
out
rolb
push
test
mov
mov
movsb
decb
push
adc
sti
push
shrb
push
mov
sbb
adc
loope
aas
jns
and
sbb
pop
add
rorb
sbb
xor
out
lret
dec
scas
inc
lahf
popf
pop
dec
ficomps
ja
mov
insb
jmp
sti
or
mov
cld
stos
insl
xor
scas
sbb
mov
sub
mov
movsb
shrb
lahf
inc
pop
sbb
ljmp
out
lds
pop
mov
jb
aaa
jge
or
jp
mov
out
xchg
mov
stc
mov
xor
or
and
lret
ficomps
nop
or
jne
xchg
addl
in
or
pop
dec
xchg
int3
sbb
jbe
adc
jo
pop
movsb
xchg
imul
shrl
sahf
or
leave
les
cmpb
xchg
jp
orb
push
int
pusha
xchg
inc
data16
add
lahf
enter
mov
dec
inc
test
flds
push
dec
and
push
pop
xor
aad
nop
mov
inc
and
mov
dec
xchg
testl
dec
mov
in
add
xchg
pop
imul
adc
leave
scas
into
ret
add
cmc
xchg
xor
mov
jg
xchg
add
push
dec
popa
inc
jmp
or
cmp
mov
aad
cltd
xchg
mov
pop
dec
and
aaa
ja
and
xchg
mov
and
jns
pop
in
enter
pop
aaa
jp
push
bound
or
xchg
enter
xor
lahf
push
mov
fstps
or
mov
or
and
sub
xchg
cmp
pop
mull
mov
adc
and
insb
gs
push
xchg
xchg
add
ret
mov
xchg
sbb
sub
mov
mov
xor
add
xchg
inc
jecxz
xor
enter
xchg
pop
mov
jb
inc
xchg
dec
adc
test
fs
add
loope
cmp
mov
mov
pop
leave
es
js
jl
push
sti
jnp
jle
add
or
pushf
data16
addb
mov
jp
mov
leave
mov
and
jo
enter
inc
popa
test
fs
lods
ret
sbb
push
push
pop
xchg
xchg
adcb
push
dec
loopne
or
enter
daa
xchg
dec
cmp
lods
xchg
xchg
mov
lods
pop
push
imul
dec
jge
or
add
inc
sub
enter
jp
les
mov
or
mov
mov
sub
sbb
out
fs
stos
orb
fsubs
cs
xchg
mov
cmpsb
mov
inc
and
aam
sub
inc
xchg
cmp
push
or
enterw
add
nop
and
mov
lock
dec
inc
popa
aas
xchg
mov
inc
mov
xor
fidivs
rcll
sbbl
sbb
and
sbb
xchg
and
jb
or
test
push
pop
xchg
sub
xchg
cmp
inc
dec
test
flds
push
jnp
popf
xchg
fcoms
lret
inc
push
dec
xchg
cli
mov
getsec
orb
xchg
add
mov
jg
xchg
adc
adcb
xchg
xchg
lea
mov
xchg
sub
mov
xchg
cmp
cltd
das
data16
aam
dec
jno
xchg
pop
sbb
dec
xchg
jns
xchg
sub
stc
pop
pushl
push
aaa
fisubl
pop
rcrl
adc
out
popf
mov
shrb
inc
cmp
popf
clc
pop
movl
push
lret
sub
mov
inc
loop
fs
movsl
jle
icebp
add
sbb
mov
pop
and
shl
jbe
cmp
push
mov
mov
xor
in
pushf
xchg
aam
mov
sarb
mov
add
rcrb
js
notb
pop
xchg
add
mov
and
mov
testb
cwtl
test
push
pop
push
xchg
mov
cmp
dec
inc
mov
add
lcall
or
xchg
xchg
push
test
xchg
sbbb
outsb
mov
in
stos
inc
dec
sbbl
mov
data16
movsl
into
ja
repz
xchg
sbb
inc
sbb
fwait
clc
xchg
repz
xchg
pop
call
test
pop
clc
mov
inc
insl
jp
xchg
jns
iret
xchg
test
std
xchg
push
ja
mov
or
push
sub
outsl
adc
or
lods
sbbb
jno
cmp
out
xchg
sub
push
mov
xchg
cmp
xchg
mov
mov
cmp
lods
lods
lret
xor
dec
cmpsl
mov
cmp
lds
lea
xchg
fdivs
mov
fldt
jo
test
test
push
add
insl
jg
or
jg
movsb
test
in
or
or
mov
adc
jg
arpl
test
cmp
xchg
and
test
jbe
cmp
push
sahf
pop
cmp
sahf
add
mov
movw
ja
jne
jecxz
xchg
lret
jge
xchg
mov
mov
pop
std
stos
imull
gs
pop
cmpsb
jb
je
inc
pop
xchg
scas
lea
and
add
sahf
xchg
xchg
xchg
mov
dec
and
int
adc
push
pop
jno
push
mov
mov
stos
lahf
flds
xchg
and
jle
pop
aas
mov
enter
cmp
or
scas
rcr
arpl
outsl
cmp
sbb
push
and
or
xchg
int3
jnp
cmp
insl
sub
cmpsl
ret
jbe
lock
mov
xchg
les
cmp
sarl
subb
lidtl
push
xchg
mov
mov
dec
arpl
or
ljmp
pop
lgs
addl
test
cmp
js
int3
fists
pushf
mov
xchg
dec
jl
push
lcall
mov
pushw
xchg
mov
or
push
test
pop
mov
mov
lea
data16
mov
fisubs
gs
gs
xchg
xor
andb
xchg
fldenv
xchg
pop
popa
rcrl
xchg
test
jbe
test
int
imul
xor
push
outsb
dec
push
mov
cwtl
inc
fdivrl
add
xchg
jle
mulb
xor
ss
or
popa
inc
ds
pop
mov
repz
add
cmp
andb
pop
sbb
add
xchg
outsb
pop
jmp
fldcw
xchg
dec
lahf
insl
push
xchg
sahf
les
loope
cltd
xchg
pusha
dec
xchg
mov
sbb
add
outsl
ss
ficoml
loopne
mov
cmc
inc
xchg
data16
and
mov
dec
in
pop
cmp
sahf
cmp
orl
jg
bound
shll
xchg
sub
lock
pop
pushf
pop
dec
test
add
cwtl
xchg
pop
pop
xchg
push
push
jecxz
dec
dec
xchg
rorb
clc
xchg
jg
lret
pop
out
mov
cmp
and
mov
lcall
add
sub
sahf
adcb
mov
ja
or
and
add
sahf
xchg
dec
rolb
xor
mov
and
gs
cmp
daa
nop
or
dec
xchg
push
add
jbe
mov
fnstsw
or
movb
sub
xchg
mov
cwtl
mov
cmpsl
inc
movsl
or
out
cmc
pop
sahf
int3
addb
mov
loope
xor
xchg
pop
xchg
push
pop
js
in
xor
sbb
and
add
shl
xchg
ret
pop
xchg
test
insb
jns
test
adc
bswap
jo
sub
insb
mov
stc
sub
gs
fwait
imul
add
dec
int
data16
mov
ja
flds
data16
jl
cld
add
stos
xor
add
cmc
xor
xor
jg
shr
loop
xchg
sbb
iret
cmp
add
mov
dec
test
push
xchg
movsl
daa
out
inc
mov
cwtl
rorb
pop
dec
subl
xchg
gs
sbb
daa
gs
ret
jno
cmp
and
into
push
add
add
pop
adc
imul
cmp
or
xor
push
mov
les
jne
stos
cmpsl
inc
push
push
mov
insl
sahf
gs
stc
inc
aad
pushf
cld
int
adc
xchg
repz
jo
pop
push
sbb
cs
jnp
jmp
cld
outsl
jne
or
inc
cmp
add
leave
flds
push
gs
push
xchg
bound
dec
mov
fbstp
rcl
mov
fwait
iret
jo
xor
fisubrs
xorl
or
lods
mov
stos
cmpl
pop
push
adc
lret
fwait
and
cmp
stos
add
ret
in
xor
test
scas
xchg
jb
test
and
mov
xchg
fwait
dec
inc
and
loope
aam
sahf
cmpsb
sbb
or
dec
jmp
mov
gs
mov
xchg
aas
or
int3
cmp
jae
xchg
iret
frstor
jmp
and
jns
data16
int
cmp
data16
nop
mov
fs
orb
gs
mov
mov
outsl
add
xchg
test
es
test
xchg
repz
mov
test
jp
pop
add
orb
cmpsl
es
outsl
andb
shlb
andb
jae
test
popf
pop
ficoms
adc
sub
fists
or
xor
mov
fbld
mov
lret
add
mov
and
lahf
aaa
xchg
ret
cmp
inc
xchg
mov
cmp
pop
pop
mov
mov
aam
gs
fbld
test
test
cmpb
mov
adc
lahf
xchg
sbb
test
push
xchg
cmp
sub
or
rorl
je
dec
mov
icebp
xor
mov
call
mov
test
inc
loope
xor
ret
scas
xchg
adc
data16
jb
pop
sbb
fldl
and
xchg
iret
push
mov
mov
dec
add
xchg
inc
test
movsb
addl
inc
xchg
sbb
popl
sbb
test
sbbb
push
adc
movsl
pop
jae
mov
call
inc
xor
insl
dec
pushf
in
orb
cmp
adc
inc
loop
bnd
xchg
ret
lret
and
xchg
sbb
inc
scas
push
xchg
push
repnz
sbb
mov
jg
pop
jecxz
icebp
les
pop
int3
sbb
push
sbb
sbbl
mov
mov
pop
movsl
xchg
xchg
xor
mov
xor
insl
mov
sbb
push
insl
sub
rolb
dec
or
aad
push
hlt
movsl
jbe
mov
xorl
dec
mov
cltd
insl
cmp
push
add
jle
rolb
mov
ficoml
pop
repnz
insl
pop
insb
pop
fwait
add
enter
rol
pop
or
inc
sbb
mov
jne
mov
mov
push
sar
mov
add
push
mov
ret
lahf
aam
mov
pop
mov
jg
dec
sbb
xchg
ror
aam
mov
cmp
cmp
mov
fiadds
pop
icebp
adc
inc
jl
mov
mov
mov
or
mov
jbe
outsl
int3
lret
aam
mov
adc
xchg
ret
mov
xor
loop
repnz
loopne
cli
mov
call
movsl
xchg
add
stc
fwait
mov
mov
lods
imul
mov
push
mov
loop
dec
aas
or
pop
xchg
lods
movsl
push
ret
adc
rorb
mov
xor
cmpsl
popf
mov
jecxz
dec
lods
pop
test
movsb
jnp
jp
dec
cmc
mov
loope
js
js,pn
push
xchg
push
and
inc
add
cli
xchg
cmp
pop
push
aas
xor
aas
outsb
fidivrs
mov
sub
cld
jbe
add
loop
repnz
repnz
mov
or
pop
jecxz
pushf
mov
adcl
int3
add
aas
mov
sbb
data16
mov
iret
mov
loope
fwait
mov
sub
leave
push
mov
mov
inc
mov
mov
lods
lods
mov
push
insl
jp
imul
push
jae
mov
jns
js
ja
movl
hlt
pop
inc
aas
xor
cmp
faddp
mov
in
mov
fwait
add
mov
fwait
lds
pop
push
aas
mov
inc
and
dec
mov
fld
sub
andb
lahf
mov
xor
inc
jl
adc
xor
xchg
jle
dec
pop
int3
pop
fwait
pop
sbb
stc
pop
jns
sub
cmpsl
pop
xchg
xchg
jg
pop
roll
jno
lods
dec
jge
jae
ljmp
ja
xchg
lds
or
loop
bound
pop
rol
dec
sbb
xchg
adc
loop
add
out
sarb
mov
cld
mov
cmc
adc
mov
sbb
mov
mov
sub
cmpsl
cmp
cwtl
push
push
sbb
cwtl
arpl
xor
icebp
pop
xor
nop
pop
out
pop
or
sbb
inc
and
pop
outsl
mov
jbe
jne
fs
outsb
int3
jb
mov
js
ja
ja
negb
and
imul
shlb
mov
aad
adc
iret
sbb
test
adc
movl
push
mov
inc
test
pop
push
adc
and
inc
push
mov
lods
sbb
lods
cmp
mov
imul
aaa
mov
and
imul
adc
pop
adc
xor
mov
push
pop
iret
pop
jg
pop
jle
movsl
jge
sub
mov
cli
mov
fstps
inc
xor
adc
pop
mov
pop
adc
pop
pop
out
ds
sub
inc
mov
pop
pop
inc
enter
cmp
mov
pop
mov
ss
aad
push
repnz
ret
adc
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
bound
mov
loop
bound
cmp
loopne
pusha
insl
daa
jg
ja
ja
ja
push
push
jl
mov
ja
ja
ja
xchg
or
xchg
lods
and
mov
mov
mov
or
sub
lret
cmp
test
idivl
xchg
cmp
cmpsl
movsl
popf
les
fwait
in
adc
adc
xchg
and
adc
lods
out
lods
cs
sub
sub
js
mov
daa
push
xchg
shrl
insb
push
imul
jns
js
ja
ja
ja
ja
ja
xchg
push
fwait
int3
jge
pop
sar
mov
dec
mov
movsl
inc
jae
mov
test
ret
cmp
add
sarl
cmp
add
xorb
add
ja
ja
ja
ficoms
popf
pop
pop
push
pop
fstl
popf
pop
pop
pop
sbb
inc
fcompl
fcmovnb
fwait
pop
sbb
fcmovb
lcall
mov
or
dec
mov
test
add
xchg
jge
push
push
inc
adc
loop
repnz
call
mov
test
les
je
ret
xor
xor
icebp
pushf
fsubl
pop
sub
fld
sbb
out
in
jne
iret
or
ret
add
int3
lahf
aam
mov
pop
ds
inc
push
test
sti
cmp
xor
fwait
xor
mov
bound
pop
push
pop
rclb
pop
fistps
mov
push
or
dec
fcmovb
sbb
cltd
sbb
loope
sub
cmpsb
xor
inc
mov
fs
rep
mov
and
adc
cmpb
cmp
int3
pop
fcmovnb
pop
stos
sub
test
or
xchg
pop
jbe
fcmovnbe
gs
mov
inc
outsl
and
xor
cmp
aaa
sahf
cmp
cmp
cld
cmp
jns
fidivl
addr16
cmp
push
jge
sbb
fs
jecxz
push
ja
cmp
rorl
pop
and
mov
push
pop
jle
in
lods
jl
sti
lods
jnp
lret
lods
leave
insl
dec
mov
sub
xchg
mov
add
imul
pop
inc
pop
call
aas
cmp
popf
lods
sbb
jle
cli
sbb
enter
lods
daa
lods
cmpsb
cs
xor
xor
mov
bound
mov
loopne
nop
cmp
cmp
cmp
pop
insl
jns
dec
ja
ja
ja
ja
ja
ja
ja
addr16
pushf
sbbb
loope
mov
and
shll
add
mov
ficoms
in
pop
cld
pop
or
dec
pop
mov
fsts
sbb
pop
pop
xchg
pop
or
jg
pop
xchg
aas
ret
mov
lods
cs
insb
sbb
mov
mov
call
pop
pop
testb
hlt
sbb
sbb
cmp
push
dec
rcrl
lahf
pop
outsb
cld
mov
mov
imul
mov
mov
mov
movsl
data16
mov
and
inc
test
loopne
and
fisubrl
sub
mov
fnstcw
sub
negb
add
addl
push
mov
inc
mov
and
pop
pop
mov
push
insl
mov
dec
stos
pop
mov
jge
outsb
pop
ja
ja
sbbl
shll
pop
mov
adc
inc
add
mov
mov
loope
mov
mov
fidivrl
or
ja
out
jp
mov
push
push
rcll
ret
mov
mov
std
mov
or
fwait
sbb
mov
stc
pop
pop
pop
mov
pop
xchg
xor
pop
inc
aas
sbbl
loope
popa
mov
inc
sbb
cs
lea
fcoml
insb
pop
ficoml
sub
imul
mov
aaa
ss
xor
xor
xor
sub
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
xor
cs
cmp
adc
shlb
mov
adc
or
pop
mov
mov
mov
push
mov
dec
adc
xorl
xor
cmp
cmp
cmp
cmp
pushf
call
pop
sbb
fwait
lahf
rcr
test
or
jecxz
aas
adc
andb
pushf
cmp
test
daa
pop
aad
jg
pop
add
ret
incb
add
inc
rolb
pop
add
fistpll
adc
add
mov
mov
mov
xor
ss
cmp
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
roll
xchg
cmpsl
push
jae
dec
pop
insl
in
push
jns
js
ja
push
call
sarb
mov
sbb
cltd
lds
test
jecxz
sarl
ja
mov
data16
pop
ja
idivb
std
ja
ja
ja
ja
ja
addr16
inc
loope
push
fs
daa
pop
movb
and
pop
mov
and
jo
iret
fimuls
mov
or
mov
cltd
mov
fcmovbe
jp
xor
andl
xor
rclb
pop
jg
ficoms
ds
fstl
in
pop
dec
pop
fcmovnu
xorl
mov
inc
add
outsb
dec
je
mov
ret
jb
adc
mov
mov
sbb
mov
xchg
data16
adc
add
add
and
and
mov
in
ja
ja
ja
ja
sub
ret
cwtl
ret
jecxz
ss
mov
and
nop
ja
ja
ja
ja
ja
ja
xchg
repnz
fimull
lahf
mov
test
movsb
dec
orb
outsl
xchg
push
inc
rclb
ret
cmpsb
mov
mov
lods
xchg
jno
outsb
pop
adc
lahf
fsubrp
mov
mov
mov
mov
mov
xor
mov
in
daa
adc
xchg
test
mov
mov
mov
lods
lods
mov
or
pop
sbb
push
add
jl
pop
mov
adc
inc
mov
mov
mov
xor
cmc
loop
jge
cmp
cmp
pop
imul
pop
mov
movb
movb
jge
or
popf
lods
pop
sbb
cld
mov
inc
popa
xor
xor
push
jns,pn
sbb
xor
cmp
pop
js
mov
push
shll
xor
mov
push
or
cmpsl
mov
pop
out
aad
mov
daa
pop
rcr
popa
mov
out
mov
add
push
push
inc
fwait
inc
sbb
inc
adc
push
pop
push
loop
mov
mov
pop
fs
mov
adc
mov
push
popf
or
dec
or
cmp
jb
mov
stos
mov
add
pusha
fwait
mov
sahf
cmp
jl
mov
inc
push
shrl
scas
or
mov
movsl
insb
loop
repnz
and
xor
cmp
fistpll
mov
in
dec
sbb
adc
cmp
lds
ret
mov
imul
test
mov
sbb
cltd
jmp
xchg
jg
icebp
pop
cmc
test
cwtl
pop
negl
push
push
arpl
cs
mov
push
jns
dec
ja
addr16
arpl
out
jae
andl
std
ret
fstps
lods
addr16
mov
repz
ja
pop
push
mov
sbb
dec
xchg
or
push
fiadds
in
loopne
loope
loopne
test
pop
int
sbb
jge
outsb
jg
insl
out
jl
addl
pop
mov
into
int3
lods
aam
mov
xchg
jg
stc
aam
mov
xchg
jns
imul
repnz
dec
ss
ret
rorl
cltd
jne
js
xchg
test
mov
jne
and
ret
mov
loope
adc
xchg
icebp
icebp
jle
cltd
sub
add
adc
sbb
inc
rcrl
jae
loopne
inc
xlat
orl
adc
inc
adc
fbstp
and
push
push
lcall
int3
clc
jne
lcall
ss
shlb
xchg
cmpsl
repz
pop
fmull
jge
mov
pop
loope
lret
inc
or
ret
adc
or
fldl
inc
adcl
rcll
adc
push
and
test
jge
int3
mov
xor
dec
adc
mov
pop
xchg
roll
ret
xor
dec
mov
inc
inc
dec
sbb
nop
loop
or
shl
mov
in
insl
ret
xchg
add
mov
decb
divl
sahf
mov
or
movl
inc
rcrl
movsb
insl
cmp
sbb
xchg
movsl
jns
cmp
clc
pop
mov
fwait
lds
rcrb
sbb
es
and
push
adc
xor
jns
js
ja
addr16
and
mov
cmc
test
pop
xchg
inc
fiadds
sahf
pop
mov
ja
outsb
loope
insl
call
addb
fisubrs
jae
jp
add
add
adc
and
push
hlt
repnz
insl
or
pop
fdivl
mov
push
xchg
mov
aas
lret
sbb
push
test
js
out
xchg
mov
jge
mov
pushf
fs
lahf
inc
add
cmp
dec
dec
push
jp
add
sbb
movb
pusha
cmp
mov
daa
out
dec
movsb
mov
pushf
orb
nop
imul
rcll
popf
pop
and
add
cmp
movsb
adc
jo
in
mov
adc
enter
add
mov
mov
clc
icebp
ret
pop
push
xchg
add
es
adc
add
loop
shll
mov
lcall
fbld
daa
out
out
cld
call
mov
subl
fisttpll
data16
cwtl
dec
mov
sbb
popf
xchg
sub
cmpl
mov
scas
pop
jp
jnp
js
popf
inc
inc
mov
mov
es
push
notl
mov
sbb
arpl
add
mov
sarl
lock
outsb
push
int
sub
or
mov
fs
jae
pushf
adc
in
inc
insb
jecxz
jp
jb
ret
mov
jge
pushf
mov
inc
pop
mov
lods
addr16
lods
jmp
jnp
movsl
lcall
ja
movl
xchg
push
hlt
jge
pop
gs
xchg
ja
addr16
aas
shlb
int3
mov
xor
jg,pn
pop
test
js
xor
cmp
ret
hlt
mov
adc
loopne
icebp
mov
lock
jle
cwtl
mov
std
pop
bound
mov
insl
sub
call
push
inc
cbtw
movsb
and
sub
mov
jnp
mov
fs
mov
insb
sar
or
jns
fdivs
div
push
push
mov
movsl
pushl
add
sbb
mov
cmp
gs
mov
mov
sub
stc
mov
pop
daa
sub
adcb
rcrl
and
sub
lret
cmp
cmp
dec
dec
sbb
popa
adc
mov
cs
adc
sub
jmp
pop
scas
lock
xor
and
ds
add
add
jae
and
cs
lret
jns
dec
neg
sub
jne
jp
xchg
or
mov
jle
add
arpl
in
gs
mov
jp
add
lcall
sub
cwtl
movl
jno
push
add
cld
cmc
xchg
xchg
addr16
xor
xchg
mov
dec
shrb
adcl
lret
popa
dec
xor
pop
push
aam
ss
loope
adc
fbstp
outsb
cs
sub
cmp
cmp
cmp
test
leave
mov
sbb
and
aas
into
pop
pop
rorb
les
and
add
cmp
cltd
pop
outsb
fwait
pop
testl
inc
outsb
or
xor
adc
inc
dec
mov
xor
push
ss
xor
push
add
rcrl
cld
scas
add
mov
push
cmp
mov
fstpl
cld
mov
xchg
sbb
sbb
cwtl
lock
push
bound
sbb
movsl
scas
ret
fmull
aad
test
xchg
jp
lock
out
cmp
mov
imul
out
inc
push
mov
push
in
or
icebp
stos
jp
sbb
ret
pop
aas
pop
mov
and
cmp
fwait
jge
lock
movsl
sti
jp
push
or
pop
ret
loopne
add
cwtl
rcrb
cmp
out
ds
lods
xchg
rorl
testb
pop
or
pop
out
mov
bound
insb
dec
jnp
and
call
loop
fisttpl
add
mov
in
loop
or
lods
xchg
inc
xor
dec
or
xor
xchg
popa
push
push
repz
jl
sub
sub
sbb
xchg
test
pop
cmp
icebp
gs
and
mov
pop
inc
sahf
jnp
arpl
fwait
or
sbb
cmp
ss
inc
in
and
xchg
cwtl
inc
ret
scas
and
rolb
sbb
fisubl
icebp
subb
add
inc
pop
frstor
inc
mov
repnz
lds
adc
lea
jp
or
ss
pop
mov
mov
adc
pop
mov
lahf
cli
pusha
add
inc
jle
adc
test
jge
bound
ja
ja
xchg
xor
and
xchg
mov
std
xor
mov
push
imul
and
dec
cmc
jns
and
cwtl
in
xchg
sbb
xchg
sbb
inc
or
repnz
inc
sahf
lods
cs
jl
fidivrl
mov
mov
ret
movsl
inc
and
jmp
inc
pop
sbb
mov
pop
sbb
dec
jp
lea
xorl
dec
pop
test
mov
fs
and
mov
push
or
inc
popa
fstpl
addl
lods
in
and
gs
mov
inc
xor
lea
pushf
sbb
push
cld
cli
adc
jle
or
mov
stos
int3
ss
xchg
push
gs
test
cmp
nop
out
sbb
mov
jle
imul
jns
sub
inc
mov
sahf
dec
jo
pop
cld
mov
push
mov
mov
das
ds
cs
fwait
cmp
insb
outsb
rcrl
subl
adc
mov
repnz
imul
xchg
mov
jno
push
out
inc
or
jns
push
sbb
testl
ret
dec
or
or
es
xor
mov
xor
xor
xor
cs
aas
fwait
leave
cmp
cwtl
test
mov
push
pop
daa
jle
int3
push
imul
jle
adc
pop
gs
push
adc
xchg
inc
mov
add
mov
mov
sbb
push
cmc
lds
data16
push
xchg
jecxz
inc
push
pop
mov
inc
or
pusha
fmull
inc
ret
jno
mov
das
lcall
jge
pop
out
jne
rcl
or
inc
cmpsb
pop
pop
rorb
fidivrl
push
pushf
pushf
fisubrs
jge
inc
push
ret
xor
fmull
adc
mov
lcall
dec
and
add
sbb
add
sarl
push
pop
ficoml
fiadds
xor
ss
inc
shlb
es
mov
ret
and
xor
xor
pop
jge
inc
push
pop
fnstsw
push
mov
out
orb
pop
mov
insl
pop
mov
incl
imul
jle
ja,pt
addr16
mov
mov
mov
bound
repz
into
xchg
push
jge
pop
shl
add
or
iret
and
in
adc
repz
sbb
xor
sbb
ret
mov
pop
sarb
pop
cmp
lret
fbld
shll
inc
pop
inc
pop
das
cld
inc
pop
std
loopne
inc
inc
push
pop
inc
pop
jne
movsb
pop
jle
xchg
rcll
pop
jmp
mov
jg
shl
test
jg
outsb
imul
hlt
add
pop
mov
pop
leave
or
sahf
xchg
inc
and
movsb
jge
fwait
addr16
xchg
sub
sub
in
test
lahf
push
sbbb
sbb
jge
ror
inc
and
adc
and
icebp
testb
jmp
imul
add
lds
mov
int3
dec
rcll
sbb
sahf
lea
mov
mov
sub
pop
inc
rcrl
icebp
rorb
xchg
pop
addb
pop
xorl
pusha
dec
data16
push
pop
add
cs
cmpsb
imul
and
mov
int3
push
aam
insl
jnp
or
sar
int3
adc
xchg
or
cmpl
mov
nopl
pop
inc
jmp
xor
dec
mov
mov
mov
ficomps
ret
filds
cwtl
cwtl
bound
push
pop
popf
loope
push
fcompl
icebp
add
pushf
sub
movsl
jne
mov
mov
icebp
add
out
loop
dec
xor
jecxz
dec
add
mov
pop
rclb
inc
mov
sub
mov
test
pusha
rol
incl
mov
xchg
dec
xor
add
sbb
jmp
lahf
jg
dec
mov
add
popf
mov
dec
movsl
inc
push
push
sbb
ret
mov
jle
adc
mov
xchg
out
add
loop
ret
pop
movsb
adc
jbe
fisubrl
and
add
pop
ret
subb
cmp
mov
xor
push
pop
pop
push
lods
std
or
mov
mov
xchg
sahf
in
fistps
fwait
test
xchg
mov
dec
jge
fwait
dec
les
xchg
jo
xor
cmpsb
gs
xchg
inc
les
aam
mov
adc
repnz
scas
shrb
mov
or
daa
test
adcl
mov
lods
mov
xchg
ret
arpl
loop
xor
xchg
xchg
inc
push
pop
and
adc
xor
mov
inc
or
mov
shl
jno
dec
imul
jo
cmp
jmp
pop
test
dec
push
sub
push
enter
mov
xchg
addl
or
cwtl
rcl
bound
add
mov
xchg
jle
add
test
cmpb
pop
xchg
inc
and
xor
loop
jp
cltd
mov
loop
lcall
ss
push
fadds
fwait
inc
mov
movsl
fisttpll
pop
mov
data16
data16
ret
jbe
mov
inc
ret
lahf
gs
leave
rcrl
pop
inc
mov
or
lock
mov
mov
sub
adc
inc
push
bound
or
arpl
jne
jp
dec
adc
sub
loopne
inc
mov
rol
push
add
push
and
pop
cmp
push
xor
lcall
mov
add
add
or
mov
push
out
mov
xchg
add
out
jne
mov
imul
test
pushf
in
fs
and
imul
and
sub
mov
dec
aam
jne
dec
or
cmc
loop
jge
test
les
mov
dec
repz
nop
mov
pop
pushf
gs
inc
cltd
ja
xchg
mov
out
insl
xchg
pushf
ss
int3
pop
std
and
add
sti
xchg
lahf
sbb
hlt
xchg
mov
xor
mov
sbb
movsb
subl
cwtl
pop
fwait
xor
fcompl
and
jl
mov
call
adc
mov
dec
jmp
fidivl
mov
in
leave
outsb
jl
addr16
incl
roll
add
pusha
lods
inc
pop
dec
xchg
sbb
jmp
mov
ds
adc
scas
or
insl
mov
mov
mov
movsl
es
mov
leave
mov
insl
add
jmp
pushf
daa
lods
mov
xchg
add
xor
inc
inc
sbb
mov
xchg
cmp
pop
sub
sbb
ljmp
mov
jmp
in
xchg
popa
movsb
arpl
cmp
addr16
loop
in
xchg
and
jnp
stos
sub
mov
mov
sbb
cwtl
push
inc
add
aas
sub
lds
lcall
movsb
pop
sarl
xor
and
xorl
push
fdivs
or
cmp
xchg
add
jle
aad
jne
fwait
rolb
sub
add
fs
jg
cmp
stc
aad
cli
loope
pushf
mov
cmp
mov
jl
rorl
sahf
mov
inc
ss
insl
xor
arpl
mov
sub
or
fisttpl
popf
sbb
sbb
sbb
add
jbe
les
fneni(8087
jmp
enter
add
push
loop
sti
pop
bound
cmpl
xchg
push
add
loop
xor
xchg
inc
out
inc
ret
inc
loop
lahf
lahf
inc
mov
jbe
mov
cld
data16
ret
pop
mov
mov
sub
nop
inc
inc
sbb
cltd
jo
push
imul
pop
push
es
inc
je
repnz
rcrl
fdivrp
xor
mov
imul
dec
ds
ret
and
xorb
mov
cmc
fldt
jecxz
dec
xlat
pop
and
jbe
movsl
nop
ficoml
cmc
and
jg
xor
cwtl
pop
fnsave
mov
add
imul
gs
test
xor
jnp
lock
fstp
ja
imul
xor
cmpsl
jne
pop
push
mov
cwtl
add
jo
cs
dec
mov
mov
aad
inc
jge
pop
fistps
xor
mov
nop
shrl
pusha
test
fidivl
bound
pop
adc
or
mov
xchg
cmp
pop
mov
xchg
mov
in
repnz
and
fwait
mov
adc
dec
and
fwait
outsb
rcrl
addr16
sti
gs
mov
data16
add
cli
mov
mov
sbb
push
sbb
push
add
gs
cmc
movsl
inc
xchg
mov
das
pushf
cmpsl
mov
mov
cmp
enter
ja
pop
xchg
adc
cld
mov
and
ds
and
push
and
pop
leave
test
ret
loope
pop
lock
stc
lods
sub
stos
cmp
ljmp
xchg
pushf
lcall
andb
mov
mov
insl
fstpl
test
add
mov
pushf
loope
push
add
pop
fnstsw
imul
imul
aad
xchg
jp
xorl
xor
xor
loope
cmp
pop
or
in
cmp
xchg
and
xor
jmp
pop
mov
cmpl
hlt
jl
inc
andb
into
popf
in
fadd
mov
lods
mov
push
pop
jg
test
adc
sbb
incb
fwait
mov
sbb
mov
enter
call
mov
loopne
jp
scas
dec
xorl
stos
dec
ss
cmp
mov
mov
sub
cmp
cmc
test
dec
mov
ret
mov
adc
push
hlt
cwtl
mov
scas
mov
das
stc
mov
ret
mov
nop
sbb
ret
jbe
xor
lock
pop
add
std
push
mov
jecxz
xchg
inc
xor
sub
lahf
add
sar
ss
mov
imul
mov
sub
sahf
popa
pop
xor
sahf
addr16
jle
test
and
mov
cmpsb
test
inc
loope
enter
pop
dec
mov
mov
cmp
sbb
push
xchg
nop
mov
in
cwtl
pop
or
pop
pop
stc
pop
imul
gs
mov
mov
pop
std
jle
imul
push
mov
mov
pushf
mov
or
fmull
sbb
mov
inc
les
in
andl
pop
jae
andb
pop
int3
repz
jp
fsts
xor
cli
push
dec
mov
push
mov
and
or
out
ret
icebp
in
mov
nop
dec
and
ret
mov
out
mov
gs
xor
ror
cs
out
pop
in
test
sbb
push
mov
push
mov
xor
xchg
adcb
pop
mov
or
ficomps
enter
jne
in
push
addr16
popa
sub
sahf
ror
nop
popa
sub
fnstenv
and
inc
jge
outsb
shll
mov
mov
sarl
mov
inc
inc
jns
call
leave
gs
loop
popf
adc
jb
mov
push
sub
cmp
xor
push
loop
and
dec
ss
dec
pminub
in
xchg
cmp
mov
and
inc
in
lret
xor
mov
dec
add
int3
cs
pop
dec
mov
lds
nop
call
sbb
ss
pop
jo
cmpsb
mov
lods
mov
sbb
gs
fdivp
aam
add
jge
mov
pushf
dec
ljmp
clc
inc
test
hlt
or
adcb
xchg
mov
pop
pop
mov
lret
sbb
sub
dec
pop
clc
imul
cltd
andl
push
push
cli
mov
outsb
cmpsb
push
xchg
mov
loop
mov
xchg
adc
sub
lods
pop
sub
mov
cmpsl
mov
data16
sbb
fbld
rcr
mov
mov
mov
mov
mov
pop
and
push
inc
cwtl
inc
data16
add
test
mov
sbb
add
cwtl
dec
cmp
mov
push
jne
xchg
out
adc
mov
loope
mov
cmpsl
push
lret
push
jp
adc
and
loopne
mov
arpl
sbbl
mov
lock
mov
popf
xor
xchg
mov
out
or
mov
mov
jp
jge
mov
pop
dec
dec
inc
gs
push
add
in
jb
decl
push
pop
sbbl
pop
cmc
jge
sub
daa
pop
xchg
or
and
jecxz
and
add
mov
mov
jecxz
fs
faddp
inc
jecxz
jno
daa
push
xor
pushf
jp
mov
cmp
push
sub
push
inc
sub
cmpb
cmp
or
stc
push
pop
scas
movsl
xchg
loopne
push
push
cmp
mov
mov
and
addr16
adc
je
pop
add
mov
ss
mov
in
imul
lods
sub
xchg
adc
sbbl
push
sbbb
push
inc
inc
in
stos
push
mov
pop
out
xorb
test
iret
push
mov
push
cwtl
xchg
shll
and
jecxz
loope
bound
mov
bound
cli
mov
add
shlb
jp
mov
mov
out
loopne,pn
xor
xor
push
adc
movsb
lods
jo
lcall
dec
pop
mov
xor
xchg
and
pop
ja
add
andb
add
and
pop
das
xchg
pushf
lods
push
and
cmpsb
push
clc
nop
pusha
inc
sbb
xor
cwtl
and
add
cmp
mov
dec
addr16
lock
test
sarb
jl
fdiv
cli
push
inc
cwtl
or
mov
jae
sbb
jg
inc
shlb
adc
jne
jp
sub
dec
icebp
inc
and
loopne
pop
sarb
into
insl
adc
imul
out
fs
ja
cld
fwait
loopne
aam
cwtl
popf
jno
shl
jle
into
inc
inc
mov
cmp
fdivrs
aam
int
sarb
xchg
outsl
ror
jecxz
int3
dec
ror
and
pop
mov
xor
xchg
cld
and
shl
ror
popa
int3
xchg
lret
lret
ja
push
mov
jae
movsl
jno
rorb
fmul
or
push
int3
xchg
daa
lret
mov
push
ja
pop
jne
push
cmp
nop
and
mov
jle
int3
lods
imul
pop
mov
jne,pn
aam
jae
shrb
rclb
ror
test
pop
jns
movsb
add
jne
loope
jae
aas
pop
jno
shlb
sbb
nop
ror
mov
fdivr
ja
or
push
and
add
add
pop
lret
mov
mov
mov
inc
movsb
inc
cmp
sbb
sbb
sbb
add
or
jno
adc
or
pop
adc
adc
pop
and
lds
stos
movsl
pop
sahf
in
pop
cmpl
push
sbb
pop
mov
aas
mov
mov
cmpl
or
pop
dec
pushf
pop
inc
int3
cwtl
vmovshdup
cmc
jp
xchg
or
mov
daa
inc
stc
add
add
shrl
filds
add
sarb
cmp
add
cmc
sbb
cwtl
ficompl
pop
fsubp
jle
pop
sbb
fstl
popf
inc
fistpl
pop
pop
insl
jnp
addr16
or
push
cmpsl
dec
xchg
cmpsl
leave
pop
mov
mov
push
enter
inc
leave
jnp
mov
push
test
dec
dec
jne
sbb
repnz
rolb
add
inc
inc
dec
ret
cmp
iret
xchg
add
push
or
inc
adcb
add
pusha
loopne
outsb
test
addr16
mov
sbb
mov
mov
mov
mov
jp
lcall
push
or
loope
dec
dec
fwait
rol
in
rcll
cmp
mov
xor
add
lock
inc
addr16
loop
mov
ret
and
pushf
mov
insl
add
add
mov
jge
pushf
ds
cs
inc
sbb
jge
dec
mov
test
push
push
and
out
loope
cwtl
ds
cmc
test
ret
lahf
mov
pop
ret
ret
mov
mov
mov
rcr
pop
inc
pop
stos
mov
fcompl
pushf
daa
jle
sbb
fildl
dec
jp
dec
test
and
or
or
popa
mov
pop
enter
daa
addr16
inc
or
sbb
push
inc
xchg
test
std
mov
fwait
inc
mov
lahf
cwtl
jnp
pop
faddp
pop
mov
mov
mov
lahf
push
popf
inc
dec
fwait
icebp
mov
or
and
add
lock
inc
stc
sbbb
popf
fcompl
sarb
or
pushl
loop
mov
xchg
inc
inc
mov
mov
mov
mov
frstor
dec
bound
mov
sahf
cmpb
pop
mov
sbb
mov
jge
ficoml
loope
sbb
jns
xchg
sti
rcrl
add
mov
sbb
pop
loop
cmpl
inc
lret
mov
pop
cld
cmpsb
rol
mov
mov
mov
sub
or
fwait
mov
stc
or
fisubrs
or
mov
mov
jge
fistl
dec
inc
inc
pop
fidivrl
adc
inc
leave
inc
shrl
ficompl
xor
push
mov
sbb
adcb
or
inc
pushf
jle
dec
mov
lcall
roll
and
jge
lahf
aam
jne
push
std
mov
icebp
sahf
pop
inc
mov
pop
int3
or
dec
jge
mov
filds
mov
jbe
dec
cmpsl
adc
pushf
adc
in
cmc
mov
imul
push
cld
call
les
sbb
inc
inc
fs
jecxz
jnp
subl
dec
and
inc
cmpsl
push
and
jns
pop
jnp
pop
or
ret
sbb
dec
mov
or
add
les
add
daa
rcrl
mov
or
gs
popa
add
cmpsl
push
push
nop
mov
inc
data16
cmp
dec
sbb
pop
mov
or
stos
mov
inc
faddl
inc
mov
lods
inc
les
adc
inc
and
lahf
mov
mov
mov
inc
imul
adc
mov
ret
test
jge
adc
aas
fs
fwait
rcrl
popf
xchg
inc
mov
add
addr16
xchg
mov
cmc
bound
gs
push
sbb
test
pop
dec
pop
jge
lds
data16
push
fidivrs
jp
lds
test
bound
ret
and
mov
add
push
pop
push
cli
sub
add
pushf
pop
inc
cld
fidivrl
mov
loopne
cld
sti
adc
pop
xorl
pop
xchg
lds
xchg
sbbl
add
or
mov
mov
and
loope
ret
outsb
cmpsl
subb
inc
pop
and
adc
sahf
xchg
xchg
or
push
xchg
jp
add
and
cltd
push
pop
or
faddl
pop
insl
or
scas
xchg
sbbl
dec
inc
dec
pushf
pop
enter
inc
jle
subb
jle
sbb
jle
inc
repnz
or
mov
mov
ficoml
mov
sbb
cmp
filds
cmpsl
pop
xchg
sub
inc
sbb
jle
faddl
decb
inc
or
addb
fists
mov
inc
xchg
ds
nop
jp
cwtl
sahf
sbb
repnz
ficompl
lcall
inc
add
ret
xchg
rorl
inc
fcmovu
ret
fiaddl
lods
mov
fildl
sbb
andb
fldt
movsl
loop
fs
rolb
sbb
mov
inc
jge
pop
jnp
inc
cmpb
pop
xchg
inc
test
aas
ret
adc
mov
fs
loope
push
and
dec
push
pop
test
jle
add
and
dec
xor
and
ret
ret
and
and
push
pushf
lods
pop
sub
add
adc
rolb
or
mov
inc
int3
pushf
sub
lahf
jle
or
gs
push
addb
in
or
inc
add
inc
lods
sbb
pop
inc
and
mov
jbe
jge
repz
ret
cmp
add
mov
inc
push
pop
add
mov
mov
jle
add
and
pop
fnsave
lcall
pop
mov
rolb
ret
cmpl
ficoms
or
inc
push
push
sbb
or
ss
inc
pop
subb
sbb
fstl
sbb
inc
leave
jge
push
push
cmp
xorl
roll
inc
lahf
push
inc
cltd
inc
jne
imul
fwait
or
dec
inc
rorl
cmc
and
add
fwait
or
ret
ret
rol
test
jle
mov
add
ret
mov
rcr
push
inc
popf
pushf
test
mov
dec
out
mov
sbbb
cmp
data16
bound
pusha
mov
mov
movsl
jne
pusha
xor
xchg
mov
outsl
cmpsb
sar
inc
mov
loop
mov
popf
xchg
inc
test
sbb
movsl
inc
xor
pop
and
pop
es
or
lds
add
loope
inc
in
cmp
ficompl
ret
inc
fsubl
fs
add
ret
pushf
xor
ss
sbb
outsl
addr16
sbb
icebp
arpl
pop
daa
mov
les
lahf
fwait
cli
or
ret
xchg
inc
inc
pop
sbb
dec
push
or
dec
gs
pusha
inc
pusha
cli
dec
adcl
push
fldt
mov
adc
jp
test
mov
rcrl
fstpt
jns
sub
rcr
imul
popa
test
ret
inc
loope
mov
push
or
lods
sbb
pop
rolb
pop
inc
frstor
dec
inc
mov
ret
jl
rclb
fdivl
mov
and
inc
inc
dec
jl
xor
xor
cmc
push
xor
rorl
add
jne
jle
pop
faddp
gs
mov
addr16
mov
faddl
rcll
lahf
mov
fidivrl
leave
xchg
pop
enter
lods
pusha
cmp
imul
ret
sbb
sub
cwtl
inc
faddp
jg
fldl
fcompl
dec
push
mov
or
inc
icebp
pop
inc
mov
inc
inc
cmp
inc
jle
inc
and
mov
mov
mov
fimull
leave
fwait
gs
push
cmp
sbb
stos
das
push
ds
mov
pop
push
or
jnp
pop
fdivl
mov
and
jmp
out
or
jae
mov
and
test
pop
out
xchg
jp
inc
lcall
pop
dec
fcmovnbe
push
add
addl
vucomiss
inc
push
inc
and
jge
inc
adc
ret
inc
rolb
adc
add
sub
bound
leave
addb
add
lahf
adc
inc
aas
sahf
jge
push
adc
popf
pop
pop
inc
mov
pop
ljmp
pop
adc
fiaddl
jge
leave
adc
mov
dec
adc
jge
adc
mov
lds
jl
inc
pop
les
loop
sbb
int3
nop
inc
andl
sbb
sbb
mov
add
lahf
addr16
sbb
pop
push
fstp
imul
pop
pushf
inc
enter
adc
jge
adc
inc
sub
lods
ds
and
aaa
sbb
pop
cwtl
xchg
jp
fldt
pop
sbb
lcall
push
dec
pushf
ror
dec
jne
jle
sbb
adc
inc
mov
les
add
out
adc
pop
inc
mov
dec
addl
pop
mov
lahf
icebp
jge
ficomps
add
pop
push
fstpl
pop
fwait
add
pop
jle
fildl
test
pop
mov
ficompl
lcall
mov
ret
enter
orl
and
mov
pop
lods
movsl
fnsave
xor
push
inc
lds
mov
lods
test
jp
ret
pop
mov
ret
inc
ret
xorl
loope
pop
cmpsl
gs
push
fbld
add
daa
fisubrl
jp
or
lock
movsb
or
xor
mov
fisubl
mov
les
pushf
inc
cmp
ret
dec
pop
es
retw
or
add
sarl
daa
mov
inc
sub
fistps
mov
jge
jp
push
pop
dec
lock
push
add
sub
pop
test
mov
lcall
mov
jp
enter
dec
push
xchg
les
mov
adc
push
dec
dec
inc
test
and
or
mov
xchg
addb
xor
xchg
xor
adcb
add
inc
pop
dec
fimuls
fstpl
dec
cs
pushf
dec
pop
mov
push
or
and
mov
or
es
sbb
test
add
mov
push
adcb
addl
add
mov
pop
mov
sahf
pop
aas
and
xchg
add
sbb
fistl
pop
pop
mov
mov
mov
dec
mov
movl
loope
mov
mov
pop
inc
xchg
cmc
faddl
ret
add
ret
inc
pop
sub
and
jl
insb
push
ja
ja
addr16
inc
add
pop
lahf
jl
fistl
sub
or
add
mov
inc
sbb
fsubrl
enter
dec
jl
cli
lahf
addr16
lea
lahf
loopne
inc
add
mov
test
sti
mov
cmp
mov
fstpt
inc
bound
lahf
cmpb
loope
rorb
loope
add
fisttpll
or
test
mov
or
and
fwait
out
mov
inc
daa
dec
and
faddl
jp
inc
inc
sub
or
mov
inc
adc
inc
xor
pop
and
xorb
bound
cmp
mov
and
inc
lds
movsb
fsubl
mov
inc
pop
jnp
andl
xchg
jnp
xchg
add
inc
pusha
sbb
bound
mov
and
pop
sub
mov
cmpsl
cld
out
lahf
ljmp
push
imull
mov
mov
movsb
ljmp
test
push
shrl
lds
pusha
mov
jge
jne
loop
or
xor
mov
pushf
xor
mov
xchg
cmp
push
aaa
dec
out
and
test
or
inc
xchg
stos
push
adc
sbb
ret
addb
adc
aad
xchg
mov
addl
movsl
subl
mov
push
cmpsl
out
jb
push
mov
dec
shll
jg
sub
repnz
rcll
adcb
pop
cmc
ficomps
xchg
sti
push
movsl
xor
push
xchg
lahf
daa
pop
cmp
sbb
or
jae
mov
in
and
mov
mov
add
arpl
push
cltd
xchg
shlb
pop
add
orb
repz
cmpsb
push
adc
icebp
add
fsubl
adc
mov
movsl
sarb
arpl
jge
scas
mov
sub
xor
pop
xor
mov
pop
xchg
xchg
cmp
outsl
lahf
test
push
pop
xor
add
sti
and
jle
sbb
addr16
arpl
loop
mov
arpl
and
test
je
ss
adcl
arpl
xlat
sbb
or
xchg
les
movsb
xor
mov
in
rorb
les
push
xchg
push
arpl
insl
jo
loop
fiaddl
gs
sub
jge
jge
fldl
ret
scas
mov
iret
push
push
xchg
fsubl
mov
jbe
pop
adcb
add
cwtl
jg
scas
cmc
push
iret
or
cmp
mov
and
int3
mov
popf
xchg
add
test
out
sti
les
fimull
pop
adc
add
mov
pushf
sahf
mov
jnp
jp
cmp
pop
xchg
sbb
hlt
popf
push
mov
fstpl
dec
pop
add
mov
repnz
xchg
xchg
adc
loop
bnd
pop
pop
fcoml
and
outsb
mov
pushf
sbb
inc
adc
outsl
arpl
shll
inc
mov
push
rcrl
fimuls
mov
out
inc
add
inc
mov
push
jb
test
adcl
push
in
pushf
xchg
jae
push
nop
mov
cli
icebp
cwtl
pushf
xorl
or
or
and
mov
sahf
mov
push
clc
sbb
push
inc
ret
sti
fiaddl
mov
data16
pop
in
dec
xor
push
scas
call
push
and
or
inc
or
sbb
pop
add
movsl
xchg
out
rcll
push
in
pop
cli
xor
cmc
rclb
mov
and
gs
sahf
dec
push
repnz
pushf
sbb
lods
nop
mov
xchg
mov
stos
stc
pop
pop
jnp
mov
adcb
or
lock
xchg
dec
arpl
cmc
imul
ss
fdivl
int3
pop
std
fwait
ljmp
in
shr
es
xchg
mov
dec
jo
in
mov
stc
add
arpl
pusha
jg
pushf
aad
mov
mov
inc
mov
and
test
cmc
scas
movsl
mov
mov
mov
pop
add
adc
mov
cs
push
subl
xor
pop
jg
push
mov
xor
mov
es
xchg
mov
fsubrl
jns
sub
fildl
mov
lahf
jge
in
jnp
and
pop
test
mov
push
mov
mov
mov
movsl
sti
push
cmpsl
rcll
sbb
push
scas
mov
or
shlb
xor
pop
enter
pop
push
xor
aam
sbb
or
inc
sarl
pushf
pop
lcall
in
clc
inc
movsl
cli
push
dec
push
push
fs
ljmp
xchg
inc
pop
lcall
xor
xchg
mov
push
xor
pop
mov
sub
mov
mov
pop
cwtl
aad
lcall
mov
xchg
xchg
out
mov
mov
xchg
jg
dec
outsb
test
imul
roll
pushf
mov
and
iret
jge
sbb
xor
cwtl
mov
push
cltd
outsb
sbb
dec
and
movb
add
loope
pop
das
xchg
push
xor
ss
push
add
mov
sub
sub
loopne
jp
dec
mov
fs
adc
inc
push
out
pop
mov
data16
mov
inc
inc
jnp
faddp
gs
dec
mov
popf
in
xchg
inc
mov
push
fidivl
cmpl
cmc
mov
out
gs
pushf
xchg
test
or
and
cs
mov
test
inc
xchg
mov
inc
push
add
mov
ret
in
in
add
xchg
sbb
in
daa
jge
loope
fwait
jecxz
or
dec
xchg
and
jnp
mov
jle
sbb
sti
pop
cmpsl
inc
les
or
dec
push
mov
and
daa
push
mov
fisubrs
adc
xor
pop
out
xchg
and
jge
test
daa
inc
lds
mov
pusha
dec
xchg
icebp
test
mov
mov
pop
jp
push
and
cmp
icebp
mov
pop
gs
mull
sbb
dec
ret
cmp
mov
inc
mov
add
dec
shrl
scas
pop
gs
lahf
jge
mov
mov
aas
push
in
add
jl
cmp
rclb
jecxz
test
add
dec
sbb
inc
or
es
adc
repnz
loopne
out
sbb
push
xchg
les
pop
adc
lret
inc
and
icebp
xor
dec
test
cmp
nop
adc
pop
sahf
mov
cmc
lahf
push
call
adc
and
jmp
enter
sbb
and
inc
jp
rorb
lock
cmc
loopne
jo
pop
mov
add
adcl
and
lods
shr
or
cmc
and
xchg
pop
mov
mov
insb
sbb
ret
xor
scas
ss
insb
pop
call
dec
dec
popf
and
das
test
add
andl
outsl
mov
in
jecxz
add
mov
pop
sbb
movsl
in
mov
and
jp
jae
and
gs
fwait
sub
mov
push
pop
fiadds
hlt
outsb
fwait
into
jl
andl
mov
ss
adc
imul
cli
adc
arpl
fcoml
inc
fidivrs
mov
jne
loop
mov
mov
adc
cmp
movl
loope
push
mov
xchg
dec
mov
jecxz
iret
fiaddl
xchg
lock
movsl
mov
ret
sbbl
and
and
faddl
push
test
shrb
jecxz
data16
dec
pop
jge
cmpsb
inc
addl
rol
repnz
mov
jge
cmpsb
mov
cmp
movsb
popf
jge
sbb
ljmp
jge
cwtl
mov
inc
and
cmp
mov
dec
mov
pop
xor
pop
mov
cmovge
daa
jmp
cmp
sub
push
push
repz
push
inc
sti
fstpt
and
and
xor
lahf
test
add
cmp
pop
out
cli
push
xorb
cld
sbb
cwtl
or
dec
movsb
jge
gs
dec
popa
jb
fs
ficomps
ss
pusha
aam
mov
fs
je
xchg
jnp
mov
push
icebp
andl
pop
mov
data16
push
sarb
fs
jle
or
test
out
jle
push
adc
test
xchg
mov
pop
loope
in
mov
inc
clc
pop
negb
loope
pop
aam
inc
dec
cwtl
aas
lret
repz
sub
mov
cmpsb
mov
mov
cmp
dec
cwtl
jl
mov
sbb
addr16
std
jne
dec
popf
push
jl
cmp
lahf
loope
xchg
inc
fsubl
andb
loop
pop
out
and
in
jnp
adc
and
inc
add
mov
dec
push
and
imul
mov
jecxz
pushfw
daa
jae
and
fidivrl
jge
inc
scas
ss
inc
xor
cmp
xchg
push
rcrb
push
inc
cmpsb
add
mov
add
sbb
mov
bnd
in
mov
es
daa
push
inc
rcr
ret
sahf
lods
enter
mov
in
push
popl
mov
and
jmp
push
std
ss
xor
in
add
mull
and
pop
xchg
adc
mov
push
dec
ja
xor
lretw
cmp
xlat
mov
jae
sbb
out
jp
or
in
xchg
jecxz
movsl
inc
pop
cmp
pop
les
mov
add
mov
mov
xchg
push
cltd
push
es
xchg
loope
xchg
sbb
sub
faddp
gs
fistl
xchg
pop
cwtl
ds
jp
or
pop
push
loop
push
push
nop
test
ret
call
fistl
cmc
cld
dec
in
imul
mov
ret
les
in
dec
inc
pop
push
pushf
arpl
jb
nop
jl
sub
sahf
xchg
inc
mov
adcl
jno
mov
mov
jmp
mov
adc
ds
sbb
ret
dec
fs
fisttpl
mov
out
int3
mov
push
aas
jl
sti
gs
xchg
sbb
outsb
mov
inc
xor
mov
add
push
pop
xor
mov
mov
movsb
loop
inc
push
test
movsb
mov
dec
and
xchg
pushf
mov
int3
ficompl
das
inc
fiaddl
mov
sbb
subl
or
sbb
inc
jecxz
fdivr
gs
cwtl
sbb
sub
addb
xor
popa
inc
pop
inc
jge
lcall
dec
out
jl
cmpsb
ss
xor
xor
push
lahf
xchg
pop
mov
xlat
jae
pop
daa
loopne
inc
fiadds
nop
jg
inc
mov
pop
pop
and
dec
and
pop
add
xchg
jne
jp
xor
xchg
jmp
loopne
jg
pop
cmp
mov
pop
inc
andb
ret
scas
jl
dec
inc
mov
mov
or
adc
mov
jmp
mov
aas
fwait
jne
push
out
push
xchg
and
dec
xor
pop
mov
int3
pop
rcrb
mov
mov
mov
lods
mov
mov
sbb
pop
jle
lods
jne
pushf
popa
xchg
int3
inc
loop
imul
rol
jge,pn
xor
lret
cmpsl
mul
mov
icebp
pushf
rorl
lods
xchg
fldt
out
push
jp
or
fcompl
ror
pop
ret
shlb
data16
pusha
rcr
dec
fwait
cmp
pop
mov
cld
and
mov
pop
movb
cltd
fdivrl
mov
xor
mov
loope
addr16
add
std
jno
das
sbbl
sbb
cwtl
insl
mov
inc
sub
dec
add
aam
in
jle
mov
int3
xchg
mov
push
and
mov
xlat
pop
jecxz
mov
or
fists
inc
shll
cs
addr16
add
mov
push
sbb
sti
push
in
or
fs
adc
pop
adc
aam
mov
lea
jge
loop
std
lock
movsb
cmp
fyl2x
lds
nop
fwait
and
mov
lods
ljmp
fwait
pop
add
cld
jecxz
pop
mov
cmp
mov
jl
adc
pop
pop
mov
jle
inc
cmpsb
sbb
test
fwait
insb
fcoml
jbe
push
cwtl
jle
pop
test
mov
add
pop
dec
aas
call
repnz
pusha
adc
shrl
push
ret
pushl
xchg
pop
mov
mov
xchg
mov
jne
sti
popa
pop
mov
ret
and
cmp
mov
and
cs
push
out
mov
push
sub
mov
add
fisubs
sub
pop
cwtl
pop
aam
add
jne
cwtl
cmp
cwtl
add
icebp
pop
out
lods
add
push
mov
outsb
icebp
les
jnp
test
incb
xor
pop
fistpll
movl
insl
aas
insb
rorl
ret
push
sbb
and
adc
arpl
dec
sbb
mov
push
in
jmp
jl
jnp
cmp
sahf
sub
and
xchg
lahf
mov
cmc
mov
decl
xor
xchg
hlt
int3
mov
mov
push
arpl
sti
jmp
pop
test
inc
mov
mov
push
sahf
loopne
arpl
mov
and
xchg
dec
dec
gs
xchg
or
test
ss
inc
mov
sub
and
pop
loopne
outsb
sub
push
dec
pop
or
cmp
xchg
cmpsb
push
mov
loope
push
dec
addr16
dec
sub
jl
ret
fsubl
insl
mov
cli
xor
xchg
jecxz
cltd
or
mov
push
add
popa
sub
jnp
mov
lea
sub
scas
push
lcall
cmp
rcll
pop
mov
sti
push
movsb
nop
jl
cltd
insl
mov
xor
pop
decb
inc
shrb
call
fdiv
fs
pop
dec
inc
add
inc
cltd
push
lds
mov
xor
pop
dec
mov
les
arpl
adc
sbb
sub
mov
gs
test
and
cmp
cmpsb
dec
inc
jge
mov
daa
jne
mov
sbb
lahf
pop
shll
shll
add
loopne
mov
pop
sbb
pop
test
adc
inc
xchg
xor
dec
fwait
fs
faddp
loope
push
fcoml
add
repnz
mov
dec
addr16
push
test
or
add
add
sbb
aaa
mov
cmp
mov
sbb
movsb
or
mov
out
call
pusha
scas
insl
inc
mov
arpl
jae
fidivs
paddsw
mov
and
outsl
dec
xchg
lcall
push
pop
xchg
pop
nop
inc
inc
mov
cmp
sarl
pop
loop
xchg
mov
pushf
mov
enter
inc
sbb
lahf
and
add
xchg
xor
xor
mov
ja
lcall
ret
popf
cmpsb
mov
filds
movsb
mov
rcll
fiadds
inc
les
xor
jecxz
aas
adc
adc
xor
xchg
loopne
pop
or
mov
sbb
sub
cmp
movsl
pop
inc
test
jle
sbbl
cwtl
mov
inc
in
jne
ss
push
or
xchg
loopne
pop
popf
jle
xor
ss
push
test
mov
push
xor
lods
lods
inc
mov
movsl
push
mov
sbb
and
pop
fcmovb
jns
test
sahf
movsb
mov
pop
mov
push
inc
xchg
add
fbstp
fistps
mov
fs
jle
jp
shrl
in
add
sub
cmc
gs
dec
lahf
xchg
jmp
mov
jge
add
pop
fisubs
nop
mov
dec
fisubrs
test
test
xor
inc
mov
test
movsb
adc
cmp
cs
dec
pop
stos
push
inc
shll
sub
dec
sbb
test
aam
and
pop
or
jcxz
ret
xchg
shll
pop
jmp
xchg
inc
test
int3
sarb
fisubl
jle
push
or
pop
mov
xor
insl
addr16
pop
dec
loopne
jp
movsl
adc
xor
mov
mov
rolb
aas
adc
fnsetpm(287
inc
cmpsb
mov
mov
xor
inc
mov
jnp
xor
dec
lret
jmp
and
int3
xchg
xor
test
dec
mov
push
cwtl
or
scas
mov
jle
cld
dec
loope
roll
xchg
inc
out
jbe
pop
xor
jge
mov
popa
mov
sub
jp
sub
or
cli
xor
push
sbb
jge
dec
sbb
mov
push
sbb
xchg
mov
into
mov
ret
jbe
loope
pusha
and
and
adc
std
sbb
repnz
call
inc
add
leave
and
dec
sub
movsb
xor
pop
sub
xchg
xlat
addr16
adc
ret
dec
popa
cmp
sbb
add
mov
xorb
jl
cmp
xor
push
jle
dec
add
jle
out
test
add
mov
loopne
push
lock
mov
test
add
ret
xor
nop
fists
nop
sbb
add
xchg
movsl
fildll
push
inc
xchg
fstpt
adc
mov
lods
cmp
push
jle
sbb
pop
lea
pushf
mov
sub
int3
inc
mov
int3
ss
cmpsb
pop
ss
and
adc
insl
cld
pushf
inc
lret
les
mov
fmulp
ss
dec
push
push
xchg
into
pop
pop
mov
repnz
test
gs
and
fs
stos
push
popa
das
or
mov
add
int3
data16
inc
xchg
inc
aam
and
dec
les
pop
xchg
imul
jne
jp
fsub
in
inc
hlt
pop
in
jp
arpl
and
and
mov
gs
outsb
sahf
out
inc
arpl
cmp
dec
xchg
xchg
xchg
add
je
jle
or
imul
lds
push
sub
mov
inc
push
and
xor
dec
xchg
pop
out
jp
hlt
out
mov
scas
mov
mov
loopne
jle
pop
adc
sub
sub
sahf
movsb
popf
gs
jp
mov
lahf
cmp
xorl
inc
xor
sbb
push
and
mov
pop
pop
and
inc
jecxz
xor
dec
inc
add
mov
xlat
sbb
sbb
inc
and
push
in
fiadds
mov
and
mov
push
xlat
rol
and
iret
cmc
dec
xor
call
roll
test
push
cwtl
mov
mov
jne
cmc
rcll
addr16
cwtl
pmaxub
xchg
mov
orl
sbb
movl
push
adc
imul
xchg
jge
adc
mov
pop
stos
sbb
push
adc
sbb
jle
xchg
lahf
fcmovbe
popa
pop
mov
test
push
inc
xorl
jne
jle
jecxz
or
in
pop
cmp
test
dec
dec
loopne
imul
addl
add
ret
jp
loope
inc
xchg
sbb
movsl
icebp
jg
mov
mov
sbb
je
stos
inc
popa
cmpsl
mov
fcomps
out
and
outsb
add
xor
pop
clc
jge
push
dec
jmp
mov
fcoml
jp
int3
sbb
mov
sbb
jae
and
dec
xchg
lock
fcmovb
jge
sub
ss
xchg
xchg
sbb
adc
jo
pop
pushf
mov
mov
xor
dec
dec
pop
xchg
xchg
push
lock
jg
imul
cwtl
and
inc
mov
loope
or
pushf
ret
dec
cmpb
mov
fiadds
or
push
and
bound
mov
mov
mov
dec
rcr
divl
loopne
scas
and
pop
jmp
test
ret
aas
cwtl
aas
faddl
xlat
lret
mov
adc
test
imul
mov
jle
rcll
and
cmc
pop
cld
sti
and
jb
push
or
imul
fwait
incl
inc
mov
inc
jl
add
push
cmc
out
cwtl
and
mov
add
add
mov
mov
cmp
mov
fisttpll
pop
mov
adc
das
dec
decb
popf
xor
push
dec
xchg
pushf
inc
shrb
mov
test
xchg
xor
insl
pushf
pop
jp
inc
mov
pop
mov
xchg
dec
mov
test
ja
sbb
pusha
xor
std
sub
dec
xlat
pushf
pop
les
or
dec
sbb
and
pop
cld
loope
push
faddl
gs
jle
mov
sub
inc
pop
add
lahf
push
push
repnz
out
imul
nop
dec
xchg
sbb
mov
mov
jnp
repnz
mov
sub
mov
movsl
mov
mov
push
fwait
fs
pop
scas
mov
pop
xchg
inc
or
xchg
fwait
cmc
mov
gs
push
pop
add
push
cwtl
push
sbb
fwait
test
ljmp
out
repz
push
adc
sbb
sbb
mov
mov
sub
lods
dec
jge
push
lahf
jl
mov
inc
jb
shrl
push
movsl
in
jecxz
sub
jo
int3
pop
rclb
xchg
stos
movsl
add
in
sub
mov
movsl
loop
xor
nop
leave
mov
inc
jge
mov
jle
mov
mov
mov
pop
inc
inc
adc
cs
das
pop
lods
insl
and
pop
fisubs
push
pushf
and
call
cmc
and
inc
scas
icebp
sbb
pop
aad
jle
repz
pop
mov
jnp
mov
std
mov
popf
subl
mov
mov
add
push
cmc
in
pushf
sub
mov
xchg
gs
xchg
inc
lods
fiaddl
test
inc
dec
sbb
xchg
sbb
out
jle
and
lahf
into
out
cmc
es
lds
and
dec
lahf
and
stos
jp
addr16
xchg
gs
sub
cmc
push
or
push
or
dec
pop
jmp
ljmp
mov
mov
inc
inc
insb
fcmove
push
cmp
mov
mov
fists
pop
jecxz
cmp
sbb
cmp
sbb
push
setb
jmp
mov
addr16
adc
mov
out
push
sbb
jg
sbb
lcall
pop
and
popa
pushf
shr
push
xor
cmpsb
xor
jle
pop
enter
pop
and
mov
pop
lahf
pop
pushf
push
dec
out
jecxz
cmc
cmpl
test
inc
sbb
das
cld
fistpl
shll
jnp
dec
inc
gs
jp
mov
xchg
fdivs
pusha
add
cmp
fwait
pop
fs
in
fistps
ret
mov
push
xchg
cld
dec
jne
dec
notl
test
fiadds
dec
pop
pusha
push
pushf
mov
mov
mov
movsb
xchg
sbb
ret
dec
pop
sub
pop
cli
aam
jge
fwait
sbb
jnp
jne
xor
xchg
dec
xor
jns
js
addr16
mov
jle
ja
inc
jl
cli
push
cmp
xchg
fwait
out
sbb
mov
test
andb
sar
loop
sub
rcll
and
and
pop
cmp
mov
cwtl
ret
es
lret
out
nop
inc
mov
and
in
jge
mov
addr16
dec
leave
subl
or
cltd
test
xor
icebp
jl
dec
dec
call
lret
movsb
fwait
dec
orb
dec
xchg
inc
sub
arpl
lods
xchg
aas
cs
pop
mov
push
dec
fcomps
dec
inc
stos
push
sti
cmp
and
jl
or
sbb
addr16
push
mov
adc
push
lret
cs
negl
sarl
enter
and
push
adc
lods
sbb
sub
pop
jle
int3
cs
inc
adc
or
int3
pop
cmpsb
pop
pushf
sbb
lods
mov
icebp
inc
pushf
popa
dec
jnp
mov
cmpl
shlb
in
push
lret
rcrb
push
adc
std
cmp
cld
inc
rcll
test
xchg
and
inc
sbbl
pushf
fmull
nop
inc
andl
cmc
incb
icebp
cmpsb
push
jmp
fstpt
jl
dec
movb
sahf
push
shrb
sub
in
jge
je
ret
aas
cmp
addr16
xchg
scas
xchg
mov
inc
add
add
jle
jle
arpl
xchg
daa
mov
rolb
pop
ficoms
push
and
dec
movl
pop
jb
outsb
imul
and
sbb
xchg
sbb
pop
cwtl
dec
dec
bound
nop
dec
sbb
gs
mov
and
ret
push
std
xchg
or
xor
outsb
pushf
jl
dec
fstpl
or
fmul
gs
mov
rorl
pop
jge
shld
sub
xor
mov
or
sub
cmp
push
in
hlt
and
inc
cmp
lahf
out
stc
mov
aaa
fwait
ljmp
pusha
push
fistps
cmp
inc
rcrl
andb
xchg
mov
imul
push
arpl
mov
loopne
pop
test
sti
data16
jae
inc
jle
repnz
rcl
mov
enter
fisubrl
push
inc
push
pop
mov
ficomps
mov
inc
mov
loopne
sahf
adcb
cmp
xor
or
pop
mov
mov
push
jmp
jmp
mov
and
ret
mov
cmp
sub
dec
dec
mov
rcrl
loopne
jg
rol
mov
jmp
cwtl
inc
andb
pop
dec
and
push
cmp
jg
mov
push
sar
ret
pop
dec
xchg
cli
gs
out
push
jno
mov
lret
sarl
aas
inc
mov
pop
les
xchg
ret
test
bound
out
dec
xchg
pop
sbb
push
xchg
je
mov
ds
cmp
andb
movsl
jg
push
pop
loope
or
push
stos
or
pop
mov
ja
inc
loop
fidivs
fidivrl
mov
dec
push
rcll
andl
xor
inc
mov
adc
bound
loope
out
mov
aaa
jp
add
xor
mov
insl
icebp
ljmp
mov
xchg
adc
mov
ret
add
xlat
movsl
loop
icebp
rcll
jge
in
lcall
add
or
cwtl
sbb
xor
ret
mov
insl
pop
sti
pop
sub
push
jecxz
shl
lock
pop
mov
mov
mov
ficoml
andl
int3
sbb
mov
cmp
inc
xchg
pop
movsb
push
cmpsl
sub
fwait
add
int3
push
pop
sub
test
jecxz
arpl
inc
jge
fldt
mov
stos
cmc
popa
push
daa
test
mov
push
inc
gs
cmpl
ret
push
mov
push
sub
sbb
sbb
xor
mov
and
sbb
lods
pop
call
adcb
sub
cmc
cmp
sbb
fcomi
bound
cmp
mov
jle
inc
ret
bound
jns
ret
fimull
mov
jbe
imul
add
push
pop
popf
mov
pop
mov
lods
pop
push
shlb
jge
sbb
pop
cwtl
stos
sbb
xchg
mov
xchg
insl
push
jl
sbb
ffreep
push
mov
fldl
sbb
pop
push
repnz
mov
test
push
lahf
jge
ror
and
ljmp
nop
mov
push
sbb
shlb
cmpsl
pop
pop
pop
es
mov
stc
lods
mov
aam
and
cmc
or
add
mov
mov
mov
lods
cld
sbb
and
sub
imul
out
sub
and
pop
jae,pt
push
kmovw
mov
or
test
sub
xchg
mov
je
fidivl
sbb
sbb
and
cld
inc
fisubrs
inc
out
fcompl
rorb
loope
jne
fwait
xchg
mov
jle
rclb
lds
movsb
out
ss
inc
adc
jnp
sub
mov
lods
out
xor
xchg
daa
or
call
pusha
inc
add
inc
pop
scas
push
fisttpll
fidivrl
in
int3
arpl
or
jne
jl
repnz
nop
shrl
inc
cwtl
mov
or
sub
lods
mov
pop
pop
pop
ja
les
je
push
js
imul
or
mov
mov
pop
arpl
dec
pop
sbb
xchg
pushf
imul
addb
jmp
push
adc
adc
out
cmc
subb
loop
adc
mov
jp
jmp
test
cmp
fbstp
jle
sub
addb
inc
push
scas
xchg
mov
or
or
rorb
mov
rorl
xchg
ret
push
add
inc
mov
pop
mov
push
push
inc
or
sub
or
cmp
cmpsl
imul
orl
xor
out
cmpsb
stos
dec
nop
cld
mov
test
andps
andl
lea
sbb
xchg
cmp
enter
cmpsb
and
inc
push
cmc
jnp
xchg
popa
gs
jl
inc
mov
dec
cli
cwtl
push
and
cmc
fwait
cmpsl
adc
xor
pushf
sbb
jge
mov
shrb
mov
add
adc
push
mov
push
mov
mov
push
ficomps
aad
add
rorl
movsl
enter
jne
ret
jne
jle
sbb
cli
mov
fldt
mov
mov
dec
jge
mov
or
cmpl
pop
gs
fndisi(8087
insb
xor
push
imul
mov
mov
fstpl
sub
ret
push
mov
add
inc
xchg
inc
jge
or
ljmp
lds
jge
jp
add
xor
nop
pop
jg
mov
inc
ret
fbld
add
rcrl
cmp
sbb
cmp
sub
jg
icebp
and
or
cmpsl
xor
jb
jge
pop
dec
push
out
aas
jecxz
jl
sti
leave
mov
test
mov
mov
dec
push
add
mov
push
imul
add
cmpsl
push
push
adc
icebp
lock
or
pop
xchg
pop
fdiv
push
push
jge
sbb
int
add
mov
mov
cmp
sbb
xor
jnp
or
add
shll
lcall
xchg
or
test
aas
dec
pop
jge
imul
xlat
add
loopne
push
movsl
lock
lods
xchg
sub
cmp
sub
adc
mov
jle
xor
push
les
ds
inc
sbb
repz
cwtl
mov
imul
dec
lahf
gs
rorl
pushf
jbe
sub
add
pushf
movsb
sub
pop
sbb
inc
push
push
jle
adc
mov
cmp
cmp
lods
inc
sub
test
add
xor
inc
pop
dec
movb
dec
sub
mov
pop
int
jnp
leave
bound
jae
add
and
mov
gs
inc
icebp
cltd
push
jecxz
jge
jmp
or
mov
movsl
aad
adc
mov
scas
cmc
cli
jecxz
call
fstpl
mov
and
mov
popa
mov
pop
jbe
push
les
mov
lods
leave
xor
add
test
les
in
fldt
sbb
outsl
sbb
addl
push
cmc
pop
daa
loopne
xchg
mov
inc
stos
push
cmp
pop
mov
cld
add
lahf
jnp
pop
jle
dec
sbb
scas
fwait
jle
dec
mov
rcrl
mov
xor
mov
sbb
xchg
cmp
loope
cmpsb
and
loop
push
jle
mov
mov
jge
sbb
push
push
mov
mov
mov
ficomps
icebp
outsb
sub
push
mov
mov
jge
insl
inc
outsl
imul
pop
and
aam
aam
mov
enter
gs
mov
aas
out
xchg
add
andl
sbb
nop
movsl
movsb
mov
lcall
mov
jecxz
lea
and
outsb
inc
out
sub
xchg
pop
pop
sbb
inc
and
fwait
dec
ljmp
push
jae
dec
inc
pop
cmp
sub
inc
dec
nop
mov
pusha
jg
rorl
add
clc
fs
icebp
adc
cli
push
scas
dec
mov
addr16
push
loop
add
sar
cwtl
leave
or
and
ret
insl
loope
daa
sbb
push
add
dec
pop
mov
sbb
dec
xor
nop
test
push
pushf
cmp
push
mov
xor
push
repnz
icebp
loope
loope
cs
pop
cli
sbb
mov
xor
mov
jae
popa
mov
or
inc
jbe
jle
and
popf
jne
xchg
dec
dec
push
test
push
dec
inc
mov
rorb
push
cmp
jp
push
xchg
pushl
adc
inc
add
bound
fists
add
xchg
jmp
pop
add
sbb
lock
push
dec
jb
shlb
pushf
sbb
mov
sbb
fwait
enter
daa
adc
fwait
test
sbb
dec
mov
pop
fidivs
mov
fwait
les
dec
iret
or
sub
jp
mov
xchg
fimull
mov
mov
inc
push
push
xchg
adc
mov
inc
mov
mov
leave
rclw
push
mov
call
mov
bound
leave
pusha
out
outsb
and
cld
mov
inc
inc
inc
or
test
lea
imulb
aas
aas
and
outsl
loopne
jp
jns
leave
mov
jle
push
lahf
cmpsl
pushf
mov
in
inc
sbb
sbb
scas
xchg
add
jle
sbb
gs
lock
mov
pop
cwtl
add
scas
movsl
data16
stc
ds
pushf
mov
dec
stc
cwtl
sub
movsl
xor
inc
xor
jge
cmp
cmpsl
or
mov
inc
or
push
data16
loope
push
pop
loope
pop
add
mov
add
sub
mov
inc
or
pop
mov
jae
outsl
aas
add
icebp
movsl
or
in
mov
sbb
icebp
jecxz
jp
nop
loope
ljmp
cmpsl
addr16
mov
mov
lods
mov
mov
lods
sub
es
pop
loopne
out
dec
sub
repnz
popf
gs
mov
mov
test
sub
mov
or
sti
cwtl
scas
push
bnd
sbb
jl
push
adc
mov
icebp
push
mov
push
aam
cmp
lahf
sbbl
push
ds
pop
pop
pop
gs
aaa
cwtl
cli
and
push
push
idivb
enter
fidivs
inc
mov
cli
pushl
icebp
loope
pop
movsb
popf
insl
pop
pushf
dec
and
les
pop
addr16
jns
movb
loope
sbb
lods
sbb
xchg
incb
pop
add
and
lahf
push
fs
out
mov
cmp
stos
add
test
mov
int
sbb
jl
shll
arpl
imul
mov
cltd
ret
dec
pusha
cmp
or
mov
call
ds
add
sub
lock
outsb
rolb
cwtl
pop
mov
push
mov
pop
out
icebp
fisubrs
sbb
fcomps
jne
mov
lock
jge
addl
data16
adc
fs
xor
jle
cmp
add
sbb
sbb
sub
pop
inc
repz
jo
jp
jmp
mov
pop
add
inc
outsl
add
stos
jecxz
out
dec
add
mov
push
or
jle
out
pop
roll
adc
popa
pop
inc
test
call
in
loop
push
leave
xor
fwait
std
sub
clc
xchg
sub
jle
outsb
dec
cmpsb
jp
pop
push
mov
inc
push
sbb
repz
mov
jp
xor
add
cmc
or
jge
out
sbb
imul
ret
jl
sbbb
test
in
lea
inc
das
pop
in
lods
sub
fstps
pop
xor
pop
or
jge
pop
scas
and
les
inc
stc
xchg
inc
jne
jl
mov
mov
jg
mov
inc
orl
and
jle
fwait
mov
inc
jne
pop
repnz
ret
mov
jne
push
loop
sbb
add
add
and
jecxz
and
and
jecxz
or
loop
sbb
pop
adc
mov
jg
aas
pop
or
in
mov
and
fistps
cs
sbb
lahf
sbb
je
rcrl
dec
push
lahf
rcrb
shl
loopne
sti
insl
lahf
fwait
mov
push
mov
ret
sbb
repnz
cwtl
les
cmc
and
add
xor
pmaxub
inc
sbb
pop
xor
xchg
mov
movsb
pusha
xchg
jnp
mov
daa
mov
and
jl
mov
pushf
movsl
inc
test
insl
test
imul
cmpsl
mov
mov
mov
sub
test
push
pop
sti
mov
cmc
cmp
sbb
cli
cmpl
mov
and
adc
dec
push
xchg
imul
insl
lds
xor
pop
sbb
shll
add
ficompl
dec
pop
mov
out
adc
bound
dec
scas
mov
ret
xchg
mov
inc
sbb
jp
adc
adc
rorl
pushf
out
jge
arpl
add
jl
xchg
sbb
in
loop
mov
pop
inc
cmpsl
cmp
fisttps
xor
add
pop
das
mov
sahf
dec
xchg
xchg
mov
mov
push
pop
js
xchg
xor
inc
xor
dec
and
mov
mov
jl
daa
addr16
sarb
inc
pop
fidivrs
dec
pop
mov
and
inc
sub
mov
insl
add
push
insb
loope
sahf
adcl
mov
shr
dec
test
cmpsl
push
test
popf
dec
push
es
lret
pop
jg
in
pop
cli
loope
push
add
cwtl
pop
nop
mov
add
pop
nop
push
or
cmp
mov
and
adc
arpl
and
push
test
jno
and
pop
lods
push
daa
imul
add
out
pop
mov
lock
mov
push
fstpt
fstl
les
mov
xchg
loopne
outsb
inc
or
mov
xchg
xor
pop
loope
pop
pop
mov
push
in
arpl
inc
mov
pop
and
push
mov
ficomps
pop
inc
sarl
sub
and
pop
cmpsb
push
xor
and
sti
mov
jle
inc
sbb
jnp
fwait
add
mov
mov
pop
or
cs
out
pop
mov
adc
push
movsb
lods
imul
mov
xchg
repnz
mov
mov
int3
jno
push
pushf
jle
dec
nop
movsl
cmpsb
loop
dec
and
inc
inc
mov
fisubs
dec
test
idivl
and
pop
data16
adc
mov
mov
add
and
std
fdivrp
mov
jns
xchg
cmc
lock
pop
cld
cvtps2pi
pop
cli
mov
cltd
stc
call
cmc
add
cmpsb
and
stos
sbb
sub
aaa
cwtl
xchg
jae
mov
mov
jnp
mov
xchg
adc
popf
pop
mov
pop
movsl
sub
inc
mov
inc
test
shr
xor
cs
sbb
push
inc
jnp
mov
mov
and
sbb
cmc
add
pop
sti
mov
lods
cmpsb
pop
and
push
cmpsl
push
or
dec
inc
test
mov
fwait
mov
mov
xchg
fwait
test
sub
jle
mov
and
add
mov
lea
lcall
sahf
pop
mov
test
movl
bound
stc
aas
lcall
jl
push
decb
inc
add
dec
push
push
pop
loopne
ficompl
mov
addl
fcmovnu
mov
mov
add
add
cs
pop
add
shr
mov
lock
ficompl
lods
xchg
mov
sbb
fldt
ss
jne
jle
sub
iret
pop
lods
stos
fs
test
add
inc
icebp
and
push
sbb
mov
loopne
push
fimull
imul
jp
in
mov
dec
pop
insl
test
ja
mov
sbb
test
in
adc
xchg
cmp
jge
jno
and
push
jno
mov
iret
push
dec
sub
leave
mov
lods
or
push
jo
cmpl
push
mov
fisubs
pushf
test
lds
sbbl
inc
push
fisubrs
and
jnp
aas
mov
fwait
loop
jnp
icebp
iret
cmc
cmp
mov
movsb
and
icebp
add
inc
jle
fldcw
mov
pop
cmpsb
icebp
fildl
vcvtdq2pd
rcrl
and
int3
dec
imul
shrb
js
xchg
inc
jmp
sub
imul
ss
adc
imul
jge
mov
cli
lahf
mov
daa
ds
jg
test
and
mov
and
dec
ljmp
and
cli
pop
push
mov
bound
gs
sbbl
mov
inc
and
sub
pop
repnz
rcrl
sub
sbb
daa
movb
mov
aas
push
ds
cwtl
ficompl
mov
rcrb
push
mov
cmp
pop
sbb
aad
add
adc
xchg
lahf
popa
aas
out
rcrb
mov
mov
lods
jp
cmpsb
out
adc
jg
addl
cmp
adc
add
imul
inc
aaa
xor
outsl
xor
pop
sbb
push
jne
icebp
adcl
fstpt
cmp
andl
adc
movsb
pop
lock
cmc
pop
sbb
cmc
pusha
jecxz
mov
jl
sarl
jp
adc
daa
sti
and
shrb
fstpt
divl
xor
pop
mov
rcrl
nop
add
out
pushf
call
fsubrp
jp
insb
adc
jp
and
adc
iret
mov
test
jl
pop
mov
mov
pushf
push
mov
inc
cmc
int3
dec
xor
ja
jecxz
insl
fwait
enter
mov
test
test
or
push
xorl
stc
cld
or
jle
les
test
dec
rorl
cmpsl
dec
pop
xchg
cs
sahf
inc
insb
sub
and
lahf
mov
dec
sub
mov
shl
cmp
cmp
cs
fwait
sub
jge
mov
push
mov
call
jg
inc
xchg
int
popf
fmulp
mov
inc
loop
mov
sub
adc
or
sub
mov
incl
movsl
loop
jge
pushf
bound
push
mov
cs
inc
xor
mov
mov
sbb
sbb
test
fwait
or
int3
dec
jmp
mov
xchg
sbb
or
cmp
mov
xor
inc
lea
ffree
test
xchg
add
out
dec
pop
inc
mov
fcmove
jge
mov
cli
icebp
and
movsb
iret
xor
mov
dec
xchg
or
shrl
push
ja
and
sbb
popf
dec
inc
xchg
adc
sbb
fisubs
sbb
push
mov
mov
and
std
repnz
int3
incb
mov
dec
mov
popf
cwtl
pop
imul
cmc
mov
mov
testl
xor
xchg
fsubrl
sub
push
and
and
repnz
lods
stos
push
mov
push
aaa
rclb
jl
mov
sbb
shl
push
mov
movl
pop
and
adc
in
lea
loopne
jle
mov
pop
test
xor
aad
ficompl
in
push
loopne
daa
xchg
pop
pop
sub
xchg
loope
mov
jp
sbb
test
lock
push
sarb
inc
mov
in
sub
sbb
repz
add
shlb
icebp
arpl
ficompl
sub
pop
sbb
int
mov
pop
in
pop
popf
push
mov
pop
insb
nop
jp
loop
mov
jp
cli
mov
mov
dec
cwtl
or
push
jle
hlt
ret
add
cmp
aaa
lea
adc
pop
jne
jle
das
inc
add
mov
insl
or
icebp
xchg
mov
stos
dec
inc
jl
arpl
dec
mov
fs
inc
loop
out
jge
jle
js
data16
xor
cmp
mov
sbb
push
push
jbe
jle
loop
and
fdivrs
mov
lret
mov
mov
push
xchg
mov
xchg
sti
out
mov
mov
pop
add
std
cmc
or
pop
jmp
pushf
mov
bound
jle
inc
pop
xchg
mov
sbb
jecxz
cmp
mov
push
xchg
stos
cs
mov
jg
cmc
cld
pop
jg
dec
je
cli
gs
push
cmp
pop
dec
jmp
mov
movsb
cmpsb
addr16
xor
cmc
cmpsl
lahf
and
pop
jecxz
cmpsl
mov
rclb
xchg
dec
int3
inc
sbb
lds
mov
mov
mov
ret
xor
mov
dec
loope
pop
pop
subl
orb
int3
ss
cmp
or
xchg
mov
lcall
xchg
lods
inc
sub
sbb
lds
jae
sbb
lods
outsl
push
fcoml
fildl
cmp
add
pop
dec
cs
stos
sub
dec
push
push
xchg
imul
xor
jle
pop
pop
mov
mov
jp
sub
popa
movsl
add
daa
popf
xor
cwtl
dec
fcoms
cmp
test
xchg
pushf
jle
mov
popf
push
xchg
cltd
scas
add
push
movsb
divl
xor
and
outsb
jg
jl
aas
jnp
scas
pushf
fdivrp
sub
sbb
dec
cs
mov
cmpsl
cmc
mov
fimull
dec
pop
adc
loope
mov
mov
and
test
out
add
fs
lcall
push
orb
pop
and
cli
cmc
jecxz
inc
arpl
pop
or
les
push
pop
jnp
aas
pop
gs
out
xor
dec
nop
bound
into
xchg
jl
jp
or
sar
mov
push
add
mov
push
jno
cmc
sub
mov
dec
xchg
adc
ret
dec
sbb
xchg
flds
sub
je
dec
jns
push
push
xchg
enter
outsb
xchg
imul
jmp
inc
repnz
inc
push
mov
arpl
movsl
gs
cwtl
lds
movsb
mov
sub
mov
stos
pop
dec
out
sbb
xchg
push
in
jecxz
dec
jmp
jle
sbb
add
xor
adc
andl
ret
daa
inc
xchg
push
jge
outsb
add
jmp
mov
loope
or
push
adc
insb
push
pushf
or
das
bnd
xor
scas
mov
jmp
call
push
mulb
das
xchg
out
out
inc
rclb
arpl
jo
dec
sbb
out
mov
ds
mov
mov
xchg
mov
sti
out
mov
ja
mulb
pop
or
xchg
aas
sahf
xor
push
call
mov
pop
cmpl
inc
andb
inc
cmpsl
mov
jle
rolb
mov
sahf
xchg
aam
push
mov
dec
inc
cmc
pushf
sbb
movsb
ds
movsl
pop
out
cmpsb
cmc
inc
fimuls
and
pop
loopne
mov
in
xchg
lcall
mov
movsl
push
adc
loop
cltd
lods
gs
daa
les
xor
add
ds
pop
inc
sbb
add
lds
jp
xchg
movsl
fildll
add
loop
jecxz
cmc
gs
inc
testb
sbbb
rclb
test
mov
lret
aad
icebp
and
test
xchg
adc
inc
inc
add
jg
inc
into
pop
sub
inc
scas
stos
lea
pop
jecxz
inc
mov
cmp
fidivrs
mov
pop
inc
shl
addr16
or
inc
adc
push
insl
cwtl
mov
add
push
jp
mov
pop
movsl
mov
pop
leave
fwait
ret
inc
jle
cmpsb
mov
int
pop
mov
ljmp
jne
jle
push
mov
test
fisubl
mov
iret
jne
jp
mov
test
popa
arpl
xchg
in
fmulp
mov
fs
and
stos
nop
rorb
test
fdivr
jne
fwait
mov
fistps
pop
fimull
pop
ret
fistpl
or
xor
add
aas
outsb
sti
ljmp
jp
mov
leave
fidivrs
popl
mov
sub
pusha
scas
sti
cmc
and
fwait
mov
cwtl
add
dec
jmp
shll
push
mov
rcrl
aad
inc
les
lcall
and
gs
or
adc
fildl
push
inc
or
dec
pushf
jp
sub
and
dec
orl
jmp
loope
sarb
pop
dec
icebp
lea
popa
pop
enter
sbb
rcl
or
adc
inc
add
xor
std
push
movsb
inc
jbe
xchg
jns
bound
push
xchg
mov
push
cmp
mov
adc
or
dec
dec
inc
fwait
inc
mov
dec
xchg
and
sbb
pop
mov
cmp
fsubs
pop
ds
jp
mov
and
push
mov
insb
cwtl
pop
sbb
fs
lea
adcb
add
xor
mov
inc
cmc
std
mov
or
push
push
fs
loope
ret
adc
dec
sbb
mov
lahf
mov
cmp
jge
pusha
inc
inc
push
nop
lcall
inc
mov
dec
dec
sub
cmc
daa
popf
and
cmp
sbb
mov
fwait
movsl
cmpsl
sub
add
in
repnz
std
cli
inc
mov
push
fdivrp
jne
sbb
mov
and
inc
jge
fwait
and
inc
xor
pop
shlb
lea
mov
mov
inc
sbb
pushf
in
pop
pusha
xor
dec
aad
lahf
shrl
mov
and
shlb
push
pusha
cmp
and
pop
pushf
cli
cmp
xor
pop
push
dec
sbb
xor
push
mov
jnp
fidivrs
mov
push
and
imul
sbb
in
cltd
pop
inc
adc
test
subb
sbb
js
xchg
rolw
sbb
sarl
pop
in
fwait
mov
dec
les
ret
mov
jecxz
movsl
fimuls
dec
sbb
shll
aas
sbb
inc
push
jg
sbb
mov
mov
sbb
add
sub
jne
mov
inc
orb
sbb
cmpsb
retw
aad
ret
test
aam
cmp
jge
mov
adc
repnz
or
out
sti
icebp
push
jle
int
cld
dec
lock
test
mov
pop
pusha
push
notl
arpl
cmc
shll
sahf
lcall
inc
popw
jnp
jl
sti
js
bound
xchg
adc
inc
mov
cmpsl
mov
addr16
movsb
fdivp
cmc
mov
ret
incb
mov
pop
movsb
sbb
mov
movsl
jno
push
gs
test
and
sahf
push
mov
cmc
fs
sub
dec
dec
pop
insl
inc
mov
mov
mov
adc
pusha
loop
mov
mov
push
bound
inc
push
mov
mov
ret
ret
xchg
popa
mov
cmp
pop
cmp
stos
cs
inc
cs
and
mov
sub
push
xchg
push
push
lahf
shrb
pop
fidivrs
les
mov
pop
int3
inc
aas
xor
xor
aaa
dec
add
inc
inc
xor
push
mov
pop
clc
daa
imul
cmp
sti
mov
aad
inc
sti
jb
xchg
fildl
andl
xor
scas
dec
push
or
mov
cmp
int3
pop
sbb
jmp
pop
fmuls
adc
jp
push
mov
cwtl
push
call
sub
sbb
add
adc
lock
mov
inc
inc
pop
sbb
loop
mov
mov
sub
adc
or
outsb
sti
add
inc
mov
nop
ret
jl
mov
mov
mov
ja
add
rcrl
mov
pop
mov
sbb
pushl
orl
dec
daa
in
test
jge
jle
adc
jle
pop
ss
mov
adc
and
or
nop
daa
sar
push
cmp
pusha
sub
das
adc
jle
cmc
inc
xchg
fwait
inc
mov
and
jle
cli
aaa
xchg
ret
mov
cs
dec
pop
outsb
pushf
sahf
jmp
nop
std
imul
jg
push
movsb
jmp
sbb
xchg
andb
fisubl
push
mov
add
lcall
pop
pop
sub
mov
fdivrs
lea
add
in
fdivrl
xor
sbb
dec
movsb
cmc
in
add
jb
xor
inc
fidivl
cmp
lods
lods
ss
pop
cmp
xchg
std
xchg
ret
push
es
xor
xor
pop
mov
cmpl
ret
cmc
sbbb
icebp
lret
mov
sub
loope
pop
push
pop
or
aas
cld
mov
jne
mov
pusha
jl
sbb
pop
fistpll
mov
push
lret
jle
movsb
lret
dec
xor
adc
rcrb
inc
cmp
fisubrl
lock
pop
pop
mov
cmp
jge
dec
test
nop
jl
mov
push
fldcw
mov
xchg
fwait
test
scas
lods
pop
push
mov
aad
sti
adc
lret
cmp
divl
imul
jge
cmp
ja
addr16
cwtl
pop
xchg
cltd
jno
jmp
push
mov
push
and
mov
andl
inc
loope
xchg
out
lahf
loope
cmc
mov
ret
cmp
mov
lcall
arpl
xor
fcoml
test
cmc
xchg
sbb
push
repnz
and
push
inc
pop
mov
ret
fbld
jle
scas
push
push
sar
push
cmp
nop
push
xor
cmpsb
jne
mov
sarb
jne
jp
notl
mov
cmp
in
movl
test
lock
jne
pop
cmpsl
sarl
jnp
cltd
aas
pusha
gs
xchg
sub
loop
push
cwtl
mov
push
adcb
push
test
idivb
fidivl
jp
lea
inc
cmp
rol
or
fwait
cmpsl
loope
jp
adc
fcmovb
xor
lahf
sbb
mov
je
loop
and
mov
push
mov
or
cmp
or
sbb
dec
xchg
and
push
mov
jle
xor
jg
mov
add
jge
loope
fwait
inc
mov
ret
movsl
or
push
insl
pushf
daa
mov
xor
movb
xchg
push
jnp
adc
ret
mov
push
je
fcompl
loopne
cmc
mov
xchg
lock
and
mov
sti
xchg
test
mov
popf
jae
inc
lahf
scas
or
inc
xor
cltd
shlb
cmp
mov
jge
cwtl
enter
int
imul
shr
sbbb
pushf
mov
sbb
je
and
inc
cmpl
fldt
sub
dec
orl
insb
pop
mov
pop
mov
stos
ss
sbb
sbb
fwait
add
mov
loopne
sbb
mov
xchg
inc
xchg
inc
xor
push
in
mulb
push
mov
sbb
mov
mov
outsl
adc
mov
ret
mov
and
or
sub
vucomiss
jp
dec
mov
push
cmp
fwait
lds
pop
inc
mov
adc
dec
adc
xchg
lahf
aas
mov
aaa
inc
in
mov
in
dec
loope
daa
les
stos
or
lea
jne
fildl
push
lds
and
mov
fldt
cmc
pop
mov
xor
mov
inc
push
or
mov
cmpsl
push
sbb
xchg
cmp
and
pop
jle
mov
mov
pop
xor
mov
cltd
push
inc
subl
cmp
dec
ss
jle
rcll
les
mov
out
push
inc
call
jecxz
mov
mov
cmc
lds
xchg
shr
or
and
mov
movb
jp
push
or
lock
fimuls
push
ret
inc
jl
daa
jecxz
jecxz
mov
jle
push
sub
aam
aam
sub
or
movsl
dec
pop
or
arpl
pop
fwait
inc
adc
push
mov
pop
lahf
sub
and
jo
addr16
mov
lret
orb
cmp
jge
cli
imul
push
stos
dec
pop
std
sub
push
inc
dec
std
lret
inc
mov
sub
rorb
mulb
or
jge
sub
cmp
idivl
pop
cmp
push
ljmp
stc
ret
xor
rcll
xchg
in
dec
inc
pop
div
push
jp
lahf
add
add
mov
addr16
mov
pop
xchg
stos
dec
inc
mov
rolb
loopne
dec
out
pop
dec
cwtl
in
mov
data16
insl
pop
pushf
loope
jnp
popf
add
roll
sahf
daa
rcll
mov
sbb
dec
jp
xchg
popa
test
adc
movsl
and
add
rcrb
or
insl
ret
add
gs
mov
pop
jne
icebp
and
or
loope
mov
mov
xchg
mov
data16
arpl
jge
adc
test
dec
mov
push
bound
inc
ret
sub
ss
sub
mov
cmp
xchg
xchg
dec
inc
pop
das
out
sbb
movsl
arpl
xchg
mov
inc
jbe
and
sbb
cmp
ficoms
loopne
cmp
pop
add
xor
and
pop
fnstsw
aad
inc
sbb
and
lods
ss
js
xchg
push
mov
icebp
jge
lods
loope
cmc
popf
add
fwait
es
adc
mov
icebp
call
xchg
cmp
repz
loopne
mov
mov
or
mov
xor
nop
aas
and
lahf
mov
xchg
lcall
add
ret
adc
cmp
mov
imul
les
add
pop
outsb
and
imul
cmc
mov
or
sbb
jge
pushf
jecxz
lret
push
cmc
push
adc
pop
lock
and
sbb
jg
pop
mov
addb
scas
outsb
popa
insb
imul
cwtl
data16
mov
mov
mov
and
and
jno
or
sub
jbe
ret
test
inc
rcrl
aaa
rcll
add
push
mov
mov
push
push
popa
fwait
dec
fidivrs
mov
jle
xor
loop
cltd
insl
out
push
jmp
cmp
and
dec
mov
sub
pushw
gs
sti
nop
sbb
sti
push
fwait
lahf
pop
mov
ja
inc
lahf
inc
xchg
add
jecxz
repnz
loope
ljmp
push
mov
sub
jge
mov
out
std
xchg
sub
ljmp
cmpsb
adc
pop
in
xchg
inc
popf
jne
ja
addr16
inc
cmpsb
inc
jns
std
jp
loope
shrb
mov
mov
cmp
dec
dec
mov
or
dec
pop
push
sbb
jne
xor
popf
mov
pusha
dec
inc
and
imul
pushf
dec
cmp
push
outsb
test
pusha
push
fidivrl
popf
and
daa
mov
pop
jle
fistpll
mov
cs
mov
xchg
sbb
mov
push
add
jge
call
xchg
add
scas
fmul
and
cmp
sti
pop
pop
fistl
inc
rolb
mov
mov
and
adc
dec
jne
jle
xchg
inc
mov
fldt
loope
dec
adc
sub
movb
hlt
notb
call
leave
pop
adcl
mov
mov
add
mov
xchg
sub
and
sbb
sub
fs
sbb
dec
jecxz
cmp
sbb
mov
dec
pushf
and
cmp
pusha
inc
and
nop
bound
mov
inc
movsb
popa
or
loope
pushf
dec
icebp
dec
pop
and
inc
mov
movsl
and
in
adc
jnp
loop
mov
mov
daa
mov
mov
mov
sub
mov
cmp
dec
rclb
add
int3
movsl
test
mov
ret
jno
mov
xor
aaa
inc
add
inc
jp
xchg
mov
jle
xchg
in
mov
popf
movsl
mov
rcrb
push
xchg
xor
icebp
das
mov
cli
push
pop
lahf
mov
jno
sbbb
mov
pushf
push
push
loope
pop
sbb
jp
dec
xchg
gs
in
rclb
push
out
inc
mov
add
push
imul
nop
leave
in
scas
push
pop
xchg
aam
aam
mov
add
mov
gs
xor
in
sub
rolb
and
add
pop
dec
inc
mov
icebp
or
popa
mov
ror
cs
mov
addr16
shll
xor
dec
fwait
movsl
imul
adc
rcll
cmp
mov
jne
inc
jecxz
shll
test
mov
test
mov
cli
push
mov
mov
pushf
fadd
push
gs
shll
movsl
cs
cmp
mov
movsb
arpl
xor
bound
or
test
xor
inc
adc
cmc
add
add
and
into
sbb
pop
mov
movsb
rcrl
push
push
add
sbb
icebp
mov
out
lods
inc
xchg
pop
add
aam
push
mov
mov
inc
scas
sbb
mov
sub
test
lock
and
pop
xchg
sbb
rcr
inc
push
pop
push
movsb
jnp
jecxz
jge
rcl
mov
das
ret
dec
push
fcoml
rcrb
pop
lods
mov
sub
fld
lcall
push
mov
and
jne
push
and
repnz
mov
inc
sub
cmpsb
rcrl
int3
imul
and
shl
ss
cmp
fists
inc
xor
cmovle
insl
ror
xchg
aaa
xchg
movsb
lock
jle
lods
cwtl
lahf
sub
cmpsb
stos
pop
lcall
xchg
inc
xchg
fiaddl
jne
outsb
fldt
pop
inc
jg
rclb
xor
xchg
cmp
in
sbb
movsb
mov
cmp
xchg
mov
cmpsl
ret
out
cwtl
pushf
scas
mov
mov
les
or
xchg
push
ret
mov
cmp
cmpsb
mov
loop
pop
mov
adc
push
arpl
addl
imul
xor
scas
inc
mov
dec
out
imul
and
addb
add
call
enter
aam
insl
cld
pushf
sbb
dec
inc
fildl
mov
xchg
lret
dec
add
xorb
outsl
jle
cmp
jp
inc
movswl
pop
lahf
lock
mov
pop
mov
mov
pop
test
dec
cwtl
mov
mov
mov
cmp
sarb
in
cmpl
inc
add
repnz
mov
outsb
jle
addr16
pop
fisubl
pop
gs
xorl
xor
and
xlat
push
xchg
rcrb
or
shrb
aam
aam
sub
xchg
lds
push
mov
rolb
or
shrb
push
xor
xchg
dec
xchg
lds
out
mov
rcl
test
inc
insb
mov
dec
jnp
shll
jge
jle
fimull
add
mov
adc
or
push
mov
adcl
jmp
pushf
jge
sub
dec
dec
jns
std
arpl
mov
and
popa
xor
cmp
jmp
push
subl
rcr
ret
fsubl
ljmp
test
sahf
out
repnz
jle
push
cltd
mov
mov
lahf
cmc
and
mov
cwtl
int3
loopne
pop
push
mov
mov
or
loope
add
ret
inc
loop
mov
or
int3
mov
and
nop
inc
sbb
ret
rol
sub
popl
cmp
and
out
or
lret
jecxz
ds
add
dec
sub
mov
pop
lock
mov
mov
pop
and
mov
rolb
pop
sbb
push
adc
scas
push
popa
add
inc
pop
inc
sarl
es
test
or
imul
push
or
addb
sub
js
push
pop
jecxz
sbb
fcompl
addr16
les
push
outsl
jp
mov
enter
xchg
loope
adc
push
iret
jecxz
pusha
insb
stc
mov
push
or
rol
cltd
pop
push
push
push
xor
pushf
jne
or
pushf
add
jp
add
loope
mov
mov
enter
ret
cmc
rorb
ficoml
jne
movsl
out
mov
adc
push
add
cmp
jle
pop
pop
cli
loope
xchg
std
inc
sub
push
pop
sbbb
mov
cmc
inc
mov
and
sbb
ret
fidivs
push
and
or
mov
push
add
nop
divb
andb
gs
sbb
pop
push
js
fstl
addr16
xor
xchg
push
vshufps
xor
push
mov
mov
mov
adc
das
mov
call
cwtl
fiadds
push
adc
sahf
nop
cs
ljmp
mov
sahf
imul
push
retw
test
inc
add
pushf
loopne
cmp
xchg
ficoms
mov
pop
sub
icebp
push
inc
fnsave
das
xchg
jg
mov
inc
sbb
int3
test
je
cmp
mov
aas
push
fldt
dec
pop
pushf
mov
fiaddl
int3
sub
lret
adc
cmc
or
xor
out
rep
push
es
inc
cli
stos
jmp
movsl
daa
loopne
inc
in
xchg
sahf
and
sub
rcr
and
dec
xchg
call
jnp
xor
xchg
jp
inc
daa
inc
aam
stos
loopne
daa
idivl
push
into
popa
sbb
cmc
cmp
in
cwtl
popa
loopne
push
add
inc
jle
cli
dec
repz
jp
outsl
movb
icebp
movsl
pop
add
cmp
fldl
int3
jb
shlb
lods
dec
sbb
mov
jg
pop
icebp
shll
xor
adc
addr16
mov
adc
scas
ret
lret
notb
push
jne
jl
dec
addl
sar
push
pop
pop
imul
add
std
dec
push
data16
pop
in
adc
push
sub
fsubl
sti
sub
inc
cmp
sub
xchg
jle
sub
mov
addl
sbb
sarb
cmc
and
xor
dec
and
outsb
mov
pop
stc
dec
sub
push
addl
jl
dec
test
loopne
test
jp
jmp
push
jge
push
movsl
imul
les
inc
mov
mov
xchg
pop
jbe
xor
dec
ss
pop
test
inc
std
gs
mov
in
adc
sbb
test
gs
jae
inc
sbb
or
or
movsb
mov
repnz
ret
pmaxub
jns
cwtl
pop
fwait
xor
test
repz
push
add
lahf
inc
xor
cltd
pusha
inc
xchg
inc
jb
jp
add
aas
gs
xchg
pop
xchg
bound
xor
push
pop
stc
stos
mov
sbb
nop
inc
sar
push
arpl
mov
mov
daa
push
aas
mov
mov
mov
lock
sahf
push
cltd
adc
pop
mov
andps
sbbl
mov
ss
cld
rorb
xor
pop
cmp
stos
inc
mov
pusha
popw
mov
dec
sbb
dec
add
loope
mov
pop
dec
icebp
fsubs
into
dec
test
outsl
cmc
leave
dec
pop
sbb
mov
xor
mov
icebp
cmp
push
push
dec
mov
mov
inc
mov
or
inc
movl
add
pop
inc
dec
or
cmp
dec
pop
sarl
stos
inc
pop
sbb
fwait
cs
pop
dec
ret
jge
loope
jle
xchg
inc
in
mov
fstp
push
lcall
out
pop
inc
icebp
out
or
sbb
xchg
loop
jp
or
inc
inc
andl
rcl
mov
pusha
pop
loope
sub
cmp
fmull
test
movl
push
inc
adc
fs
push
ljmp
ficoml
adc
sbb
sbb
mov
jl
add
out
pop
mull
cmpl
push
dec
jbe
leave
lock
arpl
mov
sbb
inc
movsl
xor
xor
fwait
jle
push
push
mov
sub
sbb
or
mov
inc
lods
inc
fcmovu
xor
xchg
mov
pop
es
popa
fcoms
and
mov
data16
xchg
mov
je
mov
jp
pop
rol
vpsllw
inc
inc
and
movsl
call
fwait
jle
test
cli
inc
loope
sbb
shll
jmp
pop
jp
xlat
movb
cmp
mov
or
sbb
sub
xor
push
and
jge
push
pop
jl
and
adc
divb
pop
dec
and
push
inc
jnp
cmc
inc
mov
in
test
sbbl
in
ret
jae
pop
fs
mov
xchg
fdivrs
mov
insl
jne
int
xor
fmulp
inc
aas
adc
pop
add
sbb
sbb
lock
std
repnz
push
sub
rcll
aas
mov
fcmovne
fcompl
in
cld
jne
sbb
fcompl
and
jp
std
pop
cmp
loope
xchg
mov
pop
fimuls
lret
leave
fsubl
mov
jnp
loope
jp
or
les
mov
jle
sub
mov
icebp
movsb
mov
stos
inc
loopne
cmp
adc
mov
push
jge
adc
push
mov
jp
addl
aas
inc
loope
outsb
in
push
aam
addb
pop
jne
jnp
outsb
push
popf
pop
pop
push
call
aas
rcrb
call
std
inc
rcrl
sbb
push
jecxz
inc
in
insl
pop
ds
push
sbb
rcll
test
mov
sbb
and
clc
jl
and
xchg
pop
mov
push
dec
xchg
pushf
jge
out
lods
adc
jne
lcall
jle
pop
push
cmpl
pop
icebp
adc
shrl
jnp
movsl
xchg
inc
aad
and
sbb
push
icebp
subl
mov
jp
mov
pop
add
sub
pop
in
cli
or
cmp
jg
xchg
and
push
sbbl
mov
mov
jecxz
pop
sarl
add
xchg
dec
lea
and
or
pop
sub
mov
push
adc
repz
imul
sub
testl
lock
lcall
enter
push
xchg
mov
lahf
or
mov
mov
push
or
lds
inc
mov
mov
loope
push
push
jns
add
dec
test
pop
push
sahf
fimuls
movsl
lods
jno
iret
mov
pop
dec
mov
push
sub
mov
lock
loop
jge
lock
test
sub
inc
lret
cld
xor
mov
pop
jns
jp
insb
imul
ret
jecxz
int3
push
gs
outsb
mov
mov
aas
push
pop
aas
mov
adc
inc
xor
inc
orl
dec
lahf
jnp
inc
jle
in
lahf
jp
test
cmp
nop
inc
clc
xchg
xlat
cmc
repnz
mov
mov
dec
lock
mov
pop
inc
push
mov
mov
xchg
cli
hlt
jecxz
sbb
sbb
xchg
aam
xchg
pop
lahf
rcrl
mov
sar
push
rcrl
and
xchg
inc
mov
adc
add
cmc
movsl
arpl
or
mov
jae
adc
inc
inc
nop
sub
mov
push
jg
dec
inc
mov
dec
dec
mov
xor
and
cwtl
mov
sub
add
xchg
mov
lcall
push
xor
mov
mov
rcll
ret
fwait
cmpsl
adc
fdivrp
mov
stc
dec
cwtl
sub
push
cs
daa
inc
inc
add
pop
sub
mov
mov
test
jns
dec
imul
pop
inc
ret
div
mov
mov
push
dec
mov
push
adc
and
ret
xchg
sbbb
shlb
cmc
subb
jecxz
imul
xorl
das
pushf
or
fisubl
lock
out
imul
jge
pop
pop
mov
pop
inc
addl
and
cmc
nop
inc
and
xchg
out
jle
arpl
sbb
imulb
inc
add
push
js
in
sub
cli
fs
mov
pop
mov
fsubrs
sbb
mov
scas
push
push
xchg
mov
stos
ds
lret
jle
push
xchg
in
mov
jb
jle
mov
inc
cmp
sarb
sahf
icebp
adc
cli
push
gs
inc
push
and
daa
pop
mov
jge
mov
add
inc
sub
pop
add
loope
jle
pop
fdivrp
mov
jge
pop
les
push
movsb
mov
in
ret
inc
movsl
rclb
fiadds
mov
cmpsl
cmc
shll
ss
sbb
pop
and
mov
or
sub
and
jle
aaa
jle
test
fisubrs
mov
inc
scas
imul
lret
loope
fdivs
adc
ds
test
push
mov
inc
andb
inc
in
cmp
dec
push
test
es
adc
push
and
xor
or
sarb
dec
xchg
and
inc
shl
jmp
inc
push
fidivrs
pop
add
mov
and
sub
push
mov
xor
inc
adc
cmp
push
adc
pop
and
gs
mov
movsl
mov
jle
outsb
pop
shlb
negb
test
rcrb
ds
and
fwait
lahf
dec
sub
data16
cmpsb
or
loope
jle
test
adcl
mov
lods
sbb
fcmovb
inc
inc
movsl
adc
mov
jno
cmc
loope
xchg
sub
cwtl
jnp
add
loope
in
je
mov
lods
mov
arpl
push
icebp
cmp
mov
sbb
mov
xor
fs
fidivs
ss
mov
movb
and
cli
popa
gs
adc
push
cmp
or
jp
inc
lahf
cmp
mov
je
daa
pop
scas
inc
dec
pop
cli
mov
jle
lods
mov
xchg
fstpt
lcall
sbb
adc
push
inc
inc
inc
sbb
mov
cs
sbb
fldl
ss
mov
ljmp
jg
sti
sub
xor
jge
adc
sub
mov
jns
sub
xor
inc
cmp
cmpsl
inc
sub
in
fwait
or
lods
popa
cmpsl
mov
mov
leave
push
cmpsl
pop
fs
popa
outsl
jnp
loopne
jle
jmp
sbb
and
mov
mov
sbbb
jl
jnp
loope
xor
sbb
and
mov
or
leave
inc
push
cmc
sbb
mov
cwtl
mov
ss
inc
pop
hlt
pushf
mov
mov
out
call
jl
pop
vucomiss
fldenv
dec
jne
push
shrw
jle
int
loopne
into
inc
sbb
add
scas
jle
dec
fsubs
push
test
xorb
sub
imul
dec
fldt
arpl
and
push
pop
lea
sub
pop
lds
icebp
mov
jp
cs
lcall
xchg
jmp
sub
rorl
pop
pushf
pop
mov
imul
lcall
mov
pop
cmp
loope
fwait
dec
mov
and
jne
mov
sti
icebp
cmp
movsl
enter
and
jne
mov
test
sub
pushf
icebp
mov
mov
mov
dec
jge
cmpsl
add
lahf
add
sub
xchg
mov
push
mov
jp
inc
or
pop
inc
adc
add
cli
push
fstps
xchg
sbb
adc
push
inc
xchg
arpl
mov
gs
push
dec
dec
fdivs
xchg
jge
inc
mov
xor
adc
aam
inc
rorl
mov
mov
or
mov
inc
sbb
shll
cmpsb
fsubl
test
leave
inc
sbb
or
test
cltd
jne
icebp
inc
repnz
int
lods
pop
xlat
pushf
inc
lock
ficomps
gs
pushf
movsl
mov
xchg
or
sbb
jecxz
movsb
add
dec
imul
pop
mov
adc
cmp
popf
mov
test
mov
outsl
sub
push
pop
cwtl
add
sbb
add
in
dec
mov
mov
jl
mov
scas
jle
int3
xor
lock
or
add
lahf
cwtl
scas
jle
or
movsl
mov
cmc
loopne
bound
arpl
mov
add
scas
dec
mov
bound
in
das
dec
jle
arpl
aad
xchg
dec
push
or
ds
cli
cltd
xchg
cmp
insl
in
pop
inc
fidivrs
pop
cli
imul
mov
shll
dec
xchg
test
jp
addb
scas
inc
test
dec
ret
mov
ret
pop
in
add
lock
lahf
rolb
aas
mov
jp
outsb
sub
loope
dec
cmpl
adc
push
mov
jae
inc
iret
sbb
cwtl
enter
push
push
jl
aas
push
and
cmp
cmovno
rcrb
jle
out
dec
sbb
pop
imul
lods
addr16
mov
cmc
mov
mov
fnsave
sub
ret
insl
mov
aas
jge
mov
inc
rclb
and
loope
mov
jnp
sub
mov
sti
lcall
push
ss
xor
add
jns
cli
push
outsb
test
cmpsb
pop
cmp
inc
out
jns
jp
sub
data16
popa
mov
fcmovb
mov
lahf
add
dec
and
jg
mov
sti
les
jp
inc
das
inc
jl
jmp
cltd
loopne
hlt
dec
leave
rcrl
test
sarb
push
mov
nop
add
push
les
add
adc
cmp
sbb
mov
in
jnp
and
mov
jecxz
bound
scas
xchg
mov
out
pop
pop
sub
lcall
aam
jge
fwait
loop
pop
out
orl
popf
push
add
inc
jge
sbb
xor
inc
inc
jne
adc
scas
pop
aas
mov
shll
sbb
pusha
pop
fildll
loope
pop
test
popa
inc
ficompl
imul
xorl
loope
out
loop
cmpl
xchg
xor
inc
cli
dec
pop
mov
xchg
xchg
arpl
repnz
mov
inc
add
inc
jnp
sbb
mov
xchg
inc
std
xchg
dec
mov
addb
mov
pop
lds
mov
test
xchg
or
xorb
loope
inc
into
cwtl
lods
inc
add
stos
jnp
icebp
xlat
jp
push
inc
les
int3
gs
shl
jle
repnz
ljmp
cmp
xchg
sbb
mov
xor
jmp
cmc
add
mov
loope
and
push
xorb
leave
repnz
or
sbb
pop
cs
inc
aam
push
std
jb
iret
push
imull
cli
jmp
ljmp
test
repnz
cli
push
mov
mov
aad
sar
pop
sbb
mov
imul
pop
pop
mov
xor
xchg
cld
movsl
inc
add
or
jp
dec
daa
adcl
icebp
push
push
jnp
sub
call
jns
mov
outsl
mov
mov
jne
cmc
add
fs
cmp
in
mov
ret
mov
inc
push
mov
rorb
sbb
mov
inc
mov
jle
test
dec
pushf
and
inc
movl
mov
outsb
mov
xchg
jecxz
sbb
repz
xlat
sbb
addl
and
mov
aas
mov
nop
loop
add
and
shrl
pushf
cmpsl
mov
cmpsb
insb
pop
std
fld
mov
lret
inc
fisubs
jnp,pn
sub
dec
xlat
inc
mov
cmc
sub
and
jl
mov
hlt
mov
push
lods
fwait
insl
sbb
mov
arpl
sub
add
rcl
inc
mov
mov
xlat
and
icebp
mov
pop
jnp
addr16
push
add
xchg
pushf
hlt
inc
add
mov
mov
jmp
pushf
mov
inc
divl
jp
mov
mov
or
sbb
or
out
dec
pushf
and
dec
mov
pop
mov
pop
push
adc
cmpsb
movsl
pop
sar
pop
push
gs
sbb
xor
ss
and
inc
pop
loop
jl
mov
cmc
ret
xchg
faddl
mov
pop
push
cmp
pushf
or
arpl
cwtl
sub
pop
and
or
push
nop
inc
sbb
and
xchg
in
inc
inc
or
fidivl
add
pop
cmc
int
fisubrs
xor
adc
and
and
sub
loop
mov
inc
es
add
pusha
inc
scas
or
mov
icebp
inc
rcrb
sub
lcall
out
pushf
movsl
fildl
dec
xchg
test
movsb
sbb
inc
pusha
jnp
adc
jecxz
push
add
imull
mov
mov
loop
jmp
mov
gs
mov
icebp
and
mov
add
and
iret
cmc
test
aas
add
sub
leave
ss
out
xor
sub
mov
xchg
insl
adc
jge
sbb
loope
push
cwtl
sbb
mov
lea
inc
pop
lahf
loope
jp
push
arpl
mov
dec
mov
jle
outsl
dec
and
pop
jp
or
shll
rclb
mov
aas
call
ret
xor
pop
pop
add
and
repnz
sarl
imul
cmpsb
insl
pop
in
mov
sbb
mov
psrad
push
mov
sub
mov
pushf
push
inc
ret
lods
loopne
aas
xor
xadd
inc
and
jne
push
push
xchg
inc
les
xchg
cmp
add
push
std
cwtl
int3
loop
imul
test
movlps
xchg
and
sbb
fcoms
mov
inc
fbld
in
pop
or
mov
mov
xchg
push
repnz
xchg
cwtl
xchg
mov
test
mov
fisubl
lcall
sbb
pop
push
lea
test
pop
mov
mov
fdivrl
lret
pop
pop
pop
xchg
addb
xchg
loop
bnd
fistpll
jle
xchg
mov
movl
and
mov
sub
lret
jg
loope
pushf
pop
ds
pop
icebp
fnstenv
daa
inc
adc
pop
cmpsb
cmc
bound
add
pop
or
lahf
adc
jne
xor
adc
addr16
jecxz
dec
cmc
inc
add
pop
lahf
loope
fwait
dec
lahf
sub
cmc
movsb
push
mov
lahf
xor
daa
pop
xchg
sti
or
sahf
sub
imul
add
lahf
or
push
inc
add
cmc
push
rclb
flds
and
inc
lret
leave
sub
and
adc
jg
pop
inc
data16
icebp
sbb
sahf
sbb
cmp
test
cmpsb
xor
inc
mov
jns
lock
sbb
fnsave
shll
dec
int
jecxz
int3
lahf
fs
pushf
ds
lods
dec
daa
adc
mov
cmc
ficompl
pop
shlb
fst
mov
fcoms
xlat
pop
xchg
and
jno
mov
cwtl
pop
cmp
outsb
add
ja
addr16
call
mov
pop
mov
jne
bound
mov
dec
das
call
and
inc
pop
cmpsl
push
rcrb
push
and
lock
jns
sti
gs
repnz
loopne
sub
out
or
leave
adc
aas
or
pusha
std
icebp
push
jp
add
sbb
rcrb
cli
inc
popw
idivl
adc
bound
sbb
cwtl
popl
push
push
jnp
lcall
xor
out
fs
mov
sub
jecxz
cwtl
pop
addr16
movsb
inc
stos
popl
mov
pop
lcall
inc
arpl
pop
mov
cmc
jnp
outsb
push
and
jns
jbe
inc
lock
out
mov
cli
xchg
mov
loopne
mov
enter
and
scas
sub
push
jle
pusha
leave
mov
mov
and
arpl
sbb
icebp
add
dec
jp
and
jne
pop
ret
mov
cmc
movsb
adc
lahf
loope
das
cmc
jmp
imul
ret
pop
and
inc
mov
xor
adcl
mov
fwait
pop
xchg
cmp
jne
icebp
inc
mov
roll
loop
mov
cwtl
fiaddl
mov
aas
sbb
push
std
stos
xchg
fdivrl
xchg
inc
mov
mov
or
lret
pop
pop
popfw
inc
inc
adc
push
in
jp
mov
les
cmp
pop
inc
jne
mov
jmp
mov
xor
inc
sub
mov
push
jecxz
and
fsubrp
mov
cmp
or
fcmovnb
mov
shll
popa
test
dec
out
or
sub
cmc
or
sbb
inc
outsb
cld
das
jp
pop
icebp
xchg
jle
jb
jge
sub
enter
sahf
es
or
mov
inc
and
pop
push
mov
push
and
fildll
mov
jle
add
adc
and
adc
xchg
add
rolb
pop
and
bswap
gs
rcll
iret
cmp
ret
push
lcall
jle
xor
inc
mov
xor
xlat
mov
mov
andb
sbb
and
aas
movsb
push
xor
push
dec
mov
jg
dec
mov
aam
inc
mov
outsb
out
imul
jb
sar
mov
xchg
lods
inc
cmpsb
or
pop
sahf
cltd
mov
les
jle
jbe
xor
jg
or
test
mov
mov
sbb
shll
and
mov
les
add
pushf
adc
mov
lret
negl
pop
adc
mov
inc
cmp
and
sbb
stos
inc
inc
ficomps
inc
dec
jnp
rcl
mov
push
sahf
jne
icebp
inc
mov
sti
sbb
xchg
push
mov
movsl
data16
sub
sub
mov
jne
fisttpll
mov
pop
gs
adc
dec
cld
pop
pop
sub
test
xor
cwtl
test
sbb
mov
cmpsl
insl
repnz
leave
push
sbb
mov
inc
mov
mov
push
jg
icebp
xor
sub
add
sbb
xchg
icebp
test
cld
mov
mov
popa
repz
push
adc
mov
mov
out
scas
cmp
negb
and
pop
jecxz
mov
lock
and
cli
push
mov
nop
fstpt
lods
mov
mov
in
xchg
pop
pop
cmp
lea
push
popa
xor
push
sbb
xor
lahf
cmp
xchg
sub
popf
fwait
add
push
sbb
data16
mov
push
dec
fsubl
push
stos
cwtl
daa
pop
loop
mov
ffreep
mov
cmp
int
cld
sub
gs
adc
mov
scas
push
pop
dec
nop
fidivrl
pop
add
cmc
mov
jmp
fs
mov
sub
push
movsl
push
mov
mov
pop
loope
add
pop
xorl
pop
lods
nop
lds
xorb
adc
enter
jge
mov
xchg
jecxz
pop
ret
xchg
sbb
push
ds
push
xor
jle
jp
xchg
stos
cmp
push
and
mov
movsb
nop
pop
push
sahf
or
pop
sub
jle
loop
sbb
mov
jp,pn
dec
dec
jl
imul
mov
jl
adc
ret
jp
mov
ret
jp
in
addl
fwait
jae
enter
jo
decl
adc
test
add
adc
mov
xchg
jnp
add
jl
xor
into
push
mov
mulb
arpl
shlb
mov
mov
imul
push
jge
mov
xchg
sar
shll
pop
inc
subl
addr16
mov
mov
imulb
mov
add
fstp
int3
push
pop
nop
jnp
jnp
decb
jns
inc
inc
in
push
lahf
arpl
mov
push
or
inc
mov
fistl
add
data16
push
pop
es
or
aad
jl
mov
pop
dec
cmp
lahf
or
movsl
aaa
les
add
push
leave
mov
mov
cli
mov
cwtl
out
mov
orb
loopne
les
cmp
push
fldt
pushf
and
mov
mov
dec
gs
add
sbb
dec
test
push
inc
mov
sbb
mov
inc
jbe
outsb
inc
add
daa
push
sub
loope
fwait
push
repz
gs
jl
rorb
movsb
mov
jmp
pop
or
cmpsl
out
and
fsubrp
std
cwtl
loopne
add
mov
pushf
add
sub
lock
xor
and
add
xchg
fistpl
shrb
pop
fidivs
aas
or
cld
push
xchg
lods
sub
and
addr16
test
int3
cs
inc
cmpsb
push
popa
leave
dec
inc
pop
inc
stos
movsl
loopne
adc
and
push
jecxz
inc
mov
fwait
loope
cmc
fisttpl
rcl
inc
loope
stos
loope
aaa
jge
jp
jb
adcl
inc
push
lret
adc
sub
in
inc
fcompl
pop
test
dec
leave
fiaddl
or
adc
ret
bswap
fs
dec
lcall
mov
nop
lret
repnz
add
mov
sbb
and
sti
imul
jecxz
pop
jp
les
adc
xor
sahf
pushf
mov
out
nop
or
mov
int3
mov
push
clc
add
xchg
and
or
dec
push
fucomip
mov
and
dec
jge
mov
leave
out
xchg
dec
jge
mov
fdivrs
nop
and
adc
loop
jl
mov
pop
sub
ficompl
mov
lods
pop
cs
xor
inc
icebp
sbb
rcrl
mov
cld
inc
fwait
sbb
lods
test
adc
cli
dec
pop
shll
xchg
int3
mov
push
fstl
shll
movsb
dec
mov
mov
mov
inc
jne
jnp
add
movsl
inc
pop
push
lods
cltd
inc
jne
cli
inc
pop
jp
rcll
sar
mov
sbb
stc
lahf
out
cmc
fwait
rcll
cli
gs
fwait
sub
push
pop
xor
add
enter
mov
sub
pop
ret
rorl
fistpll
lock
jp
pop
cmpl
movsl
dec
jno
inc
gs
inc
test
std
mov
cld
mov
jle
dec
inc
pop
and
enter
jp
add
xchg
mov
push
popf
cmpsl
jns
popa
jnp
mov
cld
mov
add
mov
xchg
mov
xorl
ljmp
jae
data16
xchg
xchg
add
adc
sbb
push
lcall
sbb
inc
xorl
scas
icebp
popf
jnp
lea
daa
fidivs
add
mov
fwait
leave
sti
lods
mov
pushf
test
xor
loop
jo
add
cmp
push
jge
dec
jp
xchg
push
push
out
push
sahf
rolb
loopne
movb
fistpl
lea
daa
lahf
pop
jg
lock
push
les
mov
lock
inc
jge
cmp
movsl
inc
andl
addr16
sub
mov
loop
pop
in
in
lods
nop
push
idiv
inc
cli
and
jmp
movsb
aas
int3
cs
cld
dec
pop
sbb
mov
cs
repz
add
imul
cmp
cmp
xchg
add
jne
out
jecxz
push
mov
sub
push
inc
loop
xchg
fwait
sarb
stos
gs
inc
add
pushf
icebp
inc
cmp
xrelease
or
outsl
pop
xchg
mov
repnz
popf
mov
or
icebp
nop
outsb
jge
push
imul
push
jecxz
insl
rorl
les
repnz
mov
add
mov
gs
push
sub
jge
pop
out
leave
push
sub
pop
fnsave
sbb
add
pop
jo
std
jle
xchg
bound
jne
imul
loope
inc
cmc
cmp
bound
aas
fwait
daa
lea
dec
mov
jns
mov
addl
fs
jge
out
mov
mov
pop
inc
pop
les
aam
sub
jmp
mov
daa
leave
push
and
rcl
cmpsb
push
jnp
cwtl
pop
add
and
mov
fs
mov
mov
dec
add
scas
fs
mov
xor
pop
ret
jg
loopne
fldt
push
insl
mov
loop
pop
mov
push
jecxz
and
scas
jp
push
adc
or
jne
cs
xor
stos
fs
sbb
mov
sbb
jmp
enter
fwait
pop
rcr
shll
dec
int3
jno
cmp
cmpsl
push
testl
cmp
ds
jecxz
cmp
mov
sbb
xor
jmp
dec
lock
xor
xchg
test
sub
push
add
loope
movsl
jg
in
outsl
into
jge
mov
addb
xchg
fs
sbb
arpl
dec
push
inc
pop
or
mov
sarl
push
cmpsb
inc
pop
jo
pop
xor
cwtl
add
pop
bound
ss
pop
movsb
cmpsb
movsl
cmp
mov
dec
mov
loop
sahf
sarl
mov
icebp
adcb
xor
sub
xorl
and
inc
lahf
into
mov
fidivl
sub
addr16
roll
add
pop
pop
pop
xchg
lret
test
nop
fisttpll
xchg
jecxz
les
jnp
dec
pop
dec
sub
loop
nop
mov
or
ja
in
les
mov
jge,pt
icebp
inc
mov
cmpl
cmp
mov
push
sbb
aad
inc
loop
repnz
lods
and
addr16
sub
sbb
mov
jecxz
dec
dec
or
mov
test
popf
and
adcl
mov
mov
mov
stos
inc
push
mov
jle
fwait
rcrb
arpl
rolb
loope
jp
dec
mov
jp
icebp
mov
inc
loope
pop
mov
dec
lcall
jmp
cmp
jg
mov
and
and
mov
xchg
lcall
lods
dec
lea
xchg
pop
sbb
push
inc
sub
jge
mov
pop
sbb
mov
pop
data16
mov
and
daa
addr16
nop
push
mov
js
pop
push
inc
shlb
ret
mov
ror
jp
sbb
push
pushf
pop
lahf
or
add
jge
call
mov
rcll
scas
imul
or
xor
mov
movsb
scas
inc
xchg
pusha
adc
mov
push
repnz
add
jp
jne
pop
aam
jne
push
call
mov
popa
push
mov
and
inc
xchg
mov
popf
loope
inc
inc
cmp
mov
and
cmp
xchg
xor
sub
inc
mov
and
adc
pop
sub
sbb
push
shrb
in
xchg
push
mov
pop
lret
dec
arpl
out
pop
mov
inc
cmpsl
inc
hlt
cld
es
sarl
loopne
add
xchg
es
mov
jge
icebp
xor
mov
push
fcmovnb
add
andl
in
insl
mov
pop
gs
xchg
ds
les
movsb
xor
mov
fisubl
ret
add
cmpsb
xor
mov
jnp
adc
lods
out
mov
loope
cmc
sti
adc
inc
mov
xchg
cli
mov
data16
and
dec
aam
mov
test
sbb
lock
pushf
rorl
jnp
lock
leave
push
or
out
mov
cmc
sahf
test
add
add
cmp
nop
and
cltd
mov
or
icebp
dec
outsb
loopne
addr16
push
or
xchg
and
sub
xchg
cltd
std
jecxz
movsl
stos
push
mov
pusha
and
cmpsb
enter
inc
arpl
xchg
or
gs
leave
inc
add
daa
mov
data16
sbb
and
mov
cltd
inc
gs
into
dec
sub
and
pop
mov
lcall
lock
jle
pusha
mov
mov
sbb
or
jne
inc
hlt
fisubrl
rcrl
jne
and
inc
adc
push
ret
dec
pop
sub
or
xorl
fs
test
ljmp
std
and
int3
pop
leave
aam
or
push
sub
mov
daa
fwait
xor
mov
loope
push
ja
sbb
jno
or
in
mov
mov
or
mov
sub
aad
and
push
jb
pusha
sub
cmp
movsb
out
movsl
mov
mov
cmpsb
xchg
pusha
xor
or
mov
sbb
hlt
add
loope
add
in
xor
dec
push
popf
mov
int3
cwtl
dec
lock
push
fistpl
negl
sbb
dec
aam
test
cli
imul
sub
xchg
cmpsl
xlat
out
data16
jae
das
popa
dec
icebp
addl
loope
mov
dec
sub
push
dec
inc
xchg
ret
or
int3
daa
bound
dec
sbb
add
push
xchg
add
sbb
scas
call
stc
sbb
push
push
nop
loop
ret
out
cmpl
sub
movsl
push
hlt
pop
jmp
pop
add
pop
pop
mov
movsl
cmp
mov
fbstp
jle
inc
xchg
pop
scas
aas
mov
fs
in
push
pop
inc
and
pop
jns
xchg
add
mov
pop
sbb
xor
dec
or
loopne
dec
mov
mov
push
cwtl
mov
ret
and
xchg
js
inc
pushf
cmpl
inc
fs
and
out
jne
jnp
mov
loopne
push
pop
dec
adc
dec
and
or
push
and
sbb
int3
inc
lcall
jg
lock
xchg
mov
and
xchg
or
fdivr
movsb
push
sub
mov
mov
nop
dec
or
aaa
xchg
andl
int3
jmp
data16
xor
pop
xor
insb
dec
cltd
les
jp
gs
jge
and
cmp
in
rclb
fisubl
jne
inc
cwtl
sub
push
andl
loope
pop
cmova
mov
add
inc
gs
popa
mov
adc
popl
or
and
push
xor
pushf
dec
lret
pushf
push
testb
and
push
cltd
xchg
ret
fcoml
jg
cmp
sub
out
aaa
pop
mov
xchg
int3
sbb
dec
or
pop
loopne
daa
inc
sbb
sub
push
cld
cmc
dec
push
arpl
fstps
mov
lods
ss
fwait
cmp
xchg
cli
pop
lock
je
stos
ja
ja
cmpsb
inc
frstor
mov
into
mov
inc
gs
inc
mov
mov
arpl
push
inc
lock
lds
xchg
fs
xchg
add
testl
sbbb
fwait
inc
cwtl
int3
pusha
cmpsl
dec
sarl
mov
inc
cmpsb
loope
gs
loopne
jecxz
push
popa
pop
or
fistpl
loope
push
lcall
mov
ficomps
icebp
outsb
inc
mov
pop
fidivs
push
rorl
loopne
pushf
mov
mov
fs
dec
jge
ljmp
xchg
movsb
dec
mov
sbb
mov
pushf
or
mov
dec
popa
cmp
add
out
out
xchg
mov
cli
mov
gs
xor
jmp
sti
fisttpl
cmp
jle
sbb
loop
mov
fwait
sub
sub
inc
jne
cld
mov
mov
sbb
cmc
les
popf
add
xchg
mov
cmp
loope
mov
mov
inc
mov
cmc
inc
mov
adc
xchg
mov
dec
arpl
lret
rcl
dec
loop
inc
pop
popf
ficomps
mov
cwtl
pushf
sbb
fs
sub
inc
push
inc
dec
ss
dec
jp
mov
pop
and
lret
dec
xor
jb
mov
rolb
cmp
xchg
adc
inc
das
jge
int3
add
mov
adc
filds
lret
loopne
fwait
cli
icebp
and
popf
dec
cli
imul
add
shlb
mov
or
xor
inc
out
setl
leave
cmp
sbb
xorb
dec
test
cmp
pop
in
mov
inc
ds
loope
rorb
out
or
mov
mov
es
mov
and
add
fimuls
test
mov
sti
xchg
mov
add
jg
mov
pop
shll
pop
loope
pop
xor
push
int
and
add
xor
loopne
cmc
mov
decl
mov
mov
pop
movsl
and
xchg
inc
lahf
pop
pop
loopne
scas
jle
test
rclb
call
or
aaa
mov
xchg
sbb
add
sub
push
decl
lcall
addl
or
mov
cmpl
mov
or
mov
gs
xor
xor
or
dec
movsl
xchg
stos
push
inc
rorl
jge
jle
sbb
jg
jg
icebp
adc
int3
mov
ficompl
jb
jp
jle
and
mov
in
jge
adc
add
test
iret
cmp
xor
adc
or
pop
pop
cli
sbb
push
loop
ficompl
push
jb
cmpsb
ss
mov
mov
ss
cmp
ds
pop
pop
jge
add
pop
hlt
ret
arpl
imul
mov
inc
int
jmp
imul
inc
inc
movsb
sub
pop
cld
sbb
add
pushf
mov
xchg
in
sbb
mov
jmp
lret
xchg
and
lahf
mov
jecxz
mov
jmp
jp
andl
sub
inc
stc
loopne
xchg
cltd
dec
sbb
decl
cli
lcall
mov
add
cmc
sub
cmp
jecxz
ret
push
filds
arpl
lcall
xor
lcall
pop
outsb
ficompl
or
mov
jns
push
and
jg
sbb
push
mov
fidivrl
loopne
dec
lahf
jle
cmp
and
sbb
mov
lock
lea
stos
push
mov
sbb
in
inc
xor
gs
sbb
shll
jle
dec
sbb
leave
out
push
pop
cmpsb
fs
mov
sub
leave
add
push
push
or
scas
mov
push
mov
movb
jecxz
inc
fstpt
movsb
lds
lea
sub
cmc
pop
inc
inc
fdivrp
pushf
sub
lret
push
xchg
push
mov
test
or
cltd
jnp
lock
adc
adc
adc
gs
out
insl
and
cltd
mov
scas
mov
fimuls
leave
inc
jne
pop
push
insl
bound
jns,pt
js
or
jg
mov
and
inc
sub
pop
cmp
pop
leave
sbb
ret
push
fildll
mov
pop
inc
and
ret
out
fistps
mov
cmp
push
lea
rorb
and
and
sarl
push
test
pop
fdivr
jle
fisubl
loop
inc
dec
inc
jge
fildl
add
mov
cmpb
mov
movsl
dec
gs
inc
dec
jne
rcrl
loope
jp
xchg
subl
dec
inc
sub
out
pop
and
pop
jns
cs
mov
push
mov
lcall
in
dec
nop
sub
add
mov
shll
mov
mov
dec
fstpt
xor
and
movsl
mov
push
cmp
or
daa
leave
frstor
and
or
test
cli
cmc
and
adc
outsb
fwait
pop
jp
sbb
add
mov
in
fwait
and
sar
pop
sub
pop
pop
in
cmp
ljmp
iret
mov
cmp
pushf
adc
push
out
or
add
push
cltd
incb
test
adc
leave
dec
jecxz
loop
rorl
mov
fbld
sub
in
mov
sbb
add
adc
nop
and
gs
mov
sbb
push
add
leave
push
mov
imul
add
cmp
push
xor
pop
pop
push
xchg
imul
js
mov
inc
mov
and
pop
fisubs
sub
xchg
mov
insl
movsl
addl
xchg
push
outsl
cwtl
jl
lcall
pop
popa
adcl
jno
pop
mov
stc
dec
pop
mov
daa
or
lea
pop
dec
clc
or
pop
inc
aas
pusha
mov
mov
or
pop
push
ret
mov
gs
push
daa
ficompl
adc
inc
lds
and
jle
sbb
les
add
adc
xor
inc
fidivrs
test
pop
rol
nop
ret
fs
sub
ret
hlt
and
adc
inc
movsb
daa
movb
loopne
jecxz
cltd
or
bound
into
sbbl
lock
in
pop
shrl
fs
enter
jg
jnp
fidivl
mov
mov
mov
cmc
add
test
add
rcrb
notl
xchg
jecxz
fisttps
loopne
mov
cmp
mov
jge
dec
dec
and
pusha
xor
das
dec
les
aas
insl
mov
repnz
ss
jo
dec
icebp
lcall
xchg
cwtl
sbb
and
inc
push
dec
and
xchg
add
push
pop
pop
jmp
push
fwait
dec
stos
sub
xchg
push
out
cld
mov
cmc
fcompl
sarl
inc
addb
test
adcb
mov
sarb
or
xor
outsb
das
dec
inc
mov
cmc
pop
and
adc
inc
dec
dec
inc
jl
xchg
pop
les
cmp
cmp
pop
out
inc
push
or
or
inc
cmp
scas
gs
jp
jmp
dec
inc
pop
pop
ret
pop
add
sbb
add
movsb
cld
ret
aas
mov
adc
adc
inc
ficomps
lods
lods
and
inc
push
push
pop
jge
rcrb
sbb
mov
and
or
mov
inc
sbbb
incb
mov
pop
sbb
inc
mov
xor
xor
jp
repz
pop
fs
testl
push
xlat
lcall
pop
push
sub
pop
shl
bound
and
ret
cwtl
ret
cmp
int3
push
imul
mov
push
fimull
lahf
mov
nop
pop
inc
cmp
out
xor
pop
aas
sbb
lret
cs
xchg
cmp
aaa
adc
roll
ja
mov
pushfw
mov
daa
sbb
mov
lcall
in
lret
mov
dec
ss
shll
inc
loopne
pushf
inc
and
and
loope
push
add
add
bound
sub
xchg
mov
scas
gs
cmpsl
xor
bound
sbb
ret
pop
rorl
mov
loope
mov
fidivs
test
jp
push
xchg
inc
mov
push
addl
and
add
fwait
mov
mov
pop
mov
adc
shll
dec
movsl
lret
call
fidivrs
mov
jae
test
insb
and
sbb
aas
xchg
fldl
mov
cwtl
or
push
jge
jle
push
and
inc
dec
cmpsl
pop
lcall
sub
add
inc
push
fwait
lahf
and
lds
es
mov
pop
outsb
jmp
sbb
jp
mov
jl
rcr
push
sub
mov
add
mov
sbb
inc
inc
jecxz
int3
xchg
sub
push
pop
dec
mov
cmp
loop
push
ret
mov
inc
dec
and
dec
pushf
mov
cs
mov
inc
gs
cmpl
cmp
push
cmc
push
mov
sbb
dec
push
icebp
add
add
pop
mov
sub
push
cmp
xor
sub
mov
xchg
in
push
mov
sub
imul
rcrl
out
fisubrs
insl
lea
mov
dec
ret
or
ds
nop
daa
sub
dec
mov
out
xchg
xchg
and
stc
inc
xchg
or
repnz
mov
push
clc
nop
jge
out
push
inc
dec
lahf
sub
int3
fmulp
loope
push
std
push
mov
sbb
jnp
shrl
cmpsl
xor
mov
addr16
repnz
mov
push
fiaddl
jge
jp
mov
xchg
addr16
scas
lods
dec
dec
mov
xchg
out
aaa
sub
mov
jp
inc
aaa
inc
sbb
mov
or
and
mov
jle
mov
inc
inc
gs
inc
cmp
cld
shlb
dec
pop
inc
xor
mov
xchg
jle
mov
fidivs
adc
or
cs
push
push
fidivrl
xchg
sti
fs
aas
ficoml
mov
lcall
loope
lret
int
mov
dec
imul
jne
cmc
jg
inc
pop
sbb
cmc
out
mov
xchg
cmc
xchg
leave
gs
inc
mov
mov
mov
push
test
sti
mov
cwtl
xchg
mov
out
push
dec
popf
mov
pop
lods
xchg
and
pop
adc
das
cwtl
sahf
mov
inc
insl
mov
and
popa
rorl
in
rorl
aas
or
xchg
filds
mov
dec
mov
sub
add
test
int3
imul
add
xchg
jp
dec
pop
mov
inc
leave
icebp
mov
jb
pop
jp
pop
loope
sbb
mov
push
and
jp
andb
jae
scas
outsb
popa
pop
jnp
xchg
xor
sarb
mov
shll
pop
pop
inc
pushf
popf
lea
pop
filds
push
push
jl
mov
push
or
and
aas
movsl
jne
fwait
test
dec
dec
sahf
in
dec
shl
ss
or
xchg
xor
add
and
insl
les
cmp
cmp
in
lods
adc
mov
loop
sbb
adc
xor
push
data16
dec
testl
dec
outsb
jl
or
or
inc
jl
pop
loop
divl
mov
iret
mov
mov
push
fcmovnbe
sbb
out
jp
adc
movsl
lock
pushf
ret
cmp
lds
add
push
shll
std
into
sbb
mov
lahf
xor
pop
test
mov
pop
inc
mov
pop
sub
mov
pusha
adc
inc
xor
inc
jmp
xorb
dec
or
add
pop
adc
or
jmp
pop
jmp
pop
inc
pusha
mov
movb
scas
nop
fstpt
mov
jmp
aas
aas
push
mov
cwtl
shlb
arpl
push
adc
dec
ret
pop
pop
mov
push
jge
xchg
rcrl
mov
icebp
adc
loope
push
lret
mov
cli
lcall
inc
mov
mov
dec
lds
outsb
xor
dec
sbb
jnp
loope
jle
mov
stos
jp
xchg
mov
pop
mov
cmp
les
inc
addl
enter
pop
lock
pushf
ret
jle
test
mov
cmc
sti
pop
sub
mov
push
sti
pop
jecxz
popa
dec
jg,pn
pop
cmp
icebp
add
add
mov
clc
pop
or
inc
pusha
imul
jle
cmpb
mov
xchg
cmp
cli
push
loopne
sti
add
mov
cmc
dec
mov
and
jle
push
cmp
dec
mov
mov
pop
pop
lods
xchg
sbb
ss
inc
inc
mov
cmp
clc
cld
jecxz
ret
cmovl
xor
xchg
test
pop
mov
and
add
xor
cmc
leave
inc
add
movb
adcb
leave
add
lret
xchg
mulb
nop
jmp
ret
push
lcall
or
icebp
pop
mov
xchg
sbb
sarl
inc
mov
stc
loop
lahf
sbb
cmp
inc
sbb
mov
adc
dec
xchg
xchg
and
sub
jne
push
ffreep
popf
jge
loop
into
and
mov
inc
data16
and
xchg
or
out
cs
rolb
add
insl
rorb
cmc
xor
loope
push
pushf
push
jl
lahf
and
ret
mov
imul
inc
rorl
and
mov
mov
push
pop
dec
jp
notl
cmp
sub
sbb
jp
push
push
fnstsw
sbb
fbstp
mov
into
fistpl
in
sbb
pop
sar
add
inc
gs
mov
sub
jge
mov
push
mov
push
icebp
scas
sbb
imul
in
cmc
movsl
fsubrl
out
ret
push
out
mov
cwtl
mov
aas
lahf
and
jle
xor
inc
pop
mov
cmpsb
nop
ret
sar
sub
lcall
data16
push
mov
movl
arpl
andb
daa
pop
inc
jmp
test
pushf
mov
sub
nop
pop
mov
pop
or
gs
insl
lcall
inc
sar
or
call
mov
sub
ja
ss
rcl
push
inc
ficoms
fucomp
dec
paddw
fwait
mov
bound
and
mov
dec
mov
jecxz
fidivrs
mov
stos
pushf
pop
mov
jecxz
push
push
push
ss
inc
push
add
icebp
sti
cmc
push
mov
cmpsl
push
pop
add
decb
jmp
sbbl
mov
jns
mov
mov
and
sub
fwait
sub
dec
mov
movb
pop
fisubl
push
fstpt
xor
pop
jle
dec
pop
mov
loopne
incb
stos
fildl
xchg
inc
repnz
push
push
orb
add
inc
bound
mov
sbb
mov
push
in
push
inc
mov
cwtl
and
sbb
xchg
ret
or
popf
inc
call
xor
jecxz
inc
cmpsb
and
mov
test
fwait
orl
nop
add
dec
add
cmpsb
or
xchg
push
test
xchg
cmp
mov
push
in
pop
add
fwait
cmc
push
add
sub
and
sub
and
ss
sahf
inc
int
cmp
jp
jg
pop
mov
jle
dec
add
push
loopne
outsb
inc
ret
jnp
enter
fwait
jecxz
cld
loopne
adc
sbb
mov
inc
dec
sbb
mov
hlt
add
and
dec
pop
mov
aaa
inc
or
sub
mov
xchg
dec
cli
mov
sbb
push
xorl
jle
clc
mov
jge
xor
mov
into
pushf
mov
jecxz
and
dec
enter
gs
cmp
add
les
xchg
je
cmpsb
loope
cmp
mov
cli
jp
addr16
gs
test
inc
enter
cmp
jle
xor
sahf
pop
sub
jle
xchg
sar
mov
scas
lods
dec
inc
ja
jle
xor
inc
xor
pop
out
out
fimull
adcb
cs
orb
mov
add
push
jg
inc
jle
mov
sbb
rcll
fwait
enter
dec
insl
and
push
xor
xor
into
dec
pop
fstpt
xchg
inc
aas
loop
jno
iret
xchg
adc
cmc
aas
xor
int
mov
loope
jp
lcall
movsl
mov
fwait
sarb
ds
data16
mov
jno
pop
xchg
dec
push
and
int
fisubl
ret
xlat
mov
mov
fs
xchg
inc
out
cltd
push
mov
sti
and
cmp
mov
or
jg
loope
outsb
dec
push
jns
push
dec
sbb
xor
push
addr16
pusha
aad
push
cmp
jecxz
pop
pop
xor
or
or
mov
push
stc
pop
pushl
test
inc
pop
sbb
in
sub
xor
shlb
push
sub
dec
pop
inc
push
mov
test
xor
cmc
std
mov
add
adc
mov
xchg
inc
sbb
mov
movsb
mov
movsl
sti
dec
pop
inc
inc
xchg
sub
ds
dec
push
add
mov
popa
jnp
pop
push
sahf
mov
pop
andb
xor
test
xchg
or
lret
inc
nop
enter
mov
pop
sbb
sbb
lret
dec
and
dec
bound
adc
xchg
out
push
rorl
cld
loope
pushf
add
mov
mov
fiaddl
mov
xchg
push
fstl
ss
push
inc
test
push
and
ret
out
rorb
pusha
push
rolb
shll
aad
xchg
fisttps
add
nop
loop
fisubrs
pop
mov
adc
mov
or
jge
cmc
test
jne
sbb
fs
daa
sbb
xchg
mov
jge
mov
fsubl
cwtl
inc
jecxz
mov
jle
shrl
push
and
addl
cmc
rorl
add
push
loopne
fs
or
and
arpl
add
mov
icebp
jge
bound
xchg
andl
gs
pop
mov
movsl
sub
mov
inc
adc
imul
sbb
push
or
jmp
push
add
mov
jg
sahf
in
mov
rol
roll
lods
rorl
cltd
in
les
jg
dec
cld
jmp
sub
adc
repz
pop
test
inc
and
jge
nop
test
movsb
or
cmp
jnp
jge
popf
inc
icebp
outsb
jnp
lock
push
mov
out
jne
fwait
dec
mov
out
shrb
fidivrs
mov
orb
icebp
adc
jge
add
fstpl
ficomps
and
sarb
aas
jle
cli
push
cmpsl
das
jecxz
repnz
push
clc
mov
mov
push
lods
inc
dec
pop
pushf
and
lret
push
mov
and
mov
jmp
jle
jne
inc
jb
cmp
inc
jnp
rcll
inc
push
iret
stos
or
fdivrs
xor
fs
out
rorb
dec
out
lock
mov
pop
jge
sub
adc
and
fstpt
xor
lock
cmpsb
dec
inc
popf
and
hlt
pop
inc
adc
jnp
pop
pop
mov
aas
das
test
jne
jle
and
sarl
add
mov
outsb
dec
mov
sti
pushf
lds
mov
xchg
testb
and
ret
jg
cs
les
push
rclb
gs
daa
jno
xchg
jge
mov
xorl
lock
fwait
jp
inc
loop
incb
lock
stos
jp
mov
icebp
jecxz
icebp
mov
div
movsb
aad
in
jecxz
xchg
mov
mov
sbb
sub
orb
hlt
sarl
decb
jge
sbb
pop
jns
xchg
aaa
lea
cltd
lock
xor
xsha256
cmpsb
push
inc
ror
mov
push
loop
lods
btc
and
inc
imul
adc
fisubrs
lods
pop
mov
mov
daa
inc
cmp
mov
bound
movsl
inc
pusha
movsb
insl
int
jge
mov
xchg
mov
je
pop
jp
xor
arpl
dec
fwait
mov
lods
mov
jo
push
loop
cmpsl
push
mov
mov
out
dec
shrb
mov
icebp
sub
add
jne
data16
rcrb
imul
or
loope
popf
mov
inc
lods
addr16
lahf
std
pop
bound
xchg
rcr
mov
inc
outsb
sti
and
pushf
fildl
jp
mov
nop
loop
enter
push
mov
in
data16
movb
cli
or
or
xchg
jle
xor
pop
push
pop
mov
ret
gs
outsb
pop
loop
dec
dec
popa
xorb
add
cmc
add
mov
push
adc
mov
dec
subl
inc
mov
mov
dec
dec
rol
data16
push
xor
icebp
xor
xor
xor
pop
cmpsl
dec
lcall
nop
jecxz
ret
aad
sbbb
imul
addr16
jg
mov
addr16
shlb
roll
cwtl
add
test
push
lahf
jne
fnstsw
xchg
push
push
ffree
int
dec
dec
inc
inc
sbb
in
loope
notb
lret
shll
pop
test
stos
jns
pop
imul
jae
imul
out
push
arpl
rclb
mov
sbb
imul
mov
pop
inc
pop
mov
mov
stc
ds
fmulp
sbb
nop
lahf
ret
sti
addl
insl
shrb
pop
jl
adc
lcall
mov
inc
add
mov
sbbb
gs
dec
mov
rorl
fwait
pop
subb
stos
dec
push
xchg
bnd
loopne
sbbl
push
test
sahf
cs
insl
cs
gs
dec
and
sub
dec
gs
jno
shlb
dec
sub
icebp
push
push
pop
inc
stos
inc
cld
fcompl
pop
dec
pop
push
aas
iret
mov
or
and
ret
jo
sub
aad
mov
fdivl
call
sub
push
out
mov
mov
mov
sbb
aas
cmp
xor
add
ret
std
pusha
lea
test
add
pop
sub
test
adc
inc
and
addr16
lock
fcmovb
xor
push
jl
xchg
call
scas
arpl
push
xchg
and
scas
lret
push
xor
mov
adc
mov
xchg
mov
je
inc
aam
aam
mov
and
ficompl
push
cwtl
cmp
push
shl
push
outsb
pop
push
jp
inc
mov
notb
sbbl
and
pop
outsl
fwait
inc
lea
cmp
test
mov
lret
sub
jle
add
stos
push
cld
push
inc
jle
jge
ficomps
movsb
fsubs
pop
mov
cli
pop
lock
daa
fadd
inc
cmp
xor
xor
test
add
pushf
lret
icebp
jbe
adc
stos
mov
test
pop
xchg
das
dec
ss
pop
fwait
fwait
pop
cltd
addr16
idivb
jg
mov
gs
jp
or
adc
arpl
dec
and
popf
push
jge
inc
add
mov
push
popf
mov
cltd
ret
sti
push
push
xchg
bound
mov
idivl
adc
gs
fildl
pop
cmp
push
add
sarb
outsb
call
movsb
mov
fmul
aam
insl
dec
mov
pushf
jne
push
and
outsb
in
jnp
scas
addr16
cmp
inc
xchg
mov
addr16
stos
dec
dec
es
movsb
sti
fs
lcall
mov
cli
scas
lret
icebp
lahf
sbb
cld
mov
je
dec
push
stos
or
mov
push
mov
pop
push
mov
push
inc
cmp
out
fs
fwait
adc
int
mov
js
fidivrs
mov
imul
push
jae
inc
add
test
adc
jp
pop
and
cmp
and
add
lahf
pop
sarl
sarl
sbb
push
fs
lea
addr16
in
mov
inc
sub
dec
nop
pop
inc
inc
jecxz
int3
dec
out
out
out
add
or
loope
jle
push
scas
pop
mov
jp
inc
and
movl
mov
mov
lods
aaa
cmp
fiaddl
call
xor
incl
pushf
popf
daa
lret
loop
pusha
pushf
cmpsl
sbb
mov
gs
jle
mov
or
sti
icebp
lret
add
mov
jb
cmp
push
xchg
jecxz
ret
aad
or
lret
pop
sub
mov
les
jnp
pop
daa
ss
int3
and
adc
mov
mov
push
jle
mov
or
or
movsl
xor
xor
loopne
inc
aas
stos
mov
dec
push
mov
sub
mov
loopne
sub
nop
mov
cmp
je
and
dec
xor
popaw
mov
daa
test
mov
sub
inc
dec
pop
lds
inc
inc
in
jge
ficomps
nop
jl
into
inc
push
icebp
pop
push
cmp
mov
add
inc
loopne
cli
fidivrs
mov
push
pop
sub
js
fs
ds
ret
mov
push
fisubl
pop
pop
inc
jg
call
sub
and
cs
imulb
jnp
dec
add
mov
rclb
inc
cli
cli
mov
ret
call
gs
or
xor
arpl
jp
cmpsl
or
loope
pushf
xchg
int3
fiaddl
xchg
dec
push
and
lret
test
sub
int3
loop
sbbl
push
mov
or
loopne
jle
lahf
sbb
pushf
add
loopne
xlat
mov
test
mov
add
data16
add
sub
mov
mov
mov
or
jae
and
push
cld
mov
pop
dec
sahf
mov
fwait
aas
lret
jp
pop
loopne
and
xchg
push
jecxz
in
cwtl
popf
sbb
cmc
pop
xchg
mov
mov
xchg
sbb
inc
sbb
cmpsb
xchg
dec
andb
outsl
out
fildl
inc
repnz
and
addr16
jle
repz
insl
sarl
and
cltd
sbb
scas
xchg
mov
or
cmc
fneni(8087
mov
enter
pusha
jmp
movsb
pop
dec
dec
test
loope
sbb
jge
jp
testb
loopne
inc
sub
fbld
xorl
sbb
xchg
icebp
add
jmp
in
inc
mov
push
adc
fists
cltd
pusha
sbb
inc
loope
cmpsl
dec
movsl
xrelease
jbe
mov
out
mov
cld
push
pop
pop
leave
mov
movsl
pushf
repz
add
jnp
ret
mov
mov
aaa
nop
test
loope
mov
das
push
and
aaa
inc
test
pop
fs
in
fcmovnbe
jmp
push
nop
imul
ret
ficoml
xor
mov
test
aas
ret
jl
cmpsb
sub
mov
mov
xchg
fwait
outsl
sub
lods
dec
jge
and
mov
mov
jle
fimull
add
xor
cs
sahf
inc
in
cmpsl
or
dec
adc
shlb
ljmp
cmp
mov
cld
and
pop
gs
and
adc
and
insl
jbe
or
loope
xor
daa
mov
push
std
test
and
nop
lds
mov
or
mov
push
loope
mov
add
cmp
add
add
inc
test
mov
push
pop
mov
cmp
stos
push
pop
cmp
sub
testl
pop
out
or
fsubs
aas
inc
arpl
jle
jnp
push
pop
loopne
jp
mov
and
imul
out
sbb
mov
sbb
inc
test
out
add
adc
nop
cmp
pop
loope
jle
mov
cmpsl
imul
int
cld
orl
enter
inc
orb
inc
pusha
les
outsb
cld
jns
js
cld
fisubs
into
xchg
faddp
pop
inc
fcoms
jo
cmc
movsb
cmp
call
frstor
jne
addr16
jle
or
xchg
cmpsl
push
shlb
std
fcmovnb
mov
mov
pop
ret
shl
xchg
add
cwtl
sti
ret
cmp
inc
mov
leave
sub
push
fisubs
rcll
movb
pop
mov
inc
mov
jb
pop
adc
cli
pop
inc
hlt
out
sti
dec
dec
ss
pushf
mov
xchg
lret
int
mov
cs
mov
mov
lret
loope
xor
sti
mov
mov
cmp
adc
mov
cli
push
dec
mov
push
mov
cmc
mov
inc
les
mov
ds
mov
dec
add
pop
movsl
sub
jno
jle
outsl
mov
push
push
cmp
mov
push
add
pop
or
sub
rcrb
pop
std
mov
or
sub
daa
fxch
inc
pushf
mov
or
outsl
stos
ss
pop
test
addl
mov
test
jge
cmp
pop
shrl
mov
mov
adc
xor
xchg
inc
cmp
push
dec
arpl
fildl
loopne
or
adc
add
arpl
push
stos
or
add
push
mov
les
sub
mov
mov
inc
test
mov
out
dec
jle
and
push
popa
ficompl
fidivrs
insl
jp
pop
je
imul
clc
inc
add
dec
xchg
jo
aaa
pop
je
add
dec
inc
ret
jmp
sbb
or
and
add
leave
dec
test
inc
aam
shl
jns
pushf
call
cmpsb
mov
pushf
push
sbb
mov
xchg
and
addl
inc
shll
jecxz
pushf
les
cmc
test
pop
sbb
fsts
shll
les
jge
fwait
cmp
mov
push
and
adc
or
cmpsl
fsubrs
loope
inc
adc
or
int3
push
inc
ss
xor
push
adc
ja
in
add
xorb
pop
insl
mov
or
add
loope
jnp
cmpsb
jmp
inc
data16
out
int
xor
lret
out
pop
mov
daa
lcall
jge
into
inc
mov
jp
cld
push
inc
popf
imul
pop
mov
mov
push
ss
cmp
mov
jbe
push
jmp
ds
sti
adc
aaa
lea
mov
mov
mov
adc
inc
test
push
mov
frstor
outsb
pop
ja
mov
add
cmpsb
insl
rclb
xchg
movsl
jmp
cmp
cmp
mov
dec
pop
pop
out
jns
call
inc
push
sbb
ret
fwait
pop
jge
sbb
mov
sbb
inc
bound
stos
gs
push
adc
add
pop
leave
fdivr
mov
pop
push
pop
xchg
cli
push
jecxz
sbb
dec
push
add
add
cmc
mov
cwtl
lock
data16
repnz
xchg
dec
mov
fs
mov
push
dec
arpl
aas
lods
cld
cmc
sub
pop
mov
mov
lahf
loope
enter
fbld
lock
jle
add
adc
pop
mov
fcmovu
popf
sbb
mov
stos
push
mov
lods
cwtl
cli
mov
sbb
movsl
enter
pop
sbb
in
pop
inc
mov
jne
jae
icebp
add
cwtl
pop
jg
lahf
test
mov
push
jecxz
sbb
xor
sbb
iret
int
inc
int3
inc
pushf
mov
cmp
or
movsb
mov
jg
pop
inc
add
aas
adc
out
loopne
outsb
bound
jl
shr
mov
jbe
int3
nop
inc
mov
jp
test
gs
xor
cwtl
bound
and
or
fs
sbb
pop
jbe
loop
pusha
repnz
fsubr
add
sub
adcl
rorb
push
xchg
xor
jnp
and
mov
adc
insl
push
ljmp
pop
mov
jnp
mov
movl
mov
jnp
inc
rorl
and
push
popa
or
or
stc
jnp
loope
or
push
push
cwtl
daa
and
mov
pop
icebp
sub
push
or
loope
push
leave
out
nop
pushf
repz
dec
cwtl
repz
sbb
dec
inc
imul
pusha
pushf
and
mov
xchg
cli
jge
out
ficompl
test
inc
daa
ret
sbbl
sbb
ret
nop
lods
inc
loopne
int3
adc
dec
pushf
jg
push
loop
shr
leave
ss
or
mov
test
dec
ss
inc
fisttpl
sarl
dec
inc
test
mov
rorb
cmp
into
lods
inc
add
shll
xor
xorb
int
inc
ret
mov
push
arpl
popf
sahf
xchg
andl
mov
lret
add
int3
out
add
dec
adc
cmpsb
jne
xchg
add
ret
cld
ret
jp
sbb
test
ja
gs
shrb
pop
jnp
mov
sahf
sub
repz
mov
lds
insl
test
addr16
adc
roll
mov
push
jp
jg
lret
xor
scas
sbb
jl
mov
test
and
pop
mov
into
inc
mov
data16
cmc
test
cmc
jp
xor
cmpsb
sbb
cwtl
loope
inc
loopne
lods
inc
jecxz
sbb
repnz
xor
mov
scas
ret
test
mov
mov
data16
imul
test
mov
mov
lods
dec
mov
adcb
dec
loope
fwait
mov
jmp
pop
inc
call
jb
dec
lret
push
enter
inc
data16
and
jg
fisubrs
mov
das
xchg
sarb
movb
push
dec
add
test
xor
jge
insl
scas
jmp
jns
inc
jl
push
dec
dec
adc
pusha
xor
addl
cmp
shlb
xchg
sbbb
sahf
int3
and
or
xlat
jp
adc
mov
out
cmpsb
or
dec
pop
jl
push
repnz
add
push
pop
jo
add
add
stos
inc
cmp
hlt
dec
xchg
add
pushf
mov
jne
xchg
push
pop
xorl
je
out
subb
jp
sub
push
or
sahf
lahf
inc
push
ret
sbbb
jae
pop
jne
fwait
add
pop
mov
mov
adc
adcl
ficomps
cmc
loope
push
fists
mov
xchg
popf
cld
popa
mov
lcall
loop
ficomps
dec
push
lcall
mov
leave
mov
stos
icebp
mov
add
mov
cmpl
xchg
mov
les
jne
icebp
addl
inc
jp
cli
dec
addr16
in
loop
es
or
int3
movb
nop
add
cs
jg
mov
jp
mov
fmull
mov
cmp
xor
inc
arpl
mov
push
test
imul
das
fiadds
jne
adc
cltd
sbbl
and
shll
fdiv
scas
or
ret
and
mov
push
cld
add
popf
mov
xchg
aas
movsb
sbb
lret
lahf
inc
jg
mov
pop
std
lock
inc
mov
adc
sarl
push
es
add
dec
jle
lcall
mov
jp
dec
jle
pop
cmpsl
mov
loope
lret
push
in
xorb
lods
mov
icebp
add
xchg
in
out
or
cmc
sub
ffreep
xor
nop
mov
mov
repnz
cmp
jle
loop
xor
ret
loope
xchg
jle,pt
cmp
mov
clc
xchg
rorl
mov
sbb
icebp
div
mov
rclb
or
inc
jecxz
sti
out
mov
repz
cmpsl
inc
sti
and
add
mov
outsb
mov
pop
adc
gs
ficompl
in
aas
shlb
subb
movl
dec
nop
jl
sbb
mov
pop
add
fwait
mov
jbe
or
repnz
and
lock
mov
pop
insl
mov
or
inc
pop
adc
inc
xor
add
sbb
bound
jge
mov
scas
adc
scas
push
mov
gs
jle
mov
loope
movsl
pop
loope
rorb
jge
leave
inc
pop
and
xchg
sbb
insl
ljmp
inc
or
fwait
or
inc
mov
jge
pusha
mov
aaa
inc
and
stos
push
in
dec
sbb
shl
movsl
cmpsl
sar
mov
out
es
pusha
add
lock
dec
and
jge
pushf
lcall
mov
fs
mov
mov
js
fwait
inc
into
popf
lcall
cmp
insl
dec
pushf
jecxz
out
rep
pop
push
xor
mov
xor
pop
mov
mov
lds
sbb
push
cs
dec
mov
add
rcrl
enter
ss
push
mov
dec
mov
lds
sbb
mov
inc
movsl
icebp
xchg
jp
in
popa
popf
loope
pop
les
add
lahf
clc
loopne
mov
mov
stos
push
shr
mov
inc
pop
popf
mov
xorl
in
mov
jl
std
jp
jnp
inc
and
dec
push
cmp
mov
icebp
add
shll
filds
out
inc
sbb
push
out
arpl
or
cmp
ja
rcrl
leave
shll
mov
jl
sub
push
xor
jae
push
push
popf
stos
push
sub
int3
push
es
fstpt
addb
mov
sub
cmp
mov
pop
mov
mov
mov
test
ljmp
out
loopne
ret
sub
out
inc
insl
inc
insl
clc
shl
xor
in
push
imul
xor
loope
or
in
pop
cwtl
and
loop
xor
pushf
push
xchg
sbb
push
les
mov
push
out
lahf
testb
icebp
inc
or
bound
jge
dec
jecxz
or
inc
mov
les
jne
int3
lock
in
les
push
xchg
lods
or
add
mov
into
adc
mov
mov
pop
movsb
inc
aas
cmpsl
js
push
or
popa
cli
movsl
popf
ds
pop
add
mov
xorb
das
lea
pushl
push
inc
movsb
add
mov
fldcw
jae
popf
and
jp
loope
dec
pop
and
lods
bound
sbb
inc
ds
imul
push
add
xchg
in
scas
lea
xor
aas
cltd
outsb
fsubp
shlb
dec
ret
jo
popa
pop
int3
nop
test
sbb
nop
pop
movb
inc
fistps
mov
mov
cmpsb
xor
cmp
mov
jnp
xor
xchg
les
inc
roll
pop
or
test
and
adcl
loopne
lahf
loopne
jle
mov
add
mov
pop
ror
in
adc
aaa
sbb
das
pop
jecxz
cld
std
inc
gs
sub
add
xlat
mov
adc
mov
push
inc
ret
mov
addr16
sub
sub
sub
mov
in
jl
inc
data16
icebp
sbb
push
push
inc
bound
pop
inc
mov
xchg
dec
cmp
mov
mov
bnd
add
aas
push
dec
nop
jl
scas
jle
stc
lahf
or
imul
xchg
pop
inc
add
sarb
mov
fsub
xor
ljmp
gs
shr
jo
cmp
arpl
lock
lahf
or
aas
mov
test
and
cmp
cmpsb
or
fisubl
jle
or
lock
cs
inc
sub
int3
pop
movsl
jecxz
sbb
fisubl
push
pop
movsl
in
sbb
lods
jle
js
mov
nop
movsl
push
out
mov
sub
mov
cmc
dec
mov
pop
mov
pop
incb
push
adc
gs
xchg
sub
pop
icebp
adc
in
mov
popl
dec
pop
inc
jg
icebp
xor
cmp
mov
mov
lock
jp
mov
lods
xchg
enter
jp
push
mov
mov
cmpsl
rcrb
jne
mov
sub
shrl
pop
lock
rcrl
cwtl
loopne
sbb
adc
mov
dec
or
jo
outsb
push
jns
push
out
push
test
sbb
or
pop
and
aas
pop
mov
push
sub
cmp
stos
push
xchg
jg
push
inc
mov
pop
jl
mov
pop
and
insl
gs
sarb
lea
inc
dec
das
jge
inc
inc
fdivrp
inc
xchg
movsl
adc
pop
lcall
push
mov
pop
pop
push
inc
gs
mov
dec
stc
xlat
cwtl
andl
jecxz
add
andl
ret
and
mov
pop
pop
lea
cmp
leave
xor
dec
loop
xchg
mov
ljmp
and
push
sub
push
push
out
fiadds
shrd
or
jne
jp
push
add
mov
mov
sti
stc
or
push
ficoms
aas
push
pop
mov
sub
mov
inc
xchg
mov
sbb
push
pop
xchg
mov
imul
lahf
jns
push
data16
xchg
into
dec
pop
jge
add
push
mov
stc
jge
adc
faddp
xor
enter
cmpsb
dec
gs
dec
ja
xor
pop
mov
pop
mov
and
push
push
mov
xor
inc
sub
mov
add
roll
shrl
mov
or
adc
ret
xor
mov
and
inc
mov
out
lds
cmc
mov
mov
fdivl
fidivrl
hlt
lcall
sti
lea
add
push
jae
push
shll
shrl
inc
push
pop
add
add
jb
xor
pop
inc
adc
int3
inc
or
leave
dec
inc
loopne
jge
xorl
push
rcr
xor
incl
pusha
shl
add
mov
push
xchg
xchg
out
push
sbb
push
sub
jmp
sbb
test
mov
sti
push
push
ret
jle
sahf
pop
and
imul
mov
in
inc
xor
inc
mov
jns
push
shl
ds
daa
mov
into
xchg
fsubl
push
add
repnz
inc
stos
sbb
test
cmp
xor
xchg
imul
fstpt
cli
je
fldenv
fcomps
inc
cmpsb
outsb
mov
addr16
sub
gs
mov
jl
pop
test
movb
xchg
add
out
ss
sub
push
xchg
fildl
out
fs
lds
shlb
pop
jge
adc
push
mov
mov
dec
push
loopne
or
jnp
mov
lahf
in
jae
cmp
test
mov
push
push
icebp
jecxz
jge
xchg
fs
scas
jl
mov
xor
nop
sub
jnp
pop
pop
out
mov
jne
cli
imul
sbb
xor
rcrb
inc
clc
inc
in
int3
dec
dec
cmp
es
shrb
orb
stos
xchg
cltd
fiadds
lahf
stos
aas
or
sub
jp
mov
mov
mov
add
mov
das
inc
jecxz
inc
mov
repnz
xor
jne
push
fisubs
outsb
lods
cmpsb
ds
inc
xchg
xchg
repz
adc
jl
jmp
stos
pop
sahf
test
loope
mov
inc
pop
lods
adc
les
push
jle
inc
jne
arpl
pop
imul
fldt
pop
addr16
dec
push
sahf
xchg
cmp
mov
sbb
ret
adc
loop
pop
jge
test
inc
imul
lcall
pop
inc
icebp
add
fucomi
popf
fcomps
push
inc
pop
cmpsb
jmp
push
and
cmpsb
cmc
inc
dec
lahf
cmp
or
addr16
jmp
cmp
pop
test
fwait
cmpsl
cmp
xchg
out
pop
xchg
ffreep
and
mov
mov
pusha
daa
pop
arpl
leave
mov
inc
mov
stos
dec
test
out
dec
mov
push
dec
inc
and
movsb
jle
xor
popf
movsb
mov
jne
xor
icebp
arpl
add
mov
pop
jmp
enter
dec
cli
mov
cmp
push
dec
dec
push
add
push
lock
mov
dec
add
jg
adc
add
push
bound
mov
xlat
jnp
jg
pop
loope
jo
fsubp
int
movsb
shrl
jnp
mov
dec
xor
jb
in
inc
sbb
dec
loop
addr16
inc
leave
inc
nop
sub
imul
xor
btc
mov
jo
mov
adc
add
adc
xor
jp
or
dec
pop
cmpsb
inc
pop
adc
xchg
stos
inc
mov
cmc
test
dec
lahf
xchg
or
loope
mov
sti
push
sub
push
mov
andl
inc
test
daa
dec
ror
repz
dec
adc
xchg
jge
mov
or
jmp
or
pop
repnz
or
lock
addr16
rcl
popa
push
xchg
dec
ret
xor
jl
shrb
mov
cmc
pop
scas
xchg
and
mov
inc
push
push
lahf
inc
adc
add
and
jae
cli
lea
pop
loope
fwait
inc
js
mov
and
or
pop
rorl
mulb
sbb
andb
jl
ret
in
and
test
push
cmp
fcmovnb
ret
mov
jne
mov
inc
sub
lahf
xor
mov
push
cltd
scas
pop
add
aas
fiadds
out
xchg
movsl
sahf
adc
push
std
mov
mov
insl
jle
cltd
add
xchg
arpl
sub
pop
shl
push
push
imul
pushf
and
in
or
jns
js
pop
fs
loopne
jg
rorb
shll
sub
cli
pop
mov
mov
cmpsb
mov
pop
mov
pop
add
or
mov
shrl
jle
push
inc
sar
pop
xchg
mov
jbe
adc
fdivp
pop
cmc
imul
jg
mov
mov
push
add
inc
test
fiaddl
ss
inc
ljmp
shrb
xchg
lock
dec
fstl
jns
daa
xchg
sub
jle
leave
xchg
js
data16
xor
orl
aam
cmp
inc
cmpsb
gs
fisubl
outsb
fmuls
mov
inc
pusha
cwtl
cmovo
cwtl
inc
out
xchg
gs
mov
push
inc
push
mov
mov
cmpl
xorl
pop
test
fisubl
addr16
in
es
dec
xchg
dec
mov
mov
and
jge
or
sbb
dec
xchg
pop
xor
aas
add
mov
mov
dec
xor
cld
pop
fwait
icebp
dec
pusha
dec
push
loope
nop
in
sbb
dec
xor
pop
enter
mov
loopne
int3
inc
pushl
push
mov
sbb
push
cld
cbtw
sti
repz
addr16
mov
insl
fsqrt
imul
sub
pop
ret
inc
stc
dec
lahf
mov
cmpsb
into
cwtl
lods
sbb
push
add
movb
sbb
jne
adc
jle
and
jo
cld
dec
mov
test
mov
sbb
stos
sbb
loop
mov
jp
fxch
dec
out
repz
jmp
sbb
xchg
pop
mov
fwait
or
dec
mov
cmpsb
cs
bound
popa
pop
sub
jne
xchg
mov
lods
inc
jecxz
or
arpl
into
mov
inc
mull
andl
mov
inc
mov
ds
insl
mov
jp
add
test
push
loope
mull
add
and
xor
cmp
xor
push
iret
in
sbb
fcmovnb
mov
scas
movsl
ret
fistpl
imul
sbb
push
pop
insl
fwait
sub
movsl
sub
mov
or
jae
mov
ret
int3
and
inc
push
inc
xchg
pop
sub
adcb
jne
mov
add
push
loop
mov
ljmp
pop
subl
cwtl
xor
dec
cmp
cmp
in
pop
adc
mov
stos
inc
mov
loope
pop
adc
or
pop
push
std
or
xor
sub
jle
jge
mov
mov
lcall
dec
and
push
pop
inc
cmc
enter
mov
stos
bound
mov
pop
sbb
clc
add
sbbl
loopne
cli
jno
or
pushf
imul
pushf
loope
or
mov
mov
mov
sbb
jp
movsb
es
sbb
fs
push
cmp
mov
sbb
stos
inc
cmpl
mov
jo
in
stos
mov
pop
andl
jle
or
mov
arpl
push
lcall
jecxz
xchg
mov
cli
sub
xchg
push
pop
loopne
lahf
addr16
xor
xchg
andb
push
loop
lahf
inc
fiadds
dec
jp
out
ss
xor
push
bound
jmp
push
out
and
sbb
xor
rolb
pushf
inc
pop
cli
andl
rclb
xor
xchg
mov
ret
push
mov
fcompl
aas
shlb
xchg
pop
add
mov
loopne
fs
sahf
scas
pop
addr16
cmp
addb
pop
or
cwtl
mov
inc
test
fwait
cmp
jmp
mov
leave
mov
jecxz
xor
sub
loopne
pop
loopne,pn
and
inc
out
cmpsl
cmc
inc
pop
pop
mov
daa
shlb
push
push
sti
xor
cmpsb
push
mov
jle
gs
and
adc
jg
push
int3
xchg
and
ret
andb
std
out
inc
es
testl
mov
pop
in
movsb
nop
lcall
lods
pop
cld
aaa
imul
mov
lcall
fildll
sbb
out
xchg
rcrb
inc
call
sub
das
out
fs
push
and
lcall
movsl
inc
popa
sbb
sbb
mov
inc
shl
hlt
daa
pop
jne
fwait
sub
pop
inc
xorl
pop
testl
mov
jp
adcb
loopne
or
push
push
inc
mov
and
jg
mov
rcrb
mov
pop
hlt
dec
ret
lret
pop
sbb
push
pop
inc
pop
cmp
rcrl
test
or
cmp
adc
icebp
dec
outsb
mov
testb
push
cwtl
fistl
scas
cmc
fdivrl
cli
rcrl
arpl
add
int3
outsl
cmp
outsb
shl
idivb
xchg
jecxz
sbb
inc
shr
pop
xchg
enter
mov
adc
fisubs
bound
std
mov
dec
pop
dec
out
ljmp
jge
sti
dec
loopne
mov
imul
xchg
shll
lea
push
inc
inc
lds
stos
pop
stos
adc
mov
jge
jae
data16
mov
sbb
mov
inc
popf
sbbl
mov
mov
jp
push
and
jne
sti
test
cmc
xor
scas
xchg
loopne
mov
ret
sub
add
sbbl
xor
and
stc
in
sub
xchg
sub
push
and
push
das
jl
xchg
imul
mov
mov
pop
cmp
xor
dec
sbb
dec
jne
out
sahf
movsb
xor
cli
pop
sub
stos
ss
out
aaa
dec
xchg
sbb
pop
jg
mov
adc
fwait
add
xor
iret
xchg
mov
data16
inc
xchg
ja
mov
pusha
push
dec
add
popf
or
sub
mov
inc
loope
inc
call
dec
cwtl
and
push
aas
icebp
lods
xchg
adc
xor
cwtl
pushf
icebp
sbb
ret
sbb
sub
pop
insl
add
pusha
aaa
sbb
out
cmc
inc
aad
sbb
xor
lret
addb
sub
dec
xor
enter
testl
sub
cld
sarl
faddp
gs
add
mov
jmp
fsubr
push
or
inc
pop
inc
mov
jge
dec
fisubs
icebp
arpl
xchg
repz
aas
ret
pushf
gs
lods
mov
addl
pop
jmp
mov
xchg
inc
sarl
movhlps
xlat
xchg
add
test
loope
pop
pushl
mov
in
decb
adc
inc
shrl
mov
movsb
dec
pop
pop
mov
mov
pop
daa
clc
sti
movsl
popf
mov
cld
sbbb
ret
pop
xor
nop
fcomip
repnz
push
adcb
mov
xchg
mov
popf
mov
fcmovnbe
ret
bound
and
in
jle
and
dec
add
adc
mov
fdivrp
pop
jns
outsb
dec
and
repnz
sti
mov
stos
aas
and
pushf
and
inc
addr16
lds
inc
pop
pushf
mov
mov
ret
inc
fcmovnbe
imul
pop
nop
mov
adc
lods
pushf
test
xor
adc
jp
pushf
dec
cs
dec
fdivr
popf
push
jne
ret
movsl
test
add
mov
jnp
adc
pop
jg
push
xchg
outsl
dec
pop
test
pop
mov
mov
ret
pop
mov
stos
mov
mov
xchg
lods
sti
push
inc
cmp
cmp
scas
addr16
push
or
pop
mov
xor
scas
inc
cs
loopne
lock
adc
gs
pop
imul
mov
pop
inc
push
cmp
dec
addl
rclb
jp
mov
andl
loope
cmc
sarb
xchg
push
dec
lock
cld
stos
mov
push
call
dec
adc
pop
nop
sahf
or
mov
cwtl
mov
out
xlat
pushf
loope
dec
js
and
test
jp
jg
and
jge
add
int3
cs
pop
dec
data16
or
movl
stos
nop
sti
neg
test
cmpsl
movsl
loope
stc
and
aas
lock
pop
pushf
pop
add
iret
pop
jl
cmp
bound
push
push
in
adc
lcall
loop
mov
sbb
xchg
adc
test
nop
inc
jmp
adc
and
pop
test
fwait
pop
dec
fdivrl
cmpsb
xchg
pop
dec
ljmp
mov
push
push
inc
mov
mov
dec
enter
jp
adc
fs
or
fdivrs
movsb
push
adc
movsb
jle
stos
dec
sbb
mov
sub
ficompl
lds
adc
int
cld
sbb
in
cwtl
xchg
sub
loopne
push
leave
xor
into
push
lds
mov
insl
icebp
imul
inc
nop
rorb
jp
in
dec
push
add
dec
addr16
mov
inc
cli
mov
adc
loop
sarl
push
dec
jmp
mov
jns
mov
adc
and
xchg
sbb
rcl
das
sub
push
pop
ljmp
cmp
sbb
xchg
int3
inc
ret
lcall
lret
int
pushf
push
cmp
or
mov
dec
call
inc
cmp
out
sub
adc
sub
xchg
inc
addl
sti
jne
jle
sub
gs
notl
fwait
xchg
cmpsb
les
mov
mov
xchg
xchg
cwtl
sarl
bound
in
dec
and
xor
dec
mov
mov
ret
lock
jl
loopne
gs
sbb
jle
mov
rcrl
sbb
mov
add
and
daa
loope
push
xchg
dec
shrl
pop
loop
das
out
lcall
mov
mov
cmp
and
bound
aad
shll
sub
loopne
pop
jae
or
addr16
fisubs
les
sahf
xchg
mov
subb
jne
mov
mov
les
ret
inc
mov
xor
sti
mov
mov
insb
cmc
dec
sub
test
inc
add
dec
mov
test
jmp
into
mov
mov
aas
inc
dec
inc
scas
fs
mov
jg
push
add
mov
test
push
stos
fs
sbbl
sub
adc
mov
sbb
pop
movsl
xor
cwtl
fisubrs
movsl
cmp
addr16
sbbl
clc
aaa
dec
shl
push
shll
mov
shll
adc
mov
icebp
jge
leave
stos
pop
aad
lret
in
mov
jmp
fs
insl
add
je
sahf
imul
outsl
cwtl
jge
mov
mov
jmp
cmp
js
out
hlt
jmp
and
popf
cld
mov
ret
icebp
and
and
mov
add
ret
jecxz
inc
mov
jnp
mov
mov
ffree
pop
mov
sub
mov
push
jnp
sbb
xchg
sbb
bound
sub
xchg
mov
mov
push
ret
pop
test
add
mov
lret
mov
loope
jnp
mov
sbb
fildll
shl
cmp
in
push
sahf
xchg
dec
mov
jg
pop
jmp
mov
fcomps
inc
dec
jge
add
insl
pop
lahf
dec
dec
test
dec
inc
pushf
jg
sub
jne
push
loopne
lea
push
outsb
mov
mov
jnp
sbb
pop
pop
sti
mov
test
cmpsl
dec
xchg
fwait
jne
repz
fisubs
lods
cwtl
mov
cmp
decl
dec
mov
imul
mov
pushf
sub
aas
push
pop
addl
stos
lcall
stos
test
stc
repnz
dec
inc
mov
push
lcall
jg
or
push
arpl
dec
jge
insl
fildll
imul
jae
loopne
icebp
inc
loop
stos
xchg
arpl
cmpsl
jge
mov
jmp
mov
divl
gs
ret
or
loopne
cmp
jg
icebp
in
rclb
fbld
pop
arpl
cmpl
lahf
fisubl
push
mov
adc
push
push
and
cmp
and
cmpsb
push
in
enter
cli
pop
and
jecxz
inc
and
stos
sarb
lret
jmp
cmpb
into
loopne
sub
jle
rcrb
mov
mov
push
dec
roll
pop
dec
movl
inc
mov
mov
add
scas
add
sub
lahf
add
push
fisubs
jne
cli
fs
or
insl
js
mov
rcrb
sarl
pop
jl
pushf
add
cmp
cltd
mov
mov
push
imul
jmp
mov
or
jge
stos
aas
cld
gs
inc
jp
lods
std
mov
xchg
and
rorb
lcall
xor
push
xor
mov
and
fs
jle
jns
cwtl
mov
nop
add
mov
lahf
lret
xchg
out
xchg
ret
ret
clc
add
call
arpl
int
bound
cmp
mov
mov
sub
loopne
push
popa
loopne
shll
mov
sahf
lock
jecxz
icebp
mov
std
dec
mov
ss
lods
loope
cld
aam
aaa
sbb
dec
sub
daa
push
sarl
icebp
pop
ficoms
roll
dec
inc
nop
dec
add
repz
dec
nop
push
xchg
mov
cmc
or
lahf
jne
insl
bound
pop
mov
jnp
shr
or
int
bound
pop
mov
not
sahf
lret
hlt
or
leave
mov
leave
jo
jne
insl
imul
in
add
adc
dec
in
hlt
into
call
adc
cmp
jp
jnp
sub
cli
jmp
out
leave
in
pop
leave
scas
jg
fildll
repnz
insl
jg
jno
rolb
lea
std
push
lcall
mov
aas
xor
xor
xchg
inc
pop
pop
push
dec
ds
pop
repnz
imul
fcomip
inc
js
sahf
mov
ljmp
daa
mov
push
inc
and
xor
cmp
outsl
cld
pslld
es
mov
mov
sbb
scas
sti
adc
push
pop
pop
or
mov
jb
add
push
mov
push
lea
call
pusha
mov
pushf
pushf
mov
lea
jmp
call
pushf
clc
cmp
call
neg
call
pushf
pushf
movl
push
pusha
lea
jmp
lea
jb
test
bt
cmp
pusha
lea
jae
xor
bswap
adc
mov
clc
bts
bsf
sbb
mov
mov
mov
bt
test
call
cmp
movsbw
lea
pop
mov
cwtl
mov
call
jns
stos
into
jne
sub
jg
shll
pop
mov
pop
sbb
bound
jge
stos
or
adc
mov
fwait
mov
and
dec
arpl
repz
mov
lret
loopne
movsb
outsl
divb
jb
mov
mov
aad
movsl
adc
lods
add
repnz
stos
jns
leave
push
das
sub
subl
cmc
fisttpll
cmp
mov
outsb
jae
fimull
cmc
daa
insl
inc
sub
sub
pop
adc
outsb
xchg
add
push
inc
lock
xchg
cmp
mov
mov
push
sahf
mov
sti
mov
insl
dec
or
clc
clc
cmpb
pushf
jmp
or
mov
stc
add
clc
movzwl
pusha
inc
neg
pop
mov
pusha
cmc
bt
add
stc
call
rorl
iret
jne
xchg
mov
mov
xor
frstor
stc
inc
iret
xor
adc
pop
bound
sti
fucomp
imull
dec
pop
sbb
fisubrs
xchg
mov
adc
stc
fimull
inc
aam
rcrl
sub
mov
xor
test
stos
xchg
pushf
jne
sub
repnz
or
clc
jo
and
or
cmovo
mov
and
shlb
lds
cmp
call
movl
sub
test
shr
mov
lea
je
call
call
bound
xor
dec
movsl
or
inc
xchg
in
stos
jae
pop
jmp
repz
mov
mov
xchg
mov
and
cmp
pop
aaa
push
inc
xchg
pushf
icebp
jmp
mov
pop
cmp
out
add
fsts
negl
fists
rolb
cmp
jns
mov
fisttpl
arpl
repz
mov
xchg
jnp
subl
inc
adc
xchg
sbb
adc
mov
mov
repnz
sub
jne
sub
stc
scas
inc
loopne
lret
aaa
push
inc
outsl
ffree
arpl
push
sbb
pmaddwd
push
ret
jo
mov
mov
pop
push
rcrl
inc
xor
inc
xchg
xchg
daa
test
pop
test
adc
xlat
dec
sbb
or
mov
lods
pop
add
fs
je
jne
neg
xadd
rcr
sub
xchg
sar
sbb
mov
cmp
xor
test
btc
mov
shld
cmc
bsf
rcr
shr
rol
mov
bt
or
pushf
pusha
lea
je
adc
add
btc
sub
bsf
rol
shr
shld
mov
setae
dec
pusha
rcr
add
bsf
add
add
adc
sub
bswap
mov
clc
shr
clc
stc
cmp
push
jmp
lea
jne
not
mov
movb
mov
push
bswap
pushf
pushf
jmp
mov
pop
shll
inc
data16
cmp
and
insb
fidivrl
orb
outsl
inc
out
add
cld
fwait
push
ds
lods
outsl
in
out
test
mov
push
jge
mov
pop
sub
in
sbb
dec
pop
test
jge
gs
shlb
inc
rcll
adc
xor
cld
adcb
mov
mov
pusha
test
xor
arpl
fs
sahf
insl
fldl
jle
test
shlb
mov
pop
test
mov
or
cmp
xchg
cmp
or
jmp
adc
inc
jge
jbe
push
dec
mov
popa
mov
in
sbb
in
fldl
fbstp
lret
stc
test
jmp
sbbl
jne
outsl
test
fcomip
push
push
push
das
xchg
sub
popa
lcall
and
test
nop
aam
jae
mov
outsl
sahf
add
xchg
mov
jbe
roll
jae
js
cmp
ljmp
ds
jbe
and
cltd
xchg
popf
mov
dec
ret
ds
loopne
fmull
or
jecxz
filds
or
xor
cmp
shll
dec
call
repz
pop
sub
xor
xorl
pushf
cmp
jge
and
shrl
fmull
cmp
adc
cmp
mov
mov
loopne
xchg
mov
mov
cmpsb
sub
xor
xchg
sub
xchg
jle
add
hlt
inc
mov
xor
mov
das
std
xchg
cmp
rorl
cs
xchg
inc
aam
ljmp
shl
lea
call
jmp
setne
bswap
mov
mov
pop
pushf
lahf
lea
jmp
shld
mov
clc
cmp
pushf
pushf
lea
ja
xchg
mov
pop
mov
call
bsr
inc
mov
bt
test
bt
add
pusha
cmc
movzwl
stc
call
test
jmp
jle
pop
aad
bound
pusha
push
das
dec
lahf
xor
movl
push
testb
loope
mov
clc
fwait
jecxz
push
inc
cmp
cmpsb
and
push
ficompl
ja
je
call
test
adc
mov
aas
adc
lcall
jae
dec
mov
mov
jmp
jne
and
sbb
sbb
mov
mov
or
or
out
xchg
cmp
mov
xchg
les
push
daa
lret
and
xorl
pop
insl
pop
sbb
sahf
xor
jb
sbb
jl
mov
in
orb
out
fistps
push
repnz
int3
pop
inc
in
mov
jmp
jmp
js
icebp
and
mov
push
or
pop
aas
mov
arpl
cmpsb
arpl
sbb
add
in
pushl
call
call
add
push
gs
insb
outsl
jae
dec
gs
push
pusha
pusha
pushf
pushl
lea
jmp
pusha
setp
pop
movzbw
mov
lea
mov
movzbw
pop
pusha
xchg
mov
jmp
pushf
push
push
lea
je
pusha
clc
test
bt
sub
cmc
call
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
bound
sar
pop
xchg
fldcw
jnp
out
stc
sbb
jb
pop
cmp
fucom
mov
shrd
jmp
mov
sub
mov
popa
ljmp
sti
cmp
pusha
push
sbb
or
ds
inc
stos
dec
pop
dec
rolb
gs
aam
js
push
fwait
imul
pop
xlat
jne
mov
cmp
cmpb
aam
xor
mov
mov
out
cmp
insl
data16
rep
and
inc
mov
adc
das
addr16
cmc
loope
sub
popa
ss
cli
push
out
mov
roll
mov
pop
add
xor
mov
test
xchg
cmp
jne
shl
and
mov
in
push
sub
mov
pop
mov
inc
or
das
xlat
outsb
inc
mov
imul
jbe
jp
adc
push
add
mov
bound
in
jecxz
pop
clc
fs
add
pop
xchg
and
jo
aam
lods
inc
sub
pop
lret
sbb
shrl
xchg
push
mov
mov
xchg
hlt
dec
lret
adc
pop
ds
aam
push
xor
hlt
pop
or
push
fdivs
xchg
mov
insb
lds
mov
cmp
xchg
repz
jbe
subl
test
sbbl
xchg
cmp
test
scas
lods
dec
add
outsb
push
xchg
or
js
jmp
stos
mov
repz
jge
mov
push
cs
jne
lret
inc
adc
ret
ljmp
dec
dec
ds
fiadds
lock
inc
or
rorl
jno
sti
dec
lea
push
in
mov
enter
sub
ds
mov
out
ds
icebp
push
adcb
pop
repnz
enter
mov
inc
or
into
push
push
sub
in
lds
lods
test
in
lods
fisubl
dec
pop
mov
mov
iret
imul
lods
movsl
mov
cmp
xor
addr16
jne
in
dec
push
sub
lock
lods
add
jo
mov
sbb
insl
inc
ficompl
cmp
mov
or
mov
repnz
cwtl
jg
jo
popa
mov
xchg
mov
nop
out
sbb
popa
jne
in
lods
jb
scas
mov
xchg
push
mov
pop
mov
call
int3
fnstenv
test
mov
fdivrs
mov
dec
fcmovnu
std
call
jo
ret
and
mov
and
lcall
xor
mov
fnstenv
jb
dec
and
mov
cs
pop
jnp,pn
pop
mov
pop
mov
stos
mov
bound
ret
rol
aam
js
mov
pop
test
repnz
movb
call
pusha
lea
jb
cmp
cmc
bt
stc
cmp
pushf
lea
ja
or
rcl
add
neg
adc
and
shl
mov
test
pushf
cmp
call
pusha
pushl
mov
push
mov
pusha
pushf
pushl
ret
jmp
jmp
not
jmp
call
arpl
pop
fidivl
jp
mov
ss
in
adc
outsl
rclb
push
xchg
leave
cltd
es
ret
out
mov
push
and
xor
icebp
test
mov
sub
dec
fists
sub
pop
test
jmp
dec
ljmp
xchg
add
jno
sub
add
push
lods
xchg
call
push
or
jns
jbe
fcomps
inc
or
lcall
pop
xchg
mov
or
lods
into
pop
aad
lods
xchg
mov
sbb
push
adc
ja
popf
addr16
out
dec
mov
arpl
movl
and
ret
mov
or
jne
or
push
jp
xchg
call
and
or
xchg
dec
movsb
or
popf
jbe
and
mov
add
cmpsb
jge,pt
in
pushf
mov
test
jecxz
cltd
add
fisubs
xchg
rclb
jl
rclb
cmc
in
outsl
or
pusha
dec
sbb
rcrl
rcrb
xor
jb
adc
cmpl
not
pop
pushf
pushf
mov
push
movsbw
movzbw
pushf
mov
not
not
mov
pusha
pushl
ret
add
sub
add
add
add
add
add
add
push
ret
push
ret
push
ret
add
add
add
pop
ret
cmpsb
sub
das
cmp
inc
sbb
lret
mov
fcmovnu
pop
jmp
pop
ret
sti
jmp
sub
and
sub
insb
push
dec
fisttps
adc
jg
cmp
rcl
lods
out
cld
adc
add
test
pop
pop
cli
mov
rcll
dec
jmp
push
adc
push
daa
sub
sarb
rorl
sub
adcl
repz
push
les
dec
jg
dec
cli
ds
mov
mov
sub
dec
pop
bound
jnp
dec
mov
inc
push
out
push
jnp
push
insb
outsl
fcmovne
mov
mov
loope
push
inc
insl
cs
xchg
and
sub
gs
test
add
rolb
mov
and
fldcw
mov
loop
sub
xor
push
mov
xchg
aas
test
xchg
push
fcmovu
jle,pn
daa
rcr
fcmovb
mov
js
dec
jmp
bound
mov
in
jmp
and
mov
outsb
xchg
aam
loop
fisttps
jnp
xchg
andb
dec
ds
sub
inc
mov
jb
sub
push
dec
cld
packssdw
pop
push
rolb
dec
arpl
add
push
mov
add
pop
mov
call
jl
jo
jbe
shrb
mov
mov
mov
pop
bound
cwtl
aad
cs
in
ficompl
aam
cmp
mov
test
cs
cwtl
mov
mov
scas
loope
mov
sahf
outsl
push
jl
adc
hlt
pushf
pusha
sub
xchg
loope
aas
js
pop
decl
add
adc
and
adc
loop
mov
ja
pop
adc
pop
jle
mov
xlat
xor
mov
jb
inc
or
jmp
fisttpl
enter
loope
push
int3
xor
sbb
outsb
xorl
sbb
mov
outsb
popf
push
ss
pop
outsb
call
adc
outsl
mov
scas
arpl
les
fnsave
pop
loop
cwtl
mov
sub
not
lahf
cmpsl
jg
adc
jg
xor
hlt
fiaddl
in
and
stc
dec
fistpll
sub
push
xor
outsb
pop
push
cmp
jge
lret
sbb
out
test
mov
dec
cmp
sbb
inc
popf
lods
icebp
fsubl
stos
ret
xor
sbb
test
lret
mov
int
fisubrs
call
mov
mov
test
filds
and
mov
sbb
xor
mov
pop
test
jge
adc
inc
inc
and
mov
pop
push
aaa
movsb
sti
mov
lods
in
lds
cwtl
aaa
incb
inc
mov
js
call
inc
in
xor
ljmp
pop
imul
sub
std
sbb
sarl
jg
xor
cmp
divb
and
jnp
sub
adcb
mov
adc
lds
mov
mov
push
test
mov
aad
or
das
and
outsb
cmpsb
rorl
or
sub
cmp
jb
loopne
enter
inc
or
decl
adc
lahf
sub
sbb
jne
cmp
pusha
jbe
cltd
xchg
sbb
js
std
jge
lahf
push
dec
push
aaa
loopne
insl
fisubs
outsl
adc
aam
out
mov
popa
jecxz
fmuls
mov
xchg
push
lea
call
xor
sahf
sbb
pop
push
into
sahf
jno
lods
fwait
jge
or
and
pusha
jle
ds
jnp
clc
not
xor
sbb
lods
mov
lcall
or
out
sub
iret
xchg
repz
hlt
xchg
push
pop
mov
das
push
icebp
scas
xchg
int
mov
clc
pop
push
and
xchg
je
call
jnp
mov
mov
imul
push
push
gs
imul
pusha
inc
jl
test
lods
adc
dec
xchg
pop
cwtl
mov
mov
xchg
push
flds
lret
in
cmc
adc
pop
nop
das
mov
adc
push
mov
lods
sub
xor
and
pop
and
mov
sarl
push
sub
cwtl
mov
js
inc
mov
and
stc
into
mov
xchg
sub
push
mov
sub
xchg
lcall
mov
sub
mov
jcxz
or
mov
sbb
ret
mov
push
aas
lcall
and
lods
add
imul
inc
in
sahf
scas
xchg
es
pop
lret
sub
inc
dec
cmp
ret
xchg
cmp
ret
or
pop
xchg
or
dec
xchg
cmpb
aad
jl
lcall
mov
fnsave
ret
or
lods
sub
aad
dec
mov
loopne
nop
or
xlat
and
iret
jle
inc
pop
shl
loop
in
call
testl
push
mov
xchg
fwait
popf
push
inc
mov
mov
repz
icebp
dec
scas
dec
jae
or
fdivl
jns
and
and
int3
nop
pop
add
push
sbb
clc
or
push
into
adc
imul
add
in
mov
call
mov
leave
and
js
push
cltd
mov
inc
sub
xchg
into
les
jae
pop
call
mov
inc
in
mov
mov
push
pushf
sbb
xchg
js
cmovle
dec
xchg
jmp
xchg
xchg
cmp
dec
rdpmc
movsl
fdiv
add
nop
inc
pop
daa
or
and
out
push
jle
mov
insl
push
and
xor
es
jbe
push
das
pop
addr16
cld
loope
aaa
jnp
bswap
xor
lds
sahf
or
ljmp
orb
orl
add
inc
pop
sbb
jnp
lds
pop
scas
das
push
addr16
xchg
dec
dec
cpuid
and
mov
xchg
add
gs
xchg
xchg
call
jecxz
inc
push
incb
pop
jmp
dec
fcmove
mov
mov
arpl
orl
and
in
scas
mov
mov
xchg
mov
call
daa
pop
pop
in
stos
divl
mov
in
or
rcrb
sbb
mov
jbe
int3
mov
push
ret
mov
mov
ds
out
outsl
jb
mov
into
ret
into
sbb
cmp
clc
xchg
inc
jle
jns
rorl
frstor
pusha
pop
mov
loop
in
adc
and
jg
in
aad
mov
mov
add
mov
mov
mov
vpsubw
aas
stos
lods
dec
add
cmp
jbe
jns
imul
mov
jle
push
xchg
ss
iret
aam
mov
cltd
cli
adc
pop
push
mov
mov
xor
outsl
push
inc
lret
xchg
cmp
lods
arpl
xor
add
rcrl
xor
sti
jp
mov
scas
cltd
lods
jno
mov
cmp
enter
ljmp
sbb
jle
lret
ret
ror
inc
and
fcmovu
and
fmuls
lret
stos
dec
repnz
rcrb
inc
xor
scas
add
mov
adcb
and
jmp
punpckldq
push
cmpb
jg
ret
and
pop
stos
and
in
xchg
arpl
xchg
and
pop
je
js
pop
push
aas
inc
and
cmp
push
lds
repnz
dec
add
int
xor
jne
out
and
stos
jp
mov
mov
xor
xor
sbb
sahf
push
cmp
push
adc
sbb
push
push
mov
cmpsl
push
sub
mov
fbstp
sbb
lcall
xchg
lahf
decb
lahf
in
mov
lret
rclb
nop
jl
aad
mov
xchg
dec
inc
addb
lds
sbb
popa
dec
aas
and
sub
jae
aam
sub
mov
scas
lods
aaa
rclb
xor
lea
push
rolb
movsl
inc
mov
aam
movsl
and
pop
cli
icebp
jne
lods
adc
sbb
cld
lea
insb
in
jge
roll
mov
push
mov
in
jle
in
insb
pop
dec
je
ret
sbb
mov
sbb
mov
jle
fs
push
ja
insb
imul
mov
xor
daa
pop
loope
cmpxchg
scas
jne
inc
inc
and
das
iret
dec
xor
mov
adc
cld
mov
leave
in
imul
das
jle
jg
mov
add
xor
mov
incl
out
or
dec
outsb
out
sbb
mov
js
fisttpll
repz
sti
xlat
in
mov
mov
clc
and
inc
outsb
cltd
sub
add
cmc
lea
add
xchg
movsb
mov
fnstenv
pop
movsb
cli
aam
mov
xor
mov
int
dec
mov
push
adc
fs
xchg
popf
repnz
jns
clc
ds
aam
and
mov
stc
pop
inc
push
adc
add
inc
outsb
jns
xchg
loope
in
inc
lock
daa
cmp
mov
mov
xchg
in
mov
mov
mov
fs
jbe
and
je
sub
and
imul
mov
cld
incb
insl
adc
nop
push
lods
cmp
out
sub
jnp
and
popf
jle
imul
sub
jl
mov
stos
sbb
xor
xor
in
cmp
push
into
insb
dec
ljmp
xchg
fstps
imul
mov
imul
mov
xchg
cmp
iret
int
scas
cmpsw
pop
sbb
xchg
pop
imul
and
jb
aad
adc
mov
sub
in
and
ficoml
jnp
and
lahf
or
xchg
hlt
mov
xchg
jl
ja
push
cmp
js
lock
cmp
pop
dec
pop
cld
test
jmp
push
mov
popf
fadds
es
push
iret
ret
and
hlt
aad
push
loop
mov
jl
fdivl
sbb
out
test
mov
add
ret
pusha
xor
lods
mov
xchg
shl
xor
mov
ret
lods
cmp
dec
ret
out
jb
push
lea
xor
xchg
out
push
das
aas
loope
mov
fsubrs
xchg
jne
mov
xor
loopne
ds
in
jbe
mov
popf
bound
test
cmp
cmp
push
cs
pop
fucom
inc
out
jno
imul
mov
mov
pusha
push
rcrb
fstps
xchg
ret
and
add
add
add
inc
call
call
mov
bound
scas
aas
pop
sbb
xchg
sbb
and
sub
fidivl
popa
pop
icebp
add
sub
sahf
iret
xchg
leave
daa
jno
ss
xor
mov
sar
rolb
rcl
jle
mov
push
cmc
pushf
cmp
mov
jmp
mov
stc
bt
call
jmp
jmp
lods
lock
mov
jne
movsl
ljmp
push
call
pop
out
daa
inc
fnstenv
add
stos
sbb
in
jns
outsl
loope
mov
pop
lds
dec
insb
add
stos
jbe
xchg
mov
jecxz
add
or
nop
xor
cld
mov
sbb
lea
fldt
fisubrl
ljmp
fwait
inc
adc
jg
dec
cmpsb
xchg
dec
in
cltd
aas
push
aad
or
sub
rcl
stc
ljmp
pop
clc
adc
mov
xor
xor
pusha
inc
cmp
loope
inc
push
or
stc
push
cmp
inc
cmp
imul
incb
inc
sub
das
mov
popf
fldenv
daa
or
fwait
adc
mov
jmp
les
cltd
inc
jnp
lret
dec
xlat
das
gs
iret
sub
pop
arpl
push
fs
jne
inc
call
dec
incl
bound
sbb
lcall
jecxz
imul
mov
outsb
xchg
js
jbe
sahf
gs
mov
push
cli
push
outsb
push
adc
inc
jb
xor
adc
inc
jecxz
iret
ds
mulb
leave
jae
sarb
xor
sarl
push
inc
lods
das
xorb
pop
jno
xor
out
lea
enter
bound
jl
mov
adc
xor
or
and
fwait
push
jge
jbe
mov
mov
test
xchg
xchg
mov
call
in
adc
mov
loop
test
jne
stos
inc
mov
sbb
push
aaa
scas
cmp
bnd
addr16
fildll
test
pusha
sub
sub
xor
inc
repz
xlat
cmpsb
add
lcall
in
pop
clc
insl
and
sub
adc
jmp
mov
mov
mov
test
pop
fcmove
ficoml
jecxz
or
dec
pop
decb
shlb
xchg
in
push
repz
ret
pop
je
jge
lea
lds
stc
adc
xchg
pop
cli
mov
in
inc
test
outsb
jbe
mov
test
rorl
mov
outsl
out
inc
mov
addr16
push
or
call
or
in
inc
xchg
ljmp
cld
dec
dec
or
xor
test
lret
iret
mov
outsb
sbb
clc
xor
mov
shrl
push
xlat
shll
ljmp
push
dec
or
jge
leave
shll
js,pt
outsb
cmc
out
sbb
add
xor
xor
pop
push
pop
xor
lcall
icebp
addr16
xchg
jg
in
in
add
je
jne
jae
jb
outsl
jae
bswap
movzbw
push
setge
mov
pusha
movl
call
mov
pushf
movl
call
mov
movl
pushf
pushf
pushf
lea
jmp
fisubrs
out
into
loope
stos
xchg
cmp
push
divl
xchg
jp
test
dec
stc
adc
inc
mov
pop
sub
roll
loopne
loopne
or
iret
mov
inc
xor
mov
fbld
pop
mov
into
xor
inc
out
imul
cmp
test
andl
inc
insl
fisttpll
out
insl
cmova
jp
pop
and
popf
xor
mov
out
fsubs
ret
xor
ss
mov
fsubs
push
jno
in
add
mov
xchg
in
and
les
dec
mov
lret
pop
ljmp
dec
or
push
add
enter
test
leave
xor
jle
subb
cmc
dec
repnz
sub
aaa
and
int3
mov
push
inc
fsubr
add
pop
ss
or
out
cmc
push
adc
push
sbb
cltd
call
stos
aas
xor
insl
cmpsb
lret
mov
fstpt
add
nop
cli
adc
and
dec
setle
call
pushf
add
push
pusha
pushf
movb
lea
jmp
movzbw
stc
mov
lea
push
sub
lea
lea
clc
sub
lea
js
pushl
pusha
jmp
cmp
mov
lea
ja
clc
dec
sar
test
sub
lea
inc
inc
sbb
add
bsr
mov
or
xor
shl
mov
test
pusha
stc
movb
repnz
call
test
jmp
push
call
btc
shld
cmc
or
mov
call
movw
pushf
lea
ja
call
cmp
sar
fsubr
or
test
jg
out
jb
jmp
dec
fidivrs
push
rcrl
or
stos
lods
xchg
es
jb
jno
xor
and
fucomip
nop
pop
and
ret
ret
in
jne
mov
das
sarb
jl
loop
subb
dec
jno
adc
xchg
fs
movsl
incb
sub
inc
out
xlat
jmp
cmpb
pop
rorl
sub
mov
inc
pop
push
shrl
cmp
repnz
push
adc
push
fbld
dec
cmpsl
ret
jmp
jns
and
out
in
xchg
hlt
cmpsl
mov
gs
pop
cmpsl
inc
popl
mov
lahf
loop
mov
js
mov
call
push
add
jmp
lea
call
pushf
pusha
lea
jne
call
jns
or
jne
mov
add
push
data16
or
add
leave
sub
xchg
aam
aad
and
sub
push
pop
fs
aas
popf
cmp
adcb
dec
inc
dec
stos
aad
cmpsb
fnstcw
sbb
add
mov
bound
cmp
stos
ficoms
inc
push
test
bound
jo
icebp
test
out
jne
or
lods
sbb
loop
ss
fidivrl
push
dec
inc
out
in
movsb
fcmovnu
std
dec
cwtl
gs
adcb
andl
cmp
mov
cmpsb
jnp
cmpsb
mov
shlb
or
sub
loopne
addb
imull
fwait
scas
dec
pop
arpl
fdivrs
inc
out
lcall
xor
outsb
mov
lea
lea
lea
setle
bswap
pop
movsbw
jmp
movzbw
xor
pusha
mov
pop
mov
xchg
mov
pushf
mov
pushf
pushf
lea
jns
pusha
mov
movzbw
movzbl
pop
pusha
pushf
pushl
ret
add
pusha
jmp
pushl
call
movb
mov
movb
pushl
ret
jmp
xor
dec
icebp
jne
push
hlt
fidivrs
cs
shll
xchg
scas
pop
mov
imul
sbb
cs
mov
insb
sub
bound
sub
dec
xor
and
addl
in
mov
nop
jmp
xor
int
lret
or
inc
repnz
and
cmp
mov
cli
sbb
icebp
dec
pop
dec
icebp
repnz
sub
dec
stos
in
and
pop
jns
pop
jg
dec
lock
dec
in
sub
roll
daa
inc
dec
cmc
repnz
sahf
cltd
mov
dec
mov
sub
jne
mov
fcompl
stos
mov
adc
jbe
repz
sub
pushf
call
mov
push
cmc
call
lea
ja
stc
not
bt
ror
pusha
pusha
clc
cmp
sub
pushl
movb
push
call
stc
imul
bt
pusha
movb
add
pushf
pushf
lea
jmp
inc
sbb
icebp
jne
jge
je
lahf
ljmp
sub
sub
pop
push
xor
into
push
and
rorb
and
ss
mov
and
testl
dec
imull
and
in
sbb
aam
cwtl
ja
imul
mov
push
mov
and
jae
not
mov
setl
mov
movsbw
xor
mov
mov
clc
jmp
cld
repnz
jne
movsb
inc
cmpsl
mov
jge
mov
lock
dec
mov
fmull
mov
jnp
test
fidivrs
xchg
add
dec
sbb
lahf
sub
fs
out
add
or
dec
jno
lock
inc
sbb
pop
cmpl
jb
mov
cs
cmp
jg
addr16
xchg
test
jmp
incl
ret
bt
cmpb
call
jmp
mov
jmp
fcom
pop
repz
and
scas
pop
out
push
mov
mov
sbb
push
sbb
call
stc
outsl
arpl
leave
jp
js
js
xchg
nop
int
jae
ds
adc
sbb
paddusw
mov
fdivl
in
ds
scas
cmp
orb
int3
fsin
mov
movsb
pusha
lea
ja
bt
cmp
clc
add
pushf
clc
call
rcl
mov
stc
test
pushf
push
lea
je
stc
push
mov
sbb
mov
bswap
add
sete
bswap
mov
cmc
stc
test
pushf
lea
je
cmp
add
shrd
or
add
add
pusha
mov
call
jmp
jmp
arpl
repz
sub
hlt
inc
call
out
cwtl
les
or
fimuls
cmp
push
scas
out
nop
lret
subl
xor
pop
shr
fisttpll
inc
daa
jle
data16
mov
cmp
push
ja
push
dec
jecxz
sub
pop
mov
call
or
sbb
jecxz
dec
in
aam
mov
repz
aam
adc
or
call
pushl
popl
pushl
pushf
push
pushl
ret
not
mov
lea
push
lea
jp
call
pushf
pushf
lea
jae
pusha
bt
bt
jmp
push
pushf
movl
call
dec
sbb
xchg
fbstp
add
mov
mov
sub
loopne
sub
fisttps
and
je
fildl
xchg
mov
sbb
sub
mov
xor
xchg
aas
sbb
out
out
cmp
jp
adc
cmp
mov
push
or
jo
sub
xchg
xor
sbb
loopne
in
aad
gs
sahf
sub
cld
cmpsl
fstps
push
mov
jge
mov
jp
bound
and
mov
push
mov
movw
pushl
ret
lea
jne
call
lcall
sti
dec
jae
std
stos
mov
push
in
xchg
and
jp
mov
pop
movsb
dec
lds
les
push
test
jecxz
mov
add
notl
popa
mov
or
xchg
out
lds
les
sbb
cli
cmp
xor
imul
rclb
dec
xchg
scas
enter
std
inc
jae
in
fdivrp
jae
outsb
xchg
inc
push
push
and
mov
cwtl
add
push
jecxz
add
scas
add
loop
mov
push
sub
jmp
adc
pop
sbb
gs
add
mov
pop
fidivs
pop
cs
pop
xor
mov
inc
push
inc
add
dec
or
sahf
mov
xor
adc
jp
jecxz
cmpsb
add
pop
divb
jle
jg
add
push
mov
cmp
test
sub
clc
out
sti
lahf
jp
call
jecxz
dec
push
sahf
insl
movsb
fucom
sub
and
mov
cmp
push
test
mov
jno
and
in
jnp
xchg
mov
and
out
cmp
mov
in
sbb
pop
sarb
adc
pop
jno
out
out
fbstp
popf
movsl
cmp
jne
lret
jmp
or
lahf
fwait
lret
cmpsl
xchg
in
jecxz
pop
cltd
lcall
push
in
sbbb
sub
push
jo
sub
fisubrl
and
cld
or
aaa
cmpsl
dec
stos
ljmp
subb
mov
dec
aam
mov
out
jmp
mov
inc
or
add
push
lea
jmp
call
bt
add
pushf
movb
mov
pushl
lea
je
pushf
mov
pushf
lea
jo
add
pusha
pusha
lea
jmp
lea
jne
jmp
push
adc
add
mov
adc
ret
or
bound
mov
lahf
arpl
ja
ds
xchg
test
mov
fildl
lret
jae
or
je
jmp
mov
repnz
push
test
xor
add
xchg
adc
int
stos
andl
ror
and
sub
xor
fs
push
xchg
popf
and
jne
fnstcw
negl
adc
loopne
dec
incb
sbb
leave
mov
inc
insl
pop
out
mov
popa
pop
rcrb
gs
sbb
push
cs
shl
fwait
xor
jo
ds
xor
or
pop
int3
push
and
cld
nop
cmp
jns
les
test
cld
lods
dec
or
insl
sub
pusha
and
xchg
cmc
adcb
and
daa
xchg
push
push
cs
add
incb
pushf
out
pop
adc
xchg
or
lea
loope
cmc
or
cld
xlat
call
in
ss
dec
out
test
rol
insb
decl
sub
cld
in
xchg
leave
and
xchg
in
adc
aad
ret
xor
dec
push
jnp
cs
or
imul
or
out
fadds
test
jp
bound
inc
bound
je
pop
jmp
rcl
mov
xchg
dec
aaa
cwtl
or
mov
inc
sahf
lds
cld
sub
pop
jae
push
adc
xchg
clc
insl
sub
pop
repz
cs
pushf
jmp
cmp
or
push
pushf
pusha
lea
je
jmp
cmp
pushl
pushf
lea
ja
ja
imul
clc
push
add
pushf
pushf
lea
jmp
call
pushf
movb
pusha
lea
call
jmp
push
lock
std
std
mov
push
sub
js
sbb
lret
sub
add
ss
outsl
fildll
rcrl
inc
repnz
aam
push
les
in
shrb
adc
test
shrl
add
push
inc
push
das
adc
xchg
push
xchg
jo
mov
clc
adcl
adc
jmp
push
fldl
fisubrl
ljmp
gs
cmp
xchg
fsubs
or
sbb
cmp
sub
ss
or
lods
sbb
in
rorl
sub
push
jns
jg
xor
ja
xchg
mov
sub
pop
add
or
jecxz
int3
sub
jmp
lcall
out
mov
iret
mov
pop
jnp
pop
adc
repz
cmpsl
pop
outsb
in
mov
bound
push
lea
inc
pusha
and
dec
fiadds
stc
call
sbb
push
fadds
mov
xor
call
pop
das
push
shll
out
sbbb
lcall
xor
repnz
cmc
push
nop
xchg
cltd
sub
jmp
ja
outsl
daa
scas
out
and
pop
lret
into
arpl
sbb
inc
xor
sbb
gs
iret
es
ficoms
push
icebp
cmp
cmp
sbb
loopne
mov
test
sbbb
jmp
mov
outsl
pop
pop
and
adc
jbe
adc
mov
shll
jmp
push
aaa
mov
push
adc
cmp
xlat
movsl
hlt
add
in
and
lea
push
outsb
push
ret
mov
pusha
mov
das
scas
fisubrl
popa
sbb
fwait
inc
mov
fdivl
pop
jbe
adc
pushf
lock
cmp
mov
mov
repz
enter
movb
movw
movl
lea
jne
setnp
not
call
pusha
mov
movzbl
mov
pusha
pop
lea
pushf
call
cmp
repnz
mov
pusha
lea
jne
mov
movzbw
push
movb
call
movzbw
setge
mov
mov
push
push
pushf
lea
jmp
pushf
mov
movl
pusha
lea
jmp
ss
cld
jne
cvtps2pi
test
push
xchg
add
mov
and
push
call
gs
jg
pop
jp
and
mov
cs
bound
xchg
scas
cltd
in
je
aaa
sbb
int3
test
pop
popf
mov
imulb
adc
add
mov
cmp
icebp
jmp
add
out
jmp
mov
or
pusha
lea
jne
btr
shl
shl
mov
cmc
bt
jmp
bt
movb
bt
imul
call
test
loopne
je
cld
dec
sub
iret
insb
cltd
jb
imulb
int3
mov
iret
sub
mov
cli
and
sub
inc
lea
mov
lret
jg
pop
hlt
jno
mov
lods
add
xor
outsb
cltd
jb
mov
mov
ret
push
and
scas
inc
push
dec
mov
xorb
jb
lret
jne
cmpsl
sbb
insl
jp
cmp
or
js
lock
mov
negl
sub
xlat
test
shr
mov
stc
and
inc
insb
loop
dec
jmp
sti
push
cmp
mov
lea
sub
lock
repz
test
push
imul
add
sbb
test
sbb
cmp
testl
loopne
mov
or
sub
arpl
cmp
popf
jle
cmp
push
and
push
test
test
cld
lock
gs
aaa
push
push
stc
jg
cmc
or
lahf
mov
push
sub
jne
sbb
xchg
inc
push
shl
jae
mov
and
jne
xor
pop
movsb
dec
push
mov
in
jbe
sbb
shll
mov
adc
and
or
cmc
pop
in
push
ret
stc
push
cld
push
dec
cmp
push
cmpl
scas
push
mov
pop
out
fisttps
add
inc
and
push
dec
dec
push
into
rorb
mov
gs
push
shl
or
pop
daa
pop
fs
xchg
add
je
out
or
adc
and
xchg
xor
out
mov
mov
imul
jne
sahf
std
xlat
cld
push
mov
aas
ret
push
or
cli
mov
ja
or
mov
neg
mov
sahf
mov
mov
scas
lds
sbb
pop
sub
fisttpll
call
ss
pop
std
sub
loopne
sbb
dec
mov
leave
gs
push
mov
int
stos
add
mov
xchg
hlt
mov
andb
mov
aas
jle
call
daa
aam
sbb
sar
ja
sbb
inc
or
pop
mov
into
sahf
std
clc
xlat
lds
ss
mov
inc
nop
push
dec
mov
and
jmp
dec
or
out
cmpsl
insb
mov
cld
mov
mov
push
jecxz
in
int3
mov
stc
cld
mov
cmp
xor
sbb
xchg
push
cs
scas
test
scas
mov
rorl
add
notl
test
adc
adc
lods
loop
mov
jle
jle
xor
aaa
jg
inc
sbb
movsb
int3
or
stc
push
xchg
test
xor
cmp
movsl
lods
andb
pop
xlat
mov
sar
or
jmp
pushf
call
mov
iret
sub
repnz
js
imul
jge
stos
jle
stos
nop
xor
stos
adc
jmp
test
pop
bound
arpl
fs
adc
rclb
xchg
in
popf
mov
and
rcl
or
adc
nop
push
mov
mov
add
mov
xchg
mov
mov
mov
xchg
fistl
in
in
cmpl
and
mov
xor
cwtl
cmp
pop
mov
ja
dec
mov
jbe
sub
xor
cmp
sbb
add
ja
cmp
cltd
push
jno
mov
jo
xchg
jns
and
cli
fsubrl
mov
add
je
cmpb
insb
push
push
push
in
or
jl
in
ss
cmp
push
push
sbb
mov
loope
sbb
adc
out
sub
neg
mov
lods
mov
jo
es
jle
add
adc
push
test
add
stc
pop
insl
xchg
cs
lret
rol
mov
jns
inc
inc
inc
adc
and
sub
jnp
jnp
adc
dec
add
jl
jp
push
jge
iret
aaa
cmp
stc
push
shll
lahf
xchg
mov
dec
jbe
enter
mov
and
js
jne
pop
lea
pop
adcl
ret
push
notb
clc
dec
ror
sar
and
movb
lea
je
stc
jmp
adc
sub
shl
push
rol
inc
mov
not
sub
rol
mov
push
mov
cwtl
bsr
push
mov
test
push
shl
push
rcr
call
imul
test
pusha
pushf
add
mov
lea
jmp
cmp
pushl
jmp
outsb
xchg
lods
add
sub
push
mov
xchg
xchg
cld
bound
testl
adc
fsubs
out
imul
out
xor
or
js
ficoml
lret
pushf
pop
push
jae
inc
out
inc
cmp
sub
in
dec
out
push
or
xor
mov
sub
jl
ljmp
push
xor
sbb
jae,pt
xchg
inc
pop
icebp
outsb
int3
cmp
and
scas
arpl
test
push
push
xor
jle
push
push
push
push
jge
jg
ret
mov
and
aaa
ficompl
ja
icebp
jmp
movsb
int3
xchg
addr16
xor
leave
push
cmp
out
mov
mov
lods
push
xchg
add
repnz
push
mov
mov
jnp
scas
out
pop
cmpl
add
fistps
mov
imul
adc
or
or
or
pop
mov
ds
loop
stos
pop
xchg
cmp
mov
out
ficompl
xor
in
and
scas
movsb
int3
mov
xchg
imul
add
inc
xor
notb
fisttpll
mov
sarl
push
xchg
pop
clc
int3
inc
cltd
loopne
insl
andl
sub
or
and
mov
std
mov
lods
xchg
and
push
leave
es
andl
stos
lods
lods
add
cmp
fldenv
fchs
les
xor
mov
sub
aaa
les
pop
xor
cmp
loop
stos
out
pushf
das
lds
mov
lret
xchg
dec
in
outsl
sub
jecxz
pusha
mov
shrb
sbb
push
inc
inc
cltd
add
bound
and
and
lock
jge
mov
add
pop
in
scas
mov
test
pop
or
sti
fwait
data16
sub
jae
jo
sbb
adc
xchg
fists
add
pushf
sbb
aas
lods
inc
push
mov
pop
ret
das
sbb
int
cld
insb
inc
mov
js
pusha
in
cmp
orb
ljmp
jg
pop
cmp
jbe
jg
lods
jae
push
fimuls
pop
jp
sub
and
out
pop
mov
or
xor
push
adc
es
sar
mov
fisubrl
mov
arpl
pop
mov
mov
mov
aas
add
dec
mov
dec
in
imul
mov
dec
lods
shll
in
inc
push
lret
mov
sbb
fmull
or
scas
inc
out
adc
adc
cs
cltd
addr16
add
aam
shl
daa
fistps
out
fadds
mov
mov
cs
pushf
outsb
or
mov
lock
fcmove
dec
fdivrs
pop
add
and
sarb
loop
hlt
aam
jmp
pop
clc
inc
imul
pop
jne
xor
and
push
jle
inc
outsb
mov
pop
push
adc
into
movsl
aam
cmc
stc
not
bt
ror
cmp
sub
call
shld
dec
bsf
shl
mov
call
test
clc
test
add
pushf
not
call
add
pushf
movw
push
pushf
lea
jmp
lea
jne
pusha
movb
jmp
test
jmp
xor
xor
in
insb
inc
adc
call
lea
clc
jo
mov
or
ljmp
push
jge
lods
pop
sar
adc
mov
fidivrl
inc
int3
pop
out
ret
lcall
xor
push
mov
ss
aam
fwait
cmp
hlt
pushf
aaa
or
shl
jne
dec
movsb
jecxz
add
repnz
cli
std
adc
mov
and
xchg
xchg
ja
pop
sbb
iret
mov
fucomp
scas
aam
adc
and
ret
rcl
push
bts
push
neg
mov
push
btc
movzbl
mov
rol
shl
mov
mov
call
pushf
lea
call
pushf
jmp
enter
jbe
dec
and
pop
bnd
cmp
jbe
xlat
and
stos
or
mov
outsl
test
in
or
pop
or
xor
stos
enter
inc
sub
and
cmp
std
in
loopne
xor
pop
sbb
imul
mov
fidivrl
jle
xor
loopne
into
or
inc
das
push
mov
pop
inc
scas
fdivs
add
dec
xchg
pop
mov
shr
loop
sti
mov
mov
lahf
cmp
sub
enter
mov
movl
call
cmp
jmp
movl
pusha
movb
mov
call
jmp
add
inc
js
je
jb
arpl
jae
mov
add
adc
mov
incb
cmp
sbb
mov
mov
cmp
enter
rclb
aaa
jb
mov
adc
adc
push
sub
sbb
or
jecxz
mov
and
and
xor
jno
fisubrl
push
aam
push
xchg
jmp
or
lahf
mov
add
or
dec
xor
xchg
xor
pop
ja
lds
stos
add
lods
test
sar
test
mov
sbb
adc
shr
pop
mov
ret
or
sub
mov
cmpsl
dec
xor
pushf
into
mov
sbb
lahf
jl
icebp
or
cmpsl
mov
inc
or
sub
mov
mov
insb
sarb
xchg
inc
dec
nop
push
mov
loope
jp
scas
sahf
push
pop
in
xchg
sub
insl
mov
mov
out
xor
cwtl
sarb
xchg
jecxz
jge
iret
lret
mov
sti
movsb
test
aas
xchg
mov
call
lea
jnp
pushf
pushl
lea
ja
call
movsbw
not
lea
movzbw
mov
call
pushf
call
dec
sahf
add
jbe
lahf
sub
inc
out
pop
xor
push
cmp
push
cli
push
mov
movsl
or
jnp
bound
push
popl
je
pop
mov
imul
mov
js
loope
shll
inc
out
jg
shll
mov
movsl
popa
xor
adcl
pop
notb
aas
or
je
pushl
lea
jae
pushf
pushf
lea
jmp
jns
lret
or
scas
or
dec
cmp
xor
jnp
outsb
add
pushf
mov
lret
xlat
loop
xchg
jno
sub
dec
es
inc
hlt
mov
stos
jecxz
mov
pop
adc
fcmove
mulb
scas
xchg
xor
fistpl
ljmp
add
out
test
sbb
xor
jno
dec
loope
sub
shlb
push
jae
outsb
jle
ss
test
dec
stos
into
xchg
xchg
lods
jns
mov
dec
call
mov
movsb
pop
leave
lret
into
lcall
movsb
iret
aad
rcrb
into
mov
lcall
pop
iret
into
aad
fwait
movsb
pop
int
lcall
iret
pop
aad
movsb
pop
movsl
ror
cwtl
int3
mov
iret
mov
lret
cwtl
lret
rcrb
lret
push
popa
repz
jp
jbe
add
out
pop
sti
shrl
add
or
jecxz
xchg
push
ret
insb
repz
inc
je
and
sub
enter
pushw
lahf
pop
jg
mov
dec
lods
out
jnp
fistps
cmp
mov
dec
pop
es
sbb
mov
push
in
or
xor
fdivs
fstl
sahf
jo
js
push
push
mov
scas
imul
mov
ret
aam
inc
inc
incl
jmp
jmp
push
lea
je
cmc
sub
call
inc
pushl
inc
movb
lea
jmp
lea
pusha
clc
call
mov
cmc
shl
add
btr
ror
mov
test
pusha
add
xor
movl
bsr
btc
bswap
mov
sub
stc
call
ret
or
imul
sub
mov
imul
ds
cmp
loopne
and
jg
sti
js
les
pop
ljmp
and
scas
test
aam
shlb
shrl
or
das
xor
xor
sarb
out
dec
xlat
mov
arpl
jle
inc
and
test
push
pop
mov
popf
mov
add
cmpsl
pop
push
cs
test
push
inc
shl
cmp
xchg
mov
rcr
bt
inc
mov
adc
shl
cmp
sub
mov
cmc
jmp
mov
and
lcall
stos
jne
and
lcall
stos
jb
push
push
lcall
stos
sarl
cltd
xor
cmpsl
lock
add
adc
cmp
dec
jno
fnstsw
cltd
movsl
or
stos
lods
jl
jle
leave
pop
jp
sbb
lock
setp
or
xchg
and
lcall
lcall
arpl
mov
stos
xchg
jl
insb
lcall
cmpsl
cwtl
jl
hlt
lcall
mov
lcall
test
lcall
mov
jl
lcall
pop
jno
repz
lcall
cwtl
jno
sahf
jl
and
inc
pop
pop
sbb
in
jl
das
lcall
popf
or
add
loopne
enter
jns
inc
lcall
popf
add
imul
mov
stos
add
lcall
stos
mov
cltd
cmp
inc
sbb
sbb
lcall
lea
jl
sbb
cmp
jno
bnd
lcall
js
mov
jl
lcall
loopne
cltd
adc
lcall
mov
jl
lcall
js
cmpsl
stc
jl
repz
test
lcall
lcall
out
push
lock
or
and
lcall
stos
leave
jl
ds
mov
jl
lcall
add
icebp
jl
out
cltd
js
inc
lods
add
mov
inc
mov
mov
jl
lcall
cmp
ljmp
out
mov
jno
out
jl
or
and
pop
jl
lods
cltd
icebp
mov
cmpsl
cwtl
jl
enter
xchg
inc
fdivs
jl
negl
add
fnstcw
lcall
test
cltd
sub
push
mov
jno
cmp
and
lcall
mov
jl
lcall
pop
jno
into
jl
mov
in
adc
jno
add
lock
insl
daa
lea
ja
pushf
call
pushl
cmpb
pushf
pusha
lea
jne
shr
ja
mov
mov
test
add
pusha
test
movzwl
cmp
shr
mov
stc
cmp
add
pushf
movb
mov
cmp
test
call
pusha
pushl
push
imul
bt
jmp
pop
pushf
pushf
mov
movl
jmp
test
repnz
movw
lea
jbe
push
lea
jne
inc
jmp
cmp
add
pushf
pushf
pusha
mov
push
push
lea
jmp
repz
cwtl
fisttpl
xchg
mov
adc
in
test
jo
mov
mov
jmp
pop
cmc
mov
mov
aad
push
sbb
mov
into
cmp
add
add
pop
fbld
icebp
jmp
push
or
pop
jbe
adc
int
push
gs
pop
xlat
xchg
sub
testl
inc
call
call
lea
jb
bt
cmp
call
push
pusha
movb
movl
pushf
movl
pusha
lea
jmp
add
dec
gs
popa
addr16
outsl
js
add
decl
leave
call
pusha
pushf
lea
call
push
jmp
test
adc
mov
sbb
xchg
fwait
addr16
shl
sub
ja
inc
loop
jb
cmc
sti
lahf
sahf
js
jl
xor
push
ljmp
adc
sbb
scas
cmc
or
test
lds
int
pop
es
dec
cmp
inc
ss
inc
push
mov
jo
sub
xchg
inc
rclb
xor
or
in
mov
pushf
mov
lea
je
cmp
sub
cmc
cmp
clc
cmp
cmp
pushf
pusha
lea
jmp
add
loope
jbe
popa
or
xchg
repnz
jno
repz
subb
ficomps
jb
lret
adc
mov
jne
xchg
mov
mov
in
push
xor
mov
mov
pop
hlt
xor
sbb
leave
mov
pop
in
and
out
xchg
bound
cwtl
bswap
fimull
pop
mov
push
add
ds
and
inc
mov
jbe
jne
mov
xchg
fs
int
pop
xor
mov
clc
or
adc
inc
mov
dec
xchg
push
inc
cmc
xlat
mov
jbe
insb
cld
pop
dec
cmp
cld
push
mov
adc
aam
jmp
pop
outsb
in
sbb
mov
pop
jo
and
in
xchg
pusha
push
pop
enter
mov
inc
iret
or
push
sub
dec
xchg
leave
call
push
push
inc
push
xor
cs
insb
add
pop
cltd
movsbl
mov
lea
mov
movl
movl
mov
jmp
mov
pusha
aam
pop
mov
sub
jge
cmc
cmp
push
shl
movw
pushf
lea
je
pusha
pusha
call
movzbl
bswap
movzwl
not
pop
lea
jmp
scas
sub
mov
mov
cmpsb
mov
mov
mov
js
push
js
xor
ss
fstpt
ret
cmp
mov
sub
cmpl
into
sub
mov
push
enter
sub
cmp
js
xchg
mov
or
jbe
int3
jnp
jmp
xchg
jp
imulb
cld
sahf
or
adc
shlb
and
xchg
icebp
rcr
push
test
call
lea
jne
shl
inc
rcr
mov
call
test
xchg
adc
xchg
mov
mov
ss
fsts
pusha
sub
ja
movsl
xor
jl
adc
int
xor
add
jbe
mov
data16
pop
shl
mov
js
fs
out
in
jb
stos
sahf
push
mov
lret
mov
loope
arpl
movsb
and
or
push
add
shll
movsl
sti
cmp
roll
repz
loop
inc
sahf
outsb
adc
jno
mov
adc
ljmp
insl
jp
mov
outsl
mov
add
adc
lcall
jg
add
push
icebp
call
fcomi
fildl
or
shr
lods
enter
lock
std
std
xchg
xchg
popa
out
aad
in
jle
popa
icebp
lret
mov
mov
pop
divb
xor
cmp
lods
sub
mov
dec
inc
add
aam
pop
int3
add
jecxz
sub
test
pop
fwait
adcl
mov
in
xchg
push
lods
test
mov
cmp
xor
add
jmp
sbb
inc
sbb
sub
into
jmp
mov
and
mov
punpckhbw
push
aad
pop
xor
push
sub
ss
lods
jg
insl
rcrl
push
std
xchg
out
gs
push
xchg
sti
mov
imul
jmp
mov
lahf
jo
call
shrb
push
mov
inc
and
sbb
push
inc
ljmp
mov
pop
repz
mov
lret
in
push
cli
mov
jnp
fdivl
sbb
cmp
call
les
inc
and
cwtl
sbbl
add
inc
and
pushf
pushl
ret
jne
sub
incb
std
stc
cs
imul
addr16
int3
je
sub
sbb
fsubs
lea
jbe
fsubrl
mov
out
loop
out
das
cltd
adc
push
call
mov
mov
repz
add
sub
dec
stos
jnp
cli
adc
mov
xor
or
stos
cs
lahf
push
inc
xchg
xor
pop
mov
and
xlat
pushf
out
push
jbe
xor
in
ss
icebp
jecxz
fwait
shl
xchg
xor
popf
loopne
cs
ja
push
test
adc
or
pop
pop
jo
fisubl
into
testb
repz
jl
ljmp
aam
sti
cmc
pusha
sub
push
outsb
cld
in
imul
mov
and
jbe
testl
imul
add
cmp
popa
sub
push
test
pop
and
xor
mov
arpl
fcomps
cmp
pushf
push
or
jmp
fmul
push
push
jbe
sub
loop
int3
hlt
test
dec
mov
mov
andl
fidivl
jg
nop
js
cmpsl
sti
jg
cmp
js
pop
imul
in
call
hlt
ret
and
out
scas
sahf
lret
mov
xchg
inc
sub
mov
push
xchg
rolb
jae
outsb
or
xor
lods
push
jbe
mov
mov
mov
mov
add
outsb
jnp
out
dec
lahf
mov
cwtl
mov
in
mov
sub
cmc
jmp
fcoms
ret
punpcklwd
dec
push
mov
push
jbe
jecxz
cmp
icebp
int
dec
pop
hlt
xchg
push
movsb
xor
sti
sbb
pop
add
xor
add
call
divl
ret
jb
jle
imul
or
fidivrl
cld
sbb
stos
pop
mov
mov
or
mov
loopne
hlt
cmp
cmc
adc
int
jle
test
cmpsb
gs
and
sbb
jbe
lret
mov
into
inc
or
cmp
ficoms
pop
adcb
cmp
cmp
xor
je
aaa
cwtl
je
sub
test
gs
repnz
cmp
inc
mov
pop
jnp
xchg
movsl
inc
inc
cmpl
in
mov
loopne
sbb
push
and
pop
repz
add
or
div
ss
push
cwtl
mov
jle
push
xchg
sub
sbb
repz
hlt
push
cmp
insl
mov
mov
dec
mov
inc
xor
sbb
aam
cmp
sub
mov
inc
xchg
ljmp
aam
and
pop
jnp,pn
aam
jge
lods
in
out
sub
sbb
shlb
repnz
cld
and
and
dec
inc
sbb
lcall
mov
inc
cmpsb
les
and
nop
sbb
jmp
pusha
add
push
lea
jmp
mov
jmp
mov
lahf
cwtl
pushf
not
lea
jmp
bt
cmp
pusha
lea
jbe
and
sar
sub
btc
lea
cmc
mov
stc
or
bsf
bsf
mov
bswap
cmc
xchg
add
shld
xor
shr
dec
mov
not
jmp
lea
push
jmp
xor
clc
stc
jmp
pushf
mov
pushf
push
add
pushf
movw
pushl
pusha
lea
jmp
call
pusha
lea
jmp
call
mov
movl
pushl
popl
movb
movw
push
movw
lea
jmp
call
mov
pusha
pusha
stc
add
mov
pushl
lea
jmp
jmp
movw
pushl
popl
push
push
lea
jmp
movzbl
call
push
lea
jmp
xor
lea
add
movzbw
dec
xor
stc
stc
rol
btr
ror
bts
push
neg
shrd
dec
btr
rcl
xor
jmp
adc
or
adc
or
adc
or
mov
adc
or
adc
adc
adc
add
enter
push
adc
push
rclb
sub
inc
adc
or
adc
push
sub
sub
adc
push
ret
adc
sub
ret
adc
sub
outsb
adc
adc
push
adc
or
sub
ret
sbb
pop
adc
push
popa
adc
pop
xchg
adc
push
pop
adc
adc
sub
adc
or
adc
push
popa
adc
push
dec
adc
push
ret
adc
sub
pop
adc
or
adc
adc
adc
or
pusha
adc
or
adc
adc
adc
or
adc
adc
adc
or
sub
adc
or
adc
push
movups
sbb
sub
sub
adc
or
adc
pop
enter
je
sub
mov
sub
adc
sub
lds
sub
adc
sbb
sub
sub
xor
sub
pusha
adc
sbb
adc
adc
sub
mov
adc
or
adc
movhps
sub
pop
adc
push
dec
adc
movhps
sub
mov
sub
pop
adc
or
sub
pop
adc
or
adc
movhps
sub
adc
movhps
sub
je
sub
pop
adc
add
pop
adc
or
adc
adc
adc
movhps
sub
pop
adc
or
adc
movhps
sub
xchg
adc
movhps
sub
pop
adc
or
adc
movhps
sub
fcoml
sub
iret
adc
adc
sub
iret
adc
adc
sub
movups
adc
adc
or
adc
push
dec
adc
adc
adc
adc
adc
or
iret
adc
adc
adc
push
ret
adc
adc
adc
adc
adc
adc
or
adc
adc
adc
adc
adc
adc
adc
or
adc
sbb
iret
adc
adc
sub
iret
adc
adc
sub
push
adc
adc
adc
sbb
sub
and
sub
ret
adc
adc
add
mov
adc
pushl
adc
pop
fcoml
sub
adc
adc
adc
adc
sub
adc
sbb
sub
dec
adc
or
adc
push
adc
pop
mov
adc
sbb
sub
sub
sub
rclb
sub
xchg
adc
push
adc
adc
sub
dec
adc
adc
adc
pop
mov
sub
push
adc
or
adc
push
sub
sub
adc
or
sub
outsb
adc
or
adc
pushl
adc
or
adc
or
adc
or
adc
push
popa
adc
adc
adc
adc
sub
push
adc
pop
enter
out
adc
adc
sub
rclb
sub
ret
or
adc
or
adc
pop
enter
xor
adc
or
adc
adc
sub
pop
adc
push
pop
adc
pop
mov
adc
push
rclb
sub
mov
sub
push
adc
pop
mov
sub
sub
sub
ret
or
adc
adc
adc
sbb
pop
adc
or
bound
sub
adc
adc
adc
pushl
adc
sbb
sub
popa
adc
push
popa
adc
or
adc
adc
adc
or
adc
adc
adc
adc
adc
or
adc
adc
sub
adc
or
sbb
sub
push
adc
add
dec
adc
pop
xchg
adc
adc
adc
adc
adc
pop
xchg
adc
pop
mov
mov
pushl
mov
pushf
pushf
popl
call
call
movzbw
mov
bt
pusha
add
pushf
pushl
call
lea
jnp
pusha
pushl
popl
movb
pusha
lea
jmp
push
jmp
mov
movw
jmp
adc
inc
movzbl
sar
not
shl
add
push
pusha
inc
bsr
xor
jmp
lea
jne
bts
bts
xor
xorb
pusha
lea
setnp
mov
pusha
mov
lea
jmp
movb
clc
not
test
neg
pushf
sub
jno
add
push
pushf
pushf
mov
call
pop
pusha
movzbw
mov
not
pushf
call
pusha
add
pushf
pushl
lea
jmp
jmp
mov
pushf
pushf
call
movb
pushl
popl
pushf
lea
jmp
xor
dec
sub
adc
mov
bt
clc
add
jmp
cmp
pusha
pushl
popl
push
bt
add
clc
stc
cmc
bt
pushl
popf
pusha
pushf
movb
lea
jmp
pushf
shl
push
push
mov
jmp
pusha
jmp
lea
jb
pusha
pushl
popl
pushf
pushl
lea
jmp
pusha
inc
push
cmc
bt
bt
xor
clc
movb
cmc
sub
cmc
call
mov
mov
pusha
mov
pushf
lea
jmp
push
pushf
stc
mov
pushf
cmc
test
sub
call
pusha
pushl
popl
movb
mov
pushf
lea
jmp
inc
not
shl
mov
sub
xor
btr
cmc
rcr
btc
rol
or
bswap
not
add
bswap
shr
xor
mov
not
lea
jmp
bswap
movsbw
mov
pusha
movl
call
pusha
stc
add
pushl
mov
push
push
pushf
inc
call
add
call
pushl
popl
push
pushf
pushf
pusha
lea
jmp
pusha
test
sub
cmp
pushf
mov
add
pushf
call
bt
add
pushf
push
lea
jbe
push
mov
movb
push
pushf
push
lea
jmp
rol
shld
mov
test
stc
add
push
push
lea
jmp
add
pusha
lea
jmp
cmc
or
das
mov
pusha
bt
cmp
jmp
shl
rol
rol
mov
clc
clc
push
add
mov
pusha
pushf
push
lea
jmp
push
call
sar
rcl
stc
mov
cmp
call
setle
add
btc
bswap
mov
cmc
add
push
push
pusha
pushf
mov
push
call
rcr
mov
test
bt
stc
clc
add
push
mov
mov
stc
xor
stc
test
jmp
push
shrd
cbtw
or
mov
cmc
sub
call
movb
mov
pushl
lea
jmp
sub
bt
call
call
shr
clc
push
pusha
or
cmp
jmp
mov
jmp
pushl
bswap
cmp
test
add
jno
add
pusha
call
pushf
push
mov
pusha
push
lea
jmp
jmp
pushf
popl
call
pushf
pushf
decl
pushl
call
cmc
clc
sub
movb
clc
cmp
clc
xor
stc
stc
cmc
xor
push
inc
call
push
pushl
popl
pushf
movb
push
movb
lea
jmp
xor
mov
jmp
mov
pushf
pushf
pushf
lea
jmp
push
jmp
jmp
mov
pushl
inc
test
xor
stc
jmp
bt
bt
shrd
push
push
pushl
call
mov
lea
jmp
stc
xor
mov
movzbw
jmp
shr
call
lea
ja
pushf
pusha
call
inc
bsf
xor
shl
movzbl
neg
mov
pusha
bswap
clc
add
movb
pushf
pushf
jmp
movsbw
mov
cmp
add
push
movb
pushf
pushf
lea
jmp
xor
mov
call
cmpl
call
shr
xor
xor
mov
push
pusha
push
add
pushf
pushf
pushf
mov
lea
jmp
lea
jp
pusha
pushf
popl
call
pushf
pushl
popl
mov
push
lea
jmp
bswap
mov
stc
sub
call
pushf
mov
pusha
pusha
pushf
lea
jmp
push
movw
mov
push
pushf
push
pushf
popl
call
mov
pushf
pushl
ret
test
pushf
add
call
cwtl
cmp
cmc
movb
bt
sub
mov
lea
push
pushf
push
pushl
mov
push
pushf
mov
movb
lea
jmp
shr
shrd
daa
push
movzww
stc
jmp
sub
movw
jmp
bt
call
xchg
pushf
mov
pusha
setne
movw
mov
push
jmp
movzbw
lea
mov
xchg
push
pushf
xchg
seto
push
mov
mov
mov
repz
popl
bt
stc
bts
jmp
pushf
pusha
lea
jmp
pushf
pushf
popl
jmp
sub
lea
jb
push
mov
movw
mov
push
lea
jmp
inc
jmp
call
jmp
bts
or
rdtsc
push
sub
push
push
call
jmp
push
mov
jmp
push
test
movzbw
sbb
movzbl
cmc
cmc
call
sbb
mov
jmp
pushl
popl
pusha
lea
jmp
test
test
stc
add
pusha
xor
call
btc
neg
btr
neg
rol
add
add
btr
mov
mov
push
add
push
mov
push
mov
movb
mov
lea
jmp
mov
test
bt
push
add
jmp
lahf
mov
clc
sub
pushf
pusha
pushf
mov
pushl
push
lea
jmp
mov
pushf
lea
jmp
call
xor
movzbw
xor
movsbw
setnp
inc
bts
push
cmc
stc
ror
neg
or
btc
not
xor
call
pusha
not
shl
mov
or
add
mov
mov
push
jmp
cmc
mov
bt
cmc
sub
jmp
bt
movb
bt
not
call
mov
movb
lea
jmp
movsbw
shl
mov
stc
test
clc
sub
pusha
cmc
mov
pusha
bswap
bt
push
pushf
add
call
bt
jmp
mov
push
jmp
mov
mov
mov
pushl
ret
pushl
mov
push
lea
jmp
mov
movb
lea
jmp
movw
lea
je
bt
xor
clc
bt
bt
xchg
stc
jmp
pushf
lea
jmp
stc
bsf
notl
stc
jmp
stc
sub
cmp
shr
push
jmp
pusha
mov
cwtl
push
movw
mov
pushl
call
bts
mov
clc
bt
call
pushf
popl
pushf
pushf
push
pushl
popl
pusha
mov
mov
push
lea
jmp
cmp
push
pushf
jmp
mov
movb
push
lea
jmp
rol
rol
rcl
call
pushf
push
mov
push
push
lea
jmp
add
push
pushl
push
pusha
lea
jmp
call
sub
clc
test
stc
shr
pusha
pushf
pusha
mov
jmp
push
bsr
pop
shld
sub
shld
neg
btc
rol
movsbw
shld
sbb
and
shld
mov
pusha
push
sub
jmp
lea
jmp
call
jmp
cmp
mov
cmc
add
push
pushl
push
mov
lea
jmp
mov
push
lea
jmp
jmp
push
call
mov
mov
jmp
pushl
popl
mov
lea
jmp
push
stc
sub
movw
pushf
mov
pushl
lea
jmp
lea
jmp
pusha
pushf
pushf
mov
movb
push
pushf
lea
jmp
and
push
aad
lea
pushf
cmp
call
mov
call
pushf
popl
mov
call
xor
jmp
cmp
stc
clc
add
push
pushf
mov
pusha
lea
jmp
push
call
pushl
popl
mov
lea
jmp
movsbw
pusha
sets
mov
pusha
mov
jmp
das
shld
mov
jmp
call
setnp
not
mov
pusha
call
lea
cpuid
pusha
jmp
pushf
pushf
jmp
push
inc
pushl
lea
jns
push
decl
pusha
lea
jne
jmp
call
lea
jmp
pusha
movzbw
sub
btc
rol
neg
stc
rcr
rol
bsf
neg
and
rol
stc
mov
test
add
pusha
pushl
push
call
rdtsc
mov
aam
pop
sar
sar
lahf
pop
push
cltd
mov
ror
pushl
popf
rdtsc
pusha
cwtl
mov
pop
lahf
mov
bswap
mov
lahf
mov
bswap
sete
mov
setae
not
not
pushf
mov
bswap
jmp
push
test
shl
pushl
call
mov
mov
pushl
popl
push
pushf
mov
lea
jmp
movb
stc
not
test
sub
pusha
movb
and
jmp
pushf
sub
cmc
pushf
mov
cmc
clc
call
neg
clc
dec
shr
mov
shl
jmp
call
pusha
pushl
popl
push
pushf
lea
jmp
pusha
pushf
popl
call
call
pusha
pushf
inc
cmp
cmc
neg
stc
pushl
bt
xor
bt
test
cmp
test
sub
jmp
mov
push
lea
jmp
pusha
call
pushl
pusha
pushf
popl
call
lea
jle
test
sub
pusha
pushf
pusha
mov
pushf
lea
jmp
cwtl
sets
pushf
mov
pusha
mov
mov
pushf
mov
pushf
mov
push
lea
jmp
movb
pushf
popl
call
bswap
jmp
mov
bt
add
pushf
movb
pusha
mov
push
lea
jmp
ror
shld
bt
mov
pushf
add
mov
shl
xor
lea
shl
bsf
rcr
setnp
mov
clc
clc
clc
pushf
shl
stc
push
call
push
call
pushl
popl
mov
pushf
lea
jmp
clc
add
mov
btr
mov
pusha
jmp
pusha
mov
call
push
mov
shr
clc
mov
sbb
or
mov
stc
push
bt
add
mov
jmp
pushf
pusha
xchg
pushl
call
rcr
xchg
or
push
mov
bt
sub
mov
call
mov
std
mov
mov
pushf
std
cld
call
call
pusha
mov
lea
jmp
call
xchg
pusha
bswap
jmp
clc
rol
bsr
mov
call
clc
ror
movb
bt
neg
test
pusha
pusha
xor
cmc
cbtw
cmc
stc
stc
cwtl
jmp
jmp
call
call
lea
jmp
jmp
jmp
pushl
popl
pusha
push
lea
jmp
movb
jmp
dec
btc
not
shr
mov
cmc
mov
jmp
jmp
shr
mov
or
bts
mov
cmc
add
push
mov
mov
lea
jmp
call
btc
sbb
or
mov
clc
jmp
bt
test
test
call
pushf
pushl
popl
movw
movl
mov
mov
lea
jmp
pushf
or
call
pushf
push
pushf
popl
push
call
pushf
jmp
mov
mov
inc
mov
bt
sub
clc
shl
pushf
mov
movb
call
call
mov
mov
mov
lea
jmp
mov
mov
mov
movw
movw
lea
jmp
pusha
sub
jle
sub
push
pushl
xchg
push
movl
pushf
mov
mov
pusha
push
pushf
push
pushl
ret
mov
pusha
mov
pushl
ret
add
movb
lea
jmp
pushf
movl
mov
push
mov
push
movb
mov
pushl
pushl
ret
pushf
movb
pushl
popl
pushl
pusha
lea
jmp
push
xchg
pusha
jmp
adc
adc
mov
clc
sub
js
add
push
jmp
push
pusha
lea
jmp
cmc
call
pushf
pushf
push
movl
lea
jmp
shl
dec
bts
xchg
mov
and
bsf
mov
stc
bt
cmc
test
not
push
stc
clc
not
bt
and
jmp
call
btr
sub
cmc
bts
mov
stc
cmc
pusha
add
pushf
push
mov
push
lea
jmp
mov
pushf
pushf
push
pushf
popl
call
bt
jmp
pushl
popl
pushf
pushf
mov
lea
jmp
sub
call
push
jmp
or
bswap
pushf
bt
mov
sar
mov
pusha
test
sub
jmp
stc
call
mov
not
pushf
mov
setbe
pusha
movsbw
pushf
xchg
call
lea
ja
das
btc
cmp
mov
movzbw
shr
lea
shr
sub
xor
xchg
dec
lea
and
inc
mov
and
movzbw
bts
sub
sub
mov
pushf
pop
mov
mov
movzbw
mov
pushf
cld
mov
movzbw
bswap
push
call
not
mov
pushf
pushl
ret
rcl
push
movsbw
mov
jmp
cmc
add
movb
mov
movb
lea
jmp
mov
setns
sbb
rol
mov
clc
jg
stc
bt
sub
stc
call
mov
push
pusha
lea
jmp
ror
stc
bt
test
pusha
xor
jmp
stc
bt
sub
call
test
push
push
sub
pushf
lea
jne
bt
call
pushf
jmp
add
add
mov
cmc
stc
bt
sub
pushf
cmc
pusha
add
jbe
shl
jge
mov
call
shrd
ror
daa
add
mov
sbb
lea
mov
stc
cmc
cmp
add
call
not
pusha
inc
shr
bsf
not
jmp
movb
add
call
pushf
movb
lea
jmp
mov
mov
pushl
pushl
lea
jmp
call
call
clc
sub
call
pushf
popl
mov
mov
pushf
pushl
popl
mov
lea
jmp
clc
bt
mov
jmp
call
push
jmp
pushl
mov
pushf
pushf
popl
pushf
pushl
popl
pushf
push
pushl
pushl
lea
jmp
mov
push
pushf
lea
jmp
test
push
add
jmp
mov
jmp
jmp
mov
push
pushf
pushf
lea
jmp
bt
sub
pushf
movb
call
mov
pushf
lea
jmp
shl
movsbw
and
btc
mov
btr
shl
mov
push
lea
jne
add
push
jmp
mov
push
mov
mov
mov
lea
jmp
pushf
sub
push
pushf
pushl
pushf
mov
pushf
mov
mov
lea
jmp
pushf
popl
jmp
pushf
pushf
mov
mov
lea
jmp
shld
movzbl
bt
pushl
jmp
lea
call
pushf
call
mov
pushl
mov
pushf
mov
lea
jmp
std
jmp
inc
adc
mov
movzbw
mov
pusha
pushf
add
pusha
push
pushf
mov
movb
pushf
movb
movb
lea
jmp
mov
cmp
bt
bt
sub
pusha
stc
test
call
bswap
mov
pushf
lea
jmp
xchg
jmp
mov
lea
jne
call
movsbw
bts
add
lea
clc
ja
stc
mov
lea
xor
bt
bswap
push
stc
rol
bts
add
shl
xor
bswap
pusha
bswap
inc
neg
adc
movzbw
xor
test
movzbl
not
bt
mov
pushf
call
mov
movb
mov
pusha
mov
pushf
lea
jmp
pusha
mov
pushf
mov
movb
mov
pushl
lea
jmp
mov
jmp
mov
lea
jg
push
pushf
popl
pusha
pusha
pushl
popl
mov
lea
jmp
inc
mov
shl
clc
mov
sub
adc
add
mov
cmp
add
jmp
push
lea
jmp
movw
xor
stc
stc
ror
jmp
pushf
popl
call
pushf
pusha
jmp
call
pushl
popl
pushf
pusha
push
pushf
lea
jmp
or
pushf
call
sub
ja
pushf
add
pusha
call
pushf
popl
push
movb
pushl
popl
pusha
mov
lea
jmp
pushf
popl
jmp
pushf
popl
mov
mov
push
pushl
popl
pushf
mov
pushf
pushf
lea
jmp
cmp
mov
shr
bt
mov
pushf
stc
test
pushf
not
call
rol
bt
bt
movzbl
push
bt
stc
xor
jmp
add
pusha
mov
pushf
popl
pushl
jmp
shl
setno
mov
pushf
sub
pushf
cmp
clc
and
jmp
rep
movzbw
movsbl
clc
mov
cmc
mov
mov
pushf
cld
movb
pushl
popf
pushf
mov
mov
lea
jmp
mov
jmp
pushf
pushf
popl
pushf
jmp
clc
call
inc
shl
mov
jmp
pushf
lea
jne
and
mov
pusha
cmc
clc
and
stc
push
jmp
push
cmp
cmc
jmp
cwtl
lahf
pushf
mov
pusha
pushl
mov
jmp
rcl
not
clc
mov
pushf
rcr
add
jmp
add
push
jmp
shld
pusha
mov
pushf
lea
jno
push
pushf
popl
pushf
push
call
test
sub
call
mov
divl
jmp
clc
pushl
stc
mov
push
ror
mov
movzbw
lea
rcr
bt
bswap
bswap
ror
bts
neg
bsf
sub
sbb
mov
bswap
sub
not
btr
shrd
mov
cmc
mov
bts
call
